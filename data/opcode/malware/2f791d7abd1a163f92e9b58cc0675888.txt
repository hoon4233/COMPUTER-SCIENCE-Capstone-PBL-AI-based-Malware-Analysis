aas
fmul
mov
mov
xor
cwde
sti
xchg
enter
pop
jns
cmp
dec
fadd
fs
xor
mov
xlat
test
in
(bad)
sbb
or
out
ds
shl
pop
xor
pop
jmp
jmp
dec
fsub
loop
call
jne
jb
retf
ror
loop
add
in
shl
daa
fxsave
pop
dec
fs
imul
jae
adc
fimul
ret
pop
mov
mov
sbb
mov
and
js
(bad)
sbb
sbb
out
lea
(bad)
scas
retf
cmp
push
dec
scas
add
pop
retf
pop
retf
icebp
(bad)
pop
or
or
xchg
in
scas
pop
loopne
out
inc
in
xchg
movs
mov
push
movs
loope
dec
mov
gs
out
or
jecxz
xchg
dec
stc
mov
add
add
ja
pop
movs
test
pop
cld
add
jb
mov
push
xor
xchg
or
cmc
cli
rcr
push
movs
fdiv
dec
dec
push
push
push
jecxz
pop
rcr
inc
jecxz
fbstp
data16
daa
jb
std
pop
and
rcr
rcr
cmp
pop
cvtpi2ps
mov
out
into
icebp
pop
imul
dec
mov
sbb
mov
je
fidivr
cmp
add
jbe
(bad)
fistp
pop
repnz
(bad)
outs
jecxz
push
fwait
popa
adc
pop
shl
nop
pushf
sub
aaa
hlt
mov
mov
shr
sub
inc
cs
push
retf
gs
clc
leave
xlat
cwde
pop
mov
stos
cld
adc
call
mov
jmp
mov
mov
mov
jmp
jno
mov
xlat
adc
mov
pop
add
hlt
pusha
push
adc
stos
fsubr
cmp
pop
jmp
sub
test
(bad)
out
outs
dec
mov
mov
inc
sbb
punpckhdq
xchg
mov
in
inc
jno
leave
jmp
pcmpgtw
jns
fadd
jmp
int
xlat
ja
pop
pop
nop
fdiv
xlat
and
cmp
sbb
add
mov
jnp
hlt
lahf
mov
jmp
popf
out
jp
imul
mov
dec
in
add
(bad)
sbb
sub
push
inc
add
mov
ficom
aad
dec
setne
icebp
enter
jecxz
loope
iret
or
out
in
loop
xchg
fwait
push
sub
jmp
outs
mov
push
fmul
call
movs
push
fld
add
pop
mov
xlat
addr16
jno
jp
pop
xchg
mov
jle
mov
div
mov
test
(bad)
out
cmp
adc
movs
xchg
xor
cdq
inc
call
cmp
mov
sbb
in
adc
arpl
cmp
xor
shl
stos
stc
fcmovbe
pop
int3
mov
lock
mov
dec
mov
mov
pushf
dec
add
mov
mov
sahf
pop
aad
or
ficomp
data16
sbb
and
test
scas
add
popf
mov
shl
mov
dec
push
(bad)
outs
pop
(bad)
xor
ror
sbb
dec
adc
push
cmp
cs
or
mov
or
dec
lahf
add
ins
and
iret
pop
stos
inc
cmps
or
pop
dec
daa
sub
sbb
or
(bad)
js
stc
pop
add
cmp
out
(bad)
and
or
or
xor
lahf
ins
sahf
std
xchg
jo
movs
add
sbb
out
fadd
inc
js
jbe
stos
mov
inc
add
shl
addr16
addr16
shr
js
xchg
hlt
xor
mov
je
into
fiadd
clc
rol
retf
xchg
or
mov
mov
dec
call
cmc
adc
iret
in
inc
adc
sahf
jp
fwait
jbe
dec
sub
repz
add
and
pop
js
mov
outs
or
ja
add
sti
stc
mov
sub
outs
jno
lods
xchg
sub
xlat
jnp
(bad)
ds
mov
xor
mov
sub
repz
fwait
repz
aad
loope
retf
sub
jo
jbe
dec
inc
inc
cld
xchg
inc
mov
mov
cmp
push
and
test
and
ror
in
mov
xchg
dec
cmps
mov
movs
leave
(bad)
dec
inc
dec
cli
pop
mov
mov
xchg
cmp
pop
cdq
inc
xchg
ins
sbb
cs
mov
stc
xor
stc
arpl
bound
das
jno
push
jge
out
or
push
test
jb
jb
fs
push
ds
in
in
int
dec
sub
add
adc
push
add
icebp
(bad)
adc
jb
jno
xchg
push
sbb
cmp
sub
ja
mov
fwait
outs
(bad)
inc
fdiv
arpl
neg
adc
cmp
aaa
dec
loop
nop
in
out
fdivr
into
xchg
out
mov
jb
cld
clc
sbb
lods
jge
push
lahf
adc
or
pop
xchg
pop
das
(bad)
cmps
sub
jmp
xor
mov
jg
mov
xor
fninit
movs
sub
pop
sbb
sub
jmp
mov
xchg
sar
pushf
xor
or
(bad)
ins
mov
sar
jg
xchg
and
add
dec
dec
sub
sar
mov
add
xchg
movs
mov
cs
mov
and
or
xchg
es
adc
or
test
shr
int3
loop
inc
adc
jno
inc
inc
test
and
mul
rcl
mov
xor
xor
(bad)
fnstcw
xchg
clc
dec
(bad)
jle
jmp
in
ds
in
xor
or
push
pop
in
fild
pop
sbb
hlt
xlat
add
in
sbb
in
pop
xor
cmp
call
(bad)
or
iret
nop
pop
stos
mov
call
jecxz
inc
repz
repnz
and
adc
mov
xchg
fmul
(bad)
mov
mov
or
sbb
test
das
xchg
aas
and
dec
shl
and
js
xchg
inc
jp
pusha
sar
test
jmp
adc
mov
push
mov
repnz
neg
add
pop
sahf
test
ss
pop
movs
lods
aad
mov
test
cmps
mov
out
arpl
pop
arpl
sub
ss
dec
cwde
sti
xchg
and
test
jmp
daa
xlat
adc
add
(bad)
out
xchg
(bad)
retf
int
and
les
ins
sbb
bound
jo
fisttp
pop
sbb
(bad)
out
sub
dec
arpl
pop
call
push
push
and
mov
inc
sar
inc
enter
out
cmp
rol
cld
jecxz
jg
aaa
mov
inc
es
pop
or
and
test
in
cmp
popf
fldenv
shl
or
xchg
and
hlt
jle
inc
xchg
test
mov
outs
retf
rol
movs
maskmovq
mul
arpl
jmp
adc
in
pop
sbb
xchg
mov
test
jae
pushf
xlat
mov
pop
(bad)
jecxz
xchg
out
iret
cmp
cmp
push
mov
in
ret
les
aas
xor
icebp
jecxz
xchg
pop
mov
not
call
sti
sbb
xor
xchg
cs
sar
fdiv
popf
cmps
(bad)
or
rcl
cmp
fucomip
sub
mov
inc
dec
dec
cdq
xchg
dec
dec
lods
cdq
rcr
das
push
loopne
xor
sahf
aas
xchg
and
dec
jne
jbe
test
sbb
dec
xchg
adc
mov
mov
es
or
mov
call
jmp
cld
in
cdq
jle
(bad)
out
jb
pop
xor
push
pop
fdivr
sbb
mov
cdq
jb
or
and
es
add
das
push
add
sbb
mov
in
(bad)
mov
add
sub
scas
out
mov
ficom
cwde
cli
pop
mov
test
call
jl
push
cmp
push
push
adc
arpl
movs
cmps
jo
mov
or
pop
cmp
mov
xchg
push
clc
and
push
rcr
ret
ror
pushf
pop
jecxz
popa
inc
xor
sub
cmc
(bad)
in
inc
arpl
mov
rol
and
xchg
int
fwait
dec
ds
sub
fs
pop
sbb
pusha
(bad)
jle
(bad)
int3
rcl
dec
(bad)
test
adc
adc
xchg
mov
jno
and
fldcw
xchg
fdiv
test
push
out
xchg
or
addr16
mov
shl
je
pop
(bad)
cdq
push
std
inc
add
pop
push
cmp
je
nop
int
mov
imul
in
test
add
sub
pop
push
sbb
mov
add
jmp
cmp
sub
push
sbb
and
sub
mov
xchg
add
out
or
or
popf
aam
pop
mov
adc
hlt
cmp
cmc
cmp
dec
aaa
imul
cmovbe
jle
lods
push
push
inc
jl
out
cmp
sbb
sbb
mov
or
push
gs
lahf
push
adc
sbb
jmp
ret
mov
add
outs
fidivr
add
xchg
movs
dec
add
push
push
cmps
or
call
xchg
or
imul
sbb
jae
mov
push
js
mov
je
movs
and
sbb
mov
int3
addr16
add
jns
xchg
cmps
xchg
xlat
pop
mov
sahf
jbe
and
sub
int
clc
fiadd
sti
dec
popf
or
add
jl
sub
enter
nop
xchg
push
push
sahf
shr
outs
in
mov
mov
in
in
lea
add
out
xor
mov
loopne
aas
out
ja
fstp
je
sub
and
inc
movs
cmps
lahf
or
add
sub
pop
repz
call
dec
lock
repz
and
add
inc
xchg
fsubr
enter
call
fisub
ficom
sahf
sub
pop
gs
mov
sbb
mov
dec
cmp
stos
jp
repz
dec
xchg
sbb
cs
jl
add
and
mov
jle
xchg
mov
repnz
fcomp
cmp
sahf
in
je
arpl
pop
jg
push
sti
test
aam
fs
sbb
or
daa
lods
enter
outs
lahf
and
adc
sbb
or
inc
xchg
nop
pop
pop
cs
pop
push
aad
jl
sbb
mov
out
test
dec
mov
xor
mov
sbb
push
out
adc
pop
and
pop
icebp
ret
xor
fdivr
mov
or
xchg
enter
repnz
mov
adc
cdq
xchg
call
xchg
pop
gs
sub
cdq
sub
daa
push
adc
fst
sbb
pop
pmulhw
pop
outs
fwait
pop
nop
pop
mov
jo
mov
mov
(bad)
push
mov
dec
jecxz
icebp
std
jp
fwait
jns
xchg
adc
fadd
push
nop
push
test
cli
dec
rcr
sbb
iret
mov
and
hlt
arpl
sbb
sahf
imul
repz
pop
aam
xor
pushf
lds
dec
mov
mov
push
lds
cmp
ret
test
test
cmp
rol
jae
mov
xlat
inc
mov
pop
dec
sar
(bad)
mov
xor
(bad)
jg
gs
add
xlat
hlt
jb
mov
sub
push
jno
ja
aas
cmp
xchg
mov
inc
ins
push
ret
mov
dec
xor
sbb
mov
mov
test
sub
mov
fwait
shr
jne
out
mov
arpl
mov
pop
aas
inc
cld
xchg
sahf
dec
clc
ret
ja
inc
add
mov
cld
cmp
sbb
ins
inc
retf
stos
jbe
jno
mov
ins
dec
rol
aas
and
adc
int
(bad)
(bad)
stos
(bad)
mov
xchg
mov
in
push
in
inc
gs
pushf
jne
push
call
aaa
cmp
and
sbb
jmp
and
fnsave
test
or
into
lds
int
jl
inc
sub
xor
cmc
adc
or
dec
add
push
or
imul
test
adc
sahf
xchg
movs
fs
add
cmps
push
mov
pop
in
pusha
sbb
sub
push
jbe
pop
ret
outs
adc
push
test
fisttp
ja
mov
dec
sbb
xchg
stos
sub
mov
jle
inc
dec
and
xchg
inc
jo
into
into
adc
and
inc
scas
sub
mov
mov
sbb
add
aad
xchg
mov
ins
jnp
push
jae
sub
in
pop
xchg
jo
sti
movs
out
shl
xchg
jmp
mov
(bad)
xor
shl
test
xchg
cwde
xor
fld
dec
ins
and
sbb
or
pop
xor
xor
cwde
and
or
pusha
pop
mov
push
fild
std
xchg
or
sbb
mov
and
jb
xor
mov
push
fcomp
dec
fdivr
add
fild
test
push
out
repnz
test
adc
not
cli
push
sbb
cwde
xor
lea
push
lods
inc
push
rcr
jno
aaa
add
enter
or
mov
test
jnp
ror
fld
inc
xlat
pop
xor
mov
sahf
adc
lds
dec
sahf
inc
or
int3
fdiv
icebp
in
ficomp
js
sbb
sub
push
ficom
mov
call
mov
clc
call
xchg
dec
push
shl
push
xor
cdq
ret
imul
inc
inc
test
out
and
push
fstp
fistp
pop
aam
mov
gs
pushf
inc
mov
mov
add
js
push
int3
sbb
push
push
sub
stc
scas
into
or
push
popa
mov
popa
inc
push
movs
sub
nop
add
xor
mov
adc
and
cmps
in
lods
jecxz
pop
dec
sti
cmc
cld
mov
dec
into
sub
js
push
xchg
pop
(bad)
fistp
jno
push
scas
push
inc
add
cmp
add
mov
or
and
add
ret
jp
out
pop
shl
out
add
adc
xor
mov
xchg
sbb
(bad)
sub
in
les
push
mov
inc
addr16
loopne
mov
mov
mov
xor
rcr
inc
mov
(bad)
cmps
push
out
sub
xor
vpackssdw
push
mov
aad
inc
pop
sbb
stc
sbb
iret
cmp
sahf
jne
jmp
dec
jmp
and
enter
sbb
inc
jecxz
pop
sbb
xchg
repz
pop
mov
(bad)
rol
add
dec
mov
inc
sbb
adc
repz
inc
shr
pop
jp
daa
int
xor
aam
stos
sbb
cmps
xchg
adc
and
jns
mov
fidivr
jmp
inc
adc
cdq
sbb
xchg
stos
or
xor
out
xor
sbb
sub
mov
shl
test
jg
cwde
inc
out
xor
test
test
pushf
jne
shl
mov
xchg
frstor
sbb
dec
retf
(bad)
xchg
ss
xchg
jle
cdq
mov
cli
xlat
(bad)
push
add
(bad)
sbb
mov
add
pop
jns
push
mov
daa
call
shr
push
cmp
sbb
add
adc
sub
pushf
gs
in
dec
les
(bad)
cwde
xchg
sar
pop
je
and
test
mov
stos
adc
sbb
and
mov
mov
scas
movzx
inc
dec
out
es
pushf
imul
in
loope
loop
fstp
push
out
pushf
cmps
(bad)
inc
pop
jecxz
movs
pop
pop
push
movs
fisttp
cmps
inc
or
dec
add
mov
fidiv
and
add
(bad)
fcom
loop
stos
inc
dec
scas
imul
lock
push
lods
jb
xor
scas
call
inc
lea
imul
mov
mov
pop
pushf
(bad)
fld1
inc
xor
mov
jmp
or
mov
aas
(bad)
das
ret
dec
popf
and
adc
cmp
sbb
mov
stc
mov
cmp
pop
js
ins
or
and
and
mov
cmps
cwde
sbb
scas
adc
inc
cmp
xchg
xlat
jg
mov
mov
fwait
jb
popa
call
std
cmps
test
stos
push
cwde
inc
enter
enter
shr
dec
ret
call
add
xchg
sub
dec
je
xchg
sub
daa
pushf
xchg
adc
fs
jecxz
retf
push
imul
outs
outs
pop
aam
xchg
lods
mov
mov
mov
and
adc
dec
push
ja
lds
repnz
add
cmp
sub
cmc
shr
mov
mov
int3
mov
arpl
sub
fadd
cmp
fisub
cmp
shl
cmp
retf
shufps
jne
movs
(bad)
mov
mov
pusha
inc
mov
les
sbb
out
(bad)
daa
push
xchg
xchg
xor
cmp
jle
jl
sbb
cmc
inc
out
sahf
outs
xor
out
ins
jmp
add
inc
shl
hlt
sbb
mov
mov
imul
outs
mov
mov
dec
cs
xor
shl
xor
and
inc
jl
push
and
ffreep
jg
(bad)
cld
mov
aaa
adc
add
push
or
cld
jp
pop
sub
mov
iret
sub
add
loopne
sbb
inc
sub
xor
pop
stos
sbb
push
mov
(bad)
dec
ret
adc
and
aam
push
int3
mov
add
or
aas
sbb
sahf
es
cmps
jmp
cli
arpl
hlt
push
push
push
test
mov
xor
pushf
sar
inc
(bad)
jns
call
adc
mov
mov
leave
loopne
and
test
cwde
out
pop
dec
inc
fwait
loop
call
dec
push
sub
lods
stos
inc
sub
mov
mov
jno
jmp
add
cwde
jmp
inc
cli
icebp
or
dec
add
call
fldenv
cmp
jb
jae
push
into
cmps
xchg
xchg
push
or
std
popf
xor
inc
inc
les
shl
call
adc
mov
mov
sub
push
pusha
or
jp
jno
(bad)
retf
lahf
mov
inc
push
sub
mov
or
adc
push
pusha
pop
add
ror
mov
dec
ficom
jbe
inc
and
pop
pop
mov
xchg
jmp
lea
and
sbb
mov
jno
out
sub
and
aam
pop
mov
(bad)
movs
vpcomud
adc
jge
jle
arpl
mov
adc
dec
ficom
mov
scas
pop
push
pop
int3
xsave
int
mov
add
out
mov
rol
sub
retf
pop
cdq
push
mov
and
inc
arpl
mov
div
in
pop
lea
(bad)
(bad)
int
retf
sbb
pop
add
xchg
int3
pop
ins
iret
mov
or
sub
xchg
dec
xchg
ja
cmp
icebp
xor
aad
mov
pop
(bad)
loope
stc
rcr
mov
sbb
and
mov
imul
sub
mov
inc
jg
jle
mov
je
lahf
mov
out
fdiv
push
repz
fwait
inc
jmp
push
outs
add
dec
nop
and
jl
sub
outs
leave
mov
mov
jbe
add
sbb
dec
dec
jbe
adc
xor
out
sub
push
mov
pop
add
pop
(bad)
jl
(bad)
lods
or
sar
xor
xor
mov
push
sbb
pop
inc
ins
jle
xor
aad
fwait
pusha
cmp
sbb
cmp
scas
and
cld
jnp
icebp
push
inc
xor
jne
mov
cld
push
fstp
call
cmp
sub
mov
lds
inc
fs
(bad)
loop
outs
mov
scas
xor
jp
xor
push
mov
sbb
loope
ret
push
rcr
or
sub
hlt
loopne
jno
inc
mov
in
inc
retf
mov
jg
dec
cli
jns
sub
push
jb
(bad)
mov
add
and
fldcw
loope
sbb
add
and
xlat
mov
jno
push
adc
push
mov
jbe
inc
xor
mov
bound
ss
out
jb
scas
in
pop
mov
inc
aam
pop
mov
xor
popa
repnz
xchg
xchg
mov
push
je
neg
dec
jecxz
push
inc
mov
sahf
adc
imul
inc
int
sub
pop
pop
ror
xchg
and
mov
lods
repz
jbe
mov
call
inc
pop
xchg
mov
cmp
mov
mov
mov
fwait
imul
scas
fwait
and
fs
pop
loopne
sahf
lock
dec
pop
mov
jle
pop
and
and
arpl
jb
sbb
es
aas
pop
daa
sbb
daa
dec
ror
sbb
dec
mov
push
fisubr
out
dec
adc
sbb
loopne
retf
mov
shl
ins
mov
dec
pop
mov
jle
lds
jle
inc
mov
addr16
xor
jne
xor
dec
xchg
arpl
aam
ins
adc
and
jnp
dec
outs
pop
in
jns
(bad)
pop
push
inc
pop
fnstsw
and
mov
jns
mov
xchg
mov
jne
adc
hlt
jmp
popf
clc
mov
mov
sar
and
cmp
scas
and
cmp
cmps
and
(bad)
repnz
cmp
mov
cs
push
add
mov
cmp
xchg
sbb
cmp
push
adc
clc
jle
pop
adc
sub
xchg
imul
sbb
mov
cmp
cld
dec
data16
sub
mov
sbb
and
mov
push
adc
cdq
push
sbb
inc
push
sbb
push
push
mov
push
add
xchg
adc
mov
test
push
test
test
pop
loop
mov
xor
cmp
lock
push
add
(bad)
outs
imul
add
lods
pop
mov
dec
dec
pop
loop
movs
jecxz
ds
pusha
(bad)
mov
dec
rcr
cmps
fcmovb
and
gs
cmps
add
movs
or
(bad)
repnz
dec
jne
push
and
mov
jno
iret
repnz
fs
and
and
lods
cmp
dec
and
jl
aaa
fimul
xchg
xor
xor
aaa
mov
dec
ficom
aam
add
sti
call
inc
jae
add
fstp
mov
xchg
mov
js
fldcw
bound
mov
iret
loop
cdq
test
jle
xlat
mov
mov
loop
mov
xor
xor
xchg
and
mov
stc
out
jae
outs
call
je
push
je
jp
jp
pop
sar
xchg
push
push
push
neg
enter
std
fstp
cmp
add
dec
mov
adc
sub
mov
add
dec
sbb
pushf
push
call
call
jle
and
or
mov
adc
(bad)
xor
xor
dec
cmps
dec
sub
jp
in
gs
xlat
out
sti
and
xchg
or
xor
jmp
sub
xchg
xchg
outs
mov
xchg
inc
cmp
test
xchg
cld
add
test
cmc
push
retf
icebp
push
mov
sbb
in
scas
push
mov
sub
adc
cmp
dec
xchg
jae
clc
fcmovbe
das
xor
(bad)
out
push
adc
sub
pop
jne
push
test
adc
mov
neg
xor
push
sub
adc
pop
into
adc
pop
das
bound
idiv
(bad)
adc
lods
jno
icebp
push
call
xchg
dec
mov
and
enter
div
in
imul
mov
aad
test
out
das
mov
ret
das
cmp
push
mov
das
fsubr
add
cld
adc
sub
sbb
xor
rol
imul
jne
rol
repnz
push
rcr
and
out
into
cmps
inc
dec
ror
daa
cmps
loop
out
popa
scas
sbb
aam
clc
xchg
fidivr
and
pop
push
cdq
enter
or
dec
xchg
jecxz
jbe
stc
lock
ss
add
jmp
and
adc
icebp
and
lods
jmp
ret
add
sar
add
outs
cmc
shl
call
sar
loopne
in
xchg
push
repnz
push
rol
jb
fld
int3
ss
addr16
hlt
test
cdq
and
xchg
jmp
sub
dec
jmp
xchg
pop
cmp
push
xor
sub
xor
push
xor
call
cdq
jmp
pop
leave
add
mov
mov
movs
fld
call
push
inc
dec
dec
xor
adc
sub
cmp
cmp
ret
ret
mov
inc
mov
sbb
out
cli
push
repnz
add
add
fistp
mov
xlat
add
cmp
fcomi
xchg
dec
repz
jg
adc
mov
lods
aam
test
unpcklps
lock
int
add
inc
mov
int3
stos
jae
(bad)
popf
mov
xchg
hlt
stos
dec
sbb
scas
xchg
add
add
xor
das
sub
adc
nop
inc
pop
lahf
push
sbb
mul
sub
add
mov
icebp
pop
div
sti
and
cmp
sbb
sbb
mov
sbb
out
leave
and
and
(bad)
bound
adc
cmps
sbb
ja
ins
stos
ja
sub
ja
xchg
fmul
cmp
jne
mov
cld
je
cld
cmp
xor
cmps
adc
dec
and
inc
add
out
lea
and
movs
or
jbe
cdq
loopne
sbb
popa
rcr
push
test
pop
xor
jae
mov
and
ins
and
or
push
retf
push
pop
jae
push
pop
outs
jno
push
sbb
fdivr
into
rcr
jae
or
mov
or
out
add
mov
fcmovbe
sbb
mov
ror
ror
or
xchg
fistp
pop
(bad)
aam
test
adc
push
cmps
push
dec
jmp
jbe
mov
lods
aam
inc
scas
sbb
push
icebp
loopne
mov
xor
cdq
adc
ret
cmp
pop
jmp
lock
cmps
pop
xchg
dec
ins
scas
inc
inc
int
and
int
jb
sub
xchg
popa
daa
into
out
dec
sub
sahf
imul
(bad)
push
add
xchg
sbb
sub
pop
lods
jmp
imul
add
in
jmp
popa
gs
sub
or
bound
cwde
cmp
mov
xlat
xchg
xor
rol
mov
add
pop
jl
xor
sti
dec
dec
dec
arpl
dec
shl
add
outs
sar
pushf
jmp
or
jmp
sti
stos
hlt
xor
jp
daa
push
mov
add
out
lock
or
xchg
push
push
sub
out
sar
xor
aad
xchg
sub
test
xchg
mul
enter
rol
test
js
fdivr
xchg
mov
shl
xchg
sub
pusha
add
aad
in
pcmpgtw
or
push
push
or
pop
outs
(bad)
out
mov
mov
retf
call
aad
imul
inc
sub
test
add
lahf
(bad)
out
sbb
mov
int
stos
inc
sub
jge
dec
sub
es
addr16
xor
inc
xor
dec
dec
(bad)
icebp
ret
dec
sbb
sub
in
or
fst
dec
(bad)
pop
mov
ds
push
call
fistp
(bad)
dec
sub
(bad)
daa
pushf
sbb
das
dec
in
dec
xor
pusha
push
sbb
push
hlt
out
dec
sbb
pop
call
and
stos
push
outs
mov
pop
cld
xlat
mov
jl
cmp
xchg
sub
out
xchg
(bad)
call
jb
aam
pop
xchg
stos
cli
call
add
mov
sub
cmp
push
inc
sbb
nop
and
mov
test
xchg
push
jmp
xor
cs
or
add
mov
call
fld
fisubr
cld
jmp
cmc
mov
add
jne
out
ror
arpl
mov
sbb
xchg
fwait
push
cli
fwait
repz
sub
inc
and
in
inc
inc
loopne
stc
xor
fist
je
das
iret
jo
loope
jns
scas
cwde
test
int3
sub
fisubr
cs
mov
pop
pmullw
call
es
push
out
lock
movs
(bad)
fsub
cld
int3
addr16
xchg
popa
fstp
in
ins
mov
nop
rol
or
hlt
cmc
xchg
xchg
mov
push
cmp
mov
jae
in
adc
adc
xchg
xchg
hlt
div
mov
mov
mov
pop
bnd
cmp
lods
push
rep
or
fist
movs
sar
inc
mul
aam
pushf
mov
call
adc
call
pop
push
jns
mov
(bad)
ds
or
fadd
(bad)
and
arpl
sub
or
sbb
mov
pop
push
jle
jnp
jns
daa
popf
jmp
cmps
inc
fsub
and
fsub
dec
(bad)
ins
sub
ins
jg
xor
pop
push
sub
inc
es
fwait
pop
adc
(bad)
push
or
mov
cwde
fisub
mov
call
sbb
push
repnz
mov
push
and
xor
push
fwait
jo
sbb
inc
add
mov
jns
(bad)
daa
into
push
in
jmp
sbb
scas
adc
hlt
add
(bad)
in
xchg
push
in
pop
mov
imul
(bad)
mov
or
scas
fwait
or
shl
adc
fistp
jecxz
xchg
and
es
xchg
cs
jb
inc
mov
xchg
in
in
into
in
out
test
out
mov
test
popa
into
push
je
fidivr
xchg
lock
and
scas
fldcw
adc
inc
sbb
xchg
stc
adc
(bad)
idiv
test
and
sti
adc
rcr
fwait
repz
mov
cmp
adc
inc
sub
pop
sbb
jo
add
and
sbb
xchg
xor
es
mov
shl
cdq
rcr
add
call
jns
push
mov
push
pop
aas
inc
push
imul
ret
mov
or
not
in
jmp
test
aas
dec
js
ins
add
retf
idiv
sub
mov
mov
stos
push
xchg
scas
and
push
repz
lock
push
sub
inc
and
les
adc
inc
push
pop
hlt
aad
jae
mov
imul
stc
dec
and
or
daa
repnz
neg
pop
scas
outs
or
cmp
adc
arpl
push
and
and
ss
or
push
mov
or
mov
and
and
dec
fsub
dec
pop
and
sbb
dec
sub
enter
mov
mov
rcl
push
adc
push
or
lea
mov
es
cmp
and
or
clc
inc
jnp
xor
jae
int3
jo
imul
cmp
inc
call
push
(bad)
or
and
fdiv
mov
fwait
dec
add
test
push
or
fwait
sub
inc
mov
mov
xor
xchg
fnstcw
cmp
push
mov
(bad)
in
sub
push
cmc
jno
add
add
xchg
retf
mov
add
xchg
and
rol
ret
push
imul
push
xor
aam
jmp
lahf
and
out
or
test
hlt
and
add
pop
jmp
retf
repnz
fwait
push
rcr
push
cmp
into
sar
fdivr
push
fcomp
and
xchg
stc
pop
adc
sub
das
inc
sub
jnp
not
call
pop
mov
xor
cwde
xor
push
push
xchg
int3
xchg
jmp
cmp
push
in
jle
pop
xchg
push
fiadd
das
pop
pop
or
fwait
jo
data16
sbb
jmp
loop
neg
(bad)
fldenv
sub
inc
pop
inc
nop
mov
fisttp
inc
mov
out
cmp
mov
cmc
push
inc
imul
iret
xlat
jne
pop
aas
jg
rcl
pop
repz
int
into
imul
cmc
rol
or
jle
jle
adc
das
sub
jnp
cs
jne
mov
jmp
sub
push
ja
add
fwait
sub
xor
xor
sbb
push
aas
xor
inc
add
ins
jecxz
cmp
xchg
xor
jne
lods
out
dec
jbe
dec
sub
sub
jns
mov
dec
and
cmp
push
or
fwait
scas
jb
sbb
leave
xor
rcr
loop
cmps
mov
jno
loope
xor
mov
lock
enter
mov
in
add
jnp
inc
fstp
ror
mov
call
adc
xchg
push
out
sbb
setp
adc
jp
adc
test
xchg
nop
jb
sub
mov
push
sbb
ret
or
xchg
xor
sbb
test
adc
jmp
push
int3
fs
cdq
mov
xchg
mov
mov
cli
inc
fsubr
adc
or
jp
rol
out
sbb
jb
nop
sbb
add
inc
mov
sub
ins
(bad)
fadd
mov
ror
into
xchg
sub
sbb
xchg
inc
pop
mov
xor
fcmove
sub
out
xor
mov
push
cmp
ds
daa
sbb
mov
and
es
cmp
sti
and
jo
enter
pop
xor
add
sbb
inc
sbb
rol
sbb
leave
daa
fisttp
xchg
stos
dec
fcmovu
repnz
je
inc
int
adc
hlt
cs
stos
and
mov
adc
xchg
jno
dec
push
mov
addr16
xor
jb
adc
fwait
int3
fldenv
stos
xchg
inc
cld
(bad)
das
jbe
mov
xor
clc
mov
fbld
and
iret
jnp
mov
push
jmp
into
out
pop
popa
popf
fs
jnp
test
retf
leave
add
and
cmp
sub
jbe
sub
or
push
push
adc
stos
inc
mov
in
xor
dec
(bad)
lea
add
stos
jmp
mov
push
cmps
jl
in
sub
aad
imul
push
inc
arpl
cmp
dec
int3
inc
jo
(bad)
ror
pop
cld
lahf
mov
dec
lea
int
dec
dec
xor
stos
and
or
clc
das
or
sbb
sbb
or
(bad)
icebp
stos
xchg
sub
jae
mov
inc
mov
enter
sub
retf
iret
sub
pop
jo
dec
sbb
je
ret
sub
jno
mov
jo
popf
and
mov
cmc
popa
pusha
sub
adc
xchg
add
dec
jb
and
push
jo
mov
aad
imul
in
jmp
xchg
ins
fcomp
stos
or
sub
adc
dec
sub
or
mov
(bad)
sti
(bad)
cmp
xor
hlt
sub
pop
call
dec
leave
push
rcl
fisttp
arpl
push
adc
jnp
mov
cmp
or
push
int
mov
call
sub
cmp
sbb
popa
pop
add
sub
jl
xchg
or
cdq
js
icebp
sysenter
sbb
dec
jmp
xor
mov
push
mov
jns
ins
fcom
jno
pop
pop
ins
mov
mov
test
jae
js
and
int
jmp
and
sub
div
jnp
test
cmp
loopne
mov
push
lods
les
adc
pop
call
sahf
push
mov
iret
sahf
rol
pusha
pushf
iret
retf
pop
loop
fldenv
retf
(bad)
cmp
dec
test
add
jmp
out
xor
sti
sbb
shl
xor
xchg
std
dec
sti
shr
inc
push
mov
cmp
jbe
scas
xchg
call
mov
jle
ret
ins
cmp
add
das
mov
rcl
outs
pop
push
mov
daa
sbb
mov
push
push
push
cs
cmp
inc
xor
imul
pop
mov
fcomp
mov
and
xchg
sbb
sub
icebp
push
xchg
pop
sti
xor
cmc
and
dec
imul
cmp
dec
(bad)
sub
fwait
ror
xor
mov
pop
lods
out
cmp
rcl
sub
pop
sbb
inc
xor
addr16
leave
pop
inc
and
inc
std
or
jp
pop
ret
popf
add
jbe
in
sub
ss
not
loop
ficomp
cmc
sbb
cmp
sbb
fcmovnbe
sub
fs
push
(bad)
mov
pop
jno
(bad)
cmp
pop
pop
hlt
ins
cwde
pop
cdq
and
pop
pop
jle
outs
add
inc
mov
rcr
fdiv
mov
in
aad
test
icebp
inc
jb
out
jbe
push
pop
or
mov
repz
lds
icebp
jecxz
and
add
xchg
aaa
sub
cmp
in
popa
jle
test
ja
lds
pop
inc
loopne
fmul
dec
ja
or
jle
sar
push
lods
or
and
sti
dec
sub
pop
out
add
(bad)
(bad)
dec
stc
mov
push
push
inc
sub
ret
and
sbb
lds
fs
mov
sbb
in
dec
dec
dec
xchg
loopne
pop
adc
in
leave
add
fsub
sub
sahf
mov
mov
sahf
test
sbb
popa
sbb
dec
repz
mov
add
popf
nop
out
outs
jbe
enter
pop
and
cmp
mov
pop
sbb
mov
(bad)
loope
sbb
popf
lahf
imul
jmp
xor
in
mov
int
and
in
ss
pop
pop
pop
xor
sbb
retf
mov
repz
push
sbb
fsub
int
cmp
rcr
inc
push
sub
add
jnp
inc
popa
shl
fcom
call
fs
ins
xchg
inc
push
xchg
sbb
lahf
adc
xchg
imul
gs
andnps
or
jbe
test
cmps
arpl
retf
mov
pop
push
pop
jmp
fneni(8087
xor
pop
adc
sbb
repz
enter
lahf
xchg
inc
rcr
ret
rcr
cmp
aas
sbb
xchg
sub
xor
or
(bad)
sbb
or
add
mov
arpl
shr
xor
pop
mov
adc
fild
pushf
test
popa
sbb
or
fld
aad
sub
std
aas
and
test
dec
or
pusha
cs
pop
push
fiadd
popa
sbb
mov
and
sub
ret
out
xor
push
(bad)
jns
pop
inc
push
push
sbb
lds
sub
pop
mov
inc
bound
add
or
ror
outs
sbb
push
into
jns
rcr
ret
jg
aaa
out
pop
adc
ret
scas
pop
jmp
add
xchg
cmp
dec
jns
push
lahf
clc
rcl
icebp
dec
and
lahf
sub
pop
outs
stc
jmp
xchg
test
outs
sbb
ins
push
inc
cwde
daa
gs
pop
ret
popf
push
dec
pop
jp
outs
adc
add
jbe
cwde
or
sub
xchg
stos
sbb
sbb
mov
or
fdivr
mov
imul
add
test
sbb
push
jns
test
lds
sub
dec
test
sub
loop
xchg
into
mov
aaa
cmp
retf
mov
imul
mov
jne
out
pop
and
add
stos
mov
xchg
or
mov
add
(bad)
add
push
(bad)
mov
call
jle
test
fsubr
fsubr
mov
fcomp
push
ss
ret
mov
pop
jmp
push
test
and
sti
mov
je
push
jge
pmaddwd
out
ss
bound
xor
pop
inc
sbb
pop
xlat
dec
push
sahf
cs
jg
xor
add
(bad)
cmp
mov
in
iret
stos
dec
add
and
jl
push
inc
int
add
pop
jle
test
add
rcl
(bad)
and
push
fs
cli
and
dec
stos
ret
pop
fucom
adc
cmp
or
sub
push
pop
shr
or
cld
aas
popa
sub
adc
xor
mov
sbb
repnz
and
sbb
xchg
lea
jge
inc
adc
sbb
mov
inc
and
push
ror
fld
into
retf
sti
sub
pop
jbe
mov
sub
adc
mov
sbb
add
mov
add
jl
mov
and
fdivrp
jmp
sbb
leave
add
sti
cwde
dec
sub
(bad)
outs
fdivr
pop
jmp
sti
and
std
inc
cdq
imul
cmp
pop
test
aaa
jbe
scas
and
add
jmp
pop
sub
cmp
jg
imul
xchg
inc
daa
not
fisub
dec
xor
mov
stos
out
dec
cmp
cmc
ja
jmp
test
stos
movs
std
arpl
fild
ret
fadd
xor
jle
sbb
push
cs
into
jp
repnz
xlat
dec
enter
rcl
cdq
fwait
mov
inc
dec
or
pop
mov
es
fmul
lods
dec
ror
mov
xor
sbb
push
ret
lods
jno
cwde
stos
cld
push
dec
aad
pop
push
outs
dec
jns
xchg
in
or
jg
pop
repnz
jecxz
cmp
mov
jp
(bad)
jecxz
outs
lods
or
pop
sbb
adc
sub
outs
jb
pop
aas
aaa
mov
dec
mov
dec
popa
shl
xchg
arpl
sub
dec
or
stos
sbb
push
outs
loop
mov
(bad)
mov
or
loope
mov
lods
cmp
popf
xor
call
aad
cli
jmp
mov
icebp
pop
mov
xchg
or
add
test
jg
sub
outs
jecxz
jae
add
int
push
movs
popf
adc
pop
cmp
xchg
ficomp
push
xor
cmp
jecxz
or
xor
or
lods
and
inc
shl
int
movs
movs
pop
mov
pop
pop
ins
ss
cmps
pop
das
and
out
push
or
push
pop
fnstenv
sbb
in
loopne
xor
xor
icebp
and
mov
xor
lea
dec
imul
arpl
rcl
xor
xchg
sub
jmp
outs
xor
js
lods
sub
dec
shr
jecxz
mov
cld
adc
repz
add
xor
adc
shl
retf
sub
ds
xchg
and
sbb
sub
icebp
dec
lahf
add
ror
ds
mov
adc
adc
or
ficomp
lods
ret
xchg
lea
xor
jns
push
test
add
lds
mov
out
cmp
xor
and
dec
seto
in
ins
jo
dec
addr16
out
fnstenv
dec
div
pop
inc
retf
out
cmp
icebp
jmp
cmps
add
add
push
push
dec
nop
aas
pop
pop
and
pop
or
test
pop
(bad)
or
shl
fild
std
imul
adc
mov
add
push
push
push
cwde
retf
aam
mov
ins
push
sub
hlt
xor
sbb
xor
sahf
mov
push
mov
fsubrp
je
jmp
pop
lds
shl
aam
fild
mov
dec
mov
push
pushf
scas
inc
data16
sbb
or
jnp
dec
daa
sub
retf
xchg
sbb
adc
fist
inc
ret
xchg
rol
call
push
bound
pop
xor
adc
mov
fdivr
inc
retf
lock
scas
mov
push
and
outs
mov
add
mov
xchg
jae
test
xor
outs
and
outs
inc
pop
adc
ins
outs
mov
inc
bound
cmp
bound
adc
pop
add
jo
cs
push
sub
ret
and
xchg
mov
aaa
push
xchg
nop
movs
push
push
ret
or
xor
pop
xchg
mov
sahf
mov
pop
mov
cmp
(bad)
jge
(bad)
std
(bad)
fcmovu
je
add
ret
ja
imul
jae
pop
mov
mov
sbb
ins
loop
sbb
jno
push
push
add
sub
cmp
mov
cdq
add
mov
stos
push
push
inc
mov
out
sar
sbb
stos
aas
adc
mov
dec
out
pop
inc
gs
fucompp
cmp
sub
mov
push
mov
aam
adc
sbb
in
scas
int3
dec
jmp
popa
sub
cmp
int3
mov
mov
outs
cmp
lods
popa
test
inc
bswap
imul
jb
dec
ret
push
jns
add
int
or
cmp
mov
ror
pop
add
mov
aam
(bad)
cmps
add
sub
and
pop
push
aaa
xor
retf
add
adc
fidiv
pop
or
lds
sbb
dec
cmc
popa
dec
mov
jae
mov
add
push
jno
jns
xor
add
lods
mov
jg
cmp
dec
inc
cli
in
pushf
adc
das
std
outs
push
dec
sbb
test
mov
test
xchg
adc
lock
jg
and
aaa
rcl
jmp
popf
lahf
and
sahf
frstor
cmp
pop
gs
inc
sbb
icebp
adc
bound
add
inc
mov
aaa
and
cmp
mov
out
gs
repz
sbb
mov
lea
ror
dec
fcomp
pusha
jle
mov
mov
outs
test
jmp
xor
ins
dec
or
inc
std
push
enter
std
repz
cmp
sbb
call
push
popf
push
pop
push
fmul
push
ss
jnp
jle
adc
arpl
gs
dec
(bad)
add
mov
pusha
jl
add
mov
ins
sbb
outs
xor
adc
sub
ins
cld
stos
mov
pop
jp
(bad)
dec
xchg
imul
fcmovne
cmp
xor
outs
and
push
bound
push
or
nop
dec
mov
jmp
inc
add
je
pop
sahf
dec
ins
jno
int3
mov
loop
dec
ds
inc
cwde
cmp
mov
and
push
dec
fwait
inc
dec
cmp
outs
daa
sbb
jbe
xlat
retf
stos
inc
out
ds
ror
sub
(bad)
push
mov
fld
lahf
sti
cmc
in
ret
or
cmc
imul
add
out
inc
cmp
push
jmp
inc
int
scas
(bad)
cli
jae
push
sub
push
pop
dec
enter
sub
cdq
(bad)
jmp
push
xlat
dec
mov
adc
push
fisttp
xchg
jle
cmp
jne
pop
loopne
arpl
cs
aaa
sub
adc
mov
adc
sub
push
push
jg
cmp
push
and
hlt
adc
inc
and
imul
in
xor
shl
or
push
(bad)
adc
jae
jmp
xchg
pop
adc
xor
dec
pop
mov
pop
ja
sub
(bad)
test
rcr
jecxz
scas
cmc
leave
jb
mov
mov
inc
adc
hlt
add
int
or
and
outs
sbb
(bad)
xchg
push
jp
xchg
push
loopne
and
add
xchg
in
fld
aaa
mov
mov
pop
sub
mov
add
and
sub
cmc
pop
iret
push
jmp
jmp
test
adc
push
aas
push
in
cmp
dec
test
sbb
cmc
mov
push
js
mov
adc
xchg
fcomp
cmp
cmc
sub
or
xchg
adc
sbb
(bad)
fimul
or
cs
adc
gs
sbb
jno
mov
cmp
inc
enter
inc
xchg
jb
int
and
add
enter
push
rcl
lea
int
lds
cmp
push
xor
daa
(bad)
push
and
push
mov
pop
xor
movs
bound
add
cmp
sti
ja
inc
out
clc
sub
mov
int
mov
sbb
mov
xor
mov
pop
lock
icebp
xlat
fldenv
jnp
and
mov
adc
add
stc
mov
retf
ret
sub
dec
mov
and
push
stc
dec
out
cwde
mov
pop
jl
and
fisttp
rcr
sti
sub
pop
or
ds
dec
add
fstp
or
aaa
or
mov
imul
adc
inc
mov
inc
jb
stos
sbb
rcl
sub
movs
fstp
jae
inc
scas
ins
cwde
loopne
xor
leave
mov
and
jl
cmp
aaa
push
retf
adc
int3
je
sbb
outs
sbb
inc
outs
imul
xor
mov
repz
mov
cmps
daa
jne
jne
fbstp
sti
pop
js
sbb
lods
jecxz
mov
(bad)
fdiv
out
(bad)
pop
inc
(bad)
call
mov
sbb
sbb
mov
dec
jmp
jnp
push
repnz
(bad)
(bad)
ss
jae
popa
mov
inc
or
mov
add
mov
push
test
pop
inc
dec
(bad)
in
pop
or
mov
dec
dec
mov
je
jae
mov
pop
pop
mov
inc
mov
mov
es
inc
movs
mov
lahf
dec
or
fcomp
shr
sbb
es
es
pop
sbb
pop
in
and
and
lods
in
cmp
mov
jbe
mov
scas
xchg
dec
jno
or
xor
ss
or
int3
jae
vminpd
sbb
movs
push
ss
arpl
fs
sahf
mov
in
push
jbe
test
stc
sbb
xchg
xor
inc
xor
sub
pusha
mov
and
dec
out
cmc
cmp
popa
sub
inc
mov
data16
xchg
inc
cmps
mov
jecxz
scas
retf
cmp
lods
dec
mov
or
dec
cdq
jecxz
cmp
inc
xchg
mov
fwait
dec
(bad)
dec
mov
rol
pop
inc
mov
jmp
mov
dec
push
movs
mov
aaa
xor
jnp
add
cmp
sub
jmp
rcr
jle
lock
bound
push
xor
and
js
or
(bad)
retf
mov
add
aam
or
cmps
xor
rcr
pop
aaa
xor
dec
sti
popf
pop
loopne
dec
cmp
xor
push
jecxz
imul
jae
in
inc
fcomp
jg
push
dec
mov
stc
fwait
out
out
or
and
scas
outs
add
xor
xor
mov
popf
rol
call
std
add
pushf
xchg
xor
loop
jbe
int3
cwde
pop
test
mov
dec
test
push
rol
adc
jne
ror
movs
mov
nop
mov
pop
mov
mov
mov
push
or
pushf
stos
adc
mov
pop
sbb
pop
mov
pop
dec
data16
sub
xchg
data16
jmp
dec
dec
xchg
stos
push
(bad)
sar
(bad)
aas
or
pop
daa
stos
(bad)
sbb
sbb
jge
movs
push
mov
inc
nop
div
cs
or
call
mov
pop
sub
jne
sbb
add
or
jns
jmp
lock
in
and
xchg
push
jae
push
cmp
add
cmps
icebp
sbb
xor
xchg
xchg
xchg
(bad)
fisub
push
add
ja
mov
jne
out
(bad)
jno
ret
clc
dec
loope
or
pop
xor
push
inc
or
loope
pop
xlat
rcl
and
cmc
into
sbb
xlat
push
fisubr
call
fs
les
pop
scas
cmp
into
mov
cs
or
push
adc
jg
jae
stos
aaa
cmps
mov
mov
outs
mov
gs
push
or
test
and
adc
pop
fist
cmp
es
or
mov
push
pop
inc
push
dec
in
xchg
ret
mov
sub
ret
enter
inc
lods
mov
xor
xchg
inc
xchg
hlt
mov
push
add
push
or
dec
dec
and
pop
out
lods
pop
xchg
ret
lods
pop
add
inc
mov
adc
mov
int
cdq
mov
xchg
jmp
and
xchg
and
dec
imul
ret
add
movs
mov
push
xor
add
movs
jnp
daa
mov
idiv
mov
or
cmovns
fdivp
inc
and
mov
popf
inc
jmp
dec
adc
and
mov
cmp
lea
mov
dec
cmovb
pop
jo
cmp
icebp
outs
(bad)
(bad)
neg
add
sbb
dec
rol
mov
xchg
cmp
xchg
xor
rol
push
loopne
cmp
xchg
mov
pop
inc
push
xor
add
es
add
loop
aad
jle
mov
rol
retf
out
mov
fist
cmp
aam
and
inc
cmp
and
or
jg
or
dec
or
dec
push
and
and
mov
jmp
stos
pop
push
(bad)
(bad)
(bad)
(bad)
loope
fstp
xor
sub
adc
jg
into
sbb
push
gs
fwait
shr
ficomp
test
inc
fs
and
push
adc
jne
jle
xchg
mov
arpl
pop
or
imul
inc
xor
das
call
pop
mov
mov
sbb
and
jne
push
push
stos
inc
xchg
push
mov
iret
sub
add
test
and
pop
dec
adc
and
in
push
test
mov
adc
cmp
push
(bad)
cmp
and
imul
in
je
mov
popa
sub
aaa
adc
xor
sub
(bad)
call
pop
cdq
rcr
cmps
gs
aas
xor
jp
movs
xor
jl
or
imul
or
inc
ins
in
adc
or
iret
push
adc
jl
dec
pop
movs
or
pop
icebp
arpl
dec
retf
add
retf
ret
mov
lock
fdiv
and
fist
imul
lahf
call
pop
dec
ds
loop
mov
xor
mov
data16
test
mov
sahf
add
aaa
(bad)
push
sbb
or
sbb
push
test
ins
stos
lahf
cs
pop
mov
pop
iret
adc
das
and
xchg
stos
(bad)
xchg
xchg
push
mov
fstp
call
icebp
xor
test
jl
retf
mov
xchg
lds
call
xor
push
sub
jecxz
leave
jge
dec
iret
dec
adc
lds
push
inc
push
push
neg
data16
and
mov
inc
popa
in
push
cs
sbb
add
dec
add
retf
cli
in
dec
mov
or
aam
pop
xchg
pop
and
leave
adc
fmulp
sbb
daa
fs
jns
and
push
or
sub
popa
add
pop
icebp
dec
repnz
les
xor
(bad)
pop
jp
mov
dec
retf
push
jno
adc
push
shr
aad
in
cmc
sub
dec
ror
cmp
mov
iret
rcr
in
fcomip
mov
icebp
(bad)
ins
xchg
seta
loope
mov
fadd
mov
outs
imul
jnp
movs
cmc
pop
ins
push
mov
loop
sbb
adc
sar
sbb
push
dec
jae
mov
pop
repz
mov
lea
jnp
(bad)
jp
and
cmp
and
loope
(bad)
fild
fcmovnu
sbb
rcr
add
cwde
int
inc
adc
xor
scas
and
fidivr
push
and
test
add
adc
or
add
sub
mov
lds
inc
inc
and
sub
pushf
sbb
jl
sar
sub
push
jmp
push
pop
popf
dec
outs
cmp
push
push
jg
push
dec
inc
mov
pop
jnp
inc
dec
inc
mov
in
pusha
arpl
out
daa
dec
rcr
cmps
sbb
push
jle
rol
and
outs
and
fsub
pop
test
push
dec
dec
shl
mov
jns
and
inc
call
les
sbb
lods
xchg
(bad)
iret
sahf
cmp
sub
cli
xor
jo
push
(bad)
fstp
js
test
mov
xchg
xor
(bad)
cmp
in
xor
dec
inc
and
pop
stos
pop
and
ins
inc
icebp
movs
or
cmps
push
sbb
int3
xchg
leave
pop
test
mov
push
scas
sbb
repz
aas
pop
in
ror
sub
jg
sbb
push
and
fld
lods
retf
fidiv
dec
and
cmp
jmp
mov
das
adc
cmc
daa
imul
lods
push
add
pop
push
test
xchg
and
(bad)
adc
cwde
pop
xchg
(bad)
xchg
pushf
push
push
xchg
repz
cmps
push
inc
cwde
test
pop
and
pop
mov
sub
into
dec
nop
mov
add
jl
cmps
sbb
xor
pop
dec
dec
mov
pop
mov
cmps
mov
fild
mov
je
cmp
mov
imul
mov
and
mov
adc
and
(bad)
in
jb
xor
loopne
adc
test
adc
cmp
dec
int3
iret
and
or
push
out
adc
or
xor
mov
es
mov
jl
sbb
mov
(bad)
mov
mov
jmp
lods
inc
into
std
jecxz
sbb
fnstenv
lea
retf
pop
daa
sbb
mov
shl
repnz
push
sub
movs
out
cmc
pop
mov
cmc
cdq
(bad)
jbe
test
fbstp
mov
inc
(bad)
(bad)
cmp
sub
mov
mov
retf
leave
pop
imul
test
(bad)
add
lds
fmul
sti
repnz
je
out
std
mov
cmps
sbb
jbe
mov
inc
add
retf
mov
mov
pop
inc
icebp
jg
popa
lea
outs
leave
loop
loope
mov
ret
jae
xchg
push
shl
mov
fistp
cdq
cmc
ficom
int3
aas
movs
xor
push
call
nop
pop
call
(bad)
xchg
dec
shl
test
push
cmp
or
add
pusha
sub
sub
mov
(bad)
sub
inc
stos
mov
repnz
pushf
pop
jmp
retf
lods
mov
loope
stc
jp
xchg
or
fxch
outs
add
inc
pop
nop
pushf
fs
fucom
sub
je
cmp
mov
in
fcom
sub
in
xchg
aam
jle
jmp
sbb
cmps
pop
popa
add
xchg
cli
es
repnz
jecxz
jbe
addr16
mov
out
push
mov
sbb
add
mov
and
rep
dec
ret
into
push
call
mov
or
inc
add
cwde
sbb
mov
cmp
mov
les
mov
fdiv
xor
iret
and
sbb
into
add
mov
jae
push
mov
(bad)
cmp
call
in
and
cmp
inc
(bad)
ins
jnp
icebp
fadd
jmp
int3
loope
ret
sub
jns
sub
scas
fimul
xchg
pusha
pop
retf
aad
add
popa
stos
sbb
mov
cmps
ret
fild
les
pop
add
xchg
sbb
and
pop
repz
fidivr
xor
push
mov
mov
inc
or
jmp
fadd
push
sahf
fisttp
call
nop
pop
dec
aam
vcvttpd2dq
jg
das
push
add
fwait
inc
cmp
fadd
out
inc
mov
xchg
movs
adc
push
popf
add
add
lea
sar
jo
je
in
cmp
dec
pop
sbb
push
mov
je
add
ret
iret
dec
cld
push
adc
(bad)
pop
ja
or
(bad)
outs
je
outs
mov
sbb
cli
jnp
movs
(bad)
pop
adc
sbb
adc
sahf
lahf
rol
mov
push
outs
jmp
or
imul
in
xchg
movs
rol
ins
jp
push
(bad)
iret
add
lock
xchg
sub
mov
xchg
cld
(bad)
ja
mov
and
es
add
fadd
ret
xchg
dec
fstp
mov
jb
rcr
sub
ja
jecxz
fnsave
pop
test
lds
(bad)
iret
dec
ds
dec
idiv
xlat
cmps
pushf
stos
lahf
out
int
add
and
mov
fsub
ret
ins
(bad)
jb
cmp
adc
pop
idiv
sub
cmp
pop
popa
ret
cmp
mov
je
add
pop
xchg
dec
xor
pop
inc
daa
mov
adc
std
xor
dec
sub
sar
xor
(bad)
xor
or
adc
clc
dec
push
mov
bnd
xchg
jb
inc
mov
dec
pcmpeqd
dec
data16
xor
lahf
in
sbb
add
pop
daa
dec
in
add
inc
inc
push
(bad)
pushf
jp
push
imul
pop
mov
pop
dec
rol
out
pop
mov
or
mov
sub
popf
cld
inc
lea
ds
push
jmp
push
mov
ror
shr
retf
out
test
popf
imul
out
pop
(bad)
cld
shr
mov
cli
mov
pop
jmp
push
cmp
(bad)
pop
scas
sub
in
lds
dec
sub
push
repz
sub
not
adc
and
mov
inc
or
mov
dec
ret
push
js
jl
and
je
inc
add
inc
sti
fbstp
sub
and
push
xor
movs
ja
les
ja
rcl
fiadd
or
xchg
xchg
aad
retf
xor
out
pop
pop
or
lea
push
fbld
jmp
rol
pop
cmp
add
push
and
mov
push
das
dec
ds
pop
push
xchg
(bad)
test
jnp
test
sub
adc
out
mov
fsubr
pop
dec
imul
loopne
pop
shr
xchg
jns
mov
push
(bad)
xchg
sbb
fadd
retf
lock
imul
test
(bad)
scas
xchg
mov
movs
icebp
pop
jmp
retf
(bad)
loopne
and
pop
mov
dec
lods
test
loop
and
aas
fsubp
inc
pop
shr
lods
push
daa
jo
lds
scas
mov
dec
cmps
lea
pushf
inc
scas
aas
fwait
or
test
inc
loope
jmp
dec
push
jae
mov
imul
cmps
addr16
in
pop
lahf
or
ffreep
cmp
mov
cmp
pop
and
ins
add
call
js
or
fdivp
xor
xor
pop
dec
aad
mov
mov
mov
push
cmp
or
addr16
(bad)
inc
inc
loopne
xor
imul
jle
lods
cmp
or
jbe
fiadd
mov
add
xchg
loopne
adc
or
xor
sbb
pop
bts
test
dec
mov
popf
xchg
xor
(bad)
jo
push
sahf
scas
in
popa
mov
pop
mov
push
push
jge
fld
fsubr
jbe
clc
jmp
loop
push
pop
pop
retf
mov
test
aas
cdq
les
pop
mov
push
retf
sub
ss
xor
leave
addr16
(bad)
xlat
sub
lods
ins
movs
pop
mov
dec
es
(bad)
aaa
nop
pop
cmp
je
int3
dec
inc
adc
sub
push
xor
je
push
mov
je
add
xchg
dec
inc
xchg
repnz
pop
mov
xchg
cdq
stos
popa
in
sbb
mov
scas
outs
jb
cli
sub
fidivr
xchg
sbb
mov
call
xor
in
inc
nop
jmp
sub
call
sbb
mov
in
pop
ins
mov
mov
lods
je
cmp
sub
sbb
sub
xor
outs
fisubr
cwde
jnp
call
mov
fwait
ins
mov
ins
(bad)
mov
xchg
push
push
retf
in
mov
jecxz
movs
in
pslld
aad
jbe
xlat
lahf
xchg
repnz
pop
sbb
jg
in
outs
dec
aaa
call
xor
rol
les
xchg
sub
retf
lea
iret
imul
imul
fstp
int
dec
or
daa
sbb
out
mov
jmp
sbb
(bad)
sub
inc
aas
add
sbb
retf
dec
jae
inc
cmc
out
out
and
adc
sbb
sbb
adc
xor
sti
ins
aaa
sub
retf
dec
aam
mov
std
arpl
push
and
add
adc
sub
dec
lahf
js
(bad)
retf
mov
(bad)
repz
adc
das
loop
add
add
mov
addr16
aad
aam
cwde
aad
hlt
ret
inc
data16
fild
inc
das
cmps
not
int
xor
rcr
dec
push
push
jne
out
sub
(bad)
lock
inc
scas
dec
shr
clc
ds
sbb
ret
das
add
out
pop
push
mov
push
sbb
jmp
xchg
push
jmp
sbb
push
inc
enter
mov
dec
pop
jns
and
dec
push
mov
jnp
scas
cmp
cmp
mov
sbb
sahf
sub
jmp
mov
and
push
adc
jmp
or
loope
xor
sub
pop
gs
jl
inc
in
sub
leave
fild
sub
pusha
sub
jl
pusha
add
es
lds
jg
fs
jg
sub
or
sahf
icebp
jns
jo
out
xchg
cs
dec
sub
jae
es
shl
jp
mov
stos
mov
dec
xchg
hlt
inc
sahf
rcr
push
(bad)
aaa
stos
das
into
pop
xor
mov
mov
fisttp
aad
xor
jnp
fadd
jmp
cmps
out
sub
xchg
lds
sbb
and
xor
hlt
fs
aam
add
and
ss
or
dec
xor
outs
rcr
add
fwait
jl
(bad)
sahf
jg
fcmovne
aam
popa
cmp
test
addr16
jg
pop
js
xor
rol
or
call
mov
dec
jb
mov
stos
movs
push
cmc
dec
std
xchg
imul
add
out
pop
inc
sbb
sub
push
mov
add
push
sar
and
(bad)
sbb
data16
(bad)
cmp
ret
cmp
call
jle
inc
in
leave
dec
sub
es
test
pop
sub
push
and
and
pop
jno
xchg
mov
xchg
push
test
sbb
pop
in
mov
cmp
adc
ins
ss
jmp
loop
sbb
or
mov
inc
jle
jmp
cdq
or
js
call
hlt
loope
xor
or
out
out
jmp
or
into
sbb
ja
(bad)
jb
enter
iret
rcr
cmps
test
(bad)
add
outs
add
xor
pop
loop
mov
xchg
dec
popa
and
mov
arpl
pop
sbb
xor
mov
outs
out
lods
pop
dec
clc
(bad)
push
gs
cmps
and
jmp
sub
dec
and
das
rol
pop
(bad)
fild
sbb
adc
dec
push
(bad)
jno
mov
cdq
sub
adc
scas
dec
call
in
icebp
sbb
in
(bad)
adc
aad
ds
push
sub
inc
retf
inc
jmp
add
clc
add
enter
sub
pop
retf
inc
out
add
mov
pushf
int
mov
mov
aas
push
adc
jecxz
mov
cmp
jb
mov
pop
popf
mov
fadd
dec
test
loop
call
xchg
sahf
in
sbb
imul
adc
add
test
sub
jne
adc
sbb
pop
fnstsw
das
mov
ja
ss
inc
ror
mov
jl
mov
fs
push
cmp
dec
pop
inc
cmp
or
(bad)
add
push
pop
and
xor
cmps
das
cdq
add
daa
in
outs
sub
xlat
fsubr
adc
cmps
mov
pop
dec
jb
daa
mov
sbb
mov
xchg
or
aad
xrelease
scas
shl
rcl
jbe
and
pop
arpl
daa
xchg
adc
jne
or
pop
xchg
loope
xor
setp
or
push
pushf
fisubr
xchg
push
ret
test
pop
mov
mov
and
push
dec
jb
xor
and
das
pop
dec
pop
inc
add
push
push
dec
stc
inc
cmp
mov
push
ret
scas
push
sbb
pop
enter
shr
test
test
test
loop
(bad)
aam
jo
clc
or
adc
(bad)
push
idiv
pop
adc
adc
jg
mov
and
xlat
dec
aad
into
pop
add
pop
test
out
dec
pop
push
outs
jbe
(bad)
cs
daa
xor
(bad)
mov
mov
int
inc
js
dec
sar
pop
lock
sub
fsub
or
jne
pop
xor
dec
mov
or
rcr
add
pusha
add
div
loop
adc
dec
sbb
test
(bad)
cli
fisubr
lods
pop
adc
add
lock
or
iret
jecxz
xchg
cmp
dec
sti
jb
jo
xlat
adc
pop
xchg
in
test
adc
lea
js
xchg
mov
sbb
mov
push
cmp
movs
jg
inc
push
aad
dec
not
scas
sub
mov
jns
mov
dec
sbb
addr16
push
xor
push
imul
data16
sub
jne
daa
xor
cmps
fwait
xchg
cmp
es
(bad)
push
and
fcomip
push
mov
push
nop
mov
or
and
test
pop
sahf
push
jg
dec
cwde
lahf
lock
and
loope
cmps
push
or
or
inc
mov
scas
pusha
push
push
sub
push
push
xchg
sbb
cmp
inc
jnp
ret
je
xor
int3
lods
mov
mov
and
jp
cdq
mov
mov
push
inc
outs
sbb
or
int3
sub
fidiv
xor
jnp
xlat
sbb
es
outs
lea
into
mov
and
adc
mov
jb
jbe
sbb
lahf
sar
adc
xor
xlat
cmp
int
push
xlat
icebp
pop
pop
or
jle
rcr
cmp
jb
inc
ret
push
jmp
pop
xor
dec
pop
fld
adc
xchg
ja
lahf
mov
jg
pop
add
arpl
add
cs
and
test
sbb
mov
stos
ins
sbb
dec
fstp
and
ret
push
adc
mov
mov
cli
int
jmp
dec
inc
stos
dec
jp
popf
or
xor
outs
mov
and
push
and
pop
or
das
jns
popf
pop
push
pusha
inc
(bad)
(bad)
adc
pop
mov
fisttp
and
add
retf
xor
pop
pop
xor
ret
dec
lods
mov
mov
dec
lock
jns
xor
dec
loop
sbb
adc
stc
xchg
inc
out
pop
fldcw
int
or
or
bsf
popa
inc
iret
sti
adc
and
sbb
mov
and
cmps
repnz
nop
mov
jae
rcr
mov
pop
or
mov
int3
(bad)
adc
push
fmul
push
sti
aas
sbb
add
mov
shl
lds
retf
inc
jle
xchg
sbb
stc
dec
cli
mov
pop
xor
(bad)
sub
not
cmp
rcl
push
mov
mov
pusha
jp
scas
pop
ins
das
and
xchg
repz
or
pop
xlat
cwde
xor
push
sub
fimul
mov
pop
dec
stos
call
cwde
xchg
mov
aaa
dec
add
adc
test
int
scas
fcmovu
and
add
cs
inc
add
or
ja
je
dec
js
jp
mov
dec
not
xor
arpl
dec
inc
pop
cli
pop
jae
test
jno
cmps
sbb
test
lock
popa
fmul
nop
push
(bad)
dec
test
jp
lea
pop
leave
rcr
imul
xchg
mov
rol
stos
xchg
ret
xor
rol
cwde
adc
aam
aas
ins
pop
inc
xor
push
cmp
xchg
les
xor
clc
inc
inc
lods
mov
xlat
fdivp
mov
lahf
out
pop
popf
scas
mov
cmp
cmp
jg
xor
or
push
jle
cmp
sub
mov
sub
pop
push
pop
aad
arpl
and
sub
mov
push
clc
cmp
pop
pop
imul
fmul
pop
sub
or
sub
pop
mov
(bad)
sub
dec
stos
fist
out
fidivr
inc
js
mov
scas
add
fdivr
popf
ret
pop
pop
pushf
test
gs
aas
add
dec
xor
inc
or
out
ficom
fimul
add
xchg
or
cmp
ins
in
inc
fld
mov
lea
ret
add
push
xor
mov
push
fcom
movs
jmp
sbb
out
mov
repnz
scas
repnz
mov
daa
hlt
mov
inc
mov
and
and
dec
test
and
cmp
outs
imul
pusha
push
in
ss
mov
imul
repz
sbb
cmps
cmp
jne
das
iret
jnp
inc
imul
cmps
loope
sbb
xor
out
fcom
test
and
mov
ficom
arpl
pusha
fistp
les
lods
adc
dec
pop
in
mov
dec
push
dec
mov
out
mov
rol
and
sbb
ds
popf
pop
mov
inc
stc
inc
and
daa
repz
inc
imul
dec
jns
popf
jb
jge
bound
mov
mov
dec
jb
dec
or
pop
xlat
push
xlat
mov
push
push
cs
clc
imul
movs
stc
cmp
jmp
xchg
xchg
pop
loope
inc
inc
sub
shr
dec
adc
sbb
call
xor
and
inc
jle
add
mov
or
fmul
sub
mov
xor
cmp
(bad)
shl
out
out
loope
cld
and
mov
push
and
pop
imul
icebp
lods
mov
pop
call
pop
div
daa
sbb
mov
retf
dec
rcr
data16
jbe
loope
dec
sub
or
dec
adc
pop
pop
shr
test
lahf
retf
movs
push
pop
iret
rcl
(bad)
pushf
inc
test
mov
test
(bad)
adc
mov
cwde
inc
push
inc
jle
push
jl
pop
mov
pop
inc
adc
cmp
fcom
loopne
cmps
or
add
push
sbb
mov
jns
sbb
mov
cld
pop
cmc
inc
sbb
mov
ret
sar
xor
fisubr
push
dec
movs
sub
mov
call
add
nop
xchg
xor
push
xchg
adc
pop
arpl
scas
and
(bad)
test
cmp
pop
dec
sub
cmps
sbb
js
sbb
test
mov
(bad)
push
rcr
daa
mov
out
ss
movs
or
dec
dec
pop
inc
int3
pop
sbb
add
push
sub
xchg
mov
(bad)
pop
jae
sahf
iret
push
and
hlt
push
dec
(bad)
mov
jp
pop
sbb
xchg
fcmovb
mov
adc
xchg
sub
dec
and
fadd
sub
or
dec
retf
sub
push
aaa
jno
out
cwde
mov
xor
adc
aad
push
mov
(bad)
fs
and
and
and
adc
(bad)
stos
into
mov
pop
aaa
xchg
mov
in
and
dec
in
jl
(bad)
in
dec
xor
(bad)
jnp
es
stc
xchg
push
sbb
outs
xor
push
(bad)
inc
cmp
xor
mov
cmp
cmp
xor
rcl
out
adc
adc
xor
nop
cmps
in
or
movs
mov
call
push
push
push
xchg
inc
packsswb
pusha
push
sbb
sbb
jge
int3
clc
pop
sti
std
mov
js
push
jle
and
dec
pop
sbb
clc
add
outs
ds
push
sti
(bad)
jp
add
push
pcmpeqb
sub
mov
retf
mov
xchg
push
addr16
in
int3
test
mov
dec
imul
dec
test
les
cwde
sahf
or
test
sbb
in
pop
dec
xchg
mov
pusha
pop
jmp
mul
dec
xchg
push
mov
sbb
dec
data16
sub
push
gs
loop
test
push
add
inc
cli
mov
aaa
fmul
sbb
push
mov
mov
and
mov
sub
xor
stos
inc
test
xchg
or
sbb
and
pop
and
sub
sub
fild
and
mov
or
dec
inc
pop
les
popf
pop
jb
push
mov
jae
adc
xor
cmps
jae
inc
pop
and
xor
(bad)
mov
add
stc
inc
or
xor
push
test
scas
mov
sar
dec
jmp
mov
test
mov
xor
out
enter
jg
mov
hlt
(bad)
pop
test
pop
xlat
xchg
xor
cdq
lods
jl
in
addr16
repz
mov
data16
mov
dec
dec
daa
xchg
jne
mov
push
inc
dec
xchg
inc
in
mov
daa
push
and
sbb
mov
push
daa
push
push
pop
retf
sbb
cmp
pop
mov
aad
dec
lods
cmp
ficom
daa
es
mov
sbb
pushf
bound
repnz
jb
xor
sbb
pop
outs
cli
sbb
mov
out
popf
mov
repz
or
imul
xchg
cmp
aad
inc
pop
dec
pop
jne
xchg
jmp
xchg
movs
retf
and
xchg
cmp
adc
add
mov
adc
fmul
add
inc
arpl
pop
sub
xor
call
push
js
lea
add
pop
inc
push
(bad)
cmp
push
push
pop
popa
sbb
lock
fld
sub
push
aas
and
dec
int
and
inc
mov
repnz
fs
(bad)
fdivr
push
loopne
sub
lods
mov
retf
lea
pop
in
out
inc
int3
adc
jl
adc
sbb
push
imul
mov
pop
xchg
xor
scas
imul
pusha
xchg
inc
jge
pop
inc
cdq
dec
push
stos
mov
(bad)
cwde
xchg
jmp
and
jo
mov
xlat
push
sub
inc
jns
ficom
jns
mov
pop
and
retf
push
dec
pop
pop
retf
inc
lds
push
xor
in
into
mov
jg
lods
popa
or
leave
test
pop
mov
sub
jge
out
sub
push
lock
jecxz
cdq
inc
sbb
dec
jne
push
pusha
sbb
adc
cmp
sub
dec
push
add
retf
dec
push
imul
(bad)
shl
and
sub
mov
ja
push
or
repnz
push
ret
pop
xchg
movs
rcr
call
cmp
fstp
mov
shr
and
inc
call
idiv
push
dec
call
xor
dec
test
and
mov
ret
mov
mov
in
dec
jo
test
test
jbe
mov
lods
pop
add
xchg
push
es
jmp
mov
jecxz
and
das
jbe
or
ret
mov
lods
add
mov
add
adc
mov
cmps
je
jns
adc
and
les
jb
ins
repz
dec
mov
jmp
arpl
les
push
retf
out
pop
out
cs
dec
add
fistp
mov
inc
data16
mov
adc
mov
or
div
lea
mov
fistp
pop
inc
arpl
jns
cld
enter
add
lds
test
jecxz
dec
pop
out
dec
pop
adc
repz
xchg
arpl
xor
mov
pop
inc
mov
sub
dec
jl
pop
cmps
sbb
mov
call
inc
pop
scas
xchg
jmp
jp
jl
push
jnp
cmp
xor
retf
sbb
sbb
loope
shl
aas
out
aad
sti
fnstsw
fiadd
lock
call
sbb
jmp
out
inc
adc
mov
push
int
popf
dec
cmp
cwde
sub
adc
std
sbb
outs
mov
fmul
add
retf
retf
mov
push
mov
mov
out
pop
mov
cmp
push
ret
adc
pop
or
int
retf
cs
cmc
(bad)
stos
stos
pop
lods
pop
push
fwait
cmps
stos
mov
movs
and
fcomp
pusha
ja
mov
adc
repnz
jbe
fwait
pop
(bad)
adc
xchg
mov
addr16
bound
cld
test
adc
fwait
ins
fild
xor
cs
cmp
mov
(bad)
(bad)
pop
xor
and
and
cmps
push
dec
push
pop
(bad)
xor
dec
sbb
popf
movs
sub
sbb
pop
mul
push
movs
mov
xchg
push
cli
mov
clc
xor
pop
dec
mov
mov
xchg
sub
adc
push
cmp
pop
push
ja
daa
pop
enter
(bad)
push
cwde
int
loope
xchg
push
fcmovb
jmp
inc
pop
mov
adc
pop
outs
popf
xor
push
xlat
sbb
sbb
neg
or
int
pop
rol
loopne
add
sub
or
sub
(bad)
mov
dec
stos
jecxz
and
pushf
push
xchg
pop
xchg
in
add
add
test
pop
xor
cmp
repnz
sbb
sbb
stos
xchg
imul
pop
adc
pop
add
or
dec
out
push
in
popa
push
pop
popa
mov
aad
lock
(bad)
loope
xlat
inc
cmps
sbb
cmc
shr
sub
mov
xor
pop
jno
inc
cmc
std
repnz
sub
jns
out
out
outs
and
ins
sbb
jns
xor
into
sar
fwait
loopne
out
lea
lock
mov
sti
inc
aam
pop
sar
and
int3
ss
aaa
mov
pop
pop
pop
dec
push
cmp
mov
push
scas
mov
icebp
inc
jb
mov
test
popf
enter
xor
jae
fiadd
fwait
mov
sub
pop
inc
mov
mov
test
aad
ret
jb
and
(bad)
in
jo
or
in
call
inc
lock
jge
xchg
xchg
(bad)
aaa
push
retf
ins
or
add
dec
ret
xchg
jl
adc
mov
xchg
sbb
xor
pop
push
loope
ret
sub
cmp
mov
dec
popf
mov
hlt
in
add
shl
inc
pop
or
and
xor
and
ficomp
pushf
mov
es
sub
xor
push
dec
add
ret
jo
(bad)
and
test
jns
sti
out
sub
call
add
jge
push
daa
add
sub
loop
ins
push
lds
jle
js
push
icebp
dec
push
inc
repz
cmps
xor
aaa
jae
aad
retf
adc
pop
inc
pop
int
stos
push
sbb
sti
dec
outs
jmp
jg
stc
ficomp
loop
movs
sbb
jo
push
mov
test
loop
or
sbb
fcomp
inc
nop
cdq
xchg
push
lods
clc
push
mov
std
fs
xor
out
fwait
jns
mov
out
clc
sbb
sbb
arpl
mov
fs
(bad)
jne
sub
rcl
sbb
mov
fdivr
out
push
xchg
je
test
sahf
mov
(bad)
stc
add
ror
out
outs
loopne
jne
test
push
dec
xchg
sbb
adc
mov
outs
std
lea
add
pop
mov
pop
ds
fadd
fwait
xchg
ret
test
call
call
std
or
mov
pop
jb
aad
pop
stc
xor
sub
test
pushf
stos
sbb
pop
ror
f2xm1
arpl
inc
pop
or
mov
push
pusha
mov
(bad)
ds
rcl
retf
cmp
mov
aam
fimul
dec
popa
sub
repz
stos
hlt
add
mov
retf
pop
and
push
mov
mov
mov
adc
inc
pusha
lds
aas
leave
xor
jmp
cmp
pop
cwde
ror
jge
adc
movs
mov
cld
cmp
fldcw
sbb
mov
in
pop
jbe
or
ja
sbb
push
(bad)
sub
sbb
xchg
xor
adc
xchg
dec
jle
or
mov
movs
clc
jb
arpl
movs
pop
out
jle
int
cmp
stos
mov
push
test
jecxz
sbb
lods
cdq
std
pusha
stc
scas
enter
in
or
cmp
mov
out
xor
gs
mov
cmps
jmp
fwait
xor
sahf
sbb
mov
mov
ja
mov
sahf
icebp
xor
jle
push
push
mov
in
enter
cdq
mov
cmp
inc
sub
sbb
mov
xlat
div
mov
(bad)
xor
pop
push
push
pop
cwde
lahf
shl
inc
ret
mov
sar
sub
cdq
hlt
scas
lea
mov
adc
pusha
mov
push
add
inc
retf
not
(bad)
fcomp
fild
push
sbb
xchg
lds
xlat
sub
add
push
je
sub
enter
and
xor
push
pop
mov
adc
adc
push
sbb
xchg
fidivr
lds
shl
test
mov
push
lahf
push
std
fcomi
cmp
jecxz
mov
or
add
pop
and
sub
sub
add
adc
ret
stos
lods
pop
cmps
cmc
loopne
push
mov
int3
pushf
(bad)
push
dec
(bad)
ja
add
adc
jg
retf
imul
cmp
xchg
int
xchg
repz
fstp
int3
sub
add
(bad)
jb
test
scas
imul
cmp
adc
mov
dec
cmps
xchg
jnp
aad
and
inc
jb
movs
pop
aaa
div
in
loopne
xor
pop
aas
cdq
dec
add
xchg
mov
push
push
cmps
imul
shl
(bad)
int3
pop
sti
test
xchg
mov
xor
dec
cmc
mov
jb
cwde
out
pop
call
pop
jecxz
xchg
ror
xchg
pusha
mov
inc
push
mov
mov
daa
xor
lahf
add
jbe
mov
mov
cld
test
shl
fsincos
in
test
or
cld
scas
jle
mov
fist
pop
(bad)
int
xchg
ret
or
mov
push
mov
cmp
sbb
cmp
dec
loop
adc
loop
fild
sub
jo
shl
sbb
push
inc
pop
adc
jmp
test
mov
arpl
sbb
sbb
jne
mov
xchg
enter
add
sbb
loop
cmp
xchg
mov
sahf
aam
jae
sbb
out
or
pushf
mov
aas
outs
sbb
jne
add
jno
mov
add
sub
xor
inc
pop
pop
or
popf
pop
loop
xor
repnz
daa
hlt
enter
push
or
pop
jg
xor
clc
inc
in
sbb
jae
mov
mov
and
cs
movs
mov
jecxz
sub
mov
je
push
pop
push
xor
sbb
mov
xchg
cmp
sbb
fucomi
and
rol
fiadd
ret
stos
pop
and
dec
retf
pop
mov
cwde
sbb
xchg
inc
fcmovbe
xor
add
mov
dec
push
jns
cld
(bad)
fld
dec
lds
xlat
pop
ret
push
xchg
xlat
fcmovne
dec
out
xor
fsubr
aam
data16
(bad)
push
je
jb
imul
test
push
cdq
add
dec
pop
and
repz
ins
push
outs
sbb
les
add
jnp
ja
cs
(bad)
push
mov
sub
xchg
mov
jg
hlt
or
jecxz
std
dec
pop
mov
cmps
push
inc
and
mov
(bad)
cmp
or
pop
and
dec
xchg
add
pop
push
sbb
fisttp
mov
dec
adc
outs
stos
jnp
aam
leave
es
movs
in
mov
jno
sub
jne
pop
xchg
or
pop
xor
and
not
cli
jmp
test
xor
add
gs
cmp
cli
jmp
xchg
xchg
and
or
sbb
jle
addr16
push
ss
sbb
(bad)
pop
dec
adc
xchg
(bad)
sbb
sub
les
shl
imul
mov
iret
sub
adc
push
mov
jle
sbb
sbb
rcr
les
dec
mov
xor
xchg
add
sub
cmp
fwait
sub
sahf
or
out
sub
cmp
nop
push
push
scas
int
addr16
adc
sub
sbb
sub
das
out
cmc
sub
fdiv
mov
dec
pop
sub
loopne
add
inc
push
pop
dec
xor
sbb
or
xchg
(bad)
fnstenv
push
icebp
int
jl
lods
xchg
imul
add
test
inc
test
es
jae
jo
mov
adc
jmp
lahf
stos
xchg
cdq
xchg
inc
lods
int3
scas
jp
jne
jg
je
into
add
(bad)
and
shr
sbb
sub
or
mov
in
int
stos
in
out
cld
int3
(bad)
jp
pop
dec
sahf
jl
cmp
fadd
je
mov
sbb
adc
jg
addr16
sub
in
sub
pop
dec
dec
sub
jmp
dec
pop
cs
sbb
adc
xchg
inc
cld
inc
jb
push
pop
es
in
ss
lea
ins
loop
xor
adc
(bad)
cli
aaa
jb
xchg
or
mov
mov
pop
push
clc
dec
fcomp
arpl
add
inc
inc
inc
jp
fs
push
xchg
out
adc
les
adc
sub
pop
and
dec
in
jb
inc
pop
test
jmp
add
inc
sbb
sar
out
push
fwait
xor
popf
cmc
in
pop
or
enter
in
fisubr
dec
sahf
ins
xchg
sbb
ss
retf
jle
test
or
jmp
es
pop
mov
jge
jg
push
and
sub
pop
mov
in
xchg
or
sub
mov
dec
lahf
shr
pop
pop
(bad)
jmp
cli
jecxz
xor
aam
popa
cmp
or
jno
jo
sar
jmp
push
aas
mov
neg
dec
outs
int3
idiv
ret
rcr
dec
daa
call
retf
lods
(bad)
loope
or
add
adc
dec
popf
mov
sahf
rcl
dec
repnz
mov
jae
sbb
idiv
mov
mov
stos
jne
test
cmc
mov
loope
cmp
aam
push
adc
push
and
ror
or
jmp
dec
xchg
js
pop
xor
js
call
jp
push
dec
dec
test
outs
dec
sub
xor
xchg
cwde
cs
ja
mov
repz
mov
xor
sbb
mov
add
adc
lahf
xor
ror
jle
popf
dec
inc
cmps
pop
arpl
out
push
fiadd
jbe
ss
inc
stc
fs
or
dec
ret
ss
dec
sub
or
ins
pushf
pop
sub
cmc
arpl
lea
pop
inc
sub
inc
sub
inc
mov
sub
shl
mov
push
xchg
jnp
inc
daa
or
mov
enter
das
(bad)
lock
sub
mov
push
inc
shl
inc
fldcw
pop
ret
aad
jo
fldenv
fcom
inc
cmp
out
jae
add
jo
pop
outs
pusha
or
mov
stc
addr16
(bad)
inc
push
add
sbb
jl
ss
adc
jecxz
inc
and
push
call
test
in
out
mov
pop
ins
sub
xor
dec
push
ins
adc
out
mov
scas
dec
icebp
das
dec
pushf
out
scas
pop
(bad)
adc
call
(bad)
pop
mov
shr
dec
movs
sbb
popa
adc
retf
xor
xlat
inc
push
jmp
aad
(bad)
addr16
xchg
cmps
push
adc
cmp
iret
scas
mov
sbb
gs
popa
jmp
repnz
in
pusha
dec
inc
add
push
call
jne
sub
jecxz
jo
and
icebp
mov
mov
mov
and
sub
pop
mul
pop
test
dec
pop
sti
mov
daa
pusha
sub
pop
imul
lock
mov
xchg
mov
addr16
popf
pop
fmul
jecxz
out
pop
daa
xchg
dec
adc
xchg
cmp
fs
fwait
lods
dec
pop
mov
daa
leave
clc
or
sub
push
mov
mov
jmp
(bad)
dec
ss
sub
nop
dec
pop
shr
pop
(bad)
rcl
jns
inc
rcr
repz
cmps
adc
mov
aaa
push
js
fs
fdiv
lds
mov
sbb
xor
dec
xor
fst
mulps
fidivr
push
movs
aad
fdivr
dec
push
jle
sbb
sbb
and
(bad)
pop
or
aad
dec
call
xchg
mov
and
sub
repz
loope
cdq
js
stos
pop
lods
scas
jmp
test
es
int
mov
movs
lea
fwait
test
cmps
scas
sub
gs
push
fsubr
xor
int3
mov
cdq
mov
xchg
cmp
jb
sbb
sub
jle
xor
cdq
mov
gs
push
jp
xchg
inc
in
sub
pop
mov
push
sub
and
test
mov
bound
mov
pop
xor
add
dec
mov
dec
js
retf
sar
movs
icebp
sub
out
push
or
in
sbb
sbb
jmp
sub
inc
or
cli
xor
in
mov
pop
push
dec
adc
sar
mov
cmp
arpl
mov
xor
es
pop
xchg
dec
loop
jecxz
clc
iret
mov
and
sbb
loope
sub
pusha
add
in
mov
je
cmp
std
add
mov
pop
push
sub
adc
pusha
out
dec
or
outs
mulps
sbb
ds
pop
pop
jg
fwait
push
aam
mov
pop
rcr
mov
or
cmp
stos
push
inc
xor
adc
or
pop
mov
cdq
dec
jp
push
bound
push
jecxz
icebp
outs
dec
icebp
and
loopne
loopne
xor
movs
popa
jle
mul
sbb
push
inc
out
xchg
fstp
and
xchg
jb
pop
xor
ror
pop
fcom
xor
lea
add
div
xchg
aad
mov
pop
retf
in
pop
mov
in
and
pop
gs
jge
leave
sub
imul
out
hlt
add
mov
xchg
in
inc
jp
iret
mov
fs
push
xchg
add
aad
into
sub
lods
stos
pop
lahf
jo
sbb
mov
clc
sbb
mov
(bad)
or
scas
xchg
inc
mov
pop
adc
fdiv
lods
cs
xlat
pop
or
mov
and
fcomp
(bad)
fisubr
add
pop
dec
xchg
mov
out
rol
or
jns
and
stc
inc
mov
inc
lds
mul
dec
jns
pop
mov
mov
pop
mov
mov
ror
mov
sub
call
xchg
fisub
xchg
mov
mov
xor
pop
push
sub
cld
test
mov
pop
mov
arpl
cmp
pop
sbb
psubb
call
sub
mov
test
and
sub
push
dec
jg
lds
ins
aam
(bad)
cmp
sub
dec
ror
dec
mov
jae
jnp
or
dec
repnz
adc
adc
clc
or
les
retf
mov
or
mov
or
shl
push
bound
add
fisttp
add
adc
out
jecxz
retf
pushf
sahf
es
xor
pop
fst
add
and
push
je
dec
in
aad
int
aam
stos
stos
es
jae
xor
out
jne
int3
sbb
lds
adc
pop
pop
in
jno
push
push
cmc
ja
push
push
(bad)
test
mov
ds
dec
jp
jle
sbb
pop
idiv
xor
ror
sub
cld
add
jmp
outs
aad
sub
movntps
retf
mov
(bad)
movs
loope
out
ret
pop
mov
das
data16
mov
pop
leave
mov
jno
xchg
inc
push
dec
bnd
jno
inc
jmp
int3
cli
shl
shl
add
fadd
fidivr
jge
pusha
sbb
iret
cmp
mov
shr
cli
stos
pop
out
je
mov
imul
dec
fidivr
pop
sbb
ja
push
(bad)
mov
sub
xchg
sub
sub
inc
aad
sub
(bad)
(bad)
mov
fs
mov
add
loop
mov
lods
or
pop
sub
push
add
(bad)
mov
dec
iret
dec
into
push
adc
add
pop
dec
repnz
xor
retf
(bad)
lods
fld
mov
mov
ds
add
inc
xor
xor
mov
adc
cmp
(bad)
data16
and
pop
or
daa
push
retf
xor
mov
call
adc
out
pop
xor
add
jmp
add
jp
fscale
outs
test
repnz
jb
test
cli
es
(bad)
mov
add
mov
and
jno
ja
mov
imul
jae
out
mov
jge
jle
loopne
inc
add
jo
mov
sbb
push
mov
icebp
pop
(bad)
outs
and
push
xor
mov
test
mov
push
fld
mov
shl
jp
or
shl
leave
pusha
sbb
mul
and
es
or
pop
cmp
sbb
and
or
aaa
xchg
iret
inc
pop
pop
pop
cmps
or
dec
add
sub
adc
movs
add
scas
in
jb
sar
pop
(bad)
xlat
sbb
jmp
outs
pop
add
mov
repnz
sub
pop
push
mov
sbb
stc
inc
pop
cmp
jmp
push
cmp
and
cmps
xor
jge
hlt
mov
xor
xchg
jp
jmp
adc
js
aad
pusha
cmc
jne
xchg
loope
mov
cmps
dec
stc
cmp
daa
lds
cmp
mov
push
sbb
scas
mov
push
lods
sbb
out
aad
mov
push
xor
jno
pop
outs
sbb
jg
pop
lea
jge
gs
fld
out
lods
mov
fistp
out
dec
js
pop
push
or
enter
and
jp
mov
jge
ret
jg
push
movs
std
push
push
mov
xchg
push
dec
fisttp
sub
popf
out
inc
add
xor
arpl
or
or
jno
cld
pop
cmc
jae
xor
sub
pop
push
xlat
repz
xor
into
pop
enter
cmc
or
pop
in
loop
lds
adc
(bad)
jmp
mov
fisttp
mov
sub
mov
pop
es
fld
pushf
xor
cs
jg
(bad)
out
loopne
push
leave
xchg
mov
ret
xor
cwde
jae
fimul
xchg
shl
pop
mov
adc
inc
pusha
loopne
pop
js
lods
cwde
cmp
retf
vmovd
lea
ret
pop
or
sti
hlt
dec
mov
call
lods
xchg
pop
gs
xor
sar
in
loopne
xor
fwait
inc
dec
cmp
pop
xor
dec
cli
pop
pushf
jge
mov
outs
jb
sbb
in
out
test
jns
sub
cmc
stc
push
and
jb
addr16
push
cmp
inc
pop
pop
push
add
fistp
fadd
dec
dec
(bad)
(bad)
mov
cmc
iret
mov
retf
pop
mov
nop
out
push
fisubr
add
jge
jb
push
shl
dec
add
out
cs
inc
and
in
nop
jl
mov
add
jecxz
mov
ss
mov
mov
mov
pop
std
jmp
stos
push
pop
cmps
mov
or
mov
stos
test
sbb
and
cdq
cs
push
cwde
dec
sbb
ret
push
in
xor
fwait
aad
jmp
shr
ret
int
dec
jb
cwde
outs
jecxz
popf
sub
test
daa
pop
fwait
data16
data16
cs
pop
arpl
mov
or
lahf
fdivp
scas
mov
dec
dec
dec
clc
inc
sub
mov
stc
add
stos
jns
popa
push
fisubr
outs
add
fs
mov
cs
cld
loopne
lods
mov
fcmovne
call
cmps
xor
xor
inc
fldcw
mov
xor
pop
sub
xor
outs
lods
xor
mov
enter
test
in
pop
fnstsw
cdq
mov
mov
cs
jmp
sbb
jmp
or
add
adc
in
aas
lock
sub
add
aaa
jnp
hlt
fbstp
in
inc
or
or
mov
pop
mov
and
dec
fcmovu
jle
mov
cdq
pop
repz
in
out
pop
mov
(bad)
call
fcom
fisttp
repnz
repz
cmp
sti
sbb
xor
sub
dec
add
sahf
sar
push
cld
dec
push
cmp
xchg
retf
inc
push
rcl
mov
in
pop
cmps
nop
adc
push
into
loop
int3
call
inc
adc
mov
fild
sub
xchg
das
pop
sahf
lods
addr16
or
cmp
inc
cmc
push
sub
cmps
pop
ret
push
es
or
xlat
out
push
push
add
ficomp
mov
test
xchg
scas
lea
or
inc
shl
or
lods
sahf
sbb
cmp
in
add
cdq
shl
xlat
loop
fstp
mul
clc
push
fadd
or
pop
adc
add
cmp
push
clc
push
push
int3
hlt
test
push
movs
sbb
or
and
sub
test
xor
push
xor
push
lea
cmps
push
push
push
retf
cmps
sub
or
pop
imul
sub
xlat
das
gs
stc
stc
pop
fstp
sbb
(bad)
aam
mov
call
stos
xor
shr
data16
gs
fistp
pop
pop
clc
xor
xor
loope
add
jmp
and
ins
pop
xor
or
movs
or
sti
jp
adc
into
popa
inc
ins
mov
add
jg
mov
(bad)
dec
and
push
add
or
loope
jbe
mov
test
or
je
aad
add
mov
xor
je
in
int
adc
mov
add
neg
sahf
xor
movs
pop
jle
rcr
jmp
test
sub
push
xchg
pop
nop
icebp
cmps
cdq
xchg
outs
pop
add
sbb
sar
dec
scas
mov
mov
add
or
jg
dec
enter
fild
add
add
xor
push
fld
mov
adc
push
xor
aad
int
rol
sbb
pop
repz
repz
adc
(bad)
test
sub
push
push
int
sub
cmps
arpl
mov
add
int3
arpl
dec
cmc
and
inc
icebp
test
retf
loopne
(bad)
jp
cld
pop
or
pop
and
jb
aad
sbb
mov
dec
adc
pop
repnz
pop
mov
push
dec
jb
cmp
sbb
out
xchg
popf
xor
hlt
jo
jg
jo
imul
(bad)
xor
mov
fwait
lea
lock
jbe
ja
dec
mov
and
xchg
sti
mov
dec
push
retf
sbb
sub
sbb
inc
mov
rcr
mov
outs
sbb
cli
push
jns
xchg
fwait
mov
movs
cwde
sbb
dec
sub
out
mov
ret
add
sbb
loope
cmps
aas
and
inc
aaa
xchg
add
cmp
data16
cmp
pop
(bad)
out
int3
loop
shr
cmp
push
mov
xchg
sub
push
or
ds
adc
(bad)
jecxz
(bad)
xor
push
hlt
sti
imul
jecxz
cwde
adc
dec
sbb
loopne
test
mov
push
or
fmul
fidiv
movs
push
sub
outs
les
xor
cmp
or
ds
add
nop
sub
fsub
imul
pop
aam
cmp
sub
jle
rcl
in
dec
cmp
pushf
mov
test
add
es
push
jle
pop
jae
shl
shl
call
or
retf
pop
(bad)
jno
sar
pop
imul
clc
hlt
sbb
xchg
std
scas
mov
push
push
sub
stos
cli
add
push
pop
pop
push
outs
pop
fs
mov
gs
pop
and
in
xor
cmc
mov
rcr
and
dec
(bad)
and
adc
xchg
iret
mov
sar
enter
jecxz
jp
stos
dec
xchg
xlat
jb
push
(bad)
add
dec
add
int
loop
imul
cmp
or
ret
scas
inc
out
movs
add
xchg
adc
mov
adc
out
bound
pusha
cld
mov
jl
inc
jbe
addr16
pop
pusha
mov
retf
adc
cmp
mov
and
xor
imul
(bad)
push
add
cs
jge
jmp
cmps
cmps
(bad)
mov
add
mov
sbb
stos
xor
(bad)
shl
push
push
add
push
fwait
loopne
add
mov
lds
mov
cmp
dec
sub
cmps
add
adc
push
pop
sbb
mov
push
inc
in
ror
xchg
std
inc
ja
sub
retf
leave
or
push
into
sub
mov
sub
int
nop
jl
adc
imul
pop
sbb
test
jnp
int3
push
sbb
imul
or
call
mov
inc
enter
sbb
mov
ret
je
cdq
pop
push
js
inc
outs
nop
pop
dec
and
ins
(bad)
std
or
jecxz
dec
fdiv
ins
ficomp
pusha
push
xor
xlat
sub
addr16
xor
out
push
mov
in
inc
adc
xchg
add
outs
pop
pop
sar
enter
adc
(bad)
pop
dec
mov
inc
fild
lock
(bad)
pop
mov
or
loopne
cdq
stc
mov
int
fs
imul
fs
xor
mov
or
push
movs
cs
cld
jne
dec
inc
fs
mov
mov
pop
fistp
(bad)
push
leave
inc
fs
pop
push
enter
adc
loope
xor
or
(bad)
cmp
adc
ss
lods
or
add
shl
xor
retf
je
push
add
into
scas
push
jne
(bad)
mov
push
jp
mov
bnd
jns
call
aas
inc
scas
aas
arpl
and
jae
dec
inc
xlat
call
and
mov
and
popa
inc
mov
cmp
(bad)
outs
sbb
push
imul
add
dec
push
cmp
call
into
xor
xor
push
cmps
clc
popa
cmps
xchg
push
jb
mov
inc
ja
mov
pop
imul
xchg
adc
inc
dec
mov
ds
sar
not
cmp
jp
pop
sub
int3
ja
test
mov
jb
loope
(bad)
sbb
cmp
sar
ds
xchg
test
test
je
or
test
mov
xor
sbb
sbb
rol
in
dec
iret
sub
xchg
and
imul
inc
aas
and
xor
pop
(bad)
(bad)
sub
cwde
ror
adc
sbb
and
test
adc
adc
test
enter
add
movs
push
cmp
sub
dec
fld
loopne
arpl
mov
sub
sub
fstp
xchg
aad
jno
cmp
dec
in
pop
dec
and
in
jl
imul
mov
adc
xor
(bad)
or
out
ret
xchg
repnz
mov
push
retf
and
cmp
outs
mov
add
sbb
xor
add
inc
stos
mov
movs
or
jmp
lds
ins
pop
sahf
jecxz
pop
adc
mov
adc
ins
call
push
fmul
sahf
xchg
cmc
int
and
jle
dec
sub
ret
sbb
mov
pop
pop
mov
dec
lahf
stos
cmps
jmp
pop
xor
xor
cmovp
test
or
add
pop
adc
xchg
outs
rol
add
jg
inc
test
lods
sub
in
sbb
xchg
movzx
loop
daa
push
arpl
or
inc
sub
mov
mov
hlt
adc
in
dec
cmp
out
push
fstp
jl
or
mov
(bad)
pop
sub
and
push
xor
in
loopne
xor
out
arpl
inc
int
xor
or
inc
or
pop
cmps
in
push
jmp
in
jecxz
rcr
pop
mov
or
cwde
out
ror
mov
cmp
leave
nop
repnz
shl
fbld
in
shl
xchg
push
jno
out
sub
cmc
popa
imul
push
xchg
enter
sub
jecxz
hlt
clc
int
in
add
es
nop
(bad)
popa
dec
lds
in
mov
in
(bad)
dec
loop
push
test
xor
in
test
and
dec
call
sbb
push
retf
popf
in
inc
ds
xor
dec
pop
lea
out
ja
or
adc
xchg
test
and
(bad)
(bad)
add
sti
push
dec
test
into
xor
into
xchg
iret
and
aam
dec
data16
push
jnp
popa
scas
addr16
dec
xor
repz
imul
popa
test
sbb
push
xor
xor
stos
xchg
outs
icebp
adc
jae
xchg
pop
lods
popf
sbb
fnstcw
pusha
push
xor
imul
xor
sub
data16
cmps
sub
sub
xor
jne
jge
pop
es
pushf
pop
mov
and
adc
in
(bad)
enter
inc
inc
adc
dec
adc
or
xacquire
das
sbb
inc
xor
ins
jne
std
mov
xchg
pop
sub
popa
into
jp
inc
inc
shl
sar
sbb
add
in
stos
test
jmp
pusha
retf
lds
sbb
cld
imul
xor
sbb
pop
(bad)
jmp
sbb
push
push
loop
add
out
fld
inc
and
xor
mov
add
sub
mov
cdq
inc
inc
pop
or
dec
xchg
xchg
gs
xlat
mov
dec
lock
or
jae
pop
arpl
xor
mov
cmc
jmp
mov
adc
push
cmp
dec
push
inc
cwde
pushf
mov
aad
xchg
leave
fild
scas
xchg
jbe
gs
data16
xchg
aad
clc
sbb
rol
jmp
push
rcl
sub
imul
cmp
in
movs
lods
int3
dec
push
xchg
inc
loopne
jae
popf
push
imul
xor
and
ins
xor
js
dec
ds
add
call
sbb
and
out
mov
out
push
inc
xor
mov
popf
mov
ret
sbb
cmp
mov
daa
push
dec
jge
sub
(bad)
pushf
(bad)
fadd
aas
xchg
sahf
xchg
jmp
std
(bad)
retf
jno
mov
mov
(bad)
aas
mov
fistp
or
sub
mov
pop
mov
movs
ss
cdq
inc
aam
fs
and
les
sub
jmp
cmp
jmp
int3
push
add
adc
and
mov
pop
cmps
hlt
movs
nop
mov
or
jle
xchg
repnz
pop
xchg
ficom
push
hlt
jnp
popa
in
xchg
mov
addr16
mov
xchg
repz
dec
jl
ret
into
addr16
call
pop
jnp
dec
adc
jecxz
mov
sbb
daa
out
outs
xor
ja
out
or
rcr
enter
xchg
lea
cmc
sub
(bad)
retf
cli
jbe
mov
aas
pop
ror
pop
mov
(bad)
dec
mov
sub
jge
pop
pop
cmp
repz
int3
call
or
lock
outs
add
xchg
mov
nop
jb
add
pusha
jl
dec
push
push
pop
jp
sbb
(bad)
or
inc
jnp
(bad)
sub
add
hlt
daa
jge
daa
mov
loop
mov
and
and
add
push
add
jns
sti
std
dec
into
(bad)
or
lds
inc
pop
jecxz
fmul
test
sbb
pop
icebp
jle
mov
mov
in
inc
jo
jns
push
cmp
add
inc
or
in
and
(bad)
xchg
outs
add
loop
imul
test
mov
dec
jbe
fstp
bound
repnz
cmc
xor
pop
iret
imul
cs
call
out
sti
push
jbe
sahf
pop
dec
cdq
inc
or
clc
(bad)
push
push
ja
or
retf
stc
push
fsub
in
or
outs
pop
mov
ja
lods
sbb
clc
adc
jo
stos
fimul
and
int
sbb
jae
mov
aam
cmps
aas
not
and
outs
push
addr16
mov
and
out
ins
or
inc
test
mov
xor
sbb
pop
push
stos
fnsave
xor
add
sub
push
inc
aaa
or
lahf
sub
cs
call
les
pop
prefetch
fdivr
icebp
cli
inc
ret
(bad)
cmp
jne
cmps
es
daa
xor
inc
mov
and
mov
retf
ficomp
jecxz
std
inc
out
aas
ror
mov
daa
std
push
push
inc
addr16
mov
inc
xchg
rol
mov
(bad)
add
xchg
or
out
sbb
les
jb
sub
fisttp
pop
jmp
int
call
lahf
and
test
aas
adc
adc
neg
adc
xor
pop
xlat
push
jmp
push
mov
push
iret
(bad)
sti
sub
pop
xchg
add
add
test
loop
xor
hlt
or
dec
or
dec
push
add
leave
jge
sub
scas
fwait
jle
je
xor
mov
jbe
jns
sub
mov
fist
repnz
push
scas
inc
out
ss
cmc
inc
jge
fs
outs
outs
imul
pop
aaa
std
leave
(bad)
sub
pop
xchg
and
in
lods
ret
imul
jb
mov
sbb
mov
cmps
dec
add
jmp
sub
cmp
push
push
fistp
dec
add
xlat
dec
jle
push
mov
pop
cmp
pop
push
int3
dec
inc
mov
adc
cmp
push
sbb
cdq
add
test
call
out
sbb
add
add
dec
aas
dec
jg
mov
push
cmp
loopne
dec
fidiv
data16
xchg
push
rcl
in
xchg
fsubp
mov
sub
sub
push
jge
and
push
leave
push
and
pop
lahf
xor
cmp
adc
push
mov
lahf
jo
push
cmp
jmp
mov
pop
cmp
xchg
pushf
ins
cmc
mov
hlt
stc
repnz
pushf
mov
cmc
clc
xor
stos
and
cmps
xchg
inc
push
out
iret
xchg
pop
dec
mov
dec
mov
adc
fimul
add
cmps
jae
or
das
les
inc
jg
cdq
jle
pop
bswap
(bad)
arpl
test
adc
inc
xchg
hlt
aas
xor
aam
shl
into
push
cmp
cmc
clc
mov
jle
inc
xor
bound
pop
mov
ins
xor
lahf
cdq
add
cmps
enter
(bad)
cmp
mov
mov
pusha
push
int
jne
call
dec
fwait
sub
sbb
and
daa
adc
inc
fdiv
pop
cld
sbb
add
aas
or
jbe
(bad)
cwde
out
int3
rol
stos
or
push
inc
mov
test
dec
in
push
into
jo
ja
lds
movs
push
xchg
or
loopne
jb
xlat
push
fsub
jbe
cmps
adc
cmp
pop
adc
mov
and
or
pushf
jae
into
sbb
sbb
fdiv
dec
inc
dec
int3
mov
rcl
and
jnp
mov
inc
inc
imul
fwait
popa
jno
retf
jae
ret
repnz
sub
ss
pop
dec
in
jnp
cdq
add
rcr
daa
fmul
inc
push
cmp
repz
not
pusha
pop
ror
push
mov
jne
sub
add
(bad)
hlt
cs
movs
sbb
mov
(bad)
mov
or
aas
mov
push
test
sbb
arpl
inc
cmp
stos
jge
shr
loope
inc
xchg
jbe
stc
xor
xsha256
cmps
shl
adc
leave
int3
sub
ret
repnz
retf
in
xchg
mov
jns
inc
jne
xchg
cs
sbb
jl
fwait
mov
xchg
popf
or
in
out
push
rol
cmp
pop
mov
or
ds
inc
adc
mov
sub
inc
push
xchg
push
xor
ja
jne
sbb
inc
dec
sub
data16
push
pop
je
sbb
dec
jnp
xchg
jle
fisubr
dec
inc
mov
fimul
enter
pop
cs
sub
pop
xlat
outs
sti
add
call
(bad)
jge
(bad)
hlt
xor
inc
sub
jo
(bad)
adc
push
scas
add
mov
out
pusha
pop
fmul
pop
mov
mov
cmp
xchg
adc
inc
sub
jecxz
pop
mov
inc
inc
dec
jge
pop
or
(bad)
popa
push
cmps
add
xlat
test
push
outs
retf
popf
jge
or
push
jge
pop
pop
iret
(bad)
retf
xchg
dec
jl
ret
leave
loope
or
mov
cmps
mov
aad
rcr
fxch
push
punpckhdq
push
shl
xor
inc
sub
sub
in
les
out
mov
mov
scas
mov
mov
and
lea
addr16
sar
sub
and
cli
xor
xchg
test
sbb
sar
add
inc
and
push
mov
push
inc
icebp
mov
addr16
pop
push
aam
das
xchg
dec
inc
in
and
(bad)
jbe
dec
cmp
push
jno
dec
mov
mov
mov
sbb
test
cs
lock
jle
inc
pushf
inc
xchg
mov
xor
push
xor
cwde
test
rol
cmc
and
out
pop
stos
out
push
cld
les
inc
sub
add
dec
icebp
sbb
lods
and
mov
jle
jmp
mov
mov
mov
pop
enter
scas
fs
mov
push
in
push
retf
mov
xor
dec
jne
inc
and
sbb
mov
(bad)
(bad)
jecxz
inc
cli
ds
jl
xor
neg
clc
mov
mov
jmp
jp
mov
and
jg
sbb
or
pop
sub
imul
sbb
mov
sbb
mov
push
xchg
mov
pop
shl
fisubr
jle
(bad)
adc
dec
hlt
push
xchg
xor
or
or
add
xchg
data16
(bad)
hlt
popf
push
inc
aaa
inc
outs
fiadd
jle
lahf
les
xlat
dec
test
movs
mov
(bad)
stc
pop
(bad)
inc
xchg
sub
cmps
push
cmc
sar
push
mov
xchg
lahf
aaa
pop
gs
cld
adc
stc
push
es
mov
or
inc
fcomp
jp
jl
call
and
popf
ins
movs
retf
cmp
push
adc
jp
and
in
inc
xor
ror
jmp
mov
pop
jecxz
jne
dec
push
sub
cmc
aad
sbb
push
pop
(bad)
adc
(bad)
(bad)
call
or
dec
lahf
pop
retf
jl
xor
lea
aam
idiv
lock
inc
inc
jbe
mov
retf
push
sub
push
mov
fisttp
adc
cdq
dec
jno
push
sbb
and
popa
cmc
jmp
xlat
or
push
push
or
sbb
push
fadd
and
add
push
retf
xor
ss
add
retf
cmp
loope
adc
mov
cmp
lods
inc
shl
fwait
sbb
xchg
adc
fiadd
je
in
cmc
xchg
dec
jo
movs
add
arpl
es
push
pop
push
push
icebp
pop
xchg
add
iret
daa
jno
xor
and
or
and
adc
pop
sbb
mov
pavgb
mov
imul
inc
mov
cmp
inc
pop
aaa
cmp
cmc
mov
xor
jecxz
inc
push
xchg
push
loope
cs
sub
cs
(bad)
into
stos
sub
sub
shl
cmp
out
jmp
(bad)
jo
pop
pushf
lods
push
(bad)
mov
imul
push
add
mov
nop
mov
pop
pop
adc
lahf
jno
push
mov
sub
xchg
sbb
ja
pop
push
and
sbb
or
dec
xor
xchg
cli
or
or
inc
xlat
lock
mov
aaa
push
jle
inc
pop
je
jbe
std
inc
popf
leave
xor
mov
stos
je
mov
jmp
mov
jle
lods
int
nop
cmp
fist
pop
mov
pop
(bad)
loopne
aas
sub
sbb
sbb
and
push
mov
(bad)
test
sti
ret
lods
cmp
in
cmp
je
pop
es
cmp
xor
dec
xor
sbb
sbb
adc
(bad)
jmp
stc
sysret
mov
adc
movs
(bad)
out
jg
jmp
mov
inc
xor
out
push
adc
inc
push
gs
lods
dec
adc
data16
scas
and
adc
xchg
js
int3
ja
xor
rcr
xchg
repz
add
cmp
or
sbb
push
arpl
pop
sbb
jne
cmp
mov
xchg
pop
dec
or
cmc
test
pop
adc
into
add
movs
or
mov
aaa
and
in
inc
dec
jg
pop
mul
lock
or
ret
pop
or
test
inc
add
and
inc
xchg
or
fnsave
mov
stc
pop
(bad)
fisub
xchg
std
mov
or
and
imul
jle
xor
outs
sub
push
test
out
fiadd
int
xor
sub
cmp
or
mov
enter
mov
xor
loop
inc
or
scas
mov
hlt
movs
adc
xlat
(bad)
in
out
ins
mov
or
daa
or
ss
(bad)
fdiv
push
call
dec
cmp
scas
sbb
iret
fdiv
imul
sbb
into
arpl
mov
jl
xchg
dec
cwde
out
and
adc
lock
xor
add
movs
fisttp
add
ins
movlps
pushf
adc
lock
push
sub
stos
lds
push
add
jmp
cld
mov
int3
add
adc
push
push
sub
adc
pop
addr16
pop
dec
and
jmp
jb
sbb
dec
jae
xchg
pop
add
call
xor
aad
dec
push
pusha
pop
jge
add
mov
inc
xchg
mov
or
arpl
fisttp
pop
push
movzx
xor
or
retf
(bad)
push
mov
xchg
push
shr
jle
clc
and
sub
fmul
loope
mov
pop
adc
(bad)
mov
les
clc
push
adc
fisttp
cmp
xchg
mov
and
and
retf
not
out
cmp
sahf
movs
ret
pop
fdivr
sbb
add
(bad)
stos
fldcw
bound
scas
jbe
adc
push
sbb
and
pop
test
mov
cli
xchg
xor
pop
cld
sbb
add
jnp
dec
out
inc
jo
jl
lock
aas
loope
out
jb
out
pop
out
out
push
adc
jg
jo
jmp
pop
sbb
sbb
mov
ins
cmps
test
cmps
int3
lods
arpl
pop
imul
not
ret
add
sbb
scas
aas
xchg
outs
scas
retf
sub
push
and
mov
fist
adc
das
pushf
push
mov
push
jg
loopne
rcl
mov
mov
add
(bad)
aad
jne
test
pop
cmp
jb
cwde
stos
pop
and
and
sar
inc
(bad)
outs
jnp
jmp
test
jmp
mov
scas
aam
xor
adc
and
retf
and
or
and
ret
jmp
and
enter
stos
adc
add
(bad)
add
fwait
mov
push
dec
loope
mov
push
data16
sbb
in
js
and
jle
mov
sub
and
in
pop
lock
pop
xor
sub
into
jnp
push
arpl
aad
lds
xor
sbb
mov
add
mov
xor
dec
movs
adc
sbb
cmc
sbb
jno
jg
pop
sub
test
ret
adc
int
hlt
add
push
movaps
cli
mov
aad
std
cmc
xchg
pop
push
ins
arpl
out
push
arpl
adc
pushf
cmp
pop
sbb
icebp
fiadd
(bad)
xor
and
sbb
out
jnp
pop
and
das
pop
add
fnstenv
mov
pusha
jns
loop
repnz
in
xlat
in
packuswb
mov
cs
pop
test
leave
mov
xor
and
adc
cmp
idiv
imul
adc
cdq
cmps
xchg
dec
mov
add
jg
fdivr
push
sbb
jbe
or
pop
loope
xchg
mov
push
imul
mov
xchg
imul
jmp
sahf
pop
retf
imul
ret
loope
(bad)
pop
adc
test
xor
cmps
dec
test
pop
rol
das
jb
mov
adc
pop
rcr
cmp
mov
push
pop
out
test
sub
inc
or
or
and
ins
xor
dec
dec
or
call
or
xor
jmp
movs
sub
fsubp
adc
out
mov
sahf
retf
(bad)
mov
mov
js
push
aas
test
push
inc
sbb
out
hlt
out
and
(bad)
mov
xor
rcr
(bad)
cmc
pushf
aaa
jge
inc
fld
cmp
ins
cmps
add
mov
shl
adc
push
sub
and
sar
sbb
jmp
cmp
retf
mov
jnp
sti
inc
mov
(bad)
jnp
or
xor
lods
test
xor
dec
inc
(bad)
jl
jae
sbb
pop
inc
(bad)
outs
xchg
lods
mov
jne
test
ror
sub
sub
pop
pop
je
jg
jae
out
jmp
dec
daa
push
mov
lock
fdiv
js
mov
cmc
jb
(bad)
fcomp
cs
sbb
test
mov
daa
retf
xor
cld
push
movs
adc
add
add
mov
xchg
push
pusha
sub
leave
test
cwde
inc
bound
scas
scas
adc
xchg
shl
mov
jmp
push
push
xor
inc
inc
bound
mov
xor
mov
add
push
inc
dec
and
(bad)
mov
daa
mov
push
aad
jp
and
ds
push
iret
in
jbe
mov
mov
xchg
lods
pop
test
into
pop
sbb
rol
cmp
sub
push
jmp
mov
inc
ins
dec
test
xchg
inc
cmp
mov
sti
adc
sub
shr
add
dec
shl
fst
leave
pop
pop
add
jae
push
adc
or
mov
shl
popf
repz
sbb
pop
adc
mov
(bad)
and
mov
adc
xchg
pop
mov
aam
push
mov
mov
aas
cmp
push
cmps
mov
mov
cmps
inc
jne
sub
xor
(bad)
push
out
mov
mov
jle
or
cs
dec
xchg
loopne
add
sbb
add
retf
outs
pop
xor
pop
cs
mov
cmps
cld
jp
movsx
sbb
mov
jnp
fxch
cmp
aaa
shl
cmp
xor
pop
aaa
xchg
adc
jge
xchg
xchg
sub
xor
stos
ins
dec
inc
xchg
cmp
jmp
pop
ret
xchg
mov
aaa
loopne
(bad)
jmp
sbb
fsub
into
cs
std
add
inc
sbb
or
test
sbb
imul
mov
push
sti
out
imul
mov
inc
out
out
mov
outs
pop
and
push
xor
jno
and
mov
fmul
mov
jns
int
aam
sbb
into
mov
xor
dec
push
(bad)
cmp
sbb
sub
jbe
sbb
xlat
mov
mov
jno
ins
test
popf
and
sbb
mov
mov
xchg
mov
sub
cmp
(bad)
aad
add
sahf
popf
add
inc
loope
jbe
leave
es
add
or
aaa
jne
push
cmps
mov
je
xchg
aam
in
push
lea
jnp
nop
inc
jle
pop
and
loop
(bad)
pop
or
xor
fild
adc
fild
push
inc
aam
xlat
daa
jg
sub
xor
xchg
pop
xchg
push
lahf
mov
in
pop
lahf
or
int
sar
sbb
dec
push
jae
mov
xlat
dec
push
jmp
push
inc
daa
adc
xchg
iret
mov
cmp
push
and
repnz
mov
(bad)
jmp
add
fst
inc
mov
dec
dec
push
movs
add
push
lods
adc
cmp
fsub
xor
push
daa
add
xchg
dec
call
arpl
sbb
outs
cmp
popf
jmp
test
imul
int3
and
mov
fmulp
mov
jns
adc
int3
mov
add
les
xchg
jecxz
cmc
pop
mov
xchg
xor
jmp
mov
or
setnp
std
pushf
repz
inc
mov
dec
outs
jno
stos
leave
or
mov
les
jae
pop
pop
data16
leave
mov
test
inc
sub
repnz
dec
sbb
mov
xchg
mov
sub
jle
xchg
sbb
into
add
test
mov
and
int3
ss
jmp
pop
jl
or
sbb
cmp
test
out
aad
test
jmp
adc
(bad)
(bad)
enter
rep
xchg
icebp
fst
or
push
loope
and
push
push
std
add
pop
cmps
jg
add
fs
or
xchg
dec
imul
in
fisub
jp
xchg
push
repz
test
cmp
stos
loope
repz
pop
aad
test
cmp
out
adc
sbb
test
out
das
pop
or
js
sub
dec
or
mov
push
push
test
add
push
push
jmp
mov
test
movs
repnz
aad
sub
das
ficomp
div
dec
mov
and
xor
int
add
mov
rol
popa
int
sub
sahf
jae
lds
pop
fdiv
test
or
mov
(bad)
jns
jmp
rol
mov
sub
fimul
mov
rcr
es
sbb
(bad)
sub
in
adc
sub
frstpm(287
add
pop
arpl
sub
clc
pop
xor
mov
dec
(bad)
push
add
iret
dec
jne
aam
in
loope
inc
movs
cmp
movs
je
jl
dec
leave
inc
out
xchg
jbe
and
push
outs
jns
loopne
sub
mov
or
test
fadd
pusha
addr16
cmp
das
pop
imul
sar
sbb
dec
push
mov
daa
sbb
call
jecxz
stc
jnp
aam
out
imul
or
pop
ja
icebp
fwait
in
imul
xor
dec
sub
sub
in
aaa
mov
add
into
repnz
int
jge
fwait
xor
mov
dec
xchg
cmc
xchg
xchg
(bad)
jmp
popf
outs
outs
call
and
pop
lea
cmp
fcomp
pop
jno
pop
mov
mov
inc
(bad)
loop
pop
mov
mov
std
sub
test
mov
lods
imul
lods
inc
jno
and
lods
adc
dec
add
xchg
sub
daa
cld
push
das
jg
(bad)
adc
adc
pop
push
jmp
aam
dec
call
mov
(bad)
mov
rcr
cmc
sbb
out
in
loopne
rol
ja
sub
movs
inc
out
std
iret
or
ins
xchg
push
aam
retf
div
xor
test
and
inc
aam
pop
cmps
ds
inc
jne
test
inc
sub
mov
ret
and
cmpxchg
enter
out
popa
mov
add
mov
daa
js
xor
movs
adc
inc
repz
movs
dec
pop
jo
cmp
pop
xchg
mov
cld
jmp
js
push
sbb
push
adc
ins
or
add
jb
jne
fwait
sti
jmp
ss
rcr
cs
xor
and
mov
and
ins
retf
xchg
call
outs
sub
push
push
rcl
and
in
or
test
jle
cli
lds
mov
aad
and
test
pop
je
mov
retf
cwde
es
cmp
daa
push
push
mov
or
cmps
sbb
das
ja
mov
xor
pop
pop
into
xlat
jae
adc
or
pop
add
push
push
add
xchg
and
imul
and
mov
jmp
mov
sub
sub
sbb
pop
sub
fistp
xchg
and
fsub
iret
or
(bad)
mov
and
lds
retf
std
add
sub
xchg
ja
mov
jg
lods
mov
mov
jne
pop
push
ror
sbb
adc
scas
lea
ins
and
sub
movs
lea
lahf
xchg
in
imul
retf
or
dec
aam
mov
sbb
test
(bad)
jmp
sbb
(bad)
dec
je
dec
hlt
shl
rol
cmc
jno
shl
rcr
dec
mov
fwait
inc
cld
rcl
cwde
je
inc
fidiv
xlat
ds
xor
jbe
jb
cld
pop
dec
push
js
loop
ins
xlat
fs
push
ficom
push
and
push
jmp
jo
(bad)
xor
pandn
int3
cmc
call
stc
mov
movs
stc
mov
add
add
lods
ret
test
xchg
jno
fadd
jne
stc
pop
xchg
dec
fisubr
dec
fild
inc
mov
xor
movs
mov
jne
or
pushw
pop
inc
mov
mov
cmp
div
retf
outs
mov
xor
lods
cmp
cdq
test
cmp
mov
in
xchg
aam
jmp
pop
pop
xchg
mov
sbb
mov
(bad)
stc
push
jne
jne
popa
push
add
pop
or
jg
cmps
repz
mov
test
mov
xchg
inc
imul
shl
sub
into
cwde
std
push
outs
popf
int3
inc
popf
out
xor
ret
and
mov
jnp
sahf
jmp
cmp
xchg
jno
jmp
mov
adc
inc
icebp
mov
adc
push
jb
adc
mov
mov
jecxz
inc
and
jb
push
enter
enter
dec
cli
push
or
sahf
ss
shr
test
mov
stc
fwait
and
cmp
in
ins
pop
aas
arpl
jle
sbb
or
mov
sahf
arpl
retf
xor
test
je
and
push
popf
ds
adc
lods
or
pop
sbb
inc
pop
jno
(bad)
jbe
push
test
js
xlat
loopne
pop
xchg
cmps
jnp
mov
int3
cli
(bad)
fadd
hlt
rol
lds
inc
sbb
mov
enter
dec
push
push
jnp
cmp
imul
test
movs
cmp
sbb
out
inc
shl
aas
mov
test
int3
xchg
and
adc
mov
enter
mov
sbb
push
in
lahf
dec
cmp
cli
dec
add
pop
daa
(bad)
(bad)
sbb
dec
pop
pop
mov
imul
or
ror
imul
push
jecxz
fimul
and
test
cmp
leave
aam
mov
ja
out
ins
jb
push
cmp
sub
shl
mov
xor
loope
push
xor
sbb
push
sbb
and
push
inc
dec
xchg
out
jb
in
aaa
hlt
pusha
test
xlat
dec
icebp
stos
outs
enter
pop
jo
mov
ins
xchg
adc
dec
jns
cmp
xchg
repnz
ins
fs
fmul
lea
pop
xchg
or
in
add
mov
xor
mov
xor
test
addr16
int3
sub
daa
or
jb
retf
fdiv
or
sub
pop
stos
jne
inc
stos
pcmpeqb
lods
push
jne
call
mov
psubsb
push
mov
cdq
adc
cmps
aaa
aam
inc
mov
leave
mov
inc
iret
or
mov
sbb
ja
sbb
cmp
addr16
mov
popf
vpmacssdqh
inc
cmp
pop
inc
out
mov
cmp
sub
pushf
icebp
jno
xchg
and
pop
out
aam
ds
inc
cmps
dec
or
mov
push
jae
in
lock
adc
and
iret
and
pop
dec
pop
out
xchg
mov
push
pop
pusha
jns
inc
jmp
daa
mov
ins
dec
sub
mov
cmp
xchg
enter
add
and
or
sti
fwait
or
out
mov
(bad)
repz
je
xchg
dec
movs
pop
mov
retf
int
stos
mov
jno
pop
std
jg
lods
mov
sbb
cwde
cmp
push
stc
push
xor
popf
scas
js
xchg
pop
dec
call
sahf
add
xor
mov
sub
adc
sub
or
dec
sub
scas
mov
sbb
aaa
cwde
popf
pusha
fild
sbb
push
jo
or
add
xor
lea
inc
pop
and
or
xor
mov
and
ss
push
repz
push
daa
ret
pop
dec
daa
mov
neg
(bad)
pop
(bad)
add
iret
inc
leave
cmps
popa
inc
inc
popf
fcom
adc
call
dec
fild
hlt
or
rcl
aam
inc
xchg
cdq
adc
outs
inc
xor
pop
cmp
lahf
stc
loope
(bad)
inc
inc
push
xor
add
scas
or
das
xor
das
jo
jo
dec
pop
enter
pop
call
rcl
xor
out
pop
dec
fst
and
lock
xor
mov
jge
xchg
inc
pop
loopne
and
sbb
jge
xor
cmp
stos
rol
jg
xchg
rcl
fst
sub
or
pop
pop
xchg
in
mov
shl
xor
ins
xor
into
sbb
xor
iret
jae
mov
xchg
push
push
das
mov
retf
sub
adc
mov
daa
outs
inc
and
jle
repnz
lods
ss
push
loop
cmp
xchg
cmp
push
dec
mov
sbb
repnz
cmps
and
jmp
add
mov
cmp
rcr
mov
cmovb
mov
scas
scas
cmc
or
lods
cmp
mov
es
add
out
sbb
(bad)
xor
repnz
ja
fcomi
pop
xor
inc
mov
fdivr
jb
rcl
xchg
pop
js
je
or
or
adc
dec
add
cld
or
or
inc
add
into
fst
pop
push
fisttp
mov
cld
aas
imul
jmp
xchg
popf
dec
jecxz
stc
mov
xor
call
jmp
push
imul
and
mov
pop
xor
jbe
int3
sub
leave
push
pop
dec
push
rol
dec
dec
jle
or
sub
xchg
out
mov
ja
cmp
test
and
pop
cdq
in
and
xchg
pop
mov
jnp
mov
hlt
jg
push
bound
push
push
sub
or
fadd
mov
in
mov
loope
mov
mov
inc
test
dec
mov
sbb
inc
push
adc
dec
cmp
adc
je
fld
inc
jno
mov
pushf
out
add
sbb
(bad)
loope
lods
xor
iret
push
aaa
(bad)
jmp
pop
pop
mov
inc
adc
das
sbb
fadd
mov
call
mov
push
jnp
leave
ds
sub
push
mov
jno
dec
dec
cwde
push
push
pop
pusha
or
sbb
pop
in
or
push
inc
mov
mov
xchg
jmp
iret
iret
inc
aad
test
lods
xor
loop
mov
add
popf
adc
es
xor
scas
mov
xchg
inc
xchg
pushf
movs
iret
jne
jg
mov
sub
rcl
cli
xor
pusha
jno
push
pusha
rcr
ss
sbb
mov
adc
jae
xor
mov
pop
sub
dec
out
or
les
push
mov
rcl
into
or
popf
jecxz
adc
rcr
fisttp
mov
pop
xor
pop
xor
cs
ror
in
pusha
rol
pop
ins
dec
xchg
cmc
add
xchg
xor
mov
les
xor
in
mov
mov
aaa
sbb
stos
aaa
cmp
stc
or
adc
inc
cmp
or
popa
jle
cmp
sbb
fidiv
cld
xchg
sbb
and
sbb
cmc
std
std
ins
xchg
sbb
popa
jbe
mov
inc
ins
lock
xchg
xor
sbb
jne
lds
ror
pop
adc
retf
shl
pop
dec
(bad)
sub
inc
ss
xlat
sub
mov
dec
jne
stos
in
aas
dec
dec
jge
pop
jge
xor
scas
xor
inc
dec
iret
push
js
or
stos
ins
imul
and
mov
js
out
add
mov
cli
dec
fnstenv
cwde
sub
pop
cli
adc
shr
jbe
in
adc
pop
add
les
fmul
sti
inc
cmovbe
inc
inc
xchg
call
add
sbb
jae
mov
sahf
test
in
pop
xor
add
mov
and
xor
push
push
mov
adc
loope
hlt
mov
scas
sub
lods
out
or
pop
mov
aaa
adc
test
jb
sti
dec
clc
ffreep
(bad)
push
jmp
xor
or
dec
shl
in
cwde
ds
inc
cli
popf
pop
es
leave
ror
push
or
sbb
out
adc
movq
adc
pop
test
(bad)
mov
add
cmp
mov
inc
ja
sbb
mov
ins
sub
cmp
push
inc
addr16
out
push
clc
loope
adc
repz
cdq
aad
jo
cli
cwde
xchg
lds
and
push
sub
gs
pop
lds
lds
dec
inc
add
cmp
sub
ret
xchg
mov
and
push
jecxz
ss
cmp
rcr
jno
or
mov
adc
xor
sub
neg
mov
inc
int3
pop
rol
mov
add
int3
outs
test
pop
int3
xor
sar
and
loope
repnz
cs
inc
repz
mov
fsub
mov
adc
sub
xchg
xlat
sbb
leave
sub
mov
push
push
jb
jle
ins
fild
mov
jbe
sub
mov
lds
cmps
arpl
mov
stc
pop
mov
je
jns
adc
pushf
test
(bad)
cs
or
imul
cs
xchg
mov
mov
mov
cdq
adc
scas
mov
fadd
push
sti
jge
lods
hlt
dec
sub
sti
popw
add
outs
int
std
sub
pop
cs
int
loop
pop
sbb
(bad)
fbld
add
adc
xor
(bad)
push
mov
cmp
lea
push
xchg
std
cmovne
cs
xor
push
jne
cmps
dec
adc
sar
xchg
pop
and
adc
xchg
leave
push
addr16
out
addr16
imul
aam
sub
rol
std
fwait
cdq
fidiv
and
leave
sub
mov
cmp
pop
es
jmp
fimul
push
shr
or
add
fcom
lahf
fs
or
adc
push
nop
mov
add
mov
mov
test
inc
test
dec
ret
and
scas
push
dec
dec
(bad)
(bad)
cmc
bsr
repnz
inc
sbb
adc
jecxz
int
je
adc
sub
movs
dec
mov
xor
test
cmc
add
mov
mov
test
movs
cmp
aad
repnz
jno
jecxz
scas
xchg
movs
xor
pop
mov
jno
mov
or
push
sbb
cmc
fist
inc
cmp
int3
add
cmp
or
out
cmp
int
ds
or
sbb
cmc
pop
sub
xchg
pop
mov
(bad)
xor
dec
fstp
mov
sbb
sub
pushf
stos
rcl
push
std
cmp
or
xor
and
rcl
xchg
push
cmp
adc
xor
es
sub
test
data16
push
hlt
mov
imul
aad
inc
xchg
gs
mov
push
(bad)
dec
mov
test
ja
push
adc
sub
call
loop
sub
mov
mov
jle
fwait
es
jno
es
in
mov
push
push
xor
xchg
ret
xchg
jmp
pop
sub
push
inc
mov
mov
jbe
xchg
outs
cli
dec
push
push
jg
pop
pop
popf
dec
sub
mov
into
icebp
inc
xchg
inc
add
lea
mov
clc
loop
dec
push
xor
add
imul
dec
in
sahf
inc
mov
cmp
and
mov
(bad)
push
mov
retf
mov
pop
add
retf
inc
aaa
dec
dec
fimul
in
fiadd
out
dec
gs
push
mov
stos
or
leave
pop
push
push
bound
dec
ins
push
or
inc
add
or
fld
mov
lock
dec
xor
and
dec
into
adc
mov
pop
div
in
cld
daa
(bad)
in
(bad)
xchg
pop
fucomp
push
jbe
cmp
ja
aaa
cdq
lahf
fisttp
fistp
jne
jg
and
retf
pop
xchg
int3
sub
sub
cmp
enter
imul
sub
or
xor
jbe
test
enter
sbb
push
loope
adc
jae
add
jmp
jl
sub
mov
cld
stc
push
mov
cld
jl
xchg
sub
jnp
lea
in
outs
int3
sbb
or
stos
xor
pop
jmp
sub
jecxz
sbb
mov
pop
xchg
jmp
push
cmp
icebp
(bad)
in
ins
mov
dec
cmps
jb
push
shr
mov
mov
in
inc
push
cs
add
mov
dec
int3
push
sbb
int3
clc
sbb
adc
push
dec
add
xor
inc
adc
test
cld
dec
mov
or
xor
xor
mov
xchg
mov
dec
loope
aad
imul
add
jo
repz
jge
lea
mov
xchg
retf
dec
dec
sub
adc
sti
sub
jb
sbb
mov
icebp
mov
retf
aad
sbb
pop
in
inc
jae
retf
scas
dec
add
ja
daa
es
push
sbb
data16
pop
mov
jae
dec
mov
pop
addr16
call
cmp
cwde
cmc
or
adc
in
aam
jns
and
xor
pop
xor
popa
(bad)
xchg
xor
jb
inc
imul
mov
ins
int3
cmc
xchg
cmp
dec
add
jecxz
stos
sahf
es
xchg
aas
and
push
call
aas
jae
dec
jne
lods
in
or
jno
inc
addr16
or
push
mov
sbb
add
into
mov
icebp
loop
test
xor
js
inc
mov
fwait
movs
in
xor
pop
pop
int
fstp
push
jg
push
(bad)
or
or
rcl
push
sbb
and
movs
nop
into
es
adc
dec
mov
pop
sbb
xchg
sti
pushf
jns
fbstp
out
test
cwde
pop
and
mov
or
or
les
dec
xor
inc
and
push
push
jne
lea
xchg
or
xor
js
pop
xchg
mov
out
dec
jne
add
cmp
in
push
ja
dec
xchg
add
or
and
cmp
mov
arpl
and
dec
repz
jno
imul
dec
and
ins
xchg
dec
xchg
es
test
pushf
mov
or
jp
arpl
std
xlat
stc
push
jge
xor
dec
adc
xchg
pop
setge
xlat
adc
data16
inc
mov
icebp
dec
cmp
repnz
std
and
lds
mov
inc
xchg
repnz
pop
sbb
dec
push
sub
dec
ins
pop
jne
inc
xchg
sub
lahf
and
xchg
(bad)
out
cdq
sub
mov
add
push
hlt
inc
lahf
inc
cmp
mov
push
lods
mov
dec
sar
mov
mov
movs
shl
adc
sbb
lock
popf
mov
rep
(bad)
jge
xchg
mov
cmp
int
lea
inc
js
sbb
shl
add
enter
mov
cmps
pop
sahf
sub
xchg
pop
jecxz
fldenv
xor
or
sbb
ret
push
push
or
mul
mov
push
adc
(bad)
adc
jbe
lahf
push
data16
iret
fbld
mov
pop
and
xchg
add
add
jmp
sbb
bound
fs
jmp
addr16
mov
cmp
fsub
and
in
fstp
dec
sub
gs
loope
cmps
sahf
int3
mov
aas
or
jg
ror
lea
mov
rcl
andps
ja
pop
sbb
(bad)
movs
outs
(bad)
pop
inc
xchg
nop
jmp
push
js
or
fdivr
xchg
cmp
dec
sub
jecxz
mov
or
popf
jb
setne
jmp
mov
test
inc
sbb
mov
ins
or
out
fild
mov
mov
inc
mov
lods
fnsave
fwait
mov
pop
in
push
push
jo
addr16
adc
xor
lahf
jmp
mov
int
jmp
cmp
(bad)
mov
sub
test
push
and
and
or
dec
lds
mov
sub
add
adc
fwait
cmp
enter
pop
pop
loopne
and
aaa
or
ins
dec
or
aas
push
cmp
aas
popa
xor
aaa
push
aas
repz
push
int
push
push
push
fwait
pop
add
and
pop
aad
ins
aaa
test
cmp
cmp
movs
das
pop
pop
push
in
push
and
xchg
adc
cmp
sbb
jno
adc
push
call
sbb
inc
xor
mov
mov
push
sbb
inc
inc
pop
pop
push
sti
sbb
sti
lds
pop
mov
jg
cs
icebp
sub
push
pop
dec
pop
rcl
xchg
movlhps
les
rcr
jae
mov
jb
sbb
jmp
outs
push
pop
dec
or
retf
outs
adc
(bad)
adc
add
xor
inc
jle
and
xor
inc
adc
push
sub
scas
pop
out
push
pop
add
or
sub
push
dec
icebp
(bad)
out
out
in
mov
sub
outs
inc
sub
fsub
in
xchg
ds
test
push
fs
or
dec
and
js
dec
mov
xchg
and
and
cmp
pop
or
jmp
mov
out
int
inc
push
push
cmps
(bad)
(bad)
push
cld
dec
mov
scas
dec
jo
js
push
loop
inc
dec
cmc
sets
pop
dec
popa
pushf
pop
das
cdq
cwde
sbb
cli
fnstenv
add
push
sbb
jns
sub
into
or
enter
rcr
mov
sub
repz
aad
add
ins
stos
dec
push
out
in
repnz
push
sub
adc
movs
jp
add
test
dec
pushf
loop
out
mov
rol
aaa
cld
mov
fcomp
cmp
jg
sbb
pop
sahf
or
sub
sbb
into
aaa
test
mov
mov
sbb
fldcw
outs
mov
jg
add
jg
lahf
xor
mov
add
les
jg
mov
mov
ret
sar
sub
icebp
pop
into
loope
sub
xor
mov
mov
les
and
stc
dec
enter
sbb
sbb
enter
std
or
pop
ins
add
mov
lods
shl
popf
das
hlt
sbb
outs
jmp
cmc
inc
adc
popa
sbb
and
or
cmps
(bad)
cdq
cmc
imul
arpl
pop
add
jmp
push
mov
mov
fmul
cdq
nop
push
enter
xlat
adc
test
mov
mov
xor
mov
call
scas
cmp
cs
adc
cmc
pushf
mov
mov
fdivr
pop
stos
iret
pop
lds
ins
pop
(bad)
outs
dec
sbb
std
inc
ror
arpl
out
mov
ds
je
out
lock
dec
iret
sbb
pop
call
mov
popf
fld
stos
pop
sub
(bad)
repz
in
pop
lock
aas
test
sbb
pop
(bad)
(bad)
(bad)
sti
mov
das
push
pop
into
iret
pop
imul
clc
jle
out
in
scas
lock
mov
fcomp
aaa
clc
lods
jo
loopne
das
and
mul
loope
out
mov
or
mov
dec
xchg
je
hlt
xchg
pop
into
xchg
jl
aas
xor
int3
sbb
data16
sub
stos
cmp
(bad)
sahf
sti
ffree
xor
aad
pop
add
sti
mov
cmp
adc
les
fisttp
jae
shl
rol
in
push
cmps
mov
fld
into
mov
icebp
mov
cli
lahf
sbb
out
mov
js
xchg
dec
fsub
inc
pcmpeqd
mov
sti
fcom
aas
dec
int
nop
in
mov
stos
pop
sbb
and
and
dec
pop
pop
mov
in
sbb
pop
js
add
or
pop
pop
mov
jg
loope
push
(bad)
jmp
add
pusha
out
in
pop
sbb
sub
stos
test
pop
pop
xlat
sbb
(bad)
loopne
xchg
in
imul
daa
mov
add
jmp
mov
(bad)
inc
mov
pop
fisttp
sbb
(bad)
scas
mov
mov
dec
or
out
aas
(bad)
imul
fs
jg
or
aaa
retf
inc
loop
pop
jae
or
sbb
loopne
ss
adc
jg
and
dec
leave
out
push
sti
pop
pop
add
fld
(bad)
adc
xchg
push
pop
fsubp
arpl
push
(bad)
arpl
cmps
cs
sbb
inc
sbb
dec
xor
dec
fbstp
lods
adc
xrelease
je
push
or
daa
mov
mov
inc
jp
push
jmp
inc
add
jp
outs
das
mov
seto
test
inc
cmps
loopne
popf
xor
lods
xor
clc
in
mov
aad
aaa
adc
sbb
das
int
sahf
inc
cmp
and
and
inc
je
or
rol
ret
xor
or
(bad)
inc
repnz
and
sbb
push
mov
aaa
or
stos
push
pop
ins
cli
jecxz
bound
int
test
js
pop
sbb
xchg
imul
pop
cmp
(bad)
sti
push
fcomp
pop
shl
sub
fwait
xor
inc
lods
push
fiadd
sub
xor
push
mov
push
sbb
loop
ror
inc
into
in
add
mov
dec
dec
add
call
pop
fst
dec
sti
sub
adc
inc
push
in
push
and
div
clc
or
cmp
dec
cmc
imul
call
jns
push
or
imul
push
cli
push
rol
(bad)
or
xchg
movs
inc
and
mov
jb
jg
jle
and
imul
aas
adc
addr16
push
inc
pop
pop
dec
jne
pop
jns
or
frstor
je
and
sbb
nop
test
jns
xchg
dec
jne
jecxz
jmp
xchg
sti
push
mov
or
ror
fsub
fdivr
test
(bad)
shl
shl
aam
retf
ja
jp
dec
mov
mov
mov
retf
add
pop
or
sti
inc
add
popa
bswap
adc
dec
fld
and
pusha
pop
and
xor
les
sbb
repnz
mov
mov
adc
loop
arpl
sub
gs
xor
fs
or
add
in
call
fs
xchg
pop
int3
lods
lahf
pop
bnd
fiadd
jbe
mov
xor
arpl
adc
icebp
cld
jmp
xchg
cmps
lahf
cmp
pop
into
rol
cmp
std
out
sub
popf
adc
pop
jmp
push
mov
inc
inc
mov
adc
sub
(bad)
and
jne
orps
dec
aam
inc
ja
sub
push
(bad)
out
lods
mov
or
push
ror
dec
das
cwde
addr16
or
ins
enter
sub
dec
inc
cld
push
mov
jne
and
lea
or
(bad)
and
out
jae
mov
and
mov
retf
and
fnstcw
iret
adc
das
sub
pop
ret
mov
xchg
jno
(bad)
mov
xor
mov
sahf
jnp
(bad)
push
inc
ja
inc
cs
jl
retf
mov
pop
dec
xchg
sbb
(bad)
xchg
cmp
nop
pop
addr16
leave
outs
sub
out
add
outs
jmp
dec
fwait
rcr
sbb
sbb
loope
cs
ss
pop
fsub
sub
jl
mov
jl
pop
fwait
hlt
fsubr
cmp
imul
jmp
adc
popf
stos
dec
push
sub
repz
test
inc
mov
jecxz
enter
pop
pop
push
sbb
dec
jb
pop
or
bound
and
daa
cwde
dec
or
jmp
sub
dec
cmps
jmp
inc
mov
and
jbe
add
and
and
xor
aas
xor
stos
xor
into
sbb
dec
xor
movs
call
repz
mov
loopne
xor
mov
movs
dec
(bad)
addr16
rol
xchg
jbe
lds
clc
xchg
popf
(bad)
fdivrp
test
mov
sub
adc
sub
xchg
inc
inc
data16
mov
cdq
aam
and
xor
inc
mov
je
xchg
dec
mov
fsubr
mov
jns
add
pusha
das
mov
int3
int3
sub
std
xor
dec
mov
scas
mov
add
sub
inc
jp
lock
imul
fdivr
sbb
or
add
sbb
out
(bad)
add
sbb
jmp
inc
jns
mov
and
add
and
sbb
adc
push
adc
sbb
pop
and
lds
(bad)
cmp
push
inc
mov
sub
and
popf
pop
ret
(bad)
sub
loop
scas
adc
pusha
xchg
fisubr
fisub
pushf
and
rcl
fistp
mov
push
scas
out
aam
cmp
iret
lods
pop
imul
sub
mov
dec
ret
mov
cmp
ficom
sbb
pop
mov
mov
dec
sbb
ret
ins
test
stc
mov
hlt
pushf
sar
cwde
sbb
popf
cmp
xchg
sub
enter
or
mov
call
neg
pop
sub
sub
mov
pop
inc
popf
push
adc
outs
xchg
retf
pop
xchg
mov
xchg
movs
add
inc
add
push
jmp
or
shl
mul
and
das
inc
inc
mov
repz
push
dec
jb
popf
sub
dec
or
pop
test
inc
and
aad
and
mov
pop
daa
movs
(bad)
sub
in
test
xchg
pop
xchg
pushf
out
mov
in
(bad)
jns
cwde
mov
pop
dec
aaa
mov
jb
xor
jo
test
clc
xlat
inc
push
es
shl
push
out
int3
and
jns
fs
loopne
sub
fidivr
adc
sub
out
je
sub
mov
rcl
push
cmp
pop
outs
test
ja
mov
xchg
cmc
mov
or
adc
popa
out
push
mov
inc
sbb
das
inc
dec
sub
xor
jle
test
xlat
sub
aas
adc
adc
cdq
add
retf
ja
dec
ret
and
mov
or
sub
fdiv
add
cmps
jnp
rcr
mov
rol
retf
lock
xor
(bad)
scas
jle
dec
sbb
dec
jno
in
mov
aaa
pop
cwd
mov
cmp
cmp
lods
(bad)
ins
xchg
sbb
sbb
cli
dec
push
outs
adc
mov
imul
addr16
cmc
inc
and
xchg
push
dec
pusha
int3
sbb
(bad)
sub
in
lods
in
sub
fsub
fild
jmp
lods
sub
dec
les
add
sub
pop
mov
inc
sbb
push
(bad)
push
(bad)
cwde
popf
cmp
xchg
outs
shl
inc
shl
ins
pop
js
push
sbb
jmp
cs
inc
outs
jmp
(bad)
popf
aad
push
shr
ret
or
jae
push
xor
push
fsub
int3
jecxz
test
out
push
aad
pop
into
int
push
xchg
push
movs
push
xchg
stos
call
add
or
repnz
data16
push
(bad)
jbe
ror
sbb
mov
add
xor
lahf
(bad)
lock
cmc
aam
into
jg
in
sar
out
pushf
rol
inc
mov
xchg
inc
mov
(bad)
pop
mov
outs
in
inc
jecxz
pop
push
pop
aas
and
fwait
sub
jg
dec
in
mov
mov
dec
cmp
pop
dec
ror
xor
sbb
call
bound
pop
fwait
les
lahf
xchg
popa
cmps
lods
hlt
test
pop
scas
jl
mov
jns
pop
addr16
test
fsubr
and
add
(bad)
jnp
or
or
shl
test
mov
movs
jns
(bad)
ds
xlat
jnp
shr
retf
or
(bad)
test
or
jno
and
jae
sbb
fidivr
and
out
sub
sbb
mov
add
inc
or
add
fcmovb
jl
push
dec
cmp
cmp
xchg
clc
sbb
cmp
pusha
test
push
jb
loop
pop
pop
dec
mov
icebp
loope
adc
movzx
inc
movs
jl
out
push
fbstp
test
das
inc
js
scas
mov
dec
test
mov
out
mov
sub
mov
xor
cdq
jbe
cli
cmp
xor
aam
add
xor
jbe
std
or
aad
pop
inc
or
test
sbb
sub
xchg
shr
adc
sub
stos
mov
and
lea
xlat
outs
push
mov
jmp
push
cli
jmp
dec
mov
in
into
leave
aad
std
out
and
or
and
mov
rol
clc
xor
xchg
inc
clc
mov
add
mov
shl
(bad)
lock
jb
icebp
imul
xchg
ss
lds
inc
bound
or
pop
int
dec
mov
aaa
in
fs
or
aad
inc
lds
mov
push
pop
sbb
pop
sub
iret
xchg
xchg
cld
add
call
pop
lea
cdq
dec
ss
fwait
cwde
stos
dec
mov
fwait
ret
jge
mov
fimul
rcl
push
(bad)
(bad)
sbb
add
(bad)
imul
cmp
aaa
jnp
adc
inc
sub
mov
cmp
movs
push
leave
pop
fild
sub
mov
jne
xor
or
fwait
pop
xor
loop
jns
rcr
ret
add
dec
pop
sbb
jno
pop
dec
out
out
inc
mov
add
repz
cwde
cwde
es
in
imul
add
sub
call
out
sbb
mov
out
shr
jbe
fwait
scas
popa
mov
jo
push
stos
jb
mov
je
outs
shl
and
stos
outs
xchg
lahf
xchg
jecxz
sub
pop
ret
or
or
cmp
data16
mov
into
test
xor
xchg
dec
jg
sub
(bad)
mov
push
dec
or
movs
sub
jb
dec
lock
xor
enter
sub
and
mov
mov
add
in
(bad)
or
mov
push
cmp
cwde
sub
push
stos
or
mov
leave
in
daa
and
mov
adc
leave
mov
cmp
adc
mov
(bad)
pop
(bad)
sahf
mov
dec
sub
gs
adc
or
js
sub
dec
icebp
ins
jns
inc
or
xor
outs
ret
dec
dec
mov
adc
jle
add
ficomp
out
xor
movs
rcr
addr16
xchg
jmp
in
jns
pop
fucomi
fimul
pushf
aaa
push
dec
xor
lds
gs
(bad)
daa
pop
sti
push
imul
std
iret
sub
inc
and
lock
mov
adc
jle
mov
inc
mov
popf
pop
or
inc
inc
clc
and
repnz
movs
sub
retf
cmp
test
scas
loop
xchg
sub
icebp
(bad)
not
and
sbb
sub
(bad)
loop
sbb
or
aam
adc
push
xor
inc
shl
inc
leave
cs
push
xchg
out
pop
push
call
pop
outs
repnz
mov
add
les
cmp
or
retf
pushf
clc
(bad)
jecxz
adc
push
and
lods
sub
pop
dec
or
push
pop
sub
(bad)
call
mov
jmp
pop
adc
push
inc
xor
xchg
push
fidivr
loope
das
xor
mov
sbb
call
arpl
fild
and
push
mov
cmp
int3
mov
dec
add
fisub
mov
xor
sub
inc
sub
mov
mov
adc
(bad)
sbb
adc
movs
push
aad
push
imul
int3
mov
js
jl
pop
popa
push
fidiv
adc
pop
pop
mov
mov
call
push
xor
cli
mov
and
(bad)
push
mov
aad
call
aas
sub
sbb
mov
sub
fwait
test
pop
ss
sti
and
stc
addr16
out
scas
cmp
cmc
sar
pop
rcl
inc
xor
fsub
push
fwait
mov
call
pop
jecxz
sub
push
sbb
icebp
push
fimul
loopne
push
xor
jp
inc
ss
ja
(bad)
dec
xchg
or
test
popf
cdq
sub
loope
ja
cmp
repz
lahf
cmp
call
cmps
je
repz
and
les
or
popa
mov
sbb
pusha
add
repz
push
out
es
arpl
(bad)
xchg
dec
out
jmp
and
jge
push
movs
lock
shl
or
lods
add
std
in
fwait
xor
dec
jecxz
xlat
or
and
rcl
or
sbb
stos
cmp
rcr
stc
and
ss
cmp
sbb
(bad)
lahf
(bad)
pop
and
pop
lea
xchg
cmp
lahf
dec
int3
push
mov
xor
inc
leave
into
jbe
pop
inc
(bad)
std
icebp
sbb
mov
mov
jecxz
pop
mov
idiv
or
add
leave
icebp
pop
xor
xor
inc
adc
into
call
pop
lods
inc
fnstenv
mov
int3
mov
xchg
mov
xor
outs
push
cs
mov
pop
mov
rcl
push
sub
fcmovb
aam
outs
cmp
aad
in
mov
xchg
inc
jne
xchg
mov
jle
ret
push
mov
pop
xor
repnz
or
jns
push
and
out
add
shl
xor
out
fcomp
jmp
popf
pop
and
rcr
push
adc
lahf
scas
push
push
push
test
fcmovne
cli
xchg
sti
test
cmp
push
in
retf
or
shr
and
call
mov
sbb
out
lods
jmp
xor
mov
pop
adc
dec
mov
ror
jmp
mov
scas
cmps
sub
cs
test
and
inc
repnz
add
and
mov
ins
mov
jecxz
shr
and
scas
push
pop
push
das
lods
into
iret
lock
mov
xlat
sub
inc
fwait
lods
aaa
xor
cs
push
and
dec
mov
into
mov
dec
inc
in
sbb
stos
or
pop
dec
dec
xlat
int
mov
fisttp
or
pop
mov
add
ja
shl
cmp
(bad)
xor
test
push
fidivr
pop
push
mov
addr16
or
sub
(bad)
cmps
mov
sub
sub
mov
int
lods
in
imul
(bad)
imul
sbb
loopne
nop
retf
div
aad
and
jp
jbe
push
mov
js
daa
loopne
repnz
fstp
je
jp
push
inc
fld
aad
sahf
int3
adc
ja
and
test
mov
mov
out
or
pop
aam
(bad)
mov
in
sbb
and
out
adc
mov
imul
mov
or
pop
ja
cmp
and
sub
loope
mov
mov
pop
iret
jg
inc
int
mov
fstp
inc
push
rcl
out
in
jmp
sar
mov
sbb
add
hlt
cmps
inc
out
daa
xor
lahf
in
xchg
jmp
and
cmp
mov
jmp
add
fucomp
mov
cld
xor
repz
and
ins
inc
mov
push
xor
xchg
test
sbb
jmp
cmp
(bad)
and
push
push
cmp
mov
mov
data16
hlt
dec
or
mov
ins
inc
loope
xchg
out
stos
or
mov
clc
popa
pusha
push
ret
mov
xchg
stos
aaa
mov
mov
sbb
loop
stc
data16
je
das
mov
inc
in
inc
push
inc
mov
inc
std
xchg
jmp
scas
je
ror
frstor
mov
sub
inc
lock
mov
int
call
cmp
and
mov
or
movs
test
cmp
aas
and
dec
push
clc
pop
inc
cmps
cs
dec
mov
inc
dec
in
aad
mov
(bad)
adc
dec
adc
mov
ror
cmp
or
cmp
add
std
ins
jo
and
mov
call
jb
jle
push
dec
ins
push
test
lods
cmp
or
aad
cmp
scas
movs
shl
retf
repnz
leave
daa
jecxz
fst
inc
aaa
cmc
icebp
sub
dec
push
loope
jle
pop
dec
adc
adc
mov
or
fstp
adc
rcr
xchg
repnz
popa
or
fldenv
retf
dec
int3
xchg
loopne
shl
repz
and
push
cmp
jl
fsub
cmp
sar
ins
add
popf
fiadd
out
mov
in
and
pop
inc
lods
les
mov
mov
xchg
xchg
mov
cmp
cmp
jns
dec
jp
scas
lahf
ins
add
mov
rcl
and
mov
add
add
mov
sbb
in
inc
addr16
add
sbb
or
pop
(bad)
cmp
cli
rcl
add
and
addr16
fimul
cmp
mov
or
inc
adc
xchg
inc
popf
int3
leave
shl
rcl
aas
pop
xchg
sub
popf
sbb
add
je
push
int
mov
add
pusha
iret
(bad)
movs
cdq
xchg
(bad)
(bad)
dec
sbb
enter
xchg
mov
lods
in
stos
test
daa
mov
and
ret
dec
mov
dec
push
test
fbstp
mov
or
fcom
mov
and
push
hlt
je
dec
push
push
out
sahf
fisttp
xor
mov
mov
cmp
sub
mov
(bad)
add
fidivr
mov
int
outs
fcomp
cmp
popa
push
call
dec
(bad)
dec
push
mov
pop
jle
cmp
les
int3
mov
retf
es
add
shr
les
mov
xchg
jno
je
push
and
push
or
xor
dec
cmp
jge
inc
push
aaa
sub
adc
push
enter
nop
xor
js
ja
inc
pusha
icebp
mov
sub
sbb
inc
dec
sbb
dec
xor
inc
popf
jge
mov
mov
add
shl
outs
xchg
ret
cmc
popf
mov
xor
stc
fld
fdivrp
xor
std
xor
inc
cmp
jnp
shr
pop
stc
fiadd
stos
aad
and
sub
mov
or
mov
mov
pop
data16
jmp
rcr
shl
cmp
mov
xor
aam
inc
pushf
jcxz
stos
adc
dec
mov
jl
xor
fld
je
movs
bound
pop
loopne
les
lock
pop
mov
sbb
lahf
and
xchg
cdq
adc
mov
ret
and
test
mov
inc
rol
sub
jecxz
jge
std
jae
aam
jb
neg
jns
mov
in
dec
cmp
pusha
daa
sub
pop
cmp
or
movs
stc
es
js
pop
test
retf
cs
sub
inc
sub
push
pop
mov
stos
shr
pop
dec
and
xchg
sub
and
xchg
cs
add
mov
jmp
push
leave
inc
loope
pop
sete
loop
mov
test
sbb
push
sahf
cli
push
scas
enter
dec
cmp
nop
fs
jo
lea
push
nop
push
mov
fs
ins
xor
fwait
scas
xchg
test
dec
xor
iret
lahf
stos
sbb
cmc
jl
lods
and
aas
adc
rcr
and
jae
jne
(bad)
jmp
pop
or
sahf
ror
inc
or
xor
stos
sti
fist
sbb
je
pop
sub
retf
popa
cld
sub
repnz
out
cmp
inc
cmps
pop
int
cdq
retf
cli
icebp
loopne
or
sti
cwde
mov
outs
pop
push
xor
push
stc
sbb
push
fmul
push
retf
out
stc
mov
in
add
rcl
imul
stc
ins
add
sub
bound
or
sbb
inc
and
jo
hlt
in
imul
mov
loopne
retf
fcomp
mov
jns
in
jg
or
jae
pop
aas
pop
js
sub
lods
and
mov
into
dec
push
push
pop
std
sbb
jmp
pop
inc
pop
dec
xchg
inc
sahf
out
sbb
push
xchg
mov
cmps
mov
das
pop
test
icebp
pop
setnp
push
xchg
push
pushf
mov
retf
mov
cmp
jb
sub
sub
or
push
jnp
or
cmp
add
and
stos
cmc
push
outs
xchg
pushf
nop
xor
test
inc
cld
jmp
pusha
sub
push
jo
mov
jno
mov
mov
xchg
lea
sbb
cs
sub
push
test
xor
xchg
mov
enter
xchg
mov
jg
adc
adc
sbb
cmp
test
sahf
sbb
add
scas
retf
out
push
or
jns
push
ffree
xchg
or
int
mov
scas
inc
xor
mov
fidivr
sub
push
xlat
pop
add
add
cmp
cs
adc
mov
leave
mov
call
das
jbe
push
fs
clc
jge
push
inc
pop
cmp
repz
push
shl
and
sahf
movs
adc
stos
jo
jbe
es
xchg
cdq
xchg
sar
jp
icebp
mov
mov
pop
cli
pop
sbb
cmp
pop
dec
cwde
inc
mov
pop
outs
cmps
or
aam
loope
test
ret
imul
ret
jp
adc
arpl
retf
sahf
cmp
lods
cmp
jne
push
into
xchg
pop
mov
sub
mov
jmp
mov
cdq
jcxz
test
adc
stc
sub
mov
pop
cdq
aam
int3
xor
out
dec
pop
or
sbb
stc
inc
xor
push
pop
pushf
xchg
mov
sub
add
mov
xor
push
mov
int3
addr16
push
ss
xor
es
xchg
push
ss
pop
ds
mov
and
inc
out
xchg
xor
movs
scas
mov
mov
or
xor
shrd
jb
push
xchg
dec
jecxz
loope
xor
push
xchg
push
mov
mov
mov
cmp
ss
or
in
xchg
mov
jae
call
clc
push
jp
cdq
or
mov
sub
push
out
loopne
fcomp
jo
dec
das
repz
sub
inc
inc
mov
(bad)
aad
daa
mov
adc
dec
fnstcw
cld
jle
dec
pop
lock
add
jge
je
stc
fistp
jmp
repnz
push
loop
das
fnstenv
es
jns
aam
mov
mov
push
outs
sbb
or
dec
mov
mov
data16
mov
cld
lea
out
pop
in
inc
fwait
and
push
mov
mov
and
leave
xlat
cmp
in
add
push
rcr
aam
push
fsubp
aas
es
fwait
and
pop
ret
xchg
jl
ins
mov
sub
js
add
in
test
adc
xchg
in
aad
inc
retf
xor
pusha
and
stos
push
outs
inc
iret
mov
outs
aam
mov
mov
dec
in
not
jmp
repz
cwde
pop
jo
daa
ret
sub
fbld
or
out
lods
pop
cwde
aaa
push
fbstp
jmp
mov
sbb
push
inc
mov
imul
mov
push
clc
pop
jmp
call
aaa
sub
call
enter
add
xor
push
adc
in
adc
call
dec
outs
(bad)
adc
(bad)
loopne
nop
test
add
push
cmp
sub
pop
mov
xchg
xchg
sar
(bad)
jecxz
fld
and
aaa
cdq
cs
(bad)
loop
test
mov
lock
sbb
and
test
int3
sub
out
fwait
cmp
mov
es
(bad)
and
dec
push
jecxz
lahf
sub
test
in
fst
jb
mov
frstor
mov
jb
and
ret
sub
xor
or
inc
fwait
adc
push
aam
inc
dec
push
fisub
aam
and
aam
outs
daa
mov
div
loope
sub
pop
mov
mov
das
pop
out
jno
sbb
pop
cmps
and
dec
les
push
adc
dec
in
ss
lock
xchg
lahf
jne
inc
dec
jg
movs
stos
cdq
mov
inc
jne
hlt
push
lahf
pop
retf
rsm
and
xchg
and
push
sub
icebp
dec
jns
mov
hlt
sbb
mov
pop
and
fstp
push
jmp
or
jecxz
dec
jnp
sub
scas
cdq
stos
test
push
jp
out
sbb
out
pop
xor
pop
stos
cwde
xchg
xlat
pop
fdivr
pop
mov
ret
push
add
mul
mov
stos
inc
push
and
stc
xchg
int
movs
jp
out
push
or
and
jge
stos
in
out
jle
(bad)
fwait
cmp
push
cdq
sub
inc
mov
lea
jecxz
(bad)
jp
movs
ins
pop
pop
cli
mov
shl
dec
(bad)
sbb
lahf
sub
dec
ret
daa
imul
call
cli
adc
aad
popa
pop
pop
add
jns
pop
dec
cdq
fistp
and
pop
add
sub
or
lock
jo
vpperm
dec
rol
icebp
push
rcl
pop
push
inc
test
or
(bad)
movs
fld1
lea
call
lds
ss
(bad)
shr
into
stos
ins
pop
or
pusha
cmp
pushf
mov
pop
jo
shr
not
mov
pop
mov
jmp
mov
aas
mov
sub
cwde
and
or
dec
sub
mov
(bad)
xlat
nop
jp
test
imul
inc
xrelease
dec
push
sbb
and
xchg
inc
sub
sub
cwde
jp
dec
jecxz
pop
mov
mov
inc
push
inc
mov
sbb
cld
scas
cmc
xor
test
test
xor
mov
and
dec
sbb
sti
sbb
jle
push
fsub
js
mov
mov
sub
test
or
sub
add
mul
and
inc
adc
(bad)
fstp
dec
jne
bound
push
push
pop
aaa
mov
push
not
fiadd
dec
adc
sbb
lock
out
xchg
mov
pop
xchg
mov
repnz
dec
test
pusha
push
jnp
nop
test
in
xchg
ds
call
jne
jae
sahf
out
daa
mov
frstor
pop
movs
cmp
dec
push
sub
arpl
xor
sub
add
sbb
lock
sub
es
mov
mov
je
popf
xor
rol
sbb
addr16
out
mov
or
sub
ds
test
aas
mov
leave
xor
pop
aad
lahf
icebp
mov
repz
xor
inc
shr
out
inc
and
test
mov
or
lea
or
mov
scas
jbe
pushf
mov
data16
inc
xor
mov
xchg
fwait
cdq
xor
cmp
pop
inc
sbb
dec
ja
xchg
cmps
dec
daa
pop
sbb
mov
xchg
icebp
xchg
sahf
es
cmp
mov
cmovs
sub
cmp
retf
pop
fs
jg
cwde
pushf
inc
dec
cdq
push
jno
and
loop
out
pop
icebp
daa
cmp
xchg
pusha
push
push
test
rcr
dec
xor
mov
push
cmp
std
cmps
mov
dec
jo
add
mov
loop
sbb
into
inc
xchg
fsub
sub
outs
jecxz
and
out
or
sbb
cmp
out
fs
pusha
mov
adc
adc
test
int
bound
sub
xchg
sbb
and
retf
(bad)
shl
xchg
xchg
aad
mov
pop
bound
mov
xor
xlat
dec
sti
jbe
test
sub
shl
popf
inc
sub
xor
add
cmp
cmp
(bad)
push
or
test
in
popf
dec
and
imul
and
inc
sti
popa
xchg
xlat
test
pop
loope
aas
sbb
enter
aaa
sbb
leave
retf
pop
cdq
leave
out
popf
add
repz
add
rcr
data16
jno
fistp
jl
enter
data16
mov
sub
in
inc
out
xchg
enter
push
mov
test
(bad)
mov
outs
jmp
xchg
xor
je
push
cmps
push
xor
adc
jmp
add
into
pop
les
outs
sahf
jb
into
lods
rol
scas
imul
jne
test
jmp
aam
xchg
or
jae
push
popa
sti
arpl
jnp
jge
jns
sub
(bad)
xchg
adc
mov
dec
leave
add
sub
jle
arpl
pop
xor
sub
aad
cs
out
pop
xor
jmp
sar
push
into
mov
fs
mov
fnsave
mov
mov
repnz
outs
mov
xchg
inc
jmp
aad
xor
xor
sbb
cmp
jp
inc
jecxz
mov
inc
fsub
in
xor
(bad)
out
sti
push
fstp
mov
addr16
push
shl
fs
std
js
xchg
sub
fsubrp
mov
pushf
aad
movs
lea
push
jp
retf
mov
mov
gs
fisttp
xchg
jae
add
xchg
and
sub
xchg
aad
es
mov
test
xor
mov
jmp
mov
push
test
mov
aas
call
xchg
xor
ja
das
arpl
fisttp
out
inc
lods
outs
jb
mov
pop
sbb
sub
jmp
xor
mov
mov
mov
(bad)
test
pop
inc
dec
cli
lods
lea
adc
push
dec
sub
and
stos
inc
repnz
add
xchg
jae
ret
mov
inc
adc
(bad)
dec
xchg
and
or
push
mov
jmp
jle
div
pop
cld
test
andnps
inc
dec
retf
stos
adc
adc
sub
inc
les
jbe
cvtpi2ps
test
nop
lock
lahf
mul
inc
jo
imul
test
xor
das
dec
lock
idiv
daa
das
cdq
pop
sub
out
retf
das
jmp
mov
lods
dec
pop
aaa
mov
repz
cmc
and
lahf
cmc
out
cwde
or
fstp
sub
or
xor
xor
jle
mov
fisubr
push
push
pop
mov
std
fisubr
lods
adc
xor
jmp
pop
xor
pop
movs
cmp
and
shl
inc
dec
xor
dec
scas
mov
push
shl
es
jl
mov
jno
test
add
push
ja
xchg
sbb
mov
test
add
jl
sahf
pop
mov
mov
shr
iret
xlat
ja
push
jle
mov
jns
loopne
cli
mov
xor
adc
mov
sub
rcl
pop
(bad)
call
fwait
test
sbb
into
cmp
add
sub
jnp
jmp
cmc
mov
hlt
mov
and
stos
xchg
pop
mov
push
test
out
sbb
xor
icebp
or
loopne
loop
mov
sub
sbb
ror
test
shrd
sub
out
daa
sbb
mov
push
ficom
jo
push
pushf
xor
lock
sbb
pop
xor
test
xor
xor
shl
mov
and
xor
xor
jno
pop
(bad)
push
push
iret
adc
cdq
cmp
cld
sbb
in
xor
bound
xchg
or
ins
imul
dec
mov
mov
and
dec
xor
pop
pop
or
lods
jae
ds
ins
add
cli
xchg
ins
mov
popa
popf
pop
cmp
(bad)
and
push
(bad)
adc
pop
pop
aas
xlat
fabs
mov
add
clc
cmc
cs
lds
shr
xor
mov
push
sbb
(bad)
xor
nop
daa
cmp
leave
or
xor
stc
je
out
aad
and
pop
pop
in
(bad)
sbb
pop
and
repz
lds
pop
rol
inc
sbb
das
xlat
outs
(bad)
aam
xchg
inc
push
jae
lds
dec
sbb
jg
inc
or
and
add
jp
or
das
in
mov
pop
imul
sbb
js
shl
out
(bad)
adc
jp
aaa
or
mov
xor
sbb
or
dec
or
mov
(bad)
push
inc
push
xchg
xor
outs
jb
jmp
arpl
xor
sbb
sti
pop
repz
mov
mov
xchg
aas
clc
xor
loopne
add
jp
into
push
movs
dec
inc
cmc
push
inc
sub
hlt
push
pop
dec
mov
fdivrp
daa
pop
mov
mov
xchg
sbb
in
nop
out
mov
pusha
retf
(bad)
xchg
call
adc
jb
push
shl
pop
aaa
(bad)
pop
in
daa
cwde
and
mov
pop
xchg
in
stos
push
dec
sub
adc
jecxz
aad
rcr
and
je
dec
stc
aam
ins
(bad)
cmp
cld
dec
enter
loopne
loop
sub
fild
or
pop
jg
dec
cmp
imul
enter
repnz
xor
or
jp
data16
inc
dec
add
xor
cmp
jnp
and
push
adc
sub
sbb
inc
push
lea
pop
iret
and
pusha
jecxz
cmc
or
loope
std
dec
pop
aam
push
cwde
(bad)
fsubp
mov
scas
pusha
sbb
das
test
sub
or
outs
jae
pop
sub
fcmovnu
or
bswap
aas
mov
aam
adc
popf
sub
push
scas
mov
fnstcw
jmp
loope
sahf
cmps
jo
leave
mov
test
xchg
fild
and
loope
fnstcw
pop
lahf
in
ficom
ins
cmp
jns
(bad)
cmps
xor
sbb
stos
dec
sub
xchg
xor
sub
mov
sub
(bad)
xchg
psubb
movs
or
sub
cmc
lods
jne
outs
shl
sbb
icebp
dec
mov
sub
jge
add
sub
inc
xchg
mov
cdq
cld
lods
push
rol
in
mov
(bad)
mov
sahf
repnz
or
fwait
ss
vprotw
jb
jb
aad
jae
cmps
leave
push
jne
jmp
inc
dec
lds
xchg
mov
jnp
arpl
cmps
pop
push
mov
pop
add
fwait
sbb
sbb
mov
ss
inc
(bad)
jno
out
mov
sbb
inc
inc
cmp
call
pushf
enter
(bad)
hlt
inc
cmp
and
outs
and
sbb
pop
test
xor
test
ss
push
and
mov
mov
or
fwait
mul
sti
jo
xor
jp
fwait
call
loopne
in
dec
out
adc
dec
out
test
xchg
jecxz
(bad)
into
adc
push
shl
dec
jne
bound
pop
or
inc
fs
cmps
adc
ins
int
lods
les
movs
jb
xchg
sub
sti
or
cs
push
js
repnz
sahf
mov
inc
push
das
mov
push
retf
cmp
adc
xchg
mov
sbb
or
(bad)
fiadd
sahf
popa
pop
sbb
inc
dec
add
add
mov
dec
adc
jecxz
(bad)
mov
ror
and
retf
push
jge
loope
(bad)
xchg
ss
push
inc
push
inc
fcomp
repnz
or
mov
push
adc
lods
(bad)
(bad)
ins
or
sub
call
iret
mov
test
aas
and
cmp
add
loopne
mov
int3
lods
pop
arpl
ret
mov
xchg
mov
jns
(bad)
dec
fistp
jno
shr
xor
loopne
sub
push
test
jno
cmc
les
push
shl
arpl
iret
test
(bad)
adc
pushf
je
rol
retf
add
mov
daa
mov
adc
cmp
sbb
pop
std
adc
outs
and
imul
btr
pop
sbb
outs
or
or
jle
sbb
pop
sti
mov
lds
jle
mov
pushf
dec
xchg
pushf
repnz
push
addr16
fwait
ror
pop
stos
mov
pushf
mov
mov
aaa
std
int3
loop
(bad)
xor
ds
jae
inc
sbb
mov
mov
inc
pop
dec
dec
xor
in
add
dec
jmp
pop
imul
sbb
loope
ins
aad
(bad)
addr16
inc
ins
add
jg
pop
loop
sti
push
xchg
int3
in
mov
icebp
(bad)
cmp
jmp
lock
cmp
push
hlt
std
jns
or
mov
and
push
add
xchg
out
leave
mov
jbe
push
cmp
test
inc
adc
jle
out
movs
das
mov
push
dec
push
outs
inc
sbb
add
add
dec
rcr
and
xchg
push
es
sbb
out
xchg
adc
fcmovnb
jb
outs
sub
xor
mov
and
adc
data16
imul
addr16
cdq
cmp
push
push
cmp
jmp
push
aad
xchg
push
add
not
jl
cmps
adc
repnz
pop
imul
les
not
dec
inc
cmp
leave
div
test
arpl
movs
(bad)
lods
pop
sub
iret
scas
push
(bad)
pop
mov
push
ins
arpl
in
inc
xor
ret
out
aad
push
fnstenv
fs
in
inc
push
daa
jno
jo
jns
or
(bad)
xor
bound
mov
jnp
mov
stos
dec
dec
mov
mov
push
sbb
adc
test
cmps
add
arpl
inc
mov
jns
movs
shl
movs
js
sbb
inc
int3
popf
cdq
and
pop
call
popf
lods
jmp
xlat
inc
pop
loopne
xor
aaa
inc
retf
dec
int
inc
mov
inc
push
pop
cmps
faddp
pop
or
xchg
arpl
add
push
fistp
scas
pusha
adc
dec
add
add
sub
or
dec
imul
jg
lock
shl
jb
cmp
or
jge
pop
ja
add
jmp
adc
mov
or
cld
xor
mov
and
jmp
rol
(bad)
dec
(bad)
sub
mov
ins
gs
adc
xlat
jp
fnstenv
fisttp
push
and
sub
mov
push
inc
gs
icebp
xchg
int3
mov
push
outs
add
adc
xchg
xor
pop
aaa
inc
jns
je
leave
jmp
xor
scas
add
das
add
popf
movs
adc
xor
inc
push
test
and
bound
ss
or
cmc
loope
into
scas
outs
pop
fcomp
xchg
xchg
dec
(bad)
adc
cmp
add
mov
scas
mov
jg
jp
cmp
fild
mov
fiadd
scas
and
dec
push
cmp
mov
pop
sbb
sub
and
pop
adc
sbb
xlat
aad
stos
stos
das
push
mov
fisub
push
add
out
pop
in
xchg
popf
je
hlt
xchg
push
mov
add
pop
jb
or
pop
and
push
imul
shr
and
lods
xchg
sub
xor
sbb
pop
retf
pusha
out
dec
add
inc
sub
push
call
cwde
pop
imul
mov
adc
cmp
add
cs
stos
mov
aam
adc
inc
js
je
scas
movs
mov
imul
and
dec
movs
pop
pop
mov
in
or
pop
add
push
pop
rcl
mov
rol
inc
jne
add
sbb
mov
test
loope
sar
sahf
push
ins
and
cld
sub
mov
ins
xchg
push
dec
jb
ins
ds
adc
scas
mov
xchg
pop
(bad)
loopne
push
ror
cli
cmp
lock
test
idiv
ret
and
add
jmp
pop
hlt
out
push
inc
xlat
jge
jp
pop
jmp
les
fist
and
enter
sti
xchg
cld
xchg
mov
mov
pop
xor
sbb
sbb
ret
ins
adc
pop
jns
jo
fcmove
jmp
adc
jl
lods
and
pusha
push
aaa
neg
lea
test
jl
pop
jle
ins
iret
mov
movs
adc
leave
outs
aas
in
jecxz
(bad)
fnstcw
pop
cmp
sub
test
add
lock
fwait
fwait
sub
push
into
adc
add
pop
daa
pop
or
(bad)
lods
cmp
sbb
mov
pop
mov
enter
in
sbb
add
cmp
ret
and
popf
or
jb
in
sub
sub
loop
lea
popf
test
add
adc
or
mov
ret
and
sub
mov
loopne
je
sub
test
xor
lea
aad
mov
jbe
xor
push
dec
mov
enter
test
dec
mov
retf
cmps
mov
stos
mov
iret
je
pop
test
js
retf
xor
xor
push
mov
pop
push
cdq
stc
push
daa
mov
jbe
ret
dec
jle
mov
es
fisttp
add
xor
mov
lds
fisttp
push
or
shl
and
popa
xchg
mov
icebp
cmp
adc
mov
sbb
ins
popf
fs
(bad)
in
or
add
push
(bad)
inc
xlat
jbe
push
pop
sbb
xchg
enter
push
and
push
and
aad
xor
js
xor
mov
xchg
jmp
add
outs
gs
outs
sbb
pushf
fwait
adc
push
xchg
sbb
inc
iret
or
fsub
xchg
bound
pop
jmp
cmp
cmps
imul
mov
cld
mov
pop
cmp
ret
daa
sub
jmp
mov
or
inc
mov
into
(bad)
jmp
clc
(bad)
icebp
aaa
inc
ins
cli
xchg
and
and
xor
xchg
mov
xchg
inc
inc
es
pop
popw
repz
std
outs
xchg
inc
or
repnz
pop
movs
xor
or
clc
pop
les
inc
repnz
adc
mov
sbb
cld
push
and
jmp
aaa
push
mov
sbb
push
mov
push
ror
push
mov
in
mov
rcr
xchg
loope
inc
and
and
and
jmp
pop
sysexit
sahf
and
enter
daa
loop
sbb
push
dec
and
popa
jp
push
ret
lea
mov
dec
pop
bound
fs
addr16
test
cli
sbb
test
jae
int
jno
sbb
ret
pop
xchg
dec
dec
add
push
jo
out
sbb
add
iret
sahf
cmp
ins
sub
sbb
frstor
imul
mov
cmp
into
icebp
lahf
dec
(bad)
and
xchg
popf
sub
dec
mov
movs
call
push
sub
dec
std
inc
sbb
jno
or
pop
data16
repz
mov
mul
adc
lods
sbb
scas
jnp
int
mov
push
dec
data16
lock
inc
pop
mov
or
imul
ret
popf
es
fcomp
inc
addr16
je
jae
cli
es
pop
xor
cdq
dec
retf
hlt
push
xadd
jmp
or
bound
or
(bad)
fcomp
xchg
movs
and
jmp
rcl
sub
mov
out
sub
mov
push
je
jne
push
fs
out
in
mov
aaa
pop
ja
pop
or
mov
mov
stc
dec
fcom
mov
mov
xchg
out
dec
outs
sub
adc
sbb
stos
push
ins
cld
and
xchg
into
and
pop
and
scas
push
lea
stc
es
jmp
jg
lea
sbb
dec
mov
or
std
fwait
push
pop
jl
add
sub
rcl
mov
(bad)
jge
sbb
jb
scas
(bad)
xor
mov
sbb
jl
sahf
mov
cs
inc
dec
jecxz
fdiv
fs
jmp
sbb
xchg
or
jbe
and
add
jo
in
add
retf
pushf
hlt
add
into
push
fistp
mov
popa
cs
neg
inc
dec
movs
out
fs
jmp
stos
jmp
scas
xchg
(bad)
sub
or
and
jecxz
pop
and
loopne
movs
adc
aam
add
add
ja
repnz
cmps
dec
dec
xchg
dec
inc
jl
or
bound
test
or
repnz
lea
pop
pop
sub
sbb
add
pop
jp
or
scas
sbb
add
cmps
adc
pop
out
retf
push
xchg
mov
and
popf
mov
push
lock
adc
fwait
and
push
mov
mov
and
cdq
jle
pushf
mov
daa
(bad)
lock
inc
or
push
repz
mov
cs
or
je
hlt
mov
inc
jl
and
sbb
(bad)
cs
jb
pop
push
push
mov
add
ret
sub
ja
or
fs
or
cli
popa
fisttp
out
push
jmp
call
mov
dec
pop
and
dec
and
out
inc
popa
aam
jg
retf
ret
cmp
push
(bad)
call
ret
mov
add
xchg
jns
jge
push
sbb
sub
pop
add
cmp
mov
mov
ss
lahf
pop
mov
push
(bad)
addr16
push
out
movs
in
outs
outs
cmps
das
pop
fs
mov
xor
xor
js
add
rcr
je
test
pop
ds
sub
cdq
daa
dec
mov
push
pop
fistp
jbe
ficomp
ja
(bad)
sbb
repnz
in
sbb
ret
pop
loopne
push
out
add
sbb
and
fistp
pop
stos
dec
add
fucomp
sbb
int3
(bad)
(bad)
mov
bsf
fld
sbb
and
sub
mov
and
fcom
imul
adc
arpl
sbb
dec
jb
pop
(bad)
in
clc
leave
push
xchg
sbb
mov
sbb
cmc
jge
adc
cmp
sub
fisubr
leave
push
daa
cmp
jp
div
cmc
inc
lds
push
mov
mov
sbb
cmp
push
aad
xor
sbb
jnp
jb
jbe
in
out
push
test
mov
lds
(bad)
movs
jmp
cmps
out
movs
in
push
jbe
xchg
mov
and
push
jle
sub
and
retf
mov
adc
sub
idiv
mov
push
sbb
movs
push
adc
and
sbb
push
jp
pop
sub
dec
into
jle
cmps
imul
in
aas
lods
mov
pusha
loope
sbb
or
pop
mov
dec
or
ror
adc
stc
(bad)
xchg
cmp
lahf
data16
pop
outs
scas
pop
adc
mov
mov
scas
inc
repnz
push
movs
push
cwde
xor
repnz
in
mov
cmp
ret
mov
wrmsr
jo
test
gs
push
mov
les
push
jle
dec
xchg
lods
add
xor
inc
gs
jne
adc
std
aaa
jecxz
add
arpl
data16
pop
dec
scas
pop
loope
(bad)
ror
test
adc
stc
dec
pop
jb
inc
das
ret
pop
dec
jmp
enter
cmp
call
dec
pop
cmc
iret
gs
repz
sbb
mov
ins
or
xchg
inc
(bad)
push
test
test
adc
xchg
cmp
pop
popf
push
pop
hlt
inc
jle
and
pusha
fsubr
or
jns
mov
and
mov
mov
mov
ficom
sahf
js
call
pushf
dec
pushf
shr
push
jnp
xchg
jl
pop
add
or
jnp
mov
adc
cmp
and
or
lods
jbe
mov
push
enter
scas
mov
and
push
inc
mov
cwde
add
jno
jmp
shr
dec
jmp
sub
and
sub
repz
sbb
jb
or
jbe
shl
in
xchg
push
mov
mov
(bad)
and
xchg
sti
sub
mov
aam
arpl
xchg
dec
into
retf
cmps
pop
test
shl
loop
leave
mov
dec
and
repz
loope
xor
dec
adc
and
(bad)
ds
pushf
fadd
mov
pop
or
pop
mov
push
fsubrp
add
push
movs
inc
adc
popf
sti
and
xchg
xchg
add
ror
mov
in
mov
push
push
icebp
jmp
mov
fcmove
int
inc
dec
test
sti
sub
and
push
ss
fcom
xor
push
and
pop
and
dec
jge
pop
es
mov
mov
xlat
lods
xchg
ins
sahf
mov
sahf
adc
mov
or
jp
in
mov
daa
lock
pop
aaa
dec
pop
mov
jecxz
sbb
dec
lea
ror
inc
mov
jge
ja
cmps
cs
xor
adc
pop
and
out
jno
fidiv
push
xchg
call
in
xor
or
repz
cmp
aas
out
inc
ret
adc
lds
and
sbb
push
xor
jl
icebp
retf
inc
xor
or
and
jns
xor
xor
popa
jns
sbb
add
and
jb
fsub
cmp
sbb
jno
dec
outs
inc
mov
mov
pop
add
lods
mov
jbe
rcr
shl
add
and
cmps
mov
iret
js
out
lock
xor
daa
cmp
inc
mov
dec
xchg
call
jmp
pop
xchg
xchg
pop
adc
fwait
mov
xchg
jb
popf
pop
adc
inc
inc
mov
pop
fwait
xchg
adc
mov
xor
push
sub
sub
jl
aaa
or
sar
sbb
adc
sub
pop
or
(bad)
inc
jmp
ds
cdq
aas
cwde
pop
push
stos
jg
xchg
dec
leave
lds
out
aaa
dec
mov
popf
(bad)
dec
aas
cmp
dec
and
lods
outs
sahf
push
cli
or
nop
jnp
push
test
popa
fisttp
xor
sbb
ss
jg
sub
data16
inc
lods
adc
push
jp
mov
mov
and
sbb
and
lds
dec
inc
and
pop
xchg
pop
inc
jge
iret
fs
xchg
dec
mov
sbb
sub
adc
xor
xor
test
aas
mov
pop
mov
jl
inc
xchg
lock
jecxz
arpl
popf
cdq
cli
or
imul
ins
in
push
cmp
ror
int
ja
sbb
xchg
add
jae
inc
inc
jns
and
into
mov
pop
cli
lock
jne
add
rcl
mov
out
(bad)
jbe
pop
pop
jecxz
pop
sahf
sbb
sbb
int3
in
sbb
cmp
(bad)
shr
ds
aaa
or
xor
retf
lahf
dec
xchg
pop
jmp
or
mov
loope
inc
daa
sbb
pop
and
push
jns
test
jecxz
out
xchg
out
aam
fcomp
add
or
sub
xor
cmp
aas
mov
cmp
mov
push
ja
push
arpl
shr
mov
(bad)
into
mov
mov
mov
mov
xlat
mov
cdq
fstp
mov
and
sbb
cmp
sub
test
sti
fild
adc
or
fcom
or
push
mov
imul
int
rcl
cmp
dec
popa
fist
call
pop
xor
mov
movaps
cmp
or
sbb
pop
mov
push
jno
adc
mov
xchg
jmp
sbb
mov
outs
sbb
leave
adc
xlat
dec
movs
sar
mov
pop
inc
dec
push
pop
jae
(bad)
or
xor
sbb
inc
dec
js
lahf
mov
sub
sub
jne
aas
sub
mov
mov
fwait
xchg
mov
add
xchg
xlat
in
mov
rcr
dec
scas
push
cs
pop
in
in
push
mov
mov
cmp
inc
mov
jecxz
push
xor
push
call
inc
push
popf
jp
add
arpl
push
in
adc
int
mov
(bad)
cmp
or
push
mov
mov
and
dec
arpl
inc
fcmovb
push
adc
mov
dec
cdq
adc
mov
div
inc
pop
dec
xor
xchg
outs
aad
mov
lods
push
imul
adc
or
push
add
inc
loopne
call
loope
add
adc
adc
sbb
xchg
adc
jno
std
in
ja
mov
call
sub
aas
sub
mov
push
pop
fsub
add
lds
lods
push
popa
sub
sub
stc
gs
in
jb
fmul
and
ss
adc
adc
ffreep
mov
das
pop
aad
mov
jo
mov
outs
arpl
and
push
or
rcr
icebp
mov
sub
and
adc
(bad)
(bad)
pushf
jno
out
mov
lock
out
leave
inc
(bad)
cdq
inc
push
lea
mov
xor
(bad)
pop
xor
adc
loopne
push
dec
test
pushf
and
xor
and
jnp
cmp
jb
mov
ds
jo
xchg
sti
ins
pop
cld
sub
sub
and
mov
pop
daa
mov
js
fwait
outs
retf
add
xchg
dec
dec
cmps
out
ins
sbb
pop
or
sub
imul
sbb
xchg
jecxz
leave
add
fisub
push
dec
inc
(bad)
arpl
daa
das
jle
stos
inc
cmps
pop
mov
jae
in
xchg
push
pop
mov
mov
or
(bad)
stc
lea
dec
jns
imul
es
pushf
mov
fwait
add
ror
rcl
jns
ss
or
mov
arpl
in
shrd
mov
or
jns
bound
pop
fcomp
sti
jns
imul
fcomp
cld
push
pop
xor
test
aam
adc
xor
push
lds
out
xchg
bound
out
test
fisttp
jnp
push
inc
mov
add
mov
outs
or
cld
fidivr
clc
sub
jg
or
or
lahf
lock
je
push
jle
call
in
mov
(bad)
fiadd
mov
push
sub
das
out
jecxz
push
sbb
jl
inc
xor
push
pushf
push
je
xchg
push
inc
sahf
mov
inc
and
adc
fld
or
sbb
(bad)
cmp
and
add
into
aas
test
shl
mov
je
or
inc
jecxz
xchg
sbb
mov
add
mov
or
push
xor
or
out
pop
psrld
cwde
inc
xchg
stc
mov
fdiv
repz
and
mov
push
(bad)
cmp
imul
adc
(bad)
mov
shl
test
sahf
into
adc
pop
mov
in
stos
pop
xchg
(bad)
popa
(bad)
xchg
pop
retf
fst
dec
dec
mov
cmc
sar
add
add
bound
sub
xchg
sar
repnz
lods
sbb
cli
dec
push
jp
test
mov
pop
mov
fwait
adc
lahf
loopne
jo
jno
fdivp
xchg
cmc
dec
rol
iret
cmp
inc
cmp
xlat
pop
adc
xchg
out
std
sbb
pop
outs
and
call
xor
pop
mov
je
mov
lods
imul
add
rcl
in
ret
mov
les
jecxz
inc
inc
or
clc
daa
rcr
ficomp
xchg
in
cmp
and
pop
jecxz
cdq
xor
jbe
xchg
retf
sbb
xor
addr16
daa
iret
push
mov
sbb
or
cmps
lods
out
jmp
sahf
xor
jbe
sbb
popa
daa
stos
test
inc
stos
test
dec
fwait
sahf
xchg
inc
push
jmp
clc
mov
addr16
call
rcr
and
fcmovbe
aaa
rol
adc
inc
sbb
aas
popa
ins
mov
sub
pop
sub
pop
adc
xchg
clc
xor
pop
pop
xor
jge
loopne
ja
adc
enter
mov
pop
loope
test
das
push
cwde
hlt
sbb
lea
mov
jge
cmp
pop
xor
popa
ficom
xchg
psubusw
and
and
sub
or
xor
pop
or
pop
(bad)
in
adc
fwait
jecxz
inc
mov
sbb
push
repz
xchg
out
pop
movs
arpl
dec
fld
xor
repz
pop
repz
(bad)
aaa
fisttp
xchg
dec
sub
mov
loopne
test
cli
stos
test
psubq
mov
scas
retf
enter
fstp
stos
push
cli
outs
faddp
ins
mov
movs
jae
jl
mov
(bad)
in
fldenv
sahf
in
and
sahf
push
test
xlat
ror
leave
pop
(bad)
sbb
dec
push
cs
dec
dec
xabort
mov
jmp
sbb
pop
push
sbb
dec
push
fld
or
int3
jle
mov
sbb
(bad)
nop
add
(bad)
sub
jne
(bad)
fisubr
or
pop
mov
aaa
data16
jo
test
test
jp
sbb
pop
pop
add
mov
dec
dec
push
add
or
lods
push
mov
cmp
and
adc
lods
test
push
push
adc
sbb
mov
jns
stos
aam
pushf
(bad)
adc
int3
or
shr
sub
out
dec
ins
inc
je
xor
add
fsub
mov
adc
out
std
in
xchg
fisttp
divps
clc
loope
rol
retf
xor
movs
push
push
mov
cmp
ss
sbb
sbb
xlat
jle
cli
pop
addr16
add
jmp
jnp
repnz
inc
cmp
lahf
ret
push
adc
mov
jne
je
(bad)
mov
mov
iret
add
add
sar
leave
inc
dec
dec
adc
jmp
cmp
xchg
sbb
adc
dec
neg
jmp
shr
cmc
out
mov
test
les
add
sbb
sub
sub
xor
fldenv
es
mov
lods
xlat
jb
sub
cmp
test
daa
cs
dec
sbb
sub
(bad)
hlt
test
sbb
or
out
jnp
dec
mov
(bad)
(bad)
movaps
inc
or
dec
pop
(bad)
psubsw
and
xchg
dec
pop
in
(bad)
packuswb
(bad)
cli
xor
xchg
mov
test
iret
cld
pop
mov
pop
mov
sti
retf
bnd
dec
jno
fwait
dec
cs
dec
mov
add
pop
mov
mov
in
push
aam
lods
adc
fisub
xchg
sub
es
xor
jbe
xor
add
(bad)
pop
loop
add
inc
mov
retf
scas
sbb
adc
cli
inc
push
push
loop
outs
cmp
retf
loopne
inc
nop
mov
sbb
mov
repz
fdivr
rol
mov
sbb
dec
pop
ja
jae
jge
mov
leave
loopne
cs
push
test
xchg
adc
mov
mul
jnp
scas
ins
dec
stos
dec
data16
pop
idiv
retf
sbb
pop
out
int
xor
sbb
stos
sub
inc
fistp
outs
out
dec
or
test
pop
mov
adc
dec
xor
js
cmp
add
inc
rol
arpl
fistp
pop
adc
push
xchg
push
test
dec
xchg
mov
lds
js
(bad)
arpl
or
add
sub
adc
(bad)
cdq
popf
or
jle
add
jmp
leave
pop
xor
(bad)
cdq
adc
dec
mov
pop
or
mov
jmp
clc
out
cmc
popf
mov
adc
xchg
mov
(bad)
xor
jns
ret
pop
(bad)
mov
pop
mov
or
outs
push
out
push
lock
je
add
dec
stos
jb
in
fistp
inc
pushf
xor
xor
jl
push
js
popa
or
push
ja
out
mov
mov
loope
sahf
scas
das
mov
xor
inc
and
add
add
sbb
mov
pop
mov
jno
aaa
inc
cli
pop
sbb
js
fdivr
cmps
sub
js
repz
out
fnstcw
mov
mov
addr16
push
sub
add
(bad)
dec
cmp
popf
rcr
jle
stc
ss
and
add
std
xor
mov
add
(bad)
jecxz
push
in
add
mov
mov
in
jl
aad
pushf
push
or
push
jge
push
outs
sub
pop
leave
repz
popf
int3
mov
sbb
cs
push
cmp
mov
inc
sahf
ins
inc
push
sbb
int3
cld
sar
out
leave
sub
mov
jle
jge
test
push
add
or
and
sbb
fsub
ja
stos
add
mov
nop
dec
sbb
(bad)
sbb
fcmove
xor
lds
jmp
or
or
outs
rcr
xor
cmp
lea
dec
mov
xchg
out
jns
(bad)
arpl
jne
jne
fld
inc
retf
sub
sti
je
adc
cmp
sub
pop
mov
retf
push
cmps
sbb
sbb
inc
mov
cmp
sub
shl
mov
push
adc
bound
mov
mov
leave
test
and
pop
mov
cld
outs
push
dec
push
sbb
inc
es
fninit
cwde
aaa
neg
and
test
xor
sti
cs
lock
fcom
adc
aam
push
fwait
das
inc
int
popa
push
out
adc
sbb
std
push
pusha
inc
mov
add
push
inc
jp
aaa
xchg
enter
addr16
fnstsw
add
js
ret
pop
(bad)
push
xchg
pop
popf
out
cdq
bnd
add
mov
mov
inc
repnz
nop
loope
data16
mov
adc
loop
pop
shr
sub
or
or
aaa
add
jmp
lods
sub
dec
and
jmp
daa
scas
imul
push
inc
jg
add
xor
add
pop
stc
outs
scas
pop
pop
out
pop
adc
jns
inc
or
add
(bad)
into
ja
pop
sub
jmp
push
sub
push
pop
jecxz
pop
fstp
push
cmps
pusha
cmps
mov
ds
test
jno
and
pop
div
test
mov
lods
mov
out
adc
into
adc
cwde
add
fistp
xchg
imul
in
movs
cmc
push
outs
inc
jbe
jmp
mov
cmp
imul
sub
sub
popf
inc
push
jnp
dec
or
int3
push
or
out
inc
in
jo
in
dec
pop
popa
inc
jmp
pop
mov
cs
xchg
sub
idiv
call
jge
stc
call
pop
or
and
xor
test
or
push
outs
out
shr
cs
or
cld
pop
sti
pop
dec
jp
push
popa
js
jns
outs
mov
fadd
jns
fisubr
pusha
add
sahf
pusha
xchg
das
xchg
dec
shr
scas
ret
sbb
mov
(bad)
clc
lock
xchg
repz
xor
jo
and
cmp
iret
pop
es
jb
in
xchg
jl
add
inc
call
xchg
mov
xchg
adc
or
adc
mov
adc
outs
mov
hlt
jno
rcr
ins
(bad)
add
xlat
lods
sbb
hlt
aam
and
aas
ins
out
mov
xchg
bound
fs
ins
xor
pop
xor
arpl
dec
mov
mov
pop
jb
hlt
cmp
and
inc
outs
loopne
std
cmps
ret
(bad)
pushf
cs
imul
push
or
add
xchg
push
sub
pop
jmp
inc
pop
rcl
sub
mov
(bad)
pop
js
(bad)
imul
je
mov
cwde
mov
mov
ja
leave
mov
mov
and
and
push
mov
push
rcl
shr
mov
aad
stos
fild
lock
and
push
inc
xor
aad
or
arpl
or
data16
mov
shl
jge
mov
pop
call
sub
sub
or
ss
fild
xchg
sahf
iret
ror
jg
loope
es
call
jl
popf
push
cmp
outs
cmp
out
lea
add
scas
mov
adc
sub
pop
clc
pop
push
mov
in
clc
push
cmc
cmp
inc
fcom
cmp
ret
retf
mov
xor
leave
pop
push
lds
mov
out
jg
and
sti
lahf
hlt
sbb
iret
adc
cld
cwde
dec
push
gs
dec
jl
lea
outs
pushf
std
dec
or
pusha
out
mov
inc
xor
pop
cld
mov
lods
adc
fcomp
(bad)
xchg
add
fsubp
pop
rcr
lea
(bad)
xchg
cmc
out
(bad)
mov
or
pop
loope
pop
push
sbb
ficom
retf
rcl
and
cmp
cmp
jb
sahf
mov
jns
jns
in
mov
push
pop
push
xchg
movs
imul
xor
inc
dec
int
lods
je
xor
jnp
and
push
mov
mov
ss
add
pop
out
mov
call
and
lock
out
les
or
xchg
jp
test
mov
ss
sub
mov
shl
jg
pop
outs
push
fsubr
mov
rcl
(bad)
mov
add
xor
inc
and
push
cmc
jae
ror
cmc
sub
rcl
mov
mov
arpl
fisub
sar
ja
sub
xchg
add
lea
imul
mov
jmp
repnz
mov
sub
mov
pusha
in
stos
iret
xor
push
jle
scas
push
sub
js
outs
das
ret
jb
out
int
cmp
pushf
ds
push
cs
sub
mov
leave
jnp
clc
xchg
jmp
pop
push
dec
xor
xor
mov
fstp
add
sbb
xor
cmp
dec
add
es
pop
movs
push
xor
jle
outs
xor
adc
push
adc
test
push
sub
test
mov
lea
out
aas
cmp
xor
dec
sub
(bad)
jle
inc
push
sub
jle
cld
in
out
enter
mov
and
xchg
repnz
xchg
and
int3
dec
xchg
sti
daa
pop
xor
sub
jmp
icebp
jle
clc
mov
out
test
iret
(bad)
pop
cmp
add
std
sahf
mov
sbb
pop
pushf
jecxz
jecxz
jge
mov
loope
cdq
inc
xor
inc
push
mov
pop
cmp
and
mov
xor
out
lea
push
sub
or
jo
std
outs
call
mov
pop
not
adc
into
imul
adc
mov
mov
xor
and
xor
int
jae
push
xchg
sub
in
(bad)
pop
and
imul
out
dec
fstp
push
cmp
xor
repz
ror
pop
xor
xchg
pop
repnz
mov
daa
xor
idiv
mov
xchg
pushf
pop
push
std
add
mov
loopne
and
pop
xchg
test
inc
out
inc
fcomip
jmp
cmps
add
pop
mov
out
jmp
or
(bad)
fiadd
xor
xchg
xor
jae
and
push
daa
mov
add
add
inc
jmp
sub
out
shl
imul
sub
mov
xor
pop
imul
out
sahf
sub
mov
cli
mov
push
std
movs
push
rcr
adc
cli
mov
or
hlt
push
in
adc
mul
jl
les
lods
pop
ret
cs
xor
xchg
int3
inc
mov
cmp
sub
push
jne
lea
inc
fnstcw
ret
adc
sbb
or
mov
jle
(bad)
mov
inc
mov
call
add
and
mov
mov
mov
pop
cmp
repnz
je
aaa
fbstp
xchg
jle
mov
xchg
mov
adc
mov
jne
xor
mov
sbb
mov
dec
dec
out
js
xchg
cvtps2pi
push
cmc
stc
sbb
xchg
imul
xchg
fsub
sti
scas
int
inc
jns
fwait
lock
test
mov
sub
or
int3
add
xchg
das
jle
push
or
add
es
js
je
das
push
ss
test
add
xchg
sbb
or
and
jbe
test
inc
mov
push
daa
cmp
lea
jbe
push
addr16
push
test
pop
dec
xor
pop
inc
js
xor
jno
imul
xor
mov
jecxz
inc
stc
(bad)
call
mov
(bad)
pop
adc
xor
fild
mov
mov
dec
push
out
or
mov
rcl
int
jp
mov
mov
and
rol
dec
and
push
cdq
arpl
xor
push
sub
xchg
dec
ficom
fdiv
pop
jecxz
pop
mov
inc
loopne
xchg
movhps
arpl
pop
cmp
and
jg
sub
pop
jo
sub
and
pop
aam
jl
pop
cmp
mov
shl
int3
push
repz
pop
adc
mov
je
aaa
test
mov
mov
fwait
arpl
xor
xor
repnz
imul
in
popf
test
das
in
push
jl
push
mov
sub
les
hlt
push
repz
sub
(bad)
pop
pop
mov
push
ss
mov
jmp
inc
pop
dec
call
xchg
leave
mov
shl
cli
jae
pop
xor
inc
sub
loop
add
or
pop
mov
jae
iret
dec
scas
rcl
pop
in
push
mov
mov
leave
xor
scas
cmovge
sub
mov
adc
mov
inc
cli
call
push
hlt
pop
shl
sub
inc
(bad)
cmc
in
push
xor
in
daa
and
and
mov
inc
add
loope
gs
lds
rcl
ds
jecxz
pop
fst
inc
test
inc
push
std
or
repz
mov
adc
cdq
pusha
shr
(bad)
rol
push
pop
mov
mov
pop
out
outs
xchg
popa
cwde
rol
fild
pushf
pop
retf
and
test
imul
aam
ret
stos
ret
pop
push
ret
xchg
mov
xlat
add
fdiv
jge
push
jmp
test
jno
inc
mov
cmp
mov
test
leave
jge
dec
jecxz
fadd
fst
cmps
jo
mov
push
daa
popf
xchg
gs
fmulp
pop
fld
call
dec
mov
mov
(bad)
xchg
les
imul
xchg
adc
sub
dec
jmp
pop
pop
jmp
mov
hlt
cmp
and
inc
(bad)
fs
sbb
int
xchg
pop
rcl
int3
xor
xchg
icebp
mov
dec
inc
jbe
hlt
mov
out
dec
sahf
xor
pop
and
pop
mov
fistp
pusha
out
and
inc
pusha
ja
pop
add
add
and
test
xchg
outs
rcl
jmp
pop
fisub
movs
xor
rcl
pop
push
nop
inc
aas
ret
leave
jp
pop
mov
xchg
xor
xor
cmps
xor
or
sbb
xor
retf
pop
sub
ds
xchg
sbb
dec
(bad)
mov
xor
jo
pop
xor
sbb
push
cmp
jle
push
dec
xchg
adc
shl
not
mov
mov
pop
sbb
stos
das
mov
add
(bad)
lods
xchg
inc
out
jbe
sbb
shl
hlt
mov
addr16
lods
adc
dec
repnz
cld
sbb
pop
(bad)
cwd
add
outs
test
sbb
dec
scas
sub
arpl
pusha
iret
mov
xor
cwde
out
sub
add
push
imul
js
cmps
vdivsd
lods
fcomip
cld
imul
mov
mov
cmp
pop
xor
pop
addr16
xor
arpl
or
sub
scas
xor
sbb
in
outs
mov
and
pop
mov
int
push
paddd
jmp
dec
iret
fsubp
and
into
sti
pop
sti
pop
mov
and
addr16
adc
xor
retf
(bad)
pushf
lock
xor
or
push
pop
cld
xor
dec
jp
(bad)
pusha
mov
test
in
sti
adc
dec
dec
aas
leave
adc
xor
imul
xor
test
imul
nop
cmp
cmp
mov
sub
mov
pop
scas
clc
icebp
mov
xor
int3
mov
ror
xchg
mov
test
and
in
es
retf
in
push
sbb
dec
push
xor
push
xchg
aad
(bad)
fs
mov
mov
jmp
push
sahf
xchg
loop
(bad)
pcmpgtw
sbb
xor
pusha
clc
int3
pop
xchg
and
or
add
pop
out
sub
data16
retf
inc
lods
xor
xor
sbb
cmps
inc
daa
jno
mov
ficomp
jb
push
xchg
pushf
nop
fsubr
dec
repz
stos
adc
test
inc
add
xchg
lock
inc
test
push
push
mov
(bad)
stc
mov
mov
push
xchg
mov
je
lock
xchg
inc
(bad)
and
xor
jne
aam
sbb
and
pop
sbb
loopne
lock
in
call
gs
push
dec
rcr
fwait
popa
test
cmp
and
push
test
push
push
push
dec
push
dec
and
push
adc
xchg
jae
nop
jg
loop
mov
pop
pushf
dec
movs
int3
fs
push
mov
dec
or
int3
gs
enter
or
or
sub
mov
mov
and
add
clc
int
leave
fwait
ret
call
push
mov
addr16
xor
sbb
idiv
mov
xchg
fdiv
push
dec
mov
inc
stc
sub
ins
sti
pop
sbb
inc
cld
pop
cmc
loope
movs
fisttp
or
mov
push
mov
dec
or
fstsw
stos
repz
test
inc
loope
and
or
and
sbb
cmps
aas
(bad)
mov
sbb
stos
fstp
jo
adc
xchg
xor
into
inc
jmp
add
in
int3
cwde
repnz
lods
repz
ins
lahf
add
jmp
call
sub
sti
adc
xor
push
jge
out
pop
mov
(bad)
cmc
arpl
dec
cdq
push
pusha
mov
xchg
call
shl
fcomp
loopne
clc
loop
push
xor
pop
cmp
fs
test
out
xor
pusha
jns
inc
pop
int3
and
sub
add
mov
daa
das
test
jecxz
pop
push
mov
clc
out
push
fld
xor
mov
dec
inc
leave
(bad)
jno
sub
(bad)
and
inc
jo
sbb
cmp
sub
pop
outs
sbb
stos
in
test
stos
xor
pop
dec
and
cwde
data16
hlt
outs
js
dec
test
std
xchg
sbb
jle
inc
pusha
dec
pop
(bad)
push
aaa
mov
inc
xor
sbb
inc
push
pop
cmp
inc
and
mov
pop
or
mov
and
pushf
and
sub
jmp
in
jge
scas
push
imul
loope
and
jp
sbb
ja
mov
lods
mov
lahf
pop
clc
sub
sub
imul
test
xchg
and
ja
imul
jbe
dec
clc
je
lea
xor
(bad)
lods
xor
jno
xor
fwait
sbb
popa
xor
push
jae
cmp
xor
jae
fldenv
mov
pop
xor
dec
loopne
jb
stos
sbb
sbb
jnp
mov
mov
cmp
sub
xchg
(bad)
enter
jno
inc
inc
test
push
fs
mov
pop
mov
jb
out
test
xor
ret
mov
pop
je
jmp
inc
out
inc
in
sbb
mov
sbb
jmp
lods
cmp
pusha
inc
jns
jno
dec
out
test
pop
cmp
xchg
pop
out
dec
repz
mov
pop
pop
xor
je
pop
dec
jle
and
enter
pop
add
mov
rol
push
test
fbstp
cmp
pop
data16
inc
data16
hlt
sbb
cdq
mov
cmps
push
add
mov
and
xchg
add
ror
push
popf
test
stos
inc
aad
ja
es
or
mov
cdq
inc
lea
pop
popa
retf
sbb
adc
jne
fwait
adc
mov
jbe
push
out
std
dec
addr16
(bad)
pop
hlt
shr
jb
scas
pop
push
ja
aaa
push
shr
sti
xchg
outs
ss
stos
test
mov
int
and
sub
loop
iret
test
fiadd
nop
fbld
sbb
add
call
dec
cs
jle
mov
pop
cdq
jg
into
pop
fsubr
xor
add
in
add
daa
add
sub
or
jo
mov
cs
rcl
pop
mov
clc
adc
sti
sar
sbb
adc
in
jne
pushf
or
pusha
xor
lods
mov
add
jg
xchg
icebp
mov
in
jne
xchg
fwait
push
dec
aas
add
and
dec
jmp
sub
jmp
pop
inc
into
fsub
inc
sbb
jge
and
pop
cmp
cmp
ss
(bad)
stc
enter
inc
pop
or
xor
into
mov
jnp
sbb
and
ins
sub
scas
ds
(bad)
mov
inc
cmp
xor
jle
ror
addr16
sbb
ss
repz
sbb
dec
dec
dec
cmp
or
jge
out
add
and
pop
aas
in
pushf
or
or
cmp
xor
mov
cmp
inc
mov
scas
(bad)
pop
out
xor
test
dec
jae
dec
(bad)
aam
push
in
cdq
iret
xor
fld
dec
rcl
sub
in
mov
int
shl
bound
jne
popf
pushf
pop
(bad)
cmp
sbb
and
cli
pop
mov
adc
jmp
cmp
pop
out
add
mov
cmp
inc
int
mov
je
out
xchg
(bad)
push
sbb
jne
fimul
push
mov
xchg
scas
push
pop
out
mov
dec
retf
js
xlat
jno
(bad)
adc
mov
inc
or
enter
inc
mov
mov
xchg
nop
xchg
hlt
les
mov
into
loopne
js
repz
pushf
(bad)
cld
pushf
mov
ds
sti
and
repz
add
(bad)
sub
lds
push
and
aas
andps
or
movs
push
std
inc
movs
(bad)
fmul
mov
sbb
jns
shl
imul
into
rol
pop
add
aam
xlat
shl
fld
and
test
rcr
mov
push
jne
pop
dec
pop
xchg
or
call
outs
xor
jp
test
xchg
vcmpneq_usps
jecxz
fisttp
mov
jge
out
ret
ins
jecxz
aad
mov
xlat
cwde
jp
aas
cmp
lock
test
call
test
cwde
fisubr
sub
xor
mov
push
sub
inc
dec
mov
(bad)
xchg
ins
pop
dec
or
mov
mov
arpl
fwait
jmp
das
(bad)
ds
pop
cmp
mov
pushf
cmp
aad
cs
outs
dec
cmps
fmul
push
or
frstor
test
stos
pop
fstp
ror
and
jb
test
cmp
bound
(bad)
sub
out
inc
scas
mov
cmp
mov
pop
sahf
push
dec
push
push
repz
popf
and
jno
pop
sbb
push
xor
push
retf
fidiv
mov
mov
sub
add
mov
arpl
sub
dec
ja
enter
mov
je
jg
stos
sbb
push
jb
scas
jnp
test
pop
push
repz
inc
mov
sbb
leave
movs
pop
xor
das
and
sub
pop
fs
or
xchg
cmp
rcr
cmp
test
jo
cmp
push
adc
push
pop
mov
lods
lock
pop
mov
jnp
cmp
mov
int3
gs
lahf
sti
adc
pop
mov
add
mov
inc
xor
mov
xchg
mov
push
xor
enter
cmp
daa
pop
xchg
pop
pop
mov
jp
les
or
(bad)
and
push
jb
mov
pop
push
pop
jp
mov
pop
addr16
stos
mov
pop
inc
dec
push
ja
xchg
and
pop
cmc
push
dec
call
jo
cmps
and
or
jecxz
cdq
sbb
and
add
pop
int3
loope
mov
and
mov
(bad)
in
and
jge
xchg
add
xor
into
test
push
cmp
fistp
push
mov
out
gs
xchg
mov
stos
fidivr
and
pop
aam
add
and
(bad)
enter
jmp
xchg
pop
fist
pop
push
sar
daa
push
addr16
and
jae
mov
scas
sub
in
cmc
fs
(bad)
mov
ins
sbb
sbb
or
mov
or
mov
dec
(bad)
in
sub
or
lock
jns
pop
or
mov
(bad)
(bad)
fsubr
push
jmp
out
push
add
punpckhdq
sbb
add
dec
jb
cwde
das
sub
pop
inc
dec
je
fsub
int
jge
loopne
cmp
aaa
pop
push
sub
xchg
cmp
dec
aad
aaa
and
jmp
outs
jb
pushf
mov
and
into
cmc
push
add
ret
sbb
jmp
xchg
scas
or
jge
shl
sub
add
test
mov
cli
cmp
sbb
test
push
or
fist
jno
jmp
arpl
test
jb
mov
sbb
dec
call
inc
xchg
sahf
mov
inc
jmp
ss
es
int
cmc
xchg
loope
fcom
es
es
jae
inc
push
xor
in
ss
rcr
lahf
jo
and
loopne
pop
stc
sub
or
and
inc
xlat
test
and
into
stc
cs
sahf
into
push
clc
test
adc
push
pop
popf
repnz
push
sub
mov
rcl
pushf
lahf
cmp
cvtps2pi
test
mov
rcr
xchg
pop
inc
aam
and
sahf
push
es
mov
push
dec
lock
ja
stos
scas
cmp
in
dec
stos
mov
popa
sub
cmp
arpl
sub
rol
movs
enter
mov
in
pop
xchg
pop
inc
and
jecxz
test
mov
mov
retf
movs
or
xor
cmp
push
mov
and
pop
mov
shl
pop
or
push
jle
scas
push
mov
add
imul
push
inc
mov
repnz
aad
pushf
in
jnp
dec
jl
sbb
sub
xor
dec
retf
(bad)
dec
mov
addr16
cmp
retf
je
ds
cmps
push
in
xor
xchg
push
lods
hlt
out
hlt
adc
das
adc
seto
fsubr
inc
jmp
xor
dec
rcl
dec
fmul
fwait
add
pop
jl
xchg
shl
mov
cmp
in
not
loope
xor
cmc
mov
sub
fidiv
movs
push
add
je
sbb
leave
fwait
pop
xchg
cmp
loop
adc
cmp
mov
ins
cdq
fld
push
aas
adc
sbb
pop
cs
xchg
enter
dec
mov
sub
push
lods
hlt
cmps
popa
xchg
pop
push
jmp
sbb
inc
mov
pop
(bad)
cmp
dec
repnz
cmp
inc
aad
mov
inc
dec
ss
push
loop
inc
push
mov
mov
repnz
sub
and
in
les
jns
sub
fstp
add
or
mov
int3
rcl
mov
test
xor
push
hlt
and
pop
ret
rcr
xchg
rol
scas
jp
xchg
xchg
jns
adc
ret
sti
push
push
pusha
xchg
aad
jp
xchg
in
in
ficomp
sub
sub
cmp
mov
movntq
out
mov
loope
iret
outs
iret
imul
movs
bswap
out
fwait
push
addr16
adc
push
and
jle
pop
mov
je
fisubr
icebp
xor
fldenv
fnsave
je
inc
dec
rol
stc
cmp
aas
scas
inc
popa
push
ins
add
retf
test
nop
movs
sbb
retf
sub
add
js
xor
cmp
sbb
js
jnp
add
lds
mov
adc
cmp
dec
out
and
cmps
jb
jl
pop
leave
xchg
jl
arpl
sbb
aas
jae
cli
mov
aam
fs
or
sub
xor
ror
imul
or
pusha
cld
fnstsw
xor
cs
and
add
pop
adc
xchg
cwde
outs
and
inc
push
cs
(bad)
fdivr
popa
out
mov
mov
sbb
pushf
pop
stos
in
adc
mov
stos
lds
or
cdq
mov
xor
fdivr
daa
test
cs
pop
inc
mov
sub
mov
ins
and
outs
xor
bound
jl
and
inc
add
mov
pop
(bad)
jge
cdq
xor
adc
adc
dec
inc
inc
arpl
xchg
xchg
inc
icebp
imul
movs
in
and
xor
adc
cwde
pop
and
stos
out
and
jp
cs
je
(bad)
jno
fistp
jne
sbb
sbb
call
push
xchg
sub
mov
sub
and
out
xchg
dec
push
mov
cmc
imul
xchg
adc
test
fdivr
push
cmp
in
jb
inc
adc
adc
mov
or
mov
outs
sahf
rol
or
add
ds
data16
jbe
inc
dec
pop
movs
sub
repz
outs
adc
xchg
adc
ret
jo
mov
sbb
jae
xor
pop
and
jbe
cwde
cdq
out
ss
push
pop
ss
pop
and
ins
mov
xor
jns
pop
daa
or
pop
push
push
int
jmp
aaa
sub
inc
and
aad
push
push
femms
xchg
daa
(bad)
adc
pop
xor
aam
jp
add
xor
sub
stos
push
cs
repz
pop
pop
sar
jmp
add
shl
sahf
in
xchg
mov
and
stos
fnstenv
and
xchg
dec
inc
pop
adc
shr
and
shr
and
sub
pop
loopne
cwde
sub
ret
xor
push
adc
je
add
cmp
jmp
pop
pop
(bad)
aam
lock
daa
xchg
sbb
mov
retf
retf
sbb
mov
mov
pop
enter
xor
inc
movs
lea
dec
in
mov
xor
fbstp
(bad)
jmp
sti
mov
pop
shl
cld
pop
xor
in
xchg
sbb
mov
aas
cmp
retf
or
cdq
cld
jno
adc
fs
lahf
(bad)
xor
and
jo
iret
mov
jmp
and
jae
jecxz
aam
jg
outs
mov
icebp
jmp
jp
loope
movs
xchg
mov
mov
sub
je
mov
jl
or
arpl
xchg
mov
mov
and
nop
mov
jle
sbb
add
das
dec
popf
lahf
mov
add
xchg
jnp
clc
cs
ss
push
and
push
or
ins
sub
loopne
jnp
(bad)
and
imul
imul
xchg
sub
push
popa
lods
popf
jmp
xor
js
sbb
pop
mov
ror
int
test
mov
mov
cmp
add
pop
jmp
iret
mov
or
das
dec
pusha
out
sbb
adc
js
cmc
lods
pop
cli
sbb
dec
loop
push
and
push
sbb
loope
jne
jl
je
adc
xor
out
pop
jle
int3
pop
inc
ss
in
in
ficomp
sub
add
outs
sub
pop
adc
mov
sbb
repnz
and
outs
jnp
add
dec
int
cmp
cdq
jle
aas
pop
inc
(bad)
ror
aas
sbb
push
fisub
push
or
arpl
shl
ss
stc
adc
mov
mov
adc
lods
or
dec
xor
jbe
aad
outs
push
xor
xchg
or
rol
xor
add
pop
xchg
retf
xor
pop
and
mov
popf
pop
mov
(bad)
jge
or
shr
dec
hlt
in
repz
or
xchg
push
call
cwde
in
popa
data16
shl
test
adc
push
dec
add
bound
push
pop
adc
xchg
outs
sub
cdq
pop
test
sbb
sub
pop
cmp
sbb
(bad)
adc
ins
jg
fwait
xlat
pminub
pop
in
jnp
in
movs
repnz
and
and
xchg
jmp
sub
mov
push
lock
in
repnz
in
sbb
and
(bad)
int
add
mov
sub
bound
into
std
fsub
xchg
lock
loopne
sub
jle
cmp
pop
stos
outs
out
jle
stos
rcr
cdq
fistp
pop
shl
pop
mov
mov
xor
hlt
lahf
dec
add
mov
leave
es
mov
xchg
jmp
movs
jmp
bswap
ja
cmc
sar
(bad)
lahf
sub
lods
sub
out
je
addr16
aam
mov
or
mov
pop
mov
neg
inc
dec
pop
cmp
sbb
cmps
fmul
setl
jmp
fwait
in
sbb
mov
iret
dec
dec
push
stc
leave
ret
pushf
adc
lods
inc
(bad)
xchg
inc
pop
leave
test
pop
or
shr
jb
leave
mov
not
xchg
imul
scas
dec
lds
mov
or
in
in
mov
in
xchg
push
sub
das
std
and
dec
sub
into
jb
xchg
scas
outs
popf
jg
push
sbb
pop
xor
inc
xchg
(bad)
out
or
and
or
sbb
iret
(bad)
mov
std
sub
or
outs
aaa
jmp
or
int3
arpl
pop
and
lea
arpl
and
mov
les
jmp
shl
mov
dec
add
int
mov
les
icebp
add
push
test
jge
rcl
test
and
cs
(bad)
sub
pop
mov
loope
pop
pop
lods
jb
fdiv
out
add
sbb
out
(bad)
pop
or
pop
ret
mov
mov
int3
movs
aaa
mov
push
ror
out
mov
push
pop
push
add
ins
cmps
add
inc
push
mul
push
sbb
neg
inc
jg
push
add
xchg
cdq
push
mov
cmc
dec
popf
cs
rcr
adc
mov
jecxz
out
xor
rol
jp
dec
popa
xchg
call
and
gs
and
loopne
int3
outs
push
fwait
iret
inc
or
xor
and
ds
dec
xor
je
push
mov
add
sbb
dec
punpckhwd
adc
(bad)
sbb
add
shl
fidiv
popf
jne
scas
movs
in
lahf
jae
adc
jnp
dec
add
adc
lds
adc
popa
pop
or
cmc
or
sbb
arpl
test
popf
or
xchg
pop
xchg
pop
int
lods
mov
mov
and
sub
inc
inc
mov
ror
pop
js
jb
repnz
and
and
iret
xchg
jb
mov
je
aad
inc
sub
out
rol
or
mov
mov
inc
inc
and
(bad)
test
adc
xlat
jecxz
rol
push
pusha
and
and
aad
or
mov
cmp
in
bound
test
inc
(bad)
hlt
pop
aaa
mov
pop
addr16
cmp
mov
hlt
pop
xor
or
loopne
movs
iret
or
mov
pop
cmp
pop
retf
jge
adc
loop
xlat
sub
sbb
loopne
push
add
not
fucomip
pop
setp
into
mov
jecxz
loopne
pop
ins
push
xor
std
mov
xchg
adc
xor
int
rol
xor
adc
or
shr
push
sti
mov
ret
in
and
rcr
cwde
inc
xor
iret
push
sub
mov
and
fld
cmps
test
sbb
xchg
mov
inc
shl
and
mov
pop
cmc
sub
pop
(bad)
xor
mov
pop
inc
add
mov
mov
into
xchg
xchg
fidivr
sbb
stc
jo
frstor
mov
aad
jne
jae
sbb
pop
xor
xor
mov
fisubr
lock
mov
aam
test
cli
data16
inc
cwde
or
xor
cmps
jge
shr
fsin
xchg
retf
and
ins
mov
test
mov
dec
fcom
add
rol
add
cmp
sbb
add
mov
mov
dec
dec
mov
sub
or
(bad)
mov
adc
dec
js
mov
mov
cld
mov
imul
fisub
or
cmp
movs
repz
shr
xchg
and
pop
rcl
lock
xor
sbb
sbb
cmp
dec
cmp
pop
pop
retf
(bad)
int
mov
add
rol
sbb
xlat
inc
inc
in
add
fisttp
adc
adc
stos
(bad)
(bad)
fist
fsub
inc
sub
sub
and
dec
aaa
(bad)
repz
pop
mov
bswap
dec
shr
dec
inc
(bad)
pushf
mov
sub
mov
popf
mov
in
stos
ss
fs
jnp
xchg
bound
jo
stc
into
jmp
and
and
hlt
xor
not
cmp
loope
test
cmp
xchg
sbb
pusha
jle
jb
div
adc
add
inc
pop
(bad)
and
inc
jle
dec
xchg
or
movs
mov
sahf
idiv
inc
dec
sbb
(bad)
mov
repz
test
arpl
int3
cmp
push
fsubp
push
les
mov
je
pop
mov
lahf
dec
leave
push
mov
outs
sub
dec
fnstcw
sbb
cmps
mov
loop
jecxz
mov
jne
fucomip
lods
add
mov
sbb
mov
inc
and
mov
mov
cmc
dec
retf
rcl
or
pop
(bad)
mov
jmp
int
mov
pop
imul
sbb
int
jae
xor
jp
dec
add
dec
or
rcr
jle
inc
or
ins
ins
or
leave
jmp
daa
xchg
pushf
or
aas
mov
adc
and
mov
jmp
mov
dec
sti
mov
inc
clc
lds
out
clc
adc
mov
pushf
enter
pop
xor
test
dec
fldenv
jecxz
cmps
test
mov
adc
iret
dec
sbb
jnp
sub
enter
push
push
xor
jmp
jmp
add
bound
push
push
or
shr
add
jb
es
aaa
and
sub
cwde
push
shl
mov
or
fstp
shr
rol
add
stc
leave
and
call
aad
cmp
add
loopne
mov
dec
mov
movs
cmp
into
mov
(bad)
shl
mov
(bad)
cli
sub
push
jo
pop
inc
shl
pusha
push
popa
imul
shl
jl
jp
xor
stos
dec
mov
xchg
jecxz
lea
mov
sbb
push
imul
repnz
jbe
popf
sub
jle
repz
mov
push
sub
dec
sub
jb
mov
dec
mov
add
ins
jno
outs
xchg
scas
(bad)
and
sbb
in
cmp
outs
xor
dec
xchg
xor
rcl
loop
adc
lods
out
sbb
mov
xchg
sub
adc
push
pop
dec
mov
jmp
add
inc
scas
bswap
jmp
push
sub
add
das
shl
or
leave
sub
retf
pop
scas
in
out
dec
push
int3
int
push
and
mov
xor
rol
(bad)
in
xor
pop
fidivr
test
scas
loope
or
push
shl
jne
push
push
loopne
mov
ja
cdq
and
pop
fmul
leave
push
out
inc
cmp
sub
xor
adc
scas
rcr
cmp
(bad)
(bad)
popa
loope
and
mov
(bad)
add
pop
ror
pop
lea
push
(bad)
dec
xchg
push
fwait
in
mov
jo
push
mov
rol
sub
cmps
xchg
push
push
mov
data16
in
aas
repnz
inc
pop
xor
(bad)
in
add
mov
test
enter
mov
neg
pop
or
jo
mov
mov
mov
add
add
popf
mov
pmulhuw
push
mov
test
push
push
dec
adc
out
pop
(bad)
pop
jecxz
mov
movs
xchg
sub
test
fnstsw
in
dec
and
jb
pop
inc
xor
jb
adc
fstp
mov
fistp
and
mov
loope
sbb
ins
xor
xor
test
pop
ds
icebp
jecxz
and
or
out
scas
cmp
leave
mov
or
sar
lods
mov
retf
clc
mov
je
xor
sbb
mov
ss
dec
and
lods
and
(bad)
and
es
leave
int3
or
and
movs
fdivrp
repnz
ror
adc
mov
ins
sub
rcr
ins
ror
mov
jle
std
adc
push
int
out
push
stos
cmp
pop
mov
fstp
scas
inc
sub
jns
mov
push
jno
cmps
jp
push
and
dec
cmc
mov
call
jp
sbb
clc
sub
test
dec
aad
js
mov
aaa
dec
xchg
fwait
and
push
sar
ret
lock
sbb
jb
arpl
or
stos
adc
shr
popf
mov
mov
ja
add
pop
push
mov
out
arpl
xor
dec
jo
inc
pushf
and
jae
add
sub
sub
ret
std
fst
fst
adc
xlat
pop
ror
xchg
aad
mov
into
and
sub
pop
or
or
mov
mov
sbb
xor
mul
xor
rol
call
xor
xor
jecxz
iret
fidivr
iret
cli
pop
lods
loopne
in
mov
add
add
and
cmp
push
pop
add
or
cli
repz
idiv
jo
movs
in
arpl
sbb
sbb
inc
mov
je
and
bnd
inc
retf
push
rcr
mov
inc
pop
sbb
push
adc
lods
push
int3
xchg
push
push
out
int
pop
imul
(bad)
cwde
jnp
sub
cwde
sub
inc
inc
retf
out
or
cs
sahf
and
mov
inc
and
xchg
aaa
mov
sub
push
es
and
push
jb
loop
ret
movs
sahf
iret
mul
adc
inc
sbb
rol
sbb
sub
add
daa
add
lds
lahf
xor
shl
sub
aas
add
pop
xchg
lds
and
out
sbb
jmp
pop
loope
sbb
and
push
or
in
pop
sub
or
outs
push
add
cld
adc
out
push
jb
add
les
sbb
jo
jle
sbb
ret
aaa
lods
lods
sbb
pop
xchg
loope
adc
jb
mov
add
push
xor
ja
repnz
sub
sahf
mov
push
push
jbe
mov
sbb
mov
retf
aaa
pop
push
mov
sub
scas
mov
push
leave
push
ja
mov
pop
arpl
inc
pop
and
push
cli
sub
(bad)
push
inc
push
loopne
mov
dec
xor
imul
test
pop
sub
xor
in
ja
jmp
mov
push
mov
sub
push
or
sub
fs
jo
and
push
jns
std
cmp
mov
je
mov
test
mov
movs
mov
dec
ins
add
xor
jle
inc
lahf
push
movs
mov
jns
mov
dec
mov
xchg
inc
add
jb
lahf
jae
push
inc
daa
add
jle
pop
push
clc
push
xchg
add
pushf
lahf
xchg
lea
mov
xor
scas
fs
jmp
mov
test
cli
fisttp
adc
sub
and
fdivr
movs
dec
jmp
xor
or
jne
sub
shl
pop
jl
inc
and
mov
pop
jne
subps
scas
mov
dec
push
(bad)
retf
mov
cs
loopne
cmp
or
arpl
cmp
mov
ret
sub
(bad)
fdiv
out
mov
std
add
leave
lahf
fwait
out
cdq
mov
ficom
push
dec
pop
pop
aaa
mov
movs
fist
repnz
add
nop
test
or
jmp
mov
shr
test
add
pop
sbb
iret
mov
das
pop
push
mov
mov
xlat
mov
cmp
aad
and
push
cmp
cmp
and
pusha
popf
jbe
pop
inc
mul
int3
lods
pop
mov
mov
mov
bound
pop
(bad)
js
aas
rol
pop
(bad)
jbe
mov
js
cmc
mov
loopne
xchg
add
loope
fcom
inc
cli
sbb
pop
(bad)
mov
mov
push
lock
mov
test
outs
sbb
fild
jmp
and
lahf
cmp
jbe
nop
and
jle
aas
test
sbb
adc
xchg
dec
aam
(bad)
jle
mov
xchg
das
jl
rcr
jb
add
add
mov
xchg
in
sub
aaa
push
js
sub
xchg
jae
bound
(bad)
mov
lods
pop
pop
xor
jmp
xor
sub
push
jbe
mov
inc
sbb
sbb
arpl
cdq
mov
xor
addr16
mov
es
pop
mov
fld
jecxz
push
pop
retf
stos
frstor
(bad)
in
mov
xor
mov
add
add
push
mov
and
add
fwait
daa
leave
test
fs
ror
out
xchg
sub
mov
xchg
mov
mov
jecxz
sahf
cmp
jne
inc
pop
fwait
dec
test
sub
mov
jbe
mov
aas
mov
pop
stos
pop
cwde
jp
adc
jge
movhps
(bad)
pushf
dec
sbb
add
pop
sub
fmul
dec
retf
sbb
pusha
data16
adc
push
ja
xor
jns
int
cdq
fcom
fisub
jp
addr16
popf
(bad)
rcr
cmc
or
mov
sar
inc
(bad)
adc
xchg
or
repnz
mov
leave
mov
mov
inc
mov
scas
int3
adc
mov
sbb
mov
shl
pop
pop
pushf
adc
inc
lds
jmp
movs
push
test
les
sub
lds
cmps
mov
fwait
or
xchg
sahf
out
std
stc
sahf
repnz
jnp
mov
xor
hlt
sbb
outs
addr16
repz
cmp
fadd
loope
stos
test
popa
test
loopne
bound
pop
mov
pop
sub
jmp
out
pop
pop
(bad)
imul
neg
out
sbb
inc
jns
push
xor
ja
mov
test
imul
int
add
inc
ins
mov
int3
and
movs
out
inc
mov
lahf
xor
dec
cmp
mov
jl
jp
push
movs
out
fistp
ja
push
jmp
or
push
adc
adc
fld
xchg
(bad)
fstp
movs
ins
out
ret
and
pop
ins
jo
daa
(bad)
sbb
mov
fdivr
test
enter
mov
sub
pop
xor
inc
fdivr
or
cld
push
ffreep
and
fild
jecxz
dec
sub
xchg
jb
xchg
sbb
add
sub
inc
daa
and
iret
loop
cmp
xchg
lock
jne
jb
gs
into
sbb
jl
cld
addr16
hlt
xchg
cdq
fnstenv
sbb
mov
sbb
jg
mov
pop
in
sub
idiv
jns
sbb
sbb
mov
push
cmp
sub
nop
sbb
xor
pop
std
and
mov
(bad)
push
sub
push
test
and
mov
jo
mov
js
lods
pop
xchg
mov
aam
push
popf
mov
sbb
int
sbb
pop
data16
push
call
inc
mov
mov
and
lahf
std
jb
outs
aaa
add
scas
retf
push
and
jecxz
lds
fadd
das
xchg
xor
mov
out
jmp
int3
loopne
pop
jne
fdivr
push
sbb
add
inc
jle
and
popf
out
(bad)
mov
popf
(bad)
jns
xor
mov
mov
push
stos
fistp
cmp
fild
imul
or
test
ret
aad
mov
push
xor
call
ins
jns
push
and
cmp
and
sub
retf
push
retf
stc
add
mov
aam
sbb
xor
jmp
cmp
add
arpl
repnz
js
(bad)
ror
int
mov
pop
call
lds
jl
xor
add
(bad)
out
pop
pop
xchg
imul
pop
push
jb
arpl
xor
sbb
cmp
mov
movs
inc
sub
xor
les
or
dec
dec
sub
add
push
xor
push
add
push
dec
outs
adc
and
pop
ret
outs
gs
and
dec
fs
jmp
jns
das
xchg
adc
dec
(bad)
cmp
jle
fcomip
retf
fimul
sbb
(bad)
lods
ss
lahf
stos
mov
sub
jae
push
stc
jno
in
sub
outs
daa
pop
and
add
sbb
cwde
jle
addr16
pusha
ror
das
pop
les
dec
mov
mov
(bad)
cmp
clc
aaa
sub
mov
xchg
push
push
sbb
pop
cmps
or
push
adc
out
out
jno
cmp
sbb
cmp
cld
sub
dec
sbb
push
test
mov
shr
ja
xor
or
pop
test
pusha
and
dec
cmovo
and
add
int3
bound
xor
pop
test
sbb
xchg
adc
cdq
nop
mov
mov
jmp
sbb
mov
pop
pop
in
jge
xlat
mov
mov
push
xchg
aas
add
in
jg
test
jno
lock
retf
pop
adc
lock
sub
add
fidivr
mov
xchg
sbb
sti
adc
mov
movs
pop
xor
call
or
ret
mov
or
stos
push
pop
imul
sti
ja
or
les
add
dec
and
or
leave
add
push
and
cmp
es
cs
xchg
dec
jecxz
mov
mov
inc
xor
inc
enter
pop
jp
mov
xor
cdq
mov
(bad)
dec
arpl
push
(bad)
mov
ss
lods
dec
mov
popa
ins
dec
dec
in
popa
les
daa
dec
and
lahf
sahf
xchg
fimul
enter
mov
ret
mov
add
xor
out
dec
cdq
xor
jns
and
shr
xchg
jecxz
dec
in
jo
arpl
push
mov
sub
cmp
mov
push
fdiv
(bad)
retf
push
xchg
inc
sbb
movups
sub
in
sub
sahf
mov
stos
mov
shr
sub
jl
and
adc
xchg
sbb
sub
test
sub
std
sbb
pop
or
xchg
pop
into
push
sbb
out
rol
sub
cwde
pop
mov
sahf
stc
cmp
push
sbb
loopne
pusha
aad
mov
data16
adc
mul
mov
test
cwde
icebp
mov
pop
mov
repnz
das
fs
call
sbb
jecxz
dec
mov
mov
cmp
xor
pop
dec
mov
idiv
push
pop
inc
ss
sbb
repnz
repnz
pop
dec
push
test
cli
daa
jmp
sbb
ror
(bad)
or
cmp
pop
xchg
leave
pop
bound
popa
pop
gs
outs
mov
jle
stos
(bad)
xor
imul
jns
mov
popf
out
imul
push
lahf
add
add
sub
movs
pop
(bad)
ds
inc
mov
test
pop
pop
fsubr
mov
arpl
pop
mov
int3
cli
push
jae
pushf
xor
add
cld
xor
adc
fnstenv
aaa
(bad)
(bad)
jecxz
popf
fimul
mov
xor
fst
dec
jl
adc
sahf
xor
sbb
mov
and
xor
adc
lea
add
xchg
pop
lea
lods
ret
jle
pop
hlt
imul
test
mov
popf
fmul
xchg
or
and
and
pop
adc
jl
jge
pop
fdiv
retf
test
ja
dec
out
sub
in
adc
ret
inc
sbb
mov
cmp
inc
xchg
into
call
sub
sub
jno
in
test
and
dec
cs
test
in
inc
repnz
rcr
daa
rol
cs
pop
fwait
dec
call
push
rol
pop
mov
sbb
xor
dec
cmps
mov
dec
movs
cmp
ins
cmp
in
pusha
inc
adc
and
gs
xchg
adc
mov
xor
mov
add
or
sbb
test
pop
in
push
into
xor
pop
ror
xchg
rcr
call
xchg
out
pop
and
push
cmp
add
mov
mov
push
jbe
and
cwde
adc
shl
cmps
jne
xchg
xor
inc
dec
dec
call
or
jbe
cli
pop
push
out
pop
dec
mov
stc
mov
or
jge
rcl
fdivrp
xchg
pop
(bad)
int
movs
xor
leave
dec
addr16
aam
jo
imul
cdq
int3
cli
xor
sbb
or
add
adc
into
and
push
push
add
cmp
ss
jp
ds
cli
hlt
mov
sar
fcomp
ins
(bad)
mov
iret
xchg
pop
pop
cmps
test
sub
test
adc
dec
adc
out
and
imul
pop
push
lods
cmp
add
popa
pop
clc
jecxz
jnp
sbb
mov
xchg
sub
mov
fadd
leave
add
sbb
out
cs
fbstp
mov
ss
out
push
lods
adc
push
(bad)
mov
sub
pop
inc
pop
jmp
cmp
cmp
xor
repz
(bad)
test
sub
add
cmps
pop
dec
es
sub
retf
daa
pushf
in
mov
fld
pop
adc
shl
sbb
pop
and
xchg
xchg
and
push
popa
out
pop
mov
push
movs
icebp
mov
sahf
push
bound
push
mov
jmp
sub
jo
jg
cdq
fdiv
mov
pop
rol
fwait
add
cmp
push
pop
fist
pop
mov
rcl
and
outs
out
sub
push
dec
push
add
dec
xchg
aam
lods
sbb
nop
js
sbb
pop
dec
pop
jle
loop
sbb
mov
ror
rcr
push
loop
cmp
dec
lds
fadd
cld
inc
jno
mov
add
fs
arpl
mov
and
inc
imul
movs
cli
addr16
cmp
push
or
inc
sbb
cwde
and
pop
retf
add
fs
ins
dec
loop
jmp
xchg
jmp
call
adc
jl
es
lods
out
jae
neg
adc
out
inc
dec
pusha
xor
sbb
jnp
bound
cmp
adc
lods
push
popf
adc
cmps
loope
sar
(bad)
ins
push
cs
pop
xor
mov
enter
dec
fwait
ss
jae
sbb
dec
inc
inc
movs
sbb
loopne
cmp
cmp
pop
jmp
jns
lods
enter
add
pop
xor
dec
xchg
sbb
cmc
sti
test
pushf
mov
mov
push
popf
sub
out
jl
jnp
scas
add
jbe
ja
ret
mov
imul
dec
loopne
es
out
out
mov
dec
pop
sub
sar
ror
into
test
mov
test
call
push
sbb
mov
test
psubusb
mov
retw
pusha
or
xchg
push
and
pop
push
dec
jg
cmc
repnz
ret
xchg
push
xor
adc
mov
mov
mov
ret
or
lahf
cmp
pushf
cmps
neg
inc
dec
hlt
adc
push
push
cmp
iret
jg
sbb
cld
dec
push
adc
pop
popf
fldcw
data16
jecxz
cmp
mov
pop
push
pop
lock
int
shld
mov
(bad)
aad
es
sbb
push
cmps
fs
sub
push
xchg
gs
dec
loop
ror
mov
ret
sbb
iret
(bad)
xchg
mov
cmp
repz
imul
inc
je
stos
mov
jae
cmps
and
push
js
in
xchg
je
leave
pop
les
pop
push
retf
out
repz
shl
xor
xor
sbb
or
(bad)
hlt
dec
test
sbb
les
xor
pushf
popa
mov
dec
retf
cmp
dec
aam
push
xor
pop
lock
xchg
jmp
int3
outs
and
dec
sub
push
jl
push
sbb
int
sub
fs
shl
sbb
loop
push
sub
cli
pop
mov
or
or
std
push
scas
ror
push
lock
mov
outs
inc
dec
cdq
mov
arpl
test
pop
(bad)
push
pop
pop
sub
pop
add
and
add
jo
hlt
test
cmc
jecxz
add
push
into
loope
pop
mov
dec
xchg
scas
pop
and
pop
pop
mov
cli
test
sbb
pop
sbb
xor
mov
scas
daa
sbb
cdq
lods
dec
sub
cmp
mov
(bad)
ret
dec
ja
add
xchg
push
jecxz
fwait
pop
and
enter
and
cmps
push
stos
es
and
lea
push
push
sub
lea
or
pop
xor
arpl
dec
pop
or
out
fstp
repnz
lea
jne
jle
ja
mov
xchg
jecxz
mov
lods
xchg
inc
dec
loope
sti
pop
jge
sub
jne
sti
push
mov
inc
ins
add
xchg
mov
lock
sbb
bound
mov
jl
hlt
pop
push
les
sbb
push
xchg
sbb
mov
dec
inc
jnp
inc
lea
dec
js
mov
push
xor
pop
out
or
mov
sub
sbb
hlt
pop
mov
lock
mov
xor
sub
sub
mov
or
cmp
pop
stos
push
je
dec
pushf
push
movs
mov
sbb
dec
jns
test
sbb
movs
mov
sub
cmp
dec
fnstenv
sbb
sub
repz
push
pop
jle
xor
and
inc
mov
adc
daa
pop
in
int
iret
mov
cs
inc
adc
add
mov
and
push
xchg
dec
xchg
lock
add
add
inc
mov
mov
jb
popf
or
lds
fidivr
out
pop
arpl
aam
cmp
iret
mov
mov
gs
xchg
loope
jge
pop
(bad)
jmp
hlt
popf
bnd
dec
sti
and
push
and
stos
loope
pop
mov
scas
mov
scas
inc
sbb
out
and
sub
mov
mov
cmp
mov
sti
adc
imul
pop
outs
add
inc
jle
sub
jecxz
popa
mov
xlat
shr
arpl
pop
xor
cmc
rcl
mov
pop
sbb
aad
add
pop
mov
pop
jbe
test
mov
(bad)
cld
mov
out
push
out
mov
push
adc
cmp
add
cmps
lea
jmp
push
sbb
jno
add
aas
pop
xor
and
test
mov
mov
pop
mul
sbb
dec
sti
das
fsubrp
out
aam
dec
out
pop
inc
push
mov
add
fcomi
pop
call
or
push
sub
sbb
dec
push
popa
call
test
mov
xor
dec
loope
dec
jns
push
inc
test
jle
test
jg
mov
es
arpl
dec
inc
imul
repz
mov
scas
push
shr
int
or
dec
mov
xchg
push
mov
sbb
push
scas
pop
inc
and
xchg
imul
xor
adc
sub
add
inc
ffreep
gs
xchg
mov
cmp
fisubr
jns
pop
mov
jae
push
stos
dec
jmp
ror
aaa
xor
jne
adc
rol
aam
xor
sbb
xor
mov
js
pop
movs
pop
xchg
push
daa
pop
mov
cld
push
push
xchg
pop
jb
in
or
sbb
dec
lds
test
and
into
fwait
dec
xchg
dec
ins
inc
jbe
loope
sub
pop
je
xchg
test
je
loop
mov
call
repz
out
sub
out
sahf
pop
and
ficom
push
(bad)
and
clc
inc
iret
stos
repz
or
retf
ficom
fdivp
lods
popa
nop
sub
sub
cmps
outs
mov
cs
push
add
iret
jge
mov
xor
jle
cmc
push
dec
pop
cmp
sbb
push
xchg
pushf
popf
div
xchg
jo
lock
push
xchg
pop
rcr
xor
imul
mov
ja
mov
jo
sub
cli
ja
leave
jge
pop
add
ins
jmp
test
sbb
xor
pop
inc
sbb
movs
pop
sbb
stos
xchg
adc
sub
stc
push
daa
pop
xlat
cmps
sbb
pop
ficomp
rcl
jns
or
xchg
nop
pop
jnp
int3
dec
push
jno
aad
push
push
xor
xor
add
inc
and
dec
jb
in
push
and
sbb
fist
fistp
jno
bound
dec
cmc
and
jb
(bad)
ja
daa
inc
out
loop
pop
jp
add
lock
push
les
adc
push
xor
adc
inc
xor
push
jmp
rol
xchg
not
xor
out
and
mov
pop
(bad)
jecxz
adc
pop
ss
jle
sbb
xchg
test
push
jae
mov
es
mov
(bad)
loop
jo
movs
lock
mov
cmp
out
aas
push
dec
dec
mov
pop
xor
clc
inc
pusha
(bad)
out
arpl
int
pushf
mov
outs
out
xor
push
(bad)
dec
jnp
sbb
mov
fist
add
adc
fisttp
mov
push
sahf
xor
sbb
pop
addr16
pop
jmp
pop
push
sbb
pushf
push
mov
mov
adc
fwait
lods
and
jb
mov
das
sbb
(bad)
addr16
jmp
and
out
lea
dec
imul
jno
jmp
lds
xor
sub
mov
push
test
into
pop
dec
lods
test
aas
dec
add
cld
mov
call
mul
in
sbb
cdq
or
fwait
dec
gs
outs
jl
sar
lods
sub
xchg
push
shr
std
lahf
ficom
outs
hlt
imul
adc
xchg
ds
jb
push
and
jmp
and
mov
sub
xor
or
cmp
add
jbe
lds
add
push
mov
or
leave
or
sub
cs
mov
ret
test
xor
adc
movs
jmp
and
inc
pop
arpl
movs
daa
xchg
jo
int
(bad)
arpl
push
mov
test
loope
stos
daa
xchg
cmp
mov
sbb
scas
ins
sub
dec
inc
sub
and
sti
repz
stc
inc
dec
in
fcom
pop
jne
mov
inc
mov
popa
arpl
jb
dec
pop
cld
xchg
lock
dec
idiv
mov
xchg
inc
mov
test
adc
sbb
addr16
push
in
and
sbb
popf
inc
cwde
mul
loope
mov
loop
int
fwait
mov
sub
mov
mov
pusha
out
cmps
jae
loop
leave
dec
ret
adc
adc
pop
test
test
pusha
ins
(bad)
icebp
sub
aam
add
pop
sbb
idiv
adc
loopne
add
retf
jmp
fwait
xchg
adc
add
adc
cmp
sbb
ror
into
jb
lea
mov
daa
xchg
aam
xor
xor
mov
xor
(bad)
repz
std
pop
sti
das
aam
js
enter
sub
and
push
fadd
jb
imul
sti
jl
xchg
iret
pusha
sbb
imul
daa
in
out
fisubr
jb
adc
jbe
xchg
bnd
jne
mov
xchg
cmps
and
out
mov
out
pop
inc
xchg
mov
rcl
ins
std
xlat
jbe
cli
aaa
sbb
jle
pop
scas
outs
ficomp
(bad)
fldenv
jbe
add
rol
lds
pop
push
jae
and
mov
inc
mov
jecxz
jmp
mov
xchg
rcr
mov
in
inc
jbe
push
and
cmps
lock
pusha
rol
push
add
pop
adc
addr16
es
mov
add
push
push
dec
mov
jg
jae
xor
fldcw
or
push
add
jne
out
hlt
sub
test
lea
cmp
mov
fisttp
dec
push
push
pop
push
sbb
outs
add
push
repz
push
rol
inc
lods
das
ds
jle
dec
jl
lahf
add
mov
lahf
lods
mov
xor
mov
push
xor
xchg
sbb
push
add
out
std
adc
push
fs
jo
inc
jae
mov
cmp
cmp
mov
data16
test
add
xlat
sbb
push
pop
ret
mov
clc
cmc
inc
in
retf
jecxz
cs
sbb
enter
mov
shr
mov
jecxz
enter
sbb
push
xchg
(bad)
std
jnp
in
xchg
dec
aaa
cmp
sbb
lock
movs
xchg
pop
push
xor
add
push
in
shl
fld
fcom
jle
(bad)
jecxz
test
adc
cli
dec
pop
jbe
xor
jns
jns
stc
push
mov
or
call
in
pop
jmp
cli
repnz
jnp
mov
mov
xchg
jle
(bad)
adc
or
sbb
popf
sbb
mov
and
xor
cmp
(bad)
mov
out
mov
(bad)
cmp
and
and
and
daa
mov
xor
and
and
fldenv
mov
xor
sub
push
or
jecxz
std
div
in
cli
retf
jecxz
cld
icebp
pop
inc
xchg
loope
mov
sub
push
test
jbe
pop
aad
mov
adc
push
add
jecxz
cld
mov
jl
cmps
in
add
jecxz
jecxz
add
(bad)
in
add
jecxz
jecxz
adc
xchg
mov
cmp
inc
inc
dec
xchg
pop
pop
cmps
das
push
movs
dec
sbb
test
int3
and
popf
(bad)
div
lods
repnz
std
or
dec
in
push
adc
in
lods
pop
jnp
pop
push
add
mov
push
mov
pop
cmp
imul
push
adc
xchg
sbb
out
jns
inc
int
mov
mov
sub
loopne
data16
inc
jb
ins
popf
push
test
fisttp
sub
ins
int
in
mov
sub
and
sbb
mov
jb
movs
push
sub
cmp
sbb
fisub
sbb
or
lahf
cli
retf
sbb
push
add
cmp
jb
shr
cdq
out
call
mov
mov
xchg
out
push
cmp
cmp
outs
mov
inc
mov
sbb
(bad)
push
clc
jmp
xlat
mov
sub
pop
ficom
add
pop
add
iret
mov
iret
cmovge
fistp
mov
push
sub
xlat
stc
daa
pop
mov
push
pop
cs
clc
mov
xor
jne
addr16
std
hlt
jbe
push
lahf
jl
inc
or
(bad)
jecxz
mov
or
jecxz
mov
xor
cli
adc
mov
push
es
aaa
mov
push
pop
aas
cmp
and
cmp
jae
loope
push
cmp
push
add
je
jle
pushf
jo
pop
(bad)
adc
cli
(bad)
mov
dec
pop
(bad)
mov
pop
pop
test
stos
pop
pop
movs
out
dec
js
movs
adc
repnz
mov
pop
dec
fsubp
push
ja
sbb
mov
imul
bound
mov
inc
add
imul
jae
repnz
call
(bad)
adc
clc
aaa
sub
jo
mov
out
dec
inc
(bad)
inc
test
xchg
movs
inc
cdq
aad
push
(bad)
mov
push
or
loop
mov
pop
lock
pop
jmp
mov
aaa
aad
mov
mov
iret
cmp
mov
call
js
push
dec
data16
sub
retf
stc
xchg
add
out
or
xor
arpl
jmp
psubb
loop
or
int3
pop
xor
rol
aas
mov
int3
push
int3
sub
mov
cmp
sti
pop
push
mov
out
lahf
jb
dec
or
cwde
aas
push
push
sbb
inc
xchg
loope
mov
add
ret
inc
adc
jb
idiv
sbb
jl
mov
pop
cmps
stos
arpl
sbb
push
xchg
push
repnz
test
rcl
adc
icebp
aad
retf
test
jle
inc
pop
xor
xchg
lods
pop
leave
jmp
pop
mov
enter
and
cmp
cmp
in
in
test
bound
sub
or
inc
and
aad
cld
stc
pop
in
fwait
mov
es
ficom
or
sub
out
inc
stc
adc
xchg
out
push
jle
std
(bad)
stc
jp
sbb
call
or
jo
sahf
add
lahf
outs
gs
movs
(bad)
mov
popf
js
add
int3
pop
or
jns
les
mov
je
pop
sbb
xchg
cmc
jp
mov
sbb
shr
(bad)
sbb
jbe
mov
dec
in
cld
data16
data16
movs
cmp
fdivr
and
push
jnp
repnz
adc
mov
leave
mov
push
sbb
daa
inc
aad
std
fild
out
and
xor
dec
xor
retf
inc
mov
popf
or
pop
cmp
lahf
repnz
or
popf
test
out
push
jp
iret
int
gs
mov
in
dec
jp
gs
pop
lahf
ss
aam
sub
pop
int
mov
mov
and
dec
out
mov
xchg
sbb
inc
into
pop
dec
test
push
add
and
int
pop
mov
jbe
sub
xor
pushf
pop
mov
push
push
repnz
das
add
out
jmp
xor
es
bound
(bad)
iret
dec
push
inc
mov
jle
sub
aas
push
lds
xchg
xchg
dec
xor
jl
mov
loopne
xor
or
mov
das
fistp
sbb
xchg
neg
fidiv
add
fsub
comiss
cmp
add
inc
push
cwde
xchg
sbb
and
jg
out
imul
aam
pop
cmp
jmp
sbb
movs
add
xlat
sub
dec
push
repz
fwait
addr16
ffreep
in
push
fisttp
out
test
adc
jo
mov
sub
fdiv
dec
fldenv
mov
and
(bad)
hlt
je
cmp
icebp
pushf
into
aaa
jmp
xchg
adc
sub
retf
arpl
rol
les
dec
popa
out
dec
js
jb
scas
out
mov
mov
dec
dec
cmp
add
data16
test
adc
add
jnp
ins
scas
dec
inc
xor
adc
push
hlt
xlat
dec
imul
imul
jle
xchg
and
and
mov
push
xchg
cmp
add
test
jl
repz
addr16
cmp
pop
cmc
shr
outs
jns
jmp
pop
add
dec
mov
ret
xor
pop
jge
pop
and
(bad)
jmp
inc
jge
in
adc
and
add
icebp
cdq
add
bound
loope
push
call
fdiv
sbb
data16
mov
jmp
aad
cld
or
test
sub
mov
push
push
sbb
(bad)
out
pop
adc
(bad)
stos
js
lea
or
shl
mov
and
pop
pop
idiv
jbe
xor
mov
repnz
mov
rcr
in
loop
xor
leave
mov
cmp
jbe
dec
or
lahf
push
and
in
jge
mov
(bad)
mov
scas
pushf
jecxz
ins
test
rcr
cmp
and
mov
pop
add
cdq
inc
add
mov
scas
sbb
bnd
cmovae
clc
push
sub
inc
cli
add
(bad)
adc
gs
jo
cmc
and
mov
inc
fwait
aas
ret
add
or
mov
arpl
movs
mov
or
mov
dec
lahf
cmc
cmp
lock
inc
mov
aad
jb
fdivr
mov
cwde
jg
dec
std
cld
(bad)
aaa
dec
dec
inc
call
lods
pusha
and
jecxz
cli
(bad)
ja
clc
jo
loopne
jge
(bad)
adc
mov
push
sbb
sub
idiv
sar
mov
mov
jmp
call
add
or
push
into
daa
inc
add
add
daa
imul
inc
es
aas
outs
xor
pop
sbb
add
fs
sbb
dec
ds
fisub
jmp
repnz
or
(bad)
pop
sbb
xchg
stos
movs
jbe
out
push
jb
and
mov
nop
sub
inc
sti
fwait
mov
sbb
mov
add
mov
pop
ror
xchg
and
ins
int
je
dec
sbb
and
jmp
das
cs
in
test
push
dec
add
fbstp
nop
aad
pop
int3
in
pop
or
stos
test
pop
movs
dec
add
dec
aaa
xchg
lds
push
(bad)
inc
out
test
push
movs
loopne
jl
cmp
push
inc
xor
scas
inc
cmp
and
push
(bad)
inc
xchg
dec
imul
push
add
dec
pop
xlat
push
sbb
mov
int3
cmp
dec
aaa
hlt
jmp
and
repz
aas
sbb
and
cmp
push
(bad)
mov
inc
in
xchg
cli
scas
outs
pop
add
enter
loopne
jb
sar
hlt
mov
test
or
stos
jb
push
or
sub
iret
sub
push
mov
or
xor
jg
pop
push
sbb
or
mov
jns
mov
sti
jecxz
jno
pop
aam
fadd
sbb
xchg
jns
add
or
xor
sbb
pusha
pusha
clc
fmul
push
push
test
jle
sub
mov
mov
push
cmp
retf
mov
sbb
stos
pop
lods
out
sub
and
cmp
into
adc
(bad)
xor
div
inc
in
mov
jno
and
pop
cmp
xchg
dec
fxch
sub
pop
dec
imul
sub
cmps
push
lds
mov
ficomp
call
xor
test
jmp
andnps
bound
bound
outs
mov
sub
sti
movs
les
aaa
movsx
or
add
cmps
inc
dec
add
inc
movs
(bad)
adc
icebp
sub
jmp
xchg
mov
mov
sbb
les
push
ins
cmp
push
arpl
out
and
xchg
sub
jns
icebp
push
sub
and
ret
sbb
test
sub
hlt
aad
or
xchg
cmove
adc
sbb
mov
sub
les
cmc
xchg
add
and
imul
scas
xor
not
div
push
adc
push
inc
pop
mov
movs
xor
and
call
add
arpl
jge
jb
dec
fdivr
adc
xor
pushf
rcr
push
xor
adc
dec
push
shl
popa
cwde
sbb
test
fwait
add
sub
mov
push
fucomip
jo
mov
(bad)
idiv
pop
dec
lahf
ins
loop
pop
lods
cmp
sub
dec
enter
outs
pop
fwait
and
aaa
or
mov
sub
sbb
jbe
int
imul
and
mov
or
sub
call
dec
inc
(bad)
jmp
pop
pop
(bad)
dec
mov
scas
cmc
clc
mov
lods
(bad)
stc
xor
add
dec
enter
pop
hlt
jle
jmp
pop
adc
je
add
push
mul
dec
stos
xor
dec
add
std
imul
call
bound
fidivr
fcomp
fwait
sub
dec
jg
scas
jmp
je
scas
jbe
jmp
shr
enter
arpl
add
ficom
test
adc
pcmpgtb
aaa
in
(bad)
sbb
cdq
mov
out
pop
outs
test
jne
adc
pop
les
add
xor
or
mov
sbb
pop
push
ja
xchg
in
xchg
mov
and
pop
int
push
imul
mov
outs
or
jne
jmp
push
adc
loopne
outs
call
xchg
or
(bad)
lds
push
jmp
mov
repnz
not
add
int
mov
jle
cdq
repnz
mov
mov
int3
dec
sahf
xchg
mov
popf
dec
dec
mov
dec
out
dec
mov
or
fisubr
jns
inc
pushf
push
mov
jb
scas
(bad)
mul
jmp
cs
fmul
mov
es
ror
push
xor
sub
and
call
cmp
pusha
mov
jns
(bad)
imul
test
pop
fwait
add
mov
fisubr
stos
test
mov
mov
add
ja
pop
jno
xor
fs
int3
push
jbe
lock
cmp
jns
sbb
xor
add
hlt
test
inc
stc
ja
xchg
cmp
scas
call
xlat
jns
mov
dec
push
das
cmc
add
leave
mov
std
fcomp
or
adc
mov
ss
int
or
cdq
sub
ins
ror
inc
imul
push
or
pop
fisub
sbb
push
cli
icebp
dec
int3
mov
sub
mov
push
pushw
sub
and
sbb
fldcw
data16
pop
out
pop
sub
fimul
add
push
dec
loope
bound
mov
mov
test
ss
enter
cmc
sbb
fsubr
nop
rdpmc
inc
idiv
or
scas
jg
imul
push
mov
repz
and
sub
jecxz
jmp
add
xor
pusha
test
arpl
aam
sub
sbb
fistp
mov
mov
or
sub
aam
and
fucomip
fist
adc
push
jne
dec
ret
xor
pop
scas
mov
mov
cmp
sti
adc
cmps
int3
popa
arpl
cwde
out
je
cmp
mov
out
test
adc
push
mov
lods
mov
retf
ficom
arpl
loope
xor
xchg
mov
cmps
rol
(bad)
in
sbb
xor
mov
comiss
stos
cwde
pusha
inc
ss
push
adc
(bad)
xlat
jle
stc
mov
cmps
jge
sbb
or
aas
in
xor
xor
aam
pop
fld
retf
adc
inc
imul
call
ret
pop
les
mov
xchg
mov
mov
cmp
and
mov
ja
dec
cdq
sti
fdivr
add
jg
test
ds
mov
mov
mov
hlt
or
scas
mov
xchg
std
lds
push
lods
stos
mov
into
push
dec
push
stc
mov
test
jge
shl
dec
iret
xor
and
and
int
dec
jle
aaa
ds
pop
inc
das
mov
pop
pop
popa
jb
xchg
add
pop
retf
push
loop
push
dec
sub
mov
(bad)
and
fild
jbe
lock
inc
pop
pop
icebp
dec
pop
xor
xor
jae
mov
jbe
test
movs
inc
mov
jne
iret
popf
mov
sahf
push
sbb
sub
jmp
dec
sub
ss
jne
cdq
pop
and
add
lods
test
inc
mov
jb
and
(bad)
mov
jo
ins
sbb
inc
(bad)
mov
push
dec
and
xlat
xchg
jecxz
cmove
mov
xchg
ret
mov
push
outs
int3
popf
retf
(bad)
cmp
dec
push
jne
push
sub
sub
mov
pop
iret
or
jg
fwait
jl
lahf
ins
sub
or
out
and
mov
dec
mov
push
outs
mov
mov
clc
sub
int
sbb
jp
lds
loopne
test
outs
mov
dec
jae
inc
(bad)
xchg
mov
in
inc
icebp
sbb
(bad)
pushf
jmp
cmp
int
mov
pop
xor
sub
pop
int3
jb
push
or
dec
pop
outs
xor
daa
fst
mov
inc
daa
arpl
xchg
mov
aam
inc
and
or
xor
sbb
adc
add
into
fldenv
stos
sub
iret
repz
prefetcht2
dec
mov
out
push
adc
iret
movs
outs
(bad)
out
dec
xchg
je
lods
xor
mov
scas
xor
sbb
push
std
fnstsw
jns
and
cmps
mov
sub
add
push
ret
mov
std
mov
cld
or
xor
sbb
loop
test
sub
lea
lea
push
jo
leave
jns
jmp
icebp
dec
in
or
xor
fild
or
lahf
pop
pop
je
or
or
rcr
dec
call
mov
ret
mov
ror
retf
or
pop
mov
in
mov
nop
cwde
and
fwait
test
jae
cs
jge
(bad)
jmp
repz
retf
xor
sub
in
cld
imul
ror
in
call
mov
jge
pop
(bad)
sbb
rcl
xor
cwde
inc
inc
cmp
cmp
or
call
std
inc
and
clc
mov
mov
push
test
retf
jae
fistp
mov
add
cmp
sahf
mov
xchg
dec
leave
jl
dec
push
pop
fucom
fstp
push
sbb
das
mov
bound
call
retf
add
and
sahf
movs
into
and
and
repz
or
sub
int3
xor
aaa
pop
jmp
dec
sub
movlps
jae
movs
dec
lock
jmp
mov
fwait
lods
jg
cmp
out
(bad)
cmps
cmp
add
cmc
dec
mov
cmps
inc
xchg
cmps
xor
outs
pop
in
in
icebp
stos
push
xchg
pushf
xor
ret
popa
mov
daa
daa
sbb
ins
aas
daa
xor
xor
fwait
out
fidiv
and
add
inc
mov
adc
jb
jbe
xchg
mov
fs
xchg
sbb
mov
pop
inc
dec
xchg
ret
xor
lahf
mov
mov
jge
lock
shr
daa
dec
pop
aam
daa
shl
xor
jbe
jae
jmp
adc
sbb
idiv
test
mov
push
ret
mov
popf
mov
xor
dec
xor
imul
mov
sub
scas
pop
retf
mov
add
mov
outs
shl
je
cld
and
bound
pop
movs
xor
pushf
mov
push
and
pop
shr
dec
xchg
push
punpcklwd
push
into
push
or
xchg
pop
adc
cmp
repz
out
mov
lock
add
fidiv
(bad)
jmp
add
neg
jne
xchg
jno
clc
sar
test
sub
xor
mov
int3
mov
cli
dec
xor
push
test
pop
sub
iret
add
inc
ror
xor
pop
push
sub
mov
xor
or
cmp
jns
xlat
jecxz
push
mov
fidivr
add
or
add
jo
or
cmp
inc
in
loopne
mov
add
test
ins
aas
jmp
cs
out
out
sub
adc
lods
(bad)
loopne
dec
mov
retw
xor
pop
xor
into
pop
mov
shr
add
push
pop
loop
sbb
mov
adc
push
adc
cmp
mov
fs
jge
sbb
pusha
jbe
adc
sbb
mov
mov
dec
mov
mov
stos
movs
pusha
into
xor
in
retf
(bad)
leave
loope
out
daa
dec
repz
push
pop
xor
test
sti
inc
pop
jle
(bad)
(bad)
adc
fld
shr
adc
push
jne
lds
dec
sbb
and
mov
(bad)
(bad)
mov
fild
jp
or
add
daa
daa
(bad)
and
lods
fidivr
mov
ins
sbb
adc
sub
xchg
fild
mov
jmp
push
or
in
das
xor
(bad)
clc
mov
pop
dec
into
dec
les
dec
fisttp
sbb
bound
test
int3
call
movs
hlt
pop
cmc
sub
and
and
dec
jo
ror
dec
adc
(bad)
aaa
push
adc
fstp
dec
cmc
fdivp
lock
inc
inc
and
mov
pop
inc
sbb
xchg
adc
and
test
lock
test
scas
mov
sbb
into
mov
and
(bad)
scas
xchg
popf
cmp
xor
pushf
call
sbb
cmp
mov
dec
retf
xchg
daa
sub
mov
cli
repnz
out
cs
and
pop
call
jo
or
jmp
xor
fimul
fs
or
int
jmp
pop
dec
das
and
repnz
adc
or
test
loop
push
sub
cmp
cmps
xor
and
add
mov
fadd
fimul
mov
inc
cld
cmp
call
sbb
xor
(bad)
mul
xchg
xchg
xor
pop
push
jno
bound
sbb
and
pop
std
mov
lea
dec
icebp
mul
imul
jae
inc
mov
ins
sbb
mov
inc
sub
push
xor
adc
push
mov
in
sti
mov
jno
xor
loop
xchg
in
js
imul
mov
arpl
hlt
adc
in
dec
and
loope
test
ss
mov
mov
adc
dec
pusha
mov
push
cmp
int3
cmp
ja
ins
pop
int
loopne
xor
mov
mov
mov
dec
and
pop
jmp
xchg
push
xor
push
sub
lock
jp
div
pop
push
or
pusha
fwait
jb
(bad)
push
lock
cs
test
mov
das
or
sahf
retf
xchg
ins
dec
aad
mov
rcl
pop
cld
dec
imul
(bad)
jo
xor
pop
cmp
and
xor
inc
push
imul
(bad)
lds
movs
aam
jg
sti
ss
mov
test
test
jo
xchg
jge
sub
or
cmp
je
das
pop
xor
aas
fcmovne
adc
cld
add
loopne
inc
hlt
push
inc
xor
xor
popa
dec
jg
sbb
jecxz
mov
jo
pop
sub
(bad)
pop
fs
dec
sar
sub
and
and
jp
add
test
xor
pop
add
jg
pop
sub
mov
xchg
cs
cmp
adc
push
in
jb
in
scas
mov
retf
cmp
jo
jl
stos
sub
retf
xor
jmp
push
sbb
in
aas
pop
jmp
add
mov
test
mov
inc
mov
push
ja
mov
xchg
aas
dec
mov
imul
data16
stc
xor
push
ret
push
call
fild
rcl
loope
adc
jmp
es
in
daa
and
mov
and
push
add
inc
xchg
leave
dec
ins
and
add
pop
icebp
sbb
pop
xchg
icebp
xchg
imul
add
xchg
inc
mov
mov
fbstp
sub
out
cmps
jno
add
in
push
outs
jb
out
mov
jbe
cmc
ret
cmp
in
lea
stc
mov
push
jne
xchg
retf
out
mov
mov
jne
test
jno
inc
pop
cmp
pop
(bad)
cmp
jmp
sub
push
mov
cmp
adc
pop
jecxz
mov
cwde
(bad)
lahf
pop
imul
xchg
push
xchg
adc
pusha
mov
dec
(bad)
sbb
xor
popa
xor
inc
(bad)
ins
sbb
cmp
jge
xor
sti
dec
outs
add
rcl
dec
xor
mov
mov
test
jecxz
push
mov
dec
sub
test
shl
dec
mov
in
sbb
mov
sbb
sbb
sar
fs
scas
test
adc
iret
adc
ftst
inc
loope
sahf
dec
mov
inc
aad
pusha
(bad)
stos
call
push
aam
cmp
call
inc
inc
cmps
xchg
jo
xor
pop
arpl
xor
popa
mov
neg
inc
fcomp
mov
mov
fdivr
push
inc
mov
inc
or
push
mov
imul
pop
sub
and
ins
xchg
jle
push
mov
xor
test
mov
fsub
cmps
les
push
xor
jo
outs
int3
dec
dec
test
mov
adc
fidiv
imul
inc
mov
add
imul
lahf
enter
xchg
lods
or
lahf
push
jge
add
fwait
add
ret
jnp
data16
jae
pop
xor
or
sub
test
add
popa
movs
test
mov
cwde
jns
mov
mov
jle
cmps
adc
ds
and
inc
imul
jbe
repnz
or
add
sub
mov
add
fsubrp
push
scas
inc
and
sbb
sahf
lods
int3
mov
imul
ret
and
das
cmp
std
push
adc
push
dec
xchg
push
xor
sub
jae
xor
jmp
rol
cmps
js
sbb
cmp
js
outs
ins
lahf
sti
xor
add
jno
jmp
sti
mov
xchg
cmp
or
sbb
add
push
xor
and
pop
or
stos
and
inc
in
pop
pop
gs
ds
aas
aad
mov
ins
xchg
cmp
ret
into
imul
pop
data16
inc
sbb
and
imul
mov
cmc
je
add
mov
iret
dec
add
cmp
sbb
cmps
sbb
or
xor
xor
outs
cmp
push
sub
sbb
in
clc
xchg
mov
scas
hlt
xor
loope
fst
lods
push
mov
mov
inc
add
inc
jb
leave
add
stos
or
aam
inc
dec
call
imul
mov
in
mov
cmp
popf
sbb
pop
rol
mov
(bad)
dec
push
jnp
emms
in
imul
sbb
stc
rol
sbb
in
sbb
sub
mov
ja
xor
shl
or
adc
adc
xchg
mov
adc
aaa
push
mov
stos
cmp
adc
xor
push
imul
add
in
and
push
mov
fdiv
sbb
scas
sub
int3
pushf
dec
and
fild
into
mov
inc
shl
xor
in
dec
retf
leave
and
adc
retf
repz
popa
cmp
xchg
add
retf
es
mov
pusha
push
mov
xor
inc
imul
sbb
outs
jne
imul
and
push
adc
outs
outs
imul
out
add
xlat
mov
aam
aam
push
xor
push
inc
inc
es
out
imul
jmp
scas
xlat
jecxz
mov
fxch
xchg
retf
cmc
push
cmp
inc
test
or
push
jbe
repnz
test
xchg
imul
adc
and
call
sbb
mov
popf
fstp
dec
lea
lock
inc
jecxz
xor
add
sub
aad
mov
mov
daa
loope
dec
mov
add
in
xchg
pop
push
data16
inc
test
out
pop
ret
ss
stos
xor
rcl
mov
sub
cmp
pop
xchg
into
and
pushf
sub
mov
and
jg
and
and
rcpps
(bad)
cmp
xor
lods
push
push
cdq
push
jecxz
loop
xchg
xor
pop
inc
push
lahf
lea
push
icebp
push
xchg
add
fwait
clc
hlt
js
sbb
pop
mov
fdiv
repnz
mov
inc
xor
push
pusha
add
aas
lea
daa
(bad)
and
pop
ja
fs
(bad)
out
pop
vunpcklps
out
cld
add
into
aam
in
cmps
push
test
inc
jns
cwde
imul
pop
jne
cmp
cli
(bad)
sbb
jecxz
sbb
or
xchg
mov
or
push
je
mov
sbb
adc
dec
add
icebp
dec
pusha
pop
pop
xchg
pop
inc
shr
cs
pop
push
fisubr
int3
retf
dec
inc
and
into
out
adc
or
cmp
jb
enter
xchg
aad
aam
(bad)
push
in
loopne
cld
pop
xor
enter
pop
or
sbb
iret
stos
call
ret
push
xchg
fdiv
stos
aaa
sbb
pop
mov
jle
dec
cdq
cmp
es
(bad)
mov
mov
into
aam
inc
jmp
push
jmp
movs
inc
(bad)
mov
pop
stos
(bad)
sbb
xlat
imul
pop
ftst
push
push
std
movs
mov
test
in
idiv
inc
loopne
xor
sbb
loopne
ret
add
add
cli
sbb
or
inc
sub
je
and
mov
and
and
jmp
push
inc
xor
push
test
mov
adc
(bad)
and
push
popf
(bad)
mov
and
pop
ret
mov
(bad)
(bad)
add
jbe
push
adc
jecxz
xchg
loopne
in
mov
push
das
add
xchg
pop
retf
dec
outs
sbb
retf
retf
inc
pop
arpl
push
lods
call
shr
(bad)
push
lock
sbb
fldenv
xchg
loopne
xchg
int3
fnstsw
lock
dec
add
push
sub
clc
mov
sbb
cmps
iret
pop
and
push
cs
sbb
jmp
xchg
sbb
call
jne
push
or
jb
test
nop
pop
add
jbe
and
mov
out
std
dec
in
cdq
(bad)
clc
dec
sub
add
inc
xor
mov
inc
aaa
int
out
push
ja
clc
inc
enter
(bad)
sbb
sbb
dec
outs
add
jae
pop
(bad)
xor
push
xor
add
push
dec
xchg
ins
push
shl
inc
adc
repnz
mov
lods
pop
adc
adc
mov
sbb
ja
or
fdivr
jmp
ss
shl
sub
sub
std
not
(bad)
aad
inc
std
push
inc
(bad)
std
xor
lods
pop
test
fmul
mov
ret
loopne
leave
outs
add
jbe
int
ss
into
push
jmp
stos
cmps
into
add
ror
jle
mov
sbb
cli
(bad)
jnp
sub
adc
adc
int3
imul
xor
rol
leave
(bad)
and
ins
ins
leave
dec
rol
xchg
aas
mov
push
out
ror
sbb
repz
jno
sub
shl
or
push
mov
add
push
leave
into
sub
adc
shl
sub
gs
in
sbb
adc
mov
pop
push
es
push
retf
shr
test
nop
jmp
pushf
rol
jns
xor
sbb
shl
cmps
fiadd
pop
jmp
sub
jg
out
inc
dec
sbb
les
inc
jne
hlt
mov
sbb
repz
sub
popf
es
mov
nop
xchg
test
push
or
sub
xchg
add
imul
mov
and
sub
jmp
inc
mov
xchg
add
mov
add
fs
call
dec
retf
xchg
push
test
or
in
mov
inc
mov
jl
or
ret
ret
das
loop
sub
dec
and
fldcw
mov
xor
adc
or
into
mov
test
fdivp
inc
dec
pop
mov
or
aaa
movs
add
xchg
int3
pop
sbb
fnstsw
adc
imul
push
loopne
sbb
mov
and
in
loopne
cmp
pop
inc
sub
jle
xchg
movs
xlat
cmp
fdivr
pop
and
or
jae
or
and
mov
sbb
call
inc
adc
sbb
(bad)
or
sub
les
jmp
sbb
fcmovu
inc
xlat
fsubr
mov
mov
sbb
shl
(bad)
xchg
pusha
into
mov
je
cmps
ins
dec
and
js
mov
add
inc
stos
or
push
cmp
jecxz
call
mov
leave
jp
mov
mov
xor
and
sbb
retf
ja
sbb
es
pop
addr16
dec
inc
mov
imul
in
cld
push
mov
jecxz
ficomp
pusha
gs
imul
ds
jo
loop
int
jb
shl
(bad)
and
shl
cli
cs
dec
test
sub
lock
call
pop
int3
sbb
pop
scas
lock
sub
neg
ror
mov
cdq
sahf
dec
xchg
aam
or
lea
inc
ror
(bad)
fdivr
cmp
or
(bad)
ficomp
out
mov
std
loopne
pop
lea
retf
jecxz
fidivr
(bad)
out
dec
aam
push
xor
pop
push
jmp
rol
das
inc
add
test
push
bound
xchg
std
lahf
add
in
sahf
into
sahf
xchg
aam
icebp
xor
jo
sbb
sbb
sti
popf
rol
xor
push
out
jecxz
inc
and
pop
shr
les
xor
inc
mov
add
jecxz
inc
pmulhuw
mov
pop
pop
xchg
inc
jl
mov
(bad)
nop
and
in
and
ds
pop
dec
test
call
pop
sub
int
mov
cdq
and
test
cld
adc
sub
push
scas
sbb
adc
cwde
inc
and
mov
pop
inc
mov
mov
push
pop
and
push
je
dec
cs
ss
fimul
push
ror
jbe
ror
mov
dec
fld
out
sbb
adc
je
cld
sar
mov
out
mov
mov
retf
je
(bad)
push
and
shl
pop
add
push
xchg
mov
fisub
stos
sub
jo
aas
xor
push
enter
jne
adc
xchg
retf
lods
mov
add
call
xor
sbb
dec
dec
pusha
hlt
rcr
mov
pop
push
mov
dec
pop
dec
mov
arpl
clc
aaa
popf
inc
bound
mov
jne
mov
jmp
call
add
ja
repz
ss
fidivr
mov
sbb
sbb
fistp
inc
(bad)
ins
cmc
xor
dec
cmp
arpl
jmp
popa
les
mov
mov
sub
xchg
pop
xor
jg
push
jne
out
xchg
iret
and
or
or
mov
aad
loope
fsub
scas
out
add
fimul
inc
mov
sbb
mov
xor
jno
stos
jb
jno
out
and
js
fwait
and
mov
(bad)
mov
cmp
int
div
adc
pop
sub
fistp
and
push
clc
inc
gs
cwde
inc
kmovb
popa
shl
cmps
add
arpl
ret
(bad)
sbb
or
sub
dec
mov
ja
pop
stos
and
add
cmp
mov
pop
jnp
mov
or
popf
mov
sub
push
xchg
inc
sbb
fwait
sub
(bad)
fdiv
cmp
out
push
in
sub
xchg
daa
jle
rcr
in
mul
fs
js
jecxz
das
repz
push
pop
pop
push
jl
dec
popa
lods
pop
out
pop
add
xchg
mov
sub
ficom
addr16
out
mov
xor
les
jl
icebp
leave
ins
cwde
push
jbe
leave
add
icebp
rcl
xchg
adc
imul
(bad)
call
mov
sbb
mov
mov
popf
mov
sbb
jp
xor
adc
sub
jo
adc
test
cmps
fild
cmps
xor
push
fwait
aam
sub
fwait
ins
inc
(bad)
leave
rep
xlat
out
loope
rcl
mov
sbb
(bad)
pop
mov
rcl
js
add
dec
out
leave
mov
pop
test
sahf
(bad)
pop
mov
das
cmp
mov
bound
pop
sbb
jnp
scas
shl
mov
ins
mov
or
and
repz
sub
iret
xor
cmp
int
mov
loopne
add
imul
xchg
and
sub
fs
paddusb
mov
outs
(bad)
adc
call
cmp
pop
and
dec
xor
test
out
xor
and
nop
mov
test
(bad)
sahf
out
push
ins
nop
jg
popf
arpl
and
mov
int
jmp
pop
inc
imul
aaa
xor
cmc
in
inc
or
add
sub
lods
imul
xchg
adc
mov
ret
pop
and
push
pop
cmc
push
popf
mov
out
push
or
(bad)
jecxz
push
sbb
gs
fdiv
out
sbb
frstor
clc
faddp
pop
hlt
mov
add
pop
mov
xchg
sbb
sbb
jl
cmp
xor
xchg
(bad)
outs
enter
lods
xor
aad
jmp
adc
iret
dec
inc
(bad)
mov
je
jmp
mov
popa
in
test
mov
and
and
xchg
pop
popf
fistp
rcr
inc
int3
push
data16
leave
out
pop
mov
dec
das
jl
pushf
lahf
mov
sub
xor
(bad)
cmc
pop
movs
pop
out
mov
push
mul
mov
add
stos
xchg
adc
fist
adc
sub
push
mov
arpl
sbb
pushf
push
pop
or
imul
pusha
test
mov
inc
push
leave
adc
and
fisubr
cdq
ror
mov
invd
add
xchg
je
(bad)
mov
add
xchg
inc
xchg
fwait
repnz
pop
push
mov
or
(bad)
jbe
adc
and
loopne
mov
mov
(bad)
xor
cmc
arpl
inc
and
sbb
mov
xchg
stos
aaa
fisttp
arpl
adc
neg
mov
rol
push
icebp
cmp
jecxz
adc
cmp
pop
aaa
sbb
or
adc
mov
faddp
xchg
pop
pop
inc
aad
inc
int
or
ror
icebp
test
jl
pushf
xchg
aas
leave
pusha
int3
inc
adc
retf
pop
ins
idiv
nop
mov
hlt
pop
xchg
mov
jns
cwde
scas
wrmsr
adc
jle
fisubr
xchg
dec
icebp
mov
pop
shl
das
dec
push
je
push
cmp
fiadd
pop
inc
ins
pop
mov
or
aam
xchg
dec
mov
sbb
jp
xchg
pop
xor
adc
xor
iret
mov
xor
(bad)
lock
sub
adc
aas
push
aas
mov
fmul
pop
xor
cmp
dec
cwde
mov
sar
ror
enter
ret
cmp
jg
xchg
sbb
cs
adc
ret
pusha
(bad)
mov
fcomp
xor
retf
leave
push
mov
inc
sub
sub
push
or
adc
enter
cs
shr
xchg
aas
aas
jne
(bad)
push
sub
xor
in
pop
rcl
mov
shl
cmp
pop
ja
call
aad
dec
stc
stc
aaa
push
cmp
aad
jmp
add
js
aad
dec
sbb
ret
adc
add
adc
mov
(bad)
adc
pop
test
outs
push
mov
(bad)
test
loopne
push
jp
jno
aam
push
or
push
push
dec
aam
inc
les
ss
sbb
sahf
pop
out
mov
adc
scas
and
je
sbb
ja
and
cmp
mov
in
push
xor
push
dec
jecxz
mov
movs
ja
push
cs
adc
repnz
lds
out
xor
dec
out
sub
icebp
std
or
ds
xor
lds
pop
ins
adc
mov
add
sub
cwde
jle
sub
fldz
les
cld
sahf
adc
pop
(bad)
in
retf
scas
jecxz
pop
test
call
jecxz
outs
sbb
mov
dec
push
clc
xchg
push
mov
aam
or
dec
push
cdq
push
mov
bound
pmaddwd
es
int
mov
mov
bound
xor
jne
push
sbb
sub
mov
test
leave
dec
or
dec
jns
xor
sbb
adc
mov
mov
or
sbb
(bad)
jg
sub
mov
jnp
mov
adc
out
fisub
or
into
adc
or
jecxz
pop
jmp
lock
sbb
in
rcl
or
loopne
sbb
ret
xor
adc
or
pop
push
pop
push
cs
retf
push
pop
push
shr
add
jo
daa
cli
xchg
pushw
loop
mov
add
mov
jns
adc
cli
or
mov
xchg
sub
imul
mov
popf
and
add
jno
jno
adc
add
pop
in
in
outs
outs
and
(bad)
dec
sbb
pop
mov
jo
and
lock
out
or
mov
jns
in
(bad)
cmp
xlat
pop
sbb
dec
sub
sub
or
cmp
loop
loopne
sbb
xor
inc
dec
dec
loope
fnsave
cmp
add
adc
cmp
stc
jg
cs
rdpmc
pop
clc
loope
sbb
sahf
sub
pop
je
(bad)
xor
sub
push
in
movs
fs
mov
cmps
mov
idiv
sbb
mov
or
and
inc
test
cmp
sbb
mov
pop
shr
repnz
stc
inc
scas
sahf
jmp
jno
xchg
cmp
movs
push
test
push
fsub
test
adc
int
push
pop
push
xor
or
int
mov
cmp
jmp
imul
push
sbb
jle
cmc
fnsave
aam
jmp
imul
in
outs
outs
gs
jmp
ins
lock
push
or
mov
loope
(bad)
fisubr
push
adc
dec
(bad)
cmp
sub
xchg
inc
dec
inc
fadd
loop
fadd
jns
inc
stos
mov
adc
punpcklbw
lds
shr
shl
pop
dec
(bad)
int3
std
jge
les
jmp
pop
inc
inc
lods
sub
dec
mov
or
sub
mov
int
push
add
push
xor
cld
imul
loop
sub
jge
dec
mov
repnz
inc
pop
sub
dec
inc
les
add
xchg
inc
and
(bad)
push
xchg
sub
xor
xor
fucomip
or
or
cmp
mov
fcmovbe
stc
sbb
xchg
jl
or
es
adc
fld
and
jo
jbe
add
popa
cmps
test
enter
loopne
and
pop
and
pop
adc
dec
popa
inc
sbb
je
jle
push
jg
out
xchg
fist
sub
aad
aas
sbb
push
imul
sub
push
repnz
jmp
mov
aaa
(bad)
mov
inc
push
mov
frstor
les
test
lods
pop
or
enter
mov
inc
fldcw
fucom
push
add
lods
dec
adc
add
mov
xchg
mov
mov
mov
sar
in
sbb
mov
jmp
adc
(bad)
out
sub
adc
xchg
leave
inc
ins
call
arpl
ins
cwde
add
cdq
jmp
xor
and
pushf
add
(bad)
push
push
into
and
imul
mov
ficom
mov
jno
nop
idiv
xor
dec
dec
xor
out
test
jno
cmp
fistp
push
out
inc
pop
shl
aaa
push
xchg
ja
mov
and
dec
add
push
fldcw
pusha
xor
and
mov
mov
mov
xor
inc
into
cli
push
add
xchg
dec
sub
dec
nop
cli
jae
cdq
push
stos
mov
pop
(bad)
jmp
loop
sbb
pusha
mov
xchg
mov
sbb
jge
pop
pop
ret
out
push
add
xchg
adc
mov
push
adc
push
cmps
mov
mov
popf
pop
fstp
dec
retf
xchg
xchg
int3
xor
rcl
ror
retf
push
cmp
dec
mov
sub
popf
cmp
sbb
push
jg
push
test
add
pop
shl
mov
das
mov
loop
ret
sub
xor
cmc
push
mov
or
dec
in
sub
dec
ror
int
lds
sti
ja
div
mov
cmp
in
push
ja
ds
sub
fwait
inc
outs
test
data16
xchg
cld
call
sub
mov
jmp
or
jmp
movs
mov
sub
in
pop
push
cmp
mov
bound
mov
push
fistp
neg
adc
xor
or
(bad)
sub
cld
fmul
cmp
jle
lock
test
xor
out
cmp
lods
ret
pusha
inc
popa
sub
out
aaa
dec
ds
inc
or
sub
outs
cdq
dec
inc
add
(bad)
cmp
into
in
psllq
es
adc
sub
dec
daa
mov
cmp
dec
dec
dec
nop
xchg
mov
(bad)
push
mov
xor
sub
add
pop
ss
inc
out
out
test
pop
mov
adc
enter
sahf
dec
jle
add
mov
dec
pop
retf
xchg
arpl
int3
mov
inc
mov
dec
call
sbb
in
adc
nop
jno
xchg
mov
adc
dec
cs
pushf
xchg
call
xor
or
sub
pop
mov
stc
hlt
push
xchg
ficom
mov
sbb
gs
mov
or
clc
aad
pop
inc
add
cwde
imul
adc
sti
or
sub
mov
ds
add
fisttp
or
or
push
aam
push
in
retf
mov
loope
mov
out
cld
cs
loope
fstp
lock
xor
add
xchg
inc
cdq
pop
sti
mov
jle
cs
leave
cmps
dec
lods
mov
sub
aad
retf
pop
jne
stc
sbb
pop
cdq
mov
mov
adc
pushf
out
(bad)
out
xchg
fild
sahf
push
lods
daa
sahf
ins
jecxz
popf
gs
sti
pop
out
pop
outs
aam
int
repnz
sbb
call
jns
leave
jecxz
mov
test
pop
xchg
mov
xor
addr16
adc
mov
sub
push
ret
mov
mov
cli
xor
into
inc
inc
mov
hlt
inc
enter
stos
or
mov
out
cmc
dec
dec
outs
or
dec
sar
inc
xor
test
rcl
test
aaa
fsubr
push
fcmovbe
int
ret
ins
add
enter
xchg
push
inc
pop
scas
adc
cmp
test
jmp
popf
mov
pop
xor
ds
jb
and
scas
int3
dec
cmp
jo
mov
inc
add
and
jnp
das
retf
cmp
cdq
push
movs
dec
add
xor
inc
inc
push
jl
inc
xor
lock
push
cmp
mul
sbb
push
inc
inc
jb
push
lahf
(bad)
mov
ret
(bad)
mov
in
cs
mov
mov
int
pop
push
dec
push
shl
shl
out
sub
jnp
mov
call
jno
scas
mov
daa
xor
push
ror
or
inc
mov
int3
in
in
test
fmul
call
adc
into
xor
push
mov
dec
scas
and
lds
sbb
mov
mov
sub
add
dec
into
pop
ficomp
and
xchg
push
arpl
jns
dec
cli
sbb
push
cwde
iret
jb
sbb
inc
ins
aaa
jp
addr16
mov
and
sbb
xchg
push
sbb
inc
or
jmp
adc
int
scas
es
popa
(bad)
mov
sub
or
les
jnp
adc
jle
mov
ss
or
aas
mov
mov
mov
mov
fdivrp
inc
mov
add
daa
in
mov
fiadd
xor
lea
mov
inc
or
imul
jl
adc
dec
sub
fimul
rcl
jmp
int
dec
fmul
cmp
aas
mov
out
sbb
test
push
daa
mov
leave
push
push
stos
jecxz
or
adc
cmp
cdq
mov
sub
in
add
sahf
cwde
jnp
lods
mov
sub
or
sub
xchg
inc
xchg
sub
mov
sub
pop
repnz
and
dec
(bad)
push
rol
jno
sbb
call
mov
and
sbb
add
or
shl
aaa
test
push
xchg
xor
mov
adc
or
iret
sbb
sbb
icebp
mov
adc
or
fild
fadd
pusha
mov
jmp
push
sub
mov
stc
pop
in
fistp
lock
(bad)
pushf
jmp
push
adc
sub
into
fsub
icebp
fstp
mov
lock
sbb
retf
and
xor
add
jg
xor
or
dec
into
push
ror
cmp
or
dec
(bad)
pop
and
(bad)
sub
push
stos
js
test
je
xor
and
aas
pop
mov
jne
and
pop
xchg
sbb
movs
fnstcw
imul
mov
aaa
jnp
cmp
cmp
pop
cmp
mov
test
sbb
(bad)
cmc
xchg
cdq
data16
cmc
mov
pushf
add
outs
mov
cdq
add
xchg
in
(bad)
mov
sbb
popa
out
inc
or
in
push
jmp
in
call
jl
in
sub
lods
sti
out
popf
lods
xchg
popa
inc
fwait
xor
out
arpl
mov
inc
inc
xchg
cs
dec
adc
jl
sub
out
pop
(bad)
call
xchg
pop
mov
cmp
vmovntpd
clc
jno
or
inc
add
sub
sub
jno
adc
adc
(bad)
fmul
adc
cmp
lock
dec
test
push
enter
mov
sub
sbb
addr16
in
retf
mov
outs
inc
dec
cmp
arpl
gs
jne
js
fs
aaa
pop
cmc
sbb
mov
daa
in
loope
in
mov
test
push
cmp
mov
jb
popf
(bad)
js
mov
ret
mov
push
(bad)
test
cld
sbb
jb
jb
stos
int
and
rol
es
cmp
push
jmp
arpl
stos
sbb
sub
pop
stos
fcmovu
lods
push
loope
xor
jle
xor
jns
xor
addr16
and
adc
and
jmp
fs
(bad)
or
mov
dec
je
dec
adc
jnp
push
adc
dec
rdmsr
(bad)
jge
into
ret
nop
int
add
aam
cmp
pop
int
enter
xchg
call
push
ret
lea
push
out
mov
jbe
leave
jmp
or
pop
xor
adc
push
(bad)
lea
pop
mov
stc
cs
xchg
add
out
cwde
sbb
pop
(bad)
je
inc
outs
mov
outs
punpcklbw
and
push
inc
nop
adc
xchg
push
mov
push
lock
xchg
mov
and
fist
sbb
inc
out
mov
xor
fild
out
mov
lods
jmp
inc
(bad)
imul
or
sahf
fdivr
mov
sbb
mov
dec
cmp
jg
(bad)
add
pop
mov
(bad)
(bad)
mov
add
inc
sub
mov
fiadd
push
icebp
and
cli
and
retf
out
lea
push
pop
sub
div
inc
imul
mov
sbb
jp
enter
cmc
add
sub
daa
add
mov
inc
add
mov
in
xor
mov
popa
cmp
repnz
cmp
sbb
out
fwait
call
into
sub
cmp
cmp
test
push
mov
sub
pop
popf
jl
or
push
es
fs
sbb
gs
push
in
add
cs
sub
ror
rcr
pop
jns
gs
mov
je
mov
nop
jns
pop
cs
mov
ficomp
ja
sbb
lods
jnp
or
mov
(bad)
cmp
inc
cmps
push
sti
or
jp
dec
in
push
ja
ins
lahf
mov
mov
add
lods
mov
lds
test
(bad)
out
push
sub
sub
add
arpl
psubd
pop
jnp
cmp
sbb
push
sbb
push
cmp
icebp
sub
(bad)
das
test
sub
pop
push
pop
xor
jo
push
cdq
jb
call
mov
out
stos
int3
rcr
imul
pop
and
or
and
in
into
cmp
dec
dec
pop
mov
pop
mov
mov
xor
fstp
dec
and
leave
or
popa
push
rcr
pop
push
sub
mov
gs
out
ret
mov
(bad)
scas
hlt
mov
mov
test
adc
sar
movs
pop
push
aaa
cmps
jle
mov
jmp
pop
jp
dec
punpckhbw
add
jecxz
cmc
pop
jbe
xchg
fnstcw
fst
mov
rol
push
jmp
mov
push
retf
adc
rcl
pop
jecxz
jmp
inc
jno
test
(bad)
jp
lods
popw
ins
les
dec
inc
ror
out
nop
ins
loopne
add
adc
cmps
push
hlt
outs
xchg
inc
adc
adc
pop
es
jecxz
cmc
add
stos
imul
pop
test
push
nop
repnz
push
xor
aaa
aaa
and
add
mov
mov
jbe
clc
adc
movs
mov
ret
mov
out
add
dec
jns
ins
and
iret
pop
in
(bad)
jecxz
gs
push
data16
shr
lods
mov
fild
(bad)
mov
mov
sahf
cmp
dec
sbb
sub
popfw
or
cmp
dec
mov
loop
in
push
inc
dec
pop
adc
jne
ffree
rol
iret
sbb
stos
sbb
outs
inc
mov
loopne
and
lahf
pop
sbb
repz
cdq
push
aas
pushw
mov
adc
or
cmp
pop
lock
jle
add
jb
test
stc
lock
sbb
push
push
cmp
mov
adc
dec
addr16
sbb
cmc
int3
addr16
and
int
sti
xor
leave
mov
mov
jecxz
dec
dec
mov
and
test
cmc
inc
mov
shr
pop
mov
push
or
cmps
cs
sbb
or
jg
int
sbb
cs
adc
add
inc
inc
sbb
adc
sbb
push
js
mov
pop
dec
adc
loop
hlt
cmp
xchg
fcmovnbe
icebp
cmp
out
mov
bound
scas
sub
inc
pop
out
stc
jle
js
jo
fidivr
addr16
dec
pushf
jle
push
gs
pop
popa
pop
xor
push
pop
jmp
ret
or
jae
xchg
and
test
loop
test
test
and
xor
xchg
out
jnp
xor
hlt
movs
in
sub
ror
jp
xchg
das
push
ja
sbb
mov
movs
pop
pusha
scas
pushf
fnstcw
pop
xchg
das
das
pop
lods
ror
push
pop
or
jnp
aam
cmp
out
adc
dec
xor
push
inc
xor
mov
hlt
idiv
push
sbb
cmp
aam
sbb
jnp
inc
lea
pop
out
xor
xchg
dec
nop
adc
adc
pop
dec
das
loopne
xor
or
xchg
int
lds
push
cwde
xchg
enter
iret
mov
jae
sahf
mov
mov
int
mov
push
adc
xchg
push
xor
out
lahf
inc
sub
repnz
sub
in
aaa
mov
aad
jecxz
(bad)
jae
cmc
mov
test
jle
out
sbb
rcr
int
push
pushf
adc
(bad)
mov
imul
sar
adc
xor
adc
mov
inc
cmp
cmps
jo
cmp
or
sbb
and
and
xor
(bad)
push
cs
cmp
cmp
push
xchg
sub
inc
pop
jbe
lods
or
dec
push
ficomp
mov
in
adc
std
loop
aas
in
jmp
inc
ret
inc
add
jmp
or
inc
mov
loopne
test
je
scas
xchg
fsubrp
ror
(bad)
push
xchg
mov
pop
popf
mov
jno
das
xor
ss
push
outs
push
aaa
inc
add
pusha
int
shl
hlt
shr
sbb
sub
daa
pop
jmp
pop
jle
out
jg
pop
mov
mov
jp
imul
jg
mov
sbb
mov
dec
popf
xor
(bad)
push
popa
inc
sub
pop
dec
ds
jp
and
aam
mov
push
adc
pop
(bad)
(bad)
fidivr
pop
repz
(bad)
pop
(bad)
(bad)
neg
sti
fucomi
xchg
xor
out
or
inc
xor
rol
scas
popf
cld
stos
mov
test
fstp
in
push
add
stos
dec
dec
inc
xchg
pop
(bad)
sub
inc
push
and
sub
aaa
call
pop
sbb
sub
cli
push
test
sbb
imul
out
stc
and
sbb
mov
mov
pop
and
loopne
int3
test
cs
call
adc
add
popa
jae
push
(bad)
ficom
call
iret
inc
jo
repnz
pop
add
mov
sbb
cwde
mov
std
inc
mov
ds
and
and
cmp
dec
fcom
call
pushf
and
sub
fs
jns
inc
dec
cmc
cmp
sub
mov
daa
cmp
sbb
pop
cmp
cmc
lds
pop
aaa
aas
movs
cmps
pop
jae
mov
xlat
(bad)
aaa
ror
sub
ret
push
jo
mov
fcom
push
frstor
mov
sbb
sub
fmulp
scas
add
sub
and
inc
cmc
sbb
dec
shr
out
add
or
xchg
into
dec
hlt
cmps
sti
xchg
push
add
in
out
(bad)
rcr
out
xchg
push
fdivr
cli
sub
loopne
dec
inc
push
adc
cmp
push
fcom
stos
ins
dec
cmc
icebp
shl
jecxz
push
dec
retf
test
test
repnz
xchg
pop
xor
pop
mov
jnp
jecxz
xchg
adc
test
pop
into
stos
aaa
sbb
xchg
adc
mov
lea
ror
out
(bad)
fdiv
inc
inc
iret
jne
pop
test
fucomip
jnp
inc
pop
push
xor
iret
data16
out
jle
das
push
(bad)
xchg
add
push
out
(bad)
pop
cli
cdq
jmp
mov
xchg
sbb
sbb
pop
dec
rol
or
cmp
ficomp
xchg
shl
mov
push
or
aad
lea
xchg
es
xchg
xchg
sub
push
xor
mov
out
pop
les
pop
dec
es
adc
mov
mov
not
int3
xor
lods
add
mov
jne
out
xor
fiadd
popf
(bad)
retf
pop
jmp
mov
movs
outs
pop
or
xor
pop
sti
mov
sbb
popa
aam
cdq
je
mov
add
pop
stos
inc
loop
jae
hlt
lea
ja
ret
jecxz
xchg
xchg
and
cmps
cdq
sbb
in
xchg
xor
aad
cmps
inc
push
xor
xlat
jl
aaa
pop
div
rcr
jle
and
pop
call
push
aaa
in
pop
popf
and
xchg
pop
jbe
lds
add
es
mov
leave
sbb
jns
ss
cdq
out
arpl
jae
retf
ret
loope
lods
(bad)
pop
and
sub
and
leave
add
sbb
cdq
shr
scas
adc
aad
adc
sti
and
push
lea
out
scas
mov
jo
dec
inc
popa
sub
adc
ficom
pop
ret
xchg
pop
xchg
sbb
jmp
ror
clc
mov
(bad)
or
popf
push
cmp
inc
sti
inc
cli
sbb
or
sub
push
shl
dec
mov
gs
cdq
fsubrp
inc
ror
push
das
mov
in
repz
movs
inc
retf
in
shr
pop
fsub
fucomi
call
inc
scas
lock
or
inc
outs
mov
xchg
pop
jge
inc
jmp
sbb
mov
loop
pop
add
push
in
and
pop
call
mov
(bad)
loop
sbb
pop
std
pop
fisttp
dec
out
inc
and
test
je
cmc
retf
daa
in
bound
and
fucom
and
rcr
inc
push
xchg
add
inc
pop
xchg
hlt
push
cmp
cdq
js
xlat
(bad)
fs
in
iret
sahf
ja
add
cs
data16
mov
adc
sub
loop
in
push
sbb
pushf
ss
cdq
(bad)
or
inc
fcmovne
jmp
mov
popf
add
push
jne
fidivr
mov
sub
test
pop
cdq
or
sbb
fwait
cmp
aad
xchg
enter
enter
enter
enter
enter
outs
xor
in
clc
sbb
inc
xor
jb
cli
jne
mov
imul
repz
loope
or
gs
ins
aaa
mov
inc
aaa
pusha
xchg
add
loop
ficom
mov
mov
add
aad
jbe
sub
xor
xor
mov
frndint
sbb
mov
jae
(bad)
hlt
jo
or
sbb
out
xchg
in
fadd
mov
arpl
lods
mov
jl
ret
ins
dec
sbb
dec
icebp
inc
jle
lock
and
stos
cmc
nop
iret
or
fcomi
enter
mov
dec
cmp
mov
mov
lods
xor
push
dec
jle
inc
adc
sub
add
sbb
mov
jne
add
(bad)
and
jno
xchg
aas
test
scas
rcr
inc
xor
dec
dec
or
ret
rcr
or
inc
imul
in
jbe
pushf
leave
dec
jecxz
and
test
mov
pop
nop
adc
mov
ins
fstp
ficomp
cli
mov
loopne
loop
sbb
pop
xor
xor
mov
push
mov
or
or
mov
sbb
jo
xor
out
out
sub
jb
add
add
mov
or
inc
shr
sti
mov
and
pop
xor
lea
int
xor
dec
repnz
int
or
in
pop
mov
cli
in
pop
arpl
ret
lea
stos
dec
add
out
cs
pop
cvttps2pi
adc
cmc
xor
call
clc
add
retf
inc
dec
inc
pop
je
retf
scas
arpl
mov
sub
or
xchg
or
ja
inc
mov
int3
lock
jns
pop
mov
(bad)
pushf
retf
or
jno
clc
(bad)
jne
lds
in
add
jo
dec
not
pop
(bad)
out
sbb
ja
test
aas
dec
pop
ja
dec
push
shl
dec
mov
scas
mov
pop
repz
mov
cwde
sbb
add
jmp
loope
adc
xchg
ins
retf
out
cmp
popa
leave
and
js
ret
push
cmp
jg
sub
call
cmp
out
daa
jle
arpl
pop
cld
cli
xchg
and
mov
addr16
sub
pop
add
dec
not
pop
adc
inc
and
inc
hlt
add
leave
(bad)
pop
fsub
jge
mov
loopne
sbb
popf
in
je
stos
sbb
pop
pop
(bad)
aam
jle
repz
and
xlat
sub
loopne
jecxz
xchg
imul
pop
test
in
fwait
adc
pop
ins
out
inc
retf
es
shl
xor
inc
popf
sbb
mov
xor
aad
ins
mov
dec
aad
(bad)
pop
push
inc
sbb
(bad)
addr16
inc
xchg
mov
pop
pop
mov
cmp
clc
mov
(bad)
lock
(bad)
cmps
mov
mov
push
xchg
adc
sub
mov
pop
inc
add
sub
test
pop
ret
inc
std
bound
xor
hlt
movs
inc
and
push
cld
pop
pop
add
int3
xchg
mov
pop
pop
mov
in
ficomp
cwde
cld
pop
push
dec
retf
sub
daa
iret
mov
pop
frstor
sub
out
jo
mov
(bad)
xchg
adc
cwde
clc
je
jo
push
adc
dec
aad
push
sbb
inc
pop
pop
or
jo
xlat
fistp
xchg
pop
mov
out
pop
ror
pop
cmp
add
jmp
mov
push
iret
dec
add
or
mov
push
mov
and
call
sub
pop
icebp
iret
sti
jb
test
and
mov
mov
adc
mov
ficomp
add
push
gs
adc
xor
jb
add
inc
inc
jno
dec
pushf
mov
aaa
fild
push
mov
or
int3
arpl
pop
mov
into
fs
hlt
sbb
pop
mov
or
cmps
sbb
sahf
sets
mov
cmps
push
call
out
ins
pop
ins
cwde
ficomp
jno
paddsw
jbe
sub
mov
pop
rol
(bad)
cmp
mov
xor
add
ficomp
push
stc
arpl
jl
(bad)
cmps
aad
sub
loopne
sub
push
(bad)
mov
push
and
test
fstp
test
pop
arpl
int3
sahf
out
stos
inc
xor
out
xchg
xchg
jg
xor
push
cmps
aaa
push
jle
xor
ret
adc
cdq
xchg
ins
ror
in
sbb
dec
add
mov
dec
jmp
adc
pop
inc
ins
dec
sbb
sbb
pop
xchg
fcom
xor
push
mov
test
pushf
mov
pop
cmps
sti
stc
pop
mov
pop
(bad)
jecxz
lock
pop
scas
fscale
jb
cmp
push
push
pop
jmp
mov
retf
add
je
js
icebp
aaa
ins
or
dec
not
enter
ret
mov
and
stc
leave
rol
call
adc
daa
in
jg
push
fadd
xor
outs
push
mov
fisub
iret
shl
inc
sbb
ja
xchg
leave
iret
std
pop
adc
jle
pop
cld
push
shl
pop
push
dec
stos
sub
sub
dec
dec
pop
int3
sbb
test
add
in
mov
sub
fisttp
div
ins
test
aam
mov
mov
mov
adc
xchg
es
mov
sub
sub
pusha
cmps
fs
iret
sar
ficomp
and
sahf
jge
sbb
push
adc
rcr
out
push
rcr
inc
sub
mov
lds
push
push
cld
stos
dec
icebp
pop
mov
cld
(bad)
arpl
mov
mov
movs
and
cwde
or
test
mov
inc
xor
test
(bad)
not
jae
test
cmps
mov
dec
mov
icebp
loopne
mov
aaa
aam
cwde
xchg
std
sahf
pop
pop
add
dec
push
aam
daa
xor
mov
adc
lods
cmp
lods
mov
scas
mov
push
dec
shl
shl
xchg
jno
addr16
int
or
sar
inc
in
icebp
jg
cmp
add
jae
sub
add
(bad)
ret
mov
mov
jmp
addr16
ret
das
inc
out
xor
call
rcr
(bad)
lahf
test
fistp
mov
or
mov
pop
repz
or
push
mov
movs
fwait
add
xchg
adc
in
xor
stc
push
sbb
rol
mov
xor
pop
xchg
inc
and
jo
aaa
cdq
sub
mov
mov
fdivp
or
inc
idiv
push
and
lahf
dec
les
iret
jmp
xor
xor
in
or
call
mov
or
into
imul
in
out
pusha
mov
outs
cli
in
dec
ror
sahf
mov
push
hlt
mov
and
push
lahf
cmp
inc
enter
out
scas
dec
adc
xor
push
cdq
in
retf
fcmovnb
cwde
inc
sub
cmp
inc
adc
jle
and
jecxz
pop
xchg
mov
or
or
dec
mov
idiv
test
fadd
cmp
test
movs
ss
retf
jno
sbb
jmp
repnz
dec
(bad)
sbb
cmps
adc
and
add
sub
sbb
fdivp
xor
cmc
out
or
pop
imul
mov
xor
pop
lods
ds
fcompp
outs
xchg
(bad)
and
out
bound
es
sub
mov
test
xchg
mov
xchg
and
xchg
push
fwait
or
or
dec
push
(bad)
push
(bad)
stc
adc
repz
pushf
xor
cmp
dec
add
add
xchg
sbb
adc
aad
lock
(bad)
inc
cmp
mov
xchg
(bad)
imul
xor
popf
jmp
(bad)
mov
cmp
add
cmp
daa
popf
sahf
test
add
adc
sub
jns
or
mov
cmps
jmp
sbb
adc
out
(bad)
add
adc
cli
jae
xchg
das
in
pop
icebp
scas
pop
pmovmskb
pop
dec
dec
and
js
mov
pop
mov
push
lahf
mov
dec
imul
stc
dec
add
sbb
xor
(bad)
cmp
inc
push
fbld
xchg
comiss
sar
test
add
in
push
pop
lahf
xchg
pop
jmp
sahf
xchg
push
sbb
je
ror
jbe
retf
gs
test
test
aaa
pushf
inc
push
(bad)
adc
enter
out
outs
or
movs
adc
cmp
cmps
out
adc
dec
dec
xchg
sub
daa
or
adc
inc
mov
xor
pop
jo
arpl
cmps
in
sbb
add
movs
fisttp
idiv
add
rcl
movs
movs
mov
je
ret
dec
sbb
arpl
and
mov
or
jg
mov
sahf
xor
dec
jmp
je
sar
dec
ins
and
mov
repnz
add
in
push
dec
add
movs
jecxz
inc
inc
pop
cld
stos
sbb
xchg
or
mov
mov
sbb
mov
in
push
mov
aad
pop
(bad)
mov
(bad)
sahf
popf
aas
cmp
arpl
lahf
dec
jns
push
jns
loope
shr
pushf
sub
dec
lahf
pop
imul
cld
mov
shl
pop
into
ins
mov
lahf
test
sub
dec
mov
inc
sub
aaa
ror
or
leave
cmp
ret
test
and
add
xchg
inc
cmp
dec
or
inc
dec
ror
xchg
and
shr
aaa
out
pop
jle
and
lock
mov
xchg
or
mov
in
mov
sub
pop
dec
mov
fs
and
ds
pop
pop
push
ror
jg
in
push
pop
push
ja
fst
inc
das
(bad)
shr
sub
sub
enter
dec
test
cmp
mov
pop
out
mov
pop
mov
add
ss
cli
add
inc
fst
push
je
xchg
mov
lods
dec
nop
imul
pop
inc
sub
add
jb
mov
sbb
mov
and
loope
dec
cmp
mov
test
sub
push
out
mov
pop
js
movs
ds
xor
pop
fwait
in
xchg
mov
pop
call
iret
cmps
mov
(bad)
xchg
and
mov
jmp
cwde
clc
mov
ret
push
int
jecxz
dec
xor
rcl
cmp
nop
sbb
sbb
push
repz
outs
es
inc
fcomp
pusha
int
fidiv
mov
add
sahf
je
cld
fisub
nop
repz
sub
sub
dec
(bad)
mov
sbb
push
and
xor
ins
jmp
fidiv
add
jns
sahf
jle
sub
or
xchg
adc
mov
inc
in
mov
cwde
add
movs
jl
out
pop
push
push
xor
sbb
pop
add
shr
inc
pop
add
iret
rcr
or
cmp
mov
iret
xor
cmp
das
cli
ins
xchg
inc
jb
aas
repnz
out
inc
call
out
mov
add
jg
jbe
sbb
(bad)
push
sub
or
jo
sti
jle
dec
data16
jns
mov
imul
(bad)
mov
lea
ror
dec
jmp
xor
push
cmp
sbb
ret
fisttp
inc
outs
cmp
(bad)
outs
inc
xchg
or
test
or
pop
jno
adc
and
dec
pop
mov
mov
out
cmp
xchg
imul
mov
fwait
push
cmc
out
mov
fisttp
inc
aad
add
xlat
jbe
int
inc
fstp
mov
test
loopne
jmp
jmp
mov
(bad)
mov
sub
rol
add
xchg
or
xor
cli
test
sbb
lahf
add
sub
test
pop
sahf
(bad)
lds
or
popf
pop
loop
shl
rcr
sbb
rcl
arpl
mov
clc
mov
out
ja
rcr
cmp
mov
mov
mov
and
and
mov
pop
(bad)
cs
imul
or
cmp
mov
call
daa
popa
add
cmp
add
popf
pop
jo
push
mov
mov
mov
loope
out
inc
xchg
lods
lahf
imul
add
xchg
sub
xor
or
add
jmp
add
add
xchg
or
pop
xor
movs
and
cs
out
push
push
or
add
mov
outs
mov
dec
repz
adc
sbb
dec
mov
mov
xor
xor
loop
sub
shl
ret
pop
mov
sti
sar
xor
rcr
xlat
into
and
fsubr
mov
fwait
enter
shr
cmc
inc
add
mov
mov
loopne
fisubr
es
les
adc
out
and
add
sub
movs
cmp
pop
imul
push
arpl
dec
and
add
jl
jle
xchg
mov
jle
pushf
xor
retf
lea
jo
je
mov
xchg
pushaw
mov
mov
es
sahf
and
xchg
sar
inc
add
lahf
or
icebp
mov
scas
scas
push
ins
mov
ror
inc
cmp
jns
add
fs
add
outs
dec
test
in
xchg
ja
sub
ds
pop
fwait
jne
test
xchg
dec
(bad)
cmp
mov
inc
ss
shl
pop
iret
xlat
pop
hlt
or
pop
pushf
pop
sub
dec
add
sub
dec
scas
and
jg
pusha
nop
inc
fs
aas
in
arpl
inc
cs
cmps
fs
(bad)
leave
aas
jno
retf
dec
rdpmc
xchg
xor
xlat
mov
sbb
arpl
fmul
add
mov
fld
dec
jo
push
dec
retf
mov
cmovne
icebp
sbb
push
pop
dec
sub
(bad)
iret
jecxz
push
js
push
dec
sbb
in
gs
enter
shl
cmps
xor
cli
mov
adc
cmp
jl
dec
cmp
xor
dec
xchg
add
mov
xor
movs
stos
(bad)
cmp
arpl
add
dec
jp
xor
jg
xor
fs
jmp
add
loope
test
mov
push
ret
pop
push
lods
inc
jle
push
outs
push
rcr
je
add
push
mov
pop
mov
idiv
mov
add
add
hlt
and
or
inc
mov
aad
sub
test
xadd
retf
jmp
(bad)
rol
loop
scas
std
movs
mov
jg
pop
enter
leave
push
inc
pop
std
jne
in
mov
pop
xor
sbb
adc
ret
repnz
test
and
jmp
aas
push
neg
lea
mov
jmp
jg
stos
or
pop
les
les
jp
pop
xchg
sbb
add
outs
dec
dec
nop
(bad)
loopne
call
(bad)
mov
inc
pop
les
mov
out
mov
repz
cs
sub
fwait
inc
pop
ret
sahf
add
out
mov
dec
add
scas
jb
or
mov
(bad)
cdq
test
xor
jae
sbb
inc
fisubr
mov
pop
pusha
out
push
in
sbb
shr
rol
dec
mov
ins
out
mov
cs
fadd
aad
fld
mov
(bad)
dec
add
dec
loope
mov
cmp
pop
hlt
pusha
pop
int
and
sbb
clc
jl
cld
inc
mov
sub
mov
mov
cmc
mov
xor
mov
cmp
cmc
xchg
ficomp
inc
loope
sbb
dec
mov
(bad)
mov
and
jle
sbb
jno
cmp
sub
jl
in
fld
mov
ror
jae
push
dec
mov
adc
out
test
sbb
cmps
jnp
xchg
mov
neg
imul
mov
out
adc
leave
jp
jnp
fs
pop
shl
in
pop
push
sbb
call
stos
nop
dec
cmp
sub
push
pop
mov
test
fstp
dec
mov
into
iret
test
add
or
gs
call
adc
xchg
xchg
mov
aad
lea
fcomp
cmp
mov
test
mov
unpckhps
outs
add
and
xchg
or
dec
mov
adc
in
inc
int3
lds
adc
sub
mov
call
aam
aam
(bad)
in
sub
xor
call
enter
outs
lahf
mov
jne
aas
or
adc
dec
sbb
pop
xor
xchg
push
inc
dec
popf
xor
mov
dec
push
sar
or
mov
outs
cmp
mov
outs
pop
in
stc
imul
int
ret
daa
xor
add
jns
jecxz
cbw
pop
leave
sbb
sub
movs
or
dec
adc
xor
js
pusha
in
push
push
pop
sbb
push
sbb
js
or
scas
or
pop
push
sub
test
test
or
daa
das
fcomi
call
xor
stc
mov
dec
in
aaa
or
push
popf
mov
xchg
in
cmps
inc
mov
mov
lock
adc
test
int3
popa
jl
hlt
and
xchg
mov
jns
addr16
dec
mov
test
aaa
push
popf
repz
dec
cdq
sub
pop
test
rcr
iret
cwde
push
dec
xor
sub
fsubr
sub
data16
popf
add
cli
inc
outs
pop
jmp
sub
xlat
inc
popf
mov
adc
jno
and
sbb
icebp
(bad)
fst
movs
inc
jno
push
xor
and
mov
push
add
jecxz
loope
shr
inc
cmp
push
mov
repz
dec
mov
scas
mov
xor
mov
dec
pusha
ficomp
sub
cmc
inc
iret
std
push
cdq
inc
add
clc
sbb
mov
call
retf
pop
dec
sbb
fwait
dec
pop
bound
pop
aaa
in
lods
xor
adc
jno
daa
mov
pop
and
xchg
pop
mov
dec
xor
iret
ds
xor
sahf
test
retf
jbe
xor
jmp
pop
jge
and
cmps
loopne
sbb
mov
push
cwde
jne
inc
iret
and
xor
sub
mul
dec
std
and
std
mov
xchg
mov
mov
push
jae
add
mov
retf
lahf
mov
cmp
fsubr
aam
mov
sub
jp
mov
mov
sbb
and
in
dec
int3
push
mov
and
dec
pop
xor
stos
stos
dec
adc
xchg
in
xchg
sub
das
jo
and
int3
cdq
mov
xchg
jbe
shl
stos
mov
mov
aas
mov
cwde
xor
push
mov
mov
and
xchg
adc
xor
and
out
retf
sub
mov
in
inc
imul
rcr
inc
sbb
inc
sub
rcr
push
and
rol
mov
or
enter
call
scas
or
add
out
cmp
(bad)
inc
popfw
lods
call
leave
jns
push
movs
mov
adc
lock
pop
in
mov
cmp
jae
call
jmp
inc
stos
shl
fwait
xor
inc
and
sub
dec
fmul
pop
loope
(bad)
movs
fldcw
xor
push
lea
xchg
std
test
fstp
fadd
imul
xchg
pushf
push
dec
sub
push
fwait
loope
mov
jb
dec
push
xor
jmp
int
dec
das
xor
cmp
jg
dec
sbb
out
push
and
push
sbb
retf
sub
xor
(bad)
mov
jns
push
sbb
mov
dec
and
out
mov
outs
bound
daa
push
mov
icebp
pop
sbb
cmps
mov
jle
inc
test
les
pop
(bad)
imul
and
push
fwait
les
shl
push
(bad)
ins
jne
and
or
mov
xor
leave
jmp
imul
jb
sub
sub
call
(bad)
test
shl
jmp
and
push
(bad)
and
icebp
scas
mov
scas
daa
loop
jle
cdq
loopne
mov
push
adc
and
(bad)
loope
test
movs
or
push
and
or
dec
push
les
test
dec
lock
inc
out
ror
aam
imul
cld
or
fs
mov
cld
jbe
xor
popf
clc
xchg
icebp
cld
das
or
xchg
and
push
call
lock
scas
jecxz
movs
in
daa
jae
jmp
jge
retf
adc
jmp
mov
cs
mov
or
test
jecxz
mov
inc
push
and
xchg
leave
test
and
jp
xchg
aas
data16
mov
add
loop
mov
aas
lahf
push
ret
ins
inc
int
rol
push
xchg
icebp
adc
jbe
push
sbb
mov
lods
xchg
pop
mov
cli
cmp
xor
cmp
ret
pop
xchg
inc
inc
mov
test
call
pop
pop
adc
in
pop
xor
sub
ret
adc
mov
lods
clc
loopne
test
dec
adc
jb
cli
repz
xor
pushf
push
or
push
or
sbb
fcomp
dec
dec
push
sub
pop
mov
inc
cmc
nop
arpl
fwait
aaa
inc
call
arpl
sub
test
into
and
cmp
pop
outs
xor
xor
and
sbb
push
sub
ds
add
(bad)
cli
xchg
test
shr
inc
xchg
clc
pop
inc
jb
std
jecxz
dec
fisub
sahf
push
jns
jo
jbe
dec
sbb
xchg
add
push
jb
dec
add
pop
xchg
adc
sti
mov
leave
mov
in
movs
cmp
jg
retf
add
fcom
sbb
(bad)
outs
xchg
inc
and
xchg
pop
adc
mov
fdivr
adc
sbb
mov
xchg
push
lds
test
stos
aam
int3
clc
xor
jecxz
test
xchg
lahf
sbb
cmp
sbb
loopne
test
ror
not
push
sub
cmp
psrlw
jmp
fdiv
pop
in
repnz
xor
dec
inc
daa
mov
in
aam
add
shl
jno
push
popa
in
movs
sti
popa
push
int3
pop
inc
push
push
inc
and
aam
jno
pop
imul
xor
rcr
aad
popf
inc
fist
test
mov
or
aad
xchg
push
mov
sub
loope
and
test
cmp
das
pop
aas
dec
add
pop
pusha
xchg
(bad)
add
xor
jo
popf
mov
dec
sbb
loopne
ret
icebp
mov
enter
xor
mov
icebp
and
icebp
jecxz
sub
sbb
repz
imul
mov
pop
in
jge
movs
scas
xchg
jbe
mov
call
inc
and
in
or
xlat
push
xor
push
jnp
lahf
cmps
scas
jns
add
nop
mov
lea
mov
jmp
cmp
inc
iret
add
jp
and
adc
stos
inc
ins
adc
inc
jge
or
retf
scas
xchg
out
sbb
inc
(bad)
xchg
sbb
loop
(bad)
jmp
pop
sub
ret
xchg
xchg
or
cmp
movs
loope
cwde
push
and
and
push
cmp
push
int
and
dec
xchg
test
xchg
icebp
inc
or
repz
xor
sub
add
out
xchg
pop
ret
imul
ror
sbb
mov
or
retf
jmp
push
xor
mov
xchg
sub
or
(bad)
div
pop
sub
pop
or
jne
sar
jne
out
stc
adc
lahf
xor
(bad)
and
xchg
nop
jae
sahf
daa
ficomp
inc
add
push
dec
mov
add
out
fiadd
dec
mov
rcr
aaa
movs
repz
xchg
sub
push
cli
push
add
fldl2e
push
pop
adc
call
loope
push
push
je
je
and
inc
inc
mov
mov
hlt
and
sete
aaa
(bad)
sbb
xchg
(bad)
out
test
dec
ds
dec
and
xlat
xchg
int3
aam
push
mov
leave
in
retf
imul
mov
mov
lock
fild
ror
jns
icebp
pop
data16
push
ins
imul
fnstenv
sub
cmp
xor
shl
xor
jb
inc
fistp
dec
cwde
inc
fwait
xlat
enter
pop
aad
sbb
pop
jmp
popa
loop
sahf
cmp
bsf
int3
push
mov
dec
retf
div
out
pushw
and
push
mov
jecxz
and
xor
call
pop
fwait
jnp
jmp
out
dec
outs
ds
mov
dec
mov
push
mov
jne
cmp
out
jle
adc
stos
push
leave
xchg
adc
(bad)
push
loope
jle
xchg
lahf
push
mov
inc
dec
sub
mov
and
out
sub
sbb
dec
fldcw
iret
or
popa
das
dec
pop
leave
(bad)
dec
test
or
dec
or
dec
idiv
jo
cmps
push
imul
add
mov
leave
test
mov
push
cmp
jecxz
adc
call
jne
imul
loop
(bad)
adc
or
repz
pop
jns
and
aaa
rol
push
sub
pushf
pop
ficom
call
fistp
test
jnp
scas
lds
imul
imul
jecxz
and
xchg
dec
sub
and
adc
pop
dec
fild
push
shl
sti
test
sub
cmp
(bad)
rdpmc
in
stos
arpl
adc
ror
mov
cmp
test
stos
mov
jbe
inc
sbb
imul
aad
xchg
ds
pop
pop
push
call
mov
jecxz
ins
cli
into
or
outs
sbb
or
add
jns
scas
test
pop
xor
add
lods
in
movzx
mov
mov
leave
iret
push
mov
loopne
pop
mov
xchg
and
imul
jno
rcr
cwde
ror
mov
xchg
mov
shr
mov
in
mov
or
lock
inc
jb
or
jns
pop
sti
mov
jo
pop
(bad)
xor
pop
cmp
into
stc
dec
fcmovu
push
push
pop
cvttps2pi
cli
daa
adc
mov
leave
or
fld
mov
and
es
mov
aaa
adc
inc
sub
jmp
pop
ret
in
jge
xor
mov
es
in
pop
mov
xchg
inc
gs
gs
fwait
repz
push
mov
stos
mov
lea
lahf
iret
sbb
in
pop
dec
push
ds
cmp
dec
cmp
pop
aad
xor
cmp
pop
sbb
add
add
aad
ins
xor
pop
pop
sub
fistp
sub
sub
mov
add
sbb
inc
arpl
mov
or
jecxz
pop
repz
and
push
sbb
pop
push
mov
sbb
adc
push
sbb
xor
mov
les
pop
pop
push
test
lds
xor
xchg
adc
add
jl
dec
cmp
test
pop
fimul
mov
imul
fidivr
test
jge
cld
sub
inc
scas
pusha
sbb
outs
pusha
jns
mov
inc
in
js
icebp
jg
pop
pop
add
cmps
cmp
jae
sub
shl
leave
add
loop
call
sbb
sub
icebp
es
dec
sbb
mov
xchg
lods
jecxz
dec
popf
push
cmps
es
xor
xor
sbb
fs
es
fisubr
ret
pop
dec
xchg
fwait
icebp
dec
les
pop
call
add
call
js
push
(bad)
xor
stc
sbb
sbb
add
inc
cmp
fucomp
mov
and
and
clc
fnstenv
repnz
std
jge
dec
call
dec
fs
lock
test
out
jb
mov
popa
pop
pop
push
lahf
addr16
jae
bound
scas
pushf
sar
inc
fistp
pop
cmp
pusha
inc
sub
push
push
push
shr
or
mov
push
imul
add
cmp
cs
fdivr
jne
sub
xlat
adc
cld
adc
jge
and
fcmovnb
inc
shl
stos
inc
and
ret
inc
stos
ja
dec
push
xchg
das
(bad)
pop
jmp
jno
sub
or
or
popa
imul
inc
push
adc
pop
mov
ss
mov
cli
cmc
mov
or
mov
sbb
pop
retf
mov
sahf
push
(bad)
and
dec
pop
fiadd
pop
sbb
pop
xor
and
jecxz
xor
dec
dec
adc
sahf
arpl
int
pusha
daa
xor
aaa
sbb
adc
push
xor
sbb
out
mov
(bad)
sbb
push
add
fwait
sub
xchg
lahf
dec
lods
cs
(bad)
aaa
inc
repnz
cmp
xlat
pop
and
pop
mov
(bad)
std
aam
jmp
xor
sbb
cmp
sub
xor
aas
sub
add
fidiv
push
push
inc
mov
(bad)
push
pop
(bad)
mov
mov
leave
mov
pop
shl
fmul
push
push
dec
and
icebp
idiv
loope
repz
pop
fisub
aam
xor
bnd
push
push
fsubr
mov
mov
push
in
pop
cmc
fld
and
and
lods
mov
push
mov
mov
sub
cs
cwde
sub
adc
cmp
cld
xchg
push
dec
sbb
sar
imul
(bad)
pop
xlat
mov
ja
and
or
stos
les
adc
push
imul
inc
pop
mov
movs
xchg
enter
repnz
call
mov
neg
dec
jg
rcr
cmp
jl
mov
sub
mov
push
mov
outs
mov
retf
std
jnp
jb
mov
mov
mov
push
lods
cmp
add
pusha
shr
xor
jbe
and
and
inc
dec
movs
push
in
frstor
retf
sbb
fisubr
lds
push
push
or
add
xchg
or
nop
(bad)
int3
adc
das
repnz
or
test
xor
mov
pop
jl
pop
cmp
pusha
and
dec
sbb
cs
fild
shl
arpl
dec
lods
adc
repnz
mov
ffree
retf
mov
aad
loop
pop
pushf
jno
xchg
outs
cdq
xchg
retf
jecxz
(bad)
ja
inc
ins
sbb
mov
(bad)
xchg
mov
sbb
fcomi
in
adc
xchg
imul
sub
push
sbb
push
fisub
rcl
aad
jno
xchg
mov
add
sti
ret
mov
call
je
xchg
xor
or
inc
ins
xchg
dec
xor
retf
fisubr
sub
xor
rcr
arpl
call
fwait
loop
lods
bound
pop
push
imul
pop
jp
cmp
cld
cmp
loope
push
cmp
sbb
test
pop
out
mov
or
push
mov
cmp
adc
dec
xor
iret
fadd
sub
push
adc
aas
es
and
xlat
add
sub
movs
pop
cmp
es
pop
lock
pop
mov
adc
iret
sub
call
cs
int
sti
xchg
mov
dec
pushf
cmps
mov
movs
pop
or
jne
xor
popa
pop
xchg
fdivr
cs
lea
das
jge
dec
rcr
cs
xchg
mov
vandpd
(bad)
dec
jp
cmp
out
aad
out
inc
scas
ins
(bad)
xor
xchg
push
sbb
aam
xor
int
cmp
out
cli
sub
lea
adc
mov
inc
push
sub
ret
pop
(bad)
into
dec
popa
and
and
pop
repz
sub
xor
xor
push
pop
sub
push
cmp
arpl
sbb
xor
add
sub
in
xchg
mov
outs
sub
ror
jmp
cmp
ins
test
xor
sti
or
and
pop
or
mov
sub
and
cmc
aam
shl
adc
enter
push
test
les
popf
push
and
sbb
aam
xor
mov
sahf
adc
inc
into
shr
or
inc
and
test
repz
scas
mov
xchg
pop
enter
pop
imul
in
mov
jecxz
cdq
imul
cmps
cmps
inc
sub
mov
rol
adc
xchg
mov
xchg
dec
mov
imul
inc
call
jb
(bad)
js
mov
xor
in
dec
inc
leave
sub
mov
pop
stos
out
xor
or
mov
lock
mov
hlt
xchg
xor
repnz
loopne
inc
jb
and
es
lods
pop
pop
jmp
mov
loope
out
test
xchg
imul
or
push
sbb
push
stos
mov
add
scas
pusha
dec
xchg
addr16
fwait
cwde
jl
inc
imul
mov
or
cwde
cmp
je
xchg
xchg
sbb
push
int
outs
jnp
pop
and
(bad)
jbe
dec
fiadd
mov
xor
push
imul
jle
xor
out
ror
cmp
inc
mov
inc
cmp
dec
repz
inc
ds
jmp
add
pop
int
std
js
dec
outs
push
fwait
jae
mov
mov
shl
aad
fisttp
jl
fld
daa
hlt
cmps
mov
cmps
xchg
jne
pusha
ret
jnp
pusha
les
dec
stos
add
push
sub
jno
jmp
inc
(bad)
mov
or
imul
aaa
jl
push
push
pop
loope
daa
pop
xor
mov
(bad)
mov
lods
pop
inc
sbb
jg
adc
pop
sub
(bad)
aad
sbb
add
std
cmc
sub
adc
jecxz
mov
pusha
pop
mov
aad
inc
mov
stos
outs
pop
dec
bound
sub
dec
out
push
ins
fst
stc
cmp
jge
jl
es
jae
call
mov
test
jbe
enter
push
fdivr
dec
stos
xchg
dec
jge
mov
inc
jo
pusha
jo
xor
mov
les
movs
and
das
xor
lock
push
jbe
adc
xor
aas
and
mov
out
cdq
mov
loop
push
ror
push
adc
jne
or
xchg
pop
bound
outs
bnd
jae
shr
rcr
outs
out
int
push
inc
push
xchg
imul
mov
dec
or
test
dec
out
xchg
pusha
mov
inc
xor
clc
jp
xor
cli
fld
mov
(bad)
fidiv
cld
cmp
push
and
sbb
adc
fmul
mov
fnsave
push
outs
je
popa
out
out
push
push
retf
les
pop
imul
jecxz
call
push
sbb
mov
and
xchg
test
push
aaa
mov
fisttp
fwait
cs
sahf
xor
inc
cmp
mov
cmp
and
ror
jno
fldenv
(bad)
mov
les
pop
mov
jno
cmc
adc
les
mov
lods
dec
mov
add
mov
loop
fmul
in
sub
jecxz
mov
sahf
cwde
jmp
sti
xlat
outs
dec
gs
(bad)
fmulp
fs
test
loope
loope
repz
dec
mov
out
and
iret
fwait
xlat
js
pop
aam
mov
rcl
adc
jp
repz
into
in
cmp
xchg
push
aas
(bad)
retf
add
mov
jno
sahf
(bad)
sub
dec
mov
loop
pop
inc
xlat
inc
mov
push
lods
mov
out
shld
pushf
push
fs
fild
push
push
mov
push
jns
mov
movs
cld
mov
loop
rol
jns
test
jb
xchg
or
scas
sub
mov
es
(bad)
pop
lods
xchg
xchg
adc
rol
(bad)
jb
mov
fisubr
movs
int3
aad
aam
xor
imul
rcr
int
jge
(bad)
jnp
mov
aad
test
jbe
cwde
cmp
sbb
fstp
or
dec
idiv
in
(bad)
ss
and
int
loope
adc
iret
fcomp
enter
sbb
test
sbb
int3
mov
dec
repz
inc
arpl
mov
(bad)
and
xchg
jno
push
fwait
mov
(bad)
xchg
repnz
pusha
and
in
fcmovnb
je
pop
mov
sar
ins
sub
jb
test
adc
cld
cmp
cmp
nop
fsubr
in
push
or
pop
push
stos
sub
inc
popf
mov
fbld
or
sbb
(bad)
push
scas
jne
xor
cmp
mov
push
pop
test
int
add
mov
out
push
test
dec
retf
popf
sub
xlat
popf
xchg
inc
(bad)
ficom
mov
call
push
mov
(bad)
call
pop
mov
xchg
dec
mov
adc
push
adc
scas
arpl
and
adc
into
pop
mov
aaa
pop
push
push
fistp
test
jmp
lods
lahf
pop
sub
arpl
pop
sub
fisubr
sub
or
mov
jns
pop
inc
fistp
push
test
int3
movs
lods
pop
ret
mov
cdq
jl
push
ret
adc
mov
xchg
push
scas
sbb
or
enter
push
xlat
leave
pop
cli
push
aam
das
cmp
fs
push
mov
push
and
cmp
stc
mov
jl
dec
mov
hlt
mov
in
mov
into
xor
sbb
push
push
nop
pop
sub
xchg
sub
adc
pushf
mov
xor
cmp
xchg
mov
rol
jns
xor
sbb
es
push
int
rcr
sbb
or
dec
neg
das
movs
sub
(bad)
push
and
mov
(bad)
aad
pop
pop
loope
mov
pop
fldcw
xlat
jl
js
lods
aaa
or
jb
pushf
aaa
xor
pop
pop
mov
pop
test
fisttp
arpl
xchg
sahf
enter
ja
loop
cmp
xor
dec
imul
repz
xlat
add
enter
inc
stos
mov
mov
shr
xor
cmp
hlt
sub
call
loop
std
cs
mov
xchg
dec
(bad)
and
xchg
pop
push
and
rol
xlat
mov
scas
jnp
pop
lahf
test
jle
or
xchg
inc
repnz
pop
pop
mov
test
je
push
lods
mov
pop
adc
cmps
scas
sub
cmp
aam
mov
sub
mov
add
popa
daa
jno
scas
sbb
movs
push
jo
(bad)
stc
not
cdq
jnp
adc
mov
jg
add
cs
shl
jmp
or
cmp
lea
mov
imul
xor
pop
nop
mov
add
push
inc
stos
call
sbb
retf
inc
jp
je
aam
xchg
push
xchg
inc
mov
pop
sub
push
int3
out
(bad)
mov
fadd
outs
add
movs
repnz
inc
cmp
aas
pop
jle
xchg
pop
enter
cmp
mov
fwait
std
repnz
pop
push
loopne
jge
jo
cmc
lahf
jmp
sbb
test
aad
push
jecxz
jecxz
call
arpl
inc
sbb
jmp
int
idiv
ret
mov
mov
cmp
ret
mov
retf
push
xor
push
lea
jae
push
mov
scas
xchg
ror
adc
xchg
jns
mov
test
sub
fdivr
scas
and
mov
cmps
mov
aas
pop
sar
xor
aam
cmps
cmc
or
loopne
sub
enter
jmp
cli
cmc
add
stos
mov
add
(bad)
test
dec
(bad)
int3
imul
adc
mov
mov
jns
pop
(bad)
scas
scas
inc
mov
xchg
(bad)
sbb
out
and
pop
pop
sti
into
push
sub
pop
sub
mov
in
push
loop
push
or
ror
inc
out
pusha
in
nop
push
add
inc
add
dec
ss
dec
add
cdq
xchg
mov
or
rcr
fwait
push
leave
test
in
aam
mov
mov
pop
sbb
int3
jl
fild
test
repnz
sbb
push
out
setne
(bad)
cdq
push
mov
inc
sahf
mov
cs
inc
pop
rcl
or
popf
inc
ss
and
cmp
sbb
mov
mov
dec
(bad)
and
push
jne
outs
cwde
ror
ins
xor
aam
mov
in
call
or
fisttp
xchg
or
xor
sub
ror
pop
cmp
jge
or
cdq
lea
fs
jb
jp
aad
mov
pushf
and
pop
cmp
loope
add
pop
jmp
dec
pop
loop
xor
imul
push
bnd
fld
sub
mov
outs
aaa
das
je
xor
sub
mov
stos
pop
push
test
fwait
push
jnp
in
sti
adc
outs
out
xor
leave
nop
(bad)
jge
xchg
pop
push
dec
outs
js
fucomp
jecxz
cli
mov
ret
outs
mov
imul
xor
jle
aas
pop
je
mov
adc
ret
cwde
mov
retf
je
shl
mov
xchg
or
loop
rcl
stos
and
cld
mov
jae
stos
repnz
jbe
sub
mov
mov
addr16
cld
pop
inc
aas
push
push
data16
push
pop
frstor
bound
(bad)
sub
gs
xchg
or
ins
stos
jle
int
and
pop
mov
sub
ret
pushf
inc
or
in
dec
inc
push
fwait
daa
xor
mov
and
popf
repnz
enter
adc
(bad)
ins
and
aas
pop
xchg
popf
mov
cmps
test
jb
adc
dec
jb
dec
xor
and
sub
lahf
jb
in
(bad)
call
test
dec
mov
in
call
(bad)
xchg
or
sub
int
(bad)
adc
dec
iret
xor
xchg
fstp
jbe
xlat
mov
pop
inc
adc
mov
mov
outs
adc
jmp
push
test
mov
adc
loop
in
int
repz
sub
jmp
dec
sub
fidivr
repnz
sbb
sub
cmp
jg
mov
and
push
adc
mov
or
loop
movs
rcl
fadd
mov
ret
imul
or
sub
jmp
push
ins
sahf
pop
cmp
mov
aam
mov
adc
sub
mov
adc
pop
neg
sbb
cli
inc
and
xor
xor
enter
xchg
or
push
xchg
push
inc
push
test
arpl
shl
or
xor
lea
pop
in
iret
ret
ss
je
xor
adc
and
adc
in
or
pop
add
mov
(bad)
push
dec
fldz
pop
inc
jne
bound
jl
push
cld
mov
lock
add
call
adc
add
rcr
fld
call
fwait
sub
(bad)
or
daa
test
mov
adc
test
pop
sub
sbb
push
pushaw
ror
mov
das
inc
cwde
pop
je
fucom
lock
rol
pop
jo
sub
sub
xchg
xchg
pusha
int
call
icebp
pop
push
imul
inc
sub
push
dec
imul
dec
shl
mov
mov
into
(bad)
pop
in
inc
sbb
out
sbb
pop
loop
(bad)
xor
dec
pop
shl
jg
or
rcl
push
and
call
push
cmps
pop
stc
sub
(bad)
arpl
xlat
cmps
bound
push
pusha
int
jg
sub
mov
xor
xchg
pop
push
(bad)
sbb
mov
cli
inc
inc
pop
and
shr
or
pop
cmove
cmp
fsubr
mov
xlat
cs
mov
push
and
add
out
dec
psraw
shl
fidiv
shl
mov
pop
xor
(bad)
icebp
inc
mov
out
adc
imul
lahf
ss
xchg
in
(bad)
inc
fnstenv
pop
push
pop
adc
ror
mov
(bad)
out
push
jb
or
xchg
mov
pop
cld
aam
out
fs
or
inc
sub
(bad)
in
stos
cmp
sub
je
ja
rcl
jl
pop
push
shl
push
cmp
pop
dec
repnz
jmp
xchg
aad
clts
rcr
dec
ja
dec
inc
pop
xor
xor
sar
clc
fild
pop
xchg
fcmovu
out
push
xchg
jo
jmp
movs
pop
arpl
adc
and
sbb
shl
loopne
mov
xchg
pop
push
dec
leave
dec
inc
add
sub
mov
jbe
inc
pop
mov
mov
push
inc
push
inc
rcl
repz
cld
mov
scas
or
sbb
or
inc
into
mov
call
int3
cmp
sbb
sbb
cmc
outs
jnp
daa
mov
inc
add
mov
or
lea
cmp
scas
imul
lahf
out
jmp
retf
popa
iret
xchg
add
pop
ret
adc
push
sub
sbb
ds
(bad)
adc
dec
(bad)
cmp
inc
je
push
aas
repnz
inc
pop
add
mov
mov
in
je
dec
sub
(bad)
push
xchg
rcr
rcr
push
and
mov
vsubss
inc
imul
sub
mov
aaa
inc
mov
cmp
xor
imul
(bad)
jecxz
jb
mov
addr16
imul
out
xchg
inc
daa
add
dec
aam
and
pslld
or
jp
xchg
push
daa
in
push
cmp
push
lahf
or
lss
or
int
jno
addr16
mov
fwait
dec
xchg
cs
xor
ja
sbb
jb
mov
mov
push
movs
loopne
and
mov
jo
sub
retf
push
and
xchg
sbb
jne
fcomp
dec
cli
test
stos
adc
aam
cmp
cmp
loop
jbe
fistp
mov
xor
sub
jbe
adc
in
mov
enter
or
ror
add
mov
push
xchg
fild
bnd
xlat
jb
xor
call
mov
xor
jb
out
call
sub
js
inc
cld
rcr
(bad)
or
sti
jmp
test
pop
dec
sbb
dec
stos
lea
cs
out
xchg
(bad)
adc
jle
cmps
sahf
xchg
cmp
les
movs
fnstcw
jo
out
iret
ficom
cs
daa
sahf
scas
mov
sbb
ret
dec
ret
shufps
xor
fidiv
jp
xchg
inc
leave
pop
xchg
inc
adc
popa
rcl
pop
xchg
sahf
and
sti
and
and
add
push
cmp
rcl
in
mov
sub
(bad)
mov
push
add
mov
mov
xchg
dec
nop
sbb
sbb
adc
push
pushf
pop
dec
shl
sbb
adc
xchg
(bad)
sbb
nop
sti
aaa
or
iret
out
pop
(bad)
leave
ja
cmp
mov
pusha
retf
xchg
fdivr
pop
clc
cli
jno
lock
xchg
das
pop
push
mov
jl
bound
push
vmovntpd
test
push
pop
jmp
lock
leave
cld
daa
pop
scas
jp
int
test
sbb
mov
pop
and
(bad)
nop
jecxz
cmps
cmp
cld
fwait
push
xchg
lods
out
test
(bad)
jbe
lock
jmp
mov
imul
dec
lahf
xchg
jb
fimul
dec
frstor
add
push
popf
pop
mov
push
and
xchg
and
sub
push
and
xchg
cmp
je
(bad)
push
repz
in
sbb
hlt
or
lods
(bad)
(bad)
pop
cmp
mov
emms
(bad)
out
jae
mov
pop
and
push
fwait
or
pop
fs
stos
pop
std
fcmovu
arpl
fdiv
dec
xchg
push
xor
out
pop
jmp
rol
lds
repz
cmp
call
inc
push
sbb
repnz
aaa
or
adc
stc
cwde
shr
jo
pusha
out
push
ds
in
mov
sar
jno
aam
test
fidiv
inc
jle
cmp
dec
jge
loop
(bad)
xor
adc
sbb
fyl2xp1
xchg
xor
push
or
mov
sub
scas
test
iret
aad
test
sub
movs
sbb
sbb
xchg
mov
(bad)
stos
retfw
pop
inc
ror
pop
and
ja
movs
xor
jo
es
sub
push
sub
jl
(bad)
jmp
sbb
aam
dec
(bad)
int3
and
test
loopne
movs
jg
lea
jne
es
imul
repz
fs
inc
jl
mov
in
stos
imul
imul
xchg
push
test
sbb
xor
scas
jns
mov
jo
fs
push
(bad)
aad
imul
rol
add
mov
mov
jns
fisttp
loope
in
mov
out
fwait
sub
fsubrp
jne
mov
jmp
retf
mov
add
test
jg
fdiv
(bad)
pop
sub
dec
sub
pop
lods
sub
xor
or
xchg
pop
pop
and
sub
sbb
dec
scas
int
or
scas
or
movd
mov
add
aad
fdiv
loope
jns
xor
adc
enter
pop
push
test
mov
jb
mov
repnz
sti
mul
(bad)
push
cli
push
push
loopne
test
pop
repnz
ret
push
push
cli
adc
icebp
pop
sar
sbb
imul
popa
adc
neg
mov
sub
js
adc
cwde
mov
jo
xchg
movs
xor
call
push
jnp
mov
jb
sti
iret
test
scas
jno
xchg
lods
imul
pop
mov
or
mov
lea
sar
int
sar
or
jp
or
xchg
retf
xchg
xor
dec
mov
adc
adc
pop
xor
or
cli
aaa
xor
add
outs
bound
sub
dec
(bad)
xor
adc
movs
out
xor
stos
pop
push
xor
test
pushf
dec
jmp
jle
fsubr
xchg
aad
pop
out
dec
sbb
(bad)
(bad)
rol
pop
jmp
or
sub
ret
cmp
jns
xor
xor
test
cmp
inc
xor
lods
sbb
pusha
iret
(bad)
sub
mov
retf
and
sub
xor
jmp
xor
adc
fnstsw
std
aam
sub
daa
adc
dec
aaa
jne
sbb
cmp
aas
arpl
std
outs
stc
retf
cmp
retf
lea
xchg
lahf
es
outs
jmp
dec
jb
call
cmp
leave
int3
mov
lods
retf
out
lea
cmp
push
add
push
sub
or
cmps
fwait
es
and
pop
dec
shl
stos
dec
mov
stos
div
or
cmp
jns
fwait
sub
inc
add
test
inc
test
adc
aam
inc
out
outs
adc
jno
popa
int
or
and
lock
scas
fld
jg
pop
test
mov
or
xor
repnz
(bad)
push
sbb
and
frstpm(287
push
rol
adc
iret
ins
daa
pop
loopne
mov
popf
xor
mov
inc
push
mov
sub
mov
xor
pop
imul
cmp
popf
sar
out
jle
jmp
pop
inc
popa
call
xchg
es
cs
(bad)
cld
popf
shr
push
pop
dec
out
pop
xor
dec
stc
mov
lea
stos
daa
xchg
mov
out
dec
xchg
cdq
dec
retf
push
inc
int
jmp
repnz
xor
and
pop
out
dec
es
div
xchg
js
mov
int3
movs
(bad)
(bad)
xchg
mov
imul
add
cld
jp
fcomp
sub
push
out
jmp
cmp
jmp
xlat
in
mov
push
mov
mov
sub
xor
add
add
pusha
dec
pusha
(bad)
sbb
jne
mov
jle
cmc
sbb
jp
sbb
sbb
cmp
nop
pop
gs
push
popa
aad
dec
jb
push
outs
nop
dec
sbb
inc
cmp
sbb
push
sbb
add
ficomp
mov
lahf
sti
or
lahf
rcr
out
mov
mov
test
pop
add
push
rol
mov
cmp
pop
retf
sbb
inc
jmp
mov
out
leave
mov
sub
and
pusha
jne
adc
push
sbb
sub
ja
adc
(bad)
push
pushf
test
stos
inc
adc
pop
movs
loopne
imul
mov
push
popw
inc
in
fcomp
jmp
sbb
inc
cmp
xchg
int
repnz
lea
jecxz
and
mov
pop
popa
outs
nop
and
ret
sub
daa
lea
enter
sub
sbb
rcr
mov
leave
bound
xor
test
loop
mov
dec
fldcw
repz
sar
aas
popa
int3
xchg
push
inc
dec
loop
and
and
out
pop
cmp
mov
jecxz
hlt
setge
adc
inc
lods
mov
aaa
add
and
sub
popf
adc
dec
dec
pop
pop
push
aaa
and
jg
neg
pushf
adc
jmp
xor
sub
dec
mov
adc
adc
xchg
xor
inc
cmp
repz
jmp
repnz
jno
inc
xor
inc
pusha
xor
div
hlt
inc
fild
or
mov
mov
leave
rcr
mov
cmps
mov
push
pop
xchg
sub
sbb
jle
sbb
mov
test
mov
lds
pop
xchg
fmulp
sahf
push
xor
jmp
lea
dec
ss
add
jmp
int
arpl
push
aad
jecxz
mul
push
pop
jb
pop
mov
jecxz
test
scas
push
mov
mov
push
xchg
mov
jne
jp
pop
je
push
cli
ins
xchg
mov
cmp
push
into
jg
stos
or
popf
(bad)
adc
lock
lea
sbb
data16
dec
jecxz
mov
loopne
and
(bad)
mov
sub
xor
ins
out
push
add
test
inc
popa
pop
dec
mov
sbb
ret
mov
or
clc
je
cdq
pop
jge
int
or
sub
inc
and
pop
adc
adc
scas
dec
leave
retf
call
mov
and
pop
add
cmp
imul
add
push
test
inc
add
push
jae
add
fcom
aam
dec
pop
int3
shr
fs
test
xor
jns
and
(bad)
out
aaa
inc
adc
outs
add
xchg
jmp
push
or
and
cmp
push
sbb
jno
sub
xlat
pop
outs
lea
cmps
arpl
cmps
cld
lahf
jg
push
(bad)
and
mov
mov
sbb
aam
mov
dec
test
mov
dec
mov
icebp
rcr
pop
push
cmp
iret
or
mov
fistp
xchg
adc
sbb
mov
lahf
call
outs
pop
mov
dec
(bad)
idiv
pop
gs
xor
pop
mov
jns
mov
push
xchg
pop
xor
and
xchg
xor
xchg
cmc
fs
leave
ror
int3
dec
push
pmulhuw
ins
(bad)
repnz
mov
enter
mov
rcl
int
pusha
mov
pushf
or
jmp
jg
jl
mov
inc
pushf
inc
dec
sub
lea
test
push
xor
sbb
cli
or
xor
sahf
mov
push
nop
add
add
ja
add
aad
outs
mov
loopne
mov
adc
jl
jecxz
fs
ins
pushf
pop
xor
jmp
inc
push
shl
ror
mov
mov
rcl
cmp
lock
int3
mov
jbe
or
xchg
sub
aad
pop
mul
jecxz
(bad)
in
js
leave
sub
jns
loop
int
pop
jle
inc
pop
or
jne
shr
dec
cmp
fild
fnstcw
mov
sbb
arpl
adc
inc
and
sar
and
or
test
dec
push
jg
add
not
mov
push
sbb
stc
loop
loopne
scas
cmp
lea
push
pop
xchg
push
adc
stos
cld
or
dec
mov
xchg
inc
iret
dec
mov
sti
lods
in
mov
push
jae
xchg
sbb
jecxz
jmp
stos
lea
xchg
adc
jmp
pushf
sub
test
inc
dec
movs
push
sub
push
pop
sbb
jecxz
(bad)
and
jl
pop
aam
pop
jge
or
shl
lea
fisub
or
lods
or
dec
mov
push
fld
in
(bad)
in
xlat
hlt
(bad)
into
pop
call
xchg
je
pextrw
cmp
sub
sbb
xor
adc
jle
sbb
xor
mov
pop
adc
adc
popa
cld
int
jb
test
xchg
push
bound
xchg
hlt
push
cwde
aam
or
je
lock
pop
cmp
sbb
fs
les
scas
and
add
push
sub
push
iret
int
outs
popa
aad
or
push
sbb
pop
or
dec
mov
retf
dec
mov
jle
inc
xchg
sub
sar
mov
sbb
call
dec
mov
fbstp
(bad)
sbb
mov
fiadd
loop
pop
push
lea
sbb
imul
mov
mov
xchg
loopne
aaa
mov
shl
mov
ret
pop
push
mov
loope
adc
outs
gs
stos
sub
fcmove
in
(bad)
aaa
adc
lock
cli
push
mov
loopne
jle
out
push
aam
call
push
xor
shl
shl
dec
test
dec
imul
add
(bad)
ss
test
dec
or
or
cmp
jnp
inc
pop
dec
loop
inc
(bad)
out
mov
fwait
cmps
cld
ret
or
cmp
inc
mov
mov
sub
pop
outs
gs
adc
pop
and
mov
xor
mov
xor
int
jne
sbb
push
mov
add
mov
or
mov
popf
mov
(bad)
int3
xchg
mov
pop
lods
ror
xor
mov
or
sbb
sbb
(bad)
data16
xchg
std
xor
cmp
push
das
out
mov
push
and
or
sbb
test
ins
sub
sbb
jmp
jge
arpl
xor
or
sub
pop
arpl
push
xchg
jno
lods
sub
add
call
popa
inc
pop
sub
enter
cmpxchg
adc
mov
not
pusha
aam
mov
add
cmp
sub
or
xor
add
stc
xor
xchg
or
or
(bad)
std
ret
adc
push
out
pop
or
mov
push
ret
pop
push
fwait
pop
fs
into
loopne
fwait
cmp
sbb
inc
outs
iret
loope
inc
int
sahf
and
push
jmp
mov
lods
out
pop
mov
inc
dec
xor
or
mov
fld
sub
dec
cmp
popa
cwde
mov
ja
icebp
cdq
test
sub
xchg
icebp
pop
into
jmp
inc
outs
sub
into
rcl
call
inc
mov
xchg
and
sbb
sub
xchg
inc
pop
lods
inc
inc
pop
mov
stc
pushf
stc
inc
sbb
pop
or
sar
sub
push
stos
mov
int
jp
dec
and
jbe
rcr
sti
les
cdq
das
cmc
loope
adc
into
cmp
jnp
ins
add
ret
aaa
(bad)
push
inc
ret
idiv
sub
and
cmps
xor
rcl
add
dec
jnp
clc
adc
stos
pop
inc
mov
push
stos
jmp
(bad)
inc
lods
das
loopne
mov
outs
fwait
mov
jbe
(bad)
data16
das
nop
fcom
les
push
cmp
cdq
sbb
std
mov
int
icebp
lds
pusha
sub
inc
mov
cmps
sbb
inc
in
loopne
push
sbb
and
data16
daa
nop
xor
fnsave
iret
popf
cdq
or
pop
push
jno
sbb
cmp
push
cmp
add
mov
jl
popa
iret
cld
lea
push
or
push
mov
jl
xchg
jecxz
jmp
pushf
retf
mov
(bad)
jmp
shr
jecxz
enter
adc
sub
std
rcr
push
pop
jmp
stc
stos
icebp
and
mov
daa
ds
sbb
imul
add
add
lahf
inc
jo
pop
jmp
out
stos
pop
(bad)
add
ficom
push
sti
add
xchg
aad
lods
not
shl
jbe
cwde
loope
retf
dec
jmp
in
ret
add
shl
pop
in
lods
jno
retf
movs
stc
add
push
mov
fdivr
ds
sbb
jno
aad
clc
cmc
dec
xchg
movs
imul
pop
push
lods
loop
add
inc
arpl
sbb
leave
inc
leave
mov
sub
xchg
inc
dec
pop
sbb
fcomi
leave
aas
fcomp
imul
aas
adc
stos
cmp
(bad)
dec
pop
mul
sub
in
mov
or
mov
sbb
xchg
call
cli
lods
mov
cmc
pushf
stos
ja
dec
add
test
out
(bad)
(bad)
mov
jne
mov
push
out
jecxz
imul
fmul
call
pop
mov
ret
mov
pushf
jecxz
fcom
repz
cmp
bound
addr16
adc
cmp
movs
sub
sub
call
(bad)
in
mov
push
mov
mov
sub
pop
outs
neg
es
mov
popa
pop
jnp
mov
dec
(bad)
dec
retf
pop
stc
xchg
test
imul
xor
or
jmp
(bad)
sub
mov
ins
imul
push
cli
stos
mov
pop
iret
scas
adc
cmp
jo
mov
or
jno
sub
icebp
stc
aam
into
shl
in
mov
jg
push
pinsrw
hlt
test
add
(bad)
in
fcmovb
xor
xchg
movs
mov
(bad)
sti
xlat
cmp
imul
mov
ret
es
jecxz
shl
enter
cmp
lock
popa
ja
cwde
and
pop
mov
pop
or
ret
cwde
dec
xchg
cmp
je
inc
into
jmp
xchg
cs
out
fistp
xchg
fld
ret
in
jg
adc
popf
es
dec
je
xlat
mov
daa
and
sbb
mul
rcr
shl
dec
mov
leave
loopne
xchg
retf
pushf
and
xchg
pop
mov
adc
iret
(bad)
push
cmp
jl
cmp
pop
xlat
(bad)
mov
in
push
or
dec
(bad)
outs
xor
sub
pop
pop
pop
es
push
inc
and
and
sbb
popa
ins
mov
sub
mov
or
int
pusha
fs
out
lahf
sub
ins
ret
dec
push
and
fs
jne
pop
mov
pusha
jns
adc
mov
ds
lds
jbe
cmp
scas
xor
sub
daa
pop
dec
in
sub
inc
loop
lock
ss
fild
sbb
mov
xchg
sub
idiv
cmp
mov
nop
pop
sbb
sub
sub
in
mov
push
les
call
xchg
push
shr
dec
(bad)
push
and
clc
cmp
test
dec
icebp
sub
xor
inc
call
add
cmp
add
mov
or
(bad)
div
push
sahf
ss
xor
lea
daa
mov
bnd
push
push
mov
lds
add
cmps
aad
js
inc
add
lods
sbb
inc
dec
movs
ror
sbb
cmp
fisttp
mov
push
mov
fdiv
xor
sets
clc
leave
test
jge
inc
fsubr
daa
imul
xor
(bad)
lea
mov
mov
jp
cmp
pop
push
mov
es
fwait
adc
jecxz
push
imul
daa
das
sub
and
push
dec
sub
(bad)
add
sbb
or
sub
jae
mov
cli
mov
ret
jb
fist
mov
adc
add
pop
loope
loop
call
sub
mov
xchg
xchg
pushf
(bad)
pop
ins
mov
add
sbb
es
pop
mov
pop
fisubr
sub
mov
pop
retf
out
aam
rcl
fs
fisttp
es
adc
pop
mov
out
(bad)
lods
outs
dec
pop
gs
sub
sub
sahf
adc
sub
div
jmp
repz
je
xchg
mov
(bad)
sbb
adc
jp
out
pop
jae
retf
pop
sahf
movs
cdq
stc
ins
into
push
aas
scas
sbb
lahf
jnp
pop
jecxz
aaa
or
scas
neg
ja
fcmovu
dec
jge
mov
mov
(bad)
jmp
sti
jns
repnz
adc
xor
adc
fst
xor
(bad)
adc
jne
mov
iret
cmp
(bad)
(bad)
int
retf
cmp
es
pusha
jae
pop
and
inc
cmp
mov
fidivr
cmp
add
ins
adc
gs
dec
jl
or
inc
cwde
jbe
jbe
xchg
inc
fld
mov
xor
push
(bad)
mov
pop
cmp
in
xchg
loop
je
sbb
dec
int3
in
fsub
xor
jo
ins
mov
jp
ds
inc
pop
xor
mov
cmc
or
or
dec
stos
aam
fbld
pop
xor
add
lea
cmp
adc
cmps
mov
leave
rol
ins
mov
ror
and
or
arpl
inc
push
cdq
mov
adc
push
cmp
pop
push
add
scas
fbld
jp
nop
outs
mov
gs
aas
test
mov
inc
cdq
popa
stos
push
cld
xchg
cmp
cs
adc
inc
dec
mov
out
jecxz
sub
test
pop
fadd
sbb
mov
test
jbe
out
mov
daa
retf
mov
enter
hlt
stos
mov
stc
cmc
pushf
cmp
pop
test
in
mov
jb
or
ret
ss
lea
mov
and
and
jmp
sbb
mov
sub
lds
ficom
fild
ltr
pop
push
xchg
jle
push
or
pop
idiv
mov
int
inc
sub
add
xor
test
in
xchg
into
cs
loope
sbb
mov
xor
inc
neg
(bad)
int
mov
pop
loopne
lock
repnz
leave
cmp
sbb
iret
bound
adc
xor
loopne
cdq
test
and
int3
pop
push
mov
and
or
cvtps2pd
mov
adc
mov
inc
xchg
xor
push
add
mov
add
call
dec
push
add
jbe
inc
jmp
sub
push
test
mov
cdq
push
imul
mov
int3
mov
inc
jge
inc
jmp
stc
loope
cmp
retf
mov
or
add
loope
push
fadd
shr
mov
adc
mov
add
sub
ja
dec
lds
cwde
cmp
mov
cs
out
test
fmul
fldenv
and
add
cs
xor
mov
xchg
(bad)
iret
mov
pusha
std
fadd
jb
jmp
mov
sub
mov
ja
and
push
adc
outs
jnp
xor
test
xor
mov
or
jbe
cmp
mov
sar
daa
push
loop
jb
test
adc
hlt
aam
pop
xchg
and
out
adc
mov
mov
enter
dec
int
jnp
xchg
aas
push
or
pop
aam
(bad)
ins
or
lahf
mov
imul
jp
mov
rol
push
sbb
add
mov
add
inc
ja
push
mov
or
out
push
sbb
mov
aas
xchg
mov
add
cs
sbb
dec
cmps
imul
das
mov
jae
aam
or
sbb
inc
outs
js
and
push
es
(bad)
aas
sub
inc
jmp
popa
iret
pop
xlat
popf
cmp
sub
jb
sub
sbb
inc
icebp
or
pop
jno
jbe
cmp
mov
mov
(bad)
fsubr
adc
cmps
loopne
cs
ds
mov
cmp
jmp
cwde
push
repz
outs
mov
push
movs
mov
mov
add
xor
or
dec
sbb
loop
sbb
or
repz
sub
(bad)
cli
mov
cmp
xor
push
test
push
mov
mov
stos
push
inc
push
add
mov
mov
test
mov
js
int3
enter
add
(bad)
daa
xor
inc
scas
inc
push
test
xor
dec
bound
add
retf
call
xchg
push
(bad)
ins
aad
(bad)
pop
aaa
sbb
cld
push
push
cmp
addr16
xchg
pop
arpl
pop
xor
adc
fbstp
xorps
imul
sar
test
pop
out
jbe
inc
xor
jge
push
clc
jmp
xor
cmc
pop
xor
adc
inc
out
test
pop
imul
dec
xor
mov
xor
ror
add
sahf
mov
hlt
mov
out
xchg
push
out
add
add
cmp
repnz
call
shr
cmps
scas
shr
add
inc
or
or
aad
fisubr
jb
inc
aaa
dec
adc
stos
inc
xor
jb
mov
je
jns
outs
imul
inc
or
call
sbb
arpl
cmp
sub
mov
or
dec
fisubr
cwde
rol
test
sbb
lahf
pop
adc
cdq
or
out
repz
int3
jnp
pop
xchg
lds
jo
dec
cmp
fwait
adc
je
cld
rol
imul
outs
pushf
xchg
stc
or
call
in
cmp
or
sbb
push
inc
adc
or
push
int3
dec
inc
jp
push
mov
cmp
fcomi
pop
hlt
lods
jp
ror
push
adc
jmp
rcl
repnz
sbb
jmp
in
clc
shl
dec
cld
lock
sbb
pop
xor
mov
es
and
test
sbb
test
mov
lods
pop
pop
jns
and
mov
xchg
jns
(bad)
in
fcomp
sub
jo
xor
jae
or
xor
not
iret
sub
pop
mov
shl
xchg
sbb
cmp
arpl
cmp
adc
sahf
lahf
adc
aad
in
pop
xor
mov
jae
sub
imul
add
popa
xor
jmp
sbb
jmp
(bad)
mov
jmp
dec
iret
sub
pop
jmp
retf
push
cmp
fwait
push
xor
lds
inc
les
sub
or
inc
mov
test
or
pop
or
sbb
mov
mov
std
sbb
gs
popa
shr
scas
aas
test
movs
add
icebp
push
mov
arpl
hlt
lods
sbb
into
xchg
fwait
out
push
dec
and
in
inc
xor
mov
xchg
pop
test
inc
pop
or
aam
jb
push
push
sub
xor
push
cmps
and
jb
mov
cmp
jbe
and
push
pop
xor
pop
pop
neg
cmp
xchg
hlt
xor
xor
out
adc
pop
jmp
hlt
lods
(bad)
call
lock
(bad)
cmp
adc
shr
or
call
cmp
mov
dec
pop
jl
mov
sbb
mov
jno
sahf
daa
aam
mov
int
loop
fs
dec
imul
inc
(bad)
cmp
and
test
mov
into
xor
fisttp
data16
cmp
or
adc
mov
mov
mov
adc
sub
or
sti
jle
leave
or
push
push
push
ret
xlat
jmp
shr
hlt
or
pop
xor
in
ss
fmul
sub
xchg
imul
int
loopne
cld
lahf
icebp
inc
jmp
outs
(bad)
cmps
cmp
fistp
mov
mov
mov
mov
or
ja
lea
xchg
or
rcr
cdq
or
es
ror
daa
sub
dec
mov
sbb
mov
add
push
shr
xor
cld
pop
fmul
xor
dec
sahf
fwait
out
rcr
cld
int
(bad)
repnz
movs
retf
jbe
or
jg
dec
sti
xchg
int3
test
sub
xchg
mov
push
in
ins
inc
or
inc
pop
test
pop
mov
xor
add
shl
dec
or
mov
inc
movs
mov
cmp
mov
int
mov
mov
inc
(bad)
sub
adc
sbb
push
jo
inc
das
in
dec
or
(bad)
daa
push
xor
iret
xchg
push
mov
out
imul
inc
xor
mul
pop
dec
adc
enter
iret
jbe
cwde
mov
cs
cmp
leave
and
loopne
or
or
retf
push
mov
data16
nop
mov
out
or
add
push
into
popa
dec
fsubrp
jae
sbb
jns
push
add
sub
je
jno
sub
dec
fild
jmp
mov
call
push
mov
cmps
mov
out
xlat
out
or
ret
call
xchg
cmps
ret
and
sbb
push
xchg
sub
jnp
in
aam
pusha
into
jmp
pop
out
mov
call
stos
iret
das
fwait
mov
nop
dec
xchg
sbb
vmovupd
xlat
sbb
cmp
test
and
adc
xor
mov
ins
xor
xor
pop
cmp
data16
push
test
xor
push
sub
test
pop
aad
into
pusha
dec
mov
add
sbb
sahf
call
xor
push
jle
add
leave
out
in
mov
xchg
sbb
aad
ds
enter
or
lahf
jo
pop
fisttp
add
cmp
or
mov
cmp
in
ja
mov
jnp
andps
les
(bad)
jne
pop
scas
or
inc
dec
dec
fisttp
loop
jnp
cld
pop
repz
int3
test
lods
mov
popf
fbstp
(bad)
cdq
mov
sbb
in
lds
push
pop
inc
in
in
xchg
je
mov
outs
xor
xlat
dec
fild
movs
jns
sbb
xor
xor
sbb
jmp
xor
pop
xor
in
(bad)
dec
dec
enter
lea
fbstp
jne
inc
xchg
adc
in
jp
call
jle
clc
dec
push
pop
out
sub
xchg
ins
ror
inc
jp
push
jmp
mov
hlt
cmc
fwait
pop
dec
push
pop
aam
xor
xor
fisttp
icebp
(bad)
push
push
and
push
sahf
stc
pop
or
push
int
dec
and
mov
repnz
in
fcom
sub
inc
sub
or
sub
pop
mov
mov
add
sbb
cmc
aam
sub
das
push
ins
sbb
pop
(bad)
test
test
imul
ja
popa
mov
xchg
daa
jmp
test
dec
pop
xor
cmc
dec
fist
(bad)
(bad)
sbb
pop
lock
imul
xchg
pop
and
(bad)
(bad)
jmp
pop
cmp
int
cmp
daa
ss
test
xchg
xor
cmp
adc
lods
shr
inc
cld
and
jg
aad
add
and
sub
in
pop
mov
gs
fisubr
lock
add
xchg
leave
arpl
popa
push
push
es
pop
pushf
push
xor
mov
ins
in
out
mov
mov
ins
inc
xchg
fdivr
ins
sub
mov
and
fild
sbb
jno
arpl
movs
push
lock
fadd
pop
lahf
jmp
das
popa
test
icebp
sub
xchg
xor
pop
mov
retf
mov
push
add
mov
sub
sbb
mov
cmc
pop
jl
outs
lods
adc
push
jnp
jg
into
gs
mov
ss
test
les
and
nop
dec
jae
aad
ret
mov
mov
sub
pop
iret
xchg
dec
hlt
std
push
call
mov
aaa
mov
es
lods
icebp
ret
out
mov
push
add
and
adc
xchg
add
test
and
sbb
cld
push
pushf
pop
hlt
push
jno
shr
rcr
pop
push
mov
sub
pop
cmps
in
or
test
ret
sbb
lods
inc
mov
inc
daa
jne
pop
jb
xor
or
adc
daa
pop
dec
fild
xchg
inc
push
jp
int
popf
add
mov
cmp
ret
pop
clc
out
push
fisttp
add
into
jg
(bad)
aam
mov
pushf
ds
cmp
cmp
aas
jnp
jg
xor
cmp
pop
test
ret
sbb
popf
dec
retf
(bad)
fsubr
jns
inc
inc
dec
ss
imul
(bad)
fwait
add
int3
pop
dec
inc
lods
sub
jmp
out
xchg
xor
xchg
xchg
ret
xchg
jcxz
loop
test
ins
mov
xor
dec
jb
scas
xor
ret
push
sub
xlat
push
push
repz
lods
loope
sub
sbb
or
cmp
dec
push
scas
xor
mov
cmp
(bad)
inc
jae
mov
std
fwait
push
jo
pop
(bad)
jmp
je
aaa
imul
daa
pop
dec
cld
pop
cmps
pop
mov
out
jmp
add
push
stos
out
shl
inc
(bad)
push
and
in
jmp
mov
inc
dec
je
outs
xor
cmps
adc
(bad)
lods
in
push
and
out
shl
xchg
push
cdq
mov
inc
add
mov
xor
cmp
cmc
cmp
mov
jmp
adc
(bad)
push
add
iretw
fxch
sub
clc
pushf
cmp
lahf
jecxz
or
pop
outs
mov
and
sub
pop
mov
mov
xor
mov
in
rol
and
pop
and
xchg
inc
hlt
mov
adc
xchg
out
sbb
out
jl
gs
adc
push
scas
mov
cmp
das
xor
push
and
fwait
mov
add
adc
adc
lock
aam
pop
jmp
repz
hlt
xchg
jnp
stos
ror
lds
loop
cdq
pusha
ret
cmps
in
lock
(bad)
cmp
push
mov
inc
pop
inc
lods
popa
sbb
gs
ss
xor
xor
outs
sbb
and
rcr
(bad)
repz
iret
cmp
sbb
ja
aad
jmp
pushf
mov
push
xor
mov
xor
or
or
xor
pop
or
pop
ins
jo
lods
mov
lea
ins
xor
cmp
stos
dec
test
ret
sub
sub
sub
xchg
fucomip
stos
sub
inc
fstp
test
jecxz
test
cmp
lock
mov
dec
jmp
lea
icebp
or
loope
loop
or
pop
and
das
cmp
jo
int3
xchg
push
pop
inc
mov
jne
and
sub
sti
inc
jbe
sbb
test
mov
adc
push
mov
adc
push
add
jmp
jns
mov
mov
sbb
test
add
cmps
(bad)
jns
add
xchg
inc
or
fnsave
pop
or
xchg
test
icebp
mov
pusha
mov
les
xor
in
inc
cmp
scas
aam
add
push
aam
dec
xlat
pusha
(bad)
pop
xor
ins
jne
and
and
sub
cmp
fsub
call
jge
in
mov
push
or
inc
or
loope
es
jns
pop
lods
sub
mov
jae
and
mov
mov
cwde
sbb
xor
sub
dec
jne
push
call
std
loop
jmp
xchg
dec
adc
and
jbe
call
pop
mov
pop
aam
cs
(bad)
aad
xchg
push
dec
mov
mov
jns
pop
or
sbb
pop
icebp
and
and
loopne
in
and
imul
push
xor
in
push
dec
stc
sub
sub
adc
std
shr
or
stc
mov
(bad)
js
dec
(bad)
add
mov
mov
jbe
sub
add
xchg
clc
jg
dec
cmp
push
cmp
ins
neg
(bad)
and
fdiv
push
hlt
mov
add
lahf
pop
ror
jne
sub
sub
ds
retf
nop
inc
cmp
mov
xchg
xchg
or
xor
inc
xor
stos
xor
(bad)
xchg
inc
adc
jl
stos
dec
or
rcr
xchg
inc
gs
push
stc
pop
jns
sub
xchg
mov
inc
pop
ss
pop
mov
mov
mov
push
repnz
or
or
in
add
cmp
cs
mov
retf
xor
cmp
(bad)
(bad)
sub
xor
jno
jecxz
fidiv
fwait
pop
outs
ret
xor
sbb
xor
pop
lods
inc
fwait
sbb
outs
jo
inc
sub
sub
js
jmp
add
or
xor
fistp
mov
stos
fisttp
aaa
ret
sbb
call
aaa
inc
mov
mov
mov
mov
arpl
push
mov
cmp
fiadd
repnz
inc
les
fstp
mov
and
jmp
mov
pop
pop
add
add
outs
push
xor
sbb
cmp
out
das
xor
add
xor
std
inc
mov
les
dec
xchg
enter
mov
test
dec
mov
(bad)
push
and
test
push
inc
je
push
(bad)
cli
in
inc
add
shr
jnp
dec
(bad)
cmc
mov
or
adc
or
jb
xchg
push
out
icebp
inc
out
pop
sbb
fsub
cli
stos
inc
lock
pop
pop
jno
ja
sub
ds
ins
sub
sub
fbld
or
cmps
xor
loop
je
in
mov
inc
jne
jo
pop
mov
ret
jb
js
lea
aaa
sbb
sub
neg
out
sbb
rcr
lds
push
cmp
in
or
jno
fdiv
ret
dec
cmp
push
add
mov
in
jnp
data16
or
xlat
lods
fistp
in
ror
xor
clc
mov
call
hlt
in
sbb
pop
jb
lahf
dec
imul
pop
pop
mov
fcmove
sub
mov
jg
sub
dec
daa
adc
cwde
cld
daa
jl
jge
pop
scas
pop
or
mov
rcr
rol
xchg
pusha
sti
mov
dec
imul
xchg
aad
push
xchg
sub
add
pop
jmp
jae
mov
(bad)
cwde
adc
mov
shl
inc
jnp
les
sbb
xchg
iret
and
fdiv
pop
xor
mov
dec
sub
xor
outs
shl
push
je
fidivr
inc
mov
push
stc
mov
jl
outs
sbb
ror
jb
dec
sbb
mov
call
nop
push
sbb
in
add
dec
jne
push
inc
aas
outs
lock
(bad)
lds
out
ins
scas
inc
push
dec
lods
jge
dec
xchg
dec
test
mov
lods
int3
pop
jo
or
dec
(bad)
push
sbb
sub
add
jmp
js
ret
scas
cmp
lahf
mov
mov
cdq
pop
lds
(bad)
jmp
jecxz
sub
mov
or
retf
jle
mov
dec
push
mov
fcomi
sub
or
(bad)
cli
retf
ins
scas
scas
xchg
mov
mov
pop
cld
cs
int
popa
fcomp
ja
cwde
pop
cmp
or
stos
(bad)
lods
push
push
arpl
add
jns
xchg
(bad)
dec
add
clc
pop
lahf
dec
mov
sub
cmp
add
push
lods
fld
mov
mov
or
mov
sbb
jecxz
push
fidiv
jl
add
es
push
ds
mov
xchg
add
sbb
into
fld
test
jg
mov
mov
push
data16
sub
mov
fldenv
mov
dec
xor
cmc
and
pop
push
fucomi
mov
mov
add
sub
sahf
mov
mov
and
out
je
(bad)
stc
popa
gs
inc
test
pop
int
push
cmps
adc
enter
mov
clc
cld
mov
mov
xor
int3
ret
sbb
push
fdiv
int
in
mov
xchg
xor
dec
nop
xor
jge
enter
(bad)
adc
daa
ds
retf
inc
outs
cdq
cmp
scas
push
sub
aas
lahf
into
pop
pop
pop
cmps
mov
mov
pop
xchg
fist
inc
call
pop
jge
mov
nop
sub
push
cwde
add
push
jecxz
dec
retfw
lods
mov
test
jne
cdq
popf
rcr
ror
add
les
mov
mov
ds
pop
clc
push
hlt
lahf
inc
ds
push
js
mov
and
xor
push
xor
cmp
imul
inc
push
and
xor
outs
mov
daa
cmps
push
dec
fsubrp
fild
ficomp
add
pop
mov
mov
or
adc
add
sbb
mov
dec
cmc
pop
pusha
push
lods
mov
mov
bound
push
retf
fisub
pop
mov
in
popf
(bad)
and
fwait
cmp
cwde
retfw
lods
aad
sbb
cmp
std
test
outs
call
mov
scas
mov
jno
jae
jge
mov
sub
out
xchg
push
aad
test
repz
and
mov
fistp
and
call
sbb
pop
sub
jl
popf
mov
fstp
shl
aas
fsubp
inc
xchg
inc
dec
mov
jae
adc
sahf
ins
cmp
jmp
dec
inc
mov
sub
pop
and
sub
sub
xlat
pop
or
mov
out
popf
dec
popa
or
test
ret
stc
mov
push
jecxz
jp
test
sub
ret
xchg
nop
cli
pop
clc
sub
(bad)
xchg
push
push
dec
mov
mov
and
jecxz
xor
jne
mov
inc
push
fwait
or
out
sub
and
fimul
pop
cld
sbb
fs
cmp
jb
dec
push
je
mov
fdiv
es
or
inc
loope
push
cmp
mov
fisttp
test
sub
or
sti
pop
clc
xlat
pushf
mov
inc
mov
out
xchg
or
(bad)
xlat
sub
inc
popf
push
in
pop
hlt
test
push
and
fs
jnp
or
movs
(bad)
out
sbb
push
xchg
pusha
fwait
out
mov
and
push
daa
xchg
cwde
xor
inc
aad
lock
sbb
mov
sub
test
push
clc
mov
out
test
arpl
add
cld
sbb
dec
std
sub
shl
jbe
(bad)
mov
cmp
push
ficomp
loope
(bad)
aad
pop
shr
xor
retf
mov
test
or
test
in
and
cmps
xchg
std
clc
or
jp
push
inc
jno
inc
bound
mov
or
retf
dec
sub
dec
mov
inc
test
and
repz
push
dec
movs
int
ret
xor
ss
outs
mov
jg
(bad)
mov
cdq
jnp
jp
das
pop
inc
xor
dec
arpl
dec
ins
jle
mov
xchg
retf
ss
(bad)
cmp
xchg
scas
push
rcl
pop
cmp
sub
and
(bad)
mov
sub
or
mov
sbb
cld
and
jo
adc
or
cld
es
or
sub
outs
xor
sbb
leave
and
mov
mov
adc
mov
inc
stos
adc
mov
sbb
loop
std
scas
popa
adc
xlat
jmp
and
fs
je
and
push
(bad)
mov
hlt
retf
sub
test
out
dec
mov
leave
pop
mov
scas
and
out
dec
cli
fimul
add
mov
add
rol
(bad)
sbb
loop
push
add
hlt
sub
and
arpl
push
adc
loopne
fmul
push
add
(bad)
mov
jmp
sti
call
sbb
adc
fs
(bad)
std
outs
push
cmp
push
jmp
sti
pop
xor
loopne
loopne
mov
icebp
mov
cmp
sti
push
aad
push
rol
data16
cwde
pusha
sahf
(bad)
into
or
cdq
clc
shr
lock
pop
or
sub
add
xchg
sbb
sbb
push
(bad)
stos
push
daa
call
int
daa
dec
jnp
sbb
repz
sub
xor
dec
test
div
mov
jno
jge
pop
and
(bad)
dec
or
pop
jp
push
test
sbb
je
pop
mov
sbb
imul
out
leave
cmp
xor
sbb
out
or
stc
cmps
ror
cmp
xchg
add
dec
mov
(bad)
jecxz
icebp
aad
or
repnz
add
xor
jmp
mov
push
xchg
sub
jne
sbb
sub
cwde
into
scas
mov
mov
scas
add
sbb
jge
aaa
outs
pop
mov
xchg
mov
jae
mov
dec
cs
movs
fs
scas
mov
inc
je
dec
xor
jo
push
sub
xchg
in
push
sub
retf
push
dec
mov
mov
fcomp
or
lods
add
pop
jb
(bad)
cmp
xor
push
ss
pusha
inc
jp
fld
mov
xor
dec
pop
rcl
push
sbb
gs
mov
add
push
loope
dec
les
adc
xchg
leave
mov
mov
ins
and
jmp
or
pop
sub
or
aad
test
pop
pushf
int
ins
in
pop
out
pop
inc
cmps
ret
enter
aas
xor
cs
ret
iret
add
or
scas
scas
fld
pop
xor
sub
icebp
enter
adc
sub
in
jge
xchg
pop
xlat
aas
jb
inc
and
rol
mov
pop
mov
xchg
cmp
dec
retf
jp
xor
or
mov
push
adc
pop
rcl
inc
inc
out
repnz
dec
mov
jae
pop
lds
sbb
xor
retf
add
xchg
mov
out
into
or
jne
outs
push
sbb
inc
jecxz
xchg
cli
xchg
data16
jb
jecxz
(bad)
push
rol
test
push
jmp
adc
inc
outs
mov
xchg
in
loop
pop
aad
mov
popa
cmc
(bad)
arpl
dec
je
stos
sbb
test
dec
ss
data16
push
jle
pusha
(bad)
pop
(bad)
sar
sbb
mov
xor
mov
xchg
xchg
into
out
cdq
fidiv
les
imul
or
out
(bad)
adc
dec
in
in
aas
dec
std
cwde
sub
retf
adc
popf
in
cs
je
xchg
fsub
out
inc
retf
cwde
pop
mov
and
xor
jl
fnstsw
cmp
lahf
in
add
jne
xchg
push
xor
nop
ss
leave
or
xchg
sub
icebp
cmp
sub
sub
mov
push
repz
icebp
jecxz
jb
fistp
jl
aaa
adc
cmps
out
cmps
push
xchg
(bad)
pop
imul
xor
hlt
xchg
mov
jns
inc
add
xchg
sbb
imul
add
iret
mov
stos
movs
lds
inc
fdivr
ins
iret
daa
push
push
xchg
(bad)
sub
(bad)
outs
ret
repz
ret
jae
cs
test
(bad)
sbb
dec
and
mov
sbb
add
mov
xchg
fucomp
jmp
push
fisttp
test
ret
jno
dec
fistp
sbb
in
and
scas
test
sub
cmp
cdq
pop
xchg
pusha
cli
sbb
lds
mov
inc
sub
bound
shl
pop
pop
jmp
aam
pushf
icebp
cwde
sub
cmc
add
xchg
stc
adc
sbb
in
xor
mov
dec
sbb
inc
ror
pop
or
pushf
ret
jle
leave
mov
jne
shl
jg
xor
ds
sti
dec
lds
pop
jae
pushf
add
ins
(bad)
cmp
daa
and
bound
sub
retf
cmps
cmp
arpl
push
add
int3
fistp
and
into
dec
lahf
push
repz
xchg
push
repnz
imul
hlt
jmp
xchg
fst
outs
xchg
loopne
adc
neg
ss
and
mov
test
imul
pop
ret
mov
dec
mov
rcl
hlt
and
lahf
ret
dec
stos
aaa
daa
jle
adc
test
add
ret
add
(bad)
and
jmp
ds
call
lea
jg
mov
and
cmp
push
mov
pop
fsub
(bad)
cmp
jecxz
daa
(bad)
(bad)
jo
outs
daa
xor
aam
cmps
sub
jo
add
mov
imul
push
fsubr
or
mov
mov
pop
adc
mov
out
pop
and
xor
inc
ins
pop
(bad)
std
fstp
add
repz
cmp
call
pop
int3
hlt
sbb
or
jns
ret
dec
push
dec
sub
xor
fcomp
cmp
xor
dec
push
shl
sar
dec
addr16
aas
jge
imul
push
or
ret
les
cmp
mov
and
push
lds
movs
or
std
rol
jno
mov
add
ss
push
sbb
mov
cs
xchg
movs
inc
clc
loopne
test
int
xchg
inc
jns
int
jg
jo
fld
es
or
xchg
push
xchg
pushf
out
add
into
xchg
cmp
or
sbb
mov
or
pop
int
js
and
mov
out
inc
enter
push
xlat
arpl
adc
rcr
push
aam
push
clc
int3
in
adc
stos
sub
outs
cli
cs
add
sbb
ficom
dec
and
aad
les
fmul
movs
or
xchg
mov
pop
cmp
dec
sbb
push
fs
or
cmp
add
and
mov
sbb
push
shr
xor
enter
shl
sub
test
js
push
push
xor
cmps
jl
(bad)
push
mov
repz
in
data16
and
std
scas
sti
push
inc
mov
add
sub
jb
(bad)
push
retf
test
js
enter
fsub
cdq
mov
fcomp
push
fisub
jbe
or
jnp
sahf
xchg
inc
fnstsw
mov
ins
data16
xchg
addr16
imul
adc
cs
jne
loope
mov
push
xchg
cmp
popf
jnp
jb
mov
xchg
push
cmp
bound
scas
mov
aas
gs
and
pop
rcl
xchg
jae
enter
jl
or
ror
pop
adc
aaa
ret
arpl
mov
scas
push
xchg
jno
pop
(bad)
loopne
mov
test
popf
fst
fs
mov
ret
retf
(bad)
cwde
dec
dec
sub
adc
add
out
int
sub
in
outs
jbe
loopne
xchg
iret
movs
fwait
ret
test
add
push
sub
inc
imul
inc
adc
arpl
xchg
scas
push
mov
int3
icebp
test
sub
cmps
mov
mov
dec
jl
jle
gs
dec
cmp
stos
jo
pop
jle
jns
mov
sbb
pushf
adc
jno
outs
jp
jo
enter
outs
cdq
pop
pusha
in
sar
adc
shr
loop
sbb
sbb
push
in
pop
jae
fcmovne
aas
jge
call
or
fnstsw
movs
dec
jl
addr16
cmp
sub
and
ja
mov
sbb
mov
fwait
dec
call
mov
push
inc
lds
inc
adc
sub
cmp
lock
cmp
rcr
sbb
xor
sub
sub
iret
sar
inc
mov
rcl
out
xchg
pushf
icebp
ror
cwde
mov
ja
add
into
sub
icebp
jns
xchg
ds
jnp
mov
push
jbe
neg
push
mov
cwde
ins
shl
jmp
retf
cdq
test
add
add
cmp
fisttp
or
in
shl
mov
(bad)
loop
cwde
out
sbb
xchg
push
retf
imul
movs
in
shl
sub
fidiv
sti
dec
add
js
dec
fidivr
cmps
retf
sahf
in
pop
push
stc
pop
push
xor
add
push
push
sbb
imul
in
push
jecxz
inc
add
dec
lea
push
call
sbb
jnp
ret
xchg
inc
mov
aaa
out
je
cmp
nop
repnz
and
push
and
pop
and
add
out
pop
xchg
xchg
sbb
es
cmp
int3
shr
fimul
pusha
mov
pop
into
shl
adc
inc
dec
out
dec
mov
shl
mov
push
(bad)
lods
pop
shr
aas
test
ja
jnp
or
test
lods
adc
add
sbb
dec
cmp
jp
adc
adc
jmp
daa
aam
and
loope
push
out
ret
mov
(bad)
ins
cld
sbb
repz
xor
cmc
inc
call
add
mov
jo
clc
pushf
add
or
adc
add
jnp
cld
sub
add
sub
lods
inc
test
inc
aad
mov
mov
and
out
pushf
xor
imul
pop
xor
push
inc
fcomi
xlat
mov
ins
(bad)
ja
fstp
inc
cwde
test
enter
jg
fcmovbe
scas
in
fs
jo
xor
push
push
scas
sub
fs
and
jge
add
mov
ror
loope
lds
test
mov
push
sub
pop
mov
mov
outs
sub
repnz
or
inc
jns
inc
push
or
out
daa
cmc
xor
and
out
and
xor
mov
and
mov
jl
int3
push
imul
pop
add
fcom
pop
pop
cdq
jbe
xchg
lahf
dec
jg
push
pop
ins
mov
fmulp
xchg
mov
cmps
cwde
sbb
cwde
adc
cld
shl
sahf
dec
push
and
sub
arpl
retf
mov
xor
add
popf
xchg
out
mov
adc
adc
xchg
cmp
(bad)
loopne
push
ss
aam
add
sbb
mov
dec
cdq
jge
leave
pop
and
dec
cli
sbb
clc
add
adc
(bad)
xchg
sub
test
idiv
cmp
test
(bad)
hlt
hlt
stos
jno
fwait
jne
es
ret
mov
jbe
mov
mov
cmp
push
inc
mov
fnstcw
jbe
jnp
mov
cmp
sub
mov
rcl
fild
mov
dec
mov
(bad)
or
or
mov
nop
retf
dec
fstp
ss
fs
push
xchg
hlt
or
aam
cs
mov
mov
jmp
sbb
pop
loop
fwait
dec
jecxz
mov
jb
inc
int
jmp
push
xor
pop
int3
mov
or
jle
mov
push
and
aas
mov
cmps
mov
jnp
cmp
mov
scas
es
cld
dec
mov
cmp
rol
xchg
into
inc
hlt
xchg
test
retf
mov
inc
jnp
xor
lahf
shl
lahf
enter
loopne
jmp
xor
cmc
hlt
shl
cmp
push
clc
mov
fadd
gs
loope
icebp
jle
cdq
pop
lods
mov
and
fisub
and
aam
sbb
jle
dec
xchg
sbb
jne
inc
in
movs
mul
stc
dec
inc
push
xlat
sbb
test
inc
and
scas
fxch
mov
sub
push
jbe
pop
jmp
add
cwde
pop
push
pop
jne
in
or
mov
das
mov
sbb
xchg
lods
retf
pop
daa
pop
(bad)
aam
or
(bad)
aas
bnd
fcmove
aaa
jno
shr
dec
popf
int3
das
add
out
mov
mov
test
loopne
push
inc
dec
mov
inc
jae
or
pxor
ja
popa
or
pop
or
adc
lock
mov
or
ss
into
pop
lea
je
mov
and
cmc
xor
leave
add
cmp
adc
arpl
mov
pushf
ins
xor
sub
and
or
pop
mov
jb
mov
jmp
sbb
xor
jecxz
cmps
js
push
xor
xchg
inc
jns
cmps
sti
pop
enter
mul
(bad)
jecxz
neg
bound
dec
icebp
fld
sub
xor
int
adc
out
cmps
sbb
xor
xchg
popa
rcl
pop
mov
pop
enter
push
test
and
call
mov
sbb
pop
(bad)
leave
aam
mov
stos
stc
and
and
repnz
or
adc
inc
add
push
push
or
sbb
test
pop
pop
cmp
push
int
sbb
jmp
stos
mov
sbb
(bad)
add
lods
sub
dec
jp
and
push
sbb
pop
scas
hlt
gs
inc
or
mov
iret
add
pop
mov
mov
scas
das
(bad)
jnp
outs
jle
xor
cmp
lea
cdq
(bad)
icebp
and
sub
add
test
or
fs
lea
mov
push
loope
xchg
in
mov
ja
(bad)
clc
cmp
add
mov
jl
mov
jno
lahf
pop
push
dec
jecxz
fistp
adc
jp
gs
push
data16
inc
dec
push
retf
pop
jge
jne
sbb
mov
or
popf
push
pop
iret
sti
lods
test
xchg
bnd
cmp
inc
mov
pusha
mov
and
pop
ins
(bad)
mov
adc
sbb
jb
imul
ret
es
clc
rcr
int3
xor
push
pop
sbb
gs
push
mov
mov
sub
push
loopne
push
ficom
sbb
outs
mov
shl
cli
clc
sub
ds
and
test
and
jecxz
push
ins
clc
mov
fwait
xor
out
int
fdivr
dec
cmp
add
mov
sbb
fwait
mov
test
xor
stos
ss
lock
fwait
rcr
mov
add
iret
and
pop
fcomp
and
leave
imul
or
jmp
fiadd
add
bound
xchg
in
loop
mov
mov
pop
cld
outs
or
mov
in
jmp
pop
dec
lahf
mov
sbb
retf
fadd
lods
ror
sbb
pushf
sbb
xchg
dec
loope
in
sahf
mov
adc
popf
mov
das
js
xchg
mov
push
fwait
jno
je
in
jne
push
lock
ds
push
pop
ss
pop
lds
dec
cmp
push
push
xor
mov
fmul
into
enter
cmp
xor
sbb
or
in
test
stos
mov
(bad)
cmc
cld
arpl
xchg
mov
jne
mov
pop
enter
mov
and
das
js
sub
mov
dec
pop
cld
mov
add
dec
call
pushf
fwait
xor
ror
aam
call
aam
jecxz
inc
mov
inc
inc
mov
dec
test
xor
lock
popf
movs
and
aad
in
push
inc
xor
aaa
xor
sbb
xchg
or
adc
sbb
sub
adc
cmp
sbb
out
leave
xor
call
sbb
leave
das
in
or
sub
cmp
cdq
js
and
push
idiv
sbb
(bad)
jle
aad
cmc
or
dec
pop
or
aam
dec
idiv
retf
fild
add
dec
push
jno
mov
adc
mov
cmps
jg
mov
or
aad
add
test
rol
fdiv
shl
fistp
bound
jnp
imul
dec
sub
sub
(bad)
stc
or
int
push
push
mov
add
data16
(bad)
cmps
pop
add
fs
inc
and
sti
ret
push
gs
les
icebp
sbb
mov
repz
ret
push
retf
cmp
add
pop
mov
xchg
sbb
mov
mov
neg
in
pcmpeqd
xchg
mov
or
pop
sub
mov
or
sti
dec
and
add
(bad)
mov
das
jl
inc
arpl
add
arpl
jmp
stc
into
std
test
test
pushf
movs
cdq
push
jecxz
jbe
push
or
sbb
ja
xchg
xor
ss
dec
out
mov
enter
bound
push
mov
cli
aad
sub
jmp
sbb
add
inc
pop
cmps
sub
xchg
sub
pop
and
pop
test
dec
outs
push
pushf
xchg
aas
jns
add
dec
enter
adc
sbb
cs
cmp
push
sub
call
sbb
pop
outs
xor
dec
push
add
out
stos
dec
adc
mov
cmp
jge
jl
ss
push
add
push
lea
inc
cld
lock
imul
pop
int
dec
stc
cmp
imul
jecxz
aam
sub
push
int3
pop
addr16
imul
bound
cmp
push
test
imul
add
mov
dec
adc
or
loope
cmp
test
sub
cli
push
mov
test
sub
iret
dec
and
adc
fwait
mov
add
loop
(bad)
aam
fisubr
fdiv
cs
aas
push
int
ds
mov
pop
push
adc
ror
dec
repz
xor
inc
add
popf
stc
(bad)
fs
pause
add
imul
test
pop
fs
das
in
jge
repz
outs
enter
fld
sbb
arpl
ror
out
jg
dec
fisub
ins
and
or
mov
mov
jae
pop
xor
(bad)
ds
mov
pop
pop
les
xor
mov
aaa
pop
pusha
mov
test
and
out
cmc
mov
dec
sbb
and
int
test
pop
pop
jb
mov
or
nop
dec
fnsave
sti
add
or
je
loop
or
inc
inc
fwait
mov
push
push
rol
jbe
push
aaa
data16
arpl
test
inc
pop
mov
lods
sbb
out
push
popf
mov
or
jg
int
test
dec
stos
adc
(bad)
cdq
pusha
dec
pavgb
loopne
pop
daa
aam
inc
(bad)
mov
inc
leave
ror
into
inc
inc
retf
stc
es
xor
mov
dec
pop
retf
ret
dec
cmp
mov
pop
sub
ror
shr
shr
pop
jecxz
popf
pop
out
add
(bad)
neg
in
mov
fadd
dec
push
mov
cs
cmp
aad
out
stc
jecxz
sbb
fist
fcmovnb
or
(bad)
xchg
lock
rcl
add
test
jbe
aaa
or
fisttp
shl
xor
jno
inc
fisttp
daa
xor
in
xchg
dec
xor
scas
sbb
js
in
sar
xor
stc
lea
leave
push
in
cmp
push
cmp
icebp
add
js
and
lods
mov
mov
and
push
mov
shr
daa
fst
idiv
leave
(bad)
jns
push
pop
mov
xchg
das
int3
gs
pop
lahf
imul
cld
fadd
test
ins
inc
shl
(bad)
mov
dec
test
gs
test
pop
popf
pop
cli
dec
popa
inc
in
lods
jnp
int3
mov
ss
lods
mov
pop
dec
xor
adc
mov
sbb
dec
dec
test
daa
into
ds
ins
or
sbb
fsub
div
call
pop
or
lds
and
fcmovu
pop
cmp
popf
add
movs
mov
sbb
lds
loop
jp
jbe
outs
push
rcr
rol
pop
test
xchg
test
test
stos
(bad)
pusha
mov
aam
sbb
jnp
outs
dec
sar
test
add
ror
fadd
or
retf
and
movs
repnz
jg
in
push
clc
imul
loopne
mov
xor
pop
push
mov
div
add
sub
and
in
hlt
pusha
ja
xchg
pop
xor
or
daa
xchg
adc
aas
adc
mov
jmp
jb
aam
dec
call
arpl
or
push
mov
into
idiv
lock
frstor
jbe
mov
inc
push
call
in
cmps
adc
std
jb
mov
pop
sub
stos
lods
sbb
push
fidiv
pop
add
std
callw
jmp
add
sbb
add
jmp
cmp
add
mov
jno
mov
dec
imul
scas
sti
and
movs
xchg
or
jl
add
mov
repz
pusha
jmp
cmp
inc
push
cmp
test
cs
and
std
jl
test
add
in
or
xor
sbb
ja
push
push
xchg
stos
inc
mov
mov
and
call
and
jbe
dec
stos
xrelease
mov
scas
push
data16
pop
jmp
sbb
sub
push
retf
pop
outs
std
aaa
js
pop
div
ficom
adc
jmp
inc
add
lahf
add
retf
in
(bad)
adc
pop
in
jae
inc
pop
and
push
cmp
stos
out
popw
ss
xchg
dec
call
jbe
inc
mov
push
retf
lea
ds
iret
mov
iret
sub
paddb
adc
fbstp
imul
add
push
push
fadd
ins
dec
ftst
push
cmps
imul
stos
jns
es
jp
aas
or
pop
push
pop
push
pop
mov
mov
mov
ret
leave
inc
xchg
jmp
jg
pop
les
in
push
ins
das
scas
outs
pop
aas
js
out
imul
ins
xor
sbb
and
ret
rcl
jb
es
xchg
sahf
imul
and
dec
mov
dec
sbb
pop
mov
jb
jmp
sub
das
dec
sbb
lahf
mov
pushf
shl
sbb
mov
xor
hlt
(bad)
adc
cli
adc
add
add
xor
idiv
and
push
ss
or
cmp
dec
aaa
cwde
call
pop
icebp
mov
subps
add
stos
xor
scas
jno
and
xor
hlt
popa
arpl
std
cmc
(bad)
pop
std
mov
dec
sub
xchg
mov
clc
xchg
add
jb
mov
ss
sub
fwait
jmp
(bad)
dec
xchg
push
nop
push
dec
and
push
mov
and
pusha
jb
call
jmp
jmp
ds
cmp
ror
je
mov
jo
test
jge
pop
lea
push
fst
push
mov
sub
pop
setae
ror
xor
pop
and
jl
mov
dec
shl
adc
out
aaa
lahf
mov
nop
jmp
jne
lds
repnz
pop
push
xlat
inc
inc
test
rol
ret
xor
and
repz
jg
sub
mov
and
mov
std
dec
loope
sbb
aam
cmps
or
adc
les
xor
pmullw
adc
add
sbb
xor
jecxz
xor
pop
mov
push
or
inc
(bad)
pop
add
sub
dec
lods
mov
sub
int
iret
cmp
aas
jno
mov
(bad)
push
pop
fisttp
test
(bad)
xchg
push
push
jbe
scas
outs
dec
sbb
ror
aad
(bad)
jbe
jmp
mov
mov
retf
cmps
add
ficomp
xor
push
bound
repnz
lds
call
xor
mov
jmp
(bad)
stos
mov
xor
pushf
jge
lock
and
in
dec
mov
xlat
nop
dec
push
imul
jle
push
repnz
mov
dec
xchg
sub
or
dec
push
inc
arpl
pop
jmp
sub
push
or
jg
sub
in
fimul
ins
xchg
sub
adc
bound
cmp
dec
or
xchg
pop
jge
xchg
jg
or
push
dec
in
fstp
xor
stc
test
and
stc
repnz
rcl
pop
cmp
xor
jns
lds
add
cmp
inc
call
sbb
xor
push
pop
popf
cmps
inc
or
out
lods
cmp
ins
cmp
jns
loope
mov
cld
xor
push
add
and
jb
les
mov
loope
fistp
fcomip
loop
rcl
inc
inc
cmp
sub
push
xor
cwde
movzx
mov
sub
sbb
sub
rcr
ror
and
mov
icebp
mov
in
dec
dec
sub
xchg
dec
jg
hlt
dec
pop
add
js
aas
xchg
push
and
add
pop
and
push
pop
aaa
ds
pop
mov
loop
pop
cvtpi2ps
mov
pop
inc
pop
push
scas
mov
stos
lea
jno
ret
js
mov
scas
xchg
icebp
pop
pop
inc
iret
sub
pop
push
stos
lsl
sub
bound
cmp
add
add
nop
out
xchg
dec
add
xchg
repz
mov
cmp
aas
push
and
jg
jg
or
retf
pop
xor
imul
xchg
cld
dec
and
xor
repnz
push
pop
ja
les
(bad)
mov
sbb
jne
leave
ret
add
(bad)
in
xchg
push
mov
dec
les
push
sub
or
mov
sti
ins
push
ss
add
jmp
cld
cmc
pop
not
ins
ins
push
jge
add
ret
jg
pop
mov
ins
xor
jle
push
fisttp
sti
sub
in
push
mov
adc
daa
icebp
das
sub
pop
movs
pop
loop
xchg
out
inc
xchg
xor
pop
enter
cld
xchg
clc
es
sbb
mov
dec
test
daa
loopne
ss
cmp
add
test
sub
sub
sub
or
sbb
cmp
adc
mov
or
mov
and
mov
mov
leave
(bad)
sub
leave
dec
jns
stc
sbb
jb
outs
fldenv
fsubp
inc
xlat
xor
push
cmps
xchg
sbb
jge
movs
cmp
test
sbb
inc
icebp
pop
mov
mov
sbb
fisubr
aaa
and
pop
push
adc
sbb
imul
hlt
cwde
pop
mov
test
mov
mov
dec
and
fbld
sbb
mov
enter
dec
add
sbb
imul
jne
adc
xchg
push
cmp
int3
mov
iret
lea
out
scas
imul
lock
sub
push
clc
xor
xor
mov
enter
(bad)
sti
popa
xchg
aaa
cdq
jle
xchg
push
sahf
inc
mov
jmp
mov
pop
pop
(bad)
fisub
and
imul
mov
hlt
pop
mov
pusha
pop
push
repz
xor
iret
jecxz
add
test
lds
mov
hlt
push
push
adc
cmp
fwait
ins
and
ins
mov
xor
fs
call
rcr
mov
pop
and
dec
ror
push
xor
add
lea
inc
lea
pop
sahf
sbb
sbb
add
call
int
imul
sub
pop
mov
sub
add
pmullw
jecxz
and
xchg
lods
js
jb
push
popf
cmps
pop
pop
ror
std
dec
retf
sbb
jmp
mov
and
xor
inc
jp
push
jo
lods
into
sahf
add
and
sub
inc
and
daa
sbb
push
xor
bound
sub
fwait
xor
iret
xchg
loope
jl
imul
xrelease
inc
mov
ret
imul
lods
inc
cmp
inc
adc
loop
fimul
cld
push
fs
fidiv
push
xlat
add
dec
dec
ins
or
push
jno
dec
fst
mov
js
push
sub
xor
mov
lds
dec
ret
jmp
push
loop
popf
xchg
shl
test
jbe
mov
inc
pop
icebp
add
adc
xor
pop
ins
movs
mov
in
jmp
xor
lea
and
dec
xor
mov
sub
mov
xor
test
jmp
imul
mov
xchg
scas
sbb
enter
mov
pop
adc
sub
adc
xor
mov
add
sub
pop
shr
xchg
pop
hlt
arpl
push
inc
sub
repnz
xor
xchg
lahf
lock
cli
cmps
mov
(bad)
ror
inc
call
dec
hlt
in
lahf
imul
hlt
fimul
adc
pop
jl
rol
ins
adc
or
sub
je
pop
aad
or
ja
xor
aam
sbb
inc
sub
push
gs
or
xchg
es
int
dec
xchg
or
xchg
cmc
mov
lock
push
mov
mov
pop
mov
aam
mov
pop
inc
fdiv
inc
mov
ret
jmp
int
icebp
cs
aas
add
dec
rcl
add
pop
dec
pop
in
ret
push
stos
cs
stc
clc
sub
pop
mov
lds
leave
inc
stc
mov
test
and
sub
dec
inc
lea
pop
int3
adc
mov
dec
enter
mov
jge
mov
mov
mov
mov
sbb
pushf
cld
das
xchg
shl
pop
dec
cs
arpl
ds
fiadd
push
and
adc
data16
ficom
mov
xor
jo
lock
retf
retf
dec
sub
add
(bad)
add
into
jp
sub
and
mov
pop
fsubr
jno
sar
hlt
or
or
icebp
inc
fs
iret
sbb
out
push
jmp
imul
and
fucomi
std
or
xor
mov
jmp
in
xor
mov
mov
push
xor
in
jo
jg
mov
mov
jbe
gs
add
xchg
mov
inc
out
inc
cwde
sbb
test
fwait
stos
push
aaa
inc
push
dec
ret
(bad)
dec
xor
push
lahf
cmc
popf
pop
xchg
jbe
add
lods
xchg
int3
and
cmc
lahf
xchg
jmp
inc
push
mov
in
xchg
mov
jbe
imul
xor
cmps
fmul
aas
cwde
xchg
jp
outs
stos
cmps
sbb
pop
jp
mov
or
test
dec
xchg
imul
into
sti
or
dec
mov
(bad)
fdivr
das
pop
push
dec
pusha
dec
(bad)
pushf
stos
(bad)
movs
pop
sub
cmps
loope
xchg
arpl
ds
xor
test
inc
fcmovu
add
js
bound
jle
add
stos
in
out
xor
cwde
repnz
mov
vcvtpd2ps
shl
adc
adc
dec
pop
jo
push
dec
es
push
cmp
lock
dec
hlt
fisubr
arpl
or
shl
mov
out
jmp
cmps
jmp
inc
dec
inc
or
dec
push
dec
jne
sub
dec
dec
test
adc
cs
dec
and
and
jle
in
dec
out
loopne
xlat
loope
add
pop
add
inc
nop
mov
sub
dec
pop
push
das
or
mov
mov
or
mov
jb
jnp
xchg
stos
sbb
inc
jmp
dec
loop
leave
mov
jns
rcr
movs
lock
cmp
sbb
mov
ss
cmp
and
mov
adc
ret
aam
fs
rcl
mov
sub
fld
pop
dec
ja
push
adc
ja
shr
retf
inc
daa
or
shr
xor
and
sbb
mov
inc
ins
xchg
dec
xor
jb
ins
mov
outs
xor
gs
and
loope
adc
adc
lahf
and
cmp
or
rol
sbb
out
xor
jp
fs
int
js
pop
pop
lds
adc
ja
mov
in
outs
repnz
jmp
lahf
popf
pop
test
cmps
mov
popf
fmul
pop
hlt
xchg
test
pop
pushf
xor
sub
adc
(bad)
fwait
ins
sub
xchg
adc
xlat
push
dec
ds
iret
shl
cwde
jmp
imul
fwait
retf
and
mov
je
inc
push
int3
in
and
jmp
push
xchg
rcl
(bad)
jecxz
add
fisub
add
adc
sub
xchg
jmp
test
jb
into
leave
mov
sbb
cmps
adc
or
aam
adc
scas
inc
pop
shrd
add
icebp
jb
or
mov
ins
sub
or
mov
inc
ret
(bad)
call
inc
test
(bad)
jmp
mov
in
mov
scas
add
cmp
ins
shr
in
lods
(bad)
dec
cmps
repz
pop
push
push
mov
sti
xchg
pop
popf
into
retf
push
xchg
push
lds
mov
xor
add
inc
xchg
aaa
xor
cdq
ret
cmp
call
inc
push
mov
push
pop
test
mov
push
fbstp
outs
jb
or
push
mov
sbb
dec
push
inc
xchg
dec
stos
jo
pop
imul
stos
call
(bad)
std
int3
add
mov
dec
cli
mov
test
push
(bad)
mov
int3
popf
push
out
test
(bad)
test
dec
into
xchg
or
pop
mov
(bad)
mov
lahf
cmps
imul
xchg
pop
xor
data16
dec
mov
arpl
test
push
add
pop
stc
pop
adc
sub
aaa
xor
push
in
mov
popa
xor
repz
les
xchg
jns
pop
(bad)
into
ret
pushf
imul
pop
push
fwait
cmovb
push
mov
imul
pop
sub
pop
pop
xor
sub
push
int3
das
mov
cld
mov
daa
out
hlt
loope
xor
sbb
hlt
jno
inc
in
cli
push
dec
lea
sar
stos
test
cmps
cmp
enter
xchg
sbb
xor
pop
lock
sub
sbb
mov
data16
inc
cmp
add
or
(bad)
dec
cmc
xchg
dec
inc
pop
retf
imul
xchg
call
pop
hlt
sbb
ret
jp
ret
xor
push
movs
mov
outs
mov
cld
inc
fimul
add
fcomp
sti
inc
adc
add
dec
pop
shl
jne
jne
movs
add
push
mov
xchg
test
fwait
nop
popf
push
mov
jmpw
jl
inc
cmp
sub
xor
jp
mov
shl
and
xor
jb
(bad)
sub
fsubr
xor
inc
js
popf
mov
fdivp
fcmovnb
out
nop
test
inc
mov
jb
xchg
mov
adc
test
adc
cmp
or
or
(bad)
cmc
addr16
jmp
rcl
into
enter
sbb
jle
pop
icebp
or
dec
add
loope
inc
push
outs
fbld
push
std
rol
(bad)
out
cdq
and
cli
fild
sahf
inc
out
pop
pop
cdq
mov
cmps
stos
xor
or
clc
dec
push
aas
push
sub
push
jb
fild
in
mov
mov
add
xchg
dec
jb
cmp
or
repz
pusha
mov
xor
lock
cmps
xor
inc
pop
mov
xchg
pop
push
mov
daa
test
leave
dec
xor
pop
lods
aas
shl
int
jmp
dec
mul
lea
jecxz
(bad)
mov
cmc
gs
mov
jns
adc
cmp
inc
xchg
repnz
jge
dec
out
fisubr
inc
jp
mov
sbb
gs
std
jg
mov
cmp
dec
lock
mov
inc
fstp
movs
imul
sti
scas
xchg
or
inc
dec
in
shl
push
adc
or
cmc
pop
inc
sub
dec
dec
and
test
cmp
and
pop
js
ins
mov
pop
scas
and
mov
xor
pop
push
cli
cmp
push
adc
mov
mov
retf
or
imul
sub
jnp
xlat
and
and
push
sahf
mov
pushf
sbb
cs
movs
or
pop
xor
xchg
add
push
or
test
fucom
ins
xchg
sub
cmc
mul
aad
jns
or
mov
or
sti
stos
pop
and
icebp
sub
push
in
jb
ss
pop
xchg
or
out
inc
xchg
jecxz
and
or
push
ror
pop
pushf
xchg
jb
(bad)
and
in
clc
push
pop
int
jno
nop
push
lea
inc
jbe
and
inc
or
add
stos
daa
inc
inc
dec
jecxz
dec
lods
(bad)
and
int3
cmc
rcr
enter
pop
push
pop
push
adc
push
push
jns
pop
dec
xor
fistp
lahf
pop
inc
pop
(bad)
pop
cmp
cmp
push
inc
mov
das
(bad)
dec
mov
cmc
and
adc
or
and
jb
fimul
add
out
xor
push
push
stc
pop
add
sub
and
retf
mov
xchg
cdq
dec
aad
dec
or
mov
mov
adc
mov
push
mov
je
(bad)
out
pop
sar
data16
lock
fcmovnb
movs
push
jbe
xchg
sub
test
push
loopne
add
push
call
mov
cmp
dec
aad
call
push
scas
or
cmp
rol
les
and
loopne
xchg
sbb
cli
ja
jns
pop
sar
std
lea
sbb
dec
in
push
out
sahf
ja
inc
cmp
jl
js
ins
imul
fnstcw
das
ror
test
pop
xchg
sbb
es
mov
mov
popa
ret
neg
cmc
pop
inc
pop
mov
outs
add
mov
(bad)
adc
test
or
mov
shl
popf
pop
jmp
pop
out
dec
in
stos
mov
fs
pushf
jp
es
xchg
inc
(bad)
(bad)
xchg
int3
lahf
pop
ss
dec
mov
retf
shl
or
cmp
dec
in
outs
mov
adc
test
cmp
lock
push
pop
dec
mov
jle
sbb
xor
inc
mov
mov
sbb
cmp
shr
pop
dec
ds
push
(bad)
cmp
mov
and
(bad)
mov
out
inc
leave
adc
and
lods
movhps
jmp
cmp
push
loop
sub
xlat
test
out
and
or
inc
bnd
dec
push
js
xor
pop
xchg
cmp
leave
and
dec
mov
mov
inc
and
jb
inc
sub
push
shr
ja
fdiv
or
dec
jmp
loopne
sbb
mov
add
jmp
hlt
loop
or
xchg
xorps
pop
xlat
in
shr
push
arpl
test
shr
das
lods
sahf
mov
adc
fild
sub
cs
mov
cwde
(bad)
(bad)
leave
sub
or
arpl
fwait
setge
aad
js
sbb
push
push
fst
sbb
gs
popa
stos
or
mov
loope
xchg
xlat
stos
enter
mov
push
adc
leave
or
sub
dec
pushf
xor
dec
xor
inc
cmp
mov
xchg
sbb
(bad)
xchg
xor
or
je
shr
adc
push
fild
mov
mov
cmp
daa
std
(bad)
push
lea
push
psllq
(bad)
fild
push
push
pop
aas
jg
les
je
aaa
stos
xor
lods
push
jp
dec
in
and
xor
js
jmp
xchg
test
das
inc
or
sbb
loopne
push
add
stc
cmp
mov
shl
xchg
push
sbb
jecxz
(bad)
or
popa
aaa
ss
nop
add
and
mov
daa
hlt
pop
xchg
es
cmps
mov
leave
push
fwait
add
int3
repnz
pop
xchg
js
dec
shl
and
stos
xchg
and
sahf
and
add
sbb
jbe
xchg
mov
lock
sub
push
sbb
lds
rol
into
(bad)
or
mov
pop
packsswb
sbb
enter
jecxz
cwde
scas
rcr
jns
add
add
xchg
adc
mov
push
popf
repnz
mov
loop
cs
pop
(bad)
js
mov
and
mov
sub
gs
loopne
mov
dec
inc
pop
shl
xor
jae
inc
push
cmp
push
dec
cdq
lods
iret
in
jmp
mov
je
lock
jo
push
mov
jmp
inc
repz
mov
into
jb
sub
jae
push
cmp
mov
mov
ret
pushf
ins
sahf
arpl
jb
sbb
retf
pushf
add
cld
dec
out
sahf
retf
xchg
mov
push
jo
loope
popa
das
mov
or
bound
push
ds
sar
or
repnz
js
and
sbb
sbb
inc
mov
inc
ss
sbb
lea
sbb
cmp
xchg
push
push
test
les
dec
pusha
test
or
dec
and
data16
sbb
dec
pop
dec
add
inc
dec
jp
ss
es
xor
add
dec
push
movs
repz
arpl
shr
fs
(bad)
cwde
out
jno
cmp
fwait
aad
dec
ss
push
jmp
sub
xor
push
mov
adc
xor
clc
and
mov
dec
or
je
push
mov
mov
ficomp
jns
or
xor
mov
test
cwde
sbb
and
jne
jmp
frstor
cld
push
test
xor
les
pushf
fwait
rcl
scas
cmc
push
inc
loopne
sbb
int
jmp
popf
(bad)
push
inc
push
inc
leave
mov
jmp
fmul
mov
imul
pop
call
mov
or
(bad)
mov
add
ins
xchg
out
fs
add
push
and
or
push
mov
jbe
std
sub
aam
xchg
int3
sub
outs
out
cmp
sub
test
scas
(bad)
ffreep
sub
inc
imul
inc
mov
scas
add
jle
sub
add
jno
jmp
xchg
mov
push
push
iret
test
cmp
idiv
pop
mov
inc
pusha
mov
int
sub
or
jnp
and
and
pop
xor
pop
cs
rcr
(bad)
mov
lods
or
adc
dec
cwde
rol
int3
pop
iret
pop
push
fidivr
cmp
add
dec
popf
das
inc
aad
jmp
sbb
fcomp
cs
jo
daa
cmp
int
cmp
xchg
pop
mov
and
xchg
enter
stc
mov
push
and
push
repz
mov
dec
dec
xor
rol
mov
cmp
leave
add
inc
ins
dec
pop
inc
mov
(bad)
sub
dec
jne
sub
mov
push
cmp
dec
xchg
inc
scas
loop
imul
mov
inc
sub
out
dec
test
jl
inc
cli
aaa
xor
mov
ficom
sub
jbe
dec
pop
and
add
mov
sbb
(bad)
mov
(bad)
cli
cmp
ja
adc
cmp
xor
cdq
das
cld
test
in
retf
fimul
dec
and
push
mov
(bad)
push
and
sbb
mov
repz
sbb
push
xor
dec
inc
retf
pusha
arpl
push
sub
hlt
jmp
inc
ret
mov
jae
(bad)
push
mov
outs
mov
push
cmps
jl
xor
push
js
lahf
dec
call
add
sub
imul
adc
jnp
ffreep
pop
ret
arpl
add
out
fisttp
in
sub
xor
in
sub
mov
jle
js
rcr
retf
mov
fcom
lea
in
xchg
xchg
inc
inc
(bad)
repz
ins
sbb
inc
xchg
int3
stc
dec
rol
pop
adc
xor
inc
clc
lock
pop
xchg
push
fdivp
pop
push
mov
mov
rep
scas
dec
mov
lods
js
mov
in
jp
cmp
popa
jb
lods
push
xchg
dec
inc
pop
add
lea
popa
(bad)
dec
pop
pop
cdq
jmp
nop
or
push
cmp
push
inc
add
cmps
dec
inc
sub
adc
and
mov
in
jb
or
pop
enter
ins
adc
dec
or
adc
ss
lea
aas
mov
dec
add
dec
mov
shl
movs
sbb
inc
push
push
jns
inc
test
ret
xor
mov
mov
and
jae
adc
dec
inc
jp
int
pop
sub
fstp
bound
es
jb
push
aas
push
mov
out
call
sub
jl
sbb
addr16
pushf
or
mul
mov
(bad)
cmp
push
rcr
movs
loopne
or
test
adc
std
mov
adc
test
push
push
sub
and
jns
pop
jbe
into
add
mov
aaa
inc
jg
test
mov
jae
jmp
ins
bound
pop
or
adc
outs
and
and
xlat
ffreep
aam
sub
test
push
shl
popa
mov
iret
ror
jle
xor
jns
jne
cdq
xchg
or
sbb
add
mov
pop
out
xor
pop
sbb
ficom
cdq
pushf
sar
mov
jno
add
mov
sbb
cmp
scas
xchg
pop
cli
sub
inc
hlt
xor
test
xor
mov
pop
mov
or
inc
sbb
add
mov
dec
xchg
add
jne
cmp
add
xor
xchg
add
rcl
pushf
(bad)
push
imul
jp
inc
jb
(bad)
mov
mov
in
scas
popa
inc
mov
aam
ds
jb
je
mov
and
jb
movs
jecxz
push
fldenv
jp
pop
xor
add
and
in
(bad)
dec
dec
bound
xor
out
pop
call
imul
inc
mov
cs
mov
fs
inc
hlt
lahf
ret
mov
nop
pop
add
mov
outs
jg
ror
pop
jge
das
mov
push
enter
cmp
cmp
imul
fdivr
adc
mov
pusha
(bad)
jle
mov
xchg
stos
add
pushf
push
jns
aas
stos
pusha
ffreep
and
ins
aam
ss
pop
mov
sub
pusha
mov
sbb
pop
jp
adc
adc
jb
pop
sbb
jnp
jecxz
xchg
pop
call
rcr
push
repnz
pop
mov
iret
sub
dec
rcr
jb
push
push
dec
out
or
pop
popf
sbb
or
je
jne
fs
sar
sahf
cmps
lahf
sub
iret
push
mov
mov
gs
es
cwde
es
pop
inc
leave
pop
jns
jmp
cmp
sub
mov
xor
xchg
stos
(bad)
jmp
sbb
xchg
push
pop
and
inc
and
pusha
adc
sub
in
je
sub
inc
aas
sbb
inc
cdq
outs
mov
ret
int3
adc
inc
mov
lods
repnz
pop
and
and
dec
cli
fdiv
inc
rcr
sub
jmp
lds
(bad)
push
sub
andnps
loopne
dec
test
cdq
jl
inc
int
lock
clc
arpl
mov
ror
xor
add
scas
xlat
or
and
cs
sbb
xor
js
fwait
leave
ret
call
pusha
sbb
fdiv
xchg
ror
js
jecxz
dec
xor
rcl
out
test
and
fbstp
adc
shl
mov
jb
jne
call
rcl
pop
sub
pop
or
movs
dec
lahf
xchg
sbb
je
ja
cmc
sub
out
dec
aas
fadd
cmp
movs
aaa
jbe
push
loope
ss
fild
pop
into
sbb
xlat
sbb
fs
xchg
loope
mov
movs
loope
ja
sbb
out
jnp
retf
dec
mov
lock
xor
scas
cs
mov
je
jae
jmp
jmp
hlt
loopne
lea
iret
jo
popf
jle
aaa
fldl2e
add
lahf
shr
sub
jge
mov
dec
cmp
dec
pop
inc
fisubr
popa
fwait
mov
aas
xor
in
dec
adc
cmc
pusha
xchg
jecxz
and
sub
scas
sbb
adc
daa
fadd
ins
outs
dec
and
(bad)
pop
push
mov
cmps
cmp
xor
mov
popa
popf
mov
inc
adc
dec
mov
test
and
jmp
pop
xor
fs
push
cmps
test
daa
popa
clc
enter
test
push
fld
iret
xor
and
mov
popf
addr16
mov
stos
clc
repnz
mov
icebp
inc
push
mov
fdivr
jno
lock
sti
cwde
sbb
in
inc
pop
or
pop
fnstenv
repnz
sub
jb
dec
es
out
mov
cmps
mov
pop
outs
lea
push
sar
sub
cmp
das
dec
and
push
inc
jbe
adc
and
and
popa
mov
in
xor
xchg
dec
in
shl
fs
movs
and
arpl
(bad)
xor
add
je
cld
and
cmp
mov
arpl
adc
or
sbb
mov
and
cmp
in
jge
stc
ja
push
retf
(bad)
addr16
(bad)
pop
and
cld
push
dec
add
add
sub
std
sbb
xlat
sub
push
and
adc
in
and
in
pop
pop
bound
popa
in
aaa
in
idiv
clc
cmps
(bad)
jmp
aam
adc
add
xchg
retf
sbb
icebp
push
dec
xchg
mov
mov
inc
imul
nop
mov
out
adc
lea
mov
dec
loope
ins
mov
daa
ins
push
(bad)
mov
jb
mov
nop
repnz
jo
mov
fst
mov
fisub
icebp
retf
mov
aam
div
popf
loope
push
dec
inc
pop
dec
inc
es
xor
loopne
sub
stc
ds
shr
dec
inc
adc
cmp
jnp
lock
sub
inc
dec
cmp
pop
mov
and
mov
out
mov
jmp
jbe
jle
ds
jno
dec
cmp
xchg
jge
push
push
test
stos
sub
(bad)
cmp
push
sbb
xchg
sbb
sub
ret
imul
sar
mov
in
clc
xor
ret
and
pusha
data16
cdq
test
outs
sub
pop
enter
xor
jle
(bad)
cmc
jecxz
mov
inc
sbb
cli
loopne
inc
dec
dec
dec
test
cli
fucomp
cmp
mov
add
retf
shl
mov
aad
fucomip
jne
xchg
inc
rcr
or
jge
xchg
shl
xchg
pop
cdq
test
inc
mov
mov
imul
jae
test
(bad)
sbb
sub
pop
inc
jbe
jl
mov
mov
sahf
inc
call
sbb
outs
lods
and
and
pop
sbb
retf
bound
inc
imul
ins
xlat
pop
sbb
mov
sbb
sub
clc
or
iret
sub
outs
adc
xchg
ret
adc
push
mov
sysenter
fwait
clc
pop
clc
stos
or
fild
jp
mov
mov
xchg
mov
inc
(bad)
pop
nop
in
mov
call
mov
fwait
ins
sub
xor
das
pushw
mov
in
sahf
pop
pop
repnz
pop
mov
xor
or
fisttp
retf
test
or
iret
mov
retf
jp
imul
or
adc
mov
or
pop
jns
sti
rcr
js
add
and
mov
mov
outs
jne
add
xlat
sbb
retf
push
aad
je
xchg
xor
pushf
adc
cdq
push
popa
xlat
test
cmp
sbb
int
lahf
sbb
dec
jno
in
sub
xlat
jne
loope
or
xor
push
outs
(bad)
repnz
dec
(bad)
cli
jbe
mov
(bad)
pop
xchg
or
mov
xchg
pop
gs
ret
push
push
mov
icebp
lock
stos
adc
addr16
(bad)
cmp
jecxz
imul
out
adc
mov
retf
mov
xor
stos
add
ja
adc
test
mov
push
sub
cs
icebp
inc
adc
sub
xor
cmp
jp
mov
loop
je
xchg
push
or
sub
sub
inc
aad
loopne
dec
cli
or
sbb
mov
mov
jb
push
dec
mov
mov
mov
add
adc
adc
fistp
push
add
sbb
std
adc
iret
(bad)
sbb
mov
or
sub
retf
push
xchg
(bad)
dec
js
int3
in
pushf
xchg
or
jmp
push
sub
add
adc
movs
push
jbe
out
and
fcmovnbe
jmp
inc
pop
not
xor
push
jae
xchg
fstp
test
jl
bound
mov
dec
cmc
dec
cmp
xchg
daa
push
mov
or
cmp
retf
add
jb
ror
xchg
outs
leave
xchg
popa
shl
xor
push
imul
adc
jns
loopne
xchg
pusha
ja
shl
sub
lea
fcom
mov
xor
popf
push
aam
xchg
loopne
xor
daa
ins
and
ins
push
outs
and
and
fmul
mov
inc
jge
int3
or
sti
mov
cli
inc
add
jmp
and
(bad)
loopne
daa
pop
sbb
sub
push
pop
add
push
push
sub
clc
adc
jne
add
sub
push
xor
movs
inc
movs
aaa
(bad)
cwde
inc
cdq
pop
push
mov
and
test
ret
pop
sub
arpl
push
jns
jecxz
inc
in
gs
ja
or
inc
xor
sbb
ficom
pop
(bad)
arpl
add
push
movs
sbb
add
pop
imul
or
push
loopne
out
inc
cwde
popa
sbb
adc
iret
sar
pop
pop
xor
hlt
neg
jns
hlt
fild
(bad)
xor
xor
mov
outs
sahf
jnp
xor
lds
jmp
adc
and
aas
in
daa
pop
dec
pop
inc
mov
sub
mov
dec
mov
repnz
jb
jnp
loopne
push
push
jmp
cmc
jmp
retf
xchg
xchg
repz
adc
iret
outs
or
or
cwde
cmps
ror
sub
aaa
inc
test
nop
sub
loopne
push
fdivr
aas
mov
xor
inc
adc
mov
mov
inc
(bad)
add
xor
dec
mov
inc
fcomi
into
pop
mov
lock
lar
loope
xor
nop
scas
leave
cli
sahf
stos
loop
not
ins
outs
push
loope
cmc
push
mov
or
fwait
or
(bad)
daa
call
adc
push
jle
mov
rol
fdivr
test
and
test
inc
iret
pop
mov
mov
dec
ins
sub
aaa
xor
push
cld
push
xor
in
mov
cmp
call
ins
jecxz
(bad)
lods
out
adc
jae
xor
les
nop
and
imul
scas
repnz
popf
les
mov
push
mov
sbb
out
mov
fidivr
xchg
or
call
sub
(bad)
shl
push
push
cmp
adc
stc
jbe
lds
or
pop
inc
pop
or
test
sub
cli
inc
pop
je
xchg
and
sub
pop
sbb
dec
jp
fwait
(bad)
retf
outs
mov
jb
cmc
dec
pop
aaa
das
imul
jge
dec
sub
ja
jno
sub
test
mov
les
push
fstp
stos
jbe
fisttp
out
loope
cli
gs
pop
clc
or
xor
clc
lahf
or
cmps
or
fmul
xchg
mov
jg
and
sbb
test
jbe
xchg
into
adc
imul
sbb
data16
aam
jmp
sbb
iret
fidiv
test
jmp
dec
xchg
into
loope
pop
xchg
xchg
je
int
mov
ds
cmp
sbb
pop
xchg
push
stos
mov
sub
out
cdq
sub
inc
add
mov
mov
and
int
push
mov
cwde
ins
lock
inc
inc
fcomp
or
stc
and
aaa
aam
and
cmp
nop
retf
pop
adc
mov
or
mov
xlat
adc
out
arpl
sub
test
sub
cmps
adc
lds
into
not
or
mov
pop
sub
pop
jg
and
jle
and
push
cdq
cmp
or
xchg
das
arpl
lea
pop
add
stc
inc
jo
outs
adc
xor
push
add
enter
test
jae
sub
mov
xchg
ja
xchg
sbb
dec
sbb
inc
xor
push
cmp
outs
ins
sub
adc
clc
test
sub
nop
push
rcl
out
mov
xor
imul
dec
es
dec
dec
cld
clc
es
and
sbb
outs
inc
int
pop
push
jecxz
pop
push
(bad)
retf
dec
mov
or
out
int3
cdq
sbb
sbb
mov
jb
ror
push
xchg
jbe
or
mov
xchg
pop
pop
push
dec
inc
inc
test
add
iret
(bad)
out
sbb
add
mov
xchg
lds
das
mov
xchg
pop
mov
fst
pop
es
inc
jmp
ja
aad
sub
nop
popa
xor
ja
sub
out
mov
add
push
lods
dec
sbb
add
and
cs
cmp
popa
repnz
popa
pushf
jb
out
clc
mov
outs
pop
mov
mov
adc
pop
sbb
jno
scas
pop
nop
(bad)
and
jg
mov
icebp
xor
leave
out
lock
leave
test
dec
shr
jecxz
imul
repnz
lahf
xchg
mov
gs
mov
inc
ret
xchg
fcomp
lahf
dec
dec
mov
sub
ins
daa
pop
ss
pop
push
cli
mov
add
stos
or
or
xor
xchg
mov
lods
aad
test
std
jg
aaa
sbb
pop
sub
mov
inc
rcr
push
clc
and
inc
pop
sbb
fadd
or
mov
std
das
adc
mov
repnz
mov
jmp
inc
pusha
push
stos
scas
in
das
inc
mov
arpl
cmc
xchg
test
retf
in
ins
push
ds
fwait
inc
fmul
push
call
leave
lahf
icebp
cmps
and
and
jl
mov
test
aam
ficom
popa
in
pop
div
push
jmp
and
pop
ret
cmp
outs
xor
xchg
out
std
stc
cmps
push
sti
dec
call
sbb
pop
and
inc
daa
jae
lock
out
dec
jo
lods
jmp
or
loopne
dec
or
and
movs
and
push
fwait
dec
inc
loope
(bad)
jns
xchg
push
dec
mov
pop
jp
stos
dec
dec
(bad)
push
icebp
inc
sub
add
bnd
retf
cmc
mov
sub
inc
push
icebp
fbstp
das
out
aas
jle
sbb
dec
xchg
pop
or
test
int3
cmps
rcl
shl
lea
push
cmps
cmp
int
in
fsub
push
retf
cmc
(bad)
cmc
jg
sub
dec
icebp
push
cmps
(bad)
enter
stc
pushf
pop
retf
sbb
jmp
int
leave
push
loopne
iret
inc
mov
por
in
(bad)
xchg
mov
cwde
outs
sahf
sbb
and
call
mov
push
or
inc
rcr
fimul
pop
aas
repz
jo
sub
xor
popf
mov
pop
clc
mov
std
and
add
jbe
pop
neg
mov
loope
xchg
pop
push
dec
sar
fidivr
cmc
sub
jp
test
mov
test
jg
xor
xchg
jg
bndstx
fdiv
daa
dec
push
fidivr
in
xchg
js
add
fnstsw
xchg
mov
jb
shl
adc
lods
dec
mov
inc
inc
out
mov
bound
ror
add
and
sub
imul
inc
jmp
loop
mov
icebp
gs
mov
ret
push
stos
jmp
dec
jmp
stc
cmp
je
sub
lds
mov
sar
in
jp
sbb
jb
cmc
or
je
into
jg
hlt
(bad)
inc
xchg
inc
cmp
pop
std
fwait
jo
inc
sbb
es
or
jmp
push
adc
call
jbe
xchg
jbe
pushf
push
xchg
addr16
push
xchg
shr
(bad)
loopne
jp
adc
es
es
add
sbb
pop
xchg
gs
into
mov
lea
je
outs
mov
les
scas
jbe
sahf
mov
aad
(bad)
loopne
cmc
ja
imul
rcl
mov
mov
and
inc
(bad)
test
sub
mov
push
dec
and
repnz
jmp
dec
ret
cmps
and
sbb
iret
push
loop
lahf
pop
out
inc
inc
into
and
and
iret
and
xor
xor
xchg
call
std
sahf
ds
lea
out
inc
push
xchg
test
xor
push
xchg
test
sub
rdtsc
pop
xor
(bad)
jle
pop
iret
mov
jg
repz
jmp
test
pusha
mov
cmc
fldl2t
cmp
repz
push
test
out
loop
repz
test
push
adc
in
cmc
add
pushf
push
push
pop
lods
ss
dec
xchg
lahf
dec
mov
jge
xor
aaa
fldenv
in
in
sbb
cmp
add
out
adc
xchg
xchg
icebp
xchg
mov
xlat
mov
mov
fcmovnu
xor
scas
lds
dec
loopne
call
scas
and
sub
inc
iret
sbb
sbb
inc
shl
ret
xor
xchg
jg
sub
jle
repz
pop
jmp
sbb
xchg
loop
push
dec
aas
ror
adc
fiadd
addr16
pop
mov
or
pop
mov
jl
inc
repnz
pop
mov
add
jnp
jo
dec
icebp
push
jb
ins
and
mov
gs
das
dec
iret
dec
je
(bad)
es
dec
nop
fidiv
pop
js
dec
cmp
cmp
jle
mov
fsub
into
cmc
cwde
mov
shl
xchg
je
cmp
sub
shr
cmps
pop
mul
int
mov
es
add
push
mov
jns
pushf
xor
out
inc
mov
add
mov
xor
dec
icebp
jmp
cmps
cmp
stos
mov
sbb
retf
inc
addr16
or
mov
xchg
cwde
aad
pop
call
in
test
add
add
push
iret
mov
pop
fwait
adc
xchg
inc
jmp
cmp
imul
cmp
mov
xor
dec
fdivp
aad
dec
int
neg
xor
and
lahf
sub
or
pop
or
les
call
pop
sub
xchg
mov
ins
mov
sbb
sub
mov
dec
xor
fwait
ss
xchg
pop
xchg
lahf
mov
enter
cmp
sbb
fisttp
pop
es
cmp
outs
push
sub
mov
movups
add
dec
push
shrd
pop
sub
cmp
lods
clc
xor
inc
cwde
mov
stos
inc
mov
or
aam
or
cmp
add
in
add
mov
call
cmp
iret
test
push
dec
out
sbb
aaa
lahf
mov
lods
cmps
outs
(bad)
js
dec
xor
jle
inc
xchg
inc
inc
jno
mul
cdq
fldlg2
pop
movs
and
clc
sub
push
shl
ins
fisubr
aas
jmp
les
gs
cmc
add
popf
pop
xor
push
out
sub
aas
popa
inc
test
mov
inc
repnz
imul
fadd
sub
mov
mov
mov
mov
loope
call
les
jae
popf
in
loope
retf
(bad)
fldenv
pusha
ins
dec
sar
xchg
scas
push
pushf
ja
(bad)
rol
(bad)
and
cli
popa
popf
push
sbb
push
jg
jbe
outs
dec
pop
hlt
sbb
cmps
or
fdiv
fistp
and
and
movs
out
or
aam
jg
mov
inc
adc
push
adc
xchg
sbb
pop
js
test
cmc
cmp
sub
mov
mov
stos
inc
dec
mov
arpl
mov
or
jl
mov
push
or
retf
jnp
jo
(bad)
daa
imul
lahf
(bad)
and
repz
dec
dec
inc
iret
fucomi
out
cmp
daa
mov
sbb
lock
mov
repnz
scas
xor
jb
dec
jo
test
inc
jge
push
and
sub
jg
or
inc
inc
lahf
adc
mov
(bad)
mov
enter
lds
xor
xor
leave
out
pop
vpshufd
jb
pop
mov
adc
sub
push
xchg
mov
scas
pusha
cmps
mov
scas
retf
push
add
add
add
jmp
int
das
cmp
stos
push
inc
(bad)
dec
out
sti
int3
cmc
add
xchg
mov
ins
dec
mov
(bad)
add
push
pop
in
sbb
fmulp
(bad)
and
out
push
push
xor
inc
lahf
(bad)
bound
test
and
shl
jno
ret
je
pop
pop
inc
jle
mov
push
(bad)
fimul
add
neg
inc
xor
in
pop
pop
jns
and
or
ss
dec
mov
imul
and
mov
inc
loop
lea
mov
icebp
movs
stos
jg
xchg
add
xchg
sbb
mov
xor
push
movs
dec
mov
inc
cmps
out
jg
mov
push
sbb
xchg
repnz
test
test
sub
dec
aad
ret
xor
dec
jp
pop
and
push
push
(bad)
and
or
in
(bad)
das
popf
sub
pop
clc
mov
int
test
movzx
ss
mov
jmp
xchg
and
jno
inc
push
add
or
addr16
mov
xchg
jmp
xchg
xlat
jnp
cs
js
jno
popf
fsubr
fsub
jle
out
jo
dec
pop
add
bnd
mov
jbe
push
or
lea
sbb
daa
push
sti
rcl
add
ins
in
aaa
and
dec
in
cmp
(bad)
sbb
ficom
rcr
retf
inc
fldenv
arpl
fcomp
sbb
mov
pop
ss
aad
test
pop
cmc
jno
jp
xor
lock
icebp
loopne
mov
sbb
dec
fsubr
cmps
dec
and
or
and
sahf
stc
retf
fcom
xor
data16
sub
adc
mov
shl
pop
push
and
push
and
jecxz
xchg
mov
sub
jmp
jno
not
jmp
outs
das
add
xchg
(bad)
cmp
cmp
xor
int
cmp
das
push
jmp
int3
gs
cmps
and
jae
fcomp
loope
cmc
mov
call
pop
daa
add
cmps
adc
shr
jnp
pop
xchg
popa
rol
mov
add
out
xchg
aas
(bad)
sahf
fstp
adc
stos
mov
leave
push
cmps
icebp
sti
loope
xor
shr
dec
in
inc
cmp
or
rcr
ret
inc
aad
jo
popf
outs
popf
push
jbe
cli
pushf
inc
dec
call
mov
dec
jmp
jno
and
ins
push
push
ror
sbb
bound
shl
test
les
in
dec
outs
mov
and
data16
push
inc
fisttp
fld
xchg
addr16
xchg
call
sbb
icebp
jge
in
dec
inc
push
js
sub
jne
sbb
pop
fcom
xchg
(bad)
lock
into
loope
inc
xor
and
test
sbb
mov
pop
adc
cmps
in
lds
jo
movs
cmp
dec
cmp
pop
int3
out
mov
jle
dec
fwait
dec
and
pop
mov
dec
pop
or
or
jnp
sub
or
jle
xor
bswap
fnstsw
cmp
cdq
xor
aam
or
add
add
push
adc
gs
jbe
addr16
js
retf
(bad)
mov
(bad)
or
inc
ror
dec
(bad)
mov
mov
jp
icebp
and
popf
xor
push
ins
test
add
enter
outs
test
test
pop
inc
lds
push
cmp
lahf
sub
mov
in
push
addr16
mov
dec
cmp
add
fldenv
(bad)
int3
pop
ss
xchg
or
stos
fadd
popa
in
inc
cmc
adc
leave
leave
movs
cs
sub
retf
sbb
cmc
cwde
jnp
pop
jb
jbe
and
sti
pusha
cmc
sub
jae
in
fiadd
mov
aam
cmps
push
adc
add
cld
push
dec
xchg
retf
cmp
out
dec
add
push
mov
xchg
hlt
les
jg
xchg
add
mov
sub
jle
dec
dec
sbb
or
out
mov
test
rol
sbb
test
mov
repz
jae
mov
pop
or
jge
dec
in
test
popf
ins
sbb
lahf
xchg
pop
jno
mov
or
dec
inc
out
adc
data16
push
lahf
dec
jns
inc
cwde
fsubr
mov
adc
jae
jb
rcr
das
sbb
bnd
into
sub
dec
pushf
stos
push
mov
and
mov
fild
push
int3
add
push
outs
rep
cmp
adc
clc
cmc
xchg
sbb
cs
in
(bad)
and
cmc
imul
lahf
push
aaa
mov
les
add
stos
lahf
pop
aaa
lock
adc
adc
repz
dec
dec
ins
push
jp
imul
cmp
mov
sub
fmul
cs
cld
jmp
mov
fimul
dec
fistp
push
dec
into
cmp
and
inc
sub
cmp
push
sbb
aad
scas
pop
arpl
test
push
mov
and
inc
xchg
xchg
enter
or
cmps
inc
add
push
add
pop
popa
retf
add
xchg
push
dec
jno
jbe
ror
jmp
mov
sub
xor
xchg
sbb
cld
movs
aad
pop
sub
sbb
mov
mov
pop
mov
pop
and
mov
push
popa
aas
subps
pushf
push
inc
add
test
hlt
in
out
out
mov
je
mov
xchg
dec
pop
mov
in
mov
out
lods
cmp
loop
xor
dec
call
jne
mov
or
cmp
mov
fild
das
mov
adc
psubq
and
neg
jne
sub
jnp
inc
mov
pushf
xchg
js
cdq
ret
sbb
xor
push
mov
adc
es
into
rcl
sub
mov
fwait
sub
mov
sub
pop
or
xchg
mov
sbb
add
mul
mov
and
mov
sbb
or
jle
clc
dec
(bad)
add
jns
std
ja
ret
adc
mov
cmc
pop
cmp
std
dec
mov
push
addr16
iret
sub
jp
cmc
pop
imul
and
pop
fsub
imul
test
fldcw
retf
inc
data16
fistp
inc
add
cs
sti
mov
add
in
pop
push
sti
inc
push
mov
jecxz
jmp
sbb
daa
sub
pop
int
fstp
lods
sbb
dec
push
sar
cld
dec
out
pop
(bad)
or
daa
hlt
fsub
and
push
jg
jecxz
cmp
pop
int3
pop
add
xchg
cmp
fistp
mov
pop
mov
push
and
cs
aad
jo
daa
(bad)
mov
sbb
aam
cmp
adc
cmp
pop
and
and
add
sub
out
cld
mov
call
fwait
dec
icebp
adc
nop
ss
mov
push
test
pop
mov
addr16
add
add
push
inc
retf
ss
pop
cwde
fsubr
sbb
sbb
and
sar
(bad)
call
mov
adc
inc
adc
test
dec
jmp
sbb
sbb
push
adc
dec
sti
jge
loope
addr16
inc
js
cmps
out
mov
into
jmp
adc
adc
cmp
mov
jae
mov
jle
stos
push
mov
cmp
pop
push
fild
jb
dec
mov
pop
js
hlt
mov
and
cld
push
dec
sbb
out
leave
sub
das
sub
pop
sbb
das
cmp
pop
leave
enter
or
retf
mov
and
fs
das
int3
inc
or
out
fdivr
or
mov
loopne
sbb
cld
xor
mov
sub
cmps
(bad)
sub
jg
test
dec
add
mov
imul
aaa
xchg
das
mov
cdq
inc
mov
sti
(bad)
in
popf
mov
jmp
cmp
test
xchg
lock
or
loop
cmps
(bad)
retf
test
lock
cwde
mov
and
stos
sub
push
aad
lds
repz
pusha
jns
xor
sahf
mov
and
fdiv
and
push
add
jbe
push
cmp
adc
lods
in
push
mov
sub
sub
outs
test
mov
add
ja
fcmove
stos
mov
mov
jb
js
sti
xchg
fldcw
cmp
mov
lahf
mov
ss
sbb
loop
jnp
sub
int3
jnp
sbb
lea
aad
in
sub
or
mov
mov
pop
add
cmps
fs
and
shl
and
lahf
mov
push
adc
push
pop
jecxz
sbb
jp
in
aam
shl
xchg
(bad)
push
cmp
into
shl
scas
mov
js
pop
(bad)
sbb
es
fcomip
dec
enter
pusha
fwait
stc
cld
pop
pop
cmp
xchg
repnz
dec
cdq
sbb
jae
movs
inc
cmp
sbb
loope
or
aas
dec
lods
sbb
mov
inc
xchg
push
pop
and
(bad)
outs
xchg
cld
mov
add
mov
and
test
daa
ins
mov
add
cmp
and
inc
loope
push
test
jb
sahf
ret
pop
fiadd
xor
xchg
stc
mov
aaa
in
cmps
(bad)
mov
icebp
fs
push
adc
ins
hlt
sub
jae
and
repnz
xor
les
or
in
and
sub
fild
stc
into
jecxz
call
sub
nop
lea
je
sbb
popf
mov
sub
mov
in
mov
or
sbb
push
and
pop
imul
cmp
mov
dec
dec
push
into
adc
bndstx
call
mov
adc
or
test
popf
adc
call
jb
(bad)
in
xchg
dec
jns
lahf
pop
stos
jmp
sub
jmp
pop
lods
test
xor
mov
je
div
push
stc
js
pop
sub
cmp
push
mov
adc
in
das
and
daa
dec
mov
cwde
sti
jno
pop
pushf
out
xor
aaa
xlat
add
jns
dec
fidivr
(bad)
retf
sbb
fistp
xor
add
popf
test
push
int
pop
dec
and
lahf
xor
addr16
sahf
push
cmp
leave
cmp
mov
neg
leave
xchg
or
lock
scas
push
and
inc
xor
add
adc
das
lock
icebp
sbb
push
pusha
enter
enter
nop
pop
inc
hlt
jb
push
fld
xor
adc
cmps
mov
setae
inc
inc
inc
ins
sub
adc
aas
cmp
popa
push
jp
cs
lods
pop
retf
jmp
idiv
or
push
sbb
jb
cwde
and
aas
dec
jns
cwde
pop
inc
dec
loopne
sbb
add
pop
or
inc
lock
and
xchg
mov
mov
jecxz
sbb
sbb
ja
or
adc
jb
leave
mov
adc
fnstenv
aaa
aaa
and
sbb
or
sub
enter
(bad)
lock
clc
mov
arpl
cdq
test
pop
fucomp
movs
inc
leave
inc
xchg
inc
ror
pop
je
cs
xor
popf
test
xchg
std
sbb
xor
pop
popf
sub
cmc
push
cs
and
pop
stc
or
sub
inc
pop
jecxz
fadd
mov
ja
ds
dec
es
cmp
or
sti
dec
sahf
loop
into
or
and
dec
ret
sub
loope
test
popf
dec
pop
movs
test
xchg
outs
jecxz
xor
xor
and
add
retf
sub
pop
aam
mov
cmps
add
test
or
aaa
in
xchg
push
ins
(bad)
popf
sub
loop
int3
aad
shl
push
pop
jb
std
add
in
adc
dec
mov
or
in
scas
fwait
or
cmp
pop
loopne
(bad)
cmp
out
xchg
mov
scas
test
and
fchs
cmps
fdivrp
lock
js
push
sahf
pop
mov
call
push
mov
xchg
mov
retf
push
str
pushf
sbb
fld
rol
dec
loope
adc
sbb
pop
dec
push
and
inc
stc
out
push
lahf
or
sbb
leave
and
xor
inc
out
mov
std
daa
push
lods
or
dec
inc
lahf
je
or
cmp
std
add
xchg
cwde
imul
add
push
or
jg
fadd
pusha
mov
mov
mov
adc
and
pusha
push
mov
mov
fnstenv
inc
mov
inc
and
ins
or
jp
movs
and
data16
pop
aad
xor
cmp
pop
adc
int
jbe
mov
inc
aaa
push
call
popf
loopne
icebp
jg
das
inc
in
xor
test
cmp
jns
jns
rcr
dec
aad
push
pop
clc
sbb
sbb
lea
adc
adc
pop
jl
leave
fmul
(bad)
or
ins
(bad)
and
pushf
in
popf
pop
and
sbb
adc
pop
pop
or
push
ficomp
aaa
(bad)
jne
je
fild
push
add
add
jl
xlat
push
sbb
push
retf
aas
push
fsub
sub
popa
loope
leave
sbb
repnz
xor
push
popf
sbb
pop
jnp
repnz
mov
cmc
add
xchg
hlt
dec
ds
pushf
mov
lods
xchg
xchg
fbstp
(bad)
into
jle
cmp
push
int3
outs
push
retf
(bad)
jnp
and
hlt
out
test
xchg
test
aad
(bad)
sbb
dec
call
dec
enter
xchg
(bad)
jno
leave
xor
div
inc
(bad)
or
neg
rol
jle
dec
ficomp
jmp
jno
lahf
inc
ror
aaa
dec
inc
jle
popa
pop
mov
jmp
push
push
pushf
sub
(bad)
pushf
pop
addr16
xor
dec
jnp
jae
jns
sub
mov
jle
jecxz
in
out
mov
test
ins
out
out
sbb
stos
(bad)
or
ja
sbb
pop
inc
aam
dec
add
out
lock
pop
ins
mov
sbb
jge
sar
or
inc
das
jns
xchg
dec
cmp
int3
push
ror
and
lock
push
fild
(bad)
or
push
jo
mov
xchg
pop
div
loope
jbe
sbb
pushf
push
pop
mov
xchg
movs
mul
pop
push
pop
mov
div
es
cmp
push
sbb
mov
mov
push
mov
inc
adc
sub
push
in
mov
mov
mov
cld
mov
sub
push
addr16
inc
dec
fwait
sahf
ds
inc
push
sub
rol
cs
jb
xor
test
mov
es
xchg
and
push
add
mov
iret
sub
fstp
je
call
mov
pop
inc
test
enter
das
out
loope
sub
outs
or
and
sbb
aam
xor
mov
jge
stc
and
ror
aaa
or
mov
adc
pop
pop
ins
popf
mov
gs
in
(bad)
movs
inc
dec
cmp
pop
inc
pop
les
jbe
mov
jl
pop
outs
test
push
cwde
bound
xor
mov
mov
pushf
pop
add
ins
add
inc
sbb
scas
not
sub
jle
and
cmp
call
sbb
inc
lock
fwait
mov
lods
adc
fdiv
bnd
sbb
push
jge
cmp
dec
cmps
fldenv
jg
push
retf
push
mov
leave
call
lds
or
pushf
lahf
jno
inc
and
sbb
inc
push
jecxz
sahf
test
or
xor
mov
sahf
aaa
(bad)
and
add
retf
out
jmp
xor
imul
pop
jns
fistp
push
clc
mov
loopne
out
icebp
aam
pusha
pop
std
les
pop
mov
push
jb
icebp
sbb
sbb
inc
mov
shl
aas
daa
lahf
fisttp
pop
sub
add
rcl
cmp
sbb
adc
stos
jne
popf
(bad)
out
and
inc
push
test
cmp
mov
add
cmp
out
arpl
mov
push
js
or
or
aam
sbb
fldl2e
sub
adc
mov
adc
xor
xchg
sar
xor
sbb
pop
hlt
cmp
je
arpl
out
ret
lea
and
sbb
sbb
fisubr
in
inc
in
push
add
xor
mov
mov
lahf
mov
inc
(bad)
ins
pop
and
dec
push
inc
dec
aad
or
and
imul
inc
push
inc
(bad)
vmread
out
pop
cmp
dec
fst
ins
mov
sub
xor
xchg
adc
pop
cwde
adc
and
pop
and
dec
sti
out
stc
xlat
add
sti
femms
sti
scas
out
outs
sub
push
test
out
xchg
sbb
out
sbb
mov
(bad)
sbb
cld
outs
xchg
call
(bad)
pop
dec
jg
cmp
retf
add
out
pop
das
imul
and
mov
gs
dec
lds
out
ja
in
je
out
xchg
jg
mov
js
or
retf
popf
add
cmp
ror
or
push
retf
jae
lds
fwait
push
cmp
mov
rcr
dec
push
xlat
dec
lea
data16
pop
dec
aaa
xor
fiadd
ds
xor
mov
sub
popf
or
mov
loopne
jbe
cmp
jg
cmp
sub
push
cmp
das
shr
call
xchg
mov
push
mov
mov
dec
popf
mov
fwait
ret
pop
jae
loope
js
cmps
lea
inc
icebp
pop
push
cld
dec
retf
repnz
xchg
and
add
mov
int3
in
and
or
test
add
or
sbb
dec
sub
in
stos
sub
add
and
out
aas
inc
rol
mov
inc
test
(bad)
jne
cmps
sti
(bad)
pop
pop
pop
sub
pusha
aad
retf
fdivp
addr16
mov
jb
std
mov
inc
icebp
movs
push
dec
pusha
xor
pop
mov
and
ror
sub
jmp
lahf
leave
das
jle
push
push
push
loope
sub
push
clc
cmp
push
jmp
(bad)
fxch
std
xchg
dec
fisttp
(bad)
daa
xchg
add
shl
in
jne
or
outs
xchg
pop
je
push
mov
cmp
xchg
icebp
int3
sub
pop
adc
fld
cs
and
adc
xchg
or
jns
dec
xchg
retf
std
and
pop
push
cmp
stos
outs
jb
jbe
call
mov
std
dec
aaa
pop
rcl
push
jl
sub
mov
jae
mov
inc
repnz
cmp
sahf
mov
or
pop
leave
cmp
and
sbb
mov
sbb
out
movs
cwde
mov
add
xrelease
sbb
mov
lods
mov
dec
jmp
and
les
xchg
call
mov
outs
(bad)
xor
jns
fsubrp
aas
cmps
sbb
mov
jecxz
test
fld
xchg
and
test
lahf
add
push
dec
(bad)
out
sbb
xor
outs
cmp
pop
ret
sti
xchg
push
add
inc
adc
fst
dec
pop
repz
sbb
adc
add
or
stos
dec
fistp
jb
(bad)
addr16
dec
shl
fcmovnbe
add
cmovne
aaa
(bad)
sub
cmp
ret
and
and
loope
add
pop
jmp
add
push
pmaxsw
sub
lods
lods
jne
ror
retf
and
(bad)
aad
dec
jecxz
test
outs
outs
adc
rol
and
push
push
adc
inc
cmp
test
(bad)
sub
push
icebp
jmp
or
push
aad
sbb
pushf
mov
mov
or
mov
add
je
adc
cli
and
mov
mov
pop
pop
push
leave
jno
inc
leave
cmps
add
pop
es
jp
mov
aaa
ss
cdq
aas
jns
inc
jge
sbb
aam
inc
aaa
add
jecxz
scas
inc
test
mov
jg
loop
dec
fistp
push
repnz
jp
cld
jnp
int
mov
sbb
fimul
xchg
ja
or
sbb
sub
fimul
mov
out
sbb
ret
pusha
push
faddp
out
sbb
aaa
cmps
jae
pop
dec
xor
sub
xchg
cwde
ja
and
pop
adc
sti
xchg
xlat
aam
lock
xchg
pusha
arpl
cmp
xchg
ds
retf
add
scas
push
xor
sub
stos
inc
ret
mov
leave
jne
or
ins
pop
dec
outs
cmp
or
out
pop
pop
iret
push
xor
inc
popf
std
pusha
cmp
inc
push
jbe
test
mov
out
outs
and
mov
pop
inc
push
pop
mov
(bad)
pop
fisttp
inc
xchg
leave
push
pop
hlt
mov
int3
out
pop
(bad)
jns
fsub
inc
sbb
int
push
mov
xchg
test
and
push
sbb
dec
mov
repz
push
loop
mov
aam
jne
movs
ss
mov
pop
dec
push
dec
or
repnz
add
and
dec
jmp
or
add
jns
jno
sbb
rcr
ret
or
push
sbb
jo
dec
and
clc
xchg
inc
or
mov
or
push
popa
into
das
cs
jns
dec
push
dec
inc
retf
xor
mov
(bad)
mov
test
stos
push
data16
mov
sub
mov
ins
and
mov
mov
out
(bad)
ja
sbb
cmp
inc
mov
add
rcr
(bad)
pop
out
ficomp
aam
shl
or
stos
ucomiss
inc
dec
xor
inc
int3
or
cs
push
loope
inc
mov
sahf
pop
pop
and
ss
pop
cmp
in
cs
xchg
mov
jne
add
push
cli
loop
push
inc
arpl
cwde
or
test
call
and
jmp
push
inc
pop
jle
push
and
fimul
mov
aad
int
pop
sbb
mov
inc
repz
sti
mov
shl
loop
rcr
inc
sbb
shl
test
mov
in
pop
pop
pop
fmul
xor
stc
lea
xlat
inc
mov
pop
pusha
dec
push
push
xchg
in
sub
pop
mov
leave
mov
(bad)
jbe
cwde
jbe
imul
out
mov
dec
push
sub
mov
inc
pop
push
and
out
xor
sbb
sbb
pop
and
push
fbld
xchg
inc
loope
fiadd
push
inc
jmp
xchg
mov
jbe
sbb
nop
mov
lds
mov
jns
fwait
retf
mov
lock
xor
sbb
pop
push
popf
add
xor
cmps
lahf
or
and
push
lock
cmp
inc
pusha
push
push
imul
ret
mov
popf
sbb
sbb
xor
mul
and
int3
xor
mov
out
mov
mov
pop
mov
mov
dec
adc
test
in
(bad)
fnstsw
in
sbb
adc
imul
pop
rcl
pop
mov
xchg
mov
inc
push
out
inc
sqrtps
aas
out
lock
add
test
ins
xchg
daa
and
pop
sub
mov
sti
xor
clc
add
pop
fbld
or
rol
mov
or
jae
inc
outs
dec
sahf
out
pop
sub
xlat
pop
pushf
popa
inc
nop
pop
es
retf
xor
leave
mov
ss
mov
xchg
pop
sub
dec
shl
inc
cmp
sbb
xchg
jle
fcom
sub
ins
and
sbb
add
test
xchg
inc
xchg
mov
dec
push
cld
adc
je
mov
rol
sti
loop
or
repnz
inc
sbb
(bad)
lock
cmp
pop
lea
sub
leave
pop
sbb
pop
jno
sbb
mov
cmp
pop
dec
int
dec
adc
xor
out
(bad)
cmp
push
imul
in
mov
fadd
push
pop
daa
add
sub
fadd
mov
clc
fsubrp
add
loope
pop
jno
inc
mov
or
jne
xor
pop
dec
inc
nop
mov
and
inc
push
fs
sub
call
cmp
out
sbb
jg
inc
xlat
pop
mov
std
loopne
jbe
mov
cmp
add
retf
cmp
arpl
add
jbe
adc
outs
xchg
movs
mov
xchg
push
adc
stc
and
and
inc
jbe
loope
sbb
repnz
cmp
mov
and
xor
(bad)
aam
xchg
rcr
or
xor
pop
ret
je
mov
imul
push
into
mov
ja
ja
mov
dec
push
out
test
jne
sub
mov
sub
je
int3
mov
mov
adc
xor
mov
sbb
jge
jmp
cmp
fcom
rcr
xchg
outs
xor
inc
jnp
xor
ins
sub
mov
pushf
xor
mov
repz
icebp
mov
(bad)
or
mov
icebp
std
add
dec
in
adc
or
clc
leave
push
std
loopne
mov
(bad)
xor
cs
loop
popa
aad
(bad)
movs
movs
loopne
aad
test
out
out
and
sbb
xor
cmps
fs
xchg
add
mov
mov
fild
outs
mov
fcomp
jp
retf
cmps
mov
push
loopne
ret
push
sbb
pop
mov
int
push
push
aas
shl
dec
fisttp
movs
push
(bad)
fwait
iret
mov
jg
cli
repnz
push
mov
and
shl
sbb
mov
cli
aam
es
xchg
cmp
test
pop
xlat
mov
repz
rcr
test
mov
cmp
inc
lods
adc
jmp
push
sbb
scas
dec
repz
jecxz
popa
push
(bad)
shl
mov
sub
nop
mov
test
stc
imul
xchg
repnz
mov
dec
pop
pop
xor
(bad)
jb
mov
(bad)
(bad)
xchg
loopne
or
dec
jecxz
fadd
ret
jmp
sub
jge
dec
or
and
push
push
xchg
pop
or
and
fwait
es
fcom
or
mov
pop
unpcklps
add
and
in
mov
shr
cli
cmp
icebp
xchg
and
ins
cli
in
xchg
mov
lahf
mov
jle
inc
push
out
dec
loopne
xchg
pop
sbb
imul
inc
xchg
xchg
jg
mov
clc
jne
outs
call
mov
cwde
lods
in
fs
sbb
in
shr
jl
xchg
jle
jmp
jne
in
(bad)
pop
xor
xor
mov
mov
and
pop
cmp
mov
aas
stos
scas
add
scas
stos
in
mov
pop
ins
imul
loop
push
ds
pop
push
pop
inc
jne
xor
sbb
icebp
lock
push
test
jo
pop
pop
push
jbe
or
out
push
loopne
out
nop
jmp
sbb
push
and
out
pop
aas
mov
loope
fadd
jge
test
or
dec
scas
sub
mov
fwait
push
pop
jbe
test
add
shr
aam
rcl
jno
pop
add
bound
cwde
pop
or
pop
xchg
sub
xchg
mov
or
fadd
and
jp
stos
or
rcl
ret
dec
jne
jno
addr16
mov
jae
rol
enter
mov
mov
dec
fimul
inc
stc
fdiv
ins
add
add
scas
in
stos
inc
lock
mov
repz
adc
hlt
cmp
shl
cld
sbb
lds
test
dec
aam
cld
cmp
test
leave
scas
xor
dec
js
iret
dec
fidivr
inc
popf
xor
jle
xchg
add
mov
sbb
mov
jne
(bad)
mov
mov
sbb
ds
sub
cld
fnstcw
mov
rcr
or
jge
mov
cmp
jmp
cmp
push
inc
and
dec
pop
and
iret
adc
movs
inc
imul
int
ja
push
add
or
in
xor
sti
jp
cmp
sbb
add
jl
mov
sbb
dec
stos
add
movs
stos
or
pop
test
mov
data16
cmc
mov
inc
and
stos
scas
cwde
push
je
fisttp
mov
shl
inc
sub
xchg
dec
aad
dec
sbb
call
call
aam
xor
in
mov
mov
pop
int
xchg
les
xchg
cmp
repnz
pushf
or
sub
mul
push
aas
out
mov
pop
dec
sbb
cmp
lds
pop
(bad)
dec
mov
lods
mov
popa
leave
inc
popf
fwait
cmp
lods
stos
push
mov
and
push
jge
sbb
cmp
mov
xchg
pusha
cs
and
mov
xchg
in
sub
aaa
push
movs
cmps
mov
in
test
scas
add
or
les
lds
stos
xor
(bad)
sub
aas
cmc
pop
xchg
out
ins
jno
push
cmp
mov
sar
cmc
xor
and
in
sub
sbb
es
push
sbb
inc
push
call
ret
mov
dec
mov
shl
and
clc
aaa
add
test
push
dec
in
push
jnp
cmp
pop
dec
stc
xchg
push
outs
lods
jae
inc
js
add
cwde
std
aas
inc
test
out
arpl
popf
je
add
lods
push
out
ss
sti
add
cmp
sub
unpckhps
es
lea
and
sbb
les
fistp
repnz
cwde
shl
test
(bad)
into
movs
jo
scas
leave
xor
lods
push
pusha
out
sbb
dec
shl
jg
xchg
add
leave
mov
add
jns
aaa
retf
cmp
loope
jg
ror
lahf
jo
mov
sbb
sahf
pusha
test
jmp
ret
sbb
add
es
int
pop
mov
push
call
mov
in
fcom
sbb
repnz
mov
and
inc
je
mov
inc
add
jne
mov
pushf
xchg
pushf
jg
xchg
das
pop
lock
inc
iret
mov
sti
int3
dec
dec
aas
and
out
ins
add
push
mov
sahf
dec
lahf
and
retf
int3
jbe
mov
jmp
push
dec
or
cmps
and
pop
out
mov
cmp
fs
sbb
hlt
mov
cli
jne
jo
jecxz
mov
and
loope
or
ins
jmp
ja
push
dec
xchg
(bad)
dec
and
test
xchg
inc
add
and
pop
jmp
and
mov
pop
xor
add
or
int
push
inc
jecxz
inc
(bad)
pusha
in
push
jns
dec
std
or
mov
stos
fs
sbb
sub
es
aad
stos
xor
mov
cmp
fninit
out
cmp
and
pop
mov
jecxz
fisub
xchg
xchg
int
fs
inc
daa
cmps
xor
movs
pusha
jo
call
sbb
sbb
sbb
jmp
push
int3
test
dec
mov
pop
sub
aaa
jp
gs
into
inc
or
retf
cmp
pop
cmp
cmp
or
pop
sub
fdivr
inc
xor
push
adc
xchg
sbb
fldcw
xchg
pushf
js
rcr
cmp
add
lea
popa
shl
add
sbb
enter
(bad)
dec
pushw
xchg
or
iret
int
sti
cli
sahf
pop
cmp
fisub
aas
ds
js
retf
sbb
push
leave
push
cmps
test
mov
add
hlt
rol
rep
call
cs
dec
outs
and
and
adc
sbb
inc
sub
sub
in
add
fsub
enter
hlt
xor
ret
push
sbb
xlat
stc
repnz
rol
test
lds
cmp
fistp
loopne
push
ds
xchg
(bad)
ror
lods
jo
idiv
cmps
jp
adc
repnz
push
rol
sub
ins
pop
xor
idiv
hlt
das
and
xchg
retfw
gs
fcomp
leave
cmc
mov
push
popf
inc
dec
lods
adc
out
mov
inc
das
retf
jecxz
and
and
outs
sbb
jl
pusha
push
and
cmps
dec
daa
and
mov
xor
mov
pop
dec
out
pop
mov
or
or
push
jbe
or
push
cmp
shl
push
or
pop
mov
sbb
sub
and
xchg
push
or
dec
fimul
pusha
psrld
inc
or
pop
cmps
(bad)
into
add
(bad)
std
jbe
aas
add
pushf
retf
adc
mov
add
cmc
xlat
mov
push
jb
inc
(bad)
cli
outs
add
xchg
jno
iret
(bad)
(bad)
jb
cmp
sbb
and
stos
repnz
(bad)
sbb
rol
jg
icebp
mov
push
clc
pop
pushf
sbb
js
mov
ret
addr16
adc
inc
cmp
push
xchg
mov
(bad)
pop
inc
ret
pop
loop
pushf
mov
aam
dec
jle
inc
fadd
ds
mov
fmul
mov
push
and
mov
in
pop
sub
(bad)
(bad)
jmp
mov
into
rcl
sub
iret
cmp
xor
inc
aam
pop
or
jecxz
jns
cmp
cmp
leave
cmp
in
push
mov
hlt
jbe
pop
lods
ret
movs
inc
repnz
addr16
enter
fld
in
dec
es
outs
xchg
sbb
test
sbb
inc
add
les
std
xor
lahf
jnp
in
inc
xor
aaa
jo
in
mov
cmc
dec
daa
or
mov
sub
rcr
mov
in
sub
jmp
jbe
sub
mov
pop
add
popf
dec
inc
inc
in
inc
xor
outs
(bad)
ffreep
add
jecxz
sbb
mov
dec
dec
inc
mov
mov
mov
jno
pop
(bad)
jb
popa
inc
fild
push
dec
fist
lods
fcmovne
in
cmp
push
pusha
(bad)
xor
arpl
leave
test
mov
fs
jbe
iret
adc
fistp
jo
lods
inc
sti
sub
sbb
fld
pop
aas
xchg
clc
ins
cmp
leave
add
outs
and
fiadd
jno
jmp
fisttp
sti
and
inc
das
shr
push
pop
inc
ins
int
daa
adc
clc
jb
sbb
imul
rcr
js
into
cld
imul
iret
mov
xchg
ret
(bad)
fild
pusha
mov
gs
or
test
mov
push
lea
pop
(bad)
das
mov
test
or
adc
xor
ds
cli
adc
xlat
sbb
nop
inc
add
cmp
cmps
push
xor
outs
inc
in
sub
push
xchg
and
jecxz
icebp
adc
ins
aas
stos
sub
dec
jle
dec
popa
test
mov
and
lea
adc
xor
mov
xor
push
push
sub
dec
cmp
aaa
pop
push
pop
or
xchg
mov
pop
and
jb
push
test
rcl
ins
jle
leave
add
or
adc
sub
dec
xchg
mov
loopne
push
sub
inc
loope
ds
sbb
or
add
es
daa
jg
pop
push
test
push
rcr
paddw
and
fisttp
daa
add
pop
mov
cld
xchg
ret
xor
mov
(bad)
test
lahf
fiadd
(bad)
aas
loopne
gs
dec
pop
cwde
nop
outs
jp
loope
ja
cmps
adc
cmp
or
sar
or
or
xlat
rol
test
xchg
or
das
outs
fld
push
int
or
xchg
inc
outs
cmc
pop
push
ja
retf
sub
cdq
stos
call
xor
fst
leave
push
dec
ds
fsubr
lahf
push
mov
lock
jmp
fdivr
push
gs
push
test
cdq
sbb
test
les
mov
sub
icebp
mov
cmp
xchg
inc
xchg
xchg
dec
repnz
jecxz
pusha
arpl
icebp
jnp
imul
outs
add
cmp
mul
sub
xor
lea
pop
xchg
mov
movs
jg
dec
xchg
xchg
push
inc
dec
xchg
sbb
pop
js
and
ror
sub
psrld
mov
cmp
push
inc
cs
test
inc
lea
xchg
sub
jne
aas
outs
dec
sub
pop
sbb
in
dec
push
lods
pop
push
adc
inc
jo
(bad)
mov
pushf
shr
ds
mov
pop
ret
das
scas
dec
xor
fnstcw
and
mov
mov
popf
jae
add
add
aad
shl
jno
jns
packuswb
test
and
sub
sbb
cmp
add
(bad)
cmp
(bad)
cmc
sbb
push
mov
push
pushf
xor
cdq
pop
iret
stc
loopne
(bad)
sbb
inc
push
sbb
xchg
sbb
inc
dec
dec
std
jb
mov
mov
ret
jp
outs
inc
xchg
dec
sar
inc
cwde
dec
sub
cmp
sbb
cmp
adc
pop
push
mul
dec
call
test
jp
or
sbb
into
mov
leave
push
out
fild
jbe
and
push
(bad)
pop
popf
cmp
outs
enter
sbb
lea
mov
imul
mov
cli
add
cmp
sub
rol
adc
mov
pusha
jmp
pop
retf
pop
push
fwait
out
jmp
fcomp
mov
or
(bad)
sbb
stc
push
lahf
pop
call
mov
test
imul
ins
aad
sub
cmp
shl
cmps
xchg
dec
shl
push
(bad)
sbb
push
jbe
push
in
inc
pop
daa
jp
inc
xor
lods
lahf
cmp
mov
data16
xor
test
or
int3
aaa
pop
push
pop
dec
call
sahf
cwde
xor
std
sub
xchg
or
sub
pop
jecxz
fninit
cmp
mov
in
aaa
jl
js
(bad)
aam
push
addr16
cwde
adc
movs
pop
call
sub
aas
mov
dec
inc
imul
mov
cmc
adc
test
cmp
jns
jnp
dec
add
jmp
mov
arpl
les
mov
cwde
jno
push
sbb
adc
icebp
add
adc
fsub
xor
outs
adc
mov
stos
sub
pop
mov
push
and
pop
jmp
sahf
data16
test
jge
jge
int
or
test
inc
or
sub
xchg
adc
lock
dec
jge
jle
clc
adc
sub
fadd
jb
jb
fs
test
push
or
add
fdivr
add
sar
fsub
fdivr
mov
xchg
cld
pop
stos
enter
push
xchg
mov
pop
addr16
sub
retf
mov
mov
(bad)
sar
loope
clc
mov
(bad)
mov
pop
std
test
push
fcmovnu
add
xchg
mov
mov
xchg
out
popf
dec
in
sub
out
and
and
jo
xchg
pop
(bad)
push
or
sub
and
mov
cli
test
sub
loop
and
jmp
sbb
(bad)
jb
neg
addr16
lds
test
inc
sub
and
xor
push
pusha
pop
sbb
dec
lds
(bad)
scas
mov
add
sub
push
sub
cmp
xor
hlt
addr16
out
xor
and
shl
lea
popa
ret
xor
popw
das
xchg
shl
lods
xchg
adc
sub
adc
jle
pop
int
pop
test
pop
jae
mov
mov
mov
and
icebp
push
fcmovne
test
xlat
or
push
push
sbb
dec
(bad)
sub
je
pushf
icebp
mov
add
out
std
test
inc
pop
jmp
hlt
cmps
or
in
(bad)
inc
add
out
addr16
lds
cmp
add
(bad)
jne
daa
(bad)
xchg
push
cwde
lds
adc
jo
push
mov
sbb
and
xchg
aas
stos
pop
mov
or
retf
jge
add
fimul
loopne
mov
cs
cmp
pop
xlat
push
mov
jb
mov
or
mov
mov
mov
push
icebp
stos
add
cmps
bound
cmp
and
pop
xor
lods
adc
pop
add
gs
cmp
push
sub
btc
jo
jo
(bad)
jnp
ffreep
dec
mov
fs
mov
out
shr
cs
leave
or
push
movs
je
push
pusha
sti
sti
push
ror
or
call
xor
(bad)
test
test
aam
fidiv
in
pop
sub
jo
sbb
ror
pop
push
pop
js
int3
mov
jmp
or
xor
and
or
xlat
movs
std
pop
dec
pop
cmp
mov
(bad)
fs
jae
(bad)
push
les
dec
into
std
pop
outs
pop
fadd
jmp
jmp
xor
pop
push
push
imul
sub
aaa
jg
pop
mov
aam
out
shl
push
pusha
adc
test
mov
test
ins
or
adc
jns
adc
or
and
inc
jmp
pavgw
(bad)
push
dec
dec
pop
dec
push
pop
adc
jmp
bnd
pop
cmp
dec
inc
shufps
add
add
pop
inc
sub
cli
inc
aaa
(bad)
icebp
pop
and
dec
call
inc
fnstenv
jecxz
call
jmp
je
ds
dec
fmul
test
hlt
out
xchg
lods
rol
mov
add
push
or
add
popf
mov
adc
shl
es
sub
mov
push
push
mov
sub
ficom
ins
enter
jae
xlat
jb
outs
ret
push
shl
xchg
mov
jg
pop
hlt
mov
cmp
imul
fwait
or
add
and
jb
and
mov
retf
in
and
(bad)
aas
mov
cmps
std
bound
fsubr
push
stos
fwait
jnp
pop
push
jne
adc
sbb
repz
jno
test
es
jno
pop
cmp
inc
add
cdq
(bad)
dec
mov
mov
xchg
loopne
pusha
lods
and
or
and
and
push
ret
retf
inc
push
cdq
pop
mov
das
mov
iret
sub
rcl
sbb
test
inc
xor
jge
ins
sbb
or
test
(bad)
mov
out
test
sahf
mov
sbb
aam
icebp
in
ins
pop
sbb
int
outs
push
lds
std
cli
push
mov
neg
call
pop
imul
ret
(bad)
push
cmps
aas
jmp
ret
(bad)
adc
stos
pop
mov
in
inc
push
stos
adc
or
pop
mov
sar
mov
sbb
dec
(bad)
mov
lea
data16
pop
jmp
arpl
and
sub
loop
push
add
xor
cli
outs
in
fdiv
addr16
out
lods
bt
rol
push
pop
nop
inc
ins
(bad)
push
stos
push
call
jp
sbb
inc
ss
xchg
int3
sbb
aam
push
jno
stos
mov
sbb
in
mov
fmul
pushf
or
dec
add
int
mov
sbb
repnz
inc
push
es
or
sub
xor
mov
and
mov
pop
jnp
cld
pop
jp
hlt
mov
lea
mov
push
gs
jg
out
lea
jno
aad
push
imul
jle
pop
inc
adc
dec
jns
push
icebp
aaa
loop
lods
jge
repz
jnp
xor
xchg
mov
nop
call
mov
or
shl
dec
sbb
in
pusha
jl
rcr
push
cmp
sub
retf
mov
ds
adc
cld
dec
pop
adc
dec
ins
std
loop
in
retf
lods
or
cmp
inc
mov
jne
loope
cmps
mul
test
(bad)
stos
jl
sub
sbb
xchg
inc
repz
jecxz
gs
dec
xchg
mov
inc
inc
lds
imul
mov
push
mov
mov
test
mov
jnp
mov
mov
mov
out
test
dec
push
rcr
jnp
in
dec
jo
push
add
mov
cmp
gs
into
int
mov
aam
adc
xor
jp
fld
and
sbb
(bad)
jno
pop
mov
inc
scas
test
push
or
or
sub
pop
mov
mul
inc
mov
ja
test
arpl
test
(bad)
jmp
std
inc
push
xchg
bound
or
dec
ins
xchg
pop
xor
aaa
mov
ins
mul
int
jmp
retf
dec
fmul
push
pop
jae
dec
(bad)
cmp
inc
fadd
sbb
ss
cmp
data16
bound
mov
or
sub
or
fwait
mov
push
push
arpl
mov
add
fisubr
fcmovnu
push
or
pop
scas
cld
int
add
stos
shl
pop
fldcw
(bad)
sbb
sub
rcr
or
ret
xchg
retf
js
pop
mov
retf
and
xchg
jae
dec
fild
push
daa
bound
xchg
(bad)
int
hlt
pop
xchg
lock
and
movs
pop
dec
jbe
pop
jmp
xor
ror
hlt
jo
nop
jecxz
scas
xchg
hlt
in
dec
aam
xchg
jmp
movs
sbb
icebp
push
das
pop
ror
repz
stos
sbb
cwd
jmp
pop
xor
aas
addr16
cs
mov
out
mov
mov
jmp
outs
popa
sub
fmul
test
inc
pop
jmp
cmp
mov
xchg
or
fs
outs
push
sti
(bad)
adc
bound
div
(bad)
aaa
or
and
sti
cmps
ret
adc
cld
jne
xor
aam
aaa
sbb
jmp
adc
aad
test
mov
dec
and
add
mov
test
push
popa
repz
iret
and
mov
xor
loopne
xchg
or
popa
aaa
scas
pop
mov
xchg
sti
and
out
mov
mov
retf
in
or
test
retf
cmps
and
in
sbb
sbb
aas
inc
add
push
jge
or
neg
pop
push
cmps
es
sti
and
sub
sbb
arpl
jnp
scas
ins
aad
jle
xchg
mov
push
mov
retf
(bad)
sbb
or
test
inc
aas
mov
js
jmp
dec
jns
sbb
sbb
scas
fisttp
cmp
sbb
cmova
dec
mov
inc
data16
cmp
repnz
div
in
ins
lea
pop
push
push
and
outs
push
cmp
retf
mov
mov
push
add
xchg
(bad)
add
(bad)
imul
(bad)
sbb
dec
jecxz
enter
inc
inc
and
inc
mov
pop
jo
and
sbb
mov
and
sbb
and
mov
and
and
mov
(bad)
jb
into
xor
add
aas
loopne
mov
sbb
test
inc
loope
sbb
cs
jns
sub
addr16
sbb
sbb
push
ins
adc
imul
retf
pop
jmp
or
ficomp
pop
arpl
xchg
fninit
pop
dec
fdiv
test
mov
sti
popf
mov
sar
loopne
pop
shr
loope
mov
adc
in
sbb
pop
cwde
(bad)
add
jl
inc
(bad)
ud0
inc
cmp
or
mov
add
aas
test
ins
sub
dec
pop
(bad)
neg
cli
and
jns
out
push
push
push
jns
pushf
lahf
mov
xchg
imul
lods
sub
sbb
inc
dec
jns
ror
mov
dec
cli
pop
retf
mov
aad
and
push
mov
(bad)
push
pop
sub
add
cli
stos
add
(bad)
int
addr16
aam
clc
mov
push
adc
retf
mov
cmp
into
pusha
mov
mov
adc
jae
icebp
aas
inc
cmp
or
lods
cmp
into
add
neg
outs
fsubr
or
mul
jle
jbe
dec
sbb
clc
je
dec
sahf
(bad)
in
pushf
sahf
into
sar
test
lock
mov
mov
mov
push
mov
dec
mov
push
add
out
test
aaa
push
pop
in
sbb
sbb
scas
pop
es
ds
mov
stos
add
stc
sub
jmp
dec
and
iret
sub
push
jb
(bad)
retf
sbb
mov
cmp
and
push
lods
xor
jae
cvttps2pi
sbb
imul
inc
sbb
push
cmp
js
pop
dec
lahf
(bad)
loop
push
push
mov
sti
or
add
or
aam
push
jne
xchg
jo
hlt
jbe
in
cmc
xlat
adc
outs
imul
sub
(bad)
aad
out
fsubr
pop
(bad)
imul
in
mov
fmul
jmp
sbb
sub
adc
push
add
jp
out
retf
add
aas
(bad)
das
sbb
xor
inc
adc
jmp
aas
pop
mov
pusha
or
mov
xor
lahf
sub
or
dec
(bad)
xchg
xor
jp
mov
mov
mov
mov
fucomi
and
pop
cmps
pop
jmp
inc
xchg
sub
xor
sahf
adc
push
scas
outs
xor
or
scas
loopne
xchg
cmp
adc
mov
and
and
call
test
push
ret
in
sahf
mov
mov
cdq
cmp
rcr
shl
es
sbb
test
dec
aam
mov
test
shl
push
aad
jge
add
jge
retf
jmp
xchg
sahf
nop
pop
pop
loope
mov
and
std
sbb
sbb
enter
inc
adc
push
fisub
dec
xor
mov
push
ror
pop
jl
addr16
into
cmp
dec
int
in
dec
ret
cs
jnp
or
mov
lods
xchg
xchg
leave
ret
frstor
cli
push
mov
inc
pop
and
push
test
in
retf
dec
jns
mov
pop
lock
push
aam
fnstcw
jle
repnz
jb
sbb
inc
in
or
inc
loopne
mov
cwde
inc
inc
jmp
test
xchg
jmp
mov
fbstp
mov
(bad)
or
xor
out
shld
test
call
in
xor
and
push
and
add
mov
xchg
imul
dec
pop
push
pop
add
mov
ds
xchg
sbb
and
xor
adc
sub
inc
push
pop
hlt
add
pop
cmps
mov
xchg
in
std
xchg
and
sub
imul
dec
inc
test
mov
inc
in
(bad)
nop
aas
and
push
mov
inc
clc
arpl
xchg
test
jp
xchg
scas
adc
lea
jns
sti
jecxz
mov
jnp
(bad)
mov
daa
test
sub
and
popf
scas
gs
mov
jns
inc
adc
or
icebp
std
fisttp
lods
not
inc
enter
cmp
leave
jo
mov
sti
mov
test
das
mov
popa
aam
adc
pop
sub
mov
call
add
add
repz
aaa
push
xchg
xchg
inc
sti
xor
sub
sar
imul
repz
or
bts
in
dec
sub
outs
pop
add
inc
xor
jmp
mov
xchg
loop
rcr
arpl
and
jg
loopne
mov
inc
popa
cmps
pop
mov
jne
push
sub
sbb
mov
mov
popf
push
add
ror
int3
mov
test
imul
cld
loop
outs
clc
sub
test
ds
imul
cmp
and
(bad)
out
test
pop
sub
xchg
ret
mov
sbb
sub
leave
mov
pushf
int3
popa
mov
enter
xchg
jle
push
add
test
sub
sub
movs
push
sbb
cdq
add
inc
dec
add
int3
and
pop
aas
adc
ret
adc
xor
adc
adc
fiadd
mov
adc
stos
sub
push
in
les
and
inc
sub
call
cld
ret
out
inc
and
jecxz
inc
in
icebp
cmp
mov
sahf
call
scas
mov
fdiv
popf
dec
popa
sbb
mov
shl
mov
mov
xchg
pop
inc
xor
jge
fscale
mov
add
inc
sbb
mov
rcr
jecxz
test
out
mov
dec
xor
xor
scas
xchg
cmps
sub
or
push
cmps
mov
pusha
xchg
out
test
sti
jnp
xor
push
(bad)
in
inc
sub
vminps
sub
ret
es
pop
fadd
stos
in
cmc
cdq
scas
retf
pusha
xchg
sbb
stc
movs
and
mov
fdiv
lods
cdq
ret
icebp
ret
das
call
jmp
push
push
mov
inc
xchg
mov
sbb
leave
pop
sub
psubusw
mov
lea
lods
xchg
dec
sub
mov
xor
jl
int
add
lods
xor
call
xchg
shr
xor
out
das
xor
mov
adc
mov
xor
aad
mov
movs
pop
push
enter
fmul
push
mov
add
sbb
cdq
pop
dec
mov
fwait
sub
mov
sbb
rcr
pushf
mov
lods
inc
inc
pop
sub
mov
sbb
xlat
clc
add
mov
xor
test
pop
rol
pop
push
out
repz
(bad)
std
sbb
rol
mov
test
in
xchg
and
xor
pop
jg
push
lea
pop
pop
inc
js
jge
xchg
pop
jle
sbb
pop
adc
add
in
ja
cs
pop
jne
cmp
mov
ja
mov
iret
xlat
lock
inc
xchg
popa
ret
out
daa
fbld
dec
test
loope
and
jmp
lods
mov
lock
xor
rcr
xlat
cmp
adc
pop
jmp
daa
sub
mov
jb
add
(bad)
push
dec
mov
ins
xchg
(bad)
pop
xor
xchg
add
push
stos
jp
xchg
(bad)
into
lods
cmp
and
mov
lock
cwde
rol
cmp
fstp
fnsave
inc
aam
xor
jmp
mov
dec
push
mov
jmp
mov
pusha
jmp
sub
adc
jne
xchg
mov
xlat
daa
mov
xor
int
mov
pop
pop
jmp
repnz
mov
push
popf
dec
daa
dec
dec
fxam
push
clc
dec
sbb
aad
stos
and
sub
repnz
stc
(bad)
or
or
es
cs
xor
aaa
sbb
loope
and
sbb
clc
ds
push
push
rdpmc
addr16
add
test
and
pop
ficomp
sbb
fwait
in
add
push
fwait
sub
fmul
jne
jge
xor
lds
sub
ret
mov
adc
int3
repnz
psrlq
je
mov
(bad)
(bad)
pop
rcr
cmp
jl
or
jl
mov
mov
dec
mov
mov
repz
ffree
lods
cs
retf
ds
mov
iret
mov
bound
(bad)
pop
jmp
movq
sbb
jae
and
mov
push
sbb
or
jg
nop
and
popa
imul
outs
cli
jns
idiv
xchg
push
test
inc
fistp
sbb
cs
pop
xor
adc
sti
lock
into
retf
pop
cs
or
mov
push
xor
movs
inc
data16
add
addr16
jecxz
mov
cdq
dec
cld
std
mov
and
mov
pop
inc
mov
xchg
jo
(bad)
sbb
call
and
jge
icebp
sub
jge
lods
or
mov
sbb
rol
dec
lahf
inc
dec
aaa
push
lea
inc
int3
push
or
push
mov
data16
xchg
icebp
cs
push
mov
inc
mov
int3
and
scas
int3
popf
xchg
mov
dec
std
shr
xor
sub
fld
xchg
add
cwde
mov
inc
push
sahf
movs
aad
or
push
xor
out
jmp
daa
iret
in
mov
sahf
xor
jnp
pop
js
sbb
jb
std
and
das
cmp
jl
out
inc
inc
daa
dec
xor
push
mov
iret
sbb
cmp
clc
adc
pop
pusha
and
xchg
popf
in
push
and
stos
pop
je
dec
outs
loope
mul
(bad)
inc
xor
xchg
hlt
imul
nop
add
mov
adc
sbb
mov
xor
mov
dec
lods
repnz
pop
mov
out
cmp
xchg
imul
jo
ss
adc
outs
cmp
out
pop
sbb
sub
loopne
mov
cmps
outs
cdq
xor
cmp
sbb
fsub
fsub
test
push
cwde
jnp
add
add
mov
xlat
dec
daa
ror
sbb
mov
add
in
sub
(bad)
addr16
sahf
or
mov
mov
jle
pop
aam
cmp
dec
leave
sub
mov
iret
xchg
push
out
push
je
out
out
cs
xchg
popf
adc
inc
lods
adc
data16
and
pop
jns
xlat
sbb
fs
popf
mov
popf
sbb
xor
inc
pushf
pusha
(bad)
xchg
imul
ja
mov
jg
out
inc
shl
add
sbb
inc
out
das
dec
(bad)
out
mov
(bad)
xor
pop
or
fist
repz
aaa
or
dec
pop
push
jb
retf
in
cmp
mov
mov
jne
ret
push
ror
xchg
push
cmp
loope
inc
test
repnz
fidiv
jae
inc
dec
mov
jnp
adc
or
mov
jmp
and
aam
inc
mov
movs
inc
pushf
test
mov
or
stos
inc
std
ret
push
add
loop
fisttp
(bad)
add
mov
dec
jbe
mov
sub
in
bnd
dec
inc
mov
mov
mov
out
lahf
test
add
mov
xor
mov
sub
push
add
mov
in
bound
xchg
xor
add
mov
das
and
jb
dec
mov
dec
test
cmp
shl
pop
repz
mov
outs
sbb
and
mov
mov
and
sbb
out
adc
call
cmp
(bad)
jl
and
fyl2xp1
inc
xor
add
add
jg
mov
mov
in
inc
cli
jae
pop
into
and
and
cmp
(bad)
cmp
mov
pop
js
pop
imul
jb
ja
inc
sub
scas
int3
dec
jnp
out
inc
push
add
es
cdq
pop
xor
hlt
es
adc
aam
cmc
cmp
inc
into
shl
imul
call
out
jg
lods
jp
mov
clc
sub
inc
lds
sbb
jnp
dec
shr
mov
jl
stc
xor
sub
repnz
ret
sub
push
dec
fild
ret
int
sbb
pop
jl
cmp
inc
pushf
sbb
jne
lea
and
sub
in
call
mov
mov
push
jmp
jmp
in
into
jle
cdq
test
inc
loope
stc
test
retf
pushf
sub
mov
mov
mov
outs
sti
gs
pop
jecxz
xchg
pushf
push
xor
mov
cmps
and
sbb
sub
jg
fwait
sub
sar
out
mov
or
jae
xchg
mov
or
out
sbb
ret
fisub
sbb
xor
hlt
cmps
push
popa
sub
and
dec
pop
xor
iret
add
mov
push
out
lds
mov
enter
dec
pop
and
cld
call
pop
dec
sub
jne
imul
ins
mov
jle
xchg
(bad)
not
sub
sub
pop
jnp
scas
in
(bad)
dec
dec
cs
gs
mov
push
fist
and
rcr
jmp
mov
mov
aaa
(bad)
cmps
std
xchg
or
push
xchg
sbb
pop
push
cmp
mov
in
repnz
and
test
movs
jg
add
push
adc
jbe
push
and
inc
lods
add
dec
out
dec
jae
jge
add
dec
push
aaa
push
jle
jmp
sbb
xlat
xchg
pusha
out
fsubr
cs
leave
sti
lods
sbb
adc
add
jmp
clc
sbb
and
jecxz
pop
pop
jmp
sbb
xlat
cmp
fistp
or
xor
call
push
test
shl
mov
iret
xor
pop
paddusb
popa
into
dec
mov
mov
jg
jl
pop
scas
fucomp
les
and
xor
inc
icebp
sbb
dec
loopne
and
leave
pusha
jmp
addr16
enter
(bad)
pop
pop
in
ds
and
mov
lahf
ja
sub
sub
pop
lea
add
iret
pusha
pop
sti
movs
(bad)
sub
or
add
int3
call
xchg
leave
cdq
pop
test
dec
jb
pop
scas
mov
call
shl
sbb
cs
jae
push
into
mov
push
std
jae
leave
xor
std
ja
mov
cmc
sbb
es
pop
mov
and
iret
int
std
bound
arpl
xchg
xchg
fs
sub
xor
mov
xchg
cwde
imul
shl
mov
test
pop
inc
add
xchg
mov
test
sbb
out
hlt
out
dec
loope
aam
mov
adc
cmp
cmp
repnz
and
pop
xchg
lock
mov
pop
xor
loop
fidiv
hlt
mov
call
xor
pop
aaa
inc
(bad)
mov
test
ds
dec
xor
ins
ror
dec
sub
dec
jmp
aas
outs
and
mov
xor
cmp
mov
mov
adc
jae
jne
sahf
mov
or
and
sti
repz
mov
xchg
mov
pop
jo
inc
sub
icebp
aad
jbe
ror
cwde
les
jecxz
nop
inc
ss
leave
add
mul
sti
jp
dec
dec
test
int3
jae
mov
in
fsub
mov
jl
and
sbb
and
in
xor
jl
add
and
add
daa
mov
(bad)
mov
cmp
sub
sbb
sti
and
sbb
jmp
imul
das
pop
imul
add
js
and
daa
adc
loope
sar
and
out
cwde
enter
add
inc
and
dec
mov
cwde
or
cs
xor
(bad)
and
inc
hlt
dec
dec
push
stc
and
and
pop
inc
lea
mov
mov
dec
leave
cld
mov
(bad)
cld
pop
and
push
jne
loop
mov
xchg
mov
sub
push
inc
movs
mov
ds
lea
jmp
xchg
mov
loopne
jns
adc
out
push
imul
mov
add
xlat
mov
leave
cmc
inc
inc
jno
mov
sub
add
adc
xor
mov
in
sub
cmc
jbe
xchg
iret
add
in
fidiv
test
mov
daa
mov
in
jo
xlat
push
jmp
je
ins
mov
or
mov
cdq
add
js
sub
imul
jnp
arpl
leave
or
mov
pop
xor
mov
(bad)
repnz
push
mov
push
sbb
pop
push
scas
add
scas
inc
outs
add
ficomp
jb
scas
mov
sbb
stos
in
xor
cmp
sub
jnp
xor
jb
fild
mov
movs
mov
dec
push
mov
mov
retf
jle
mov
loop
xchg
es
sub
test
jecxz
add
jmp
cdq
inc
cmp
loope
fcompp
test
jmp
in
mov
adc
arpl
enter
push
lds
fidiv
jae
push
mov
xor
mov
cdq
stc
or
sub
imul
pop
pop
or
pop
push
arpl
cmovle
add
nop
or
mov
inc
pop
loope
mov
and
(bad)
jle
dec
pushf
push
gs
and
xchg
jecxz
adc
jecxz
addr16
int3
aad
js
mov
pop
xor
adc
xor
push
xor
and
iret
mov
sbb
in
out
fisub
xor
cmp
mov
xor
jg
leave
aad
mov
add
pop
inc
arpl
xlat
or
sub
cmp
pusha
mov
sub
imul
dec
outs
dec
mov
push
push
js
and
ret
pop
pop
jbe
mov
jb
in
push
xor
jmp
scas
jl
dec
dec
add
psadbw
loope
daa
xchg
xchg
mov
or
pop
retf
gs
sub
push
and
in
or
pop
cli
push
and
jno
lods
adc
mov
mov
data16
adc
mov
popa
cwde
jmp
dec
fdivr
mov
lea
mov
jb
and
int3
movs
std
xchg
pop
mov
mov
adc
ret
ror
cmp
cli
xchg
sahf
mov
jne
pop
push
jmp
dec
pop
and
xor
hlt
aaa
jb
or
cld
sub
fwait
mov
mov
fcom
popa
data16
stc
call
sub
sub
xor
cmp
pushf
xor
sti
jle
jne
jae
pop
xor
jae
and
repnz
aad
pop
leave
movs
inc
jge
jnp
pop
pop
xchg
ins
in
mov
pop
loopne
(bad)
shl
adc
push
cmc
fidiv
pop
mov
lahf
outs
mov
(bad)
pop
or
jmp
sbb
add
inc
stos
sti
fadd
jne
mov
gs
fisub
and
test
clc
sub
aaa
or
pop
fadd
mov
out
retf
lods
sub
push
repnz
jnp
mov
mov
cmps
push
retf
out
test
fnstsw
loopne
and
retf
retf
or
in
mov
cmps
add
add
lea
mov
adc
cmp
sub
or
sar
xor
and
gs
int3
shl
(bad)
xor
imul
jecxz
sub
add
add
hlt
icebp
test
sbb
int3
ror
xchg
dec
sbb
jae
pop
mov
lea
and
pop
ins
add
in
push
cmp
mov
sub
sub
div
fwait
jl
in
push
ins
mov
sub
mov
mov
repnz
mov
jno
add
mov
inc
les
and
aaa
aaa
or
(bad)
int
popf
add
or
test
xchg
mov
mov
add
mov
(bad)
jp
dec
fstp
adc
jbe
adc
mov
dec
int
dec
inc
outs
sahf
fstp
scas
shr
in
(bad)
lods
xchg
pop
out
cmp
pop
ins
arpl
add
loop
fimul
pop
(bad)
test
xchg
jge
pop
sbb
add
fisttp
sbb
mov
dec
mov
sbb
sub
or
popa
hlt
add
cmp
daa
fsubr
cmp
les
add
jl
or
lea
inc
sbb
pop
lea
retf
bound
fmulp
jecxz
sbb
jle
push
xlat
cmp
cmp
or
sub
int3
mov
adc
mov
adc
lds
sub
jle
clc
sbb
push
(bad)
cmp
lds
add
xchg
sbb
cmps
pop
das
jo
lods
mov
push
jmp
retf
mov
jge
fdivr
rcr
mov
jb
adc
mov
int3
xor
pop
jmp
mov
push
mov
add
out
cmp
push
ret
lods
jge
sbb
aas
sub
fisttp
repz
frstor
ins
xor
push
inc
push
jmp
sbb
dec
push
pop
jp
ret
clc
shl
repz
cmps
mov
int
push
mov
mov
add
mov
mov
push
jno
or
int3
jge
adc
cdq
daa
mov
push
sti
(bad)
sub
pop
add
div
gs
pop
jo
sub
fstp
mov
std
dec
jnp
fisub
(bad)
adc
pop
lea
aaa
hlt
jle
pushf
aaa
or
adc
cwde
or
add
push
out
out
ret
je
jne
mov
sub
mov
cmp
popf
xchg
push
xor
dec
adc
mov
sbb
aas
cs
mov
and
or
pop
mov
adc
scas
sti
fisubr
fld
push
out
mov
add
push
sub
dec
scas
mov
clc
fsubr
rcl
or
out
dec
jp
jecxz
mov
push
jmp
rol
push
mov
lea
mov
add
xchg
mov
pusha
test
push
mov
fs
add
(bad)
retf
std
jne
into
out
pop
mov
in
leave
push
xchg
retf
loope
call
imul
pop
push
mov
dec
sbb
mov
cmp
add
icebp
mov
pop
dec
inc
xchg
mov
mov
pushf
inc
sub
add
adc
inc
jb
rol
jnp
hlt
jecxz
or
dec
stc
jmp
push
dec
sbb
dec
mov
clc
dec
pop
or
ins
test
inc
or
xchg
pop
movs
movs
ret
dec
jns
xchg
and
and
addr16
ret
adc
push
popf
xor
in
pusha
int3
nop
push
retf
dec
xchg
out
sbb
je
add
jb
adc
jle
ss
fsub
and
xchg
cmp
pop
push
jl
pop
and
aad
and
bound
or
icebp
mov
test
fwait
cmps
outs
or
add
(bad)
inc
sbb
jmp
xor
hlt
sub
xlat
cmp
mov
mov
mov
push
call
repz
jle
or
pcmpeqd
fbstp
cmc
jl
cmp
pop
adc
in
mov
(bad)
push
outs
push
sbb
sub
int3
lods
gs
int
sbb
leave
outs
xlat
sbb
sbb
adc
mov
inc
fs
jns
pop
fcmovu
push
cld
adc
aas
mov
and
lds
inc
adc
aam
repnz
or
mov
xchg
nop/reserved
shl
xchg
lahf
xchg
inc
ret
inc
out
pop
jle
push
das
dec
pop
push
rcl
add
fcomp
jb
ror
call
jnp
jne
inc
and
ret
cmp
mov
fst
push
cmps
push
ins
dec
fwait
(bad)
sbb
xor
push
xor
ja
rol
into
cwde
inc
sbb
push
xor
popa
inc
repnz
(bad)
pop
push
sbb
sub
loope
not
repz
add
push
jp
ds
loopne
adc
lods
repnz
popf
or
xor
js
arpl
sbb
mov
out
in
mov
lds
add
sub
pop
mov
dec
out
in
push
lea
cmp
adc
je
dec
jmp
and
les
inc
push
and
pop
aas
push
loopne
ss
pop
es
iret
push
mov
pop
jb
aad
mov
sbb
mov
jno
add
jo
cld
addr16
dec
push
cmp
mov
(bad)
in
cmc
retf
push
sar
and
xchg
std
daa
(bad)
fisubr
and
cmps
pop
cmp
fimul
lea
out
out
adc
ret
shr
adc
in
sti
sbb
ror
push
movsx
sbb
xchg
dec
or
push
xchg
aaa
add
(bad)
outs
mov
push
pop
dec
xor
or
add
pop
nop
and
cmp
cld
js
or
xchg
sub
mov
fstp
(bad)
pop
aam
movs
call
retf
std
add
aam
add
mov
bound
xchg
inc
xchg
add
in
pop
mov
sbb
pop
test
add
fs
dec
outs
mov
int3
adc
or
cmp
inc
(bad)
out
jns
fadd
add
sbb
fild
xor
sub
fucomip
dec
push
(bad)
inc
mov
push
adc
scas
pop
xor
xchg
neg
mov
push
cs
iret
ins
adc
hlt
adc
js
jae
test
inc
push
push
or
sbb
mov
jb
imul
inc
dec
inc
call
inc
pop
(bad)
inc
inc
xchg
int
movs
or
sbb
and
aad
test
xlat
dec
ret
pop
call
sbb
lds
test
jns
xchg
int
or
inc
jmp
aaa
stos
aaa
cmp
cmps
xchg
retf
jecxz
or
movs
je
adc
out
pop
out
ins
dec
and
es
fs
jne
(bad)
mov
jno
cmps
pop
sub
movs
jae
mov
movs
add
ins
sbb
daa
ins
daa
repnz
inc
dec
in
mov
hlt
adc
jns
pop
int
and
stos
xchg
mov
outs
push
sub
shr
daa
cmp
and
push
ret
mov
or
xchg
jae
nop
clc
(bad)
loop
clc
out
aam
mov
or
push
jmp
jp
pop
dec
jbe
dec
retf
dec
test
pusha
dec
in
jecxz
call
call
pop
jg
push
call
pop
push
pop
sbb
jb
xor
dec
or
push
imul
xor
stos
test
sbb
dec
xlat
pop
xor
pop
scas
in
lgs
add
fiadd
pop
repnz
test
mov
stc
scas
xor
xor
movs
inc
fld
fistp
push
or
popa
data16
push
mov
pop
sub
das
ret
ficomp
add
sbb
mov
gs
stos
scas
pushf
sar
outs
inc
xchg
arpl
pop
ss
or
fiadd
psllw
xchg
and
cmp
das
or
sub
dec
push
or
pop
cmps
xchg
aaa
lahf
ss
sbb
out
out
mov
movs
clc
mov
push
mov
jbe
sbb
jno
ret
pop
inc
mov
pop
test
es
xchg
stos
inc
sbb
fdivr
mov
add
or
xchg
mov
sahf
jecxz
xchg
mov
aad
dec
scas
xchg
pop
popf
jecxz
pop
inc
rcr
mov
or
dec
ja
xor
outs
dec
push
and
push
enter
shl
sbb
sub
mov
sbb
push
lea
gs
hlt
daa
enter
call
adc
xor
jle
int3
pop
sbb
mov
and
rcr
mov
dec
mov
out
aad
cmps
push
mov
jnp
cld
or
mov
js
xor
retf
int
sub
retf
sub
sbb
mov
xchg
movs
jecxz
aas
sub
(bad)
jle
(bad)
(bad)
dec
stos
mov
dec
cmp
sbb
jmp
sbb
and
sti
adc
stos
sub
cmp
call
jg
cld
std
(bad)
mov
loop
out
bound
lods
pop
push
sub
dec
sbb
js
jecxz
push
mov
(bad)
or
popf
dec
sbb
push
add
(bad)
test
ror
jg
cld
movs
mov
arpl
loop
retf
aaa
int3
sub
not
adc
gs
loop
add
in
xchg
bound
xor
pop
dec
mov
rsm
mov
js
sbb
jl
push
stc
or
shl
sub
retf
add
les
fist
or
mov
jmp
call
in
sbb
inc
jecxz
pop
mov
in
sub
or
mov
xchg
ss
sbb
fcomp
(bad)
xor
sbb
mov
push
mov
stos
push
movs
mov
jne
inc
jns
inc
cdq
mov
daa
cwde
jmp
fld
daa
fdiv
xor
sbb
imul
pop
xor
adc
vmovhps
cs
jbe
mov
call
jmp
xor
and
pop
xor
push
xchg
loopne
jmp
or
push
scas
jle
add
jnp
bound
sub
or
stos
push
inc
popa
sub
push
and
arpl
pop
adc
mov
pop
xchg
movs
jecxz
ds
push
mov
xchg
jno
add
mov
add
add
xchg
dec
retf
jnp
xchg
inc
cld
mov
sbb
cmp
add
pop
inc
call
xchg
inc
test
fld
outs
pop
es
ss
dec
or
pop
xor
es
pop
dec
inc
pop
dec
imul
ss
adc
fild
inc
push
or
pop
fchs
mov
and
mov
test
dec
and
sub
xor
pop
hlt
int
aaa
fld
fbld
and
loop
sar
xchg
sub
data16
shl
fimul
sti
inc
shr
inc
pop
push
(bad)
mov
sbb
push
lahf
rol
mov
stc
xchg
xchg
mov
repnz
aad
pop
(bad)
fld
cmp
test
js
lods
push
add
sahf
inc
sbb
repnz
or
push
jl
(bad)
xchg
call
movntps
sti
xchg
mov
call
(bad)
ds
jno
or
dec
sbb
jle
adc
cmp
test
out
popf
pop
cmc
sbb
movs
jnp
(bad)
(bad)
iret
bound
lea
rcl
(bad)
jecxz
(bad)
std
mov
xchg
daa
xor
outs
xchg
mov
loopne
std
adc
mov
movs
push
mov
jg
mov
add
imul
push
mov
lea
and
cli
dec
out
pop
pushf
pop
sub
push
xchg
jmp
repnz
lahf
cmp
adc
retf
test
mov
mov
loopne
ins
mov
sub
pop
dec
fsubr
pop
sbb
loope
test
loop
lds
outs
les
pop
rol
rcl
mov
and
push
js
fldcw
jle
fcmove
ss
adc
les
jle
pusha
mov
or
push
add
fcom
imul
jo
aam
out
fstp
(bad)
jb
lods
and
pusha
inc
push
sar
cmp
jbe
mov
push
push
cmps
ja
and
inc
aad
and
pop
adc
and
out
sbb
rcl
aad
fsubr
adc
xchg
retf
and
adc
pop
mov
int3
pop
mov
jmp
shl
add
jp
cmp
or
xor
outs
xchg
js
outs
xchg
add
sub
sub
xor
fidiv
cmp
cdq
(bad)
arpl
cmp
fsub
outs
fcom
jo
cld
hlt
push
in
push
pop
mov
arpl
cwde
adc
inc
sbb
out
add
imul
jg
(bad)
outs
or
add
or
ins
mov
clc
loop
inc
imul
fs
int
pusha
xchg
retf
mov
push
jae
or
jecxz
xchg
aam
jnp
rcl
sub
sar
out
lods
aas
bound
pop
sub
xchg
es
inc
int
pop
test
sahf
add
push
shl
int
out
or
pop
inc
pop
jge
push
fimul
pop
inc
aad
cmp
leave
pop
call
inc
scas
(bad)
jge
cmps
or
pop
ret
xor
sar
das
jmp
out
mov
repnz
out
or
sar
imul
pop
sub
inc
aas
cmps
add
push
(bad)
xchg
cli
jl
xchg
xchg
leave
test
es
pop
loop
mov
pop
mov
or
pop
sbb
repz
pop
scas
(bad)
aam
cmp
enter
pop
xor
jo
and
or
sub
das
sub
sbb
or
and
cmp
pop
jo
push
outs
pop
sbb
out
xchg
out
cwde
sub
(bad)
int3
outs
mov
mov
or
xor
fcom
fldcw
ins
sub
inc
fs
cmp
push
cmp
add
jmp
mov
add
mov
aam
adc
loopne
add
cmp
mov
inc
or
add
sbb
cvtpi2ps
xor
pop
jl
mov
or
sbb
ss
outs
or
inc
(bad)
je
dec
call
and
mov
fstp
ja
push
dec
icebp
add
dec
pop
jl
jb
test
nop
test
dec
mov
shl
lods
(bad)
and
jmp
shl
xor
pop
outs
jns
jne
sahf
lock
mov
cmovg
pushf
or
aam
xchg
inc
xlat
pop
out
mov
nop
in
mov
mov
into
ins
lock
aad
sahf
repz
sub
or
push
jle
ror
push
pop
cmp
add
out
xchg
ja
neg
sub
inc
add
rcl
js
add
sbb
ret
outs
add
jle
sub
cld
sub
fadd
cmc
sar
stos
xchg
vmwrite
sbb
cli
fdivr
retf
cmps
rcr
mov
dec
fs
daa
imul
or
(bad)
push
(bad)
in
mov
pop
mov
dec
jmp
push
pop
xchg
mov
or
fistp
xchg
(bad)
mov
add
push
ficomp
xor
std
pop
jl
push
dec
inc
or
and
inc
and
(bad)
fcmovnb
aad
ins
pop
push
jp
idiv
ins
cmp
dec
mov
adc
scas
jmp
sub
cmp
cmps
enter
xchg
jg
and
int
add
cmp
aad
jge
add
rcr
xchg
fmul
xchg
mov
jg
xor
xor
in
or
fisub
cmp
cmp
cmps
leave
add
xor
push
adc
cmp
lahf
sbb
test
pushf
int
imul
repz
mov
add
in
fcomi
inc
jle
dec
gs
mov
add
test
add
lea
mov
std
inc
out
jp
push
int3
fist
mov
mov
adc
in
jecxz
fiadd
jbe
ss
ja
and
mov
add
push
ret
arpl
sub
ror
pop
and
push
push
stos
and
into
out
adc
and
mov
dec
or
scas
dec
pop
addr16
dec
xchg
dec
and
pushf
clc
loope
pop
in
scas
mov
mov
mov
in
push
leave
mov
add
int3
adc
shl
sbb
mov
jge
push
add
dec
xchg
cmp
pop
mov
push
or
jmp
xor
add
adc
jge
ins
xchg
xchg
jmp
mov
(bad)
leave
adc
cmp
pop
mov
outs
enter
dec
lds
shl
daa
adc
jmp
push
pushf
jmp
adc
jb
inc
ss
mov
ror
sar
repz
and
inc
and
dec
add
icebp
inc
sbb
mov
sbb
out
push
mov
jns
jae
sbb
xchg
dec
arpl
dec
popa
sub
mov
and
stc
sahf
stos
dec
cmp
push
loope
icebp
movups
jmp
mov
cmp
mov
pop
ins
cmp
and
into
dec
imul
imul
fdiv
int
iret
mov
aas
shl
xor
call
int
rcr
dec
js
push
dec
movs
mov
outs
into
add
dec
sub
dec
pop
ja
mov
test
push
xor
jo
repz
pop
xchg
pop
imul
dec
repz
push
loope
xchg
ds
dec
inc
cmp
dec
xchg
inc
add
scas
leave
add
xchg
cmp
xchg
mov
lods
cmp
jmp
inc
add
xor
fwait
sub
mov
adc
xchg
aam
cmp
fisubr
pop
mov
mov
xor
sub
scas
movs
loop
inc
lea
xchg
dec
inc
dec
xchg
cmps
adc
lahf
cmps
lea
test
js
out
pop
ins
adc
add
icebp
aas
jmp
retf
pop
mov
xchg
daa
adc
das
jbe
dec
fdivrp
pop
aas
cs
add
xchg
das
mov
sbb
push
push
push
imul
(bad)
leave
jns
mov
sar
test
ins
xor
mov
js
ins
ja
pop
addr16
xchg
cmp
inc
push
jg
adc
jns
xor
push
imul
dec
dec
sub
loope
push
mov
inc
and
mov
xor
pop
jp
jmp
mul
cmp
push
xor
test
dec
out
into
jl
jle
or
sbb
call
sbb
add
mov
jns
push
sub
mov
cmc
popf
js
sbb
sub
or
cmps
mov
push
loope
sub
jecxz
xor
pop
(bad)
stc
mov
jns
(bad)
xor
add
pop
in
pusha
dec
popa
xor
sbb
lods
(bad)
jo
pop
add
out
test
loopne
js
fbstp
jbe
xor
outs
and
push
out
cdq
adc
loopne
scas
jmp
in
add
cmp
mov
push
fidivr
xchg
cmps
xchg
ror
push
rep
test
inc
pop
pop
ror
cmp
add
popf
enter
mov
into
and
push
jbe
movs
sub
out
dec
inc
js
inc
dec
arpl
mov
mov
push
ja
adc
cs
jne
xchg
mov
repz
popw
push
push
test
sbb
push
pop
cmp
jno
stc
add
push
and
int
jge
lods
add
mov
retf
sub
dec
xchg
dec
movs
lea
sub
arpl
(bad)
ds
push
add
jo
repnz
fcomp
cld
sbb
scas
or
mov
sub
mov
push
addr16
xchg
xor
cmp
retf
jne
ret
int
and
jmp
mov
adc
leave
xor
cmp
jmp
out
push
daa
icebp
push
rcl
dec
mov
test
push
and
adc
and
jmp
sub
lods
mov
mov
jnp
and
add
pop
pop
pop
xchg
nop
fsubr
stc
out
jno
xor
pop
or
xor
repz
add
cmp
call
pop
loopne
pushf
mov
xchg
adc
dec
cmp
(bad)
cmp
aad
pop
movs
test
sub
sti
jno
or
ror
sub
call
loop
push
retf
and
jl
(bad)
or
push
cmp
pop
popa
sub
cmp
cmp
cmp
stc
xor
xchg
jbe
shr
cmps
(bad)
sub
dec
add
shl
jle
sahf
das
push
aaa
in
ds
mov
fucom
stos
jo
mov
dec
push
fwait
gs
repz
std
jmp
inc
dec
cs
push
inc
scas
xchg
repz
adc
and
cmp
sbb
cdq
sbb
push
ins
mov
fs
pop
inc
call
mov
or
shl
sbb
jle
pop
ss
cmp
jns
pop
test
mov
cmps
xor
loopne
pop
(bad)
push
jmp
cdq
cli
push
or
add
xor
pop
(bad)
cmp
aas
in
sub
mov
retf
adc
xor
sub
cmp
lea
js
lock
fiadd
jmp
and
ja
ss
std
inc
or
repnz
aam
xor
xchg
out
jp
(bad)
scas
mov
out
daa
jmp
mov
test
mov
mov
sub
sbb
daa
out
jmp
mov
cmp
sbb
jb
adc
pop
aad
mov
popa
daa
fs
idiv
imul
aad
inc
dec
(bad)
int
mov
adc
adc
mov
(bad)
ja
(bad)
push
test
sub
stc
fmul
jge
adc
(bad)
pop
mov
cmp
mov
sub
jle
addr16
or
dec
sub
jne
sbb
pop
inc
or
fdiv
mov
inc
lods
inc
push
xlat
cs
and
repz
pop
sub
popa
outs
adc
mov
cs
sti
xor
sub
add
repz
lahf
das
pop
add
call
je
test
mov
daa
data16
loopne
and
call
bswap
jecxz
inc
mov
or
or
ins
mov
cld
cmc
mov
add
leave
pop
repnz
xchg
(bad)
loopne
adc
mov
pusha
fstp
movs
or
push
xchg
sbb
mov
mov
and
in
imul
sahf
and
leave
mov
loope
sub
sub
mov
fsincos
push
aam
mov
stos
pop
loope
imul
xor
mov
jg
jl
inc
pusha
retf
adc
repz
cwde
add
mov
shl
xlat
add
mov
int3
(bad)
scas
retf
jg
mov
jg
dec
call
out
loopne
jo
fmul
pop
cmp
mov
in
mov
ins
push
imul
f2xm1
addr16
push
mov
rcr
xchg
lods
xchg
xor
out
push
and
mov
xor
jle
(bad)
pushf
ins
popa
imul
retf
(bad)
aam
mov
pop
mov
shl
adc
pop
pushf
and
cmp
add
not
jmp
pop
and
out
sbb
popa
js
xor
mov
and
(bad)
jne
lahf
jl
or
outs
jecxz
adc
pop
inc
ds
js
inc
adc
add
or
(bad)
jl
scas
sti
pusha
mov
dec
fdiv
sub
mov
xchg
dec
pop
xor
test
pop
popf
jle
pop
add
call
push
fstp
test
(bad)
sub
adc
cmp
cmp
dec
and
adc
gs
fidiv
and
push
cmp
dec
and
mov
dec
push
xchg
sub
cmp
sbb
inc
stos
mov
dec
mov
dec
dec
ds
ficomp
lahf
test
inc
mov
inc
add
and
retf
(bad)
jae
xchg
aad
inc
call
dec
in
gs
sbb
retf
and
hlt
cmp
jns
retf
icebp
pop
sbb
ficomp
cmps
lods
inc
les
cmp
or
jb
ret
xor
ds
and
or
jle
sub
scas
retf
mov
(bad)
cmp
push
add
sub
fisttp
or
and
mov
int
nop
cmp
sub
xor
popa
and
add
add
sbb
test
inc
repnz
or
(bad)
pop
adc
add
jmp
mov
sub
or
icebp
lods
ins
xchg
out
sbb
pusha
xorps
in
pop
dec
mov
dec
ss
jmp
adc
add
push
mov
test
loop
push
mov
retf
and
inc
xchg
cmp
mov
or
sahf
lock
stos
cmp
jl
out
sbb
ds
call
push
in
pop
fnstcw
sub
lock
cmp
add
fisubr
jb
ss
(bad)
sbb
and
xchg
(bad)
cs
inc
sub
push
inc
pop
inc
jmp
aas
xchg
idiv
das
jle
mov
sbb
pop
xor
rol
adc
inc
push
adc
jnp
inc
por
adc
lock
cmps
or
jle
mov
inc
lock
pop
adc
fld
push
ds
pop
ins
xchg
fbld
push
inc
int3
aas
imul
sbb
xor
cwde
push
sti
out
hlt
xchg
mov
jno
sub
int
sub
imul
ss
lods
dec
cmps
retf
(bad)
cmc
fstp
or
(bad)
js
pop
daa
sbb
push
jmp
js
push
mov
hlt
out
push
add
adc
sub
fdiv
cld
and
fnstsw
cmp
dec
cdq
or
push
das
addr16
iret
pop
popf
fcomp
mov
push
rol
mov
cmps
mov
xchg
popf
loop
iret
push
fidivr
mov
or
push
inc
inc
bound
in
xchg
clc
xor
aam
push
cmp
mov
pop
xor
sbb
ret
and
xchg
dec
ror
jp
out
scas
sbb
push
hlt
shl
test
(bad)
jae
mov
xchg
cmp
inc
xor
out
mov
hlt
adc
pop
fld
or
sub
call
add
fcom
imul
mov
dec
fwait
mov
xor
and
mov
sbb
sbb
outs
rcr
std
mov
sub
clc
je
movs
mov
sub
dec
push
push
repnz
data16
inc
popa
jmp
mov
ja
cmp
sub
repz
pop
ror
push
pop
sub
test
int
xor
xor
sub
int
das
sbb
jne
sub
push
les
cmp
scas
je
sbb
stos
pop
adc
int3
aaa
sbb
jg
cmps
jle
repnz
adc
cmp
sbb
push
mov
fbld
push
sbb
xchg
lods
into
fidiv
inc
add
in
out
mov
jmp
in
ins
dec
lock
dec
mov
mov
push
lds
jl
mov
seto
dec
test
shl
xor
gs
imul
fstp
sahf
inc
or
imul
lea
push
jns
jecxz
mov
js
loope
jl
jp
daa
jle
pop
jge
and
fptan
mov
into
add
sbb
mov
mov
jmp
daa
rcl
(bad)
jle
dec
fiadd
xor
mov
leave
push
push
pusha
cs
xor
adc
ret
out
call
mov
fdiv
movs
mov
inc
rcl
fwait
xor
push
add
int
xchg
xchg
pop
cmp
mov
sbb
iret
ret
jecxz
xor
aaa
call
mov
adc
cmp
fbld
gs
(bad)
enter
xchg
icebp
cmps
stos
sub
xchg
push
scas
sub
fstp
pushw
xchg
mov
aam
jp
xchg
mov
retf
add
jae
dec
ss
inc
mov
hlt
dec
fwait
or
into
sbb
dec
sub
loopne
not
jns
inc
xor
add
gs
cdq
loopne
xchg
lea
aaa
iret
cmp
sub
xlat
jno
call
pop
jle
js
mov
and
adc
outs
movs
into
call
aam
push
in
pop
push
jp
test
imul
stos
mov
mov
(bad)
aas
popf
push
push
add
inc
push
popf
icebp
sub
shl
ins
arpl
add
aam
rep
xchg
imul
xchg
scas
adc
or
xor
mov
add
sub
inc
xchg
xor
sbb
push
jp
cmc
sbb
stos
int3
fwait
xor
or
(bad)
xor
and
test
frstor
hlt
xor
adc
adc
mov
out
add
adc
cmps
adc
out
nop
imul
sub
adc
mov
mov
pop
push
and
(bad)
repz
fdivr
push
xor
sar
out
das
mov
adc
push
rcl
sub
repnz
push
stos
jp
(bad)
stos
aam
les
daa
out
add
outs
adc
cmc
cwde
aam
fsubr
mov
inc
and
jg
daa
or
xchg
jns
and
les
mov
inc
mov
add
rol
xchg
xchg
jno
test
xchg
xchg
fs
dec
add
or
sbb
jmp
adc
and
sub
ja
fmul
and
sub
outs
lea
or
sub
les
(bad)
jnp
and
es
inc
movs
jne
out
pop
shl
leave
sbb
pop
and
push
ret
jbe
test
imul
cmp
sub
jp
ins
pop
inc
aas
pop
xor
cmps
cmc
popa
cmps
push
retf
(bad)
stos
mov
ret
cwde
add
pop
je
out
sbb
retf
leave
ja
mov
jmp
stc
je
or
cli
xchg
leave
lods
cli
lea
lds
cmp
mov
mov
sti
jl
and
xchg
iret
inc
fisubr
adc
out
jae
inc
das
fidiv
push
xor
call
jns
dec
and
sbb
sbb
fld
push
xor
dec
or
or
stos
mov
jp
inc
lock
stos
cwde
pop
adc
das
sbb
(bad)
idiv
repz
out
push
pusha
pcmpgtw
xchg
test
or
jae
pop
(bad)
test
lods
(bad)
(bad)
loopne
add
in
and
jmp
scas
inc
popa
gs
mov
lods
and
imul
arpl
pop
inc
iret
das
fwait
push
and
cld
pop
out
hlt
or
cmp
adc
lods
arpl
pop
or
inc
shr
pop
inc
mov
or
(bad)
dec
clc
mov
inc
xchg
fwait
dec
jmp
fistp
mov
sub
mov
sbb
out
(bad)
cmp
sar
in
push
cmp
mov
dec
adc
mov
dec
pop
addr16
test
mul
sub
sub
jno
xor
movs
dec
dec
in
stos
mov
ret
mov
mov
sbb
cmp
sub
stos
sub
cmp
dec
outs
mov
in
dec
ror
xchg
ja
mov
pop
cmp
loope
aaa
retf
mov
repnz
pop
xor
add
das
mov
inc
add
mov
cwde
xchg
cmp
pop
pop
repz
pop
push
push
(bad)
cdq
jle
adc
lods
cmp
ss
jg
jne
ficomp
cmps
jl
dec
add
jle
setle
and
sbb
cmc
mul
daa
sub
inc
popa
jp
mov
test
jmp
fadd
pop
(bad)
mov
dec
pop
in
and
ss
sbb
sbb
add
and
pop
pop
test
(bad)
xchg
jae
and
stos
and
add
lahf
sti
mov
int3
mov
push
sbb
sar
hlt
cmp
retf
fwait
gs
int
loop
inc
repnz
ja
int
call
add
lods
add
sub
test
sbb
retf
mov
(bad)
sbb
and
mov
dec
jmp
pop
pop
and
leave
pop
sbb
(bad)
push
fwait
fwait
mov
imul
ins
jg
push
cs
pop
push
adc
lods
outs
pop
retf
test
dec
fmul
add
pop
aam
fist
jno
stos
inc
sbb
je
(bad)
pop
adc
inc
or
or
arpl
dec
sbb
mov
lahf
mov
lahf
jbe
outs
rcr
addr16
mov
lahf
popf
sub
add
int
adc
imul
repnz
leave
inc
xchg
repz
and
or
jne
xor
adc
jmp
hlt
inc
xchg
add
mov
jae
int3
or
push
inc
xor
push
in
pop
and
inc
push
sbb
(bad)
jp
jo
leave
pop
jle
ss
mov
dec
dec
xor
or
test
cmp
xor
push
inc
mov
fnop
jmp
xbegin
and
xor
mov
out
mov
xlat
xchg
and
dec
push
or
push
(bad)
and
fnstsw
mov
aam
xor
test
adc
adc
lods
loop
adc
pop
add
cld
pop
inc
dec
lods
cmc
add
jmp
retf
loopne
pop
stos
ins
loop
adc
jmp
adc
inc
xchg
dec
jae
push
inc
add
push
jbe
bound
(bad)
fsub
and
iret
dec
lea
xor
sub
pop
cdq
inc
sub
cs
in
aas
aam
shr
cmp
mov
push
int
data16
fucomi
cwde
fcom
in
retf
add
test
xor
nop
out
dec
mov
cdq
aad
pop
inc
push
shl
inc
sti
fidiv
and
imul
lods
sub
xchg
aaa
jnp
repnz
clc
add
xchg
sub
gs
xor
mov
push
pop
clc
jo
sbb
in
lea
push
es
int3
push
in
sub
add
in
retf
jp
lock
or
cmp
daa
sbb
xchg
out
xchg
jae
push
das
add
into
retf
pop
retf
add
push
adc
sub
add
popa
div
test
loopne
bound
fwait
loopne
mov
es
adc
or
or
and
sbb
sub
je
fld
push
or
and
add
sub
test
jns
push
outs
cmp
add
or
movs
imul
test
add
adc
int
xor
or
pop
inc
or
or
sub
hlt
sub
jb
bound
retf
loop
push
(bad)
jnp
xchg
aad
adc
add
add
and
in
jmp
xor
push
push
inc
push
ss
xlat
cmp
call
cmp
xchg
jmp
ja
xor
jnp
call
ja
pop
out
adc
adc
fsubr
add
fdivrp
jmp
xchg
and
ror
xchg
sti
hlt
movs
mov
pop
ins
cs
jb
ss
jp
fnstenv
jns
fcom
leave
adc
movs
push
pop
jl
je
cmp
inc
jge
in
retf
push
mov
push
int
repz
out
mov
sub
std
xchg
paddusb
xor
(bad)
xchg
mov
push
lahf
push
into
jnp
xlat
pop
pop
scas
xchg
inc
test
popf
cld
adc
scas
(bad)
dec
push
cmp
fisub
add
cs
retf
in
loopne
rcl
loopne
xchg
xchg
and
adc
adc
ret
xlat
mov
xchg
test
mul
js
mov
sbb
shl
jecxz
inc
lock
cmc
add
iret
iret
dec
jge
or
arpl
loop
xchg
(bad)
fwait
mov
pop
sub
stos
arpl
sub
push
mov
pop
data16
mov
fcomp
mov
jbe
fld
outs
(bad)
pop
pop
sub
iret
dec
in
lahf
jo
cmp
retf
fstp
pop
fisttp
pop
and
popa
adc
mov
call
inc
nop
stc
mov
push
adc
ja
rcl
je
call
mov
mov
mov
jp
jmp
pop
scas
imul
dec
leave
lea
das
and
sub
add
loopne
shr
pop
cmp
retf
xchg
pusha
stos
xor
inc
cwde
cmp
leave
jae
ret
push
mov
mov
test
fst
mov
es
arpl
jmp
push
loopne
fdiv
add
lahf
jg
dec
leave
sub
mov
jae
or
cs
mov
adc
adc
test
(bad)
scas
add
les
xor
dec
adc
push
xlat
xor
std
xlat
hlt
jg
adc
mov
sbb
data16
jecxz
rol
jmp
mov
sub
inc
jmp
pop
lods
xchg
fisttp
fidiv
jmp
sbb
mov
fimul
pop
cld
mov
sub
mov
mov
adc
idiv
pop
jbe
pop
loopne
mov
push
xchg
fstp
mov
or
leave
pop
jno
fldenv
sbb
out
cdq
popf
pop
cmp
jno
inc
cmc
ss
scas
sub
or
sbb
fsub
(bad)
cli
add
inc
test
cld
lahf
inc
xchg
in
ins
imul
add
mov
jno
sti
sub
and
loope
std
ret
(bad)
xchg
cmp
clc
rol
test
pop
pop
outs
inc
dec
cmp
aam
xor
mov
sbb
jnp
and
push
mov
sbb
xchg
in
push
out
pop
stc
push
dec
loopne
rol
aaa
mul
sahf
pop
sbb
pop
sub
push
jl
inc
daa
iret
mov
sub
imul
xlat
clc
leave
cmps
push
push
out
pop
loopne
imul
in
jbe
inc
mov
push
mov
popf
add
dec
jnp
dec
xor
dec
cli
loopne
and
movs
jnp
std
test
fidivr
int
adc
inc
pop
dec
mov
pusha
rcl
bound
or
jl
xchg
pop
call
dec
inc
push
dec
cmc
jge
dec
ds
lock
pop
inc
scas
mov
movups
pop
bound
add
int
and
inc
js
xor
inc
adc
sbb
inc
push
jle
mov
lea
(bad)
movs
hlt
mov
pop
sbb
cmp
jl
dec
and
mov
out
adc
aad
push
xchg
xchg
leave
push
popf
movs
loope
mov
add
test
(bad)
mov
loop
bnd
loope
xchg
pop
jmp
ret
mov
stos
sub
les
lds
lock
js
fxch
dec
sbb
sub
jns
popa
loope
test
add
pop
pop
cmps
xchg
pop
(bad)
stos
dec
pop
push
or
sub
retf
mov
mov
cmp
mov
or
leave
push
pop
sahf
mov
lods
lahf
xor
ror
test
or
pop
mov
fucomp
adc
push
dec
nop
loopne
stos
ins
sub
or
cmp
clc
fstp
xlat
or
jg
test
mov
adc
mov
or
aad
pop
(bad)
pushf
push
lds
and
popf
data16
mov
xchg
sub
ror
inc
sub
add
and
fistp
add
lock
xchg
lods
cdq
and
test
sub
pop
cmps
js
fsubr
sbb
inc
punpcklbw
lahf
cmp
fwait
loopne
cmp
or
sbb
sub
mov
pop
or
das
mov
loopne
pusha
and
stos
push
xchg
icebp
int
aam
inc
inc
adc
ins
scas
push
push
cmps
jl
push
xchg
xchg
pop
in
loopne
inc
adc
loopne
jg
jns
popa
lahf
in
das
mov
retf
out
xor
cs
jp
or
fdivr
inc
inc
cmps
jns
sbb
repnz
neg
jmp
xor
jbe
xchg
pop
sub
inc
mov
repnz
mov
jb
and
je
sbb
pop
pop
pop
frstor
pop
mov
pop
stos
mov
shl
inc
adc
dec
ins
lar
mov
aas
div
mov
push
lea
aam
and
pop
push
stc
out
repnz
int
jb
loopne
repz
pop
xor
inc
mov
and
out
ret
ss
scas
pop
sbb
cdq
inc
or
ja
sbb
adc
out
loop
stos
ret
dec
mov
and
add
xor
pop
aaa
xchg
(bad)
aam
dec
dec
pop
mov
sbb
xor
xor
cmp
inc
cld
mov
dec
ins
js
outs
shr
dec
sub
call
pop
imul
bndstx
clc
(bad)
jecxz
jno
mov
jmp
outs
sbb
aaa
jge
stos
or
cwde
push
pop
sub
out
ja
jge
xchg
mov
or
mov
lods
pop
pop
iret
test
add
(bad)
je
mov
out
icebp
(bad)
movs
mov
setg
dec
adc
retf
test
push
icebp
mov
mov
jge
in
aaa
pop
xor
push
jp
pop
xor
cs
xchg
cdq
fist
pop
iret
pushf
cmp
(bad)
fadd
test
cmp
cmp
not
jns
push
xor
pop
pop
mov
or
pop
rol
adc
or
sub
add
jns
int
lahf
sbb
jmp
pop
lock
jmp
iret
and
lds
repnz
in
mov
jmp
xor
repz
sub
fimul
or
or
push
add
inc
in
shl
pop
jecxz
cmp
mov
cwde
cmps
jnp
ret
fiadd
in
pusha
jmp
inc
jmp
dec
and
push
push
test
fwait
dec
cdq
xor
mov
cmp
rcl
fmul
stos
dec
popf
scas
outs
fldlg2
loopne
pop
ror
mov
ss
and
loopne
test
xlat
dec
std
xchg
call
ret
dec
scas
sub
add
stos
iret
in
dec
adc
popa
inc
inc
mov
(bad)
adc
pop
mov
call
cmovs
out
mov
xor
cmp
enter
dec
mov
dec
and
icebp
std
mov
dec
in
repnz
xlat
sub
call
test
xlat
inc
and
add
add
mov
sti
jl
push
add
or
or
mov
movs
xchg
push
push
mov
add
sbb
jne
out
and
or
ins
dec
pushf
nop
popa
and
add
cmp
retf
(bad)
fimul
test
fcomip
aas
iret
mov
add
dec
pop
fyl2x
cli
jns
retf
jns
add
inc
std
ja
dec
sbb
mov
es
adc
nop
inc
or
dec
pop
and
mov
out
out
push
ret
jp
and
sbb
and
sti
ficomp
dec
add
fsub
popf
fistp
pop
out
push
push
aas
int3
retf
pusha
jle
das
out
xor
jo
inc
es
add
iret
dec
inc
xor
mov
jle
pop
cs
(bad)
pop
ins
movs
jge
aaa
xlat
dec
(bad)
hlt
imul
push
ficom
push
call
ret
aaa
ins
mov
retf
jnp
mov
enter
lock
test
pop
push
or
push
adc
xor
adc
jmp
jns
sbb
inc
dec
push
lea
out
adc
in
jnp
add
cs
pop
int
or
stos
and
pop
std
sbb
ficomp
mov
cmp
cdq
das
pop
xor
(bad)
xor
test
sub
test
mov
scas
nop
hlt
test
sbb
or
mov
cmp
test
mov
outs
loope
ror
jnp
jl
scas
pop
jae
std
add
add
retf
cmp
ja
js
sub
int3
dec
push
jb
mov
and
jmp
call
xchg
xchg
leave
outs
pop
mov
and
or
push
push
out
lea
cmc
pop
enter
(bad)
add
test
jg
pop
imul
inc
pushf
pop
aaa
jecxz
xor
mov
mov
(bad)
xchg
push
ss
iret
xchg
std
lahf
lods
inc
das
xchg
pop
pusha
pop
xor
lods
into
outs
sub
or
cdq
out
je
pop
inc
mov
xchg
xlat
sbb
jecxz
push
nop
dec
fisttp
popf
dec
push
jb
inc
xchg
imul
dec
cmp
cmp
xchg
in
ret
in
fwait
and
sar
lods
mov
scas
int3
and
pop
test
jns
xchg
push
and
scas
push
neg
lods
call
sub
pop
xadd
push
arpl
dec
fisttp
mov
call
pop
xlat
inc
cmp
ins
jecxz
lock
cmp
push
add
xor
retf
mov
repnz
gs
das
push
rcr
rcl
out
sbb
adc
ja
xchg
sub
pusha
push
pop
mov
test
jae
mov
addr16
xchg
mov
pusha
or
popa
fs
sbb
lea
mov
xchg
ds
mov
int
sub
sub
arpl
or
daa
inc
test
pop
adc
retf
sub
retf
jecxz
mov
ins
mov
aad
js
xchg
int
push
fcomp
jno
or
adc
sahf
sahf
hlt
and
mul
push
in
push
xor
(bad)
dec
and
shl
xchg
ret
popa
or
mov
pop
jecxz
adc
mov
push
inc
push
das
sub
pop
sub
sub
mov
call
scas
mov
push
gs
in
dec
loop
sbb
inc
rcr
pop
xchg
jne
mov
jg
ss
cmp
jne
adc
sbb
fstp
ins
lock
into
sti
clc
ins
pushf
ins
lds
jnp
loop
test
adc
sbb
xor
add
clc
mov
jp
bound
xchg
push
dec
es
jo
xchg
and
imul
pop
aaa
in
mov
popf
outs
mov
aas
push
xchg
mov
xor
inc
(bad)
ret
mov
pushf
(bad)
adc
stos
in
mov
mov
in
into
add
push
clc
ss
ret
lds
dec
sbb
sub
xchg
mov
leave
int3
cwde
aaa
mov
aas
dec
fstp
xor
and
int3
adc
inc
pusha
es
ss
mov
jbe
sub
gs
lods
mov
mov
add
xchg
push
(bad)
mov
xchg
cmps
leave
outs
or
cmps
add
int3
sbb
mov
in
std
cmps
mov
int
or
dec
adc
sub
leave
stos
ss
std
in
call
add
pop
icebp
adc
(bad)
add
xchg
popa
mov
adc
sub
and
mov
xor
int
dec
test
jbe
stos
and
(bad)
call
ins
adc
pop
data16
fs
pop
cld
mov
imul
iret
jb
jmp
jnp
inc
pop
xlat
mov
shl
jne
ficom
arpl
xchg
ret
lods
jmp
fsubr
sbb
dec
dec
arpl
std
or
lods
imul
lods
sbb
les
enter
test
xchg
xor
(bad)
in
xor
ficom
imul
mov
xlat
(bad)
addr16
fcmovne
add
add
rcl
mov
cmc
jg
je
mov
xchg
stos
sahf
push
push
int3
sbb
dec
mov
(bad)
and
mov
mov
daa
imul
mov
in
cmp
adc
inc
xor
pop
ror
cmp
and
inc
push
popf
xlat
sbb
stos
mov
sub
jmp
sub
aaa
sbb
sub
adc
outs
aas
push
out
adc
xor
daa
mov
(bad)
call
iret
push
sahf
je
xchg
xor
jle
add
push
lahf
xor
mov
jno
test
loope
adc
jge
mov
loopne
sub
push
and
mov
loope
dec
jnp
mov
ss
and
xor
sub
fld
out
adc
or
je
mov
test
fsub
mov
daa
fsubr
ret
cmc
xchg
mov
pop
mov
mov
inc
aaa
(bad)
aaa
jecxz
mov
mov
push
add
adc
cmps
sbb
lahf
ret
fwait
into
mov
cmc
xor
sti
and
sub
in
or
out
dec
fadd
push
popa
xchg
pop
(bad)
jmp
retf
jno
rcl
or
jno
add
add
pushf
sub
push
jb
or
loop
sbb
daa
mov
jae
test
movaps
cld
mov
or
push
jp
(bad)
mov
pop
xor
cmp
(bad)
rol
lds
jge
push
stos
(bad)
sub
hlt
pusha
fistp
jle
push
neg
and
and
sbb
pop
mov
xor
test
sbb
std
pop
retf
loop
(bad)
js
out
es
jnp
fidiv
outs
bound
inc
xor
add
or
cmp
dec
or
aad
dec
sbb
add
dec
stos
inc
cmp
jle
pop
stos
(bad)
xor
push
pop
daa
mov
loopne
add
stos
lock
inc
jmp
mov
pop
push
and
out
pop
mov
je
adc
jmp
cmps
iret
cmc
xor
lods
sub
popf
mov
div
mov
sbb
clc
inc
pop
sub
out
ins
nop
sbb
movs
adc
sub
pushf
hlt
jle
sub
cmc
mov
outs
inc
xchg
data16
das
xchg
adc
sub
sbb
pop
and
pop
sbb
cmp
in
cmp
shr
fcom
inc
and
call
pop
push
mov
mov
mov
addr16
push
cmp
xchg
fs
cs
outs
sub
mov
mov
out
inc
add
xchg
hlt
loopne
sbb
aaa
aad
fldcw
retf
mov
dec
stos
test
addr16
sub
dec
push
fdivr
mov
icebp
adc
mov
test
sbb
xchg
popf
sub
jecxz
cmp
std
in
mov
pushf
jecxz
sub
cli
ret
add
add
inc
cmp
mov
pop
setg
data16
enter
pop
stos
push
xor
int3
sbb
xor
and
fs
nop
les
pusha
adc
ss
ds
pop
pusha
cmp
xchg
cmp
js
inc
inc
cmp
scas
movs
leave
fisubr
jmp
sbb
sbb
out
mul
xor
sbb
jae
cld
pushf
dec
sahf
aam
call
mov
cmps
icebp
xor
inc
shl
call
push
daa
xchg
sub
pop
inc
push
sbb
jge
push
push
lock
leave
lock
stc
or
push
push
xor
loopne
cmp
addr16
add
inc
push
jecxz
inc
les
cmp
shl
addps
mov
push
push
xchg
cmp
cwde
cmps
or
inc
test
xor
bound
xor
push
(bad)
pop
fdivr
fwait
push
add
sub
fsub
mov
mov
or
int
inc
inc
mov
arpl
repnz
jp
xchg
and
mov
in
pop
aad
call
push
rcl
mov
std
inc
fst
jecxz
xlat
pusha
add
popa
dec
or
push
into
or
add
xlat
addr16
or
test
lock
and
and
sub
xor
fild
mov
je
mov
pop
xchg
iret
xchg
dec
(bad)
sbb
loopne
sbb
mov
outs
nop
out
pop
and
std
cmp
js
xchg
loopne
add
leave
cmp
jp
cwde
test
pop
mov
fiadd
fnsave
sub
sbb
jmp
hlt
retf
sub
lahf
fnstenv
test
pop
fstp
fcmovnbe
push
add
mov
nop
jnp
cs
sub
sbb
out
mov
xchg
and
sbb
mov
mov
rcr
xchg
(bad)
mov
retf
cld
lock
or
cmps
push
jp
test
sub
add
dec
arpl
cwde
or
js
dec
xor
ret
(bad)
cmp
dec
jmp
shl
mov
inc
jbe
adc
sub
repnz
pop
push
push
scas
push
dec
sbb
sub
sbb
aad
test
bound
push
push
adc
rcr
aaa
sub
ins
and
daa
inc
iret
movs
xchg
fimul
retf
fs
shl
cs
outs
fstp
ja
mov
or
sbb
cmps
rcr
xor
aas
sub
test
pop
movs
push
mov
hlt
pop
dec
rcr
cmp
and
imul
clc
xor
aas
cmp
cmc
jle
pop
inc
scas
sub
push
call
xor
cmp
dec
mov
sub
scas
stos
mov
pop
js
int3
lods
loopne
xlat
popa
addr16
push
xchg
jnp
sar
inc
loop
xor
sub
pop
loope
fcmovbe
shl
ss
inc
pop
pop
sbb
ds
jno
xchg
in
sbb
jp
and
out
movs
xchg
enter
cdq
test
jno
popf
sbb
inc
jne
mov
sub
stos
(bad)
pcmpgtb
pop
inc
in
fldenv
mov
mov
popf
mov
push
loope
pop
jle
xor
ins
dec
add
xchg
xchg
jg
add
js
mov
pop
in
mov
jl
fidivr
jno
gs
cmps
fcmovnbe
pop
mov
ficomp
jle
sub
cmp
and
dec
call
test
cli
inc
sbb
ret
cmc
les
sbb
aas
push
sti
pop
jp
int3
cli
addr16
dec
pop
popa
and
jnp
and
dec
mov
mov
inc
nop
outs
fmul
arpl
xchg
jmp
pop
mov
call
jg
xor
(bad)
jno
rol
adc
xchg
test
out
or
add
fldcw
out
shr
jo
std
mov
or
sub
(bad)
cdq
call
loopne
inc
fdivr
push
pop
mov
jae
cmp
jmp
(bad)
shl
aas
in
push
fld
test
or
leave
xchg
mov
cmp
mov
es
mov
ret
lahf
not
or
pushf
dec
retf
mov
sbb
mov
jne
cmp
and
or
in
neg
sbb
add
enter
ins
aaa
cmp
jg
xor
add
ret
add
pop
pop
int
and
xchg
std
sbb
xlat
lods
outs
mov
jmp
daa
test
mov
test
jecxz
inc
sub
call
test
rcl
add
jge
outs
xchg
cmp
add
sbb
and
aas
jnp
mov
mov
jne
inc
scas
push
notrack
xchg
sub
addr16
push
int
inc
pop
dec
sbb
mov
(bad)
gs
dec
mov
jne
lock
jle
cmp
std
std
adc
fs
sti
cmc
jno
aad
jmp
aad
jmp
aad
dec
mov
mov
repz
aad
(bad)
pop
mov
clc
js
imul
imul
loop
fadd
cmp
or
lock
ror
push
popf
cld
data16
mov
push
mov
xor
xor
loopne
inc
inc
les
gs
lods
dec
test
inc
pop
ffree
inc
xor
lea
inc
jmp
mov
push
sbb
and
mov
inc
cmp
mov
dec
mov
aam
sbb
push
data16
add
dec
lahf
add
cmp
add
ja
xlat
out
cs
mov
in
jne
jnp
adc
repnz
in
push
jb
xor
pop
test
mov
mov
dec
shl
mov
mov
sub
xchg
mov
sub
shl
mov
rcl
(bad)
jmp
ret
ss
stos
mov
xchg
jne
pusha
mov
cmps
mov
daa
and
inc
(bad)
pop
or
push
pop
ror
dec
in
push
clc
jge
and
std
mov
sbb
imul
push
ins
out
xchg
loopne
dec
lods
js
xor
jno
cmp
xchg
adc
and
or
pop
lods
add
clc
je
into
ficomp
popa
push
pop
call
adc
test
xchg
lock
sar
loopne
ins
mov
push
hlt
xor
popf
push
or
(bad)
popa
mov
jecxz
sbb
retf
lods
loop
xchg
mov
in
cmp
lahf
mov
pop
dec
movs
int3
aad
sub
and
les
test
inc
je
xchg
jae
stc
push
in
mov
adc
or
cmp
sub
lds
mov
or
sar
dec
aad
xor
mov
je
in
shr
jle
pop
iret
div
mov
into
adc
jg
enter
mov
ror
xchg
xchg
nop
cmp
out
loopne
xor
or
mov
call
cmp
iret
mov
adc
test
ret
popf
mov
fdiv
(bad)
outs
mov
daa
mov
in
xchg
pushf
call
outs
clc
mov
sub
xchg
(bad)
scas
jo
and
es
sahf
(bad)
mov
fwait
scas
(bad)
pop
mov
addr16
div
fimul
addr16
test
inc
dec
mov
rcr
xchg
pop
push
inc
pop
dec
loope
bound
adc
icebp
out
inc
mov
mov
inc
test
(bad)
push
push
jb
(bad)
add
add
lods
sub
add
fmul
js
xchg
loopne
dec
push
jns
jecxz
push
xchg
cdq
push
mov
fld
jne
mov
js
jae
jmp
dec
ins
std
fldcw
dec
arpl
sub
cmp
mov
add
mov
or
fistp
adc
inc
mov
js
gs
add
pop
dec
das
cmp
xchg
add
lock
aas
fld
lock
psadbw
iret
(bad)
jo
pop
in
jns
cmp
aam
ret
aam
pop
push
lock
mov
in
cdq
pop
and
adc
js
jecxz
dec
das
adc
pop
orps
push
sub
es
pop
or
loopne
mov
test
jl
push
jecxz
dec
xchg
dec
sub
scas
push
test
xor
fwait
ins
pushf
test
sub
dec
adc
adc
pop
jae
and
fadd
jle
int3
fstp
movs
std
sub
jbe
in
jecxz
std
add
jnp
mov
jns
in
adc
push
and
mov
rcr
sub
cmps
ror
das
leave
cmp
cmps
dec
mov
in
add
mov
daa
data16
push
dec
gs
mov
pop
jg
adc
(bad)
loopne
test
dec
popa
das
std
out
jb
stos
or
jno
inc
out
addr16
stos
and
sub
inc
sbb
js
push
jno
aam
jno
jge
sub
out
ret
add
pop
pop
ret
rcl
int
psubsw
mov
mov
ins
cmps
sub
inc
mov
xchg
call
mov
out
scas
pop
aam
pop
in
push
push
mov
xchg
pop
xchg
fwait
xor
or
dec
sbb
test
push
mov
sub
shufps
stos
xlat
mov
std
mov
fsubr
movs
call
sub
add
or
popa
int3
sar
loope
xor
jbe
shl
mov
adc
ficomp
lahf
push
sbb
movs
push
out
cmp
gs
add
push
out
movq
inc
push
cmp
pop
jmp
std
gs
and
outs
sbb
outs
add
cwde
data16
ret
aad
sbb
(bad)
into
jne
sub
sub
xchg
jnp
clc
pop
and
scas
and
jle
lock
in
sub
push
or
and
jg
in
pop
aaa
jno
in
jb
ja
cli
sbb
and
imul
or
je
add
and
mov
pop
cmps
imul
jno
jmp
(bad)
movs
adc
xchg
xor
xor
test
xor
cmp
inc
jle
push
and
rcr
dec
sub
retfw
sub
fwait
stos
(bad)
bndstx
in
pop
lahf
adc
dec
stos
dec
and
shl
jae
inc
push
xor
lds
out
cwde
ror
(bad)
and
stos
pop
test
inc
mov
sbb
(bad)
pop
into
xor
cmp
jae
and
jmp
push
movs
lods
mov
repnz
pop
lods
jge
lods
std
je
fwait
sbb
mov
mov
out
cld
xchg
mov
jp
out
mov
xchg
push
inc
cs
call
les
cmp
xor
mov
pushf
loop
xor
dec
jae
cs
mov
jp
inc
daa
daa
shl
sbb
lahf
(bad)
adc
adc
jge
cmp
je
fwait
sub
jns
jno
and
dec
je
xchg
sub
dec
jmp
jl
lods
inc
jns
out
pushf
adc
fst
adc
sbb
jb
imul
js
movs
(bad)
out
pop
mov
and
push
pop
dec
out
xchg
jbe
(bad)
xor
and
cmp
push
aas
add
jle
movs
sbb
mov
test
mov
pop
mov
hlt
iret
outs
adc
rcl
inc
sar
add
pop
mov
pop
cld
(bad)
jae
imul
rcl
cmp
and
mov
cmp
adc
pushf
out
test
push
fwait
push
mov
jne
mov
dec
pushf
les
jae
repnz
outs
ins
ss
repnz
clc
push
sub
sbb
adc
ja
mov
or
jno
out
ret
mov
(bad)
inc
(bad)
mov
icebp
popa
sbb
jl
ret
rcr
or
repz
inc
jbe
pop
ret
jl
jl
repz
push
daa
sbb
mov
pop
inc
es
cmp
loop
push
or
mov
jnp
popf
js
xlat
mov
pop
hlt
inc
leave
and
lock
les
xchg
or
rcr
ss
stc
and
dec
(bad)
out
inc
xchg
les
sbb
inc
push
and
or
lods
push
jle
call
cmp
push
sbb
hlt
pop
pop
pop
(bad)
stos
adc
enter
mov
test
scas
push
add
loopne
push
fbld
ds
or
in
jle
dec
loopne
lock
cmps
pop
dec
and
and
(bad)
jmp
add
ret
repz
shr
pop
jge
push
sbb
(bad)
aaa
mov
mov
dec
lea
sahf
lods
push
out
pop
outs
xchg
int
mov
adc
dec
movs
cmc
mov
inc
cmp
jmp
adc
pop
out
fldenv
(bad)
test
stc
mov
in
push
mov
repnz
sbb
pop
or
jno
out
inc
jmp
mov
std
adc
sbb
adc
mov
clc
sbb
jnp
cmps
in
sub
mov
out
and
dec
jmp
dec
repz
gs
iret
retf
stc
das
(bad)
push
aad
les
mov
(bad)
enter
sbb
in
lods
pop
xchg
outs
dec
mov
stc
adc
jae
xchg
lahf
sub
jb
adc
push
adc
(bad)
loope
adc
push
xchg
jecxz
sub
lods
jmp
clc
bound
sahf
imul
mov
mov
repnz
jecxz
stos
jns
(bad)
jmp
jns
(bad)
jbe
test
xchg
lds
aam
js
mov
gs
ins
imul
pop
cmp
jle
adc
cmp
pusha
push
cmp
push
or
xchg
adc
jnp
fidiv
mov
popf
pop
lea
xor
out
outs
repnz
std
sbb
movs
pop
js
rol
sbb
das
mov
or
(bad)
popa
pusha
mov
imul
add
out
mov
ds
push
or
pop
fisubr
mov
popf
xor
stos
sub
or
cwde
push
call
mov
inc
mul
jle
jle
test
mov
aaa
push
sbb
cld
sub
sbb
out
sti
pop
inc
push
test
push
shl
les
sbb
jle
cmp
test
dec
sbb
pop
scas
cmc
jle
adc
cmp
(bad)
and
inc
pop
jae
es
jmp
jecxz
test
mov
imul
jae
ss
mov
mov
ins
stos
test
cmp
dec
fmul
push
push
jo
jle
xchg
jbe
popa
rcl
xlat
add
mov
sbb
out
inc
jnp
fwait
je
ins
mov
push
pusha
out
cmp
or
xchg
and
add
cld
scas
mov
xor
repnz
mov
xor
and
cld
mov
das
add
(bad)
add
inc
mov
rcl
mov
dec
out
daa
mov
in
mov
icebp
loop
ja
sbb
aaa
pop
pushf
or
dec
(bad)
xchg
mov
repnz
and
enter
lock
mov
sub
xchg
enter
adc
xor
mov
cmovge
cmps
data16
ins
jns
enter
hlt
pop
push
add
into
pop
loope
dec
xchg
inc
aam
mov
xor
or
cmc
ss
leave
mov
xchg
stos
inc
mov
mov
addr16
repz
jae
shr
sbb
outs
aad
sbb
rol
outs
push
and
popa
adc
mov
jl
push
mov
push
out
popa
sar
ret
shl
xchg
sub
xchg
in
cli
popa
(bad)
leave
(bad)
sbb
sbb
mov
rol
mov
and
mov
mov
sub
cwde
xchg
sbb
mov
or
add
icebp
adc
push
adc
jb
mov
jle
mov
or
mov
xchg
ret
xor
and
jecxz
xor
pop
xor
jg
jmp
ins
(bad)
jae
mov
adc
xchg
inc
mov
push
ins
mov
and
pop
add
or
inc
out
je
mov
das
jns
xor
sub
enter
mov
cdq
cmps
dec
mov
push
push
mov
adc
movs
movnti
arpl
(bad)
xchg
sub
and
add
fnstenv
leave
mov
add
fidivr
addr16
sti
dec
xchg
and
xor
jl
pop
inc
add
clc
iret
in
push
jb
cmp
xchg
in
imul
enter
or
sub
xchg
dec
push
outs
jbe
xchg
dec
push
repz
aas
popa
dec
pop
xor
mov
xchg
jle
xchg
and
pop
xor
jno
cmp
cmps
js
sbb
or
addr16
sub
clc
clc
jne
stc
sbb
and
push
jae
or
andps
cmp
outs
es
or
sti
inc
call
les
mov
jb
in
pop
loopne
mov
mov
loopne
push
mov
icebp
mov
jbe
sub
call
cmp
push
hlt
add
sub
add
mov
pop
test
pop
xchg
inc
cmp
jo
cmc
aas
test
out
dec
mov
jb
push
repz
xor
call
add
inc
jb
and
mov
or
inc
mov
mov
popf
movs
inc
fs
mov
movs
sbb
mov
rcr
jg
js
inc
loop
push
xchg
in
dec
dec
mov
sub
and
or
fs
sub
cli
bound
out
fldcw
loop
ficom
and
or
xlat
add
jns
pop
ror
and
dec
shl
cmp
jns
jg
clc
or
jb
jb
push
pop
mov
ins
jb
inc
adc
inc
mov
test
xchg
scas
outs
es
movs
mov
and
sub
adc
not
pop
dec
mov
dec
jns
push
outs
sub
int
xlat
dec
loopne
and
sbb
test
or
jecxz
shl
and
sub
inc
xor
pop
icebp
enter
or
in
test
ss
jg
cmp
call
mov
jmp
out
adc
ret
and
lods
sbb
cdq
adc
gs
repnz
and
jg
jbe
(bad)
repz
pop
(bad)
call
in
(bad)
jnp
popf
addr16
xor
jl
jmp
pop
aad
repnz
inc
out
dec
jg
sbb
inc
xchg
hlt
sub
outs
ja
pop
imul
pusha
mov
mov
xchg
dec
mov
dec
jmp
popa
int
aad
or
pop
mov
je
lods
addr16
jecxz
xor
out
push
enter
cmp
or
mov
and
mov
jno
cmp
cmps
movs
test
adc
mov
push
arpl
adc
pop
inc
jp
mov
aas
push
xor
dec
jg
add
scas
and
jnp
pop
iret
dec
repz
sbb
imul
lods
push
sbb
sbb
and
dec
push
mov
cmc
inc
xchg
inc
icebp
push
cli
cmp
ret
sahf
ss
adc
stos
gs
cmc
int
sub
ror
dec
ins
and
js
repnz
test
mov
sbb
inc
dec
and
add
mov
mov
aas
push
pop
gs
imul
jp
mov
pop
les
idiv
mov
mov
sub
leave
mov
push
jbe
inc
sub
push
not
or
stos
and
lea
movs
push
ss
sbb
stc
mov
or
daa
cdq
fld
mov
je
jp
lahf
push
cmps
adc
cdq
adc
sbb
lods
aas
mov
and
inc
rol
dec
rcr
jmp
outs
lea
punpcklwd
imul
adc
gs
ds
sub
sar
push
sbb
cmp
mov
pop
mov
mov
popf
pop
or
retf
push
movq
add
and
add
or
jecxz
pop
xor
push
loopne
pop
pop
fcmovnbe
push
adc
repz
out
in
lds
jl
jg
imul
jb
push
ins
push
xor
mov
xchg
inc
and
iret
stos
and
cmp
fdiv
pop
jmp
adc
mov
std
lock
hlt
shl
jecxz
ror
into
std
mov
push
sub
call
aaa
sbb
test
and
aas
pop
sbb
mov
add
add
cmc
and
pop
fwait
adc
push
pop
push
mov
fs
sub
aaa
gs
push
iret
jl
jecxz
hlt
and
pushf
loopne
pop
adc
inc
mov
(bad)
je
or
mov
dec
lahf
mov
fdivr
in
aad
mov
je
scas
push
add
sub
out
xor
and
dec
inc
test
jmp
fcmovb
inc
mov
cmp
popa
rcr
pop
pushf
ret
jnp
neg
inc
xchg
dec
cld
xchg
pop
xchg
push
clc
(bad)
jmp
pop
pop
fiadd
cmp
pop
call
in
cwde
add
ds
shl
mov
pop
sbb
mov
cwde
mov
sbb
lock
les
mov
or
popa
push
sbb
mov
das
push
(bad)
cmp
mov
pop
xor
out
sub
push
sbb
stos
repnz
cs
scas
pop
imul
sub
jg
test
xor
loop
mov
cmp
fistp
sub
mov
clc
(bad)
mov
pop
jno
aad
mov
add
cmp
jno
js
inc
fs
xchg
xor
(bad)
sub
add
cwde
aam
xchg
enter
pop
sbb
cmps
(bad)
cli
sub
iret
nop
adc
sub
push
outs
ret
outs
jmp
(bad)
das
(bad)
aam
ins
stos
cli
and
add
cmp
les
(bad)
outs
sbb
or
push
aaa
push
cmps
call
out
and
dec
jecxz
jmp
mov
dec
and
sub
outs
addr16
rol
jg
pop
push
out
cmp
pushf
popf
mov
mov
outs
xchg
mov
call
dec
pusha
add
jge
jp
in
ins
repz
sahf
xchg
push
movs
dec
jmp
(bad)
movs
sub
mov
jecxz
and
dec
pop
push
fwait
ret
ins
fwait
int
pop
pop
add
mov
jmp
test
mov
in
xchg
add
je
dec
shl
ja
ror
cmp
and
ficom
or
inc
sub
dec
mov
pop
jge
push
sub
dec
aam
sbb
sti
jg
or
cmps
mov
push
out
test
and
pop
push
cmp
and
push
test
sbb
loop
dec
push
stos
push
adc
adc
outs
lds
jmp
dec
ret
mov
push
mov
imul
mov
mov
sub
dec
aad
mov
jb
rol
in
popf
adc
sbb
pusha
shl
inc
sbb
pop
cwde
sub
in
jno
lock
xchg
push
ret
adc
inc
jb
or
(bad)
pop
cmp
ins
lods
dec
or
repnz
outs
(bad)
push
or
ins
jl
jge
ror
jmp
xor
cwde
cmp
pop
mov
or
(bad)
dec
int
add
sub
fistp
movs
lock
sbb
sbb
ins
in
adc
or
fist
dec
retf
xchg
push
cmp
hlt
faddp
jo
fisttp
test
and
jle
push
pop
popf
xchg
mov
cs
and
call
jno
xor
inc
loope
loop
popa
xor
xchg
jle
sub
push
adc
test
push
shl
inc
pusha
or
mov
repnz
dec
cmps
pop
sar
and
sub
inc
cmp
and
(bad)
push
data16
test
push
aad
cmp
ss
xchg
test
push
idiv
into
pop
adc
mov
push
sbb
pushf
dec
clc
push
jle
sub
retf
jmp
loop
xchg
push
pop
rol
jge
xchg
fwait
dec
fs
pop
add
fld
ins
rcl
outs
or
jbe
lods
mov
or
mov
or
or
push
pop
addr16
popa
or
jle
xchg
into
cmp
adc
dec
jp
lods
sbb
inc
cmps
push
cmp
mov
test
dec
pop
call
ret
pop
jle
push
std
imul
adc
pop
mov
adc
ret
jle
xchg
retf
inc
jg
and
adc
mov
imul
cmc
dec
int3
repnz
movs
clc
sbb
dec
sub
fadd
aaa
inc
out
mov
fldenv
cmp
xchg
popf
sub
out
jne
inc
call
ror
adc
cli
ds
in
adc
add
or
add
mov
mov
and
mov
pop
or
daa
aas
rcl
lea
ins
mov
mov
xor
scas
jmp
inc
and
inc
ss
mov
add
and
pop
pusha
add
jl
mov
jb
cmp
xchg
enter
sub
in
inc
int3
xor
push
ss
jmp
scas
dec
xlat
push
je
outs
cmp
pop
addr16
stos
fwait
sub
mov
jbe
repnz
xor
xchg
rcr
sbb
jbe
mov
jg
and
mov
jne
sub
pop
jmp
fld
add
push
cmps
imul
and
aam
pop
add
jmp
call
addr16
jl
or
and
cli
add
adc
push
cmp
push
popa
push
jge
leave
inc
aas
lock
jns
jmp
jle
xchg
cmc
mov
fdivr
jmp
jae
cmps
add
aaa
out
xor
cwde
push
xor
in
sub
popa
xchg
adc
jae
ins
mov
sbb
or
ja
xor
repnz
adc
lods
dec
jmp
and
sahf
push
xor
repnz
jmp
mov
aad
aaa
push
add
pop
push
or
retf
mov
xor
push
rcl
(bad)
fcom
in
scas
clc
xchg
(bad)
cmp
ins
xchg
mov
add
push
mov
dec
ss
jmp
test
and
retf
sub
pop
mov
dec
in
cmp
xlat
and
push
push
sub
scas
mov
(bad)
xchg
hlt
out
test
ret
push
add
scas
mov
dec
dec
cmp
xor
lods
hlt
inc
mov
icebp
inc
ja
cmc
daa
hlt
sub
inc
mov
pop
mov
inc
dec
dec
pop
pop
cmp
pusha
prefetch
xchg
out
pop
hlt
fs
aad
adc
iret
(bad)
cwde
cmp
daa
cmps
mov
lods
and
(bad)
out
scas
push
mov
std
or
pop
and
sub
mov
mov
aam
imul
jb
xor
hlt
retf
xchg
jmp
sub
retf
cmp
ror
icebp
repz
ins
or
lock
xchg
test
mov
pop
out
test
push
jb
xor
adc
out
add
xchg
mov
jg
gs
lods
mov
fst
imul
outs
pushf
push
or
sbb
or
adc
fmul
test
dec
lds
mov
iret
arpl
outs
fwait
sbb
pop
es
cmp
sbb
and
fcomp
jge
mov
sbb
jb
mov
jbe
out
inc
pop
or
adc
jo
xor
or
mov
in
push
mov
dec
sti
enter
ins
loopne
xchg
fwait
cmp
mov
sti
jmp
jecxz
sub
sbb
jmp
(bad)
sbb
mov
jb
pop
push
shl
dec
pop
or
psrad
test
xor
dec
sub
or
and
xchg
cmps
sahf
sar
sub
(bad)
int3
loop
dec
ja
into
pop
jl
cmp
add
sbb
and
inc
push
dec
mov
(bad)
pushf
mov
mov
test
sbb
(bad)
(bad)
mov
in
test
imul
psubusb
inc
loope
sti
cvtpi2ps
mov
pop
lahf
enter
loopne
xchg
(bad)
fist
jne
mov
loopne
aaa
add
mov
inc
pop
mov
in
xchg
add
lock
(bad)
ja
or
jb
mov
jmp
and
cmps
xor
or
inc
cmp
int3
cmp
icebp
sub
push
ret
hlt
push
inc
sub
(bad)
stc
repnz
lds
inc
out
inc
fwait
adc
sbb
push
test
and
je
inc
in
sbb
adc
call
mov
dec
or
retf
xchg
or
lock
or
push
cmp
outs
mov
jp
ror
pop
leave
ret
jle
mov
repz
sbb
xor
ret
lods
in
in
(bad)
mov
inc
inc
sbb
cmp
(bad)
repz
sub
add
xchg
dec
dec
out
dec
les
or
ja
popf
cmc
lahf
mov
and
ins
sahf
add
and
and
xchg
jns
sub
cmp
outs
xor
inc
(bad)
cmps
rol
push
jbe
mov
adc
adc
out
dec
jns
sub
pusha
mov
jae
fld
sbb
xchg
jmp
mov
jecxz
shr
ins
cmp
test
cmp
xor
sbb
bound
cmp
test
jp
inc
movs
or
ds
and
cdq
add
xchg
dec
inc
jne
imul
test
neg
test
sahf
adc
retf
stc
fs
arpl
add
push
or
xchg
cmp
sub
and
into
and
mul
xlat
ret
jmp
or
or
faddp
(bad)
sbb
xor
xchg
clc
mov
scas
les
jle
rcl
lahf
dec
aad
ja
cmc
or
out
call
cmp
mov
arpl
add
cmp
in
cmp
jnp
(bad)
push
out
mov
fcomip
loope
sub
jmp
xchg
pop
inc
inc
jg
cmp
test
inc
xchg
push
push
out
fld
xor
pop
jb
mov
enter
adc
push
loopne
or
stos
jmp
adc
jecxz
push
leave
test
cmp
jecxz
xchg
cmps
push
push
shl
fucomi
(bad)
enter
and
(bad)
push
mov
ror
and
sub
dec
adc
pop
les
aam
outs
push
dec
in
jmp
fwait
mov
or
in
jne
sahf
mov
xlat
int3
in
add
xor
mov
mov
jb
mov
add
repnz
rcr
shr
pushw
in
loope
in
imul
mov
mov
dec
jae
cdq
lods
(bad)
jne
vshufps
adc
sub
sbb
ror
pop
daa
adc
pop
lods
jecxz
mov
sbb
sbb
jb
or
lea
xchg
and
cli
std
int
(bad)
out
jb
fcomp
push
add
ss
add
mov
popa
pop
in
sbb
adc
nop
jle
sub
pop
add
fistp
fs
mov
stos
push
inc
hlt
fsqrt
jle
mov
push
jmp
cmc
shr
dec
les
sbb
int
inc
xchg
in
jae
sbb
(bad)
retf
sbb
push
cdq
sahf
int
fs
(bad)
rcr
cmc
leave
mov
push
lods
xor
lods
mov
add
lds
stos
pop
sbb
adc
outs
add
sub
add
ret
push
push
in
imul
cli
mov
and
add
jmp
int3
xor
les
inc
movs
mov
mov
xchg
out
mov
sbb
popa
sub
movs
movs
stos
shr
scas
fldenv
jmp
aad
test
addr16
shl
jge
or
je
cmc
or
data16
test
xor
shl
mov
je
aas
mov
jl
sub
and
stos
fwait
pusha
push
fist
(bad)
cmc
out
xor
jecxz
fadd
fist
pop
and
jno
add
pop
mov
shl
pop
mov
or
mov
mov
pop
adc
loop
fcomp
inc
arpl
sbb
mov
in
test
dec
test
into
inc
in
cmp
aaa
adc
repz
nop
adc
pop
pushf
fld
and
out
jle
(bad)
adc
inc
mov
inc
mov
inc
es
dec
hlt
mov
push
pop
(bad)
mov
adc
neg
add
sub
and
pop
aas
call
ret
pop
mov
clc
dec
add
xchg
scas
adc
add
cvtdq2ps
push
inc
les
scas
or
sbb
aam
mov
xchg
jg
in
lds
cvtpi2ps
call
clc
adc
push
jp
push
jle
lahf
loope
cli
push
pop
xor
or
dec
and
sub
(bad)
jg
ret
aam
and
sub
cli
mov
push
enter
stos
xchg
pop
fimul
ret
xor
or
or
jp
fcom
lods
test
dec
ins
jbe
adc
stos
into
adc
in
add
int
mov
jg
and
mov
adc
sub
retf
pop
cvtps2pi
mov
and
add
and
aaa
sub
pop
add
(bad)
xchg
dec
and
rep
aaa
nop
pop
out
jo
int3
jp
iret
xlat
add
ret
jmp
jmp
hlt
fsub
pop
call
into
sbb
scas
add
xor
iret
popa
mov
(bad)
jp
lahf
addr16
loopne
jl
daa
cdq
jge
mov
and
add
pop
aaa
(bad)
sub
jns
daa
outs
cmp
popa
daa
mov
mov
out
cmp
in
fs
fstp
cmp
jbe
loopne
call
and
outs
aas
adc
into
jb
cmps
mov
xchg
jb
fcmovnu
cdq
inc
cmc
sub
fisub
enter
iret
(bad)
sbb
inc
jnp
xor
outs
xor
loop
sub
pop
xlat
jae
jae
scas
mov
gs
ss
xchg
inc
mov
mov
sbb
or
ror
sub
scas
mov
inc
arpl
retf
dec
sub
mov
push
sub
aaa
adc
popa
movs
lock
pop
xchg
iret
push
add
mov
or
dec
xchg
or
inc
sahf
loopne
iret
or
sub
dec
gs
in
or
add
xchg
cmc
xor
cli
adc
fadd
arpl
mov
fisubr
dec
ret
pop
pusha
mov
repz
adc
dec
in
xor
or
popa
add
dec
popa
add
pusha
popf
sbb
(bad)
aam
adc
jmp
mov
ret
hlt
mov
test
mov
fdivr
xor
dec
mov
and
inc
test
aam
mov
mov
aas
mov
les
pop
cmps
push
frstor
jle
dec
sysenter
les
movaps
test
retf
pop
mov
popf
push
outs
push
inc
loopne
sbb
lds
mov
xlat
inc
cmps
scas
ins
adc
int
jl
iret
ins
xchg
add
dec
test
cmp
les
cmps
mov
jnp
push
adc
xchg
pop
ret
pop
mov
aad
sub
lods
or
sub
cmovns
xchg
out
in
ja
sbb
test
sub
sbb
mov
icebp
or
nop
scas
cmp
dec
call
arpl
inc
push
inc
pusha
cmp
pop
out
popf
pushf
push
push
jmp
out
test
ret
es
xchg
ret
(bad)
leave
xchg
div
push
je
push
xor
add
test
inc
mov
dec
sahf
loope
neg
cmp
sub
loop
nop
sbb
add
in
out
mov
cmp
mov
jae
shl
or
mov
stos
jmp
ficomp
push
xor
xor
mov
inc
aaa
hlt
jb
stos
ins
lea
mov
sub
aas
xor
pop
call
dec
mov
or
jo
xor
jg
test
dec
dec
aaa
pop
inc
imul
inc
or
mov
ja
rcl
std
stos
js
pop
das
push
add
cmp
jmp
ror
out
xor
adc
fsubr
xlat
mov
inc
sahf
bound
dec
enter
stos
dec
mov
ffree
mov
xor
jg
sbb
das
das
mov
jo
sub
push
pop
mov
add
dec
push
inc
jno
test
call
std
sbb
movs
call
or
pushf
jb
test
int
out
rdpmc
sub
xlat
pusha
jno
jp
pop
call
pop
add
ss
loopne
loopne
aam
xor
fild
mov
int3
fldcw
loop
push
ins
cmp
movs
add
gs
push
add
loopne
dec
jecxz
inc
lahf
ror
imul
push
(bad)
fistp
loop
add
mov
in
fistp
pop
scas
add
cmp
out
aam
jnp
xor
cmc
jmp
call
fist
and
fs
xor
jns
sub
in
sti
sub
add
xor
inc
mov
mov
xor
addr16
mov
js
sbb
xor
jns
pop
xor
imul
pop
sar
sub
xlat
pushf
in
mov
in
sbb
outs
inc
aas
rol
in
xchg
push
adc
pop
or
hlt
sub
ror
js
(bad)
ror
adc
popf
lea
fdivr
push
lea
or
nop
shl
sahf
xor
cli
push
out
sub
int3
arpl
ss
inc
mov
jo
dec
aam
xchg
pop
push
sub
fadd
lahf
push
sti
push
ja
push
jo
adc
aaa
mov
and
cmp
adc
aaa
jne
inc
mov
cmp
push
push
in
repz
cdq
add
dec
sar
loopne
out
mov
pop
jae
push
mov
popa
dec
dec
mov
ins
xor
into
sbb
orps
dec
jp
sub
inc
retf
ror
and
mov
ret
mov
or
mov
and
inc
inc
outs
jle
in
sub
mov
imul
cmps
repz
out
xchg
loope
stos
cld
in
in
movs
add
int3
pusha
pop
stc
mov
pushf
dec
ret
push
push
in
jmp
jae
scas
int3
xor
pop
std
cmps
mov
(bad)
repz
sbb
sbb
lods
xchg
jmp
mov
cmp
cmp
mov
jecxz
gs
cld
je
out
aam
dec
shl
fld
jns
sub
out
(bad)
int
push
or
sbb
jmp
out
xchg
push
fcmovb
or
outs
outs
add
gs
or
jg
and
sub
cmps
(bad)
jo
jb
inc
test
sbb
loop
jo
mov
push
mov
movs
lods
cmp
cdq
or
adc
or
retf
jl
aam
sub
pop
sahf
xor
clc
cwde
mov
push
xor
sub
or
jnp
xchg
dec
dec
mov
shl
push
iret
jp
lock
dec
cmp
inc
inc
push
(bad)
jae
lock
xchg
das
push
mov
pop
push
push
mov
imul
retf
mov
ret
cli
and
jb
adc
mov
inc
fsubr
sbb
mov
xor
dec
ret
mov
sbb
sub
adc
fsin
inc
ins
inc
dec
repnz
jo
movs
mov
xchg
mov
inc
xor
mov
fs
jl
pop
shr
sub
and
and
test
out
adc
fcomp
inc
mov
lock
push
mov
outs
dec
imul
int
ret
cmp
int3
mov
sub
sub
loopne
sbb
cmc
fcom
push
add
cmc
in
sahf
inc
in
and
sbb
arpl
lea
pop
stos
into
sbb
(bad)
and
mov
lahf
pop
jge
mov
sub
rcr
push
or
add
stos
out
fcom
push
mov
fdivr
out
test
push
or
int3
loopne
mov
cmp
fdiv
pop
xchg
cmp
inc
jnp
sub
push
cmp
rol
sub
cmp
hlt
pop
adc
mov
scas
(bad)
jmp
test
add
xor
sbb
test
dec
or
or
aam
mov
ficomp
mov
nop
mov
add
pop
xlat
(bad)
jae
xor
fist
stc
or
aad
push
jns
mov
cmps
sub
nop
jo
cmp
test
xlat
add
sub
aaa
popa
dec
xchg
dec
push
inc
int
xor
stc
stos
retf
loope
jge
loope
pushf
sub
push
test
bound
sub
in
pop
adc
enter
jae
jb
and
pop
loop
push
add
push
sbb
in
outs
dec
sbb
sub
or
fmul
enter
push
sub
scas
add
jmp
into
imul
push
cmps
and
mov
dec
or
xchg
inc
xlat
out
ins
or
push
and
in
adc
xor
mov
ds
stos
cmps
jns
inc
test
jmp
mov
mov
cli
pop
imul
pop
icebp
sahf
cmps
xor
adc
xchg
jecxz
ret
(bad)
popf
sbb
(bad)
into
xor
add
pop
ror
mov
jnp
mov
and
(bad)
std
je
test
sub
fisubr
push
scas
or
add
mov
dec
test
and
add
sbb
cmp
cdq
aas
mov
les
js
fisttp
mov
xor
mov
xor
mov
adc
iret
mov
out
lods
cs
pushf
fadd
rcr
mov
in
aam
jno
dec
ret
push
in
(bad)
sub
and
stc
mov
mov
push
xor
inc
clc
add
sbb
in
sbb
add
fild
jo
push
(bad)
loop
xor
push
dec
shr
das
dec
xchg
out
rcr
mov
cmp
clc
arpl
or
pop
out
(bad)
push
(bad)
and
imul
xchg
dec
jmp
(bad)
inc
sbb
add
add
sbb
push
repnz
mov
cmp
retf
jmp
sub
or
out
and
ss
dec
das
push
inc
push
mov
dec
cwde
xlat
addr16
xor
ror
jne
lock
adc
mov
leave
repnz
icebp
and
enter
sub
adc
sub
or
jmp
test
aaa
xor
loopne
jbe
ss
add
rcl
arpl
mov
loopne
test
pop
stos
push
cmps
dec
dec
lock
jmp
popa
sti
(bad)
js
(bad)
das
jge
add
cli
or
pop
movs
push
add
push
pusha
inc
push
add
mov
dec
push
or
popa
ins
adc
jne
push
mov
or
ds
push
fild
cs
lds
pop
adc
dec
mov
or
jbe
and
sbb
pushf
pushf
and
cmp
adc
cmp
sbb
pop
inc
(bad)
inc
stos
(bad)
pop
mov
dec
imul
fisub
fsubr
jbe
and
aad
jle
addr16
aam
(bad)
or
nop
xor
enter
or
loop
cmp
lds
jg
push
jle
mov
xor
ret
and
cld
bound
movs
cmp
cli
push
clc
xchg
stc
pop
adc
clc
jbe
dec
in
adc
fld
cmp
(bad)
push
push
lock
or
sub
and
and
jno
xor
inc
cmp
jp
adc
push
sti
stos
cmp
scas
xchg
inc
mov
sub
mov
sub
pmaddwd
and
xor
arpl
dec
(bad)
fild
cdq
shr
repz
pavgw
cld
pop
pop
push
and
movs
inc
int
sub
stos
mov
shr
in
ror
lds
jl
test
pop
js
popf
sahf
shl
aam
dec
sbb
sahf
int3
jno
test
xor
daa
xor
into
icebp
loopne
xchg
cmpxchg
xor
fsubr
pop
imul
push
lods
inc
jp
imul
jae
jns
xchg
loope
push
js
sub
loopne
xor
arpl
jmp
cdq
cmp
jg
push
sahf
adc
cli
dec
add
test
dec
cmp
cmp
bound
fs
retf
lods
dec
scas
out
pop
xor
stos
push
in
add
in
or
call
push
mov
je
loopne
sbb
stos
jbe
sbb
popf
inc
jae
push
inc
cli
fwait
in
mov
cli
mov
xchg
jg
add
push
dec
xor
xchg
sub
fidiv
cmp
mov
jmp
inc
fs
ins
mov
inc
cmp
repz
arpl
mov
fmul
jmp
lods
adc
(bad)
nop
fmul
jns
cmp
les
jmp
out
out
xchg
fmul
add
or
inc
push
sbb
or
arpl
xor
and
lahf
shl
and
push
repnz
mov
adc
and
jne
les
daa
popa
push
xor
retf
retf
inc
bound
inc
cmp
popf
adc
pop
pop
shl
stos
cwde
pushf
dec
repz
push
dec
stos
enter
(bad)
sar
bound
mov
(bad)
pushf
push
(bad)
and
aad
call
pop
aas
and
xor
mov
and
xchg
jne
arpl
xor
inc
hlt
addr16
test
dec
in
fsubr
jl
pusha
add
in
lock
scas
and
inc
jge
cmc
push
js
inc
ins
jnp
and
int3
push
cmp
pop
jle
or
cwde
jo
cmps
inc
jo
fisub
lea
push
mov
ds
inc
jecxz
pop
inc
pop
sahf
sub
or
out
lods
ror
aaa
inc
adc
jmp
mov
ins
mov
sbb
mov
jg
cmp
jns
push
fidiv
jbe
pop
dec
or
ins
xor
sbb
ror
ins
outs
sbb
or
cmp
int3
cld
ja
xchg
jmp
sbb
and
popf
and
push
iret
jg
jg
inc
scas
mov
sub
adc
loop
sub
pop
rcl
ins
pop
push
lods
pop
pop
pusha
sbb
and
jg
jae
aad
(bad)
int
or
je
in
dec
xchg
dec
jmp
shl
cdq
or
mov
out
push
push
push
push
adc
add
aas
push
arpl
xlat
jg
sti
add
aas
shl
das
push
pop
jle
ror
in
add
sub
outs
mov
icebp
xor
movs
add
and
mov
inc
xchg
dec
mov
cmp
adc
push
out
cdq
jle
inc
aaa
and
lds
ins
pop
adc
xchg
test
clc
not
sti
mov
es
sub
pop
test
sbb
(bad)
fcomp
cwde
push
dec
adc
retf
push
mov
and
pop
js
jae
adc
or
in
cmc
dec
in
fstp
jge
jp
pop
sbb
sub
mov
mov
sub
sub
test
in
in
jno
cmps
xchg
sbb
hlt
sub
movs
jbe
push
xlat
sub
ins
push
pop
mov
clc
jmp
lock
test
jecxz
lods
and
xlat
cmp
xor
in
sub
mov
hlt
jp
test
div
sub
bound
push
je
in
dec
test
push
adc
cmps
pop
add
dec
fstp
add
div
jmp
loope
imul
mov
push
je
mov
jp
mov
xor
retf
sbb
dec
mov
into
je
shr
stc
mov
mov
ds
add
sub
cmp
sub
and
sub
nop
fisubr
dec
and
pusha
test
std
iret
mov
aas
adc
test
shr
sar
xchg
neg
fxch
inc
fld
or
es
cmc
mov
int
inc
test
leave
sti
test
jo
mov
pop
cli
mov
lods
sbb
popf
push
pop
adc
aam
xchg
add
les
cli
out
and
retf
mov
or
or
sbb
inc
call
mov
popf
push
pop
push
xor
jmp
jne
int3
sbb
or
adc
and
(bad)
xor
cmp
pop
dec
xor
data16
mov
pop
mov
pop
popf
retf
outs
xor
cmp
mov
hlt
mov
lock
xchg
sub
inc
push
adc
cmp
dec
retf
inc
test
and
imul
aad
cdq
test
ss
out
sub
ja
and
add
(bad)
push
ins
xchg
jl
es
push
or
imul
inc
pop
enter
dec
popf
mov
dec
adc
sbb
outs
dec
push
stc
adc
jb
arpl
or
mov
(bad)
outs
ja
and
int
or
pop
inc
or
retf
adc
mov
xchg
dec
jmp
xor
and
xchg
jns
cmp
adc
and
stos
cmp
imul
jae
int3
int3
cwde
ins
mov
mov
ss
or
pop
push
push
ds
sbb
lds
jne
ins
push
xor
out
cld
aaa
cmp
les
jp
pop
jae
std
popf
jl
or
dec
retf
shl
popa
cmp
xchg
and
jge
sub
call
ret
inc
cmps
pop
movs
jle
inc
inc
jecxz
and
retf
mov
fwait
and
add
leave
jb
pop
sar
add
mov
dec
push
push
xchg
add
push
add
scas
mov
in
inc
add
or
mov
int
xor
shl
sub
ror
add
pop
push
imul
loop
xchg
xchg
push
add
sub
mov
shl
loope
xchg
lods
out
add
jmp
mov
addr16
gs
ss
inc
js
call
stos
repnz
es
sar
ds
or
cmc
push
xor
cmc
fxch
push
aam
push
or
aaa
fld
aad
jmp
xchg
cld
jl
jge
pop
ret
jge
mov
out
mov
mov
stos
and
out
in
jmp
pop
dec
xchg
jae
movs
add
out
push
imul
pop
jmp
jg
jecxz
out
popa
pop
repz
popa
add
add
mov
leave
cwde
pop
outs
inc
push
les
pop
add
pop
loope
cmp
out
mov
dec
aas
dec
sbb
call
or
pop
xchg
retf
and
or
es
dec
dec
pop
xor
push
into
pushf
rcr
leave
cmp
mov
cmp
ja
arpl
rcl
push
pop
adc
mov
int3
aas
outs
inc
jae
mov
pop
sub
mov
pushf
(bad)
out
or
pop
push
in
mov
lods
es
leave
lods
dec
scas
inc
dec
sub
jmp
push
dec
imul
clc
pop
js
mov
xchg
aas
jmp
(bad)
sub
cmp
movs
push
ror
fisttp
cmps
fldcw
mov
and
sub
dec
shr
add
dec
mov
or
xchg
fwait
or
or
and
push
push
xchg
call
call
pop
cmp
sbb
push
cmp
pushf
pushf
scas
pop
or
jns
xchg
mov
mov
repz
or
add
mov
pop
ins
cwde
pop
pushf
sub
in
mov
pop
outs
jbe
popf
push
pusha
arpl
loopne
dec
rcr
test
ins
cmp
sahf
jecxz
test
cmp
cdq
fsubr
pop
push
mov
cmps
add
dec
dec
aas
adc
mov
cmp
mov
mov
jae
sub
xor
sbb
dec
push
mov
pop
jl
xchg
gs
lock
outs
ss
retf
xor
jmp
cmp
xor
jp
jbe
add
outs
scas
mov
out
or
stos
mov
sbb
xchg
lods
int
movs
and
push
mov
retf
mov
jns
sub
daa
sbb
fcomip
cmp
mov
fist
inc
xchg
xchg
sbb
add
xchg
lock
sub
(bad)
dec
sub
push
push
push
add
mov
retf
shr
fxtract
pusha
jb
dec
rol
mov
dec
pop
pushf
sbb
or
mov
jmp
xor
cli
pop
and
movs
dec
xchg
fadd
or
loope
das
adc
or
sub
aaa
dec
or
push
xchg
pop
mov
jo
mov
retf
loopne
iret
sub
or
fcomip
jmp
into
loope
movs
mov
popa
dec
pop
out
mov
adc
jecxz
mov
mov
cmp
sbb
je
mov
or
or
inc
xor
cmc
mov
push
or
fild
outs
push
mov
ins
dec
xchg
push
jmp
lds
mov
mov
loopne
and
xor
aaa
std
dec
daa
test
clc
inc
shr
push
popa
addr16
xchg
pusha
ja
push
rcr
push
std
mov
xchg
or
call
inc
rcl
outs
push
test
add
xor
test
rcr
sub
and
sbb
lods
js
push
mov
in
push
jl
das
loope
jns
mov
je
aaa
fidiv
fwait
xlat
lods
fisubr
pop
(bad)
dec
add
std
sbb
xor
jae
lea
inc
or
mov
popf
cmp
in
leave
(bad)
hlt
cmp
and
push
stos
scas
mov
iret
add
js
call
sub
sbb
sub
pusha
mov
pop
nop
dec
mov
dec
leave
fs
sub
data16
stos
xor
cli
cmp
lds
add
sub
(bad)
out
pushf
(bad)
xchg
sbb
cmp
pop
mov
les
sub
fst
xor
or
xor
aas
or
cs
adc
clc
jae
iret
push
or
(bad)
mov
and
inc
aaa
add
mov
inc
xlat
jecxz
mov
cmp
and
mov
out
cmp
sub
pop
gs
ret
mov
lock
mov
jg
sbb
jae
jmp
fisubr
cmp
and
cs
xchg
test
out
movs
dec
adc
sbb
pop
fcom
adc
inc
push
lds
rol
push
pop
mov
adc
xchg
cld
jle
popf
enter
into
pop
fcom
cld
mov
das
xlat
loopne
sbb
pop
push
sbb
add
adc
shl
xor
mov
push
sub
mov
xor
sub
lock
shl
dec
cmp
mov
mov
add
pusha
nop
push
ds
mov
jg
lock
push
push
xchg
imul
dec
sbb
test
ret
push
pusha
add
inc
shl
jno
fisubr
xchg
jecxz
stos
(bad)
push
pop
jne
in
mov
fdivr
mov
mov
jl
neg
sub
inc
and
or
jp
test
fisttp
outs
and
xor
mov
in
dec
mov
dec
jb
mov
popf
ret
pop
mov
(bad)
sbb
jge
mov
mov
inc
mov
jmp
retf
shl
or
fdivp
and
pop
push
sti
sti
loope
pop
adc
xor
adc
and
lea
mov
test
jp
test
cmp
xchg
add
out
sbb
std
mov
mov
ror
es
fisubr
dec
mov
and
sub
(bad)
jp
push
cmc
ins
dec
inc
rcr
dec
icebp
inc
sbb
jns
dec
out
and
push
or
sbb
fisubr
add
mov
sub
add
or
(bad)
shl
mov
dec
jne
and
or
(bad)
shr
test
push
add
sar
mov
sub
jle
jecxz
bound
or
cwde
inc
les
sub
cdq
sbb
ss
mov
pop
push
and
leave
push
ret
add
imul
js
arpl
lods
aad
mov
rcl
stos
fwait
xor
leave
je
or
add
addr16
retf
sbb
pop
enter
test
push
xor
scas
adc
into
adc
test
xchg
popa
sub
fild
rol
test
(bad)
lock
push
xchg
imul
mov
jne
sub
pop
test
sbb
adc
jne
xchg
stc
mov
sbb
push
movs
movq
rol
cdq
inc
add
dec
int
data16
or
xor
aad
jecxz
mov
mov
pop
or
or
outs
jmp
sti
(bad)
xor
int3
jo
addr16
bound
pop
(bad)
arpl
adc
js
xor
add
inc
push
bound
sbb
push
mov
lock
mov
mov
mov
nop
sub
add
std
cld
mov
dec
test
cli
test
mov
inc
shl
ror
sbb
retf
add
push
shl
outs
cmp
add
pop
dec
push
push
jg
inc
(bad)
pop
pop
or
hlt
ins
jle
leave
cmp
lea
jb
in
mov
test
int
adc
cld
out
push
fnstenv
sbb
daa
pop
mov
push
jmp
jbe
in
and
and
pop
sbb
in
hlt
add
retf
mov
(bad)
ja
mov
mov
mov
std
shl
xchg
and
pop
rol
push
push
mov
cmp
inc
push
je
xor
add
cmp
or
xor
pop
mov
ffree
push
push
sub
dec
cmc
cmps
jno
push
fadd
mov
push
adc
pop
cmp
repz
(bad)
idiv
cmp
popf
push
inc
dec
sbb
leave
mov
test
or
dec
mov
das
push
call
stos
popf
les
clc
leave
jae
sbb
pop
mov
aas
arpl
retf
enter
mov
jne
leave
fild
dec
inc
cmc
out
mov
test
hlt
push
push
and
mov
mov
adc
mov
xor
in
dec
(bad)
push
fnsave
ret
inc
in
jno
pop
fisubr
dec
inc
inc
add
xchg
sub
or
xchg
and
aam
jo
leave
popf
loopne
int
or
sbb
xchg
int3
loopne
neg
sub
xchg
adc
xchg
sar
add
aad
pushf
loop
push
fs
fcmovnbe
xor
jmp
std
sbb
pop
out
xor
mov
or
loopne
or
aas
sub
or
(bad)
push
repnz
loope
hlt
das
cmps
repnz
push
hlt
loop
push
js
out
inc
xchg
xor
jnp
pop
inc
adc
jle
out
or
lock
sub
sub
outs
adc
mov
pop
aam
xor
pushf
mov
and
xor
fsub
pop
in
(bad)
dec
inc
es
push
xor
xor
cmc
scas
jne
xchg
cmp
jne
jb
mov
jmp
pminsw
in
div
clc
add
imul
clc
mov
mov
mov
mov
sbb
lahf
aam
(bad)
mov
lods
in
add
repz
fisubr
repz
adc
jle
sbb
cmp
pusha
mov
mov
xchg
cmp
inc
cs
es
scas
cdq
addr16
xchg
clc
and
jb
mov
ins
(bad)
or
repnz
stc
ret
dec
mov
ja
inc
adc
add
ss
or
or
mov
test
sbb
mov
dec
es
int
or
stos
mov
sbb
jo
in
int
add
pop
ret
pop
mov
cmp
(bad)
pushf
mov
and
or
sbb
test
xchg
ds
pop
pushf
aad
push
inc
dec
or
cmp
aad
cmp
pop
mov
enter
test
popa
and
xchg
loop
cwde
ror
pop
(bad)
seta
vpor
imul
dec
lahf
or
sbb
int
loop
push
adc
or
or
mov
pop
or
sub
shr
sub
mov
xor
loopne
inc
(bad)
jmp
iret
xor
test
jb
ds
sub
hlt
pop
fst
or
adc
mov
or
push
shl
xor
adc
aad
pop
jo
push
dec
jecxz
sbb
mov
enter
rcl
data16
xor
dec
dec
test
add
les
xor
adc
lods
jno
mov
fdiv
(bad)
pop
(bad)
popa
jb
push
int3
fs
adc
iret
into
push
adc
xor
mov
xchg
cmp
dec
dec
inc
cld
and
sbb
or
jbe
jns
jmp
add
in
stos
call
stos
syscall
repnz
inc
cld
xchg
dec
mov
push
das
pop
xchg
aas
cmps
xchg
and
neg
int
push
xchg
cld
xor
cmp
jo
stos
pop
fldl2e
jo
outs
push
pop
and
out
push
sbb
push
mov
and
xchg
inc
pop
in
jb
adc
cmps
movs
adc
(bad)
jnp
in
cdq
leave
inc
shl
push
add
popf
xchg
push
inc
cmp
fwait
push
sbb
clc
jbe
int
int3
xchg
rol
sbb
push
jle
div
(bad)
xor
add
lods
cmp
adc
pop
stos
xor
mov
push
repz
imul
aas
cli
and
or
int3
(bad)
sbb
jbe
fidivr
pusha
cwde
xor
ss
dec
and
or
movs
jbe
les
jb
out
cmps
adc
jns
xor
xor
push
bnd
cli
into
add
push
xor
aad
lods
pop
jge
dec
div
and
cmp
jnp
js
call
das
inc
sbb
sub
icebp
lea
sar
js
xor
jne
clc
fisub
data16
sbb
sub
jnp
xchg
sbb
jae
mov
lahf
sbb
jo
mov
sbb
sub
sub
movs
fiadd
sub
push
test
jle
or
mov
int
mov
mov
cdq
js
sbb
pmulhw
xor
(bad)
lods
sub
cmp
inc
push
into
icebp
mov
push
xchg
push
inc
std
xchg
movs
outs
nop
adc
ja
dec
xor
or
(bad)
ja
add
pop
cmps
add
adc
pop
xlat
jecxz
mov
jl
sbb
xchg
imul
adc
sbb
mov
push
mov
out
fnstenv
mov
int3
mov
add
repz
and
clc
ret
js
add
push
shl
or
push
pop
setp
test
sub
in
add
cmps
pop
(bad)
add
jnp
jne
dec
in
inc
ins
mov
int
add
adc
(bad)
mov
adc
pop
jb
addr16
and
ror
sbb
sub
shl
add
mov
test
cmp
hlt
mov
xchg
jg
xchg
jo
scas
sbb
jns
cmc
pop
lds
xchg
push
cmp
or
popa
cmp
pop
bound
test
pop
fist
daa
sub
sbb
outs
shl
adc
adc
jb
inc
inc
rol
je
inc
dec
les
aam
mov
test
ret
popa
xlat
dec
inc
sub
aam
neg
mov
pop
jmp
mov
mov
fchs
ins
xchg
mov
jbe
fistp
sbb
out
pop
mov
pop
or
and
imul
mov
scas
ins
mov
push
add
jecxz
and
scas
fistp
adc
jecxz
push
fs
inc
fdivr
add
and
or
or
add
mov
and
adc
dec
stos
loop
sub
test
aad
pop
mov
fmul
rcl
(bad)
jmp
xor
mov
sbb
push
add
daa
sbb
inc
xor
lahf
das
test
pop
dec
ss
cmps
jg
mov
data16
mov
cmp
test
jl
xchg
ins
loop
or
fs
adc
test
push
sar
mov
sub
mov
and
pushf
pop
mov
xchg
fcom
adc
addr16
ficomp
or
sar
xor
repnz
mov
cmp
fmul
popa
repnz
das
inc
cld
xor
in
sbb
pop
(bad)
(bad)
pop
push
xlat
out
jmp
push
push
das
mov
(bad)
mov
es
sti
call
imul
cmp
pop
daa
leave
pop
pop
into
pop
jne
out
cmps
aas
sbb
les
(bad)
fistp
push
mov
jno
nop
push
inc
out
ficom
push
cmp
ins
and
sbb
aam
mov
jge
jnp
add
pop
cmp
lock
popf
int
retf
xlat
jle
retf
repnz
add
icebp
or
push
cmc
dec
addr16
ins
sbb
add
jge
test
push
mov
cmp
aas
lods
icebp
xchg
int3
xchg
lock
add
call
cdq
fnstcw
and
stos
sbb
jmp
mov
out
mov
out
jns
les
pop
jbe
popf
movd
cmc
push
and
outs
xor
push
xchg
dec
cdq
test
sbb
xchg
iret
xchg
adc
out
pop
(bad)
fistp
mov
in
jl
jp
mul
fbstp
ret
nop
push
push
adc
add
imul
push
or
push
pop
push
inc
sar
xor
aam
sbb
cmps
mov
out
push
push
sbb
hlt
js
and
retf
imul
push
ds
jbe
shl
pop
mov
cmc
push
jne
jmp
cmp
gs
mov
push
mov
int
loop
fistp
cli
pop
sub
sbb
cmp
clc
mov
sbb
pop
es
and
dec
mov
dec
dec
mov
xchg
and
cmps
jb
cwde
or
adc
sbb
fld
jno
clc
fdiv
inc
sbb
or
jge
pop
jmp
cs
inc
(bad)
jb
push
xchg
dec
sahf
stos
jmp
push
je
in
cmps
(bad)
and
or
and
cmp
dec
jno
dec
fsubr
in
rcl
add
or
stos
scas
fdivr
bound
jg
and
adc
mov
add
sahf
mov
leave
push
jb
sbb
mov
pop
shr
lahf
xor
lds
les
push
xor
daa
pop
cmc
cmp
dec
sbb
mov
dec
(bad)
sahf
and
mov
mov
stos
adc
cmp
push
ret
and
xchg
leave
dec
mov
adc
cmp
(bad)
jbe
push
icebp
pop
jbe
adc
sar
pop
adc
mov
call
adc
cld
cli
or
in
enter
cdq
fwait
repnz
adc
call
cmps
out
pop
es
push
inc
(bad)
jmp
outs
rcl
mov
xchg
(bad)
push
popf
jle
data16
mov
(bad)
in
xlat
inc
xchg
or
hlt
mov
imul
push
add
mov
sbb
sbb
xchg
mov
mov
dec
jge
iret
dec
xor
jmp
or
neg
test
(bad)
mov
and
xchg
adc
push
(bad)
rcl
cmp
lods
(bad)
cdq
xor
es
ret
xchg
scas
fistp
sub
sub
xchg
inc
add
pop
inc
and
fstp
pop
push
int
pop
or
dec
add
mov
push
adc
loopne
sub
std
and
pop
and
and
fwait
dec
ja
call
(bad)
movs
jb
ja
jge
rcr
pop
push
and
inc
xor
push
adc
icebp
dec
sbb
mov
(bad)
stos
aas
test
(bad)
or
jne
sbb
xchg
int
xor
add
mov
add
or
movhps
push
pop
ss
out
jg
inc
sahf
inc
push
pop
cmp
fwait
nop
out
push
das
xchg
cmp
aad
rol
jl
imul
cmc
dec
inc
inc
out
rcr
pop
ficom
jb
inc
and
add
loopne
and
ret
icebp
pop
ret
mov
addr16
inc
xchg
out
mov
pop
cmps
pop
stos
xchg
(bad)
jl
mov
xor
rol
sbb
arpl
jmp
rol
fwait
mov
jecxz
xor
scas
jo
inc
mov
out
repz
(bad)
inc
fdivr
push
xchg
jbe
and
(bad)
cmps
fisubr
sub
rol
arpl
out
(bad)
imul
mov
and
fstp
hlt
in
jecxz
mov
pushf
sbb
jnp
sub
xor
test
push
or
out
cdq
add
or
sbb
jge
mov
fcomp
fimul
popf
jmp
mov
ins
inc
mov
(bad)
vcvtsi2sd
add
jmp
mov
or
mov
or
and
push
sbb
(bad)
xor
and
in
cmp
loop
pop
int
dec
daa
add
jmp
fmul
ret
add
lods
pop
pop
jne
pop
mov
jno
test
ret
and
jne
add
pusha
in
jno
test
jecxz
and
mov
arpl
inc
jo
mov
jns
sub
loop
inc
inc
dec
xlat
in
dec
shl
push
sub
mov
xor
sbb
sub
jle
xchg
inc
xchg
in
jmp
iret
loop
out
loopne
loopne
out
loop
and
xor
scas
popa
dec
fbld
mov
xchg
push
mov
fisubr
adc
pop
sub
sbb
popa
or
and
sbb
jo
stos
sbb
mov
cld
fwait
daa
popf
repz
xor
fwait
test
pushf
mov
sbb
arpl
out
add
das
into
mov
inc
sub
cs
mov
cmps
fbstp
xor
jmp
dec
pop
mov
sub
sbb
scas
cmp
aad
je
sub
inc
bound
mov
or
stos
inc
pop
jno
xchg
(bad)
or
bswap
pushf
fwait
cmp
mov
sti
add
imul
lea
jns
xor
pop
and
int
arpl
ss
mov
push
aas
test
popaw
ja
sub
fimul
jbe
test
fsubr
push
in
test
xchg
mov
jns
or
std
adc
jecxz
icebp
push
es
std
sbb
aad
jmp
pop
sub
inc
arpl
jg
cmp
shl
mov
push
inc
jo
js
inc
pushf
pop
sub
dec
out
aam
push
push
jl
enter
sub
sub
leave
(bad)
and
dec
add
call
mov
out
xchg
pop
daa
push
cmp
add
add
push
or
mov
mov
and
icebp
das
jmp
cs
mov
pop
jnp
test
cmp
iret
ror
or
mov
fmul
inc
jmp
std
cmps
sub
cmc
jo
iret
ins
aad
in
out
inc
dec
xlat
imul
inc
mov
mov
xchg
ins
pop
add
stc
xchg
sbb
dec
add
sbb
sub
sbb
fucom
pop
test
pop
enter
retf
xchg
push
call
adc
outs
cmps
pop
dec
and
in
sbb
je
loop
push
std
mov
hlt
lea
pop
imul
pop
imul
lock
xor
mov
xchg
and
into
add
retf
div
iret
xchg
sub
sbb
dec
add
in
sub
nop
call
mov
adc
int
mul
out
pop
adc
and
ror
xor
jl
xchg
fisttp
ret
js
iret
rcl
adc
dec
cmp
imul
mov
retf
pop
dec
cmps
mov
and
inc
add
adc
jbe
retf
fisubr
and
test
xlat
jle
ret
mov
sbb
dec
idiv
jmp
out
repz
push
pop
sahf
adc
mov
(bad)
cli
in
cvttps2pi
add
xlat
jle
xor
scas
adc
ja
sub
(bad)
iret
jmp
popa
les
loopne
pop
pop
sbb
clc
daa
jmp
jmp
pop
movs
hlt
pop
and
int3
ins
push
rcr
loope
xchg
or
cmp
adc
mov
sub
mov
inc
inc
xchg
sbb
sbb
push
mov
retf
lea
ins
(bad)
push
outs
mov
mov
xchg
jns
jb
push
mov
(bad)
jge
and
pop
loope
push
pop
add
(bad)
or
mov
cli
xchg
into
cmp
mov
inc
push
clc
fisub
addr16
popa
jns
jle
mov
adc
sbb
retf
jmp
jge
ret
pop
cmps
pop
rol
jmp
jecxz
push
sbb
outs
cmp
mov
scas
cmp
popa
fs
or
idiv
leave
push
add
mov
pop
mov
out
jle
xor
aad
dec
daa
xor
xlat
cmp
add
ror
das
push
aaa
and
cmp
daa
call
int
daa
scas
sbb
add
in
jle
call
jge
loop
movs
stos
inc
push
aas
stos
stc
cmp
xlat
mov
aaa
cmc
mov
ins
pop
js
jl
push
cmp
push
cmp
push
mul
mov
push
es
cli
cmp
dec
or
fcomi
inc
pop
jmp
jo
xor
les
lea
inc
rcl
sbb
shl
or
cmc
out
lods
and
mov
or
and
inc
add
ds
mov
popa
dec
sub
xchg
arpl
out
test
repz
push
out
mov
out
sub
ds
nop
sub
cmps
mov
xchg
sub
push
and
enter
mov
xchg
es
push
push
pop
repnz
mov
xchg
fdiv
jb
je
repnz
out
in
inc
mov
jno
(bad)
loop
cmp
aaa
xchg
repz
outs
sbb
dec
xor
ret
cs
or
mov
cdq
add
mov
mov
push
cdq
jb
mov
in
lods
shl
cmps
add
jo
mov
push
mov
das
push
test
add
inc
add
int
dec
js
xor
add
cmp
sahf
neg
mov
mov
and
and
daa
xor
mov
imul
sub
push
lds
out
hlt
cwde
inc
jmp
ss
cld
das
daa
jmp
dec
pop
scas
inc
cmp
hlt
lds
jg
or
sbb
mov
cmp
(bad)
mov
nop
int3
popa
lahf
cwde
inc
push
mov
out
call
adc
jle
(bad)
and
pop
dec
push
das
daa
sar
sub
jle
xchg
bnd
adc
push
pop
or
add
jmp
or
(bad)
sub
ds
cli
push
push
lds
sbb
or
std
in
fld
hlt
jle
sub
and
pop
dec
xor
call
and
call
das
xchg
sbb
xor
add
sub
jl
mov
cmp
fldcw
jecxz
jb
xlat
push
adc
stos
mov
push
inc
(bad)
sbb
push
cmp
stos
std
das
and
mov
inc
adc
sub
stc
dec
xchg
setnp
jle
pushf
imul
je
jo
or
dec
(bad)
(bad)
call
push
mov
mov
dec
push
movs
fsubr
jl
cmp
add
jmp
fcmovnbe
in
out
pop
inc
clc
iret
add
fs
xchg
fs
sbb
mov
sti
movs
jo
out
or
xchg
adc
or
xchg
cmp
aas
dec
(bad)
pop
mov
je
mov
ficom
std
push
stos
jnp
push
movs
jo
pop
cmps
and
push
and
in
pop
jo
out
inc
or
xlat
mov
popf
xlat
test
jbe
jne
mov
and
inc
sub
jecxz
push
cli
cdq
aad
(bad)
rol
and
loopne
adc
retf
dec
cmp
loope
mov
popf
out
mov
and
sbb
outs
and
push
push
mov
sub
repnz
sbb
pop
in
push
push
psllq
pop
pushf
sub
mov
cmp
cld
pop
push
add
push
adc
ds
pop
pop
or
mov
rol
inc
adc
shl
dec
jae
int
pop
adc
movs
push
test
(bad)
(bad)
push
out
push
arpl
xor
shl
into
push
push
mov
xor
or
loopne
xchg
je
test
sti
out
or
addr16
lahf
aam
fidivr
mov
add
imul
sub
jmp
sub
jecxz
dec
mov
sbb
mov
call
popf
add
shl
cmp
cmp
in
add
lods
jecxz
sub
sbb
repnz
retf
xor
dec
mov
and
adc
dec
shl
pop
(bad)
aad
inc
out
rcr
(bad)
ficomp
into
dec
push
les
pop
int3
xor
sub
dec
cmc
lock
push
test
scas
inc
stc
push
mov
outs
arpl
push
cli
inc
movs
out
push
dec
lds
jmp
xor
jmp
mov
adc
movs
and
(bad)
fimul
pop
and
pop
(bad)
sahf
dec
jns
adc
mov
pop
mov
mov
loope
inc
dec
sub
ja
icebp
xor
loopne
jno
mov
fldenv
in
fild
js
push
jmp
(bad)
mov
pop
adc
retf
into
xor
inc
jecxz
cli
add
fild
add
outs
push
mov
xorps
xchg
ja
xor
lock
mov
and
adc
push
pop
mov
mov
push
ds
mov
jecxz
mov
test
retf
dec
mov
xchg
out
test
xchg
sub
sub
icebp
xchg
cdq
test
out
int3
in
pop
mov
dec
out
cmp
mov
das
popa
or
(bad)
popf
jg
mov
mov
mov
aaa
mov
dec
jge
mov
(bad)
cmp
(bad)
je
push
bound
lea
xor
pop
iret
dec
or
sub
push
stos
pop
and
jmp
cdq
adc
fisttp
shr
test
movs
ret
mov
sbb
xchg
pusha
cmc
rcr
stos
jle
cdq
sub
out
cmp
cmp
push
push
lea
push
cmp
adc
les
xor
jmp
movs
pop
xchg
aaa
dec
cmps
mov
cmp
pop
lods
mov
std
shl
jg
loop
test
jecxz
scas
inc
es
lods
jae
and
or
call
pop
es
call
call
rcr
push
or
and
popf
pop
mov
or
stc
mov
inc
inc
mov
inc
pop
push
and
bswap
imul
dec
xor
repz
fimul
jb
ja
lods
or
(bad)
retf
fild
xchg
stc
pop
inc
cmp
pop
mov
mov
aam
shr
sahf
dec
js
(bad)
push
int
mov
(bad)
cmp
jb
adc
mov
cwde
cdq
imul
sahf
xor
shl
xor
repz
outs
fwait
mov
sbb
lods
mov
ret
xor
or
xchg
jnp
inc
add
inc
cmp
ja
pop
fdiv
fdivr
mov
sbb
adc
push
sbb
add
ins
lods
les
(bad)
retf
(bad)
jge
lods
xchg
scas
outs
in
pop
pushf
out
ficomp
loopne
sub
mov
fsub
mov
retf
iretw
adc
push
mov
std
repnz
pusha
xchg
push
xor
test
outs
inc
pop
popa
sub
mov
mov
std
fcomp
lods
movs
hlt
push
lds
into
push
bnd
cdq
mov
rcl
xor
and
dec
cld
mov
shl
ret
dec
push
add
fstp
mov
xchg
jmp
lahf
outs
xchg
sbb
neg
jo
and
loop
add
ss
sub
inc
into
dec
push
pop
(bad)
cmp
add
cmp
(bad)
mov
pusha
fdivr
hlt
aas
icebp
inc
jmp
test
mov
ret
add
call
inc
and
inc
jp
imul
and
dec
jb
popf
inc
(bad)
mov
or
add
pop
mov
sub
dec
les
cmc
inc
and
mov
push
fwait
clc
fstp
pop
cs
xchg
push
mov
add
push
mov
cmp
lods
in
ja
lods
add
jb
mov
shl
mov
jb
rol
retf
and
lock
fcomp
xchg
push
jns
sahf
mov
lea
inc
clc
inc
fs
dec
icebp
scas
mov
inc
(bad)
mov
aam
gs
jnp
and
es
sahf
(bad)
sbb
fadd
push
sbb
and
xor
push
mov
mov
(bad)
mov
aad
jne
xor
lock
outs
jbe
push
ds
pop
lea
lds
dec
loop
pop
cmp
or
jle
pop
xchg
retf
push
nop
addr16
or
addr16
std
outs
movs
add
repz
(bad)
mov
lds
dec
pop
or
pop
lea
pop
mov
push
retf
push
imul
mov
push
add
movs
add
mov
and
and
pop
add
test
gs
es
mov
pop
aad
jmp
dec
xor
push
mov
push
popf
or
xor
mov
inc
inc
pusha
and
inc
jno
sar
and
cmc
fldenv
ins
xor
sbb
daa
mov
and
jb
cdq
xchg
fmul
or
clc
xor
fs
sbb
and
adc
cmp
sbb
icebp
push
sub
cmc
xchg
jno
ret
and
fimul
sub
pop
cmc
cs
jb
xchg
pop
or
mov
(bad)
movs
mov
das
leave
push
rcr
xchg
xor
fidivr
loopne
popa
inc
icebp
shl
(bad)
ficom
outs
jbe
rol
lock
icebp
jo
and
shl
add
push
cmc
int
js
stc
cmp
mov
or
jecxz
adc
ror
add
sub
mov
repnz
mov
cmc
and
xor
sub
jg
mov
or
ror
js
shl
rcl
in
ins
leave
repnz
out
and
add
dec
(bad)
sub
and
dec
call
and
adc
adc
xor
adc
jl
lea
dec
rcl
in
sub
pop
jae
stc
(bad)
cmp
les
inc
mov
fwait
or
push
ins
add
cmp
adc
add
in
ss
ds
shl
add
loop
sbb
out
mov
push
jb
in
and
ret
adc
stc
aad
pop
outs
sub
mov
jno
stos
test
jmp
imul
clc
enter
loope
stc
or
inc
add
mov
mov
cdq
iret
jg
inc
imul
jbe
and
lods
cmps
loope
mov
add
mov
or
mov
fwait
xchg
jl
jo
daa
sti
loop
adc
cmp
inc
test
pop
mov
cmps
shr
mov
pop
stc
loop
das
mov
jb
das
xchg
xchg
sbb
inc
pop
jo
xchg
lea
das
mov
and
xchg
ret
and
ins
sub
ins
test
sbb
fidivr
in
mov
jae
ja
sbb
repnz
add
hlt
fdiv
test
push
in
jg
mov
(bad)
cli
jp
sub
aam
inc
mov
out
or
inc
aaa
add
xor
cmc
xchg
pop
inc
inc
sbb
dec
pusha
and
aaa
outs
push
(bad)
jns
rcr
push
xor
jnp
mov
shr
cmps
inc
adc
dec
ins
sbb
sbb
outs
mov
xor
add
add
sub
sbb
sub
sbb
mov
mov
sub
pop
repnz
popf
leave
pop
call
aad
add
xchg
push
icebp
or
inc
data16
push
jecxz
fdiv
movs
js
mov
imul
mov
ret
(bad)
sbb
xor
sbb
loop
data16
call
mov
vhaddpd
js
loopne
lea
push
ss
jno
pop
addr16
movs
dec
bound
add
push
jbe
(bad)
js
jb
sub
neg
out
and
adc
adc
test
loop
xchg
push
rcl
push
push
inc
test
fwait
rcl
fldenv
jne
xor
add
sub
jge
lods
fstp
add
test
fldcw
dec
adc
and
add
and
gs
je
bound
out
xchg
inc
aad
sti
repz
stos
loope
pusha
pop
xor
frstor
inc
mov
jle
jns
sub
call
xor
jge
fld
daa
xor
scas
fucomip
sbb
jge
outs
ret
push
popf
dec
sbb
cmc
sbb
dec
jl
jae
scas
push
push
push
push
fnstenv
loopne
sbb
retf
fist
add
adc
pop
push
sti
xchg
(bad)
jle
cld
sbb
xor
movs
push
and
enter
call
adc
add
inc
iret
jno
push
into
push
(bad)
popa
repz
test
push
ins
fldenv
shl
pop
rcr
inc
popf
inc
es
retf
xor
xor
or
mov
loopne
or
clc
push
ss
test
inc
sahf
je
out
push
mov
cmp
push
sbb
in
outs
daa
sbb
clc
inc
cmp
jno
xor
fcom
clc
dec
dec
push
jb
je
inc
jge
add
lahf
not
clc
add
push
inc
xchg
pop
dec
daa
int3
push
cmp
mov
dec
jbe
out
cmp
mov
mov
or
iret
shl
fistp
jle
sti
fadd
pop
cmp
mov
popf
mov
and
push
lds
lods
std
push
push
push
add
mov
xchg
push
pop
add
add
call
and
sub
les
fiadd
shr
sbb
arpl
loopne
jnp
icebp
or
pop
pop
pop
ds
cmps
jp
aad
test
mov
push
(bad)
icebp
add
mov
jg
add
adc
sar
aad
fld
sbb
sbb
or
rcl
loope
fld
jns
jle
bound
xor
xchg
or
outs
scas
sub
test
mov
fld
movs
pop
ss
push
add
or
test
inc
xchg
xchg
js
xor
fs
sub
mov
mov
int3
fisttp
sub
adc
pop
mov
lods
mov
add
fwait
xchg
push
stos
adc
pop
iret
out
popf
test
fld
add
and
aad
xlat
add
and
xor
jb
sbb
outs
sub
jo
add
xor
lods
and
sub
cmp
(bad)
aaa
add
mul
add
rol
int3
(bad)
repz
dec
pop
sbb
xchg
mov
mov
das
xchg
pop
sub
xchg
add
sub
jo
mov
ins
mov
push
popf
enter
xchg
pop
sar
test
sub
sar
clc
jnp
mov
xchg
shl
and
idiv
cmp
mov
ins
rol
push
lahf
cli
pop
push
shl
retf
dec
hlt
dec
push
imul
and
push
sub
jb
mov
ret
fisttp
repnz
xor
and
xor
out
daa
call
jmp
rcr
push
xlat
inc
shl
and
adc
aaa
in
or
aam
sub
leave
cmp
inc
push
jmp
call
out
loopne
jmp
iret
sub
sub
sub
repz
push
sub
gs
sbb
fimul
mov
aas
or
sbb
mov
bound
push
icebp
ret
xlat
jns
ret
mov
mov
add
popf
inc
sub
pop
leave
cmp
push
mov
test
dec
ss
popf
jmp
sub
iret
call
dec
imul
js
cdq
sub
mov
(bad)
ss
pop
ins
outs
dec
jge
sbb
dec
push
push
ds
stos
ret
sbb
pusha
jg
aad
mov
sub
mov
outs
sub
mov
das
nop
xor
mov
sub
add
je
or
hlt
add
inc
add
pushf
fs
es
push
movs
cmp
shr
and
pop
fwait
and
(bad)
in
push
and
out
int3
or
push
pop
int3
cdq
dec
scas
mov
jmp
push
pusha
xor
test
mov
inc
aas
inc
and
das
movs
inc
sbb
push
mov
jbe
rcr
arpl
add
jbe
add
out
pop
in
ret
popf
inc
push
dec
and
push
cmp
xchg
xor
mov
icebp
jno
gs
mov
dec
sar
ss
adc
(bad)
and
outs
or
or
rcr
pop
xor
std
retf
jns
cli
(bad)
test
xor
out
pop
dec
sbb
xchg
(bad)
push
pop
mov
adc
pop
ror
sbb
shrd
cs
les
cld
imul
push
mov
popa
xchg
ret
xlat
(bad)
jp
call
lock
dec
adc
inc
int
jbe
push
xor
push
jae
(bad)
sbb
hlt
rcr
js
and
popa
mov
rol
stc
adc
pop
sub
dec
call
add
jmp
add
test
mov
add
cs
jae
nop
xor
push
retf
push
popa
loopne
adc
ret
xor
sub
jp
pop
jo
fwait
rol
(bad)
nop
aas
xor
xor
pop
push
das
adc
fnstsw
pop
test
popf
popf
in
in
sbb
fcmove
jo
xor
pop
mov
xchg
and
imul
icebp
inc
sbb
stc
(bad)
outs
movs
retf
cdq
addr16
xor
push
or
jge
xchg
(bad)
shl
out
add
cmc
jae
fwait
test
add
sbb
sbb
xchg
cmp
add
jecxz
mov
mov
jmp
pop
cmp
inc
(bad)
adc
and
sbb
mov
xchg
dec
add
out
cdq
add
mov
pop
sub
add
mov
gs
pop
in
dec
ins
pop
xor
add
and
xchg
pop
mov
nop
or
cmp
adc
mov
or
dec
dec
pop
push
cmp
loope
mov
push
adc
xor
inc
cdq
sub
pop
out
dec
pop
ins
inc
jns
push
xor
xchg
fninit
fisubr
lock
sub
and
xchg
adc
dec
mov
fild
call
push
push
sub
pushf
pushf
add
sar
mov
ins
mov
out
pushf
or
xchg
jo
dec
inc
(bad)
mov
inc
push
mov
push
sbb
xchg
xchg
jno
inc
cld
mov
jecxz
fmul
loop
ja
xchg
call
cmp
test
jmp
adc
xchg
mov
xor
mov
sub
scas
dec
xchg
inc
cmp
jo
cwde
and
and
and
push
xor
mov
sub
and
mov
sbb
setno
mov
pop
mov
(bad)
leave
js
repz
push
call
jbe
push
or
mov
dec
movs
fbstp
shl
push
in
mov
test
pop
ret
js
inc
aaa
add
and
mov
enter
int3
mov
aad
mov
pop
out
lods
xor
pop
sbb
push
(bad)
arpl
paddusb
ins
movs
aas
test
mov
cmp
or
cmp
addr16
popa
ret
xor
push
loop
pop
mov
and
lea
xor
pop
pop
fs
aas
call
sbb
dec
mov
push
or
outs
jge
xchg
sub
aas
pop
xchg
inc
cmp
sbb
cld
retf
push
and
sbb
pop
cmp
scas
fild
cli
cs
add
xchg
xchg
inc
xlat
std
fidiv
imul
or
push
and
add
adc
test
mov
hlt
cmp
pop
loopne
mov
or
sbb
xor
add
fwait
leave
mov
pushf
mov
jl
int3
and
cmp
aam
mov
packuswb
inc
pushf
add
(bad)
fcomip
loop
loopne
or
pop
sub
call
sub
inc
or
sub
retf
call
or
dec
add
retf
xchg
shl
in
fiadd
call
and
inc
sbb
xchg
mov
add
hlt
loope
ja
adc
lahf
in
arpl
jnp
neg
icebp
cmp
adc
jb
adc
cs
xchg
add
jmp
fild
xchg
arpl
xor
lock
xchg
xor
ss
aas
stos
dec
lds
xlat
sbb
pop
pop
fdivp
xchg
cmc
repz
inc
dec
inc
test
jl
aaa
jo
xchg
lahf
sbb
or
test
cmp
bound
fist
jl
out
mov
xchg
lds
pop
shl
cdq
pop
dec
xor
sub
jp
jp
inc
ins
retf
cmp
repz
ret
cdq
fsubp
dec
clc
dec
lahf
xlat
mov
xchg
lods
pop
sbb
lock
cmp
in
movs
xor
add
pop
les
popa
dec
jp
push
mov
and
jnp
lods
jle
pop
sbb
push
fiadd
lods
and
and
sub
addr16
mov
es
jg
div
mov
push
mov
pop
fistp
(bad)
rol
jb
fisttp
sahf
gs
aad
pop
xchg
push
fild
int3
lock
jp
aad
xor
icebp
cmp
jmp
jge
clc
and
inc
or
leave
sub
repz
pop
push
retf
movs
jl
lar
or
sub
mov
cdq
jmp
(bad)
clc
mov
jecxz
lods
adc
popf
lock
pop
sbb
mov
xchg
xor
movs
rep
call
push
in
add
mov
dec
mov
pop
dec
lods
ds
daa
or
dec
pop
je
in
test
(bad)
cmp
mov
push
sahf
je
not
xor
lock
sub
and
arpl
xchg
dec
call
sbb
pop
lock
lea
pop
cld
mov
add
sub
xor
imul
jno
aad
enter
cmp
adc
jb
xchg
cmp
ret
mov
mov
lods
and
and
shl
xor
add
mov
stos
cld
lods
inc
dec
inc
xchg
in
jmp
pop
jmp
and
inc
aam
cwde
jo
jbe
push
and
sbb
ins
jbe
cmpps
mov
jl
pop
xchg
cwde
mov
or
rol
pop
inc
cs
inc
or
pop
or
popa
add
mov
mov
mov
cmp
dec
outs
jg
scas
push
pusha
sub
lahf
adc
pop
and
cmp
xlat
movs
dec
mov
inc
or
xchg
mov
sbb
sbb
mov
inc
jno
mov
xor
div
adc
lds
jecxz
es
push
pop
je
cli
and
into
loopne
sub
mov
cld
fsub
cmps
lfs
pop
add
test
adc
mov
in
sahf
cmp
pop
and
addr16
mov
dec
jb
js
mov
add
pop
mov
stc
push
mov
jne
or
sbb
ins
ins
inc
outs
(bad)
jg
mov
adc
and
dec
scas
adc
cmp
inc
sub
out
js
cmp
xor
retf
mov
movs
sbb
adc
mov
add
retf
or
push
popf
ret
mov
in
mov
dec
mov
mov
sar
and
das
ja
frstor
aas
imul
sub
iret
push
lea
mov
jns
daa
push
pop
aam
gs
sub
and
inc
sbb
daa
es
add
jg
mov
jno
xor
stc
mov
movs
sub
jnp
cmp
pop
in
shl
(bad)
test
int
rcl
fisttp
xchg
inc
adc
jmp
sub
retf
xchg
xlat
push
pop
lmsw
add
push
and
fadd
sub
test
aam
shr
sub
retf
ror
dec
pop
in
or
out
rcl
xchg
push
xchg
xchg
fcom
outs
call
loope
sub
fcomp
fidiv
adc
inc
mov
(bad)
(bad)
xchg
in
dec
and
or
movs
sub
ficomp
xchg
pop
(bad)
pop
xor
cwde
and
inc
xchg
jmp
mov
jecxz
inc
arpl
pop
jb
cmp
cs
aaa
fnstsw
scas
cmp
mov
xchg
sub
inc
sub
fistp
outs
pop
sub
sar
lock
out
movs
(bad)
push
aaa
leave
pop
pop
sub
mov
pop
jle
xor
push
test
test
aam
sbb
pop
inc
xchg
(bad)
jp
sbb
jmp
in
jb
xchg
cmp
pop
inc
neg
inc
jmp
jnp
xor
int
test
jecxz
repz
loop
xchg
cmc
sub
dec
lock
and
xlat
mov
imul
shr
and
push
dec
pop
sbb
and
int
xchg
add
or
push
dec
daa
inc
call
test
push
aas
cmp
adc
jae
lods
pop
xor
inc
fadd
inc
xchg
push
es
(bad)
sbb
pushf
push
ds
pop
pop
sahf
hlt
cld
stos
cmp
inc
stc
and
add
mov
mov
std
cmps
add
xor
pop
not
hlt
repnz
pusha
jo
ss
push
jp
sub
pusha
jns
or
mov
jae
(bad)
push
call
lods
or
dec
xlat
fwait
sub
dec
or
mov
sar
or
jmp
push
add
pop
ret
(bad)
pop
popf
cmps
push
jbe
sbb
test
cmc
cmp
xchg
pop
mov
out
push
push
add
pop
pop
mov
xchg
dec
push
jecxz
push
jno
cld
add
inc
out
xchg
pop
or
mov
and
push
psubb
pusha
add
pop
ja
in
call
xchg
ficom
and
fst
outs
in
inc
cld
and
xchg
add
mov
jb
dec
call
movs
push
cdq
cdq
test
mov
xchg
ss
test
jb
rcr
adc
stc
mov
test
neg
lea
cmp
gs
cmps
cmp
mov
xchg
cwd
inc
sub
inc
rcr
rcl
and
pop
sbb
pop
inc
push
(bad)
movs
jnp
nop
outs
dec
jge
mov
inc
sub
je
pop
maxps
and
sahf
jne
sar
loope
dec
fsub
cmp
stos
daa
jge
jmp
(bad)
popf
jne
and
sahf
sub
pop
add
clc
popf
rcl
cmp
push
out
icebp
aas
push
test
lods
xor
cmp
pop
xchg
retf
pop
fld
test
js
pop
or
stos
ror
bound
pop
jb
in
xor
adc
and
movs
or
sub
sbb
cmp
(bad)
repz
inc
push
xchg
jnp
inc
inc
adc
dec
iret
jnp
mov
stos
lds
ret
mov
sub
cdq
mov
pop
int3
adc
test
cld
adc
mov
mov
push
retf
aaa
fidiv
mov
mov
mov
popf
je
leave
addr16
ficom
sbb
cmovno
icebp
and
dec
mov
mov
stc
xchg
stc
retf
adc
gs
out
mov
shl
shr
xchg
mov
sub
out
aas
push
pop
mov
dec
(bad)
xchg
(bad)
push
int
fild
imul
sub
mov
mov
mov
cmps
cmp
pusha
arpl
xchg
test
dec
retf
repnz
arpl
es
shl
xchg
lahf
idiv
(bad)
in
fiadd
aaa
or
ins
(bad)
xchg
daa
cwde
add
outs
sbb
xchg
add
fcmovne
mov
jle
fidiv
dec
(bad)
cld
js
cs
push
xchg
cmp
mov
adc
sbb
mov
jne
adc
fdivr
mov
int
push
sub
dec
pop
xchg
adc
leave
(bad)
loop
xor
jo
mov
push
cmc
test
movs
sbb
std
and
dec
push
loope
and
mov
mov
mov
push
shr
inc
repz
xchg
push
movs
popf
push
out
add
lahf
jmp
popa
iret
jecxz
sbb
pop
mov
jbe
fadd
xchg
or
adc
movs
jmp
imul
xchg
js
imul
sub
and
inc
ss
jbe
xor
mov
(bad)
adc
push
and
retf
pop
pop
rcr
adc
pop
ins
test
mov
call
cld
pop
jo
arpl
pop
cmp
sub
mov
and
jge
adc
je
pop
xchg
adc
ins
ror
or
addr16
pop
sbb
ins
aas
add
jg
jmp
jle
test
inc
shr
cli
outs
or
jae
test
pop
mov
ror
outs
popa
cmp
(bad)
sbb
daa
cs
and
pop
retf
test
adc
fldcw
add
sub
call
inc
xor
mov
arpl
test
mov
push
in
add
scas
stos
clc
push
pop
sahf
out
pop
add
jbe
push
mov
dec
mov
jns
iret
js
mov
pop
add
les
mov
icebp
fs
and
lds
cs
add
fiadd
mov
cmp
sub
xor
call
xchg
retf
push
mov
or
xchg
call
stos
out
push
aaa
push
mov
and
lahf
push
in
push
pop
outs
sub
das
or
and
adc
jae
xchg
mov
arpl
stc
cmp
sbb
or
(bad)
sub
inc
mov
popf
int
fs
mov
cmp
xor
dec
retf
mov
call
mov
mov
imul
aaa
xor
test
fnstenv
xchg
mov
sbb
push
pcmpeqb
test
int3
sub
inc
cmp
push
xchg
inc
test
pop
fild
test
mov
cmp
mov
bound
mov
pop
enter
dec
(bad)
cmp
cmp
sub
pop
and
stos
xor
mov
jnp
pop
je
lahf
stos
setl
leave
(bad)
pop
mov
adc
push
push
push
nop
sub
js
ins
jecxz
fbld
add
or
inc
rcl
mov
iret
add
out
loopne
sbb
daa
inc
sti
fxch
arpl
add
scas
mov
add
test
push
iret
ss
and
jecxz
cs
pop
cdq
dec
sahf
cmp
cmps
pop
pop
add
out
mov
inc
or
xor
or
out
cs
cdq
xchg
movs
mov
inc
push
xchg
push
push
sub
pop
push
jnp
inc
mov
lds
mov
mov
xor
cwde
mov
cdq
cmps
push
cmp
add
out
push
or
ja
inc
sub
inc
push
jecxz
inc
and
ret
in
lahf
xor
inc
push
xchg
ds
sbb
or
int
nop
or
clc
xor
xor
push
mov
sub
dec
add
xchg
cli
mov
add
inc
out
neg
xor
fild
push
(bad)
jecxz
sbb
lahf
outs
mov
test
cmp
pop
movs
aad
dec
je
cmp
sti
jp
sub
ja
scas
lahf
adc
fiadd
(bad)
xlat
jbe
test
and
neg
adc
retf
rcr
pop
mov
popa
push
popa
jae
into
sbb
xor
or
ror
xchg
xchg
xchg
leave
xlat
push
jg
jnp
les
cmps
ror
test
adc
dec
mov
lock
dec
into
fidiv
sub
shl
sahf
fs
cli
pop
xchg
xor
js
bound
aad
das
cld
test
pop
mov
jl
mov
jmp
jae
icebp
push
pop
mov
addr16
xor
jns
imul
jg
dec
sub
sub
adc
jo
sbb
lods
adc
aam
out
xchg
repz
pop
lock
jmp
lods
jbe
(bad)
ficomp
call
lea
retf
sbb
inc
fld
call
xor
jnp
sar
rcl
and
xor
arpl
sub
aad
pop
in
add
loop
push
out
xchg
push
push
mov
pop
outs
sub
mov
test
mov
sub
dec
push
mov
retf
jmp
mov
pop
push
fcomp
retf
dec
pop
mov
adc
xor
mov
outs
inc
push
jo
lds
cmp
ins
shl
fst
sbb
adc
shr
test
ret
pushf
test
outs
sub
call
inc
sub
jmp
cmp
jmp
(bad)
sbb
xor
mov
push
out
ret
test
mov
xor
cmp
mov
out
ja
dec
mov
loop
cmps
dec
pop
mov
mov
xor
shr
ffree
add
ds
inc
dec
inc
sbb
push
outs
lods
dec
push
les
inc
popf
mov
icebp
stos
aaa
fs
in
inc
lods
sbb
mov
(bad)
cmp
test
xor
and
(bad)
pop
mov
fwait
(bad)
shl
int3
cmp
pop
xchg
and
push
cmc
adc
jecxz
pop
iret
pop
cmp
test
sbb
test
xchg
into
add
jbe
in
push
imul
shl
cmp
retf
rcl
pop
pop
jb
push
repz
push
les
out
inc
(bad)
retf
jbe
fsubrp
push
mov
mov
pop
repz
sar
adc
and
test
cld
pop
js
mov
call
int3
(bad)
fcomp
pop
add
aam
add
cmp
pop
mov
inc
pop
xlat
mov
pop
xor
dec
sbb
xchg
push
jecxz
mov
inc
xor
in
dec
push
scas
lahf
paddusb
xchg
inc
stos
(bad)
loop
cs
push
inc
pop
aaa
cmp
fs
iret
add
mov
adc
push
lock
pop
sub
imul
popf
mov
test
gs
pop
pushf
nop
cmp
pop
jbe
or
loopne
xor
sub
enter
push
fcomi
stos
push
jbe
jl
loopne
jmp
and
sbb
fs
push
loopne
icebp
call
add
imul
mov
pop
call
xor
mov
mov
test
(bad)
adc
dec
in
add
int3
mov
mov
cmc
pop
or
mov
xor
int3
(bad)
sti
inc
sub
js
add
and
push
add
repz
sbb
or
int
push
sbb
test
aas
xchg
fcmovu
lods
ja
mov
mov
push
in
and
mov
dec
mov
push
sub
jne
dec
xchg
or
iret
and
mov
add
mov
in
pop
je
fcmovnbe
dec
cmp
aas
inc
repz
sub
(bad)
in
push
(bad)
loopne
fucomip
cmp
cmp
push
ss
sub
dec
cmc
fs
repnz
inc
inc
add
retf
sub
push
mov
lods
pop
and
pop
add
imul
scas
sbb
rol
pop
pop
fistp
movs
sub
mov
fcomp
push
and
mov
fisttp
or
repz
cmp
enter
(bad)
xchg
pop
(bad)
fcom
rcr
sub
adc
dec
and
sbb
and
das
into
sbb
jl
or
mov
add
push
push
pop
shr
fild
sti
inc
mov
inc
push
xor
loop
cs
out
pop
jns
lds
dec
add
pop
sti
fstp
sti
xor
pop
(bad)
shr
movsx
fsub
push
(bad)
sbb
js
ins
dec
mov
nop
sub
ja
dec
punpckhbw
mov
movs
xor
test
pop
out
dec
stc
pop
(bad)
mov
call
adc
into
bswap
or
sbb
lods
mov
add
mov
jg
jle
vpmacsdqh
dec
ret
cdq
push
cmps
outs
jl
mov
aad
aam
(bad)
fild
sbb
movs
loop
add
mov
arpl
sbb
inc
mov
mov
or
cmp
xchg
mov
out
pushf
ds
lea
lock
scas
jno
push
sub
aam
ret
dec
in
pop
out
pop
aad
xlat
sub
sti
mov
div
mov
jecxz
fidivr
add
jae
icebp
arpl
fadd
sub
pop
pop
mov
(bad)
out
shl
pop
test
xor
(bad)
push
xchg
fisubr
call
jne
cmp
fst
cwde
lds
je
scas
fsub
xor
cli
shl
or
or
int3
mov
das
mov
and
ret
ret
jb
cdq
push
push
cdq
push
push
xchg
leave
je
cld
jno
cmp
xor
lods
pop
imul
sbb
sub
xchg
dec
lea
imul
xchg
js
xor
in
xchg
inc
xor
push
jbe
les
push
sbb
pop
pop
adc
xor
inc
scas
fs
sub
cmp
sub
movs
xor
cmp
and
mov
xchg
pop
jnp
jne
sub
pop
xor
sbb
push
xchg
rol
popf
pop
push
push
mov
repz
pop
inc
(bad)
inc
repnz
inc
dec
retf
adc
jp
fldlg2
aas
aam
outs
into
sub
push
sub
push
dec
push
mov
ins
xor
inc
sbb
dec
aam
adc
imul
xchg
xor
push
repz
call
dec
mov
add
jne
aas
out
adc
pop
lock
mov
test
fistp
pop
and
xchg
stos
jns
mov
out
call
jg
push
out
movs
xor
dec
cs
imul
loope
mov
leave
iret
xor
xor
pusha
push
push
dec
dec
cmc
xor
in
mov
lahf
pop
or
cmp
sbb
cmp
jmp
jne
retf
pop
or
or
shl
sahf
setbe
in
jnp
lahf
adc
mov
ja
or
push
out
mov
ss
sub
sub
jg
jecxz
mov
out
inc
nop
jle
mov
sbb
mov
xor
jns
and
jle
(bad)
add
hlt
les
nop
cmp
in
iret
xchg
enter
lea
inc
xor
iret
and
loopne
int
xor
repz
pop
repnz
cmp
dec
(bad)
and
in
mov
ret
pop
test
mov
or
mov
fwait
jmp
call
xor
imul
out
cmp
aad
ins
inc
gs
lods
ffreep
cli
movs
ss
mov
sub
fmul
in
add
mov
aas
sbb
enter
or
test
dec
or
test
cdq
fldcw
dec
sar
push
je
push
stos
les
cmps
jl
mov
das
aas
movs
ror
in
cs
dec
dec
inc
dec
dec
jbe
cmp
mov
sbb
dec
pop
pop
dec
pop
out
call
arpl
pop
pop
cmp
sub
ins
js
imul
pop
mov
stos
or
jp
and
add
lock
ret
in
xchg
stos
jmp
cmp
pop
and
ret
cwde
stc
xchg
pop
xor
xchg
shr
pop
je
xor
pop
jo
push
outs
xlat
mov
and
inc
in
xlat
mov
(bad)
fs
into
js
cmc
(bad)
call
adc
and
jl
cmp
rcr
push
jae
add
ffree
push
mov
or
jle
mov
mov
and
loopne
test
cwde
iret
out
push
and
pop
repnz
push
pushf
ins
int
clc
(bad)
fsubr
add
sbb
adc
push
xor
xlat
jno
push
enter
mov
sub
push
cwde
sub
dec
bound
adc
jo
call
js
hlt
dec
xor
ret
mov
push
sti
retf
in
fsubr
hlt
jmp
hlt
xor
sub
test
out
aad
adc
xchg
ss
mov
mov
sbb
aad
clc
pop
push
mov
inc
fldenv
jg
push
and
or
out
pop
dec
mov
(bad)
dec
pop
jnp
fwait
jp
enter
loopne
dec
fs
cmp
sar
(bad)
sub
or
lods
sub
imul
(bad)
sti
fucom
(bad)
stos
cs
inc
ds
shl
and
aad
xor
mov
or
sbb
mov
add
mov
push
inc
arpl
ret
daa
mov
mov
cmp
mov
or
sub
jne
push
cli
int
jecxz
pop
jo
or
xor
fcomp
mov
pop
fnstcw
hlt
xchg
add
leave
scas
outs
jnp
sub
sub
push
sti
inc
mov
cdq
mov
push
inc
mov
fdivrp
mov
nop
leave
fs
sbb
dec
call
xchg
mov
ja
(bad)
push
or
cdq
movs
ror
add
imul
sar
cmc
jle
xor
jae
inc
mov
jmp
dec
int
iret
sub
jge
xchg
pop
inc
jbe
int3
lahf
pop
push
rol
sub
push
imul
mov
sub
fstp
xor
dec
sub
iret
jo
ins
fnsave
xchg
test
popf
test
ffreep
sub
jecxz
fisubr
sub
adc
mov
inc
mov
push
pop
out
adc
out
dec
or
xor
add
sub
push
fstp
cmp
jecxz
fisttp
xchg
and
push
outs
iret
dec
xor
scas
retf
add
and
or
inc
aaa
pop
adc
ja
xor
lods
push
mov
inc
mov
movntq
movs
pop
loopne
je
icebp
mov
call
mov
pop
sbb
(bad)
loope
lds
inc
dec
push
jae
pop
fld
stos
or
pop
push
add
(bad)
adc
sub
sti
cwde
and
mov
xchg
inc
jne
add
pushf
xchg
retf
or
adc
inc
xchg
mov
movs
fsubr
outs
fwait
scas
ins
cld
add
loop
lods
jg
xchg
es
add
pop
and
and
add
inc
out
addps
push
fld
ret
jecxz
out
cmps
dec
ja
pusha
fmul
stc
mov
xor
(bad)
fs
and
popa
or
inc
std
jecxz
ret
jo
sub
rcr
mov
mov
jno
cli
fcom
and
jp
outs
cmps
in
das
jo
ror
cwde
add
cmp
and
rcr
mov
and
repnz
aas
test
push
mov
in
add
mov
fstp
dec
cmps
fdiv
cmps
xlat
jecxz
(bad)
xlat
xchg
xor
push
test
dec
add
mov
cmps
in
test
push
xor
cmc
jne
sbb
cli
jb
pusha
repz
or
xor
cmps
adc
jle
inc
jl
out
movs
es
mov
nop
pop
outs
fadd
lods
sub
sub
xor
ja
inc
lods
and
add
test
mov
jge
sub
and
xchg
jg
mov
pop
mov
dec
push
jne
mov
or
hlt
sbb
stos
sbb
cmp
jp
inc
stc
inc
sub
mov
xchg
pushf
pushf
ret
xchg
aam
adc
jbe
xchg
iret
inc
xchg
ds
and
movs
lahf
dec
pop
jecxz
cdq
inc
adc
adc
mov
mov
ins
fistp
push
mov
pusha
sub
mov
mov
(bad)
sbb
add
iret
cmp
rep
jmp
lea
cli
push
jp
nop
sbb
add
jnp
leave
arpl
push
mov
data16
(bad)
dec
dec
test
ss
and
inc
cmc
repnz
fisub
mov
inc
dec
sub
or
add
test
ins
test
and
and
js
loopne
adc
jg
xor
cmp
ins
sbb
movs
inc
mov
mov
(bad)
(bad)
sbb
aam
or
inc
and
and
ins
push
pop
les
(bad)
mov
mov
cwde
lods
push
pop
push
push
pop
mov
lock
push
add
loop
clc
test
sbb
(bad)
ror
imul
cld
ror
mov
repz
inc
jl
xchg
addr16
cdq
inc
and
ds
mov
int3
pop
cwde
dec
pop
mov
jecxz
pop
outs
das
xor
inc
push
dec
ins
jmp
cmp
or
iret
inc
les
fwait
div
mov
or
dec
xchg
aaa
ror
call
pusha
and
int
mov
dec
loope
lahf
lock
add
sub
sbb
inc
sub
ins
jns
push
out
popa
sbb
dec
dec
adc
dec
cli
sub
jnp
dec
in
xchg
push
or
dec
adc
sbb
ss
dec
or
clc
xchg
aam
mov
and
sbb
cdq
or
xchg
mov
fcomp
sub
adc
lock
mov
int
cmp
adc
scas
lea
or
(bad)
and
pop
into
fdivr
sbb
mov
inc
popf
enter
ficom
enter
xor
cmp
jne
pop
jne
jge
add
inc
movq
cmp
cmc
jb
test
lea
push
cmp
inc
mov
pop
leave
inc
xor
sub
adc
arpl
sar
mov
mov
adc
mov
arpl
test
fist
call
in
dec
adc
lods
(bad)
gs
retf
adc
push
into
sbb
xor
add
lea
push
xlat
mov
dec
rcr
xchg
in
sub
cmp
push
xchg
and
push
paddsb
rol
fstp
ins
int
add
mov
adc
rol
(bad)
cmc
clc
iret
jmp
idiv
sub
fwait
aaa
call
js
jecxz
popa
adc
and
jno
sbb
jae
cmp
jno
test
bswap
pop
xor
in
cli
cmp
fimul
pop
enter
inc
sbb
inc
jl
inc
ror
push
mov
out
mov
jg
xlat
push
or
add
sbb
xchg
pushf
mov
xchg
jae
test
mov
xchg
jne
and
cmp
call
js
jae
ror
and
xchg
sbb
and
cdq
push
pop
sub
(bad)
and
in
push
bnd
push
xchg
xor
xlat
inc
pop
jno
in
xor
jae
lea
cmp
retf
mov
mov
div
xor
pop
cmp
pop
jg
int3
mov
cmp
neg
loopne
cmp
or
sar
icebp
cmps
sahf
mov
popa
pop
shr
dec
inc
sub
xor
cmps
jmp
and
adc
mov
push
lods
mov
js
in
cmp
test
ins
clc
jbe
setg
push
test
pusha
jns
out
leave
xor
xchg
dec
test
fld
out
sub
dec
add
xchg
test
cmp
cmp
and
add
sub
sub
imul
rol
xchg
call
in
sub
ret
(bad)
mov
es
sahf
pop
jbe
in
ror
inc
into
enter
pop
lock
add
jbe
or
add
js
repnz
xor
retf
pop
shl
mov
mov
test
jp
imul
rcr
test
push
inc
dec
sbb
outs
xor
rcl
pushf
aas
jp
mov
test
or
sub
ror
js
popa
jo
jecxz
and
dec
pop
test
adc
cli
ss
(bad)
out
pop
and
adc
pop
jo
ins
mov
retf
or
(bad)
xor
loop
outs
xchg
cmps
pop
retf
jle
mov
jmp
out
pop
push
mov
mov
loope
aas
inc
sahf
aas
cmps
mov
js
cs
(bad)
dec
inc
xchg
rcl
jmp
jle
lahf
cmps
shr
out
lods
pushf
xor
add
xor
aaa
sbb
inc
adc
mov
adc
mov
sbb
cdq
xchg
add
jp
fild
dec
hlt
inc
lods
psadbw
jb
and
pop
inc
jae
jmp
je
iret
in
inc
dec
in
retf
dec
pop
scas
and
icebp
jle
dec
add
jle
hlt
fistp
rcr
inc
push
mov
call
sbb
xchg
fsubr
xchg
push
cmps
cmps
sti
mov
jp
xor
or
fistp
and
mov
sbb
mov
mov
mov
out
repnz
es
sub
inc
sub
and
jnp
sti
mov
sti
xchg
mov
ret
xor
jno
cmp
loopne
test
jb
mov
adc
mov
jecxz
push
sti
sub
inc
int3
(bad)
cmp
sub
xchg
bound
icebp
movs
in
inc
and
sbb
pop
(bad)
push
mov
or
sbb
mov
lds
enter
mov
cmp
test
stos
push
or
xor
clc
popf
dec
add
ja
mov
(bad)
addr16
adc
push
(bad)
std
stos
xor
call
out
mov
mov
mov
cmp
fidiv
test
addr16
mov
dec
xchg
lods
cmc
sbb
ss
out
jb
xchg
sub
iret
inc
ret
jge
ins
mov
loopne
call
mov
movs
fcmovbe
dec
mov
pop
outs
push
mov
std
add
sahf
fisttp
push
cs
xchg
push
pop
dec
lds
mov
adc
or
mov
(bad)
loope
dec
cmp
and
or
retf
add
in
xor
adc
sbb
mov
mov
xchg
repz
adc
sbb
frstor
and
cdq
shl
(bad)
out
xor
call
(bad)
in
les
add
add
xlat
sub
aaa
jbe
loopne
push
xchg
sbb
xor
lods
push
call
xlat
dec
scas
jne
and
jg
in
xchg
cmp
jmp
xchg
mov
sub
not
xor
jp
jp
int3
test
ror
inc
xchg
mov
popf
fiadd
inc
ins
mov
jne
push
sub
and
ror
fsub
aas
jo
pop
mov
adc
sbb
mov
dec
push
sub
or
or
mov
sub
hlt
adc
mov
mov
arpl
push
mov
ins
dec
or
mov
push
mov
ror
mov
xchg
pop
cmps
sar
jbe
adc
test
push
xchg
mov
outs
sahf
pop
sbb
ins
repz
inc
call
dec
cmc
jno
adc
sub
and
cmps
and
fwait
add
(bad)
jecxz
or
dec
fistp
int
push
icebp
and
sbb
ja
or
(bad)
retf
shr
loope
fnstenv
xchg
out
loope
mov
add
retf
inc
gs
xchg
sub
das
std
adc
jg
pop
ficomp
and
ins
mov
les
sub
xor
cmp
push
and
jge
shr
xchg
rcr
jp
in
or
cld
or
pop
sti
add
xchg
aam
and
xchg
(bad)
jmp
(bad)
mov
pop
jb
(bad)
adc
stos
cdq
inc
sbb
sbb
sub
cdq
test
out
(bad)
dec
shr
and
mov
and
mov
repz
mov
jo
ins
out
jmp
stc
in
xor
repnz
imul
xor
cmp
add
shl
adc
dec
cmps
xchg
test
or
mov
fild
inc
rol
xor
jl
pop
and
add
and
push
ret
stc
pop
push
or
push
sub
add
jo
or
mov
(bad)
std
mov
je
imul
push
jle
and
sbb
inc
test
popf
aaa
aaa
imul
mov
xchg
push
xchg
sub
jmp
dec
mov
sub
rol
test
scas
iret
lea
in
movs
push
addr16
fistp
ror
out
xchg
fbstp
stos
add
test
outs
mov
add
pop
jecxz
(bad)
out
cmc
popa
aas
sbb
adc
inc
jmp
sub
(bad)
mov
(bad)
adc
sub
test
mov
and
sahf
jae
es
fyl2xp1
inc
mov
test
outs
or
sub
movs
sub
pop
inc
nop
push
xor
and
ds
(bad)
jmp
fs
xchg
in
dec
imul
mov
sbb
popa
mov
int
and
popf
ds
cdq
sbb
jecxz
repnz
mov
sbb
rcr
stos
and
sub
into
ror
sub
in
and
in
inc
or
cwde
in
jg
fcomp
stos
ret
push
mov
sub
pop
(bad)
movs
jb
fldcw
in
xchg
shr
sub
popf
mov
sti
adc
popf
adc
sar
inc
sub
xchg
add
or
pop
nop
fmul
sbb
or
and
inc
loope
rcr
je
(bad)
retf
inc
dec
jbe
(bad)
jle
adc
stos
pop
jmp
mov
loopne
xor
test
loope
mov
mov
out
dec
scas
ror
jp
pop
mov
ins
mov
or
fcmovnu
dec
cmp
pop
fild
push
ror
xchg
test
xchg
aas
gs
fsubr
in
and
aas
out
cwde
enter
push
jmp
push
xor
dec
adc
repz
imul
shr
std
or
pop
movs
push
xor
enter
or
sbb
xor
mov
addr16
sbb
sbb
(bad)
mov
js
adc
cmp
mov
dec
mov
mov
mov
jg
inc
jmp
jg
pop
sub
xchg
arpl
in
sbb
lahf
ja
and
add
aam
add
jmp
(bad)
mov
push
jl
rcr
and
push
inc
fcomp
pop
or
xchg
jo
mov
cs
mov
sbb
(bad)
dec
xchg
sub
lods
push
outs
(bad)
pop
lahf
repz
sbb
jae
mov
xchg
xor
sbb
int
dec
and
mov
cli
jae
jae
pop
cmc
popf
dec
add
std
cdq
sub
inc
jecxz
dec
pushf
jle
push
sub
pop
pop
cmp
ds
sub
pop
out
data16
add
or
daa
and
js
cmc
mov
push
pop
cld
xor
sbb
sub
cmp
out
add
inc
inc
push
mov
lock
les
jo
fwait
out
out
push
mov
inc
mov
int3
fadd
int3
not
mov
or
jle
push
ss
call
aas
iret
jns
neg
dec
mov
stos
aas
mov
fwait
push
jbe
dec
iret
mov
lea
dec
xor
test
aad
lock
pop
and
hlt
retf
mov
add
cdq
test
jmp
jnp
nop
mov
pop
cmp
sub
addr16
and
loop
sbb
fwait
daa
dec
sbb
jmp
shl
xor
inc
or
inc
cmc
jecxz
sbb
sub
test
retf
enter
sbb
in
cmp
mov
mov
add
test
fisubr
sub
jae
aam
cmp
or
jg
(bad)
xor
aas
scas
loopne
xchg
sahf
bound
pop
push
and
sub
adc
arpl
jg
clc
dec
lds
adc
cdq
adc
dec
jle
data16
shl
test
add
mov
shr
mov
leave
cld
mov
adc
iret
fst
xor
jnp
and
mov
popa
jl
and
dec
out
pop
pop
pop
jmp
sahf
push
(bad)
dec
jno
jle
out
call
jmp
or
cmp
sbb
pop
jbe
scas
mov
out
inc
sbb
inc
and
loop
fbld
mov
imul
iret
jnp
jl
jecxz
scas
dec
call
dec
or
mov
inc
xor
or
pop
or
or
pop
hlt
cmps
test
jb
stos
cmps
int3
test
out
sbb
inc
out
ds
int
arpl
aas
setbe
mov
pop
push
ror
jp
push
mov
push
call
retf
add
cmp
and
xor
je
xchg
outs
mov
push
push
xchg
mov
pop
adc
dec
jnp
jp
xor
call
pop
loope
push
or
mov
mov
test
and
mov
sub
or
lahf
jbe
into
outs
cmc
xchg
push
or
inc
int3
outs
out
dec
jb
lea
jp
push
sub
adc
inc
mov
or
sub
jle
ss
dec
imul
pop
mov
fstp
mov
out
adc
out
cmp
xor
mov
fistp
xor
dec
mov
inc
mov
cmpps
and
adc
ja
inc
aas
push
xchg
add
ret
hlt
dec
xchg
cmp
sbb
lea
or
sbb
add
lahf
test
fs
out
mov
push
fisubr
scas
js
loopne
mov
ror
xor
xor
hlt
mov
in
or
cmc
sbb
mov
inc
and
imul
inc
add
sbb
scas
icebp
push
fxch
pop
pop
hlt
mov
scas
dec
(bad)
jg
and
mov
pop
xchg
repz
jp
clc
pop
cmp
add
stc
mov
xchg
xchg
add
mov
nop
fbstp
push
sti
scas
movs
mov
push
jb
adc
dec
in
push
repnz
push
xchg
fwait
outs
sub
pop
push
test
loopne
xchg
shl
adc
rcr
sub
xchg
lods
jecxz
aad
cmp
inc
aas
xor
je
inc
and
in
sub
add
aam
xchg
mov
or
outs
sub
rcr
idiv
jb
jmp
fstp
sbb
inc
aaa
(bad)
pop
sub
pop
(bad)
push
sbb
and
and
xchg
xchg
retf
sub
or
mov
pop
and
pop
loop
and
cmc
fidiv
mov
sbb
or
xchg
dec
repz
push
pop
push
outs
and
pop
leave
jge
in
clc
scas
rcl
fcomp
ss
mov
sub
jp
add
jo
jle
mov
jecxz
pop
pushf
je
jb
jg
push
int
push
clc
loopne
adc
pushf
pop
imul
add
aad
clc
sub
mov
sub
xchg
das
dec
mov
out
mov
mov
pop
repnz
mov
cmp
sub
or
pushf
inc
dec
add
dec
inc
scas
mov
and
push
lods
xlat
dec
push
sub
ins
mov
or
repnz
sub
mov
and
pop
pop
arpl
in
cmps
daa
js
xchg
inc
dec
add
and
int
in
cdq
into
scas
cli
push
sub
mov
push
mov
adc
mov
dec
je
add
mov
sub
fadd
retf
inc
sbb
js
add
outs
cmp
mov
dec
sbb
xchg
sub
mov
adc
xchg
(bad)
sar
stc
fsubr
sbb
add
sbb
add
cmps
push
dec
jns
mov
sub
mov
push
and
mov
mov
jp
js
or
lds
(bad)
dec
push
(bad)
call
push
xor
pusha
push
iret
pusha
mov
mov
imul
rcl
mov
imul
jp
pop
xor
retf
data16
mov
pop
adc
xor
test
(bad)
fdivr
or
retf
call
repnz
(bad)
dec
jecxz
(bad)
jae
add
mov
int
add
inc
fdiv
aas
pop
out
cmps
les
jmp
sbb
add
in
popf
xchg
sbb
lods
adc
push
mov
scas
iret
or
mov
in
in
dec
int
addr16
pop
test
pusha
mov
add
add
out
sbb
inc
mov
repz
adc
fnstenv
jno
bound
data16
sbb
pop
sbb
push
xchg
push
cmps
push
aam
pop
or
mov
shl
movs
lds
jns
cmp
xchg
mov
xchg
and
daa
sbb
call
int3
scas
xor
xchg
jmp
dec
push
(bad)
inc
inc
push
jmp
xor
mov
cwde
daa
add
vunpcklps
jmp
and
fld
xor
repz
mov
pop
or
or
test
mov
cmp
cwde
(bad)
xor
fidivr
or
pop
neg
push
shr
mov
cdq
mov
outs
jb
fnstenv
adc
out
mov
je
in
out
push
jmp
mov
stc
lods
mov
xor
sbb
neg
jae
leave
inc
imul
sbb
test
js
push
lock
push
dec
out
dec
data16
push
jg
cld
test
or
div
bound
pop
jns
mov
inc
xor
dec
xor
es
and
aam
pop
test
cld
ds
mov
mov
or
inc
out
push
dec
push
adc
push
and
push
dec
jbe
fild
jge
or
mov
xor
push
aaa
or
ret
rol
mov
retf
dec
out
xor
push
and
outs
mov
cmp
jae
push
fwait
ror
push
mov
jle
add
(bad)
xchg
scas
in
mov
push
push
jbe
push
sbb
xchg
test
ins
sub
pop
cmps
inc
arpl
sahf
pop
cmp
dec
scas
in
and
pop
sub
cmc
lods
mov
js
dec
pop
cli
int3
fstp
mov
sbb
xor
xchg
cdq
test
dec
cli
add
add
jge
xchg
imul
sub
dec
jns
adc
and
push
push
lods
sbb
fwait
push
nop
lds
das
addr16
inc
mov
mov
sbb
scas
push
inc
xor
mov
cmp
fst
pop
jg
mul
mov
mov
dec
rcr
fbstp
(bad)
sbb
xor
or
jge
bound
jg
out
jmp
add
dec
sub
sar
push
add
pop
add
adc
cmp
cld
xchg
mul
mov
jmp
out
sahf
push
jns
xchg
aam
mov
xchg
xchg
jl
cld
mov
jnp
ja
fbstp
dec
fiadd
xor
push
outs
jne
xchg
push
xor
ins
mov
ins
cmc
(bad)
push
pop
arpl
fwait
(bad)
mov
jg
movs
or
inc
and
or
jno
ins
dec
sub
nop
(bad)
arpl
ret
(bad)
repnz
xor
push
stos
or
test
js
pop
mov
sti
cmp
jl
aad
idiv
jl
aas
test
daa
fild
je
push
xor
pop
dec
into
mov
mov
or
jnp
hlt
and
cli
add
clc
jg
jb
pop
stos
xchg
or
outs
ror
imul
dec
imul
dec
arpl
jecxz
leave
xchg
mov
or
add
add
dec
add
pushf
xor
mov
add
in
pusha
adc
add
pop
mov
jmp
push
ror
pushf
sub
or
leave
fucompp
pop
sub
ins
sbb
dec
add
jb
jp
push
mov
fs
test
fwait
xchg
mov
adc
sbb
arpl
int3
in
add
pop
ja
cmp
dec
mov
sub
fdivr
fstp
adc
jge
dec
pushf
add
out
dec
push
push
xlat
rcl
push
xor
ins
shl
push
mov
shl
aad
push
and
iret
add
mov
dec
sbb
sub
lea
xlat
sbb
fisub
pop
ficom
jge
int
sti
sbb
xor
icebp
add
push
sahf
inc
sub
inc
cmp
inc
xchg
jp
fldenv
call
sub
fs
add
neg
imul
fs
das
jmp
push
fadd
push
push
popf
inc
nop
pop
mov
sub
scas
pusha
xor
repz
test
in
clc
jge
cld
and
cmp
jo
and
jns
or
pushf
cmp
cmp
xchg
sub
mov
and
push
jbe
shl
jl
in
pop
dec
push
push
std
pop
inc
ss
loopne
jge
push
scas
addr16
mov
outs
cmps
icebp
push
pusha
sub
or
std
mov
(bad)
cmps
xchg
jl
pop
inc
sbb
imul
aad
out
out
(bad)
xchg
push
mov
repz
fld
push
mov
xor
mov
cs
push
je
in
mov
jno
pop
repnz
ret
add
and
std
sub
push
fld
sub
xor
sub
push
dec
mov
sar
scas
(bad)
aaa
ret
mov
icebp
xchg
ret
repnz
mul
pop
out
and
test
pusha
adc
aam
xor
dec
mov
dec
sub
mov
jle
add
sub
gs
sar
adc
pop
mov
ins
or
inc
inc
in
xor
(bad)
xchg
int
sar
jbe
loopne
adc
or
cmp
repnz
mov
push
or
mov
gs
push
scas
inc
loope
jg
xor
mov
mov
jp
jle
lock
add
(bad)
retf
ror
lds
dec
add
fwait
enter
push
sub
cmp
xchg
mov
cld
adc
pop
cmp
icebp
mov
fld
push
sub
pushf
inc
pop
pop
mov
inc
sub
mov
mov
mov
fnstcw
fwait
cmp
and
xor
dec
fs
xor
jnp
(bad)
jle
loope
mov
lods
jo
pop
ss
pop
jecxz
xchg
imul
lds
xchg
test
dec
push
aaa
arpl
fadd
loope
cdq
or
retf
mov
adc
xchg
leave
push
cdq
cmps
test
fidivr
and
clc
lock
cmp
je
jl
push
cmps
push
add
push
sahf
cmp
inc
sub
rcr
mov
mov
mov
jnp
mov
rol
addr16
jp
fwait
daa
or
fnstcw
loop
aam
xchg
loopne
pop
adc
lock
hlt
push
inc
pop
cmp
shl
sub
push
cmp
xor
das
outs
sub
sub
xchg
sbb
jo
adc
add
aaa
and
or
mov
cmc
mov
pop
sbb
enter
mov
pop
mov
sbb
je
nop
ret
push
imul
into
shl
jecxz
fistp
add
dec
adc
fdivrp
cmps
cmp
adc
in
(bad)
lahf
imul
xchg
cld
jmp
mov
scas
push
data16
add
cmc
push
pop
loop
dec
data16
lea
pop
xchg
loopne
xor
pop
xchg
out
es
rol
ins
jns
xor
mov
push
xchg
movs
call
add
je
sub
sbb
cmps
ret
push
pop
fisttp
and
inc
mov
push
loop
and
(bad)
jae
push
pop
mov
add
jge
es
movs
add
mov
fst
jae
jbe
ret
add
jle
jno
push
sbb
add
inc
(bad)
pushf
je
test
xchg
ins
and
and
retf
or
mov
push
sub
xchg
jo
jns
sub
daa
sub
mov
data16
and
push
push
sbb
lods
xchg
inc
orps
or
jo
aam
int
in
cmp
pop
xchg
mov
or
jbe
mov
(bad)
addr16
mov
sbb
rcl
outs
fsub
mov
add
leave
retf
(bad)
imul
nop
sahf
dec
popa
cmps
dec
mov
dec
call
sub
fisttp
or
jbe
cmps
leave
push
cmp
popf
sar
mov
dec
out
mov
adc
sbb
xor
and
cmp
xor
ds
inc
fwait
mov
pop
aad
jo
adc
fistp
cmp
dec
and
dec
xor
mov
adc
rcpps
popf
mov
or
or
fwait
ins
dec
sti
cld
xchg
pop
mov
sbb
and
sbb
xor
vminsd
push
push
jno
inc
loop
fdiv
cdq
scas
jne
add
push
imul
pop
ret
inc
dec
(bad)
add
in
or
cli
sbb
add
arpl
push
mov
pop
dec
les
fld
and
cwde
and
in
fdivr
mov
push
mov
stc
lds
pushf
mov
mov
nop
inc
call
arpl
and
daa
inc
mov
mov
sbb
fldenv
sub
int3
cmp
pushf
aas
jmp
pop
pop
sbb
das
scas
push
std
fwait
push
sbb
dec
into
das
rol
jmp
fild
imul
std
cwde
mov
cmp
call
adc
push
ins
and
or
jp
int
(bad)
outs
add
pop
test
lea
sbb
stos
sub
cmp
(bad)
jle
push
dec
gs
jecxz
ss
out
stos
push
out
add
mov
push
inc
xor
xchg
fs
mov
mov
sub
inc
sub
mov
aam
lods
std
xchg
add
pop
sbb
xlat
xchg
add
cmp
xor
or
lahf
xchg
cmps
mov
icebp
mov
inc
iret
dec
dec
push
out
push
outs
rcr
mov
in
xchg
mov
adc
dec
jle
add
xor
gs
mov
jbe
test
inc
daa
add
add
stc
pop
fs
(bad)
outs
jp
loopne
scas
dec
cmp
in
clc
pop
daa
cmps
sbb
pop
mov
and
add
push
mov
and
cmp
cmps
bound
pop
mov
push
rol
jno
or
xchg
xchg
outs
sub
sti
pop
jmp
adc
stos
emms
das
fisub
cmp
scas
xchg
sbb
jmp
aaa
aaa
add
push
jno
icebp
cmp
jmp
dec
(bad)
fcomp
or
cmp
mov
jb
popa
push
nop
mov
adc
push
aam
jb
adc
cmps
js
pop
mov
ret
add
xlat
ins
and
fstp
sahf
shl
push
xchg
mov
push
pop
dec
cmps
adc
mov
jmp
inc
xor
pop
lods
mov
xor
push
cld
rcr
pop
cs
mov
leave
xchg
dec
call
mov
sub
sub
das
in
stc
xchg
retf
add
neg
and
shl
shl
or
pop
push
cdq
dec
push
leave
outs
inc
lods
daa
imul
test
sbb
(bad)
dec
cmp
leave
aas
xor
in
xor
mov
in
aad
fisttp
dec
mov
sub
xor
adc
pushf
movs
mov
sbb
sahf
mov
out
jg
adc
push
lahf
jbe
add
(bad)
jmp
in
push
je
(bad)
ret
xor
enter
and
in
sbb
inc
popa
dec
cmc
lea
imul
clc
inc
and
jmp
pusha
fst
push
jbe
mov
shl
icebp
test
add
add
cmp
mov
test
das
xchg
das
das
sar
mov
sbb
dec
sar
sbb
pop
sbb
pop
xchg
int
inc
adc
xchg
lods
fadd
cmc
std
push
inc
outs
pop
and
cmp
popa
inc
push
popf
xchg
xchg
xchg
sti
push
mov
retf
ss
pop
mov
mov
mov
inc
xchg
inc
fiadd
sub
push
sub
dec
mov
xchg
adc
repz
mov
jmp
clc
mov
mov
jbe
sbb
and
xchg
jecxz
hlt
xchg
or
sbb
out
pop
xor
mov
adc
mov
cmps
je
or
xchg
or
xchg
sbb
cld
imul
ins
add
add
push
push
mov
clc
aad
retf
cmc
ja
dec
fcmove
pop
dec
test
retf
repz
mov
sbb
sbb
push
addr16
sahf
aas
shl
addr16
add
jmp
ret
cli
mov
push
pop
fwait
push
jmp
jbe
mov
mov
(bad)
adc
retf
popf
shr
test
in
pop
fmul
sbb
mov
jle
paddb
retf
dec
jae
mov
dec
repnz
(bad)
repz
sbb
repz
sti
inc
in
dec
repz
(bad)
jnp
loop
dec
cmp
(bad)
sbb
movs
dec
mov
loope
mov
mov
call
in
ret
in
cmps
call
push
lahf
adc
mov
push
mov
into
pop
and
cmp
pop
sbb
sub
mov
cmp
call
add
into
xor
mov
(bad)
dec
mov
enter
or
shr
and
sub
mov
in
ret
push
retf
and
and
out
adc
rcl
push
add
(bad)
jnp
mov
adc
in
popf
dec
dec
leave
pop
sub
xchg
mov
jb
js
add
mov
adc
ror
push
imul
sbb
pop
add
mov
cmp
retf
push
inc
in
add
cmps
xchg
dec
cmp
int3
mov
sub
jb
cmp
xchg
not
in
(bad)
jmp
add
fst
inc
ret
cmps
stos
fnsave
stc
cmp
mov
sbb
sub
or
pop
add
cmp
mov
push
or
lock
call
jmp
shr
pop
pop
dec
mov
ficomp
(bad)
fidiv
hlt
push
fwait
popa
pop
lds
out
xchg
adc
cmp
(bad)
cld
mov
aad
cld
xor
inc
add
cmp
mov
retf
lock
jb
or
dec
dec
loop
ins
or
cli
push
sbb
mov
inc
cmp
div
retf
jno
add
popa
pop
adc
sbb
jmp
sbb
(bad)
pushf
jl
aaa
sbb
sub
iret
(bad)
fist
mov
xchg
sub
iret
pop
jno
sbb
icebp
ret
xchg
cli
call
mov
neg
mov
or
inc
rcr
xlat
ret
into
aaa
push
sub
movs
or
mov
adc
push
fldenv
xor
pop
bnd
and
js
test
jecxz
outs
dec
jne
or
inc
pop
aaa
adc
jmp
pop
mov
cmps
mov
push
std
cmp
iret
icebp
out
sub
mov
int3
mov
dec
daa
inc
loop
shr
inc
jb
ins
cmp
shl
push
je
cs
shr
dec
and
cmc
adc
fldcw
push
in
cld
std
mov
push
imul
or
jl
or
jnp
and
hlt
in
scas
add
mov
jns
and
push
xor
aam
or
hlt
xchg
dec
sbb
cld
xchg
mov
pop
imul
pxor
in
sbb
(bad)
mov
repnz
and
pushf
xchg
jae
sbb
sbb
into
fwait
sahf
mov
jg
dec
enter
outs
out
in
icebp
xchg
or
sti
sub
push
xor
or
out
mov
sub
addr16
int
rcr
adc
xor
or
and
(bad)
xchg
pop
cmp
cmc
test
je
mov
test
add
les
fxch
sbb
push
push
fistp
aaa
pop
jg
scas
neg
mov
hlt
xor
int3
sbb
jmp
sbb
dec
mov
inc
popf
dec
cmp
test
pop
inc
mov
dec
push
push
and
and
xor
adc
jns
push
loop
cdq
sbb
jno
and
sbb
jle
scas
sti
leave
int3
call
retf
or
popf
push
mov
test
rcr
loope
pop
call
aad
cmp
retf
adc
idiv
jmp
loopne
lea
lock
fcom
xor
add
push
mov
js
rol
adc
hlt
mov
inc
sub
sub
pop
adc
xor
xchg
(bad)
sub
cmc
icebp
sub
sbb
stc
ret
push
fistp
dec
imul
add
mov
mov
cs
sbb
inc
lods
ins
js
dec
ins
gs
add
jmp
xchg
mov
loop
aas
add
sbb
xchg
fs
dec
arpl
push
js
enter
pushf
icebp
pop
in
cdq
mov
inc
and
sub
ds
inc
scas
cmp
rcr
pushf
push
add
aas
les
leave
jno
xchg
mov
(bad)
cmp
cmc
inc
cmp
inc
xlat
pop
fst
repz
cmp
or
dec
cmp
inc
call
fsubr
add
out
or
inc
ret
in
pop
sub
cmc
pop
popa
dec
jb
mov
pop
push
sbb
shl
pop
or
ds
je
push
int
and
pop
xchg
mov
aaa
cmp
sbb
lea
mov
and
and
xor
shl
movs
icebp
loopne
sub
jbe
jb
gs
jb
pop
out
ins
cs
mov
fldcw
jb
stos
repz
push
dec
push
xor
mov
ins
mov
pop
dec
adc
shl
dec
test
mov
(bad)
sub
ins
test
mov
call
sahf
jns
dec
stos
loope
inc
sub
mov
in
xlat
inc
pop
cli
add
push
mov
nop
jbe
mov
and
popf
cmp
jmp
xor
call
mov
je
ficom
pop
fistp
ret
mov
(bad)
or
sbb
add
and
icebp
aam
mov
das
jmp
or
pop
or
jns
mov
pop
cmp
pushf
and
out
inc
or
fdivr
leave
(bad)
pop
inc
sub
ror
sar
movzx
fist
jl
mov
idiv
mov
push
cmp
inc
cmp
retf
arpl
cmp
aaa
gs
pop
fs
pop
pop
in
rcr
adc
loop
xor
in
jnp
repz
jp
aaa
int
scas
pop
into
aas
leave
pop
push
or
(bad)
loopne
call
pushf
stos
sbb
js
adc
out
adc
sahf
jmp
or
jg
idiv
adc
repz
daa
push
inc
mov
push
loopne
sbb
aam
sbb
cmc
push
pop
adc
mov
adc
mov
add
pop
adc
xchg
jmp
push
sbb
jg
mov
retf
das
rcr
or
add
pop
std
ja
fucomp
pop
xor
daa
fist
mov
nop
xor
cmp
aaa
or
xor
push
push
jl
pop
mov
and
mov
adc
push
add
jns
mov
fwait
sbb
push
mov
cs
push
ffree
js
scas
(bad)
and
mov
retf
push
pop
mov
aad
push
out
cld
cmp
gs
(bad)
pop
and
or
retf
into
inc
js
in
jg
mov
js
std
jmp
shl
inc
xor
jp
out
int3
mov
pop
pop
lock
sahf
mov
xlat
fstp
pop
push
cld
jns
mov
cmc
jl
sub
push
sub
push
push
adc
sub
pop
and
pop
mov
rol
adc
cmp
call
pop
call
or
dec
enter
leave
mov
std
daa
jne
mov
sbb
inc
addr16
ret
out
sti
cmp
or
call
test
retf
push
lahf
aad
pop
int
popf
test
sti
sub
icebp
sub
and
dec
aaa
push
jmp
js
hlt
cmps
fs
xlat
fsubr
clc
mov
imul
(bad)
cdq
mov
xchg
nop
add
out
push
push
mov
loopne
shl
rcl
or
xchg
push
ror
ror
in
jno
sbb
ss
pop
sbb
fnstcw
in
ds
or
loopne
out
sub
mul
iret
bound
fild
pop
cmp
jmp
xchg
cmp
push
shl
and
pusha
or
mov
cmp
int
arpl
mov
les
leave
enter
sub
aas
adc
in
cmp
push
lods
mov
les
cmc
mov
rol
jp
mov
push
mov
push
sub
test
pop
pop
ss
cli
pusha
stc
mov
imul
loope
je
aaa
ret
cmp
(bad)
push
xor
das
push
aas
pop
fcom
sub
add
test
hlt
jmp
dec
dec
sub
and
cmc
cwde
daa
lahf
dec
mov
out
adc
jp
push
xor
jo
adc
mov
aas
(bad)
aas
push
adc
mov
jmp
mov
mov
sub
pusha
es
mov
hlt
push
push
pusha
xor
push
std
scas
xchg
shufps
and
mov
jne
cmc
ret
std
xor
sub
jb
les
sub
loop
and
popf
je
data16
and
sbb
xor
clc
xchg
test
gs
imul
xchg
push
dec
pop
retf
rsqrtps
fbld
out
pop
ins
dec
xor
loope
daa
jae
dec
dec
ins
lods
(bad)
sub
mov
pop
rcr
mov
repz
inc
js
inc
push
(bad)
test
dec
out
test
xchg
clc
xchg
(bad)
(bad)
cld
outs
cmc
dec
fnstcw
dec
pop
popf
dec
xchg
jle
cmps
mov
(bad)
jb
cwde
aam
mul
jl
test
mov
mul
jmp
sub
pop
cmp
cld
add
push
cmp
stos
jno
not
hlt
or
xor
jbe
loopne
jg
pop
cwde
push
push
mov
fwait
or
cmc
sub
mov
ret
scas
xchg
pop
sbb
cmp
sub
pop
pusha
cdq
pop
jbe
mov
xchg
jecxz
lock
ret
jg
xchg
sub
sub
aaa
push
mov
jae
in
out
sti
cmp
and
mov
out
dec
push
call
sub
(bad)
jnp
pop
les
jo
cmp
jl
ins
mov
ror
and
out
leave
add
mov
cmp
hlt
or
and
mov
cmp
dec
add
or
addr16
or
xrelease
xor
and
and
cmp
xchg
out
xor
cmc
pop
cwde
int3
mov
cli
lods
aaa
pusha
cmp
dec
sbb
dec
js
(bad)
outs
(bad)
ja
or
stos
push
lods
xlat
or
xor
jp
lods
(bad)
sub
sbb
pop
outs
hlt
mov
xchg
loope
bnd
and
jge
mov
push
arpl
adc
movs
mov
sbb
scas
lds
shr
xchg
xor
neg
aad
dec
xor
jp
xchg
(bad)
je
xor
int3
push
add
ss
sbb
fiadd
hlt
lods
push
fnstcw
and
sub
adc
cmp
and
inc
test
enter
mov
fst
in
jbe
jo
adc
scas
lods
mov
getsec
mov
in
sti
mov
ds
mov
movs
pusha
arpl
fisub
jne
mov
ins
in
(bad)
sahf
js
lahf
mov
popa
jp
push
and
repnz
and
jae
pop
mov
out
sbb
or
and
push
aam
mov
lods
xor
sbb
sahf
mov
imul
adc
les
sbb
or
and
clc
mov
cdq
mov
cmp
jg
adc
xchg
ds
sbb
xchg
ret
mov
retf
pop
pop
jmp
xchg
xor
(bad)
and
xor
sub
into
arpl
pusha
add
sbb
jg
inc
movs
mov
dec
imul
mov
fidiv
iret
int3
int
ret
pop
inc
inc
jmp
dec
and
pop
scas
mov
sub
jmp
pop
loope
pop
pop
retf
mov
sbb
jecxz
jmp
adc
pcmpeqd
add
lea
mov
xor
jne
jmp
xchg
aaa
sub
and
sbb
and
popa
xor
mov
repz
push
aaa
adc
fwait
add
sub
or
add
push
or
inc
mov
cdq
nop
fwait
imul
hlt
seto
pusha
dec
cmc
sub
cmp
sbb
(bad)
arpl
xor
es
ins
int
in
outs
jg
test
imul
in
and
enter
xchg
xchg
jno
or
sub
add
stos
icebp
pop
jg
and
sub
cmp
xchg
outs
add
movs
scas
std
cmp
into
aam
mov
ds
iret
sti
or
loop
pop
addr16
jmp
mov
xchg
sub
xchg
retf
xor
imul
or
mov
push
mov
sub
mov
xchg
and
test
mov
dec
jns
sbb
fisttp
add
mov
pop
adc
mov
ss
sahf
adc
cmp
pop
xchg
inc
xor
lea
add
xchg
push
mov
(bad)
cmc
rcr
add
mov
shr
mov
test
(bad)
cs
pusha
ror
sub
adc
xor
mov
sub
jl
jmp
ins
retf
add
jg
dec
ror
push
mov
jns
push
dec
xchg
jmp
cdq
enter
xor
lods
pop
cmp
jns
clc
pop
jne
sub
xchg
xchg
into
(bad)
cmp
shr
pop
lds
ins
sub
cmp
mov
pop
aas
arpl
xchg
enter
adc
ret
add
sbb
xchg
adc
and
lods
or
xchg
dec
addr16
in
cdq
int3
mov
popa
or
adc
into
repz
inc
sub
jecxz
ja
sbb
inc
xor
jge
mov
and
pop
and
mov
(bad)
push
fnclex
stc
sub
popf
ror
pop
pop
addr16
sbb
mov
mov
popf
test
jae
cwde
stos
add
lock
and
pop
retf
fcomp
cs
lods
mov
adc
pop
mov
(bad)
out
int3
cld
js
mov
sub
cmp
leave
adc
inc
frstor
arpl
enter
inc
lods
push
mov
stc
push
ins
dec
mov
ins
mov
jg
add
jns
sub
pop
(bad)
aad
jns
cmps
dec
pop
and
dec
ds
jecxz
or
in
sahf
inc
sbb
fwait
in
mov
bound
fcomp
aad
in
xor
loopne
stc
mov
jle
ds
mov
xor
dec
sub
pop
and
in
icebp
jp
fdivr
out
popa
cli
sub
shl
push
or
das
jg
inc
mov
gs
retf
push
or
std
in
push
or
fcmove
aad
daa
push
shr
xchg
adc
mov
mov
add
cld
ds
cld
dec
in
cwde
push
adc
inc
sub
mov
push
inc
mov
call
mov
push
test
pop
xor
jecxz
sub
mov
sbb
adc
jae
repnz
daa
pusha
arpl
pop
loop
inc
add
or
mov
jge
and
mul
ret
inc
pop
fs
inc
and
inc
loop
push
push
mov
iret
mov
ins
jmp
out
or
jbe
inc
sbb
sub
or
adc
push
pushf
cmp
adc
xchg
dec
ins
nop
cmp
mov
sbb
mul
push
mov
xor
inc
(bad)
sbb
jge
sub
loope
xchg
inc
ins
dec
fist
dec
retf
pushf
pop
cmp
jmp
ficomp
pop
fwait
js
rcl
cmp
in
out
pushf
int3
xor
test
and
aas
daa
cmp
rcl
loop
sbb
dec
push
xchg
imul
dec
jb
jo
jmp
stos
ins
jo
in
ret
mov
loopne
xchg
fiadd
adc
iret
cmp
xor
and
sub
cld
lea
mov
push
push
mov
outs
and
das
mov
xor
push
out
mov
in
int
ret
or
lds
dec
mov
clc
sbb
inc
sub
cmp
xlat
in
inc
lock
out
rcl
pop
add
or
dec
cmps
ins
lahf
sbb
jae
cs
sbb
test
in
mov
pop
mov
je
das
aaa
ds
sbb
adc
neg
mov
lds
test
mov
adc
pop
repnz
popa
sbb
and
pop
sbb
or
fwait
lods
lea
sahf
xor
or
and
pop
fcmovnu
dec
(bad)
xchg
fs
fiadd
xor
or
outs
ret
jae
imul
outs
into
mov
mov
xor
inc
sub
cli
inc
dec
jmp
xor
and
or
cdq
jbe
loopne
in
jecxz
inc
add
and
rol
push
ins
es
jmp
pusha
cli
fdivr
repz
jmp
enter
pop
aad
dec
(bad)
popf
in
adc
inc
sub
mov
call
sbb
sbb
scas
movs
test
rep
mov
jmp
dec
dec
sub
mov
pop
jecxz
add
bound
sub
(bad)
xor
dec
aam
dec
leave
jae
jmp
sub
dec
pop
sub
xor
es
in
dec
out
and
add
xor
out
mov
leave
jb
pop
repz
str
bound
(bad)
in
inc
sar
cmc
inc
mov
or
xchg
lea
inc
or
cmp
or
push
je
mov
and
ret
mov
mov
ret
jnp
jecxz
mov
xchg
pop
xor
fadd
out
gs
sub
mov
pop
and
test
rol
adc
and
xchg
shl
cmp
or
imul
jbe
dec
fwait
daa
rol
mov
es
imul
test
movs
add
and
repnz
fwait
xor
pop
fs
das
jge
ret
pop
(bad)
push
int
pop
inc
int
push
dec
add
dec
aad
test
pop
and
daa
ins
sub
pop
stc
pusha
lds
push
dec
mov
or
mov
fsin
jmp
(bad)
call
sar
enter
dec
and
mov
les
call
pop
cdq
sbb
push
sub
cmp
leave
loop
pop
cli
retf
repz
dec
dec
scas
ror
mov
cs
sub
inc
fwait
enter
(bad)
dec
int
jbe
or
xor
aas
jp
scas
pop
jle
sahf
sub
sbb
rcr
push
or
dec
add
(bad)
pop
cmp
dec
in
popf
xor
sub
es
cmp
sbb
add
jp
jae
or
jne
shl
mov
jmp
sub
ficomp
dec
xchg
push
jne
loop
inc
sub
(bad)
cmc
cs
pop
scas
mov
xchg
mov
push
in
movs
dec
int3
inc
pushf
sbb
inc
fwait
shr
(bad)
cs
cmp
arpl
bound
add
fisub
inc
mov
inc
ror
into
leave
aas
mov
shr
mov
retf
hlt
or
(bad)
jecxz
sub
add
push
push
loopne
inc
inc
xchg
int3
mov
mov
or
outs
mov
pop
stos
cmp
dec
mov
jg
adc
or
sbb
js
fild
dec
jmp
fs
pop
js
xchg
dec
test
push
sbb
lds
out
sahf
cmp
popf
in
fs
mov
fld
xchg
pushf
int
aad
mov
cmc
dec
iret
mov
push
or
dec
jo
pop
mov
adc
fild
(bad)
lock
je
repz
test
lods
mov
ins
nop
movs
sub
add
repz
jbe
mov
shl
scas
push
je
je
addr16
test
and
and
cdq
sub
pop
mov
jb
push
loop
cmp
(bad)
hlt
mov
lods
mov
xchg
ja
add
add
fwait
jg
add
sbb
jbe
mov
je
retf
shl
fld
jbe
call
ror
dec
ds
jle
push
arpl
arpl
sahf
jg
mov
add
mov
ret
rcr
outs
pop
xchg
and
(bad)
iret
sbb
lea
pusha
in
xchg
xchg
mov
jb
adc
aaa
mov
dec
or
add
fisub
cmp
je
dec
push
push
cmp
push
repnz
shl
sbb
push
adc
sub
out
das
out
adc
cmc
imul
inc
mov
loopne
mov
inc
push
cmps
into
dec
push
mov
adc
sub
push
retf
dec
(bad)
jge
leave
popf
cmp
int3
mov
(bad)
retf
sub
cmovge
mov
scas
mov
cmps
and
out
cmp
adc
test
pop
ins
aas
sar
fisttp
mov
jbe
in
push
inc
cs
lahf
mov
cmp
jae
mov
test
adc
pusha
xchg
mov
add
cmps
cmp
popf
mov
stc
je
inc
xchg
inc
pop
push
jb
push
dec
mov
or
retf
push
pop
jne
adc
cmp
sbb
and
not
dec
or
push
cmps
sbb
int
jo
pop
cwde
mov
gs
dec
fwait
or
addr16
xchg
xchg
test
xor
lds
push
adc
out
ja
js
pop
add
test
scas
outs
adc
adc
std
push
pop
sbb
inc
and
ds
push
dec
xchg
dec
and
scas
cmp
je
ret
imul
test
jae
xchg
mov
mov
dec
inc
cmc
sub
add
add
dec
shl
(bad)
aam
mov
cs
jmp
std
jecxz
mov
fadd
jmp
into
shl
adc
aam
scas
dec
aas
rcl
movs
(bad)
rcr
xchg
pop
add
and
call
jb
xchg
out
cmp
dec
fisttp
enter
out
test
jle
pop
out
in
(bad)
xor
xlat
pusha
jp
pop
mov
xchg
hlt
mov
cmps
inc
and
fwait
movs
xchg
push
popa
adc
out
pop
or
in
mov
fdivr
movs
push
or
rol
jge
inc
bound
stos
iret
dec
fs
clc
stos
sbb
repz
adc
add
pop
sbb
jmp
in
icebp
retf
mov
dec
ins
stc
push
ja
xchg
xor
ins
cmp
xor
adc
sbb
popa
bswap
and
rcr
xor
test
mov
sbb
fiadd
sbb
sbb
pop
push
iret
nop
arpl
ds
inc
push
mov
aad
and
xor
sahf
fdiv
call
add
ja
into
ins
inc
add
shr
std
jnp
mov
cli
jne
loopne
xchg
in
imul
movs
mov
fistp
repnz
jb
mov
dec
and
jbe
fs
fdivp
mov
(bad)
in
sub
sub
sub
out
mov
pop
push
sbb
and
inc
lahf
mov
ffree
jmp
jo
and
aas
(bad)
and
dec
sbb
pop
in
stc
mov
jae
pop
test
mov
mov
pop
xor
int3
and
sub
inc
loop
add
sub
repz
mov
aas
push
push
mov
xor
xchg
cmp
jbe
rol
in
mov
(bad)
sub
sbb
inc
sub
dec
push
test
cmps
cmps
es
dec
out
enter
(bad)
enter
add
sbb
sub
jecxz
push
leave
retf
xor
jecxz
mov
fnstsw
pop
mov
dec
mov
pushf
ret
push
arpl
popf
push
jb
or
cmc
shl
push
into
pop
cmps
lock
mov
sub
movs
mov
repnz
mov
hlt
neg
(bad)
sbb
jae
lods
cdq
fiadd
dec
stos
sub
sub
test
cli
icebp
xor
xor
ins
push
adc
mov
cmp
iret
add
lahf
out
cmp
inc
xor
outs
sbb
call
pop
xor
aas
jle
fldenv
pop
sub
push
retf
rcr
aam
inc
in
sub
hlt
ins
cli
outs
dec
xchg
int
inc
pop
out
sahf
mov
fwait
xchg
retf
pop
sahf
mov
or
sub
mov
mov
push
inc
inc
daa
mov
push
xchg
push
pop
les
jmp
mov
enter
sbb
push
mov
mov
cmps
retf
xchg
frstor
or
dec
and
jge
lods
push
mov
mov
fcom
adc
(bad)
popf
mov
mov
mov
mov
(bad)
fdivrp
push
jecxz
mov
sbb
sbb
les
adc
sbb
lods
inc
jl
mov
and
cld
sbb
push
lock
cdq
into
or
loop
push
dec
mov
or
push
or
push
fs
jecxz
sbb
jns
mov
pop
out
or
pop
push
mov
repnz
xchg
sub
pop
das
cmp
test
int
aas
(bad)
ins
mov
dec
popf
sub
adc
aas
jb
daa
xchg
lods
or
int3
cld
loopne
lods
adc
push
ror
(bad)
movs
call
sbb
jae
scas
adc
mov
and
or
jnp
mov
test
int3
cmp
(bad)
in
mov
inc
inc
fld
push
and
xor
sub
aad
popf
adc
into
or
jle
fcmovnbe
ror
cmps
call
stc
leave
xor
add
adc
lea
cdq
jno
adc
jl
pop
lahf
out
add
stc
cmp
std
outs
push
xor
inc
push
sbb
mov
enter
xchg
jl
xchg
movs
(bad)
cli
adc
lock
loope
data16
sahf
ror
bndldx
fidivr
sub
fisttp
mov
stos
int3
test
mov
imul
sbb
inc
repz
out
adc
sub
mov
repz
sbb
adc
jle
clc
pushf
in
enter
test
stos
push
and
repnz
jmp
in
inc
rol
pop
add
(bad)
loopne
and
fisub
cdq
adc
out
nop
jle
pop
sub
mov
mov
jbe
ret
fucomip
ror
imul
(bad)
stos
loope
sbb
sub
je
adc
and
mov
dec
xchg
test
pop
sub
adc
aaa
ds
sbb
jns
pop
push
out
and
pop
in
sub
add
int3
pop
dec
mov
lock
mov
fild
rol
add
pop
sub
aaa
loopne
inc
xor
dec
and
and
adc
sbb
jno
out
jnp
aam
jo
xchg
xor
fidiv
cmc
mov
lahf
xlat
int3
or
add
pop
xor
in
mov
jp
pop
repnz
sub
or
push
inc
dec
sbb
xchg
or
cmp
cmps
es
fisttp
shr
sbb
jle
into
pop
jle
inc
fs
call
inc
inc
jb
xor
xchg
add
arpl
add
iret
sub
mov
loope
cmps
sbb
imul
adc
push
inc
ins
shr
push
push
cmc
in
pop
test
mov
cdq
mov
fimul
imul
push
mov
std
pop
fld
aaa
je
adc
mov
pop
pop
or
in
int
aas
sbb
cs
fwait
jnp
lock
xchg
mov
adc
and
push
jecxz
jle
and
adc
mov
pop
in
jle
inc
add
fcomp
pop
adc
je
loop
cmps
ret
dec
test
inc
pop
clc
add
add
stos
push
push
test
sbb
adc
adc
lahf
jae
add
stos
fcom
add
not
add
call
ja
push
sbb
sbb
and
sub
mov
or
dec
adc
push
mov
test
aaa
std
call
cld
les
sbb
imul
dec
push
(bad)
bound
inc
enter
mov
sahf
and
cmps
sbb
push
jge
out
cmp
and
nop
mov
cdq
loop
sbb
pop
clc
mov
out
scas
out
push
sub
ins
push
pusha
repz
ja
mov
cvttps2pi
test
jge
sbb
sub
mov
or
pop
inc
dec
adc
xchg
and
or
inc
hlt
xlat
xor
stos
push
inc
cmps
pop
out
std
enter
sbb
xchg
repz
movs
cs
fs
cmps
pop
pop
mov
sbb
lea
mov
fwait
nop
push
cmps
ffree
sub
je
push
sbb
xor
jmp
pusha
aam
inc
call
pop
loopne
sub
stc
out
sub
jmp
pop
jg
fld
add
dec
cmc
jg
jbe
jecxz
out
xchg
xor
pop
cmp
jp
in
dec
pop
pop
jecxz
retf
shl
adc
jae
mov
xor
(bad)
sbb
int3
add
fsubr
or
jae
int
ds
test
out
stos
xchg
test
fsub
add
mov
aas
mov
and
or
(bad)
xor
mov
(bad)
pop
stos
add
out
in
sub
fidiv
mov
ins
sub
adc
xor
sti
mov
gs
jb
dec
icebp
inc
inc
push
inc
dec
mov
outs
push
and
mov
mov
mov
je
add
(bad)
sub
in
or
or
push
sbb
cmp
clc
pop
jnp
aad
jg
gs
les
jae
lea
repnz
inc
jge
mov
test
loop
movs
sub
int3
mov
cwde
push
or
and
les
retf
mov
sbb
cs
adc
xchg
xchg
sub
fmul
stos
out
pop
inc
xor
push
ja
mov
ds
rcr
dec
imul
rcl
aad
out
retf
imul
std
mov
repnz
sub
dec
retf
jnp
arpl
inc
test
repnz
push
xchg
cmp
sbb
add
sbb
in
or
xor
add
shl
jb
dec
cmp
daa
dec
xlat
adc
inc
(bad)
ins
std
jmp
add
(bad)
out
pop
movs
sbb
cmc
mov
xor
in
ss
int
sub
push
xor
pop
xor
cwde
mov
pop
pushf
add
int
mov
pushf
sub
(bad)
call
test
dec
mov
xlat
dec
mov
or
dec
(bad)
dec
sbb
aam
leave
pusha
xlat
adc
jb
pop
or
xor
aad
repnz
call
test
add
hlt
gs
(bad)
es
adc
cmc
xor
std
sbb
push
stos
mov
dec
test
popf
fdiv
dec
ins
(bad)
dec
loopne
test
inc
or
xor
add
sbb
add
(bad)
dec
je
lods
scas
repnz
jne
in
mov
mov
sbb
mov
loop
pop
pop
mov
lods
std
inc
imul
div
out
mov
pop
sbb
pop
imul
iret
loopne
lea
mov
test
sti
dec
or
mov
lahf
lds
mov
jbe
inc
pop
shl
pop
(bad)
and
push
push
mov
(bad)
cmc
sar
dec
imul
or
push
stos
pop
xor
fcomp
jb
les
pop
pushf
test
push
cs
pop
xchg
sub
ret
jge
pop
repz
and
lods
jl
sub
ror
repnz
push
inc
es
sub
sbb
cmp
cdq
sbb
std
jne
dec
push
pop
mov
sub
push
shl
push
pop
outs
sub
int
sub
xor
int3
sub
jnp
dec
aad
ss
xchg
in
fwait
ret
dec
push
jge
pop
dec
int
xor
addr16
and
mov
(bad)
mov
xchg
es
xchg
jae
(bad)
adc
mov
inc
dec
(bad)
aam
movs
jb
aad
or
mov
loope
mov
gs
dec
mov
sub
dec
jmp
pop
pushf
xchg
lea
ret
inc
dec
je
cs
inc
retf
push
mov
fisubr
ret
jnp
cmp
and
sub
push
push
fwait
push
adc
add
cmp
dec
lds
neg
pop
js
xor
aam
sahf
sbb
cli
bound
in
stos
push
cmp
dec
adc
mov
inc
(bad)
clc
retf
fistp
xchg
rcr
push
pop
sbb
ror
or
add
or
sbb
inc
jmp
mov
sbb
jnp
mov
jge
cli
cs
pop
and
jmp
sbb
ins
sbb
test
pop
add
sbb
sub
pop
sbb
call
add
mov
push
or
and
out
and
js
jp
cdq
or
div
push
fwait
jbe
cs
ins
mov
dec
ret
ret
pop
les
dec
xor
imul
inc
cmp
test
mov
push
inc
cwde
dec
jl
jl
jns
arpl
loopne
and
sbb
inc
ins
les
inc
xchg
scas
add
xlat
push
out
xchg
or
repz
pop
inc
or
movs
mov
mov
add
int
sar
sub
inc
sbb
push
cld
cmps
jb
jg
jae
xchg
xchg
leave
cs
aad
jne
and
call
cdq
sbb
pop
loop
sub
cmp
jmp
(bad)
cs
pop
and
adc
or
inc
les
add
out
sub
pop
pushf
ins
mov
add
pop
and
cld
xchg
(bad)
sbb
jns
push
call
inc
inc
dec
add
or
iret
mov
cmp
loop
popa
inc
add
outs
sbb
adc
jp
jo
inc
adc
int
in
scas
sub
pop
inc
adc
jo
stos
pop
mov
jle
dec
push
xor
repnz
dec
pop
lea
inc
add
shl
xor
shl
cmps
ret
adc
mov
inc
lds
add
(bad)
and
ins
jecxz
push
mov
fadd
or
mov
sub
pop
ret
mov
sbb
cs
ja
inc
jmp
add
jp
jbe
xor
add
sbb
(bad)
pop
rcl
sbb
add
or
pop
aaa
push
pop
push
dec
sub
dec
cmps
xchg
out
pop
daa
call
adc
test
jbe
mov
test
ins
sbb
int3
sub
dec
fwait
popa
mov
pop
inc
pop
dec
sbb
fwait
lahf
mov
inc
mov
in
pop
sbb
pop
mov
scas
sub
xchg
inc
ss
dec
push
sbb
dec
test
hlt
inc
out
inc
adc
jae
or
es
pop
adc
ins
push
jae
icebp
fistp
add
dec
and
jnp
and
dec
mov
packuswb
jecxz
dec
ja
lds
dec
out
mov
icebp
xor
(bad)
inc
(bad)
and
pusha
pop
bound
sub
xchg
xchg
push
out
mov
outs
or
shr
movs
dec
adc
inc
sub
adc
sbb
jmp
fstp
in
push
int3
ds
xor
sbb
sub
ret
mov
aad
xor
pop
cmp
cmc
int
(bad)
and
and
jne
jmp
fsubr
sbb
sbb
inc
sbb
adc
loopne
jbe
je
in
mov
cmp
or
dec
fwait
shr
or
pop
out
xchg
pop
sbb
xchg
in
mov
nop
or
push
xor
sub
mov
push
dec
fwait
cld
mov
std
cmp
jb
sub
sbb
cmp
and
leave
mov
jecxz
and
dec
call
cld
sub
pushf
add
push
hlt
scas
push
xchg
cmp
or
sub
cmc
adc
cdq
out
xor
xchg
or
pusha
mov
jne
sbb
mov
imul
sbb
fist
dec
inc
test
imul
ins
dec
test
icebp
sub
sti
push
movs
lods
xor
adc
in
xor
daa
mov
dec
retf
out
lahf
hlt
sub
and
test
stos
dec
inc
push
rcr
stc
lahf
cld
mov
jp
jmp
aad
pop
test
mov
popf
retf
xchg
pop
dec
sub
daa
dec
es
pop
les
jge
push
dec
pop
dec
retf
inc
xor
(bad)
loope
into
push
push
xor
mov
cld
cmp
push
dec
xor
pop
adc
pop
jnp
cli
xor
dec
(bad)
jno
xchg
mov
pushf
jmp
popf
adc
adc
ss
retf
in
ss
adc
pushf
arpl
pop
arpl
dec
call
test
fiadd
xchg
jge
mov
and
sbb
and
push
dec
xor
xor
(bad)
clc
jb
clc
daa
push
pop
sub
push
je
sahf
dec
(bad)
shr
push
repz
mov
imul
mov
stc
fs
or
movs
pop
and
mov
aam
scas
ret
movs
imul
adc
imul
je
ret
sub
add
icebp
fist
sti
sub
loop
(bad)
lock
xor
lods
movs
adc
mov
adc
mov
mov
lods
(bad)
or
scas
push
add
jnp
aam
adc
lods
and
pop
inc
and
add
sub
shl
hlt
lods
xor
(bad)
sbb
jle
cmp
(bad)
sbb
or
xchg
push
dec
jl
out
rcr
inc
lahf
jmp
mov
dec
mov
adc
ja
mov
inc
and
popf
imul
inc
stc
pop
mov
xlat
cmps
or
sub
dec
adc
fcomp
movs
out
lock
and
xchg
sahf
sbb
mov
repnz
inc
dec
and
pushf
call
mov
sub
and
xchg
xchg
push
dec
xchg
xchg
js
jecxz
jle
sahf
mov
push
pop
dec
cmps
lahf
out
or
cs
xchg
jae
dec
ret
mov
xor
ins
sbb
and
lea
pushf
std
jle
imul
add
cmc
fwait
jmp
pop
addr16
xor
mov
inc
test
jae
cvtpi2ps
jl
sbb
and
jb
loopne
es
retf
jae
(bad)
fcmovnb
add
mov
fsubr
dec
jle
int
inc
xchg
cmps
push
mov
xor
mov
adc
out
sti
dec
inc
std
mov
sub
dec
ret
lds
and
inc
cmc
es
and
test
icebp
jmp
adc
add
dec
fsubr
shl
sub
cld
lahf
sub
int
fiadd
sbb
pop
cld
div
shl
fwait
push
push
scas
je
xlat
add
sbb
call
test
imul
int3
sbb
imul
in
ins
ss
sbb
imul
and
pop
lahf
mov
inc
pop
add
retf
sbb
call
mov
fist
in
sub
sbb
pop
sub
test
mov
fcom
out
cli
jmp
retf
jo
mov
fcom
out
std
mov
gs
push
cmp
xor
movs
out
sub
fdivr
dec
cdq
stos
jns
out
xor
ins
add
xor
xchg
mov
xchg
daa
cmp
jo
leave
dec
cs
in
jle
pop
dec
dec
nop
int3
or
mov
add
pop
pop
imul
push
pop
add
dec
ffree
fs
ret
push
scas
cmp
pop
sbb
stos
push
cdq
ror
dec
jae
or
dec
addr16
call
xchg
jb
jg
jb
or
shl
dec
mov
cmc
dec
jmp
sbb
sub
(bad)
dec
push
push
fwait
push
mov
(bad)
jmp
jo
fstp
cmp
add
in
gs
dec
lahf
and
mov
or
cld
fisub
jge
xchg
stos
pop
stc
in
bound
imul
mov
or
sbb
sub
popa
jecxz
fiadd
ret
stos
inc
aad
bnd
mov
cmp
pop
sbb
js
xor
sub
sbb
out
mov
pushf
dec
jmp
rcl
ret
mov
sub
cmps
push
xchg
lahf
adc
sbb
add
xor
retf
add
(bad)
stos
pop
(bad)
mov
cmp
retf
jmp
leave
jae
aad
and
cmp
cmp
pop
repnz
xlat
push
retfw
rcpps
int
mov
fadd
sub
es
dec
sbb
not
lea
imul
inc
push
repnz
and
out
xchg
pop
in
ins
dec
mov
push
inc
loop
mov
adc
(bad)
add
add
sti
arpl
mov
sbb
(bad)
sahf
mov
add
push
rol
cmp
ins
push
fdivr
adc
lods
inc
and
add
cs
and
fs
dec
ins
mov
pop
fwait
mov
and
sbb
add
jbe
fld
aad
(bad)
idiv
cmp
mov
out
sub
jmp
lods
inc
call
cdq
jl
push
iret
and
cs
mov
xor
dec
scas
aad
test
mov
push
icebp
mov
fcom
aas
shl
pop
stc
sbb
cld
(bad)
(bad)
sub
ret
cmp
lahf
mov
mov
jge
xchg
cmp
jmp
adc
add
or
xchg
aaa
xchg
popf
imul
int3
add
and
daa
adc
in
popf
add
fwait
popf
mov
test
adc
out
pop
sub
sbb
or
mov
add
mov
add
mov
and
ret
aas
add
dec
or
mov
fdiv
popf
out
and
jbe
and
dec
and
(bad)
gs
mov
mov
sbb
mov
stos
jmp
fsub
std
push
mov
fwait
inc
jo
sahf
es
mov
je
stos
inc
aam
pop
lds
jae
cmps
(bad)
xor
stos
add
add
jecxz
rol
ficom
lahf
push
in
mov
icebp
out
ffreep
pop
into
loop
xor
sub
ins
stos
test
test
pop
mov
sub
js
out
stc
adc
pushf
push
in
ds
pop
rcl
inc
lea
or
iret
inc
jne
aad
cmp
ret
sbb
mov
loopne
lds
add
cmp
in
pop
mov
mov
mov
dec
scas
loop
xor
dec
iret
stos
pop
stos
and
and
adc
test
or
iret
dec
mov
xor
add
sbb
push
jae
ins
mov
jp
in
sub
scas
test
jg
in
jb
xchg
add
pop
add
cmp
cs
lds
xchg
outs
cmp
dec
je
pop
dec
test
lea
and
inc
push
cmp
repnz
cmc
repz
inc
bound
xchg
pushf
and
in
dec
sub
cmp
dec
mov
fs
dec
or
sbb
sub
push
mov
dec
gs
adc
jmp
mov
mov
jne
arpl
jb
sub
push
xchg
lods
jno
add
mov
adc
repz
cmc
dec
jne
cmp
jmp
sub
sbb
frstor
jo
lea
stos
aad
loop
ins
jge
cmp
add
pushf
out
and
repz
inc
dec
and
call
dec
movs
fistp
sbb
add
xor
mov
or
int3
push
imul
mov
scas
int3
sbb
mov
cmp
inc
push
rcl
inc
(bad)
ror
dec
inc
les
mov
stos
int
outs
dec
(bad)
(bad)
out
lock
push
inc
ret
repnz
lahf
push
dec
sub
popa
mov
int3
push
dec
(bad)
movs
lods
stos
dec
cld
aad
out
mov
jnp
jno
fimul
and
push
adc
scas
lahf
mov
out
add
mov
jle
mov
jne
add
jecxz
es
aas
sbb
push
add
cmps
or
test
dec
scas
jecxz
imul
dec
fsub
or
mov
fisubr
dec
dec
mov
mov
jl
cmp
push
adc
std
pushf
and
fwait
out
mov
ja
hlt
add
lock
dec
in
fimul
xchg
(bad)
sbb
mov
fcomp
shr
mov
imul
test
in
jecxz
pop
cmc
cmp
adc
jbe
int
(bad)
lock
dec
aad
out
mov
ins
pop
dec
push
sahf
cld
pop
aad
(bad)
and
cs
xchg
inc
pop
repnz
test
sbb
popf
xchg
ret
shr
add
or
cmps
add
xlat
jp
int3
cdq
dec
add
ja
push
mov
ret
mov
pop
fdiv
adc
mov
xor
iret
pop
and
retf
inc
sbb
(bad)
push
cld
pop
adc
cmc
cmp
jae
jp
jp
cs
dec
push
in
inc
mov
es
or
loop
inc
enter
ror
xor
or
inc
aaa
push
and
sbb
cmps
and
std
inc
and
cwde
jnp
dec
shl
cli
movs
sbb
nop
aad
dec
sub
repnz
cmc
dec
sub
test
cmps
and
outs
std
push
mov
jmp
add
jmp
into
cmp
ins
repnz
xchg
in
test
imul
pushf
bound
int
bound
push
inc
fisttp
lds
ret
call
jb
bound
jge
jp
retf
jb
fs
ret
std
ror
sub
mov
pushf
ins
dec
(bad)
(bad)
aad
cmps
inc
jno
dec
fcos
add
xchg
lds
sbb
clc
std
inc
adc
adc
sub
stos
inc
ffreep
and
or
sub
mov
sub
sbb
inc
jge
dec
cld
cld
xor
mul
in
cld
jne
mov
xchg
(bad)
add
psrld
and
cmp
and
std
popf
mov
(bad)
jecxz
dec
aam
push
xor
jo
ds
(bad)
test
sbb
popf
sbb
rol
jbe
and
push
or
mov
mov
cwde
aad
pop
add
inc
ss
ret
sub
pop
retf
call
jno
add
repnz
test
pop
mov
inc
or
scas
push
push
scas
js
or
ins
push
sti
sbb
add
inc
inc
fdiv
dec
ffreep
xchg
cs
or
fild
pusha
sub
adc
ins
xchg
sub
xor
xor
dec
sbb
jb
leave
outs
pop
sub
sub
cld
mov
xor
ins
and
mov
adc
xor
mov
mov
dec
dec
push
cs
call
dec
pop
sub
sbb
push
test
into
scas
push
jo
scas
cmp
in
mov
push
dec
pop
stos
dec
in
test
movs
fucomi
mov
ja
repz
test
cmp
adc
and
sub
sar
popf
and
outs
pushf
mov
adc
int3
popa
icebp
icebp
adc
inc
cmc
xchg
dec
and
sub
and
les
int3
int3
ins
sub
and
cld
repnz
je
and
cmp
test
mov
and
sub
sub
dec
mul
stos
dec
or
and
xchg
jns
jbe
lahf
sbb
(bad)
cli
cmp
mov
adc
sahf
test
mov
adc
and
(bad)
fninit
and
sbb
mov
iret
push
mov
pop
cli
inc
in
xor
rol
or
sbb
cld
gs
jmp
mov
test
jg
lea
inc
aam
pop
retf
movs
pop
pop
sbb
mov
lahf
add
dec
sub
jbe
mov
sbb
sub
adc
cmp
jo
call
popf
jae
mov
sub
leave
sahf
movs
and
sub
fsub
or
and
hlt
gs
xchg
and
mov
mov
out
adc
ret
inc
into
imul
out
sbb
push
cwde
cmp
retf
xchg
mov
aam
ja
iret
or
mov
push
mov
add
mov
mov
pop
les
imul
sub
jl
add
test
ins
pop
dec
cld
enter
test
dec
shr
or
mov
mov
(bad)
retf
rol
jo
bound
xor
(bad)
cs
ja
cmc
mov
xor
jl
dec
mov
leave
ret
fdivp
mov
std
jge
pop
sbb
sbb
mov
in
cdq
inc
adc
or
mov
ret
sbb
sbb
cld
movs
pop
sbb
mov
mov
xchg
push
clc
pop
pop
in
add
ja
daa
retf
rol
cld
push
shl
(bad)
push
mov
cmp
sub
or
and
pop
and
adc
icebp
jl
int3
pop
pop
sub
mov
enter
stos
dec
mov
cmps
cmp
cmps
cmp
popa
into
cmc
inc
icebp
jecxz
cmp
jp
cld
jno
cmp
dec
je
cmc
and
repnz
fs
pop
retf
adc
fdiv
and
out
ss
lds
imul
sub
imul
aad
or
push
loopne
cmps
(bad)
or
mov
mov
or
push
adc
jae
jnp
and
pop
mov
cmp
inc
sbb
sbb
inc
dec
pop
push
adc
repnz
retf
add
mov
enter
sbb
fwait
test
div
inc
fmul
and
pushf
int3
repz
pop
fwait
push
mov
les
push
jge
xchg
push
dec
sub
pop
sub
cmp
sub
xchg
push
int3
mov
push
test
retf
sbb
mov
std
fcomi
call
jl
retf
inc
ret
adc
loope
popf
movs
push
inc
outs
arpl
ret
pop
inc
hlt
loop
jae
or
pop
sbb
adc
fscale
sub
daa
cmp
lods
sbb
scas
dec
inc
loop
push
push
fldenv
cwde
pop
icebp
imul
inc
(bad)
push
fistp
mov
sbb
and
mov
jb
leave
sbb
jl
or
or
sbb
int
(bad)
and
push
sub
(bad)
sub
cmp
neg
jae
sti
adc
sub
aas
dec
(bad)
call
inc
pop
popf
in
pop
dec
out
jmp
iret
xor
repz
dec
dec
cdq
and
fwait
and
cs
dec
sub
inc
jo
stc
inc
sub
inc
inc
push
cdq
push
cmp
mov
sub
dec
outs
mov
ror
inc
(bad)
xchg
shl
call
fimul
sbb
xor
dec
ins
inc
jns
mov
test
retf
sub
cmps
popf
movaps
push
test
sub
mov
fs
jb
test
pushf
sub
cdq
fiadd
les
push
or
dec
and
mov
mov
cmp
mov
(bad)
rcr
xchg
out
inc
jg
adc
mov
push
adc
jb
and
pop
sbb
pop
or
xchg
mov
lods
add
(bad)
test
add
fs
outs
in
mov
adc
xchg
popf
or
push
adc
arpl
mov
imul
gs
scas
pop
add
mov
dec
cmps
bound
cmp
sub
sar
inc
and
jecxz
dec
cmp
jno
mov
sbb
and
mov
pop
clc
mov
adc
xchg
test
vmovdqa
nop
mov
add
cld
and
add
cdq
add
call
dec
lods
outs
cdq
pop
cmp
dec
lahf
adc
xor
test
inc
mov
sub
pop
sahf
add
imul
sbb
xchg
adc
pop
sahf
add
ret
lods
cld
inc
pop
movs
xchg
jnp
mov
test
pop
cli
mov
mov
arpl
xchg
fs
sub
sub
test
mov
sub
mov
hlt
fs
and
lds
jmp
sub
and
outs
mov
xor
scas
test
push
dec
or
xor
and
jge
gs
push
dec
dec
call
scas
out
sub
sbb
sub
leave
fwait
dec
sbb
pop
(bad)
inc
adc
xchg
sbb
mov
jae
mov
clc
lods
push
jb
cdq
fwait
into
ficom
int3
aas
add
pushf
call
inc
out
adc
or
dec
dec
in
push
dec
adc
push
aas
stos
aas
pop
xor
xor
and
xchg
cmp
sub
adc
push
dec
mov
ds
push
shl
(bad)
jmp
mov
inc
iret
push
inc
or
int3
test
sti
push
or
add
push
xchg
shl
dec
sbb
adc
and
stos
out
add
adc
sbb
stos
jae
push
inc
mov
sub
push
dec
out
cmp
retf
jl
add
cmps
cmp
aas
push
nop
and
xor
cmp
ins
push
loop
mov
(bad)
jmp
enter
(bad)
push
pushf
xlat
inc
(bad)
fidivr
pop
dec
jmp
loope
dec
stos
cmp
xor
jg
lahf
lods
fisttp
iret
xor
and
pop
inc
jecxz
(bad)
mov
std
add
inc
ror
dec
test
rcl
fistp
(bad)
loop
les
adc
add
rcl
pop
xchg
in
inc
inc
fcom
add
cmp
jne
mov
jns
inc
dec
fadd
ins
xchg
or
dec
lods
mov
stos
bound
test
lds
push
loop
pop
repz
jbe
jb
(bad)
push
lahf
loopne
(bad)
jp
es
and
sub
cmp
fdivr
mov
cld
loopne
or
lea
nop
and
mov
and
and
mov
inc
scas
or
mov
mov
rcr
mov
push
jle
stos
sbb
gs
mov
pop
sbb
or
cld
hlt
sbb
(bad)
xchg
mov
xor
adc
outs
push
ret
mov
(bad)
out
sub
add
lahf
mov
inc
cmp
ins
loop
jge
inc
dec
fmul
jl
or
dec
into
into
inc
xor
adc
pop
sub
or
xor
or
xchg
mov
stc
rcr
pop
out
aad
mov
(bad)
frstor
aam
fstp
cwde
mov
jp
jno
or
dec
jmp
bound
jae
mov
xor
push
and
mov
ficomp
cmp
xchg
sub
aad
rdpmc
imul
das
xchg
pop
jo
xchg
cdq
popf
fistp
cmp
xlat
fnstcw
or
cmp
xchg
jle
cmc
shl
xchg
icebp
bound
(bad)
ds
or
rcr
fstp
and
sub
fsub
and
add
mov
pushf
movs
xchg
push
sbb
or
jae
jne
xor
gs
fdivr
xchg
into
or
mov
cmps
in
dec
sub
inc
stos
ret
aaa
and
loop
adc
mov
add
or
sub
pop
jae
or
jno
test
jge
jle
fnsave
ss
(bad)
add
inc
inc
pop
or
ins
add
leave
in
test
fisttp
add
pop
jp
stos
xchg
call
mov
cmp
imul
or
mov
mov
fnstsw
inc
jp
pop
push
or
bound
push
lods
out
jecxz
pop
mov
out
retf
mov
pop
ret
and
int
inc
xchg
retf
or
jns
cmp
cmp
nop
ror
pushf
enter
add
in
lds
mov
pop
or
mov
mov
ja
inc
ror
xor
addr16
outs
mov
out
rep
add
mov
bound
sbb
pushf
out
mov
push
or
push
dec
je
mov
shr
cmc
aaa
popf
js
movs
popa
dec
fadd
shl
xchg
sbb
mov
mov
imul
jmp
adc
cmp
test
into
or
fdivr
sahf
xchg
fnsave
mov
and
repnz
sub
jae
ficom
or
dec
aam
daa
jns
cmps
frstor
fnstenv
js
or
pusha
mov
ror
ins
(bad)
jmp
int
nop
sbb
inc
loopne
cmp
or
(bad)
mov
ins
int
test
xchg
popa
mov
mov
jnp
mov
mov
(bad)
mov
movs
scas
jbe
sub
jb
ror
(bad)
stc
outs
push
jle
dec
test
mov
sub
or
js
popa
ins
loope
cmc
scas
mov
or
(bad)
fiadd
dec
and
add
push
ja
or
xchg
in
loope
fdiv
test
loope
ja
push
enter
jno
mov
adc
lea
or
pop
sbb
iret
xor
pop
fiadd
popf
inc
push
adc
popa
and
jne
or
iret
xchg
fwait
arpl
mov
loop
add
or
add
mov
fnsave
(bad)
lods
pop
addr16
pusha
or
jl
jmp
add
mov
fyl2xp1
lahf
adc
or
cmp
pop
jmp
or
popf
or
fsub
dec
bound
mov
jl
mov
int
mov
inc
shr
in
(bad)
or
stos
(bad)
shr
loopne
jecxz
mov
inc
xlat
or
or
pop
cmp
dec
loopne
xlat
arpl
and
mov
ficomp
das
fld
lahf
ret
mov
push
call
xor
or
sub
shl
in
or
int3
and
dec
mov
fnsave
call
or
leave
dec
and
sub
sahf
push
(bad)
popa
cmp
fmul
and
(bad)
jns
sbb
movs
push
or
sbb
inc
or
inc
aas
cmp
push
adc
sub
pop
cmp
inc
sbb
jp
fstp
mov
pop
cmps
imul
or
adc
(bad)
(bad)
std
setno
mov
pop
loope
ret
adc
fst
push
cwde
imul
jmp
or
sub
xchg
cwde
jp
retf
cli
test
jl
(bad)
retf
adc
xchg
ss
mov
or
inc
out
fstp
icebp
sub
cdq
jne
xchg
or
or
push
lock
dec
jp
push
push
or
xchg
in
scas
mov
inc
cmp
jp
mov
and
push
or
sbb
data16
pop
aaa
cwde
jle
sub
and
sbb
pop
add
push
xchg
scas
cli
(bad)
inc
daa
xlat
in
pop
jecxz
fistp
add
jge
lock
dec
lods
es
daa
or
or
bound
inc
fild
or
loop
aas
imul
pop
(bad)
push
inc
pop
repz
es
sub
(bad)
push
dec
xor
and
sbb
inc
aad
mov
inc
(bad)
xchg
mov
xchg
jmp
(bad)
push
mov
lock
pushf
jne
mov
mov
or
push
and
lods
add
data16
shl
mov
add
vpaddb
adc
and
sbb
or
jne
test
call
and
je
int3
test
test
dec
adc
cmps
test
add
aam
pop
shl
mov
jg
xlat
and
pushf
jg
pop
inc
aam
mov
mov
mov
ja
push
stc
data16
shl
adc
or
cld
aam
push
cmps
in
fadd
mov
std
jmp
or
adc
rcl
das
push
clc
idiv
test
cwde
jle
inc
in
mov
imul
jecxz
fild
xor
mov
ficom
retf
jno
add
mov
or
adc
sub
mov
aam
or
jmp
ffree
mov
rol
retfw
mov
mov
pop
dec
mov
sub
push
inc
fistp
bound
(bad)
pop
leave
mov
pop
dec
xchg
pop
(bad)
(bad)
mov
lds
fsub
mov
daa
pop
cld
xchg
dec
xor
aad
mov
or
aad
jle
dec
jbe
fst
inc
mov
or
add
aad
sub
xchg
dec
xchg
sahf
or
test
adc
mov
popa
pushf
call
add
push
in
sub
mov
fnsave
push
or
add
ins
adc
ffree
cmp
mov
mov
mov
gs
inc
dec
mov
xchg
fld
dec
mov
push
sar
pop
mov
loopne
movs
mov
or
pushf
add
jecxz
lods
jge
jns
pop
sbb
rcr
or
xchg
jbe
pop
bound
popf
jbe
out
jne
or
imul
mov
aam
push
aas
imul
loop
jbe
push
(bad)
repnz
enter
js
loop
inc
mov
push
retf
mov
arpl
pop
xor
arpl
out
cmp
aad
push
xchg
lods
cld
mov
dec
fld
jecxz
jnp
mov
out
pop
jb
and
jmp
sbb
push
and
or
sbb
dec
(bad)
(bad)
leave
js
sub
and
or
mov
jmp
lods
call
xor
or
mov
(bad)
fadd
loop
cmps
fisub
aam
aad
sub
pop
int3
sub
cmp
mov
addr16
cmp
outs
xor
or
fistp
(bad)
daa
loope
hlt
and
and
or
cwde
adc
stos
fstp
ds
push
or
jmp
xchg
into
mov
fisttp
or
adc
mov
aaa
pop
jp
scas
cmp
push
fnstsw
fcomp
mov
(bad)
adc
or
fsubrp
stc
mov
and
fs
xchg
xor
loop
movs
pop
fcomi
cwde
sub
sbb
and
cmp
cwde
aam
enter
push
rcl
and
or
arpl
jl
mov
daa
js
adc
ficomp
jb
mov
mov
cmp
cmc
retf
fstp
xor
mov
movs
dec
pop
cmp
inc
mov
sbb
push
bound
mov
ret
(bad)
dec
jb
sub
add
sbb
js
xchg
mov
ret
mov
movs
pop
das
hlt
and
mov
mov
arpl
push
mov
sbb
jnp
ja
xchg
addr16
fstp
clc
inc
cwde
or
lds
vpmulhuw
sbb
fadd
ins
pop
data16
sbb
cli
sub
stc
pop
xchg
out
sub
fsubr
xor
retf
sub
js
add
adc
pop
cmp
aad
mov
stos
int
(bad)
or
cmp
and
fwait
test
push
lea
or
cld
and
push
cmp
jnp
cmc
and
or
or
out
test
jle
dec
sbb
stc
push
in
mov
or
and
mov
mov
iret
mov
sub
pop
push
pusha
pop
sub
sti
jno
mov
pushf
sub
or
push
jmp
js
cmp
sub
xor
xchg
lahf
or
fst
test
icebp
shl
push
ja
adc
and
arpl
ja
mov
les
ins
imul
mov
and
or
stos
push
iret
dec
pop
test
or
push
psrlw
dec
or
dec
cwde
ret
js
loop
leave
xchg
gs
bound
mov
jb
dec
jp
fnstenv
jns
rcl
or
push
mov
int
cmp
jp
or
pop
stc
ja
adc
adc
es
inc
xchg
pop
mov
popf
retf
in
enter
mov
xor
mov
or
sbb
ja
mov
data16
dec
or
xor
jns
test
fistp
test
push
outs
lock
imul
test
cmps
mov
mov
mov
ins
push
inc
bound
outs
clc
mov
or
test
daa
inc
bound
inc
(bad)
or
or
in
shl
aaa
out
ins
gs
dec
mov
push
int3
jmp
mov
popf
and
and
rcl
enter
cmc
mov
stos
lds
aad
sub
mov
pushf
scas
mov
adc
fidivr
pop
pushf
fisttp
pop
fwait
call
sbb
(bad)
mov
sbb
or
ret
lods
rcr
arpl
in
sbb
pop
ret
dec
jo
cld
or
push
xchg
mov
ret
pop
mov
jmp
es
xchg
pop
dec
ins
cmp
jge
fnstsw
js
retf
or
(bad)
and
xor
mov
fcomi
adc
rcr
pop
popf
bound
sbb
cwde
inc
pmulhuw
es
bound
adc
je
icebp
test
frstor
sbb
test
fmul
cld
sbb
mov
js
mov
and
ret
stos
cmp
or
fild
pushf
xchg
in
lock
and
gs
or
sub
ins
addr16
mov
sahf
mov
test
xor
jmp
push
xchg
(bad)
fst
mov
and
mov
add
or
mov
fsub
lods
sbb
pop
ror
(bad)
mov
ss
call
dec
shl
ins
xchg
aaa
(bad)
imul
in
and
sbb
fdiv
jmp
and
jmp
xor
frstor
in
call
dec
pop
outs
xor
ins
cmp
ret
cld
lds
xchg
test
adc
into
xor
push
bound
inc
or
xchg
test
shl
aad
and
cld
dec
xlat
mov
or
jl
imul
add
cmc
sbb
push
or
dec
jb
pusha
cmp
sbb
clc
test
add
add
push
mov
pop
jnp
enter
pop
fld
adc
xchg
fxam
push
sub
mov
mov
sub
sahf
test
fucompp
mov
test
les
ret
mov
ja
lahf
mov
arpl
outs
sub
jo
mov
add
jmp
ins
cmps
adc
add
ffree
cmp
add
or
pop
pop
mov
cmc
fnsave
xor
call
imul
scas
adc
push
sub
ja
lds
stc
les
dec
push
pop
or
ins
jne
cmp
imul
movs
hlt
clc
into
dec
dec
xchg
cmp
mov
fisub
jl
push
mov
xor
outs
outs
jns
push
hlt
or
mov
stos
in
xor
mov
out
sub
push
cmps
fst
or
jns
loopne
enter
out
loop
mov
push
mov
push
dec
arpl
fwait
movs
sbb
mov
cmp
jle
sub
ja
adc
inc
adc
sub
and
sbb
xchg
adc
call
or
mov
cmc
dec
test
sub
or
mov
lock
mov
retf
mov
(bad)
jmp
push
lea
xor
cmp
outs
dec
jg
stc
sbb
or
sbb
pop
mov
cmps
cmp
cwde
aas
retf
xor
repnz
mov
and
sbb
jmp
mov
jmp
fld
ret
dec
add
fucom
test
mov
lock
fwait
mov
lock
(bad)
cld
jae
movs
inc
jg
jne
or
hlt
sub
fisttp
cs
out
scas
ud2
push
cmp
(bad)
daa
pop
into
(bad)
lods
inc
sub
jne
out
adc
push
push
mov
xchg
add
loop
dec
icebp
pop
fnsave
xor
(bad)
pop
cmps
xor
jle
mov
and
jmp
sub
daa
xor
test
sub
cdq
xchg
and
movs
xor
ins
and
mov
mov
push
adc
jo
jp
mov
in
(bad)
into
leave
mov
test
jmp
stos
lods
push
sub
cmp
add
and
fistp
add
mov
jae
dec
scas
or
push
ins
jl
push
jl
repz
test
imul
sub
mov
in
sub
push
jg
xor
(bad)
fstp
push
fst
pmuludq
jnp
das
dec
sbb
jnp
xor
push
sub
popa
and
js
push
xchg
cmps
jmp
jg
jmp
xor
std
inc
les
sar
fst
or
fwait
push
popf
fisubr
jg
sub
sub
or
sbb
dec
out
inc
sbb
fcom
cmp
(bad)
xor
ds
push
fnstcw
nop
dec
mov
cmc
add
(bad)
inc
(bad)
(bad)
xor
sar
or
add
xchg
sub
(bad)
lods
shl
xchg
test
xor
dec
dec
add
imul
mov
sbb
arpl
sub
adc
add
jbe
xchg
loop
add
sar
frstor
add
sub
or
and
arpl
ja
shr
daa
push
fidiv
adc
push
hlt
or
sub
sbb
mov
test
cmps
gs
test
mov
mov
push
cmps
retf
push
push
movs
and
add
cld
jl
or
mov
lea
mov
(bad)
aas
jecxz
mov
je
lock
sbb
inc
fstp
xchg
or
daa
adc
bound
shr
bound
and
mov
mov
call
(bad)
xchg
xor
aad
push
or
hlt
cmp
jg
or
jo
cmp
test
ffree
and
scas
lock
lea
ins
or
popf
sti
std
pop
sub
jne
jle
sub
call
jmp
cdq
(bad)
lea
jmp
retf
ror
cmps
inc
dec
test
nop
or
adc
cmc
bound
cmps
bound
adc
stc
push
or
add
fst
or
addr16
cdq
jne
or
push
jne
push
xchg
add
xor
mov
call
jge
sbb
xchg
shl
or
mov
cmp
leave
jg
stc
(bad)
out
and
(bad)
dec
in
retf
aad
inc
or
and
jo
lea
push
aam
ins
jmp
jl
(bad)
das
cmp
push
ss
dec
and
bound
or
xor
cmps
mov
aaa
aaa
xchg
out
fisubr
out
int3
and
mov
jg
popa
or
push
bound
out
daa
lods
mov
das
in
in
mov
test
push
add
fisub
xor
jle
xchg
fisub
scas
(bad)
rcl
jb
mov
clc
xor
mov
or
inc
cmps
mov
fsubr
retf
pop
dec
sub
sub
in
bound
mov
sub
bound
add
jge
sbb
mov
out
jp
(bad)
(bad)
or
pop
push
jp
add
mov
icebp
pop
mov
lds
stos
out
mov
aaa
jbe
or
pusha
rcr
or
push
clc
retf
shl
xchg
dec
vpsraw
push
or
adc
inc
cld
neg
jae
and
xchg
push
fld
jb
xlat
sbb
add
dec
mov
pop
cwd
mov
movs
mov
mov
or
cs
fiadd
cmp
outs
movs
ja
imul
sub
xchg
popa
div
loop
loope
rcr
call
in
gs
sbb
ja
push
fstp
shl
xor
mov
mov
test
adc
jp
test
add
push
or
and
movs
fdiv
clc
shl
pop
cdq
test
bound
into
cmp
lods
dec
or
add
sbb
add
jmp
xchg
dec
push
(bad)
add
xchg
hlt
pusha
xchg
out
pop
or
or
(bad)
fisubr
icebp
ret
setnp
push
cmc
scas
mov
in
pop
adc
loope
stos
or
lock
inc
jmp
fnstsw
jecxz
bound
fsub
cmp
pop
cmps
add
(bad)
dec
xor
cmp
inc
aaa
or
xor
mov
or
xchg
or
push
fisubr
cmp
bound
daa
shl
mov
out
mov
cmp
outs
push
in
xchg
call
pop
pusha
add
(bad)
call
bound
xor
or
pop
pusha
out
mov
mov
(bad)
adc
rcr
or
ror
mov
iret
mov
hlt
sti
bound
xchg
cld
fimul
aam
and
ins
enter
pushf
(bad)
dec
loop
mov
das
(bad)
cmc
mov
fbstp
mov
bound
xor
das
nop
pop
daa
or
push
mov
cmc
jecxz
sbb
out
sbb
add
sbb
fistp
shl
adc
clc
loopne
and
pushf
sbb
sahf
push
dec
inc
jbe
lds
out
fnsave
retf
or
imul
mov
sub
sbb
imul
sti
pop
or
mov
mov
fstp
repz
push
xchg
or
scas
icebp
mov
popf
enter
in
cmp
ss
stos
add
ds
dec
gs
cs
sub
sar
xchg
mov
ja
call
pmaxub
ins
in
cmps
pop
jne
cs
dec
mov
mov
jno
popa
adc
mov
mov
sbb
xor
lods
dec
imul
enter
pop
scas
popf
or
in
call
mov
jae
xchg
dec
mov
or
repz
push
lods
pusha
int3
mov
sbb
jg
cld
in
in
xor
xchg
xor
jno
pop
test
or
daa
adc
inc
(bad)
fidiv
inc
js
push
pop
ror
pop
inc
jne
xchg
pushf
data16
xchg
jg
sbb
adc
add
fs
push
fld
pop
jle
scas
xchg
or
mov
aam
(bad)
int3
(bad)
cmp
addr16
(bad)
xor
dec
aas
clc
adc
push
mov
xchg
jns
or
je
add
not
jge
sub
outs
in
loop
or
jle
inc
mov
hlt
push
push
sahf
mov
bound
test
pop
fimul
mov
scas
movs
fiadd
pop
ficomp
mov
jns
inc
xchg
inc
or
ins
dec
sti
(bad)
div
scas
mov
sbb
aad
ret
scas
jl
popf
sub
jne
mov
sbb
icebp
pop
into
pop
xchg
or
addr16
aad
sub
iret
aam
and
or
arpl
jns
mov
add
cwde
push
xchg
ror
ins
xor
cli
xchg
repnz
lea
bound
push
inc
or
jnp
in
or
shl
and
fadd
or
or
dec
sbb
push
add
lea
jmp
stos
push
outs
ss
sub
mov
rcl
and
jne
bound
jge
or
add
xchg
les
fnstsw
adc
out
mov
dec
and
jns
push
cli
mov
cli
mov
add
pushf
call
xor
cli
cld
jne
movs
repz
clc
rcr
enter
xchg
popf
icebp
push
std
test
sbb
dec
xchg
mov
(bad)
cmp
je
mov
das
in
arpl
inc
inc
xor
aaa
or
out
popa
bound
mov
cs
jns
shr
mov
pop
lock
cmps
data16
jns
pop
daa
jbe
mov
dec
push
jecxz
add
add
cmp
inc
ins
bound
cmp
sub
and
or
jp
scas
sahf
dec
icebp
(bad)
xrelease
fst
adc
outs
out
enter
add
fisttp
es
jl
cwde
cld
and
lods
pop
pushf
xlat
repnz
or
mov
pop
jbe
inc
fs
mov
mov
or
test
movs
push
fidiv
int3
add
clc
or
mov
mov
cmc
add
push
std
or
in
cli
or
(bad)
out
fdiv
ins
inc
bound
or
dec
pmulhw
mov
inc
jge
jmp
pop
cdq
xor
jge
ja
std
ret
fstp
cmp
sub
sub
mov
jl
xor
movs
jmp
cld
ins
xchg
or
push
pop
aaa
cmc
into
idiv
jg
pop
loope
jmp
loope
cmp
pop
sti
test
movs
sub
add
adc
popf
mov
push
pop
out
(bad)
xor
outs
(bad)
lds
stos
(bad)
fidiv
inc
test
cmps
xor
rol
in
aaa
neg
jecxz
xchg
mov
jne
shl
pop
mov
or
xor
movs
mov
sbb
dec
pop
cwde
jecxz
or
add
bound
or
cdq
or
int3
rol
fsubr
clc
in
ret
cmp
hlt
dec
jno
push
add
bound
hlt
popa
das
das
test
xor
(bad)
and
and
bound
out
hlt
sbb
cmp
test
xchg
or
xchg
out
cdq
xor
call
sub
mov
dec
(bad)
push
add
in
(bad)
mov
cdq
jecxz
stos
ins
add
push
inc
cli
idiv
pop
mov
(bad)
mov
dec
or
addr16
add
imul
and
sti
jbe
dec
push
pop
or
aad
les
jae
test
les
inc
and
mov
outs
aas
xchg
or
cld
add
add
adc
xchg
dec
movs
ja
fnsave
pop
sbb
fstp
bound
sar
or
jnp
sti
out
das
sub
fs
ds
push
push
ins
jbe
(bad)
or
in
jle
lahf
shl
lods
(bad)
lea
xchg
or
sar
sbb
fisttp
adc
aas
popa
fst
fiadd
adc
dec
popa
fwait
je
sbb
mov
hlt
fisubr
bound
popa
add
call
jmp
mov
bswap
outs
into
jg
call
jne
retf
and
rol
popf
or
cmp
inc
mov
out
fnstsw
xchg
jle
ss
fisub
retf
add
sub
sbb
pop
imul
mov
lahf
clc
loope
jno
sahf
xor
mov
cli
pop
dec
std
mov
or
pop
out
into
pop
(bad)
in
int3
mov
or
sbb
and
mov
inc
(bad)
sub
sub
sub
bound
push
dec
or
icebp
mov
dec
lods
lock
stc
int3
ss
(bad)
xor
dec
xor
bound
enter
leave
es
mov
in
jmp
jnp
fild
push
or
fnstsw
(bad)
out
inc
pop
mov
out
out
or
jns
hlt
push
add
or
sbb
fmul
jmp
enter
inc
fisttp
xchg
stc
(bad)
stc
in
push
add
xor
(bad)
mov
mov
in
fsubr
mov
nop
sbb
je
repnz
and
(bad)
stc
sbb
mov
arpl
mov
xchg
jle
sub
pop
gs
shl
or
movs
bound
xchg
push
cwde
in
adc
xchg
ss
sbb
and
cmp
inc
lds
xor
test
add
add
pop
pusha
dec
mov
into
sub
gs
ins
sbb
(bad)
(bad)
fnsave
dec
xor
jo
out
or
dec
aad
mov
stc
test
outs
or
mov
std
pop
fld
imul
xor
xor
out
cmp
(bad)
test
shl
in
dec
fidivr
enter
push
movs
add
fcomp
fisttp
push
mov
cdq
push
and
bound
xor
sbb
mov
xor
dec
bound
in
not
add
jno
retf
popf
movs
cdq
cmp
mov
lock
and
ja
std
in
ret
jecxz
jecxz
fnsave
repnz
aam
ret
jle
xchg
out
fstp
pop
ds
dec
xchg
data16
push
(bad)
fbstp
sbb
or
mov
ds
add
mov
cmps
mov
(bad)
pop
mov
or
rcr
imul
jmp
mov
or
pop
xlat
lock
sbb
push
inc
pop
in
push
aaa
or
bound
push
cmps
cmp
mov
loope
ins
call
or
mov
paddusb
or
or
cmp
sbb
cmp
test
or
mov
push
sbb
(bad)
call
jb
jae
dec
outs
or
repnz
push
out
adc
mov
outs
pop
outs
(bad)
clc
out
or
loop
fstp
jle
inc
mov
or
mov
inc
jecxz
call
and
dec
sub
or
pop
mov
bound
sbb
jg
(bad)
xor
or
push
(bad)
(bad)
leave
pop
or
push
jno
cmc
fldln2
fisttp
dec
iret
retf
mov
retf
cwde
mov
es
adc
or
add
call
mov
jbe
loop
sub
add
ret
enter
dec
and
cs
imul
and
mov
sub
frstor
fld
jle
or
js
loop
lea
mov
fnsave
cdq
jmp
cdq
pop
jnp
stos
fst
sbb
fwait
inc
and
bound
xor
push
and
or
xlat
push
cmp
jl
cmp
cmc
ror
retf
fisub
(bad)
ret
pop
ja
sbb
imul
xchg
mov
pushf
sbb
jmp
out
call
add
mov
(bad)
fild
fnstcw
dec
scas
or
xchg
out
(bad)
jmp
jne
call
push
fldcw
mov
icebp
mov
inc
or
push
or
and
dec
loop
mov
retf
fwait
lahf
push
ficom
or
jae
shr
dec
mov
iret
xlat
stos
xor
mov
xchg
sub
bound
pusha
retf
pop
adc
iret
or
push
adc
cmp
dec
or
xor
dec
enter
(bad)
push
mov
in
or
cld
sub
push
or
push
dec
mov
mov
cli
inc
adc
jle
dec
and
mov
lock
sbb
or
jb
aad
lods
in
add
movs
sar
loopne
xchg
pop
gs
fstp
retf
inc
jo
push
or
push
lods
out
mov
inc
fstp
dec
sbb
xor
push
cmp
repz
das
repz
inc
inc
or
or
add
call
xor
stos
add
fnsave
sti
mov
or
sti
pop
lock
bound
idiv
jmp
mov
mov
fadd
jle
bound
in
mov
out
push
or
rcr
add
pushf
push
(bad)
ins
lds
sti
es
or
fcmove
ss
xor
gs
mov
sti
add
or
daa
lods
sahf
popf
pop
pop
jecxz
add
aam
data16
adc
cmp
add
xchg
add
in
xor
into
mov
cmp
stc
lods
fsubrp
sub
repz
add
cmp
dec
fstp
sar
xchg
popa
mov
add
mov
add
mov
and
jmp
xchg
dec
dec
mov
imul
(bad)
out
rol
dec
push
add
jmp
inc
sahf
aam
adc
and
scas
xchg
mov
ja
icebp
int
adc
ret
fcom
sub
in
xor
movs
js
sbb
mov
dec
fwait
pop
add
into
iret
cld
and
pop
loope
hlt
shl
or
cmc
cmp
jbe
and
or
stos
inc
rcl
pushf
(bad)
pop
jp
push
lods
fst
retf
push
movs
int3
xor
sbb
push
xor
cwde
outs
dec
adc
icebp
ror
frstor
mov
repz
test
mov
mov
test
adc
or
cld
test
cdq
push
sbb
bound
xchg
in
and
cmp
add
fwait
loop
lahf
fnstsw
mov
sub
inc
mov
ret
icebp
fdiv
push
and
or
in
jb
dec
fild
and
or
or
pop
xchg
xchg
push
aad
xchg
ror
in
ds
stos
xor
mov
mov
jl
mov
lahf
lods
aam
enter
push
mov
jg
or
cmp
cli
out
lock
sub
loop
cmp
setno
dec
pusha
pop
xor
cld
icebp
repz
jecxz
xor
sti
or
pop
mov
scas
push
fisttp
sbb
adc
jae
push
rol
xchg
dec
sub
clc
cmp
loop
aaa
cli
sub
mov
push
push
std
dec
dec
or
mov
fidivr
jg
pop
pop
and
dec
shr
push
or
ffreep
ror
push
inc
rcl
leave
push
jp
sti
or
sbb
mov
push
ins
fucomip
js
or
dec
dec
shl
or
or
cmp
pop
add
test
loopne
call
mov
test
cmc
aam
push
lods
cmp
mov
add
clc
mov
inc
push
test
jge
inc
cmp
mov
pushf
xchg
addr16
movs
data16
or
out
pop
adc
stos
cdq
fnsave
std
or
mov
adc
test
jl
aaa
dec
mov
fisubr
and
cli
or
and
mov
fbld
mov
(bad)
or
ins
xchg
imul
out
test
sbb
mov
mov
pop
adc
mov
test
fs
mov
dec
lods
fxam
mov
sahf
pop
jbe
mov
adc
ss
xchg
out
cdq
or
sub
out
sti
or
and
popf
addr16
(bad)
fsubr
pop
mov
and
add
aad
and
push
ins
rcr
jbe
push
xor
frstor
out
loopne
add
push
mov
dec
imul
fisttp
cs
aam
mov
repz
movs
(bad)
bound
in
jl
or
push
and
or
shr
lds
loope
pop
std
dec
inc
test
push
and
mov
add
mov
out
mov
jns
sbb
test
mov
xor
stos
fsubr
jns
gs
in
(bad)
xlat
repz
pushw
mov
xor
mov
adc
bound
sub
enter
add
xor
sbb
scas
inc
inc
fwait
mov
jle
int
push
push
pop
jp
and
or
bound
dec
clc
stos
enter
mov
xor
xchg
and
loop
xchg
add
fidivr
inc
pop
lods
or
or
gs
jns
jl
out
add
fsub
test
pop
jle
gs
ror
add
jne
lods
mov
jno
les
out
jb
or
jmp
sbb
fnclex
adc
cmp
enter
jo
push
pop
and
ret
mov
hlt
push
ins
and
icebp
pop
pop
pop
outs
(bad)
mov
mov
dec
ins
imul
sbb
sbb
fnstcw
mov
xchg
jl
or
xlat
inc
std
hlt
mov
jl
dec
fldenv
pop
or
and
dec
sbb
ins
popa
dec
add
cmp
ret
cld
stc
xor
sahf
pop
or
xchg
add
jb
xchg
or
xor
mov
mov
add
push
sbb
cmc
pop
or
cmp
push
mov
cmp
adc
mov
dec
ins
fwait
inc
pop
(bad)
ins
xchg
or
pop
aas
jl
jo
or
(bad)
mov
pop
lock
dec
add
push
out
inc
cmp
popf
jno
call
dec
push
ror
(bad)
bound
sahf
pushf
mov
or
mov
lods
ja
dec
fld
call
xor
enter
sbb
jp
cmp
and
in
jge
cmp
or
push
leave
bound
push
add
inc
lods
and
pop
xor
push
fs
or
dec
xor
stc
bound
push
and
ret
or
out
stos
sub
and
int
cmp
mov
ins
fwait
cmp
scas
inc
dec
xchg
aad
mov
jle
call
movs
retf
sbb
dec
push
add
bound
jmp
or
(bad)
retf
cli
sbb
mov
sub
cmp
xor
addr16
lea
jg
cli
push
fisttp
push
in
mov
jecxz
push
pushf
lock
and
mov
and
or
inc
aas
add
jmp
lods
cmc
mov
movs
fnstsw
mov
inc
add
add
(bad)
loope
jl
add
xor
sbb
xor
call
mov
or
sbb
sub
push
dec
mov
cmc
fisub
sub
jo
jae
xor
ret
int3
jmp
jle
push
arpl
ror
mov
and
jg
push
bound
pop
adc
sahf
fisttp
pop
fldpi
loopne
pop
mov
inc
push
cld
sub
fimul
int
rol
or
fs
xchg
(bad)
fisttp
fldz
outs
std
mul
int3
or
push
push
mov
jmp
call
or
xor
push
js
xchg
ret
add
out
call
jae
or
aaa
mov
push
cli
and
bound
and
scas
or
pop
icebp
movs
jnp
cmp
add
or
pushf
sbb
xchg
push
stc
shl
imul
push
dec
add
or
mov
movs
xchg
gs
lods
push
movs
push
fs
pop
pminub
mov
in
(bad)
or
(bad)
fmul
imul
mov
adc
cmp
mov
mov
mov
shl
jmp
loop
ss
sub
jnp
inc
xchg
cmp
lock
or
push
bound
pop
and
add
in
ror
bound
std
jae
cmp
and
in
loop
cmps
sub
loop
adc
or
mov
aas
lock
int3
mov
retf
ins
dec
(bad)
stc
mov
inc
and
mov
(bad)
fld
and
out
jle
add
xor
bsr
cmc
cmp
lock
(bad)
mov
movs
or
les
add
xchg
loop
icebp
pop
cld
gs
mov
ficom
inc
adc
cmp
sti
adc
pop
inc
out
mov
jp
or
jbe
lds
ret
test
jmp
or
jb
movs
cmp
bound
fisub
mov
jge
or
in
test
pop
stos
jb
push
mov
mov
mov
adc
xchg
addr16
jl
or
std
in
out
or
ins
pop
cdq
shl
mov
icebp
les
sbb
out
nop
sbb
into
pop
dec
xchg
loopne
xchg
adc
test
in
stos
mov
fld
ss
inc
pop
push
add
jg
mov
and
pusha
fiadd
cld
test
popa
cmp
repz
(bad)
mov
bound
leave
movs
test
mov
push
xchg
or
les
les
or
dec
retf
das
sub
and
scas
ret
fsub
or
ret
inc
int
mov
push
or
test
jle
arpl
retf
shl
or
arpl
fimul
popa
sub
jne
push
std
xchg
test
pop
pop
fidiv
adc
dec
inc
mov
hlt
leave
jecxz
or
setno
jge
ins
shl
and
inc
xchg
xchg
sub
fstp
or
inc
shl
jecxz
and
data16
push
test
retf
lock
pop
shl
ret
loop
cmp
jl
out
cmps
xchg
(bad)
(bad)
into
mov
mov
popa
jp
and
jnp
cmp
cmc
push
fcmovb
push
mov
mov
or
inc
inc
repz
mov
or
push
int
or
mov
lods
cmp
dec
fnsave
cmp
iret
or
dec
out
add
in
shl
ret
dec
in
mov
es
cmc
stos
enter
in
jecxz
pop
(bad)
and
push
xchg
mov
push
dec
jg
inc
sub
cmc
add
inc
xchg
imul
cmps
push
imul
repnz
mov
jo
xchg
fcom
or
sahf
daa
mov
popa
in
xor
xchg
push
sub
das
aas
mov
sti
outs
xchg
mov
loop
bound
cwde
mov
add
add
sbb
add
push
or
mov
or
outs
xor
bound
and
mov
(bad)
aas
sub
mov
mov
popa
or
inc
inc
jns
pop
xchg
dec
ffree
jmp
or
movs
jbe
lods
nop
xchg
ins
mov
pop
push
(bad)
rcl
repz
(bad)
jmp
cld
(bad)
cld
std
dec
mov
pop
and
in
sbb
ret
jmp
jae
sti
or
push
sub
sbb
dec
loopne
pop
rol
add
mov
dec
dec
scas
xchg
mov
bound
pop
iret
mov
inc
xchg
dec
mov
add
xchg
sbb
cmc
sbb
or
mov
push
or
sub
sar
sub
and
adc
popf
mov
ret
add
arpl
xor
imul
or
inc
sub
cmp
lds
aam
add
mov
cmp
int3
enter
jmp
jnp
(bad)
call
mov
fbstp
dec
in
pusha
scas
xchg
jo
sbb
call
rsqrtps
jge
adc
add
sahf
xchg
retw
push
sbb
or
fcompp
push
inc
bound
pop
pop
push
or
cwde
in
fdiv
and
(bad)
push
or
imul
loope
outs
jp
mov
and
sar
and
fnstsw
and
out
fwait
data16
xlat
mov
popf
test
mov
dec
push
xor
xor
retf
cmp
rol
xchg
mov
stos
xchg
or
icebp
jae
bound
jecxz
dec
adc
or
retf
enter
fnsave
cld
mov
stc
mov
cmc
pop
or
mov
arpl
ja
ja
popf
js
jae
or
mov
sbb
fs
aam
std
xlat
shl
cld
jo
call
(bad)
(bad)
retf
lds
sub
fwait
jmp
call
popa
jle
sub
sub
or
in
pop
scas
lock
ins
dec
stos
adc
pop
mov
or
ins
mov
leave
bound
mov
and
jae
xor
icebp
adc
or
and
jae
imul
or
in
aaa
xchg
repz
call
mov
xchg
call
mov
ret
mov
jo
sbb
outs
sbb
xchg
or
es
bound
mov
mov
sbb
fnstsw
sbb
lods
or
mov
mov
std
sahf
sbb
enter
lea
sahf
pop
or
xchg
int3
int3
(bad)
jmp
mov
xchg
jno
or
adc
retf
call
iret
rol
inc
or
cmp
mov
outs
mov
(bad)
or
inc
mov
inc
push
mov
(bad)
and
(bad)
jmp
jp
or
jl
inc
rcr
jmp
fidiv
mov
js
adc
mov
shr
aaa
sub
or
mov
push
je
ja
icebp
sub
fld
fs
ficom
lods
add
or
mov
xchg
fmul
add
or
sbb
shl
push
gs
loopne
jge
xor
test
cmp
dec
mov
jnp
add
inc
pop
nop
jo
or
mov
clc
push
pushf
arpl
push
jns
lds
inc
cld
gs
xchg
cwde
test
rcr
xchg
aas
or
call
jne
pop
lods
or
fisttp
xor
sub
mov
add
mov
sbb
push
hlt
fidiv
mov
fst
lock
mov
bound
pop
dec
rcr
leave
cmps
jmp
enter
add
lahf
pop
pop
imul
mov
(bad)
add
popa
(bad)
pop
add
inc
or
ror
fcomp
fwait
or
xchg
imul
pop
stos
stos
push
xor
ret
mov
enter
daa
pop
inc
fisttp
or
xlat
icebp
cs
shl
jge
add
mov
pop
arpl
ret
shl
xchg
jne
loope
jno
xchg
stos
mov
cmp
outs
sahf
loop
(bad)
mov
shl
push
sub
(bad)
clc
test
add
test
add
xor
loop
movs
dec
inc
cmps
fnsave
inc
(bad)
fxch
sahf
fidivr
jbe
or
or
sub
sbb
jmp
mov
jl
pop
test
in
test
shl
loopne
in
popa
(bad)
aaa
test
sub
and
mov
repnz
pop
sbb
cmp
call
ss
adc
or
push
or
imul
and
(bad)
jl
push
push
(bad)
frstor
adc
in
mov
inc
and
shl
call
mov
add
outs
cmps
ins
daa
cwde
cmp
mov
mov
mov
(bad)
jmp
movs
jmp
(bad)
test
adc
or
jo
test
mov
xor
frstor
arpl
clc
fcomp
or
(bad)
daa
inc
out
bound
mov
(bad)
jl
mov
les
movs
or
inc
cwde
xor
leave
ret
ror
or
push
test
xchg
sbb
jne
xchg
ins
sbb
in
ins
sar
xchg
adc
or
test
add
sbb
ins
mov
push
pop
pop
or
add
jns
pusha
lods
cmc
test
jns
popf
cmc
test
shl
mov
mov
xor
sub
ins
push
jns
stos
or
pop
popf
shl
cli
sti
mov
(bad)
sbb
movs
mov
fldcw
loop
hlt
or
aad
and
shr
(bad)
mov
outs
fld
daa
xchg
lods
xchg
ds
adc
bound
into
mov
add
enter
mov
cli
jmp
pop
add
pop
push
stos
sbb
and
dec
mov
adc
data16
popf
std
jbe
push
jo
or
test
(bad)
dec
lea
add
sbb
sahf
mov
xchg
arpl
cdq
inc
add
or
sar
popf
pusha
add
inc
arpl
or
dec
shl
cmps
ja
outs
push
or
fwait
or
daa
add
test
iret
push
imul
clc
jnp
rcr
cwde
xchg
jmp
mov
aam
or
ds
lahf
pop
lods
ds
or
js
js
leave
ss
inc
cdq
and
xor
ins
(bad)
(bad)
shl
std
bound
jecxz
inc
movs
aam
jae
push
xchg
in
add
jp
pop
clc
and
(bad)
mov
mov
push
pop
xor
inc
into
mov
add
test
xor
or
dec
and
inc
scas
dec
mov
mov
arpl
bound
ins
pop
xchg
call
imul
xchg
rcl
test
jp
adc
mov
xor
jb
jle
jl
std
jae
stos
fst
cmc
(bad)
pop
xor
dec
or
(bad)
push
das
(bad)
mov
xor
pop
sub
xchg
mov
stc
ret
adc
mov
ja
ss
adc
and
in
lods
pop
mov
stos
or
dec
ins
add
and
shl
ja
or
jnp
mov
or
into
js
int
outs
dec
fld
push
inc
xchg
or
mov
push
mov
fld
push
and
xor
inc
sub
add
add
loopne
(bad)
(bad)
int
(bad)
ficom
gs
xchg
addr16
shl
cmp
push
popf
(bad)
mov
inc
inc
jmp
leave
outs
sbb
in
test
cwde
lds
pop
ror
and
sbb
jmp
cmp
and
mov
cwde
rol
movs
cs
retf
sahf
rol
(bad)
js
cwde
jl
cmps
aaa
or
adc
sub
scas
mov
mov
push
and
aas
rcr
bound
push
sar
ret
and
aaa
gs
xor
loope
add
movs
jb
push
adc
ret
mov
mov
(bad)
mov
or
mov
int
sub
popf
in
(bad)
mov
and
mov
inc
sub
cmp
enter
mov
jnp
repnz
inc
sahf
ror
jae
(bad)
cdq
in
daa
pshufw
aad
add
jp
mov
loop
jno
sti
or
sub
lahf
cmp
cmc
loop
xchg
je
imul
cs
xor
jmp
add
les
mov
fstp
das
dec
bound
jecxz
int
mov
push
jo
shl
gs
adc
and
mov
sub
std
pop
(bad)
stos
mov
inc
scas
push
iret
cmp
loopne
add
pop
sahf
fisub
int3
mov
scas
add
sbb
ror
jmp
mov
xor
or
dec
repnz
call
and
inc
or
ins
fcmovu
in
cmc
ret
mov
je
cld
cmp
add
(bad)
shl
and
pop
setg
arpl
xor
push
cs
inc
test
cmp
push
(bad)
mov
pop
ja
push
popf
mov
inc
push
pop
sub
xchg
and
mov
dec
push
mov
in
mov
lock
xor
inc
mov
sub
outs
xchg
in
aam
jae
pop
xchg
inc
imul
repz
sbb
or
outs
dec
or
test
(bad)
movs
mov
xchg
dec
push
and
sbb
sbb
or
shl
or
call
adc
bound
mov
inc
jb
add
and
fisttp
jge
and
dec
movs
push
or
mov
add
jg
or
xchg
sub
daa
out
pop
scas
test
les
add
aam
cmp
fisttp
in
inc
fisttp
mov
pusha
push
pop
xchg
(bad)
jns
push
(bad)
sbb
popa
sbb
js
sub
or
jo
add
scas
int3
xor
cmp
rcr
or
dec
stos
or
sbb
push
cmc
dec
adc
mov
or
mov
clc
sbb
jno
js
inc
imul
or
or
xchg
push
add
ret
pop
or
pop
cli
jns
push
gs
adc
or
popa
mov
jae
xchg
jbe
stos
test
mov
jmp
push
pop
imul
add
and
dec
ins
dec
test
or
push
out
test
add
push
pop
arpl
jnp
jp
repz
rcl
or
xchg
fld
js
sub
xchg
pop
pop
ret
sub
xchg
push
or
fcmove
inc
jg
sub
or
ss
push
mov
xor
dec
xor
or
lock
fs
scas
jge
outs
std
aas
jo
imul
fisttp
jnp
cdq
div
jae
push
bound
sub
push
push
sub
or
rol
push
xor
jmp
ficom
jp
ins
and
or
push
xchg
dec
mov
xor
inc
xor
sahf
or
sti
call
sub
jle
ror
or
add
or
jge
adc
push
mov
bound
imul
xchg
push
adc
jbe
outs
popf
out
push
test
dec
lea
xor
test
jecxz
mov
add
stos
or
add
ja
inc
xchg
imul
aaa
sub
hlt
pop
dec
xchg
xchg
ins
inc
mov
inc
pop
and
and
cli
es
xchg
cs
ror
pop
mov
mov
jae
pop
pop
hlt
jl
enter
adc
pop
and
mov
dec
xor
ins
cmc
mov
lock
jmp
scas
inc
ds
push
repz
push
jp
or
inc
add
jmp
mov
mov
mov
popf
rcr
(bad)
jecxz
add
pop
(bad)
mov
ins
and
xchg
inc
push
cmps
or
push
xchg
push
jl
sub
adc
mov
aaa
and
in
xor
retf
jmp
sub
cmc
mov
dec
nop
in
inc
mov
sbb
outs
add
jle
xchg
adc
rcr
jge
in
jp
jo
shl
scas
mov
stos
jmp
add
mov
mov
push
dec
xor
inc
aaa
xor
add
rol
outs
adc
mov
sub
push
dec
xchg
cli
push
dec
adc
mov
out
pop
dec
xor
das
pop
inc
mov
adc
dec
sub
mov
pop
xlat
push
mov
call
xor
aaa
pop
and
xor
out
xor
and
data16
and
dec
(bad)
lock
jp
push
cmp
mov
pop
aas
outs
xor
inc
push
pop
mov
ss
sub
mov
jae
dec
popa
dec
xor
jl
lahf
cwde
xor
loope
cmp
jmp
mov
and
or
inc
aas
or
xchg
cmp
dec
adc
inc
mov
bound
loope
cmp
dec
sub
sbb
in
xor
dec
lea
sti
pop
dec
xchg
(bad)
mov
or
adc
push
popf
inc
mov
ror
sub
sub
and
sbb
sti
and
xor
(bad)
loop
xchg
aad
inc
out
cmps
or
enter
mov
mov
repz
mov
sbb
pop
ins
xor
adc
push
mov
aaa
push
or
cmp
inc
xchg
test
ja
sbb
push
pop
dec
aaa
ins
xor
cmp
pop
sbb
xchg
push
mov
jmp
inc
and
mov
cmp
cmp
pop
jmp
xor
mov
cmp
add
push
add
fdivr
inc
inc
and
int
shr
fild
lock
daa
jmp
or
test
and
mov
dec
arpl
xor
inc
sub
das
cdq
cmp
mov
dec
xor
inc
xor
scas
std
cmp
mov
sahf
movs
xor
dec
add
push
xchg
sub
mov
push
xor
cmps
push
xor
inc
cmp
loope
or
push
add
ret
jae
add
jmp
ss
dec
xor
cld
or
in
cli
cmp
jmp
xor
lock
pop
std
fucom
pop
sti
hlt
cmp
and
lock
push
out
and
sbb
inc
sub
or
and
pmaddwd
das
pop
dec
sbb
and
stos
fisubr
fptan
data16
std
inc
fwait
xor
fs
jecxz
xor
sti
push
ss
lahf
inc
xor
les
(bad)
xor
add
mov
or
test
cmp
daa
inc
push
movs
movs
aad
push
loop
add
rcl
sbb
jl
call
ins
mov
xor
inc
jp
in
mov
and
dec
cli
hlt
repnz
or
cmp
int3
add
and
pop
and
(bad)
inc
or
fldenv
inc
punpckhbw
and
and
add
loopne
into
dec
leave
sub
and
xchg
xor
xor
adc
inc
mov
mov
call
jae
mov
push
fst
and
mov
pop
pop
icebp
push
sbb
inc
fstp
out
ss
(bad)
xchg
sahf
or
inc
xchg
pop
add
push
push
and
je
mov
push
pop
or
xor
push
addr16
jmp
(bad)
xor
xor
int
mov
sub
fisttp
lock
jmp
clc
inc
xchg
(bad)
repz
enter
js
popf
sub
jl
inc
mov
fisttp
es
xchg
and
pushf
sub
pop
add
add
or
add
inc
ss
sub
inc
xchg
mov
js
test
popf
enter
sti
dec
cmp
inc
pop
adc
test
loope
pop
mov
mov
std
xchg
push
loopne
imul
sysret
pop
dec
test
sub
adc
push
fnsave
push
iret
ins
push
pop
inc
mov
hlt
loop
and
jecxz
bound
sub
cld
pop
fbstp
daa
inc
xor
les
or
js
dec
sub
cs
daa
fwait
cmp
xor
rol
push
and
fdiv
daa
mov
or
adc
sbb
adc
ss
or
loop
cmp
xor
xchg
rcl
outs
sbb
lods
cwde
pop
cmp
stos
xor
inc
inc
pop
sti
dec
xchg
std
and
pop
gs
mov
and
inc
xchg
in
jb
mov
add
retf
xor
inc
add
sub
sbb
aaa
repnz
test
add
out
dec
nop
dec
sub
clc
stc
and
mov
(bad)
add
int
pushf
aad
jle
and
data16
std
sub
lahf
ret
xchg
movs
leave
test
retf
psubusw
xor
dec
sub
mov
add
xor
test
sti
pop
sub
iret
dec
aas
fadd
repnz
pop
pop
dec
dec
inc
ins
pop
pop
inc
lea
jne
jmp
cmp
ins
out
(bad)
out
dec
xor
mov
xchg
data16
adc
std
hlt
inc
xchg
mov
xor
popf
test
aas
pop
push
clc
jb
ror
es
or
sbb
shr
inc
shr
pop
push
mov
test
outs
movs
daa
sahf
popa
aas
push
mov
dec
mov
inc
or
jecxz
leave
cs
mov
xchg
jmp
inc
lods
adc
jg
lea
dec
test
cmc
dec
or
pop
fucomip
or
mov
pop
xor
mov
mov
cmp
je
cdq
pop
or
push
mov
stos
ins
jo
(bad)
or
fsubr
and
outs
sub
xor
inc
push
sbb
daa
mov
cwde
inc
bound
dec
and
xchg
stos
aaa
and
into
dec
adc
jns
daa
mov
pop
cmp
out
dec
inc
inc
mov
fild
add
dec
ds
daa
dec
scas
fldcw
add
aaa
data16
movs
push
aam
jae
in
pop
sub
fld
cmp
fild
imul
push
push
enter
xchg
and
xor
cs
pop
arpl
mov
iret
add
in
repz
cmp
sbb
xlat
or
mov
add
test
cs
add
xor
repnz
cmp
inc
les
xchg
add
inc
adc
test
loop
add
jmp
pop
push
cmp
push
fwait
call
outs
inc
sar
inc
es
ds
xor
ror
imul
push
and
in
fild
and
lea
pop
lods
int3
pusha
enter
mov
inc
sub
retf
and
(bad)
jl
inc
repnz
clc
dec
dec
mov
loop
ret
dec
sub
jmp
inc
cmp
mov
inc
sub
aam
and
add
out
bound
es
push
and
xchg
aad
imul
pop
dec
sub
mov
sbb
inc
or
pop
pop
xchg
pop
cmp
dec
aam
imul
pusha
pushf
(bad)
scas
(bad)
and
sub
jmp
or
aaa
dec
(bad)
pop
cmp
aas
aas
pop
inc
xchg
ret
imul
aas
mov
daa
mov
into
dec
pusha
aam
dec
xchg
dec
mov
inc
pop
or
push
push
movs
fst
dec
xor
mov
outs
cmp
adc
fadd
or
cmp
pop
xchg
cmp
inc
adc
dec
fnstenv
ss
ins
sbb
in
dec
es
jne
mov
cwde
and
dec
sub
mov
mov
sbb
or
dec
or
pop
inc
test
ss
nop
retf
and
mov
xchg
mov
and
dec
mov
ror
std
lock
jmp
out
push
leave
cmp
cld
test
push
cmp
or
je
push
pop
aaa
or
xor
or
xchg
pop
dec
and
loopne
aam
es
punpckldq
pop
scas
and
mov
ret
lock
loope
shr
inc
stc
sub
mov
sbb
and
adc
and
repz
inc
dec
jecxz
adc
icebp
and
adc
sahf
in
and
sub
inc
and
sahf
daa
or
adc
pop
xchg
nop
mov
add
sahf
cli
or
popf
and
sub
jecxz
(bad)
mov
pop
add
pop
movs
mov
cld
add
push
sub
and
push
fsub
inc
mov
sbb
out
push
dec
pop
repz
dec
outs
pop
push
daa
mov
mov
dec
cs
push
nop
leave
sahf
pop
hlt
std
xor
or
add
add
xor
sub
scas
inc
sbb
and
push
mov
dec
mov
clc
xchg
xor
lock
dec
dec
dec
leave
dec
mov
pop
cmp
xchg
pop
cmc
sub
jo
inc
pop
push
dec
add
call
pop
pop
div
xor
rcl
adc
pop
xchg
clc
fmul
arpl
test
js
ja
and
nop
push
adc
xchg
or
fs
dec
je
mov
pop
(bad)
mov
sbb
or
aad
popf
pop
fmul
inc
popf
fcmove
retf
cmp
mov
add
push
push
and
inc
sub
call
dec
aas
jecxz
jae
fldenv
dec
enter
jmp
or
inc
jns
ss
mov
or
movs
adc
inc
mov
xor
pop
aam
jle
xchg
pop
fs
movs
mov
scas
xor
add
in
push
push
pop
xchg
int
inc
dec
sub
add
mov
cmp
mov
mov
xchg
call
cmps
adc
inc
mov
dec
(bad)
push
lods
jno
jecxz
or
inc
xor
jecxz
cmp
rcl
je
outs
push
or
jnp
adc
fmul
jns
cmp
pop
in
scas
push
test
cmovnp
loopne
dec
fdivr
popa
adc
or
xchg
inc
outs
cmps
shr
and
les
daa
jecxz
cdq
out
pushf
mov
pop
jne
or
adc
pop
add
loopne
ss
jmp
inc
arpl
push
int3
popf
retf
xchg
xor
inc
ds
test
sbb
pushf
or
hlt
inc
cmp
mov
ret
xor
push
xchg
repz
dec
(bad)
stc
pop
push
fwait
pop
mov
pop
mov
vrsqrtss
ret
sbb
fcom
sub
dec
mov
loope
test
lods
sub
and
(bad)
pushf
fnsave
das
jo
adc
push
mov
sbb
lods
cmp
xor
dec
repnz
inc
imul
pop
push
lea
pop
xchg
rol
hlt
shl
js
stos
mov
dec
add
ret
fdiv
inc
cs
fld
or
push
mov
dec
out
cmp
loope
push
aad
dec
push
xor
pop
dec
sti
(bad)
out
xchg
int3
pop
mov
lods
sub
pop
xor
call
movs
iret
arpl
and
aaa
dec
sahf
pop
and
in
div
adc
inc
adc
movhps
stos
jo
jmp
(bad)
out
leave
xchg
mov
(bad)
cmp
mov
(bad)
push
or
clc
cmp
pop
xchg
cmp
jp
adc
inc
add
sub
inc
jg
mov
xor
mov
mov
and
gs
sub
dec
idiv
add
or
inc
and
mov
fcomp
fwait
jmp
mov
xchg
or
jne
ficomp
daa
or
or
fs
mov
pop
adc
mov
cs
pop
and
mov
mov
push
or
cmps
popf
bound
xor
pop
sub
push
adc
mov
add
pop
push
jnp
inc
push
dec
ret
movzx
mov
ss
push
dec
xorps
lods
iret
call
pop
inc
xchg
loop
dec
fsubr
pusha
cli
adc
jb
dec
adc
or
ror
lock
adc
pop
or
adc
pop
mov
dec
clc
sbb
repnz
popa
dec
mov
cmp
mov
aam
xchg
(bad)
pop
pushf
lock
in
push
jle
shl
mov
outs
or
daa
in
inc
xor
cmp
xor
cmp
fcom
adc
pusha
inc
mov
push
aas
xchg
loopne
xor
xchg
jae
jmp
jl
aam
cmp
xchg
or
inc
cmp
sahf
pop
add
inc
lock
xor
or
push
popa
imul
stos
sub
inc
mov
add
mov
lods
and
jecxz
push
aad
lahf
or
test
dec
or
cmp
popa
sbb
pop
lds
es
pop
or
movs
das
data16
mov
push
dec
lsl
in
call
fcomp
mov
das
jecxz
push
sbb
push
mov
jmp
stc
dec
mov
out
aaa
and
mov
mov
pop
add
xor
mov
inc
out
mov
comiss
inc
cmp
cli
imul
mov
dec
xor
dec
cmp
ror
call
cli
inc
push
or
es
fnstcw
sub
xchg
push
adc
push
cmp
imul
add
push
or
scas
xor
cs
xor
dec
aas
mov
sub
xor
cdq
mul
retf
popf
idiv
xchg
popf
mov
rol
call
out
inc
add
stc
inc
xlat
or
push
pop
push
loope
xor
cmp
pop
pop
cmp
cwde
sbb
es
mov
cmps
in
(bad)
hlt
push
add
jg
cmp
add
out
xchg
push
stc
or
push
sbb
pcmpeqd
add
inc
movs
add
or
scas
cdq
cld
ret
cdq
cmp
out
lods
xor
dec
xor
adc
pop
repnz
jecxz
and
xchg
in
xchg
push
adc
jmp
test
jno
pop
dec
or
xchg
mov
nop
xor
int3
xor
int3
inc
ds
test
ss
psrlq
pushf
fnstcw
inc
cli
sbb
jmp
std
leave
sbb
lods
in
dec
rcr
inc
pop
fs
add
sbb
xor
fldz
fwait
sub
stos
std
in
sub
sbb
adc
fwait
mov
cmps
hlt
sub
imul
and
add
ds
pop
fisttp
ss
test
rcr
pop
nop
shl
sub
mov
xchg
(bad)
repnz
dec
xchg
inc
inc
dec
cmp
ss
(bad)
aam
push
lock
add
ins
stos
pushw
pop
push
jo
sbb
pop
mov
stc
ror
dec
fbstp
pushf
mov
fnstsw
xor
jne
icebp
daa
rcr
jb
sbb
(bad)
neg
call
stos
push
mov
or
mov
push
cdq
arpl
out
cmp
movs
mov
fwait
rcr
cmp
test
jo
fs
pop
pop
xor
mov
mov
(bad)
loopne
xchg
sbb
cdq
jecxz
cmp
push
mov
sbb
aas
pop
pop
mov
pusha
loop
sahf
mov
pop
jmp
dec
and
push
fsub
sub
aam
cmp
test
fiadd
and
xchg
aas
call
inc
lock
dec
jmp
sub
push
test
repnz
or
cmp
pop
xor
cmps
into
pop
mov
hlt
out
sub
mov
outs
xchg
inc
cmp
call
mov
das
test
add
cli
cmp
sbb
shl
rcl
jp
push
arpl
push
pop
mov
push
clc
jmp
push
and
repnz
fild
shl
inc
add
cs
cmp
pop
inc
and
inc
add
pop
mov
xor
cmp
or
push
mov
in
test
and
loopne
and
and
or
inc
pop
sub
push
popf
cs
mov
push
cdq
fstp
xchg
rol
dec
nop
inc
push
xor
pop
retf
out
mov
lods
add
repnz
and
push
jg
xchg
(bad)
mov
sbb
ss
adc
and
sub
(bad)
in
push
bound
lahf
in
add
xchg
icebp
and
jmp
cmp
fadd
xor
imul
movs
or
jmp
movntq
movs
out
add
inc
inc
es
dec
cmp
cmp
mov
push
dec
cdq
cmp
data16
push
pushf
cmp
stc
dec
xor
dec
mov
das
(bad)
mov
in
xchg
fist
mov
pop
shr
aaa
pop
push
pop
and
jp
gs
fwait
inc
out
adc
icebp
ret
fdiv
push
cmp
pop
inc
popa
mov
mov
aaa
lods
mov
pop
push
cwde
ins
xchg
(bad)
push
popf
(bad)
and
mov
fstp
cmps
clc
int
mov
popa
and
loop
dec
outs
fwait
xchg
dec
xchg
nop
jnp
add
pop
xor
dec
sub
out
shl
lods
xor
inc
(bad)
and
inc
pop
je
sub
push
pushf
fnstsw
inc
jl
imul
jne
jno
popa
sbb
ss
adc
push
adc
jl
mov
inc
mov
push
add
xor
dec
cmp
or
sbb
js
nop
sub
aad
xchg
cmp
sbb
xor
fisub
cmp
push
cmp
pop
sub
call
inc
mov
ja
mov
push
shl
pop
mov
dec
rcr
push
pushf
out
cmp
popa
cmovge
sbb
je
push
dec
cwde
cmc
adc
xor
div
add
or
push
sub
sub
lods
jg
outs
fdiv
sub
lods
popf
movs
or
(bad)
dec
xor
out
push
test
dec
fnsave
pop
sbb
sub
scas
fld
inc
and
pop
bound
lods
call
repz
push
cmc
js
and
dec
xchg
dec
out
cdq
mov
push
ins
sub
jnp
dec
mov
hlt
lea
dec
inc
push
jecxz
add
popa
call
aaa
addr16
and
mov
sbb
ja
or
mov
adc
cwde
and
shl
lahf
(bad)
xor
leave
cdq
out
push
mov
inc
clc
push
mov
dec
xchg
test
call
fsub
sub
aad
mov
fyl2xp1
rcr
loop
sub
jge
sub
arpl
add
inc
xor
pop
dec
xor
cmp
jns
lock
lods
jecxz
adc
cmp
mov
aas
and
repnz
and
sbb
add
rcl
and
adc
cmp
icebp
cmp
outs
icebp
dec
arpl
je
pop
xchg
mov
mov
pop
mov
push
xchg
lods
retf
inc
test
dec
aas
cli
pushf
xchg
mov
lock
retf
test
sub
out
mov
inc
push
and
scas
call
mov
pop
stc
and
adc
and
cld
call
xlat
bound
dec
sub
pop
ins
or
in
dec
xchg
in
jmp
rol
or
pop
popf
sahf
fst
(bad)
mov
inc
cmp
dec
out
jmp
xor
xchg
les
xor
xor
inc
mov
repnz
mov
scas
and
cdq
data16
daa
mov
retf
ins
call
add
lock
sub
inc
ins
fstp
add
or
xor
xlat
ss
inc
pop
pop
jns
dec
and
pop
ins
or
cdq
pop
arpl
sub
mov
push
xchg
xchg
push
dec
add
dec
or
pop
pop
mov
xchg
add
repnz
fstp
in
(bad)
imul
push
push
and
sahf
inc
push
popf
jl
mov
mov
repnz
inc
inc
wrmsr
hlt
out
es
mov
es
in
into
test
mov
add
and
lea
sbb
or
push
adc
in
inc
push
jmp
data16
mov
int3
and
xchg
(bad)
jl
icebp
ins
cmp
xchg
mov
mov
mov
addr16
xchg
ins
call
inc
fbld
add
push
add
cmp
outs
mov
cmp
jmp
or
and
retf
add
imul
and
mov
xchg
push
cmp
fnstsw
iret
lock
xchg
sbb
push
bound
xchg
mov
xchg
sti
dec
call
push
imul
adc
xor
push
add
lock
pop
sti
loopne
cmc
jno
pop
out
dec
push
pusha
in
call
jb
or
cmp
lock
lahf
bound
mov
dec
xor
arpl
inc
or
outs
jmp
jbe
and
add
hlt
sbb
and
jmp
xchg
repnz
movaps
dec
pushf
xchg
xchg
xchg
ins
enter
int3
into
inc
or
clc
data16
push
adc
ja
dec
fld
es
sahf
cmp
dec
push
mov
jmp
sahf
jb
and
xchg
push
sbb
xchg
and
rcr
sub
xchg
add
xchg
fadd
jne
dec
mov
ds
cld
ds
pop
or
test
stos
inc
push
pop
dec
sub
add
js
(bad)
fild
xor
stc
data16
mov
cmp
ficomp
adc
shr
fdiv
pop
aas
pop
out
inc
cmp
cmp
inc
jl
mov
repz
mov
inc
(bad)
xor
dec
mul
mov
loopne
imul
dec
and
jp
pop
cwde
fbld
add
lea
jmp
xchg
dec
test
stos
inc
iret
fld
ror
sahf
imul
xchg
jl
mov
dec
cmp
adc
sbb
out
dec
pop
ss
add
call
sbb
inc
sub
jae
sbb
sbb
push
mov
or
inc
mov
dec
(bad)
retf
and
push
dec
jge
push
dec
fcomp
aaa
xchg
push
mov
add
adc
outs
sbb
shl
jge
jae
ret
fisubr
or
and
lahf
jns
mov
mov
mov
sub
jmp
les
das
dec
or
dec
xchg
sahf
cmc
mov
leave
ds
fs
adc
aad
jmp
call
ret
mov
test
pop
fild
cmp
push
shl
jecxz
inc
out
bound
call
mov
pop
mov
sbb
push
xchg
scas
ret
iret
(bad)
pop
iret
mov
lock
stos
movs
neg
scas
or
dec
mov
(bad)
std
pop
jmp
cdq
pop
push
(bad)
iret
xor
nop
cld
pop
dec
xor
add
push
and
sub
daa
and
imul
xor
push
ins
dec
cmp
cmp
aam
ss
sahf
push
or
xchg
xor
cmp
mov
in
push
pop
lahf
fst
add
outs
add
or
int3
pop
push
int
pop
inc
mov
pop
or
cmps
push
dec
xchg
in
mov
inc
in
push
xchg
rol
test
inc
mov
add
push
xor
xor
movs
les
aas
aad
pop
or
enter
clc
dec
xor
cli
loop
push
sar
jbe
or
or
sahf
jle
mov
cmps
popa
dec
add
or
adc
fistp
add
sub
(bad)
ror
sub
aaa
sub
cdq
xchg
data16
lahf
push
mov
shl
stos
cmps
or
pop
mov
mov
cdq
push
aaa
ins
pop
push
add
cdq
add
pop
add
pop
mov
imul
mov
inc
sub
cmp
xchg
dec
push
sub
pop
shl
mov
inc
outs
ror
pop
das
pop
pop
mov
push
jecxz
cdq
inc
scas
mov
mov
sub
mov
and
xchg
arpl
mov
sbb
jmp
ins
icebp
xchg
dec
or
pop
dec
xor
into
or
and
aas
in
pop
dec
inc
pusha
xchg
or
inc
ss
pop
add
popf
rcr
push
and
movs
clc
jne
or
aas
data16
pcmpeqw
xor
and
dec
add
mov
test
inc
push
and
mov
push
out
mov
vmovsldup
imul
and
fistp
fisttp
repnz
(bad)
in
inc
xor
call
popf
enter
mov
sbb
mov
xor
pop
adc
push
test
pop
adc
dec
mov
es
dec
pop
push
mov
pop
pop
and
inc
xchg
pop
leave
mov
ficomp
jecxz
dec
inc
xor
pop
popa
add
dec
aas
pop
pop
add
ficom
sbb
jbe
cmps
cmp
push
idiv
ins
push
imul
sub
sub
push
cmp
push
push
inc
test
into
in
xchg
mov
repnz
repz
mov
jno
xor
pop
bound
test
xor
fisttp
ss
popa
sub
cdq
ins
adc
xor
cmc
add
or
mov
sbb
push
data16
aas
mov
pop
daa
pop
gs
jns
outs
mov
push
cwde
outs
adc
lds
nop
lods
dec
sub
jmp
jo
dec
(bad)
fst
jl
aaa
fwait
cmp
inc
mov
mov
add
or
cwde
data16
mov
or
retf
inc
adc
int3
mov
pop
hlt
mov
movs
xor
pop
into
or
imul
ret
xchg
and
mov
add
pop
orps
imul
rcl
adc
jne
test
pusha
mov
or
sahf
pop
or
hlt
ins
push
dec
imul
aaa
mov
test
sub
cmc
and
cld
pop
add
sub
pop
pop
mov
mov
xchg
lock
add
and
fbld
jmp
dec
ret
add
push
(bad)
fisttp
mov
push
loop
adc
aad
mov
int
popa
add
add
adc
cmc
sbb
fwait
dec
xor
retf
push
mov
xor
daa
and
div
and
xchg
add
sti
push
hlt
jno
jmp
fadd
jae
ja
hlt
in
cmp
minps
push
jbe
xchg
aad
pop
cmp
ret
repz
sub
sub
adc
jge
(bad)
fwait
std
(bad)
cli
mov
sbb
jle
je
jb
or
dec
adc
call
fwait
enter
in
scas
in
pop
mov
mov
out
retf
icebp
stos
xchg
push
(bad)
mov
adc
movs
xor
mov
pop
pop
ret
fdivr
in
push
cmp
pop
or
sub
jg
ins
mov
js
jo
mov
and
int
inc
stc
ja
cmps
xor
jecxz
mov
push
xchg
dec
je
int3
or
dec
mov
mov
cmovo
leave
sbb
mov
mov
adc
and
(bad)
stc
enter
das
jne
loope
and
inc
in
stc
xchg
and
inc
xor
js
fstp
xchg
add
mov
pop
sbb
es
fiadd
arpl
fist
xor
jecxz
and
mov
dec
arpl
and
jle
ja
or
retf
stc
ret
out
repz
or
pop
popa
pop
inc
xchg
gs
pop
lea
sub
dec
or
repz
lock
cmp
repnz
nop
push
imul
idiv
arpl
int3
lahf
imul
ficom
jno
mov
nop
data16
leave
xchg
jns
pop
xchg
sub
jmp
icebp
sub
fucomi
mov
shl
addr16
dec
cdq
mov
inc
sahf
dec
shl
(bad)
bnd
inc
push
xchg
push
sti
call
in
arpl
lahf
fidiv
sbb
sub
gs
fsubrp
inc
sub
mov
jl
jne
adc
or
gs
loopne
(bad)
(bad)
sahf
inc
and
mov
icebp
std
adc
ror
adc
retf
sub
xor
adc
mov
dec
or
repnz
mul
and
movs
stos
and
pmaxsw
dec
push
pop
mov
push
push
not
xor
fsub
cld
adc
or
push
mov
cmc
push
icebp
scas
movs
adc
test
pop
in
mov
es
adc
push
jle
and
xchg
ret
fistp
jg
inc
bound
mov
test
std
and
stc
or
dec
aas
mov
sbb
arpl
sbb
and
fist
lods
pop
adc
jo
or
add
or
xchg
mov
or
scas
ret
and
call
pop
adc
dec
xchg
rcl
fdivp
inc
xchg
push
or
icebp
jns
repnz
hlt
or
or
lock
inc
cmp
aaa
popa
add
cmp
dec
mov
ins
cmp
sub
inc
xchg
mov
or
retf
test
jge
popa
movs
fild
sahf
sub
jge
pusha
jmp
std
repz
loope
out
cld
fimul
xchg
add
jmp
and
lods
inc
bound
lock
or
pop
(bad)
and
imul
add
repnz
movs
or
add
mov
jge
jmp
sbb
adc
mov
xchg
or
push
rep
daa
sub
xchg
mov
cmp
imul
jo
imul
pusha
or
in
clc
test
pop
inc
sub
xchg
mov
and
popa
or
or
push
pop
pop
adc
cmp
arpl
clc
jno
iret
pushf
mov
cmp
cmp
je
and
push
out
or
or
or
es
push
push
jecxz
call
mov
or
out
mov
jb
scas
aad
xchg
popa
dec
ds
cmp
repz
pop
and
pusha
idiv
repz
je
ins
in
add
shr
add
pop
adc
adc
pop
clc
jmp
sbb
retf
int
dec
jno
mov
into
fsubr
add
or
hlt
mov
in
ins
jge
(bad)
xchg
in
or
push
sub
out
jmp
lods
add
jmp
daa
and
repnz
das
scas
or
or
or
retf
sbb
adc
repz
mov
xor
mov
and
mov
add
mov
xor
sbb
and
xor
das
or
out
jecxz
xor
outs
aaa
movs
mov
addr16
popa
aam
jmp
popf
add
add
and
(bad)
cmp
(bad)
ss
or
mov
cmp
or
adc
aaa
mov
or
adc
outs
lahf
inc
fild
inc
(bad)
mov
lods
sub
test
push
loopne
jecxz
or
push
add
ins
(bad)
loope
retf
int
jecxz
cmc
pop
jns
pop
dec
sbb
ror
(bad)
pushf
lods
ins
cmp
clc
fwait
das
push
mov
mov
ror
(bad)
add
vmwrite
cdq
icebp
arpl
jb
in
and
hlt
stos
xchg
data16
repnz
loope
dec
xor
lock
int
adc
or
add
sar
jae
int
stos
ret
ja
cmp
adc
add
imul
lock
cwde
and
aas
repnz
sub
repnz
hlt
(bad)
stc
mul
push
or
out
add
(bad)
in
push
in
lock
sbb
rol
ja
int
pop
add
(bad)
add
inc
leave
(bad)
mov
clc
call
sbb
call
(bad)
data16
gs
xor
xchg
repz
dec
xchg
std
das
xor
leave
ins
shl
sahf
sub
pop
stos
mov
(bad)
inc
aad
out
lock
mov
sub
enter
sub
into
mov
iret
mov
inc
fld
pop
sbb
sbb
add
mov
lahf
mov
cld
pop
cli
pop
repnz
idiv
js
(bad)
hlt
(bad)
xor
dec
das
xlat
(bad)
cmps
cmp
mov
shl
cmp
lods
push
leave
out
and
ins
pop
jge
je
retf
ins
das
outs
xchg
sahf
loop
cdq
xor
mov
jne
jp
shl
sub
xchg
sub
or
(bad)
lock
icebp
pushf
rcr
ret
mov
xchg
mov
sub
jmp
fisttp
add
bound
adc
shl
and
pop
push
xor
fwait
push
gs
dec
js
mov
je
lds
jo
mov
push
cdq
pop
nop
ret
xor
and
bound
aad
addr16
ret
addr16
xchg
lds
jl
ja
xor
(bad)
lock
cmp
out
mov
fnstsw
mov
ror
jbe
inc
inc
jl
(bad)
jge
test
mov
in
xchg
(bad)
in
pop
jl
retf
dec
lds
movs
aas
jge
ins
pop
rcl
data16
or
and
rol
gs
(bad)
arpl
fst
aam
and
mov
mov
jmp
xor
cmp
mov
sbb
daa
retf
pop
fadd
sbb
stos
add
push
jnp
lds
jb
sbb
jae
jns
mov
add
adc
jb
xlat
cmc
or
inc
mov
add
movd
and
xchg
cdq
xor
push
jmp
in
aad
lock
or
mov
inc
pop
pop
loop
sbb
movntps
adc
inc
jnp
enter
int
push
data16
fld
and
cmc
retf
dec
jno
jecxz
fisttp
or
aad
ins
add
addr16
push
xchg
xchg
fcom
repz
xlat
fwait
sbb
stos
jmp
mov
popa
sbb
lods
lahf
xchg
jmp
push
jecxz
sbb
sbb
adc
(bad)
into
punpckldq
push
add
push
rcl
push
dec
aaa
or
aam
push
adc
mov
aas
gs
fstp
movs
xlat
(bad)
ja
pop
sbb
shl
shl
mov
ss
call
add
pusha
retf
pop
pop
xchg
xor
jns
bswap
add
retf
movlps
cwde
pushf
jecxz
mov
pop
rcr
js
or
add
push
push
(bad)
and
nop
shl
jmp
mov
xor
bound
cmp
xchg
stos
fst
ins
jle
jg
or
push
pop
pop
fild
leave
add
cmp
push
aam
fwait
xor
pusha
inc
jp
mov
or
or
mov
and
xlat
shl
mov
adc
mov
std
jnp
loop
repz
sbb
shl
add
push
sub
push
ret
or
pop
cmp
push
fld
lock
push
test
cmp
push
push
and
leave
cmp
lds
retf
mov
sbb
iret
cmp
pop
inc
outs
sbb
(bad)
sahf
or
clc
and
sub
out
cmps
xlat
gs
std
sub
or
push
push
adc
adc
shl
cdq
popa
call
pop
repnz
cmp
or
test
and
pop
or
(bad)
pop
pop
mov
inc
shl
outs
ss
imul
fld
bound
adc
sbb
adc
(bad)
addr16
push
or
and
bswap
add
add
fisttp
ins
icebp
sub
fdiv
and
in
push
aad
add
cmp
or
sti
push
or
ret
cld
in
cli
out
cmc
or
jb
ret
sub
ret
sbb
or
xchg
inc
stos
cli
clc
dec
and
adc
out
ins
or
dec
and
add
push
pop
stos
push
add
out
pop
mov
add
icebp
and
sub
pop
add
xchg
pushf
or
loop
xor
(bad)
loop
or
scas
or
pop
fisubr
(bad)
or
sub
loope
mov
mov
addr16
retf
(bad)
repz
jle
shl
out
or
ret
ficom
dec
cmp
pop
pinsrw
push
mov
lds
shl
mov
xchg
clc
or
or
adc
(bad)
in
mov
pop
add
cmp
std
or
and
cmp
xchg
iret
xchg
fisubr
jnp
adc
(bad)
and
mov
stc
cmc
or
inc
xor
fild
scas
shl
pop
push
push
xor
add
add
dec
aad
jle
sub
add
mov
fstp
fwait
retf
mov
fmul
adc
ins
mov
inc
cmp
sar
sbb
hlt
jnp
mov
jecxz
jmp
sub
xor
retf
popa
outs
fst
ins
rcr
add
push
jp
pop
int3
inc
dec
adc
jmp
xchg
lds
mov
mov
les
inc
sub
lods
not
out
xor
sbb
sbb
mov
add
test
adc
out
cs
sti
test
pop
sbb
movs
outs
enter
cli
retf
ds
(bad)
(bad)
sbb
jmp
test
(bad)
loopne
or
xchg
mov
inc
fnsave
xchg
in
or
rcr
in
mov
aad
loopne
sti
sub
cmp
pusha
add
frstor
cld
call
icebp
sbb
imul
repz
scas
sub
adc
or
jecxz
mov
pop
(bad)
(bad)
adc
dec
adc
fimul
outs
sbb
inc
cmp
call
cmp
loope
(bad)
dec
in
jl
or
into
jle
xlat
daa
xchg
push
fucom
mov
cmp
xchg
aam
or
sub
ficom
add
and
cmp
cmp
inc
cmp
mov
rcr
add
std
or
dec
call
mov
adc
fld
mov
sbb
dec
call
fnstsw
or
sbb
or
xor
cs
mov
popa
(bad)
sub
fsubp
cwde
or
push
gs
lods
jge
into
cs
int3
add
lods
pop
outs
or
and
(bad)
jge
outs
(bad)
(bad)
(bad)
ret
loope
addr16
push
add
outs
ficomp
push
popf
and
xor
fwait
or
mul
je
xlat
lahf
(bad)
cli
sti
in
mov
add
shl
and
cld
xor
adc
mov
es
jle
or
out
add
ret
rep
lahf
(bad)
enter
xlat
rcr
outs
push
cmp
ss
out
and
and
push
das
cdq
or
jecxz
sub
or
mov
sbb
call
add
loop
emms
mov
or
mov
daa
in
cmp
pop
jmp
adc
push
out
sar
or
in
test
push
push
fdiv
mov
ret
jno
dec
sbb
or
xchg
dec
out
loope
and
pop
and
mov
cmps
nop
push
xor
call
or
(bad)
or
jne
or
stc
cld
dec
and
adc
in
fild
pop
adc
in
sub
push
sbb
mov
out
test
dec
add
cld
push
or
aaa
test
ret
ret
lds
add
es
pop
mov
sbb
jp
or
fist
cmp
mov
cli
pop
push
loope
add
and
or
push
mov
adc
mov
sbb
(bad)
inc
pop
test
clc
inc
cmp
cld
pop
adc
aad
sahf
mov
in
or
loope
shl
fcomp
inc
fld
mov
or
adc
adc
(bad)
out
push
ds
jno
fild
fstp
mov
xchg
shl
and
in
call
neg
or
scas
jne
(bad)
ja
int
jmp
(bad)
pop
or
or
bound
fidiv
jno
add
xor
sbb
aam
hlt
(bad)
jne
fldcw
mov
mov
lods
(bad)
fst
popa
jle
pop
inc
inc
lock
shl
or
push
cmp
sub
fwait
jne
rcr
and
jecxz
ficom
loopne
push
adc
xchg
fild
or
clc
xor
xor
jmp
pop
xchg
push
push
or
sub
add
aaa
jmp
sbb
mov
loop
retf
fadd
test
mov
in
in
push
sub
or
add
bound
leave
fwait
call
push
retf
inc
fbstp
ret
iret
aam
cmp
fs
or
xor
aaa
push
fsub
ror
xchg
sub
(bad)
scas
or
xor
ror
outs
add
dec
or
mov
pop
aas
dec
or
repz
cvttps2pi
xchg
leave
das
xchg
imul
(bad)
(bad)
std
sar
cmp
into
add
sub
test
stc
cmp
or
fiadd
fdivr
(bad)
call
mov
xchg
test
(bad)
lods
daa
sbb
lahf
dec
je
pop
imul
dec
das
les
or
cmp
pop
or
dec
or
mov
mov
add
inc
jmp
pop
pop
shl
in
inc
mov
or
add
xchg
bound
or
dec
int3
in
scas
pop
cwde
call
ds
push
aad
(bad)
(bad)
cwde
jle
mov
aam
shl
jecxz
or
pushf
mov
or
test
ror
adc
and
pop
iret
jno
fwait
adc
or
ins
nop
bound
retf
shl
or
(bad)
aas
jnp
or
xor
add
imul
mov
mov
inc
push
iret
les
jmp
scas
xchg
out
push
or
cmp
add
and
popa
and
pop
push
or
sub
push
fs
cmp
fnsave
aam
ja
pushf
mov
pop
or
adc
in
push
and
dec
ins
xor
daa
stos
adc
inc
fnsave
pushf
mov
cmp
fstp
fiadd
aam
lds
or
jp
jmp
clc
fistp
jle
aam
(bad)
rcr
xor
mov
fucomp
mov
scas
dec
and
dec
dec
fisttp
cmp
cmps
dec
xor
out
outs
mov
cwde
sub
or
cs
pop
fild
jg
or
in
push
jns
jne
adc
add
add
das
cmp
gs
dec
sbb
or
jmp
hlt
mov
inc
ror
and
jb
cmc
or
retf
and
bound
pushf
cdq
push
fwait
ret
xchg
mov
icebp
out
aad
rcr
(bad)
fwait
popf
cmp
push
or
adc
aaa
aaa
retf
dec
xor
cs
aad
lds
fbstp
retf
pop
ins
inc
mov
sub
sbb
es
xor
inc
sbb
or
lods
mov
bound
jle
icebp
jmp
adc
ficomp
(bad)
push
shl
cli
or
mov
call
dec
jg
inc
dec
loop
xor
add
or
mov
bound
sbb
cmp
jns
fnstsw
fisttp
pop
inc
push
ror
xchg
(bad)
and
sub
adc
les
push
add
jl
movs
add
sub
mov
xor
add
repnz
or
iret
mov
fstp
loope
sbb
or
mov
cld
sti
and
inc
rcr
int
cmp
jae
and
ror
push
ins
mov
scas
jns
sahf
xchg
sub
ins
jge
fnstsw
adc
or
repz
jle
(bad)
lea
std
in
(bad)
fst
lds
int3
gs
fistp
push
jle
dec
hlt
and
cmp
dec
mov
clc
push
sub
gs
fdivr
mov
cmp
jmp
mov
in
push
addr16
ret
neg
cmp
pminsw
lock
shl
fisttp
jmp
jns
or
sbb
jmp
call
or
xor
(bad)
lock
dec
cmps
cmp
sbb
xor
ss
mov
mov
mov
rcr
loop
or
js
mul
dec
fnsave
sti
inc
lea
dec
or
popf
or
dec
(bad)
in
or
xchg
ret
mov
lock
push
mov
mov
cwde
int
bound
in
or
jnp
and
or
(bad)
std
(bad)
int3
mov
outs
(bad)
int
ja
ffreep
(bad)
mov
adc
cmp
or
cmp
inc
nop
les
jo
xor
ins
jb
call
add
loope
xchg
mov
or
iret
cdq
rol
push
inc
or
sbb
pushf
xlat
das
jg
cmps
cmp
mov
or
or
loop
fdivr
retf
ins
sub
in
jle
leave
lds
or
ss
or
loop
js
add
out
cmp
inc
push
into
or
xor
bound
or
xchg
leave
sbb
int3
in
sub
ins
es
cwde
icebp
dec
inc
mov
or
xor
call
mov
retf
or
gs
outs
cmc
mov
ds
stos
mov
in
(bad)
and
(bad)
(bad)
sub
push
mov
fcom
faddp
xchg
fadd
rcr
jg
sub
push
outs
jecxz
mov
add
jne
adc
xchg
in
fbld
sbb
pop
addr16
lods
ret
lds
popf
hlt
call
inc
adc
dec
shr
mov
mov
add
addr16
sub
(bad)
jmp
loop
pop
or
and
test
or
pop
cmp
popa
out
dec
push
xchg
stc
sub
out
mov
mov
mov
stos
fidivr
pop
bound
dec
push
and
mov
pop
cmp
daa
arpl
mov
mov
jecxz
loop
out
sbb
jg
pop
pop
bound
adc
adc
ins
test
test
dec
out
and
adc
xor
(bad)
call
xor
imul
test
push
sti
jmp
adc
gs
sbb
cmp
in
inc
push
push
sbb
sbb
jns
adc
shl
fdiv
les
hlt
iret
inc
inc
js
or
shl
inc
into
(bad)
call
out
sbb
xchg
fcomp
fcom
mov
jns
adc
mov
mov
or
sub
lock
pop
or
dec
mov
jae
shl
push
fidivr
inc
fwait
xor
xlat
jmp
adc
mov
and
or
sub
jg
push
loope
push
(bad)
(bad)
mov
ret
mov
or
fldcw
out
dec
inc
cmp
neg
mov
adc
or
aad
sahf
les
repz
fucom
push
in
aam
fcmove
out
inc
in
or
and
ficomp
and
cmp
sbb
pop
imul
shr
add
out
(bad)
mov
dec
inc
test
ss
(bad)
sbb
add
sbb
addps
(bad)
int
test
or
fst
frstor
(bad)
fnstsw
or
push
or
es
and
xor
and
pop
jp
fiadd
mov
or
aam
jmp
fisub
jnp
shl
pop
and
xlat
add
sbb
nop
sbb
fld
nop
mov
inc
shr
(bad)
jmp
or
fisttp
or
sub
sub
sahf
and
arpl
enter
xor
dec
out
xchg
loope
out
push
sti
bound
push
ins
or
adc
adc
in
add
scas
(bad)
lods
ffreep
data16
jmp
sbb
inc
mov
out
xor
mov
fldcw
or
icebp
inc
add
jl
clc
add
in
or
sbb
out
shr
ins
cs
xchg
push
ins
or
stos
ficomp
adc
add
dec
mov
jecxz
or
xchg
imul
push
jo
loopne
test
fucom
icebp
out
or
add
or
cmc
or
(bad)
fiadd
add
jnp
inc
jl
shl
mov
push
jle
and
stos
sub
call
or
mov
nop
jo
fisub
push
xor
sbb
in
mov
ins
mov
xor
xchg
cmp
push
in
sub
out
jl
bound
or
or
sbb
dec
jge
cmp
clc
sbb
add
add
jae
cmp
ins
or
outs
shl
bound
adc
and
call
rol
fwait
mov
and
aad
adc
stos
retf
arpl
cmp
jg
jge
push
sbb
jl
mov
sub
xchg
frstor
fwait
adc
jo
add
movs
mov
in
lock
cmp
je
ret
lock
pop
mov
enter
and
lods
pop
push
lods
or
or
inc
call
or
mov
cmps
sti
fnstsw
inc
pushf
or
sbb
mov
fisttp
dec
inc
or
and
mov
mov
add
in
int3
push
or
jno
(bad)
lods
jle
dec
push
inc
out
jg
fst
nop
sbb
or
lods
mov
(bad)
iret
sti
mov
mov
gs
shl
aaa
popa
pop
lods
imul
inc
lods
bound
push
jmp
out
aam
enter
or
add
mov
rcr
cmp
inc
add
pop
lock
loope
jp
popf
test
mov
std
pop
in
int3
fsubr
pop
sbb
fimul
push
aam
outs
jp
stos
stc
xor
sub
cmp
jae
or
adc
or
rcr
daa
(bad)
sub
jmp
lds
mov
or
cmp
retf
popf
pusha
and
loop
icebp
aaa
pop
iret
or
pop
inc
sbb
retf
rcl
xchg
ins
call
repz
sbb
mov
cmc
imul
stos
xchg
ud2
test
dec
dec
in
sahf
or
inc
push
imul
sbb
in
ins
and
or
(bad)
mov
mov
fst
mov
add
cmp
cmp
out
push
pop
out
sub
std
or
cmp
in
add
(bad)
sbb
fisubr
push
mov
adc
mov
push
stc
fisttp
inc
ret
jp
or
dec
cmp
pop
adc
jo
ds
(bad)
cld
sub
add
mov
imul
pop
or
dec
inc
or
ret
ror
jb
lahf
fimul
add
imul
mov
add
xchg
fucom
ud0
dec
or
push
xchg
push
sub
hlt
hlt
sbb
das
daa
jbe
in
jns
xchg
or
xlat
cmp
(bad)
(bad)
aam
les
add
test
jbe
adc
or
pop
sbb
xor
fiadd
ins
lods
ror
arpl
test
imul
(bad)
rol
(bad)
cld
cwde
loop
inc
mov
or
mov
ror
arpl
cmc
imul
jp
adc
sbb
add
movs
je
mov
cwde
or
ret
ret
sbb
push
std
pop
jns
clc
or
or
push
ret
cmp
shr
cs
xchg
leave
bound
daa
scas
lahf
push
sub
mov
xor
aaa
xor
add
imul
xchg
inc
cld
ja
cmps
jp
or
mov
call
bound
or
xlat
push
xor
inc
adc
ret
ret
mov
jb
dec
xchg
imul
sar
(bad)
rcr
leave
add
ja
aad
or
int
xchg
(bad)
bound
and
inc
add
ss
inc
sbb
push
add
jecxz
and
mov
cmps
stos
jle
rcr
lods
mov
test
or
and
xor
pop
scas
outs
stos
jb
mov
sahf
dec
pop
in
or
aam
ror
jecxz
mov
int3
jg
or
jnp
push
mov
repz
movs
sbb
and
inc
out
inc
repnz
push
pusha
and
imul
daa
or
jo
ins
xchg
xchg
popa
sar
or
icebp
loop
bound
pop
mov
mov
nop
rol
mov
cld
call
retf
xchg
sbb
fscale
dec
add
add
sbb
retf
outs
ins
sub
mov
hlt
cmp
sbb
adc
mov
or
and
xor
mov
mov
retf
sub
jmp
(bad)
sti
dec
(bad)
fild
lock
cs
push
fisttp
xchg
aad
mov
xchg
mov
xor
daa
shl
shl
push
pop
or
stc
pop
lock
dec
or
enter
retf
mov
in
and
pop
or
add
ja
sti
lea
loope
jne
xor
bound
push
or
add
mov
call
and
test
pop
cmp
into
pusha
jl
test
or
andnps
push
or
cmp
(bad)
out
push
in
shl
and
or
es
sahf
add
stos
lahf
fstp
leave
jmp
dec
or
retf
test
(bad)
outs
je
xchg
pop
popa
stc
pop
and
or
inc
repnz
std
leave
fisttp
mov
or
repz
fstp
loope
fst
imul
adc
sbb
push
in
lahf
lea
retf
push
imul
dec
mov
out
stc
mov
stos
push
add
push
imul
pop
cmp
jnp
or
out
adc
movs
lods
push
or
dec
aad
add
pushf
(bad)
int
(bad)
hlt
popa
inc
cmp
jo
or
sbb
jne
push
and
pop
std
pop
sbb
scas
outs
xor
cmc
arpl
scas
jmp
dec
scas
dec
bound
sbb
mov
in
cs
mov
xor
call
imul
jo
jnp
int3
xor
ficom
in
push
or
mov
out
mov
pop
retf
xchg
jns
or
or
inc
fisub
or
sub
sub
sbb
mov
mov
adc
test
push
xchg
stc
addr16
ins
out
dec
add
or
jmp
pop
sahf
addr16
fst
imul
ja
fild
cld
jnp
xchg
retf
adc
and
mov
or
call
xchg
adc
dec
sub
in
cmp
and
sbb
or
xor
pop
fbstp
ret
dec
adc
cmp
cmp
sub
repnz
iret
test
cld
loopne
test
add
loope
bound
jmp
pushf
fnstsw
push
pop
jnp
ret
jmp
imul
scas
addr16
(bad)
leave
sub
clc
jmp
cmc
je
(bad)
ss
xor
loope
cli
pop
repnz
sti
sahf
popa
adc
sbb
xor
sbb
adc
or
push
ss
sbb
add
and
mov
xchg
ror
clc
hlt
repz
sbb
ror
add
scas
dec
push
or
ja
xchg
mov
outs
out
push
or
sub
sbb
cmc
push
or
fwait
mov
dec
out
xor
in
xchg
jmp
or
mov
xchg
les
sub
adc
sbb
inc
imul
inc
mov
add
mov
mov
and
mov
dec
jbe
xlat
jb
or
hlt
jg
pop
int3
xor
mov
add
int
push
dec
outs
cli
dec
jb
and
(bad)
or
xlat
jge
cdq
into
std
(bad)
mov
cmp
ins
jl
ja
les
cmp
cs
jge
(bad)
(bad)
fbld
test
(bad)
or
shl
pop
cmp
mov
adc
mov
inc
jecxz
sti
out
or
pop
ficom
jnp
(bad)
outs
inc
jmp
pop
call
clc
into
(bad)
test
outs
in
out
in
jg
or
or
aam
leave
add
mov
ins
sub
or
pop
je
enter
gs
repz
sahf
movs
gs
jge
ins
jae
pop
sbb
stos
xchg
mov
addr16
xlat
inc
fldenv
pop
fwait
test
sub
inc
adc
(bad)
jns
and
add
lea
loopne
hlt
sub
pop
mov
mov
sub
jmp
cdq
ins
dec
ret
out
or
push
and
gs
add
or
add
add
pop
pop
add
jp
in
mov
adc
sbb
fucomp
(bad)
rcr
retf
out
or
push
sahf
cmp
lods
mov
or
ret
pop
or
(bad)
arpl
add
push
mov
mov
xor
adc
not
sbb
shl
jmp
cld
pop
cmc
jle
ffreep
loop
fidiv
int
adc
or
aad
xchg
sub
jne
(bad)
lahf
or
or
repnz
repnz
fimul
xchg
sahf
push
nop
inc
add
int3
dec
mov
mov
mov
int3
out
push
and
fstp
ins
in
in
pop
out
inc
or
mov
mov
aas
in
pop
mov
or
ror
mov
daa
push
fs
bnd
cmp
inc
or
sub
test
sbb
aad
and
push
dec
mov
adc
bound
out
mov
and
and
mov
or
push
int3
mov
sub
cmp
push
inc
js
mov
add
icebp
(bad)
int
out
mov
pop
inc
fmul
mov
enter
rcr
ins
mov
fistp
js
xchg
sub
(bad)
imul
lahf
gs
lds
outs
add
ins
lea
lock
pop
lahf
xor
loop
or
js
lods
add
xchg
(bad)
ficomp
push
test
pusha
or
lods
gs
movs
inc
mov
cmp
xor
pop
daa
push
xor
fcmovne
fistp
lds
mov
clc
or
sbb
add
sub
mov
sbb
pushf
outs
fcom
push
dec
dec
pop
adc
mov
(bad)
and
sbb
(bad)
shr
les
mov
es
je
out
fs
out
outs
dec
icebp
cmc
push
sbb
or
in
and
sahf
ins
dec
pop
mov
jnp
iret
aas
sub
scas
inc
mov
test
add
out
ins
mov
sbb
xor
or
mov
inc
hlt
scas
or
sti
popa
dec
xchg
out
push
dec
fnsave
mov
call
std
outs
mov
jcxz
(bad)
stc
jecxz
pop
das
retf
lahf
out
mov
loop
mov
bound
mov
aaa
setle
dec
add
stos
push
or
(bad)
or
mov
or
xor
out
mov
or
add
das
data16
bound
push
inc
or
jp
jmp
xchg
fmul
in
xor
(bad)
jecxz
sbb
push
or
scas
mov
adc
ins
sub
cmp
fisttp
and
pop
add
xor
xor
mov
sbb
gs
push
rcr
sbb
frndint
rol
ins
push
sub
(bad)
movs
popf
les
or
inc
sub
inc
mov
fucom
je
and
movs
aas
add
rol
(bad)
sub
mov
cmp
xchg
ins
and
arpl
in
xend
pop
jl
(bad)
pop
jecxz
sub
xchg
inc
xor
jbe
and
pop
sub
ret
bound
dec
fiadd
inc
iret
inc
bound
xor
mov
mov
imul
popa
xor
bound
repz
mov
xor
je
mov
(bad)
jg
aad
xchg
(bad)
add
out
sub
adc
pop
stos
mov
xor
es
mov
pop
push
(bad)
test
aaa
or
pop
xor
push
add
mov
inc
frndint
mov
or
data16
jo
bound
and
js
mov
dec
dec
dec
fcom
jle
in
gs
nop
add
and
call
mov
mul
loope
rcl
or
rcr
dec
rol
movs
or
(bad)
addr16
push
sub
addr16
xchg
sbb
das
jle
stos
xor
(bad)
pushw
mov
shl
xchg
xor
cmp
leave
pop
xor
cwde
push
ins
loop
xor
pop
add
xor
(bad)
(bad)
cs
cwde
(bad)
mov
fwait
push
or
xor
arpl
fiadd
adc
or
sbb
push
aas
pop
cmp
dec
or
xor
div
ins
xor
(bad)
test
aaa
sbb
jecxz
sub
inc
xor
out
int
xchg
jns
mov
hlt
mov
retf
pop
rcr
mov
push
jl
iret
bound
mov
std
scas
or
pop
(bad)
je
in
pushf
inc
fisttp
or
push
sbb
adc
js
iret
(bad)
out
xchg
xchg
xchg
fucom
outs
std
mov
xor
shl
arpl
das
mov
xor
or
push
xchg
adc
sub
hlt
je
aaa
cli
inc
lods
inc
push
test
iret
xchg
fwait
int3
xor
cmp
repnz
dec
clc
ret
repz
or
jge
movs
jp
test
das
lods
popa
loope
cli
add
in
cli
lods
sbb
or
cld
jne
pop
les
bound
arpl
retf
repnz
icebp
xlat
xor
adc
out
leave
ins
in
ror
inc
(bad)
pop
je
push
sub
jb
and
cmp
imul
push
sub
arpl
mov
in
out
jp
mov
fs
scas
mov
div
idiv
or
or
test
sahf
inc
push
fisubr
int3
jne
leave
adc
fs
or
inc
mov
add
aam
add
rcl
sub
sti
in
call
(bad)
test
retf
add
push
scas
pop
mov
je
les
jmp
arpl
xchg
add
fcomp
dec
or
push
test
cld
mov
out
fs
out
xor
popf
or
mov
sar
sbb
sub
and
test
xchg
push
inc
adc
mov
int3
loopne
mov
repz
loope
out
(bad)
in
into
jecxz
xor
mov
pop
sub
add
loop
sub
test
fsubr
fstp
mov
sbb
ds
inc
mov
jb
mov
arpl
add
jg
pop
(bad)
or
in
test
sbb
push
push
jmp
shr
jge
pop
or
sbb
iret
jbe
cmp
mov
ins
add
or
dec
and
and
fisttp
xchg
pop
sub
mov
imul
push
jmp
or
adc
fldcw
call
add
pop
stos
push
mov
or
test
fisubr
stc
adc
jnp
cmp
or
xor
outs
jae
jne
(bad)
loopne
(bad)
rcr
push
sbb
sub
sahf
sbb
mov
sahf
stc
dec
repnz
(bad)
jp
add
or
cli
jne
je
add
mov
fstp
rcl
ror
mov
mov
push
and
adc
repnz
fistp
cmp
data16
xchg
and
shr
jl
or
lock
jp
ror
shl
sbb
sbb
or
adc
add
sub
inc
add
cld
mov
imul
inc
or
arpl
mov
idiv
test
cmps
lods
dec
pop
lods
jbe
or
loop
sub
cmp
xchg
lods
or
clc
pushf
or
adc
xor
lea
mov
loopne
(bad)
mov
mov
iret
(bad)
pop
inc
movs
inc
or
hlt
add
gs
xchg
cli
jbe
ins
shr
or
sub
sub
cs
cs
mov
and
mov
adc
pop
mov
dec
or
fst
sar
out
add
fidiv
and
cmps
(bad)
ss
xor
xchg
dec
xchg
dec
retf
stos
and
cwde
sahf
pop
and
sbb
mov
mov
push
mov
jge
bound
cmps
adc
std
fwait
les
call
out
(bad)
out
inc
fstp
das
sbb
dec
add
in
hlt
and
(bad)
cld
cmp
push
in
clc
(bad)
pop
jp
add
ret
add
bound
xor
cli
popf
adc
repz
push
add
cs
loop
xchg
bound
jnp
cli
or
cld
jle
les
xor
sahf
shl
shr
rol
inc
mov
xor
sub
data16
pop
loopne
sub
xchg
mov
iret
mov
outs
push
fld
xchg
repnz
stos
lock
xor
loopne
ins
jnp
push
loop
sub
and
loope
call
add
xchg
stc
pop
xor
fild
retf
or
sbb
sbb
add
fisub
gs
mov
jb
jne
or
lock
adc
(bad)
in
xor
adc
inc
xchg
fistp
or
jle
xchg
ins
aas
adc
int
gs
ret
addr16
fs
or
loopne
jae
adc
pop
adc
xchg
out
aaa
pop
mov
icebp
ret
(bad)
xor
sbb
ret
mov
sub
fisttp
loopne
call
or
test
lods
fs
dec
cmp
(bad)
mov
push
or
repz
out
cmovge
out
int3
sub
dec
mov
fs
or
sti
int
adc
(bad)
icebp
(bad)
push
dec
movs
inc
jno
stos
or
lock
cdq
(bad)
fstp
sub
xchg
or
lock
mov
fcmovnbe
push
fnstsw
fidivr
out
fisttp
les
out
inc
out
loop
xor
(bad)
loopne
int3
neg
add
sbb
or
(bad)
cdq
mov
pop
outs
out
mov
(bad)
xor
jnp
adc
out
movs
out
jmp
fdivr
push
adc
sub
or
push
sub
lock
bound
fimul
xchg
getsec
sbb
xor
xchg
enter
fmul
paddd
mov
push
pop
ror
push
adc
nop
xor
(bad)
fst
fdiv
or
call
shl
or
call
push
leave
xor
jle
pop
lock
(bad)
cld
mov
and
bound
test
sub
adc
sbb
or
dec
cdq
and
or
cmc
dec
repz
daa
icebp
sbb
fadd
test
(bad)
mov
fcomp
pop
or
repz
pop
outs
lahf
or
adc
add
test
sar
jmp
and
ret
inc
jp
mov
jns
mov
daa
mov
imul
jb
popa
sbb
mov
idiv
inc
xor
cmps
gs
xchg
inc
(bad)
xor
dec
in
loopne
xor
(bad)
(bad)
or
and
mov
jo
or
les
pop
dec
xchg
or
cmp
add
daa
mov
scas
in
push
imul
or
xor
mov
jno
and
cmps
xor
mov
jp
(bad)
repnz
mov
mov
out
and
jge
push
aam
fbld
fnstenv
add
xchg
or
sub
pusha
out
in
dec
or
mov
fbld
or
test
outs
rcr
cmp
dec
pop
sbb
or
ins
in
jle
pop
cmp
int3
repnz
lods
xchg
sbb
xchg
mov
and
jb
fstp
sbb
or
xchg
mov
cmp
aam
mov
or
xor
imul
fld
(bad)
cli
mov
jecxz
and
fild
mov
out
pop
std
loopne
or
jecxz
or
push
arpl
cs
ins
fst
jmp
and
or
(bad)
push
push
mov
adc
bound
call
push
mov
leave
ffree
push
fidivr
jmp
std
or
push
nop
(bad)
clc
xchg
loop
loopne
cld
dec
xor
shl
out
js
in
add
retf
ss
xor
mov
push
sub
into
fadd
es
in
loop
test
ror
mov
sub
xchg
lock
or
jno
add
dec
xchg
(bad)
test
rcl
fsubr
dec
dec
and
and
jp
(bad)
xchg
iret
fsubp
or
fdiv
pop
fcomip
jp
or
pop
jne
popa
cmp
add
sbb
adc
or
inc
dec
movs
std
aaa
js
and
(bad)
repz
loope
lods
lock
mov
inc
nop
sbb
icebp
xchg
xchg
mov
sub
stos
aam
ss
sbb
fadd
cmp
stos
cld
bound
pushf
loopne
xor
or
cld
jl
push
or
add
fisub
outs
jnp
fidivr
adc
cli
jne
bound
aas
sbb
pop
out
cmc
pop
cmc
scas
pop
pop
adc
std
mov
push
popf
retf
shl
popa
or
mov
adc
push
sar
aam
cld
arpl
ins
jmp
in
stos
gs
or
repnz
pop
fldcw
mov
pusha
and
or
push
fcomp
xchg
adc
out
push
fsub
popa
loope
add
lods
imul
movs
sub
xlat
std
std
add
or
sub
in
push
ds
les
sub
jle
stos
out
jmp
cmp
inc
in
sub
jb
iret
mov
imul
jne
xor
call
mov
bound
fcom
push
cdq
sub
cld
or
fld
or
dec
call
and
add
jno
xor
std
cli
in
adc
retf
add
inc
ror
mov
in
jae
adc
sbb
cli
ret
shr
test
sub
(bad)
add
vpsraw
retf
mov
repnz
or
jae
shl
cmp
ins
jmp
mov
das
adc
imul
push
call
sbb
or
xlat
ins
mov
in
jmp
test
mul
call
xor
sbb
shl
fucom
add
xchg
pop
sub
sub
das
and
out
loopne
jecxz
cmp
(bad)
movs
jmp
mov
push
cld
jmp
mov
pop
popf
test
add
adc
or
or
jmp
sbb
adc
ror
call
add
out
or
push
out
les
popf
xchg
pusha
and
pushf
jle
pop
xchg
repz
xchg
es
icebp
cmp
fistp
out
sar
or
iret
add
adc
sub
in
inc
daa
into
xchg
xchg
and
pop
and
jmp
ficomp
sub
fld
dec
cmps
cmp
dec
gs
shl
inc
add
add
cld
retf
mov
mov
cmp
jnp
jle
jne
cvtdq2ps
pop
push
imul
sub
cdq
pop
pop
add
fiadd
lahf
(bad)
ss
out
std
dec
call
cmp
or
pushf
ins
and
xchg
out
or
jmp
rol
pop
cmp
or
(bad)
jmp
lods
or
and
sar
xchg
dec
aaa
jecxz
jg
jo
int3
int
scas
or
mov
jne
mul
jmp
adc
call
push
popa
adc
rol
dec
jnp
pop
jp
add
cwde
pushf
jle
or
lock
test
and
sbb
xchg
cmp
(bad)
mov
mov
jmp
jecxz
icebp
imul
(bad)
imul
outs
leave
push
push
es
or
or
adc
jns
lds
dec
shr
call
aam
add
xor
aas
cs
nop
add
add
out
adc
xchg
outs
pop
fsub
cmps
jae
cmp
sbb
fstp
sbb
in
push
and
or
out
push
aad
xlat
fwait
(bad)
arpl
and
mov
xor
adc
adc
sti
(bad)
arpl
cmc
sbb
push
cmp
mov
int
sbb
out
push
pop
sahf
mov
ins
xchg
jbe
jns
movs
lock
or
iret
mov
mov
mov
aad
cmp
ins
gs
mov
call
test
dec
or
fisubr
cmc
retf
mov
out
sbb
add
aad
outs
sub
test
cli
xchg
mov
dec
mul
hlt
loop
retf
pop
gs
lods
mov
rcl
push
or
stos
ret
fst
fnsave
mov
cmp
pop
add
xchg
sbb
sub
fisttp
sti
mov
or
add
inc
repz
fwait
jmp
pop
stos
and
imul
in
push
daa
pop
gs
and
xchg
aas
sub
std
mov
cld
mov
repz
fisttp
out
(bad)
add
or
aad
out
xor
bound
fwait
call
retf
(bad)
adc
mov
fld
jne
(bad)
jg
or
push
or
push
repz
(bad)
icebp
jecxz
aam
les
or
loop
loope
cli
jno
fadd
call
movs
jb
dec
pop
sub
fcom
adc
arpl
xlat
movs
mov
fild
in
mov
in
cmp
pop
retf
inc
inc
scas
loopne
(bad)
mov
arpl
push
(bad)
add
push
jp
test
jnp
push
inc
jno
and
bound
outs
pop
add
add
and
mov
clc
popf
(bad)
stos
imul
imul
pop
pusha
dec
and
mov
inc
aaa
ins
cld
out
scas
scas
lods
out
repnz
hlt
cmp
xchg
fwait
bound
lahf
ja
std
mov
dec
movs
adc
adc
pop
cmp
or
cwde
(bad)
aad
push
nop
xchg
cmp
call
push
les
cmps
cli
sti
int3
leave
cld
adc
test
pusha
call
xor
and
adc
or
adc
add
mov
jbe
sbb
sub
(bad)
inc
out
pop
fwait
in
sub
(bad)
cwde
mov
jecxz
sub
movs
push
aad
not
cmc
hlt
neg
movs
fwait
je
mov
pop
and
data16
std
xlat
loopne
sub
(bad)
clc
repnz
addr16
shl
or
retf
inc
dec
dec
fcom
sbb
pop
out
add
test
cmp
xchg
(bad)
cmp
pop
cmc
sbb
popf
out
test
pop
push
jne
sub
mov
addr16
(bad)
dec
data16
mov
nop
jnp
sti
adc
and
cmp
sbb
outs
inc
movs
jmp
mov
xor
mov
scas
iret
gs
ficom
data16
cwde
ins
xchg
xlat
xchg
and
repz
iret
or
xchg
outs
dec
mov
test
mov
or
sbb
push
or
les
cmp
or
lock
(bad)
or
aad
jo
sbb
aam
out
std
ss
paddsb
sahf
inc
xor
arpl
push
or
sub
sub
sub
dec
cmps
adc
sbb
mov
pand
in
and
push
shr
xor
xor
out
pop
std
dec
icebp
sahf
jmp
inc
fbstp
sbb
ins
outs
inc
into
xchg
mov
sbb
sti
xor
xchg
adc
test
mov
jecxz
aas
and
add
mov
ja
jmp
adc
xchg
shl
dec
sbb
inc
cmp
(bad)
repz
cmps
or
jae
int
jo
repz
inc
add
mov
dec
ins
push
or
push
addr16
dec
dec
fidivr
sub
nop
xchg
sub
sbb
loopne
dec
repnz
or
maskmovq
test
shl
ins
add
sub
(bad)
imul
out
fs
cmp
or
jno
jmp
iret
(bad)
mov
rol
ss
lahf
rcl
sub
mov
cli
sbb
aad
sbb
icebp
xor
imul
fld
xor
int3
lock
stc
jo
xchg
fwait
sub
setg
fistp
or
addr16
sbb
sbb
push
dec
wbinvd
repnz
cmp
ja
test
retf
jl
push
(bad)
cwde
or
in
jmp
out
or
xchg
inc
adc
hlt
mov
and
(bad)
nop
fidiv
or
in
out
jo
hlt
in
outs
fnstenv
rcl
add
(bad)
sar
loope
(bad)
or
add
bnd
outs
xchg
sub
fwait
hlt
fmul
pop
imul
stc
or
or
xor
(bad)
dec
xchg
or
sbb
or
sbb
ret
pop
(bad)
jmp
fcmovu
arpl
and
jns
inc
lock
xchg
adc
sub
mov
cli
jno
nop
mov
cli
xor
and
inc
imul
dec
add
imul
xor
pop
push
xchg
sahf
daa
lods
bnd
add
fistp
inc
mov
add
ds
xchg
mov
pop
clc
retf
push
xchg
loope
aaa
and
js
hlt
cdq
dec
inc
and
std
pop
dec
xchg
jle
jno
adc
mov
fld
jb
ins
sbb
adc
jge
adc
fld
mov
pushf
bound
clc
ins
std
hlt
in
loope
aaa
xchg
push
fisttp
mov
mov
sahf
mov
and
fcom
scas
push
cmc
mov
xchg
xchg
stc
jmp
add
bound
fdiv
add
cs
fld
jle
into
jecxz
and
imul
mov
dec
lahf
inc
repz
retf
ffree
addr16
(bad)
fisttp
fisttp
mov
add
in
jg
pushfw
push
fidiv
add
adc
adc
sub
or
sar
(bad)
pop
jne
fld
or
imul
cli
mov
xchg
cld
xor
xor
xchg
aaa
sub
popa
cmc
mov
test
cld
adc
es
lahf
loope
(bad)
adc
or
daa
icebp
in
repz
xor
adc
mov
(bad)
aad
movs
add
sbb
xor
test
popa
inc
sub
in
aaa
into
stos
stos
add
dec
div
or
pop
icebp
inc
jae
fcom
or
and
cli
aaa
in
sub
mov
add
mov
je
shr
xor
jle
fmul
icebp
paddb
stc
scas
and
cs
loop
sub
call
mov
xchg
(bad)
sbb
mov
adc
add
frstor
ins
cmc
(bad)
jnp
mov
push
out
loop
mov
int3
and
outs
add
stc
je
leave
mov
mov
std
push
sti
gs
loopne
loop
mov
xor
neg
adc
inc
int
jno
xor
add
xchg
test
fwait
int3
and
jne
into
sbb
push
pop
push
in
rol
arpl
daa
inc
nop
mov
add
es
cld
adc
bound
pushf
std
cmp
xor
fwait
pop
and
enter
or
mov
sar
sbb
mov
or
mov
mov
ror
or
adc
jmp
dec
adc
fild
call
lock
push
inc
add
add
fmul
jno
push
pop
imul
out
adc
or
pop
and
pop
add
xchg
mov
rcl
adc
push
or
(bad)
retf
and
fwait
dec
dec
and
dec
arpl
(bad)
stos
(bad)
cmp
not
loop
(bad)
fs
xlat
clc
add
cmc
sbb
adc
inc
aam
(bad)
out
pop
xchg
adc
ins
in
push
shr
dec
jg
push
loop
test
sub
and
sbb
push
arpl
mov
xor
push
imul
in
pushf
ret
(bad)
ror
mov
mov
and
cmc
dec
add
(bad)
xor
or
cs
jns
mov
or
(bad)
int
ret
sbb
pop
pushf
or
mov
jmp
mov
sub
inc
out
cwde
pop
and
adc
push
mov
leave
test
sbb
icebp
adc
adc
(bad)
data16
sbb
sub
retf
add
in
ret
icebp
or
mov
xlat
mov
or
out
adc
mov
lock
ret
add
aad
cmp
icebp
adc
es
loopne
(bad)
pop
cld
and
mov
int3
or
add
fwait
sub
cmps
add
pop
cmp
jmp
xor
ror
inc
sbb
not
push
fisub
in
lods
sbb
rcl
pushf
or
icebp
pop
lock
lods
sbb
mov
in
adc
das
icebp
fstp
dec
sub
(bad)
out
xor
(bad)
js
jno
or
icebp
add
inc
add
sbb
lds
ins
mov
je
mov
xlat
fnstsw
mov
xor
scas
hlt
loope
jl
dec
sbb
fadd
outs
jge
dec
jnp
pop
leave
or
add
add
or
int
gs
and
sub
pop
push
mov
sub
inc
cwde
fild
or
cld
movs
in
loope
ret
daa
jecxz
xchg
aam
sub
(bad)
and
iret
pushf
fisttp
mov
jne
cmp
test
jne
(bad)
fadd
retf
mov
adc
das
es
(bad)
lock
cli
fnstsw
nop
add
jg
repnz
adc
adc
imul
popaw
repnz
push
shl
cmps
adc
add
or
hlt
adc
fidiv
jae
xor
inc
pop
or
mov
jmp
mul
ret
or
inc
outs
ror
jbe
iret
adc
push
add
push
mov
xor
bound
cdq
fbld
fldenv
iret
or
push
and
inc
add
rcr
jg
jmp
ds
xlat
js
jle
xchg
ins
int3
pushf
in
push
neg
enter
idiv
cli
jl
jg
adc
jo
fstp
arpl
sub
mov
fucomi
cdq
dec
and
out
jge
fwait
sbb
cld
cmp
loopne
add
dec
aaa
and
cs
jmp
test
inc
sub
stc
ja
adc
mov
(bad)
hlt
ss
out
xor
cmp
xchg
cmp
push
fstp
int
cmp
enter
sti
xlat
or
mov
arpl
fld
imul
or
icebp
inc
cld
add
in
mov
sahf
add
sar
cmp
out
jmp
pop
and
jp
rcl
push
push
sbb
adc
mov
xor
rcr
aam
add
gs
add
pop
(bad)
mov
xor
jecxz
add
imul
ins
adc
push
dec
cmps
pop
retf
mov
push
fsubp
fsub
fisub
adc
add
sub
pop
loope
jmp
test
sahf
xor
aam
ins
or
rcr
adc
sbb
jno
fldenv
lea
jns
adc
fcom
sub
addr16
xchg
lock
xor
mov
dec
or
fild
pop
push
cmp
push
mov
popf
add
mov
dec
hlt
retf
jns
loopne
mov
inc
in
in
jge
not
mov
retf
push
inc
aad
ins
add
inc
das
mov
xchg
pushf
retf
sbb
jmp
ins
(bad)
aad
(bad)
mov
loope
adc
add
shl
into
(bad)
out
test
or
or
push
ror
adc
mov
in
fld
and
cs
mov
cmp
mov
ja
out
pop
pop
loop
and
ret
loope
fwait
push
loopne
out
or
dec
xchg
and
add
sbb
adc
jle
test
ins
inc
retf
je
xor
pop
fs
shl
jmp
clc
addr16
dec
and
pop
repnz
ror
fadd
pusha
arpl
ins
stos
xlat
fidivr
or
scas
add
out
ret
mov
rcl
inc
cmps
bound
(bad)
cli
repnz
jae
sbb
arpl
cmp
stos
adc
test
inc
xor
data16
cli
lock
pop
add
aam
jg
pop
xchg
addr16
(bad)
lahf
jle
fwait
dec
je
ja
inc
add
bound
ins
add
jge
shr
pop
mov
xor
ins
jecxz
jmp
pop
int
(bad)
pop
jge
daa
push
or
add
dec
add
imul
xchg
outs
ds
pop
push
or
int
or
pushf
dec
outs
xor
cdq
cmp
lds
and
adc
(bad)
push
jmp
std
fcomip
lods
mov
dec
frstor
or
shl
and
imul
or
icebp
jae
jmp
pop
sub
mov
inc
stc
test
iret
loope
fist
cli
lds
dec
mov
mov
push
scas
ror
jl
shr
loope
lds
adc
inc
pushf
cmp
mov
mov
mov
dec
out
or
xchg
push
mov
pop
cmps
mul
iret
add
add
fwait
cmp
inc
jns
ret
add
fild
adc
ss
xor
gs
fbstp
int
outs
clc
push
(bad)
push
sti
cmps
jecxz
add
and
sub
inc
idiv
pop
xchg
push
ret
add
call
std
bound
jg
nop
mov
dec
arpl
jge
les
jmp
clc
clc
icebp
sbb
dec
or
stos
jno
(bad)
xor
out
or
stos
sub
adc
inc
(bad)
shl
push
outs
test
inc
fsub
cld
sub
xchg
or
sti
pop
loope
loop
call
add
inc
add
movs
mov
enter
xchg
clc
retf
imul
mov
adc
leave
inc
mov
out
inc
(bad)
jg
je
or
call
or
add
inc
xor
inc
out
in
arpl
(bad)
in
test
adc
ret
loopne
test
mov
ror
cmp
fist
sbb
pop
inc
loope
xabort
cld
shl
sbb
loopne
out
in
(bad)
(bad)
mov
cld
mov
adc
jle
scas
mov
or
in
dec
xlat
shr
gs
mov
jle
xchg
push
and
outs
adc
jecxz
xchg
add
add
ret
and
mov
cmp
adc
lods
shl
(bad)
retf
xlat
bound
adc
or
or
(bad)
xchg
lds
mov
retf
adc
sahf
sbb
jg
xlat
movs
and
and
cwde
inc
sub
pop
jecxz
out
in
in
jns
cmp
test
or
aad
outs
popa
sar
pop
sbb
xor
test
lock
stos
cdq
mov
mov
loopne
in
in
jg
xor
or
std
(bad)
push
mul
bound
shl
jb
stos
sbb
sub
mov
add
(bad)
popa
fs
sahf
stos
outs
and
(bad)
sti
adc
cdq
jecxz
in
inc
xor
call
int3
jmp
or
imul
or
mov
(bad)
rcl
mov
mov
inc
mov
fadd
mov
mov
ja
scas
ret
lods
or
icebp
es
xor
dec
or
div
ret
das
jmp
sbb
fs
mov
jmp
cmp
fild
xchg
or
popa
retf
pop
sbb
dec
clc
push
and
in
or
jno
pop
ss
xchg
adc
call
hlt
sub
hlt
outs
mov
int
jae
xchg
add
fmul
add
sub
and
mov
and
push
repz
mov
(bad)
test
lock
call
sub
jg
xor
or
jo
and
jnp
cmp
mov
sbb
cdq
sbb
add
call
and
out
adc
and
aaa
mov
repnz
or
sbb
inc
push
(bad)
movs
and
mov
div
add
xlat
(bad)
(bad)
jmp
push
push
in
dec
jle
fsubrp
xor
cmp
pop
jbe
jns
fld
mov
xchg
or
add
pop
popf
pop
adc
fcmovb
inc
add
dec
inc
enter
test
or
add
fucomp
xchg
jbe
xchg
mov
xor
add
jo
or
out
out
loop
in
jle
jp
and
mov
(bad)
adc
fsubr
dec
xlat
or
or
sbb
push
inc
or
idiv
inc
cmp
or
fucomp
aam
dec
out
std
(bad)
lahf
and
leave
pop
(bad)
out
pop
mov
adc
clc
inc
call
sbb
xchg
call
call
jle
pop
lods
call
cmp
and
xchg
mov
mov
add
fstp
je
ret
cld
inc
aam
jns
hlt
clc
inc
mov
adc
push
add
or
int3
cmps
repnz
(bad)
sub
iret
out
mov
add
lods
std
fdivr
xchg
lea
daa
addr16
add
cli
push
in
fcom
adc
icebp
(bad)
fcomi
adc
daa
jnp
into
cmc
outs
(bad)
or
cld
cmps
loop
fnstcw
test
mov
aas
or
jmp
bound
popa
xchg
aad
imul
pop
pop
ds
xor
sbb
add
mov
arpl
ror
jnp
dec
stc
adc
frstor
sar
mov
pop
cmp
adc
loop
stc
arpl
sub
repz
or
ins
enter
fisubr
(bad)
inc
sub
int3
or
ret
iret
arpl
movs
or
xchg
iret
loopne
call
pop
ins
xchg
add
mov
in
repnz
pop
or
xor
fdiv
add
rcr
pop
in
xor
aam
or
ins
scas
lods
cmps
add
or
je
fwait
and
xchg
jle
or
sub
dec
in
loope
fdiv
aam
cmp
and
push
ins
loop
dec
fiadd
add
sub
into
repnz
cmc
fwait
jmp
push
gs
test
xlat
pop
push
and
sub
mov
lods
or
and
mov
push
in
lock
xor
cmp
data16
mov
fisttp
mov
fisttp
adc
adc
rcl
jae
or
add
or
lock
arpl
xor
mov
sub
cld
add
xchg
das
out
dec
(bad)
jmp
jp
xor
push
(bad)
pop
or
ficom
int3
push
ret
sbb
jnp
(bad)
cmc
jp
and
bound
test
dec
or
push
jb
fbstp
lahf
and
xor
inc
xor
xor
xor
(bad)
cli
cwde
jmp
cmc
pop
div
or
push
arpl
pop
push
aam
pop
sbb
test
sbb
shr
retf
pusha
(bad)
(bad)
adc
out
cld
mov
cmp
xchg
repnz
xchg
imul
mov
mov
in
in
ret
stos
neg
xlat
xchg
push
sub
adc
inc
sub
add
pop
fs
sbb
or
hlt
enter
push
in
dec
les
test
inc
(bad)
pushf
mov
idiv
inc
les
and
inc
dec
popa
ins
ficomp
mov
push
fist
ins
idiv
out
icebp
pop
mov
imul
sbb
in
sub
pop
xor
bound
or
test
pop
fimul
push
add
sbb
sbb
sbb
sub
dec
inc
or
lods
ins
enter
aaa
fcomip
lock
call
sysexit
mov
jge
test
arpl
and
imul
or
or
sar
jbe
jne
inc
inc
frstor
clc
es
and
or
(bad)
jo
xchg
frstor
jp
push
sar
lods
dec
xor
out
fidiv
xlat
xchg
aas
(bad)
dec
sti
mov
(bad)
adc
or
pop
frstor
jne
sar
pusha
dec
mov
xchg
sub
loop
hlt
dec
sbb
xlat
adc
sub
lea
std
push
or
mov
jo
ja
ret
fs
mov
dec
xchg
cmp
jne
sbb
fld
std
add
add
sbb
or
enter
mov
adc
rol
aad
jno
cmc
or
mov
lahf
inc
into
inc
out
pop
jmp
xor
loope
add
ins
push
bound
sub
and
jge
and
jmp
popf
pop
jbe
xchg
pop
fisubr
sar
(bad)
jno
sahf
shr
sbb
sbb
aam
pushf
cld
sub
scas
fsubrp
scas
shl
enter
xchg
fisub
sti
cli
and
jae
retf
and
loop
fld
bound
pushf
sbb
in
sti
adc
leave
mov
xchg
cmps
ficom
jo
fldcw
retf
pop
movs
add
or
and
stc
xor
jmp
add
or
in
pop
jecxz
std
jae
fnsave
je
rcr
cs
jl
js
pop
sbb
add
add
mov
(bad)
div
or
mov
cmps
loop
add
and
mov
push
(bad)
and
(bad)
cli
int
xor
aam
outs
xchg
rol
xchg
fisttp
enter
push
neg
fsubr
inc
inc
inc
fwait
sub
or
rol
xchg
or
lock
and
rep
mov
add
arpl
sbb
adc
jno
loop
cmp
(bad)
jnp
sub
mov
xchg
adc
repnz
or
call
mov
dec
jb
shl
jnp
sub
daa
repnz
jg
call
fadd
bound
gs
add
ss
mov
jmp
(bad)
(bad)
and
call
sti
shl
cli
sbb
iret
dec
fwait
pop
jbe
je
shl
das
sbb
adc
pop
retf
mov
or
test
cmps
and
shl
hlt
sti
ret
dec
imul
adc
xchg
nop
inc
jno
in
out
loopne
in
imul
rol
or
cld
nop
adc
retf
or
adc
sub
cdq
xor
loope
bound
iret
dec
test
fisttp
js
je
scas
loopne
daa
mov
add
mov
jbe
shl
ins
sahf
jle
or
test
mov
xor
icebp
or
les
int3
inc
jne
les
adc
sub
in
jmp
or
pop
fwait
jno
shr
stc
stos
mov
mov
movs
mov
and
pop
push
arpl
gs
and
adc
test
adc
xchg
call
jmp
sbb
mov
bnd
sub
mov
cmp
sub
cmc
(bad)
in
jmp
inc
xor
fwait
add
cwde
or
sti
sahf
gs
or
xlat
or
add
retf
leave
cmc
ja
les
add
scas
or
pop
push
sbb
sbb
fstp
and
ss
in
or
in
loope
loopne
popa
xchg
jp
and
jle
or
or
dec
jl
or
cwde
fsubr
xor
cmp
sub
in
fild
and
sahf
add
add
adc
and
and
aad
popa
dec
mov
test
sbb
xchg
or
icebp
or
or
(bad)
ins
inc
int
inc
aaa
fstp
outs
outs
(bad)
push
imul
popa
jl
sti
popf
push
or
jle
xlat
mov
repnz
xor
jnp
int
adc
add
push
cmp
mov
pop
loopne
or
sti
and
dec
data16
xlat
xchg
rcr
nop
mov
add
or
push
(bad)
lahf
mov
(bad)
loop
aaa
ja
jmp
add
mov
cld
hlt
lock
cmc
dec
xchg
mov
gs
dec
jp
data16
push
idiv
cli
clc
in
jecxz
or
loopne
and
fs
pop
push
add
and
push
out
psrld
outs
adc
adc
mov
push
xchg
neg
loopne
in
jecxz
scas
mov
sbb
je
push
ds
in
jbe
pop
shl
shl
pop
pop
push
and
xchg
dec
retf
or
mov
jmp
jg
fsubr
test
pop
add
out
add
adc
scas
xchg
mov
in
and
xchg
vminps
push
stc
sbb
sysenter
and
mov
int3
xor
aam
push
jp
jae
jecxz
or
or
scas
pop
das
fsub
mov
gs
neg
lock
aas
clc
scas
jecxz
jno
pop
xor
push
xchg
dec
jnp
cmp
retf
loop
cs
push
not
or
pop
imul
and
movs
sub
jae
lds
sub
add
inc
cdq
sub
je
das
js
mov
xor
scas
or
cli
int3
(bad)
jmp
xchg
mov
rcr
daa
and
and
or
seto
jp
cmp
(bad)
jae
leave
push
add
jns
adc
leave
adc
or
add
add
fbstp
popf
xchg
dec
xchg
int3
or
mov
shl
xchg
jnp
daa
int3
data16
cmp
cld
jle
and
gs
(bad)
xor
push
and
aam
sbb
fucomi
not
cmps
pushf
(bad)
fild
xlat
pop
jb
enter
fcom
cmp
inc
adc
in
sbb
hlt
fsub
repnz
repz
adc
xchg
add
(bad)
pop
(bad)
scas
sub
or
jbe
ror
or
push
jmp
hlt
in
and
rol
xchg
pop
push
cwde
cli
and
aam
retf
or
dec
lods
outs
aad
mov
or
bound
and
sahf
adc
icebp
inc
xchg
mov
adc
fisub
mov
xlat
repnz
jg
add
fistp
stos
ret
sub
mov
or
icebp
fst
push
xlat
push
pop
pop
mov
dec
and
pop
xor
or
scas
xor
fdiv
cdq
and
cld
aaa
ret
xor
mov
pushf
sbb
cmp
retf
mov
push
imul
lods
gs
(bad)
xchg
jb
inc
mov
sbb
mov
fimul
mov
cmp
jmp
stos
or
daa
xchg
popf
xchg
or
mov
and
pop
and
jp
nop
icebp
jmp
cmp
adc
sub
pushf
cli
test
dec
inc
pop
es
gs
and
inc
(bad)
add
fnstcw
jp
pop
lods
or
nop
lock
jmp
cs
test
push
fisttp
mov
or
or
or
push
add
sub
iret
add
push
fwait
xor
inc
out
and
cdq
into
jno
in
xchg
push
or
in
ds
call
mov
into
loope
sbb
cwde
and
adc
test
adc
sub
ins
fsubr
(bad)
adc
stc
or
fistp
(bad)
test
lods
push
fidivr
in
xor
xchg
or
sbb
or
inc
xchg
jne
nop
rol
xor
(bad)
mov
cld
jo
push
pop
into
rol
mov
add
mov
mov
xchg
xor
xchg
push
lods
xchg
cmp
cmc
adc
popa
xchg
out
adc
adc
or
sti
fistp
(bad)
mov
mov
sub
mul
ds
sahf
cld
aam
fdiv
fs
jmp
pop
mov
out
dec
test
call
or
(bad)
repnz
add
dec
fstp
xchg
out
aam
hlt
cmp
sbb
or
mov
gs
aam
push
idiv
mov
std
aad
xchg
sub
call
mov
cld
or
es
call
outs
lea
shr
sub
(bad)
pop
hlt
xchg
ja
sbb
(bad)
inc
mov
cmp
push
pushf
popa
adc
or
repnz
inc
sub
adc
dec
jl
or
or
or
pushf
int
les
imul
ret
cwde
jge
pop
test
arpl
xor
add
push
jecxz
test
or
push
or
pop
push
cmp
pop
xchg
icebp
pop
ins
push
fidiv
add
lock
push
lods
adc
xor
out
pop
fchs
jnp
cmc
in
ins
int
and
mov
daa
icebp
jae
sbb
xchg
ffree
outs
neg
push
call
push
xor
push
xor
or
repnz
test
push
or
add
push
fidivr
inc
dec
rcr
inc
call
mov
adc
arpl
cs
ret
leave
and
call
jns
jp
jno
jo
outs
out
jnp
inc
movs
in
xchg
add
add
push
lock
lock
arpl
or
bound
rcr
ins
fcmovnbe
cs
or
pop
inc
add
(bad)
popf
dec
jge
fwait
inc
sub
pop
clc
mov
(bad)
pop
dec
adc
mov
repnz
cmp
lock
xor
add
div
inc
inc
cdq
ins
mov
mov
or
(bad)
or
aad
imul
stos
xchg
ins
add
mov
or
fsub
or
mov
cwde
fsub
cmc
add
add
(bad)
pop
hlt
lahf
push
inc
mov
xor
jge
pcmpeqd
pop
xor
xor
or
cmc
mov
jne
jecxz
gs
xor
lock
jecxz
cli
fcmove
call
cld
addr16
and
add
mov
int
pop
mov
or
adc
fidiv
popf
jle
jg
adc
cmc
(bad)
mov
mov
mov
jecxz
fdiv
xchg
aad
sub
or
xchg
mov
mov
add
sbb
or
iret
push
imul
imul
and
imul
inc
fs
fst
pop
push
xchg
sahf
xor
(bad)
out
call
jnp
(bad)
dec
imul
mov
sub
cdq
or
neg
icebp
test
pop
pusha
pop
fucomp
data16
int
and
or
push
cmp
adc
or
(bad)
(bad)
dec
cld
in
add
adc
fs
cld
aaa
mov
icebp
(bad)
neg
repz
aam
add
retf
or
sahf
dec
in
retf
xor
xor
add
xchg
xor
xor
xor
sub
arpl
rcl
sub
inc
std
pop
fisttp
jmp
repz
(bad)
in
mov
mov
repnz
fcom
xchg
sub
or
push
mov
cmc
fist
or
cmc
xor
shr
retf
fist
cli
scas
xchg
rol
and
daa
into
cdq
push
dec
ror
das
(bad)
sub
or
add
sub
pop
sar
cwde
imul
mov
imul
arpl
mov
loope
xor
and
and
pop
imul
sbb
test
jo
add
sub
mov
ret
ins
push
pushf
cmp
ror
adc
push
cli
dec
add
retf
stos
sub
inc
pop
add
jmp
push
or
popa
xchg
rcl
adc
adc
mov
inc
xchg
mov
mov
cmc
push
sub
hlt
lock
mov
int3
ror
adc
dec
mov
scas
inc
mov
jge
inc
in
(bad)
sahf
pushf
addr16
sahf
or
sbb
into
cmp
mov
cli
dec
jl
mul
and
pusha
or
dec
xchg
or
lock
loope
clc
mov
into
es
cwde
scas
and
ins
hlt
cmp
sbb
cwde
test
lods
icebp
repnz
dec
in
mov
je
ins
arpl
repz
pop
push
jns
adc
cmp
dec
push
pusha
or
mov
(bad)
lods
adc
jge
push
add
jns
js
jge
je
ja
mov
popa
cmp
shr
push
out
adc
cld
mov
repz
out
adc
cmp
xlat
xor
ret
pusha
call
dec
xor
xlat
xchg
push
or
gs
fdiv
and
mov
retf
xchg
jl
or
or
aam
and
in
fisubr
adc
aad
cwde
or
repnz
and
cdq
push
hlt
mov
xor
(bad)
in
jp
cmps
push
scas
out
push
jl
out
hlt
cmp
cdq
mov
sub
retf
daa
add
mov
leave
fistp
repnz
dec
pusha
in
enter
sub
xchg
out
lahf
or
loopne
adc
mov
ret
push
push
mov
addr16
daa
out
sbb
stos
mov
imul
sub
repnz
push
push
push
or
xor
push
jg
jbe
loop
imul
sbb
mov
mov
(bad)
pop
cmc
fwait
mov
xor
sbb
in
out
lock
test
push
cmp
or
sysenter
push
and
ret
js
scas
jno
jae
dec
push
in
sbb
mov
pusha
fsub
mov
mov
cld
sbb
cmp
xor
div
jl
lods
inc
adc
lods
adc
gs
push
push
(bad)
mov
popf
mov
icebp
imul
sbb
inc
lock
daa
fcomp
xchg
or
mov
js
jge
je
jne
or
repz
cmc
(bad)
lock
lea
xlat
pop
daa
punpckldq
sbb
cmps
push
lahf
mov
pop
daa
jecxz
sbb
popaw
ficomp
pusha
stos
pop
nop
popf
lahf
(bad)
repnz
js
xchg
test
jmp
ins
and
outs
repnz
dec
inc
ss
or
ss
xor
add
and
sbb
dec
adc
nop
leave
cwde
test
jo
rcr
sbb
neg
icebp
sbb
test
ret
jp
add
das
fwait
(bad)
repnz
push
popf
adc
inc
arpl
call
or
cli
pmaddwd
ins
adc
js
repnz
hlt
pop
or
push
ds
pop
cld
xor
push
mov
sar
loop
or
adc
cmp
xor
sbb
mov
js
lock
push
mov
adc
enter
push
(bad)
ins
repz
mov
adc
in
repnz
imul
ss
jb
or
neg
repz
inc
or
fnstenv
fs
sub
add
ss
jecxz
adc
or
or
hlt
or
and
and
test
or
xor
movs
test
mov
loop
icebp
pushf
shl
hlt
call
in
xor
or
sbb
mov
or
jecxz
add
ins
cs
or
mov
test
pop
cdq
ret
in
ds
and
jg
cmp
inc
in
shl
add
dec
imul
or
scas
(bad)
mov
mov
xlat
jge
inc
xor
mov
daa
dec
mov
fild
and
out
loope
pop
mov
push
pop
mov
outs
cmp
fs
mov
ds
sti
dec
mov
and
fwait
cmp
mov
iret
nop
cmps
lahf
cmp
cmp
pop
mul
mov
mov
dec
pop
xchg
dec
cs
push
and
fwait
test
das
inc
les
addr16
fcomp
fsubp
stos
stos
fldcw
and
pop
jp
test
icebp
daa
push
push
fist
mov
icebp
sub
adc
mov
inc
imul
call
and
pop
inc
in
pop
retf
cmp
jl
shr
pusha
jle
cwde
in
mov
nop
fsub
dec
xchg
rcr
push
rcr
fidivr
cmc
add
and
mov
mov
xor
push
not
(bad)
jl
and
cmp
popa
mov
push
into
jae
push
mov
xlat
pop
(bad)
les
ret
xor
dec
loop
imul
jle
les
retf
xchg
dec
int3
xor
adc
cmp
mov
xor
sub
add
pop
push
sub
push
push
add
(bad)
mov
mov
stc
les
arpl
mov
fwait
popf
jmp
inc
adc
daa
mov
fdiv
rcr
sub
push
inc
loopne
fsubr
cmps
pop
xor
call
cs
mov
adc
cmp
nop
sub
xor
fcom
jl
lea
mov
fcom
(bad)
jb
add
cmp
or
sahf
sub
jmp
mov
imul
mov
jle
lds
xchg
mov
adc
cwde
and
jle
cdq
sbb
push
dec
das
and
xor
xchg
in
sub
push
test
imul
shl
inc
push
sbb
lock
mov
das
jnp
jl
pop
lock
stc
cmp
repnz
pop
cmc
ret
(bad)
cmps
pop
xor
dec
mov
mov
icebp
inc
inc
bound
or
sub
or
push
jne
xchg
rep
cdq
into
push
and
add
push
pop
test
jl
jno
outs
sbb
lahf
cmp
pop
fist
daa
enter
loope
sbb
or
mov
call
mov
jnp
sbb
ins
xchg
test
cmovnp
sub
je
sbb
iret
movs
cmps
shr
cmp
jo
call
add
repz
(bad)
out
(bad)
jmp
cmp
gs
mov
ficomp
sbb
or
(bad)
cli
dec
and
fdivrp
jmp
xchg
pop
pop
sahf
daa
fidivr
jg
inc
lahf
cmp
rcl
push
cdq
pop
into
mov
in
cmp
pop
sub
aaa
or
xor
int3
mov
mov
shl
icebp
mov
aaa
xchg
loope
jmp
outs
lods
leave
push
adc
dec
mov
mov
(bad)
iret
pminub
cmc
test
push
retf
adc
xchg
out
ins
ds
or
and
shl
sub
push
inc
lods
pop
ror
outs
push
xchg
test
(bad)
icebp
cmc
sub
cwde
cmp
rcr
add
das
ja
jb
mov
shl
xor
idiv
and
xchg
popa
push
fwait
ins
aad
loop
mov
scas
sti
pusha
jle
jg
imul
shr
jmp
rcl
xchg
sub
jbe
test
(bad)
je
div
ja
mov
sbb
popa
dec
jmp
and
jmp
dec
iret
jne
fldenv
or
out
lods
pop
xor
adc
mov
stc
lahf
jns
ret
repz
lock
lods
cli
rcr
mov
mov
popf
jo
test
dec
add
jno
sbb
cwde
lock
addr16
cwde
pop
mov
add
cmp
gs
fild
cwde
push
mov
ret
add
sub
dec
cli
ins
lods
or
hlt
das
or
jbe
add
cmp
mov
jl
inc
adc
push
dec
stos
cld
add
hlt
aam
add
adc
test
ret
jns
add
fs
xor
and
(bad)
and
mov
mov
cdq
mov
dec
clc
jle
cmp
(bad)
or
cli
or
sub
cmp
cld
out
sub
xchg
jge
pop
into
pusha
dec
stc
enter
jnp
inc
dec
gs
inc
sti
ds
ret
test
adc
iret
push
and
inc
cmp
arpl
dec
jecxz
adc
xor
aaa
je
fadd
xor
sbb
inc
in
jp
fwait
cmp
or
fidivr
pop
bound
ficomp
and
shr
test
mov
push
xchg
mov
nop
sbb
icebp
cmp
hlt
in
and
add
into
lds
int3
xor
cmp
inc
inc
cmp
xchg
dec
xchg
imul
or
loopne
or
data16
jns
js
jge
jl
ins
movs
std
popf
or
popa
aam
cmc
adc
adc
and
inc
stc
daa
addr16
and
icebp
cld
ins
mov
push
push
std
iret
outs
into
mov
and
xor
jmp
outs
rcr
dec
inc
xor
movs
jno
pushf
jns
mov
adc
add
ins
movaps
xchg
xchg
pop
outs
movs
icebp
test
inc
ja
scas
movs
xlat
cmp
cmp
outs
xor
pop
cmp
cs
mov
dec
mov
jl
imul
sbb
push
mov
dec
rcl
push
das
inc
out
mov
icebp
nop
pop
pop
jle
retf
push
sub
inc
inc
loopne
pop
je
(bad)
mov
mov
add
(bad)
aam
daa
xor
(bad)
pop
or
and
jp
in
adc
cdq
or
popf
cmp
das
push
xor
or
xchg
shl
fwait
ret
out
dec
xor
aam
repz
je
vsubps
mov
xchg
dec
sub
hlt
fmulp
arpl
fs
dec
xchg
ret
xor
cmps
jge
inc
fadd
fbstp
fwait
sbb
cmc
sbb
inc
sar
ror
dec
mov
fisttp
inc
adc
push
lds
xor
pushf
and
mov
push
and
or
cmp
and
hlt
iret
ja
mov
in
mov
pop
pop
out
mov
cmp
imul
out
loop
push
xchg
sbb
xchg
jmp
outs
leave
sahf
pop
mov
xchg
aaa
cs
(bad)
cwde
sbb
dec
pop
cli
and
dec
and
data16
mov
int
aas
inc
into
dec
pop
adc
adc
ror
fstp
push
not
int3
outs
sahf
ja
mov
fldcw
inc
js
add
ror
xor
sbb
jp
enter
out
mov
lock
push
sub
mov
mov
test
xchg
jmp
gs
addr16
loope
int
cmp
cld
(bad)
fild
xchg
jecxz
xchg
cmp
inc
arpl
xchg
dec
or
les
mov
sbb
adc
in
and
mov
js
cmp
jne
in
cs
jg
adc
or
lock
jno
push
pop
push
pop
das
fiadd
sahf
punpcklwd
xor
sub
in
cmp
inc
(bad)
icebp
jmp
dec
adc
sbb
lahf
xor
ja
dec
pusha
inc
in
or
jl
jge
inc
and
sub
in
sbb
repnz
and
fdiv
xchg
xchg
call
inc
jge
pop
in
cmp
rcr
xchg
or
jb
fadd
jne
push
std
enter
test
mov
sub
jo
jo
jb
sub
push
dec
mov
std
push
pop
clc
pushf
shl
sbb
lods
pop
bnd
ss
xchg
imul
movs
(bad)
and
jg
inc
dec
out
lahf
xchg
push
mov
pop
add
(bad)
imul
cmp
cld
inc
leave
dec
(bad)
lock
jge
xchg
cmp
xchg
mov
stos
aaa
in
jl
out
cmp
xor
gs
sub
in
pop
fcomi
out
jp
inc
stos
jae
inc
test
popa
xor
xor
lock
call
(bad)
or
or
mov
xchg
sub
cs
in
sti
mov
(bad)
paddq
cmp
call
test
sbb
(bad)
call
nop
aad
and
(bad)
mov
jg
ret
mov
xor
adc
mov
push
sub
xor
push
data16
sti
add
push
ins
or
cmp
test
shr
je
sbb
jmp
and
cdq
fwait
(bad)
mov
inc
push
fcmovu
sub
fcomp
mov
and
stos
dec
xchg
add
sbb
jmp
dec
setle
and
stc
cmp
push
mov
outs
jecxz
xchg
jno
sahf
in
sub
dec
mov
int3
xor
cmp
mov
add
je
(bad)
aas
cmp
clc
es
in
adc
aad
xor
adc
pusha
mov
mov
push
push
ins
imul
call
inc
mov
sbb
sbb
lods
outs
sti
xchg
inc
mov
call
jo
jno
call
jno
push
stc
fstp
xchg
cmp
pushf
inc
mov
lea
mov
or
mov
js
push
call
mov
hlt
and
adc
and
fst
in
sahf
jmp
in
in
ins
adc
xchg
xor
outs
cs
sbb
push
dec
cld
movs
mov
push
scas
add
je
xor
mov
push
repz
cdq
fs
pop
xlat
out
call
retf
cmp
xor
and
dec
sub
lods
sub
and
mov
xchg
sub
push
jmp
scas
pop
xchg
pop
and
sub
push
mov
pushf
inc
inc
into
inc
shl
mov
ds
aas
fstp
stos
shr
icebp
in
hlt
nop
sub
xchg
inc
jg
imul
clc
popf
xlat
sahf
icebp
ror
inc
movs
pop
jae
or
pop
dec
mov
mov
push
and
dec
sahf
repz
call
sub
push
or
(bad)
cmp
or
loop
mov
fidiv
mov
stos
push
or
dec
jmp
dec
mov
cdq
dec
pop
mov
and
or
mov
sub
aas
sub
push
gs
out
jl
pop
loop
mov
sub
jbe
jmp
xchg
pop
es
popa
push
call
clc
dec
xchg
test
cmc
ins
xchg
sbb
or
mov
sub
aam
xor
pop
cwde
sub
imul
call
xor
inc
jle
rol
push
adc
sbb
push
mov
pop
cmp
adc
das
push
mov
fcomp
cdq
xchg
lods
mov
xor
cmp
aas
sbb
dec
add
mov
ror
(bad)
test
pop
dec
add
pop
cmp
sub
pop
adc
jecxz
and
test
das
rcr
cmp
test
jae
pop
xchg
je
test
adc
xor
pop
addr16
sub
sti
mov
std
(bad)
nop
jno
sub
in
dec
push
xchg
dec
pop
sub
mov
pop
stos
mov
sub
jnp
test
fdiv
pop
xor
pop
pusha
test
icebp
in
push
sar
stc
mov
lahf
cmc
loope
test
cs
add
jmp
add
dec
retf
and
nop
sub
hlt
retf
sub
jno
sub
int
add
sti
inc
pop
mov
fsub
stc
or
sub
mov
cmp
test
mov
out
mov
je
add
imul
sub
outs
test
lea
push
nop
leave
sbb
pop
(bad)
sub
xlat
sub
jge
inc
jno
push
push
mov
sahf
scas
and
js
xchg
fdivr
aas
jge
or
mov
jmp
js
sub
push
lds
nop
or
(bad)
xchg
ins
push
mov
test
mov
sti
jne
xchg
movs
sbb
retf
jns
es
add
inc
push
dec
popf
fldenv
adc
push
add
mov
mov
xchg
mov
dec
dec
xchg
sti
push
pop
call
inc
xor
push
dec
cld
(bad)
ja
xor
push
push
and
clc
lahf
neg
jp
aas
scas
dec
lock
gs
in
dec
add
cwde
inc
inc
das
and
mov
lock
repnz
dec
outs
sub
dec
pop
das
xchg
aad
aad
dec
retf
outs
sub
or
fucomip
fsubr
jae
test
add
in
mov
nop
aam
and
pop
(bad)
daa
iret
daa
sub
cli
mov
lods
aas
or
push
xlat
dec
mov
ficomp
inc
sub
aas
dec
sub
dec
or
test
aam
inc
imul
mov
push
loop
xor
das
cmp
dec
or
cmp
in
scas
xor
in
jae
cdq
js
cwde
inc
arpl
or
(bad)
pop
xchg
sub
dec
or
or
retf
enter
in
outs
sub
outs
pop
jmp
pop
add
pop
in
lds
add
jne
sub
and
adc
stos
clc
cmp
call
fldcw
cmps
xchg
or
adc
xor
stos
jmp
addr16
mov
das
mov
je
pop
loopne
aad
into
loopne
fnstcw
adc
inc
xchg
dec
call
repz
lock
mov
inc
jns
imul
mov
cmp
xchg
xchg
cmps
pop
or
pop
or
xchg
sahf
or
cmp
xchg
add
adc
cmp
in
mov
lds
mov
adc
(bad)
stc
fidivr
cwde
into
mov
cs
adc
xchg
fist
lea
fisttp
shl
xor
cmp
mov
push
add
imul
inc
mov
sahf
and
push
cld
cmp
dec
pop
or
add
jmp
dec
loop
nop
das
cli
clc
push
xchg
pop
out
loop
in
jmp
mov
jl
jmp
sahf
cld
js
imul
mov
movs
inc
out
cld
ins
aaa
adc
aam
ins
ds
jae
arpl
sub
stc
std
pop
call
cmp
inc
push
dec
js
mov
dec
cmp
popa
pop
xor
push
loopne
stc
shr
or
aam
xchg
pop
mov
inc
std
xlat
sub
fcmovnbe
push
push
dec
out
shl
mov
fdiv
mov
mov
lock
push
add
inc
or
retf
dec
add
pop
push
popf
push
(bad)
stos
sub
and
jmp
shl
inc
(bad)
repz
jmp
dec
inc
imul
clc
jnp
pop
out
imul
clc
ror
ret
inc
daa
cs
cs
iret
jno
clc
adc
cmps
push
dec
cmp
sub
(bad)
repnz
add
lock
hlt
inc
jnp
fs
outs
adc
push
addr16
jnp
imul
cld
or
and
dec
call
hlt
add
std
xchg
lds
out
mov
in
fimul
mov
sahf
fld
jmp
sub
xor
enter
fimul
pusha
pop
loope
mov
mov
add
popa
nop
shr
ins
rol
psllw
and
enter
retf
mov
pop
outs
pop
movs
and
test
and
movs
ret
mov
jg
pusha
push
fisttp
and
add
dec
icebp
ja
xchg
xchg
sbb
dec
std
in
clc
add
jl
inc
jg
cmp
and
cdq
xor
mov
inc
cli
jbe
cmps
xchg
sti
cmc
aaa
fiadd
fistp
xchg
imul
add
cmp
jnp
mov
add
ja
mov
pminsw
cmps
jb
xchg
mov
test
sub
(bad)
(bad)
(bad)
retf
and
add
dec
dec
xchg
arpl
sbb
retf
ja
lock
jns
(bad)
aad
pop
mov
rcl
jnp
lahf
mov
mov
jb
jo
(bad)
aam
push
cmps
cmp
shl
std
pop
jbe
mov
fidiv
push
jae
ds
jno
sub
pcmpeqd
(bad)
shl
(bad)
daa
lods
mov
fwait
or
mov
aam
jno
dec
xor
pop
or
pop
cmp
push
push
and
adc
call
call
(bad)
or
or
cmp
sahf
inc
xchg
sti
cwde
push
(bad)
sbb
or
ret
stos
adc
dec
loopne
sbb
push
or
outs
adc
jg
ret
scas
xchg
scas
lds
jmp
ss
push
or
mov
mov
fnstsw
inc
cdq
inc
cmp
mov
inc
xchg
(bad)
call
push
dec
mov
retf
fld
fild
jge
lods
and
mov
call
int3
jecxz
or
push
or
mov
and
jb
dec
push
enter
icebp
dec
push
addr16
inc
loop
test
xor
(bad)
pop
or
mov
(bad)
cdq
dec
test
call
out
push
mov
add
push
cmp
cmps
inc
aaa
call
and
jl
or
mov
pop
ins
fstp
outs
test
xor
mov
mov
inc
and
mov
stos
test
mov
mov
dec
loop
and
xchg
imul
cdq
pop
pusha
inc
push
xchg
mov
mov
pusha
cwde
movs
retf
ret
dec
fs
mov
or
mov
(bad)
sbb
fst
and
pop
test
lds
test
jge
nop
jae
and
shl
pop
xor
aaa
and
mov
mov
xor
test
mov
mov
fisub
xor
sahf
(bad)
push
jo
inc
(bad)
jmp
sti
inc
nop
sbb
jmp
jge
imul
mov
xor
je
lahf
js
fdiv
fst
and
and
pop
jae
bnd
or
mov
or
xor
cwde
pop
push
popf
daa
movs
repnz
sahf
sbb
test
mov
pop
out
mov
inc
test
push
pushf
or
xchg
popa
jmp
push
bound
bound
add
or
lods
rcl
xor
xchg
js
les
xchg
pop
pop
popf
retf
mov
inc
xchg
fst
cdq
jg
xor
sub
pop
and
(bad)
pop
dec
or
jae
dec
stos
(bad)
sub
jbe
push
add
mov
mov
lock
inc
pop
inc
mov
xchg
les
popf
imul
push
nop
leave
mov
stos
cld
dec
dec
mov
inc
cdq
inc
arpl
outs
loop
jl
inc
mov
je
shl
xchg
push
js
inc
xchg
pop
das
adc
stos
hlt
mov
add
repnz
mov
jge
mov
pop
cmp
mov
nop
sbb
ins
add
mov
test
adc
jmp
pop
cmp
push
xor
xchg
cs
inc
addr16
dec
xchg
out
dec
test
pop
lods
push
jge
mov
call
mov
jmp
inc
scas
in
dec
(bad)
call
push
mov
xchg
dec
or
(bad)
lahf
scas
add
inc
stos
dec
leave
cmp
push
dec
push
mov
xchg
sahf
std
mov
adc
hlt
fimul
jge
mov
outs
push
imul
jmp
fild
adc
ret
cdq
pushf
xchg
arpl
xor
mov
ja
sub
adc
pop
jns
or
xchg
dec
fldenv
jae
xor
out
pop
pop
jmp
je
jbe
or
adc
mov
xor
xchg
xchg
loope
xchg
daa
pop
cmp
test
pushf
mov
aaa
pop
xchg
pop
js
cdq
rol
ja
mov
push
shl
add
jb
jns
jns
gs
adc
pop
jp
icebp
scas
jb
mov
call
test
lock
mov
pusha
scas
jl
push
push
jp
mov
adc
or
je
pop
jbe
jl
or
mov
cmp
vpmacsswd
push
push
arpl
dec
or
mov
cmp
or
frstor
jns
xchg
cdq
rcl
pop
xchg
push
add
push
loop
push
outs
mov
fwait
cli
xchg
inc
popf
out
(bad)
cmps
call
cmc
lods
loope
xchg
or
jo
jns
fwait
or
lods
jl
test
test
push
mov
pop
mov
jbe
mov
or
test
cwde
outs
pushf
push
lea
lea
jg
(bad)
aad
scas
(bad)
call
int3
mov
imul
pop
ret
sub
fist
rcl
rol
repnz
ds
ins
cmp
xchg
test
sub
pop
pop
and
push
adc
dec
fisttp
mov
cmp
(bad)
mov
add
mov
adc
jb
scas
cmp
xor
js
push
jne
aaa
inc
dec
cmps
rcr
mov
les
sbb
pop
popf
aad
xchg
fcom
cmps
jbe
repz
inc
xor
jecxz
and
ins
mov
mov
and
fldcw
mov
sub
jae
xchg
jmp
scas
in
stc
inc
jns
daa
(bad)
jmp
scas
mov
cwde
add
aaa
and
dec
dec
ja
jno
fnstcw
rcr
sub
sbb
mov
xlat
mov
shl
and
mov
add
cmp
imul
jge
retf
jo
dec
(bad)
(bad)
and
(bad)
cmp
outs
jnp
cvttps2pi
inc
jns
push
and
push
inc
xchg
icebp
push
jae
nop
and
mov
fild
jo
cs
push
push
inc
pop
sbb
idiv
and
push
les
gs
cmp
cmp
cmp
sbb
sub
jne
(bad)
ins
(bad)
jmp
nop
and
or
xor
ret
push
out
pop
pop
daa
sahf
sub
pushf
pop
push
mov
sbb
or
popf
push
ret
or
fimul
xchg
mov
mov
call
jbe
and
pushf
je
in
sbb
mov
xchg
inc
or
fdiv
fsub
mov
xchg
stos
(bad)
call
stc
fistp
enter
mov
sar
movups
rol
adc
sbb
cmp
push
repz
jl
mov
(bad)
scas
es
fimul
fist
jmp
scas
mov
mov
pop
ss
cmps
lods
aam
nop
and
mov
sbb
in
(bad)
xlat
out
inc
xchg
jns
nop
fadd
inc
push
daa
and
dec
es
sbb
add
sahf
test
popa
fdivr
or
clc
std
or
cmp
mov
add
out
cmc
movs
mov
fidiv
jns
fwait
mov
inc
add
adc
push
adc
iret
(bad)
sub
(bad)
sub
cld
jo
cmp
jmp
and
pop
inc
jno
movs
dec
shl
scas
ds
sbb
pop
xor
jg
out
jmp
dec
inc
push
mov
push
xor
and
movs
pop
mov
or
ins
leave
imul
add
jo
dec
(bad)
stos
scas
xor
(bad)
call
movs
add
leave
scas
(bad)
pop
jbe
jne
mov
out
imul
mov
add
sbb
adc
push
popf
inc
repz
pop
mov
int
add
xor
jnp
imul
test
jns
sub
push
mov
in
lahf
push
test
mov
outs
add
pop
std
lock
and
push
jnp
jle
jle
jge
mov
out
pushf
dec
or
push
pop
in
mov
addr16
and
test
jnp
jns
or
jg
jb
xor
pusha
mov
or
outs
mov
fwait
push
sub
pop
jl
adc
gs
jge
push
xlat
stc
inc
dec
call
sar
sub
xchg
dec
or
imul
xchg
push
into
inc
sbb
adc
sti
push
dec
popf
sbb
pusha
add
test
fmul
sahf
out
pop
sti
stos
mov
call
adc
cmps
xchg
fs
mov
jbe
xchg
jle
retf
call
mov
aas
add
bound
push
xor
std
or
jge
or
push
cmp
shl
jb
jmp
mov
dec
sbb
popf
xchg
push
mov
int3
jb
shl
ret
xchg
je
call
sbb
inc
ins
push
xor
call
shl
push
xchg
and
adc
or
scas
js
shl
sar
sub
or
jno
mov
mov
dec
xchg
das
aaa
push
cld
or
cdq
jns
jmp
fwait
jg
jecxz
and
out
pop
dec
mov
shl
jg
outs
nop
dec
and
push
jl
sahf
lds
or
adc
dec
push
dec
lods
or
int3
adc
mov
push
xchg
xor
push
xor
mov
ret
call
dec
xor
cmp
xchg
fnsave
std
mov
dec
and
jg
frstor
(bad)
inc
xchg
pop
cs
cmp
stc
dec
sbb
or
jg
dec
dec
cmp
dec
inc
pop
mov
mov
mov
mov
adc
aaa
outs
sub
adc
(bad)
fiadd
fbld
or
and
xchg
push
adc
mov
retf
jb
(bad)
xchg
jle
repnz
(bad)
adc
fst
lahf
pusha
fild
test
cmp
push
fdivr
test
mov
into
sbb
retf
sqrtps
imul
dec
mov
fdivr
aam
mov
imul
cmp
mov
mov
mov
ret
adc
adc
shl
dec
in
sub
jmp
enter
inc
sar
into
inc
dec
inc
ins
bswap
push
outs
sbb
mov
xlat
sbb
adc
sub
or
xor
retf
inc
lds
jbe
cmp
movaps
push
jo
clc
or
xchg
(bad)
fadd
(bad)
mov
cmp
ins
cmps
or
mov
(bad)
lods
sbb
mov
cmps
frstor
js
aad
ins
inc
push
mov
(bad)
int
jnp
cmp
out
or
jb
scas
(bad)
fisubr
dec
inc
jo
retf
or
jge
leave
fst
test
adc
dec
sbb
cmp
imul
mov
adc
nop
add
cs
fdiv
ror
retf
adc
std
mov
push
mov
jge
std
or
push
sub
ret
push
pop
pushf
cmc
fild
xchg
cmp
xchg
dec
aas
jne
mov
test
mov
int
arpl
adc
fs
imul
cmp
inc
mov
fnstcw
sar
cld
push
jmp
mov
jns
in
dec
xor
(bad)
mov
cdq
ss
adc
in
sbb
in
or
push
sub
ror
fwait
aam
sub
adc
and
punpckldq
repnz
mov
addr16
sub
inc
add
or
or
mov
adc
test
mov
scas
or
or
out
and
fld
jae
movs
mov
(bad)
arpl
jp
repnz
sub
or
cmps
sbb
mov
pusha
(bad)
aas
dec
and
xchg
ror
ds
je
fld1
push
inc
add
add
(bad)
mov
ffree
mov
mov
mov
mov
mov
enter
pop
lock
inc
or
cmp
xor
addr16
or
enter
and
and
pop
pusha
sbb
stos
int
hlt
adc
retf
dec
or
aas
jmp
jne
mov
clc
or
sub
in
and
nop
jb
(bad)
adc
cmps
leave
data16
pop
out
xor
push
and
iret
retf
shufps
push
or
dec
mov
lea
fld
pop
mov
or
mov
inc
add
lods
xchg
int3
or
adc
push
sti
dec
adc
mov
mov
(bad)
and
or
ss
add
cmp
(bad)
and
mov
cmp
pop
sub
jo
movs
push
mov
adc
mov
fstp
jle
mov
lods
push
scas
div
pop
bound
dec
sub
sub
adc
adc
dec
add
js
(bad)
bound
mov
jb
jp
loop
mov
inc
add
fwait
mov
inc
lds
out
push
mov
pop
pop
mov
pop
xchg
jo
adc
in
xchg
dec
jb
and
movs
mov
or
xchg
add
sbb
cmp
ins
stos
xchg
dec
jecxz
into
jnp
or
push
xchg
dec
daa
inc
test
mov
sub
ret
inc
data16
dec
fnsave
cmp
push
or
mov
dec
jl
ins
mov
daa
dec
mov
jnp
cmps
xchg
inc
or
pop
(bad)
dec
push
cli
dec
mov
or
movs
inc
(bad)
push
push
xchg
inc
ret
cdq
sub
sti
mov
movs
mov
popf
add
push
pop
sub
xor
(bad)
dec
or
test
push
pop
xchg
dec
sub
fnstcw
sbb
bound
out
adc
popf
pop
dec
test
je
in
mov
inc
fld
fbld
scas
enter
imul
sub
clc
sub
or
outs
leave
sub
cwde
sbb
xor
inc
push
pop
push
jns
mov
adc
push
xchg
aaa
push
adc
add
scas
cmp
ins
cmps
add
inc
das
push
mov
sbb
xor
sub
pop
sub
pop
mov
movs
enter
in
fadd
pop
and
xlat
mov
fnstcw
popa
and
cmp
jno
cmps
imul
jnp
cmc
mov
pop
ins
ins
mov
mul
sar
xor
or
sahf
mov
test
jecxz
mov
push
add
mov
into
adc
out
pop
pusha
addps
inc
dec
or
xor
push
mov
lock
lods
lods
push
stos
xor
xor
xchg
(bad)
pop
sub
mov
ret
mov
popa
mov
cs
sbb
lods
lods
scas
arpl
mov
call
test
mov
sub
cs
sub
jmp
test
lahf
out
lods
outs
sbb
xchg
jo
(bad)
enter
mov
fimul
xor
push
clc
int3
or
push
push
bound
push
xchg
iret
mov
adc
iret
jge
push
fld
dec
xor
adc
scas
pop
stos
hlt
xchg
shr
nop
movs
pop
mov
mov
mov
mov
add
mov
stos
mov
cmp
add
or
mov
into
popa
mov
ds
xchg
ds
add
pushf
adc
push
ja
xchg
or
js
cwde
(bad)
mov
ins
test
push
jmp
or
add
mov
jnp
push
call
mov
cmps
clc
mov
or
xor
dec
cmp
retf
xchg
jge
clc
loopne
push
sbb
push
add
pusha
jbe
nop
pop
call
arpl
xchg
xor
out
(bad)
retf
or
cwde
clc
xchg
ficom
int
mov
retf
in
xchg
jb
fidiv
pop
std
and
cmp
outs
pusha
cmps
xor
add
fld
je
adc
mov
inc
ja
push
pushf
inc
xor
jae
xchg
dec
call
lods
lods
jmp
mov
add
cwde
test
xor
aas
push
add
mov
xchg
je
push
mov
out
jmp
jmp
loopne
or
xor
pop
inc
mov
js
lahf
push
fwait
inc
inc
jmp
imul
pop
mov
sbb
jg
out
mov
inc
pop
pop
mov
nop
dec
stos
popw
repz
bound
xlat
or
enter
jbe
push
sbb
outs
mov
dec
cdq
shl
push
mov
aam
int
popa
or
cmps
inc
jbe
and
or
ja
cwde
hlt
xchg
out
cli
xchg
xchg
shr
xchg
mov
mov
sub
int
xor
xchg
inc
ret
aaa
out
fidiv
arpl
pop
enter
fisttp
xchg
pop
fistp
inc
sti
jno
cwde
cmc
xchg
inc
imul
mov
popa
adc
lds
in
test
xchg
xchg
xor
xchg
stos
pop
mov
cwde
cli
jmp
or
jno
cdq
sbb
ror
mov
add
xor
inc
pop
xchg
lahf
hlt
call
or
mov
adc
fsub
(bad)
mov
add
push
sub
loopne
ss
js
mov
xchg
out
out
mov
jl
pop
pop
xchg
retf
mov
mov
mov
pop
push
mov
adc
or
icebp
loope
pop
xchg
lods
popa
ins
pusha
scas
jb
leave
js
imul
jmp
xchg
inc
gs
push
(bad)
mov
ss
jno
xchg
jne
sbb
rol
xchg
cs
cmp
pop
xor
push
lea
data16
aaa
call
xchg
imul
xor
pop
shl
push
test
jmp
popa
or
lahf
addr16
imul
(bad)
push
and
mov
ins
push
outs
sub
jo
cwde
ret
movs
jo
fnstcw
mov
xchg
dec
jecxz
push
pop
and
or
cdq
jmp
push
inc
push
mov
xchg
enter
imul
push
sub
sahf
pop
sub
clc
dec
sbb
in
neg
jl
jno
xchg
jnp
(bad)
mov
jmp
add
mov
inc
sbb
add
xor
jge
repz
mov
das
(bad)
jle
shl
pushf
push
fldcw
dec
popf
inc
ins
mov
adc
movs
inc
xchg
mov
movs
aam
fnstsw
push
xchg
inc
pop
ins
in
pop
test
cmp
cmp
test
jns
jecxz
cmps
ret
cmc
add
stc
imul
ret
jg
xchg
jp
imul
xchg
push
add
inc
inc
pop
dec
lea
xchg
daa
mov
dec
mov
sahf
cwde
push
iret
inc
inc
inc
mov
sbb
pop
inc
dec
popf
sbb
pop
mov
sahf
call
inc
pop
call
pusha
lods
add
sahf
xor
loop
gs
or
dec
xchg
inc
clc
adc
add
xchg
fstp
xor
cmps
sub
mov
out
xor
push
test
inc
xchg
icebp
js
addr16
mov
jge
leave
mov
push
or
push
xchg
pop
mov
stos
stc
xchg
cld
ror
cwde
rol
add
(bad)
mov
in
sbb
dec
call
cmp
xchg
ror
bound
mov
mov
movs
jb
jl
inc
lahf
loop
xchg
dec
cld
pop
aaa
push
test
or
cwde
push
mov
addr16
jmp
popa
lods
jp
sar
stos
or
and
xchg
outs
push
sub
mov
jmp
xchg
inc
adc
movs
mov
outs
mov
mov
fcom
jne
in
jecxz
jle
into
(bad)
sub
dec
stc
cdq
jge
int3
or
mov
dec
sub
inc
cdq
jb
push
cmp
cli
or
sub
dec
xchg
repnz
xchg
pop
retf
ss
xchg
dec
aaa
inc
pop
pop
loope
pop
xchg
(bad)
cmp
add
ja
mov
test
nop
imul
and
sub
xor
cli
ins
dec
mov
popa
lods
xchg
sub
jmp
addr16
je
fidivr
inc
push
sub
cs
xchg
repnz
jb
dec
ja
mov
ins
fwait
les
mov
pop
sub
(bad)
and
sbb
adc
das
sub
pop
fs
xchg
dec
mov
into
xor
outs
cmp
and
jecxz
cmps
jp
cmp
test
in
or
jecxz
pop
xchg
cs
xchg
dec
inc
dec
mov
cmp
or
aam
repz
aam
and
cmp
adc
jmp
cmps
sbb
mov
retf
pop
or
enter
mov
lock
push
loop
dec
stos
retf
sub
ins
sub
sbb
or
es
xchg
inc
lock
daa
xchg
xchg
das
lock
pop
rcl
retf
or
or
jecxz
arpl
adc
loop
sbb
xor
pop
imul
and
rcr
or
pop
std
xchg
push
push
sbb
in
mov
pop
cwde
cmps
xchg
add
test
jmp
dec
lahf
push
nop
leave
push
and
adc
pushf
push
xchg
xchg
mov
xchg
push
sahf
inc
das
xchg
stc
mov
test
xchg
enter
sbb
xchg
sbb
mov
pop
add
xchg
or
jns
push
das
dec
lahf
nop
xor
sbb
xchg
cwde
sahf
loope
movs
jp
inc
mov
fisttp
mov
mov
dec
xchg
pop
inc
jb
call
movs
sub
arpl
cmp
pop
leave
fidivr
shr
dec
popf
inc
xor
out
stc
and
test
adc
push
ss
sbb
dec
fisubr
push
or
leave
pop
inc
dec
int
push
sub
fwait
test
mov
out
test
pop
xchg
pop
addr16
xchg
in
int
and
xchg
retf
bound
imul
cld
dec
dec
lods
nop
xchg
scas
cmp
or
lds
neg
mov
adc
mov
test
std
(bad)
and
xchg
pop
mov
lea
jge
nop
lods
pop
adc
jo
mov
shr
xchg
dec
sub
jo
lea
adc
test
or
xchg
jo
repnz
inc
pop
push
pop
fwait
inc
pop
scas
jp
js
jne
test
iret
mov
ficomp
add
inc
pusha
popa
mov
pushf
icebp
push
jns
sub
inc
jle
mov
add
cmps
jge
loop
mov
loope
dec
cli
push
(bad)
nop
out
sub
pop
pop
ficomp
ins
imul
mov
sub
in
push
bound
retf
dec
aas
xor
pop
out
pop
imul
sub
push
jno
push
xchg
dec
sub
mov
or
ja
psraw
dec
mov
sub
pop
inc
push
mov
xchg
clc
pop
(bad)
shl
ja
inc
cmps
jns
mov
(bad)
mov
popa
mov
inc
test
inc
inc
sbb
jnp
mov
dec
dec
sub
ins
movs
lds
(bad)
ret
(bad)
or
enter
(bad)
scas
xchg
nop
inc
xchg
mov
jge
aas
pop
xchg
sub
xchg
dec
(bad)
iret
sub
test
xchg
adc
movs
inc
or
ja
pop
sub
jp
jmp
mov
or
mov
jne
jg
je
mov
cdq
retf
xor
std
xor
add
pop
inc
xchg
jecxz
inc
xor
fs
push
inc
test
out
aaa
nop
mov
fcomp
clc
sahf
nop
pop
movs
cli
add
das
xchg
dec
outs
call
jne
sub
jo
add
dec
jnp
fs
pop
sub
push
mov
pushf
xchg
loopne
jg
xor
add
popa
mov
jg
pop
sub
dec
jecxz
into
or
pop
mov
out
cmps
or
test
std
movs
jo
pop
stos
sbb
addr16
mov
sbb
test
retf
jne
retf
cdq
fdivr
pop
lea
xchg
add
lea
cmc
inc
jg
xor
outs
leave
test
lods
into
cmps
movs
shl
mov
cmp
sub
or
sub
or
rcl
mov
mov
dec
sub
bound
push
push
cdq
test
int
jb
or
inc
xchg
leave
inc
jne
mov
popf
mov
inc
dec
mov
jne
inc
xor
pop
pop
jecxz
call
test
inc
pslld
xchg
inc
xchg
je
jp
mov
shl
mov
int
jecxz
xchg
jns
sub
inc
jo
add
mov
loopne
sbb
jmp
into
jnp
xchg
mov
inc
call
gs
aam
lea
je
fstp
enter
icebp
test
mov
retf
dec
shr
push
sahf
mov
mov
and
xor
(bad)
adc
inc
cmp
jg
push
mov
nop
jnp
pop
jne
mov
test
js
inc
mov
and
and
xchg
or
fs
ss
pop
push
sbb
gs
jge
rcl
pop
sub
cwde
inc
dec
loope
aaa
mov
inc
jl
xchg
lods
out
inc
data16
dec
sub
nop
lods
xchg
fcmovbe
xor
lock
cmp
jp
js
sub
inc
jo
or
mov
and
in
cli
pushf
xchg
daa
sbb
xor
nop
shl
pop
fwait
push
cmp
push
mov
and
jg
ret
xchg
ins
and
stos
cli
cmp
mov
adc
mov
dec
jne
and
inc
scas
lds
pop
jbe
mov
dec
retf
ja
cmp
push
nop
dec
pop
and
cmp
call
stos
xor
lods
das
xchg
test
aas
pop
fwait
xor
dec
xchg
add
test
(bad)
or
jl
pushf
or
and
outs
xchg
rcr
clc
sbb
pop
fild
dec
lahf
inc
xor
mov
xor
mov
mov
popa
imul
fbld
(bad)
jae
test
and
jbe
fdivr
pop
(bad)
test
xchg
and
dec
push
cli
mov
inc
cmp
xchg
dec
dec
dec
cmps
dec
add
pop
jae
arpl
xchg
inc
sti
rcl
outs
push
jns
test
fnsave
pop
js
retf
das
cli
cmp
inc
adc
lock
dec
out
fsub
push
pop
sbb
push
ja
jge
daa
dec
add
ins
aas
cwde
inc
loope
jno
adc
mov
outs
or
xchg
stos
sar
fwait
(bad)
call
add
hlt
mov
fs
clts
sub
addr16
in
push
sbb
bound
cmp
and
lods
push
pop
js
test
fwait
cmp
lock
pop
cmp
pop
pop
jl
mov
xchg
jle
inc
(bad)
in
inc
imul
lock
test
jne
nop
mov
dec
pushf
add
jle
pop
out
or
mov
cmps
jb
inc
out
pop
sbb
or
loop
adc
int3
inc
imul
ja
sub
in
jmp
mov
mov
jl
xchg
(bad)
cmp
fst
pusha
mul
es
pop
mov
(bad)
jbe
cli
or
test
push
jg
clc
pop
adc
repz
div
aaa
loopne
lods
dec
fucomi
stc
jmp
data16
pop
jbe
out
loope
and
mov
sub
xchg
fst
call
xor
and
sub
rol
or
mov
xor
or
and
jg
test
jle
into
scas
es
dec
mov
loope
icebp
int
push
and
xor
xor
mov
add
jl
and
cmp
call
and
addr16
xor
cmp
in
push
rcr
add
stos
push
cmps
add
inc
mov
enter
inc
dec
movs
push
adc
mov
jle
push
std
pop
mov
aas
fld
or
jno
dec
mov
ds
push
jbe
jns
inc
mov
xchg
cmc
jge
jge
scas
xor
out
cmp
cmp
push
xchg
push
jbe
mov
nop
xor
xchg
xor
ficom
mov
push
mov
ret
int3
imul
arpl
push
ss
js
or
fs
outs
js
test
pusha
ss
dec
xchg
pop
mov
xor
iret
push
aad
fist
xchg
sbb
adc
shr
std
sbb
mov
popf
shl
movs
int
xchg
push
mov
shr
add
inc
retf
(bad)
pop
int
adc
adc
pop
daa
mov
retf
int
jp
arpl
cld
add
xor
sub
push
fistp
inc
(bad)
sbb
adc
push
xor
xor
sbb
cmps
ror
lods
sbb
(bad)
retf
mov
aaa
pop
test
mov
add
inc
or
mov
fisubr
fmul
movs
inc
push
and
jg
push
jbe
jmp
mov
or
in
js
add
push
imul
jg
dec
mov
push
aam
or
loop
popa
ins
rcr
add
adc
cwde
jnp
nop
je
sbb
call
hlt
jo
xchg
and
inc
add
in
int3
xor
shl
fild
ret
mov
adc
mov
and
ror
dec
sub
and
mov
cld
sbb
aad
pop
adc
jmp
frstor
inc
clc
je
loope
xor
dec
inc
cmp
stos
push
sti
jmp
push
add
or
push
push
ins
or
mov
or
repnz
xchg
push
sub
or
pop
test
lahf
mov
mov
mov
mov
ins
or
mov
bound
or
stos
pop
out
cmps
or
daa
lock
mov
psllq
mov
aam
ss
jnp
mov
fnstenv
adc
add
xor
ds
sbb
add
loop
enter
(bad)
add
and
ja
dec
dec
stos
dec
inc
sbb
rcr
push
scas
inc
in
imul
clc
int
and
mov
jle
call
fnstsw
push
lods
fdiv
jle
sbb
jne
xchg
loop
dec
xchg
fnstsw
outs
mov
or
cmp
cmps
mov
int
adc
jg
ror
or
push
loope
js
(bad)
retf
ds
jnp
or
pop
jb
adc
in
outs
lock
(bad)
mov
fs
or
jmp
cmp
shl
lods
sbb
bound
icebp
jecxz
shr
push
push
xchg
gs
stc
into
xor
or
add
dec
and
xor
cmp
xor
adc
add
xor
push
and
mov
loope
cli
push
adc
or
into
push
sbb
bound
sub
test
or
jns
ds
loope
sbb
cmp
outs
ja
adc
xor
out
jae
(bad)
cld
rol
js
cmp
bound
pop
add
mov
xchg
in
dec
fwait
mov
fxtract
retf
dec
inc
dec
fnsave
call
jns
or
popf
ins
jb
or
popa
test
cmp
fwait
push
sub
add
inc
jne
cmps
sbb
pop
pop
mov
call
fimul
dec
mov
cwde
xor
mov
bound
jne
lods
movaps
mov
ss
jp
dec
test
mul
imul
out
arpl
mov
ins
mov
in
add
mov
gs
sbb
movs
or
or
or
aaa
bound
std
imul
sub
pop
fsubr
pop
int3
scas
or
test
or
add
pop
adc
mov
push
xchg
in
clc
add
mov
(bad)
mov
ds
mov
ror
sbb
jl
(bad)
adc
in
js
mov
jmp
enter
adc
std
data16
ret
xchg
ja
xor
shl
ds
inc
sahf
or
nop
bound
adc
shr
dec
push
jo
repnz
bound
int3
aad
push
test
jno
lock
aas
fld
dec
dec
fs
adc
out
push
push
in
sub
clc
mov
cmp
(bad)
lods
mov
in
aam
push
cmp
in
repz
jnp
mov
sbb
push
sbb
add
push
fmul
popf
es
gs
sahf
test
push
arpl
in
push
jecxz
sbb
aas
inc
or
pushf
xor
add
jns
push
sbb
or
jno
and
mov
(bad)
or
pusha
aaa
ret
push
bound
and
mov
add
mov
pop
fucom
ja
(bad)
pop
popa
(bad)
retf
inc
mov
add
and
sbb
jmp
jb
adc
sub
lea
bound
cmc
leave
jb
js
(bad)
dec
adc
fucomp
stc
push
cdq
aam
push
mov
das
push
pop
or
faddp
sub
aas
and
or
mov
xor
dec
nop
jmp
xchg
cmp
sub
add
push
cmps
sbb
sub
idiv
pusha
ror
add
mov
and
xor
popa
stos
cwde
xor
jae
mov
push
lea
xchg
or
mov
push
std
loop
loopne
ja
jg
pop
dec
pusha
or
ret
pushf
and
push
repz
outs
(bad)
push
inc
rcr
or
mov
or
inc
jecxz
cmp
mov
imul
dec
rol
dec
js
inc
scas
sub
stos
or
sahf
enter
xor
jbe
or
fwait
push
(bad)
jb
push
pop
(bad)
or
pusha
shufps
bound
mov
mov
pop
dec
ss
dec
fs
int
xor
daa
scas
mov
or
es
test
pusha
test
mov
sbb
inc
popa
(bad)
xchg
(bad)
cwde
add
mov
cmps
jb
ins
mov
and
retf
clc
ftst
jg
dec
dec
cmp
lahf
ret
or
xchg
cmp
xchg
int
cmps
cmps
in
add
jnp
scas
(bad)
call
mov
xchg
pop
or
into
xchg
fs
jle
bound
sar
adc
ss
mov
dec
rol
push
and
jno
imul
or
mov
sbb
add
daa
cmp
mov
push
xchg
adc
nop
int
mov
lods
adc
iret
lods
mov
mov
ins
out
add
dec
jb
dec
sbb
into
enter
pop
sahf
or
lahf
mov
sub
sub
inc
outs
push
(bad)
push
arpl
bound
inc
jo
pop
sbb
or
mov
les
mov
xchg
jmp
jp
je
or
scas
scas
bound
call
loopne
dec
push
add
bound
sbb
retf
or
lahf
clc
and
je
ret
push
or
test
pop
fisttp
rcl
daa
xchg
call
cmp
adc
test
mov
or
xchg
test
push
arpl
cmp
adc
adc
scas
jb
dec
(bad)
rcr
sub
mov
fmul
pop
gs
sub
jo
dec
adc
ror
pop
(bad)
xlat
xchg
xor
ins
shld
cld
imul
(bad)
fistp
inc
repnz
cmp
sub
and
sub
dec
shr
push
or
mov
icebp
pop
dec
jecxz
xor
push
push
(bad)
std
ins
les
or
cmp
mov
mov
mov
loop
aam
sub
xor
js
(bad)
das
or
leave
add
(bad)
cmc
mov
(bad)
shl
mov
sbb
add
les
adc
out
int
xor
gs
mov
aaa
xor
pop
das
clc
xor
retf
sub
outs
add
sbb
ficomp
mov
cmp
mov
fstp
ret
test
inc
mov
bt
sbb
or
sub
lea
frstor
lods
dec
retf
jle
inc
and
cmps
or
add
(bad)
cmp
add
retf
int3
fstp
cmp
add
or
inc
cmc
mov
pop
call
cwde
ins
push
scas
sbb
fs
mov
aas
push
cli
popa
push
cmps
pop
or
ds
lods
and
retf
mov
lods
stc
or
sti
fbld
popa
test
inc
sbb
adc
xor
push
mov
fadd
fsub
push
fmul
push
push
push
mov
mov
and
sbb
or
call
or
fidiv
mov
fistp
test
xchg
sbb
add
mov
ins
inc
dec
enter
rcl
addr16
or
rol
fdiv
(bad)
mov
xchg
mov
pop
in
dec
retf
mov
rcr
push
leave
mov
and
and
cli
enter
lock
push
jmp
mov
xchg
(bad)
add
add
loop
stc
pusha
bound
xor
pop
fmul
mov
add
out
scas
dec
mov
sbb
js
ins
inc
jge
sub
movs
adc
popa
sub
xor
or
mov
imul
adc
mov
pop
je
mov
xchg
mov
(bad)
jns
arpl
mov
add
std
lock
retf
bound
fimul
inc
mov
or
(bad)
jne
pop
outs
lods
sub
xor
push
(bad)
inc
(bad)
scas
or
xlat
imul
push
xor
test
lods
sbb
xor
mov
imul
pop
jg
ret
xchg
jno
adc
mov
push
rcr
in
pusha
out
or
and
es
ror
aaa
or
loope
outs
bound
mov
aas
or
pop
cmp
mov
cld
rcr
add
adc
data16
(bad)
rcr
xor
mov
or
jo
adc
bound
mov
out
adc
cmp
ret
and
add
add
push
popf
jecxz
fwait
ja
adc
sbb
sub
(bad)
ja
aas
mov
mov
inc
cmp
lock
jmp
aaa
push
arpl
imul
pop
push
sbb
(bad)
or
add
and
(bad)
dec
das
neg
test
or
lods
arpl
rcl
fadd
(bad)
int3
adc
mov
pushf
inc
into
pop
in
lods
bound
jg
jbe
aas
aas
dec
imul
ret
mov
inc
sbb
scas
push
mov
mov
jae
call
push
ret
daa
out
dec
fnstsw
outs
int3
scas
or
ins
cmp
pusha
rcl
mov
(bad)
in
or
dec
sbb
jnp
cld
scas
xchg
jne
cmp
ins
xchg
and
adc
add
(bad)
fst
sub
rcr
adc
rcl
inc
loop
and
adc
jl
ficomp
(bad)
aam
outs
add
iret
(bad)
or
int3
shl
dec
(bad)
push
mov
or
add
xor
mov
pop
retf
int
ins
adc
mov
or
cmp
xor
out
not
xchg
cli
retf
(bad)
mov
loopne
sub
jp
and
in
das
and
xor
push
sbb
popa
cmps
xchg
js
pop
int
mov
ss
loop
les
retf
pusha
sub
xor
and
adc
movs
pop
cmp
retf
xchg
aad
rep
push
xor
xchg
add
jo
popa
iret
mov
pop
test
bound
dec
and
pop
std
loopne
cmp
pop
mov
stos
add
inc
xor
jcxz
test
dec
xor
leave
inc
push
shl
test
repz
ins
loopne
out
rcl
fadd
pop
push
pop
aam
inc
in
clc
pop
cmp
fnstsw
sahf
add
sar
xor
xchg
into
lock
test
in
jmp
inc
enter
push
pushf
and
pop
mov
dec
xchg
movs
mov
fcmovne
push
ret
dec
push
xor
jnp
gs
xchg
in
in
and
push
and
push
addr16
push
jge
push
xor
ss
jle
push
fsubr
daa
lods
fisttp
ins
and
adc
inc
mov
jmp
ins
push
retf
jb
mov
jmp
adc
sub
inc
inc
sub
pushf
add
or
jae
jns
dec
imul
les
hlt
dec
mov
dec
jnp
pop
movs
jno
mov
inc
dec
test
(bad)
or
in
retf
jmp
lods
adc
enter
iret
sub
loope
pop
jg
sbb
lods
repz
je
mov
mov
(bad)
out
push
outs
pop
hlt
pop
xchg
int
pop
push
mov
adc
js
inc
hlt
and
xchg
push
jl
dec
dec
xchg
push
pop
pop
dec
sbb
hlt
cmp
mov
or
xchg
pop
in
test
jg
jae
ftst
add
adc
add
dec
ret
xor
or
push
popf
cmp
(bad)
mov
add
jne
cmp
sahf
sbb
sbb
out
adc
mul
push
inc
push
data16
stc
pop
ja
push
leave
into
or
sub
retf
arpl
sub
jp
ds
or
or
or
shl
shl
rcl
xchg
wbinvd
pushf
fiadd
stos
cwde
mov
clc
xor
push
scas
loopne
cmp
stos
inc
lea
retf
xchg
pop
call
daa
inc
fs
cmps
(bad)
and
cmps
pop
cdq
inc
mov
clc
cpuid
mov
(bad)
enter
lods
lock
(bad)
push
xlat
mov
add
sub
fcmovb
into
jmp
in
ror
sbb
stos
and
push
sub
bound
popf
hlt
push
or
cmp
in
ds
(bad)
es
ror
retf
dec
lods
rol
ins
xlat
mov
scas
sub
xchg
leave
jbe
(bad)
mov
push
ret
mov
mov
retf
into
movs
call
(bad)
cli
or
ror
add
dec
iret
cmp
rcl
fld
mov
aaa
mov
in
sbb
fcmove
add
mov
or
outs
inc
push
pop
sub
inc
ss
out
jg
adc
or
aaa
mov
sub
xchg
ds
out
sbb
or
push
mov
int3
pop
addr16
bound
inc
or
aas
mov
popf
mov
addr16
push
ret
comiss
stos
sub
mov
sbb
mov
fld
push
lds
stos
cld
pusha
push
out
shr
bound
push
es
add
movs
push
ret
pop
test
das
mov
mov
lds
fld
xchg
mov
adc
mov
jmp
js
pop
mov
add
cmp
addr16
shl
mov
mov
and
shl
xor
ficom
xchg
xchg
add
into
cmps
mov
push
sub
jp
add
mov
call
fsubr
test
cld
dec
add
rol
loopne
mov
mov
pushf
nop
and
or
pop
cli
jmp
fisub
adc
sub
push
add
data16
int
or
xchg
sub
dec
add
jb
repz
sub
jnp
xchg
fnstsw
xchg
dec
add
data16
or
mov
test
sahf
pop
jns
shl
mov
jmp
arpl
cmps
sbb
cmp
cmps
js
or
jg
adc
jno
bound
mov
xchg
lock
out
sbb
push
jo
scas
and
fwait
pop
call
stos
aam
xor
rcl
adc
mov
dec
push
xchg
lahf
pop
pop
cld
stc
xor
test
js
mov
xor
or
test
sub
jge
cs
mov
mov
movs
iret
mov
loope
pop
loop
adc
cmp
xchg
(bad)
aas
fst
jecxz
iret
jne
fwait
pop
xor
jl
push
loope
std
pop
popf
mov
sbb
xor
cmp
jge
xlat
call
dec
movs
lea
xchg
pushf
jo
xor
ds
push
stos
push
retf
movs
iret
je
xchg
xor
clc
repnz
pop
ins
sub
and
shl
aam
mov
jb
xor
inc
fisubr
mov
jle
out
mov
and
or
inc
adc
bound
stos
push
js
fmul
mov
adc
xor
add
cmp
scas
cld
cmp
sbb
stos
mov
dec
xlat
add
inc
stos
or
mov
ret
and
adc
js
jbe
adc
rcl
mov
(bad)
pop
les
xchg
jg
imul
push
inc
dec
sub
lods
fst
push
inc
aam
jo
fnstsw
nop
or
sub
push
dec
in
nop
xchg
mov
ficom
in
adc
push
mov
pop
cwde
daa
hlt
mov
add
xor
push
es
add
mov
inc
push
inc
hlt
xchg
jae
sub
loopne
fmulp
rol
jmp
scas
enter
or
aam
or
mov
movs
cwde
xchg
fimul
imul
stc
pop
cmp
cmps
(bad)
mov
stos
daa
jle
(bad)
adc
fistp
sbb
mov
fnstsw
(bad)
arpl
push
dec
dec
and
cwde
aam
jmp
jl
jmp
xchg
cli
mov
push
ins
adc
out
pop
int
enter
mov
push
jge
xor
fidivr
fbstp
or
call
je
sub
and
pop
in
lods
pushf
out
pop
adc
or
aam
pop
pop
push
jns
mov
inc
pushf
mov
frstor
add
js
adc
js
or
sub
xchg
push
ds
pop
bound
dec
or
or
movs
jno
dec
cmc
dec
in
fst
push
call
popf
repnz
pop
std
mov
jae
mov
or
movs
aaa
lods
push
mov
jbe
mov
pop
cmp
fistp
dec
int
retf
pop
or
and
mov
stos
mov
pop
fld
hlt
jno
mov
movs
movs
scas
mov
mov
or
jnp
mov
cmp
lds
fwait
sub
or
call
test
bound
and
je
stos
fsubrp
mov
jle
lock
out
frstor
mov
icebp
pushf
cmp
or
lods
add
pushf
sahf
retf
add
push
fistp
mov
or
ins
mov
jmp
or
cwde
push
pop
push
or
neg
jg
jge
sub
stc
xor
ror
leave
data16
sbb
aad
adc
stos
and
or
sbb
sub
call
loopne
cld
iret
xchg
nop
in
pop
xchg
lahf
and
vcvttss2si
push
cli
mov
mov
outs
dec
aaa
int
sbb
or
(bad)
test
xchg
movs
(bad)
repz
dec
or
mov
ins
ret
(bad)
mov
cli
call
jbe
cmp
sahf
mov
rcl
adc
sub
lods
nop
leave
or
jo
add
int
or
bound
icebp
push
stc
dec
ins
dec
or
jb
int3
test
jmp
cmps
and
imul
nop
les
comiss
cmp
or
jecxz
sub
add
or
pop
jbe
cmp
dec
bound
or
mov
out
push
push
test
push
mov
nop
movs
data16
lds
xor
or
in
bound
(bad)
mov
mov
test
ins
xchg
rol
in
dec
mov
sub
xchg
enter
sub
pop
dec
or
bound
mov
sbb
sbb
cmp
jecxz
arpl
test
sbb
out
iret
pop
jne
imul
add
test
and
or
outs
popa
pop
movs
(bad)
adc
iret
jl
mov
adc
loopne
fnstsw
push
ret
jne
push
jmp
arpl
mov
mov
xchg
pop
mov
dec
cmp
add
push
cmp
retf
or
lods
push
sub
sub
rcr
mov
mov
dec
bound
arpl
mov
cmp
int
push
sbb
pop
mov
jmp
pop
add
or
xor
call
ror
popa
imul
add
aas
push
and
loope
loop
cmp
add
and
mov
push
or
lock
pop
pop
addr16
mov
pop
cli
mov
push
inc
loopne
mov
retf
frstor
pop
mov
or
js
add
je
fsubr
adc
js
test
or
iret
rep
push
pop
call
xchg
sbb
imul
and
in
out
aad
test
or
mov
dec
shl
xchg
mov
ss
cs
or
adc
into
loopne
jmp
jb
stos
call
xor
mul
or
or
das
gs
gs
outs
pop
push
cmp
push
pop
ror
fstp
and
aad
pop
xchg
push
call
mov
daa
mov
ss
bound
in
and
dec
mov
aaa
xlat
ror
popa
mov
sar
out
in
dec
test
pusha
add
shr
int
jo
enter
mov
pop
rcr
jle
jne
fmul
scas
sbb
fiadd
xor
retf
pop
mov
mov
in
cs
imul
(bad)
and
ins
hlt
and
and
and
cmps
pop
jb
pop
fwait
push
pop
bound
lds
adc
inc
or
xor
scas
xor
call
cmc
aas
cmps
jmp
or
pushf
leave
add
shl
or
sahf
std
jge
mov
mov
rcr
arpl
xchg
jg
xor
stos
fisttp
into
cmp
xchg
repnz
jecxz
bound
out
or
fsubr
neg
(bad)
mov
cvtpi2ps
mov
mov
mov
jmp
jmp
scas
jp
xor
or
pop
aaa
adc
aad
shr
repz
pop
psraw
or
cwde
jmp
xor
push
stos
inc
sahf
inc
or
jnp
push
popa
ss
or
in
(bad)
sbb
jo
jg
push
in
or
mov
or
ja
mov
(bad)
aam
jae
mov
or
or
fidiv
jg
(bad)
int
out
push
std
jle
or
dec
in
mov
scas
pop
xchg
in
ins
or
mov
inc
jb
into
cmpxchg
jl
mov
in
jbe
sahf
xor
shr
and
or
lock
xor
cmpps
mov
mov
aas
fisubr
test
inc
jne
xor
sbb
or
push
or
fld
jno
push
cdq
out
das
jbe
xor
dec
mov
dec
mov
cmps
jl
pop
rol
jp
mov
lds
mov
pop
mov
(bad)
(bad)
cli
shr
bound
fsubr
add
imul
push
dec
ror
mov
push
pop
add
fisubr
sbb
dec
mov
mov
or
out
adc
fmul
bound
mov
fsubr
push
or
sbb
fcmovne
mov
gs
scas
int3
fsub
sub
xchg
sub
je
aam
xchg
out
inc
or
push
xchg
add
shl
pop
ror
pop
mov
ror
repnz
cmp
shr
cmp
fimul
loopne
sti
hlt
jnp
pop
cmp
pop
dec
mov
pop
mov
or
aam
add
dec
xchg
frstor
inc
jb
or
mov
adc
jne
mov
inc
jnp
nop
or
jo
xchg
bound
mov
ror
push
inc
push
fnsave
loopne
mov
xchg
ret
inc
mov
fcomp
push
xchg
sbb
sub
enter
cmp
retf
out
xchg
punpckhwd
mov
fild
sub
and
aam
jb
jp
jo
les
push
jb
jl
or
enter
xor
sbb
mov
mov
ja
bound
jp
pop
rol
or
inc
popf
stos
xor
cwde
and
mov
mov
das
fldcw
xchg
jns
or
int
out
pop
push
dec
or
leave
push
out
call
aas
hlt
bound
bnd
push
int
add
inc
lds
pop
jo
dec
(bad)
jmp
repnz
and
fcmovu
pop
push
int
pop
loope
adc
addr16
add
adc
add
lock
sub
iret
dec
or
sbb
xor
test
or
sub
cmp
fstp
jb
scas
adc
les
loope
mov
fisub
in
out
xchg
adc
sbb
pusha
cmp
or
repnz
push
mov
jecxz
push
inc
inc
out
or
aam
and
fnsave
adc
xchg
pusha
sbb
cmp
jno
clc
jle
push
sub
ret
fstp
or
loop
cmp
dec
stos
clc
fidiv
mov
ins
icebp
mov
mov
sub
or
into
xchg
or
lahf
pop
(bad)
adc
pop
push
icebp
push
bnd
add
jae
sahf
sbb
dec
shr
or
jo
mov
cmp
outs
mov
icebp
mov
cmp
dec
scas
mov
inc
enter
int3
je
scas
mov
pop
jb
in
or
mov
lea
cdq
cdq
in
adc
call
ror
pop
(bad)
xchg
test
sbb
in
adc
push
cli
aaa
daa
jmp
data16
cmp
pop
and
push
adc
inc
mov
out
and
rcr
js
or
sbb
xchg
imul
cwde
ficomp
sub
pop
out
mov
bound
xchg
(bad)
or
imul
aam
(bad)
scas
xor
adc
clc
sbb
inc
add
add
and
bound
sbb
outs
in
leave
cwde
jnp
mov
mov
cmps
fstp
cmp
mov
sbb
or
gs
leave
sbb
cmc
or
cmps
adc
mov
and
push
or
dec
stos
outs
sub
fmul
test
adc
ss
adc
ss
cwde
mov
pop
(bad)
in
rol
mov
xchg
jae
mov
pusha
dec
imul
inc
mov
mov
adc
aam
out
pop
ror
vmread
or
fnstenv
cmp
cwde
paddq
arpl
fsub
stos
call
fmul
adc
adc
pop
xor
or
pop
repnz
sbb
jno
jb
or
pop
cmp
loope
adc
cs
mov
or
dec
xchg
fs
xchg
sbb
mov
or
shr
repz
retf
(bad)
(bad)
lds
mov
add
inc
dec
cmp
fld
loope
xchg
pop
pusha
ss
mov
mov
mov
or
data16
stc
mov
movs
pusha
or
bound
ins
jae
or
or
jmp
xor
add
in
dec
xor
push
push
repz
sbb
imul
bound
mov
in
push
or
mov
fist
mov
mov
sub
adc
test
xor
and
jecxz
mov
loope
dec
mov
daa
mov
ror
fs
shl
sti
fst
or
std
call
sbb
fwait
jmp
call
retf
pop
or
mov
ja
sub
punpcklwd
repnz
fs
and
mov
es
add
popa
xchg
adc
cwde
mov
and
enter
cmp
out
bound
stos
repz
sub
les
inc
leave
xchg
or
ffree
cmp
jnp
or
adc
dec
pop
bound
add
mov
in
xchg
imul
out
xor
add
lods
test
loopne
(bad)
ss
xchg
mov
ret
or
jo
aas
sub
pop
cmp
int3
scas
pop
sub
xor
lods
mov
scas
fwait
adc
(bad)
popa
cmp
or
movs
and
bound
ins
pusha
mov
pop
loope
sbb
pusha
sub
ret
inc
retf
rcr
ret
sbb
add
lods
or
arpl
sbb
imul
pusha
(bad)
daa
or
pop
mov
retf
jl
cld
ins
mov
imul
scas
arpl
jmp
out
cmp
ins
ficom
push
or
ds
imul
outs
bound
stos
data16
and
in
in
jne
cmp
repnz
(bad)
ss
xor
(bad)
shr
cmc
(bad)
enter
pop
inc
loop
adc
popf
or
adc
repnz
lods
retf
mov
jecxz
adc
aaa
sub
dec
or
sahf
xchg
mov
xor
bound
sbb
push
jo
inc
bound
push
mov
pop
xchg
push
sahf
mov
pop
lds
push
push
mov
ret
mov
int3
fmul
dec
test
mov
scas
(bad)
jnp
push
xchg
or
dec
enter
test
jge
fist
jmp
mov
dec
cli
add
mov
aam
bound
push
inc
retf
or
xchg
enter
pop
clc
ror
popf
cmp
pushf
ss
adc
(bad)
mov
cs
push
(bad)
mov
shrd
popf
in
mov
loop
ins
iret
movs
mov
mov
fdiv
cmp
push
iret
pop
outs
and
pushf
push
les
pop
cwde
push
addr16
pop
cmp
sub
nop
pop
pop
out
ret
aas
or
in
int
cwde
std
iret
call
and
test
outs
call
test
ins
movs
push
mov
movs
sub
inc
mov
ficomp
pushf
mov
out
fld
mov
in
or
gs
bound
jle
sub
fst
dec
outs
inc
sti
stos
(bad)
cs
aaa
mov
mov
xor
pop
pop
fdivr
call
imul
int
or
les
or
sub
push
sub
adc
pop
test
jmp
and
mov
push
xchg
bound
pop
in
retf
fstp
add
ror
cwde
(bad)
out
ss
dec
in
or
ret
dec
out
fcom
and
test
mov
or
pop
into
push
int3
jnp
sub
int3
cmps
mov
or
idiv
push
add
loope
mov
or
gs
fsub
ret
xor
cmp
adc
xchg
and
(bad)
jo
adc
adc
adc
adc
mov
bound
inc
test
cmp
movs
inc
fst
cdq
push
pop
out
add
lahf
pop
mov
shr
nop
test
inc
push
and
add
cmp
jge
add
add
sbb
xlat
hlt
shl
(bad)
xchg
fbstp
call
and
dec
ret
add
dec
sub
ficomp
sbb
xchg
js
adc
mov
mov
les
pop
adc
or
(bad)
stos
jle
sbb
fnstsw
mov
in
xchg
push
mov
frstor
add
mov
push
(bad)
xchg
push
sbb
mov
and
push
sbb
or
add
cmc
loop
or
add
ffree
jb
stos
rol
or
(bad)
or
sbb
push
mov
inc
adc
into
retf
or
movs
xchg
fidivr
bound
sbb
jb
sub
sub
rol
enter
or
sti
sub
mov
inc
jle
mov
pop
sbb
stc
or
scas
push
jo
pop
mov
sub
xchg
push
fwait
popf
or
into
pop
mov
sbb
(bad)
sbb
(bad)
mov
or
xchg
add
retf
adc
mov
stos
repnz
mov
sub
jecxz
xchg
test
push
aad
jns
mov
pop
adc
dec
lahf
ja
sub
(bad)
in
jne
and
or
inc
fwait
xchg
mov
jp
repz
mov
ins
sub
mov
inc
sub
bound
pop
pop
ret
inc
mov
fwait
scas
cmp
sub
std
mov
(bad)
out
adc
cld
cmps
ret
bound
and
(bad)
sbb
in
fstp
mov
dec
das
out
jmp
or
lds
push
in
(bad)
scas
adc
into
add
and
cwde
(bad)
aam
into
test
rcr
dec
cmp
jmp
xor
push
rcr
sbb
mov
sti
and
sbb
outs
jmp
fcmovnb
fcom
out
and
pop
dec
jbe
jbe
inc
mov
cmp
ins
in
fnstenv
fidivr
ror
shl
loop
aam
cmp
fld
add
test
les
lock
in
(bad)
dec
pop
mov
or
fisub
icebp
bound
xchg
fst
xchg
mov
aaa
clc
pop
out
(bad)
fnsave
or
cmp
mov
fisubr
or
nop
or
mov
push
add
mov
pop
dec
(bad)
mov
fsub
stc
adc
or
xlat
jle
icebp
jl
pushf
cmps
(bad)
nop
mov
push
(bad)
fdivr
jecxz
adc
repnz
mov
outs
repz
mov
cmp
pop
inc
dec
icebp
sar
cmp
cld
lds
dec
and
pop
mov
xor
mov
add
or
cmp
sub
inc
ror
push
add
bound
cmp
push
push
stos
push
add
mov
push
test
fidivr
mov
retf
sbb
bound
(bad)
mov
test
cmps
fs
fstp
mov
adc
push
push
pop
shl
sbb
jnp
aad
or
sbb
or
fidivr
cmp
bound
pusha
jg
movs
xor
fsave
inc
jb
lods
loop
ins
adc
xor
mov
push
mov
(bad)
cld
popa
xor
or
and
pop
test
gs
fnsave
cli
xlat
cmc
fisubr
adc
xchg
daa
bound
sbb
xor
sbb
pop
mov
ins
clc
ja
jb
out
sbb
mov
mov
adc
xor
sbb
in
push
lahf
scas
cmp
sub
sbb
jno
mov
ret
movs
fst
es
in
call
and
stc
push
and
repz
jge
lahf
mov
movs
jbe
or
lahf
aam
loope
addr16
mov
fisubr
inc
dec
std
or
dec
jmp
xchg
cmps
add
dec
pusha
stos
enter
sar
ret
into
frstor
or
mov
mov
push
fsub
shr
mov
cld
into
enter
add
frstor
sbb
inc
mov
ffree
sti
xchg
or
mov
fdivrp
sahf
mov
hlt
mov
mov
test
scas
mov
pushf
xchg
enter
jo
jecxz
or
jge
xor
push
xor
stos
arpl
adc
cli
imul
and
dec
sub
cmp
add
pop
jae
mov
dec
pop
xchg
adc
pop
lods
jmp
stos
mov
stos
mov
je
or
sub
dec
lahf
popf
shl
mov
inc
imul
fstp
in
inc
push
retf
sbb
shr
mov
mov
mov
add
mov
ret
popf
xlat
dec
sbb
(bad)
fcom
mov
adc
sub
hlt
(bad)
bound
in
push
repnz
mov
fld
mov
shl
sbb
mov
pop
out
inc
stc
frstor
(bad)
int3
and
loop
push
inc
popa
loope
dec
xchg
scas
fdivp
inc
js
outs
fisubr
icebp
or
lahf
push
ret
bound
cmp
imul
adc
mov
and
adc
fnsave
test
push
je
pop
test
les
and
sub
cmp
and
gs
sbb
lock
cs
or
and
lds
jge
add
push
bound
das
xor
aas
ss
add
aas
movs
fnsave
sub
cmps
or
call
test
(bad)
addr16
cld
sub
(bad)
dec
push
retf
cmps
jmp
ins
jns
addr16
mul
sbb
hlt
xlat
(bad)
loopne
fimul
xor
mov
jecxz
out
mov
retf
jns
cmc
ret
fisub
enter
mov
cmps
out
loope
jne
or
xchg
js
cld
inc
or
mov
into
jecxz
or
inc
hlt
je
cmp
movs
pop
repnz
fstp
mov
xlat
adc
jecxz
(bad)
ficom
sub
ucomiss
ret
mov
int3
(bad)
aad
pop
xor
or
and
pop
pop
(bad)
jmp
fnsave
aam
loop
inc
ror
shl
bound
std
mov
xchg
dec
jbe
dec
fs
stos
and
pop
pop
(bad)
xchg
sar
cmp
fnstsw
mov
div
cmps
push
cmps
sub
leave
jmp
or
or
jnp
adc
mov
sti
int
aad
or
xchg
inc
jp
jne
jns
stos
and
pop
(bad)
cld
arpl
push
pop
mov
inc
inc
adc
fadd
ret
lods
repnz
js
pop
pushf
and
shl
mov
sbb
mov
fnstsw
lods
retf
or
fild
pop
test
frstor
mov
(bad)
sbb
or
mov
rcl
es
mul
pop
xlat
ss
mov
xchg
out
push
or
or
cmp
hlt
sub
scas
jo
fsub
rcl
adc
test
mov
or
mov
std
push
xlat
mov
pop
fnstcw
xor
mov
xor
push
lods
push
fimul
xor
adc
push
and
mov
xchg
sar
ins
cmp
xor
imul
out
div
ret
pusha
sub
or
leave
js
aas
inc
leave
or
call
arpl
gs
cdq
sbb
xchg
shl
add
mov
or
enter
cmps
xlat
jo
or
jns
fadd
lea
and
jno
popa
dec
in
sub
mov
loope
or
or
arpl
ins
inc
cli
int
or
mov
fcom
cmp
pop
push
shr
scas
or
sbb
and
and
jns
cdq
pop
jmp
mov
jo
test
bound
pop
xchg
loope
or
(bad)
fisubr
fbld
mov
aaa
imul
cwde
mov
cmp
inc
or
and
bound
cmp
mov
loope
sti
(bad)
and
scas
add
out
(bad)
(bad)
cdq
push
(bad)
jp
or
stos
jns
test
aad
jne
aam
(bad)
sbb
repnz
mov
or
into
sub
xor
dec
inc
sub
movs
or
dec
ins
aaa
je
loopne
jmp
inc
mov
mov
or
sbb
ror
xchg
or
sti
and
jge
sahf
jmp
mov
mov
or
add
and
push
jmp
iret
push
(bad)
sub
pop
mov
or
inc
push
cmp
xchg
cmp
push
jg
sub
adc
or
neg
ins
aam
bound
loop
or
movs
loopne
hlt
into
jne
ret
sahf
popf
pop
div
mov
or
sub
in
aad
out
or
cmps
(bad)
or
sbb
push
ja
push
pusha
pop
mov
or
jbe
xlat
pushf
into
xchg
sub
or
ins
icebp
scas
dec
outs
imul
popa
xor
push
xchg
jo
mov
mov
fidivr
add
(bad)
mov
cld
xchg
and
cmp
ror
retf
data16
cmc
in
dec
retf
ffreep
sub
pop
gs
fiadd
or
ret
mov
add
or
jle
mov
fadd
or
call
sbb
rcr
push
fcomp
dec
or
and
in
mov
xor
xchg
pop
push
mov
add
xchg
mov
jb
mov
xor
pop
in
lods
adc
push
call
adc
pop
add
jmp
pop
(bad)
fwait
and
daa
scas
xor
inc
bound
dec
aad
aas
mov
add
push
or
int3
fucom
ja
mov
or
arpl
data16
sbb
arpl
push
mov
ds
jmp
cmp
mov
shl
pop
xchg
jns
jge
inc
adc
xchg
xchg
or
cmp
dec
mov
cwde
push
lea
movs
inc
sbb
cmp
and
daa
fnstsw
jg
jmp
sbb
jnp
or
push
jle
fcmovbe
and
shl
js
mov
dec
sbb
adc
mov
test
or
push
push
push
and
shr
xchg
sahf
(bad)
dec
push
or
sbb
or
push
test
xchg
in
mov
stc
xchg
adc
jge
lahf
pushf
mov
test
and
fwait
bound
mov
or
fnstcw
sbb
and
int
hlt
mov
add
pop
adc
push
pop
mov
push
cli
int
mov
arpl
aam
or
sar
or
test
inc
mov
push
(bad)
aad
in
mov
aad
dec
xor
pop
mov
js
inc
jle
fucomp
mov
cld
cs
aad
(bad)
gs
jo
frstor
lahf
hlt
sub
or
push
or
pop
sbb
imul
retf
cmps
jne
fsubrp
mov
cmp
fsub
push
and
push
jbe
pop
dec
int
(bad)
and
xor
or
mov
jle
sbb
jns
jecxz
inc
and
sbb
and
jb
mov
sbb
jb
xchg
or
aad
mov
jmp
adc
lods
sbb
(bad)
fwait
movs
fisubr
adc
adc
cwde
jecxz
stos
fnsave
das
adc
or
pop
mov
bound
mov
or
neg
mov
xchg
xchg
lods
fdiv
jnp
xchg
(bad)
dec
and
or
movs
sbb
fnsave
mov
or
adc
xchg
push
adc
cmps
fadd
or
push
ret
pushf
add
frstor
sar
rol
retf
call
jbe
xor
cmps
(bad)
jb
pushf
dec
pshufw
lods
mov
jmp
or
or
into
jo
cld
push
xor
dec
mov
repnz
or
div
inc
mov
shl
sahf
jnp
xchg
sub
or
daa
retf
pop
daa
int
stc
fnstsw
dec
sbb
idiv
mov
push
imul
(bad)
in
dec
sub
xor
adc
lahf
push
int3
xor
pop
cmp
je
jnp
bound
call
outs
push
mul
pop
bound
sub
xor
push
nop
or
lahf
adc
mov
xchg
aas
jmp
sub
or
(bad)
mov
mov
lods
xor
loop
inc
mov
imul
jg
cmps
bound
push
jo
pop
call
repnz
push
test
push
hlt
cmps
or
mov
rol
enter
mov
push
into
das
mov
sub
add
push
loopne
loopne
call
fs
push
pusha
jno
or
scas
xor
(bad)
fisttp
cmc
inc
faddp
bound
push
mov
shl
xor
fdivr
dec
shl
push
or
repnz
stc
int3
(bad)
retf
sti
sbb
xor
ds
and
dec
std
out
cvttps2pi
pop
movs
inc
lods
and
pop
ret
mov
adc
cwde
loop
les
mov
xchg
dec
sbb
or
ret
push
mov
sub
add
or
or
mov
and
pop
enter
(bad)
fwait
rcr
ja
bound
add
mov
jae
js
or
ds
pop
enter
movs
jo
mov
aam
sbb
dec
mov
ror
add
xchg
fstp
cwde
idiv
ins
jmp
icebp
test
lahf
xor
retf
xor
add
(bad)
xchg
inc
es
cmc
das
lea
fsub
sub
iret
pusha
lock
test
jmp
sbb
mov
or
mov
in
and
(bad)
out
mov
adc
test
into
cs
(bad)
movs
pop
jle
sbb
mov
imul
das
cmps
in
test
(bad)
js
xchg
add
cmc
fidivr
adc
or
std
ret
adc
movs
aaa
pop
int
stos
push
rcr
add
ss
fmul
adc
adc
add
cdq
dec
dec
push
sahf
fcomp
lea
cmps
out
icebp
scas
or
mov
nop
bound
and
jmp
sbb
sbb
dec
sahf
mov
or
jo
xchg
mov
repnz
jge
sbb
or
movs
xchg
or
pop
fisub
int3
lods
jno
test
pushf
xor
mov
inc
push
aad
and
xor
in
jne
imul
xchg
add
mov
mov
cmc
pop
xor
mov
(bad)
fisttp
add
adc
les
jb
hlt
ins
loopne
test
aam
in
cdq
into
adc
cmps
loop
ins
mov
dec
or
ret
call
xchg
jo
mov
imul
int
lods
outs
fisttp
rol
out
sbb
dec
loopne
push
adc
scas
scas
dec
pushf
out
(bad)
fcmovnb
and
push
pop
ins
or
xchg
lahf
push
dec
mov
ja
in
xchg
je
imul
dec
test
call
or
pusha
mov
fmul
ds
jecxz
mov
mov
jl
or
dec
mov
mov
fcmovnu
sahf
out
shl
test
or
inc
or
cwde
leave
xor
push
frstor
fcomi
jns
sub
mov
lea
mov
icebp
outs
jo
imul
outs
loop
and
adc
nop
bound
retf
jmp
(bad)
xor
mov
cmp
and
ds
jne
jno
add
scas
add
sub
in
loopne
push
jg
add
inc
mov
fimul
push
in
jle
or
mov
mov
sahf
add
(bad)
jmp
pop
cmp
mov
mov
(bad)
jo
ss
mov
inc
mov
or
fisttp
sub
idiv
fst
outs
in
mov
pop
clc
mov
test
ins
fwait
inc
xchg
add
cwde
mov
lea
push
and
jne
sahf
icebp
pop
frstor
xchg
sar
or
out
xor
mov
mov
add
adc
out
push
enter
icebp
inc
pop
sub
or
bound
push
and
or
cld
xor
into
ret
and
lods
dec
jmp
sbb
pop
mov
pusha
cmp
mov
bound
retf
arpl
or
dec
rcr
cmp
bound
sahf
es
xor
popf
lods
sub
jno
rcr
not
aad
test
or
push
(bad)
and
aam
and
aam
sbb
or
bound
mov
add
mov
push
pushf
out
pushf
cdq
cmp
xor
dec
leave
or
popf
fnstenv
gs
push
jecxz
jb
or
push
mov
sbb
fnstsw
hlt
aad
popa
in
cli
sub
repnz
daa
fsub
movs
push
frstor
lods
or
lock
inc
(bad)
dec
repnz
fldcw
pop
adc
daa
adc
fld
out
cmp
pusha
loopne
sub
popa
mov
rol
sti
xor
inc
das
pop
fwait
call
ins
cmp
push
enter
xchg
or
inc
and
pop
test
or
dec
into
mov
dec
test
fild
ror
popf
pop
add
sbb
daa
pop
push
arpl
rcr
adc
push
push
ins
test
in
mov
jge
bound
adc
in
adc
loop
push
push
loop
sbb
fwait
imul
or
push
sti
pop
ret
or
mov
mov
iret
in
sub
xchg
xchg
xor
add
out
mov
push
mov
jp
mov
rcl
jmp
fnstcw
xor
lahf
sbb
mov
push
int
push
shl
cli
pop
pop
stc
add
shl
movs
sbb
push
xchg
imul
fucomip
bound
push
pop
mov
push
adc
arpl
mov
mov
daa
or
or
movs
and
clc
add
or
lods
popa
call
dec
out
arpl
lea
xor
and
inc
jl
mov
cmps
sbb
fcomip
sbb
sbb
dec
scas
fs
test
xor
jbe
sub
fwait
or
push
jb
fdivr
or
repz
cli
mov
xor
fisttp
data16
hlt
add
adc
and
xor
std
sub
or
sub
popa
jne
pop
xchg
push
arpl
retf
imul
or
push
nop
fwait
sbb
sub
xbegin
gs
and
dec
jne
loop
retf
pop
fisttp
jns
bound
cmp
rol
fdiv
movs
enter
popa
in
div
ror
xor
sub
mov
pop
packuswb
xor
(bad)
fdivr
push
add
cmp
lahf
cmp
inc
leave
ds
(bad)
xor
int3
jno
and
mov
xor
cwde
ins
xor
mov
fst
hlt
inc
inc
jae
test
mov
xor
repz
sbb
lahf
fst
and
fisttp
sbb
mov
sahf
icebp
mov
sbb
mov
cld
cdq
xor
lods
adc
pop
adc
iret
test
dec
add
mov
sub
outs
iret
iret
mov
stc
or
sub
mov
(bad)
and
dec
inc
test
or
sbb
std
push
and
adc
popa
or
retf
jb
add
into
vmovups
lock
popfw
jle
jnp
or
lock
ffree
out
fucom
jl
jbe
or
inc
addr16
bound
mov
imul
add
pop
arpl
iret
(bad)
mov
push
ret
adc
mov
xor
xchg
loope
mov
mov
push
xchg
jmp
and
or
xchg
nop
setp
push
jmp
mov
push
in
jno
mov
dec
sbb
push
out
outs
icebp
stos
iret
popa
or
mov
cmps
mov
fistp
sub
xchg
fisttp
fnstsw
mov
mov
xor
xchg
bound
(bad)
fisubr
(bad)
nop
dec
mov
movs
xor
sub
sub
xchg
ds
fcmovnbe
mov
out
test
jg
gs
pop
dec
(bad)
fst
xor
push
inc
cmc
sub
or
adc
push
xchg
cmp
jns
cli
outs
pop
add
cmc
ficom
jns
dec
fmul
or
add
stos
jmp
pop
sub
or
dec
ror
aam
mov
mov
push
(bad)
xor
out
leave
sbb
or
scas
fmul
inc
sub
(bad)
sbb
fsub
pop
gs
pop
pop
cmps
and
(bad)
add
mov
mov
jmp
pushf
bound
sbb
hlt
or
jae
jbe
mov
daa
fdivr
in
adc
(bad)
std
shl
popf
bound
imul
movs
cld
bound
mov
sub
sub
sub
bnd
rcr
xor
add
dec
fsub
dec
and
mul
sub
or
xor
mov
frstor
cmp
pop
iret
outs
loopne
cmp
mov
test
arpl
cmps
lock
shr
jnp
or
pusha
jns
xchg
sbb
adc
mov
push
xor
dec
dec
inc
mov
push
cld
or
stc
out
inc
loope
push
lock
(bad)
mov
retf
out
int
fst
xor
or
cmp
clc
push
jle
dec
(bad)
add
add
or
jmp
ds
sti
dec
ins
stos
loopne
push
int3
fdivr
stos
xchg
mov
stos
jns
nop
clc
out
mov
and
and
out
lea
fisttp
sti
lods
mov
icebp
or
mov
push
bound
fmul
fcomp
push
xchg
icebp
out
adc
iret
mov
add
push
out
mov
cmp
sbb
sub
ret
push
jle
bound
call
fsub
addr16
fisubr
add
stos
or
lods
adc
sub
sbb
inc
ret
movs
outs
push
lahf
imul
or
push
out
idiv
test
xchg
sbb
or
add
sbb
in
mov
mov
dec
pushf
test
stos
jns
mov
inc
popf
nop
mov
arpl
(bad)
call
mov
pop
mov
dec
rol
fnsave
data16
or
nop
xor
sbb
lods
popf
and
(bad)
clc
mov
cli
xchg
imul
add
adc
(bad)
adc
dec
lock
sub
sub
pusha
push
nop
push
pop
or
mov
mov
cli
leave
xchg
add
pop
inc
(bad)
or
(bad)
or
iret
ffreep
sbb
lds
jp
sbb
inc
in
xchg
jmp
push
fstp
and
imul
sub
add
jae
push
or
sub
outs
mov
fsub
imul
mov
ins
in
daa
loop
or
fcomip
cmp
out
and
mov
(bad)
jae
jp
or
sub
add
test
mov
xchg
pop
dec
ja
mov
dec
fsub
ret
add
inc
mov
or
inc
or
or
add
sar
jo
push
adc
(bad)
pop
jmp
test
scas
in
sti
cmp
fsubr
pop
gs
mov
and
jecxz
or
popf
mov
mov
js
mov
or
sar
test
jg
inc
mov
nop
sahf
cs
pushf
mov
sbb
cmc
cmp
inc
fstp
cmp
jp
cmp
mov
mov
jno
rcl
out
iret
imul
mov
lods
cmc
int3
cmps
aad
loop
push
aad
mov
xchg
paddsb
ret
xchg
bound
shr
ss
cmp
into
mov
mov
mov
pop
xchg
dec
aad
outs
adc
mov
in
mov
adc
mov
sub
push
mov
mov
test
lods
dec
shr
retf
pushf
mov
jg
or
call
mov
xor
sbb
sbb
mov
mov
push
adc
fldenv
push
ins
adc
mov
shl
ja
sbb
stos
int
cmp
aam
dec
pop
ror
sub
call
pop
mov
imul
push
aas
imul
ffree
jg
jle
retf
or
ficom
mov
pop
sbb
jo
mov
or
adc
push
xlat
xchg
hlt
fnstsw
mov
push
retf
lock
aas
add
cld
push
xor
jo
pop
lods
cdq
mov
push
adc
sti
hlt
jnp
push
sbb
mov
or
jae
dec
push
into
test
push
(bad)
fld
clc
test
pop
jmp
or
add
ins
and
sub
or
push
mov
sahf
fnsave
ins
push
pop
pusha
(bad)
jl
imul
fist
pop
bound
out
inc
cmc
push
movs
adc
add
adc
in
or
repz
stos
dec
sbb
adc
inc
adc
adc
int3
jbe
add
shl
scas
push
xchg
push
jns
sbb
arpl
push
xchg
mov
aad
adc
or
mov
jb
pop
inc
or
in
in
push
in
jo
lock
retf
inc
push
mov
adc
mov
push
inc
pop
mov
dec
mov
ins
sbb
xor
test
mov
lods
fimul
pop
jge
shl
sbb
in
jle
jmp
and
mov
jno
jne
jo
call
cmc
add
jns
sub
leave
or
jg
popf
or
adc
xor
and
dec
loope
pop
adc
in
sub
xor
push
add
clc
jnp
call
aaa
cld
pop
fstp
jl
xchg
cmp
fstp
in
sub
inc
loop
and
cmp
(bad)
call
int3
add
bound
pop
movs
fnstsw
or
shl
mov
jmp
mov
clc
cld
and
nop
sbb
out
adc
pop
sar
int3
mov
mov
pop
or
pop
imul
or
cld
mov
les
inc
cmp
and
bound
adc
or
nop
repz
push
mov
push
bound
(bad)
cwde
into
inc
pop
dec
or
cmps
dec
das
sbb
mov
sub
adc
dec
sub
lea
call
jg
lods
(bad)
fbstp
in
fdiv
add
sub
fstp
gs
bound
in
lods
ret
or
dec
les
mov
rcl
into
inc
or
push
retf
mov
mov
ret
mov
sti
fmul
loop
xor
xor
push
(bad)
jge
test
xchg
lods
dec
retf
jbe
jo
addr16
lea
sbb
mov
or
dec
mov
ins
sbb
inc
retf
int
push
int
hlt
vpslld
or
call
out
mov
dec
dec
push
(bad)
adc
fnstsw
sub
les
and
nop
out
cmp
(bad)
vphsubwd
cmps
iret
rcl
ins
(bad)
cmp
sub
dec
jmp
mov
mov
loop
add
popf
lods
aam
adc
pop
and
ss
jg
or
sti
inc
dec
cwde
fst
mov
or
(bad)
jmp
cmc
cmp
retf
mov
and
stc
add
(bad)
push
stos
xchg
dec
je
rsqrtps
retf
sti
(bad)
jne
outs
inc
jge
or
add
lods
xchg
movs
in
pop
mov
cli
cmps
pusha
pop
ret
jne
rol
stc
cmps
das
adc
fld
out
mov
inc
xchg
fcomp
add
jbe
cmp
dec
and
push
enter
cmp
iret
sti
xchg
mov
arpl
leave
jo
jbe
jecxz
sub
pop
xor
xchg
mov
mov
ror
or
sub
fadd
xchg
or
push
push
push
dec
out
scas
loopne
sbb
pop
and
jno
adc
retf
cli
pop
mov
repnz
sbb
jb
jae
or
push
test
xlat
jmp
push
mov
test
inc
jecxz
jg
sbb
xor
icebp
xor
int3
xchg
pop
ret
gs
fisubr
lods
mov
dec
inc
mov
add
cmp
jno
ret
cmp
push
popf
fst
clc
or
inc
mov
and
in
inc
xchg
aam
cmp
mov
stc
bound
jecxz
inc
push
enter
xlat
fsub
inc
loop
mov
lahf
cmps
push
add
std
pop
and
sub
adc
inc
(bad)
popf
outs
movs
or
and
xchg
push
mov
adc
add
popa
and
xor
jae
xor
or
mov
jecxz
mov
or
push
retf
mov
sar
adc
mov
and
and
pop
ret
inc
pop
xchg
ss
adc
cmp
les
jno
fnstcw
out
shl
cmp
push
jl
pop
push
pop
mov
and
dec
add
add
shr
inc
ret
retf
ins
xor
stos
xchg
and
(bad)
idiv
data16
push
inc
dec
or
dec
add
leave
ficom
popa
les
ds
add
mov
test
fstp
pop
scas
or
pop
xchg
retf
xor
loop
lods
adc
push
loop
stos
fst
inc
or
aaa
fild
xor
inc
jl
pop
fsub
outs
out
pop
pusha
or
rcl
and
mov
cmc
xor
stc
jno
jbe
push
pop
mov
sub
dec
packsswb
pop
shl
sahf
or
aaa
or
bound
mov
fild
push
cmp
adc
ins
sub
dec
push
mov
mov
cmc
xor
repz
or
adc
(bad)
sti
pop
(bad)
fidiv
xchg
call
pop
test
cld
sub
bound
push
enter
lahf
or
push
mov
jbe
fdiv
fisttp
dec
mov
xchg
leave
mov
ret
loopne
(bad)
adc
and
push
add
out
shr
(bad)
rcr
push
pop
outs
xor
push
mov
or
jg
inc
mov
out
fimul
outs
dec
jmp
aas
xchg
or
xor
ret
xor
fisttp
jae
out
retf
or
sub
dec
and
nop
or
pop
mov
inc
(bad)
mov
mov
les
(bad)
xor
push
fistp
loopne
xor
shl
sbb
jne
hlt
inc
imul
push
jge
xor
fnstsw
xor
add
sbb
into
or
push
jmp
xchg
or
mov
call
scas
jg
xchg
in
fisttp
xchg
fwait
jl
jns
and
jmp
adc
add
add
sbb
xor
xor
(bad)
stc
push
punpckldq
add
dec
or
or
repz
sbb
out
adc
cdq
sbb
jge
stos
cmp
icebp
sbb
stos
in
(bad)
bound
ins
xchg
cld
out
std
mov
push
pop
data16
pop
(bad)
push
pop
push
lods
jb
or
sub
adc
das
bound
cmp
mov
cmp
fnsave
fisub
dec
xor
call
loop
lods
in
outs
jle
adc
xor
fimul
mov
mov
jmp
pop
mov
int3
ds
retf
cmp
and
jmp
data16
inc
jne
pop
(bad)
pop
lds
rol
fisttp
or
and
xlat
or
pop
dec
xor
sub
test
xchg
pop
ja
pushf
jmp
jmp
pop
arpl
shr
scas
mov
xor
and
mov
frstor
cmp
push
add
add
xchg
sbb
clc
leave
stc
jl
or
xor
imul
into
retf
imul
iret
mov
(bad)
pop
ins
xchg
sbb
stos
xchg
test
ss
add
scas
jne
fucomp
popa
xchg
ins
std
out
mov
ins
and
loop
xchg
cmp
(bad)
push
fisubr
dec
lods
fadd
aad
xchg
jnp
or
sahf
cmp
std
(bad)
mov
mov
or
dec
adc
fwait
sub
bound
xor
or
cmps
or
shr
adc
fmul
mov
add
fs
push
(bad)
mov
add
nop
or
dec
jmp
ret
add
cmp
push
xor
and
pop
call
mov
mov
inc
mov
in
or
cmp
pop
leave
add
bnd
loopne
vmovntdq
fldenv
push
fld
(bad)
lock
pop
ins
sbb
push
or
ins
push
inc
ja
or
mov
add
fldenv
outs
daa
syscall
fstp
sub
addr16
mov
div
lock
call
iret
or
sbb
or
in
and
in
jmp
and
inc
or
push
bound
push
add
xor
arpl
int3
or
fild
sti
arpl
and
xchg
inc
outs
pop
ja
fsubr
xchg
xor
mov
das
push
dec
fcmove
inc
iret
and
jns
sub
aad
dec
in
fldcw
pop
xor
push
dec
or
jge
bound
mov
mov
jl
or
mov
inc
bound
js
push
adc
xor
xchg
iret
enter
(bad)
fnstsw
shl
and
adc
or
jmp
and
cmps
jo
enter
rol
xor
out
ret
aaa
in
xchg
or
ins
cli
aaa
and
popf
pop
mov
fisub
in
test
in
lds
imul
add
frstor
jmp
and
(bad)
or
icebp
xchg
ror
sbb
sbb
xor
fstp
shr
pop
sub
nop
test
pmaxub
inc
mov
sub
nop
and
pop
and
mov
(bad)
sbb
sti
jecxz
sahf
fst
push
clc
push
sahf
mov
mov
and
jns
test
dec
ds
and
mov
sbb
sub
inc
adc
or
dec
stos
daa
lock
adc
inc
cld
or
shr
sbb
adc
cld
sub
in
mov
aaa
xor
add
pop
or
and
shr
mov
test
or
call
daa
ret
dec
cld
jbe
jmp
loope
pop
sub
(bad)
lods
cs
xor
cmp
repz
cmps
ficom
bound
and
enter
sub
or
or
jl
mov
or
das
adc
mov
fwait
and
nop
or
std
mov
dec
clc
jbe
pop
and
mov
mov
mov
and
inc
iret
sub
adc
movs
xchg
mov
add
fisubr
pop
out
pop
mov
scas
or
and
out
mov
adc
mov
or
out
xlat
and
jge
test
pop
xchg
xchg
xlat
in
pop
or
cmps
dec
(bad)
dec
cmp
cli
inc
or
dec
or
mov
or
call
push
push
mov
xor
xchg
bound
into
xchg
mov
or
pop
cmp
lods
fdiv
pusha
fld
inc
test
outs
push
scas
xchg
or
fmul
xchg
stos
sar
ficom
xchg
pop
inc
arpl
sbb
push
inc
or
ins
movs
push
out
scas
bound
test
cmp
mov
xor
int3
ret
(bad)
leave
ret
add
sbb
inc
not
sbb
pop
or
cmc
jmp
leave
fucomp
test
(bad)
lea
mov
scas
dec
jb
mov
xor
bound
repnz
sbb
mov
fwait
jnp
idiv
shl
mov
jl
ror
popf
imul
fld
inc
and
or
push
or
fild
or
mov
cmp
fstp
push
arpl
cmps
stos
sub
adc
stos
adc
ins
sbb
push
out
pop
or
xchg
pop
arpl
xor
sub
xchg
mov
mov
stos
std
inc
shl
sub
fstp
shl
pop
push
jns
adc
bound
mov
jae
scas
not
inc
fst
imul
jmp
add
inc
cmp
retf
movs
loope
frstor
sbb
add
and
(bad)
mov
sbb
test
lods
push
or
mov
sub
add
cmp
dec
fisttp
aas
xchg
push
mov
enter
mov
dec
stc
or
scas
bound
movs
cmps
pop
pop
cwde
(bad)
out
retf
mov
ret
(bad)
iret
jmp
cmp
loop
or
call
fild
lock
sti
or
fwait
xor
bound
cmp
or
test
lahf
retf
sbb
cmp
adc
sbb
in
int
loope
in
pusha
int
test
mov
lahf
shr
add
or
and
or
es
std
stos
pop
sub
rcr
sub
mov
mov
retf
or
or
sbb
add
(bad)
pop
add
xchg
cmp
pop
and
bound
sub
mov
imul
in
push
hlt
cwde
stos
or
clc
ret
dec
imul
fild
je
sub
stos
or
or
mov
vshuff64x2
mov
cld
and
jge
dec
in
mov
lods
es
call
aad
dec
push
mov
jnp
out
mov
popf
or
jb
cmps
call
test
mov
mov
ret
pusha
pop
sti
jmp
xor
or
dec
inc
mov
push
mov
xlat
movs
pop
loop
mov
in
imul
push
xor
mov
cld
push
sahf
inc
dec
push
mov
add
fisttp
sub
mov
rcl
inc
mov
icebp
mov
call
adc
inc
sbb
ds
mov
mov
xchg
fisubr
or
and
push
jo
or
push
xchg
adc
(bad)
sub
test
cli
in
and
(bad)
fnstenv
inc
mov
(bad)
lds
dec
out
fwait
(bad)
dec
adc
mov
push
pop
push
adc
jo
daa
mov
add
xchg
push
sbb
ja
jg
arpl
fld
cmp
inc
mov
frstor
push
jne
pop
cmc
or
ret
or
mov
jno
cmps
loope
xchg
mov
mov
call
imul
imul
dec
loope
or
(bad)
fidivr
aas
xlat
(bad)
dec
repnz
rol
fist
stc
push
mov
mov
dec
mov
or
(bad)
pop
xchg
pop
bound
dec
add
adc
call
push
mov
dec
lock
imul
mov
xchg
data16
repz
add
or
movs
sti
add
in
push
push
xor
xor
or
jecxz
sahf
jmp
(bad)
aad
lods
sub
ins
xchg
int3
popa
sbb
push
fnstsw
pushf
mov
jns
int
and
push
mov
arpl
jae
or
nop
ins
cdq
xchg
dec
and
jp
sbb
adc
cdq
xor
fcmovbe
int
add
cli
int
sbb
hlt
mov
lea
cmc
ret
mov
jae
bound
or
sbb
or
mov
sub
xor
scas
fst
dec
(bad)
jns
hlt
cs
jp
movs
sar
fucom
push
mov
push
addr16
dec
or
ss
imul
and
in
inc
or
arpl
jno
(bad)
cmps
fld
sbb
jae
jge
xor
bound
jl
xchg
or
adc
adc
jae
add
xchg
int
mov
div
fwait
push
adc
mul
sub
fwait
mov
imul
cmp
pop
mov
or
enter
mov
add
imul
scas
adc
add
pop
fadd
dec
rcr
or
xchg
cmp
mov
stc
js
inc
mov
xchg
mov
je
cmc
sbb
push
mov
mov
fsubr
xor
mov
xchg
clc
xchg
xchg
jns
rcl
ror
push
dec
ret
movs
or
xor
fwait
jp
retf
sub
in
mov
dec
je
mov
stos
add
push
mov
lock
jns
bound
imul
xor
int
outs
xchg
in
ret
sahf
(bad)
fidivr
mov
jmp
xchg
rcl
mov
aam
mov
or
pop
jecxz
push
rol
sbb
or
je
add
mov
pop
lock
mov
cdq
pop
fnstsw
repz
dec
dec
int3
push
or
or
xchg
adc
inc
cmp
jge
xor
mov
dec
push
mov
pop
cmp
shl
mov
adc
cmps
(bad)
(bad)
mov
lock
and
loope
gs
cwde
shr
test
add
adc
bound
retf
mov
adc
leave
bound
mov
inc
or
and
add
pop
jbe
les
ret
jecxz
jnp
cs
cld
mov
add
xor
adc
or
sub
dec
stos
pop
or
std
lods
std
push
call
sbb
aas
fucom
call
or
shl
pop
bound
lock
mov
data16
cmp
ret
sbb
(bad)
ja
xor
repz
jle
mov
out
fld
loop
inc
pop
xor
retf
pop
xor
mov
and
adc
mov
adc
sub
inc
pop
add
and
mov
jns
fst
lock
mov
stos
mov
inc
dec
popf
rol
sbb
dec
mov
cmc
out
cmp
mov
pop
add
push
shr
xchg
neg
cwde
push
test
loopne
mov
dec
aam
or
xor
push
(bad)
in
xchg
or
fldl2e
mov
fmul
hlt
(bad)
out
imul
or
pop
xor
push
int
shr
pusha
sbb
mul
cmp
or
loope
lock
adc
mov
xor
and
jp
mov
imul
push
ins
adc
in
ins
inc
jmp
push
sbb
push
cmp
push
outs
jnp
call
dec
or
jl
mov
push
pop
jge
jbe
mov
ret
into
pop
or
jo
add
imul
mov
data16
or
fmul
xlat
stos
out
sahf
dec
aas
clc
bound
cli
aam
jb
xor
jne
and
aaa
popa
icebp
(bad)
daa
xchg
lods
sbb
cs
xor
fcom
fs
icebp
mov
bound
jnp
bound
mov
in
retf
pop
ret
sbb
jne
imul
cmp
push
je
fstp
adc
in
jne
mov
dec
add
fsub
int3
inc
push
arpl
rcr
inc
fisttp
xchg
xchg
mov
out
js
(bad)
retf
sub
int3
dec
call
xchg
push
dec
mov
bound
add
stos
adc
into
or
sub
in
fdivrp
xor
aam
mov
cmovle
in
repz
mov
mov
cmps
mov
stos
xchg
or
adc
cmp
pop
jo
dec
in
mov
or
add
aaa
and
outs
fst
pushf
shl
enter
push
sub
leave
mov
cmps
push
add
rol
mov
outs
outs
mov
fnstcw
ss
loop
mul
pusha
(bad)
call
push
mov
fist
add
ins
(bad)
adc
stos
or
fwait
inc
sti
aas
adc
es
and
cs
sub
fmul
xor
daa
jecxz
sbb
call
fnstsw
push
sbb
sub
ret
imul
bound
or
(bad)
and
pusha
push
test
cmp
nop
pop
xchg
or
lods
xor
mov
and
dec
ja
pop
jecxz
or
cmp
imul
dec
push
addr16
xor
cmp
adc
adc
popa
pop
lock
mov
push
or
std
and
sub
(bad)
fstp
lods
loopne
pop
pop
es
or
call
sbb
bound
fcomp
aad
int3
movs
(bad)
cmc
fadd
sbb
ja
mov
jnp
inc
test
aam
xchg
mov
sbb
xor
dec
addr16
add
sub
mov
sbb
inc
xor
mov
push
or
bound
cmp
sahf
stos
daa
popa
ds
aam
or
je
jnp
add
in
dec
(bad)
lea
or
outs
sbb
cmc
bound
push
mov
xor
xchg
bound
push
nop
mov
mov
fidivr
call
sahf
inc
mov
in
inc
imul
pop
jmp
ds
in
jmp
sub
into
xor
(bad)
in
out
mov
xor
and
xor
cmc
sahf
repnz
pop
mov
sahf
retf
push
jg
stos
jmp
cmp
mov
adc
mov
loop
jne
xor
cwde
inc
or
mov
stc
lods
fnsave
inc
fstp
or
and
push
push
adc
or
mov
hlt
cs
inc
pop
or
cli
cdq
outs
int
dec
rcr
imul
add
cld
inc
sbb
out
or
mov
lods
aam
pop
push
fdivp
aaa
inc
mov
fadd
inc
push
mov
jne
dec
pop
aam
cmp
in
call
jl
fucomp
cmc
aam
nop
sbb
xchg
call
mov
fstp
addr16
cwde
xor
das
jmp
push
cmp
leave
add
or
popf
adc
fst
mov
sub
retf
jecxz
dec
(bad)
sbb
shr
or
ds
xor
jnp
lock
into
in
mov
add
mov
cmp
(bad)
adc
push
jmp
leave
cmp
dec
or
cmc
out
push
out
ror
hlt
and
jl
and
xchg
sub
xor
adc
out
dec
push
fwait
in
shr
in
mov
add
fdiv
xchg
sub
cld
add
int3
add
mov
jnp
sub
(bad)
outs
jns
std
dec
lods
test
pop
xchg
repz
stc
(bad)
fucom
shr
fcomp
mov
adc
shl
dec
cmp
int3
sub
rcr
xchg
sub
retf
mov
or
mul
fdivr
and
adc
(bad)
cmc
pop
xor
and
je
jno
sub
push
(bad)
fiadd
or
lods
dec
xor
fild
add
sbb
cmp
jmp
inc
fnsave
and
addr16
adc
ret
js
aaa
outs
std
in
adc
lahf
pop
lods
ficom
data16
sbb
ficom
mov
fwait
add
or
inc
jge
jae
mov
pop
out
daa
cmp
(bad)
cli
inc
inc
nop
mov
stos
pop
pop
dec
inc
add
push
inc
imul
mov
or
jns
cmp
fsubr
ins
pop
(bad)
stos
push
iret
sub
xchg
retf
fnsave
js
mov
dec
daa
aas
hlt
mov
mov
cmps
pop
fild
cwde
jmp
mov
adc
inc
push
(bad)
pop
or
fist
mov
jle
fidiv
shufps
cmps
std
xchg
out
fiadd
loop
inc
out
or
dec
push
iret
or
and
rol
(bad)
xchg
outs
push
add
fmul
pop
dec
sti
dec
in
add
retf
(bad)
std
sbb
outs
outs
test
mov
ror
pop
cmp
mov
pop
adc
rcr
or
or
push
bound
xchg
sub
or
pop
cmp
fstp
aam
adc
mov
or
int3
sub
movs
retf
frstor
std
jns
sub
out
or
push
cwde
and
ins
pusha
pop
jecxz
or
xchg
sbb
adc
fcomp
loope
lds
cmp
or
sbb
mov
inc
inc
cli
jecxz
ss
push
or
sbb
dec
cmp
xor
test
pushf
sbb
jno
or
mov
sbb
std
mov
mov
pop
bound
pushf
popa
jecxz
aam
les
rcl
mov
add
add
push
pop
adc
mov
jmp
mov
sti
fisttp
xchg
pop
cld
xchg
(bad)
xchg
je
push
cmp
(bad)
mov
stos
test
sub
imul
xchg
bound
in
or
xor
inc
mov
or
xchg
ret
jb
cmp
(bad)
leave
inc
sub
call
loopne
lea
out
mov
xchg
push
test
lods
int3
push
pop
cmp
sub
add
int
add
es
or
mov
scas
ja
add
fisttp
movs
jo
mov
and
jmp
loopne
jns
imul
leave
xchg
mov
cld
push
push
or
fadd
out
dec
ret
call
(bad)
scas
push
mul
or
mov
xchg
xchg
xor
jne
outs
mov
and
data16
stos
pop
mov
adc
ror
ds
xor
stc
loop
cdq
jp
cld
pop
sub
mov
inc
aad
mov
lahf
or
cmp
repnz
sysexit
int
ins
movs
call
mov
(bad)
popa
bound
hlt
stos
mov
or
movs
or
or
xor
adc
outs
mov
sbb
or
inc
shr
sar
(bad)
addr16
sub
push
cwde
push
fcmovu
mov
mov
retf
repz
and
imul
jae
out
sub
fldenv
movups
fadd
push
cmps
cmp
shl
or
nop
ss
dec
mov
aam
lods
mov
ins
aam
adc
mov
stos
or
mov
fcom
add
aad
(bad)
lea
add
sti
adc
lods
out
ret
sub
fimul
dec
scas
xchg
shr
test
and
sbb
mov
div
sar
mov
and
or
iret
int3
pop
bound
jne
add
rcl
call
xor
icebp
cmp
stc
push
test
jne
cmps
pop
into
(bad)
mov
shl
or
lahf
lahf
neg
out
adc
push
or
and
int
inc
bound
leave
xchg
xchg
pop
xchg
(bad)
rcl
shr
xor
lods
jb
or
movs
mov
or
jmp
imul
or
dec
neg
inc
fcmovu
loop
push
out
mov
pop
into
loop
or
mov
pop
mov
int3
in
push
jecxz
repnz
mov
ret
cdq
or
ins
loopne
adc
stos
(bad)
lock
push
cmpps
sahf
sub
xchg
sti
clc
xor
shl
pop
cld
or
adc
pop
addr16
sub
push
pop
sbb
fs
lds
pop
xor
nop
sub
aam
or
popa
mov
test
mov
xor
out
lahf
jno
push
mov
in
in
mov
fnsave
movs
xchg
inc
and
inc
jg
das
cmp
bound
bound
rcl
jo
repnz
movs
xor
xchg
into
push
mov
jno
inc
dec
pop
(bad)
fist
imul
adc
pushw
and
push
sbb
sahf
call
mov
into
add
std
clc
or
mov
adc
adc
cwde
ins
mov
xchg
loop
es
push
data16
out
fstp
sub
xchg
or
and
gs
pop
push
mov
push
aam
out
push
(bad)
jp
or
gs
sub
(bad)
gs
(bad)
ficomp
pushf
stc
jno
icebp
add
push
cmp
fwait
add
jmp
jge
out
movs
mov
sbb
and
arpl
cmp
inc
scas
fadd
add
jg
dec
aad
push
push
adc
aas
dec
jmp
(bad)
jg
pop
mov
pushf
nop
daa
clc
bound
jne
mov
jmp
inc
lock
loop
or
imul
pop
jb
or
dec
pop
and
fisubr
xchg
adc
icebp
add
out
test
fwait
adc
scas
loop
mul
call
or
sub
or
out
outs
dec
xor
sbb
jne
(bad)
gs
push
push
pop
push
mov
test
push
mov
xlat
bound
lea
test
push
or
(bad)
pushf
push
mov
enter
pop
adc
aad
pop
sbb
loop
ins
xor
sti
or
imul
mov
xor
fwait
bound
mov
sbb
push
in
ss
cmp
leave
scas
je
bound
cmp
or
cdq
(bad)
sub
sub
lock
xor
outs
sar
push
fsubr
stos
jmp
pushf
cmp
sahf
fabs
dec
inc
test
cmp
inc
loope
cmp
mov
xor
sbb
xor
inc
xor
push
js
cmp
pusha
ret
pop
sbb
jp
out
jnp
sub
pop
mov
push
dec
inc
int
dec
xor
fstp
lahf
mov
jmp
push
repz
or
je
bound
ds
movs
movs
or
xor
arpl
inc
adc
mov
int
mov
imul
hlt
xor
and
mov
lods
imul
jo
pop
bound
test
and
or
dec
cmp
pop
inc
xchg
and
or
(bad)
dec
clc
fdiv
mov
add
icebp
std
xor
dec
ins
inc
(bad)
sbb
out
(bad)
cld
push
mov
jnp
ret
iret
or
movs
inc
pavgw
push
fstp
pop
push
pop
adc
or
ret
bound
sbb
nop
(bad)
fld
mov
ins
cli
push
jecxz
stos
mov
and
loopne
mov
imul
cmp
and
or
pop
sub
jecxz
mov
(bad)
retf
add
jmp
loop
out
inc
add
sti
cli
inc
sub
pop
out
jg
or
dec
stc
fisttp
icebp
mov
std
push
enter
push
fmul
das
test
or
iret
jmp
dec
lea
xchg
rcr
push
pop
xor
fwait
call
je
jle
mov
mov
sub
lock
push
push
imul
xchg
sub
in
pop
into
jmp
icebp
(bad)
and
push
adc
mov
fcomp
jl
movs
push
add
push
push
inc
out
or
stos
rcl
jge
popa
frstor
sbb
loop
(bad)
mov
dec
cmp
jl
jbe
or
push
out
push
ins
dec
xor
ret
sbb
jmp
mov
imul
push
add
adc
push
sub
imul
loopne
and
inc
pop
sub
add
sbb
or
bound
test
cli
std
cmps
jo
(bad)
fisttp
mov
or
add
cmp
repz
(bad)
(bad)
push
mov
mov
leave
cmp
sbb
ret
sub
daa
push
(bad)
not
mov
not
and
mov
fistp
dec
add
mov
cmp
test
dec
mov
mov
ds
daa
mov
adc
fnsave
(bad)
std
adc
es
cmp
sbb
xchg
fmul
push
xor
dec
popf
in
cli
scas
or
xor
inc
imul
or
call
cdq
into
in
adc
jge
fwait
or
rol
push
dec
cmp
pop
cmp
imul
imul
sub
fstp
jne
ret
jecxz
neg
ins
mov
loope
(bad)
ret
nop
gs
sbb
or
add
fnstcw
lods
loop
(bad)
outs
fisubr
add
(bad)
shr
or
mov
pop
xchg
dec
movs
in
cwde
mov
sete
push
bound
xor
scas
or
xchg
push
mov
ficom
ret
rcl
push
ds
or
test
cs
ins
call
les
jne
adc
icebp
add
jmp
pop
jg
test
test
or
jle
dec
or
pop
hlt
nop
jnp
mov
inc
pop
rol
jmp
rcr
dec
fstp
jp
mov
jmp
xor
pop
inc
dec
pusha
mov
jmp
stos
sbb
push
jno
fst
xor
retf
or
mov
shl
lds
dec
or
das
jle
pop
push
pop
or
lock
out
or
movs
les
inc
mov
scas
or
xor
fldenv
and
dec
fstp
add
fdiv
push
out
inc
stc
dec
jae
or
adc
or
in
xchg
pop
dec
aas
bound
int3
(bad)
(bad)
stos
jnp
jmp
adc
sub
or
jae
mov
xor
add
adc
(bad)
into
adc
cmp
fisttp
push
mov
les
ds
pop
mov
xchg
mov
mov
dec
mov
push
nop
imul
gs
inc
dec
jmp
push
(bad)
push
mov
xchg
rol
sub
sbb
and
mov
xor
xchg
mov
daa
mov
add
or
dec
repnz
cmps
das
bound
sub
xor
push
sbb
cmc
aaa
xchg
push
xor
shr
stos
mov
push
aad
sbb
fdivr
bound
movs
(bad)
ficomp
ficom
mov
push
call
(bad)
cmps
pop
jns
(bad)
lods
fs
(bad)
push
or
repnz
test
inc
int3
mov
jnp
mov
in
or
lea
inc
frstor
in
dec
add
or
(bad)
lahf
mov
sbb
add
sbb
push
sbb
bound
push
repnz
or
daa
mov
xlat
les
jmp
int
and
in
jp
cmp
repnz
jp
sar
stos
cmp
xor
push
(bad)
loope
jo
jmp
push
ja
pop
dec
push
jnp
call
fs
sub
neg
fsubr
jbe
(bad)
adc
movs
or
fwait
and
ins
(bad)
movs
vpmulhuw
loop
sub
xor
lods
bound
mov
xchg
cs
adc
arpl
cmovs
inc
or
jle
cmps
xor
dec
pop
sub
std
pop
and
cld
in
sub
inc
ror
or
or
mov
scas
mul
loop
xchg
loope
test
or
xchg
pop
push
fisttp
movs
movs
fcom
xor
jb
push
repz
leave
dec
cdq
pushf
pop
mov
jg
mov
push
mov
imul
cmp
into
cmp
xor
push
nop
and
or
pusha
stos
pop
pop
inc
and
cmp
je
or
les
fnsave
sar
inc
inc
jne
jnp
cmp
sti
fst
lea
fmul
mov
stos
mov
jp
shl
push
and
jmp
jl
cmps
bound
jns
popf
aas
stc
outs
adc
dec
jae
call
scas
cmp
retf
sbb
push
dec
bound
sub
or
js
and
and
pop
pop
adc
fdivr
or
jmp
aaa
bound
pmaxsw
sbb
and
pop
out
je
push
sbb
mov
mov
(bad)
cli
xor
popf
adc
cdq
ins
into
xchg
push
in
(bad)
xchg
dec
inc
mov
or
or
jo
mov
jns
test
or
jbe
inc
fisubr
lahf
dec
adc
ror
adc
or
lods
xlat
xchg
bound
pop
int3
dec
cmp
test
fistp
shl
repz
sbb
fcomp
jp
shl
push
nop
inc
pop
int3
fist
mov
jnp
adc
adc
sbb
shufps
sub
push
bound
cs
or
push
ret
or
sbb
test
inc
mov
(bad)
ror
xlat
add
dec
fdivp
lea
push
movs
mov
daa
fsub
fld
ret
sub
jae
retf
mov
sub
or
jb
cmp
fdiv
push
or
sti
test
xor
xchg
jbe
push
cmp
cmp
sub
ret
push
les
sbb
fld
xor
movs
adc
es
loopne
(bad)
add
pop
pop
pop
jecxz
or
movs
out
fsubr
dec
stos
(bad)
lock
sbb
pcmpgtw
retf
or
dec
cs
repz
ja
fstp
pop
or
aaa
(bad)
pop
cs
movs
fsub
inc
leave
stos
nop
shr
in
shl
test
mov
cwde
or
mov
out
cmpxchg
frstor
pop
imul
add
std
js
shr
pop
scas
imul
arpl
cmp
bound
adc
sbb
jmp
inc
jp
jae
xchg
pop
bound
mov
push
lock
mov
xchg
std
repz
ret
into
stc
nop
xchg
adc
cmp
jecxz
cmp
cmp
out
retf
push
or
push
dec
dec
inc
mov
xchg
inc
cdq
xchg
jp
or
mov
xchg
ret
push
fst
imul
jg
jae
pop
and
xchg
push
jg
shl
mov
dec
pushf
sub
je
lods
adc
or
fwait
or
push
test
mov
xor
fscale
xchg
cs
mov
mov
loop
xor
or
or
sub
xor
stos
fst
sbb
test
adc
xor
outs
cmps
fild
int
inc
(bad)
or
jle
int3
cmp
adc
test
xor
sbb
into
in
mov
clc
or
ret
mov
jecxz
or
and
mov
fnstsw
test
mov
je
ret
adc
cli
frstor
xlat
sahf
xor
and
mov
mov
das
mov
cli
sbb
aam
or
inc
fdivrp
jno
ret
test
(bad)
in
inc
shl
dec
fisttp
out
ins
jmp
sub
jl
retf
aam
fst
call
cmp
popa
sar
add
dec
sti
(bad)
push
enter
dec
mov
cmp
mov
mov
sbb
cli
jmp
loope
mov
in
dec
jmp
(bad)
retf
or
(bad)
sbb
rol
inc
push
jno
mov
stc
ins
xchg
inc
iret
or
sub
mov
adc
xchg
mov
in
nop
and
inc
mov
mov
or
dec
jns
and
data16
push
pop
add
jne
loop
cmp
xor
outs
fld
push
push
cmp
inc
sub
jb
out
push
xor
bound
cli
into
add
inc
inc
jae
cmovl
fcmovb
mov
or
lock
lea
retf
stos
ja
fild
inc
in
sub
push
pop
push
add
add
push
bound
lods
xor
push
out
or
mov
mov
and
addr16
add
jae
xchg
pop
or
jno
mov
mov
add
je
mov
dec
add
sub
ror
mov
aam
cs
cmp
pop
outs
leave
cmp
(bad)
aam
inc
push
adc
dec
cdq
mov
xor
fdivr
das
mov
sbb
sub
mov
aam
fadd
test
fild
mov
ds
or
(bad)
hlt
les
or
push
jb
or
mov
bound
jns
lds
test
or
(bad)
leave
xchg
sbb
or
test
adc
xor
fwait
mov
call
test
or
and
sbb
shl
cwde
or
sub
xor
mov
or
push
arpl
dec
(bad)
add
out
sub
or
xchg
test
fld
cmp
or
mov
jbe
mov
arpl
or
fxch
xchg
bound
cli
cs
pop
and
mov
jl
lods
das
bound
test
in
push
push
xlat
inc
sub
mov
cmp
retf
or
retf
bound
aas
adc
mov
or
push
pop
mov
push
mov
adc
or
(bad)
push
sub
sub
push
jge
daa
dec
push
inc
or
je
fnstsw
test
or
lds
mov
dec
test
xor
mov
pusha
or
sbb
addr16
ffree
mov
xchg
sub
add
mov
fsub
mov
fwait
add
in
mov
clc
bound
xor
or
cs
mov
mov
mov
inc
add
push
adc
jns
add
popa
mov
iret
cs
mov
shr
sbb
mov
arpl
scas
popf
jnp
fnsave
mov
inc
or
shr
sub
int3
xor
sub
pop
or
or
int3
adc
(bad)
jno
ds
lods
xchg
ror
outs
dec
shl
(bad)
test
mov
cmp
sbb
out
dec
cli
sahf
fld
dec
push
enter
add
and
clc
pop
shr
sbb
push
ins
push
mov
mov
mov
popa
and
sbb
pop
xchg
jl
sub
mov
pop
mov
int
enter
xchg
out
int3
rol
call
fs
and
(bad)
and
out
or
pop
into
push
cmp
cld
lods
rcl
frstor
xchg
shr
loop
or
mov
shl
(bad)
jb
mov
call
and
in
push
jecxz
mov
in
js
cwde
jmp
or
dec
ss
cdq
lods
in
fsub
loopne
fdiv
into
rcl
lahf
fld
outs
pop
fwait
in
clc
cmp
mov
cld
or
add
xchg
iret
adc
in
mov
(bad)
clc
sub
jmp
or
mov
or
(bad)
repz
mov
mov
es
out
call
sub
sar
or
mov
sti
popa
xchg
ret
gs
int
dec
jne
and
rcl
jl
jle
jg
addr16
mov
jnp
adc
je
or
pusha
mov
test
xchg
mov
shl
(bad)
jle
icebp
(bad)
adc
xchg
into
int
xchg
imul
jmp
stc
ret
jbe
push
mov
adc
ja
jne
mov
movs
jmp
(bad)
sub
scas
dec
inc
adc
(bad)
rcr
push
loope
mov
das
jle
mov
js
sbb
cmps
mov
popf
mov
test
sbb
mov
pushf
sbb
sub
retf
dec
mov
sub
xchg
jmp
xor
inc
xor
adc
(bad)
ins
bound
leave
lods
inc
or
or
int3
sbb
inc
xor
sbb
mov
mov
cmps
jmp
enter
retf
jg
out
jmp
out
cmp
mov
ret
xor
jmp
outs
sbb
rol
nop
loop
cmp
fs
inc
cmp
fsubr
data16
dec
inc
pop
ja
daa
cmps
cmp
mov
xor
add
pop
cli
jbe
xchg
aad
adc
mov
add
mov
sub
pop
fst
mov
fadd
push
dec
add
sub
push
out
pop
push
mov
push
pop
fs
or
xor
mov
in
jge
jle
jae
adc
movs
adc
sbb
dec
xchg
jae
mov
push
sub
sub
sbb
out
out
xor
mov
test
fs
dec
pushf
push
inc
addr16
out
dec
cmp
adc
fnsave
clc
push
jno
lea
mov
in
sub
fadd
xchg
push
xchg
mov
not
or
and
int
sub
or
imul
xor
add
(bad)
push
aad
adc
fst
fidivr
add
adc
add
xor
ss
aam
xchg
dec
cmp
or
sbb
call
(bad)
inc
sub
or
ins
test
mov
ret
sbb
mov
or
inc
push
sub
(bad)
(bad)
cmc
dec
dec
sub
aad
popf
mov
mov
dec
sahf
jge
int
call
cmp
popf
or
fisub
adc
mov
or
pop
mov
fsin
repnz
leave
(bad)
mov
inc
das
ins
cmp
and
stos
mov
je
bound
retf
repnz
add
call
pop
addr16
call
fmul
xchg
sub
fiadd
int
fst
pop
outs
inc
cvtps2pd
js
out
ret
and
and
test
sub
call
ror
mov
lods
add
dec
sbb
into
mov
fst
xchg
add
imul
mov
arpl
cmp
push
in
mov
sub
inc
inc
ins
(bad)
fst
sub
out
in
fwait
push
or
movs
test
pop
bound
cli
mov
cmovo
or
pop
pop
xchg
call
cmc
fstp
sub
fs
add
mov
nop
retf
mov
shl
scas
or
jnp
js
sub
push
cmps
jmp
dec
in
jl
add
sbb
push
add
int3
retf
sub
xor
jno
adc
or
dec
jnp
stos
arpl
test
xchg
pop
pop
adc
test
sar
mov
js
inc
mov
inc
push
pop
pusha
mov
inc
cli
jno
xchg
cdq
cmp
push
or
int
fisttp
leave
cmp
or
sbb
add
aas
bound
mov
bound
adc
jmp
mov
xor
out
dec
(bad)
(bad)
in
nop
add
loopne
pop
or
stos
ret
pop
clc
sbb
in
pushf
nop
ret
scas
clc
or
cmps
push
add
popa
adc
xchg
xchg
imul
xor
mov
fstp
push
or
or
adc
pop
xchg
rcl
mov
mov
call
loopne
pop
pusha
dec
dec
cld
jl
jle
dec
ins
xor
stos
shr
sub
mov
nop
mov
sahf
outs
cmp
ret
mov
ret
mov
mov
sub
pop
pop
xor
popa
or
fmul
dec
fbld
lahf
lods
ds
in
(bad)
jb
or
jns
xor
add
loop
nop
out
add
and
xor
xchg
adc
lods
jnp
pop
sub
adc
xor
jle
mov
rcr
cmp
and
in
sub
xchg
push
pop
movs
inc
ret
popa
fisttp
popa
(bad)
dec
shl
mov
push
cmps
sub
cmps
pop
push
and
xchg
pop
xchg
add
imul
xchg
gs
xchg
add
out
or
hlt
(bad)
or
push
xchg
fst
pop
mov
mov
inc
cmps
js
push
inc
mul
inc
bound
push
pop
fisub
in
int
or
movs
sbb
cs
out
mov
xchg
popa
push
adc
(bad)
stc
ds
add
sub
mov
bound
(bad)
retf
sub
das
or
clc
(bad)
and
xor
movs
idiv
ja
cli
das
and
fld
(bad)
int
or
ret
test
loop
out
fisub
mov
mov
xchg
inc
mov
push
mov
in
pop
pop
jne
or
jo
pop
bound
(bad)
adc
das
int
cmp
pop
lods
std
add
add
mov
test
frstor
sbb
out
imul
es
popf
xchg
xchg
ret
mov
iret
shr
jne
add
mov
lahf
es
imul
outs
movs
(bad)
jmp
ret
add
in
push
cwde
cli
mov
es
push
cmp
and
or
xlat
and
xchg
add
shl
rol
ins
dec
(bad)
call
jo
scas
push
inc
mov
(bad)
mov
hlt
jne
int3
out
sbb
mov
pop
mov
jns
lods
je
mov
stos
fisttp
add
lods
stos
or
inc
xchg
inc
dec
adc
mov
mov
and
outs
fisubr
mov
lahf
xchg
(bad)
xor
(bad)
(bad)
in
or
sub
mov
fnstsw
inc
outs
(bad)
or
pushf
repnz
and
loop
cmp
repz
mov
adc
jge
inc
scas
add
jle
mov
dec
sahf
bound
loopne
loope
mov
imul
call
in
sub
into
in
lock
arpl
adc
pop
mov
jle
mov
movs
jae
mov
in
or
push
daa
push
pop
mov
sub
(bad)
mov
icebp
loope
or
(bad)
les
pop
pop
bound
add
inc
pop
inc
or
sbb
sti
adc
pop
mov
jp
lea
call
and
sbb
bound
pop
mov
mov
fsubr
pushf
loope
dec
inc
mov
stc
sbb
pop
arpl
rcl
mov
(bad)
(bad)
test
inc
mov
mov
or
xor
sar
bound
sar
push
inc
fimul
iret
mov
push
fsubp
fst
dec
loopne
or
mov
xor
loop
retf
les
jl
(bad)
or
mov
push
or
xor
jge
mov
test
mov
xchg
or
adc
fs
dec
call
lods
fisub
out
or
cmp
retf
shl
stos
call
lock
mov
mov
mov
xchg
or
dec
or
sub
mov
ffree
fisttp
jmp
inc
ss
or
lods
and
call
jnp
outs
xchg
fucomi
(bad)
rcl
dec
mov
or
jae
retf
add
int
mov
ds
jg
pop
adc
aad
and
retf
xor
mov
and
sahf
imul
mov
mov
sbb
shl
mov
movs
or
jmp
jecxz
fs
fisubr
ja
mov
inc
sbb
ret
outs
in
and
(bad)
xor
jg
or
lods
pop
push
xchg
sbb
jl
fidiv
cdq
sbb
mov
mov
cmp
mov
in
repz
sub
adc
or
in
lods
not
jl
repz
xchg
xchg
or
ficomp
fwait
push
test
sbb
lahf
sub
add
fsubp
in
or
mov
pop
pop
bound
inc
pop
out
or
call
out
fst
outs
retf
pop
in
hlt
mov
or
test
jbe
ins
stos
push
retf
bswap
jno
cmp
or
push
cmp
retf
neg
frstor
dec
sbb
xchg
or
add
bound
aaa
xor
repz
mov
arpl
hlt
in
mov
xchg
jmp
arpl
fistp
push
bound
jo
div
fild
inc
les
imul
dec
xor
push
or
js
sar
push
popf
jae
jmp
loop
add
and
and
cdq
or
sub
mov
call
movs
arpl
stos
mov
aaa
jg
fsubrp
cs
enter
mov
cdq
push
mov
test
and
xor
out
popf
mov
frstor
and
xlat
xchg
push
shl
sbb
jne
pop
out
push
cmps
fcmovnbe
or
xchg
pop
mov
mov
mov
lods
jbe
adc
cmp
iret
mov
pop
mov
dec
fidivr
gs
cmp
xor
or
cmp
enter
mov
ins
add
in
psllw
mov
inc
jg
inc
mov
mul
jns
pop
adc
stos
fisttp
movs
in
fmul
lahf
in
inc
cmp
mov
pushf
out
dec
lea
jae
lods
or
(bad)
sahf
fmul
cmp
ja
call
add
mov
xchg
sub
xchg
inc
and
add
addr16
jno
mov
int3
or
bound
(bad)
jp
int
ds
xor
dec
and
cmp
das
inc
enter
jle
xchg
in
or
loope
xchg
push
out
cmp
movs
jle
jnp
sub
jge
sbb
cmp
cmps
das
bound
imul
mov
jecxz
retf
cmp
mov
js
cmp
adc
(bad)
mov
mov
push
add
xlat
jae
mov
or
push
sub
scas
xchg
jnp
bound
cmp
or
mov
in
and
enter
popa
adc
popf
or
sti
jl
sub
fstp
sbb
or
sbb
xchg
cmp
or
daa
std
leave
push
lods
jae
mov
(bad)
mov
push
loop
dec
jae
xor
dec
out
push
or
sbb
(bad)
pop
cdq
xor
(bad)
push
sti
repz
mov
lds
addr16
dec
dec
pop
lea
jae
ins
bound
sub
or
nop
jg
or
fnstcw
ret
add
inc
sub
or
dec
sbb
add
iret
sub
add
mov
xchg
xchg
sub
pop
ins
ins
push
jae
dec
test
mov
pop
cmp
mov
aas
inc
lea
mov
sub
cmp
mov
add
jo
popf
adc
cs
inc
mov
xchg
pop
movs
lods
jg
xchg
loope
sub
or
lock
xchg
mov
push
rcr
mov
pusha
test
or
pusha
xor
retf
jmp
aad
ds
ins
jl
or
add
xor
and
fdiv
ja
adc
mov
loopne
call
std
rcr
das
jmp
dec
sbb
aas
and
mov
cmp
cmc
fld
or
lods
mov
add
neg
pop
inc
iret
ret
std
rol
jbe
xchg
ins
xlat
dec
aad
popa
inc
(bad)
rcl
and
mov
sbb
or
pop
int
fdivr
dec
mov
mov
pop
add
mov
sbb
cld
fcomp
sbb
loopne
jge
pop
int3
ds
jne
add
add
mov
mov
and
stc
jnp
fxch
jbe
or
cwde
push
and
ja
div
aas
stos
in
test
adc
add
movs
jae
xor
mov
rol
retfw
ror
out
push
lock
inc
iret
fucom
pop
push
int3
shl
out
out
and
dec
xchg
fnstcw
or
lods
and
cmps
test
inc
or
lods
jo
and
rcr
in
or
add
mov
xchg
cmp
scas
lock
cmc
call
test
push
scas
test
xor
jl
ds
pop
fnstsw
jno
iret
push
scas
xchg
fiadd
mov
push
and
stc
icebp
pusha
fst
xchg
pop
div
push
pop
dec
ja
xchg
and
xchg
mov
cmp
fcomp
jge
push
enter
popf
repz
sbb
jns
or
popa
scas
(bad)
cmps
movs
scas
ss
mov
sub
jae
or
rcl
cmp
inc
sbb
mov
or
adc
das
or
jae
fnsave
pusha
mov
and
mov
imul
fimul
ret
adc
cmp
push
sbb
jg
xchg
xchg
(bad)
movs
xor
or
fldcw
sahf
fld
fistp
xor
pop
lahf
push
cmp
sbb
pop
invd
cmp
adc
xchg
fsubr
outs
out
or
mov
pop
cld
fisttp
ret
and
pop
hlt
push
and
gs
dec
adc
sub
or
imul
inc
push
push
push
(bad)
retf
or
dec
addr16
inc
add
fisubr
repz
mov
adc
leave
lds
adc
cmc
retf
jecxz
jne
inc
push
inc
sbb
inc
sbb
stc
ret
fiadd
fcom
stos
je
cmps
cld
retf
cmc
(bad)
ret
push
or
lahf
pop
inc
adc
hlt
retf
rcr
dec
cmps
mov
cmp
pop
jecxz
and
test
jae
xchg
mov
sbb
cmp
bound
hlt
adc
test
xor
adc
aaa
fmul
pop
addr16
adc
cld
push
mov
and
lods
fstp
add
xchg
or
jle
add
adc
push
dec
sub
ss
jmp
(bad)
test
sar
std
or
cmp
rcr
add
loop
or
in
movs
xor
and
mov
mov
xchg
movs
xchg
cmp
mov
sbb
int3
adc
jge
pop
out
lock
xchg
jmp
test
ins
fst
cdq
mov
fdivr
jge
xchg
gs
xchg
dec
dec
xor
cdq
mov
scas
add
sbb
adc
int
mov
out
push
push
test
fisttp
sub
xchg
cli
std
in
stos
cmp
movs
xor
add
mov
movs
xchg
xchg
add
sti
fwait
mov
leave
or
aam
jbe
mov
jb
pushf
movs
mov
or
mov
cmp
lahf
arpl
push
xchg
arpl
repnz
or
inc
cs
push
add
inc
in
adc
push
push
sub
pop
mov
sub
and
or
push
push
shl
sub
outs
loop
xor
in
jecxz
xchg
xchg
sub
mov
shr
jbe
or
fild
pop
jne
js
bound
popa
ficom
lds
inc
or
int
or
(bad)
adc
mov
icebp
mov
inc
sbb
movs
mov
inc
pop
or
push
cmps
dec
cmps
pop
and
pushf
xor
dec
in
inc
or
mov
cwde
mov
sub
aad
xor
mov
mov
sbb
add
mov
(bad)
jmp
std
mov
xchg
and
add
bound
inc
and
shl
adc
imul
punpcklbw
or
add
test
cmc
push
scas
loop
inc
or
call
sbb
out
jmp
xchg
ja
imul
not
cmp
ins
inc
adc
fisttp
xchg
or
sub
xchg
ds
rcr
dec
jns
(bad)
bound
cs
ins
mov
ins
inc
or
sub
(bad)
sub
xor
cmps
cmp
ss
ins
frstor
mul
fcmovb
fs
dec
std
js
push
and
sub
push
xor
ins
stos
test
or
out
shl
outs
mov
pop
dec
xchg
ret
ret
xor
loop
cdq
fld
inc
xchg
cmp
xor
dec
inc
sbb
stos
popa
jb
add
inc
mov
sti
out
js
or
xchg
in
fst
ds
or
xchg
add
pop
in
mov
mov
push
adc
imul
dec
push
mov
popf
imul
loop
jns
sub
sub
les
mov
arpl
mov
cmc
mov
imul
ins
les
mov
imul
cmp
out
(bad)
(bad)
std
xchg
test
stos
mov
js
mov
lods
pop
(bad)
xlat
mov
bndstx
sbb
stos
cmp
mov
xor
add
inc
pop
js
dec
lahf
daa
les
enter
leave
xchg
std
jp
ror
cld
mov
sar
cmp
cld
(bad)
sub
xor
stos
nop
out
push
bound
or
and
mov
sub
xchg
ret
push
mov
cmp
cdq
(bad)
sti
call
adc
fisttp
bound
sbb
mov
stos
or
clc
out
sub
cmps
inc
retf
shl
sub
pop
mov
call
sbb
xor
sub
mov
fimul
ss
cmps
push
adc
mov
int
sar
mov
test
popa
add
jmp
push
sbb
sti
cmp
ins
xchg
sbb
retf
stc
or
int3
xor
fld
outs
fs
push
jl
jp
mov
dec
and
or
(bad)
adc
rcr
and
and
push
mov
or
push
adc
mov
fst
aad
lods
add
xchg
int
mov
and
ret
sar
ins
cmp
pop
adc
(bad)
sbb
pop
adc
or
pop
loope
lods
shl
pop
shr
add
(bad)
shr
mov
in
sbb
lods
nop
mov
pop
sub
mov
mul
test
xor
pushf
mov
and
ins
or
stos
stos
pop
and
jle
in
push
mov
mov
sbb
stos
cmps
cwde
pop
mov
xor
popf
arpl
or
adc
jp
sub
fadd
ins
pop
outs
adc
cwde
adc
xlat
fdivr
add
add
or
scas
out
ret
adc
mov
mov
add
bound
cmp
or
push
call
xchg
fidiv
iret
mov
inc
or
es
rcl
push
jns
ret
pop
sbb
jne
outs
adc
call
fisub
pushf
icebp
in
data16
mov
pushf
add
retf
adc
and
(bad)
or
pop
retf
push
dec
mul
push
sub
cmp
test
and
jne
pushf
aad
pop
rol
out
shl
mov
fnsave
push
jo
or
xor
adc
add
punpckldq
xchg
jp
lds
iret
or
push
arpl
or
jb
inc
loope
lock
pushf
emms
push
or
pop
idiv
adc
imul
mov
out
fmul
pop
sti
adc
xor
bound
bound
dec
sbb
test
jbe
or
fisttp
cmps
nop
or
fs
jae
frstor
dec
xchg
jbe
sub
or
je
adc
das
stos
rcr
imul
mov
stos
or
frstor
xor
sub
retf
mov
in
and
mov
stos
xor
clc
in
bound
sti
pop
pop
psraw
in
cmp
dec
adc
out
cdq
mov
das
out
ror
fild
mov
shr
iret
mov
jg
call
mov
adc
and
cpuid
mov
inc
xchg
fbstp
or
push
mov
mov
mov
or
or
push
adc
sbb
into
or
xor
nop
fnstsw
sub
push
stos
or
in
div
ror
fcom
inc
mov
push
pop
bound
jno
add
sbb
xor
out
jo
push
jmp
adc
lahf
cmps
in
nop
mov
inc
sbb
fnsave
bound
cmps
ins
test
outs
stos
push
cdq
push
cmp
add
inc
adc
popa
ds
mov
cmp
mov
loope
test
jp
(bad)
mov
mov
aad
jmp
fcomp
mov
(bad)
repz
mov
bound
(bad)
mov
inc
popa
adc
jl
mov
std
push
and
mov
push
xor
push
mov
mov
jb
push
pslld
add
loopne
leave
nop
add
push
popa
(bad)
xor
loope
xor
test
jl
fistp
inc
cmp
jnp
dec
jbe
(bad)
(bad)
cmp
jae
repz
ret
bound
push
sahf
push
stos
jl
shl
cmp
hlt
out
mov
xor
sbb
adc
out
shl
enter
lock
mov
push
cmps
iret
je
dec
or
mov
in
bound
gs
and
adc
sahf
fimul
test
push
test
ret
pop
xchg
int
nop
sbb
or
popa
das
cli
fwait
sbb
xchg
pop
cmp
inc
pop
xor
mov
and
or
dec
cmc
scas
xor
add
adc
dec
ss
pop
fsubr
lds
daa
add
pop
cmc
adc
js
dec
and
fsubr
js
mov
nop
dec
into
push
push
push
mov
bound
ins
xchg
add
jecxz
sbb
bound
ds
dec
bound
fcmovnu
xchg
jmp
int
pop
(bad)
mov
and
mov
out
adc
nop
rol
cmc
loop
dec
pop
dec
in
enter
add
jno
jo
mov
inc
mov
loopne
(bad)
stc
xchg
or
xor
jno
test
adc
bound
movs
cmp
and
jmp
(bad)
sub
or
aaa
out
mov
lods
fwait
mov
xchg
push
shl
or
mov
sub
adc
mov
loop
xor
in
movs
bound
jns
(bad)
pop
adc
add
mov
xchg
fisttp
dec
or
sbb
pop
jg
ret
and
mov
mov
mov
std
pusha
mov
bound
sbb
pop
shr
jecxz
out
test
or
imul
push
mul
ds
adc
pop
mov
inc
ss
ss
add
xor
mov
mov
push
in
movs
nop
add
cmp
cwde
test
mov
sahf
imul
or
adc
(bad)
cmp
ds
ins
data16
fmul
movs
je
sbb
adc
ret
ret
xchg
fisttp
cmp
test
pop
push
push
pushf
xchg
out
in
(bad)
sub
imul
arpl
pop
jnp
in
mov
or
mov
shrd
dec
int
pushf
iret
mov
dec
ret
lods
mov
fsubr
xchg
cmps
or
xchg
xor
or
mov
sub
jecxz
movs
xchg
shl
or
dec
sbb
fst
xor
or
test
clc
pop
aas
jnp
adc
adc
loope
fisttp
pusha
outs
pop
scas
dec
sbb
int3
push
jns
les
fsub
jl
fdiv
mov
int
loop
and
or
pop
pop
test
push
test
mov
adc
out
rcl
scas
cmp
jbe
outs
(bad)
push
or
push
fbstp
ins
iret
fst
sub
mov
mov
and
rcl
bound
leave
ss
or
pop
aam
call
pusha
jnp
cmps
push
pop
jb
repnz
call
test
(bad)
fst
js
adc
or
in
fstp
rcl
cmps
xchg
adc
int3
dec
xor
sub
cmp
ja
or
jbe
dec
mov
xlat
and
bound
test
or
rcl
jg
dec
test
adc
mov
jmp
and
push
cmps
sbb
into
loopne
fdiv
push
dec
(bad)
int
or
cmc
jne
addr16
mov
data16
inc
fld
sbb
stc
pop
add
adc
cmp
fsub
dec
outs
(bad)
icebp
ins
and
cs
fld
adc
jne
adc
adc
inc
ret
dec
aaa
shr
mov
rcl
dec
in
(bad)
or
and
mov
stos
imul
sar
fisub
popf
push
scas
pop
sub
inc
or
rcl
sbb
pushf
fcomp
ja
mov
aam
int3
sub
dec
inc
push
fidivr
rcr
fdivr
pop
sbb
(bad)
lods
sahf
jmp
loopne
sbb
fist
rcr
movs
pop
jg
or
jl
in
and
push
clts
mov
imul
in
movs
mov
pop
icebp
mov
scas
bound
clc
addr16
or
add
dec
jecxz
pop
mov
aaa
add
or
mov
rol
or
cs
jae
int
leave
or
jnp
push
xor
push
(bad)
cmp
test
cld
mov
(bad)
and
call
xor
fs
mov
fnstcw
sbb
scas
div
inc
or
fiadd
iret
lahf
mov
fdivr
std
mov
push
inc
xor
(bad)
fisttp
and
mov
or
xchg
lahf
mov
out
outs
int3
mov
les
adc
retf
cmp
push
or
add
(bad)
fnstsw
cmp
or
cmp
arpl
pop
pop
js
cmp
or
xchg
and
lea
sbb
jl
clc
dec
mov
dec
xor
daa
pop
int3
(bad)
dec
stos
(bad)
(bad)
mov
xor
mov
add
stc
out
jecxz
inc
in
ret
cmp
stc
lahf
and
aas
in
or
cld
je
mov
cmp
out
push
test
mov
mov
cmp
pop
pop
scas
or
pop
mov
data16
sbb
sub
(bad)
loope
add
test
mov
mov
mov
mov
(bad)
cmp
xor
mov
inc
add
stos
inc
sar
push
cdq
sbb
inc
inc
ret
lea
cwde
fld
loop
or
dec
xor
rcr
data16
add
pop
sub
xchg
push
rol
lds
enter
sub
sti
ja
(bad)
push
sub
xor
or
bound
mov
retf
fwait
or
test
or
dec
scas
dec
enter
pop
adc
xlat
fs
jae
clc
ins
jmp
dec
push
ficom
and
fimul
mov
ins
xchg
pshufw
lds
cmps
in
add
mov
jle
or
cmp
fst
in
dec
(bad)
jg
push
sub
xor
cli
call
or
in
pop
bound
mov
inc
imul
jge
lods
sub
scas
inc
mov
int
int
or
pushf
lods
repnz
jge
cmp
pusha
lea
cdq
or
cmc
cld
cmp
in
push
bound
aam
in
in
(bad)
data16
xchg
fucomp
std
cld
xchg
xchg
sbb
mov
mov
test
loopne
leave
imul
sbb
dec
cld
sub
shl
cdq
lods
popa
shl
add
push
aad
or
call
jg
or
test
mov
mov
ja
lds
sub
or
add
sbb
dec
ror
out
push
cmps
or
popf
cld
ficomp
sub
xor
push
loop
movs
out
cdq
cmp
imul
fimul
mov
and
cli
or
mov
(bad)
inc
arpl
pushf
sti
lahf
sahf
add
inc
sbb
or
sub
sbb
inc
hlt
adc
xchg
and
test
or
(bad)
sbb
fnsave
mov
dec
or
rcl
sub
and
outs
bound
(bad)
call
rcl
sbb
push
cmps
mov
scas
adc
xor
mov
clc
fucomp
sub
xchg
rcl
loop
mov
mov
sbb
mov
cmc
retf
xchg
je
or
(bad)
sbb
or
loope
(bad)
xor
adc
or
int3
jae
pop
inc
loope
fst
pop
lock
or
ffreep
xchg
int
out
bound
cdq
and
xor
or
retf
inc
cmps
int3
or
data16
mov
mov
or
clc
mov
data16
jmp
sbb
aaa
test
pop
ins
mul
sbb
fucom
cli
lea
or
popf
mov
mov
fadd
jge
fisttp
or
neg
pop
xor
je
lahf
popf
sbb
retf
shl
mov
pusha
jle
test
mov
cmp
push
enter
or
retf
imul
pop
lds
push
arpl
(bad)
aas
jo
sub
scas
iret
adc
imul
mov
add
retf
jle
das
iret
ds
into
or
or
dec
popa
cmc
ins
sbb
and
or
mov
inc
test
cmp
retf
icebp
cmp
or
jb
mov
jmp
sbb
add
enter
gs
push
pop
or
mov
mov
push
push
push
cs
sbb
ins
repnz
fisttp
mov
pop
or
or
jbe
xor
imul
shl
pop
ud2
fdiv
movs
arpl
mov
call
bound
or
js
inc
push
xchg
fidivr
pop
sbb
or
je
push
in
xor
(bad)
in
repz
dec
add
push
lahf
je
pop
fstp
mov
xor
sbb
out
pop
dec
enter
jle
bound
stc
enter
mov
bound
xchg
or
sbb
(bad)
or
jp
pop
cli
cmp
fstp
lock
mov
and
fisttp
(bad)
xor
sub
push
mov
xor
or
call
pop
jmp
push
mov
clc
dec
add
or
mov
retf
pop
movs
jecxz
cwde
xor
jmp
pop
jmp
and
fisttp
or
frstor
push
pusha
mov
ss
fnstsw
mov
mov
mov
call
adc
sub
push
out
add
add
nop
cld
pop
loop
add
or
sbb
ds
cmp
mov
fstp
jne
mov
lahf
jmp
repnz
lea
hlt
mov
sbb
jo
gs
mov
inc
xor
aas
mov
out
lods
fstp
and
dec
or
jp
not
cli
jae
push
add
(bad)
cmps
xchg
jge
or
test
and
mov
mov
pop
test
add
and
out
arpl
leave
fadd
pusha
icebp
jbe
nop
and
fcom
add
stc
mov
mul
or
inc
xlat
push
add
lock
lock
jmp
retf
mul
and
loop
mov
or
mov
pop
xchg
inc
icebp
jmp
cmp
div
sti
fidiv
in
bound
sbb
idiv
out
or
cmp
cld
fnsave
xor
popa
or
std
xor
jbe
loop
aad
jp
std
push
ja
fidiv
or
scas
neg
push
add
iret
inc
movs
daa
dec
or
popf
in
dec
cmp
and
mov
mov
ss
sbb
xor
jnp
fld
mov
adc
jae
in
scas
adc
push
shr
(bad)
sub
cmps
loope
movs
push
pop
add
sbb
stc
or
pop
mov
mov
sub
sbb
add
xor
sbb
(bad)
das
bound
push
fimul
scas
pop
push
pop
mov
add
rol
mov
xchg
jb
imul
scas
aaa
lods
adc
bound
mov
mov
out
push
loop
cli
or
mov
pop
std
bound
mov
xor
in
add
mov
bound
movs
je
xchg
push
lahf
into
(bad)
lock
(bad)
bound
jge
push
mov
jmp
out
fadd
xchg
es
jns
mov
rcr
and
push
or
jbe
add
(bad)
iret
cmp
movs
or
jb
test
jno
js
loope
or
(bad)
jmp
sti
clc
push
out
sbb
or
mov
or
in
mov
xor
js
aad
push
(bad)
in
and
xor
jnp
in
pop
leave
bound
mov
add
(bad)
fldcw
imul
cmp
shl
mov
push
and
(bad)
jmp
or
mov
fcomp
fsubp
jg
jb
sti
fdivr
cmp
xor
or
adc
and
aam
add
push
fs
les
cld
pop
adc
or
movs
pop
lds
dec
aam
les
xchg
and
xor
int
mov
xor
mov
fst
push
jb
pop
iret
idiv
pop
(bad)
mov
or
add
movs
daa
lahf
bound
adc
ins
jo
or
mov
mov
stc
scas
mov
arpl
stos
jbe
ficom
int
fdiv
adc
movs
into
push
add
bound
in
adc
mov
pop
sbb
stc
dec
jp
fbstp
xchg
sub
mov
ret
popa
loope
jge
(bad)
cmp
pop
fisubr
arpl
mov
adc
mov
cld
js
mov
bound
xor
or
sahf
lods
movs
push
xor
push
xor
in
xlat
bound
(bad)
or
scas
mov
sar
out
(bad)
gs
or
sub
addr16
pop
outs
push
sbb
popa
popf
test
or
fbstp
xchg
adc
(bad)
mov
adc
(bad)
pushf
leave
cmp
mov
dec
lods
and
out
mov
mov
cmp
bound
cli
dec
cmps
cmp
cmp
jl
test
movs
add
sub
fwait
bound
push
dec
movs
push
fnstsw
enter
mov
cld
pusha
sub
call
pop
jp
daa
test
div
or
xor
pop
sub
ficom
imul
pushf
rol
push
es
pushf
lds
add
jae
in
shl
stc
dec
cdq
sub
test
push
jp
mov
(bad)
ss
sbb
jo
mov
mov
outs
rcr
out
inc
hlt
shl
ins
add
push
push
js
dec
jg
icebp
fcmovu
stos
aas
daa
mov
dec
pop
xor
xchg
cmp
push
ss
cmp
jmp
fild
fnsave
cmp
or
sahf
xor
pop
sbb
ins
lss
xchg
and
add
loop
dec
ja
shr
mov
movs
xchg
sub
cld
jg
mov
or
ins
push
jb
es
inc
(bad)
fisub
out
cli
dec
add
or
out
cmp
jge
movs
ffree
xchg
inc
(bad)
stos
push
in
or
leave
mov
repnz
ja
inc
repnz
mov
arpl
bound
pop
jno
lods
sub
dec
js
xchg
mov
mov
cwde
retf
enter
push
dec
int3
and
aad
adc
mov
loop
or
aas
cld
dec
loop
xor
js
mov
idiv
mul
leave
push
ror
scas
in
repnz
jle
push
rdpmc
gs
shl
add
out
pushf
mov
std
mov
leave
inc
int3
ins
les
bound
jle
rcr
mov
outs
push
and
sti
mov
fnstsw
cmp
or
arpl
movaps
mov
cmp
sbb
or
cmp
cmps
mov
mov
add
movs
enter
dec
loope
and
mov
mov
in
icebp
mov
das
movs
je
add
mov
cld
pop
or
fwait
adc
jmp
int3
test
out
lds
in
(bad)
jbe
imul
arpl
mov
and
sub
xor
loop
sub
(bad)
fsub
ror
or
test
cmp
cwde
pop
mov
inc
jp
out
out
cmp
test
fldln2
out
or
popf
fs
sub
ins
inc
loop
inc
cmp
inc
test
cmp
repnz
leave
mov
stos
sbb
push
add
add
pop
add
mov
popf
or
or
lahf
fnstsw
mov
pusha
arpl
mov
xlat
les
repz
xlat
fcmovnu
xor
jno
push
mov
or
icebp
ds
pop
jns
mov
cmc
add
js
cld
loope
push
add
push
mov
ret
pop
in
retf
data16
xchg
jnp
inc
sar
retf
pop
inc
mov
pop
ret
cmp
sbb
or
daa
sub
scas
jecxz
jb
cmp
or
push
jl
or
xchg
push
adc
imul
pusha
mov
pop
sbb
push
test
push
adc
ffree
aaa
fidiv
in
addr16
inc
pop
mov
and
(bad)
and
cdq
or
lock
pop
in
ret
loopne
repz
ins
into
retf
movs
cdq
adc
pushf
cs
xchg
hlt
xchg
or
mov
call
repz
pop
(bad)
mov
out
lds
int3
lods
xchg
ja
adc
adc
and
ror
ins
arpl
jl
xchg
xchg
es
lods
scas
mov
sub
push
push
fist
xlat
xchg
jl
cmp
repnz
or
pop
add
cld
lahf
out
call
test
leave
cmp
bound
xchg
push
or
ss
cmp
test
not
out
fnstsw
or
dec
pop
ins
and
xchg
push
(bad)
dec
xor
or
fdivr
das
fstp
mov
xor
mov
cmp
das
add
cmps
jle
xor
(bad)
jg
mov
stc
dec
lea
ds
sub
xchg
ins
popa
dec
bound
shl
in
test
cld
sbb
push
mov
fst
clc
repnz
inc
stc
jns
sbb
sbb
hlt
push
jne
loope
pop
inc
aam
pop
in
ins
xor
jle
xor
cs
imul
bndldx
aas
out
pop
mov
addr16
in
stos
jae
repz
or
and
repz
cmps
pop
out
xor
jmp
ss
lsl
sti
push
bound
push
ficom
or
(bad)
cmp
das
push
gs
push
in
(bad)
mov
or
or
or
lods
mov
in
inc
sbb
sub
mov
fldenv
ret
jae
jae
dec
mov
call
loop
push
or
fcomp
pop
aad
ret
mov
add
jmp
(bad)
fucomp
popa
add
ret
pop
sbb
cmps
jg
xchg
mov
pop
bound
(bad)
leave
test
cmps
xor
dec
push
dec
jnp
jne
fucom
xchg
aam
jecxz
pop
jle
repnz
jecxz
jne
jmp
(bad)
addr16
lods
or
dec
sub
cmc
and
(bad)
inc
xor
fld
pop
outs
push
or
xor
sbb
(bad)
xchg
dec
or
sbb
add
pop
nop
imul
shl
cmps
xor
jge
xor
pop
xchg
push
jg
hlt
jb
inc
or
adc
out
out
(bad)
fmul
pop
call
pop
or
inc
inc
pop
repz
in
ret
xor
lods
cmps
mov
hlt
lea
(bad)
loop
jb
scas
pop
jmp
retf
sbb
in
arpl
pop
ret
repz
rol
lock
xor
in
mov
mov
pusha
aam
loop
inc
mov
lods
and
cmp
push
dec
sub
popf
add
sbb
inc
or
stc
stos
mov
fst
and
pop
and
cdq
or
or
push
cmps
sti
bound
push
cld
hlt
or
mov
sahf
or
and
push
and
or
sub
adc
dec
dec
jp
jmp
pop
or
mov
xchg
jmp
mov
mov
mov
mov
arpl
loop
push
inc
out
adc
je
push
or
inc
cwde
mov
out
dec
add
sti
push
cmp
dec
bound
add
cli
adc
pop
adc
inc
bound
dec
sub
and
hlt
mov
inc
inc
fnstsw
rcl
or
xchg
lds
and
fdivr
popa
mov
imul
mov
lods
(bad)
xlat
jmp
call
jb
dec
ret
neg
or
(bad)
stos
popf
(bad)
or
mov
bound
mov
push
and
int3
lods
out
stos
push
mov
jle
inc
jb
cmp
mov
js
aas
in
(bad)
hlt
xor
xchg
fnstsw
sub
pop
scas
inc
icebp
lods
or
pop
jbe
repnz
and
jmp
sbb
cmp
or
faddp
fwait
loope
and
fdiv
ficomp
cli
inc
and
(bad)
fnstsw
sbb
mov
mov
jae
pop
cmp
outs
mov
and
dec
or
data16
sti
dec
out
pop
popa
int
cmp
xchg
mov
in
or
push
shr
add
sbb
dec
dec
fcmovnu
sub
outs
dec
imul
cmp
mov
call
sub
and
retf
pop
mov
sub
aad
and
rcr
mov
dec
and
ret
xor
cmc
jno
(bad)
sbb
fistp
leave
nop
push
cmp
xchg
(bad)
lods
stos
repnz
sub
enter
cli
or
mov
stos
ins
fsubr
ror
aas
bnd
or
or
push
bound
cmp
loope
or
sub
xor
xor
fs
loopne
les
pusha
enter
je
or
inc
sbb
bound
arpl
dec
push
stos
or
inc
dec
ficom
cld
fnstsw
aad
or
test
retf
push
adc
das
sub
cmp
or
sbb
ror
push
or
lea
mov
and
cmp
std
push
mov
repnz
test
fs
sbb
jnp
and
mov
inc
bound
test
cmp
add
inc
test
fld
and
or
rol
js
out
adc
int
push
jle
sub
add
rol
fisubr
adc
or
jnp
cmp
cs
inc
fstp
(bad)
dec
movs
fwait
push
push
add
in
mov
push
push
stos
fadd
fdiv
call
fs
in
fistp
lods
dec
xor
lock
imul
retf
stc
bound
fdiv
ss
int
fldenv
ins
add
pop
lods
outs
jg
pop
or
mov
cmp
sub
(bad)
xor
or
imul
std
bound
in
adc
mov
lods
jno
or
mov
test
bound
push
push
sub
or
movs
retf
inc
daa
scas
jecxz
ds
jmp
call
cmp
bound
sbb
sub
out
fwait
bsr
jge
or
mov
dec
ror
xchg
test
in
imul
bound
mov
pop
je
rol
jae
loope
cmp
and
inc
sub
idiv
imul
cmp
aaa
stos
xchg
cld
xchg
mov
in
push
cld
pop
repz
test
test
dec
rol
mov
inc
bound
mov
cmp
sahf
xor
cmps
fcomp
cmc
pop
pop
in
push
xlat
ds
push
push
icebp
jg
cs
pop
xor
jne
fld
push
data16
div
mov
fild
movs
int3
pop
cmp
and
xor
int3
aas
xor
fs
dec
and
lods
bound
les
test
push
enter
or
cld
stc
icebp
bound
not
mov
pop
or
ficom
mov
add
xor
out
ins
fst
fiadd
mov
bound
pusha
stos
push
push
in
fidiv
and
and
aas
mov
in
arpl
std
sbb
ins
jbe
gs
pop
ins
bound
pusha
ins
ds
add
ja
ins
enter
push
lds
es
lock
dec
cmp
xchg
repz
mov
vcvtps2ph
mov
ss
xor
adc
jp
and
xchg
sub
mov
aaa
aam
jno
test
fldcw
cmps
call
mov
or
mov
inc
fst
lods
addr16
jbe
fld
dec
(bad)
or
mov
daa
ja
(bad)
sub
jb
ins
lods
adc
mov
aam
icebp
mov
dec
rcr
adc
add
int
push
shl
push
sahf
lods
loopne
sti
adc
or
rcl
mov
fld
and
stos
push
es
or
mov
bound
push
dec
cmps
or
leave
ret
pop
or
jge
sub
xor
mov
repz
sub
push
loop
imul
loopne
sub
xchg
nop
sbb
or
out
cmp
popa
xor
movs
add
mov
jbe
ss
cld
fcomp
nop
dec
ret
and
adc
enter
popa
shl
mov
xor
(bad)
push
popf
push
push
push
pop
push
or
jno
jge
or
pop
call
popf
push
dec
clc
test
inc
mov
xchg
push
push
retf
mov
cmp
inc
dec
js
or
dec
jg
in
iret
fld
rol
pop
mov
clc
push
jbe
je
pop
dec
bound
sub
pushf
(bad)
out
repnz
or
mov
and
sub
and
mov
dec
(bad)
ret
das
xchg
ffree
popf
inc
shl
xor
jmp
dec
pop
jecxz
sbb
out
add
rcl
pop
xor
jle
mov
mov
jmp
cmp
clc
fisttp
push
push
push
or
(bad)
or
or
inc
push
arpl
(bad)
call
repz
sub
lock
sub
push
xchg
jb
or
adc
in
bound
stc
mov
or
gs
popa
in
ret
fst
jmp
ss
or
sub
mov
dec
int
sbb
or
int
jb
xor
sbb
add
loopne
adc
mov
cld
and
mov
pop
fs
mov
test
in
and
or
les
sbb
xchg
sub
jecxz
cmp
jmp
test
and
fldenv
xor
outs
inc
arpl
bound
mov
imul
cmp
imul
mov
jmp
icebp
or
jmp
sub
or
xchg
inc
sub
in
xor
add
pop
jns
cwde
fsub
mov
jo
fcom
fidiv
out
mov
in
or
adc
fidivr
add
mov
dec
or
add
mov
inc
bound
loopne
pop
shl
xor
icebp
ret
jns
retf
clc
neg
hlt
bound
cmp
jecxz
lock
or
cmc
add
pop
or
bound
fist
xor
retf
pop
push
frstor
pushf
imul
or
and
and
frstor
repz
or
loop
or
add
in
dec
fucomip
xchg
jne
push
adc
loop
pop
push
pop
test
cs
retf
or
int
push
jmp
jns
jg
(bad)
in
test
cmps
or
dec
add
bound
mov
ret
push
xor
cmp
ficom
in
test
stos
or
cs
mov
frstor
(bad)
retf
fisttp
jnp
mov
(bad)
jl
fwait
bound
mov
push
fstp
sub
sbb
xchg
and
leave
jp
jnp
neg
ficom
mov
inc
int3
sbb
jmp
int
(bad)
sbb
stc
out
sar
xchg
leave
or
fs
int
sub
(bad)
aam
fcmovnbe
mov
jne
or
add
call
popf
(bad)
mov
mov
je
or
fs
out
push
bound
jl
mov
and
jns
jo
or
dec
mov
add
sbb
push
data16
pop
hlt
xor
call
and
jne
jecxz
jmp
xchg
rcr
stos
test
mov
sbb
daa
xchg
mov
std
(bad)
push
adc
or
mov
jge
cmp
jmp
add
or
jge
mov
jecxz
pop
fdiv
fld
push
or
mov
push
out
int
xchg
dec
pop
addr16
or
push
dec
mov
bound
dec
data16
iret
dec
call
dec
push
outs
push
mov
bound
mov
sbb
sbb
outs
cmps
pop
fld
add
mov
or
dec
xlat
xchg
xor
scas
fnsave
pop
retf
or
aad
adc
jp
icebp
repnz
mov
test
stos
and
push
aaa
mov
hlt
sub
fsub
mov
dec
add
pop
xchg
repz
mov
dec
fcom
rcr
cmp
dec
mov
xchg
mov
nop
add
or
pop
or
imul
cmp
inc
cmps
mov
js
(bad)
bound
sub
or
adc
into
iretw
xor
call
(bad)
or
mov
in
mov
rol
mov
mov
cs
push
adc
aaa
repnz
pop
fistp
push
or
adc
popf
imul
inc
inc
scas
and
mov
xor
and
(bad)
xchg
or
int
adc
adc
or
inc
add
dec
ja
ficomp
push
test
jecxz
jns
sbb
add
jo
jg
aaa
or
clc
rcr
xchg
bound
xchg
call
bound
arpl
xor
aam
pushf
xor
mov
mov
mov
bound
dec
mov
imul
sbb
cmp
stc
fst
sti
out
in
push
sub
xor
mov
cmp
inc
adc
xlat
push
jecxz
or
fwait
shl
mov
mov
add
pop
shl
inc
add
repnz
(bad)
fcomp
cmp
jmp
stos
lock
stc
clc
cmp
fsubr
xchg
inc
push
sbb
cmp
jnp
ficom
outs
gs
mov
aam
mov
call
cmp
or
ja
(bad)
out
repz
ret
or
and
jl
inc
(bad)
test
cdq
cli
or
sub
mov
test
jl
outs
out
jecxz
bound
dec
sbb
shl
jp
in
ds
rol
cli
inc
or
ficomp
bound
xchg
ja
or
inc
shr
jge
call
imul
pop
or
dec
rcr
adc
sub
ss
sbb
xchg
push
cmp
leave
ja
jne
sar
rcl
xchg
es
cmp
or
cmp
call
add
(bad)
retf
ret
int3
mov
(bad)
lods
out
sub
fsubr
adc
mov
inc
or
jl
jecxz
dec
out
sbb
pop
push
xchg
hlt
cli
add
push
bound
dec
loop
or
push
icebp
out
shl
int
ret
repz
sar
jae
inc
repnz
cmp
pop
fisttp
retf
daa
xor
bound
out
aaa
pop
sub
or
sub
fs
pop
and
or
iret
pop
push
xor
mov
pop
bound
pop
movs
jecxz
xchg
xchg
push
cwde
(bad)
fs
add
cmp
mov
dec
(bad)
jmp
jns
vpsubsw
in
(bad)
jae
ins
lds
mov
mov
push
popa
jb
ins
xor
mov
or
sti
mov
test
add
out
ins
jg
mov
int
jmp
addr16
(bad)
cmp
mov
fsubr
imul
cdq
sahf
in
and
inc
clc
repnz
inc
retf
jge
imul
push
mov
and
sub
jb
sub
sub
fsubr
jg
xor
shr
jmp
bound
mov
ds
pcmpeqb
mov
rol
sub
dec
repz
xor
dec
push
ss
neg
mov
mov
lahf
or
rol
jle
dec
ss
not
push
aas
or
and
fcmovbe
cld
sbb
test
ret
mov
(bad)
rcl
or
jmp
das
mov
ss
adc
xor
dec
push
fidiv
mov
or
mov
cwde
adc
jmp
lea
inc
or
mov
jl
jmp
mov
jl
loopne
xchg
out
test
fbld
test
mov
popf
(bad)
leave
sbb
ficom
enter
dec
and
stos
in
ror
sbb
arpl
ror
xor
push
ss
pop
mov
pop
or
out
sbb
test
(bad)
push
or
or
fs
fsub
pop
sbb
fwait
in
or
ins
jmp
shr
nop
cwde
inc
int
push
mov
scas
aas
add
in
pop
jmp
push
xchg
(bad)
jge
fidivr
mov
outs
ret
out
cmp
sub
cwde
jae
mov
ret
std
adc
(bad)
xor
sub
push
dec
push
or
add
call
outs
imul
or
cs
mov
cs
fstp
xor
mov
repz
int3
pushf
out
and
mov
lea
icebp
push
or
xor
out
mov
scas
addr16
fidiv
xor
arpl
inc
jnp
cmp
adc
fstp
inc
adc
jl
loopne
and
and
int3
jmp
or
aaa
sti
or
mov
push
xor
sbb
cs
scas
(bad)
push
popf
outs
rol
loop
fwait
aaa
pop
cs
xchg
call
enter
gs
sbb
xchg
sbb
addr16
dec
adc
pop
or
hlt
inc
jmp
(bad)
sbb
xor
inc
fld
or
rcl
mov
sbb
data16
mov
or
bound
xchg
(bad)
lock
out
lahf
shl
popf
or
repnz
retf
and
jle
mov
jecxz
cmps
std
fisttp
adc
fwait
icebp
mov
mov
call
or
push
xchg
push
bound
cs
or
inc
js
test
mov
dec
inc
in
push
or
push
daa
fwait
xchg
push
pop
sahf
sahf
aaa
sub
int3
jl
mov
or
test
mov
cs
pop
popa
inc
outs
or
rol
clc
fld
cwde
sub
hlt
ds
or
mov
push
(bad)
movs
and
jmp
adc
mov
iret
mov
push
lock
xchg
bound
or
movs
add
je
int
dec
aas
in
jmp
in
cdq
jmp
and
jmp
xchg
aam
xchg
cdq
or
mov
or
mov
and
mov
add
and
add
xor
jmp
pop
push
push
pop
sub
mov
xchg
and
push
inc
push
setb
adc
add
in
inc
enter
arpl
mov
outs
test
sub
cmp
or
xchg
int3
inc
jmp
dec
ds
add
pop
mov
cmp
repz
xchg
sbb
or
mov
arpl
jg
mov
mov
adc
mov
add
test
cli
in
cmp
push
xchg
mov
lock
jae
xchg
iret
bound
shl
dec
add
push
shl
add
pop
pop
bound
mov
inc
or
or
aad
adc
je
cmp
imul
mov
ficom
and
lea
dec
retf
icebp
cmps
pop
push
fisttp
test
mov
stc
(bad)
leave
popf
pop
scas
movs
jge
pop
loop
sub
add
out
addr16
gs
jmp
adc
pop
push
or
test
add
int
add
or
cmp
clc
adc
push
inc
push
mov
or
out
xchg
mov
dec
jbe
loop
sbb
fld
mov
or
and
sub
icebp
mul
repnz
loop
mov
cdq
xor
in
popa
fild
mov
mov
cwde
out
test
xchg
jp
jecxz
or
out
adc
rcr
in
mov
inc
or
pop
(bad)
and
jbe
rol
retf
dec
(bad)
pop
xchg
test
and
ror
lods
ud2
pop
in
das
mov
or
xor
mov
arpl
inc
sbb
test
inc
jecxz
or
mov
xor
or
test
pop
xlat
in
cld
push
sti
pminsw
stos
jbe
dec
repz
ret
loope
dec
xor
or
adc
adc
jnp
lods
sbb
gs
jnp
or
loopne
dec
inc
(bad)
outs
pop
stos
mov
jo
pop
or
js
call
in
rcr
loop
add
enter
pop
jg
cmp
es
out
aad
lods
cmp
xor
push
call
or
inc
xchg
lds
inc
mov
outs
hlt
fsubr
xlat
inc
or
daa
dec
psrld
retf
xchg
bound
cdq
hlt
adc
mov
mov
inc
inc
fucomp
pusha
mov
loop
test
je
sar
dec
bound
mov
sbb
cmovb
lds
fstp
push
bound
popf
gs
cld
jb
ins
mov
fld
sub
or
std
lea
in
cmps
adc
in
jecxz
mov
sbb
or
sub
js
xor
push
mov
sub
cmps
or
fcom
out
push
or
bound
fwait
rcl
bound
dec
xlat
in
cmp
rcr
and
pop
add
or
outs
xor
into
fdivrp
xchg
add
or
repnz
adc
popf
gs
stos
scas
js
scas
(bad)
icebp
cwde
and
push
sar
rcr
lock
jl
xchg
test
rcr
pop
mov
cwde
jbe
and
push
or
dec
xor
push
int
xor
mov
out
pop
sahf
stos
or
cld
inc
sub
cmps
in
dec
gs
sbb
mov
mov
les
pop
inc
pop
adc
or
aaa
sbb
mov
pop
pop
retf
in
dec
stos
loop
(bad)
repz
frstor
cmp
jge
inc
outs
aaa
les
rol
cmp
scas
and
packsswb
clc
dec
pop
mov
sbb
fcom
nop
ins
adc
leave
or
pop
ins
mov
loopne
imul
(bad)
or
sub
daa
cmovne
sub
xchg
lea
jnp
and
inc
push
(bad)
es
pusha
aad
push
pop
loopne
jbe
inc
jb
sbb
pushf
cwde
or
cwde
rcr
bound
nop
je
pusha
push
(bad)
out
(bad)
pop
sbb
mov
push
sbb
xchg
js
aam
call
sub
bound
add
sub
ror
iret
fcom
lock
xchg
bound
outs
mul
pcmpgtw
mov
ss
inc
add
js
adc
push
test
(bad)
dec
mov
mov
push
mov
retf
push
fiadd
dec
xor
lahf
xchg
mov
sbb
imul
or
loope
pop
push
sub
fdivr
int
ret
push
fisttp
inc
arpl
push
ins
cmps
ret
or
outs
sbb
bound
cmp
stos
dec
xor
add
call
inc
dec
push
aaa
jg
in
js
pop
out
pop
inc
in
inc
(bad)
std
gs
fdiv
pushf
stc
lea
sub
sbb
pop
and
mov
addr16
xchg
ret
adc
(bad)
lahf
retf
sub
ret
neg
add
bound
cmp
fadd
lods
cmp
xchg
or
fmul
cdq
xor
sar
jno
inc
in
fcmovu
xor
mov
and
and
mov
or
cmp
jmp
int3
leave
stos
pop
push
sbb
sub
add
mov
inc
loop
and
mov
or
addr16
bound
clc
push
inc
or
(bad)
mov
adc
enter
xchg
or
cwde
mov
cmp
int3
add
mov
xchg
jb
or
ret
sbb
test
push
mov
xchg
or
(bad)
mov
pop
fstp
mov
aaa
sub
movs
or
in
xor
mov
ror
sub
adc
bound
enter
xor
jmp
std
(bad)
xor
pop
sbb
or
sbb
rcl
add
jo
jo
mov
sar
mov
pop
fstp
in
test
xor
sub
mov
(bad)
fadd
pop
or
sub
push
cli
mov
(bad)
outs
mov
data16
retf
or
inc
in
mov
add
frstor
sbb
adc
not
dec
xor
fst
or
lahf
jp
and
or
jl
mov
cli
sbb
sbb
jmp
in
int3
bnd
out
fstp
mov
add
or
and
xor
sbb
mov
push
stos
test
enter
ins
mov
mov
cmc
or
retf
lahf
push
push
dec
inc
bound
or
and
push
mov
clc
adc
xchg
sbb
(bad)
xor
add
test
add
push
mov
call
out
(bad)
adc
je
pop
js
sbb
dec
jl
fucom
shr
je
add
push
pop
jno
lods
or
ss
popf
imul
xor
loop
inc
cmp
jmp
and
cmp
movs
add
or
mov
dec
sti
frstor
loop
fbstp
xchg
sbb
inc
pushf
outs
adc
in
ds
cwde
shl
(bad)
xor
add
scas
in
jno
lock
jne
or
movs
push
adc
out
cmp
(bad)
jp
jnp
mov
cmps
test
dec
bound
ficomp
or
ins
ja
push
lock
jo
add
das
neg
pop
bound
je
stc
or
lods
pop
ss
aad
ror
mov
dec
mov
mov
inc
or
xchg
out
ins
std
mov
(bad)
xchg
jbe
jmp
shl
or
(bad)
in
xchg
and
add
push
cli
rol
mov
bound
repz
or
retf
jno
cld
push
loope
mov
fcomi
sbb
call
ror
bound
xchg
or
adc
push
int3
mov
pop
sar
loopne
or
inc
fbld
adc
mov
bound
pop
inc
pop
cmp
shl
test
sbb
cs
cmp
test
or
mov
out
add
aaa
stos
push
mov
dec
aam
or
icebp
inc
scas
loopne
retf
ins
fwait
cmps
xor
fsub
scas
pop
icebp
inc
mov
jl
sub
call
ret
or
mov
fild
mov
jmp
adc
sar
in
sar
out
scas
push
rcl
adc
gs
jb
in
scas
mov
test
imul
int3
jb
data16
pop
push
or
push
jmp
call
pop
mov
and
(bad)
mov
add
and
out
fimul
stc
fimul
adc
mov
xor
sbb
or
xchg
cld
adc
jbe
fst
cmps
in
jno
test
or
mov
and
hlt
xchg
shl
cli
mov
or
vphaddwq
dec
in
xchg
or
jmp
inc
fwait
mov
test
jo
mov
std
adc
jno
push
mov
cld
add
sub
pusha
mov
bound
push
push
aad
jo
jle
ds
es
inc
dec
dec
pop
outs
out
sahf
ffree
rol
and
or
or
ins
sub
xor
bound
rcl
xchg
clc
imul
cmp
adc
dec
adc
popa
mov
xchg
stos
into
fmulp
pop
xchg
jg
xchg
xchg
cli
fwait
adc
or
push
xchg
aad
movs
bound
stc
pop
jnp
(bad)
retf
jne
dec
xchg
fld
aaa
and
sbb
lods
or
sub
cmp
sahf
pop
push
mov
or
in
lahf
std
cmc
jmp
fisttp
and
inc
or
xor
cli
mov
xchg
or
xlat
or
dec
push
mov
inc
ins
in
in
movs
xor
fwait
mov
dec
or
jp
nop
gs
lods
outs
popf
fnsave
jmp
or
jge
js
xchg
jo
pop
pop
imul
mov
jmp
sub
repnz
cdq
leave
test
loop
test
in
(bad)
pop
jl
mov
xor
or
ja
mov
push
ins
neg
and
cld
outs
cmp
xchg
js
sub
aaa
gs
sbb
dec
mov
mov
add
bound
dec
mov
push
push
fucomp
pop
into
jbe
fdiv
and
inc
call
into
push
inc
push
fstp
rol
add
test
inc
jmp
daa
mov
or
jl
xchg
and
dec
frstor
loop
mov
or
lock
dec
aad
jecxz
ins
popf
jne
cwde
lahf
fstp
fadd
push
mov
(bad)
inc
mov
push
xchg
mov
or
mov
dec
dec
enter
sbb
imul
loop
fisttp
pop
xchg
adc
jge
inc
fstp
call
icebp
sbb
cmp
adc
outs
xor
and
or
cmc
or
sbb
int3
or
ficom
lahf
pop
stc
sub
lods
mov
into
jno
and
xor
test
push
add
push
mov
and
push
dec
movs
(bad)
or
ins
jbe
xchg
adc
popa
retf
push
push
enter
jno
pushw
call
mov
xor
mov
add
inc
xor
clc
in
outs
adc
xor
ins
mov
loop
or
call
ins
sbb
push
imul
fisubr
test
out
fstp
and
enter
xor
frstor
adc
push
push
dec
mov
clc
frstor
add
test
aas
cli
cli
out
gs
sub
or
call
das
popf
or
sub
fisttp
adc
into
inc
arpl
sbb
(bad)
lock
in
or
jae
fbstp
xchg
test
(bad)
xlat
adc
sub
xchg
cmp
ins
dec
aad
or
cmp
cmps
movs
iret
rep
xchg
adc
xchg
xchg
clc
or
adc
jb
pop
mov
bound
cld
ret
pop
jl
sub
shl
aas
bound
xor
int
int
movs
int3
xchg
dec
nop
nop
fst
adc
out
stc
jo
enter
fs
call
or
mov
and
inc
adc
shr
das
dec
or
jmp
inc
gs
mov
gs
fst
in
pop
fistp
cli
fisub
pusha
pop
les
shl
or
push
mov
dec
outs
pop
rcr
imul
pop
cmps
dec
loop
jo
sar
jnp
mov
jmp
ds
dec
xor
addr16
sbb
inc
gs
adc
jmp
cmc
or
mov
(bad)
call
sub
mov
ret
lds
fst
pop
dec
cmp
and
push
arpl
and
ss
or
std
in
jecxz
lds
mov
cmp
popa
mov
(bad)
mov
gs
arpl
bound
push
imul
push
and
dec
(bad)
xlat
or
xor
mov
pop
jae
sti
retf
mov
pop
xchg
xchg
retf
push
adc
sahf
inc
movs
shl
(bad)
xchg
lds
shl
out
lods
fnstsw
ror
mov
mov
mov
in
out
mov
std
call
mov
or
mov
or
mov
mov
fiadd
call
sub
popa
out
into
or
inc
lods
mov
adc
bound
je
adc
dec
dec
push
stos
or
mov
mov
sub
and
add
jns
(bad)
mov
jnp
xor
iret
pop
adc
out
cmp
outs
bound
adc
push
xchg
dec
push
popf
daa
push
mov
mul
jecxz
hlt
cmp
jmp
std
add
ret
lods
push
ja
call
out
scas
scas
or
inc
hlt
imul
xlat
int3
icebp
or
mov
jmp
sub
or
or
mov
into
mov
pusha
jg
xchg
push
and
enter
inc
adc
or
pop
jae
mov
sbb
iret
dec
xor
stc
(bad)
inc
add
es
sub
in
data16
movs
mov
adc
cmp
loop
arpl
in
jb
fnstcw
adc
cmp
inc
and
xor
fucomip
out
sub
shl
(bad)
cmc
cdq
and
movs
xor
sub
or
loope
ins
adc
popa
fsub
push
mov
ror
fst
push
aad
scas
pop
addr16
loop
ror
sub
cmp
call
(bad)
sbb
inc
lods
pop
fld
jb
lods
in
adc
add
jno
es
or
xchg
push
pop
and
inc
mov
sar
pop
sub
and
jecxz
fisttp
and
xchg
or
sbb
mov
mov
xchg
cmp
or
mov
dec
mov
xor
mov
mov
dec
shr
aam
ret
test
movs
retf
sub
nop
ret
or
push
outs
ret
mul
(bad)
(bad)
in
jae
adc
leave
stc
mov
std
ins
add
mov
xchg
mov
push
pop
shl
movs
outs
push
rcr
out
mov
iret
leave
dec
pushf
cmps
sbb
jg
or
add
les
xor
aad
in
adc
sti
inc
fst
jecxz
jecxz
add
cmp
sub
cmp
sbb
mov
scas
in
xor
and
mov
pop
xchg
mov
fnstenv
dec
fnsave
add
inc
cld
add
mov
mov
xchg
or
add
dec
xchg
xchg
dec
js
jb
(bad)
xor
push
jnp
jnp
or
and
mov
inc
adc
leave
setl
les
xor
mov
mov
xchg
fwait
dec
fnstsw
movs
mov
add
mov
jmp
xchg
ja
jecxz
sbb
or
out
or
push
inc
and
push
aam
shr
jecxz
dec
xor
(bad)
jmp
es
jl
mov
retf
daa
retf
lods
test
or
inc
push
adc
test
aas
adc
or
mov
(bad)
dec
pop
shl
sub
pop
loop
cmp
frstor
test
or
mov
jo
das
sahf
popa
retf
cmp
jo
or
xchg
nop
stos
or
pop
fucomp
push
mov
pusha
jb
jl
or
hlt
xchg
faddp
adc
enter
inc
icebp
sub
adc
pop
or
mov
xchg
inc
fnstcw
in
ss
repz
dec
or
repz
outs
repnz
out
mov
or
adc
psraw
xor
div
cmps
je
jmp
icebp
(bad)
push
daa
or
clc
mov
bound
outs
or
mov
je
cmps
(bad)
shl
bound
fcmovnbe
xchg
or
ss
mov
jmp
ficom
cmps
not
xor
repz
xchg
fstp
add
leave
(bad)
out
fild
cmps
xor
pushf
mov
repz
cmc
movs
xor
or
xchg
sbb
fstp
sub
adc
retf
test
neg
sub
cmp
or
test
mov
or
xchg
jmp
push
(bad)
(bad)
div
push
push
push
js
adc
add
mov
dec
ret
pushf
and
xchg
fidiv
mov
fld
pop
into
add
pop
sub
pusha
pop
or
mov
and
nop
bound
pusha
cmp
aaa
add
cmps
rep
push
leave
sub
ror
ds
cld
fiadd
jp
bound
push
out
cmps
movs
fild
popa
test
in
fs
std
lods
addr16
bound
xor
sti
lods
nop
or
sub
mov
nop
test
pop
outs
or
inc
inc
pop
pop
jle
leave
bound
adc
jmp
or
in
loope
fwait
(bad)
cmp
ret
jmp
or
mov
fstp
or
sbb
test
sub
mov
fidiv
mov
jne
xchg
bound
retf
pusha
das
and
es
retf
jmp
ja
xlat
lahf
call
inc
xchg
or
jl
cdq
push
and
hlt
jge
shr
aas
pop
je
ss
fucomp
pushf
mov
mov
fwait
int
ror
or
sub
not
call
or
adc
xchg
es
pop
add
adc
xor
ins
bound
push
xchg
scas
cli
xchg
ins
mov
pop
xchg
enter
je
dec
(bad)
add
aad
xor
or
add
sti
adc
loope
pop
outs
xor
pop
push
jno
out
js
rcr
mov
dec
outs
mov
cmp
jge
mov
jecxz
test
ds
out
cmp
fnsave
lds
or
adc
mov
or
into
jmp
stos
retf
bound
inc
jae
or
push
add
rcl
(bad)
fstp
cwde
xor
into
pop
mov
imul
pop
add
push
sbb
jbe
imul
and
and
fcomi
jb
mov
add
sbb
dec
in
xchg
inc
xor
adc
cmp
fadd
scas
and
outs
push
dec
mov
(bad)
pop
sahf
imul
and
inc
lods
mov
pop
rol
hlt
nop
or
jge
stc
lods
jmp
cmps
mov
adc
out
mov
mov
out
push
aas
mov
or
bound
dec
ror
mov
pop
mov
pop
mov
arpl
dec
sbb
dec
pop
arpl
xchg
push
mov
or
(bad)
out
popa
std
in
outs
jne
and
out
shl
lods
in
adc
mov
and
pop
fst
sub
or
imul
cmps
jno
int3
(bad)
add
cmps
xchg
inc
mov
sahf
adc
jmp
sbb
push
fbstp
sub
in
cmp
pop
gs
add
add
movs
adc
cmp
adc
int
aam
cmp
fdiv
daa
mov
add
nop
ja
add
inc
fidivr
paddusw
xor
sub
mov
inc
fsub
sbb
push
and
rol
add
popa
jne
mov
fbld
jne
jnp
jp
push
retf
ss
leave
mov
movs
push
mov
push
fwait
pop
gs
movs
mov
(bad)
aaa
or
mov
fnstsw
lahf
and
and
bound
pop
inc
(bad)
fstp
outs
lock
push
xor
add
jmp
adc
or
or
out
mov
lock
(bad)
imul
ror
rcl
xchg
mov
das
je
bound
shl
iret
mov
xor
mov
push
popf
fisttp
aas
dec
mov
out
or
or
fs
fisub
ret
mov
inc
lods
jecxz
(bad)
jle
jo
inc
pop
iret
xor
or
mov
mov
adc
mov
leave
pop
adc
sub
loope
pop
mov
adc
mov
add
mov
cmp
add
or
xor
pop
cs
lods
cmp
xchg
jb
cmps
add
inc
dec
rol
mov
xor
and
xchg
or
or
mov
mov
dec
xchg
ins
and
js
inc
or
js
dec
mov
mov
stos
call
hlt
dec
mov
cmps
(bad)
gs
mov
in
dec
sbb
pop
mov
pop
mov
push
or
mov
xor
or
jp
mov
in
ror
mov
imul
mov
(bad)
pop
call
jb
cmps
sub
or
dec
sbb
and
ins
adc
inc
mov
adc
or
dec
pop
popa
shl
bound
dec
push
mov
or
dec
and
shl
inc
(bad)
jo
adc
or
lahf
bound
xchg
jbe
cld
jne
or
sbb
fldcw
(bad)
int3
jo
in
push
ror
nop
mov
mov
cdq
pop
outs
adc
imul
push
mov
enter
mov
sar
adc
(bad)
xor
mov
data16
stos
cmp
sbb
push
scas
or
inc
(bad)
mov
jmp
aaa
stos
ret
cmp
fimul
pmulhw
ficomp
push
imul
or
push
inc
imul
cmp
cld
scas
or
test
pop
aad
xor
add
les
pmovmskb
lea
push
mov
aad
mov
fld
pop
sub
sub
out
push
fisttp
jbe
loopne
sti
cmc
cmp
int3
dec
stc
or
lods
push
mov
sbb
(bad)
push
xchg
ins
es
(bad)
loop
or
(bad)
leave
jmp
mov
mov
xor
sets
dec
fiadd
out
or
loopne
retf
pop
jno
enter
push
inc
adc
leave
pop
dec
mov
jnp
push
not
or
mov
pop
jmp
and
xor
fdiv
push
aad
popa
add
push
(bad)
inc
fstp
or
shr
inc
mov
sub
sbb
mov
and
call
call
(bad)
shr
imul
xchg
or
cmp
fdivr
lds
retf
imul
dec
fs
call
lds
inc
dec
ss
xchg
or
pop
or
cwde
push
mov
mov
in
add
pop
not
xor
int3
mov
sub
ficomp
jbe
cmps
jnp
xor
fsub
ja
dec
lods
ins
cdq
sbb
loopne
sub
dec
ss
cmc
xchg
xor
mov
or
sbb
lock
stos
xchg
bound
in
(bad)
nop
or
push
loopne
(bad)
in
pop
mov
jecxz
call
xchg
mul
inc
test
xor
test
or
and
cmp
movs
sub
sbb
cmp
mov
adc
push
sbb
outs
push
or
outs
mov
and
jg
jecxz
js
sbb
outs
iret
gs
test
ret
outs
dec
push
mov
mov
dec
mov
leave
cmp
dec
dec
or
jmp
push
rcl
sbb
adc
retf
je
or
mov
popa
out
ins
mov
add
lods
cmp
or
call
icebp
mov
sbb
jmp
cld
arpl
jae
fdiv
push
int3
in
hlt
dec
jge
add
or
fwait
pop
sahf
icebp
js
and
(bad)
xor
add
cmp
lods
sbb
pop
mov
sub
dec
add
xchg
leave
cs
(bad)
push
adc
cdq
pop
cmps
iret
test
mov
mov
fst
jp
jp
or
push
push
inc
rcl
add
fadd
in
xchg
sub
mov
or
mov
mov
pushf
mov
xor
mov
sbb
or
mov
push
cli
push
test
or
cmps
jbe
cdq
rol
and
imul
jge
rol
mov
mov
and
xchg
adc
fst
sbb
leave
xor
fst
in
jnp
sbb
or
xchg
imul
and
jmp
stos
mov
or
and
or
cmps
xor
loopne
pusha
mov
movs
sub
jg
hlt
int3
cmps
(bad)
sbb
or
mov
push
ror
mov
loopne
js
dec
mov
stos
or
(bad)
cmp
retf
(bad)
fnstsw
arpl
pop
je
sti
xlat
(bad)
(bad)
sbb
ss
sbb
sub
adc
ret
gs
cmp
cmps
fidivr
adc
add
ficom
(bad)
cmp
outs
inc
dec
xor
dec
bound
and
neg
jp
nop
sub
arpl
dec
adc
movs
fst
push
dec
test
rcr
push
sar
jecxz
jge
dec
punpckldq
jnp
arpl
mov
push
mov
dec
and
fisubr
mov
push
mov
ja
call
cwde
sti
or
cmp
xor
adc
rcr
or
push
les
bound
in
mov
imul
add
fstp
push
jmp
ja
shl
lods
(bad)
sar
repnz
dec
and
(bad)
or
fimul
jnp
jecxz
fucomp
imul
or
mov
in
inc
sub
cdq
jns
fisttp
mov
retf
inc
stc
push
or
mov
gs
inc
cmp
add
mov
or
inc
sbb
or
inc
aad
or
call
cmp
aaa
mov
fnstcw
xor
bound
in
add
mov
or
lds
xor
ins
jne
push
sub
sti
pop
(bad)
fnsave
movs
xlat
sub
stos
icebp
loope
or
push
add
and
jge
ss
pop
or
pandn
std
dec
mov
or
gs
enter
fbld
bound
adc
push
ror
cmps
or
xor
cmp
aaa
add
and
dec
test
sbb
cmp
lods
cdq
jge
fld
lock
dec
xchg
cmp
dec
pop
push
fild
push
pop
or
hlt
fstp
mov
ficomp
sbb
or
(bad)
cli
mov
dec
xchg
jg
fadd
dec
push
push
adc
ret
(bad)
lahf
loopne
imul
fisttp
jne
jge
jmp
adc
push
cmp
fmul
(bad)
xchg
push
mov
jbe
or
mov
outs
bound
idiv
rol
ss
jmp
sbb
cmp
mov
jmp
ins
jl
test
mov
or
cmp
leave
repnz
fld
pop
mov
adc
xchg
jge
push
aas
sub
sub
xor
sub
inc
bound
aad
cmp
(bad)
in
out
or
lods
fstp
mov
jp
in
sbb
data16
jmp
(bad)
sbb
repz
mov
adc
hlt
or
sar
push
call
push
push
sub
test
sbb
(bad)
loope
xchg
pop
or
ror
cdq
and
scas
jge
or
xchg
inc
fisubr
lods
shl
inc
or
xchg
(bad)
loope
scas
jg
add
push
xchg
xchg
mov
or
and
sub
js
push
fstp
and
std
cmc
jae
or
pushw
push
dec
inc
or
sahf
movs
stc
out
mov
lahf
pop
test
push
rol
jge
aas
mov
pop
mov
adc
loopne
bound
out
hlt
adc
movs
xor
xor
dec
ror
popa
lods
and
daa
xchg
fist
cmps
or
mov
push
(bad)
(bad)
jmp
pop
sbb
pushf
call
ficomp
inc
iret
shl
imul
and
or
sub
dec
or
es
in
adc
fs
jae
(bad)
fidiv
or
out
test
dec
mov
sbb
lods
test
imul
or
in
sub
outs
cmp
or
fcomp
arpl
push
repz
test
sbb
lock
(bad)
fmul
add
mov
(bad)
add
sbb
cmps
add
push
lods
pop
sbb
rol
mov
shl
aas
scas
repnz
mov
ds
imul
mov
mov
cmp
mov
xchg
adc
test
repz
xor
xor
lods
jp
cld
mov
jmp
cmps
jecxz
pop
scas
pop
gs
xchg
xchg
add
add
(bad)
dec
jmp
cmp
(bad)
fld
int
adc
shl
push
mov
adc
(bad)
push
js
pop
or
sbb
(bad)
or
js
sbb
repnz
push
bound
xchg
lods
xor
aas
adc
loope
add
shl
mov
push
dec
mov
out
lea
xchg
sbb
test
jne
fcomp
and
inc
push
or
sub
cwde
test
in
mov
mov
retf
pusha
popf
cli
loopne
pop
test
inc
mov
add
imul
pop
lea
lods
and
imul
adc
ror
or
or
xchg
and
(bad)
jmp
inc
lock
shl
movs
mov
push
shr
push
xor
push
shl
jne
(bad)
sbb
fsub
dec
push
popf
push
pop
jnp
adc
sar
dec
add
retf
test
mov
pop
or
sbb
push
enter
pop
inc
imul
sar
and
push
ret
or
mov
cmp
xchg
xor
and
jbe
iret
mov
data16
mov
xchg
sbb
or
outs
ficomp
xchg
adc
js
mov
sbb
lea
je
or
leave
xor
ret
cmp
add
pop
push
push
xchg
push
lahf
lods
pop
push
imul
mov
mov
or
addr16
bound
and
imul
and
cmps
mov
repnz
jnp
or
mov
mul
icebp
scas
sub
out
div
int
imul
adc
call
dec
mov
pop
and
retf
sub
and
aas
dec
cmp
(bad)
push
lods
mov
imul
into
xchg
test
in
adc
call
sti
mov
in
pop
jae
xchg
xchg
or
popf
cmp
movs
int
jle
pop
test
lds
add
or
or
dec
jge
cmps
pushf
clc
jle
hlt
arpl
in
or
dec
pop
jp
mov
int3
sbb
or
mov
cs
inc
or
dec
hlt
(bad)
mov
mov
arpl
aas
cmovae
mov
add
sub
sbb
cmp
(bad)
mov
hlt
or
xchg
bound
fs
clc
dec
or
inc
loop
ins
xchg
cmp
ud0
or
ret
jmp
fmul
aad
aam
or
inc
mov
out
pusha
xor
sahf
xchg
or
shl
fcmovbe
or
jmp
les
mov
ds
dec
adc
push
or
dec
add
mov
pop
mul
test
or
arpl
adc
call
or
mov
xchg
jmp
sub
jge
and
mov
jecxz
frstor
or
cmp
cdq
sbb
bound
addr16
je
jnp
(bad)
dec
push
cdq
mov
and
jns
mov
jl
xor
push
mov
fcomp
cld
call
mov
xor
dec
aaa
shl
gs
popa
fld
jb
pop
sub
adc
bound
cmc
sub
pop
mov
sub
arpl
popa
lahf
fdivr
or
out
(bad)
in
into
adc
call
rcr
bound
push
push
inc
mov
pop
mov
mov
sbb
mov
fmul
sbb
and
mov
xchg
or
jecxz
cmp
push
scas
icebp
and
mov
cmp
push
push
popa
jle
int3
jno
add
lea
and
add
adc
push
or
fiadd
add
cmp
dec
xor
mov
xchg
cmp
inc
sar
push
jns
scas
data16
pushf
mov
cmps
or
jge
mov
ins
xlat
jecxz
outs
jmp
sahf
fucom
xchg
enter
add
arpl
ds
les
ror
outs
pop
pop
gs
xchg
mov
es
mov
das
sbb
iret
or
jecxz
outs
mov
cwde
data16
inc
sub
mov
aam
xchg
adc
cs
fst
scas
pop
retf
dec
into
or
imul
and
pop
jl
mov
dec
mov
sub
or
dec
or
fidiv
gs
aaa
loope
or
jge
call
mov
xchg
(bad)
xor
daa
(bad)
bound
mov
gs
out
or
xor
inc
xor
mov
add
jecxz
cmps
call
mov
add
bound
xor
ror
xor
jae
add
(bad)
cmps
stos
cmp
data16
cdq
inc
cmps
push
jl
xchg
test
dec
or
pop
sti
outs
cmc
bound
addr16
nop
xor
(bad)
int3
jg
cmps
rol
mov
jne
xchg
mov
xor
pop
pop
xchg
mov
push
aam
fisubr
mov
lods
mov
(bad)
ror
mov
pop
fmul
mov
and
aas
bound
push
mov
neg
xchg
or
xor
ud0
add
test
push
bound
xchg
mov
cbw
loope
imul
mov
adc
cs
and
mov
or
jmp
test
or
and
sar
mov
fwait
sbb
outs
mov
jo
mov
add
or
es
or
loope
ins
fld
mov
jno
mov
bound
iret
scas
mov
test
mov
xor
or
mov
inc
jmp
jle
dec
or
adc
into
mov
cmc
daa
adc
test
inc
push
sub
adc
bound
inc
xor
fisttp
adc
mov
(bad)
jg
inc
jg
popf
imul
xchg
jnp
inc
in
fcomp
xchg
shl
cs
xchg
xchg
ret
push
push
or
push
or
fadd
js
mov
xchg
cmp
test
jle
popf
out
mov
bound
int3
mov
inc
lea
jne
dec
idiv
movs
(bad)
push
out
fisttp
pop
dec
fwait
xor
cmc
bound
sub
mov
popa
movs
shl
mov
or
repnz
xchg
aas
mov
push
bound
(bad)
vmovdqa
outs
dec
lea
jge
mov
bound
sub
and
add
or
ins
push
pop
cmc
mov
lea
mov
lds
arpl
mov
mov
sbb
pop
pop
push
sub
mov
xor
or
out
xor
outs
mov
adc
ss
mov
rcr
xchg
mov
inc
and
jge
loopne
mov
and
jbe
mov
js
inc
dec
cmp
daa
shl
add
repz
mov
movs
fstp
push
sbb
jno
or
pop
xchg
call
daa
jo
inc
pusha
push
or
lahf
ret
sub
call
movs
dec
or
fwait
cmp
pop
sbb
jl
lods
imul
les
test
daa
sbb
enter
pushf
call
sub
jns
or
(bad)
das
mov
(bad)
mov
scas
in
sbb
fs
or
outs
pop
rcr
and
push
(bad)
fisub
out
cmp
loopne
add
rol
fld
bound
xor
femms
jo
add
xchg
stos
arpl
out
pop
mov
das
call
leave
pop
mov
jns
or
jns
sti
mov
fst
mov
add
and
sbb
push
adc
ret
inc
or
sbb
fnstsw
xchg
lods
paddusw
mov
out
sbb
in
jmp
xor
sub
xchg
dec
xchg
addr16
add
push
xchg
mov
nop
scas
xchg
mov
mov
(bad)
(bad)
fcmovnbe
and
lods
and
nop
js
or
add
mov
or
pop
xchg
sbb
ja
mov
xor
or
add
xor
shl
mov
mov
out
add
sbb
add
adc
shl
sbb
sub
add
jg
xor
ins
dec
ja
pop
or
sbb
fcom
sbb
xor
je
mov
pop
movs
push
fbstp
add
or
test
jmp
sbb
gs
add
scas
rol
sbb
jle
or
sbb
fiadd
scas
fisttp
mov
mov
iret
or
iret
arpl
pop
cmp
cmp
push
popa
shl
bound
and
jno
xor
pop
jo
aam
xor
stos
cmc
jp
inc
loop
mov
dec
repnz
pop
mov
xchg
loop
clc
cld
js
pop
push
and
fstp
in
mov
jecxz
dec
jo
mov
sar
jmp
popa
sub
gs
fcmovb
or
in
jnp
xor
(bad)
mov
xchg
or
mov
dec
lock
adc
or
retf
sub
xchg
cli
(bad)
xchg
lods
add
repz
shr
cmp
inc
fsub
xchg
mov
sti
shr
or
inc
scas
retf
leave
lds
fisttp
dec
std
icebp
pop
mov
ror
adc
fstp
jb
arpl
xor
fidivr
(bad)
in
fcmovb
xchg
mov
pop
add
xchg
pop
jmp
cmp
jg
or
ret
mov
add
movd
(bad)
outs
neg
add
fdivr
mov
iret
jnp
ffree
pop
cmc
test
sub
lea
cmp
or
pop
mov
es
push
fwait
cmp
jns
mov
dec
bound
shl
dec
clc
lds
add
push
stos
or
mov
daa
mov
arpl
(bad)
jae
or
fstp
xor
and
shl
sub
ja
adc
mov
sbb
sbb
push
and
outs
sbb
cld
jge
fs
xchg
mov
push
push
jnp
mov
fisttp
cmps
sti
or
xlat
ins
fcmovne
and
jno
(bad)
fcmovu
jl
cmp
(bad)
imul
push
frstor
inc
sbb
daa
mov
or
pop
jmp
inc
bound
lea
aad
xor
mov
inc
mov
js
push
mov
or
fidiv
popa
inc
sti
mov
mov
pop
or
(bad)
push
aaa
sub
mov
shl
mov
lods
inc
or
jge
and
jg
or
pop
popf
fcmovu
jb
or
mov
ds
jl
scas
mov
pop
dec
or
adc
(bad)
popf
jbe
arpl
inc
fcmovbe
jmp
in
mov
fnsave
pop
jge
lock
xchg
push
add
pop
or
jmp
lock
stos
bound
retf
and
xor
pop
push
pop
retf
in
ficomp
cmp
gs
sti
jb
jnp
lock
rol
cmp
rcl
call
bound
pop
pop
gs
push
sub
mov
push
or
pushf
jl
clc
ror
fnstsw
loop
lods
or
add
jl
test
call
push
push
adc
stc
cs
dec
(bad)
jbe
ror
inc
call
repnz
sbb
std
int3
xchg
movs
ror
pop
clc
pop
aaa
imul
jb
fstp
leave
mov
jle
(bad)
push
aaa
mov
pop
push
sbb
fnsave
pop
pop
cmp
xchg
add
mov
cmp
fstp
sbb
jne
mov
loop
and
inc
add
adc
in
mov
outs
ins
mov
fs
ins
or
jno
mov
mov
loopne
push
mov
jg
out
rcr
pop
stos
or
push
push
push
neg
push
sbb
test
fnstenv
add
or
lock
repz
je
mov
sbb
adc
test
xor
lds
or
xchg
stc
aam
lods
rcr
adc
(bad)
stos
cld
or
cmps
add
pop
mov
fs
add
mov
adc
movs
inc
sti
xor
bound
xor
scas
push
dec
in
loop
xor
iret
pop
jae
fisub
add
das
and
into
lods
jnp
jecxz
gs
je
mov
mov
das
pop
adc
or
test
lea
cmps
sub
jp
or
pop
in
movs
pushf
test
pop
inc
fbstp
or
sbb
fcomp
rcl
sti
in
pop
jp
scas
push
mov
mov
dec
dec
pop
dec
jp
ficomp
xchg
stc
cmp
or
add
icebp
inc
cli
ja
bound
test
(bad)
(bad)
jmp
ja
add
mov
or
stos
stos
out
push
sub
fcom
add
lods
loope
mov
fucom
jae
fisubr
add
pop
test
push
lock
dec
fidivr
int
inc
xchg
cmps
jge
sbb
push
mov
mov
cwde
stos
ds
lods
aad
ficomp
cmps
aas
mov
aad
xor
xchg
jg
retf
in
jmp
out
or
sbb
push
(bad)
les
mov
jmp
pop
mov
add
sahf
jbe
mov
je
cwde
mov
cmp
cmc
mov
lahf
stc
push
fnsave
jle
mov
ror
(bad)
ffreep
fstp
xchg
inc
stc
jo
push
in
or
mov
sub
lahf
xor
pop
mov
imul
cld
test
cmp
mov
and
mov
fld
jg
cmc
sub
in
mov
repnz
add
inc
pop
sbb
aam
and
push
push
aad
int3
push
pop
adc
add
cmc
out
gs
(bad)
push
xchg
inc
xchg
ins
call
mov
ror
test
dec
or
xor
pop
add
dec
ins
fldenv
stos
fucomp
add
cmps
mov
cmova
mov
sahf
or
cmc
std
scas
lods
sahf
and
fnstsw
jne
jle
mov
aad
push
test
pop
loop
push
sub
or
test
cdq
jge
push
mov
das
mov
mov
nop
adc
iret
or
xchg
mov
jno
sub
cmp
(bad)
retf
dec
xchg
adc
out
jbe
add
sub
sbb
lods
pushf
das
ret
fld
jmp
ss
push
or
adc
popf
test
xchg
push
fld
stos
icebp
or
pop
pop
out
popa
sar
popf
add
aad
add
adc
jbe
cwde
loop
(bad)
jg
sbb
pop
movs
(bad)
push
out
fbld
dec
cmp
mov
adc
pusha
xor
(bad)
fucom
inc
imul
cmp
jbe
and
pop
mov
les
das
frstor
fwait
int3
imul
movs
or
lea
xor
add
loop
test
sub
neg
nop
inc
bound
push
push
or
pop
or
rcl
inc
aad
mov
das
sahf
mov
fcmovnbe
ror
lahf
push
popf
mov
aam
bound
clc
pop
or
test
lds
xor
xchg
add
inc
das
lods
or
cmp
jmp
ins
jnp
dec
jae
jb
or
jb
sub
pushf
sub
mov
mov
adc
repz
outs
push
jle
jo
gs
call
mov
mov
xor
shl
dec
mov
or
xor
and
or
test
cld
xchg
ins
repz
popa
jae
sub
jne
fwait
mov
push
cdq
cmp
idiv
sub
bound
xchg
xchg
add
mov
push
fiadd
cld
xor
mov
les
sbb
mov
cwde
cmp
dec
scas
pop
out
or
fs
popf
cld
pusha
xchg
jnp
mov
shr
push
lods
lds
or
jle
mov
sub
push
in
movs
or
hlt
mul
aaa
dec
jo
frstor
aam
(bad)
cmps
xchg
inc
or
mov
fisubr
icebp
ror
mov
mov
mul
shr
xor
push
cmp
adc
clc
sbb
in
sti
sub
pop
add
fbld
inc
push
call
sub
jge
sti
mov
aad
in
or
aas
or
and
dec
aaa
dec
rol
jbe
push
enter
mov
scas
lods
or
inc
fisub
xor
nop
out
push
mov
mov
bound
sti
mov
pop
je
ss
jge
aas
sub
fwait
adc
pushf
outs
stc
push
mov
lods
stos
dec
loopne
or
or
inc
xchg
rcl
(bad)
mov
enter
or
and
lods
rol
aas
das
and
or
das
out
add
push
mov
xchg
mov
or
cmps
pop
mov
and
rcl
or
lods
inc
clc
fistp
push
fisub
or
shl
mov
sub
stc
fst
sub
inc
mov
retf
retf
popa
sar
imul
mov
xchg
imul
scas
jmp
bswap
inc
or
(bad)
push
ins
mov
or
sahf
inc
(bad)
out
ins
cmp
(bad)
lds
jecxz
into
sahf
mov
xor
or
int
std
bound
mov
aad
cmp
(bad)
add
fstp
arpl
sbb
or
sbb
jne
fild
icebp
inc
jns
fiadd
add
sbb
push
or
dec
push
loop
arpl
mov
mov
mov
setnp
in
fstp
inc
or
or
cmp
fst
push
ror
std
pop
repnz
loopne
jle
punpckhbw
stos
push
stc
inc
adc
sbb
mov
cmp
loopne
or
mov
iret
mov
std
push
popa
jns
cs
out
(bad)
lahf
aad
movs
cmps
or
arpl
inc
hlt
pop
daa
push
dec
lods
xchg
loop
mov
adc
sub
mov
sbb
dec
clc
dec
or
or
ja
test
or
dec
push
popf
push
pop
iret
test
push
div
(bad)
add
jo
dec
in
add
jl
rcl
js
or
mov
sub
(bad)
push
bound
jno
cmp
push
jle
sbb
arpl
sbb
mov
mov
test
retf
or
stc
pop
int
jmp
and
mov
lea
jnp
mov
pop
vcvtdq2ps
jnp
or
and
xchg
ror
or
sub
cld
xchg
adc
add
inc
adc
inc
lds
lods
arpl
cmp
movs
mov
inc
je
int3
mov
push
xchg
inc
bound
(bad)
add
or
outs
lock
fs
fsincos
jnp
adc
mov
repz
loop
adc
ins
push
pop
ficom
mov
add
push
dec
les
dec
in
sbb
cmps
mov
bound
ins
bound
fst
or
cmp
sbb
sub
and
cwde
or
xchg
ret
mov
imul
mov
idiv
cmps
icebp
cmp
xchg
fisubr
es
or
add
or
dec
mov
push
daa
or
lds
cmp
xchg
loopne
or
jns
xor
sbb
xor
xor
retf
aas
jl
sub
jp
pop
push
and
fisubr
or
mov
xchg
adc
int3
in
repz
jb
(bad)
out
xor
mov
sub
imul
loop
jge
inc
cld
adc
lock
cmp
mov
mov
mov
jns
pop
xor
ror
cmc
sbb
and
(bad)
pop
and
or
imul
ds
dec
xchg
popa
xchg
xchg
push
or
dec
jb
jl
cmps
xor
xor
loop
xchg
out
outs
jnp
or
pop
lock
pop
jae
or
mov
sbb
(bad)
cmp
test
xchg
jecxz
dec
icebp
test
es
pop
enter
test
xchg
jge
cmp
or
nop
inc
pop
or
adc
retf
mov
jae
dec
adc
and
into
arpl
or
loopne
popf
lods
in
or
sbb
data16
push
inc
xor
jp
cdq
push
out
inc
enter
dec
or
sbb
sbb
sbb
cmps
sbb
or
sar
xor
bound
or
mov
mov
inc
fstp
add
dec
stos
pop
jmp
and
sub
mov
add
or
sbb
cwde
jp
inc
fisttp
jnp
xor
push
nop
lds
leave
hlt
ins
adc
push
push
aas
sbb
xlat
dec
sbb
sbb
cmps
das
or
inc
scas
push
rol
xchg
fmul
adc
movs
popa
sar
loopne
aas
mov
iret
jns
cmc
test
jo
add
dec
and
or
xchg
mov
mov
sub
cli
xor
or
sbb
mov
jnp
movs
cmp
xor
mov
fisttp
cmps
mov
imul
frstor
shl
jge
jmp
or
push
ds
bound
jg
ror
mov
sub
mov
cld
push
ret
(bad)
rcr
fidivr
int
(bad)
and
or
mov
xchg
and
cld
adc
or
dec
jmp
jno
rcr
mov
sub
or
ins
inc
addr16
pop
sub
(bad)
mov
xor
inc
dec
sti
jno
(bad)
fst
sbb
mov
cmp
sub
pop
dec
dec
inc
ins
scas
xor
inc
xlat
jg
mov
std
(bad)
jle
test
outs
push
sub
movs
(bad)
fidiv
aas
fimul
cwde
pop
sub
dec
inc
imul
movs
retf
inc
adc
ja
jmp
mov
inc
jp
mov
dec
fistp
cmp
push
mov
aam
pop
push
int3
cmp
popa
test
scas
jae
(bad)
pop
sub
dec
add
mov
fcmovbe
adc
inc
repnz
cmp
cmps
adc
cwde
aas
repnz
repnz
fstp
xchg
inc
or
mov
or
sbb
bound
out
movs
mov
sbb
lahf
pop
addr16
dec
fstp
add
jmp
shl
sar
xor
xchg
dec
(bad)
adc
mov
les
scas
pop
ret
inc
adc
sub
fiadd
push
sub
mov
cli
sbb
pop
cmp
xor
outs
or
(bad)
add
jbe
popf
xor
loopne
mov
mov
cld
jg
sub
jb
loopne
out
fs
sbb
add
jae
xchg
dec
ins
xchg
dec
popa
xchg
call
jnp
jo
mov
mov
test
icebp
frstor
rcr
push
mov
mov
fld
mov
mov
dec
push
and
mov
inc
or
xchg
jno
outs
pop
adc
jecxz
int3
cli
push
outs
jmp
cmp
(bad)
jle
icebp
push
mov
or
or
xchg
sbb
leave
ror
mul
stos
test
fidivr
mov
push
loopne
pop
retf
xchg
sbb
in
mov
(bad)
and
aaa
cld
jne
mov
fs
ficom
or
neg
adc
lahf
push
jl
mov
mov
jmp
jae
or
xchg
xor
inc
mov
add
push
mov
popa
icebp
into
sti
cmp
add
mov
popf
icebp
inc
jmp
test
push
or
jg
in
add
xchg
jl
lods
sub
or
xor
ror
mov
or
mov
(bad)
stc
jl
popa
dec
bound
je
ret
jmp
or
test
inc
fnsave
jbe
adc
test
aaa
leave
bound
cli
test
fstp
xor
or
xlat
arpl
cdq
clc
retf
repnz
adc
bound
(bad)
cmps
(bad)
fucomi
dec
lea
jae
vmovsd
adc
push
fld
sbb
or
cmp
shr
lods
(bad)
mov
(bad)
ins
mov
dec
sub
and
jmp
jl
cli
bound
es
aam
or
inc
ret
jb
das
sti
inc
sti
jg
jl
hlt
jmp
fisttp
jae
lock
shr
pop
mov
mov
retf
push
paddd
dec
out
loopne
loop
mov
xor
ins
icebp
fnstenv
and
fcomp
sub
pusha
fisttp
push
and
das
nop
int
(bad)
pop
xchg
imul
xchg
int
frstor
cdq
push
sbb
push
dec
or
lahf
jno
bound
(bad)
or
ror
inc
dec
mov
cmp
cmps
arpl
jmp
pop
and
pushf
out
xor
out
xchg
pop
or
add
cli
sbb
gs
data16
mov
and
les
jne
jge
cmp
aad
(bad)
mov
or
imul
jl
lds
pusha
or
mov
hlt
bound
add
sbb
bound
dec
loopne
mov
arpl
ficom
adc
or
or
cmc
loope
xor
inc
sbb
lock
xlat
leave
retf
inc
fisttp
retf
sub
add
scas
jmp
mov
(bad)
mov
ret
cmp
pop
ins
mov
sbb
shl
push
loope
shl
nop
frstor
mov
sbb
je
mov
adc
stos
add
std
mul
xor
repnz
jle
lahf
pop
or
shr
in
les
arpl
(bad)
out
shl
loope
xchg
push
push
enter
mov
cmps
out
or
pop
cmc
cli
inc
dec
mov
dec
mov
ins
data16
(bad)
fbstp
cmps
addr16
sbb
sbb
out
lds
lea
div
xchg
or
jle
lods
mov
dec
bound
sbb
and
(bad)
xchg
mov
mov
(bad)
fadd
sbb
or
in
xor
fucom
dec
or
or
sub
std
add
movs
nop
xor
mov
push
ins
dec
loopne
mov
push
fild
cmp
enter
out
loope
dec
test
dec
arpl
add
xchg
push
sbb
sbb
xchg
or
scas
aad
sub
movs
(bad)
aam
mov
sub
out
dec
adc
clc
cwde
sub
cmp
pop
add
movs
or
popa
outs
imul
mov
jmp
or
mov
mov
pop
or
cmp
xchg
setg
mov
(bad)
js
movs
mov
pop
or
or
fistp
or
popa
sbb
cmp
push
dec
pop
(bad)
fsub
ficom
fnstsw
pop
aad
adc
jmp
nop
(bad)
fidiv
int3
cmp
push
ror
ins
xlat
ss
shr
inc
enter
mov
xchg
xchg
loopne
cmp
add
xor
mov
shr
dec
aaa
fld
push
mov
cs
adc
in
push
mov
xor
dec
sbb
add
es
loopne
bound
pop
(bad)
pop
iret
into
mov
repnz
loope
fnstsw
push
sti
mov
dec
sub
or
xchg
aad
or
xor
sbb
lahf
shl
clc
movs
pop
shl
push
mov
jg
loopne
in
xor
fdivr
fmul
dec
jp
xchg
retf
js
fmul
std
jl
pusha
jno
mov
sbb
mov
push
ins
popa
cmp
mov
movs
div
add
dec
fisttp
fimul
pop
or
pusha
push
cmps
pop
inc
ud2
sbb
mov
movs
repz
cmc
bound
xchg
xor
in
popa
sub
mov
sahf
cdq
movsx
adc
(bad)
mov
jmp
daa
loopne
mov
xor
not
test
lock
dec
adc
loop
stos
in
lds
mov
pop
jge
jno
or
in
cdq
inc
jp
adc
push
jle
push
jge
or
fbld
sahf
cdq
bswap
or
inc
jecxz
test
aaa
jb
xchg
fbld
ffree
jecxz
out
xchg
inc
arpl
int3
mov
cwde
mov
(bad)
leave
popa
ret
inc
pop
jl
imul
cmc
fisub
jle
dec
loope
ds
adc
idiv
xchg
sub
(bad)
aam
adc
mov
jb
jge
jp
or
mov
bound
ins
sbb
or
aad
jecxz
mov
addr16
xchg
or
(bad)
nop
arpl
jno
bound
in
out
mov
bswap
iret
f2xm1
add
call
mov
fild
mov
dec
(bad)
mov
out
xor
jecxz
or
test
mov
frstor
lods
adc
pop
cmps
repnz
repnz
mov
mov
pop
and
jbe
or
pop
cmps
inc
cmp
movs
push
cmp
fwait
pop
pcmpeqb
xchg
inc
in
jmp
loope
pusha
ret
dec
pop
stos
ja
imul
in
int
add
arpl
add
pop
sub
mov
loopne
paddsb
add
add
push
sub
sbb
shl
or
fst
mov
inc
push
pusha
sahf
mov
and
dec
loope
mov
or
and
imul
(bad)
or
ds
pop
ud2
test
cdq
cwde
loopne
sahf
sbb
outs
bound
loope
sbb
dec
pop
bound
push
push
dec
stos
das
or
jmp
push
add
add
movs
and
bound
sbb
mov
or
repnz
clc
sub
xchg
std
loopne
mov
mov
push
mov
std
xlat
cmps
or
add
aad
sbb
out
inc
jge
jl
xor
fstp
mov
mov
add
sbb
cmps
sub
push
inc
or
in
xlat
mov
or
pop
pop
js
(bad)
loop
test
out
push
ins
ins
pushf
rcl
fldenv
cdq
jg
sar
inc
test
dec
adc
xchg
imul
or
scas
add
push
pop
dec
mov
call
pushf
ret
sub
cwde
(bad)
sahf
div
(bad)
out
or
jno
das
in
push
add
xchg
leave
icebp
jmp
popf
(bad)
fsubr
or
mov
aad
xor
and
(bad)
fstp
test
into
call
cmp
out
push
and
(bad)
retf
or
addr16
and
ins
mov
cmp
cmps
int
cdq
push
aad
mov
test
sub
ins
xor
adc
mov
mov
xor
add
bound
pop
repnz
arpl
jbe
pop
popf
ret
in
(bad)
lods
retf
into
add
(bad)
jle
jmp
int
lods
bound
push
and
push
cli
sbb
out
sahf
in
fld
into
dec
(bad)
and
lds
and
fiadd
mov
sbb
pop
scas
in
lea
stos
and
add
or
hlt
das
(bad)
hlt
xchg
mov
fucomp
mov
jno
or
retf
retf
xor
retf
add
push
test
dec
or
aas
sbb
xor
fbstp
inc
ds
mov
mov
and
push
int3
xor
test
xchg
mov
(bad)
sbb
pop
cmp
adc
mov
push
jle
retf
aad
aaa
mov
cmc
add
fstp
jg
idiv
xchg
or
or
push
cmp
bound
cmps
fsub
mov
add
shl
loope
sub
jge
(bad)
clc
adc
cmp
mov
popf
or
sbb
or
cli
loope
add
fst
and
add
loop
mov
mov
call
add
sub
out
jo
cs
cli
add
aas
fisub
mov
pusha
out
adc
popf
add
add
popf
(bad)
stos
fidivr
push
shr
in
dec
and
inc
std
xchg
cmps
loope
into
and
xchg
bound
inc
mov
int
pop
fs
inc
(bad)
cli
pop
and
dec
mov
rcr
jo
or
push
sbb
icebp
xchg
popa
mov
and
lahf
stc
pop
xchg
adc
cmp
or
stos
wbinvd
or
sbb
test
neg
dec
outs
xor
push
ret
cmp
and
(bad)
pop
xor
mov
test
sub
jnp
or
cmp
sti
or
fstp
xchg
jge
fwait
push
jp
pop
or
cmc
mov
cmc
mov
cli
ins
retf
(bad)
aad
inc
jno
pushf
addr16
shl
mov
push
push
sbb
ds
aam
faddp
out
mov
cmp
fdivr
cli
bound
jmp
or
rol
daa
(bad)
sub
or
aad
inc
push
movs
out
ret
jae
fisttp
mov
adc
pushf
popf
out
arpl
(bad)
into
mov
retf
out
xor
cmp
push
arpl
sbb
dec
push
add
pop
(bad)
jg
lods
mov
int3
or
inc
cmp
in
bound
stc
add
leave
jmp
dec
sbb
push
scas
push
bound
cld
mov
stc
pop
push
lea
pop
xchg
and
adc
scas
mov
xchg
ja
sbb
aaa
ins
or
cmp
movs
ror
jp
inc
and
clc
ret
mov
or
lahf
int3
leave
fild
fistp
and
ins
ret
pop
sbb
sbb
movs
jl
mov
fstp
xor
inc
inc
inc
add
or
sbb
imul
lahf
cmps
jmp
mov
int
or
test
stc
mov
fnstsw
call
or
add
lds
xchg
add
jb
mov
pop
(bad)
in
stc
cmc
clc
aas
jne
or
xchg
mov
pop
scas
jnp
add
jbe
jne
adc
sub
pop
pushf
mov
aad
(bad)
ret
cmc
and
in
xchg
int3
mov
mov
mov
inc
imul
stos
xor
leave
push
fucomp
pop
mov
mov
enter
jl
fcmovu
fimul
add
out
or
sub
popa
adc
jbe
jle
xor
dec
mov
or
retf
mov
int3
inc
adc
mov
repnz
fidiv
mov
cmp
ins
(bad)
mov
lods
pop
(bad)
rcr
shr
das
pushf
add
xchg
repz
fwait
jne
xchg
bound
jbe
dec
or
fld
jns
xor
fistp
xor
clc
pusha
sar
sub
stos
stos
rol
or
or
jmp
call
mov
fs
mov
sti
das
jecxz
imul
popf
clc
xchg
icebp
sbb
push
cmp
test
sbb
add
mov
dec
jbe
in
fnsave
inc
xchg
jne
lock
leave
push
into
enter
adc
movs
sbb
imul
out
push
jl
fisubr
adc
xchg
pop
or
push
call
in
fidiv
push
cmp
sbb
das
or
lods
(bad)
mov
movs
fnsave
xchg
ds
(bad)
mov
xor
cmp
sbb
push
xchg
inc
retf
stos
icebp
pop
or
int
pop
and
ins
(bad)
adc
inc
imul
ror
or
push
data16
ret
(bad)
xor
xor
aaa
sub
scas
gs
retf
popa
push
popf
mov
sti
push
or
les
enter
pusha
enter
call
fcomp
jl
push
loopne
mov
es
mov
xlat
fld
mov
xchg
xor
cmps
arpl
je
dec
or
(bad)
stc
fnstsw
mov
cld
cdq
arpl
loop
iret
mov
inc
and
xchg
sahf
push
lahf
add
mov
push
fnsave
xchg
call
cmc
or
jmp
pop
aaa
jmp
mov
repz
add
inc
fld
in
cld
adc
mov
sub
aaa
or
push
fild
retf
test
call
int3
sbb
xor
adc
mov
call
out
pop
ror
or
test
push
bound
dec
or
cmc
adc
ret
(bad)
or
les
in
inc
mov
fcomp
pop
add
inc
int3
sbb
ret
out
bound
mov
xchg
or
test
stos
fmul
pop
or
ins
push
das
gs
mov
cld
daa
push
int3
imul
mov
arpl
ret
mov
mov
faddp
xchg
fidivr
(bad)
mov
push
enter
push
or
and
add
dec
mov
data16
dec
push
jo
jp
mov
xor
mov
cld
jno
and
sbb
mov
add
fcom
sbb
xor
mov
or
and
shr
jmp
add
out
fsubr
test
mov
cdq
cmp
xchg
and
and
sbb
pop
int
or
test
sub
int3
mov
xor
or
and
xor
(bad)
sbb
mov
mov
retf
dec
test
jnp
(bad)
pop
push
xor
mov
(bad)
sub
(bad)
enter
inc
cld
lds
inc
mov
xor
dec
addr16
push
fidivr
aas
jmp
daa
cs
frstor
mov
add
or
push
stos
div
or
loop
dec
rcr
jmp
sub
cmp
xor
bound
mov
dec
das
loopne
test
jne
mov
jae
cmp
repnz
push
loopne
push
adc
int3
outs
pop
aad
xlat
hlt
pop
lods
inc
imul
and
bound
cmps
test
and
push
jmp
lea
add
mov
xchg
pop
in
jns
or
jmp
push
ficomp
or
(bad)
jge
sbb
mov
cld
sub
aad
mov
and
inc
mov
or
cmps
adc
inc
lahf
mov
fnstsw
jge
jbe
pop
imul
pop
ins
rcl
pop
ror
mov
mov
or
movs
xlat
imul
adc
jecxz
ins
cmp
or
outs
lock
stc
add
mov
or
ss
push
pop
fdiv
frstor
test
cli
push
(bad)
call
clc
sti
or
xchg
push
cld
cmp
adc
dec
mov
push
ffree
cmp
loopne
jnp
int
ins
mov
js
ror
fwait
push
or
enter
and
add
or
xor
jg
jmp
sbb
popa
pop
bound
ret
pop
aas
sbb
mov
xchg
loopne
jb
cdq
(bad)
aas
cmc
sub
or
mov
in
mov
mov
jecxz
fistp
je
or
push
and
fmul
push
test
dec
add
pop
gs
stos
imul
inc
fldenv
dec
jnp
dec
cmp
enter
into
mov
(bad)
xchg
cmps
shl
cdq
or
prefetch
test
lock
call
pop
out
push
cmp
mov
hlt
and
(bad)
(bad)
push
xor
cmp
or
je
dec
bound
pop
dec
out
mov
psrlq
xor
repnz
test
jmp
in
fnstsw
retf
sahf
inc
daa
lods
sub
mov
hlt
pushf
mov
dec
(bad)
jmp
loope
cwde
retf
jo
cmp
cs
xor
mul
mov
retf
xor
outs
in
add
fiadd
xor
cli
test
movs
or
add
loopne
rcr
xchg
ins
retf
cmps
dec
sti
ds
ds
jbe
cli
adc
std
stos
dec
adc
fisttp
stos
push
iret
or
xchg
adc
pusha
sti
add
aas
push
loopne
pop
pop
jl
sahf
or
sar
jge
cld
cmc
fnsave
gs
retf
jg
repz
lds
dec
retf
cwde
retf
inc
fwait
mov
adc
xchg
das
retf
push
push
(bad)
ffree
retf
stos
pop
add
adc
mov
in
lods
leave
(bad)
inc
inc
in
adc
xor
cli
sbb
stos
mov
clc
inc
into
jo
push
repz
mov
or
sub
or
cmc
push
mov
icebp
in
mov
scas
or
cs
inc
or
pop
jl
leave
mov
sub
cmp
sbb
push
pop
push
out
out
add
xchg
sub
mov
push
loop
aad
stos
ss
mov
push
fisttp
cmp
std
test
inc
add
mov
fwait
in
or
jecxz
fldenv
mov
(bad)
xlat
sub
inc
mov
dec
or
hlt
ret
fnsave
pop
mov
bound
sahf
xchg
in
jmp
sbb
xchg
fsubr
and
and
mov
mov
cmp
fstp
dec
(bad)
fiadd
add
pop
retf
ins
pop
cld
fdivr
jae
xchg
gs
dec
cmc
lea
jp
or
pop
sahf
jnp
dec
out
and
mov
jb
mov
push
cmp
add
and
and
and
loop
cmp
or
mov
mov
jo
dec
sbb
dec
mov
sbb
retf
in
outs
int3
test
inc
push
in
popa
movs
add
dec
retf
jo
sahf
ret
test
xchg
popa
and
lods
stos
inc
test
inc
mov
retf
ficom
ret
inc
mov
loope
jg
and
cdq
in
mov
xlat
fld
and
shl
mov
scas
mov
fsubr
ins
push
mov
add
or
xor
xor
inc
pop
dec
mov
or
sbb
sbb
fstp
lods
loopne
push
cli
out
dec
test
leave
push
repnz
fmul
and
cmp
dec
jno
lods
fcmovu
cwde
in
cmp
mov
popf
cmp
or
xchg
jle
fidivr
xchg
imul
or
push
jne
leave
outs
retf
mov
bound
test
push
adc
adc
xchg
loop
repnz
ds
push
aaa
push
ins
cs
lock
(bad)
icebp
sbb
pop
inc
jmp
or
or
ret
or
neg
and
cmp
xor
data16
mov
popa
add
add
and
retf
adc
icebp
or
in
push
lods
jb
imul
ds
xor
sbb
(bad)
call
inc
pop
push
mov
stos
repz
xchg
and
jno
adc
int3
cmp
test
loop
ss
jge
(bad)
sbb
(bad)
jbe
mov
or
push
jge
sub
mov
ja
xchg
xor
je
or
mov
out
movs
mov
scas
fld
cdq
outs
or
scas
add
gs
out
test
jo
or
dec
(bad)
sbb
not
adc
fistp
adc
and
dec
mov
fld
aam
mov
les
in
(bad)
cmp
mov
mov
bound
and
outs
cmps
sbb
add
fld
or
jl
inc
sbb
pop
xchg
das
dec
rcr
dec
jae
xlat
lock
pop
mov
add
jecxz
jmp
and
push
loop
jne
pop
test
sub
jp
or
stc
add
test
in
mov
les
xor
xor
bound
aas
mov
les
shl
mov
adc
ins
movs
cmp
inc
icebp
xchg
jp
mov
arpl
or
xchg
push
lahf
add
cld
cmp
xor
inc
movs
dec
jmp
push
xor
(bad)
mov
dec
fisubr
pop
push
gs
sub
sub
inc
pop
and
mov
sub
nop
out
push
imul
inc
call
outs
dec
les
call
out
sub
xor
mov
xchg
pop
adc
iret
dec
xchg
jb
adc
sti
push
bound
pop
xor
lock
inc
cdq
pop
fistp
sub
nop
cmp
cmp
retf
xchg
add
push
pcmpgtd
mov
rcl
fst
cwde
fmul
lock
es
push
mov
retf
aaa
sbb
or
sbb
push
jb
adc
cwde
ret
fmul
add
or
lods
jecxz
int3
sbb
xchg
adc
gs
ss
mov
jmp
mov
out
jae
imul
sub
adc
stc
imul
jne
jno
dec
ret
xchg
arpl
cmp
fnstcw
mov
fs
jecxz
jne
sub
mov
jg
retf
sbb
(bad)
shl
dec
inc
ins
jns
or
xor
xor
and
fdiv
mov
push
and
jmp
mov
out
mov
mov
add
or
xchg
pop
nop
int3
ins
shl
(bad)
mov
push
lods
leave
add
out
bound
in
bound
push
sti
sub
jecxz
or
jnp
xchg
aam
xor
sbb
and
xchg
es
xchg
pop
xor
sub
fld
cmp
push
lods
cmp
push
ins
and
lods
movs
rcl
inc
mov
mov
(bad)
cmc
mov
push
or
in
or
loopne
ins
mov
add
bound
aas
gs
ret
jb
cmp
and
sbb
mov
outs
nop
ffree
outs
xor
retf
dec
mov
(bad)
bound
retf
ja
sbb
cmp
out
or
dec
adc
cwde
mov
dec
xlat
jle
ret
or
mov
pop
popf
(bad)
and
mov
push
push
mov
ffree
mov
lds
or
add
add
ret
dec
outs
out
or
push
pop
out
rcr
inc
into
shl
(bad)
ffree
gs
and
cmovb
and
test
pop
jno
mov
mov
or
in
or
cmc
cli
push
fld
test
push
mov
jecxz
fcmove
mov
iret
jne
sub
leave
frstor
mov
stc
test
or
mov
sub
or
xor
jp
cmc
adc
mov
xchg
jbe
fnsave
shr
imul
fucomp
pop
arpl
fstp
or
adc
stc
(bad)
pusha
inc
xor
sbb
mov
inc
push
outs
loopne
ins
call
jmp
loop
or
jle
xlat
retf
pop
lods
inc
pop
call
inc
(bad)
in
ss
fmul
inc
arpl
xchg
aaa
cmc
test
movs
pop
fstp
cmp
mov
adc
into
jl
xchg
popa
xor
stos
pop
and
(bad)
call
rol
shl
sub
or
sbb
or
lods
inc
push
rcr
push
fwait
cmp
outs
retf
mov
inc
add
and
ds
(bad)
inc
jne
or
ins
out
arpl
and
outs
clc
mov
or
mov
jb
add
das
js
inc
dec
cmp
sbb
xor
push
ror
xor
and
out
push
je
jp
pop
daa
(bad)
(bad)
retf
xor
shl
pop
jp
repz
or
mov
cmps
lds
jmp
cmps
cwde
arpl
gs
pop
pop
or
mov
outs
sub
adc
movs
dec
and
popa
loope
sbb
jge
scas
or
(bad)
gs
inc
push
and
loop
mov
frstor
push
or
xchg
dec
mov
(bad)
sub
jecxz
cmps
or
mov
data16
stc
sbb
pop
or
cmp
test
lods
ret
lock
or
out
jle
sti
dec
(bad)
int3
mov
sar
loope
in
dec
retf
iret
(bad)
and
adc
bound
add
and
movs
ret
push
(bad)
movs
pop
push
pop
or
(bad)
and
ret
xor
imul
pop
sub
xchg
mov
mov
lock
int
jne
xor
jg
xchg
(bad)
mov
sbb
pop
and
mov
hlt
leave
xor
in
bound
hlt
push
fs
sbb
or
jg
and
stc
std
fsub
fwait
add
sbb
jmp
dec
xchg
sub
cmp
xchg
(bad)
repnz
mov
(bad)
jo
arpl
xor
stc
cmp
fisubr
adc
inc
div
pop
inc
xchg
pop
frstor
aad
adc
imul
sahf
std
bound
xchg
call
cli
add
fs
and
frstor
mov
arpl
lea
mov
neg
add
fwait
xor
scas
rol
out
or
mov
cdq
jns
adc
dec
fnstsw
adc
retf
data16
fld
loope
mov
or
push
add
imul
nop
mov
repnz
mov
push
push
test
aaa
push
into
xor
(bad)
out
fld
sti
(bad)
repz
clc
daa
or
push
jl
mov
shr
and
push
cmp
aam
pop
inc
iret
xchg
into
sbb
scas
inc
jg
rcr
or
pop
or
adc
sbb
mov
adc
or
ror
pop
and
pop
mov
xchg
adc
ficomp
fnsave
nop
call
jno
cmp
dec
loop
xchg
cwde
push
or
sbb
sub
repz
dec
xchg
inc
xchg
arpl
push
jl
and
or
(bad)
ds
fwait
sbb
dec
loope
push
(bad)
sar
or
push
data16
leave
cmc
das
jo
cmp
sub
sets
inc
(bad)
ins
imul
pop
pop
leave
mov
xor
and
xor
jo
sbb
ficom
push
ret
dec
(bad)
ret
dec
adc
repnz
inc
inc
jnp
sti
fistp
int
nop
cmp
cwde
scas
lods
jmp
retf
out
int
xor
cmc
jg
or
add
inc
cmps
xor
aam
fnstsw
sub
or
lea
or
cmp
std
push
sbb
addr16
test
lods
pop
mov
sbb
xchg
or
iret
scas
push
mov
cli
fdiv
ds
in
or
ins
sub
xor
in
jmp
cmps
loop
mov
(bad)
fbld
aaa
add
and
push
and
push
jno
sub
pop
or
and
test
add
jns
int
imul
adc
je
jae
sbb
les
(bad)
in
or
pop
retf
outs
out
or
push
push
mov
mov
xor
or
stos
or
ds
icebp
pop
xchg
arpl
add
xchg
adc
movs
pop
or
jne
sbb
bound
das
jp
push
pop
pop
fmul
mov
fnsave
(bad)
add
cwde
sub
aad
frstor
sub
push
arpl
sbb
pop
sub
cmps
or
xor
or
or
(bad)
movs
cli
push
cmp
fs
pop
cli
mov
int
fdiv
mov
loop
es
outs
or
xlat
arpl
xor
mov
test
adc
inc
js
xchg
add
arpl
mov
std
jno
inc
push
sbb
stc
daa
cld
je
push
and
lods
clc
pusha
sti
mov
cmp
clc
ficom
imul
lods
aaa
mov
xchg
push
fisttp
mov
pmuludq
retf
fwait
(bad)
(bad)
out
xchg
loopne
mov
popa
inc
gs
xchg
rcl
pop
bound
and
aam
jbe
bound
movs
jmp
daa
or
cld
into
idiv
adc
(bad)
ja
loope
inc
mov
mov
bound
push
push
pop
jnp
gs
xchg
call
(bad)
retf
xrelease
clc
or
pusha
jno
fistp
add
xor
sbb
popa
retf
mov
retf
out
inc
aaa
inc
pop
dec
data16
repnz
fstp
ret
scas
mov
xchg
xor
add
bound
fmul
retf
iret
pushf
dec
and
int3
fmul
sbb
dec
in
sub
out
int3
or
sbb
aas
mov
mov
movs
inc
loop
popf
sub
or
in
sti
cdq
adc
jle
push
sub
movs
push
ss
stos
add
and
pop
mov
inc
sahf
out
ins
out
ficomp
xor
add
jno
or
es
jmp
and
mov
adc
push
rcl
xlat
jp
or
fisttp
clc
out
jmp
(bad)
or
neg
and
pop
js
mov
rol
ja
fst
sub
cmps
or
push
sbb
mov
mov
adc
(bad)
js
xor
(bad)
pop
mov
pop
sbb
pop
fistp
aas
rcr
sub
or
cmp
adc
pop
and
mov
xchg
add
dec
repz
mov
mov
add
bound
into
mov
mul
pop
cmp
mov
xlat
loopne
or
jecxz
jmp
sar
ja
mov
js
fs
push
cwde
int3
fstp
dec
int
lock
mov
dec
scas
f2xm1
shl
sub
sub
pusha
xor
xor
aaa
jecxz
jp
adc
div
pushf
sbb
cmc
cs
loop
enter
daa
les
pop
loopne
in
je
inc
jle
or
imul
std
pop
mov
xchg
pop
mov
scas
in
jae
inc
pop
or
xor
jmp
jae
push
jae
jecxz
or
std
stos
sub
mov
setg
mov
out
popa
pop
(bad)
push
push
clc
fcmovne
mov
aas
enter
dec
(bad)
fdiv
inc
inc
fcomp
push
adc
adc
outs
ret
pop
in
fstp
ja
xor
jne
pop
retf
pop
(bad)
test
jo
cli
aam
dec
mov
pop
sbb
cmp
cmp
dec
jns
jmp
outs
xor
push
fisttp
dec
xlat
out
xor
dec
inc
loope
(bad)
rcl
in
sti
shr
retf
movs
pop
and
cmp
jmp
jl
std
cmp
imul
test
mov
pop
(bad)
xor
adc
jns
jg
jp
and
(bad)
in
(bad)
lahf
jp
lock
or
jnp
mov
add
or
arpl
or
cmp
jecxz
pop
fnsave
push
scas
sbb
or
movs
ins
adc
bound
les
or
dec
aam
call
mov
iret
sbb
dec
or
push
cmc
in
push
mov
xchg
addr16
retf
push
sub
repnz
sub
dec
mov
pop
dec
ficomp
adc
shl
adc
jp
daa
neg
mov
div
mov
push
mov
dec
loopne
mov
jge
in
sar
gs
and
jge
or
mov
push
imul
push
sbb
and
sbb
out
adc
daa
in
push
lods
or
and
test
(bad)
xlat
jae
int3
loop
ror
cmovb
popf
stos
mov
fidivr
cld
jns
fmul
jle
and
scas
je
in
and
jg
lock
fstp
and
fld
les
jne
cmp
imul
fst
xor
or
sub
stos
cmps
fidiv
push
sti
push
daa
add
(bad)
fstp
sbb
fucom
adc
cmp
imul
inc
inc
mov
mov
push
loope
jbe
xor
mov
js
inc
dec
fstp
out
into
cwde
or
jb
cmp
jmp
shl
push
mov
xor
mov
pop
xor
fst
mov
jb
fwait
loope
cmp
sbb
out
mov
js
or
mov
cmc
fld
in
and
or
sahf
xor
sub
xor
cld
fnstcw
or
and
jp
jnp
mov
rcr
or
and
iret
bound
push
mov
push
jecxz
xchg
dec
repz
mov
outs
movs
pop
mov
dec
adc
xor
retf
cld
loope
mov
ret
mov
mov
or
in
rcl
push
(bad)
fwait
sbb
cmc
or
in
jnp
push
jmp
cli
fwait
aam
pop
ins
aam
adc
frstor
mov
sbb
mov
push
dec
iret
fnstenv
cld
rol
into
xor
test
popf
sbb
cdq
mov
or
pop
dec
jo
jmp
mov
or
xlat
xchg
add
sub
bound
dec
js
jae
lahf
or
ja
fs
out
nop
fucom
stc
test
and
cld
paddsb
sub
int
mov
out
lock
jge
sar
dec
les
fbstp
test
call
in
or
fisttp
push
inc
shr
(bad)
pop
and
ffreep
aam
movs
pop
fisubr
fcom
jle
inc
fisttp
xlat
aas
add
(bad)
gs
or
into
mov
and
and
loopne
add
dec
data16
add
inc
xchg
loope
dec
jmp
or
pop
push
test
ffree
or
inc
pop
or
lea
xchg
cdq
inc
cmp
push
cmp
in
loopne
or
loope
xchg
pop
jno
jp
mov
clc
je
or
(bad)
mov
test
je
mov
clc
push
ins
not
xor
cmps
data16
dec
or
je
jp
test
mov
cmp
or
pop
pop
add
push
xchg
and
enter
scas
or
and
(bad)
ins
aaa
push
arpl
loopne
pop
xlat
scas
inc
adc
or
movs
cmp
sub
dec
push
std
jg
and
(bad)
mov
inc
inc
inc
aaa
add
adc
mov
leave
fiadd
push
xor
fwait
lahf
or
loope
inc
inc
lods
call
movs
add
mov
sbb
or
dec
jl
jg
out
fst
(bad)
xchg
or
xchg
add
cwde
(bad)
mov
xor
lods
leave
pushf
add
sub
push
popf
jl
leave
cmc
pop
int3
call
loope
push
jb
dec
dec
cmp
clc
inc
mov
leave
ficom
fwait
push
or
pop
je
fwait
loopne
inc
dec
or
fwait
in
(bad)
leave
cld
popf
cli
daa
jbe
xlat
loope
or
mov
pop
inc
call
add
lods
fadd
pop
pop
or
ffree
clc
xchg
fadd
and
dec
ret
popa
bound
loopne
lds
sar
cli
fst
fwait
mov
or
xor
into
push
push
dec
or
inc
mov
jno
aas
jg
fld
xchg
inc
xchg
(bad)
xor
xor
je
dec
fistp
call
in
out
mov
push
sbb
cmp
jnp
out
mov
icebp
cmp
mov
adc
stos
iret
mov
cdq
dec
push
pop
stos
or
inc
sbb
aad
mov
int3
lods
jne
sbb
movs
jl
fcom
stos
enter
jne
int
or
mov
inc
bound
sub
push
jg
out
add
jb
adc
(bad)
(bad)
dec
mov
adc
sbb
in
adc
test
inc
cmp
cmc
jmp
ja
xchg
adc
retw
and
and
or
into
push
fucomi
pushf
sub
fcomp
xlat
push
mov
(bad)
jo
adc
and
jp
pop
push
call
mov
mov
bound
or
fdiv
xchg
movs
loopne
shl
or
adc
ins
xchg
sbb
mov
addr16
add
push
(bad)
adc
sub
cmp
int
imul
pop
movs
fisttp
lods
aas
add
mov
adc
add
leave
add
out
adc
popf
bound
lahf
or
xor
push
je
das
icebp
gs
popf
je
cs
in
push
(bad)
jmp
ins
fcomp
jmp
jp
add
jge
outs
dec
pop
cwde
mov
pop
or
sub
jmp
add
(bad)
clc
and
sahf
mov
iret
bound
imul
jns
sub
dec
jmp
cmps
adc
sar
jbe
cld
cld
jg
mov
test
xchg
bound
std
dec
jbe
sbb
mov
fstp
add
pop
or
std
cmps
mov
sbb
pop
lds
stc
iretw
call
repz
inc
icebp
cmc
bound
push
(bad)
sub
shl
adc
sar
mov
xchg
mov
push
inc
or
xchg
mov
cmp
xchg
jno
bound
out
test
and
icebp
jge
xchg
cmp
and
jo
add
sub
dec
mov
aaa
bound
push
rcl
pop
xor
rcl
push
nop
dec
fnstsw
add
fnsave
dec
out
es
fimul
hlt
ins
jno
in
mov
retf
loopne
js
jle
jbe
gs
mov
sub
mov
lock
add
jp
pop
pop
stos
mov
pop
dec
movs
test
pop
gs
stos
mov
xor
aad
cmp
sub
shl
fstp
sub
add
div
adc
cmp
pop
lock
dec
std
arpl
fs
test
dec
sti
jecxz
xor
in
dec
jo
jmp
xchg
bound
mov
jbe
mov
lods
stos
fstp
adc
dec
or
fimul
adc
or
pop
sub
repnz
cmp
push
xchg
test
xor
shl
lea
aaa
xor
jne
fidiv
pop
xchg
ret
push
cmp
xor
(bad)
cwde
sbb
cmp
jmp
shl
int3
xchg
push
push
outs
pushw
bound
jecxz
mov
int
sbb
jnp
jmp
fucomp
ror
push
pop
adc
mov
loope
lods
fdivr
or
sbb
xchg
mov
cmp
data16
inc
fistp
leave
mov
sbb
scas
inc
bound
cmp
idiv
or
pushf
jp
jne
and
(bad)
fisttp
test
xor
ret
in
fnstsw
xor
(bad)
(bad)
fwait
pop
or
mov
or
popf
cld
stos
and
out
push
or
and
std
and
jg
jmp
dec
jnp
bound
jnp
sar
cmp
mov
popa
push
ja
cli
jg
fwait
fs
or
and
or
data16
cmp
dec
pusha
mov
or
icebp
push
xor
xchg
out
out
adc
int3
and
push
outs
or
int3
(bad)
inc
aas
xor
shl
or
test
ja
std
loopne
cmp
bound
retf
sub
pop
scas
sti
sbb
data16
ds
pop
or
movs
pop
arpl
cmp
(bad)
fst
(bad)
mov
xor
fstp
rcr
fwait
mov
dec
cmp
aas
rcr
repnz
fadd
inc
cmp
or
or
jae
push
pop
cmc
lahf
dec
push
bound
stos
sbb
xchg
pop
or
jge
aad
nop
aas
adc
adc
sub
(bad)
call
outs
fcmovnu
fdivrp
jle
ss
xor
pop
inc
push
bound
movs
and
das
rcl
repz
sahf
repz
sbb
cwde
retf
(bad)
jnp
push
movs
adc
or
adc
adc
jecxz
sbb
pop
push
sbb
out
call
test
(bad)
dec
ror
(bad)
fdivr
cmps
frstor
fcom
sbb
or
mov
mov
ret
xchg
mov
pop
add
cli
cmp
jg
sub
dec
push
jp
(bad)
int
ret
movs
into
lods
pop
(bad)
or
jo
xchg
adc
sbb
fisttp
push
jbe
xchg
sbb
dec
push
mov
fimul
lock
jle
les
ja
xor
jne
mov
and
out
and
popa
call
mov
fcomi
push
or
jmp
out
in
bound
cmp
ret
dec
push
xchg
push
enter
scas
mov
or
(bad)
retf
loopne
sub
sahf
movs
cli
movs
cmp
loop
ds
or
dec
arpl
and
sub
call
cmp
or
xchg
sti
jo
mov
(bad)
and
jl
or
rcl
outs
add
arpl
or
inc
cld
jne
inc
stc
(bad)
fisttp
(bad)
out
or
je
retf
push
scas
adc
sbb
mov
sbb
pop
movs
pop
add
xchg
cmp
mov
xchg
push
push
jbe
je
adc
fsubr
in
out
jecxz
stos
fs
cld
aam
or
shl
mov
sbb
jnp
out
call
mov
fbld
call
(bad)
push
xchg
or
cs
inc
cwde
out
pusha
or
mov
mov
push
ror
jo
xor
jmp
dec
frstor
js
repnz
or
mov
call
cwde
dec
rcr
xchg
jmp
push
jnp
leave
push
mov
and
add
pop
sub
lds
pop
pop
xchg
(bad)
cmp
fst
enter
outs
pusha
and
sbb
fld
arpl
jo
add
inc
dec
jae
jecxz
xchg
mov
add
and
fucomp
pop
enter
inc
dec
jmp
push
dec
adc
fidiv
sbb
pop
sub
sub
sbb
inc
mov
ficom
jp
inc
push
(bad)
xor
aad
or
push
in
adc
vxorps
inc
std
cdq
and
and
gs
push
adc
pop
xchg
sub
xchg
push
mov
push
imul
stc
jb
rcr
mov
aam
adc
pop
dec
dec
ja
(bad)
in
(bad)
in
out
mov
loop
add
jl
mov
mov
inc
pop
inc
addr16
mov
lea
pop
retf
lock
ja
xor
or
dec
imul
fst
jbe
mov
or
fist
lea
fdivr
sub
dec
adc
or
hlt
cld
out
pop
scas
fsubr
xlat
xor
in
sub
cmps
adc
pop
int3
jmp
push
add
into
add
popf
or
or
xor
sub
rcl
dec
inc
stos
push
ins
rol
in
nop
sti
inc
ret
and
repnz
rcl
mov
pushf
loop
dec
and
or
xchg
outs
pop
inc
add
adc
ins
repz
inc
adc
movs
push
aam
int3
in
frstor
and
or
and
xchg
pop
bound
ins
das
ret
stos
jne
xor
pop
xor
or
adc
in
shr
aaa
lds
fnsave
mov
jecxz
retf
outs
xor
imul
pop
jg
and
cmp
jge
retf
(bad)
push
cli
mov
stos
retf
mov
inc
loop
or
mov
jmp
jge
retf
jge
sub
popf
jmp
cmp
sub
imul
dec
mov
pushf
sti
jne
mov
mov
jge
int3
sahf
xchg
push
std
push
ret
mov
mov
cmp
pop
sbb
or
xchg
jns
mov
fnsave
arpl
or
push
xchg
outs
pop
cmp
sub
test
or
mov
fiadd
call
test
and
inc
xchg
mov
nop
jecxz
mov
lock
mov
or
push
ss
lods
lahf
jge
bound
test
or
aam
movs
ficomp
fst
mov
push
xchg
lods
popf
je
add
add
mov
lea
xchg
mov
test
and
sti
sub
sar
xor
sub
jnp
or
or
mov
sbb
(bad)
mov
mov
jmp
sub
pop
jecxz
or
dec
and
and
sub
imul
(bad)
pop
add
lea
leave
and
and
mov
fmul
jb
sbb
ss
cmps
mov
or
test
test
(bad)
pop
daa
out
mov
add
bound
jecxz
xor
repz
dec
frstor
gs
jge
and
adc
or
(bad)
mov
bound
adc
jg
sbb
or
mov
pop
cld
fst
sbb
push
cmp
or
repnz
add
imul
out
pop
pop
inc
test
and
ror
pcmpgtw
jmp
or
inc
icebp
xchg
mov
push
in
pop
pop
or
or
out
mov
pop
fadd
in
(bad)
or
sbb
icebp
xchg
xchg
fst
and
or
shl
pop
jb
nop
ins
or
sub
xchg
sar
or
xchg
pushf
mov
neg
mov
sbb
mov
mov
mov
ins
xlat
xchg
jno
stos
adc
imul
int
aad
or
push
arpl
jmp
sub
or
xor
enter
push
enter
xchg
(bad)
dec
cli
and
stc
mov
frstor
sub
adc
lock
mov
sahf
bound
pushf
loop
jle
int3
or
mov
inc
enter
sbb
bound
pop
in
adc
daa
or
ficom
cli
push
addr16
vpsubusw
ss
(bad)
sti
sub
or
xor
xchg
or
mov
push
inc
cmp
js
(bad)
adc
push
sbb
(bad)
stc
mov
ffreep
hlt
pop
jle
sti
call
ret
lods
int3
sub
or
out
lock
inc
and
mov
ret
sub
std
repz
sub
cld
nop
rcl
int
mov
aas
inc
cwde
fs
sar
movs
into
xchg
inc
fnsave
mov
pop
fwait
loop
or
test
add
nop
and
or
in
dec
xor
in
and
fnsave
sahf
xchg
idiv
movs
bound
stos
jnp
jae
or
push
dec
jmp
mov
ret
dec
popa
mov
popf
mov
imul
inc
mov
jl
not
js
mov
and
in
or
and
mov
mov
push
test
or
ja
outs
lods
and
sub
push
popf
mov
leave
enter
fs
cmp
xlat
popa
jnp
std
pop
sub
fstp
inc
div
rcr
xor
sub
jmp
call
cmps
jmp
mov
icebp
dec
call
retf
sub
fdivrp
and
xchg
inc
ja
lods
(bad)
xchg
or
mov
movs
mov
adc
dec
pop
clc
mov
cli
fwait
or
aas
fs
(bad)
sbb
div
xor
sbb
fst
mov
aam
dec
dec
je
nop
fidivr
pop
bound
push
enter
ins
mov
jecxz
pop
(bad)
xchg
retf
loope
push
mov
or
popa
mov
ret
fbstp
daa
loope
xor
xchg
adc
mov
cld
or
mov
test
sub
in
fsubr
sub
in
je
pusha
sub
stc
mov
(bad)
rol
jbe
(bad)
or
xchg
in
popa
dec
and
mov
push
jl
pop
xchg
dec
aaa
adc
hlt
or
gs
test
test
or
fs
stos
jecxz
adc
mov
int
push
inc
jae
out
rcr
daa
adc
lock
xor
icebp
and
mov
and
retf
and
(bad)
into
std
mov
daa
jo
or
xchg
push
or
sti
xchg
(bad)
mul
jp
or
retf
mov
or
call
mov
xor
retf
in
repz
push
(bad)
cs
js
rol
das
jp
or
std
jnp
lock
cmps
lods
adc
sbb
mov
adc
mov
out
pop
and
mov
sub
sub
dec
jbe
bound
in
add
mov
jge
jl
add
popa
in
add
ror
mov
hlt
xchg
xchg
push
mov
(bad)
or
or
xchg
cmp
bound
sbb
xor
xor
or
inc
gs
pop
pushf
push
scas
popf
jno
test
into
cdq
aaa
lods
jnp
cmps
(bad)
ja
adc
fistp
mov
mov
daa
mov
or
xor
mov
loop
fdiv
lahf
push
loope
mov
cld
xor
cmp
sbb
mov
add
or
xchg
inc
jae
jl
imul
imul
push
or
not
loope
jmp
add
and
xor
adc
lods
ds
nop
push
(bad)
lock
jg
push
mov
call
jecxz
and
js
and
add
int3
lahf
nop
imul
lea
mov
jmp
movs
ins
bound
in
xor
bound
jl
movs
mov
mov
mov
adc
add
popa
cs
pop
mov
sub
loop
or
jecxz
lods
dec
dec
inc
movs
ins
dec
push
retf
jl
mov
xchg
or
ja
scas
in
push
retf
jbe
lods
ss
xchg
mov
jge
or
xchg
jecxz
nop
cmp
repnz
mov
(bad)
cld
and
frstpm(287
jp
lods
push
mov
xchg
aas
lods
(bad)
fst
in
call
jno
arpl
repz
fwait
pop
jb
or
adc
add
fucomp
and
movs
test
sbb
pop
jp
adc
shl
dec
jns
or
xchg
mov
leave
mov
jecxz
mov
std
cmp
or
ds
mov
cld
bound
ret
jle
clc
inc
retf
cmp
add
outs
inc
pop
(bad)
fnsave
or
daa
je
or
jne
inc
cli
pusha
add
bound
push
cmp
pop
dec
fcom
mov
cmp
test
mul
push
inc
or
pop
fstp
dec
das
bound
je
push
mov
pop
(bad)
mov
(bad)
jl
fst
fbld
add
jns
cmp
or
cwde
or
aad
or
mov
test
inc
bound
mov
test
pop
retf
push
in
ffreep
mov
mov
or
and
pop
adc
push
int3
test
rol
xchg
jmp
cdq
hlt
sbb
test
mov
jno
sbb
frstor
mov
adc
test
adc
mov
(bad)
fisub
fcomp
mov
cmps
add
rcl
les
leave
push
pop
leave
and
fst
test
pop
lds
(bad)
cmp
mov
jbe
mov
imul
add
push
stc
or
mov
and
push
mov
push
and
bound
inc
mov
jg
repz
pop
js
mov
(bad)
sti
push
cdq
add
pop
icebp
push
pop
cmc
mov
(bad)
dec
out
fbstp
ret
gs
pop
pop
cmp
hlt
aas
xchg
push
shl
into
xchg
jl
xor
or
jecxz
(bad)
movs
xchg
(bad)
pop
(bad)
mov
add
jbe
or
repnz
cmp
ins
lods
cdq
cmp
or
jae
push
jmp
dec
xchg
mov
fstp
call
and
test
add
cmps
cmp
or
sbb
or
push
ror
mov
shr
adc
repnz
mov
rcl
push
or
out
lods
iret
movs
popf
(bad)
jecxz
stos
mov
ret
retf
bound
lahf
inc
mov
in
inc
jle
test
loopne
push
sbb
dec
fdiv
addr16
and
in
sar
cdq
adc
outs
addr16
movs
bsr
sbb
mov
clc
and
cmp
cmp
ds
mov
or
loop
cmp
or
in
add
mov
(bad)
fstp
imul
or
jmp
inc
outs
push
jp
les
icebp
xchg
inc
cmp
daa
sub
xchg
jge
cld
push
mov
pop
jg
xchg
into
mov
popf
xor
and
clc
push
setbe
or
add
pop
rol
cmps
in
xor
cmps
jecxz
or
std
pop
push
or
into
cmp
pop
shl
push
out
or
fs
mov
jg
les
mov
fistp
fsubp
sub
popa
dec
test
or
out
out
add
outs
xor
mov
fstp
push
clc
xchg
sbb
or
cmps
cmp
jge
cdq
cli
(bad)
xchg
(bad)
or
cmc
cmp
fs
outs
jo
dec
cmp
stc
or
data16
dec
pop
adc
dec
shl
pop
adc
mov
xor
test
cmps
in
call
inc
mov
mov
pusha
call
pusha
xor
or
ins
and
xchg
or
int
cmp
pop
cld
outs
in
imul
jb
out
inc
(bad)
(bad)
push
cmp
add
popf
xchg
fldenv
push
test
dec
sub
sbb
inc
stos
xor
jp
mov
and
out
jecxz
or
or
test
stos
xchg
pop
adc
pop
sub
mov
or
jge
nop
push
jnp
or
lahf
mov
test
test
in
bound
inc
mov
or
mov
into
xchg
fdiv
xor
movs
and
int3
sbb
dec
es
ret
mov
inc
push
stos
xlat
mov
or
lock
pusha
xchg
bound
mov
push
dec
adc
in
or
push
xchg
stc
inc
fcmovbe
test
inc
xor
sbb
or
jge
pop
add
add
aas
dec
mov
(bad)
(bad)
mov
xchg
pop
popa
mov
mov
loopne
imul
in
imul
js
dec
jo
bound
add
adc
mov
cmp
or
xchg
jle
pop
dec
dec
mov
jno
adc
jnp
fisttp
cld
xchg
jg
mov
fistp
bnd
add
push
jecxz
fist
repz
jns
es
pop
out
or
add
fcmovu
pushf
sbb
fwait
aaa
inc
ss
loop
lds
rcr
xchg
adc
stos
or
addr16
call
test
dec
fmul
js
pop
pop
les
stos
cwde
dec
fst
pop
jno
loop
sbb
xor
inc
retf
dec
fld
lods
mov
stos
repnz
pop
mov
xchg
retf
imul
rol
into
mov
movs
and
jmp
and
icebp
imul
pop
lods
or
das
and
ret
xlat
(bad)
jnp
test
inc
mov
les
mul
or
add
adc
int3
fs
lea
fsub
jg
sbb
test
aaa
or
mov
test
add
or
cmp
adc
out
xchg
sub
mov
sub
dec
es
and
sub
shl
pop
retf
or
fdivr
jne
sbb
inc
je
bound
pop
mov
pusha
or
sbb
mov
cmp
mov
adc
push
pop
cmp
sub
repz
add
aas
dec
(bad)
cmc
sti
fs
fimul
add
lods
aad
dec
rcr
mov
les
fisubr
scas
jecxz
(bad)
fisttp
pop
(bad)
test
or
xchg
in
in
movs
cdq
push
out
icebp
stc
or
cmp
outs
add
shl
cs
mov
mov
scas
daa
popf
adc
dec
rcl
and
xchg
jnp
(bad)
or
dec
mov
mov
popa
test
mov
push
shl
stos
shl
in
dec
inc
out
or
mov
mov
imul
inc
in
mov
div
iret
adc
mov
dec
call
mov
mov
push
push
retf
cmps
fnsave
cld
pmuludq
ins
nop
(bad)
test
jmp
test
ret
adc
or
ja
push
in
jae
sbb
or
xchg
lods
aas
fld
add
dec
dec
jge
inc
dec
sbb
add
jmp
ret
pop
(bad)
and
inc
or
dec
push
inc
pop
out
bound
xchg
dec
fld
imul
test
push
(bad)
jge
cmp
dec
retf
or
cmp
jnp
stc
jo
ret
setge
clc
mov
dec
adc
ret
lds
pusha
pop
jo
push
dec
xor
mov
mov
inc
nop
adc
(bad)
adc
xchg
jmp
mov
jg
cmp
fsubr
hlt
repz
fst
lock
push
xchg
mov
dec
fisttp
js
sbb
or
addr16
loopne
jb
(bad)
fadd
and
push
sub
je
xadd
mov
add
fwait
xor
inc
add
fwait
mov
js
mov
popf
lods
fwait
jl
nop
or
scas
sbb
fld
cdq
mov
xor
add
and
mov
cmps
cmps
pop
aaa
bound
cmp
add
das
dec
shl
mov
add
cli
stos
pop
cmp
mov
adc
fdiv
add
jmp
rol
pop
cmp
loope
sub
fs
mov
bound
dec
xchg
arpl
jno
(bad)
hlt
fcom
out
and
mov
dec
shl
add
xor
or
pop
ror
mov
mov
mov
mov
mov
cmp
or
icebp
ret
repz
popf
pop
jmp
or
lods
add
fidivr
scas
cmps
jl
(bad)
out
jmp
mov
pop
adc
or
das
pop
or
lds
and
xchg
or
mov
inc
fmul
sahf
sbb
dec
fwait
sahf
or
cwde
mov
arpl
fucom
add
ds
jecxz
or
sub
push
bound
cmps
inc
fisttp
adc
add
das
jmp
mov
in
push
xchg
mov
pop
repz
mov
inc
mov
cmp
add
sub
cli
inc
popa
sahf
push
cmp
and
and
das
or
xchg
sti
add
cmps
mov
mov
push
cmp
retf
dec
loopne
xchg
data16
popa
jbe
stos
mov
xchg
repz
cwde
mov
retf
rol
bound
repz
adc
mov
xchg
and
add
stos
rcl
jl
or
in
outs
ins
ret
fld
movs
adc
or
pop
add
mov
jecxz
(bad)
fdivr
mov
loopne
and
adc
cmp
cmps
adc
ret
in
sbb
mov
mov
out
cdq
fs
sub
shl
jmp
pop
xchg
cmp
enter
fld
pop
fld
sti
or
xchg
adc
rcl
fmul
in
fsubr
cli
mov
or
xchg
shr
fs
add
xchg
scas
or
lea
sub
or
mov
jae
sub
add
jno
int3
psrlq
pop
sbb
call
shrd
adc
push
or
sub
adc
jl
push
sbb
rol
movs
pushf
sub
(bad)
mov
fstp
out
das
jg
xchg
push
mov
adc
call
or
xor
or
mov
inc
or
dec
add
enter
cmps
or
cmc
mov
jno
(bad)
xor
fnstsw
call
mul
int3
mov
mov
mov
pop
in
mov
mov
fiadd
xchg
js
(bad)
retf
in
ss
(bad)
mov
stc
adc
je
fucom
push
inc
fs
inc
ror
loopne
scas
imul
test
mov
or
inc
and
bound
add
mov
dec
push
add
mov
jg
push
dec
iret
or
push
xchg
mov
pop
push
aam
pop
push
fnsave
or
push
sbb
not
or
mov
mov
sbb
pop
mov
or
ror
jnp
popf
jecxz
sti
jle
punpckldq
inc
das
ret
movs
push
or
int3
cmp
add
fmulp
ins
inc
mov
mov
bound
addr16
test
shl
daa
cli
dec
sub
push
sahf
xchg
mov
hlt
mov
adc
bound
ja
jmp
mov
push
jo
pop
sbb
inc
scas
frstor
or
jle
mov
jmp
pop
dec
outs
or
mov
xchg
les
push
popf
repz
(bad)
mov
lds
sbb
clc
mov
(bad)
aam
(bad)
fmul
cld
jo
add
mov
mov
out
and
stos
or
mov
jns
mov
cmps
cmp
rol
or
mov
rol
xchg
cmp
mov
iret
cmc
sar
(bad)
lea
in
and
mov
push
bound
and
test
int
fcom
imul
jno
mov
push
in
call
add
sbb
jmp
add
fimul
movs
sub
daa
add
pop
add
test
sub
cs
mov
inc
jno
or
cli
nop
push
xchg
addr16
pop
or
adc
sub
xchg
in
pushf
mov
pop
dec
loop
or
out
mov
mov
das
and
dec
and
ja
xchg
push
adc
call
cdq
test
es
leave
fsubr
mov
das
int3
clc
add
mov
pop
push
push
pop
daa
push
bound
sbb
add
adc
je
retf
bound
mov
imul
xchg
test
bound
into
or
cmp
or
xlat
call
(bad)
fsub
and
pop
xor
repnz
retf
jecxz
dec
(bad)
or
test
std
mov
je
es
or
loop
jge
jle
fbld
lds
retf
cmps
sbb
jo
lock
neg
paddsb
or
and
in
adc
and
je
stos
or
mov
jnp
data16
gs
push
mov
dec
adc
mov
(bad)
int
stc
in
shl
cmp
ss
push
inc
add
push
dec
push
jne
add
fimul
aaa
mov
jge
popf
cmp
inc
test
mov
pop
xchg
mov
(bad)
or
or
fprem1
mov
dec
mov
test
jmp
fistp
test
mov
lahf
or
mov
ret
sbb
fidiv
fdiv
or
cmc
adc
jl
test
ret
cmps
sub
or
iret
or
xor
xchg
jecxz
push
pop
xchg
ja
lods
dec
addr16
gs
ins
jmp
jnp
mov
or
ins
xchg
add
in
pusha
ficomp
mov
mov
add
imul
jp
fxch
xor
dec
xchg
movs
mov
xchg
mov
je
fstp
or
push
fist
shr
mov
cmp
push
sub
mov
lahf
push
(bad)
xor
lds
sahf
xchg
dec
mov
sti
out
mov
xor
(bad)
mov
lods
inc
mov
mov
or
into
mov
arpl
xchg
hlt
xchg
stos
aam
mov
add
xchg
adc
mov
jmp
aas
lods
mov
nop
and
imul
sbb
adc
cmp
outs
(bad)
adc
sbb
push
pop
mov
bound
pusha
cmps
mov
cmps
into
jo
and
fiadd
and
cmc
cmp
cmps
je
and
xor
stos
not
mov
fcmovnu
inc
jp
call
jbe
add
stos
bound
hlt
or
cdq
cmps
cwde
xor
frstor
shr
jecxz
scas
dec
gs
mov
cmc
in
(bad)
adc
jmp
or
push
arpl
mov
sti
xor
add
hlt
cmc
mov
aad
imul
test
lods
lods
push
cmp
(bad)
sub
and
movs
adc
add
inc
daa
xchg
movs
leave
inc
mov
(bad)
fld
fsubr
or
int3
gs
fisubr
sub
ins
cmp
rcr
or
bound
jno
jp
sbb
(bad)
adc
lock
iret
pop
xchg
fbstp
adc
push
arpl
add
or
push
fistp
loop
mov
sbb
push
jns
test
aad
fimul
(bad)
frstor
pslld
push
adc
sbb
loop
fmul
into
(bad)
in
sti
push
fmul
jg
rcr
fwait
mov
or
cmp
fldcw
retf
out
or
xlat
dec
repnz
sti
mov
adc
pop
add
loop
popa
pop
push
or
adc
in
icebp
fbld
xchg
cmp
and
or
mov
mov
cs
ins
xor
pop
push
mov
push
pop
dec
fwait
mov
adc
xchg
mov
or
mov
jecxz
stc
push
shl
mov
cld
mov
xchg
push
mov
aam
shr
movs
fdivr
stos
out
and
stc
dec
or
jno
pushf
and
xchg
push
ror
pop
dec
xchg
dec
mul
push
cmp
or
pop
icebp
adc
and
jbe
movs
ins
loope
mov
out
fldenv
in
or
call
repz
jae
gs
lahf
(bad)
int
jnp
push
add
rcl
push
fnsave
jae
aam
icebp
aaa
bound
scas
movs
aam
fisttp
inc
sbb
or
jo
xchg
bound
mov
cmp
addr16
sbb
aam
mov
push
loopne
push
add
sub
add
push
and
ins
mov
mov
outs
aam
ror
xchg
sbb
jmp
bound
mov
or
stos
mov
stc
(bad)
mov
hlt
loop
ins
dec
out
or
psraw
pop
(bad)
loope
jae
dec
aas
mov
xor
fwait
fwait
pop
xor
push
jp
sti
std
loope
mov
cmc
adc
mov
jle
mov
pop
inc
push
mov
push
push
or
ret
xchg
outs
mov
push
push
(bad)
pop
bound
dec
push
cdq
lock
xor
aaa
bound
adc
mov
(bad)
fstp
out
cmps
sbb
movs
(bad)
push
xchg
add
and
mov
loope
sbb
pop
sar
or
(bad)
fiadd
inc
adc
stos
in
bound
daa
daa
push
xchg
xor
xchg
lods
in
pop
push
ds
mov
lods
xchg
fwait
or
sub
shr
fst
shl
fild
pop
or
(bad)
cmp
sbb
inc
cs
or
cmp
or
dec
jnp
jo
stos
bound
jg
fxch
push
xlat
push
or
sbb
shl
jmp
pop
stc
cmp
mov
or
enter
push
bnd
arpl
add
inc
jns
mov
cmp
pop
sbb
pusha
(bad)
cld
dec
mov
push
or
mov
in
cmp
test
xchg
jl
push
stos
mov
push
test
xchg
adc
mov
dec
lea
or
jmp
ins
lods
xchg
aam
pushf
or
jo
das
add
fcmovb
sbb
pop
push
bnd
int3
push
jo
or
xchg
mov
data16
imul
mov
sbb
adc
test
jns
mov
adc
ficom
into
retf
in
ffree
push
xor
stos
movs
inc
mov
push
and
add
sbb
xor
adc
cmp
sbb
fmul
dec
xor
jne
push
fisttp
imul
push
scas
or
scas
sub
pusha
arpl
jmp
adc
repz
je
sbb
dec
or
test
sahf
or
pop
mov
ins
inc
lock
and
cmp
and
pop
pop
adc
mov
lea
out
shl
bnd
push
(bad)
(bad)
xor
adc
cmp
jb
add
jmp
dec
popf
(bad)
repnz
into
cwde
sbb
fsubr
out
dec
or
loope
pop
mov
inc
inc
pop
cmp
or
retf
push
ins
fisub
ja
pop
scas
imul
sub
cs
(bad)
mov
xlat
(bad)
jo
or
inc
jecxz
hlt
aam
pop
bound
fimul
cwde
sar
sbb
push
mov
cmp
bound
and
cmp
dec
hlt
dec
add
sar
xchg
cmp
fld
call
stc
adc
dec
dec
mov
arpl
(bad)
aam
add
pop
std
outs
mov
jecxz
sub
push
bound
mov
jnp
mov
pushf
inc
leave
mov
pop
sar
test
inc
jg
int
cwde
cwde
aaa
cmps
in
in
adc
(bad)
(bad)
loopne
push
cli
xchg
or
jne
mov
fucomp
aaa
dec
retf
add
dec
jmp
int3
int3
call
jbe
mov
xor
into
loop
or
cmps
mul
ins
clc
aaa
push
ja
fiadd
xchg
jmp
mov
pop
aad
or
call
cdq
push
jo
mov
cld
push
nop
jne
mov
dec
jb
shr
mov
mov
mov
xchg
sbb
and
sub
jmp
pop
xchg
add
push
dec
mov
fnsave
loop
cmps
push
repnz
(bad)
sahf
jmp
mov
add
data16
fisttp
or
ins
inc
das
loope
xor
pop
xchg
add
fild
xchg
push
mov
mov
rcr
cdq
ja
adc
in
out
push
or
push
and
fcmovbe
adc
sub
in
arpl
xchg
push
fild
xor
inc
pop
ret
retf
and
bound
sbb
(bad)
push
mov
push
jecxz
or
ins
inc
xor
jne
sub
add
ficomp
aad
jne
in
push
jb
mov
pop
(bad)
jnp
idiv
or
sub
pop
leave
stc
js
sub
rcr
jge
(bad)
xchg
imul
shl
sub
pop
fs
pushf
out
or
push
inc
retf
pop
cmp
sbb
push
loope
xor
cmp
test
jo
or
mov
mov
or
mov
xchg
xchg
and
xchg
inc
bound
loopne
add
inc
in
or
cmc
jns
outs
jge
sub
fimul
into
int3
in
adc
inc
mov
stos
into
fwait
pop
or
call
mov
xchg
gs
(bad)
or
lahf
or
xchg
jmp
jmp
movs
cmp
dec
mov
sub
clc
or
sbb
retf
(bad)
(bad)
mov
bound
mov
jno
nop
and
hlt
and
jne
push
fstp
inc
sbb
add
ja
stos
lock
imul
mov
(bad)
ret
mov
not
push
or
outs
(bad)
jns
popf
bound
ins
popf
xchg
sub
or
bnd
jno
sub
shl
xlat
mov
mov
pop
mov
xor
push
xchg
shl
pop
xor
dec
or
cmp
cwde
or
or
xchg
fisttp
or
out
xor
loope
data16
test
cmp
pop
jmp
mov
and
push
stc
or
mov
xor
xor
sub
arpl
sub
push
nop
dec
fcom
in
xor
add
data16
mov
and
cmp
movs
cld
(bad)
je
add
(bad)
retf
xor
bound
outs
mov
inc
adc
call
jmp
dec
push
jecxz
inc
sbb
inc
cli
xchg
outs
jb
mov
aas
bound
cwde
add
cmp
cmp
call
lods
in
dec
test
bound
xor
test
pop
xor
pop
or
lea
push
in
jns
movs
mov
pop
or
stos
lods
or
and
mov
(bad)
ss
push
bound
or
jbe
sub
call
aaa
iret
or
aam
push
movzx
cld
and
or
dec
fs
pop
pop
bound
sbb
pop
push
xor
xchg
and
outs
pop
call
add
fwait
cmp
test
out
or
add
push
pop
push
push
sub
pop
fdivr
inc
push
cmps
inc
xor
ins
ror
jae
test
das
(bad)
iret
and
add
mov
ffree
outs
cld
daa
in
sbb
jae
or
out
call
mov
pop
inc
push
aaa
lds
cdq
lods
push
add
int3
dec
mov
or
sub
das
mov
pushf
scas
scas
push
frstor
call
xor
loopne
rol
test
and
mov
mov
(bad)
loop
mov
xor
ins
and
outs
mov
mov
fnsave
sub
mov
pop
fisubr
push
xchg
dec
pop
jae
fcmovbe
pop
aas
sbb
and
into
add
leave
mov
sbb
(bad)
dec
sbb
cld
fisttp
add
xchg
test
adc
int
(bad)
test
inc
or
xchg
pop
out
and
in
or
add
mov
out
das
mov
je
test
fst
loopne
inc
add
cmp
stos
lea
imul
ss
jecxz
ja
pop
in
ret
mov
stos
lock
test
or
jge
lahf
pop
cld
jge
jno
dec
pop
add
lods
and
adc
mov
fnsave
je
into
or
movs
xchg
push
out
aad
jge
jmp
jg
add
dec
xchg
arpl
push
sbb
cdq
in
lea
pop
sub
or
imul
mov
xchg
or
dec
clc
sub
test
push
or
xchg
inc
or
fld
call
lock
in
sub
ins
mov
rcl
dec
jl
pop
or
ror
test
sti
ret
cmp
xchg
fst
into
lahf
int
outs
sub
mul
sub
push
pop
fsubr
mov
adc
hlt
mov
xor
(bad)
mov
fbld
ja
sbb
call
js
cmp
(bad)
aam
cli
iret
jns
fld
dec
cdq
pusha
push
dec
inc
repz
(bad)
frstor
out
shl
ins
shr
fnsave
je
push
dec
cmp
call
push
jge
sbb
ins
add
(bad)
retf
mov
lods
ds
or
pop
pop
jbe
rcr
fstp
inc
inc
inc
sub
push
sbb
sbb
sbb
xlat
out
jmp
push
fsubr
das
mov
sub
mov
or
(bad)
mov
sahf
(bad)
xor
sbb
fisttp
test
cwde
mov
cmp
and
push
dec
ror
in
xor
dec
jmp
scas
or
sub
out
xor
mov
push
adc
aam
mov
jnp
or
mov
or
es
ins
lods
arpl
jge
adc
and
rcr
mov
icebp
arpl
xchg
sahf
xchg
sub
jne
push
xchg
lahf
mov
into
lods
xchg
cld
push
mov
icebp
stos
inc
pusha
add
lahf
sbb
cmp
add
les
movs
fucomp
push
push
sub
inc
stos
cmc
or
inc
mov
clc
loop
dec
fisttp
dec
jg
sahf
xor
or
jp
dec
xchg
lds
sub
sub
sbb
push
xchg
mov
or
dec
sub
add
lock
out
lods
push
pop
pop
aam
mov
ins
mov
and
mov
in
mov
dec
sbb
push
add
cmp
push
das
(bad)
aam
pop
dec
jae
cmps
or
mov
pop
das
daa
pop
jl
outs
out
and
push
movs
pop
jbe
ja
xor
xchg
and
xchg
lds
xor
xor
jns
out
bound
dec
or
or
std
ins
lds
stc
neg
mov
mov
adc
xchg
jge
nop
ins
and
call
mov
or
sbb
jbe
mov
push
or
test
shr
fisttp
icebp
aaa
mov
mov
iret
jmp
movs
jmp
pop
ror
mov
cs
sti
cdq
push
adc
popa
outs
xchg
fnsave
bound
cwde
sbb
fst
add
(bad)
or
jbe
add
inc
xchg
(bad)
xchg
lods
adc
(bad)
push
jecxz
call
ret
mov
push
pop
pop
(bad)
xchg
rcl
adc
test
mov
in
add
in
and
mov
push
mov
mov
fisttp
inc
xlat
shr
jecxz
aas
xchg
dec
mov
or
gs
in
cli
pop
sbb
popf
mov
dec
or
sub
movs
bound
push
addr16
push
(bad)
pop
(bad)
xor
stos
out
push
ror
mov
dec
ss
ss
jecxz
xor
xor
xor
or
push
mov
lahf
mov
sbb
mov
fidiv
mov
or
in
in
add
or
push
jp
xchg
sar
cmp
or
sbb
mov
(bad)
ja
(bad)
pop
fdiv
cmp
and
push
xchg
jbe
cmps
cmp
enter
out
call
outs
sbb
arpl
aad
add
jae
loopne
test
and
ret
adc
xchg
mov
or
jl
lahf
sbb
out
fwait
push
repz
or
or
nop
dec
dec
add
jg
movs
dec
mov
int
and
or
mov
ins
xchg
mov
adc
or
xor
pop
bound
or
inc
pop
inc
push
jns
sbb
mov
aam
out
jecxz
sti
(bad)
in
sbb
das
and
ror
dec
pop
fstp
das
or
inc
loope
cmp
and
repnz
inc
leave
mov
push
ret
pop
or
jmp
inc
shl
jl
inc
je
sbb
push
(bad)
xor
dec
mov
test
xor
jmp
ret
sti
loope
jle
add
int3
mov
scas
cmp
popf
add
push
jnp
fcmovbe
push
sbb
(bad)
std
in
cli
sbb
mov
jge
fcom
in
data16
fldenv
pushf
cmc
xchg
adc
add
push
stc
jne
enter
inc
add
dec
cmp
xchg
or
sub
outs
in
sbb
fidiv
mov
addr16
loope
add
sbb
add
or
inc
ror
fsubp
mov
ins
sub
mov
mov
and
inc
outs
or
ins
dec
shr
mov
xchg
imul
cs
xlat
mov
(bad)
mov
jmp
xchg
and
outs
sub
fisttp
fnstcw
mov
jo
xor
int
fcmovbe
mov
and
ds
stos
cmp
pusha
or
xchg
inc
push
or
jbe
lods
sub
hlt
pop
sub
mov
ror
mov
or
sub
ins
ds
mov
mov
inc
repz
or
mov
fs
cs
sub
mov
and
xor
xor
cmp
lahf
ret
jecxz
ud2
jnp
sbb
or
mov
jb
jns
test
fsubr
in
(bad)
dec
popa
fdivr
push
(bad)
ds
and
or
mov
jmp
pop
mov
jns
ja
mov
in
mov
out
jge
loopne
or
xchg
ins
jns
retf
shl
(bad)
fiadd
addr16
sbb
xor
or
out
xor
ror
mov
push
mov
in
add
and
jl
into
inc
jecxz
in
je
cmp
sahf
adc
in
(bad)
movs
into
fnsave
test
test
mov
or
ja
xor
popf
adc
das
ss
idiv
in
or
test
jne
mov
fstp
xor
in
or
das
add
mov
adc
xor
fiadd
mov
inc
dec
jnp
add
mov
cmp
dec
(bad)
cdq
pushf
das
or
xor
mov
cmp
bound
(bad)
jp
sbb
adc
bound
jno
adc
xchg
cwde
adc
lea
int3
rol
push
push
fisubr
aam
les
adc
sbb
icebp
pop
or
fcmovu
push
dec
jae
xchg
add
or
xor
mov
(bad)
loopne
out
pop
add
mov
jp
(bad)
aad
pop
scas
dec
test
sbb
push
das
je
pusha
dec
inc
frstor
in
movs
ds
rcr
xchg
sbb
into
sahf
(bad)
ins
dec
gs
das
pop
sbb
mov
test
or
mov
retf
xchg
fnstsw
dec
or
sub
push
or
mov
std
daa
fcom
stc
mov
lods
or
xor
jne
pop
adc
(bad)
enter
add
in
imul
nop
sbb
dec
cdq
out
or
add
or
xchg
ins
cmps
pusha
cwde
jae
add
fsub
bound
dec
push
ss
ins
sbb
loope
or
stos
cld
(bad)
loop
ror
jne
add
ficom
mov
mov
sti
pop
(bad)
xor
jmp
jae
bound
mov
pop
out
fidivr
or
jp
movlps
and
mov
fwait
loop
xchg
mov
or
push
test
cmp
movs
ins
repnz
push
mov
xor
mov
inc
jo
pop
test
add
dec
ins
out
dec
jl
push
fild
retf
or
xor
popa
stos
(bad)
ins
bound
xor
test
popf
mov
jge
cmp
jl
jne
mov
out
clc
or
retf
je
xchg
jmp
test
pop
fimul
mov
in
fcomp
mov
jmp
sar
pushf
pop
stos
or
mov
aad
xlat
pop
test
ss
jmp
sar
jecxz
out
mov
inc
or
push
jb
pop
jne
(bad)
bound
push
(bad)
retf
or
fidiv
fnsave
mov
loope
sahf
pop
add
aaa
je
mov
mov
loopne
add
sar
xchg
mov
pop
test
rol
sbb
push
aas
or
bound
pusha
push
or
add
(bad)
adc
xchg
(bad)
in
imul
daa
repnz
jb
adc
push
xchg
mov
pop
mov
mov
xor
sub
pop
jmp
sbb
sbb
mov
xchg
pop
pop
jnp
jb
dec
pop
lahf
cmps
jae
imul
imul
sub
loopne
pop
in
sbb
push
jecxz
lea
out
mov
inc
aaa
mov
or
bound
adc
jecxz
adc
imul
mov
push
mov
test
pop
inc
adc
mov
add
mov
out
imul
(bad)
push
pop
(bad)
xor
or
dec
or
iret
adc
imul
mov
ss
(bad)
pushf
ds
mov
nop
mov
or
dec
and
mov
ret
nop
xor
or
ret
push
pop
cmp
int3
leave
push
xchg
sbb
xchg
test
scas
out
add
call
das
push
xchg
or
je
xor
dec
stc
movs
bound
fidiv
dec
mov
cmp
xor
xor
dec
add
pop
addr16
or
or
cwde
push
pushf
or
add
fdiv
xchg
mov
xchg
das
mov
pop
(bad)
repz
sbb
fcmovnb
ret
xchg
pop
dec
sbb
dec
arpl
inc
sbb
inc
gs
xchg
xor
test
mov
inc
jae
add
add
adc
rcl
adc
cmps
aad
(bad)
ins
dec
dec
fwait
call
fild
in
gs
mov
or
or
inc
mov
and
mov
adc
jmp
into
or
scas
sub
cli
leave
inc
cmps
sti
mov
lea
jp
jnp
enter
cmp
(bad)
or
ins
mov
les
iret
cmp
stos
arpl
or
fisubr
out
push
or
lahf
pop
popa
shr
bound
(bad)
mov
js
xchg
sub
add
pop
shl
push
fst
stc
jnp
or
loope
jmp
xchg
mov
add
sub
pop
push
xor
mov
fsubr
push
mov
sub
imul
mov
(bad)
mov
sbb
fidiv
adc
sub
fwait
sub
out
mov
jbe
(bad)
mov
ds
fcom
test
or
jl
stc
cwde
xchg
ror
add
es
out
bound
icebp
add
mov
pop
jmp
sub
cmp
sbb
sub
(bad)
shr
rol
cld
mul
sbb
les
mov
aam
or
bound
xor
sub
mov
jge
push
pop
xchg
arpl
jb
mov
fdivr
addr16
int
(bad)
out
mov
xchg
xchg
fwait
or
cmp
frstor
xchg
outs
dec
sub
icebp
or
sub
or
ins
test
popa
mov
mov
add
add
ficom
fimul
dec
cmp
jmp
stos
push
stos
sub
iret
or
fcmovbe
int3
fimul
(bad)
not
bound
or
test
xchg
fnsave
xchg
pop
sbb
mov
es
jne
iret
and
mov
xor
pop
mov
jo
adc
push
add
or
mov
iret
in
fnstcw
xor
xchg
in
js
retf
pop
inc
lds
les
dec
cmps
pop
fs
call
ret
sti
movs
pusha
mov
data16
add
xchg
mov
adc
sbb
or
hlt
and
or
sbb
bound
lock
jge
adc
add
mov
pop
mov
repnz
int
push
or
and
jmp
add
adc
xchg
retf
aad
outs
pop
pushf
mov
push
and
sbb
mov
cmp
mov
mov
int
mov
fwait
lock
pop
dec
mov
mov
mov
nop
xor
adc
test
jo
(bad)
add
scas
into
mov
aad
aas
jmp
or
popa
std
mov
cmps
fisttp
ret
dec
sbb
xor
or
repz
fs
sub
into
xor
push
push
ds
xchg
adc
mov
stc
pushf
outs
ds
popf
mov
fs
push
sbb
in
sti
ins
retf
mov
dec
mov
aad
aam
jmp
mov
test
ret
sbb
aaa
gs
mov
dec
xor
lods
fnstsw
pop
or
jg
inc
adc
bound
dec
pop
movs
or
fs
shl
les
frstor
mov
or
scas
sub
arpl
bound
pop
dec
pop
fwait
mov
mov
std
jge
jmp
dec
mov
popf
jnp
adc
dec
xchg
pop
stos
mov
cmp
and
imul
sbb
into
mov
dec
or
xchg
lahf
and
shl
into
dec
enter
mov
stos
ret
xchg
jl
cmp
push
xor
add
lock
data16
push
push
xor
fnsave
sbb
mov
dec
in
jmp
add
leave
add
push
or
pop
nop
or
aas
dec
call
scas
xchg
cmp
into
mov
lahf
aas
inc
jmp
pop
or
mov
mov
push
paddw
xchg
mov
bound
jne
mov
mov
mov
fnsave
pop
mov
cmc
inc
or
fist
stos
scas
push
cwde
fbld
push
enter
add
retf
outs
inc
push
(bad)
sbb
pop
das
push
in
cld
(bad)
fstp
mov
xchg
jecxz
iret
ss
les
mov
push
jecxz
xor
xchg
clc
lea
mov
frstor
xor
inc
cs
sbb
add
mov
xor
cmp
dec
push
js
cdq
sar
mov
mov
retf
hlt
rcl
pop
fimul
mov
lods
ret
add
mov
sar
mov
push
in
mov
rcl
sub
je
add
push
push
inc
repz
inc
cmps
test
gs
test
push
(bad)
xor
mov
fbld
adc
or
mov
mov
dec
xlat
(bad)
fucom
shl
cwde
mov
xchg
adc
cmp
xor
adc
rol
ret
packuswb
cmps
retf
push
dec
jmp
test
or
leave
mov
outs
data16
jg
mov
inc
out
stc
loop
sbb
in
or
and
sbb
adc
ss
ins
or
adc
test
jbe
pop
mov
test
js
jb
mov
or
cmp
dec
pop
(bad)
xchg
retf
(bad)
loopne
push
popa
cmp
mov
pop
(bad)
std
pop
lods
or
bound
cmp
push
inc
or
fdivr
cli
pop
imul
inc
jns
and
lahf
retf
or
cmps
mov
add
sub
add
cmp
bound
dec
cmps
enter
dec
jg
retf
(bad)
(bad)
nop
mov
std
mov
nop
pop
and
or
xor
ror
sbb
and
sub
jae
cmp
frstor
push
test
mov
ins
xchg
popf
ret
xchg
(bad)
cmp
das
or
xchg
mov
or
scas
(bad)
mov
or
push
inc
dec
xor
data16
test
sar
sbb
add
adc
cmp
retf
mov
xor
in
bound
test
and
jg
mov
pop
repnz
sub
in
imul
jecxz
push
jns
xchg
push
(bad)
frstor
jle
mov
aas
into
(bad)
or
push
or
jmp
pop
and
adc
rol
cmp
bound
pop
call
and
sbb
data16
leave
(bad)
xchg
jle
or
aad
movs
sti
out
bound
stc
js
call
mov
stos
or
ja
adc
xchg
adc
sub
ss
and
fwait
or
or
cwde
test
imul
retf
fidiv
mov
xor
push
fld
fwait
aam
or
int
hlt
or
lahf
cmps
pushf
mov
mov
mov
sub
les
cmp
mov
jae
fidivr
sbb
adc
lock
inc
xor
mov
push
stos
(bad)
xor
fisttp
outs
and
push
mov
pop
cmp
mov
inc
cmp
sub
sar
xor
stos
fmul
or
loope
fld
or
bound
sbb
or
pop
out
in
mov
(bad)
fnstsw
dec
push
jp
cmp
cmp
lods
inc
loop
pushf
fneni(8087
mov
sub
js
or
push
xchg
sti
gs
mov
stos
push
bound
lahf
and
aaa
pop
ret
cmps
sbb
ficom
cmp
xchg
cmps
pop
cmp
inc
adc
aam
daa
bound
adc
data16
mov
and
rol
push
mov
or
jle
push
(bad)
je
sub
sbb
test
or
adc
inc
test
(bad)
sar
jne
dec
xchg
gs
pushf
mov
sbb
push
push
(bad)
xor
popa
loop
cmp
xor
jmp
loop
or
nop
(bad)
fiadd
fstp
mov
scas
cmp
mov
arpl
ficomp
bound
nop
js
or
sub
mov
xor
or
lds
sar
test
shr
xchg
repz
mov
loope
xor
cmp
ins
sti
ins
and
in
mov
out
sub
push
jb
and
sti
pop
dec
shl
or
push
scas
mov
fst
mov
sub
sub
pop
loopne
lea
adc
cwde
add
ret
(bad)
adc
jbe
sbb
bound
ja
adc
popf
xchg
(bad)
lods
sar
xadd
push
pop
pop
or
adc
cmp
sbb
fld
call
dec
pop
test
scas
pop
sbb
add
sbb
or
out
cmp
push
sub
packsswb
ret
imul
aas
or
mov
lods
mov
jne
push
pop
lahf
or
ficom
dec
cmp
ficomp
test
or
jno
add
cli
or
clc
es
ins
mov
scas
cmp
neg
sbb
cmp
pop
fwait
xchg
pop
loop
fstp
call
or
stos
jnp
jl
movs
(bad)
shr
pop
jns
mov
enter
xchg
mov
mov
imul
adc
(bad)
xor
data16
sbb
dec
push
or
ins
pop
pop
dec
cmp
shr
jl
aad
pop
movs
xor
(bad)
cmc
das
pushf
dec
rcr
call
rol
or
inc
xchg
push
in
repnz
dec
and
call
in
adc
mov
out
add
fist
xchg
sbb
nop
cli
(bad)
frstor
aas
inc
outs
call
lds
mov
or
jge
inc
adc
bound
mov
shrd
pushf
xor
sbb
sub
push
shr
scas
cwde
shr
(bad)
mov
jmp
dec
dec
mov
push
bound
(bad)
jne
xchg
xchg
cmp
push
call
cmps
xor
fdiv
jnp
push
adc
or
gs
lea
jb
mov
add
jnp
int3
fst
cmp
sbb
sub
mov
mov
pop
mov
mov
fld
mov
iret
push
or
jg
xchg
jl
aam
lea
jmp
mov
repnz
in
push
fld
adc
dec
xor
fstp
sbb
mov
jg
xchg
pop
(bad)
(bad)
aam
fcmovnu
bound
jmp
lahf
inc
or
icebp
ins
mov
fstp
jb
lock
jo
jge
rol
jmp
jecxz
bound
(bad)
push
push
add
push
icebp
sar
dec
int3
(bad)
cdq
(bad)
jmp
adc
xor
call
sti
aas
pop
ret
fsubr
push
(bad)
or
aad
mov
les
jmp
or
aad
in
ret
aam
pop
or
ss
add
arpl
fnstenv
jns
or
adc
(bad)
in
sbb
stos
mov
dec
push
mov
xchg
es
retf
leave
(bad)
fs
xchg
or
pushf
stc
xchg
xchg
mov
sub
mov
int3
or
mov
xchg
(bad)
jmp
or
ja
sub
fwait
pop
ins
pop
ins
popa
jnp
jmp
cmp
or
loopne
je
aas
push
push
pop
in
mov
or
cmp
movs
out
gs
mov
sbb
or
nop
and
pop
pop
imul
(bad)
fwait
idiv
stc
ja
sbb
mov
xor
and
arpl
cld
xchg
arpl
nop
mov
push
sub
cs
inc
retf
mov
dec
inc
or
mov
retf
movs
(bad)
cli
add
mov
fnstsw
stos
loopne
out
sbb
rcl
pop
jmp
mov
or
add
inc
arpl
add
mov
push
daa
outs
or
pop
mov
jo
icebp
(bad)
dec
or
sbb
or
addr16
hlt
fnstcw
jge
push
cmp
lahf
cmps
xor
test
mov
mov
leave
mov
and
add
or
mov
repnz
clc
pop
loopne
sbb
push
int
or
ret
cmps
push
push
push
adc
jecxz
add
aam
or
mov
popa
ins
cdq
inc
cmp
push
ss
ds
jg
jns
fld
in
inc
mov
movs
mov
dec
fwait
call
stos
icebp
mov
aas
pop
popa
add
xor
ret
pop
sar
or
dec
adc
pushf
sbb
stos
dec
out
out
shl
xor
or
dec
sbb
pop
jmp
mov
or
mov
icebp
mov
js
or
ret
inc
call
(bad)
rcl
mov
xchg
test
mov
cld
or
fcmove
sbb
jns
sub
addr16
fdiv
js
or
aad
ins
mov
add
jl
sbb
int3
shr
sbb
rcl
loop
sbb
xor
cmps
sbb
push
sbb
xor
sbb
dec
push
pop
fwait
jmp
out
xchg
scas
mov
test
fucomi
mov
push
dec
test
sbb
inc
pusha
scas
push
fadd
inc
stc
ins
push
adc
fadd
xchg
retf
cmp
dec
mov
enter
adc
mov
adc
push
aad
ss
lea
repnz
adc
fs
test
imul
jmp
movs
pop
in
hlt
add
test
or
mov
push
aas
pop
sbb
push
fsubp
push
loopne
ror
popa
int
add
sahf
mov
fcom
inc
jl
scas
ss
push
dec
repnz
inc
add
je
push
mov
push
fdivr
jecxz
xchg
adc
adc
xchg
pop
aad
mov
add
mov
gs
add
(bad)
jmp
rcr
arpl
aas
sub
ret
call
hlt
fdiv
pusha
mov
push
jnp
(bad)
movs
push
cmp
mov
add
pop
mov
fcom
mov
sbb
dec
loopne
gs
or
ins
pop
dec
push
push
adc
sub
neg
ds
jae
aam
jnp
pop
dec
or
cli
pop
push
jne
or
mov
cmp
aaa
scas
sbb
add
add
inc
out
push
fwait
les
popf
int
pop
inc
in
cld
mov
stos
scas
dec
pop
pop
(bad)
cmps
mov
cmp
and
adc
jae
in
cmps
cmp
cdq
xchg
leave
mov
cwde
xchg
jge
mov
repnz
jl
add
sti
aad
add
cwde
or
out
test
pushf
in
inc
inc
mov
cdq
out
ds
or
jge
push
andps
sbb
in
or
jb
add
jnp
test
xor
or
add
out
add
leave
leave
jecxz
push
xchg
mov
pop
dec
mov
push
jg
sub
xor
std
fild
mov
xchg
xor
xchg
or
push
mov
sbb
xor
call
pop
jmp
adc
lods
ja
jno
ss
aad
cmp
xchg
and
jecxz
out
scas
push
xor
loop
jne
iret
call
mov
imul
inc
shr
test
dec
(bad)
(bad)
pop
fistp
jmp
les
add
clc
cmp
push
mov
push
shr
pop
icebp
push
popa
int3
push
mov
jle
dec
addr16
shr
sub
adc
mov
in
in
rcl
jle
das
xchg
push
mov
and
dec
fwait
icebp
pop
fist
pop
add
pop
shr
fwait
int
popf
pop
ins
cmc
ds
test
dec
jb
xor
mov
sar
sbb
mov
push
rsm
and
pop
clc
xchg
(bad)
cmp
add
cs
sub
aas
adc
dec
sbb
mov
xchg
dec
push
(bad)
loop
jae
cli
out
das
mov
push
xor
push
out
ins
daa
pop
lods
nop
rdmsr
(bad)
test
sbb
cmc
jle
or
mov
mov
outs
jle
rol
mov
lds
push
and
push
inc
jmp
mov
imul
stos
xchg
ud0
rcr
and
out
xor
mov
imul
repz
xchg
hlt
dec
mov
sbb
call
xor
xchg
aaa
and
jnp
daa
xlat
ret
out
sbb
test
sub
rcr
cdq
es
jmp
call
dec
pop
jg
adc
adc
mov
sub
ja
jb
xor
xchg
sbb
or
adc
pop
test
retf
sbb
sbb
dec
and
lods
mov
or
imul
pop
ins
cmp
pushf
inc
outs
or
neg
mov
fdiv
push
(bad)
out
mov
imul
add
and
cmp
sbb
int3
into
xor
jns
inc
xor
xor
js
jbe
rol
out
or
loope
sub
pusha
sahf
jmp
and
je
jge
cmp
cs
xchg
iret
push
jle
(bad)
or
enter
and
imul
xor
pop
dec
mov
fmul
xchg
aaa
pop
pop
adc
test
mov
inc
pop
les
mov
fld
iret
or
call
dec
fadd
test
ds
repnz
out
jno
sub
xchg
mov
lahf
push
cmp
ss
not
push
es
(bad)
jle
xchg
add
mov
inc
adc
cmc
xchg
dec
add
jl
lock
nop
adc
cld
int3
pop
retf
outs
ret
dec
jnp
add
adc
cli
or
pop
push
aas
imul
and
clc
adc
and
dec
xchg
push
or
out
sbb
ins
mov
ret
retf
ja
in
or
gs
imul
int3
push
aad
inc
inc
pop
xlat
cli
and
push
or
fidivr
shl
inc
adc
or
es
data16
fs
repnz
and
or
sar
(bad)
push
add
push
fldenv
mov
retf
jb
sbb
hlt
pop
loopne
or
sbb
imul
enter
aaa
aam
dec
leave
jp
xchg
mov
xor
hlt
in
adc
xchg
xor
pop
rcl
inc
das
movs
push
pop
mul
cmp
or
mov
adc
movs
push
sahf
sbb
in
or
or
jp
call
inc
and
ret
cmps
push
or
jae
xchg
popf
and
in
data16
pop
lea
or
pop
xor
sahf
xchg
sbb
cmp
fwait
push
dec
jmp
xor
or
enter
loopne
loop
fnstsw
jg
or
arpl
retf
cs
(bad)
stc
cmp
fld
push
inc
enter
pushf
out
inc
mov
push
test
lods
outs
add
pop
ja
sbb
mov
add
cvtps2pd
and
nop
aad
pop
pop
aad
pop
inc
inc
packuswb
and
lods
test
or
or
push
pop
mov
mov
dec
add
mov
push
mov
ins
je
sahf
inc
add
fsubr
fist
std
nop
mov
nop
int
jnp
ins
jnp
sub
dec
mov
pop
mov
sub
mov
cmp
ins
mov
loopne
cmc
pop
pop
pop
xchg
mov
dec
test
cmc
mov
dec
outs
adc
mov
jl
pop
imul
popf
cs
outs
dec
popa
in
inc
cmp
sbb
adc
push
fimul
stos
adc
iret
data16
fnsave
cdq
ins
jp
push
repnz
xor
sbb
comiss
fs
jbe
pop
ins
dec
and
sbb
ds
rol
lock
pop
sub
dec
test
mov
pop
xchg
sbb
push
mov
sub
adc
dec
lock
dec
push
xor
retf
push
std
cmp
lea
jp
xor
es
inc
sub
mov
sahf
inc
add
and
fwait
inc
imul
je
sbb
rcl
aaa
arpl
fstp
pop
dec
adc
inc
xchg
add
adc
sub
adc
retf
sbb
sbb
add
adc
dec
iret
jns
sub
call
addr16
sub
jnp
and
fdivr
loopne
dec
sub
cdq
mov
scas
add
xlat
repz
lods
add
xchg
retf
out
and
and
(bad)
ss
shr
retf
pop
dec
es
jnp
pop
inc
mov
push
rcr
dec
(bad)
pop
imul
(bad)
cdq
dec
xor
imul
adc
xchg
or
not
(bad)
js
push
jnp
ss
outs
mov
push
dec
stos
inc
in
add
psubd
jg
dec
sti
xchg
adc
pusha
adc
adc
outs
xlat
cs
retf
xor
cld
xchg
jnp
and
mov
jnp
rol
jl
xchg
or
retf
xor
psadbw
aam
out
or
pop
aam
rcl
retf
add
pop
cmp
sub
inc
push
popf
cmp
imul
cwde
call
in
sti
pushf
int3
retf
sti
and
aam
inc
push
cdq
arpl
test
clc
sub
aam
sbb
mov
cmp
add
push
shr
inc
popf
call
push
dec
mov
sbb
and
fimul
rol
shl
jb
js
in
int3
or
or
or
or
fcomp
bound
xchg
push
jbe
je
outs
cwde
inc
sbb
jns
imul
int
jae
push
mov
daa
ins
mov
pop
sbb
add
jb
(bad)
(bad)
pop
push
dec
and
sub
adc
mov
hlt
jns
test
adc
push
ins
mov
in
aas
xlat
inc
inc
push
mov
ja
int3
out
push
and
lods
sub
cli
dec
popf
or
loop
sbb
(bad)
cmp
lea
or
sbb
scas
jge
scas
lds
and
mul
mov
and
outs
mov
fstp
mov
sbb
ins
stos
lods
add
add
mov
xor
dec
push
aam
or
arpl
fisub
push
cwde
aam
sbb
jmp
push
sub
ror
and
pcmpeqb
mov
inc
int
popa
xchg
nop
(bad)
dec
fild
add
leave
sub
sbb
push
int
jno
popf
mov
xchg
data16
in
xor
cmp
inc
outs
mov
arpl
data16
wbinvd
mov
adc
mov
jns
jl
je
jno
dec
sahf
dec
daa
or
dec
sub
inc
cs
fld
pop
mov
pop
mov
pop
test
or
pop
pop
add
inc
neg
cmp
dec
lods
xchg
cs
xchg
mul
sub
push
sbb
aad
jb
adc
jmp
sub
out
cmp
int3
jl
jmp
mov
mov
mov
sub
aam
mov
add
mov
in
movs
fnstcw
add
pop
shl
ds
unpckhps
cmp
mov
inc
es
pop
push
xchg
pusha
add
pop
jo
pop
and
loopne
faddp
in
mov
fsubr
icebp
mov
adc
jns
push
aaa
pop
or
hlt
(bad)
ror
add
dec
cwde
and
sub
or
xchg
int
xor
mov
lahf
je
mov
xchg
aad
dec
push
js
ror
xor
outs
add
jae
dec
and
and
arpl
adc
retf
push
cli
mov
fisttp
aad
ja
mov
jmp
bndstx
xchg
sbb
es
lds
pop
adc
repz
add
ja
test
inc
ror
in
xor
test
test
adc
adc
retf
push
xor
adc
(bad)
pop
and
push
adc
in
(bad)
(bad)
lods
adc
scas
mov
neg
dec
push
add
imul
loopne
sbb
jbe
push
mov
pop
lock
and
xchg
jl
xor
push
mov
push
mov
pop
push
jno
xlat
add
out
add
push
xchg
push
inc
fs
xlat
cmp
icebp
mov
inc
xor
mov
xchg
dec
jp
psrad
ret
in
inc
rcr
fsubr
out
push
push
nop
dec
xor
mov
dec
push
fidiv
lea
adc
add
test
xchg
pop
retf
mov
xor
out
and
or
ins
dec
pop
lods
out
sub
sbb
dec
xchg
pop
lds
into
(bad)
shr
jbe
jge
push
sub
dec
(bad)
pop
mov
popf
cmp
arpl
ret
mov
(bad)
xor
jmp
shr
int
js
mov
into
mov
cmc
enter
adc
xor
sub
test
cmp
add
lea
fstp
inc
sti
inc
ins
rcl
cmp
hlt
inc
ror
push
adc
add
(bad)
cmp
sbb
dec
das
int3
inc
pop
call
std
adc
das
add
popf
pop
call
sti
xor
in
or
or
ficomp
jb
fnstenv
imul
and
cmp
add
pop
cdq
out
call
jae
mov
loop
dec
and
adc
sbb
cmp
in
fwait
repz
dec
jl
cld
pop
mov
push
adc
add
iret
fldcw
imul
stos
push
fst
inc
test
jb
jg
in
jmp
jo
out
or
push
jge
add
retf
(bad)
pop
sub
je
outs
outs
loope
mov
push
fidivr
xchg
pop
jno
or
and
push
adc
hlt
push
dec
outs
fdivrp
mov
sub
loopne
sub
fidiv
loopne
frstor
pop
int3
xlat
shr
dec
xchg
pop
int
sbb
mov
pusha
mov
je
pop
cld
rcr
jecxz
inc
cs
mov
cmp
fild
mov
mov
dec
clc
add
push
mov
aas
xchg
(bad)
xor
adc
test
sbb
or
imul
jle
retf
bound
icebp
jnp
imul
push
jmp
add
lods
(bad)
mov
stos
test
cld
ja
jns
or
fsubr
jbe
and
ja
jns
outs
pop
mov
imul
shl
and
or
cmp
inc
test
out
mov
and
push
int3
ret
int3
and
aam
dec
jp
sahf
xchg
push
and
mov
push
sub
scas
dec
lds
jmp
jo
jmp
js
jb
push
mov
or
imul
scas
test
or
outs
pop
mov
pop
pop
bound
sahf
and
loopne
ds
(bad)
pop
add
sub
xchg
pop
mov
inc
imul
adc
xchg
or
push
cmp
pop
push
adc
sub
cmc
imul
mov
stos
adc
cmp
mov
xchg
push
push
in
imul
cmp
out
es
xor
jmp
repz
pop
and
out
js
push
test
lods
cmc
xor
js
inc
dec
pusha
dec
jns
call
sub
push
ins
and
mov
(bad)
loopne
or
jmp
outs
or
dec
pusha
sub
sar
shr
cmp
mov
outs
jle
push
es
fisttp
or
int
int
(bad)
push
scas
pusha
adc
mov
call
push
frstor
push
nop
rol
fucom
shr
std
pop
repnz
hlt
(bad)
aas
adc
test
imul
cdq
mov
enter
push
push
sub
jg
inc
ja
int
(bad)
jge
inc
call
push
sub
jnp
or
add
adc
mov
daa
fwait
pushf
and
call
jge
adc
xor
ret
push
scas
xchg
unpckhps
xchg
cld
push
dec
xchg
repnz
or
inc
repz
push
fcomp
imul
icebp
push
adc
enter
dec
ins
mov
inc
push
or
pushf
inc
lock
in
out
cmp
mov
jo
sub
mov
and
hlt
pcmpgtd
ror
rol
jnp
pop
lods
pop
sbb
pop
or
out
js
bound
ins
or
rcl
and
lock
outs
adc
mov
push
inc
mov
mov
push
(bad)
xor
sbb
aas
jl
push
sbb
int3
(bad)
dec
xlat
daa
fcmovbe
xchg
inc
dec
xor
rcr
cli
int3
add
cs
stos
test
mov
pop
sahf
dec
xchg
mov
add
xchg
test
outs
les
mov
(bad)
pop
loopne
clc
adc
ja
or
test
or
ins
clc
shr
inc
scas
adc
into
mov
xchg
cwde
repnz
jecxz
jns
lea
or
sbb
mov
mov
in
and
sub
or
inc
fcmovnu
clc
idiv
ror
cmc
sub
ror
fs
lea
dec
mov
pushf
adc
neg
dec
adc
add
dec
pop
mov
(bad)
cli
stc
sahf
and
or
pop
out
(bad)
or
nop
xor
pop
stos
push
fs
outs
aas
jle
push
pop
push
adc
lahf
in
xchg
xor
shr
inc
sub
push
mov
dec
fcom
and
sub
add
cs
adc
inc
push
cmps
(bad)
jns
mov
xchg
arpl
cmps
in
push
fbstp
leave
fs
test
sbb
pop
(bad)
add
jb
sbb
dec
cmp
xor
pop
dec
cmp
je
push
mov
mov
popa
dec
test
xchg
and
bound
mov
push
test
mov
sti
mov
js
sti
pushaw
cmc
jns
adc
cmps
xor
mov
imul
loop
cmp
lahf
pop
cmp
fimul
push
sbb
push
icebp
or
add
push
stos
xor
add
and
gs
fstp
push
fld
or
or
dec
sbb
xchg
sub
inc
pop
inc
inc
inc
(bad)
aam
inc
xor
add
sbb
or
xchg
(bad)
adc
dec
loop
imul
sub
hlt
pop
inc
mov
and
into
sub
xchg
pop
and
mov
cmp
das
outs
mov
mov
pop
fld
(bad)
in
xor
and
push
mov
add
loopne
or
popa
mov
ins
jg
pop
pop
(bad)
pop
inc
mov
out
scas
adc
or
mov
mov
pop
pop
mov
sbb
loop
(bad)
loope
xor
in
sub
cmp
sub
std
(bad)
push
sbb
movs
pop
push
sub
push
sbb
adc
jns
sbb
dec
jg
call
mov
or
call
mov
fidivr
imul
popf
pop
cmp
or
sub
shl
and
pop
xor
inc
cmp
fisubr
addr16
ja
push
sub
jp
dec
mov
aaa
cmp
call
xor
inc
mov
or
xor
jb
mov
cmp
add
or
je
mov
sbb
rcr
fld
clc
pop
and
pop
mov
mov
xchg
pop
mov
inc
ret
pop
add
push
push
gs
push
xor
or
imul
pop
arpl
dec
test
out
mov
jecxz
jo
loop
imul
imul
and
pop
dec
ret
daa
push
xor
and
xor
and
sub
mov
or
not
xchg
rcr
push
lds
and
mov
xor
pop
sbb
pop
cmp
nop
and
or
mov
dec
sub
sub
cmc
dec
enter
or
cmc
adc
pop
inc
test
push
adc
fcomp
dec
popf
jl
nop
test
dec
stos
sbb
xchg
std
and
sar
and
xchg
dec
enter
add
and
hlt
popf
and
add
das
xchg
out
xchg
aam
and
or
xchg
sub
jae
xor
daa
sahf
jno
gs
sbb
push
inc
and
cmp
stc
popf
lahf
sub
pushf
push
sub
push
ins
mov
cli
sbb
lods
and
sahf
daa
aam
pop
jle
(bad)
pop
pop
jge
add
mov
adc
fmul
ins
mov
bound
push
stos
repnz
sub
jb
mov
push
mov
loopne
addr16
cwde
xchg
call
scas
repz
pop
pop
dec
cmp
cmp
loope
int3
dec
sub
dec
mov
cmp
out
dec
adc
dec
mov
xor
stos
cmp
dec
mov
hlt
idiv
loopne
cli
lods
sahf
sub
cmp
add
dec
(bad)
(bad)
sub
clc
and
mov
pop
jecxz
inc
add
fwait
repnz
xchg
dec
fld
xor
inc
xchg
scas
jne
nop
lds
or
inc
mov
jg
push
push
dec
stc
mov
xchg
inc
xchg
or
dec
mov
push
cmp
jmp
aaa
and
and
iret
ds
ss
fisttp
outs
imul
mov
sub
hlt
or
or
dec
jecxz
stc
xor
mov
mov
repnz
jmp
aas
or
and
push
and
repnz
in
dec
(bad)
(bad)
out
cld
dec
cmp
xor
lock
jnp
lds
sbb
frstor
add
mov
or
dec
loopne
loop
adc
inc
shr
inc
inc
and
pop
mov
(bad)
retf
pusha
sub
leave
jnp
in
add
xor
mov
jecxz
aas
jmp
imul
popa
mov
imul
mov
pop
int3
in
mov
in
push
imul
xchg
cmp
adc
loop
shl
xor
push
inc
push
lea
adc
mov
and
jb
in
jae
aad
mov
mov
or
frstor
das
or
not
sti
es
or
cmp
aas
aad
dec
mov
sbb
and
dec
jno
les
ss
cmps
dec
sahf
ins
das
push
xor
and
cmp
cld
dec
inc
add
cli
sbb
jne
push
mov
cmp
and
or
adc
push
or
sbb
ss
cmp
iret
jecxz
xor
sti
data16
into
ret
mov
cmp
jg
mov
sub
pop
dec
jae
push
push
jl
cmp
sub
dec
mov
mov
loop
jmp
je
jmp
sub
cmp
sbb
test
loop
pop
and
adc
sbb
cmovb
ins
inc
push
cs
aaa
xor
bound
pop
xor
fwait
push
cmc
das
(bad)
repz
jb
mov
shl
sahf
inc
mov
cmp
xor
retf
pop
call
loop
add
loope
jo
xchg
repz
sub
or
sub
lea
fsubp
dec
cmp
xchg
iret
or
mov
bound
mov
outs
inc
sub
dec
imul
cli
mov
repz
clc
std
subps
out
sti
and
mov
sahf
arpl
and
test
or
int
xchg
in
or
and
push
sub
aad
add
mov
mov
in
dec
mov
jecxz
push
sbb
cmc
xchg
cmp
adc
ror
inc
push
aaa
jge
mov
adc
xor
call
sub
pop
lods
test
sub
ss
push
add
mov
sub
or
push
cmp
je
inc
loope
dec
xor
xchg
(bad)
jmp
jns
inc
cdq
sub
bound
fnstcw
jp
sbb
mov
inc
push
rcr
and
and
fstp
cli
fiadd
les
stos
imul
xor
mov
fwait
call
jne
idiv
xor
icebp
test
sub
add
cmc
inc
pop
mov
mov
int
cs
out
int
add
xchg
sub
int
pop
cld
xor
loopne
rcl
xchg
ret
dec
xor
xchg
xor
call
repz
cs
sbb
sub
hlt
cmc
cmp
or
mov
cmovae
int
xchg
push
int
outs
faddp
and
cli
in
mov
cmp
sbb
jp
jns
pop
sub
mov
inc
mov
pop
dec
jbe
pop
xor
sub
xchg
repz
inc
sar
inc
clc
inc
outs
jl
sbb
js
dec
or
and
mov
lods
mov
test
cmp
bound
and
push
dec
xchg
or
cmp
sbb
pop
push
sub
jno
fld
in
leave
push
jmp
push
repnz
or
lahf
call
dec
or
jmp
cwde
fst
dec
cmc
pushf
push
inc
mov
dec
stos
aam
pop
pop
je
push
sbb
pop
xchg
push
pop
cwde
inc
add
sbb
dec
mov
mov
xchg
and
push
xor
cmp
or
stc
aaa
bound
and
inc
test
pop
sub
adc
or
pushf
mov
pushf
xchg
fwait
pop
fs
mov
imul
jp
repnz
sub
sub
cld
cmp
pop
sub
movs
data16
adc
push
and
cmc
mov
inc
jnp
gs
mov
ins
into
push
pop
retf
dec
push
pop
in
mov
pop
daa
cmp
dec
sub
and
ss
cmp
add
cdq
fwait
sub
call
push
repnz
or
xor
bound
adc
mov
fst
xor
sub
loop
dec
xor
mov
retf
pop
iret
and
dec
inc
clc
dec
xchg
sbb
fld
inc
mov
scas
cmc
or
xchg
inc
sub
and
aam
pop
in
aad
dec
xchg
push
int3
or
jo
add
push
inc
test
jae
sub
out
mov
fldpi
push
dec
cmp
mov
cld
sub
sub
mov
fadd
cmp
popa
cs
loope
cmp
(bad)
cmp
fimul
stos
(bad)
stc
inc
pop
dec
or
fwait
inc
pop
inc
sub
sbb
push
sub
jns
data16
pop
or
xor
xor
sti
cmp
sub
lds
(bad)
cmp
push
repz
call
pop
dec
sub
add
lock
loopne
or
in
xor
in
ja
loopne
dec
lea
xchg
fwait
lods
and
pop
sub
pusha
jno
xchg
pop
sub
and
(bad)
in
movs
data16
stos
data16
cmp
jmp
sub
jno
rcl
test
pushf
es
dec
cmp
or
dec
mov
loop
sub
mov
sub
out
dec
das
int3
jle
xor
sbb
pop
dec
or
dec
xor
(bad)
push
mov
imul
test
mov
cmp
lds
dec
or
cmp
pop
repnz
fimul
(bad)
data16
sahf
cli
imul
not
std
fcmovb
pop
inc
fstp
fimul
sbb
and
mov
pop
leave
hlt
xchg
pop
mul
push
retf
push
dec
and
inc
out
cdq
push
and
dec
inc
pop
mov
jnp
dec
call
pop
sub
mov
adc
sbb
add
mov
pop
aas
imul
sti
rol
and
push
or
out
pop
(bad)
call
xchg
fisub
xchg
dec
and
mov
add
iret
nop
and
pop
push
dec
loope
(bad)
sbb
call
sub
aad
pop
cmps
std
pop
(bad)
sub
add
inc
pusha
pop
cmp
pop
lahf
mov
inc
cdq
cdq
bound
fwait
and
sahf
rcr
icebp
std
rdpmc
jmp
cli
xor
arpl
jo
jbe
pushf
aad
(bad)
cmp
aaa
cdq
and
mov
jno
cs
or
dec
xor
inc
or
adc
inc
cmp
fst
outs
call
outs
pop
fiadd
push
leave
push
pop
sub
add
or
sbb
stos
rcr
lock
test
cmp
nop
std
stos
hlt
pushf
std
stos
imul
fstp
sahf
or
daa
cmps
mov
fmul
test
pop
add
gs
sub
das
in
ret
adc
inc
ss
mov
bound
sub
jo
jg
adc
dec
pop
rcl
xor
ficomp
cmps
xor
add
ins
sbb
xchg
or
bound
dec
ins
pop
add
pop
inc
mov
loope
mov
push
push
add
fidivr
adc
or
int
dec
mov
inc
ss
scas
bound
cmc
xchg
adc
xor
in
aaa
ror
(bad)
jno
inc
and
ret
sbb
dec
adc
cmp
(bad)
fwait
cmp
cmp
mov
ja
stos
lods
or
mov
pop
repz
sbb
retf
sbb
pop
dec
mov
cmp
mov
retf
pop
mov
dec
ss
push
mul
out
mov
inc
cmp
fst
jmp
pop
or
mov
inc
hlt
mov
and
cmp
adc
ss
sub
cmp
inc
xor
out
lahf
imul
lahf
imul
jo
popf
pop
mov
hlt
jns
rcl
jmp
mov
and
ds
push
pop
loope
call
jo
inc
test
cs
stos
sahf
push
push
mov
or
dec
pop
retf
or
iret
gs
dec
out
sbb
fwait
jb
jnp
inc
mov
push
xor
pop
sbb
and
and
pushf
in
jmp
es
mov
inc
sar
outs
mov
sub
push
jmp
add
loopne
push
mov
pop
faddp
test
inc
mov
xchg
mov
cmp
jae
sub
mov
inc
loopne
test
xor
pop
add
lahf
xchg
sbb
gs
lods
mov
(bad)
fld
push
mov
das
lock
mov
fisttp
push
out
xor
add
fbstp
mov
inc
fdivr
shl
loope
test
(bad)
mov
in
loope
cdq
into
jmp
sbb
xlat
out
or
xchg
push
and
dec
and
dec
ror
cwde
pop
cmc
bound
imul
sub
dec
sub
imul
fwait
push
pop
imul
loop
call
fiadd
adc
mov
inc
mov
jle
cmc
jg
pop
jle
xchg
pop
mov
sbb
sub
pop
cmp
in
bound
push
and
or
push
aas
xor
std
fwait
dec
xor
xchg
fiadd
jecxz
dec
pop
loope
ret
xchg
addr16
sbb
stc
rol
adc
add
jnp
ss
push
std
push
add
cmp
push
or
xlat
jns
mov
cmp
pop
adc
xor
xor
cmp
add
and
or
(bad)
cli
pop
inc
test
ins
dec
mov
retf
mov
and
add
jl
xchg
xor
xor
xor
push
loope
and
and
inc
hlt
pop
imul
clc
push
inc
pop
iret
sub
push
cmc
adc
cmp
hlt
test
int
jp
cdq
pop
fimul
inc
or
bndldx
jmp
pop
add
cmc
data16
add
add
adc
addr16
sbb
sub
ds
ins
or
xchg
inc
xchg
je
push
mov
or
inc
fdivrp
nop
cmp
cmp
pop
mov
pop
and
pop
jno
test
pop
mov
push
inc
aam
and
xchg
add
mov
or
aaa
leave
mov
pop
jmp
push
sub
data16
lock
and
dec
ins
inc
mov
mov
cmp
cld
iret
pop
(bad)
mov
or
push
and
retf
sub
xor
jecxz
sar
add
into
cmp
pop
aas
es
mov
inc
jmp
dec
mov
xchg
dec
mov
dec
pop
imul
test
xor
pop
inc
(bad)
out
lahf
je
ret
sti
sub
lock
push
icebp
jecxz
test
push
daa
call
cmp
stc
es
xchg
aad
inc
mov
lea
or
popa
sbb
(bad)
xor
ret
lock
cmp
mov
xchg
push
xchg
mov
cld
xchg
pop
cmp
cmp
in
and
add
retf
cmp
addr16
in
test
jbe
pop
and
mov
jge
mov
loop
lea
jae
xchg
pop
stc
or
dec
ss
scas
dec
adc
dec
xchg
and
or
dec
inc
in
xchg
or
hlt
pmaddwd
adc
xchg
jae
jmp
imul
arpl
call
xor
pusha
sub
aam
inc
mov
and
or
nop
jecxz
sbb
repnz
call
dec
cmp
pop
iret
or
jle
add
pop
add
scas
arpl
cmp
inc
adc
bound
cld
not
jo
push
das
add
cld
inc
jo
iret
out
mov
shr
hlt
popf
sub
sub
das
imul
into
mov
dec
fadd
sub
sub
(bad)
cwde
cwde
xor
(bad)
rcr
icebp
es
dec
fmul
cwde
lea
pop
adc
bound
mov
pop
pusha
aaa
xchg
push
sub
gs
cmc
add
shr
daa
sbb
and
inc
sbb
call
stos
push
test
sbb
pop
push
es
mov
adc
clc
or
xlat
lods
add
and
xor
outs
icebp
and
mov
sahf
dec
addr16
movs
and
sub
lock
cmp
inc
into
push
add
sar
or
xor
mov
push
dec
mov
lods
inc
lods
dec
xchg
jno
test
cli
test
sti
cmp
call
imul
int
push
add
cli
mov
mov
ss
ja
cdq
fcmovu
xchg
inc
shl
push
mov
push
sbb
xchg
in
bound
and
int
pop
(bad)
imul
test
fwait
mov
cmp
pop
not
ins
jns
mov
hlt
or
adc
sub
inc
push
sub
sub
sub
jmp
lock
pop
adc
xchg
push
ins
sub
adc
es
dec
pop
mov
lods
push
jb
js
sub
mov
retf
xchg
mov
std
mul
imul
pop
mov
jg
or
xlat
or
inc
xchg
cmp
jne
mov
icebp
out
ret
sub
dec
out
push
sbb
clc
loop
cmp
inc
add
dec
sahf
loop
ss
addr16
pop
clc
add
mov
fdiv
adc
pusha
pop
push
and
nop
scas
lea
(bad)
dec
sub
aas
aam
fidivr
pop
dec
sub
and
jbe
and
mov
fistp
stos
retf
adc
and
test
ret
or
adc
hlt
mov
xchg
out
add
pop
dec
stc
xlat
push
hlt
iret
retf
and
xor
adc
xchg
mov
adc
xor
xchg
jp
and
popf
repnz
fwait
into
sti
xor
imul
lds
dec
cmp
jg
stos
xor
loop
fs
and
pop
outs
out
stos
idiv
aam
in
hlt
ror
cmp
shl
mov
ficom
cmc
jl
xor
and
inc
lods
cmp
push
ret
mov
dec
xchg
call
cdq
imul
xchg
push
adc
mov
in
adc
pop
imul
sti
xor
es
and
inc
or
dec
sub
mov
jne
xchg
inc
jo
and
mov
jecxz
js
sbb
xchg
(bad)
adc
outs
xor
fimul
imul
cdq
out
xor
fldcw
cmp
jns
mov
xchg
pop
push
adc
inc
and
jecxz
mov
cwde
mov
in
fidiv
inc
pop
dec
nop
cmc
mov
outs
(bad)
imul
jg
pop
inc
mov
(bad)
call
rcl
push
pop
je
push
adc
or
xchg
js
daa
dec
and
inc
fld
dec
cmps
mov
es
add
bound
rol
aaa
(bad)
inc
add
mov
js
lahf
pop
add
add
test
push
loop
in
pushf
and
cmp
iret
sub
jmp
xchg
repz
push
and
in
sub
repz
call
fidivr
xor
pop
imul
pop
sbb
and
xchg
imul
sti
add
lods
jle
loope
es
(bad)
adc
and
ds
mov
sub
popa
lods
retf
pop
mov
cmp
dec
ss
outs
inc
pop
mov
xchg
xchg
test
mov
call
cmp
fbld
jo
pushf
push
lock
push
(bad)
dec
xor
jecxz
lods
fucomp
add
int
cwde
sbb
add
pop
push
fwait
pop
test
pop
(bad)
jae
add
push
jnp
arpl
and
test
add
inc
mov
xchg
mov
out
loop
add
popf
pop
popa
ins
mov
scas
mov
test
mov
stos
pushf
jmp
push
sahf
mov
shl
std
call
fisubr
inc
xlat
hlt
cmps
aas
(bad)
mov
arpl
or
xor
lods
mov
mov
repz
cmp
or
cmp
pop
sub
fcom
std
xor
and
ins
sub
pop
out
mov
es
in
shl
inc
or
mov
jo
xor
xchg
mov
sub
mov
ss
outs
aaa
test
dec
loopne
cmp
push
inc
repnz
pushf
pop
cmp
and
pop
sahf
imul
in
or
movs
pop
cld
and
mov
jp
and
or
aad
jnp
cmc
xor
ds
xor
cmp
mov
mov
pop
test
cmp
cmp
aam
scas
ins
fstp
add
in
dec
pop
mov
cmp
xor
cld
in
xor
mov
mov
adc
aas
in
sahf
pusha
sbb
shl
sub
inc
retf
jmp
mov
inc
jns
mov
sbb
mul
inc
icebp
daa
idiv
xor
pop
xlat
push
fisttp
movs
add
fldcw
pushf
sbb
add
lock
xor
cmps
jno
fnsave
and
jmp
sub
pop
iret
je
mov
cmp
cmp
ds
aaa
or
loop
lock
cmc
lods
and
jmp
sub
mov
shl
call
je
xor
push
or
sbb
push
leave
cmp
aad
in
dec
sub
ror
mov
cdq
xchg
(bad)
stos
cbw
and
and
or
std
xchg
dec
(bad)
push
sahf
add
jecxz
sahf
xlat
or
inc
dec
push
sub
mov
call
mov
into
mov
sub
imul
out
xchg
sub
push
push
scas
popf
ret
pop
repz
dec
call
lock
repnz
loop
inc
hlt
or
fdivr
and
inc
and
mov
jno
nop
fst
cmp
icebp
cmc
push
repnz
(bad)
lods
ins
jmp
enter
in
or
add
push
je
push
stc
sbb
and
aam
addr16
sahf
bound
and
mov
jecxz
cmps
loopne
sub
stos
cmp
iret
inc
xor
xor
cmp
inc
aam
dec
ss
repz
inc
lahf
jg
xchg
sbb
add
neg
add
jb
inc
add
or
pop
cli
inc
(bad)
sbb
cdq
fstp
or
call
pop
dec
push
fwait
pop
jns
ret
xlat
xchg
div
cmp
jns
loopne
ins
or
aam
push
adc
ins
cmp
out
aaa
icebp
sub
bswap
les
and
lock
mov
cmp
jmp
sub
cmc
fist
lea
ds
push
sub
repz
aas
ror
push
xor
hlt
mov
pop
mov
xor
sbb
push
mov
imul
pop
xor
add
(bad)
mov
inc
dec
bound
aam
call
icebp
in
and
xchg
jb
adc
loopne
pop
std
clc
cmp
aad
jo
pushf
clc
retf
fild
push
mov
jg
repnz
adc
fdivr
sbb
cmp
pop
lods
or
sbb
sahf
or
aas
and
daa
pop
fdivrp
pop
inc
xchg
and
fs
mov
or
hlt
popa
dec
imul
push
push
jge
mov
data16
repnz
inc
fnstcw
out
retf
das
fnstcw
(bad)
jbe
stc
push
gs
sahf
clc
inc
and
pop
sub
out
push
repz
dec
adc
lds
mov
dec
(bad)
jae
push
and
pushf
pop
in
mov
ss
fdiv
sbb
test
pop
xchg
sub
outs
jecxz
cmp
aam
out
mov
cmps
xor
xchg
fwait
xchg
stos
xor
(bad)
push
mov
enter
(bad)
call
(bad)
mov
call
sub
add
stc
inc
inc
sahf
es
out
jle
shl
ds
mov
std
sbb
dec
sbb
xchg
inc
ds
(bad)
push
add
push
loopne
xchg
pusha
pop
xor
bound
pop
or
push
or
mov
jle
push
aam
sbb
fist
cmp
pop
ja
or
cmp
pop
aaa
adc
add
xchg
(bad)
sub
mov
outs
test
ret
movs
out
retf
inc
push
add
ja
pop
push
es
and
xor
mov
outs
sub
pop
sbb
add
dec
add
dec
jne
arpl
pop
out
bound
outs
push
xchg
jns
sbb
imul
clc
push
cwde
adc
inc
cmp
(bad)
dec
dec
inc
jbe
out
xor
das
lods
jg
arpl
fldenv
pop
mov
pop
jle
(bad)
xor
test
xor
or
cmp
pop
jae
inc
and
jle
leave
inc
sub
mov
sbb
or
arpl
ss
imul
call
mov
dec
xchg
(bad)
cmp
retf
jp
int
xor
imul
test
sbb
add
in
daa
aad
div
and
stc
setl
adc
and
or
fdiv
and
or
loop
xchg
pop
fisttp
ins
cmp
retf
adc
fcos
mov
pusha
sub
inc
ds
mov
fsubr
pop
dec
mul
xchg
arpl
jmp
xor
jno
stos
adc
jmp
inc
cmp
in
imul
out
and
push
pusha
jmp
adc
or
or
dec
test
or
jb
sbb
arpl
lahf
xchg
pop
shl
add
lods
dec
lock
pop
inc
cmp
sub
pop
mov
test
cmp
mov
xor
and
neg
xor
sbb
push
and
loopne
dec
xor
call
or
xchg
sahf
stc
idiv
out
push
cmp
or
jmp
mov
pop
add
push
cmp
aaa
add
xchg
bound
int3
sub
adc
mov
sbb
xor
xor
add
lods
pop
adc
and
and
retf
pop
push
mov
push
cli
js
cmp
ss
pop
push
fbld
dec
mov
dec
pop
inc
xchg
sub
enter
cmp
jbe
sbb
out
jmp
ss
retf
pop
xchg
arpl
ror
fistp
dec
mov
xchg
nop
adc
aad
shl
dec
sub
fnstsw
pop
cmps
ds
(bad)
fldcw
(bad)
icebp
mov
xchg
loop
sub
push
mov
jae
arpl
lahf
push
or
retf
push
xchg
sub
scas
xchg
pop
jecxz
pop
add
cmps
mov
hlt
mov
mov
or
mov
aas
mov
mov
mov
inc
jle
movs
ret
ret
push
mov
mov
mov
jmp
dec
into
pop
or
fdivp
add
lahf
leave
add
fsubr
or
dec
mov
arpl
xor
xor
and
jbe
ror
ins
fimul
in
std
or
sbb
or
loop
push
neg
hlt
jbe
inc
push
sub
jmp
add
retf
out
ror
sub
cmp
call
push
retf
call
popa
xchg
aad
jle
pop
mov
je
aaa
in
in
int3
fwait
xor
mov
mov
xor
(bad)
and
xchg
cmc
cmc
mov
adc
and
or
or
out
in
cmp
minps
std
or
mov
sti
in
dec
in
stc
inc
adc
imul
aas
aad
in
adc
mov
in
fsubr
in
and
pop
push
sbb
add
sbb
call
or
sub
popa
aas
or
mov
or
sar
adc
adc
in
imul
mov
arpl
jle
cwde
mov
outs
jg
pop
jmp
sub
or
xchg
sub
imul
pop
sub
sbb
inc
jne
cs
cmps
pop
arpl
add
or
test
or
(bad)
adc
aad
rcl
mov
mov
push
pop
or
push
push
stos
push
sti
out
mov
sub
mov
mov
call
popa
jb
or
fistp
loope
xchg
repz
nop
jl
ficom
scas
jmp
mov
add
(bad)
(bad)
outs
push
xchg
sub
mov
lock
mov
mov
jmp
bound
cmp
xchg
sbb
cmps
repnz
jb
sbb
ins
mov
pop
inc
fld
xchg
and
loop
ins
cld
xchg
add
sub
ja
pop
aad
dec
push
xchg
add
sub
dec
pop
adc
push
in
ins
sub
mov
fwait
jmp
imul
aad
add
(bad)
sbb
outs
sbb
cmp
cmp
add
mov
(bad)
ret
xchg
aam
add
dec
add
cs
or
add
push
popa
cmp
mov
in
sbb
rcl
cdq
adc
addr16
xchg
fmul
leave
push
(bad)
inc
xor
sbb
jl
adc
mov
dec
addr16
int3
call
cmp
sbb
and
pop
jmp
test
pusha
adc
scas
call
sbb
fwait
add
shrd
push
and
fwait
inc
xchg
in
(bad)
jge
jmp
ret
mov
cmp
cmp
(bad)
in
pop
push
arpl
retf
enter
gs
mov
test
inc
or
adc
stos
mov
(bad)
repz
sub
sub
fld
add
mov
ret
fistp
xchg
push
sti
lods
sbb
dec
(bad)
mov
sub
or
cmp
mov
imul
pop
arpl
ror
in
dec
ja
inc
jmp
inc
fistp
and
inc
mov
add
xchg
dec
push
mov
inc
(bad)
fiadd
out
stc
push
jb
sahf
mov
dec
add
jg
cmp
aam
jnp
shl
pop
sti
adc
push
pop
xchg
std
or
fild
pop
sbb
popf
jne
inc
jmp
add
retf
cmp
push
arpl
adc
cmp
fs
add
push
push
sub
or
add
dec
mov
lods
xor
cmps
in
sub
add
add
jge
mov
jp
or
inc
ret
add
xor
retf
idiv
xchg
ins
xor
jmp
adc
and
sub
sub
dec
add
cli
mov
cli
or
adc
dec
lea
and
xchg
jecxz
mov
sar
lds
popa
or
aas
stos
sbb
dec
outs
add
hlt
xchg
dec
sub
sub
xor
mov
sbb
ins
mov
repz
dec
or
leave
dec
cmp
jecxz
add
mov
and
lahf
adc
xchg
push
pop
test
icebp
push
outs
lods
cmp
mov
or
pusha
or
inc
int3
cmp
jp
sub
jmp
cld
popf
add
and
jnp
cwde
and
sbb
in
jb
xchg
dec
call
ins
test
inc
cmc
jnp
fidivr
retf
mov
repz
std
scas
sbb
inc
jb
and
xchg
stos
or
and
aad
jo
stos
and
or
cmp
lods
or
fs
add
enter
sbb
add
add
jecxz
jb
rol
aam
stos
ins
xchg
push
add
or
inc
das
and
call
sti
outs
dec
out
jb
pushf
rol
mov
lea
mov
cld
cmp
push
sbb
rcr
in
inc
dec
fcomi
add
mov
add
int3
xchg
call
jne
add
mov
add
pop
imul
stos
sbb
cmp
jno
sub
inc
jb
sbb
pop
std
mov
mov
or
mov
mov
mov
call
xchg
out
lea
xlat
fs
inc
add
sbb
pop
pop
inc
sbb
adc
dec
rcr
cmp
mov
push
or
jnp
adc
outs
xchg
cmp
in
sub
jne
push
or
inc
mov
sti
mov
pushf
out
mov
mov
in
aas
(bad)
jmp
retf
popf
out
push
xor
cmp
cld
pop
cmp
mov
and
jmp
pop
push
mov
mov
in
ins
cmp
inc
add
test
fmul
adc
push
cdq
fisttp
xor
sti
jo
inc
jmp
cmp
jg
push
int
sbb
mov
rcr
xchg
xor
movs
adc
push
cmp
cmp
add
sbb
sbb
jb
test
int3
pop
movs
add
push
pop
pop
push
push
aad
and
fwait
(bad)
push
xor
fneni(8087
dec
cmp
add
xchg
inc
sbb
push
push
xor
pop
mov
test
sub
push
mov
jbe
lea
push
push
push
enter
retf
add
cld
test
add
addr16
aam
movs
popf
popf
mov
add
(bad)
movs
jl
(bad)
ficomp
mov
pop
jmp
dec
enter
mov
or
hlt
int3
jnp
pop
out
and
int
movs
mov
les
out
movs
pop
sub
int
jecxz
dec
dec
cs
jge
xor
mov
outs
jmp
test
imul
xchg
pop
sbb
push
cmp
mov
sbb
fucomip
xor
mov
adc
int
xor
inc
mov
(bad)
adc
push
sbb
inc
arpl
mov
mov
jmp
test
xchg
xchg
mov
adc
xor
retf
sbb
repz
retf
dec
das
jne
call
jge
sbb
dec
shl
pop
rol
shl
int
xor
mov
mov
neg
int
mov
and
or
jl
pcmpeqw
les
push
adc
pop
sbb
fdiv
cli
adc
mov
cmp
pop
out
or
lods
fsub
(bad)
imul
jne
inc
loopne
push
loop
lahf
dec
(bad)
cmp
dec
xchg
fs
jmp
popa
std
add
or
push
pop
imul
dec
shr
mov
mov
cld
lfs
inc
or
inc
rcr
cmp
inc
cmp
adc
jp
and
sbb
in
sti
retf
sahf
and
sub
push
sbb
and
jl
dec
push
push
ins
cmp
xchg
xor
or
fcmovnb
les
ja
cmp
mov
ss
arpl
dec
cmp
jp
push
(bad)
test
imul
lods
inc
and
aam
adc
or
dec
jp
pop
lahf
or
pop
gs
fld
jmp
mov
and
aaa
and
pop
jnp
dec
retf
jo
sbb
cmc
popa
or
lods
lea
mov
dec
gs
xchg
and
sbb
add
sahf
jo
loop
dec
push
fisttp
in
cmp
jno
xor
addr16
inc
sbb
dec
test
aas
mov
jp
in
jp
add
test
pop
les
inc
push
call
imul
daa
jo
pop
jne
add
ins
jae
inc
aam
jb
lods
jb
dec
pop
int3
retf
shl
push
shr
or
adc
stc
inc
dec
pop
leave
repnz
pop
xchg
jne
lods
push
dec
or
daa
(bad)
cld
dec
and
jg
in
in
xchg
push
add
push
push
pop
jmp
(bad)
pushf
daa
pop
mov
sahf
rcl
ins
xor
dec
inc
jmp
and
sub
int3
popf
and
sti
sbb
xor
ins
inc
pop
cmp
loop
jl
jmp
stos
mov
data16
xor
cld
pop
sub
mov
jecxz
popf
std
sti
jb
pop
push
jne
push
imul
add
mov
in
xchg
rol
mov
sub
fcomp
dec
ret
push
and
popf
xchg
pop
out
mov
xor
inc
pop
push
sahf
and
xor
jmp
sbb
pushf
dec
dec
ins
loopne
dec
aam
dec
test
dec
lods
add
mov
mov
mov
call
dec
xchg
icebp
jae
mov
imul
outs
xor
test
xchg
or
sahf
adc
push
test
sub
dec
retf
int3
aas
pop
daa
dec
setle
cdq
jg
pop
pop
adc
mov
jno
jmp
in
push
or
(bad)
push
sub
jmp
inc
lds
and
jmp
inc
fmul
dec
xchg
sub
jl
inc
dec
popf
adc
inc
xchg
loope
jmp
xor
add
in
adc
repnz
imul
cmp
jbe
test
in
sahf
cmp
int3
xor
in
xchg
arpl
lods
xchg
gs
leave
sbb
inc
ficomp
xor
das
sbb
shl
lds
sti
mov
cmp
fs
xor
cmp
push
pop
or
in
retf
mov
or
iret
ror
popf
cmp
loopne
aaa
bound
jns
fcmovnbe
jl
mov
cli
fldenv
and
outs
(bad)
jnp
ja
pop
int3
dec
cmp
out
adc
and
iret
stos
fwait
ret
mov
adc
jb
daa
jmp
adc
in
ret
lock
and
sub
ins
xchg
sbb
jecxz
dec
sbb
outs
add
lahf
and
or
or
sbb
fsubp
jnp
icebp
fucom
dec
mov
and
jge
cmp
adc
fmul
cmp
jp
pop
mov
jbe
xor
(bad)
push
jae
mov
add
jg
cmp
or
dec
cmp
and
add
es
sti
out
sub
or
mov
mov
daa
ror
push
mov
add
leave
ins
push
imul
push
mov
xchg
sub
stos
jp
stos
jecxz
cld
ror
push
popf
sbb
cld
add
mov
jecxz
pop
int
outs
jno
jg
call
retf
cmp
shl
sub
cld
xchg
(bad)
ins
push
stos
popf
fdivrp
inc
sbb
and
sbb
std
and
out
jne
push
dec
rol
popf
lods
inc
or
dec
mov
shr
jmp
loopne
sub
inc
cwde
adc
cwde
sbb
cld
cmp
dec
in
inc
xor
dec
pop
xor
dec
pushf
adc
cmp
push
sbb
add
int
stos
push
xchg
push
inc
xchg
or
dec
xor
ror
imul
aam
jo
stc
cmp
and
xchg
pop
cli
je
xchg
rcr
rcr
ja
rol
jae
idiv
ds
pop
sub
inc
dec
sahf
stc
rcl
xchg
(bad)
ins
mov
adc
dec
dec
out
xor
aaa
iret
aas
inc
and
out
adc
sub
mov
loope
pop
dec
jmp
jmp
iret
xor
dec
dec
fistp
inc
pop
xor
arpl
jnp
repz
or
mov
dec
mov
int3
cmc
inc
lock
repz
test
sbb
cmps
ins
dec
cmps
push
rcl
or
test
movs
int3
pop
popa
sub
mov
jb
cwde
add
lds
imul
jo
mov
pop
adc
xor
and
enter
pop
aam
mov
mov
pop
cmp
mov
jle
iret
test
cdq
mov
push
xor
aam
add
pop
jecxz
inc
ins
mov
pop
fs
popf
jae
test
frstor
mov
sub
inc
aaa
fidiv
int3
sub
in
fst
jle
pop
inc
movs
or
mov
xor
or
out
clc
ins
ret
sub
or
adc
bound
inc
fnsave
jmp
or
daa
mov
add
sbb
ret
ins
dec
or
mov
mov
fs
push
aad
pop
or
(bad)
cmp
add
retf
jmp
mov
mov
ja
dec
aad
cmc
jecxz
or
das
xchg
or
mov
fst
inc
jmp
fmul
fs
or
test
lahf
cmps
mov
bound
ins
cmc
pop
(bad)
push
or
add
mov
shl
loopne
outs
or
adc
bound
inc
fbstp
jmp
mov
add
sbb
(bad)
shr
xor
mov
call
rcr
or
stos
xor
call
or
mov
mov
jne
dec
xlat
jns
loope
or
sub
mov
enter
inc
or
stos
mov
xchg
popa
push
js
neg
mov
xor
fucomip
xchg
jle
xor
dec
cmp
xor
xchg
or
imul
cmp
xor
int3
ret
pop
test
loop
xchg
dec
xchg
push
jg
cli
adc
cmc
in
add
loopne
imul
cmp
adc
jmp
call
xlat
dec
in
dec
xor
dec
mov
test
add
aad
rol
out
ja
push
int3
retf
mov
sub
aaa
fidivr
sbb
or
loop
and
jmp
or
mov
adc
cmp
adc
pushf
dec
lds
and
adc
xchg
xor
and
pop
call
sbb
or
mov
dec
in
enter
xchg
jecxz
repnz
(bad)
lahf
xchg
in
(bad)
jmp
sbb
(bad)
test
cmps
mul
pushf
cmps
mov
imul
mov
jg
pushf
out
adc
fmul
mov
pop
sbb
pop
inc
sti
push
mov
arpl
xchg
jmp
movs
out
push
or
add
f2xm1
and
arpl
out
scas
daa
sbb
push
cmp
pushf
sbb
retf
mov
arpl
xchg
xor
int3
retf
(bad)
enter
push
sbb
int3
iret
dec
cwde
into
lea
daa
std
xor
mov
bound
mov
ins
push
int
inc
ja
push
adc
sbb
mov
and
sbb
in
pop
dec
cmps
pop
sbb
(bad)
std
fsubr
test
or
xchg
fstp
es
and
push
cmp
sub
xor
cmp
lods
push
jge
dec
fdiv
dec
in
(bad)
and
add
pop
xchg
scas
iret
pop
push
mov
or
in
imul
fisttp
inc
not
or
in
mov
dec
adc
addr16
cmp
stos
(bad)
cmc
cwde
call
adc
cmp
movs
or
cld
mov
sahf
mov
push
pop
pop
sahf
jae
pop
xor
lods
xor
ror
mov
xor
daa
xchg
xor
and
lock
adc
fwait
pop
sbb
lahf
or
sbb
mov
hlt
add
pop
jae
push
in
int3
sub
pop
psllq
jmp
jb
pushf
push
imul
pop
inc
imul
aas
es
cmp
jl
outs
or
and
out
sahf
test
sub
push
jbe
in
nop
mov
pop
sti
xor
ins
xchg
xor
xchg
xor
clc
sti
add
xchg
pop
and
dec
or
push
int
inc
inc
sahf
and
and
scas
jle
mov
inc
call
adc
jge
dec
mov
fdivr
and
popf
sub
into
add
add
leave
inc
dec
sahf
and
lds
sub
gs
call
call
xchg
outs
movs
sti
aaa
jg
push
adc
ror
pop
pop
jg
jle
add
push
and
jmp
ins
popf
rcr
add
cld
dec
inc
pop
push
cmps
jo
call
cmps
xchg
shr
sub
adc
pusha
sub
nop
cdq
cmps
addr16
inc
aam
mov
test
push
cs
dec
stos
cmp
gs
jge
dec
ret
mov
xchg
std
mov
test
mov
scas
lahf
jmp
dec
les
push
iret
inc
jmp
adc
std
sbb
imul
jg
cmp
or
jge
pop
jle
popa
popf
jb
std
repz
std
sbb
int
fs
inc
inc
into
dec
call
int3
or
push
and
push
and
cmp
movq
rcl
test
jae
fadd
out
xchg
add
jmp
xchg
inc
mov
in
dec
adc
mov
sub
inc
out
and
xchg
cmp
add
hlt
xchg
in
test
mov
inc
add
pop
std
push
add
add
ret
cmp
add
jmp
pop
or
sub
and
push
imul
push
scas
sub
inc
mov
gs
jl
sub
jp
sahf
ds
cmp
fwait
push
lock
mov
adc
aaa
cmp
push
push
add
gs
es
cmp
jae
mov
mov
jne
imul
call
repz
mov
sti
xchg
xor
popa
repnz
in
push
jae
pop
adc
adc
adc
in
mov
das
(bad)
out
dec
dec
push
pusha
jne
inc
stc
push
test
pop
in
call
adc
mov
nop
mov
push
inc
add
dec
mov
add
out
pop
comiss
adc
dec
loopne
sub
sub
std
mov
sub
add
test
ins
bound
in
and
ins
mov
adc
ins
nop
dec
gs
jns
data16
nop
jp
xchg
add
dec
arpl
test
xor
repz
sahf
xor
mov
sar
and
add
bound
lods
add
xor
push
out
cmp
inc
inc
imul
push
mov
sahf
mov
inc
popa
jl
pop
dec
lds
and
xchg
stos
mov
and
inc
js
je
xchg
mov
ficom
jmp
pop
pop
jge
pop
fidivr
adc
inc
out
das
jecxz
pop
pop
mul
and
js
inc
push
push
sub
mov
sub
pushf
jb
ins
and
std
sahf
aas
push
xor
imul
test
or
sub
mov
inc
ret
ja
inc
jo
pushf
jmp
and
test
jmp
cli
fdivrp
sbb
call
xor
mov
or
dec
aad
enter
mov
rcl
cmp
mov
aas
gs
movs
dec
jl
xor
push
push
jbe
and
out
jne
pusha
test
shl
loop
in
inc
bound
adc
add
cld
xchg
sbb
ins
sub
jne
sbb
sbb
mov
test
cmps
dec
pop
std
jp
xchg
jle
pusha
push
mov
and
mov
xchg
in
retf
or
cmp
pop
call
xor
out
stos
add
scas
mov
pop
inc
ins
(bad)
fsubr
retf
dec
enter
pop
icebp
jns
repnz
retf
cmp
cmp
ss
pop
pop
ins
je
mov
icebp
adc
and
dec
test
push
inc
scas
lea
xchg
sbb
mov
xor
push
mov
sbb
(bad)
sub
sar
imul
ret
or
dec
sub
scas
and
xchg
mov
popa
sbb
push
mov
dec
mov
test
mov
xor
outs
adc
add
add
dec
ds
mov
jbe
movs
mov
psubq
sbb
push
fwait
leave
adc
ja
jp
out
mov
ret
sub
sbb
les
scas
ret
rep
mov
mov
addr16
add
and
mov
out
in
inc
mov
sbb
add
pop
sbb
pop
test
xchg
sub
xor
xchg
retf
sub
and
outs
data16
jmp
mov
jg
pop
adc
mul
mov
shl
popa
sar
js
test
pop
mov
push
add
daa
and
int3
cdq
mov
jge
mov
mov
sbb
push
mov
fcmovbe
hlt
mov
int
mov
mov
mov
mov
cmps
enter
popa
jb
lock
cmps
lds
mov
aas
imul
mov
or
outs
push
call
lods
dec
pop
iret
popa
jmp
rol
mov
cmp
imul
push
fiadd
cmc
(bad)
lods
mov
dec
(bad)
cmp
inc
dec
fdiv
je
out
pop
sbb
add
leave
out
jae
rol
and
int
clc
movs
in
adc
stos
aam
imul
cmp
inc
cmp
xchg
inc
mov
sbb
xchg
or
ror
cmp
dec
mov
(bad)
in
push
jne
retf
rcr
call
lea
mov
scas
repz
shl
and
call
xor
(bad)
and
sbb
in
or
cmp
mov
mov
loop
cmp
retf
mov
adc
mov
pop
mov
and
and
std
sub
dec
retf
lock
imul
xchg
(bad)
(bad)
push
mov
imul
adc
sbb
adc
jae
repz
rol
clc
jp
fwait
mov
push
sbb
ins
inc
aad
mov
adc
dec
imul
cmovns
retf
xchg
(bad)
(bad)
data16
sahf
inc
mov
mov
add
push
fwait
xchg
inc
pop
adc
(bad)
xor
jmp
xchg
sete
mov
test
pop
ins
push
jnp
in
cli
cs
adc
sub
mov
cmp
pop
add
jae
mov
or
aam
popf
push
or
dec
sub
movs
sub
shl
jecxz
sbb
jl
lds
inc
sub
push
sbb
xchg
pop
and
sbb
pop
and
mov
xor
sti
jmp
xchg
adc
pop
pusha
mov
das
and
in
imul
inc
xchg
movs
jb
es
mov
ss
sub
xchg
dec
cmps
rcr
hlt
push
inc
mov
add
fidivr
arpl
jl
inc
(bad)
xor
cli
adc
jae
cmp
rol
push
enter
(bad)
in
fwait
push
add
sbb
xchg
stos
or
outs
dec
sbb
jecxz
test
pop
adc
mov
jg
jmp
and
sti
repz
jge
inc
lds
and
dec
das
ficomp
sbb
cmp
dec
jecxz
add
pop
cs
jbe
add
stos
pop
stos
inc
shr
mov
loop
fidivr
ins
dec
test
xor
pusha
mov
sbb
dec
pop
push
pushf
jnp
add
push
add
test
jp
mov
pop
or
add
inc
outs
dec
lods
jb
dec
aad
pop
sub
(bad)
mov
in
push
xchg
cdq
xchg
and
inc
ss
sub
js
daa
adc
test
push
xchg
divps
das
ja
dec
mov
xchg
add
sbb
xchg
dec
and
push
(bad)
pop
lea
xor
sub
and
dec
or
lds
push
imul
cmp
(bad)
jno
push
pop
ds
ins
add
(bad)
popf
and
inc
nop
dec
inc
mov
or
cmp
cmp
iret
es
pushf
mov
cdq
mov
or
hlt
mov
sbb
out
stc
xor
jmp
push
xchg
add
ins
mov
fsubr
adc
or
mov
cmp
jnp
pushf
test
loopne
xchg
or
jnp
jl
cmps
fs
(bad)
adc
xchg
imul
addr16
add
(bad)
inc
out
(bad)
imul
in
xchg
lahf
lods
mov
fistp
xor
xor
test
inc
pop
test
cmp
mov
jl
mov
imul
in
cmps
jp
call
sar
jle
xchg
xor
mov
push
in
jp
xor
lahf
cmp
int
es
icebp
xor
addr16
js
ins
cmc
push
and
test
pop
in
shl
cs
jle
mov
inc
repz
mov
stc
add
xor
and
mov
jns
mov
push
sbb
das
xor
sbb
or
dec
scas
pop
mov
adc
ins
mov
fsub
call
mov
adc
pop
ror
fdivr
pop
daa
into
retf
sub
sti
pop
jae
ds
into
mov
rcl
ret
popf
cmp
jecxz
xor
mov
mov
and
je
xor
cmp
mov
mov
adc
lock
xchg
xchg
imul
sub
xor
lea
sbb
ds
xor
mov
out
dec
push
jle
hlt
fstp
jp
in
outs
add
out
aas
push
int
dec
xor
inc
jnp
mov
ret
add
and
pop
push
add
stos
out
jnp
div
inc
xchg
and
xor
dec
pusha
je
bnd
cmp
add
jae
dec
push
cmp
hlt
and
les
mov
sbb
jo
mov
leave
adc
jp
sti
mov
sub
push
adc
(bad)
jb
aam
sbb
sbb
(bad)
fisttp
daa
cmp
icebp
jmp
push
gs
cmp
sti
mov
ss
imul
ficomp
adc
popa
neg
ja
(bad)
add
mov
or
pop
hlt
(bad)
pop
and
lock
shl
push
adc
and
in
pop
mov
and
jmp
cmovp
xchg
sbb
les
jo
push
mov
call
jne
xchg
fs
icebp
cmps
sub
imul
cmp
and
ins
pop
dec
push
sti
stos
xchg
cmp
into
das
cwde
(bad)
xchg
into
mov
adc
sub
test
lods
jae
aam
push
das
mov
and
sbb
in
fwait
leave
push
dec
rcr
adc
jmp
jae
or
pop
int
dec
or
and
inc
imul
pop
imul
adc
adc
pop
push
in
test
adc
add
test
leave
aad
shl
mov
mov
push
shr
push
adc
mov
jbe
jne
mov
xor
inc
leave
fcmovnb
in
aas
mov
xchg
lea
pusha
das
or
pop
stos
in
adc
add
scas
push
dec
fisubr
xor
leave
fwait
es
jns
push
dec
test
pop
lea
repnz
(bad)
test
fs
pop
mov
pop
xor
jb
repz
(bad)
jb
movs
or
sub
pop
xor
iret
sub
sub
in
pop
adc
pop
arpl
jp
xchg
nop
mov
xchg
pop
loop
popf
bnd
xlat
jb
int
or
lds
cdq
and
dec
mov
loopne
xchg
je
pop
xor
cmp
dec
loop
push
pop
mov
das
ror
or
pop
or
sub
adc
sbb
jl
add
pop
leave
imul
test
pop
je
push
inc
fadd
jnp
jge
xor
(bad)
popf
(bad)
inc
push
(bad)
cmp
jle
xor
inc
inc
mov
popa
sub
pop
mov
retf
jle
and
pop
pushf
hlt
lods
mov
aam
cmp
in
lds
dec
cdq
and
sbb
pop
adc
sbb
push
fild
xchg
leave
xor
lock
sbb
sbb
sbb
bound
dec
jg
add
xor
outs
repnz
add
sbb
cwde
leave
ror
stos
dec
fidiv
mov
jbe
sbb
mov
and
test
mov
and
xlat
stc
loop
pop
inc
cli
inc
leave
sti
stc
or
jg
fisttp
pop
add
int3
mov
int
(bad)
in
and
xor
inc
leave
cmp
pop
mov
jecxz
sbb
scas
inc
les
repz
push
sub
movs
ret
clc
jge
add
in
imul
pop
jge
sbb
and
cmp
dec
adc
fmul
ds
mov
ficomp
pop
dec
les
jmp
or
adc
test
jl
test
or
stos
cmp
aad
dec
cs
push
retf
and
loop
or
lahf
xor
call
pop
imul
adc
lea
push
sub
cmp
xchg
repnz
add
imul
ja
lods
mov
pop
(bad)
out
inc
les
pop
cmp
repz
xor
jb
xor
jb
inc
hlt
pop
jbe
aad
jge
dec
jb
sbb
fwait
xor
ret
and
xor
mov
xor
les
mov
mov
int
push
jbe
add
dec
leave
ins
jmp
(bad)
jbe
fnsave
cli
inc
cmps
xor
fcomp
cmp
cdq
sahf
les
and
dec
cmp
xchg
sub
inc
pop
sbb
push
mov
sbb
iret
sbb
retf
add
(bad)
or
jo
fisttp
pop
push
in
or
ja
dec
xchg
popa
lea
es
inc
pop
jp
jp
mov
cmp
stc
addr16
popf
cmp
inc
pop
repz
mov
lods
cdq
pop
repnz
jnp
aad
adc
in
out
pop
bnd
ins
jecxz
das
std
jbe
inc
leave
xor
ins
mov
pop
sar
jae
loopne
add
mov
sub
jno
pop
stos
ins
or
xchg
xchg
and
arpl
add
ja
and
jae
sub
jne
cs
or
mov
jbe
leave
les
cwde
jge
rcr
mov
push
adc
(bad)
pop
fistp
and
sbb
sbb
dec
into
hlt
push
repz
popa
leave
or
inc
pop
sahf
xor
and
in
push
dec
(bad)
and
inc
mov
fcomp
or
push
int
xchg
fs
dec
xor
fcom
les
xchg
popf
arpl
push
xor
cmp
sbb
int3
dec
jnp
mov
inc
mov
mov
mov
mov
int
jecxz
push
cmp
sbb
inc
and
and
call
das
xor
out
gs
adc
pop
xchg
sbb
es
gs
sub
call
popf
scas
dec
popf
mov
add
pop
call
popa
retf
in
aad
mov
cmp
and
sub
sub
push
in
iret
inc
out
adc
test
push
xor
aad
cmp
popf
jns
call
outs
push
sub
sar
mov
or
mov
iret
adc
in
cs
and
xchg
push
xchg
adc
cmp
jl
adc
sub
push
iret
cmp
dec
push
and
das
stos
arpl
imul
mov
ss
jo
mov
lods
push
dec
adc
cmc
lahf
enter
bnd
mov
leave
or
out
xchg
xor
sbb
inc
daa
cmp
or
mov
inc
jo
cli
pop
call
(bad)
lods
and
adc
xchg
dec
mov
rcl
or
aad
mov
push
icebp
jae
call
mov
push
sbb
cwde
cli
jmp
sbb
call
cmc
fs
mov
fs
mov
popf
dec
mov
mov
int3
pop
call
push
xlat
sub
sbb
std
test
dec
xchg
sub
xchg
inc
aad
in
je
mov
leave
jge
sub
pop
lahf
jmp
fsub
in
dec
jne
pop
xchg
sti
and
xchg
sbb
das
add
jecxz
je
sub
(bad)
and
cld
leave
adc
inc
fs
dec
jl
shl
mov
lods
ficomp
(bad)
xchg
push
enter
cs
mov
xchg
retf
dec
push
in
push
mov
sbb
sti
test
and
cld
sbb
cmp
mov
cmc
and
iret
push
dec
mov
or
repz
add
xchg
aam
les
xlat
das
(bad)
inc
(bad)
call
push
aad
add
out
add
sbb
add
push
iret
das
inc
pop
xchg
cmp
sbb
dec
sbb
das
jne
mov
jp
movs
dec
jnp
push
adc
stc
adc
scas
dec
pop
inc
mov
ret
sbb
mov
das
loopne
mov
add
add
xchg
sub
nop
or
mov
scas
cli
jp
sub
in
std
lds
jp
sub
movs
std
(bad)
adc
cli
jp
sub
pushf
std
lds
and
loope
and
cmc
dec
pop
cmp
pop
and
mov
aaa
push
dec
loope
and
inc
dec
pop
stos
fwait
aaa
(bad)
dec
loope
and
or
je
adc
clc
je
test
in
leave
sbb
cli
dec
movs
xchg
popf
out
inc
push
into
or
push
jnp
in
pop
sub
arpl
mov
movs
cmp
jbe
inc
and
or
xchg
add
and
call
add
sbb
mov
push
(bad)
and
stos
adc
jne
push
shl
dec
or
add
sbb
shl
adc
aad
pop
or
test
pop
cmc
sub
popf
add
ins
movs
imul
jb
adc
adc
fsubr
or
ret
sub
xchg
push
cli
rcl
or
retf
ds
sbb
jae
mov
jmp
out
imul
fist
pushf
xchg
aad
lea
ret
call
sti
mov
add
mov
dec
jmp
push
push
test
sbb
rol
xor
rsqrtps
sbb
push
call
outs
leave
or
enter
mov
fdiv
dec
jb
or
mov
xor
xchg
out
xchg
or
fimul
pop
in
scas
ror
mov
adc
or
and
sub
cdq
dec
pop
inc
fwait
aaa
xor
sbb
or
pop
sbb
xchg
jne
repnz
rcr
fcom
ret
or
push
popf
sub
cli
push
sbb
ret
and
out
ins
jmp
out
in
inc
adc
xor
ret
push
call
sti
pop
dec
inc
push
push
dec
jmp
test
cs
add
dec
loop
clc
cmp
push
cmp
stc
or
pusha
add
int3
test
in
fisub
adc
outs
xor
xor
or
dec
mov
pop
jae
test
adc
lods
cmc
push
xor
adc
ret
xor
mov
les
repz
or
xchg
push
inc
hlt
movs
pop
jle
push
leave
idiv
int3
jnp
je
pop
xor
dec
xchg
inc
push
call
(bad)
pop
mov
shl
cmp
sbb
xchg
bound
adc
sub
add
fwait
sti
sbb
add
in
arpl
outs
sbb
movs
leave
sbb
push
sti
pop
dec
loope
and
dec
and
popf
or
dec
mov
in
or
inc
jne
jno
out
dec
jbe
mov
and
les
ins
jb
stos
repz
jl
dec
xlat
lods
jmp
xor
adc
pushf
test
sub
leave
(bad)
pop
jno
mov
iret
xchg
or
inc
into
pop
js
repz
in
jmp
mov
stos
xchg
cmp
jg
shl
xlat
inc
dec
jmp
add
lods
sub
mov
jne
sub
ret
and
cmp
or
(bad)
imul
jae
fwait
ror
dec
mov
xchg
call
inc
jmp
pop
sub
inc
xor
cld
push
xchg
cli
imul
xor
jae
xchg
push
aad
sbb
imul
movs
sub
cmp
inc
lds
les
dec
push
xchg
mov
inc
mov
ret
adc
inc
cmp
mov
stos
push
inc
and
and
ins
out
fnstenv
inc
fwait
iret
cmp
fisttp
xchg
in
popa
sbb
hlt
xchg
fld
(bad)
out
dec
jle
and
je
mov
push
inc
dec
pop
enter
mov
and
jl
dec
(bad)
cmp
das
xor
fwait
push
cmp
sbb
inc
inc
or
sahf
mov
mov
mov
pop
adc
inc
gs
and
xchg
xchg
xor
cli
imul
xchg
add
and
xchg
adc
xchg
cli
pop
inc
xor
ins
in
jle
push
bnd
jmp
and
mov
repnz
xchg
mov
aam
fwait
add
add
mov
jmp
test
push
std
inc
dec
das
gs
add
jmp
ins
rcr
push
gs
popf
in
mov
sbb
sbb
push
pop
inc
int3
daa
push
sub
daa
gs
inc
mov
sub
mov
adc
stos
in
dec
call
arpl
stc
and
les
inc
cdq
or
add
retf
sbb
and
add
jmp
inc
sub
push
les
push
lods
jne
call
pop
sbb
and
ins
dec
pop
mov
aaa
movs
dec
loope
and
add
jmp
aaa
nop
dec
loope
and
aad
in
pop
enter
into
call
pop
cmp
loope
and
(bad)
dec
pop
push
fwait
cmp
sbb
call
jmp
push
lahf
jo
stc
xchg
sub
dec
mov
dec
test
inc
dec
popf
or
dec
dec
cmp
jmp
iret
es
sti
xchg
and
sti
add
call
inc
sub
adc
and
sbb
jae
and
sbb
movs
(bad)
je
xchg
loope
jae
cmp
pushf
adc
sub
adc
inc
adc
adc
inc
push
pop
sbb
sbb
mov
int3
test
or
xchg
or
test
sub
or
cwde
popf
push
or
ret
push
test
push
cli
(bad)
(bad)
in
and
xor
pop
and
hlt
mov
ja
scas
push
sbb
stc
sub
dec
jmp
jl
lods
cmp
mov
out
and
xor
sbb
aas
mov
iret
xor
jge
out
push
or
add
mov
jo
stc
retf
dec
mov
aas
sbb
xor
popf
and
or
push
rol
outs
inc
stc
call
push
add
dec
stc
sbb
pop
cmp
xor
xchg
sub
add
jo
arpl
mov
sbb
jno
sbb
mov
mov
ret
or
int
add
or
dec
cmps
add
pop
or
call
fisttp
and
pop
out
push
cmp
dec
jnp
les
jmp
test
dec
ret
call
rol
add
fld
push
out
test
xchg
(bad)
and
add
ficomp
arpl
leave
jmp
int3
push
rcr
dec
xor
inc
sub
fbld
das
popa
add
and
and
mov
imul
ret
adc
pop
(bad)
shr
fidiv
pop
mov
jg
jae
aad
cs
jb
std
add
sbb
jae
cmp
mov
stos
in
dec
sub
iret
cmp
imul
xchg
mov
mov
pusha
mov
sbb
into
adc
jmp
add
xchg
ret
mov
repnz
punpckhdq
lea
cmp
mov
or
dec
stos
ins
jge
xor
adc
sub
sub
adc
(bad)
hlt
fcmovnbe
out
popf
mov
inc
jge
scas
xor
inc
and
mov
dec
push
pushf
xchg
or
fs
inc
mov
sub
fisttp
cmp
pusha
jp
sub
fisttp
jmp
dec
out
dec
jb
push
or
ret
std
sub
mov
lea
repnz
(bad)
push
inc
sbb
popa
cmp
jnp
call
sub
cmp
inc
mov
cmp
jmp
push
fwait
xchg
sub
pop
and
mov
outs
mov
hlt
mov
xchg
jmp
adc
fs
movs
sub
push
jbe
jne
out
lds
mov
or
mov
mov
push
movs
stos
cwde
int
stos
ins
sub
sub
sbb
imul
mov
fwait
movs
cmp
or
jb
stos
mov
scas
dec
sbb
dec
push
ficomp
loop
lods
test
push
jne
xchg
outs
mov
adc
mov
cmp
cmps
xchg
test
int
push
lds
(bad)
cmp
or
mov
das
lea
add
gs
xchg
lods
repz
xchg
cmp
jge
pop
stos
sbb
and
sub
xlat
add
(bad)
std
stos
arpl
add
inc
xor
fld
dec
adc
mov
and
dec
xor
mov
repz
(bad)
retf
add
jge
xor
cmc
ret
stos
sar
sti
sar
pop
sub
popf
movs
jb
or
and
mov
jae
popf
add
sbb
mov
fidivr
push
outs
xor
stos
xor
and
jnp
das
xchg
mov
mov
dec
fwait
mov
and
mov
mov
mov
cld
mov
in
(bad)
aad
or
movs
mov
mov
test
lods
cmp
or
stos
stos
out
in
xchg
push
inc
hlt
mov
movs
adc
sbb
dec
xchg
mov
jmp
retf
xor
xor
adc
(bad)
adc
inc
adc
push
das
jo
or
jno
add
loope
push
jo
stc
sbb
jne
cwde
imul
sbb
into
xor
jo
push
pop
scas
push
dec
sbb
ins
dec
cmp
repz
mov
pop
mov
nop
inc
push
shr
pop
xchg
and
dec
add
add
ret
cmps
loopne
out
or
dec
dec
outs
int
push
sbb
in
loop
pop
xor
cwde
push
inc
cmp
inc
ret
xor
xchg
mov
push
das
ins
jb
adc
sub
adc
dec
(bad)
std
add
dec
push
popf
inc
cmp
fs
out
add
in
pusha
dec
fisttp
sub
push
por
movs
mov
mov
rcl
mov
aad
fild
(bad)
das
aas
cmp
aaa
cmp
sub
ins
mov
bound
fs
dec
pop
sbb
mov
dec
and
add
add
out
addr16
sbb
jae
mov
aad
dec
popf
in
inc
dec
(bad)
shl
mov
xchg
push
mov
retf
aad
mov
ret
mov
(bad)
mov
pusha
(bad)
imul
push
rol
pop
xchg
mov
sbb
jnp
sub
(bad)
add
repz
inc
sub
xchg
daa
dec
or
sbb
jmp
pop
mov
mov
pshufw
cmp
mov
xchg
or
fst
sar
dec
stc
or
push
cmps
sbb
xchg
pop
adc
sub
in
cmps
push
test
lods
pop
ins
das
cmc
jb
adc
xor
fsubr
or
xacquire
test
push
daa
mov
dec
mov
push
xchg
retf
inc
in
jmp
and
sbb
mov
sbb
jb
adc
add
adc
sbb
add
sbb
or
out
add
xchg
dec
sti
fld
dec
cmp
das
sti
pop
hlt
xchg
xchg
dec
mov
push
jb
push
jae
mov
ror
xor
aaa
adc
dec
cmp
das
arpl
rcr
jp
gs
in
dec
push
ret
sub
call
das
cmp
shl
repnz
mov
mov
push
jbe
sbb
dec
in
outs
stos
add
and
int
xchg
repz
inc
cdq
pop
sbb
pop
cmp
sbb
lds
cmc
mov
dec
and
jb
pop
pop
dec
ja
(bad)
and
les
mov
mov
add
mov
and
fwait
mov
lea
call
and
pop
je
adc
sti
jns
jmp
iret
sub
fcmovnb
xor
sub
leave
push
pusha
adc
sbb
xchg
cmc
dec
ret
sbb
repnz
fcom
pop
(bad)
dec
fwait
dec
bound
int
or
popa
fnstcw
push
push
xlat
jmp
mov
sbb
fld
je
lods
sti
aas
mov
jl
or
sub
mov
sbb
movs
enter
xchg
and
jae
add
cmp
sbb
adc
pop
or
xchg
leave
sbb
jb
hlt
jmp
dec
fbstp
cmp
cmp
push
or
dec
xchg
push
in
iret
pushf
cmp
pop
mov
xchg
dec
adc
cmp
(bad)
push
adc
jl
jne
(bad)
adc
or
jmp
add
out
scas
adc
inc
sub
or
fisttp
(bad)
cmc
and
retf
push
and
das
inc
hlt
and
rcl
(bad)
push
iret
adc
adc
repnz
(bad)
dec
push
jns
bound
aas
in
jb
jne
xlat
cdq
adc
arpl
aam
mov
mov
sbb
test
(bad)
sub
cmp
popf
cmc
cmps
push
mov
dec
pop
call
add
or
in
imul
inc
sbb
xchg
stos
enter
and
rcr
push
out
mov
ins
xchg
adc
sbb
or
cli
inc
retf
mov
int
xlat
loopne
ret
cmovl
frstor
push
add
cdq
push
fst
dec
les
loopne
jmp
mov
sbb
sbb
dec
rcl
(bad)
adc
iret
xchg
arpl
pop
adc
jb
das
dec
push
popf
loope
pusha
popf
mov
xor
in
sti
push
push
inc
arpl
xchg
adc
xor
movs
mov
pop
lahf
fisttp
(bad)
(bad)
lahf
sub
inc
retf
pusha
dec
daa
popa
xor
test
nop
int3
stc
or
lock
xor
enter
pop
and
aad
repnz
fimul
int
inc
out
lods
xchg
cmp
add
pop
mov
push
dec
retf
jmp
and
rep
lods
in
in
test
jmp
cmp
frstor
in
fiadd
das
fistp
inc
and
test
xor
in
mov
cmp
push
adc
inc
ins
or
mov
cmp
push
push
fadd
enter
out
dec
ja
add
retf
push
add
ja
cs
ja
or
push
xchg
ins
call
je
xor
cdq
pop
push
mov
stos
stos
push
push
(bad)
sub
jp
lods
add
sub
fdiv
xchg
mov
dec
out
push
sbb
adc
test
lock
inc
dec
fbld
xchg
(bad)
mov
sbb
sub
cmp
fnstcw
inc
test
mov
movs
dec
stos
jbe
ror
test
stos
xchg
jecxz
xlat
aam
mov
cmp
pushf
fwait
push
int
popf
add
enter
dec
jecxz
push
pop
enter
add
fdivr
sub
stc
mov
int3
push
and
or
cli
int
mov
shl
retf
inc
daa
or
inc
push
dec
fs
push
xor
and
add
dec
or
rcr
adc
mov
call
and
getsec
dec
test
es
in
or
sub
cmp
pop
xlat
out
fld
test
ins
shl
add
fnstcw
int
(bad)
mov
push
iret
lods
jmp
ins
stc
fcomp
test
xor
arpl
mov
jb
jmp
ret
pushf
(bad)
dec
lds
out
ins
aad
lods
les
imul
or
cli
pop
neg
shr
ins
int3
cmp
mov
xchg
jo
push
push
mov
leave
push
sbb
mov
inc
pop
cdq
push
sub
leave
xchg
outs
xchg
stos
push
lea
mov
sbb
dec
call
test
mov
out
mov
cmps
ret
jg
fcomp
pop
cli
add
jle
sbb
jnp
jl
or
dec
stos
test
pop
xlat
lods
enter
sub
and
pop
push
or
(bad)
mov
mov
push
or
loop
outs
mov
jmp
(bad)
in
repz
sub
dec
test
call
gs
push
inc
mov
jo
iret
jmp
xor
xchg
pop
test
arpl
leave
jb
inc
cmc
rcr
fldenv
mov
test
sub
xor
dec
leave
mov
or
xlat
arpl
ret
popf
stos
arpl
adc
xchg
leave
pop
cwde
and
idiv
sbb
xor
sub
sub
xor
inc
mov
pop
popa
and
inc
imul
ss
mov
bswap
xchg
push
bound
xchg
aaa
sbb
arpl
or
cwde
fs
cwde
leave
(bad)
(bad)
js
jg
mov
movs
movs
sub
push
sahf
mov
scas
jbe
sub
cmp
lods
push
retf
push
adc
fild
jmp
pop
xchg
dec
aam
fsubp
dec
adc
mov
inc
jp
lods
or
jecxz
dec
or
mov
cmp
jmp
push
ss
mov
leave
out
mov
dec
outs
or
jl
inc
xchg
addr16
out
out
jp
dec
mov
loope
jbe
mov
cdq
and
(bad)
out
rcl
jmp
mov
ret
add
cmps
data16
xor
sti
and
daa
jmp
pop
cmp
pop
xchg
inc
sahf
jg
lahf
addr16
or
leave
jns
fsubr
movs
sub
scas
ror
(bad)
sub
dec
xchg
pop
stos
out
cdq
cmp
out
mov
push
mov
fsub
lds
push
imul
fwait
popa
inc
xchg
pop
sub
and
repnz
pop
out
out
mov
js
retf
or
(bad)
xor
cdq
or
mov
inc
mov
push
jmp
push
fstp
mov
mov
sbb
add
xlat
movs
or
inc
mov
pop
(bad)
dec
cmpxchg
xchg
stc
popf
test
and
mov
data16
mov
pusha
add
ja
adc
pop
stc
jle
pop
push
or
jae
aad
sub
jl
jmp
fld
jl
mov
jbe
and
pop
jl
add
mov
dec
lds
scas
in
inc
jmp
in
mov
sbb
adc
lods
call
adc
mov
outs
push
sar
and
or
ds
cmp
xchg
or
fistp
popf
aad
(bad)
dec
xchg
jne
enter
enter
cld
leave
cmp
mov
dec
fdiv
jns
fld
pop
xor
pushf
pop
jns
inc
pop
les
ja
push
jbe
scas
add
and
mov
jbe
fisttp
pushf
pop
fild
in
inc
jle
pop
into
jbe
in
inc
or
fidiv
mov
ins
or
pop
push
stos
mov
leave
jmp
add
movs
pshufw
ins
fadd
(bad)
dec
loope
lods
sbb
pop
mov
push
jae
xor
lods
(bad)
or
fcomp
push
pop
or
je
mov
out
aad
sub
test
call
movs
adc
loope
jge
add
rcr
pop
or
sub
movs
(bad)
or
lahf
outs
or
inc
sub
adc
loope
sbb
jle
pop
test
test
cdq
not
jle
lods
push
jns
jg
jg
jge
jnp
inc
fidiv
(bad)
mov
std
or
jae
push
push
js
repz
cli
out
mov
out
sbb
push
repnz
iret
lahf
xchg
mov
mov
or
imul
mov
dec
sbb
pop
fcom
adc
sbb
daa
inc
adc
jno
mov
lods
jns
add
loop
ins
xor
mov
test
add
inc
inc
and
pusha
(bad)
and
xor
iret
lahf
daa
popa
aad
mov
mov
mul
mov
in
int3
xchg
dec
jl
mov
add
adc
in
mov
and
lds
lods
mov
fnstsw
xchg
fild
add
out
data16
into
test
shl
stos
dec
iret
adc
test
jg
xor
test
sub
mov
jge
and
mov
push
jnp
loope
mov
in
jl
ffreep
xchg
xchg
mov
sbb
sbb
push
mov
(bad)
sub
mov
std
pop
mov
and
xor
mov
cmp
inc
or
out
add
movs
ret
sub
repnz
pop
dec
jb
aad
xlat
outs
sub
das
mov
mov
aam
or
popf
mov
inc
ja
(bad)
mov
lds
rcr
adc
rol
mov
loope
or
popf
js
pushf
add
adc
(bad)
sbb
sbb
ja
movs
fiadd
iret
frstor
mov
mov
aad
inc
cmp
fbld
or
popa
jmp
aas
(bad)
mov
mov
pop
pop
sub
out
add
repz
int3
jecxz
inc
and
inc
cs
inc
push
test
sub
addr16
rcl
dec
ins
and
jg
adc
push
push
mul
js
xor
lea
pop
xor
push
xor
xchg
pop
fmul
dec
add
imul
dec
mov
and
int3
les
(bad)
and
mov
psubw
clc
or
jle
jp
lods
mov
or
(bad)
fnstsw
retf
mov
cmp
pop
jmp
bound
pushf
or
pop
dec
mov
cli
cmp
dec
adc
or
ret
lods
mov
jg
pusha
dec
or
and
dec
mov
fstp
mov
cmps
test
and
inc
in
ja
es
sub
adc
xor
movlps
lods
pop
outs
push
push
pushf
push
into
sbb
sbb
ss
fstp
jle
ins
cmc
add
stos
mov
(bad)
bound
int
bound
pop
cs
add
xchg
inc
sub
xor
es
inc
test
mov
add
and
loop
(bad)
pop
xor
cmp
and
movs
imul
loope
rcl
mov
data16
xor
push
mov
cmp
push
lea
jne
mov
adc
mov
ds
enter
pop
shl
rcr
leave
loop
fs
push
js
sbb
xor
loopne
mov
and
add
push
es
sbb
sub
(bad)
sub
leave
mov
push
sub
inc
loopne
ja
pusha
pop
enter
out
adc
ins
inc
imul
xor
mov
push
dec
(bad)
sub
fidivr
pop
cmp
pop
push
pop
xchg
stos
push
sar
push
or
xor
adc
(bad)
rcr
outs
cmp
mov
add
enter
jle
shl
mov
sti
leave
pop
retf
push
pop
nop
jbe
xchg
cmc
cmp
mov
test
ror
mov
dec
into
outs
and
rol
xor
and
cmps
add
push
js
aad
jle
jns
movs
jg
jle
arpl
int3
stc
dec
jl
fs
jle
inc
mov
out
or
cmp
and
or
or
sbb
ss
popa
ret
into
sbb
adc
ins
add
leave
add
lea
jbe
cwde
aaa
rcl
(bad)
or
xor
add
xchg
dec
sbb
in
adc
out
pusha
mov
xchg
mov
lock
retf
mov
xchg
dec
mov
push
pop
add
jmp
rcl
icebp
xchg
push
sub
fmul
jo
jmp
or
add
xchg
hlt
(bad)
pop
outs
mov
inc
movs
add
push
mov
sbb
fadd
mov
dec
adc
jecxz
scas
jmp
or
pushf
dec
xor
cmp
out
ins
mov
inc
std
pop
push
xor
jno
xor
adc
or
sub
cmp
sub
cs
sbb
mov
mov
inc
or
xabort
pop
(bad)
xchg
fild
(bad)
sbb
sbb
inc
add
sub
inc
dec
repz
xchg
imul
or
and
imul
xor
push
push
in
cmp
pop
rol
mov
sub
and
sub
adc
out
cmps
cli
xor
jl
sti
loope
(bad)
jmp
mov
loop
mov
add
add
or
and
ret
(bad)
enter
fiadd
arpl
push
inc
jmp
mov
mov
cmovbe
shl
cmp
and
add
fcmovu
pop
mov
aad
(bad)
imul
mov
(bad)
sbb
data16
inc
addr16
jmp
or
and
add
xchg
add
sub
add
sub
cmp
das
jp
rcr
jb
push
pop
jne
dec
add
cdq
pshufw
xor
repz
xor
jne
xor
jnp
push
adc
stc
adc
ror
aam
push
mov
ret
sbb
popf
std
sub
cs
retf
inc
das
xchg
mov
sub
mov
inc
push
jns
inc
inc
jge
dec
cs
dec
dec
xchg
push
and
stc
and
pushf
dec
daa
inc
sbb
out
repnz
loop
in
sub
dec
in
jae
ds
jg
aas
xchg
jnp
cmp
cmp
push
mov
out
ds
mov
or
gs
push
popa
mov
bound
js
jns
jl
sub
gs
or
rol
fs
fcomp
jo
enter
retf
sub
push
outs
mov
ret
or
cmp
jl
jg
aaa
ins
sub
stc
or
ret
cmp
pop
bound
icebp
cmp
out
and
inc
cmp
es
aas
jmp
sub
mov
or
imul
arpl
adc
ret
adc
sub
(bad)
lock
dec
lds
je
or
or
or
push
ds
fistp
mov
sub
lds
loop
fisttp
mov
adc
add
add
cli
cmp
xlat
cmps
push
adc
adc
jmp
or
cdq
shl
dec
push
ret
add
out
dec
push
test
sub
sub
ror
in
int3
pop
mov
pop
jbe
dec
adc
add
or
into
sahf
dec
adc
sar
enter
les
pusha
sub
xlat
sub
lds
jns
lahf
adc
adc
loop
outs
pop
js
jbe
fistp
mov
das
enter
jbe
dec
inc
adc
pusha
pop
std
add
int
cmp
std
xchg
or
int
dec
jle
push
push
and
clc
and
add
fwait
es
xor
sub
loope
or
fwait
cmp
cmp
repnz
push
nop
cmp
and
push
fwait
push
int
and
es
xor
aad
inc
(bad)
test
sub
push
and
dec
sbb
adc
shl
in
shl
fbstp
adc
cmp
or
cmp
mov
test
(bad)
push
mov
mul
fild
pusha
retf
xor
ffreep
dec
(bad)
cmc
jnp
mov
inc
pusha
ds
push
popf
fbstp
ret
sbb
dec
pop
shl
test
aaa
inc
and
adc
xchg
loop
and
cmp
cmp
dec
mov
pop
sahf
sbb
fisubr
in
pushf
(bad)
adc
mov
push
dec
enter
pop
outs
inc
xor
adc
adc
lods
pop
push
dec
fiadd
retf
out
mov
inc
fistp
add
dec
jns
xchg
mov
xchg
or
mov
or
inc
out
inc
js
fild
ret
pop
(bad)
and
jo
pop
loop
mov
lea
es
das
xor
fistp
adc
cmp
call
adc
push
pop
(bad)
mov
adc
adc
xchg
cmp
stos
pusha
pop
inc
sbb
and
jp
xchg
std
sub
adc
ret
jnp
cmc
adc
cld
push
fwait
cmp
push
pop
push
outs
cmp
sub
hlt
gs
cwde
shl
pusha
cmp
sbb
ret
mov
mov
pop
add
pop
adc
sub
outs
loop
cld
jp
lods
lock
aas
jmp
push
out
invd
xchg
aad
data16
pop
dec
push
daa
pop
push
mov
or
fcomip
inc
btr
mov
int
xchg
daa
leave
jnp
add
jp
jle
js
add
sti
out
dec
je
jge
mov
adc
retf
cli
push
inc
fucomip
sbb
mov
pusha
pop
mov
sub
push
xor
jecxz
mov
adc
scas
push
mov
je
stc
int
outs
sub
sub
jns
pop
push
fs
(bad)
or
adc
(bad)
loop
aad
jle
fisttp
(bad)
pop
mov
cdq
loope
jge
fistp
jnp
in
and
push
rcl
or
jo
jecxz
dec
mov
push
push
pop
push
push
push
xor
pop
jne
jle
mov
out
daa
lds
pusha
push
lds
inc
adc
les
rcr
ja
iret
cmp
add
sub
mov
mov
mov
pop
shl
dec
push
dec
cmp
and
popf
fisub
or
adc
mov
movs
int
sti
adc
xchg
loope
jmp
xlat
adc
mov
cmp
leave
nop
loop
out
ja
cld
or
xor
sub
fs
pextrw
and
fcomi
jle
fild
ret
mov
dec
rol
or
scas
jle
pusha
call
jns
and
sub
sub
stos
dec
mov
ja
pop
add
fild
inc
in
jb
add
and
loop
int3
mov
pusha
adc
cmp
mov
add
cmp
ins
rcl
sbb
adc
push
outs
cmp
fcom
nop
adc
ins
shr
std
push
sbb
mov
mov
test
aad
xlat
mov
dec
inc
fbstp
sub
cmc
sbb
add
sbb
adc
fwait
push
cmps
or
aaa
jns
shl
jp
addr16
push
adc
mov
mov
sbb
std
push
jge
les
cmp
and
dec
and
sub
mov
loope
or
mov
pusha
retf
sbb
push
test
fistp
mov
iret
sbb
mov
int3
imul
outs
stos
sub
call
mov
pop
push
push
icebp
(bad)
or
xchg
pop
cmp
fld
ins
jp
lea
sub
lea
push
pop
(bad)
and
and
fbstp
cmp
stos
pop
iret
push
dec
sub
sub
pop
jmp
es
fsub
enter
adc
or
lds
jmp
pop
in
(bad)
adc
call
cmc
push
and
cld
cmp
es
es
(bad)
loop
call
adc
pop
push
js
mov
sub
adc
adc
ror
pusha
(bad)
(bad)
fwait
js
add
or
mov
mov
push
aas
push
pop
push
inc
adc
out
jnp
fucomip
pop
mov
pop
outs
daa
jmp
mov
jmp
jecxz
add
push
push
and
loope
pop
ror
cmp
add
mov
sbb
fdivr
cld
lds
es
das
outs
and
push
ds
push
mov
push
push
sbb
sub
pop
dec
and
outs
jg
jmp
fild
dec
aad
pop
push
mov
(bad)
imul
bnd
fild
js
mov
or
push
jl
loop
aad
nop
adc
es
movs
fist
adc
and
and
sub
popf
cmc
cmps
jg
sahf
cmp
es
es
pop
sub
xor
call
add
hlt
sbb
push
cmp
sub
sub
jecxz
rcl
or
retf
push
cmp
pop
mov
mov
push
fiadd
jnp
fld
imul
in
sub
cmp
push
adc
jecxz
cmp
mov
out
add
xchg
clc
push
push
test
ins
fadd
or
das
clc
fld
jae
xor
fistp
jge
hlt
sbb
repnz
add
clc
sbb
push
pusha
pushf
in
mov
mov
pop
inc
push
adc
sbb
mov
fild
dec
push
outs
cmp
les
outs
fist
and
fisttp
js
pop
add
jmp
cli
lahf
sub
inc
sar
pop
icebp
xchg
or
mov
mov
pusha
loopne
mov
cs
imul
jmp
pop
enter
clc
mov
pop
test
je
in
sub
aas
fldenv
and
cld
into
sub
dec
(bad)
mov
neg
adc
and
dec
or
das
icebp
aas
mov
fsubr
pop
adc
adc
rol
xor
arpl
sar
mov
cmp
aad
mov
adc
ret
jle
mov
dec
imul
adc
dec
les
into
pop
fild
cmp
jg
and
xchg
and
mov
rcl
add
out
inc
mov
out
jecxz
das
aas
and
loope
dec
fnstenv
outs
xor
inc
xor
xor
sub
or
dec
pop
call
mov
mov
xchg
or
pop
pop
add
fisttp
dec
add
leave
push
dec
and
dec
cmp
(bad)
dec
es
cli
or
cmp
jg
or
enter
sbb
xchg
adc
add
fisttp
dec
or
and
arpl
mov
push
dec
and
xchg
cli
aas
lods
inc
jg
mov
int
push
adc
fdivr
movd
ins
push
mov
adc
push
inc
inc
ror
push
and
mov
jge
shr
cmp
adc
cld
jae
jl
test
jle
push
js
dec
jne
push
add
pop
imul
fstp
push
ret
nop
dec
aaa
test
xchg
pop
sti
push
lods
jno
pop
cmps
loop
sbb
lea
lods
add
and
mov
cmc
or
imul
or
and
mov
les
push
call
jmp
cld
retf
(bad)
dec
and
sar
or
adc
(bad)
sti
dec
pop
inc
or
lds
push
pop
xlat
ds
mov
cmp
xchg
push
and
mov
jmp
into
fist
sub
call
rcr
(bad)
lock
xchg
cmp
gs
pop
imul
or
cmp
add
mov
out
sti
sub
add
fs
cmc
pop
repnz
or
push
push
ficom
jg
xlat
ror
pop
inc
into
sub
sbb
(bad)
shr
mov
in
xor
lahf
out
ins
xchg
adc
mov
xchg
enter
aam
int3
call
sbb
adc
jg
mov
xchg
sbb
or
sub
inc
jg
hlt
push
popf
cmp
pop
inc
or
mov
dec
pop
jp
mov
mov
repnz
push
mov
das
ss
xor
int
or
adc
or
inc
js
fimul
sbb
inc
xor
fdiv
xchg
ds
imul
(bad)
xor
and
fs
jge
imul
shl
fs
pop
shl
pop
jmp
mov
adc
add
sub
pop
retf
sahf
or
pop
int
sub
outs
popf
cmp
jne
mov
aad
mov
mov
dec
xor
daa
cs
ret
stos
fild
and
call
shl
xor
and
mov
pop
clc
lods
mov
dec
loope
js
mov
sbb
aam
cld
adc
adc
mov
pop
jg
popa
dec
sbb
inc
sub
adc
push
dec
add
sbb
sub
mov
pop
mov
and
das
jo
adc
and
into
inc
or
leave
inc
xchg
jns
retf
scas
add
fild
mov
sub
out
jmp
sbb
jl
out
push
pop
jns
js
jne
xchg
pop
outs
add
xor
and
dec
sub
clc
sbb
sub
fld
add
cs
xor
shl
pop
enter
jg
outs
sar
or
cs
sub
add
mov
xor
add
adc
fidivr
jg
cmps
sbb
fild
sbb
lahf
cmp
imul
or
mov
push
stos
out
sbb
stc
(bad)
(bad)
imul
dec
push
adc
pop
sahf
shr
popa
add
cli
fst
dec
or
test
repnz
and
push
xor
push
sub
fwait
sub
cld
mov
imul
cmp
push
adc
icebp
pop
out
in
mov
addr16
fisttp
sbb
pusha
mov
push
add
lahf
pusha
cwde
adc
scas
adc
dec
lea
or
pusha
mov
jg
inc
mov
add
shl
push
enter
pop
push
jle
jp
dec
lock
or
adc
es
popa
fdiv
sbb
into
adc
and
stos
push
add
cmp
pop
sbb
xor
ret
and
inc
mov
xchg
mov
mov
mov
push
ffreep
pusha
and
cmp
add
pop
xchg
or
outs
cmp
pop
out
mov
push
or
sbb
jge
sub
pop
imul
jns
ins
xchg
rol
popf
repz
mov
dec
sbb
jns
push
inc
add
add
popa
sub
mov
mov
movs
mov
dec
mov
aam
jecxz
stc
sub
push
outs
mov
or
mov
shl
xchg
enter
addr16
daa
mov
stc
or
dec
jnp
adc
sets
out
dec
and
gs
add
jmp
jno
or
jecxz
rcl
inc
js
daa
push
pop
cmps
lahf
or
jne
sub
popa
fwait
pushf
icebp
jne
cli
cdq
adc
enter
lea
cmp
mov
xchg
push
leave
retf
int
sahf
or
aas
add
jne
sub
jmp
cwde
jns
inc
rcl
pop
fcom
call
cmp
pop
retf
fsub
dec
mov
adc
mov
dec
aad
or
popf
jg
js
or
lahf
cli
and
add
inc
inc
xor
ret
push
xlat
mov
cmp
lea
or
into
adc
mov
xchg
sbb
in
shr
into
adc
xor
pop
les
rcr
ficom
rcl
sub
stos
cmp
mov
into
and
or
retf
cmp
jb
stc
jnp
pop
nop
sub
ror
add
sub
push
or
inc
mov
adc
repz
stos
in
pop
add
cld
and
inc
push
sub
fwait
(bad)
mov
mov
and
imul
cmp
push
push
add
hlt
cli
dec
or
jp
mov
movs
out
fist
push
xchg
arpl
call
xchg
jge
or
mov
es
jns
ins
xor
ins
enter
test
mov
cmp
adc
movs
push
popf
sbb
xchg
and
push
les
adc
inc
ret
pop
(bad)
dec
add
leave
sub
(bad)
(bad)
stc
mov
out
lea
adc
inc
add
push
sbb
inc
rcl
lahf
aaa
and
(bad)
adc
or
in
and
pop
and
and
data16
shl
or
popf
outs
enter
pop
pop
add
mov
cli
push
or
cmp
pop
jmp
inc
(bad)
push
sub
fidiv
dec
sbb
pop
mov
cmps
push
sbb
lock
retf
iret
push
enter
add
idiv
add
arpl
aaa
mov
xchg
jmp
and
dec
adc
(bad)
and
fcom
fcmovne
movs
push
ins
add
or
hlt
(bad)
lods
push
test
adc
lea
or
sbb
push
es
test
test
push
repnz
inc
sub
dec
jl
sub
sub
add
pop
nop
jmp
clc
jmp
out
popa
push
pop
aaa
sub
mov
movs
js
pop
(bad)
movs
pop
sbb
push
rcr
jae
dec
mov
sbb
xchg
mov
mov
loop
in
or
adc
push
inc
movs
lahf
movs
jg
inc
leave
and
shr
into
jae
fwait
xor
and
sub
mov
pushf
rcl
out
inc
jno
mov
stos
mov
xchg
jge
xor
jle
rcr
mov
popf
sbb
imul
outs
or
add
into
inc
jae
fsub
xchg
push
test
fldcw
popf
ror
push
out
or
call
int
inc
dec
mov
xchg
xor
or
push
or
mov
(bad)
ins
iret
push
stos
adc
and
or
mov
xchg
add
jae
mov
aam
and
das
inc
jb
arpl
mov
inc
fwait
clc
adc
inc
sbb
arpl
int3
xor
js
add
jbe
das
cmc
inc
sub
in
imul
jle
mov
sbb
inc
jno
and
push
int3
push
sar
and
mov
sbb
aas
iret
cmp
or
mov
sub
xchg
or
pop
mov
mov
sbb
movs
std
add
add
inc
lahf
int3
cmp
mov
(bad)
mov
sbb
retf
jb
xor
mov
push
mov
pop
out
push
je
mov
mov
xor
dec
fisubr
adc
jns
into
lods
or
leave
add
dec
sbb
jmp
inc
sbb
ror
rol
lock
inc
adc
iret
jge
js
xchg
sub
aam
add
cmps
push
jnp
ret
sbb
rol
inc
dec
cmps
je
leave
push
pop
inc
test
inc
shl
add
pop
imul
scas
into
sti
jne
ret
shl
sbb
jns
jmp
leave
ficomp
lea
int3
push
dec
cmps
jns
mov
gs
jmp
mov
cmps
push
cmp
jg
sub
ins
push
shr
mov
push
inc
add
out
inc
jmp
ret
mov
adc
and
out
sub
or
xchg
cmp
aas
ja
outs
fnstenv
cmps
sahf
push
xchg
(bad)
mov
loope
repz
pop
jg
test
or
scas
dec
push
xor
cdq
mov
nop
das
ret
jne
call
lea
add
cmp
mov
cmps
jecxz
cmc
or
mov
repz
or
sub
mov
mov
inc
pop
out
leave
sub
loopne
rol
data16
mov
leave
push
push
sbb
jp
stc
popa
push
loopne
adc
(bad)
(bad)
push
int
rcr
jp
div
(bad)
pop
or
add
xlat
inc
dec
push
fstp
lods
push
leave
mov
inc
int3
push
push
bound
js
les
outs
pop
std
mov
adc
jge
mov
jae
sbb
dec
add
xchg
(bad)
mov
push
mov
rcl
xchg
enter
inc
das
rol
push
inc
mov
inc
cmps
cmc
lds
or
adc
jb
loopne
jno
in
mov
jns
dec
pop
push
cs
aam
outs
das
mov
leave
ds
sub
test
popa
mov
pop
mov
int3
mov
out
pop
cmps
inc
dec
fnstsw
cwde
sbb
xor
(bad)
data16
(bad)
jnp
pusha
sahf
and
inc
or
pop
es
and
loopne
es
pop
sub
scas
(bad)
xchg
cmp
inc
ins
in
mov
int
adc
fdivr
das
and
sub
leave
jmp
arpl
outs
cmp
inc
inc
sbb
and
jle
mov
jecxz
mov
rcr
inc
pop
inc
xchg
cmp
test
es
adc
fwait
bound
inc
sub
or
lods
and
fwait
iret
mov
push
xor
mov
push
aad
xor
loop
imul
cmps
(bad)
push
push
adc
sub
test
fdivr
adc
fsub
push
pop
sbb
mov
mov
jbe
ret
dec
dec
test
and
mov
adc
leave
ja
xor
mov
add
rcl
(bad)
addr16
iret
fld
adc
push
push
sti
pop
push
call
jbe
sbb
pop
das
jle
lods
inc
push
in
or
adc
sti
jno
pop
xchg
dec
int
mov
xchg
in
xchg
popf
push
jp
push
mov
cmp
cdq
(bad)
mov
std
or
out
mov
fwait
mov
xchg
sub
or
int
add
add
inc
or
mov
arpl
pop
pop
jle
or
inc
inc
mov
movs
cmp
pop
pop
out
dec
mov
jp
or
(bad)
dec
sbb
xor
push
xchg
leave
dec
cmp
ins
movs
adc
(bad)
mov
mov
and
loopne
xlat
and
adc
pop
into
mov
mov
iret
dec
adc
mov
adc
lahf
(bad)
dec
mov
popa
das
pop
(bad)
xchg
jne
scas
pop
cli
aas
cmps
or
jb
adc
hlt
sub
jmp
pop
sbb
in
imul
das
popa
jo
das
jns
stc
call
add
xchg
icebp
push
ins
cmp
adc
mov
pop
je
xchg
pop
dec
add
ds
push
call
push
sbb
fstp
es
and
mov
mov
retf
rol
popa
int3
xchg
ds
push
pop
and
pop
mov
push
pusha
jne
add
inc
dec
or
shl
icebp
je
(bad)
mov
into
jnp
(bad)
sub
fbstp
mov
xor
aas
sbb
xor
inc
es
shl
cmc
pushf
mov
gs
aaa
popa
add
(bad)
lods
es
arpl
test
repz
adc
lea
dec
inc
into
popa
xor
inc
jecxz
xchg
push
jl
mov
(bad)
sbb
ds
mov
and
pop
mov
adc
test
add
stos
repz
adc
push
adc
add
add
or
jno
iret
fwait
xor
mov
and
sbb
aas
ja
and
sbb
aas
inc
rcl
ret
push
add
mov
data16
pusha
cld
lods
adc
pop
daa
xor
stos
push
div
ror
loopne
popa
inc
ja
pop
inc
xor
sbb
sub
push
mov
retf
(bad)
adc
outs
cmp
movntps
ror
or
punpckhdq
sbb
adc
leave
rol
test
pop
cmp
cmp
pop
arpl
pusha
shl
fnstcw
popa
addr16
out
mov
mov
mov
sti
jp
sub
jmp
jg
cmps
cmp
shr
(bad)
and
iret
push
xchg
and
push
jo
adc
add
fs
add
ins
fisub
lods
lea
mov
and
pop
cmp
xor
aaa
es
pop
inc
mov
pop
setns
or
jle
mov
scas
cld
cmp
mov
mov
xchg
out
addr16
pop
xchg
mov
(bad)
fmul
outs
xchg
pop
pop
sbb
dec
dec
adc
and
mov
rcl
jmp
jne
push
push
rcl
cmc
cmps
pop
dec
daa
push
pop
sbb
dec
fadd
inc
cs
sub
mov
mov
icebp
add
aas
imul
jae
fidivr
div
les
in
lods
and
scas
jg
pop
test
loopne
iret
leave
mov
das
add
nop
out
pop
ja
and
mov
or
cs
jo
loop
push
and
stos
lds
xchg
push
stc
and
jne
sub
shr
xchg
outs
dec
data16
addr16
nop
lea
cdq
arpl
add
xchg
adc
enter
out
and
sbb
retf
adc
scas
push
addr16
add
adc
mov
and
cmps
sub
inc
and
fwait
push
jae
in
mov
jmp
and
jl
mov
jno
into
(bad)
es
popa
into
mov
movs
sar
icebp
fs
and
cs
push
imul
jg
mov
jb
fild
enter
cli
cmp
test
sub
movs
(bad)
mov
imul
mov
rol
sbb
push
outs
and
call
out
sub
scas
std
mov
repz
nop
jp
mov
(bad)
and
js
lea
cli
dec
push
dec
popf
pop
nop
cmps
jno
les
std
fst
or
push
dec
rol
push
add
dec
shl
mov
push
shl
push
movs
cmp
div
(bad)
push
mov
xor
test
push
cmp
cmovge
(bad)
mov
xor
stos
sub
xchg
icebp
jb
xchg
add
xor
sub
push
outs
sbb
test
inc
sti
cs
mov
add
mov
pusha
cld
int
and
mov
fisubr
xlat
jecxz
xchg
iret
adc
(bad)
ss
stc
mov
jae
outs
mov
cmps
les
(bad)
aam
sub
addr16
stos
out
mov
ror
aas
call
sbb
outs
ins
aaa
sbb
push
mov
imul
mov
adc
jnp
jbe
jmp
ins
pop
or
mov
jo
sbb
add
idiv
popf
and
jne
and
mov
sbb
loope
jbe
xor
andps
jo
pop
pop
cwde
jg
mov
xchg
scas
test
xor
dec
in
pop
mov
out
fisttp
push
jmp
jecxz
ficomp
lods
popf
and
das
pop
xor
xchg
fs
mov
xchg
pop
les
inc
or
pop
or
dec
enter
ds
rol
in
add
push
mov
sub
sub
or
je
xor
add
imul
es
jmp
and
das
neg
test
add
imul
out
and
imul
ins
sub
adc
and
ret
cmp
in
inc
mov
xor
into
pop
adc
or
ror
ss
sbb
dec
add
imul
std
lahf
pop
jns
or
mov
or
jle
jmp
xor
and
push
or
inc
mov
jae
push
and
or
cmp
adc
add
cmp
xor
inc
in
cli
outs
or
jmp
ror
xchg
fisttp
push
sub
inc
mov
sub
aad
xchg
popa
je
(bad)
dec
rcr
ss
sbb
je
(bad)
in
ins
retf
cmp
mov
into
cli
cmp
mov
xor
push
add
sar
aam
mov
jp
add
inc
das
es
retf
test
or
mov
cmp
push
pop
cmps
ds
(bad)
je
test
dec
push
fistp
repz
dec
outs
add
pop
je
xchg
arpl
iret
adc
aas
fcomp
in
enter
inc
fs
adc
jecxz
inc
cmp
cmp
xchg
mov
sub
push
pusha
add
stc
inc
sbb
ja
(bad)
mov
cmp
retf
inc
xchg
shr
xchg
cmp
and
dec
adc
mov
fld
fwait
push
dec
loope
(bad)
sbb
stos
leave
add
adc
pop
dec
inc
mov
cmp
retf
sub
xchg
and
outs
xor
es
call
dec
add
lahf
push
(bad)
mov
and
sar
outs
sub
sar
add
sbb
push
ins
or
cmp
or
push
fmul
sbb
xchg
jecxz
cmps
fist
xchg
pop
mov
ficomp
sbb
push
push
mov
pushf
or
int3
add
call
retf
cdq
rcr
adc
shr
aaa
rcl
inc
adc
leave
mov
fistp
out
out
mov
add
outs
xor
pusha
outs
into
add
fs
inc
push
inc
pushf
std
mov
pop
out
mov
jo
into
and
jb
fist
pop
add
cmp
fistp
fs
dec
pop
outs
push
retf
test
or
jle
fwait
mov
outs
adc
mov
fs
dec
test
lahf
lahf
inc
movs
cdq
or
push
icebp
xor
fs
xor
call
push
inc
adc
fisub
mov
fld
pop
mov
div
movs
fcom
adc
cmps
inc
dec
mov
dec
fist
inc
shl
dec
in
aaa
push
std
cdq
jns
shl
adc
add
jne
stos
push
test
stc
xor
ficomp
dec
fs
and
es
xchg
push
loopne
outs
pop
fld
xor
or
(bad)
outs
std
popf
outs
cmp
or
mov
push
sub
cmp
js
enter
outs
and
fwait
call
or
loopne
popa
dec
paddusw
test
icebp
jo
out
outs
out
mov
sbb
addr16
outs
adc
int3
inc
js
rcl
sar
ror
ja
fcom
and
push
cmc
rcr
xlat
or
jbe
lock
gs
dec
push
(bad)
jno
outs
sbb
popa
mov
add
ins
aam
mov
hlt
jl
hlt
test
repz
aad
cdq
or
int
fs
push
add
and
push
dec
lahf
or
jb
call
out
movs
push
fistp
push
in
jg
imul
inc
sub
sbb
or
jmp
popf
or
mov
sbb
inc
or
cdq
or
mul
xchg
inc
dec
push
ja
rol
dec
mov
arpl
xor
(bad)
dec
in
idiv
sub
mov
jg
sub
sbb
push
dec
sub
inc
push
push
inc
and
stos
fs
cmp
sbb
inc
inc
jbe
dec
adc
fisubr
pusha
movs
fild
popa
stc
dec
dec
cmp
rol
cmc
(bad)
shr
dec
fisttp
and
and
(bad)
mov
ret
sbb
ds
sub
sti
(bad)
(bad)
(bad)
jno
stc
(bad)
movs
pop
es
cmc
lods
call
sub
mov
fs
xor
pushf
test
jl
test
stc
fcomi
loope
inc
jb
enter
dec
retf
dec
push
imul
adc
mov
fwait
pop
add
dec
cli
xor
or
cmp
adc
adc
(bad)
mov
and
imul
sub
jge
cmc
leave
add
pop
jg
jmp
fadd
push
cli
fldenv
das
js
iret
sub
xchg
loopne
sub
inc
push
mov
push
repz
inc
fs
push
fsubr
je
xor
xchg
fcomp
loopne
(bad)
cmc
movs
inc
and
test
sub
imul
pop
xchg
call
add
cwde
inc
pop
lea
xor
popa
jbe
xor
push
cld
pushf
or
scas
jno
cld
lock
or
scas
test
cmp
enter
loopne
mov
inc
inc
inc
rcl
pop
xchg
mov
xchg
push
cmc
or
pop
jmp
or
mov
popf
or
and
adc
imul
xchg
sub
inc
sub
sahf
add
and
neg
mov
loop
ficom
xchg
mov
shr
fiadd
push
ins
std
sub
out
scas
push
nop
push
pop
les
or
xchg
sub
and
sub
mov
(bad)
jmp
sbb
das
cwde
dec
dec
(bad)
mov
int
push
mov
dec
sbb
fistp
ds
call
cmp
popf
pop
push
push
pop
retf
mov
and
fnstsw
cmp
sbb
fist
scas
inc
adc
out
ror
sbb
xchg
movs
jl
into
mov
ret
stc
or
jae
push
stc
(bad)
and
jmp
and
repz
fst
das
sub
sub
fst
sbb
push
inc
adc
xor
jge
add
mov
add
int3
sub
imul
xor
aam
xor
push
inc
mov
(bad)
push
test
adc
adc
mov
jns
push
mov
or
adc
jg
push
repz
jp
data16
or
shr
add
mov
call
mov
outs
div
retf
nop
pop
and
pushf
and
(bad)
jmp
mov
xor
loop
dec
fwait
and
div
mov
ret
and
dec
mov
iret
sbb
loop
mov
sbb
or
outs
sbb
ror
jb
inc
cmp
rcr
or
(bad)
jmp
aas
xor
sbb
push
mov
daa
popa
retf
repz
pop
cmp
iret
mov
mov
or
adc
mov
ins
pop
xor
add
push
aad
enter
sar
jbe
inc
aas
imul
mov
lahf
gs
fcomp
dec
jmp
jp
jo
dec
mov
aam
sub
stc
sbb
add
dec
call
jmp
aam
fcomi
(bad)
dec
es
or
jge
cli
push
aas
dec
jmp
arpl
ins
dec
push
inc
push
cdq
pop
xor
cdq
inc
and
jmp
sub
xchg
sbb
add
sbb
stc
xlat
sub
dec
iret
inc
mov
cmps
ret
sbb
sub
sub
dec
xchg
dec
jmp
iret
das
inc
sbb
sbb
mov
stc
(bad)
jnp
pusha
push
or
add
dec
imul
repz
dec
dec
call
inc
xchg
call
push
pop
jo
stc
pop
sub
pop
inc
pop
cdq
pop
xor
sub
mov
pop
loop
push
adc
ret
or
jo
stc
js
js
jle
jp
jl
test
jmp
sbb
call
iret
pop
dec
popf
movs
add
arpl
and
call
aam
push
cmp
bound
mov
pop
or
test
gs
pop
dec
in
test
aas
xor
ret
push
cmc
call
cmp
ds
call
xor
sar
xlat
movs
sbb
jp
sub
mov
nop
mov
lahf
sub
in
jbe
stos
dec
adc
mov
in
mov
aad
pop
call
call
cmp
imul
mov
adc
movs
add
jae
(bad)
(bad)
cwde
(bad)
jbe
aad
cmp
test
xor
call
pop
cmp
inc
in
jle
push
dec
cs
xchg
call
call
dec
mov
dec
ins
scas
jne
mov
mov
mov
sub
movs
dec
stos
inc
mov
stos
test
pop
xor
mov
dec
jns
imul
pop
sbb
and
rcr
aas
retf
arpl
fidiv
jno
je
gs
rcl
ss
jg
pop
adc
in
xchg
out
pop
in
leave
mov
aam
add
jnp
sbb
icebp
or
dec
stos
push
dec
pop
push
jmp
push
jo
stc
push
es
pop
dec
es
repz
inc
and
iret
and
inc
ror
jmp
push
lea
mov
sbb
sub
lock
mov
repz
fwait
es
pop
sbb
test
xchg
and
sbb
clc
sub
dec
stc
jb
inc
sub
fmul
in
int3
xchg
in
inc
jmp
es
add
das
jb
aaa
sbb
cdq
jecxz
test
sbb
sub
inc
pop
popf
cmp
inc
dec
cmp
jmp
iret
pop
inc
out
cdq
(bad)
sti
add
call
push
lahf
jo
stc
jg
ror
rcr
sbb
aad
xlat
repz
(bad)
fld
mov
push
das
mov
mov
mov
or
xor
fisubr
and
fild
cdq
les
call
xchg
(bad)
repz
shl
pop
add
adc
cmp
es
retf
jo
(bad)
div
retf
fxch
sub
dec
enter
sub
inc
or
mov
sub
fcomp
push
mov
js
mov
push
push
jbe
push
sbb
mov
cli
test
push
sub
pop
popf
ins
sub
ins
add
jnp
mov
mov
je
xor
mov
mov
sar
and
lea
pop
fucomp
fild
adc
jp
icebp
mov
dec
retf
jo
and
aad
sbb
mov
ins
in
shl
mov
rol
or
xlat
adc
jecxz
enter
lahf
cmp
sub
mov
lods
xor
retf
lock
mov
test
call
fstp
push
push
xchg
cmp
stos
cdq
fisub
int
mov
out
(bad)
lock
or
inc
adc
ror
ins
cmc
mov
and
aam
pop
les
and
sub
loope
stos
sahf
fwait
stos
sub
(bad)
daa
stos
in
enter
sub
gs
cld
js
iret
jne
sub
call
and
pop
stos
lods
jns
fiadd
pop
pop
xchg
xchg
enter
cmp
sti
popa
imul
ja
(bad)
imul
fisub
adc
cmc
sub
cmp
loop
ins
mov
movs
fsubr
mov
add
mov
pop
test
mov
pop
out
fist
cmps
sub
mov
(bad)
mov
in
inc
pop
mov
fs
cmp
jno
pop
std
adc
scas
xor
icebp
scas
jb
icebp
repnz
(bad)
es
mov
sbb
ret
mov
cmp
ficom
adc
dec
or
push
or
jg
daa
cld
je
sub
jbe
mov
(bad)
fstp
movs
mov
je
xor
xchg
jno
in
call
jle
stos
and
scas
enter
add
or
jns
mov
mov
in
inc
pop
jo
push
lds
push
adc
inc
mov
sub
aam
pop
test
and
pop
mov
retf
shl
jns
jbe
adc
ret
das
out
and
adc
push
push
sbb
dec
jge
outs
dec
int
cld
dec
leave
dec
or
out
and
call
push
mov
inc
and
cmp
inc
push
cwde
pop
test
xchg
mov
pusha
mov
retf
sub
and
fdivr
ins
sbb
stos
xor
mov
stos
ins
les
sar
pusha
int3
inc
enter
mov
sbb
mov
sub
and
popa
pop
out
jb
inc
ret
dec
out
mov
xor
jbe
xor
ror
mov
icebp
ja
add
jmp
dec
repnz
mov
jb
stc
xor
std
sbb
dec
xchg
jns
test
ret
dec
push
jo
ins
sub
cmp
icebp
imul
popa
aad
shr
test
(bad)
in
adc
in
inc
push
push
mov
sbb
sub
sahf
mov
and
push
pushf
sbb
mov
mov
mov
jl
mov
pop
fst
jnp
sbb
arpl
pop
data16
pushf
pop
pop
cwde
or
aas
mov
mov
fld
adc
leave
retf
loop
addr16
icebp
xchg
adc
mov
pop
sub
cmp
leave
aad
sub
(bad)
aad
ins
jle
cmc
pop
mov
ja
jmp
pop
or
popa
shl
mov
cmps
pop
imul
aad
inc
add
inc
mov
pop
xchg
dec
movs
push
or
jae
xchg
cmps
scas
aaa
out
shr
test
xor
jl
sbb
adc
mov
adc
cmp
xor
mov
mov
pop
mov
leave
dec
add
jp
sub
mov
lds
mov
gs
sysexit
enter
mov
xchg
and
ins
retf
lea
xchg
dec
ror
test
jp
leave
popa
push
in
punpcklbw
das
hlt
leave
dec
div
inc
pop
jmp
mov
mov
clc
outs
dec
(bad)
popf
adc
or
push
jo
stc
push
sub
push
inc
ins
cdq
push
test
xor
inc
enter
xlat
fcom
das
rol
ret
shl
stos
into
bndstx
xor
inc
mov
mov
inc
hlt
mov
lahf
imul
outs
xchg
shl
sbb
inc
dec
mov
mul
in
arpl
mov
add
je
daa
add
mov
add
dec
mov
arpl
add
jle
and
xchg
xchg
pusha
mov
rol
cmps
aad
data16
cdq
pop
jl
add
bndstx
mov
test
aas
(bad)
pop
jae
lods
or
inc
int
inc
dec
popf
xor
cmp
hlt
clc
push
cmc
sbb
sub
fst
out
add
sbb
add
sbb
add
mov
inc
fild
xchg
shl
int3
retf
add
retf
movs
adc
sbb
or
ins
jae
ins
pop
mov
mov
mov
ins
and
sub
pop
retf
mov
jo
mov
push
dec
dec
imul
cmovnp
add
icebp
push
mov
(bad)
or
sbb
pop
mov
adc
stos
dec
inc
ss
cmp
(bad)
dec
or
inc
in
and
arpl
nop
ja
inc
jl
push
je
and
shr
jb
add
jb
lods
adc
(bad)
mov
xchg
xchg
inc
dec
dec
dec
enter
sbb
mov
pushf
popf
dec
or
push
mov
shl
mov
add
shl
jnp
in
es
or
push
pop
push
mov
cmp
dec
das
ret
pusha
xchg
mov
mov
mov
pop
idiv
in
outs
sar
bound
sbb
mov
sbb
stos
dec
inc
int
mov
xchg
dec
cmps
push
mov
ds
xlat
sti
dec
fbstp
jg
jl
ins
out
int
add
jns
pop
sti
adc
xor
mov
mov
jae
fmul
push
sub
pop
cmp
fnstsw
lahf
dec
lds
pop
mov
mov
cmpxchg
sub
test
pop
ss
mov
jb
push
xor
fmul
(bad)
jge
pop
aaa
lahf
and
clc
mov
daa
mov
xor
in
or
or
mov
mov
lea
xchg
repnz
jp
movs
pop
lds
arpl
pop
imul
leave
cwde
xor
sub
pop
adc
adc
pusha
push
jbe
xor
(bad)
xor
push
pop
pop
fld
mov
stos
mov
adc
adc
cmp
add
dec
push
outs
scas
jg
adc
pmullw
fwait
xchg
pop
scas
push
outs
mov
adc
pushf
push
add
inc
loopne
es
mov
jb
lds
mov
mov
xchg
retf
ds
sub
push
sbb
test
push
cwde
sbb
inc
scas
dec
jbe
xchg
inc
sti
dec
inc
cdq
dec
ins
xchg
movs
mov
idiv
pop
mov
sub
mov
adc
sub
dec
repz
ret
dec
mov
cs
lea
sub
dec
or
and
mov
loope
repz
cmp
inc
scas
mov
arpl
cld
pop
xchg
pop
sahf
xor
jecxz
push
les
jbe
xchg
inc
sbb
push
dec
repnz
dec
popa
call
inc
mov
xor
sub
add
push
add
inc
push
fcomp
stos
cdq
cdq
dec
pushf
call
inc
xor
push
mov
inc
nop
jns
pop
push
and
retf
and
iret
pop
cmp
xor
loopne
adc
daa
jae
js
jmp
stos
cwde
jns
push
imul
and
cmc
sti
and
out
xor
inc
push
and
fldcw
inc
xor
cmp
push
mov
js
out
and
imul
sbb
lahf
adc
sub
inc
xchg
outs
xlat
xor
add
cmp
mov
out
inc
pop
adc
xchg
aas
data16
jmp
xor
or
mov
or
aas
xor
or
sbb
popa
fstp
inc
aam
sbb
xor
mov
fmul
mov
stos
fsubr
lods
mov
push
aad
add
idiv
adc
dec
sub
jl
sbb
sti
sub
ins
outs
push
add
lods
sub
dec
mov
jmp
iret
pop
inc
dec
xchg
xor
cmp
das
es
cmp
das
jb
rcr
jae
mov
inc
mov
or
sbb
inc
jns
cli
cs
dec
jmp
imul
mov
cmc
fstp
es
sub
das
outs
inc
aad
push
add
(bad)
add
sbb
stos
push
rcl
sbb
call
call
les
pop
sti
adc
inc
push
jnp
xor
and
adc
inc
sub
jnp
test
cmp
add
mov
pop
out
out
xchg
call
jl
repnz
jnp
adc
ret
sub
push
adc
ror
pusha
xor
add
test
or
xor
popf
jmp
ret
test
cmp
mov
push
push
scas
pop
cdq
inc
imul
repnz
add
adc
push
aad
pop
aam
adc
adc
movs
jecxz
push
imul
xor
aam
adc
retf
cmp
push
(bad)
mov
cmp
hlt
retf
imul
rcr
pushf
push
stc
in
adc
cdq
ins
sub
dec
jae
in
js
push
mov
sbb
inc
xlat
pop
js
int
jle
sub
fnstenv
adc
jnp
sbb
inc
jae
push
sub
(bad)
jecxz
retf
fst
sub
dec
adc
cdq
adc
test
sbb
movs
inc
jp
movs
sub
cmps
repz
or
inc
adc
in
sub
cli
cwde
and
dec
fadd
loop
mov
lods
mov
pop
push
add
ins
push
and
jmp
outs
xchg
les
xchg
cdq
and
ficom
sbb
sar
lock
add
mov
jns
sbb
(bad)
cs
sub
in
and
rcr
(bad)
jae
(bad)
adc
cmps
ins
and
ret
jae
dec
out
pop
cdq
out
inc
test
sbb
inc
outs
popf
adc
ins
dec
sbb
jmp
iret
push
inc
mov
call
mov
shr
ret
call
push
xor
mov
sbb
cdq
jnp
xchg
inc
jne
mov
sub
push
iret
das
inc
pop
mov
mov
sbb
popf
out
ret
mov
movs
sbb
push
pop
stc
and
cmps
sub
push
inc
lea
jle
fsubr
mov
cs
test
(bad)
je
and
mov
outs
test
adc
popf
pop
sub
dec
add
dec
inc
repz
push
xchg
jo
stc
mov
into
dec
jmp
hlt
dec
dec
dec
iret
push
push
(bad)
repz
(bad)
mov
mov
stc
and
xor
cwd
sub
sub
inc
sbb
and
xor
scas
das
in
inc
call
push
std
jae
inc
mov
arpl
retf
loopne
cli
sub
mov
pop
pop
and
out
xchg
mov
cmp
das
and
clc
sub
pusha
adc
pop
or
or
pop
popf
pusha
dec
fcomip
jp
std
mov
ss
lds
or
mov
pop
sahf
arpl
inc
adc
arpl
xor
inc
jmp
dec
dec
xchg
mov
and
aam
outs
push
test
mov
push
outs
inc
sub
mov
xchg
mov
or
sub
iret
das
cmpps
add
adc
popf
stos
sub
dec
imul
inc
and
data16
sub
and
bswap
mov
je
inc
add
sub
jae
lahf
inc
fdivr
and
ret
enter
stc
sbb
ins
fsubr
ret
push
outs
les
xchg
push
add
sub
push
pop
popf
cli
sbb
inc
mov
adc
bound
stos
pop
push
aas
and
pop
xor
xchg
xchg
push
cmps
cmps
xchg
mov
mov
and
xchg
mov
bound
hlt
movs
cld
hlt
and
(bad)
(bad)
loopne
and
pop
(bad)
lods
lods
repz
adc
jo
or
mov
bound
pop
pusha
aaa
or
xor
sti
lods
jmp
dec
and
repnz
ss
or
dec
ret
jmp
dec
mov
and
add
ret
out
sbb
cwde
cld
lods
jg
cs
and
xchg
jno
ret
cwde
or
rcr
ins
stos
jae
gs
or
js
or
ret
test
stos
fstp
shl
mov
mov
xor
leave
and
xchg
dec
push
popf
lods
jnp
ret
sub
retf
ss
and
jmp
push
push
repnz
hlt
cs
scas
adc
gs
inc
xchg
or
ins
sbb
pop
pushf
es
scas
(bad)
or
mul
jp
push
leave
fadd
jl
xor
pop
rcl
sbb
stc
pop
enter
adc
test
add
pop
out
(bad)
mov
leave
jp
or
gs
addr16
lea
mov
jno
(bad)
pop
fidivr
pop
mov
mov
jl
xor
bound
xchg
push
add
ins
cwde
dec
in
stos
or
aaa
test
scas
jb
xor
add
mov
and
inc
das
sbb
fdivp
out
add
push
jno
or
push
mov
push
jecxz
cmp
sbb
push
cdq
dec
xchg
repz
in
xor
aaa
je
es
or
push
mov
scas
das
mov
and
pop
adc
sahf
cmp
(bad)
xor
dec
dec
mov
icebp
or
(bad)
rcl
push
ins
jecxz
adc
popa
or
(bad)
daa
dec
fidivr
mov
adc
fld
out
in
pushf
xchg
bound
pop
scas
loopne
jg
xlat
ds
arpl
sbb
cdq
push
aad
icebp
sub
es
cmp
pusha
bound
add
pop
or
jecxz
adc
jmp
pop
loope
lds
inc
mov
movs
fs
in
jbe
push
add
sar
sbb
add
jne
sbb
dec
int
or
lea
mov
pop
pushf
sub
inc
push
adc
loope
in
repnz
cmps
ret
in
adc
inc
inc
jbe
fdivr
cmp
jbe
fmul
xchg
lea
loope
mov
(bad)
in
(bad)
pop
test
mov
lods
xor
cwde
inc
scas
and
pop
(bad)
mov
add
retf
inc
jne
rcl
rcl
jo
pop
lds
cmp
jbe
in
mov
sbb
mov
mov
push
adc
cmp
xor
add
add
add
fdiv
push
cli
pop
nop
jo
sbb
xlat
mov
fbstp
pop
pop
sbb
(bad)
jb
xchg
les
ja
push
pop
sbb
(bad)
xchg
(bad)
jmp
retf
inc
dec
or
pop
pop
sbb
test
and
add
pop
pop
pop
mov
retf
adc
pop
lahf
pusha
rcl
cdq
sub
sub
retf
or
inc
imul
inc
sub
arpl
lea
sub
mov
fld
dec
mov
adc
cmp
imul
inc
and
fs
push
inc
dec
test
div
adc
jmp
xchg
xor
jmp
in
pop
mov
push
adc
imul
sbb
xor
push
popa
int
in
icebp
push
pop
or
add
inc
pop
pop
push
call
jns
mov
xchg
xor
jle
stos
or
or
mov
push
addr16
adc
div
adc
loop
pop
retf
push
shl
movs
sahf
stos
out
mov
adc
adc
jp
mov
dec
push
rol
and
sub
pop
(bad)
jbe
ds
inc
jmp
inc
push
(bad)
cmc
mov
neg
pop
sbb
call
or
cdq
jmp
int3
or
and
jp
movs
xchg
xchg
mov
lods
in
xchg
or
mov
fwait
arpl
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
bound
or
fisttp
.byte
or
.byte
.byte
