imul
mov
xchg
retf
cs
add
sbb
je
(bad)
cs
enter
add
movs
or
outs
int3
outs
cmp
int3
or
cs
loop
int3
or
movs
mov
out
xchg
add
mov
sar
das
mov
inc
aas
mov
sar
data16
stc
xor
es
fisub
cs
mov
and
and
call
inc
pop
sbb
(bad)
bnd
cs
push
cdq
jne
out
in
xor
retf
dec
out
jge
pop
xchg
movs
xchg
pop
dec
imul
dec
sahf
mov
dec
xor
cmp
sub
or
and
(bad)
cs
add
mov
fs
mov
dec
ins
xor
iret
lods
xor
enter
(bad)
cs
pop
mov
mov
ret
cs
pusha
xlat
movs
mov
dec
cs
or
dec
(bad)
movs
cdq
out
sub
aas
ja
int3
add
int3
pop
nop
jg
pop
(bad)
cs
xchg
adc
movs
stc
aas
ja
int3
clc
bound
int3
cmp
jl
(bad)
ja
push
cmp
setp
push
retf
daa
or
out
push
clc
cmp
hlt
inc
jmp
das
in
xor
cmp
mov
dec
retf
rcr
add
mov
imul
lds
popa
cmp
sahf
cmp
xor
add
fdivr
(bad)
cmps
add
jge
or
lods
or
into
out
mov
push
xlat
sahf
mov
iret
cs
or
cs
mov
es
sub
cs
loopne
lods
xor
mov
pushf
hlt
bnd
mov
dec
iret
iret
sar
sbb
int3
jecxz
push
int3
or
mov
cs
or
ret
inc
adc
mov
rcl
jecxz
add
inc
(bad)
hlt
daa
jbe
or
cs
loopne
dec
ins
or
cs
pop
dec
retf
cmps
hlt
scas
xor
inc
push
sbb
or
or
cs
out
jge
pop
dec
dec
and
push
adc
ins
inc
and
or
mul
das
inc
jmp
out
sahf
mov
scas
or
inc
in
mov
mov
push
jl
(bad)
sar
das
ja
int3
hlt
repnz
jl
(bad)
cmps
jmp
jecxz
pop
int3
or
cmp
cmps
xor
(bad)
cs
or
cs
xchg
cmps
sub
das
push
mov
pop
js
les
cmps
xor
aas
cmps
or
inc
int3
popa
les
mov
sub
int3
jecxz
pop
int3
or
dec
lock
cmp
lds
add
cmc
cmp
dec
push
pop
scas
or
mov
xor
(bad)
push
jl
cs
jecxz
pop
int3
or
fsub
dec
(bad)
mov
xor
xchg
(bad)
ror
(bad)
cs
iret
retf
adc
hlt
(bad)
cs
loopne
xchg
jecxz
(bad)
cs
dec
stos
and
inc
call
jg
cmp
pop
jno
push
push
in
cdq
and
and
xchg
jns
and
mov
xor
add
mov
xchg
inc
int3
arpl
cs
or
xor
sar
or
cmps
or
(bad)
daa
cmp
pop
or
xchg
mov
hlt
mov
cmps
or
pop
fdiv
mov
and
mov
sar
or
daa
cmp
pop
or
fisubr
retf
mov
cs
or
inc
repz
inc
dec
xor
xchg
push
push
in
cdq
and
call
lods
and
imul
scas
aaa
int3
or
inc
int3
hlt
mov
xor
(bad)
div
cs
int
fdivr
cmp
pop
aam
mov
xor
inc
int3
hlt
mov
xor
(bad)
jmp
pop
xor
ret
push
int3
or
fdivr
add
out
mov
shl
push
cdq
out
pop
dec
retf
dec
out
jge
pop
dec
pop
shl
idiv
ror
xor
mov
mov
inc
dec
cmp
inc
dec
xor
sub
dec
outs
cmp
inc
shr
test
sub
hlt
sub
inc
dec
aas
das
xor
xchg
es
mov
sub
mov
adc
(bad)
cmps
cmp
mov
das
int3
jle
pop
mov
mov
xor
movs
mov
(bad)
imul
ret
repz
inc
shl
int
dec
aaa
cmps
cmovl
dec
ret
cmp
aaa
(bad)
cs
movs
cmp
add
xor
adc
or
pop
dec
mov
ror
or
jnp
out
jg
int3
or
(bad)
(bad)
jg
cs
pop
nop
movs
mov
int3
inc
shl
cmc
cmp
jle
movs
dec
idiv
shl
add
xor
cmp
leave
jg
ins
int3
add
xor
adc
or
daa
or
mov
fiadd
xchg
es
pop
std
cmps
pop
push
(bad)
cs
adc
ja
movs
dec
idiv
shl
add
xor
cmp
dec
push
(bad)
cs
(bad)
mov
xor
add
pop
xchg
js
sbb
fild
adc
int
fsub
sub
(bad)
movs
mov
jge
sub
les
adc
in
fistp
dec
inc
pop
lock
inc
dec
iret
call
xchg
push
push
in
cdq
and
pushf
pop
xchg
jns
push
retf
jmp
adc
jg
nop
or
fldcw
add
and
mov
int3
cmp
fcomp
out
cmp
push
aam
retf
in
dec
(bad)
xchg
add
sti
dec
(bad)
lock
cmp
mov
dec
iret
call
mov
dec
in
in
dec
jnp
push
cdq
jne
enter
pop
xchg
js
xor
mov
test
dec
out
cs
hlt
ret
dec
(bad)
cmps
cmp
(bad)
enter
in
dec
arpl
add
cmp
xor
pop
leave
cmp
outs
daa
sbb
movs
mov
dec
in
std
leave
dec
jnp
cmp
jno
push
push
in
cdq
and
call
sub
dec
(bad)
int
dec
jmp
mov
cmp
arpl
(bad)
dec
idiv
rol
cmp
movs
push
es
int3
pop
das
pop
xor
cmp
jbe
imul
das
cwde
jo
enter
pop
xchg
jns
push
retf
xchg
dec
sub
jne
repz
(bad)
inc
int3
cmp
jecxz
pop
int3
or
cmps
or
cs
pop
xchg
sar
or
xor
or
cmps
or
ret
sbb
xchg
push
call
pop
xchg
jns
jle
xchg
push
dec
fistp
je
sub
cld
and
dec
ss
lea
stos
pop
lea
hlt
xchg
es
dec
ret
sar
pop
iret
xchg
gs
(bad)
cs
dec
imul
movs
retf
movs
aam
xchg
es
mov
int3
push
cdq
jne
enter
mov
push
lahf
pop
nop
movs
mov
lock
int3
mov
cs
ins
ret
cmps
or
cmc
mov
sti
xchg
inc
fsubr
test
and
mov
int3
add
dec
(bad)
cs
dec
imul
add
or
sbb
push
retf
dec
imul
pop
call
inc
enter
mov
xchg
(bad)
dec
jnp
cs
enter
ror
mov
add
inc
sti
inc
out
enter
sub
hlt
icebp
movs
fdiv
sar
int3
or
cs
enter
xor
cs
retf
into
cmc
ret
xchg
pop
cmps
mov
into
out
mov
loopne
js
lock
xor
fnstenv
retf
cwde
jo
ret
inc
out
jg
int3
or
(bad)
sub
cs
pop
nop
xchg
mov
rol
test
adc
hlt
(bad)
cs
mov
mov
imul
inc
call
mov
fs
js
(bad)
cmps
adc
and
dec
sar
shl
add
or
ins
int3
pop
dec
push
xor
cmps
adc
pop
cmps
js
(bad)
movs
hlt
cmp
int3
xchg
xor
cmp
jle
mov
(bad)
cmps
or
mov
xor
inc
aaa
hlt
cmp
xor
(bad)
pop
ror
cs
sbb
adc
add
pmaddwd
cs
xchg
es
dec
ret
jle
xor
jns
add
ret
(bad)
in
das
int3
or
or
stos
in
or
cs
outs
aas
cs
ss
ror
or
daa
int3
or
sub
dec
xor
leave
ja
ins
int3
jge
lods
jmp
or
js
(bad)
cmps
mov
dec
mul
ror
cmps
or
add
shr
test
jmp
inc
dec
aas
cmps
mov
fs
js
(bad)
mov
mov
and
enter
aas
scas
dec
push
les
clc
rcr
mov
or
xchg
inc
push
test
movs
retf
es
int3
add
fdiv
(bad)
cs
or
xor
pop
pop
sti
mov
mov
xlat
cmp
xor
mov
dec
(bad)
jle
xor
mov
inc
dec
cmp
or
shr
leave
ja
ins
int3
hlt
cmp
int3
add
xor
mov
je
shr
int3
cld
and
dec
fistp
shl
add
or
ins
int3
pop
dec
push
xor
ror
xor
shl
hlt
inc
or
test
int3
sbb
das
add
cmc
cmp
add
mov
and
jne
or
(bad)
(bad)
inc
int3
neg
inc
clc
dec
(bad)
in
dec
jmp
inc
dec
iret
scas
lock
and
(bad)
cs
add
(bad)
adc
or
cs
clc
dec
(bad)
in
dec
jmp
in
(bad)
lods
xor
mov
inc
dec
iret
movs
mov
(bad)
adc
jg
adc
jg
lods
test
add
iret
or
cs
mov
int3
mov
es
cld
enter
add
ins
test
pop
fnstenv
hlt
into
out
mov
or
in
dec
jmp
mov
dec
(bad)
lea
dec
dec
(bad)
cmp
dec
imul
lods
test
loopne
daa
pop
jg
pop
aas
jle
(bad)
and
maskmovq
not
cmc
je
adc
jbe
lods
test
cmp
cmps
or
imul
sti
push
int3
add
pop
xor
cmp
mov
(bad)
pop
ret
hlt
mov
movs
cmp
int3
jecxz
inc
int3
or
inc
repz
(bad)
inc
int3
lods
cmps
or
movs
or
mov
mov
or
jne
or
cmps
mov
lods
sub
or
inc
int3
or
add
add
xchg
xor
xchg
pop
(bad)
hlt
mov
and
test
int3
popa
(bad)
mov
into
arpl
into
mov
cmp
jecxz
inc
int3
or
aam
(bad)
xor
(bad)
mul
cs
push
pushf
out
pop
dec
retf
je
(bad)
sub
jecxz
inc
int3
or
sub
outs
(bad)
cs
rol
test
stos
xor
cmp
int3
arpl
into
mov
das
test
(bad)
cmp
xor
cmp
mov
xor
out
ret
(bad)
adc
int3
or
int
dec
in
cmps
or
pop
mov
fs
cs
mov
shl
hlt
dec
mul
ror
xor
dec
stos
or
cmp
pushf
jecxz
shl
hlt
inc
jmp
(bad)
cs
pop
(bad)
cs
mov
shl
hlt
xchg
(bad)
push
test
cs
cmp
fwait
inc
dec
imul
pop
pop
mov
pop
ror
mov
xor
dec
sub
jmp
shl
pop
dec
push
xor
cli
cs
or
cmps
mov
into
out
ret
mov
es
or
int
dec
in
inc
mov
shl
hlt
xchg
(bad)
push
test
cs
cmp
fwait
jae
imul
pop
and
iret
cs
arpl
fwait
or
cmp
and
cmp
es
int3
and
add
cmc
cmp
dec
loopne
pop
int3
or
jb
cmp
pushf
stos
pop
lea
hlt
nop
push
inc
dec
cmp
or
inc
xchg
retf
or
dec
dec
mov
shl
hlt
(bad)
and
lds
int3
mov
xor
cmp
ret
(bad)
gs
or
ins
int3
xchg
xor
cmp
pop
xor
xor
mov
shl
mov
inc
int3
or
int
mov
xor
dec
in
ret
mov
cmp
xor
(bad)
cs
(bad)
icebp
sub
or
cdq
dec
mov
xchg
mov
xor
jle
dec
mov
dec
iret
retf
and
jne
xor
add
leave
pop
outs
int3
or
hlt
cmp
int3
mov
inc
js
(bad)
cs
mov
das
int3
or
int
dec
in
cmps
or
inc
pushf
stos
xchg
and
xor
xor
cmp
int3
jg
inc
int
or
mov
dec
xchg
xor
cmp
fwait
jecxz
fdiv
hlt
inc
jmp
mov
or
(bad)
cs
or
ins
int3
arpl
pusha
cmp
cmp
xor
(bad)
pop
jmp
mov
test
inc
mov
shl
hlt
nop
(bad)
std
std
cmp
dec
iret
retf
adc
hlt
(bad)
cs
hlt
cmp
int
(bad)
cmps
or
inc
pushf
stos
xchg
and
xor
xor
cmp
int3
jg
inc
int
jle
mov
dec
xchg
xor
cmp
fwait
jecxz
(bad)
hlt
inc
jmp
mov
or
(bad)
cs
or
ins
int3
arpl
in
hlt
cmp
xor
(bad)
pop
jmp
mov
test
inc
mov
shl
hlt
nop
(bad)
popa
(bad)
cmp
dec
iret
retf
adc
hlt
(bad)
cs
hlt
cmp
int
(bad)
cmps
or
inc
pushf
stos
xchg
and
xor
xor
cmp
int3
jg
jmp
xor
(bad)
cs
mov
dec
int3
or
int
mov
xor
dec
in
cmps
or
inc
pushf
stos
xchg
and
xor
xor
cmp
int3
jg
jmp
xor
(bad)
cs
popa
mov
test
movs
pop
outs
int3
jecxz
(bad)
hlt
inc
jmp
mov
cmps
or
mov
xor
cmp
cmp
xor
(bad)
pop
shl
inc
mov
mov
shl
hlt
nop
(bad)
cmp
cmp
dec
iret
retf
adc
hlt
(bad)
cs
hlt
cmp
int
(bad)
cs
mov
shl
hlt
(bad)
pop
fcmove
ret
dec
(bad)
cs
mov
shl
hlt
xchg
(bad)
or
cmp
xchg
loopne
call
int3
or
ins
dec
(bad)
lea
enter
or
stos
xor
cmp
int3
loop
sub
or
cmp
dec
stos
js
cmp
inc
enter
hlt
cmp
pushf
add
cmc
cmp
xor
jns
add
cmp
(bad)
cs
mov
xor
xchg
movs
dec
sar
shl
pop
dec
push
xor
mov
dec
test
dec
in
dec
jbe
cs
mov
int3
or
hlt
cmp
int3
sbb
adc
add
imul
inc
xchg
je
cmp
int
dec
mov
or
scas
daa
and
cs
ins
add
fisttp
add
int
(bad)
cs
mov
xor
xchg
mov
xor
stos
adc
cmp
pushf
xor
call
cs
mov
shl
hlt
xchg
inc
pop
jmp
xor
xchg
movs
hlt
hlt
rcl
int3
or
cs
dec
cmp
or
inc
adc
or
mov
xor
stos
sbb
cmp
pushf
cmp
pop
fcmovnb
cs
add
int3
or
out
ret
mov
sub
or
and
cmp
pushf
add
cmc
cmp
xor
jns
add
and
xchg
xor
cmp
mov
shl
hlt
xchg
movs
hlt
hlt
nop
push
inc
dec
cmp
js
inc
dec
or
scas
aas
clc
aad
int3
xchg
xor
cmp
mov
shl
hlt
xchg
movs
hlt
hlt
nop
or
cmp
or
inc
inc
iret
or
scas
daa
dec
retf
mov
xor
cmp
xor
scas
jle
dec
(bad)
mov
xor
mov
or
inc
mov
hlt
cmp
int3
loop
sub
and
stos
cs
mov
and
or
int
mov
xor
dec
in
xor
dec
stos
xor
cmp
pushf
arpl
stos
xor
cmp
pushf
jecxz
inc
int3
or
ins
add
into
or
hlt
cmp
inc
mov
xor
dec
stos
push
xchg
xor
cmp
jne
(bad)
cs
clc
bound
xor
jle
int3
or
(bad)
jp
xor
cmp
xor
jns
add
inc
enter
or
stos
mov
scas
imul
hlt
(bad)
mov
xor
scas
sub
scas
cmp
xor
push
xor
cli
cs
or
cmps
mov
inc
in
test
(bad)
stos
std
or
cs
mov
xor
xchg
movs
dec
cmps
cmp
xor
push
xor
mov
dec
idiv
ror
dec
jbe
cs
mov
das
int3
or
hlt
cmp
int3
loop
das
int3
or
cs
push
inc
lds
int3
inc
pop
xor
cmp
add
cmc
cmp
xor
cmp
mov
inc
ret
and
aas
scas
dec
fwait
mov
out
cmps
sub
xor
inc
mov
shl
hlt
nop
movs
repz
nop
pop
inc
dec
cmp
js
inc
inc
int
(bad)
lods
imul
cmp
pushf
arpl
stos
dec
hlt
cmp
pushf
cmp
fdiv
(bad)
cs
or
xor
pop
and
(bad)
cs
mov
xor
cmp
ret
(bad)
or
lods
hlt
cmp
pushf
popa
(bad)
sar
cmp
xor
cmp
xor
jns
add
inc
enter
or
stos
sub
mov
xor
cmp
ret
mov
int3
or
hlt
cmp
int3
add
call
dec
push
shl
pop
cmp
and
xor
xor
and
sbb
das
add
idiv
cmps
jnp
cmp
ret
(bad)
or
stos
cmp
cmp
int
(bad)
cmps
(bad)
jl
cmp
inc
mov
shl
hlt
xchg
inc
xchg
jmp
cs
mov
shl
hlt
xchg
(bad)
dec
popa
(bad)
cs
iret
shl
jbe
cmp
lock
pop
xor
cmc
cmp
jns
cmp
xor
cmp
mov
shl
hlt
dec
stos
leave
idiv
shl
pop
das
aad
or
lods
or
lods
sub
cmp
xor
xchg
inc
xchg
jmp
cs
mov
shl
hlt
xchg
(bad)
jmp
cmps
adc
pop
cmps
js
cmp
mov
or
fldcw
add
cmc
cmp
xor
cmp
cmp
js
hlt
inc
sahf
xor
cmp
xor
inc
sahf
xor
cmp
dec
push
cmp
xor
cmp
cmp
js
add
cmc
cmp
cmp
js
mov
or
ror
cmp
xor
cmp
dec
out
shl
add
cmc
xor
cmp
xor
mov
or
(bad)
movs
dec
jecxz
shl
pop
dec
push
xor
lods
jno
cmp
xor
mov
inc
mov
shl
hlt
xchg
movs
cld
hlt
xchg
es
in
int3
cld
and
dec
mov
add
jno
cmp
xor
mov
inc
mov
shl
hlt
xchg
movs
cld
hlt
xchg
es
mov
shl
hlt
xchg
movs
cld
hlt
xchg
es
mov
shl
hlt
xchg
movs
cld
hlt
xchg
es
enter
or
hlt
cmp
pushf
xor
call
jno
push
push
in
cdq
and
xor
call
(bad)
dec
ins
or
cs
pop
mov
cs
mov
cmp
jecxz
imul
fwait
cmp
(bad)
rol
and
mov
(bad)
cs
or
(bad)
scas
arpl
cs
iret
ret
xchg
xor
cmp
cmps
mov
dec
push
sub
mov
shl
mov
scas
js
(bad)
cs
dec
cmp
xor
cmp
jmp
or
cs
dec
daa
in
inc
outs
das
jmp
popf
addr16
pop
adc
cs
loopne
jmp
xor
cwde
jo
call
int3
or
mov
fwait
mov
cmps
push
dec
(bad)
in
dec
jmp
int3
popa
mov
lods
cmps
or
xchg
test
pop
das
sbb
pop
dec
retf
dec
out
jge
sbb
loopne
aas
dec
int3
or
iret
inc
dec
cmp
js
(bad)
cmps
adc
(bad)
cs
retf
int3
or
xchg
xchg
int3
mov
push
push
dec
(bad)
cs
cs
mov
leave
out
outs
int3
xsaves
int3
or
add
push
jmp
int3
xsaves
int3
xor
inc
or
push
dec
(bad)
and
xchg
ret
xchg
ror
or
and
lds
int3
hlt
jecxz
pop
mov
fbstp
lods
or
xor
mov
mov
imul
dec
xor
(bad)
lods
sub
xchg
hlt
xchg
xchg
and
mov
ss
dec
(bad)
outs
cmp
lds
int3
std
ret
dec
(bad)
das
mov
dec
(bad)
das
leave
xor
int3
loopne
ror
xor
int3
or
add
push
mov
push
push
int
(bad)
ror
jg
ins
int3
std
ret
dec
(bad)
ds
les
int3
mov
pop
out
or
scas
rcl
outs
int3
sbb
push
dec
(bad)
mov
fwait
xchg
and
std
ret
dec
(bad)
sub
sbb
cs
mov
xor
or
iret
inc
dec
aaa
cmps
or
dec
(bad)
sub
std
ret
dec
(bad)
es
loop
cs
mov
repnz
(bad)
scas
rcl
outs
int3
add
push
dec
(bad)
mov
cmp
xor
ret
dec
(bad)
das
mov
mov
cs
or
add
push
scas
rcl
outs
int3
or
sub
xchg
xchg
into
or
cs
std
ret
dec
(bad)
sub
or
out
and
mov
jp
or
scas
rcl
outs
int3
or
sub
or
cs
hlt
ret
dec
(bad)
ror
xor
int3
mov
repz
or
scas
rcl
outs
int3
dec
cs
int
(bad)
(bad)
and
push
std
ret
dec
out
dec
push
fbstp
sub
(bad)
cs
out
outs
int3
mov
sub
push
push
int3
or
vpmacsswd
push
iret
mov
int3
or
(bad)
and
push
int3
or
ror
jg
ins
int3
mov
push
push
dec
(bad)
sub
xchg
(bad)
cs
or
add
push
lods
leave
xor
int3
or
mov
or
sbb
int3
or
aam
xchg
in
mov
fucomi
or
cmps
cmp
dec
outs
pop
ins
int3
add
sub
mov
push
retf
hlt
jecxz
pop
mov
cs
mov
cs
ja
adc
or
cs
cmp
dec
retf
jno
int3
mov
ss
dec
(bad)
outs
daa
xor
sub
cmp
push
dec
(bad)
das
leave
xor
int3
loopne
ror
xor
int3
mov
adc
or
scas
rcl
outs
int3
dec
sub
std
retf
cs
or
cmps
add
cmps
mov
dec
out
xor
mov
mov
xor
aam
xchg
mov
out
int3
or
cmps
cmp
dec
outs
jnp
ins
int3
or
add
push
and
mov
mov
loop
int3
or
cmps
mov
enter
data16
int3
mov
sub
and
xor
or
(bad)
cs
pop
int3
or
cmp
sub
push
iret
mov
cmp
dec
imul
and
xor
dec
or
cs
dec
(bad)
das
leave
add
int3
mov
push
dec
(bad)
sub
push
inc
push
cmp
mov
dec
jbe
sub
fwait
xchg
into
loopne
scas
mov
ret
pop
call
dec
(bad)
scas
inc
ret
out
out
retf
mov
xchg
ret
mov
(bad)
lods
sub
dec
imul
mov
scas
mov
(bad)
pop
retf
mov
es
dec
(bad)
sub
retf
mov
aam
aaa
push
mov
dec
cs
psrld
push
dec
(bad)
ror
pop
push
outs
int3
stos
iret
mov
rcr
fistp
(bad)
cs
cs
mov
aam
aaa
push
mov
dec
cs
psrld
leave
pop
push
outs
int3
stos
push
rcr
sub
sti
out
imul
push
outs
int3
cmp
outs
daa
pop
jg
mov
(bad)
fldcw
retf
add
pop
xchg
jns
push
into
mov
mov
add
leave
jg
ins
int3
arpl
xchg
mov
das
cdq
xchg
or
cmps
or
xchg
mov
xchg
(bad)
push
push
(bad)
outs
push
ins
int3
cmp
sub
scas
push
jbe
(bad)
js
mov
xlat
mov
or
js
xchg
cwde
cs
test
mov
or
js
sbb
lea
scas
jo
dec
(bad)
js
jb
cs
test
mov
repz
jmp
cdq
and
and
js
mov
sbb
fcomp
xor
mov
mov
scas
stos
jbe
(bad)
mov
fst
ins
int3
int3
add
or
cs
shr
test
dec
and
dec
imul
or
outs
int3
or
lods
test
jnp
cs
mov
pop
js
(bad)
lods
test
sbb
cs
mov
test
(bad)
or
das
int3
or
mov
int3
add
mov
add
or
cs
sbb
adc
add
mov
inc
dec
je
dec
push
jo
mov
jne
(bad)
cs
clc
bound
int3
or
cs
dec
and
push
xor
std
ror
inc
dec
pop
jle
or
push
or
pop
sub
sub
or
ins
pop
cmp
xchg
(bad)
ds
xor
mov
mov
lods
xor
inc
int3
popa
mov
das
in
or
scas
daa
and
cs
hlt
mov
and
cdq
cs
hlt
ret
dec
(bad)
mov
mov
pop
cmp
cmp
and
shl
int
dec
pop
cmps
andps
cmps
sub
cmp
call
test
xor
aaa
movs
sbb
mov
cmps
cdq
out
imul
inc
int3
popa
(bad)
mov
mov
xchg
sar
dec
xor
hlt
cmp
hlt
rcr
push
dec
(bad)
movs
mov
sub
inc
dec
cmp
cdq
test
jns
adc
adc
cmp
xor
add
leave
jg
ins
int3
hlt
mov
cmps
hlt
cmp
fcom
jnp
out
inc
ret
xchg
jns
jle
movs
xchg
pop
cmp
mov
hlt
enter
cli
ror
or
pop
clc
add
push
or
ror
or
pop
in
jno
sti
or
ror
or
pop
rol
push
or
ror
or
pop
fadd
push
psubd
int3
or
and
lds
int3
add
inc
pop
stc
cmps
fdiv
add
or
cwde
mov
enter
movs
xchg
mov
enter
(bad)
in
ret
mov
int3
or
xchg
cmp
xor
cs
cmp
fcomp
dec
aam
loope
and
rcl
push
jle
cmps
xor
das
sub
mov
(bad)
cs
jle
and
cmp
add
sub
bound
int3
pop
das
xchg
nop
or
and
cmp
pop
dec
cmp
fnstcw
int3
pop
xchg
(bad)
jb
(bad)
cs
dec
aas
lods
add
dec
jnp
xchg
lods
es
iret
dec
aas
lods
and
dec
imul
cmp
dec
les
int
inc
(bad)
enter
inc
pop
ret
or
(bad)
jno
xor
cmp
cld
jo
(bad)
cs
or
sbb
hlt
cmp
leave
jg
ins
int3
mov
adc
jle
cmps
xor
inc
adc
lss
repz
(bad)
into
mov
sub
jle
cmps
xor
das
sub
mov
jecxz
and
rcl
jg
adc
(bad)
cs
jecxz
scas
lock
pop
sub
hlt
push
inc
(bad)
enter
inc
psrld
int3
or
scas
lock
aas
dec
aaa
shr
dec
(bad)
dec
jecxz
scas
lock
aas
lods
and
inc
adc
or
(bad)
enter
retf
cs
or
cs
jle
lods
add
dec
jnp
xchg
lods
es
int
inc
(bad)
enter
inc
dec
xlat
mov
xor
das
sub
aas
cmps
fmul
(bad)
cs
or
repnz
scas
lock
aas
lods
and
inc
adc
or
(bad)
iret
mov
sub
jle
cmps
xor
das
sub
mov
mov
icebp
cmc
(bad)
cs
jg
adc
or
cs
or
movs
cdq
sbb
fisttp
(bad)
aam
loope
cmps
enter
int3
or
cs
add
cdq
xor
cmp
push
push
in
cdq
and
and
xchg
js
hlt
ret
dec
(bad)
movs
mov
hlt
sub
dec
aaa
stc
cs
jecxz
cs
jge
scas
xor
les
int3
js
push
and
(bad)
cs
int
mul
mov
and
push
mov
mov
enter
push
int3
into
cmp
in
call
int
xchg
(bad)
pop
std
cmp
xchg
hlt
ret
dec
(bad)
and
fcom
and
(bad)
cs
or
pop
in
mov
cmps
adc
adc
pop
shl
stos
ret
mov
xor
(bad)
ret
xor
mov
int3
add
in
dec
aam
rol
inc
xor
cdq
dec
iret
push
ret
mov
leave
jns
lods
add
dec
fmul
shr
inc
(bad)
hlt
int
inc
(bad)
enter
or
hlt
mov
aas
cmps
fdiv
ret
dec
(bad)
lods
add
out
(bad)
inc
pop
fldcw
int
inc
(bad)
enter
or
cmps
enter
int3
or
or
push
lahf
xchg
mov
das
pop
xor
cmp
xchg
ret
inc
out
jg
jmp
push
(bad)
cs
pop
nop
(bad)
retf
ror
mov
xor
mov
icebp
or
cs
js
call
xor
add
int3
mov
pop
js
(bad)
sub
icebp
xor
(bad)
pop
fld
stos
aas
in
ror
dec
jo
(bad)
das
mov
aam
ror
jg
and
xor
xor
inc
adc
imul
or
cwde
pop
clc
sub
xor
cmp
add
and
xor
int3
pop
das
and
pop
mov
ret
mov
ret
mov
cmp
adc
jl
int3
pop
push
int3
into
adc
hlt
cmp
clc
push
xchg
mov
or
imul
add
in
call
xor
(bad)
and
xor
xor
lods
out
ror
test
int3
add
arpl
hlt
cmp
dec
clc
sub
xor
enter
sub
xor
and
push
pop
dec
(bad)
cs
(bad)
pop
sub
or
cwde
pop
clc
sub
xor
and
jle
dec
(bad)
cmps
pop
fistp
shl
hlt
ret
dec
(bad)
scas
jno
sbb
xor
enter
(bad)
cs
shl
add
hlt
cmp
leave
jg
ins
int3
adc
hlt
cmp
or
push
(bad)
mov
dec
stos
cmp
cmp
std
hlt
sub
movs
or
cs
pop
das
and
mov
das
or
mov
shl
sub
xor
and
cmp
xchg
adc
cmp
retf
int3
hlt
ret
dec
(bad)
lods
imul
mov
xor
(bad)
xor
cmp
and
cmp
and
cmp
or
movs
lods
imul
cmp
daa
dec
not
inc
rol
(bad)
into
retf
iret
pop
cmp
enter
xor
cmp
mov
or
cs
jns
scas
xor
les
int3
jns
cmps
adc
(bad)
ds
or
dec
aad
shl
inc
inc
in
int3
sbb
cs
lock
fmulp
or
(bad)
aam
cmp
xchg
mov
and
cmp
int3
or
movs
dec
xchg
shl
es
int3
or
stos
and
cmp
ret
lea
sub
mov
das
mov
or
(bad)
mov
(bad)
cs
mov
cmp
or
sub
int3
adc
hlt
cmp
xor
dec
mov
or
retf
or
test
aam
rol
xor
xor
push
int3
into
sbb
and
or
and
hlt
inc
fisub
hlt
cmp
xor
ret
cs
jns
ror
jg
ins
int3
mov
adc
cmp
mov
dec
mov
inc
mov
xor
dec
in
iret
pop
ret
or
cmps
pop
xchg
sbb
xor
dec
stos
push
aad
rol
addr16
dec
mov
dec
leave
fld
adc
cmp
xor
cmp
adc
cmp
xor
cmp
xor
mov
xor
fwait
adc
cmp
and
nop
cs
add
hlt
cmp
dec
mov
shl
jle
movs
dec
iret
sbb
xor
cmp
dec
xlat
sbb
xor
cmp
mov
or
push
call
xchg
movs
pop
mov
shl
retf
sahf
arpl
cs
cmp
daa
nop
cmp
mov
mov
cmp
or
aam
shl
xchg
icebp
xor
dec
and
cmp
int3
add
mov
or
push
out
mov
dec
mov
movs
or
cs
pop
das
mov
or
cmps
dec
mov
pop
and
(bad)
cs
mov
adc
or
movs
dec
jmp
shl
add
cs
loop
cs
jg
scas
mov
(bad)
and
(bad)
cs
loop
das
int3
or
in
rol
ret
or
lods
es
dec
push
cmovle
or
(bad)
lods
popa
out
sbb
xor
dec
fwait
sub
cmp
inc
sti
(bad)
scas
hlt
or
(bad)
into
mov
cs
jecxz
scas
hlt
or
(bad)
enter
mov
jecxz
scas
hlt
or
ror
jg
ins
int3
add
mov
or
push
arpl
xor
inc
stos
outs
aad
ror
add
sub
loop
cs
jle
movs
enter
int3
or
xchg
retf
cmp
dec
xor
ret
add
hlt
cmp
xor
aaa
movs
fild
and
xor
mov
dec
cmps
fs
(bad)
and
fs
push
int3
into
cmp
sar
ror
or
scas
lock
cs
or
pop
in
sti
adc
or
cs
jle
scas
lock
int3
or
pop
fmul
(bad)
cs
jle
scas
lock
or
pop
iret
dec
sub
ret
mov
cmp
or
bound
rol
stos
aas
in
rcr
cmp
jns
sbb
xor
mov
xor
inc
jmp
cmp
mov
in
ror
adc
hlt
cmp
or
or
or
arpl
add
aam
rol
(bad)
ror
sub
xor
cmp
enter
sbb
ret
dec
mov
dec
mov
xor
(bad)
and
xor
xor
lods
out
ror
test
int3
add
add
hlt
cmp
push
push
in
cdq
and
and
xchg
js
sbb
rcr
loopne
mov
or
imul
dec
push
sub
(bad)
xchg
fisttp
(bad)
cs
scas
inc
inc
xor
in
cs
xchg
xchg
mov
jle
int3
or
(bad)
mov
xchg
mov
jle
int3
or
(bad)
cld
dec
mov
repz
inc
int3
or
xor
add
or
inc
or
cwde
cdq
cld
std
push
out
mov
dec
dec
cmp
daa
add
cmp
inc
push
cmp
mov
je
fild
int3
cld
mov
cmps
mov
add
or
(bad)
int3
or
movs
iret
add
jnp
xor
mov
mov
(bad)
and
(bad)
adc
(bad)
cs
dec
imul
das
push
adc
jmp
mov
outs
mov
or
cwde
(bad)
dec
jmp
mov
dec
icebp
ret
mov
outs
mov
inc
imul
enter
xor
retf
mov
dec
jmp
lods
xor
mov
dec
dec
cmp
jmp
ss
cs
or
sub
aas
cmps
push
and
cwde
iret
xor
int3
or
push
mov
cmova
or
cmp
lods
lahf
hlt
cmp
or
cs
sbb
xchg
fcomi
dec
shl
mov
or
dec
dec
xor
dec
jbe
sub
add
ret
mov
(bad)
cs
or
cwde
mov
cwde
jo
ret
inc
out
xchg
jle
pop
nop
movs
mov
mov
(bad)
cs
dec
imul
add
xor
(bad)
cs
cs
cli
inc
out
dec
inc
adc
or
and
jb
or
push
or
(bad)
inc
ror
je
cmps
adc
and
mov
dec
in
xchg
push
pushf
out
pop
dec
retf
je
out
int3
jecxz
jg
or
xchg
aad
xor
enter
in
(bad)
cs
dec
stos
xor
cmp
inc
int3
dec
pop
rcr
les
cmp
bound
cs
cmp
add
cs
mov
ds
std
dec
(bad)
in
dec
jmp
cdq
and
jae
mov
in
xor
int3
popa
(bad)
sar
cli
xchg
cs
push
call
sbb
xchg
jge
jmp
cmps
or
inc
iret
popa
mov
cmp
jecxz
jl
or
dec
cmc
cmp
mov
movs
mov
inc
push
int3
cmp
lds
add
call
in
dec
retf
xlat
jle
dec
das
cmp
idiv
clc
or
fldcw
add
dec
jbe
cs
add
xor
sbb
jle
jge
jle
js
push
xchg
cs
pop
das
sbb
imul
dec
in
inc
int3
or
jnp
out
inc
ret
xchg
jns
mov
pop
xor
add
inc
cs
or
movs
or
cs
mov
and
xchg
cs
add
xor
mov
std
retf
sub
je
retf
cld
and
cmps
or
(bad)
or
cs
dec
retf
cmps
or
mov
das
int3
jle
cmps
punpcklwd
mov
xor
js
sbb
mov
into
arpl
into
mov
xchg
(bad)
xor
cs
(bad)
cmp
dec
imul
sbb
int3
jg
int3
or
jno
push
push
in
cdq
and
pushf
pop
nop
xchg
jp
rcl
inc
repz
inc
int3
lods
movs
mov
cs
popa
ret
inc
int3
popa
mov
jle
(bad)
jmp
shl
jle
pop
or
jmp
mov
dec
jmp
cmps
or
cmps
or
xor
pop
fdiv
mov
call
(bad)
out
pop
(bad)
cs
retf
xchg
retf
pop
xor
add
ret
inc
out
xchg
jge
pop
dec
pop
(bad)
int3
adc
push
cmp
pop
sbb
retf
add
sub
or
div
push
cmp
(bad)
in
inc
pop
cmp
jle
inc
(bad)
jmp
cs
xchg
cs
arpl
into
mov
das
test
sbb
cmc
daa
sbb
cwde
enter
stc
jmp
cs
xchg
cs
mov
es
xor
shl
add
repnz
add
sti
dec
imul
add
rcr
or
dec
lahf
or
lods
or
cwde
jo
ret
inc
out
xchg
jge
pop
dec
jae
xor
mov
addr16
int3
or
(bad)
cli
pop
(bad)
cs
cmp
(bad)
jno
neg
sbb
mov
dec
iret
iret
imul
sub
xlat
jge
or
in
in
dec
jnp
push
cdq
jne
enter
mov
or
jo
cmp
shr
test
jmp
dec
outs
sub
dec
outs
das
cs
outs
and
inc
jbe
mov
int3
mov
cs
or
inc
shl
test
push
fmul
mov
stos
int3
or
or
add
outs
into
add
mov
add
mov
enter
lods
or
(bad)
imul
mov
lods
mov
dec
in
cs
mov
ror
jle
movs
mov
enter
dec
imul
in
(bad)
shr
add
imul
jno
leave
cli
inc
out
ror
add
jbe
sub
cmove
or
xor
inc
push
xor
mov
inc
rol
test
imul
jo
inc
pop
iret
and
out
(bad)
movs
retf
stos
das
int3
or
cdq
cdq
jmp
or
inc
das
cmps
add
add
mov
dec
imul
or
dec
retf
and
shl
or
xchg
int3
ret
movs
add
fld
cs
dec
retf
and
iret
movs
cdq
add
cdq
sahf
add
dec
dec
and
xchg
ret
pop
fwait
push
mov
mov
push
xchg
cwde
test
pop
xor
or
push
mov
pop
fwait
push
pop
les
push
mov
pop
fwait
push
mov
pop
fwait
push
outs
pop
fwait
push
mov
pop
fwait
push
pop
push
fwait
push
mov
mov
push
xchg
sbb
test
pop
mov
cmp
or
push
mov
pop
fwait
push
pop
les
pop
sub
pop
adc
push
mov
pop
fwait
push
dec
pop
fwait
push
mov
(bad)
cmp
lods
fwait
push
mov
int3
or
cs
fwait
push
mov
lock
(bad)
mov
int3
fwait
dec
ss
fwait
push
mov
pop
fwait
dec
jle
fwait
push
mov
pop
fwait
inc
in
enter
cmc
rcl
fwait
mov
mov
pop
fwait
inc
push
int3
fwait
push
mov
pop
fwait
cmps
mov
stos
loop
aas
xor
(bad)
mov
xchg
mov
xor
mov
pop
iret
mov
sub
dec
pop
fwait
push
mov
mov
push
inc
enter
pop
push
push
mov
xor
push
mov
pop
fwait
push
xchg
cwde
test
mov
or
cmp
jle
fwait
push
mov
pop
fwait
push
fnstcw
fwait
push
mov
pop
fwait
push
jbe
fwait
push
mov
xor
cld
fwait
push
mov
pop
fwait
push
int3
ds
push
mov
mov
push
lods
xor
push
mov
pop
fwait
push
xchg
sbb
test
pop
sbb
pop
fwait
push
pop
or
cmp
jle
fwait
push
mov
pop
fwait
push
fnstcw
fwait
push
mov
pop
fwait
push
jbe
fwait
push
mov
jns
push
pop
cld
fwait
push
mov
pop
fwait
push
int3
ds
push
mov
pop
fwait
push
dec
and
enter
out
inc
ret
xchg
jns
push
iret
movs
mov
mov
imul
mov
xchg
add
mov
xor
add
cmp
sbb
test
add
int3
or
retf
int3
or
xchg
jae
(bad)
cmp
cmps
mov
dec
imul
pop
das
cmp
das
inc
cmp
cmp
leave
dec
jnp
mov
call
out
inc
popa
int3
or
sbb
cmp
or
int3
or
and
cmp
xor
repnz
out
inc
dec
pop
mov
repnz
in
inc
pop
cmp
pop
mov
sbb
int
xchg
jp
enter
out
in
sbb
cwde
enter
int3
or
pop
fadd
enter
jno
and
rol
imul
inc
pop
cmp
push
cs
or
ds
das
leave
or
and
cmp
inc
rol
ficomp
xchg
aam
fist
cmps
or
dec
test
xchg
(bad)
jle
(bad)
cs
iret
jecxz
xchg
sub
cmp
xor
sbb
mov
add
dec
add
cdq
jne
enter
mov
push
lahf
pop
nop
nop
jae
(bad)
pop
inc
sti
neg
inc
int
mov
or
xchg
ror
out
popf
add
or
xlat
shl
or
in
inc
pop
sub
int3
or
sbb
or
mov
mov
hlt
cmp
(bad)
stos
ror
(bad)
cs
mov
lds
mov
in
cmp
mov
adc
jbe
jns
mov
vpsubb
outs
xchg
mov
dec
icebp
iret
add
ds
(bad)
cmps
pop
lods
cs
rol
sub
mov
cs
dec
das
jle
loop
cs
mov
ss
ret
jp
int3
add
icebp
inc
(bad)
cs
rol
imul
sar
jno
(bad)
pop
fmul
setae
mov
cs
dec
cmp
adc
xor
(bad)
cmps
adc
adc
push
sbb
dec
dec
aas
sub
jp
int3
or
div
(bad)
pop
mov
mov
and
mov
int3
add
int3
cmp
push
add
cld
or
cmp
jno
mov
inc
dec
pop
(bad)
mov
(bad)
cs
jbe
and
dec
in
ret
mov
into
stc
inc
sbb
jne
(bad)
cmps
dec
scas
xchg
jno
(bad)
cmps
adc
ret
dec
(bad)
jle
push
mov
int3
mov
and
jp
int3
add
pop
xor
cs
rol
imul
sar
jno
(bad)
pop
fmul
setae
mov
cs
dec
xor
adc
cmp
shl
or
dec
cmp
mov
cs
sbb
pcmpgtd
jno
(bad)
sub
int3
xor
icebp
iret
add
cdq
in
int3
inc
pop
push
into
jno
(bad)
movs
rcr
ins
int3
or
inc
aam
adc
mov
cs
mov
dec
cmp
jp
int3
or
jno
(bad)
cmps
shl
push
and
mov
dec
data16
ss
sti
xor
inc
dec
adc
and
dec
test
add
inc
idiv
ror
iret
inc
int3
popa
mov
(bad)
cs
dec
cmp
jecxz
addr16
or
sub
mov
mov
out
das
cdq
test
(bad)
cmps
cmp
and
xor
mov
aas
data16
or
out
mov
add
mov
ss
or
jge
pop
jns
lods
add
dec
out
shl
add
leave
jg
ins
int3
mov
fcmovbe
adc
xchg
addr16
cs
dec
stos
and
cmp
inc
int
fld
inc
movs
ds
add
es
or
adc
inc
int3
inc
jmp
pop
hlt
cmp
xor
(bad)
call
loop
add
or
cwde
mov
jge
sub
les
adc
in
fistp
dec
inc
lahf
cli
shl
hlt
cmp
mov
sti
es
hlt
cmp
int3
jecxz
gs
or
cmp
(bad)
pop
ret
sub
hlt
cmp
xor
cmc
mov
xor
mov
cmp
test
inc
mov
xor
xchg
(bad)
mov
sti
out
fiadd
lods
cmps
or
movs
or
mov
cmp
push
(bad)
cs
add
hlt
cmp
or
mov
je
or
sbb
int3
xchg
xor
cmp
or
cs
arpl
xchg
mov
cmp
and
(bad)
cs
hlt
jb
xor
cmp
cmp
xor
mov
mov
xchg
inc
adc
test
inc
mov
shl
hlt
xchg
(bad)
ds
(bad)
cs
int
(bad)
int3
or
aaa
idiv
rcr
dec
stos
xor
cmp
pushf
arpl
cs
mov
adc
or
ror
jg
ins
int3
arpl
mov
scas
jecxz
dec
(bad)
mov
xor
cs
or
ror
(bad)
cs
arpl
push
adc
inc
into
or
scas
and
(bad)
cs
mov
jp
push
pushf
out
pop
dec
retf
popf
pop
xchg
js
xor
xlat
cmp
xor
add
leave
jg
ins
int3
mov
and
test
mov
int3
arpl
cs
or
xor
sar
or
cmps
cmp
mov
das
int3
jle
cmps
mov
dec
(bad)
int
dec
jmp
cmps
or
sar
or
sar
or
jno
push
push
in
cdq
and
jae
lock
mov
aas
das
xor
add
mov
or
inc
int
cmp
hlt
mov
xor
sar
or
lods
or
cwde
jae
pop
dec
retf
fwait
mov
pusha
ins
jp
(bad)
std
repz
jmp
inc
dec
sar
jle
sar
jecxz
cs
or
push
call
pop
js
loope
xchg
scas
or
enter
adc
xchg
inc
retf
cmps
or
pop
shl
es
(bad)
cs
add
pop
enter
sti
hlt
mov
xor
sar
jle
sar
or
daa
or
retf
sar
or
pop
or
(bad)
scas
and
mov
and
(bad)
cs
cmp
outs
xchg
ret
inc
out
inc
ret
nop
movs
mov
ins
dec
imul
xor
imul
ja
cs
shr
int3
cld
and
or
xchg
inc
aad
lds
cmps
or
pop
shl
es
(bad)
cs
add
pop
enter
lock
cmps
or
pop
fdiv
mov
and
(bad)
cs
add
pop
shl
shl
(bad)
cs
cmp
(bad)
jmp
dec
sub
and
sub
add
imul
cdq
out
pop
dec
retf
popf
pop
xchg
jns
lods
int
mov
add
int3
or
cs
pop
das
leave
mov
(bad)
cmps
mov
data16
dec
(bad)
pop
mov
mov
inc
repz
(bad)
inc
int3
imul
mov
inc
add
int3
or
movs
push
ins
int3
jecxz
push
sbb
daa
or
ret
pop
or
shl
or
repnz
dec
mov
inc
dec
cmp
ret
mov
ret
mul
inc
retf
call
aam
cs
pop
iret
in
cdq
and
pushf
pop
xchg
jns
jle
movs
xchg
pop
add
inc
mov
rol
out
in
inc
pop
cmp
lock
aas
pop
adc
dec
fmulp
rcl
mov
pop
dec
(bad)
in
dec
jnp
int
sub
mov
cs
repz
out
into
loopne
imul
cmc
mov
or
scas
lock
cmp
or
xchg
add
cmp
xor
dec
fmulp
rcl
cs
int3
inc
inc
xor
cs
add
pop
rol
cmp
jecxz
ins
int3
or
add
inc
rol
(bad)
daa
add
out
daa
or
imul
lods
cs
push
cdq
jne
enter
mov
ds
pop
nop
movs
xchg
add
mov
cmp
cmps
or
mov
mov
dec
jmp
les
and
test
int3
add
int3
or
fsub
sbb
inc
fidivr
add
sub
mov
pop
inc
pmuludq
jle
pop
sub
imul
mov
xor
adc
cmp
(bad)
or
cs
cld
cmps
sbb
aas
xchg
(bad)
or
cs
sub
cmp
out
or
cmp
adc
mov
nop
inc
xchg
aam
cs
jecxz
push
fsubr
imul
jo
xor
adc
movs
dec
imul
cdq
jne
enter
mov
cs
or
xchg
lea
(bad)
jge
pop
jns
mov
jecxz
cmp
(bad)
fidiv
cmc
cmp
dec
scas
sub
xor
(bad)
cmps
cmp
aaa
cmps
or
cmp
jle
(bad)
dec
sti
cmp
dec
iret
iret
cmps
lar
retf
cmp
(bad)
icebp
add
cs
mov
shl
hlt
(bad)
pop
rcr
mov
(bad)
pop
or
loopne
int3
or
pop
fsub
dec
ins
int3
or
adc
cmp
je
(bad)
cs
cld
(bad)
(bad)
xor
cmp
xor
cmp
sar
shl
cmp
hlt
cmp
inc
mov
cs
cmps
dec
das
mov
dec
idiv
shl
mov
arpl
or
enter
shl
hlt
dec
call
enter
and
xchg
int3
xor
cmp
add
add
cmp
inc
retf
xor
adc
or
es
sahf
or
xor
(bad)
aam
jecxz
jecxz
hlt
inc
jmp
cmp
jecxz
imul
inc
jmp
cmp
and
sub
mov
es
sub
mov
cs
or
xor
sbb
sar
cmp
xor
dec
imul
inc
jmp
jle
int3
or
mov
repnz
aam
jbe
(bad)
cli
dec
(bad)
cs
(bad)
cs
xchg
xor
sahf
cmp
cmc
cmp
xor
das
sbb
or
jg
test
(bad)
fldcw
add
idiv
cmps
or
ret
imul
jle
int3
or
mov
repnz
aam
jbe
inc
cmp
test
xor
das
or
or
scas
sbb
dec
(bad)
sar
cmp
xor
xlat
imul
inc
jmp
jle
int3
or
mov
repnz
aam
jbe
inc
cmp
test
xor
das
lds
add
cmp
dec
stos
or
cmp
inc
int
mov
or
xchg
(bad)
or
cs
cld
lods
ss
mov
cs
mov
cs
or
xor
hlt
cmp
fwait
arpl
icebp
mov
nop
(bad)
dec
dec
(bad)
cs
iret
xlat
sar
dec
(bad)
movs
dec
idiv
shl
pop
scas
movlps
jle
bound
cmp
sub
mov
cs
or
xor
sbb
sar
cmp
xor
scas
push
or
arpl
icebp
mov
cmp
and
sub
mov
es
sti
out
fiadd
das
and
(bad)
or
cs
cld
lods
ss
mov
ins
int3
hlt
jb
xor
cmp
out
(bad)
cs
iret
iret
inc
iret
aam
xor
das
cmp
add
std
(bad)
or
xchg
(bad)
or
cs
cld
lods
ss
mov
cs
mov
cs
or
xor
hlt
cmp
fwait
arpl
icebp
mov
nop
(bad)
jb
(bad)
cs
iret
xlat
scas
cmp
jmp
ins
int3
or
iret
or
mov
repnz
inc
xor
test
inc
mov
shl
hlt
nop
(bad)
pop
dec
(bad)
cs
mov
shl
hlt
xchg
sar
hlt
cmp
pushf
arpl
lock
xchg
(bad)
mov
(bad)
cs
iret
out
xchg
dec
(bad)
cs
(bad)
cs
xchg
xor
dec
icebp
ret
jecxz
ins
int3
or
int3
or
mov
repnz
movs
jno
cmp
xor
adc
jns
dec
test
int3
mov
ds
test
int3
mov
cs
or
xor
sbb
sar
cmp
xor
sub
inc
jmp
mov
jne
(bad)
cs
xchg
xor
dec
icebp
ret
arpl
mov
cmp
and
test
int3
mov
es
test
int3
mov
cs
or
xor
sbb
sar
cmp
xor
xor
inc
jmp
cmp
add
cmc
cmp
xchg
sbb
das
popf
mov
(bad)
lods
or
das
mov
(bad)
or
cs
cld
lods
ss
mov
ins
int3
hlt
jb
xor
cmp
jle
(bad)
cs
iret
iret
xchg
ins
push
(bad)
cs
dec
stos
or
cmp
inc
int
jno
or
xchg
(bad)
or
cs
cld
lods
ss
mov
ins
int3
hlt
jb
xor
cmp
mov
(bad)
cs
iret
iret
(bad)
test
jne
(bad)
cs
xchg
xor
dec
icebp
ret
jecxz
ins
int3
or
int3
or
mov
repnz
movs
jno
cmp
xor
adc
jns
test
int3
mov
ds
jbe
cs
(bad)
mov
int3
or
hlt
cmp
int3
loop
das
int3
or
stos
int3
or
ror
mov
je
or
lods
imul
jnp
xor
les
test
jnp
xor
les
ret
mov
jle
int3
or
mov
repnz
in
lods
pop
dec
(bad)
jne
(bad)
cs
mov
ret
xor
or
mov
adc
jno
(bad)
shl
pop
scas
je
dec
(bad)
mov
xor
lea
(bad)
lods
or
dec
fsubp
sti
dec
call
xor
inc
xchg
je
cmp
dec
or
cs
mov
fwait
cmp
cmp
xor
mov
xor
stos
xor
cmp
pushf
arpl
mov
ffreep
loop
(bad)
cs
(bad)
cs
xchg
xor
dec
icebp
ret
arpl
fwait
xor
cmp
and
xchg
int3
mov
es
sti
out
fiadd
das
sub
(bad)
or
cs
cld
lods
ss
mov
ins
int3
hlt
jb
xor
cmp
out
dec
(bad)
cs
iret
iret
(bad)
adc
cs
(bad)
cs
xchg
xor
dec
icebp
ret
arpl
into
mov
cmp
and
xchg
int3
mov
es
mov
xor
inc
cs
or
stos
cmp
cmp
inc
mov
shl
hlt
(bad)
stos
jo
cmp
ret
mov
xor
dec
stos
and
cmp
inc
sti
(bad)
fiadd
movs
int
(bad)
movs
mov
dec
stos
xor
cmp
and
mov
int3
hlt
cmp
ret
(bad)
mov
int3
or
in
dec
call
int3
ret
(bad)
cs
mov
shl
hlt
enter
(bad)
cs
mov
shl
hlt
dec
stos
and
cmp
xor
inc
xchg
aad
cs
mov
shl
hlt
xchg
mov
retf
mov
xor
sti
das
int3
jle
cmps
or
xchg
jb
cmp
dec
int
pop
int3
or
int3
or
rcr
cmp
inc
pop
fidiv
idiv
jle
push
cld
cs
xchg
xor
cmp
mov
add
inc
mov
shl
hlt
cmp
xor
sar
cmp
xor
cmp
outs
sbb
das
cmc
repz
lods
or
jg
mov
(bad)
fldcw
add
idiv
movs
dec
mov
shl
add
push
(bad)
cs
(bad)
cs
xchg
xor
dec
icebp
ret
arpl
fwait
xor
cmp
and
clc
cs
mov
es
clc
cs
mov
cs
or
xor
sbb
sar
cmp
xor
addr16
or
jecxz
adc
or
int3
or
mov
repnz
aam
jbe
inc
cmp
test
xor
das
push
repz
lods
or
cmp
and
cld
cs
mov
adc
(bad)
cmp
xor
cmp
mov
xchg
(bad)
int3
cld
cmp
dec
iret
retf
cmps
dec
repz
xor
pop
and
cmp
xor
lock
cmp
and
clc
cs
mov
es
stc
cs
mov
cs
or
xor
sbb
sar
cmp
xor
iret
adc
or
jecxz
adc
or
int3
or
mov
repnz
aam
jbe
inc
pop
aad
xor
das
int
or
lods
or
dec
fsubp
sti
dec
call
int3
mov
cs
or
xor
sbb
sar
cmp
xor
jg
int3
or
arpl
lock
cmp
and
stc
cs
mov
es
stc
cs
mov
cs
or
xor
sub
popa
repnz
xchg
scas
or
cs
cld
ds
mov
shl
hlt
nop
inc
repnz
cs
jecxz
adc
or
jecxz
adc
or
int3
or
mov
repnz
aam
jbe
inc
xchg
aad
xor
das
gs
lods
or
inc
shr
stc
cs
mov
cs
or
xor
sbb
sar
cmp
xor
out
int3
or
jecxz
adc
or
int3
or
mov
repnz
aam
jbe
inc
cmp
test
xor
das
aad
or
lods
or
das
cdq
icebp
or
xchg
(bad)
or
cs
cld
lods
ss
mov
cs
mov
cs
or
xor
hlt
cmp
fwait
arpl
icebp
mov
nop
(bad)
outs
ss
cs
iret
xlat
inc
in
test
xor
das
popf
icebp
or
lods
or
dec
fidivr
in
dec
stos
jo
cmp
inc
int
dec
icebp
or
xchg
(bad)
or
cs
cld
lods
ss
mov
ins
int3
hlt
jb
xor
cmp
dec
ss
cs
iret
iret
inc
rcl
test
xor
das
inc
icebp
or
lods
or
das
add
(bad)
or
cs
cld
lods
ss
mov
ins
int3
hlt
jb
xor
cmp
xchg
(bad)
cs
iret
iret
inc
(bad)
aad
xor
das
sbb
or
lods
or
dec
fsubp
sti
dec
call
int3
mov
cs
or
xor
sbb
sar
cmp
xor
retf
adc
or
xchg
xor
cmp
mov
shl
hlt
xchg
inc
into
aad
cs
jecxz
adc
or
jecxz
adc
or
int3
or
mov
repnz
aam
jbe
inc
cmp
test
xor
das
in
or
lods
or
dec
fsubp
sti
dec
call
int3
hlt
jb
xor
cmp
jle
(bad)
cs
iret
iret
(bad)
mov
add
cs
xchg
xor
dec
icebp
ret
arpl
into
mov
cmp
and
sti
cs
mov
es
sti
cs
mov
sub
xor
sbb
cs
pop
dec
xchg
xor
cmp
fwait
arpl
repz
nop
(bad)
repnz
(bad)
cs
iret
xlat
(bad)
shl
(bad)
cs
(bad)
cs
xchg
xor
dec
icebp
ret
arpl
into
mov
cmp
and
sti
cs
mov
movs
aad
ins
int3
hlt
jb
xor
cmp
out
(bad)
cs
iret
iret
cmps
cmp
aaa
cmps
or
daa
adc
int3
or
mov
repnz
aam
jbe
inc
cmp
test
xor
das
shl
or
lods
or
das
xchg
test
(bad)
cs
cld
lods
ss
mov
cs
mov
cs
or
xor
hlt
cmp
fwait
arpl
icebp
mov
nop
(bad)
push
(bad)
cs
iret
xlat
inc
sbb
test
xor
das
cdq
test
lods
cmps
or
movs
or
cs
mov
and
jmp
int3
add
idiv
scas
or
cs
hlt
jb
xor
cmp
jp
(bad)
cmps
or
cmp
cmp
fwait
pop
cmp
xor
das
mov
jns
cmp
xor
out
sbb
or
fwait
xor
cmp
and
lock
xor
sub
cmp
sti
or
movs
dec
out
shl
push
cdq
jne
enter
mov
sub
or
jns
push
jmp
pop
xor
add
mov
mov
mov
(bad)
and
cmp
sbb
int3
xchg
xor
cmp
(bad)
std
cs
popa
mov
mov
shl
hlt
xchg
inc
int
(bad)
scas
and
aaa
shl
mov
xor
das
inc
dec
cmp
leave
jns
inc
int3
arpl
repz
scas
adc
inc
int
(bad)
scas
and
aaa
shl
arpl
repnz
scas
hlt
adc
inc
daa
xlat
test
movs
or
cs
jecxz
fidiv
hlt
inc
jmp
add
enter
mov
mov
or
jge
pop
js
fsub
call
cmp
dec
stos
dec
idiv
rol
inc
mov
cmp
int3
add
pop
retf
inc
into
int
inc
mov
mov
dec
sub
or
cs
add
hlt
cmp
or
sbb
mov
dec
call
and
lock
adc
mov
cmp
push
lock
add
hlt
cmp
jns
cmp
xor
mov
int3
or
or
hlt
cmp
cwde
or
ins
inc
sahf
pop
shl
hlt
dec
(bad)
in
dec
jmp
int3
or
mov
mov
das
cmp
or
cmps
dec
jnp
shl
hlt
jb
xor
cmp
retf
cs
pop
iret
movs
inc
jg
shl
xchg
pop
xor
cmp
cwde
or
ins
inc
sahf
dec
shl
hlt
scas
sbb
(bad)
es
cs
mov
xor
lods
cmps
or
push
jecxz
pop
int3
or
std
repz
jmp
int3
pop
das
inc
cmc
or
inc
enter
inc
mov
xor
xchg
inc
arpl
test
movs
mov
lds
int3
mov
(bad)
and
cmp
mov
ds
cs
retf
cs
into
or
(bad)
fdivp
cmp
movs
shufps
xchg
xor
cmp
mov
xor
xchg
mov
xor
cmp
xor
cmp
xor
cmp
call
jle
xor
push
inc
mov
xor
into
out
mov
ds
cs
retf
cs
or
inc
ins
xlat
test
inc
mov
shl
hlt
xchg
(bad)
sbb
(bad)
cs
repz
inc
int3
dec
stos
js
cmp
pushf
xchg
xor
cmp
mov
cs
jecxz
shl
dec
stos
dec
idiv
ror
(bad)
dec
int3
or
stos
je
cmp
pushf
jecxz
push
int3
or
int3
inc
xchg
xor
cmp
or
xchg
mov
in
dec
stos
mov
int3
add
int
(bad)
cs
int3
inc
(bad)
xor
cmp
int3
mov
xor
cmp
mov
jecxz
shl
or
scas
and
scas
cs
xchg
xor
cmp
jmp
dec
stos
push
xchg
xor
cmp
or
cmps
or
shl
hlt
xchg
inc
int3
jecxz
sbb
or
out
ret
(bad)
or
fwait
idiv
shl
hlt
cs
mov
mov
or
sar
cmp
xor
icebp
mov
scas
push
adc
mov
xor
jmp
or
add
int3
loopne
cmps
xor
aas
cmps
or
cmp
jle
ins
int3
jecxz
sbb
or
(bad)
xor
int3
jecxz
sbb
or
cmps
idiv
ror
add
leave
jns
daa
pop
jg
inc
int3
jae
cs
repz
mov
xor
cmp
mov
or
(bad)
call
cs
cld
and
xor
(bad)
cs
mov
shl
hlt
xchg
jge
into
repz
popa
mov
test
inc
mov
shl
hlt
xchg
(bad)
movs
mov
ror
retf
adc
hlt
(bad)
cs
idiv
ror
cmp
xor
add
fimul
cmp
dec
in
add
or
dec
scas
pop
shl
hlt
(bad)
mov
xor
inc
clc
or
scas
and
cs
pop
das
test
int3
hlt
jb
xor
cmp
push
cmp
xor
das
xchg
dec
(bad)
movs
dec
xchg
cmp
xor
shl
push
cdq
jne
leave
ret
cs
and
and
xchg
js
sbb
aam
aas
fldcw
add
inc
int3
cmp
jecxz
sbb
stos
adc
push
cmp
cs
leave
mov
pop
fsub
or
stos
adc
int3
or
stos
adc
int3
or
cdq
mov
enter
(bad)
inc
mov
enter
dec
push
and
sbb
or
std
retf
inc
push
ror
enter
add
or
dec
jmp
aam
dec
fimul
(bad)
lods
or
cmp
xor
or
xchg
(bad)
sahf
cmp
xor
and
cmp
pushf
jecxz
pop
int3
or
pop
fadd
imul
sub
add
jnp
xchg
or
or
cmps
xor
aas
cmps
or
cdq
mov
dec
push
push
enter
(bad)
inc
mov
xlat
sub
int3
or
xor
lods
cs
cmps
or
cmp
or
add
das
xchg
dec
(bad)
mov
and
imul
int3
pop
das
pop
std
or
movs
mov
cwde
jo
ret
inc
out
jg
ror
mov
lahf
pop
nop
movs
xchg
add
ret
push
hlt
cmps
xor
aas
cmps
or
inc
xchg
sub
cmp
or
scas
cmp
xchg
sub
cmp
mov
into
xor
xchg
inc
stos
xlat
test
and
call
daa
or
inc
mov
or
cmps
xor
aas
cmps
or
fwait
or
cmp
and
repz
mov
es
or
mov
cmp
jecxz
push
int3
or
nop
or
fldcw
add
hlt
cmp
daa
push
add
mov
cs
mov
xor
xchg
mov
xor
mov
cs
adc
cld
fcomp
or
xor
xchg
sbb
or
add
pop
shl
jb
sub
cmp
mov
or
cmps
xor
and
xor
sub
daa
scas
imul
xchg
push
pushf
out
pop
dec
retf
je
out
int3
jecxz
add
or
jb
loope
jmp
enter
icebp
xor
dec
call
lahf
arpl
das
int3
or
inc
cld
or
cmps
adc
mov
das
int3
jle
cmps
or
cmps
push
or
shl
mov
movs
pop
sbb
das
jns
or
lods
or
jg
lods
or
fldcw
add
hlt
cmp
xor
aaa
cmps
or
icebp
mov
dec
stos
int3
jmp
rcr
inc
jmp
jle
int3
or
mov
repnz
aam
jbe
inc
cmp
test
inc
mov
into
xor
xchg
(bad)
into
aas
(bad)
cs
iret
iret
scas
or
mov
sbb
int3
or
mov
repnz
aam
jbe
(bad)
push
(bad)
cs
(bad)
cs
xchg
xor
sahf
xchg
sub
cmp
push
sbb
jp
sub
cmp
xchg
hlt
cs
mov
ds
hlt
cs
mov
cs
or
xor
pop
scas
fisubr
(bad)
mov
xor
mov
or
lods
or
scas
sbb
dec
(bad)
mov
xor
test
or
dec
fidivr
in
dec
stos
and
cmp
inc
int
sbb
or
xchg
(bad)
or
cs
cld
lods
ss
mov
ins
int3
xchg
sub
cmp
pop
hlt
cs
mov
es
hlt
cs
mov
cs
or
xor
and
sar
or
xchg
scas
or
cs
cld
ds
mov
into
xor
nop
inc
xchg
xlat
test
inc
mov
into
xor
nop
(bad)
cmp
(bad)
cs
iret
xlat
sar
dec
(bad)
mov
xor
movlps
mov
xor
std
dec
(bad)
lods
or
das
popf
dec
(bad)
xchg
(bad)
or
cs
cld
lods
ss
mov
ins
int3
xchg
sub
cmp
(bad)
cs
mov
movs
add
ins
int3
xchg
sub
cmp
mov
cs
mov
es
std
(bad)
jl
or
pop
dec
(bad)
xchg
(bad)
or
cs
cld
lods
ss
mov
ins
int3
xchg
sub
cmp
call
movs
or
ins
int3
xchg
sub
cmp
jbe
cs
mov
es
cmc
cs
mov
cs
or
xor
and
or
or
xchg
scas
or
cs
cld
ds
mov
into
xor
nop
inc
xchg
xlat
test
inc
mov
into
xor
nop
(bad)
sar
(bad)
cs
iret
xlat
inc
in
test
inc
mov
into
xor
xchg
(bad)
loop
(bad)
cs
iret
iret
(bad)
es
cs
(bad)
cs
xchg
xor
dec
icebp
ret
arpl
into
mov
dec
stos
int3
jmp
rcr
inc
jmp
add
xlat
test
inc
mov
into
xor
xchg
(bad)
and
(bad)
cs
iret
iret
(bad)
data16
cs
(bad)
cs
xchg
xor
dec
icebp
ret
arpl
into
mov
dec
stos
int3
jmp
rcr
inc
jmp
dec
stos
int3
jmp
rcr
inc
jmp
jle
int3
or
mov
repnz
aam
jbe
inc
cmp
test
inc
mov
into
xor
xchg
mov
cs
iret
iret
scas
and
shr
int3
hlt
mov
inc
mov
into
xor
xchg
inc
loop
test
inc
mov
into
xor
xchg
(bad)
mov
(bad)
cs
iret
xlat
(bad)
jmp
cs
xchg
xor
dec
icebp
ret
arpl
into
mov
dec
stos
int3
jmp
rcr
inc
jmp
dec
stos
int3
jmp
rcr
inc
jmp
xor
inc
mov
icebp
xor
dec
call
int3
mov
cs
or
xor
pop
scas
fisubr
(bad)
mov
xor
aad
or
lods
or
das
cdq
cld
or
xchg
and
(bad)
cs
cld
cmps
sbb
(bad)
jns
mov
into
xor
nop
inc
fcmovbe
test
inc
mov
into
xor
nop
(bad)
push
(bad)
cs
iret
xlat
(bad)
dec
cmp
cs
(bad)
cs
xchg
xor
dec
icebp
ret
arpl
into
mov
dec
stos
int3
jmp
rcr
inc
jmp
dec
stos
int3
jmp
rcr
inc
jmp
mov
jne
(bad)
cs
xchg
xor
dec
icebp
ret
arpl
into
mov
dec
stos
int3
jmp
rcr
inc
jmp
jle
int3
or
mov
repnz
aam
jbe
mov
(bad)
cs
(bad)
cs
xchg
xor
sahf
xchg
sub
cmp
push
sbb
jp
sub
cmp
push
imul
int3
mov
movs
fistp
ins
int3
xchg
sub
cmp
push
imul
int3
mov
cmps
or
cmps
or
jge
call
adc
cmp
int3
xchg
sub
cmp
push
jmp
repz
xor
jno
daa
shl
pop
cmp
and
jmp
int3
hlt
jb
adc
cmp
dec
and
cs
retf
xchg
rol
retf
cmp
add
mov
mov
call
cmps
xor
aas
cmps
or
cmp
std
std
inc
fst
(bad)
cs
push
iret
jge
mov
xchg
es
pop
lds
inc
sahf
push
shl
hlt
jg
int
(bad)
fldcw
add
hlt
cmp
int3
or
cs
xor
xor
clc
mov
das
lods
out
(bad)
cmps
dec
stos
cmp
xor
inc
int3
xchg
xor
cmp
(bad)
jmp
das
int3
or
js
cmp
pushf
arpl
mov
scas
call
(bad)
scas
and
and
xor
enter
(bad)
movs
shufps
xchg
xor
cmp
mov
xor
xchg
(bad)
mov
(bad)
cs
xchg
cs
cld
and
xor
cmp
xor
stos
js
cmp
pushf
jecxz
aam
hlt
inc
jmp
lds
int3
arpl
mov
dec
stos
xor
cmp
pushf
jecxz
add
or
js
cmp
pushf
xchg
xor
cmp
xchg
jmp
retf
xor
dec
stos
push
idiv
rol
out
(bad)
inc
int3
lods
push
or
je
cmp
pushf
jecxz
add
or
cmp
xor
add
dec
mov
shl
dec
(bad)
cs
int3
inc
retf
cmp
int3
or
lods
jno
cmp
xor
mov
stos
int3
inc
(bad)
xor
cmp
int3
cmp
xor
add
xor
(bad)
sub
cmp
mov
xor
xchg
mov
xor
cmps
or
cmps
or
xor
cmp
pushf
popa
mov
(bad)
stos
pop
or
xor
das
in
in
(bad)
xchg
cmps
xor
dec
stos
mov
cmp
inc
int3
cmp
movs
sbb
ins
int3
arpl
stos
xor
cmp
pushf
jecxz
add
or
int
push
aaa
hlt
cmp
daa
and
(bad)
cs
mov
shl
hlt
xchg
inc
mov
cs
cs
add
or
fadd
or
cs
in
cs
mov
aaa
hlt
cmp
inc
mov
sub
(bad)
or
mov
(bad)
cs
xchg
xor
cmp
jecxz
add
or
std
repz
jmp
adc
mov
xor
dec
jg
cmp
xor
(bad)
and
(bad)
cs
xchg
aaa
hlt
cmp
jecxz
fnstenv
hlt
inc
jmp
(bad)
cs
popa
(bad)
sar
cmp
xor
cmp
inc
out
cs
xchg
xor
cmp
mov
das
xlat
sbb
cmp
loop
(bad)
sar
cmp
xor
add
scas
and
fisub
(bad)
cs
arpl
repnz
xchg
(bad)
ds
(bad)
cs
iret
shl
or
out
inc
(bad)
xlat
test
and
out
cs
sbb
hlt
cmp
(bad)
xor
xor
das
fistp
hlt
cmp
inc
mov
xor
inc
(bad)
call
sar
cmp
xor
adc
xor
inc
jmp
inc
pop
aaa
hlt
cmp
in
(bad)
jmp
xor
(bad)
cs
xchg
xor
cmp
mov
cs
popa
(bad)
sar
cmp
xor
inc
int3
or
in
dec
jmp
xor
das
cmp
dec
xchg
cmp
xor
add
and
and
xchg
js
sbb
test
(bad)
inc
int3
xchg
mov
xor
mov
or
movs
cdq
dec
into
sbb
push
int3
or
lahf
pop
das
xor
or
xchg
dec
push
(bad)
cs
dec
imul
jge
adc
cs
hlt
mov
inc
pop
shr
jecxz
or
or
inc
dec
cmp
or
cmps
or
cs
add
xor
aas
cmps
or
js
mov
adc
pop
das
adc
or
js
(bad)
loopne
int3
add
in
dec
jmp
divps
je
xlat
cs
jecxz
or
or
add
mov
sub
or
leave
inc
mov
shl
dec
jmp
(bad)
int3
or
inc
repz
(bad)
inc
int3
into
fdivr
dec
scas
rol
or
mov
xor
(bad)
push
and
cmps
or
pop
rol
jle
inc
jbe
xor
cmp
int3
jg
cmps
cmp
aad
or
cs
popa
lds
xchg
out
cs
add
arpl
divps
dec
out
jns
push
out
pop
loope
xor
or
dec
or
das
int3
loopne
cmps
xor
aas
cmps
or
imul
scas
sub
dec
(bad)
mov
jp
(bad)
cs
dec
xor
or
sar
mov
int3
jecxz
pop
int3
or
cdq
mov
inc
out
iret
pop
scas
rcl
dec
(bad)
mov
inc
and
cs
iret
fbld
int3
arpl
loopne
xchg
and
out
cs
mov
aaa
ret
or
dec
xor
and
cmp
xchg
ret
fwait
mov
cmp
adc
in
dec
jmp
cmps
or
das
cmps
or
mov
int3
popa
mov
(bad)
cs
int
das
call
ins
int3
jecxz
push
int3
or
pop
(bad)
(bad)
cmps
or
(bad)
push
dec
mov
cmps
or
scas
ins
dec
mov
cmps
or
add
mov
cmps
or
xor
mov
inc
repz
inc
int3
lods
das
call
outs
int3
jecxz
push
int3
or
sar
sub
int3
jecxz
push
int3
or
sar
fwait
fs
int3
jecxz
push
int3
or
sar
jg
ins
int3
jecxz
push
int3
or
in
dec
jmp
cld
hlt
repnz
push
dec
mov
cmps
or
ficom
mov
cmps
or
mov
push
sub
cmps
or
mov
dec
mov
inc
repz
(bad)
inc
int3
cwde
jo
pop
dec
retf
popf
pop
js
xchg
movs
shl
mov
dec
jmp
and
xchg
and
loopne
int3
test
mov
dec
dec
mov
mov
cmps
idiv
sbb
cs
loopne
int3
test
mov
or
inc
xor
repnz
ins
dec
mov
inc
repz
inc
int3
lods
shl
ds
lea
das
shr
(bad)
(bad)
call
aad
outs
int3
popa
cmp
stc
daa
pop
outs
int3
jecxz
or
or
mov
jmp
movs
aad
outs
int3
popa
cmp
stc
pop
push
outs
int3
jecxz
or
or
mov
or
mov
or
lea
inc
outs
int3
popa
cmp
stc
and
int3
jecxz
or
or
mov
or
lods
jmp
movs
aad
outs
int3
popa
cmp
stc
sub
int3
jecxz
or
or
int
dec
jmp
dec
stos
test
and
loope
int3
test
mov
or
inc
xor
repnz
ins
dec
mov
xchg
ret
inc
out
inc
ret
nop
xchg
and
dec
dec
dec
int3
sub
fist
dec
(bad)
sar
hlt
cmp
mov
xchg
(bad)
dec
idiv
ror
xlat
(bad)
les
sub
or
or
or
cmp
xchg
(bad)
scas
cs
cs
repz
(bad)
inc
int3
lods
xor
repz
or
shl
dec
xor
dec
aas
add
int3
popa
mov
xlat
sbb
es
mov
scas
cs
or
(bad)
loop
(bad)
outs
dec
outs
int3
popa
(bad)
sar
aas
pop
outs
int3
popa
(bad)
jle
aaa
dec
imul
fimul
mov
cmp
add
mov
scas
hlt
pop
dec
mov
sub
mov
mov
mov
dec
aas
add
test
lods
jg
pop
scas
daa
int3
mov
movs
rcr
int3
popa
mov
outs
imul
popa
mov
ret
popa
mov
(bad)
cmps
or
cmp
loop
int3
add
or
jmp
js
cmp
sbb
xchg
xchg
and
loop
int3
popa
(bad)
sar
aas
pop
outs
int3
popa
(bad)
sar
dec
outs
int3
popa
xlat
inc
cli
or
cmps
outs
lods
push
movs
or
cs
arpl
hlt
pop
dec
mov
fs
ins
dec
mov
mov
mov
lods
push
cmps
and
inc
aam
test
movs
rcr
int3
popa
mov
outs
stos
fs
int3
popa
(bad)
sar
aas
pop
outs
int3
popa
(bad)
sar
dec
outs
int3
popa
xlat
inc
sbb
stos
(bad)
cs
popa
out
inc
int3
or
jle
lds
cmc
mov
lods
cs
jecxz
int3
test
mov
or
cld
and
cmps
or
sbb
xchg
xchg
cmps
or
sbb
sbb
inc
jb
(bad)
cmps
and
inc
inc
rol
ins
int3
popa
mov
outs
pop
pop
outs
int3
popa
(bad)
sar
aas
pop
outs
int3
popa
(bad)
sar
imul
popa
mov
cs
or
scas
pushf
arpl
icebp
mov
scas
stos
push
dec
mov
fs
push
dec
mov
or
jle
and
cs
arpl
movs
dec
(bad)
cs
hlt
repnz
push
dec
mov
cmps
or
sbb
xchg
xchg
cmps
or
sbb
(bad)
cs
popa
cmc
inc
or
cmps
jno
sub
adc
test
movs
mov
(bad)
into
das
(bad)
outs
mov
int3
cmp
xor
add
repnz
mov
mov
aaa
scas
test
or
inc
bound
(bad)
movs
or
scas
pushf
arpl
icebp
mov
scas
stos
push
dec
mov
add
mov
cmps
or
sbb
xchg
xchg
cmps
or
sbb
sbb
cs
arpl
cs
or
movs
rcr
int3
popa
mov
outs
fwait
fs
int3
mov
fsubrp
or
inc
int3
hlt
repnz
mov
mov
scas
ror
or
inc
fmul
(bad)
movs
or
cs
arpl
pop
dec
mov
fs
ins
dec
mov
mov
mov
(bad)
movs
enter
arpl
cs
pop
scas
ins
push
dec
mov
or
sub
or
(bad)
cld
xchg
xchg
cmps
or
sbb
xchg
xchg
cmps
or
sbb
sbb
inc
std
or
cmps
outs
scas
cs
or
movs
rcr
int3
popa
mov
outs
sti
pop
outs
int3
cmp
xor
add
repnz
mov
mov
(bad)
movs
stos
(bad)
cs
arpl
cs
pop
scas
sub
dec
mov
or
mov
pop
test
cmps
or
sbb
xchg
xchg
cmps
or
sbb
scas
add
or
inc
pop
or
cmps
pop
scas
cs
mov
movs
or
sub
or
jge
or
lea
test
cmps
or
sbb
xchg
xchg
cmps
or
sbb
scas
lods
int3
or
inc
ud2
(bad)
cmps
pop
scas
cs
mov
movs
or
sub
or
cmp
or
(bad)
rcr
out
(bad)
inc
int3
lods
xor
repz
or
mov
and
inc
fsub
cs
pop
scas
repnz
inc
int
test
movs
or
cs
jecxz
bswap
or
dec
mov
mov
mov
(bad)
cmps
pop
scas
cs
mov
movs
or
sub
or
mov
or
(bad)
in
xchg
xchg
cmps
or
sbb
xchg
xchg
cmps
or
sbb
sbb
mov
or
inc
gs
cmps
adc
xchg
inc
das
rol
ins
int3
popa
mov
outs
xchg
fs
int3
jecxz
(bad)
xor
jg
jmp
ret
das
pop
xor
ret
inc
out
inc
ret
nop
xchg
and
add
in
ss
or
sar
hlt
cmp
mov
xchg
(bad)
frndint
cmp
dec
iret
xlat
(bad)
les
(bad)
inc
int3
lods
xor
iret
mov
or
fucomp
or
mov
and
fsubr
int3
mov
call
repnz
mov
sbb
add
cmps
or
scas
pushf
arpl
icebp
mov
scas
iret
pop
dec
mov
mov
cs
test
mov
ds
or
movs
mov
in
imul
dec
pushf
popa
rol
(bad)
cs
pop
scas
out
dec
mov
or
lods
in
or
(bad)
enter
dec
cld
xchg
int3
or
mov
or
mov
or
movs
mov
in
imul
dec
pushf
popa
xchg
inc
fsub
cs
pop
scas
repnz
inc
push
rol
adc
or
lea
lods
sub
or
das
cmps
or
xchg
into
or
inc
int3
popa
mov
(bad)
cs
int
das
call
outs
int3
jecxz
xor
or
mov
or
mov
outs
lods
cmp
mov
movs
mov
(bad)
sbb
outs
jecxz
outs
int3
cmp
xor
add
rol
ins
int
(bad)
sar
jecxz
outs
int3
jecxz
xor
or
inc
int3
arpl
and
xchg
and
fsubr
int3
mov
mov
mov
or
sar
jecxz
outs
int3
jecxz
xor
or
cmps
or
cs
hlt
repnz
push
dec
mov
cmps
or
sbb
xchg
xchg
cmps
or
sbb
(bad)
cs
popa
cmc
inc
fsub
inc
iret
or
movs
xlat
sbb
inc
hlt
mov
lods
cs
fsubr
int3
test
(bad)
mov
inc
jmp
cmps
or
sbb
xchg
xchg
cmps
or
sbb
(bad)
cs
popa
sti
inc
fsub
cs
or
inc
adc
test
movs
mov
(bad)
ss
pop
outs
int3
jecxz
(bad)
hlt
lods
xor
repz
or
mov
mov
cs
popa
test
movs
or
cs
arpl
pop
dec
mov
fs
ins
dec
(bad)
cmps
xor
aas
cmps
or
sar
aas
pop
outs
int3
popa
(bad)
sar
dec
outs
int3
popa
xlat
inc
stos
arpl
int3
or
inc
int3
or
jle
dec
sbb
cmc
mov
lods
cs
fldcw
int3
test
mov
or
mov
or
mov
test
int3
arpl
int3
or
cs
arpl
hlt
mov
scas
hlt
pop
dec
mov
ficom
mov
mov
mov
(bad)
movs
stos
(bad)
cs
arpl
cs
pop
scas
sub
dec
mov
or
and
pop
test
cmps
or
sbb
xchg
xchg
cmps
or
sbb
sbb
inc
sub
(bad)
cmps
adc
xchg
inc
mov
test
movs
rcr
int3
popa
mov
outs
ja
ins
int3
popa
(bad)
sar
aas
pop
outs
int3
popa
(bad)
sar
dec
outs
int3
popa
xlat
inc
xor
(bad)
movs
hlt
(bad)
cs
popa
fld
or
jle
pop
push
ins
int3
arpl
cs
fisubr
int3
test
lea
ds
or
mov
mov
cs
popa
jmp
pop
scas
mov
int
test
movs
or
cs
jecxz
xor
or
dec
(bad)
scas
or
shr
int3
popa
(bad)
sar
aas
pop
outs
int3
popa
(bad)
sar
imul
popa
fild
add
scas
repnz
inc
int
test
movs
or
cs
jecxz
xor
or
dec
mov
mov
mov
rol
or
movs
xlat
sbb
(bad)
hlt
mov
scas
cs
or
(bad)
and
(bad)
outs
sub
int3
popa
(bad)
sar
aas
pop
outs
int3
popa
(bad)
sar
dec
outs
int3
popa
rol
or
movs
dec
(bad)
cs
popa
fld
or
movs
call
cmp
cs
fld
int3
test
lea
hlt
cmp
or
or
xor
cwde
jo
enter
mov
cmp
jns
dec
dec
int3
hlt
and
movs
mov
cs
popa
les
les
or
scas
xor
mov
cs
int
shl
add
mov
int3
pop
das
movs
aad
(bad)
cmps
jb
add
stos
fisubr
int3
mov
fcmove
or
cs
dec
aaa
jle
dec
xor
dec
cmp
jle
inc
icebp
mov
(bad)
cs
jecxz
lea
hlt
inc
jmp
lods
xor
inc
sahf
rol
ins
int3
hlt
mov
xor
(bad)
jl
cmp
dec
iret
fbld
mov
cmovp
pop
cmp
arpl
call
inc
(bad)
pop
test
fist
cmp
dec
imul
add
push
push
in
cdq
and
and
(bad)
cs
pop
xchg
nop
rcl
int3
or
mov
xor
jge
or
cmps
cmp
aaa
cmps
or
das
xor
or
int3
or
mov
repnz
std
inc
push
cmp
frstor
sahf
mov
dec
stos
int3
hlt
cmp
pushf
jecxz
ss
or
xor
mov
movs
shl
int3
xchg
xor
cmp
push
fild
int3
mov
inc
cmp
(bad)
shl
hlt
xchg
(bad)
cmp
cs
in
xor
or
xor
mov
movs
pop
jbe
int3
xchg
xor
cmp
rcl
cs
mov
inc
cld
mov
(bad)
shl
hlt
xchg
(bad)
push
sbb
cs
jbe
sub
dec
(bad)
mov
xor
test
or
scas
mov
rcr
mov
stos
int3
hlt
cmp
pushf
jecxz
cmp
or
cmp
dec
stos
xor
cmp
inc
int
push
xor
mov
movs
mov
int3
xchg
xor
cmp
jp
cs
mov
inc
outs
mov
(bad)
shl
hlt
xchg
(bad)
xchg
sbb
cs
jbe
and
sbb
mov
xor
ins
fisttp
(bad)
scas
mov
int3
pop
frstor
pushf
mov
dec
stos
int3
hlt
cmp
pushf
jecxz
cmp
or
in
dec
call
mov
dec
(bad)
mov
xor
and
or
scas
mov
retf
arpl
pushf
mov
dec
stos
int3
hlt
cmp
pushf
jecxz
cmp
or
xor
jne
int3
xchg
xor
cmp
jmp
int3
arpl
gs
or
shl
pop
scas
cs
dec
mov
movs
xor
ins
int3
arpl
mov
scas
outs
push
dec
mov
movs
retf
loopne
int3
jecxz
xor
or
xor
sub
cmp
xor
cdq
jne
leave
ret
cs
and
call
jg
inc
dec
(bad)
in
dec
jmp
mov
(bad)
cs
push
shr
pop
das
das
and
cmp
mov
jecxz
ss
or
sub
pop
dec
retf
dec
out
es
or
aam
dec
fdivrp
sti
dec
call
int3
cld
and
xor
test
inc
mov
fnstenv
hlt
xchg
(bad)
ficomp
(bad)
int3
mov
cs
or
xor
hlt
cmp
xor
mov
movs
cmps
jne
int3
xchg
cmp
cmp
loop
cs
mov
xor
cmp
sbb
mov
xor
loope
or
cmps
cmp
aaa
cmps
or
cmp
jle
(bad)
mov
xor
sbb
clc
aas
shl
lss
movs
or
xchg
cmp
cmp
sahf
shr
int3
mov
xor
cmp
mov
dec
(bad)
mov
xor
push
(bad)
(bad)
scas
and
cs
mov
xor
cmp
mov
dec
(bad)
mov
xor
jne
or
scas
jno
aas
shl
or
aas
movs
inc
je
int3
xchg
cmp
cmp
dec
shr
int3
mov
xor
cmp
mov
dec
(bad)
mov
xor
or
or
cmps
cmp
aaa
cmps
or
cmp
mov
dec
(bad)
mov
xor
sub
or
scas
jno
aas
shl
add
ins
int3
xchg
cmp
cmp
out
cs
mov
xor
cmp
jg
(bad)
mov
xor
std
fmul
(bad)
cmps
cmp
and
xor
aas
shl
pop
mov
movs
jecxz
ins
int3
xchg
cmp
cmp
cmps
shr
int3
mov
xor
cmp
mov
dec
(bad)
mov
xor
mov
jno
aas
shl
add
jae
int3
xchg
cmp
cmp
jb
cs
arpl
stos
and
cmp
pushf
jecxz
ret
xor
dec
fidivr
in
dec
stos
adc
cmp
inc
int
pop
ins
dec
mov
loopne
shl
mov
ds
mov
fnstenv
hlt
inc
xchg
aas
repz
(bad)
jg
lods
jno
xor
xor
enter
(bad)
cs
sti
neg
inc
int
call
std
shr
ins
int3
jecxz
in
xor
inc
jmp
cmp
or
inc
lock
or
(bad)
enter
dec
mov
shl
hlt
(bad)
and
lds
int3
mov
xor
cmp
mov
das
int3
or
xor
cmp
test
int
(bad)
call
xor
dec
stos
xor
cmp
pushf
arpl
test
jecxz
ss
or
mov
or
or
enter
fnstenv
hlt
dec
call
xor
(bad)
pop
in
push
int3
or
pop
adc
les
adc
in
fistp
xchg
xor
cmp
ret
mov
adc
lock
pop
stos
test
movs
and
ins
int3
xchg
xor
cmp
push
fild
int3
mov
pop
ror
inc
pop
stos
test
movs
adc
ins
int3
xchg
xor
cmp
cli
shr
int3
mov
ss
inc
scas
cs
dec
idiv
shl
pop
das
xor
cmp
and
xor
aas
shl
pop
scas
ds
idiv
shl
pop
das
cdq
fisttp
mov
mov
(bad)
xor
xchg
mov
(bad)
cs
iret
shl
xor
and
or
mov
xor
inc
shl
cmp
icebp
pop
ins
int3
xchg
xor
cmp
jle
cs
mov
cmps
or
xor
cmp
pushf
jecxz
cmp
or
ins
int3
xchg
xor
cmp
xchg
xor
enter
(bad)
cs
mov
shl
hlt
inc
out
leave
pop
das
stc
fimul
(bad)
ja
mov
(bad)
xor
jg
fisttp
(bad)
fldcw
add
hlt
cmp
xor
cmp
(bad)
lock
int3
or
fwait
xor
cmp
movs
fwait
data16
int3
arpl
test
cmp
pushf
jecxz
cmp
or
arpl
mov
dec
stos
xor
cmp
pushf
jecxz
cmp
or
xor
cmp
pushf
jecxz
cmp
or
adc
cmp
daa
sub
cmp
dec
mov
shl
hlt
cmp
mov
cld
cmp
or
cmp
daa
add
mov
dec
mov
fnstenv
hlt
les
mov
fwait
lds
(bad)
sar
aas
shl
xchg
xor
cmp
fstp
ins
int3
xchg
xor
cmp
jbe
cs
mov
ds
mov
(bad)
xor
xchg
(bad)
push
sbb
cs
mov
fnstenv
hlt
dec
xchg
xor
cmp
fwait
jecxz
cmp
sbb
cmp
inc
ja
ds
popa
xchg
adc
(bad)
cs
mov
(bad)
xor
jg
test
fldcw
add
hlt
cmp
xor
cmp
mov
das
inc
fisttp
(bad)
mov
xor
inc
fisttp
(bad)
mov
xor
cmp
cmp
inc
ja
das
fwait
jecxz
aas
int3
or
xor
cmp
pushf
popa
(bad)
sar
aas
shl
arpl
mov
lods
cmps
or
popa
fisttp
(bad)
jle
ret
int3
xchg
xor
cmp
hlt
jb
xor
cmp
ins
(bad)
cmp
dec
iret
retf
cmps
lar
and
cmp
xor
jb
xor
cmp
sahf
sbb
cs
int
jp
or
(bad)
out
(bad)
cs
loop
aam
hlt
cwde
jo
ret
int3
pop
dec
retf
je
aam
int3
jecxz
ds
or
adc
inc
(bad)
(bad)
movs
lahf
ja
int3
popa
mov
push
aad
int3
add
hlt
cmp
or
sar
dec
(bad)
cs
popa
mov
pop
(bad)
cs
sbb
adc
add
mov
sbb
(bad)
jmp
int3
lahf
(bad)
cs
mov
mov
mov
push
(bad)
cs
arpl
cs
or
(bad)
rcr
(bad)
cs
(bad)
cs
pop
das
xor
adc
pop
cmps
packsswb
das
int3
or
jge
cmp
pushf
hlt
mov
and
xlat
cs
popa
mov
test
inc
mov
xor
xchg
(bad)
rcl
xlat
adc
hlt
(bad)
cs
mov
das
int3
or
mov
loop
js
(bad)
ror
jg
ins
int3
mov
push
pop
(bad)
cs
mov
dec
out
cmp
push
aam
retf
in
dec
(bad)
xchg
add
or
aam
sahf
pusha
ret
xor
add
int
icebp
(bad)
mov
mov
cmp
add
es
or
adc
inc
int
call
pop
ss
ret
xor
inc
stos
jnp
cmp
int
inc
cdq
and
cmp
les
scas
daa
dec
iret
cs
int
and
sub
cs
add
or
hlt
call
xor
dec
stos
imul
rcr
scas
loop
dec
(bad)
mov
xor
sub
or
inc
int3
xchg
and
cmp
mov
xor
xchg
mov
fs
xchg
(bad)
fcmove
cmp
dec
clc
pop
cmp
or
imul
rcr
inc
jmp
sub
xor
rcr
or
cmps
adc
pop
cmps
punpcklwd
(bad)
out
(bad)
movs
mov
ins
int3
arpl
mov
scas
call
mov
cs
sbb
adc
add
jno
sub
xor
(bad)
xchg
in
or
cs
ins
bound
rol
ins
int3
arpl
test
mov
inc
mov
shl
dec
sbb
push
(bad)
cs
clc
mov
ins
int3
arpl
mov
scas
call
in
fwait
xchg
and
aam
int3
sbb
adc
add
jno
sub
xor
(bad)
xchg
out
or
cs
ins
bound
rol
ins
int3
arpl
test
mov
dec
iret
xchg
xor
(bad)
xchg
lds
(bad)
cs
scas
dec
idiv
ror
cmps
or
cmps
or
inc
int3
xchg
xchg
and
enter
sbb
or
or
rol
or
mov
dec
mov
das
imul
mov
psrlw
ds
int3
xchg
xchg
jns
cmp
fwait
hlt
mov
and
enter
(bad)
mov
into
arpl
into
mov
cmp
jecxz
and
or
imul
int3
xchg
fwait
and
cmp
data16
cs
xchg
and
cmp
lock
pop
xor
mov
jle
mov
shl
nop
sar
or
inc
int3
xchg
inc
cmp
test
xor
(bad)
cmps
add
cs
test
int3
cld
and
dec
mov
inc
call
mov
and
retf
xchg
iret
pop
dec
(bad)
cmps
mov
dec
test
dec
in
ins
aas
pop
outs
int3
add
mov
dec
imul
push
int3
or
cs
add
inc
enter
or
inc
int3
jecxz
and
or
sbb
xor
or
cmps
or
test
mov
jg
clc
or
fldcw
add
hlt
cmp
xor
les
int3
or
imul
(bad)
cs
int3
and
or
cs
rol
test
imul
pop
ret
or
inc
int3
hlt
repnz
mov
mov
or
ins
int3
arpl
cmc
mov
lods
cs
enter
(bad)
mov
or
pop
data16
movs
lahf
ja
int3
popa
mov
lods
cs
je
xor
retf
ss
cs
mov
ins
int3
jecxz
and
or
jle
or
cs
add
hlt
cmp
int3
jecxz
and
or
and
cmp
dec
cmps
sub
xor
(bad)
cs
sbb
adc
add
dec
mov
shl
pop
dec
stos
pusha
in
rcr
scas
push
adc
mov
or
cs
jecxz
mov
aam
pop
pop
retf
mov
inc
js
(bad)
or
stos
call
das
or
scas
aas
adc
xchg
hlt
cmp
or
outs
int3
popa
mov
xchg
(bad)
scas
pop
(bad)
cs
mov
xor
xchg
inc
int3
popa
mov
or
cs
pop
das
ins
ror
inc
int3
arpl
das
int3
or
mov
or
sbb
aam
or
jecxz
and
or
in
dec
in
inc
dec
and
call
int3
popa
(bad)
mov
loop
(bad)
cs
sti
xchg
push
pushf
out
sbb
jnp
out
inc
ret
(bad)
cs
pop
nop
xchg
push
movhps
push
test
int3
cld
and
inc
dec
retf
lods
xor
enter
(bad)
cs
inc
(bad)
into
add
inc
int
mov
icebp
sbb
cs
add
dec
into
or
adc
or
cs
or
and
iret
cs
jmp
int3
or
stos
dec
or
cs
mov
inc
js
(bad)
cs
(bad)
adc
int3
or
sar
arpl
int3
jecxz
retf
dec
stos
and
cmp
inc
repz
(bad)
inc
int3
scas
ret
(bad)
sar
cmp
xor
(bad)
retf
inc
jmp
cmp
xor
fwait
sub
cmp
and
retf
cs
add
and
(bad)
cs
xchg
xor
cmp
or
or
daa
or
test
dec
xlat
cmp
xor
inc
cli
xor
cmp
add
cmp
out
add
xor
(bad)
(bad)
mov
idiv
shl
mov
shl
hlt
inc
(bad)
enter
xor
cmp
xor
pop
pop
std
popa
(bad)
movs
dec
jmp
shl
and
xor
cmp
mov
shl
hlt
in
stos
sbb
cmp
pushf
popa
mov
mov
inc
repz
(bad)
inc
int3
inc
adc
add
mov
test
test
outs
arpl
int3
cmp
xor
add
int3
or
mov
jle
sar
arpl
int3
jecxz
lds
hlt
sahf
scas
icebp
jnp
ins
int3
or
stos
xchg
or
xor
scas
call
cmp
inc
shr
cmp
xor
add
cmc
dec
iret
and
shr
popa
mov
and
stos
(bad)
mov
or
imul
iret
sar
or
cmps
xor
and
xor
(bad)
cs
dec
shl
xor
(bad)
adc
int3
jg
adc
int3
jg
adc
int3
jg
adc
int3
jg
adc
int3
jg
adc
int3
jg
adc
int3
jg
adc
int3
jg
adc
int3
add
test
or
inc
int3
hlt
mov
and
retf
cs
add
hlt
cmp
int3
jg
adc
int3
jg
adc
int3
jle
inc
jl
xlat
xor
mov
movs
hlt
cmp
int3
hlt
mov
and
retf
cs
mov
div
cmp
xor
inc
mov
idiv
ror
xchg
xor
cmp
(bad)
retf
cs
add
hlt
cmp
icebp
or
not
inc
int3
scas
ror
or
mov
xor
sbb
xchg
and
int
int3
mov
xor
cmp
mov
or
inc
int3
jecxz
and
and
xchg
and
int
int3
loop
sub
or
xor
cmp
inc
mov
shl
hlt
add
int3
mov
pop
js
(bad)
das
ret
mov
int3
or
mov
xor
sbb
test
and
int
int3
xchg
xor
cmp
lock
pop
xor
push
lods
das
movs
push
es
int3
xchg
xor
cmp
not
xor
cmp
int3
jle
inc
int3
popa
mov
or
add
(bad)
data16
int3
jecxz
and
or
jnp
or
xchg
mov
(bad)
cs
dec
stos
sub
cmp
inc
int3
dec
stos
xor
cmp
pushf
xchg
xor
cmp
es
ins
int3
xchg
xor
cmp
(bad)
retf
cs
mov
movs
hlt
(bad)
cs
xchg
xor
cmp
fstp
lds
(bad)
scas
jno
cmp
xor
mov
cmps
or
ins
int3
popa
mov
xor
fstp
lds
mov
inc
xchg
shl
hlt
inc
out
dec
inc
adc
or
pop
in
popa
mov
lods
cs
int
int3
hlt
repnz
mov
and
int
shl
hlt
cmp
daa
ss
cmp
xor
cmp
lock
push
cmps
or
ins
int3
popa
mov
xor
fstp
lds
mov
dec
mov
shl
hlt
(bad)
movs
dec
idiv
shl
aaa
xlat
pop
jne
xor
or
mov
xor
stos
cmp
arpl
test
cmp
pushf
jecxz
and
fsub
cs
or
xor
cmp
pushf
hlt
repnz
ins
dec
mov
dec
mov
shl
hlt
(bad)
pop
in
popa
mov
lods
cs
into
cs
hlt
repnz
ins
dec
mov
and
xchg
xor
cmp
mov
shl
hlt
xchg
inc
loope
test
inc
mov
shl
hlt
xchg
(bad)
(bad)
add
cs
iret
xlat
inc
xor
(bad)
cs
mov
shl
hlt
xchg
sar
daa
pop
outs
int3
jecxz
es
or
xor
cmp
int3
jle
inc
int3
popa
mov
or
rol
(bad)
sar
daa
pop
outs
int3
jecxz
es
or
mov
cmp
out
int3
xchg
xor
cmp
mov
shl
hlt
xchg
inc
outs
fadd
shl
hlt
xchg
(bad)
jle
(bad)
cs
iret
xlat
inc
xor
(bad)
cs
mov
shl
hlt
xchg
sar
and
int3
jecxz
es
or
xor
cmp
int3
jle
inc
int3
popa
mov
or
test
stc
and
int3
jecxz
es
or
add
or
mov
xor
sti
das
int3
jle
lods
xor
mov
cmps
or
ins
int3
popa
mov
xor
out
mov
or
ror
or
(bad)
xor
(bad)
or
mov
aaa
cmc
cmp
inc
pop
shl
hlt
cmp
cld
ja
adc
jne
inc
int3
popa
mov
or
cmp
stc
and
int3
jecxz
sub
or
xchg
into
or
scas
dec
lock
xor
dec
stos
aaa
cmc
cmp
lock
add
or
xor
cmp
pushf
xchg
xor
cmp
es
ins
int3
xchg
xor
cmp
into
into
cs
mov
movs
hlt
(bad)
cs
xchg
xor
cmp
ds
lea
das
add
or
scas
jno
cmp
xor
mov
cmps
or
ins
int3
popa
mov
xor
out
lea
das
imul
or
or
mov
ss
cmp
inc
pop
shl
hlt
cmp
cld
ja
adc
jne
inc
int3
popa
mov
or
jne
or
sar
sub
int3
jecxz
sub
or
das
into
or
scas
dec
icebp
cmp
xor
dec
mov
dec
ret
cmp
aaa
(bad)
cs
icebp
cmp
xor
add
pop
lock
mov
xor
stos
cmp
arpl
test
cmp
pushf
jecxz
es
or
mov
fs
or
leave
inc
mov
shl
hlt
dec
stos
sub
cmp
inc
int3
lods
cmps
or
movs
or
mov
mov
or
lods
leave
or
cmps
dec
sti
cmp
xor
inc
int3
popa
(bad)
sar
cmp
xor
push
sub
or
mov
jle
mov
int3
mov
ror
cmps
punpcklwd
mov
xor
inc
cld
xchg
xchg
xor
das
jmp
int3
xchg
xor
cmp
or
sar
cmp
xor
imul
or
cmp
ret
cmp
aaa
(bad)
cs
sahf
sub
xor
xchg
jle
xchg
shl
hlt
xchg
sar
cmp
xor
inc
sub
or
shl
hlt
xchg
inc
into
arpl
into
mov
cmp
and
ret
hlt
jb
xor
cmp
xor
(bad)
xor
or
or
inc
int3
popa
mov
(bad)
cs
dec
scas
push
pop
dec
mov
inc
mov
shl
hlt
dec
(bad)
std
repz
jmp
cmps
or
fwait
cmp
cmp
and
ret
cs
xchg
mov
add
xchg
xor
xchg
xor
cmp
push
mov
cmc
cmp
and
ret
cs
popa
(bad)
mov
xor
das
movs
out
ins
int3
hlt
jb
xor
cmp
push
xsaves
inc
repz
inc
int3
cmp
and
les
int3
int3
ret
dec
(bad)
das
int3
or
inc
enter
mov
jb
ins
int3
arpl
das
int3
or
ins
xchg
ror
fild
repnz
dec
mov
inc
repz
inc
int3
sub
xor
sar
hlt
mov
and
ret
push
cdq
jne
leave
xlat
cs
and
and
xchg
js
xor
sahf
cmp
xor
add
int
(bad)
and
(bad)
cs
mov
jmp
stc
(bad)
data16
int3
jle
sar
jecxz
outs
int3
jecxz
sub
or
aaa
dec
(bad)
idiv
das
mov
or
(bad)
mov
das
test
stc
mov
int3
jle
sar
daa
pop
outs
int3
jecxz
sub
or
sbb
xchg
xchg
mov
sahf
xchg
and
ret
cs
xor
xor
(bad)
pop
(bad)
hlt
repnz
push
dec
mov
inc
repz
inc
dec
aas
cmps
or
repnz
push
dec
(bad)
pop
(bad)
hlt
repnz
push
dec
mov
idiv
out
lea
mov
dec
ss
mov
(bad)
pop
(bad)
hlt
repnz
push
dec
mov
idiv
out
lea
mov
dec
ss
mov
(bad)
pop
aad
repnz
ins
dec
mov
daa
pop
jg
ror
fldcw
add
idiv
das
mov
or
mov
dec
stos
test
mov
xchg
xchg
inc
repz
(bad)
inc
int3
cld
sbb
xchg
xchg
mov
xchg
xchg
idiv
fstp
inc
push
(bad)
mov
in
xchg
mov
stos
test
idiv
out
lea
mov
inc
push
jmp
mov
cld
sbb
test
mov
xchg
xchg
(bad)
cmp
jle
sar
pop
xchg
(bad)
mov
or
dec
jmp
push
sbb
cs
or
or
clc
test
pop
fwait
(bad)
cs
or
or
clc
test
pop
fwait
(bad)
cs
or
or
clc
test
pop
fwait
(bad)
cs
or
or
clc
test
pop
fwait
(bad)
cs
or
or
clc
test
pop
fwait
(bad)
cs
or
or
clc
test
pop
fwait
(bad)
cs
or
or
clc
test
pop
fwait
(bad)
cs
or
or
clc
test
pop
fwait
(bad)
cs
or
(bad)
jb
(bad)
cs
int3
inc
adc
jle
inc
out
cmp
pushf
jecxz
sub
or
add
inc
int3
add
dec
inc
adc
jg
(bad)
enter
pop
pop
leave
mov
push
mov
add
sub
retf
mov
dec
repz
aas
popa
mov
cmps
or
push
add
or
cs
es
ds
or
call
or
call
or
add
out
jne
cmp
xor
mov
call
das
ret
(bad)
inc
stc
inc
dec
jecxz
push
add
cs
or
or
(bad)
cs
or
or
fwait
(bad)
cs
or
or
(bad)
cs
or
or
fwait
(bad)
cs
or
or
(bad)
cs
or
or
fwait
(bad)
cs
or
or
(bad)
cs
or
or
fwait
(bad)
cs
or
or
(bad)
cs
or
or
fwait
(bad)
cs
or
or
(bad)
cs
or
or
fwait
(bad)
cs
or
or
(bad)
cs
or
or
fwait
(bad)
cs
or
or
(bad)
cs
or
or
fwait
(bad)
cs
or
or
cs
fwait
(bad)
cs
or
or
test
pop
fwait
(bad)
cs
or
or
cs
fwait
(bad)
cs
or
or
test
pop
fwait
(bad)
cs
or
or
cs
fwait
(bad)
cs
or
or
test
pop
fwait
(bad)
cs
or
or
cs
fwait
(bad)
cs
or
or
test
pop
fwait
(bad)
cs
or
or
cs
fwait
(bad)
cs
or
or
test
pop
fwait
(bad)
cs
or
or
cs
fwait
(bad)
cs
or
or
test
pop
fwait
(bad)
cs
or
or
cs
fwait
(bad)
cs
or
or
test
pop
fwait
(bad)
cs
or
or
cs
fwait
(bad)
cs
or
or
test
pop
fwait
(bad)
cs
or
or
test
pop
fwait
(bad)
cs
or
or
clc
test
pop
fwait
(bad)
cs
or
or
test
pop
fwait
(bad)
cs
or
or
clc
test
pop
fwait
(bad)
cs
or
or
test
pop
fwait
(bad)
cs
or
or
clc
test
pop
fwait
(bad)
cs
or
or
test
pop
fwait
(bad)
cs
or
or
clc
test
pop
fwait
(bad)
cs
or
or
test
pop
fwait
(bad)
cs
or
or
clc
test
pop
fwait
(bad)
cs
or
or
test
pop
fwait
(bad)
cs
or
or
clc
test
pop
fwait
(bad)
cs
or
or
test
pop
fwait
(bad)
cs
or
or
clc
test
pop
fwait
(bad)
cs
or
or
inc
cs
or
or
inc
cs
or
or
inc
cs
or
or
inc
cs
or
or
inc
cs
or
or
inc
cs
or
or
inc
cs
or
or
inc
cs
or
or
inc
cs
or
or
inc
cs
or
or
inc
cs
or
or
inc
cs
or
or
inc
cs
or
or
inc
cs
or
or
inc
cs
or
or
inc
cs
or
or
(bad)
cs
or
or
fwait
(bad)
cs
or
or
(bad)
cs
or
or
fwait
(bad)
cs
or
or
(bad)
cs
or
or
fwait
(bad)
cs
or
or
(bad)
cs
or
or
fwait
(bad)
cs
or
or
(bad)
cs
or
or
fwait
(bad)
cs
or
or
(bad)
cs
or
or
fwait
(bad)
cs
or
or
(bad)
cs
or
or
fwait
(bad)
cs
or
or
cs
fwait
(bad)
cs
or
or
test
pop
fwait
(bad)
cs
or
or
cs
fwait
(bad)
cs
or
or
test
pop
fwait
(bad)
cs
or
or
cs
fwait
(bad)
cs
or
or
test
pop
fwait
(bad)
cs
or
or
cs
fwait
(bad)
cs
or
or
test
pop
fwait
(bad)
cs
or
or
cs
fwait
(bad)
cs
or
or
test
pop
fwait
(bad)
cs
or
or
cs
fwait
(bad)
cs
or
or
test
pop
fwait
(bad)
cs
or
or
test
pop
fwait
(bad)
cs
or
or
inc
cs
or
or
test
pop
fwait
(bad)
cs
or
or
inc
cs
or
or
test
pop
fwait
(bad)
cs
or
or
inc
cs
or
or
test
pop
fwait
(bad)
cs
or
or
inc
cs
or
or
test
pop
fwait
(bad)
cs
or
or
inc
cs
or
or
test
pop
fwait
(bad)
cs
or
or
inc
cs
or
or
test
pop
fwait
(bad)
cs
or
or
inc
cs
or
or
test
pop
fwait
(bad)
cs
or
or
inc
cs
.byte
