mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
mov
ins
jae
add
jb
lea
sub
add
inc
outs
jae
inc
push
sar
inc
nop
inc
or
add
mov
add
dec
outs
je
addr16
sub
shl
data16
add
jns
test
push
outs
jb
adc
cwde
daa
or
imul
lahf
scas
(bad)
call
xor
mov
push
mov
int3
mov
or
xchg
enter
jl
mov
je
mov
add
push
or
push
imul
xor
or
(bad)
pop
xchg
es
mov
or
push
popa
push
popa
out
push
xor
or
mov
cwde
push
add
or
xor
and
les
fcomp
in
clc
cmp
push
pop
push
dec
bound
arpl
pop
sbb
push
push
jns
mov
and
or
lods
clc
push
fnstenv
popa
arpl
add
pop
jg
jo
inc
add
imul
div
rcr
add
fdivr
xchg
clc
jmp
adc
jnp
mov
jne
int3
and
sub
xor
jns
inc
cs
push
dec
push
leave
minps
inc
adc
xchg
ins
push
test
mov
les
push
std
fs
outs
clc
mov
mov
push
inc
popa
xor
loopne
and
xchg
xchg
mov
push
or
add
leave
enter
mov
pushf
pop
hlt
lock
je
pushf
pushf
pushf
call
pushf
pushf
pushf
fcom
ror
pushf
pushf
pushf
pushf
enter
pushf
pushf
pushf
pushf
jo
mov
pushf
pushf
pushf
pushf
fs
pop
lods
pushf
pushf
pushf
pushf
test
push
push
stc
aas
mov
les
inc
ret
mov
pop
dec
ret
dec
mov
mov
push
add
mov
dec
sbb
push
call
sub
je
movzx
cmp
fisttp
ret
cmps
jbe
mov
jp
cli
jb
in
add
pop
xchg
popa
jne
stos
mov
ins
jmp
fbstp
imul
and
xor
xor
sub
imul
and
imul
fnsave
jae
pop
or
push
push
je
popa
inc
inc
gs
ins
outs
clc
(bad)
sbb
jo
jo
inc
mov
gs
in
scas
xor
es
enter
imul
jmp
arpl
cmps
fs
test
lahf
mov
stos
lods
bound
cmp
or
jp
jle
popa
dec
outs
mov
jne
pop
outs
and
test
in
ins
jnp
and
shr
outs
outs
ja
add
es
outs
jno
in
or
and
dec
dec
cs
in
mov
mov
mov
mov
mov
dec
add
inc
or
shl
or
or
mov
and
adc
push
adc
xor
rcl
adc
adc
ficomp
mov
or
sbb
cs
jp
imul
and
sub
inc
cmp
xor
dec
sub
xor
xor
mov
cmp
shr
aad
bound
add
dec
inc
inc
imul
jmp
inc
enter
fnstcw
fistp
add
jl
push
cmp
xor
jge
rcl
in
and
mov
inc
pop
add
div
and
mov
add
outs
pop
mov
cmp
mov
mov
jmp
inc
mov
shr
movzx
mov
and
imul
jne
pop
mov
and
sub
mov
mov
inc
sbb
and
add
ja
or
xchg
mov
cmp
mov
add
inc
les
(bad)
mov
loopne
out
xchg
out
gs
sbb
loopne
cmp
into
hlt
outs
mov
cld
add
or
adc
xor
add
clc
cmp
jmp
lock
and
sub
mov
in
ins
mov
mov
cmp
fadd
push
push
dec
cmc
not
add
and
add
add
test
mov
mov
loop
sbb
cmp
loopne
in
(bad)
sti
push
sub
mov
mov
sub
stc
data16
scas
sbb
xor
mov
cmp
mov
sub
dec
frstor
out
nop
mov
mov
sbb
add
loopne
sbb
xor
lds
push
push
mov
adc
outs
mov
mov
push
fwait
mov
pop
push
pushf
push
xchg
mov
sti
stc
pop
lock
or
pushf
or
mov
or
fsubr
inc
ss
add
fucom
fwait
mov
pop
pop
pop
pop
faddp
add
mov
sub
in
mov
jae
(bad)
jle
adc
mov
push
and
or
shl
or
in
outs
loop
jns
push
outs
inc
(bad)
jmp
or
cmp
in
push
push
lea
push
push
out
leave
in
add
hlt
pop
push
jne
push
popf
call
je
adc
out
jbe
sub
add
jmp
test
jne
lods
mov
lods
mov
in
scas
dec
sti
or
jg
mov
clc
sub
mov
fadd
fidivr
(bad)
sti
inc
outs
loope
pop
shl
add
cmp
jbe
jmp
out
mov
adc
xchg
xor
push
mov
cmp
(bad)
in
test
jo
fs
mov
stos
inc
push
cmp
jae
mov
add
dec
and
add
ret
jae
fdiv
pusha
lods
dec
aaa
sbb
iret
lea
sbb
push
mov
rol
pop
mov
dec
mov
pusha
or
lds
imul
or
add
jbe
ret
push
addr16
or
mov
iret
xchg
mov
ins
mov
shr
cmp
jb
add
das
(bad)
dec
push
dec
(bad)
and
mov
test
ret
hlt
shl
lea
push
add
mov
ja
je
in
jmp
sbb
jo
push
xor
mov
inc
or
lock
fisub
sub
mov
jmp
idiv
je
(bad)
and
add
mov
mov
add
sar
or
jbe
mov
cmp
loope
jbe
adc
es
mov
lods
pusha
and
and
xchg
xor
and
jns
lock
retf
aas
je
jb
jae
lods
cmp
cmp
cdq
imul
and
xchg
mov
ret
inc
or
mov
pusha
(bad)
jg
bsf
lea
mov
adc
and
cld
mov
cmp
add
jle
push
add
cmp
jne
mov
mov
pop
btr
mov
push
jle
pusha
or
ins
mov
dec
jnp
xchg
add
sbb
cli
lea
mov
scas
fild
pop
sbb
das
cmp
jb
mov
aas
sbb
add
mov
mov
jmp
ds
sbb
(bad)
jg
or
mov
fs
cld
test
cld
xor
das
mov
mov
mov
scas
fsub
lea
imul
mov
cdq
sbb
fisttp
sub
ficom
fucomip
jecxz
add
or
fadd
(bad)
xor
jne
lea
cmp
mov
or
mov
fdiv
push
je
loope
rol
or
jmp
mov
mov
xor
add
push
loopne
lahf
push
bsf
mov
shl
xor
add
adc
fdiv
cmp
mov
jmp
mov
dec
ret
jo
pop
or
mov
inc
cmp
(bad)
or
inc
bound
xchg
adc
test
push
pop
xor
or
sub
setno
(bad)
test
test
adc
cli
nop
and
mov
test
(bad)
out
push
rol
test
add
mov
jne
sub
sub
je
pop
ror
push
inc
inc
fadd
data16
sar
cmps
xchg
dec
pop
mov
cmp
push
ret
inc
adc
cmp
jne
aaa
cwde
dec
inc
and
push
cld
iret
push
dec
rol
mov
scas
out
pop
icebp
jmp
outs
mov
jns
or
aam
inc
add
call
add
lock
mov
jle
scas
test
jne
or
ret
lahf
lock
test
jne
cmp
inc
fsubp
popa
ret
dec
inc
pop
xor
xchg
mov
xlat
mov
pop
and
ret
dec
das
jl
add
cmp
pop
rcr
sub
sub
adc
mov
lahf
cmove
xchg
add
add
add
inc
cld
ret
test
pop
mov
loopne
add
fs
aad
popa
jo
pop
push
in
or
in
shr
cmp
jb
sbb
inc
popa
jo
jb
retf
jb
jns
jb
lock
pop
lds
ret
jg
dec
ror
(bad)
lea
push
mov
shl
loop
rol
add
hlt
int
ss
jbe
clc
iret
mov
jmp
sbb
clc
xor
ret
and
retf
mov
add
jecxz
adc
retf
cvttps2pi
cmp
jb
sbb
adc
add
sub
adc
sub
mov
lea
retf
in
xor
cmp
les
push
jge
(bad)
mov
push
cmp
mov
(bad)
and
or
mov
push
mov
add
or
push
jmp
data16
mov
rol
xlat
idiv
lds
add
add
sahf
sub
sbb
push
inc
mov
out
add
sbb
lock
call
imul
add
scas
loope
cmp
cmp
dec
fistp
iret
fs
pusha
pusha
call
psubq
iret
ja
cmp
or
pop
mov
call
mov
loopne
jmp
rol
add
pop
add
xor
and
push
add
push
ret
push
add
jb
lea
jg
mov
lds
add
adc
fisttp
ret
pop
inc
push
push
xor
jecxz
loop
cmp
je
xor
xor
add
loopne
neg
push
lea
push
cmc
popf
fsubp
cld
(bad)
(bad)
lea
or
xor
neg
fldz
fst
add
js
or
rcr
outs
icebp
mov
clc
mov
mov
hlt
mov
in
ror
lods
adc
test
jne
xor
dec
sbb
(bad)
je
mov
adc
mov
and
rcl
sbb
je
mov
jg
(bad)
jg
je
ret
jp
adc
inc
adc
mov
cmp
jbe
mov
jae
lock
sub
sbb
add
fmul
or
jb
mov
scas
ret
xchg
es
mov
mul
ins
push
mov
aaa
sub
inc
loop
pop
shr
mov
or
(bad)
cmp
(bad)
inc
sbb
rdmsr
in
mov
or
das
inc
xchg
dec
aaa
sbb
xchg
add
pop
sbb
in
mov
inc
sub
enter
retf
cdq
push
aas
adc
pop
xor
inc
add
xchg
fild
inc
and
ret
adc
(bad)
pop
sub
cmp
pop
mov
inc
inc
ds
adc
mov
dec
mov
inc
sbb
rcr
das
or
in
push
test
mov
push
loopne
arpl
push
cmp
ja
add
push
ficomp
add
push
lock
push
jae
std
lea
mov
push
adc
mov
imul
sbb
add
push
adc
adc
test
xor
div
xchg
call
add
dec
pop
fimul
not
mov
dec
sub
call
pushf
sub
pop
pop
mov
std
idiv
aas
sbb
sbb
test
daa
dec
dec
neg
mov
inc
adc
lea
mov
and
enter
cmp
fistp
add
cld
sbb
mov
push
xor
mov
pop
dec
fistp
pop
mov
dec
nop
or
mov
in
aaa
test
push
sbb
leave
add
mov
cmps
loope
mov
not
and
aas
imul
sbb
add
scas
add
jp
shr
xor
sub
mov
mov
stos
stos
push
pushw
mov
sbb
enter
dec
icebp
mov
pop
mov
cmp
jne
add
push
mov
push
mov
fldenv
mov
or
fstp
loopne
fsub
or
cld
mov
call
mov
or
lea
lea
lea
test
les
in
adc
jb
cmp
fcomp
call
sbb
xchg
pushw
and
xor
dec
or
cmp
je
in
iret
push
pusha
aaa
pop
pop
mov
test
pop
inc
push
test
lea
jnp
ins
xlat
jge
inc
hlt
adc
jge
test
les
or
fs
inc
imul
push
retf
mov
ror
hlt
add
mov
push
sbb
xor
mov
sub
inc
jecxz
jg
dec
neg
jne
sahf
arpl
jl
jle
adc
cmp
add
jecxz
mov
cmp
jae
add
xor
dec
jne
cmp
test
inc
sar
jmp
xchg
aaa
or
xor
in
pusha
xchg
and
cdq
fild
pop
adc
cmp
je
or
inc
cmp
inc
sahf
movq
inc
mov
add
fmul
xchg
xor
push
mov
mov
push
dec
jne
bound
loopne
push
pop
mov
jnp
mov
lock
daa
sbb
fadd
inc
add
test
push
mov
les
mov
adc
stos
jb
call
fdiv
(bad)
sbb
add
or
jmp
sbb
fnstcw
aaa
and
add
mov
and
nop
cdq
push
xor
(bad)
mov
mov
xchg
cmp
ret
jecxz
shld
jne
mov
retw
cmc
ficom
ds
aaa
dec
adc
fld
mov
aad
in
adc
ds
dec
jl
cmp
mov
call
mov
fadd
in
lock
fadd
test
inc
aaa
add
loopne
js
outs
ret
xor
cld
dec
out
in
loope
out
shl
outs
add
in
mov
mov
(bad)
(bad)
scas
movs
jmp
xchg
cmp
xchg
xchg
add
jne
mov
nop
ss
call
push
neg
cmp
or
mov
jo
pushw
mov
and
push
sbb
adc
lods
or
pop
imul
or
sbb
jmp
je
dec
je
jmp
std
leave
rcr
jo
inc
mov
leave
cmp
inc
cld
pusha
fs
packuswb
sub
mov
mov
cmp
(bad)
stos
loopne
mov
push
sbb
pop
xchg
outs
cmp
sbb
jg
add
lock
push
pop
push
sub
push
mov
call
inc
xor
jae
call
imul
(bad)
mul
xor
dec
jne
mov
cmp
push
ins
sbb
stos
test
ror
xchg
inc
shl
xchg
or
mov
xor
mov
les
add
jne
mov
cmp
out
add
cmp
jbe
mov
in
mov
inc
add
cmp
jne
nop
ja
sbb
mov
mov
and
mov
inc
in
inc
clc
or
repnz
lock
rcr
add
add
call
add
mov
cmp
jbe
pop
scas
enter
loop
push
test
shl
add
mov
jmp
xor
loope
lea
add
shl
cmp
adc
or
dec
cmp
sub
mov
xor
div
data16
mov
jb
push
data16
(bad)
aas
pop
inc
xor
(bad)
xor
lock
cmp
xor
jne
mov
mov
ret
cmp
stos
push
repz
adc
jle
ret
fcom
push
push
mov
movs
jg
jnp
jmp
mov
add
std
cmp
ja
fabs
jne
mov
mov
or
mov
dec
imul
jne
sbb
movs
fstp
rol
dec
mov
jnp
outs
push
sbb
cmp
mov
mov
and
cmp
mov
jno
loopne
in
sbb
fmul
into
test
sbb
sbb
lea
pop
sbb
pop
pushf
mov
test
call
add
ret
mov
and
jbe
fisub
hlt
ret
cs
push
sub
adc
addr16
jne
ds
inc
or
shl
mov
inc
pop
pop
or
mov
inc
mov
xor
jnp
or
test
arpl
ss
jl
mov
mov
mov
int3
ret
aas
add
jle
push
push
and
or
addr16
retf
cmp
inc
rol
out
jge
sti
inc
jmp
out
ret
mov
push
xor
out
jmp
xchg
neg
and
js
or
daa
int3
push
cmp
or
jo
psubb
push
(bad)
movs
adc
and
xor
mov
test
push
push
push
lea
pop
pop
jne
hlt
pusha
adc
retf
call
mov
not
inc
nop
sbb
shl
stc
and
jl
jmp
and
lods
xor
push
sub
or
or
adc
sbb
or
adc
cmp
sub
or
push
adc
repz
repz
xor
dec
imul
scas
fist
lea
dec
or
adc
fld
pushaw
or
jl
pushf
sbb
ret
sbb
jnp
jle
or
shr
retf
adc
jbe
adc
mul
pop
add
clc
sub
pop
inc
cmc
pop
dec
sub
or
ja
fistp
adc
and
pop
add
pop
cmp
stos
into
rcl
add
ret
mov
(bad)
hlt
mov
jmp
in
pushf
adc
push
inc
mov
jns
cli
and
or
and
js
or
cmp
fisub
ins
fsub
xor
jmp
and
and
pop
xchg
cmp
jmp
inc
imul
(bad)
cmp
pop
mov
imul
xor
inc
push
test
adc
in
dec
outs
xchg
jmp
ret
je
les
push
jg
fistp
push
push
push
mov
xor
add
int
icebp
sbb
and
adc
pop
fsubrp
div
cmp
add
jmp
pop
pop
pop
pop
adc
jo
push
(bad)
mov
ret
mov
jo
lock
shl
mov
(bad)
hlt
std
scas
dec
movs
and
dec
cmp
div
push
adc
cs
push
and
push
call
je
clc
mov
mov
hlt
dec
jmp
movs
or
jmp
xor
(bad)
clc
push
leave
cmp
imul
mov
pop
ins
cmp
xor
imul
or
adc
mov
jg
fnclex
fldcw
cmp
pop
outs
(bad)
mov
or
jmp
fsubr
(bad)
lock
fmulp
jge
inc
fscale
fstp
pop
ret
aas
in
cs
fwait
and
in
mov
scas
push
or
fnstcw
fdivrp
jl
add
add
fldcw
add
fldcw
pop
popf
jmp
lods
adc
shr
mov
add
jmp
ins
jmp
and
jp
call
pop
sbb
pop
cmp
lock
sahf
pop
cmp
and
scas
addr16
lea
and
push
ins
aam
mov
sbb
test
mov
dec
inc
cmp
mov
ja
and
adc
add
push
mov
adc
jmp
pop
retf
cmp
mov
mov
test
ror
jb
cmp
cs
dec
ja
mov
mov
mov
inc
add
rep
or
enter
test
or
fld
lods
stc
mov
jbe
mov
mov
inc
inc
leave
xor
jg
iret
pop
push
mov
shr
je
lock
fnstenv
dec
je
or
xchg
test
add
cmp
frstor
add
pop
and
je
mov
cmp
jne
push
call
add
dec
sahf
adc
add
test
add
sbb
js
cmp
into
xor
push
cmp
jmp
sbb
push
addr16
shr
aas
pop
fs
push
aad
mov
adc
add
adc
fst
shl
loope
mov
shl
fisubr
not
jl
sbb
pusha
add
push
mov
pop
inc
mov
aaa
jmp
out
push
sbb
push
adc
fnstsw
out
push
or
inc
loopne
(bad)
push
or
xchg
mov
push
inc
add
jo
cmp
movs
mov
int3
add
push
add
cmp
je
mov
push
sub
cld
cld
or
je
and
je
je
pop
je
(bad)
dec
mov
xor
arpl
push
push
pushw
fstp
(bad)
daa
or
or
cmp
ja
ror
add
add
gs
dec
sar
or
push
neg
jle
js
pop
sub
(bad)
into
jp
jmp
inc
dec
jmp
mov
push
jnp
(bad)
sahf
popa
jb
mov
mov
or
outs
repz
(bad)
mov
retf
fwait
ret
pop
xor
shr
mov
fild
fisttp
stos
sub
inc
mov
sbb
rcl
jae
or
inc
jg
pop
pop
(bad)
mov
and
daa
ret
call
(bad)
or
inc
dec
jne
mov
sub
nop
mov
call
adc
out
mov
push
fnstenv
stos
outs
pop
mov
lods
push
mov
mov
test
je
sub
je
das
cmc
cmp
je
inc
and
cmp
push
pop
xchg
retf
xchg
jge
mov
xor
pop
push
cdq
stc
sbb
jmp
fstp
fld
sub
add
fldz
movs
sti
cmp
in
jg
aas
mov
stc
in
cmp
inc
pushf
or
ret
psubw
inc
ds
adc
mov
and
sub
sbb
add
mov
mov
push
es
test
mov
mov
adc
xor
leave
sbb
mov
mov
inc
jbe
imul
cmp
mov
(bad)
mov
fwait
jg
aas
bound
cmp
xlat
fadd
jmp
(bad)
outs
xor
xchg
push
or
push
push
int3
into
sbb
ror
(bad)
(bad)
inc
test
popa
push
pop
test
enter
mov
inc
cmp
and
daa
(bad)
retf
into
pop
inc
test
jg
dec
xchg
clc
js
aas
cmp
xlat
pop
(bad)
mov
addr16
(bad)
(bad)
(bad)
dec
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
dec
js
(bad)
jmp
inc
mov
stos
mov
cmp
or
mov
pop
out
sub
push
daa
cmp
inc
xor
cmp
call
mov
(bad)
(bad)
(bad)
(bad)
sti
jmp
stos
push
inc
mov
push
sbb
sar
repnz
test
nop
fild
daa
(bad)
(bad)
(bad)
jmp
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
(bad)
(bad)
(bad)
dec
inc
bound
ds
push
cmps
scas
mov
pop
or
add
jmp
cmps
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmps
lock
mov
popa
(bad)
(bad)
inc
cld
mov
and
addr16
repz
mov
sub
and
cld
jmp
and
outs
bound
xor
ins
mov
xor
int
in
sbb
hlt
ficomp
sbb
add
call
add
adc
pop
pop
push
das
hlt
movzx
lock
mov
sar
add
inc
aam
dec
jnp
xchg
pop
jbe
cmp
inc
hlt
xor
(bad)
xor
hlt
push
data16
add
mov
fsubr
sub
sub
out
jecxz
and
inc
mov
aas
or
inc
sbb
dec
fimul
dec
add
mov
push
add
pop
add
outs
add
ins
add
mov
outs
add
inc
add
jo
push
mov
add
add
dec
dec
jae
imul
scas
jo
in
push
inc
jne
add
jecxz
cmc
fdivr
sbb
mov
mov
sbb
(bad)
sbb
loopne
push
enter
jp
jg
or
in
clc
mov
lock
inc
adc
sub
cmp
lea
mov
push
inc
cmp
ds
jae
sub
js
pop
or
and
add
xchg
ret
mov
mov
ins
mov
jno
fadd
mov
and
rcl
fild
add
and
and
pop
aaa
jle
lock
or
int3
outs
test
mov
les
lods
push
xor
xor
(bad)
ins
mov
push
xor
inc
cld
dec
pop
mov
mov
test
call
pop
(bad)
call
stos
mov
xor
push
shr
dec
rep
pop
and
rep
mov
mov
sub
add
pop
rol
xor
push
jp
in
cmp
je
pop
mov
(bad)
sbb
mov
div
push
mov
mov
push
sbb
jne
jne
add
lods
(bad)
mov
mov
mov
sub
push
push
mov
pop
inc
mov
push
or
fs
xchg
cmp
inc
add
paddd
(bad)
add
jmp
dec
pop
or
cmp
shl
mov
xchg
cmp
aam
dec
cmp
hlt
fisttp
clc
cmps
daa
adc
enter
inc
sub
aaa
add
das
mov
adc
mov
scas
cli
add
ds
pop
mov
jmp
lea
push
sbb
cs
out
pop
dec
lds
and
jno
ss
push
mov
out
shr
sti
mov
cmp
jne
jb
cmp
jne
push
or
jne
lock
and
fcom
(bad)
and
rol
xchg
xchg
xor
mov
dec
(bad)
cmp
ror
mov
leave
jne
mov
sbb
nop
push
xchg
jmp
bnd
add
jg
push
add
repnz
je
pop
adc
add
push
icebp
lock
sub
inc
cld
pop
xchg
push
mov
pop
je
pop
pop
adc
out
mov
xchg
outs
xor
das
mov
ror
ja
es
mov
mov
jg
or
mov
mov
push
data16
jl
cmp
xchg
push
lds
mov
rol
add
pop
cmp
sbb
add
clc
inc
les
ficom
mov
push
inc
cdq
std
rol
push
jmp
mov
cmp
push
inc
add
add
les
push
call
ins
sbb
aam
(bad)
push
test
(bad)
xor
xor
mov
(bad)
jo
rcl
dec
push
cmp
mov
dec
jne
or
jmp
test
add
push
jmp
push
lea
xor
js
(bad)
jg
pop
cwde
jmp
xor
test
jne
xor
psubusw
dec
scas
clc
and
jne
lock
inc
add
mov
arpl
jmp
push
into
iret
xor
and
mov
xchg
and
fcomp
cmp
jl
jl
jmp
sub
jmp
daa
jmp
push
pop
add
daa
jns
mov
das
xor
push
(bad)
jg
scas
push
mov
xor
lea
mov
mov
mov
call
fld
mov
ins
or
pop
or
mov
jo
pop
lea
push
or
push
cli
push
xor
cmp
jmp
xor
dec
and
dec
jo
mov
movs
mov
scas
sub
popf
aam
push
pop
dec
jg
lods
jae
addr16
call
sbb
rol
or
pushf
ret
ins
xchg
inc
jl
cmp
jp
cmp
inc
add
and
push
add
add
jl
ret
xchg
lock
mov
add
pop
test
add
test
fcomip
ins
or
cli
in
push
call
pop
push
jo
in
or
cmp
sbb
sahf
imul
add
add
or
jae
xor
xlat
pop
or
and
sbb
cli
aaa
sar
push
movsx
inc
inc
out
sar
loope
add
push
addr16
aam
mov
jecxz
pop
(bad)
mov
push
cdq
popf
adc
loop
test
mov
xchg
adc
cld
add
inc
test
pop
fs
dec
cmp
add
je
sbb
adc
je
je
shl
outs
or
add
je
outs
pop
imul
sub
add
lea
add
pop
xchg
loope
shl
sub
sbb
repnz
ins
jmp
adc
adc
es
push
jns
outs
mov
or
rol
xchg
dec
jp
push
cmp
sub
push
sbb
xchg
and
push
cmp
jle
outs
jo
add
inc
add
push
add
test
(bad)
mov
and
sbb
mov
mov
cmovno
xor
pop
(bad)
push
or
inc
xchg
pop
dec
or
add
jne
aaa
push
enter
mov
stos
mov
lea
mov
jl
inc
or
cmp
mov
ins
aas
dec
clc
xor
ret
int3
cmp
fiadd
mov
ins
mov
or
mov
jg
push
out
adc
call
mov
dec
jne
cmp
push
fsubp
shl
outs
inc
call
out
daa
push
xchg
inc
mov
adc
or
add
adc
mov
mov
push
mov
jno
and
dec
lds
mov
add
sbb
pusha
adc
call
and
dec
or
xor
mov
dec
add
push
pop
mov
call
std
lods
adc
lahf
adc
and
loope
pusha
in
push
dec
test
movs
popf
add
in
dec
lds
out
or
add
iret
stos
add
je
cdq
pusha
das
xchg
mov
jg
adc
lds
aas
out
and
dec
(bad)
dec
jnp
mov
and
xchg
push
cmp
jg
or
loopne
mov
mov
call
bound
call
shr
mov
or
lea
pop
jmp
int
xor
xchg
clc
mov
loopne
aas
pop
push
push
push
push
adc
loopne
pop
pop
call
pop
sbb
cmp
fwait
cmps
imul
adc
add
clc
or
mov
dec
push
pusha
loop
mov
mov
sbb
aam
add
nop
add
pop
popa
mov
pop
sub
popa
push
data16
ror
cmc
cmps
cmp
and
mov
or
pusha
add
loopne
inc
pop
pop
or
or
xchg
mov
mov
mov
xor
test
pop
mov
sub
repz
pop
test
hlt
ret
xor
sbb
aas
scas
or
inc
shl
add
loope
data16
(bad)
jg
je
cmp
push
sub
jmp
fistp
jmp
add
add
je
jmp
push
stc
out
push
cmp
cmp
adc
jmp
call
sbb
es
enter
leave
jmp
mov
dec
mov
jmp
push
sbb
into
or
fsubr
push
mov
jmp
pop
or
ret
mov
mov
or
or
pop
ret
enter
fisttp
movs
dec
jno
loop
rol
pop
adc
jno
sbb
inc
sbb
sti
adc
ret
loop
mov
push
mov
call
(bad)
push
(bad)
mov
pshufw
lock
or
fmulp
les
push
ins
inc
mul
inc
or
sbb
cmp
bound
push
out
or
ret
stos
cmp
jne
call
push
pmaxsw
hlt
sbb
dec
mov
or
dec
dec
cmp
daa
test
jle
dec
mov
je
add
xchg
push
jg
jmp
inc
push
ret
jo
test
shl
bound
leave
idiv
xor
fist
sbb
cs
(bad)
sti
jle
ss
inc
xlat
iret
cmp
call
jmp
jl
fpatan
clc
adc
sbb
adc
add
popf
mov
add
mov
xchg
pusha
(bad)
movs
adc
fadd
or
sbb
dec
dec
ins
ret
cld
clc
fldenv
jp
adc
mov
pusha
and
adc
dec
test
cmps
push
popf
dec
and
nop
jo
neg
test
sub
push
sub
lock
lea
mov
push
add
test
fimul
je
add
int3
leave
mov
jmp
cmp
add
dec
jne
mov
pop
das
xchg
mov
inc
or
xchg
out
mov
dec
in
xchg
add
jmp
xor
xor
inc
inc
inc
inc
inc
inc
and
push
aaa
lock
mov
xor
ret
push
stc
add
adc
mov
and
and
(bad)
dec
movs
fadd
sbb
add
loopne
inc
dec
lods
xchg
fist
ror
dec
pusha
jbe
dec
popa
xlat
mov
fist
jl
(bad)
mov
outs
adc
ja
add
mov
mov
or
movs
cmp
stc
neg
sbb
inc
inc
mov
nop
push
xchg
iret
fistp
cmp
adc
cmp
mov
aam
dec
or
or
pushf
addr16
and
adc
ret
pop
out
xor
inc
pop
xlat
mov
jne
cmps
test
jbe
fs
cmp
outs
mov
loopne
into
clc
mov
cmp
or
xchg
outs
daa
dec
loopne
adc
rol
dec
sbb
sbb
jg
adc
mov
jle
xor
mov
mov
pop
call
sbb
icebp
xor
jne
xchg
add
lock
inc
add
shl
aad
adc
pop
and
lds
ins
fsubr
imul
adc
test
mov
sub
mov
pop
je
movs
imul
push
push
push
jle
(bad)
ja
or
add
push
and
hlt
pop
sbb
cmp
(bad)
pop
pop
mov
adc
push
clc
push
push
pop
jno
mov
mov
aas
nop
ret
cmc
lea
mov
inc
jle
xchg
sub
or
xor
inc
mov
loopne
lock
leave
push
inc
retf
mov
cmp
dec
jb
push
push
adc
pop
shl
call
xor
in
mov
ret
sub
fldcw
mov
or
sahf
test
or
sbb
(bad)
cmc
lea
sbb
ret
push
add
push
mov
sub
sub
and
push
dec
adc
mov
cmp
lahf
adc
stos
xor
movs
sbb
pop
mov
clc
dec
jl
lock
hlt
pop
sub
xchg
inc
mov
or
add
or
mov
(bad)
jne
into
dec
cmp
jp
add
sbb
rcl
jmp
outs
inc
jg
movs
inc
addr16
sti
scas
test
inc
sub
cld
cmp
cs
inc
clc
xchg
in
add
mov
aad
mov
jle
xchg
jle
sbb
ror
cmp
(bad)
bound
clc
data16
repnz
test
mov
cld
inc
push
mov
hlt
data16
dec
imul
push
and
clc
mov
rcl
loop
jne
cmp
cmp
jo
lds
fld
sub
sbb
jns
xor
push
push
or
jle
and
aaa
loope
or
mov
pop
xlat
push
push
shr
call
and
adc
ret
das
adc
add
hlt
pusha
fs
push
or
lahf
pusha
ret
or
sub
(bad)
sbb
cwde
ret
cmp
push
pop
rcr
push
dec
sub
cmp
or
rcr
mov
clc
add
fiadd
jg
(bad)
adc
push
adc
lods
add
inc
sbb
add
outs
push
lds
stos
and
xor
fisttp
mov
jle
dec
pop
dec
das
dec
pop
sub
ins
ja
mov
jmp
scas
cmps
fstp
cmps
lahf
push
mov
push
mov
ret
sub
mov
idiv
push
cmp
je
mov
je
jle
inc
mov
jmp
inc
add
jmp
sub
push
stc
cmp
je
push
outs
or
in
add
in
gs
jg
or
push
cld
jp
push
push
jbe
jg
lock
scas
sub
pop
add
pop
pop
pop
cmp
mov
add
mov
mov
nop
adc
fnstcw
and
mov
test
movs
jb
popf
pop
and
cmp
into
dec
dec
(bad)
fstp
add
enter
mov
dec
mov
dec
ror
into
je
in
push
push
ins
call
sbb
adc
cmp
add
add
or
inc
pop
adc
mov
sub
add
jo
and
dec
hlt
mov
mov
adc
adc
pop
add
fldcw
or
adc
or
mov
mov
push
mov
ret
(bad)
rol
mov
je
cmp
push
enter
daa
xor
nop
rcl
add
ror
sub
ror
rcl
adc
xor
lock
mov
mov
push
jo
push
adc
js
lock
mov
add
jo
inc
inc
sub
ss
retf
push
jmp
push
mov
push
enter
jp
or
adc
mov
pop
add
fstp
js
dec
arpl
jmp
jns
retf
mov
sub
cwde
sbb
xor
ror
sbb
dec
ds
loop
popa
pop
mov
and
fimul
push
hlt
fimul
loopne
add
jno
cld
cmp
jne
iret
mov
dec
jmp
(bad)
fisub
push
add
stos
xor
cwde
lock
sbb
test
mov
mov
pop
pop
mov
inc
dec
jne
mov
xchg
div
xchg
dec
sbb
(bad)
jge
push
add
dec
jmp
lahf
jbe
jnp
add
dec
les
adc
in
xchg
inc
add
call
test
jge
add
cmp
das
shl
mov
lea
pop
pop
rol
mov
test
loopne
out
cmp
jecxz
rcl
push
xchg
shr
fs
add
in
js
xlat
pop
(bad)
xor
mov
jne
push
mov
sub
push
adc
and
(bad)
dec
sub
sub
mov
xor
jne
push
je
cmp
repz
pop
aad
or
or
loope
popfw
cmp
pshufw
(bad)
mov
add
jns
mov
cmp
pop
pop
jmp
mov
inc
jp
jne
ret
cmp
out
lock
aad
xchg
mov
adc
add
push
mov
stc
stos
mov
daa
js
iret
dec
test
push
lahf
add
es
je
push
into
lods
ret
sub
mov
inc
fdivr
sub
movsx
pop
push
inc
dec
jl
cmp
xchg
sub
jl
cmp
xor
jne
add
(bad)
mov
sbb
push
pop
inc
jmp
mov
cli
add
and
jmp
push
jmp
add
retf
pop
sbb
pushf
xor
xor
xor
xor
dec
jl
dec
sbb
sub
jle
sub
sar
call
lea
aad
cmc
dec
hlt
add
sub
fistp
cmp
lock
sbb
jb
mov
cmp
cmp
jl
or
add
add
shld
fcom
enter
push
lds
adc
lods
out
add
add
dec
in
je
jmp
or
jb
je
mov
jb
iret
repz
and
in
xor
jo
xchg
sub
test
xor
push
push
test
jne
push
or
ja
and
and
jle
add
cmp
(bad)
sub
pop
movs
adc
jne
push
icebp
arpl
stos
pop
sbb
int
ins
jp
je
jns
cwde
push
xchg
jle
sub
movs
fimul
mov
mov
xacquire
xor
jmp
jo
jo
repnz
int3
pop
sbb
and
add
adc
stos
lock
cmp
mov
das
gs
push
xor
retf
lds
cli
dec
cmp
or
mov
push
mov
andnps
cld
xchg
adc
xor
daa
into
push
stos
mov
push
push
add
loope
fs
push
push
sub
mov
in
call
sub
push
arpl
call
aam
jo
dec
test
je
cmp
ss
cld
aas
and
call
dec
dec
jmp
lea
test
inc
add
push
mov
out
xlat
push
cld
mov
xor
inc
inc
adc
aaa
xchg
push
retf
dec
pop
jmp
lea
sbb
mov
xor
dec
adc
sub
push
dec
daa
ds
sub
dec
dec
lods
jle
call
sbb
test
pop
push
mov
repz
imul
ror
pop
loopne
sbb
adc
aad
mov
mov
movs
in
retf
pop
xchg
je
int3
mov
push
pop
inc
cvtps2pi
or
xchg
retf
movs
dec
dec
dec
rol
xor
inc
fs
lea
loope
icebp
jl
xlat
mov
and
lods
push
jle
mov
jo
ja
pusha
push
shr
push
mov
lahf
aaa
fwait
pop
inc
dec
dec
add
pop
xor
(bad)
or
xchg
in
adc
add
and
mov
add
inc
and
push
sbb
adc
ja
or
pop
das
or
push
in
adc
call
imul
xor
jge
xor
jmp
dec
cmp
movs
mov
sbb
icebp
jle
mul
cmp
and
in
or
rol
rol
sbb
jecxz
(bad)
xchg
aas
add
cmp
aam
fmul
inc
nop
in
movs
xor
enter
or
rol
push
or
cmp
call
enter
into
sar
cmp
inc
mov
daa
mov
sub
push
or
mov
jle
daa
(bad)
hlt
mov
inc
lods
pop
scas
push
jbe
pop
dec
loop
nop
sahf
dec
cld
js
cmps
pop
nop
punpcklbw
sub
push
in
mov
xchg
sbb
shl
fcmovbe
push
loop
push
cmps
jle
into
les
lods
cmp
ret
mov
leave
xchg
addr16
daa
stc
push
and
cs
jo
mov
jo
push
jl
xchg
push
push
mov
dec
in
sbb
pop
push
adc
sbb
jmp
adc
and
cmp
lods
das
scas
xor
jmp
mov
pop
mov
inc
cli
sahf
ret
(bad)
push
loop
pop
jge
dec
in
pop
jno
(bad)
das
or
pushf
jno
neg
fcmovnbe
fisttp
inc
pop
mov
mov
scas
add
dec
sbb
mov
and
or
imul
inc
pop
add
pop
pmaxub
mov
mov
fwait
cmp
add
fdivr
shl
movs
inc
and
pop
inc
bound
call
mov
lea
lea
and
arpl
movs
and
pop
fcom
cmps
lahf
fnstcw
jo
sub
je
aad
mov
add
jo
mov
ret
frstor
add
add
xchg
push
dec
xchg
pop
fst
cmp
add
nop
xchg
retf
ins
xchg
test
push
and
adc
fisubr
(bad)
ds
xchg
pop
xlat
retf
and
or
xchg
in
add
fwait
or
dec
jne
nop
jbe
retf
inc
or
dec
in
sub
enter
je
mov
movs
and
jnp
ss
xchg
cmp
xchg
push
mov
inc
fisttp
fst
mov
loop
dec
addr16
mov
retf
or
arpl
fs
adc
pop
pop
sbb
int
xor
pop
dec
int3
dec
inc
mov
mov
aas
xchg
imul
je
jle
and
push
cmp
repz
jmp
call
inc
jge
push
shl
sub
or
adc
jl
in
daa
jecxz
push
in
call
call
xchg
push
daa
and
lds
cmp
jge
or
pop
jle
(bad)
lea
dec
add
adc
inc
sub
shr
xor
cdq
or
dec
adc
xchg
add
int3
daa
rol
pop
xlat
mov
stc
outs
(bad)
and
cmp
fucomi
pop
dec
cmp
fadd
imul
idiv
fdivr
aam
jbe
pop
or
add
mov
inc
adc
push
sbb
push
cmps
and
loopne
test
shl
adc
in
sub
test
movs
add
repnz
push
loopne
cmp
pushf
cmp
jno
add
(bad)
jl
adc
cs
push
sub
sub
mov
pop
and
pop
call
adc
sub
loop
inc
adc
jge
or
leave
xchg
and
push
loopne
adc
cmp
xchg
lock
push
clc
(bad)
jle
popa
push
jne
jle
call
jmp
(bad)
(bad)
cmp
js
es
jge
or
mov
pop
xchg
dec
sub
aam
jge
call
hlt
jnp
pusha
or
push
add
js
outs
mov
jle
dec
sub
cmp
pop
int
adc
push
adc
into
sub
inc
pusha
and
push
lds
xor
xor
dec
add
xor
sub
xor
cs
adc
xor
movs
cmp
jo
adc
add
out
pop
cmp
in
icebp
add
stos
push
adc
adc
dec
and
test
fld
cld
push
loop
js
(bad)
cld
jge
mov
jle
mov
shl
cmps
dec
sbb
adc
(bad)
les
mov
sub
call
in
sti
test
je
hlt
pop
lds
out
(bad)
cmp
mov
pop
cmp
dec
icebp
adc
and
pop
add
jnp
outs
mov
or
or
mov
lea
mov
loop
imul
call
lock
mov
or
bound
dec
mov
pop
enter
dec
dec
push
adc
or
pop
fst
xor
sar
lock
retf
stos
inc
sub
push
add
movs
shl
leave
and
pop
adc
xor
test
push
leave
or
call
sbb
adc
cmp
push
out
aas
push
call
mov
arpl
mov
adc
cmps
dec
xlat
push
or
rcr
adc
and
push
adc
push
or
pop
inc
je
cmp
cmps
adc
jle
push
xchg
jle
cmp
xor
push
mov
inc
jmp
jl
push
mov
jb
mov
aam
adc
out
sar
jg
push
retf
sub
(bad)
loop
(bad)
fistp
push
add
cmp
je
cmp
icebp
adc
cmp
je
cmp
je
cmp
je
cmp
test
je
mov
push
movs
xor
add
mov
rcr
or
adc
jmp
push
mov
mov
clc
call
mov
add
mov
adc
cmp
and
xlat
call
ins
sub
in
dec
ins
out
pop
jmp
push
scas
pop
xchg
ret
sub
add
cmp
pop
call
call
sahf
mov
jmp
jae
jo
sub
jb
adc
push
popf
shr
pop
xchg
out
dec
dec
enter
mov
ja
mov
pop
pusha
cmp
dec
add
dec
pop
or
pop
sti
dec
fsubr
outs
es
jl
nop
retf
or
repz
pop
xchg
inc
xchg
shr
sub
popfw
test
cmp
ins
dec
icebp
jmp
mov
pop
adc
xlat
pop
xchg
jg
or
(bad)
adc
jno
enter
mov
cmp
xor
push
iret
repz
mov
inc
pop
outs
jp
shr
stos
repnz
or
out
xor
lods
dec
in
push
cmp
push
pop
clc
xchg
enter
sbb
je
cs
sub
sbb
mov
inc
sbb
push
inc
add
mov
imul
loop
add
sub
jle
add
add
cld
nop
cli
sbb
or
xor
je
adc
je
ror
xchg
test
(bad)
jo
dec
xchg
adc
(bad)
sub
push
jnp
enter
es
repnz
in
inc
push
jnp
jge
dec
test
mov
inc
in
mov
inc
std
mov
out
push
or
adc
jmp
mov
in
out
aas
add
sar
xor
mov
ret
ins
in
cmp
fld
js
add
je
jne
mov
sbb
or
sub
test
and
xor
movs
jl
stos
mov
shl
sahf
jl
arpl
dec
jne
sub
and
xchg
dec
in
jl
mov
adc
push
add
cmp
cmp
(bad)
loope
ja
cmp
inc
call
lock
add
cmp
add
in
pushw
cmp
jmp
iret
je
adc
pusha
jo
lahf
popa
ins
sub
mov
push
jmp
mov
jne
push
lahf
cmp
adc
pop
ret
mov
cmp
xchg
pop
push
xchg
push
scas
lock
fisttp
icebp
lods
mov
pop
jbe
pop
lods
inc
sbb
or
mov
push
mov
pop
mov
pop
sbb
popa
(bad)
xor
sbb
jne
mov
gs
push
xchg
dec
jl
sbb
sub
ret
dec
call
and
leave
jmp
jle
shr
xchg
(bad)
pusha
pop
aas
clc
or
cld
adc
mov
sub
pop
xor
das
pop
sub
enter
nop
cmp
cmp
jne
cmp
mov
fisubr
popa
mov
dec
xchg
jmp
leave
arpl
fdivr
pop
aaa
cdq
jne
adc
pop
sti
mov
pop
push
aaa
es
xor
and
rcr
and
sub
addr16
adc
retf
mov
neg
pop
adc
sar
xor
xor
sub
sbb
std
(bad)
in
repnz
(bad)
xor
xor
sub
sbb
jne
cmp
jb
fadd
mov
div
xchg
add
retf
jle
les
dec
sbb
fcom
mov
in
outs
or
bsr
shrd
add
shl
(bad)
push
mov
imul
in
add
cli
sub
jmp
cwde
inc
loope
push
add
(bad)
cmp
fdivr
sub
sbb
leave
jne
or
je
or
idiv
push
ins
pop
push
jns
neg
neg
sbb
or
xor
neg
neg
sbb
mov
int
mov
mov
rcl
rcl
cmp
jb
cld
cmp
jb
sub
sbb
inc
loop
cmp
mov
cli
pop
test
mov
lea
mov
adc
push
ret
bound
movs
sbb
inc
lock
or
pop
xor
and
jne
cmp
inc
(bad)
sub
xchg
cld
jl
(bad)
and
inc
out
repz
sub
sbb
jne
xchg
in
push
sti
add
es
sub
mov
pop
lods
aaa
cmps
and
inc
push
(bad)
je
int3
mov
or
lahf
cwde
mov
cli
ja
jae
and
movs
cli
pop
push
je
jcxz
xchg
call
js
or
gs
stos
sbb
xor
dec
sbb
dec
jg
fiadd
pop
xor
shl
jb
adc
push
jb
jg
jge
out
jmp
inc
icebp
sub
jmp
getsec
jmp
inc
mov
cs
sub
aaa
xchg
in
neg
jb
idiv
push
inc
and
push
jmp
jg
in
movs
push
jmp
movs
ret
add
pop
or
clc
sub
icebp
mov
hlt
push
jne
mov
rcl
(bad)
fidiv
in
dec
cmp
popf
loopne
jae
and
popf
out
xor
ds
arpl
sub
or
mov
or
sbb
xchg
sbb
xchg
or
adc
add
mov
mov
sbb
or
xchg
test
pushf
sar
push
ret
inc
or
cmc
add
sub
pop
sti
jmp
mov
adc
imul
rcr
push
dec
ret
push
ud0
ja
jbe
or
dec
cmp
jg
repnz
in
aam
stos
add
lock
pop
mov
sahf
adc
hlt
cli
ss
lods
pushf
xchg
xor
in
or
mov
movzx
add
and
xchg
pop
ret
push
add
call
add
cdq
jp
test
jg
cmps
in
idiv
cmp
je
icebp
(bad)
pop
sbb
test
pop
sbb
mov
mov
cmp
das
stos
rcr
sbb
xlat
sbb
clc
fwait
cld
scas
add
mov
sub
sbb
or
in
mov
pop
call
mov
cwde
or
add
cmps
call
sub
cmp
in
sbb
in
aad
mov
adc
into
stos
test
push
dec
ror
rcl
aaa
dec
mov
or
lock
lock
sahf
or
add
cmps
mov
jle
mov
add
dec
pushf
add
jo
rcl
inc
dec
jne
enter
push
and
js
push
add
xchg
xor
mov
jne
cmp
push
dec
push
adc
push
xor
cmps
push
ret
fs
div
sbb
scas
adc
fwait
lea
retf
clc
pop
and
icebp
pop
pop
mov
(bad)
or
jbe
in
sbb
loope
pusha
dec
ins
adc
sbb
mov
inc
sbb
mov
pop
cmc
sub
jne
push
fnstcw
out
mov
push
cld
sub
outs
mov
fucom
xchg
xor
jbe
or
(bad)
pop
(bad)
aaa
mov
fcomp
sbb
cmp
xchg
mov
je
push
push
ins
call
jmp
sbb
mov
jecxz
dec
(bad)
cmps
repnz
(bad)
fwait
xor
jae
adc
xor
shl
pop
jne
push
mov
pop
jg
xchg
sti
jne
mov
pop
jg
jae
loopne
mov
push
dec
sbb
ret
push
das
mov
mov
jge
(bad)
sahf
add
pop
mov
outs
dec
ja
imul
cld
cmp
adc
pop
jne
sub
shr
ds
shl
and
inc
add
adc
push
in
push
mov
sub
sar
jns
mov
rol
sbb
in
out
push
xor
or
ins
jo
pop
shl
ret
inc
cmp
cmp
inc
push
push
sub
ret
mov
gs
cmps
mov
in
push
push
xor
push
cmp
inc
int3
mul
xchg
std
mov
retf
jg
mov
add
push
push
fcmovnbe
imul
add
lock
div
test
pop
lods
aam
add
adc
mov
mov
jb
outs
push
add
add
(bad)
mov
add
inc
gs
outs
outs
addr16
popa
je
add
std
push
push
daa
(bad)
cdq
mov
(bad)
push
lock
dec
mov
je
es
push
push
push
add
or
add
pop
cmp
inc
ja
pusha
inc
xor
cmp
adc
in
inc
xor
repnz
and
add
pop
cmp
pusha
pop
aam
mov
add
jle
mov
cmp
aas
into
mov
out
pusha
pusha
cmp
leave
and
or
in
and
mov
(bad)
std
push
retf
add
cmp
jl
pop
dec
mov
jge
sub
sahf
mov
and
cdq
fbld
sub
pop
lock
adc
push
(bad)
or
fdiv
adc
test
pop
fld
xchg
or
sub
shr
loopne
cmp
ror
ret
mov
hlt
cmc
mov
retf
movs
mov
or
jnp
je
xor
xor
repnz
push
xor
fs
loope
xchg
outs
and
add
dec
mov
inc
inc
and
jp
fld
and
dec
int
pop
add
lods
pop
push
and
pop
aam
clc
shl
mov
in
xor
sub
mov
mov
jnp
push
mov
fstp
(bad)
cmp
jne
mov
mov
lock
add
mov
fld
adc
stos
add
add
(bad)
inc
gs
ja
hlt
retf
mov
jbe
cmp
shl
scas
mov
sbb
or
push
retf
or
push
sbb
push
cmp
outs
mov
movs
inc
mov
or
sbb
add
jae
lahf
pop
jbe
cmp
cmp
mov
or
or
cld
jne
hlt
ins
or
test
cvtpi2ps
fnsave
add
sti
xchg
sbb
xchg
sbb
inc
sub
pop
mov
(bad)
mov
and
and
sahf
movs
sbb
ds
fs
mov
push
push
mov
nop
mov
ins
div
inc
fld
sbb
mov
pop
pop
ret
sbb
adc
add
ds
push
call
pop
sub
mov
out
out
mov
inc
pop
inc
ins
mov
das
and
test
add
test
sbb
sahf
fdiv
sub
js
inc
fistp
dec
add
or
or
mov
shl
adc
minps
inc
ret
mov
pop
jp
push
push
scas
push
push
in
or
rcr
nop
jbe
cmp
jb
sub
fist
cmp
and
jbe
test
outs
or
je
movzx
rol
mov
jno
mov
lods
add
popa
pop
in
pop
ins
in
push
test
jbe
push
push
jae
push
les
lock
fdivr
cmp
and
(bad)
mov
(bad)
fbstp
dec
or
xor
pop
jo
push
adc
cmps
inc
pop
aaa
xor
js
(bad)
cmc
adc
lock
pop
jle
dec
cdq
leave
fdiv
sbb
and
(bad)
data16
mov
add
sbb
cmp
jne
adc
ror
jmp
sbb
pop
add
cmp
mov
xor
adc
push
add
mov
sub
push
adc
mov
outs
sbb
mov
test
and
add
mov
add
or
bound
push
dec
push
push
dec
cld
fucomi
and
dec
gs
mov
xchg
aaa
fs
dec
or
in
repnz
adc
push
loopne
push
or
jb
jecxz
dec
dec
test
loop
(bad)
call
movs
cmps
mov
repnz
and
adc
in
rol
clc
xor
inc
push
repnz
push
inc
enter
xchg
inc
ss
(bad)
lock
inc
mov
and
dec
jp
add
loopne
xor
ss
and
(bad)
cld
shr
adc
mov
cmps
mov
mov
pop
xchg
add
test
and
sbb
cwde
xor
cmp
mov
bnd
jle
test
pop
sub
add
(bad)
or
push
add
retf
movs
inc
and
xchg
jp
push
sar
imul
sbb
pop
xor
rol
adc
inc
lock
cmp
jne
jo
std
cmp
jbe
mov
or
aad
pop
fld
mov
mov
in
pop
inc
and
inc
cwde
lock
es
sub
dec
(bad)
out
sbb
mov
xchg
xchg
mov
xchg
jle
and
sti
jb
ror
and
push
push
jle
pop
(bad)
jnp
lahf
mov
(bad)
jmp
cmp
ret
loop
jnp
lods
or
inc
xlat
adc
push
push
aaa
test
or
xor
ds
sbb
mov
jns
push
in
ins
dec
dec
mov
ret
and
ret
mov
push
jae
and
aam
arpl
nop
mov
ss
mov
or
mov
adc
jmp
movs
add
jne
jg
jg
sub
jb
je
dec
je
push
sbb
and
pop
lock
les
and
nop
adc
mov
or
or
push
add
es
or
mov
inc
aas
iret
shl
shl
mov
ds
dec
fild
dec
or
push
pop
cmp
outs
fisttp
ror
test
nop
pusha
dec
inc
push
cmp
mov
fcmovnb
inc
or
pslld
ss
lock
cmp
mov
push
adc
jmp
inc
mov
dec
sar
adc
fld
xlat
add
sar
sbb
xor
sub
fld
jbe
sar
dec
(bad)
aad
je
jns
pop
sbb
sub
lea
stc
shr
sub
out
or
dec
or
dec
or
clc
inc
adc
cmp
test
pusha
ror
in
add
cld
or
scas
push
or
ins
ret
or
adc
stc
mov
push
add
stc
and
add
add
push
push
outs
(bad)
(bad)
dec
fisub
adc
push
or
or
cdq
outs
add
xchg
cli
push
add
or
mov
ror
repnz
add
mov
push
add
add
jmp
inc
adc
(bad)
xlat
jg
lock
or
retf
pop
adc
add
outs
mov
ins
lock
jle
mov
add
scas
or
pop
sahf
add
add
add
or
ds
out
xor
daa
add
push
add
or
sbb
push
or
(bad)
es
push
dec
inc
imul
mul
and
outs
fs
gs
outs
sub
inc
jb
jns
es
or
mov
or
out
mov
adc
arpl
inc
gs
jne
je
dec
std
mov
dec
imul
mov
gs
outs
inc
arpl
in
jge
lods
or
or
or
jb
jg
ins
inc
xor
xor
(bad)
outs
ins
bound
outs
js
cld
jg
es
push
imul
pop
nop
cmp
andps
add
dec
inc
xor
je
inc
ret
add
rcl
in
pop
push
push
dec
in
in
dec
inc
inc
cmp
in
in
xor
sub
in
in
and
pop
dec
dec
dec
adc
or
cmp
aas
adc
jge
add
rol
jecxz
push
push
push
adc
in
movs
pop
or
add
shl
in
clc
hlt
lock
in
in
call
cs
fcom
ror
sub
pop
dec
enter
push
inc
push
dec
rol
jb
imul
jb
jb
mov
lods
test
jb
jb
mov
jb
xchg
nop
mov
test
jb
je
ins
push
fs
pop
pop
jmp
outs
pop
or
repnz
inc
sbb
xchg
ret
add
jne
cmp
add
mov
sbb
inc
xchg
push
dec
addr16
xor
ss
jno
es
push
push
nop
data16
pushf
pushf
pushf
pushf
inc
inc
cmp
pushf
pushf
pushf
pushf
xor
sub
pushf
pushf
pushf
pushf
and
sbb
pushf
pushf
pushf
pushf
adc
or
inc
sahf
pushf
pushf
add
cld
mov
dec
hlt
pop
lock
call
in
(bad)
pushf
pushf
pushf
pushf
aam
int3
enter
pushf
(bad)
sar
mov
test
pushf
pushf
pushf
movs
mov
pushf
pushf
xchg
nop
mov
test
pushf
pushf
je
ins
push
fs
pop
pop
pushf
pushf
pushf
pushf
push
push
dec
inc
dec
inc
sahf
pushf
inc
clc
mov
pushf
fmul
xor
and
pushf
pushf
pushf
and
adc
pushf
pushf
pushf
adc
add
inc
sahf
pushf
add
mov
dec
dec
lock
call
dec
loopne
fcom
dec
dec
dec
dec
ror
enter
dec
dec
sar
mov
test
dec
dec
dec
dec
mov
dec
dec
dec
nop
mov
dec
cmp
dec
dec
dec
jo
push
dec
pusha
pop
pop
push
dec
dec
dec
dec
push
dec
dec
inc
dec
dec
dec
dec
inc
cmp
xor
dec
dec
dec
xor
and
dec
dec
dec
and
adc
dec
dec
dec
adc
add
and
add
mov
dec
outs
pop
in
(bad)
dec
dec
dec
dec
aam
int3
enter
dec
(bad)
sar
mov
test
dec
dec
dec
movs
mov
dec
dec
xchg
nop
mov
leave
leave
leave
leave
mov
enter
ins
pushf
pushf
pushf
pushf
push
pushf
pushf
pushf
pop
push
push
dec
pushf
pushf
pushf
pushf
dec
inc
inc
cmp
pushf
pushf
pushf
cmp
sub
pushf
pushf
pushf
sub
sbb
pushf
pushf
pushf
sbb
or
pushf
pushf
pushf
or
cld
mov
clc
hlt
lock
dec
dec
dec
dec
call
dec
dec
dec
fcom
ror
pushf
pushf
pushf
fdivr
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
test
mov
pushf
cwde
xchg
nop
or
mov
jl
je
cmp
cmp
push
or
pop
push
pop
daa
daa
daa
daa
push
dec
dec
inc
daa
daa
daa
daa
inc
cmp
xor
daa
daa
daa
xor
and
daa
daa
daa
and
adc
daa
daa
daa
adc
add
xchg
daa
daa
add
mov
pushf
dec
hlt
lock
call
in
(bad)
pushf
pushf
pushf
pushf
aam
int3
enter
pushf
(bad)
sar
mov
lods
xchg
xchg
xchg
xchg
test
mov
xchg
cwde
xchg
nop
mov
test
xchg
js
jo
cmp
cmp
push
add
cmp
push
in
in
dec
dec
inc
inc
in
in
cmp
xor
sbb
ret
adc
mov
int3
push
or
jne
mov
jmp
out
cld
jp
pop
or
push
adc
repz
adc
sbb
and
shl
dec
push
(bad)
lock
rcr
xchg
mov
mov
mov
and
push
pop
leave
jbe
(bad)
mov
sahf
xchg
adc
or
cmp
xor
mov
pop
mov
psubq
mov
push
js
dec
pushf
sbb
push
dec
rcr
mov
push
push
gs
inc
push
idiv
loop
cmp
pop
dec
mov
mov
fadd
add
sbb
jecxz
mov
(bad)
and
dec
push
inc
ja
add
inc
inc
outs
add
jnp
push
jae
pop
pop
inc
pop
ins
sti
call
aas
cmp
imul
inc
push
push
add
dec
push
push
xor
arpl
push
or
pop
push
dec
add
mov
jnp
push
push
(bad)
lahf
push
sub
push
pop
(bad)
in
mov
or
and
lahf
mov
and
sub
jge
push
xor
mov
or
ss
mov
push
or
dec
push
dec
push
dec
pop
push
dec
or
pop
dec
fs
cld
jg
ret
cld
inc
jl
or
gs
imul
or
inc
mov
pop
sub
cmps
or
out
jg
pop
inc
inc
push
dec
dec
inc
dec
and
mov
loopne
loopne
or
and
push
jns
gs
outs
outs
leave
add
adc
pop
clc
adc
test
mov
adc
loopne
and
repnz
push
pushf
retf
js
sub
ins
div
inc
push
push
jmp
jo
nop
pop
add
out
jg
jae
scas
je
add
inc
outs
outs
je
(bad)
jmp
jb
ins
pop
mov
sbb
mov
add
arpl
mov
and
dec
adc
gs
inc
(bad)
jmp
and
jg
dec
sbb
scas
sub
(bad)
xchg
scas
rcl
push
push
or
push
ja
outs
addr16
stos
shr
(bad)
mov
fild
jp
in
icebp
nop
pushf
mov
imul
or
jnp
mov
mov
push
leave
leave
sub
mov
leave
mov
lods
test
leave
leave
leave
movs
mov
leave
leave
xchg
nop
mov
cmp
leave
leave
leave
jo
push
add
lock
xchg
xchg
xchg
xchg
icebp
repnz
xchg
xchg
xchg
xchg
cmc
div
clc
xchg
xchg
xchg
xchg
stc
cli
sti
cld
xchg
xchg
xchg
xchg
std
(bad)
jmp
xchg
xchg
xchg
xchg
loope
jecxz
xchg
xchg
xchg
xchg
in
out
xchg
xchg
xchg
xchg
jmp
xchg
xchg
xchg
in
out
out
rcl
rcl
aam
xchg
xchg
xchg
aad
xlat
fcom
fcmovu
fcom
(bad)
rcl
ret
les
mov
xchg
xchg
xchg
xchg
leave
retf
xchg
xchg
xchg
xchg
int
iret
mov
xchg
xchg
xchg
mov
mov
xchg
xchg
xchg
xchg
mov
mov
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
movs
cmps
cmps
test
xchg
xchg
xchg
test
xchg
xchg
xchg
lods
scas
scas
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
xchg
xchg
xchg
xchg
cdq
call
popf
sahf
lahf
adc
add
xchg
mov
xchg
xchg
lea
xchg
xchg
jno
jae
xchg
xchg
xchg
xchg
jne
ja
xchg
xchg
xchg
xchg
jns
jnp
xchg
xchg
xchg
xchg
jge
jg
lock
xchg
xchg
popa
bound
sti
sub
jae
shl
frstor
jge
jb
sub
jne
add
or
cmp
mov
cwde
inc
mov
test
cmp
cdq
lods
dec
(bad)
pop
push
je
or
or
push
or
xchg
mul
xchg
loope
add
es
mov
outs
movzx
xchg
and
ret
cmps
cdq
adc
xor
gs
and
ss
retf
and
loope
lahf
push
or
jmp
pop
rol
or
mov
cmp
cmp
out
test
mov
fld
loope
lahf
(bad)
mov
push
fld
mov
mov
add
inc
ins
push
sub
int
mov
add
push
and
out
loopne
or
adc
or
dec
jae
ins
or
adc
out
aas
add
mov
push
push
mov
inc
(bad)
jg
bound
cdq
fld1
xor
sub
je
cmps
sub
sub
fsub
jae
fsub
fstp
xor
stos
mov
dec
or
dec
mov
mov
add
fstp
cmp
cld
fcom
jne
xor
xchg
ret
push
inc
adc
(bad)
xchg
xor
sub
ftst
outs
je
and
and
outs
or
jns
sbb
dec
or
inc
or
(bad)
jg
cmp
add
adc
mov
adc
ret
pop
addr16
add
je
fucomp
xchg
sbb
jg
cli
or
push
sbb
push
jbe
cmp
cwde
rcr
push
or
sbb
jne
cmps
and
sbb
jge
fwait
adc
addr16
loopne
jbe
dec
popa
sar
ror
hlt
aam
fdiv
jb
mov
push
fsubr
adc
loopne
call
mov
cld
jne
jae
xor
fwait
jp
inc
rcr
les
imul
out
enter
dec
mov
ror
adc
in
sbb
sub
or
out
setae
jmp
xor
out
mov
pushf
and
into
leave
enter
rcl
fld
lods
xchg
cmp
xor
inc
or
and
push
lods
pop
stc
repz
mov
icebp
aas
dec
out
sti
rol
pop
or
adc
pop
or
adc
cmps
xor
sbb
loope
adc
or
movs
inc
xchg
adc
or
and
xlat
int3
cdq
nop
push
js
adc
push
or
adc
push
sub
jno
push
je
ins
jae
sti
popa
mov
mov
inc
sbb
nop
mov
adc
or
aam
push
sti
mov
adc
and
inc
fwait
les
ins
in
ficom
daa
ds
loop
sbb
pop
cmp
mov
add
push
mov
lock
inc
js
gs
rcr
and
sbb
movs
loopne
add
push
cmp
int3
lods
dec
mov
adc
inc
inc
bound
je
sub
iret
xor
cmp
push
and
dec
add
xlat
and
ficom
scas
cs
cld
adc
cmps
call
(bad)
adc
and
inc
dec
outs
loop
jb
fidivr
mov
adc
adc
mov
push
push
(bad)
dec
nop
cmp
in
and
xchg
mov
xchg
inc
leave
pusha
mov
xchg
xchg
dec
cs
inc
mov
mov
cmc
adc
inc
inc
imul
leave
mov
xor
jbe
mov
popa
outs
addr16
xlat
fwait
inc
mov
jbe
cmp
stc
jb
ins
outs
ja
addr16
mov
nop
sub
in
add
mov
jmp
xchg
mov
outs
jbe
ins
imul
xchg
mov
inc
mov
fisub
mov
or
in
mov
popa
ret
mov
out
mov
add
outs
fst
mov
pminub
outs
imul
or
mov
push
sbb
inc
add
or
fist
mov
inc
or
jb
js
aam
mov
adc
loopne
and
jae
push
imul
and
(bad)
in
hlt
mov
inc
and
push
push
jb
ins
cmp
sub
push
push
inc
repnz
sub
enter
cwde
add
out
mov
jbe
mov
push
cmp
ficomp
movs
fistp
dec
lods
push
jno
arpl
push
xor
inc
popa
jl
xchg
pop
popf
clc
push
sbb
dec
cwde
or
sar
dec
cmp
mov
adc
(bad)
data16
jb
fcomp
clc
add
dec
inc
dec
push
ror
dec
adc
ins
mov
(bad)
push
popa
data16
fsub
das
pop
xchg
pop
loopne
dec
outs
outs
imul
mov
mov
adc
adc
shr
les
inc
dec
outs
cmps
shl
jo
mov
push
inc
sub
je
gs
addr16
cmp
xor
adc
mov
adc
xor
fs
out
sbb
pop
idiv
cmovge
in
jbe
inc
or
unpcklps
out
in
sbb
and
out
ds
mov
xor
jns
mov
out
cld
adc
cmp
xchg
sub
dec
lmsw
adc
mov
add
imul
inc
sub
or
mov
xlat
jle
pop
jle
aaa
adc
jb
popa
fs
outs
inc
outs
jne
leave
xchg
(bad)
int3
add
jmp
lfs
sbb
call
sbb
push
out
icebp
push
out
sahf
mov
add
jnp
sbb
push
loopne
sbb
iret
pop
bound
add
add
call
xchg
mov
rcl
push
dec
imul
mov
ret
repnz
mov
in
arpl
xchg
jp
icebp
ret
les
push
lock
jb
push
pop
xchg
lock
pop
inc
push
push
loopne
(bad)
cmp
addr16
mov
inc
outs
fs
pop
in
add
adc
push
push
nop
xor
or
sub
call
mov
dec
push
ds
mov
mov
push
jl
mov
icebp
mov
cmp
push
les
xchg
push
pop
mov
daa
aam
push
repz
xor
push
pop
push
enter
push
inc
aaa
dec
rcl
inc
je
rcl
sahf
aaa
mov
push
jb
fdivr
mov
lds
pop
or
repz
repz
sub
pop
pusha
jo
outs
adc
fsubr
push
mov
push
push
daa
push
and
rcr
or
push
inc
imul
pushf
sub
test
mov
add
or
adc
adc
lods
scas
mov
data16
rcr
je
add
cmp
ds
mov
mov
and
push
and
mov
in
ret
aas
fcom
test
mov
fstp
adc
dec
test
shl
mov
xchg
aaa
call
pop
das
or
outs
out
je
adc
mov
je
shl
cmp
bound
cdq
xchg
mov
inc
clc
add
cld
bt
jb
dec
push
or
push
xchg
daa
or
inc
push
adc
xchg
inc
adc
pushf
add
inc
add
dec
push
add
dec
popa
fwait
push
or
icebp
and
add
xchg
aam
dec
jne
pop
lods
pop
aam
mov
cli
(bad)
jae
add
add
adc
push
mov
mov
fadd
cwde
and
mov
jmp
inc
add
dec
(bad)
push
jo
sub
mov
xor
(bad)
in
out
add
out
and
add
loopne
leave
push
add
aaa
(bad)
mov
leave
mov
xor
sbb
xor
mov
clts
xchg
push
sbb
lock
push
sub
dec
add
xor
mov
les
clc
pusha
loopne
pop
sub
jmp
push
xor
pusha
loopne
sbb
shl
xchg
std
das
shl
and
loope
adc
push
add
cmp
mov
or
aas
sbb
add
(bad)
cmp
inc
adc
ret
xlat
xchg
mov
sub
sbb
sub
fild
mov
add
ror
jg
fdivr
(bad)
in
jg
jb
push
fiadd
jg
sub
pop
add
pop
jae
in
not
add
push
or
sub
outs
(bad)
jle
cmp
jg
aaa
sub
inc
xlat
sbb
and
sbb
xor
lock
mov
pop
cmp
jne
test
xchg
loopne
inc
pop
mov
mov
neg
ret
xor
pop
push
push
push
mov
mov
cld
leave
les
imul
fnsave
and
lea
fdivr
into
add
cmp
cmp
je
xchg
sub
or
and
pop
mov
jl
or
enter
sbb
int3
jle
sti
jmp
sub
jne
outs
and
addr16
or
sub
call
jl
pop
or
mov
pop
ret
test
mov
xor
mov
or
pop
or
and
dec
cld
bound
cmp
ror
jmp
enter
dec
rcr
or
or
cdq
mov
push
xor
pop
shl
inc
imul
sbb
add
or
arpl
pop
mov
or
movs
xchg
dec
push
repz
xchg
push
popa
push
mov
jp
fwait
out
out
clc
lock
out
ss
cmps
adc
or
sbb
xchg
add
mov
xor
cmp
adc
mov
push
add
inc
add
xchg
mov
jl
imul
es
je
pop
jnp
lods
jmp
dec
inc
jo
cmp
clc
cs
sub
inc
mov
or
add
jge
jg
and
pop
add
cmp
ror
stos
push
rcl
fsubr
dec
push
add
lea
enter
sub
daa
addr16
add
pop
shl
lock
data16
dec
int
loope
adc
dec
pop
adc
pop
jb
cmp
inc
and
call
in
dec
scas
lock
push
ret
jne
add
and
xor
es
mov
add
xor
and
pop
add
or
je
test
clc
lods
inc
cli
jl
cmp
sub
jbe
lock
push
dec
xor
cld
adc
pop
xlat
mov
das
push
out
mov
xchg
repz
(bad)
test
lods
inc
dec
push
cdq
sub
xchg
cdq
pop
dec
int
mov
mov
jecxz
pop
dec
and
sbb
push
sbb
sub
adc
push
add
cmp
test
adc
add
mov
mov
mov
jmp
sub
jne
adc
xor
or
and
fwait
mov
mov
mov
mov
shr
aad
test
loopne
retfw
jae
or
scas
pusha
pop
mov
sbb
adc
out
call
or
cmp
aaa
and
call
inc
xor
dec
sub
mov
and
cs
push
rol
sub
xor
sbb
int
inc
inc
dec
lods
adc
pop
shl
fld
les
ja
cbw
dec
mov
pop
jne
inc
iret
add
push
(bad)
jg
push
jp
clc
sub
jl
push
retf
fucomi
jmp
neg
adc
sbb
pop
sar
or
cs
inc
dec
jne
jmp
repz
cmp
dec
(bad)
push
fcmovb
xchg
cmp
cmp
add
add
movzx
ja
leave
jne
or
jns
neg
ja
clc
inc
mov
inc
dec
mov
ret
mov
xor
cmp
cli
cmp
push
pop
std
(bad)
(bad)
fisttp
pop
pop
sub
sub
jbe
add
mov
sub
jmp
mov
dec
jne
add
jns
push
sbb
sub
in
inc
add
sbb
push
and
stos
jns
popf
cdq
push
lods
dec
scas
in
jmp
mov
scas
jp
add
mov
cmp
in
adc
leave
push
mov
cmp
repnz
or
xchg
or
xor
sub
or
cld
adc
lea
shl
lods
(bad)
pushf
test
out
and
push
add
inc
sub
test
clc
mov
sbb
xor
pop
add
inc
data16
cmps
mov
inc
add
mov
les
and
sbb
adc
fst
add
jl
pop
cmp
je
or
fistp
shl
ret
adc
call
ins
shr
loop
mov
xor
pop
xchg
push
jg
add
(bad)
jp
add
ret
fld
ffree
ffree
pop
jne
sar
jge
rol
or
sbb
xor
ret
inc
call
dec
inc
mov
ins
jo
mov
add
cmp
adc
jbe
add
scas
loope
ins
test
(bad)
add
xor
(bad)
pop
out
and
jmp
sub
and
sub
push
aaa
outs
add
sti
xor
push
add
xchg
add
cmps
movs
arpl
mov
push
loop
inc
sbb
adc
mov
push
mov
push
push
scas
les
inc
adc
cmp
aam
imul
xchg
xlat
xor
cmps
mov
adc
outs
add
or
cld
cmp
cmps
mov
or
stos
rol
push
or
mov
adc
scas
loop
adc
cwde
add
gs
or
neg
ins
adc
adc
inc
das
push
mov
xor
mov
je
je
imul
push
mov
clc
mov
fwait
ins
cmp
dec
mov
and
sti
cmp
mov
xchg
call
or
sub
push
arpl
inc
(bad)
jmp
jg
xor
mov
jp
push
push
push
test
mov
fdivp
pop
(bad)
and
clc
inc
lock
sbb
jo
adc
push
cld
cmp
mov
xchg
pushf
test
mov
lea
dec
stc
and
add
push
cmp
and
bound
jmp
add
and
sbb
aad
adc
lods
ret
or
xchg
fist
lock
mov
and
sbb
add
dec
test
push
cld
cmp
push
push
leave
jl
pop
and
pop
imul
dec
enter
sbb
push
std
push
fnsave
es
daa
push
(bad)
sub
mov
sub
and
push
adc
sar
sahf
(bad)
cdq
cmc
inc
or
adc
js
outs
adc
daa
sar
(bad)
jmp
adc
add
mov
and
jg
cli
inc
ja
mov
mov
adc
and
test
push
push
mov
(bad)
jmp
mov
mov
stos
test
add
xchg
pop
int3
or
sbb
jb
mov
pop
xor
or
arpl
mov
lods
mov
jne
mov
push
inc
cld
sub
add
mov
cmp
clc
jle
cmp
mov
cmp
or
push
push
jnp
outs
popa
xor
mov
pop
sti
push
inc
int
add
jnp
xchg
hlt
bound
or
push
in
cmps
int3
pop
ret
cmovb
cmp
add
cmps
fnstenv
add
mov
enter
scas
fcmovb
inc
sbb
inc
dec
or
xchg
sar
push
cmps
das
add
sbb
jp
(bad)
stos
adc
adc
xchg
or
enter
pushf
sbb
sbb
int
adc
jmp
xchg
cmp
aaa
dec
lock
mov
into
daa
rol
sbb
jb
int
fld
pop
shl
mov
test
stc
push
(bad)
ins
addr16
mov
jle
sbb
sbb
xor
inc
sbb
push
inc
xor
pushf
aad
cmp
jae
js
sub
fdivr
xor
push
jp
or
dec
or
adc
in
inc
dec
retf
fisubr
push
or
adc
data16
pop
fs
mov
outs
sahf
sbb
fincstp
rol
mov
pop
sbb
jno
loopne
jmp
ret
push
cld
push
ss
leave
fcom
sbb
aam
mov
fcomp
inc
fwait
je
jae
scas
leave
inc
sbb
mov
jb
movsx
adc
mov
inc
dec
and
cmp
ss
sbb
fbstp
jnp
js
mov
(bad)
(bad)
lods
in
adc
mov
je
mov
cmps
inc
mov
pop
fcom
mov
mov
outs
sub
adc
jae
repnz
sbb
dec
inc
and
movs
add
push
ja
xor
aam
jo
mov
movs
mov
ror
arpl
xor
xor
hlt
or
add
sbb
loopne
lea
outs
mov
mov
inc
loop
dec
clc
pop
(bad)
setne
std
and
mov
lods
push
hlt
into
sbb
and
mov
inc
xor
ret
add
pop
inc
cs
push
bswap
ficom
jl
sar
into
out
mov
ins
lahf
jae
pushf
loopne
add
pop
xor
xor
pushf
add
add
pop
push
or
push
mov
add
clc
fadd
dec
add
fbld
fdivp
mov
lods
cmp
add
sub
push
es
mov
add
mov
push
(bad)
call
cmp
in
adc
xchg
cmp
pop
das
xor
sbb
jmp
cmc
pop
adc
adc
movs
cmp
dec
and
mov
jl
out
jo
dec
add
xchg
add
mov
ror
loopne
or
adc
shl
leave
dec
loopne
call
test
sub
and
adc
or
adc
jmp
inc
inc
xchg
(bad)
cdq
mov
aaa
repz
and
rcl
aaa
or
add
sbb
pop
call
or
inc
loopne
push
hlt
ins
sub
jnp
fwait
imul
push
rcr
lods
shl
fsubr
outs
inc
cmps
mov
cmc
xor
adc
ret
pop
loope
add
(bad)
pop
mov
cmp
mov
push
test
xor
ret
push
pop
xor
or
jg
jl
jmp
je
test
jne
push
add
add
inc
or
pushf
mov
cdq
shl
push
data16
stc
cmp
pop
cmc
cmp
adc
scas
inc
or
jbe
adc
outs
in
add
aas
pop
and
loopne
inc
cdq
sar
or
mov
xor
inc
or
add
cld
add
retf
mov
pusha
cli
mov
sub
rep
mov
movs
call
pop
pop
pop
out
mov
test
mov
ins
enter
fstp
add
or
dec
xchg
xor
xchg
xor
out
adc
jo
sar
and
bound
retf
mov
adc
sub
ja
sub
test
mov
nop
scas
pop
outs
outs
ins
aas
lds
les
sub
push
cmp
jne
data16
inc
push
pusha
ret
into
mov
add
mov
je
and
jle
cli
xor
cmp
jae
js
pop
lods
inc
mov
rcl
ret
or
inc
push
jb
movs
enter
daa
mov
pop
pop
pushf
push
cdq
dec
push
and
jmp
aad
cmp
aad
or
or
shr
or
clc
enter
jne
push
sub
cmps
rol
rcpps
xor
adc
hlt
mov
add
inc
shl
cmp
test
mov
data16
or
ror
xor
sub
jbe
mov
lea
add
and
mov
push
add
dec
mov
lea
xor
dec
xor
adc
jg
aam
pop
push
xor
and
stos
test
aaa
sub
retf
call
and
sbb
jp
iret
(bad)
shl
ret
cmp
sub
or
test
aad
push
cwde
inc
imul
lds
aas
das
or
push
mov
sub
aam
outs
aad
mov
or
xchg
and
dec
sti
jno
inc
fcmovnbe
scas
into
shl
je
or
adc
sbb
hlt
sar
cmp
jbe
mov
popa
bound
cmps
ficomp
inc
sbb
dec
int
or
mov
sbb
lods
jp
leave
jge
cmp
sbb
adc
mov
imul
jbe
enter
adc
inc
aam
adc
push
or
cmp
sbb
xchg
add
push
call
(bad)
mov
pop
add
mov
mov
mov
sbb
aam
lods
cmp
je
stos
repnz
sbb
mov
sub
push
ficomp
repnz
lods
mov
call
sub
rcr
fsubr
fsubr
(bad)
in
lods
jmp
adc
mov
inc
mov
sub
mov
imul
dec
pusha
inc
cmps
jae
xor
cmp
jne
sub
jae
add
xor
mov
fst
mov
rep
sbb
daa
sub
mov
lods
lods
mov
sub
xor
outs
loope
jb
cmp
ja
imul
sub
dec
add
sbb
pop
mov
dec
sbb
cmp
jg
(bad)
mov
dec
cmp
ret
je
test
add
shr
mov
pop
pusha
adc
xor
push
call
call
repz
jns
jmp
out
fdivr
xchg
jmp
js
jp
ja
adc
push
nop
dec
xor
and
jl
fsubr
sar
aaa
xor
lea
xchg
mov
sub
cld
shr
add
sub
cmp
sbb
ds
or
jmp
jo
nop
lahf
shr
je
jno
out
fadd
sbb
jne
pop
outs
fisttp
jl
ret
sbb
cmp
ret
mov
loop
adc
(bad)
lods
xor
jmp
mov
imul
cmp
cmp
or
mov
cld
dec
adc
(bad)
aam
adc
pop
xchg
dec
inc
stc
mov
mov
test
(bad)
adc
xchg
push
xor
ja
jp
push
retf
fdiv
pop
xor
push
cmp
es
dec
mov
adc
xor
jo
push
mov
cmp
cmps
rcl
cmp
fwait
outs
mov
mov
or
je
mov
inc
je
mov
dec
je
fwait
dec
jnp
dec
cmp
adc
mov
ins
cmp
jbe
dec
ss
stos
adc
mov
fdiv
call
les
int
rsqrtps
inc
imul
dec
iret
outs
jmp
or
ret
cmp
sub
inc
mov
call
jl
inc
adc
fist
out
mov
cmp
xchg
call
sbb
inc
and
into
jl
daa
mov
hlt
inc
mov
and
xchg
icebp
mov
mov
in
in
in
lea
sub
xchg
das
cmp
ins
cmps
pop
es
fdiv
pop
or
sub
push
(bad)
dec
or
lock
repnz
out
inc
mov
xchg
add
sbb
inc
jge
pop
pop
jno
and
hlt
dec
cld
xchg
lock
push
or
or
outs
jg
ret
dec
cmp
jmp
add
int
or
adc
or
ret
js
loopne
shl
xchg
push
pop
add
xor
lock
pop
in
in
and
mov
out
adc
and
or
enter
mov
jb
jno
or
mov
or
(bad)
mov
xor
mov
jne
or
aad
and
test
retf
jecxz
adc
pop
dec
pop
jl
push
pop
loop
loopne
push
adc
test
and
adc
test
lods
in
cmp
xchg
xchg
out
out
out
or
pop
scas
rcl
dec
cmc
in
aaa
pop
dec
out
adc
and
pop
clc
stos
dec
jne
not
cmp
pop
adc
daa
jecxz
pop
cld
mov
add
aam
aam
mov
inc
and
or
(bad)
jmp
adc
wrmsr
adc
(bad)
push
stos
inc
mov
xchg
and
pop
ins
jmp
loop
mov
mov
and
adc
(bad)
xor
or
bound
inc
push
cmp
sub
sbb
adc
fsub
jns
loopne
fist
inc
adc
push
iret
sar
(bad)
push
xchg
shl
sahf
xlat
ins
das
pop
mov
add
push
sbb
dec
xor
jecxz
fcom
sar
adc
jge
xchg
lea
sub
xchg
xchg
cmp
adc
loopne
loopne
push
jns
neg
mov
mov
loopne
pushf
add
mov
jno
fild
inc
mov
ds
add
ins
push
push
movs
and
pop
jmp
aaa
pop
dec
int3
leave
jae
fist
sub
(bad)
xlat
xor
mov
mov
out
sub
or
or
mov
jle
sub
int
in
mov
adc
(bad)
adc
pushf
popf
inc
cmp
push
loopne
ds
in
xchg
es
adc
pop
stos
dec
pop
push
nop
xchg
or
and
xchg
and
int
mov
cmp
sub
and
or
shl
leave
mov
lock
dec
jecxz
adc
push
mov
adc
pushf
add
outs
ins
in
push
leave
dec
push
in
in
in
and
jecxz
jecxz
or
xchg
mov
repz
sbb
hlt
aaa
cmc
dec
push
jae
jnp
out
div
xchg
out
sahf
test
xchg
and
add
cmc
(bad)
out
sbb
das
fsub
fmul
enter
fdivr
fld
add
fnsetpm(287
in
fdiv
push
pushf
stos
outs
inc
(bad)
cmp
(bad)
mov
mov
add
gs
imul
shr
adc
mov
jmp
sub
or
jbe
loopne
and
mov
or
adc
push
mov
retf
adc
dec
or
jg
pop
pop
dec
mov
pop
std
in
add
sbb
rcr
pop
pop
xchg
jbe
imul
mov
test
mov
mov
adc
sub
cmp
and
push
movs
jge
xor
adc
lea
jge
or
ficom
(bad)
in
aam
xchg
je
sbb
call
pop
cs
mov
jno
inc
mov
xor
shr
fst
loop
std
pop
nop
add
ja
movsx
jle
or
lea
cld
mov
in
jmp
xor
inc
mov
fiadd
inc
lods
or
dec
xor
adc
adc
jle
fadd
xor
in
ret
or
dec
fiadd
or
and
xor
dec
stos
cmps
pop
jo
not
fldenv
aaa
frstor
inc
movs
je
sahf
and
cmc
adc
shl
or
add
es
add
push
mov
sub
sbb
std
loop
mov
stos
test
or
mov
mov
retf
fimul
scas
inc
(bad)
dec
and
push
adc
mov
in
pop
or
cs
cli
xchg
mov
dec
(bad)
div
mov
sbb
inc
mov
mov
clc
dec
jne
loop
retfw
lods
je
and
in
and
mov
data16
add
or
dec
js
jne
jno
push
pusha
inc
sbb
repz
jo
jo
ja
sbb
mov
pop
inc
cmp
retf
adc
pushf
fwait
push
cli
lock
cmp
xchg
and
cmp
dec
fs
or
jmp
mov
inc
pop
pop
inc
loop
ret
push
mov
test
mov
in
cs
inc
add
fucomp
stc
mov
adc
and
sub
inc
sub
jl
sub
sub
sbb
out
jmp
and
sub
sub
cmp
fs
xor
sub
xor
xor
jecxz
into
mov
adc
pop
pop
fdiv
mov
dec
outs
mov
icebp
lock
ds
in
jmp
cmp
shr
movs
jmp
cmp
mov
sbb
sbb
imul
in
outs
lods
xor
cld
push
inc
mov
mov
pop
dec
popa
cmp
pop
fsubr
jp
cs
sbb
dec
stos
sub
mov
stos
and
dec
shl
or
sbb
pop
stos
loop
movlps
les
adc
inc
clc
dec
pop
outs
sar
xchg
mov
add
leave
repz
je
call
xor
aam
and
jmp
aam
add
pop
inc
stc
lods
test
mov
add
stos
lock
sbb
repz
or
movs
sub
pop
loop
icebp
cmp
lock
inc
lahf
retf
adc
push
pop
or
retf
in
cld
in
fdiv
add
movs
loope
call
not
mov
(bad)
loopne
jecxz
test
out
sub
mov
nop
mov
cmp
inc
add
adc
adc
and
xor
(bad)
adc
push
jb
adc
lock
inc
mov
inc
inc
(bad)
inc
xchg
inc
xchg
adc
out
adc
dec
call
xchg
or
adc
adc
sub
cmps
mov
out
adc
and
inc
fs
or
fld
or
fiadd
and
jmp
inc
or
and
jo
or
int
sar
sub
arpl
mov
mov
pop
xor
mov
xor
inc
aam
sbb
add
rol
mov
je
into
jne
adc
jle
jno
ds
(bad)
pop
sbb
push
gs
iret
push
call
xor
and
repz
repnz
jecxz
mov
push
jmp
or
sub
mov
out
in
push
push
push
push
mov
add
clc
ret
rcl
mov
es
push
xor
mov
(bad)
nop
or
add
(bad)
dec
rcr
inc
and
or
xor
cs
shl
sub
idiv
cmp
xor
dec
gs
ret
je
mov
adc
jmp
in
mov
push
fcomp
add
mov
jge
jne
push
movs
loopne
push
jmp
mov
jmp
push
adc
fsubr
jnp
pop
je
addr16
pop
jmp
out
jns
into
ins
dec
sub
dec
icebp
into
jle
xchg
add
in
mul
sub
push
jge
mov
add
pop
es
or
jg
push
aam
jb
mov
push
mov
pop
xlat
in
fcmovbe
add
or
or
mov
cmp
in
out
retf
in
sub
xor
cmps
push
retf
sbb
jmp
call
add
jmp
inc
mov
out
sub
push
mov
inc
inc
cmp
inc
xchg
scas
xor
xlat
(bad)
push
mov
repnz
cmp
sbb
stos
test
xchg
dec
call
add
jle
jmp
mov
inc
cmp
or
bound
or
or
sbb
stc
xor
outs
cmp
mov
stc
mov
add
jl
mov
rol
inc
pop
pop
cmp
iret
loopne
and
fwait
add
mov
fwait
lar
cmp
movhlps
sbb
call
or
jne
test
sbb
or
push
cmps
icebp
dec
add
cmc
sbb
cs
sbb
rcl
push
pop
je
sahf
loope
fabs
push
shr
add
jge
add
cld
xchg
fld
test
jge
fwait
mov
(bad)
in
inc
das
fs
fidiv
jne
lea
mov
(bad)
js
mov
mov
shr
and
mov
es
mov
mov
(bad)
ss
sub
jns
popa
hlt
inc
cmp
pusha
(bad)
fild
cmp
jae
cmp
jb
(bad)
sub
call
js
dec
and
(bad)
fmul
loopne
pusha
xor
jmp
mov
fisttp
or
call
jmp
hlt
mov
ret
xor
call
out
adc
inc
or
je
jo
shr
or
(bad)
mov
pop
adc
jl
mov
cmps
sbb
jae
dec
add
sbb
mov
or
lds
fdivr
mov
fisub
or
cld
mov
sub
xor
dec
add
mov
push
mov
and
jne
bound
inc
cmp
aas
and
or
jmp
mov
push
mov
bound
pop
jmp
sbb
push
je
mov
iret
push
mov
pop
or
sbb
xor
push
out
sti
mov
fstcw
dec
mov
data16
clc
test
ds
or
icebp
sub
add
daa
fisubr
mov
mov
icebp
je
and
fistp
fld
sub
pop
add
jg
test
mov
push
mov
pop
push
clc
das
jo
mov
add
aas
jmp
fstp
(bad)
int
rcr
test
add
sub
ins
and
or
add
and
(bad)
jmp
pminub
or
cwde
aaa
mov
neg
or
adc
es
push
inc
imul
push
cmp
hlt
mov
push
bound
leave
iret
mov
test
inc
xlat
add
ret
repnz
xchg
cmp
outs
test
sbb
add
add
fcom
push
sbb
dec
fs
push
push
sub
and
add
bound
test
mov
inc
pop
dec
sbb
outs
cmp
and
mov
add
aas
mov
push
push
push
mov
jno
xchg
sahf
dec
loopne
sbb
inc
add
dec
mov
mov
mov
imul
inc
add
pop
xor
lods
and
in
pop
ja
mov
push
repnz
add
xlat
xor
fld
ja
test
add
ror
fstp
inc
ret
jae
fstp
in
neg
inc
pop
inc
add
mov
enter
(bad)
shr
data16
leave
(bad)
jle
pop
cmp
xchg
mov
dec
in
add
xor
(bad)
fld
inc
mov
add
hlt
fnstenv
div
push
adc
sub
pop
das
add
push
inc
call
sbb
or
cmp
inc
stc
inc
jl
lock
int3
call
imul
add
add
imul
sbb
mov
adc
call
dec
lock
xor
add
xor
fstp
fwait
mov
add
add
call
or
movs
dec
fcomip
jo
arpl
dec
ror
push
hlt
cmp
or
adc
inc
or
popa
out
mov
jbe
jg
les
mov
jecxz
mov
xchg
adc
dec
(bad)
mov
rcr
sub
sbb
(bad)
push
cmp
xor
mov
mov
mov
imul
jo
adc
jecxz
pop
sub
mov
push
cli
mul
adc
mov
rcr
push
test
scas
push
aam
mov
loop
std
add
(bad)
sti
cmp
jg
xor
fcom
sbb
inc
adc
sub
xchg
adc
(bad)
ja
and
jb
or
mov
push
sti
ins
je
and
test
(bad)
ja
adc
jle
mov
add
inc
dec
jne
sub
dec
mov
and
aas
cdq
idiv
imul
cmp
add
cli
add
repnz
ds
mov
inc
fstp
stc
add
or
js
jne
inc
std
std
loope
or
pop
enter
rcl
adc
adc
and
nop
pop
jg
daa
popa
(bad)
jnp
or
call
jg
mov
test
das
xchg
lods
bound
mov
pop
inc
into
dec
pop
cmp
data16
jl
sbb
add
xchg
data16
and
pop
pop
mov
loopne
lods
mov
aas
mov
dec
cmp
imul
mov
push
sub
mov
mov
mov
mov
adc
xchg
xchg
sub
jmp
cwde
adc
ret
jbe
daa
push
jl
dec
cmp
(bad)
dec
cmp
fisubr
jb
adc
sbb
fistp
sbb
clc
fcom
inc
adc
xlat
imul
and
jg
jbe
or
add
(bad)
push
cld
mov
adc
iret
cmp
clc
in
mov
js
mov
xlat
and
adc
and
or
sub
fidiv
sbb
push
loopne
mov
mov
push
push
cmp
xchg
push
adc
mov
fst
sub
add
adc
repnz
sbb
cdq
js
ror
fisubr
cmp
cmp
xchg
and
add
and
dec
add
jl
out
(bad)
dec
psadbw
push
and
addr16
pop
jae
syscall
sbb
aam
rol
push
push
pop
push
fisttp
push
mov
adc
xchg
fisubr
xchg
popf
enter
pop
push
sub
adc
bound
add
add
inc
or
pop
pop
cmps
cmp
je
cmp
ret
fsubr
in
inc
in
aam
or
cmp
jne
lahf
or
std
mov
push
lea
or
cmps
cdq
div
adc
inc
jecxz
outs
loop
xchg
sub
jge
out
mov
loopne
adc
int
xor
lea
mov
lods
in
mov
ret
data16
push
inc
pop
cwde
inc
clc
inc
in
adc
jns
cli
repnz
ins
pop
inc
inc
in
test
xor
dec
in
mov
push
and
inc
mov
lea
xchg
adc
cmp
ret
xor
or
cmp
mov
mov
fnstcw
fs
xor
and
std
xchg
mov
cmp
sub
pop
lgs
dec
mov
cwde
cmp
xor
stos
lock
xchg
add
dec
and
pop
add
sub
in
in
pop
cmp
sbb
lods
jmp
xor
mov
scas
or
in
add
nop
push
xor
call
ss
test
in
mov
xchg
adc
or
lock
js
inc
sub
lds
jne
sar
adc
and
add
pusha
fcom
mov
xchg
jns
mov
das
out
sbb
dec
xor
aam
fcom
push
mov
fst
and
lods
popw
xchg
mov
std
mov
sbb
inc
and
loop
stos
ret
sbb
or
jge
(bad)
jmp
rdmsr
das
jae
out
mov
adc
lock
jmp
call
(bad)
push
stos
jo
fmul
cmp
dec
jne
mov
fs
fisubr
rcl
cmp
xchg
and
inc
and
push
adc
mov
pusha
or
or
or
or
or
or
push
add
or
or
ins
add
call
pop
adc
sahf
cmps
fldenv
pop
push
xor
pop
sbb
popa
mov
sti
call
mov
rcl
mov
icebp
mov
mov
pop
mov
mov
inc
sub
push
lea
push
enter
dec
and
pop
(bad)
(bad)
mov
aam
in
add
inc
sbb
xor
mov
rol
add
lods
into
rcr
fdiv
mov
and
je
add
jmp
out
aad
mov
add
dec
mov
ja
sar
icebp
loopne
mov
daa
push
imul
and
or
fisub
movs
rcr
adc
shr
sub
push
jle
call
dec
jg
mov
fstp
sbb
and
add
push
jmp
or
je
add
jmp
cmp
dec
mov
xlat
and
sub
ds
add
(bad)
jne
rol
push
or
xor
loope
sbb
fs
rol
das
pop
test
xchg
pop
in
or
rcr
int3
push
(bad)
or
fmul
sbb
xor
dec
ins
and
or
stc
fmul
popa
idiv
push
add
dec
pop
cmp
jns
add
repnz
push
xchg
test
xor
je
mov
and
sub
and
xchg
enter
inc
jns
add
xchg
xor
fbld
lock
iret
mov
movs
and
push
loopne
push
xor
lea
xchg
push
inc
sub
(bad)
in
add
mov
inc
add
and
imul
cwde
and
jmp
and
mov
add
mov
sub
hlt
cs
fisubr
mov
fs
cmp
dec
pushf
jne
push
sbb
div
mov
and
pop
adc
or
add
inc
cmp
sub
dec
ud2
sbb
out
jmp
icebp
push
in
sub
jmp
popa
pop
sbb
adc
sahf
pusha
push
std
cmp
push
clc
cwde
mov
add
mov
xor
fstp
add
add
adc
dec
and
aaa
loop
mov
pop
adc
aas
clc
cmp
inc
sub
inc
outs
mov
imul
xchg
push
jb
lea
fld1
lea
fiadd
ret
arpl
inc
xchg
mov
fld
add
rcr
daa
xchg
and
inc
fistp
inc
push
(bad)
sbb
xchg
sbb
dec
pop
jge
fimul
mov
hlt
enter
jg
jecxz
sbb
sbb
sub
mov
rcl
dec
or
pop
push
or
call
pop
and
clc
jmp
ret
sbb
pop
pop
pop
add
mov
enter
push
mov
mov
pop
xor
mov
stc
mov
test
paddsb
cmp
movs
(bad)
cld
lock
movups
cmp
sbb
xchg
out
lock
add
pop
xchg
sbb
cdq
(bad)
iret
test
adc
je
and
dec
hlt
add
iret
cwde
sub
hlt
jae
mov
ret
add
add
lods
sub
and
xor
sbb
stos
and
outs
inc
pop
inc
nop
adc
add
dec
cld
adc
jg
xchg
push
(bad)
jne
inc
adc
adc
inc
addr16
mov
and
aas
pop
mov
mov
and
je
add
idiv
enter
or
or
push
jmp
mov
and
pop
jp
sbb
sbb
adc
jle
xor
add
and
inc
pop
das
enter
ja
and
mov
jmp
cmc
add
mov
adc
sbb
push
xor
jbe
(bad)
xchg
adc
xchg
adc
(bad)
mov
add
add
jl
sbb
inc
mov
or
inc
jecxz
inc
popa
xchg
cld
add
mov
push
mov
or
sub
inc
xchg
(bad)
pop
aam
ret
rol
or
xchg
arpl
leave
mov
dec
jb
(bad)
clc
adc
cmp
jg
mov
test
xlat
cld
jge
mov
cdq
xor
sub
add
(bad)
add
fs
movs
out
and
cld
add
neg
cmp
dec
cld
gs
mov
aam
aam
pop
mov
lock
jno
cmp
div
and
rcr
loope
lock
add
push
mov
call
pusha
test
js
xchg
fistp
adc
scas
jecxz
addr16
rcl
add
dec
mov
mov
or
clc
pop
fdiv
cli
ror
rcl
adc
mov
out
mov
cmp
aad
mov
in
mov
in
repz
mov
add
ror
mov
xor
and
xchg
or
loop
dec
in
xor
hlt
scas
xor
add
sub
jb
push
push
dec
and
pusha
cmp
jne
imul
loopne
in
out
cmp
jmp
cmp
in
xor
iret
jae
in
jecxz
push
dec
mov
ss
(bad)
and
jmp
loopne
ja
cmp
shr
sub
mov
jmp
add
mov
add
mov
cmp
jle
and
fs
jno
mov
pop
or
in
or
xor
add
ja
add
js
ins
out
rcl
jno
dec
je
int3
mov
into
pop
mov
test
leave
adc
cld
adc
clc
add
adc
mov
outs
xchg
jmp
fcom
shr
pop
adc
fmul
mov
mov
pop
aam
aam
movs
aaa
jp
dec
jne
adc
dec
push
out
sti
js
out
dec
xchg
or
cdq
nop
sets
fimul
popa
lahf
gs
add
dec
add
cmps
lock
cli
cli
xchg
jo
(bad)
pop
push
sbb
cdq
lds
lods
jp
and
push
scas
xor
xchg
out
add
jl
mov
ret
imul
pop
lds
sbb
mov
cmc
dec
add
xor
or
(bad)
or
pushf
int
pusha
pcmpgtb
je
test
add
push
cmp
xlat
add
and
jb
sbb
inc
or
sbb
mov
cmp
push
xor
add
je
(bad)
(bad)
loope
ja
jne
adc
scas
xor
or
pop
add
lods
adc
cwde
rcl
ror
fadd
inc
sub
inc
push
daa
pop
mov
or
test
mov
add
mov
and
call
test
pop
mov
call
daa
(bad)
ficom
popa
jne
retf
jecxz
pop
add
jbe
imul
push
and
inc
loopne
push
test
cmc
ins
and
js
ss
pop
and
adc
xchg
adc
das
add
xor
pushf
pop
xor
mov
sub
lea
hlt
test
add
daa
mov
pop
pop
and
cmps
add
adc
xor
sub
pop
xchg
pop
(bad)
loop
fld
sub
pop
jb
sub
or
cld
mov
jmp
adc
(bad)
sub
sub
inc
xor
nop
mov
cmp
push
push
and
xor
ds
and
or
mov
imul
pop
mov
das
stos
fwait
test
cwde
xchg
movs
shrd
ins
fistp
pop
jo
adc
dec
dec
in
imul
push
push
or
and
push
xor
inc
inc
je
lock
adc
add
je
xor
in
jl
lds
jns
dec
addr16
loope
add
lods
or
fbstp
mov
loopne
push
push
push
clc
inc
ficom
int3
push
lods
fstp
inc
inc
dec
retf
in
pop
or
sbb
cld
cmp
xchg
(bad)
mov
inc
mov
test
or
ins
sub
xchg
(bad)
mov
in
sub
repz
xchg
add
loope
dec
call
dec
sub
call
or
cmc
sub
or
xlat
jbe
sub
xor
or
pop
xchg
jmp
popf
xchg
jne
add
sbb
adc
dec
inc
inc
adc
dec
movs
jg
or
xchg
fnclex
cmp
sub
inc
idiv
movs
mov
add
mov
sar
sub
push
or
mov
sub
push
cmps
mov
clc
es
popa
imul
adc
mov
std
sbb
push
push
shl
sti
xlat
push
mov
add
mov
div
push
push
mov
lods
xchg
sbb
sub
mov
hlt
ret
pop
xchg
mov
jnp
or
xchg
dec
repnz
das
or
dec
aaa
lock
pop
or
and
mov
xchg
jmp
mov
or
hlt
mov
sbb
and
mov
pusha
test
mov
mov
jle
cmp
les
sbb
adc
pop
cmps
inc
push
mov
jle
and
push
popa
or
ficomp
sub
loopne
pusha
cmp
dec
ror
add
iret
scas
mov
outs
cli
cmp
dec
jne
ins
or
mov
mov
mov
sti
pop
jns
add
jmp
mov
and
punpcklbw
cmp
cmp
jne
inc
je
fdiv
aad
call
jle
mov
xchg
test
xor
add
ja
sub
rcr
(bad)
gs
push
add
movs
and
test
nop
pop
pushf
stc
cmp
xor
adc
xor
add
enter
mov
fldcw
fmul
int3
gs
in
test
jnp
mov
test
aaa
push
mov
int
fcomp
or
popf
mov
dec
mov
cmp
out
sub
jo
fs
pop
jnp
loope
inc
and
add
push
sar
(bad)
cld
and
pop
popa
push
jmp
xchg
xchg
les
or
loope
loop
rcr
stc
jno
xchg
stos
mov
loopne
mov
lea
and
test
or
test
ins
push
mov
ja
imul
mov
rcr
and
retf
xchg
lea
or
or
jns
pop
aaa
xor
adc
in
aaa
(bad)
in
or
add
sahf
push
ins
loopne
add
add
add
sub
sub
mul
enter
xor
mov
push
dec
sub
aaa
shl
jbe
cmp
mov
xchg
mov
adc
mov
push
dec
gs
jo
sbb
add
test
iret
and
ja
xor
push
pushf
movs
cmps
jl
mov
aaa
push
movs
sti
push
dec
add
push
shl
mov
call
outs
dec
fwait
dec
jecxz
cmp
xor
out
xor
sub
push
ds
adc
mov
aaa
sub
test
dec
cmp
mov
add
jg
and
sbb
fadd
cdq
sub
fistp
ins
das
dec
ds
mov
data16
ret
sbb
cwde
mov
add
rcr
xor
test
test
sbb
adc
sbb
ja
or
ja
pop
adc
jbe
mov
fcom
inc
xchg
push
jb
adc
das
fwait
inc
test
pushf
(bad)
sbb
ret
xchg
adc
mov
aaa
push
dec
lea
add
cmp
std
push
inc
adc
adc
rol
and
dec
cmps
jle
adc
xor
inc
ss
cdq
pop
dec
push
test
cs
xor
adc
adc
leave
call
pusha
rol
clc
sbb
or
daa
pop
int3
add
in
mov
push
adc
inc
loop
sub
test
push
push
xchg
cwde
les
or
test
ror
loop
jg
add
loopne
dec
aas
idiv
fld
adc
ja
addr16
push
or
mov
and
sub
push
add
or
jo
and
mov
cmp
jg
cmp
sbb
out
(bad)
and
jmp
mov
(bad)
push
push
add
loopne
leave
fcomp
jo
aam
push
or
arpl
add
lea
and
nop
test
pop
adc
dec
sub
jb
pop
adc
xchg
push
imul
add
test
mov
xor
lock
push
xor
pop
adc
test
mov
mul
loopne
cld
xchg
sbb
loop
adc
jmp
add
pushf
mov
xor
div
mov
mov
or
jge
clc
cmp
mov
ror
loopne
dec
mov
add
fadd
ja
push
ret
mov
hlt
dec
jne
cwde
ins
add
mov
mov
xor
push
mov
and
rcr
in
inc
mov
imul
pop
cmp
in
push
cmp
je
jmp
xor
jb
je
jmp
xor
mov
xchg
and
retf
shl
or
mov
xor
or
push
push
mov
sbb
cmps
dec
lods
dec
mov
mov
xchg
or
dec
ret
add
es
jl
in
pop
cld
adc
test
enter
cmp
test
mov
loopne
mov
push
push
adc
out
fidiv
mov
repz
sbb
mov
or
mov
xchg
pop
addr16
test
mov
and
add
mov
xchg
dec
jnp
push
(bad)
enter
lods
ror
add
xchg
mov
outs
and
jnp
nop
mov
pop
sub
pop
ds
pushf
mov
sbb
loope
inc
jb
jge
mov
iret
or
mov
gs
sub
xchg
loop
lock
cld
std
jbe
out
les
std
sub
inc
sbb
movs
push
and
cmp
pop
or
sub
xor
dec
ret
hlt
sbb
mov
ret
lock
fcom
adc
push
push
inc
sbb
out
stos
add
cmp
pusha
mov
lock
mov
pop
outs
fs
push
fsub
(bad)
xchg
mov
cmps
or
xor
sbb
mov
shl
mov
push
ss
adc
aaa
or
test
cmp
or
ss
xor
xor
cmp
in
jl
xchg
repnz
imul
mov
mov
sbb
or
ins
test
nop
ficomp
add
jge
outs
jb
push
aaa
inc
mov
outs
inc
pop
inc
dec
jle
pop
adc
adc
dec
aas
xor
push
and
push
mov
ins
scas
jne
cmp
xor
or
push
mov
mov
ror
or
add
cmp
sub
mov
inc
retf
cmp
push
add
sbb
ins
push
sub
add
bound
adc
sub
and
add
fs
mov
clc
push
outs
pop
das
mov
jmp
inc
fild
cmp
or
mov
lock
and
sahf
cmp
mov
add
sub
sub
push
ret
inc
cmps
mov
xor
dec
fwait
add
test
retw
or
fstp
adc
jl
sbb
or
xchg
lea
push
aaa
jo
cmp
adc
mov
adc
pop
mov
jo
loope
mov
dec
adc
dec
xchg
adc
and
mov
test
jl
jbe
fsub
inc
cwde
(bad)
or
add
mov
in
pop
cmovg
mov
pop
or
gs
aas
popf
movs
push
mov
adc
imul
add
mov
mov
cmp
mov
(bad)
sti
mov
lock
mov
pop
aaa
fstp
or
sti
pop
nop
add
jl
cvtpi2ps
scas
push
adc
cmps
sub
pop
sar
es
aas
jecxz
sbb
cs
dec
pop
movs
xor
arpl
jbe
adc
test
into
rcl
lods
and
and
out
pop
jmp
xor
sbb
mov
mov
or
in
clc
lods
mov
imul
cmp
pop
sub
outs
mov
je
fcmovnb
ret
xlat
xchg
cdq
loopne
test
sub
retfw
inc
sub
sbb
inc
mov
xchg
mov
bound
pop
pop
push
in
sub
retf
dec
jmp
fsub
sub
inc
sub
mov
dec
out
inc
icebp
push
mov
imul
xor
inc
ins
and
loopne
loope
add
dec
sbb
xor
pop
hlt
sub
xor
iret
jno
jg
xchg
(bad)
rcl
or
cmp
inc
jnp
adc
cmp
push
sub
clc
jg
pop
pop
cwde
xchg
bound
jae
call
pushf
mov
or
js
xor
sbb
pop
adc
mov
adc
xor
cdq
inc
aaa
add
stos
and
sbb
mov
push
add
pop
lock
dec
dec
dec
inc
lahf
inc
dec
adc
sbb
or
sbb
jbe
pushf
adc
add
or
inc
dec
push
ret
sbb
inc
dec
sub
ror
icebp
jnp
or
pop
sub
add
pop
into
(bad)
repnz
dec
mov
xor
xor
stos
sahf
sbb
push
dec
jle
repnz
ret
inc
sub
sub
fidiv
test
xchg
inc
add
jle
pop
mov
ret
jge
mov
ficom
arpl
push
test
cmp
pop
inc
adc
adc
sub
popf
sbb
or
mov
ja
js
xchg
hlt
loope
loop
xadd
jae
das
das
stos
ret
add
ror
enter
add
dec
dec
xchg
and
cmp
arpl
mov
nop
inc
mov
inc
xchg
sbb
dec
mov
inc
scas
es
shl
test
cmp
pusha
and
jo
ins
jae
and
or
test
inc
xrelease
inc
jecxz
and
in
push
sbb
rol
add
adc
in
sub
push
sub
mov
or
xchg
or
add
je
inc
scas
sub
jb
xchg
leave
aaa
in
nop
call
add
push
inc
pushf
les
mov
imul
xchg
test
fbstp
test
and
adc
adc
mov
mov
push
(bad)
int3
pop
lahf
je
cmp
add
dec
add
pop
pop
repnz
les
and
jno
sub
retf
or
(bad)
pop
mov
add
pop
xchg
aad
sub
sub
add
fild
je
mov
dec
and
les
jge
in
push
or
or
sub
aaa
push
or
sub
inc
mov
sbb
fisubr
add
dec
jne
mov
pop
add
dec
pop
jne
push
dec
or
pop
in
mov
adc
add
add
and
add
inc
mov
data16
ror
(bad)
jmp
retf
mov
ins
inc
fimul
mov
sbb
out
sbb
jg
add
mov
push
push
mov
and
or
fisttp
je
jecxz
pop
jp
push
outs
rcl
jecxz
stc
push
and
xchg
sar
sub
adc
or
push
xor
cmps
push
lock
jp
and
test
daa
in
push
inc
call
and
add
dec
sti
mov
mov
and
xlat
push
mov
cs
mov
in
in
cs
jl
das
sbb
push
imul
mov
mov
dec
movs
pop
mov
aam
dec
rol
fidivr
push
xchg
or
rol
xchg
pop
sar
sub
jns
int3
mov
stos
xchg
adc
enter
sbb
sub
scas
add
sbb
jl
and
in
daa
ins
aas
ret
adc
inc
push
nop
pmuludq
mov
pop
sar
jne
cld
push
mov
xchg
jmp
xor
or
cs
xchg
push
ins
pop
jno
xlat
push
dec
scas
sar
or
push
cwde
test
mov
push
lahf
ret
mov
ins
add
inc
sub
push
add
daa
sub
imul
(bad)
ror
mov
jo
sub
and
adc
add
fimul
or
add
clc
mov
in
sbb
sbb
dec
dec
or
ja
in
xor
aam
adc
adc
add
mov
ins
inc
imul
mov
cmps
rol
mov
shl
adc
pusha
xchg
in
or
adc
enter
mov
jmp
sbb
add
inc
or
pop
imul
cmp
mov
sub
sub
add
or
sbb
jge
popa
int3
inc
sub
mov
xchg
push
or
in
sbb
lods
pop
mov
dec
popf
inc
in
sub
ja
or
mov
pop
adc
hlt
mov
dec
jo
dec
popa
jae
neg
or
pop
pop
xchg
dec
fs
or
fs
or
retf
and
push
inc
(bad)
cmp
clc
adc
push
push
mov
xor
cdq
test
cmp
push
jbe
or
shr
cld
mov
sub
push
push
sub
sub
aas
test
or
and
shl
shr
or
mov
push
movs
mov
fld
call
clc
(bad)
movs
(bad)
push
or
scas
jmp
push
rol
mov
sbb
aaa
mov
hlt
adc
inc
jl
pop
jg
or
xor
inc
jmp
popf
(bad)
psubq
pop
ret
pop
push
pop
inc
xor
pop
ficom
mov
(bad)
shr
adc
add
dec
test
mov
js
mov
fmul
or
outs
pop
sbb
les
fist
mov
(bad)
call
jp
xchg
pop
inc
xor
lea
cmp
dec
add
adc
cmp
dec
(bad)
and
adc
jmp
cmps
sub
les
hlt
pop
ret
dec
inc
adc
std
add
jbe
adc
add
(bad)
nop
cmps
pop
imul
inc
cmp
ret
popf
sub
dec
aaa
jmp
out
mov
xchg
cmp
xchg
adc
inc
in
adc
inc
xchg
test
add
inc
rcr
outs
adc
pusha
cmps
pop
shl
and
js
or
popa
or
adc
sar
js
jl
xor
paddsb
push
cmp
aaa
push
(bad)
retf
enter
pop
and
es
adc
add
mov
mov
cmp
mov
in
int3
push
icebp
push
push
in
dec
bound
rol
repnz
mov
xor
add
and
icebp
test
mov
mov
pop
jmp
call
jl
jmp
dec
pushf
cmps
in
fiadd
mov
outs
dec
enter
or
mov
test
pop
icebp
push
or
ror
mov
imul
jo
arpl
inc
add
mov
xchg
test
jmp
push
das
popa
adc
mov
or
and
add
or
xor
icebp
dec
add
and
sub
das
rcl
mov
mov
sar
hlt
int
push
xor
and
xlat
fdiv
je
and
add
xlat
mov
bound
xchg
xchg
add
popf
inc
imul
mov
adc
cmps
add
jne
mov
mov
(bad)
fimul
fucom
lea
pop
pusha
lock
rsqrtps
mov
sub
sbb
shl
rcr
pusha
pop
and
and
daa
lea
mov
(bad)
sbb
or
inc
inc
loopne
adc
std
outs
mov
push
sub
cmc
push
jmp
or
(bad)
jmp
inc
push
in
inc
or
aas
pusha
in
xchg
inc
jbe
mov
push
js
cmps
shufps
adc
movs
pop
aam
add
xchg
xlat
or
movs
sbb
fisubr
in
pop
(bad)
mov
test
cmp
push
sbb
test
add
pop
adc
xor
xchg
adc
fadd
xor
cmp
inc
xchg
popf
or
xlat
jl
or
pop
xchg
ret
les
adc
loopne
or
lock
sbb
dec
fisttp
test
adc
test
xor
cmp
test
mov
jge
sub
in
mov
popf
push
jmp
xor
or
dec
cmp
pop
jnp
xchg
mov
jo
stc
ret
mov
push
lods
sbb
adc
ja
sub
jg
clc
pushf
or
in
inc
inc
mov
aas
and
inc
and
inc
xchg
cmp
jl
inc
sub
sbb
pop
xor
in
std
fs
dec
in
fsubr
pop
jg
dec
or
pop
xchg
and
dec
in
inc
xor
pop
sahf
or
stc
or
test
(bad)
call
mov
sub
or
pop
cs
push
shl
or
add
loopne
loopne
jb
sub
jns
ret
pop
cmp
add
mov
fdiv
push
ret
or
inc
mov
outs
gs
into
adc
cmp
jne
sbb
pop
push
rcr
je
pop
popa
hlt
push
pusha
scas
fcom
lss
lock
aaa
pop
pop
fnstcw
pop
adc
jmp
add
xor
inc
inc
pushf
arpl
repz
add
jmp
es
test
je
lock
movs
outs
inc
adc
fadd
aad
adc
loope
mov
dec
or
and
jb
cwde
test
lods
and
xchg
enter
aaa
mov
mov
xor
mov
lods
retf
aam
push
adc
cmp
mov
push
mov
in
stc
cs
je
ret
pushf
dec
mov
mov
xchg
fstp
pop
mov
je
adc
fdivr
inc
popa
sub
add
dec
pop
(bad)
cmp
int
pop
pop
and
or
fsubr
add
js
mov
jp
dec
and
cmp
rdmsr
pop
sbb
ror
out
ja
aad
or
xor
in
and
hlt
hlt
xchg
cmps
jnp
dec
push
sub
mov
adc
and
sub
mov
and
cld
adc
les
add
jmp
cmp
mov
dec
pop
xchg
in
mov
loope
xchg
cmps
repz
sahf
jge
mov
ss
bound
push
pop
daa
mov
mov
mov
daa
sub
pop
push
cmp
or
mov
jmp
lea
and
adc
add
adc
adc
(bad)
sbb
add
or
push
shl
pop
dec
inc
lea
dec
or
ror
inc
retf
inc
pop
enter
(bad)
sbb
adc
mov
aam
sbb
jnp
pop
adc
(bad)
add
xchg
leave
arpl
cmp
xor
xor
pop
test
push
and
mov
(bad)
arpl
leave
and
add
sahf
jb
and
push
rcl
or
dec
test
inc
ret
jne
ss
iret
add
dec
or
ins
sub
adc
js
push
push
inc
pusha
mov
or
fsub
xchg
in
sub
inc
movs
push
pop
dec
dec
pushf
mov
sbb
into
dec
dec
je
ja
xor
repnz
mov
popa
call
clc
and
push
inc
inc
leave
bound
nop
call
pop
aad
cwde
or
add
cld
push
mov
and
jns
dec
(bad)
dec
shl
sbb
or
or
outs
inc
into
test
or
mov
xchg
inc
xor
xchg
or
cmp
add
hlt
lock
sbb
xchg
popa
mov
stos
outs
xor
mov
sahf
push
add
stos
push
mov
(bad)
inc
loopne
dec
mov
adc
mov
pusha
les
mov
sbb
js
xlat
sbb
lods
push
push
add
mov
sbb
adc
pop
aad
movs
push
cld
push
and
add
movs
daa
scas
fidivr
mov
sbb
out
je
icebp
int
adc
(bad)
int
movs
cs
inc
push
test
movs
movs
inc
push
ror
lods
hlt
rcr
jns
lods
cmp
jb
push
pushf
and
sbb
dec
or
push
loope
add
dec
mov
call
jae
push
or
inc
xor
add
lea
stos
(bad)
add
bound
aas
in
sti
mov
cs
push
mov
das
inc
jg
enter
push
add
aad
ins
pop
in
pop
or
mov
dec
adc
retf
push
or
nop
sbb
xchg
sbb
out
mov
out
inc
mov
lds
pop
js
adc
pop
pusha
retf
test
aaa
addr16
stos
(bad)
adc
sbb
add
fcmovb
push
inc
sub
ret
idiv
mov
xor
js
scas
pop
movs
adc
repnz
cmp
pop
leave
in
mov
js
dec
jge
lahf
lea
mov
sahf
dec
inc
or
jmp
pop
rol
or
inc
loop
add
mov
mov
or
mov
inc
pop
pop
pusha
repz
sbb
mov
add
ret
pop
push
rol
fld
ret
xchg
and
sub
fs
test
dec
lods
pop
push
outs
or
push
or
and
inc
push
mov
xchg
call
xchg
jne
outs
push
adc
inc
xor
icebp
dec
(bad)
sbb
mov
jmp
mov
push
sbb
xor
out
push
sbb
dec
add
sub
jb
ins
sbb
idiv
add
shl
or
mov
push
and
inc
inc
mov
adc
xor
adc
arpl
adc
sub
dec
push
mov
(bad)
push
jl
inc
out
pop
lahf
mov
pop
xor
ss
and
cmp
cmp
stc
mov
sub
cmp
fmul
xor
mov
addr16
repnz
loopne
adc
xchg
rol
cmp
mov
cmp
push
nop
call
xor
popf
cmp
fcomp
cmp
in
cmp
cmps
rol
fmulp
cmp
mov
jmp
cwde
mov
xchg
ss
xor
repnz
and
popf
mov
push
scas
cmp
push
pusha
add
xor
and
enter
repnz
dec
test
jns
mov
movs
aaa
inc
xor
(bad)
cmp
mov
mov
sub
pop
xor
jl
iret
dec
cmp
js
jbe
ss
stc
mov
les
sbb
cmp
out
sbb
adc
xchg
addr16
cmp
or
dec
fmulp
mov
add
sub
hlt
das
clc
push
or
hlt
fs
test
in
pop
iret
enter
ss
stc
mov
mov
fmul
fcomp
mov
cmp
int3
out
mov
iret
enter
adc
or
inc
aaa
(bad)
mov
ds
outs
or
jno
mov
lea
cmp
neg
sbb
stc
or
push
sub
lahf
ins
or
dec
dec
mov
xchg
jno
jmp
sub
mov
movs
test
xchg
dec
adc
mov
ret
cmp
mov
bnd
adc
mov
or
repnz
xor
movs
xchg
pop
sbb
movs
fst
or
mov
adc
ins
or
inc
sub
sbb
lea
xchg
or
outs
inc
xchg
fcmovne
aaa
fdivrp
hlt
(bad)
and
adc
data16
and
sub
xchg
adc
push
inc
sbb
adc
ror
and
pop
ret
dec
xor
cdq
idiv
or
jg
add
jo
or
add
mov
add
cwde
test
pop
leave
cmp
cmp
nop
fild
xlat
and
inc
pop
leave
stc
pusha
sub
jb
cmovb
lock
sub
xor
inc
pop
or
jb
pop
and
data16
xlat
cmp
mov
nop
into
ret
in
xchg
iret
daa
imul
mov
pop
out
inc
cmp
cmc
sbb
adc
mov
std
and
leave
in
clc
xlat
adc
enter
or
jae
pop
jae
sbb
cld
and
jmp
inc
enter
nop
fbld
adc
sbb
test
jecxz
nop
sub
(bad)
adc
pop
xor
je
pop
mov
or
lea
lds
mov
adc
je
leave
dec
xlat
adc
into
call
leave
loopne
add
in
pop
test
mov
nop
test
pop
mov
mov
ret
jg
push
jle
mov
push
mov
and
and
out
mov
les
int3
mov
push
aam
fcom
in
in
dec
xor
and
hlt
int3
cmp
and
cld
rol
fs
dec
push
aam
fsubr
fcom
es
and
pop
es
xor
test
in
mov
es
fs
pop
es
clc
jns
es
xchg
xchg
push
sub
add
inc
aad
jo
ror
push
inc
popa
mov
cmp
inc
push
cli
mov
js
jge
bnd
add
outs
je
fs
jne
xchg
pop
mov
ins
inc
imul
in
and
jb
pop
outs
jb
fnstsw
repnz
ins
jo
inc
jb
ins
push
je
pop
push
add
dec
ins
mov
out
and
and
dec
aas
inc
jae
pusha
outs
and
inc
jns
(bad)
pop
push
jns
pop
outs
neg
ja
sbb
ja
mov
inc
mov
and
pop
aam
adc
out
pop
mov
int3
in
repnz
cld
or
or
mov
xor
push
adc
mov
nop
inc
cwde
jecxz
pushf
in
sub
jns
out
cmp
and
loop
test
rcr
mov
cld
cmp
sbb
adc
inc
push
neg
popa
inc
aas
xor
sbb
ret
fld
sub
and
dec
fs
ins
jns
fdiv
push
inc
(bad)
or
adc
pop
fsubr
loopne
leave
inc
in
inc
push
mov
sbb
jp
lds
push
sti
out
int3
pop
xchg
pop
and
pop
inc
sti
jge
iret
inc
jb
repz
jnp
loope
add
dec
jnp
popa
adc
xchg
iret
fucomi
mov
cs
iret
mov
jl
cmp
xchg
adc
out
xchg
icebp
push
call
pop
add
shl
mov
jb
add
sub
adc
xor
adc
fdivr
fimul
jo
out
movs
fcomp
shr
sbb
add
jb
jle
jl
cs
mov
jle
sub
cmp
and
adc
add
test
xchg
cld
and
xchg
or
jns
cmc
push
xor
cmps
mov
xor
add
mov
fwait
retf
jnp
xchg
scas
sbb
and
add
(bad)
call
or
in
mov
mov
jg
in
sbb
and
in
push
enter
or
mov
add
adc
cmp
inc
dec
sbb
pop
jb
aaa
pop
jl
add
and
add
xor
add
int
jmp
jg
add
and
retf
clc
outs
test
in
sub
pop
add
mov
or
mov
inc
je
dec
je
sbb
xchg
out
lods
fs
push
nop
pop
xchg
in
shl
loopne
jbe
add
cmp
or
add
jp
repnz
movs
clc
mov
in
retf
clc
pop
dec
hlt
push
repnz
mov
jnp
add
cmp
mov
sub
sbb
in
mov
jl
stc
sbb
call
dec
jge
cmp
je
jae
xor
jmp
jmp
pop
enter
mov
add
cli
enter
pop
rol
sbb
xor
lods
xor
pop
mov
and
and
push
cmp
ds
loopne
or
or
mov
push
cmp
sub
push
into
add
fs
mov
jmp
adc
push
mov
dec
mov
cmp
fdiv
sbb
jae
cdq
in
inc
dec
clc
mov
xchg
fucomi
xor
mov
push
pop
(bad)
outs
push
jno
pop
push
enter
xlat
dec
test
inc
jle
test
ja
add
add
push
add
nop
push
pop
lahf
sbb
add
push
rol
ror
xchg
xor
dec
push
fisub
dec
xor
jge
call
repnz
(bad)
mov
ins
jnp
fiadd
inc
lods
ins
fistp
xchg
out
out
sub
bound
mov
push
cwde
pop
in
das
lahf
sub
cld
test
pop
push
or
inc
add
push
push
add
push
or
ds
cmp
mov
inc
bswap
or
test
adc
pop
les
mov
inc
mov
sti
jmp
and
sbb
or
rsm
add
jl
inc
nop
mov
(bad)
push
dec
outs
imul
xchg
add
push
jno
xchg
lock
push
and
add
jge
pop
adc
dec
inc
add
jmp
inc
mov
sub
mov
xor
push
dec
jnp
xchg
div
je
pop
sub
in
test
jnp
add
push
ins
xchg
daa
in
xor
pop
in
rol
adc
dec
jmp
call
jae
push
aas
jmp
sub
jl
inc
add
mov
clc
jecxz
inc
inc
nop
out
add
add
int
add
add
or
mov
mul
and
ss
add
push
es
enter
dec
xchg
and
or
or
test
mov
mov
daa
mov
jbe
es
movs
pop
mov
pop
jb
inc
data16
or
jne
sub
fistp
sbb
and
shl
sbb
jne
into
ror
add
cmps
retf
adc
xchg
adc
aad
mov
push
push
sub
add
cmp
add
xchg
(bad)
jo
inc
cli
push
jmp
sub
or
sbb
or
ret
in
push
push
out
add
jmp
pop
iret
pop
inc
pop
mov
xor
xchg
dec
jge
pop
mov
adc
sti
add
ds
outs
mov
cli
call
or
dec
cs
js
loopne
and
fimul
adc
sub
or
adc
dec
in
loopne
xchg
sub
inc
in
in
adc
or
loopne
movs
outs
in
retf
push
jno
xor
add
imul
and
mov
retf
dec
call
and
retf
loop
js
cmp
xchg
pop
jb
scas
pushf
or
adc
hlt
push
ds
pop
data16
jns
clc
xchg
test
add
inc
push
dec
push
std
cmps
fnsave
adc
ja
fs
test
dec
sbb
bound
dec
jae
cmc
sub
push
pop
nop
aas
add
add
imul
ja
ds
add
or
inc
shl
retf
cli
push
inc
or
and
push
(bad)
adc
dec
push
pop
(bad)
ret
mov
mov
test
add
leave
pop
aad
sub
jno
aam
add
adc
lock
cmp
je
(bad)
call
mov
dec
jb
and
ja
push
pop
or
rol
test
cmps
nop
(bad)
enter
mov
stos
outs
(bad)
xor
pop
dec
adc
iret
in
jle
jmp
stos
icebp
mov
cli
mov
cdq
pop
bound
cmp
retf
imul
sub
scas
scas
in
enter
mov
cmp
das
in
cli
mov
rcr
xchg
inc
(bad)
(bad)
or
push
jb
hlt
dec
je
jb
or
shl
sbb
ret
loopne
cmp
or
jge
(bad)
fwait
xchg
(bad)
das
adc
adc
mov
cmp
push
in
push
jae
pop
popa
push
nop
popa
push
push
pop
sbb
mov
aas
jae
rcl
add
cmp
or
sbb
jnp
jmp
inc
adc
push
mov
jmp
add
push
loope
push
aaa
add
sbb
or
jge
daa
das
cmp
cli
rol
cmp
jne
loope
jo
add
adc
cmc
sbb
int3
sbb
shl
or
xchg
ror
push
out
iret
repz
jne
movs
es
fdiv
nop
push
mov
repz
mov
ficom
ret
(bad)
aam
cmp
shl
ret
push
jl
adc
clc
mov
ret
mov
imul
sub
call
fwait
xchg
cld
mov
xor
sub
mov
(bad)
cmp
and
lods
fistp
jb
daa
sbb
test
xchg
jl
rcl
cs
fcmove
aam
xchg
rcr
jb
inc
xor
js
cld
jnp
xchg
mov
jbe
lea
pop
jmp
and
push
das
dec
add
jle
add
inc
adc
inc
loopne
sub
je
dec
sahf
hlt
ret
push
and
ins
jmp
adc
mov
xor
dec
jle
add
fcomp
adc
rol
push
daa
cld
mov
add
sub
inc
jmp
std
jg
sub
xor
xchg
lea
int3
sbb
and
xchg
xor
or
mov
mov
movs
jns
inc
cmc
mov
adc
push
(bad)
add
or
push
lahf
push
stos
call
arpl
push
fidivr
xchg
sbb
xor
cmp
and
and
jmp
popa
hlt
xchg
cmp
in
and
xchg
push
rcr
xchg
in
imul
xchg
push
cld
or
jg
aad
aam
inc
mov
mov
les
leave
xor
mov
sub
mov
adc
mov
inc
add
dec
fistp
mov
stos
xchg
add
iret
repz
dec
imul
mov
repz
out
daa
repz
push
and
cmp
aaa
push
push
jo
push
bound
data16
sub
and
xor
shl
adc
pop
push
sar
cmp
pop
xor
add
dec
scas
inc
fisttp
fdiv
imul
fsubr
mov
mov
(bad)
xor
ins
add
add
ss
jb
nop
enter
neg
je
dec
je
or
jmp
mov
and
int3
sub
test
mov
mov
(bad)
cli
repnz
lea
test
xchg
rcr
pop
xchg
jo
idiv
and
mov
je
and
cmp
repz
data16
adc
sar
add
mov
in
sub
(bad)
inc
(bad)
sub
fild
sbb
test
mov
mov
jmp
jbe
sbb
inc
rcr
adc
inc
aaa
test
daa
jg
and
fidiv
test
mov
(bad)
push
aas
xchg
push
push
pop
xlat
fcmovnbe
jae
or
pop
jnp
fstp
aas
sbb
add
aas
adc
or
adc
jg
(bad)
je
jb
xor
pop
rcr
jmp
pusha
jl
ret
xchg
outs
mov
shl
test
sub
add
scas
jbe
and
in
jns
adc
pusha
lea
push
jae
mov
push
jbe
sbb
pop
push
dec
or
pop
popa
cwde
pop
rol
and
dec
sub
cmp
add
mov
add
out
mov
daa
add
add
fnstenv
loopne
cli
popa
out
add
nop
sub
repnz
add
sbb
xor
mov
adc
mov
pop
push
pop
cdq
mov
jb
add
jl
jb
out
add
ja
adc
lahf
cdq
mov
add
mov
add
xor
push
call
icebp
cli
not
sub
mov
xor
inc
jo
cmps
adc
jg
mov
out
sahf
imul
scas
push
mov
(bad)
nop
sub
jmp
stos
mov
push
cmp
pusha
push
fs
or
inc
push
fwait
les
sar
dec
xlat
adc
or
pop
call
push
mov
jno
pusha
add
call
mov
push
or
sar
dec
pop
aaa
cmp
jne
shl
rcr
movs
daa
xchg
sbb
adc
sub
cmp
inc
and
push
cdq
mov
sbb
(bad)
xchg
jl
xor
movs
and
(bad)
fsub
adc
add
mov
aam
xor
fadd
dec
loopne
cmp
fnsave
inc
es
mov
fnstenv
adc
or
adc
fdiv
movs
xor
inc
cs
popf
call
mov
cwde
bound
adc
sbb
popf
call
pop
addr16
add
sub
dec
add
clc
out
aaa
arpl
(bad)
push
pop
push
nop
mov
sahf
repz
rol
inc
outs
adc
fdiv
movs
lahf
mov
mov
lahf
pop
pop
sbb
adc
jns
aas
push
data16
and
mov
adc
adc
push
adc
popa
and
pop
leave
les
frstor
and
arpl
ins
inc
mov
pushf
and
and
and
aad
fs
and
add
mov
sub
pop
arpl
clc
mov
jmp
mov
and
dec
ret
lahf
das
mov
mul
mov
cmps
fwait
mov
push
pop
sub
jns
mov
pop
pop
ds
imul
cdq
mov
aam
mov
pop
sbb
in
das
fstp
add
addr16
sub
sbb
push
mov
inc
sub
(bad)
leave
data16
add
push
(bad)
icebp
call
sub
loopne
sbb
push
nop
and
cmp
pop
adc
sbb
add
adc
ret
popa
mov
mov
add
das
mov
push
shl
pop
pop
fcomip
cli
push
cs
mov
mov
adc
jne
fwait
and
daa
mov
scas
sub
das
in
pop
jmp
jbe
mov
sbb
xor
pop
rcl
ja
movs
mov
and
adc
gs
pop
cs
(bad)
sti
mov
ds
push
pop
aad
add
xchg
or
test
jmp
xchg
or
adc
(bad)
xor
mov
adc
out
ror
and
out
xor
or
das
pop
push
push
test
dec
and
push
dec
or
xor
push
or
test
out
add
fcmove
push
sbb
ret
out
ds
jmp
iret
repz
inc
pop
push
jmp
ins
fistp
jl
xchg
movs
dec
or
jns
(bad)
fcmovb
xchg
pop
repnz
cwde
fimul
cmp
cwde
or
xchg
sbb
ss
jp
sbb
inc
in
call
adc
fisttp
pusha
pandn
xchg
rol
sbb
mov
jb
sbb
stos
mov
sbb
add
ror
pop
(bad)
mov
sbb
mov
test
pop
pop
sbb
sub
sbb
(bad)
ins
loope
cmps
adc
pop
mov
cmps
stc
cmp
(bad)
add
sbb
and
inc
inc
push
scas
pop
push
jns
out
popa
ins
jp
call
iret
push
icebp
bound
sbb
fld
pop
mov
sub
cmp
pusha
adc
jge
ret
into
in
pop
jno
sbb
or
cmp
sub
and
xor
jmp
lahf
jmp
jo
mov
clc
ins
test
xor
pop
add
pop
pop
jne
jb
shl
xchg
add
mov
lods
test
lock
mov
addr16
shl
(bad)
add
lock
jmp
add
add
or
enter
add
shl
sbb
das
pop
and
push
das
pop
stos
adc
sub
fwait
sub
xchg
adc
stos
pop
add
scas
add
mov
push
sahf
out
sahf
cmp
jbe
xchg
cmp
mov
jl
ins
repnz
imul
rcr
inc
leave
inc
cmp
and
sahf
nop
dec
pop
dec
xor
leave
addr16
cld
pop
fcmovnu
mov
dec
pop
enter
lods
cwde
fld
loopne
jge
arpl
(bad)
cwde
hlt
inc
movsx
nop
add
sub
push
mov
cli
pop
fwait
jge
movs
cli
fild
inc
xor
inc
pusha
dec
sbb
inc
mov
push
inc
pop
add
pop
fadd
aaa
int
and
push
cdq
mov
(bad)
pop
mov
nop
pop
call
test
pop
iret
repz
dec
lods
push
fs
call
inc
mov
xor
xor
in
push
add
add
cmp
enter
xor
mov
and
or
dec
std
inc
dec
pop
adc
mov
mov
test
jb
push
mov
inc
pop
loop
lds
cmp
jmp
add
jmp
jmp
fimul
cmp
jp
cmp
adc
inc
rcr
jae
inc
fucomip
push
out
fist
retf
scas
push
sub
cmp
aaa
jns
imul
mov
aaa
lock
cmp
mov
in
aas
fild
sbb
sbb
mov
hlt
fisttp
nop
mov
add
sub
inc
mov
in
aam
push
mov
fild
xor
jb
push
jnp
pop
cmp
push
mov
push
mov
sub
cmp
inc
into
cmp
loopne
add
popa
xchg
and
jo
out
cmp
push
adc
dec
mov
adc
in
dec
or
sbb
(bad)
and
inc
xor
loopne
ret
xchg
or
or
movs
hlt
pushf
nop
and
mov
pop
repnz
ss
dec
dec
cwde
or
lahf
mov
int3
adc
pop
ret
xchg
test
outs
inc
push
arpl
and
adc
clc
repnz
or
mov
pop
and
pop
mov
and
push
repnz
mov
repz
xor
push
ss
push
fisub
push
xchg
mov
fwait
jl
push
movs
push
popa
mov
mov
into
push
jecxz
adc
sub
add
test
rcl
fist
adc
mov
mov
or
inc
mov
add
mov
xchg
mov
cmps
test
pop
xor
push
ret
or
sub
nop
mov
rol
mov
or
rcl
pop
mov
sub
mov
pushf
mov
inc
mov
pop
xchg
aaa
in
jae
xor
out
shl
cmps
mov
pop
push
push
clc
and
test
mov
test
mov
dec
and
push
test
push
scas
test
or
sub
in
sbb
xchg
mov
mov
fs
xchg
and
add
push
es
inc
leave
inc
mov
cmp
mov
in
push
in
add
shr
jae
dec
mov
fist
test
push
fild
jb
cdq
inc
push
fild
mov
inc
push
mov
jge
jns
daa
pop
mov
and
xchg
out
fisub
push
xor
jp
repz
mov
fbstp
jl
xchg
mov
or
xor
dec
bound
jns
hlt
push
lods
hlt
jl
ret
or
and
and
mov
pop
in
mov
cmovae
cmps
xchg
(bad)
cmp
das
mov
dec
and
adc
pop
cmp
imul
sbb
add
imul
fcomp
inc
sbb
inc
pop
jmp
cld
imul
adc
imul
sahf
scas
ins
jns
sahf
ret
loop
lds
out
iret
xor
sbb
push
push
js
xor
imul
add
sub
aad
mov
or
mov
or
shl
dec
ins
inc
(bad)
mov
mov
fbld
ds
fistp
in
loopne
and
test
jmp
rol
push
ins
stos
add
in
test
cmps
add
jecxz
out
test
ja
inc
cmp
test
jns
test
scas
push
xlat
xor
sbb
das
ss
push
mov
and
pop
adc
add
int
dec
dec
je
and
clc
mov
or
push
pop
cld
mov
mov
aam
mov
lock
test
or
sbb
push
cmp
or
adc
sub
and
arpl
push
sub
aaa
pop
test
push
shr
inc
in
test
add
mov
in
mov
test
inc
ins
jns
mov
cmp
in
dec
and
and
arpl
inc
mov
pop
add
aad
cmp
mov
call
adc
in
xchg
cdq
movs
loopne
mov
and
add
add
cmp
mov
sbb
xlat
rcr
in
sbb
test
inc
nop
xlat
xor
ret
inc
stos
cmps
add
shl
sahf
add
repnz
cmp
sbb
ds
and
lods
push
xchg
ret
popf
out
mov
sub
jno
or
popa
shl
inc
dec
add
pusha
aaa
push
mov
sbb
or
pop
push
mov
call
dec
mov
sbb
and
not
pop
leave
leave
lock
add
cmp
leave
push
lods
or
inc
aam
xor
add
inc
call
in
pop
mov
push
rcl
push
loopne
xchg
mov
xchg
mov
ds
out
xor
xchg
fdiv
(bad)
and
(bad)
xchg
pop
leave
fdivr
aam
shl
dec
inc
call
hlt
rcr
adc
int3
inc
int3
enter
ins
cmp
lds
stos
scas
inc
pop
les
sub
or
cmp
shr
das
movs
pop
sub
add
inc
mov
cdq
adc
cmp
rcr
ret
loope
les
push
jbe
les
push
rol
sub
dec
jae
push
adc
or
sti
push
sbb
test
jnp
js
adc
ins
or
inc
sti
mov
test
popa
push
mov
xchg
adc
xlat
mov
cmp
mov
leave
rcl
mov
sub
mov
das
test
mov
sub
or
sbb
popf
movs
repz
xchg
mov
mov
mov
mov
retf
inc
cwde
dec
loope
cmps
add
sbb
adc
sbb
enter
jmp
wrmsr
cmp
imul
dec
bound
shr
repz
pop
test
mov
scas
mov
mov
pusha
mov
cmp
pop
adc
add
inc
pop
rcr
mov
pop
call
mov
(bad)
pushf
movs
xor
add
jmp
sub
rol
mov
jo
jnp
enter
cmp
mov
xor
xchg
sbb
call
fmul
cwde
mov
push
xchg
enter
pop
jmp
imul
popf
in
and
inc
sbb
bound
ja
or
enter
sbb
ss
xor
inc
lods
adc
mov
gs
into
dec
aad
sub
rol
cmp
xchg
mov
imul
retf
retf
push
shr
(bad)
sahf
sub
pop
pop
inc
retf
clc
cmp
jnp
mov
retf
cmp
out
dec
mov
test
adc
xor
push
xor
rcl
test
cmp
inc
xor
test
adc
cmp
pop
adc
je
in
in
es
push
xor
mov
out
xor
mov
sbb
aam
mov
pusha
push
or
jo
shl
mov
pop
enter
movs
enter
add
and
cwde
sub
sbb
mov
pop
mov
mov
cmp
jno
hlt
xlat
int
adc
sub
dec
ins
(bad)
scas
int
inc
in
mov
cmps
daa
sub
xchg
retf
cmp
call
inc
adc
jne
sub
shr
fmul
ror
adc
rol
or
xor
jno
mov
(bad)
into
mov
jo
in
pusha
dec
lods
test
loopne
inc
xor
imul
aad
inc
enter
mov
pushf
xor
pop
or
cwde
cwde
mov
and
jno
and
or
push
mov
jmp
mov
push
sub
jmp
scas
mov
add
mov
adc
dec
push
imul
in
into
mov
or
test
pop
test
add
fsub
sub
pushf
in
nop
jb
cmp
ja
into
mov
push
cmc
into
loopne
or
jno
iret
test
pop
xchg
iret
movs
or
shl
loopne
and
(bad)
mov
mov
cmps
es
mov
aad
pop
out
neg
movs
push
sar
push
mov
shl
shl
cmp
call
daa
cmp
cwde
push
mov
in
or
test
les
xlat
push
dec
fadd
lds
push
sub
push
xor
aad
ins
les
push
aad
in
lods
cmp
push
mov
xchg
mov
jne
movs
mov
movs
imul
loope
mov
mov
xor
stos
xchg
inc
shl
cmp
(bad)
push
das
scas
mov
add
movs
dec
pop
xor
outs
inc
adc
push
fidiv
xchg
mov
xor
imul
pop
dec
shl
pushf
idiv
movs
(bad)
out
aam
push
aam
repnz
outs
lds
sub
mov
adc
dec
imul
inc
repz
mov
inc
jmp
sub
cmp
xchg
inc
and
pop
push
pop
rcr
pop
inc
aad
cmp
dec
pop
lods
cmp
aas
cdq
(bad)
movs
aad
cmp
lock
mov
mov
es
outs
dec
aam
clc
cwde
xor
jbe
push
test
imul
mov
test
push
movs
jmp
cmc
mov
ss
and
shl
mov
add
inc
push
adc
je
(bad)
cmp
adc
jmp
adc
push
cli
xchg
cmc
daa
sbb
aas
jmp
sub
push
or
add
je
ss
arpl
js
or
cmp
push
push
fisttp
lds
jmp
lods
add
mov
mov
nop
xor
retf
dec
retf
ret
jmp
out
add
push
xor
add
outs
inc
ins
or
xchg
sub
xor
or
mov
ja
cmc
adc
or
push
test
test
rcr
stos
inc
ret
mov
mov
in
xchg
or
das
dec
sbb
jae
stos
popf
test
into
aas
dec
repnz
lods
jno
push
adc
mov
mov
gs
cmps
adc
mov
adc
adc
lock
lea
pop
adc
or
pop
sub
adc
popf
jmp
push
xchg
movs
cwde
or
push
loop
enter
push
push
or
loope
add
or
pop
repnz
push
nop
fdiv
dec
(bad)
and
ficom
js
pop
or
xchg
scas
push
add
js
gs
sub
loop
stos
pop
sbb
mov
push
mov
loopne
rcr
mov
dec
in
xchg
ret
push
jmp
rol
movs
ret
(bad)
pop
lea
or
adc
dec
and
movs
nop
push
retf
inc
add
and
rcr
imul
xchg
into
lea
icebp
das
cdq
frstor
xor
jno
dec
retf
fmul
jg
loopne
test
cmp
test
aaa
cdq
js
xchg
shl
jb
je
mov
div
dec
je
gs
cmp
dec
fs
jl
fwait
pop
push
(bad)
mov
or
or
adc
or
jmp
jg
and
ins
sti
and
and
adc
cmps
pop
dec
push
mov
adc
js
and
movs
dec
ret
and
jno
lods
cs
and
stos
push
mov
mov
inc
les
fsubr
sub
mov
and
lmsw
pop
jmp
inc
jae
and
(bad)
push
add
and
sbb
outs
mov
mov
xchg
push
iret
jmp
or
mov
push
mov
leave
scas
enter
aaa
inc
add
or
xchg
mov
dec
and
mov
add
pop
or
fdivr
cmp
outs
outs
aas
pop
lods
xchg
lods
out
dec
sub
jb
and
fnsave
data16
mov
xchg
bound
cdq
js
jne
inc
xor
gs
cmps
jbe
xor
cmps
dec
movs
xor
sti
fwait
push
ss
xchg
jae
push
(bad)
outs
xchg
inc
es
in
cs
outs
aaa
push
jnp
sti
fisub
pop
imul
imul
mov
outs
inc
call
ret
pop
inc
inc
mov
xor
inc
ret
xchg
inc
add
xchg
fs
dec
sub
fsub
cs
add
clc
add
push
xor
add
movs
jl
js
loope
sti
xchg
push
pop
and
push
push
fdiv
repnz
out
mov
jb
push
ins
and
out
xor
jo
and
iret
add
je
sbb
mov
call
jno
sbb
pop
(bad)
into
and
mov
dec
push
sbb
mov
enter
adc
lods
lea
daa
fbld
push
adc
ds
aaa
lea
pop
xor
add
ins
jb
pop
or
retf
and
push
aas
imul
(bad)
out
inc
es
inc
ja
cs
mov
data16
push
or
mov
les
mov
or
rcl
cmps
add
pop
xor
or
xor
js
sub
pop
mov
and
push
and
cmp
and
pop
jno
or
sbb
add
cmp
cmovl
pop
push
cdq
cs
out
mov
sub
out
inc
or
xor
retf
dec
sub
inc
inc
push
dec
add
mov
adc
pop
mov
add
mov
dec
jae
inc
dec
mov
jecxz
jnp
push
inc
mov
je
push
adc
into
add
push
daa
xchg
mov
adc
arpl
or
push
test
add
and
push
sbb
add
add
add
add
daa
push
mov
and
sub
push
or
adc
ret
lods
ret
inc
(bad)
jmp
pop
pop
sbb
jne
push
cld
std
sti
jecxz
xchg
mov
inc
add
jo
loop
ds
xor
cmp
test
or
enter
in
ss
bound
dec
setl
sbb
cld
idiv
push
xchg
and
mov
inc
sbb
jo
pusha
test
jmp
jae
inc
mov
add
jnp
mov
test
daa
mov
cmp
lods
pop
pop
add
xor
add
push
in
adc
stc
jbe
inc
call
jle
xchg
ins
in
or
push
lock
repz
jno
inc
mov
adc
leave
pop
add
loope
in
xchg
cmp
dec
jecxz
ret
cmp
sub
and
out
and
and
aas
test
mov
mov
xor
sbb
xchg
xchg
aam
add
mov
jnp
push
shl
jnp
inc
dec
jne
jno
out
movs
adc
pop
dec
and
dec
out
ret
call
or
dec
retf
out
or
inc
rcr
dec
mov
das
rcl
cmp
test
push
mov
cld
loope
inc
outs
adc
movs
and
out
inc
cmps
movs
add
mov
fbld
push
mov
rcr
lea
add
lock
test
pop
cld
pop
out
push
sbb
into
push
add
jns
inc
xabort
push
or
aad
cmp
xor
push
cmp
push
xor
fld
mov
mov
or
add
pop
jl
add
sub
data16
addr16
inc
or
push
adc
or
push
mov
cld
push
add
mov
and
(bad)
inc
jmp
or
jne
dec
test
and
jne
jmp
mov
out
xlat
ins
enter
pop
std
test
clc
jle
jle
pop
outs
and
adc
inc
or
mov
ss
dec
inc
sub
add
and
std
push
rol
fs
xlat
loopne
sti
call
idiv
shr
or
mov
je
cs
hlt
xchg
sbb
mov
jl
or
xor
push
or
pop
pop
mov
test
test
dec
clc
or
dec
mov
and
fistp
retf
je
mov
test
out
push
sbb
jne
and
outs
sbb
ss
in
scas
movs
and
cmps
sbb
loop
jo
mov
jmp
xor
adc
lds
jle
dec
jne
jmp
mov
inc
sbb
pop
or
int
and
pop
je
mov
pushf
sbb
mov
jmp
adc
add
icebp
adc
(bad)
gs
and
lock
mov
mov
push
add
dec
jecxz
mov
or
lea
mov
jmp
mov
cmp
mov
adc
jg
sbb
jmp
pop
mov
jmp
iret
push
mov
mov
mov
adc
aas
pop
je
pop
mov
add
lar
dec
dec
mov
stos
dec
loopne
jmp
add
mov
cmp
ret
fdivr
jae
es
or
movsx
and
sbb
(bad)
out
or
ss
fisttp
cmp
push
mov
cmp
ja
jb
add
xchg
out
test
call
(bad)
out
mov
sub
mov
mov
or
add
mov
inc
movs
mov
stos
xor
push
adc
mov
adc
pop
popa
ins
sub
popa
jg
fst
es
sub
pop
push
and
jnp
jmp
pop
imul
mov
jle
push
xchg
mov
inc
cmp
pop
retf
sbb
sar
mov
dec
or
lods
cmp
inc
adc
enter
scas
pop
sub
inc
lahf
retf
les
jmp
sbb
dec
aam
pop
mov
cmp
out
mov
jne
clc
inc
mov
jne
(bad)
sub
test
sub
mov
adc
xor
ja
xchg
pop
ins
scas
test
in
xchg
sbb
xor
or
(bad)
mov
jnp
jp
jmp
fcom
mov
loopne
cmp
inc
mov
hlt
cmp
cmp
add
fisubr
add
mov
push
or
lods
rcr
hlt
pop
mov
push
pop
ins
lea
jp
sahf
call
fdivr
mov
xchg
mov
inc
fadd
(bad)
or
cmp
(bad)
mov
inc
xchg
add
fild
or
cmps
jne
xchg
cmp
mov
popa
call
push
test
imul
lods
pop
or
or
pop
xor
xor
hlt
adc
dec
push
out
or
dec
pop
add
add
add
or
dec
cdq
lea
push
adc
adc
mov
retf
adc
sub
or
iret
fild
adc
pop
mov
nop
dec
xchg
ret
and
lock
xor
xchg
loopne
cmps
ret
add
adc
repz
and
aas
pop
loope
retf
mov
push
(bad)
rol
push
cwde
loop
fimul
dec
mov
fcmovnu
loopne
fmulp
imul
add
sbb
lea
in
(bad)
jo
add
in
icebp
(bad)
shl
in
inc
or
push
inc
scas
or
jecxz
add
mov
rol
adc
pop
dec
xlat
mov
bound
xchg
fisttp
mov
sar
iret
iret
fisubr
sbb
jecxz
adc
sub
jmp
sahf
adc
or
cmp
or
adc
and
xor
xchg
repnz
mov
jge
mov
mov
repz
ret
sub
adc
push
add
cmp
addr16
les
gs
adc
lods
in
adc
pop
push
in
add
sub
pop
adc
outs
xor
sub
shl
jo
ss
hlt
pop
repz
jmp
shl
sbb
sub
dec
or
adc
rcr
adc
or
popf
or
sub
cmp
pop
adc
mov
push
push
dec
es
cmp
add
rcr
add
mov
add
or
sbb
out
ins
mov
add
dec
or
jae
jne
add
int
adc
rol
or
dec
or
dec
add
(bad)
mov
dec
movs
fld
xor
fxch
lea
cmp
or
popa
setne
aaa
xor
out
push
call
xor
cdq
sub
test
pop
in
ins
es
aaa
mov
cmp
cli
push
push
sbb
das
(bad)
jnp
mov
int3
sbb
or
imul
stos
jle
call
sub
or
data16
mov
fimul
push
sbb
push
int
inc
pusha
gs
inc
ins
popa
pop
ins
jmp
xchg
or
inc
imul
gs
add
bound
test
nop
rcr
pop
adc
dec
outs
sbb
sub
cmps
mov
outs
ins
jns
data16
adc
rcr
mov
test
xchg
push
and
(bad)
adc
adc
loopne
add
jae
loopne
repz
fadd
mov
push
ins
xor
push
mov
inc
je
fild
cmp
push
or
dec
imul
fs
adc
bound
imul
or
test
cmps
add
dec
gs
jo
ret
add
je
add
mov
add
outs
scas
cmp
es
fimul
jns
fisttp
or
jae
ret
or
cmp
adc
(bad)
or
ss
sar
call
enter
clc
fs
pop
jg
dec
ror
test
inc
test
pushf
pop
mov
push
fbstp
sbb
mov
out
clc
and
mov
push
not
ror
fist
dec
dec
outs
(bad)
xlat
ja
test
add
lahf
or
leave
xchg
mov
fs
ins
mov
add
inc
std
aad
rcl
adc
fsubr
imul
cli
xlat
jne
mov
inc
popa
mov
pop
or
push
shl
adc
and
movs
lods
adc
pop
mov
xlat
nop
leave
inc
xor
inc
imul
inc
xchg
sar
pop
lock
xchg
push
sub
jo
psrlw
pop
ds
jo
outs
mov
sub
sbb
pusha
pop
jb
daa
or
mov
pop
adc
lahf
mov
popa
jmp
adc
test
int3
adc
int
rep
push
es
add
loopne
fldcw
add
(bad)
cmc
bound
sub
loopne
or
in
sub
(bad)
nop
or
test
pushf
sub
test
inc
pop
(bad)
ficomp
or
cmps
ins
xor
push
cmp
push
add
loopne
jmp
mov
leave
xor
fild
and
and
(bad)
or
adc
mov
sub
dec
int3
inc
xchg
dec
push
pop
push
(bad)
clc
pop
lock
imul
xlat
clc
push
and
inc
pusha
jo
pusha
scas
or
inc
cwde
sbb
add
mov
xor
retf
test
adc
mov
jmp
xor
mov
xor
rol
pop
test
adc
jg
cmps
mov
cmp
cmps
xor
xor
cwde
xor
sbb
push
ins
xor
dec
push
ins
sahf
sysret
xor
push
mov
mov
add
push
rcr
cmps
mov
sbb
lods
xor
imul
lods
loop
sahf
pop
pusha
shr
xor
push
call
ret
dec
push
pop
cwde
or
lods
ror
dec
pop
and
xor
push
jo
ficom
out
dec
add
loopne
mov
jl
push
adc
fs
ss
pop
xor
mov
or
cmps
shr
cmovns
jo
or
lea
add
pushf
jae
push
rcl
sahf
cmps
and
cmp
xor
push
add
fcom
add
pop
lock
mov
outs
dec
inc
adc
inc
inc
xor
ret
fst
xadd
inc
push
mov
in
mov
pop
dec
out
dec
push
push
pop
cmp
cmp
idiv
pop
cmp
call
push
cmps
push
hlt
enter
push
sub
push
cmp
inc
es
push
loopne
xchg
xrelease
add
jo
cmps
jge
add
sbb
push
imul
popa
cmp
xchg
inc
push
or
fsubr
ins
test
cmp
cmp
pop
add
and
add
cmps
adc
cmp
test
push
int
ins
cmps
loopne
ds
pop
cmps
je
out
out
push
cld
push
xchg
jbe
jle
cmp
test
and
clc
sub
push
add
push
shl
and
jmp
mov
pop
movups
xor
pop
push
idiv
push
paddq
sub
add
dec
cld
pop
sahf
dec
pop
pusha
pop
pop
cli
call
push
ja
into
xor
mov
mov
nop
push
or
inc
and
jl
inc
push
or
aas
cmp
or
rcl
sub
inc
repnz
adc
inc
es
cmp
push
pop
popa
inc
dec
data16
add
xchg
adc
jmp
pop
dec
call
enter
outs
cwde
popa
inc
shl
nop
enter
add
cmps
mov
xor
mov
mov
add
repnz
fs
pop
enter
or
inc
mov
pop
arpl
sub
cmp
jo
adc
pop
sub
sbb
xchg
hlt
or
or
sbb
in
jo
dec
js
push
loopne
xlat
add
nop
mov
or
stos
pop
das
lods
and
dec
add
pushf
or
push
ret
scas
test
or
or
xor
sbb
es
inc
pop
sub
addps
and
mov
cmp
dec
arpl
in
or
or
cmp
add
nop
sbb
push
nop
add
and
push
adc
pop
es
out
mov
fidiv
in
out
cmp
repz
int3
inc
dec
pop
repz
repz
mov
mov
or
xor
xchg
cs
or
push
pusha
jmp
mov
add
das
aam
into
mov
je
dec
repz
pusha
mov
int3
mov
jns
lock
js
jle
xor
add
or
adc
mov
add
aad
jl
push
push
inc
imul
dec
mov
jno
repnz
mul
push
push
mov
sbb
fisub
scas
adc
inc
pop
daa
adc
mov
dec
fbstp
fwait
outs
in
outs
fs
mov
jo
in
shr
shl
push
push
xchg
cmp
cs
jl
adc
xchg
inc
popa
and
mov
sub
xlat
test
inc
pop
enter
cmp
ss
add
imul
add
js
adc
xor
mov
ret
add
mov
sub
jl
scas
test
inc
and
int
push
inc
shl
push
movs
mov
js
loop
xchg
xchg
call
adc
sub
mov
pop
pusha
xor
or
psubw
mov
out
pop
call
rcl
stos
mov
ror
mov
pop
fdivr
mov
dec
enter
adc
aam
pop
in
jb
int3
add
push
add
push
or
in
push
pop
and
(bad)
(bad)
jmp
pop
inc
(bad)
int
dec
add
cmp
sub
fidiv
xchg
addr16
or
push
out
adc
es
cs
nop
push
xor
push
leave
xchg
cmps
lock
cmp
inc
mov
pop
add
in
push
movs
lods
cld
hlt
shl
xor
scas
or
mov
je
jmp
inc
push
adc
(bad)
mov
stc
(bad)
clc
push
push
push
push
push
push
iret
repz
ss
push
jmp
(bad)
clc
ds
repz
rcl
loopne
scas
jns
push
imul
dec
push
or
nop
out
pop
and
or
pop
cmp
scas
xor
data16
aad
jbe
pop
add
push
sub
sbb
jne
add
addr16
jae
jns
pop
adc
sbb
ffreep
inc
fdivr
push
adc
repz
je
sub
add
imul
dec
jnp
pop
push
in
adc
sub
enter
xor
pop
out
xchg
cmovb
cmps
in
mov
mov
cmp
jnp
pop
cld
mov
cmp
add
jmp
ja
xor
sub
push
cmp
(bad)
jo
push
xchg
cdq
add
xchg
dec
add
or
aas
push
and
dec
movs
movs
xor
or
inc
pusha
aaa
cmp
adc
dec
jg
cmp
adc
hlt
push
mov
es
push
adc
loop
adc
sbb
or
lods
std
push
xor
and
jb
jne
out
enter
cmp
enter
outs
adc
imul
(bad)
push
inc
push
xor
pop
add
mov
in
ret
jo
dec
jp
shl
cmp
xlat
bound
sbb
ret
enter
pcmpeqb
sbb
ja
or
add
ja
retf
mov
(bad)
sbb
lods
xchg
lahf
mov
pop
test
call
mov
xchg
push
dec
sub
mov
cli
jne
test
imul
xlat
ret
outs
jmp
(bad)
fstp
cmp
dec
out
stc
cmp
cs
or
pop
into
mov
mov
or
mov
and
cmc
xchg
dec
aaa
jo
mov
pop
or
dec
mov
xor
xlat
inc
mov
or
sbb
(bad)
push
imul
sub
sbb
and
or
xor
jmp
mov
pop
or
push
inc
test
(bad)
pop
fisub
pop
jno
sbb
les
add
imul
in
jl
push
inc
sub
add
retf
cmp
sub
daa
daa
(bad)
es
xor
call
mov
cmc
pop
add
sbb
les
mov
and
and
cld
ins
cld
or
add
adc
mov
push
lods
rol
pop
jmp
sahf
sbb
imul
sbb
jle
shl
pop
fnstenv
cmp
push
sar
push
or
std
pop
and
add
and
push
jb
xor
movs
hlt
cmp
data16
push
fstp
ins
and
push
and
push
rcr
pop
test
add
int3
and
popf
push
test
rol
mov
sbb
xchg
and
clc
dec
hlt
xchg
pop
mov
sbb
pop
add
cmp
loop
cmp
fmul
pop
movs
adc
(bad)
stos
xor
ja
push
or
dec
mov
xchg
add
push
or
and
sbb
pop
gs
and
push
nop
gs
mov
and
scas
je
xlat
mov
sbb
and
(bad)
mov
mov
inc
add
adc
adc
(bad)
shr
xchg
clc
mov
(bad)
mov
inc
mov
in
and
add
or
stos
imul
(bad)
fld
inc
adc
sub
test
push
jecxz
stos
inc
add
push
xchg
add
inc
push
and
inc
out
sbb
add
and
xor
mov
lds
popf
jmp
and
and
cmp
mov
stos
outs
and
xor
add
pop
add
dec
stos
sti
xchg
mov
inc
xchg
push
and
pop
lock
jmp
dec
dec
mov
sbb
add
inc
popf
clc
mov
push
xor
cmp
imul
mov
aaa
inc
sbb
subps
push
mov
add
clc
cs
out
test
jne
push
sbb
or
add
inc
cmp
loope
add
mov
dec
push
call
mov
sub
or
inc
mov
add
mov
ss
mov
adc
dec
mov
cmp
movs
fmul
(bad)
mov
call
jne
das
add
icebp
mov
pop
push
test
add
outs
pop
test
sbb
aas
push
nop
and
jae
add
fist
test
in
jge
into
rcl
xor
sub
in
add
outs
sub
inc
mov
mov
lock
add
clc
sub
js
adc
repz
jle
dec
push
jl
retf
push
dec
inc
mov
fistp
inc
mov
mov
mov
nop
(bad)
out
add
add
cmp
sbb
push
or
jae
ins
push
shl
xchg
pop
mov
mov
or
mov
pop
scas
jl
sbb
fucompp
add
cmp
sbb
xor
mov
pop
xchg
cs
mov
and
(bad)
push
xchg
jmp
clc
leave
popf
rcr
imul
or
mov
jb
lds
lock
xor
mov
rol
and
cmps
sub
ss
mov
or
pop
popa
gs
cli
test
mov
daa
mov
hlt
mov
in
hlt
in
cmps
or
mov
test
fld
xor
pushf
xchg
cs
jo
popf
cld
out
sbb
sbb
jmp
adc
pop
pop
sbb
ror
repnz
sbb
sbb
inc
cmp
in
add
push
rol
add
mov
xchg
mov
rol
cld
cdq
fldenv
push
jb
xchg
push
and
and
fisub
outs
into
mov
sbb
sbb
xlat
mov
push
in
mov
cmp
nop
and
and
push
xor
fnstsw
adc
or
dec
jae
pusha
cmp
jo
retf
dec
add
shl
or
inc
inc
jmp
xlat
fsub
push
ror
mov
pusha
lahf
sbb
push
or
(bad)
cmp
sbb
loope
and
ret
pop
jns
ins
pusha
xchg
cmp
add
or
and
mov
mov
push
int
aas
fstp
jl
lea
and
add
std
sub
cld
mov
jmp
sub
push
loope
pop
jle
mov
pop
cmp
push
adc
adc
rcl
pop
retf
cdq
or
mov
out
hlt
or
test
pop
pop
sbb
hlt
imul
adc
pop
shr
sti
or
push
das
or
imul
sbb
popa
arpl
out
test
pusha
fsub
pop
mov
lods
mov
icebp
popa
sti
clc
(bad)
call
mov
mov
cmp
push
ja
mov
pop
int3
adc
add
push
mov
sbb
add
jmp
mov
mov
nop
xchg
sti
fisttp
pop
addr16
push
xor
mov
clc
daa
sbb
mov
mov
aam
mov
lods
pop
inc
mov
pop
out
push
or
sbb
pop
mov
mov
add
lods
mov
jl
xchg
pop
inc
mov
pop
mov
adc
sub
out
pop
retf
pop
pop
adc
outs
add
ret
xor
mov
push
or
jl
xchg
inc
scas
jne
shr
xchg
enter
pop
inc
and
inc
pop
jecxz
push
je
ret
clc
or
mov
or
adc
and
fcom
xchg
ss
ins
loopne
add
pop
push
in
xchg
cmc
adc
pop
inc
sub
or
pop
(bad)
push
sbb
jecxz
push
movs
or
std
and
add
fwait
push
adc
cmp
push
imul
fsubr
mov
and
in
or
inc
not
xor
sub
das
fs
mov
inc
or
loope
sub
pop
sub
js
adc
inc
iret
jae
loopne
ds
rol
adc
mov
sbb
inc
mov
es
pop
sub
sbb
adc
aam
push
xchg
jno
lahf
sahf
jl
mov
aam
into
les
push
int3
icebp
dec
push
mov
sti
cdq
mov
sbb
add
lea
or
or
push
in
mov
jmp
inc
inc
loope
(bad)
jnp
fcom
je
les
or
cmp
addr16
add
in
cmps
jae
pusha
daa
push
into
inc
mov
lahf
dec
leave
jecxz
addr16
mov
inc
inc
or
or
inc
push
popa
push
adc
xor
xchg
test
inc
(bad)
dec
and
test
mov
add
stc
add
cmp
or
jmp
lock
movs
or
retf
int
add
xor
aad
jle
or
dec
adc
je
pop
stos
std
or
sub
stc
or
add
lds
push
sbb
dec
and
jnp
push
sub
jle
stos
inc
nop
cld
ret
shl
in
mov
jge
test
loopne
iret
mov
inc
adc
and
push
fwait
mov
or
sub
cmps
into
je
push
sbb
push
mov
bound
gs
xor
mov
mov
fistp
(bad)
sbb
imul
or
fld
mov
wrmsr
cmp
mov
out
xor
fucomi
add
(bad)
pushf
pop
or
inc
test
sub
fistp
sbb
mov
cs
cmp
push
je
ins
sbb
jmp
sbb
aam
loope
int
cs
inc
rol
pop
mov
lea
test
outs
sbb
fsubr
or
imul
mov
fld
mov
enter
add
nop
add
and
mov
and
push
pop
cmp
in
cmp
(bad)
pop
daa
inc
jg
jle
jg
inc
sbb
lods
sub
mov
add
jmp
pusha
aas
stc
pop
xor
mov
sub
jg
dec
mov
dec
inc
jne
fsubp
mov
inc
pop
pop
jg
push
dec
popf
lea
pop
jno
js
adc
inc
and
jge
stos
mov
pop
sub
test
cmps
outs
ja
mov
lods
dec
pop
jns
out
test
push
stc
pop
in
shr
jno
inc
outs
mov
jmp
(bad)
sbb
test
jne
fucomp
push
dec
add
sbb
cmp
or
aaa
cmp
and
ffreep
or
mov
dec
enter
sub
add
leave
arpl
xchg
push
mov
pushf
or
and
mov
mov
adc
aaa
outs
mov
sbb
mov
cmp
inc
aam
jmp
loop
push
dec
sub
xor
mov
ds
jge
mov
rol
sar
mov
add
fild
mov
add
sbb
call
out
loopne
fcmovb
je
out
push
imul
sbb
scas
cmp
jbe
scas
jmp
sbb
pop
(bad)
pop
outs
sbb
dec
pop
mov
ins
stos
jns
adc
mov
or
loopne
in
adc
leave
je
and
adc
btr
jb
mov
lock
sbb
push
push
inc
adc
add
jmp
pop
pusha
adc
xchg
dec
retf
or
adc
stos
hlt
cmp
je
sbb
inc
rol
and
bt
cwd
mov
loop
mov
stos
ret
ret
adc
push
inc
cmp
jne
inc
dec
jne
(bad)
in
pushf
test
mov
xor
ss
imul
inc
js
ret
rcr
je
push
or
call
pop
xchg
das
mov
push
sub
adc
xor
inc
mov
or
test
call
or
mov
xor
cmp
out
das
inc
call
jb
xchg
adc
inc
adc
or
cmp
mov
cmp
sub
sbb
mov
fbld
test
aaa
out
(bad)
sub
gs
jo
ins
lods
add
mov
inc
sar
mov
sbb
jo
mov
sub
jg
test
sbb
movs
call
dec
popf
mov
pop
or
clc
add
jmp
add
ins
sub
xor
inc
sbb
je
addr16
sbb
push
push
nop
retf
shr
and
jmp
pop
push
adc
das
push
ss
and
xchg
stos
imul
pop
das
xchg
(bad)
scas
or
enter
adc
js
add
mov
add
lock
adc
sbb
addr16
daa
cs
push
xor
sub
xchg
les
or
out
les
les
jne
das
sub
push
inc
push
popa
lock
lea
or
sbb
xchg
nop
ret
xor
fucomip
in
sub
xor
cmp
es
in
stos
out
stc
adc
popa
pushf
mov
and
aas
enter
push
ss
je
adc
or
xchg
fdiv
in
aam
push
mov
push
pop
or
mov
out
loopne
push
xchg
or
or
xchg
daa
pushf
xchg
jae
cld
pop
mov
add
pusha
xchg
pop
pop
into
cmp
cmp
or
fsubr
add
push
cld
(bad)
cmp
dec
shl
xor
push
mov
add
gs
mov
lea
mov
push
dec
clc
repnz
loopne
dec
and
jb
in
ror
sbb
add
test
sub
inc
cmp
xor
mov
mov
or
mov
out
pop
sbb
dec
sti
and
push
or
hlt
pop
cmc
or
jecxz
fisubr
cmc
mov
cmp
push
dec
mov
jmp
aam
(bad)
fsub
push
add
lods
aaa
mov
enter
xor
mov
add
sbb
not
aaa
xor
sti
in
add
cmp
push
fisttp
enter
inc
icebp
cmp
sub
and
dec
jb
xor
or
sbb
sub
mov
es
add
ss
shl
daa
imul
dec
push
pop
ror
push
clc
daa
jne
sbb
xor
jno
mov
stos
sbb
outs
test
cmp
in
push
adc
test
xor
cmp
test
push
add
mov
mov
int3
sub
out
imul
stos
jl
pop
loop
repnz
sub
fs
test
or
out
dec
inc
sbb
cli
mov
hlt
out
(bad)
in
add
loop
jne
sub
or
cwde
cmp
cmp
sbb
mov
add
adc
fwait
inc
dec
jne
and
int
ins
imul
hlt
and
xchg
aaa
dec
(bad)
push
sbb
cmp
dec
jbe
hlt
adc
bound
lea
add
movs
push
addr16
stos
dec
sub
icebp
(bad)
push
ret
addr16
mov
mov
pop
aas
iret
mov
ins
pop
xchg
sub
push
push
pusha
dec
mov
mov
jno
or
mov
push
addr16
mov
cmps
test
and
daa
cmps
sub
jb
dec
je
jmp
and
pop
hlt
sub
xor
jge
add
or
pop
popa
lahf
mov
sbb
(bad)
mov
daa
xchg
push
fdiv
jge
jg
pusha
frstor
or
push
lock
cmp
mov
dec
jnp
daa
cmp
mov
pop
hlt
hlt
add
popf
push
movs
inc
cmp
sub
dec
out
inc
fist
push
mov
and
clc
xor
sbb
out
mov
cmp
(bad)
(bad)
xchg
rcl
or
add
mov
out
adc
mov
and
pop
mov
push
xor
enter
mov
ror
ins
xchg
inc
push
adc
adc
loop
in
or
push
jg
repnz
xor
jae
adc
pushf
mov
pop
xchg
push
test
rol
dec
shl
ja
stos
(bad)
mov
and
icebp
mov
mov
or
add
(bad)
xchg
iret
test
dec
add
jmp
and
pshufw
lahf
ret
fidivr
ins
lods
xchg
neg
aam
add
ret
xor
adc
add
jge
add
jae
dec
xor
lods
xor
inc
jge
or
inc
cmp
cmp
sbb
xchg
xchg
xor
xor
cld
lock
or
leave
and
push
cwde
jne
mov
cmp
add
xchg
in
nop
out
and
add
sub
pushf
sti
push
loopne
pop
cmps
fdivr
(bad)
iret
fldcw
fs
cmp
test
aam
cld
aaa
repz
fs
cmp
cmps
and
in
(bad)
cmp
mov
dec
pop
outs
push
sub
lock
cdq
jge
pop
sbb
hlt
nop
retf
and
movs
cmp
daa
retf
lock
jae
or
sar
or
mov
test
(bad)
push
pusha
pop
adc
pusha
jns
sbb
adc
hlt
adc
dec
ds
ret
xchg
mov
lods
fld
push
cwde
adc
adc
js
and
sbb
jae
xlat
out
mov
cs
or
scas
jne
fst
adc
push
push
add
fsub
retf
inc
push
lahf
js
test
jl
add
nop
xor
adc
add
ret
or
outs
add
ret
aas
push
jne
test
dec
aaa
cdq
inc
inc
xchg
imul
enter
ret
inc
rol
les
(bad)
xchg
fisubr
push
mov
and
lea
rcr
cli
not
test
aas
in
push
pop
cwde
cmp
sbb
in
inc
call
jne
jl
mov
sub
call
adc
in
mov
outs
dec
or
call
movs
pusha
mov
or
pusha
pop
or
add
inc
jmp
add
sahf
jbe
dec
shl
outs
mov
and
push
outs
sbb
sbb
jecxz
andnps
mov
inc
xor
test
or
jne
adc
or
popf
xchg
sbb
arpl
dec
push
gs
ja
fisub
jg
add
and
add
inc
push
adc
mov
mov
iret
mov
(bad)
loopne
mov
cmp
jp
mov
sar
or
int3
mov
sbb
out
sub
add
nop
mov
or
add
cmp
aas
fcomp
psubsb
dec
sbb
pusha
mov
inc
hlt
xor
mov
cmps
lods
icebp
add
xor
mov
in
pop
inc
out
or
ror
outs
cmp
pop
xor
sar
scas
and
ret
add
adc
scas
push
sbb
push
fisubr
retf
mov
repz
mov
cld
or
movs
and
mov
mov
push
inc
sti
adc
cld
loopne
or
xchg
fs
scas
ret
stos
inc
sbb
xchg
fsubr
jecxz
and
lahf
hlt
hlt
xor
call
aaa
stos
jp
jo
adc
(bad)
ret
inc
imul
push
push
ins
push
add
mov
jp
inc
pop
daa
popa
popa
xor
pop
sub
adc
mov
inc
xchg
hlt
mov
mov
hlt
sbb
push
fidiv
push
xor
mov
test
jbe
rsqrtps
cmp
in
out
mov
adc
stos
adc
pushf
out
pop
sub
ret
test
mov
test
imul
pusha
mov
push
add
inc
add
push
mov
movs
les
xor
sbb
inc
ds
add
pop
adc
or
mov
pop
push
and
xchg
inc
push
adc
sub
dec
or
out
or
mov
ja
sbb
or
stos
pusha
ret
ret
and
push
mov
xor
mov
add
jno
jl
mov
jb
test
ret
jo
jnp
push
and
inc
aaa
mov
mov
dec
lods
int
mov
and
mov
inc
js
jo
rcr
mov
(bad)
std
or
dec
inc
lods
xor
loope
inc
sti
adc
cmp
les
mov
jne
retf
mov
fcmovb
xor
or
sub
xlat
or
retf
push
sub
cdq
rcl
push
sub
inc
push
daa
pop
test
nop
add
jno
aas
repnz
or
jge
mov
arpl
fs
pusha
dec
ret
sub
dec
push
popf
fs
dec
cs
ja
test
repz
rol
jmp
xchg
adc
xor
sbb
push
pushf
cwde
shl
loopne
or
gs
dec
rol
mov
jl
push
jg
mov
cmp
mov
xor
jo
dec
int
je
xchg
inc
pop
imul
rcl
jp
xchg
or
sbb
jmp
add
ror
push
enter
or
dec
jecxz
and
xor
cmp
cdq
dec
add
test
jp
jb
or
cli
xor
xchg
cmp
adc
push
adc
dec
popa
jb
add
out
fbld
or
frstor
fistp
adc
mov
pop
adc
imul
ins
mov
lea
lea
in
push
cs
aam
out
cmp
dec
push
(bad)
dec
dec
inc
push
mov
push
push
dec
aad
lea
cmc
fs
loopne
call
scas
dec
clc
jmp
add
and
push
mov
dec
jl
mov
sbb
lods
mov
push
add
dec
imul
push
loopne
add
retf
sub
pop
pusha
add
test
jns
xor
or
dec
pop
mov
xor
jmp
pop
call
mov
jmp
repnz
in
fsub
in
inc
cmp
ret
stos
ins
jmp
je
adc
sub
repz
xlat
or
and
or
inc
push
mov
out
mov
inc
xchg
inc
dec
sub
rcr
adc
mov
(bad)
aas
or
nop
adc
mov
sbb
stc
cmps
lods
dec
sub
(bad)
jge
sbb
xor
and
mov
add
dec
push
retf
ins
xor
cdq
push
iret
dec
pusha
test
pop
inc
inc
xlat
xchg
jmp
mov
(bad)
cmp
or
jnp
cmp
mov
(bad)
fist
ins
jp
adc
cmp
pop
cmp
mov
mov
pusha
jle
loop
lds
icebp
(bad)
outs
add
add
pusha
(bad)
pushf
xchg
sbb
add
ss
mov
add
call
rol
fstp
popf
pop
inc
pushaw
push
mov
sar
mov
outs
in
push
mov
cmp
fidiv
and
jmp
adc
xchg
jne
mov
mov
or
aaa
sbb
neg
mov
or
pusha
mov
loope
dec
scas
adc
inc
or
sbb
loopne
jmp
jle
inc
add
int
mov
(bad)
rol
test
or
inc
push
inc
aas
cwde
sub
sbb
push
rol
mov
aaa
adc
call
xor
inc
adc
std
loopne
cmp
jne
sub
or
mov
mov
not
loope
cmp
pop
dec
or
or
rcl
repz
xchg
or
sbb
in
add
pop
jae
mov
inc
add
pop
or
pop
and
ret
push
out
cmp
inc
jne
rcl
sbb
inc
fild
jns
mov
cmp
jae
cmp
push
add
push
imul
daa
movs
xor
pmuludq
cmps
cmp
jge
sbb
and
and
adc
mov
cmps
loope
and
sub
add
adc
es
inc
test
and
sub
push
xchg
leave
add
cmp
cmps
test
jnp
test
rcl
leave
shr
xchg
pushf
add
inc
sbb
sbb
sub
jmp
loopne
stos
push
imul
lods
icebp
adc
jl
jbe
rol
fist
data16
imul
xor
xor
add
and
cmp
xchg
jbe
aam
xor
pop
add
stos
xchg
loopne
dec
jae
pop
xor
ret
inc
and
mov
xchg
sub
xchg
mov
daa
aaa
push
dec
nop
in
mov
cld
(bad)
xchg
xchg
and
(bad)
lea
aad
fld
fdivr
mov
into
add
lock
inc
or
or
loop
xor
iret
and
dec
add
dec
inc
cmp
arpl
ror
sbb
xchg
dec
add
xor
sahf
data16
ret
or
(bad)
in
mov
loop
loop
in
mov
dec
pop
mov
sti
push
cmp
pop
or
fisub
jmp
mov
mov
xor
adc
cmp
pop
jmp
cld
imul
or
sub
mov
repz
jle
push
mov
ficomp
das
pop
loopne
lea
repnz
sbb
scas
test
imul
jg
mov
repnz
push
and
test
dec
mov
sar
mov
test
push
pop
push
dec
cmps
aaa
or
(bad)
xor
inc
sbb
add
fiadd
fs
not
push
fst
sub
fs
mov
mov
test
mov
sbb
mov
daa
add
call
inc
and
jg
mov
mov
or
nop
loop
shr
cmp
js
rcr
dec
inc
or
mov
fwait
adc
adc
stos
pusha
nop
cdq
lahf
adc
popf
ffreep
ins
sub
rcl
lea
pop
mov
add
into
adc
adc
loopne
jo
push
stos
in
cmc
sub
dec
in
xor
jg
sahf
fcom
mov
ins
outs
nop
adc
mov
or
or
fwait
ret
inc
dec
inc
jge
in
pushf
fs
inc
aaa
mov
pop
inc
js
pusha
hlt
jl
dec
out
xor
xor
pop
(bad)
sub
je
ja
mov
sbb
xlat
mov
je
cmp
jge
mul
mov
and
mov
adc
in
sub
xor
xchg
xchg
nop
(bad)
scas
cli
sub
or
clc
inc
xor
mov
cdq
loopne
xchg
enter
push
cmps
std
sub
jle
jl
add
movs
or
sar
out
daa
sub
cmp
imul
add
imul
dec
cmp
hlt
lock
pop
ror
bound
mov
hlt
pop
and
add
shr
outs
and
int3
cmp
je
mov
fdivp
sub
adc
adc
cmp
mov
(bad)
mov
repz
leave
mov
daa
adc
cmp
ret
jno
jb
out
ins
repnz
fwait
push
adc
push
dec
(bad)
cwde
add
adc
test
dec
popa
jge
add
jbe
and
xor
cmp
mov
lods
mov
add
repnz
push
cs
hlt
cwde
sbb
aam
in
popf
xchg
lods
lods
mov
div
push
mov
and
loopne
aas
loopne
push
out
das
ins
ins
mov
xor
test
je
(bad)
lahf
in
mov
dec
and
or
lods
aam
cmp
dec
test
jne
sbb
int3
movs
pop
(bad)
dec
mov
retf
sub
sub
inc
jo
lock
ret
push
jl
rcl
movs
push
dec
jnp
and
push
adc
sbb
jo
inc
mov
jl
js
add
pop
jmp
sub
retf
xlat
or
das
pop
mov
adc
push
or
add
sbb
cdq
pop
sbb
xor
lods
rcl
or
push
sar
sti
add
aaa
push
push
fiadd
cld
sbb
or
pop
bound
data16
call
test
cmp
add
push
jae
adc
jecxz
jbe
add
add
mov
jnp
imul
ret
cdq
sub
push
push
retf
add
out
xor
(bad)
push
in
ror
mov
xchg
mov
push
cld
or
xor
rcl
dec
repnz
mov
into
pop
xlat
aad
stc
aad
sub
dec
(bad)
out
test
sbb
ja
(bad)
ins
movs
cmp
(bad)
dec
add
pop
js
inc
pop
inc
scas
or
mov
in
jo
xchg
out
aam
adc
mov
cmp
(bad)
jg
xchg
mov
xor
jge
mov
add
movs
mov
dec
in
fsubr
jno
(bad)
add
in
xchg
sbb
inc
popa
inc
or
pop
retf
and
jecxz
add
adc
repnz
sti
mov
xor
(bad)
pop
lods
cwde
out
je
push
add
add
pop
dec
imul
js
in
add
dec
addr16
inc
(bad)
div
or
mov
xchg
sbb
pop
in
(bad)
hlt
shl
enter
enter
fdiv
(bad)
xor
push
adc
movs
mov
popa
fcomp
jno
sub
addr16
push
push
or
test
jp
push
and
or
jnp
push
inc
pop
ret
inc
mov
cwde
repnz
test
xor
jmp
popa
aas
add
into
xor
pop
adc
ins
ficomp
jmp
mov
add
push
jmp
push
mov
pop
sbb
test
xchg
movs
xchg
and
adc
push
add
push
jae
lock
push
test
add
test
jo
inc
sbb
jecxz
(bad)
aam
hlt
push
add
inc
inc
jmp
ret
sbb
dec
or
fiadd
cmp
mov
push
std
mov
pusha
xor
or
add
movs
cmps
xchg
and
or
cmp
xchg
cdq
push
or
adc
or
and
(bad)
or
jmp
inc
clc
adc
retf
cmp
mov
mov
ss
sbb
inc
pop
add
mov
mov
mov
sbb
clc
cmp
(bad)
inc
and
test
aad
xchg
cmp
cmps
lock
stos
(bad)
test
sub
jnp
add
mov
adc
xchg
dec
test
ins
and
add
lds
mov
and
loop
inc
or
fadd
add
cli
xchg
inc
scas
adc
inc
push
sub
outs
jle
inc
push
or
imul
add
add
call
sbb
adc
out
sbb
push
push
and
inc
out
daa
mov
lahf
stc
add
pop
lods
inc
inc
or
adc
sub
inc
sbb
sbb
or
mov
push
ins
or
clc
push
xor
xlat
ror
popa
(bad)
mov
push
test
dec
shl
or
jmp
pop
cmp
dec
dec
xchg
inc
sbb
jbe
mov
aas
inc
inc
sub
push
lock
shl
lock
add
dec
pop
and
retf
cld
mov
mov
outs
outs
lock
popw
ltr
mov
shr
mov
or
push
test
pop
test
mov
push
cli
mov
adc
dec
aad
push
pop
or
push
mov
sbb
clc
daa
dec
xchg
into
test
xchg
lahf
leave
xor
pop
jp
mov
fldenv
nop
pop
arpl
xchg
dec
add
push
adc
pop
clc
cmp
pop
jmp
pop
in
push
dec
xchg
ror
or
pop
lds
mov
imul
or
adc
add
mov
ret
cmp
sbb
push
jmp
shl
(bad)
pop
nop
rcl
pusha
jo
imul
jne
push
shr
cmp
stc
fs
in
inc
movs
out
add
outs
fld
and
mov
sbb
or
or
je
fild
inc
sbb
add
mov
aam
imul
adc
push
adc
out
icebp
sub
add
(bad)
out
add
inc
push
xchg
pop
pop
jo
add
retf
inc
or
(bad)
xchg
push
sbb
push
push
ins
les
movs
aas
dec
xchg
rol
sbb
sbb
sub
in
inc
fcomip
xor
add
and
cmp
aam
pop
add
add
dec
cwde
jl
je
aas
adc
or
or
ror
jae
imul
hlt
ret
mov
cmp
adc
push
rcr
adc
push
out
inc
sub
neg
es
sub
ins
cs
or
sbb
or
mov
cdq
ret
sub
dec
xchg
gs
jecxz
iret
inc
repnz
jno
int
and
popf
test
inc
push
xor
loopne
test
xchg
and
sti
xchg
cmp
test
enter
cdq
dec
pop
ins
ror
clc
xor
cmp
inc
into
ins
or
inc
icebp
dec
ins
cmp
sbb
test
test
xchg
mov
(bad)
fimul
outs
pop
push
push
sub
les
mov
add
push
and
dec
jns
pop
and
shr
ins
xchg
fisttp
push
pop
inc
jmp
sbb
rcr
mov
cmp
jmp
push
cmp
or
jo
shr
jae
add
sub
push
pop
mov
addr16
jmp
(bad)
and
dec
gs
ins
ins
sub
dec
aam
arpl
test
pop
pop
call
cmp
dec
cmp
outs
rcr
test
xor
inc
or
das
sbb
cld
jne
sub
adc
push
adc
xor
pop
push
cmp
mov
push
outs
es
adc
add
je
inc
(bad)
push
mov
dec
sub
add
enter
xlat
xchg
push
lahf
test
pop
retf
fisttp
add
pop
imul
icebp
pop
cwde
mov
pop
imul
xor
test
fcomp
push
sbb
mov
add
adc
push
xchg
cdq
add
clc
mov
push
adc
data16
cmp
clc
pop
test
xchg
cmp
sbb
mov
xchg
dec
adc
and
pop
adc
xchg
inc
test
daa
lea
mov
jge
add
adc
push
pop
xor
out
adc
stc
dec
mov
(bad)
mov
shl
jbe
mov
xchg
test
dec
lds
daa
jmp
inc
dec
imul
jl
sbb
mov
jne
jmp
js
je
mov
cmp
jns
cmp
loopne
mov
and
jo
jecxz
cmps
adc
xchg
cmp
shl
dec
or
jl
ds
aam
push
ins
xor
inc
retf
sbb
fs
add
mov
pusha
jnp
cs
stc
add
call
fnstcw
add
not
push
je
sahf
gs
sahf
inc
inc
jmp
mov
cmp
push
cmp
xchg
fisttp
sbb
test
jecxz
or
pop
rcl
sbb
cli
cmp
add
xchg
test
ror
(bad)
jmp
pop
or
or
nop
lods
lods
xor
ficomp
mov
add
push
push
or
ficomp
outs
or
push
mov
psubw
shl
jno
fnstenv
mov
push
loopne
in
jo
inc
xor
xor
icebp
or
repz
sub
or
mov
neg
add
push
popa
push
push
dec
add
jo
hlt
stos
sbb
pop
idiv
les
mov
push
lds
outs
mov
pop
xchg
inc
jl
js
or
mov
xor
xchg
inc
imul
or
xor
push
sbb
sti
xor
xchg
dec
lahf
nop
inc
repnz
jae
pusha
cmp
pop
pop
lods
pop
xor
in
adc
adc
cmp
xchg
iret
outs
xor
repnz
cmp
inc
popa
xor
das
or
and
hlt
retf
sub
ror
xor
xor
mov
dec
adc
xchg
dec
mov
mov
dec
jne
jp
add
sub
mov
nop
add
addr16
xchg
sbb
mov
out
(bad)
(bad)
sub
sub
iret
mov
xchg
stos
xchg
out
div
mov
js
add
or
jbe
adc
mov
jg
sbb
mov
into
fst
retf
mov
xor
dec
movs
add
cld
loop
sub
dec
rcr
(bad)
pop
mov
or
pop
push
add
cmp
xor
fistp
jl
mov
(bad)
nop
jne
sar
es
xor
dec
jle
push
sbb
inc
sub
or
xchg
jne
repnz
adc
test
jns
dec
(bad)
cmp
mov
ror
push
jmp
in
add
sub
rcl
add
jno
xchg
ja
mov
jmp
jae
(bad)
mov
mov
call
mov
fbld
outs
mov
adc
cmp
xchg
loopne
pusha
fcomp
or
sbb
sbb
sti
sbb
adc
adc
add
cmp
sub
fnsave
sbb
adc
mov
dec
pop
shl
add
sub
inc
mov
cs
and
lods
jbe
jmp
or
mov
cmp
cmps
stos
pop
imul
push
mov
push
pop
sbb
iret
add
inc
cmp
scas
js
rol
or
in
sub
jmp
sub
shl
sub
into
(bad)
int3
ret
mov
out
cmp
call
jmp
xchg
gs
out
mov
ds
cmp
sbb
ret
adc
popf
fimul
outs
pop
dec
test
jae
sub
cmp
repnz
mov
pop
jns
xchg
cmp
jns
sub
inc
jb
pop
ds
jo
imul
pop
je
jo
add
lods
adc
into
or
adc
mov
pop
mov
dec
sbb
adc
mov
add
cs
dec
sub
retf
sub
or
(bad)
(bad)
inc
pusha
cmps
mov
mov
xor
sahf
or
add
out
cld
adc
mov
mov
clc
push
mov
mov
pop
pop
lock
adc
fwait
push
pmulhuw
or
jne
in
test
dec
inc
pop
leave
sub
lahf
jp
sub
movs
cs
xor
adc
cmps
mov
sbb
xor
repnz
test
sub
mov
in
test
arpl
sub
lods
out
jl
(bad)
dec
arpl
call
adc
mov
imul
inc
sub
adc
fsub
inc
sub
cmc
push
test
or
mov
and
cmps
push
je
push
cmp
jae
push
jg
imul
push
mov
in
in
stos
add
jge
das
mov
jne
and
in
cmp
jno
or
(bad)
add
sbb
push
sbb
fistp
xor
add
leave
dec
sbb
push
xor
jecxz
and
aam
or
push
stc
sbb
fcmovnb
test
inc
popa
xor
data16
aaa
data16
jmp
adc
mov
push
movs
bound
mov
jo
push
and
adc
mov
out
sbb
pop
jb
out
jl
inc
adc
add
cdq
repz
jnp
pop
adc
mov
dec
dec
sbb
add
pop
repnz
ins
je
popa
clc
pop
inc
sahf
ret
fwait
je
cld
pop
pop
cwde
mov
or
adc
xor
jmp
dec
or
adc
nop
mov
shl
jnp
jo
jns
aaa
cmp
imul
jge
popa
sub
xor
push
inc
add
push
cdq
inc
jle
repz
pop
shr
hlt
sub
call
out
aam
or
lahf
adc
dec
jmp
and
outs
jl
add
retf
and
outs
lock
in
jno
aaa
sbb
xor
dec
xor
adc
lahf
out
add
add
fld
dec
push
or
adc
sub
lock
or
and
mov
xor
scas
adc
enter
add
add
iret
jne
pop
repz
jmp
out
daa
inc
ins
add
jo
push
ins
or
out
mov
shl
xor
dec
not
adc
dec
cwde
cld
sbb
add
fcomp
mov
and
mov
ja
xor
int3
(bad)
mov
jns
sbb
cld
and
xor
cmps
repnz
sub
add
adc
movs
adc
pop
xor
ud1
xchg
ss
sahf
popf
sbb
push
pop
movsx
push
xor
mov
sbb
inc
das
cdq
inc
lahf
mov
fidivr
mov
bound
sbb
wbinvd
cdq
inc
add
pop
sbb
pop
inc
movs
push
fsubr
xor
out
mov
jne
ret
ret
fld
(bad)
test
mov
pop
mov
mov
inc
mov
xor
(bad)
dec
adc
xor
cmp
mov
pop
dec
fisttp
adc
outs
mov
sub
test
sub
mov
add
add
movs
lock
push
call
mov
lock
sbb
add
fimul
dec
in
inc
pop
mov
cmps
jbe
inc
push
(bad)
dec
(bad)
jmp
call
sbb
mov
shl
or
mov
popa
inc
dec
and
cs
inc
popf
push
movs
adc
call
pop
jl
fadd
(bad)
out
mov
lahf
es
popa
jge
sbb
add
retf
dec
in
(bad)
cmp
xchg
push
sbb
and
ret
pop
ror
push
retf
sub
imul
push
pop
mov
push
iret
jns
sub
sbb
inc
mov
jle
mov
inc
out
mov
ja
jmp
dec
and
jnp
sbb
mov
pop
out
and
nop
mov
fsubr
dec
cmp
retf
idiv
dec
mov
inc
sbb
jb
repz
mov
push
dec
lods
pop
push
jp
push
lods
sbb
pushf
sbb
mov
cdq
mov
mov
mov
add
push
shr
pop
jnp
pop
xor
mov
add
cmc
popa
inc
test
in
pop
pop
cmp
cmp
xchg
add
lock
test
movs
mov
stc
pop
pop
dec
loop
dec
jecxz
jbe
(bad)
cmp
dec
or
pusha
sti
add
sub
and
aad
xor
ficom
and
adc
or
cld
dec
(bad)
jge
cwde
xor
push
retf
xor
pop
je
inc
add
push
icebp
xchg
push
cmp
mov
or
and
sub
rcr
rcr
xor
xchg
in
xor
sbb
xor
xchg
int3
pop
push
ficomp
mov
pop
xchg
mov
fadd
into
ja
outs
out
frstor
std
push
sub
pop
dec
push
xor
pop
popa
ja
dec
retf
push
push
mov
mov
xor
mov
xor
ss
pop
leave
adc
xor
outs
dec
in
mov
mov
enter
loope
loopne
test
ins
loopne
dec
mov
pop
retf
leave
loopne
fmul
push
mov
rcl
aam
fadd
and
aam
lea
adc
add
or
xchg
enter
push
xor
or
(bad)
sub
push
cmp
and
adc
int3
fcomp
adc
fwait
mov
inc
jb
jecxz
jmp
or
in
mov
enter
xchg
and
cmp
aaa
imul
adc
add
jbe
pop
sbb
outs
push
push
aas
(bad)
jmp
js
sub
enter
add
sar
popf
xchg
outs
pop
loopne
(bad)
enter
push
lock
div
add
mov
mov
push
cld
mov
int
adc
ret
add
pop
fs
test
rcl
add
fsub
and
or
sub
in
das
lea
mul
(bad)
lock
shr
push
xor
and
aam
mov
push
sub
leave
xchg
jnp
mov
adc
xlat
jmp
cmp
jne
mov
aam
test
pop
loope
add
sub
mov
sbb
mov
pushf
aam
sbb
push
mov
add
pop
pop
stc
dec
or
jo
ret
xchg
dec
scas
ins
ins
sbb
nop
sub
lds
jmp
cmp
xor
adc
aaa
xor
xor
dec
in
cs
adc
and
pop
push
xor
in
leave
adc
or
and
xchg
dec
inc
out
inc
and
test
pop
sub
jbe
xor
mov
push
lea
pop
sbb
fistp
ja
pop
jae
scas
nop
push
xlat
and
jmp
mov
stos
sub
adc
mov
popf
mov
mov
scas
xchg
cmp
das
nop
inc
jge
mov
arpl
nop
cld
sbb
mov
mov
adc
mov
std
mov
arpl
sbb
mov
inc
js
add
dec
or
push
sbb
mov
into
xlat
push
xchg
clc
pop
ja
bts
jmp
scas
sub
adc
mov
sub
idiv
sub
jge
and
and
ret
je
mov
ror
fcom
in
(bad)
sti
aad
pop
jne
ins
push
xor
sti
call
xchg
sahf
ret
dec
sbb
hlt
mov
(bad)
cld
jne
inc
dec
imul
sbb
push
dec
adc
add
bound
mov
adc
or
push
je
push
adc
mov
add
xchg
xor
jmp
and
mov
xchg
inc
mov
push
dec
sub
dec
inc
push
sub
les
push
push
jne
add
inc
mov
add
pop
daa
js
push
inc
xchg
mov
rcl
sbb
cmps
dec
ss
imul
mov
fucomp
push
stos
dec
es
xor
mov
adc
loope
xchg
jmp
add
shr
push
mov
xor
cmp
in
lock
leave
popa
push
sub
add
data16
add
push
sbb
(bad)
adc
pop
push
fistp
and
scas
xor
in
scas
cmp
leave
push
bnd
popa
pusha
repz
pop
mov
or
lea
int
clc
pop
repz
inc
jae
js
test
xchg
test
out
es
mov
es
jns
ja
test
cmp
data16
jmp
lock
stos
sub
pop
cmp
xchg
fld
mov
adc
xchg
into
int
pushf
(bad)
mov
mov
add
pop
sar
test
jmp
mov
pusha
sbb
jbe
mov
cmp
ror
add
adc
rcl
and
fcom
adc
ins
inc
pop
hlt
mov
push
aaa
inc
sub
movs
jbe
scas
lods
pop
sub
pop
xchg
lock
ret
mov
jmp
cmp
mov
sub
shl
or
cmp
lock
jno
and
sub
lock
push
(bad)
sbb
outs
cli
pop
push
lods
dec
ret
mov
pop
cmp
imul
ss
mov
popa
xor
lods
xchg
iret
rol
adc
arpl
push
call
add
aaa
fist
push
mov
mov
inc
dec
call
mov
push
jp
adc
xchg
les
cmp
arpl
out
jnp
nop
in
mov
inc
sbb
loopne
jno
push
push
sub
ins
push
loope
mov
mov
and
push
pop
das
mov
jle
adc
adc
add
pop
inc
sub
adc
and
ss
jg
js
xchg
push
cmps
mov
pop
in
loope
sbb
pop
mov
or
bound
hlt
pop
mov
call
jno
retf
sub
dec
push
sub
rcl
inc
and
sbb
retf
adc
cmp
mov
enter
popf
xchg
add
lock
push
fnstcw
push
push
fcmovbe
jl
and
outs
imul
xchg
sar
inc
int3
test
cli
xchg
sbb
ret
icebp
sahf
cwde
sub
add
in
ret
cmp
pushf
inc
cmps
cmp
mov
lea
das
gs
jmp
or
inc
pop
sub
aas
sbb
xor
popa
dec
sub
sbb
mov
mov
call
dec
call
push
in
in
in
iret
add
push
aad
lods
pop
cmp
sbb
push
inc
push
push
jg
mov
ret
sbb
sar
test
adc
push
out
call
ror
mov
mov
mov
mov
ret
leave
cld
daa
pushf
xchg
sub
sar
enter
and
adc
mov
aaa
dec
clc
xor
ins
dec
dec
sub
call
ret
jmp
push
lea
xor
test
sbb
pop
jmp
mov
push
sbb
cmp
and
inc
pop
or
adc
xor
les
(bad)
pop
(bad)
(bad)
adc
sub
mov
fstp
retf
push
scas
add
add
xchg
dec
inc
test
pop
jp
and
jnp
addr16
call
push
mov
and
shld
pop
enter
jl
or
sbb
push
loop
push
cmp
sbb
jle
add
aam
and
dec
jg
mov
fiadd
xor
add
into
or
add
mov
inc
fld
dec
push
jmp
enter
popf
xor
outs
push
push
lahf
ret
or
mov
cmp
jmp
push
test
inc
jmp
mov
jne
ja
add
pop
push
in
ret
jae
sub
mov
pop
mov
mov
xchg
jmp
and
push
loop
pop
enter
test
xor
daa
clc
jg
adc
jns
sahf
inc
nop
xchg
pop
mov
pop
add
add
dec
mov
jge
sbb
or
cmp
xor
jecxz
inc
in
mov
jmp
mov
adc
cmp
lods
push
(bad)
adc
or
xchg
sbb
xor
add
mov
out
popa
iret
xor
add
xor
cmp
push
mov
or
repnz
imul
and
sub
add
pop
add
dec
jne
adc
jle
xchg
outs
dec
cs
add
fcmovu
outs
nop
xchg
jb
add
adc
sbb
sub
cmps
jns
(bad)
loopne
das
dec
add
inc
ss
std
mov
push
shl
jae
inc
sbb
in
dec
lahf
fwait
push
add
adc
loopne
dec
add
add
retf
add
mov
inc
lods
add
dec
fdivr
sub
addr16
xlat
inc
aaa
push
cmp
dec
jmp
lahf
inc
sub
mov
or
cmp
sbb
addr16
dec
mov
mov
xor
clc
mov
jno
mov
or
cmp
test
test
mov
jno
mov
pop
xlat
ffreep
and
sbb
test
test
pause
dec
dec
jl
push
or
pop
test
inc
xchg
hlt
adc
sub
adc
scas
lods
pushf
cmp
jle
inc
mul
xchg
in
jo
jnp
push
and
push
cmp
xchg
dec
popf
jg
and
add
fmulp
jp
(bad)
xchg
cmp
hlt
mov
nop
out
sub
sbb
jl
in
stos
add
repnz
mov
adc
or
push
adc
adc
lock
ficom
aas
mov
jge
add
inc
sub
shr
aad
jl
mov
jmp
or
or
lods
adc
std
or
jae
xor
sbb
(bad)
push
ss
loope
imul
and
jg
mov
add
ss
push
sub
data16
jecxz
mov
mov
mov
or
jb
xchg
push
pusha
ret
daa
push
out
es
mov
jo
sbb
mov
adc
popf
imul
mov
and
dec
jmp
push
jmp
lock
push
inc
jle
sub
mov
cmp
fwait
adc
and
push
push
add
or
pusha
or
inc
rol
dec
sub
jp
inc
in
lock
add
cmp
jmp
imul
mov
mov
imul
ja
sub
and
daa
ins
adc
jns
add
je
or
test
mov
jno
push
xchg
pushf
aam
and
fldenv
push
nop
nop
jbe
sbb
and
or
add
fadd
and
mov
push
movs
je
shr
adc
push
into
add
cmp
in
sbb
shl
pusha
out
jo
mov
movs
rcr
scas
call
jmp
jmp
js
push
cwde
and
daa
add
fwait
add
jb
bswap
shl
sar
nop
pop
mov
push
sbb
and
pop
inc
cmp
test
sbb
loop
das
adc
adc
and
dec
pop
mov
stos
xor
pushf
mov
dec
or
fbstp
fimul
movs
icebp
sbb
jno
add
xlat
jmp
mov
jge
and
add
and
mov
or
add
and
jne
cmps
push
mov
rcr
push
mov
rol
inc
or
es
push
xchg
mov
test
and
jo
fisub
(bad)
iret
pop
jo
into
test
inc
scas
adc
xchg
mov
jne
ins
data16
out
mov
or
add
inc
or
pop
push
inc
inc
sbb
add
pusha
arpl
cmp
ret
cwde
inc
repnz
loope
in
or
jno
or
scas
scas
icebp
loope
lea
adc
adc
push
mov
inc
adc
outs
xchg
fsubr
gs
pop
inc
xor
movs
push
jp
sub
ss
inc
leave
jmp
cmps
sbb
jmp
pop
fcom
xchg
adc
cmp
int
into
ror
xchg
shl
rcl
and
test
pop
ins
out
enter
test
cmp
pop
daa
add
test
inc
in
adc
xor
mov
pop
jo
sbb
pushf
leave
pop
inc
xor
push
mul
outs
popf
ret
pop
xor
mov
dec
jne
mov
das
arpl
shl
cmp
shl
mov
les
push
cmp
dec
arpl
xor
mov
dec
stos
fcmovnbe
push
cmp
adc
or
dec
sbb
mov
push
push
sub
adc
fcomp
jmp
mov
ins
sbb
scas
mov
sbb
sbb
cmp
sub
lea
mov
pop
popf
and
mov
inc
and
xlat
dec
push
push
sub
adc
xchg
lods
pop
adc
popf
and
add
push
or
sbb
or
rol
add
pusha
test
(bad)
adc
clc
add
enter
loope
add
mov
push
xor
and
xchg
xor
xchg
or
cmp
hlt
ror
or
and
sbb
mov
push
inc
scas
in
adc
pop
jnp
stos
add
clc
inc
or
test
inc
jl
jno
popfw
mov
lods
nop
addr16
sbb
sbb
add
adc
adc
into
push
lods
aas
clc
inc
add
sbb
xchg
inc
add
inc
xchg
adc
mov
adc
bnd
xchg
and
es
icebp
xor
or
fcom
cwde
mov
or
and
pop
ss
xchg
mov
or
and
jbe
or
mov
pushf
add
cmps
jmp
inc
mov
sub
xchg
inc
cmp
sub
and
adc
jno
mov
out
or
nop
jmp
mov
int3
(bad)
pop
adc
dec
sbb
mov
adc
mov
loopne
or
rol
or
pushf
push
xchg
rol
pop
mov
push
pop
into
mov
mov
adc
in
mov
pusha
adc
xchg
and
xchg
mov
mov
rol
cwde
push
popf
test
adc
mov
je
pxor
or
add
adc
cmp
rcr
inc
jl
push
push
jge
inc
push
and
inc
imul
adc
cld
push
push
xor
ret
jle
js
xchg
test
sar
inc
mov
mov
ss
inc
inc
xchg
mov
addr16
dec
pop
je
lea
add
mov
jo
out
and
dec
into
xchg
pop
daa
jae
or
nop
mov
inc
fld
sbb
inc
daa
pop
arpl
mov
xor
add
mov
(bad)
pop
outs
imul
sub
cmp
pop
add
xor
mov
shl
sub
cmp
cld
inc
jb
or
sub
xlat
and
in
rol
pop
adc
mov
dec
adc
or
xchg
xor
inc
xchg
jl
inc
push
xchg
daa
adc
adc
jno
arpl
inc
dec
jne
inc
shr
push
cmp
xchg
(bad)
add
adc
nop
outs
and
xor
aam
stos
mov
or
(bad)
jmp
dec
aad
jb
inc
sbb
addr16
pop
push
add
cmps
xchg
add
ja
stos
and
test
ffree
add
pop
sub
adc
sub
paddq
inc
sbb
xor
xor
and
mov
mov
push
pop
push
adc
dec
cmp
mov
push
ja
gs
ins
cmp
sysret
fidivr
pop
nop
dec
mov
sbb
or
mov
rcr
add
xlat
fistp
dec
test
jl
inc
and
shl
dec
jne
xor
adc
cmp
mov
hlt
jmp
pop
add
and
popa
fmul
rol
sbb
ret
cmp
movs
fucomip
hlt
and
inc
and
sar
out
xchg
jge
outs
xor
jnp
jne
scas
push
scas
push
ret
jmp
push
movs
test
inc
pop
and
dec
sub
jb
cs
adc
ins
add
add
cmp
adc
inc
fistp
cmps
adc
pop
inc
sub
mov
cmps
movs
sbb
enter
push
sbb
jl
das
mov
cmc
movs
pop
mov
push
jne
inc
out
push
cmp
xchg
test
sbb
rcl
(bad)
loopne
and
movs
or
sub
cmps
cmps
inc
xchg
test
push
pop
push
pop
aaa
rcl
clc
(bad)
jns
inc
push
mov
xor
xlat
pop
add
or
jp
mov
dec
loop
imul
ror
ja
jl
enter
lea
inc
(bad)
sbb
cli
pushf
xor
pop
mov
mov
xor
xchg
retf
pop
xor
(bad)
sar
pop
add
sub
rcr
dec
pop
jbe
jl
jbe
inc
inc
cmps
or
sbb
dec
push
neg
mov
jge
out
popa
adc
out
mov
retf
loopne
and
pop
mov
in
sub
arpl
sub
out
cmp
or
ror
cmc
ficomp
adc
and
dec
outs
into
frstor
das
xor
fcom
mov
in
mov
mov
or
or
sub
adc
adc
or
sub
or
scas
aaa
pop
xchg
ucomiss
inc
or
mov
aam
add
add
jge
pop
lods
sbb
add
retf
inc
addps
add
shl
(bad)
iret
ret
movs
in
leave
adc
add
and
into
push
lods
inc
psubw
inc
mov
add
rol
ss
pop
daa
xor
inc
call
or
jb
adc
sahf
add
pop
add
rcl
dec
js
xchg
aad
inc
loop
in
(bad)
in
push
push
dec
mov
jl
pushf
add
xor
int
mov
xor
cmps
jmp
movs
and
in
nop
dec
add
inc
retf
nop
or
add
hlt
add
adc
mov
in
clc
jne
xor
and
(bad)
adc
pushf
call
outs
mov
or
mov
push
fisubr
in
jmp
cmps
lock
in
inc
pop
push
pop
mov
test
add
push
in
test
call
push
cmp
add
dec
cld
xor
retf
fcomp
add
push
and
fdiv
sbb
daa
shl
mov
adc
mov
sbb
popa
lock
(bad)
push
jp
or
or
sti
ja
adc
add
scas
jecxz
or
sbb
sub
sbb
sbb
in
cmp
rol
inc
mov
int
ds
push
mov
or
aaa
mov
mov
mov
out
add
and
add
sbb
out
adc
add
mov
es
cmp
jmp
dec
aaa
or
sbb
and
pop
rcr
bound
imul
aaa
or
test
add
dec
in
in
mov
mov
pop
clc
sar
shl
jne
and
add
add
adc
mov
pushf
sub
mov
inc
dec
ins
pushaw
outs
mov
test
(bad)
mov
rol
lea
mov
xor
xchg
in
pop
mov
add
and
iret
sbb
or
add
dec
fsub
or
add
ds
fisttp
test
push
cmp
test
or
and
call
sbb
mov
xchg
dec
mov
inc
mov
retf
cmp
pop
scas
(bad)
sbb
dec
jnp
adc
stc
or
push
mov
cld
sub
cmp
xchg
je
clc
mov
xor
xchg
add
jmp
imul
nop
jnp
push
mov
add
xor
jo
adc
or
push
cld
push
cmp
add
fmul
add
ss
jo
les
mov
pop
popa
add
rcl
sbb
and
lods
mov
pop
pop
pop
cmp
in
js
mov
mov
jb
sub
and
fld
fs
rcl
nop
fs
push
mov
jb
xor
push
loope
or
mov
cmp
sub
jns
fnsave
enter
cmps
sbb
jge
loop
hlt
mov
es
dec
jb
gs
out
in
nop
dec
mov
inc
mov
push
pop
nop
arpl
call
and
cmp
mov
out
mov
dec
or
ja
dec
lock
inc
or
sbb
fs
ret
out
add
jl
aam
push
icebp
xchg
sub
pop
outs
jb
(bad)
aaa
xor
pop
xchg
cld
mov
pop
rcl
mov
or
mov
mov
adc
outs
or
jl
and
push
fst
mov
aam
adc
xor
and
gs
fbld
loop
or
imul
data16
out
add
sar
mov
inc
inc
inc
or
mov
mov
fadd
enter
mov
pop
loopne
fcom
retf
(bad)
jbe
in
dec
adc
sub
ret
in
das
cmp
clc
(bad)
mov
daa
inc
mov
mov
jmp
fcomp
pop
sub
add
xchg
fldenv
push
in
sar
shl
cmp
repz
das
aaa
aas
inc
repz
sar
ror
cmp
movhps
xchg
jne
push
xor
ret
dec
inc
cdq
(bad)
icebp
sbb
xchg
cmp
sti
(bad)
mov
out
gs
pop
call
xlat
popf
rol
mov
nop
(bad)
dec
sub
lds
jno
inc
mov
movs
leave
aam
mov
adc
aaa
mov
stc
dec
and
inc
inc
mov
adc
pop
lock
outs
dec
cmp
cmc
push
ret
pop
scas
shl
fadd
add
sbb
mov
lea
imul
cmps
push
ficom
daa
jp
pop
inc
sub
cmp
andps
mov
leave
dec
addr16
pcmpgtw
leave
leave
leave
addr16
jmp
add
jbe
mov
cmp
mov
(bad)
xchg
pop
mov
xor
mov
out
or
inc
mov
pushf
inc
adc
adc
dec
adc
and
add
mov
ret
add
ins
adc
adc
or
and
(bad)
rol
js
js
mov
daa
and
aas
add
loopne
mov
add
add
jnp
jbe
xor
push
dec
retf
ret
pop
cmp
ret
add
sbb
mov
(bad)
sub
sbb
mov
mov
pop
sub
in
cmp
and
lahf
ret
movs
(bad)
mov
test
test
adc
scas
pop
das
mov
sub
addr16
arpl
mov
ret
jmp
cmp
push
fisub
ds
adc
add
lds
(bad)
rcl
sbb
push
sub
leave
rcl
fcomip
jl
pusha
daa
clc
and
cli
add
xchg
add
ds
adc
and
(bad)
dec
push
out
js
add
mov
and
fwait
movs
rcr
dec
mov
mov
loop
movs
push
repnz
imul
inc
and
jnp
scas
push
adc
(bad)
xor
push
cld
cmp
clc
div
(bad)
rcl
or
dec
sub
and
leave
pop
retf
inc
and
add
pusha
push
push
aam
inc
pop
enter
push
cli
leave
std
add
pop
ja
cmp
fldenv
and
stc
xor
push
inc
stc
je
aam
loop
pop
xchg
cmp
out
pop
mov
fistp
dec
fdiv
push
mov
sub
aam
sub
fimul
or
sar
jb
popf
rol
mov
cmp
mov
lods
mov
leave
inc
cwde
pop
add
in
fwait
push
jo
adc
out
pop
add
adc
sub
loope
inc
in
sub
cmp
iret
adc
sbb
sbb
and
fistp
dec
leave
in
test
inc
ror
cmp
js
xchg
cli
inc
jg
lds
sub
or
call
(bad)
cli
cld
sbb
mov
and
dec
xor
sbb
bound
out
add
call
xchg
outs
or
es
inc
push
or
add
sub
jmp
cmp
add
and
sub
retf
sub
cwde
jmp
addr16
dec
movs
ja
int3
jge
loope
add
xor
test
fcom
cmp
loop
xor
xor
jns
sbb
mov
fwait
or
inc
pop
(bad)
fcomi
sub
repnz
hlt
mov
add
call
idiv
inc
pop
inc
leave
(bad)
jb
mov
push
test
add
push
jo
mov
addr16
and
out
popa
sbb
mov
cmp
add
dec
dec
cmps
and
int3
push
lock
jge
arpl
ret
fadd
imul
fst
scas
int
shl
xor
mov
(bad)
push
jo
pop
dec
lock
aaa
jmp
cmp
aad
iret
(bad)
int3
int3
pop
jns
and
pop
mov
pusha
sub
inc
or
into
in
add
lds
xchg
fimul
hlt
(bad)
(bad)
pop
inc
das
hlt
push
sub
stos
sar
ret
sbb
rcl
mov
add
hlt
cmp
inc
movs
sub
and
inc
inc
jae
loop
and
inc
pop
icebp
leave
adc
repnz
nop
add
dec
mov
jne
mov
push
or
push
je
mov
jmp
lods
enter
jne
into
in
fs
add
sbb
mov
aaa
iret
mov
int
rcr
test
hlt
mov
retf
cmp
dec
adc
dec
dec
pop
std
dec
iret
in
imul
sbb
xor
mov
lods
dec
and
daa
or
or
sbb
mov
call
(bad)
(bad)
xchg
out
rol
adc
sub
stos
adc
cs
sti
mov
jmp
sbb
popf
jg
and
mov
jmp
and
ss
jmp
adc
aaa
xchg
les
mov
js
push
pop
pop
clc
cmc
cmp
or
int3
and
add
hlt
hlt
das
loopne
adc
or
cmp
cmc
mov
(bad)
jae
adc
jecxz
stos
mov
pushf
and
mov
inc
pop
jmp
mov
xor
retf
inc
dec
cdq
jecxz
inc
sub
ret
push
out
mov
mov
adc
sub
call
or
pop
dec
pop
cdq
dec
sahf
adc
cmc
ror
addr16
call
retf
mov
cmp
in
in
popa
jne
mov
xor
imul
pushf
in
mov
adc
movs
imul
cmc
adc
fs
test
jb
pushf
ja
jle
stos
(bad)
aad
call
dec
mov
call
lods
cmps
xor
push
test
push
and
ror
jae
das
loopne
inc
movs
xchg
mov
lock
cmp
loopne
adc
fcmovnbe
fsub
sbb
cmp
jne
outs
stos
ins
inc
mov
ror
jo
scas
sub
in
aam
ficomp
cmp
adc
add
and
mov
adc
test
inc
dec
jne
fwait
loop
push
or
mov
adc
pop
gs
popa
and
stc
add
aaa
push
sti
pop
in
pop
and
pusha
rcr
test
bound
sbb
xor
dec
xchg
test
xchg
xchg
push
jo
dec
clc
stos
(bad)
inc
lds
pop
lds
(bad)
push
jmp
in
dec
or
test
(bad)
add
add
inc
push
push
ret
aas
and
pop
dec
pop
or
push
sbb
popa
adc
mov
sbb
or
pop
adc
sbb
cmp
outs
pop
adc
pop
icebp
pop
bound
mov
aad
push
jns
xlat
inc
cwde
or
scas
mov
and
push
pop
addr16
adc
pushf
dec
push
dec
shr
jl
xor
mov
cmc
es
je
(bad)
xor
fnstsw
fs
out
inc
loopne
mov
(bad)
mov
popa
or
in
mov
mov
scas
inc
fwait
add
add
pop
frstor
loop
jmp
adc
add
xchg
push
fadd
fsub
and
les
(bad)
paddusb
rcl
dec
jae
add
fisubr
inc
ds
cmps
repnz
inc
mov
fldenv
xor
pop
push
jmp
add
(bad)
xor
sub
jb
je
test
shl
or
adc
mov
xchg
or
into
pop
push
sbb
rol
xchg
movs
inc
mov
xchg
das
adc
adc
adc
jae
inc
ins
gs
cmps
adc
es
xchg
aaa
ja
inc
retf
mov
movs
push
test
pop
push
inc
ss
loopne
pushf
xor
and
and
adc
and
or
push
mov
das
sbb
add
push
pop
inc
add
add
adc
jg
jg
mov
sbb
push
push
ins
inc
xor
mov
adc
mov
mov
and
pop
sbb
cmc
call
dec
fcom
mov
pusha
mov
mov
loop
aam
or
pop
jge
dec
lock
adc
test
jb
dec
adc
and
mov
test
retf
sub
xchg
inc
sbb
xchg
lods
fsubr
ss
add
in
and
lock
pop
call
or
and
pop
cmps
push
adc
or
adc
cld
jge
add
mov
cmp
mov
cmp
jb
pop
inc
push
sbb
ins
mov
fs
sar
mov
or
xchg
mov
sbb
or
add
push
lea
ja
cli
inc
jge
mov
push
test
in
sub
mov
rcl
test
dec
or
(bad)
clc
mov
dec
inc
sub
leave
or
fld
jns
add
mov
in
movs
push
mov
pushf
or
aam
test
iret
fild
mov
add
push
pop
pop
cmpps
push
pusha
pop
or
xchg
cmp
sbb
xor
in
push
or
push
inc
in
sbb
imul
inc
sbb
pop
dec
js
cmp
ja
in
leave
sar
cmc
enter
mov
pop
sbb
out
adc
fs
push
sub
push
mov
mov
out
dec
fsubrp
sub
adc
sub
pop
ins
mov
popf
adc
adc
or
inc
rcr
ins
cs
sub
pop
mov
mov
xchg
add
dec
xor
adc
cmps
repnz
dec
fld
cmp
mov
pusha
icebp
loop
lock
push
push
push
mov
inc
mov
add
sbb
inc
pop
std
ffreep
inc
icebp
cmp
add
shr
das
je
or
test
push
enter
sbb
into
xchg
ins
mov
stos
cmps
cmp
add
loope
pop
inc
inc
ins
aaa
pop
js
out
data16
ins
jbe
push
outs
xchg
push
pop
ds
dec
dec
dec
dec
fs
pop
pop
dec
dec
dec
dec
push
push
dec
dec
dec
dec
dec
dec
inc
inc
cmp
dec
dec
dec
dec
xor
sub
dec
dec
dec
dec
and
sbb
dec
dec
dec
dec
adc
or
sub
dec
dec
add
ret
xchg
out
fcom
or
fsubr
mov
popa
add
or
xor
and
push
mov
xchg
es
adc
adc
pop
popa
jo
pop
mov
fs
jb
daa
mov
test
ins
daa
daa
daa
daa
outs
outs
push
push
daa
daa
daa
daa
push
push
push
push
daa
daa
daa
daa
push
push
pop
pop
daa
daa
daa
daa
pop
pop
pop
pop
daa
daa
daa
daa
pop
pop
inc
inc
daa
daa
daa
daa
inc
inc
inc
inc
daa
daa
daa
daa
inc
inc
dec
dec
daa
daa
daa
daa
dec
dec
dec
dec
daa
daa
daa
daa
dec
dec
xor
daa
daa
daa
daa
xor
xor
daa
daa
daa
daa
ss
cmp
daa
daa
daa
daa
cmp
cmp
daa
daa
daa
daa
ds
and
daa
daa
daa
daa
and
and
daa
daa
daa
daa
es
sub
daa
daa
daa
daa
sub
sub
daa
daa
daa
daa
cs
adc
daa
daa
daa
daa
adc
adc
daa
daa
daa
daa
push
pop
sbb
daa
daa
daa
daa
sbb
sbb
daa
daa
daa
daa
push
pop
add
aad
ds
add
in
push
inc
call
mov
aad
dec
and
inc
sub
push
out
dec
fistp
push
fcomip
jmp
cwde
pop
mov
jl
lock
jmp
in
xor
dec
jnp
dec
in
mov
out
push
ins
rcr
push
cmp
hlt
pop
pop
je
push
rol
lahf
push
ins
pop
in
cdq
(bad)
lea
out
add
clc
or
jnp
dec
repnz
nop
inc
adc
cmp
and
fdivr
lahf
jae
enter
leave
dec
int3
out
xor
xlat
pop
sub
data16
shl
out
das
test
mov
dec
push
xlat
inc
pop
in
ds
and
add
jg
enter
test
enter
adc
gs
push
inc
push
ret
xor
inc
mov
ja
test
add
sub
adc
push
and
dec
sbb
pop
sub
add
stc
sbb
iret
lock
sub
adc
call
iret
or
or
aam
dec
jmp
and
dec
test
es
fst
inc
add
add
cmps
dec
ss
fs
jle
jl
mov
xchg
push
pop
or
mov
or
nop
stos
adc
lods
push
inc
xchg
setl
retf
add
repnz
cmc
inc
or
ins
xor
xchg
adc
jle
push
xchg
mov
dec
js
cmp
xchg
es
jnp
and
adc
aad
hlt
pop
xchg
xchg
push
(bad)
mov
loopne
fld
adc
aad
jnp
jmp
hlt
inc
cmp
push
cwde
xlat
add
mov
shl
push
sub
mov
test
(bad)
sbb
dec
inc
add
push
nop
push
out
mov
in
ins
lock
xchg
and
ret
or
adc
in
or
dec
push
and
popa
cs
pusha
sub
push
sub
sub
and
jnp
dec
pop
int
fwait
or
jo
jo
rcr
(bad)
aas
outs
and
jns
pop
and
sbb
add
repnz
in
add
adc
inc
repnz
fldcw
in
cmp
dec
xchg
nop
pop
and
mov
jbe
jno
imul
sti
push
add
fwait
rcl
sub
pop
in
out
mov
test
push
iret
cmp
out
push
push
mov
dec
xor
pop
adc
dec
cld
xchg
sbb
pop
test
lock
and
adc
sub
jmp
pop
xor
xor
aaa
ficomp
ins
jmp
pop
hlt
mov
push
shl
dec
hlt
xor
adc
mov
dec
test
push
ror
lock
mov
les
out
test
repnz
add
push
cmp
gs
sbb
mov
imul
nop
lss
push
clc
inc
fdiv
xchg
inc
por
icebp
shl
adc
(bad)
push
add
mov
lods
out
inc
(bad)
jmp
mov
mov
shl
arpl
jnp
pop
mov
sub
ss
mov
in
cmp
sub
add
and
dec
add
dec
mov
xchg
rcl
mov
xchg
xchg
pusha
push
xchg
push
test
pusha
(bad)
loope
or
out
push
cmp
inc
cmp
test
prefetchw
ret
or
sub
push
pop
mov
mov
inc
sbb
jecxz
jo
jle
adc
in
in
int
or
pop
xchg
fidiv
loop
cmp
loop
pop
dec
pop
xor
mov
popa
aas
out
inc
fsub
sbb
sub
fnsave
jb
sub
mov
and
sbb
add
inc
hlt
dec
mov
add
xor
cmp
repz
cmp
mov
mov
adc
dec
outs
ret
adc
add
pusha
movs
je
push
cmp
ss
mov
fbstp
in
ins
or
out
dec
jne
and
popa
xor
es
in
adc
cmps
clc
xchg
ror
aad
and
sbb
pop
xor
adc
sub
fsub
cmp
pop
sbb
add
int
mov
iret
push
pop
push
mov
xor
and
imul
dec
movs
adc
push
mov
jmp
mov
inc
push
rcl
sub
or
xor
pop
sbb
leave
inc
out
or
pop
aas
in
bound
dec
add
mov
and
shr
push
nop
xlat
or
xor
out
in
sbb
(bad)
rol
jmp
and
lds
inc
push
ins
jle
cmp
or
shr
or
(bad)
pusha
out
das
pop
push
(bad)
xor
sbb
test
or
daa
div
dec
sub
push
mov
add
xchg
push
mov
mov
cmp
popa
mov
add
ret
es
(bad)
dec
sbb
mov
repz
or
js
cwde
das
add
adc
movs
cmp
or
imul
imul
sub
cli
sbb
clc
jb
cs
fbstp
jl
sbb
add
push
adc
js
sbb
push
and
mov
fld
pop
jo
arpl
test
fmul
xchg
bound
xor
mov
sbb
clc
lock
ins
loop
push
lds
pop
jo
and
in
out
in
test
jmp
adc
mov
in
mov
repz
dec
hlt
jne
inc
push
mov
mov
or
jns
stc
shl
pop
leave
add
push
inc
adc
cmp
sub
frstor
lea
fsub
clc
ds
xor
mov
sbb
dec
sbb
dec
lock
dec
sbb
inc
mov
add
in
or
cli
add
adc
xchg
jb
lahf
jmp
pop
fnstenv
sub
in
out
or
or
test
fldenv
pushf
jmp
fwait
or
enter
cmc
ret
sti
aam
push
push
in
pop
scas
dec
sar
and
test
sub
add
push
lods
push
xor
dec
daa
jecxz
sahf
sub
test
inc
inc
stc
xor
scas
icebp
sti
and
or
push
addps
or
dec
pop
xchg
mov
add
sbb
sub
inc
sub
xor
add
movs
in
jmp
sub
xor
cld
nop
mov
cmps
sbb
mov
push
pop
or
or
push
mov
mov
pushf
jmp
push
cwde
jns
jns
adc
xor
inc
fadd
loopne
fchs
jne
(bad)
leave
inc
inc
dec
lods
pusha
mov
in
cli
jne
mov
std
push
std
das
loopne
sbb
pop
mov
mov
movs
push
pop
inc
mov
(bad)
xlat
enter
aas
loope
pop
imul
enter
ud2
push
out
mov
inc
fwait
(bad)
dec
add
mov
movs
nop
cmp
(bad)
jmp
inc
pusha
pusha
in
push
cdq
ret
lock
pop
stos
(bad)
in
inc
inc
add
lock
clc
sar
mov
lahf
add
xor
xchg
sbb
or
retf
mov
jecxz
sbb
push
dec
inc
mov
ret
rcl
mov
fdiv
pop
xor
sub
add
stos
adc
push
xor
fcos
scas
jle
cmp
push
sub
add
loopne
pop
ret
scas
lea
and
leave
add
dec
xor
aas
pop
add
xor
ret
dec
push
inc
movs
fimul
or
enter
inc
popw
xor
or
add
or
sub
pop
xor
inc
leave
and
loope
imul
mov
or
xor
nop
xchg
rol
mov
jbe
pushf
call
ror
jge
rcl
in
mov
dec
sub
pop
and
xor
jmp
xor
add
scas
mov
and
cmp
sbb
sbb
xor
ja
jb
inc
pop
or
or
cmp
adc
daa
pusha
mov
dec
add
fdivr
push
ret
dec
rol
or
sub
clc
addr16
push
jmp
jne
es
ins
mov
jmp
push
mov
paddb
mov
in
test
aam
and
or
loopne
xor
pop
psubw
fsub
mov
int3
fwait
mov
push
and
repz
sahf
sbb
push
shr
sbb
jbe
jge
add
jne
or
xchg
dec
or
sub
adc
daa
pop
sbb
mov
mov
fist
add
xorps
adc
mov
and
nop
test
xor
aaa
pusha
dec
lea
aam
pop
mov
adc
xor
adc
leave
pop
leave
dec
repnz
shl
dec
add
jl
retf
push
inc
mov
les
js
scas
add
mov
lea
or
pop
cmc
(bad)
pop
clc
jmp
mov
outs
adc
push
mov
inc
mov
cmp
dec
pop
(bad)
bound
mov
arpl
cmp
cmp
inc
cmp
out
dec
ret
lock
push
pop
inc
mov
add
int
xor
pop
dec
shr
xlat
xor
add
and
adc
add
add
add
or
mov
and
mov
rcl
fisubr
jo
pop
in
adc
jnp
add
out
cmp
adc
loop
push
inc
mov
xchg
cmp
xchg
mul
dec
je
cmp
xchg
hlt
sub
xchg
sub
clc
add
aam
rol
mov
jbe
dec
mov
pop
imul
or
sbb
cmp
xchg
fiadd
and
inc
dec
hlt
inc
xchg
add
xor
lock
call
cmc
jbe
mov
outs
push
xor
pop
fwait
mov
retf
pop
dec
push
add
scas
lods
or
hlt
mov
mov
inc
nop
inc
scas
jno
add
jmp
or
inc
test
pop
pop
mov
and
add
and
outs
jmp
mov
add
mov
pop
xchg
aas
cmp
loopne
mov
daa
xor
or
out
mov
outs
pushf
or
daa
dec
push
movs
or
imul
mov
adc
out
daa
adc
iret
and
(bad)
movs
daa
cdq
pop
les
lahf
add
push
cmps
outs
adc
xlat
pushf
aaa
cmps
nop
nop
sub
adc
pop
pop
(bad)
mov
push
jo
stc
add
rol
cmp
(bad)
or
aas
iret
jmp
push
push
adc
adc
sbb
repnz
sub
add
and
push
pop
js
imul
adc
add
jmp
add
cmps
add
dec
push
jnp
adc
and
cld
push
pop
and
adc
mov
adc
xor
xchg
mov
inc
enter
cld
int3
in
add
fistp
cmp
fdivr
out
shl
dec
add
inc
adc
inc
test
dec
lods
add
mov
addr16
mov
mov
lea
ja
sub
inc
sub
xchg
mov
ja
jl
mov
add
push
sbb
shl
xchg
and
outs
sbb
imul
daa
jnp
or
adc
add
push
movs
jo
shl
in
ss
ins
dec
call
dec
xchg
enter
jle
inc
cli
jmp
fcomp
pop
shl
inc
in
add
into
cli
cwde
nop
arpl
call
or
loope
fsub
or
push
cli
cld
push
shl
and
jo
sbb
mov
pop
(bad)
std
add
dec
mov
and
jo
(bad)
or
test
dec
mov
mov
iret
pop
mov
leave
pop
adc
fisub
xchg
out
in
cmp
add
(bad)
jmp
fld
xor
sbb
(bad)
bound
push
xor
pushf
or
mov
(bad)
mov
mov
dec
sbb
cmp
inc
add
rol
xchg
mov
push
retf
clc
mov
fiadd
pusha
ja
xchg
int3
cmp
push
sub
sbb
iret
or
call
pop
fcomp
mov
mov
or
or
jmp
push
ins
xor
popf
xchg
rcl
adc
test
and
mov
(bad)
(bad)
push
rcr
mov
pop
rcr
dec
ins
aas
rcr
or
jne
cmp
mov
jl
scas
dec
adc
and
(bad)
mov
scas
pushf
adc
int
mov
and
inc
fdiv
jge
cmp
cwde
sub
xor
add
popa
mov
movs
rcl
enter
(bad)
shl
pop
leave
add
nop
xor
push
loope
jae
ret
lds
push
(bad)
sbb
in
in
jb
and
sub
cmp
cli
and
push
mov
xchg
test
mov
neg
push
adc
adc
mov
imul
mov
sbb
(bad)
xor
mov
push
imul
jo
sub
sub
loop
xchg
ins
mov
loop
cmp
or
xchg
or
jl
add
jae
jno
(bad)
gs
mov
jge
je
ins
adc
loop
jae
sbb
arpl
adc
adc
or
gs
test
imul
cmp
cmc
cmps
ins
or
jae
xchg
or
outs
mov
add
int
add
pop
jo
outs
mov
push
push
inc
inc
add
jnp
in
sbb
or
push
inc
jl
xor
dec
outs
jae
push
or
push
lods
jb
inc
adc
push
inc
ins
add
or
loopne
sbb
fisttp
cld
test
ins
outs
iretw
add
push
push
push
push
jo
fwait
out
or
push
inc
jns
sbb
jo
mov
or
nop
and
fistp
push
xor
sbb
out
frstor
pop
xor
aas
test
pop
adc
cmps
jns
cmps
inc
push
add
jne
stc
dec
or
pop
inc
push
(bad)
(bad)
pop
push
xor
dec
jl
jp
pop
mov
jno
or
cdq
outs
cs
inc
imul
lock
es
xlat
cmps
pop
pop
cmp
and
sub
add
ins
das
pop
rol
std
(bad)
mov
jmp
inc
test
mov
pop
cmp
jge
add
sub
or
sub
add
nop
rcr
arpl
daa
dec
and
mov
cmps
inc
xchg
ins
add
dec
aas
hlt
mov
ins
push
and
pop
adc
sub
adc
sar
pop
sbb
pop
arpl
sahf
faddp
jecxz
add
xchg
adc
sbb
adc
jp
cmps
add
sbb
pop
lahf
sub
sub
mov
pop
mov
add
and
pushf
cmp
sbb
push
dec
sbb
call
cmp
dec
enter
mov
xchg
push
dec
mov
aam
sbb
add
or
adc
push
pusha
pop
add
rcl
push
push
inc
call
cmp
push
add
push
sbb
(bad)
adc
push
cmc
cmp
sbb
scas
pop
loopne
push
mov
sbb
mov
add
loope
ds
add
xor
scas
pop
das
es
and
add
add
xor
sti
jo
rcl
fisttp
int
add
push
rcl
fwait
or
xchg
shr
pop
xor
pop
or
fstp
sub
in
mov
cdq
in
ins
sbb
sbb
add
dec
mov
js
add
inc
ins
or
fdivr
add
jl
jg
xlat
jae
mov
(bad)
cmp
push
pushf
dec
lods
stos
ret
push
inc
popa
or
pop
sbb
(bad)
or
lahf
mov
xchg
adc
dec
sti
add
and
ds
aas
ins
icebp
shr
push
or
and
sub
or
shr
sbb
cmp
sbb
stc
add
popa
sub
(bad)
(bad)
sbb
fadd
jae
popa
addr16
add
or
int3
xor
dec
adc
ins
push
jne
outs
adc
inc
jo
adc
xchg
mov
dec
and
push
push
aaa
and
rcr
push
jp
rcl
arpl
dec
mov
add
push
gs
dec
outs
ja
jl
gs
add
jbe
(bad)
mov
dec
jae
add
inc
mov
xchg
jb
xchg
pop
icebp
nop
dec
sbb
add
ret
adc
pusha
loop
mov
xor
(bad)
add
sbb
sbb
add
mov
es
sbb
mov
pop
in
fiadd
call
ins
push
add
push
push
pop
push
fist
cli
jecxz
or
arpl
inc
aaa
enter
inc
adc
ss
push
call
pusha
arpl
(bad)
inc
call
and
sar
push
push
fiadd
outs
fs
cmp
imul
cs
push
out
fdiv
test
sete
fcomp
cmp
inc
fcomp
popf
scas
shl
fisubr
push
iret
sbb
repnz
xchg
sub
jae
mov
mov
iret
outs
pop
dec
mov
xor
call
imul
jb
ret
outs
outs
mov
inc
mov
shl
jle
js
add
loope
into
outs
aas
mov
mov
and
(bad)
cmc
push
add
out
xor
and
loopne
sbb
push
and
inc
and
add
aam
outs
mov
lods
dec
add
pushf
loopne
rol
out
add
ror
pop
sahf
jecxz
mov
or
push
mov
aaa
rcr
aad
ins
clc
lea
xlat
and
lds
in
mov
enter
xor
add
ds
nop
mov
dec
in
(bad)
and
clc
and
adc
ret
jbe
push
repnz
and
mov
inc
xor
popf
jmp
push
dec
jnp
inc
cmp
add
enter
dec
cmp
jbe
jle
int3
aam
and
movs
hlt
or
add
adc
and
test
cs
call
mov
imul
loope
fdiv
push
xchg
mov
push
xchg
lahf
jbe
ret
xchg
(bad)
sbb
sub
cmp
in
or
push
mov
lods
scas
ins
ds
pop
paddsb
cmp
adc
mov
mov
aam
pushf
xchg
cld
push
cwde
lods
mov
ret
xchg
pop
sbb
push
sub
xor
movs
cmp
xlat
lock
cli
out
cmc
xor
ss
or
outs
outs
xchg
push
and
cs
pop
les
and
and
cmp
push
rol
out
sub
(bad)
mov
adc
inc
push
mov
push
fistp
mov
push
aaa
push
movs
sub
cmps
or
push
xchg
pop
sbb
dec
cmp
ret
adc
push
pop
and
mov
lock
sub
xor
test
cmps
xor
ret
cmp
ins
inc
out
aam
inc
and
sub
sbb
mov
inc
xor
data16
xor
inc
dec
jne
lahf
sub
nop
jle
mov
fnstsw
inc
ins
pop
popa
or
inc
sbb
adc
dec
xchg
mov
push
aaa
add
xchg
js
push
pop
mov
cs
add
scas
pop
dec
je
sbb
sbb
and
jne
(bad)
mov
ret
sahf
(bad)
dec
jne
cmp
xor
sub
popa
and
and
or
adc
sub
mov
ins
or
adc
mov
popf
inc
rol
inc
and
push
cmp
les
cwde
fild
lock
or
lea
adc
jae
in
xchg
daa
dec
iret
and
lock
sbb
sbb
movs
xor
cmc
cmp
js
shl
mov
je
imul
adc
jmp
add
not
mov
inc
pop
jb
mov
pop
mov
adc
xor
aaa
je
cmp
je
into
inc
mov
cmp
pop
adc
dec
nop
sub
and
pop
outs
xchg
fadd
clc
pop
sar
je
push
test
frstor
sbb
sar
or
jp
cwde
inc
sbb
inc
add
sub
fdivr
sub
pop
adc
sbb
push
(bad)
lahf
pop
adc
or
sub
mov
test
sub
or
vprotq
sub
mov
jne
aam
adc
cmp
sti
(bad)
mov
cmp
cmp
push
jecxz
or
xor
pop
cld
jg
jecxz
sbb
cmps
dec
cmp
jle
add
or
add
arpl
cmps
cmc
adc
aaa
dec
(bad)
cmc
xor
outs
cmps
add
mov
dec
scas
imul
cmps
jbe
cmp
jns
push
add
mov
jne
das
aas
lods
jbe
out
push
cs
aaa
pusha
imul
pop
popa
scas
es
jnp
fisubr
aas
add
fisub
and
pop
outs
pop
cmps
pop
mov
jmp
daa
repz
cs
popa
mov
ja
inc
and
(bad)
jae
sbb
jl
ja
add
mov
add
push
add
or
ins
adc
jns
(bad)
fiadd
inc
inc
mov
jnp
ins
ja
push
inc
scas
pusha
ret
(bad)
mov
sbb
sti
inc
stos
sbb
xorps
jecxz
inc
sahf
jo
jecxz
jo
add
mov
test
xor
push
fcmovnu
pop
dec
je
inc
xchg
out
pop
sbb
aas
dec
es
push
cmps
pusha
and
or
push
pop
fisttp
bnd
or
pop
dec
pop
sbb
pop
sbb
test
fwait
pop
mov
sbb
push
push
in
out
jg
pmullw
mov
inc
nop
push
outs
cs
aas
push
rol
in
(bad)
aaa
ins
or
pop
push
xlat
add
pop
inc
or
aas
lahf
push
ss
mov
(bad)
jne
ins
stos
loope
daa
jb
aas
add
or
inc
mov
add
out
or
aaa
push
or
cmp
or
mov
cs
sbb
lods
xchg
ss
or
pusha
shr
push
pop
test
sbb
clc
pop
ret
sub
mov
jnp
cdq
adc
pop
dec
es
lock
ja
dec
add
add
ret
cmp
fistp
out
adc
icebp
xor
push
sbb
cmp
push
in
loope
mov
ds
cmp
outs
add
cmps
add
pop
push
(bad)
push
scas
or
ss
lahf
adc
dec
cli
xor
push
push
cmp
aaa
dec
add
mov
scas
popf
sub
cmps
fidivr
mov
xor
xor
push
cmp
inc
outs
dec
jp
setge
idiv
jb
xor
dec
addr16
sar
push
addr16
jo
push
xor
dec
push
mov
jecxz
inc
or
clc
js
pop
push
push
ret
es
or
dec
mov
adc
add
mov
adc
dec
sub
imul
dec
push
mov
enter
sbb
(bad)
xchg
pop
adc
adc
jmp
sti
mov
in
xchg
jge
test
sbb
ror
xchg
xchg
mov
add
and
cmp
and
loopne
add
add
inc
call
fstp
jbe
mov
test
lea
add
gs
and
mov
lea
lods
fcomip
inc
cmpxchg
nop
je
and
in
out
push
xchg
ret
add
or
add
add
mov
repz
push
or
sbb
inc
sbb
dec
mov
pop
push
pop
test
sub
(bad)
mov
retf
pop
sub
mov
int
arpl
cld
lea
dec
mov
adc
out
mov
retf
ret
and
mov
and
(bad)
out
adc
shl
inc
test
leave
xlat
xor
jb
push
adc
dec
out
jmp
cwde
inc
sub
pop
xor
je
jne
add
inc
mov
pushf
repz
and
sbb
aaa
add
fsub
enter
retf
mov
or
cmp
push
cli
xlat
inc
add
mov
add
(bad)
xchg
xchg
(bad)
jmp
cmp
cmp
fadd
push
sbb
and
rol
(bad)
(bad)
mov
loop
add
mov
(bad)
or
and
or
test
xchg
aaa
xchg
pushf
jl
and
cmp
pop
and
xchg
(bad)
test
push
cmp
add
ss
dec
mov
adc
cwde
ss
sbb
push
movs
std
sbb
push
mov
nop
jle
ror
xor
jl
lods
jae
mov
or
push
push
cmp
adc
in
rcr
scas
jmp
or
push
mov
pop
and
fwait
call
pop
dec
ins
cmp
mov
cmp
(bad)
pop
mov
pop
dec
push
or
fistp
shl
pop
mov
aas
ins
test
repnz
sbb
jne
pop
xor
sahf
sub
jmp
(bad)
push
mov
jge
jle
mov
jmp
cli
arpl
es
mov
cmc
sub
loopne
push
call
jmp
inc
mov
or
dec
mov
rcl
and
jecxz
prefetchwt1
scas
push
sbb
mov
dec
adc
inc
cdq
inc
cmp
push
push
and
and
(bad)
je
and
inc
sub
das
shl
cwde
sub
sub
dec
push
arpl
jge
cmc
imul
sbb
pop
test
test
cmp
and
pusha
pop
(bad)
je
xchg
sbb
or
popa
jo
bound
loopne
test
sbb
push
xor
xchg
push
push
push
leave
push
or
mov
or
fadd
xor
push
das
mov
das
sbb
cwde
js
push
push
sbb
rol
imul
add
cmp
push
xchg
les
and
adc
dec
add
arpl
xchg
loope
inc
call
out
(bad)
mov
pop
or
int3
sbb
jg
add
push
nop
mov
sub
adc
add
or
dec
mov
mov
mov
inc
test
pop
daa
inc
pop
push
leave
cmp
dec
and
fs
sbb
push
iret
cmp
fiadd
icebp
das
cmp
pushf
inc
(bad)
cmp
cmp
jne
shl
sbb
add
push
push
inc
test
cs
fsub
cmc
sub
mov
mov
add
adc
out
mov
cmps
add
sub
inc
adc
xor
add
hlt
clc
jbe
and
adc
test
ss
mov
push
sbb
xor
cmp
test
jb
cmp
cmps
inc
call
xchg
cmp
dec
cs
add
cdq
popa
aaa
sbb
nop
cld
rcl
aas
das
test
repnz
pop
out
or
cmp
cmps
and
cmp
sbb
daa
push
sbb
js
add
and
rol
inc
jns
inc
cs
mov
or
inc
push
test
leave
cmp
mov
inc
push
push
mov
repz
fisttp
add
pop
xor
push
adc
xchg
aaa
cmp
inc
xor
push
push
cmp
push
icebp
mov
xor
xor
bound
int3
mov
and
mov
xor
xchg
inc
mov
mov
test
js
cmp
sti
les
mov
(bad)
aas
rcr
jmp
sub
add
jp
push
adc
fwait
call
add
hlt
lock
repz
test
daa
cwde
(bad)
xor
js
(bad)
xor
xchg
cmp
into
pop
jo
dec
mov
inc
cmp
lods
mov
cmc
mov
add
xor
sub
or
add
add
and
test
jle
mov
push
pop
ds
push
inc
dec
sbb
adc
in
mov
jl
dec
adc
mov
push
or
push
mov
xchg
inc
adc
pop
es
mov
cmp
shl
js
cmp
clc
jb
lea
mov
and
loope
out
mov
jge
mov
inc
fcomi
mov
inc
cmp
jg
sbb
sub
or
sub
xor
loope
or
or
xor
sbb
xlat
push
or
push
push
inc
add
mov
popa
jmp
movs
push
adc
add
arpl
js
call
inc
mov
cmp
psrlw
sub
sbb
movs
xchg
and
adc
enter
aam
iret
dec
push
mov
cmp
movs
mov
loopne
dec
adc
sti
dec
rcl
in
cmp
rcl
ins
jmp
jbe
and
ins
xchg
repz
or
pop
push
mov
push
inc
sbb
lea
in
(bad)
pop
lahf
mov
inc
and
cmps
cmp
cmps
add
in
dec
fwait
fs
sbb
mov
or
and
out
mov
cdq
sub
(bad)
imul
leave
mov
xchg
call
or
ret
nop
pusha
cmps
jmp
je
push
sbb
add
push
repz
add
cmp
mov
out
inc
mov
repnz
clc
inc
or
mov
retf
sbb
dec
inc
add
test
or
(bad)
mov
push
(bad)
inc
cmp
fcmovbe
test
sbb
adc
cld
xlat
pop
inc
call
add
add
or
shr
pushf
adc
mov
and
cmp
loopne
and
jmp
js
sbb
cmc
cli
adc
mov
call
jmp
clc
rol
mov
mov
test
pop
je
xor
popa
sub
imul
inc
sbb
(bad)
test
out
pusha
call
test
or
lods
pop
add
push
rol
adc
pop
shr
jp
test
lahf
aaa
int3
js
or
cmp
jne
lods
sub
aam
cmps
jo
movs
push
sbb
and
fisttp
(bad)
in
dec
test
and
pop
scas
and
or
mov
adc
pop
adc
enter
popa
pop
dec
inc
pushf
test
add
adc
inc
pop
cmps
push
pop
dec
xchg
push
push
pop
dec
adc
mul
test
or
adc
dec
ja
sub
jmp
jns
daa
push
ja
dec
movs
or
int
push
xor
ficom
dec
adc
mov
fisttp
add
xchg
add
inc
clc
push
or
shl
hlt
dec
push
in
out
push
adc
pop
iret
sbb
xor
mov
push
test
mov
outs
xchg
inc
jae
inc
aas
lds
cmp
aas
sbb
or
fwait
sbb
jg
arpl
(bad)
sub
or
dec
dec
sub
sbb
push
pop
pop
jl
adc
or
shl
sbb
(bad)
push
fistp
ret
je
test
bound
loope
cmp
dec
jne
and
lock
inc
push
add
(bad)
cmp
push
add
or
add
inc
in
or
dec
(bad)
rcl
xchg
aam
shl
sub
xchg
and
dec
dec
add
fadd
push
adc
mov
adc
sbb
pop
sti
sahf
xor
xchg
out
aam
jo
pop
sbb
jmp
daa
mov
fs
xchg
sbb
movs
pop
idiv
cmp
cmp
add
stc
aas
add
mov
sub
mul
dec
mov
inc
das
inc
out
mov
mov
cmp
mov
repnz
fmul
push
inc
lock
add
cmp
dec
inc
in
test
enter
in
rcl
adc
push
and
or
inc
pop
add
in
adc
mov
out
push
sbb
lea
dec
scas
jp
pop
fwait
cmp
frstor
adc
and
loope
int3
nop
lsl
jo
add
sub
push
es
bound
sbb
adc
in
test
push
int3
push
push
xchg
jo
loop
ficomp
dec
cmp
mov
add
sub
pminsw
jb
test
sbb
cmc
cmp
pusha
pop
fidiv
imul
push
jns
mov
mov
ror
movs
mov
je
xor
mov
sbb
in
aad
js
push
cwde
ins
fisttp
push
out
pop
push
les
push
xchg
repnz
push
pushf
push
(bad)
adc
lahf
inc
test
cmp
pop
cmp
outs
rol
movs
xchg
mov
lea
add
in
mov
and
or
ss
adc
scas
fiadd
fincstp
shl
fnstcw
out
ret
or
arpl
add
jmp
adc
mov
je
cmp
adc
sub
sbb
add
jge
adc
sub
xchg
push
push
int
jno
imul
ss
sub
jle
adc
dec
push
mov
mov
pusha
shr
adc
inc
push
push
lock
pusha
xor
sub
mov
cs
cmps
sbb
and
es
ds
jbe
sub
dec
jmp
jns
(bad)
loopne
fcom
sbb
add
mov
fwait
pop
sbb
inc
push
push
inc
sahf
sub
inc
int3
(bad)
pushw
mov
loopne
mov
mov
movs
mov
stos
dec
jmp
rcl
loopne
mov
or
jg
adc
cmp
jo
outs
adc
inc
dec
sub
or
inc
test
add
lea
add
dec
pop
add
fwait
gs
rol
or
std
popa
adc
inc
adc
sbb
pop
pop
sbb
aas
js
mov
or
sub
into
mov
cmp
repz
lea
pop
pop
pop
pop
sbb
push
inc
dec
jne
and
sti
adc
sub
adc
adc
mov
add
add
stos
and
pop
xor
das
xor
xor
jecxz
mov
pop
jae
js
mov
jbe
(bad)
int
add
psubusb
mov
dec
or
push
dec
jns
jmp
movs
and
test
jecxz
jecxz
mov
mov
ds
jmp
out
outs
mov
sbb
inc
adc
xchg
cld
push
mov
dec
ins
add
popa
push
push
aas
es
adc
lods
mov
push
je
mov
cmp
ds
ds
push
sub
movzx
lea
loopne
push
pop
push
cmp
and
sbb
daa
jmp
addr16
xchg
xchg
dec
fsub
data16
iret
popa
out
push
sar
jno
les
inc
and
push
cmp
call
std
dec
xchg
add
clc
cmp
jl
pop
sbb
inc
mov
repnz
mov
mov
add
mov
add
push
clc
lds
jmp
xor
cld
loop
inc
and
sub
pop
push
push
pop
clc
add
aaa
sub
sub
push
pusha
rcr
mov
dec
mov
pop
daa
add
clc
int
and
jbe
inc
adc
cmp
cmc
mov
js
add
mov
mov
inc
or
addr16
pop
test
dec
dec
lods
rcl
cwde
es
push
push
sub
sub
and
inc
inc
jbe
cmps
push
outs
push
dec
mov
sbb
xor
xlat
mov
shr
sbb
adc
mov
pop
or
inc
rol
xor
adc
or
xchg
mov
das
movs
rcl
xor
push
psrad
shr
pusha
es
xchg
jb
and
cmp
push
gs
ins
lea
mov
hlt
mov
fist
cmp
sub
sub
add
jo
xchg
out
icebp
cmps
add
adc
pop
jno
and
push
shr
push
adc
enterw
and
mov
cdq
pop
mov
and
and
mov
lods
add
daa
mov
mov
inc
inc
pusha
xlat
dec
or
sbb
add
add
jae
sbb
add
shl
pusha
jne
ss
sar
aam
rcl
adc
cmp
jg
test
jle
cmp
jl
cmps
aaa
enter
mov
enter
cmp
jle
xor
dec
and
mov
and
mov
hlt
inc
idiv
xor
popa
pop
push
imul
push
imul
call
ins
xor
movs
push
pop
cmovae
and
adc
pop
movs
cmp
fcom
test
push
fsubr
xchg
cli
imul
or
adc
sub
mov
dec
sbb
das
or
xchg
retf
fdivr
or
out
push
sub
dec
enter
lock
mov
fild
setle
mov
in
sub
loopne
es
cmp
xor
dec
aam
and
mov
xor
xor
jne
cmp
or
add
xor
cdq
xor
cld
(bad)
fld1
aam
inc
pop
adc
(bad)
adc
shr
ins
adc
lods
jo
mov
pop
aam
add
dec
enter
lock
mov
rcl
test
xlat
sbb
jbe
nop
pop
sbb
mov
mov
push
mov
adc
ret
rdpmc
pop
popf
movs
jb
push
jge
inc
rol
repz
fcompp
pop
sub
mov
ins
adc
adc
mov
je
inc
mov
cmp
js
cmc
jmp
imul
test
mov
mov
inc
aam
test
jmp
xchg
xchg
or
xor
or
rol
push
iret
repz
push
or
or
adc
call
cmp
das
jne
retf
(bad)
push
and
push
push
int
pop
cmp
inc
pop
clc
jmp
bound
sbb
push
les
cmp
or
bnd
push
not
dec
sub
add
call
adc
mov
or
jle
lock
jmp
stos
fcmovnbe
add
and
add
xchg
out
sub
jmp
adc
or
adc
ins
and
or
test
mov
ins
rcr
xor
xlat
sbb
shr
test
dec
adc
push
xor
bound
retf
(bad)
arpl
cwde
dec
stos
dec
test
out
cwde
loopne
out
adc
add
cmp
or
es
rol
scas
arpl
movs
push
inc
mov
sbb
fldcw
fcomip
arpl
ror
xor
out
xchg
lods
or
pop
(bad)
popf
pop
mov
push
xor
pop
sbb
rcr
enter
jecxz
xor
xchg
out
mov
pop
clc
clc
hlt
or
dec
dec
hlt
push
xchg
rcl
and
or
outs
fild
jns
xor
test
xor
adc
mov
enter
loope
pop
popa
enter
push
xchg
mov
dec
in
hlt
int3
rcl
xor
movs
cmp
and
jbe
adc
in
loopne
add
loop
jbe
adc
call
rcl
int3
punpckhdq
push
add
xchg
popa
mov
jp
mov
and
in
inc
fcom
fidiv
mov
mov
add
push
lods
or
cmp
call
fmul
and
and
push
jb
lods
mov
ins
push
jl
add
push
xchg
dec
hlt
lods
xor
xor
sbb
in
in
jmp
fs
sar
adc
xor
lock
test
or
inc
sbb
mov
adc
mov
and
aaa
fs
sar
adc
jmp
aaa
pop
mov
adc
mov
sbb
sar
lahf
sbb
sbb
adc
ds
call
jg
jmp
dec
push
mov
add
enter
add
int
push
push
dec
dec
call
add
mov
adc
jg
dec
mov
cmp
jl
mov
cmp
leave
data16
inc
test
adc
sub
push
(bad)
push
push
sbb
int3
mov
and
mov
dec
xchg
daa
pop
cdq
hlt
clc
(bad)
hlt
mov
mov
dec
hlt
adc
or
inc
dec
ret
mov
fs
jne
cmp
sbb
ficomp
sbb
adc
mov
shr
arpl
jmp
out
lahf
and
fnstcw
or
or
jp
movs
sbb
sbb
enter
mov
es
mov
inc
xor
add
mov
push
cmp
jle
fsubr
sbb
and
inc
(bad)
pusha
adc
pop
ins
ja
loop
xchg
scas
dec
push
test
shl
fs
in
fs
sbb
cmps
jmp
mov
xchg
das
aaa
lods
xor
jecxz
cmp
hlt
dec
fistp
push
and
mov
add
add
pusha
mov
loop
cmc
aas
adc
outs
dec
aad
invd
cmp
mov
xor
inc
jle
add
std
inc
sub
xchg
xchg
xchg
mov
inc
push
(bad)
jmp
in
and
push
cmp
test
push
fs
jb
daa
mov
push
loopne
mov
nop
xor
and
inc
sahf
in
mov
xchg
and
daa
stc
lock
and
xchg
es
or
imul
mul
gs
sub
femms
add
les
jo
sbb
or
inc
jmp
test
arpl
cmp
adc
fist
adc
push
mov
push
fisttp
clc
or
popf
mov
push
addr16
cmp
mov
xor
ins
push
aam
aaa
add
or
rol
or
addr16
cmp
clc
push
scas
add
or
push
or
ror
add
mov
popa
repz
push
jmp
push
xor
add
mov
test
and
bnd
push
jp
repz
pop
fs
xor
sbb
xor
fwait
and
xchg
cmp
ins
cmp
aad
push
sub
sub
pop
in
push
xor
int3
xchg
xor
ds
int3
adc
jp
add
imul
inc
cmp
xlat
adc
xchg
daa
sbb
test
aad
cvtps2pd
and
xchg
and
sub
add
dec
rcl
test
cmps
mov
call
jl
push
xchg
push
loope
test
and
sub
push
je
push
xchg
cs
gs
ret
outs
mov
xchg
scas
or
add
lds
push
repnz
add
ror
cs
(bad)
jl
add
ret
jno
das
push
mov
xor
cmp
cld
mov
shr
cmp
(bad)
push
inc
jns
jmp
mov
ds
sub
xlat
cdq
clc
pop
lods
aas
in
or
stos
pusha
popf
add
or
or
stos
sub
repnz
mov
mov
stc
or
sbb
or
pop
xor
fs
gs
mov
and
aas
jmp
push
sbb
pop
pop
aaa
icebp
shl
test
test
inc
push
sub
sbb
imul
inc
jle
dec
xchg
or
das
cld
and
and
add
inc
aaa
pushf
cmps
outs
and
push
lock
push
pop
mov
enter
and
adc
sbb
movs
push
inc
lea
cmc
and
sar
(bad)
ds
outs
call
and
(bad)
push
je
add
sub
cld
cmp
jno
sub
pusha
dec
sbb
mul
add
push
add
dec
mov
clc
add
push
ret
aas
jne
sub
sub
pop
outs
inc
xchg
mov
call
dec
push
add
push
inc
push
out
(bad)
and
sahf
jg
push
add
sahf
out
cmp
stos
inc
push
das
push
or
jmp
or
mov
mov
add
pusha
icebp
lods
jbe
(bad)
and
dec
inc
inc
outs
pop
outs
mov
inc
xchg
xor
ss
mov
rcl
pop
mov
xlat
(bad)
pop
movs
out
dec
jge
mov
xor
(bad)
lea
mov
mov
and
lock
cmps
mov
repz
mov
clc
or
shl
mov
cld
mov
xchg
inc
mov
pop
or
adc
jne
cmp
popf
shl
jns
push
or
inc
hlt
xor
push
pop
dec
adc
push
jecxz
dec
adc
fisttp
cmps
je
or
(bad)
loop
mov
(bad)
retf
mov
xor
es
xor
fdiv
push
outs
test
sub
adc
sbb
sbb
cmp
mov
imul
mov
mov
or
sub
in
rcr
or
jae
sbb
sub
xor
jmp
pop
not
or
sbb
jno
enter
popa
les
add
sbb
and
out
or
in
cs
and
xor
mov
push
xchg
or
jns
out
adc
add
mov
jae
xor
xor
cld
clc
test
iret
sbb
mov
icebp
jg
adc
or
retf
(bad)
lods
loopne
sbb
imul
jbe
sbb
or
pop
loopne
mov
es
repnz
cmp
int3
loop
addps
pop
push
cs
sbb
add
(bad)
mov
lahf
push
imul
push
jo
jmp
push
xor
pusha
dec
shl
xlat
les
hlt
lea
jbe
fild
push
and
or
leave
add
inc
and
lock
pusha
add
fisttp
xchg
scas
xchg
nop
scas
or
push
or
xsha256
cmps
adc
and
pop
push
mov
inc
rol
adc
jbe
rcr
xchg
sbb
rcr
sub
lods
mov
push
sub
sar
jmp
pop
mov
pusha
and
fnstenv
fwait
or
add
and
mov
aas
pop
call
(bad)
pop
jge
lock
pop
adc
ror
das
inc
xor
outs
in
cmp
lods
sbb
lahf
mov
push
aam
inc
iret
mov
push
and
and
inc
sub
add
sbb
xchg
xor
imul
mov
pop
mov
dec
push
sub
cmps
stos
lock
inc
sub
out
and
dec
pop
mov
es
popa
imul
sbb
mov
rcl
ror
adc
push
or
cmc
pop
(bad)
out
ret
jmp
rol
and
jg
in
or
rcr
jecxz
or
hlt
and
pop
jmp
in
test
dec
adc
adc
cmp
arpl
imul
retf
ret
xor
adc
sub
push
ja
je
stos
call
push
xor
push
jo
fld
inc
push
imul
push
sbb
mov
inc
addr16
cmps
in
dec
mov
add
dec
sbb
enter
mov
popa
ret
lock
rcr
sub
out
cwde
mov
jne
cmps
(bad)
cmp
data16
cmp
inc
aaa
mov
hlt
xor
outs
push
jmp
push
push
(bad)
daa
rcl
push
adc
adc
in
dec
jae
aam
imul
ret
bound
jae
test
push
push
imul
mov
add
and
into
cld
(bad)
jle
and
lock
retfw
or
push
lds
inc
stos
test
not
xor
push
ja
jns
adc
sbb
dec
or
sub
add
mov
aam
imul
imul
ficomp
enter
ja
or
retf
out
xchg
mov
sub
inc
out
push
sti
lods
rol
rcl
push
dec
adc
orps
and
push
adc
and
test
sbb
add
xor
add
cmp
je
push
enter
add
mov
and
sub
je
lea
push
lock
sub
ret
mov
jl
mov
fild
ficomp
sub
mov
adc
cmp
and
inc
cld
jae
lods
xchg
daa
push
jne
fidivr
xor
scas
(bad)
int
call
fimul
lock
sub
adc
push
sar
hlt
repz
enter
mov
loope
adc
data16
enter
lock
icebp
enter
sub
retf
sbb
lds
or
push
push
in
ret
out
cmp
lds
into
or
sub
dec
aaa
ror
(bad)
fimul
xchg
xchg
pop
mov
fs
xchg
jecxz
mov
pop
mov
test
cld
add
jns
pop
add
push
pop
mov
ins
adc
in
or
sbb
cdq
sub
mov
aam
sar
add
dec
sar
xor
leave
mov
lock
dec
mov
sub
or
adc
call
mov
in
jmp
inc
loope
push
je
jb
sbb
test
pushf
imul
or
clc
jmp
jno
mov
mov
adc
pusha
dec
or
aam
sbb
fidivr
and
sub
sbb
adc
pop
push
(bad)
hlt
sbb
xchg
loopne
and
popw
pop
add
xor
dec
loopne
dec
cmp
and
aas
pop
aaa
rol
push
sub
pop
fs
inc
add
mov
cmp
clc
inc
cmp
adc
(bad)
xor
dec
dec
xor
ja
or
inc
adc
movs
xor
dec
push
jo
mov
sub
jmp
mov
lahf
pop
mov
(bad)
fs
bound
or
scas
or
mov
cmc
test
inc
and
call
mov
mov
pop
dec
dec
add
clc
mov
mov
popa
jo
add
xor
and
sbb
ficom
or
rcr
movs
int
pop
fisub
sbb
sbb
and
cmps
mov
sbb
mov
push
rcr
daa
sub
popa
jmp
adc
jle
xadd
inc
xor
inc
gs
mov
mov
pop
sub
lahf
mov
inc
lock
cmps
das
clc
inc
fnsave
or
popa
pop
sub
xlat
or
enter
add
fld
or
mov
jge
or
ror
cmps
clc
fdiv
aad
test
rcl
cvttps2pi
movs
in
push
add
inc
mov
mov
or
xchg
clc
or
push
aaa
cs
test
inc
push
stc
call
adc
and
xacquire
push
adc
fsubr
(bad)
int3
jmp
mov
repz
test
jbe
cmp
and
ret
es
lock
push
inc
cld
and
test
adc
je
jecxz
pushf
ret
push
mov
mov
add
inc
push
jae
test
and
inc
das
mov
add
mov
loopne
sbb
add
enter
popa
or
enter
fdivr
push
add
retf
xchg
sbb
pop
pop
pop
inc
jo
add
stos
and
ret
dec
mov
jmp
test
daa
push
add
nop
push
xor
ret
scas
(bad)
imul
(bad)
and
pop
inc
adc
sahf
adc
fiadd
in
xchg
push
or
xor
daa
mov
pop
sub
test
jecxz
mov
mov
push
popa
out
pop
pop
pop
lods
xchg
movs
iret
pop
push
or
out
pop
mov
pop
sbb
cmp
mov
mov
movs
out
xor
loopne
adc
mov
jo
dec
in
sbb
out
loopne
mov
and
jp
xor
xchg
mov
pop
xchg
mov
push
mov
push
or
add
imul
add
xchg
lahf
bound
mov
pop
mov
rcl
or
daa
sub
adc
sbb
loopne
mov
mov
pop
sti
jmp
pusha
punpckhdq
xor
in
sub
lea
push
lds
in
pop
jae
cld
inc
stos
xchg
mov
inc
dec
pop
repnz
rcr
mov
fsubr
add
call
fdivr
dec
jo
mov
test
pop
jmp
gs
add
mov
dec
adc
int3
push
push
cwde
jne
mov
pusha
loope
inc
pop
rcl
pop
pop
mov
add
push
and
mov
push
ins
dec
xchg
adc
mov
cmps
xlat
jg
loopne
sbb
push
inc
jne
cli
mov
mov
es
pusha
adc
in
jbe
add
dec
mov
xchg
add
pusha
arpl
jmp
pop
sub
sbb
or
pop
xchg
test
lock
scas
dec
sahf
enter
addr16
or
xchg
push
add
(bad)
inc
sbb
dec
clc
or
int
aaa
jno
pop
push
jns
inc
mov
test
fwait
call
je
mov
dec
jg
mov
inc
or
int
xlat
push
mov
mov
inc
cmp
jne
out
adc
cmp
cli
adc
xchg
fwait
loopne
(bad)
xchg
push
or
loopne
dec
lods
cld
pop
pop
mov
sbb
and
add
leave
sbb
out
dec
mov
adc
cmp
mov
je
adc
repz
dec
adc
sbb
lea
or
add
loope
add
cmp
out
in
mov
aaa
je
push
cmc
or
jge
push
mov
sbb
idiv
inc
mov
mov
sub
xor
or
and
dec
xchg
or
dec
or
movs
sbb
jl
sub
popf
inc
jle
aas
fisttp
mov
pop
out
sbb
ror
add
add
sub
and
lahf
mov
mov
add
std
xchg
dec
mov
out
push
fmul
xchg
push
jle
adc
mov
repz
push
and
lods
xchg
fistp
int3
sub
push
or
push
add
add
sub
mov
imul
cmps
hlt
cmp
in
test
inc
stos
cld
in
nop
add
je
js
add
scas
mov
xchg
or
inc
cmp
fsubp
imul
and
xchg
mov
xchg
sub
adc
adc
sub
sbb
mov
jnp
ins
xchg
shr
sbb
inc
mov
jno
xor
ds
cmp
(bad)
pusha
imul
ret
lock
(bad)
dec
cmp
jne
mov
fisttp
test
or
or
ss
cmp
or
lock
xchg
movs
adc
xchg
scas
mov
(bad)
ins
pop
das
imul
jg
dec
mov
fnsetpm(287
imul
or
add
in
jle
and
out
push
sbb
add
(bad)
jmp
mov
movs
es
xchg
shl
lock
mov
inc
sub
int3
jnp
rcl
in
stos
add
and
cmp
into
inc
push
and
nop
pop
sbb
xchg
xchg
cmp
fld
mov
es
cmps
sbb
cs
sbb
je
std
loopne
movs
(bad)
xor
mov
push
dec
and
fs
pop
adc
out
inc
mov
adc
loopne
cmp
sub
sysexit
in
pop
mov
(bad)
pop
loope
mov
sbb
pop
pop
in
jl
mov
or
rol
into
(bad)
gs
sbb
rcr
pop
push
sbb
retf
sub
jae
mov
xchg
push
lods
xor
xlat
or
or
push
adc
daa
pop
xchg
in
out
nop
dec
or
mov
(bad)
shr
js
or
ret
xchg
paddusb
mov
cmp
xchg
lods
loopne
jge
leave
leave
ds
in
push
pop
inc
pop
adc
sahf
inc
addr16
fisubr
out
hlt
cwde
lea
mov
xchg
movs
mov
fiadd
inc
jge
test
or
adc
jnp
adc
jo
cmp
add
(bad)
call
mov
xchg
sub
lock
add
lock
imul
stos
addr16
add
neg
push
push
xor
adc
jmp
test
in
dec
aas
int3
arpl
xchg
ror
push
lea
aaa
sub
jo
mov
inc
push
sub
inc
and
iret
push
or
mov
ins
add
cmp
ja
cmp
int3
push
jo
add
xchg
enter
and
inc
sub
mov
add
and
mov
outs
dec
jge
test
add
jle
push
add
mov
jmp
push
sbb
outs
jns
sub
add
jl
shl
mov
and
xor
cmp
out
adc
mov
lahf
xor
adc
or
jmp
ins
cs
or
add
push
xchg
test
enter
xor
push
dec
lea
jecxz
jno
push
jmp
mov
push
mov
jmp
scas
je
mov
pop
mov
sar
xor
shr
mov
enter
xchg
aam
xchg
(bad)
pop
sub
jno
mov
push
dec
lods
test
adc
adc
pop
push
push
pop
daa
mov
adc
push
or
or
sbb
int
rol
cmc
mov
push
or
(bad)
or
loopne
mov
pop
pusha
jae
xchg
out
outs
dec
dec
dec
mov
push
rol
adc
rcr
mov
fnsave
add
push
iret
push
jne
loope
dec
leave
mov
cmp
dec
xchg
ins
mov
adc
ret
lods
add
rcl
push
movs
adc
and
sbb
sbb
add
inc
pusha
popf
test
mov
js
(bad)
mov
sub
scas
shl
adc
(bad)
cmp
ret
cmp
cmp
sbb
(bad)
loopne
push
daa
imul
add
fdiv
fwait
leave
js
lea
std
cmp
mov
inc
arpl
push
shr
cdq
add
mov
mov
rol
call
fmul
or
or
inc
retf
dec
dec
mov
push
pop
and
nop
dec
or
jmp
pop
add
fstp
arpl
add
sbb
mov
add
jle
loope
loop
in
retf
iret
dec
or
inc
sbb
mov
add
cmp
xor
pop
jmp
xor
mov
aas
les
xor
ret
xchg
adc
dec
adc
xchg
pushf
and
push
rcr
pushf
rcr
fwait
cdq
pushf
add
add
pop
mov
and
dec
test
push
push
dec
mov
add
adc
pop
sub
dec
das
lock
outs
pop
pop
mov
pop
cmp
jmp
movs
jo
add
test
push
push
ins
push
sbb
(bad)
rol
lock
mov
and
sub
in
xor
hlt
jo
arpl
inc
jmp
pop
enter
sahf
ret
xchg
ins
add
adc
clc
sbb
test
test
lock
ins
sub
pop
sub
add
sub
popa
lea
mov
sahf
cmp
mov
xchg
cmps
push
ja
xor
call
push
aam
pop
sbb
jg
add
sub
in
sub
iret
xchg
stc
push
mov
sbb
rsqrtps
and
push
add
pop
fdiv
icebp
sbb
outs
es
mov
lea
xor
and
sbb
sbb
stc
adc
daa
outs
mov
dec
sbb
sub
inc
or
je
or
je
jmp
inc
add
mov
xor
sub
mov
or
jmp
mov
stos
add
not
mov
jmp
mov
or
int
push
xor
inc
pop
imul
push
mov
call
jl
popa
sub
pusha
cmp
hlt
ja
push
jle
sub
dec
jmp
push
aas
por
sub
test
out
add
mov
cmps
out
scas
ret
jp
(bad)
cmp
add
test
or
mov
cwde
mov
inc
js
inc
sbb
add
and
add
adc
sbb
jmp
pop
sahf
ficomp
cmps
dec
cmp
lods
cmp
sti
sbb
adc
push
push
add
mov
in
push
ds
sbb
mov
sub
xchg
xor
mov
push
sub
inc
inc
cmp
ja
or
or
jg
movs
add
out
jnp
sete
add
js
mov
dec
lock
add
dec
jns
(bad)
push
xor
jg
adc
outs
dec
sbb
mov
sub
jg
pusha
lock
pop
mov
je
movs
jns
mov
push
imul
cmp
pop
adc
mov
push
xor
dec
xor
data16
xlat
sbb
fcom
mov
pop
cmp
movs
xchg
jge
cmp
dec
or
xor
test
loopne
add
gs
sahf
jp
pop
outs
adc
cmp
mov
ror
call
and
jmp
dec
or
sbb
add
sub
sbb
xchg
dec
mov
dec
add
push
ja
jae
add
(bad)
lea
test
xor
pop
sub
out
retf
add
add
movlps
ins
push
cmp
or
jns
hlt
into
pop
mov
data16
xchg
dec
ins
adc
out
and
pop
sub
test
jmp
pop
push
mov
dec
pop
push
jle
xor
adc
dec
(bad)
ds
or
xor
push
adc
fisttp
inc
xor
push
xor
fs
sbb
dec
js
cmp
xchg
mov
fsub
adc
xchg
sahf
inc
lods
add
add
jmp
jno
fadd
sbb
js
inc
cmp
pop
popa
dec
pop
adc
loopne
scas
push
push
stc
adc
adc
lock
push
rol
or
imul
data16
call
dec
pop
sub
mov
cmp
add
add
add
xor
popa
jmp
add
push
cdq
add
call
push
add
inc
jne
popf
mov
arpl
xchg
inc
and
out
add
dec
retf
not
cmp
jns
(bad)
imul
shl
movs
mov
ret
in
jno
mov
ret
lods
push
js
ins
fwait
pusha
mov
adc
sbb
(bad)
jo
(bad)
lea
add
jno
lea
in
and
adc
out
dec
clc
push
or
dec
fild
xor
daa
ins
pop
or
leave
push
and
xchg
jbe
and
xchg
xchg
fwait
movs
cmp
movs
push
cmp
and
pushf
inc
(bad)
sub
aaa
dec
ret
and
dec
ja
adc
or
push
loopne
call
test
or
ffreep
ror
and
inc
loopne
loopne
loopne
lods
add
es
loopne
push
cmps
mov
sbb
sbb
or
cli
fisub
sar
les
sbb
mov
cmp
mov
or
and
dec
sub
pop
xchg
outs
lock
in
adc
push
call
pop
xchg
xor
les
add
lods
push
mov
inc
pop
inc
enter
in
enter
data16
popa
xchg
mov
and
xor
mov
(bad)
push
in
adc
daa
pop
rol
sub
ror
push
or
neg
jp
add
inc
stos
xchg
aam
mov
loop
call
add
adc
or
je
lock
sub
pop
push
push
test
sbb
pop
mov
inc
cmc
sub
je
mov
inc
or
dec
popa
call
test
in
or
xchg
mov
enter
xchg
and
add
xor
adc
push
inc
jnp
call
jbe
lock
loopne
push
test
sbb
inc
mov
inc
add
or
pop
dec
cmp
gs
xor
xchg
cmc
mov
lock
test
hlt
imul
mov
test
test
jbe
cvttps2pi
sbb
xchg
aas
shl
std
cmp
or
add
pop
mov
dec
inc
jbe
jmp
sub
test
int3
int3
(bad)
sbb
test
sub
add
sbb
xchg
fabs
ins
fdiv
setl
inc
in
xor
inc
adc
leave
inc
xchg
pop
fdivr
mov
(bad)
mov
jno
mov
or
dec
add
adc
bound
dec
and
push
fs
js
inc
push
and
vpslld
(bad)
fcom
xor
and
add
enter
loopne
(bad)
stos
ins
call
out
fild
clc
adc
ret
mov
mov
cs
jno
jne
xor
repnz
adc
mov
and
imul
fbstp
xchg
mov
xchg
outs
push
dec
ja
loopne
or
adc
pop
add
(bad)
xor
xlat
iret
push
add
es
fist
out
add
pop
mov
xchg
test
mov
aaa
xchg
call
push
jle
adc
pop
ins
push
jmp
sbb
lahf
adc
jno
or
in
pop
in
add
movs
inc
ja
mov
pop
cld
inc
mov
sub
xor
xchg
shl
cmp
sbb
rcl
sub
nop
call
das
xlat
pop
popf
mov
add
rcl
imul
cmp
fimul
outs
test
push
pop
(bad)
fadd
enter
or
outs
adc
adc
push
jno
outs
jo
sbb
mov
and
lea
ror
push
and
repz
xchg
lea
sbb
add
test
add
movs
mov
sbb
fsubrp
push
jecxz
and
inc
ror
add
add
rcr
clc
dec
sbb
retf
pop
shl
jecxz
push
ja
lea
mov
js
add
ds
(bad)
pop
xchg
add
sub
add
and
push
test
adc
dec
(bad)
mov
mov
mov
and
adc
adc
mov
sbb
cwde
fstp
jge
scas
xchg
arpl
ret
jmp
add
mov
clc
scas
mov
loope
sbb
movs
cs
cld
or
pop
and
sbb
mov
push
hlt
lahf
xlat
jp
mov
cmp
and
pop
mov
lea
inc
jecxz
leave
inc
add
push
add
jno
mov
pop
js
mov
push
mov
mov
frstor
mov
add
xchg
clc
mov
inc
mov
mov
push
push
es
cmp
and
sub
sahf
outs
leave
mov
cli
shl
jmp
dec
cmp
clc
jmp
jnp
dec
mov
cmp
sub
jl
push
cdq
jmp
(bad)
retf
add
retf
jecxz
inc
out
jmp
jo
sbb
push
or
into
mov
or
push
xchg
inc
lods
xchg
xchg
movs
std
jmp
jae
cmp
icebp
push
cli
xor
inc
cmp
cmp
add
sbb
call
sub
add
add
imul
popf
jb
adc
cmp
push
and
adc
ins
stos
retf
je
mov
dec
mov
xor
inc
add
dec
pop
ins
push
cli
(bad)
or
fsub
mov
push
jle
mov
in
sub
sbb
and
mov
mov
int3
xlat
jl
sub
ror
ins
jge
sub
ja
sti
mov
add
inc
pusha
stos
pop
and
fwait
or
xor
mov
pop
add
jge
inc
mov
sub
inc
fwait
ret
xchg
imul
push
mov
or
ss
outs
mov
rol
ds
popf
and
imul
sub
adc
test
inc
adc
or
adc
sbb
jbe
popf
or
fiadd
das
aad
adc
repz
push
inc
shr
popf
out
daa
cmp
je
cmp
mov
loopne
and
sbb
and
scas
mov
or
and
or
(bad)
and
ret
push
cmc
sub
cmp
in
and
push
push
push
mov
push
xor
sub
inc
add
pop
xor
sub
mov
xchg
sub
push
inc
mov
jb
adc
ins
hlt
ja
xchg
cmp
add
add
jg
adc
popf
sub
shl
gs
sbb
leave
cmps
inc
sub
mov
fcomp
inc
and
xor
adc
iret
dec
inc
retf
add
ja
lock
lods
scas
mov
add
xchg
imul
dec
or
nop
nop
jno
shld
jne
add
jne
cmp
je
and
mov
and
sbb
mov
push
ret
pushf
ror
push
mov
dec
lods
mov
test
sub
nop
jg
(bad)
ret
inc
and
jo
and
xor
mov
push
xchg
mov
add
imul
xchg
mov
sti
mov
add
in
pop
popf
push
pop
jmp
add
into
test
inc
mov
xor
popf
inc
and
fmul
cld
(bad)
cmps
mov
xor
mov
lahf
jne
cwde
jl
retf
or
inc
scas
aas
cmps
and
mov
push
sbb
jne
cmp
push
add
arpl
nop
outs
push
out
or
pop
cwde
les
daa
jo
or
pop
shl
cmp
pusha
lea
das
inc
clc
add
jmp
(bad)
sti
jmp
and
inc
clc
inc
or
or
xor
clc
add
mov
adc
adc
sub
xor
xchg
xchg
or
in
je
(bad)
xchg
sub
ror
cmp
or
idiv
add
pop
mov
dec
or
cdq
dec
aam
push
inc
popa
lods
loop
stos
pusha
xchg
and
js
rcl
mov
jbe
scas
mov
mov
(bad)
stos
sub
loop
pop
sbb
pusha
ret
push
and
jno
pusha
cmp
sbb
ret
imul
outs
pop
add
adc
inc
outs
or
inc
jecxz
adc
and
dec
add
cmp
or
xor
(bad)
push
(bad)
xchg
pusha
jle
push
add
sub
pop
adc
es
mov
mov
sar
inc
adc
je
gs
push
aam
inc
adc
sbb
xchg
pop
mov
out
jecxz
mov
mov
mov
adc
dec
push
sbb
mov
pop
cmp
ja
test
dec
lahf
mov
imul
dec
fbld
daa
push
sbb
cs
push
std
mov
pop
mov
add
add
jle
dec
cmp
out
inc
pusha
mov
pop
ss
mov
int
stos
sbb
inc
xchg
cld
adc
call
sbb
hlt
push
and
movs
sbb
sar
cmp
clc
sbb
dec
pop
mov
add
push
loope
xchg
pusha
(bad)
mov
pusha
add
inc
fs
pop
xor
in
outs
movs
clc
sbb
dec
cmp
xchg
sbb
mov
arpl
mov
add
pusha
push
mov
and
and
push
mov
push
xor
xor
gs
inc
push
fiadd
and
dec
test
cmp
adc
stos
cmps
dec
add
or
(bad)
jae
pop
or
mov
xchg
sub
add
pop
mov
dec
push
push
jb
fdivp
ds
imul
push
dec
bound
jns
adc
jne
jae
out
or
and
push
aaa
push
inc
push
xor
add
sbb
jecxz
les
andpd
adc
test
inc
add
les
lods
scas
ror
stos
inc
pop
push
dec
les
pop
add
add
mov
mov
or
in
jne
mov
add
inc
loop
jne
scas
inc
ins
add
or
dec
(bad)
int
jge
mov
xchg
or
pop
adc
and
mov
adc
xlat
call
mov
xchg
and
inc
sahf
pop
add
add
inc
xor
sahf
jp
fdivr
push
pop
clc
das
fst
jge
xor
cmp
inc
sbb
aas
push
cmps
xchg
jge
push
loope
pusha
mov
shl
pusha
jns
dec
or
inc
or
cld
in
add
dec
or
inc
jmp
stc
cmp
scas
movs
sub
jne
inc
cmp
ret
inc
xchg
(bad)
xchg
ja
pop
imul
dec
lods
or
pop
ror
sbb
mov
popf
mov
xor
jno
ins
lock
stos
rcr
outs
imul
adc
mov
pop
sbb
pop
cmps
inc
xor
sbb
(bad)
mov
add
sahf
test
inc
in
sahf
imul
stc
adc
jbe
mov
xchg
in
xor
cmp
sbb
loopne
cmovs
adc
push
or
xor
adc
mov
mov
inc
sbb
and
mov
aaa
lds
fiadd
xchg
push
push
jge
push
sub
fbstp
and
jo
adc
pusha
daa
add
mov
inc
in
mov
test
lock
mov
push
and
jae
pop
mov
and
mov
rol
fcom
push
inc
jb
retf
adc
push
push
xchg
nop
repnz
int3
aas
adc
adc
inc
rcr
pop
jno
lods
mov
mov
jl
or
and
add
add
push
fldenv
ss
sahf
mov
int3
add
push
adc
data16
and
js
test
pop
das
popa
dec
cmp
add
data16
fs
mov
jmp
add
jne
in
fistp
and
mov
daa
inc
push
push
ja
adc
add
mov
mov
jmp
jo
add
mov
jg
jnp
mov
sbb
jmp
neg
jg
mov
push
adc
fcomp
rcl
int
shl
add
sub
sti
mov
add
add
sub
and
(bad)
fidiv
sbb
jne
lods
xor
jmp
js
data16
dec
mov
lds
(bad)
sub
fistp
mov
outs
fwait
lock
inc
sub
je
fistp
cmps
lock
scas
and
dec
and
ret
outs
pop
xchg
and
fmul
or
or
dec
and
xor
xchg
and
aaa
ja
fsubr
xchg
fisttp
pop
or
add
fsubr
lods
sbb
mov
mov
inc
lea
add
ins
or
pop
fcomp
ins
mov
sub
dec
or
cvtps2pi
(bad)
(bad)
jg
or
push
inc
adc
push
inc
push
test
mov
in
jmp
sbb
mov
push
push
mov
fdivr
je
dec
je
sub
or
push
inc
in
push
xchg
jle
add
sub
mov
das
inc
or
jecxz
pop
mov
xchg
faddp
adc
sbb
mov
jne
add
movs
adc
ret
inc
add
mov
mov
xchg
icebp
mov
scas
pop
cmp
mov
test
adc
mul
add
or
pop
or
sbb
push
aam
mov
xor
imul
cmps
mov
popa
sbb
mov
retf
xchg
push
cmp
mov
(bad)
enter
js
aaa
loop
(bad)
loope
xchg
enter
hlt
or
jno
clc
pop
add
cmp
adc
das
inc
add
mov
(bad)
jne
out
sbb
mov
sahf
push
mov
lahf
test
mov
mov
ret
mov
xchg
xchg
pop
xor
dec
ret
and
push
sub
add
adc
les
xor
adc
xor
dec
jmp
xlat
retf
sub
mov
xor
and
jbe
mov
xchg
add
enter
sbb
jge
clc
sub
lds
pop
iret
sbb
mov
and
outs
out
xchg
(bad)
shr
add
add
out
xor
aad
ret
movs
or
jl
addr16
shl
jne
or
cs
cmp
or
add
retf
je
ja
fist
sbb
lods
repnz
retf
jp
nop
cmp
sbb
add
loope
retf
or
push
outs
dec
cli
cmp
xor
or
loopne
inc
xlat
jbe
inc
lock
xor
mov
add
pop
sub
pop
or
adc
jmp
pop
pushf
sbb
jmp
push
inc
or
out
fcom
lods
push
push
int
cmp
(bad)
sbb
retf
leave
inc
and
inc
pop
jmp
sub
xor
inc
sbb
and
bound
cmovl
test
sar
pop
mov
inc
dec
cmp
pop
fstp
jne
or
and
adc
xchg
inc
push
call
add
iret
in
jl
enter
sub
movs
sub
test
pushf
pop
les
push
or
test
fwait
or
mov
fs
push
xchg
test
mov
out
inc
jmp
ja
mov
out
adc
jo
loopne
push
xchg
add
dec
push
xor
cmp
push
sub
sub
scas
dec
dec
test
sub
push
movs
and
mov
inc
lock
out
movs
dec
cmps
es
lods
es
int
hlt
push
shl
sbb
adc
out
adc
xor
leave
aaa
xor
sbb
test
aas
xor
push
xor
push
mov
jo
cmps
repz
or
scas
adc
add
push
mov
mov
xor
jno
or
or
dec
outs
or
mov
pop
xchg
inc
pop
test
std
cmp
in
bnd
push
xor
dec
jno
mov
(bad)
ficom
push
je
jo
or
adc
mov
adc
sar
dec
cdq
daa
movs
push
test
mov
ds
(bad)
fs
mov
js
mov
mov
cwde
pushf
mov
lods
mov
mov
rol
int3
mov
fmul
call
mov
hlt
clc
cld
mov
or
mov
xor
push
sub
push
test
loope
jmp
enter
aad
jnp
inc
loope
cmp
fsubr
xor
out
adc
sub
lahf
xor
add
and
adc
ins
mov
sbb
and
fild
jl
(bad)
gs
retf
and
test
cld
dec
in
xchg
mov
xlat
nop
xor
add
test
movs
xor
pushf
les
in
add
push
push
movs
jb
and
mov
and
mov
inc
sub
test
sub
in
fxch
dec
shl
xchg
add
push
movs
xor
mov
retf
cld
in
push
cs
sbb
call
retf
lock
inc
sub
hlt
xchg
clc
add
call
add
xchg
add
mov
adc
adc
cmps
dec
push
adc
sbb
xchg
inc
call
enter
aad
loope
int
clc
outs
inc
sub
into
nop
es
rcl
jae
stos
xor
dec
cmp
ret
mov
lods
xor
mov
out
and
push
jbe
mov
mov
push
jae
addr16
adc
inc
sbb
dec
adc
imul
mov
frstor
ja
dec
push
mov
inc
xor
ret
jnp
shl
xchg
adc
or
and
mov
mov
dec
or
fnstsw
mov
jns
out
outs
jb
xor
jae
pusha
pop
in
(bad)
mov
adc
add
fcomp
mov
push
dec
pop
(bad)
or
sbb
xchg
push
jecxz
cmp
pop
loop
imul
push
xor
out
add
icebp
pop
ret
jae
dec
mov
jno
aaa
aaa
sub
pop
or
inc
mov
fist
mov
inc
fidiv
push
ins
and
popa
inc
ja
push
icebp
fwait
xchg
inc
inc
push
ins
lds
push
jnp
xor
inc
imul
mov
inc
pop
dec
ud2
fild
dec
mov
push
inc
cmps
xlat
(bad)
push
call
xchg
nop
mov
jne
fimul
sahf
or
sbb
add
sahf
ja
pop
imul
lods
scas
pop
outs
push
cmps
jae
imul
xchg
arpl
stos
fwait
add
inc
add
cmps
sub
xlat
cmc
xor
call
lock
add
sbb
ja
pushf
fcomp
jne
jne
js
add
xchg
sbb
or
sar
push
and
inc
imul
jb
inc
and
nop
out
sbb
inc
xor
inc
dec
jb
in
inc
inc
inc
jp
xchg
js
inc
push
jb
shl
sub
into
stos
fist
das
pop
xlat
(bad)
outs
push
shl
or
clc
mov
sub
dec
dec
fdiv
int3
sub
jge
or
enter
jg
shl
dec
cmps
adc
(bad)
rcl
push
cdq
sub
mov
inc
int
fdiv
in
ret
retf
xor
fistp
cmp
sub
or
jbe
repnz
xchg
loopne
add
int
and
ss
push
test
sbb
loope
cmps
pop
cli
adc
pop
mov
inc
add
adc
pop
add
add
stc
mov
inc
lock
outs
jo
mul
jecxz
sbb
push
je
adc
imul
jb
adc
adc
call
jne
inc
pop
fadd
adc
in
pop
dec
imul
mov
xchg
and
(bad)
jmp
pop
add
mov
(bad)
test
and
add
cs
sub
mov
shr
pop
das
or
inc
push
sahf
out
aad
xchg
mov
rol
dec
movs
pop
pop
pusha
aaa
bound
jbe
loope
or
push
mov
imul
or
repnz
add
shr
xchg
mov
mov
jbe
push
adc
in
enter
xchg
mov
adc
mov
dec
or
pop
addr16
fadd
xor
inc
xor
inc
nop
das
push
cmp
repz
sub
aas
or
xchg
fsub
mov
jge
inc
mov
test
cmp
mov
mov
push
or
push
dec
add
xor
out
sbb
lea
inc
pop
sbb
ins
data16
loop
mov
add
adc
fsub
and
jl
xlat
clc
fmul
or
sti
cmp
inc
mov
mov
dec
xor
das
in
inc
je
xchg
pop
lahf
push
xor
mov
mov
inc
inc
call
push
xor
seto
aad
or
inc
aam
lea
scas
sbb
or
pop
add
ret
clc
ja
(bad)
xchg
ins
jle
add
push
inc
inc
out
dec
jne
xlat
adc
dec
and
fnstcw
dec
in
pop
xchg
cmps
das
in
mov
xchg
ja
mov
jg
cmp
sbb
pop
rcl
pop
jbe
xchg
(bad)
jnp
pop
jmp
mov
add
aaa
add
push
mov
je
inc
div
repnz
jo
int3
aaa
out
jmp
inc
imul
pushf
rol
mov
pop
xchg
or
aad
jle
sub
mov
stc
add
mov
jle
popf
dec
or
sub
idiv
xor
enter
add
push
sar
sbb
xchg
or
or
sbb
out
mov
and
dec
or
inc
xor
mov
cmp
xor
jne
add
outs
mov
shl
fidivr
xchg
aad
(bad)
out
stos
sbb
test
lea
call
push
mov
push
shr
mov
mov
adc
add
inc
mov
add
ins
jo
fsubr
push
cmp
xchg
cmps
or
mov
push
adc
or
sbb
inc
retf
scas
xor
adc
cmp
dec
shrd
std
mov
cmp
fldln2
fdiv
xor
(bad)
mov
push
add
nop
inc
push
sbb
add
inc
push
sbb
or
sbb
or
or
fs
inc
or
or
add
fmul
push
rcl
xchg
xor
push
add
test
cmp
xor
or
fild
movs
mov
inc
movs
fadd
push
pop
or
fdiv
or
push
push
xor
movs
fdivr
pop
bound
add
inc
sub
cmp
xchg
dec
iret
sbb
inc
sbb
or
retf
dec
sbb
std
mov
imul
enter
popa
add
push
out
sub
sbb
loop
out
out
jmp
add
add
dec
ins
xor
shr
push
cmc
xchg
jbe
outs
ja
pop
(bad)
loop
add
push
sbb
out
push
or
punpcklwd
push
push
and
inc
loopne
lfs
push
xor
mul
or
add
mov
cmp
stc
je
cli
jge
cmp
pushw
fist
push
mov
push
push
loope
xchg
adc
mov
xor
sub
and
gs
ins
and
or
cmp
mov
jge
scas
ins
and
neg
adc
movd
ds
repnz
ins
sbb
frstor
sub
jl
push
jbe
add
cmp
das
push
icebp
movs
or
cmp
fistp
or
dec
sbb
inc
sub
fcomp
mov
mov
rcr
hlt
add
sbb
mov
add
sub
push
xor
shr
rol
push
dec
rcl
test
ins
test
rol
mov
repnz
sbb
and
push
or
dec
inc
ss
push
add
sbb
rol
mov
call
mov
in
or
fs
push
inc
push
repnz
call
inc
jl
pop
out
xlat
jbe
jo
jmp
adc
cld
ja
movs
mov
add
mov
dec
inc
xor
xchg
mov
adc
mov
mov
xchg
fsubr
jb
fiadd
(bad)
js
dec
jnp
movs
test
test
cmp
mov
jp
jl
add
and
sbb
push
sub
xor
je
fsub
pop
push
mov
movs
xor
into
aad
inc
add
push
fadd
sub
push
mov
or
daa
pop
aam
inc
push
jp
cmp
mov
div
mov
pop
mov
pop
mov
cmps
xor
ss
pop
xchg
movs
sti
or
ret
push
outs
cmps
push
xor
jp
xor
add
xor
and
and
inc
inc
push
or
and
adc
stos
xchg
movzx
sub
pop
mov
and
js
dec
inc
loopne
cmp
call
pushf
sub
and
ja
call
or
inc
inc
imul
dec
add
std
clc
push
add
inc
adc
es
shr
or
and
jge
neg
xchg
and
adc
pop
mov
pop
inc
hlt
imul
add
dec
xchg
mov
and
add
or
outs
dec
sbb
or
sbb
pop
adc
in
cmps
push
pop
lea
js
push
imul
push
mov
push
sbb
pusha
mov
jo
xchg
sbb
mov
adc
fisttp
add
and
push
push
or
cmps
cs
push
add
iret
push
adc
sbb
mov
and
push
cmc
enter
or
mov
mov
sbb
cli
mov
lods
cmp
push
out
les
sbb
fiadd
(bad)
cmps
in
inc
cmp
movntps
aad
lods
push
ins
xchg
mov
or
xor
mov
push
pop
popf
xchg
and
nop
mov
pop
mov
mov
mov
push
rcr
les
arpl
scas
retf
cmps
or
cmp
jne
push
pcmpeqb
mov
fsubr
adc
mov
adc
jmp
or
mov
xchg
or
or
inc
or
bound
pop
bound
adc
repnz
pop
add
push
push
mov
adc
or
add
push
sbb
pop
shl
adc
jae
sub
mov
rcl
je
ins
xchg
les
loop
call
wbinvd
cmp
jg
sub
fsubr
sbb
in
jle
push
cmp
jb
inc
mov
jae
mov
xor
(bad)
es
shl
sub
(bad)
sub
mov
mov
adc
fstp
and
push
inc
es
mov
or
outs
sbb
mov
lods
icebp
add
out
mov
jb
add
pop
pop
mov
mov
jmp
jnp
mov
push
pop
add
xor
sub
mov
or
leave
mov
scas
or
lock
sub
jno
loop
in
dec
or
fs
rcr
ret
sti
fcomp
shl
inc
dec
sar
movs
out
rol
and
in
nop
sbb
and
(bad)
loopne
inc
imul
push
enter
and
inc
test
cdq
inc
es
es
xor
dec
mov
cmp
mov
sub
adc
je
cmp
push
pop
cmp
pop
jge
xchg
gs
adc
and
loop
or
xchg
inc
jl
cmp
ror
dec
stos
cdq
lods
xchg
inc
dec
xor
es
push
or
sbb
inc
sub
cmp
jnp
jmp
jne
(bad)
shl
or
imul
(bad)
sub
dec
fwait
jo
adc
mov
jp
ret
test
pop
sbb
ficom
xor
push
add
inc
xchg
or
mov
out
fild
sbb
jmp
adc
imul
popf
pusha
jae
std
sub
jle
pop
jl
push
mov
cwde
bound
ins
push
jbe
ret
scas
mov
int
adc
clc
or
cmp
ja
xchg
mov
addr16
jne
stos
sbb
sbb
pop
adc
ror
lods
inc
sub
or
fdivr
sub
jae
dec
sbb
mov
or
lods
mov
mov
push
sti
sub
rcl
xor
adc
pop
pop
pop
add
xor
and
and
inc
jb
and
outs
add
xor
or
icebp
enter
addr16
jp
out
add
jbe
dec
adc
pop
inc
(bad)
cmc
push
or
inc
outs
mov
pop
inc
out
and
xor
cmc
loopne
add
out
adc
mov
xor
sub
sets
fidiv
sbb
add
sub
fld
push
inc
add
je
add
imul
arpl
retf
xchg
pop
ret
add
test
mov
call
stos
fist
pop
or
xchg
xor
add
jno
xor
icebp
test
sub
jmp
mov
dec
repz
nop
mov
jmp
push
or
sub
jo
test
pop
in
jg
ss
mov
clc
add
movs
jecxz
dec
inc
ins
add
pushf
daa
adc
cdq
or
or
add
jecxz
lock
xor
mov
xor
xor
adc
fidivr
jb
cmp
je
mov
inc
je
dec
je
pop
je
addr16
jmp
je
cmp
packuswb
das
lock
fcom
in
mov
cmp
sub
adc
into
mov
mov
and
inc
push
shr
rcr
dec
out
or
loop
and
test
jp
push
sub
dec
hlt
jnp
and
cmp
jmp
push
arpl
sbb
fwait
shl
push
or
fwait
mov
mov
rcr
mov
sub
in
inc
inc
dec
inc
inc
sahf
ja
inc
or
or
sbb
dec
dec
data16
push
or
(bad)
rcl
leave
call
popf
inc
pop
pop
mov
add
sbb
vmovd
or
mov
or
pop
or
adc
das
sar
cmp
jae
mov
push
ret
outs
dec
sub
clc
adc
retf
sbb
jmp
lods
lsl
push
mov
fbstp
push
or
push
mov
dec
or
mov
jecxz
cwde
sub
ror
add
gs
xchg
add
mov
xor
retf
xchg
nop
add
retf
jl
ins
sub
cmps
in
pop
or
pop
add
push
js
pusha
es
rcr
push
cli
rcl
sub
dec
arpl
js
cwde
mov
xchg
fisubr
pop
sub
jmp
movs
xor
mov
jbe
sbb
out
sub
and
dec
or
neg
imul
cmp
outs
add
(bad)
mov
sbb
inc
sbb
ins
in
or
cwde
xchg
jb
shr
je
fdiv
cmp
enter
jo
add
pop
cmp
jns
add
mov
call
sbb
push
cmp
test
pop
pusha
jl
outs
stos
inc
cmp
sbb
cmp
jne
sysenter
daa
daa
daa
daa
sub
sbb
add
lods
sar
sub
push
mov
mov
dec
mov
sti
jge
bound
sti
pop
sub
fadd
xor
pop
add
shl
fidiv
pop
mov
dec
or
or
es
das
sub
outs
cmp
je
iret
mov
adc
aam
sbb
(bad)
aaa
repnz
mov
pop
adc
push
retf
ret
(bad)
dec
adc
std
ror
adc
inc
out
je
outs
test
inc
rol
retf
mov
sub
mov
stc
add
jns
or
dec
dec
jae
hlt
pop
shr
pop
jae
add
mov
jnp
add
test
inc
adc
or
sub
ins
sub
dec
std
add
cmp
ja
push
sub
aam
pop
out
mov
sub
ficomp
sub
ss
sbb
ret
outs
movs
outs
test
or
ja
mov
or
fdivr
leave
int3
je
jne
stos
dec
inc
add
mov
cmp
fadd
fs
test
or
lods
add
(bad)
or
add
and
mov
push
outs
adc
out
ss
cli
sub
and
adc
add
cmps
push
loopne
jg
add
sbb
push
or
stos
mov
pop
test
mov
stos
test
test
inc
enter
cmp
or
push
add
call
cmp
ja
sub
cs
push
dec
sbb
gs
pop
inc
jg
push
and
pop
aam
das
mov
add
jns
mov
adc
out
(bad)
fidivr
retf
sahf
stos
nop
inc
sbb
test
jb
add
or
mov
xor
mov
add
xchg
pushf
xchg
js
add
ja
fcom
jns
push
movs
aam
sub
pop
cmp
jo
aaa
mov
ret
fwait
xchg
and
repnz
lods
mov
(bad)
push
or
bound
test
add
jno
push
xor
add
sbb
(bad)
jne
push
push
push
inc
xor
or
pop
loopne
sub
jbe
sub
cmp
mov
sub
fbld
pushf
out
or
aaa
xchg
pusha
jmp
mov
ret
(bad)
sti
add
mov
repz
inc
in
cmp
pusha
test
data16
loopne
test
(bad)
mov
pusha
rcr
popf
std
or
jmp
or
adc
mov
retf
xchg
pop
pop
cmp
test
lea
rol
sub
or
sti
aas
rol
sar
mov
rcr
mov
mov
cmp
sub
and
mov
sub
std
lock
jmp
jae
jmp
shl
xchg
add
ror
add
xchg
cmp
dec
in
repnz
cmp
and
mov
lds
loop
xor
popf
ror
pusha
pop
sbb
xchg
pop
pop
mov
call
cmp
inc
outs
dec
and
outs
dec
push
xchg
cmp
add
fst
and
or
dec
cmp
sbb
sbb
ss
movs
bound
pusha
push
enter
xchg
jmp
or
in
add
lods
or
add
xor
sbb
xor
push
gs
ret
jl
test
jae
not
ror
add
push
xchg
push
push
daa
mov
int
cmp
push
js
cmps
push
adc
cmp
test
dec
rcl
es
xor
loopne
aam
jle
shl
imul
ins
cmp
bound
and
cmp
dec
jecxz
enter
jae
cmp
jge
retf
int
jne
pop
xor
jo
cmp
retf
into
mov
pop
nop
xchg
xchg
cwde
es
test
push
jmp
and
xor
and
mov
push
in
cld
sub
dec
cld
push
inc
adc
push
ins
loope
jo
or
push
adc
mov
ret
mov
or
mov
or
out
(bad)
jnp
daa
add
jmp
or
data16
inc
cld
push
ficomp
stc
sub
add
cmp
xchg
neg
dec
rcr
dec
cmps
mov
sbb
push
xor
mov
xor
and
sub
iret
enter
dec
xor
out
enter
xor
push
xor
loop
push
cmp
sbb
(bad)
call
mov
and
adc
add
sub
fisttp
jmp
and
pop
sar
into
shr
je
sbb
std
jecxz
lods
or
inc
mov
push
cli
(bad)
test
pop
cmp
cs
int3
mov
adc
jbe
fist
push
(bad)
jl
(bad)
xor
and
ret
xor
iret
pop
push
sub
dec
xchg
xor
and
test
sub
push
xchg
and
adc
loope
push
mov
push
push
cmp
jae
clc
adc
sbb
sbb
dec
mov
cmc
lock
test
mov
hlt
(bad)
jmp
into
add
cmp
jbe
sub
inc
inc
mov
mov
dec
jne
outs
adc
shr
xlat
jmp
mov
jbe
inc
add
and
and
sbb
sub
cmp
cmp
enter
mov
call
and
pop
jl
nop
pusha
push
xor
push
mov
push
jbe
push
mov
call
mov
add
fisubr
adc
hlt
inc
pop
repnz
data16
clc
cs
mov
mov
jmp
lea
es
test
jmp
pop
and
mov
sub
inc
pop
inc
pop
pushf
push
enter
adc
mov
pop
movs
or
adc
xor
sub
fst
rol
aam
ds
mov
out
or
hlt
cmp
cli
pushf
push
mov
mov
dec
dec
nop
jge
pop
or
push
or
ret
retf
pop
jmp
mov
cwde
add
enter
out
fs
loop
ret
add
or
or
and
adc
in
mov
mov
xchg
clc
jb
adc
and
addr16
inc
call
add
sbb
adc
xchg
xor
xor
add
or
adc
and
inc
and
dec
sub
mov
adc
jbe
xor
push
ins
add
dec
dec
mov
ror
jg
xor
push
aam
add
cmp
xor
mov
push
out
and
cmp
jecxz
pop
cmp
push
cmp
pop
adc
das
rcl
sahf
cmp
xor
aaa
cld
iret
test
add
rcr
cli
movs
repnz
into
aaa
inc
dec
sub
mov
sub
and
dec
popa
sub
gs
test
add
push
and
push
jmp
cmc
loope
add
add
cmp
ins
jge
xchg
adc
or
movd
sub
nop
imul
jb
mov
jb
fisubr
retf
test
push
sub
jmp
dec
or
cwde
fnstenv
loop
aam
sbb
and
ins
fdivr
dec
push
or
ja
pusha
xor
frstor
and
sub
xchg
mov
xor
inc
add
data16
cmp
adc
inc
sub
adc
adc
imul
jno
mov
push
sbb
xor
xor
xchg
push
or
dec
inc
adc
ins
push
sahf
pop
sub
fsub
(bad)
push
arpl
push
xor
xor
cmps
lock
jns
or
fidivr
cmp
mov
jnp
xor
mov
lods
ins
int
cmp
add
sub
jg
cmp
popa
pop
int3
pop
add
ret
test
adc
pop
or
fisttp
adc
(bad)
xor
shr
loope
add
iret
or
cmp
pop
adc
inc
mov
push
sub
inc
inc
jbe
pop
stos
out
dec
je
mov
out
data16
es
jl
sub
jne
add
jle
les
imul
push
inc
add
clts
lahf
adc
xor
dec
repz
adc
xchg
adc
adc
cmp
cmps
stc
pop
adc
aad
int
stc
inc
pop
mov
icebp
int
sar
fcmovu
push
dec
pop
dec
shr
and
and
xchg
inc
pavgb
test
mov
rcr
push
push
fs
push
adc
mov
shl
add
xor
loope
push
adc
pop
sub
mov
or
mov
mov
add
xor
sub
push
cwde
mov
test
inc
call
daa
ficom
mov
call
loope
(bad)
push
xchg
and
je
shr
mov
add
call
ins
push
add
add
xchg
jae
sub
inc
shr
inc
add
dec
push
loope
or
sub
retf
xchg
mov
outs
mov
test
add
test
inc
(bad)
js
or
sub
or
and
les
int
adc
dec
pusha
push
jns
in
enter
ds
xor
inc
sbb
rol
jge
xchg
jge
push
sbb
mov
pop
xor
mov
and
loop
dec
inc
xor
adc
and
and
std
sbb
mov
xchg
(bad)
in
inc
jmp
cmp
push
xor
xor
xor
sub
jo
jl
test
loope
xchg
les
push
or
shr
inc
push
add
add
jb
add
test
mov
ds
sbb
inc
inc
add
shl
sub
outs
hlt
push
cdq
pop
inc
cmp
push
mov
or
dec
frstor
xor
sub
mov
and
inc
outs
mov
or
(bad)
jne
cmp
push
jle
data16
pop
adc
inc
push
in
add
adc
lock
fadd
ins
sub
inc
out
jo
add
xor
push
inc
mov
mov
pop
xor
outs
mov
rcl
pop
ficomp
pop
call
push
push
aam
dec
push
xor
jnp
jl
jo
jmp
cmp
or
mov
add
sbb
and
cmp
inc
sbb
pop
adc
pop
scas
xchg
or
adc
and
or
pause
inc
cmp
or
je
int
mov
push
loop
push
mov
sbb
nop
pop
adc
int3
xchg
lods
call
sbb
clc
or
xchg
jo
cs
mov
mov
or
adc
fist
mov
cmps
and
adc
pop
retf
sub
ds
ret
xchg
shl
add
es
cdq
scas
(bad)
int3
push
xor
or
sbb
in
xor
cli
cmp
adc
sar
loopne
cmp
add
cmp
push
mov
jno
or
test
mov
mov
lea
loopne
sbb
xchg
and
(bad)
call
add
lock
add
pop
pusha
add
dec
or
popa
pop
cmp
jl
add
inc
js
and
dec
je
and
and
das
cmps
or
imul
adc
adc
add
repz
xor
(bad)
and
mov
cmp
mov
dec
sti
mov
repnz
fiadd
cmp
add
inc
scas
mov
sbb
or
cmp
das
jae
pop
mov
dec
ins
add
jecxz
cmp
push
mov
retf
add
loopne
push
mov
rol
arpl
or
add
dec
fs
or
and
std
sub
cmp
push
and
pop
push
cmp
adc
dec
cld
mov
data16
push
push
xor
dec
inc
mov
ins
and
icebp
add
jge
push
add
push
jmp
push
dec
adc
fucomip
and
inc
push
jo
push
add
adc
inc
add
mov
inc
push
lea
xor
push
scas
mov
adc
inc
jo
push
je
sar
sub
xchg
jnp
cwde
jmp
cld
xchg
push
das
pushf
adc
mov
add
pop
or
jae
mov
pop
or
shl
add
jmp
sbb
cmp
xlat
lea
pop
outs
mov
inc
add
enter
repnz
pop
jb
lock
and
add
out
icebp
cmp
bnd
stos
enter
cmp
sete
mov
inc
and
shl
adc
jmp
mov
mov
nop
and
js
or
stos
adc
arpl
or
shl
mov
xor
nop
dec
lock
push
mov
rcr
jae
lods
jg
add
lods
sub
inc
fs
enter
retf
lock
nop
xchg
jmp
stos
dec
loope
push
cmp
cmp
dec
sbb
jecxz
jl
cmp
out
add
ja
sbb
repz
pop
adc
dec
add
xor
fdiv
sbb
xchg
std
push
jge
jecxz
or
push
(bad)
jle
inc
hlt
bound
adc
mov
pop
mov
adc
sub
mov
fs
jo
or
cmp
inc
ins
xor
retf
or
or
pop
gs
inc
sub
xor
js
push
push
adc
push
mul
cs
jl
mov
sub
pusha
jp
je
movs
out
test
and
sbb
sub
(bad)
out
je
mul
jne
retf
icebp
inc
movs
inc
and
and
lods
enter
adc
pop
clc
es
ins
add
cmps
xor
int
(bad)
ret
cmps
push
out
nop
add
xchg
pop
stos
(bad)
in
js
and
shl
mov
sub
shl
cmp
leave
xchg
pop
dec
and
pop
inc
xor
inc
daa
loopne
or
and
nop
aam
int
sub
jg
push
repnz
adc
lods
or
adc
int
dec
dec
dec
icebp
adc
adc
into
sti
je
or
adc
pop
enter
push
movs
add
push
push
adc
aaa
add
gs
stc
and
adc
and
add
add
jmp
dec
das
push
int3
mov
fst
or
add
(bad)
jb
cmp
es
sub
or
out
dec
add
xor
adc
inc
sbb
jbe
into
sub
xor
jmp
adc
dec
sub
xor
fmulp
inc
fsubr
sub
mov
test
dec
push
and
cs
sub
xor
adc
sahf
inc
mov
mov
test
in
pop
jae
mov
mov
imul
js
cli
ret
in
mov
add
or
pop
imul
mov
and
or
clc
xor
cmp
repnz
or
ss
adc
sbb
dec
out
adc
jmp
or
xchg
pushf
xchg
and
jo
sbb
(bad)
cld
inc
loope
cmps
shl
add
sbb
sub
int3
call
or
and
in
sti
sbb
mov
es
in
(bad)
lea
mov
movs
shl
push
sbb
pop
mov
pop
and
add
mov
mov
cmps
jne
jle
and
adc
add
adc
std
add
mov
fcmovu
xchg
add
adc
aaa
cs
mov
add
add
push
ror
dec
icebp
popa
inc
sbb
inc
mov
popa
dec
ins
adc
mov
push
lahf
lea
out
xor
stos
pop
ret
cmps
or
add
jmp
dec
cmp
pop
mov
inc
or
pop
inc
mov
or
or
inc
psraw
xor
je
adc
ret
retf
int
push
(bad)
(bad)
xor
shl
dec
out
pop
mov
sub
inc
mov
jg
(bad)
mov
cmp
adc
mov
add
shl
jne
cdq
js
sbb
loope
and
dec
int
mov
sub
je
out
cmp
push
add
sub
scas
xor
pop
xor
adc
push
and
sub
lds
inc
arpl
je
pop
inc
sbb
inc
or
sbb
jbe
mov
iret
sbb
jmp
push
dec
xchg
jp
jo
jmp
mov
rol
cmp
in
jmp
mov
sti
mov
inc
inc
cmp
jbe
pop
add
or
jb
mov
bnd
inc
push
scas
pop
jle
lea
in
daa
ret
cmp
jae
sti
mov
sbb
popa
cmp
mov
arpl
or
xchg
or
aam
movaps
sub
lahf
xor
imul
imul
lea
jecxz
mov
retf
cmps
mov
lea
dec
or
sbb
xchg
mov
inc
push
push
test
nop
cmp
dec
sti
sti
dec
mov
mov
xchg
into
mov
add
or
shl
push
adc
cmp
ret
push
outs
add
das
or
ret
add
ins
clc
idiv
xor
add
inc
mov
call
(bad)
fisub
mov
pop
ficom
mov
sbb
push
push
call
leave
push
ror
ja
mul
inc
lea
sub
xchg
sbb
or
outs
aam
xlat
add
and
outs
enter
dec
out
loope
add
mov
add
xor
out
jae
aas
mov
cmp
outs
xor
sbb
push
inc
movs
xor
jl
clc
push
mov
es
loop
inc
inc
mov
mov
sbb
pcmpeqd
fnstcw
aam
jmp
retf
sbb
inc
inc
push
ja
pusha
in
test
jle
mov
fbld
pcmpgtw
aam
movs
and
add
fisttp
fidiv
mov
cmp
jbe
fcomi
in
mov
inc
rol
rol
rol
cmp
or
or
sub
or
mov
sbb
scas
(bad)
jle
cmp
mov
jmp
adc
stc
xor
(bad)
jae
or
jb
retf
fwait
dec
sahf
add
ret
adc
sub
mov
movs
adc
jbe
iret
loope
jle
xchg
xor
retf
je
inc
mov
pop
sub
arpl
mov
push
pop
fdiv
adc
xchg
sahf
sbb
sbb
jecxz
sbb
test
ret
fnstenv
adc
les
push
adc
inc
stc
sbb
cmp
adc
push
push
fadd
jge
iret
cli
imul
xor
adc
aaa
or
xor
ficom
add
add
inc
jmp
adc
and
pop
mov
ins
enter
les
les
add
out
cmp
int
shr
fadd
mov
mov
adc
clc
movs
mov
call
ins
adc
push
loopne
sub
sub
jge
inc
cmp
inc
adc
ds
adc
fdivr
mov
sub
mov
and
or
push
push
sar
stos
dec
je
in
outs
pop
and
les
rcl
enter
jnp
xor
dec
pusha
pop
dec
hlt
pop
push
add
push
(bad)
fstp
mov
sub
in
(bad)
jmp
gs
sub
fs
cmp
cld
outs
scas
cmps
mov
jmp
shr
test
jne
lar
push
mov
and
add
push
outs
push
dec
push
mov
out
push
pushf
mov
or
and
lock
sbb
lods
jo
or
test
mov
mov
and
and
push
fcom
sbb
int3
xchg
in
call
dec
jo
add
hlt
sub
aas
inc
(bad)
xor
sub
mov
inc
(bad)
outs
nop
je
enter
call
adc
push
loopne
loope
mov
jle
inc
mov
fmul
movs
jmp
vsubps
adc
fmul
call
les
enter
push
scas
cmp
jo
sbb
lea
cmps
pop
push
push
xor
sbb
inc
aaa
cmp
push
(bad)
inc
mov
dec
or
mov
dec
and
lock
and
mov
loopne
pop
mov
or
jle
xor
push
les
push
lea
xchg
aas
sbb
in
mov
and
lods
cmp
in
and
mov
push
cmp
idiv
data16
xor
mov
push
mov
mov
test
mov
mov
addr16
mov
add
cli
xchg
fucom
xchg
fnstsw
mov
cmp
inc
fwait
cmp
xchg
fidivr
jg
enter
loop
push
mov
punpckhwd
mov
inc
sbb
pop
bound
xor
pop
stc
pop
or
mov
pop
adc
or
fistp
sbb
cmp
push
mov
mov
jae
sbb
xor
or
jb
das
jne
mov
mov
ja
inc
cmp
sbb
inc
mov
sar
push
push
pop
fwait
sar
(bad)
sbb
and
inc
loope
push
out
mov
mov
jg
inc
xor
cmp
mov
adc
pusha
xchg
dec
sbb
cmp
xchg
out
add
dec
add
or
jg
ror
xchg
daa
ds
xor
repnz
repz
push
adc
xchg
xchg
rcl
xchg
sub
inc
sub
fcom
xor
push
jge
sahf
pop
push
sahf
add
outs
lods
jge
test
xchg
and
sub
add
sub
dec
mov
xor
mov
and
aam
sub
pop
mov
pop
pop
jl
add
push
sahf
data16
mov
and
imul
or
cmovbe
mov
js
push
lock
aas
mov
addr16
xchg
sbb
ror
adc
scas
das
lock
jl
test
pop
test
push
cmp
(bad)
jle
add
push
(bad)
data16
pop
es
adc
cld
fcmove
mov
sub
jg
mov
push
adc
mov
mov
loope
nop
into
out
je
and
call
adc
test
adc
lods
lock
jo
aam
jg
repz
shl
mov
cli
xchg
adc
movs
mov
out
mov
jbe
mov
push
dec
push
and
jecxz
push
xor
in
pop
xlat
jo
add
fsub
mov
or
mov
cmp
inc
(bad)
test
stc
shl
out
lea
or
mov
xchg
or
es
jp
xchg
out
mov
push
(bad)
mov
jbe
ja
loopne
push
mov
loope
inc
ror
in
fwait
dec
add
or
ret
mov
mov
push
ret
(bad)
(bad)
scas
adc
push
sar
fmul
dec
mov
mov
sub
sub
sub
inc
inc
sub
jl
jmp
lods
jge
mov
pop
push
inc
jnp
mov
jg
xchg
jg
outs
mov
push
mov
fnstcw
je
add
push
cmp
xor
mov
daa
sbb
adc
mov
les
mov
dec
or
repz
adc
xor
pop
(bad)
jl
push
mov
loop
xor
and
movs
push
loopne
push
push
mov
mov
mov
test
mov
add
mov
xchg
xor
mov
ror
push
xlat
loope
test
inc
mul
ds
add
xlat
mov
inc
cmp
or
push
or
pop
mov
pop
sbb
lea
adc
xchg
push
mov
(bad)
adc
push
(bad)
xchg
push
or
adc
mov
das
and
fild
push
adc
call
inc
push
es
scas
addr16
cs
xchg
sbb
into
jle
fidiv
jle
pop
(bad)
jmp
jmp
cmp
jle
fisub
mov
dec
jmp
stos
lahf
inc
adc
sbb
push
je
out
test
mov
jg
mov
add
test
dec
jb
jb
or
sbb
push
push
sahf
dec
shl
lea
cmps
jo
scas
add
add
mov
ss
fisttp
xchg
xchg
jge
sub
sahf
mov
leave
add
bnd
mov
outs
lods
leave
sbb
je
inc
ins
ss
jle
outs
adc
push
cmp
jb
sub
icebp
test
jle
sub
fsub
sub
cmp
push
js
xor
ins
imul
or
outs
in
or
pop
mov
cs
xor
or
iret
icebp
int
aad
mov
sar
enter
add
sub
push
(bad)
push
jmp
push
pop
cmps
cmp
popf
ret
adc
sub
and
xchg
les
test
adc
adc
push
lock
mov
test
sbb
mov
inc
sbb
jno
jno
add
and
sti
jge
add
pop
mov
dec
jg
movs
loopne
sar
dec
cwde
and
dec
call
cwde
ret
add
aas
cmp
dec
arpl
(bad)
sub
inc
enter
sbb
xchg
or
shl
cdq
inc
add
les
dec
or
or
les
je
das
and
jmp
mov
and
fcomi
dec
inc
inc
inc
mov
fs
mov
mov
jmp
pop
call
and
xlat
jmp
sbb
sub
pop
dec
repnz
add
mov
jl
inc
cmp
dec
out
lea
jno
dec
ficom
add
and
aaa
xor
mov
jge
(bad)
jge
mov
add
ror
jo
(bad)
out
das
cmps
push
push
(bad)
clc
push
push
pop
mov
push
sbb
ror
pop
xor
mov
sar
in
pop
cmp
xchg
call
or
data16
add
pop
call
or
clc
dec
inc
clc
scas
in
inc
push
rcr
xchg
adc
and
or
xor
mov
loopne
cmp
mov
adc
into
cmp
mov
enter
fisub
call
push
sub
ins
xchg
pop
rdtsc
adc
cpuid
sar
cmp
mov
and
fisttp
mov
sbb
inc
inc
inc
jge
inc
sar
dec
ds
cmps
dec
arpl
and
mov
data16
inc
mov
clc
jne
mov
rol
mov
sbb
cmps
jle
clc
imul
sbb
or
jae
or
adc
(bad)
push
nop
int
cwde
sub
scas
retf
cwde
push
mov
add
das
push
lds
cmp
jb
add
add
push
jge
cli
push
mov
xlat
sbb
pop
inc
iret
fwait
dec
std
ret
test
push
inc
jae
shl
sub
push
inc
adc
cmp
mov
push
mov
aaa
mov
mov
ror
xchg
sub
aam
dec
fimul
bndldx
xlat
sar
mov
leave
xor
mov
xchg
dec
xchg
aam
jecxz
add
adc
leave
pop
mov
mov
pop
xchg
push
xor
xor
inc
or
or
adc
(bad)
stc
jle
test
jbe
jb
push
mov
adc
mov
sbb
xchg
movs
(bad)
fstp
and
sub
or
test
and
or
fld
rcl
rol
sti
jmp
lea
or
dec
add
shl
pop
clc
inc
adc
aas
dec
sbb
bound
add
xchg
mov
push
dec
jo
(bad)
cmp
lea
repz
dec
sub
mov
jl
jo
leave
mov
into
and
lea
mov
sbb
test
lds
mov
mov
sub
jne
add
mov
das
imul
in
or
mov
cwde
movs
hlt
xchg
adc
adc
xor
sbb
push
add
mov
inc
scas
test
pop
pusha
sbb
dec
movzx
loope
jae
push
xchg
push
mov
xchg
pop
adc
ror
dec
nop
nop
nop
mov
sbb
lea
stos
add
mov
cmp
ret
outs
cmp
and
xor
sbb
cmps
and
test
ror
out
pop
fmulp
retf
jp
mov
and
out
in
not
(bad)
cmc
and
mov
jge
test
dec
cmp
clc
dec
xchg
add
fnstsw
iret
xchg
fistp
jmp
or
and
add
test
jmp
and
stc
pop
add
or
mov
push
add
je
popf
mov
jno
(bad)
sbb
mov
bound
mov
dec
cmp
loopne
jne
jmp
mov
mov
jle
inc
cmc
xor
outs
sbb
sub
cld
popf
cmp
cld
cdq
dec
dec
dec
pop
xor
sub
pop
mov
iret
iret
sub
xor
js
mov
fwait
inc
jb
sahf
mov
neg
sub
adc
xchg
pop
test
sub
(bad)
mov
pop
and
sahf
dec
mov
imul
add
push
push
mov
jl
shr
jl
jne
add
or
sub
and
jne
mov
or
sub
rcl
shr
or
inc
jg
cdq
sbb
xor
xchg
jg
xchg
mov
fwait
pop
cmc
jecxz
adc
dec
cmp
jo
sub
sti
or
add
push
xchg
lea
push
jecxz
jl
adc
shr
test
push
out
jle
inc
sahf
mov
add
or
or
mov
jne
rol
jo
mov
(bad)
xor
jmp
stos
add
and
push
pop
pop
iret
not
push
fsubr
add
rdtsc
adc
test
xor
sbb
mov
les
imul
sbb
aam
or
aam
rcr
sti
dec
mov
in
xchg
add
lds
cmp
rol
les
les
enter
movs
test
add
add
test
pop
es
sti
fidivr
push
adc
xor
nop
ret
inc
das
nop
nop
nop
push
sahf
mov
lock
test
or
or
push
div
mov
or
fist
adc
mov
push
inc
repz
mov
jle
fidivr
sbb
lock
push
push
inc
mov
xor
inc
mov
mov
push
rcr
sub
add
xor
xchg
dec
in
lea
dec
inc
inc
xor
enter
(bad)
and
not
jmp
mov
push
jp
add
xor
and
scas
push
faddp
adc
shr
pop
and
xchg
mov
add
mov
jo
xor
adc
call
aam
and
enter
std
push
in
xchg
and
shl
jae
arpl
sub
out
sbb
std
mul
adc
shl
or
add
jo
lahf
stc
sbb
mov
mov
ret
call
fisttp
and
or
fidiv
sbb
add
mov
or
sbb
push
daa
dec
es
adc
cwde
dec
mov
xchg
lods
shl
xchg
adc
loope
mov
or
rcr
mov
leave
scas
rcl
or
shr
dec
inc
cwde
pusha
fsubr
in
cmp
cld
push
mov
xor
xchg
adc
or
adc
inc
mov
sbb
adc
cmp
push
add
fisubr
mov
sbb
dec
jle
aam
popa
call
cmp
cmp
rcl
out
maskmovq
test
jl
lea
std
retf
fcmove
mov
pop
aas
sbb
movs
sti
je
and
sub
jne
sub
adc
pop
jne
xor
rcl
pop
add
sbb
outs
or
pop
inc
add
add
adc
inc
jno
call
xor
jbe
or
mov
mov
ins
addr16
pop
jb
out
adc
mov
dec
cmps
lods
xor
mov
inc
or
inc
inc
outs
mov
imul
jmp
je
and
inc
(bad)
gs
test
mov
cmps
inc
mov
je
push
ins
mov
push
inc
jmp
cmp
add
or
out
dec
push
push
ins
add
inc
jae
out
test
fwait
or
(bad)
push
push
stos
mov
fidiv
jns
jo
jno
xchg
aam
push
push
jnp
sub
cmps
cmps
dec
arpl
xor
sub
mov
cmp
jns
add
push
sbb
push
jp
out
add
es
adc
inc
bndstx
dec
mov
(bad)
ja
mov
out
scas
dec
outs
out
add
adc
xor
cmp
outs
out
adc
rcl
repz
popw
das
stos
fs
jg
or
and
mov
stos
push
lods
bound
aas
iret
(bad)
mov
add
mov
cmp
pop
xchg
out
xchg
jbe
or
movs
inc
and
xchg
dec
das
xor
push
or
stos
es
sbb
lahf
push
sti
push
sbb
pop
inc
mov
sbb
jle
(bad)
clc
cmc
scas
push
ds
xlat
outs
pop
pop
cmps
fidivr
inc
retf
jae
cmps
inc
mov
pop
add
lea
pop
adc
outs
ret
mov
outs
push
push
xlat
fiadd
imul
pop
mov
add
inc
mov
mov
div
xchg
sbb
das
adc
adc
ja
sbb
aaa
mov
popa
daa
push
xchg
jne
sub
cmps
mov
nop
inc
and
cmps
test
push
lahf
gs
in
clc
push
dec
imul
push
push
imul
xor
(bad)
mov
aaa
add
lahf
sub
push
xchg
jo
out
outs
xor
cmp
mov
gs
push
adc
jl
pop
jnp
mov
ins
and
retf
push
test
imul
inc
jle
dec
out
lahf
(bad)
adc
or
pop
push
lahf
fsub
aas
push
lods
adc
imul
movlps
daa
adc
inc
pop
aaa
push
shl
adc
jne
bound
addr16
push
push
or
pop
jp
mov
xchg
inc
or
jo
lods
sbb
fcomp
pusha
test
adc
dec
test
arpl
mov
mov
outs
mov
inc
ja
pop
push
mov
sbb
push
fwait
pop
outs
adc
stos
add
inc
inc
pop
fiadd
cmps
dec
cmp
cwde
or
outs
xor
push
xor
add
inc
mov
ret
pop
repz
and
and
cmps
jmp
dec
push
test
mov
icebp
pop
in
push
adc
outs
or
scas
aad
out
mov
cmp
inc
inc
sbb
inc
sbb
push
mov
sbb
xor
jae
adc
mov
cmp
addr16
bound
lods
push
retf
push
cmp
push
jb
mov
outs
lea
(bad)
loop
pop
xchg
lods
mov
pop
dec
stos
ins
sub
or
cmps
xor
push
add
and
aaa
adc
push
ret
mov
aas
pop
mov
fild
or
ficom
out
stos
and
rcl
div
fbld
xchg
ins
pop
push
inc
pop
(bad)
js
ret
push
mov
lods
jmp
mov
adc
lock
xchg
je
fwait
loope
push
(bad)
not
ficom
push
lahf
xlat
imul
and
rol
push
retf
jns
aad
lea
sub
push
in
push
mov
out
bound
or
imul
sub
les
mov
jns
inc
test
pop
jg
pop
adc
addr16
mov
ret
jae
inc
stos
or
stos
hlt
lods
push
jg
push
jns
or
cdq
imul
dec
nop
in
and
push
nop
xor
mov
sbb
mov
jmp
js
cmp
cwde
xchg
nop
loopne
mov
ss
jecxz
mov
dec
popa
jns
jne
js
ins
mov
outs
jo
je
pop
outs
sub
inc
cld
mov
or
fs
sti
jae
and
adc
loop
fmul
out
outs
or
fcomip
popf
and
gs
and
push
ret
mov
cmps
mov
sbb
sbb
sub
or
sbb
ja
jle
mov
and
fimul
fbld
and
inc
fcomp
inc
mov
ins
in
js
inc
add
inc
sub
add
mov
loopne
out
fild
mov
pushw
jl
call
sti
jnp
repz
add
icebp
sub
push
push
loop
mov
push
and
push
mov
fucom
imul
sub
or
(bad)
jg
mov
push
int3
push
and
data16
test
add
mov
repz
push
(bad)
es
clc
inc
mov
add
mov
lea
pop
sub
sbb
mov
les
pop
pop
add
xor
inc
mov
pop
push
push
push
sbb
or
pop
cmp
sub
dec
cdq
dec
cs
jo
js
hlt
inc
loope
adc
jl
and
lods
add
pop
mov
inc
jl
add
or
je
out
xchg
icebp
adc
inc
add
xor
lock
aad
xchg
lods
jae
lods
mov
cmps
sub
adc
out
mov
or
mov
ror
rol
test
into
movs
jmp
fadd
mov
inc
adc
inc
popa
jo
ins
retf
out
scas
mov
test
popf
fcom
and
xchg
or
sbb
jo
test
inc
loopne
mov
push
add
popa
jb
imul
pop
dec
hlt
cmp
push
mov
or
fcom
xchg
mov
dec
mov
or
pop
dec
dec
nop
fs
js
je
js
pusha
jmp
sbb
aas
sar
bound
xor
fs
aam
gs
mov
and
(bad)
xchg
call
les
sbb
dec
in
int
ins
sub
cmp
sbb
in
into
mov
inc
ins
and
push
retf
popf
pusha
add
add
push
les
arpl
mov
mov
push
and
stc
je
xchg
or
dec
pop
fadd
popf
inc
in
and
or
test
and
push
repnz
dec
jl
and
jl
add
bound
jo
jo
jne
push
rcl
and
gs
add
push
ins
cmps
dec
sahf
cld
les
stos
xlat
inc
mov
movs
inc
es
push
adc
push
enter
call
push
lea
repz
rcl
add
push
mov
in
inc
pop
mov
inc
mov
fstp
fild
je
fdiv
test
pop
push
repz
int3
pop
dec
outs
inc
ins
imul
rcr
pop
cmp
mov
lahf
adc
mov
call
sbb
or
stc
or
shr
imul
es
dec
or
iret
loopne
cs
and
hlt
js
dec
clc
clc
mov
out
das
add
dec
inc
outs
fcmove
test
or
or
xor
in
mov
sub
xor
ss
fiadd
sub
loop
sar
push
out
outs
movs
dec
sbb
iret
enter
in
jns
jbe
ror
xor
or
jb
loope
mov
dec
test
(bad)
dec
xor
sbb
adc
add
cmp
add
pop
aaa
cdq
test
cwde
add
icebp
inc
fidivr
dec
data16
add
push
or
inc
enter
mov
mov
pop
mov
out
inc
cld
jmp
les
cli
and
in
(bad)
cs
add
bound
fidivr
int3
push
je
push
inc
jbe
push
mov
cld
push
(bad)
in
shl
repz
call
adc
out
mov
add
add
ror
push
and
adc
inc
jne
outs
test
mov
cmp
jne
aas
or
mov
pop
aam
inc
pop
jb
or
hlt
pop
cwde
xor
pop
pop
inc
mov
je
mov
push
dec
xor
imul
(bad)
xchg
mov
mov
add
sahf
push
pop
loope
rol
xchg
mov
jbe
mov
outs
movs
mov
rol
xor
imul
dec
xchg
dec
fmul
lock
mov
out
fdivp
fadd
ins
push
mov
lahf
outs
mov
mov
mov
sahf
lods
push
xchg
and
out
fidivr
or
or
add
mov
(bad)
mov
sar
push
add
rol
int3
dec
jl
push
dec
jne
push
bound
imul
pop
aas
das
push
js
andps
shl
clc
sbb
test
push
imul
imul
scas
popa
or
ins
inc
push
mov
pop
dec
add
pop
xor
or
ret
adc
cmps
pushf
push
or
cmps
dec
mov
pop
sub
push
dec
adc
in
adc
pop
adc
add
add
cmp
and
cmp
(bad)
xchg
add
push
add
jmp
push
pushf
call
inc
ja
aam
repnz
loopne
inc
clc
xchg
inc
pop
cmp
inc
adc
dec
pop
cld
pop
lock
push
mov
lahf
cmp
add
dec
add
jge
test
(bad)
outs
fs
sbb
lock
movs
js
shl
push
cld
jns
cmps
jmp
loopne
inc
test
pushf
popf
xchg
push
dec
inc
jb
xlat
push
xchg
lods
fwait
rol
inc
push
xchg
xchg
add
inc
pop
and
add
or
adc
and
mov
inc
jmp
sub
adc
lods
lahf
mov
sub
call
mov
mov
and
jge
clc
pop
adc
xor
jnp
push
jnp
dec
js
(bad)
popa
rol
sar
sbb
xor
mov
cmp
adc
cmp
cmp
cwde
repnz
cdq
stos
push
xchg
and
adc
jb
movs
sbb
cli
repnz
cmp
or
or
pop
jns
fcom
arpl
jmp
aaa
ds
inc
pop
hlt
pop
add
loop
cld
or
lods
and
sbb
adc
popa
and
push
ds
mov
and
or
and
or
sbb
or
cmp
jb
movs
xchg
cli
arpl
and
push
sbb
jb
mov
pop
jecxz
inc
jnp
fisubr
dec
fist
xchg
mov
ror
cli
push
gs
imul
pusha
push
and
sbb
and
jle
and
push
outs
test
add
shl
sbb
jl
inc
and
test
adc
pop
pop
xlat
cmp
xchg
xchg
dec
xchg
inc
or
push
jae
cwde
mov
adc
and
ins
push
mov
jo
daa
stc
inc
fisubr
out
push
int3
sub
adc
movs
les
jne
add
sub
shl
leave
sub
in
dec
and
es
push
in
bnd
movs
adc
cs
xor
sub
ficomp
cs
mov
sahf
inc
inc
in
add
loopne
push
lea
fbstp
js
sub
pop
jnp
mov
xor
xchg
ror
mov
xchg
cmp
add
inc
or
inc
leave
xor
dec
fldenv
push
aaa
sub
pushf
pop
mov
mov
cmp
and
sub
pop
enter
arpl
add
and
imul
cmps
or
int
mov
or
inc
sbb
add
and
and
or
jl
add
push
jo
adc
inc
push
inc
or
inc
mov
inc
inc
and
nop
add
mov
xchg
sbb
inc
push
or
mov
out
(bad)
mov
adc
je
xchg
mov
(bad)
sti
xchg
data16
bound
mov
mov
jle
add
out
ror
ss
into
call
sti
push
mov
pop
sbb
rcr
or
scas
add
icebp
mov
push
leave
ja
pop
add
mov
inc
mov
loop
sbb
push
or
or
add
jne
hlt
xchg
dec
mov
retf
add
shl
clc
jge
inc
mov
lea
mov
adc
mov
inc
add
push
ins
or
inc
or
lds
ins
adc
in
push
inc
or
out
mov
inc
dec
adc
in
or
aaa
xchg
inc
sub
cmp
rcr
leave
fadd
push
repnz
add
in
adc
es
mov
push
mov
cmp
test
sbb
jp
pop
arpl
xchg
xor
mov
outs
or
inc
fiadd
xor
add
cdq
popf
ins
es
fiadd
cmp
sbb
into
repz
cmp
sub
sub
cmp
dec
shr
lods
popf
add
jle
test
pop
fpatan
mov
movzx
ins
cld
push
mov
mov
(bad)
out
psubd
push
adc
movs
mov
jl
jecxz
dec
sub
jmp
mov
push
(bad)
or
dec
sbb
adc
add
sahf
jle
call
jge
push
stos
cmp
movzx
jle
and
jle
dec
mov
pop
ss
mov
mov
in
xor
adc
add
sbb
loopne
in
movs
inc
cmp
push
push
mov
enter
xor
mov
adc
inc
andnps
or
sub
cmps
jae
ret
jnp
cmc
mov
ss
add
cld
inc
and
lds
sbb
dec
shl
mov
aaa
or
xchg
les
ja
add
xor
adc
inc
cmps
loopne
push
xlat
ret
imul
pushf
jl
inc
sahf
fadd
add
sbb
fs
aas
(bad)
test
mov
arpl
aas
fst
retf
mov
add
add
iret
loopne
pop
inc
jmp
ret
sbb
into
xor
sub
jl
adc
nop
clc
xor
pushf
or
pusha
fwait
je
sti
sbb
add
cmp
inc
test
int
in
test
and
or
xchg
xor
test
or
or
(bad)
into
pop
lds
sbb
or
rcr
aas
jbe
and
add
inc
lds
inc
iret
add
out
and
fcomp
sbb
(bad)
pop
shl
daa
in
inc
mov
hlt
rcr
lods
jmp
sub
pushf
or
inc
repnz
cmp
cmp
add
xchg
xchg
or
test
push
sbb
adc
jae
sub
mov
jbe
pop
inc
mov
cmp
retf
push
movs
lea
mov
test
add
dec
sub
jmp
dec
in
and
adc
and
jp
test
rcl
retf
rcl
nop
aam
cmp
dec
cmp
mov
inc
xchg
(bad)
jmp
not
xchg
shl
or
daa
inc
lock
lahf
mov
cmp
mov
cs
mov
pop
mov
sub
dec
(bad)
fsincos
push
and
sbb
jno
mov
adc
adc
mov
mov
mov
sbb
inc
inc
clc
or
scas
push
sbb
cmp
and
add
xchg
and
mov
cmp
mov
adc
sub
iret
push
xchg
mov
movs
dec
lahf
cmp
jecxz
sbb
aas
inc
xchg
sbb
test
dec
test
mov
and
adc
add
sbb
fsubr
lods
push
xchg
rol
mov
sub
push
and
push
jl
rol
ret
sub
popf
sub
clc
xor
aam
inc
add
and
pop
cmp
mov
out
jo
inc
lea
adc
xor
sbb
in
sub
inc
shl
pusha
pusha
aaa
adc
cmp
mov
add
call
(bad)
das
cwde
jmp
cmp
mov
cmp
or
sub
pop
push
xchg
shl
js
jns
jle
jmp
test
add
loopne
push
dec
aam
mov
add
add
(bad)
mov
pop
push
mov
mov
lock
cmc
mov
adc
mov
jmp
les
add
jmp
scas
adc
jae
das
call
or
dec
mov
outs
loopne
mov
clc
push
inc
adc
push
rcr
pop
jae
mov
push
div
inc
dec
add
push
sub
sti
icebp
push
push
out
movs
ins
sub
xor
push
fistp
(bad)
or
sbb
push
pop
idiv
fdiv
push
dec
mov
add
pop
and
fisubr
sahf
mov
nop
pop
sub
dec
inc
fsub
enter
dec
xchg
and
adc
or
mov
test
rcr
pop
inc
or
aaa
and
xor
int3
or
add
cmp
adc
or
xor
rcr
sbb
and
add
push
add
and
or
or
nop
xlat
mov
cmp
jo
dec
mov
(bad)
push
sub
or
xchg
cmp
or
adc
push
or
sar
cmps
xchg
or
xchg
loopne
fsub
jns
push
mov
je
enter
(bad)
jge
clc
or
inc
sahf
ins
cmp
mov
sub
cmp
addr16
sbb
cwde
and
push
mov
lea
mov
into
cmp
inc
call
push
imul
mov
imul
xchg
add
add
mov
sti
push
push
or
mov
mov
xchg
jecxz
pop
cmp
push
(bad)
adc
adc
xchg
pushf
lds
sbb
rcr
stos
aaa
adc
je
push
push
loop
add
dec
push
mov
push
outs
aaa
mov
(bad)
rol
dec
idiv
fs
cwde
stos
dec
test
add
(bad)
adc
and
inc
mov
neg
mov
aaa
inc
mov
push
and
(bad)
sbb
inc
inc
mov
sbb
push
inc
inc
scas
sbb
or
movs
add
push
jl
popf
mov
std
mov
scas
ret
xchg
add
push
push
xor
(bad)
mov
icebp
aaa
jmp
sub
and
fidivr
cmp
add
adc
cmp
ror
and
dec
mov
xchg
test
or
mov
and
fst
out
mov
push
lock
inc
loope
inc
dec
cmp
pop
ins
mov
je
test
jp
popf
aas
(bad)
popf
je
adc
and
xor
and
dec
push
jmp
ins
xor
mov
test
and
pushf
out
and
xchg
push
mov
push
stos
adc
add
mov
push
jbe
aaa
shl
adc
fdiv
cmps
shr
jl
setae
sub
daa
xchg
sbb
jb
(bad)
jmp
and
sbb
lock
out
aad
sub
mov
(bad)
fadd
pop
mov
add
out
bnd
cmp
je
mov
call
(bad)
inc
adc
ret
cmp
jne
and
mov
aaa
(bad)
adc
jo
sbb
aam
or
aad
jl
or
sub
out
push
popa
je
mov
adc
gs
test
hlt
cmc
sbb
push
pop
jns
enter
xchg
xchg
adc
addr16
mov
mov
mov
jl
fstp
adc
stos
(bad)
jle
xor
mov
mov
sbb
inc
inc
or
inc
jne
pop
xor
ins
push
imul
rcl
sahf
add
jg
add
jg
call
mov
adc
js
push
and
mov
ins
popa
hlt
add
movs
sbb
inc
pop
mov
cmps
or
(bad)
retf
or
call
sbb
loope
mov
loope
les
add
popf
add
push
mov
and
pop
lds
cmp
outs
les
imul
out
xor
xchg
sub
push
leave
leave
or
cmp
pop
movs
movs
jb
push
sbb
fs
and
clc
test
xor
cwde
xor
mov
push
mov
xchg
dec
dec
jne
push
xchg
push
adc
retf
shl
call
fwait
adc
stos
dec
cmp
movs
add
clc
pop
cmp
push
or
dec
mov
push
js
in
in
cdq
fwait
cmp
sbb
jno
mov
jle
cmp
cld
or
dec
scas
jge
mov
inc
rol
outs
jo
jo
cmp
adc
and
or
es
or
mov
jo
call
(bad)
sbb
jp
jmp
outs
jo
or
jmp
enter
and
(bad)
push
jb
jne
call
push
add
add
fdiv
pop
mov
push
jo
mov
mov
bound
adc
sbb
cmps
stc
adc
cwde
add
xchg
push
and
loope
cmp
ja
and
push
test
pop
and
adc
push
xor
stos
and
inc
or
jo
xchg
pop
imul
xchg
aaa
sbb
cmp
dec
xchg
sub
jae
inc
fwait
rcr
(bad)
mov
inc
push
in
sbb
xor
jmp
mov
add
push
ret
xchg
xchg
adc
push
scas
xchg
movs
aad
pop
dec
inc
mov
data16
pop
or
ss
or
jo
mov
pop
sbb
imul
and
inc
xchg
outs
fimul
jne
sbb
in
(bad)
lods
mov
add
arpl
ret
and
adc
in
xchg
das
pop
lahf
inc
or
pop
xor
mov
test
xor
cmp
lahf
mov
add
add
cmp
dec
js
or
daa
jp
in
jmp
or
retf
pop
xchg
or
and
outs
inc
add
ja
pop
stos
dec
xchg
push
lods
pusha
inc
or
(bad)
nop
push
dec
add
mov
pop
repnz
dec
loopne
add
or
or
cwde
cs
ja
jne
data16
push
les
add
sub
loop
test
ds
lea
loop
lea
popa
or
cmp
fimul
mov
aam
sub
add
pop
and
call
shl
ins
out
fdivr
mov
dec
enter
bound
mov
fdiv
leave
pop
(bad)
imul
pop
ja
std
mov
jmp
enter
add
enter
add
and
sbb
sbb
and
jge
leave
aam
data16
(bad)
cmc
cli
mov
imul
dec
mov
dec
push
cmp
call
mov
das
xchg
aas
sbb
sbb
xchg
adc
xlat
(bad)
dec
xacquire
mov
mov
mov
fidiv
add
les
jp
adc
inc
inc
add
mov
inc
ret
inc
pushf
inc
dec
add
xchg
lock
push
(bad)
jmp
pop
sbb
out
sbb
pop
shl
adc
xor
push
lahf
and
cmp
pop
jb
pop
add
adc
mov
add
movs
rol
adc
jmp
add
iret
adc
leave
push
adc
push
cmp
popf
push
inc
cmps
mov
sbb
adc
jb
clc
xor
popa
ins
les
das
in
sbb
nop
cmp
rcr
add
add
pop
sbb
push
fisub
jo
jb
in
in
pop
sbb
or
push
push
pushf
je
enter
inc
mov
(bad)
add
sbb
pop
add
and
leave
and
es
inc
jo
push
sub
sub
and
and
sub
and
and
mov
mov
cdq
add
ror
mov
or
or
enter
rol
pop
and
movs
push
dec
seto
and
cmps
and
or
jmp
add
lds
(bad)
loopne
test
sysret
sbb
pop
call
sbb
shl
sub
inc
mov
adc
repnz
jge
pop
xor
dec
mov
jmp
mov
test
outs
lods
stos
nop
or
push
test
enter
js
test
repnz
int3
inc
mov
cmp
inc
pop
(bad)
bound
dec
shl
es
daa
fwait
loopne
icebp
pop
enter
mov
mov
mov
mov
mov
fwait
iret
repz
lods
cmps
les
sar
adc
xor
(bad)
and
sbb
retf
push
das
leave
retf
lods
stos
sub
repnz
rol
je
stos
push
cmp
pop
adc
or
enter
cmp
test
xchg
test
imul
inc
cmps
leave
and
push
retf
aad
add
jno
ins
jnp
mov
cmps
add
test
mov
inc
or
inc
jb
sub
sbb
test
sti
pop
sub
repnz
mov
inc
mov
or
imul
test
inc
push
xchg
dec
jne
repnz
repnz
dec
ins
dec
pusha
add
xor
sub
mov
fdiv
jecxz
rcl
outs
cmp
xchg
ins
cmp
nop
mov
call
scas
sbb
cwde
dec
jle
add
call
cmp
jb
into
mov
es
mov
inc
mov
rcl
inc
xor
mov
ins
je
xor
pop
inc
sti
or
rol
in
shl
xchg
pop
xor
or
push
jb
and
push
jne
shl
xor
jo
xor
in
sbb
mov
stos
or
sahf
jbe
sbb
jge
add
mov
or
sub
popa
pop
test
mov
fldcw
mov
sahf
les
ficom
ins
daa
movntps
adc
addr16
sbb
and
xchg
mov
dec
push
(bad)
leave
inc
enter
sbb
and
xor
int3
lods
aaa
cmp
inc
arpl
add
dec
leave
out
xor
(bad)
xor
jns
aam
aaa
dec
cmp
add
mov
mov
sub
xor
stos
out
and
dec
outs
(bad)
repnz
or
mov
cmp
stos
movs
leave
pop
cmp
xadd
(bad)
rcl
lods
mov
call
inc
xchg
aam
jp
cmp
pop
repnz
cmp
sub
add
pop
xor
cmp
imul
jnp
scas
in
sar
lock
or
aas
rcl
sbb
and
push
cmps
adc
or
inc
test
leave
jl
inc
add
fidiv
pop
push
call
or
or
dec
sub
sbb
fiadd
inc
call
dec
dec
dec
fild
inc
sub
push
sbb
cmp
aam
sbb
mov
push
push
aas
xchg
sub
push
sahf
push
ins
shr
sub
inc
ins
outs
jae
into
out
lahf
lock
data16
adc
push
mov
mov
adc
mov
xchg
mov
fcom
adc
pop
daa
cli
movs
dec
test
mov
mov
sahf
xor
(bad)
iret
push
mov
cmp
and
dec
add
xor
(bad)
pusha
imul
jns
inc
imul
jg
sub
xchg
add
push
nop
enter
xlat
in
aam
or
inc
repnz
inc
or
xor
adc
fwait
retf
add
xchg
loop
add
sahf
mov
sbb
ins
adc
cwde
rcr
cmovae
mov
btc
rol
fisttp
loop
xor
aad
ins
xchg
push
cmp
(bad)
push
add
xchg
fidivr
add
loopne
aam
imul
push
dec
mov
(bad)
mov
dec
fild
adc
je
ror
dec
jbe
aad
push
inc
or
in
stc
sbb
dec
cmp
iret
or
add
jae
addr16
cmp
and
aas
mov
pop
mov
dec
pusha
mov
or
add
push
pusha
lods
mov
adc
in
setg
loope
sahf
js
adc
dec
repz
mov
xor
int
nop
nop
adc
sub
or
cwde
adc
and
push
loope
add
jo
pusha
xchg
ror
sbb
xor
push
add
inc
pop
or
pop
test
and
add
jl
fsub
imul
call
cmc
repz
push
hlt
jcxz
xor
nop
out
sub
sbb
imul
pop
call
hlt
fcom
xchg
push
fcom
jno
pop
mov
push
imul
mov
jmp
dec
push
jns
jl
stos
mov
xor
das
fnstsw
push
inc
inc
or
pop
adc
and
or
je
daa
mov
popf
sbb
test
add
ret
and
clc
in
sbb
and
lea
inc
inc
or
loope
out
lahf
daa
sub
sbb
je
dec
imul
mov
stos
xchg
sub
sub
into
inc
jmp
cmp
add
push
(bad)
or
aas
mov
popa
xchg
inc
cdq
pop
outs
or
jl
add
aaa
je
idiv
dec
lods
mov
push
jb
adc
loope
ins
pushf
mov
push
adc
stc
fstp
fwait
cmp
call
je
ret
xchg
psubq
(bad)
lea
mov
push
add
dec
xor
jmp
imul
push
bnd
xchg
pop
and
jge
jo
cwde
add
push
mov
cmp
or
mov
adc
iret
aam
hlt
outs
lahf
adc
sbb
popa
jae
jg
cmp
lods
dec
loope
inc
fdivr
call
mov
(bad)
add
mov
lea
lea
pushf
test
sbb
mov
ins
dec
lods
add
add
xchg
mov
dec
retf
xor
cwde
pop
pop
daa
rol
pop
cmp
mov
inc
or
ins
mov
fs
mov
sti
(bad)
pop
add
(bad)
test
sbb
daa
adc
ret
or
(bad)
inc
or
pop
arpl
adc
call
lods
dec
pop
shr
push
mov
jl
push
sub
jge
add
inc
push
push
scas
jne
jno
jle
push
imul
inc
sub
and
pop
inc
lds
outs
and
cmp
mov
mov
(bad)
adc
mov
mov
cmp
jmp
mov
and
add
xchg
cmps
(bad)
adc
loop
and
scas
cwde
enter
test
nop
test
std
mov
mov
dec
in
add
sahf
sbb
mov
mov
ins
mov
adc
sbb
xchg
rcr
pop
fwait
sub
xchg
outs
movs
movs
dec
fstp
dec
dec
outs
xor
pop
dec
push
push
sub
rol
es
or
je
pop
xor
and
fmul
add
clc
hlt
mov
add
popf
retf
dec
adc
cmp
add
or
mov
and
add
repnz
gs
mov
shr
mov
and
and
xor
aam
dec
and
mov
sub
push
xor
leave
push
adc
add
popf
cdq
jne
ss
pop
xchg
inc
mov
inc
icebp
es
jmp
sub
mov
mov
imul
push
adc
test
clc
dec
jl
mov
push
sar
push
sbb
mov
les
inc
jne
call
fist
fbld
mov
shl
and
or
mov
or
pop
out
sar
sub
jae
push
mov
sub
arpl
in
stos
push
pop
aas
xor
adc
sbb
je
push
push
or
mov
scas
ret
shl
jle
pop
push
movs
movs
push
(bad)
push
call
int
cmp
test
in
inc
ins
aaa
arpl
add
mov
xor
or
loopne
inc
adc
add
mov
add
jns
inc
or
adc
mov
or
inc
xor
mov
push
inc
pop
push
add
addr16
xor
lea
adc
sub
scas
xchg
cmp
phsubsw
push
inc
add
or
aas
cld
js
pushf
xchg
push
xor
mov
lods
mov
inc
dec
and
or
cmp
or
or
das
pushf
jo
or
mov
dec
xlat
push
sbb
imul
cli
jg
not
and
mov
mov
jge
dec
call
daa
int
mov
inc
add
add
pop
je
ja
add
mov
ins
mov
(bad)
call
enter
mov
pop
jmp
push
dec
mov
imul
push
sub
je
or
fsub
movs
retf
add
pop
adc
push
into
data16
test
jg
or
pop
inc
cmp
xchg
outs
ins
mov
out
pop
push
(bad)
fmul
aas
mov
es
outs
lods
xchg
push
repz
cmp
inc
bound
sub
jg
imul
jne
sbb
js
mov
sub
mov
outs
paddsw
dec
jmp
mov
pop
push
(bad)
and
or
add
and
sub
daa
or
dec
adc
pop
xchg
into
inc
les
xchg
fidiv
fwait
adc
(bad)
cmp
adc
scas
hlt
(bad)
stc
push
mov
adc
lock
icebp
cmp
push
jno
inc
add
enter
push
mov
jecxz
inc
sbb
mov
repnz
clc
adc
inc
clc
lea
mov
lods
add
xchg
add
inc
push
jmp
ss
daa
mov
imul
call
outs
xchg
pop
bound
jge
sbb
stos
jl
sub
mov
test
mov
inc
ins
pop
xchg
jo
enter
test
sbb
fadd
or
fisub
imul
inc
xchg
adc
je
push
push
mov
adc
jne
dec
dec
int
int
in
ins
fidivr
pop
cmp
out
pop
jns
jns
test
or
and
pop
jno
or
jae
xchg
xor
(bad)
lods
loopne
mov
jl
loopne
mov
movs
test
fadd
or
retf
es
cmps
mov
dec
fcomi
cs
xor
inc
enter
mov
push
jo
nop
je
lea
xor
js
push
inc
js
or
addr16
push
test
sub
stos
or
cmp
je
arpl
inc
scas
xchg
jecxz
mov
or
loope
jp
imul
in
add
jo
je
mov
xchg
fwait
pop
jp
push
cmp
jne
and
gs
pop
mov
(bad)
push
push
lock
mov
jb
xor
xchg
(bad)
jbe
or
dec
push
or
sub
cmps
xor
dec
arpl
hlt
(bad)
fmul
(bad)
in
arpl
xor
daa
cmp
jmp
imul
xchg
sub
dec
imul
fist
xlat
push
gs
lds
and
mov
shl
in
pop
mov
mov
pop
mov
and
mov
fwait
aas
jb
mov
or
int3
ror
icebp
inc
and
ja
sar
shl
jns
cmc
movs
test
and
xor
sub
into
pop
mov
mov
sti
pop
pop
inc
inc
mov
push
cmp
mov
aaa
test
shr
cld
and
call
test
rcr
movs
test
pusha
cmp
mov
push
mov
(bad)
adc
push
and
sbb
outs
cmps
sbb
lock
enter
add
test
pop
loop
mov
jnp
push
test
add
ror
call
movs
repz
add
movs
or
out
clts
push
or
and
popf
pop
enter
sti
jg
nop
data16
cmps
or
or
add
hlt
pushf
lea
and
pop
pop
cmps
or
push
jns
aas
sub
into
hlt
movs
adc
push
push
jge
cmp
pop
dec
mov
(bad)
mov
rcl
in
dec
jge
inc
inc
add
push
adc
push
ret
inc
pop
and
pop
rcl
in
iret
cmp
jge
fstp
mov
cmp
or
icebp
ss
in
xchg
xor
adc
inc
or
adc
jmp
ins
shr
xor
mov
jno
pop
push
jle
ror
enter
inc
aaa
push
fild
outs
cmp
test
mov
add
(bad)
dec
(bad)
inc
addr16
pop
jge
xor
sub
pop
and
inc
enter
je
lea
cmps
sbb
ror
pop
aad
es
pop
dec
or
fimul
mov
inc
push
xor
stos
dec
sbb
adc
psadbw
je
mov
leave
aas
mov
mov
dec
dec
js
adc
cmp
adc
pop
shl
xchg
pushf
push
inc
ds
push
jb
cmps
movzx
sub
adc
data16
add
adc
sbb
or
jno
add
mov
adc
sbb
cmp
movs
jmp
jno
jmp
scas
pop
push
cmp
mov
bound
lds
out
cdq
cmp
xchg
call
sub
bound
push
clc
add
movs
test
repz
repz
cmp
jns
ror
rcl
jle
out
cmp
sub
repnz
rol
or
stc
add
movs
test
das
add
adc
sbb
and
int
xchg
retf
daa
jae
pushf
push
cmc
ss
pusha
and
dec
daa
xor
lock
je
imul
push
imul
test
push
or
pop
inc
popf
cmps
aad
cmp
cmp
mov
jb
xchg
and
pusha
add
in
ror
mov
nop
jb
cmps
test
cmp
add
mov
lods
add
jns
pop
inc
(bad)
jo
call
mov
xor
int3
and
push
or
jbe
popa
add
sbb
xchg
pop
jo
or
jp
repz
test
in
pop
popf
add
pushf
nop
add
ins
and
loopne
lods
test
adc
sub
push
sub
mov
jmp
out
cmp
loopne
pmulhw
fbstp
loope
int
jmp
sbb
jne
lock
push
inc
scas
inc
test
cmp
or
inc
popa
nop
lahf
inc
ja
or
add
mov
pop
addr16
je
pop
movs
sbb
or
add
pop
and
call
sub
jae
test
dec
cmp
shl
das
xor
adc
test
sub
nop
xor
and
mov
sbb
add
jae
dec
iret
cwde
shl
adc
push
mov
sub
cmps
pop
mov
pop
cmp
jne
cmp
push
push
sar
std
or
cmp
dec
or
cmp
dec
mov
movs
popa
pop
pop
das
mov
cmp
push
add
cmp
add
lods
(bad)
jo
add
xor
mov
add
add
push
add
sbb
dec
ret
mov
dec
mov
ins
or
jge
mov
popa
adc
xor
adc
push
ja
jns
add
xlat
inc
inc
push
sbb
les
push
pop
fcom
push
scas
add
push
adc
push
mov
xchg
and
add
movs
and
or
cdq
ret
ins
lods
loope
leave
dec
retf
dec
mov
pop
test
fadd
mov
sub
push
mov
xchg
add
stos
jns
or
ret
je
mov
mov
cmp
or
push
jo
popa
sbb
sub
xchg
pop
je
inc
dec
jne
sub
pop
and
xchg
or
or
add
enter
xlat
pop
inc
mov
xor
lods
mov
pop
(bad)
or
mul
inc
mov
sub
push
ins
test
inc
fsub
repz
sti
push
xchg
pop
adc
push
push
icebp
shl
movs
outs
add
stc
mov
jmp
cmp
push
sub
imul
movs
ins
ins
pushf
inc
imul
sub
pop
cmp
fstp
add
mov
or
dec
mov
in
sbb
xor
inc
mov
retf
test
aam
dec
add
xor
test
punpckhbw
xlat
aad
aad
sbb
ins
int3
data16
ins
cmp
and
les
fcomp
in
and
sahf
test
xchg
push
push
push
xor
add
pusha
fst
push
add
inc
xor
frstor
int3
and
out
dec
push
or
popa
jb
jne
gs
jo
and
mov
add
cmps
dec
js
test
push
and
call
jns
fstp
imul
les
or
ret
xor
or
js
stos
out
add
dec
add
dec
fs
xchg
frstor
shr
push
jbe
and
jns
add
mov
inc
sahf
test
sub
rol
cld
mov
add
fs
and
adc
enter
inc
xor
cdq
bound
cmp
loopne
pop
add
movs
cmp
xchg
fcomp
loopne
push
(bad)
inc
add
adc
mov
ss
jmp
aaa
or
mov
loopne
lahf
inc
jle
adc
fisubr
fadd
leave
and
in
call
or
popa
iret
add
cmps
xchg
loopne
xor
or
xchg
push
(bad)
mov
add
mov
out
and
inc
jne
and
sbb
sbb
inc
add
sub
pop
loopne
adc
inc
xor
mov
in
imul
xor
sbb
dec
and
popa
fs
addr16
daa
pop
in
pusha
lds
test
xor
adc
test
jo
loop
imul
pop
mov
jae
jne
dec
mov
mov
out
mov
rcr
add
sub
hlt
add
mov
int
and
dec
lock
cmp
jae
rol
popa
or
add
dec
sti
cmps
loopne
loop
jo
xor
pop
mov
sbb
push
stos
pop
jno
xor
scas
ins
lock
mov
andps
daa
daa
daa
pusha
add
and
in
(bad)
in
(bad)
call
or
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
cld
loope
loopne
inc
repz
ds
test
or
jo
data16
mov
stc
mov
xor
aaa
icebp
sahf
inc
nop
push
adc
shl
dec
sbb
dec
in
lods
xchg
iret
sti
sbb
cs
add
adc
xchg
ds
sar
xlat
xor
enter
aam
leave
adc
mov
dec
mov
add
push
cmp
mov
loopne
in
mov
stos
mov
and
lods
loopne
mov
or
adc
mov
rcr
add
mov
adc
dec
xchg
js
dec
clc
xchg
xor
adc
xchg
jle
push
add
test
pushf
rol
cmp
aam
and
mov
adc
push
add
inc
pop
push
adc
cld
or
pop
ret
jae
repnz
xor
sbb
adc
imul
dec
cmp
jmp
xor
cmp
sbb
sub
out
call
(bad)
inc
xchg
xor
dec
push
adc
inc
cmp
push
out
or
inc
sub
ret
clc
mov
(bad)
xor
fadd
popa
std
fiadd
sbb
add
call
fistp
add
mov
dec
inc
or
xchg
xchg
and
mov
pop
gs
pop
cmps
movs
int
fcmovnb
and
sub
xor
adc
add
and
mov
xor
(bad)
dec
xchg
les
xchg
pop
rol
mov
push
add
or
mov
mov
add
cmp
adc
ins
xor
adc
and
fwait
js
add
cmp
dec
les
aaa
inc
lock
add
jg
inc
jo
and
inc
pop
movs
xchg
in
push
test
aaa
pop
fisubr
shl
or
je
inc
ins
or
add
enter
ja
mov
adc
mov
adc
pop
mov
popa
gs
dec
cmps
jmp
jle
jp
add
or
or
dec
cwde
call
mov
xchg
xchg
add
lods
mov
push
cmp
test
mov
call
outs
popa
inc
lock
sbb
xor
cmp
mov
popa
push
cwde
sbb
xchg
jg
sbb
push
push
repnz
add
mov
or
and
push
movs
xor
shl
(bad)
dec
rcr
add
inc
cmp
push
jnp
jmp
xchg
dec
repz
push
dec
loope
push
ficomp
adc
mov
call
inc
cmp
push
shl
adc
and
cmps
(bad)
mov
pusha
pusha
adc
push
imul
nop
test
call
fiadd
jmp
pop
xchg
or
test
fild
and
add
adc
xchg
adc
hlt
out
and
adc
dec
adc
cmp
outs
nop
xchg
dec
pop
xor
or
cmp
xchg
xor
push
lock
and
and
test
aas
and
inc
rcl
lods
inc
jl
xor
dec
inc
xchg
mov
fnsave
call
pmuludq
inc
cmp
and
push
les
mov
push
and
push
pop
add
add
clc
lods
loop
and
adc
and
adc
push
and
xchg
pop
add
xlat
push
cld
inc
jno
pusha
repnz
es
cmp
push
rcl
and
xchg
jo
add
fild
mov
inc
enter
test
inc
pop
inc
cmp
and
jae
mov
push
sub
adc
xchg
adc
je
push
sub
or
xor
mov
pusha
push
push
xchg
or
and
ds
pcmpgtd
ja
or
nop
push
or
in
sbb
(bad)
nop
ss
xchg
push
repnz
in
cmps
outs
es
dec
jo
inc
inc
push
mov
in
and
ja
adc
dec
or
push
pop
add
add
mul
add
add
adc
inc
pop
mov
mov
outs
add
xor
pusha
fwait
sbb
adc
mov
loopne
cmp
or
push
test
in
nop
mov
dec
out
cmp
repnz
adc
ins
dec
push
mov
adc
repnz
frstor
sbb
popa
aam
(bad)
xor
xchg
out
mov
ficom
in
jne
ds
in
mov
xor
call
int
dec
fs
mov
hlt
ja
or
ja
leave
sbb
enter
adc
cwde
inc
mov
jle
mov
cld
pusha
lock
xchg
scas
inc
nop
push
pop
add
and
jecxz
in
repnz
cld
cmps
or
dec
jg
mov
push
and
or
mov
ins
pusha
sub
mov
and
inc
aaa
adc
fs
sub
jnp
jnp
data16
hlt
pop
or
ins
repz
fwait
mov
(bad)
(bad)
(bad)
rcl
pop
je
(bad)
jl
or
cmp
imul
cmp
inc
je
mov
cmp
adc
push
mov
add
inc
cmp
(bad)
call
add
mov
or
sahf
idiv
jle
push
sbb
sub
jno
dec
xor
xchg
mov
dec
test
inc
pop
push
adc
mov
test
je
inc
loop
inc
in
pop
jmp
fisubr
inc
xor
cli
xchg
dec
mov
push
jl
(bad)
pusha
out
enter
sub
jmp
sbb
lea
je
(bad)
xor
or
pushf
inc
jg
pop
lods
test
sbb
test
ja
movs
jmp
stc
sete
in
in
add
mov
repz
sbb
and
nop
jmp
dec
dec
add
adc
shl
(bad)
or
pop
mov
or
push
ins
jo
js
mov
test
cmp
fsubr
add
inc
jge
lea
xor
test
lock
jo
or
adc
xchg
cmp
or
inc
or
mov
je
dec
int
test
inc
push
imul
push
pop
iret
adc
adc
dec
inc
or
(bad)
mov
push
pop
xchg
xchg
push
or
pushf
cmp
mov
cmp
pop
push
adc
ins
and
mov
idiv
xchg
sbb
mov
jno
dec
test
and
inc
ins
test
xchg
sub
push
push
cmp
test
fcmovu
pop
add
inc
rcr
sbb
scas
jmp
or
and
pop
repnz
dec
sub
pushf
pop
cs
sub
pusha
fs
cmp
inc
dec
loopne
inc
push
pop
dec
pop
adc
movs
mov
pusha
mov
jb
xchg
cmp
push
pop
push
inc
xchg
dec
xor
pop
inc
dec
pop
dec
xchg
and
pop
dec
push
jne
clc
adc
mov
jp
or
and
in
sub
and
xchg
inc
call
test
jbe
fistp
adc
mov
mov
push
arpl
(bad)
xchg
call
jecxz
rol
or
ins
shr
xchg
ror
adc
test
mov
fist
sbb
xchg
adc
shl
out
add
mov
jns
sbb
inc
pop
pop
mov
ret
fcom
jo
sub
call
fistp
push
cmp
push
mov
inc
pop
mov
mov
movs
or
mov
mov
nop
add
das
add
mov
mov
inc
xchg
or
iret
sar
fisubr
(bad)
bound
shl
int3
push
mov
(bad)
push
xor
pop
fstp
jecxz
inc
cmp
push
cmps
cmp
popf
(bad)
jmp
cdq
shl
add
pop
scas
ret
xchg
mov
lahf
retf
movs
or
adc
xor
sqrtps
pop
mov
fisub
pop
pop
mov
arpl
(bad)
mov
jl
fcom
popa
fdivr
add
sub
push
shr
jl
pop
loope
div
pop
xchg
and
pop
fistp
jo
xchg
xchg
movs
movs
sbb
inc
pop
mov
adc
test
inc
inc
and
fst
mov
jle
out
lods
cli
pop
je
jmp
mov
cmp
in
add
add
push
js
jno
inc
push
add
dec
cmps
sti
jo
je
cwde
pop
mov
retf
sub
xor
adc
inc
aam
pop
push
movs
adc
int3
cmp
add
inc
push
push
test
pop
jb
(bad)
fcomp
jg
ins
dec
call
int3
retf
rcl
test
outs
push
outs
ficomp
ret
sti
mov
add
repnz
sub
xor
pop
loop
add
add
fcomp
xor
jmp
jmp
(bad)
pop
or
adc
fcmovnb
arpl
sti
jbe
rcr
jmp
sti
push
popf
movs
or
popa
inc
dec
inc
(bad)
pop
inc
jle
add
push
scas
jle
(bad)
leave
mov
je
fisubr
loop
stos
add
lahf
inc
clc
sbb
and
xor
mov
shr
popa
push
push
lock
mov
iret
and
add
sahf
push
sbb
pop
fbld
test
cs
inc
xlat
push
in
aas
or
add
inc
cwde
scas
inc
ins
jns
outs
sub
jg
jl
push
or
cmp
inc
scas
cmp
adc
add
add
in
in
jne
cmp
inc
dec
test
aas
and
aad
inc
xchg
add
in
xchg
je
add
inc
mov
inc
(bad)
movs
stos
inc
add
inc
add
ss
and
mov
xor
inc
push
outs
loopne
fadd
cmps
mov
push
shl
ds
adc
mov
sub
lock
dec
or
lods
ret
jmp
ds
mov
mov
add
dec
push
ins
in
or
call
(bad)
fld
push
adc
mul
xor
ins
jmp
jecxz
sbb
lods
mov
pop
xchg
popa
push
add
push
push
test
cmp
jne
xor
pop
add
inc
jne
fsub
adc
dec
mov
test
add
cmc
mov
mov
ror
mov
jo
and
jmp
hlt
adc
bnd
add
add
or
add
adc
push
or
mov
push
xchg
cmps
pop
or
outs
repnz
aad
or
jne
adc
idiv
add
mov
in
ret
ror
popa
or
fcomp
and
out
cmp
add
add
adc
jae
popa
dec
sub
clc
xchg
daa
adc
mov
mov
enter
lock
lar
xchg
or
enter
inc
fld
lods
test
sub
or
mov
fwait
pop
pop
mov
xor
adc
xor
jae
xor
hlt
movs
mov
sub
call
xchg
sbb
fs
push
inc
pop
adc
adc
lock
pop
xchg
aam
add
mov
(bad)
nop
fidiv
pushf
mov
stc
ss
jb
movs
test
push
lods
mov
cmp
pop
mov
int
dec
mov
mov
in
ss
int3
rcl
rcl
mov
fsub
xchg
loope
fcmovnbe
ins
mov
sbb
mov
add
push
inc
push
xor
lock
add
cs
data16
stos
ins
inc
pop
mov
dec
iret
adc
dec
test
jb
jae
dec
sbb
mov
xchg
dec
add
fdivr
xor
inc
mov
sbb
test
jns
push
rcr
arpl
dec
rcl
aaa
inc
pop
and
ficomp
cmps
setle
cmp
add
arpl
cwde
sbb
cld
aam
mov
add
sbb
sbb
sub
push
pop
sub
or
cmp
in
rcr
pop
inc
test
int
shl
js
xor
push
test
push
(bad)
sbb
jl
dec
xor
adc
mov
sub
lock
and
add
push
pusha
adc
xchg
xchg
xchg
xchg
or
or
xor
nop
jmp
mov
add
clc
loopne
stc
jae
push
shl
stos
pop
mov
push
jg
es
xor
push
sbb
or
and
ins
push
cwde
mov
adc
ins
cmovl
movs
sub
shl
(bad)
jle
or
adc
pop
cmp
pavgb
add
gs
aam
ss
ficomp
pop
shl
jl
and
pop
mov
ror
ins
or
and
mov
or
pop
mov
sbb
jne
mov
jo
fisub
jne
loopne
and
adc
in
and
lock
and
dec
xor
mov
lea
mov
ss
movd
jne
xor
or
inc
pop
fmul
ins
rol
fdiv
and
cmp
jge
outs
pushf
dec
jmp
mov
xchg
jne
sbb
add
add
and
pop
jle
movs
add
outs
nop
inc
dec
in
mov
xor
mov
dec
retf
adc
add
loop
rol
test
sub
inc
adc
inc
call
push
nop
mov
sbb
imul
push
fwait
lahf
pop
stos
fdivr
mov
repz
addr16
in
fisub
or
push
pop
or
xchg
in
call
cmp
xchg
out
mov
imul
push
pcmpeqb
inc
popf
mov
hlt
lea
(bad)
rcl
push
pop
push
sar
push
xchg
jmp
sub
es
add
les
cdq
mov
dec
inc
push
mov
sub
call
movd
xor
shl
or
adc
add
mov
ins
stos
ret
add
sbb
mov
sbb
add
mov
sbb
lods
xor
jae
and
and
dec
add
imul
mov
jo
imul
push
lods
pop
pop
mov
cmp
jne
pushf
cmp
js
shl
clc
xor
ss
xor
xchg
(bad)
add
dec
adc
add
into
enter
sub
cmp
add
mov
jne
xor
stos
shr
aam
jecxz
push
sub
pop
push
jno
add
sub
test
sbb
ins
int
loopne
jg
pop
dec
je
(bad)
sub
adc
and
mov
xchg
hlt
xchg
mov
jmp
push
dec
jmp
xchg
dec
shl
push
dec
inc
aaa
movs
inc
and
pop
add
inc
cli
cwde
test
aas
jo
inc
fldcw
or
movs
(bad)
sar
fiadd
fiadd
push
dec
lods
out
in
mov
mov
xchg
(bad)
retf
adc
push
ds
mov
or
jmp
retf
(bad)
outs
sti
(bad)
int3
push
call
mov
inc
popa
loopne
cmp
ss
adc
mov
xchg
pop
pop
cld
ds
jno
mov
xor
(bad)
inc
(bad)
fsubr
aas
and
mov
sub
ins
add
out
push
sar
mov
xlat
adc
(bad)
pop
pop
cmp
push
leave
dec
push
sti
and
cwde
push
push
or
bound
ret
fidiv
in
sbb
xchg
sbb
les
or
fmul
addr16
lock
hlt
cmps
call
push
test
loopne
push
cs
push
xor
inc
push
lock
xchg
test
mov
pop
xor
mov
add
xchg
dec
or
enter
out
fwait
mov
add
cmp
sub
and
(bad)
pusha
sub
mov
jge
push
mov
adc
inc
jo
mov
pop
xchg
jmp
xchg
xchg
lods
into
sub
popf
sub
aam
pop
adc
sub
sub
test
clc
mov
add
xor
or
in
adc
xor
cmp
lods
shr
sub
xor
sub
push
ror
mov
pop
loopne
cmps
push
xchg
push
mov
push
dec
inc
outs
dec
adc
adc
es
ret
js
arpl
shr
add
adc
lods
inc
in
xor
dec
xor
pop
xchg
or
cmps
bound
and
or
or
icebp
loope
inc
push
ja
push
not
inc
js
mov
pop
fcom
lock
in
dec
test
les
inc
jno
cwde
movs
ror
loopne
cmp
mov
push
lds
cmp
and
call
add
sahf
lods
add
sbb
mov
int3
xor
sub
in
and
lock
cmps
test
xchg
lea
test
or
push
add
mov
fsubr
(bad)
adc
adc
cmp
jo
ja
push
cmp
adc
daa
lods
jmp
movs
push
jle
push
or
movs
and
shr
add
adc
cmps
sbb
ds
shl
fsub
pop
sub
mov
cmp
mov
and
ret
push
adc
mov
cmovne
add
or
cmp
sbb
retf
and
retf
popa
inc
jo
push
test
push
or
mov
js
add
test
xor
lods
test
(bad)
xor
adc
out
imul
inc
mov
mov
fild
ret
call
xor
out
dec
push
push
pusha
aaa
aam
imul
mov
adc
mov
push
ja
rcr
aad
enter
ja
lods
adc
pshufw
out
push
sbb
push
sub
arpl
cmps
and
sbb
pop
sldt
and
es
cld
hlt
pop
xlat
inc
ds
clc
push
xor
or
lock
sbb
inc
shl
in
mov
call
inc
in
cmp
loopne
cmp
cdq
push
inc
fdiv
inc
fmul
aam
(bad)
rcl
mov
mov
in
stc
in
xor
je
push
clc
and
pop
inc
cmp
jl
adc
sub
test
clc
adc
or
rcl
lods
mov
or
je
js
ss
fcomp
enter
inc
leave
push
mov
xchg
jg
das
inc
add
add
xor
xchg
inc
jo
push
hlt
xor
push
add
or
xor
pop
and
or
arpl
add
call
fwait
jl
xor
add
push
fadd
inc
pusha
fdivr
inc
mov
push
xor
cmp
inc
jmp
retf
in
jg
retf
rcr
lock
in
dec
gs
push
call
test
nop
add
mov
loop
rol
cmp
(bad)
fmul
sub
push
dec
movs
xor
int3
jo
xor
sbb
js
pop
in
enter
popf
aam
sbb
fadd
fdiv
enter
fcom
push
lock
sbb
nop
push
add
pop
es
jle
pusha
test
dec
pop
xor
pop
and
or
div
push
mov
and
or
popa
dec
repz
mul
ja
add
push
shl
pop
and
and
jae
and
push
div
add
popa
xor
push
inc
loopne
mov
inc
push
adc
pop
inc
pop
mov
sub
xchg
cmps
xchg
scas
and
imul
loopne
je
push
ins
bound
pop
or
fdiv
jge
or
popa
jb
add
mov
adc
addr16
clc
cmps
pop
add
xor
pop
push
add
test
sub
push
inc
add
push
bound
ins
xor
xchg
add
jp
mov
sbb
cdq
pop
push
aam
popa
mov
add
inc
pop
nop
jo
fldenv
movups
add
ret
mov
nop
test
ins
jnp
aam
jl
sbb
js
arpl
sub
sbb
add
icebp
pop
nop
(bad)
hlt
sbb
pop
sub
adc
in
pop
dec
pop
inc
lds
and
pop
fucomi
jo
imul
push
pop
(bad)
adc
js
mov
fstp
popa
das
or
or
jne
ins
fwait
loop
rcl
in
lods
(bad)
ins
jb
movs
or
adc
mov
ds
and
mov
shl
inc
cld
push
enter
inc
adc
pop
xor
lock
fmul
cmp
test
lods
loopne
xor
jnp
cmps
pop
jl
rol
enter
jnp
push
fdivr
push
sbb
mov
les
push
sahf
sbb
in
xchg
scas
mov
(bad)
push
push
test
outs
and
jns
mov
inc
ins
mov
xor
push
dec
cmp
inc
retf
cld
ss
mov
ins
mov
and
pop
push
sar
pusha
es
fst
addr16
dec
or
daa
xor
sub
rol
stc
sbb
sahf
in
adc
int3
push
mov
(bad)
push
mov
push
adc
push
cmp
je
xor
or
jno
pop
(bad)
sbb
push
dec
push
in
lods
fs
add
add
imul
or
cmc
mov
and
dec
pop
bnd
jns
dec
cmp
ja
mov
adc
jo
adc
es
xor
enter
int3
push
sbb
ret
fiadd
inc
dec
out
sbb
add
add
and
adc
inc
mov
jne
repnz
add
movups
push
cmc
inc
adc
cmp
outs
inc
or
cmp
push
xchg
ss
push
in
movs
inc
or
(bad)
lock
inc
or
stc
mov
push
or
xor
add
push
xor
mov
je
pavgb
xor
je
dec
and
cmp
shl
xchg
jae
mov
loopne
pushf
sbb
aam
and
sahf
xlat
ins
out
lea
(bad)
or
out
add
adc
or
je
aas
adc
outs
add
aaa
shl
add
mov
popa
cmp
rcl
push
pop
out
jns
lock
mov
(bad)
ficomp
aas
jno
imul
mov
mov
add
push
enter
sbb
push
aam
neg
outs
or
stos
retf
movs
sbb
cs
push
loopne
out
ds
lock
cmp
mov
or
outs
pop
sbb
add
mov
add
ins
lods
pop
add
cld
outs
inc
and
nop
pop
push
enter
fs
in
inc
or
or
mov
cwde
mov
nop
and
push
or
sbb
into
or
jmp
push
bnd
add
push
add
pop
pop
in
outs
iret
js
add
test
or
xor
jmp
inc
sub
xor
stc
je
pop
iret
cmp
sbb
cwde
or
cmp
xor
das
or
mov
aad
test
xchg
xor
je
mov
es
repnz
(bad)
jo
jo
mov
sbb
jle
loope
push
cmp
mov
xor
je
imul
cmp
inc
loopne
popa
fdiv
cwde
xchg
iret
add
sub
xchg
in
xchg
ins
popa
sbb
xor
jnp
in
or
xchg
adc
sub
sbb
xchg
fwait
nop
out
nop
(bad)
into
push
push
add
in
and
jmp
xor
test
xchg
or
outs
nop
das
pop
and
icebp
adc
ret
pusha
mov
cmp
test
xor
nop
imul
xor
cmp
loopne
and
mul
push
xor
mov
or
and
or
push
imul
sti
aad
inc
and
pop
int
shl
pushf
and
push
imul
adc
adc
cmp
sbb
dec
pop
mov
sbb
call
mov
idiv
mov
xchg
push
scas
sub
push
loope
and
mov
mov
inc
je
xor
add
rcr
adc
data16
inc
sbb
fadd
test
scas
dec
add
dec
or
push
loopne
adc
sub
call
lock
mov
icebp
dec
push
(bad)
adc
jnp
or
ret
pop
jmp
xchg
inc
dec
and
dec
nop
into
and
push
xchg
adc
mov
inc
ds
les
adc
cmp
cmp
leave
inc
sbb
cmc
add
dec
add
adc
inc
add
xor
sbb
push
scas
(bad)
in
and
and
ror
xor
fwait
je
and
cs
aam
xchg
inc
mov
sbb
clc
add
fild
mov
retf
or
push
mov
sub
or
or
add
jge
shl
dec
or
sar
mov
pop
cli
push
sbb
lock
test
inc
xor
ret
add
enter
cmp
jp
or
jbe
aad
jmp
stc
push
pusha
jmp
inc
inc
cmp
or
sub
call
and
mov
sub
xchg
ret
cmp
push
imul
push
pusha
scas
in
push
jo
push
or
inc
push
movs
inc
clc
cmp
jp
inc
sbb
dec
call
es
dec
sbb
cmp
imul
into
sub
sub
inc
sub
or
mov
pop
test
int
pop
fadd
push
pop
icebp
in
push
pusha
dec
outs
adc
lahf
lock
add
test
test
sbb
mov
in
adc
push
inc
cmp
inc
(bad)
hlt
xchg
aam
les
idiv
mov
and
cli
or
pop
(bad)
pop
dec
cs
out
push
xchg
out
inc
jmp
gs
xor
and
jmp
leave
jne
clc
pop
popa
mov
xor
cmpxchg
cmps
and
sub
outs
mov
or
push
xchg
aam
inc
test
jne
add
mov
or
push
add
es
xchg
adc
dec
sub
adc
or
mov
(bad)
(bad)
mov
arpl
fs
jnp
adc
add
movs
inc
xchg
rol
adc
push
rcr
cmp
cmp
ja
sbb
ins
adc
jmp
mov
or
jnp
mov
cmp
jg
push
add
pop
and
xor
xor
cmp
sub
(bad)
test
pop
daa
mov
jae
dec
out
mov
pop
mov
jmp
pop
pusha
jmp
cmp
push
add
fiadd
sub
jle
loop
jbe
sti
sub
cmp
push
sti
sbb
xlat
cmp
pop
xor
into
mov
cmp
je
in
outs
dec
dec
cmps
aaa
add
pop
rcr
cmp
in
in
fist
push
fld
inc
in
pop
jne
jbe
dec
mov
mov
or
adc
fsub
mov
movs
mov
inc
and
and
sbb
pusha
or
sub
or
sbb
sub
mul
gs
cmps
in
call
sbb
xchg
addr16
cmp
inc
imul
pop
push
or
leave
in
push
xor
out
test
sbb
pop
cmp
and
cmp
nop
pop
pop
mov
sbb
mov
push
fldenv
sbb
lods
jbe
lods
cmp
ret
and
dec
inc
push
inc
cmp
addr16
test
ins
dec
pushf
add
push
cmp
cwde
sbb
sub
cmp
add
shl
mov
cmp
push
or
or
sbb
cmp
(bad)
leave
rcl
sbb
push
and
(bad)
mov
pop
jg
nop
and
push
pop
aas
cwde
sub
call
xor
(bad)
mov
jbe
(bad)
iret
or
in
inc
inc
and
sbb
xchg
inc
aas
push
hlt
aas
and
add
and
sub
sub
aaa
add
fdiv
pop
pop
mov
push
xor
aaa
add
add
push
sbb
cmp
lock
mov
mov
jae
imul
sbb
inc
xchg
ja
sub
clc
nop
add
test
adc
sbb
sbb
cmp
push
fsub
push
dec
add
cmp
cmp
dec
inc
es
rol
aaa
cmc
test
inc
inc
push
add
mov
dec
data16
adc
sub
ror
cmps
pop
inc
dec
xor
mov
cld
ret
arpl
xor
jmp
push
xor
stos
jle
adc
sbb
aam
xor
inc
outs
xor
inc
mov
cmp
hlt
inc
lock
mov
in
xor
xor
data16
dec
sub
mov
popa
xor
es
lds
add
inc
inc
mov
mov
mov
lock
add
pop
les
sbb
mov
loop
mov
cmp
daa
mov
pop
sbb
or
out
cmp
pop
movs
or
stc
test
and
pop
je
adc
mov
push
das
push
sbb
inc
je
cmc
push
add
scas
jge
js
dec
mov
jo
loopne
mov
ins
jecxz
test
es
cmp
cld
scas
sbb
adc
lea
ret
out
jle
test
adc
and
jl
inc
xor
xor
seta
ss
cmp
sahf
dec
mov
aam
fcomp
mov
dec
cmps
pop
or
adc
fiadd
push
mov
xchg
and
pushf
pop
sbb
sbb
inc
adc
aaa
cwde
and
sub
mov
or
outs
icebp
and
rol
or
push
in
jmp
adc
xor
mov
nop
xor
and
mov
mov
inc
jbe
movs
gs
call
adc
inc
jae
and
pop
cmps
out
or
or
pop
xchg
sbb
sbb
push
fistp
cbw
pop
or
leave
dec
add
je
stos
lock
jmp
and
dec
jne
sbb
dec
mov
inc
mov
fwait
pusha
sbb
cmps
xor
das
xchg
mov
lods
daa
pusha
dec
sub
loop
inc
xor
aad
inc
fiadd
js
fisubr
push
and
sbb
adc
xchg
xlat
mov
xor
sar
arpl
sahf
call
mov
mov
adc
test
add
jg
jnp
test
fdiv
outs
sar
mov
iret
xor
jp
out
pop
mov
cmp
lds
push
mov
pop
mov
(bad)
ret
or
push
inc
cli
rcr
sub
add
adc
mov
cdq
stos
addr16
and
mov
ins
and
jne
lahf
jmp
(bad)
sti
dec
sbb
and
xor
jg
sbb
jno
jmp
mov
jge
aad
cmp
push
in
push
clc
jae
mov
or
xor
sub
xor
sbb
pop
dec
push
cmp
jne
popa
fsub
jae
sub
or
or
inc
mov
fsub
gs
xor
icebp
sub
cs
int3
adc
sahf
lods
push
cmp
xchg
mov
and
inc
pop
enter
ja
or
push
or
push
xor
scas
in
or
cmp
shl
(bad)
adc
jo
mov
ret
push
jecxz
inc
jmp
or
test
ror
and
add
outs
inc
xchg
jge
test
je
or
mov
dec
sbb
inc
ins
loop
pop
add
shl
test
sbb
mov
das
loope
xor
sub
dec
xor
adc
add
rol
or
and
lods
xchg
data16
sub
jmp
cmp
and
fmul
sub
or
or
xor
pusha
add
push
ja
sub
pop
mov
lea
jae
sbb
cs
stc
fadd
jne
es
mov
je
mov
mov
or
jmp
outs
sub
adc
dec
movs
pop
add
xchg
xchg
add
movaps
xor
(bad)
lock
push
inc
add
push
jmp
push
dec
arpl
shl
jmp
in
bound
xor
inc
iret
sar
adc
jle
out
and
or
mov
add
push
and
in
lock
or
das
retf
jle
or
adc
hlt
cmp
adc
test
dec
ret
xchg
inc
xor
fdiv
lea
dec
pop
add
mov
pop
xor
cmp
adc
mov
das
outs
add
add
or
lock
cmps
cmp
sbb
lock
inc
je
and
mov
(bad)
dec
adc
sbb
test
pop
push
or
mov
jge
mov
lea
test
and
sub
imul
pop
or
inc
mov
mov
or
add
mov
jle
cmp
lea
or
xchg
int3
enter
and
cmp
adc
xlat
dec
adc
inc
add
aam
imul
add
xadd
lock
out
aad
inc
dec
dec
or
out
xor
pop
in
add
push
mov
or
test
inc
pop
clc
pop
popa
aam
je
out
enter
jle
mov
push
jo
sbb
daa
test
inc
in
xor
jle
retf
push
movs
adc
push
inc
call
call
inc
loopne
in
sub
je
sub
sub
clc
shl
jg
adc
adc
cmp
jo
mov
push
leave
nop
rcl
retf
outs
add
loope
adc
adc
enterw
dec
lods
stc
test
sub
fmul
shl
(bad)
xor
jne
lods
push
aas
clc
popa
push
bts
add
jl
push
fsub
or
enter
dec
pusha
jo
inc
iret
mov
pop
jb
mov
js
push
test
push
pusha
pusha
jbe
cmp
push
cmp
jle
aam
jbe
popa
lahf
enter
xor
inc
push
dec
add
mov
pop
mov
lods
imul
into
push
push
ret
mov
fucomi
jne
push
sbb
jnp
fidivr
and
imul
cwde
push
push
in
mov
adc
fisttp
outs
sub
push
push
inc
cmp
sbb
pop
dec
call
bound
(bad)
jle
cmp
add
imul
and
sub
jne
push
add
add
shl
nop
or
or
mov
cmp
adc
ins
rcr
xchg
outs
retf
(bad)
or
cmp
rcl
mov
pop
sub
dec
sub
jge
sbb
mov
in
data16
add
aaa
pusha
movs
cmp
sub
mov
xchg
cmps
mov
aaa
dec
cli
xor
je
movs
dec
dec
cmp
mov
lods
aad
mov
push
pop
pusha
cwde
add
or
push
sbb
add
ret
ins
lds
mov
push
inc
cwde
and
mov
cmps
adc
and
sub
(bad)
xor
push
add
fist
push
lds
sar
mov
add
stos
pusha
iret
xor
mov
adc
mov
dec
pop
push
push
adc
xor
fwait
and
iret
jo
dec
clc
lods
(bad)
lods
pusha
push
ror
mov
dec
enter
add
aas
mov
lea
push
jg
push
std
js
and
enter
push
mov
aaa
mov
xor
fsubr
cld
loope
push
sbb
and
lahf
test
mov
sub
daa
push
pop
int3
arpl
leave
mov
dec
xor
sbb
(bad)
add
push
fisub
jno
xor
push
adc
sahf
movs
dec
sbb
push
sbb
inc
sbb
pop
sub
push
cld
and
dec
test
push
fcom
pop
and
or
add
inc
and
and
xchg
mov
sar
dec
mov
adc
psubq
bound
mov
dec
pop
and
inc
inc
pop
or
mov
mov
or
(bad)
push
mov
adc
xor
mov
movs
fistp
push
mov
cmp
xlat
mov
and
je
ja
sub
sub
(bad)
mov
push
lock
jge
test
jecxz
lock
pop
loopne
jmp
in
fwait
sub
cs
retf
(bad)
out
(bad)
out
add
jne
inc
ss
mov
push
scas
xor
daa
cld
pop
cmp
sti
adc
add
mov
push
jo
fcom
and
xchg
and
push
ss
and
es
mov
add
and
sub
inc
inc
xor
sbb
jnp
call
jmp
rcr
dec
dec
test
in
jno
rcl
sbb
or
ss
inc
in
jns
mov
cmp
fmul
dec
mov
(bad)
push
ror
adc
xchg
dec
(bad)
push
pop
and
(bad)
stos
les
mov
jl
mov
or
icebp
pop
loope
sbb
imul
pop
mov
cwde
pop
push
push
cmp
cs
mov
cmp
xchg
jg
lods
cmp
adc
xchg
dec
pop
lods
mov
inc
push
xchg
(bad)
lock
or
fdiv
lahf
rcl
scas
nop
int
push
or
or
jno
sub
cmp
(bad)
inc
push
nop
push
cs
xor
pop
loopne
rol
aad
cmps
xor
pushw
add
or
pop
sbb
fst
in
and
mov
push
scas
or
dec
cmc
adc
loopne
dec
sub
inc
mov
sub
sbb
sbb
mov
jge
and
bound
test
iret
in
push
sbb
pop
into
in
inc
sub
and
int
repz
mov
imul
call
and
outs
add
mov
sbb
xor
push
in
outs
leave
loopne
in
dec
add
in
add
pop
add
popf
data16
pand
js
mov
fadd
mov
or
or
sub
sub
shr
cmc
ret
clc
addr16
test
xor
gs
push
(bad)
sub
pop
xchg
inc
lock
mov
repnz
adc
and
daa
inc
nop
jge
or
clc
mov
mov
add
clc
sbb
sbb
inc
xchg
dec
test
or
or
hlt
mov
test
and
lea
ja
leave
push
ret
sbb
jmp
imul
adc
cmps
push
add
popa
leave
sbb
or
daa
adc
repnz
add
jne
test
or
or
clc
cs
out
in
sahf
daa
sbb
jge
clc
jmp
pop
sub
dec
mov
inc
or
add
enter
push
enter
jb
mov
sbb
sbb
inc
psubb
push
dec
dec
dec
mov
(bad)
int3
xchg
test
sub
add
xchg
mov
enter
loopne
inc
movs
nop
retf
sub
call
loopne
call
inc
popf
mov
and
dec
test
sub
imul
mov
arpl
inc
xchg
stos
sub
pop
push
mov
pop
xchg
pop
test
dec
clc
lods
pusha
inc
and
xchg
pushf
or
pop
and
dec
push
test
aaa
and
cdq
or
and
cmp
int
lods
sti
test
lock
pause
mov
pop
sub
inc
add
enter
add
mov
push
cmp
mov
push
rcl
adc
aam
pop
leave
js
(bad)
inc
stc
popa
outs
outs
jg
adc
mov
sub
stos
mov
or
je
retf
adc
inc
cmp
add
jle
(bad)
and
push
inc
aad
sub
and
mov
mov
jge
ins
sbb
test
or
mov
inc
rcr
pop
pop
inc
or
shr
fmul
cmp
inc
mov
imul
jno
retf
pop
and
add
mov
cmc
pop
mov
push
sub
sub
jg
test
test
pop
push
and
or
imul
push
jne
sub
aas
adc
mov
aaa
js
and
out
inc
ja
dec
xor
out
out
mov
mov
sar
repz
pop
js
or
or
dec
ror
jmp
cs
hlt
pop
daa
dec
adc
pop
push
sub
dec
sub
mov
xor
jl
or
in
adc
enter
xor
push
jns
ror
or
jg
adc
add
adc
cmp
adc
add
push
sub
loopne
je
loopne
jle
sbb
mov
lock
int
rcr
mov
fistp
mov
add
or
add
mov
push
clc
or
cmps
lods
or
data16
dec
je
hlt
xchg
add
push
loope
std
icebp
inc
cmp
pusha
psubsb
push
or
stc
or
movs
in
inc
add
or
shl
clc
adc
push
sbb
mov
add
fldcw
xor
leave
add
jbe
movq
mov
jmp
(bad)
xchg
leave
leave
leave
test
fcomp
push
sbb
pop
scas
inc
xor
loopne
lea
jge
mov
adc
fst
retf
div
dec
cmp
add
iret
loope
dec
pop
sahf
xlat
test
mov
adc
add
int3
imul
jmp
pop
enter
test
sbb
pop
and
into
push
jbe
maxps
shr
(bad)
les
fnsetpm(287
sub
sub
retf
repnz
les
ret
mov
sub
push
dec
or
rcl
pop
xor
push
js
loopne
addr16
xchg
inc
pusha
cld
es
std
add
imul
jae
jge
pop
xchg
or
mov
rcl
sub
or
fild
adc
(bad)
lods
scas
imul
das
pop
iret
jg
js
add
pop
and
and
add
or
mov
mov
dec
stos
movs
jns
(bad)
ja
lods
pop
gs
inc
pop
mov
in
ret
ds
fist
push
sbb
movhps
dec
push
add
add
lock
pop
mov
jl
fsub
rcr
int
cmp
xlat
test
je
ret
sbb
inc
les
ins
fstp
push
adc
mov
sar
sub
jno
mov
mov
(bad)
and
sub
mov
rol
xor
popa
retf
sbb
mov
popa
adc
mov
and
inc
shr
shl
cmp
lea
loop
cdq
jo
dec
dec
xchg
cmp
adc
mov
sub
cdq
clc
add
das
lock
push
jno
lea
pop
stos
cmp
push
cmp
xchg
ret
mov
lods
out
add
or
pusha
pusha
es
add
shr
arpl
aas
dec
pusha
gs
add
fidivr
scas
dec
cmps
xor
cwde
mov
ds
adc
rcl
cmp
scas
adc
add
mov
adc
outs
in
mov
ja
je
pop
or
adc
pop
xor
mov
mov
ja
sbb
sub
aam
addr16
adc
ror
adc
pop
xor
xor
fwait
js
loope
xlat
pop
mov
fdiv
pop
or
inc
cmp
mov
add
out
cmp
cmp
inc
cmp
and
push
dec
je
mov
add
ret
dec
and
mov
xor
lahf
or
mov
adc
hlt
xor
sub
or
xor
in
shl
xchg
inc
sub
(bad)
in
mov
jae
xchg
jo
into
or
push
push
xchg
lods
daa
inc
std
addr16
(bad)
pop
in
call
ds
dec
pop
call
pusha
pop
data16
adc
rcr
inc
sbb
fild
fimul
mov
push
ret
lock
sbb
(bad)
jle
(bad)
clc
cmp
push
movhps
lock
mov
mov
xor
retf
or
aad
mov
shr
cmp
and
shl
inc
les
sbb
dec
pop
or
std
or
xchg
aam
inc
das
push
(bad)
push
jg
or
sub
xchg
xlat
jl
lds
idiv
push
jo
pop
popa
xchg
jo
push
jl
jae
inc
mov
or
inc
repz
add
inc
(bad)
fdiv
imul
mov
inc
and
jne
xor
or
scas
and
lods
jo
fimul
xchg
aaa
test
mov
cmps
mov
test
xor
pop
ss
(bad)
(bad)
(bad)
fwait
sbb
sbb
(bad)
pop
push
fs
and
xlat
and
dec
das
fnstcw
enter
(bad)
or
into
adc
sub
mov
xor
in
push
push
or
add
inc
inc
in
add
or
pop
in
cmp
iret
or
cmps
xor
push
push
psubsw
sub
jnp
sbb
xchg
shr
(bad)
add
pop
push
push
mov
out
bound
push
out
pusha
or
cmps
jecxz
push
fist
or
jo
jmp
test
pop
mov
test
(bad)
push
adc
add
sbb
mov
lock
test
pusha
ret
sbb
fs
fsub
jnp
xor
push
mov
xchg
adc
aad
pop
xchg
movs
ja
int3
out
das
lock
push
iret
pusha
or
ins
ret
ret
adc
add
in
pop
mov
sub
mov
mov
mov
movs
call
cmp
pop
rcr
jb
sti
lea
pop
cmp
je
mov
inc
add
rol
xor
pusha
or
ret
adc
fstp
lock
mov
movs
xchg
mov
fmul
mov
in
daa
mov
call
loop
sub
xor
push
dec
add
and
inc
je
pop
add
mov
push
jb
inc
push
mov
xor
adc
cmp
pop
cmp
xchg
sub
push
sbb
jle
pop
int3
mov
mov
(bad)
or
push
xchg
xchg
adc
add
or
stos
ret
add
in
jge
imul
pop
xor
scas
(bad)
pop
fs
xchg
inc
or
and
inc
jb
sub
xchg
pop
and
xor
leave
inc
jb
inc
or
pop
and
les
push
xor
fiadd
and
xlat
pop
adc
and
cmp
jnp
inc
test
and
push
das
cmp
push
ins
(bad)
icebp
xor
dec
movs
and
jg
test
adc
retf
outs
or
lds
out
movs
or
aas
test
pop
push
jmp
cmp
pop
pop
add
push
fs
xchg
scas
push
inc
xor
invd
js
js
push
je
in
ins
retf
and
mov
pop
js
xchg
lock
clc
outs
mov
jp
inc
pop
test
fs
push
push
(bad)
jge
dec
movs
vmovhps
inc
enter
cmp
icebp
pop
mov
(bad)
mov
test
test
stos
ss
mov
ret
scas
hlt
push
sbb
bound
pushf
xor
sub
pusha
(bad)
mov
pop
inc
mov
in
jne
jge
stos
cmp
(bad)
adc
xor
in
mov
push
fwait
and
sbb
cmp
pop
jne
inc
xchg
cwde
pop
push
jg
nop
pop
ds
dec
cmp
sub
push
dec
cwde
(bad)
ins
and
sub
jne
jge
into
jmp
xor
rol
inc
add
mov
adc
mov
pusha
pop
jnp
xchg
cmps
mov
xor
mov
mov
push
popa
leave
fld
call
dec
in
inc
mov
dec
inc
lahf
xchg
jo
add
sbb
push
mov
scas
push
pop
in
jo
in
pop
dec
test
add
inc
cs
sub
sub
mov
inc
rol
les
cmps
adc
fcmovb
xchg
ins
dec
jb
jbe
add
(bad)
push
les
ss
adc
lock
call
movs
test
dec
retf
mov
hlt
mov
sbb
mov
adc
dec
enter
aam
inc
in
sar
stc
fs
jns
adc
enter
mov
jmp
daa
dec
push
jbe
jns
fmul
popa
cmp
adc
fild
scas
dec
imul
dec
push
popa
dec
push
bound
cmc
mov
out
outs
das
cmp
(bad)
pop
push
add
rol
pop
test
dec
sti
shl
daa
ins
lahf
mov
rol
aaa
dec
xor
dec
enter
sub
sbb
xchg
pop
xchg
push
xor
mov
cld
fcom
xchg
mov
mov
data16
out
mov
fistp
inc
lea
fmul
add
lahf
cmp
nop
minps
loopne
dec
cmp
cli
mov
inc
ins
mov
inc
pop
je
cdq
cmpxchg
shr
lods
retf
mov
pop
cmp
sbb
mov
sub
mov
and
sub
movs
adc
sub
ror
push
or
test
mov
and
pop
or
sbb
cmp
std
adc
or
retf
(bad)
std
popf
sub
js
or
ins
push
pop
jb
dec
xor
dec
sbb
sbb
adc
stc
fcomi
add
clc
jo
sbb
dec
mov
xor
ins
lods
fdivr
inc
call
push
add
loope
push
sbb
jne
push
mov
stos
scas
sub
leave
pop
xchg
dec
xchg
jne
adc
adc
adc
aas
add
(bad)
dec
pop
gs
aam
and
jo
jge
jne
shl
inc
push
imul
add
out
(bad)
pop
cmp
push
aaa
xchg
aaa
fcomp
nop
scas
enter
add
clts
cmp
mov
inc
add
mov
and
push
cmps
(bad)
mov
xor
and
test
sub
in
adc
popa
sbb
je
sbb
pushf
cli
adc
mov
lods
mov
stc
ret
rcl
pop
inc
sbb
add
or
cmp
adc
retf
test
sub
and
sbb
add
xor
fsub
or
jle
aaa
dec
(bad)
in
and
ret
ret
rcl
(bad)
cmp
or
jmp
jne
push
push
add
sub
mov
mov
adc
xchg
pop
cmp
and
push
cmp
shr
add
xor
test
push
cdq
mov
test
test
adc
inc
adc
data16
add
fadd
jo
jo
rol
nop
pop
mov
mov
test
in
pushf
mov
jo
push
sar
xchg
sbb
mov
stc
out
and
or
into
mov
xchg
inc
xchg
(bad)
adc
jo
movs
lock
imul
neg
(bad)
(bad)
and
cs
add
or
mov
add
pop
mov
adc
hlt
inc
push
stos
and
xor
lock
mov
sub
or
pop
mov
mov
or
jno
ds
dec
cwde
sbb
sbb
nop
jns
rcl
mov
lock
ror
mov
stos
add
cdq
(bad)
pop
mov
bound
fsubp
and
inc
sar
pop
cmp
push
psraw
inc
pusha
test
js
mov
test
fs
cmps
addr16
xor
pusha
test
dec
jnp
rcl
cdq
ins
or
imul
sub
test
xchg
push
bound
or
popa
out
mov
adc
and
sbb
sahf
jp
and
pop
push
sahf
inc
aas
aaa
std
add
cmp
icebp
adc
xchg
xor
mov
sbb
loopne
fwait
js
and
es
jmp
test
shl
das
ret
(bad)
and
or
inc
or
and
sbb
sub
ins
or
nop
pop
xor
bound
lahf
cmp
in
jl
hlt
int3
and
pop
cmp
add
or
nop
out
dec
fsub
sbb
iret
mov
popa
cmp
stc
stc
and
inc
hlt
mov
xchg
add
call
dec
clc
mov
movs
push
and
outs
(bad)
sti
adc
popa
xchg
and
add
sub
add
pop
xchg
js
mov
inc
loope
mov
inc
stos
dec
retf
fsub
xor
mov
or
lock
or
xchg
mov
pop
sub
dec
add
sbb
aam
out
pop
stos
dec
adc
jne
inc
pusha
pusha
add
cmp
fnstcw
inc
sub
xchg
popf
inc
push
inc
jb
arpl
fimul
push
test
and
aaa
sar
cmp
js
(bad)
or
jb
adc
ret
cmp
dec
aaa
aaa
lock
cmp
xlat
or
shr
and
nop
push
cmp
and
and
pop
add
ja
and
sti
xor
test
shr
jle
hlt
jmp
mov
sbb
xor
cmpps
cmp
in
loopne
int
mov
add
sub
movs
jae
pop
push
cld
lods
mov
dec
cmp
cli
arpl
aad
ficomp
push
cli
cmpxchg
xlat
mov
mov
jne
inc
sub
(bad)
in
dec
cwde
jp
in
addr16
add
add
loopne
ret
in
aam
div
jg
and
xchg
add
adc
adc
push
add
sbb
pop
inc
pop
mov
jne
les
test
ret
push
ss
stos
push
lahf
cmps
pop
sub
(bad)
ins
enter
sbb
cmp
and
push
hlt
sbb
add
or
(bad)
hlt
add
repz
bound
shr
xchg
pop
ret
fs
pushf
and
icebp
arpl
mov
arpl
inc
addr16
and
add
sbb
push
xchg
enter
push
or
out
add
call
cdq
adc
jg
sbb
or
out
cmp
fidivr
cli
enter
mov
(bad)
out
rcl
jmp
mov
sub
mov
jl
mov
ror
pop
mov
popa
mov
sub
pop
add
pusha
cli
cli
int
inc
pop
out
ret
push
mov
sbb
daa
mov
lahf
sub
add
cmp
nop
inc
dec
loopne
addr16
rcl
ins
out
retf
push
mov
sbb
mov
cli
imul
jb
test
ret
pop
mov
loope
pop
and
aam
ret
ret
mov
mov
arpl
cli
dec
(bad)
mov
pop
pop
fs
or
inc
inc
imul
cmp
pop
cmovbe
cs
or
cld
push
jb
adc
repz
sti
mov
add
(bad)
dec
and
mov
loope
xor
jno
pop
cmp
cmp
out
sti
sub
xchg
jg
rol
push
js
(bad)
sbb
inc
sbb
(bad)
mov
inc
out
or
push
popa
pop
dec
pusha
cmp
or
ja
push
adc
mov
cwde
or
adc
arpl
mov
mov
ins
fist
mov
ins
sub
hlt
or
jmp
ret
icebp
mov
xchg
jb
or
dec
lock
add
inc
(bad)
std
jle
jae
push
sub
dec
add
and
ins
sahf
cmp
inc
sub
test
xor
jmp
add
inc
lods
pop
push
stc
inc
test
xchg
mov
or
div
add
push
inc
jne
popa
nop
xchg
inc
cs
inc
inc
inc
inc
adc
pop
pop
mov
and
inc
inc
jne
or
je
dec
adc
jmp
or
mov
test
je
push
ins
or
push
cmp
movs
mov
loopne
add
xor
jb
xchg
inc
adc
xor
shl
and
out
push
xor
rol
mov
xor
xor
mul
pop
out
jge
test
push
sbb
and
loopne
dec
iret
jge
or
jb
outs
xor
out
add
repnz
fld
popf
sbb
add
xor
sti
test
lock
inc
push
imul
xchg
loope
xor
pop
ret
jecxz
inc
call
pop
fidiv
sub
xor
retf
or
clc
mov
(bad)
js
cmp
push
dec
clc
sub
js
enter
rol
cmp
(bad)
(bad)
sub
sbb
repz
sti
inc
add
adc
pop
sbb
xor
add
aaa
add
in
inc
and
sbb
jl
ja
nop
or
jb
mov
retf
or
push
in
sub
lods
xchg
or
xchg
and
iret
sbb
adc
dec
push
aaa
in
and
jmp
push
lods
gs
js
and
jl
ss
mov
clc
nop
xchg
jg
mov
fs
mov
mov
push
adc
test
jno
sbb
add
sti
dec
psrld
adc
push
rcl
test
sub
xor
inc
cmp
xchg
jo
jg
lock
aaa
add
xchg
es
seto
stos
add
data16
outs
push
sbb
push
mov
push
aas
xor
push
test
out
aaa
fsubr
lock
test
xor
inc
lods
(bad)
xchg
inc
cmp
cld
loopne
cmp
jg
je
pop
mov
push
adc
mov
mov
jg
sbb
cmp
adc
mov
scas
xor
rcl
imul
or
or
xchg
push
xchg
or
out
bound
jne
mov
int
nop
ss
cmp
jne
xor
dec
test
sbb
js
add
shl
inc
or
ret
add
(bad)
icebp
xchg
imul
cmp
mov
sbb
psrlq
loopne
jns
fcom
pop
mov
mov
inc
mov
pop
push
retf
inc
jbe
hlt
data16
or
js
add
and
test
xor
mov
add
je
mov
(bad)
cmp
adc
pop
enter
scas
nop
mov
rol
jbe
and
(bad)
scas
xchg
sub
test
add
xor
mov
sahf
push
pusha
call
pop
adc
ja
inc
arpl
inc
jl
das
aad
pop
les
mov
jmp
push
add
push
jne
push
lods
cmp
imul
in
push
std
lea
inc
test
add
lea
adc
test
cmps
add
test
and
out
adc
push
sbb
adc
or
mov
xlat
int
sub
jb
push
and
arpl
xor
jmp
pop
enter
fimul
sbb
xchg
and
sub
sub
jp
pushf
mov
add
js
and
cli
xor
jle
mov
enter
lods
and
mov
cdq
sub
and
aam
jge
ret
addps
mov
imul
ds
or
or
jns
add
push
mov
fmul
lock
test
sti
ret
mov
sbb
dec
aam
add
dec
push
xor
or
test
popf
xor
xor
in
ret
mov
sbb
inc
cmp
and
push
mov
arpl
popf
cdq
loope
sub
or
jge
ins
push
push
lea
mov
adc
mov
pushf
lods
mov
or
test
xchg
test
inc
cwde
nop
dec
push
movs
ret
adc
sbb
xchg
add
sbb
mov
mov
dec
in
dec
inc
inc
mov
inc
ret
imul
cwde
out
or
mov
loop
fadd
xor
fist
pop
ret
aam
jmp
loope
pop
leave
and
mov
loope
fdiv
push
shr
test
xchg
dec
sti
cmps
mov
int3
push
or
push
sbb
cmp
and
mov
jbe
jmp
mov
and
xor
cmp
movs
ficomp
inc
stos
mov
pop
mov
push
push
adc
icebp
sbb
or
imul
scas
xlat
sbb
jbe
add
les
push
mov
sub
mov
mov
lds
adc
shl
inc
popa
add
or
aaa
arpl
and
xor
pop
push
popa
je
mov
and
xor
xor
inc
sbb
push
(bad)
cmp
push
inc
xor
add
int3
popa
loope
mov
movs
jmp
add
rcl
das
(bad)
out
jnp
or
js
add
jo
cmp
or
and
push
pop
and
sbb
sbb
xor
int3
jbe
mov
adc
outs
add
mov
mul
inc
xor
daa
xor
adc
dec
lds
or
stos
push
pop
das
push
jbe
sub
pusha
push
push
push
(bad)
in
daa
mov
sbb
shl
or
(bad)
or
dec
or
xor
add
inc
ja
and
cmps
and
std
pop
inc
xchg
add
inc
daa
xchg
and
sbb
lock
loopne
mov
icebp
and
add
loopne
ss
pop
mov
sub
or
xlat
inc
les
call
or
or
aas
sar
dec
adc
cdq
mov
rol
jmp
and
je
add
sbb
pop
fabs
movs
and
scas
cmps
inc
jle
xor
xchg
out
sub
mov
and
xchg
rol
inc
sbb
popa
jne
pop
mov
es
jo
jge
jnp
ins
xchg
or
loope
pop
hlt
cmp
dec
or
adc
jbe
sbb
(bad)
adc
aam
test
imul
sub
dec
in
xor
or
add
rcr
jecxz
or
scas
or
jo
or
ret
mov
mov
xor
neg
dec
cmps
aad
inc
xchg
xor
aas
or
aam
mov
and
mov
add
inc
xchg
call
scas
jne
mov
popf
xor
add
imul
ret
dec
pop
adc
jl
inc
sub
mov
xor
or
int3
pop
daa
sbb
mov
sbb
sub
add
push
mov
aam
mov
scas
mov
sbb
sub
cdq
arpl
push
retf
jge
sbb
enter
dec
fadd
xor
movs
xchg
inc
adc
call
outs
in
inc
clc
push
loopne
hlt
cs
xor
in
adc
call
and
pop
cmp
or
lahf
xchg
aaa
fdiv
repnz
aam
pop
shl
push
and
pop
aam
push
cmp
xchg
xchg
js
ss
popf
mov
inc
sahf
ja
cwde
inc
cld
cmp
out
or
add
dec
movs
dec
mov
adc
adc
scas
pop
and
iret
cld
and
adc
syscall
stos
nop
sbb
mul
cmp
sub
lock
sub
test
add
mov
add
pop
add
fidiv
out
sub
(bad)
retf
imul
or
popa
ins
pop
mov
jo
add
push
jp
js
inc
jb
outs
adc
mov
and
mov
inc
ds
mov
shl
adc
fistp
xor
cmp
cs
rol
mov
push
inc
mov
mov
push
ror
mov
and
add
clc
mov
ja
sahf
mov
fmul
jo
cmp
pop
mov
inc
ins
rcr
loopne
jecxz
push
js
ror
xor
clc
xchg
sbb
pusha
outs
xor
popf
jb
loopne
out
fwait
lahf
lods
fstp
ror
aam
in
or
xor
adc
cmp
inc
pushf
xchg
pushf
inc
mov
fwait
push
aam
loope
dec
adc
js
mov
xchg
mov
jb
cmp
xor
lock
stc
call
aad
rol
repz
maxps
rcl
test
push
sub
adc
popf
cmps
enter
inc
mov
(bad)
and
into
lds
fs
pusha
pop
dec
mov
je
inc
mov
sbb
cs
push
push
sub
jge
pop
nop
fild
sub
jns
adc
and
loopne
push
lahf
pop
xor
mov
adc
inc
fiadd
or
aas
or
addr16
cmp
add
jmp
aam
leave
or
push
push
add
jmp
cld
sub
push
dec
push
in
cs
in
inc
adc
lea
pop
mov
xor
lds
jl
pop
ss
ins
bound
jb
arpl
sar
and
shl
ret
lds
mov
mov
adc
adc
or
or
(bad)
ins
imul
adc
aas
fbstp
mov
or
push
mov
scas
or
sub
or
sub
imul
adc
adc
movs
cld
push
bound
xor
fs
push
jmp
(bad)
or
fcom
xor
xchg
cmp
inc
lfs
push
imul
imul
push
ja
add
adc
or
fadd
or
pop
in
loop
and
mov
les
jno
mov
and
mov
(bad)
jae
xchg
add
jo
add
push
imul
sub
pop
mul
pop
push
clc
ds
in
cwde
pop
cld
jmp
out
jnp
rcr
push
stc
adc
data16
xor
pop
dec
aad
popf
ja
ins
sub
dec
enter
inc
jmp
mov
mov
or
push
or
in
inc
test
cmp
imul
daa
add
jbe
mov
cmp
scas
test
movs
push
jns
in
movs
sub
enter
sti
push
inc
jmp
xchg
fdiv
fild
and
lahf
pop
and
enter
aaa
in
test
cld
xor
add
cmp
xchg
adc
mov
aas
adc
in
test
jb
js
pusha
movs
inc
mov
xchg
movs
in
inc
add
out
push
inc
or
(bad)
fild
and
fs
inc
adc
enter
add
sbb
xchg
cmp
inc
inc
pop
and
jo
xor
inc
repnz
inc
add
loopne
stos
dec
mov
imul
imul
or
xor
cmps
rol
inc
xchg
sbb
push
pop
add
mov
js
mov
cmps
adc
mov
push
gs
push
jae
and
or
inc
lahf
and
mov
daa
mov
add
ror
jo
sar
or
add
nop
adc
adc
ins
mov
pop
cmp
dec
ja
push
push
inc
sub
nop
push
pop
inc
es
pop
pop
xchg
pop
mov
mov
mov
mov
push
lahf
pop
das
or
ins
sbb
rcl
xchg
add
mov
test
mov
dec
or
ficomp
popf
add
or
mov
dec
push
popa
jb
gs
jns
pop
fsubr
pop
or
add
(bad)
push
enter
stos
iret
out
push
lods
lods
iret
not
cmp
adc
shr
and
jmp
(bad)
leave
pop
js
(bad)
loop
dec
gs
push
and
sub
out
and
inc
mov
mov
(bad)
paddusb
add
mov
ja
add
add
or
dec
ss
or
push
test
shl
das
fld
arpl
lods
sbb
dec
and
add
push
xor
sbb
bound
in
inc
fcmove
xor
xchg
and
add
(bad)
push
out
and
and
ror
mov
(bad)
lods
pop
mov
push
push
int3
mov
popa
inc
add
test
or
adc
ja
sbb
mov
xor
or
retf
(bad)
scas
and
test
mov
cdq
mov
xchg
mov
push
dec
mov
push
aaa
movs
out
movs
mov
test
pop
lock
dec
shl
and
inc
sub
cmp
cmp
dec
inc
push
add
add
add
add
push
js
imul
pusha
add
add
jmp
pop
ret
or
or
mov
mov
clc
(bad)
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
pop
adc
jecxz
(bad)
fdivrp
(bad)
fdivr
fild
fcos
fdivr
xlat
call
call
call
clc
jmp
xor
call
call
dec
dec
dec
dec
dec
dec
add
dec
or
call
pop
add
and
adc
mov
push
pop
and
rcr
and
push
cwde
dec
and
ss
jns
mov
das
mov
and
int
push
mov
dec
push
mov
cs
pushf
or
sub
xor
sbb
push
js
shl
or
imul
retf
cmp
fmul
ds
cs
stc
retf
iret
mov
or
push
les
bswap
push
lods
sub
sub
fisub
sbb
cmps
pop
and
push
shr
jnp
push
jo
or
add
hlt
adc
xor
ds
neg
mov
cmp
mov
dec
dec
push
cld
arpl
xchg
pop
sbb
shl
jmp
or
xor
rol
lds
pop
xor
add
and
cs
fdiv
inc
in
lods
mov
cmp
popf
xor
dec
inc
push
add
cs
aas
dec
js
jp
mov
fldenv
fadd
inc
cmp
icebp
or
xor
xor
inc
or
sub
ret
rol
mov
lahf
add
push
jmp
inc
in
adc
rol
pop
enter
sbb
xor
xchg
in
or
lock
mov
je
lahf
pop
popf
or
inc
sub
or
inc
es
mov
sub
xchg
push
lock
push
(bad)
test
es
push
mov
fwait
aas
test
and
inc
push
and
or
mov
inc
or
daa
gs
test
outs
dec
ins
cmp
fwait
adc
and
cmp
jmp
push
xchg
sbb
sahf
fbld
inc
jbe
or
outs
ja
fcmovu
mov
or
push
popa
imul
sub
or
xchg
mov
mov
xchg
lods
gs
repnz
gs
push
or
jae
jns
or
mov
push
pop
(bad)
in
or
scas
cld
or
imul
cmp
ins
dec
dec
xchg
mov
add
std
xchg
ins
ss
dec
jnp
inc
mov
add
or
xchg
dec
jb
ja
mov
outs
mov
xor
jmp
add
scas
sbb
or
inc
xor
repnz
sub
mov
and
test
test
mov
mov
adc
jno
(bad)
cli
repz
pop
sub
adc
dec
xor
xor
jns
ret
push
and
mov
xor
bound
fdivr
pop
iret
retf
push
inc
cmp
inc
mov
pop
inc
fmul
in
(bad)
adc
outs
push
cmp
inc
js
mov
jno
adc
dec
adc
hlt
push
push
add
cmc
aam
cmp
inc
and
add
add
add
das
sbb
mov
add
add
adc
pop
sub
fcomp
lds
push
add
aaa
inc
mov
jg
xchg
mov
mov
mov
mov
mov
mov
inc
push
sbb
mov
mov
mov
mov
jmp
inc
mov
push
mov
ja
push
dec
mov
add
mov
mov
mov
mov
sbb
xor
push
inc
inc
inc
inc
bound
aam
adc
mov
push
mov
stc
or
fmul
mov
push
shl
push
movs
jns
iret
repz
in
push
push
imul
imul
ins
int3
out
ds
call
js
push
nop
cmp
jbe
jp
jnp
pusha
sub
push
jo
aam
in
or
call
push
jo
push
xchg
lock
cmps
mov
sub
popf
data16
out
sahf
data16
sbb
test
sar
hlt
jo
xor
jne
sub
enter
rol
mov
pop
add
ins
push
je
ja
idiv
pushf
xor
adc
repz
push
clc
push
mov
xchg
sbb
ss
int
sahf
sbb
push
dec
jne
sahf
in
jge
jbe
inc
xchg
(bad)
mov
js
jae
out
fdivp
fidiv
ds
push
je
xchg
jno
into
cmps
fld
xor
int
mov
and
or
aam
imul
push
clc
xchg
mov
sub
je
add
inc
cmps
out
xlat
sub
(bad)
and
or
pop
inc
pop
out
dec
in
ss
push
lods
push
push
mov
das
mov
jl
mov
and
pusha
mov
mov
test
out
sub
pop
mov
mov
mov
rcl
lahf
test
lods
mov
xchg
enter
lods
test
jo
cmp
mov
outs
les
adc
mov
in
mov
je
cmp
out
jo
imul
inc
leave
mov
mov
imul
xchg
movs
push
mov
out
sbb
add
adc
inc
mov
jnp
inc
jns
jbe
mov
cmp
mov
adc
call
pop
call
sbb
xchg
fwait
cmp
push
mov
push
sub
sub
je
scas
or
push
arpl
inc
cmp
pop
and
sub
clc
xchg
bound
pop
sub
scas
sar
add
jl
in
pushf
or
add
mov
mov
shl
clc
and
es
sbb
push
push
and
add
popf
mov
xor
sbb
push
dec
add
inc
imul
cmp
xadd
arpl
sbb
test
jo
(bad)
or
inc
cmps
push
mov
sbb
jae
adc
and
xchg
jl
inc
out
dec
pushf
push
adc
ds
sub
and
movs
ret
sbb
out
add
bound
shl
scas
pusha
dec
push
mov
dec
xchg
and
jns
jl
jae
xor
xchg
dec
dec
test
or
aam
aas
sub
sub
mov
dec
xor
push
call
jl
dec
or
inc
push
fs
dec
and
inc
push
fs
xor
sbb
(bad)
mov
mov
pop
ret
mov
bound
ins
ffree
in
cmc
cmp
sar
nop
xchg
repz
push
popf
imul
cs
(bad)
(bad)
sbb
(bad)
push
add
mov
xor
and
push
push
sbb
outs
mov
mov
push
and
pop
sbb
push
push
data16
je
lock
dec
xor
jge
int3
xlat
mov
fadd
inc
push
jb
fadd
loop
adc
cld
or
mov
mov
nop
in
fst
inc
pusha
sub
or
ds
bound
idiv
in
push
and
imul
pusha
(bad)
cs
pop
jp
xor
jns
test
mov
in
movs
in
shr
ds
nop
xor
ss
or
bound
jo
pcmpeqb
test
inc
rep
adc
pop
lods
(bad)
test
and
aaa
shl
sub
cmps
xor
pop
pop
test
push
inc
cmc
inc
lods
mov
sbb
xchg
fs
pop
test
in
adc
inc
mul
cs
(bad)
pusha
xlat
cmp
ret
js
lock
daa
push
cmp
push
add
adc
mov
dec
stos
or
push
pop
pop
mov
pop
or
or
pushf
retf
xchg
stos
push
add
cmps
pop
inc
pop
push
mov
add
dec
mov
fist
mov
inc
gs
push
leave
pop
adc
dec
nop
mov
rol
and
or
sub
jmp
(bad)
push
ret
(bad)
cs
cli
leave
ja
pop
dec
cmp
sbb
ror
lahf
sub
gs
rol
xor
in
aaa
aaa
aam
lea
lock
inc
arpl
fnstenv
hlt
and
pusha
mov
jmp
xchg
sbb
dec
inc
les
les
sbb
push
ficomp
push
jns
xor
push
sub
pop
mov
out
div
or
or
rcl
and
xchg
fdiv
pop
push
push
cmc
mov
arpl
je
adc
and
rcl
add
or
adc
int
dec
jne
xor
and
retf
mov
jne
cmc
test
jne
xchg
les
mov
xchg
rcr
adc
clc
xchg
sub
retf
xchg
push
add
or
cmp
or
sbb
mov
pushf
mov
push
push
cmps
cmp
and
jno
mov
and
mov
and
aas
inc
gs
aaa
inc
xor
test
cld
popa
mov
aaa
add
mov
into
inc
or
push
and
push
in
pop
leave
inc
push
aas
or
cmp
clc
push
add
or
adc
ret
(bad)
push
inc
ja
xor
mov
sbb
jle
mov
mov
call
push
or
lods
mov
mov
sub
mov
mov
inc
add
sbb
push
daa
push
sub
(bad)
test
test
lds
pop
movs
sti
aaa
aas
mov
xchg
(bad)
inc
aas
in
and
push
adc
rcr
and
pop
mov
xchg
rol
mov
sti
jmp
xchg
pop
xchg
(bad)
pop
sbb
pop
sub
(bad)
sub
xor
inc
lea
test
and
inc
loop
cmp
inc
inc
push
test
mov
xchg
xchg
pop
inc
xor
dec
dec
inc
or
retf
mov
dec
test
add
add
popf
dec
adc
inc
mov
and
dec
loopne
scas
fsub
cmp
int3
in
mov
je
mov
movs
adc
loop
xor
ds
dec
ror
dec
rol
mov
les
enter
ret
jp
adc
fstp
or
add
imul
jne
mov
imul
jg
pusha
pop
aas
jae
call
popa
cmp
xchg
pusha
pop
adc
mov
xchg
xor
daa
mov
mov
(bad)
and
fnsave
pop
pop
mov
setp
leave
shl
lds
jne
ss
mov
xor
xchg
mov
mov
loope
and
rcr
test
int3
dec
dec
jne
mov
cmp
mov
jmp
xor
es
jno
or
dec
imul
or
repnz
push
pop
push
test
xor
sbb
and
adc
in
leave
adc
or
shl
sbb
sub
sub
xor
inc
shl
xor
scas
push
push
enter
push
xchg
push
mov
fldenv
stos
dec
test
das
leave
je
jbe
dec
int
pop
aaa
mov
mov
cmp
cld
sbb
bound
or
pop
arpl
ret
mov
mov
je
and
into
cmps
movsx
jmp
jp
sub
cmovne
add
jecxz
sbb
jg
add
adc
aam
gs
dec
(bad)
mov
pop
and
dec
inc
cmp
jne
mov
fwait
adc
sub
fwait
adc
and
add
or
push
pop
dec
xchg
xchg
xchg
push
retf
sub
rol
mov
xor
push
inc
out
sub
xchg
mov
je
push
sbb
push
jg
test
push
sahf
rcl
addr16
and
repnz
ror
sbb
enter
push
pop
fcom
fld
add
jp
pop
and
adc
hlt
mov
retf
inc
inc
or
test
sbb
sbb
push
push
adc
arpl
mov
ror
daa
and
js
push
(bad)
xor
push
imul
add
js
mov
dec
pop
sub
sbb
retf
add
clc
mov
pop
daa
mov
mov
add
inc
mov
add
pop
jns
ja
ret
test
loop
imul
lahf
or
push
pop
pushf
cmp
mov
push
xor
shl
sbb
je
mov
scas
stc
jp
dec
movs
pop
push
fs
adc
movs
dec
adc
das
pop
inc
sbb
adc
xchg
out
pop
retf
(bad)
enter
ret
jmp
add
es
or
xor
sub
rcl
or
add
ds
add
mov
dec
push
sub
and
pop
movs
pop
mov
or
adc
mov
xchg
cs
xor
and
fldcw
push
pop
cdq
lea
xor
out
lods
sbb
xor
and
inc
cmp
pop
pop
push
mov
adc
jmp
dec
or
icebp
sbb
(bad)
or
xchg
or
ins
inc
push
test
test
cs
or
add
jmp
cmp
cli
enter
mov
push
sub
sub
(bad)
fwait
sub
add
mov
ret
in
(bad)
push
push
cmp
add
and
jge
inc
and
or
div
jmp
fiadd
pop
inc
movs
into
call
mov
rcr
aam
sbb
mov
in
sub
push
sbb
dec
fadd
jp
xchg
or
xor
clc
popa
jge
mov
push
(bad)
jae
shr
ins
mov
and
clc
and
aam
cmps
push
inc
sbb
pop
dec
and
imul
sub
jb
outs
jge
cmp
cmp
cmp
add
mov
test
dec
in
xor
dec
das
xlat
and
in
mov
inc
inc
jnp
mov
xchg
fdiv
ror
inc
adc
sets
jbe
sbb
pop
add
add
ret
mov
xor
shl
mov
repnz
retf
mov
or
or
sub
nop
and
(bad)
xchg
jle
addr16
cmp
mov
push
adc
in
push
inc
sbb
addr16
xor
dec
test
in
mov
sbb
inc
mov
mov
(bad)
shl
or
aam
(bad)
rcr
(bad)
add
fmul
and
js
adc
pop
push
mov
or
mov
(bad)
js
and
jnp
loopne
test
(bad)
adc
dec
fiadd
pop
and
test
push
cmp
lahf
adc
or
sbb
mov
push
movhps
add
pop
add
leave
mov
push
sub
jmp
je
sbb
mov
push
push
xor
sbb
push
mov
and
push
dec
push
inc
cmc
or
cmp
sbb
adc
pop
imul
(bad)
add
dec
mov
cmp
mov
ror
mov
dec
dec
xor
sbb
sub
add
pop
jbe
in
dec
mov
daa
xor
sbb
mov
jge
and
dec
dec
add
pop
aas
lea
adc
and
fnstsw
icebp
or
and
cmp
sub
cmps
dec
sub
movs
iret
icebp
sar
mov
ins
mul
xchg
sbb
bound
dec
jne
out
xchg
in
scas
dec
and
xchg
inc
std
cmps
fpatan
sar
(bad)
inc
and
inc
in
hlt
push
jmp
arpl
les
mov
adc
aas
les
repz
pop
mov
push
push
popa
test
sub
add
inc
inc
pop
xchg
mov
jge
mov
sub
add
jne
movs
ds
xchg
sbb
in
sbb
push
mov
scas
or
inc
or
mov
test
mov
sub
add
arpl
adc
sbb
add
(bad)
fdivr
je
repz
push
aam
add
mov
xchg
jp
adc
adc
or
push
add
ins
or
jb
add
das
cwde
push
imul
inc
rcr
adc
in
mov
popa
sbb
sbb
sbb
add
sub
cmps
fisub
jne
enter
test
jne
xchg
pop
imul
adc
sub
call
sahf
pop
or
popa
lods
rcl
dec
movs
adc
fwait
pop
arpl
hlt
ret
pop
pushf
sbb
mov
in
aad
nop
pop
mov
adc
aad
sbb
push
mov
push
inc
xchg
mov
push
inc
sbb
scas
js
ret
sub
pop
(bad)
hlt
daa
mov
push
mov
sub
xchg
xor
pop
cmp
movs
(bad)
sbb
dec
add
lods
inc
or
push
fs
pop
push
mov
and
adc
aad
mov
fdiv
dec
les
js
dec
lea
mov
fidiv
jmp
push
or
popa
ja
test
cmp
aaa
xchg
mov
out
pop
xchg
rcr
aaa
cmp
inc
pop
cmp
lea
and
inc
dec
mov
or
stc
dec
push
fstp
lock
cmp
ds
jne
mov
bound
loopne
mov
jmp
lods
and
add
cmp
push
xor
les
imul
inc
into
mov
sub
imul
mov
ror
cmps
push
mov
lods
xor
push
adc
xchg
popf
fld
imul
sbb
xlat
js
cmp
popf
jmp
sub
mov
dec
inc
push
data16
or
into
inc
push
sub
adc
inc
mov
lahf
add
mov
dec
push
es
xor
sbb
cmp
js
inc
(bad)
push
xchg
xchg
sar
push
xchg
add
daa
inc
out
and
fwait
xchg
pop
ja
cmp
in
pop
jle
jne
lea
popf
les
sbb
popf
and
xor
cmc
dec
fst
shl
fwait
sbb
pop
daa
sub
jecxz
shl
and
fmul
sub
mov
jmp
push
adc
mov
xchg
out
sub
push
call
fistp
js
add
dec
add
pop
jno
mov
pop
sbb
call
sub
or
mov
sub
push
add
and
inc
adc
pop
jne
mov
fimul
push
hlt
sbb
xor
and
inc
sbb
daa
pop
jb
push
sahf
xchg
xor
mov
pusha
ss
fild
cmps
push
push
cwde
or
cwde
sbb
enter
lock
in
in
ds
dec
fisubr
jnp
inc
add
lock
mov
adc
push
fwait
push
mov
imul
and
mov
aaa
and
and
jno
inc
je
sub
xor
sbb
jge
int
gs
ds
sbb
jmp
jno
mov
and
pusha
inc
cmp
cwde
stc
push
add
mov
cmps
adc
(bad)
lock
popa
fcom
mul
and
outs
je
sahf
mov
adc
xchg
mov
sahf
lock
rol
aad
push
test
add
pop
cmp
stos
pop
inc
jl
enter
pop
lahf
add
xor
ror
loopne
adc
xor
lea
test
lods
lods
jae
or
sub
pop
pop
sub
dec
sahf
adc
adc
in
xchg
ret
adc
jbe
jl
inc
xchg
inc
jl
jns
adc
xchg
call
je
mov
popa
inc
daa
jmp
mov
dec
in
adc
mov
mov
mov
repnz
hlt
mov
es
inc
fwait
sub
les
fist
xor
push
loopne
push
jecxz
pop
ins
test
stc
or
dec
mov
sbb
popf
mov
lahf
and
xchg
adc
call
mov
sbb
jge
mov
fiadd
(bad)
sbb
inc
lahf
add
add
imul
cmp
test
dec
inc
or
inc
add
jo
or
add
mov
inc
add
push
(bad)
adc
mov
and
cmp
(bad)
adc
(bad)
mov
inc
add
push
and
bsr
dec
ja
adc
xor
jg
jmp
cmp
dec
adc
inc
lods
mov
push
or
cmp
callw
in
sub
ds
hlt
cmp
add
inc
inc
adc
cmp
sbb
movs
das
mov
(bad)
pop
jmp
jmp
xchg
and
gs
sbb
and
dec
push
or
out
xlat
or
push
pusha
in
dec
and
adc
sbb
or
sub
sub
jb
pop
add
add
nop
lsl
test
ret
push
(bad)
mov
sar
pusha
inc
or
or
std
addr16
cli
push
sbb
inc
aas
clc
loopne
add
xchg
dec
or
add
or
cmp
mov
push
pop
add
fs
mov
outs
mov
adc
push
adc
or
adc
xor
adc
nop
movs
das
add
out
add
fwait
call
pop
jmp
cmp
je
mov
fcomp
mov
jae
pushf
(bad)
xor
fsub
ret
cmp
push
or
add
xchg
movs
adc
je
sub
jbe
cmp
cmp
cdq
movs
popf
sbb
or
inc
add
cmps
addr16
repnz
scas
jmp
movs
and
in
jmp
xchg
jl
xor
test
inc
jmp
aaa
js
xchg
inc
or
(bad)
push
cmp
dec
add
push
push
mov
pop
inc
sahf
in
movs
xchg
cwde
inc
imul
in
add
fisttp
cdq
call
nop
inc
inc
sub
or
push
sub
pop
add
sub
push
inc
inc
in
iret
arpl
inc
sbb
ss
inc
(bad)
mov
pop
cld
push
aam
test
ja
pop
das
push
cld
outs
inc
sub
lea
jbe
pop
or
add
sbb
jecxz
jns
div
and
pop
add
lods
xchg
fild
and
(bad)
ficomp
and
movs
xchg
sub
cs
nop
(bad)
push
cmp
pop
mov
and
ins
jmp
cmp
xchg
fdiv
xchg
and
popf
or
jmp
mov
inc
data16
and
xchg
adc
cmp
cmps
lock
adc
adc
pusha
jno
cmp
or
je
mov
mov
jne
cmp
xchg
imul
xchg
xor
cmp
xchg
xchg
sbb
(bad)
xor
inc
test
jno
aas
sub
xchg
inc
and
xor
pop
add
or
pop
jg
xor
inc
mov
lods
je
es
out
lock
and
jmp
mov
sbb
xchg
fs
dec
cmp
adc
inc
popa
arpl
fnstcw
jecxz
pop
cmp
mov
aaa
inc
sub
mov
(bad)
push
add
pop
mov
pop
add
fucomi
adc
push
pop
add
jp
jmp
sub
ds
aaa
sbb
adc
movs
je
pcmpgtb
sub
stos
mov
ins
xor
pop
iret
clc
out
test
je
dec
in
lods
mov
push
mov
inc
inc
add
xor
pushf
xchg
pop
icebp
inc
push
retf
bound
movs
sub
pushf
test
imul
or
push
or
fs
into
jno
ins
rcl
dec
je
push
daa
inc
sbb
xchg
dec
repz
mov
push
pop
lahf
dec
pop
push
(bad)
dec
sbb
adc
mov
test
xor
int
xor
adc
or
pop
clc
sbb
adc
pop
cdq
fadd
push
inc
mov
fadd
rcl
xor
pop
sub
(bad)
mov
lods
or
mov
test
mov
dec
cmp
mov
cmps
push
ja
imul
sbb
and
sbb
xchg
repnz
jg
mov
jne
dec
mov
inc
inc
jne
sar
inc
jne
sub
repnz
cwde
dec
je
push
and
adc
xchg
jg
dec
add
out
ins
movs
mov
inc
jg
inc
mov
popf
adc
xchg
ret
jmp
or
ret
fisubr
mov
mov
inc
or
xchg
fistp
and
inc
test
call
push
ror
xchg
inc
adc
inc
jne
push
add
adc
inc
push
push
push
outs
pusha
daa
(bad)
fisub
push
inc
push
xor
out
test
mov
sbb
push
mov
addr16
call
sbb
cmp
outs
sub
lds
mov
push
div
or
je
add
mov
test
fwait
pop
or
leave
test
cmp
sub
cmps
or
daa
dec
sbb
adc
pusha
pop
sti
push
jmp
dec
adc
xchg
jmp
mov
mov
xchg
and
iret
xchg
lock
pop
cmp
fs
mov
push
ret
pop
nop
ret
sub
hlt
leave
test
mov
cmp
xchg
adc
add
adc
test
(bad)
in
setb
push
out
pop
add
std
sub
ret
les
xor
push
sub
fs
cmp
push
mov
jo
dec
dec
inc
mov
inc
test
movs
cwde
and
inc
or
and
pop
or
adc
daa
icebp
pop
cwde
dec
arpl
out
xor
push
lea
shl
or
paddq
pop
inc
inc
or
inc
imul
icebp
dec
add
rcr
ins
(bad)
jns
pop
sti
icebp
mov
inc
mov
xlat
lds
lds
cmps
sbb
lds
ror
add
mov
sar
fstp
mov
add
loopne
add
lock
aas
cmps
adc
shl
mov
adc
retf
daa
push
sbb
mov
and
inc
add
add
jo
adc
jns
fs
pushf
mov
hlt
adc
retf
ins
lahf
test
dec
cld
dec
mov
sbb
sub
adc
mov
(bad)
out
push
shr
push
push
in
outs
mov
je
add
js
pop
call
dec
or
fcomp
mov
pop
mov
lea
cmp
inc
push
test
jp
push
inc
pusha
dec
inc
sbb
sub
mov
add
rcl
xor
mov
retf
inc
imul
nop
addr16
call
iret
dec
xchg
and
ins
dec
push
or
and
(bad)
push
movs
in
in
fidiv
pop
mov
ds
mov
cmp
imul
and
inc
lods
pop
in
mov
push
call
adc
leave
outs
or
leave
stc
call
cld
loopne
adc
mov
sub
clc
dec
xor
shr
arpl
in
and
xor
jmp
gs
pop
push
adc
mov
loope
aaa
pusha
push
(bad)
sti
and
test
xor
adc
dec
xchg
int3
sub
jb
(bad)
dec
ins
ss
mov
sbb
lea
movs
or
pop
adc
je
mov
push
inc
adc
dec
dec
adc
sbb
dec
xchg
add
add
jbe
mov
adc
lods
cmp
sti
or
dec
sti
fadd
cmp
inc
sbb
pop
mov
push
inc
repz
and
les
pop
leave
aam
inc
xchg
push
repnz
nop
(bad)
jb
hlt
pop
or
sti
adc
xchg
rcl
popa
hlt
mov
adc
jmp
call
lock
lahf
add
push
imul
enter
pop
mov
pop
sbb
push
(bad)
imul
in
jbe
xor
cmp
and
enter
inc
xor
pop
sar
or
adc
xor
pop
add
adc
fldenv
stos
xor
rcl
or
je
push
fdivr
add
add
lods
loopne
add
cmp
test
addr16
jle
or
aam
inc
xor
fcom
pop
movs
or
jne
cmp
push
fbld
mov
mov
or
jmp
sar
and
add
adc
pusha
enter
inc
test
sbb
imul
shl
cmp
jbe
sub
sti
cmp
sahf
adc
in
sbb
rcr
or
test
cmp
aam
jb
ret
je
xor
in
dec
test
sbb
je
cs
cmp
jmp
add
dec
pop
sub
sub
xchg
dec
sar
sahf
loopne
inc
cmp
sbb
mov
ror
jb
or
adc
shl
add
test
mov
mov
push
mov
mov
and
push
cli
or
ss
fs
mov
mov
cmp
aaa
mov
mov
je
xchg
pop
fs
in
rcr
push
mov
pop
or
inc
out
add
bound
cmovs
mov
bound
pop
ret
inc
addr16
xchg
daa
dec
add
inc
push
and
jp
or
jne
dec
inc
or
add
mov
in
dec
or
fimul
adc
or
outs
push
add
mov
or
pop
push
mov
test
adc
sbb
sbb
dec
arpl
dec
and
jae
xchg
pop
xor
je
cmp
sbb
cmp
data16
je
push
(bad)
push
jno
adc
mov
add
pop
jg
cmp
inc
mov
mov
(bad)
adc
fwait
cmps
or
test
sbb
sub
push
or
fwait
icebp
and
pop
push
add
or
test
or
sbb
dec
mov
mov
mov
rcl
pop
ins
mov
sub
mov
lea
pop
sbb
add
inc
add
int3
sub
ja
shl
inc
or
inc
xor
cmp
bound
iret
xor
jbe
std
out
or
cmp
add
or
push
mov
in
xchg
(bad)
cmp
mov
aam
jmp
lahf
adc
fcmovne
mov
xor
adc
sbb
xchg
daa
fs
dec
js
or
mov
test
pop
not
or
xor
pop
je
mov
and
push
inc
mov
leave
add
aas
or
out
jge
daa
sbb
shufps
dec
and
and
rcr
add
jg
ds
mov
(bad)
cmp
je
mov
mov
movs
data16
or
xchg
rol
je
sbb
prefetchw
and
scas
pop
pop
pop
and
xchg
in
inc
pusha
pusha
adc
dec
jb
(bad)
js
nop
iret
jbe
mov
xor
inc
rol
fcom
cwde
scas
or
aaa
add
out
nop
mov
xor
pop
movs
punpckldq
aaa
jecxz
test
mov
test
sbb
test
arpl
in
xor
rol
stos
sub
mov
sbb
or
xor
rcl
shl
fwait
inc
dec
push
push
xchg
adc
dec
xor
inc
jp
mov
xchg
dec
popa
jecxz
adc
arpl
mov
and
inc
je
das
mov
test
div
fiadd
and
cmp
dec
or
jmp
popf
test
nop
cmp
fsub
xchg
and
add
test
add
xor
jae
icebp
lock
in
mov
je
fisttp
jle
dec
jmp
jnp
lods
or
push
cmp
jne
add
xchg
push
sti
pop
shr
test
lds
sub
push
push
nop
push
test
sbb
jb
push
or
push
xor
jne
xchg
push
adc
das
mov
mov
jne
push
cmp
aas
add
test
push
inc
add
mov
add
cmc
dec
and
push
sbb
ins
sub
push
pop
pop
add
push
sbb
jle
add
daa
es
daa
dec
xor
imul
repz
add
in
push
inc
les
or
ins
lock
popf
and
adc
test
ret
jne
push
push
jne
and
ds
adc
add
repnz
movs
mov
aas
ffreep
xchg
mov
cwde
xor
inc
(bad)
cs
in
pop
jge
dec
mov
xchg
pop
fisttp
test
bswap
je
inc
aad
inc
sbb
movs
lods
popa
imul
ret
add
xchg
test
mov
pop
xchg
inc
mov
cmp
(bad)
pop
cld
add
push
popa
mov
add
dec
cwde
add
fcom
fbld
test
push
jae
fnstenv
shl
adc
add
dec
pop
fmul
add
dec
or
je
inc
xor
pop
xchg
add
push
loope
test
adc
pop
stc
dec
mov
ror
mov
cmp
shr
xor
and
push
or
gs
mov
xlat
(bad)
out
dec
jnp
ret
pop
in
add
lods
not
test
xor
sbb
dec
sbb
ret
sub
sub
lods
leave
fadd
add
jmp
mov
sub
fst
pushf
cmp
outs
nop
add
cmp
cmps
lods
lea
mov
dec
in
rcl
sbb
cmp
call
retf
and
mov
hlt
ficom
pop
mov
mov
out
add
adc
popf
dec
cmps
fmul
add
out
xchg
leave
retf
or
or
or
sub
jl
push
push
inc
adc
mov
xor
adc
adc
fisubr
jl
fmul
xor
inc
or
loope
mov
mov
xor
adc
lea
dec
outs
dec
fabs
dec
pop
fucomp
adc
sar
(bad)
add
mov
xor
sub
inc
lea
xchg
inc
or
add
cwde
rcr
retf
adc
outs
pop
push
outs
push
mov
xchg
sub
repnz
in
xor
xchg
sub
clc
aaa
and
sbb
sub
stos
cmp
sahf
pop
xchg
xchg
lock
sbb
add
cmp
inc
add
xor
or
push
(bad)
push
or
mov
jb
xor
or
test
dec
sub
icebp
ror
sbb
jle
dec
jmp
and
dec
lahf
call
cmp
in
and
push
pushf
ret
inc
adc
sub
mov
inc
cs
jle
ins
inc
and
pop
xor
jl
mov
mov
adc
or
adc
sub
jo
shl
nop
dec
mul
lock
adc
dec
in
stos
xor
dec
inc
ins
adc
xchg
push
and
xor
adc
loopne
and
ins
jnp
test
mov
inc
fs
and
fist
sub
sbb
fcomp
push
xor
cmp
(bad)
repnz
or
inc
dec
dec
loope
dec
sbb
inc
ins
or
cmp
loopne
(bad)
sub
fidiv
in
add
dec
add
std
fisubr
adc
(bad)
cmp
(bad)
aaa
call
mov
loopne
in
or
mov
dec
inc
in
push
xor
inc
add
mov
sbb
xor
push
mov
mov
dec
enter
lahf
pop
mov
outs
add
sbb
test
ds
ret
div
jne
aaa
sub
imul
rol
(bad)
ret
inc
or
add
add
je
or
lods
arpl
arpl
fsub
aam
pushf
xor
cmp
adc
adc
or
ret
repz
inc
fistp
jb
outs
sub
or
xor
or
add
xor
retf
xor
inc
inc
adc
add
shl
add
loopne
inc
sub
dec
or
add
jmp
and
or
addr16
jmp
aad
jnp
jmp
mov
aam
movs
mov
enter
inc
fmul
push
sub
push
pop
push
jne
test
les
jle
xor
mul
and
push
in
sbb
mov
add
or
imul
push
(bad)
sti
sbb
inc
xchg
pop
pushf
ret
in
(bad)
hlt
ret
inc
(bad)
or
or
xor
sbb
js
add
cmc
jne
enter
inc
and
outs
and
rol
test
dec
adc
jnp
popa
iret
gs
in
mov
xor
jmp
add
popa
adc
icebp
adc
fadd
fsubr
push
inc
dec
or
iret
and
test
or
push
and
pop
sbb
mov
jnp
sbb
adc
xchg
inc
mov
jmp
and
inc
sbb
add
and
mov
inc
and
out
sahf
and
daa
call
cdq
sbb
push
mov
push
pop
sub
xor
pop
jb
test
push
das
mov
push
aas
lods
neg
or
xor
inc
pop
std
aaa
call
std
sub
jae
ins
mov
mov
sub
lock
sbb
outs
lahf
jmp
or
push
adc
jne
adc
sbb
xor
cdq
adc
push
test
test
int3
dec
adc
stos
das
xchg
test
inc
and
push
dec
add
adc
cmp
add
adc
or
and
mov
jg
adc
mov
jbe
iret
ja
shr
or
adc
mov
push
sub
sub
in
in
or
or
xchg
or
jg
mov
(bad)
(bad)
sbb
fwait
jle
add
xor
int
adc
sub
in
sub
jge
rcl
or
jns
sub
push
jmp
sub
push
or
add
push
or
xchg
popa
pusha
push
ss
xchg
sbb
inc
ret
fadd
dec
mov
cdq
push
mov
add
dec
pop
or
in
push
das
sub
shl
movs
shr
cmps
xchg
dec
inc
js
inc
jg
or
retf
adc
inc
add
sbb
push
rcr
(bad)
jl
jae
imul
lods
jno
lahf
mov
out
jl
inc
jmp
sub
dec
or
and
or
icebp
ret
xor
sub
enter
sub
mov
test
sbb
sbb
frstor
test
xchg
cli
jle
jb
cmp
or
ficomp
add
jb
sub
xor
or
ins
push
shl
xor
sbb
fst
cmp
sub
add
or
les
mov
xor
ja
fdivp
dec
sahf
cmps
stc
push
adc
xor
cmp
dec
test
dec
fs
dec
sub
fdivr
retf
scas
inc
pop
inc
mov
or
sbb
loopne
ins
inc
push
fcomp
inc
dec
cdq
xor
sbb
in
and
daa
mov
mov
cli
or
je
aad
pop
sub
ret
xor
push
sbb
inc
mov
mov
pop
out
inc
or
sbb
sbb
or
and
(bad)
adc
and
sub
push
movs
pop
call
pop
add
inc
mov
mov
add
mov
rcl
call
jb
xor
lea
loopne
lds
push
fs
sub
pushf
dec
in
push
push
lods
xchg
gs
cmp
mov
xor
jle
add
push
inc
mul
cmp
inc
ss
and
sti
fs
jno
mov
jmp
xor
mov
or
icebp
adc
push
dec
je
sub
mov
add
mov
outs
pop
mov
std
xlat
mov
sbb
mov
xlat
je
test
loopne
mov
aaa
cmp
pusha
mov
and
mov
xor
inc
adc
mov
mov
fs
mov
xor
add
mov
or
push
and
les
pop
mov
clc
cmp
in
sub
das
push
daa
inc
pop
scas
push
out
mov
inc
dec
push
add
jo
and
pop
mov
into
or
xor
jne
mov
jne
ret
mov
push
sbb
adc
adc
popa
and
iret
aad
aam
inc
pop
xor
sbb
inc
inc
pop
jmp
inc
jecxz
nop
nop
xor
pop
xor
sbb
test
loop
or
jb
in
cwde
cwde
leave
test
add
js
jne
dec
mov
add
imul
popf
test
push
aas
push
xchg
les
or
xlat
cmp
dec
lock
setne
into
sub
sub
fnstcw
lds
push
in
pop
cwde
mov
mov
inc
add
in
fdivr
jmp
shl
movs
pop
xor
retf
jg
adc
xor
lods
xchg
adc
ja
stos
enter
xchg
dec
cmps
mov
or
push
out
dec
pop
movs
push
fs
addr16
add
adc
and
fist
adc
lods
cmp
xor
into
cli
add
xlat
unpcklps
adc
push
push
repnz
repnz
jbe
add
sbb
dec
sar
add
pop
ja
loop
dec
lods
pop
mov
pusha
aaa
xlat
les
mov
xor
jg
fidivr
and
mov
adc
mov
add
fist
inc
pop
js
mov
xchg
or
jl
or
stos
aad
fidiv
js
movsx
or
dec
pop
and
shr
or
adc
xor
mov
and
add
adc
dec
dec
mov
or
or
hlt
or
stos
pusha
into
add
push
ror
nop
and
fadd
sbb
jb
retf
test
jmp
sbb
inc
fadd
ret
xor
addr16
cmc
sbb
sub
aam
add
xor
mov
sbb
pop
lea
call
inc
dec
test
and
add
dec
dec
jecxz
xor
or
repnz
dec
fwait
jne
add
or
jbe
inc
(bad)
mov
shl
and
mov
leave
mov
add
outs
pop
enter
scas
add
mov
scas
gs
retf
sub
mov
mov
outs
jae
xchg
inc
mov
jnp
sub
mov
cmps
xor
adc
mov
clc
mov
jb
push
icebp
out
adc
retf
aam
(bad)
xchg
cdq
push
dec
pop
push
rcr
push
xor
push
sbb
ins
in
cs
arpl
or
(bad)
popw
push
arpl
or
icebp
arpl
add
(bad)
aam
test
jecxz
cmp
adc
sbb
out
sub
(bad)
das
inc
aas
cmps
mov
and
daa
adc
and
sub
sub
mov
imul
push
adc
pop
inc
fs
jecxz
xchg
or
xor
imul
xor
mov
xchg
sub
pop
les
call
outs
push
push
repnz
and
and
jle
aas
test
cli
or
xor
dec
jge
or
(bad)
repz
es
jle
adc
or
or
cli
adc
gs
es
mov
into
add
inc
pop
push
out
jne
xchg
dec
sub
enter
iret
add
sub
or
pop
push
inc
lock
mov
mov
push
pop
std
pop
sbb
ins
je
test
test
pop
sub
or
pop
jo
or
(bad)
add
sub
aas
xchg
(bad)
ins
and
nop
pop
jmp
push
loope
jbe
retf
inc
ins
and
add
(bad)
inc
jo
jbe
mov
mov
loop
pop
add
inc
add
(bad)
xchg
sbb
pop
fisttp
cld
sub
lea
jmp
push
cdq
dec
mov
mov
push
inc
mov
pop
cdq
(bad)
mov
push
shr
stc
push
xchg
(bad)
dec
popa
ret
jne
dec
mov
pusha
lods
mov
fbstp
loope
push
push
xor
inc
adc
mov
arpl
jl
psraw
repnz
icebp
pop
ja
pop
jnp
push
movs
inc
and
pushf
jmp
push
mov
mov
sub
mov
into
and
push
cwde
movs
mov
inc
and
lahf
(bad)
sub
adc
jl
lea
in
cmp
stos
mov
jo
sbb
iret
rcl
test
in
mov
jbe
adc
je
jb
xor
loopne
adc
popa
cmps
scas
ds
imul
adc
shl
outs
push
adc
sub
sbb
lds
push
inc
out
xor
out
(bad)
sbb
or
dec
jmp
or
dec
and
xchg
mov
sub
es
push
inc
or
mov
push
xor
outs
cmp
inc
inc
push
pop
sbb
and
cwde
push
sub
(bad)
adc
test
mov
push
dec
or
add
push
cld
sbb
ins
add
mov
push
loopne
fadd
add
dec
loope
test
adc
or
pop
cwde
pop
loop
mov
xor
or
mov
dec
sbb
xchg
fwait
push
push
push
and
or
push
js
(bad)
sub
daa
jmp
inc
cmp
cmp
dec
clc
fst
adc
push
enter
adc
dec
inc
lea
add
sub
(bad)
cmps
mov
mov
adc
lods
nop
jnp
push
xchg
and
call
rcr
xchg
add
add
xchg
jg
inc
enter
das
arpl
mov
(bad)
push
aas
push
aas
sub
inc
jb
pop
xor
pop
leave
or
ins
sub
pop
push
dec
sub
jno
test
sub
cwde
push
dec
lds
xor
xchg
mov
adc
sbb
sbb
dec
ds
adc
adc
adc
push
sub
mov
jecxz
push
and
popf
lods
or
add
fcomp
jnp
out
xchg
mov
dec
in
in
and
lahf
icebp
sahf
xor
dec
mov
icebp
or
jg
mov
ret
cmp
jg
sub
jns
push
out
inc
retf
ins
cmp
push
add
xor
(bad)
jne
jo
mov
or
mov
adc
adc
aaa
iret
cmp
jl
xor
test
cld
cmp
push
sbb
test
dec
je
add
popa
mov
or
push
inc
mov
cmp
sbb
and
cmp
stos
nop
repz
xchg
call
dec
dec
pop
dec
cmp
or
or
inc
xchg
mov
sbb
mov
sbb
or
daa
adc
mov
and
(bad)
pusha
jnp
lock
sub
dec
pop
inc
loopne
cmp
and
fadd
dec
sbb
sbb
fs
mov
sbb
into
cwde
aad
loope
call
or
adc
sbb
inc
out
daa
sbb
adc
push
or
test
push
mov
aaa
dec
jle
stos
fwait
push
and
sbb
jne
pop
dec
aam
cmp
adc
inc
aaa
push
out
xor
shl
ins
xor
pop
aam
and
cmp
outs
or
mov
jnp
cmp
sahf
xor
mov
movs
test
ret
xchg
pop
cmp
and
xor
pop
loopne
rcr
movs
add
and
inc
sub
sub
iret
jo
aas
ins
in
push
call
mov
icebp
test
sub
sub
pop
call
inc
cdq
cmp
dec
test
arpl
push
cwde
jns
jne
mov
add
inc
add
xor
adc
or
mov
sbb
add
les
xchg
inc
jle
repz
(bad)
xchg
(bad)
xor
and
adc
sub
nop
movs
cld
xor
jle
inc
mov
push
pop
mov
add
xor
xor
push
pop
clc
sbb
dec
popa
cld
or
push
xor
jg
jne
dec
shl
out
mov
mov
inc
nop
dec
add
xor
xchg
dec
cwde
jmp
add
add
mov
adc
imul
and
xchg
nop
das
or
xchg
dec
loopne
xchg
loopne
fadd
fld
pop
and
adc
mov
fsubp
setle
push
sbb
es
sbb
test
and
and
add
cmps
jo
mov
add
jl
adc
jbe
push
fimul
add
inc
push
and
movs
out
push
add
or
mov
mov
arpl
pop
stos
inc
fdiv
sbb
mov
add
lods
or
push
in
movs
pop
mov
fidivr
movs
jmp
lahf
inc
dec
out
in
pop
mov
xor
popa
lds
mov
sbb
nop
xchg
push
rcl
lds
std
lods
in
mov
sub
movs
dec
mov
mov
into
pop
sub
cmp
mov
push
mov
mov
dec
pop
adc
sbb
adc
ins
sbb
push
jne
enter
sub
adc
mov
push
in
test
pop
add
cmps
inc
outs
mov
fcom
test
dec
mov
repnz
cwde
hlt
sahf
cmp
adc
pop
pop
mov
adc
sbb
(bad)
into
mov
clc
xor
cwde
inc
or
(bad)
shl
xchg
sub
cmp
add
addr16
push
jo
lock
outs
sbb
adc
xor
jb
test
push
jge
inc
out
inc
xor
lods
aaa
inc
inc
daa
sbb
push
push
xor
retf
mov
in
xor
add
outs
pushf
test
pop
lahf
pop
and
dec
inc
jecxz
inc
adc
dec
ins
pushf
sub
cmovb
pop
mov
jmp
or
pop
sub
shl
adc
dec
or
adc
mov
movs
mov
add
mov
jge
ret
xchg
push
adc
fwait
loop
sub
mov
dec
mov
in
xchg
inc
pusha
push
dec
mov
enter
jmp
lock
push
in
idiv
add
xchg
leave
sub
jmp
fidivr
jmp
pop
jne
nop
xor
nop
pop
repnz
dec
and
lock
jmp
or
add
add
test
cwde
mov
jmp
sub
jmp
adc
sub
jne
iret
inc
(bad)
js
jno
and
jle
shl
enter
jb
cmp
jo
cmp
mov
mov
push
mov
xor
fldcw
sub
(bad)
jecxz
cmp
push
nop
cmp
adc
or
retf
aas
or
daa
inc
jl
mov
jb
sub
test
or
cmp
pop
or
dec
push
add
xlat
fstp
dec
pop
sub
ja
or
idiv
sub
jae
mov
out
pop
add
imul
(bad)
fild
mov
mov
cmp
cmps
push
sub
and
adc
sub
dec
adc
cmp
add
push
repz
adc
out
fcomp
jne
xchg
cmp
inc
inc
ja
pop
xchg
pop
add
movs
add
or
jns
out
push
aaa
dec
gs
or
fadd
push
movs
outs
mov
add
jmp
add
add
inc
sub
ss
outs
scas
sub
inc
xor
(bad)
loopne
outs
fadd
push
dec
sbb
stc
sbb
mov
xchg
mov
ret
and
bound
aam
xchg
lock
rcl
push
or
into
pop
(bad)
push
hlt
jmp
or
(bad)
and
or
mov
dec
push
push
iret
push
add
jl
sti
cmp
or
xchg
mov
mov
cmp
jns
cmps
push
iret
push
sbb
push
mov
and
jmp
hlt
pop
je
and
scas
cmp
jg
out
ins
adc
adc
dec
inc
ins
pop
es
and
imul
adc
movs
frstor
xlat
dec
ficom
add
and
ficomp
add
(bad)
jnp
jge
pop
(bad)
xchg
add
call
jmp
pop
js
sub
fmul
xor
les
xchg
fsubr
or
repnz
mov
popf
loop
lock
sbb
add
adc
jbe
sbb
cmp
jne
cmps
test
sub
hlt
mov
dec
inc
xchg
outs
xor
or
inc
adc
pop
mov
idiv
jne
mov
mov
and
adc
add
or
pop
pop
mov
cmp
xchg
mov
adc
je
add
fs
dec
sbb
and
repz
shl
or
cmp
pop
sbb
push
ret
into
sub
adc
and
hlt
pusha
in
popa
xchg
xor
jle
sub
mov
pop
sub
pop
add
into
cmps
jne
or
test
push
xchg
add
sbb
mov
fwait
xchg
push
sub
or
sbb
add
cmp
or
test
and
(bad)
sbb
lods
arpl
sahf
rol
aas
inc
fs
inc
pop
inc
add
mov
and
jmp
inc
jbe
and
ds
jle
outs
ds
sar
or
mov
ss
rol
or
rcl
in
movs
and
push
push
cmp
mov
jge
pop
test
fidivr
hlt
push
js
xor
cmp
pop
push
je
hlt
jno
stc
jbe
adc
inc
xchg
lea
ja
loopne
mov
cmp
loop
inc
fimul
dec
popa
scas
mov
and
ds
imul
xchg
and
daa
leave
ins
mov
and
das
lods
(bad)
cmps
add
cmp
mov
add
adc
clc
mov
das
movs
jmp
adc
pop
adc
jg
aam
nop
xchg
or
inc
sub
cmp
pop
imul
mov
scas
out
repz
add
call
into
test
sbb
in
je
dec
int3
cwde
test
pop
mov
paddq
add
mov
xchg
cmp
jne
add
or
(bad)
imul
inc
push
pop
push
imul
lea
pusha
or
mov
push
mov
cdq
xchg
mov
jns
int
pop
pop
gs
retf
jecxz
int
ror
jno
(bad)
sub
mov
sub
or
mov
push
mov
pop
xchg
dec
push
mov
and
jne
push
and
hlt
push
idiv
jmp
lea
mov
jne
inc
nop
addr16
inc
inc
icebp
sub
fcmovu
pop
adc
add
dec
push
sbb
fs
mov
mov
dec
inc
pop
loop
inc
(bad)
cmp
das
xor
popa
fxtract
into
mov
jle
sub
pop
mov
and
adc
add
dec
lds
jg
jne
mov
jmp
jbe
dec
mov
mov
movs
repnz
call
push
adc
push
inc
inc
inc
inc
cmc
lods
sub
pop
and
mov
xchg
mov
dec
pop
(bad)
pusha
push
out
jne
sub
shr
aas
les
ret
push
mov
jne
and
pushf
fs
push
add
pop
or
sbb
lods
push
xchg
xor
popa
sbb
stc
test
js
push
arpl
and
sub
push
sub
ja
inc
sub
rcl
imul
dec
sub
and
movs
sub
shl
sbb
xchg
dec
jl
push
retf
(bad)
movs
enter
push
jmp
sub
sbb
or
pop
ficom
inc
inc
imul
inc
xchg
or
add
mov
cmc
pop
enter
mov
mov
adc
mov
fs
sub
add
add
fst
add
jne
test
rcr
fiadd
cdq
or
inc
ins
xor
sub
xchg
pop
mov
into
push
mov
xor
jne
push
pop
test
dec
sub
(bad)
and
popf
gs
retf
xchg
cmps
xor
pop
lahf
aam
dec
sub
loope
lea
nop
and
daa
imul
aam
add
sub
aaa
pusha
rcl
(bad)
jne
test
mov
lea
push
and
push
fwait
mov
add
add
mul
ss
xchg
cld
mov
mov
mov
shr
lods
rcr
inc
scas
and
add
push
loope
pop
repnz
add
dec
add
adc
push
sub
or
dec
push
je
out
out
adc
sub
inc
pushf
int
aad
sbb
mov
xchg
(bad)
lahf
jne
sub
push
(bad)
jnp
push
aad
test
lods
sub
imul
add
jecxz
sbb
stos
or
mov
idiv
pop
nop
aam
cmp
jle
xor
jb
psllq
mul
mov
(bad)
(bad)
dec
imul
add
push
or
fcom
loope
movs
ret
push
and
and
mov
call
inc
push
rcl
in
stos
adc
pop
pop
mov
(bad)
cmp
jne
cmp
sbb
xchg
mov
mov
mov
ins
pop
pop
cmp
test
adc
jnp
ror
or
push
in
xor
xor
sub
movs
pop
pushw
sbb
push
test
mov
and
xchg
mov
loop
xor
pop
out
sysexit
mov
push
or
mov
stc
adc
jmp
sbb
adc
inc
adc
adc
outs
sub
xchg
jo
jg
lahf
jecxz
lea
adc
cld
movs
mov
mov
imul
jne
dec
ins
or
xor
adc
dec
ds
mov
cmp
repz
adc
xor
imul
adc
jle
dec
dec
sbb
movs
cmps
and
or
int3
adc
(bad)
nop
mov
and
pop
dec
push
sbb
lods
xchg
sub
repz
ret
push
xor
push
cwde
cmp
add
in
or
rol
xor
dec
dec
inc
sbb
outs
add
addr16
or
inc
inc
je
or
std
fidiv
jbe
mov
test
dec
jmp
sub
inc
and
inc
push
and
cmc
ficom
add
test
inc
or
push
into
dec
shl
call
fwait
data16
test
dec
add
mov
mov
rcl
mov
push
sub
pop
and
or
mov
xor
cmp
retf
out
arpl
and
pop
cmp
cmc
test
xchg
mov
or
mov
xchg
xor
mov
mov
or
adc
loope
push
adc
sub
je
xchg
out
mov
rol
mov
inc
fs
xchg
xor
and
push
test
cmp
xchg
jge
dec
inc
add
adc
or
jnp
repz
push
adc
lods
push
iret
sbb
dec
push
and
xchg
xor
push
push
pop
push
loopne
add
sbb
in
push
pop
add
daa
call
inc
ins
and
jae
ins
rol
mov
ficomp
pop
js
call
or
or
and
scas
add
inc
add
(bad)
mov
test
stos
pop
add
mov
add
dec
pop
clc
mov
dec
mov
nop
cmp
mov
jg
icebp
inc
std
mov
cwde
dec
and
jne
sbb
ret
cmp
xchg
jb
or
add
mov
rcl
loopne
sbb
inc
inc
jle
mov
cmp
lock
inc
ins
lods
push
ret
jl
mov
adc
pavgw
add
jmp
add
adc
cmp
and
add
test
aad
clc
loope
sbb
clc
xor
xlat
les
shl
inc
in
data16
push
xchg
nop
pop
jns
mov
enter
out
dec
inc
loopne
push
and
rol
push
inc
pop
sub
mov
jmp
shr
fiadd
sbb
fmul
jno
push
mov
jo
mov
movs
repz
rcr
arpl
xchg
inc
mov
inc
(bad)
dec
jae
ror
push
imul
inc
imul
push
cli
xor
imul
push
sbb
push
dec
or
cmovo
cmps
aad
push
and
lock
mov
adc
ret
add
xchg
cmp
in
xacquire
adc
popa
test
inc
daa
cmp
adc
mov
push
imul
push
push
sub
mov
add
outs
push
in
xor
mov
dec
jbe
pop
(bad)
jno
imul
icebp
push
or
mov
inc
cld
repz
mov
inc
push
and
xchg
ret
push
push
ret
(bad)
adc
mov
sbb
add
nop
inc
enter
sub
or
gs
(bad)
aam
push
push
outs
pusha
inc
inc
sbb
xor
sbb
add
test
sbb
mov
adc
pop
pop
push
push
mov
addr16
pop
in
jmp
imul
ins
push
and
inc
pop
mov
or
push
jno
cs
cwde
and
xchg
cmp
addr16
or
mov
cmp
add
int
and
js
push
into
mov
mov
add
scas
push
inc
xchg
push
rcr
aam
(bad)
sti
inc
imul
dec
mov
pop
xchg
sbb
and
sub
scas
sub
fiadd
loope
adc
fwait
cwde
inc
in
cmp
out
mov
aaa
or
push
(bad)
outs
jae
add
sub
pop
mov
inc
and
mov
(bad)
int3
xchg
or
pop
das
cmp
add
rcl
sub
mov
gs
mov
out
pop
pop
icebp
dec
mov
mov
xor
pop
push
ins
in
xor
mov
ret
(bad)
adc
mov
mov
inc
xchg
dec
jmp
cmps
mov
scas
cmps
ins
and
cbw
or
jg
add
push
sbb
rcl
adc
sti
ss
popa
je
pop
imul
mov
xchg
or
dec
mov
sub
or
ret
les
pop
sbb
clc
push
sbb
cs
mov
iret
push
fs
mov
adc
sbb
cmps
(bad)
jmp
sbb
push
fnstcw
es
shr
dec
clc
or
push
das
sbb
outs
push
jp
jecxz
mov
push
pop
or
rol
bound
test
and
outs
rol
xchg
int
into
mov
cmp
sub
loopne
mov
xchg
adc
xchg
ror
push
in
ins
sbb
lea
push
inc
sti
cmp
xor
mov
jne
xor
test
sub
ins
sbb
dec
dec
pushf
dec
inc
(bad)
inc
popa
xchg
add
mov
loope
xchg
pop
mov
adc
nop
sbb
dec
stc
je
xchg
jo
dec
or
or
pop
loope
or
push
xor
push
sub
jae
mov
xor
push
(bad)
pop
(bad)
sti
jle
sub
mov
movs
rol
lods
push
xor
cld
(bad)
adc
stos
aas
inc
or
adc
inc
adc
(bad)
aad
sbb
jb
or
ror
adc
inc
or
pusha
lock
repz
or
test
sub
pop
sbb
(bad)
out
adc
cmp
sub
jbe
sbb
cmp
and
cmp
add
mov
nop
es
or
mov
(bad)
std
das
push
sbb
jmp
(bad)
repnz
mov
and
sbb
add
adc
or
in
movs
xor
adc
xor
lea
mov
lds
pusha
je
ja
mov
pop
test
sbb
add
lock
cmp
jg
jae
jmp
dec
push
inc
add
fimul
es
dec
lds
mov
xor
ret
or
xor
aam
rdtsc
cli
xchg
jg
pop
cmp
mov
shl
ja
or
movs
lods
dec
jnp
in
ret
dec
mov
rol
pop
outs
sbb
aas
sub
inc
push
loopne
inc
or
mov
add
sbb
cmp
popa
lods
mov
(bad)
js
lods
adc
add
cmps
or
adc
push
xchg
dec
adc
mov
add
fcmovnu
(bad)
or
test
dec
push
adc
mov
add
mov
add
mov
xchg
sahf
data16
or
out
add
adc
push
int3
scas
inc
imul
add
inc
add
popf
lock
ret
pop
leave
out
inc
mov
pop
mov
jns
add
inc
pop
mov
jmp
adc
pop
outs
and
pop
pop
aaa
mov
ins
mov
and
push
inc
or
rol
xor
mov
(bad)
xchg
add
outs
sti
mov
xor
xlat
push
test
cmp
adc
mov
add
cmp
call
or
mov
mov
pop
rol
invd
ror
sub
enter
mov
adc
push
fwait
(bad)
sub
retf
or
ror
cmp
loopne
lds
mov
dec
sbb
retf
jecxz
les
js
add
(bad)
xlat
shl
or
pop
adc
and
ins
mov
add
add
daa
in
add
and
inc
pop
sar
sub
test
add
fcomp
ss
imul
pop
shl
jecxz
sub
cmc
pop
sub
les
dec
jo
jns
mov
repnz
sbb
mov
cmp
pushf
cwde
push
shl
aaa
ins
stc
cmp
dec
xlat
and
adc
inc
or
jnp
cmp
loope
stos
adc
push
adc
jge
loopne
rcl
rcl
add
aas
adc
pop
jb
add
jmp
(bad)
jmp
mov
fs
imul
mov
mov
les
push
xor
jge
cmp
jp
jecxz
sbb
cmp
dec
retf
lods
push
mov
dec
jno
pop
xchg
inc
sub
pop
pop
dec
sbb
ins
push
hlt
je
les
fcomp
xchg
xor
jae
lea
mov
dec
dec
sbb
scas
outs
mov
cs
mov
sub
dec
mov
xchg
xor
xor
pusha
add
and
mov
addr16
xchg
(bad)
fist
pop
jno
hlt
inc
add
mov
in
pop
data16
pmaddwd
jg
push
sbb
hlt
cmc
jae
pop
aaa
xor
xor
je
mov
push
repnz
push
push
push
push
rol
or
test
inc
nop
dec
push
in
popf
dec
je
push
daa
xchg
dec
mov
push
cs
jmp
fiadd
loopne
xchg
xchg
pop
jne
sbb
mov
dec
xor
and
sub
shr
inc
loopne
rol
or
xor
and
lahf
fcomp
sub
adc
xchg
ja
sub
rcl
dec
shl
adc
push
mov
loope
sbb
push
imul
xor
jle
cmp
mov
daa
in
inc
adc
and
xchg
out
cmps
loopne
sbb
xlat
xchg
push
shl
mov
lock
fisub
daa
(bad)
loop
xchg
retf
push
mov
mov
sub
inc
jb
(bad)
ins
and
push
xor
add
mov
xchg
pop
in
and
or
loope
mov
rcr
sbb
in
adc
aad
dec
mov
dec
mov
cmp
bound
clc
push
(bad)
mov
pop
sbb
movs
xchg
ja
les
mov
cmp
mov
dec
dec
rcr
dec
sub
lahf
mov
adc
mov
sub
xchg
adc
mov
dec
jecxz
sub
push
cmp
inc
pop
bound
outs
ror
outs
mov
mov
sub
retf
ds
adc
adc
and
in
inc
mov
mov
push
dec
and
jl
and
lahf
mov
xchg
dec
repnz
xchg
push
push
adc
add
stos
fxch
add
adc
int
and
or
nop
fsub
mov
xor
inc
fs
push
add
push
pop
cdq
xchg
add
call
adc
(bad)
mov
sbb
cld
aad
and
fwait
in
or
(bad)
jno
test
in
mul
cmp
sar
lock
(bad)
and
or
daa
push
xor
mov
test
ins
movs
sbb
out
dec
push
lea
daa
sbb
pop
in
push
pop
fmulp
and
xlat
push
push
test
xor
mov
enter
sbb
push
cmp
fst
mov
or
imul
xor
jo
fisttp
adc
push
movs
push
and
push
adc
(bad)
push
mov
(bad)
xchg
(bad)
xor
test
or
inc
(bad)
mov
push
sahf
xlat
mov
mov
or
or
mov
add
adc
push
mov
pop
xor
add
sbb
jg
xor
sub
inc
arpl
add
sbb
inc
lods
and
xor
call
mov
out
dec
aaa
enter
mov
mov
add
sbb
cmpps
add
jns
in
les
in
test
imul
test
mov
leave
mov
mov
add
xor
mov
dec
neg
push
loope
mov
mov
or
dec
or
push
in
inc
fsincos
push
mov
arpl
or
enter
fs
or
(bad)
imul
lock
adc
test
jo
loop
int
fistp
nop
clc
sbb
dec
sub
outs
xchg
mov
fisubr
mov
inc
pop
mov
lock
sbb
xor
sbb
scas
or
movs
es
pop
daa
pusha
inc
add
pop
and
or
sub
add
or
ret
inc
iret
retf
sub
xor
lea
ror
mov
cmc
clc
mov
adc
loop
out
add
push
dec
or
inc
xor
xchg
in
dec
push
jmp
mov
in
cmp
push
add
loope
push
cs
jle
inc
repnz
(bad)
cmp
mov
or
push
pusha
inc
stos
mov
jo
mov
out
push
adc
jecxz
inc
or
push
sbb
push
add
out
cdq
ror
imul
adc
je
sbb
jns
(bad)
push
cmps
addr16
xor
jle
xchg
adc
pop
jne
shl
jbe
xchg
subps
mov
mov
ins
dec
ins
and
shl
lea
lea
or
push
cmp
aaa
or
dec
sub
mov
add
test
xchg
adc
daa
adc
(bad)
inc
fwait
pop
adc
adc
cwde
shl
(bad)
rcr
xor
xchg
and
add
and
cdq
mov
cmp
sub
pop
pop
push
rol
adc
loop
out
rol
(bad)
call
jle
shr
les
js
data16
call
xchg
mov
nop
stos
ret
arpl
add
pop
or
add
or
push
sahf
jl
sub
add
sub
je
xchg
or
mov
jle
add
dec
adc
sub
add
popf
mov
cmp
movs
dec
add
sub
aas
dec
loopne
mov
inc
pop
aam
add
aaa
push
bswap
das
pusha
cmp
add
xchg
cwde
inc
fcmovne
inc
fisub
add
es
push
loope
adc
outs
ror
add
xor
pop
and
xor
enter
jecxz
add
retf
cmp
sbb
not
xor
ret
js
add
sub
cmps
and
lahf
mov
and
push
lea
idiv
push
dec
cs
mov
inc
push
adc
(bad)
dec
shl
push
je
add
les
shl
js
cmp
fcom
rcr
xchg
xor
clc
fcom
test
sahf
jp
aaa
push
push
adc
mov
nop
jae
jo
xlat
xor
fmul
in
jns
retf
cmps
bound
in
xchg
push
cmp
or
popa
and
cmp
sub
jne
aaa
je
sub
add
test
push
sub
cld
ret
dec
clc
aas
add
add
and
add
push
inc
loop
mov
out
cmp
scas
sbb
jl
sbb
popf
and
push
pop
fcmovbe
fsubr
call
(bad)
in
push
and
xor
arpl
jg
(bad)
call
xchg
shl
sub
fcomp
add
jg
mov
xor
test
iret
push
sub
sub
not
jo
adc
cmp
aaa
dec
lods
movs
shl
leave
or
mov
add
xor
and
loope
outs
or
or
push
scas
(bad)
(bad)
repnz
add
aaa
jne
lea
sbb
mov
push
inc
pop
and
pop
mov
or
arpl
push
das
pop
mov
sbb
and
cmp
pop
test
lock
jg
fild
sbb
inc
jo
stos
out
or
dec
sbb
out
rol
imul
shl
mov
cmc
daa
adc
dec
xchg
jecxz
jns
mov
call
aas
mov
rcr
nop
jbe
adc
sbb
xor
or
mov
(bad)
and
outs
and
pop
sbb
pop
aam
inc
sbb
mov
jne
lahf
push
je
mov
jae
push
leave
add
push
push
sbb
test
adc
int3
mov
and
xchg
aam
xor
sbb
adc
sbb
cld
xor
pusha
scas
pop
dec
push
add
imul
and
push
xchg
sbb
inc
js
add
jno
mov
pop
cmp
jbe
or
fwait
or
(bad)
jge
jl
pusha
push
sahf
mov
pop
or
mov
mov
retf
leave
popa
xchg
(bad)
sar
jbe
lea
sbb
pop
mov
hlt
dec
add
pop
and
mov
std
push
xchg
into
imul
imul
pop
xor
cmp
ins
push
daa
or
ins
call
lea
repnz
add
xchg
ret
test
add
inc
fld
fcmovu
sbb
push
pop
push
or
adc
sub
int3
push
sbb
adc
and
loopne
add
xlat
hlt
cdq
xchg
ret
mov
pop
add
push
cmp
pop
mov
call
jl
cmp
int
pop
add
inc
sub
and
ins
or
cdq
sbb
jb
push
jae
sbb
and
sub
push
xor
mov
icebp
out
sub
lock
cwde
daa
or
mov
ss
dec
inc
addr16
ins
inc
aam
mov
mov
das
lea
or
setg
and
in
and
or
sbb
add
push
sahf
add
add
fs
inc
mov
sub
pop
push
add
pop
xchg
adc
iret
mov
mov
and
mov
and
loopne
push
in
mov
and
mov
sbb
push
mov
xor
je
or
mov
aaa
jo
je
jecxz
pop
ret
dec
cld
pop
adc
mov
mov
shl
retf
movs
pop
xlat
and
dec
lods
add
xor
rcl
test
dec
js
jne
xor
lock
mov
and
icebp
jl
jg
inc
stc
or
je
adc
fadd
push
inc
cmp
adc
mov
add
cmp
xchg
or
nop
mov
inc
ins
jl
pop
movs
pusha
sub
xchg
add
jne
push
(bad)
xor
sub
(bad)
push
push
or
popa
stos
lods
or
xcrypt-ecb
cmps
or
faddp
(bad)
push
iret
xchg
sbb
ret
lock
jnp
in
xchg
add
stos
lds
inc
movs
(bad)
jne
xor
pop
aaa
test
xor
aaa
jne
xchg
add
hlt
jne
add
sidtd
movs
imul
push
mov
xor
push
mov
ins
test
xor
cmp
test
jne
cmp
cmps
push
sbb
pop
test
jno
pop
or
sbb
in
gs
mov
mov
push
cwde
add
inc
sub
mul
mov
aaa
fcomp
adc
es
or
jmp
call
jmp
and
adc
gs
shr
ins
dec
popa
jo
push
xor
pop
inc
aam
or
xor
outs
retf
movs
jmp
pop
cmp
cmp
xor
and
shl
add
shr
mov
les
jmp
arpl
dec
test
mov
rcpps
cdq
dec
in
rol
mov
add
mov
xor
or
jns
pop
pop
adc
mov
adc
add
lods
adc
push
cmp
mov
mov
dec
adc
push
inc
cmp
mov
pusha
cmp
jle
dec
lds
jl
or
cwde
jbe
das
dec
js
sbb
test
xchg
or
aas
xor
sub
mov
mov
les
fdiv
sbb
(bad)
push
mov
imul
push
popf
or
sbb
cmp
jo
mov
in
out
inc
aam
outs
mov
dec
and
mov
aam
and
add
in
or
add
cmp
xchg
mov
adc
imul
je
loop
jl
push
shl
jne
cmp
jg
sbb
out
dec
daa
dec
ror
push
dec
fs
cmp
adc
call
add
add
add
sbb
jb
jae
adc
mov
retf
or
jnp
add
mov
or
es
inc
jne
inc
sub
rcl
add
push
and
inc
xchg
cdq
and
or
sub
fistp
push
inc
ret
xlat
push
nop
jp
out
push
aad
fiadd
sub
pop
es
dec
ret
movs
xchg
sbb
fnstcw
mov
cwde
sbb
popf
fmul
repz
or
or
test
test
mov
jnp
push
dec
dec
add
adc
and
xor
xor
add
clc
inc
sbb
je
sub
test
push
adc
pop
jmp
add
mov
adc
rcr
por
out
push
cmp
sar
dec
dec
cmp
push
jne
dec
xchg
daa
into
sbb
or
adc
add
imul
in
inc
push
jle
(bad)
push
sub
adc
jmp
int
xor
add
imul
sbb
ss
movs
aas
jns
test
xor
add
lahf
lods
popa
dec
xchg
idiv
pop
or
mov
push
and
mov
sub
jo
aas
stc
jno
jne
cmp
nop
loope
jnp
es
sub
sbb
mov
shl
ror
inc
imul
pop
sub
and
cdq
movs
mov
cmps
inc
stos
mov
fsubr
mov
ss
push
popa
jmp
lock
lea
pop
sbb
pop
imul
or
rcr
sub
adc
fidiv
and
push
in
or
mov
call
test
out
xchg
pop
and
pop
xor
dec
test
cmp
in
jno
out
xor
cmp
out
inc
pop
(bad)
jp
xor
pop
inc
sbb
ret
movs
imul
sub
sahf
adc
hlt
xchg
fcmovnb
pop
jg
or
ror
mov
rcl
or
sbb
call
mov
mov
aaa
dec
xchg
inc
pop
cwde
ins
outs
pop
xchg
or
cmp
into
and
inc
inc
xor
loopne
ja
jmp
retf
jne
fs
or
or
xchg
cmps
inc
add
push
inc
in
std
mov
int
js
xor
add
jecxz
xor
fnop
sti
push
mov
(bad)
lods
jae
inc
nop
aam
add
jb
mov
mov
fldln2
add
inc
sub
test
cmp
cmp
ret
mov
dec
test
add
(bad)
ror
jns
dec
test
sti
mov
stos
cmp
mov
mov
inc
inc
leave
dec
pop
cmpxchg
adc
jle
and
ss
int
test
add
pop
push
cmps
je
mov
mov
out
or
mov
mul
scas
add
lea
ja
mov
nop
mov
mov
test
(bad)
fild
push
jmp
inc
sbb
fwait
dec
js
jae
sbb
push
push
not
xchg
xor
cmps
xor
lock
pop
jbe
jl
stos
or
test
xor
sahf
adc
fld
test
dec
data16
xor
aad
lods
xchg
jge
adc
movs
in
push
inc
pop
mov
xchg
out
lods
xlat
add
mov
xor
nop
dec
daa
popf
xchg
sbb
sbb
test
fcomp
dec
mov
pop
movs
mov
arpl
mov
outs
mov
push
cdq
lock
push
add
call
and
scas
push
jne
test
and
sbb
push
xchg
mov
loopne
jne
and
test
aas
nop
jge
and
xor
ret
nop
or
ja
or
add
iret
inc
jne
cmp
fld
add
or
ret
push
fs
mov
mov
jl
mov
inc
mov
xchg
jno
add
pop
adc
mov
out
inc
ja
jge
sbb
sahf
inc
dec
mov
sbb
add
adc
mov
neg
imul
aaa
add
cmp
jle
aas
push
pushf
lods
cdq
dec
mov
cmps
test
xchg
pop
(bad)
loopne
(bad)
fidiv
dec
and
xor
pop
push
add
mov
push
test
inc
imul
mov
xor
jae
push
aas
retf
(bad)
or
ret
add
sqrtps
shl
scas
ficom
nop
mov
inc
cmp
loope
loope
in
xor
adc
in
push
out
dec
inc
sbb
in
lods
cmp
mov
xor
or
pusha
pop
sbb
sub
inc
shl
sar
arpl
iret
xor
cmp
jge
nop
inc
xor
stos
aad
xchg
push
cwde
adc
rcr
jnp
sub
or
mov
fadd
jge
call
cmp
nop
and
test
pop
cli
dec
or
sbb
mov
out
xor
outs
pop
mov
add
jae
jecxz
mov
stc
add
fdivp
test
je
mov
push
movs
cmp
aaa
adc
sub
(bad)
mov
push
pcmpeqb
push
sbb
xchg
push
daa
jns
xor
and
sbb
or
ror
or
aas
inc
pusha
aas
cmp
ins
push
and
xchg
push
cs
cmp
int
cmp
out
fcomp
pop
mov
push
or
dec
adc
adc
inc
inc
ret
out
inc
inc
sub
dec
ins
sub
fcom
mov
cmp
fistp
mov
cmp
ror
xor
mov
stos
enter
je
mov
imul
rol
push
cli
xchg
cwde
lods
(bad)
in
iret
xor
in
sub
nop
mov
cdq
jle
int3
pop
in
sub
xchg
int3
push
popa
pushf
mov
sub
cmps
lock
icebp
imul
mov
sbb
push
xchg
into
rcr
adc
jns
push
jl
sub
mov
cmp
fld
stos
je
fsub
jge
mov
inc
xchg
add
push
pop
inc
in
nop
in
popa
pushf
cmps
xchg
cmc
push
push
mov
jp
lea
fs
or
mov
pop
cmp
dec
inc
(bad)
add
or
loop
loope
and
push
std
xor
into
and
or
movs
clc
dec
add
or
or
jbe
pop
jo
pop
push
nop
pushw
bound
jmp
or
adc
mov
sbb
fisub
fdivr
or
cmp
or
fs
call
add
jo
outs
cmps
xor
add
cmp
jle
add
bnd
add
add
or
push
stc
adc
cmp
mov
xchg
adc
nop
das
mov
jmp
aam
test
or
mov
jne
adc
fadd
xchg
out
daa
push
jg
push
and
pop
xchg
fnstcw
dec
fidiv
dec
add
lock
in
mov
cmp
cs
in
sub
push
clc
clc
dec
jae
imul
fs
xchg
xchg
xor
gs
adc
jmp
fmul
add
sbb
add
in
mov
mov
and
push
push
mov
mov
loop
xor
push
movs
mov
pop
nop
adc
cmp
xchg
test
xchg
add
das
ret
mov
cmps
push
outs
ror
pop
add
mov
daa
add
sub
mov
xor
add
into
or
jb
gs
add
push
(bad)
mov
dec
and
mov
xchg
dec
movs
pusha
or
sub
adc
pop
jmp
mov
retf
jge
dec
jno
jo
scas
adc
loopne
add
cmp
cs
jle
fistp
and
jle
adc
cmp
sbb
sub
mov
rcl
clc
fcom
xor
clc
fdiv
cmps
or
sbb
inc
jmp
stos
cmp
push
mov
loopne
lods
shl
jle
sbb
sub
and
mov
inc
call
fdiv
imul
aam
dec
cmp
or
cmp
pop
enter
repz
add
test
push
xchg
push
int3
or
push
imul
shl
add
repnz
sub
test
push
cs
pop
pusha
xchg
call
ret
mov
or
sbb
xlat
dec
xchg
jge
dec
xlat
movs
jne
(bad)
int3
mov
xor
mov
mov
mov
mov
mov
outs
add
add
push
sub
add
adc
cwde
sbb
js
xor
in
call
es
lock
dec
ins
pop
jl
jno
ins
out
fisttp
fsubr
jne
sar
sub
jge
sub
call
mov
cmps
pop
sub
mov
(bad)
mov
fsubr
imul
inc
cmp
cwde
jecxz
inc
add
sbb
adc
xor
in
ins
push
mov
imul
add
or
sub
ror
add
inc
mov
nop
cmps
jnp
mov
jg
loopne
push
call
fcom
or
lea
shl
fsub
inc
sub
sbb
sbb
xor
sbb
ja
nop
test
pop
jmp
ret
mov
fwait
iret
leave
or
(bad)
push
xchg
or
mov
dec
in
jb
cmps
add
neg
dec
or
sub
cdq
mov
je
sub
add
inc
sbb
out
dec
sub
xor
loop
in
jne
jge
nop
mov
xchg
jno
jno
sbb
popf
movs
adc
xor
test
pop
mov
adc
jns
ret
jne
add
test
cmp
aaa
jbe
sar
lea
sbb
push
repz
mul
in
stos
dec
mov
int
ret
movs
push
sbb
bound
push
jmp
mov
imul
lds
inc
nop
or
or
out
lock
pop
call
fld
xchg
retf
push
add
xchg
arpl
sbb
pop
cmp
outs
rcr
adc
xchg
and
lahf
xchg
loope
or
retf
xor
or
fxtract
pop
js
mov
push
fdiv
xchg
xor
xor
push
sbb
push
add
daa
aam
inc
lds
and
imul
loopne
dec
add
mov
jae
adc
and
mov
call
popf
stos
in
sbb
ins
inc
cvttps2pi
inc
pop
sbb
mov
rol
sub
sbb
aaa
imul
dec
ror
mov
jl
add
push
mov
or
cmps
and
jne
rcr
fwait
ja
adc
ins
and
mov
sahf
test
mov
lds
jnp
jbe
call
push
mov
xor
fcomp
aas
jmp
(bad)
sub
cmp
jmp
call
in
adc
and
mov
pop
sahf
add
add
xchg
add
xchg
sbb
pop
data16
addr16
or
xchg
xchg
rcl
repnz
adc
ret
das
(bad)
cmp
cmp
push
test
imul
sbb
loope
adc
add
enter
sub
inc
outs
in
mov
ins
jmp
cmps
jns
shl
push
shl
add
or
adc
cmp
pushf
js
ds
fdivr
mov
retf
into
push
daa
or
addr16
(bad)
outs
fs
push
inc
push
(bad)
sahf
fnstenv
ret
cmps
arpl
and
fwait
lahf
xor
xor
leave
mov
aas
hlt
xchg
sar
and
add
gs
(bad)
fisttp
rcl
jno
cmps
hlt
dec
out
dec
sub
pop
adc
mov
cli
cmps
sub
xchg
sahf
adc
jo
(bad)
xchg
mov
movs
push
js
xor
fwait
xor
ja
or
out
or
sbb
sbb
add
mov
mov
xchg
rcl
loop
jo
mov
mov
cmp
mov
mov
mov
xchg
inc
pop
jnp
daa
add
mov
cwde
or
fnstcw
push
adc
aam
xor
(bad)
adc
cdq
(bad)
(bad)
and
nop
sub
sub
or
sbb
xor
not
cmp
cmp
shl
add
push
add
loope
cmp
jmp
pushf
jo
and
or
test
xchg
sbb
and
icebp
adc
cmc
add
sub
mov
pop
stc
cmp
mov
add
bound
cmp
sbb
inc
mov
sub
pop
push
add
and
add
retf
adc
mov
adc
mov
mov
test
xlat
imul
ins
mov
cwde
push
adc
adc
sbb
xor
xor
add
call
lahf
dec
pop
push
inc
xchg
lock
mov
int
xchg
inc
popf
inc
popa
lds
mov
xchg
loopne
popa
ss
sub
add
mov
addr16
imul
jb
sar
pusha
mov
mov
in
add
cmp
inc
int3
push
dec
add
out
popa
and
add
pop
jns
sysret
jbe
call
out
sub
sbb
add
cmp
popa
vandpd
adc
ds
pop
movs
std
push
or
mov
or
jne
movs
mov
xchg
xchg
inc
retf
movs
inc
cmp
xchg
idiv
adc
adc
mov
sbb
mov
es
enter
mov
inc
fs
and
lock
je
aaa
fcom
push
jo
add
lods
adc
jle
xchg
test
sbb
add
jne
out
ins
loope
or
inc
or
ins
cmp
sbb
add
xor
enter
std
inc
sbb
and
ror
sbb
int3
push
fidivr
pop
dec
pop
js
xchg
inc
je
clc
xor
clc
fcom
add
jge
cmp
sub
mov
jae
mov
lods
idiv
dec
add
jo
cmp
mov
data16
cmp
jle
adc
and
jle
pop
jbe
xchg
and
aam
adc
or
mov
xor
or
pop
sub
push
or
jbe
scas
mov
or
setl
mov
cmp
push
or
jbe
fs
mov
xchg
pop
das
sbb
loop
ret
popa
or
push
dec
and
inc
adc
loopne
or
push
and
jb
lea
cmp
test
mov
inc
jecxz
push
loopne
and
fld
jl
push
(bad)
lock
sbb
and
not
adc
add
nop
add
cld
repnz
inc
out
lock
push
in
xchg
mov
push
add
push
or
imul
dec
loope
in
shr
mov
or
wbinvd
mov
ja
int3
out
add
pop
push
ds
dec
xor
movs
ds
xor
xlat
js
sbb
xchg
mov
push
ins
in
mov
xor
hlt
add
dec
cmps
lock
cmps
add
call
add
mov
jns
in
fwait
test
mov
ja
call
mov
xor
std
pop
call
jnp
push
loop
adc
jl
arpl
push
js
jmp
dec
bound
cmp
add
jo
retf
dec
retf
test
jmp
xchg
aam
cmp
pop
or
in
cmp
push
loop
or
data16
inc
pop
dec
xlat
sbb
(bad)
pop
push
cmp
or
test
test
out
fwait
cmp
aam
les
cmp
or
inc
inc
cmp
mov
jo
ror
arpl
(bad)
and
int3
repnz
cmp
ja
je
sbb
test
out
or
cdq
mov
inc
je
xchg
ds
in
pop
fild
mov
jne
(bad)
fnstsw
je
inc
add
test
inc
lds
xchg
and
ja
(bad)
or
loop
sar
sub
bswap
pop
repnz
mov
retf
loopne
cmp
xchg
in
inc
cs
jo
xchg
jno
adc
mov
push
xchg
pop
xor
scas
pusha
add
adc
xor
sub
mov
add
and
adc
inc
mov
and
int3
mov
aaa
rcr
movs
pop
mov
fsub
data16
sbb
pop
stos
fs
adc
stos
and
rol
inc
jmp
xchg
and
aaa
add
add
popa
push
mov
dec
add
enter
sbb
pushf
dec
jecxz
imul
xor
in
inc
xor
or
inc
xchg
sbb
push
jge
xor
pop
add
push
jmp
mov
popa
lock
sub
xchg
jbe
out
pop
aaa
test
test
add
jp
adc
outs
aas
imul
add
mov
jl
adc
leave
mov
test
enter
jne
fnsave
icebp
popf
inc
(bad)
or
inc
adc
dec
lahf
stos
(bad)
ror
sbb
dec
xchg
inc
je
test
retf
xor
sbb
out
and
push
jne
inc
inc
mov
inc
adc
dec
mov
adc
les
mov
push
sar
xor
call
movs
iret
ror
cmps
pop
dec
jne
dec
inc
repz
mov
sbb
test
adc
fwait
sub
call
repz
setp
mov
stos
mov
push
mov
adc
jmp
cmp
push
add
movs
popa
xchg
or
popa
(bad)
sub
dec
pop
lock
je
mov
add
inc
inc
mov
push
or
jmp
jmp
and
(bad)
test
mov
dec
mov
je
mov
fisubr
xor
mov
shr
inc
pop
add
daa
or
fdivr
sbb
cli
mov
cmp
addr16
jns
cmp
push
xchg
sbb
loop
test
inc
popa
aaa
xor
sbb
outs
sbb
add
xchg
out
inc
or
sbb
cmp
inc
ds
mov
push
inc
mov
sub
dec
fistp
sub
xor
sub
cld
adc
xor
lahf
push
rol
pop
movs
pop
out
jmp
add
imul
pop
add
adc
sbb
mov
push
ret
jle
push
adc
out
inc
js
fadd
sbb
rcl
stos
add
adc
sbb
pop
or
pop
lock
adc
push
jne
mov
cmc
xchg
je
and
inc
adc
add
push
adc
and
nop
outs
push
push
loopne
imul
in
fs
test
pusha
xor
jo
push
fiadd
xchg
dec
sbb
hlt
dec
loope
mov
pop
rcr
clc
lds
push
sbb
add
jmp
mov
mov
shl
xchg
inc
cmp
add
adc
add
xchg
or
and
adc
adc
sar
(bad)
add
adc
mov
aad
pop
imul
mov
sbb
adc
cmc
add
sbb
sbb
push
ins
cmps
pop
xor
mov
add
push
loope
int3
iret
pop
sbb
sbb
mov
or
fld
ss
sbb
rol
in
cmp
or
push
loopne
add
xchg
mov
cmp
ret
js
js
or
daa
inc
sbb
push
int
adc
ret
and
cmps
mov
push
test
sbb
or
pop
or
fst
cld
and
int3
xchg
add
mov
xor
and
sbb
or
adc
pop
in
jmp
dec
sub
add
lahf
add
in
mov
ret
int3
inc
mov
movs
or
in
add
sbb
xchg
hlt
out
jbe
push
(bad)
shr
inc
std
loope
add
inc
call
add
mov
ds
hlt
xor
ret
sbb
sbb
int3
lahf
push
dec
push
inc
add
out
fs
add
or
or
nop
imul
call
aaa
or
sub
jmp
cli
scas
clc
mov
adc
push
or
out
clc
cmps
pusha
fistp
jo
sar
push
aam
mov
and
pop
mov
or
inc
lods
xchg
mov
adc
ret
add
out
mov
push
(bad)
int3
dec
push
stos
or
jbe
pop
dec
add
inc
cmc
retf
cmc
mov
and
mov
ins
cmp
add
adc
and
dec
cmp
and
pop
rol
or
push
add
data16
or
adc
fist
lods
xchg
pop
loopne
test
cmp
pusha
or
shl
es
add
and
sbb
push
dec
or
test
arpl
rcr
jge
xchg
cmp
or
ret
cmp
push
stos
inc
push
push
sbb
inc
or
push
popa
xchg
fsubr
xchg
add
jecxz
jno
xor
sub
dec
test
gs
loopne
xor
add
dec
sub
jnp
jp
cmp
test
xchg
inc
cmps
(bad)
dec
or
(bad)
jo
xchg
shr
sub
mov
adc
lods
jmp
xor
call
test
add
adc
test
mov
idiv
add
sbb
xchg
hlt
mov
mov
stos
enter
jno
jge
not
stos
and
pop
xchg
push
xchg
aaa
cmp
es
out
into
aad
push
mov
mov
call
jmp
or
inc
arpl
inc
and
dec
xchg
inc
mov
add
or
or
mov
retf
pop
fs
add
int
in
mov
repnz
and
pop
ins
add
dec
inc
or
je
inc
add
cld
test
xor
xchg
push
or
push
push
mov
push
jae
cmp
or
lock
jne
or
(bad)
mov
aas
pop
adc
mov
add
sub
jmp
mov
daa
sbb
mov
fwait
ja
pop
sbb
bound
fldenv
das
xchg
test
stos
test
xor
add
pop
or
int
add
ss
inc
call
enter
sbb
imul
inc
or
pop
pop
sbb
or
adc
adc
add
push
(bad)
les
xor
push
dec
sbb
pusha
cdq
scas
adc
pop
inc
xor
jg
pop
test
(bad)
and
xchg
adc
(bad)
mov
int3
add
add
add
sub
add
add
inc
push
dec
sub
cmp
jge
sub
jmp
adc
jbe
fdivr
sub
add
ret
idiv
mov
add
and
sub
sbb
(bad)
(bad)
enter
scas
ret
mov
call
ret
stos
and
fiadd
or
push
inc
mov
or
push
cmp
int3
ins
(bad)
(bad)
dec
int
or
push
ret
loope
call
or
icebp
sbb
inc
inc
inc
adc
aaa
lahf
mov
das
and
sub
jg
add
jg
addr16
mov
add
add
sahf
add
add
sub
and
int
(bad)
fstp
clc
push
inc
push
dec
enter
inc
jne
add
mov
mov
mov
sbb
dec
test
daa
sub
test
sbb
xchg
(bad)
lock
sbb
adc
pop
inc
inc
sub
dec
ret
cmp
or
cmp
repnz
or
and
xor
in
adc
push
shr
movs
lock
push
rcr
cmc
dec
das
shl
or
jle
add
popa
stos
gs
ret
xchg
fcom
mov
dec
mov
adc
dec
das
sbb
xlat
mov
mov
adc
lds
popf
jno
xchg
je
inc
(bad)
sbb
mov
lea
xchg
(bad)
pop
(bad)
outs
jmp
outs
adc
adc
scas
jo
jne
adc
push
je
xchg
cmp
ds
xor
jl
xchg
sub
xor
enter
shr
gs
xor
inc
and
daa
lock
icebp
or
(bad)
sbb
push
lea
scas
push
push
xchg
rol
stos
pop
inc
sbb
lock
cmp
push
pop
inc
(bad)
mov
pop
in
shl
push
push
mov
ficomp
addr16
jle
jg
sub
test
inc
push
xor
in
in
cmp
add
push
push
imul
lock
ins
mov
jae
outs
pop
add
adc
popa
mov
std
push
jle
pop
or
sbb
jmp
je
cmp
add
or
mov
lahf
or
sub
out
aas
outs
cdq
aad
sbb
pop
add
push
mov
pop
pusha
imul
addr16
shl
push
mov
inc
lods
jmp
pop
jle
push
or
inc
jge
data16
inc
rcl
fiadd
mov
lods
sub
jb
leave
(bad)
sub
mov
sbb
lods
mov
repz
pop
jae
push
push
inc
ret
hlt
fisttp
loope
or
sti
shl
adc
push
and
mov
das
out
adc
test
into
mov
retf
sub
add
sbb
pop
lahf
shl
xor
ret
mov
enter
(bad)
pop
adc
pop
adc
adc
clc
fiadd
mov
push
inc
or
movs
xchg
add
adc
jo
push
fld
rcl
cld
xlat
mov
dec
or
adc
mov
and
sub
aaa
stc
xor
sbb
cmp
dec
or
rcr
adc
clc
stos
adc
lock
inc
mov
and
movd
leave
push
inc
mov
inc
jbe
jo
push
inc
cmp
out
add
or
or
or
mov
jbe
addr16
sbb
inc
mov
mov
pop
test
xor
push
dec
(bad)
and
add
std
dec
add
inc
or
clc
addr16
ficom
inc
jns
sub
xor
sub
add
sahf
lahf
jo
enter
lods
sub
adc
mov
das
jmp
push
aaa
add
jo
jo
and
xchg
or
mov
in
add
xor
leave
push
mov
das
lods
pop
pop
inc
scas
nop
test
jno
mov
xacquire
and
int
inc
rcl
sbb
inc
dec
inc
lahf
and
cs
jle
mov
cmp
xor
dec
ficomp
adc
push
add
retf
les
inc
jne
xor
pushf
push
icebp
xor
jno
dec
and
sbb
adc
fistp
imul
dec
cwde
xor
packuswb
mov
sub
adc
xchg
loope
sbb
pop
and
add
push
pop
sbb
and
dec
(bad)
mov
push
mov
cmp
scas
xor
push
or
cmps
mov
mov
xchg
add
pop
loopne
mov
xor
cmp
dec
scas
in
mov
pop
or
push
fs
dec
add
mov
or
sub
push
add
int
mov
sbb
push
or
dec
sub
pop
ins
xchg
mov
clc
adc
jge
mov
add
or
add
xchg
mov
pushf
and
add
pop
push
mov
imul
pop
mov
popa
pop
jb
in
and
ja
dec
nop
cmp
into
push
pop
push
outs
sbb
div
or
sbb
push
or
mov
mov
adc
mov
mov
test
push
sub
pop
daa
cmp
and
aaa
sub
inc
pop
dec
dec
mov
adc
push
int3
and
cmp
sar
rol
or
pop
cmp
add
rol
je
push
and
in
hlt
pop
dec
pop
xchg
adc
adc
push
mov
inc
mov
cmp
mov
clc
and
jnp
jp
sub
xchg
sbb
int
push
mov
mov
ja
enter
xor
dec
cmp
or
mov
mov
pop
(bad)
loopne
pushf
lea
jecxz
test
sbb
sbb
inc
adc
mov
push
int3
adc
xchg
dec
outs
or
and
fstp
pop
cmp
movs
pop
inc
outs
sub
push
dec
or
jle
outs
out
cdq
or
sbb
loopne
popa
jb
xor
add
sar
ror
push
jmp
mov
mov
sub
call
rcl
outs
sbb
ja
add
mov
fadd
or
inc
jg
dec
psrlw
lock
cmps
out
add
adc
xchg
mov
xchg
sysret
adc
loopne
fwait
xchg
out
adc
add
test
push
js
add
xchg
and
xchg
sub
mov
push
adc
and
mov
(bad)
xor
inc
mov
add
xor
dec
sbb
xor
(bad)
pop
sbb
rol
ins
add
lea
push
out
(bad)
jae
movs
xor
daa
jo
push
sub
pushf
cmp
and
ret
in
sub
xchg
pushf
dec
inc
sub
test
sub
or
add
ins
movs
xor
add
sub
inc
push
xor
add
lahf
cmp
stos
sbb
push
adc
or
pop
xchg
popa
jne
push
xor
fidiv
pop
aas
iret
iret
sub
ret
mul
dec
lea
dec
inc
cli
or
nop
xchg
daa
xor
xor
(bad)
add
and
arpl
cmp
pusha
ins
push
inc
and
xchg
mov
push
sub
or
mov
inc
mov
repz
mov
fld
repnz
inc
iret
xlat
fs
test
dec
mov
int3
rcr
push
mov
imul
xor
in
test
(bad)
je
mov
mov
or
sti
rcl
adc
inc
sbb
cmp
cdq
jmp
adc
add
das
shl
adc
push
xor
pop
or
xchg
in
or
cmc
in
or
cmp
scas
es
xor
in
out
stos
arpl
clc
in
sub
mov
sub
bnd
dec
cmp
push
div
clc
fld
call
push
jo
lock
popf
mov
add
xor
(bad)
leave
rol
aaa
imul
mov
mov
jne
repz
or
cmp
jg
sub
inc
popa
mov
jae
cmp
jne
pop
jp
(bad)
add
adc
fiadd
mov
sar
and
mov
add
cld
(bad)
push
or
test
retf
imul
dec
aas
out
add
pop
mov
leave
and
je
(bad)
sub
inc
add
cmp
addr16
jecxz
xchg
push
iret
bound
push
or
push
rol
or
adc
push
mov
pop
retf
mov
daa
cmps
addr16
inc
jmp
aaa
enter
cs
cmp
push
push
pop
add
adc
stos
add
pusha
test
test
push
push
ins
mov
push
arpl
sbb
and
cmps
call
enter
mov
mov
daa
minps
push
jo
lahf
add
dec
pop
loopne
sub
bound
or
xchg
retf
add
cmps
xor
scas
loope
inc
mov
(bad)
add
inc
inc
cmp
ss
add
and
inc
inc
inc
and
push
test
add
inc
addr16
jmp
inc
fild
inc
scas
pop
xchg
popf
inc
adc
xchg
mov
es
push
mov
adc
fsub
dec
add
arpl
sub
addr16
cld
je
lods
mov
sbb
call
add
mov
sub
(bad)
adc
dec
or
scas
add
sbb
clc
popa
js
arpl
adc
or
les
(bad)
inc
jmp
cmps
add
clc
inc
add
pop
or
test
xlat
lahf
push
mov
mov
mov
rcl
push
pusha
adc
or
jg
rol
inc
jmp
mov
jl
xor
lock
ss
ss
sub
fsub
add
lahf
jb
mov
cmp
dec
popa
mov
adc
pop
les
and
inc
and
or
mov
cmps
or
stc
adc
lds
mov
jle
cdq
pop
pop
repz
mov
add
lods
inc
popf
shl
outs
cmp
aad
mov
gs
(bad)
sub
adc
push
ss
jge
and
mov
jmp
(bad)
loope
inc
sbb
add
sbb
(bad)
cmp
pop
xor
bound
push
leave
and
xor
retf
mov
call
jbe
sub
arpl
pop
int3
and
ins
arpl
jmp
retf
xor
dec
sti
ins
adc
inc
push
fld
daa
mov
mov
dec
xchg
push
aas
jbe
cdq
add
jecxz
nop
mov
push
(bad)
sub
outs
hlt
add
push
js
xor
jb
sti
(bad)
push
mov
adc
xchg
into
push
(bad)
mov
push
mov
(bad)
aaa
and
jae
add
add
cmp
add
and
push
sub
cmp
sub
jno
ins
retf
add
and
xor
xor
mov
add
fs
ret
into
inc
movs
lods
sbb
les
mov
(bad)
fisttp
(bad)
fwait
push
xor
mov
mov
adc
xor
push
adc
pop
jecxz
xchg
or
adc
add
mov
stos
nop
mov
test
or
in
cmp
and
adc
xor
pop
xchg
xchg
sahf
imul
ds
call
push
ins
jge
nop
add
mov
or
add
adc
push
add
jae
sub
fisttp
inc
xor
push
xor
call
aaa
shl
push
fst
test
jg
mov
movs
xor
or
aas
xchg
push
pop
mov
fdiv
xor
inc
add
or
xchg
mov
rcr
mov
in
enter
fmul
outs
add
jb
mov
(bad)
fstp
out
pop
ret
and
sbb
pop
test
jbe
mov
or
adc
or
mov
adc
push
pop
dec
sub
and
or
sub
jnp
rcl
inc
and
sub
or
pop
cmp
movs
or
or
sbb
push
les
stos
into
popf
adc
pusha
mov
ds
(bad)
fdivr
into
xchg
call
add
(bad)
dec
dec
mov
ss
jp
xchg
(bad)
retf
dec
fsub
sbb
ret
outs
rol
or
fs
(bad)
dec
mov
sahf
push
fcomp
jne
test
and
(bad)
ss
rcr
cmps
aaa
adc
je
outs
or
sbb
cmp
pop
push
ds
imul
aas
je
jo
mov
inc
ss
sti
or
mov
cmp
jl
or
pop
repz
mov
pop
xor
loopne
fs
fmulp
jg
jmp
push
push
inc
movs
lea
jg
inc
and
bound
pop
adc
xor
rcl
xor
sub
or
push
clc
push
fcom
jl
test
repz
push
inc
adc
pop
(bad)
imul
mov
sub
mov
jne
sub
xchg
mov
pop
add
sub
shr
pop
mov
out
dec
pusha
dec
(bad)
pop
mov
dec
ds
lock
inc
push
lds
dec
xchg
lock
clc
cmp
into
movs
sbb
mov
sbb
push
ds
call
loopne
or
stos
shl
arpl
adc
inc
in
xor
test
call
inc
call
fdiv
add
adc
mov
imul
inc
fcomp
rcl
add
mov
inc
add
jge
daa
sub
sbb
push
ret
ror
jge
or
xor
shld
xor
jns
xchg
je
cmp
push
mov
xchg
push
test
push
das
add
loop
sub
push
popa
ja
add
mov
xchg
lahf
dec
push
lods
mov
lds
fistp
sbb
out
psubsb
mov
(bad)
stos
inc
add
add
inc
mov
sub
push
and
or
add
mov
sti
(bad)
inc
adc
loopne
out
push
lea
add
dec
adc
push
and
clc
mov
call
and
adc
inc
mov
loopne
and
call
jmp
scas
movs
add
bound
dec
int3
nop
nop
xor
pushf
and
mov
xchg
pop
or
or
xor
push
fisttp
enter
or
cmp
sbb
jnp
lock
inc
inc
sub
xchg
jmp
pop
push
cdq
adc
xor
add
rcr
or
cld
imul
or
pop
add
ja
push
loop
adc
out
cmp
(bad)
sti
retf
fcom
in
jnp
sub
test
lock
and
push
movs
xor
pusha
mov
nop
js
sub
push
mov
in
es
adc
test
nop
retf
pop
mov
leave
ret
mov
inc
add
and
out
fs
fld
push
fiadd
dec
ins
or
sub
arpl
ins
mov
jno
xor
and
sti
inc
out
into
xor
aaa
push
mov
jbe
inc
jg
test
sub
fiadd
jne
add
push
xchg
xor
cmps
sbb
or
test
inc
retf
push
mov
arpl
addr16
jae
daa
dec
bound
ins
pop
mov
and
fwait
push
xchg
and
push
pop
call
xchg
xchg
pop
inc
sub
sub
add
or
add
inc
aam
cwde
xor
push
ds
xchg
sbb
jmp
xchg
movs
jge
inc
jnp
or
jo
ret
ret
jnp
popa
mov
js
push
adc
das
ja
in
push
pusha
arpl
hlt
sti
loope
ret
mov
or
je
pop
jo
jae
ins
popf
xor
dec
push
fmul
rol
fcom
sbb
imul
aas
inc
dec
daa
mov
adc
sub
mov
pop
fcmovnb
out
(bad)
xchg
dec
repnz
movs
xor
sbb
(bad)
or
xor
sub
out
push
sub
lods
add
mov
sub
jno
pop
add
jmp
data16
fidiv
call
addr16
mov
jbe
mov
add
ficomp
sbb
out
loopne
das
and
sbb
std
inc
lods
push
sahf
loope
mov
scas
add
add
jge
push
pop
out
add
inc
int3
pop
aam
push
mov
sub
xchg
int
jo
call
add
dec
mov
outs
rol
addr16
adc
jmp
syscall
sar
nop
or
mov
shl
(bad)
pop
and
inc
mov
enter
mov
inc
or
ins
xchg
and
inc
xor
lea
adc
push
sbb
pop
(bad)
add
push
and
scas
pop
jmp
or
mov
sub
push
(bad)
xchg
movs
push
push
in
adc
and
sti
and
xor
pop
sub
jmp
push
and
mov
mov
adc
out
and
daa
dec
je
jmp
xor
xchg
add
ret
jbe
mov
je
adc
push
mov
dec
or
cdq
(bad)
sbb
loope
lds
or
repnz
cmc
in
inc
retf
inc
setbe
add
add
sbb
pop
js
scas
bound
or
or
add
out
sub
imul
aam
outs
inc
iret
adc
sbb
(bad)
cmp
adc
xor
dec
adc
add
pop
fbld
popf
movs
mov
push
mov
cli
pop
js
jl
imul
pop
xchg
jg
lods
fisttp
loop
iret
sar
rcr
iret
rol
inc
out
loopne
inc
or
lods
mov
sti
sbb
dec
ror
sbb
adc
add
popa
dec
and
jae
dec
or
(bad)
xor
leave
dec
cdq
add
in
pusha
popa
imul
adc
jmp
ret
xchg
lea
imul
gs
(bad)
jmp
and
pop
stos
cmp
outs
ret
sbb
aas
(bad)
push
xchg
aam
cs
inc
dec
cmp
inc
or
inc
adc
inc
cmps
pop
in
shl
xchg
mov
ins
idiv
in
sub
push
sub
mov
lea
xor
ins
dec
pop
into
ins
rcl
hlt
cmp
out
retf
(bad)
xor
enter
dec
inc
jmp
mov
add
or
test
and
and
inc
ss
ds
(bad)
inc
ss
inc
xchg
mov
mov
fild
adc
xchg
jmp
lods
outs
push
ret
test
daa
xor
mov
inc
aas
dec
inc
out
xchg
dec
dec
and
out
pop
in
xor
(bad)
(bad)
sub
gs
inc
jb
push
xchg
loopne
pop
daa
xchg
mov
and
sub
rol
xchg
out
ss
adc
(bad)
sbb
push
lea
xor
aaa
clc
mov
xchg
dec
and
mov
not
and
xor
arpl
add
sbb
and
sahf
mov
popa
int
xor
lds
xor
xor
mov
test
mov
pop
add
mov
pop
sbb
aam
loopne
and
or
iret
dec
or
push
cmp
mov
pop
clc
js
into
repnz
fisub
aad
fisubr
and
inc
push
dec
hlt
xchg
push
dec
add
push
pop
jnp
add
in
loopne
pop
pop
jp
mov
adc
cmps
adc
sub
pop
call
push
jne
xchg
nop
mov
sub
sub
mov
cmp
cmps
fistp
sbb
fcom
adc
sbb
movs
mov
jl
add
or
fbld
push
add
jecxz
es
mov
jae
shl
dec
push
sub
aad
mov
mov
ins
fisttp
pusha
cmpps
add
dec
shl
fld
pop
cld
xchg
loopne
loope
jl
jmp
and
cmp
mov
test
add
xlat
repnz
int3
ins
push
mov
sbb
pop
dec
movs
es
test
addr16
in
movs
imul
fsub
nop
dec
push
xchg
je
les
fs
les
xchg
inc
sbb
repnz
and
dec
mov
or
out
add
dec
cmp
es
xchg
scas
xor
mov
cmp
jmp
cmp
sbb
xchg
dec
ror
outs
cmp
in
dec
leave
push
dec
xor
adc
das
jmp
mov
ret
sti
gs
pushf
push
xchg
mov
call
aam
xchg
gs
aaa
jmp
mov
mov
mov
push
inc
call
sub
and
outs
and
inc
push
push
fld
fcomp
jmp
mov
sahf
and
sbb
pop
cmps
or
je
ss
pusha
jmp
mov
daa
nop
and
pop
fnstsw
pop
xchg
mov
dec
in
retf
push
arpl
(bad)
in
mov
cmc
jp
add
scas
pusha
lea
aas
adc
add
or
test
cmp
shl
sub
jno
(bad)
adc
aaa
shr
dec
leave
adc
xchg
hlt
inc
ret
loop
push
(bad)
mov
push
sub
and
inc
mov
push
dec
and
push
shl
jae
push
push
clc
push
shl
movs
in
dec
popf
xor
xor
js
xchg
cmp
nop
cmps
sbb
shl
inc
jo
dec
mov
repnz
loopne
jae
push
pusha
adc
aam
popa
adc
inc
cmp
sbb
mul
das
add
mov
mov
mov
add
xchg
adc
jns
scas
xor
and
js
shr
pop
bound
inc
jae
xchg
sar
pusha
ds
addr16
cwde
and
adc
in
or
shl
out
add
ror
xor
xchg
mov
out
cmp
sti
lock
les
sbb
sub
daa
outs
popf
shl
lahf
sbb
jecxz
repz
add
ficomp
sub
lds
lds
mov
out
push
jb
pusha
add
rol
adc
pop
jp
ret
fmul
jns
mov
push
shl
cmp
call
pop
and
pusha
add
add
(bad)
loop
or
setp
adc
inc
add
pop
or
test
sub
inc
sbb
nop
or
dec
add
add
add
mov
and
lods
or
and
inc
mov
stc
dec
outs
adc
add
je
outs
inc
imul
enter
fdiv
dec
dec
fisttp
push
or
in
nop
or
pop
cli
adc
push
cli
int
nop
retf
dec
std
stc
int3
xchg
je
jb
sti
cwde
and
pop
or
or
lahf
pushf
sti
or
or
lods
sbb
mov
movs
aad
adc
nop
(bad)
mov
rcl
adc
mov
fsubr
frstor
xlat
sbb
lea
mov
sub
repnz
data16
adc
call
cmps
jge
je
ret
jecxz
inc
dec
or
or
retf
add
fsubr
push
fadd
add
jl
aam
and
and
xchg
push
shr
and
jmp
adc
lods
aaa
dec
ds
outs
pop
pop
cmp
fadd
fdivr
(bad)
sub
add
push
push
push
mov
imul
cs
dec
rcr
and
lea
test
mov
sub
fidiv
jle
neg
arpl
jne
push
js
push
ins
int3
and
imul
add
pop
js
out
test
pop
fist
es
jb
bound
inc
popa
jbe
dec
test
push
shl
xchg
ja
aaa
jo
add
addr16
adc
(bad)
push
movs
mov
mov
mov
jg
sub
dec
jecxz
out
(bad)
lods
adc
sbb
and
or
daa
xor
cmp
jne
mov
pop
jb
arpl
sbb
imul
outs
fsubr
add
ja
es
sbb
push
fild
ret
cmp
xor
js
sbb
fst
add
pop
pop
adc
mov
and
push
push
sub
sbb
imul
adc
rcl
inc
mov
push
shl
mov
push
rcl
mov
lock
sub
rcl
sbb
pop
pop
xchg
sub
test
pop
cmp
ss
cmp
dec
pop
add
ds
or
dec
add
mov
and
mov
adc
pusha
pusha
arpl
inc
mov
out
popf
xor
or
push
imul
or
add
gs
mov
or
mov
mov
lods
sbb
mov
fidivr
ins
mov
or
or
add
sti
adc
fdiv
sub
or
push
pop
and
ficomp
fsub
fwait
rol
inc
or
or
add
adc
mov
clc
adc
push
sbb
mov
loopne
call
inc
rol
xchg
lahf
int3
and
pusha
(bad)
enter
cmp
adc
clc
jg
sbb
dec
fld
je
adc
push
into
rol
icebp
adc
sbb
or
push
or
rol
fstp
or
or
ret
ja
imul
daa
stc
cmp
jmp
mov
aas
push
dec
pop
imul
fistp
add
xor
add
xor
or
and
adc
push
ja
jge
xor
add
jns
inc
sahf
push
add
xor
inc
mov
ds
pop
and
movs
xor
and
add
lea
mov
push
ret
(bad)
into
jge
out
add
add
mov
sbb
iret
push
add
pop
or
or
or
or
or
repz
or
push
movups
adc
repz
adc
push
pop
repz
repz
sbb
sbb
(bad)
call
and
and
fadd
fdivr
push
(bad)
mov
mov
shl
cmc
iret
repz
push
add
pop
cmp
repz
jge
lahf
mov
cmp
repz
hlt
add
cmps
push
daa
cmp
sahf
out
sahf
push
scas
lea
mov
mov
pop
push
neg
sub
dec
in
or
pop
push
cdq
mov
and
adc
xchg
push
cs
and
or
push
cs
retf
or
xchg
dec
sub
in
retf
sub
mov
adc
adc
test
cmp
sub
xchg
retf
push
inc
pop
dec
movs
jb
in
dec
sbb
pop
push
mov
dec
xchg
push
cs
sbb
xchg
pusha
ja
push
popa
imul
or
sbb
and
adc
and
sbb
xchg
inc
and
mov
fwait
mov
test
or
popa
dec
fwait
xor
ret
fcom
adc
xchg
dec
pop
or
fadd
sub
jno
js
jo
scas
fwait
push
popa
or
pop
push
sub
mov
sbb
adc
push
mov
dec
mov
mov
or
inc
jbe
push
lock
int3
mov
or
and
loop
add
or
sbb
test
xor
mov
int3
loope
mov
cwde
sbb
lock
dec
and
sub
push
pusha
jmp
mov
aas
inc
sbb
imul
addr16
je
xor
pop
dec
or
and
shr
addr16
addr16
or
push
mov
xchg
mov
fs
fs
aad
jnp
add
push
movs
and
or
mov
aaa
push
or
and
jge
dec
(bad)
push
push
or
add
mov
mov
je
pop
rcr
les
or
sub
adc
mov
or
rcl
dec
ins
(bad)
int3
mov
shl
idiv
sbb
je
push
jo
mov
or
and
popa
aaa
xchg
nop
adc
cdq
add
push
adc
lock
mov
adc
fmul
xchg
dec
ja
es
and
imul
rdmsr
xor
xor
fcomp
mov
cmp
cmp
pop
sbb
and
jp
cmc
push
je
or
or
mov
sub
loopne
adc
daa
lods
int3
and
lock
dec
pop
xor
sub
xchg
xchg
nop
inc
inc
data16
mov
je
dec
scas
or
(bad)
jmp
cmovl
daa
xor
dec
and
or
int
push
mov
test
outs
dec
adc
jg
or
ja
jmp
jmp
add
fld
sbb
test
aas
lods
dec
imul
ss
inc
or
dec
call
jl
cmp
jne
xor
jge
cmp
cld
xor
sbb
mov
mov
mov
cs
jne
inc
cmps
xor
dec
and
popa
std
dec
enter
mov
or
add
or
jmp
out
xlat
call
(bad)
xor
leave
lods
cdq
or
sub
mov
ret
(bad)
or
leave
and
pop
sub
xchg
mov
xor
mov
add
inc
pushf
clc
std
or
or
loopne
xchg
push
sub
inc
xor
idiv
popf
push
(bad)
shl
ret
push
mov
ss
push
add
inc
je
mov
(bad)
add
pushf
or
and
cmp
jg
xchg
adc
cmp
(bad)
mov
inc
dec
sub
arpl
xor
popa
mov
sbb
push
cmp
cmp
mov
fsin
adc
or
inc
lods
or
mov
sub
xor
call
or
mov
xchg
xor
push
dec
les
inc
(bad)
xchg
lock
xor
adc
mov
jno
jae
push
adc
bound
pop
cmp
inc
mov
jb
stc
jmp
test
cmp
aad
or
cmp
adc
mov
xchg
cmp
adc
shl
aas
cmp
cmp
inc
ficom
or
sar
ins
dec
cmp
hlt
ret
sub
xchg
je
cmp
sbb
inc
add
inc
jmp
xlat
push
outs
add
in
ss
pop
inc
or
cli
add
push
loop
imul
cmps
(bad)
cs
push
mov
repz
or
add
movs
test
lock
andnps
sub
and
push
and
jmp
lock
add
fimul
retf
push
push
int
inc
push
lds
int
adc
popf
or
cld
xchg
mov
sti
test
mov
jmp
ret
ror
aaa
push
aad
sub
mov
dec
jmp
mov
jg
mov
add
mov
movs
fadd
cmps
xor
(bad)
xchg
lods
sub
rcl
dec
or
mov
sbb
cmc
xor
out
imul
jp
or
(bad)
jmp
jne
popa
pop
inc
and
loopne
and
mov
inc
xor
mov
dec
ret
adc
inc
inc
push
adc
mov
sbb
cmc
sub
ret
add
aaa
inc
sti
hlt
sbb
call
mov
mov
retf
push
push
push
mov
and
movs
push
inc
add
jle
push
push
lock
inc
lods
ss
sub
fwait
adc
and
xchg
sahf
pop
or
ja
pushf
mov
fild
sbb
push
popa
cmps
xor
jecxz
mov
dec
dec
lds
inc
push
adc
pop
mov
ds
adc
in
add
add
enter
pusha
pop
sub
sbb
push
add
fwait
stos
stos
nop
fcmovnb
add
mov
or
lock
cmc
out
add
call
add
fbstp
int3
(bad)
cmp
push
mov
(bad)
ins
add
mov
xor
jb
pop
call
push
xchg
inc
fild
add
xchg
cmps
nop
inc
cdq
mov
iret
cmp
(bad)
xchg
in
leave
clc
push
fwait
dec
push
add
add
xchg
cwde
xchg
adc
and
sbb
add
clc
(bad)
(bad)
out
das
test
outs
clc
cmps
jmp
add
cmp
dec
inc
in
or
mov
mov
mov
mov
push
in
inc
ret
mov
pop
inc
sub
test
fistp
add
sub
ret
and
test
cmp
or
xor
cli
adc
mov
inc
aas
and
push
mov
or
xor
sbb
inc
push
push
add
pop
adc
adc
hlt
dec
push
retf
int
jmp
adc
jo
cmp
pushf
dec
cmps
test
lea
and
push
mov
dec
test
mov
jmp
cmp
in
es
pop
push
pop
pop
cmp
fcmovnu
add
fwait
in
sub
xor
lea
inc
dec
jl
dec
rcl
bound
jecxz
and
arpl
push
shl
sbb
int
inc
pusha
xchg
jne
jne
add
into
ret
(bad)
lea
sbb
fdiv
pop
test
rcr
or
or
adc
add
adc
dec
sub
fwait
dec
hlt
mov
aaa
mov
in
mov
test
inc
ds
scas
sbb
sbb
(bad)
daa
stc
add
and
pop
or
adc
and
adc
fwait
sar
push
scas
push
test
jnp
repz
adc
in
inc
adc
pop
or
and
xchg
xor
add
inc
pop
fild
adc
(bad)
lea
fisttp
sbb
sbb
sbb
imul
aad
daa
mov
jmp
adc
cdq
jmp
xchg
aaa
jbe
sbb
adc
pop
adc
add
rol
push
in
enter
enter
in
sub
cwde
and
(bad)
xor
pop
jb
lods
jmp
dec
outs
out
call
cmp
call
jb
repnz
xchg
sahf
pusha
inc
imul
pop
adc
xchg
gs
bound
lea
pop
xor
mov
dec
in
pop
popa
popf
and
dec
pusha
dec
mov
jb
outs
popa
push
(bad)
call
sbb
fmul
shl
jmp
pop
push
or
sub
pusha
dec
cmc
les
nop
mov
jo
push
dec
sahf
xchg
ret
pusha
(bad)
in
and
ret
mov
jmp
data16
or
arpl
inc
imul
pop
dec
clc
jo
std
pusha
clc
mov
push
dec
sub
pop
sub
xor
add
adc
dec
jne
nop
dec
sahf
cdq
or
adc
mov
xchg
pop
sbb
xchg
dec
dec
gs
je
push
or
lock
or
mov
xchg
pop
std
xor
cmp
ins
dec
leave
dec
adc
push
cmp
push
sbb
ins
leave
clc
mov
je
jge
ins
mov
sbb
jae
fstp
and
pusha
sbb
adc
jb
hlt
(bad)
(bad)
jg
leave
xor
cs
cmp
jne
mov
dec
pushf
sbb
push
add
or
fld
mov
mov
mov
mov
jnp
jl
mov
mov
mov
scas
sub
mov
or
push
push
push
push
rdmsr
push
pop
pop
dec
cmp
cmp
add
or
add
test
and
lods
mov
dec
retf
stos
xchg
test
outs
nop
in
lds
jne
jae
and
push
dec
and
aaa
mov
fistp
xchg
dec
cwde
sub
stos
std
and
inc
repnz
adc
adc
jbe
add
dec
pop
fiadd
inc
or
daa
shl
add
cmp
add
or
shl
or
mov
sub
sbb
enter
mov
adc
add
inc
aam
mov
mov
sbb
and
js
mov
cld
(bad)
or
in
push
adc
shr
pop
neg
pop
xor
inc
adc
sar
or
outs
and
call
xchg
clc
lods
sbb
sub
das
loopne
inc
push
pop
and
push
inc
push
ins
aam
and
xor
pop
adc
lock
sub
out
add
mov
inc
sub
fimul
lock
xchg
add
mov
and
pusha
test
xor
sbb
sub
pop
dec
and
jbe
pop
xchg
and
cwde
and
mov
push
and
add
inc
or
lds
imul
pop
sub
loope
xchg
pop
outs
adc
cmp
fisub
push
lods
pop
mov
movs
aaa
and
xor
leave
in
vmread
mov
out
(bad)
ss
push
or
popa
lods
es
shl
std
dec
sahf
add
sub
add
inc
add
call
or
iret
repz
dec
push
pusha
je
pushf
repz
repz
mov
cmp
(bad)
enter
fsub
clc
cmp
or
sbb
xor
pop
sbb
mov
repnz
mov
inc
pusha
ja
adc
aaa
sbb
push
js
mov
ret
sbb
mov
leave
adc
shr
sub
cwde
and
adc
sbb
add
mov
nop
pop
and
jecxz
mov
pop
mov
cmp
pop
sbb
add
ret
retf
(bad)
lods
sar
add
stc
sub
xchg
sbb
sbb
add
pop
mov
(bad)
gs
(bad)
movs
jnp
xchg
js
dec
enter
sbb
push
inc
xor
sti
loope
sbb
inc
movs
fs
lods
stos
dec
cld
cld
mov
rol
push
scas
lock
and
pusha
cmp
daa
lods
adc
adc
sbb
inc
ret
xor
shl
pop
inc
jb
lods
inc
sbb
inc
clc
and
in
cmp
xor
inc
jmp
ret
lea
inc
pop
dec
mov
push
(bad)
mov
(bad)
sub
pop
lahf
and
or
aam
leave
loopne
test
lods
(bad)
push
pop
pop
fadd
adc
adc
lds
xor
(bad)
mov
ror
nop
retf
adc
xor
cmp
outs
jne
xor
pop
jle
xor
loope
lods
jno
jmp
inc
jbe
fs
sbb
and
xlat
int3
jg
aam
inc
and
lods
xchg
pop
xchg
sbb
pop
js
lock
inc
popf
test
inc
mov
push
mov
pop
xor
and
xchg
pop
or
cli
inc
sub
and
mov
mov
adc
mov
inc
lock
or
xchg
pop
mov
test
pusha
mov
or
es
adc
loopne
sbb
cmps
bound
sbb
sbb
pop
add
cmp
push
push
sbb
push
xchg
mov
mov
dec
ins
(bad)
lock
mov
test
scas
cdq
adc
lock
int3
mov
test
sbb
ins
xchg
push
push
push
lods
mov
dec
mov
cmp
imul
jne
mov
scas
ja
cmp
in
cmp
inc
sub
mov
and
aas
sub
fs
fisubr
mov
sub
jge
lock
movs
imul
sbb
retf
ds
push
xchg
dec
or
jno
xchg
jne
lds
inc
mov
jno
sub
bound
sahf
pop
mov
mov
add
dec
cli
dec
xchg
or
dec
mov
mov
adc
sbb
adc
or
push
jge
pop
test
or
adc
popf
mov
xchg
in
jo
mov
and
sub
int
push
ins
adc
je
mul
adc
dec
push
jo
and
pop
mov
movs
jl
and
test
cmps
push
ss
enter
in
loopne
test
and
push
nop
inc
(bad)
sbb
sub
sub
mov
cmps
xor
dec
or
xchg
and
iret
addr16
add
and
in
clc
push
jbe
das
xor
xor
adc
es
dec
adc
shl
test
dec
in
ror
pop
mov
push
mov
test
xchg
mov
daa
push
leave
cmp
mov
les
enter
mov
das
mov
js
adc
out
push
pop
repnz
xor
pop
imul
jmp
movlps
rcr
rcl
sbb
out
push
jnp
dec
daa
movs
lock
movs
inc
add
xor
fsubr
sub
in
pop
je
lods
pusha
jne
aam
ins
mov
arpl
shl
rcr
jmp
and
call
mov
jnp
push
push
pop
inc
ins
mov
mov
dec
sub
push
push
add
or
sub
push
mov
mov
loopne
cwde
je
push
mov
or
lods
inc
rol
sbb
adc
jb
sub
sub
dec
mov
and
or
fs
dec
in
pusha
ss
into
add
inc
xor
xchg
sbb
xchg
imul
cmps
jl
nop
xchg
add
adc
jp
outs
add
and
ins
jns
cmps
lods
popa
mov
add
les
adc
xor
mov
mov
xchg
inc
fldenv
jge
add
dec
inc
mov
es
or
xor
dec
test
scas
adc
shl
jns
mov
daa
add
mov
sbb
and
or
mov
out
les
dec
daa
inc
xor
mov
imul
mov
int3
xchg
jp
mov
or
mov
sbb
adc
clc
add
fst
fist
movs
and
adc
fwait
js
xchg
or
push
inc
rcl
pop
push
xor
outs
push
mov
mov
inc
nop
and
and
loope
or
mov
mov
lahf
out
in
and
sbb
adc
and
adc
fsubr
xchg
sbb
pop
test
popf
jp
xchg
inc
mov
add
arpl
test
adc
push
loope
je
inc
ror
and
add
mov
enter
add
mov
gs
ss
adc
je
(bad)
xchg
loopne
sub
add
ja
out
pop
mov
jo
pop
cmps
sub
pop
adc
inc
jo
rcl
sbb
xor
push
or
fldenv
push
adc
xchg
add
dec
or
adc
add
jbe
imul
mov
lods
push
or
pop
mov
frstor
dec
or
mov
rcr
add
sbb
sub
add
enter
adc
(bad)
fist
pop
repnz
or
add
mov
shr
fsubr
out
push
inc
push
dec
push
test
add
pop
adc
ds
(bad)
push
ins
outs
jl
(bad)
xor
push
inc
imul
sub
or
cmp
nop
cmp
out
fisttp
inc
push
push
pop
sbb
test
enter
aaa
daa
cmps
sbb
in
cmp
fidiv
mov
or
jae
push
inc
adc
ins
xor
ja
pop
fwait
rol
or
dec
inc
imul
and
or
ficomp
cmp
hlt
sbb
jl
mov
pop
test
push
mov
mov
(bad)
mov
add
outs
inc
shr
add
add
fbld
out
adc
inc
mov
add
xchg
cmp
in
mov
jnp
inc
sbb
or
sub
shl
jb
push
outs
xchg
mov
jne
mov
xchg
nop
xlat
pop
xor
sub
pop
jo
test
xchg
nop
or
pop
movups
inc
(bad)
test
pusha
dec
enter
adc
cmc
dec
and
sub
fcom
push
in
popa
lock
adc
das
dec
push
jno
add
xor
jae
je
ins
ror
call
popa
not
adc
mov
cmp
mov
adc
push
outs
mov
leave
ror
inc
add
cli
sahf
mov
dec
cwde
sbb
or
mov
push
inc
dec
movs
sbb
out
pop
mov
dec
mov
das
mov
popa
or
inc
ja
or
fdiv
or
loope
int
ds
int3
xchg
pop
add
cld
adc
inc
lock
push
pusha
or
imul
or
inc
add
push
repz
data16
mov
mov
dec
leave
pop
adc
adc
lahf
or
sbb
push
les
je
and
loope
imul
pusha
or
adc
adc
aaa
add
push
aas
enter
inc
add
nop
loopne
mov
retf
pop
fmul
jo
mov
pop
adc
adc
jbe
pop
aaa
inc
adc
ds
xor
outs
gs
sub
xor
jge
imul
or
and
jmp
imul
fwait
adc
or
jnp
js
or
ins
cwde
stc
mov
ins
popa
jb
or
mov
sbb
sar
scas
push
outs
mov
lahf
iret
add
aas
jo
sbb
pop
sbb
adc
add
sub
push
jle
not
nop
arpl
dec
imul
or
iret
pop
or
mov
or
push
rcr
fidivr
jbe
xchg
push
jne
jns
mov
dec
add
jle
shr
xchg
push
mov
adc
jo
andps
loopne
mov
iret
inc
je
fadd
neg
outs
cmps
inc
sub
pop
inc
and
adc
or
xchg
in
add
push
xor
(bad)
aad
add
add
cs
dec
jl
retf
jo
(bad)
(bad)
dec
popf
or
xor
arpl
inc
pop
xchg
js
jbe
pop
and
push
vunpcklpd
add
push
jl
sub
or
and
jb
cmp
inc
push
push
add
or
dec
mov
adc
inc
sahf
test
(bad)
mov
add
add
inc
add
imul
add
add
sbb
xchg
out
pop
mov
cli
sub
and
or
mov
mov
push
sahf
lahf
js
clc
inc
pop
js
imul
add
cmp
inc
pop
add
mov
xchg
cmp
inc
add
iret
clc
inc
ret
jmp
mov
aaa
add
adc
pop
add
add
in
mov
jp
adc
adc
out
add
adc
inc
nop
sbb
add
add
adc
dec
add
or
mov
mov
sbb
inc
aaa
outs
sub
and
push
inc
mov
mov
jmp
jmp
jmp
jmp
jmp
data16
jmp
int3
jmp
nop
mov
sti
cmp
cwde
cmp
fdivr
cmp
repz
push
mov
int
stc
cmp
sar
lods
add
xor
push
push
ret
xor
cmps
fldenv
sub
and
mov
push
jo
nop
sahf
fiadd
adc
out
ss
push
or
jl
pushf
movs
xchg
data16
sahf
hlt
lods
pop
add
push
cmp
sti
push
jl
jbe
ficom
push
mov
mov
add
sahf
addr16
test
ja
push
fisub
ins
xchg
push
aam
add
pop
pusha
fmul
repnz
popa
add
popf
add
dec
pop
and
mov
add
xchg
inc
rol
in
inc
adc
iret
sbb
pop
adc
test
sbb
jae
adc
sbb
push
inc
sub
and
dec
mov
les
stos
push
or
imul
adc
adc
sbb
jmp
out
arpl
dec
inc
add
push
popa
inc
mov
sbb
add
jo
outs
xor
loope
or
pop
adc
push
xor
stc
lock
ds
ins
xchg
pop
xchg
bound
and
stc
mov
xchg
add
mov
sbb
sbb
popa
mov
add
js
inc
push
pop
aaa
dec
add
xchg
and
mov
mov
pop
test
inc
and
fst
add
les
stc
inc
call
mov
and
in
adc
xchg
inc
leave
xor
push
xchg
pop
or
pop
repnz
pusha
and
adc
shl
rol
test
add
add
or
jno
pop
mov
mov
push
aaa
add
ror
or
inc
add
sbb
pop
add
sub
or
sub
mov
or
inc
push
xchg
mov
jo
stos
sub
sub
cwde
fs
pop
out
xor
sbb
or
mov
add
xchg
mov
(bad)
js
test
pop
cwde
inc
mov
mov
dec
inc
pusha
dec
cmp
xor
dec
cs
nop
sbb
adc
add
xor
mov
inc
mov
ret
fst
popa
retf
sub
outs
call
or
shr
ret
mov
sbb
mov
push
fadd
inc
call
cmp
mov
mov
call
dec
add
fcomp
push
imul
inc
ret
add
cmps
and
sbb
inc
ffreep
cmp
lock
push
dec
imul
and
push
cmps
push
mov
loop
mov
mov
fisub
mov
sub
aas
fs
leave
mov
cmp
mov
and
jle
push
ds
cmp
or
push
ror
dec
or
popf
inc
enter
pop
cwde
inc
gs
test
xor
sar
inc
iret
test
jmp
add
cmc
add
adc
jp
add
or
fwait
lods
and
jns
loop
dec
push
ds
test
jae
or
inc
outs
sub
sbb
or
cmp
dec
dec
inc
ins
or
dec
xor
mov
loopne
xrelease
and
inc
call
call
sub
bound
in
xor
xchg
stos
dec
aas
push
add
mov
and
sti
mov
in
lods
or
dec
xchg
enter
sub
dec
sub
inc
lock
fidivr
popa
movs
jb
and
pop
push
inc
(bad)
leave
push
push
xchg
cwde
fcomp
in
addps
in
push
and
pop
inc
inc
push
xor
rcl
add
push
and
add
out
call
ja
inc
int3
inc
push
stc
sbb
pop
cwde
inc
pop
das
nop
inc
sahf
pop
cwde
inc
pop
pop
cwde
sub
push
push
pop
cwde
inc
nop
add
(bad)
nop
add
cwde
inc
bound
fs
dec
bound
lods
inc
inc
loopne
and
enter
cwde
dec
dec
dec
cmp
rcl
imul
scas
add
gs
and
stos
push
add
les
xchg
push
xchg
xchg
push
aad
cwde
inc
addr16
movs
or
adc
add
inc
pop
enter
cs
jo
inc
inc
adc
imul
push
aaa
in
movs
push
pop
pop
push
nop
push
(bad)
(bad)
mov
fld
sbb
xchg
or
ret
mov
mov
adc
loopne
(bad)
ins
je
add
push
in
loop
inc
ficom
ss
mov
ret
bound
das
pop
in
push
mov
jb
or
push
adc
(bad)
(bad)
adc
call
xchg
ror
iret
lods
(bad)
call
push
cld
out
push
lods
pop
js
add
in
or
push
das
xor
inc
xchg
lock
lods
cmp
ror
xor
movs
sbb
pop
ds
inc
add
or
or
mov
loopne
push
adc
push
inc
jo
popa
test
push
loope
pop
and
aaa
clc
pop
push
pop
push
inc
les
inc
push
test
pslld
pop
nop
cli
inc
sub
inc
push
movs
and
xor
adc
dec
das
repz
adc
push
inc
sbb
push
ret
out
nop
sbb
xor
sub
inc
pop
dec
xor
cmp
pop
jl
test
pusha
ret
sbb
add
lea
push
push
mov
xor
test
sub
sbb
or
je
and
add
and
movs
adc
clc
sbb
clc
pushf
or
(bad)
ficomp
les
jmp
adc
or
inc
cmp
and
xor
sub
sahf
test
fisttp
or
cwde
inc
push
stc
fucom
pop
mov
or
push
add
psadbw
jmp
sub
push
mov
add
or
imul
call
cmp
push
loopne
adc
data16
adc
popf
and
dec
push
pop
pushf
enter
add
ret
sbb
jno
sub
rcr
fs
inc
mov
push
adc
dec
mov
sbb
xor
hlt
xchg
mov
lods
xchg
hlt
mov
and
sar
pop
sbb
out
jge
jmp
add
mov
int
mov
xchg
inc
cld
inc
sub
movs
dec
(bad)
mov
xchg
mov
inc
sar
stc
lods
enter
mov
iret
cwde
dec
sar
mov
mov
or
sbb
lods
nop
adc
add
je
dec
sub
imul
test
test
mov
loope
pusha
cmp
mov
sbb
addr16
adc
push
data16
int3
(bad)
rol
fdivr
or
popf
je
mov
cmp
mov
jo
jp
push
popa
jmp
and
daa
pusha
and
mov
adc
jle
xchg
enter
call
(bad)
xor
ret
dec
push
xchg
and
dec
rcl
addr16
pop
ss
cmp
jne
and
inc
inc
ror
xor
dec
push
pop
sti
sbb
fs
push
sbb
imul
cmp
call
adc
addr16
shl
stos
sbb
pushw
lds
je
add
cmp
and
iret
ror
je
push
loopne
push
adc
inc
(bad)
sub
cmp
mov
lock
push
or
lods
movs
pop
pop
sbb
push
add
jmp
mov
or
retf
jae
or
adc
push
call
mov
lods
dec
outs
scas
in
inc
sub
xor
jg
pusha
test
dec
jae
pop
sub
out
pop
call
push
imul
(bad)
pop
pushf
stos
stos
mov
inc
pop
and
add
rol
div
pushf
std
mov
ja
js
aaa
mov
or
cmp
xor
or
jne
loop
ret
pop
je
imul
js
jmp
dec
add
loopne
add
pop
jmp
add
push
push
inc
sbb
inc
or
ret
push
aad
mov
add
jne
das
sbb
push
xchg
mov
xchg
mov
or
sbb
retf
retf
out
pop
and
or
mov
test
pop
ds
push
inc
add
jne
outs
into
inc
pop
xor
dec
ret
sbb
sub
ins
inc
push
sbb
pop
loopne
imul
sub
inc
or
add
dec
and
sub
cmp
fstp
jbe
or
ins
shl
js
sbb
sub
fwait
mov
dec
arpl
inc
cs
add
add
arpl
popa
les
cmc
fdivr
or
sub
icebp
out
xor
or
push
inc
dec
cmp
jl
xor
pop
push
aam
push
inc
inc
add
fiadd
dec
fist
retf
ins
popa
sbb
add
call
fwait
inc
in
xlat
sub
pop
add
cmp
test
or
or
es
jno
cmp
xor
push
cmp
(bad)
push
adc
ficomp
inc
ret
or
jp
xchg
and
inc
fcmovbe
fwait
movs
cwde
nop
sbb
bound
adc
fdivr
cmp
adc
sbb
or
xchg
stos
inc
add
mov
jmp
sbb
in
cmp
bound
outs
fadd
fsubr
(bad)
jl
rcr
mov
pusha
adc
icebp
imul
pop
adc
mov
sbb
add
sti
pop
or
pop
hlt
neg
jmp
arpl
movs
push
enter
and
test
add
push
push
push
add
pop
test
pop
test
(bad)
dec
sbb
xchg
push
test
iret
in
add
int
pop
stos
ins
push
or
jmp
mov
loopne
das
inc
or
ror
fs
push
pop
adc
and
pushf
sub
retf
into
inc
je
aas
(bad)
jg
sub
pusha
add
push
movsx
pop
or
add
cmp
mov
imul
enter
pop
cmps
aaa
fadd
je
cmps
call
cmp
xlat
xor
or
and
sub
or
push
out
inc
xor
(bad)
push
mov
xor
or
cdq
cmp
sti
adc
sti
jmp
jo
add
ret
jl
js
sbb
sbb
or
dec
repz
cmp
add
or
and
mov
or
out
gs
xlat
or
xor
(bad)
sub
sub
push
sbb
mov
pop
retf
add
inc
sub
adc
fcmovb
push
std
adc
cmp
pusha
mov
or
je
ss
pop
nop
popa
sbb
sub
mov
add
mov
adc
addr16
mov
push
push
jns
je
fucomp
cdq
mov
call
add
ins
and
and
pop
adc
sti
sub
lds
mov
outs
mul
dec
mov
test
adc
and
popf
sub
jno
popf
xchg
sub
xchg
pop
adc
jg
push
adc
fbld
mov
or
xor
fdiv
scas
mov
mov
sub
jle
test
out
je
mov
int3
push
dec
inc
loopne
add
inc
adc
ret
push
out
add
inc
mov
lods
add
(bad)
xor
sbb
fsubr
sar
push
cmp
cmps
dec
dec
outs
leave
xor
ss
in
or
dec
pop
das
dec
enter
sti
loopne
sub
add
sub
sbb
fidiv
pop
cmp
mov
add
(bad)
push
xchg
push
call
hlt
or
xchg
les
push
pop
xchg
and
pusha
push
xor
xor
js
rcr
mov
cli
or
or
test
jge
xor
out
iret
mov
mov
ret
imul
pop
cmp
jb
call
add
jg
push
into
adc
xor
adc
sbb
lea
and
add
pop
push
mov
push
div
and
nop
inc
xchg
or
hlt
xor
call
and
xor
pop
cld
xchg
aam
and
push
mov
xor
sar
call
inc
adc
xor
push
inc
aad
sahf
mov
mov
clc
sbb
popa
cli
ja
adc
xor
push
pop
out
adc
push
imul
push
jmp
lahf
mov
outs
dec
or
dec
test
pop
or
pop
mov
fst
add
xchg
dec
push
nop
jge
jge
push
test
xor
cli
ror
loopne
cld
mov
jecxz
mov
adc
push
rcl
mov
and
adc
adc
xor
mov
mov
aaa
fmul
loop
or
and
aaa
and
or
inc
sub
leave
fst
sbb
(bad)
es
sbb
cld
test
jne
stos
and
pop
mov
lock
sbb
jle
lock
outs
inc
mov
out
aas
aam
pusha
pop
inc
cmp
imul
imul
and
cmp
aaa
inc
aad
stos
dec
cmp
cmc
lock
add
int3
lods
inc
fst
mov
push
in
or
or
sub
push
pusha
pusha
and
retf
outs
cmps
mov
jno
lds
mov
xchg
lea
jns
je
fs
das
xor
pop
je
mov
ss
sbb
sets
dec
ja
out
fs
pop
in
es
pusha
add
ror
fs
dec
push
adc
nop
fcmovne
inc
shl
xchg
loopne
mov
mov
or
idiv
and
pop
in
xchg
(bad)
(bad)
(bad)
push
and
dec
jb
or
fidiv
jo
loop
pop
jmp
cli
cmp
mov
jb
hlt
scas
push
pop
push
sub
out
xchg
xchg
sub
add
xlat
lmsw
push
pop
es
mov
and
shr
jno
and
pop
push
mov
lea
push
mov
jne
aaa
ds
add
inc
outs
lahf
adc
out
outs
mov
mov
cmp
pop
mov
outs
or
jmp
ja
mov
inc
jmp
mov
sbb
fld
xchg
mov
pop
mov
xchg
scas
fcom
jge
adc
adc
ss
adc
fdiv
and
aam
inc
fcomp
enter
ror
sub
mov
(bad)
fs
pop
rcr
xor
jns
loop
add
(bad)
bound
je
dec
push
cmps
dec
out
inc
pop
push
dec
xchg
cmps
test
add
push
dec
lods
or
out
cmps
adc
out
xchg
setne
mov
push
in
dec
jo
cmc
sbb
pop
repnz
retf
cmp
mov
popa
jl
pshufw
mov
mov
aad
jg
jp
adc
jns
or
jbe
test
mov
loopne
cs
sbb
and
call
cmp
inc
fimul
xchg
xor
jge
jle
cli
push
mov
push
neg
pop
div
pop
xchg
push
and
je
add
and
shl
retf
scas
hlt
jbe
sub
hlt
test
jne
add
rcr
jo
push
jns
dec
ins
cmp
mov
sub
enter
pop
scas
xchg
push
pop
sbb
sbb
push
movs
ret
and
cmp
out
cmp
jbe
test
gs
or
(bad)
jg
jbe
xor
mov
add
push
sbb
or
dec
add
ffreep
das
add
pop
ja
add
push
add
test
add
test
xchg
aam
jbe
jecxz
ror
inc
adc
dec
sub
dec
lods
push
inc
jmp
cmps
mov
mov
jmp
jno
lea
imul
jl
call
inc
cmp
inc
out
cmp
dec
sbb
imul
ret
ds
cli
stc
push
ret
div
add
popa
push
je
mov
mov
mov
inc
cmp
mov
xor
jbe
fcom
retf
adc
inc
add
mov
lock
xor
jge
cwde
dec
test
xor
punpckhdq
and
fadd
daa
or
adc
pushf
ins
adc
pop
xor
push
add
rol
call
call
cmps
sub
push
pusha
or
sbb
loopne
cmp
sub
jg
stos
mov
and
add
pop
clc
push
(bad)
pop
and
inc
and
add
add
jnp
mov
pop
adc
add
repnz
pop
mov
add
in
mov
mov
loope
data16
stos
pop
sbb
xchg
or
and
cmc
out
jb
push
pusha
fstp
or
popa
sbb
and
xchg
xor
mov
icebp
and
ror
jne
xchg
in
cmps
add
movs
dec
and
push
outs
out
shl
or
movs
cmps
leave
popf
jbe
jp
inc
lods
add
pop
sub
mov
fwait
inc
and
add
repnz
and
inc
fs
push
mov
iret
sbb
lea
jp
jno
add
lock
sub
push
sti
dec
leave
loope
or
xchg
and
dec
pop
sub
push
pop
sbb
mov
test
add
xor
ja
pop
mov
sub
jnp
and
loop
mov
leave
lea
sar
ret
add
add
mov
fcmovnu
inc
add
mov
int3
test
mov
clc
imul
mov
jmp
xor
cli
and
aam
shr
addr16
and
addr16
sub
pop
lods
inc
xchg
dec
and
sbb
repz
ret
cmp
adc
imul
xor
xchg
cmp
mov
test
mov
mov
lods
cwde
mov
xchg
ins
push
je
add
imul
mov
fisub
push
inc
mov
dec
and
dec
test
int3
add
imul
in
cmovb
sbb
dec
xchg
shr
in
or
mov
repz
out
adc
(bad)
fistp
mov
dec
addr16
cwde
xchg
and
dec
jge
and
mov
sub
pop
(bad)
inc
xor
je
add
mov
(bad)
daa
push
leave
or
sub
mov
iret
or
aas
jno
pop
dec
fdivr
lock
mov
fldenv
cmp
and
or
and
push
push
outs
mov
sbb
bswap
test
and
aam
sub
adc
sub
test
mov
leave
ror
fsubr
adc
sub
mov
adc
ret
push
xchg
cmp
and
nop
out
dec
jp
cmp
add
dec
jg
cmp
mov
push
pop
xor
mov
mov
cmps
imul
push
fs
sub
add
mov
sbb
fild
inc
js
sbb
rcr
jecxz
cmp
xchg
mov
mov
ja
or
test
mov
inc
add
add
cmps
xlat
jb
mov
pop
pop
daa
les
fcmovnbe
inc
pop
ret
test
push
jb
xchg
int
aaa
mov
imul
add
mov
adc
and
push
push
pusha
dec
hlt
mov
aas
adc
sbb
cmp
shl
aaa
test
adc
pop
dec
cmp
pop
mov
clc
xor
call
(bad)
cmp
and
push
and
adc
push
imul
pop
and
in
sbb
int
icebp
inc
adc
mov
add
(bad)
rcl
movs
ror
sbb
jl
add
dec
jo
sub
cmps
lea
push
arpl
ja
jecxz
mov
push
cmp
xor
or
xor
push
enter
int
add
fs
test
mov
mov
pop
repnz
cmps
loop
loopne
mov
data16
add
(bad)
ins
xchg
iret
add
add
sbb
sbb
(bad)
xor
mov
mov
and
lahf
mov
push
cmp
and
xchg
push
cwde
cmp
clc
mov
adc
add
push
push
mov
movs
mov
push
add
rcr
and
and
mov
xor
inc
jns
imul
cwde
jl
hlt
xor
add
xchg
aad
sbb
test
push
addr16
jge
inc
mov
scas
inc
add
xor
nop
mov
add
sbb
call
and
test
jbe
jmp
ret
mov
push
dec
rol
cmp
cwde
add
mov
scas
push
cmp
nop
and
cmp
sub
cmp
mov
adc
mov
xlat
push
mov
mov
adc
pop
mov
int
or
sbb
xchg
push
mov
mov
shr
add
mov
sbb
movs
ret
or
xchg
mov
or
jecxz
(bad)
rcl
std
outs
idiv
pop
push
add
fidiv
(bad)
mov
fstp
add
xchg
enter
jne
js
inc
sub
sub
cmp
and
push
fsub
dec
push
fmul
adc
fadd
xchg
add
ins
mov
les
inc
jne
jns
out
int
push
mov
xchg
bt
jns
arpl
call
shr
pop
pop
movs
test
adc
xchg
inc
ja
add
jae
pop
jmp
(bad)
sti
add
and
je
add
fs
shl
or
je
pop
sbb
xchg
dec
add
xchg
icebp
cld
add
sub
add
add
add
dec
pusha
leave
sub
and
inc
and
ja
(bad)
sbb
test
mov
sbb
and
dec
fiadd
xor
dec
xor
jo
mov
outs
lock
cmp
sbb
pop
int3
jo
int
add
inc
or
mov
add
cmp
out
sbb
cmp
loop
fadd
push
pop
add
fwait
inc
pop
(bad)
rep
push
jo
and
pop
(bad)
xlat
ret
xchg
mov
and
pop
out
in
inc
xchg
dec
in
(bad)
cmp
stc
mov
cmp
cmp
inc
sar
adc
xor
mov
or
add
int3
xchg
add
push
outs
inc
mov
shl
xor
push
add
mov
adc
mov
push
in
inc
push
icebp
sub
retf
test
sub
push
cmp
sub
inc
jbe
loopne
xchg
or
sbb
adc
add
loopne
xchg
mov
idiv
dec
sbb
test
repz
lock
or
daa
mov
test
aas
adc
jnp
fs
clc
cmp
mov
cs
ficomp
mov
call
hlt
stos
xchg
mov
in
jl
mov
arpl
xchg
(bad)
jae
ds
aaa
and
hlt
lods
add
push
ja
xchg
or
sub
push
mov
daa
stc
mov
mov
and
and
clc
cdq
lock
adc
adc
mov
dec
push
cmp
or
pop
ret
inc
lock
jg
add
mov
jmp
cmp
call
or
mov
and
or
cmp
push
push
sub
mov
rcr
ror
clc
adc
add
stos
ins
mov
sbb
lods
xchg
push
inc
dec
ret
xchg
and
adc
aam
sub
nop
or
movs
add
xor
mov
xchg
push
inc
rol
(bad)
je
mov
loop
mov
pop
sar
sub
push
inc
add
or
test
sub
add
fs
test
xchg
sbb
xchg
sub
inc
inc
or
imul
movs
das
mov
ret
adc
mov
ins
lea
or
inc
fiadd
push
out
xchg
push
push
fmul
push
in
inc
jge
push
add
or
stos
fild
dec
dec
mov
es
test
in
and
add
inc
(bad)
pop
inc
xor
clc
adc
in
loope
sbb
or
xchg
jge
lods
movs
neg
in
mov
dec
sub
push
and
retf
or
sbb
rcr
lea
cwde
jmp
out
into
addr16
jno
or
and
pop
sub
add
pop
inc
ret
push
push
push
lds
lds
sub
imul
daa
adc
push
(bad)
mov
je
jecxz
or
iret
inc
movs
cmp
add
dec
pop
xchg
cmp
add
lock
push
nop
push
jl
or
pusha
ins
push
xchg
in
mov
or
and
frstor
cmp
xchg
and
dec
movs
or
mov
jbe
cmp
fld
sbb
pop
push
xchg
xor
das
lea
add
mov
je
jo
ja
mov
jae
pushf
sub
lods
ss
inc
addr16
add
adc
stos
fdiv
and
sbb
pop
ret
adc
ins
mov
das
sbb
xor
loopne
mov
cdq
ins
mov
(bad)
gs
sbb
pop
xchg
inc
fidiv
fstp
jge
lea
retf
clc
cmp
and
stos
adc
adc
sbb
clc
imul
daa
enter
add
push
mov
jb
or
(bad)
xchg
adc
and
sahf
add
add
sahf
aam
xor
add
pop
adc
inc
fist
mov
ds
cmps
pop
mov
fs
ret
push
sbb
sbb
dec
add
add
rcl
add
sahf
xchg
and
add
xor
or
ret
add
retf
push
or
and
add
inc
cmp
mov
in
es
xor
jns
mov
adc
xchg
pushf
dec
and
in
inc
(bad)
inc
jmp
rol
mov
push
mov
pop
dec
loopne
cmp
or
mov
push
test
sub
add
and
jg
sub
or
add
ret
mov
cmp
adc
sub
cmp
add
enter
scas
lea
push
mov
in
imul
ins
dec
retf
mov
or
xor
jne
rol
ins
les
lods
inc
mov
je
aaa
and
scas
out
or
(bad)
out
xchg
ss
mov
mov
lods
cmp
(bad)
aam
ret
adc
(bad)
aas
dec
call
add
in
mov
and
mov
icebp
dec
push
jne
cmp
fidiv
les
nop
lea
xchg
cmp
mov
repnz
add
push
fiadd
cmp
gs
jno
xchg
ins
call
(bad)
sub
and
mov
xor
(bad)
test
xor
push
mov
cmp
(bad)
fs
iret
mov
pop
mov
and
repnz
mov
(bad)
or
mov
cmp
push
mov
pop
and
pushf
dec
push
add
(bad)
pop
mov
jp
shl
out
icebp
adc
inc
rcl
sub
jecxz
addr16
call
adc
xor
mov
push
jne
cmp
mov
sbb
sbb
outs
imul
outs
adc
jmp
sbb
add
shr
popa
dec
xor
jmp
cmp
aaa
sub
sbb
and
xor
jl
xchg
inc
aaa
les
mov
and
dec
bound
aam
add
jl
sbb
test
xchg
cmp
and
loop
pop
cmp
loopne
addr16
lock
jge
push
nop
inc
mov
(bad)
or
xchg
(bad)
mov
out
add
adc
jmp
push
jmp
repnz
cmp
clc
fistp
or
pop
add
cwde
sub
fisub
jle
push
sub
(bad)
out
test
leave
cmp
nop
and
sbb
xor
psubsb
xchg
test
xchg
outs
add
fbld
lock
inc
cmp
outs
es
jbe
or
push
adc
jne
and
mov
sbb
mov
mov
sub
clc
mov
pop
mov
fadd
jne
mov
jl
sub
call
out
mov
pop
mov
sbb
push
add
push
(bad)
or
mov
mov
fidiv
inc
adc
inc
xor
inc
mov
neg
xor
inc
mov
cmp
add
xchg
pop
jg
or
and
push
cmps
jmp
dec
sub
cmc
or
mov
out
or
xor
test
dec
call
sub
mov
into
sub
daa
push
in
mov
xchg
xchg
jmp
adc
lods
mov
sbb
dec
lahf
xchg
fcomp
dec
or
cmp
mov
mov
pop
imul
daa
fdiv
ins
sub
and
mov
leave
inc
or
inc
xchg
adc
rol
aas
jae
int3
shl
cmps
ss
fcom
je
enter
dec
sbb
cmps
cld
stos
sub
jo
pop
or
or
std
inc
inc
pop
mov
test
mov
mov
dec
pop
sub
xchg
ret
jo
cmp
ins
push
or
sbb
pusha
jmp
stos
fisttp
jno
pop
sub
push
nop
imul
sbb
stos
add
movs
gs
jge
adc
dec
test
cmp
xchg
in
pop
inc
lock
mov
test
outs
xor
sahf
mov
je
sub
sbb
pop
dec
inc
lods
sbb
jb
xchg
cmps
or
push
push
push
mov
hlt
(bad)
and
adc
adc
mov
repnz
mov
sbb
iret
inc
paddusw
xor
cmp
push
mov
xchg
int
(bad)
jns
cmp
inc
inc
jns
ss
jp
mov
popf
or
and
clc
xchg
dec
inc
add
push
ret
dec
and
es
xor
adc
xor
leave
push
gs
adc
dec
dec
pop
pop
mov
or
xchg
jnp
xchg
jmp
outs
enter
movs
adc
jl
push
cmp
xchg
fmul
ja
lods
push
sbb
add
push
cli
jne
push
ja
push
rol
mov
or
push
cmp
mov
xor
lock
cmp
test
cmps
xchg
cdq
sbb
gs
sbb
pusha
dec
sbb
jmp
sub
or
mov
adc
mov
loopne
jnp
cmp
jns
pop
lods
sub
test
push
int
pop
das
aas
inc
jns
in
jo
jb
es
jo
mov
pop
into
js
ftst
sub
sbb
aas
std
cli
add
les
cs
add
cmp
test
and
mov
push
jmp
mov
test
mov
movs
adc
and
adc
and
ror
dec
push
and
xchg
inc
les
lds
stos
ins
inc
and
add
fld
repz
stc
js
add
and
stos
mov
ret
fild
xchg
ror
je
and
retf
pop
cmp
mov
and
mov
add
cmp
sti
or
pop
cmp
push
leave
ins
mov
and
pop
xor
add
cmp
jge
inc
shr
add
cmc
cmovl
jecxz
inc
iret
sahf
cmp
pop
cmp
jmp
loope
or
sub
mov
pop
or
sub
add
and
fwait
mov
dec
pop
nop
dec
sahf
inc
jnp
push
(bad)
int
adc
das
inc
jmp
push
adc
cmp
fld
mov
sub
call
xadd
adc
inc
inc
and
xor
pop
mov
sub
push
and
pop
aaa
lock
dec
pop
outs
pop
pop
pop
mov
jp
mov
in
or
hlt
dec
test
clc
sar
mov
and
(bad)
test
retf
stos
fsubr
add
mov
dec
add
rcl
loopne
popa
in
test
jle
xchg
ins
mov
stos
inc
pusha
xchg
int3
and
cmp
nop
test
sbb
pop
sahf
fmul
les
xchg
push
cmc
outs
loopne
cmps
sbb
lods
sahf
outs
sbb
cmp
add
and
and
sar
das
push
xor
pop
imul
inc
mov
daa
jns
test
jmp
jg
xchg
push
sbb
loopne
push
cmps
lock
or
xchg
jmp
pop
adc
cmp
mov
adc
jne
push
pop
or
aaa
xor
pop
(bad)
popf
mov
mov
push
loopne
inc
(bad)
fs
push
pop
cmps
pop
ins
sub
or
lock
pop
jo
dec
or
mov
xchg
pushf
sub
push
cmp
nop
add
sbb
(bad)
dec
arpl
xor
daa
popf
cmp
push
fidiv
call
call
ss
jo
test
movs
add
iret
adc
add
mov
mov
popa
test
push
push
and
sbb
mov
mov
mov
imul
mov
and
inc
xchg
loopne
ret
adc
outs
stos
or
xor
sbb
xchg
or
push
call
mov
add
push
xor
pop
push
mov
adc
sbb
test
fisubr
(bad)
pop
xchg
out
xor
call
test
sbb
mov
mov
lods
je
int
or
jmp
mov
add
fs
sbb
pop
xchg
aas
add
test
and
jmp
mov
xor
stos
loope
shl
das
xor
xor
mov
std
or
sbb
adc
mov
jo
les
xor
add
xor
push
movs
inc
inc
or
adc
inc
loopne
mov
add
pop
fist
add
and
dec
sbb
dec
add
cmps
pop
das
in
int3
cmp
int3
das
push
aaa
rcl
xchg
or
or
rcl
aam
xlat
loope
in
or
dec
sub
or
mov
push
pusha
dec
lods
imul
push
mov
or
push
mov
fdiv
inc
push
fcomp
add
ja
push
jae
and
dec
sbb
push
mov
jae
test
jo
(bad)
xor
jno
inc
add
push
gs
call
inc
mov
sub
mov
jmp
or
movs
lds
or
fidiv
cmps
push
dec
sbb
and
or
gs
inc
dec
sbb
inc
arpl
inc
add
fist
shr
mov
add
repnz
(bad)
or
push
dec
ds
(bad)
int3
lods
pop
dec
dec
mov
sbb
sub
add
push
ja
add
daa
lea
adc
mov
add
xor
push
add
loopne
shl
or
adc
adc
shl
clc
retf
(bad)
mov
fmul
dec
fidivr
and
xchg
xchg
fadd
mov
sar
jo
fstp
and
jl
mov
out
push
leave
or
pop
xchg
jecxz
cli
stos
shl
or
in
les
test
add
pop
mov
lods
repz
pop
xor
shr
daa
and
xor
jmp
and
cmps
push
push
clc
and
arpl
dec
lods
aam
add
xor
or
sbb
sub
mov
cmps
pop
movs
push
ins
popa
pop
sbb
aam
(bad)
or
popf
retf
lock
jg
push
pop
popa
mov
adc
aad
je
(bad)
and
and
clc
movs
add
imul
xchg
push
clc
push
add
inc
cmp
jne
mov
mov
pop
test
pop
jmp
cmp
out
jno
xchg
add
or
pop
lods
scas
inc
cmp
fild
sbb
dec
and
and
push
ja
sub
daa
outs
or
xchg
mov
pop
shl
ja
aas
imul
xor
scas
mov
add
cmps
cdq
or
cmp
push
sbb
scas
push
pop
push
xchg
jae
pushf
int
push
push
shl
xchg
xor
and
loope
clc
scas
dec
pop
test
pop
lock
call
inc
xor
das
cmp
xchg
mov
ja
pop
xor
pop
mov
test
inc
cwde
and
push
(bad)
fdivr
mov
add
add
jne
cmp
xor
mov
scas
pop
movs
pop
pop
adc
lods
jnp
mov
inc
popa
je
sbb
and
sub
sub
dec
dec
rol
push
jmp
and
xor
add
ja
int
mov
add
es
jo
or
aad
aas
mov
mov
dec
mov
or
(bad)
(bad)
sbb
jo
dec
jnp
pop
ins
add
mov
xor
(bad)
push
inc
stc
sbb
jmp
sbb
or
mov
jecxz
and
inc
xchg
mov
cmps
mov
mov
mov
mul
pop
xor
lahf
inc
jne
mov
inc
adc
dec
sbb
jne
es
mov
cmp
pop
dec
leave
pop
or
xchg
jns
jbe
(bad)
sub
inc
imul
sub
sub
push
inc
adc
imul
mov
loope
add
jo
ins
push
push
imul
sbb
cwde
mov
push
lds
sub
sbb
iret
mov
pop
jmp
cmp
pop
or
imul
sbb
jmp
sbb
adc
sub
inc
imul
sub
mov
(bad)
dec
ja
fld
cmp
or
shl
push
test
add
(bad)
or
xor
js
sub
out
pop
push
or
shl
sbb
fcomp
xchg
push
adc
add
and
aas
not
pop
mov
cmp
loope
and
inc
inc
je
jg
adc
test
cmp
dec
stos
arpl
or
xor
sbb
mov
mov
sbb
in
movs
xor
stos
js
add
jp
test
test
jne
adc
cld
sub
mov
jle
push
cmp
sub
push
call
mov
add
pop
xchg
push
mov
inc
cs
dec
arpl
nop
fcmovu
psubusb
mov
add
hlt
dec
mov
mov
shl
rcr
retf
popf
cmps
sti
call
(bad)
in
ret
cmps
nop
fdiv
js
adc
lods
and
sbb
ins
cwde
retf
ret
jns
push
(bad)
iret
adc
dec
sbb
je
or
or
push
shr
sar
adc
sub
add
fimul
sbb
xor
pop
or
push
or
dec
jnp
(bad)
jmp
cmp
jne
sbb
shl
adc
adc
loop
(bad)
in
jmp
sub
mov
ret
sub
and
aam
xchg
pusha
test
mov
jae
inc
mov
mov
push
or
adc
push
jnp
pop
ds
or
xchg
leave
in
mov
lods
ror
dec
adc
mov
sub
retf
lock
or
in
xchg
mov
mov
cmp
(bad)
in
adc
ret
push
add
push
mov
inc
jae
add
inc
inc
int
mov
xchg
clc
cmp
stos
popa
jecxz
dec
adc
jnp
jne
gs
addr16
ins
sub
imul
shr
lds
mov
mov
lods
sub
imul
(bad)
xor
xor
dec
pop
push
fcomp
xchg
loop
xchg
inc
cmp
add
mov
cmps
sbb
test
aas
mov
aad
adc
dec
or
popa
das
in
ror
fsub
dec
movs
jno
test
or
pusha
jge
aas
mov
es
mov
(bad)
and
xor
nop
inc
cld
mov
(bad)
fild
test
add
jns
mov
sbb
sub
mov
fwait
add
mov
pop
lods
push
xor
jae
pop
fs
pop
pop
push
sbb
jmp
xor
sub
fwait
jmp
dec
sbb
and
das
cmp
nop
add
adc
js
fdiv
pop
jo
fmul
leave
pop
dec
mov
or
test
std
ja
add
inc
dec
adc
je
mov
jmp
popa
or
shl
stos
es
mov
daa
adc
add
mul
jae
je
or
stc
dec
and
inc
mov
pusha
cmps
push
lea
mov
dec
pop
push
scas
dec
sub
jnp
xor
imul
and
pop
shl
jo
in
mov
mov
cdq
mov
adc
xlat
jno
lea
xor
xor
jo
or
bound
and
xchg
test
xchg
inc
and
pop
(bad)
int3
adc
mov
mov
sub
sbb
add
cmp
rol
out
lea
pop
sub
inc
lods
mov
clc
and
push
jb
fadd
bound
fst
pop
cmp
lea
fadd
adc
mov
cmps
dec
(bad)
push
cmp
or
dec
pop
mov
push
sub
in
or
adc
fwait
sbb
mov
adc
sbb
xchg
sbb
leave
jae
mov
adc
sub
jp
sub
movapd
cwde
rcr
push
inc
push
ret
mov
mov
in
inc
or
push
adc
test
clc
fisttp
fmul
or
adc
or
movs
mov
mov
push
adc
aam
add
dec
and
pop
js
xlat
add
data16
and
rol
fsub
jmp
push
cli
sbb
test
push
loope
add
xchg
ss
adc
push
jo
push
pop
jnp
and
jecxz
or
push
daa
adc
repz
nop
jp
inc
or
xor
enter
scas
loopne
pop
lea
test
mov
scas
out
cmp
mov
inc
or
test
sub
int3
dec
dec
adc
add
sub
sti
ins
mov
xor
cdq
push
cmps
call
inc
adc
sub
or
mov
xchg
cmp
sbb
and
and
jl
sub
or
ss
test
xor
ret
inc
popa
add
outs
add
mov
mov
test
cmps
daa
cmp
adc
into
dec
mov
push
mov
xor
(bad)
sub
sbb
je
popf
cs
push
lock
cli
sbb
sbb
ror
add
leave
push
jne
jne
nop
loope
clc
pop
adc
into
aaa
(bad)
test
push
lds
rol
mov
dec
mov
or
leave
pop
and
mov
jg
jp
je
mov
jns
pop
adc
pop
call
add
push
mov
inc
fidiv
mov
jne
outs
adc
shl
push
ins
outs
loopne
adc
push
inc
ret
out
sub
sbb
mov
or
adc
xchg
or
lea
cwde
inc
inc
out
mov
(bad)
xlat
jne
nop
or
repz
inc
inc
cwde
cmp
das
ret
or
movs
push
jmp
bound
xchg
push
dec
pop
jmp
sub
and
pusha
loope
sub
cmp
fisttp
fs
push
pop
retf
push
in
enter
cwde
or
adc
out
rcr
or
jmp
jae
or
sub
mov
clc
or
add
movs
jns
ret
inc
clc
daa
lock
mov
pop
shl
dec
ret
jae
clc
enter
or
xor
cmps
pop
cli
add
mov
sub
rol
and
dec
mov
adc
cmps
pop
loop
or
push
test
lea
add
sub
adc
mov
and
add
icebp
mov
test
gs
dec
inc
dec
imul
xchg
mov
mov
aaa
add
sub
push
push
add
and
mov
lods
push
jmp
dec
dec
test
call
loopne
jne
pushf
repz
xchg
movs
adc
sbb
rcr
shl
dec
inc
dec
mov
dec
dec
and
pop
jp
lods
lahf
pop
clc
shl
(bad)
outs
mul
test
push
in
mov
or
leave
mov
add
(bad)
fisubr
jp
xchg
pop
ficom
mov
aam
in
sahf
inc
sbb
xchg
sub
(bad)
imul
sbb
daa
inc
adc
data16
jl
xchg
out
scas
sub
adc
add
pop
call
(bad)
mov
inc
and
sbb
jle
(bad)
scas
cmp
call
dec
sar
fsub
adc
pop
push
cld
add
loopne
sub
mov
mov
jno
mov
sbb
lods
and
and
push
cs
(bad)
adc
xor
push
inc
add
cmp
call
add
dec
xchg
mov
hlt
mov
repz
sub
adc
scas
shl
loop
jl
mov
fst
bound
xchg
add
adc
xor
addr16
inc
cvtdq2ps
les
sbb
popf
shl
and
sub
push
and
lahf
out
pusha
movs
push
cli
daa
je
or
xchg
cwde
inc
es
add
imul
jns
and
shl
push
repz
sbb
push
loop
mov
in
pop
jg
les
(bad)
mov
dec
push
int
jnp
add
pop
xor
fld
jle
(bad)
(bad)
stos
stos
inc
test
mov
(bad)
mov
inc
addr16
and
push
mov
arpl
pop
jne
dec
inc
push
out
mov
dec
(bad)
in
xor
lock
cmp
popa
cmp
jmp
push
push
mov
imul
ds
in
jnp
jne
jne
fnsave
dec
add
sbb
jge
cs
cwde
movs
sbb
xor
cmp
aam
xchg
xchg
icebp
jmp
mov
pop
mov
fld
in
cmp
jp
ror
xchg
sahf
mov
fistp
rol
sahf
cli
adc
inc
pop
jne
mov
xchg
je
shl
mov
cmp
cmp
inc
dec
jp
mov
and
pop
dec
fisub
rcr
xchg
and
sbb
mov
sbb
shl
cmp
and
popa
inc
sub
fsub
inc
test
popaw
nop
out
mov
pop
dec
lock
cmp
arpl
imul
add
ja
and
xchg
sub
and
jmp
test
pop
xor
movs
mov
mov
and
jecxz
fcom
das
aam
xchg
mov
pop
sbb
int3
lods
add
cwde
sbb
mov
or
fldenv
sbb
sub
imul
mov
fld
add
xor
xor
inc
ret
jae
dec
mov
mov
dec
adc
inc
cs
jle
sbb
push
imul
inc
add
xchg
pop
int
rol
sti
dec
jne
add
add
jbe
push
or
and
jge
mov
push
xchg
jno
scas
(bad)
adc
sahf
test
cmp
xchg
jno
adc
add
sbb
xor
or
add
or
rcr
jmp
arpl
mov
int3
(bad)
dec
loopne
pusha
iret
rcr
dec
push
ret
enter
pop
pop
lock
addr16
sbb
adc
mov
into
aas
mov
fldenv
sub
push
or
push
aam
lods
mov
cmp
(bad)
or
dec
jmp
ss
add
cmp
sbb
ins
mov
in
(bad)
adc
shl
call
dec
dec
cdq
add
add
fild
dec
aaa
sbb
sahf
mov
loop
in
and
jmp
and
mov
test
in
pop
sbb
iret
inc
scas
adc
or
fcomi
pushf
and
xor
jmp
scas
shl
and
cdq
jmp
inc
xchg
sub
nop
stos
mov
sub
inc
mov
not
mov
call
push
dec
add
dec
sbb
lods
push
jns
fwait
xor
fistp
dec
stc
and
xchg
push
pop
xor
popa
xchg
sti
mov
enter
das
mov
inc
ins
or
in
aas
mov
and
in
push
sbb
inc
pop
daa
xor
add
aam
aaa
shl
ja
and
sbb
movs
add
repnz
int
mov
sub
jp
out
pop
sbb
mov
add
push
aaa
sbb
adc
jmp
js
cdq
or
lahf
fcom
sub
pusha
jmp
xchg
pop
pop
sar
inc
imul
popf
addps
loopne
test
sbb
xor
inc
out
cmp
fld
dec
mov
xor
ins
jns
shl
adc
xor
daa
add
or
retf
add
shl
cmp
adc
movs
push
retf
jnp
or
and
fld
or
jae
rcr
fdiv
jo
and
cmp
or
cmp
sar
cmp
push
out
xor
sbb
add
or
je
add
dec
mov
(bad)
mov
pop
(bad)
or
inc
sub
cmpxchg
lds
(bad)
pop
outs
pusha
test
jae
sbb
xchg
and
pushf
inc
neg
loope
(bad)
pusha
ret
inc
sbb
test
test
test
mov
sub
and
(bad)
cmp
adc
add
nop
push
jl
xchg
adc
fst
and
pop
xchg
cmp
sub
mov
add
add
add
ret
dec
test
or
xor
mov
or
retf
add
sub
loope
out
push
dec
dec
or
cdq
movs
(bad)
push
aam
or
call
add
push
dec
cld
adc
mov
adc
addr16
mov
fdiv
jo
mov
add
pop
ja
dec
rcl
pop
ins
add
jne
adc
prefetcht2
mov
pusha
mov
imul
pop
mov
or
shr
aaa
add
or
inc
jno
add
fwait
fs
stos
sub
pop
adc
and
dec
lock
dec
add
cdq
loop
rol
ds
dec
pop
xor
push
jmp
xor
add
push
and
xchg
add
in
and
int3
(bad)
cld
sbb
or
and
jns
(bad)
int3
(bad)
int3
(bad)
cld
sub
and
rcl
les
sbb
xor
pop
sbb
lea
jmp
fwait
(bad)
loopne
sahf
dec
ins
nop
xlat
mov
pop
imul
mul
sti
mov
push
adc
std
dec
arpl
mov
mov
xor
add
test
mov
ret
push
icebp
inc
pop
imul
push
(bad)
cdq
push
push
pusha
inc
pop
push
xchg
addr16
add
and
mov
enter
or
xchg
or
imul
sub
add
or
and
iret
shr
unpckhps
jmp
mov
and
scas
sbb
es
xchg
aam
pop
pop
jmp
into
orps
add
sub
add
inc
ret
imul
cdq
and
push
jle
imul
aaa
pop
mov
out
enter
lods
inc
idiv
sub
cmp
fidivr
cmovae
or
ret
xor
inc
retf
cmp
xor
shr
leave
sbb
dec
les
pushf
and
sbb
pop
xor
xchg
fist
adc
dec
or
inc
push
xchg
sub
rcl
(bad)
mov
xchg
cli
xor
loope
fistp
popa
sub
ja
add
in
sub
mov
dec
sti
jge
push
pop
(bad)
call
cs
cmp
xchg
iret
(bad)
push
out
pop
or
sbb
cmp
ins
cmp
mov
xchg
mov
out
jb
pop
ss
or
ins
enter
pusha
ins
fsubr
pop
mov
and
les
push
movs
and
nop
dec
add
sbb
in
in
jmp
mov
adc
xor
call
jmp
in
shl
ds
mov
mov
ja
or
pop
push
cdq
daa
bound
mov
add
xchg
mov
retf
or
aas
lock
and
(bad)
dec
in
sub
xor
sub
add
jg
lds
inc
mov
mov
pop
cmc
sub
mov
outs
leave
mov
sub
xchg
cmp
jo
int3
ins
clc
dec
punpckhwd
inc
stos
(bad)
clc
add
or
and
pop
imul
adc
daa
xchg
jnp
ret
mov
adc
add
mov
adc
ds
(bad)
sub
sbb
inc
mov
fisttp
sbb
sub
or
cld
sbb
push
xchg
xchg
dec
js
add
shl
jo
push
test
pop
cwde
push
ret
jae
push
adc
jbe
or
mov
add
ror
stos
adc
lods
push
popa
add
push
pop
test
and
out
inc
pop
popa
clc
mov
or
add
pusha
jmp
ins
or
push
jne
ja
mov
or
in
push
push
add
pop
test
sbb
(bad)
imul
xor
xor
fsubr
je
xchg
xor
ret
stos
or
adc
push
adc
sbb
inc
sub
cmps
jl
jae
mov
xlat
jle
mov
pop
icebp
into
xor
xor
lock
test
ror
cmp
lahf
nop
inc
inc
mov
out
ficom
lahf
mov
or
add
ins
test
outs
add
mov
mov
inc
ins
vpshufhw
cmp
pop
sub
pushf
adc
add
je
adc
jg
shl
lahf
xchg
and
(bad)
mov
inc
add
into
arpl
sbb
loop
dec
xchg
pop
leave
(bad)
inc
ret
movups
data16
movs
dec
sub
lods
test
jecxz
dec
daa
(bad)
jns
fstp
pop
push
add
dec
rcl
add
add
aad
pop
pop
rol
dec
sub
mov
pop
cmp
das
or
hlt
cwde
ss
lahf
jg
xor
jo
in
sub
dec
or
add
sub
cdq
push
adc
push
add
clc
das
cmp
push
ret
iret
mov
test
jl
enter
(bad)
sbb
inc
mov
loop
pop
sub
int
cdq
nop
mov
call
sub
push
add
xchg
xchg
pop
pop
push
mov
test
test
and
call
xor
pop
jl
inc
inc
fidiv
mov
fnstsw
cmp
pusha
mov
push
enter
cmp
mov
or
test
cmp
fwait
les
js
sub
inc
cmp
pop
jb
push
dec
pop
jb
pop
xor
add
outs
add
pop
push
xor
jns
(bad)
push
adc
push
jne
lods
mov
push
mov
jno
sub
xchg
add
rcl
inc
dec
ret
mov
dec
xchg
pop
jb
dec
dec
dec
ins
lods
or
mov
sbb
scas
pop
mov
inc
movs
mov
push
pop
xchg
fmul
and
push
popa
lahf
add
sbb
xchg
xor
dec
sahf
dec
push
inc
dec
sbb
xor
dec
sub
aas
imul
cmc
xor
sub
and
ins
adc
and
outs
xchg
mul
daa
xlat
push
call
shl
fwait
sti
inc
sar
test
add
sti
out
jl
or
jle
clc
cmp
into
outs
xor
(bad)
xchg
loopne
cdq
sar
jmp
jno
pop
push
push
mov
mov
jae
(bad)
and
or
jmp
add
jecxz
dec
loopne
mov
mov
ror
cmp
inc
call
loope
sub
shr
dec
xor
sub
xchg
data16
adc
clc
jl
imul
ja
mov
pop
test
imul
cmps
sbb
xchg
loope
jo
fild
dec
mov
call
pop
ret
jb
adc
ret
(bad)
inc
xchg
jmp
(bad)
or
mov
aam
add
test
cwde
adc
inc
cmp
inc
mov
xor
fldenv
add
lock
add
call
fiadd
(bad)
cmp
test
pop
mov
sbb
adc
cli
add
adc
pusha
cmp
imul
mov
ins
jmp
inc
lods
movs
stos
inc
mov
pop
in
push
test
in
cld
xchg
lea
loop
xchg
jecxz
lds
or
jno
mov
test
add
test
jmp
inc
sub
(bad)
adc
add
pop
pop
push
or
mul
xor
imul
js
movs
nop
shl
mov
shr
fxch
cld
dec
dec
rol
pop
pop
ret
movs
adc
shl
cmp
jne
cmp
xchg
cmp
cmp
pop
(bad)
pop
pop
pop
inc
(bad)
push
es
cmp
push
inc
inc
test
mov
xchg
or
cmp
mov
dec
sub
add
or
push
push
xor
rol
or
int3
xchg
mov
pop
(bad)
cmp
and
lea
push
daa
inc
mov
pop
xor
add
add
sbb
pop
call
pop
add
push
and
push
adc
inc
pop
mov
add
mov
push
adc
(bad)
mov
xchg
iret
out
dec
or
outs
sbb
cmp
mov
int3
pop
addr16
pop
test
pop
push
inc
or
mov
sub
adc
shr
xchg
les
mov
xor
or
adc
xor
or
mov
pop
xchg
imul
pop
test
jo
cmps
and
pop
ret
push
push
xchg
pop
js
push
mov
retf
add
push
mov
mov
mov
test
mov
push
not
sbb
adc
add
dec
mov
and
dec
jmp
push
add
pop
pusha
rcl
dec
sbb
add
inc
fmul
xor
and
imul
sbb
inc
dec
pushf
mov
dec
cmps
mov
out
add
stc
jbe
inc
pop
ret
sub
fsub
pop
push
jns
mov
dec
movs
or
add
jae
mov
xchg
jnp
or
push
ja
dec
out
fiadd
jne
xchg
pop
addr16
inc
adc
adc
cmp
adc
mov
inc
mov
mov
scas
fst
add
xor
adc
push
pop
push
xchg
mov
sbb
push
or
or
xor
add
jmp
sub
adc
inc
sar
imul
ror
imul
lods
das
adc
sahf
cmp
mov
sahf
(bad)
push
dec
cmp
arpl
movs
mov
hlt
(bad)
sahf
idiv
repnz
add
and
cmps
dec
push
sub
adc
xor
lock
sub
pop
add
pusha
mov
sbb
imul
movs
xor
imul
not
hlt
jecxz
je
inc
inc
ja
pop
push
pop
imul
das
pop
movs
fidiv
jne
xor
mov
sbb
mov
lock
fs
xchg
clc
leave
loopne
fnstcw
xchg
inc
stos
jo
(bad)
add
xchg
sbb
(bad)
or
les
pop
hlt
je
inc
and
clc
push
adc
gs
mov
sbb
jno
rcl
retf
or
add
mov
jne
sub
ins
sub
sub
pop
and
mov
xor
jnp
dec
loopne
xchg
nop
pop
outs
fimul
imul
pop
pop
mov
scas
mov
inc
ret
adc
or
int3
add
lds
fs
loop
rol
pushf
addr16
movs
std
xchg
lahf
clc
jb
inc
pop
loope
pop
adc
xchg
inc
push
sbb
add
xchg
sbb
inc
jecxz
repz
inc
add
push
rol
cmp
mov
pop
inc
sbb
fcomp
stc
or
add
pusha
movs
arpl
out
hlt
xchg
mov
nop
cmp
in
mov
push
iret
inc
leave
mov
add
mov
xor
jmp
add
sbb
inc
test
and
push
xor
mov
xor
aaa
and
push
push
test
movs
hlt
retf
adc
push
cdq
adc
sbb
cmp
outs
cmp
mov
ret
mov
cmp
mov
daa
or
mov
push
rcl
add
mov
xchg
adc
loopne
ret
pop
add
push
push
pop
or
shr
mov
ret
cmps
inc
ja
mov
leave
mov
add
xor
mov
xor
iret
aam
cmp
mov
add
lea
cwde
dec
jmp
shr
repnz
sbb
cs
std
scas
imul
and
cmp
or
adc
ss
xor
xor
sbb
loop
jl
add
push
hlt
les
cmp
inc
inc
and
test
xchg
push
mov
pushf
and
or
les
sub
es
or
popa
cmp
sub
inc
test
sub
sti
push
dec
jne
out
jmp
dec
mov
jbe
imul
push
jne
mov
mov
mov
pushf
cwde
iret
out
enter
lods
xor
push
inc
es
mov
or
push
push
mov
or
fnstenv
sbb
push
dec
jp
push
sbb
dec
cmp
mov
in
lea
mov
cs
outs
retf
xor
mov
dec
add
xor
(bad)
aam
retf
add
push
jge
fucom
xchg
xor
xor
and
push
cmp
add
shl
test
mov
addr16
lea
mov
xchg
adc
and
inc
xor
xchg
mov
jmp
add
xor
pop
dec
xor
cmp
leave
dec
hlt
cmp
sbb
inc
dec
clc
div
add
and
pop
js
cmp
loope
ins
sub
and
or
xchg
sbb
je
lods
fcmovne
ss
push
jo
or
or
add
pop
dec
dec
shl
jl
mov
mov
(bad)
aaa
sub
xchg
pop
sub
bound
test
jmp
les
in
pop
mov
inc
shl
pop
add
dec
cdq
fs
sbb
add
jmp
xchg
lahf
daa
imul
xor
sub
hlt
loope
inc
mov
shl
imul
push
push
add
mov
int
fmul
and
enter
xchg
(bad)
out
or
dec
or
add
dec
in
adc
and
xchg
imul
jp
jp
and
jp
inc
js
push
and
or
pop
outs
mov
es
loope
cwde
add
xchg
fnsave
xchg
xchg
not
sbb
mov
mov
push
mov
sbb
out
imul
pop
jb
add
add
ss
outs
call
(bad)
in
movs
adc
seto
mov
icebp
pop
cmp
into
dec
cmps
jp
xchg
call
sbb
mov
test
imul
and
jl
xchg
cli
sbb
xor
popa
jmp
or
call
cwde
dec
cmp
add
jo
push
data16
add
pop
pop
push
ins
ins
bt
inc
push
inc
out
and
rol
fdivr
sbb
or
cmps
mov
mov
sbb
mov
mov
test
push
cmp
and
icebp
lods
ror
jnp
cs
jmp
jnp
pop
sbb
add
lods
loope
es
popf
popf
sti
call
xlat
mov
inc
add
popf
dec
enter
fidiv
and
test
inc
aam
add
imul
lea
inc
lods
adc
rcl
inc
inc
je
pop
ja
add
jae
sbb
push
push
jmp
fs
jo
jne
test
je
adc
dec
in
sbb
pop
mov
inc
add
cmp
or
outs
adc
inc
rcr
mov
inc
(bad)
mov
aam
sbb
xor
pop
lahf
cmp
add
mov
sbb
dec
shl
xor
jg
sbb
retf
sbb
loop
and
call
leave
pop
jo
test
pop
or
movs
rcr
jns
push
out
add
pop
(bad)
outs
add
fs
mov
add
or
cmp
(bad)
inc
cmc
inc
arpl
add
xor
rol
or
adc
cdq
movs
lods
push
mov
xor
ret
cdq
jmp
ret
mov
add
push
enter
add
xor
ret
add
sub
sub
int3
xchg
pop
into
sub
or
loopne
inc
rol
pushf
jo
pop
scas
or
shl
jle
sub
loope
dec
sub
aas
sub
mov
ins
ss
sbb
(bad)
jne
test
jp
mov
sbb
cld
(bad)
adc
sub
add
xchg
popf
adc
cs
adc
aad
(bad)
xlat
shl
jne
je
push
jnp
sti
xchg
dec
jge
mov
add
add
inc
pop
pop
les
lahf
test
and
sub
adc
xchg
mov
or
xchg
xchg
mov
adc
sbb
dec
rol
cmp
push
sub
icebp
clc
call
pop
dec
daa
mov
push
inc
add
jmp
test
adc
(bad)
ja
pop
loopne
xchg
sub
and
mov
mov
adc
sub
and
mov
and
mov
xchg
xchg
jb
inc
ret
popa
sub
add
inc
cmp
xor
mov
sbb
cmp
mov
adc
gs
mov
js
mov
push
fcomp
xchg
xor
xor
add
xor
cmp
popf
add
js
gs
sbb
add
xlat
repnz
dec
add
push
adc
inc
or
mov
push
mov
adc
ins
add
shr
push
push
jo
rcl
or
cmp
mov
pop
jnp
ror
rcl
push
dec
pop
inc
cmp
in
scas
xchg
add
pop
sbb
std
push
mov
push
into
or
rcl
xchg
or
into
and
inc
lods
add
daa
add
mov
in
ret
push
add
pop
in
adc
sti
fbld
cmp
pop
pop
xor
repz
sbb
scas
scas
adc
jg
push
mov
mov
adc
add
ja
and
push
add
mov
scas
push
daa
xor
jecxz
jae
addr16
loopne
push
mov
pop
fisub
add
adc
bound
jmp
or
mov
test
dec
add
out
jg
and
add
sbb
mov
loop
fcom
sbb
shl
pop
cmovno
imul
pop
cmps
mov
lea
adc
les
and
xor
sub
stc
dec
and
xor
mov
retf
repnz
and
mov
retf
cmp
mov
sub
cmp
into
jecxz
add
rcr
or
and
hlt
sbb
add
push
jmp
xor
lock
sbb
das
(bad)
pusha
mov
popf
pop
pop
mov
in
pusha
sbb
xor
stos
and
icebp
stc
mov
fild
sti
mov
pop
movs
fcomp
xor
push
cmp
test
sub
shl
pop
fiadd
stos
dec
leave
ja
f2xm1
and
add
and
sub
xchg
mov
int3
les
cmp
jne
leave
ins
mov
xor
rcl
cmp
xor
prefetchnta
cdq
pop
aad
jb
sbb
into
push
mov
jbe
call
clc
push
int3
add
mov
shr
mov
cmps
adc
aas
and
es
and
add
enter
aad
xchg
jp
mov
popa
push
imul
or
sub
cmps
(bad)
cwde
jb
fst
je
outs
adc
lods
and
inc
xchg
sub
pop
xchg
adc
adc
push
cmp
and
ret
adc
inc
cmp
cwde
push
mov
xor
out
adc
mov
jno
ret
mov
xor
inc
stc
sar
jns
push
sbb
cwde
pusha
sub
popf
retf
adc
lods
sbb
cmp
dec
add
out
es
jne
es
mov
mov
pop
cld
daa
jl
into
or
and
add
pop
scas
inc
pop
das
add
cdq
jne
mov
int3
pop
aas
mov
sti
push
aad
cmp
pusha
(bad)
movs
cs
and
test
sbb
jmp
inc
ret
inc
xlat
and
ins
loop
jb
stos
les
push
cmp
(bad)
in
hlt
mov
xor
add
fwait
data16
mov
jmp
mov
xchg
adc
xchg
add
and
or
pushf
jmp
fs
mov
mov
inc
mov
div
popa
dec
jbe
fs
icebp
sub
push
dec
adc
cmps
ds
out
arpl
pop
inc
or
sub
imul
or
adc
lods
movs
pcmpeqb
sub
cmp
(bad)
push
imul
xor
loop
pushf
movs
push
and
xchg
jmp
out
inc
dec
bound
xor
or
adc
mov
add
adc
inc
xor
add
adc
adc
fmul
sub
imul
cmp
or
add
mov
sub
and
mov
push
unpckhps
movd
imul
mov
or
add
movntps
push
mov
xchg
cmc
dec
xchg
lds
and
ror
jmp
mov
mov
test
(bad)
cld
and
mov
sbb
das
dec
test
adc
cmc
int3
retf
test
std
add
imul
fwait
test
in
mov
dec
loopne
and
ss
sub
push
scas
xor
mov
or
sbb
or
arpl
sbb
lods
(bad)
jmp
out
add
imul
push
aad
test
mov
mov
push
add
adc
xor
sub
add
nop
xchg
js
push
loope
int3
mov
je
ja
cmp
adc
lahf
mov
cdq
ja
add
inc
xchg
into
out
sti
jb
adc
inc
xor
jg
mov
add
test
jne
iret
add
dec
pop
mov
jle
gs
push
inc
sar
pop
loope
loope
cmp
fnstcw
push
xor
out
repz
mov
cmp
retf
sbb
fs
pop
xchg
jmp
mov
sbb
jg
add
mov
rol
mov
scas
mov
call
jne
sub
sub
or
fdivr
add
movs
jmp
push
pop
pop
stos
imul
jnp
aaa
jno
popa
cmp
adc
retf
add
rcl
xchg
or
push
mov
add
push
sub
loope
xchg
push
cdq
dec
loope
loop
mov
ja
or
fidiv
mov
sub
das
dec
mov
cmps
push
cs
mov
and
sar
push
mov
pop
cmps
sbb
sbb
sub
fwait
jmp
push
mov
mov
push
setb
xor
pop
jns
cmc
div
jecxz
dec
adc
jbe
sub
or
mov
dec
je
cs
push
fidiv
ror
xor
imul
or
pop
push
movs
or
add
xor
shr
fwait
pop
or
dec
jmp
adc
xchg
mov
add
xchg
mov
xchg
or
cs
and
adc
fnstenv
js
add
jne
inc
pop
dec
sahf
popa
iret
xchg
add
xor
and
xor
xchg
mov
sbb
sub
mov
test
fwait
call
sbb
das
or
sbb
aas
(bad)
sub
jae
adc
mov
or
sbb
and
add
mov
dec
in
adc
push
or
rol
and
lods
and
retf
aad
ret
pop
add
and
inc
movs
cmp
sub
and
jne
int3
nop
(bad)
(bad)
jnp
popf
sar
cmp
call
pop
cmp
sbb
adc
push
push
adc
add
mov
dec
or
int
cld
xchg
and
adc
or
pop
push
adc
push
pop
adc
nop
aam
push
dec
inc
push
xor
les
xor
lods
jmp
xlat
xor
pop
push
jmp
dec
mov
movs
pop
pop
push
mov
loopne
popf
sub
dec
sub
or
push
xor
ror
sub
xor
lds
sbb
nop
and
mov
mov
jg
fs
mov
dec
cmp
push
mov
pop
xchg
mov
adc
or
in
mov
sbb
sbb
push
icebp
inc
inc
pop
mov
xor
cmovae
loope
retf
outs
dec
outs
not
adc
cmp
out
adc
sbb
push
add
xor
call
fdiv
ja
mov
(bad)
sub
sbb
paddsb
inc
and
out
sbb
mov
mov
push
dec
inc
ret
xchg
test
adc
jmp
pop
mov
test
adc
and
add
fimul
pop
rol
or
cmp
sbb
shl
dec
ror
pop
cmp
ins
scas
inc
pop
or
repnz
adc
push
sar
or
ret
xchg
add
and
mov
addr16
(bad)
xlat
jbe
fisttp
add
mov
mov
sbb
or
pusha
add
mov
and
icebp
add
into
xchg
mov
and
jp
imul
cmp
ret
ja
or
rcl
leave
aam
mov
sub
ror
jne
sub
inc
dec
inc
mov
(bad)
mov
(bad)
rol
into
sbb
dec
sbb
add
aad
ror
int3
gs
ror
add
lods
jno
xor
mov
loopne
leave
les
inc
push
outs
push
hlt
pop
repnz
nop
rcl
fistp
dec
stos
call
stc
cld
sbb
adc
xchg
inc
clc
pop
mov
pop
jle
fs
jo
inc
inc
or
and
and
dec
(bad)
js
inc
loope
hlt
aad
or
push
cmp
or
mov
xor
and
inc
call
and
mov
mov
add
cmc
pop
dec
pop
aas
dec
or
push
add
push
mov
sbb
adc
jo
and
dec
sbb
dec
dec
loop
dec
jbe
push
push
mov
(bad)
les
lea
jno
das
jge
mov
xchg
mov
push
push
and
outs
xchg
shl
stos
dec
imul
and
jp
inc
(bad)
sbb
inc
xchg
rol
outs
popf
xor
xchg
xchg
pop
sub
add
je
mov
cld
add
ret
jo
lds
pusha
sub
sub
mov
add
xor
xchg
ins
pop
cmps
inc
cmp
ins
add
add
dec
xchg
shl
fstp
jle
dec
shl
data16
and
xor
mov
mov
mov
pop
sbb
xchg
xlat
ret
add
sbb
xor
test
clc
pop
pop
push
or
and
adc
add
add
sub
ja
adc
xchg
mov
dec
cmps
pusha
loopne
sub
add
xchg
test
adc
add
or
lahf
sbb
imul
xchg
add
loopne
push
lods
xor
push
in
push
shl
sub
sub
and
inc
nop
loopne
add
lock
pop
cmc
repnz
pop
mov
inc
inc
and
or
das
push
icebp
jmp
sbb
push
pop
mov
and
pop
test
sbb
push
push
sub
lods
mov
les
in
fsubr
lahf
adc
mov
inc
inc
dec
cli
cwde
cmp
dec
std
pop
in
push
inc
pop
or
hlt
in
mov
pop
push
mov
inc
xor
xor
adc
adc
mov
ds
lds
das
sbb
out
xchg
xchg
mov
adc
or
add
daa
mov
xchg
adc
jae
add
inc
sbb
adc
dec
out
cmps
inc
int3
sub
mov
cmp
cmp
and
es
aad
lods
add
fstp
or
xor
jo
mov
jmp
enter
scas
dec
pop
imul
hlt
in
sbb
mov
and
out
aam
scas
inc
push
fnstenv
pop
ret
sahf
mov
cli
jmp
sbb
dec
pop
sbb
lsl
iret
fld
rcl
mov
stos
sub
repz
int3
add
scas
xor
adc
or
cmp
jae
hlt
add
cmp
push
hlt
xor
aaa
rcr
ret
inc
or
imul
add
lea
fstp
push
and
push
repz
add
and
push
sub
and
mov
jno
xor
mov
and
jmp
mov
fmul
adc
or
or
pop
dec
sbb
ins
(bad)
arpl
pop
xor
mov
mov
push
push
add
add
mov
aad
ins
arpl
movs
imul
pop
xor
shl
gs
data16
sub
and
int3
or
sub
ja
shl
adc
sub
xor
sub
or
inc
mov
mov
or
xor
pop
jmp
pop
leave
and
cmp
test
aaa
enter
inc
pusha
mov
(bad)
jbe
mov
pop
push
xchg
adc
imul
push
xor
push
mov
add
xchg
cmp
pop
sbb
add
retf
inc
sub
lock
fwait
and
icebp
pop
jo
push
sub
mov
dec
je
jmp
xor
push
pop
inc
sub
push
adc
inc
pop
test
inc
push
mov
in
inc
jbe
sub
pop
xor
adc
jne
sub
push
jo
sbb
push
fwait
dec
(bad)
data16
add
inc
lock
in
cmps
push
mov
mov
(bad)
pop
repz
mov
mov
and
xchg
push
xor
out
inc
dec
das
fsub
or
test
xchg
jb
add
aad
shl
adc
dec
or
sub
sub
push
cmp
pop
pop
jecxz
sub
into
xor
mov
push
pop
add
lock
jne
xor
pusha
pop
cmps
call
outs
and
lods
pop
sar
jmp
sbb
clc
cs
mov
or
fcmovb
sub
adc
rol
dec
ss
xchg
jbe
fwait
adc
xlat
inc
sbb
ss
das
xlat
loopne
sub
in
dec
pop
dec
push
lods
outs
lock
ins
jo
inc
sbb
cmp
dec
rol
and
sbb
and
sar
ficomp
push
dec
fcomp
jne
and
mov
das
dec
jecxz
cmp
and
and
sbb
stos
test
xor
mov
out
cs
(bad)
sub
clc
inc
jno
shl
lock
repz
mov
sti
out
mov
add
iret
mov
or
push
sub
xor
add
mov
ss
addr16
xchg
dec
mov
or
xchg
rol
je
and
xor
push
sbb
jo
cdq
adc
pop
dec
and
inc
add
inc
add
inc
push
add
add
mov
pop
retf
pop
sbb
rcl
add
mov
and
mov
dec
and
hlt
test
sub
mov
jnp
dec
mov
or
mov
imul
int3
push
ins
sbb
or
or
retf
mov
sub
cmp
fld
mov
jmp
cs
inc
push
mov
or
sbb
je
dec
mov
inc
or
lea
lea
mov
and
inc
adc
xchg
jo
jmp
test
add
adc
das
or
add
inc
dec
add
clc
test
lea
or
outs
sub
mov
dec
cmp
enter
fdiv
fistp
mov
sahf
xor
add
ds
xchg
pusha
push
or
mov
mov
mov
nop
dec
inc
sub
mov
rcl
and
repz
and
add
jle
nop
push
sub
int3
int
xchg
push
inc
mov
adc
hlt
xchg
add
sub
cwde
mov
inc
jmp
xchg
movs
push
pusha
adc
or
fs
fsubr
call
push
sar
test
adc
push
nop
lock
mov
push
in
ror
jmp
pop
in
cmps
xchg
sbb
inc
pushf
inc
mov
popf
outs
or
xor
pop
lds
shl
xchg
add
pop
inc
ja
adc
jmp
sub
(bad)
cmp
dec
loop
adc
pusha
xchg
sahf
in
adc
into
and
fs
inc
sbb
mov
sbb
push
call
cmp
sbb
mov
mov
lea
ds
dec
dec
fimul
pop
mov
pop
push
es
ja
add
sbb
ror
add
scas
cmps
es
mov
push
mov
sub
sbb
dec
pop
retf
push
fist
inc
popa
movs
cmp
les
outs
and
push
and
mov
dec
push
push
mov
inc
popa
repnz
fisttp
or
dec
jg
(bad)
cmp
mov
adc
adc
hlt
add
dec
cdq
imul
cmp
je
test
aaa
lds
xor
arpl
rol
imul
(bad)
or
sbb
push
and
jnp
xchg
(bad)
sub
and
pop
movs
lea
inc
loop
mov
jb
loopne
jmp
push
adc
(bad)
loopne
inc
xchg
test
jmp
pop
fwait
add
pop
jmp
(bad)
in
(bad)
sub
rol
jl
jmp
dec
repnz
add
inc
das
ret
push
add
mov
movs
dec
daa
cmp
xchg
out
test
add
sub
imul
cmp
pop
je
push
retf
push
popa
mov
mov
scas
or
or
adc
(bad)
push
mov
sub
loope
pop
pop
(bad)
add
adc
push
stc
xor
(bad)
arpl
mov
adc
or
inc
dec
sbb
mov
and
jge
mov
and
call
jmp
push
push
dec
mov
rcr
bound
dec
(bad)
rol
and
test
jae
push
jne
loopne
sub
fiadd
xor
pop
xchg
pop
int
xor
inc
push
movs
add
sbb
les
push
adc
xchg
popa
call
jo
(bad)
je
lods
jg
adc
pop
mov
inc
jp
add
jo
pop
pop
inc
and
fwait
inc
adc
inc
jne
mov
jmp
cmp
aaa
xchg
cmps
and
and
sbb
out
rcl
sbb
push
rcl
or
cmp
jecxz
call
adc
cmps
imul
clc
dec
add
sub
lods
bnd
(bad)
mov
dec
inc
fwait
jne
mov
jne
cmp
sub
jge
mov
rol
adc
retf
mov
adc
xchg
dec
push
push
mov
xor
daa
inc
add
push
dec
fld
push
cmp
mov
(bad)
cmps
mov
push
or
aad
sbb
add
jne
in
mov
mov
rol
inc
out
enter
cwde
fistp
dec
add
cs
inc
mov
sbb
ret
inc
dec
and
push
cdq
inc
mov
adc
inc
(bad)
aam
add
xor
jns
je
add
adc
in
cmp
mov
aam
or
ror
push
cmps
ret
jo
and
adc
adc
jb
(bad)
add
jb
or
or
jb
jb
or
push
(bad)
cmp
jns
(bad)
icebp
repnz
cmp
hlt
cmc
div
pop
daa
and
or
cmps
dec
xor
shl
adc
pop
xor
sbb
cmps
sub
jg
inc
sbb
mov
xor
cmp
xor
or
sbb
xor
xchg
rol
xor
add
push
push
xchg
aam
neg
push
adc
imul
inc
xor
ss
iret
sbb
push
dec
inc
rcpps
pop
xor
adc
inc
xor
and
add
or
pop
and
test
inc
mov
push
push
inc
nop
pop
cmp
xchg
dec
xchg
pushf
cmp
dec
inc
leave
inc
repnz
inc
push
int3
aam
add
imul
in
fwait
jo
call
inc
push
inc
cmp
jle
jb
cmp
dec
inc
ja
xchg
pop
mov
fistp
scas
push
or
adc
mov
add
pop
lahf
fiadd
xlat
mov
cs
adc
cmc
dec
push
out
imul
adc
outs
sbb
push
call
jae
fild
sbb
or
rcr
fcom
or
jne
(bad)
add
adc
cmp
cmp
or
push
inc
mov
js
sbb
mov
adc
sbb
inc
or
js
clc
cmp
and
jb
jae
adc
mov
cmp
mov
adc
jmp
lea
mov
mul
cmp
push
clc
scas
daa
or
push
ds
pop
mov
mov
nop
enter
mov
cmps
cmp
(bad)
dec
mov
fistp
shr
data16
(bad)
push
mov
jae
jg
test
jb
repnz
dec
or
cs
outs
or
xchg
pop
test
xor
outs
push
in
jg
xchg
dec
add
cmps
dec
clc
vpmacsdd
fiadd
xchg
push
xor
sub
dec
movs
push
mov
sti
sahf
pop
call
fdiv
jne
not
cmps
dec
sti
out
aad
sbb
push
data16
mov
ret
inc
xor
rcr
ins
adc
aam
jbe
push
(bad)
fwait
push
iret
and
sbb
mov
outs
push
clc
xor
int
push
and
mov
dec
ficom
add
inc
std
xchg
mov
inc
dec
inc
nop
clc
and
out
or
jo
fnstcw
aam
fs
xor
out
test
adc
es
nop
jo
out
test
fisttp
loope
mov
out
jo
pop
jae
mov
adc
cld
inc
pop
or
jbe
lea
int3
ror
fiadd
nop
pusha
inc
je
sbb
nop
in
enter
test
out
or
dec
push
inc
nop
fsubr
add
and
gs
mov
xchg
push
nop
push
inc
lahf
fs
mov
sub
lods
jns
dec
jnp
mov
sbb
enter
jns
repnz
push
je
imul
inc
inc
out
push
and
in
inc
dec
outs
inc
add
les
rol
fsubr
xor
or
push
nop/reserved
inc
pop
mov
cmovs
call
cmps
mov
mov
dec
repz
loope
add
mov
ret
jmp
and
push
mov
movs
xor
fnstenv
and
cmps
dec
call
loope
xor
sub
pop
imul
lahf
sub
pop
aam
ins
push
xchg
fadd
dec
call
jl
xor
push
popa
mov
lfs
mov
aam
inc
sahf
data16
fsub
jne
popa
cmp
int
nop
mov
les
dec
popa
into
mov
fcmovnb
xchg
jp
or
dec
in
and
mov
call
push
aaa
lahf
loopne
push
inc
sbb
fistp
add
and
movnti
nop
pop
inc
and
and
sub
in
loopne
ror
ins
pop
ins
pop
addr16
adc
or
or
and
and
ret
nop
mov
retf
xor
jle
add
in
jmp
adc
jmp
rcr
xchg
es
add
cmp
jne
mov
adc
out
push
cmp
push
or
inc
and
pop
ss
adc
xor
fisttp
ins
aad
jmp
sub
loop
ret
or
push
stc
sub
jbe
imul
ins
dec
add
rol
shl
sub
cmp
jl
std
xchg
and
or
(bad)
jl
cmp
(bad)
bswap
xor
lods
mov
(bad)
sar
jns
dec
mov
mov
push
mov
popf
fucomi
jne
mov
sahf
ror
shl
sbb
repz
int3
sub
lea
test
sar
sub
daa
sub
lods
rcl
jns
jne
dec
aam
daa
mov
test
inc
dec
ret
mov
fnstcw
xor
sub
aas
ins
push
jmp
xor
in
fld
enter
popf
dec
or
push
das
std
sti
push
dec
dec
mov
mov
mov
adc
inc
or
xchg
sbb
adc
dec
push
xor
jl
loop
dec
pushf
push
push
push
clc
or
pop
push
dec
cmp
add
push
test
inc
test
xchg
outs
call
mov
or
enter
stc
push
fmul
cmp
mov
mov
fisubr
adc
pop
dec
lock
pop
xchg
fcomp
mov
add
test
xchg
stos
jbe
xchg
cwde
imul
aam
sti
jnp
mov
test
adc
dec
adc
jo
xchg
cmps
out
or
sahf
cmp
leave
aaa
mov
adc
aaa
movs
aaa
inc
pop
mov
sub
jne
sub
adc
mov
and
mov
cmps
loopne
iret
mov
add
rcr
ret
stos
sbb
mov
nop
mov
sahf
aaa
fidiv
pusha
xlat
xor
mov
add
cmp
push
out
pop
push
mov
nop
xor
std
int3
mov
add
inc
sub
push
cdq
pop
faddp
neg
xor
das
jle
adc
shr
push
fild
mov
and
sbb
punpckldq
aad
gs
mov
push
mov
int
pop
adc
movs
sub
and
enter
or
pop
inc
dec
fnstcw
dec
idiv
mov
mov
jle
mov
mov
mov
and
and
cvtps2pd
pop
es
sbb
mov
or
div
(bad)
(bad)
pop
lahf
daa
xchg
push
push
inc
lahf
mov
enter
sub
cmp
inc
add
pusha
int
ja
test
cmc
mov
adc
jmp
xchg
das
hlt
data16
fimul
mov
es
xor
lea
mov
dec
test
call
popa
add
(bad)
xlat
fist
inc
fld
adc
mov
sub
test
add
adc
jno
shl
pop
dec
or
and
inc
push
lock
lods
inc
mov
das
popa
movs
dec
cmp
lds
sub
div
mov
stc
sub
scas
and
push
ret
or
aas
lock
cmp
mov
mov
aaa
add
pop
push
ret
mov
shl
daa
loop
gs
ror
or
ss
pop
fisttp
adc
pop
add
das
push
or
sbb
aas
lock
cmp
clc
inc
lock
repz
or
sub
cdq
add
adc
push
and
cmp
inc
or
mov
cmovle
inc
movs
test
pop
test
xor
cmp
xor
add
push
imul
xor
dec
push
in
je
in
in
pusha
das
and
data16
mov
inc
jge
mov
imul
sbb
inc
xlat
sbb
clc
sub
xchg
mov
pop
(bad)
ret
out
fwait
add
arpl
inc
jnp
sub
or
mov
and
xchg
pop
fs
call
nop
add
or
mov
mov
ss
ss
aaa
cmps
test
lock
std
and
test
sbb
xchg
push
sub
xor
xchg
out
clc
shl
dec
test
daa
push
repnz
jmp
xor
push
frstor
inc
mov
inc
mov
xor
mov
rcr
add
dec
jne
repnz
and
dec
xor
xchg
(bad)
aaa
test
mov
pusha
test
and
arpl
ds
ins
aaa
imul
inc
test
or
loope
inc
pop
pusha
leave
push
dec
push
or
adc
and
jo
add
jo
adc
mov
dec
and
rol
and
nop
mov
push
mov
add
loopne
adc
sub
adc
adc
add
pop
or
test
outs
sbb
pop
pmullw
mov
mul
mov
les
mov
push
sbb
(bad)
push
dec
add
adc
or
scas
in
cmp
inc
cmp
add
cdq
outs
fwait
mov
scas
and
inc
popf
sbb
mov
inc
mov
gs
or
and
mov
ins
imul
adc
or
and
dec
mov
not
adc
and
fcomp
or
xor
cmp
in
hlt
push
cwde
push
or
mov
(bad)
dec
das
mov
inc
bnd
outs
jne
add
inc
cmp
aaa
push
xchg
ret
or
push
inc
or
add
mov
adc
sbb
pop
mov
jne
or
adc
loop
mov
icebp
in
dec
add
adc
add
data16
sub
jle
or
add
add
add
cs
sbb
mov
pmaxub
int3
pop
adc
pop
push
mov
or
imul
inc
mov
push
sbb
leave
mov
inc
adc
sub
daa
sub
add
leave
repz
add
add
add
sbb
sbb
icebp
add
ins
loope
mov
fldenv
sbb
and
cmps
mov
data16
(bad)
mov
inc
dec
push
sbb
or
and
add
inc
aad
dec
jecxz
add
push
push
push
push
jno
shl
jne
cmp
jo
mov
sbb
add
sub
popa
xchg
sbb
(bad)
push
inc
or
sub
mov
in
das
or
ds
or
xor
mov
and
push
fld
dec
pop
fwait
xchg
dec
push
cmps
pop
dec
daa
xchg
sub
in
dec
pop
test
adc
mov
or
inc
pushf
xchg
push
ins
bound
cmc
pop
adc
aam
sub
sbb
shl
sub
xor
mov
or
imul
adc
rol
mov
ss
ins
sbb
add
jp
mov
push
imul
mov
add
mov
jno
fidivr
mov
pop
or
xchg
pop
test
adc
sbb
ins
adc
sub
jae
dec
dec
(bad)
call
iret
or
jmp
mov
add
icebp
icebp
arpl
das
shl
sub
dec
outs
mov
fs
(bad)
inc
ins
add
adc
shr
jne
sub
add
mov
dec
add
pop
adc
and
push
pop
sbb
xlat
inc
ins
adc
fbstp
mov
add
or
repz
and
add
inc
or
test
inc
pop
daa
stc
loop
dec
mov
dec
mov
nop
dec
jle
shl
pop
add
mov
outs
jnp
data16
fmul
mov
popf
rcl
sbb
push
addr16
sub
cmp
outs
rep
cmps
inc
sbb
ret
js
or
push
into
push
jecxz
push
jo
cld
mov
push
pop
mov
mov
cmp
inc
sbb
pop
dec
add
movs
std
icebp
inc
sbb
ss
pop
mov
mov
jmp
pop
or
sub
rcl
fs
ss
cmp
jle
or
cmp
add
cmp
add
mov
or
jbe
push
lea
(bad)
mov
mov
add
movs
jge
jmp
sbb
(bad)
jbe
fcomip
mov
test
in
daa
jmp
cmp
imul
int3
pushf
xor
or
dec
sub
fs
xchg
cmp
not
ins
and
or
mov
pop
adc
mov
retf
(bad)
mov
pop
and
in
mov
frstor
inc
add
jne
add
test
inc
mov
push
mov
bound
pop
inc
dec
cmc
cmp
add
fild
sbb
push
fnstsw
pop
xor
aad
or
lods
xchg
gs
dec
daa
and
fdivr
pop
add
ss
inc
and
idiv
shl
addr16
xchg
rol
cmp
pop
mov
cmp
dec
inc
inc
scas
fs
push
xchg
imul
mov
cmp
inc
add
pop
sub
vunpcklps
fild
cld
iret
pop
and
mov
gs
shl
pop
out
mov
inc
mov
xchg
or
xor
and
(bad)
fst
dec
dec
push
cmps
in
sub
adc
mov
mov
inc
add
mov
movs
das
mov
xor
pop
add
inc
or
mov
adc
lock
add
sbb
jo
push
and
push
popa
sub
paddd
je
push
adc
jl
push
in
jl
pusha
or
shl
ja
push
xchg
mov
push
out
mov
mov
cmp
add
sub
xor
push
not
shr
mov
or
cs
adc
cld
dec
sub
push
or
push
xor
mov
xchg
mov
das
mov
imul
adc
rcr
loopne
and
push
shr
pop
add
out
shl
xchg
and
dec
mov
xchg
cmp
pop
outs
scas
nop
aas
or
jo
cdq
inc
xchg
push
jge
inc
mov
push
jo
add
retf
cld
sub
ss
cli
sbb
repz
jne
dec
sbb
mov
scas
inc
sbb
adc
push
and
mov
das
pop
addr16
imul
inc
aaa
push
inc
adc
iret
mov
adc
mov
jo
add
and
adc
jnp
sbb
pop
jg
or
in
dec
or
adc
pop
inc
rcl
repz
cmp
mov
mov
push
data16
cmp
add
push
ret
sub
ret
or
lds
or
mov
mov
and
pop
adc
pop
aas
xchg
sbb
pop
mov
push
add
jmp
mov
cld
lock
inc
scas
jb
inc
mov
mov
aam
xchg
add
add
dec
cmps
push
push
push
shl
pop
lods
push
inc
and
ds
pop
rcr
pop
push
lock
(bad)
push
shl
retf
jmp
clc
jmp
jns
lods
sbb
test
loopne
test
sbb
jmp
and
mov
cmp
jmp
push
les
dec
jp
jl
adc
lods
xlat
jp
ficomp
ins
je
(bad)
push
pop
ror
mov
push
iret
mov
in
add
inc
mov
and
mov
jecxz
ss
aas
test
retf
cmp
inc
popa
xchg
xor
xor
hlt
inc
or
jmp
icebp
ret
pushf
aas
add
loop
loop
cmp
ficom
push
inc
out
inc
mov
sub
sub
xchg
mov
and
aas
pop
pusha
xchg
ss
imul
add
cmp
dec
push
leave
push
push
(bad)
inc
pop
fwait
adc
lods
xchg
idiv
adc
xchg
scas
test
(bad)
add
xor
or
xchg
or
ds
fcom
sub
dec
inc
inc
popa
xchg
mov
push
retf
add
push
fiadd
add
or
ss
push
(bad)
xchg
dec
cmp
fbld
outs
inc
sbb
fdiv
push
aaa
ss
add
icebp
mov
jecxz
push
push
popa
sbb
sar
out
into
pop
out
cmc
outs
mov
(bad)
addr16
cdq
cmp
cli
dec
call
mov
adc
popf
or
es
test
and
xor
push
sub
es
gs
sub
rcr
sub
pop
movs
inc
mov
dec
(bad)
push
push
mov
(bad)
fsub
dec
cmp
je
push
test
xchg
jmp
push
add
xor
xor
cmp
pop
fild
gs
ds
pop
jae
or
lea
sub
jmp
or
outs
sbb
sub
int
aam
adc
mov
adc
cmp
shl
adc
pop
ret
and
arpl
test
xchg
xchg
fsub
test
xchg
adc
nop
inc
call
addr16
cmps
pop
leave
dec
sahf
inc
or
and
imul
call
xchg
xor
loope
aas
cmp
mov
push
cmp
and
lea
add
sbb
retf
and
stos
sub
shr
pushf
pop
test
inc
daa
and
fwait
out
movs
retf
sbb
add
cmp
sub
js
or
pop
pop
jl
ret
and
pop
test
or
cmp
movs
rol
add
pop
add
add
and
add
xchg
adc
jbe
daa
cwde
push
sbb
aas
cmp
mov
push
or
pop
movs
pop
test
mov
rcr
sbb
call
sahf
push
xchg
mov
pop
sar
fstp
fadd
dec
adc
sub
(bad)
shr
and
push
repnz
dec
sub
inc
sub
shl
cmp
fist
cli
or
fimul
add
clc
xor
push
add
sbb
jno
nop
or
shr
pop
rol
dec
sbb
add
pop
mov
movs
mov
hlt
and
cmp
adc
pop
or
leave
clc
inc
push
popa
pop
sub
push
or
clc
sti
mov
test
add
sbb
hlt
sub
movs
or
inc
jg
test
and
fild
push
punpckhdq
xchg
sbb
mov
das
sbb
add
inc
sti
adc
lods
sti
jge
mov
or
cmp
mov
cld
fidiv
mov
dec
(bad)
mov
retf
adc
adc
fidivr
xor
lock
or
or
fld
out
or
add
mov
jnp
arpl
jmp
add
stos
pop
jb
push
clc
push
cmp
xchg
or
mov
js
dec
inc
js
xor
(bad)
loop
sbb
inc
sbb
xchg
cdq
shl
xor
jae
into
les
test
ror
mov
dec
push
arpl
push
push
cmp
les
popa
sub
xchg
mov
inc
jo
add
mul
and
pop
cs
add
xchg
mov
je
push
adc
popa
push
call
dec
fcomp
int3
arpl
xchg
jbe
scas
mov
sub
jbe
jmp
rcl
xor
push
stc
fwait
cmp
imul
cmp
jne
and
loopne
push
cdq
pop
fcomp
push
stos
int3
jle
dec
push
push
jmp
cmp
ja
push
daa
push
cmp
push
into
in
or
mov
jl
fcom
fdiv
sbb
push
cmp
push
jae
xor
push
mov
fmul
movs
sar
clc
leave
mov
outs
das
cmp
jmp
add
inc
add
jno
lods
add
mov
fs
adc
jae
dec
sbb
sub
rol
sub
mov
sub
jnp
jo
loopne
out
add
push
add
test
xchg
daa
int3
inc
push
pusha
mov
loope
dec
(bad)
jle
jp
lds
pop
adc
int3
mov
inc
cld
xchg
popa
fmul
call
sub
jl
pop
mov
push
add
xor
xor
jbe
sub
imul
sub
sbb
fs
mov
mov
inc
ret
aam
fcomp
add
push
ror
add
inc
loopne
xchg
jle
fidivr
sbb
inc
daa
and
and
or
mov
mov
das
pop
sti
xor
dec
mov
out
rol
lock
push
dec
add
pop
sub
daa
pop
adc
nop
mov
add
not
sub
pusha
adc
sub
call
sub
add
dec
and
or
mov
inc
and
and
aaa
xor
sub
rcl
mov
xor
outs
aas
mov
mov
ffreep
jmp
jecxz
or
mov
inc
mov
shl
lds
xchg
aas
jno
dec
retf
mov
cmovbe
mov
push
xchg
push
aas
mov
bound
xchg
inc
fidivr
retf
ins
dec
in
inc
out
push
mov
and
mov
inc
or
sub
pop
lods
ins
mov
and
fldenv
pop
adc
imul
popa
cmps
or
inc
or
xchg
push
ret
push
inc
sbb
mov
push
and
dec
ins
shl
push
add
jne
pop
ja
jle
pop
push
call
repz
jbe
xchg
push
pop
ja
mov
ss
or
lods
ror
loope
jmp
or
sbb
scas
mov
call
scas
je
int3
or
(bad)
jbe
jnp
dec
aad
xor
inc
push
cld
xchg
push
pushf
fwait
shl
and
je
pop
imul
pusha
das
pop
push
push
xor
cmp
mov
pop
cmp
push
mov
adc
fdivr
loopne
and
add
jne
mov
lock
rcr
push
dec
add
cmp
lock
js
add
mov
lds
sub
inc
cdq
ret
ret
fmul
push
rcr
push
push
cmp
and
cmp
and
jnp
sub
jb
xchg
inc
call
sub
xchg
adc
sar
icebp
xor
jne
sub
mov
cmp
popa
and
push
mov
test
xchg
jnp
sar
int3
ret
shr
add
cwde
mov
pop
xor
and
retf
push
add
stos
add
sub
add
or
popa
sub
add
and
sbb
sub
sti
loope
jnp
(bad)
dec
cmp
inc
or
mov
sub
mov
cmp
dec
cmp
xor
xchg
jo
fisttp
movs
(bad)
xchg
mov
int3
sbb
pop
dec
pusha
dec
mov
dec
xor
pop
pop
lods
lods
xor
and
dec
out
and
inc
xor
and
jl
daa
loope
push
cld
cmp
xchg
iret
popa
test
pop
sbb
gs
xor
loopne
cmp
and
psubw
cmp
jge
ret
jbe
pop
fwait
cmp
inc
push
push
push
sar
retf
add
inc
or
sbb
mov
pusha
sbb
mov
sbb
dec
aam
jecxz
jne
(bad)
jl
inc
stos
jmp
enter
test
sahf
adc
jnp
adc
rcl
sbb
adc
js
xchg
ret
dec
mov
cmp
(bad)
enter
call
xor
sub
fs
mov
in
add
cmp
gs
mov
aad
xchg
js
cmp
pop
por
sbb
jo
jmp
sbb
arpl
cmp
pop
inc
in
sub
sub
inc
dec
es
or
es
adc
xor
xor
imul
adc
mov
and
jbe
and
xlat
dec
cdq
sub
scas
ret
sbb
imul
ss
repz
jnp
jle
xor
mul
ins
in
xor
jbe
jg
movs
and
or
scas
mov
jmp
test
adc
hlt
daa
dec
jne
xor
cmc
es
mov
cmp
jg
mov
fs
movs
and
sbb
add
aad
lahf
xchg
ja
and
(bad)
xchg
ss
push
test
(bad)
xor
mov
daa
and
lods
data16
add
bound
jne
cmps
or
repz
enter
scas
inc
and
test
xchg
sub
xor
popf
sbb
pop
dec
pop
(bad)
cmp
jns
jne
iret
adc
dec
cmp
or
inc
daa
add
in
dec
pop
dec
pop
pop
(bad)
fnstenv
adc
inc
pop
jmp
psubw
inc
push
add
push
lahf
lea
add
imul
pop
add
ficomp
mov
scas
pop
nop
sbb
jle
and
push
ins
add
or
add
xchg
adc
adc
js
aam
push
lods
push
xchg
call
inc
stos
or
push
or
sbb
pop
popa
xchg
popa
push
sbb
or
dec
pop
test
mov
dec
imul
cmp
xor
mov
hlt
add
jo
inc
cmc
dec
cdq
(bad)
loope
add
or
ja
movs
pushf
add
ins
ins
mov
xchg
mov
aam
sub
or
jae
ins
movs
or
cmps
mov
cmp
add
nop
out
jne
in
(bad)
fld
add
leave
mov
inc
ins
add
in
jmp
mov
scas
neg
ins
add
movs
and
rol
enter
adc
cmp
cmp
or
mov
mov
rcl
dec
inc
dec
xchg
push
pop
ficom
cld
pop
rol
clc
inc
sub
repz
and
dec
daa
dec
or
iret
sub
jge
mov
dec
call
jp
or
cmp
push
xor
push
or
push
jne
pop
sbb
aas
sub
adc
and
sbb
pop
or
cdq
sub
or
pop
pop
sub
ror
(bad)
or
inc
add
or
fmul
and
adc
cmp
daa
fsub
xchg
neg
mov
(bad)
leave
cwde
push
loopne
dec
sbb
and
add
or
push
(bad)
retf
enter
adc
nop
outs
push
pop
or
sub
cdq
nop
out
retf
sbb
mov
jmp
lods
test
inc
mov
sbb
xchg
sub
ss
(bad)
jbe
sbb
stos
rcl
mov
and
sub
xchg
xchg
out
sub
addr16
add
scas
add
push
lods
pop
fidiv
jmp
sbb
pop
aad
out
retf
cmp
test
sbb
and
test
iret
mov
sbb
add
nop
add
lds
inc
call
add
cmp
nop
add
dec
rcr
popa
cmps
push
sbb
ret
add
ja
sub
mov
push
mov
test
push
add
adc
sbb
add
or
mov
out
and
jl
(bad)
sbb
test
push
(bad)
and
and
(bad)
aaa
xor
sub
inc
add
cmp
xor
cmp
jb
stos
cmp
cmp
cmc
sub
push
mov
sub
push
sub
add
in
imul
add
and
mov
sub
pop
xor
in
or
dec
mov
sub
inc
or
iret
ss
lods
push
adc
sub
mov
sbb
or
in
or
add
pop
pop
je
dec
add
xchg
psadbw
in
and
stc
or
xchg
imul
cmp
cmp
mov
mov
adc
nop
test
sub
and
add
and
test
or
or
rcr
jecxz
cli
push
jae
loope
lea
add
mov
mov
sbb
push
sub
inc
mov
les
outs
mov
mov
dec
and
into
add
mov
inc
fs
mov
push
xor
mov
xchg
sbb
fiadd
daa
mov
adc
push
ins
popa
jb
and
cld
pop
push
adc
pusha
and
pop
clc
or
or
rol
(bad)
nop
dec
mov
pushf
mov
enter
mov
pop
adc
adc
repnz
cmp
rol
in
movs
ret
adc
cmp
test
jno
mov
ja
ror
aaa
jnp
jnp
pop
xchg
and
outs
jo
and
test
mov
in
or
sub
aam
daa
hlt
push
out
bnd
iret
(bad)
sub
inc
and
cmp
add
or
or
data16
pusha
mov
mov
inc
scas
or
push
stc
mov
in
(bad)
neg
pop
pop
xchg
dec
jmp
scas
jo
pop
mov
int3
(bad)
or
add
push
ins
dec
sub
jmp
and
sbb
in
imul
push
das
pop
add
daa
shr
and
and
dec
inc
or
sbb
adc
outs
pusha
mov
or
dec
add
push
add
inc
mov
loop
and
mov
divps
arpl
clc
movs
add
retf
xchg
cs
and
pop
out
push
dec
repnz
nop
inc
adc
or
aam
inc
or
sti
inc
push
and
(bad)
jg
or
or
inc
push
adc
or
imul
push
and
inc
movs
mov
mov
fst
retf
test
imul
icebp
inc
pop
sar
dec
ficom
push
inc
adc
pop
es
arpl
mov
sbb
jmp
pop
inc
pop
push
add
loopne
ins
cs
add
xchg
mov
xchg
push
inc
push
pop
xor
sar
je
xchg
fadd
fsub
jnp
rcr
fdiv
and
ror
cwde
ja
mov
cmp
xor
or
mov
cmp
jmp
rol
jmp
add
inc
loopne
dec
ins
int
add
cmp
test
dec
lods
and
adc
arpl
add
or
or
enter
and
inc
mov
push
call
jecxz
and
xchg
ret
fstp
jo
mov
xlat
lea
cwde
mov
cwde
ficomp
addr16
sub
retf
lock
sub
xchg
test
cmps
xchg
push
sbb
inc
inc
dec
mov
shl
or
ror
int
xchg
push
or
push
cmp
pusha
add
sar
scas
ins
dec
add
adc
mov
sbb
lock
inc
stos
sub
push
retf
jge
adc
dec
fdivr
(bad)
adc
jne
or
pop
push
das
jns
jl
jo
mov
jno
sbb
mov
sbb
(bad)
push
mov
xor
sbb
inc
add
push
xchg
mov
mov
lea
cwde
xchg
push
popf
test
mov
fnstcw
cmp
adc
int
jle
push
aam
outs
popf
or
and
mov
inc
push
adc
clc
jns
add
sub
aam
movs
hlt
mov
addr16
outs
mov
inc
xchg
add
dec
loopne
into
(bad)
dec
pop
or
aad
cmp
mov
dec
aas
mov
mov
dec
adc
mov
popa
(bad)
add
repnz
pop
sbb
push
adc
(bad)
outs
pushf
mov
adc
mov
and
sbb
push
retf
cwde
sub
mov
sar
xchg
mov
push
push
xchg
push
(bad)
(bad)
in
dec
fmulp
push
out
add
loopne
imul
push
mov
add
xchg
add
sub
inc
leave
cmp
mov
add
sub
daa
xor
movs
cmps
mov
or
pop
scas
pop
or
add
or
test
cdq
imul
sub
nop
dec
(bad)
psraw
popa
ins
inc
inc
ja
adc
add
sahf
ret
xchg
int3
pop
dec
repnz
enter
test
fiadd
sbb
inc
inc
loope
outs
sbb
xchg
push
cmp
sub
xchg
mov
inc
mov
popa
scas
ins
popa
xchg
mov
ret
or
xor
scas
xchg
mov
cmp
add
loop
xor
gs
mov
push
ret
cmp
jle
mov
dec
add
mov
pusha
sahf
or
or
and
ret
mov
adc
sub
or
mov
fsubr
xor
adc
test
pop
dec
jmp
sbb
sar
lea
mov
nop
mov
push
js
sbb
outs
fwait
loop
mov
inc
jne
sbb
cmp
sbb
stos
pop
stos
fnstcw
mov
xor
(bad)
fsub
sbb
fdiv
sbb
mov
jmp
mov
lock
fwait
push
enter
pop
cwde
push
mov
loop
pop
xchg
pop
xchg
sub
mov
adc
mov
sbb
mov
sub
aaa
sub
push
cmp
(bad)
inc
retf
inc
cld
data16
adc
out
aas
movs
push
jnp
push
push
inc
push
daa
adc
sbb
dec
in
xor
loopne
lods
xchg
inc
cmp
or
dec
jmp
ret
jns
push
xor
les
mov
cmp
sub
mov
push
push
adc
jmp
lock
mov
je
iret
push
and
mov
cli
push
add
in
pop
mov
popf
and
call
mov
mov
add
fdiv
inc
push
adc
xchg
mov
pop
sbb
inc
nop
xor
mov
sbb
or
jne
xchg
mov
cdq
xchg
out
mov
push
fild
or
push
mov
sar
mov
pop
(bad)
ror
test
adc
repnz
mov
xchg
std
xor
xor
inc
mov
dec
les
or
rcl
dec
jp
fcomp
mov
jg
(bad)
aam
ins
not
or
mov
dec
add
std
frstor
add
outs
mov
and
and
dec
or
add
mov
ins
xlat
mov
add
pop
and
mov
mov
add
retf
sub
sub
xchg
test
mov
sub
xchg
retf
mov
xlat
dec
les
cmps
imul
ds
mov
fs
(bad)
mov
and
xor
add
or
mov
push
rcl
test
sub
pop
mov
mov
cmp
adc
add
mov
nop
add
nop
jmp
das
cmp
or
inc
test
icebp
add
inc
aam
test
ret
outs
shl
xchg
push
jne
mov
pop
add
push
rcr
(bad)
mov
je
add
call
ja
fucomi
xor
mov
and
retf
mov
sbb
push
pop
xor
push
adc
pop
adc
mov
sub
mov
or
rol
in
cmc
jle
fadd
popf
push
mov
xor
add
or
cmp
arpl
popa
push
inc
inc
xchg
bound
out
mov
aam
mov
dec
cmp
adc
icebp
inc
gs
mov
rol
cmps
shr
sbb
out
jnp
sahf
xor
adc
mov
xor
inc
inc
lock
shl
or
jge
(bad)
ja
mov
jmp
lea
push
push
lock
std
xchg
dec
lea
mov
xor
xor
sbb
or
push
mov
xchg
pop
inc
out
adc
push
push
loopne
push
pusha
mov
leave
test
mov
add
mov
mov
in
push
test
lock
js
inc
cmp
icebp
mov
push
and
loopne
sub
mov
inc
cld
xchg
dec
push
inc
jp
test
mov
xchg
mov
push
in
mov
fiadd
dec
ret
stos
or
xor
push
add
xchg
jle
dec
fsub
add
call
dec
call
mov
jae
mov
das
or
add
pusha
daa
xor
cmp
and
jae
dec
cmp
movs
mov
jmp
mov
pushf
cmp
int3
mov
pop
jne
(bad)
in
pop
push
mov
pcmpeqw
sar
ret
lods
enter
(bad)
and
lea
or
cmp
enter
sub
mov
push
adc
fidiv
test
inc
fadd
data16
jge
in
fcom
aaa
rol
mov
cmp
add
inc
pop
arpl
or
in
dec
inc
push
repz
fwait
push
mov
mov
adc
(bad)
jnp
fwait
and
adc
ins
cmp
cwde
cmp
mov
cwde
adc
or
xchg
in
or
xchg
pop
rol
retf
leave
iret
rcr
add
adc
inc
bound
push
loopne
mov
ror
into
mov
mov
test
fcmovb
or
mov
xor
popf
xor
inc
mov
and
call
push
lods
shl
dec
enter
sub
fld
bound
push
ja
mov
and
push
inc
fwait
(bad)
fs
inc
push
push
inc
add
arpl
cmp
or
add
(bad)
add
pop
clc
or
adc
inc
je
ret
mov
or
inc
mov
(bad)
ret
loopne
or
mov
mov
mov
or
inc
imul
paddq
call
(bad)
in
(bad)
mov
inc
adc
fnstcw
repnz
or
push
xchg
sar
fs
inc
cmp
gs
adc
adc
xor
cmps
(bad)
sub
sbb
dec
(bad)
cmp
mov
xchg
(bad)
jb
xor
arpl
dec
rol
stc
jl
or
mov
mov
(bad)
loop
sub
pop
in
movs
in
sub
test
xor
fcomp
arpl
sbb
add
push
pop
or
call
ja
ds
mov
retf
pusha
cmps
add
sub
je
lds
push
inc
cmps
adc
call
mov
jmp
mov
jecxz
lods
add
daa
xor
or
mov
mov
pushf
test
icebp
mov
stos
aad
sub
mov
shl
ins
pop
pop
push
mov
pop
(bad)
pop
inc
xchg
adc
daa
xor
nop
test
xchg
dec
ins
mov
cmc
add
sub
fisub
sbb
outs
xchg
mov
mov
fmul
push
fwait
pop
movs
xor
adc
inc
cmc
and
pop
sub
add
push
int3
xlat
mov
mov
xchg
inc
cmps
sub
mov
mov
lock
pop
retf
push
sub
int3
jmp
inc
sbb
cmp
xor
jne
xor
pop
add
inc
add
nop
lods
xchg
rcr
add
add
push
pop
fcmovnb
cdq
jge
pusha
push
fmul
xchg
movs
adc
xlat
out
inc
jmp
loopne
popa
test
add
and
das
clc
clc
and
inc
pop
mov
ror
aas
ins
or
and
push
lock
(bad)
in
inc
xchg
clc
hlt
test
test
jmp
call
in
push
gs
pop
sub
jbe
and
shl
test
mov
mov
or
inc
mov
rol
sbb
mov
pop
dec
xor
loopne
pop
jne
rdtsc
mov
push
outs
push
enter
dec
and
aad
cli
xchg
test
or
fdiv
sub
or
sub
inc
test
mov
add
xchg
sahf
lock
dec
cmps
pop
mov
add
mov
mov
(bad)
jl
test
push
push
sub
and
aad
mov
lea
lods
cmc
jnp
mov
enter
mov
jle
cli
push
je
sbb
xchg
les
push
add
mov
outs
ret
loope
rcr
(bad)
scas
fidiv
fisubr
repz
mov
xchg
pop
mov
into
push
push
mov
cmp
sete
retf
pminsw
adc
inc
or
jne
scas
mov
mov
ret
push
or
pop
mov
sbb
or
in
sahf
pushf
push
dec
(bad)
push
das
(bad)
mov
sub
fcom
push
jl
mov
dec
loop
mov
in
and
in
jmp
nop
sub
and
fadd
das
rcr
pop
mov
mov
and
add
push
out
mov
or
mov
div
fwait
add
xchg
mov
pop
out
mov
or
loopne
push
or
arpl
mov
push
loop
push
shr
pop
inc
loope
dec
pop
imul
pop
inc
out
inc
aaa
fs
push
psrlq
dec
jnp
into
jbe
out
adc
das
mov
push
sub
sub
or
imul
mov
sar
pop
mov
sub
jae
and
in
push
xchg
adc
jbe
push
push
pop
add
in
lock
mov
mov
lock
fnstenv
and
jmp
mov
out
and
inc
imul
cmp
fidiv
push
add
stos
xor
adc
mov
stos
pop
hlt
adc
jl
arpl
xchg
pop
call
xor
add
inc
inc
scas
js
arpl
fsubr
cmp
mul
and
(bad)
fdivr
or
and
or
nop
adc
scas
add
fwait
xchg
add
add
pop
adc
js
inc
pop
(bad)
lock
pop
add
cmp
ret
sbb
fild
add
sbb
leave
cmp
adc
and
mov
out
scas
loopne
add
cld
mov
sbb
mov
xlat
into
mov
daa
dec
cwde
dec
mov
jmp
adc
mov
pop
inc
mov
sbb
jno
and
clc
adc
das
fcom
add
pop
sub
mov
sti
shl
ins
clc
inc
mov
rcl
pop
jb
and
mov
sbb
je
mov
int
lea
ret
dec
dec
cmp
cmp
sahf
xchg
xchg
jbe
call
enter
jnp
test
xor
shl
ror
inc
xchg
xchg
ss
sbb
adc
aad
je
pop
add
or
push
fsub
imul
mov
mov
inc
xchg
dec
fwait
inc
or
out
xchg
mov
pop
clc
fmul
addr16
call
cmp
sahf
pop
out
push
and
pusha
adc
aam
xor
pop
add
dec
mov
cmp
mov
pop
es
(bad)
mov
js
jns
in
call
push
pop
hlt
or
fcom
outs
aam
jnp
adc
loopne
jmp
mov
dec
rcl
cld
cmp
xchg
add
mov
dec
mov
inc
mov
je
adc
ja
std
fdiv
jl
daa
and
jl
ja
inc
sbb
add
dec
imul
jmp
dec
sub
inc
mov
or
addr16
inc
and
jo
ror
in
in
adc
mov
aad
enter
add
pop
cmp
mov
and
sbb
(bad)
mov
sub
mov
xchg
sub
(bad)
and
div
sbb
in
mov
mov
adc
dec
mov
inc
add
push
inc
add
dec
inc
mov
push
adc
scas
or
xor
in
sbb
mov
mov
shl
nop
(bad)
ss
and
xlat
inc
test
mov
fdivp
xchg
scas
add
mov
sub
mov
popa
xchg
xchg
cmp
adc
mul
bound
add
inc
arpl
enter
adc
jle
fwait
lods
in
dec
xor
xchg
lods
bound
sbb
sti
loop
xor
xchg
js
sbb
mov
xchg
mov
dec
mov
xchg
sahf
inc
shr
mov
aaa
inc
sbb
std
lock
sbb
mov
rcl
aaa
push
mov
and
adc
and
dec
dec
cld
std
adc
sar
mov
clc
dec
fsub
je
mov
repz
mov
out
ficom
frstpm(287
jne
out
test
(bad)
jmp
nop
pusha
cmp
sbb
mov
add
sub
sbb
cs
xor
aad
dec
fisub
sub
xor
rol
dec
loope
add
and
dec
push
movs
inc
add
arpl
imul
cmp
adc
mov
pop
sub
jl
repnz
ins
gs
lea
inc
sbb
imul
cdq
and
frstor
mov
fwait
adc
daa
sub
fiadd
test
inc
mov
popa
leave
or
jmp
push
push
sub
psubw
xchg
(bad)
pop
popa
mov
fistp
push
adc
xor
push
fldcw
add
ror
call
adc
cmp
or
xchg
nop
dec
or
bound
cmp
mov
cmp
retf
xor
jns
and
(bad)
push
dec
jns
fimul
xor
clc
nop
loopne
je
popa
pop
add
pop
and
sbb
or
inc
inc
imul
or
sub
mov
sbb
jne
les
or
inc
out
je
adc
ret
mov
xchg
cmp
test
add
xor
cmp
sbb
jne
xchg
loopne
adc
or
xor
loopne
mov
adc
and
jo
sub
add
push
adc
ret
(bad)
xchg
pop
jbe
inc
mov
aaa
test
mov
out
mov
jl
or
inc
les
jge
addr16
repz
jg
pop
out
mov
int3
test
je
mov
in
outs
test
push
push
and
sbb
lock
int3
or
push
adc
rol
icebp
push
inc
adc
fcom
push
jmp
pop
pusha
adc
ds
in
in
int
rcl
or
xor
push
test
inc
dec
pop
retf
pop
and
adc
mov
and
(bad)
inc
adc
(bad)
xor
xchg
mov
adc
cli
or
pop
push
jno
or
mov
imul
popf
xor
add
mov
and
or
xor
pop
ins
dec
in
push
fistp
xor
add
or
inc
push
dec
in
inc
mov
jmp
int
test
mov
add
and
rcl
or
or
pop
div
js
lea
mov
adc
add
(bad)
inc
enter
dec
adc
or
dec
push
xchg
adc
shl
retf
rcr
les
pop
or
shr
mov
nop
jmp
clc
enter
push
mov
add
imul
push
cld
sub
cld
or
enter
mov
sub
hlt
cmp
xor
mov
dec
mov
cs
sbb
shrd
ja
in
mov
idiv
add
dec
pop
mov
jno
popa
and
les
add
dec
int
add
xor
fs
das
scas
ror
or
pop
and
loop
add
dec
xor
pop
dec
test
mov
ret
pop
mov
ja
xor
jg
cmp
add
or
ins
ret
adc
jl
leave
ret
add
lods
in
adc
xor
lds
dec
or
ins
loopne
shl
push
mov
test
js
add
test
test
mov
pop
mov
ret
or
or
adc
ins
add
mov
jecxz
hlt
sar
pop
mov
mov
mov
sub
pop
mov
mov
sbb
cmp
inc
mov
inc
mov
(bad)
or
pop
inc
xchg
(bad)
je
sbb
nop
(bad)
xor
mov
adc
sbb
jo
push
call
daa
or
add
out
push
ss
scas
imul
inc
adc
adc
mov
dec
adc
call
je
popf
sub
call
ja
lahf
gs
addr16
and
test
shl
push
shl
dec
mov
mov
sahf
(bad)
fld
les
out
push
mov
mov
inc
adc
je
jns
and
push
sub
add
bound
inc
mov
mov
adc
pop
popa
adc
and
xor
inc
pop
lds
mov
adc
xchg
pushf
ins
lds
in
or
xchg
inc
loopne
add
jns
lds
prefetch
or
lock
pop
adc
add
push
cdq
mov
sub
pop
fs
push
es
test
dec
sub
ret
and
mov
jne
or
mov
fld
cmp
pop
lea
scas
aas
inc
mov
xor
data16
mov
jb
fwait
push
test
not
add
pop
jae
loopne
mov
(bad)
or
rol
dec
mov
xor
add
sbb
inc
ret
pop
jno
(bad)
outs
inc
popf
sbb
mov
lock
mov
arpl
je
or
inc
fisub
hlt
adc
lock
call
mov
xor
jnp
sbb
lock
int
call
cmp
shr
scas
pusha
jmp
shl
lods
dec
cmps
popa
pusha
retf
scas
sub
arpl
stc
fcom
frstor
test
sub
push
xchg
sbb
or
xchg
retf
movzx
cmp
jle
push
ss
add
mov
or
ror
fdivr
jl
add
lea
fcomp
ins
enter
add
ret
adc
xor
wrmsr
and
sub
pop
in
or
lea
adc
add
(bad)
mov
clc
cmp
lea
sub
nop
push
les
add
les
out
jae
adc
xchg
or
fld
sub
mov
mov
adc
or
add
call
mov
jne
jns
gs
or
outs
or
push
or
mov
mov
adc
std
sub
or
fdiv
rol
mov
pop
popa
adc
adc
adc
gs
or
dec
leave
add
and
mov
cmp
add
dec
mov
cld
mov
addr16
cmp
xchg
sub
imul
sahf
mov
jge
inc
pop
cmp
push
and
sub
mov
push
je
imul
mov
add
and
add
repnz
push
aam
or
cmp
xor
int3
scas
mov
imul
ficom
les
push
movs
sbb
fcomp
in
shl
lock
jp
lea
mov
inc
or
jns
mov
ror
pusha
pop
adc
test
jmp
dec
dec
out
add
dec
aaa
xor
fadd
jmp
cmp
jl
adc
mov
fmul
in
loopne
push
pop
inc
ret
call
inc
test
sub
mov
add
inc
(bad)
shl
push
inc
add
xchg
adc
jl
add
(bad)
and
popa
in
mov
or
adc
(bad)
push
sbb
or
pop
js
bound
(bad)
and
jo
push
adc
fiadd
call
add
jb
mov
pop
push
mov
cmp
mov
and
jmp
jle
or
push
cld
lods
cmp
xlat
ret
outs
cld
(bad)
popa
or
or
add
push
out
mov
add
jae
inc
push
and
cmp
loope
shl
pushf
mov
cmp
adc
stc
mov
in
ret
in
sub
dec
cld
inc
add
mov
or
ja
mov
xchg
xor
mov
test
inc
pop
xchg
rcl
int
or
addr16
mov
repz
rcl
clc
sbb
or
fimul
aam
dec
and
or
leave
adc
lock
xchg
push
js
mov
popa
mov
pop
movs
jmp
push
or
add
add
sub
lea
aam
in
adc
adc
dec
add
adc
ins
or
cs
shl
call
out
add
add
ror
aam
push
mov
mov
or
adc
add
ja
pop
cdq
aam
pop
push
push
pusha
pop
loopne
jnp
push
or
or
push
loopne
and
call
push
inc
dec
jne
mov
inc
cmps
stos
lods
lock
push
or
scas
scas
push
fdivr
xchg
dec
jne
push
or
aad
push
xor
add
je
or
push
mov
or
cld
inc
push
push
jnp
fdivr
mov
in
or
push
(bad)
mov
sbb
jle
inc
ret
add
out
or
dec
xor
push
add
inc
add
jno
lods
cli
mov
cmp
push
add
jp
iret
push
pop
dec
sahf
ja
scas
push
push
push
pop
arpl
repnz
ja
pop
outs
(bad)
out
mov
or
ins
scas
dec
adc
dec
aas
push
xlat
ins
adc
inc
mov
fistp
xchg
daa
daa
mov
dec
mov
xor
inc
out
and
pop
push
adc
pop
wbinvd
pushf
adc
xchg
lods
inc
mov
mov
adc
and
daa
push
jb
pop
or
clflush
and
in
(bad)
add
pop
mov
test
mov
mov
rcr
mov
inc
mov
ret
sbb
int3
jge
outs
sar
fcom
push
mov
xor
pop
in
push
lods
cmp
div
aam
adc
cmp
jmp
add
nop
cmp
dec
loopne
fcmovnb
out
cmp
loopne
adc
outs
push
adc
adc
add
wbinvd
mov
xchg
mov
ror
ror
mov
sbb
add
xor
add
lock
arpl
dec
jb
into
mov
mov
push
js
adc
and
or
adc
inc
je
arpl
outs
shl
(bad)
out
nop
arpl
or
sbb
pop
cmp
xor
push
int3
in
int3
lods
dec
mov
rol
cdq
mov
sub
cs
pop
ins
adc
aaa
jl
push
adc
lock
cli
xchg
xor
jns
ror
push
add
pusha
push
mov
pop
mov
out
arpl
push
mov
leave
ins
adc
out
mov
lods
add
cs
out
mov
push
(bad)
ror
movs
push
sar
xlat
xchg
ror
pop
xor
inc
xlat
dec
fisttp
and
xchg
xlat
dec
dec
fnstenv
lock
push
inc
(bad)
cmp
mov
add
pop
inc
pop
xchg
push
sbb
movs
mov
arpl
jne
sar
inc
push
shl
add
scas
adc
sub
out
nop
je
seto
xor
adc
movs
adc
add
and
les
(bad)
or
and
adc
shr
stos
sub
cmp
mov
pop
(bad)
(bad)
iret
mov
add
pop
and
adc
cmps
cmps
loopne
add
ins
(bad)
sti
mov
xor
sbb
push
jl
dec
out
or
add
mov
dec
xor
pop
rol
inc
sub
lahf
or
adc
add
ror
or
scas
push
mov
rcr
and
and
jl
inc
into
out
cmp
jle
adc
cwde
and
pop
cmp
arpl
xor
jmp
imul
sub
or
dec
mov
add
jb
push
shr
cmp
es
call
adc
mov
xor
inc
sar
rol
popa
jg
dec
dec
jns
(bad)
aas
bswap
test
push
pop
and
mov
inc
or
popf
pop
test
push
sbb
cmp
and
les
xchg
add
sbb
inc
pop
outs
(bad)
fmul
push
sub
(bad)
sub
adc
and
pop
push
mov
shr
ret
dec
xor
ins
dec
dec
jmp
dec
test
push
and
dec
ja
sub
ins
add
push
je
pop
scas
add
or
jecxz
add
mov
xchg
shr
into
mov
pop
sub
sti
popa
or
lea
and
mov
lods
push
pop
je
in
adc
loop
add
lods
pop
loope
int3
or
add
inc
or
sti
jne
imul
movs
into
push
inc
stos
cmp
popf
mov
mov
push
or
into
dec
fst
aaa
inc
pusha
dec
dec
mov
ds
jno
mov
shl
ret
mov
cs
ss
or
mov
ret
push
jno
adc
in
gs
xor
add
pop
dec
int3
and
mov
mov
lock
enter
mov
leave
jecxz
pop
and
cmp
and
les
loope
mov
data16
aas
add
ror
xchg
fst
popa
fwait
and
(bad)
lock
adc
sbb
lock
shl
imul
dec
add
mov
mov
sbb
test
sar
adc
loopne
push
xlat
add
sbb
add
xchg
loopne
aad
inc
cmps
shl
shl
in
mov
(bad)
sub
loopne
nop
add
loopne
or
push
add
cmps
push
aad
push
cmp
push
inc
and
pop
jg
cmp
outs
dec
add
pop
lock
mov
cmp
add
nop
int
dec
xor
mov
popa
icebp
ds
cmps
aaa
xor
mov
xor
push
push
push
ins
call
pusha
int
inc
mov
xchg
pop
fsub
sahf
out
push
jno
push
xchg
fwait
jnp
push
xor
jns
inc
jb
loope
xchg
test
push
mov
dec
pusha
(bad)
fsubr
inc
in
xchg
and
xchg
cmp
and
pop
rcr
xlat
inc
fdivp
fs
xchg
fcom
(bad)
scas
mov
jmp
jmp
rcr
lock
in
push
int3
call
xchg
or
fimul
push
(bad)
fcmove
add
mov
dec
cld
in
dec
add
push
push
adc
out
repz
aam
out
mov
jecxz
sub
cwde
mov
rcr
pop
xchg
or
imul
scas
pop
and
and
inc
jecxz
daa
push
pop
add
add
nop
pop
ret
mov
pop
movs
xchg
jne
inc
add
movs
(bad)
sub
sbb
jmp
nop
fsub
dec
xchg
and
push
rcr
lahf
lahf
sbb
fst
cwde
sbb
mov
les
sbb
xchg
fisttp
sbb
pop
or
mov
jg
pop
cmp
sub
cwde
pop
rcr
clc
or
enter
mov
loopne
add
imul
loopne
push
jb
iret
add
adc
jle
in
into
int3
mov
sar
lea
inc
jo
pop
psrlw
popf
popa
loop
nop
sub
jo
jns
loope
sbb
pop
test
mov
pusha
pop
inc
pop
mov
add
dec
leave
arpl
xor
push
loope
or
inc
loop
adc
mov
ror
mov
fld
jns
test
mov
loop
add
xchg
adc
mov
mov
fist
adc
shl
mov
dec
and
fcomp
loop
punpckhdq
hlt
pop
push
in
pushf
xor
aam
xchg
push
hlt
pop
add
ret
add
or
cmp
sbb
inc
ficom
es
mov
mov
js
pop
sub
sbb
sub
nop
add
add
or
call
or
pop
adc
mov
adc
mov
jecxz
dec
mov
clc
cmp
cmp
dec
push
inc
cmp
sub
and
ins
call
dec
je
add
mov
aam
(bad)
push
mov
rcl
call
nop
add
jmp
sbb
test
fchs
or
popf
add
idiv
pop
sbb
mov
movs
bound
xchg
mov
sub
test
test
sbb
sbb
push
jno
retf
in
shl
loope
and
pop
inc
(bad)
popf
test
adc
ins
inc
sub
sti
fmul
test
dec
sbb
idiv
and
sbb
add
xchg
add
or
push
sbb
sub
je
push
shr
adc
sbb
icebp
sbb
sub
mov
inc
daa
mov
movs
popf
loopne
push
sub
aas
aaa
add
push
or
add
adc
out
xchg
adc
mov
aad
mov
inc
cmp
push
and
ror
fnop
ror
sub
sub
add
push
seto
xor
fmul
add
imul
cmp
nop
lock
test
mov
out
(bad)
or
mov
pushf
jmp
and
inc
push
jns
loope
out
shl
jo
icebp
jg
popf
cwde
mov
add
inc
jg
adc
cmp
mov
cs
adc
fcomp
inc
push
xchg
lahf
ror
aad
fbstp
loope
jmp
stos
js
pop
jne
clc
imul
movs
jmp
call
sbb
scas
in
ds
and
cmps
push
out
xchg
adc
push
sub
adc
mov
or
add
inc
xchg
or
pop
ja
adc
push
or
in
push
sbb
sar
movs
add
test
inc
das
jmp
sbb
or
add
cmps
mov
movs
xchg
xchg
dec
xchg
mov
enter
data16
xchg
adc
xchg
push
jmp
and
sub
int
pop
icebp
arpl
in
pop
add
and
rcl
pop
call
pop
hlt
jmp
imul
lock
js
out
push
add
add
cmc
sbb
push
imul
and
fmul
neg
mov
repnz
aad
call
jg
jne
shl
xchg
xchg
mov
les
or
daa
push
push
or
sbb
mov
test
dec
loop
dec
test
sub
or
jp
add
clc
push
fcmovbe
push
mov
and
sti
sub
xor
ins
or
xchg
push
daa
or
jo
add
rcl
mov
adc
nop
dec
call
outs
mov
cwde
into
push
push
imul
adc
add
or
in
and
cmp
out
push
mov
inc
and
data16
jne
fld
loope
pop
mov
je
mov
fcmovb
add
test
neg
adc
in
cmp
pop
and
rol
push
mov
aam
aas
fisttp
sub
pop
or
dec
dec
add
and
or
sbb
ds
aaa
sbb
test
ret
or
and
adc
cmp
or
lods
inc
shl
movs
xchg
dec
xchg
adc
jns
inc
add
in
dec
mov
dec
es
fnsave
cmps
inc
jb
addr16
in
inc
jno
dec
daa
dec
orps
and
mov
adc
movs
shl
mov
ss
mov
adc
iret
push
pusha
rcl
loope
adc
dec
aas
mov
outs
sbb
dec
push
lods
push
movs
xchg
bound
sub
rol
push
mov
xlat
push
leave
or
sbb
xor
fmul
xchg
pop
icebp
adc
cmp
mov
xor
ins
inc
mov
hlt
push
xor
mov
aam
in
neg
daa
dec
in
out
xchg
sub
pushf
or
and
xchg
clc
pop
arpl
dec
aaa
push
xchg
add
mov
pop
add
inc
jae
ins
je
mov
in
jge
jne
arpl
jo
(bad)
bound
ins
ficom
test
dec
addr16
mov
or
mov
inc
pop
jmp
dec
das
adc
or
popa
push
(bad)
mov
mov
adc
sub
inc
dec
mov
cmp
jcxz
in
jg
icebp
hlt
fadd
les
adc
lods
mov
push
gs
mov
xor
dec
add
pop
imul
and
add
ja
in
nop
adc
or
enter
inc
jmp
push
aas
jl
int3
xor
(bad)
ds
dec
or
add
repnz
mov
cld
push
repnz
add
aaa
add
xor
pushf
fwait
xchg
push
ja
inc
repnz
cld
pop
inc
mov
nop
int3
or
and
push
or
jbe
sbb
sbb
xchg
outs
pusha
scas
cmp
fcomp
lock
cmp
fidiv
mov
sbb
cmp
sbb
xchg
or
mov
add
and
add
and
adc
sub
fidiv
and
xor
sbb
adc
nop
add
hlt
adc
or
enter
or
adc
jns
or
adc
sbb
xor
nop
mov
sub
adc
das
sbb
push
and
xor
pop
xor
add
movs
mov
mov
add
push
or
or
sub
xor
add
and
xor
add
fsub
sub
push
fs
sub
invd
inc
push
fs
adc
gs
push
fs
pop
and
xor
cmp
push
inc
iret
repz
sbb
mov
cmp
repz
iret
fcom
stc
sbb
repz
mov
adc
push
cmc
add
iret
repz
xchg
mov
repz
push
bound
jl
repz
out
stos
mov
cmp
repz
sbb
ss
repz
repz
pop
push
test
jl
out
test
cmc
jecxz
imul
not
and
out
sahf
stos
mov
and
nop
popf
or
mul
jg
inc
push
ins
ss
adc
fsubr
rcr
bound
add
sub
sbb
xchg
dec
call
les
cld
xlat
mov
add
div
int3
leave
jae
lahf
push
add
sub
jno
pop
enter
mov
jns
mov
movs
outs
fcomp
add
or
fadd
xchg
add
mov
xchg
mov
push
add
push
rol
jg
in
sahf
cwde
push
dec
js
dec
push
pop
dec
repnz
inc
les
dec
mov
dec
add
inc
lods
adc
sbb
mov
lods
adc
add
and
or
test
xor
xor
clc
push
mov
push
sub
lock
retf
pushw
pop
or
and
iret
jnp
push
js
adc
jl
sahf
out
iret
xor
push
out
adc
add
sub
stc
fiadd
sbb
sbb
fnstcw
push
dec
adc
mov
mov
lods
lds
mov
xor
xchg
(bad)
fimul
cmp
xor
push
sahf
xchg
sub
or
push
cmp
dec
repnz
jecxz
sti
and
push
cmp
lods
sti
cmp
fldenv
test
and
prefetch
mov
loop
ins
adc
mov
and
aaa
sub
add
dec
or
adc
adc
jle
mov
mov
xor
pop
mov
inc
inc
xor
mov
inc
lods
in
xlat
adc
fbld
lock
push
adc
push
cld
gs
scas
sbb
cmp
shl
sbb
mov
inc
pop
fsubr
int
push
and
jle
inc
test
clc
and
dec
and
mov
pop
retf
cmp
adc
inc
cmp
mov
adc
aas
sar
jle
sub
and
shl
xchg
cmp
loope
cmp
xchg
and
pushf
cmp
pop
cmp
mov
pushf
sbb
cmp
imul
repnz
jmp
mov
inc
repz
sub
and
inc
test
xor
aas
clc
push
pop
sbb
add
(bad)
outs
xchg
adc
ins
or
lock
adc
jnp
pusha
dec
call
sub
adc
xchg
add
or
pusha
(bad)
imul
mov
mov
inc
mov
or
test
push
call
mov
ins
mov
xor
aad
xchg
fmul
outs
inc
push
push
loopne
out
push
pop
xchg
xchg
ror
adc
adc
jae
push
sahf
cmp
xchg
xchg
mov
jl
arpl
xlat
sbb
add
and
xchg
imul
sti
mov
xchg
fild
cwde
xchg
add
out
cmp
inc
jne
fwait
push
test
test
int3
shr
jns
movs
ja
add
add
je
sub
enter
inc
or
adc
xchg
inc
ror
cmps
mov
bound
rcr
in
(bad)
jno
inc
ret
and
cmp
daa
cwde
ins
or
xlat
pop
adc
in
and
ss
sub
mov
xchg
cmp
cld
mov
je
sbb
adc
add
mov
movs
repz
inc
cmp
xor
gs
imul
jl
dec
jmp
xor
sub
mov
push
dec
test
dec
inc
leave
or
sbb
cmp
cmp
inc
sbb
nop
mov
add
loop
dec
pusha
lea
xor
movs
stos
bound
push
pop
and
nop
xor
aaa
test
(bad)
std
add
or
nop
add
(bad)
mov
jmp
cmp
aad
add
add
add
pop
frstor
mov
fistp
or
mov
pop
dec
inc
lods
push
jg
add
add
xor
cld
cdq
es
jo
and
icebp
pop
inc
mov
dec
stc
sub
add
fbld
jns
sar
cmp
fsubr
jo
add
and
pop
push
dec
lods
push
push
js
(bad)
das
or
retf
mov
mov
mov
pop
test
jmp
jl
nop
arpl
jne
sbb
in
cmp
dec
xor
mov
xor
lea
xchg
pop
xchg
pop
sbb
xchg
clc
add
pop
or
mov
cmovp
add
and
daa
aas
or
inc
fadd
sub
retf
and
clc
sbb
test
test
and
jmp
pushf
inc
and
lock
jne
xchg
jl
xchg
js
cmp
jmp
loope
mov
mov
jp
mov
arpl
and
sub
push
xor
add
or
and
or
repnz
je
mov
jb
or
add
push
push
cmp
add
adc
cdq
sbb
das
mov
push
and
cmp
inc
sbb
ret
adc
jae
adc
push
iret
sub
lock
jo
adc
das
xchg
sar
nop
dec
and
cs
inc
mov
mov
inc
sub
sub
or
lods
nop
sub
push
adc
mov
pop
dec
inc
xor
cwde
inc
lahf
mov
enter
sbb
js
inc
test
push
lahf
or
cs
pop
dec
dec
adc
or
xchg
adc
rol
out
nop
cmps
cmp
imul
ss
xor
dec
mov
outs
enter
mov
sbb
adc
push
mov
xlat
push
mov
js
and
pop
and
xor
adc
je
inc
cmp
jne
clc
aas
and
push
cmp
and
add
ret
mov
and
and
add
push
add
sub
ret
pop
test
(bad)
in
dec
and
inc
rol
cmp
push
add
xchg
or
cmp
inc
add
test
adc
jge
jmp
loope
sbb
or
adc
xor
xchg
iret
movzx
pop
popf
les
sbb
xchg
pop
outs
or
pop
mov
lods
dec
idiv
or
cmp
(bad)
dec
add
shl
xor
sahf
inc
cmp
and
loopne
or
sub
fild
cs
push
push
push
movs
and
and
xchg
xor
cmps
add
int3
or
add
xor
jecxz
or
xor
xchg
inc
push
add
(bad)
xor
out
xchg
push
xor
mov
inc
dec
push
or
or
dec
retf
adc
rcl
or
enter
ror
jb
test
or
or
(bad)
stos
rcl
ds
sub
mov
shl
je
std
mov
xor
sbb
retf
mov
retf
nop
and
mov
cmp
in
adc
sahf
lea
mov
cmp
or
and
movs
call
(bad)
or
aam
adc
call
mov
pop
test
retf
fs
sti
or
ins
xor
adc
mov
xchg
jl
ret
push
dec
popf
push
mov
test
jo
mov
jno
mov
push
movs
fld
mov
add
rcl
(bad)
(bad)
rol
mov
stos
push
mov
aad
jl
adc
and
xchg
mov
and
cmp
adc
sub
add
pop
push
mov
jmp
mov
pop
cmp
mov
out
fiadd
in
push
jmp
scas
add
jmp
fwait
mov
idiv
mov
adc
ficomp
mov
fcomp
push
inc
(bad)
inc
orps
iret
cmp
les
xor
sub
cld
push
jmp
push
les
sub
pop
push
add
loop
or
data16
adc
js
popa
pusha
je
iret
add
cmp
into
imul
sahf
rol
jge
cld
test
jmp
inc
pop
jg
adc
cmp
lea
jg
jo
cld
mov
arpl
fsubr
shl
ret
ret
cmp
sbb
mov
mov
mov
inc
pushf
or
aaa
mov
fcom
hlt
mov
pop
fsubr
jne
add
repz
sub
mov
adc
fist
and
movs
and
push
test
into
adc
lahf
xchg
push
xor
pop
pusha
movs
adc
and
clc
les
lds
popf
xchg
les
cmp
and
cmp
add
dec
scas
push
loopne
in
cmp
lahf
push
or
mov
pop
cmp
and
aad
add
enter
adc
and
sbb
imul
inc
les
push
scas
xor
inc
jns
xchg
(bad)
pop
cmp
and
adc
inc
inc
js
push
xchg
jp
cli
out
jg
invd
cs
push
pop
stos
cmps
mov
loop
aaa
inc
add
xor
xchg
test
xor
push
add
inc
pop
push
pusha
loopne
inc
iret
jae
data16
xchg
mov
lods
xor
cs
push
push
pop
pop
or
push
jae
mov
pop
add
call
out
int3
sub
js
das
add
push
inc
or
movs
pop
repnz
dec
or
add
pop
out
mov
push
push
add
xor
inc
sub
xor
pop
mov
jno
retf
aam
lahf
mov
cdq
cmp
xlat
or
or
and
or
data16
and
mov
fdivr
pop
adc
popw
xor
adc
cmps
and
mov
out
adc
in
nop
adc
clc
push
jb
gs
clc
clc
sbb
push
xchg
scas
adc
inc
push
test
sbb
mov
(bad)
outs
adc
add
je
iret
dec
adc
dec
push
cdq
jno
xchg
add
dec
inc
stos
sbb
mov
add
mov
dec
or
leave
rcl
aaa
push
outs
bound
inc
fnstcw
push
or
jb
or
cmp
pop
in
add
push
inc
call
test
jg
rol
mov
div
loope
mov
sub
sub
mov
push
or
jnp
loopne
(bad)
loopne
or
adc
sub
mov
inc
lock
sahf
sub
pop
test
ret
xchg
adc
daa
lahf
out
pop
adc
xor
sti
cmp
xor
adc
int
jmp
inc
loopne
mov
lea
cmp
sub
push
pop
cmp
pop
dec
fadd
inc
xlat
or
pushf
add
mov
adc
das
mov
xor
outs
or
sbb
js
or
dec
push
daa
jo
cmp
jae
add
pusha
stos
int
rcr
pop
pop
add
jl
rol
add
ss
mov
icebp
pop
bnd
or
jmp
pop
add
test
jae
pop
pop
jno
or
jmp
out
ins
shl
xor
add
out
mov
movs
add
inc
mov
mov
inc
jge
mov
in
int
add
dec
movzx
mov
popa
icebp
mov
push
mov
mov
leave
jae
lock
cmps
add
push
add
and
xchg
add
scas
into
sti
pop
and
adc
sar
adc
pusha
(bad)
popf
pop
sub
mov
dec
push
and
mov
mov
daa
clts
sub
aad
xor
repnz
(bad)
cs
or
gs
daa
and
mov
iret
mov
ret
cmp
add
ja
mov
or
inc
mov
lock
sub
out
fmul
or
in
pop
fimul
mov
adc
sbb
sbb
repnz
jp
xchg
les
loope
xchg
or
xchg
jne
push
jmp
in
rol
dec
push
inc
push
daa
push
fs
sbb
in
adc
int
push
push
jno
mov
and
clc
pop
ins
repnz
cmp
popf
add
les
and
fcom
cmp
xchg
sub
mov
adc
sbb
fisubr
inc
inc
out
pop
imul
xor
xchg
push
leave
test
adc
push
dec
pushf
cwde
add
pop
mov
ja
mov
and
pop
fisttp
adc
pop
xchg
add
push
ret
rol
xchg
jo
jne
sub
jg
rcr
fsubr
cmps
add
addr16
or
pop
add
xlat
call
lea
mov
mov
loope
or
and
icebp
adc
setp
cld
adc
mov
mov
sub
dec
mov
mov
mov
and
mov
in
xor
lock
nop
in
cdq
or
or
push
mov
dec
sub
jae
and
jb
jle
mov
je
sbb
rol
addr16
push
dec
pop
jne
aas
lock
loopne
sbb
pop
outs
inc
cs
pop
adc
and
push
mov
dec
daa
rcl
pop
ror
ret
sbb
(bad)
std
test
lods
and
mov
push
and
fdivp
and
ret
mov
sbb
enter
ret
jl
je
lahf
adc
or
mov
push
sub
mov
adc
xchg
add
test
call
mov
or
push
push
bound
sbb
sbb
dec
xor
xor
add
sub
mov
adc
pop
les
nop
adc
mov
cmp
xchg
dec
jne
cld
mov
mov
out
or
sahf
sahf
push
sub
or
sbb
js
adc
mov
mov
fs
js
mov
ficomp
mov
aas
adc
or
adc
outs
inc
and
(bad)
ss
imul
lds
pop
jo
add
and
jmp
and
call
xor
pop
gs
cmc
repnz
and
xchg
cmc
jle
mov
mov
dec
test
rol
pop
or
(bad)
rol
jl
xchg
mov
xchg
pop
inc
nop
loopne
inc
add
fild
fstp
inc
add
pop
add
jmp
fld
fsub
fsub
dec
dec
fcmovnu
stc
sbb
test
add
inc
add
or
mov
aas
test
inc
lods
bound
mov
push
ja
mov
add
dec
in
pop
(bad)
leave
adc
inc
jne
mov
dec
dec
enter
mov
cmps
jb
sub
push
ja
pop
(bad)
retf
retf
xor
sti
stos
cmp
dec
add
imul
jnp
push
sub
test
sbb
les
ficom
push
jo
jns
xor
mov
daa
xor
inc
or
adc
imul
loope
rcpps
cdq
lahf
fdiv
cmp
mov
mov
xchg
pop
xchg
cmp
outs
idiv
dec
(bad)
push
dec
push
mov
mov
mov
add
ret
xchg
sub
ja
or
in
or
(bad)
out
xchg
jl
scas
stos
fbld
push
js
lahf
or
push
test
push
add
mov
pop
mov
adc
fdiv
sbb
jp
sbb
jnp
outs
dec
add
sbb
rcl
les
and
adc
inc
add
add
test
mov
adc
jg
out
pusha
inc
pusha
mov
cmc
pusha
adc
jno
shufps
and
pushf
inc
jno
and
dec
push
sbb
in
je
cdq
ror
add
outs
mov
ja
mov
fwait
mov
jb
pop
pop
repz
cmps
push
inc
xor
jmp
dec
fadd
inc
leave
or
pusha
xchg
jmp
xchg
push
ret
xor
or
ror
add
dec
mov
mov
loop
pop
jecxz
xchg
pop
mov
push
sbb
inc
cmp
jl
and
inc
ror
inc
fs
adc
xchg
ret
xchg
cwde
or
cmp
adc
out
xchg
rcl
or
add
or
gs
and
xor
add
outs
or
sbb
leave
outs
and
hlt
daa
(bad)
sbb
sub
dec
or
or
daa
or
test
dec
dec
xor
inc
nop
es
rcl
cmp
movs
or
dec
xchg
das
and
mov
daa
sbb
mov
inc
loopne
cld
out
xor
lds
mov
xchg
dec
pop
daa
and
mov
jmp
cmp
leave
mov
jne
shl
inc
fadd
ss
mov
repz
je
inc
test
(bad)
pusha
mov
lods
jbe
sbb
xor
sbb
and
or
adc
in
imul
dec
dec
cwde
push
ud2
dec
push
gs
pop
gs
adc
sbb
popf
sub
adc
push
jle
scas
or
push
dec
push
push
ja
dec
mov
push
loope
add
xchg
add
push
leave
ins
adc
jnp
jnp
add
outs
or
enter
or
scas
int
xor
call
adc
leave
loop
adc
add
leave
sbb
jae
call
mov
cdq
dec
add
push
test
movs
or
cmp
xchg
xchg
je
sbb
fwait
add
adc
popf
or
and
or
mov
(bad)
into
lock
xchg
jge
loope
ss
dec
stos
push
adc
add
pop
into
mov
fcmovne
enter
movs
inc
sub
xchg
xor
mov
rcl
adc
jae
dec
fild
popa
dec
aaa
clc
cmps
sbb
lock
test
xor
test
or
aas
inc
jno
add
dec
dec
cmp
movups
xor
bts
dec
push
aaa
xchg
add
push
je
rol
push
out
sub
xchg
dec
or
fist
lock
xor
lock
fsubr
mov
add
push
rcl
mov
in
xor
jmp
mov
add
jo
inc
cmp
je
add
jge
mov
pushf
sub
test
xor
leave
pop
xor
(bad)
adc
outs
xchg
jp
outs
test
sub
or
mov
mov
(bad)
push
ds
call
mov
(bad)
nop
push
bound
inc
int3
(bad)
aaa
push
push
cdq
fimul
sub
inc
xchg
or
sbb
jae
xchg
and
pop
add
and
imul
or
and
je
sbb
mov
dec
ins
in
push
or
mov
rcr
pop
adc
add
popa
cdq
or
pop
adc
das
inc
ss
aad
ds
shl
lods
jno
nop
outs
push
dec
or
shl
data16
sbb
adc
sub
xlat
xchg
adc
mov
xchg
xor
xchg
jae
xor
daa
inc
sbb
js
shl
or
xor
push
cmc
loope
pop
sub
pop
test
(bad)
loope
adc
leave
pop
sub
mov
rol
sub
sub
cmp
add
xchg
adc
mov
xor
iret
and
and
push
inc
iret
pop
xor
or
mov
mov
cmps
cmp
movs
add
xchg
test
fist
adc
adc
cmp
call
sub
pushf
out
inc
retf
pop
out
out
push
xor
or
xor
mov
pusha
mov
add
pop
das
je
add
mov
aad
push
inc
mov
push
cmp
mov
xor
cmp
cwde
push
stos
inc
xchg
rol
cmps
lods
enter
add
inc
outs
outs
sbb
push
test
jbe
arpl
mov
push
ret
mov
push
ja
xor
pop
cmp
add
xor
or
inc
mov
lock
dec
cmp
dec
js
pop
sub
sub
or
adc
jno
mov
test
add
adc
ror
addr16
out
add
inc
nop
stos
out
adc
adc
xchg
or
aad
sbb
mov
and
and
or
test
push
pop
in
mov
push
mov
sub
dec
and
and
adc
(bad)
fxch
js
xchg
push
sbb
push
loop
push
dec
inc
ss
inc
mov
dec
push
xchg
and
fist
leave
jo
push
dec
cwde
or
xchg
and
aad
adc
inc
xchg
and
inc
mov
pushf
pop
xchg
and
dec
or
xchg
add
data16
rcl
mov
pusha
inc
ret
and
inc
or
popf
or
es
stos
je
adc
fs
adc
mov
jns
adc
cmp
leave
dec
sub
sub
fs
popf
cmp
(bad)
sub
mov
out
loope
xor
inc
pop
pop
cmp
lahf
sub
nop
out
test
call
inc
jo
int3
pop
repnz
sub
inc
xchg
cmps
mov
int3
pop
add
and
lock
outs
icebp
or
push
add
cmp
push
mov
xor
or
jecxz
dec
imul
mov
jns
push
fwait
hlt
push
sbb
fimul
adc
sub
dec
out
jns
xor
or
in
(bad)
loope
sub
sub
xor
lock
xor
sub
xor
and
cmp
ss
or
inc
inc
inc
mov
jns
aaa
fcmovnb
inc
sub
pop
repnz
cmp
mov
in
inc
push
push
cmp
repz
cmp
inc
pop
pop
cmp
mov
cs
jb
cmp
loop
push
repnz
jo
cmp
adc
adc
pop
js
mov
adc
jns
rol
push
add
add
pop
movs
push
mov
sub
repnz
repnz
push
lock
nop
mov
push
sub
cmp
push
cwde
inc
retf
test
inc
pop
enter
movs
push
mov
add
dec
xor
aaa
xchg
or
inc
cmc
or
inc
pop
pop
mov
mov
pop
aaa
xchg
inc
mov
push
cs
mov
ror
dec
xor
rol
jns
aam
pop
movs
ins
enter
in
dec
add
sbb
clc
(bad)
rcl
sub
je
sub
sbb
test
dec
jg
inc
mov
push
cmp
push
jo
push
test
xchg
nop
loopne
adc
mov
xor
mov
inc
aas
dec
stos
cli
inc
imul
mov
loopne
xchg
sub
push
aas
mov
mov
mov
shl
jno
jb
pop
xlat
cmp
or
fcomp
aad
or
das
loope
cmp
mov
dec
call
adc
pop
xor
pop
adc
jl
jb
mov
xor
pop
inc
pop
mov
add
push
in
mov
jno
sub
cdq
mov
xchg
pop
mov
sbb
add
and
sbb
dec
rol
and
addr16
or
sub
inc
push
ss
sbb
or
sbb
sbb
cmp
stc
mov
push
pop
jns
xchg
mov
xor
out
loope
sti
or
call
cmp
and
mov
mov
sbb
sbb
or
int3
push
mov
fs
add
inc
scas
shl
pop
pop
and
(bad)
shl
dec
sub
inc
mov
inc
mov
xchg
sub
xor
cmc
or
cmps
or
test
icebp
push
fdiv
int
aas
add
out
adc
push
or
or
enter
adc
sbb
iret
adc
mov
retf
adc
aam
inc
push
or
sbb
ins
jne
jns
cs
pusha
dec
adc
call
push
ret
add
sub
leave
sbb
adc
or
jmp
out
add
mov
scas
mov
in
dec
repnz
sti
sar
or
mov
int3
sti
sbb
or
inc
pop
push
fs
int3
mov
sbb
ds
xor
xor
dec
or
sbb
dec
xor
or
int3
sbb
pusha
add
inc
xchg
enter
inc
into
sbb
sub
bound
mov
jecxz
hlt
push
add
cmp
(bad)
pop
ins
push
jp
out
sahf
push
sbb
xor
sar
pop
push
sahf
out
mov
sar
loop
cld
or
iret
repz
and
cmp
iret
repz
or
or
mov
sbb
mov
aam
repnz
mov
xchg
imul
ss
dec
or
sahf
mov
dec
push
add
pusha
add
or
push
inc
push
rcl
daa
mov
in
les
ror
sub
call
aaa
pusha
dec
cmp
and
adc
dec
add
inc
adc
sbb
(bad)
fld
sub
dec
cmps
popf
sub
push
sub
push
sub
dec
sbb
call
push
stmxcsr
pop
pop
and
mov
cld
js
sbb
push
mov
shl
add
fild
and
mov
mov
cmps
lea
or
test
call
loop
push
or
add
ror
loop
pop
or
test
mov
add
and
mov
imul
mov
daa
jmp
mov
adc
test
or
push
pop
adc
fs
pop
gs
or
sub
mov
ror
inc
mov
lods
dec
jecxz
rcr
or
mov
daa
adc
inc
push
shl
add
inc
add
push
add
es
cmp
stc
nop
test
cwde
mov
push
pop
dec
les
dec
das
add
shl
mov
shl
aaa
adc
sbb
xchg
(bad)
(bad)
add
adc
adc
in
or
xchg
push
xchg
dec
mov
xor
mov
inc
push
enter
add
sar
push
add
fs
das
fwait
or
add
add
add
fwait
int
repnz
and
and
cmp
inc
mov
add
out
je
inc
mov
(bad)
mov
js
and
mov
adc
sub
je
sbb
cmp
add
movs
mov
pop
lock
cmp
push
mov
int3
xor
jmp
mov
rol
or
push
loop
pop
xor
jo
inc
xor
xor
add
sub
adc
je
sbb
pop
mov
test
dec
lock
xor
adc
sbb
add
movs
pop
adc
add
push
mov
sbb
pop
mov
mov
sbb
aam
adc
xor
cmp
add
sbb
add
jnp
rcl
pop
or
add
jmp
pop
add
sar
daa
add
pop
(bad)
push
push
adc
cmp
push
sbb
or
dec
(bad)
lock
mov
mov
mov
push
add
sbb
lahf
push
pop
dec
loopne
inc
test
ins
popa
mov
sub
push
jl
mov
outs
mov
mov
cli
push
aas
gs
add
jne
push
add
jae
sub
lahf
jge
inc
ret
mov
out
push
add
(bad)
or
adc
adc
add
jle
add
movntps
jmp
mov
sbb
xor
ret
add
ss
push
cmp
mov
ds
mov
scas
add
adc
imul
mov
stos
nop
mov
pop
lahf
and
and
js
dec
mov
mov
or
sbb
or
adc
inc
mov
sub
adc
pop
add
cmp
or
cmp
add
mov
imul
iret
ja
push
es
icebp
cmp
mov
cld
or
pop
pop
sub
sbb
xchg
pop
ins
loope
add
pushf
pop
and
jne
ret
imul
push
repnz
push
dec
jb
ins
sub
(bad)
or
xchg
sub
lahf
mov
sub
inc
test
and
ret
lahf
mov
pop
mov
or
daa
out
pop
dec
mov
outs
mov
adc
pop
pop
mov
mov
push
dec
iret
clc
push
pop
(bad)
jmp
xor
push
jb
pop
mov
dec
shl
lahf
or
dec
or
add
pop
xchg
xor
push
push
sbb
xchg
sahf
push
dec
ret
dec
mov
xor
cmps
xchg
inc
jno
push
adc
mov
cmp
mov
sbb
xor
gs
xchg
test
test
xor
das
pop
les
xor
push
das
and
xchg
sub
xor
sbb
in
push
adc
and
push
jecxz
cmp
dec
mov
inc
push
dec
sbb
scas
jno
inc
fwait
imul
pushf
xor
aas
push
rol
add
pop
loopne
inc
mov
push
dec
repz
xlat
sub
and
mov
push
cmps
mov
add
rcr
jbe
and
mov
mov
push
and
frstor
rcr
sbb
jmp
xchg
and
mov
push
ja
test
nop
je
fwait
in
test
and
popa
std
mov
add
dec
inc
idiv
and
mov
aaa
push
mov
in
hlt
in
add
xor
nop
push
nop
inc
movs
(bad)
xchg
test
sub
push
jmp
xchg
xor
retf
fsubr
rcl
and
(bad)
retf
nop
dec
jb
xchg
je
push
dec
jmp
or
xchg
add
add
and
push
xchg
fiadd
xchg
adc
add
mov
adc
dec
jo
dec
rol
adc
add
cmp
sbb
mov
(bad)
(bad)
mov
mov
jns
xlat
in
movs
repnz
push
rcl
loopne
adc
stos
add
mov
popf
inc
stc
pop
js
inc
sub
mov
aaa
clc
ss
clc
fprem
outs
pop
push
ret
add
cmp
jmp
fnsave
loopne
or
jae
mov
jmp
cmp
push
fbld
fs
sub
es
or
inc
add
sar
dec
mov
xor
je
ret
test
js
adc
mov
inc
dec
xchg
pop
jmp
add
xor
(bad)
shr
or
daa
inc
dec
leave
pop
ins
(bad)
daa
pop
dec
in
cmp
daa
inc
add
jns
fcmovbe
into
rol
jne
ins
lahf
jns
xor
addr16
push
jo
and
lds
add
dec
jbe
push
shr
arpl
or
daa
shl
daa
push
fs
adc
jg
xchg
les
sahf
dec
and
pop
dec
sub
xchg
cmp
sbb
setp
add
jns
add
xchg
sbb
pop
aas
add
sbb
aad
inc
cmp
mov
movs
sti
mov
inc
xchg
and
out
xor
out
xchg
popf
jbe
fmul
inc
push
imul
aam
adc
lods
sbb
lods
fdivr
jne
hlt
adc
inc
xor
(bad)
ficomp
pop
pop
imul
sub
ja
imul
clc
dec
add
push
js
fld
repz
enter
dec
hlt
add
push
add
je
and
pop
add
js
xchg
and
sub
mov
inc
lds
fidivr
jle
inc
adc
dec
pop
mov
jne
iret
jle
test
enter
xchg
xchg
nop
or
adc
addr16
xor
ja
mov
adc
push
fdivr
call
loopne
nop
or
fadd
imul
lock
sbb
rcl
aam
clc
cmp
sbb
xor
push
and
cmp
addr16
mov
imul
iret
lea
mov
adc
ficom
scas
imul
in
pop
les
push
ins
das
ficom
jo
jo
in
movs
aad
ss
add
aas
iret
xchg
pop
dec
push
dec
and
call
mov
sub
jns
fldenv
clc
mov
xchg
xchg
hlt
clc
inc
xor
dec
aaa
push
mov
shr
pop
add
add
repnz
inc
pusha
enter
add
enter
inc
adc
in
and
jle
jp
mov
or
mov
into
and
lea
pusha
aad
rcr
xchg
pop
adc
mov
cdq
in
push
jae
dec
clc
hlt
mov
sti
adc
shl
movs
or
push
inc
and
popa
cmps
sub
mov
xlat
and
repnz
imul
inc
out
pusha
pop
or
cmp
xor
push
push
push
xor
cmp
sar
sbb
mov
adc
mov
mov
daa
dec
inc
cmps
or
add
cmc
push
or
dec
xor
out
xor
mov
add
add
inc
je
inc
and
outs
and
inc
rcr
(bad)
outs
scas
and
out
mov
adc
or
xor
push
cdq
mul
loop
scas
mov
add
ret
add
xchg
rcl
xchg
push
jp
push
mov
and
or
repnz
and
nop
dec
cld
adc
pcmpgtw
mov
and
ret
into
dec
imul
inc
fiadd
adc
outs
mov
or
dec
ror
or
push
mov
push
fwait
imul
pop
push
cmp
test
enter
test
push
mov
inc
jbe
push
cld
scas
pop
pushw
mov
pop
push
int3
dec
jnp
adc
inc
shl
mov
xor
mov
xchg
jae
gs
daa
or
ins
dec
ror
pop
mov
sbb
mov
mov
shl
jne
lods
clc
lods
adc
ret
bt
cdq
add
data16
xchg
xor
push
out
add
jbe
or
or
test
ins
dec
rcl
adc
xor
aas
dec
pushf
rol
repz
pop
mov
jnp
pop
cwde
jne
pop
add
sbb
rcr
mov
xor
jp
mov
mov
in
jns
adc
xchg
loop
sbb
pop
ficomp
imul
fcomp
call
jo
dec
push
inc
test
lds
sub
fwait
push
pop
jmp
shr
pop
inc
dec
mov
dec
imul
mov
or
es
(bad)
rcr
cdq
adc
push
cdq
pop
arpl
and
sbb
or
cmp
js
adc
aad
cmps
or
xchg
imul
xchg
int
pop
retw
jecxz
bound
cmp
out
div
mov
push
jb
add
ds
mov
(bad)
jnp
in
pop
pop
ror
dec
xor
cmp
int
ss
inc
pop
in
pushf
push
outs
add
sub
rcl
mov
cwde
cwde
pushf
fmul
repz
sub
mov
or
mov
xor
fwait
enter
or
cwde
scas
mov
mov
dec
test
inc
ins
cmps
jle
and
push
push
(bad)
outs
inc
adc
mov
sub
push
dec
ror
bound
xchg
push
cwde
loop
sbb
cmp
jp
addr16
adc
pop
push
jno
arpl
cmp
in
and
int3
add
je
push
test
pusha
jl
cwde
push
xor
xchg
test
push
sbb
xchg
iret
push
adc
add
cs
or
movs
xchg
adc
in
pop
out
not
out
and
jb
jae
lahf
fisubr
add
cwde
adc
inc
adc
dec
imul
call
outs
sbb
xchg
inc
loopne
push
mov
sub
add
add
add
jecxz
aam
mov
or
sbb
add
dec
dec
aaa
imul
push
popf
pushf
sbb
pop
mov
or
dec
sbb
rcr
sub
cmp
cmp
xchg
jo
dec
in
jo
jnp
shr
cmp
push
push
jbe
adc
dec
dec
fwait
nop
hlt
sbb
and
add
rcr
popf
sbb
data16
pop
ret
sbb
or
fwait
cmp
xchg
mov
call
popa
or
push
xchg
xchg
fwait
inc
call
scas
add
xor
fwait
sub
mov
xor
mov
mov
add
push
mov
jg
adc
popf
sbb
or
fmul
ins
add
in
adc
das
clc
adc
int3
clc
(bad)
pop
push
mov
or
sbb
sbb
sbb
call
or
push
rcr
jmp
cs
imul
out
add
ds
pop
gs
sub
pop
sub
popf
mov
cwde
push
fdivr
pop
mov
call
inc
jle
push
lock
outs
xchg
xor
and
popa
dec
gs
loopne
in
inc
or
enter
(bad)
movs
test
ucomiss
ret
fsubr
outs
(bad)
sbb
inc
in
sbb
hlt
and
outs
das
inc
shr
xor
inc
inc
(bad)
sbb
rol
fstp
inc
ret
dec
sub
rcl
mov
jl
daa
dec
xor
ss
add
cmp
in
es
inc
in
lock
dec
call
lea
push
sbb
pushf
clc
fidivr
shl
adc
das
inc
fadd
xor
xchg
mov
lahf
xor
mov
sub
xchg
lods
mov
lock
sbb
sar
push
pop
clc
ret
and
sbb
(bad)
mov
shl
xor
mov
dec
push
and
(bad)
jno
sbb
sbb
loope
out
cmp
add
push
mov
push
(bad)
inc
add
pop
lea
dec
mov
loope
js
mov
pop
pop
jge
sub
sar
retf
cmp
pop
pop
cmp
and
adc
rcr
adc
mov
push
test
mov
cmp
cmps
add
fdivr
xor
mov
or
icebp
pusha
sti
pop
adc
jae
cmp
jbe
cs
movs
add
in
mov
pop
and
cmc
jae
lea
add
sub
mov
jmp
and
int
dec
out
rcl
cwde
cmp
fs
std
sub
cmp
pusha
mov
and
add
mov
pusha
jae
(bad)
ds
aaa
adc
rol
add
inc
mov
sbb
jne
sub
inc
mov
adc
pusha
dec
push
mov
rol
rol
lock
adc
imul
shr
or
es
lea
imul
jne
and
push
xor
call
rcl
add
or
mov
cmp
sbb
pop
(bad)
cmp
xlat
fdiv
out
and
xor
dec
stc
shl
shr
or
add
jg
cmp
push
mov
call
and
xor
dec
repz
or
call
stc
mov
or
aaa
mov
mov
jmp
test
ud2
inc
clc
mov
or
into
mov
and
jmp
push
shr
or
add
mov
adc
xchg
pop
push
scas
(bad)
cmc
adc
mov
sbb
inc
xor
sbb
xchg
inc
std
and
data16
cwde
sub
test
mov
(bad)
push
add
fwait
sub
xlat
pop
mov
and
nop
and
push
xchg
imul
cwde
std
sbb
or
mov
cmps
cmp
ss
mov
add
bound
and
pop
add
sub
ror
dec
call
es
adc
sub
mov
dec
adc
ror
pop
adc
(bad)
xor
adc
add
ror
jns
out
fsubr
enter
dec
fimul
pop
and
int
and
nop
mov
aaa
ret
or
data16
or
adc
inc
and
jmp
leave
fwait
or
mov
add
sub
xchg
xor
dec
sub
inc
cmp
push
je
or
adc
xor
sbb
adc
adc
imul
adc
in
gs
or
jmp
test
pusha
dec
mov
or
jo
mov
int
(bad)
jle
sub
or
int
repnz
daa
mov
out
aam
enter
add
or
aam
xor
in
nop
aaa
push
enter
clc
jl
pop
sbb
gs
lods
les
adc
ds
and
hlt
not
or
out
push
out
xor
dec
xchg
jmp
inc
call
or
sub
repz
cmps
and
push
imul
cmp
xchg
jmp
or
add
pop
pop
gs
or
push
xchg
aaa
xchg
int3
or
sub
out
dec
or
add
pop
test
and
test
cmp
data16
out
(bad)
sbb
add
xor
adc
dec
aaa
add
fwait
adc
xor
push
xchg
mov
sub
pop
pop
push
push
ret
xchg
mov
outs
pop
sub
xlat
add
shl
fld
mov
adc
push
jbe
daa
jl
or
or
inc
or
and
sbb
mov
push
pop
jae
inc
hlt
hlt
into
adc
push
ror
je
pop
jg
ret
fcomip
mov
push
cmp
sti
cmp
push
add
adc
lods
adc
inc
jmp
add
add
aam
push
rcl
and
sub
sti
xor
or
ins
fsub
xchg
sbb
imul
push
enter
add
pusha
ja
add
(bad)
es
je
xchg
and
inc
or
(bad)
sbb
xchg
ret
xchg
imul
das
sbb
dec
mov
dec
sbb
jl
out
sti
xor
std
add
inc
sbb
sbb
sbb
(bad)
mov
sbb
add
cmp
enter
arpl
add
jb
jl
adc
outs
jmp
mov
adc
jmp
xor
sub
mov
jne
pop
push
and
in
sbb
sub
mov
jmp
xor
mov
shl
pusha
inc
sbb
adc
(bad)
jmp
mov
jnp
cmp
ror
push
pop
inc
jmp
cdq
nop
mov
jge
dec
push
add
fs
fnstenv
xchg
ret
add
movs
and
sbb
sti
jle
cmp
in
add
jmp
or
pop
movs
mov
sbb
shr
push
xchg
ret
add
jl
xor
(bad)
outs
push
mov
push
sub
rcl
test
xor
jg
xchg
xchg
jbe
push
dec
leave
imul
or
and
add
xor
icebp
push
fadd
adc
ret
cs
popa
jo
jmp
cmp
pop
shl
mov
jmp
push
cmp
dec
enter
lds
sbb
fistp
pop
repnz
or
inc
push
div
movs
sub
or
push
ins
and
fwait
les
xor
xor
xchg
mov
inc
div
mov
pop
xor
call
rol
clc
pusha
imul
js
lea
addr16
fidivr
ss
repnz
dec
ins
push
add
adc
and
pusha
sub
inc
xchg
pop
cmp
add
push
fwait
push
or
jl
pop
aam
fwait
push
es
cmp
pop
add
mov
cld
in
sub
popa
add
in
or
cs
sbb
adc
or
cmp
sub
clc
clc
rol
out
mov
pop
hlt
jmp
inc
inc
dec
push
retf
daa
retf
(bad)
test
iret
add
repz
test
inc
inc
repnz
shl
mov
and
leave
fild
push
enter
inc
fwait
inc
and
xor
dec
sub
and
push
test
push
shl
adc
or
mov
sub
mov
add
jne
and
xlat
sbb
push
pop
popa
add
or
(bad)
or
cmps
ss
pop
out
ins
das
ins
and
add
xor
and
xchg
out
adc
sbb
mov
inc
pop
and
mov
popf
mov
or
sub
fidiv
add
sbb
cmp
leave
lods
shl
sbb
inc
fimul
inc
inc
jecxz
add
mov
and
inc
add
jge
test
add
enter
jno
push
inc
xor
stos
loope
retf
cs
mov
mov
mov
dec
jg
dec
not
aas
hlt
std
in
cwde
je
pop
xchg
outs
push
sbb
lea
jo
ds
inc
mov
sub
add
stc
or
jg
add
add
call
popf
mov
xchg
or
xchg
ror
xor
jmp
adc
adc
sub
cmp
dec
mov
mov
rol
(bad)
mov
fld
push
or
jge
sar
xchg
add
ins
loop
inc
inc
jnp
add
mov
cmp
ret
lds
pop
sub
jmp
je
or
push
fiadd
je
xchg
or
xor
inc
pop
jge
adc
add
inc
addr16
repnz
ror
mov
and
push
mov
or
cmp
sbb
je
push
frstor
or
push
pop
nop
cli
pop
dec
dec
cmps
push
sbb
push
adc
mov
inc
dec
sbb
popf
(bad)
pop
jmp
gs
push
mov
cwde
or
inc
mov
stos
dec
cs
je
sub
add
push
imul
xchg
push
xor
mov
push
and
mov
inc
inc
mov
push
jo
les
add
mov
pop
push
jle
cld
ins
pop
les
sub
std
sbb
add
or
add
jge
dec
and
and
ss
xchg
mov
aad
enter
loope
dec
ret
inc
sub
hlt
dec
push
mov
or
and
push
mov
rcr
jle
cmp
sub
add
xchg
or
pop
test
jno
daa
push
inc
mov
inc
adc
and
cmp
push
add
or
push
inc
aaa
neg
dec
mov
aam
inc
pusha
adc
jno
loop
jns
int3
dec
shr
sbb
fcom
in
or
adc
and
nop
pop
cmp
frstor
add
mov
xor
sahf
ins
inc
and
cmps
pop
and
das
or
loopne
call
out
call
(bad)
pop
ret
jecxz
jge
cs
pop
add
fsub
shl
sub
mov
xchg
xor
or
mov
push
mov
push
or
ins
add
(bad)
ss
(bad)
jmp
inc
cmp
loope
pop
push
dec
cdq
cmp
mov
fs
movs
push
jmp
mov
cdq
adc
inc
mov
test
and
inc
and
popa
mov
or
add
dec
idiv
push
and
in
fimul
add
cwde
ret
setg
iret
scas
jmp
lahf
in
arpl
dec
lea
nop
into
inc
sub
push
fwait
inc
pusha
mov
mov
jae
fst
out
test
lds
xor
test
outs
addr16
sub
dec
mov
out
mov
mov
rcr
fisttp
jmp
hlt
jne
in
or
call
dec
fdiv
push
or
std
mov
jne
sub
ja
js
sub
sysexit
inc
pop
add
movs
nop
inc
mov
mov
outs
jl
ins
and
neg
cmp
xchg
jmp
xchg
ss
leave
push
push
scas
mov
jnp
sbb
adc
sbb
jae
or
adc
(bad)
in
pusha
aad
jg
adc
inc
or
xor
or
lea
xor
(bad)
popa
and
dec
push
or
add
shr
(bad)
and
neg
sbb
ss
and
lock
loopne
adc
mov
inc
ficomp
and
push
mov
pop
je
popf
retf
neg
and
sbb
sub
stc
push
push
mov
dec
jnp
jp
jnp
and
shr
jne
ss
cmp
imul
dec
(bad)
jbe
sbb
repz
js
mov
sub
and
push
adc
adc
xchg
sbb
nop
dec
shl
mov
sbb
fnsave
inc
cmps
adc
je
inc
mov
xchg
xlat
outs
push
push
data16
jbe
aaa
daa
adc
ret
mov
mov
imul
inc
sbb
mov
and
stos
in
mov
clc
add
dec
enter
jbe
cs
nop
test
or
and
mov
aaa
ds
mov
push
inc
xchg
in
mov
ds
jo
repz
adc
xchg
push
lods
push
in
xchg
add
cmp
push
add
cmc
pop
mov
out
shl
mov
dec
pop
add
cmp
xor
repnz
xchg
sbb
ror
sbb
pop
mov
push
dec
imul
xchg
es
cld
adc
dec
aaa
shl
ja
pop
add
sub
xchg
lods
and
inc
out
add
push
sbb
adc
sbb
xchg
aaa
imul
outs
test
dec
or
xor
ja
xchg
popf
addr16
icebp
adc
or
cmp
mov
popf
mov
or
bound
cmp
mov
ret
mov
cmp
or
bound
fwait
push
scas
icebp
test
lock
xor
mov
sbb
or
cmps
add
fs
into
or
int3
or
jp
sub
jmp
add
push
fwait
dec
mov
outs
popa
pop
test
push
enter
sbb
add
and
dec
mov
push
xor
ja
ins
je
push
and
or
mov
sub
cmc
(bad)
mov
mov
mov
sbb
shr
mov
sub
sbb
dec
popa
repnz
push
popf
leave
add
fist
lock
inc
cs
cli
fucomp
pusha
xchg
aas
add
dec
jae
xchg
adc
mov
or
and
fcom
xchg
add
push
jo
mov
out
mov
dec
add
cmp
loopne
shr
sbb
xor
push
push
lock
ror
add
leave
mov
je
and
push
sub
adc
icebp
ss
repnz
fadd
aaa
xchg
sub
jmp
fild
cmp
inc
cmps
ret
pop
dec
adc
movs
xchg
das
xchg
fcomp
and
push
xchg
retf
je
loope
mov
and
cmp
sbb
ds
ret
nop
or
xchg
sbb
push
dec
xchg
mov
adc
mov
mov
inc
xor
lea
add
and
in
cwde
mov
bound
push
jle
jmp
jmp
add
nop
mov
test
push
pop
sbb
dec
fbstp
mov
int3
add
adc
outs
and
test
inc
push
test
pop
stos
stc
cdq
test
call
arpl
jmp
inc
adc
imul
out
add
clc
ins
jo
ins
jle
or
push
lahf
rcr
ror
or
lods
xlat
mov
inc
pop
jb
adc
call
xor
nop
aam
arpl
mov
lea
enter
test
xchg
dec
push
pop
repnz
fwait
dec
mov
fsub
loop
in
xchg
js
inc
mov
jnp
add
pop
out
add
inc
(bad)
or
sti
dec
add
mov
stos
jge
pushf
xchg
pusha
add
mov
lods
or
inc
lea
sbb
data16
cmp
jne
lahf
shr
or
dec
in
cmps
pop
movd
push
call
fimul
hlt
popa
(bad)
sbb
int3
push
aad
rcr
movs
out
cmp
pushf
inc
nop
mov
jmp
inc
movs
inc
mov
popa
test
loop
test
popf
jbe
ja
mov
mov
cld
xor
sbb
jp
mov
cmp
pusha
scas
fadd
jo
ss
sahf
xchg
mov
jge
push
mov
(bad)
fidiv
in
call
and
sub
out
push
adc
ret
sub
xchg
out
add
pop
or
movs
shl
test
adc
mov
pop
pop
int3
jmp
inc
adc
pop
adc
nop
mov
sbb
push
shr
ss
adc
out
sbb
xor
push
cmp
sbb
cmp
(bad)
dec
out
outs
lods
push
cmp
imul
or
mov
cmp
xchg
in
and
inc
mov
xor
jmp
call
je
mul
pop
xchg
loopne
aam
or
and
sbb
push
shl
inc
dec
mov
dec
sti
add
test
(bad)
inc
push
hlt
pop
sub
popa
or
and
arpl
jne
add
outs
push
mov
mov
in
push
dec
inc
sbb
sbb
push
cmp
mov
div
mov
lea
adc
and
mov
stos
sbb
cmp
xor
add
xchg
je
lahf
push
or
xor
adc
mov
scas
arpl
mov
into
mov
xor
xor
pop
or
sar
and
fild
inc
pop
sub
mov
xlat
(bad)
add
jo
sbb
pop
add
lods
les
pop
inc
xchg
mov
or
call
push
jl
cdq
frstpm(287
lea
mov
cld
jg
stos
mov
addr16
xchg
je
xor
gs
pusha
add
mov
jmp
loopne
test
shl
xchg
pushf
mov
sub
add
xchg
add
mov
and
movs
mov
jnp
sbb
xor
or
and
sbb
push
or
neg
(bad)
clc
xor
aaa
inc
pop
shl
pop
mov
pop
addr16
js
mov
pushf
in
pushf
mov
jbe
call
xchg
out
sbb
mov
or
push
pop
loopne
cwde
push
pop
jo
dec
arpl
daa
mov
inc
imul
or
arpl
sbb
jmp
or
sbb
sbb
pop
nop
inc
sbb
or
not
hlt
sub
out
adc
inc
push
call
movs
stos
inc
add
mov
inc
push
mov
mov
jne
jmp
lods
test
mov
enter
adc
pushw
js
xchg
and
mov
jmp
nop
jmp
push
adc
fstp
(bad)
and
sub
sbb
bound
das
mov
(bad)
mov
push
xlat
sbb
jecxz
mov
and
inc
iret
mov
mov
add
ins
sub
pop
or
inc
movups
adc
movs
and
jns
sbb
call
add
test
jnp
outs
push
or
shl
aam
add
xchg
add
rol
shl
mov
pushf
sub
test
or
xchg
mov
cwde
inc
sbb
out
mov
adc
mov
push
or
mov
cmp
sub
mov
pop
jge
add
xchg
add
xchg
pop
pop
and
pop
repnz
(bad)
fsubr
cmp
or
sub
pop
fsub
or
mov
inc
pop
nop
ss
lock
fcomp
fst
xchg
clc
push
test
rcl
loopne
leave
mov
adc
push
sahf
xchg
mov
lea
pop
fist
mov
std
add
and
cmps
sbb
ret
xchg
mov
xchg
xor
sbb
ret
ja
adc
xchg
add
movs
cmp
sub
lock
jae
dec
arpl
test
push
lahf
idiv
pop
mov
cmp
imul
and
test
adc
add
push
cmp
dec
sub
aad
or
add
adc
mov
mov
push
push
popa
and
mov
mov
mov
push
retf
dec
and
cmp
int3
mov
push
push
test
xor
cmps
sub
push
cmps
lods
sub
jns
jo
lods
pop
mov
ret
xchg
shl
es
jo
pop
pop
push
inc
aam
add
pop
push
and
and
sbb
inc
jl
adc
cmps
mov
cmp
mul
js
xor
dec
add
add
xor
cmp
test
xchg
(bad)
(bad)
pop
xchg
and
(bad)
sbb
aam
data16
xor
out
test
mov
nop
dec
adc
sub
cmp
jb
and
cmp
and
push
cli
std
clc
inc
test
dec
or
test
xor
xor
pop
lock
or
mov
mov
add
pop
(bad)
les
rcl
inc
dec
fwait
sti
sbb
rcl
adc
adc
cmp
out
xchg
mov
dec
xchg
mov
and
pusha
(bad)
int3
cwde
cmp
mov
fisub
ret
dec
cmp
mov
mov
iret
sbb
mov
inc
mov
fistp
mov
pop
rcl
int3
mov
jnp
ret
adc
adc
(bad)
mov
mov
clc
inc
fcom
clc
sbb
shr
dec
(bad)
cwde
movs
cmp
sub
inc
push
jmp
(bad)
sbb
lods
pop
leave
xchg
push
xchg
sbb
daa
push
dec
int3
enter
shr
lds
ins
aas
mov
movs
push
jmp
into
ss
test
xchg
mov
aam
xchg
das
test
xchg
and
mov
mov
xchg
ret
pusha
loopne
stc
scas
ftst
adc
sbb
jae
ss
mov
pop
dec
and
mov
ret
inc
and
pop
imul
inc
add
rol
push
xor
push
sub
cmp
retf
mov
jno
stos
shl
sbb
add
cli
jmp
mov
scas
and
inc
loopne
mov
sbb
xor
jmp
and
sbb
fld
cmp
in
das
fst
ror
push
addr16
or
ret
sub
or
ss
adc
mov
push
xchg
fwait
test
or
dec
retf
cmp
push
jmp
mov
jne
xor
nop
bound
movs
scas
imul
shr
lods
scas
dec
lds
rol
push
pop
lock
jp
mov
fbstp
xlat
inc
adc
mov
dec
std
jle
push
sbb
jnp
and
and
xchg
or
sub
popa
cmp
fs
pop
cmp
cli
mov
pop
and
cmp
cdq
and
xlat
or
or
mov
push
xor
or
cmp
out
test
jne
mov
jg
outs
cld
mov
mov
mul
sub
push
push
loopne
jmp
sbb
je
pop
add
dec
hlt
ds
or
loopne
mov
and
addr16
and
fcmovne
or
and
ret
movs
push
and
cmp
aaa
(bad)
outs
arpl
aad
adc
and
sub
push
imul
jb
imul
push
shl
ds
loop
push
pop
or
cwde
mov
int3
jae
lock
addr16
call
dec
aas
data16
call
loope
jae
xchg
mov
pushf
mov
sub
ror
ja
imul
call
and
and
imul
adc
inc
xchg
cmp
mov
sbb
mov
pop
push
(bad)
addr16
fs
pop
and
and
mov
in
repz
call
sub
ins
push
fild
test
mov
adc
pop
lods
sub
mov
xor
(bad)
dec
pop
test
test
add
or
mov
es
pop
or
and
jb
jns
clc
clc
push
xchg
ins
sbb
(bad)
shr
mov
or
dec
or
ss
inc
bound
gs
mov
or
push
adc
sbb
mov
aaa
nop
push
ret
sbb
xchg
xor
int
nop
pop
adc
sbb
neg
(bad)
stos
in
xchg
mov
or
and
mov
adc
mov
or
repnz
add
push
or
add
or
mov
or
sbb
mov
cmp
mov
and
or
in
in
or
iret
xchg
or
mov
fdivr
lods
bound
div
icebp
mov
test
jecxz
sbb
out
cmp
out
ret
pop
ins
mov
adc
and
scas
push
or
lods
pushf
xchg
leave
xor
aam
add
add
inc
inc
test
das
push
in
in
ds
add
push
xchg
je
pop
inc
fbld
and
je
inc
test
(bad)
popa
(bad)
leave
mov
dec
or
sti
aam
cmps
mov
fdiv
(bad)
outs
push
jg
push
ins
movs
rcr
data16
add
clc
and
jo
mov
pop
rcr
xchg
mov
push
aaa
xlat
(bad)
cmps
mov
fimul
out
(bad)
cmc
ds
imul
sbb
pusha
adc
das
sbb
cmovg
push
sub
pop
push
push
inc
push
das
mov
mov
dec
iret
shr
or
xchg
mov
push
js
add
arpl
daa
jmp
ds
pop
adc
mov
sbb
(bad)
outs
gs
popa
sub
push
sbb
test
adc
ja
sbb
inc
jp
fs
enter
lahf
cld
cmp
in
bound
adc
cwde
or
fnstenv
cmp
fmul
xlat
cs
sub
nop
gs
cmp
adc
fiadd
fdiv
pop
fs
fld
xor
dec
adc
add
mov
aas
or
mov
push
ins
push
jbe
js
psllq
pop
add
add
movs
xchg
xchg
ret
ins
loope
daa
aaa
in
into
cs
push
pop
ins
pusha
sub
dec
cmp
and
out
xchg
daa
xchg
pop
js
cmp
je
cdq
fadd
adc
adc
sbb
pusha
sbb
mov
pop
dec
add
call
sub
xor
repnz
test
loope
pop
jle
into
mov
add
xor
js
movs
fisttp
and
outs
aas
and
cld
xor
adc
(bad)
push
and
and
(bad)
xchg
or
cmp
jne
ins
repnz
hlt
xor
and
mov
jbe
push
mov
in
mov
out
ins
bound
xor
cld
push
add
dec
jne
loopne
adc
sub
jl
sahf
dec
jp
clc
jo
imul
(bad)
dec
adc
jns
and
hlt
imul
pop
outs
stos
xchg
lock
call
xchg
call
add
push
loopne
movs
popf
xor
inc
(bad)
aam
add
aas
mov
inc
movs
xor
stc
ss
xor
ror
push
mov
fimul
aam
mov
jge
push
sub
adc
daa
lods
scas
test
fld
inc
pop
push
inc
in
(bad)
push
mov
fidiv
jb
mov
cmp
add
sub
mov
push
or
inc
sub
inc
mov
add
jle
hlt
jns
adc
data16
clc
add
in
ror
in
and
enter
in
nop
in
shl
fild
call
mov
push
pop
scas
xchg
loopne
xor
fild
cdq
inc
outs
inc
outs
inc
jae
fsub
loopne
call
sbb
jno
cmp
in
mov
mov
mov
inc
stos
add
push
popf
fstp
xor
in
out
retf
popf
outs
loope
pop
jne
cmp
fdiv
cmp
or
cmps
push
jp
push
cmp
xchg
ret
cmp
dec
sub
mov
adc
loopne
jne
mov
mov
loope
or
daa
das
add
xlat
fs
pop
dec
test
dec
or
push
lock
dec
popa
stc
je
cs
mov
rol
call
repz
fsubr
(bad)
mov
(bad)
pop
mov
inc
add
and
outs
sbb
pop
jo
inc
loopne
push
(bad)
inc
fdiv
std
cld
cmp
and
push
push
cld
xchg
repz
sub
add
and
xor
int
loopne
xor
fs
and
and
ins
adc
aam
and
and
jno
and
lock
and
fwait
pop
ins
jo
add
xchg
(bad)
jmp
adc
enter
or
inc
xchg
rcl
les
push
enter
sbb
enter
adc
and
pop
lahf
jl
sbb
lock
and
retf
in
imul
js
nop
wbinvd
cmp
xor
imul
rol
adc
xor
lods
loopne
sbb
bound
mov
jb
dec
ja
shr
cmp
xor
icebp
rcl
shl
in
inc
cs
shr
sub
mov
or
aam
add
add
add
add
rol
pushf
sbb
pop
repnz
and
shl
dec
es
call
test
loop
xor
and
lods
int3
and
sbb
or
add
and
aas
and
fmul
mov
dec
jnp
lea
mov
pop
mov
loopne
les
imul
sbb
push
pop
push
push
fdiv
enter
ret
mov
push
add
xor
mov
pop
mov
xchg
sbb
inc
push
xor
xchg
rcl
lock
ins
or
mov
and
sbb
rol
dec
jmp
inc
pop
rcl
dec
pop
cmc
lock
sub
fdivr
adc
in
jae
push
mov
jnp
add
leave
test
rol
xor
xchg
pop
into
bound
sbb
movs
mov
fcmovnbe
inc
sub
aaa
dec
in
pop
jmp
mul
or
pop
push
xchg
daa
or
push
test
sbb
test
add
and
pop
outs
popf
movs
mov
je
cmp
push
cwde
cmp
(bad)
mov
sub
call
add
pop
pop
pop
add
pop
mov
push
jg
js
ss
pop
jnp
loopne
mov
inc
in
lods
test
lahf
xlat
arpl
jb
push
pop
ins
lods
retf
xor
xor
add
ficom
jb
fcomp
cmp
add
mov
stos
in
and
arpl
lds
sub
pop
outs
sub
out
jge
lahf
push
add
add
ret
pop
out
dec
adc
(bad)
bound
ins
xchg
je
jb
add
aas
and
inc
nop
lea
mov
addr16
cmp
xchg
push
bswap
pop
retf
pop
int
ror
pop
leave
sub
mov
jmp
imul
and
mov
pop
outs
ja
retf
(bad)
inc
ins
mov
and
pop
or
pusha
push
bound
xchg
fistp
fld
xchg
stos
dec
dec
fcomp
aad
sbb
add
mov
lds
jne
jbe
sbb
fld
or
cmp
jge
pop
cmp
pop
xchg
ret
mov
jp
aam
adc
jg
dec
mov
xlat
test
jp
addr16
and
xchg
retf
mov
clc
aad
or
mov
push
inc
mov
sub
daa
xor
push
mov
loope
sbb
ror
add
sbb
loopne
loopne
add
mov
add
pop
(bad)
jnp
inc
push
mov
call
fsubr
fcomp
inc
ins
fidiv
and
setle
push
push
je
inc
jmp
adc
jmp
inc
ror
push
(bad)
jle
arpl
xchg
mov
dec
cmps
outs
adc
fist
push
shl
fs
setne
add
mov
adc
xchg
push
or
xlat
shl
xor
adc
adc
fistp
pop
test
fild
pop
ret
pop
retf
jecxz
add
adc
mov
add
mov
or
jecxz
mov
xchg
mov
leave
out
mov
popf
adc
and
adc
rol
jno
cmp
and
dec
mov
add
sbb
cmp
js
mov
adc
add
hlt
mov
and
sbb
cwde
fs
pushw
xor
fninit
push
xchg
outs
mov
jno
or
add
sbb
xor
sbb
out
fisub
mov
popa
loope
jle
sbb
mov
mov
mov
je
ja
enter
lods
(bad)
gs
pop
loopne
aam
pop
jge
ficom
lock
gs
push
fdivr
inc
mov
pop
or
in
dec
fadd
cdq
fdivr
push
pusha
mov
fdiv
aam
cdq
in
pop
aam
(bad)
js
add
clc
mov
cmp
cmps
pop
inc
(bad)
or
push
push
pop
loopne
adc
movs
and
in
inc
pop
jne
push
pop
pop
fisub
fwait
sbb
or
mov
stos
in
or
add
test
sahf
lods
cmp
mov
in
fsubr
pop
cmp
dec
cmp
inc
int3
or
inc
sbb
aaa
sub
jl
ret
push
and
dec
int3
mov
inc
jg
inc
xor
arpl
adc
mov
mov
and
daa
lods
pop
int3
dec
daa
and
push
mov
xchg
xor
fisub
push
(bad)
ss
or
mov
scas
cmc
mov
or
daa
lock
call
mov
movs
div
out
lods
fimul
push
mov
mov
pop
or
in
dec
or
fadd
add
xchg
fidiv
inc
lds
add
cmp
sub
push
add
pop
jae
(bad)
dec
dec
(bad)
or
add
add
xchg
sub
push
fsubrp
inc
push
inc
clc
mov
adc
lea
add
add
or
push
and
fstp
add
stc
or
sbb
jns
fst
push
sbb
add
adc
jmp
scas
dec
add
or
repz
dec
xor
aam
adc
mov
imul
jle
inc
stos
add
add
push
pop
inc
xor
add
inc
push
mov
mov
inc
push
adc
shl
adc
sub
sbb
repnz
sti
xor
mov
push
jns
or
or
loope
xor
push
mov
sbb
scas
daa
addr16
add
push
inc
leave
or
mov
or
dec
leave
pop
loopne
fld
leave
data16
push
fdiv
mov
je
mov
or
pusha
scas
in
data16
xchg
xor
jmp
mov
and
add
inc
sub
push
add
push
leave
js
jb
arpl
inc
push
aaa
pop
jae
adc
call
js
popa
adc
fist
dec
popa
ins
adc
mov
aas
push
or
and
pop
mov
dec
test
loopne
or
test
or
mov
out
ins
mov
or
jle
push
mov
dec
fisub
jnp
retf
adc
and
xchg
sbb
aaa
mov
cmp
xchg
xchg
jne
loopne
cs
into
iret
movs
pop
xor
cmp
std
pusha
cmp
pop
test
pop
mov
aam
dec
test
or
jb
mov
mov
and
adc
mov
in
fiadd
(bad)
adc
dec
push
cmp
cs
out
xchg
clc
add
mov
pop
sub
mov
loopne
jne
adc
pop
lea
jnp
pop
xchg
or
cmp
dec
pop
fcomp
dec
repnz
jecxz
js
push
mov
or
ret
scas
sub
xor
add
inc
shr
inc
call
adc
or
push
add
inc
jno
in
ins
pop
dec
mov
add
xor
xchg
or
out
imul
lea
mov
sub
fld
inc
lea
xchg
push
inc
shl
pop
pop
push
cmp
dec
call
fimul
ja
push
adc
sub
add
xor
cli
mov
push
lods
jge
pop
imul
(bad)
and
shl
das
mul
retf
inc
and
repnz
cmp
dec
pop
nop
jbe
xor
ror
lods
xchg
or
and
inc
and
fmulp
and
push
out
add
arpl
mov
mov
fidivr
enter
xchg
pop
jmp
jne
mov
and
jb
loop
pop
push
push
xchg
and
retw
add
inc
add
sbb
xor
and
sbb
scas
sbb
or
jne
add
dec
xchg
pushf
mov
je
jmp
or
(bad)
jne
sbb
mov
adc
push
add
imul
test
and
add
fisttp
jle
sub
cmp
push
movs
adc
fcom
inc
sbb
and
test
mov
mov
pop
cdq
jne
and
psraw
daa
add
stc
sub
inc
out
dec
cmc
and
(bad)
enter
ret
loope
mov
ror
iret
dec
out
jns
jecxz
(bad)
cwde
call
out
and
adc
js
mov
popf
or
push
sub
mov
int
adc
les
dec
int3
rol
cmp
aam
fmul
cmp
nop
loopne
call
inc
lock
or
xchg
das
or
mov
leave
adc
ins
pop
and
xchg
push
lahf
call
fcomip
ficom
add
(bad)
retf
sbb
in
movs
and
rol
data16
hlt
mul
jmp
xchg
in
add
fsub
jg
and
cmp
and
and
cmp
shr
sbb
les
jmp
imul
rcr
stc
xor
std
scas
fldenv
mov
cmp
aas
mov
fadd
popf
xchg
pusha
pusha
jns
pop
sysexit
js
mov
icebp
xchg
dec
and
and
js
and
adc
les
div
add
xchg
jg
fisub
les
push
in
or
sti
lahf
xor
pop
jmp
jl
mov
xor
add
test
pop
cmp
call
push
and
addr16
add
popa
and
ret
adc
pop
add
jne
mov
test
ins
(bad)
mov
xlat
je
out
dec
mov
mov
cdq
cmp
push
test
fcom
mov
sbb
ret
mov
fcomp
icebp
loopne
or
mov
and
sbb
or
int
pop
xor
ror
mov
jns
jmp
dec
dec
test
mov
push
add
lds
or
ja
in
xchg
jne
in
jp
jo
ror
out
(bad)
cmp
or
sbb
pushf
pop
ins
ins
ror
jb
and
lock
cmp
leave
xchg
dec
in
call
xor
in
xchg
pushf
sbb
in
push
and
js
xor
leave
xchg
fmul
inc
aam
aam
xchg
pushf
sbb
test
in
das
data16
out
mov
mov
inc
pop
pop
das
cmp
les
outs
and
adc
mov
inc
or
xchg
pop
gs
xchg
inc
adc
add
int3
push
and
push
xor
xchg
aaa
repz
inc
dec
fcmove
shl
jp
cld
or
mov
push
scas
pop
in
mov
sbb
int3
or
push
sub
cmp
sub
loopne
jge
dec
inc
sahf
and
imul
adc
mov
and
mov
dec
ds
add
fadd
jae
adc
add
dec
movs
call
mov
lock
pop
js
and
pusha
aad
sbb
push
ins
shr
dec
sti
cmp
je
js
inc
xchg
push
push
ss
pop
add
sub
fs
add
inc
adc
repz
inc
imul
pop
mov
imul
xchg
cmps
std
in
sahf
adc
gs
jo
inc
dec
repz
add
jns
push
js
hlt
sbb
add
int
jmp
test
jae
imul
and
nop
test
je
add
enter
cmc
jbe
pop
jno
lock
lea
pusha
std
movs
mov
(bad)
fwait
neg
outs
ins
fist
je
adc
adc
push
(bad)
fnsave
push
and
hlt
sub
xor
push
imul
movs
or
daa
sbb
lods
iret
xor
shl
or
or
mov
push
fld
cmp
xor
leave
daa
test
sti
enter
sbb
daa
ret
or
or
add
sbb
sbb
out
lods
mov
push
mov
adc
pop
lahf
ja
mov
js
or
ficomp
fnstsw
cmp
addr16
ret
jne
mov
nop
pusha
(bad)
lock
and
aad
sbb
ds
xor
jg
add
shl
mov
jg
ffree
mov
test
sub
and
cs
or
outs
imul
aas
sbb
sbb
out
mov
or
or
sbb
dec
jno
bound
sar
ja
dec
jne
arpl
je
adc
add
dec
adc
fs
mov
and
les
ja
gs
mov
fimul
pop
add
setbe
scas
pop
inc
mov
add
lods
ss
push
jp
aas
push
and
push
in
cs
sub
xchg
div
loop
inc
inc
outs
in
jge
mov
ins
shl
inc
test
mov
push
or
scas
imul
mov
pop
sbb
or
iret
mov
pop
popa
dec
inc
(bad)
mov
enter
in
push
mov
cmp
or
adc
sub
test
das
mov
(bad)
(bad)
clc
or
repnz
cmps
pop
lock
push
push
pop
jb
adc
out
sub
add
aas
call
add
leave
add
sti
sub
cmp
push
dec
sti
in
repnz
sti
xchg
inc
enter
mov
cmp
test
sti
cmp
mov
adc
add
call
in
add
sti
add
test
movs
mov
std
cld
lds
adc
push
jg
movs
add
sub
push
movs
sbb
lock
rol
pop
imul
xchg
xchg
loopne
into
cmp
arpl
in
and
loopne
mov
daa
loopne
sahf
in
mov
sbb
(bad)
mov
outs
pop
arpl
push
mov
loop
(bad)
jmp
push
test
mov
mov
fiadd
pop
inc
inc
pop
(bad)
mov
xchg
dec
cs
inc
addr16
push
or
sub
mov
rcr
fcom
mov
cmp
mov
pop
push
dec
arpl
dec
clc
inc
xor
sbb
mov
lea
adc
nop
add
lock
push
dec
in
jns
(bad)
ds
mov
jp
jl
sbb
out
dec
pusha
ins
ret
jne
push
sbb
mov
call
add
adc
inc
dec
sbb
call
pop
ror
pusha
leave
dec
(bad)
add
jecxz
dec
pop
dec
shr
mov
jne
mov
call
ins
in
cmp
into
ja
and
movs
and
aaa
dec
xor
pop
pop
(bad)
cs
pop
push
(bad)
in
test
aaa
and
xlat
loope
sbb
cdq
xchg
in
call
pop
sbb
sbb
test
cmp
loopne
cmp
pop
add
pop
lea
pop
sub
jno
rcr
push
jae
and
stc
or
dec
push
jbe
ja
pop
dec
dec
jno
or
das
cdq
shr
adc
add
mov
pusha
mov
or
add
xchg
push
or
je
or
pop
mov
sub
rcr
pop
or
jbe
push
add
or
push
jmp
or
loopne
cmp
or
aam
add
dec
adc
and
pop
jb
and
push
xor
outs
pop
bound
mov
movs
dec
pop
cmp
out
jo
mov
sbb
and
sub
daa
xchg
sub
fwait
or
cmp
daa
pop
outs
push
jo
addr16
daa
clc
retf
add
inc
sub
push
and
rol
inc
jg
push
scas
inc
jle
dec
in
in
dec
add
stos
popa
stos
push
add
add
xor
sub
call
push
inc
add
add
outs
mov
push
pop
jg
shl
ins
sbb
daa
les
test
repz
rcl
dec
mov
or
adc
mov
jno
pop
cmp
(bad)
cld
adc
fs
push
mov
test
je
out
or
jecxz
adc
test
cmps
dec
call
or
adc
aad
ja
scas
xor
test
add
and
popa
sbb
add
lds
fld
ficomp
push
stc
or
in
fldenv
jmp
sub
enter
mov
pop
mov
push
cmps
hlt
sbb
pusha
push
lock
add
dec
pop
test
and
mov
lods
and
hlt
adc
xchg
(bad)
push
or
or
mov
mov
pop
popf
shl
jns
push
retf
xor
xor
jo
icebp
dec
cdq
jmp
add
inc
mov
retf
sbb
add
or
dec
push
inc
ficomp
xor
fwait
pop
dec
jno
into
push
adc
or
pop
push
adc
pop
xor
sub
pop
aas
pop
outs
adc
inc
repnz
cmps
dec
adc
mov
or
(bad)
pop
es
ins
mov
push
fisttp
or
cwde
movzx
dec
icebp
cld
cmp
sub
mov
add
ret
sub
fisubr
lods
xchg
out
arpl
xor
sub
cmp
cmp
mov
pop
or
mov
test
push
push
call
adc
xchg
popa
push
dec
fdiv
add
xor
std
or
or
xor
mov
mov
xor
jbe
mov
sbb
jne
inc
ret
lock
lods
lahf
mov
addr16
es
cs
inc
shr
or
and
ficom
aas
and
adc
das
addr16
mov
xor
lahf
pop
je
(bad)
dec
repz
dec
movs
out
sub
or
or
sub
xor
sbb
and
hlt
test
loope
dec
sbb
xor
or
(bad)
jg
shl
pop
and
(bad)
lock
cmp
(bad)
push
ret
and
es
rol
xlat
pop
adc
add
push
ret
sub
add
or
jg
mov
sub
inc
pop
je
sbb
ficom
push
jge
or
sbb
push
scas
mov
sbb
test
push
push
push
and
dec
push
retf
and
ret
call
pushf
mov
fbld
pusha
push
jge
or
and
adc
xchg
cmp
pop
sbb
adc
inc
sahf
adc
and
dec
mov
out
or
scas
xor
push
int3
test
xchg
in
pop
xor
fld
dec
xchg
das
movs
mov
je
test
lock
and
je
or
or
add
div
or
add
xchg
ss
lods
push
js
leave
xchg
add
pop
call
inc
data16
in
jmp
add
xor
sub
jns
in
ss
inc
adc
add
and
push
test
push
dec
cmp
lods
add
dec
mov
leave
sbb
addr16
test
and
mov
adc
imul
cmp
add
fadd
jne
adc
and
jb
inc
adc
pop
adc
cmp
stos
(bad)
das
daa
fadd
cmp
daa
sub
dec
loopne
sub
dec
pop
retf
sbb
add
adc
mov
and
or
cmp
jge
adc
(bad)
lahf
xor
dec
ret
add
ret
mov
jno
fisub
jns
pop
sbb
repnz
adc
rol
mov
sub
shl
aam
or
int3
cmp
les
in
pop
xor
sbb
in
mov
(bad)
or
pop
pop
mov
and
out
pop
sti
mov
lock
out
cld
add
or
pusha
xor
pop
add
outs
mov
ins
cmps
jo
repnz
jns
gs
add
aam
adc
fiadd
push
repnz
rcl
adc
mov
sub
nop
xor
out
jg
aam
add
daa
test
or
js
mov
outs
retf
push
adc
pop
js
fs
or
and
or
fmul
enter
push
xchg
imul
call
mov
adc
aad
lods
aam
(bad)
sbb
sar
cld
(bad)
ins
lods
push
adc
(bad)
adc
addr16
adc
xor
mov
lds
rcr
jp
adc
mov
fcom
xor
and
adc
inc
(bad)
adc
jmp
cmp
arpl
sub
daa
mov
mov
rcr
ja
sbb
adc
idiv
push
ret
in
mov
test
push
shl
jg
pop
dec
cmp
jle
push
in
fmul
sbb
rol
fisttp
inc
jge
jmp
cwde
dec
rdmsr
mov
mov
xchg
lock
call
fwait
jno
add
(bad)
sahf
ret
pop
dec
xor
xchg
xor
or
jb
pop
clc
call
mov
cmp
lea
mov
inc
push
iret
mov
call
sbb
xchg
std
or
movs
xor
push
adc
xchg
push
xchg
push
sbb
aad
dec
clc
bound
out
adc
cmp
dec
pop
pop
adc
pop
loopne
pop
xchg
adc
dec
push
push
dec
add
mov
mov
sbb
mov
cmp
outs
mov
pop
loopne
pop
xchg
or
sbb
inc
add
cli
add
mov
jmp
inc
inc
cdq
nop
cmps
pop
adc
add
test
pop
add
cmp
aas
add
adc
gs
and
add
les
jmp
in
mov
push
add
inc
adc
pop
or
inc
loope
sbb
add
retf
mov
dec
add
push
pop
shl
adc
sbb
xchg
in
xchg
mov
sbb
adc
inc
dec
les
mov
add
mov
and
sbb
cmp
push
add
add
(bad)
cmps
cmc
int3
adc
jnp
sbb
mov
mov
or
adc
adc
push
adc
pop
aas
into
out
inc
retf
into
dec
sti
pusha
add
adc
mov
mov
sub
movs
and
in
out
mov
scas
shl
out
xor
adc
loopne
mov
xchg
adc
shr
mov
mov
out
clc
sub
xor
adc
pop
mov
xor
or
call
clc
adc
jb
fcomp
jae
pop
or
es
sbb
cmps
(bad)
jl
inc
loope
dec
push
pop
inc
push
mov
xchg
imul
mov
rol
mov
jle
ds
mov
xor
out
retf
es
dec
dec
pop
ret
inc
stos
jl
cmp
dec
fimul
mov
in
ds
mov
pusha
pusha
(bad)
xchg
add
aad
ja
cmps
pop
and
lods
std
jle
cmps
inc
push
rol
mov
mov
inc
mov
pop
inc
add
ss
mov
xor
(bad)
pop
shr
movs
add
push
frstor
mov
sbb
movs
inc
and
ss
out
out
add
jl
loop
out
retf
xchg
sbb
mov
cmps
movs
mov
jge
or
rcl
push
add
mov
and
and
inc
adc
lea
push
xchg
cmp
dec
or
call
cli
xchg
loop
mov
test
xchg
neg
sub
out
fstp
pusha
movs
ins
bound
int3
mov
push
rcr
pop
dec
and
or
sbb
add
shl
psrad
clc
push
and
and
inc
je
push
sbb
fistp
sbb
and
or
scas
add
ins
retf
ins
inc
stc
xchg
push
push
adc
sbb
and
add
fst
movs
push
sbb
shl
mov
adc
rcr
je
push
sbb
xchg
(bad)
ficom
cmp
vphadddq
fs
xchg
rcr
mov
mov
das
frstor
sbb
mov
add
and
dec
ds
inc
xadd
sbb
push
fisubr
adc
popf
js
mov
cwde
jb
mov
mov
pop
mov
int3
xchg
mov
lahf
mov
jae
lock
xor
jne
data16
repz
add
nop
das
adc
std
aaa
push
sbb
jecxz
inc
add
inc
mov
les
add
ret
push
xor
sbb
adc
pop
call
xor
leave
pop
sub
jo
jp
js
adc
inc
and
xchg
repnz
inc
inc
sbb
dec
test
pop
call
pop
sbb
aad
sub
sbb
in
push
and
cmp
xor
inc
add
pop
or
(bad)
xlat
sbb
add
inc
or
sbb
(bad)
pop
adc
pop
push
or
mov
dec
inc
xchg
mov
add
mov
enter
or
sbb
push
pop
repz
in
in
imul
ins
adc
jle
pop
movs
in
ins
xchg
cmp
jo
dec
xchg
sbb
mov
cmp
mov
ds
ja
jo
add
arpl
sbb
lock
xchg
pop
cmp
or
sub
leave
push
js
sbb
test
idiv
jo
aad
pop
push
fbstp
mov
les
or
jb
or
mov
or
sub
nop
pusha
pop
popa
push
test
push
mov
mov
ins
xchg
mov
shr
ss
mov
ret
sbb
nop
pop
fnstsw
(bad)
jg
loope
sbb
or
add
mov
jb
and
mov
and
inc
sbb
sbb
mov
dec
add
(bad)
lds
test
cmp
or
fsubr
xor
jmp
(bad)
(bad)
xor
or
lahf
retf
rcr
lods
fbstp
add
sbb
out
jne
inc
jne
loopne
popa
or
dec
xchg
movs
and
push
xchg
nop
or
(bad)
fs
xchg
(bad)
in
and
cmp
add
rcl
xor
push
shl
das
ss
mov
adc
and
inc
add
sbb
xchg
mov
pop
(bad)
sub
mov
and
pcmpeqw
cwde
jmp
or
jp
gs
les
repz
sub
inc
sysret
mov
or
inc
mov
ds
jb
inc
xor
inc
jge
test
mov
jo
push
ret
enter
or
or
push
adc
mov
pop
add
cld
or
or
pop
push
test
mov
jo
dec
mov
hlt
push
cmp
pushf
or
pop
ret
jmp
in
test
adc
out
dec
lock
popa
repz
inc
fistp
inc
shl
(bad)
fnstsw
pop
dec
adc
imul
sbb
loopne
ret
cmp
adc
mov
sbb
jg
jecxz
xor
rcl
les
loopne
stos
daa
push
sti
pop
cmp
div
cmp
add
or
mov
adc
sahf
mov
lods
iret
(bad)
or
rcl
je
fld
push
sbb
jb
mov
xor
in
xor
cmovge
gs
loope
enter
mov
movs
iret
sti
xor
or
ins
sbb
mov
in
cdq
xchg
ret
and
or
cmp
adc
fsubr
adc
sbb
retf
popa
jmp
test
jb
or
xchg
test
enter
jle
adc
add
jno
cmp
test
add
aas
inc
sbb
ret
mov
jl
or
stos
xchg
mov
xor
push
mov
out
cs
data16
daa
aaa
cmp
or
inc
jp
xor
aaa
dec
xchg
dec
jmp
mov
or
sub
sti
mov
pop
pop
adc
outs
es
adc
inc
cdq
jg
lods
or
dec
daa
push
mov
sub
xchg
xor
xor
and
cmp
add
lods
and
xor
or
repnz
cmc
arpl
outs
jbe
inc
imul
and
nop
jo
popa
push
rol
jns
in
add
or
out
inc
adc
mov
lds
add
mov
push
cmp
push
mov
inc
or
and
push
nop
loop
cdq
fld
sbb
pusha
rcr
dec
xchg
loope
shl
mov
push
loop
jbe
cs
adc
jg
sub
ins
mov
inc
data16
dec
fist
sbb
xlat
add
and
xlat
push
into
or
sbb
test
xchg
push
xchg
push
rcr
jo
push
lea
cmp
jns
sbb
(bad)
pop
mov
popa
or
jb
mov
mov
cmp
jne
sbb
jno
neg
push
or
test
aas
xor
pusha
dec
and
scas
dec
pop
push
and
lods
sub
push
jne
push
mov
pop
sub
fadd
jne
popf
jle
mov
jmp
mov
pushf
sub
cmp
repnz
mov
clc
(bad)
add
push
fwait
xchg
scas
pop
loopne
mov
mov
push
es
rcr
sbb
stos
and
sbb
bound
cmp
sbb
xor
jne
xchg
ror
sub
add
xchg
cmp
mov
int
daa
imul
lea
ret
xor
loope
push
outs
sub
jmp
and
push
inc
push
repz
push
and
aam
(bad)
jmp
jne
test
loopne
(bad)
dec
movs
imul
test
mov
lock
dec
mov
dec
dec
stos
cmp
cmp
adc
arpl
sub
cld
js
add
cmp
sbb
dec
std
add
call
aam
les
rol
sbb
adc
pop
pop
or
mov
sbb
push
in
mov
adc
ret
cdq
std
cmp
arpl
shr
and
fcmovbe
sbb
in
and
inc
pop
fprem
or
xchg
sbb
adc
adc
jne
cmp
cmc
push
cwde
clc
cwde
imul
mov
stos
push
and
int3
in
in
inc
dec
pop
and
out
or
jnp
(bad)
and
add
(bad)
xchg
rcr
pop
test
or
sub
mov
outs
cmc
push
aam
fst
lds
dec
inc
jbe
es
pop
shl
jge
push
dec
xchg
cmp
icebp
mov
add
mov
add
shl
adc
(bad)
rcl
pop
dec
enter
inc
or
mov
mov
ins
loopne
add
cmp
dec
mov
imul
xchg
cdq
inc
mov
mov
add
adc
mov
xor
xor
loopne
sub
cmp
(bad)
aaa
or
popf
xor
dec
fs
push
sub
mov
mov
mov
bound
cs
pushf
mov
nop
jne
je
loop
je
loopne
xchg
mov
add
and
test
mov
mov
pop
call
imul
int3
dec
in
mov
jge
int3
lock
mov
cld
dec
pop
mov
sbb
jmp
(bad)
pop
xlat
adc
adc
movhps
pop
dec
fist
or
ror
ret
mov
pop
call
sbb
jmp
inc
mov
and
js
sbb
in
bound
sti
jne
and
cdq
sub
xor
sub
mov
or
in
mov
or
adc
repz
add
gs
call
movs
sbb
jns
dec
mov
or
movs
xor
xchg
fmul
nop
fmul
adc
mov
xor
inc
cld
adc
xor
hlt
or
sbb
and
inc
sub
mov
push
sbb
dec
gs
sub
xchg
add
push
int3
jo
nop
retf
js
test
add
sbb
or
inc
mov
add
push
movs
xor
test
sbb
fcomp
mov
nop
retf
cwde
and
sub
lods
sub
or
test
dec
cmps
ins
cmps
push
cmp
movs
xor
adc
adc
pop
imul
push
mov
fbld
stc
mov
sbb
sub
sub
inc
sbb
xor
sub
inc
into
ins
sbb
cmp
and
fild
pop
inc
dec
inc
jae
xchg
cmp
inc
and
std
(bad)
push
push
inc
dec
outs
arpl
pop
sbb
dec
jae
adc
inc
pop
arpl
jae
fcmovnu
imul
sbb
dec
pop
dec
ret
lods
(bad)
popa
call
jne
add
inc
jb
popa
dec
call
bound
add
fs
stc
add
inc
xor
js
cmp
pop
pusha
mov
outs
addr16
popf
outs
sub
jae
cmp
or
pop
outs
xor
mov
loope
inc
pop
outs
ins
jmp
imul
add
out
pop
shl
pop
cwde
ins
std
push
mov
pcmpeqb
jae
jne
sub
inc
dec
retf
add
pusha
in
ins
sbb
push
call
mov
mov
imul
les
test
fcom
ficom
jbe
pop
cs
outs
inc
cmps
psrlq
nop
test
or
neg
cwde
push
sbb
sbb
pop
jmp
out
jns
mov
dec
add
pop
xchg
cmp
imul
sub
mov
xor
cdq
and
nop
lahf
sub
inc
xchg
or
pop
mov
xchg
cmp
lea
jne
pop
dec
outs
in
cmp
aas
push
gs
mov
stos
add
push
popa
je
in
or
push
data16
or
ins
popa
ret
dec
add
fild
mov
fistp
outs
outs
sbb
sub
(bad)
data16
scas
div
jne
push
shl
movs
mov
mov
sbb
jp
push
or
sbb
xchg
daa
jbe
ficom
add
cmp
mov
cwde
(bad)
(bad)
test
mov
jb
add
repnz
xor
repnz
add
add
enter
daa
lahf
push
adc
cmp
cli
cmp
movs
hlt
mov
scas
loop
mov
inc
mov
and
inc
cmp
dec
and
cmps
xchg
ja
mov
dec
sub
(bad)
aaa
adc
mov
cmp
push
rol
push
mov
mov
push
or
add
loopne
shl
add
or
(bad)
wbinvd
mov
or
add
ins
movs
mov
xchg
in
add
in
or
jae
add
ins
sbb
or
sbb
fcom
jo
jle
lea
aad
test
ret
adc
and
cmp
mov
xor
pop
aas
sbb
adc
lock
ss
call
cmp
pop
in
lar
push
cmp
popa
pop
adc
add
pop
cmp
add
(bad)
pop
xor
test
push
adc
add
shr
dec
jmp
push
jp
adc
gs
sub
inc
pop
add
dec
fwait
and
cmp
jbe
xlat
test
ror
mov
inc
retf
and
mov
sub
jo
sbb
out
imul
add
sbb
adc
cmp
pop
xor
jno
call
add
jge
push
xor
and
mov
cld
das
lea
cmp
adc
jo
rcr
or
str
jbe
push
cwde
xlat
jmp
adc
adc
out
lods
or
das
add
jb
pop
out
mov
aad
nop
popa
sub
test
jno
pop
ja
stos
mov
xchg
cld
cmps
add
push
sub
push
ret
jl
and
or
mov
mov
pop
fs
push
lahf
jnp
cmp
and
sub
pop
cld
or
es
pop
dec
dec
push
cdq
dec
ud2
ret
retf
scas
xor
sub
or
loopne
mov
das
jmp
nop
test
mov
mov
ret
mov
pop
(bad)
mul
or
out
push
pop
pop
jmp
inc
sbb
mov
movs
(bad)
sbb
mov
xchg
arpl
test
or
fld
mov
pop
xor
add
test
addr16
pop
loopne
or
cmps
pop
pop
rol
(bad)
mov
and
shl
sbb
sbb
and
adc
mov
imul
push
fcom
inc
adc
clc
fwait
and
and
push
es
pushf
hlt
dec
jecxz
lods
pop
loope
xor
and
call
jo
es
and
ret
jbe
stos
jb
mov
lock
cmovs
cmp
mov
addr16
out
rcl
pop
shl
enter
jno
and
leave
dec
(bad)
lock
dec
fiadd
pop
ror
xchg
push
or
xchg
mov
mov
sub
js
mov
aas
outs
push
ss
(bad)
cmp
sub
push
mov
movs
gs
mov
or
mov
adc
xchg
fsub
or
push
out
rol
or
mov
sbb
call
xor
push
dec
xchg
xchg
xor
mov
push
or
xor
push
mov
jl
iret
xor
xor
dec
test
mov
out
adc
mov
mov
or
sub
mov
hlt
pop
dec
mov
dec
arpl
or
and
xor
sti
mov
mul
or
inc
cmp
ror
adc
fs
add
add
dec
mov
adc
dec
cs
xor
cmps
pop
daa
and
push
jae
(bad)
fcomp
xor
jmp
cwde
add
sub
push
jo
push
xchg
inc
cmp
pop
dec
push
inc
add
lds
loopne
dec
xor
or
icebp
pop
test
mov
fiadd
jl
adc
or
xor
add
add
push
mov
cmp
lock
or
xlat
mov
push
inc
add
pop
xor
cmp
aad
add
jmp
bound
std
cmp
and
ins
ret
add
jne
dec
cmp
loop
out
repz
call
dec
into
call
mov
out
mov
fldenv
adc
jmp
xchg
fistp
lock
cdq
mov
push
lahf
arpl
mov
in
dec
and
rol
dec
das
jmp
in
jae
cmps
dec
mov
cmp
jmp
or
cmp
jne
inc
mov
jmp
icebp
xchg
or
inc
dec
jne
mov
test
mov
mov
pop
or
cwde
mov
test
mov
cmp
mov
inc
cli
mov
hlt
ja
xchg
sub
lea
and
enter
or
add
icebp
sbb
shl
ret
jecxz
push
rcl
add
imul
movs
and
pop
and
mov
fist
imul
loope
inc
iret
pop
or
or
cmp
or
pop
mov
loope
xor
xor
inc
adc
adc
jmp
cdq
cdq
iret
mov
cmp
das
sub
inc
clc
sub
push
popf
fcomp
adc
jle
icebp
inc
or
adc
ss
and
or
cmp
xchg
clc
(bad)
and
sbb
es
pop
out
inc
push
fcmovb
xor
imul
in
loope
or
push
add
cmp
mov
inc
push
enter
mov
retf
and
dec
lahf
inc
into
cmps
mov
fisub
sub
sub
add
dec
push
xchg
cmp
or
ror
repz
test
xchg
xor
imul
jl
inc
sbb
(bad)
stos
and
pop
and
ds
jp
dec
call
dec
in
call
inc
sub
sbb
nop
jmp
sbb
add
xchg
out
jge
inc
or
or
fistp
ja
sar
push
add
sub
jb
add
or
jmp
rol
jg
sbb
add
and
dec
in
retf
add
jmp
in
jb
punpckhwd
mov
pop
adc
add
sti
fadd
push
fsub
add
je
(bad)
jmp
pop
xor
enter
dec
jb
dec
cmp
call
outs
sub
mov
fsub
ja
scas
punpcklbw
shr
(bad)
aaa
loopne
jo
xor
push
leave
adc
inc
stos
pop
xchg
push
sbb
dec
push
push
dec
adc
xor
mov
add
scas
sub
and
cld
pop
test
add
adc
add
in
jl
sub
sbb
mov
xor
daa
cmp
stos
mov
lock
test
cmovbe
push
sbb
sbb
mov
inc
sbb
jg
fwait
rol
out
push
aas
cmp
jl
cmp
sub
inc
stos
push
inc
pop
mov
sub
or
jb
and
add
and
or
and
or
or
push
push
adc
cmp
pusha
jmp
movs
mov
popf
dec
and
ret
mov
cmp
jae
out
ins
jge
dec
inc
inc
dec
ror
dec
dec
dec
(bad)
call
scas
push
push
push
xchg
pop
pop
pop
popa
bound
gs
imul
jo
das
mov
jno
jne
ja
jns
cmps
ds
mov
adc
psraw
sub
jl
sub
jl
xor
dec
push
sbb
cli
(bad)
dec
jle
add
sub
push
mov
sbb
fild
adc
adc
and
hlt
test
push
mov
jne
movs
cmp
hlt
hlt
in
call
dec
sbb
push
cld
mov
pop
push
dec
inc
push
mov
pop
sub
dec
aaa
xchg
retf
dec
adc
and
pop
bound
sub
hlt
or
lahf
or
sbb
xchg
and
xchg
pop
fld
push
cmp
pop
js
cli
loopne
dec
add
and
es
xor
mov
push
or
scas
je
and
mov
lea
push
in
dec
mov
clc
mov
and
push
das
adc
mov
and
enter
jg
push
in
in
sub
fld
inc
jne
add
dec
leave
sbb
and
mov
popf
daa
or
cwde
nop
add
sub
add
mov
mov
pop
mov
xchg
and
or
loopne
cmps
icebp
xor
add
imul
(bad)
lods
dec
jne
and
push
dec
inc
lods
and
push
adc
push
push
adc
add
arpl
jle
mov
ss
push
pop
gs
mov
loopne
inc
or
jg
add
dec
push
mov
fild
pop
pop
sbb
fldcw
ret
nop
cmp
mov
pop
add
bound
outs
push
adc
sub
daa
int
rol
cmps
and
pop
imul
aas
cmp
pop
rol
xor
push
jns
push
dec
pop
movs
xchg
dec
jne
mov
jmp
mov
test
mov
pop
or
push
mov
pop
std
mov
daa
xchg
lods
loopne
push
sbb
jl
and
out
adc
mov
xchg
lds
pop
in
movs
jmp
pushf
push
fsub
test
iret
jg
mov
pusha
or
mov
mov
or
stc
xchg
mov
or
sbb
stos
out
mov
mov
mov
loop
sbb
fcomp
pop
adc
sub
push
jmp
pop
mov
shr
leave
xchg
push
push
mov
xor
and
and
test
ret
call
adc
adc
out
dec
sub
mov
cdq
fs
in
in
outs
dec
adc
(bad)
push
lods
cmp
jae
aaa
add
jmp
pop
mov
jmp
test
mov
inc
mov
daa
sub
scas
adc
add
aas
or
stc
xchg
scas
jns
and
ror
jmp
push
or
push
push
inc
aad
cwde
mov
out
adc
mov
std
sbb
sbb
pop
hlt
xor
pop
add
pusha
pop
xor
mov
dec
sbb
xchg
cmc
xor
push
nop
add
mov
and
cwde
add
add
mov
push
push
pop
push
add
xlat
lods
pop
add
and
mov
add
lock
inc
push
shl
cdq
pop
ja
popa
fild
and
test
pop
or
arpl
add
mov
popa
jmp
imul
ret
inc
sbb
cmps
lods
in
add
nop
hlt
xor
push
jne
push
(bad)
mov
mov
loopne
retf
or
push
pop
sub
xor
sub
xchg
test
cmp
mov
pop
xchg
xchg
cmp
jge
xor
lea
or
in
inc
imul
adc
or
aas
or
dec
push
fiadd
xchg
jb
ror
mov
(bad)
or
cmps
repnz
popa
or
lods
or
arpl
push
scas
or
adc
adc
pop
add
jo
mov
or
sbb
pop
xchg
or
retf
sbb
xchg
mov
mov
dec
outs
(bad)
scas
xchg
add
repnz
dec
jns
mov
mov
push
mov
cmp
xor
add
mov
inc
dec
gs
pop
or
or
call
or
pop
mov
daa
div
mov
orps
imul
rol
pop
in
sar
in
jae
outs
push
dec
cs
mov
(bad)
bound
leave
es
dec
in
lea
aas
inc
popa
ins
mov
in
ins
jns
xchg
ss
enter
or
adc
(bad)
movs
sub
jg
jae
call
xor
push
push
push
xor
adc
adc
or
mov
arpl
in
adc
pop
mov
ins
or
jbe
adc
push
dec
push
jbe
(bad)
nop
or
dec
dec
pusha
in
dec
test
(bad)
pop
dec
add
ds
popf
dec
add
cmps
pop
and
ret
test
dec
jnp
pop
pop
not
pop
add
shl
sub
push
int3
add
ins
ds
cmp
enter
lea
je
xor
ja
mov
jns
jp
push
dec
push
push
jl
jl
xchg
sbb
dec
jnp
test
jle
xchg
add
mov
imul
test
inc
jnp
fdivp
jo
sbb
xchg
lods
push
les
repz
iret
shr
movs
(bad)
clc
les
popf
in
adc
xchg
dec
cmp
ja
add
gs
mov
(bad)
mov
mov
test
and
lods
cmp
fs
ins
mov
push
xor
lahf
pop
sub
push
mov
das
adc
adc
push
push
xchg
cmp
xchg
xrelease
cdq
dec
adc
lea
addr16
js
imul
int3
dec
sub
push
jb
iret
in
ja
fs
add
push
arpl
dec
js
(bad)
outs
bound
sti
or
mov
cmp
mov
push
or
xchg
and
push
jmp
sub
int3
(bad)
mov
out
nop
cmps
(bad)
(bad)
push
jb
data16
in
pop
ds
xchg
xchg
or
add
adc
jb
popa
and
js
push
jg
add
loopne
push
add
inc
popa
mov
push
pop
enter
scas
cmp
lods
inc
lods
push
shl
or
dec
enter
imul
mov
fcom
lock
push
enter
and
fimul
sahf
not
push
in
sub
adc
popa
sub
inc
bswap
pop
mov
ins
dec
mov
and
ins
push
dec
inc
pushf
push
sar
and
add
pop
repnz
aaa
push
adc
pusha
add
rcr
mov
enter
inc
push
out
cmp
dec
les
sub
pop
in
add
and
les
adc
loopne
popa
jg
push
adc
shl
push
sub
int
push
jb
xor
add
int3
aam
jb
jb
in
in
lock
jae
hlt
clc
adc
jae
pop
sub
sbb
pop
in
inc
sub
sbb
sahf
dec
cmc
jg
inc
int3
int3
add
or
xchg
aam
inc
push
in
mov
movs
push
dec
cs
jae
nop
cmps
aad
mov
rcl
mov
dec
retf
add
fstp
sbb
hlt
cmps
std
test
ins
mov
jge
in
(bad)
bound
arpl
in
jae
pop
scas
pextrw
xor
mov
or
ins
sahf
int
mov
mov
mov
push
test
hlt
mov
push
and
inc
mov
cmp
mov
pop
push
jb
mov
adc
xchg
jb
and
ret
mov
push
push
inc
push
and
pusha
out
arpl
or
sub
or
popa
dec
and
pop
sbb
or
dec
or
pushf
cld
ins
xchg
add
adc
dec
pop
or
test
nop
cmps
xor
and
pop
xor
stos
stos
enter
push
ret
inc
ins
sbb
arpl
ret
shl
mov
push
ins
data16
out
pusha
xchg
jl
fnstcw
fs
inc
push
mov
mov
mov
ret
ret
inc
dec
out
sahf
out
pop
js
mov
repnz
pushf
lods
jbe
push
rcl
ja
out
hlt
add
scas
push
or
mov
daa
mov
(bad)
sub
xor
jbe
cmp
inc
pop
inc
push
dec
sbb
dec
call
subps
add
xchg
push
fmul
sti
inc
push
ins
and
jno
test
mov
lock
push
retf
popf
cmp
pop
and
or
popa
bound
ror
or
scas
add
pop
pop
inc
pop
adc
mov
add
imul
fmul
pcmpeqb
inc
sub
arpl
dec
sbb
xchg
ror
dec
lea
ror
(bad)
int3
test
xor
movs
or
out
cmp
xchg
dec
pop
movs
popf
shl
inc
sahf
push
pop
add
pop
mov
js
or
data16
push
pop
or
push
jb
pop
mov
lds
dec
rol
push
push
bound
(bad)
dec
lds
fimul
inc
pop
icebp
cmps
lods
cs
or
add
leave
or
dec
les
xchg
adc
mov
repnz
lock
fs
adc
jb
xor
dec
in
pop
ins
adc
push
ins
ins
dec
sbb
mov
movs
mov
dec
pop
(bad)
clc
ins
pusha
xor
adc
adc
sbb
dec
jmp
add
push
push
mov
pop
nop
push
cld
fs
adc
out
sub
je
or
sub
inc
aad
lods
shl
and
jmp
arpl
jmp
mov
dec
push
and
sub
pop
inc
add
mov
adc
rcr
cmps
out
pop
lock
push
and
mov
add
cmp
jne
arpl
(bad)
xor
dec
jl
pop
mov
or
xor
daa
or
and
das
add
dec
dec
repz
mov
imul
mov
enter
leave
or
and
fstp
xchg
mov
imul
jo
xor
int3
mov
lea
in
inc
call
mov
rcl
je
js
popf
rcl
xchg
je
cdq
lea
in
xchg
out
xchg
jae
add
push
push
movs
jmp
into
inc
and
mov
push
mov
ins
xchg
xor
pushf
cmp
icebp
adc
or
adc
rcl
bound
mov
adc
and
inc
jp
pop
and
add
pop
enter
sub
ja
pop
rcl
add
iret
repz
xor
jle
in
sbb
mov
jle
push
sahf
test
lods
xor
or
and
inc
popa
mov
add
loop
dec
sub
pusha
xchg
lea
dec
add
add
test
or
mov
push
std
xchg
jle
add
add
and
push
mov
loope
add
aas
push
xor
cmp
sti
push
lods
mov
frstor
or
dec
cmps
jmp
xor
inc
shl
pop
or
or
lock
jne
sub
xor
inc
and
jp
add
lock
push
fcom
xchg
test
mov
loop
inc
ins
pop
mov
push
test
pop
pusha
adc
fs
jno
(bad)
dec
mov
mov
jb
mov
add
clc
fcomi
cmc
es
(bad)
out
sbb
push
(bad)
jp
mov
cmps
jne
fxch
xor
stos
lods
pop
pop
pop
inc
dec
adc
ds
sbb
mov
xor
lahf
stc
xchg
pop
add
sbb
lods
adc
test
xchg
mov
push
fstp
and
adc
inc
ins
sub
push
inc
(bad)
mov
and
jl
loopne
or
shr
push
push
popa
ror
ret
xor
adc
add
arpl
xor
add
push
inc
lahf
fstp
test
mov
push
pushf
pop
add
dec
add
and
ins
push
repnz
test
mov
mov
fmul
pop
mov
xor
cmp
ds
xor
or
aaa
ds
add
mov
and
rcr
cmp
lock
loope
fiadd
ss
and
adc
pop
jl
inc
pop
ja
cmp
inc
inc
inc
and
sar
push
mov
les
fcom
add
cmc
pop
pop
mov
in
cld
push
add
ss
xor
mov
xchg
comiss
sbb
xor
adc
xchg
test
dec
ins
mov
add
inc
sub
pop
jne
mov
sahf
add
jbe
push
push
pop
cmp
dec
pop
dec
cmp
jne
xchg
xor
cmp
sbb
sub
sbb
loopne
adc
inc
aam
add
jne
fwait
nop
mov
fisttp
cmp
arpl
adc
or
add
in
sbb
repz
inc
push
xchg
mov
jbe
(bad)
fdiv
and
and
mov
mov
out
adc
adc
dec
xchg
ret
dec
lahf
push
sub
lahf
pop
inc
push
push
jae
shl
sbb
mov
rcr
mov
mov
fs
nop
push
mov
sub
in
nop
addr16
xchg
fidiv
xor
and
in
xchg
out
cmp
dec
ds
jnp
mov
dec
jne
push
loop
cmp
push
cmp
pushf
dec
test
add
mov
xchg
ja
shl
cld
test
and
icebp
mov
call
or
retf
fadd
lds
pop
xchg
ror
adc
js
leave
mov
or
lea
xchg
les
mov
movs
dec
clc
xchg
xchg
ins
jo
sbb
mov
or
pop
xor
nop
jnp
xor
dec
or
movs
ret
sub
sub
jae
test
sbb
jbe
(bad)
and
clc
add
inc
lock
or
(bad)
mov
outs
xchg
and
adc
imul
data16
sbb
mov
test
fld
or
pop
pop
or
enter
add
(bad)
xchg
lea
int
cmp
cmp
jns
sbb
and
xor
adc
fbstp
aam
shr
mov
inc
daa
pop
bsr
in
inc
call
pop
xlat
add
call
mov
adc
std
lock
add
add
inc
ins
xor
sub
mov
mov
movsx
popa
xchg
or
js
and
push
sbb
ss
pop
pop
into
(bad)
loope
adc
adc
mov
mov
lods
ret
je
jg
inc
nop
stos
jmp
adc
int
sbb
hlt
add
add
movs
aad
mov
(bad)
adc
and
popa
imul
add
add
gs
jno
pop
popf
les
xchg
push
add
sbb
add
ret
ins
lea
add
ss
sbb
mov
xchg
imul
or
call
xchg
sub
inc
inc
stos
add
or
cmps
nop
(bad)
and
test
dec
jnp
mov
and
out
jno
loopne
ss
inc
shl
push
mov
mov
adc
pop
nop
(bad)
xchg
mov
ds
ins
dec
jo
jmp
scas
outs
jle
dec
stc
test
je
jae
test
cs
and
add
sub
add
xor
sub
inc
ret
out
jl
add
sbb
push
mov
push
add
adc
test
pop
xchg
add
jge
lea
and
mov
xlat
xchg
push
aam
sar
stc
mov
jmp
cmps
adc
xchg
and
dec
jle
out
mov
mov
mov
clc
mov
push
push
sub
pop
mov
or
pop
xor
jge
sub
outs
out
(bad)
cwde
sub
outs
call
or
add
xor
in
ds
rcl
adc
add
push
jle
add
or
jmp
data16
mov
(bad)
xchg
push
pop
inc
fidiv
cmps
xor
xor
sub
cmp
in
adc
mov
jg
inc
mov
adc
mov
pop
leave
mov
or
ins
mov
dec
push
jo
inc
pop
pop
push
and
adc
mov
pop
(bad)
or
jae
mov
test
adc
fild
ins
pop
and
mov
mov
sbb
adc
ret
sbb
imul
mov
or
inc
mov
jb
mov
pop
add
adc
outs
sbb
jnp
cld
mov
sbb
or
sub
and
leave
and
mov
or
aas
ret
cli
popa
leave
iret
push
and
das
dec
jnp
and
cmp
push
adc
mov
dec
retf
push
dec
adc
test
cmp
sbb
daa
cmp
xor
xor
test
mov
mov
sub
inc
(bad)
retf
dec
call
add
imul
adc
mov
test
and
or
jae
movs
test
sbb
and
loopne
cmovne
sbb
cmp
popa
add
add
cdq
xor
xchg
jp
pop
pusha
sub
xor
mov
in
xchg
or
ins
cmp
push
not
and
dec
xor
call
fwait
jecxz
and
xchg
add
lock
scas
outs
loopne
lea
lock
mov
div
pusha
add
pop
cs
dec
add
cmp
in
add
inc
xor
xchg
(bad)
in
lock
fmul
(bad)
mov
dec
jno
push
sub
dec
adc
and
dec
loopne
rol
adc
outs
mov
xchg
jcxz
add
je
pusha
push
fucomi
mov
out
jne
push
inc
pop
(bad)
pop
mov
mov
push
mov
dec
je
xchg
pop
or
sbb
jecxz
test
xchg
inc
(bad)
cdq
dec
and
popa
push
loopne
xchg
push
push
(bad)
jp
cmps
test
arpl
(bad)
push
jg
test
mov
and
or
je
ror
jns
ja
test
push
rcl
hlt
loope
retf
or
cdq
idiv
inc
int3
sub
push
xchg
and
or
repnz
pop
pop
inc
jne
and
pop
ins
push
nop
and
ins
aam
xchg
xor
pop
mov
mov
int
lock
or
mov
(bad)
outs
jnp
les
scas
push
add
movs
adc
call
(bad)
scas
sub
and
(bad)
in
xchg
cli
sub
pop
jecxz
push
push
jo
int
pop
sub
rol
iret
jmp
pop
mov
mov
pop
mov
add
jg
imul
mov
xchg
bound
test
rcl
dec
jo
xchg
or
mov
jl
cmp
mov
mov
mov
(bad)
xor
mov
xor
sti
add
hlt
push
add
push
mov
inc
(bad)
push
pop
sbb
inc
call
icebp
and
and
popa
adc
sahf
mov
fwait
cmp
lock
dec
sub
sbb
dec
jo
out
or
and
arpl
jo
add
dec
inc
xor
ds
mov
dec
xor
sub
repz
jae
push
push
jg
fcomp
(bad)
(bad)
jle
jle
adc
fadd
dec
inc
or
in
retf
dec
xchg
push
shr
retf
jmp
mov
int
loop
es
sbb
test
jg
adc
adc
rol
fmul
retf
push
mov
or
es
unpcklps
pop
dec
or
js
pop
add
mov
jns
fstp
mov
or
jle
pop
movs
cmp
dec
push
out
xchg
and
pop
dec
xor
pop
cmps
push
xchg
xor
arpl
mov
inc
call
add
and
fwait
add
fs
or
lea
ins
inc
mov
js
push
and
dec
frstor
add
pusha
xchg
add
push
(bad)
sahf
xchg
push
rcl
mov
stc
iret
rol
iret
dec
or
nop
lock
ret
jne
leave
rol
rcr
xchg
(bad)
cmp
ret
rcr
cmp
xor
xchg
mov
aad
push
sub
and
(bad)
(bad)
or
retw
jne
mov
imul
test
lea
xchg
lock
movs
repz
add
lea
test
adc
test
push
adc
inc
push
mov
xor
ret
aas
hlt
retf
mov
imul
and
dec
jg
xchg
lock
jns
jl
adc
xchg
aas
inc
add
jno
jae
(bad)
ret
test
add
sbb
mov
cld
lahf
pop
and
or
sub
mov
adc
mov
push
mov
jmp
test
xchg
or
sub
inc
push
pusha
xor
or
jmp
rcr
xchg
mov
rol
mov
lock
push
leave
mov
add
or
lock
and
add
loope
xchg
mov
cmp
loopne
adc
mov
aad
loope
and
jbe
test
push
xchg
pop
mov
loopne
push
sbb
cmps
inc
lods
xchg
push
bound
xor
jbe
jmp
and
mov
inc
mov
mov
mov
clc
mov
test
or
add
ja
xchg
stos
shr
mov
imul
sbb
inc
jb
pushf
or
or
or
push
enter
movs
cmp
mov
mov
ret
push
enter
dec
add
xor
stc
add
rcr
lea
cmp
mov
xor
and
mov
ja
pop
repnz
jle
push
movs
adc
call
rcl
inc
add
adc
push
call
push
xchg
and
sub
or
(bad)
addr16
mov
cmp
sbb
dec
cdq
ficom
mov
cwde
inc
add
inc
jmp
rcr
dec
int
adc
add
pop
push
cmps
pop
mov
mov
fstp
jmp
xchg
cdq
cmp
sti
cmc
sub
or
lahf
out
mov
sbb
sbb
mov
and
cli
in
mov
popf
jbe
es
inc
call
xor
or
cmp
fcomp
mov
mul
push
lock
adc
xor
(bad)
pop
or
cmp
stos
and
xor
push
js
jns
out
call
sahf
fsubrp
add
sbb
mov
pop
jbe
dec
inc
out
sahf
out
push
data16
cdq
sub
jns
stos
mov
ins
int
rcl
lods
sbb
iret
sar
and
adc
ds
cmp
gs
mov
cli
sub
add
jne
bound
cmp
add
div
dec
sub
and
out
xchg
pusha
(bad)
cmp
push
or
dec
mov
xor
jb
call
mov
inc
xchg
and
fs
xchg
jl
jb
xchg
xor
rcr
xchg
or
sbb
dec
test
sub
push
inc
push
sub
jb
add
xor
inc
adc
push
xchg
and
xchg
test
sbb
mov
mov
sbb
inc
pop
js
movs
lahf
inc
sahf
inc
aas
clc
xor
movs
movs
push
mul
and
push
test
inc
or
push
cld
push
xor
cmp
cdq
jg
and
pop
pop
jb
xor
inc
sbb
addr16
rsm
add
push
mov
and
jge
mov
push
daa
ins
push
jae
pop
push
inc
cmp
adc
test
push
mov
mov
adc
addr16
test
or
loope
or
fstp
mov
outs
xchg
adc
adc
and
out
add
sbb
mov
sbb
sbb
rcr
jns
pushf
pop
ror
stos
stos
aaa
(bad)
pop
dec
mov
xchg
lahf
sbb
xor
lea
cmp
jb
add
and
mov
sbb
popa
pop
pop
(bad)
fbld
pop
push
outs
dec
arpl
jb
jp
(bad)
lds
in
sub
xchg
push
loope
bound
(bad)
pusha
sbb
add
scas
jae
jo
je
adc
outs
and
rcl
jnp
adc
xchg
data16
out
jns
pop
adc
(bad)
pop
inc
out
push
xor
imul
sbb
das
inc
mov
mov
add
out
mov
dec
push
stos
fisubr
xor
imul
inc
ins
push
push
jne
jae
shl
xor
sbb
ja
xor
arpl
add
sbb
cmps
and
inc
stos
lahf
push
cmps
or
push
add
lods
lods
mov
sbb
adc
pop
add
aaa
data16
je
pop
sbb
pop
xchg
dec
pusha
call
jmp
pop
shr
push
sbb
cmps
sbb
pop
xchg
inc
mov
mov
scas
ror
add
ret
jecxz
fmul
mov
adc
out
lock
arpl
xor
or
arpl
or
sub
gs
adc
jno
fst
ins
or
pop
pop
pop
leave
adc
dec
jbe
and
(bad)
ins
push
ins
lock
imul
call
push
cmp
and
mov
lods
stos
and
stos
xor
jo
je
adc
shl
push
mov
aaa
pop
fsubr
adc
push
xor
push
iret
imul
mov
jo
xchg
int
mov
out
push
dec
ret
dec
ficom
pusha
pusha
mov
push
test
iret
jb
and
push
or
outs
outs
sub
(bad)
mov
adc
outs
arpl
jp
pop
pop
sub
sbb
dec
xchg
adc
popa
in
sub
mov
pop
mov
test
push
fs
or
dec
pop
mov
jo
mov
cs
xor
inc
lea
arpl
mov
sub
leave
add
or
mov
data16
(bad)
das
outs
sub
scas
add
jecxz
ret
push
mov
add
push
aas
mov
sbb
dec
shl
test
adc
fild
repz
lea
cmp
int3
mov
sbb
imul
adc
fsub
mov
cmps
sbb
xchg
int
fld
out
or
pop
in
add
nop
sbb
xor
std
or
inc
add
div
xchg
cmp
mov
rcr
loop
fadd
pop
xchg
mov
iret
je
sub
inc
inc
stc
jle
mov
mov
jns
pusha
mov
xchg
add
cmps
aam
cld
es
in
jmp
sbb
int3
adc
sub
mov
sbb
push
mov
cmc
lods
add
add
and
test
add
sub
je
mov
and
mov
jo
test
mov
or
and
add
adc
inc
or
mov
call
js
mov
add
fbstp
sub
pop
add
je
pop
xor
sub
add
ret
mov
xor
dec
sbb
jb
pushf
xchg
jecxz
jecxz
add
mov
mov
cmps
cwde
pop
pop
dec
or
add
pop
inc
ror
jg
in
mov
push
clc
(bad)
leave
pop
inc
gs
nop
push
lds
stos
adc
pop
cwde
push
mov
rcr
test
and
add
push
push
ds
fsubr
and
cmps
aam
or
or
pop
jmp
mov
xchg
and
xor
and
fnstcw
add
pop
xor
lds
ins
loope
fstp
in
loop
adc
add
pop
inc
hlt
push
sub
lods
scas
hlt
or
xchg
xor
push
js
fstp
dec
xor
neg
sbb
cmp
jnp
adc
popf
cmp
add
push
lods
out
add
mov
jne
icebp
lods
add
adc
xor
add
push
sub
movs
jmp
xchg
clc
mov
sahf
xor
dec
js
cld
fsubr
ret
rcl
inc
and
ja
add
push
add
call
ror
jmp
add
add
test
in
add
js
mov
inc
ret
push
mov
sub
cmp
push
add
sbb
data16
push
push
fnstcw
and
pop
and
adc
xor
push
pop
pop
or
aad
lea
test
sbb
jns
cmc
jmp
inc
inc
pop
cdq
or
add
sub
cmp
enter
sbb
loopne
(bad)
out
add
dec
add
mov
sub
call
aam
mov
push
or
mov
je
pop
lahf
ret
mov
xchg
ror
enter
jb
int3
data16
(bad)
and
or
les
push
(bad)
idiv
pop
mov
dec
mov
push
and
cmps
sbb
in
jo
sbb
inc
nop
xor
fs
jae
mov
push
les
fnstenv
sub
jmp
inc
rol
adc
cdq
test
adc
lods
ret
pop
test
xor
pop
inc
mov
or
push
push
test
cmps
jo
fnsave
or
pop
rcl
test
ins
inc
fsubr
loopne
pusha
mov
inc
xchg
pop
xchg
adc
fiadd
add
cmp
out
mov
mov
inc
mov
mov
adc
test
or
jno
lea
adc
mov
mov
idiv
mov
pop
and
ficom
sub
and
push
pop
mov
and
pop
jbe
hlt
in
xor
sbb
repz
rcl
adc
or
pop
pop
fisub
das
test
rol
rol
dec
mov
pop
jae
dec
add
dec
scas
add
bound
add
cs
ffreep
loop
sub
int
jno
xor
push
add
sub
clc
pop
add
sbb
sub
push
test
mov
xchg
and
sub
push
jae
mov
cmp
push
xor
sub
mov
or
mov
mov
cmp
fs
movs
js
add
adc
adc
cmp
lods
out
out
push
or
mov
iret
mov
ficom
mov
pop
mov
loopne
pop
test
mov
xor
scas
and
popa
out
or
xchg
pop
ins
rol
adc
mov
add
dec
rol
sbb
mov
enter
and
shl
and
xchg
add
push
push
sbb
lahf
sbb
fld
jmp
sbb
mov
pop
push
adc
pop
or
add
push
inc
or
out
out
sbb
and
xor
adc
dec
adc
mov
jg
inc
fs
add
push
and
jno
jno
aaa
sbb
adc
adc
xor
xchg
movs
sti
jge
jns
or
adc
cmp
adc
sbb
mov
push
mov
push
or
shr
fist
test
cmps
mov
sbb
xchg
les
(bad)
test
mov
mov
shl
dec
data16
xchg
pusha
std
or
adc
pop
jb
cdq
sbb
addr16
cmp
xor
xchg
scas
imul
mov
enter
shl
lock
in
jns
cmp
xchg
and
add
cmp
xor
jge
clc
call
mov
jmp
addr16
les
adc
icebp
pop
xchg
lahf
test
jmp
cs
test
(bad)
or
add
inc
jle
movs
sub
mov
pop
push
loopne
push
pop
mov
test
in
enter
add
pusha
shl
xor
xlat
jns
xor
hlt
hlt
mov
stos
add
add
push
push
(bad)
xor
mov
movs
adc
xchg
movs
add
clc
rcr
mov
and
sbb
or
mov
xchg
das
sbb
test
scas
sar
cld
fisttp
push
clc
push
mov
jbe
pop
mov
dec
sub
xchg
inc
mov
jnp
sti
shl
and
and
push
push
aaa
dec
and
push
mov
fbstp
dec
inc
ins
out
movs
retf
aaa
pop
fs
fdivr
xchg
pop
sbb
movs
mov
pushf
adc
inc
sbb
mov
sub
or
mov
rol
sahf
xor
push
syscall
xchg
aaa
mov
jmp
xor
dec
xchg
shl
(bad)
int
add
or
leave
jno
sub
or
and
out
jno
or
dec
loopne
add
add
jmp
and
and
mov
dec
js
stos
daa
idiv
js
sub
nop
adc
dec
popa
nop
and
test
or
iret
or
push
pop
or
pop
inc
inc
ins
or
das
in
lods
shr
xchg
xlat
pop
pop
add
and
nop
mov
mov
fistp
sub
cmp
je
lock
jnp
sahf
jb
pop
rcl
mov
mov
jp
jnp
pop
ror
test
pop
sbb
jnp
dec
outs
sub
xor
fadd
das
call
inc
jne
sbb
rol
add
int
dec
xor
or
hlt
mov
hlt
clc
fistp
enter
psubusw
ins
push
dec
pop
sbb
and
out
mov
cmp
sbb
push
sbb
add
and
mov
inc
call
call
in
push
xchg
ret
mov
sbb
jae
or
aas
leave
add
das
mov
sbb
in
add
les
js
sar
lods
xor
popf
mov
mov
xor
or
jo
jns
pop
es
sbb
mov
mov
add
mov
cwde
mov
fadd
push
adc
inc
and
push
sub
inc
xchg
and
or
add
(bad)
in
inc
pop
add
movs
sbb
sbb
dec
adc
in
push
and
adc
enter
dec
inc
cmp
sub
push
dec
push
xor
inc
cmp
pusha
fisub
push
(bad)
jo
or
mov
push
adc
pop
mov
lea
cmp
repz
and
and
adc
daa
int
sub
xor
add
pushf
dec
dec
inc
ror
imul
push
inc
push
jae
dec
fidiv
xor
adc
cmp
add
dec
cmp
inc
xchg
inc
test
daa
xchg
cmp
jo
(bad)
xor
dec
in
test
fdivp
sbb
movs
ret
ret
xchg
adc
pop
add
or
lds
mov
mov
xor
mov
sbb
sbb
inc
jp
push
sub
xchg
in
add
fbstp
adc
sbb
push
ins
dec
cmp
mov
and
sbb
inc
pop
inc
or
pop
adc
mov
fistp
and
add
mov
fsub
loop
imul
lods
data16
sub
dec
mov
div
out
xor
mov
pop
scas
push
mov
push
or
sbb
pop
jnp
das
dec
push
mov
add
data16
shr
mov
xchg
retf
jecxz
pop
in
in
adc
mov
pop
leave
xchg
jl
(bad)
lock
add
push
rcr
outs
pop
sbb
shl
outs
and
add
push
adc
push
sub
fisttp
cmp
add
inc
fs
jae
pop
inc
outs
outs
imul
je
xor
and
add
andps
sbb
mul
dec
inc
clc
ins
or
push
xchg
and
adc
sar
add
sbb
call
je
outs
pop
adc
sbb
or
or
rcr
add
jbe
imul
js
adc
add
std
fwait
sub
sub
cmc
jae
out
loop
xor
mov
adc
pusha
mov
inc
xor
shl
inc
pop
sub
adc
adc
xchg
xor
xlat
sub
test
imul
push
or
cdq
pop
dec
push
add
xchg
push
dec
pop
xor
pushf
sub
in
cmps
ret
ss
sbb
dec
fsub
cmps
mov
dec
sub
add
add
adc
dec
js
add
movs
xlat
jge
inc
inc
(bad)
dec
in
shl
inc
sub
fs
sbb
xor
dec
or
and
xor
or
sbb
add
add
cmp
sub
stos
nop
pop
add
mov
mov
xchg
adc
stos
sub
jle
cwde
cld
push
add
shl
sub
mov
ins
xor
add
sub
pop
sbb
mov
pop
test
add
push
lods
or
inc
jae
mov
dec
jp
jmp
inc
adc
sbb
pop
cmp
pop
sub
bound
(bad)
sbb
outs
fwait
or
test
es
daa
adc
jle
inc
jo
je
js
sub
push
xor
pop
mov
loope
jl
adc
add
bndstx
adc
jg
mov
cld
mov
cld
sbb
cmp
and
lock
add
sub
pop
xchg
(bad)
sub
call
or
shr
sub
call
inc
push
bound
push
jmp
push
inc
popf
push
ror
arpl
movs
sbb
sub
inc
sub
mov
aaa
push
or
out
add
push
pop
es
add
push
add
xchg
int3
es
sub
mov
cmp
xchg
xchg
fistp
out
ret
popf
or
or
(bad)
fwait
movs
mov
jae
push
daa
pop
pop
das
add
dec
sub
mov
mov
or
xchg
loope
(bad)
lods
test
push
xor
int
sbb
add
or
inc
cs
stc
add
dec
add
add
ret
xor
popf
into
pushf
sub
mov
mov
mov
inc
sbb
cmp
xor
and
mov
and
ffreep
int3
xchg
cmp
mov
outs
iret
add
ret
ins
sahf
mov
movs
add
call
jns
(bad)
pop
dec
jmp
adc
call
sbb
lods
lods
xor
cdq
mov
xor
dec
dec
xchg
dec
movs
lock
sub
fisttp
test
dec
or
ss
adc
jl
and
sbb
push
test
xor
inc
jo
mov
xchg
js
add
inc
sbb
nop
fild
sub
nop
inc
push
fs
and
cmps
push
sbb
push
dec
fimul
(bad)
mov
scas
and
xchg
and
and
popa
mov
cmp
iret
aam
xor
or
jge
enter
mov
cmp
int3
inc
and
ss
in
lock
pusha
push
fild
lds
sub
push
movnti
(bad)
dec
ret
ss
rcr
in
pushf
mov
push
pushf
jge
xchg
fisttp
push
xor
and
push
xchg
mov
fs
pusha
pusha
nop
mov
cld
nop
dec
jmp
add
test
jg
imul
pop
pop
mov
jg
push
xchg
scas
retf
ret
mov
and
(bad)
test
mov
rol
(bad)
mov
cmp
rcl
in
cdq
jbe
mov
push
add
sub
push
imul
pop
mov
mov
push
jmp
adc
jecxz
enter
dec
stc
test
out
mov
pop
fwait
xchg
dec
mov
dec
and
push
mov
mov
loope
movs
(bad)
ins
inc
jbe
cs
jnp
int
lea
xchg
push
dec
out
dec
push
ret
fdivr
jge
das
sti
bound
inc
shr
push
call
(bad)
mov
and
js
push
leave
idiv
mov
jmp
and
mov
ret
loope
(bad)
push
sub
push
jl
xor
loop
jbe
push
lock
dec
sub
jmp
jecxz
sbb
cmp
out
mov
cs
mov
js
inc
loope
push
pop
in
xchg
dec
pop
dec
mov
(bad)
sbb
push
sub
nop
retf
test
cmp
dec
jb
cmp
push
inc
inc
inc
(bad)
adc
push
popa
icebp
xor
loope
movs
loopne
in
push
xor
jmp
rcl
das
shl
repz
scas
add
pop
push
mov
pop
sub
sbb
test
mov
rcr
pop
fdiv
aas
js
loopne
pop
push
push
add
(bad)
xchg
loop
repz
and
nop
add
imul
adc
lock
sbb
push
and
push
cmp
adc
or
jmp
ror
in
cmp
loop
test
inc
push
fidiv
push
or
mov
pusha
add
adc
adc
add
xchg
jbe
xchg
push
xchg
or
or
and
mov
mov
add
and
sbb
fsubr
icebp
jmp
inc
in
inc
call
popa
pop
sub
rol
sbb
jnp
mov
sbb
test
fsub
add
(bad)
ficomp
loop
dec
mov
outs
sub
and
into
push
mov
retf
xchg
xor
scas
or
and
xchg
cmps
mov
mov
int3
(bad)
adc
xchg
test
loopne
fld
push
adc
pop
into
jne
dec
mov
rcr
dec
hlt
(bad)
mov
xchg
push
pop
hlt
rcr
inc
xor
lahf
je
pop
push
fild
call
enter
adc
lea
adc
das
test
add
imul
and
enter
mov
or
sub
jmp
jl
inc
lock
pop
leave
lock
jle
jne
shl
in
lahf
or
jo
jns
xchg
loop
or
jo
push
pop
cmp
jecxz
mov
pop
pop
test
rol
and
inc
add
xor
(bad)
sub
or
in
mov
popf
fld
jmp
add
xchg
jo
adc
cmp
dec
fcomp
and
xor
xchg
pop
js
and
loop
data16
fidivr
inc
and
inc
jne
aaa
pop
xchg
jbe
arpl
lds
cmps
sbb
pop
and
xchg
test
inc
pop
popa
or
add
mov
cs
push
nop
mov
sar
out
mov
(bad)
mov
int3
jmp
adc
scas
cmp
int3
(bad)
jb
or
mov
daa
rol
add
les
xchg
push
daa
mov
mov
mov
and
movs
pop
adc
shl
and
adc
stos
xchg
hlt
pop
xor
rcr
je
mov
ins
mov
jmp
clc
lods
lods
push
movs
cdq
movs
loopne
mov
pop
movs
movs
test
xchg
add
adc
cmp
or
mov
inc
nop
sbb
xchg
xchg
cwde
cwde
fld
mov
cmp
pop
xor
adc
add
call
mov
and
mov
inc
test
xchg
out
test
jb
in
add
inc
nop
add
es
mov
gs
stc
cmp
adc
push
(bad)
outs
iret
or
mov
mov
mov
inc
(bad)
test
mov
inc
mov
rcr
jecxz
aad
sbb
int3
enter
jae
sub
add
les
sbb
adc
adc
daa
and
cmp
and
mov
sbb
sbb
add
or
push
icebp
or
mov
leave
not
pusha
push
push
push
les
es
adc
gs
jmp
sbb
bound
stos
ror
cmps
jnp
xor
dec
jae
push
pop
push
mov
and
and
repnz
int
inc
test
inc
aas
add
mov
mov
imul
or
dec
xchg
xchg
inc
mov
cdq
sbb
mov
xchg
jo
xor
pusha
sbb
inc
sbb
or
call
pop
retf
jne
add
cmp
(bad)
sub
mov
mov
or
mov
dec
inc
mov
ror
mov
cmp
mov
sar
pop
cmp
pop
or
std
add
cmp
call
in
js
sub
or
or
call
adc
inc
fcom
xor
inc
movups
rcr
into
and
add
pusha
xor
fist
pop
push
aas
aaa
add
pusha
and
mov
cmp
pop
outs
inc
and
inc
pop
icebp
push
sub
add
and
enter
sub
and
aas
scas
ficomp
push
inc
or
xor
adc
dec
xchg
or
push
ret
cmp
test
adc
push
ss
mov
daa
inc
cmp
sub
fisttp
push
mov
test
pop
push
dec
push
inc
mov
push
jbe
fisubr
inc
dec
sbb
mov
xchg
dec
cs
inc
aaa
js
mov
inc
mov
cmp
das
lds
or
adc
jmp
dec
inc
rcr
xor
push
cmp
sub
xchg
outs
outs
cmp
ret
loopne
xchg
push
in
mov
and
nop
cs
lods
popa
aaa
fcomp
xor
push
bound
out
fist
dec
out
mov
lods
jae
adc
ror
pop
adc
pushf
pusha
je
test
cmp
mov
imul
test
or
aad
lock
xchg
add
push
add
hlt
ficom
in
rcr
pusha
in
add
imul
fdivr
daa
mov
bound
and
gs
xchg
add
loope
adc
or
in
xor
pop
fistp
push
ins
ss
pop
cmp
out
movs
es
xchg
ret
cld
aaa
xor
lea
dec
outs
or
sbb
imul
ss
mov
or
mov
movs
push
pop
add
xchg
int
cmp
out
inc
xchg
fwait
(bad)
jno
mov
mov
mov
rol
xor
cs
fiadd
movs
movs
hlt
fcomip
fs
cmp
mov
out
mov
nop
mov
mov
scas
add
mov
push
imul
inc
cmp
imul
data16
or
fsubr
push
push
test
or
jo
outs
push
pop
sbb
sti
cdq
jge
js
add
inc
add
mov
push
iret
mov
pop
push
push
or
mov
jp
addr16
jp
sub
dec
scas
push
xchg
and
add
or
sbb
test
ror
mov
data16
cmp
push
fs
jmp
imul
or
jmp
or
push
je
adc
jl
and
add
adc
jns
test
xor
or
sub
in
mov
push
or
lock
lods
xorps
arpl
ret
xor
push
xchg
push
or
je
outs
push
and
pop
les
cmp
not
sub
adc
dec
repz
push
add
dec
add
icebp
cmp
ins
ds
jo
cmp
inc
mov
call
jge
int3
adc
cld
push
movs
add
jge
(bad)
push
call
int
imul
nop
or
icebp
cmp
add
stos
popa
jb
cmps
cmp
adc
or
sub
lds
mov
fmul
and
loop
xor
dec
push
xor
and
mov
push
(bad)
or
xchg
push
xchg
scas
mov
mov
pop
or
test
add
sub
loope
and
scas
or
push
xchg
scas
add
or
movs
fnstsw
push
aad
xor
sub
gs
(bad)
sub
mov
aas
push
xchg
xchg
and
inc
or
xor
push
std
(bad)
retf
iret
dec
adc
push
dec
push
loopne
pop
add
adc
pop
mov
shr
mov
add
iret
call
dec
inc
pop
dec
inc
sub
xor
push
lock
mov
inc
xor
stos
nop
jecxz
or
inc
inc
cmp
or
test
sbb
inc
ins
arpl
pop
fs
mov
pop
repnz
imul
or
ret
mov
fs
or
stos
and
cmps
sbb
pop
cmps
xor
pop
adc
pusha
or
inc
fs
xchg
ja
mov
jno
mov
fcom
(bad)
outs
add
jmp
shl
pop
sbb
jb
pop
int3
aad
fisttp
xor
or
inc
dec
push
loope
mov
outs
dec
dec
bound
sbb
inc
push
push
bound
scas
push
xchg
mov
sub
and
or
js
lss
enter
movs
lock
mov
sbb
in
dec
cld
xor
mov
inc
nop
push
and
cmp
push
mov
inc
mov
shl
mov
out
iret
jno
push
jb
je
adc
push
call
xor
ret
ja
dec
push
outs
mov
pop
sti
fidiv
or
mov
cmp
ins
add
xchg
xchg
push
cmp
add
xchg
or
and
xchg
repnz
rol
pop
xor
sub
movs
xchg
or
add
in
jmp
sub
jne
cmp
popa
out
(bad)
dec
mov
add
adc
in
pusha
add
cdq
add
cmp
test
mov
cvttps2pi
clc
adc
lods
push
test
cdq
pop
jge
xchg
jge
js
cmp
inc
inc
call
push
mov
ret
cwde
cmp
mov
and
sbb
pop
dec
xchg
rcl
neg
sahf
mov
rcl
mov
sub
xor
rcl
iret
test
adc
daa
sub
in
or
cmp
sub
mov
jl
mul
shr
nop
test
push
push
nop
pusha
push
sti
mov
xchg
int
not
mov
movs
hlt
adc
repz
cmp
outs
or
repz
in
add
pop
xchg
in
push
mov
dec
jbe
les
jl
fsubr
xor
mov
pop
add
int
xor
and
movs
dec
dec
cmp
mov
xor
xchg
or
in
pop
mov
int3
cwde
cld
cmp
sar
cmc
cmp
repz
repz
mov
test
neg
adc
test
shl
aaa
sub
lock
cmp
test
dec
and
jge
lods
mov
push
push
out
sub
inc
push
mov
xlat
ins
dec
xchg
add
dec
jmp
stos
push
mov
inc
in
mov
fwait
dec
sbb
sub
loopne
pop
mov
rcl
mov
mov
add
add
dec
jge
scas
cwde
in
sub
(bad)
lods
or
in
mov
popf
enter
es
xchg
dec
xchg
mov
arpl
das
push
mov
ficomp
mov
sub
das
xor
lods
ss
dec
jp
lods
mov
ss
dec
dec
stos
dec
dec
outs
or
int
inc
aaa
in
push
or
add
aaa
jae
cmp
xor
pop
test
shl
or
addr16
icebp
or
dec
shl
sub
add
inc
push
add
test
lds
pop
dec
jne
inc
jb
jae
xchg
rcl
in
in
daa
pop
cwde
inc
fiadd
add
pusha
dec
iret
cmp
cmp
sub
in
push
add
xchg
push
daa
mov
jg
sbb
fcomp
or
imul
mov
add
(bad)
je
mov
pusha
leave
mov
xchg
pop
cmp
mov
enter
in
add
cmp
std
out
mov
sbb
add
pop
inc
out
xor
push
cs
ficom
sbb
cmps
inc
sub
add
push
ror
push
inc
rcl
push
rcl
inc
dec
mov
outs
push
push
cs
jb
mov
adc
and
ret
pop
aas
sub
xor
push
mov
mov
mov
push
gs
imul
(bad)
xlat
xor
xlat
out
in
clc
shl
mov
or
clc
mov
fidiv
dec
add
cld
jl
and
icebp
jae
and
fs
mov
ja
adc
dec
sub
lahf
mov
pop
adc
dec
in
jmp
push
push
in
xor
push
and
cmp
mov
call
imul
in
add
pop
(bad)
loopne
cwde
and
pop
add
sti
dec
xor
cmp
dec
adc
add
or
outs
sbb
std
add
push
sub
xor
xor
cwde
inc
icebp
dec
lock
pusha
mov
adc
mov
adc
bound
mov
or
inc
loopne
inc
arpl
add
cwde
sub
add
(bad)
cmp
mov
sub
jns
and
mov
test
mov
and
add
ja
cmp
inc
imul
aad
dec
(bad)
sbb
dec
fild
xchg
fadd
or
dec
sbb
mov
jp
clc
or
int
sub
sar
xchg
jmp
mov
or
dec
into
loopne
mov
push
mov
inc
jno
movs
popa
rcr
pop
pop
add
add
jb
dec
xchg
pop
cmp
add
sub
sti
and
lock
pop
push
fs
cs
aam
xor
sbb
lea
mov
scas
test
shl
xchg
mov
pushf
call
and
(bad)
sti
out
jp
jae
(bad)
in
xor
or
imul
jmp
push
outs
loop
push
pop
scas
pop
push
fstp
cwde
pcmpeqd
push
add
mov
cmp
dec
gs
adc
fisttp
push
and
cmp
js
mov
jmp
dec
push
test
add
mov
sar
fmul
sbb
jns
dec
or
jo
push
fcomp
mov
push
push
inc
mov
lods
jmp
pushaw
stc
adc
fwait
das
ror
inc
mov
xor
dec
inc
iret
push
lahf
dec
adc
adc
outs
mov
call
jg
mov
dec
imul
cs
add
scas
dec
xchg
outs
loopne
sub
inc
aaa
ror
cmc
mov
cmp
push
adc
and
loope
aam
sbb
add
lahf
xlat
push
push
js
xor
cmp
(bad)
nop
add
retf
fiadd
inc
and
sub
xor
adc
out
add
add
bound
pop
and
shl
outs
jmp
push
xchg
xor
inc
mov
shl
idiv
sbb
nop
daa
sub
fcomp
loopne
dec
add
add
adc
sbb
sub
mov
sub
add
or
adc
sti
pop
jecxz
mov
add
mov
test
je
xchg
adc
movs
xor
outs
add
dec
adc
and
jmp
cmp
sub
out
jne
xchg
jne
mov
xchg
es
push
test
xchg
adc
pop
dec
dec
in
add
dec
jo
and
nop
cmp
xchg
mov
inc
test
xchg
push
inc
xchg
sar
push
fwait
push
das
inc
adc
repnz
add
or
add
aas
fcomp
dec
adc
xlat
(bad)
cdq
popa
lds
sbb
adc
pop
add
dec
cmp
cmps
scas
xchg
hlt
daa
fs
sbb
sbb
sub
fs
and
xchg
or
dec
test
clc
mov
pop
stc
outs
jmp
mov
pop
sbb
or
mov
in
pop
push
mov
arpl
sub
shl
std
test
hlt
pop
and
mov
jbe
or
cmp
test
in
scas
and
popf
imul
dec
mov
adc
setl
pop
cli
retf
or
sahf
xor
xchg
(bad)
mov
scas
sub
push
addr16
push
fadd
mov
add
pop
mov
(bad)
scas
or
sub
lahf
lea
xor
rcl
pop
stc
nop
mov
cmp
sbb
aaa
mov
mov
mov
ror
or
jbe
push
push
fldln2
adc
adc
outs
(bad)
(bad)
fiadd
pop
mov
ds
bound
inc
sub
sub
(bad)
icebp
sbb
loopne
or
xchg
in
loope
xchg
mov
je
inc
(bad)
jbe
mov
mov
shl
and
cmps
in
pop
jns
ror
add
jmp
add
sbb
sub
daa
and
sbb
add
push
xor
jp
dec
fisttp
sbb
xchg
push
shl
adc
inc
mov
ret
add
and
lahf
push
cmp
jae
jge
test
jmp
add
cmp
test
jnp
or
out
xchg
in
fst
add
mov
mov
sbb
jmp
shr
mov
aaa
and
loopne
add
mov
ret
nop
cmp
aaa
mov
mov
push
outs
dec
mov
call
add
adc
adc
or
ds
nop
or
leave
mov
sub
test
aam
push
arpl
push
sbb
in
mov
fild
pop
adc
adc
jne
outs
das
push
aas
sbb
dec
adc
or
dec
jmp
sub
ret
push
adc
(bad)
jle
pop
or
inc
pop
dec
xchg
cmp
push
jo
in
and
in
mov
aam
jne
out
inc
in
xor
mov
and
loopne
int
sahf
mov
sbb
in
in
add
and
ret
cld
push
and
addr16
push
loopne
add
mov
pop
inc
xchg
jns
movs
in
pop
sete
in
enter
fwait
push
push
popf
mov
dec
cmp
sbb
xchg
jmp
or
pop
ret
nop
push
jb
cmps
das
push
pushf
test
outs
pmulhuw
das
push
add
call
add
out
fisttp
inc
dec
add
or
adc
dec
popf
mov
sub
and
enter
pop
hlt
sub
pop
and
push
mov
adc
mov
dec
and
push
adc
xchg
sub
pop
hlt
inc
loop
mov
mov
push
dec
push
or
pushf
pop
and
or
dec
sub
push
push
(bad)
popa
xchg
in
aaa
rcl
mov
or
sub
lods
imul
and
mov
and
pop
and
wbinvd
outs
fnstcw
test
out
nop
nop
mov
fcom
enter
ret
cmp
cmp
pushf
mov
cmp
mov
sub
and
xor
mov
cmp
pop
pusha
mov
fcom
jo
or
xor
xor
addr16
fs
cmp
sbb
enter
sbb
mov
or
mov
add
and
push
xor
nop
add
les
and
mov
retf
jo
(bad)
or
and
push
add
(bad)
repz
push
add
inc
and
push
sbb
pop
push
ins
imul
retf
mov
mov
in
lods
and
and
test
xlat
sbb
push
mov
pop
out
loop
cmovbe
and
pop
xchg
int
ret
push
stos
and
loop
push
and
neg
test
pop
jg
jae
fiadd
jmp
cs
mov
xchg
in
fcmovu
mov
xchg
add
stos
sbb
out
push
addr16
outs
add
retf
stos
xchg
(bad)
mov
pop
mul
adc
adc
fsub
mov
scas
jg
mov
pop
adc
fs
sbb
push
pop
jg
sub
loope
jg
aas
jnp
aad
xchg
sub
stos
scas
add
pop
and
pop
jg
and
in
sub
jg
bound
pop
sub
add
fxsave
jbe
mov
push
je
mov
mov
add
fist
and
or
push
pop
cmp
mov
dec
aaa
add
or
stos
mov
pop
mov
lds
push
pop
xchg
aas
aaa
fwait
inc
or
out
and
faddp
dec
cmp
sbb
fs
verw
or
lahf
mov
mov
mov
retf
adc
cmp
aad
inc
mov
pop
add
mul
xchg
arpl
cdq
fiadd
out
mov
inc
mov
add
sbb
add
add
add
sub
sub
mov
mov
lods
adc
fs
ret
cmp
adc
and
das
in
bndstx
mov
or
popa
imul
and
add
ror
(bad)
mov
add
push
adc
or
popa
loop
push
inc
cmp
or
cdq
cs
out
and
pushf
and
cwde
add
retf
push
into
aas
push
xor
pop
xor
sbb
movs
mov
xchg
adc
sub
add
rcr
pop
mov
jb
and
and
out
sbb
cmp
jae
cmp
in
inc
dec
dec
push
ltr
shl
xor
add
or
push
cmp
or
arpl
cmp
lock
adc
xchg
sub
stc
mov
movs
pop
nop
mov
add
mov
(bad)
jmp
sbb
sub
retf
fsubr
ds
in
or
mov
or
bound
fucomip
jns
ror
inc
add
cmp
addr16
clc
push
ja
and
sub
adc
add
retw
or
dec
repz
adc
mov
fcomp
add
or
sub
repz
push
mov
out
call
cmp
out
(bad)
push
es
popa
jnp
out
jne
daa
(bad)
mov
mov
jmp
mov
cmp
and
mov
and
(bad)
fdivr
jmp
add
add
fisub
sub
aam
mov
ret
shl
jecxz
rcl
push
in
shr
int3
cmp
cs
enter
jb
(bad)
les
nop
xor
sar
jb
cmp
mov
mov
inc
inc
aas
ret
mov
sbb
mov
push
in
mov
lods
mov
lods
dec
test
add
in
test
movs
cli
and
imul
push
cmp
adc
add
inc
mov
and
inc
sub
loopne
nop
js
bound
jge
mov
mov
ror
sbb
(bad)
shl
inc
pushf
pop
out
in
lea
pushf
dec
es
add
dec
fdivr
ss
adc
pop
and
and
das
pop
add
test
cwde
cwde
retf
add
push
push
xchg
mov
lock
es
dec
dec
sbb
inc
inc
sbb
xchg
fisttp
jbe
packsswb
mov
in
or
jne
imul
sahf
pop
dec
sub
push
pop
inc
jecxz
mov
xchg
push
je
ins
inc
sar
cmps
cmp
or
nop
inc
push
iret
add
and
mov
or
adc
loopne
bound
mov
adc
mov
and
sub
sbb
cld
es
or
add
or
call
and
cmp
jmp
mov
cmp
les
add
sub
test
mov
push
mov
in
mov
rcl
sbb
pusha
sub
mov
and
popa
xor
aad
add
sub
das
sub
cs
loopne
xchg
fisttp
jbe
movs
pushf
sbb
popa
sub
mov
mov
inc
jmp
pop
mov
push
pop
test
test
push
ins
jbe
or
adc
stos
add
ins
or
xchg
add
stos
sub
test
mov
test
dec
push
sub
add
sbb
adc
jg
fidiv
hlt
sub
mov
sub
or
xor
movs
lahf
cmp
lock
xor
jae
cmp
cs
cmps
outs
jo
addr16
loope
push
imul
inc
ds
popf
or
fimul
inc
adc
sub
andps
out
inc
in
inc
jl
in
inc
sbb
movq
out
mov
push
sahf
cmp
dec
loopne
xlat
add
or
scas
out
lods
adc
ja
in
mov
daa
cli
rcr
sbb
ret
lods
xor
out
sub
in
stos
cmp
adc
and
sub
or
mov
sub
(bad)
(bad)
dec
(bad)
jns
aad
inc
cmp
xchg
jp
push
loop
adc
xchg
mov
shr
nop
mov
xor
rcr
fdivr
fwait
sub
inc
xor
and
adc
js
jle
test
(bad)
std
sub
sbb
out
dec
adc
jmp
cmp
mov
or
adc
aas
add
push
mov
adc
add
jae
mov
jbe
jle
sar
ror
cmp
jl
dec
mov
jle
pop
jmp
inc
or
pusha
jmp
aas
mov
inc
and
jmp
sub
shl
jl
or
jns
push
es
cmc
jb
pop
xlat
rcl
fcom
sub
mov
lods
xchg
cmps
aas
pop
xor
adc
add
seto
mov
cmp
sbb
xor
gs
test
inc
dec
sub
fst
sub
mov
in
add
ss
test
mov
dec
dec
arpl
add
add
add
ror
mov
xor
sub
sub
mov
mov
ja
xor
cmp
mov
jo
call
sub
fild
xchg
stos
or
fmul
xor
sub
mov
or
pop
(bad)
iret
add
test
mov
push
cmovne
sub
neg
fs
jbe
sub
sub
stos
jp
test
das
xchg
popa
pop
fst
arpl
sub
in
jb
cs
push
mov
xor
out
cli
pop
cli
arpl
cdq
retf
or
fwait
jmp
pop
retf
mov
xchg
push
sub
retf
push
cmp
fnsave
sahf
movs
jns
int3
cs
repnz
pop
mov
mov
push
clc
xchg
cld
mov
mov
into
les
and
les
jge
fwait
std
xor
ins
mov
mov
dec
jmp
lds
fsub
and
jmp
inc
dec
dec
lock
cmp
cmp
je
mov
lods
or
add
bnd
mov
jo
dec
or
hlt
or
adc
lea
loope
shl
fstp
fwait
out
dec
mov
add
push
push
in
test
xchg
cmps
test
movs
jge
test
push
dec
or
cli
out
cdq
mov
jne
(bad)
adc
push
or
push
iret
dec
xor
cwde
pushf
pushf
dec
push
sub
jne
sub
imul
push
jb
daa
(bad)
inc
push
mov
adc
cmove
cmc
xchg
dec
push
add
xlat
mov
inc
xchg
mov
mov
and
xor
enter
or
jl
cmp
sbb
or
sbb
or
ret
mov
mov
xchg
(bad)
or
mov
mov
cmc
dec
out
or
or
iret
out
das
je
or
je
add
je
push
jb
mov
jle
or
xor
add
xor
gs
loopne
add
xor
shr
imul
xchg
jg
adc
call
xchg
dec
aam
or
aam
add
test
es
retf
test
sbb
movs
mov
sub
mov
sub
push
jmp
jne
cmp
scas
mov
hlt
mov
sahf
mov
and
cwde
sub
dec
add
push
inc
xchg
(bad)
sub
and
inc
mov
test
add
mov
out
dec
dec
les
cmp
sar
idiv
or
inc
mov
ffree
sbb
xchg
jne
stos
in
in
mov
sub
mov
je
inc
add
mov
xor
mov
push
jmp
fsubr
ins
addr16
pop
pop
rol
or
rcl
push
dec
pop
push
(bad)
jae
lods
imul
push
daa
dec
sub
adc
pop
pop
dec
(bad)
sbb
xchg
cmps
or
jge
cwde
fst
test
int3
je
push
sbb
or
mov
pop
enter
mov
adc
sbb
leave
mov
aaa
adc
int
push
jb
jne
retf
or
ret
(bad)
retf
popf
outs
jmp
jmp
dec
loop
inc
or
xchg
jne
and
add
xor
jle
dec
jge
xor
lock
sub
jl
xor
adc
sub
push
jmp
(bad)
fcomp
pop
test
sub
aam
push
fimul
add
mov
adc
mov
cmp
push
add
pop
push
xor
sar
cdq
inc
loope
iret
fdivr
mov
adc
xor
les
jnp
adc
imul
sbb
sub
mov
out
xchg
aam
cmp
push
test
jae
push
mov
imul
cmp
push
adc
es
cmp
cmp
inc
sbb
pop
or
call
push
movs
mov
mov
fild
std
mov
mov
or
je
pop
fs
es
dec
nop
push
and
sahf
nop
out
xor
add
lds
push
fs
mov
fiadd
dec
push
jg
add
push
fsubr
sbb
imul
or
pop
daa
inc
mov
sahf
inc
push
out
fistp
popf
mov
dec
dec
scas
dec
xlat
cs
fs
inc
add
and
mov
or
push
stc
push
out
pop
fisubr
out
daa
fimul
jo
out
mov
push
shl
add
pop
push
mov
cmp
sbb
cdq
in
rol
dec
cmps
clc
xchg
lock
into
cmp
sub
(bad)
dec
xchg
movs
icebp
pop
cmp
add
or
add
test
fild
jne
es
jmp
mov
add
add
jns
dec
movs
stos
(bad)
gs
mov
and
out
add
xor
inc
push
ds
xchg
shl
cmp
(bad)
xor
dec
and
cmp
sbb
and
inc
and
jge
cdq
in
or
push
je
sar
ror
jmp
sub
popf
mov
mov
mov
or
sbb
cld
ss
xchg
xchg
adc
sbb
nop
xor
clc
mov
xor
adc
sub
es
pop
or
aaa
push
add
in
(bad)
pop
(bad)
cmp
mov
xchg
jmp
in
pusha
aam
jne
mov
xor
outs
mov
cmp
out
add
movs
push
adc
dec
adc
adc
and
aas
add
sub
xchg
dec
mov
or
or
in
mov
test
test
les
hlt
es
outs
xor
push
cmp
mov
dec
xchg
jmp
aaa
mov
mov
enter
pop
xchg
cmc
rcl
pusha
pop
loopne
pop
int3
lock
scas
mov
daa
mov
push
(bad)
js
dec
sub
lea
out
add
fisubr
pop
test
pop
xchg
jbe
jb
ja
push
mov
and
adc
xchg
and
or
mov
daa
and
movs
xchg
jle
aam
cmp
popf
xchg
push
pop
in
inc
add
xor
mov
ss
push
adc
adc
pop
aas
mov
mov
dec
inc
or
push
xchg
dec
sub
fdiv
mov
push
jmp
inc
test
loop
xchg
lea
ins
dec
add
and
rcl
xchg
je
inc
xor
push
xchg
pop
inc
pusha
inc
adc
or
inc
jns
aaa
mov
cmp
pop
push
sbb
sub
add
mov
outs
fisttp
rcr
call
adc
xor
mov
retf
mov
aad
cmp
or
sub
mov
push
outs
inc
fdivr
mov
xor
xchg
push
aas
xchg
push
and
jo
add
(bad)
pusha
stos
inc
pop
ret
inc
popa
xor
and
push
das
in
or
es
and
jecxz
mov
movs
stc
pop
sbb
and
lock
jo
xchg
sub
loopne
mov
sbb
mov
(bad)
xchg
sbb
rol
sbb
fwait
sub
and
popf
popa
dec
mov
dec
dec
cli
push
sub
xchg
pop
push
(bad)
xchg
ds
pop
or
dec
mov
cmp
mov
mov
add
stc
or
dec
pop
in
in
or
call
push
sub
push
xor
and
aam
imul
inc
xchg
mov
xor
inc
jnp
pop
sub
fnstcw
sar
sbb
or
ror
pop
popa
daa
ss
jmp
or
add
pushf
nop
jo
xchg
mov
mov
lahf
xchg
add
inc
pop
mov
mov
inc
jle
cmp
movs
sbb
pop
mov
adc
stos
sub
aaa
mov
dec
push
dec
inc
or
mov
dec
mov
sbb
sub
inc
mov
pop
mov
adc
lds
dec
sar
add
push
movs
fcomp
mov
fcmovbe
mov
push
inc
and
cmp
call
inc
mov
imul
mov
sub
out
add
ss
test
cmps
loopne
inc
pushf
dec
outs
adc
adc
leave
jb
sub
out
aas
cmp
or
cmp
pop
xchg
and
adc
and
add
loope
test
add
sub
cmp
and
and
(bad)
lock
aad
repnz
cmp
inc
inc
mov
sub
dec
push
or
cmp
or
call
lds
xor
push
icebp
adc
or
in
and
or
js
fs
xchg
in
pusha
dec
in
inc
xchg
mov
or
sub
or
repz
and
in
test
jb
push
xchg
sub
or
dec
and
or
push
outs
outs
mov
or
sub
daa
add
out
xchg
or
add
xor
or
cld
ins
inc
inc
or
inc
dec
(bad)
mov
addr16
cmp
ret
dec
sbb
out
arpl
inc
add
inc
or
sub
es
sub
pushf
push
call
and
adc
fwait
loopne
inc
inc
jecxz
and
cmp
dec
shl
inc
inc
loop
mov
inc
pop
mov
pop
adc
push
mov
stos
mov
adc
mov
dec
mov
sub
pop
mov
pop
add
clc
jmp
dec
daa
mov
aam
push
(bad)
sub
cmps
jo
pop
cmp
nop
jp
inc
clc
or
xor
mov
push
sbb
xor
fdivr
cdq
sbb
pop
jl
add
cmp
fisttp
jno
and
inc
adc
adc
and
adc
popf
pushf
mov
add
das
cwde
sub
rol
(bad)
aam
push
or
ja
es
outs
or
(bad)
inc
and
stos
mov
dec
xchg
fcomp
adc
dec
xchg
cmp
jo
push
mov
or
mov
ins
pop
push
jl
mov
ret
nop
mul
ins
jl
mov
popa
adc
in
adc
into
inc
adc
inc
sahf
dec
test
test
cmp
cmp
mov
inc
adc
cdq
xchg
inc
scas
aaa
nop
nop
xchg
sbb
xchg
cwde
cwde
cmps
fs
sub
inc
mov
and
xchg
add
dec
mov
and
pop
sti
mov
adc
ret
mov
test
push
or
lods
lods
retf
push
cwde
xor
lods
or
add
mov
inc
and
or
nop
mov
cmps
mov
inc
enter
lahf
dec
sub
mov
mov
stos
lods
loopne
mov
adc
push
sbb
pop
or
les
mov
ja
je
(bad)
int3
push
push
int3
imul
aam
fidiv
adc
fadd
(bad)
push
cdq
fdiv
loopne
push
cmp
in
clc
push
inc
mov
call
add
test
aam
lock
xchg
sbb
xor
hlt
hlt
ror
xchg
popa
dec
and
outs
push
dec
repz
sbb
arpl
cld
mov
push
addr16
push
and
sub
add
pop
jb
push
enter
push
or
and
push
enter
or
pop
adc
xor
ins
adc
and
dec
adc
and
jge
int
adc
add
cdq
pop
push
sbb
sbb
cdq
mov
push
or
dec
pop
cdq
fcmovnb
movs
sbb
sbb
xor
and
inc
std
rcr
push
bound
mov
sbb
mov
inc
and
xchg
sbb
test
sub
in
add
lods
push
and
xchg
(bad)
lods
nop
push
mov
shr
mov
jb
dec
movs
xchg
pop
add
pop
push
sbb
inc
aam
pop
pop
ins
ins
retf
xchg
dec
mov
xchg
sub
jo
stos
dec
popf
add
pop
in
cs
ja
adc
mov
(bad)
js
inc
imul
mov
and
add
push
(bad)
xchg
or
es
push
jns
in
not
es
cwde
xchg
sbb
push
mov
push
adc
mov
repz
pop
or
sbb
daa
mov
push
mov
xchg
and
lods
sub
in
or
mov
aas
adc
nop
sbb
push
daa
mov
dec
jb
xor
test
test
movs
or
and
lods
and
sbb
scas
shl
addsd
add
pusha
shl
mov
pop
movs
xchg
or
add
pop
or
push
pusha
push
mov
and
cmp
leave
push
(bad)
nop
mov
enter
jo
inc
repnz
mov
test
imul
jmp
add
adc
ret
or
lahf
push
jb
add
pushf
dec
add
mov
mov
xchg
dec
jb
dec
dec
push
cdq
sub
cdq
fs
enter
(bad)
xchg
aam
aam
and
fdivr
jno
or
ins
test
sbb
pop
push
dec
ret
mov
pop
in
adc
xchg
xchg
inc
cs
xlat
rol
or
push
les
ss
inc
push
inc
dec
xor
xchg
push
inc
retf
push
cdq
push
or
sub
adc
and
push
cmps
mov
scas
call
dec
sbb
mov
inc
mov
pop
(bad)
push
xor
push
fld
(bad)
in
push
mov
jmp
call
bound
imul
shl
adc
or
pusha
enter
and
pop
or
popa
and
das
mov
and
lods
push
sub
mov
gs
mov
stos
jge
pop
lods
mov
mov
mov
mov
mov
cdq
or
push
and
pop
pop
ins
test
mov
movs
into
ds
and
and
xchg
sar
cs
sbb
xchg
push
test
xchg
mov
nop
clc
push
cdq
fs
and
dec
push
cs
mov
movs
fsubr
sub
and
retf
lock
cmp
mov
dec
push
cs
xchg
retf
enter
movs
jb
in
loopne
cld
push
es
mov
inc
xchg
dec
sub
in
retf
lods
in
mov
lock
hlt
xchg
push
es
adc
clc
and
add
mov
in
retf
or
ins
test
push
adc
lods
add
scas
sbb
jne
sbb
mov
and
and
push
mov
mov
test
xchg
retf
xor
cmp
dec
in
xchg
inc
fsubr
dec
and
xchg
dec
sub
in
retf
rcr
jb
call
dec
arpl
test
mov
ins
les
test
and
and
jl
dec
in
jl
lods
test
pop
mov
jae
dec
sub
xchg
retf
xchg
test
enter
in
clc
mov
test
in
and
mov
cs
mov
retf
inc
sar
mov
push
enter
and
jbe
push
dec
in
retf
fdivr
loopne
in
ja
xchg
push
es
repnz
add
or
adc
cld
xchg
dec
mov
les
or
add
xchg
add
int
sbb
js
push
shl
mov
xchg
sbb
test
mov
in
add
es
add
push
adc
enter
fsub
jmp
xchg
loopne
pusha
ret
jmp
cmps
bound
aad
dec
adc
dec
loop
xor
or
add
pop
add
push
mov
xchg
imul
retf
js
out
push
mov
scas
sub
(bad)
mov
pop
push
xchg
sbb
jae
pop
icebp
es
out
pop
pop
aaa
arpl
fisubr
mov
sub
jno
xlat
inc
or
xchg
dec
jmp
push
cmp
xor
xchg
pop
and
add
nop
jbe
pusha
imul
fadd
push
push
xor
scas
nop
xor
push
push
xchg
pop
mov
sbb
push
push
scas
pop
sbb
mov
jle
adc
sbb
inc
pop
dec
add
in
pop
and
xchg
push
cs
xchg
mov
push
test
xchg
arpl
or
ja
push
sbb
adc
and
call
cmps
inc
mov
cmp
fimul
push
jo
pop
es
lahf
sbb
fs
xchg
jmp
aaa
lea
ja
retf
bound
es
stos
xor
dec
add
outs
jbe
scas
mov
(bad)
outs
jns
cmp
add
mov
fild
xchg
sbb
aas
or
push
and
adc
inc
inc
and
or
call
lea
xor
ins
aas
mov
or
and
push
push
and
nop
sub
sbb
fimul
clts
daa
or
iret
adc
rcl
inc
test
xchg
ja
or
(bad)
push
sub
mov
add
addr16
lock
(bad)
iret
jae
adc
mov
adc
mov
xchg
aas
inc
xor
mov
fwait
aas
imul
and
cmp
fisubr
inc
adc
xor
or
pusha
pop
adc
and
jne
das
or
add
mov
jo
packssdw
push
call
out
adc
ss
(bad)
into
fiadd
inc
jnp
jbe
add
adc
inc
cmps
sub
or
js
jo
pop
mov
and
sbb
cs
pop
push
mov
daa
daa
bound
ins
movs
cmp
add
add
ins
mov
iret
push
pop
dec
or
adc
inc
push
add
push
das
mov
lds
pop
jne
arpl
xor
dec
jg
test
cs
adc
call
shl
(bad)
mov
arpl
ror
je
ss
iret
adc
stos
inc
dec
mov
jle
sub
and
push
pusha
xor
daa
push
repz
addr16
pop
cmovg
popa
leave
add
add
sbb
jo
mov
(bad)
dec
arpl
aaa
daa
aas
sbb
sbb
cmps
cwde
pop
popa
(bad)
jae
cmp
mov
cli
pop
cmps
push
mov
push
mov
stos
es
lahf
sbb
or
outs
or
ret
push
sbb
imul
addr16
lahf
mov
xor
pop
ins
aas
adc
ja
test
aad
adc
xlat
fist
push
bound
cs
inc
push
push
push
pop
outs
xlat
fsub
pop
inc
xchg
stos
xchg
or
dec
or
mov
outs
bound
and
adc
inc
maxps
add
sbb
int3
imul
inc
ins
adc
or
leave
adc
rcl
iret
xor
aas
inc
mov
dec
mov
dec
cmp
and
fidiv
dec
stos
sub
pop
sbb
and
pop
adc
daa
push
rol
push
push
outs
scas
cmp
(bad)
(bad)
push
sti
jns
adc
pop
fwait
mov
packuswb
(bad)
or
scas
bound
addr16
fs
sub
(bad)
push
inc
mov
frstor
push
daa
lock
arpl
je
rol
es
aam
(bad)
jmp
leave
retf
data16
or
repnz
pusha
or
xor
xor
je
jl
xor
xor
test
xor
xchg
cwde
pushf
mov
movs
test
mov
xor
xor
xor
(bad)
enter
xor
xor
fcomp
loopne
xor
xor
call
xor
hlt
cld
clc
add
xor
xor
or
fs
adc
ins
outs
sbb
enter
or
enter
xor
cmp
enter
inc
dec
dec
enter
push
push
pop
pop
enter
pusha
push
enter
js
enter
add
nop
xchg
cwde
pushf
enter
mov
enter
mov
mov
rol
enter
enter
in
add
enter
sar
movzx
ret
dec
xor
dec
lock
pop
jne
cmp
jl
or
sbb
in
bound
adc
xchg
and
push
outs
cmp
cwde
and
xchg
faddp
push
or
pop
cld
test
push
xchg
ins
mov
rcl
mov
iret
shl
imul
shl
mov
fldcw
ins
pop
sub
mov
int
xchg
inc
or
or
push
and
fst
jae
ins
pop
outs
sub
outs
outs
popa
jne
jmp
hlt
xor
and
test
or
or
repz
and
and
mov
test
shl
into
movs
push
xchg
(bad)
std
add
push
inc
or
adc
add
push
pop
pop
out
inc
pusha
sbb
add
cwde
add
lods
xchg
adc
jle
pop
jge
push
add
pop
dec
pop
mov
outs
hlt
push
dec
sbb
or
mov
adc
jns
aam
out
xchg
aam
rol
je
xor
jecxz
xchg
nop
xlat
add
push
xchg
fs
or
mov
jnp
jle
add
xor
fst
in
js
ret
push
cmps
cwde
sets
cmps
neg
xchg
rcl
fld
sub
xchg
mov
adc
retf
lods
mov
sub
and
jns
push
nop
fmul
sbb
mov
xchg
dec
cmp
in
push
cmp
add
sbb
imul
dec
jo
sbb
sub
push
mov
or
shr
cmp
sub
sub
rcl
clc
imul
das
test
adc
fistp
lods
movs
and
add
movs
mov
cs
sub
movs
(bad)
mov
sar
sbb
out
mov
push
mov
outs
mov
mov
inc
jecxz
push
stc
push
dec
ror
push
or
loopne
add
mov
xor
add
cmovbe
add
xor
nop
push
push
and
sahf
inc
add
jmp
jg
inc
es
mov
and
sub
xchg
add
cmp
push
pop
or
jne
pop
cmp
adc
pop
sbb
(bad)
ins
or
adc
repz
add
leave
inc
ins
mov
dec
dec
push
dec
inc
xor
popf
adc
adc
xor
and
hlt
pop
aad
pop
cld
inc
add
dec
imul
adc
lds
and
adc
jns
aam
sub
or
push
cmp
mov
dec
pop
imul
aas
or
xor
cld
mov
inc
sub
hlt
adc
mov
daa
fdivr
sbb
mov
cmc
xor
inc
mov
cdq
pop
adc
adc
jb
cmps
sti
jns
inc
mov
dec
arpl
cli
add
arpl
inc
mov
xchg
push
shr
arpl
shr
add
cmp
pop
ds
call
cmps
jae
push
movs
xor
inc
xchg
in
in
mov
paddusb
sub
jmp
ror
xchg
ja
jne
outs
xor
nop
dec
sbb
adc
xor
dec
loopne
mov
or
loopne
rcr
push
cmps
in
xor
dec
sar
push
sbb
imul
push
add
out
ja
jl
push
pop
push
dec
or
movs
xor
fmul
mov
pusha
inc
add
and
sub
inc
dec
stos
nop
lock
rol
ret
test
les
xchg
dec
mov
(bad)
mov
mov
loopne
gs
push
rcr
fcom
emms
sbb
comiss
and
in
adc
test
cmp
cmp
jns
stos
push
ret
pop
dec
sub
fisttp
xor
cdq
xchg
xchg
test
test
les
xor
or
sbb
jmp
add
repz
in
loopne
xchg
add
mul
cmp
inc
cmp
jmp
inc
sub
rcl
sbb
add
adc
jle
jecxz
and
xor
adc
adc
sub
dec
pop
pop
add
ds
cmp
clc
sti
xchg
ds
jmp
jno
mov
cmp
loop
mov
pop
(bad)
adc
pop
aas
fsubr
call
inc
sub
cmp
mov
(bad)
mov
xchg
mov
mov
jl
jnp
inc
jecxz
add
jae
cs
mov
pusha
xchg
dec
arpl
pop
mov
pop
mov
nop
jo
js
das
lods
jnp
mov
retf
and
popa
or
mov
imul
rcr
ins
jno
fisub
and
mov
iret
dec
add
or
sbb
leave
inc
mov
sbb
repz
xor
cmps
cmps
imul
mov
dec
cmp
(bad)
xchg
push
jp
sbb
and
jo
jmp
add
add
cmp
ins
cmps
jg
daa
inc
clc
add
inc
test
dec
xor
add
(bad)
out
adc
lock
pop
(bad)
xchg
pop
inc
loope
fwait
cmps
test
sti
inc
mov
je
inc
nop
faddp
in
je
mov
ret
leave
cli
fcmovnb
hlt
(bad)
jmp
cmp
push
adc
jmp
js
xor
mov
jl
call
in
dec
mov
inc
inc
loop
out
jmp
lods
dec
(bad)
and
je
xchg
add
loope
(bad)
je
xor
jno
sbb
inc
aam
adc
loope
adc
mov
xchg
inc
sbb
cmp
or
clc
pusha
nop
sbb
xchg
add
push
inc
add
dec
mov
mov
test
xlat
gs
fsubr
loop
add
xchg
mov
test
and
sar
cmps
fild
inc
imul
inc
or
mov
adc
jb
xchg
cmp
jb
pop
inc
mov
iret
mov
dec
ror
rol
xor
pop
mov
pop
add
or
(bad)
jnp
push
inc
jmp
ja
mov
rol
jb
mov
push
pop
pop
fsub
lds
hlt
nop
shr
dec
pop
(bad)
jno
pop
inc
or
and
cmc
push
dec
and
ret
or
gs
ja
ins
cmp
(bad)
and
aam
pop
add
push
push
xchg
cs
aas
rcr
and
fwait
sbb
push
call
call
push
mov
in
mov
xor
mov
stos
pop
xchg
mov
or
dec
dec
aad
push
stos
push
pop
add
imul
xor
jl
or
or
scas
inc
aam
sbb
mov
and
push
pop
(bad)
clc
test
enter
enter
fbstp
nop
shl
pop
jne
add
add
inc
fcomp
dec
imul
cli
or
loopne
adc
adc
int3
fs
adc
shr
inc
add
nop
xchg
aad
aam
add
mov
mov
sbb
fdivr
xchg
sub
mov
cmp
and
rcl
sbb
popf
inc
inc
(bad)
xchg
mov
hlt
push
add
xchg
cld
fs
mov
or
adc
and
hlt
xlat
aas
xchg
das
add
lock
push
jns
and
hlt
push
pcmpeqb
out
xchg
adc
dec
retf
js
sub
xchg
mov
or
mov
inc
and
inc
call
or
dec
xchg
dec
pop
int
add
sbb
and
inc
mov
pusha
lahf
ds
(bad)
xor
fwait
pusha
jns
dec
pop
or
push
xor
ret
cld
xchg
dec
xchg
xchg
dec
mov
call
mov
xlat
jp
and
lahf
mov
pop
or
not
inc
fmul
das
inc
sahf
and
ror
sbb
dec
add
das
sub
adc
in
add
loope
add
adc
dec
aam
sbb
pop
adc
aaa
add
pop
dec
pop
mov
mov
inc
sbb
daa
ins
mov
adc
dec
mov
mov
daa
push
nop
xor
sbb
add
stos
imul
sub
rcl
xchg
push
mov
popa
xor
jp
loop
sbb
ror
cmps
ficomp
push
bswap
les
cmp
sub
and
or
leave
ret
(bad)
sar
or
adc
(bad)
jbe
dec
test
cmp
lock
ds
popa
stc
nop
hlt
lock
cmp
nop
lock
adc
cmp
xor
inc
shr
leave
xchg
leave
xchg
xor
in
in
call
call
inc
enter
inc
leave
xchg
sbb
loopne
test
xor
xor
in
push
rcr
loopne
loopne
enter
in
xor
xchg
fdivr
xor
(bad)
fsub
push
rcr
fcomp
ss
imul
dec
scas
add
add
push
je
add
sub
aam
mov
xchg
sbb
aam
xchg
xor
xor
rcl
(bad)
add
mov
pushf
call
enter
push
mov
outs
sub
xor
sub
lods
leave
movs
imul
test
cmps
fisttp
enter
js
cmp
movs
movs
movs
adc
or
push
int3
test
call
sbb
jns
or
add
push
pusha
rol
fs
cmp
add
push
add
pop
das
movs
or
and
fbstp
shl
ins
iret
fist
or
xor
jle
dec
dec
dec
mov
dec
and
push
daa
mov
jae
mov
cmp
push
xchg
pop
inc
leave
mov
loop
mov
or
dec
leave
and
or
add
sbb
sub
xchg
mov
adc
jl
clc
hlt
and
dec
nop
pop
sti
adc
mov
cmp
cmovl
inc
in
jmp
mov
inc
xor
out
mov
xchg
fsub
dec
sub
jo
stos
or
ja
sbb
fcom
push
mov
les
mov
leave
loope
js
add
inc
add
push
lahf
enter
pusha
stc
and
or
addr16
add
hlt
push
mov
and
lock
add
mov
mov
leave
pop
repnz
xchg
cwde
and
test
sub
movs
mov
mov
and
cmp
add
test
or
inc
hlt
xchg
cmp
inc
sub
loopne
es
jns
mov
pop
xor
push
js
mov
mov
test
and
xchg
xlat
jp
adc
push
sbb
or
xor
fistp
or
or
push
xchg
adc
add
int
add
add
add
int
loope
cmp
mov
push
repnz
dec
mov
or
bound
ss
je
xchg
bound
test
ret
mov
dec
inc
dec
sub
pushf
in
movs
mov
or
pushf
or
mov
ret
xor
dec
mov
adc
(bad)
cmp
or
cwde
adc
add
fadd
push
cmp
cld
das
jo
mov
test
ins
pop
outs
jnp
mov
add
int
push
mov
pop
ins
adc
add
sub
in
leave
ret
inc
sbb
ret
pop
cmc
mov
and
add
call
or
sub
pop
adc
mov
xchg
and
or
out
movs
movs
inc
add
enter
aaa
jmp
cmp
pushf
jb
inc
das
cmps
inc
enter
inc
xchg
mov
push
enter
cmps
jns
scas
mov
cmp
or
sbb
adc
adc
mov
and
xchg
rol
mov
loopne
sbb
out
sbb
sbb
popa
xchg
enter
pop
sub
and
cmps
dec
jo
test
cmp
push
cmovge
add
pop
bound
cmps
dec
sub
ja
ins
cmp
pop
xchg
and
hlt
cmps
dec
es
outs
adc
sbb
test
(bad)
outs
sub
dec
lods
ins
lea
xchg
clc
add
jns
mov
adc
jns
(bad)
and
lods
test
dec
inc
push
enter
test
add
ins
jnp
push
fild
cmps
push
adc
daa
sub
pop
fs
nop
dec
enter
cmp
and
test
test
inc
push
ins
mov
mov
jo
test
pop
fs
xchg
pop
in
adc
stos
adc
ins
jb
and
mov
sbb
rcl
lods
jb
sbb
add
inc
in
jb
ins
mov
ror
jns
out
pop
dec
add
outs
rsm
cmp
div
and
sti
test
sahf
mul
leave
cmp
fucom
icebp
push
imul
jge
aaa
inc
dec
sahf
out
sahf
push
pop
scas
mov
out
xchg
fwait
movs
add
(bad)
stos
lahf
ficom
adc
in
cmp
and
or
inc
ss
xor
les
(bad)
mov
pop
push
pop
push
mov
aas
mov
or
out
adc
retf
mov
test
sub
das
cmps
dec
test
dec
cld
adc
ja
mov
add
pushf
cwde
or
fcomp
push
mov
cmp
or
mov
xchg
xor
les
dec
loope
and
xor
push
rol
shr
and
adc
mov
loop
add
mov
scas
lods
inc
fnstsw
cmp
sub
lahf
nop
rol
inc
jecxz
adc
sbb
add
fnstsw
test
add
mov
xor
inc
mov
adc
lock
or
add
mov
inc
scas
xor
add
aad
mov
add
scas
dec
ret
sbb
shl
dec
pop
add
stc
lods
pop
cmp
scas
mov
sbb
xchg
iret
outs
xchg
mov
sub
ret
aas
xchg
hlt
and
jg
xor
push
hlt
sbb
rcr
xlat
es
xor
or
syscall
sub
push
sbb
dec
cmps
sub
pop
mov
jp
dec
inc
imul
add
or
inc
sub
adc
iret
popf
xor
aas
test
push
adc
outs
pop
inc
stos
adc
xchg
ja
dec
push
adc
or
push
test
xor
sub
or
add
pop
rol
std
movs
mov
dec
push
or
and
sahf
fcom
cmps
mov
pop
add
xchg
dec
ss
mov
mov
dec
add
xor
sbb
movs
push
sbb
(bad)
inc
sbb
dec
sub
ja
daa
ins
xor
adc
cmp
mov
fld
pop
daa
(bad)
es
adc
pusha
or
enter
or
cdq
(bad)
imul
pop
shl
push
xor
repz
int3
mov
adc
retf
jne
xor
xor
dec
mov
xor
(bad)
adc
mov
ins
imul
mov
mov
fdivr
push
stos
mov
les
xchg
or
dec
mov
rcl
cmp
scas
(bad)
xlat
xchg
push
aam
dec
jle
push
test
push
mov
xchg
outs
scas
test
in
fwait
or
pop
xchg
cmp
das
jnp
ret
je
mov
xchg
adc
hlt
adc
adc
cmp
add
dec
aaa
sub
cmp
shl
lds
or
inc
arpl
or
es
xchg
scas
dec
mov
and
xor
xchg
push
push
adc
inc
push
addr16
cld
or
mov
dec
or
adc
dec
mov
lahf
mov
xchg
je
mov
xlat
nop
out
or
mov
es
sub
adc
inc
data16
pop
and
sbb
adc
pop
inc
jns
nop
xor
xlat
sbb
hlt
outs
or
or
or
inc
and
sub
ins
test
shl
test
retf
adc
or
arpl
or
pop
add
xor
imul
adc
imul
add
or
mov
dec
test
mov
and
rol
ret
ss
adc
mov
or
push
or
and
clc
pop
push
push
lods
rol
mov
add
add
push
nop
push
xor
push
sbb
mov
xor
bound
es
and
imul
ror
push
sbb
cmps
mov
push
imul
bound
pop
inc
cmp
pop
mov
push
push
in
sub
out
or
cmp
sbb
jp
mov
ret
loop
cmp
arpl
jmp
adc
pop
fbstp
cmp
sahf
stos
data16
sub
das
movs
in
mov
push
xchg
sub
shr
jle
mov
mov
mov
push
loop
xor
xchg
lock
or
mov
add
jl
nop
scas
add
xor
rcr
gs
js
add
inc
and
sub
or
adc
sub
and
daa
in
or
mov
pop
xchg
or
dec
call
call
imul
pop
xchg
daa
test
fwait
jp
add
sub
cmp
inc
push
not
cmc
push
pop
aam
pop
jne
pop
in
fs
das
adc
cmp
arpl
add
jo
mov
dec
push
pop
sbb
ins
loop
je
mov
outs
pop
and
inc
bound
mov
lods
inc
mov
add
or
sbb
data16
in
lock
sbb
mov
lahf
pop
adc
push
inc
and
ss
inc
and
dec
adc
push
push
lock
add
ror
sub
in
jne
add
nop
stos
or
and
(bad)
into
pop
rol
jae
jl
sub
xchg
mov
pop
add
mov
pop
fbld
add
sub
lock
mov
imul
xchg
sub
jmp
pop
pop
mov
sub
sbb
and
sub
jno
fsubr
lods
frstor
and
push
pop
dec
inc
dec
pop
inc
cld
dec
pop
inc
fs
mov
pop
fisttp
mov
and
sub
push
inc
dec
cmps
add
out
sub
add
cs
dec
push
mov
sub
mov
cmp
push
pop
mov
mov
push
dec
outs
imul
pop
jl
mov
aaa
lods
or
test
pop
lds
jmp
vmwrite
push
cmps
mov
subps
sub
test
(bad)
ficom
adc
lods
dec
mov
xor
pop
arpl
data16
push
adc
ins
lods
sub
mov
xor
sbb
xchg
add
sub
mov
jnp
xor
test
iret
mov
mov
outs
inc
pop
dec
or
add
push
mov
bound
and
or
xchg
jl
mov
les
or
(bad)
mov
ja
xor
test
out
test
retf
mov
(bad)
rcr
mov
daa
dec
pusha
adc
or
repz
push
movs
rol
add
add
inc
dec
lods
xor
cwde
test
xchg
mov
dec
and
das
movs
push
mov
adc
push
xchg
aam
push
bound
mov
or
adc
dec
stos
mov
jmp
pop
inc
add
jmp
xchg
test
add
adc
lock
(bad)
ror
mov
and
aaa
and
inc
sbb
or
dec
or
mov
js
rcl
movs
jo
mov
rcl
sar
leave
or
or
das
shl
and
aam
mov
mov
push
add
push
or
bound
rcl
add
inc
or
lods
sub
and
inc
ret
sbb
add
fdiv
cmp
mov
pop
push
push
mov
(bad)
mov
dec
inc
cmp
sbb
rcl
clts
aam
push
adc
adc
test
jmp
xchg
scas
cdq
pushf
ret
dec
jae
xchg
fs
add
test
inc
cmp
enter
dec
and
dec
jmp
mov
lahf
or
gs
fld
les
les
or
add
dec
push
aam
popa
inc
ja
les
(bad)
(bad)
les
stos
inc
stos
mov
xor
inc
ror
push
repnz
dec
push
adc
mov
lea
out
xor
jae
jg
xor
and
sbb
leave
ror
jecxz
dec
out
xchg
ret
cs
add
cmp
(bad)
sbb
dec
jb
and
pop
neg
and
(bad)
data16
mov
pop
cmps
sub
and
(bad)
cmc
loope
xlat
adc
mov
or
inc
mov
or
addr16
pop
adc
push
mov
and
mov
jbe
adc
add
scas
sbb
icebp
adc
sbb
or
or
dec
ja
or
jl
aaa
push
push
mov
lock
ins
in
cmp
cmps
push
orps
jo
mov
push
xor
push
adc
repz
pop
fdivr
or
mov
add
push
xchg
xchg
aam
lock
popa
jmp
enter
dec
out
scas
inc
xor
dec
ja
or
sub
mov
xor
pop
rol
fs
ss
adc
adc
mov
je
pop
aaa
pop
cmp
adc
mov
or
fcmovb
mov
mov
xchg
jno
pop
jmp
das
je
push
xor
inc
mov
sub
xchg
call
mov
retf
dec
push
and
loop
dec
hlt
dec
inc
push
stc
gs
clc
mov
inc
stos
(bad)
xchg
retf
cmp
in
adc
adc
cdq
retf
movs
test
retf
daa
dec
mov
fsubr
fsub
add
fcom
push
add
adc
hlt
arpl
adc
movs
add
arpl
push
xor
es
mov
int3
and
dec
in
adc
mov
mov
int3
cmp
out
xchg
fsub
adc
adc
mov
pop
mov
mov
or
adc
js
loop
mov
jno
pop
outs
int
jl
push
mov
mov
jne
jns
inc
rcl
xchg
into
push
adc
sub
jb
inc
mov
add
sbb
push
push
jns
into
test
mov
fbld
add
and
push
mov
and
xor
xchg
out
inc
and
xchg
std
and
pop
aas
fsub
jmp
(bad)
mov
inc
loope
or
mov
lock
fs
popf
into
xor
movs
test
pop
adc
push
lahf
clc
ror
xor
inc
outs
dec
mov
push
xor
push
icebp
ret
mov
xchg
sub
or
daa
adc
into
out
(bad)
jmp
or
adc
inc
or
add
xor
push
inc
adc
add
push
mov
and
push
xor
pop
cmps
add
jo
call
shr
adc
lahf
jg
in
mov
push
inc
add
mov
mov
mov
inc
hlt
xchg
les
cwde
add
dec
and
inc
shr
adc
ja
push
add
dec
ror
add
add
adc
scas
lods
or
sbb
hlt
sub
arpl
dec
mov
sub
clc
loopne
push
sbb
mov
push
loopne
pop
jp
sar
popa
in
add
rcl
mov
add
and
pop
lock
rcl
xchg
fldcw
fcom
data16
imul
rcl
fimul
jl
mov
jl
xchg
xchg
outs
das
and
enter
leave
and
jmp
xchg
stos
gs
sbb
and
mov
and
call
scas
dec
aam
push
mov
(bad)
pop
or
jne
inc
ins
test
adc
jle
movs
fst
push
xor
adc
and
aam
(bad)
call
mov
nop
loop
ss
mov
and
cmp
or
ret
(bad)
pop
or
aas
add
cmp
push
out
or
(bad)
adc
mov
cvtps2pi
mov
ins
push
ja
sbb
or
mov
xor
mov
adc
sbb
arpl
out
aaa
and
test
data16
ja
test
xchg
out
push
lods
mov
inc
mov
pop
pushf
dec
mov
push
xchg
div
push
hlt
and
aad
and
inc
jnp
xor
aad
mul
pop
arpl
pop
dec
inc
cs
and
call
push
sub
in
fild
xor
les
int
jl
mov
(bad)
inc
inc
mov
and
jns
pop
push
xor
lea
sub
test
enter
sbb
or
fsub
add
fadd
push
push
shr
pop
(bad)
shr
pusha
int3
imul
rcl
sub
stos
mov
cmp
in
xor
enter
jb
call
mov
out
mov
cmp
pop
push
inc
adc
js
pop
push
jmp
xlat
cmp
(bad)
sbb
pusha
jmp
mov
and
lds
inc
fs
push
xlat
dec
pop
mov
add
push
jae
jae
fmul
jo
sbb
je
cmp
fmul
ds
xchg
out
mov
and
jb
xchg
cmps
adc
ret
mov
sub
adc
(bad)
cmp
push
inc
movhlps
(bad)
test
mov
ins
cmps
push
xchg
pop
dec
xor
lods
xchg
or
in
in
jg
push
loopne
mov
cmps
ret
or
add
call
jo
pushf
aam
fdivr
push
stc
sbb
or
pop
retf
popa
inc
push
ja
(bad)
ins
mov
inc
mov
add
daa
dec
push
stos
loop
inc
cmps
add
shl
outs
arpl
jmp
jl
push
xor
hlt
and
ret
sub
enter
fimul
adc
dec
add
mov
movs
adc
xchg
jmp
(bad)
pushf
push
clc
lds
lock
mov
(bad)
sbb
mov
xor
pop
push
or
and
jbe
sub
mov
and
nop
add
sub
imul
push
pop
sbb
add
jns
ja
dec
cmp
or
add
dec
or
outs
jo
lods
inc
adc
xor
sbb
jo
aam
loope
cmp
sbb
dec
jl
jbe
sub
or
nop
mov
inc
pop
push
call
mov
lock
and
movs
sbb
neg
and
xchg
out
or
sahf
and
neg
cmp
mov
lock
dec
dec
inc
aaa
mov
in
pop
scas
push
test
pop
inc
ins
in
les
sbb
push
loopne
(bad)
dec
shl
or
fcomip
out
push
jb
push
push
in
rcr
int3
push
movs
mov
mov
cmp
mov
loopne
mov
addr16
mov
sysenter
push
(bad)
sub
push
xor
ror
movs
movs
adc
lods
lods
adc
dec
cs
sub
fstp
dec
loopne
es
pop
inc
in
popa
leave
mov
push
xchg
mov
cmp
icebp
xor
adc
pop
aam
push
push
push
imul
sub
jb
nop
nop
das
mov
xchg
adc
jb
xor
xor
jb
in
call
enter
pop
lea
sbb
mov
pusha
into
call
mov
sub
push
jae
cmp
ja
jae
jbe
push
push
push
jmp
pop
retf
les
cmp
xchg
sub
nop
mov
das
fisub
inc
repz
mov
xor
inc
ror
or
pop
jae
les
test
pop
push
aas
shl
jg
push
sar
js
jne
push
in
bound
out
add
xor
enter
loope
into
nop
clc
sbb
je
lock
push
scas
xor
cld
retf
xchg
and
loop
sbb
jle
sub
pop
xor
inc
aas
xor
fdivr
push
sti
or
mov
sbb
add
or
xchg
adc
cmp
cmp
daa
pop
xor
test
add
mov
loopne
aad
(bad)
cs
sub
adc
add
jg
mov
gs
outs
ret
add
call
sub
jge
fild
dec
xor
inc
sub
and
mov
dec
inc
cmc
and
and
inc
xchg
loope
add
dec
add
pop
in
scas
adc
enter
imul
mov
punpcklbw
add
mov
push
in
pop
add
shl
div
daa
mov
sbb
mov
push
mov
mov
jo
pusha
loopne
and
int
pop
arpl
into
adc
push
push
call
pop
fiadd
fild
aam
test
push
mov
xor
adc
fcom
idiv
mov
test
in
inc
gs
dec
nop
(bad)
nop
(bad)
push
out
les
or
sub
pop
inc
mov
dec
push
sbb
out
(bad)
mov
and
nop
adc
dec
nop
cmp
in
mov
je
inc
cmp
xor
or
call
ret
ds
popa
xor
aaa
rcr
or
outs
je
popf
xor
(bad)
push
addr16
call
xor
loopne
stos
nop
adc
jecxz
jmp
mov
push
and
dec
out
sbb
fcomp
ja
xor
loopne
stos
and
jne
test
imul
jmp
imul
sbb
fld
jp
aam
daa
sub
leave
cmp
sub
sbb
push
add
push
aad
mov
das
cmp
dec
mov
jo
sbb
pop
in
daa
stos
fldl2t
dec
lock
bound
push
lock
arpl
je
jmp
call
mov
sub
je
popa
xor
push
xor
in
cs
in
sbb
push
stc
xor
es
or
mov
out
mov
pop
inc
mov
mov
fs
adc
addr16
test
(bad)
jmp
(bad)
xlat
adc
inc
jmp
pop
adc
out
gs
adc
cmp
mov
xchg
ja
inc
xor
mov
fistp
mov
fld
loope
leave
adc
test
ins
mov
mov
jmp
add
arpl
movs
add
mov
mov
inc
jmp
push
dec
pusha
adc
mov
adc
sbb
add
or
xchg
inc
sbb
dec
cmps
out
adc
jno
mov
add
repnz
cmps
hlt
add
test
cmp
dec
lods
in
xchg
test
xor
arpl
sti
push
(bad)
jnp
(bad)
adc
enter
xchg
psraw
loopne
or
jns
outs
and
sahf
popa
inc
add
ja
dec
clc
and
mov
clc
mov
das
aaa
mov
and
sbb
enter
outs
xchg
and
jge
and
loope
and
aas
push
add
rol
scas
dec
int
call
and
retf
fdiv
or
iret
dec
dec
mov
(bad)
out
xchg
push
add
push
imul
retf
mov
or
les
repz
jno
jp
repz
enter
xor
push
xor
and
adc
cmp
rcl
and
dec
mov
repnz
clc
or
jne
pop
loope
dec
adc
push
rep
inc
or
idiv
mov
jb
inc
xchg
inc
jecxz
pop
mov
fisubr
int
add
ds
mov
add
sbb
hlt
or
lods
loop
mov
and
pop
mov
jo
mov
in
pop
lods
mov
dec
int3
mov
lds
push
dec
add
inc
test
test
xchg
mov
dec
lds
fwait
cmc
sub
rcl
cdq
xchg
outs
dec
xor
xor
pushf
pushf
rcr
cdq
sbb
sbb
gs
and
repz
mov
loop
sbb
sbb
movs
and
sbb
dec
sub
adc
sbb
jnp
inc
les
inc
push
or
test
xchg
lea
add
or
rcl
loop
pop
add
mov
ret
dec
test
pop
pop
sub
xor
nop
sbb
mov
repz
sbb
(bad)
inc
and
or
dec
sbb
outs
jo
jno
pop
inc
outs
pusha
add
repz
imul
mov
movs
sbb
mov
cmps
lock
dec
(bad)
out
sub
mov
mov
movs
aaa
add
popa
popa
push
xor
or
jge
fadd
popa
jne
sbb
mov
in
and
adc
out
bound
push
(bad)
scas
imul
dec
out
add
mov
sbb
pop
inc
mov
xchg
ds
lahf
ins
mov
enter
pop
daa
cmp
xchg
mov
sub
cwde
inc
xor
adc
mov
cmps
adc
shl
dec
arpl
dec
dec
xor
in
call
and
push
and
add
sbb
fmul
sub
aam
aam
xchg
int
fdiv
rcr
mov
adc
shl
lahf
sbb
(bad)
int3
inc
es
lods
cmps
adc
int3
bound
jbe
add
sahf
aaa
and
mov
dec
sbb
mov
add
cmps
shl
cmp
push
inc
test
or
adc
sbb
adc
cli
push
xor
xor
sbb
xor
pop
inc
add
and
mov
aaa
lock
mov
test
stos
mov
cmove
mov
pop
dec
or
ins
rol
jmp
test
cld
mov
lahf
dec
sbb
mov
or
ret
xchg
cmp
lar
bound
std
lods
inc
into
jne
stc
out
jmp
adc
or
out
sub
mov
sbb
cli
dec
dec
add
mov
sub
cli
xor
cli
adc
mov
js
dec
push
enter
pop
cli
jge
movs
push
xor
inc
shl
cmps
test
(bad)
or
or
cmps
pop
add
cmp
stc
call
push
(bad)
lahf
ret
fsubr
jne
xchg
add
and
adc
repz
push
push
push
sbb
ss
test
or
jl
push
js
pop
aam
daa
ins
dec
fbld
xchg
pop
jmp
xchg
stc
add
adc
das
dec
or
shl
push
xchg
out
pop
mov
arpl
mov
iret
xchg
push
inc
inc
outs
xor
ins
and
xor
sub
or
mov
push
jp
lods
test
cld
sub
inc
or
jnp
adc
adc
inc
arpl
les
inc
stc
jne
dec
cli
or
addr16
lea
cmc
in
lock
add
ds
mov
fsub
add
daa
fimul
push
iret
mov
dec
stos
ds
mov
popf
and
lea
sbb
xchg
or
inc
jne
in
dec
mov
std
dec
cmp
scas
je
dec
clc
mov
lods
xchg
push
inc
xchg
leave
enter
jge
inc
cs
xor
sbb
inc
inc
mov
test
xor
dec
es
cmp
cdq
sbb
addr16
jb
nop
sub
cmp
dec
adc
jge
adc
nop
sub
push
sub
and
and
and
or
outs
pushf
mov
movs
push
nop
out
dec
jnp
std
and
push
test
jnp
sbb
stos
movs
mov
lods
dec
pop
pop
pop
fld
pop
or
js
nop
push
push
jmp
push
cs
pop
or
push
pop
cdq
les
inc
jae
pop
dec
ret
sbb
outs
push
call
mov
pop
mov
push
or
out
pop
adc
xor
fdivr
sub
dec
adc
js
das
jl
pop
dec
fadd
stc
int3
sbb
sti
lods
mov
push
adc
xor
add
dec
in
nop
jbe
inc
cmp
cmp
sbb
ins
sahf
push
sbb
mov
pop
inc
in
mov
dec
or
jge
call
shr
sbb
push
cmp
pop
and
xchg
cs
pop
add
mov
push
hlt
fild
push
mov
dec
jnp
sub
cmp
es
push
int3
sbb
shl
dec
movs
jae
push
dec
lock
aam
push
push
push
into
inc
jb
and
inc
inc
inc
lods
and
sub
fdivr
cmp
mov
mov
jge
push
pop
xor
daa
sti
push
fs
mov
pop
jb
out
mov
xor
cmp
and
add
imul
xor
xor
pop
pop
push
mov
adc
sub
outs
adc
add
loope
call
mov
add
and
clc
pop
jb
sbb
into
lods
push
mov
mov
cli
ret
das
(bad)
cs
mov
sbb
loopne
xchg
add
dec
test
lods
int3
dec
loopne
push
and
sub
add
test
inc
rol
or
test
(bad)
dec
sbb
jecxz
xchg
fwait
sub
push
add
nop
cmps
xor
outs
cmp
sbb
test
add
sub
imul
call
leave
cmps
add
ret
mov
sbb
inc
adc
adc
adc
mov
and
push
scas
je
xor
pop
xchg
lods
into
iret
imul
call
pop
(bad)
or
mov
call
dec
dec
(bad)
adc
dec
loope
adc
in
xchg
dec
lock
daa
(bad)
scas
or
popa
dec
or
push
jns
in
xor
inc
or
dec
and
icebp
addr16
ficom
push
and
mov
shl
or
adc
fcom
gs
inc
bound
adc
adc
or
test
sbb
or
mov
xchg
xchg
pop
mov
or
or
mov
fsubr
test
mov
mul
mov
mov
sbb
daa
mov
xchg
lods
mov
pop
or
push
test
loope
adc
cmp
jl
cmp
in
test
xor
sbb
js
test
cs
popf
ss
sub
not
in
ret
dec
sbb
add
mov
mov
mov
inc
cmps
enter
adc
adc
pop
fs
aas
mov
daa
aad
or
aas
loopne
test
push
or
or
xchg
icebp
ficom
add
sbb
pop
push
dec
pop
in
pop
(bad)
lahf
dec
add
popa
or
sub
mov
cmc
popf
pop
sbb
neg
or
movs
push
leave
add
cmps
pop
pop
pusha
push
movs
cmps
pop
jae
sbb
pusha
psrld
and
or
pop
fst
outs
arpl
das
test
add
and
and
xor
inc
addr16
dec
sahf
test
mov
dec
xor
sahf
dec
push
jp
int
fs
add
xor
or
xor
fs
pusha
movs
xor
cmp
rcr
adc
pop
mov
cmps
mov
or
cld
or
mov
mov
cmp
xchg
and
sub
sbb
jge
xor
or
sub
mov
mov
rol
retf
push
pusha
movs
pushf
jl
add
adc
mov
lock
outs
lods
cmp
jg
push
in
imul
jle
hlt
mov
or
mov
cmc
xor
inc
es
and
fiadd
adc
adc
xor
cmps
and
xchg
mov
pop
mov
mov
or
int3
sub
and
in
in
sub
cld
sub
adc
adc
push
(bad)
lds
and
mov
ins
call
sbb
fs
pop
cmp
repz
xchg
mov
inc
dec
xchg
jo
je
and
dec
retf
jne
add
pop
or
and
mov
inc
add
test
dec
sbb
in
(bad)
rcr
je
bound
das
in
jo
xchg
cmp
movs
test
cmp
cmps
jl
jp
test
je
dec
ins
push
inc
adc
and
xchg
pop
pop
push
push
dec
xchg
mov
adc
fwait
sub
fisub
out
aaa
xchg
pop
ins
lahf
push
push
leave
inc
enter
add
les
pop
das
sahf
aaa
sahf
ins
test
and
add
outs
xchg
das
sub
test
inc
inc
ret
es
jb
or
test
pop
rol
loopne
test
push
xchg
pop
xchg
fs
adc
out
pusha
push
cmp
push
push
cmp
call
mov
sub
test
and
inc
fs
push
ins
jo
jns
lods
adc
inc
adc
sahf
lock
mov
mov
add
enter
je
(bad)
imul
test
push
xor
inc
in
xchg
shl
jge
test
xor
movs
mov
and
addr16
jb
sahf
ins
je
add
ins
push
sbb
imul
pushf
imul
movs
mov
cli
add
dec
push
mov
jne
adc
or
sbb
xchg
out
(bad)
test
scas
mov
out
out
adc
test
inc
fld
sub
jl
stos
fiadd
xchg
sti
fild
or
jbe
das
scas
jecxz
sub
rol
sub
dec
adc
or
movs
add
adc
and
dec
cmc
mov
int3
and
movs
push
cmp
xlat
push
dec
lahf
and
and
push
loopne
mov
mov
mov
pusha
fcom
add
xchg
fcomp
sub
dec
jb
adc
dec
vpmaxsw
cmps
aam
int3
mov
lods
sub
mov
adc
jecxz
fist
push
aaa
int
push
int3
scas
lods
push
adc
inc
cwde
sbb
cmps
adc
ficomp
pop
das
mov
add
dec
js
adc
jmp
pop
add
(bad)
pop
add
cwde
rcr
pop
sub
loope
jnp
sti
icebp
or
push
adc
mov
dec
and
lea
scas
xchg
(bad)
sbb
push
mov
xlat
popa
cmp
mov
test
xchg
inc
(bad)
adc
and
lods
je
mov
sbb
pop
mov
jne
call
hlt
loope
mov
ds
mov
dec
mov
ss
mov
or
mov
sbb
aad
test
cmp
adc
sbb
cmp
add
adc
outs
push
jg
pop
jae
lock
sbb
inc
and
aaa
add
mov
mov
pop
jp
xchg
loope
outs
pusha
and
or
xchg
ins
push
clc
push
outs
sbb
imul
dec
rol
xchg
add
push
test
dec
adc
and
addr16
add
push
nop
pop
inc
and
cwde
push
jae
pop
cmp
pop
adc
fcmovbe
jp
adc
push
dec
out
or
or
(bad)
jg
adc
or
or
sub
fist
and
pop
comiss
dec
pushf
(bad)
adc
fwait
arpl
aas
xchg
bound
addr16
xchg
pop
sbb
or
or
jmp
dec
rol
xor
xor
or
jl
push
xlat
and
add
cmp
pop
adc
push
jb
push
add
pop
sbb
sbb
test
dec
cmp
mov
sbb
fs
and
push
mov
loopne
inc
mov
ret
addr16
dec
loop
push
mov
jg
ins
sub
and
jnp
sub
push
retf
movs
cs
test
std
fimul
pusha
jg
sbb
adc
mov
pop
xor
clc
jmp
xchg
scas
inc
inc
pmuludq
(bad)
adc
scas
mov
in
sub
mov
jle
loop
xor
push
xor
and
call
mov
or
push
pop
and
sbb
ror
jle
popf
mov
dec
jnp
adc
arpl
mov
lock
in
push
adc
jno
mov
jge
call
hlt
lods
or
cmp
inc
push
and
fcom
sub
ss
lds
xor
add
ret
popa
cdq
fmul
mov
xor
push
xor
adc
xor
rcl
int3
adc
int3
xor
or
xchg
movs
nop
dec
sahf
enter
add
cs
shl
and
jae
pop
push
cdq
les
in
movs
pop
int3
sbb
aad
mov
mov
and
sub
xchg
and
xchg
arpl
pop
xor
mov
jo
inc
pusha
mov
adc
pop
xor
(bad)
shl
inc
jb
rdmsr
imul
cmp
outs
and
mov
jo
bound
fistp
dec
ja
dec
sub
aaa
aas
(bad)
adc
loop
pop
mov
and
jb
addr16
in
popf
adc
dec
sub
mov
xchg
aaa
mov
imul
jo
js
data16
pop
or
add
std
aam
add
fcom
(bad)
je
hlt
and
in
mov
shl
dec
push
outs
jecxz
and
lods
in
out
xor
loopne
fcmovnu
or
push
or
jbe
retf
pop
and
adc
in
or
jl
xor
mov
repnz
sub
push
fadd
add
xor
jp
push
and
ins
mov
mov
and
enter
pop
pop
adc
adc
and
xor
mov
sub
jp
dec
popa
inc
stos
out
add
cmps
add
mov
xor
sbb
call
call
pop
(bad)
jno
mul
pop
add
cmp
push
test
in
mov
inc
lock
out
or
cld
in
cs
adc
test
popf
cmp
dec
push
cmp
test
popf
mov
push
inc
aas
xchg
clc
jg
bound
mov
dec
push
jns
mov
inc
and
and
inc
cmp
pop
push
ror
add
jne
push
and
aam
xor
push
cmp
jo
cdq
aaa
sub
pop
xor
mov
(bad)
and
mov
retf
xor
cld
add
push
jp
and
adc
mov
push
aaa
imul
or
sbb
push
push
adc
push
cmp
hlt
xor
and
nop
xchg
mov
retf
not
pop
pop
movs
sahf
mov
add
jle
test
test
push
retf
push
aam
xchg
movaps
sub
and
mov
jmp
(bad)
sar
arpl
push
xor
sub
add
addr16
cmp
(bad)
push
xor
pop
and
push
mov
in
sub
and
es
pop
inc
add
dec
and
push
sub
dec
ins
and
sub
mov
js
inc
es
cmp
xor
mov
xor
outs
adc
sub
test
fwait
sub
sub
xchg
pushf
shr
in
push
and
pop
fst
test
add
stos
(bad)
out
imul
add
fld
jae
or
mov
fild
xchg
cmp
popa
add
test
push
sub
and
or
test
aaa
enter
dec
push
cmp
sbb
cmp
adc
push
add
pop
sub
adc
add
pusha
inc
inc
sub
add
add
int
inc
mov
ins
and
adc
pop
xchg
jne
cmc
rol
pop
sub
push
mov
lahf
xor
or
inc
fsub
lds
dec
sub
adc
add
ror
(bad)
repz
sbb
call
xor
sub
xor
add
mov
adc
xchg
inc
out
pop
gs
inc
dec
mov
push
jns
adc
int3
dec
pop
rol
call
sbb
or
jb
leave
inc
iret
push
repnz
sbb
sbb
out
dec
push
mov
and
iret
retf
mov
xchg
push
sahf
mul
mov
xchg
hlt
mov
xor
hlt
push
loope
bound
popf
or
push
or
pusha
pushf
pop
jb
xchg
ins
inc
je
mov
dec
sub
add
xchg
pop
push
cmp
fsub
and
jge
jmp
xor
xor
sub
add
cmp
pop
dec
mov
mov
xchg
lods
cmp
in
add
es
mov
mov
xchg
ret
jmp
dec
cwde
fwait
cmp
push
mov
xor
xchg
push
sar
pushf
xor
xor
mov
add
clc
xor
out
cmp
sub
lahf
(bad)
in
and
adc
aam
sub
mov
adc
push
mov
shr
outs
mov
lods
cmp
mov
mov
cmp
aas
es
push
mov
sub
(bad)
data16
and
ja
cmp
or
sub
push
xchg
aaa
add
retf
mov
jle
inc
iret
and
dec
mov
in
mov
push
add
inc
xchg
rcl
pop
jecxz
push
(bad)
loop
push
and
sub
mov
enter
jno
mov
rol
lock
int
jns
ficomp
xchg
or
adc
mov
or
shr
sub
in
push
mov
push
xchg
fidiv
dec
jmp
test
jl
les
(bad)
ins
pop
aam
xchg
shl
test
bound
jmp
or
sub
loopne
inc
inc
mov
push
daa
pop
ret
inc
sahf
movs
cmps
lods
lods
mov
popa
xchg
movs
add
int3
mov
out
add
out
lods
test
mov
test
mov
jb
xchg
movs
movs
mov
leave
cmp
mov
add
cmp
xor
push
out
lahf
movs
dec
pushf
pushf
mov
add
cmps
bound
fimul
rol
les
(bad)
inc
cmp
sbb
lea
or
fstp
iret
adc
mov
hlt
xchg
out
fwait
rcr
mov
enter
das
or
pop
loopne
jl
call
xchg
sub
add
(bad)
jae
pop
dec
cmp
inc
or
xchg
pop
mov
jg
jl
jl
jmp
mov
add
jl
repz
jmp
mov
mov
mov
jl
or
inc
repz
test
and
inc
sub
ss
iret
dec
sub
sub
es
sbb
dec
mov
mov
xchg
and
push
xchg
aaa
mov
inc
sub
aaa
push
test
add
(bad)
(bad)
lahf
jne
aad
mov
lea
daa
cmp
daa
push
jb
loop
mov
mov
jmp
push
push
and
mov
xlat
jbe
inc
movs
xlat
add
jb
pop
das
push
sbb
or
add
push
push
call
add
movs
dec
dec
xor
ja
int3
add
sbb
hlt
faddp
movs
aaa
mov
dec
adc
ret
out
sub
cmps
pop
sub
pop
addr16
add
dec
cmps
sar
pop
outs
inc
and
int3
jp
add
inc
popa
add
mov
sbb
adc
or
enter
add
jno
es
cmp
jo
enter
dec
mov
dec
pop
sub
push
pop
fmul
cmp
std
cmp
dec
pusha
push
daa
fdiv
or
add
xlat
sbb
icebp
or
clc
std
pop
pop
cmp
rol
jmp
push
add
movs
cmps
inc
cwde
and
ins
in
js
cmp
push
mov
cmp
test
imul
cmp
xor
shr
rol
and
pop
cmc
pusha
mov
nop
or
mov
fdivr
mov
sbb
inc
cmps
(bad)
call
cmp
add
xor
mov
iret
add
fdiv
nop
out
add
cmp
ret
mov
cmp
stos
mov
adc
loopne
fcomp
loopne
or
and
loopne
mov
or
xor
sbb
ins
loope
add
inc
nop
test
add
ja
inc
les
cwde
add
xchg
cmp
adc
xor
cmc
sar
mov
lock
mov
loope
xchg
adc
lahf
and
loope
ret
mov
pop
dec
mov
mov
inc
pop
test
test
js
scas
inc
and
addr16
in
xor
dec
cmp
xor
mov
sub
jo
and
push
or
lock
test
lods
fild
and
dec
out
push
loopne
jmp
stc
imul
mov
dec
scas
xor
pop
sahf
push
test
or
pop
push
mov
pop
sub
and
and
mov
mov
or
repz
bnd
nop
fisub
inc
dec
pusha
ja
adc
inc
and
dec
push
jmp
addr16
sbb
adc
movs
adc
imul
fs
pop
or
lea
and
pop
or
mov
pop
shl
mov
jae
add
push
inc
sbb
ror
sahf
inc
dec
sub
jle
or
xchg
push
fidiv
pusha
in
push
imul
cdq
push
push
call
dec
call
test
shl
cwde
or
push
push
rcl
lods
retf
fmul
and
sub
rcr
xor
aam
and
sub
cld
xchg
enter
and
enter
inc
and
push
add
or
inc
mov
xchg
int3
pop
add
stos
add
repnz
inc
sbb
sbb
inc
es
inc
out
je
or
ins
cmp
shr
outs
inc
les
(bad)
daa
or
or
shl
jae
add
mov
arpl
dec
xlat
out
and
jecxz
sbb
mov
not
sbb
cwde
adc
out
call
jno
mov
fsub
cld
inc
dec
mov
jg
adc
push
shl
pop
adc
or
fidivr
mov
sub
xchg
hlt
sub
mov
addr16
add
mov
inc
sub
xchg
push
dec
iret
icebp
leave
scas
daa
fidivr
ins
inc
repz
mov
clc
daa
push
xor
jl
xor
out
cmp
push
xor
sub
mov
xor
or
pop
cwde
in
hlt
xchg
mov
push
adc
pushf
(bad)
jmp
inc
pop
(bad)
push
aaa
popa
ja
aas
jbe
mov
pop
inc
das
movs
mov
sbb
lahf
push
xlat
xor
push
outs
fld
sbb
ror
(bad)
rcr
iret
sbb
daa
mov
pop
adc
push
(bad)
aad
dec
mov
cmp
cmp
mov
pop
test
mov
sub
repnz
and
and
xchg
sbb
out
gs
sub
dec
jl
and
inc
lea
popa
adc
or
or
or
sbb
aas
rcr
push
sbb
cmp
cmp
xor
xchg
inc
inc
pop
push
cmc
sub
push
call
mov
jmp
push
sti
xor
std
fadd
ins
xor
sub
mov
or
mov
add
outs
inc
push
xchg
pop
or
pop
adc
inc
mov
lea
test
imul
pop
(bad)
outs
push
pop
xchg
pop
shrd
imul
inc
xor
outs
inc
ss
add
xchg
ret
dec
xchg
inc
xor
rcl
jmp
ja
rcl
pop
mov
xor
pop
push
sbb
(bad)
push
add
sbb
sti
fsubr
(bad)
or
pusha
dec
dec
and
lock
xor
ret
inc
push
or
push
mov
test
fild
and
inc
mov
adc
pop
dec
adc
add
adc
pop
xchg
arpl
jb
inc
add
mov
and
imul
in
mov
enter
adc
mov
inc
nop
(bad)
jge
out
dec
xchg
dec
(bad)
cmp
dec
adc
das
dec
add
or
mov
mov
cmp
dec
xor
jbe
inc
aaa
adc
or
or
dec
add
sbb
cmc
ficomp
dec
inc
dec
xchg
mov
and
movs
in
dec
dec
and
adc
clc
clc
inc
sbb
pop
shr
fcomi
imul
push
jmp
xor
in
sub
stc
movs
in
push
sub
sti
mov
nop
dec
sbb
or
lods
cdq
in
or
cmp
xor
mov
pop
add
push
lods
pop
outs
adc
stos
push
pop
mov
add
shl
dec
dec
popf
push
dec
inc
or
sbb
ins
dec
dec
inc
jmp
test
jmp
ror
jmp
or
and
mov
sbb
imul
imul
jns
in
iret
push
and
add
call
dec
push
pop
and
add
out
mov
in
or
addr16
jg
test
repnz
mov
mov
or
hlt
mov
ins
mov
call
cmps
pop
adc
ds
in
test
pop
pop
clc
add
xchg
pop
test
or
add
push
jmp
lock
adc
in
or
cmp
inc
or
jne
jne
or
and
frstor
mov
xchg
lar
cmp
add
add
(bad)
addr16
add
lea
pop
hlt
adc
and
pop
push
pop
dec
and
ins
jp
call
adc
dec
push
test
push
push
sbb
lea
sbb
lock
add
push
cmps
jo
ret
fild
push
cmp
dec
jb
aam
and
jae
(bad)
(bad)
mov
popf
adc
adc
test
adc
push
repnz
inc
cdq
add
dec
xor
jo
repnz
cdq
sub
pop
sub
fcomp
xlat
dec
dec
sbb
loope
xchg
pop
rcr
adc
sub
sbb
jmp
frstor
loop
inc
mov
lock
std
mov
sti
js
test
push
lods
inc
sbb
repnz
adc
ds
xor
fld
sbb
jb
sbb
push
fst
or
mov
cld
or
gs
push
imul
push
ret
push
dec
mov
pop
push
inc
pop
add
out
pusha
xchg
adc
cmp
and
popa
pop
mov
ss
les
or
ds
mov
js
pop
jno
dec
lods
(bad)
loop
pop
inc
cmp
inc
out
aas
cli
and
pop
push
dec
adc
xchg
das
lea
or
imul
sbb
cmp
or
dec
ins
push
es
mov
cmps
daa
cmp
jo
popa
or
cmp
ins
inc
mov
idiv
dec
sbb
or
pop
repz
aam
inc
and
leave
mov
sbb
scas
movs
or
sub
movs
leave
rcr
xchg
jns
scas
cmps
inc
push
jg
push
jo
scas
cmps
mov
js
mov
jne
leave
aam
addr16
sub
stos
push
push
add
(bad)
in
mul
cmp
(bad)
in
push
lods
sbb
ror
push
dec
lods
xchg
mov
dec
scas
rcl
xor
scas
lahf
pusha
pop
sbb
ret
and
mov
fs
xchg
jo
cmps
jo
pop
or
dec
mov
mov
add
push
mov
adc
mov
les
mov
cwde
or
jae
mov
sub
fsubr
mov
(bad)
leave
add
ins
inc
enter
jb
movs
or
push
pop
inc
cdq
fimul
jg
pop
shl
sub
(bad)
mov
lods
fs
mov
xorps
je
fs
mov
cmp
pop
inc
and
rol
push
(bad)
cdq
sbb
inc
xchg
xchg
aad
xchg
and
pop
mov
ja
and
ret
sbb
or
ret
outs
int3
push
leave
xchg
dec
int
sbb
inc
shr
and
test
dec
popa
imul
mul
cmps
rcr
and
pop
dec
add
xchg
aam
aad
push
(bad)
jg
and
dec
xlat
jle
jae
fcomp
sbb
dec
jae
(bad)
xchg
and
add
xchg
fist
or
fisttp
(bad)
in
cmp
or
ins
sbb
bound
add
call
add
xchg
mov
loope
add
arpl
mov
add
and
dec
sub
pop
out
xchg
mov
dec
jmp
dec
push
jmp
jg
in
mov
in
outs
imul
pusha
outs
out
imul
mov
push
gs
push
icebp
outs
bnd
sbb
daa
outs
repz
xchg
or
lods
daa
hlt
shr
outs
cmc
mov
and
inc
test
div
sub
add
outs
stc
(bad)
jne
lods
jbe
cli
pop
pop
xchg
or
jne
jo
sbb
das
jne
or
leave
push
vmwrite
pop
and
test
sub
(bad)
jns
add
les
std
add
mov
xchg
std
inc
cmp
jne
jl
mov
jnp
and
pop
add
pop
push
fimul
mov
fdivr
jmp
adc
or
repnz
add
xchg
and
add
outs
stc
mov
or
or
or
stc
or
or
xchg
pop
jne
test
push
pop
or
rcr
stos
movs
and
adc
ret
add
add
inc
mov
add
dec
loope
pop
jp
loopne
repnz
jbe
and
pop
imul
sub
add
xor
adc
addr16
push
sbb
push
ja
movs
mov
hlt
or
cmp
pop
out
inc
dec
pop
clc
das
inc
sbb
jmp
mov
adc
retf
outs
out
inc
add
jne
sub
xor
retf
sbb
mov
mov
adc
add
fisub
jne
into
sub
sbb
pop
or
adc
cwde
movs
hlt
add
sbb
rcr
ret
or
rcr
pushaw
adc
xchg
aas
and
sub
adc
mov
shl
push
jno
cmp
push
push
mov
jl
push
mov
cmp
jne
mov
jl
xor
add
lods
xor
jmp
inc
mov
or
test
sub
cmp
adc
cwde
cmp
jae
fdiv
pcmpeqd
mov
icebp
test
sub
dec
fmul
sub
adc
jle
add
inc
or
mov
inc
jmp
push
sbb
sub
pop
out
xor
or
nop
lock
shr
mov
jns
add
jb
inc
add
or
and
adc
rep
mov
cmps
and
popa
fnstenv
fbstp
les
inc
pop
dec
sahf
jmp
mov
out
or
sbb
mov
adc
or
popa
cmps
ins
sti
or
data16
test
retf
and
aad
clc
icebp
xlat
addr16
add
jg
into
ret
addr16
sub
ret
(bad)
into
sbb
sub
jmp
xor
enter
pop
and
cs
add
in
movs
test
mov
scas
sbb
add
jmp
dec
pusha
jl
int
in
jne
fisubr
shr
or
sbb
lock
pushf
popa
jb
or
lock
mov
imul
cmp
xchg
pop
xor
loope
icebp
sbb
(bad)
xor
sbb
scas
push
rcr
lock
or
js
call
xchg
jo
sbb
loope
push
mov
push
push
je
xor
mov
imul
xchg
mov
movs
(bad)
xchg
inc
xor
add
mul
mov
or
cld
add
pop
add
cmp
pop
dec
xchg
adc
jmp
lock
push
fbld
hlt
push
add
call
mov
in
dec
mov
push
push
xchg
lods
jp
mov
add
loope
ins
xlat
inc
cmp
test
inc
inc
sbb
or
aam
shl
adc
add
inc
or
push
loopne
or
or
aas
test
jg
jl
dec
sub
fwait
ins
loopne
push
mov
out
mov
cmp
push
popa
data16
sub
xchg
inc
inc
mul
test
sub
ret
gs
adc
outs
cmp
jmp
adc
imul
arpl
lock
call
cwde
(bad)
cmp
jle
xlat
sar
fldenv
retf
cld
shl
in
mov
icebp
add
(bad)
jge
pop
cmp
xchg
fs
mov
in
sysexit
mov
dec
bswap
sub
jmp
cmp
push
or
je
add
imul
mov
add
pop
test
imul
xor
sub
sub
pop
test
ss
mov
bound
mov
mov
aam
mov
or
jecxz
sub
or
mov
pop
test
cmp
sub
add
inc
pop
movs
ret
add
movs
and
ins
sbb
xor
icebp
hlt
cmps
(bad)
jl
jge
sti
aad
lods
xchg
lea
pop
and
adc
mov
pop
pushf
mov
sbb
adc
cmp
jne
call
pop
pop
add
ins
jmp
jne
mov
fisttp
adc
sub
movs
and
inc
movs
jmp
mov
(bad)
mov
(bad)
nop
inc
popf
cmp
(bad)
in
test
jne
jae
push
lods
jbe
or
sub
cmp
leave
mov
test
push
pop
add
adc
sbb
dec
xchg
vpaddusb
fcomp
call
and
pop
sub
pusha
(bad)
repz
mov
inc
lds
pop
inc
call
fild
hlt
imul
mov
(bad)
pop
clc
push
outs
dec
ret
sahf
cmp
dec
or
push
add
jl
fucomi
cld
cmp
cmp
pop
sbb
pop
nop
loopne
inc
cmc
rol
mov
cli
fsubr
or
in
pop
call
ret
fcomp
pop
sbb
inc
xchg
pop
sub
xchg
ret
pusha
(bad)
and
sub
out
and
dec
fxch
call
mov
arpl
loope
sub
int3
mov
shl
fild
adc
retf
add
pop
sub
cdq
push
hlt
in
xlat
pop
movs
add
stos
test
mov
ret
adc
call
mov
add
outs
dec
ret
int
lahf
dec
push
popa
xor
cmovne
xchg
push
cdq
fs
dec
jo
add
dec
push
adc
inc
cmps
in
xchg
and
jg
popa
test
xchg
(bad)
add
adc
into
xchg
aam
pop
test
pusha
xor
adc
sbb
xor
shl
mov
call
xor
adc
fld
cmp
sbb
add
lea
add
dec
js
xor
pop
pusha
jl
mov
push
cdq
shl
out
sbb
mov
dec
loopne
push
je
test
mov
or
test
lock
movs
sub
cmp
lods
pop
std
pop
jbe
pop
pop
rcr
je
das
ror
mov
cmp
arpl
je
push
mov
mov
arpl
enter
je
popa
sub
jge
or
jne
jge
pop
jbe
mov
jbe
movs
or
and
hlt
div
in
sbb
in
fdiv
xor
hlt
dec
dec
dec
push
pop
repnz
sbb
ss
shr
and
mov
pop
push
lock
adc
inc
lods
push
and
cmp
je
ja
call
sti
and
pop
xchg
fwait
dec
test
fwait
pop
or
jmp
lahf
(bad)
cmp
mov
push
dec
jno
cmpps
sbb
and
lock
loop
xor
and
push
adc
mov
inc
popf
mov
jl
out
cmp
jecxz
sub
adc
push
mov
in
adc
pop
mov
pop
gs
pop
push
add
dec
sbb
fs
dec
add
in
add
push
xor
push
add
pop
xchg
add
aam
or
push
and
retf
push
pop
out
ja
popf
pop
sbb
jae
std
xor
add
inc
push
add
adc
mov
jne
pop
jmp
fld
and
inc
xchg
and
sbb
mov
inc
cdq
dec
mov
aas
mov
inc
pop
sub
xchg
adc
ret
in
js
dec
mov
cwde
adc
movs
pop
movs
push
xor
sahf
rcl
inc
pushf
pop
xchg
sub
in
sbb
xor
sbb
int
mov
jmp
mov
fild
or
jle
iret
cmp
(bad)
mov
shl
pop
mov
or
jg
les
inc
xchg
dec
fcomp
cmp
fcom
dec
adc
jmp
jmp
dec
xchg
pop
rol
push
test
and
adc
out
pop
push
lea
mov
sub
imul
dec
jb
cmp
xchg
mov
and
push
xlat
adc
iret
inc
leave
nop
adc
mov
mov
sbb
int
loope
add
sbb
inc
sub
adc
pop
outs
xchg
inc
push
jb
mov
and
sti
mov
add
adc
in
xchg
sbb
sbb
inc
dec
imul
sar
add
es
mov
add
nop
inc
adc
cmp
mov
cdq
or
or
mov
cmp
shl
xchg
popa
cwde
adc
mov
sbb
ja
sbb
or
(bad)
call
shr
aam
imul
pop
xor
xchg
outs
lahf
add
add
push
jb
mov
popa
lods
xchg
xlat
daa
cmp
sbb
inc
pop
mov
cmp
(bad)
jmp
xor
dec
test
lods
sbb
pop
mov
adc
call
adc
mov
je
add
shr
and
ficom
neg
inc
jne
or
mov
in
test
push
mov
mov
ins
sub
mov
ror
xor
ins
xor
out
fiadd
mov
fidiv
mov
cmps
and
push
mov
dec
rol
sub
(bad)
(bad)
(bad)
jmp
inc
or
adc
aad
retf
lods
lds
jg
add
jle
je
dec
or
pop
adc
sbb
mov
push
dec
dec
dec
(bad)
xchg
mov
mov
ror
retf
and
adc
push
int
or
sahf
lds
dec
out
stos
dec
gs
pop
mov
lock
xor
sub
rcl
mov
mov
aam
or
adc
jbe
jmp
or
or
out
icebp
or
xchg
sub
cmc
pop
adc
ret
(bad)
xor
sub
fs
pushf
(bad)
loopne
jne
popf
add
pop
or
pop
daa
popa
and
ds
mov
inc
push
push
push
cdq
nop
cvtps2pi
in
pop
cdq
and
(bad)
mov
push
add
or
(bad)
jp
fsub
cmps
ds
inc
daa
popa
cmps
or
push
push
inc
xor
dec
popa
cdq
in
(bad)
not
gs
jb
and
mov
paddusw
pop
ins
jnp
mov
push
loopne
shl
fstp
cld
dec
jae
outs
mov
and
dec
fs
jno
sub
push
pop
jl
ret
ficomp
ja
jl
and
dec
xor
call
cmps
js
jl
jg
jge
mov
mov
enter
xchg
inc
and
mov
pushf
movs
xlat
push
pop
xchg
mov
push
adc
mov
mov
aas
pop
sbb
ja
adc
push
pop
add
pop
lods
stos
or
fisubr
mov
cs
sub
and
idiv
(bad)
leave
leave
leave
leave
out
jmp
leave
jmp
in
out
dec
loop
leave
out
rcl
(bad)
adc
mov
sub
dec
lods
jmp
xor
retf
je
or
or
shl
xchg
iret
dec
add
adc
add
sbb
add
add
push
enter
push
xchg
lahf
call
pop
and
xchg
mov
sub
retf
sbb
mov
push
or
jb
and
sar
(bad)
sub
dec
or
sar
jmp
add
movs
ins
cs
cmp
jb
inc
or
(bad)
adc
shl
cmp
sub
cdq
adc
div
mov
and
and
gs
arpl
push
and
lock
mov
jbe
adc
std
cmp
lods
imul
js
mov
cmps
ret
mov
add
es
js
mov
aaa
(bad)
clc
xor
pop
xchg
je
xchg
cmp
and
push
jmp
int3
(bad)
sub
imul
ret
ret
jo
lods
ins
shl
jno
inc
cld
mul
cmp
dec
cmp
je
(bad)
jmp
(bad)
fbstp
sahf
ss
inc
adc
push
xor
mov
xor
dec
fwait
pop
fmul
jmp
lods
pop
jne
mov
rcl
je
in
xchg
cmps
mov
mov
xchg
jns
add
sub
add
jmp
sub
outs
cs
sub
je
or
inc
iret
iret
je
sub
pop
jge
adc
addr16
retf
repnz
call
outs
data16
cmps
mov
jb
jne
xor
xchg
or
mov
pop
add
sbb
cld
inc
or
push
or
push
fwait
xor
mov
push
or
xlat
sar
adc
hlt
sbb
xchg
push
push
or
xlat
mov
aaa
push
les
aas
add
repnz
inc
inc
fbstp
jae
out
push
or
clc
or
xchg
push
jmp
mov
sbb
mov
adc
adc
xor
xor
and
jge
push
lock
jae
mov
outs
pop
fstp
or
pcmpeqd
mov
sbb
xor
mov
or
(bad)
loopne
out
and
xor
lock
add
xor
jne
push
or
push
xor
(bad)
mov
shr
xchg
sbb
sbb
xor
shr
aam
adc
or
and
inc
cld
add
repnz
rol
shl
mov
jnp
je
fcom
fcmovne
ds
cmps
lahf
or
data16
jne
das
fs
and
popf
cmps
cmp
add
(bad)
jae
sbb
sbb
sti
test
jb
dec
je
sub
fld
or
test
or
dec
daa
and
or
sbb
test
adc
add
in
xor
xchg
inc
(bad)
jne
sbb
dec
xchg
or
cmp
adc
shl
xor
cdq
xor
and
mov
fsub
push
add
push
das
movq
jl
mov
test
(bad)
outs
cld
sbb
pop
push
xchg
add
in
les
in
push
jno
jmp
inc
das
jmp
cmp
jmp
shl
or
test
(bad)
pop
pop
rcl
inc
sti
fadd
xchg
aam
mov
ror
inc
add
es
jmp
pop
les
and
daa
xchg
sub
getsec
dec
fmul
add
lods
pop
dec
shr
addr16
outs
adc
mov
cmp
test
sub
inc
adc
cmps
add
retf
xor
fst
ficomp
je
std
inc
adc
jmp
call
sbb
fdivr
add
shl
mov
inc
mov
repnz
add
add
xchg
pop
xor
pop
mov
sub
mov
das
cmp
ss
or
inc
and
cmps
nop
test
out
mov
lods
iret
aaa
jmp
jmp
loope
add
dec
xchg
int
sub
nop
push
dec
or
push
cmp
dec
leave
les
std
inc
scas
mov
or
(bad)
push
clc
add
mov
mov
sbb
push
dec
int
and
shr
cli
sbb
adc
aas
cmps
or
sbb
sub
or
je
sar
sub
es
xchg
xor
pop
test
cmp
jle
dec
mov
xchg
cmp
sub
gs
scas
and
cli
push
sub
inc
or
and
movs
and
jl
add
clc
and
and
ins
mov
xor
pop
adc
xor
mov
xchg
(bad)
shl
and
sbb
sub
ret
bound
mov
lahf
add
iret
sbb
(bad)
adc
packssdw
mov
je
js
loopne
push
mov
jle
adc
cmp
sub
sahf
jg
out
or
mov
xor
pop
mov
aas
xchg
loopne
das
xchg
mov
icebp
clc
pushf
and
cmp
lock
ror
push
dec
or
loop
iret
xchg
hlt
movs
in
test
lock
sub
xor
pop
mov
xchg
dec
mov
fs
sahf
in
call
cmps
imul
(bad)
pop
xchg
in
mov
(bad)
les
inc
shl
jp
adc
sub
mov
sbb
cmp
inc
push
nop
mov
push
outs
xchg
add
adc
pop
call
pop
and
cmc
inc
cwde
push
push
or
sub
out
adc
leave
inc
or
and
mov
add
bound
add
lea
test
loopne
push
icebp
call
add
inc
dec
pop
mov
jno
fcmovnb
pop
aam
or
mov
push
sbb
out
mov
loopne
dec
mov
or
mov
add
or
adc
or
jne
shl
sti
lea
popa
clc
or
and
loope
dec
mov
cs
fcom
shl
mov
add
popa
sbb
xchg
mov
movs
push
test
pop
leave
and
and
xchg
js
or
je
mov
xor
movs
test
xchg
leave
repz
sbb
push
dec
ins
push
ret
push
xchg
das
add
push
adc
fld
imul
das
loope
ds
push
cmp
nop
jmp
fimul
arpl
add
jmp
ror
shr
jg
ret
jo
jmp
push
lock
out
jns
jmp
xchg
push
add
or
scas
call
push
or
ss
loop
sbb
out
push
dec
fst
and
dec
inc
adc
aas
pop
jns
sbb
aaa
adc
xor
popa
aaa
or
jecxz
sub
or
mov
and
test
sbb
sbb
cmps
enter
mov
dec
xor
adc
jge
pop
mov
sbb
adc
or
mov
sbb
sub
mov
aam
xchg
mov
xor
adc
cmp
data16
xor
rcl
xor
add
jecxz
nop
cmp
fmul
dec
or
mov
xor
jbe
mov
lock
xor
dec
jnp
adc
sub
inc
jne
pop
(bad)
mov
(bad)
neg
aad
or
mov
xchg
and
cs
shl
mov
inc
int
and
jne
cli
inc
adc
sub
(bad)
mov
xor
out
or
push
or
mov
mov
push
adc
lahf
fwait
hlt
dec
aaa
movs
arpl
repnz
xchg
movs
pusha
test
push
pop
lock
ds
mov
jmp
cmp
sti
add
repnz
cmp
js
fimul
jmp
and
je
clc
lds
pcmpeqb
and
inc
fmul
imul
jne
test
lahf
and
push
add
mov
shl
sbb
jge
fs
or
int3
pop
push
test
imul
pop
je
mov
mov
and
add
cs
sbb
mov
movs
shl
push
pop
cld
test
jbe
jb
mov
ds
je
movs
cmp
outs
xchg
movs
loop
pop
and
mov
xchg
out
shr
inc
out
add
jmp
adc
and
das
popf
xor
lock
xor
sub
aaa
jl
loope
gs
lock
retf
in
inc
icebp
lock
and
scas
test
sbb
cmp
ret
in
call
in
or
shl
sbb
cmp
add
call
jmp
popa
jnp
add
xor
fild
adc
sti
mov
in
mov
adc
inc
cmp
pop
push
xor
cs
inc
outs
outs
bound
cmp
imul
fs
mov
adc
jmp
mov
aam
add
fcomp
inc
in
cs
sbb
test
(bad)
xor
sbb
mov
enter
add
add
inc
push
loopne
dec
fdivr
sbb
add
jb
fdivr
test
test
or
or
js
dec
or
dec
idiv
push
dec
(bad)
adc
add
nop
mov
xchg
shr
fld
jmp
retf
xor
ja
xor
jno
ins
and
dec
loopne
stos
js
iret
ret
xchg
imul
push
(bad)
adc
push
imul
dec
(bad)
xchg
lahf
push
pop
les
lock
lahf
xchg
mov
sub
lods
xchg
or
cs
or
push
add
lea
ret
ss
pusha
dec
leave
mov
and
popa
mov
neg
sbb
(bad)
rcr
push
sbb
and
enter
fiadd
in
mov
test
adc
popf
mov
add
test
adc
sub
inc
pop
or
pop
xlat
mov
cmp
fld
xor
pop
jne
mov
or
add
pop
enter
dec
fmul
push
push
scas
call
not
shr
push
dec
lods
xchg
sub
fcomi
loopne
ins
xchg
cmp
xor
jge
pushf
call
icebp
and
imul
pop
loope
dec
lea
lea
mov
add
and
neg
adc
movs
adc
xor
sub
push
movs
and
or
adc
cmp
adc
lock
je
sub
cmp
je
mov
cmp
jle
and
fimul
or
sahf
arpl
and
push
add
add
inc
(bad)
mov
lea
xchg
pushf
xor
sub
sahf
xor
mov
xor
ror
inc
dec
ror
push
jo
int
stos
or
int
push
fs
cli
push
scas
lea
and
xchg
(bad)
(bad)
mov
cmp
pop
dec
bound
sbb
mov
(bad)
cmp
test
cmps
xor
xchg
adc
test
repnz
mov
pop
add
sub
cmp
xchg
ins
popa
push
mov
fmul
add
out
cs
mov
and
mov
or
mov
push
cli
sbb
jge
shl
sub
stos
push
xor
sub
cmp
clc
js
addr16
mov
scas
adc
xor
pop
sbb
sbb
test
pop
mov
or
fld
arpl
cmp
cmp
dec
cmp
(bad)
jnp
scas
sbb
sub
out
sub
mov
inc
test
in
in
sbb
and
push
jo
lea
pop
or
or
sub
rcr
mov
int3
mov
xchg
je
mov
xchg
lds
pop
or
fld
push
xchg
outs
ret
sub
stc
add
add
imul
mov
jbe
pop
pop
sub
sbb
adc
dec
or
push
adc
pop
push
cmc
fldcw
sub
loope
jbe
add
xor
and
dec
push
jnp
and
fstp
test
data16
int3
xchg
hlt
sub
mov
fist
and
rcr
fwait
jns
and
call
rep
je
sbb
push
movs
loopne
mov
sub
test
add
and
and
sub
push
or
cmp
call
ud0
or
and
push
jle
inc
and
sub
jp
inc
icebp
push
les
arpl
dec
push
push
inc
push
sahf
out
dec
xchg
cmp
xor
sbb
cmc
mov
push
fnstsw
mov
inc
mov
push
push
int3
daa
or
clc
movs
aas
lock
in
push
movs
hlt
cdq
rcl
xchg
mov
outs
lock
fidivr
jns
push
push
push
mov
add
sub
data16
xor
push
outs
mov
jnp
scas
mov
loopne
mov
xor
xchg
ret
cwde
dec
cwde
rol
jl
test
push
add
fisub
addr16
ss
(bad)
dec
dec
mov
call
outs
mov
lods
xchg
cmps
sbb
add
mov
imul
movs
ds
inc
jno
lods
push
out
jns
out
cmps
pop
cwde
ror
ds
push
es
dec
mov
cmp
and
cld
push
pusha
add
xchg
jne
test
jne
lods
jne
and
dec
cs
cmp
in
jne
in
xchg
or
jae
loopne
in
cld
sbb
(bad)
mov
leave
and
aam
jb
and
aam
xor
iret
int3
enter
int3
leave
iret
in
xchg
jmp
outs
(bad)
sar
rol
cs
iret
mov
mov
dec
push
fwait
cmps
mov
mov
cwde
lahf
repnz
mov
ficom
mov
sub
and
dec
sbb
rcl
push
test
jno
imul
sub
call
adc
into
jge
stc
lea
call
mov
test
add
xor
fiadd
mov
mul
in
dec
cld
mov
sbb
inc
adc
outs
mov
data16
pushw
or
dec
inc
iret
into
test
cmp
add
mov
add
mov
lods
cmp
mov
scas
dec
cmp
or
push
mov
in
adc
pop
imul
movs
ret
out
push
add
jmp
ins
add
sbb
out
fucom
inc
ss
inc
cmp
test
sbb
xchg
je
add
bound
inc
inc
std
dec
loop
or
lods
mov
movs
xchg
inc
add
and
jae
sti
inc
cwde
add
mov
fs
ror
fwait
or
mov
dec
mov
les
test
mov
jne
sbb
mov
(bad)
xchg
mov
add
mov
fstp
pop
and
in
push
dec
out
jne
fisubr
mov
popa
mov
jne
adc
adc
cmp
nop
adc
and
outs
xchg
rcl
fild
or
jmp
and
adc
mov
call
sub
ficom
call
loope
dec
and
mov
lock
jp
(bad)
lods
or
push
sub
shl
sub
or
int3
pop
jmp
cmp
adc
sub
les
addr16
xchg
lods
add
leave
mov
jecxz
test
xlat
cs
leave
dec
fsubr
mov
jp
mov
(bad)
shl
sahf
sbb
call
xchg
add
jno
fcom
or
and
loopne
mov
outs
jmp
xor
in
loopne
push
(bad)
movs
pop
sub
push
and
mov
push
push
in
inc
push
fs
xchg
sub
cmp
(bad)
jmp
jns
fadd
dec
adc
cmp
retf
ret
inc
push
cmp
xor
mov
mov
add
test
movs
cmps
fcmovnb
adc
sbb
xor
rcl
pop
cmp
dec
pop
xor
(bad)
xlat
rcr
jnp
pop
dec
addr16
lock
into
inc
ss
inc
cmp
pushf
rcr
lods
push
jb
add
dec
sbb
push
sbb
push
ffree
or
mov
movs
xchg
test
shl
aaa
pushf
and
jbe
mov
push
sar
sbb
push
adc
xchg
or
cmp
adc
(bad)
sub
or
jmp
pushf
cld
xchg
pop
xlat
push
and
outs
adc
cmp
mov
fiadd
in
(bad)
sub
popa
push
xchg
inc
xchg
cmps
and
add
mov
add
jecxz
ss
and
jge
(bad)
popf
movs
cmpps
mov
nop
inc
scas
test
jae
loopne
enter
ret
mov
xlat
xor
pop
dec
test
inc
fistp
or
push
adc
dec
je
push
and
call
pushf
fcomp
fsub
cmp
add
pop
push
push
xor
es
shl
push
rol
mov
cmp
sbb
ror
jne
and
sbb
jle
nop
push
or
pop
push
mov
sub
lock
jmp
pop
cld
sub
push
pop
daa
mov
jb
add
mov
les
mov
dec
inc
adc
xor
fistp
mov
aaa
movd
jmp
sbb
xlat
mov
pop
repnz
les
mov
or
test
adc
ret
sar
mov
and
push
jecxz
test
sub
aaa
sahf
mov
cmp
inc
mov
js
sbb
enter
mov
and
(bad)
enter
xchg
rcl
shl
xchg
fsub
inc
dec
and
or
jb
mov
ds
and
mov
mov
jo
sbb
into
dec
test
dec
loopne
(bad)
push
shl
ret
movs
sub
outs
outs
outs
jns
add
outs
jne
add
clc
inc
mov
dec
lea
xchg
loopne
push
push
sub
sbb
test
mov
mov
aas
or
scas
push
outs
data16
pop
or
push
out
push
pop
mov
cs
add
test
or
xor
mov
je
xor
mov
sbb
and
pop
sbb
sub
inc
xor
idiv
add
sub
out
in
fistp
and
sub
loope
jne
jle
or
fisubr
mov
sti
dec
mov
ss
jp
jno
out
pop
sbb
and
daa
es
add
ins
ins
add
es
mov
add
cmc
lea
push
shl
je
lahf
ins
mov
pop
xor
push
fs
neg
ins
inc
ins
cs
and
sub
fwait
and
cmp
dec
xor
in
sbb
mov
lahf
lods
out
adc
lock
loope
or
ficom
sub
out
bound
mov
ret
adc
mov
jnp
test
outs
stos
rol
nop
cs
sbb
dec
add
sbb
adc
add
add
ffree
(bad)
xor
push
push
push
cmp
arpl
lea
adc
mov
popa
and
addr16
nop
mov
pop
inc
nop
fstp
aas
mov
fdivr
and
and
inc
lds
test
mov
pop
retf
icebp
shl
outs
outs
nop
nop
dec
push
sbb
mov
imul
and
xor
movs
shr
retf
(bad)
stc
ins
dec
movs
test
lock
inc
cmp
sar
nop
aam
mov
sbb
inc
mov
in
(bad)
sar
in
adc
sbb
and
out
or
push
sub
sub
sbb
push
mov
jno
pop
test
xchg
sbb
jecxz
fwait
jge
xchg
sub
cmc
jge
inc
xchg
nop
sub
stos
or
stc
pusha
ja
add
repz
sub
push
jo
enter
arpl
inc
pop
adc
loop
and
addr16
xor
cmp
dec
mov
push
or
rol
mov
add
imul
cmp
push
jmp
or
mov
push
imul
sbb
xchg
adc
leave
cli
mov
pop
mov
xor
mov
pop
or
popa
test
call
repnz
mov
call
mov
(bad)
jmp
or
rcl
outs
mov
sbb
movs
adc
jns
nop
cld
mov
and
stc
aad
fcom
dec
(bad)
sbb
sbb
lods
adc
inc
or
mov
cmps
add
imul
inc
and
xor
mov
daa
sbb
pop
fld
sbb
imul
adc
xchg
adc
or
or
je
push
ret
bound
retf
and
hlt
adc
dec
retf
cmc
aas
and
outs
(bad)
test
dec
jge
out
jbe
pop
ror
daa
(bad)
mov
dec
sub
and
popf
xchg
sbb
les
add
xchg
cs
dec
mov
movs
ja
jno
add
mov
loop
test
xchg
mov
fcmovnb
sub
push
or
and
push
enter
mov
js
scas
sbb
adc
add
ins
xor
xchg
mov
mov
jbe
enter
push
sub
rdtsc
test
daa
jno
ror
and
push
add
add
pop
shl
neg
push
adc
inc
loope
jmp
sub
mov
mov
sbb
fdiv
ror
shr
sbb
xor
ret
loop
mov
xchg
cwde
inc
mov
push
fdivr
mov
fadd
cli
add
fadd
mov
in
and
dec
and
iret
fwait
mov
dec
lock
aas
push
mov
mov
mov
les
fcomp
(bad)
cmp
aaa
push
in
mov
aaa
xchg
das
push
lods
mov
mov
std
inc
mov
dec
call
nop
(bad)
xor
xchg
ret
jmp
mov
leave
and
ja
adc
xchg
cmps
inc
cmp
dec
ds
les
sub
and
and
adc
jmp
mov
add
push
fidiv
and
sbb
push
mov
dec
or
or
lock
mov
and
aaa
and
xchg
je
xor
imul
jno
js
dec
and
sbb
les
aaa
imul
ror
pop
rol
pop
sbb
mov
test
fcom
inc
and
sbb
mov
dec
cmp
push
add
cwde
lock
xchg
jo
cmps
aas
call
adc
mov
call
fldenv
add
mov
(bad)
push
ret
add
sbb
push
in
lods
shl
lahf
or
and
or
mov
cmp
into
add
inc
imul
sbb
ss
sbb
sbb
mov
imul
add
jge
xchg
xor
add
nop
cdq
pushf
call
sub
paddq
nop
pop
scas
jae
mov
les
inc
test
mov
fisttp
adc
mov
movs
mov
mov
mov
pop
pop
fldcw
test
mov
mov
xchg
enter
ss
mov
loopne
xchg
call
fsub
adc
adc
jl
fist
test
repnz
cmc
jne
movs
ror
int3
test
and
enter
jb
je
lock
add
rcl
push
rcr
imul
or
mov
out
jl
and
inc
outs
sbb
push
fisttp
mov
and
mov
push
inc
pop
popa
mov
pop
cmp
jb
sub
pop
inc
mov
inc
lods
push
sahf
push
in
mov
(bad)
repnz
repnz
pushf
mov
movs
loopne
mov
and
cwde
mov
xchg
lods
cmp
adc
mov
mov
mov
scas
pop
(bad)
xchg
xor
lods
sbb
jns
mov
movs
test
inc
fwait
sub
pusha
aas
test
test
adc
gs
lds
sbb
jbe
popa
push
les
and
jno
aad
int3
aam
int3
ret
jo
ret
movs
fist
adc
mov
lds
scas
cwde
sbb
repnz
mov
push
jge
nop
das
xchg
mov
into
adc
(bad)
jno
int
xor
inc
mov
shr
xor
test
adc
mov
push
and
loopne
stc
out
lds
pop
ficom
and
sub
jl
arpl
and
mov
sub
mov
retf
cmp
push
xchg
adc
pop
mov
xor
pop
inc
sub
lds
addr16
out
cmp
sub
aas
mov
das
and
(bad)
jg
sub
aam
cmp
inc
add
push
fs
pop
popf
push
pop
pop
cmp
pop
jae
ins
mov
xchg
stos
jae
adc
push
and
inc
and
jae
aaa
mov
aam
aam
iret
addr16
adc
inc
sbb
mov
push
xlat
and
jmp
jnp
add
add
cmps
push
mov
xchg
out
or
pop
jmp
pop
cmps
lahf
(bad)
int
push
push
pop
leave
cmp
jmp
pop
dec
pop
lahf
jne
fbld
mov
dec
sti
or
sub
cmps
lods
adc
and
and
(bad)
enter
outs
test
jne
xor
ret
adc
mov
xchg
xchg
or
lods
pop
jl
mov
ja
test
adc
setp
pop
test
or
add
and
popf
pop
jmp
mov
adc
mov
popf
cmp
sub
mov
imul
loopne
stos
in
rcr
and
clc
jecxz
arpl
jecxz
out
xor
popa
sub
jne
jmp
fisttp
add
pop
mov
push
adc
je
jge
cs
add
dec
popw
es
ins
xchg
inc
pop
add
fdivr
and
dec
lea
repnz
in
jb
mov
daa
add
inc
inc
in
or
jl
adc
add
push
dec
sbb
lahf
(bad)
pop
and
and
sub
push
cmp
cwde
lahf
mov
mov
inc
xchg
adc
or
ins
sub
fs
mov
xor
push
int
push
es
hlt
das
push
mov
pop
add
ins
jmp
ins
or
add
pop
enter
cmp
mov
int3
mov
mov
les
add
inc
(bad)
int
mov
lds
jnp
or
icebp
mov
add
in
jle
dec
jne
sahf
push
call
xchg
arpl
daa
push
shl
daa
daa
mov
paddq
(bad)
xlat
daa
daa
daa
daa
fcomp
fcmovu
daa
daa
daa
daa
(bad)
(bad)
daa
daa
daa
daa
rol
ret
daa
daa
daa
daa
(bad)
(bad)
daa
daa
daa
daa
enter
daa
daa
daa
daa
int3
int
iret
daa
daa
daa
daa
mov
mov
daa
daa
daa
daa
mov
mov
mov
dec
mov
mov
dec
xor
sbb
pop
or
inc
adc
sub
inc
call
ffreep
pop
mov
adc
push
retf
out
test
scas
or
or
fild
and
jo
jnp
add
and
daa
in
cmp
cmp
push
enter
out
cmp
mov
or
and
pop
fild
and
add
add
sbb
(bad)
xor
dec
popa
jo
cmovge
mov
out
lock
dec
aam
cmp
adc
ds
xor
dec
push
cs
dec
or
xor
mov
adc
sub
adc
fsub
imul
jg
out
inc
clc
xor
cmp
int
es
push
int3
xor
sub
pause
fild
and
jl
xlat
pop
rcl
nop
ins
aad
and
ss
xchg
adc
fbld
xor
ins
push
jo
dec
cmps
cli
fimul
lock
mov
push
or
jg
je
outs
jae
inc
sub
ins
dec
and
add
mov
scas
pop
inc
(bad)
outs
in
mov
in
xor
sbb
repnz
push
adc
jg
pop
xor
ins
nop
cmp
loope
mov
add
aas
ds
fdivr
dec
mov
addr16
jo
data16
xor
mov
enter
or
inc
inc
push
xor
movs
jne
pop
and
fsubr
jb
xlat
aam
cwde
cmpps
lock
(bad)
sbb
scas
loopne
test
dec
push
adc
ret
pop
or
popa
outs
test
adc
icebp
add
and
adc
dec
sub
shl
aam
call
mov
bound
mov
adc
mov
int
mov
lock
inc
fild
lods
sar
pop
pop
inc
dec
test
movs
aad
sbb
mov
mov
and
mov
mov
push
pusha
or
lahf
aad
mov
pop
fnstenv
mov
xor
jnp
fdivr
jnp
pop
and
pop
add
es
pop
adc
lea
ror
imul
push
aaa
lea
adc
push
adc
ins
ins
cld
outs
push
mov
pop
lods
ror
cmp
lea
movs
fimul
mov
dec
neg
add
cs
push
ror
push
add
inc
test
inc
or
ror
mov
cmps
aas
adc
and
push
addr16
ret
or
push
(bad)
iret
les
push
loopne
sub
pop
adc
leave
sub
mov
js
xchg
push
jo
or
sub
adc
xchg
pop
pop
cmp
and
lock
fcomp
clc
loopne
sbb
clc
xchg
xor
inc
mov
push
dec
push
dec
outs
outs
jo
sbb
bound
push
js
cmps
or
push
enter
frstor
lock
ja
xchg
push
mov
fiadd
push
jmp
(bad)
(bad)
pop
repnz
fisubr
pushf
pushf
add
xor
hlt
mov
inc
cmp
dec
add
xor
xchg
sahf
lock
sahf
sub
enter
pop
movs
aam
sub
push
mov
jo
dec
ins
out
jo
das
mov
ss
push
xor
mov
ror
fidiv
aas
das
shl
lods
inc
xchg
pop
and
loop
js
mov
fild
into
sub
(bad)
loopne
fmul
dec
call
jns
les
cwde
fidivr
sbb
mov
fdivr
jnp
push
clc
cdq
lods
push
mov
pusha
sbb
out
outs
fsubr
enter
loopne
int3
fimul
adc
push
fwait
dec
mov
mov
mov
loopne
adc
jecxz
outs
sbb
int3
or
mov
cs
loopne
stos
sbb
stos
pop
gs
out
(bad)
adc
aad
jne
add
dec
inc
cmp
mov
imul
lock
fdiv
in
dec
es
or
mov
and
icebp
out
xchg
icebp
adc
dec
gs
leave
test
je
arpl
gs
hlt
retf
and
repnz
pop
repnz
mov
in
repnz
out
loop
loop
sahf
adc
sbb
outs
arpl
jmp
jg
jbe
push
add
fsub
fwait
jp
rol
add
imul
imul
mov
add
jnp
pop
adc
mov
paddd
cmp
jne
(bad)
mov
dec
std
push
(bad)
sbb
ret
(bad)
movs
xor
xchg
add
xchg
into
int
hlt
dec
shr
xchg
push
and
xor
int
jbe
enter
push
out
rol
add
xchg
mov
icebp
ins
add
dec
clc
inc
add
mov
add
ror
gs
and
sbb
retf
mov
push
pop
inc
add
or
stc
cs
mov
xchg
(bad)
adc
nop
mov
or
adc
push
daa
aaa
fnstcw
lods
in
ins
fadd
adc
mov
call
div
sub
or
jmp
dec
or
add
inc
popf
mov
mov
lahf
ret
loopne
xchg
or
(bad)
mov
dec
shl
mov
add
pop
aaa
in
cvtpi2ps
pop
int3
xor
push
add
sbb
and
in
mov
push
sbb
jg
adc
or
(bad)
nop
push
or
add
(bad)
hlt
pop
mov
jl
jbe
in
cmp
ss
sti
jp
pop
fiadd
or
jge
test
jnp
add
arpl
fadd
cmps
rol
push
ja
xchg
xchg
xchg
sar
add
or
sbb
adc
pop
shl
arpl
(bad)
fidiv
movs
and
or
iret
inc
fadd
inc
dec
dec
add
sbb
je
mov
cs
(bad)
ins
dec
(bad)
xlat
mov
mov
outs
mov
add
cdq
lock
pop
cmps
test
sub
mov
jmp
das
inc
enter
mov
mov
inc
pop
test
(bad)
in
add
mov
test
dec
add
jmp
inc
mov
sub
das
sub
push
daa
pusha
(bad)
rcr
push
or
ret
adc
push
xchg
fsub
pop
jbe
ror
xchg
inc
pushf
inc
fisttp
(bad)
push
jmp
mov
and
jmp
push
or
push
out
iret
mov
inc
sahf
sub
sub
jmp
inc
dec
ss
add
inc
add
ret
sbb
xchg
(bad)
mov
cmps
push
dec
mov
loope
or
(bad)
(bad)
pushf
mov
jmp
dec
adc
pop
add
add
aaa
and
pop
adc
or
add
pusha
adc
hlt
mov
sub
mov
mov
push
nop
cmp
lods
nop
xchg
enter
push
jmp
push
nop
push
xor
mov
loope
call
(bad)
dec
cmps
push
cwde
inc
das
push
fdiv
and
jno
nop
aas
mov
cld
jae
xchg
mov
and
fs
sbb
inc
xchg
mov
inc
mov
(bad)
adc
icebp
das
stos
add
not
and
ins
ficom
in
mov
add
push
dec
loop
cmp
fwait
or
lock
inc
push
sub
movs
mov
and
loop
inc
fild
mov
adc
sub
daa
leave
out
retf
aaa
and
pop
dec
add
mov
cmp
or
xor
xor
adc
mov
mov
or
and
add
adc
idiv
xor
cmp
or
call
cli
add
pop
ins
scas
dec
sub
aam
je
les
and
cdq
or
out
das
or
inc
arpl
cs
rol
js
out
idiv
jmp
add
imul
push
es
cli
add
fisub
jp
sar
push
jl
or
and
mov
jmp
jp
sbb
test
and
adc
add
push
adc
sub
add
xchg
and
sbb
push
xor
cmp
in
inc
scas
inc
dec
sub
jg
movs
movs
lds
adc
add
sub
lea
add
sbb
mov
xor
cld
lock
xor
xor
cmp
mov
jmp
js
out
lds
add
add
push
sbb
mov
and
push
inc
dec
bound
es
push
ror
add
ins
add
push
and
xor
dec
sti
mov
adc
push
jnp
cmps
mov
xchg
xor
sub
push
outs
add
call
scas
icebp
add
sti
in
mov
ss
jle
xchg
and
xor
retf
test
add
jmp
inc
pop
xor
xor
xchg
shl
sbb
and
aas
fisttp
das
xchg
movd
adc
das
sar
jmp
retf
mov
add
mov
xchg
sbb
in
add
mov
dec
clc
add
sbb
add
mov
xor
push
xlat
sbb
fmul
dec
retf
or
pop
hlt
ror
xor
mov
jo
add
and
xor
add
pop
push
and
cmp
add
adc
test
xor
or
push
pop
pop
pop
mov
add
sbb
imul
or
imul
sar
push
loopne
dec
add
rcr
cwde
dec
or
test
movq
das
add
dec
mov
fidiv
jne
mov
cmp
div
push
jg
mov
add
inc
add
outs
add
(bad)
jmp
call
add
ret
repz
js
xor
daa
or
clc
jns
add
push
movs
or
dec
sbb
gs
mov
out
or
push
dec
jnp
repnz
dec
loopne
(bad)
fcom
push
sub
cwde
sti
pop
push
inc
ins
outs
jns
pop
imul
or
jne
test
call
fs
(bad)
je
add
loopne
add
call
add
div
idiv
mul
in
mov
add
add
ret
jle
pushf
jne
imul
cmc
test
in
push
imul
daa
dec
pop
add
mov
in
push
fmul
dec
jne
imul
jl
repz
retw
and
fisub
cmovge
mov
and
hlt
inc
jb
in
jae
cld
xor
call
clc
sahf
in
inc
enter
out
adc
inc
jle
out
(bad)
push
int3
adc
imul
inc
test
ja
inc
or
ja
adc
pop
dec
cmp
jo
test
push
jne
(bad)
jecxz
mov
pop
test
sbb
inc
and
dec
out
dec
(bad)
jmp
push
cs
sbb
mov
dec
getsec
add
nop
push
jmp
xchg
jg
pop
fsubr
test
out
cmps
mov
or
adc
xor
and
sbb
neg
mov
in
push
add
fisttp
xor
dec
mov
add
rcl
xor
jge
pop
lock
add
outs
jl
xor
add
pop
or
adc
ret
sbb
popa
adc
add
adc
inc
adc
sbb
add
mov
test
adc
xchg
sub
dec
dec
sub
imul
add
and
mov
adc
fistp
sar
retf
sbb
mov
(bad)
dec
dec
call
cmp
(bad)
sub
cmp
fs
sub
xor
nop
xchg
sub
adc
addr16
or
pop
or
mov
loope
sbb
sbb
pusha
jle
sub
and
je
add
jge
pushf
je
mov
add
push
sbb
mov
xor
dec
mov
and
out
add
xchg
retf
in
sub
sub
movs
fwait
int3
xor
scas
inc
pop
cs
retf
cmp
xor
cs
retf
xor
aaa
cdq
dec
xor
dec
(bad)
push
pop
xchg
cmp
jnp
jne
or
and
add
and
adc
pop
xchg
xchg
stos
stos
ror
ja
ret
test
mov
inc
and
enter
test
lahf
movs
mov
cmp
inc
inc
imul
mov
cs
out
jb
adc
and
and
lahf
jmp
inc
nop
add
ins
imul
addr16
add
out
jmp
mov
ja
or
fdiv
adc
mov
push
mov
(bad)
dec
cs
xor
mov
inc
inc
mov
pushf
dec
dec
sub
mov
push
mov
sub
and
fmul
inc
add
add
adc
sbb
nop
sbb
and
add
sub
xchg
scas
push
xor
mov
imul
and
xchg
dec
and
mov
sub
sub
mov
sbb
mov
mov
scas
sbb
loop
xchg
imul
cmp
jo
mov
push
aad
and
lods
lods
addr16
adc
sahf
add
hlt
push
cmp
hlt
hlt
hlt
hlt
or
les
adc
hlt
in
pop
sbb
or
mov
mov
cmp
sub
push
enter
ds
xchg
in
movs
jge
inc
push
or
imul
and
push
or
dec
loope
and
cmp
inc
adc
or
cmp
jns
xchg
xchg
inc
dec
dec
popa
push
xor
mov
stos
sub
stos
rol
xor
jo
adc
xor
rol
fidivr
retf
sub
adc
and
jo
sub
pop
xor
and
adc
inc
mov
and
dec
sub
dec
and
xor
mov
mov
push
mov
and
inc
or
sub
nop
retf
and
push
and
jb
stc
xor
push
mov
pusha
sub
shl
mov
ins
and
pop
pop
push
and
jne
and
enter
enter
sub
and
inc
xor
ret
push
nop
push
clc
mov
push
or
jo
xchg
fwait
es
out
rol
xlat
outs
or
call
mov
add
adc
ficom
fcmovnu
ins
dec
xchg
mov
jo
or
jne
mov
mov
(bad)
out
fld
sbb
enter
add
test
mov
xchg
and
outs
je
or
cmp
sbb
add
sub
mov
fiadd
push
and
adc
adc
es
mov
adc
xor
push
pop
clc
sub
push
dec
sub
mov
adc
in
adc
sub
adc
sbb
add
and
sbb
sub
nop
add
cmp
pop
sbb
add
adc
inc
xor
out
push
cmp
push
movs
stc
cmc
xchg
sub
fcmove
mov
mov
add
sbb
fldenv
shl
xor
xor
xchg
mov
fstp
jnp
and
fwait
sbb
pop
in
outs
movs
imul
sbb
adc
ficomp
(bad)
sbb
cmc
sub
mov
jle
mov
loope
add
scas
adc
mov
pop
add
in
jg
(bad)
fs
and
sti
jmp
add
fstp
imul
cmp
lds
add
mov
jns
nop
popa
and
inc
call
xor
rcr
popa
cli
push
mov
fs
idiv
cwde
jl
nop
dec
imul
pop
imul
ror
pop
in
push
sbb
ins
xor
gs
push
pusha
push
and
sbb
cmp
adc
add
inc
enter
dec
dec
push
and
pop
xchg
enter
ins
in
xlat
sbb
js
test
test
inc
push
cmp
cmp
test
test
cmp
nop
test
test
dec
sub
sbb
(bad)
scas
push
mov
push
(bad)
and
add
mov
xor
dec
movs
sbb
cmp
sub
xor
adc
push
je
dec
xchg
movzx
fild
inc
jmp
dec
or
sbb
sbb
and
pop
push
mov
and
xor
gs
retf
pusha
xor
cmp
sbb
xor
ins
imul
pop
nop
mov
and
and
fiadd
dec
cmps
lods
pusha
stos
jno
inc
dec
cmps
fs
jno
fist
and
xor
enter
and
test
inc
sub
inc
enter
cmp
stos
sub
jmp
push
pop
pop
mov
add
mov
test
and
adc
inc
adc
iret
aam
push
rol
pop
inc
inc
fdivr
mov
add
adc
cmp
xor
test
cwde
add
xor
fstp
int3
adc
test
ret
pop
sar
sub
pop
sar
add
(bad)
(bad)
out
push
pusha
(bad)
ja
add
(bad)
out
inc
inc
scas
sti
push
inc
in
and
adc
arpl
nop
xchg
retf
add
pushf
push
push
fs
iret
cmp
mov
xor
ds
dec
inc
ja
sub
xor
and
inc
jp
cmp
sub
push
sbb
cmp
(bad)
xchg
xchg
cmp
scas
lods
movs
or
xchg
cs
and
jmp
mov
je
sub
xor
and
sub
cmp
in
mov
sub
(bad)
in
mov
sbb
xchg
ds
or
add
dec
inc
pop
call
lock
aaa
sbb
dec
xchg
mov
adc
(bad)
or
bound
cmp
sbb
inc
fimul
jp
pop
push
jne
cmp
arpl
jp
jb
push
push
out
and
or
out
adc
push
cwde
sbb
cs
and
cmp
adc
dec
sbb
js
add
add
movups
rol
and
push
dec
aam
mov
xchg
les
sub
pop
(bad)
call
add
or
xchg
aas
cmp
mov
mov
cmp
and
push
xor
pop
stc
dec
pop
push
ret
add
or
mov
and
dec
ja
es
inc
fs
ret
mov
inc
xor
mov
jmp
fsubr
push
sbb
add
xchg
inc
in
(bad)
and
dec
adc
sub
sbb
sbb
jmp
mov
outs
cmp
xchg
cld
aam
push
sti
dec
xor
sahf
shr
out
mov
mov
int
sbb
inc
shr
call
inc
ss
pop
add
or
or
sar
adc
push
adc
popa
push
cld
xor
sub
mov
test
mov
(bad)
cmp
rcr
pop
adc
movs
movs
iret
and
or
retf
mov
push
hlt
imul
adc
pop
pop
call
nop
push
add
add
fld
or
add
jmp
mov
sahf
mov
cmp
rcl
fs
add
add
stos
aas
neg
dec
rcr
xor
pop
push
or
dec
aam
mov
mov
mov
movs
adc
int
jns
lods
xchg
daa
add
add
test
cmp
mov
add
adc
pusha
repz
shr
or
mov
xchg
pop
test
clc
popa
fadd
ss
sub
sbb
push
mov
(bad)
imul
jge
retf
xchg
xchg
add
fadd
push
lock
(bad)
xor
out
mov
jns
inc
and
mov
fnstcw
or
push
pop
lock
jl
sbb
push
inc
ret
mov
retf
mov
lock
xor
sub
adc
pop
xlat
push
xor
or
xchg
cli
mov
jae
add
test
adc
xor
jmp
sbb
mov
push
frstor
mov
movs
xor
sub
adc
mov
std
lea
rcl
or
add
je
or
mov
inc
fld
mov
add
or
inc
and
callw
sub
add
or
add
add
add
dec
push
xor
outs
cs
sbb
xor
sar
cld
in
adc
xor
sbb
jmp
add
add
rcr
sbb
cdq
sti
or
cdq
sbb
inc
push
adc
dec
xchg
shr
xchg
mov
in
xlat
js
mov
idiv
push
cld
(bad)
adc
jmp
add
jg
mov
mov
add
mov
inc
xchg
inc
xor
mov
lea
or
pop
adc
sahf
mov
add
add
cmps
jns
add
add
inc
pop
aaa
mov
(bad)
push
imul
mov
test
in
sub
or
adc
or
xchg
mov
sar
fst
fmul
cmp
and
push
lock
pop
movs
add
mov
out
mov
ja
sbb
(bad)
push
sar
out
push
mov
cmp
(bad)
cmp
out
ja
shl
mov
adc
jp
iret
cvttps2pi
jmp
es
lock
mov
or
push
movs
jns
ins
fadd
clc
clc
push
or
pop
aas
cmp
add
or
das
fwait
les
shl
push
and
adc
xchg
mov
fdivr
adc
pop
sbb
cmps
bound
adc
loop
ret
jno
outs
repz
retf
push
(bad)
imul
and
sub
into
les
sub
add
movs
aam
jl
repnz
cmc
cmc
nop
iret
dec
sahf
enter
adc
or
enter
nop
or
dec
pop
daa
ror
mov
xchg
xchg
jmp
and
push
mov
mov
gs
mov
lock
push
push
cmc
or
fld
scas
lock
mov
addr16
and
mov
out
out
in
jmp
push
aam
cld
call
lock
adc
jno
add
and
jecxz
cmc
js
rcr
aad
xchg
jmp
fidiv
and
lahf
push
aaa
lock
add
xor
push
or
sub
in
nop
addr16
adc
popa
push
gs
sbb
mov
int
adc
call
inc
mov
fcomp
loopne
out
xchg
dec
in
dec
pop
or
pop
fcom
add
mov
inc
or
inc
add
not
push
lea
push
rcl
mov
and
jmp
inc
fs
fcom
nop
out
punpckhdq
inc
adc
sbb
loopne
xor
jmp
mov
(bad)
and
sub
sbb
pushf
pop
dec
cs
add
mov
lods
xor
shr
push
repz
das
mov
inc
or
push
jo
out
and
adc
lods
adc
outs
in
xchg
lock
shl
addr16
out
mov
call
add
cmp
push
and
sub
add
or
(bad)
or
sbb
or
or
add
rcr
inc
retf
xchg
dec
sub
jae
push
push
leave
or
jne
mov
mov
and
imul
loop
pop
ret
jecxz
adc
not
fmul
jbe
aam
mov
clc
es
fidivr
mov
add
setae
cmp
sahf
push
inc
retf
or
or
sbb
adc
ret
(bad)
mov
cmp
cmp
and
inc
jl
inc
xor
adc
stc
sub
pusha
lds
push
jge
pop
dec
std
or
xchg
in
inc
or
dec
xchg
jg
scas
inc
or
adc
push
lahf
sub
and
mov
fmul
or
arpl
push
push
pop
popa
mov
and
(bad)
mov
and
sbb
mov
sahf
cmp
inc
ret
sub
mov
mov
mov
pop
add
pop
xor
cmps
mov
inc
rcr
sub
or
inc
leave
fdiv
push
sahf
ret
daa
sahf
pop
and
test
lods
mov
mov
add
adc
xlat
pop
adc
push
add
outs
mov
pusha
ins
mov
add
or
popa
mov
fucomip
xchg
inc
jl
mov
mov
dec
xchg
pusha
mov
(bad)
pushf
mov
add
fisubr
dec
dec
repz
adc
pop
adc
mov
cwde
inc
pop
dec
or
push
addr16
pusha
test
inc
sub
dec
ret
jno
sar
pop
pop
add
fcmovb
xor
mov
mov
aas
mov
clc
or
dec
cmp
std
outs
fdiv
mov
jl
add
jno
mov
ret
mov
add
aaa
sub
mov
mov
cs
dec
add
out
jns
inc
scas
cvtpi2ps
div
sub
test
fs
xor
cmp
cmps
cmc
jo
fisubr
cmp
jge
push
jbe
dec
add
push
cmp
movs
out
(bad)
add
(bad)
(bad)
cli
rcr
dec
sub
and
femms
inc
dec
outs
sbb
push
inc
call
lds
test
mov
nop
cmp
imul
shl
test
int
xor
jmp
bound
jb
push
adc
imul
add
shl
and
bound
xchg
or
cmps
dec
add
mov
dec
add
lock
push
inc
add
adc
out
add
test
ret
rol
dec
inc
sbb
sub
shr
and
pop
mov
icebp
cmp
jl
and
pop
cdq
pop
cmps
sbb
pop
add
push
aaa
mov
psraw
cmp
sub
les
push
push
fdivr
(bad)
xchg
aam
(bad)
cld
neg
cs
out
lahf
push
jg
mov
or
int
mov
clc
into
in
jbe
xor
call
inc
lahf
popa
mov
int
inc
repnz
dec
cmp
js
enter
push
dec
jne
cmp
push
inc
shl
xor
inc
mov
mov
aas
movs
loopne
sbb
mov
je
sbb
outs
mov
test
jbe
push
mov
push
(bad)
dec
push
add
in
or
popa
and
or
mov
pop
pop
add
or
add
add
mov
mov
push
sahf
mov
xchg
jle
mov
jne
pop
add
loopne
push
add
inc
test
pop
movs
mov
sar
pop
or
movs
arpl
add
or
and
mov
cli
add
rcl
pop
(bad)
ins
mov
and
es
lock
test
les
jno
ffree
dec
pop
in
imul
iret
les
das
pop
or
shl
xor
cmps
jns
pushf
push
je
xor
pop
in
ins
outs
bound
scas
fsub
test
inc
push
add
sub
adc
mov
ds
and
adc
dec
pop
sub
mov
out
and
add
daa
mov
mov
jne
aaa
add
xor
(bad)
xlat
sbb
fist
call
push
clc
lods
jbe
pop
mov
and
mov
sub
jle
sub
sub
xor
dec
faddp
jbe
mov
adc
ja
inc
cmp
adc
xchg
inc
mov
pop
retf
jecxz
dec
mov
mov
aaa
push
xlat
lock
push
push
scas
mul
mov
and
push
sub
push
js
and
dec
adc
adc
adc
imul
push
ins
jle
loope
iret
in
jnp
xor
jp
add
adc
add
inc
nop
mov
pop
inc
adc
arpl
inc
inc
add
aam
xor
daa
std
or
sbb
cmp
and
add
mov
or
dec
inc
or
mov
adc
addr16
push
xor
shl
or
push
jecxz
push
or
mov
aam
adc
or
adc
lahf
push
fcmovnbe
rcr
data16
or
aaa
movs
mov
mov
cli
popa
inc
xor
adc
and
mov
xbegin
xchg
and
xor
pop
inc
jae
push
neg
or
sbb
pop
push
or
adc
jg
mov
mov
mov
sbb
cmp
add
pop
cmp
out
imul
add
ret
fdivr
outs
dec
add
nop
popf
adc
mov
or
shl
test
lea
mov
sbb
fld
cmp
sbb
mov
xor
xor
pusha
lds
(bad)
adc
push
movntps
cli
or
sub
xor
push
inc
adc
add
push
(bad)
fldenv
ficom
retf
adc
call
call
mov
aam
xor
xor
outs
inc
enter
pusha
call
mov
repz
jl
loopne
mov
arpl
loopne
xchg
and
or
inc
push
sbb
jle
lahf
inc
add
inc
or
fdiv
cmp
push
push
movs
and
push
outs
mov
sahf
push
or
xor
sbb
or
jne
dec
pop
aam
iret
mov
enter
xor
mul
aaa
xor
loopne
movs
add
(bad)
aam
ror
ret
add
xor
stos
and
mov
dec
fld
sub
pop
nop
repz
xor
fs
adc
inc
mov
mul
or
gs
add
aam
inc
inc
adc
cmc
ror
or
daa
mov
inc
sti
xchg
inc
jmp
cmp
jbe
pusha
ins
jnp
inc
or
inc
sbb
mov
mov
(bad)
add
sbb
movs
and
sbb
cmp
add
ficom
test
xor
push
and
mov
pop
pushf
mov
sahf
push
in
pop
push
add
js
jmp
adc
add
les
dec
in
mov
sbb
jmp
cwde
jg
popf
in
xor
jg
in
movs
sub
mov
sub
xchg
dec
scas
push
jb
xor
ficom
jb
in
cmp
cmp
outs
mov
mov
cmp
cmp
repnz
aaa
dec
and
dec
and
jne
xchg
cmp
mov
cs
ret
movs
inc
loop
daa
les
enter
sub
push
jns
add
mov
inc
fst
lods
and
rcr
dec
pop
sbb
inc
arpl
or
popa
pop
mov
inc
adc
jnp
or
adc
aam
mov
jl
inc
adc
sub
pop
pop
lahf
xor
adc
(bad)
and
mov
mov
ja
cmp
push
add
sub
push
adc
shl
mov
jbe
fsub
cmps
ins
and
xor
ret
mov
mov
push
in
je
lock
xor
jne
repnz
inc
adc
xchg
push
or
jae
ins
sbb
jle
inc
popa
enter
ds
mov
pop
pop
(bad)
xlat
sbb
mov
push
jg
jle
fmul
cmp
jle
out
add
adc
hlt
add
dec
call
mov
cmp
pop
push
lock
pop
nop
lock
cmp
dec
cli
xor
jl
test
push
je
sub
adc
inc
xchg
mov
nop
test
jle
cmp
outs
add
mov
or
push
js
scas
ret
inc
das
and
jae
add
inc
xor
mov
or
sub
cmp
nop
loopne
or
pushf
push
add
lds
mov
xor
pop
stos
xchg
jg
and
cmps
add
clc
mov
and
mov
sub
repz
ja
(bad)
xchg
mov
dec
pushf
push
adc
mov
cli
pop
rcl
(bad)
xor
sbb
cmp
mov
sub
sub
push
test
push
and
lea
sub
cmp
pop
xor
sahf
xchg
sub
mov
sub
fstp
mov
jae
cmp
pushf
test
jne
pushf
ds
cmp
add
es
or
inc
xor
es
mov
pop
fldenv
sub
adc
xchg
popf
ror
sbb
sbb
add
loop
xchg
lds
dec
ja
inc
pop
js
aas
sub
mov
je
lds
and
push
std
push
cmp
mov
pusha
jl
and
jb
out
jmp
sub
adc
push
fdiv
ret
mov
adc
push
inc
jae
jnp
jmp
cmps
mov
jb
adc
xchg
aaa
sbb
lea
sub
add
stc
pop
shl
pop
repnz
jno
xor
add
pop
dec
lock
test
stc
jne
sbb
mov
and
jbe
shr
and
xor
iret
cmp
adc
clc
mov
out
and
loope
cmp
rol
push
sub
and
dec
xchg
or
cdq
jo
or
push
xchg
pop
sbb
in
mov
adc
add
pushf
and
ins
loopne
pushf
add
add
inc
inc
fadd
stos
frstor
enter
call
pop
push
scas
mov
add
cmp
add
arpl
nop
(bad)
mov
inc
sar
dec
inc
push
or
fild
rcl
in
xchg
scas
adc
xor
adc
nop
in
inc
lock
repnz
(bad)
and
push
push
cmp
or
sbb
lods
or
mov
mov
pop
(bad)
loope
xor
mov
arpl
mov
repnz
mov
adc
or
pop
(bad)
shl
stos
stos
sub
inc
lahf
sub
pop
or
daa
in
fild
and
fstp
cld
iret
add
fsubr
cmp
sub
dec
fdiv
lods
xor
xor
mov
into
and
loopne
idiv
mov
test
fbstp
sub
xchg
mov
or
pusha
stc
shl
dec
mov
fcom
fld
pop
jg
(bad)
sub
cmp
fadd
mov
and
loopne
sti
xor
in
sub
in
ja
aaa
sbb
jns
pop
shl
rol
sub
std
add
jecxz
pop
ret
test
in
(bad)
cmps
aas
xor
or
pusha
sbb
rol
adc
jo
mov
cs
cmps
adc
data16
pop
mov
push
adc
add
xchg
iret
lods
test
sbb
xchg
imul
mov
loopne
out
fiadd
pop
or
push
in
imul
pop
push
pop
mov
or
push
test
sbb
sbb
mov
xor
inc
aam
mov
dec
xor
sbb
jmp
loopne
int
loopne
(bad)
inc
imul
ds
pop
mov
lock
adc
(bad)
int3
xchg
sub
dec
fs
or
bound
and
mov
adc
push
cmp
pushf
sar
(bad)
or
xor
mov
sub
retf
jmp
dec
push
mov
imul
lea
shl
int3
not
adc
pop
push
mov
int
in
xor
pop
push
cmp
adc
mov
test
test
xchg
aas
call
cmp
jg
cmp
jle
pop
dec
mov
adc
sub
ins
xor
cmp
pop
icebp
enter
push
pop
in
sbb
pusha
leave
das
inc
xchg
and
sub
in
test
sbb
rcl
adc
das
sub
dec
push
jae
mov
sbb
int3
xchg
lock
push
sub
jmp
sbb
xchg
nop
mov
pushf
pop
shr
mov
fsubr
xor
stc
sahf
das
xor
pop
dec
mov
jne
mov
fs
add
fdivr
and
iret
and
cmp
dec
out
and
sar
rol
nop
pusha
neg
shl
movs
xor
mov
ret
mov
jbe
jecxz
sub
fadd
add
ret
(bad)
cmp
add
loope
mov
add
add
pop
pop
cmp
or
add
jge
mov
pop
test
add
outs
cmp
scas
jge
xchg
add
dec
outs
and
in
or
pushf
and
(bad)
cmp
or
inc
mov
data16
sbb
cmps
sti
shl
lea
add
popf
hlt
or
cmc
jne
xor
xor
js
mov
pusha
es
outs
jne
pushf
add
aas
loopne
push
cld
jmp
dec
xlat
jo
ror
sub
mov
add
push
cwde
push
movs
dec
dec
dec
add
and
loope
sub
(bad)
fiadd
dec
js
inc
xor
cmp
sahf
xor
cmp
inc
sbb
adc
test
inc
or
push
imul
jge
(bad)
sbb
and
xor
dec
fdivr
loope
add
iret
mov
pop
push
inc
mov
dec
call
pop
prefetcht0
cli
push
push
or
mov
inc
jmp
and
jmp
mov
xor
sub
and
inc
pop
(bad)
pop
jmp
ret
xor
sub
in
mov
sbb
adc
es
add
fisttp
scas
xchg
icebp
push
mov
in
outs
les
mov
sub
sbb
mov
cwde
scas
stc
sub
sbb
adc
int
mov
push
and
or
neg
inc
mov
add
pop
ds
adc
push
inc
sbb
push
jo
pop
sub
aaa
mov
sub
js
and
xor
inc
dec
test
mov
inc
loope
adc
dec
cmovp
mov
sub
xor
xor
(bad)
out
xchg
test
sbb
push
jmp
fild
(bad)
sbb
push
daa
popa
push
addps
or
in
movs
sub
aaa
dec
cmp
push
push
jne
sub
push
out
scas
sub
and
jle
sbb
mov
push
cld
dec
sbb
add
push
pop
push
cmp
jno
les
mov
or
add
cmp
nop
mov
mov
xor
call
dec
ins
neg
dec
les
dec
push
push
es
popf
inc
mov
lahf
inc
nop
mov
cmp
pop
gs
lods
jg
and
xchg
ds
or
test
or
mov
adc
aaa
xor
sub
cmp
dec
or
add
dec
mov
mov
stos
fs
int3
inc
xor
rcl
out
inc
bound
das
sub
into
push
push
pop
das
cmp
jle
pop
xor
jge
out
(bad)
adc
inc
dec
repnz
pusha
sub
mov
sub
cmp
enter
mov
lods
inc
inc
cmps
inc
jno
test
jge
fnstcw
adc
outs
mov
and
out
push
or
sub
and
inc
or
sahf
or
js
jmp
cmp
mov
(bad)
dec
jge
aaa
mov
movs
add
lock
loopne
adc
or
xor
(bad)
push
cmp
test
repnz
mov
mov
aad
sub
pop
inc
addr16
mov
test
int
clc
sbb
(bad)
js
xor
ss
(bad)
out
push
dec
dec
add
jo
push
xor
add
fadd
push
or
mov
xchg
and
mov
push
sbb
sar
mov
pop
sbb
(bad)
hlt
mov
loopne
push
or
movs
sub
test
and
jmp
sub
xor
movs
mov
lock
inc
in
in
and
mov
jl
jbe
push
repnz
nop
adc
and
xchg
mov
or
out
jae
sbb
sbb
mov
push
inc
jl
mov
xchg
mov
nop
and
and
and
jmp
popf
and
mov
add
js
adc
in
nop
retf
shl
add
nop
jl
aad
sahf
pushf
or
cmp
(bad)
or
test
cmps
or
add
in
nop
popf
pusha
shr
pop
sub
and
xor
shl
push
(bad)
inc
retf
in
sub
daa
sub
ss
push
lods
sbb
add
or
imul
xor
jecxz
daa
nop
adc
outs
adc
shl
mov
sub
cmps
and
push
les
test
jmp
fwait
pushf
icebp
xor
push
push
mov
shl
fmul
jo
dec
pop
call
sub
nop
mov
js
push
bound
fs
mov
out
jp
jmp
mov
call
in
clc
push
dec
popa
mov
lods
mov
jmp
loope
or
jle
sbb
push
test
add
push
add
mov
pop
inc
xchg
sub
idiv
repz
inc
pop
push
js
fwait
xchg
ss
mov
cli
sub
and
adc
lea
lea
push
daa
push
scas
push
adc
dec
jmp
sbb
nop
nop
jae
cmp
and
xor
cs
jmp
je
lea
jno
and
inc
sub
pop
add
enter
adc
inc
ret
movs
xchg
push
aam
dec
push
shr
(bad)
mov
pop
jp
retf
pop
mov
or
sbb
enter
sbb
adc
sbb
or
ss
dec
es
sbb
pop
jecxz
dec
adc
or
push
icebp
mov
cmps
and
xor
mov
push
mov
xchg
sub
dec
push
lock
pop
push
test
sbb
mov
mov
or
adc
fdiv
dec
mov
dec
push
sub
jmp
mov
jge
xbegin
sub
mov
lds
cmp
adc
retf
movs
or
cmp
and
push
enter
or
inc
jl
fbld
dec
sub
repz
sub
xor
pop
(bad)
inc
jne
cmp
xor
(bad)
push
and
shl
xor
pushf
cmp
movs
and
push
fist
mov
inc
(bad)
add
ficomp
(bad)
popa
cmp
pop
push
fld
inc
stos
push
fmul
(bad)
into
sbb
sbb
dec
(bad)
fild
xor
push
push
fwait
sbb
int
cwde
or
add
cmp
mov
pop
fldenv
sar
or
jbe
bts
or
enter
sub
jmp
add
dec
sar
push
ret
ins
enter
push
inc
cmp
nop
and
jmp
enter
sub
ret
mov
and
push
call
loop
es
jecxz
add
xchg
sbb
jne
iret
mov
imul
in
and
xor
adc
enter
or
ds
ss
sbb
gs
and
mov
loopne
ret
ss
sub
push
add
push
pop
dec
addr16
nop
ret
dec
cli
data16
adc
bswap
dec
div
or
cmp
and
jge
jmp
add
jle
ror
pop
repnz
mov
and
or
dec
popa
stos
jns
fnsave
mov
in
xor
xchg
or
fsub
call
sbb
sti
shl
and
cmp
aam
mov
adc
test
sub
lea
(bad)
(bad)
call
int3
call
dec
sub
shl
in
xlat
and
(bad)
popa
and
(bad)
movs
xchg
jne
sbb
add
jp
arpl
nop
aam
rcl
cmps
adc
sbb
hlt
test
adc
sbb
mov
imul
dec
lods
inc
adc
retf
loop
add
iret
mov
leave
inc
pop
cld
cmp
and
add
leave
cld
sbb
xchg
dec
cld
cld
cld
dec
adc
nop
dec
sub
cld
xor
cmp
or
xchg
aam
adc
mov
and
jmp
xor
xchg
pop
fsub
pushf
pushf
in
in
add
jb
sbb
or
imul
in
ins
mov
mov
nop
scas
push
addr16
clc
clc
in
nop
add
push
mov
test
push
dec
adc
mov
mov
fnstsw
xchg
inc
dec
ret
aad
push
mov
cmp
mov
or
clc
mov
daa
bound
inc
add
jmp
jge
mov
xchg
popf
test
je
(bad)
add
push
mov
pop
(bad)
sar
int3
sar
jmp
icebp
pop
in
xor
xchg
les
inc
jge
adc
sbb
jp
add
imul
dec
ds
fsub
mov
jmp
push
cld
shr
pop
ficom
inc
rcr
push
xor
pusha
xchg
nop
sub
mov
in
in
push
mov
add
loope
enter
movs
inc
mov
add
or
out
push
dec
and
hlt
sub
pusha
cld
jno
mov
sbb
pop
pop
adc
push
mov
ffree
sbb
mov
cmp
cmp
sbb
sub
test
outs
mov
and
clc
outs
and
call
mov
lods
pop
and
xor
xchg
in
add
daa
outs
jne
sub
and
pop
sub
daa
loop
push
adc
and
or
sahf
ins
movs
push
or
int3
push
clc
shl
or
push
bound
(bad)
adc
pop
in
clc
jl
fst
das
and
pop
stos
test
sbb
mov
mov
push
mov
push
sbb
mov
add
loopne
adc
leave
(bad)
sub
sub
push
cli
outs
rcl
push
and
push
sub
outs
xlat
or
and
dec
bound
ret
sbb
inc
rcr
push
fs
dec
xor
out
dec
xchg
mov
fwait
jg
arpl
(bad)
adc
add
adc
sbb
out
cmps
fcom
push
clc
daa
push
jae
push
sub
retf
in
arpl
(bad)
sbb
icebp
xor
or
and
out
std
and
sub
add
cmp
xor
push
push
add
sbb
pop
pop
rcr
ss
cmp
sbb
rcr
ins
adc
retf
add
jns
arpl
rol
push
jmp
or
test
xor
test
aad
jae
or
pop
lock
push
or
fsubr
loope
je
fisttp
fld
sub
out
add
fdiv
int3
icebp
data16
mov
fadd
or
mov
cmps
sti
push
std
mul
push
das
jle
or
sbb
push
(bad)
adc
and
jg
inc
push
xor
clc
or
mov
outs
and
and
xor
dec
or
pop
cli
xchg
jne
lea
enter
pusha
or
jns
in
inc
dec
dec
imul
or
mov
cwde
jne
mov
sbb
xchg
jb
out
jg
inc
imul
test
adc
ret
xchg
retf
inc
and
sub
and
push
sub
dec
inc
sar
jnp
pusha
mov
(bad)
add
(bad)
cwde
add
sub
adc
inc
inc
sub
jns
test
hlt
imul
add
push
popf
inc
cmp
mov
pop
xor
out
imul
fs
dec
and
mov
cmp
lds
push
and
cmp
jecxz
or
dec
daa
sbb
cmp
inc
sub
sti
adc
nop
dec
push
jne
aam
lahf
in
pop
or
fist
xchg
sbb
js
stc
dec
lods
mov
and
fsubr
lods
push
or
and
lea
mov
cmps
imul
stc
jns
lods
mov
or
aas
pop
xor
sahf
inc
(bad)
fcomi
ret
pop
jne
ror
push
inc
daa
push
mov
in
popa
mov
enter
and
loop
pop
cmp
adc
sbb
inc
retf
cmp
clc
jne
xor
inc
sub
loopne
pop
sbb
movs
in
xchg
ins
mov
out
retf
sbb
push
xchg
hlt
bound
cmp
ja
jl
lea
mov
nop
push
add
sbb
pusha
fsub
add
jecxz
je
pop
pop
movs
and
push
or
bound
pop
sbb
mov
push
cwde
push
fcomi
or
bound
or
test
sti
call
xor
in
or
fistp
dec
fwait
outs
jle
test
push
imul
mov
or
and
inc
inc
cwde
push
mov
shl
call
push
adc
xchg
setle
mov
rol
loopne
inc
imul
js
pop
pop
mov
hlt
clc
clc
and
leave
clc
(bad)
or
clc
adc
jle
dec
sub
push
pop
pop
mov
sar
adc
and
movsx
jge
mov
add
bound
dec
jg
or
push
sbb
jne
xchg
je
xor
loopne
ret
enter
xchg
jp
movs
inc
pop
leave
cs
and
xor
or
add
push
lods
push
mov
adc
add
in
nop
add
dec
push
in
cwde
xchg
xchg
js
cmp
clc
bound
dec
shr
retw
movs
loopne
mov
ja
adc
and
inc
cld
gs
dec
push
lds
sub
call
adc
pop
adc
add
ret
mov
ror
and
clc
pop
sbb
inc
and
mov
adc
mov
cmp
cmp
pcmpeqw
xchg
fisubr
jb
mov
dec
cmps
in
jg
add
push
aam
xor
or
or
pop
mov
dec
cld
or
adc
stos
mov
sbb
jp
dec
call
in
xor
push
daa
push
xchg
out
aas
loope
mov
push
sub
call
mov
cmp
rcl
js
adc
loope
push
jns
jp
loopne
ins
(bad)
mov
movs
xlat
loop
sbb
or
retf
jb
pop
outs
cmp
loope
fidivr
adc
enter
data16
xchg
sbb
retf
inc
call
outs
shl
icebp
and
jl
nop
inc
pop
movs
sti
outs
imul
sbb
adc
inc
adc
mov
sbb
or
jge
inc
jb
cmp
xor
popf
pop
jl
jmp
test
or
sub
adc
sub
adc
cli
push
outs
dec
fwait
ror
pop
cmp
or
mov
inc
cmp
push
pop
outs
mov
push
cmps
loopne
inc
mov
pop
sub
inc
test
shr
mov
ror
pop
jg
mov
mov
fwait
daa
jecxz
add
xchg
ret
mov
(bad)
and
and
add
xor
pushf
add
push
pusha
cmp
xchg
mov
jo
hlt
cmp
push
add
add
add
pop
mov
hlt
adc
xchg
pop
sub
and
outs
and
inc
xor
nop
jo
rol
xchg
cmp
es
or
mul
jl
mov
pushf
push
pop
nop
jbe
cmp
cs
shr
dec
adc
inc
data16
xor
outs
dec
cmps
adc
fdiv
cmps
lock
add
push
and
adc
fimul
retf
hlt
ins
cwde
fmul
mov
and
nop
add
call
add
ror
lods
push
jl
cmp
push
xor
xor
mov
inc
mov
or
or
jg
fadd
mov
xor
mov
inc
push
call
loopne
rcl
or
ins
or
push
push
imul
ret
jnp
add
sub
xchg
mov
and
or
push
jle
idiv
xchg
jmp
add
add
mov
loop
cli
(bad)
dec
lea
xor
xor
and
push
inc
inc
push
inc
jo
fwait
js
add
cmp
adc
sbb
or
jmp
gs
adc
push
inc
sbb
jmp
out
add
sti
je
mov
sub
jb
sub
sub
jae
je
and
or
add
je
(bad)
call
sbb
sub
adc
je
pop
imul
push
pop
enter
dec
sbb
jae
xchg
sbb
mov
shl
jae
push
cli
and
imul
rol
inc
sbb
push
fsub
pusha
jmp
mov
push
add
ss
push
mov
inc
push
gs
jb
call
jecxz
xchg
mov
test
aad
repnz
sbb
je
cmp
inc
add
sbb
mov
add
push
bound
inc
adc
and
add
xchg
arpl
xor
cmp
dec
xor
cmp
cmp
xchg
sbb
adc
jae
cmp
(bad)
mul
test
jbe
pushf
add
add
je
push
cmp
icebp
jbe
(bad)
cmp
pusha
sub
fwait
in
push
adc
push
or
jmp
or
rol
jl
xor
mov
and
add
adc
imul
push
popf
adc
xchg
add
gs
lea
mov
test
cmps
in
ja
adc
xchg
or
xchg
xchg
hlt
popf
and
xor
cmp
dec
imul
arpl
or
sub
repnz
sbb
movs
pop
ror
xlat
in
fdivr
inc
and
aaa
mov
jns
xor
dec
push
dec
loopne
jns
call
fdivr
xor
(bad)
push
or
and
loope
mov
xchg
xchg
push
xchg
shl
mov
aam
pusha
fwait
popf
sub
es
mov
fist
or
add
pusha
stos
dec
mov
push
daa
mov
cmp
inc
sbb
dec
fadd
xchg
push
test
jbe
dec
push
stc
es
inc
ins
loopne
cmp
pop
push
or
jns
xchg
xchg
icebp
popf
movs
movs
pop
sbb
loopne
mov
dec
cmp
inc
add
pop
arpl
push
dec
and
cmp
icebp
xor
and
(bad)
(bad)
icebp
push
jp
rol
test
jno
stc
punpckhdq
adc
push
pop
mov
and
es
xchg
dec
pusha
icebp
inc
or
(bad)
xchg
and
push
jmp
daa
push
arpl
jnp
sub
sbb
aam
gs
in
cmps
mov
push
popa
adc
(bad)
sbb
inc
adc
fisubr
jge
or
cmps
mov
clc
sub
ret
das
pop
push
push
sbb
inc
sbb
and
sub
jns
loop
into
ins
add
xor
(bad)
xchg
sub
adc
rcl
add
jmp
mov
mov
ret
aas
ret
jo
(bad)
add
pushfw
xchg
xchg
push
popa
add
pop
out
cmp
jg
test
pop
push
mov
inc
(bad)
data16
inc
add
(bad)
push
cmps
and
mov
adc
or
loope
jns
mov
jge
hlt
js
dec
movs
arpl
or
xor
cmp
pop
jge
or
enter
lods
sbb
fwait
jmp
popf
nop
dec
and
(bad)
addr16
and
aaa
add
popf
xor
adc
push
or
dec
inc
popa
mov
inc
add
or
pop
stos
ret
mov
add
repnz
xor
daa
sti
nop
fadd
fadd
pop
pop
addr16
jae
aaa
sub
dec
nop
pop
fadd
push
jns
inc
sbb
and
loopne
iret
out
pop
or
xor
adc
or
adc
ins
test
xchg
nop
icebp
out
jl
inc
pop
popf
push
test
cli
push
mov
inc
dec
jne
clts
nop
mov
add
cmp
jg
ret
and
jbe
test
pop
popf
add
adc
pop
or
pusha
xchg
out
or
adc
cmp
jbe
das
jle
pushf
or
xchg
mov
sbb
jne
int
pushf
or
ds
mov
sub
sub
gs
pop
mov
ins
mov
sbb
mov
cmp
test
ss
div
or
push
push
popa
addr16
inc
rcr
ja
aad
out
and
add
sub
les
and
push
cmp
(bad)
cdq
pop
shl
and
aam
outs
gs
sbb
dec
(bad)
dec
mov
pusha
fisttp
pop
sub
sbb
mov
add
mov
mov
stos
(bad)
mov
mov
(bad)
pushf
shr
(bad)
arpl
daa
jo
sbb
and
shr
xor
adc
sbb
bound
cmp
lods
cmps
fcom
push
arpl
sub
mov
cmp
push
mov
xor
inc
jmp
or
test
es
sbb
pop
scas
clc
mov
les
add
lods
adc
sub
dec
loopne
test
jo
sub
xor
jbe
lock
fs
pop
jnp
mov
xor
mov
dec
ins
lock
adc
mov
adc
adc
int
pop
mov
push
call
outs
and
ja
out
jnp
mov
xchg
jo
pop
mov
add
mov
add
xor
js
sub
ins
dec
in
cmp
les
jle
test
mov
pop
sbb
pop
call
daa
lods
clc
(bad)
xor
add
push
mov
sbb
xchg
das
shr
xchg
fdiv
jecxz
sub
test
fist
xor
fist
xor
(bad)
push
mov
jo
xor
add
into
push
fiadd
xchg
sbb
lea
pop
mov
sbb
je
sub
clc
add
and
call
sbb
scas
leave
je
lahf
je
jno
in
jmp
xchg
pop
push
mov
inc
jp
adc
and
xchg
adc
jne
adc
add
dec
xchg
adc
add
xchg
add
out
lahf
mov
xor
je
adc
xchg
cmp
mov
repz
test
add
xchg
es
inc
cmp
es
leave
and
inc
jb
(bad)
jbe
mov
loopne
jno
or
call
adc
and
and
les
push
push
xchg
ds
inc
push
mov
(bad)
fmul
cmp
hlt
hlt
xlat
stc
iret
inc
sahf
xchg
xchg
push
mov
inc
adc
push
sbb
mov
call
cmps
jg
loop
movs
retf
ror
lea
stc
and
push
xor
addr16
add
pushf
stos
shl
mov
mov
outs
mov
ss
(bad)
shr
daa
mov
xchg
xchg
adc
dec
aas
cli
and
add
(bad)
mov
dec
dec
sbb
xor
mov
mov
add
imul
xor
push
push
inc
adc
in
inc
add
jl
dec
sub
xchg
bound
gs
push
arpl
and
ds
bound
(bad)
jmp
arpl
inc
jb
ja
fiadd
jmp
jmp
int3
stc
mov
add
mov
xchg
pop
mov
leave
(bad)
mov
pop
xchg
popa
xchg
nop
xchg
out
(bad)
and
xor
test
xchg
test
or
sbb
fwait
or
loop
icebp
or
js
pop
pop
cmp
je
and
pop
and
add
scas
xchg
mov
pop
pop
popa
repz
mov
enter
in
loope
mov
adc
add
sub
adc
xchg
pshufw
xchg
add
add
loope
sbb
test
cmp
fsubp
loope
xchg
mov
stc
scas
or
mov
xchg
mov
add
fcom
or
add
jge
rol
pop
and
pop
pop
adc
cmp
loop
pop
(bad)
inc
push
fist
sar
ret
and
ins
aas
jne
xor
pop
jmp
inc
iret
das
iret
xor
cmp
(bad)
jmp
(bad)
sbb
push
cmps
jo
(bad)
fisttp
test
mov
jl
jg
inc
shl
add
icebp
sub
sbb
loope
loopne
aaa
dec
or
adc
rcr
mov
call
aam
arpl
push
rcl
mov
dec
pop
sbb
aam
xchg
add
cld
cld
dec
dec
(bad)
adc
mov
sub
ret
(bad)
sub
or
popf
or
adc
cmp
pop
sbb
sbb
ins
adc
mov
inc
rcl
or
mov
or
or
sti
xchg
xlat
(bad)
or
mov
fcom
pop
aad
and
lock
jmp
inc
nop
pop
xchg
push
inc
and
jg
and
add
enter
repnz
fmul
push
xor
inc
jo
inc
adc
test
cld
jb
cmps
ret
inc
and
inc
test
adc
test
hlt
or
movs
lods
or
mov
jge
sbb
push
or
or
or
push
adc
aad
mov
sar
lahf
and
sub
rcl
or
enter
inc
arpl
popf
into
fdivr
adc
mov
fild
pop
or
iret
add
pop
xchg
test
push
xor
imul
jne
xor
mov
xchg
sub
xor
imul
jne
dec
or
push
adc
xchg
push
out
jae
out
lock
jg
addr16
fild
dec
pop
mov
cwde
arpl
adc
adc
dec
or
inc
xor
dec
xchg
movs
ror
stc
ins
pop
push
or
adc
mov
push
push
and
inc
adc
cmp
mov
aad
add
jecxz
dec
inc
imul
mov
ja
xchg
cmp
clc
pop
or
movs
push
adc
into
sub
jge
mov
clc
mov
lea
adc
or
xchg
sbb
rcr
cmp
push
xlat
out
aam
jl
jg
mov
ret
adc
cld
bound
xchg
mov
rcr
loop
or
ret
lods
ret
xchg
dec
pop
lods
dec
add
mov
xchg
sub
adc
pop
dec
mov
clc
or
mov
push
stos
pop
push
push
cmp
imul
dec
inc
sbb
sub
mov
cmp
xchg
neg
pop
cmp
enter
or
pop
adc
aam
mov
mov
mov
and
clc
inc
frstor
jmp
adc
and
sub
enter
repz
lds
add
lods
push
hlt
cmc
test
dec
or
jp
(bad)
jno
adc
push
cmp
cmps
inc
adc
xor
push
arpl
mov
sbb
daa
add
jbe
mov
dec
add
and
sbb
adc
sub
sbb
push
lods
sbb
jg
(bad)
daa
and
test
and
dec
neg
(bad)
adc
add
pop
jge
int3
cmp
ret
lea
mov
movs
sbb
add
ror
xchg
or
jne
add
popf
sub
push
rol
adc
test
mov
dec
and
xchg
inc
neg
lods
adc
retf
aam
jnp
ret
call
inc
popa
push
xchg
pop
rcr
out
xchg
and
push
iret
movs
adc
and
mov
call
mov
ret
dec
lods
add
adc
aaa
and
rcr
fld
cdq
pop
push
push
or
mov
pop
loopne
stos
loopne
test
xchg
es
jne
jp
lea
dec
call
xchg
jno
pop
mov
xchg
cmp
adc
loopne
ins
imul
in
repz
mov
pushf
ins
out
out
add
das
call
inc
hlt
lea
xor
cmp
cwde
cmp
ret
sub
inc
leave
loope
scas
(bad)
cdq
popa
inc
cwde
push
dec
or
(bad)
push
sub
push
lods
add
sbb
and
mov
mov
fidivr
sbb
jmp
mov
and
xor
inc
cwde
xor
mov
jle
shl
inc
sbb
adc
pop
mov
and
js
and
outs
cmp
or
arpl
adc
inc
lea
popa
shr
enter
add
(bad)
repz
add
and
push
xchg
pusha
xor
xor
(bad)
xchg
test
pop
fisttp
hlt
sbb
ret
pop
pop
and
dec
push
cdq
ret
mov
loope
and
inc
add
and
pop
das
(bad)
(bad)
iret
push
sub
cmps
cdq
lods
nop
inc
add
xchg
jns
inc
xor
inc
cmps
xchg
aaa
sub
test
adc
inc
add
push
cmp
pop
mov
adc
push
inc
push
inc
sbb
jnp
xchg
aaa
test
and
add
ret
les
pusha
rcr
inc
add
add
rcr
xchg
sbb
cmps
mov
mov
sbb
loop
sub
inc
dec
mov
call
add
je
lahf
jne
loopne
push
lds
popa
pop
pop
(bad)
shl
add
mov
lods
sub
movs
xor
es
nop
scas
arpl
adc
sahf
test
mov
push
in
rcr
inc
push
outs
or
sti
inc
fldpi
pop
daa
aas
dec
mov
inc
and
inc
loope
and
shl
pusha
adc
imul
leave
ret
jmp
repz
(bad)
int
mov
adc
jno
dec
in
sub
inc
sbb
jp
add
and
(bad)
cmc
leave
xor
push
pop
lock
pop
push
and
xchg
add
loopne
cmp
pop
nop
hlt
sbb
sub
pushf
dec
daa
pop
in
dec
cld
adc
push
sbb
out
mov
push
jae
sbb
or
cdq
dec
idiv
xor
inc
push
and
adc
cmps
jae
ret
jno
cmp
nop
bound
clc
sub
add
jecxz
dec
mov
jo
je
sbb
jl
xchg
iret
mul
hlt
dec
jne
call
cmp
stos
jge
inc
sub
or
stos
inc
sbb
js
outs
fst
cmp
dec
dec
aas
pop
or
pushf
pusha
add
adc
pop
mov
les
pop
mov
jnp
cmp
rcr
or
aam
ret
add
inc
xchg
or
aad
cmp
inc
xor
jae
mov
xor
ja
xchg
inc
imul
fwait
xchg
and
xchg
(bad)
sub
es
mov
pop
dec
pop
and
and
xchg
inc
cmps
fwait
or
sub
adc
ror
mov
dec
cmp
xchg
dec
ret
dec
dec
xor
sub
add
dec
push
jb
nop
dec
pop
dec
es
adc
lods
push
and
ins
dec
push
mov
ja
and
stc
inc
xchg
sbb
and
rcr
pop
out
adc
mov
add
xchg
mov
add
scas
mov
test
sbb
inc
mov
and
popa
sub
pop
cli
fcmovbe
cmp
popa
fcomp
stos
add
adc
mov
add
cmp
sbb
adc
popf
out
jle
mov
out
mov
push
push
imul
test
inc
dec
push
mul
or
or
and
sub
iret
(bad)
jns
xchg
jae
xchg
sbb
ret
fld
shl
cmp
inc
inc
je
xor
aas
rcl
sahf
pushf
jl
movs
sub
sub
rcl
inc
pop
aaa
mov
inc
mov
jmp
add
test
int
in
or
push
dec
retf
shl
xor
mov
enter
sbb
pop
fwait
pushf
sbb
popf
mov
pop
pop
pop
adc
mov
mov
mov
mov
pop
add
pop
jmp
sbb
add
out
xor
inc
inc
mov
jge
fisttp
pop
cwde
cmc
ror
rol
and
ret
ret
cmp
push
pop
sbb
pop
paddsb
adc
inc
sub
retf
ins
inc
push
mov
inc
ffree
sbb
push
or
les
mov
sub
and
test
cmc
cmp
and
movs
cld
mov
cmp
xchg
out
les
mov
cld
mov
shl
inc
inc
(bad)
clc
jle
lea
enter
jge
dec
mov
(bad)
pop
pop
add
push
sub
xchg
lods
add
inc
or
retf
push
push
add
or
lods
add
out
retf
add
or
clc
push
or
lods
scas
xchg
jo
or
sub
inc
sbb
inc
ss
test
enter
shr
push
ins
add
and
lock
sub
add
nop
cmp
jge
and
test
movs
lds
xchg
es
dec
das
shl
mov
add
aaa
push
jl
xchg
inc
inc
je
and
cld
leave
mov
repnz
mov
stos
adc
sbb
xlat
imul
add
popf
cs
adc
push
arpl
or
test
fldcw
das
add
xchg
sub
mov
mov
xor
and
or
fiadd
sbb
jno
clc
enter
inc
lock
mov
cmp
test
push
hlt
test
test
test
mov
cmp
add
stos
test
mov
ret
add
retf
add
sbb
ds
sbb
inc
or
lods
dec
cmp
dec
xchg
test
popa
shl
or
xor
movs
inc
lock
loopne
lods
mov
and
in
bound
mul
ja
int3
cmp
lods
test
mov
mov
rcr
shl
loopne
sbb
sub
mov
dec
and
(bad)
adc
mov
adc
jbe
mov
xor
mov
(bad)
xor
xchg
add
outs
fadd
or
xchg
(bad)
sbb
pop
inc
xor
mov
push
mov
cmp
je
pop
jl
push
sbb
cmp
pop
ret
pushf
or
sbb
push
dec
rcl
fwait
add
add
mov
add
cmp
iret
add
loop
pop
(bad)
adc
sub
dec
push
mov
jne
dec
mov
mov
aas
sub
add
jne
outs
xchg
cmps
xor
xor
jo
(bad)
inc
xor
or
pop
jmp
mov
lds
and
push
dec
and
pusha
repnz
std
lahf
pop
and
jecxz
dec
lock
mov
pop
jne
push
pop
dec
es
sub
xchg
inc
mov
pop
xor
movs
xlat
mov
pop
sub
xor
lds
or
xchg
xchg
and
xor
fdivr
nop
sub
mov
cmp
jo
shl
ss
mov
cmp
dec
hlt
adc
inc
and
mov
scas
pop
sub
sub
inc
call
or
adc
and
push
push
and
sbb
push
mov
mov
mov
or
pop
into
loopne
lahf
adc
and
and
mov
or
or
or
and
pop
fbld
fidivr
add
dec
mov
xchg
les
dec
jmp
mov
lods
or
adc
sub
fld
mov
daa
or
xor
and
shl
push
xchg
mov
jg
and
loopne
xor
pop
cs
or
test
bound
cmp
cmps
mov
and
push
sub
mov
inc
sub
retf
push
fmul
adc
(bad)
push
retf
xor
xlat
xor
inc
mov
pushf
or
mov
or
sbb
adc
cmp
ja
dec
sub
enter
stos
mov
mov
xchg
call
push
and
sub
dec
(bad)
hlt
enter
aaa
mov
add
and
aam
arpl
aam
inc
sbb
adc
add
add
sti
adc
ret
or
js
pop
jle
out
and
sub
xlat
movs
dec
xor
leave
xor
and
inc
imul
or
imul
ds
or
mov
xchg
fidiv
inc
cmp
jne
adc
mov
test
aam
push
push
sub
imul
lods
mov
or
sbb
test
shr
xchg
dec
das
inc
pusha
imul
add
das
pusha
call
enter
retf
jnp
dec
adc
push
call
push
dec
jne
mov
ror
jb
test
inc
mov
lds
and
movs
jp
lahf
rcr
push
fwait
je
loope
ror
jns
mov
retf
lea
jmp
mov
sub
add
cs
dec
inc
pop
xor
arpl
popa
jns
adc
dec
(bad)
inc
or
jge
out
jo
scas
xor
cwde
pop
fstp
ret
invd
adc
fadd
pop
je
or
enter
or
add
jge
je
and
int
and
pop
mov
push
dec
xor
pop
mov
inc
mov
inc
xchg
sar
inc
movs
adc
cmp
mov
sub
pop
adc
cmp
sbb
movs
adc
push
pusha
test
arpl
retf
cmp
mov
mov
call
add
xchg
(bad)
mov
jle
and
add
sti
fwait
dec
xor
pusha
jg
adc
dec
jns
mov
clc
adc
dec
pop
cmp
inc
cmp
or
sub
push
adc
or
pop
nop
mov
sub
ds
les
js
(bad)
jmp
inc
cmp
mov
aas
push
pop
sti
adc
add
adc
clc
add
xchg
aam
push
and
sub
and
adc
or
test
and
jb
or
in
inc
or
ds
ins
mov
outs
lea
mov
inc
dec
dec
leave
mov
push
push
nop
ja
rol
cmp
nop
jne
mov
mov
fs
cmp
shl
adc
or
loope
xor
xor
inc
loopne
jo
pop
cmovle
push
out
clc
jecxz
ror
push
cmps
xchg
retf
mov
movs
stos
and
xor
xchg
fmul
int3
es
fisubr
jecxz
xchg
push
mov
cmp
lds
fistp
pop
fadd
clc
xchg
push
mov
sub
popa
shl
test
imul
mov
cmp
imul
dec
mov
in
in
int3
ss
jbe
pop
mov
movs
mov
mov
mov
inc
dec
je
mov
inc
sub
sub
sbb
sub
out
xor
jae
xchg
sub
adc
sub
push
mov
pop
push
outs
jge
inc
xor
xchg
repz
hlt
inc
test
add
pusha
pop
mov
cmp
or
aam
mov
add
jbe
lods
adc
imul
loopne
adc
jmp
mov
popf
sbb
sub
addr16
fcom
mov
mov
push
(bad)
scas
xchg
js
xor
or
adc
int
cmp
nop
push
xchg
ss
popa
mov
fisttp
cmp
sbb
inc
sub
clc
outs
shl
add
dec
ja
push
test
(bad)
cmps
dec
imul
xor
inc
leave
fdivr
movs
mov
jns
adc
mov
push
pusha
xor
mov
inc
sar
dec
xchg
dec
rcr
sub
cmp
pop
add
mov
sub
test
popa
push
sub
pop
ins
dec
arpl
cdq
adc
fwait
dec
repnz
aaa
idiv
fs
adc
movs
jae
xlat
sbb
add
push
imul
mov
sub
add
movs
pop
adc
ret
dec
dec
bound
sbb
arpl
sub
sar
jmp
pop
cdq
push
popa
sbb
jmp
icebp
sbb
add
mov
pop
enter
dec
pusha
leave
adc
clc
lock
add
nop
xchg
je
test
or
mov
inc
sub
sbb
inc
add
adc
fstp
cmps
mov
sub
mov
mov
fild
inc
loop
mov
loopne
jle
add
xchg
push
mov
(bad)
dec
or
loope
jl
push
cmp
je
ret
push
or
and
mov
inc
add
or
mov
push
inc
les
lock
mov
cmp
into
repz
dec
cmc
call
mov
add
cmc
mul
push
or
call
sbb
inc
ins
test
push
mov
sar
icebp
cmp
jae
or
adc
clc
outs
push
push
mov
sbb
or
pop
mov
clc
mov
adc
push
stos
sub
pop
sub
inc
popf
(bad)
mov
pusha
sbb
sub
jno
ret
dec
cmps
sahf
mov
test
ret
jb
call
cmp
and
popa
ds
es
adc
out
lea
or
dec
punpckldq
mov
jo
ror
and
and
rcr
(bad)
pop
mov
ret
adc
cdq
add
cdq
or
xlat
jb
push
js
clc
stc
loop
(bad)
aad
sahf
leave
(bad)
in
popa
add
pop
test
adc
or
jmp
daa
adc
into
mov
cs
mov
inc
les
mov
and
inc
les
(bad)
data16
dec
pop
fiadd
sbb
push
inc
inc
test
cdq
fmul
sbb
inc
inc
pop
test
enter
jns
(bad)
pop
int3
dec
add
iret
cld
push
mov
out
cmp
pusha
scas
pusha
push
xor
cs
fmul
jge
jnp
jbe
mov
aam
jnp
nop
pop
sub
les
dec
pushf
push
xchg
cmp
pushf
fs
or
dec
xchg
and
jg
xor
stc
add
jo
lea
jmp
pushf
std
dec
pop
mov
aad
mov
jg
scas
and
push
psubsb
pop
xchg
retf
in
pop
lahf
mov
scas
lea
(bad)
and
dec
shr
ds
add
sbb
mov
bound
add
in
pop
or
pusha
sub
pusha
xchg
test
mov
mov
pop
icebp
mov
inc
adc
adc
push
xchg
mov
or
fcmovb
fwait
je
mov
enter
imul
add
add
push
fbld
pop
inc
pop
pop
sub
adc
test
fld
aaa
push
les
inc
ja
rcl
jno
mov
dec
jg
popa
(bad)
in
push
cmp
or
cwde
and
mov
or
cwde
in
push
(bad)
push
mov
inc
lods
nop
iret
cmp
xchg
cmp
stc
sub
leave
imul
cdq
mov
xor
add
and
enter
dec
lods
call
popa
mov
cli
sub
add
out
dec
jo
pop
and
push
and
sbb
je
adc
sub
lea
neg
inc
add
sbb
data16
unpcklps
fmul
adc
mov
cmp
push
cmp
or
repnz
iret
mov
repz
repz
push
jae
movs
movs
add
mov
add
enter
int
sub
das
lea
call
sbb
std
push
xchg
popf
mov
jnp
or
mov
jns
add
sbb
retf
cmp
retf
mov
aam
cwde
call
xor
je
sub
sbb
sbb
mov
fild
iret
shr
mov
push
int
mov
dec
call
inc
loopne
clc
jb
movs
cmp
jnp
lahf
mov
inc
pop
pop
cmp
popa
ins
xor
add
test
jns
jne
cmp
adc
arpl
mov
ds
fs
das
pusha
mov
cld
sub
les
enter
push
dec
pusha
add
scas
mov
out
into
jo
inc
adc
fs
movups
cmp
dec
stc
push
retf
aam
or
pop
or
lahf
sbb
pop
cli
add
jge
call
dec
repnz
int3
test
popa
jl
push
test
jo
pop
rcl
movs
xor
xor
popf
jnp
xchg
rol
int3
ror
ret
jnp
shl
nop
fistp
or
or
sbb
lea
sub
dec
cmp
je
push
(bad)
ds
int3
iret
xchg
sbb
test
js
jl
mov
xchg
in
lahf
sub
sbb
dec
sahf
(bad)
mov
dec
enter
or
call
add
cmp
ss
aad
hlt
dec
loopne
fimul
push
sub
dec
sti
call
iret
inc
xor
in
adc
cmp
inc
fcmovu
out
repnz
adc
sbb
and
rol
popa
cmp
add
repnz
(bad)
test
es
push
test
lock
js
aam
aas
and
imul
sbb
ins
fbld
inc
xchg
jp
mov
mov
ror
or
push
push
pop
clc
dec
dec
push
adc
ret
add
ret
xor
loope
test
test
sbb
imul
xor
es
test
addr16
jge
imul
clc
cmp
cwde
and
cmp
cmps
adc
cmp
out
test
cld
cmp
cmp
lsl
jns
enter
inc
outs
iret
inc
push
pop
int3
dec
sbb
xchg
mov
mov
push
cmps
push
push
imul
iret
add
and
dec
and
jo
fwait
mov
mov
mov
imul
and
sahf
not
mov
jp
(bad)
loope
movs
mov
ins
loop
sub
sub
dec
mov
sbb
mov
xchg
mov
jne
dec
sbb
repnz
jo
jo
cmps
push
iret
and
or
or
ret
mov
dec
jne
jmp
pop
jbe
outs
pop
inc
inc
or
rol
gs
popf
xchg
add
or
pop
cmp
pop
fdiv
test
mov
mov
rcr
ror
adc
jno
sub
movs
cmc
jl
ret
mov
(bad)
mov
cmp
dec
fimul
add
pop
or
dec
mov
add
add
sub
loopne
imul
adc
pop
or
sub
inc
mov
rol
push
jae
jecxz
cmp
nop
outs
repnz
mov
mov
xchg
fwait
ror
add
dec
inc
lahf
mov
mov
jmp
sbb
in
hlt
dec
xchg
sub
dec
mov
dec
out
jp
rcl
pop
add
cdq
sbb
or
lahf
sar
les
cmp
shl
xor
mov
fneni(8087
cmps
cmps
xchg
nop
xor
(bad)
sub
sbb
lods
aas
sbb
sub
mov
popf
or
mov
rcr
or
mov
mov
mov
in
mov
add
rcr
cmp
add
ror
lock
push
lds
stos
pop
dec
mov
dec
add
xchg
retf
push
mov
in
imul
xchg
lods
xchg
(bad)
arpl
pop
adc
pop
add
jmp
adc
inc
icebp
ror
push
sbb
cmp
lock
nop
jmp
pusha
leave
aaa
or
mov
or
repnz
push
xlat
dec
icebp
add
jmp
xchg
dec
push
push
aad
mul
and
or
in
sbb
(bad)
xchg
cdq
push
push
add
nop
aad
and
imul
add
aam
adc
or
and
js
push
add
and
test
dec
xor
aas
test
adc
xchg
test
int3
jo
ss
jle
mov
clc
push
push
jae
push
mov
enter
std
or
adc
es
add
add
push
fucomip
int3
adc
mov
adc
aam
inc
dec
add
dec
mov
in
(bad)
push
xor
adc
jae
mov
stos
adc
aaa
pop
push
ds
xlat
mov
rcl
dec
mov
ja
sub
or
xor
push
scas
inc
sbb
or
mov
and
call
mov
pop
inc
ss
mov
mov
(bad)
push
pop
add
adc
adc
mov
sub
sbb
pop
cmp
pushf
in
and
cmps
or
fsub
rol
arpl
test
or
jno
in
daa
inc
sbb
adc
push
or
add
pop
les
arpl
adc
sub
inc
imul
movs
sub
ret
scas
push
push
dec
sub
mov
xchg
(bad)
aaa
sub
dec
jl
and
mov
dec
inc
add
xor
outs
outs
push
enter
cmp
adc
or
cmps
mov
mov
aam
arpl
dec
adc
cmp
rcl
or
adc
and
or
es
sbb
movs
icebp
adc
xchg
scas
and
or
arpl
fcom
out
lock
lock
sub
adc
jo
in
adc
arpl
ins
enter
add
sub
push
cli
ds
fadd
and
sbb
mov
pop
cmp
arpl
sbb
add
and
pop
movs
jnp
push
sub
or
(bad)
es
adc
push
or
xchg
movs
mov
inc
pop
inc
inc
stc
clc
add
repz
jge
xor
mov
push
dec
adc
out
mov
pop
push
sub
mov
popf
loopne
mov
dec
(bad)
test
aas
xor
dec
je
mov
cld
add
adc
ret
lods
sub
cmc
out
push
xor
and
dec
jae
sub
sub
(bad)
sub
xchg
popa
lods
push
push
pusha
inc
fsubrp
sbb
pop
fnstcw
sbb
push
cmp
ret
dec
ins
dec
dec
push
sbb
call
enter
test
dec
loop
adc
jne
into
push
adc
jne
push
inc
cs
inc
inc
inc
xor
sub
jno
add
mov
dec
or
outs
push
xlat
and
jo
bound
xor
push
add
sbb
add
loopne
in
pop
jno
jg
dec
ret
arpl
xchg
push
sub
xor
popa
adc
xor
add
push
cmp
call
xor
dec
xchg
dec
inc
push
push
pop
cmp
xor
sbb
push
jmp
fs
push
(bad)
push
scas
retf
push
cmp
leave
or
adc
call
ret
fild
pop
nop
mov
sub
cwde
or
test
mov
test
inc
adc
ins
pop
cwde
and
xlat
xor
add
add
ja
mov
mov
or
add
add
xor
xlat
push
pop
and
sbb
push
push
in
fst
cmp
mov
push
pusha
xor
sub
xchg
ins
pop
xor
jo
cmp
ss
push
retf
cmp
retf
mov
pusha
pusha
dec
jmp
(bad)
fs
mov
dec
sub
rol
popa
mov
mov
retf
cmp
adc
je
sahf
or
xchg
sub
cmp
jae
xchg
push
xchg
lahf
or
inc
adc
rol
adc
jns
and
add
imul
mov
pop
cmp
loop
xchg
ret
sbb
xor
add
(bad)
jno
xchg
div
cdq
js
mov
call
jae
jbe
cmp
iret
add
les
lock
rol
repnz
jl
or
jl
mov
rcl
push
adc
(bad)
dec
push
sti
out
xlat
mov
xor
adc
sbb
cmp
jbe
scas
pop
repz
mov
mov
in
jp
lahf
movs
aas
jmp
scas
mov
test
add
sub
cmp
jbe
fdiv
push
jge
pop
(bad)
mov
test
dec
rcr
jae
mov
mov
xor
xor
add
add
add
or
or
xor
mul
daa
pop
or
jne
dec
sbb
jle
pop
mov
and
sub
ins
or
in
add
jo
sub
add
mov
das
adc
mov
push
push
jmp
mov
lds
dec
jae
jle
fild
lock
dec
add
add
mov
sub
adc
sbb
ror
pop
xchg
ins
cmp
pusha
pop
pop
mov
cmp
jbe
sub
mov
mov
ret
rcr
jle
cmp
jge
push
jp
mov
push
cmp
and
loope
mov
cmp
or
or
pusha
push
cmp
jae
fwait
cmp
adc
jbe
dec
jns
imul
in
in
ins
xor
inc
mov
test
pop
push
repz
lea
mov
mov
adc
mov
jbe
sbb
loopne
hlt
dec
push
ja
or
pusha
outs
push
or
stos
nop
and
sar
fcom
pop
add
popw
mov
nop
mov
pop
fwait
add
and
adc
or
mov
mov
pushf
and
inc
xchg
adc
enter
mov
mov
mov
in
adc
or
dec
rep
add
cld
and
(bad)
ret
adc
and
inc
push
cmp
adc
outs
(bad)
sub
and
ficomp
icebp
inc
pop
(bad)
std
fs
cdq
pop
mov
hlt
(bad)
cmp
cmps
sbb
pop
sub
fist
push
and
mov
or
push
rcr
lock
ins
inc
mov
int3
add
imul
cmp
jl
mov
sahf
aad
(bad)
js
push
sub
mov
or
mov
rcr
lahf
test
imul
cmp
and
mov
adc
xor
push
add
add
sar
xor
cs
adc
push
cs
or
mov
inc
mov
bound
push
mov
add
jmp
cmp
aaa
and
fimul
add
cmp
jbe
mov
mov
sub
cmp
jle
or
neg
inc
(bad)
sbb
retf
jl
or
dec
imul
sbb
cmps
sub
mov
adc
sbb
pop
cmp
pop
xchg
push
cmps
mov
lods
mov
push
or
push
xor
sub
cmp
add
push
out
jae
aam
cmp
shr
push
(bad)
pop
push
fiadd
push
scas
xor
adc
dec
add
xchg
jg
or
or
rol
add
add
push
ja
movs
clc
jbe
mov
xor
test
pop
inc
dec
sub
xor
push
int
add
sbb
mov
cli
inc
(bad)
sub
mov
inc
jmp
xchg
jae
or
or
rcl
fild
xchg
adc
loop
sbb
add
xor
mov
jnp
and
fsubr
sub
sub
(bad)
jbe
pusha
add
je
mov
inc
and
jmp
test
ror
mov
je
pusha
sub
add
add
mov
mov
dec
inc
jbe
(bad)
jecxz
push
or
ja
mov
inc
retf
pusha
test
outs
jl
adc
jl
mov
clc
test
mov
mov
(bad)
push
ucomiss
lea
pop
push
loop
push
inc
fsub
in
push
inc
dec
dec
dec
fcom
or
mov
dec
xchg
add
shl
and
in
add
add
std
retf
push
mov
or
ret
mov
(bad)
jl
lods
adc
pcmpeqw
adc
test
xor
daa
lock
lahf
repnz
repnz
test
jge
mov
mov
push
mov
rol
mov
and
pop
cmp
or
popf
add
mov
mov
hlt
in
sbb
mov
push
lds
loop
fbstp
(bad)
imul
ins
fisttp
lods
pop
stc
mov
dec
or
cmp
or
loop
hlt
sub
mov
les
out
clc
inc
in
xchg
out
inc
jmp
cmp
jmp
aas
or
aad
sar
sar
and
and
retf
add
imul
ss
ds
add
push
pop
movs
les
mov
shl
and
add
clc
pusha
inc
or
imul
fdivr
movs
mov
adc
sub
and
cmp
or
setnp
fist
or
cmp
bound
ret
test
add
cmp
ficomp
mov
pop
xchg
jle
jmp
push
adc
or
xchg
jg
cmp
push
or
pop
jmp
mov
add
rcr
mov
aaa
push
or
mov
dec
or
adc
mov
cwde
idiv
fstp
jge
outs
mov
loop
inc
jmp
retf
out
in
mov
scas
das
and
dec
mul
outs
fldcw
imul
inc
es
push
sub
inc
xchg
or
jl
xor
xchg
dec
dec
data16
inc
or
fmul
and
jmp
cmp
mov
addr16
jmp
jno
adc
and
sbb
pop
xchg
cmp
xor
mov
fcomp
imul
inc
dec
mov
test
or
test
add
inc
out
jp
mov
fs
push
test
add
xor
add
dec
jb
fdiv
pop
add
stos
pop
pusha
mov
in
add
xor
fiadd
out
inc
fimul
or
mov
fimul
or
imul
pop
mov
fiadd
lock
test
cmp
push
inc
or
mov
inc
jle
iret
mov
jmp
pop
inc
sbb
mov
in
sbb
(bad)
ins
cmp
retf
movs
add
xor
lea
iret
or
xor
jne
sub
jae
cmp
sub
fisttp
mov
call
add
xlat
ds
arpl
or
imul
lahf
js
dec
test
mov
cmp
(bad)
mov
nop
inc
fidiv
(bad)
or
lods
fcmove
loope
mov
mov
push
add
xor
or
scas
push
(bad)
(bad)
cmps
mov
jle
mov
(bad)
loopne
outs
mov
or
ja
movs
inc
cld
mov
jo
push
repz
inc
fstp
into
jne
or
in
cmp
imul
or
leave
out
pusha
je
cmp
je
and
sbb
pop
or
add
xchg
inc
test
push
adc
inc
jo
add
push
sbb
(bad)
cwde
cmp
movs
jp
hlt
retf
ins
push
mov
or
or
xlat
mov
aaa
adc
mov
pop
sbb
fmul
loope
jge
push
and
mov
popa
mov
push
aaa
in
push
(bad)
or
aaa
cmp
sub
in
js
bound
jp
fcomp
std
mov
add
hlt
adc
rol
inc
jmp
inc
out
jle
xchg
rol
jmp
cld
cs
movaps
test
jg
add
sub
cmp
aas
mov
jmp
dec
ret
fs
pop
sbb
enter
jbe
outs
adc
popa
test
push
fisub
pushf
inc
(bad)
push
push
ss
and
sub
pushf
sbb
mov
xor
jl
enter
xor
jo
mov
pop
(bad)
out
and
in
call
into
dec
push
adc
xchg
test
into
retf
push
retf
push
sti
adc
mov
gs
aaa
and
push
fisubr
inc
(bad)
sbb
pusha
clc
add
into
dec
js
dec
add
add
or
gs
in
sub
test
outs
jmp
loopne
inc
loop
or
mov
(bad)
pop
pop
jo
inc
inc
sbb
push
cmp
sub
sahf
je
test
push
push
mov
mov
enter
call
jb
sub
xor
adc
inc
jo
mov
rol
mov
jbe
stc
test
mov
in
add
aas
jnp
mov
inc
mov
add
ror
sub
push
repnz
pop
or
ins
adc
adc
pop
movs
repnz
pop
push
mov
into
cli
or
mov
loope
repz
scas
mov
cmc
jbe
mov
pop
imul
mov
fs
out
jmp
add
adc
iret
lea
in
lea
(bad)
(bad)
or
stc
icebp
js
mov
ret
jl
mov
sbb
dec
mov
ror
sub
jae
jg
aad
or
jns
or
mov
sub
cmp
je
and
add
or
inc
add
add
into
dec
retf
fcom
and
pop
add
movs
mov
adc
punpcklbw
dec
ror
mov
mov
mov
jg
jmp
js
dec
mov
out
ins
pop
xor
xchg
cmp
add
das
inc
or
mov
mov
pushf
fcomp
and
sub
cdq
(bad)
jae
sub
add
inc
add
int3
mov
imul
ja
sub
add
hlt
mov
cmp
popf
mov
das
dec
mov
jmp
cmps
and
mov
fcmovu
add
movs
jge
jb
jp
sar
xor
sbb
in
jle
push
loope
lods
cmp
adc
imul
imul
loope
sbb
or
cmp
mov
or
stos
cmp
adc
push
xlat
sbb
adc
shrd
add
mov
push
lods
jno
add
push
dec
and
jp
inc
cld
jl
in
sbb
push
add
add
bndstx
test
add
adc
(bad)
bound
adc
xchg
push
mov
dec
fild
inc
or
inc
xlat
fprem1
pusha
stos
mov
out
setno
(bad)
cmp
hlt
push
popa
fisttp
pop
lds
jl
push
(bad)
jbe
add
inc
rol
call
jb
out
and
cmp
je
inc
xchg
push
jle
cmovle
adc
and
dec
xchg
xchg
icebp
inc
push
or
out
cmp
push
rol
xchg
push
lds
into
das
out
out
add
add
ret
jmp
jle
add
mov
push
ins
push
call
adc
loopne
xor
sbb
ins
into
push
pop
adc
aaa
das
nop
inc
arpl
daa
popa
mov
or
adc
pushf
or
sub
push
ins
adc
data16
movs
sbb
adc
add
js
outs
sbb
jmp
add
push
jmp
sbb
push
inc
add
addr16
sub
lods
pop
adc
inc
sub
dec
ins
sbb
in
sub
pop
inc
dec
push
sbb
mov
add
inc
jo
enter
addr16
add
dec
or
jmp
pop
and
and
sbb
pop
iret
pop
call
add
test
pop
scas
clc
pop
inc
ins
jne
pop
sbb
adc
dec
add
(bad)
cmps
daa
popa
mov
or
mov
jmp
xchg
scas
into
rcl
cmp
inc
enter
or
rol
fsubr
or
xchg
sub
add
and
xchg
fst
test
dec
movs
fnstenv
dec
hlt
cld
mov
inc
xchg
mov
adc
inc
outs
push
add
cmp
fs
shl
add
test
xchg
cmp
dec
int3
inc
pop
add
in
and
lea
sub
dec
sahf
mov
or
test
xor
cs
daa
retf
push
pop
sub
adc
int
inc
jmp
pop
clc
jge
adc
sub
inc
and
popa
push
push
enter
aas
stos
mov
push
xchg
add
aad
cmp
cmp
pop
add
inc
or
xchg
dec
xchg
cwde
call
pushf
xchg
in
ret
dec
sbb
jnp
sub
mov
mov
stos
jo
push
sbb
and
pushf
pop
dec
dec
jo
jmp
lea
adc
cmp
out
lea
cmp
and
cld
add
sub
add
xchg
scas
in
add
nop
sub
int3
das
loop
inc
aas
mov
lea
test
add
popa
xor
adc
test
cwde
test
mov
xor
cmp
mov
(bad)
xor
push
adc
xchg
push
lods
xchg
ret
rol
push
add
popa
pop
cld
mov
sbb
sbb
add
pop
adc
mov
dec
add
lea
mov
cmps
xor
adc
pop
icebp
jae
into
lea
sar
jmp
nop
cwde
rol
ret
push
mov
and
add
or
gs
push
outs
inc
or
pop
or
adc
mov
sub
xor
inc
and
push
outs
cmp
mov
test
popa
lods
and
mov
or
int3
outs
enter
lock
or
shl
sub
adc
or
mov
and
adc
cmp
inc
or
jns
sahf
mov
out
je
pop
je
sbb
sub
push
adc
cmp
and
inc
cmp
mov
inc
test
or
mov
mov
adc
mov
sbb
dec
inc
(bad)
loopne
dec
xor
mov
fnstcw
inc
cs
rcr
pop
lods
scas
pop
xchg
and
add
push
push
test
and
xor
sub
adc
mov
jbe
jge
inc
sub
enter
push
(bad)
jl
pop
and
push
sub
xor
mov
cmp
and
and
cs
push
adc
bound
neg
sub
or
into
push
and
sbb
fsubr
sub
jmp
call
add
fidivr
push
cmp
repz
loopne
push
sbb
aas
pushf
inc
cmp
pop
cmp
sbb
popf
in
add
scas
shl
call
add
mov
and
pop
mov
sbb
and
sbb
xchg
fs
(bad)
dec
pop
repz
jg
pop
sub
inc
mov
pushf
mov
es
clc
mov
scas
lea
imul
pop
mov
pop
les
pusha
(bad)
dec
pop
das
int3
js
push
jae
ins
adc
lods
pop
daa
add
icebp
cli
js
mov
cmp
adc
stos
hlt
movs
cmp
add
(bad)
lods
or
mov
adc
mov
jbe
jmp
push
fidiv
mov
jecxz
(bad)
sbb
sub
push
ror
push
arpl
mov
arpl
mov
jo
sti
nop
pop
or
dec
cs
retf
mov
ss
jg
adc
test
pop
mov
in
call
(bad)
ja
xor
fisub
movzx
arpl
mov
ret
clc
(bad)
jge
sbb
and
test
add
jno
je
sti
xchg
inc
les
cmc
sar
mov
xor
or
lock
jecxz
(bad)
(bad)
mov
jg
out
mov
sbb
lods
jmp
cmp
jmp
push
movzx
and
dec
sub
sub
adc
or
adc
imul
sub
rcr
loopne
mov
js
imul
xchg
shl
pop
mov
je
and
mov
sbb
cmp
and
inc
dec
ror
xchg
adc
dec
push
xor
inc
sub
imul
mov
popf
pop
xchg
mov
nop
mov
icebp
popa
cmp
mov
adc
pop
mov
icebp
nop
bound
and
rol
push
jl
or
pop
inc
jge
lea
or
pop
(bad)
int
push
cs
in
sar
test
(bad)
out
cmp
add
xor
pop
and
loop
cld
xor
ficomp
or
inc
sbb
or
add
(bad)
cli
or
sbb
enter
nop
sub
push
nop
inc
adc
and
nop
addr16
js
leave
pop
icebp
pusha
out
add
add
test
xor
jo
aam
ror
push
ror
and
mov
int
clc
sub
jbe
mov
adc
push
iret
call
fs
cmp
call
sub
es
xchg
stos
xchg
je
inc
mov
(bad)
and
lods
in
lahf
cmp
neg
and
mov
jbe
jns
cmp
ror
out
sar
push
dec
pop
lods
add
das
push
jbe
rcl
xchg
sbb
push
add
push
pop
ja
xchg
and
cmp
(bad)
fistp
dec
jb
pop
or
pop
or
jmp
cmp
je
mov
add
push
sbb
pusha
jo
dec
push
lods
jmp
add
(bad)
and
add
dec
xchg
or
clc
mov
sub
mov
das
pusha
dec
(bad)
add
add
xchg
movsx
and
add
rol
fimul
call
inc
fisub
sub
mov
or
add
pop
jmp
mov
mov
add
jl
das
sbb
fisub
(bad)
sub
add
sub
xchg
inc
fisttp
enter
rcr
in
push
nop
add
pop
add
push
in
add
mov
sbb
inc
in
xor
jo
pop
enter
sub
sub
and
shr
(bad)
xchg
dec
jle
dec
add
xor
sub
ret
push
push
dec
cmp
dec
shr
pop
inc
add
dec
dec
ds
xor
and
mov
dec
out
in
shl
dec
and
loope
lea
adc
sbb
loopne
push
push
jmp
dec
adc
dec
popa
fs
xchg
sbb
inc
fsubr
out
xor
movs
push
scas
pop
or
ds
fisubr
mov
mov
jb
hlt
jp
xor
inc
mov
add
xor
pusha
adc
mov
cmp
fs
sub
fist
dec
mov
pop
sbb
push
push
xor
hlt
test
add
mov
xor
(bad)
ror
jmp
mov
dec
mov
jmp
sub
add
pop
js
repz
mov
sub
sub
jmp
inc
lods
xchg
mov
add
push
sbb
jbe
rcl
pop
add
movs
dec
jns
sbb
ins
je
pop
jecxz
cwde
xchg
dec
push
and
div
adc
xor
adc
push
xor
cmp
les
xor
sub
test
sub
xor
xchg
xor
je
add
or
cli
nop
popf
mov
cmp
inc
dec
cmp
js
sub
(bad)
fild
mov
push
pop
jp
add
add
push
call
icebp
jle
stos
test
or
cmp
test
mov
push
and
jl
mov
in
inc
inc
mov
ficom
xor
add
fsubr
push
int3
cmps
dec
adc
mov
push
push
cmp
(bad)
xchg
inc
lea
and
(bad)
lea
mov
icebp
je
mov
add
sbb
adc
sub
sahf
or
add
inc
and
xor
dec
mov
dec
jmp
fdivr
rcr
pop
sub
xchg
int
or
and
sub
dec
mov
cli
dec
loopne
inc
mov
inc
inc
stos
mov
sar
inc
xchg
add
mov
loop
mov
hlt
fcom
les
in
xchg
clc
shr
or
push
add
ror
xor
mov
jo
mov
mov
test
shl
xchg
sub
mov
js
pop
aam
ror
xchg
cdq
js
int
adc
mov
mov
cmp
fistp
inc
inc
jg
ins
call
pushf
lea
mov
mov
pushf
inc
push
loopne
mov
inc
add
xor
ss
gs
jne
jge
sub
dec
xchg
xchg
jl
jle
jno
aaa
fs
cwde
pop
jl
xor
pop
aaa
fcomip
sbb
and
dec
lock
cmp
inc
mov
out
pop
mov
inc
mov
pop
or
(bad)
mov
add
sbb
mov
add
shl
add
mov
inc
xchg
mov
xchg
add
or
pop
cs
or
mov
mov
jle
mov
cmp
jne
fldenv
xor
and
movs
adc
gs
or
cmps
test
mov
les
dec
(bad)
jb
jae
inc
xchg
xchg
dec
or
push
ror
imul
mov
mov
add
aad
mov
add
test
xchg
jne
mov
mov
out
lahf
lea
and
add
je
jge
mul
push
mov
aaa
imul
test
clc
push
or
inc
std
or
xor
add
lods
fistp
cmp
int3
stos
adc
jle
adc
or
lock
cmp
mov
and
sbb
push
test
lea
or
or
xchg
adc
xchg
aas
(bad)
ror
pop
mov
xor
inc
dec
lods
and
add
in
and
add
(bad)
adc
dec
dec
inc
sub
dec
dec
retf
xor
repz
(bad)
out
lea
and
cmp
sub
adc
imul
mov
enter
loop
test
(bad)
leave
in
jb
adc
mov
sub
adc
test
(bad)
jge
jmp
and
jne
push
sbb
retf
add
and
mov
push
cmp
push
cdq
repnz
sti
push
idiv
inc
add
je
inc
mov
les
xor
sahf
fs
lods
in
sbb
add
loope
xchg
shl
adc
cmp
repnz
pop
xor
cmp
xor
retf
xor
mov
dec
sub
add
fs
mov
add
aaa
adc
ret
movs
xchg
xor
inc
jmp
scas
add
sti
daa
lds
rol
(bad)
(bad)
mov
sbb
or
xchg
sbb
and
sub
psrad
fistp
mov
out
(bad)
sub
fidiv
xlat
call
adc
pop
inc
dec
fnstenv
js
mov
dec
and
cwde
xlat
push
jg
push
cwde
lahf
sub
mov
adc
or
test
aas
mov
lock
repnz
add
push
xor
data16
lea
xchg
sbb
or
xchg
mov
leave
sbb
cld
mov
jmp
ins
mov
adc
stc
mov
xchg
mov
xchg
adc
dec
xor
pop
and
inc
inc
and
sbb
xchg
scas
mov
ret
nop
adc
pop
inc
in
add
or
mov
and
sub
retf
add
push
push
xor
mov
lahf
sub
adc
sbb
mov
test
push
inc
cdq
jbe
mov
add
jbe
add
mov
add
sub
cmp
mov
push
and
fdivr
push
bound
xor
add
int3
push
dec
mov
and
aaa
lea
pop
xchg
test
jle
and
xchg
jbe
push
mov
adc
ret
sbb
adc
js
xor
fcom
or
cmps
inc
dec
(bad)
imul
shl
adc
push
ret
repnz
neg
shl
arpl
mov
shr
push
sahf
fs
ins
push
daa
and
imul
(bad)
in
sbb
push
in
ficom
jne
xchg
out
test
push
sub
xor
or
sar
ins
and
or
in
lahf
leave
sar
sbb
mov
adc
lea
or
adc
or
cmp
xchg
sti
pop
(bad)
pop
enter
jo
je
adc
inc
nop
pusha
or
loop
mov
mov
out
mov
ror
mov
les
sti
add
cmovnp
dec
imul
loop
or
sbb
imul
mov
or
dec
xchg
jl
loopne
inc
add
loop
mov
mov
push
sbb
mov
neg
mov
sub
int
retf
int3
(bad)
fsubr
push
in
push
fsub
rcl
xor
movs
in
hlt
(bad)
in
xchg
imul
in
aaa
cld
bound
rcr
mov
lea
sar
xchg
adc
mov
mov
add
loopne
cmp
add
mov
adc
mov
xor
retf
(bad)
add
movs
sbb
imul
aam
(bad)
push
inc
cwde
sbb
or
data16
adc
mov
push
and
jbe
mov
dec
push
shl
mov
cmps
fld
sbb
inc
or
or
pop
add
xlat
xor
push
inc
(bad)
loopne
fcmovnb
out
xrelease
les
imul
mov
int3
mov
(bad)
cmp
sbb
mov
and
jne
xchg
test
jmp
inc
pop
pop
dec
aaa
xchg
loope
cwde
fisttp
sub
pusha
adc
xor
or
xor
sbb
add
adc
sub
int3
push
lea
rol
or
hlt
mov
jmp
dec
add
imul
hlt
inc
popa
jne
adc
mov
cwde
shr
dec
push
xor
jmp
ret
xchg
add
xchg
cmp
dec
movs
mov
jae
mov
imul
mov
dec
push
data16
aas
outs
out
hlt
shr
xor
add
sar
dec
ja
pop
xchg
push
loopne
cmp
xchg
scas
sub
jo
lods
fbstp
jo
jb
mov
jns
mov
das
movs
add
or
xchg
ret
mov
xor
fisubr
add
sbb
mov
mov
mov
inc
push
cld
or
lock
pop
add
jl
inc
repz
outs
add
mov
aam
jmp
dec
lock
jmp
ret
pop
add
mov
repz
add
jge
stos
mov
sbb
stos
sti
push
sbb
fadd
es
ror
cmp
mov
(bad)
add
out
jae
fucomp
push
dec
fmul
inc
xor
call
sbb
or
adc
enter
push
mov
fisubr
repz
xor
cli
aam
out
mov
aas
inc
fadd
adc
mov
sbb
push
les
pop
adc
call
sbb
das
jo
or
mov
test
aas
lock
pop
inc
sub
mov
pop
loop
loopne
or
jmp
sbb
je
and
push
inc
or
add
cld
dec
cmp
es
bound
cvtps2pi
loope
pop
adc
pop
jno
adc
and
push
push
adc
add
das
mov
aaa
or
lods
jg
or
and
imul
rol
adc
mov
in
lods
test
in
dec
popa
sbb
dec
dec
mov
jl
call
push
cwde
stc
cld
faddp
aas
xor
jne
adc
and
inc
mov
test
je
fisub
aaa
add
add
lahf
adc
inc
js
mov
or
aaa
es
fsub
icebp
ins
jbe
sub
inc
sub
andnps
rcl
mov
push
mov
adc
call
sub
pusha
inc
bound
lock
or
scas
ret
inc
adc
inc
jle
dec
out
or
mov
push
dec
adc
cmp
outs
cmp
xbegin
aad
jecxz
mov
or
xor
outs
jbe
aam
jp
pop
push
ret
push
js
or
add
add
pusha
or
jmp
jl
pop
mov
jmp
call
xchg
xchg
fwait
push
lock
popa
int3
out
and
movs
retf
mov
cmp
xchg
js
and
inc
inc
nop
xchg
push
add
test
mov
mov
add
mov
pop
pmuludq
fidivr
add
dec
dec
push
dec
inc
add
add
add
pop
ror
int3
pop
mov
sbb
push
scas
inc
adc
test
jmp
ds
xchg
inc
lock
pushf
push
add
xor
int3
adc
sub
xor
pop
xlat
add
jmp
lea
cs
cdq
or
mov
jmp
xchg
xor
sbb
call
jp
sub
dec
and
inc
cwde
pushf
inc
adc
xchg
lea
lock
fcom
addr16
sbb
ds
and
push
pushf
sbb
jmp
(bad)
adc
clc
scas
test
cmps
push
pop
rol
inc
cmps
add
lock
mov
fld
fadd
fistp
mov
adc
mov
add
jl
jge
jl
and
xchg
cmp
js
adc
(bad)
dec
jo
and
ja
pop
add
and
loopne
sbb
mov
aas
pop
sahf
adc
out
sub
xchg
or
dec
adc
test
dec
push
bswap
mov
ret
in
std
xor
xor
and
mov
mov
mov
mov
orps
push
pop
sbb
mov
test
adc
mul
call
mov
popa
mov
xor
and
push
sub
mov
ret
jge
mov
dec
retf
ja
test
cs
inc
adc
cmp
(bad)
inc
mov
sub
retf
icebp
loopne
inc
pop
les
je
cmp
fiadd
retf
outs
adc
mov
mov
inc
jns
inc
adc
jmp
cmp
jl
daa
and
je
pop
dec
pop
ret
cmps
xchg
cmp
clc
paddb
shl
add
sbb
push
or
push
rcl
in
retf
mov
dec
inc
sbb
jo
add
sar
ja
inc
dec
call
fs
rcl
add
xchg
inc
sahf
jl
inc
fisub
lea
inc
jecxz
mov
ret
jno
inc
dec
scas
pop
clc
sahf
popa
mov
and
ds
aas
xor
mov
adc
cmp
dec
dec
mov
and
push
mov
mov
mov
mov
clc
(bad)
jno
adc
ins
pop
js
mov
xor
cli
lea
inc
js
outs
adc
hlt
adc
int3
xchg
jle
or
ja
push
nop
add
adc
jbe
sbb
sub
push
cmp
sub
cmps
sbb
add
sub
sbb
mov
push
push
ja
adc
add
in
mov
les
call
in
xchg
or
retf
push
jle
or
and
icebp
adc
fisttp
pop
dec
push
js
sbb
mov
je
push
xor
mov
sub
sbb
adc
inc
cmp
adc
inc
or
pop
ja
lock
pop
add
xor
aaa
push
lock
enter
and
mov
int3
or
push
call
(bad)
into
aaa
sub
test
mov
fisubr
mov
sbb
jle
(bad)
jecxz
shr
xchg
or
in
jge
xor
push
inc
js
add
or
inc
stos
dec
pop
dec
es
push
or
lock
loop
loop
clc
popf
call
mov
sbb
mov
hlt
pop
mov
push
add
mov
sub
add
xor
cmp
add
in
jl
and
cmp
or
test
dec
in
xchg
je
fsub
sahf
xor
pop
add
mov
mov
sub
call
xchg
mov
lock
clc
pusha
sahf
mov
mov
inc
jnp
adc
xor
adc
sbb
xlat
inc
and
loop
fucomp
shl
adc
retf
jnp
rcl
mov
mov
hlt
gs
xchg
int3
or
clc
xchg
loopne
sbb
call
iret
sub
loop
cmp
mov
test
push
call
mov
sar
aaa
mov
rol
popa
inc
fadd
enter
sbb
push
(bad)
shl
rcl
add
enter
popa
xchg
dec
(bad)
mov
mov
push
mov
rcl
dec
shr
mov
out
push
mov
or
pop
pop
inc
adc
and
dec
imul
mov
fcom
inc
leave
xchg
fstp
cmps
stos
cmp
sbb
push
cld
js
jmp
dec
ss
push
adc
or
aam
adc
pop
xor
push
xor
pop
push
fist
push
int3
ins
movsx
and
sbb
mov
and
leave
push
dec
dec
adc
test
cwde
sbb
sub
ret
sub
add
or
dec
and
pop
rcr
and
add
adc
out
sbb
ja
outs
jmp
mov
aam
xor
add
out
das
lods
mov
jno
aaa
repz
xchg
and
sbb
pop
ja
in
scas
pop
lahf
push
mov
cli
sub
(bad)
out
jo
xchg
or
ror
test
gs
jnp
jl
fwait
or
nop
sbb
rcl
and
imul
dec
adc
and
dec
es
je
clc
fstp
arpl
repz
daa
ds
pop
sbb
cmp
and
mov
cwde
sub
sbb
sti
movs
imul
push
push
ins
jmp
dec
xor
out
sub
mov
inc
sbb
(bad)
(bad)
imul
inc
add
(bad)
lds
add
jns
aad
jb
push
ror
xchg
push
and
ret
xlat
and
inc
addps
sbb
dec
xchg
stc
adc
dec
retf
xchg
rol
aaa
aaa
das
jmp
fwait
cmp
in
and
cmp
xor
add
push
icebp
movs
sbb
cmps
jmp
push
retf
scas
add
cmps
jbe
or
add
scas
test
scas
sar
fld
xor
(bad)
sub
inc
add
inc
mov
adc
inc
dec
push
sub
or
jl
call
dec
lea
and
out
xchg
jo
cmp
jge
scas
jle
push
dec
pop
loope
inc
jbe
jg
(bad)
or
xor
push
adc
dec
in
pop
cwde
or
mov
dec
xor
je
cmp
arpl
scas
daa
sahf
mov
cmp
sbb
and
iret
or
je
loopne
mov
fs
cmp
pop
js
mov
jecxz
enter
into
js
jg
push
shl
int3
mov
pop
push
push
fs
sbb
cmp
sub
cmp
sbb
movs
mov
jo
jge
inc
mov
add
jge
rol
jle
fiadd
dec
jne
mov
or
mov
or
inc
enter
inc
sub
sub
and
or
std
jbe
cmp
in
dec
inc
cld
mov
lea
add
sar
pop
adc
xor
out
push
and
dec
sbb
mov
fist
jl
sbb
xor
out
dec
cs
jge
cmp
lods
xor
jns
dec
jo
cs
xchg
cmp
mov
mov
add
xchg
test
into
sub
das
loopne
les
icebp
xchg
out
mov
add
loope
in
mov
ffree
cmp
push
in
push
or
mov
cmp
cs
fst
sbb
out
cmp
rcr
shl
mov
inc
ret
mov
add
inc
add
cdq
rol
loop
sub
dec
add
cmp
imul
mov
add
in
loopne
sar
add
jl
jecxz
adc
in
jb
std
inc
inc
sub
rol
jle
test
adc
inc
addr16
sysenter
sbb
sbb
rcr
dec
xchg
es
lock
inc
cmp
not
mov
jg
loop
dec
push
jmp
pop
pusha
movs
sbb
arpl
ds
adc
test
dec
cmp
or
lods
cmps
imul
adc
cmp
sub
lods
loope
jge
sub
sub
adc
dec
cmp
adc
imul
jb
add
inc
daa
jne
out
pop
pop
je
dec
aam
add
add
or
aas
and
adc
mov
retf
cmp
or
out
jmp
sbb
mov
sub
adc
adc
cmp
dec
sbb
adc
mov
push
(bad)
dec
pop
test
adc
mov
mov
sahf
sbb
sbb
jb
das
pop
les
pop
cmps
xor
or
pop
adc
jb
stos
mov
into
push
rcl
and
xchg
jg
or
adc
cmp
cli
stos
or
mov
cli
jae
jl
add
xor
ins
loope
in
xor
popf
ds
add
jmp
sti
shl
loope
sbb
sbb
lods
add
push
jmp
fadd
inc
popa
(bad)
add
cmc
movs
sar
add
retf
jmp
lahf
add
cmp
xchg
inc
scas
sub
rcl
(bad)
cs
test
ror
or
loope
inc
cmp
cs
(bad)
push
or
mov
pop
sub
push
imul
adc
mov
push
arpl
mov
mov
sub
(bad)
and
inc
inc
mov
scas
mov
adc
push
sub
les
cmp
fidivr
rcr
sub
xor
rcr
xor
in
sbb
mov
dec
sar
in
loopne
or
push
call
fmul
dec
dec
in
loope
fsub
mov
enter
and
ror
and
inc
shr
inc
hlt
fcomp
cld
popa
mov
lea
cdq
shl
cmp
xchg
test
xchg
sub
rcl
lock
std
fs
enter
lock
stos
data16
cld
sbb
inc
mov
cmp
jnp
inc
clc
jge
clc
sub
xchg
ret
lock
jae
inc
ja
retf
jmp
inc
in
jle
xor
dec
clc
and
in
adc
pop
daa
or
sbb
enter
(bad)
rcr
into
mov
inc
call
call
jg
mov
mov
outs
push
dec
ffreep
mov
cmp
jge
or
pop
into
or
sbb
test
push
add
add
lea
aas
jo
or
inc
sti
aam
pop
mov
inc
test
cmp
jl
shl
push
aas
push
(bad)
std
neg
sub
lea
arpl
add
mov
sbb
cmovbe
add
push
pop
(bad)
fild
xchg
mov
fsub
or
push
data16
xchg
sub
inc
inc
mov
sub
adc
xchg
cs
jo
mov
movs
call
sub
lea
sahf
jo
sub
push
add
adc
add
adc
retf
cmp
mov
push
add
or
aad
jmp
inc
xchg
pop
push
jg
retf
pop
mov
adc
cmovno
pop
jle
jmp
dec
cmp
jge
mov
stos
mov
sbb
jge
xor
mov
sbb
mov
dec
jge
jl
add
shl
and
in
mov
aam
sub
push
shl
xchg
or
adc
sub
ins
(bad)
in
nop
xor
push
push
sbb
jge
add
clc
frstor
add
add
dec
sbb
add
data16
mov
xor
into
outs
scas
jg
push
sbb
repz
je
mov
daa
nop
shl
pusha
pop
enter
fimul
pop
dec
sub
or
jmp
inc
sbb
xor
inc
aam
mov
add
out
push
int
lock
jl
enter
je
or
sbb
(bad)
add
in
cmp
popa
mov
sbb
mov
dec
sbb
push
in
jbe
into
dec
fimul
add
push
mov
and
push
xor
ret
test
mov
pop
icebp
repnz
cmps
or
push
or
prefetcht1
jo
fs
lock
push
cmp
mov
xchg
jp
lahf
dec
xchg
int3
loopne
cmps
jge
test
in
rol
sub
nop
mov
movs
nop
add
les
popa
clc
pop
aaa
nop
push
ins
loopne
cmp
pop
lods
sub
neg
add
mov
xchg
dec
pushf
mov
fmul
fcomp
loope
loopne
inc
mov
cmp
push
cmp
xor
and
mov
test
into
xchg
pop
xor
mov
jmp
or
mov
call
sub
push
push
ja
mov
sub
ins
mov
add
and
adc
les
outs
or
loopne
mov
jbe
cmp
fist
add
movsx
repnz
sub
sbb
sar
sub
xchg
sahf
jo
(bad)
js
call
sbb
mov
inc
fmul
shl
xchg
or
sahf
mov
sub
test
fmul
adc
cmp
adc
mov
dec
push
ss
xor
sbb
push
push
jmp
mov
out
adc
jl
and
mov
mov
dec
push
xor
shl
sub
mov
cwde
fsubr
cmp
shl
add
push
pop
adc
mov
rcl
(bad)
sub
cmp
cli
scas
std
push
fadd
lock
(bad)
push
push
mov
jl
add
sbb
ret
push
in
pop
xchg
scas
aam
fcom
fdiv
lods
jne
mov
sbb
dec
ror
xor
ror
or
push
mov
iret
dec
movs
into
jb
fdivr
dec
jb
mov
shl
cmps
imul
call
pop
mov
scas
gs
or
mov
movs
add
mov
dec
sub
adc
fwait
ins
cli
neg
mov
test
inc
inc
jl
lea
jae
fnstenv
fidivr
adc
inc
sub
push
dec
jo
loope
dec
jl
pop
adc
fist
jg
pop
dec
dec
dec
mov
stos
mov
sbb
fs
adc
ins
test
imul
inc
sbb
pop
add
inc
pop
add
sbb
mov
mov
push
ds
data16
push
push
add
dec
inc
add
cmp
cmp
mov
mov
push
and
test
test
(bad)
(bad)
sti
push
cmps
mov
push
lea
push
jp
inc
adc
adc
iret
test
popa
int
or
xor
add
(bad)
sub
cmp
and
and
push
pop
push
outs
lock
adc
pop
push
cmp
sbb
jo
addr16
adc
mov
(bad)
mov
daa
fldcw
aas
lods
adc
js
sahf
cmc
add
ins
test
or
push
sub
mov
or
loope
mov
iret
pushf
jmp
push
adc
add
sub
xor
stos
adc
imul
push
jnp
sub
jge
cmp
dec
push
imul
pop
jle
sbb
mov
fld
and
xchg
ret
add
pop
es
test
adc
or
cs
dec
push
jb
xchg
cmp
jns
sub
xchg
xchg
jge
or
cmp
xor
add
jno
mov
push
push
xlat
push
dec
inc
(bad)
push
ficom
fidivr
test
test
fcomp
mov
push
lock
movs
ret
cmp
mov
and
push
dec
ror
rol
push
add
inc
sub
(bad)
add
cmp
jl
outs
push
fwait
add
pop
or
cmp
mov
push
gs
sub
adc
xor
inc
test
jbe
cwde
ror
pop
jae
loope
inc
cmp
fadd
pusha
inc
cmp
into
cmps
test
sub
xchg
(bad)
bnd
test
mov
jl
sbb
mov
out
dec
idiv
mov
mov
adc
or
shl
jns
cli
mov
sar
push
fcomp
pop
cli
dec
adc
stc
add
sbb
(bad)
pop
cmp
sub
push
adc
inc
aaa
push
pop
dec
inc
ss
gs
outs
sahf
rol
ins
scas
popa
jmp
bnd
and
lods
out
js
shr
and
data16
add
(bad)
in
and
xor
mov
and
ss
or
jle
fadd
or
sub
cdq
push
and
mov
add
adc
pop
cmp
inc
in
leave
in
loopne
cmps
test
call
arpl
or
retf
pop
test
cmp
pop
jno
(bad)
rol
xchg
cs
sub
repz
cmp
int3
retf
mov
mov
adc
lea
inc
inc
xor
dec
adc
push
cmp
sbb
push
push
add
scas
loopne
sbb
(bad)
scas
out
cmp
mov
mov
fadd
jmp
push
loopne
hlt
ss
sbb
(bad)
ds
js
inc
jo
dec
ror
adc
jmp
int3
addr16
push
xor
xor
and
inc
adc
xor
or
aam
push
loopne
cmps
sahf
out
push
test
and
mov
or
jp
sbb
mov
jge
sbb
push
(bad)
rcl
cmp
shl
mov
and
inc
xor
inc
jb
adc
cmc
out
test
mov
cmp
dec
adc
cmp
mov
add
inc
push
inc
pushf
lods
inc
dec
je
dec
jne
or
push
pusha
(bad)
pop
push
xchg
mov
call
mov
inc
fistp
jecxz
and
pop
or
inc
mov
cmps
push
sahf
cmp
movs
fidiv
mov
into
cld
add
out
push
fisub
shl
xlat
jb
cmps
dec
add
xor
xor
xor
iret
pop
xchg
xor
sbb
imul
das
iret
loope
push
pusha
retf
mov
push
add
iret
dec
fcmovb
ins
add
inc
or
push
adc
out
shl
mov
xor
pop
mov
or
push
cmps
jns
imul
cmp
xor
outs
xor
add
sub
repz
jl
retf
mov
clc
jmp
mov
inc
cmp
imul
xchg
jecxz
arpl
adc
push
dec
and
jmp
mov
shl
inc
and
mov
xchg
push
xor
mov
or
cmp
pop
sub
das
dec
cmp
adc
pop
call
or
popf
lahf
sbb
inc
dec
loope
adc
stc
sbb
scas
pop
mov
popa
mov
and
and
inc
adc
ds
pop
or
cmp
pop
or
popa
cdq
dec
(bad)
pushf
out
xchg
mov
jmp
dec
mov
dec
sbb
dec
loopne
mov
out
add
ret
out
add
scas
or
cmp
ja
fisttp
inc
pop
add
rol
scas
and
xchg
es
add
pusha
cs
pushf
movs
and
(bad)
push
add
lods
jmp
std
push
jmp
lea
rcl
sbb
adc
dec
out
nop
cmp
mov
rcl
dec
mov
xor
(bad)
call
add
inc
mov
xchg
mov
add
add
push
les
stc
fwait
test
jo
pusha
int3
inc
mov
mov
or
in
imul
jge
jl
mov
js
mul
push
push
jo
sbb
mov
(bad)
dec
xchg
sbb
jmp
cmp
jnp
inc
dec
jl
add
in
add
or
adc
mov
inc
sub
cmp
sub
cmp
jle
dec
sbb
pop
loope
movs
jbe
sbb
sbb
(bad)
loopne
adc
push
cmp
cmp
loop
fstp
adc
cmp
pop
mov
bswap
mov
xchg
cmc
jmp
add
xor
rol
cmps
enter
sahf
mov
mov
dec
mov
fs
out
jnp
jp
push
push
sbb
dec
mov
mov
mov
mov
and
or
or
scas
mov
inc
fsubr
push
fnstsw
je
dec
out
cmp
add
dec
dec
(bad)
fisttp
ror
pop
in
add
jp
or
sbb
adc
rol
jl
and
inc
mov
jge
xchg
mov
clc
(bad)
ins
and
inc
cwde
inc
or
mov
add
mov
dec
xor
jmp
mov
leave
jge
lds
pop
(bad)
mov
jae
sub
sbb
adc
push
sbb
sub
ror
ja
(bad)
pop
or
or
adc
inc
nop
out
sti
adc
jmp
mov
cmp
adc
aam
or
sahf
cmp
push
inc
sar
mov
sbb
call
xor
in
ss
daa
jne
xchg
pop
push
fsubr
jbe
adc
xlat
xchg
lea
stos
cdq
frstor
pop
jge
inc
mov
sub
lods
stos
adc
jle
mov
shr
retf
push
cmp
inc
cmp
jae
data16
and
push
dec
(bad)
jg
adc
pop
jecxz
or
xchg
inc
cmp
mov
add
add
jge
jge
mov
loop
xor
pop
icebp
into
add
jmp
ins
sahf
stos
xlat
or
or
sbb
or
jp
or
add
xor
rcl
stos
aad
cmps
stos
push
and
push
sbb
cs
xor
and
test
inc
xor
sub
daa
aam
mov
dec
pop
pop
pop
xchg
add
ret
mov
sub
popf
push
push
sbb
sub
(bad)
push
sbb
lea
jo
mov
jo
push
or
sbb
add
dec
das
xchg
pop
add
mov
and
or
adc
cmps
jns
pop
add
pop
pop
add
(bad)
cmp
shl
xchg
mov
cmp
cmp
push
adc
stc
add
bound
hlt
inc
fdivr
imul
pop
and
jo
and
imul
jge
mov
sub
arpl
sbb
jne
outs
or
push
inc
pop
daa
jmp
push
ins
lahf
fstp
mov
cdq
xchg
adc
iret
xor
shl
imul
popf
jl
jmp
das
ficom
inc
call
inc
js
xor
cli
jge
inc
dec
pop
or
scas
ud2
jl
stos
push
(bad)
sub
add
out
jae
cmp
add
add
fcmovnbe
cli
cmp
or
mov
or
xor
dec
sti
mov
aas
xchg
xchg
dec
push
pushf
jbe
pusha
cmc
pushf
outs
rol
mov
sub
dec
or
dec
sti
push
dec
adc
js
mov
daa
ins
and
movs
in
jge
dec
jmp
sub
xchg
push
fs
retf
shl
inc
ins
hlt
add
xor
cmps
add
pop
push
scas
dec
adc
inc
out
mov
push
add
pop
int
or
push
jmp
inc
inc
or
inc
adc
jp
sbb
mov
(bad)
cdq
jp
call
adc
gs
cmp
scas
retf
and
fs
loopne
sysenter
add
cmp
dec
push
or
loope
mov
mov
sbb
push
dec
dec
cld
dec
xor
lea
outs
daa
les
push
retf
inc
mov
xor
movsx
es
jo
and
mov
dec
popa
jl
repnz
mov
jno
in
mov
xor
adc
test
aam
leave
jmp
push
mov
pop
cwde
cmc
ret
rcr
ins
cld
cld
sub
bsf
push
js
sbb
setp
add
adc
ja
xchg
sbb
jnp
xchg
into
sub
lock
cmp
leave
ret
movs
ret
pop
jb
pop
push
rcl
sub
dec
es
ds
daa
cmp
jl
sbb
jmp
sub
and
dec
xor
neg
inc
call
test
or
ds
je
test
dec
fisub
in
fs
nop
mov
dec
test
mov
mov
pushf
sub
or
repnz
adc
pop
dec
shr
outs
adc
in
jb
mov
shl
lea
mov
fs
push
sub
adc
inc
es
adc
loope
inc
daa
add
iret
dec
and
je
mul
inc
lock
and
mov
mov
push
in
lea
mov
(bad)
scas
shl
push
push
das
jmp
aad
push
test
inc
cs
sub
je
wrmsr
xor
mov
fs
nop
popf
test
xchg
cmp
cmp
xchg
stc
out
sbb
jl
frstor
dec
sub
mov
pushf
js
pop
add
adc
(bad)
mov
xor
xchg
jo
icebp
mov
xor
cld
cld
test
mov
inc
jo
or
inc
lahf
adc
lea
cwde
push
les
cmp
sbb
inc
rcr
fstp
mov
ins
adc
xchg
ins
mov
jl
js
and
popf
rcl
pop
mov
dec
sbb
dec
push
adc
push
dec
mov
push
push
das
repnz
pop
or
call
loopne
cmp
inc
in
and
jl
and
lahf
or
adc
sti
repz
inc
fidiv
mov
dec
je
add
inc
fwait
js
jmp
adc
xchg
inc
fmul
les
fnsave
ins
sub
ret
pop
jo
call
pop
les
mov
mov
rcl
dec
fnstenv
mov
cmp
inc
pop
out
sub
cmp
das
shr
or
add
pop
cmp
test
xor
je
scas
add
dec
mov
aam
je
sub
or
lea
xchg
aam
push
and
pop
sub
ret
or
mov
jo
movs
pusha
nop
movs
adc
lds
and
sbb
sub
imul
dec
xchg
push
fdivr
cdq
inc
int3
or
push
pop
imul
jns
adc
pop
fnsave
dec
cmp
sub
cwde
(bad)
cli
push
and
popf
int3
in
cmp
mov
sub
fidivr
fs
add
je
ret
sbb
cmps
fwait
aas
sbb
pop
cdq
inc
aaa
cmp
cmps
je
jno
(bad)
test
and
repnz
jae
adc
int3
scas
xchg
sub
sbb
xor
xchg
dec
or
push
mov
daa
add
add
test
lahf
and
rcr
and
ja
inc
loop
xor
add
and
(bad)
adc
cld
mov
jnp
movlps
hlt
or
outs
js
mov
je
pushf
and
stos
adc
push
dec
fstp
and
js
add
pmulhw
pop
inc
pop
sub
rol
popf
test
cs
mov
xchg
xchg
add
shr
pop
adc
pop
xor
das
inc
aad
(bad)
rcr
dec
clc
jb
fnstcw
stos
xchg
push
dec
cli
and
xlat
xor
push
je
push
ins
or
pusha
jl
fs
dec
je
add
in
xchg
ss
and
xor
and
add
outs
stos
xor
xor
xor
xchg
push
add
cs
pop
dec
add
fcomp
adc
jge
add
ins
pop
das
inc
sub
fbstp
push
xlat
push
ficom
sbb
daa
dec
mov
pop
in
sub
popa
add
hlt
add
pushf
sub
sbb
xchg
dec
cmp
mov
sub
mov
les
and
sti
pop
and
dec
and
mov
jp
int3
movs
mov
not
jmp
cmp
adc
or
es
mov
movs
repnz
sub
inc
js
jl
cwde
fstp
inc
inc
fmul
fmul
mov
or
sbb
jl
jo
jecxz
xchg
sub
mov
mov
adc
in
aad
retf
in
cli
cwde
xor
lds
pop
pop
jl
ror
retf
mov
jmp
pop
xor
pop
rcl
jmp
sbb
add
gs
sbb
adc
and
rcl
jl
pop
lahf
out
push
xchg
mov
pop
daa
popf
test
cmps
pusha
in
in
inc
pop
cmp
inc
scas
inc
push
mov
adc
xchg
in
outs
or
add
push
and
sub
mov
lods
dec
pusha
sbb
mov
pop
retf
cmp
dec
mov
inc
mov
add
sub
mov
add
test
push
pop
adc
push
or
jbe
push
outs
or
movs
and
in
push
lea
and
add
(bad)
fisttp
dec
pusha
mov
test
jne
pop
ror
movs
ss
(bad)
xor
add
inc
xchg
xor
or
pop
movs
sbb
sbb
or
pop
or
mov
mov
bound
scas
test
in
pop
pop
stos
inc
ret
lea
retf
inc
pop
and
or
nop
test
jo
push
loopne
mov
push
inc
mov
push
cli
adc
adc
jmp
cmp
mov
mov
dec
push
jae
xchg
xchg
fisttp
cmp
mov
push
adc
arpl
mov
inc
ins
or
jg
dec
arpl
inc
(bad)
hlt
jne
push
les
and
pop
push
or
cli
cmp
jbe
mov
add
je
repnz
xor
jg
push
mov
retf
mov
xor
or
pop
test
mov
add
or
inc
jo
jb
or
mov
fcom
inc
mov
pop
inc
les
(bad)
rol
push
hlt
lock
hlt
aam
or
hlt
jg
sahf
dec
movs
dec
ja
or
data16
hlt
lock
shr
adc
mov
retf
nop
xor
sub
mov
jmp
mov
sub
jbe
dec
cmp
std
ficom
mov
push
add
inc
loop
sbb
ret
imul
mov
in
jbe
mov
fiadd
pop
sub
mov
das
mov
inc
xchg
enter
(bad)
and
cdq
push
not
arpl
imul
jae
in
ds
or
cmp
sub
mov
fistp
or
adc
or
mov
mov
in
xor
sub
xchg
(bad)
xor
and
xchg
mov
in
jbe
mov
sub
inc
sub
call
inc
add
jbe
lea
sbb
fnsave
pop
in
jp
ds
adc
inc
jge
popa
stos
fisttp
jecxz
mov
imul
jecxz
jge
jl
add
or
das
inc
in
(bad)
pop
js
xor
cmps
mov
mov
mov
add
mov
add
pop
dec
adc
clc
adc
fcom
sub
sub
xchg
add
inc
popa
dec
push
or
mov
or
daa
jo
mov
loop
(bad)
std
lea
mov
loope
mov
dec
and
jmp
inc
retf
enter
cmp
xchg
cmp
push
(bad)
and
cmp
rol
xchg
mov
or
test
lock
sbb
clc
pop
gs
and
cmp
or
inc
sub
scas
adc
pop
mov
addr16
shr
add
cmp
sar
jae
imul
out
and
jae
push
xchg
sub
lods
dec
shr
dec
mov
imul
mov
pop
popa
push
mov
cmp
dec
loopne
or
adc
loope
and
push
pop
dec
fadd
jecxz
movs
pop
adc
mov
jmp
sbb
(bad)
push
mov
inc
outs
xchg
iret
pop
pop
adc
inc
lahf
mov
out
arpl
push
mov
or
shl
jne
or
cmps
jns
and
ins
inc
gs
cmps
jns
pop
pusha
push
jo
rcl
outs
ja
hlt
ins
fstp
mov
or
dec
and
enter
inc
pusha
mov
adc
shl
mov
cdq
mov
cwde
xchg
cld
fild
fmul
adc
cmps
imul
push
hlt
pusha
imul
adc
dec
imul
fsub
clc
lock
dec
rcr
adc
rcl
fcomp
cld
and
dec
imul
mov
adc
and
in
xor
cmps
xor
mov
cmps
push
jo
loopne
in
adc
enter
adc
loopne
ficom
shl
mov
inc
movs
sbb
shl
add
gs
sbb
ror
xchg
enter
int3
push
lock
jns
cmps
in
in
call
out
in
cld
sbb
inc
fwait
in
into
cmp
or
pop
sub
imul
pop
inc
adc
call
jae
in
push
and
mov
jp
int3
sar
pop
xchg
inc
mov
sub
sub
nop
push
dec
mov
sub
xor
jne
pop
sbb
test
inc
or
sbb
shl
repz
adc
adc
enter
adc
arpl
rcl
sbb
aad
and
xchg
mov
mov
cmp
pop
in
push
xchg
add
adc
push
aaa
cmp
nop
gs
push
sbb
push
retf
inc
inc
add
xor
sbb
xchg
jmp
push
aas
pop
sub
aam
mov
jne
daa
rcr
mov
xchg
aad
add
pop
sbb
movs
dec
push
add
movs
js
inc
(bad)
(bad)
in
imul
or
pop
xor
inc
push
push
dec
pusha
cdq
and
inc
jo
cli
(bad)
xor
or
and
pusha
jb
xlat
adc
pop
dec
out
dec
ror
inc
jne
pop
push
stos
retf
rol
sbb
sbb
inc
mov
pusha
shr
xchg
mov
inc
(bad)
rcr
shl
movs
fist
mov
push
imul
(bad)
out
or
sti
sbb
jg
fsub
lea
sub
xor
adc
and
loopne
fidivr
mov
jb
sub
mov
and
call
fdiv
sub
test
popa
(bad)
loopne
jle
sbb
fdiv
mov
sub
or
int3
push
es
fiadd
arpl
sti
lods
cmp
shl
sub
or
(bad)
stos
xchg
call
add
ror
shl
fcmovu
fadd
add
xor
add
sub
iret
fisttp
pop
sbb
mov
mov
push
sub
or
out
jg
sub
fld
sub
ja
inc
loopne
les
adc
push
sub
sti
dec
push
pop
shr
(bad)
push
lock
add
sbb
les
cmp
push
push
scas
dec
cmp
out
inc
imul
stc
call
add
enter
stos
or
add
add
inc
shl
pop
sbb
pop
retf
fiadd
push
inc
xchg
mov
sbb
fdivr
gs
or
fld
dec
add
dec
sbb
pop
or
add
adc
enter
imul
sbb
sub
pop
in
fisubr
add
enter
mov
push
outs
sub
add
or
pushf
enter
sbb
das
or
dec
push
(bad)
cmp
xor
mov
mov
loop
cmps
in
xlat
ret
pop
fchs
les
inc
in
ficom
fadd
idiv
pop
jnp
or
cmp
cmps
jns
xor
pusha
sbb
cmps
and
adc
dec
push
dec
push
adc
jle
in
and
pusha
push
pop
sub
mov
push
push
into
inc
dec
aad
mov
in
mul
loope
or
loop
lea
dec
in
fucomip
add
neg
lea
shl
not
jmp
into
sbb
and
loop
rol
or
jp
call
hlt
push
jnp
and
sbb
and
adc
ins
sahf
pusha
inc
or
push
xor
aam
xchg
les
and
sti
add
add
jns
pop
or
dec
adc
add
rcr
add
daa
hlt
neg
and
ins
iret
(bad)
imul
push
in
int
add
cwde
push
sub
loope
cdq
or
ja
cld
add
or
in
lock
cs
dec
pop
repnz
sub
clc
add
add
out
dec
and
inc
inc
stos
les
in
imul
dec
gs
fadd
push
in
jb
jne
aas
cmp
xor
daa
scas
aad
push
sub
fsubp
fimul
push
push
mov
add
add
sub
jmp
arpl
retf
pop
push
stos
pop
retf
retf
jb
neg
dec
adc
(bad)
fist
or
and
js
dec
imul
dec
push
adc
pop
cmc
add
cdq
loop
push
out
pop
fxch
call
push
pop
retf
jp
pop
mov
sti
jmp
adc
add
mov
ds
push
pop
test
jmp
add
scas
xchg
dec
js
cmp
cs
push
pusha
adc
pop
push
pop
sub
adc
cwde
imul
fadd
aad
push
add
pop
hlt
inc
xchg
hlt
aad
cmp
mov
pop
jne
ficom
add
add
out
ficom
sub
and
outs
ficomp
pop
push
sbb
jecxz
das
sbb
sbb
pushf
bound
sub
mov
inc
sbb
jo
pushf
jnp
push
call
inc
sub
and
jo
lahf
mov
repz
sub
lock
mov
pusha
and
xlat
(bad)
call
and
add
adc
cmp
cmp
ficomp
xchg
daa
add
sub
inc
bound
inc
scas
clc
push
cmps
imul
and
(bad)
dec
shr
dec
xchg
pop
mov
xchg
jle
adc
or
hlt
xor
lods
loope
mov
and
repz
sbb
pop
add
js
dec
push
sbb
imul
mov
js
or
pop
add
inc
push
jnp
and
adc
fiadd
aaa
add
inc
or
dec
jnp
mov
mov
or
mov
xor
cmp
ror
clc
adc
push
mov
(bad)
pop
movs
adc
test
add
jb
leave
cmp
mov
add
push
mov
fidiv
add
jl
mov
add
xchg
xor
xor
(bad)
pop
fisttp
add
pop
fimul
pop
adc
add
std
data16
add
pop
xor
sbb
xlat
les
pop
sar
test
xchg
fmul
cdq
ror
add
fidiv
push
outs
inc
(bad)
pop
mov
add
in
inc
js
lods
pusha
sbb
repz
adc
aam
xor
dec
pusha
setl
mov
push
int3
xchg
push
mov
adc
sub
pop
adc
ins
xchg
mov
pop
mov
xchg
or
and
and
or
sub
jo
xor
cmp
cs
movs
jbe
or
pop
sub
xchg
fcmovnbe
and
cmp
jmp
jns
or
push
add
jbe
fld
push
mov
sbb
test
fadd
adc
sub
aad
push
push
sbb
iret
imul
add
cmp
test
sub
or
push
ja
mov
les
jp
push
adc
push
mov
lea
gs
in
lea
mov
leave
adc
xor
add
je
mov
leave
add
pop
icebp
je
icebp
call
mov
loope
and
in
into
mov
push
ja
jg
dec
cs
and
pop
jl
cmp
inc
rol
add
pop
rol
push
inc
rol
push
sub
inc
fadd
ds
sub
dec
push
mov
lods
std
scas
leave
push
push
sti
or
xchg
add
cmp
in
mov
push
jo
jmp
or
fs
mov
or
movhps
lds
leave
add
or
sbb
sub
dec
and
sub
inc
and
cwde
xchg
or
(bad)
mov
sbb
and
pop
inc
jo
xchg
jnp
ficom
cmp
sbb
push
es
stos
ins
leave
js
loope
std
adc
or
fisttp
in
add
mov
and
pop
imul
add
push
and
adc
clc
add
or
adc
in
sbb
outs
mov
(bad)
call
push
retf
push
popf
ins
retf
stc
dec
es
mov
add
clc
popa
fdivr
pop
pop
add
sub
xor
mov
adc
jne
leave
and
and
pushf
imul
test
adc
aas
outs
push
add
leave
inc
mov
mov
add
dec
push
jbe
adc
jle
bound
lock
cmps
mov
sbb
mov
cmp
sbb
xchg
out
jl
sbb
sbb
mov
and
push
aas
pushf
dec
dec
inc
ffree
and
xor
and
and
jl
add
es
jg
push
sub
mov
fsubr
and
inc
and
xor
jno
push
mov
mov
inc
inc
push
(bad)
scas
sub
mul
je
sub
xchg
mov
add
pushf
imul
xlat
add
add
loop
push
iret
push
jnp
dec
xchg
push
fimul
mov
xchg
pop
adc
(bad)
ret
dec
or
cmps
sub
xor
mov
xor
mov
in
(bad)
fcmovbe
xor
fwait
adc
jo
jns
rcl
arpl
call
add
int
xor
and
or
call
push
in
mov
fbld
int
shl
fbld
add
mov
sbb
sub
cmp
xor
push
fimul
das
inc
jg
xor
mov
xor
sub
dec
pop
scas
sub
jo
in
popf
and
pusha
push
in
jl
test
cmp
aam
jecxz
in
rcr
loope
sbb
test
and
push
mov
dec
cmp
push
add
inc
jmp
mov
inc
cmp
lahf
ret
xor
rcr
sub
mov
push
les
mov
xor
sbb
mov
adc
mov
sbb
or
sar
or
cwde
cmp
std
dec
mov
hlt
or
lds
inc
push
add
inc
cmp
(bad)
adc
pop
or
arpl
jo
push
js
adc
xor
dec
xor
inc
push
adc
mov
dec
ins
xor
mov
inc
inc
and
js
add
inc
mov
or
mov
inc
xor
inc
bound
adc
push
jnp
jb
test
adc
iret
movs
mov
add
dec
add
lahf
push
aaa
fadd
aam
mov
retf
rol
push
mov
dec
pop
mov
mov
inc
or
or
mov
sti
loop
and
cs
loope
enter
fisttp
mov
push
add
ja
xchg
pop
imul
mov
push
(bad)
repz
inc
out
arpl
scas
inc
out
iret
adc
pop
in
mov
mov
adc
mov
mov
push
or
inc
or
dec
sub
aas
dec
fs
mov
push
or
out
add
outs
outs
fadd
cmp
repz
pop
fcom
arpl
cmp
dec
jae
loop
mov
stos
add
jle
mov
add
cwde
loope
xchg
adc
pop
or
out
je
dec
je
imul
aad
jmp
xor
cdq
nop
ins
push
outs
nop
dec
or
push
pop
xlat
cdq
cmp
pop
ja
mov
inc
es
pusha
or
stc
or
ficom
cmp
jp
adc
add
add
cmp
jno
add
jne
test
inc
add
sbb
adc
sbb
xor
pop
or
or
jb
rcl
cld
clc
hlt
repnz
bound
fs
xor
cmc
mov
inc
adc
push
in
mov
call
sbb
mov
(bad)
jmp
add
jmp
mov
jbe
mov
pop
mov
dec
ins
fadd
push
mov
push
jl
xor
lock
mov
aad
mov
push
shl
pop
adc
lea
inc
and
mov
mov
adc
ret
inc
mov
mov
sub
lock
rol
jmp
xor
lea
clc
sub
adc
inc
not
or
les
add
mov
(bad)
dec
fdivr
adc
or
js
sub
nop
sbb
fisub
bound
aam
or
das
jno
xor
mov
add
pop
add
xchg
jp
jnp
out
jns
dec
pop
pop
ror
mov
inc
fist
dec
push
jns
pop
jbe
adc
adc
call
cmp
or
dec
pusha
or
dec
mov
cmp
push
pop
ins
push
xchg
sub
push
inc
std
dec
add
aad
pop
adc
loop
test
cmp
lahf
sbb
call
pop
jmp
aas
nop
cmc
rcr
push
jo
(bad)
or
ficom
push
arpl
xchg
xor
mov
adc
out
pop
ficomp
fstp
mov
pop
add
stos
popa
xlat
lods
mov
jmp
or
and
dec
inc
fwait
data16
hlt
or
mov
shl
bound
jmp
mov
xor
or
clc
or
push
adc
sub
adc
add
int3
jmp
enter
aad
inc
icebp
push
sub
xor
(bad)
push
adc
inc
xor
sbb
pusha
call
xchg
and
adc
lock
cs
mov
in
sub
call
and
test
pop
in
dec
inc
push
and
daa
ret
popa
xchg
pop
test
sti
nop
and
cmp
shl
pop
in
add
mov
arpl
jg
mov
inc
dec
cmp
rcr
inc
sbb
outs
jne
mov
dec
pop
lds
add
leave
mov
cmp
test
cmc
push
xchg
or
jo
push
jmp
popf
pop
cmp
sub
pop
dec
pop
add
jb
das
arpl
ror
push
cmp
inc
icebp
retf
add
or
add
push
repz
arpl
jno
and
lea
jge
xor
or
test
xchg
push
sbb
jns
iret
out
int3
sar
adc
add
xchg
dec
cli
int
jge
push
lds
push
push
inc
ret
push
or
psubsw
push
add
inc
inc
jae
push
jae
and
out
aas
in
jle
sub
or
iret
fldcw
push
cmp
jle
movs
inc
inc
add
mov
sub
fdivp
es
rcr
nop
test
mov
xor
mov
stos
mov
push
dec
fcmovnb
sbb
movs
rol
adc
pop
or
cld
adc
add
lahf
es
push
xchg
dec
pop
fldcw
in
lds
ins
adc
cmp
lods
sbb
enter
lea
cmp
push
stc
test
mov
sahf
and
mov
(bad)
enter
pop
gs
jmp
or
add
retf
push
test
add
inc
js
jmp
mov
inc
mov
(bad)
dec
popa
addr16
and
daa
sbb
retf
pop
or
inc
and
sub
popa
and
jne
pop
jg
mov
add
xor
add
dec
push
pop
mov
jne
sub
ins
popa
cmp
sub
add
ficom
xor
mov
or
lods
stos
inc
and
rol
pop
jmp
mov
xchg
dec
add
xchg
jp
xchg
adc
ins
pusha
pop
xchg
push
sub
xchg
mov
jle
push
lea
adc
sub
inc
add
div
fld
fcomp
fidiv
sub
or
or
jg
push
sbb
xor
aaa
sbb
add
dec
je
add
sbb
call
add
or
mov
not
mov
dec
or
mov
outs
repnz
push
call
std
adc
push
test
and
rcl
adc
shr
clc
(bad)
jo
and
add
mov
push
xor
or
ins
mov
mov
stos
mov
inc
mov
icebp
adc
and
sub
pop
or
call
sub
mov
jbe
sub
cmp
pop
mov
pusha
xor
sub
push
rcr
lods
or
push
jae
mov
mov
stc
cmps
es
and
pop
je
movs
mov
mov
sbb
jo
rcl
sbb
out
adc
clc
or
xchg
jo
or
imul
mov
mov
xchg
arpl
adc
sbb
dec
jmp
sbb
sub
enter
mov
shr
lahf
loopne
loopne
sub
inc
cld
jmp
icebp
add
adc
icebp
add
cmp
jle
(bad)
adc
sub
mov
sbb
jecxz
pop
adc
mov
mov
arpl
mov
or
xchg
push
xchg
ins
push
and
dec
mov
xchg
or
pop
add
inc
ins
xor
and
sub
movs
push
jl
xor
pushf
mov
adc
mov
inc
dec
push
push
cmp
sbb
mov
push
call
mov
dec
data16
cmp
xor
xchg
test
and
sbb
mov
add
dec
ret
or
int
push
push
iret
pop
sbb
add
es
inc
mov
jo
fwait
adc
les
pop
lock
adc
add
pop
push
add
sbb
sbb
popa
jbe
mov
std
add
mov
ss
push
fmul
jo
not
lods
inc
fild
and
add
fistp
popf
adc
pop
mov
test
aaa
xor
jb
xadd
ret
pop
push
mov
in
movs
jns
pop
imul
les
push
xor
call
and
lods
xchg
add
pop
movs
jne
dec
or
add
push
jp
and
clc
xchg
mov
or
mov
mov
add
icebp
inc
(bad)
mov
push
and
pusha
mov
movs
sub
movs
fs
mov
xor
mov
dec
loop
sub
leave
mov
sub
or
out
out
ret
movs
xchg
add
adc
pop
rol
dec
shl
adc
ins
sar
xchg
push
xor
sub
mov
push
popa
inc
adc
adc
into
inc
clc
add
shl
cmp
or
jb
imul
push
mov
or
lods
dec
adc
test
sub
clc
or
jmp
sbb
call
sbb
hlt
push
ficomp
pop
scas
sbb
sbb
inc
dec
sub
mov
test
popf
inc
loop
inc
je
dec
add
pop
mov
out
cmp
cmovnp
nop
mov
test
mov
imul
jo
add
mov
add
cmp
pop
add
aas
xchg
mov
xor
add
ret
sub
xor
xchg
xchg
xchg
add
add
add
xchg
adc
dec
xchg
pop
out
and
xchg
sbb
jns
shl
xchg
pusha
ss
push
dec
or
jecxz
sub
or
lock
outs
jns
push
fnstenv
test
jmp
addr16
pop
xchg
add
push
and
loop
cwde
or
jo
cdq
ret
push
push
and
inc
cmp
pop
push
add
jp
dec
or
xchg
daa
dec
out
push
iret
call
jb
inc
pop
popa
dec
dec
loopne
jb
rcl
sbb
and
sub
popf
add
pop
rol
add
xchg
fld
leave
add
mov
and
adc
xor
and
femms
mov
mov
and
jb
xchg
cld
dec
and
xor
fadd
push
les
ret
jo
adc
adc
test
and
xchg
mov
ins
jb
sub
add
push
sub
mov
inc
sub
or
inc
cmp
or
mov
add
xchg
fcomp
enter
and
fld
sbb
cmp
jle
add
inc
mov
or
add
jge
js
jg
int3
out
and
cmp
jbe
jg
mov
inc
clc
std
jl
jo
or
push
jo
ins
xchg
dec
shl
sbb
lods
xor
jmp
cmp
adc
test
add
lock
cmp
cmp
push
xor
cmc
xchg
and
add
or
test
sti
inc
or
fld
mov
or
mov
retf
movs
inc
pop
fcom
cmc
(bad)
std
adc
xchg
jo
adc
jge
sbb
pand
push
add
dec
mov
inc
mov
ror
outs
ja
mov
xor
movs
leave
out
adc
frstor
jnp
jle
dec
and
push
sahf
daa
xchg
jp
outs
sub
aas
add
xor
fidivr
xchg
mov
add
ror
add
fbstp
add
jmp
mov
sbb
push
sub
mov
dec
pop
ss
aam
push
mov
cmp
das
xchg
inc
sub
in
dec
fdiv
lahf
test
lea
and
aam
ja
adc
gs
(bad)
in
fsub
jb
xchg
in
sub
fsub
inc
xor
or
aaa
push
add
jl
and
push
adc
add
lods
xlat
(bad)
mov
push
lea
les
and
pop
mov
dec
adc
mov
call
and
add
push
dec
retf
or
adc
adc
xchg
je
add
loop
xor
lea
inc
sar
rcl
bound
gs
retf
dec
and
xor
nop
or
xchg
add
xor
push
mov
es
(bad)
(bad)
ds
mov
stc
sub
shr
mov
pop
fisubr
adc
adc
dec
rol
pop
fidiv
dec
pop
and
push
shr
jecxz
xor
xchg
clc
jecxz
sub
addr16
icebp
xor
and
jmp
bswap
sub
out
adc
mov
jecxz
lds
adc
scas
xor
inc
cmp
shl
cwde
sub
jecxz
cmps
adc
jno
nop
(bad)
jne
lods
adc
adc
pop
adc
je
fst
or
or
test
cwde
xor
inc
ds
mov
or
in
pop
ror
push
loope
mov
fild
inc
mov
ret
mov
pop
or
cmp
or
or
add
jne
pop
call
ret
test
lods
mov
leave
test
and
and
loopne
add
repnz
aam
out
xor
test
dec
sub
mov
xchg
cmps
cwde
pop
rcl
or
cmps
hlt
xor
dec
add
and
pop
sbb
push
sbb
mov
test
mov
fucom
cmp
and
lock
add
hlt
jmp
sub
inc
push
enter
xor
ja
inc
pop
add
fisttp
aas
add
jbe
inc
adc
push
mov
cmp
sub
cwde
test
jno
push
push
mov
loopne
loop
add
add
or
and
dec
push
add
sti
into
adc
pop
jmp
add
mov
inc
or
or
mov
add
push
dec
mov
adc
add
cmp
dec
sub
xor
mov
aaa
inc
adc
jmp
mov
and
daa
test
xor
add
mov
adc
xor
adc
dec
enter
jmp
stc
cmp
cmp
cmc
sub
dec
pop
xchg
les
fistp
adc
jle
xor
or
fs
jmp
push
cs
adc
cmp
mov
sbb
cmp
rol
into
jae
mov
xchg
or
xchg
mov
es
adc
or
sbb
cmp
movs
fisub
sub
adc
test
in
lea
out
(bad)
dec
mov
inc
push
mov
xor
jne
inc
cmp
cmp
mov
stos
scas
lods
jecxz
cmp
shl
inc
je
stos
(bad)
jl
add
xor
cmp
fistp
push
cmp
das
loopne
pop
jbe
xchg
dec
push
test
pop
or
adc
jmp
cmps
mov
leave
adc
adc
imul
pop
push
mov
gs
xchg
dec
test
repz
popa
and
out
or
sub
ins
(bad)
icebp
sbb
and
xor
push
loopne
or
cs
mov
jg
iret
aam
cdq
iret
pop
mov
xor
sbb
sti
sbb
outs
xchg
inc
push
fsub
ja
push
adc
adc
stos
jmp
loopne
sub
outs
es
in
jmp
mov
cmps
(bad)
jle
ss
add
jge
mov
cmp
mov
les
push
fadd
dec
mov
in
ins
push
mov
xchg
mov
aad
ret
and
sti
xchg
ror
sbb
and
inc
rdtsc
dec
iret
xchg
movs
jmp
loope
imul
je
ret
pop
xchg
push
ret
fwait
mov
adc
sbb
aaa
and
sbb
cmp
popf
push
push
fcomp
xchg
xchg
push
adc
lods
add
mov
or
icebp
xchg
js
mov
test
imul
mov
cmp
shl
in
fs
movs
fwait
mov
dec
push
or
adc
mov
fistp
ss
daa
jne
out
or
das
mov
test
test
mov
stos
adc
adc
test
fsubr
pop
rcl
popf
or
ins
cmp
jle
xchg
mul
xchg
mov
inc
ins
loop
and
xchg
retf
inc
dec
sysenter
leave
sbb
adc
dec
jbe
in
mov
and
in
repnz
inc
in
in
call
push
call
or
inc
int3
(bad)
cmp
push
xchg
or
jo
jns
in
arpl
or
sub
fild
sbb
test
adc
pop
mov
sbb
pop
push
adc
(bad)
dec
test
mov
rol
lods
or
and
dec
mov
mov
adc
(bad)
mov
cmp
push
inc
sub
jmp
dec
std
or
aaa
mov
or
or
and
bound
mov
das
inc
cwde
mov
pop
or
or
mov
lahf
dec
push
leave
jne
sub
jnp
add
push
cmp
sar
xor
and
(bad)
loopne
adc
add
sbb
pop
cld
jg
push
xlat
aaa
test
(bad)
test
aaa
add
cs
jecxz
or
sar
adc
xchg
in
pop
ret
test
jl
or
out
dec
pop
jl
and
jns
jge
adc
cmp
jg
sbb
sub
pop
adc
sub
pop
gs
inc
jmp
test
add
dec
ret
push
adc
fnstcw
mov
lea
(bad)
sbb
scas
lea
fcomp
pop
mov
push
popf
mov
adc
add
push
jg
push
sbb
add
aaa
and
sub
neg
test
dec
jmp
sbb
inc
(bad)
out
or
jle
adc
(bad)
cs
mov
xchg
jge
adc
jne
movs
or
mov
xor
int3
jne
cmp
and
xor
push
enter
loop
cld
lods
mov
daa
shl
idiv
into
push
jno
push
lods
pop
push
sub
out
shl
push
adc
fldpi
pop
push
and
sbb
xor
xor
sbb
into
or
loopne
lahf
xchg
test
ins
add
mov
jns
and
test
adc
adc
mov
ret
fsub
cmp
sar
pop
shl
add
mov
enter
and
scas
add
push
xor
sbb
inc
fcom
or
xchg
mov
sbb
push
push
xchg
push
pusha
arpl
jmp
cmp
lods
dec
mov
outs
dec
and
out
add
lea
fisubr
dec
mov
cmp
addr16
cmp
inc
and
pushf
sbb
push
icebp
test
(bad)
out
sbb
add
mov
add
or
sbb
or
or
or
mov
jae
mov
in
inc
jecxz
pop
lock
add
add
or
add
mov
loopne
add
call
leave
or
or
dec
ret
in
lock
mov
gs
stos
mov
test
fadd
call
out
inc
std
xor
ficom
pop
mov
cmps
mov
mov
dec
sbb
test
pusha
ret
push
adc
jnp
aas
fs
add
sbb
jle
cs
dec
dec
js
ror
add
adc
cli
mov
pop
sub
adc
cs
adc
in
test
shl
hlt
dec
sbb
mov
inc
sbb
rcl
inc
int3
dec
test
add
mov
mov
cmp
stc
dec
sbb
dec
sbb
xor
clc
inc
sahf
arpl
jo
mov
cs
in
or
push
clc
cs
pop
add
xchg
xchg
xor
cwde
(bad)
(bad)
adc
dec
cmp
xor
inc
rol
adc
(bad)
movs
sub
sub
aam
cmp
loop
push
or
mov
lea
or
dec
fdiv
scas
add
mov
or
push
(bad)
nop
mov
mov
pop
popf
push
jmp
out
(bad)
mov
stos
xor
and
mov
dec
mov
sbb
jmp
pop
add
lods
mov
fistp
mov
inc
add
cmp
cmp
or
or
jbe
stos
adc
jmp
mov
shr
xor
jbe
aas
xchg
jmp
mov
shl
push
cs
push
data16
or
push
test
mov
mov
dec
jne
inc
movs
scas
add
inc
pop
mov
mov
or
jmp
es
xchg
add
sbb
rol
mov
mov
sbb
outs
mov
inc
fsub
dec
cmp
les
addr16
adc
sbb
xor
xor
mov
and
cmp
lock
mov
(bad)
and
cmp
shl
push
cmp
cmps
dec
and
shl
cwde
xor
cmp
or
ret
lock
daa
(bad)
fbstp
sbb
ficomp
call
into
mov
mov
fld
jl
and
out
jle
sub
mov
xor
int3
or
and
cmp
push
adc
dec
xor
sahf
add
lods
es
add
jmp
ds
pushf
inc
fsubr
push
lea
dec
add
mov
pusha
mov
mov
push
fadd
data16
outs
cmp
mov
inc
(bad)
call
pinsrw
cli
bound
lea
gs
xor
(bad)
jl
jne
movs
sbb
or
inc
fimul
push
pop
push
mov
out
or
je
or
popa
icebp
dec
imul
sub
loopne
fs
or
mov
mov
push
pushf
ror
mov
psraw
shl
cmp
jae
daa
or
inc
cs
imul
in
cwde
xor
rcr
or
movs
adc
jae
dec
retf
out
lock
add
xchg
add
movs
push
inc
into
sub
or
and
add
js
jmp
arpl
fadd
inc
std
test
inc
enter
cmp
jle
inc
in
fld
data16
cmp
mov
add
outs
push
or
dec
sub
inc
xor
inc
xchg
lea
cmp
jbe
xor
lock
in
retf
push
xlat
mov
cmp
aaa
and
mov
mov
cmps
jo
imul
dec
cmp
dec
fstp
mov
into
adc
mov
mov
mov
or
cld
dec
xchg
sbb
xor
add
pop
sub
mov
push
ficom
pusha
adc
fadd
add
xchg
jno
xor
push
xchg
mov
push
dec
mov
mov
call
mov
push
jl
lods
xchg
mov
push
xchg
loop
sbb
in
adc
imul
sub
call
popf
jle
jno
sub
push
push
fwait
cli
cwde
or
fsubr
pop
enter
lea
mov
mov
push
cwde
sbb
enter
je
arpl
mov
scas
jo
lea
in
mov
sub
add
mov
inc
loop
dec
adc
jmp
dec
pop
adc
xor
pop
fmul
jp
aam
fild
scas
dec
xchg
adc
mov
or
stos
adc
hlt
idiv
xor
cwde
jmp
push
xchg
inc
xchg
push
add
xor
jp
stos
sub
push
adc
jae
add
adc
cmp
sahf
push
adc
mov
mov
aam
mov
mov
hlt
add
sbb
adc
adc
sbb
and
movs
out
push
lods
push
lods
out
mov
dec
je
dec
adc
sbb
lods
push
and
add
dec
ror
in
rol
mov
push
in
dec
add
push
add
in
add
inc
in
add
rcl
or
rcr
and
mov
push
iret
xor
xor
shr
add
inc
inc
sub
fmul
inc
imul
adc
add
mov
imul
jb
cmp
fisttp
jge
arpl
add
fcomp
xchg
xchg
mov
lea
ret
mov
mov
add
dec
xchg
and
sub
shl
mov
rol
les
mov
mov
ins
pusha
mov
out
aaa
out
inc
test
xchg
xchg
popa
lea
adc
cmp
ins
in
add
inc
push
jo
call
repz
dec
loopne
pop
sar
dec
sbb
sbb
sbb
jo
xor
lds
and
adc
pusha
gs
cmps
cmp
jecxz
sbb
xchg
(bad)
aas
int
jecxz
and
inc
or
jge
sbb
data16
xor
sub
sbb
arpl
fwait
and
inc
inc
pop
lea
cmp
data16
or
push
cwde
xchg
jp
hlt
pusha
pop
push
inc
scas
dec
cmp
add
sub
rol
pop
add
imul
jmp
sub
and
or
or
xchg
xor
ror
sub
adc
repz
xor
sbb
sbb
pop
adc
inc
sbb
std
inc
rcr
adc
call
fisttp
and
mov
mov
push
jo
xchg
bsf
inc
or
int3
out
(bad)
mov
push
jge
or
(bad)
lock
add
mov
mov
sub
adc
and
dec
adc
adc
popa
cmps
and
mov
outs
(bad)
cmp
leave
add
(bad)
jae
jo
test
adc
std
rol
and
aaa
js
adc
out
sbb
mov
popa
push
sub
cdq
pop
push
cmp
jle
ds
cmp
pushaw
push
inc
mov
xchg
or
sub
and
jecxz
pop
das
jns
add
sub
movs
add
rcr
cmp
sbb
jecxz
ins
or
test
jecxz
int
sbb
iret
push
hlt
add
xchg
repnz
add
or
pop
adc
into
leave
inc
enter
lock
in
data16
inc
inc
xor
hlt
add
xchg
jl
cmp
add
mov
enter
add
jb
add
(bad)
jmp
inc
xchg
cmp
xlat
clc
mov
xor
xchg
and
test
lods
fld
in
leave
pop
inc
or
or
fld
rol
sub
pop
scas
mov
mov
or
js
mov
add
mov
mov
cdq
out
push
add
call
daa
nop
aas
push
mov
jle
and
into
add
sbb
mov
imul
inc
sbb
push
inc
xchg
mov
mov
bound
das
sbb
push
pop
and
int
pushf
lea
push
or
stos
adc
fcomp
(bad)
jg
adc
cmp
sbb
inc
inc
ins
imul
rol
call
inc
jb
stos
in
jb
mov
cmp
add
mov
adc
cmovns
jge
or
mov
push
pop
or
inc
xor
pushf
loopne
push
jecxz
addr16
or
lahf
or
mov
xchg
push
xchg
data16
enter
fisttp
leave
and
jl
mov
mov
pop
mov
mov
xchg
xchg
sbb
add
jbe
sub
loopne
cli
ds
add
inc
pusha
call
mov
adc
es
sbb
call
and
pushf
or
(bad)
mov
fchs
add
add
dec
or
lock
and
sahf
jns
les
xchg
inc
jle
rcr
xchg
ins
popf
sbb
fadd
mov
(bad)
fwait
add
nop
pop
sbb
sub
fcom
rcl
in
inc
push
scas
faddp
cmp
adc
mov
sub
adc
push
ja
pop
sub
iret
add
sti
xor
xchg
mov
push
sti
sbb
and
leave
(bad)
in
fdivr
mov
mov
mov
movs
repnz
cmps
clc
sbb
inc
and
mov
xor
jo
pop
xchg
cmp
xchg
push
mov
inc
mov
cmp
ror
mov
les
fs
int
sub
jmp
hlt
jmp
cmc
ror
dec
xor
and
les
add
inc
push
mov
pusha
jo
push
cld
jl
jl
push
dec
bound
or
scas
pop
mov
and
test
enter
movs
mov
sbb
sub
adc
test
div
test
push
push
retf
push
mov
outs
push
xor
xchg
and
dec
cmp
pop
js
test
div
or
push
adc
add
in
mov
cwde
mov
xor
ror
cdq
ins
and
leave
sub
test
add
or
add
and
adc
pop
and
add
inc
sbb
mov
dec
sbb
pcmpeqw
xor
ja
xor
hlt
lods
mov
sbb
sub
es
jge
mov
mov
jg
and
call
rol
adc
clc
inc
fld
adc
jl
sbb
xchg
in
mov
test
inc
add
daa
mov
popa
sar
pop
cwde
lock
add
adc
in
adc
into
push
stos
mov
fsubr
pop
inc
dec
idiv
(bad)
call
xchg
jl
mov
dec
call
xor
enter
pushf
gs
push
repz
sub
or
call
adc
das
rcr
or
movs
sub
mov
cmp
in
push
loopne
aam
or
fsubr
push
adc
sbb
mov
call
lock
or
jmp
adc
mov
and
and
bound
out
aam
push
lods
aas
gs
and
call
mov
add
push
mov
mov
or
jge
xor
scas
mov
out
into
inc
inc
push
jl
inc
dec
jl
loopne
ror
rcr
add
rcr
add
aam
scas
nop
clc
adc
(bad)
js
inc
or
lock
cmps
outs
xchg
push
adc
or
ror
cli
pop
ja
xor
add
xchg
mov
rol
sar
(bad)
leave
xor
pusha
adc
sets
xor
mov
mov
adc
nop
outs
sbb
(bad)
cs
push
sub
cmp
call
dec
mov
call
dec
cmp
daa
dec
loop
inc
icebp
inc
test
inc
(bad)
call
add
jecxz
(bad)
loopne
push
jecxz
ret
clc
jg
sub
mov
daa
dec
push
xchg
lock
or
adc
xlat
mov
sbb
or
fcom
or
sub
hlt
jae
inc
inc
rcr
imul
or
or
test
fld1
ret
popa
jb
inc
dec
cmps
pusha
ror
ins
xchg
cmp
add
adc
push
lock
sbb
bound
adc
into
jnp
popa
loop
js
mov
rcl
adc
jo
dec
(bad)
(bad)
or
bound
adc
adc
ins
xor
ficomp
jecxz
pop
add
add
sbb
sbb
scas
imul
pop
xor
or
je
jle
or
or
push
movs
and
dec
and
test
ror
mov
out
ins
aaa
push
call
fadd
pop
loopne
and
in
mov
mov
lods
jmp
sahf
rol
stos
xchg
or
add
or
jp
push
movaps
pop
call
call
dec
rcl
dec
xchg
dec
mov
ins
adc
inc
add
push
and
fsub
lahf
cdq
push
dec
inc
add
push
dec
(bad)
push
popa
repnz
or
adc
add
and
add
dec
sub
cmp
ret
mov
push
aam
mov
out
dec
clc
out
xchg
push
dec
dec
adc
add
cmp
or
adc
(bad)
int3
rcr
ins
shr
scas
lods
cld
cmp
push
xchg
cmp
mov
add
sbb
or
pop
dec
in
add
and
mov
xor
xor
repz
jne
ret
je
(bad)
mov
mov
or
mov
stc
clc
add
xchg
xchg
adc
pop
jmp
dec
jbe
jbe
ins
enter
mov
sbb
dec
push
mov
mov
and
(bad)
push
and
add
int
js
(bad)
lds
push
and
loop
and
sub
ins
mov
test
push
out
pusha
in
dec
sahf
call
add
jae
rol
faddp
xlat
(bad)
cmp
or
jp
pop
xchg
cmp
jge
lods
shr
ror
dec
adc
sbb
fist
sbb
jb
or
and
xor
rcl
and
add
or
push
mov
or
cmp
in
inc
pop
aaa
enter
or
shl
cmp
int3
xchg
or
add
xor
adc
xlat
sbb
cmp
xor
arpl
mov
clc
jle
popf
fs
rol
dec
cmp
movs
test
inc
test
push
xor
cwde
inc
push
es
mov
retf
nop
cld
or
pop
xchg
pop
xchg
cdq
inc
pop
fistp
push
rol
or
popf
mov
or
pusha
or
jmp
inc
es
ja
call
push
pop
push
or
adc
pushf
mov
adc
fild
add
dec
or
push
rol
and
dec
ja
add
ret
pushf
and
mov
movs
sar
dec
lods
dec
inc
jnp
arpl
es
sbb
mov
lea
ins
mov
jo
test
pop
sbb
add
fmul
fmul
cld
push
adc
inc
sbb
inc
loope
test
or
iret
in
ror
les
and
or
dec
or
jnp
dec
or
sub
push
dec
pop
pop
adc
test
sar
push
xor
push
mov
nop
push
sub
xor
call
and
cmp
int3
and
sub
enter
sbb
add
fisub
inc
mov
xor
mov
pop
inc
test
xchg
mov
inc
jge
(bad)
cmp
in
adc
enter
push
outs
aaa
ja
push
xchg
sbb
inc
call
adc
sbb
inc
mov
add
mov
lods
sub
mov
pusha
fwait
mov
sub
adc
cmp
and
pop
or
mov
xchg
mov
inc
outs
loopne
and
hlt
mov
cmps
sbb
mov
jmp
mov
mov
rcr
sub
loopne
xchg
fadd
fcom
fs
inc
aam
rcr
inc
xchg
int3
dec
das
xchg
bound
test
dec
enter
push
shr
pop
jl
cmp
popf
int
rcr
xchg
and
lock
call
in
fcomp
rol
push
and
add
es
and
sbb
test
xchg
adc
shl
call
and
ror
(bad)
push
rcl
mov
aad
test
shl
stos
not
jmp
scas
add
stos
jo
(bad)
cld
in
pop
push
sbb
push
into
xchg
fcomp
out
xor
movs
jno
sub
dec
jb
jae
push
add
fwait
out
xchg
clc
shr
add
pop
sar
test
aas
mov
outs
fwait
aad
icebp
add
das
fbstp
mov
cmp
or
xor
jl
imul
pusha
loope
adc
add
xor
repz
pop
or
jecxz
adc
push
and
lea
sbb
cmp
jb
out
push
fwait
adc
sub
loope
sbb
add
jno
jmp
xor
dec
xor
cmp
cmp
xlat
(bad)
(bad)
std
mov
sub
add
pop
test
xchg
mov
nop
fimul
outs
(bad)
push
mov
mov
jne
push
jle
push
fsub
dec
and
add
inc
int
loope
std
and
pop
(bad)
fnstsw
mov
cmp
cs
mov
dec
adc
stc
jle
sbb
je
adc
cmps
or
sbb
jno
push
or
shl
(bad)
imul
sub
inc
jnp
out
mov
int
jbe
cli
shl
or
sbb
push
enter
adc
dec
dec
cmp
lods
pop
dec
adc
retf
lods
in
ja
rol
adc
add
adc
adc
xor
and
mov
mov
movs
rol
pop
popf
jg
push
add
adc
lds
jmp
inc
or
sbb
movsx
xchg
bound
lods
inc
rcr
push
sub
lock
int3
add
inc
adc
pop
ffreep
dec
inc
(bad)
ja
xchg
or
xchg
and
push
inc
ret
mov
ret
sar
jne
test
aaa
add
or
test
int3
cwde
push
jne
sub
mov
push
test
dec
popa
movs
sub
inc
inc
les
cmp
sub
or
xor
xchg
es
mov
(bad)
sub
mov
jle
adc
push
and
and
ins
pop
inc
and
cmp
cmp
cmp
mov
movs
test
push
test
xor
sbb
sbb
mov
mov
sub
dec
movs
hlt
mov
adc
and
jle
iret
mov
loopne
lods
aam
mov
shr
cmp
ror
aaa
lock
inc
xchg
int3
push
sbb
jmp
aas
push
add
jle
cmp
mov
lahf
test
loope
in
mov
adc
icebp
fild
ret
inc
call
jo
xchg
and
push
ret
test
lea
mov
test
pop
cmp
cmp
sbb
dec
pop
dec
sub
scas
movs
xchg
pusha
push
cwde
push
or
xor
adc
stos
inc
adc
loopne
ja
jo
xor
jnp
ret
cmp
xor
mov
cmp
mov
(bad)
mov
loope
mov
cmp
clc
mul
jp
inc
add
dec
adc
neg
mov
push
xchg
mov
rol
or
hlt
(bad)
pop
sub
add
ins
jb
pop
push
in
inc
or
mov
aaa
std
fsubrp
adc
cmps
rol
add
inc
sar
std
or
inc
xchg
pop
push
idiv
ja
xor
ret
add
jns
int
adc
and
(bad)
sbb
xchg
test
cmps
mov
call
aaa
pop
jne
xor
cmp
jae
mov
inc
inc
cmp
js
adc
inc
and
enter
cli
sahf
mov
pop
inc
in
fdivr
fadd
mov
jl
add
cli
addr16
xlat
jl
or
ficomp
mov
dec
sbb
imul
lods
fisubr
pop
adc
les
xchg
or
dec
movs
popa
or
dec
add
pop
ret
data16
lahf
push
mov
pop
(bad)
imul
jmp
xor
movs
or
dec
add
pop
into
sar
or
loope
push
imul
fdivr
frstor
jle
jecxz
inc
add
xor
repz
test
lea
ret
and
rcr
repnz
mov
or
xor
push
(bad)
(bad)
out
adc
aad
call
cmp
enter
mov
std
inc
and
loop
mov
add
daa
loope
ror
jne
fisttp
push
dec
push
pop
and
or
pop
add
pop
and
aad
add
adc
and
mov
add
in
je
(bad)
cmp
add
(bad)
sbb
movs
shl
fwait
pop
xor
cmp
mov
mov
iret
and
add
dec
mov
ins
jo
inc
cwde
or
jne
lea
inc
cmp
adc
adc
add
mov
pop
sbb
lock
sbb
pop
stc
push
lea
jmp
or
cmp
(bad)
fild
(bad)
mov
outs
call
pop
add
inc
test
popa
mov
xchg
sti
or
xor
aaa
ins
enter
mov
mov
add
fiadd
jecxz
pop
and
mov
aam
sbb
push
popf
cmps
inc
add
sub
cmps
outs
outs
ror
adc
out
(bad)
std
imul
jne
sub
cmp
dec
add
js
jae
(bad)
push
adc
jmp
jge
sub
add
loope
loope
adc
push
sub
lahf
call
js
mov
or
add
push
xor
mov
xchg
add
or
ins
lea
sub
dec
int3
dec
inc
fbstp
pop
int3
test
ficomp
outs
jecxz
sub
add
push
jge
xchg
lods
mov
push
inc
aad
or
fsubr
push
aam
lahf
or
xlat
lea
pop
sbb
scas
mov
in
fcmovnb
sti
es
mov
pop
or
ret
(bad)
mov
or
retf
or
cmp
test
cwde
les
inc
and
js
nop
sbb
jo
xor
pavgb
arpl
nop
or
pop
push
nop
mov
mov
pop
pusha
add
add
inc
addr16
loopne
inc
mov
daa
or
and
loopne
dec
data16
into
or
mov
fcmovnu
add
inc
sbb
pusha
sahf
or
push
bound
inc
mov
in
add
sbb
add
sbb
or
sub
bound
or
cmps
push
pop
adc
or
push
cmp
mov
adc
fs
xchg
retf
jnp
sbb
push
and
sub
stc
fidivr
and
sbb
fs
adc
repz
jmp
or
xor
sub
push
stc
mov
pop
or
adc
popf
mov
sbb
sbb
sti
sar
inc
fld
icebp
popf
mov
inc
and
sub
iret
jae
push
sti
cmp
push
inc
outs
cmp
jb
dec
cs
jle
adc
cs
jns
fs
inc
cmp
add
or
or
and
or
nop
in
xor
int
dec
repz
ror
mov
sbb
sbb
inc
imul
or
xchg
retf
sbb
sbb
call
inc
call
call
cdq
and
xor
pop
ins
cmp
jg
out
aas
adc
mov
cmps
aas
in
add
xlat
lock
sub
adc
(bad)
hlt
pushf
xor
retf
xlat
lods
sbb
push
push
and
xor
jb
retf
add
push
adc
fucomi
jp
pop
mov
cdq
cmp
scas
je
xor
mov
xor
retf
add
xor
mov
jl
(bad)
mov
int
cmp
pop
sbb
pop
jae
pop
mov
outs
div
loope
push
sub
and
sub
iret
jl
mov
loope
jb
mov
add
xor
adc
push
sub
xchg
xchg
in
test
or
loope
and
cmp
cli
and
inc
or
imul
push
adc
sub
or
cwde
pop
shl
test
mov
push
or
add
lock
jp
add
stc
lea
xchg
loopne
inc
pushf
test
push
adc
sub
(bad)
daa
enter
inc
pop
and
add
repz
mov
data16
dec
xchg
popf
repz
inc
lock
or
je
(bad)
fdivrp
sbb
(bad)
test
fldcw
cmp
mov
int3
mov
pop
(bad)
movhps
add
sahf
cmps
pop
shr
in
lea
jge
clc
aaa
adc
jne
or
lock
or
or
push
(bad)
imul
fmul
jecxz
and
xchg
fadd
lds
push
xor
and
inc
enter
push
sub
call
mov
add
sbb
push
sbb
push
pushf
call
add
enter
pop
xchg
in
fiadd
lods
pop
add
pop
mov
inc
add
popa
clc
xchg
push
hlt
movs
outs
mov
xor
fwait
pop
dec
les
dec
arpl
ret
dec
sbb
mov
cmp
mov
into
inc
cmps
loopne
dec
in
add
retf
aaa
push
pop
dec
sbb
in
je
test
cmp
adc
and
inc
dec
addr16
jle
mov
aam
lock
xchg
clc
push
ficomp
pusha
mov
jg
dec
and
pop
jp
mov
inc
or
mov
push
xchg
push
test
fs
retf
sar
adc
mov
push
sahf
or
xchg
ret
sub
mov
or
sbb
mov
sbb
lods
popf
sbb
adc
xor
mov
mov
daa
and
push
adc
sbb
mov
lods
xchg
pop
mov
stos
inc
call
pop
mov
cmp
aam
sahf
cdq
les
dec
scas
fmul
push
lea
ins
loop
xor
movs
and
ret
sub
sbb
sub
jns
and
adc
lods
loop
addr16
dec
adc
mov
lea
test
mov
sbb
xchg
sub
mov
test
mov
cmp
mov
repnz
mov
mov
xchg
cs
add
ss
popa
sar
jae
jge
inc
pusha
dec
or
jo
je
mov
add
mov
(bad)
cld
inc
inc
and
dec
sub
ret
cmps
es
popa
mov
add
sbb
and
enter
mov
pop
int
xchg
or
add
stos
add
jns
pop
cs
adc
add
jbe
repz
add
scas
inc
add
sub
inc
(bad)
inc
mov
stos
and
cmps
sub
jmp
mov
add
mov
adc
ins
cmp
retf
jp
mov
or
repz
mov
jl
mov
loop
pop
lahf
inc
cld
icebp
jl
hlt
mov
mov
or
movs
out
cmp
inc
inc
rol
adc
sub
mov
add
cmp
or
test
add
cli
mov
inc
xor
fiadd
ret
sbb
adc
loop
mov
xchg
add
push
fwait
add
mov
icebp
ret
jg
add
jne
stos
das
cs
inc
popf
inc
xchg
stos
push
and
and
dec
lahf
mov
not
xor
cmp
jmp
test
and
scas
or
mov
mov
mov
stc
jl
and
test
dec
ret
inc
sahf
arpl
in
out
retf
xor
call
push
xor
dec
jae
mov
shl
aam
popf
sbb
pushf
sub
es
js
dec
imul
aaa
cmp
mov
mov
movs
mov
ror
cmp
sar
test
mov
lods
push
(bad)
and
xor
dec
cmp
repnz
ins
test
inc
adc
sar
jle
add
pop
sbb
add
adc
mov
dec
dec
outs
stc
add
inc
loopne
(bad)
inc
dec
cmp
ja
dec
dec
jbe
sbb
dec
dec
dec
cmp
or
and
adc
xchg
push
push
and
mov
mov
xor
sbb
mov
inc
inc
and
and
movs
pop
ret
mov
jmp
sahf
cmp
dec
aas
push
lds
call
and
iret
mov
ja
or
sbb
jne
loop
ret
push
xchg
retf
mov
push
repnz
pusha
lods
sbb
fs
push
dec
fst
js
mov
(bad)
mov
push
outs
mov
push
sub
in
or
adc
call
push
outs
imul
cwde
dec
cmp
mov
jb
dec
int3
sbb
dec
imul
push
cmp
movs
repz
inc
xor
and
ror
adc
cli
dec
xchg
std
cs
push
xchg
test
ror
call
sar
out
punpckhwd
jmp
or
push
xor
push
and
or
and
nop
fimul
xor
and
xor
rol
das
sbb
add
scas
cmp
mov
jnp
outs
add
pop
aam
fadd
sub
xlat
pop
inc
bnd
dec
and
dec
(bad)
and
mov
adc
xor
or
daa
mov
push
nop
pop
pop
xor
mov
nop
mov
mov
pop
leave
push
pop
adc
loopne
and
mov
xchg
dec
int3
pop
and
clc
or
jle
mov
pop
hlt
das
ss
cmp
shr
inc
push
xchg
xchg
imul
or
aam
dec
dec
call
and
enter
and
dec
leave
loopne
fadd
push
dec
push
add
out
sbb
pop
cmp
mov
cwde
and
dec
and
mov
adc
xlat
or
pop
lods
inc
dec
add
xor
push
enter
in
lods
daa
xchg
fdivr
jg
fisub
jmp
or
mov
xchg
mov
aas
(bad)
sub
lods
int
or
jae
mov
adc
pop
xor
loop
or
dec
call
mov
imul
or
lods
push
loope
add
and
sbb
inc
jp
sbb
add
sbb
pop
push
adc
xor
dec
and
pop
das
lods
xor
mov
push
mov
adc
push
mov
push
aam
das
or
cmp
jo
ins
sbb
mov
and
dec
jae
inc
lds
loopne
clc
popf
not
es
aam
les
bound
sbb
jmp
cmp
cmp
mov
enter
and
ds
cdq
popa
pop
es
dec
lea
cs
fdivr
mov
lock
cmp
mov
or
js
pop
sbb
mov
pop
dec
jmp
xor
enter
aas
cmp
add
add
inc
jnp
mov
inc
cmp
fcomp
shl
mov
inc
or
test
in
fwait
aam
xlat
aad
and
and
or
adc
pop
or
jle
lds
pop
or
or
mov
and
cmp
jo
imul
dec
pop
sbb
adc
lods
sbb
repnz
in
jbe
or
arpl
push
cs
cmp
push
add
pop
sub
imul
lea
xchg
xchg
push
mov
gs
lds
push
int
call
and
jne
ret
xchg
adc
mov
shl
(bad)
js
push
mov
cld
add
ror
cmp
rol
lea
xor
xchg
iret
mov
(bad)
les
enter
(bad)
jb
pop
in
sbb
mov
aas
rol
in
add
rol
call
or
fcomp
cmp
aam
popa
sbb
xchg
add
xchg
rcl
stc
lods
(bad)
cmps
cmp
cmp
cmps
mov
gs
and
sub
inc
icebp
mov
shl
in
and
sbb
push
add
add
and
lahf
rol
dec
jg
sub
repnz
push
and
pusha
ja
icebp
daa
inc
retf
adc
cmp
(bad)
mov
lea
mov
and
inc
inc
push
mov
movs
add
mov
pop
jmp
test
retf
add
data16
jbe
xor
inc
hlt
add
push
dec
sar
loopne
dec
dec
mov
and
arpl
test
outs
arpl
and
fidivr
cmps
push
and
dec
xor
mov
and
mov
add
pop
push
jmp
xchg
mov
push
mov
mov
xor
or
sbb
push
ror
xchg
adc
ret
repnz
add
ret
push
ins
pop
xor
pop
retf
inc
push
and
mov
addr16
mov
pop
push
hlt
imul
mov
or
inc
or
in
jae
mov
add
mov
movs
mov
cdq
test
xchg
pusha
add
pop
mov
mov
movs
fld
push
xchg
pop
test
popa
sbb
das
adc
push
jmp
push
mov
sbb
int3
jno
adc
xor
mov
stos
xor
aas
repz
nop
mov
mov
inc
das
imul
cs
xor
movs
rol
dec
or
or
inc
mov
sbb
mov
xchg
jo
sbb
mov
and
sahf
xchg
and
add
dec
movs
push
and
retf
push
mov
mov
push
sbb
nop
retf
or
shl
push
sbb
push
enter
gs
int3
test
and
loopne
pop
mov
fcom
fdivr
and
sbb
movs
xchg
call
and
shl
cs
cmp
enter
or
repnz
iret
xor
in
lock
jno
xor
les
rcl
adc
push
xchg
popf
sub
dec
sub
add
mov
daa
cwde
xor
or
xchg
(bad)
cmp
aaa
jae
sbb
xor
outs
shl
add
fwait
inc
sub
fcom
cdq
push
ret
aaa
add
mov
push
xor
das
mov
mov
ss
add
mov
dec
mov
mov
pop
mov
(bad)
pop
push
xchg
jae
lods
pop
ss
aas
push
or
adc
dec
imul
and
cmps
(bad)
inc
add
repz
pop
mov
cmovg
and
push
mov
outs
dec
xchg
test
inc
xor
ja
and
out
mov
push
(bad)
jb
push
push
rcl
movs
pusha
jns
popa
call
dec
sbb
fbld
sub
or
daa
cmp
inc
jle
into
jle
fwait
mov
bsf
sub
pushf
jbe
rcr
jo
rol
or
shr
mov
add
les
push
xlat
add
js
popf
mov
pop
push
(bad)
mov
fdiv
popa
ja
xchg
out
add
jge
int
sbb
cmps
nop
in
movs
inc
dec
push
retfw
or
repnz
dec
dec
cmp
pop
cwde
add
jb
mov
sub
seto
aas
cmp
or
dec
sbb
mov
rcr
or
push
adc
sar
inc
add
lock
ss
sbb
test
adc
xchg
lods
xchg
scas
or
and
cs
js
and
dec
inc
push
cdq
inc
dec
inc
pop
xor
aaa
or
mov
push
out
ret
(bad)
jmp
sahf
and
sub
add
add
ret
inc
mov
jo
mov
inc
or
jbe
popf
nop
mov
add
add
add
add
or
or
or
adc
iret
movs
push
adc
and
inc
sahf
out
sahf
push
bound
mov
test
(bad)
shl
into
mov
or
nop
out
mov
ltr
and
sub
sbb
pop
sbb
sbb
int3
pusha
in
cmp
jl
push
or
inc
and
xchg
ss
sub
cmp
sbb
sbb
sub
sub
addr16
sbb
out
mov
push
cli
pop
xchg
dec
xor
lea
cdq
push
xor
in
and
sti
mov
xchg
jge
or
es
pop
inc
jb
push
movs
(bad)
or
cmp
jg
push
mul
push
fs
fstp
or
gs
gs
lea
test
pop
dec
add
push
inc
push
push
sub
mov
jnp
push
dec
dec
in
mov
mov
sti
ins
or
das
ss
or
push
out
push
mov
scas
sti
dec
mov
gs
(bad)
push
mov
or
push
lock
sub
outs
lahf
ret
test
fs
pop
xchg
aad
xchg
and
scas
rcl
adc
adc
test
ror
mov
std
aam
nop
scas
mov
cmp
aaa
dec
retf
push
jns
xor
inc
push
push
out
sahf
out
xchg
dec
push
dec
retf
or
and
daa
jecxz
mov
dec
dec
sbb
fscale
sbb
cmp
cmp
pop
sub
lods
or
adc
pop
or
jae
rol
aas
dec
or
sbb
xor
sub
mov
sbb
dec
inc
dec
push
cmp
in
mov
jp
fwait
aas
mov
and
mov
push
dec
dec
inc
push
ss
xchg
sub
fcmovb
imul
mov
dec
dec
push
mov
xchg
inc
pop
jbe
push
pop
pop
outs
adc
int
sbb
adc
icebp
sti
aaa
xor
and
inc
mov
inc
mov
enter
outs
jp
push
sbb
imul
in
dec
adc
imul
fiadd
ins
cmp
fstp
sbb
add
and
in
xchg
add
fistp
sub
pusha
adc
popf
dec
or
inc
movs
mov
nop
call
fsub
xchg
call
and
mov
xchg
inc
push
in
adc
(bad)
add
int3
retf
int
jns
out
push
ffreep
pop
push
adc
std
adc
cmp
repz
inc
and
iret
repz
dec
(bad)
icebp
push
mov
pop
add
imul
nop
sbb
repnz
add
and
imul
sbb
popf
nop
add
rcl
push
int3
push
adc
sub
adc
and
sub
push
aaa
jp
jbe
es
test
pop
inc
sub
loop
push
(bad)
dec
cmps
aaa
or
push
pop
pop
test
jbe
stos
xor
cs
mov
jmp
shr
addr16
retf
das
xor
dec
mov
(bad)
(bad)
push
lea
mov
cmp
adc
adc
cwde
xor
inc
push
mov
(bad)
pop
dec
clc
sub
xor
xchg
push
ins
jne
imul
add
iret
add
sub
inc
jmp
pop
(bad)
iret
adc
or
cld
mov
pop
adc
lahf
inc
push
mov
push
loopne
outs
xchg
arpl
in
arpl
mov
pushf
fsub
nop
inc
pushf
cwde
adc
adc
les
or
enter
rcr
pop
ja
arpl
adc
jb
xchg
xchg
nop
adc
adc
or
inc
adc
xor
adc
adc
shl
movs
dec
inc
push
jb
hlt
daa
sbb
sbb
cmp
push
clc
call
and
inc
data16
ret
nop
sahf
not
xchg
nop
add
ss
sahf
out
dec
push
popa
cmp
jns
out
jg
imul
out
sahf
iret
fnstenv
int
jns
test
cmp
repz
adc
pop
sub
cmp
iret
push
pop
gs
ja
cmp
repz
xchg
lahf
test
repz
adc
(bad)
movs
in
fidiv
xor
pusha
nop
mov
gs
or
fs
rol
and
sbb
in
push
repnz
ins
stos
outs
in
dec
imul
into
ds
inc
xchg
push
sub
test
(bad)
leave
dec
ss
into
in
rcr
jg
enter
sbb
mov
push
push
imul
fcom
lods
cmps
or
mov
outs
sub
push
sub
push
test
adc
dec
and
out
dec
add
and
push
call
sahf
and
inc
mov
and
push
push
xor
mov
push
scas
mov
mov
shr
and
xchg
and
dec
ja
and
pop
add
jb
pop
xchg
ins
dec
adc
ret
push
imul
sbb
mov
or
retf
inc
sbb
mov
inc
sbb
addr16
mov
and
push
cdq
shr
mov
adc
fld
adc
inc
setbe
and
or
mov
test
adc
sub
mov
inc
outs
lds
mov
pop
dec
pop
cmp
out
sbb
pop
pop
push
sub
xor
inc
mov
sub
push
or
add
fnsave
(bad)
(bad)
lock
inc
push
lea
rol
jns
inc
aaa
aam
frstor
clc
jge
or
fild
mov
pusha
aaa
add
lods
jg
arpl
push
or
inc
add
std
jp
adc
xchg
(bad)
push
mov
and
(bad)
daa
outs
jo
push
mov
push
add
xchg
or
mov
push
enter
div
push
jmp
enter
bnd
pop
sbb
loopne
mov
mov
inc
jg
lea
sub
jecxz
add
add
retf
jo
inc
clc
frstor
or
aas
or
pushf
arpl
jns
and
js
test
add
leave
add
adc
push
or
std
enter
adc
jnp
and
sbb
or
cld
or
clc
pop
add
sbb
xor
into
or
inc
or
pop
aas
and
shl
xor
in
push
or
cwde
sub
add
dec
leave
fisub
sbb
mov
mov
mov
dec
jecxz
and
movs
lock
pop
cmp
rcr
shr
jmp
xchg
sbb
and
jbe
js
or
sar
jmp
push
clc
add
popa
pop
call
and
add
in
out
mov
mov
xchg
and
xchg
ret
daa
inc
and
mov
pop
pop
cmp
addr16
mov
cld
adc
adc
xor
hlt
add
seta
push
scas
add
jb
cmp
add
sbb
xor
shl
adc
dec
in
mov
pop
xchg
arpl
sbb
cmc
push
push
or
push
push
sub
inc
and
mov
(bad)
lods
and
dec
es
mov
imul
xor
adc
adc
jb
push
cmp
cmp
push
add
loop
pop
sub
pop
lahf
xchg
inc
fadd
adc
xchg
es
out
jnp
nop
ja
nop
push
mov
shl
sbb
xor
inc
dec
add
pop
xor
mov
push
imul
inc
xor
or
mov
sahf
pop
dec
inc
xor
inc
or
sbb
repnz
dec
retf
jb
(bad)
or
push
xor
or
(bad)
sub
or
sub
imul
or
dec
push
in
aas
and
mov
xchg
sbb
daa
(bad)
movs
sbb
jp
test
fwait
xor
push
enter
enter
jge
jecxz
pop
imul
shl
push
call
jp
daa
hlt
sub
mov
xor
mov
pop
mov
sub
(bad)
mov
sub
or
add
cmp
cmp
xchg
pusha
out
sub
adc
rcl
cmp
je
adc
jmp
cmp
data16
cmp
js
cmp
loop
push
adc
add
ret
mov
aaa
pop
into
cmp
mov
(bad)
adc
enter
test
fld
pop
scas
xchg
jae
cmp
xchg
jmp
aad
add
mov
scas
push
rcl
sbb
sbb
stos
mov
inc
sub
push
mov
adc
jg
inc
push
xchg
add
and
add
inc
add
mov
(bad)
sbb
fidivr
push
add
imul
dec
inc
mov
pop
sub
sbb
ins
fwait
daa
test
sub
lea
in
test
push
repnz
or
push
add
inc
pop
mov
je
aaa
or
rcl
fwait
jae
cmp
ret
pop
adc
xchg
ins
movs
shl
add
shl
mov
or
xchg
sbb
adc
out
jmp
or
add
fisttp
cmps
gs
dec
dec
cmp
shl
adc
out
dec
in
xor
xor
les
scas
push
fst
inc
pop
outs
mov
push
aaa
ror
out
pushf
xor
push
repnz
and
and
lods
adc
jmp
dec
aas
dec
xor
xor
iret
push
inc
push
daa
lock
sub
(bad)
test
sbb
mov
inc
add
push
(bad)
sahf
jecxz
xchg
sbb
push
cmp
fdivr
ret
neg
ss
das
xor
sub
xor
adc
jae
sub
xchg
add
push
push
push
sub
fidivr
jo
adc
push
or
xor
xor
xor
pushf
aaa
aaa
pop
fisubr
push
in
inc
inc
xor
xor
xor
addr16
push
xor
xor
inc
xor
lahf
push
xor
retf
mov
daa
xor
xor
xor
xor
ss
es
adc
xor
xor
or
mov
ret
pop
movs
inc
ja
(bad)
and
inc
add
hlt
mov
retf
dec
push
mov
mov
mov
mov
cmp
add
in
xchg
inc
mov
pop
sbb
inc
aam
inc
adc
imul
add
cdq
xor
inc
push
and
loope
rcl
sub
inc
mov
cmp
mov
and
ja
mov
or
arpl
imul
fsub
inc
pop
jae
inc
pusha
xor
ins
in
push
inc
fstp
mov
or
jb
and
aaa
imul
or
hlt
and
inc
pop
or
inc
ret
pop
adc
pop
scas
xchg
or
mov
xor
cdq
dec
les
inc
adc
dec
in
add
pop
ror
rcl
push
das
mov
xor
adc
pop
les
dec
imul
mov
loopne
sub
jle
cs
shl
aas
jmp
fwait
mov
push
ja
push
xchg
in
jb
adc
dec
idiv
sub
or
push
ret
push
test
mov
loopne
mov
push
push
sbb
cmps
and
jbe
ret
mov
cmps
dec
mov
add
arpl
test
dec
or
fdiv
test
mov
push
and
xor
and
lock
add
ret
cmp
hlt
or
out
xchg
pop
adc
outs
xor
in
rol
aaa
push
shl
push
adc
mov
xchg
ror
nop
inc
add
jnp
and
cmp
outs
jl
add
cld
aaa
iret
ja
ins
pop
sbb
imul
lods
add
mov
in
rol
push
dec
inc
inc
outs
jb
adc
rcl
sbb
and
mov
adc
iret
cmp
adc
ret
popa
stos
daa
lock
fisttp
inc
or
bound
jae
add
inc
xor
or
dec
push
sahf
pusha
adc
out
mov
sbb
mov
jnp
inc
jb
ret
and
cld
imul
gs
mov
add
sbb
mov
xor
add
or
std
gs
mov
cmp
cmps
popf
mov
sbb
pop
clc
aaa
push
and
dec
inc
loopne
push
repnz
js
sbb
dec
ss
movs
sbb
jae
adc
adc
ss
sbb
mov
pop
loop
sub
jle
add
xor
fstp
and
ins
cmps
aas
sar
xor
cwde
jg
adc
sbb
aas
aaa
pop
lock
jge
push
mov
xchg
scas
rol
cmp
ror
div
inc
ja
adc
dec
xor
cld
push
ins
adc
in
dec
and
loope
cmp
lock
movaps
sub
daa
call
ins
or
nop
aas
mov
cmp
out
scas
push
dec
inc
sub
inc
xchg
scas
outs
pop
lds
dec
and
adc
test
sub
dec
std
test
and
js
test
sub
or
js
and
or
inc
sar
mov
and
aaa
cwde
sbb
add
fcmovu
or
and
call
xor
jmp
push
add
push
fs
ds
test
cld
sub
mov
in
cmp
mov
mov
dec
sahf
pop
shr
push
in
int
pmulhuw
mov
call
call
das
jns
out
in
mov
push
sub
js
mov
cmp
push
test
push
and
fmul
xlat
aaa
xor
xchg
and
cmp
outs
dec
test
and
inc
mov
xlat
test
movntps
and
fdiv
prefetch
or
or
or
in
inc
add
dec
les
loopne
xor
hlt
sbb
pop
mov
xor
out
lea
pop
adc
sub
aaa
lds
cmp
js
push
pcmpgtb
lods
push
add
cli
push
das
adc
outs
dec
xor
arpl
scas
loope
sbb
jge
mov
rol
xor
sbb
and
movs
adc
icebp
shl
or
dec
xor
sbb
outs
aas
jmp
mov
jnp
hlt
mov
jle
clc
mov
fstp
ret
mov
xor
jg
xor
sar
or
(bad)
push
mov
sbb
inc
or
fidivr
sub
push
test
ins
movs
mov
or
imul
aaa
pop
aas
sbb
xchg
imul
push
mov
hlt
mov
les
pop
repnz
mov
and
aam
sbb
sub
inc
inc
fisubr
mov
xor
sbb
and
aaa
dec
lods
popa
pop
rol
adc
jnp
pop
or
jg
xlat
fisubr
sbb
scas
jo
mov
enter
push
pop
add
push
add
jmp
adc
mov
cmp
adc
sub
daa
add
jbe
arpl
outs
lods
(bad)
sub
inc
adc
sub
xchg
mov
fld
lods
inc
pop
add
push
cmp
push
mov
dec
ret
xchg
push
mov
pop
push
dec
lahf
sub
jmp
add
mov
inc
cld
push
pop
or
mov
dec
scas
adc
mov
mov
inc
inc
cmp
or
cmp
push
xor
data16
sub
lock
cwde
inc
and
hlt
in
out
out
stos
add
cmc
(bad)
sti
std
jo
mov
hlt
daa
scas
add
fdiv
xlat
and
xchg
inc
pop
or
arpl
es
xchg
xchg
push
and
inc
dec
movs
sbb
(bad)
aam
aaa
push
sti
xor
inc
sbb
imul
aas
or
pop
ins
inc
inc
jbe
bound
add
mov
inc
retfw
cmp
sbb
retf
js
sbb
add
pop
xor
dec
addr16
in
inc
dec
clc
es
retf
enter
pop
add
repnz
inc
in
loopne
inc
inc
mov
movhps
hlt
mov
adc
or
sbb
stc
pop
arpl
aam
or
fsubr
loop
shr
push
and
call
test
inc
rcl
mov
mov
fwait
adc
test
test
or
inc
sub
inc
mov
jecxz
xor
(bad)
push
inc
sti
aaa
fwait
adc
ret
dec
xor
js
je
lock
clc
or
in
in
retf
mov
and
dec
pusha
push
mov
lea
hlt
inc
mov
inc
cmp
data16
movlps
adc
cwde
pop
dec
(bad)
jmp
aad
gs
add
fs
xor
inc
sbb
into
nop
jno
adc
enter
sub
cdq
out
push
test
sbb
push
xor
clc
xchg
cmc
mov
call
cmp
jno
dec
xchg
vmlaunch
add
xor
xor
sbb
cmp
(bad)
cmp
mov
xchg
mov
jle
jnp
pop
inc
xlat
push
adc
jl
adc
cmp
sbb
mov
outs
(bad)
mov
add
pop
into
imul
add
jns
(bad)
(bad)
aam
cmp
xor
push
nop
fwait
aad
dec
cmp
sbb
je
repz
dec
rcl
sbb
mov
pop
dec
jb
cmp
mov
outs
push
xor
pop
cmp
mov
test
test
pop
add
enter
push
loopne
nop
xor
inc
xchg
add
pop
or
in
sub
jg
xor
pop
sub
add
sbb
in
imul
adc
adc
dec
xchg
icebp
rcl
arpl
fnstenv
adc
loope
ja
fdivr
sbb
out
xor
rcr
jl
mov
sub
jge
mov
mov
push
pusha
mov
and
pop
fdiv
into
cmps
or
ror
xor
push
mov
hlt
dec
and
and
pop
fmul
test
pop
dec
push
xchg
ins
call
dec
ror
xor
push
fadd
inc
ret
not
inc
cwde
jo
mov
pusha
cmps
sbb
xor
jmp
or
and
and
adc
sub
or
add
imul
push
enter
dec
and
pop
xor
lock
dec
repnz
xchg
cld
(bad)
icebp
lds
cmp
bound
sub
pop
or
les
mov
sub
retf
push
add
jbe
stos
sub
cmp
ret
add
ds
push
dec
fcom
add
hlt
out
es
hlt
sbb
fcmove
fldcw
dec
or
sub
pop
cmp
push
sbb
es
pop
nop
cmps
sbb
lock
shr
addr16
cwde
jl
push
sti
loopne
or
push
pop
into
adc
iret
scas
nop
nop
push
imul
pop
add
pusha
cmp
push
inc
mov
mov
or
ds
sti
dec
xor
push
jmp
jne
jne
jmp
(bad)
adc
push
add
sar
in
sub
dec
out
xchg
dec
and
pop
fstp
pop
add
fs
mov
rcr
js
adc
jb
inc
push
in
aaa
add
dec
mov
jns
jne
push
in
xor
test
dec
sar
test
mov
movs
or
out
aaa
lds
mov
or
lea
por
xor
pop
adc
xchg
fsub
xor
das
add
xor
(bad)
gs
mov
cmp
(bad)
test
mov
xor
bound
test
(bad)
enter
xchg
add
call
cs
xchg
pusha
call
cmp
add
scas
cmp
daa
mov
xor
and
jb
pop
sti
push
mov
and
and
test
call
cmp
xor
aaa
(bad)
cmp
enter
pop
xchg
retf
pop
adc
shl
scas
pop
nop
xchg
fwait
pop
sub
push
not
leave
les
fisub
xchg
add
add
jnp
and
inc
popa
inc
sub
test
pushf
lahf
inc
pop
jmp
push
mov
loop
add
mov
or
sbb
test
popa
push
jp
imul
sub
add
xchg
les
fisub
fimul
fs
sub
sbb
inc
data16
add
mov
call
cmp
in
sub
sub
mov
enter
xor
mov
outs
xor
sbb
mov
pop
cmps
cmp
cmp
pusha
adc
cwde
cmps
jne
arpl
popa
inc
pusha
nop
dec
aas
inc
loope
icebp
pop
aam
fs
pop
ret
inc
xor
xchg
dec
dec
dec
stos
pusha
retf
ror
dec
pusha
pop
push
cs
dec
aaa
jns
sub
lods
and
adc
test
push
lock
or
ins
pusha
pushf
push
test
or
xchg
xchg
inc
(bad)
adc
push
add
aas
repnz
iret
jle
dec
test
mov
xchg
pop
adc
pop
push
nop
mov
lock
(bad)
xchg
or
ret
ins
push
mov
push
jno
sub
les
inc
or
pop
les
dec
add
sbb
in
jno
inc
mov
fst
jne
push
inc
aaa
inc
or
loop
mov
add
int3
add
dec
fs
sahf
sub
add
push
cmp
cmp
dec
push
xor
add
mov
iret
repz
push
rol
test
iret
repz
fiadd
aad
fcmovbe
call
mov
aaa
mov
daa
iret
sbb
rcl
push
add
or
mov
ret
mov
inc
ins
mov
inc
push
xor
dec
sub
out
inc
xchg
cwde
fisub
dec
jg
daa
mov
fmul
fcomp
push
inc
add
mov
inc
dec
add
or
int
inc
out
mov
lahf
test
mov
adc
jle
mov
loopne
ja
jmp
fild
fdiv
shl
rol
xchg
addr16
pop
xchg
xchg
mov
in
pop
dec
in
xor
or
xor
aaa
and
pushw
loop
mov
and
mov
push
aam
pop
subps
call
push
ret
loope
hlt
xchg
dec
push
test
ins
jbe
dec
adc
dec
inc
test
inc
loop
pop
dec
addr16
inc
push
cld
loopne
cmp
xor
jne
xor
cmp
inc
cmovle
cli
dec
mov
fmulp
mov
mov
das
nop
ds
(bad)
in
xchg
inc
in
push
pusha
pop
mov
jnp
je
test
pop
mov
or
mov
add
adc
pop
sub
add
or
fidivr
imul
or
and
cld
je
test
(bad)
add
pop
iret
cmp
sbb
add
js
pop
sbb
test
mov
mov
pop
nop
mov
lahf
outs
or
mov
stos
adc
inc
adc
bound
test
ret
or
(bad)
stos
data16
out
mov
mov
lea
ret
pop
call
sbb
(bad)
and
fucomp
sti
cmps
cmp
sub
add
jnp
stos
xor
push
lds
push
xchg
xor
cmp
popa
mov
add
les
or
test
add
lahf
add
push
arpl
adc
or
or
ror
and
mov
jne
jno
and
mov
or
pop
paddq
adc
ror
add
push
adc
retf
and
sbb
into
push
inc
in
ds
and
aaa
shl
loop
xor
leave
out
push
popf
enter
xor
cmp
pop
arpl
loope
pop
or
arpl
push
sbb
push
lds
mov
inc
les
dec
mov
cmovg
dec
cmps
ins
xchg
lahf
add
cmp
and
scas
jo
push
inc
and
retf
les
cs
jno
sub
test
cmp
pop
push
dec
inc
mov
pop
add
es
cmps
inc
data16
ja
bound
or
xor
inc
sbb
arpl
outs
dec
fcmovb
mov
js
mov
push
inc
sbb
daa
cmp
btc
or
add
cwde
sbb
add
bound
ss
test
or
and
pushf
mov
pop
xchg
test
inc
push
xor
cmp
adc
jl
cmp
mov
jmp
dec
add
jmp
nop
xchg
pop
dec
mov
add
hlt
cli
push
jo
fs
hlt
hlt
hlt
inc
and
sahf
ja
dec
push
push
cmp
in
pop
push
lahf
pusha
cs
call
jbe
add
fadd
xchg
mov
pop
sbb
leave
cmovns
push
cld
adc
popa
mov
sub
fiadd
cs
mov
mov
add
and
arpl
xor
movs
ret
(bad)
mov
inc
outs
fs
es
daa
retf
mov
push
or
xor
dec
dec
fs
mov
pusha
mov
dec
stos
shr
and
nop
bound
or
mov
fs
pusha
je
mov
dec
je
or
add
push
inc
int3
sbb
xor
test
pop
jecxz
lds
mov
gs
int3
xor
scas
add
sub
pop
lods
mov
mov
arpl
dec
dec
add
push
and
fdivr
hlt
sete
mov
jae
cmps
aam
adc
or
repz
nop
add
push
mov
jmp
es
pop
mov
pop
sbb
jne
(bad)
cmp
mov
cmp
sbb
fdivr
jnp
gs
arpl
cdq
shl
jns
dec
test
dec
push
pop
out
in
jle
and
call
mov
mov
jp
pop
or
das
es
inc
xor
mov
(bad)
jg
nop
cli
push
dec
sahf
arpl
dec
sbb
sbb
sbb
sbb
pusha
xchg
cmp
repz
mov
inc
pop
adc
and
mov
or
jle
jl
xor
ds
push
jnp
lds
add
or
sbb
sub
es
or
(bad)
test
rol
dec
int
sub
loopne
push
(bad)
pop
arpl
pop
push
clc
or
xchg
mov
push
adc
aas
loopne
xchg
mov
in
and
pop
pop
lock
or
pop
mov
push
(bad)
sub
(bad)
fadd
push
xor
inc
ret
add
fs
(bad)
rol
arpl
sub
arpl
xor
rcl
outs
cmp
mov
dec
ret
add
push
jp
mov
data16
stos
dec
dec
imul
fisttp
adc
xchg
sbb
add
sbb
adc
sbb
shr
jbe
and
pop
jecxz
dec
or
test
mov
mov
xchg
jne
popf
int
sub
(bad)
cmps
aad
and
add
mov
push
or
imul
sub
and
sub
push
lahf
mov
dec
aad
mov
or
mov
lea
int3
imul
pushf
mov
jno
push
outs
mov
popf
pushf
in
xor
xor
inc
lock
clc
imul
or
or
imul
xchg
add
push
xchg
inc
inc
aad
mov
mov
mov
scas
fwait
nop
idiv
mov
xor
mov
rol
test
push
mov
sub
int3
clc
sbb
push
jmp
inc
loopne
mov
dec
and
mov
frstor
lods
inc
mov
shr
cwde
dec
bound
cmp
push
xchg
mov
push
mov
xor
jmp
mov
cmp
or
dec
jo
jmp
adc
inc
pop
test
cmp
in
add
call
xchg
lock
sbb
mov
xor
xchg
pusha
or
sub
inc
in
pusha
inc
xchg
jo
xchg
in
adc
out
leave
and
ins
adc
repnz
or
fs
sti
in
mov
push
sub
mov
mov
sbb
dec
inc
or
pop
fbstp
lock
xor
mov
loop
or
adc
pop
push
imul
pop
mov
loop
shr
je
loop
lods
retf
bound
addr16
out
daa
add
add
sub
push
inc
push
and
xlat
ret
jno
push
or
neg
rol
imul
sbb
mov
or
test
sbb
in
sbb
adc
mov
xchg
xchg
xchg
and
and
dec
movs
(bad)
add
mov
and
mov
pop
les
je
ror
shl
pop
and
push
loope
dec
fld
cmp
cmp
cmc
je
pusha
adc
cmps
jmp
and
sbb
sar
sub
jnp
aaa
add
sub
retf
rol
push
aam
popf
or
jmp
adc
xchg
rol
and
push
scas
add
add
mov
int
sbb
xchg
mov
addr16
add
ret
movs
pusha
fs
pop
pop
lods
fadd
cmp
dec
xor
out
gs
pop
pop
mov
xchg
lahf
dec
(bad)
adc
lock
add
ror
in
mov
test
mov
and
cmc
or
cmp
and
shr
and
sub
adc
sub
mov
(bad)
clc
pop
lds
dec
movs
cmp
adc
idiv
xlat
inc
and
test
cmp
push
or
push
dec
dec
add
mov
sbb
push
xchg
cmp
(bad)
imul
adc
xchg
push
fs
fldcw
ret
or
popf
sbb
adc
pop
rcl
mov
rcr
gs
sbb
pop
daa
mov
dec
loope
and
pop
sbb
pop
mov
and
push
jne
and
or
aaa
jne
sbb
rol
je
jne
add
mov
shl
push
or
inc
and
cmovge
inc
(bad)
mov
inc
dec
mov
mov
adc
add
je
or
nop
pop
lds
js
inc
xor
and
daa
cmp
or
sub
ins
xor
xchg
or
daa
sub
mov
inc
xor
inc
xor
aaa
or
jno
push
addr16
(bad)
fiadd
add
popf
dec
gs
push
inc
pop
and
arpl
mov
mov
pop
cdq
mov
push
loope
sbb
stos
jne
loope
cmp
adc
push
gs
push
jb
nop
inc
push
push
push
in
cs
push
pop
mov
dec
pop
adc
pop
mov
push
leave
push
mov
push
test
or
inc
test
mov
jne
adc
add
popa
add
and
push
add
leave
dec
pop
push
add
mov
pop
dec
inc
inc
lahf
test
out
push
in
fisttp
(bad)
jecxz
and
push
stos
dec
fcom
adc
(bad)
sub
test
push
add
dec
call
mov
mov
lods
jns
and
pop
xchg
adc
xchg
ins
and
and
dec
test
daa
mov
hlt
in
jl
test
mov
mov
adc
ja
mov
sar
or
ret
xchg
add
mov
in
hlt
daa
jo
dec
aam
pop
addr16
xlat
xor
(bad)
daa
sub
scas
pop
outs
pop
xchg
rcr
dec
or
xchg
ss
loope
adc
and
clc
mov
or
adc
adc
and
jp
add
and
add
jp
jp
cld
jg
push
push
dec
inc
inc
push
inc
push
push
dec
dec
push
ds
(bad)
clts
sub
push
enter
mov
xchg
push
xor
das
jnp
scas
shl
mov
push
addr16
cmp
fadd
xor
adc
sar
call
aam
lock
mov
test
mov
imul
gs
popa
ins
and
leave
lahf
inc
clc
dec
mov
cs
pop
pop
je
xchg
xchg
pusha
mov
popa
adc
xor
test
push
scas
xor
(bad)
jle
jge
lods
pop
push
test
inc
inc
inc
pop
add
jle
imul
ins
pop
xor
add
mov
sbb
add
push
ja
or
sub
cmp
jle
push
inc
xchg
adc
cmps
mov
jae
push
jo
invd
add
push
push
call
out
iret
pop
cmp
xchg
stos
push
and
lods
or
mov
inc
sahf
mov
xchg
xchg
sete
or
iret
fsubr
adc
lahf
jne
stc
loope
lock
add
push
repnz
adc
push
fsubr
and
clc
xchg
adc
and
gs
les
and
psubsw
test
aad
mov
push
aaa
outs
les
je
mov
and
fild
sub
fwait
mov
push
or
vphaddudq
stos
xor
lods
inc
and
inc
push
rcl
pop
lods
and
pushf
nop
xlat
or
push
out
retf
test
aam
or
inc
es
and
add
je
icebp
dec
pusha
repz
sub
enter
cwde
or
and
cwde
and
sbb
xor
push
iret
push
cmp
cmps
mov
cwde
fdivr
dec
pusha
adc
mov
test
retf
pop
push
movs
xor
sub
add
mov
leave
fwait
and
mov
out
sbb
adc
pop
daa
dec
mov
and
jg
add
mov
sbb
scas
cmps
sub
and
mov
ja
pop
pop
in
loop
pop
test
or
clc
test
fwait
xor
(bad)
call
pop
test
stos
add
mov
mov
mov
popf
jmp
adc
add
inc
jmp
loope
push
xchg
push
lock
test
adc
or
add
add
mov
mov
ins
adc
and
mov
arpl
and
ficom
sbb
xchg
std
out
push
mov
mov
jmp
sbb
mov
mov
or
and
ret
or
movs
test
and
and
sbb
(bad)
jo
push
mov
push
pop
or
pop
lock
dec
mov
mov
idiv
jp
push
test
add
cmps
outs
idiv
aaa
push
adc
fdivr
fimul
enter
add
or
dec
pop
and
xchg
das
push
test
test
inc
cmps
aaa
adc
ror
aad
adc
push
xchg
popa
or
dec
leave
mov
pop
js
and
sub
add
test
sub
in
test
pop
add
div
adc
popa
add
pusha
imul
and
dec
lea
movs
fs
ds
and
int
xchg
or
add
sbb
and
jmp
pop
mov
mov
mov
ds
scas
sub
push
cwde
mov
(bad)
loopne
inc
repnz
inc
in
adc
dec
pop
mov
jae
(bad)
ins
stos
add
mov
sub
mov
call
fnsave
sbb
xor
loopne
out
dec
dec
mov
es
(bad)
push
mov
cmp
neg
mov
inc
retf
pushf
push
popa
mov
sbb
imul
pop
fcom
dec
outs
je
mov
jae
cmp
mov
out
push
mov
cmps
mov
stc
fisubr
pop
aad
outs
test
push
scas
dec
sbb
repz
aam
dec
outs
push
daa
ficomp
ins
dec
inc
mov
dec
mov
cmp
adc
mov
cmc
mov
jb
and
outs
xchg
inc
add
dec
jno
mov
adc
call
xlat
and
jno
rcl
shl
sar
ret
xor
or
fiadd
push
out
mov
or
cmp
imul
sbb
jmp
fmul
fdivr
ja
xor
sar
imul
push
inc
dec
nop
and
popf
dec
out
call
sub
lock
mov
test
sbb
cmp
pop
bound
ret
pop
dec
aaa
nop
mov
or
push
push
das
add
inc
push
in
shl
xor
jge
push
xor
mov
ret
push
xlat
push
lds
push
jb
push
jo
xor
test
xchg
inc
cld
jb
push
retf
scas
nop
mov
jnp
xchg
xor
mov
add
xchg
sti
test
lahf
jae
mov
ins
pop
iret
outs
jns
or
aaa
cmc
cmp
xchg
fisttp
xor
mov
push
mov
push
xchg
push
or
push
gs
stc
lods
cld
(bad)
jo
sahf
xor
sti
mov
inc
ds
fadd
xor
lea
or
sbb
sbb
and
xor
mov
sub
adc
popf
jmp
mov
daa
mov
daa
daa
daa
movs
movs
cmps
cmps
daa
daa
daa
daa
test
stos
stos
daa
daa
daa
daa
lods
lods
scas
scas
daa
daa
daa
daa
nop
xchg
xchg
xchg
daa
daa
daa
daa
xchg
xchg
xchg
xchg
daa
daa
daa
daa
cwde
cdq
call
popf
sahf
lahf
daa
daa
daa
daa
add
daa
test
daa
daa
mov
daa
daa
mov
daa
daa
jo
jb
daa
daa
daa
daa
je
jbe
daa
daa
daa
daa
js
jp
inc
add
daa
jl
xchg
xchg
cmps
add
cmp
inc
mov
sbb
xchg
gs
adc
loope
lods
pop
mov
inc
mov
and
ret
mov
xchg
and
sub
adc
mov
xchg
mov
int3
sbb
es
mov
daa
push
jo
(bad)
mov
scas
sbb
mul
je
push
outs
cmp
out
dec
add
sub
add
sub
add
lds
mov
cmp
ins
popa
out
push
ret
es
pusha
loop
aas
or
cmp
test
xor
in
in
fidiv
outs
ror
dec
std
inc
(bad)
cld
rol
frstor
cmp
and
cmp
in
push
pop
or
jns
mov
pop
mov
(bad)
sar
cmp
dec
jg
ror
shr
adc
nop
mov
push
xor
inc
ja
xchg
das
hlt
xchg
mov
push
sub
xor
and
dec
jns
or
sbb
mov
dec
xchg
mov
icebp
rcr
pop
push
pop
mov
jns
and
sbb
jne
(bad)
data16
pop
repnz
mov
in
xchg
pop
mov
cwde
(bad)
out
inc
cwde
dec
add
je
jns
repnz
add
inc
or
pop
mov
lock
or
je
(bad)
xchg
fisub
loopne
je
sub
ret
ror
test
aas
test
or
dec
xchg
fld
jge
add
ja
and
cmp
xchg
add
push
xchg
lea
cmp
mov
xchg
dec
cmp
test
imul
cmp
stc
int
imul
loopne
rcr
mov
shl
xor
sbb
cmp
mov
enter
adc
add
popf
test
mov
inc
dec
loop
sbb
xchg
xchg
sbb
iret
clc
test
dec
jnp
adc
sub
jl
inc
xchg
xlat
aas
test
shl
mov
add
dec
popf
sub
clc
cmp
test
popa
mov
push
dec
lock
mov
add
cmp
movs
jmp
call
sbb
in
sbb
(bad)
sub
sub
sbb
mov
dec
jne
pop
add
pop
push
jecxz
mov
shr
mov
(bad)
jl
inc
fsub
pop
xchg
add
fs
pushf
add
idiv
(bad)
xor
sub
pop
aaa
inc
or
add
jns
add
fsubr
sti
bound
adc
gs
(bad)
retf
cwde
xor
fdiv
or
popa
or
retf
sti
sub
neg
add
icebp
cmp
pop
and
xchg
mov
push
lods
add
inc
lea
retf
adc
cwde
cld
push
(bad)
retf
(bad)
push
clc
lods
mov
dec
jbe
mov
inc
sub
lods
mov
add
add
in
dec
xchg
(bad)
add
dec
adc
sbb
arpl
out
enter
and
fnop
push
add
mov
cmps
mov
shl
jb
je
dec
add
add
lods
dec
adc
or
or
cmp
add
dec
arpl
sub
add
push
and
(bad)
and
pop
lahf
out
or
mov
ss
adc
dec
or
popf
inc
sahf
(bad)
mov
jmp
push
dec
mov
lods
xchg
test
mov
mov
pop
add
test
ret
cmps
xor
jns
add
je
aas
lock
and
test
mov
push
fadd
or
jbe
or
sete
test
pop
popa
xor
or
sbb
push
pop
mov
pop
add
bound
adc
dec
inc
inc
sbb
or
pop
jno
aaa
mov
rol
(bad)
push
shl
mov
mov
(bad)
enter
jnp
(bad)
xchg
test
lahf
inc
inc
loop
jo
pop
adc
add
les
xor
and
cmp
jecxz
sbb
cld
fidivr
sbb
sbb
and
or
or
adc
push
add
add
sub
and
and
mov
pop
pop
movs
or
add
lock
sub
jae
ins
mov
ret
sub
sbb
imul
jle
and
pop
pop
and
add
add
add
inc
adc
outs
add
shl
mov
cld
rol
nop
dec
daa
dec
or
cmp
xchg
movs
xchg
jnp
mov
push
mov
std
in
mov
or
call
imul
or
dec
sbb
in
cmp
or
inc
fsubr
push
sbb
sbb
or
movs
add
jno
inc
sub
retf
and
inc
inc
rcr
adc
or
test
aam
test
xor
or
jne
push
add
inc
add
out
or
ror
mov
or
ret
adc
aas
stos
pusha
sbb
lods
jmp
push
push
xchg
fcmovu
or
jo
pop
setg
mov
mov
push
push
retf
fdiv
in
ror
sub
push
icebp
std
xchg
js
push
mov
inc
sti
inc
jbe
sar
data16
sbb
call
cs
push
add
fild
mov
popa
xor
dec
jmp
push
dec
jne
jns
call
and
and
sbb
pop
arpl
dec
push
add
clc
and
sbb
xchg
lods
popf
xchg
pop
test
push
ret
push
push
scas
sub
rcr
movs
int
imul
rol
cmp
popa
xchg
(bad)
jl
shl
data16
(bad)
and
ds
lock
call
jl
and
mov
ret
mov
fsub
aad
push
xor
jle
nop
mov
outs
test
lods
test
fld
and
fisubr
xor
dec
jo
or
jmp
call
or
pop
mov
jg
add
sub
test
inc
or
shl
data16
daa
bound
or
in
std
gs
push
ret
push
rol
push
out
cmp
cmps
bound
enter
cmp
dec
xchg
pop
lods
dec
push
push
push
dec
adc
cld
and
push
test
mov
test
dec
adc
cmp
imul
adc
jns
(bad)
or
(bad)
dec
mov
jo
lock
dec
xchg
cs
icebp
pop
ret
or
pushf
movs
fisttp
add
out
cdq
adc
dec
sub
mov
outs
dec
(bad)
test
jl
cmp
je
mov
mov
inc
hlt
hlt
or
pop
cmps
xor
and
shl
add
(bad)
sub
bound
pop
addr16
cmp
pmaxsw
movups
inc
add
jl
add
jae
inc
cmp
xchg
jno
popa
pop
loopne
jmp
pop
push
iret
movs
icebp
pop
xor
int3
dec
inc
mov
cmp
xchg
mov
cmps
or
mov
jo
jb
mov
mov
fist
mov
test
or
or
mov
push
dec
inc
fst
push
add
mov
push
jl
fmul
inc
jb
inc
mov
dec
or
sub
(bad)
shr
pop
out
adc
sub
add
mov
mov
cmp
dec
mov
icebp
fs
out
jl
cwde
cmp
call
sub
fs
mov
mov
scas
push
push
cmp
hlt
imul
ret
xor
adc
int
fisub
dec
mov
cdq
pop
and
push
pop
and
shl
mov
and
pushf
cmp
xchg
add
adc
dec
xor
imul
inc
out
dec
leave
add
add
sbb
xchg
jae
fcom
adc
scas
jle
dec
push
nop
leave
mov
inc
mov
mov
les
cdq
test
push
pop
stc
test
popa
lock
add
jmp
push
or
sbb
inc
xor
pop
mov
pop
lods
lea
sbb
push
test
mov
pop
mov
xchg
and
bound
cwde
and
ja
lahf
or
push
push
mov
jmp
pop
ins
jecxz
mov
inc
fcom
dec
and
jmp
xlat
daa
stc
add
scas
mov
mov
mov
add
and
jl
das
push
inc
xchg
psubb
push
jbe
ja
sbb
test
iret
mov
test
inc
sub
sbb
inc
leave
mov
or
scas
leave
repnz
imul
push
xor
inc
ret
cmp
mov
sbb
sldt
pusha
xchg
adc
jge
sbb
inc
push
or
scas
or
hlt
xor
jmp
jecxz
into
ja
sbb
adc
adc
add
add
sub
aaa
push
cmp
xchg
add
pop
inc
in
rcl
xor
les
jne
dec
lock
jmp
test
inc
push
fnstcw
jo
xor
and
adc
sbb
cmp
ret
push
push
mov
test
sub
inc
and
inc
add
fist
(bad)
pop
es
adc
push
mov
inc
dec
or
fldenv
xor
sub
add
sbb
pusha
push
adc
iret
fisubr
cmp
rcr
adc
jge
xor
push
dec
jmp
cmp
and
add
jae
imul
or
add
hlt
cmp
xchg
stos
jmp
add
fst
add
sbb
sub
jo
fist
add
jg
pop
xor
mov
rcl
enter
js
cmps
jge
push
push
sbb
rcr
dec
inc
xor
cmp
mov
cmp
sub
adc
mov
das
bound
dec
movs
add
inc
fwait
movs
repnz
push
pushf
pop
pop
dec
push
cdq
movs
mov
les
and
mov
push
or
jb
cmp
je
test
leave
in
adc
sbb
adc
and
imul
nop
fcom
cld
movs
sub
mov
cwde
mov
xchg
pushf
mov
movs
leave
xchg
cmp
mov
lods
mov
cmp
mov
mov
in
mov
mov
add
imul
shl
imul
fsub
imul
loopne
dec
sahf
div
sbb
mov
in
mov
hlt
mov
xchg
dec
mov
xor
push
add
and
push
leave
mov
dec
mov
sub
or
inc
retf
adc
dec
loop
adc
push
fcmovu
ins
adc
and
imul
inc
mov
or
inc
jmp
pop
inc
push
mov
push
and
add
adc
out
push
xor
loopne
mov
xor
add
xor
jnp
push
pop
out
push
jne
movs
adc
pusha
or
fidiv
pusha
jmp
cmp
outs
aaa
or
shl
ins
aas
outs
aas
pop
fsubr
mov
popa
push
pop
add
fcom
popa
pop
lahf
jae
sbb
inc
cs
or
or
jb
out
sub
aaa
or
dec
movaps
jnp
mov
(bad)
les
idiv
cmovge
ficom
gs
inc
push
sub
sub
pop
push
add
pop
xchg
or
mov
push
push
(bad)
retf
in
div
adc
push
or
sub
fcomp
cli
or
loope
mov
ja
add
or
mov
dec
sbb
jnp
mov
add
nop
cmp
test
add
dec
push
outs
add
xor
inc
push
stos
push
jno
push
neg
xchg
rcl
enter
movs
adc
(bad)
daa
dec
push
mov
iret
xor
xor
out
and
jge
inc
lea
mov
or
rcl
mov
cmp
jmp
adc
mov
inc
or
out
shl
cmp
cli
lea
cmp
stc
push
adc
push
jnp
adc
nop
ss
push
js
outs
fld
cli
retf
clc
lea
test
scas
es
adc
cmc
clc
and
(bad)
in
fild
cmp
jnp
mov
test
js
je
add
repnz
dec
mov
rcr
xchg
rcl
inc
mov
cmps
xchg
movs
jb
mov
or
add
mov
(bad)
popa
mov
dec
hlt
mov
or
ret
mov
cmp
push
test
scas
and
push
sub
aaa
add
daa
loop
out
hlt
push
pop
jb
in
dec
sub
dec
xchg
push
cdq
aaa
mov
push
sub
add
jp
mov
cmp
xchg
rol
test
mov
push
inc
or
add
ror
cs
lgdtd
imul
mov
mov
call
dec
push
movs
pusha
shr
cmp
or
scas
(bad)
sbb
popa
or
ja
pop
xchg
xchg
push
inc
sbb
imul
sub
dec
call
inc
and
ret
lock
sub
cmp
mov
mov
ins
push
test
out
popf
xchg
je
ja
mov
jmp
adc
push
push
cmp
out
dec
add
std
loope
jmp
pop
jmp
sub
sbb
and
movs
sub
pop
not
and
pop
or
gs
sbb
xor
pusha
aas
and
sub
mov
dec
inc
sbb
sbb
cmps
xchg
sub
cdq
(bad)
(bad)
jbe
ret
xchg
inc
lock
sub
mov
adc
xor
push
mov
mov
fs
and
xor
stos
mov
and
scas
pop
pop
push
xor
ffree
dec
and
inc
add
pop
dec
inc
adc
push
push
sub
cmc
adc
push
pop
xor
inc
ins
dec
pushf
mov
outs
pop
ficom
add
lods
inc
es
int3
(bad)
outs
push
or
nop
js
sbb
neg
cli
les
xor
lds
gs
xor
fstp
mov
sub
add
test
outs
xor
mov
inc
inc
rol
(bad)
mov
pop
push
jnp
pop
xor
sbb
xorps
ret
add
add
push
jo
adc
add
sbb
xor
adc
sbb
add
leave
out
rcl
test
adc
aas
or
dec
mov
pop
sub
(bad)
(bad)
adc
fwait
(bad)
mov
mov
jne
mov
inc
lds
sub
jl
lods
ret
test
push
in
mov
jns
adc
jmp
mov
mov
cli
lds
daa
fwait
or
fmul
dec
retf
pop
sbb
adc
jb
hlt
sub
inc
out
mov
and
dec
repnz
fmulp
repz
add
adc
cld
retf
push
test
lea
cmp
call
fmulp
mov
xchg
sub
rcr
ja
pop
icebp
popf
mov
pop
sub
(bad)
jmp
add
call
sbb
scas
adc
inc
add
mov
es
call
xlat
and
adc
js
jbe
rol
jnp
mov
call
int3
sahf
sub
jl
int
sbb
inc
dec
xchg
cmp
mov
fcomp
dec
xor
lods
xor
ror
push
push
mov
dec
inc
shl
in
cs
repz
fs
and
adc
lods
fmul
das
inc
in
and
cmp
push
mov
adc
out
or
inc
jp
jg
mov
add
and
dec
outs
cwde
out
icebp
inc
jg
push
iret
(bad)
mov
fnstcw
cmp
lods
iret
cmp
sub
jp
inc
sar
adc
xor
lock
and
iret
xchg
loop
shl
and
mov
cmp
pop
sub
enter
ins
ror
daa
pop
cmp
mov
lea
or
and
cmps
cmp
push
shl
ror
adc
inc
mov
mov
cmp
mov
loopne
add
pop
shl
xchg
xchg
nop
inc
mul
pop
out
and
movs
cmps
imul
pop
and
loopne
push
pop
fcmovu
shl
xlat
rcr
push
inc
stos
leave
les
mov
(bad)
movs
ds
push
or
test
in
sar
icebp
jo
movs
in
push
repnz
lea
sbb
push
into
mov
sub
xor
sub
adc
retf
xor
add
ror
pop
add
lock
mov
xor
shr
mov
dec
adc
mov
int
xchg
mov
sbb
push
mov
xlat
push
jo
inc
add
or
dec
add
adc
fs
leave
mov
aam
sbb
leave
inc
mov
xor
dec
xlat
mul
sbb
ds
dec
pop
inc
jecxz
sar
push
dec
xchg
inc
push
push
mov
scas
inc
mov
(bad)
ss
in
mov
lahf
ret
cmp
leave
cmp
test
mov
inc
adc
ror
inc
xor
js
jmp
dec
adc
ror
nop
push
mov
cmp
xchg
mov
(bad)
mov
ret
xchg
sbb
jns
popa
xchg
jo
mov
out
mov
push
adc
pop
add
inc
js
enter
out
lods
(bad)
or
jmp
pop
daa
cs
inc
mov
and
pop
ret
sub
inc
cmps
pusha
lods
js
bound
js
rol
mov
jo
mov
adc
xchg
out
cmps
es
(bad)
fs
ins
adc
rcr
push
and
dec
fmul
inc
fiadd
test
add
adc
adc
xchg
fs
int3
dec
pop
loopne
ins
cmp
loope
cwde
add
dec
jnp
test
dec
adc
add
pop
repnz
mov
pop
mov
inc
enter
xor
pop
or
adc
sub
sbb
sbb
adc
aaa
mov
add
xchg
dec
or
xor
cmp
dec
push
jns
mov
adc
mov
dec
and
loope
inc
adc
sub
and
xor
or
jmp
cdq
inc
add
fadd
push
clc
sbb
ja
push
arpl
or
adc
je
adc
adc
push
or
mov
movs
push
shl
pop
leave
iret
adc
inc
xchg
movs
cmps
in
fiadd
cmp
inc
ret
(bad)
mov
push
repnz
and
push
xchg
inc
and
les
pop
retf
out
adc
sub
adc
mov
ins
pop
dec
fdiv
bound
fild
sbb
popf
mov
or
sbb
cs
or
sbb
aam
add
adc
fwait
lock
mov
xchg
mov
popa
xor
out
pop
xor
adc
jmp
push
in
ret
inc
jmp
das
cmp
add
pop
fmul
add
cmp
daa
movs
loope
cmp
fdiv
inc
jmp
mov
pop
add
add
push
fld
fld
sbb
pop
es
test
inc
dec
pop
fld
jne
stos
xchg
push
repnz
pushf
lahf
daa
imul
mov
mov
es
push
or
dec
inc
jo
xchg
adc
pop
pop
in
enter
nop
fistp
add
nop
fist
add
dec
sub
inc
mov
xchg
pop
shl
sbb
(bad)
loopne
loopne
pop
inc
dec
lods
loopne
loopne
jb
adc
inc
popf
mov
push
add
daa
mov
add
shl
nop
add
shl
or
xchg
push
push
test
xchg
sbb
pop
mov
sbb
fsub
and
and
fsub
push
test
(bad)
fadd
nop
push
ret
loopne
aaa
(bad)
in
enter
clc
jecxz
add
clc
jecxz
and
and
loopne
pushf
push
std
in
inc
push
sbb
and
pop
stc
sbb
daa
xchg
in
sub
or
pop
mov
out
xor
mov
out
out
sbb
pusha
fstp
or
out
add
add
lmsw
in
out
out
sbb
cmp
out
out
push
jecxz
xlat
fs
mov
dec
and
(bad)
cmp
xor
and
inc
dec
sbb
inc
call
inc
call
enter
or
gs
add
add
jb
xor
and
dec
pop
and
ins
jb
sbb
jne
sbb
aaa
jmp
pop
outs
cmp
in
(bad)
popa
aaa
inc
jmp
pusha
jmp
jo
cmp
or
jo
jmp
repnz
jae
ja
jmp
add
push
ins
jmp
jmp
add
push
ins
jmp
push
enter
push
jmp
das
nop
retf
push
in
and
in
je
inc
push
inc
pop
je
js
test
js
in
outs
mov
add
xchg
or
or
movs
fwait
(bad)
and
dec
sbb
in
adc
dec
inc
cmp
nop
add
sbb
out
daa
movs
out
in
enter
movs
out
push
loop
add
cmp
sbb
aaa
mov
mov
or
outs
and
add
pop
(bad)
out
(bad)
out
inc
push
inc
pop
(bad)
out
test
add
test
push
repz
cmp
cmps
mov
inc
dec
sbb
fdiv
sbb
adc
mov
(bad)
lock
jp
test
nop
adc
pop
clc
icebp
clc
icebp
leave
add
add
icebp
mov
cmp
pop
mov
icebp
stos
or
nop
das
push
leave
test
adc
leave
add
xchg
nop
jb
repnz
cld
bnd
xchg
js
or
leave
add
sbb
xchg
mov
hlt
sbb
enter
lahf
and
stos
in
inc
cmc
inc
cmc
or
(bad)
sub
sub
repz
test
add
pop
neg
inc
xor
jb
neg
inc
test
push
sar
push
neg
cmp
sbb
mov
dec
dec
or
mov
push
sub
add
nop
add
ins
clc
mov
enter
mov
inc
push
add
je
or
add
add
add
movs
stc
movs
stc
add
test
test
mov
nop
xchg
sbb
xchg
aaa
enter
mov
add
add
cli
sar
pop
xor
lods
lods
shl
outs
and
loopne
mov
enter
fdivr
fdivr
adc
add
mov
or
test
xor
aas
in
enter
clc
cld
cmp
jb
clc
cld
clc
cld
inc
push
cdq
add
loopne
push
enter
jae
repz
jb
in
adc
adc
cdq
add
add
(bad)
mov
adc
cli
std
bound
dec
das
ja
cmp
in
mov
xchg
or
in
enter
and
retf
stos
and
mov
mov
nop
imul
pop
xor
mov
daa
fwait
or
sar
or
and
push
or
jp
inc
retf
pop
inc
push
xor
sub
nop
adc
dec
add
add
les
add
push
push
repz
dec
das
in
repnz
push
add
push
repnz
push
add
sbb
enter
enter
mov
inc
xchg
adc
pop
inc
mov
mov
add
pushf
nop
retf
int3
int3
js
push
sub
adc
inc
add
mov
aas
test
sbb
add
add
push
lods
mov
lahf
shl
pop
enter
add
xchg
inc
sbb
ja
jns
jmp
das
push
inc
add
sub
pushf
add
add
add
dec
es
push
add
aam
enter
in
add
push
fistp
in
cmp
cmp
stos
outs
mov
sbb
and
and
jb
adc
push
(bad)
dec
sbb
cmps
jmp
and
sbb
or
enter
js
and
js
fmul
nop
fsub
sbb
sbb
add
sbb
mov
jb
dec
loopne
mov
or
mov
or
or
in
enter
or
gs
push
out
in
cmp
jg
or
add
inc
pop
cmp
or
mov
and
and
or
or
or
and
shl
lahf
add
shl
sbb
push
or
fwait
out
in
jb
sbb
mov
or
adc
xchg
ret
push
push
dec
cmp
jb
je
je
push
mov
sub
enter
push
push
cmp
pop
add
shrd
xchg
push
loopne
(bad)
jge
dec
push
cmp
cmp
xor
test
pusha
popf
inc
xchg
or
add
pop
lea
lods
adc
inc
dec
sub
and
add
xchg
mov
retf
(bad)
(bad)
mov
inc
fs
fist
pop
and
fadd
and
or
and
xchg
and
and
adc
xor
pop
or
lods
shr
add
call
leave
call
sbb
iret
or
or
aam
aam
xchg
sbb
mov
lds
adc
sbb
or
or
fs
enter
adc
add
dec
dec
hlt
adc
retf
aam
adc
add
add
shl
sbb
add
sbb
inc
dec
cmp
and
adc
and
adc
enter
push
add
add
push
fs
pushf
nop
and
add
add
add
nop
pop
nop
pop
inc
xor
jb
pop
sbb
cdq
or
and
adc
mov
push
add
arpl
push
xchg
pop
pop
mov
add
sbb
sbb
inc
push
add
and
daa
in
and
adc
inc
sbb
xor
push
sbb
and
call
cmp
xor
add
in
sbb
sbb
sbb
sbb
xchg
dec
sub
clc
sbb
enter
sbb
jb
in
sbb
sbb
cdq
add
cmp
dec
test
adc
(bad)
mov
sbb
dec
push
and
mov
and
aam
in
dec
sbb
ret
dec
arpl
dec
xor
sub
mov
jb
in
push
cwde
push
sbb
cwde
push
cwde
push
dec
enter
inc
sbb
and
inc
out
add
push
cmps
popf
add
xchg
inc
mov
cmp
xchg
dec
pop
pop
movs
pop
mov
dec
in
inc
sub
das
mov
cmp
jb
aam
aam
dec
sbb
and
in
sahf
movzx
pusha
mov
and
jb
in
add
push
sbb
pop
es
fs
movs
or
mov
and
in
xchg
es
xchg
pop
and
inc
push
adc
xor
enter
xor
xor
cmps
sbb
add
push
je
push
jb
sbb
and
adc
imul
nop
adc
sub
enter
and
xor
jb
and
xchg
sbb
cmp
xor
dec
add
adc
push
add
and
sbb
cwde
sub
dec
enter
add
das
jae
es
and
mov
and
pushf
in
or
pushf
je
adc
in
pop
push
xchg
push
and
xchg
pop
and
xchg
pop
and
adc
daa
xchg
add
xor
scas
mov
xchg
fsubr
fsubr
cmp
jns
fsubr
movs
enter
movs
les
inc
inc
ret
inc
or
repnz
jbe
xchg
sub
add
push
lock
sub
add
push
lock
fsubr
or
add
rol
jb
in
sub
sub
cdq
add
and
mov
and
in
or
push
or
cmp
pop
daa
add
add
adc
sub
cmp
jb
sub
sub
nop
add
add
pop
daa
cmp
jb
push
sub
pushf
add
jo
mov
inc
mov
inc
pop
sub
sar
outs
pop
add
add
popa
sub
cmp
jb
sub
inc
push
cdq
mov
(bad)
xor
or
pop
sbb
loope
mov
daa
test
pop
inc
dec
sub
adc
int3
and
int3
nop
das
push
or
inc
push
xor
mov
nop
adc
pop
shl
shl
leave
add
add
xor
add
and
sar
push
push
fnstenv
and
inc
push
clc
xor
xor
xor
adc
inc
push
aam
xor
outs
sbb
mov
xor
test
in
add
add
push
adc
pushf
stos
push
daa
cmp
push
jg
xor
xor
add
pop
xor
jb
pop
or
jg
xor
sbb
adc
push
loop
loope
pusha
aas
inc
add
add
xor
sbb
inc
es
cld
inc
xor
push
dec
sbb
movs
les
and
inc
dec
les
les
ret
sbb
adc
xor
or
fnstenv
jb
in
clc
aaa
clc
aaa
cdq
add
add
aaa
fsub
in
fsub
aaa
ret
ret
sbb
arpl
inc
addr16
add
sub
xor
jb
sub
fadd
enter
cmp
inc
cmp
add
pusha
cmp
dec
sbb
cmp
xchg
adc
loopne
cmp
cmp
and
mov
and
js
pop
xor
je
inc
push
or
or
mov
add
xchg
test
mul
in
sar
cdq
add
add
cmp
test
inc
push
and
push
aad
nop
adc
pop
hlt
cmp
enter
and
cmp
or
jns
cmp
sub
sub
in
cmp
mov
mov
or
aas
adc
push
dec
js
and
pusha
js
inc
addr16
inc
enter
pusha
inc
pusha
inc
and
enter
inc
cmps
or
dec
inc
push
inc
push
sbb
and
xchg
inc
xchg
inc
inc
push
nop
or
jb
inc
popf
inc
ja
add
push
mov
add
push
mov
add
test
adc
scas
or
cld
inc
scas
xchg
pop
and
inc
cld
inc
scas
xchg
pop
and
or
mov
inc
dec
jne
movs
push
cli
push
cmps
sbb
icebp
inc
adc
pop
inc
dec
adc
inc
dec
enter
push
es
pop
pop
cmp
dec
push
stos
jo
adc
out
inc
sbb
cmp
push
sbb
inc
dec
cmp
inc
enter
ins
ins
nop
mov
and
push
nop
add
daa
dec
inc
push
or
push
add
add
leave
push
inc
jne
inc
dec
sbb
xchg
dec
and
and
xchg
dec
test
scas
sbb
rol
pop
pop
push
sub
test
push
add
test
nop
push
leave
enter
repnz
push
nop
inc
inc
mov
adc
jno
pop
pop
xor
test
pop
inc
pop
or
dec
nop
adc
pop
add
dec
enter
add
or
and
dec
call
es
sbb
inc
push
cmp
nop
or
push
jb
push
dec
and
adc
dec
dec
outs
push
sub
dec
enter
sub
or
push
push
dec
sbb
mov
lea
mov
mov
outs
or
dec
mov
jb
dec
xor
push
and
and
sbb
mov
and
inc
fmul
cmp
xor
push
leave
or
dec
cmc
push
add
push
add
adc
enter
push
push
cld
push
sub
rol
or
ss
mov
push
(bad)
add
push
fs
add
inc
jb
mov
add
test
test
dec
sbb
movs
push
and
and
movs
push
pop
add
push
jns
or
push
jns
cmp
in
push
in
push
nop
and
add
shl
push
pop
cmp
jo
inc
icebp
push
inc
dec
sbb
adc
adc
pop
adc
and
push
add
and
push
add
in
push
xor
and
enter
nop
enter
add
add
jb
in
pop
pop
pop
cmp
inc
xor
call
cdq
or
retf
sar
sub
cmps
int3
push
cdq
shl
fs
pop
aam
pop
xchg
mov
mov
adc
loopne
mov
call
pop
arpl
ja
lods
or
pop
pop
hlt
mov
jmp
movs
xor
nop
or
and
arpl
loop
imul
pop
jae
or
fldenv
xor
ret
mov
mov
mov
pop
push
sub
and
ins
cmp
or
call
mov
pop
inc
call
or
and
push
add
or
fs
daa
dec
ja
ds
cmp
scas
push
jg
es
dec
push
cwde
pop
cld
cld
inc
dec
fisttp
imul
lock
in
mov
das
add
adc
retf
mov
pop
sbb
push
pop
add
add
sub
pop
jg
aaa
xor
aad
in
clc
pop
mov
in
or
sbb
cmp
mov
cwde
popa
jae
in
pop
xlat
sub
and
adc
scas
or
or
test
lahf
or
jl
ficomp
test
xor
rol
cmps
add
mov
retf
test
dec
xchg
fimul
repnz
loopne
fsub
sub
loop
adc
pusha
cmps
repnz
cmp
push
inc
out
push
call
xchg
dec
in
je
jmp
push
ds
xchg
in
test
xchg
dec
in
out
mov
out
mov
lock
stc
push
nop
or
xchg
sub
jmp
inc
hlt
pushf
cmc
ja
lahf
retf
je
movs
mov
test
clc
repnz
stc
mov
cli
mov
cld
sti
lock
repnz
dec
pop
(bad)
in
mov
scas
lods
adc
cmp
cmps
mov
adc
and
test
in
loopne
or
mov
push
fsubr
out
mov
push
aam
add
bound
mov
test
test
and
jmp
int3
cwde
add
cmp
fisttp
fcomip
cmp
add
movhlps
adc
repnz
or
adc
sub
pusha
adc
cmps
repnz
fmul
stc
push
mov
and
in
sbb
or
cmp
bnd
or
es
sbb
ds
scas
inc
adc
dec
in
stc
clc
dec
dec
xor
adc
shl
push
push
ja
adc
push
push
ds
dec
pop
mov
push
adc
ins
inc
inc
jo
push
push
ds
inc
fs
push
test
and
cmp
movs
jl
cmp
cmp
dec
in
stc
rol
mov
push
ds
aas
nop
mov
and
inc
retf
test
pusha
and
jl
lahf
adc
pop
dec
out
push
push
pushf
lahf
retf
js
mov
pop
out
rcl
movs
daa
ja
or
arpl
cwde
inc
lods
hlt
sub
or
mov
sub
fcom
test
pop
mov
add
iret
sti
mov
cmp
sbb
dec
sahf
shr
imul
xchg
push
les
lahf
push
out
int3
pop
ss
and
das
arpl
lahf
scas
xor
in
ss
div
sbb
add
push
jbe
add
pop
adc
push
out
cmp
and
sub
push
inc
outs
xchg
icebp
sub
mov
cs
inc
not
and
iret
or
or
outs
sbb
jb
mov
ss
jmp
mov
and
js
pop
add
cmp
mov
adc
arpl
add
dec
es
in
scas
mov
fwait
adc
add
out
ins
or
xchg
iret
jnp
stos
push
pop
arpl
iret
repz
js
xchg
jmp
cld
popa
add
mov
imul
cmp
sti
sbb
fstp
mov
sub
mov
jge
shl
or
add
inc
cmp
sub
adc
test
lock
push
pusha
aad
jnp
sar
arpl
cmp
push
or
enter
sub
ins
iret
enter
push
ret
jg
sbb
add
cs
loop
dec
mov
adc
mov
pop
push
sbb
cmp
daa
das
(bad)
ror
test
cmp
add
xor
movs
pop
shl
push
and
test
ins
adc
test
mov
sub
pushf
sub
xor
into
test
lock
xor
or
sbb
pusha
es
je
pusha
outs
push
inc
and
inc
lods
push
movs
jb
loopne
adc
rol
cmps
mov
ret
adc
ror
addr16
add
daa
pop
fld
and
sbb
jnp
sub
push
out
mov
imul
jo
xor
aas
add
sub
pop
inc
test
(bad)
mov
ja
jne
cmps
movs
adc
loop
pop
mov
mov
xor
movs
pusha
stos
adc
jnp
inc
(bad)
dec
sbb
fbstp
dec
push
lods
shl
in
xor
fisttp
in
sub
cwde
in
loopne
add
add
push
mov
shl
add
imul
add
and
cmp
cmp
das
inc
mov
daa
in
movs
push
push
lock
das
out
xlat
es
js
mov
int
fisub
das
inc
jo
test
add
mov
push
add
inc
pandn
push
mov
dec
adc
add
fbld
test
and
out
neg
jl
push
sbb
loopne
xchg
test
add
popa
out
stos
in
rcl
pop
sbb
loopne
adc
pop
lods
xchg
(bad)
retf
xchg
or
dec
(bad)
mov
or
mov
imul
jne
or
sbb
je
jae
dec
sti
sub
sub
lock
leave
dec
in
in
add
add
sbb
add
loope
push
out
in
push
cmp
add
dec
in
div
test
sbb
jne
mov
pop
retf
test
test
shr
or
xor
inc
icebp
pop
ins
push
cmp
ja
jno
xchg
nop
mov
ret
add
dec
pop
mov
ret
adc
mov
pop
mov
ret
mov
mov
imul
lods
cld
cmp
jg
add
sub
dec
leave
in
add
push
push
mov
fdivr
jne
add
in
jno
jnp
ja
test
int3
sbb
lea
mov
pop
and
xlat
cmps
jno
add
sbb
lahf
cs
pusha
cmp
iret
dec
xor
and
test
mov
pop
xchg
or
inc
enter
ds
scas
pusha
rol
ja
fcmovb
mov
push
push
inc
iret
and
mov
cmp
jg
add
inc
lea
cmps
shld
inc
rol
rcr
and
rcr
js
ret
push
cwde
popa
and
and
(bad)
xchg
push
push
sub
loopne
or
inc
ror
mov
test
push
xor
repnz
imul
xor
push
test
sbb
cmps
rcr
adc
or
shl
(bad)
xor
(bad)
xchg
adc
pusha
les
(bad)
jmp
xchg
or
add
mov
or
idiv
sub
add
movs
shr
sub
inc
add
ds
mov
or
dec
push
or
or
mov
xchg
out
cmc
adc
inc
push
(bad)
outs
sub
mov
test
push
adc
or
pop
or
mov
add
inc
cdq
xchg
mov
movs
stc
xor
add
xor
int3
sub
jg
adc
ins
test
enter
mov
js
mov
outs
popa
jbe
mov
pop
mov
inc
ins
adc
in
fistp
add
cdq
push
inc
test
mov
test
and
dec
nop
sub
ins
ss
add
pop
dec
pop
push
adc
add
inc
mov
fdiv
jae
out
lock
loopne
js
fldcw
push
cwde
jne
mov
jae
lea
cmp
mov
jle
fist
pop
je
dec
outs
in
jnp
clc
cmp
cmp
fadd
les
fdivp
mov
xchg
mov
mov
(bad)
pop
or
adc
out
call
dec
cmp
outs
jge
jns
adc
push
cmp
(bad)
cmps
push
mov
test
test
xchg
jle
add
pop
cmp
dec
mov
xor
sub
jp
push
xor
or
out
pop
je
dec
add
frstor
push
or
mov
sbb
xchg
daa
mov
call
mov
jne
adc
jne
aas
ror
dec
cmp
je
sbb
lea
test
leave
fadd
dec
cmp
jmp
stos
(bad)
aad
add
sti
pop
xor
cld
sbb
push
mov
or
xchg
and
jmp
dec
mov
enter
add
ret
enter
lock
mov
push
mov
(bad)
jnp
adc
mov
sbb
inc
add
push
adc
add
loop
mov
push
mov
cmps
and
jo
cmp
or
mov
pop
shl
enter
push
and
inc
test
shl
ins
jmp
mov
inc
in
add
(bad)
shr
pop
adc
in
push
(bad)
pop
arpl
add
test
(bad)
pop
push
mov
js
xchg
cmp
clc
pop
xchg
add
ror
xor
pop
jmp
pop
mov
sub
ss
adc
push
mov
push
es
mov
inc
pop
sysret
push
adc
inc
jo
mov
xor
jo
das
adc
ins
test
gs
or
das
adc
dec
jg
aam
sub
push
ins
mov
or
inc
shl
inc
clc
outs
dec
js
pop
cmp
add
add
push
sub
shr
adc
inc
or
or
nop
push
pop
push
xor
daa
xchg
stos
sbb
rcl
push
inc
sub
movs
repz
add
push
cmps
retf
es
xchg
sub
xchg
xchg
jl
dec
inc
mov
push
xor
sbb
enter
add
jae
and
pushf
cmp
jae
xor
mov
(bad)
add
mov
inc
jmp
inc
push
cld
aaa
xor
nop
sbb
push
shl
fistp
fnsave
inc
shr
int
adc
sbb
lock
ret
fcom
mov
pop
scas
sbb
popf
cmps
add
fsubr
test
dec
inc
loop
and
std
or
fadd
mov
jno
xchg
jno
shl
push
or
add
sbb
test
stc
sbb
pusha
fcom
jno
movs
fmul
add
rol
jmp
adc
pop
lea
and
inc
fisubr
jge
and
(bad)
cmp
cmp
in
dec
or
fsub
leave
sbb
in
clc
mov
addr16
cmp
je
sbb
dec
out
js
pop
aam
mov
xchg
add
jnp
adc
dec
inc
aas
enter
fiadd
xor
push
mov
cs
in
aaa
pop
js
or
push
sbb
mov
jmp
(bad)
lods
xor
pop
jp
xor
push
or
push
icebp
add
(bad)
push
adc
not
jmp
cmps
retf
jl
cmp
cmp
cdq
mov
inc
fmul
xor
test
fld
inc
outs
xchg
push
dec
cmp
and
and
daa
inc
stos
xchg
push
jecxz
jle
test
mov
inc
bound
xchg
pop
mov
xchg
mov
and
inc
add
dec
cmp
popa
inc
xor
add
(bad)
call
inc
mov
hlt
add
imul
sbb
in
rol
add
sbb
ror
jle
hlt
shl
inc
es
sbb
dec
nop
cmp
inc
aas
or
sbb
sar
pop
jecxz
sbb
sahf
sahf
dec
lock
and
mov
lahf
mov
adc
mov
mov
mov
or
cmp
dec
aam
add
iret
and
adc
lds
leave
mov
imul
(bad)
cli
xor
cli
sar
cmp
add
sbb
addr16
dec
pop
add
loope
jo
mov
leave
jne
nop
cmp
adc
jno
test
stos
(bad)
les
adc
pop
test
push
enter
cld
lock
test
and
arpl
out
sub
les
xor
les
sbb
cmp
aad
xchg
adc
call
xor
dec
jae
mov
rol
lahf
sub
arpl
sbb
mov
fs
ret
add
sub
mov
(bad)
cs
and
mov
imul
scas
(bad)
mov
(bad)
loop
pop
jno
sub
cwde
ins
outs
outs
and
adc
xor
or
add
pop
push
cmp
fild
push
lea
xor
test
inc
sbb
dec
sub
clc
aas
jmp
xor
or
sub
sbb
add
mov
ret
outs
inc
cmp
xor
push
xchg
push
test
ror
dec
iret
lea
sub
push
inc
outs
mov
imul
xor
xchg
add
mov
mov
fsubr
push
sbb
sub
test
outs
jbe
pusha
arpl
sbb
aad
in
adc
fcmovnb
adc
cmp
sahf
enter
mov
jmp
fs
cs
hlt
sbb
leave
adc
cmp
mov
xor
fcomip
cmp
dec
gs
iret
test
and
xchg
movs
mov
adc
inc
mov
xchg
cmp
je
mov
or
push
loopne
push
cmps
enter
push
cli
dec
sub
aas
mov
mov
cld
sahf
pop
xchg
adc
test
xchg
repz
test
lahf
push
cmp
sbb
xchg
cmp
inc
bound
(bad)
loopne
or
mov
jp
loop
cmc
add
sbb
ins
adc
or
call
mov
(bad)
loopne
or
nop
fsub
mov
jbe
imul
cmp
out
dec
sti
(bad)
sub
imul
cmp
(bad)
out
ret
mov
lods
sti
add
in
xchg
push
adc
add
movs
in
dec
adc
nop
sbb
cmp
mov
pop
stc
es
jb
pop
push
jo
pop
xchg
ss
stos
mov
mov
mov
push
cmp
popf
aas
cmp
or
sar
test
push
aas
mov
mov
lock
adc
pop
dec
lds
ja
push
lock
ins
in
(bad)
in
loopne
ss
es
(bad)
ins
xor
in
rcr
mov
ss
add
xchg
and
xchg
and
call
ja
lds
mov
add
repnz
mov
stc
add
bound
mov
add
jg
outs
ss
icebp
add
sub
mov
xor
cmp
js
icebp
xchg
leave
call
or
or
pop
gs
or
push
enter
clc
push
sar
loopne
(bad)
mov
jmp
jns
add
sub
push
nop
scas
push
call
mov
(bad)
pop
mov
movs
xchg
push
fadd
mov
mov
sar
add
add
add
xor
sbb
retfw
nop
inc
icebp
pop
xchg
pop
repnz
jnp
lea
rcl
add
bound
xor
in
add
adc
imul
mov
jne
inc
ins
adc
in
cwde
ror
inc
push
hlt
mov
mov
das
or
mov
mov
repnz
pop
add
pop
leave
aaa
jmp
lea
rol
and
mov
sub
xor
dec
sbb
add
adc
invd
cmp
mov
pop
lea
xor
and
fistp
xchg
lods
lock
adc
ds
(bad)
mov
hlt
aaa
cli
hlt
nop
dec
fs
ja
shr
sbb
sub
test
mov
or
push
cmp
lods
mov
jecxz
pop
jle
mov
inc
call
les
(bad)
dec
push
inc
and
inc
cmp
(bad)
hlt
loope
pop
or
jne
push
adc
mov
xchg
jmp
(bad)
sbb
retf
das
xchg
leave
jge
xor
hlt
inc
xchg
and
inc
cmps
(bad)
popf
inc
jecxz
nop
push
push
inc
mov
cdq
ret
push
aam
xor
je
das
push
aaa
sbb
mov
push
or
or
cmp
call
gs
jle
inc
movs
jnp
xor
pop
add
jbe
pop
dec
adc
pusha
jmp
mov
pusha
inc
mov
and
movs
xchg
xchg
nop
adc
dec
pop
in
int
xchg
sub
jo
mov
test
pop
call
sar
in
mov
lods
aas
adc
fcom
jl
mov
sahf
jbe
sbb
out
add
dec
(bad)
arpl
shl
rcl
fbstp
aam
dec
pop
xchg
add
add
jb
mov
add
jmp
dec
add
add
cmp
xchg
adc
imul
xor
sbb
push
ror
inc
(bad)
ins
fs
mov
jne
push
and
ins
mov
push
sbb
jg
xchg
add
sbb
sbb
sbb
test
mov
ror
sbb
mov
xchg
fmul
fisubr
shl
imul
pusha
push
inc
out
stos
icebp
sbb
ss
or
sub
jge
adc
dec
test
shl
(bad)
stos
scas
lods
aas
mov
mov
imul
(bad)
rcr
add
(bad)
lea
inc
movs
push
(bad)
daa
out
rol
add
mul
dec
in
or
ins
lds
push
mov
into
pop
enter
mov
(bad)
cmp
(bad)
mov
jo
push
mov
pop
loope
scas
adc
addr16
and
xchg
cmp
sbb
pushf
sbb
jge
sbb
add
cwde
mov
cwde
ins
sbb
addr16
(bad)
in
pop
and
sbb
test
fcomp
or
aaa
rcl
punpckhdq
sti
in
add
loope
jae
or
adc
mov
push
enter
mov
pop
add
ret
push
loope
adc
pop
jns
xor
lods
daa
pop
loop
cmp
lea
pusha
adc
mov
add
add
je
xchg
sbb
xchg
add
sub
sbb
push
cmp
pop
nop
push
adc
inc
sbb
cmp
and
sub
xchg
test
in
xor
jae
mov
test
push
xor
stc
clc
cld
leave
inc
dec
shl
xchg
push
adc
sbb
daa
cmp
(bad)
cli
xchg
pushf
test
loope
jmp
or
push
sbb
nop
jp
sbb
xchg
inc
inc
mov
and
push
daa
sub
push
or
and
jnp
aam
loopne
xor
pop
or
push
push
dec
xchg
outs
movs
movs
push
leave
push
xchg
xchg
scas
add
push
outs
jae
gs
fisub
aam
add
rol
iret
or
not
out
cwde
inc
sbb
push
xor
cdq
cmps
mov
or
pop
or
mul
shl
mov
mov
leave
jo
dec
mov
mov
pop
dec
or
or
add
inc
fs
fadd
mov
retf
pop
sahf
mov
adc
out
xchg
popa
push
sbb
xchg
daa
push
add
sub
push
pop
push
test
cmp
fisttp
and
call
inc
adc
xchg
and
ds
add
data16
jno
outs
push
pop
adc
inc
sbb
add
(bad)
mov
or
inc
mov
xchg
pushf
xor
jecxz
xchg
mov
or
jno
hlt
mov
or
add
jne
dec
cs
cmps
lock
mov
in
adc
jge
pusha
mov
arpl
cmp
adc
inc
add
je
pop
pop
dec
push
sub
fs
pop
stos
cmps
xchg
or
cs
xchg
cmp
xor
mov
dec
inc
mov
imul
adc
test
das
cmps
xor
adc
idiv
sbb
test
sbb
pushf
sti
push
cmps
movs
sti
dec
jmp
mov
push
xor
rol
sahf
push
dec
add
test
or
sbb
sub
and
sbb
mov
adc
and
push
add
pop
dec
add
jo
add
jp
sbb
cmp
pop
pop
or
or
sub
test
out
mov
sahf
sub
mov
sbb
or
sbb
mov
push
push
inc
cmps
dec
das
or
mov
or
inc
mov
jb
add
add
mov
mov
lahf
mov
cdq
cmp
push
ret
add
aas
cmp
cmps
sbb
scas
add
imul
rol
into
jle
jmp
pop
clc
cmp
add
jne
retf
adc
or
shr
out
cmp
(bad)
fstp
ss
fisttp
rol
push
add
lea
pop
sbb
inc
clc
add
xchg
add
mov
push
add
inc
stos
iret
ret
xor
(bad)
adc
in
in
fcom
ds
fs
mov
movs
mov
cmp
(bad)
jmp
pop
mov
cmp
aas
push
popa
jb
cmp
repz
iret
fsubr
cli
or
sub
cmp
jns
sahf
lods
mov
out
in
add
in
adc
adc
or
bound
test
inc
pop
enter
fdivr
ss
bnd
jo
retf
inc
repnz
cmp
in
ror
clc
xor
cwde
xor
or
aam
push
nop
pop
enter
enter
in
cmp
cmp
or
inc
cmp
inc
push
xor
(bad)
hlt
test
inc
push
xor
adc
aaa
xchg
inc
mov
mov
outs
cmp
and
and
mov
push
lock
addr16
xor
out
nop
out
mov
fcomp
cmps
and
push
and
ss
(bad)
pop
dec
inc
stos
jmp
nop
lds
add
out
xchg
in
add
add
push
xchg
imul
out
nop
mov
or
sbb
je
aam
adc
pop
imul
mov
jmp
add
cmp
jae
das
cmc
ins
cmps
dec
and
or
sbb
clc
mov
mov
xchg
jle
ja
adc
je
dec
sub
or
mov
inc
or
xchg
fwait
loopne
push
repz
sar
mov
adc
add
inc
inc
nop
push
add
or
test
rcl
pushf
jb
add
aam
sbb
mov
jg
clc
mov
push
jge
popa
in
inc
inc
cmp
xchg
xor
fsubr
inc
not
nop
adc
pop
push
mov
in
les
jbe
lahf
jo
push
or
or
xchg
cmovb
xor
mov
test
test
ins
gs
adc
daa
pop
cmp
mov
xchg
sbb
movlps
add
add
and
cmps
push
cmp
push
inc
ds
pop
add
push
mov
test
inc
push
ins
inc
pop
sbb
lea
xchg
sub
sub
push
jnp
sub
daa
lds
mov
out
adc
pop
int3
inc
es
adc
test
mov
push
dec
mov
je
inc
jb
imul
fld
pop
xor
or
push
mov
and
cmp
inc
xor
xor
(bad)
cwde
push
jb
or
add
add
jns
(bad)
sbb
add
ins
(bad)
cmp
out
or
mov
push
aam
in
mov
nop
les
xor
pop
push
mov
pushf
cwde
sbb
test
inc
cmp
(bad)
ja
rcr
sub
cmp
push
lods
and
xor
sub
or
xchg
es
outs
leave
and
inc
xor
xchg
push
adc
xchg
lea
sbb
cmps
add
add
push
ja
mov
fld
les
add
pop
fistp
in
or
dec
enter
mov
je
jae
sub
add
jae
mov
push
and
or
fcomp
xchg
movhps
arpl
push
pop
mov
loope
cmp
pop
add
add
or
push
push
sbb
pop
add
dec
or
adc
leave
pop
jo
pop
mov
or
ins
xchg
dec
or
pop
sub
mov
loopne
lea
or
mov
les
xchg
mov
push
outs
jb
enter
mov
xor
or
or
or
mov
outs
or
or
sar
retf
or
lock
add
retf
push
fbld
test
nop
cdq
pop
ficomp
mov
add
popa
or
dec
and
add
scas
inc
pushf
pop
pop
adc
mov
fld
push
loopne
pop
mov
(bad)
icebp
imul
or
sub
inc
inc
mov
pusha
mov
adc
sbb
jg
movs
shl
and
jmp
call
mov
loope
(bad)
int
sub
test
shl
xchg
dec
mov
adc
xchg
mov
hlt
jae
inc
xor
push
xor
xor
sub
lock
popa
ss
mov
or
sub
mov
mov
push
or
jmp
in
push
loop
leave
add
pop
jl
mov
jmp
aaa
mov
or
pop
mov
push
push
or
test
cmps
fmul
and
dec
in
call
fwait
rcl
rol
cmp
cmp
stc
add
icebp
pusha
dec
ret
jnp
add
adc
jnp
add
retf
dec
je
cli
rol
cmp
push
sub
push
inc
cmp
sbb
xor
pop
inc
xchg
cmp
inc
or
(bad)
cmps
xor
jle
cmps
dec
mov
jbe
mov
ins
cs
lock
rcl
xor
cmp
(bad)
pusha
mov
adc
pop
push
sub
out
mov
int3
mov
inc
adc
mov
stc
pop
jb
lods
test
mov
sbb
xor
cwde
pushf
cmp
aad
mov
pop
push
mov
test
add
mov
dec
aam
push
pop
pop
shl
jns
mov
mov
aaa
mov
(bad)
and
adc
sub
mov
popw
or
push
xchg
xor
or
add
jmp
push
(bad)
pop
add
jl
arpl
je
and
and
or
xor
pop
dec
imul
add
sub
mov
cs
add
push
push
inc
push
sbb
sub
hlt
mov
inc
or
add
add
inc
dec
add
and
add
adc
mov
stos
int3
push
push
or
shr
sub
cwde
sub
and
fild
sbb
cmp
mov
pusha
sar
retf
arpl
fisubr
mov
dec
ins
xchg
movs
leave
pushf
shr
in
and
inc
and
daa
enter
dec
sbb
in
pop
nop
xor
(bad)
lods
or
mov
sbb
lods
or
jp
mov
cmp
and
call
mov
and
mov
out
lods
imul
push
adc
lea
cld
outs
dec
call
jo
mov
fimul
dec
push
push
mov
or
adc
shl
in
repnz
cdq
mov
sbb
push
jnp
jge
call
test
stos
or
or
jbe
adc
ret
call
popf
cmp
mov
jmp
jbe
mov
dec
xchg
test
jl
mov
scas
xchg
enter
in
js
sbb
int
in
mov
in
imul
sub
xor
test
mov
sub
sub
cmp
or
and
dec
adc
jecxz
lock
cmps
movs
bswap
movs
jo
aaa
xchg
test
mov
add
bound
ret
cld
cmp
js
fidivr
adc
mov
retf
aad
or
push
hlt
pop
mov
sbb
push
or
sar
xor
and
push
cs
inc
(bad)
pop
cdq
(bad)
cmp
mov
mov
or
adc
or
pop
cmps
mov
cmp
or
xchg
adc
add
aas
fs
adc
mov
das
repnz
xchg
fs
mov
cld
jbe
inc
cmps
lds
(bad)
jne
push
mov
ins
mov
xor
test
xchg
pop
jmp
jne
bswap
test
sub
pop
jns
xor
sbb
popa
in
idiv
call
imul
daa
fmul
test
push
ds
push
sbb
jo
inc
and
nop
cmps
and
sbb
push
inc
sub
push
add
sub
xchg
jle
dec
mov
and
cdq
cmc
shl
and
or
movs
and
cmp
lds
lds
int3
inc
inc
ds
neg
push
mov
xchg
push
pop
popf
or
or
lods
mov
ror
pop
rol
jge
aad
jl
pusha
jne
div
dec
mov
rcr
push
xchg
push
dec
inc
jne
shr
push
sbb
mov
xor
inc
(bad)
test
jmp
push
adc
or
cmp
push
push
ja
mov
add
je
(bad)
stc
inc
push
test
dec
enter
sbb
shl
push
push
push
mov
call
jle
jg
xchg
xchg
xchg
xchg
popa
bound
xchg
xchg
xchg
xchg
gs
xchg
xchg
imul
xchg
ins
outs
outs
push
xchg
xchg
xchg
xchg
push
push
push
push
xchg
xchg
xchg
xchg
push
push
push
pop
xchg
xchg
xchg
xchg
pop
pop
pop
pop
lahf
xchg
xchg
xchg
pop
pop
pop
inc
sar
aaa
sbb
push
add
cs
and
in
out
adc
sti
push
bound
or
test
mov
push
fdivrp
lods
dec
mov
es
push
movs
mov
ins
ficomp
enter
test
test
loopne
fnstenv
jns
pop
pop
sbb
fwait
push
add
and
addr16
mov
adc
nop
xlat
sub
and
cmp
mov
mov
jns
aaa
cld
mov
pop
aaa
lahf
dec
movs
dec
jb
mov
inc
clc
retf
mov
(bad)
sbb
adc
sbb
xlat
sbb
or
rol
add
mov
inc
cli
mov
mov
sahf
pop
add
out
push
fs
pop
sub
je
rcr
bts
leave
cmps
sub
xchg
ins
ret
mov
xor
push
nop
out
push
cld
dec
nop
je
in
or
mov
add
push
pop
inc
sub
daa
pop
rol
and
xlat
push
rcl
addr16
nop
and
in
pusha
or
das
lds
dec
leave
mov
cmps
js
add
inc
pop
cmps
pusha
xchg
aaa
sbb
ret
je
or
push
or
adc
loope
push
push
pop
hlt
cs
or
bound
dec
imul
mov
and
sti
cmp
shr
test
sub
add
stc
lock
fs
or
xchg
sti
push
jnp
xchg
aaa
or
lock
xlat
xlat
sub
adc
or
inc
sub
inc
xlat
mov
(bad)
sbb
dec
bound
ret
sbb
inc
outs
outs
jne
push
adc
cbw
out
in
jmp
js
jne
sti
nop
adc
sahf
arpl
not
daa
es
mov
data16
sub
add
jmp
(bad)
cdq
(bad)
fcmovnb
cmp
jmp
(bad)
popf
pop
fs
adc
(bad)
mov
inc
hlt
pusha
xor
xchg
mov
les
ja
push
loop
pop
lds
jmp
push
leave
mov
jmp
cwde
xchg
xor
inc
js
inc
push
dec
xchg
push
push
into
mov
inc
inc
mov
push
and
adc
add
fstp
imul
lahf
rol
mov
dec
imul
mov
or
mov
xor
sub
pusha
fist
mov
or
scas
sbb
nop
sub
dec
ja
mov
bound
ror
rcr
movs
mov
pop
cmp
or
and
scas
pop
mov
push
xchg
mov
and
loop
nop
(bad)
scas
bts
mov
adc
out
mov
inc
retf
sub
aaa
test
jecxz
pushf
jmp
out
and
cli
adc
movs
inc
inc
repz
and
inc
outs
add
jmp
mul
or
sbb
fwait
sub
call
push
ja
ret
sar
mov
(bad)
cmp
mov
sub
shl
enter
into
lods
daa
sbb
in
mov
out
jno
imul
sub
dec
pop
aaa
rol
add
cmp
mov
test
mov
mov
add
sub
adc
or
or
add
sub
ror
xor
sbb
push
leave
mov
and
test
xor
mov
or
sub
adc
sbb
mov
aaa
adc
cmp
movs
shl
xchg
enter
push
add
cld
in
push
aaa
iret
mov
cmc
leave
cmp
into
adc
pop
or
add
add
ins
leave
(bad)
or
add
adc
call
jo
aaa
(bad)
dec
cwde
fdivr
test
retf
lods
out
aaa
add
test
add
or
bound
(bad)
and
add
(bad)
or
push
fst
inc
call
cmp
jne
mov
inc
popa
(bad)
jb
repnz
ror
ins
jae
sbb
and
in
push
ror
dec
(bad)
push
pop
dec
ret
jmp
in
add
push
push
add
neg
add
and
sub
mov
pop
movs
xchg
pusha
push
out
fcomp
fadd
ficomp
cs
lahf
cmp
push
test
ss
pop
lods
icebp
add
and
rcr
dec
dec
mov
or
sub
aam
and
xchg
retf
fdiv
jno
cmp
lods
inc
lds
mov
mov
xchg
inc
jg
push
pop
sbb
fild
sbb
daa
retf
rcr
pop
add
add
inc
or
(bad)
cmp
jae
or
sub
dec
jl
cmc
sub
loopne
mov
xor
popa
mov
pop
add
mov
add
adc
clc
push
lea
movs
or
and
push
or
sti
cmps
nop
mov
sub
jg
push
in
sti
lock
aad
jnp
pop
nop
stos
and
inc
test
aaa
inc
lock
or
and
push
adc
push
f2xm1
int
cld
int
add
inc
mov
mov
xor
dec
call
dec
cmp
pop
push
inc
or
mov
movs
jne
or
push
inc
cs
adc
pop
add
scas
in
or
push
popa
inc
leave
add
ds
xor
or
aas
pop
loop
js
push
xchg
jns
push
pop
mov
mov
enter
push
push
movs
int3
pusha
or
inc
pop
cmp
xchg
pusha
mov
mov
jge
pop
(bad)
sub
sbb
or
adc
add
mov
mov
into
test
xlat
inc
push
adc
xor
scas
rcr
pop
push
mov
inc
pop
bnd
in
inc
pop
pop
push
mov
push
fwait
aas
xor
jo
or
dec
hlt
dec
dec
push
sub
pop
out
or
pop
xor
arpl
add
xor
push
and
fdiv
cmp
push
push
jns
stc
push
call
dec
xor
or
jno
add
sbb
in
in
push
add
inc
add
xor
jne
sub
cmp
jnp
adc
xchg
jl
int
pop
repnz
push
push
cmp
loope
fimul
ror
xchg
rcl
and
daa
xchg
or
(bad)
xor
les
pushf
call
xor
jg
rol
dec
xchg
adc
jb
sbb
loop
xchg
test
mov
push
leave
mov
pop
aas
or
jb
repnz
jnp
inc
mov
out
push
leave
inc
pushf
push
add
inc
loopne
outs
ja
lock
or
sub
and
and
xchg
out
push
inc
je
and
stos
retf
jae
inc
dec
push
sbb
aam
test
leave
js
or
cmp
fiadd
lods
adc
out
aad
push
enter
jae
jb
sbb
nop
mov
das
jne
(bad)
inc
push
dec
cmp
dec
add
add
test
sub
push
sbb
dec
rcl
out
and
inc
mov
ret
outs
add
and
stc
test
test
lods
vmptrst
fidiv
out
add
outs
pop
jle
pop
mov
xchg
in
lock
cmps
sbb
pop
add
pop
pop
fadd
enter
fsubr
dec
push
mov
or
lea
push
pushf
stos
xchg
in
loope
add
add
dec
cmps
dec
dec
pop
fst
inc
sbb
stc
enter
push
leave
aam
nop
xor
jnp
mov
cmc
inc
sbb
dec
fiadd
xor
out
fimul
arpl
mov
xchg
enter
adc
adc
push
idiv
fistp
push
leave
inc
fistp
dec
jo
dec
sub
mov
inc
sbb
mov
sub
cmp
jmp
push
and
push
in
movs
xor
fidiv
adc
pop
cmc
or
jmp
enter
fst
xchg
shl
inc
pop
stc
mov
mov
adc
or
inc
ret
sub
out
ficom
ins
in
inc
outs
gs
ins
test
mov
and
sbb
sbb
ins
imul
or
and
inc
mov
clc
adc
pop
leave
add
shl
push
and
sbb
cmp
je
loopne
inc
stos
inc
mov
data16
cmp
xchg
push
daa
enter
loopne
(bad)
push
and
inc
js
and
repnz
inc
dec
loope
loope
test
or
mov
int3
(bad)
fsub
leave
sub
dec
pop
loop
xchg
push
sbb
fs
and
pop
ret
push
popa
dec
(bad)
fcomp
scas
dec
or
cmp
mov
out
jecxz
loop
mov
pop
inc
add
imul
add
les
nop
in
mov
push
add
pop
leave
and
out
cmp
(bad)
movs
add
cmc
imul
or
pushf
jge
xor
movs
cmps
mov
daa
test
scas
jge
inc
into
push
pushf
mov
add
test
mov
fstp
clc
call
push
aam
dec
fld
mov
ds
push
add
idiv
xor
cmp
imul
pop
xchg
mov
clc
in
addr16
push
xlat
jo
xchg
ret
nop
ja
(bad)
pop
and
or
or
jg
(bad)
cli
(bad)
nop
or
dec
add
xor
mul
retf
dec
jb
pop
add
cmps
adc
cmp
mov
push
rcr
leave
repnz
ins
and
dec
add
push
movs
les
xor
out
or
cmp
or
movs
or
xchg
fstp
ret
ins
push
rol
test
or
xchg
mov
push
inc
imul
and
lea
cmps
or
mov
sub
mov
cmp
and
je
and
in
inc
cli
adc
or
and
in
mov
or
mov
sbb
out
mov
fisttp
add
(bad)
push
xchg
fsub
pushf
add
aaa
cmp
pushf
sbb
mov
mov
push
ffree
(bad)
shl
(bad)
call
sahf
int3
arpl
sahf
lock
xor
call
mov
add
es
sbb
sbb
or
pop
mov
mov
das
pop
rol
pop
jo
and
imul
xchg
lea
adc
push
push
mov
ror
mov
repnz
(bad)
push
call
mov
add
xor
rcl
movs
pop
mov
adc
and
fldenv
enter
cmp
and
ret
js
push
out
stos
fdiv
dec
inc
std
mov
jmp
sbb
cmovns
(bad)
jmp
or
int3
dec
les
call
push
test
dec
imul
mov
aaa
cmp
arpl
leave
jne
lock
xchg
sahf
adc
xor
adc
push
gs
sub
mov
clc
(bad)
loopne
inc
pop
leave
clc
xchg
(bad)
mov
test
dec
jmp
cmps
inc
(bad)
lock
mov
push
jmp
(bad)
fldln2
adc
in
test
loope
ja
sbb
lock
popa
test
retf
sbb
daa
add
jmp
mov
push
dec
jecxz
lods
in
nop
out
mov
pop
xchg
rcr
or
pushf
jns
aam
jmp
sti
dec
ftst
daa
(bad)
jmp
sub
or
add
movs
stos
dec
mov
fdiv
repnz
rol
lea
sbb
gs
jno
jecxz
in
movs
rol
ret
mov
xchg
xchg
test
add
push
cmc
sahf
test
push
movs
repnz
fadd
rcl
sar
(bad)
xchg
test
mul
push
mov
mov
in
push
mov
div
cmp
add
push
mov
fisttp
enter
add
add
and
icebp
cmp
lds
in
pop
mov
in
push
xchg
es
push
pop
leave
test
repz
mov
repz
mov
cli
jle
sub
inc
mov
or
push
adc
mov
pop
pop
mov
mov
adc
iret
push
sub
cmp
or
cmps
sub
retf
push
fcmovb
int3
shl
stc
add
or
mov
inc
add
jbe
lods
cmp
sbb
clc
jo
scas
lock
jne
mov
mov
inc
push
(bad)
add
nop
pushf
jecxz
js
inc
or
jle
mov
enter
out
push
leave
adc
and
push
add
popa
repz
xchg
call
les
outs
sub
adc
int3
sbb
lods
aaa
sub
retf
aas
stos
cmp
push
inc
add
hlt
adc
mov
jl
mov
pusha
loopne
inc
fild
scas
mov
leave
cmp
pop
iret
mov
cmp
xor
addr16
inc
push
jno
adc
fdiv
jl
jge
adc
jge
sbb
pop
pop
ret
sub
je
loopne
pop
adc
mov
xor
push
jo
cmp
out
ins
dec
adc
add
mov
cmc
push
add
mov
cmp
or
or
sub
gs
mov
jno
lock
or
dec
outs
daa
or
sbb
icebp
jne
xchg
sub
and
push
mov
fst
dec
jmp
test
arpl
dec
loope
pop
mov
sub
pop
or
(bad)
rol
movs
inc
add
test
xor
xor
mov
sub
out
push
and
stos
push
sub
imul
push
not
(bad)
jns
push
mov
test
(bad)
dec
lock
mov
add
js
dec
push
or
mov
pxor
dec
sbb
clc
xor
mov
fidiv
pop
lock
(bad)
pop
pop
adc
jge
xor
pop
add
in
aaa
sbb
adc
and
std
xlat
xor
mov
aas
cwde
add
push
das
enter
cmp
push
mov
jge
jmp
adc
xor
pusha
aad
jne
mov
shr
push
push
adc
add
dec
xor
add
fadd
adc
rcr
pop
outs
push
mov
xchg
add
fld
repz
pop
cmc
dec
icebp
dec
inc
call
nop
rol
ret
inc
or
shl
or
aaa
retf
loopne
mov
aas
pop
lds
push
test
adc
daa
add
adc
je
xor
xchg
nop
add
adc
sahf
hlt
and
mov
xchg
mov
pushf
xchg
aad
jge
adc
lea
and
and
push
or
sbb
xchg
mov
add
inc
xor
mov
cmp
push
xchg
retf
stos
push
inc
loopne
cmp
sbb
push
in
or
jle
inc
fwait
push
xchg
addr16
mov
inc
sub
dec
jmp
fwait
mov
loop
imul
(bad)
sub
jb
inc
fcmovnu
push
jmp
bound
mov
clc
inc
movs
mov
test
ror
rcr
test
mov
popf
nop
in
test
push
mov
enter
pushf
movs
(bad)
dec
data16
cmps
add
jne
test
fisttp
inc
cmp
or
jecxz
jae
jno
jnp
daa
pop
test
test
imul
add
inc
ss
clc
jo
jmp
ret
xor
arpl
jo
jle
inc
sub
or
out
into
ret
sub
arpl
in
or
repnz
cs
sub
jno
or
jae
or
dec
pop
aas
xor
rol
out
aaa
push
dec
repz
add
add
mov
dec
femms
pop
pop
fdivr
add
arpl
sbb
dec
es
add
jb
lea
lea
clc
mov
out
and
ss
stc
mov
mov
adc
into
push
push
lock
xchg
push
xchg
push
mov
int
daa
jae
stos
movs
or
push
scas
xchg
retf
cli
cs
inc
pusha
(bad)
dec
and
pusha
inc
fs
or
xor
cmp
movs
pop
dec
call
sbb
jo
fnstsw
xchg
pusha
pusha
stc
xor
jno
inc
mov
inc
je
arpl
push
pop
sub
add
arpl
jne
loopne
or
imul
jbe
fidiv
loopne
xor
cmp
or
or
test
and
xlat
(bad)
ret
jle
jmp
and
clc
cdq
and
push
lods
jbe
movs
pop
sub
add
gs
lahf
add
(bad)
je
sub
in
or
imul
sbb
loopne
inc
call
mov
mov
into
pop
add
mov
push
ins
jne
inc
adc
outs
ins
(bad)
xor
pusha
fdiv
mov
in
xor
add
loopne
in
mov
pop
or
bsf
cdq
cld
sbb
or
add
call
hlt
mov
or
cmps
sbb
loope
punpckhdq
cld
or
push
(bad)
in
sub
push
stos
jp
mov
aam
mov
add
or
repz
sbb
pop
aad
mov
dec
mov
xchg
pop
push
ins
jp
fisttp
loopne
(bad)
sub
xchg
mov
test
adc
cmp
les
push
and
cmp
ret
sbb
and
std
test
daa
enter
pshufw
fs
or
sar
pushf
add
mov
aaa
sub
sahf
fisubr
mov
sub
cmp
shr
add
pop
cld
dec
sub
or
daa
and
nop
outs
jne
cmp
sub
mov
cmps
pop
js
pop
push
stc
xor
clc
movs
ror
jnp
mov
and
mov
mov
pop
inc
push
cld
outs
or
cmps
add
lods
popf
dec
out
and
push
or
(bad)
in
(bad)
and
jmp
sub
add
jmp
hlt
test
xchg
or
sbb
or
shl
add
push
call
cmp
movs
xor
call
add
cmp
jge
int
scas
loop
mov
loope
out
mov
fwait
and
movs
adc
push
add
xor
and
ror
adc
out
out
std
leave
test
mov
push
jo
cmp
push
repz
and
add
sti
xor
pop
rcr
push
mov
in
pop
(bad)
arpl
add
fadd
clc
cmp
dec
mov
imul
mov
clc
movs
mov
arpl
les
jnp
add
aad
pop
dec
ss
adc
test
jecxz
or
jmp
fld
pop
clc
cmp
(bad)
dec
movs
dec
xor
lock
call
add
add
test
daa
pop
add
out
and
pop
and
or
sti
cmps
cmp
je
pop
stos
cmp
fwait
retf
mov
sub
int
mov
jle
pop
cdq
not
ss
adc
or
mov
sub
mov
push
pop
mov
scas
sub
add
or
arpl
arpl
retf
xor
push
sar
call
xor
push
adc
cmc
cld
push
ror
or
inc
adc
inc
imul
xor
mov
les
loop
xor
jmp
arpl
ins
das
inc
jns
xlat
mov
push
lods
ds
adc
sbb
push
or
and
fist
and
and
sahf
add
or
or
std
or
mov
adc
mov
retf
out
and
dec
push
push
push
jle
mov
call
push
or
pushf
jns
rcl
jl
test
sbb
or
cmp
push
enter
movs
add
jne
fld
dec
call
iret
jp
popf
into
cwde
aam
xor
xor
xlat
retf
dec
mov
mov
ins
cs
pop
test
mov
xor
or
xchg
shl
jne
jbe
sbb
cmp
mov
inc
and
ficomp
ret
imul
or
push
push
test
mov
cdq
or
loope
push
push
inc
jecxz
int3
rol
adc
imul
lds
aaa
cmp
inc
xlat
shr
mov
rol
mov
adc
enter
loop
jmp
enter
sbb
pop
mov
hlt
sbb
pop
das
nop
hlt
fwait
pop
iret
push
jecxz
(bad)
jge
push
mov
jne
fsubp
inc
or
mov
pushf
adc
loope
xchg
arpl
popa
(bad)
test
sbb
inc
lock
add
popa
inc
fs
adc
lods
nop
pop
xchg
mov
push
ror
dec
popa
cwde
scas
dec
mov
ja
or
pusha
cmp
stos
in
pop
xchg
and
mov
and
mov
mov
add
mov
add
or
push
mov
pop
and
mov
jmp
or
or
cwde
or
mov
test
cdq
xlat
mov
push
or
adc
xor
nop
xchg
or
nop
scas
sbb
or
xor
sbb
dec
pop
int
mov
ret
jge
nop
and
and
rcr
or
xchg
xchg
sbb
inc
push
nop
or
xchg
movs
sbb
nop
inc
ffree
daa
call
pushf
movs
sbb
mov
or
cmp
nop
push
std
test
adc
cmp
push
or
rcr
add
push
inc
data16
fcmovb
xchg
scas
sbb
sub
ins
inc
test
fisttp
ret
cdq
inc
mov
mov
or
pushf
dec
in
xchg
jno
push
ret
and
outs
inc
lods
pop
push
fwait
out
push
lahf
add
adc
ret
push
ja
inc
cmps
imul
sbb
push
(bad)
mov
pusha
push
aam
xor
push
rcl
mov
push
in
adc
icebp
sub
imul
and
pop
pop
in
or
into
cmp
lock
sub
pop
mov
stc
retf
cmp
js
js
push
sbb
or
sqrtps
mov
dec
adc
inc
adc
mov
adc
or
mov
inc
aas
pop
and
add
ins
or
or
scas
add
leave
push
and
(bad)
inc
adc
jmp
jno
mov
aam
push
adc
popa
or
mov
test
dec
fcom
hlt
adc
inc
mov
leave
cmova
dec
test
push
js
pop
jl
or
out
xchg
mov
or
sbb
xlat
xor
sub
and
jns
imul
or
sub
inc
xchg
add
mov
sub
pusha
test
xchg
(bad)
aas
xor
or
adc
lock
adc
sbb
sbb
daa
inc
mov
dec
imul
pop
xor
in
adc
arpl
xor
call
icebp
mov
pop
shr
pop
dec
and
inc
adc
retf
mov
xchg
cmps
xor
or
push
and
ret
push
inc
mov
fstp
and
add
popa
jge
and
cwde
or
fsub
inc
sbb
push
adc
mov
push
iret
enter
adc
cmp
add
and
adc
shr
jp
retf
xor
mov
arpl
jno
lahf
fbstp
or
or
sub
and
shl
sub
adc
inc
in
scas
ror
add
dec
adc
(bad)
icebp
cmp
or
sbb
cmp
mov
repnz
fnstcw
push
jne
cmp
adc
lods
inc
cmps
add
add
(bad)
outs
pusha
xlat
cmp
adc
push
add
(bad)
mov
push
aaa
add
inc
bnd
push
mov
push
lock
cmp
push
xor
push
call
mov
push
ins
out
mov
outs
push
enter
jl
jo
neg
jnp
dec
cs
rcl
push
push
sbb
sbb
ins
ds
ss
sahf
push
push
and
hlt
sbb
ins
in
pop
add
aam
leave
(bad)
fsub
adc
and
ja
sbb
int
addr16
in
ret
push
mov
or
or
push
test
sbb
dec
adc
dec
idiv
xor
dec
mov
adc
and
ret
push
sbb
mov
adc
mov
rol
not
inc
mov
pop
mov
add
retf
jo
dec
mov
inc
call
mov
gs
inc
sub
inc
push
das
xor
(bad)
(bad)
fsub
xchg
pshufw
sbb
dec
mov
dec
pusha
xor
xor
adc
push
mov
aam
sub
and
adc
or
jmp
clc
movs
mov
shr
cwde
fwait
das
movs
cmp
add
fcom
or
cli
push
pusha
aam
popa
call
loopne
neg
pushf
cmp
mov
adc
mov
adc
in
mov
mov
mov
inc
mov
mov
popa
sti
mov
pop
push
xchg
mov
and
data16
inc
xor
ins
or
test
movs
retf
imul
or
jne
stos
push
inc
(bad)
sub
(bad)
push
push
mov
shl
cmp
int
mov
outs
push
dec
icebp
and
xchg
mov
mov
mov
add
aam
outs
xchg
xchg
pop
sbb
xchg
mov
add
add
xor
fnstcw
retf
mov
cmc
mov
pop
mov
xor
lock
imul
call
cld
in
add
lock
hlt
(bad)
mov
sbb
pushf
fxch
mov
cmp
add
inc
sbb
rcl
cmc
ins
retf
aaa
cmps
fwait
sbb
das
lods
xchg
(bad)
adc
add
lods
ret
mov
cmc
pushf
arpl
sbb
div
movs
jo
stos
mov
cld
mov
mov
sub
mov
clc
mov
push
sub
push
mov
pop
es
pop
ds
test
xchg
std
mov
mov
jnp
dec
push
jge
sub
xchg
sub
xchg
mov
stos
xor
ret
xchg
les
push
xlat
(bad)
shr
push
adc
xchg
mov
push
dec
push
ret
enterw
or
out
rcr
hlt
dec
nop
mov
dec
jmp
movs
into
cmps
inc
and
outs
and
enter
and
dec
leave
in
add
add
xchg
xchg
or
lock
loopne
mov
cwde
mov
sub
addr16
adc
push
push
xor
mov
xchg
out
xchg
jmp
aad
test
retf
mov
lock
hlt
in
retf
in
clc
call
cs
mov
add
shl
jecxz
xlat
push
add
dec
es
nop
mov
xor
retf
ret
popf
sbb
sub
or
xor
iret
es
pop
adc
aam
mov
jo
enter
mov
dec
lods
aaa
rol
adc
or
lods
or
jne
mov
add
cmps
add
mov
jmp
push
ret
btr
fild
pop
or
jns
imul
rcr
jle
mov
into
mov
(bad)
dec
pop
pop
sub
(bad)
add
(bad)
inc
ins
ret
sti
add
jo
xchg
gs
add
pushf
sti
inc
mov
add
inc
sbb
add
fisttp
push
adc
cld
push
add
and
dec
cmp
jns
and
fld
push
dec
inc
dec
push
mov
push
mov
push
idiv
mov
jbe
fdiv
adc
xor
adc
xchg
(bad)
pop
fstp
add
cdq
fwait
iret
xchg
test
jae
add
jo
aas
and
add
mov
fild
data16
sub
pop
in
loopne
sbb
pop
jns
in
push
push
pop
push
xor
xor
clc
call
fs
push
inc
mov
cmp
sbb
cmp
cmp
add
jo
(bad)
mov
sub
add
or
sub
dec
or
xor
jno
adc
dec
and
mov
ficom
nop
cmp
pop
mov
xchg
adc
aad
dec
sbb
and
xchg
xchg
or
cs
popf
mov
mov
cwde
int3
les
rcl
icebp
or
push
inc
jmp
pop
and
cs
sbb
nop
mov
and
ret
sahf
and
jnp
lock
test
inc
aas
dec
jl
add
and
sub
mov
xchg
test
jp
data16
jl
ins
aaa
or
mov
in
xchg
xor
lahf
jp
jnp
test
push
jo
or
loopne
cmp
outs
inc
test
ret
(bad)
repnz
mov
pusha
xor
push
in
xchg
int3
xchg
imul
leave
(bad)
rcr
leave
leave
rcl
aam
jb
leave
xchg
enter
mov
xchg
rcl
cwde
sub
shr
scas
xchg
aaa
test
jg
jecxz
sbb
mov
xchg
cmp
rcr
mov
dec
test
mov
mov
dec
(bad)
enter
and
aam
push
pop
jb
loopne
mov
test
adc
ret
loopne
push
dec
retf
ret
clc
cmps
adc
sbb
(bad)
adc
cs
mov
(bad)
fild
dec
or
sub
mov
imul
das
cmp
addr16
hlt
mov
and
hlt
loopne
into
or
jae
mov
fcmovne
dec
jmp
lahf
mov
ret
add
sbb
out
test
mov
pop
test
inc
add
clc
sub
cmp
lods
div
adc
add
add
(bad)
pusha
dec
and
popf
jne
shl
movlps
cmps
movs
ret
inc
lods
lds
add
xor
adc
sub
icebp
xchg
mov
js
dec
or
add
sub
mov
xor
xlat
dec
sub
cmp
in
aam
xchg
sub
in
push
lock
dec
mov
mov
leave
jmp
test
and
add
sub
adc
(bad)
invd
cmp
push
sti
pop
or
(bad)
pusha
or
jns
loopne
jle
add
push
movs
pusha
test
test
mov
or
sub
sbb
cmp
adc
mov
jo
push
adc
xchg
in
ret
and
inc
lods
scas
repz
in
les
adc
mov
sbb
pushf
mov
mov
xor
and
xor
cmp
or
imul
add
add
and
lea
movs
and
add
and
lahf
xlat
add
jle
mov
and
cmp
inc
adc
stos
push
and
lock
sub
cwde
mov
in
or
and
loopne
nop
imul
rcr
jae
outs
add
mov
enter
fsubp
mov
in
enter
add
loopne
in
repnz
(bad)
mov
in
in
fsub
nop
adc
mov
nop
int
hlt
loopne
mov
nop
int
je
int3
int3
stos
bound
ja
je
ror
sbb
bndstx
inc
fdiv
cmp
add
rol
add
ret
adc
rcl
sbb
and
shl
inc
and
getsec
or
add
cs
inc
inc
add
aam
fild
and
add
popa
adc
xchg
sbb
mov
call
push
mov
popf
push
add
pop
pop
mov
jge
nop
call
fcomp
fbstp
xchg
aad
fwait
sub
fstp
pop
in
add
add
push
hlt
hlt
leave
add
lock
add
add
call
pusha
and
jae
and
mov
or
loopne
pushf
dec
and
or
push
push
add
fdiv
test
adc
add
cmp
inc
pop
cs
xchg
mov
mov
cdq
xor
xor
jno
inc
or
inc
sub
xor
inc
push
xchg
pop
and
jb
rol
xor
xor
push
cmc
leave
iret
loope
out
cmc
xor
mov
push
das
sbb
mov
sub
adc
or
pushf
push
mov
sbb
mov
pop
and
setb
pop
mov
lahf
push
mov
add
xchg
fs
cdq
js
mov
push
inc
cmc
sbb
xor
xchg
add
popa
dec
sbb
add
jmp
aaa
and
add
data16
out
adc
shl
push
mov
jmp
sub
xchg
xor
add
jl
xchg
shl
sub
cld
lahf
xchg
mov
mov
sar
cmp
adc
movs
fcom
mov
cwde
js
lods
and
sbb
xor
fdivr
jl
and
stc
add
push
mov
call
mov
je
xor
dec
dec
lock
pop
jmp
dec
les
add
adc
movs
inc
mov
or
sub
scas
stc
and
mov
leave
mov
xlat
scas
call
lds
sbb
xchg
xor
xchg
push
xchg
cmp
cmp
(bad)
loopne
sub
push
nop
int
loopne
fnstsw
adc
call
pop
add
nop
sbb
inc
mov
adc
in
and
xchg
movs
cwde
xor
loope
mov
push
lock
popa
fiadd
cwde
jne
dec
jb
lock
jno
(bad)
aam
jne
hlt
push
ja
mov
adc
imul
or
jl
jb
sbb
jns
add
neg
pop
aam
lock
cmp
out
call
imul
push
sub
lea
lea
xchg
ror
daa
outs
and
sub
sbb
les
les
jecxz
out
push
shl
push
push
mov
enter
adc
and
jl
test
jns
inc
cs
hlt
hlt
jo
jo
cmp
adc
aad
pushf
jbe
movntps
push
into
pop
sub
sbb
fdivr
sbb
push
or
mov
sbb
(bad)
in
add
pushf
fdiv
xchg
(bad)
pushf
lea
lods
push
aas
inc
and
xchg
daa
add
(bad)
pop
xchg
mov
cwde
addr16
add
lds
sub
mov
xchg
lea
add
cwde
imul
xchg
lock
mov
mov
pop
ficomp
mov
(bad)
in
and
mov
mov
cmp
lock
stc
inc
bswap
cmp
mov
mov
push
test
xchg
sbb
cwde
jmp
ss
aaa
adc
cmp
dec
in
add
or
repnz
xor
pusha
jle
je
or
dec
fisub
aam
aad
inc
aad
or
mov
mov
add
stc
gs
int
sbb
in
push
aas
push
push
ds
iret
repz
and
clc
adc
sub
loopne
scas
add
dec
dec
fsubr
dec
dec
fsubr
push
cmp
sub
dec
dec
pop
pop
jmp
add
in
int3
sub
int3
enter
dec
push
(bad)
(bad)
rcr
not
xchg
mov
xor
or
and
add
and
xor
mov
xor
add
mov
lods
rol
inc
mov
add
cs
imul
and
push
pop
out
mov
mov
out
jbe
and
int3
pop
inc
mov
mov
popa
dec
iret
and
and
push
add
inc
xlat
ror
sti
dec
push
aam
push
int
inc
sbb
in
jmp
in
adc
xor
stos
pop
adc
sbb
add
push
cmp
ret
call
cmp
or
mov
and
xchg
pop
movs
pop
jne
or
loope
pop
cmps
and
icebp
test
xchg
xchg
pop
shr
and
pop
movs
cmp
(bad)
mov
pop
imul
cdq
mov
rcl
dec
test
dec
or
mov
mov
jne
jle
aaa
js
xchg
mov
mov
add
movs
enter
pop
rol
mov
and
nop
inc
inc
scas
lea
adc
xchg
dec
in
cmps
imul
cmps
imul
xchg
xor
call
dec
in
cmp
dec
jae
xchg
loopne
fcom
cmp
fdiv
jae
cmp
aam
jb
add
rol
add
int3
int3
enter
and
aad
xchg
mov
test
cmp
or
mov
dec
dec
and
(bad)
shl
pop
lods
add
shl
inc
sbb
(bad)
shl
and
lods
adc
or
add
pushf
sub
in
lods
in
xor
xor
dec
(bad)
lock
ss
iret
push
or
rcr
ss
dec
jle
rol
nop
test
sub
jmp
lahf
jmp
jmp
sub
and
adc
adc
int
pop
imul
sub
and
and
cmp
mov
push
inc
push
repnz
inc
dec
pusha
int3
inc
add
add
in
aad
mov
fwait
pop
push
jg
and
cmp
xchg
push
dec
in
call
mov
cwde
adc
and
in
fdivr
and
aam
pop
aam
add
cmp
add
test
add
sbb
jl
xchg
mov
ret
fild
add
loop
push
mov
xor
cmp
adc
mov
mov
mov
(bad)
xor
mov
adc
jae
nop
dec
and
or
and
xchg
aam
and
scas
dec
adc
gs
sbb
xlat
popf
ds
aaa
adc
rol
mov
gs
and
mov
jns
push
or
push
jo
or
add
out
dec
int3
mov
cmp
adc
jae
xor
cmp
sub
inc
imul
retf
daa
mov
add
inc
les
mov
xor
and
lods
or
xor
push
inc
and
fcom
in
adc
loope
mov
mov
in
add
inc
rcl
add
enter
jo
movs
cmp
ins
dec
leave
sub
jnp
dec
inc
sbb
push
or
mov
mov
loopne
jo
push
dec
loopne
jns
add
xor
sbb
inc
(bad)
mov
fld
es
add
daa
mov
loop
jo
mov
or
xchg
fsubr
or
nop
mov
jecxz
inc
retf
sbb
mov
push
and
rol
fwait
add
adc
xchg
imul
add
add
sub
mov
xchg
mov
mov
xchg
pusha
loop
and
ins
ja
jbe
sbb
pop
cmps
dec
cmp
pop
mov
hlt
adc
pop
movups
cmp
add
xchg
push
and
in
call
xor
lods
add
push
dec
add
pop
add
ror
and
clc
xchg
pop
mov
xor
push
adc
fs
pop
add
or
adc
(bad)
or
inc
or
mov
movs
jecxz
and
mov
push
add
jle
ja
push
pop
ins
jecxz
repnz
ds
add
pop
push
push
pop
jl
push
sub
and
pop
push
ins
pop
push
movs
push
nop
pop
jns
push
mov
push
adc
jge
and
sbb
loop
lahf
cmps
push
cmp
mov
mov
adc
test
dec
lods
mul
aas
cmps
pop
xor
idiv
adc
pop
cmps
leave
xor
cmps
or
sub
shl
inc
fiadd
fimul
lea
pop
xchg
push
repnz
cmp
(bad)
pop
repnz
std
std
packuswb
adc
inc
push
inc
ss
scas
(bad)
loopne
cmp
add
cld
mov
pop
jnp
imul
popa
sbb
sub
pop
rol
and
es
fcom
pop
sahf
inc
cmp
stc
xor
int3
jle
mov
fdivr
les
push
fwait
adc
inc
mov
and
xchg
xchg
adc
mov
enter
push
cmp
pop
xor
adc
jmp
push
mov
sbb
push
dec
popa
pop
sbb
ret
punpckhbw
js
cld
test
pushf
iret
adc
sbb
add
dec
add
cli
cdq
cmps
ret
lods
push
or
pop
sar
jle
pop
adc
add
or
xor
pop
mov
push
cmp
push
add
ja
repnz
inc
hlt
lock
cld
and
shl
pop
cmp
and
add
mov
iret
sub
mov
movs
mov
sub
xchg
nop
fadd
stc
mov
xor
int3
xchg
(bad)
xchg
movs
jmp
inc
jno
jle
adc
cs
mov
dec
stos
int3
lea
or
fimul
xchg
jbe
push
jle
in
or
push
add
add
repnz
pop
push
addr16
cmp
(bad)
inc
or
outs
dec
xor
fild
dec
push
dec
inc
xchg
lock
sbb
int3
jle
sar
das
ss
push
sbb
push
dec
sbb
ror
push
xchg
or
nop
test
ret
jo
mov
shl
(bad)
or
mov
clc
or
sub
jb
or
and
test
xor
adc
jge
or
add
idiv
inc
rcl
mov
es
push
xor
(bad)
sbb
sbb
clc
stos
jl
inc
in
sahf
es
mov
or
lds
fcmovne
ret
mov
test
mov
add
or
mov
xchg
arpl
(bad)
ds
lahf
jmp
push
adc
jmp
pop
daa
pop
je
add
adc
lods
xchg
fimul
or
inc
xor
lds
fs
rol
adc
push
lods
and
xor
movs
add
push
rcl
in
adc
out
mov
mov
pop
(bad)
xlat
push
int3
pop
or
cs
enter
add
retf
mov
adc
push
shl
psubw
shl
pop
push
add
add
les
pusha
pusha
sub
movs
(bad)
shl
sahf
jg
xor
js
adc
xor
mov
adc
mov
mov
adc
mov
loopne
xchg
xchg
sub
repnz
inc
gs
xchg
sbb
sbb
popw
in
popf
nop
mov
and
inc
pop
adc
adc
pop
adc
pusha
push
call
popf
push
cmp
cmp
dec
inc
mov
js
push
sbb
pop
cmps
xor
nop
sbb
lea
xlat
mov
cs
add
add
jge
dec
or
ss
sub
and
cmp
ror
lahf
or
push
mov
push
(bad)
pop
add
jl
call
aas
fwait
add
xor
shr
dec
movs
test
xor
mov
clc
fcom
xor
adc
pop
push
test
sbb
sbb
ins
sub
adc
cmp
xor
in
bound
cld
aam
bound
jl
or
or
fwait
arpl
gs
push
jmp
inc
sbb
aaa
mov
jo
loop
push
clc
xchg
clc
movzx
inc
dec
js
addr16
xchg
xchg
aas
cwde
mov
sbb
cwde
(bad)
and
xor
jne
mov
sbb
mov
dec
pop
inc
xor
xor
loope
push
sahf
mov
popa
test
add
jmp
jne
mov
cmp
cmp
add
add
xchg
fisub
test
and
mov
mov
cmp
pusha
add
push
mov
dec
mov
sbb
adc
js
pop
lds
das
jge
ss
loopne
pop
mov
or
stc
pop
adc
adc
scas
dec
lds
xchg
repz
nop
outs
mov
push
dec
hlt
sbb
(bad)
add
mov
inc
aaa
wbinvd
cmp
add
and
xor
mov
xchg
jne
sbb
sbb
add
ss
sbb
push
jg
or
pop
cdq
jae
fs
pusha
dec
inc
sub
les
mov
adc
je
mov
adc
inc
add
adc
mov
sbb
je
cld
sbb
pop
out
add
mov
cwde
jg
dec
inc
add
xchg
inc
pop
dec
pusha
int3
xchg
cmps
(bad)
add
leave
stos
sbb
ret
aas
inc
(bad)
mov
bound
into
cmp
xchg
neg
and
sub
add
add
cmp
mov
adc
adc
mov
xchg
loope
mov
add
push
jns
sbb
and
mov
inc
ror
dec
les
enter
addr16
or
sbb
in
jb
mov
lock
pop
add
inc
mov
xor
int3
loope
pop
cmps
pop
xor
add
and
sub
add
dec
add
xchg
dec
ret
mov
loop
add
push
push
inc
add
adc
xchg
add
cmp
jl
mov
cmp
hlt
lods
mov
mov
loope
icebp
mov
push
scas
cdq
loopne
or
es
movs
or
or
add
jmp
pushf
mov
sub
jbe
div
dec
dec
inc
pop
xor
add
inc
std
dec
sbb
xor
add
mov
or
not
inc
nop
push
sbb
add
mov
test
push
or
jne
ja
add
leave
jne
or
xor
je
mov
cs
sbb
mul
fnsave
cmps
and
ror
aas
out
or
push
fild
add
adc
out
sbb
adc
add
mov
push
cmps
dec
mov
fld
and
and
cwde
cmp
dec
in
xchg
cmp
nop
or
pop
icebp
pushf
call
sahf
or
sar
popf
push
fwait
movs
push
js
inc
lock
push
xor
scas
je
mov
and
pop
scas
sub
mov
rcr
adc
nop
adc
aad
adc
test
push
nop
aaa
lods
div
imul
pop
inc
popa
je
add
sbb
mov
and
add
les
sahf
xchg
or
push
movs
push
xor
mov
aaa
xchg
imul
ins
inc
fist
fdivr
add
arpl
xor
push
jo
dec
mov
cmp
cwde
jne
nop
inc
fsub
loopne
ss
dec
xchg
or
adc
push
sar
(bad)
repz
mov
cmp
popa
add
or
cmp
adc
push
add
mov
and
mov
sahf
ins
inc
jbe
sub
or
adc
add
in
adc
jmp
out
or
adc
(bad)
hlt
inc
imul
or
jle
cmps
fadd
sahf
mov
imul
dec
mov
cmp
mov
loopne
mov
jl
and
ins
mov
pop
imul
bound
sbb
mov
mov
loop
aad
xchg
push
add
push
in
xchg
and
and
pop
imul
ss
ds
imul
aad
in
mov
fist
data16
inc
dec
loopne
lahf
adc
and
add
push
(bad)
ret
bound
jo
pop
cdq
loopne
shl
mov
inc
adc
xor
mov
cmp
push
(bad)
and
dec
outs
push
jns
xchg
inc
repz
mov
and
pop
add
cmp
pop
call
leave
leave
dec
inc
inc
inc
inc
leave
leave
leave
leave
inc
inc
dec
dec
pushf
pushf
pop
int3
dec
dec
dec
dec
pushf
pushf
pushf
pushf
dec
dec
xor
pushf
pushf
pushf
pushf
xor
xor
inc
add
pushf
ss
(bad)
nop
ror
xor
inc
shl
inc
push
xadd
or
or
pop
mov
pop
xor
mov
test
arpl
push
jb
ss
cmp
cmp
adc
xlat
xor
cmps
jbe
pop
add
jne
(bad)
xor
cwde
or
or
cmp
mov
inc
aad
or
sub
dec
mov
iret
arpl
xor
add
imul
jae
addps
and
xor
mov
daa
(bad)
push
pop
in
cwde
lods
pop
push
xor
or
sbb
cmp
xor
out
xchg
(bad)
fisttp
das
jp
fwait
dec
cmps
push
lahf
push
adc
or
rol
outs
mov
scas
and
inc
jg
adc
add
jne
aas
ins
push
stos
sub
push
fiadd
xchg
inc
pop
cs
(bad)
cmp
push
xor
xor
mov
cdq
mov
(bad)
bound
xor
imul
fs
sbb
(bad)
popa
std
mov
mov
mov
lods
sbb
fs
pop
je
jo
rcl
inc
add
inc
rol
(bad)
mov
shr
dec
or
imul
fbstp
xchg
fbstp
inc
mov
xchg
mov
sub
sub
lahf
dec
mov
fcom
fisttp
push
and
cmp
xchg
or
ss
sbb
xor
sbb
jno
adc
out
(bad)
pop
bound
es
mov
aas
lahf
cmps
add
inc
retf
jnp
add
ja
imul
mov
xor
or
inc
imul
repz
rcl
jae
dec
adc
mov
xor
pop
leave
inc
jo
jg
xor
bound
fmul
push
or
ret
inc
imul
or
jb
ror
ins
jg
imul
aaa
xor
xchg
inc
sub
inc
test
jbe
push
das
imul
ss
ds
add
or
test
xchg
push
xor
push
out
dec
inc
loope
or
mov
xor
xlat
adc
ja
retf
ss
xor
outs
sub
call
xchg
mov
lea
popa
fild
cmp
dec
sub
aaa
das
sub
jo
scas
sub
push
or
outs
iret
pop
adc
mul
sbb
sbb
adc
mov
add
add
fcom
cmps
xor
test
push
call
outs
nop
pop
add
add
scas
ss
dec
pop
iret
xor
add
add
push
or
dec
add
jne
add
outs
inc
sbb
imul
adc
sub
mov
cmp
adc
cmp
in
pop
inc
mov
ins
mov
outs
jmp
(bad)
fimul
dec
mov
pusha
lahf
inc
and
loope
out
scas
sub
push
adc
jg
adc
inc
or
pusha
mov
out
dec
mov
fwait
sbb
and
fisttp
add
mov
jb
pop
pop
mov
cmps
push
and
adc
(bad)
or
push
sbb
aaa
inc
jno
push
mov
aaa
dec
cdq
add
test
rcr
push
push
mov
or
sub
jmp
arpl
arpl
mov
xchg
es
aaa
div
lds
add
ss
out
adc
add
jge
and
mov
mov
jno
test
cmp
loope
imul
xor
test
cs
jbe
int
aaa
xchg
(bad)
or
push
arpl
mov
pop
aaa
stos
dec
stos
call
pop
enter
xor
xor
ficom
cmp
cs
inc
xor
adc
loop
xchg
pop
iret
cmp
stos
js
xor
retf
add
inc
add
push
test
push
sar
or
jbe
aas
cmp
ror
popa
adc
dec
inc
xlat
cmp
aam
out
dec
jg
mov
pop
(bad)
movs
inc
ret
push
daa
xlat
jge
push
push
pop
je
push
iret
lahf
inc
fnclex
inc
pop
cwde
dec
(bad)
out
addr16
adc
rol
xor
jle
pop
add
or
mov
arpl
sbb
popa
push
unpcklps
push
call
adc
add
test
and
xor
outs
mov
retf
js
mov
or
fcmovnb
mov
push
scas
ror
mov
inc
xor
cmp
cmp
adc
dec
pop
pop
int
jg
xchg
(bad)
mov
xor
xor
sub
pop
ja
pop
loopne
push
arpl
add
pop
cs
pop
sbb
addr16
pop
inc
pop
enter
mov
lahf
dec
inc
and
(bad)
popa
ret
rcl
push
cmp
pop
ins
xchg
sub
add
ret
push
aas
mov
ins
jae
fild
dec
inc
add
adc
stos
adc
dec
xor
inc
pushf
js
mov
aam
ss
repnz
bound
ror
or
inc
cmp
aaa
adc
cdq
test
imul
cmp
ss
pop
aaa
adc
jbe
or
cmp
movs
mov
jmp
test
arpl
jle
(bad)
es
fdiv
cmp
sub
mov
outs
dec
bound
adc
xor
(bad)
jb
lock
push
push
inc
cmps
bound
cmp
cmps
sub
movzx
pop
or
xchg
pop
or
push
mov
xor
jno
jo
bound
ja
leave
inc
rcl
outs
xor
fadd
or
mov
xor
mov
jb
ja
(bad)
adc
sbb
inc
jg
push
pusha
mov
jg
and
inc
scas
das
pop
ss
push
or
push
xor
mov
inc
stos
sbb
aaa
ret
sub
inc
adc
xor
sahf
ja
lods
inc
lahf
inc
call
jbe
iret
dec
mov
dec
push
push
jg
pop
jae
mov
inc
pop
dec
xor
dec
cmova
sub
pop
aaa
xchg
rcl
mov
aaa
shl
add
ffreep
mov
and
mov
pop
xchg
mov
aas
xor
inc
scas
xor
lods
in
mov
push
shl
dec
test
push
jbe
mov
arpl
je
dec
les
mov
mov
aas
add
cmovge
xchg
mov
push
mov
(bad)
xor
push
jb
xor
cmp
xor
add
xor
xlat
inc
and
xor
xor
out
add
dec
cmps
xor
inc
mov
loopne
pop
stos
pop
pop
es
mov
pop
mov
pop
xor
aas
or
and
push
xor
cmp
arpl
aam
xor
inc
sbb
xchg
sub
popa
push
xor
popa
ja
cdq
xor
inc
retf
fs
cs
ja
xor
jmp
mov
inc
scas
xor
xor
adc
or
inc
les
cmps
aas
iret
add
fmul
xor
mov
xlat
ss
aaa
out
xor
xor
dec
lods
and
cmp
pop
xchg
inc
jg
adc
or
mov
inc
dec
and
(bad)
and
mov
push
dec
inc
out
sbb
dec
pop
sbb
xchg
pop
ss
dec
icebp
add
inc
push
jmp
aas
add
mov
cmp
aas
or
pop
stos
add
cmc
jb
xchg
aaa
ret
inc
aas
push
mov
push
cmp
push
sub
xor
cmp
cmps
(bad)
rcpps
bound
out
imul
add
add
or
mov
or
xor
daa
dec
xchg
cmp
aas
cmp
shl
add
out
push
outs
lahf
or
cs
mov
push
add
aaa
pop
outs
jns
ret
add
jns
jne
pop
pop
and
inc
dec
aas
leave
push
adc
cmp
push
push
push
pop
push
inc
mov
out
(bad)
xor
adc
cmp
xchg
and
sub
pop
push
mov
xlat
push
test
neg
aas
cmps
mov
stos
in
xor
xor
xor
out
cdq
stos
push
mov
out
mov
mov
sbb
sub
mov
xor
daa
sub
mov
jae
syscall
pop
lods
or
aaa
loope
mov
dec
xor
mov
outs
jo
je
pop
das
aaa
lods
fisubr
aas
dec
scas
enter
cmp
push
push
jb
cmp
cmps
or
lds
inc
xor
call
sub
(bad)
in
pop
xlat
aas
adc
inc
add
xor
push
or
adc
stos
or
aaa
inc
cmp
jne
add
xor
cmp
jg
xlat
or
lahf
push
and
or
xor
ror
fs
fwait
ret
out
cwde
adc
sti
pop
shl
aaa
scas
dec
js
mov
jle
pop
push
dec
mov
xor
aas
pop
adc
push
out
mov
lea
mov
ins
sub
int3
(bad)
xor
pop
and
das
dec
adc
scas
(bad)
imul
out
push
outs
pop
fwait
inc
xchg
xchg
stos
add
push
pop
mov
scas
mov
pop
dec
ins
les
mov
add
inc
bound
out
vcvtps2pd
(bad)
fwait
lods
fcom
aas
dec
(bad)
push
push
sbb
dec
inc
clc
cmp
xchg
div
jo
xlat
inc
pop
cmp
add
jmp
pop
les
scas
cmp
jo
cmp
pop
push
aaa
xchg
mov
mov
adc
and
imul
aad
dec
outs
adc
sbb
sub
push
push
inc
loop
mov
data16
jae
mov
(bad)
(bad)
mov
cmps
das
mov
dec
ja
mov
dec
mov
xlat
out
xchg
mov
mov
call
lea
inc
rcl
ret
adc
jo
xchg
xor
arpl
push
aaa
xor
sbb
pop
sbb
dec
aas
mov
sbb
addr16
popf
xchg
arpl
gs
dec
call
xor
cwde
and
push
cmp
lods
jbe
outs
ja
arpl
test
test
das
dec
outs
nop
(bad)
adc
xor
xor
call
mov
ss
sub
mov
dec
aas
dec
add
add
pop
add
js
lds
out
inc
ss
xchg
stc
bound
push
das
sbb
push
or
xchg
les
or
mov
xchg
nop
pop
mov
push
inc
out
inc
leave
adc
push
ficomp
ja
out
xchg
add
ds
xor
inc
push
sub
lods
xchg
scas
mov
data16
mov
dec
sub
(bad)
cmp
xor
stos
jmp
bound
mov
pop
mov
or
inc
and
push
out
loopne
mov
xor
xor
stc
add
loop
push
mov
inc
scas
femms
call
add
(bad)
push
pop
xor
(bad)
add
das
inc
jo
div
test
popa
xor
jb
fidivr
push
shl
lea
mov
pop
adc
xor
xor
js
inc
cs
daa
mov
push
(bad)
cmp
fld
adc
sub
cmps
or
bound
test
push
push
push
daa
aaa
loope
xchg
xchg
xor
jnp
scas
prefetch
jle
pop
stos
sub
add
xor
add
push
xor
sub
inc
adc
ins
div
cmps
xchg
sbb
xor
xchg
iret
xor
mov
xchg
(bad)
push
(bad)
arpl
inc
xor
push
xor
pop
leave
aaa
aaa
aaa
leave
adc
adc
aaa
ss
mov
es
xchg
iret
push
jb
pop
xor
jbe
push
xchg
lahf
mov
sbb
aas
ss
xchg
sbb
adc
xchg
aaa
dec
leave
adc
mov
xor
test
cmps
xchg
iret
ror
cmps
adc
jo
ja
in
pop
leave
xor
mov
nop
and
ss
jnp
push
xor
enter
shl
push
cmp
mov
jmp
dec
adc
or
out
xor
unpckhps
push
inc
fisub
cmp
dec
jns
jne
jecxz
mov
das
nop
dec
xor
in
add
cmp
lea
adc
xchg
or
push
enter
test
mov
jbe
sti
cmps
xor
outs
cmps
xor
pop
inc
inc
xor
daa
or
iret
xor
xor
ins
sub
mul
jo
xor
xor
pop
jne
scas
mov
pop
div
xchg
xor
ja
sub
xchg
(bad)
inc
cmps
(bad)
packsswb
in
and
dec
loopne
pop
mov
inc
dec
dec
jae
lods
lods
and
push
dec
push
dec
or
in
inc
in
addr16
push
dec
push
sub
out
jp
mov
loopne
sti
inc
push
sub
mov
add
cmp
pop
lods
and
(bad)
pop
stc
and
mov
dec
add
in
push
push
inc
sub
push
cmp
or
lods
inc
pop
or
push
add
in
sub
push
ins
adc
and
icebp
and
inc
retf
push
or
jno
out
add
push
imul
dec
mov
mov
or
sub
sbb
ficom
add
ja
mov
push
mov
aas
ins
mov
ins
add
push
(bad)
fbstp
fidiv
add
pop
das
dec
cmp
outs
pop
test
mov
sub
bound
push
dec
and
out
mov
inc
sar
rol
cmp
sbb
movs
and
jmp
xchg
jne
mov
aas
les
and
aas
cmp
mov
add
sub
ret
xor
mov
lods
ss
daa
cmp
mov
or
adc
or
pop
cmp
xchg
xor
xor
dec
adc
mov
leave
push
xor
xor
sbb
cmps
addr16
cmp
setb
pop
add
nop
cmp
sub
and
add
jb
repnz
add
xor
xor
pop
add
ss
pop
and
repnz
add
pop
inc
jb
sbb
aaa
nop
dec
pop
leave
aaa
jb
cmp
lahf
cmp
sbb
imul
int
and
cmp
dec
push
xchg
stos
cmp
push
sar
call
addr16
test
iret
ja
pop
dec
mov
dec
pop
sbb
jg
mov
test
xor
mov
inc
inc
out
pop
fnclex
add
das
push
in
dec
sbb
aas
dec
rcl
jb
push
aaa
(bad)
sar
sub
cmps
mov
push
aas
scas
xor
bound
pop
dec
or
retw
test
aas
dec
adc
ret
add
adc
or
adc
iret
cmp
xor
mov
loop
pop
cmp
aad
iret
xor
and
push
mov
daa
bound
lock
or
push
ror
ficom
xor
test
dec
loop
push
movs
outs
fbstp
das
push
pop
das
or
shl
aas
out
(bad)
push
fcmovnbe
inc
pop
iret
xchg
push
aaa
jo
outs
mov
jecxz
pop
inc
mov
cmps
xorps
pop
adc
and
arpl
ins
rcl
aas
pop
inc
xchg
mov
sbb
dec
dec
push
add
sub
into
rcl
aaa
sub
imul
scas
call
add
repnz
inc
adc
pop
lahf
test
xor
push
pop
adc
jo
fidivr
imul
loop
sbb
xchg
imul
shr
(bad)
pop
mov
das
and
dec
rcl
xlat
dec
fmul
mov
sbb
test
iret
or
push
xor
pop
or
dec
scas
adc
test
add
adc
adc
mov
iret
cmp
and
ss
ror
adc
xor
cwde
fsub
in
pop
push
sbb
adc
push
push
jmp
enter
outs
mov
pop
pop
rol
mov
xchg
div
jb
xor
and
xor
xor
inc
jb
cmp
xor
ss
bound
xor
jmp
pop
jg
mov
inc
adc
add
cmp
and
rcl
push
add
adc
push
and
push
and
add
pop
(bad)
das
lahf
sub
push
ins
mov
pop
fwait
sbb
daa
or
dec
fistp
pop
push
push
imul
dec
sub
or
aas
push
jae
in
lods
ss
dec
dec
cdq
xor
scas
das
imul
xlat
inc
cmp
sbb
push
lahf
fimul
ins
inc
inc
xchg
cmp
or
xor
adc
mov
pop
(bad)
out
inc
inc
mov
adc
xor
xchg
sbb
adc
or
aaa
push
mov
cmps
and
fldcw
sub
jae
dec
(bad)
adc
inc
pop
or
add
dec
fisttp
add
push
test
ds
and
or
aam
push
xor
dec
mov
(bad)
sub
test
movs
xchg
pop
dec
dec
iret
int
pop
sub
mov
ja
push
mov
mov
scas
or
xor
nop
or
or
or
mov
mov
(bad)
pop
push
(bad)
pop
sub
and
ins
ficom
enter
fwait
sub
fwait
sbb
or
mov
and
clc
fist
mov
jmp
fimul
and
test
(bad)
loopne
movs
push
repnz
aaa
out
or
rol
inc
loop
add
fcom
push
push
push
fs
pop
jmp
ret
test
cmp
mov
(bad)
pop
and
clc
pop
in
arpl
cdq
mov
mov
pcmpeqb
sub
movs
xchg
mov
push
push
(bad)
sub
mov
adc
pcmpgtd
je
(bad)
jne
push
aam
add
mov
movs
fisub
sbb
fnstenv
loope
mov
push
cmp
adc
fadd
adc
jae
jp
mov
or
jne
sbb
cmp
aam
mov
sbb
jne
jne
ja
ror
push
fiadd
loop
ror
shl
or
ss
ins
pop
aad
jge
lods
popa
adc
add
xchg
ror
mov
test
or
sbb
xor
add
xor
xchg
jno
enter
or
push
jmp
jno
jg
or
cwde
dec
push
loopne
cmp
les
mov
outs
adc
push
sub
cmp
mov
leave
inc
repz
rol
pop
jb
popa
ror
ret
or
jno
push
sar
or
inc
les
inc
nop
popf
push
xor
pop
and
leave
div
xor
jae
sub
test
sahf
push
pop
mov
mov
mov
es
ja
out
cmp
or
shl
into
es
push
adc
fsubr
pop
and
or
rcl
lods
in
xchg
adc
mov
call
(bad)
push
imul
leave
push
jecxz
sbb
and
ror
mov
mov
dec
and
mov
test
ins
cmp
fdivr
adc
fadd
sahf
movs
ror
add
mov
sti
inc
mov
inc
rol
sar
sub
cmps
ret
pop
in
int3
(bad)
cwde
dec
jo
sub
mov
(bad)
mov
inc
(bad)
cmp
(bad)
push
inc
push
sbb
call
dec
jle
daa
cmp
xor
xchg
push
stos
shr
bswap
(bad)
add
or
push
fdivrp
push
cmp
std
sbb
popa
jge
(bad)
hlt
(bad)
push
pusha
fstp
pop
or
push
adc
ja
mov
rcl
mov
xchg
pusha
jbe
dec
data16
sub
(bad)
je
inc
xchg
or
call
xchg
lods
(bad)
(bad)
(bad)
rol
(bad)
jmp
es
enter
or
add
js
popf
mov
mov
sbb
call
sbb
mov
push
shr
or
imul
movs
ins
mov
xor
and
xor
mov
mov
and
adc
cmps
movs
or
mov
ja
adc
out
mov
add
leave
or
in
or
jb
lods
lods
fiadd
or
sub
adc
cdq
jecxz
jae
adc
or
xchg
out
jne
cmp
out
sbb
add
call
movs
shr
sbb
and
in
test
push
stos
mov
fcomp
fnstsw
stos
xchg
adc
ret
test
pop
mov
mov
adc
inc
retf
push
js
inc
sub
sbb
push
out
mov
dec
shl
and
shrd
(bad)
or
inc
fwait
inc
pop
and
into
jmp
jge
sub
cmp
fcomp
jae
mov
sti
aam
and
cmp
(bad)
adc
ret
or
pusha
in
xchg
adc
xlat
jmp
pop
dec
into
mov
inc
aaa
ret
clc
aaa
test
jl
pusha
jmp
cmp
ins
pop
adc
mov
pushf
repnz
mov
sbb
xor
push
add
mov
loopne
movs
jns
or
add
mov
push
xchg
das
dec
add
add
add
jns
add
or
mov
jp
dec
push
push
rcl
in
mov
repnz
enter
lock
add
adc
mov
and
inc
jl
jns
sub
xor
enter
call
pop
inc
das
inc
mov
jg
push
test
jbe
push
shl
nop
cmp
call
inc
bswap
inc
repnz
add
add
push
movs
sub
xchg
stos
pop
popf
adc
fcomp
and
jns
seta
or
sahf
aaa
dec
fadd
lea
adc
sar
jge
call
push
push
pop
fimul
or
ret
fmul
popf
int3
adc
push
pop
dec
or
fs
mov
sub
(bad)
nop
push
mov
clc
or
push
mov
daa
sub
add
dec
popa
jb
(bad)
fwait
jge
or
fnstcw
movs
push
mov
popf
xchg
or
stc
mov
lods
fcomp
pop
retf
xchg
push
sbb
loope
dec
jb
xchg
mov
jmp
(bad)
loope
mul
push
xor
add
iret
sahf
out
aam
add
jno
adc
js
lock
(bad)
mov
and
cmp
push
mov
and
and
lock
out
mov
push
mov
int
and
movnti
adc
test
and
pop
xchg
mov
ror
(bad)
(bad)
ins
imul
or
sub
jno
(bad)
fcom
ins
sar
dec
sub
cmp
cmp
dec
mul
out
sbb
or
ins
mov
(bad)
fbld
mov
sbb
xlat
mov
or
sbb
cld
lea
(bad)
mov
sbb
push
cs
int
add
inc
test
in
lahf
inc
lock
dec
and
jg
sub
shl
js
or
aaa
mov
std
or
cmps
xlat
(bad)
je
mov
and
adc
repz
sub
adc
mov
jnp
adc
fld
xchg
or
loopne
shr
push
mov
xchg
in
sub
loopne
inc
xchg
ss
inc
cmp
mov
jle
add
lock
inc
add
xchg
rol
xchg
repz
daa
aas
or
push
push
sahf
xor
push
outs
pop
js
mov
pusha
pop
or
idiv
xchg
dec
xor
js
xor
xchg
es
xlat
test
jnp
push
int
mov
adc
mov
inc
mov
push
mov
adc
cmps
or
sbb
mov
rol
xchg
inc
stos
or
fs
xchg
push
movs
dec
fmul
frstor
das
pop
shl
mov
das
jle
out
mov
adc
sbb
jecxz
lods
ret
sub
inc
inc
call
sub
leave
and
test
test
pop
aas
les
or
arpl
addr16
cmp
dec
pop
not
push
not
test
das
mov
cmp
or
test
repnz
inc
ss
fist
pop
and
sbb
and
sub
pop
pop
not
sbb
rcr
ss
xor
push
push
add
sbb
popa
dec
stos
pop
cmp
jns
or
push
dec
(bad)
into
je
xor
fiadd
adc
retf
sbb
loope
stc
lock
pop
inc
and
fisttp
push
(bad)
sbb
call
sbb
dec
mov
xor
push
jno
imul
ins
test
scas
dec
push
mov
dec
dec
imul
sub
add
mov
mov
fwait
xor
lea
cmp
inc
pop
pop
add
mov
push
mov
sbb
add
sbb
mov
mov
or
jo
or
inc
mov
xor
loope
outs
cmp
(bad)
into
or
or
inc
test
in
xor
add
sbb
shl
retf
sub
ins
movs
or
inc
mov
add
int
loope
pop
cld
mov
pop
push
je
dec
push
pop
retf
and
adc
or
repz
jp
lods
leave
inc
pop
inc
retf
push
add
sub
xlat
ss
push
shr
lock
add
mov
daa
pop
nop
xor
and
xchg
out
mov
in
push
and
xchg
in
xor
xor
mov
mov
cld
ret
fchs
gs
lea
jmp
les
fld
adc
jp
clc
jno
in
pop
or
and
xchg
and
ja
add
xchg
jno
outs
pop
add
dec
jnp
jns
daa
or
adc
loopne
fcomp
add
enter
push
or
adc
or
aad
dec
pop
inc
sub
mov
std
push
or
adc
push
cwde
(bad)
in
es
push
xchg
mov
rol
mov
mov
adc
dec
shl
sub
loopne
and
ret
test
(bad)
jns
ret
lods
cmp
ins
leave
add
dec
sbb
mov
loopne
lock
sbb
stos
or
ins
test
push
call
or
jmp
mov
out
fisub
sbb
push
imul
add
lods
sar
add
inc
je
mov
psubsb
test
rcr
les
push
pop
jmp
push
jbe
inc
fdiv
xor
add
pop
jmp
pop
test
and
xor
inc
mov
jns
mov
lock
xor
sbb
stc
ds
jno
sbb
or
fisttp
push
cmp
jmp
xor
push
adc
adc
pop
inc
pop
aad
outs
pop
je
and
xor
push
sbb
sub
add
xchg
adc
mov
jl
jb
push
push
push
mov
dec
add
push
sbb
pop
add
push
xchg
hlt
or
movups
mov
mov
or
pop
cmp
(bad)
pop
pop
and
push
dec
mov
dec
fs
jno
adc
test
push
dec
push
dec
and
add
jge
add
ret
mov
rol
movs
(bad)
push
ret
les
cmp
pop
mov
jmp
push
cs
jbe
mov
xchg
jno
add
xchg
and
sbb
scas
in
xchg
xor
aaa
neg
or
sbb
cmp
sub
mov
sub
shl
shl
cmps
adc
adc
enter
sbb
aaa
pop
xor
mov
add
jmp
and
inc
mov
addr16
mov
push
fdiv
cs
add
je
cs
ret
sbb
dec
mov
cdq
jbe
gs
sub
inc
push
pusha
jg
mov
mov
in
xchg
push
fst
xchg
pop
or
hlt
push
jno
add
mov
inc
lods
add
call
or
or
shr
adc
adc
push
sub
pop
sub
outs
or
adc
iret
mov
hlt
rol
retf
(bad)
mov
aaa
or
add
addr16
jno
push
pop
inc
or
jo
cmp
inc
pop
shl
adc
mov
push
cmps
pop
mov
pop
jg
pop
and
cdq
push
push
add
inc
and
adc
xor
lock
dec
push
pop
add
mov
ja
scas
xchg
add
push
mov
sti
mov
pushf
lea
shl
mov
(bad)
dec
lock
bound
js
xor
xchg
jnp
xchg
or
ins
rol
lds
cld
mov
fsub
inc
rcr
add
fwait
imul
xor
mov
cdq
js
mov
popf
and
fwait
and
or
outs
dec
pop
add
gs
mov
je
clc
xlat
mov
add
xchg
mov
rol
in
xor
hlt
jmp
add
mov
fadd
xchg
mov
arpl
stos
jg
ret
nop
sbb
jns
sbb
fadd
or
push
adc
(bad)
loopne
enter
in
jmp
inc
or
xor
popf
sbb
lods
or
xchg
and
or
add
inc
or
cmp
xor
imul
test
or
push
pop
pop
and
dec
mov
inc
and
jbe
repnz
enter
or
cmp
out
pop
inc
sub
xor
pop
cmp
gs
and
add
push
into
jno
bound
test
jne
mov
mov
mov
mov
xor
inc
mov
or
movs
dec
adc
pop
pusha
ins
or
inc
xchg
shr
adc
in
sbb
into
aaa
jae
dec
sub
movs
cmp
adc
inc
mov
cmp
cmp
mov
imul
sbb
bsr
outs
jp
enter
xchg
cmp
bound
or
scas
xchg
and
fisttp
or
mov
rol
push
test
aad
std
sbb
les
push
repnz
sub
and
push
and
fwait
dec
inc
xor
pop
add
dec
add
xchg
push
jb
popa
sub
call
xlat
clc
sti
jne
cmps
ins
jne
sbb
push
jns
push
add
and
dec
sbb
outs
bound
xor
mov
xchg
imul
hlt
popa
sar
mov
push
repz
maskmovq
test
inc
jle
or
adc
push
test
je
xor
stos
shl
pop
sub
add
es
sub
stos
leave
mov
mov
dec
sbb
or
and
add
sub
add
push
add
and
out
in
dec
enter
and
dec
adc
adc
loopne
mov
retf
xchg
mov
xor
gs
fwait
jl
xor
dec
adc
lahf
or
cs
sbb
pusha
add
inc
mov
adc
jg
or
popf
and
and
pop
popf
xchg
or
mov
mov
or
push
dec
and
or
dec
cmp
sub
mov
and
inc
push
add
inc
adc
inc
inc
test
xchg
cmp
push
sub
enter
and
mov
dec
jle
(bad)
nop
cdq
inc
and
or
fucomp
adc
adc
and
xchg
adc
aad
xor
sbb
inc
xchg
mov
in
cmp
sar
adc
rol
das
clc
push
xchg
mov
aad
outs
fbld
das
fst
hlt
inc
mov
hlt
mov
mov
icebp
xchg
add
add
inc
or
push
jbe
ins
cmp
inc
add
adc
sub
mov
cmp
lea
pop
popa
mov
in
fisttp
inc
adc
mov
enter
add
arpl
adc
rcl
mov
icebp
inc
push
aaa
shl
ja
xchg
call
adc
cli
inc
push
push
loop
sub
loopne
or
push
test
sbb
stos
in
mov
push
rcl
clc
xchg
push
mov
adc
daa
fmul
aad
xor
jae
call
or
sbb
cmp
cmp
jmp
mov
aam
add
push
mov
mov
xor
jle
cmps
sub
int
xlat
mov
jns
adc
pop
pop
clc
mov
sub
aas
enter
mov
push
clc
pop
mov
addr16
rcl
and
repnz
clc
dec
sub
push
push
xchg
mov
int
and
adc
or
ins
jne
fs
lea
mov
add
cmp
push
nop
pop
xor
and
repnz
aam
call
sbb
shl
rcl
or
outs
in
xor
adc
int
or
push
lar
ins
add
movs
add
jle
ror
aaa
es
dec
sbb
add
xchg
cld
sub
fadd
jle
jns
cwde
or
pushf
add
or
push
daa
xchg
cdq
sar
pop
adc
adc
inc
xor
push
ret
aaa
push
adc
xchg
mov
xchg
pop
jle
rol
jl
adc
dec
adc
pop
add
nop
ficom
pop
cmc
sbb
dec
push
jmp
add
aaa
nop
mov
dec
scas
inc
call
sbb
and
add
xchg
sub
loope
jge
rcl
push
sbb
call
int3
mov
add
add
mov
sub
cwde
(bad)
aam
xchg
dec
mov
loopne
stos
enter
jl
push
les
or
shl
adc
repnz
jae
mov
loope
xor
push
sar
gs
mov
(bad)
dec
jp
dec
xor
xor
imul
call
adc
dec
cwde
ins
pop
adc
or
sub
nop
sbb
bound
es
test
mov
outs
or
push
adc
xchg
test
add
sbb
and
dec
ret
push
add
xor
xor
add
xor
outs
xchg
ins
xor
les
iretw
inc
xchg
mov
call
push
mov
shl
dec
add
pop
in
mov
push
xchg
pusha
push
call
jae
and
loop
(bad)
pop
es
mov
pop
sub
movq
jbe
and
and
sahf
mov
adc
into
inc
pushf
xlat
ss
and
cmps
and
sub
fiadd
cmps
jle
adc
add
inc
and
dec
das
loopne
popa
sub
shl
cmp
rol
mov
adc
xchg
outs
adc
dec
dec
sbb
pop
inc
xor
add
or
pop
ret
pop
adc
push
lods
test
xchg
rcr
outs
pop
ins
pusha
ja
push
add
pop
mov
mov
call
idiv
cmp
xchg
mov
retf
mov
addr16
pusha
jo
sbb
popf
retf
and
xor
push
xor
fs
and
xchg
(bad)
push
sbb
es
retf
push
repnz
add
and
inc
fist
dec
add
das
mov
rol
cmp
mov
inc
and
add
pop
dec
and
popa
enter
inc
jo
sti
gs
movs
xchg
rol
inc
cmps
push
or
cmp
jp
and
jne
and
movs
ja
or
lea
and
push
dec
nop
jmp
mov
adc
adc
push
push
bnd
sub
cmp
rcr
jl
ficom
inc
lods
pop
idiv
or
push
jg
sub
jo
dec
push
jecxz
das
xchg
mov
sbb
dec
mov
test
fild
fcom
stos
and
popa
mov
adc
lds
inc
ror
movs
jno
xor
cmps
movs
in
fidivr
rol
sbb
fiadd
scas
ja
inc
cmp
xor
dec
lods
inc
push
div
mov
xlat
(bad)
mov
sbb
ja
mov
sub
push
push
adc
dec
lds
retf
ret
sub
iret
stos
lods
fs
mov
adc
dec
or
xchg
pop
pop
icebp
test
push
je
enter
sbb
cmps
adc
xchg
adc
sub
mov
add
lock
cmp
jmp
cld
pushf
sbb
or
push
bound
push
mov
aaa
les
shl
stos
pop
inc
cmp
or
out
inc
movs
retw
ror
icebp
shl
push
imul
sub
sub
inc
sub
add
xor
fmul
dec
adc
test
cmp
mov
adc
adc
(bad)
ds
add
cmp
mov
sub
(bad)
out
inc
call
pop
ss
mov
ds
add
mov
sub
movs
mov
mov
mov
daa
pop
or
add
and
out
bound
dec
sub
xchg
sub
or
push
ins
inc
push
jmp
push
push
jns
sub
ins
das
popa
sbb
stc
test
push
lods
adc
inc
pop
inc
mov
push
adc
fadd
pop
sbb
lahf
daa
xchg
adc
push
inc
or
inc
(bad)
cmps
add
inc
nop
jno
jge
shl
inc
and
pusha
mov
loop
in
sub
dec
punpcklbw
mov
pop
shl
pop
daa
inc
sub
popf
mov
cvtps2pi
dec
sbb
rcl
sub
add
or
xor
cmp
push
sbb
push
out
out
or
xchg
push
test
mov
xor
out
ins
cmp
imul
pop
sub
fucomp
pop
sub
and
dec
push
nop
sub
sub
add
cmps
jns
sub
push
cmp
xor
pop
ss
xchg
or
add
jmp
or
dec
pop
sub
or
xor
mov
ss
cdq
inc
nop
test
ret
aaa
in
add
push
or
das
not
jl
sub
cmp
fsub
cmp
fwait
cmp
sub
adc
mov
das
cmps
push
dec
pop
sub
loopne
das
mov
(bad)
jae
sub
add
cmp
and
nop
test
push
aad
add
call
push
test
mov
or
inc
and
shl
ret
popa
push
push
push
pop
inc
hlt
ret
mov
ins
call
xlat
and
inc
cdq
xor
mov
enter
jae
lods
jbe
adc
pusha
bound
bndldx
xchg
xchg
mov
or
pop
ja
ins
and
aad
dec
xor
sub
sar
add
pop
and
or
nop
sbb
(bad)
add
sbb
mov
lock
sub
cmp
sbb
xchg
add
(bad)
pushf
call
sub
and
and
pushf
mov
and
popa
and
sar
mov
out
xor
mov
jecxz
inc
sbb
std
test
jno
addr16
fsubr
inc
push
enter
comiss
aas
test
test
pop
pop
push
push
call
adc
inc
jmp
xchg
mov
popf
scas
and
sbb
imul
sbb
enter
add
dec
cmc
es
sar
sbb
loopne
dec
repnz
dec
jle
adc
add
or
mov
pushf
jae
xor
push
mov
inc
and
lock
push
push
popa
and
imul
push
mov
dec
mov
dec
fiadd
pop
arpl
outs
ja
xor
movs
add
in
xor
xor
mov
movs
mov
sbb
fstp
shl
jne
mov
(bad)
dec
xchg
sbb
loopne
enter
pop
or
outs
inc
ret
xchg
jb
arpl
push
clc
movs
and
hlt
mov
pop
scas
mov
int3
sub
dec
sbb
jge
xor
pop
push
push
adc
data16
add
pusha
or
fst
dec
test
dec
add
sbb
addr16
(bad)
push
outs
pop
pop
test
(bad)
xor
jecxz
inc
sbb
add
and
jmp
jns
add
xchg
mov
mov
push
pusha
and
mov
push
push
test
push
(bad)
aad
add
hlt
sub
lock
sbb
jne
sbb
cmp
jne
sbb
ins
and
sar
jl
mov
add
mov
add
aam
add
fdiv
mov
das
and
pop
dec
enter
or
jne
mov
lahf
adc
rcr
ins
lods
and
add
dec
imul
and
pop
ret
push
shl
nop
xor
or
pop
mov
ret
daa
pushf
xchg
or
cld
add
push
inc
add
mov
lock
jno
sbb
add
test
mov
cmp
ss
lahf
test
xchg
add
xor
ins
or
jle
(bad)
adc
fdiv
ret
mov
fcom
loopne
mov
lods
adc
nop
lods
in
sti
or
cmp
mov
mov
mov
pop
(bad)
xchg
rcl
or
xor
pop
jbe
or
inc
adc
or
sti
sub
jae
pop
fisubr
popf
add
mov
test
hlt
and
inc
loope
in
xchg
aaa
pop
ins
or
sub
sub
pop
arpl
adc
sub
add
mov
lods
inc
xchg
in
xor
mov
pop
jo
sbb
add
and
mov
push
jl
gs
push
cdq
mov
push
xor
mov
add
das
mov
jmp
les
lds
jb
out
mov
es
(bad)
out
add
jb
jl
fwait
jecxz
movs
pop
(bad)
aas
ins
call
lahf
imul
test
fild
sar
fld
faddp
mov
sub
xchg
sti
ja
add
inc
or
pop
(bad)
xlat
inc
aaa
(bad)
mov
pop
push
and
dec
nop
and
sbb
push
jg
movs
stc
sub
dec
push
inc
out
daa
sub
adc
sub
(bad)
cmp
ins
js
sbb
lock
lea
stc
or
test
mov
cmp
imul
inc
add
jge
jne
jne
dec
out
mov
ins
mov
daa
movs
enter
dec
cmp
aas
inc
push
mov
add
inc
pop
xor
jmp
aaa
xor
jbe
leave
xchg
lods
pop
call
pop
loope
lea
jp
(bad)
push
cmps
inc
push
test
jl
pushf
add
or
dec
push
adc
push
or
inc
jg
and
pop
mov
push
and
dec
test
inc
add
push
gs
jge
mov
push
push
mov
jne
adc
retf
inc
inc
adc
add
mov
add
loopne
cmp
das
adc
mov
addr16
or
cs
mov
clc
push
push
sub
test
shl
mov
stos
cld
sub
mov
mov
sub
nop
hlt
ds
popf
xor
or
adc
lods
inc
and
and
out
nop
lahf
mov
bound
push
(bad)
imul
dec
test
mov
xchg
inc
push
rol
and
jmp
xchg
jbe
aad
push
scas
sub
and
inc
jne
mov
arpl
cmp
push
adc
push
inc
xor
and
mov
xchg
ins
daa
jae
xchg
fisttp
or
sub
aam
pop
mov
ret
xor
test
dec
inc
jmp
cdq
adc
adc
(bad)
cmps
inc
arpl
jnp
or
adc
inc
hlt
ss
aas
outs
leave
ret
adc
push
lock
jne
lods
in
push
and
test
pop
push
fisttp
(bad)
pop
push
das
sub
cmp
mov
(bad)
push
xor
xchg
ret
add
test
lods
lahf
cli
ror
rcl
mov
pop
cwde
push
or
or
rol
mov
sbb
push
and
inc
cmp
push
inc
push
mov
and
pop
push
mov
xor
bound
sbb
dec
add
add
dec
inc
sub
push
std
sbb
xchg
fldenv
jge
xor
cmp
fisubr
add
mov
jo
jbe
test
pop
jmp
or
xor
add
mov
lea
ret
iret
xor
dec
rol
cmp
adc
cmp
sbb
adc
mov
sub
outs
mov
popf
mov
out
sbb
rcr
pop
in
inc
in
pusha
test
lds
jne
xchg
je
call
pop
cmps
test
mov
sbb
fsubr
add
push
mov
mov
sub
or
xchg
inc
inc
push
scas
imul
jbe
cmp
inc
(bad)
mov
and
adc
shr
jl
je
ret
inc
jg
retf
cli
mov
mov
inc
enter
outs
xchg
fimul
inc
dec
inc
popf
and
inc
imul
cs
(bad)
push
add
mov
rol
gs
into
popf
fdivr
ja
mov
jbe
push
push
movs
add
addr16
xchg
iret
loope
call
popa
fcomp
sahf
test
pop
xor
add
aaa
add
inc
in
cmps
mov
add
push
outs
mov
xchg
or
xchg
shr
push
inc
xor
xchg
lahf
mov
fist
sub
nop
pop
cmp
adc
add
add
jb
xor
jg
arpl
movs
gs
mov
dec
mov
xor
bound
xchg
stos
fdivr
add
in
in
xor
xchg
add
call
cdq
adc
xor
or
dec
dec
inc
nop
jo
add
das
cmp
adc
push
mov
in
ja
imul
push
dec
mov
lock
jne
jne
dec
rol
sub
imul
test
cmc
rcl
repnz
push
push
adc
rcl
int
inc
lds
adc
in
hlt
xor
in
mov
lods
clc
(bad)
mov
mov
imul
nop
ret
cmp
push
jl
icebp
inc
mov
inc
sbb
xchg
xor
adc
adc
pop
loopne
xor
cmp
nop
dec
cmp
in
je
test
xlat
push
jbe
dec
pop
jl
movs
or
mov
push
adc
mov
imul
push
outs
pop
cmp
and
add
sbb
pusha
cmp
fsubr
xchg
dec
and
enter
add
enter
fdivr
sbb
mov
ficom
adc
adc
and
ror
sahf
jp
push
cmp
adc
lock
pusha
adc
add
cmp
jne
and
popf
imul
ins
push
cmp
adc
dec
add
add
push
push
add
popf
dec
hlt
add
test
sub
mov
add
fmul
dec
pop
dec
shl
push
adc
(bad)
dec
jae
sub
or
push
pop
push
or
js
jge
mov
xor
add
adc
call
ficomp
into
shl
adc
push
or
das
aas
pop
daa
lock
dec
jmp
add
mov
push
mov
cmp
in
inc
or
pop
rcl
outs
ins
add
push
add
push
push
test
or
inc
dec
xor
out
cmps
push
in
ins
ins
cmp
in
mov
lods
dec
push
or
fiadd
cmp
call
mov
ins
add
out
sub
pop
xlat
and
pop
in
pop
push
pop
lea
dec
adc
dec
or
in
cmp
or
mov
xchg
mov
sbb
cwde
pop
mov
cdq
pop
dec
shr
dec
daa
jmp
push
dec
cmp
push
add
push
pop
xchg
or
add
lock
pusha
push
push
out
ficomp
push
pop
pop
push
dec
mov
popa
add
add
int3
add
inc
mov
sbb
xchg
shr
adc
lds
rcr
sahf
aaa
or
mov
mov
inc
or
lahf
or
shl
push
bndldx
enter
je
add
repnz
jo
push
add
jo
cmpxchg
mov
and
add
sbb
push
dec
pop
and
cmp
fild
cmp
cmp
inc
enter
inc
push
daa
inc
push
sub
push
dec
push
pop
xor
repnz
sbb
(bad)
and
push
mov
in
pushf
add
xor
bswap
out
call
adc
ja
sub
and
adc
push
dec
push
sbb
rcl
jbe
pop
sub
sahf
and
push
xor
push
ds
mov
pop
aam
sbb
add
imul
call
adc
outs
jp
rol
inc
aam
pop
inc
inc
pop
xlat
adc
pushf
xor
adc
and
ret
xor
inc
or
in
mov
and
add
je
in
mov
sub
div
outs
daa
aas
or
push
int3
jmp
sub
movs
jno
cmp
mov
or
push
push
test
mov
xchg
or
in
push
mov
pusha
ret
lfs
sbb
not
inc
push
pop
and
sub
jl
ja
loop
or
mov
xlat
or
cmps
push
push
and
fistp
inc
pusha
jo
fisubr
call
adc
in
add
add
push
(bad)
xor
mov
cmps
pop
xor
add
adc
adc
or
dec
push
out
or
ret
test
or
test
jno
jecxz
adc
mov
adc
lea
adc
or
imul
cdq
js
imul
(bad)
push
dec
popa
dec
jne
nop
aas
scas
into
lods
push
and
imul
add
out
dec
sub
nop
or
sub
add
dec
or
push
adc
call
push
or
adc
inc
sub
and
shl
inc
cmp
dec
mov
int
or
dec
or
adc
cmp
int3
or
pop
out
add
mov
fcom
inc
sti
sub
cmps
sahf
fsubr
or
jnp
push
add
in
sbb
mov
xchg
in
push
sub
sbb
push
xor
fucomp
pop
jo
add
jb
ins
popa
lea
pop
push
jl
mov
test
sahf
push
and
ins
movs
adc
xchg
ins
packssdw
lods
stos
or
mov
je
add
xchg
pop
pop
cmp
jbe
add
mov
xchg
js
or
push
retf
or
js
add
inc
ins
inc
int
inc
xchg
jge
stc
inc
add
or
inc
add
iret
dec
pop
sub
inc
adc
xor
or
and
push
cwde
repz
xlat
add
pop
adc
out
mov
inc
pop
js
shl
xchg
jb
jb
cwde
pushf
mov
jae
jb
xor
xlat
pop
xor
sub
push
jb
pusha
stos
sti
or
inc
xor
adc
inc
adc
jl
add
cmp
inc
jbe
sub
push
dec
enter
pop
and
inc
enter
popa
pop
sbb
add
jb
int
lods
mov
sbb
sbb
clc
mov
data16
dec
fs
push
cwde
inc
xchg
or
fcomp
dec
adc
sbb
sbb
movzx
nop
es
sbb
push
and
pop
inc
pop
test
and
or
xchg
push
dec
ffreep
test
lods
push
pushf
jp
test
leave
and
or
or
inc
pop
xor
pushf
xchg
pop
push
xchg
or
and
jge
add
sub
or
jo
mov
inc
adc
jmp
jno
int3
mov
inc
iret
push
inc
and
push
mov
cdq
mov
pop
push
add
dec
cmp
xlat
xor
(bad)
or
dec
push
push
rcr
inc
dec
or
jmp
dec
and
dec
test
add
mov
mov
shr
fild
adc
adc
rcr
es
dec
inc
inc
inc
push
dec
rcr
ret
and
sub
sub
xor
xor
shl
cmp
cmp
shl
push
mov
lods
cmp
pop
pop
or
xor
shr
ins
ins
push
mov
inc
add
out
add
or
inc
dec
push
inc
mov
scas
xchg
movs
popf
pop
rol
or
and
int
and
push
dec
and
cmp
mov
punpckhbw
mov
cmps
fwait
and
xor
enter
jg
add
jae
pop
shl
add
sbb
xchg
call
mov
or
call
stc
in
cmp
xor
mov
ins
loopne
fdivr
add
sbb
mov
sbb
inc
aam
hlt
inc
aam
mov
arpl
and
add
sbb
jecxz
adc
xchg
pop
popf
or
xor
sub
xlat
retf
in
ror
sub
pop
pop
mov
and
push
adc
mov
inc
int3
push
or
mov
and
dec
clc
sub
cmp
xchg
aaa
xor
add
mov
in
or
les
jle
push
add
retf
mov
repz
fiadd
push
adc
(bad)
(bad)
faddp
jle
fwait
jmp
aad
iret
test
pop
mov
imul
and
in
dec
rcl
dec
mov
ja
xor
mov
imul
push
adc
and
syscall
xor
call
push
scas
mov
and
adc
cdq
adc
pop
sbb
dec
and
inc
inc
inc
cwde
or
pop
adc
or
xchg
push
or
(bad)
dec
and
dec
scas
and
mov
clc
cs
jae
dec
xor
je
adc
xchg
xchg
nop
or
push
push
mov
mov
jb
adc
(bad)
(bad)
adc
mov
popf
imul
aaa
or
rcr
push
les
pop
xor
pop
inc
mov
pop
and
and
mov
xor
sbb
and
inc
mov
test
pop
jb
mov
cmps
popa
add
(bad)
sti
xchg
imul
add
inc
xor
xor
sbb
repz
mov
sbb
lds
jo
stc
xchg
or
pop
pop
pop
hlt
in
dec
push
in
mov
mov
or
mov
ret
sbb
lock
mov
in
cmp
jnp
pop
inc
sub
in
adc
imul
pop
stos
push
aad
add
pop
test
push
and
xchg
pop
movs
adc
enter
add
inc
and
or
mov
jns
imul
jmp
sub
sti
adc
aam
setg
daa
xchg
cmp
sbb
retfw
mov
pop
pop
inc
setp
(bad)
fidiv
inc
and
fs
js
sub
lods
pop
push
and
nop
mov
mov
jg
cmp
jnp
ret
or
in
or
inc
mov
cld
and
ss
jb
adc
(bad)
hlt
add
pop
jmp
or
test
and
adc
push
inc
dec
mov
fs
enter
addps
xchg
sti
ins
and
inc
pop
adc
push
mov
movs
push
test
xchg
cmp
and
popa
mov
sub
push
dec
dec
scas
(bad)
sub
add
sub
sub
pop
arpl
sar
mov
nop
push
mov
xor
cmp
sar
jo
mov
inc
test
and
or
test
mov
xor
mov
stc
and
in
loopne
add
loopne
nop
daa
imul
cld
mov
in
fcomp
test
and
lods
test
xor
adc
aas
push
outs
xchg
(bad)
push
aaa
test
xor
mov
in
pusha
dec
jbe
ret
(bad)
mov
repz
mov
or
and
mov
xchg
cdq
dec
fisub
adc
add
pop
inc
movs
popf
jl
jl
(bad)
inc
adc
cs
pop
mov
dec
nop
nop
xchg
sub
gs
xchg
cwde
cwde
imul
xchg
cmp
test
adc
cmp
mov
fs
jge
aaa
mov
adc
test
(bad)
icebp
push
pop
inc
inc
sub
(bad)
adc
test
test
sub
stos
and
or
das
pop
inc
mov
push
movs
mov
cli
dec
sub
fldenv
neg
jb
push
cld
mov
repz
jno
mov
fist
fiadd
mov
and
js
aam
jl
sbb
xchg
jl
lock
or
sbb
test
mov
xchg
xchg
gs
push
movs
mov
dec
test
and
popa
fstp
int3
jbe
repnz
push
push
repnz
pop
ins
push
add
mov
xchg
out
sub
mov
xor
jmp
rol
inc
imul
xchg
out
pop
movs
inc
pushf
pop
data16
mov
fisttp
cmp
mov
mov
jne
and
and
push
and
iret
or
pop
aas
add
adc
pusha
inc
and
inc
ja
add
dec
jmp
push
shl
inc
adc
push
mov
adc
in
dec
aam
dec
adc
cmp
iret
push
mov
push
adc
adc
les
and
add
pop
xor
adc
adc
and
xchg
mov
jle
or
mov
and
jns
sub
cld
clc
mov
enter
mov
nop
fs
popa
pop
imul
repz
cmp
mov
leave
je
cmp
jo
jb
inc
fwait
jns
jo
sbb
cmps
daa
and
or
push
jne
mov
push
and
xchg
not
call
addr16
aad
jae
test
pop
sbb
hlt
test
add
fidivr
push
mov
add
mov
and
adc
shl
cdq
sbb
inc
add
adc
inc
in
add
lea
sbb
mov
js
dec
mul
mov
mov
call
cmp
sbb
xor
sbb
ins
adc
xchg
adc
or
mov
dec
sbb
popa
in
mov
aaa
es
and
fsub
shl
fistp
xchg
imul
test
push
jae
scas
and
ins
push
add
add
inc
out
das
xchg
adc
loope
push
add
or
dec
push
test
push
inc
xchg
cmp
adc
(bad)
xchg
sbb
lahf
pop
inc
sbb
leave
js
cli
or
jge
sbb
mov
pop
and
ret
inc
test
push
xor
outs
add
inc
in
lock
sub
jb
or
dec
stos
lea
inc
sahf
or
cmps
jle
call
pop
cdq
fcom
add
jle
rcr
and
call
loopne
enter
shl
xor
add
inc
or
cwde
inc
pop
lock
xor
mov
pusha
adc
movs
inc
cmc
imul
mov
pop
lahf
push
pop
inc
icebp
dec
adc
dec
add
and
inc
add
ror
adc
rcl
or
imul
mov
jecxz
adc
(bad)
and
in
jl
adc
xor
rcr
xlat
(bad)
adc
adc
adc
ins
add
movs
je
and
je
jg
clc
test
xchg
pop
sub
push
or
and
xor
mov
in
in
xchg
(bad)
lods
(bad)
adc
cmp
rol
add
sbb
inc
push
or
dec
sbb
sub
or
js
push
sub
rol
fisttp
mov
adc
add
je
pop
push
sar
and
dec
add
int3
fst
pop
xor
inc
nop
mov
sbb
inc
mov
pop
inc
fisttp
dec
pop
popa
lods
mov
push
and
aad
xlat
xor
add
add
mov
ja
cdq
loope
mov
xlat
push
int
fnsave
ret
push
adc
rol
push
xlat
and
xlat
add
add
mov
mov
call
and
call
add
mov
pop
clc
inc
test
mov
mov
or
or
(bad)
lea
test
inc
xchg
or
cdq
jns
pop
xchg
and
mov
movs
push
pop
pop
or
pop
add
add
out
fs
or
xchg
popa
lds
add
jns
(bad)
or
cdq
loopne
xor
xor
xor
dec
or
xor
and
jns
gs
dec
xchg
or
ds
cmp
sbb
inc
pop
xor
ss
pop
and
fcomi
jecxz
xor
adc
nop
pop
and
xor
adc
jb
pop
and
sub
pop
enter
add
inc
in
add
and
push
adc
and
adc
test
(bad)
je
adc
pop
mov
in
call
jg
sub
je
out
sbb
rol
add
pop
mov
sub
arpl
mov
sbb
enter
inc
jae
sar
movs
xchg
cmp
pop
aam
pop
cmp
ins
aas
jg
adc
xchg
dec
mov
add
ror
adc
push
aaa
cmp
or
jmp
adc
std
xchg
test
mov
mov
adc
xor
sbb
or
ret
shl
pusha
or
addr16
shrd
js
and
mov
adc
jo
mov
inc
in
ret
out
retf
push
inc
imul
inc
cmp
pop
jle
daa
lods
pop
das
outs
push
xchg
sub
adc
mov
push
mov
aad
inc
cmps
(bad)
dec
push
pop
stos
add
ror
xlat
shl
test
mov
pushf
lds
mov
sbb
and
cli
push
xchg
and
lahf
adc
cmps
xchg
dec
mov
movs
ret
xor
and
dec
movs
or
lds
ret
and
xor
cmp
push
nop
data16
(bad)
xchg
neg
out
imul
sub
sub
xor
xor
cmp
cmp
out
imul
dec
rcl
not
les
jnp
mul
or
ret
idiv
int3
push
xor
and
nop
data16
or
xor
dec
or
nop
fcomp
imul
out
sbb
sub
out
imul
imul
cmp
xor
jmp
mov
add
push
stos
mov
iret
sub
or
out
push
stos
mov
retf
cmp
or
jmp
test
out
pop
imul
out
sub
nop
out
imul
imul
and
imul
out
dec
cmp
loopne
or
vaddsubps
inc
jbe
je
pop
inc
jmp
(bad)
cmp
es
dec
or
movs
sbb
repz
test
push
test
dec
adc
dec
jae
pop
xor
push
dec
jae
adc
dec
jae
xor
dec
push
and
inc
test
dec
jo
je
push
dec
jae
js
jl
dec
jae
xor
jmp
adc
in
cmps
inc
movs
jo
lock
and
adc
addr16
dec
sti
add
xchg
out
mov
loopne
mov
ret
pmulhuw
enter
clc
cdq
push
add
sahf
adc
and
fs
adc
and
sub
sub
mov
daa
loopne
push
or
int3
cmp
pop
popa
push
pop
add
inc
push
inc
pop
sbb
or
stc
mov
adc
pop
pop
and
xchg
add
sub
xchg
aad
xchg
sahf
mov
jno
hlt
or
outs
dec
jmp
sub
or
enter
xchg
cmp
sbb
push
test
ds
fldcw
mov
sbb
or
and
xchg
add
add
loope
xchg
push
test
push
jnp
mov
push
into
adc
dec
xor
and
add
outs
or
push
adc
cld
or
(bad)
push
dec
in
fcom
mov
lahf
ins
or
hlt
adc
(bad)
jl
mov
or
retf
ss
imul
jne
pusha
imul
call
or
pop
add
pop
xor
or
cs
add
lods
aam
aam
clc
jmp
test
xor
ins
dec
enter
xor
sub
inc
lock
and
inc
cmc
xor
pop
sbb
and
pop
and
in
or
repz
out
add
jle
cmp
mov
sar
retf
pop
int
out
mov
xor
js
mul
adc
test
push
retf
xchg
jg
fsub
hlt
sub
and
cwde
xor
pop
add
adc
bound
lock
cwde
test
pusha
movs
loope
inc
jo
push
inc
mov
mov
mov
hlt
in
or
pop
outs
shl
mov
cmp
fs
jl
add
jae
enter
stos
and
mov
xchg
push
stos
cdq
mov
ja
push
movs
add
xor
xor
stos
nop
pop
popa
pop
sbb
xor
pop
leave
rcl
imul
aas
das
adc
and
cmp
call
bound
pop
pop
pop
aaa
rcr
xchg
adc
arpl
or
push
xchg
out
lock
das
adc
jo
in
adc
pop
or
addr16
dec
add
inc
mov
arpl
dec
mov
or
xchg
adc
mov
add
dec
xlat
loopne
sub
adc
call
add
jl
pop
pop
and
jo
pop
pop
jne
popa
add
add
test
aaa
mov
add
add
add
popf
dec
nop
inc
(bad)
lock
sub
sbb
jo
outs
hlt
in
adc
or
inc
cmp
xchg
add
cmp
add
or
add
cmp
ins
jno
pushf
jmp
addr16
dec
aaa
inc
ins
loopne
xor
xor
mov
bound
add
lock
fsub
addr16
sbb
lods
add
sbb
mov
push
fsubr
adc
push
cmp
mov
sub
pop
lods
jnp
aam
test
rol
and
pop
dec
icebp
shl
mov
in
imul
ret
imul
pop
shl
nop
mov
int3
xchg
retf
sbb
or
les
fdiv
dec
je
inc
adc
hlt
add
sub
mov
pop
inc
add
nop
mov
sub
leave
int
scas
cmp
mov
nop
push
jno
pop
pop
mov
jne
call
sbb
xchg
int3
add
icebp
add
movs
push
mov
sub
sti
mov
sbb
lods
cmp
lods
inc
das
call
xor
dec
outs
xor
iret
push
add
call
fwait
dec
add
add
adc
pop
jb
(bad)
pop
sahf
daa
shl
ret
ret
add
xor
adc
dec
cmp
ret
mov
adc
pop
data16
call
popf
sub
cmp
jle
outs
inc
sub
sub
stos
hlt
stos
popa
test
mov
sbb
xor
push
(bad)
ret
jne
shr
dec
stc
(bad)
mov
push
mov
mov
xchg
inc
inc
push
mov
nop
sbb
xor
and
xchg
dec
cwde
and
xchg
in
mov
xchg
inc
inc
push
test
lods
or
in
shl
xchg
enter
sar
inc
mov
pop
mov
enter
cwde
int3
xchg
rcr
jb
aam
clc
fcom
mov
cmp
jns
in
loopne
pop
enter
mov
in
shl
xchg
inc
lock
sbb
(bad)
and
retf
and
nop
retf
add
aam
or
or
or
jb
enter
adc
cdq
sbb
clc
sbb
and
dec
mov
and
ja
enter
test
ror
and
(bad)
and
xor
xor
and
xchg
inc
in
and
lock
and
dec
push
add
les
push
inc
pop
jle
std
and
in
nop
retf
les
inc
push
sbb
pop
pushf
pusha
aam
enter
or
push
inc
ins
jl
enter
mov
cmp
and
test
in
xchg
inc
lods
mov
ret
outs
cmp
cmp
enter
jo
inc
xchg
je
mov
enter
sub
xor
inc
enter
xor
push
cmp
add
ins
push
outs
and
xchg
loopne
fs
and
sbb
call
enter
sbb
xor
cld
enter
mov
cs
cmp
xor
nop
xchg
inc
or
mov
loopne
enter
adc
adc
fs
jbe
test
push
sbb
and
and
shl
and
fs
mov
xchg
xor
rcr
ss
ret
dec
inc
push
mov
mov
inc
mov
cmp
add
enter
and
int3
inc
mov
jb
fs
enter
fsubr
int3
loopne
sub
nop
xchg
inc
pop
adc
xor
cmp
push
inc
push
and
nop
loopne
add
cmp
cmp
and
xchg
inc
inc
jo
mov
dec
in
adc
enter
push
dec
push
sbb
jb
js
lods
pop
nop
and
(bad)
mov
cmp
xor
mov
nop
call
jmp
xchg
and
xchg
xor
and
mov
mov
jb
pop
pushf
test
mov
xchg
movs
and
xor
cmp
aam
add
or
mov
inc
cmp
and
and
cmp
push
xor
enter
fs
and
nop
fs
sbb
inc
rcr
in
sbb
mov
xchg
enter
in
aam
xor
int
fdivr
cmp
mov
fsubr
mov
push
and
push
or
and
mov
inc
add
cdq
xor
mov
xchg
add
ud0
add
mov
add
add
add
sub
nop
ss
(bad)
iret
and
arpl
pop
adc
mov
sbb
inc
ins
bound
inc
sbb
inc
mov
adc
inc
outs
add
add
push
fist
je
push
push
daa
test
fcmovb
(bad)
mov
pop
ins
sub
outs
adc
adc
lahf
rol
bound
adc
dec
push
xor
addr16
and
sub
addr16
xor
sub
add
xor
mov
dec
and
sub
push
or
test
dec
addr16
add
and
ret
pop
mov
sbb
inc
sub
sbb
dec
out
mov
and
movs
pop
pop
add
cdq
mov
adc
imul
mov
aad
adc
pop
comiss
stos
test
outs
mov
or
test
inc
push
rol
mov
loopne
inc
xor
push
push
add
inc
and
adc
pop
mov
add
jae
daa
ins
pusha
dec
push
and
inc
or
sbb
inc
jae
cmp
dec
les
popa
push
jg
les
jbe
push
jmp
mov
xor
ins
sub
or
rol
add
dec
cwde
ss
pop
scas
or
lods
pop
stos
jae
retf
or
scas
adc
(bad)
sbb
sub
or
ins
dec
scas
mov
fs
adc
xchg
pop
jmp
mov
add
loopne
push
pop
test
test
mov
mov
fiadd
or
adc
(bad)
addr16
ss
mov
inc
or
push
mov
jmp
xchg
add
adc
outs
iret
push
xchg
pop
adc
sbb
dec
inc
adc
and
or
jecxz
mov
fistp
out
push
scas
mov
xlat
je
push
ins
or
fcos
cmp
xchg
add
aam
sbb
pop
dec
or
sbb
push
push
inc
sbb
xor
push
outs
push
sbb
aas
shl
pop
mov
and
jne
aaa
adc
add
mov
xlat
adc
mov
ins
push
cmp
(bad)
jae
ja
popf
jp
pop
ja
(bad)
xor
pop
outs
cmp
xor
adc
cmps
ret
dec
cmps
or
mov
xchg
pop
aam
or
jae
fistp
pop
push
push
inc
dec
push
popa
sbb
mov
xchg
or
fild
scas
add
or
aas
push
pusha
stos
out
(bad)
xchg
call
jo
mov
push
and
sbb
push
fadd
push
xchg
shr
mov
in
sub
aas
or
adc
xchg
out
add
js
addr16
sbb
or
(bad)
cdq
pop
test
push
lahf
adc
pop
add
mov
inc
pop
mov
add
mov
cmps
mov
mov
jg
sub
fild
push
movs
fisttp
mov
shl
cmp
leave
adc
xchg
imul
add
mov
in
ins
add
pop
add
push
iret
and
push
jg
mov
jle
adc
bound
pop
pop
popa
outs
push
mov
ret
xor
cmp
inc
(bad)
xchg
pop
ins
test
xor
fdiv
aas
pop
ins
scas
xor
out
fmul
out
adc
or
aas
or
sub
pop
push
dec
bswap
xor
ins
shr
pop
mov
ins
pop
add
push
inc
add
adc
imul
push
lods
addr16
outs
or
call
add
and
(bad)
retf
jg
ins
cmps
movs
sbb
xchg
dec
or
sub
dec
push
xchg
or
daa
xor
maxps
inc
add
push
add
push
add
outs
adc
adc
adc
jae
fs
pop
add
inc
daa
jg
xor
jae
and
mov
jae
and
push
out
pop
push
je
xor
inc
mov
test
mov
adc
les
pop
sbb
mov
sub
data16
push
sbb
sub
fcomp
pop
or
xor
sbb
daa
out
sub
popf
sub
inc
jl
sbb
sub
push
mov
enter
and
outs
sbb
test
pop
dec
add
adc
aas
mov
(bad)
mov
lods
xor
ins
sub
iret
xchg
iret
popa
and
add
push
lods
cmp
add
and
call
enter
stc
iret
int3
push
sbb
aaa
rcl
cmp
adc
dec
mov
jecxz
sbb
adc
or
or
aas
mov
cld
fucomip
repz
xor
sbb
add
sbb
cmp
and
out
fistp
pop
pop
pop
mov
push
movs
xor
cmp
aam
scas
mov
add
and
mov
test
inc
dec
xor
cmp
push
pop
ins
arpl
fisttp
cs
push
dec
dec
push
push
push
jmp
jo
dec
retf
cdq
push
push
mov
xlat
cmps
or
sbb
retf
or
mov
or
sub
rol
cmps
sub
jmp
cli
dec
xor
retf
adc
xor
add
or
add
ror
push
pusha
jns
add
ret
add
or
push
mov
xchg
push
push
inc
xor
mov
mov
mov
pop
push
push
or
cmp
lods
inc
xor
(bad)
push
js
xchg
sub
push
movs
rol
xor
sbb
jmp
and
ficom
dec
xchg
fwait
jne
xchg
add
in
imul
hlt
cmp
outs
adc
sti
mov
sbb
xchg
pop
lds
or
add
inc
(bad)
les
add
xor
cmp
mov
push
mov
xchg
or
cmp
(bad)
adc
pusha
jmp
mov
inc
ss
clc
(bad)
rol
scas
fcom
pop
les
dec
movs
sub
mov
pop
xor
sub
sti
push
fcmovb
mov
push
jg
ds
mov
jne
lea
push
mov
inc
pop
sahf
jecxz
push
mov
mov
and
push
daa
jg
repz
add
fs
adc
sbb
or
loopne
mov
(bad)
and
aad
(bad)
aad
or
in
or
xchg
lds
das
imul
xchg
jb
arpl
loope
inc
imul
sbb
dec
js
pop
add
adc
inc
mov
movs
xor
out
and
and
lods
movs
or
dec
ja
xor
cmp
ins
sub
and
push
push
pop
movs
daa
mov
jecxz
loopne
push
(bad)
jmp
mov
lahf
mov
fbld
inc
sub
fimul
sub
adc
sti
push
int3
fcmovnb
push
add
outs
dec
shl
xchg
xchg
adc
popa
fcom
push
lahf
pusha
jecxz
adc
add
out
dec
call
pop
mov
pop
imul
into
sbb
icebp
scas
pop
push
push
data16
push
jno
xor
in
ins
and
in
out
clc
xchg
js
add
popa
in
out
mov
aaa
adc
lgs
movs
ja
xor
ret
xchg
cld
gs
push
loopne
inc
(bad)
std
cwde
arpl
pop
and
or
imul
movs
loope
pop
mov
cmp
sbb
pusha
(bad)
xchg
lock
sti
lea
in
pushf
fld
push
jne
xor
mov
push
ins
push
repnz
add
test
adc
aam
cwde
leave
dec
xlat
push
cwde
sbb
sub
mov
xchg
test
int
in
mov
mov
adc
test
inc
or
adc
pop
ficom
push
daa
ins
lock
add
imul
(bad)
xchg
inc
xchg
adc
rol
adc
mov
mov
fwait
lock
push
push
mov
inc
or
cmp
sub
sahf
or
in
sub
outs
and
adc
imul
and
adc
mov
lock
dec
gs
fs
mov
xchg
pop
dec
lahf
arpl
sbb
cmp
xchg
push
nop
stos
or
movs
mov
outs
fstp
fadd
jns
das
ins
xor
fild
dec
adc
in
push
add
or
call
ins
jbe
ss
jbe
or
xor
adc
pop
dec
mov
jb
dec
scas
inc
fmul
push
es
inc
sub
mov
xor
push
or
mul
ret
ins
or
adc
adc
adc
mov
scas
adc
sub
out
repz
cwde
xchg
push
gs
push
adc
dec
outs
fnstenv
adc
in
cli
lds
leave
not
adc
rcl
mov
rcl
call
(bad)
and
adc
add
and
add
pusha
arpl
ins
sbb
stos
sub
mov
add
pop
xor
dec
ins
cmp
shr
inc
adc
or
inc
popa
int
(bad)
xchg
xor
mov
mov
xchg
sbb
push
push
add
push
sub
push
test
push
mov
push
int
fistp
and
push
mov
pop
and
or
push
or
push
push
jo
add
je
xchg
pop
cmp
xor
ins
push
push
pop
loope
or
rol
or
jp
sbb
mov
int
pop
push
sbb
or
jns
pop
rol
jne
pop
inc
imul
adc
push
push
cmove
mov
mov
pop
pop
daa
jbe
push
adc
das
mov
jmp
dec
add
movlps
(bad)
jne
mov
xchg
wrmsr
xchg
add
push
adc
fcomp
int3
mov
fcmove
test
cmps
out
loope
lock
in
js
pop
push
inc
nop
xchg
outs
mov
push
sar
jns
in
mov
push
call
in
clc
(bad)
push
and
push
mov
(bad)
push
(bad)
(bad)
sar
xor
mov
push
adc
sub
sub
iret
rol
test
add
(bad)
cmp
pop
dec
push
xor
push
mov
or
out
cmp
add
sbb
adc
stos
xor
mov
and
and
and
adc
sbb
or
pop
repnz
mov
dec
inc
aas
mov
movs
jecxz
in
or
les
adc
push
(bad)
in
cmp
clc
push
xor
mov
push
add
cld
imul
push
pusha
fadd
mov
inc
or
xor
sbb
or
cmp
and
cmp
cmp
dec
ja
kandb
add
pop
sbb
or
and
cmp
inc
and
gs
add
ja
in
lds
imul
lea
(bad)
adc
leave
inc
les
in
adc
jo
adc
xchg
jo
mov
cs
je
xor
xlat
xor
movs
lock
add
push
imul
cwde
iret
pushf
and
out
cmc
and
mov
pop
sbb
mov
mov
mov
push
pushf
or
and
sbb
(bad)
rcr
mov
push
xchg
mov
xor
not
xlat
cld
out
call
xor
push
sbb
dec
dec
sbb
dec
ins
adc
jb
xor
push
fadd
push
adc
test
cld
clc
xchg
test
adc
jbe
xchg
sub
js
fnstenv
adc
nop
adc
xchg
jae
mov
and
sti
mov
inc
push
dec
or
xchg
aaa
shr
je
add
nop
mov
add
je
enter
std
into
hlt
inc
jmp
xchg
stos
loope
jmp
hlt
xchg
add
pop
xchg
dec
adc
pop
leave
mov
lock
adc
and
cli
cmc
stos
in
sti
nop
ins
in
idiv
sub
fs
push
xor
jns
div
pop
stos
in
jae
and
mov
jne
inc
int3
out
in
out
popa
xor
je
pop
cmp
ds
fiadd
imul
in
lock
inc
or
leave
mov
pop
out
out
push
leave
adc
or
and
dec
xor
pusha
aaa
adc
lods
cmp
push
test
daa
dec
les
jp
mov
out
mov
adc
xchg
jne
mov
mov
int
test
ss
in
xchg
les
cld
sub
sahf
(bad)
adc
call
xchg
or
sahf
popa
push
pusha
test
pop
dec
aam
stos
push
rol
out
push
inc
call
xchg
xor
or
mov
(bad)
push
shl
mov
(bad)
sub
inc
sbb
ja
cmp
rcr
das
cmp
fsub
add
add
add
and
or
and
adc
dec
xor
mov
or
pop
mov
inc
dec
jecxz
xchg
dec
mov
bnd
cmp
fcom
cwde
push
add
dec
cmp
rcl
movs
pop
or
cmp
mov
pop
cwde
fs
sub
add
out
inc
loope
inc
sbb
icebp
push
cmp
sbb
inc
rcl
call
ins
inc
outs
mov
pop
mov
add
(bad)
sub
push
loopne
dec
jne
sub
enter
sbb
(bad)
push
out
add
push
imul
clc
in
mov
adc
repnz
and
sar
mov
sahf
daa
in
mov
push
push
jmp
mov
add
sub
stc
repnz
mov
(bad)
push
add
xor
fwait
int
xor
fs
loopne
in
push
loope
jns
hlt
push
inc
ret
das
mov
call
in
sub
pushf
mov
in
jne
das
retf
cmp
clc
cmp
enter
enter
mov
xor
adc
adc
ss
cwde
jge
jl
movs
movs
test
jb
aaa
mov
dec
or
mov
sub
inc
adc
push
push
pop
and
or
dec
rcr
inc
(bad)
outs
loopne
push
repnz
inc
jge
and
cmp
inc
xchg
bound
cmp
(bad)
push
mov
push
hlt
scas
mov
rcl
cmc
push
xlat
inc
and
jp
bound
ja
mov
enter
mov
scas
cmp
xlat
push
sub
fldcw
add
adc
add
pop
inc
push
sar
lahf
xchg
inc
clc
cmp
test
outs
not
pop
rol
pop
cmp
pop
leave
xor
ror
(bad)
adc
jb
mov
or
ins
or
inc
out
adc
and
fldcw
mov
es
jo
cmp
inc
lahf
add
lea
div
sub
fmul
add
sbb
aam
add
sbb
mov
(bad)
dec
jmp
inc
ret
cmp
add
cmps
and
or
add
mov
neg
push
or
add
repz
add
mov
test
inc
mov
test
test
test
daa
mov
fcomp
lods
sub
inc
mov
pushf
xor
or
sahf
call
adc
out
adc
mov
mov
xlat
inc
adc
sbb
ret
pop
call
rol
inc
inc
inc
nop
mov
mov
add
and
add
pop
adc
mov
ins
add
stc
or
in
(bad)
fsubr
aam
mov
xor
scas
sub
xchg
mov
inc
sbb
or
adc
or
lock
cdq
addr16
adc
ficom
int
pop
sbb
nop
(bad)
or
and
aam
push
xor
stos
pop
sbb
sub
call
movs
sbb
add
cmp
xchg
mov
add
xchg
sbb
sub
lahf
sti
cwde
sti
mov
xchg
out
sub
loopne
and
sub
sub
xchg
inc
inc
add
leave
clc
push
test
sbb
test
mov
das
mov
popf
push
test
stc
movs
jmp
dec
xchg
or
and
xchg
push
adc
call
xchg
cld
js
test
and
mov
jg
cld
push
pusha
mov
(bad)
push
add
pusha
lds
sbb
inc
xchg
and
cmp
push
xchg
adc
lock
cdq
in
and
push
inc
mov
cwde
(bad)
push
lods
cmp
mov
mov
adc
xchg
cmps
mov
jle
bound
popf
movs
inc
lods
call
out
ins
mov
jnp
or
cmps
adc
push
push
dec
adc
mov
inc
xor
pusha
xchg
sub
mov
add
or
jo
adc
daa
xchg
mov
pop
xchg
daa
pop
shl
fs
popa
dec
pop
movs
inc
dec
push
jns
(bad)
push
add
sbb
stos
sar
clc
dec
pop
stos
and
or
dec
adc
cmp
and
mov
dec
imul
xlat
(bad)
mov
or
addr16
pop
mov
cmp
add
inc
mov
inc
push
cmp
sbb
or
stos
add
addr16
push
add
jbe
cmp
jne
ret
or
cmp
mov
repnz
mov
test
push
cwde
adc
inc
push
dec
lock
push
daa
pop
cmp
mov
adc
(bad)
mov
add
lea
addr16
push
cmp
dec
pop
leave
inc
or
or
repnz
inc
repnz
or
or
sbb
xchg
xchg
mov
add
cmp
adc
sbb
or
xlat
ja
jl
repnz
push
sbb
sbb
sbb
nop
push
enter
push
and
and
in
and
and
sub
add
repnz
sub
sbb
jb
(bad)
lahf
add
mov
add
jmp
push
dec
fwait
sbb
scas
adc
hlt
test
dec
aas
mov
push
adc
push
pop
fsub
pop
rol
sub
cmp
push
pop
std
mov
test
nop
scas
xchg
mov
add
pushf
sub
out
out
mov
adc
pop
add
out
daa
xchg
xchg
retf
in
and
loopne
and
movs
xchg
hlt
adc
ins
pop
pop
add
mov
loop
add
aad
and
push
inc
jle
(bad)
sar
sub
daa
adc
xor
dec
sbb
and
leave
cwde
and
sbb
test
pop
cmp
add
add
mov
push
pop
add
pop
mov
aad
adc
dec
shr
std
or
add
idiv
and
pop
xor
cmp
ja
fdivr
das
clc
mov
retf
or
and
aas
add
mov
sub
es
ss
sbb
cmp
xchg
jl
aaa
push
and
pop
inc
cmp
inc
and
loop
sbb
sbb
test
jbe
aaa
sbb
or
nop
(bad)
sbb
lock
sbb
stc
enter
push
xchg
push
nop
paddsb
addr16
or
xchg
mov
cmp
loope
pushf
loopne
or
push
cmp
adc
adc
mov
xchg
sbb
call
sub
retf
push
sub
sub
adc
aas
imul
ins
mov
pop
and
xlat
adc
sbb
fs
and
or
ins
xchg
mov
clc
xchg
inc
je
sbb
dec
xor
inc
inc
push
cmp
dec
cmp
popa
dec
(bad)
call
push
or
xor
inc
push
push
push
inc
dec
inc
push
cdq
les
dec
rcl
push
aaa
mov
je
mov
mov
hlt
ret
loopne
adc
pop
or
lahf
shl
int3
xchg
movs
xor
imul
jmp
pop
cli
jle
or
nop
scas
inc
inc
xor
fdiv
sub
push
add
inc
add
cwde
pop
je
dec
movs
and
pmaddwd
aam
add
adc
mov
jmp
pop
cld
xor
dec
in
test
jl
enter
mov
sbb
cmp
je
es
sbb
pop
clc
daa
jle
(bad)
stos
pop
cmp
sbb
mov
nop
inc
cs
pushf
cmp
in
add
xchg
shl
cmps
jmp
das
data16
ficom
xchg
or
cmp
lahf
add
loop
ins
mov
xor
lea
inc
push
mov
xor
add
ins
cmp
mov
push
xor
or
and
or
push
ja
xlat
jo
retf
ret
sahf
out
sahf
xchg
test
nop
mov
inc
adc
jmp
mov
push
add
and
or
or
pop
sbb
test
iret
and
or
push
dec
fcmovbe
enter
call
jnp
fs
mov
call
sar
and
fs
mov
sub
and
sbb
cld
cmp
push
mov
ss
ror
dec
shl
sbb
lahf
add
test
ret
jb
and
add
sar
push
call
inc
loop
inc
cmp
lods
sbb
inc
push
push
mov
add
xor
or
pop
mov
pop
push
movs
add
sub
inc
stos
inc
sub
cs
outs
inc
gs
jnp
and
je
retf
mov
xor
sbb
(bad)
jg
shl
test
ds
push
rcr
aas
xor
mov
xchg
sbb
aas
in
sbb
and
cwde
in
in
repnz
or
cmps
cmp
add
push
push
xchg
xchg
adc
fxch
call
mov
imul
loopne
lods
cmps
mov
jmp
and
push
leave
cmps
or
cmps
inc
mov
(bad)
and
sbb
pop
pop
jbe
push
or
push
push
in
cmp
rcr
daa
xor
cmps
sbb
mov
mov
movq
mov
xchg
and
ret
mov
das
scas
data16
cmp
mov
dec
mov
jecxz
and
or
push
pop
aas
pusha
pop
cmps
sub
adc
adc
ins
in
inc
add
fcomp
cmps
pusha
bound
das
or
push
mov
lea
adc
push
enter
jle
dec
inc
jb
cmp
adc
outs
(bad)
sbb
out
clc
sti
or
jne
adc
push
pop
add
adc
and
add
dec
shr
jo
add
mov
test
dec
pusha
or
inc
xchg
popa
cmps
pop
sub
adc
clc
xchg
and
inc
out
adc
xchg
cmp
xlat
enter
cmp
movs
sbb
das
leave
hlt
cmp
add
pop
dec
push
movs
dec
cmp
mov
or
fild
test
push
push
sub
inc
cmp
or
mov
mov
rcl
dec
lock
and
(bad)
loop
jmp
mov
bound
movs
mov
sbb
dec
cmp
inc
add
add
sub
aas
pop
not
shl
pop
pushf
pop
pop
push
mov
mov
xchg
jmp
dec
sbb
popa
sbb
into
dec
dec
arpl
push
mov
xchg
push
mov
and
ror
xchg
mov
sub
mov
or
xchg
inc
mov
push
pop
xor
imul
pop
ds
into
jge
ins
adc
hlt
jmp
movs
and
in
jmp
jo
dec
xchg
cmps
stos
adc
fdiv
sbb
fs
loopne
rcr
jns
pop
fadd
test
pop
mov
out
aad
imul
pminub
mov
mov
out
mov
aas
cld
sbb
sub
push
ins
push
adc
and
mov
sbb
add
or
movs
mov
ds
cs
sbb
stos
mov
adc
loopne
addr16
xor
mov
xor
enter
sbb
adc
sbb
enter
xchg
or
les
stos
add
je
add
jmp
push
dec
mov
sbb
inc
fidivr
out
das
adc
sub
add
add
push
mov
cmp
lods
add
sbb
rol
adc
sbb
int
adc
add
inc
add
or
sub
push
inc
or
and
add
dec
int
push
adc
cmp
adc
daa
hlt
mov
enter
aas
xchg
push
xor
mov
das
or
sub
stos
mov
ins
push
adc
ins
mov
sbb
jmp
sbb
mov
rol
xor
push
stos
add
and
sbb
push
dec
cmc
sbb
add
movs
sti
test
and
add
shl
inc
out
dec
sub
xchg
mov
test
mov
and
push
and
movs
lods
push
mov
and
push
lods
xchg
fbstp
inc
icebp
xchg
mov
cmp
jns
test
add
sbb
dec
dec
xchg
jg
jmp
mov
pop
sbb
ins
xchg
fwait
pop
or
pop
aad
call
nop
inc
clc
clc
mov
in
cmps
pop
pop
xchg
mov
and
inc
hlt
or
push
or
cmps
pop
xchg
lock
in
in
jg
mov
jmp
mov
lds
adc
jb
and
xor
pop
outs
push
jns
imul
or
pop
jl
or
ins
sbb
dec
jmp
xchg
push
mov
sar
outs
dec
outs
mov
cmp
push
scas
nop
cmc
and
imul
shl
fcos
dec
sti
push
popa
jb
ins
jae
mov
(bad)
mov
mov
fwait
mov
not
fwait
jmp
inc
or
add
add
sbb
fnstsw
inc
jbe
dec
outs
add
mov
sbb
not
sbb
ins
popa
test
arpl
aam
and
fs
call
pop
xor
xor
dec
sbb
cwde
les
inc
(bad)
cmp
inc
dec
hlt
inc
and
add
push
push
xor
add
adc
pop
cmp
(bad)
sbb
add
test
loope
adc
dec
addr16
sub
mov
cmp
mov
push
mov
adc
or
outs
xor
ss
out
pop
clc
ror
mov
and
icebp
mov
les
add
ins
xchg
scas
int3
pop
push
dec
out
push
ins
xchg
mov
xadd
test
adc
les
sub
sub
and
xchg
nop
and
aaa
jp
aam
mov
add
add
xadd
lods
shl
and
mov
lods
fsub
nop
or
jbe
ds
sub
or
jnp
mov
push
syscall
je
cmp
pop
and
adc
enter
int3
push
push
test
push
fwait
ins
cmp
(bad)
pop
inc
push
or
sub
and
xor
in
mov
setg
pop
sub
push
sub
pop
adc
push
inc
dec
or
dec
mov
push
xchg
cmp
ins
and
and
(bad)
popa
mov
or
jmp
cmp
sbb
mov
jmp
xchg
add
lea
and
aas
push
pusha
or
xor
or
ja
push
pop
test
movs
dec
loop
mov
cwde
out
ja
sub
sub
or
das
inc
xor
xor
xor
pop
femms
fwait
out
cmc
inc
test
ins
mov
stos
movs
loope
in
vmread
or
into
pushf
es
dec
jns
inc
and
sbb
cmp
push
push
cmps
enter
jl
call
add
sub
dec
mov
pop
push
call
xor
sub
pop
adc
jne
pusha
lods
pusha
sbb
pusha
pop
popa
pop
out
imul
test
adc
imul
adc
lods
inc
cli
adc
call
cmp
and
cs
movs
dec
adc
sbb
inc
mov
pusha
loop
sbb
xchg
ds
or
loope
xchg
jmp
fsubr
or
mov
adc
daa
es
xchg
pop
or
lods
push
push
inc
sub
ss
adc
sbb
inc
xor
loop
sub
daa
aaa
shl
sbb
shr
in
ds
inc
mov
jns
add
dec
push
or
push
push
(bad)
pushf
gs
and
jo
xor
pop
imul
pop
les
fsubr
je
movs
xlat
push
xlat
or
and
mov
xor
inc
addr16
outs
icebp
sub
mov
adc
adc
adc
mov
aaa
xor
xchg
int
mov
pop
sub
sub
or
or
jmp
jno
xchg
loop
loopne
inc
add
xchg
add
xor
test
mov
mov
loope
xchg
icebp
hlt
sub
add
inc
sub
push
daa
push
push
adc
jno
cmp
call
lods
sbb
inc
sbb
mov
pushf
inc
call
sahf
cmp
inc
cmps
sub
mov
or
dec
adc
inc
cmp
jecxz
add
repz
clc
xor
inc
add
adc
sbb
dec
pushf
ret
add
or
xor
out
push
xor
pop
fild
push
push
adc
mov
test
sub
test
sub
arpl
jne
ret
fdivr
and
mov
jnp
dec
cmp
adc
jp
mov
inc
lahf
jge
or
push
cmp
sbb
out
dec
cmp
mov
ret
bound
inc
push
(bad)
adc
ja
movs
pop
jno
pop
xchg
sub
arpl
add
add
xchg
sbb
les
test
shl
mov
rcl
push
sub
adc
fs
sbb
push
daa
and
outs
(bad)
rcr
lock
cmp
xor
imul
or
or
outs
inc
inc
xchg
and
mov
sbb
push
(bad)
fistp
or
leave
ret
add
ret
and
cmps
daa
imul
lods
dec
adc
xchg
lock
repz
cmp
push
lock
push
call
sbb
shl
cmp
and
les
adc
and
sbb
sub
ret
lahf
mov
or
iret
in
pushf
sub
pop
fnsave
ret
scas
popf
add
test
mov
pop
dec
xor
test
test
mov
outs
adc
outs
adc
rol
mov
sti
adc
stos
xor
dec
loope
inc
pop
jmp
stc
dec
pop
mov
xor
push
sub
loopne
(bad)
fidivr
sub
xor
out
mov
notrack
dec
xchg
xchg
and
push
xor
loope
or
call
loopne
inc
mov
pop
jne
rol
ror
xor
dec
jnp
jo
jne
lds
aam
cmp
pop
and
xchg
mov
out
and
ret
std
mov
add
inc
xor
inc
push
aaa
jo
or
popf
cmps
aad
pushf
jbe
mov
dec
jmp
inc
enter
cmp
scas
dec
and
or
sbb
leave
rcr
jne
and
ss
adc
add
dec
mov
sbb
or
mov
pop
push
jmp
and
ja
aad
mov
out
movs
aaa
push
std
aam
test
jno
dec
jmp
leave
pop
add
retf
cmp
and
addr16
mov
adc
or
add
popa
(bad)
cmps
adc
pop
(bad)
cmp
(bad)
iret
(bad)
xchg
push
mov
fimul
shl
mov
xchg
and
and
ffree
shr
push
and
and
das
adc
or
and
nop
sbb
cdq
ins
mul
jge
aad
push
aaa
cmp
je
cmp
in
out
adc
add
add
repnz
mov
sbb
inc
sbb
or
xor
and
or
jmp
sub
aaa
sar
sub
and
sbb
push
rcl
adc
test
mov
fst
xor
fsub
jns
addr16
inc
push
stc
lock
pop
xchg
and
inc
xchg
pop
in
cmp
daa
push
xor
lods
mov
imul
pop
mov
rcr
nop
pusha
mov
stc
loopne
sub
mov
popa
stos
pusha
dec
stos
popa
mov
add
xchg
das
xchg
mov
shl
stc
repnz
mov
xchg
loopne
in
in
add
add
inc
jle
sbb
push
pop
jecxz
in
sub
xor
mov
sub
xor
cmp
popa
inc
sbb
mov
outs
and
xchg
and
adc
xchg
ret
mov
or
xor
xchg
adc
push
cmp
sbb
adc
sub
xor
inc
mov
jae
adc
nop
test
push
push
cwde
mov
pop
inc
add
ja
sahf
mov
push
sbb
inc
mov
mov
hlt
call
add
mov
cmp
push
push
js
add
cmp
add
push
mov
addps
loopne
(bad)
jne
addr16
cmp
retf
push
sub
loope
cmp
cwde
pushf
mov
jo
and
mov
dec
adc
out
add
fist
or
push
xchg
push
aas
xor
mov
inc
dec
arpl
test
out
add
out
test
fnsave
jg
inc
das
jmp
movs
xchg
push
jmp
or
jle
jmp
ds
ja
push
jbe
and
sub
ja
adc
movs
sbb
or
push
add
cwde
rol
fnstenv
mov
mov
cwde
ja
aaa
jecxz
sar
mov
mov
inc
retf
in
dec
ja
and
add
or
jmp
inc
pushf
adc
and
lock
or
or
sub
mov
mov
or
adc
dec
add
test
dec
mul
xchg
iret
and
mov
cmp
and
fs
xchg
inc
mov
mov
inc
mov
ficom
push
aas
int
(bad)
out
add
jo
push
adc
mov
loop
mov
jnp
jae
dec
dec
jmp
or
or
pusha
sub
std
loopne
inc
inc
pop
sub
add
adc
or
push
jecxz
push
xchg
sbb
lock
pop
add
(bad)
mov
and
sub
and
dec
enter
into
into
push
pop
nop
and
ds
dec
adc
gs
push
daa
or
fdiv
cmp
mov
jne
jne
and
in
(bad)
loop
or
repz
jo
adc
sbb
lods
inc
cmp
cmp
xor
aad
loopne
and
adc
cdq
mov
lea
jno
scas
gs
pusha
xchg
cmps
cmc
mov
lds
and
scas
rcr
lea
hlt
pop
gs
in
jmp
push
xor
pop
push
arpl
inc
or
jo
fdiv
push
outs
aaa
or
add
call
and
xchg
mov
das
push
ret
mov
mov
adc
inc
fisttp
push
dec
xchg
inc
and
mov
and
mov
push
test
(bad)
das
push
dec
daa
jmp
inc
add
rcl
cli
cld
(bad)
mov
pop
and
out
movs
pop
sbb
xor
pop
clc
mov
pusha
cmp
inc
xchg
push
push
aad
sub
mov
sbb
jle
or
cs
addr16
mov
xchg
in
enter
clc
in
js
nop
ret
mov
inc
cmp
mov
movs
call
push
popf
add
pop
xchg
inc
ins
add
inc
xor
repnz
adc
cmp
mov
adc
and
sub
adc
jo
xchg
dec
adc
jmp
je
sbb
ret
popaw
mov
mov
cs
or
aam
push
sub
xchg
pop
or
mov
lods
xor
inc
adc
inc
xchg
test
(bad)
rcl
dec
shl
sbb
call
fadd
loop
push
rcl
and
adc
pop
or
sbb
div
cs
ret
push
pop
pop
mov
icebp
or
jne
xchg
adc
dec
xchg
inc
call
adc
sbb
push
fwait
ret
pop
push
sbb
cmp
sahf
add
ss
dec
dec
jmp
dec
pusha
mov
and
imul
nop
xor
push
adc
pop
or
mov
sbb
cmp
jmp
mov
jnp
dec
je
out
shl
push
in
(bad)
and
mov
pop
jmp
sbb
ins
push
inc
dec
sti
xor
shr
ss
lock
int
xor
xor
adc
sbb
xchg
scas
les
cmp
movaps
ins
pop
and
test
or
dec
mov
add
imul
or
push
push
jge
shl
rcl
dec
mov
call
ins
inc
call
in
lock
div
jge
pop
mov
movs
sub
stos
scas
and
add
or
mov
pop
in
(bad)
jns
cmps
rol
je
mov
cwde
pop
ror
dec
iret
int3
int
push
popf
sub
dec
and
call
mov
mov
data16
dec
sahf
fsubrp
adc
adc
shl
mov
push
dec
add
je
xchg
jo
push
mov
jecxz
bound
or
jns
loopne
ins
inc
dec
adc
cmp
(bad)
div
inc
je
push
inc
push
inc
add
mov
je
out
pop
push
mov
sub
xor
cwde
lahf
mov
adc
cwde
lea
or
stos
jl
cmp
mov
imul
out
arpl
mov
daa
scas
das
retf
inc
mov
sub
sbb
mov
push
sbb
cmp
clc
adc
sbb
xchg
push
cdq
sbb
rol
xchg
ja
and
sbb
inc
adc
mov
and
movs
cmps
aas
dec
push
jp
push
movs
xchg
jmp
and
jo
retf
fstp
cmp
int3
inc
push
aas
retf
movs
dec
pop
mov
pushf
out
(bad)
fiadd
inc
loope
and
stos
inc
sub
lea
add
ss
pop
ins
xchg
pop
(bad)
jae
mov
add
jns
cmp
fbstp
inc
pushf
mov
nop
lock
sbb
jmp
mov
in
mov
push
mov
mov
or
out
adc
fldcw
sbb
dec
and
push
(bad)
enter
push
dec
add
mov
mov
xchg
cmp
daa
or
xchg
xchg
push
pop
push
stos
call
xor
imul
mov
cmovp
in
dec
push
cmps
call
push
mov
adc
jp
lds
test
inc
ficomp
and
dec
rcr
add
das
adc
pop
mov
lea
adc
mov
mov
add
clc
mov
in
shl
pop
xor
sub
not
and
push
mov
mov
adc
or
jo
jbe
sahf
ret
test
shl
xchg
mov
inc
or
push
inc
xchg
and
popf
cmp
jnp
and
push
dec
push
mov
sub
xchg
comiss
and
inc
inc
or
jmp
add
das
arpl
adc
aaa
repnz
inc
xchg
push
imul
push
and
inc
xchg
dec
add
mov
adc
xchg
ror
cmp
dec
xchg
ret
lds
repz
shl
mov
outs
movs
add
mov
push
fwait
(bad)
gs
add
sbb
icebp
or
adc
or
adc
inc
xchg
ds
sbb
in
les
pop
adc
xchg
sti
mov
inc
cld
stc
cmps
push
push
jg
ret
sbb
xor
mul
xor
popa
dec
loopne
adc
adc
daa
sar
jle
and
call
push
cmps
loopne
fadd
or
mov
mov
call
fld
inc
test
sahf
cmp
neg
in
sbb
stos
ss
sub
(bad)
(bad)
dec
out
daa
sbb
push
adc
mov
shr
sbb
xor
inc
xchg
adc
(bad)
ss
inc
out
xchg
push
gs
push
cdq
xchg
daa
ucomiss
sbb
call
cdq
outs
and
popa
and
adc
scas
cdq
outs
add
dec
add
xchg
les
push
adc
inc
mov
aad
mov
mov
sub
add
repz
imul
cmp
ret
(bad)
fcomp
lds
repnz
and
dec
js
neg
add
cmp
adc
jbe
dec
mov
cmp
fiadd
mov
mov
or
(bad)
add
and
dec
daa
mov
mov
inc
jne
mov
and
ror
push
and
aas
adc
push
mov
cmp
cmp
mov
loopne
ss
adc
and
pusha
sub
call
push
add
ret
jns
aam
dec
inc
pop
sti
and
ret
sbb
xor
sub
ins
xor
je
ss
mul
cmp
sub
adc
imul
and
lds
mov
test
and
cmp
sub
or
push
movs
adc
movs
or
dec
je
adc
adc
push
jmp
xchg
jmp
push
or
xchg
push
push
cmp
or
addr16
mov
jmp
std
push
pop
fcos
rcl
pop
mov
or
imul
loop
jmp
push
push
xchg
push
repnz
push
iret
mov
pop
inc
test
xor
mov
bswap
inc
mov
ror
inc
sub
or
add
dec
xlat
packsswb
inc
xor
cmp
mov
add
sub
nop
inc
mov
adc
xor
dec
call
mov
pop
sub
js
dec
and
adc
and
push
lea
add
es
xchg
jne
push
sub
push
cwde
push
test
add
add
mov
push
or
mov
jne
(bad)
jge
jne
push
sahf
test
shl
aaa
mov
lds
sbb
rol
adc
mov
adc
cdq
adc
adc
push
cmp
dec
xchg
fcom
push
or
mov
mov
add
sub
rcr
fwait
sub
mov
inc
adc
les
aaa
dec
add
or
mov
pop
rcl
and
mov
pop
rcl
rol
push
mov
clc
pusha
xchg
lock
ffreep
scas
retf
push
movs
pop
adc
pop
aaa
je
cmp
aas
push
int
sbb
rol
mov
rol
mov
das
fsub
clc
aam
sbb
fs
mov
jnp
inc
jo
cld
and
sbb
(bad)
push
ret
jbe
push
xchg
ins
in
ins
pop
or
retf
leave
jmp
fmulp
xor
sbb
dec
add
ins
xor
mov
rol
imul
jno
inc
xor
ret
sub
sbb
inc
cmc
dec
inc
shl
jmp
jne
fild
pop
inc
dec
or
dec
mov
sbb
enter
pop
push
in
and
test
push
pop
push
ldmxcsr
pop
rol
cmp
popa
adc
pop
fcomp
in
arpl
adc
pop
inc
sbb
mov
pop
or
jbe
nop
sbb
fild
(bad)
or
jl
jbe
enter
rol
adc
(bad)
push
cmp
pop
push
in
fmul
or
fcom
or
je
mov
call
sahf
rcr
sbb
pop
push
out
dec
push
pop
addr16
pop
repz
ror
arpl
iret
repz
or
mov
jns
iret
repz
stc
add
pop
les
out
sub
add
xor
jmp
xor
jo
inc
xchg
fnstcw
(bad)
aaa
test
mov
test
push
adc
add
cmp
pop
mov
or
push
push
or
and
dec
push
sub
mov
aad
nop
out
nop
pop
inc
mov
pop
push
stos
movs
or
sbb
scas
loopne
cmps
push
jnp
arpl
xchg
push
xchg
rol
jb
fisttp
jmp
xor
int
sbb
in
jmp
hlt
push
add
test
xor
xor
mov
loope
inc
aam
cld
pop
dec
imul
outs
mov
mov
or
mov
out
clc
or
gs
inc
in
(bad)
and
and
hlt
inc
mov
pop
(bad)
pop
pop
fadd
and
sub
pop
push
ret
(bad)
repz
xchg
movs
push
fadd
(bad)
daa
ret
aam
ret
adc
cmp
(bad)
adc
jecxz
add
xchg
or
or
sbb
mov
or
imul
ret
xchg
xchg
mov
and
xor
push
or
lock
dec
pop
sbb
mov
pop
ret
jae
mov
add
js
sub
cmp
pop
sbb
pusha
cmp
nop
popa
movs
pusha
and
aam
call
jne
(bad)
in
pop
pusha
and
in
cmp
loopne
xlat
pop
cli
call
mov
ror
fdivr
mov
fcomp
jmp
fiadd
push
shl
ret
ror
inc
lock
or
sbb
test
fs
cmp
push
push
imul
inc
mov
sub
outs
gs
daa
fcom
dec
push
ds
mov
pop
xor
xor
addr16
add
mov
mov
jnp
jmp
jp
test
les
sbb
(bad)
cs
loopne
aam
adc
sahf
or
push
shr
mul
or
and
xchg
daa
sbb
pop
mov
aaa
aad
cmp
push
dec
add
push
push
fwait
clc
mov
mov
add
add
push
das
test
clc
in
bound
(bad)
adc
ss
sub
xchg
push
push
cmp
js
and
xor
bound
mov
push
pop
push
fdivr
adc
call
ins
arpl
inc
pop
sbb
sub
lock
hlt
hlt
pushf
xor
int
and
in
in
xchg
dec
and
enter
xlat
sub
int
adc
in
daa
in
cmp
fdiv
or
fdiv
test
dec
pop
aam
pop
dec
les
imul
jbe
fisubr
xor
jo
sbb
pop
ret
sub
cmp
xchg
and
add
ins
test
adc
es
jo
xor
nop
into
lea
mov
and
fs
and
dec
es
xor
lahf
xor
dec
dec
cmp
and
inc
dec
iret
mov
mov
sub
(bad)
(bad)
xlat
stos
scas
movs
add
or
dec
jmp
arpl
imul
jg
sub
fsubr
mov
in
lea
popa
das
dec
mov
out
or
mov
retf
xor
leave
and
call
sub
xchg
aad
retf
jg
test
pop
add
mov
(bad)
int
mov
push
jbe
stc
mov
arpl
inc
je
mov
mov
and
pop
cmps
mov
hlt
pop
or
or
mov
push
daa
sbb
mov
or
or
sbb
jo
dec
sub
adc
jge
sub
dec
adc
sub
mov
scas
inc
inc
(bad)
in
cmp
outs
retf
adc
and
sbb
mov
addr16
ret
cwde
cmps
sbb
loope
rcl
cmc
xor
mov
push
in
dec
sahf
xchg
data16
lock
adc
pcmpgtw
outs
jmp
or
jp
push
jmp
cmp
and
ins
cwde
adc
or
leave
add
clc
mov
daa
sub
and
(bad)
outs
jbe
inc
outs
in
out
add
ja
test
xchg
or
push
stc
mov
mov
xchg
fwait
jo
es
pusha
xor
or
jns
ins
fs
cmps
and
xchg
dec
adc
int3
mov
mov
or
mov
push
leave
sub
les
cmp
add
or
push
xchg
fiadd
(bad)
je
inc
sub
dec
pop
mov
pop
fisttp
jg
enter
and
inc
pushf
push
leave
mov
push
mov
inc
add
iret
or
pop
inc
push
es
cs
test
pop
adc
cmc
or
cmp
push
adc
lahf
dec
imul
lock
clc
ror
call
je
(bad)
mov
push
lods
jmp
xlat
inc
inc
or
ins
pop
inc
xchg
dec
fiadd
nop
pop
movs
sub
or
push
dec
dec
iret
pop
(bad)
xor
pop
pop
ins
call
mov
lea
xlat
pop
add
dec
jb
fsubr
xchg
dec
aam
mov
mov
jb
mov
ins
push
bnd
add
and
aas
cmp
sub
test
ja
(bad)
in
jg
pop
retf
call
mov
add
xchg
xchg
inc
pop
pop
and
pop
retf
adc
adc
aad
mov
mov
xchg
and
outs
cmps
inc
dec
or
clc
bound
jo
push
sbb
repz
pusha
push
imul
sub
mov
jnp
sub
adc
add
pop
jnp
outs
push
add
mov
add
push
rcl
str
jge
cmps
xchg
xor
push
push
add
int3
xchg
popa
dec
in
sub
jg
adc
dec
push
rol
push
imul
mov
imul
test
xor
stos
or
cmps
or
sub
cld
icebp
sahf
popa
pop
adc
push
pushf
mov
inc
test
add
or
dec
dec
outs
addr16
xchg
and
nop
mov
lds
test
dec
push
pop
add
adc
push
cmp
cs
push
adc
ds
je
test
sbb
(bad)
jle
xchg
inc
pop
cmp
xor
xor
out
sub
dec
adc
xchg
push
xchg
test
aas
push
mov
xor
stc
jbe
mov
bound
xor
hlt
push
pop
fisttp
mov
push
lods
cdq
sbb
bound
loope
hlt
popa
xchg
cli
or
jle
adc
mov
imul
cmp
jo
and
cmps
mov
jnp
mov
push
cmps
sub
inc
cwde
sub
inc
ds
mov
sbb
fcom
pop
mov
stc
mov
sbb
add
dec
fisubr
in
pop
mov
lahf
jl
in
sbb
xor
jns
in
cmp
int3
xor
mov
mov
das
mov
push
xchg
in
into
sub
lahf
adc
mov
lods
stc
jnp
sbb
mov
aam
and
pop
bound
pop
jnp
jb
adc
cwde
jg
cs
test
jg
mov
pop
dec
cwde
jae
jno
add
adc
or
int3
mov
dec
and
inc
adc
and
adc
inc
lea
ds
aas
jo
push
ins
xchg
add
fist
cmp
or
dec
cmps
js
test
pop
fst
or
dec
fisttp
or
and
xchg
xchg
mov
sub
cli
mov
cwde
mov
pushf
clc
(bad)
adc
and
retf
stos
movs
rcl
jb
retf
out
push
add
mov
inc
call
jecxz
retf
or
pop
popf
rol
dec
or
xchg
inc
loope
add
or
mov
addr16
mov
movs
sbb
je
into
push
clc
adc
mov
inc
rol
shr
addr16
retf
fdivp
mov
add
add
outs
adc
dec
pop
adc
adc
sbb
sbb
fidiv
les
outs
add
lds
inc
mov
jns
jmp
loopne
dec
(bad)
push
pusha
jmp
mov
rcl
push
mov
cmps
outs
adc
rcl
jl
mov
iret
ret
add
ins
xchg
adc
imul
es
or
fs
push
imul
or
(bad)
out
mov
add
sbb
adc
scas
aaa
aaa
cmp
or
jnp
mov
imul
rcr
xchg
loope
adc
leave
daa
movs
std
ret
data16
or
add
push
inc
cli
or
push
sbb
cmp
cmp
or
mov
adc
idiv
and
movs
jns
test
leave
sbb
scas
push
jnp
cdq
rol
dec
cdq
mov
(bad)
adc
out
pop
emms
loopne
xchg
not
aam
mov
lock
les
aaa
ja
push
pop
push
adc
ror
push
cmps
xchg
(bad)
cmps
ret
add
and
push
daa
(bad)
ror
mov
ins
push
fild
sbb
jle
jo
test
das
or
fld
xor
and
pop
imul
pop
xor
dec
scas
dec
or
jns
adc
mov
jge
xchg
mov
xor
inc
xor
push
inc
dec
add
and
(bad)
push
adc
fbstp
mov
xor
xchg
movs
pop
jp
cmp
dec
xor
adc
rcl
dec
and
mov
sub
mov
popf
cmps
jge
arpl
call
pop
and
adc
sbb
and
adc
les
stc
and
ds
pusha
aad
fild
jmp
sahf
xor
hlt
jge
jl
add
sub
jmp
in
cmp
mov
add
pop
das
lods
aas
add
jmp
mov
fadd
add
adc
jno
inc
or
xchg
lahf
and
adc
jne
mov
push
iret
std
dec
add
mov
imul
dec
cmps
push
leave
xchg
push
and
push
nop
in
test
es
cli
push
adc
sbb
in
jg
add
nop
add
call
cmp
jo
push
jb
adc
mov
push
sub
cli
xor
psubw
mov
jmp
add
pop
shr
iret
jae
sub
mov
adc
rol
pop
sbb
or
jns
mov
imul
pop
cld
sub
outs
cwde
pop
mov
cmp
fs
enter
inc
inc
movs
mov
in
shl
aad
mov
imul
mov
inc
jb
fmul
jb
cli
mov
inc
push
push
xor
pusha
iret
pop
and
dec
dec
and
sbb
xchg
push
bextr
xchg
push
pop
(bad)
aaa
xchg
adc
stc
nop
push
mov
in
cdq
add
xlat
xor
or
inc
mov
fiadd
and
sub
xor
in
adc
dec
push
ficomp
fist
in
iret
mov
lahf
inc
add
les
outs
imul
(bad)
ss
out
xchg
(bad)
hlt
inc
dec
sbb
and
mov
inc
sti
cmp
addr16
ds
inc
fmul
mov
aam
cs
in
push
(bad)
mov
mov
iret
xchg
push
jl
inc
addr16
inc
fidivr
push
sti
inc
cs
jl
in
mov
xchg
jle
cwde
inc
add
ret
scas
loopne
fcom
inc
sub
add
pop
repz
imul
outs
push
fs
mov
rcl
jle
mov
sub
scas
xor
dec
pop
nop
jle
mov
dec
jnp
sbb
sahf
rcr
nop
je
mov
jle
mov
sub
push
nop
(bad)
ins
or
dec
ror
push
dec
cdq
movs
test
outs
xchg
pop
or
int3
fs
sub
mov
js
into
push
out
or
push
lods
xor
push
lahf
jo
xor
iret
push
push
dec
dec
aas
adc
test
dec
repz
test
cld
dec
int3
jp
pop
sbb
xor
das
fs
call
lahf
inc
ins
inc
jp
sahf
into
sub
dec
cmp
ja
or
nop
lahf
outs
jb
sub
and
inc
xor
mov
imul
sub
xor
stc
mov
mov
sahf
inc
(bad)
pushf
add
neg
mov
in
rcl
movs
cwde
cmps
int3
cs
push
adc
dec
cmps
ds
lahf
mov
shl
dec
sub
out
or
and
push
pop
stc
cmps
fsub
mov
pop
iret
mov
mov
fbld
lahf
mov
push
scas
inc
xchg
enter
dec
ds
jle
pop
push
scas
pusha
nop
ror
fwait
outs
je
lods
fist
fbld
(bad)
dec
cmp
(bad)
push
in
inc
mov
loopne
add
cmp
sub
test
xorps
je
add
xchg
fild
inc
aas
push
scas
lods
xor
adc
jp
mov
jbe
xor
mov
mov
add
sub
leave
imul
mov
data16
xlat
adc
inc
sub
add
outs
retf
fistp
adc
mov
ror
popf
fsubr
cmp
cmp
sbb
pop
imul
or
pop
pop
imul
xchg
dec
mov
dec
mov
cmp
je
push
ins
adc
lods
cmp
xchg
adc
pop
test
fisttp
pop
inc
sub
or
loope
out
cmp
call
pop
add
mov
inc
jge
jl
or
in
das
es
shr
mov
sbb
mov
stc
jns
and
lods
mov
add
sub
jbe
hlt
add
dec
fstp
xor
lods
mov
xor
or
mov
adc
xchg
pop
lock
mov
dec
mov
movs
add
and
sub
outs
test
mov
or
dec
pop
jg
mov
add
cmp
jo
jno
clc
or
and
sub
bnd
jb
inc
aaa
lods
cwde
mov
rol
pop
cs
rcl
mov
ret
push
push
inc
shl
sbb
push
cmp
mov
push
push
pop
xor
dec
gs
or
push
dec
mov
pop
mov
fnstsw
inc
pop
adc
sub
out
dec
cmp
adc
jl
cmp
lods
mov
mov
and
mov
sti
ins
pusha
mov
adc
adc
clc
xor
or
adc
(bad)
aaa
add
xchg
fnstsw
adc
call
hlt
int
dec
inc
jl
arpl
(bad)
rcr
sbb
nop
add
and
add
nop
add
(bad)
sbb
cld
jmp
fs
push
jae
inc
mov
push
and
in
pop
(bad)
je
frstor
mov
xor
dec
aas
movs
inc
aam
mov
lahf
or
sub
add
fdiv
push
es
pushf
cmps
add
and
imul
push
dec
push
pusha
add
adc
cmps
je
or
inc
popa
stc
js
sub
xor
outs
add
lods
mov
jbe
xchg
add
inc
or
inc
cmp
cmp
js
fnstcw
nop
xchg
jg
out
pop
add
jnp
lods
xchg
sahf
int3
pop
mov
xchg
mov
pop
and
push
nop
pop
xchg
nop
jle
add
and
nop
add
pop
or
nop
not
cmp
adc
push
mov
xchg
add
(bad)
sbb
add
or
pop
enter
cwde
and
dec
or
nop
push
movs
std
and
pop
scas
inc
mov
das
mov
push
ret
push
mov
xchg
xor
mov
mov
xlat
stos
arpl
pushf
inc
enter
loop
out
shl
dec
ret
push
cmp
jge
adc
push
mov
jle
ret
and
inc
xchg
popa
push
neg
mov
(bad)
fwait
aaa
mov
push
popa
adc
call
in
inc
pop
fcom
mov
test
aam
mov
add
fmul
and
push
das
lods
ja
xor
xchg
pop
mov
call
pop
xchg
mov
mov
adc
in
dec
hlt
aaa
sbb
fdivr
enter
xchg
fild
xchg
jg
clc
sub
pop
aas
dec
cmp
jno
cmp
pop
aas
(bad)
sbb
jmp
movsx
xchg
ins
xor
push
mov
ins
sub
les
imul
call
in
add
sub
xor
arpl
daa
movs
and
push
sbb
icebp
inc
into
sti
cmp
cmpxchg
cdq
push
or
sbb
dec
sbb
les
sub
call
add
sub
call
adc
pop
xor
in
ror
fwait
adc
xchg
jl
mov
sbb
shr
push
mov
mov
out
add
mov
js
and
(bad)
hlt
adc
pushf
mov
fwait
pop
or
je
mov
mov
cmp
mov
pop
mov
pop
dec
mov
addr16
mov
xchg
loop
pop
loope
xchg
push
and
aas
pop
mov
or
sbb
sub
sub
cmp
mov
daa
xchg
adc
fwait
mov
cmp
mov
dec
jecxz
je
inc
push
xchg
es
adc
in
mov
or
push
xor
mov
or
adc
push
out
daa
nop
mov
xchg
test
lahf
push
xor
cmps
mov
mov
sbb
adc
add
scas
nop
test
sub
inc
mov
lahf
sub
inc
add
pop
mov
nop
stos
sub
sub
and
lea
das
sbb
in
(bad)
pop
sub
test
mov
cmc
sub
(bad)
or
pop
pushf
and
mov
jl
jg
push
adc
imul
enter
fmul
or
sahf
mov
sbb
adc
and
pusha
retf
sub
cmp
or
mov
pop
test
xor
dec
and
mov
je
push
clc
fiadd
ds
ss
pop
inc
arpl
addr16
aas
or
rcl
xchg
push
ret
mov
das
clc
sahf
mov
pop
push
mov
jnp
outs
movs
or
mov
lahf
fnstcw
cmp
sbb
add
and
inc
sub
xchg
sbb
mov
daa
pop
adc
xchg
nop
bound
leave
push
mov
mov
test
sub
inc
push
rcr
or
xor
sar
xchg
add
pop
ja
adc
test
and
inc
in
sub
shl
lock
cmp
je
mov
in
sbb
push
mov
es
and
push
nop
out
loopne
or
test
fdivr
loopne
xor
(bad)
fistp
int3
mov
sub
leave
sub
aam
fdivr
cmp
mov
addr16
push
or
rol
in
xor
cmp
add
mov
xchg
add
or
fst
mov
sub
pop
pop
rol
push
addr16
leave
je
cwde
imul
jo
and
xor
push
imul
nop
rcr
movs
outs
into
inc
mov
in
pop
xchg
shl
mov
inc
cmp
cmp
lods
adc
or
sbb
loopne
inc
add
mov
pop
rol
or
mov
add
sbb
je
rcl
add
add
scas
jmp
int3
adc
adc
and
mov
add
lahf
(bad)
jmp
sub
call
add
rol
xor
clc
clc
sbb
add
mov
mov
push
push
or
mov
inc
outs
dec
in
call
clc
jo
fbld
call
mov
loopne
push
in
repz
das
sub
push
add
scas
adc
jmp
sub
test
or
push
add
inc
push
xchg
mov
aas
(bad)
fld
or
jne
mov
jnp
mov
xor
xor
mov
push
ror
aad
xor
dec
addr16
(bad)
pushf
cmp
mov
sub
mov
push
sub
leave
xchg
xchg
pusha
inc
dec
dec
aaa
ins
mov
adc
dec
cmps
loop
dec
dec
(bad)
movs
and
mov
inc
imul
repz
pop
add
push
lods
fwait
cmp
mov
mov
ret
xchg
mov
aaa
les
and
(bad)
ds
addr16
cmp
mov
inc
mov
and
pop
and
cld
in
clc
inc
(bad)
push
inc
cmp
(bad)
dec
test
or
test
or
dec
or
dec
and
(bad)
scas
ror
and
push
push
sub
sbb
push
aad
test
adc
mov
cmp
inc
es
loopne
cmp
sbb
add
push
and
inc
add
dec
xor
ins
pop
lahf
jns
push
jl
inc
mov
test
adc
imul
xchg
cmps
test
test
add
out
mov
mov
and
mov
(bad)
pop
setg
dec
cmp
mov
pop
adc
nop
ret
stos
jns
pop
fiadd
xchg
push
push
and
mov
movs
leave
out
xchg
xor
out
or
daa
jp
or
cmps
aam
xchg
sar
inc
ds
push
mov
pop
push
cwde
dec
lock
and
push
shr
test
lods
stos
or
lods
data16
or
lock
xchg
ss
stos
cmp
ret
out
sbb
popa
and
push
inc
loop
sub
loopne
push
retf
push
or
pop
ret
sub
int
sub
sub
shl
jo
out
add
cmp
outs
(bad)
jns
outs
(bad)
jb
cs
mov
dec
jb
adc
add
pop
xchg
jns
mov
inc
inc
and
mov
dec
cmps
pop
pop
mov
and
sar
push
mov
xchg
cmps
fimul
mov
push
fbstp
out
jle
or
add
out
into
jne
jp
dec
lods
loope
sub
cmp
mov
push
xlat
add
arpl
out
xchg
jmp
sbb
adc
push
das
jp
iret
sbb
inc
test
pop
rsqrtps
mov
loopne
pop
push
cmp
ss
xor
sahf
in
(bad)
cdq
xchg
mov
icebp
inc
pop
sbb
ret
out
(bad)
sti
sti
sbb
lds
mov
sbb
call
call
sub
xchg
and
adc
mov
or
mov
pusha
dec
out
imul
in
adc
adc
pushf
movs
or
in
inc
cs
in
sub
xor
outs
mov
pop
xchg
psubw
call
cld
mov
add
xchg
loopne
xor
and
mov
adc
(bad)
popa
sbb
or
mov
xchg
idiv
jmp
fdiv
fadd
fs
cmps
in
sbb
enter
jbe
mov
pandn
adc
cld
into
push
mov
pop
push
push
mov
pop
inc
out
inc
jle
add
loopne
add
daa
pusha
push
pushf
sub
ss
mov
xchg
in
call
cs
mov
push
jb
cmp
pop
and
mov
rcl
mov
mov
out
daa
and
sub
jp
inc
ins
mov
xor
cmps
mov
imul
test
(bad)
bound
mov
icebp
mov
lods
mov
lea
cmps
jmp
repnz
cmps
ficomp
inc
push
dec
cld
cmp
inc
pop
test
les
add
dec
int3
(bad)
jmp
dec
(bad)
ds
dec
loop
inc
jmp
cmp
rcr
imul
jmp
mov
inc
lods
or
mov
sub
pop
mov
nop
mov
int
cmp
outs
add
fwait
sbb
pop
push
add
lea
jp
pusha
mov
and
into
push
mov
fistp
adc
add
push
xor
repz
rep
lods
mov
test
sbb
xchg
inc
add
and
enter
sub
inc
cs
ins
cmp
inc
mov
mov
push
or
mov
mov
mov
cs
mov
or
cwde
mov
mov
mov
and
das
xchg
lock
adc
inc
jb
and
xchg
pop
and
inc
pusha
pop
leave
inc
jb
mov
and
adc
xchg
mov
jo
mov
(bad)
mov
add
ror
repnz
add
dec
pop
and
lock
add
loopne
push
das
xchg
mov
adc
rol
push
or
or
mov
out
pop
shl
push
or
and
clc
daa
cmp
(bad)
(bad)
jmp
leave
xlat
iret
enter
fcomp
fxch
(bad)
(bad)
loopne
jecxz
in
jmp
nop
push
adc
rcl
and
and
and
and
outs
repnz
je
xor
in
dec
inc
push
sub
add
xor
push
push
adc
or
pop
adc
or
adc
repnz
sbb
(bad)
jle
std
fist
add
sbb
sbb
sbb
(bad)
sbb
les
std
sbb
div
loope
sbb
mov
lock
mov
ins
pusha
xchg
test
adc
push
add
xor
mov
(bad)
ds
mov
adc
inc
add
add
jne
movs
xor
push
cwde
dec
adc
imul
mov
es
mov
push
pusha
jns
out
push
out
sahf
out
cwde
mov
jns
mov
fsub
call
add
jns
sbb
sub
out
sahf
out
inc
dec
push
pop
add
jns
pusha
push
jb
popa
add
add
fs
push
mov
xor
pushf
js
in
mov
mov
and
in
nop
daa
and
mov
xor
in
xchg
mov
sbb
jb
mov
cmp
dec
repz
clc
push
and
clc
push
mov
or
loope
mov
sysret
daa
or
inc
iret
out
data16
adc
adc
push
fdivr
repz
shl
push
or
sub
cmp
repz
mov
lock
sahf
out
fbld
pop
js
out
sahf
mov
ins
out
cdq
mov
pop
adc
shl
outs
push
adc
inc
outs
push
push
inc
daa
and
sbb
push
iret
add
add
push
push
jp
sub
out
sub
rol
out
lods
or
call
jg
pop
jmp
lock
dec
inc
lock
or
out
fmul
cld
iret
shl
or
or
popa
outs
jae
push
call
sti
cmc
enter
inc
jno
push
adc
and
fdiv
add
push
adc
rol
cmp
ja
adc
pop
(bad)
sahf
jnp
test
and
add
outs
fwait
scas
sub
sbb
cmps
retf
cmp
(bad)
sti
pusha
mov
or
repz
bound
add
sub
jns
out
adc
inc
out
fldcw
outs
sbb
jae
repz
sbb
adc
iret
repz
in
adc
or
sahf
out
xor
adc
sahf
sbb
pop
in
add
xor
cmp
ror
push
sub
dec
pop
pop
xchg
loopne
xor
pop
pushf
push
and
out
fcom
add
add
repz
inc
or
cmps
stc
mov
xor
dec
dec
jns
out
js
pushf
or
sbb
xor
push
mov
cmps
sbb
sub
mov
sub
pop
fiadd
lods
jmp
icebp
nop
sub
dec
push
mov
and
and
add
add
add
inc
adc
fidivr
or
retf
push
fimul
cmovle
ror
or
xchg
add
outs
adc
mov
adc
sbb
nop
pop
cmp
cmp
ins
mov
adc
push
cmp
or
sbb
push
loopne
push
mov
jns
hlt
or
xor
loope
jecxz
icebp
aaa
xor
add
shr
sti
push
dec
call
add
mov
sti
imul
push
add
das
out
cmp
pop
aas
pop
and
add
add
push
xor
add
loopne
xor
repnz
and
dec
cs
jg
push
push
push
cmp
xor
xor
pop
sub
sub
and
xor
mov
ins
jns
imul
je
outs
and
jb
mov
push
test
pop
mov
mov
sub
fidiv
das
ins
jno
dec
add
aaa
pusha
pop
mov
sub
push
xchg
jae
pop
pop
push
jns
fdivr
push
push
pusha
repz
out
mov
cmps
out
iret
loopne
push
pop
sbb
fiadd
cmp
cmp
add
pop
adc
jns
out
mov
mov
(bad)
jns
lock
adc
adc
jns
out
xor
or
sahf
and
add
inc
call
lahf
pop
push
sbb
add
push
jl
out
loopne
cmp
sahf
pop
(bad)
ins
sub
cmp
repz
iret
repz
add
mov
repz
les
bound
repz
rep
add
cmp
pop
pop
sbb
cmp
aam
push
repz
repz
mov
cmp
aas
iret
add
or
xor
cmp
repz
pcmpgtd
iret
repz
lods
push
xchg
or
repz
push
pushf
arpl
jns
repz
push
outs
sub
push
push
mov
call
(bad)
adc
out
jns
popa
and
jns
inc
loop
sbb
jns
rcr
sub
in
cmp
push
adc
jns
sub
jne
retf
jns
out
stos
add
sahf
xchg
jmp
xchg
out
fisubr
mov
or
jns
xchg
out
ret
jae
(bad)
jns
out
arpl
cmps
add
inc
out
sbb
jnp
(bad)
imul
sahf
out
mov
mov
out
in
push
pop
ja
out
sahf
xchg
into
addr16
scas
pop
out
jns
xchg
pop
pop
cmp
xchg
sahf
jg
fisubr
jp
ja
das
mov
dec
(bad)
nop
or
mov
xchg
shl
mov
in
cs
test
cs
fnstcw
stc
lds
in
or
in
cs
cmc
int
cs
cs
popf
fisttp
in
mov
mov
mov
in
mov
cs
cs
jmp
inc
cs
fstp
sti
(bad)
cmps
or
xchg
or
cs
cs
scas
out
inc
cs
lahf
fist
cs
(bad)
jle
sahf
pop
push
inc
ins
adc
sbb
adc
push
sub
add
add
ficomp
push
mov
outs
jle
adc
and
sbb
adc
add
push
inc
push
jle
sbb
sbb
push
popa
pusha
imul
xor
or
or
xlat
rcr
xor
popf
push
pop
or
cwde
cwde
adc
shl
cmovs
push
ins
and
call
hlt
gs
and
or
jne
ja
sub
add
xor
push
jno
lods
fldenv
xor
test
jae
lods
int
and
sbb
je
jo
test
xor
adc
jb
jns
push
ret
and
jns
bound
arpl
pop
sbb
dec
add
imul
loop
adc
ins
mov
iret
sub
call
in
xor
mov
fs
cmp
ins
imul
xchg
pop
sub
es
adc
adc
sbb
push
xchg
pop
xchg
sub
xchg
jmp
call
jecxz
jp
daa
daa
daa
pop
adc
adc
frstor
daa
adc
ret
test
or
push
cmc
adc
popa
out
shl
dec
into
push
adc
ret
xchg
dec
inc
mov
loop
dec
and
mov
repz
ret
push
add
iret
repz
sbb
sbb
sbb
push
ret
lock
and
stos
adc
xor
pusha
inc
pop
in
inc
cmp
pop
add
pop
jb
add
ins
and
jb
add
add
in
in
or
or
or
add
jge
push
aaa
test
iret
repz
sub
ins
in
repz
repz
pop
fdivr
repz
mov
inc
cmp
repz
and
iret
repz
repz
mov
repnz
cmp
sub
iret
repz
repz
mov
inc
cmp
repz
cmps
data16
cmp
repz
xchg
push
(bad)
ss
repz
mov
test
dec
cmp
repz
cs
outs
out
repz
repz
sahf
pop
fidivr
iret
repz
mov
inc
cmp
repz
and
iret
repz
repz
mov
icebp
or
cmp
sub
iret
repz
repz
mov
inc
cmp
repz
and
cmp
repz
iret
repz
mov
cmc
or
repz
sub
cmp
repz
sar
cmp
mov
or
sahf
out
pop
xchg
push
xchg
push
push
rcl
jns
out
xor
mov
jae
jns
out
repz
sahf
out
sahf
mov
jns
out
sub
stos
stos
imul
sahf
out
jmp
sbb
sahf
out
sahf
fwait
fwait
pop
pop
fcmovnu
jns
out
cmp
mov
sahf
out
sti
sti
pop
pop
sahf
out
sahf
xchg
jns
out
daa
daa
cmps
cmps
addr16
sahf
out
out
pop
pop
sahf
out
sahf
xchg
xchg
push
push
xlat
xlat
jns
out
aaa
aaa
mov
ja
jns
out
div
(bad)
setle
jns
(bad)
(bad)
dec
dec
iret
iret
jns
out
das
das
scas
scas
outs
out
sahf
out
out
out
pop
pop
sahf
out
sahf
lahf
lahf
pop
pop
(bad)
jns
out
aas
aas
mov
sahf
out
(bad)
dec
inc
push
iret
repz
and
push
xor
iret
repz
dec
sub
repz
repz
cmp
inc
iret
repz
and
adc
xor
repz
cmp
inc
ret
and
arpl
jecxz
repz
inc
push
or
add
or
iret
repz
add
or
repz
repz
push
push
push
add
repz
adc
sbb
repz
add
or
loop
into
repz
pop
dec
dec
add
daa
or
inc
call
xor
sub
xor
mov
push
pusha
xchg
xor
shl
mov
aad
push
xlat
or
sbb
frstor
add
mov
push
dec
jmp
inc
inc
push
push
sysexit
shl
cld
in
movs
cmp
daa
call
adc
add
push
or
jnp
call
sbb
daa
daa
iret
pop
or
or
jb
or
jb
jb
push
(bad)
icebp
popa
push
sub
cmp
pop
sbb
mov
mov
inc
push
mov
pop
sbb
outs
xor
xor
add
adc
adc
nop
or
cs
or
sbb
pop
aam
call
(bad)
(bad)
call
xchg
xor
ja
popa
push
out
mov
les
(bad)
hlt
push
xor
(bad)
(bad)
jmp
mov
push
movs
mov
aad
mov
rcl
mov
sub
(bad)
call
adc
push
jno
repz
test
ficomp
jmp
(bad)
mov
hlt
(bad)
(bad)
(bad)
inc
test
adc
adc
test
fs
(bad)
std
in
leave
mov
add
ins
push
arpl
psubd
(bad)
(bad)
push
or
outs
cmp
imul
addr16
add
aam
dec
std
test
jmp
or
ins
cwde
mov
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
or
(bad)
call
shr
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
dec
movs
mov
sub
mov
(bad)
and
or
adc
stos
sbb
(bad)
(bad)
cmp
inc
fdiv
jno
add
aad
mov
mov
movs
in
lahf
(bad)
jg
push
aam
call
xor
mov
test
xchg
sbb
push
sub
clc
dec
xchg
ins
fs
add
hlt
push
imul
(bad)
(bad)
call
xor
dec
add
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
cld
(bad)
(bad)
call
jmp
cld
fistp
ficom
gs
aam
pop
popa
mov
into
jg
push
pop
cmp
mov
inc
movs
fisttp
xchg
fadd
(bad)
shl
(bad)
(bad)
jmp
imul
mov
sar
add
in
add
pop
dec
or
(bad)
inc
cmp
add
daa
push
or
and
test
or
data16
(bad)
(bad)
(bad)
mov
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
imul
mov
mov
(bad)
jmp
mov
call
jmp
fild
push
fdiv
or
test
fs
ds
(bad)
(bad)
jmp
or
or
push
in
dec
xchg
daa
scas
add
mov
pop
jge
xchg
(bad)
shl
(bad)
(bad)
push
add
inc
push
imul
xor
sbb
push
imul
aam
loopne
ror
(bad)
jp
adc
dec
frstor
fistp
mov
mov
aad
mov
call
xchg
shl
inc
fdivr
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
idiv
(bad)
(bad)
dec
ss
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
and
(bad)
(bad)
(bad)
call
outs
and
xchg
ja
int3
add
mov
das
es
lds
or
(bad)
call
sub
mov
cmps
call
ret
shl
sbb
ret
es
pushf
(bad)
(bad)
(bad)
jmp
ins
add
ss
jmp
addr16
jb
push
add
adc
mov
(bad)
jmp
mov
cmp
mov
fwait
mov
xchg
or
out
fdivr
fisttp
aam
rol
clc
mov
(bad)
push
ficomp
int
mov
mul
ja
outs
ja
mov
out
cli
inc
(bad)
(bad)
push
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
(bad)
(bad)
(bad)
call
js
or
push
add
mov
cmp
cmps
not
pusha
ror
imul
(bad)
(bad)
ds
push
scas
fcomp
fldenv
fild
cmp
scas
(bad)
(bad)
(bad)
(bad)
mov
fidivr
mov
jmp
repnz
retf
mov
cmps
mov
(bad)
(bad)
(bad)
call
mov
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
fild
sub
sbb
push
(bad)
jmp
mov
hlt
ja
xchg
inc
dec
or
(bad)
dec
ret
call
hlt
jecxz
dec
mov
dec
jle
mov
sub
cwde
xchg
ret
(bad)
(bad)
call
and
push
shl
js
inc
out
popa
push
xlat
scas
cs
mov
xlat
mov
sbb
test
cmp
(bad)
call
test
sub
test
sbb
ins
(bad)
fistp
inc
aam
push
pop
int
and
xchg
std
(bad)
(bad)
jmp
adc
mov
popa
ja
mov
out
repz
gs
fisubr
mov
inc
sub
imul
jo
scas
imul
out
pop
sub
sub
pop
or
sbb
repz
fbstp
push
jo
add
hlt
div
sub
(bad)
(bad)
push
sbb
xor
pop
nop
sti
mov
test
jns
test
cmp
jns
jae
dec
call
(bad)
jge
lds
sub
pop
add
jle
jmp
(bad)
sbb
adc
call
call
cmp
dec
hlt
mov
or
xchg
lea
or
int3
mov
dec
xor
inc
mov
outs
retf
push
pop
mov
mov
lea
push
cwde
xlat
ficom
test
loope
xchg
retf
les
(bad)
call
bound
out
imul
push
inc
lahf
test
pop
adc
push
sbb
adc
and
inc
and
jecxz
std
gs
out
and
cmp
dec
mov
mov
xchg
call
and
cmps
xor
mov
lods
out
sar
mov
adc
stos
and
(bad)
(bad)
dec
jmp
sti
push
jns
das
mov
and
je
or
repnz
push
dec
mov
dec
push
jo
gs
out
jle
(bad)
repz
mov
xchg
rcl
cmp
ss
(bad)
(bad)
dec
call
cmps
test
cwde
cmp
test
mov
mov
scas
adc
(bad)
(bad)
(bad)
(bad)
out
pop
push
ins
hlt
inc
int
fldcw
push
ret
adc
add
inc
jmp
ja
inc
xlat
(bad)
(bad)
(bad)
push
xchg
push
out
mov
mov
movs
test
jno
mov
ja
(bad)
ins
pop
push
dec
(bad)
(bad)
(bad)
jmp
or
sub
add
adc
cwde
mov
nop
bound
xchg
push
lds
cld
(bad)
push
fst
out
les
fdecstp
jmp
lea
inc
xor
out
sub
dec
jo
outs
sbb
sub
loope
fisub
(bad)
call
lds
push
call
dec
in
mov
movs
ret
addr16
test
mov
(bad)
(bad)
jmp
stc
lahf
fdivrp
cmp
repz
jnp
call
cmp
mov
or
stos
mov
sbb
(bad)
(bad)
jmp
adc
sub
jae
xor
mov
jo
cmc
shr
add
mov
arpl
push
mov
mov
stc
dec
xlat
loopne
adc
mov
(bad)
(bad)
(bad)
push
popf
mov
test
and
pop
ins
cmp
les
adc
sub
dec
add
sar
(bad)
(bad)
cli
jns
or
cmp
popf
cmps
push
mov
xchg
adc
in
xor
cdq
(bad)
(bad)
(bad)
jmp
xlat
fcom
into
pop
dec
loope
push
jle
push
xchg
sub
int3
bound
mov
xor
(bad)
(bad)
(bad)
(bad)
call
mov
pop
lods
ret
outs
xchg
dec
ins
das
mov
adc
test
jecxz
sub
fisub
adc
jns
(bad)
(bad)
mov
(bad)
sbb
mov
mov
in
and
(bad)
(bad)
(bad)
out
out
mov
shl
es
xchg
aas
mov
adc
out
(bad)
(bad)
dec
sar
mov
gs
pop
jle
aaa
or
jbe
dec
div
lahf
adc
xor
aas
mov
and
push
push
add
test
pop
mov
cmp
aaa
mov
ret
mov
dec
push
dec
push
(bad)
inc
(bad)
cmp
(bad)
test
or
stc
sbb
sub
call
inc
mov
inc
leave
in
push
ja
pop
sub
das
sbb
popa
in
sbb
fild
sbb
repnz
adc
dec
jae
adc
cmp
and
(bad)
(bad)
push
(bad)
adc
mov
pop
loopne
dec
cmp
sub
cmp
clc
or
cmp
inc
aas
or
(bad)
(bad)
inc
cmp
push
add
outs
jge
aaa
ss
fidiv
test
stos
(bad)
call
xchg
xor
imul
fld
adc
nop
in
and
(bad)
mov
fdivr
(bad)
(bad)
jmp
leave
pop
sub
and
mov
and
mov
sub
fidivr
(bad)
(bad)
(bad)
jmp
jno
ds
sbb
sub
call
das
ror
jno
pop
(bad)
(bad)
(bad)
cmp
xor
jb
and
push
jbe
icebp
pop
je
fwait
aad
js
mov
mov
(bad)
(bad)
dec
push
or
jl
je
jns
push
inc
js
mov
(bad)
jnp
cs
cli
mov
cmp
nop
es
xchg
pop
in
ja
out
clc
jmp
push
xor
cmp
imul
ins
arpl
sub
shr
aam
push
(bad)
(bad)
jmp
fs
imul
dec
pop
mov
outs
jns
(bad)
mov
arpl
dec
retf
or
xchg
mov
dec
movs
fstp
inc
scas
push
(bad)
(bad)
push
push
inc
test
shl
inc
xor
inc
jae
cmovo
out
inc
sbb
and
icebp
push
add
push
ds
mov
mov
clc
push
mov
stos
cmp
adc
push
aad
mov
pop
(bad)
mov
in
pop
mov
movs
pop
lock
add
sub
outs
pop
ins
das
lods
pop
(bad)
(bad)
(bad)
inc
jno
loopne
iret
mov
fldenv
cmp
imul
out
addr16
in
(bad)
(bad)
(bad)
cmp
out
mov
out
push
sahf
mov
in
in
das
call
mov
stos
jmp
pop
imul
lock
cld
sahf
ins
xchg
(bad)
test
adc
cli
sbb
sti
(bad)
(bad)
(bad)
inc
sahf
stc
jne
pop
clc
dec
jmp
ret
cmp
inc
icebp
xchg
inc
or
mov
(bad)
(bad)
(bad)
cli
xchg
(bad)
test
pop
js
push
aaa
mov
fidivr
jecxz
fstp
mov
(bad)
(bad)
(bad)
call
and
fucom
dec
aaa
(bad)
or
xlat
out
test
fsubr
aam
mov
aad
movs
(bad)
shl
into
mov
jmp
out
pop
sbb
adc
pop
lds
xchg
pushf
les
fcmovb
dec
inc
sbb
int3
push
push
ret
xchg
ret
call
adc
xchg
call
dec
retf
lahf
lds
adc
aad
pop
or
ins
xchg
sbb
ror
mov
(bad)
(bad)
(bad)
jg
ja
ins
nop
cs
sub
pushf
cmps
xchg
stos
push
fs
repnz
clc
(bad)
(bad)
(bad)
(bad)
(bad)
mov
sahf
xchg
adc
pushf
mov
outs
mov
adc
xor
xor
mov
pop
loope
mov
iret
(bad)
in
popf
or
dec
(bad)
(bad)
fisttp
and
mov
push
pop
and
push
adc
fadd
(bad)
call
test
sbb
xchg
shl
test
into
add
stos
stc
outs
movs
stos
jl
(bad)
(bad)
(bad)
(bad)
jmp
dec
adc
scas
adc
lods
sbb
xor
inc
aas
mov
les
(bad)
(bad)
(bad)
(bad)
clc
mov
stos
std
jl
popf
xchg
mov
mov
sbb
mov
cmps
inc
mov
int
mov
(bad)
(bad)
(bad)
dec
mov
mov
mov
cmovns
push
dec
adc
mov
mov
in
dec
cld
(bad)
fidivr
pop
pop
mov
out
mov
mov
stos
out
scas
mov
push
xchg
bound
shr
and
add
dec
or
loopne
(bad)
(bad)
(bad)
mov
xlat
mov
fsubr
xor
loopne
adc
lahf
push
sbb
xor
(bad)
(bad)
call
cli
jno
lods
inc
enter
lods
cmps
(bad)
addr16
or
outs
into
int
jg
xchg
adc
mov
(bad)
(bad)
jmp
daa
call
jae
lods
and
mov
inc
jp
ds
xor
mov
(bad)
(bad)
(bad)
(bad)
cmp
rol
xchg
or
in
xchg
loop
pop
test
xchg
fstp
(bad)
(bad)
push
(bad)
iret
aas
sub
xchg
in
jecxz
pop
push
or
mov
sub
les
(bad)
in
sub
and
loop
outs
dec
jg
or
(bad)
jge
aad
sar
jmp
xor
lds
xchg
lahf
mov
inc
std
mov
xchg
(bad)
hlt
adc
(bad)
fcomip
imul
dec
test
adc
pop
aas
test
mov
sbb
mov
jbe
push
retf
(bad)
jmp
pusha
ret
push
shl
pop
mov
sbb
pop
mov
adc
shl
cmp
sbb
retf
jnp
dec
ja
prefetchw
or
jae
mov
cmc
cwde
lods
(bad)
(bad)
jmp
nop
call
cld
jle
data16
sbb
ficom
daa
mov
mov
out
mov
(bad)
jg
lods
or
sbb
cmp
sub
pop
outs
xchg
add
cmp
(bad)
dec
das
xchg
in
pop
xchg
sub
mov
pop
clc
or
test
push
mov
jmp
xchg
dec
pop
fwait
push
add
in
mov
dec
leave
xor
(bad)
fist
inc
arpl
adc
push
mov
aaa
pop
in
push
loope
inc
call
(bad)
dec
cwde
call
scas
push
out
aaa
push
clc
inc
add
and
mov
cdq
scas
xlat
loopne
retf
xor
mov
in
pop
shl
push
mov
inc
aad
in
jmp
(bad)
jmp
cmp
inc
xchg
out
xor
or
sub
push
in
cmp
pop
cmp
or
pop
or
xchg
movs
loope
mov
sub
dec
dec
cmc
(bad)
(bad)
(bad)
jmp
xchg
adc
cwde
sbb
leave
hlt
js
scas
dec
rol
std
shl
(bad)
sbb
xchg
idiv
sub
sbb
repnz
and
sbb
pusha
(bad)
(bad)
(bad)
jle
cmc
mov
(bad)
out
mov
pop
push
mov
ret
mov
fld
(bad)
push
cmp
mov
mov
stc
(bad)
and
push
mov
rol
std
(bad)
(bad)
push
outs
mov
push
or
adc
jmp
into
movs
adc
(bad)
bswap
fst
xchg
test
(bad)
jg
dec
jmp
xor
fcom
add
(bad)
(bad)
(bad)
(bad)
(bad)
scas
iret
jb
leave
jae
and
movs
push
inc
xchg
sbb
test
pop
adc
out
dec
jbe
mov
into
pop
hlt
(bad)
dec
inc
clc
fs
jns
stc
xor
xchg
inc
fidiv
jmp
(bad)
stc
(bad)
(bad)
(bad)
push
bound
lock
imul
ss
test
(bad)
cs
mov
jmp
cld
fsubrp
sahf
adc
mov
loope
into
cs
out
add
add
jecxz
neg
pop
jmp
icebp
and
sub
aam
into
mov
iret
test
(bad)
(bad)
inc
(bad)
pop
es
outs
mov
jbe
(bad)
out
retf
(bad)
sbb
loope
push
adc
cmp
(bad)
jmp
adc
mov
jle
cmp
pushf
in
adc
add
(bad)
(bad)
jg
sbb
cmps
push
data16
jno
ds
outs
sub
mov
add
xchg
out
mov
dec
or
call
cs
dec
rol
pop
outs
sti
ret
neg
jmp
pop
test
or
xchg
popa
mov
cmc
icebp
push
add
xchg
out
push
popa
sub
or
pop
ins
(bad)
(bad)
(bad)
(bad)
call
jo
hlt
(bad)
xor
push
fisttp
movs
loopne
jmp
mov
mov
(bad)
(bad)
(bad)
jmp
jle
jl
out
sub
xchg
sbb
mov
repnz
inc
ficomp
fcmovbe
(bad)
jmp
in
hlt
aam
push
sub
push
imul
mov
(bad)
(bad)
dec
in
adc
pop
dec
arpl
ins
fsqrt
(bad)
arpl
outs
and
dec
imul
in
addr16
(bad)
(bad)
push
cmp
in
dec
add
inc
ror
mov
xor
mov
ins
fstp
or
(bad)
(bad)
stc
inc
xor
ins
jecxz
fistp
(bad)
or
pop
fnstenv
lods
push
mov
enter
call
push
cmp
hlt
mov
mov
and
mov
movs
movaps
mov
or
(bad)
(bad)
(bad)
dec
mov
or
and
outs
jl
pop
push
sbb
cmp
add
jno
cwde
das
sar
shl
mov
jno
test
lahf
mov
xor
jg
aad
leave
les
and
or
sbb
or
fwait
gs
jmp
out
pop
add
push
hlt
sbb
test
(bad)
(bad)
push
fdiv
bound
dec
ins
push
xchg
in
sbb
movs
jnp
or
shl
les
mov
(bad)
adc
ret
jmp
sbb
(bad)
fisubr
repz
aam
gs
mov
test
into
mov
and
mov
movs
inc
cmp
rol
ins
rcl
(bad)
(bad)
(bad)
push
sti
inc
imul
cld
lods
mov
pusha
mov
jae
add
pop
fisttp
jl
push
add
inc
stos
mov
or
xchg
mov
and
mov
(bad)
(bad)
(bad)
jg
or
popa
in
pop
fdivrp
push
sub
leave
cwde
mov
cwde
and
xlat
test
pop
mov
pop
cs
xor
mov
and
mov
loop
mov
call
(bad)
call
(bad)
adc
jecxz
or
xchg
cmp
pop
cmc
(bad)
(bad)
jmp
xchg
or
popf
or
scas
daa
jge
sahf
mov
setae
mov
(bad)
dec
mul
pop
and
sbb
outs
imul
(bad)
(bad)
jmp
(bad)
aam
jbe
shr
loopne
fidivr
fisttp
stc
mov
out
stc
pop
mov
inc
pusha
mov
cmp
call
(bad)
(bad)
mov
push
fadd
les
repnz
sar
pop
call
mov
fisttp
ss
fmul
sbb
dec
test
sar
mov
pusha
out
ret
test
fist
outs
mov
inc
imul
sbb
outs
shl
int3
or
xchg
mov
add
mov
(bad)
(bad)
(bad)
inc
mov
or
sub
add
xlat
jmp
sub
sahf
mov
scas
sbb
fwait
fs
arpl
es
mov
or
ss
jb
test
add
sbb
(bad)
call
mov
sub
xchg
ror
repnz
(bad)
(bad)
(bad)
push
xchg
rcl
icebp
aam
inc
push
fiadd
int
mov
ja
(bad)
out
clc
loope
mov
ja
pop
out
punpckhdq
push
cmp
adc
or
sahf
(bad)
clc
(bad)
(bad)
(bad)
(bad)
jmp
rcl
ins
iret
inc
mov
or
adc
ret
es
shl
(bad)
(bad)
call
test
ja
scas
shr
(bad)
pop
fadd
or
fdivr
lock
mov
sahf
lds
iret
jg
mov
jmp
retf
mov
xchg
xor
mov
add
mov
push
xchg
push
ficom
and
addr16
jp
les
mov
sub
xchg
mov
lods
(bad)
dec
mov
mov
sub
sbb
xor
bound
call
lds
pop
cmps
xchg
xchg
(bad)
enter
rol
mov
(bad)
cli
out
call
retf
lods
mov
or
scas
jle
sahf
sub
dec
ret
push
fldenv
adc
(bad)
(bad)
(bad)
js
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
cwde
mov
add
sbb
sbb
(bad)
(bad)
push
ss
call
ins
sbb
inc
aas
(bad)
pop
push
sahf
xchg
test
mov
(bad)
jmp
test
loope
call
fiadd
gs
scas
stos
inc
inc
(bad)
(bad)
(bad)
call
sub
std
imul
sub
or
or
sbb
ins
fild
repz
pop
mov
push
inc
mov
jo
jno
imul
sub
mul
(bad)
mov
pop
mov
sti
push
test
jns
mov
cmp
inc
cld
repz
push
dec
push
lds
jge
fisubr
cmp
(bad)
mov
bound
ret
xchg
push
sbb
xchg
adc
mov
pop
(bad)
and
cmps
fld
cmp
hlt
dec
or
cmps
(bad)
adc
add
inc
xlat
xor
cli
bound
(bad)
mov
mov
lea
(bad)
xchg
xchg
push
xchg
(bad)
cwde
push
(bad)
int3
test
shl
cli
retf
(bad)
(bad)
(bad)
call
imul
inc
push
mov
pop
dec
test
unpckhps
sbb
jo
cmp
cs
fwait
gs
imul
and
add
lahf
loop
(bad)
(bad)
push
cmps
int3
and
mov
loope
mov
shr
lahf
adc
ins
leave
dec
and
rcl
jmp
inc
sub
gs
das
aas
jns
ss
mov
or
je
adc
xor
push
dec
lea
jns
fidiv
jle
xor
out
(bad)
(bad)
std
ret
rcl
cmp
call
push
cmps
cmp
sbb
or
retf
mov
pop
dec
inc
hlt
ins
push
(bad)
(bad)
(bad)
jmp
aas
int
ret
repz
adc
inc
and
shr
ja
adc
out
(bad)
(bad)
(bad)
jmp
sbb
push
ja
cwde
pop
ins
(bad)
adc
ss
(bad)
(bad)
(bad)
jmp
sbb
fnstsw
xor
mov
push
rcr
hlt
lds
(bad)
out
hlt
push
mov
ret
neg
xchg
aad
pop
mov
test
xor
imul
pop
in
shl
lods
clc
pop
sbb
inc
sub
data16
loope
lds
cld
arpl
lods
mov
in
test
xchg
sub
(bad)
(bad)
(bad)
jmp
lds
stc
(bad)
repz
cmp
call
imul
or
stos
test
jg
(bad)
(bad)
jmp
and
xor
sub
pop
xor
dec
jo
mov
imul
jp
xor
pop
mov
out
fsub
dec
shl
out
stc
add
xlat
push
scas
xchg
adc
in
(bad)
push
mov
inc
mov
and
sbb
ins
je
aas
les
push
push
test
(bad)
(bad)
(bad)
call
add
cli
ror
cmp
hlt
pop
mov
cmps
popf
stos
adc
hlt
(bad)
(bad)
inc
sbb
dec
xor
bound
into
jns
fmul
dec
pop
push
cli
jle
jnp
sub
mov
lea
mov
fnop
(bad)
(bad)
(bad)
call
repz
inc
gs
dec
xchg
outs
jne
mov
call
or
push
aas
gs
(bad)
call
mov
sbb
mov
daa
repnz
mov
mov
pop
call
and
loope
or
mov
jle
shl
imul
adc
cmp
ja
fsub
push
jle
hlt
out
push
or
test
std
dec
scas
mov
adc
xor
ret
xchg
cmc
dec
inc
test
outs
add
pop
lods
test
push
retf
ret
call
inc
mov
dec
push
test
adc
psrlw
(bad)
or
push
out
loope
sbb
fs
mov
xchg
push
or
cmp
sbb
mov
(bad)
call
pusha
sbb
lods
sbb
popa
fwait
sbb
mov
adc
cwde
call
mov
cmps
(bad)
(bad)
(bad)
call
jae
xchg
adc
(bad)
xor
push
mov
in
cmp
loopne
(bad)
sub
cmp
xchg
mov
(bad)
(bad)
(bad)
cmp
clc
mov
xchg
cmp
pop
pop
pop
aaa
pushf
jge
xor
(bad)
(bad)
push
test
test
xchg
aad
xor
imul
adc
frstor
in
mov
(bad)
(bad)
jg
cmps
daa
aam
es
dec
dec
and
cdq
and
and
adc
(bad)
push
sub
pusha
inc
sub
or
jno
hlt
sub
jbe
cs
enter
mov
(bad)
(bad)
dec
div
pop
scas
jb
xor
jbe
dec
sub
jb
aad
inc
jle
(bad)
(bad)
(bad)
(bad)
fdivr
dec
mov
jge
or
jl
bound
jns
je
js
push
xchg
jp
mov
std
ins
mov
cs
jl
outs
cmp
fisub
nop
jmp
(bad)
jmp
in
pop
push
repz
arpl
popa
sub
(bad)
(bad)
inc
push
cmps
xlat
aam
fs
mov
dec
xlat
retf
and
mov
or
dec
dec
fs
arpl
dec
sbb
retf
dec
(bad)
(bad)
(bad)
call
xchg
dec
cwde
frstor
inc
push
lock
inc
inc
dec
test
inc
int
inc
inc
addps
(bad)
(bad)
(bad)
dec
sub
mov
push
xor
addr16
jne
ds
mov
or
ror
(bad)
(bad)
(bad)
jl
loop
mov
cmp
pop
and
pop
in
xchg
xchg
pop
sub
add
cld
(bad)
jmp
pop
pop
lods
das
ins
loope
sbb
loop
iret
out
jecxz
movs
movs
cmp
pop
(bad)
(bad)
mov
stos
mov
or
cmp
in
paddsb
hlt
and
(bad)
jmp
das
loop
jmp
stos
ss
imul
cmp
xchg
ins
sahf
call
test
sti
fdivr
stc
sahf
les
pop
scas
(bad)
jg
mov
dec
bnd
lock
adc
or
(bad)
(bad)
inc
cmc
retf
sub
test
fnstcw
pusha
fdivr
mov
fstp
jecxz
fidiv
(bad)
(bad)
push
mov
(bad)
and
fdiv
dec
in
imul
test
fdiv
shl
(bad)
(bad)
jmp
shl
jo
shl
pop
lds
adc
pushf
xchg
daa
(bad)
fisubr
jle
sbb
ret
(bad)
(bad)
call
ret
xchg
cmp
rcl
mov
retf
dec
scas
test
pop
lahf
enter
pop
cmc
(bad)
dec
adc
int3
inc
pop
je
xchg
iret
rcl
into
add
nop
ins
cld
ja
(bad)
(bad)
call
jmp
ds
xchg
fs
stos
xchg
and
repnz
loopne
jo
xbegin
cld
jmp
xchg
popf
cli
jns
cwde
mov
and
add
dec
call
(bad)
dec
pop
pop
mov
mov
sbb
mov
or
(bad)
(bad)
call
push
mov
sbb
int3
push
test
arpl
aad
or
jmp
shl
stos
data16
stos
movs
outs
stc
scas
jmp
jl
sub
dec
lods
outs
lods
adc
(bad)
(bad)
push
sbb
movs
jne
jbe
mov
inc
mov
cmp
mov
mov
(bad)
(bad)
inc
jae
mov
sbb
mov
cmps
mov
mov
fisttp
cmpxchg
mov
punpckldq
(bad)
(bad)
(bad)
call
and
adc
test
xchg
pushf
xor
loopne
mov
cwde
xor
(bad)
dec
add
mov
enter
scas
out
(bad)
bound
hlt
(bad)
fdivp
xor
xlat
cmp
or
outs
mov
cli
call
dec
(bad)
mov
fucom
fbstp
pop
arpl
(bad)
jmp
dec
sbb
call
adc
jno
jnp
enter
lods
jne
aaa
std
push
inc
int
outs
es
lods
jg
sub
mov
xchg
rcr
(bad)
(bad)
(bad)
jmp
(bad)
and
xor
pop
or
addr16
xchg
shr
push
cmp
(bad)
(bad)
call
pop
lock
in
xchg
xchg
fnstsw
loopne
iret
(bad)
dec
pop
loop
aas
jmp
xchg
ja
inc
in
fmul
lock
mov
pop
and
sub
sahf
push
dec
jg
jmp
sbb
outs
test
or
rcr
lahf
ror
and
call
sub
mov
inc
and
(bad)
xchg
test
call
cmp
(bad)
(bad)
(bad)
push
sbb
not
adc
iret
push
retf
mov
ret
pusha
test
jo
out
pop
mov
aaa
std
push
test
fistp
ret
imul
ret
ja
imul
ud0
inc
popa
add
sub
mov
cwde
cmc
cld
sar
nop
out
push
jle
(bad)
(bad)
(bad)
push
sbb
mov
inc
sub
mov
cmp
jg
sar
xchg
outs
(bad)
push
pop
hlt
cmp
test
das
aas
mov
xchg
pop
in
mov
pusha
push
or
pop
xor
push
fdivr
dec
fbld
xchg
fucomip
inc
mov
fwait
pop
addr16
daa
jo
jno
dec
mov
(bad)
xor
inc
out
imul
pushf
(bad)
call
ss
jb
pop
aaa
retf
pop
loope
scas
dec
mov
inc
call
mov
aaa
out
push
add
inc
clc
inc
daa
popf
and
pop
sar
mov
js
mov
xlat
scas
xor
in
pop
mov
push
in
pop
inc
pop
(bad)
out
clc
jg
(bad)
in
sbb
bound
and
inc
sbb
jmp
sub
sahf
aam
(bad)
dec
and
pop
cmp
cmps
(bad)
xor
or
cmp
std
mov
cld
sbb
dec
sub
scas
cmc
test
and
mov
adc
and
leave
dec
ror
sar
add
push
movs
not
(bad)
(bad)
mov
and
dec
imul
cmc
xlat
jle
out
ror
ret
adc
or
aaa
out
fnop
jg
(bad)
fild
mov
xor
xor
(bad)
and
stc
popa
call
rcr
mov
(bad)
call
loopne
adc
dec
call
xchg
(bad)
loope
xchg
adc
(bad)
(bad)
(bad)
dec
sub
inc
and
jne
jp
adc
scas
dec
jae
fwait
push
movs
icebp
(bad)
(bad)
(bad)
jmp
out
sbb
test
jbe
out
push
into
icebp
mov
inc
lea
call
mov
xchg
push
xor
es
jmp
fdiv
inc
mov
bound
jmp
cmp
push
mov
xchg
xchg
cdq
xor
es
mov
cld
mov
adc
(bad)
(bad)
(bad)
call
ja
ss
adc
out
mov
loopne
jbe
pop
not
dec
jmp
pop
leave
(bad)
(bad)
ds
ins
add
aam
popa
inc
out
stos
jle
(bad)
(bad)
(bad)
jmp
cmp
es
jl
mov
pop
sbb
mov
repz
in
test
(bad)
(bad)
(bad)
jns
adc
imul
mov
jle
cmp
cdq
in
(bad)
jmp
push
outs
xchg
cmps
fidiv
sub
fisubr
sar
lock
out
(bad)
(bad)
call
sbb
ds
sti
outs
pop
sub
push
addr16
cmps
int3
mov
pop
je
into
mov
mov
fiadd
add
inc
add
lock
jg
lock
add
out
test
call
(bad)
mov
mov
cmc
cmc
sbb
cli
jmp
add
iret
aas
push
fidiv
inc
xchg
clc
rol
sti
out
scas
in
push
cmc
out
scas
mov
loopne
cmp
out
aad
ins
fisubr
iret
sub
mov
enter
xchg
neg
scas
and
push
push
stc
addr16
(bad)
cli
int
mov
dec
call
push
fidivr
je
rcr
jl
mov
fmul
out
and
int
pop
add
sub
or
cs
(bad)
outs
fwait
dec
addr16
fcom
add
pop
movs
sub
cld
sti
out
add
shr
add
movs
pusha
add
mov
mov
add
movs
loopne
aas
(bad)
out
push
inc
into
push
mov
and
push
mov
add
(bad)
cld
repz
sub
aas
add
jmp
mov
add
out
call
out
lods
cmp
pop
push
lods
ss
and
push
add
lods
cli
adc
jg
shl
add
out
nop
pop
aam
xchg
iret
aas
push
mov
(bad)
fisub
jo
mov
imul
jmp
push
add
sti
cwde
cdq
or
int
adc
into
cmp
jno
popf
jg
push
mov
mov
lock
out
imul
fs
xor
iret
sub
shr
add
int
in
repz
mov
sub
scas
out
pop
fwait
idiv
nop
push
lods
fsub
(bad)
pop
xchg
mov
clc
cdq
cli
push
fs
in
pop
pusha
jle
lock
mov
add
dec
ror
add
fnstcw
aas
jle
pusha
mov
sbb
ret
adc
push
inc
imul
mov
push
sbb
jo
enter
clc
pop
sahf
mov
pop
mov
fidivr
inc
mov
pop
xlat
rcr
add
arpl
out
cmp
xor
add
out
push
mov
cld
jnp
mov
add
(bad)
out
fs
out
mov
push
mov
xchg
jo
add
in
call
add
gs
mov
xor
sub
fidiv
add
repz
mov
mov
repz
aaa
fisttp
ror
adc
mov
fiadd
xor
push
arpl
cld
ja
cdq
add
neg
cmp
and
jle
lahf
jg
inc
add
int
jo
adc
mov
add
push
sahf
hlt
sbb
(bad)
push
iret
aas
dec
dec
cmp
dec
dec
add
mov
jnp
test
jl
out
push
add
mov
pop
cmp
popf
stc
ds
jo
mov
and
cmovo
out
jmp
in
mov
or
xlat
test
bsf
push
je
scas
imul
push
(bad)
mov
cld
aas
(bad)
mov
test
bound
lods
movs
xchg
push
jecxz
push
scas
mov
sahf
push
pop
lahf
jg
pop
sub
repz
add
jg
ss
push
jo
mov
nop
cwde
lahf
out
sahf
mov
pushf
add
cdq
inc
push
(bad)
fdiv
or
repz
shl
push
jo
loopne
push
into
test
test
stos
sub
or
xchg
jge
xor
pop
dec
daa
test
mov
nop
add
add
add
add
or
and
and
imul
gs
inc
add
arpl
add
movs
aam
xchg
add
sbb
daa
push
add
dec
jnp
jbe
pop
or
nop
daa
aam
(bad)
scas
hlt
push
out
call
cli
sahf
out
sahf
dec
stc
ins
clc
mov
jns
out
mov
shl
lock
out
adc
repz
iret
repz
push
icebp
jo
nop
out
cmp
repz
out
aam
in
out
sub
in
dec
jmp
jmp
jo
xchg
add
leave
or
ins
mov
adc
pushw
or
jg
pop
(bad)
icebp
push
inc
add
or
or
add
push
jl
out
call
iret
repz
xor
pop
push
cmp
mov
ds
repz
cld
adc
sub
adc
cmp
add
daa
(bad)
aaa
sbb
ror
jmp
sbb
(bad)
adc
add
lahf
add
add
iret
fist
dec
pop
mov
pop
add
mov
jg
stc
out
sahf
out
mov
jns
cld
std
(bad)
inc
add
sahf
out
test
jg
out
add
je
inc
add
and
stos
or
inc
xlat
mov
(bad)
loope
clc
inc
aaa
cmps
movs
xor
add
push
adc
repz
rcl
fdiv
cwde
add
(bad)
sbb
add
push
fisubr
mov
or
add
mov
sbb
or
ret
sbb
daa
add
push
in
and
xchg
push
fs
bound
push
dec
inc
adc
or
or
add
nop
mov
jecxz
xchg
std
add
ja
dec
cwde
xor
xor
call
jle
imul
ror
repz
add
cmps
jmp
repz
or
add
or
repz
or
or
or
xchg
(bad)
repz
psraw
clc
dec
push
mov
xor
adc
xlat
add
dec
fbld
inc
leave
inc
cs
mov
and
inc
sub
retf
cmps
mov
fld
sbb
mov
push
mov
push
sahf
out
inc
enter
dec
out
pop
jo
jns
out
cwde
lods
rcl
repz
out
adc
cmp
cmp
pusha
je
pushf
loopne
iret
repz
or
xor
(bad)
hlt
sahf
out
sbb
jo
mov
cld
sub
test
pop
xchg
iret
push
arpl
push
pop
pop
mov
lods
or
cmps
sub
push
cmps
stc
push
push
push
adc
aaa
mov
mov
add
out
call
repz
jns
ins
push
xchg
mov
iret
cld
adc
cmp
leave
idiv
test
clc
and
push
push
mov
js
mov
push
sbb
push
iret
repz
xor
(bad)
fadd
(bad)
jo
scas
xlat
pop
sbb
addr16
(bad)
jmp
push
pusha
retf
push
xor
inc
mov
mov
push
adc
jns
jns
or
jbe
adc
stos
lea
sbb
and
pop
sbb
cs
repnz
pop
lock
pop
cmc
push
iret
repz
cmp
mov
iret
mov
mov
cld
and
inc
add
xor
repz
in
ds
aas
xor
ss
repz
cmp
cmp
adc
repz
mov
aaa
or
adc
pop
sbb
iret
adc
adc
jecxz
call
push
sbb
ds
and
and
jns
(bad)
and
and
in
sahf
sub
sub
in
sahf
out
das
xor
xor
jle
pusha
sub
dec
xor
sahf
out
push
repz
out
int3
loopne
or
iret
repz
sbb
inc
pop
ins
and
lds
xchg
ss
test
mov
shl
clc
or
and
iret
repz
pop
jo
aaa
pop
cwde
lock
es
aaa
lods
shl
cmps
in
pop
aam
call
enter
cmp
cmp
jns
test
mov
(bad)
fsubr
add
sub
push
clc
lahf
push
add
inc
add
outs
das
jbe
dec
jl
push
add
dec
cmp
push
jbe
or
daa
push
dec
pop
or
pop
xor
add
add
movs
push
mov
daa
push
(bad)
or
ss
or
dec
or
push
dec
dec
mov
pushf
add
xor
push
outs
and
sub
test
mov
scas
fiadd
adc
inc
and
jns
test
mov
mov
loopne
or
iret
repz
xor
repz
xrelease
call
pop
sahf
out
sahf
push
fdivr
repz
add
adc
cmp
cmp
repz
fs
test
stc
cmp
mov
adc
cmp
push
out
mov
loopne
or
repz
rcr
dec
push
iret
cwde
test
fdiv
add
out
call
jge
out
mov
out
out
pop
push
cmp
je
sahf
out
xchg
movs
(bad)
aam
sahf
out
test
inc
push
je
sahf
out
test
dec
repz
xor
iret
repz
ins
mov
cmps
stc
cmp
sbb
push
jns
out
jo
mov
lahf
out
clc
or
push
cmp
sahf
out
push
repz
out
lock
sbb
iret
repz
dec
ins
jl
lods
enter
cmp
hlt
add
and
jns
out
push
adc
mov
sbb
repz
cmp
js
movs
call
add
jns
out
xor
adc
rcr
popa
scas
bound
out
push
cmp
je
jae
out
ficom
(bad)
fsubr
add
iret
repz
cmp
fs
call
mov
int
pop
in
jl
push
cld
or
and
repz
inc
push
pusha
js
ja
pause
test
jle
push
push
jo
sahf
out
mov
jl
sbb
repz
sub
cmp
cmps
stc
adc
and
test
mov
dec
(bad)
mov
(bad)
scas
jle
pop
xlat
lods
enter
dec
mov
cmps
mov
scas
mov
pushf
clc
push
mov
xor
ja
push
clc
inc
mov
cmp
popa
cmp
push
xlat
mov
pop
stos
mov
or
fs
pop
and
daa
inc
or
call
jmp
and
or
add
mov
or
pop
cmp
addr16
jg
(bad)
(bad)
(bad)
in
cmp
repz
(bad)
(bad)
(bad)
jg
mov
inc
push
push
inc
inc
push
inc
mov
dec
clc
xor
xor
stos
pop
sbb
jl
mov
adc
aaa
nop
pop
in
(bad)
dec
or
iret
jae
push
loopne
call
mov
cmp
sub
or
aam
(bad)
push
stc
jns
out
icebp
loope
add
(bad)
cld
clc
lock
push
xor
rol
adc
cmp
mov
(bad)
(bad)
(bad)
call
mov
mov
add
(bad)
dec
mov
shr
sbb
and
adc
das
out
pop
(bad)
(bad)
(bad)
(bad)
fbld
ins
pushf
pop
mov
outs
lahf
pop
or
cmp
add
xor
or
cmp
pop
(bad)
aaa
(bad)
(bad)
(bad)
push
mov
js
inc
mov
mov
jnp
inc
mov
sub
sbb
and
adc
sub
sbb
daa
out
(bad)
(bad)
(bad)
call
test
cwde
pop
movs
fs
push
stos
imul
add
xor
push
into
inc
shl
or
(bad)
(bad)
std
add
mov
jle
inc
mov
lea
jge
loop
shr
out
push
fisub
loope
shr
(bad)
(bad)
frstor
outs
sahf
pop
mov
ins
popf
pop
or
cmp
push
(bad)
test
cmp
add
(bad)
push
mov
jp
inc
mov
mov
jns
inc
mov
sub
sbb
es
(bad)
sub
sbb
and
(bad)
call
stos
push
pop
cmps
xchg
push
test
gs
push
mov
out
mov
lds
push
inc
dec
push
dec
xor
pop
and
jae
push
mov
sbb
sbb
push
bound
mov
inc
sub
neg
data16
push
and
mov
mov
or
ss
and
sbb
or
data16
push
push
sbb
cmps
mov
data16
push
ss
jae
aas
out
ret
(bad)
(bad)
jmp
mov
xor
aas
retf
xchg
scas
out
aas
stos
adc
shl
aas
aas
cmp
cmps
shr
aas
mov
push
loope
pop
stos
jb
push
test
add
push
movs
jmp
or
or
adc
push
adc
or
adc
dec
xchg
imul
sub
xor
or
imul
imul
push
xor
shl
pop
push
and
shl
xor
sub
imul
iret
repz
ds
shl
push
call
ror
sub
cmp
jo
dec
cmp
aaa
das
or
pop
cmp
inc
cmp
jbe
jo
pop
sbb
adc
in
fsubrp
and
addr16
and
shr
xlat
inc
cs
scas
fisttp
pop
xor
outs
jns
js
jae
cmp
dec
pop
bound
inc
popf
cmp
arpl
mov
daa
pop
aaa
adc
fcmovnbe
aas
sbb
cmp
fild
add
add
add
fwait
or
stos
test
cmp
sti
pop
pop
fadd
add
add
jge
add
(bad)
(bad)
call
add
push
adc
pop
and
xor
inc
mov
adc
xor
xor
push
push
pop
sbb
sbb
sub
stos
mov
stos
rol
mov
scas
add
dec
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
(bad)
inc
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
mov
cli
add
add
adc
out
inc
rcr
adc
pop
popa
jno
and
xor
stc
or
xchg
mov
lock
loope
rol
and
push
xor
and
popa
cmp
cdq
pop
mov
pop
add
mov
pop
nop
out
retf
call
stos
dec
and
sbb
push
ins
addr16
out
test
(bad)
cld
sub
inc
pop
lahf
out
sahf
je
pushf
mov
sahf
mul
dec
push
pusha
push
je
mov
mov
in
or
pop
jno
out
push
inc
pop
ins
test
mov
cmp
mov
xchg
mov
test
mov
shl
clc
or
and
jns
out
dec
pop
jo
sahf
out
sahf
cwde
lods
rcl
cld
dec
std
jg
jge
mov
retf
iret
adc
xchg
mov
idiv
(bad)
(bad)
frstor
mov
jbe
mov
adc
fidivr
xchg
mov
out
rcl
jmp
popf
push
adc
pop
push
push
(bad)
sbb
fs
xchg
cs
jb
xor
enter
pop
outs
imul
(bad)
dec
push
ret
and
out
movs
dec
jne
inc
test
pusha
in
push
add
add
add
pop
repz
push
ins
pop
sub
add
cmps
stc
cmp
xchg
shl
jno
sahf
out
sahf
cmp
jo
mov
jl
jb
pop
jl
iret
mov
add
outs
push
pop
js
iret
repz
lods
shl
je
sahf
out
cmp
rcr
je
jne
pusha
test
hlt
or
dec
repz
repz
mov
sahf
out
ja
jo
sar
sahf
loopne
and
outs
push
ins
mov
jl
out
enter
cmp
sti
cmp
pusha
mov
cmp
repz
inc
je
(bad)
fdivr
ja
clc
aaa
jnp
push
pop
jl
sar
mov
inc
iret
repz
pusha
sub
mov
xchg
mov
out
call
cmp
sahf
mov
cmps
push
pusha
repz
out
mov
cld
xor
push
je
mov
jns
sbb
dec
repz
or
ds
rep
shl
adc
ss
dec
ds
repz
xchg
mov
cld
or
mov
pop
jo
fcomp
and
sahf
out
test
call
cmp
rcl
test
fsub
jns
out
xchg
push
sahf
mov
xor
iret
repz
lods
(bad)
lock
jns
out
cmp
mov
out
cld
mov
stc
cmp
xchg
mov
or
cmp
out
sahf
pop
mov
repz
out
pusha
pushf
shl
adc
out
cmp
push
mov
jns
dec
ins
test
lock
pop
pop
js
mov
in
nop
xor
jl
jns
out
lods
enter
jbe
sahf
out
push
push
js
mov
out
adc
cwde
cmp
out
mov
pop
repz
repz
out
xchg
dec
ins
mov
call
cwde
mov
aam
sbb
cmp
ins
nop
lods
fcom
xchg
lahf
out
sahf
xor
xchg
shl
cwde
cmp
repz
dec
fs
mov
in
cdq
xor
fidivr
out
int3
lock
sahf
push
push
iret
shl
ins
mov
cmp
cmp
push
je
mov
fcomp
jl
jns
iret
repz
lock
cmp
jns
out
mov
call
(bad)
outs
push
jl
(bad)
call
out
lahf
push
mov
pusha
(bad)
push
push
jo
sahf
out
cmp
lock
dec
ins
jl
out
cwde
mov
repz
shl
jl
sar
cmp
clc
mov
jl
jns
iret
repz
inc
sar
cwde
shl
movs
xor
repz
pop
jl
shl
sahf
out
call
out
out
enter
jbe
push
lahf
out
sahf
mov
test
iret
repz
pop
jo
lods
jns
iret
repz
clc
adc
xor
idiv
out
mov
mov
push
cmp
mov
loopne
stos
and
fcomip
cmp
pusha
mov
lods
repz
cmp
push
jo
movs
cmp
ds
(bad)
loopne
lods
mov
push
idiv
repz
lods
enter
iret
repz
scas
push
push
ins
xchg
mov
fdivr
adc
ds
repz
mov
in
add
jns
out
sub
push
sahf
out
in
sub
iret
fs
(bad)
loopne
sahf
out
and
xor
out
mov
cmp
cmp
repz
ins
xor
in
mov
push
jo
out
sahf
mov
mov
iret
repz
pusha
je
mov
ds
repz
mov
out
sahf
out
sbb
int3
call
push
cmp
repz
jl
mov
jns
iret
repz
fs
sahf
out
cwde
mov
in
iret
repz
or
mov
iret
repz
mov
jns
out
sub
mov
jge
out
(bad)
fmul
mov
sahf
out
ins
test
repz
repz
mov
mov
repz
cmp
js
mov
fdiv
or
xor
popf
idiv
jo
lods
aam
(bad)
mov
push
push
jl
int3
hlt
iret
repz
and
dec
jo
(bad)
in
sahf
out
ds
xor
xchg
xor
out
mov
inc
repz
repz
out
sahf
out
ret
cmp
test
rcr
ret
sahf
les
dec
cmp
repz
test
cmps
stc
add
inc
pusha
test
aam
sbb
xor
out
repz
test
out
stc
cmp
repz
pop
mov
loopne
enter
cmps
and
int3
jns
ja
call
pusha
jl
repz
out
hlt
adc
inc
fs
cmp
mov
out
sahf
cmp
int3
out
sahf
ja
push
pop
sbb
shl
or
sub
call
add
sbb
out
cmp
test
hlt
aaa
iret
push
sub
je
call
add
sbb
sahf
out
inc
ins
nop
mov
push
ds
in
push
ror
repz
ja
add
or
out
cmp
xor
pushf
aam
aam
out
sahf
cmp
movs
aam
aad
sahf
ja
out
mov
js
cmp
repz
sbb
pop
xchg
mov
fcom
push
mov
repz
out
or
xor
out
cmp
cwde
mov
lahf
out
sahf
inc
pusha
cwde
mov
iret
repz
push
mov
call
adc
sahf
push
dec
push
repz
clc
and
dec
jo
lahf
out
cwde
shr
fiadd
lods
rcl
out
call
dec
sahf
out
sahf
pusha
je
pushf
mov
mov
out
fsubr
pop
or
adc
mov
dec
pushf
add
dec
pushf
popa
adc
es
and
arpl
dec
mov
les
xor
in
popa
adc
scas
icebp
test
jo
cwde
les
es
sub
adc
js
mov
dec
cmp
les
cld
mov
adc
jno
inc
adc
les
test
popa
mov
adc
xor
adc
cwde
shl
or
push
cwde
les
es
lods
pusha
adc
fcomp
pop
daa
cwde
les
push
loopne
pushf
pusha
adc
push
cs
or
mov
add
and
cmp
call
pusha
adc
es
es
dec
mov
cwde
les
js
dec
sub
adc
add
jno
enter
les
pusha
push
les
es
xchg
pusha
adc
cwde
push
icebp
ss
or
fcom
mov
push
and
ss
loopne
xchg
(bad)
fisub
mov
add
add
xchg
dec
pop
mov
and
out
iret
push
pop
inc
cmps
mov
inc
mov
xor
and
les
lea
push
cmps
or
daa
or
mov
push
jl
inc
ja
mov
xchg
dec
or
jle
clc
add
and
or
fidivr
imul
inc
mov
sub
mov
push
push
jae
lahf
(bad)
mov
in
push
lock
jnp
pop
dec
ds
js
dec
add
test
adc
or
ret
dec
shl
call
push
outs
mov
jo
push
dec
add
lods
mov
xor
dec
add
push
or
or
or
mov
pop
mov
(bad)
nop
xor
cmp
push
push
(bad)
ror
jnp
sar
and
mov
movs
mov
out
cmp
xor
inc
mov
push
add
pop
shl
scas
js
fmul
add
fdiv
push
out
sbb
dec
(bad)
lods
push
cwde
mov
in
rol
jnp
sti
sahf
outs
pop
scas
nop
cdq
(bad)
hlt
cld
inc
push
out
ja
fsubp
cld
lea
ss
call
loopne
pop
push
xor
sub
shl
enter
cwde
xchg
lock
call
push
in
test
add
mov
popf
shr
ja
mov
iret
lds
sbb
push
jbe
xor
sub
jnp
enter
ins
aas
(bad)
pop
(bad)
sub
es
sahf
and
xchg
dec
sbb
movs
mov
pop
(bad)
pop
out
sbb
or
ds
mov
hlt
push
fidivr
push
data16
(bad)
lods
or
fcomip
ds
es
and
daa
rcr
enter
(bad)
jnp
idiv
lock
out
cs
fsubr
js
popf
in
xchg
xor
int3
xor
mov
pushf
xchg
sbb
faddp
cmp
fadd
push
aam
call
pop
push
cmps
aam
clc
jecxz
pusha
(bad)
sahf
sbb
pop
pop
push
inc
sahf
cmp
push
cmp
fsubp
scas
js
mov
rcr
out
cmp
enter
fidivr
sbb
sub
ss
les
mov
js
push
out
cs
adc
cmp
adc
in
pusha
cmp
cmps
out
push
sbb
mov
ret
jnp
iret
scas
dec
mov
adc
rcl
neg
sahf
ds
pop
lods
mov
out
loope
push
xor
mov
fidiv
fistp
mov
xchg
out
push
clc
fcom
jp
pop
jo
mov
sbb
sti
lock
sbb
adc
cmp
cmps
shl
jecxz
(bad)
xor
push
mov
sar
xor
mov
pop
mov
push
inc
push
test
icebp
cmp
cld
outs
push
pop
call
mov
outs
push
push
fdivp
cld
cmp
cmps
jge
in
xchg
push
jl
outs
nop
iret
loope
pop
lahf
push
jo
mov
sahf
ret
mov
jg
push
dec
dec
fisub
(bad)
push
movs
mov
imul
mov
mov
jl
add
or
push
movs
xor
repz
in
test
outs
inc
pushf
add
test
fs
cmps
ja
hlt
cs
push
and
inc
jbe
ds
sbb
out
data16
inc
outs
into
and
adc
add
jns
xor
dec
mov
shl
lods
xchg
or
sahf
cmps
sbb
test
jo
xor
(bad)
scas
fsubr
mov
cld
(bad)
and
mov
push
cmp
xor
mov
adc
mov
pop
and
pop
jle
test
or
pop
mov
outs
test
pusha
div
cs
sub
aam
cmps
push
xor
out
out
test
out
push
push
pop
out
cmps
lock
add
jbe
(bad)
out
imul
in
and
fidivr
cmp
pushf
ss
mov
mov
push
mov
scas
shl
call
fdiv
push
adc
outs
rol
test
or
pusha
sar
xchg
xchg
mov
push
sahf
mov
push
push
cmp
mov
push
fwait
inc
(bad)
xchg
clc
xor
outs
call
push
es
dec
adc
fs
ds
pop
js
adc
(bad)
out
add
cmp
xor
push
or
inc
icebp
mov
in
pop
aam
popf
int
jnp
adc
xchg
nop
loop
cdq
ins
and
rol
enter
int3
sahf
adc
cmp
int
ja
push
xor
and
ins
push
sub
adc
mov
into
(bad)
loopne
test
and
pusha
hlt
lock
cld
outs
js
jo
out
mov
xchg
sahf
push
out
jo
and
out
cmp
ds
fdivp
xchg
(bad)
mov
push
cmp
mov
js
sti
xchg
out
inc
movs
dec
nop
cmps
add
mov
mov
jnp
addr16
pop
and
loope
js
push
mov
adc
mov
lock
cmp
push
or
cmp
pop
sbb
loope
jo
lock
cwde
neg
(bad)
ud2
jmp
pop
pop
inc
pop
pop
push
push
out
xchg
femms
sbb
jnp
jl
fsubr
cmps
push
cwde
loope
xor
xchg
ins
or
dec
mov
sbb
cdq
dec
nop
add
pop
fxsave
xor
pushf
sahf
jo
neg
cmp
cmp
and
push
push
and
and
push
scas
jnp
dec
test
push
les
pop
call
pop
push
jb
cmp
or
push
out
mov
setbe
scas
out
sbb
ss
push
xchg
cs
int3
call
sahf
or
jns
push
mov
inc
push
inc
xchg
push
out
pusha
dec
fucomip
inc
mov
push
cmp
xchg
xchg
jp
jle
scas
dec
neg
push
outs
mov
push
aam
call
dec
pop
mov
test
je
push
call
fdivp
js
or
and
jle
icebp
cmp
add
(bad)
push
loopne
mov
movs
push
nop
ds
psubq
jnp
(bad)
fdiv
fadd
xchg
xor
ss
es
in
rol
fbstp
shl
pusha
push
push
clc
scas
ja
xor
push
data16
dec
push
lock
pop
inc
(bad)
mov
out
call
mov
je
hlt
ficom
sahf
jle
mov
and
scas
(bad)
clc
out
cmp
push
pusha
push
shr
push
movs
push
push
push
lock
(bad)
sbb
es
push
pusha
mov
(bad)
mov
push
add
and
push
fcomp
fidivr
ret
sahf
push
loopne
lods
mov
mov
ss
dec
mov
rol
call
or
inc
jbe
(bad)
push
nop
cmps
adc
mov
(bad)
adc
nop
or
data16
int3
(bad)
cmps
dec
ins
js
das
adc
push
cs
outs
cwde
dec
mov
mov
sub
or
or
lahf
inc
push
inc
test
pop
add
add
adc
xor
mov
test
or
push
shl
ror
adc
lds
add
push
add
adc
enter
nop
inc
add
add
xchg
sub
outs
add
add
sti
inc
add
(bad)
aam
add
fidivr
mov
cs
push
or
xchg
sti
mov
push
xor
or
inc
or
push
dec
push
sub
retf
add
push
inc
push
sbb
imul
inc
push
jb
ds
cmps
or
ficom
addr16
inc
(bad)
aaa
inc
xor
add
rcr
push
rdpmc
dec
lea
dec
jmp
or
add
es
push
das
sub
add
mov
pop
push
push
or
ja
xor
(bad)
pop
push
push
ret
in
sbb
inc
jnp
add
xchg
adc
push
sub
inc
(bad)
push
or
inc
mov
or
sbb
or
stos
or
imul
aas
inc
xchg
das
dec
gs
add
ins
ds
add
mov
ret
adc
xor
add
adc
inc
cld
out
xchg
das
jg
clc
aas
push
pop
jmp
rcl
xchg
rol
add
pop
or
(bad)
clts
aas
(bad)
jg
add
and
sbb
add
fwait
in
in
inc
or
push
mov
jo
add
add
add
add
psubb
fwait
int
xor
out
push
out
ficomp
repz
(bad)
cmp
add
loopne
lock
sbb
fidivr
(bad)
aas
pop
cs
and
pop
xchg
das
pop
lock
xor
pop
std
jns
jae
cmp
add
loope
ins
jl
inc
add
outs
cmp
out
jg
sbb
add
pop
sahf
cmp
pusha
iret
add
rol
inc
lock
out
loope
aas
push
or
push
add
fmulp
jnp
nop
es
push
add
sahf
out
pop
nop
into
push
add
pop
mov
xlat
dec
or
cmp
mov
pop
retf
comiss
add
outs
daa
add
int
mov
lock
mov
and
dec
add
mov
ins
outs
push
inc
pop
outs
clc
(bad)
mov
dec
xlat
add
pusha
add
pop
dec
add
xlat
pop
xor
lods
sub
add
mov
pop
cs
pop
jle
cmp
pop
or
adc
adc
out
(bad)
aas
nop
ds
cmp
sub
add
mov
pop
cmp
fmul
aad
cs
pop
popf
or
jno
add
cs
ret
sub
jle
fwait
int
sbb
push
sub
inc
add
mov
sahf
in
inc
add
pusha
xor
sbb
stos
ja
xor
push
sbb
js
push
inc
cmc
(bad)
mov
fldcw
lock
push
ins
ss
int
cmp
sbb
or
test
mov
xchg
inc
nop
adc
add
mov
push
push
push
adc
rcr
je
fadd
ror
mov
sub
sbb
inc
and
mov
not
and
inc
jnp
pop
adc
out
add
rol
jnp
dec
out
cs
sti
mov
add
push
dec
mov
imul
shl
jo
fidiv
aaa
pop
adc
jp
mov
outs
dec
sbb
inc
mov
nop
xchg
cmps
dec
mov
inc
mov
ja
sbb
push
outs
adc
xor
popa
sbb
retf
mov
mov
mov
imul
adc
adc
cwde
ins
push
inc
sbb
outs
jns
inc
div
dec
sbb
ja
add
dec
sbb
xchg
stos
and
and
fldcw
mov
cs
cmp
xor
push
and
adc
jbe
add
fbstp
cmps
lea
mov
dec
dec
pop
add
mov
jae
rcl
dec
shl
xchg
lea
or
add
sbb
inc
cmp
xchg
gs
(bad)
mov
dec
outs
pop
shr
sbb
xchg
jb
push
push
mov
adc
mov
inc
or
and
sti
xchg
pop
inc
dec
push
jnp
and
jl
xchg
cmp
mov
cs
adc
push
pop
and
mov
stos
cmp
and
inc
retf
lahf
mov
cmp
sbb
pop
in
movs
xchg
imul
repnz
add
ja
mov
push
lods
pop
sub
stos
and
xchg
xchg
ffreep
and
test
dec
shl
sbb
and
or
or
sar
inc
test
bound
cmps
daa
jmp
shl
mov
inc
arpl
retf
pop
aaa
sub
dec
xlat
mov
ja
jecxz
ret
push
adc
cs
arpl
cmp
out
and
ins
push
lock
je
jae
xchg
xchg
sbb
adc
icebp
lods
add
aaa
dec
inc
pop
test
xchg
sub
daa
fnstenv
fimul
outs
ins
or
fwait
data16
xor
mov
cmp
scas
cmps
cmp
push
arpl
imul
xchg
das
sti
jp
push
or
push
pop
xchg
and
cdq
jmp
and
push
jecxz
movs
or
add
in
stc
call
sub
xchg
mov
lods
mov
clc
es
xchg
pop
ins
ret
popa
lods
ret
das
mov
jne
retf
jo
adc
and
or
and
clc
pop
popf
mov
not
pop
dec
retf
aas
mov
add
rol
cmp
push
or
pop
mov
(bad)
out
jae
cwde
ror
fadd
ficomp
push
sub
and
mov
fist
fidiv
js
and
add
push
ins
xor
retf
lsl
das
cs
mov
arpl
test
imul
pop
dec
push
mov
push
push
push
ss
jbe
or
add
lods
stos
stos
fbstp
ins
add
cwde
ins
sbb
daa
or
inc
inc
add
jecxz
sbb
addr16
pop
mov
cwde
xor
add
fisttp
test
test
sbb
es
fcmovbe
fwait
dec
inc
mul
jb
(bad)
mov
das
das
mov
mov
mov
jne
outs
sbb
xchg
repnz
jno
mov
lea
mov
ja
add
ins
pop
jmp
bound
push
push
pop
push
cmp
fiadd
outs
fwait
and
mov
stos
xchg
sub
aam
rcl
repnz
inc
mov
shl
arpl
cmp
adc
arpl
sar
(bad)
cs
push
pop
and
dec
adc
adc
and
adc
sbb
fwait
dec
inc
mov
push
dec
xor
and
outs
pop
popa
fiadd
ss
scas
mov
jno
adc
cmp
sbb
fwait
add
das
je
xor
call
adc
and
pop
mul
jmp
or
outs
adc
jecxz
scas
mov
fdiv
repz
pop
mov
sbb
inc
inc
push
push
repz
ret
(bad)
call
add
cmps
sub
je
jmp
xchg
sbb
test
jae
xor
sbb
bound
push
and
add
mov
scas
mov
pop
add
bound
stos
imul
arpl
imul
(bad)
jne
jmp
ret
add
mov
sub
jne
xor
test
sbb
or
jmp
dec
push
ins
retf
retf
ficomp
mov
mov
push
ins
retf
stos
dec
or
xchg
test
lods
stos
jg
ins
sbb
xchg
mov
add
xchg
push
add
push
sub
movs
lods
iret
pushw
psrld
mov
mov
sbb
(bad)
retf
add
adc
mov
lods
aas
sahf
gs
adc
xor
sub
push
lea
stos
adc
and
push
int3
sti
jae
ins
and
inc
push
jo
or
pop
inc
jo
dec
pop
push
push
adc
sbb
add
add
mov
add
mov
xor
mov
adc
sti
mov
mov
mov
or
call
scas
xor
xor
outs
inc
arpl
add
bound
xor
aad
sar
mov
xchg
push
mov
adc
out
dec
ret
push
outs
pop
inc
or
cwde
arpl
push
add
mov
addr16
or
jae
scas
adc
xor
add
sbb
push
or
(bad)
(bad)
xor
iret
jb
scas
mov
sbb
or
fild
cmp
or
adc
dec
scas
adc
add
xor
push
aas
add
rol
sub
call
lea
iret
dec
adc
in
add
and
aaa
push
mov
cmp
sbb
dec
jae
dec
sti
jae
mov
aaa
pop
loopne
push
test
repnz
or
data16
jg
movs
test
out
add
pushf
fdiv
sbb
iret
cs
push
cmp
or
out
jae
cmp
bound
das
jle
adc
sub
movs
inc
stos
jno
jecxz
cmp
popa
dec
mov
dec
xlat
push
push
sub
add
jne
packuswb
rol
jno
xor
mov
imul
loop
jb
imul
jecxz
jp
addr16
cs
sub
adc
scas
ret
sbb
add
repz
mov
xor
arpl
inc
jno
mov
xchg
push
push
mov
mov
push
ins
pop
sti
mov
loop
xchg
inc
push
mov
cmp
cmp
and
dec
gs
or
fdiv
sahf
loope
dec
dec
inc
sub
xchg
sbb
xchg
inc
imul
xor
call
pop
in
sub
jg
push
test
test
daa
inc
push
add
outs
add
popf
jp
add
sti
inc
xor
push
shl
and
lahf
mov
aad
fdivrp
addr16
lea
xor
aaa
cmps
xchg
xor
jbe
leave
pop
fbld
jnp
call
pusha
mov
sbb
pop
mov
jno
nop
call
imul
inc
retf
push
ja
div
add
stos
test
jo
fild
stos
mov
adc
ss
cmps
adc
pop
cmp
shl
and
scas
lods
jbe
or
adc
das
pop
rcl
dec
pop
pop
add
jg
inc
loope
das
ret
or
ret
movs
dec
mov
les
add
xor
add
pop
or
test
xchg
mov
sbb
dec
cmps
push
jmp
jae
cwde
and
add
ret
or
sbb
inc
adc
(bad)
or
iret
scas
mov
cmp
dec
sbb
(bad)
aaa
pop
jo
jmp
cmps
xor
pop
mov
xor
adc
ss
call
and
shr
lods
push
cmp
test
imul
movs
push
pusha
(bad)
pop
sub
push
bound
push
jne
and
dec
sbb
shr
pop
push
lods
fsubr
aas
sbb
pop
fmul
retf
pop
or
mov
or
ds
push
xchg
mov
pop
arpl
pop
inc
mov
mov
push
pop
fimul
daa
sub
jno
ret
rcl
es
dec
pop
xchg
pop
sbb
pop
jne
mov
(bad)
(bad)
scas
outs
out
push
movs
xchg
ins
imul
ret
(bad)
dec
xchg
cs
add
xchg
and
inc
outs
sbb
retf
pop
ret
or
push
dec
(bad)
pop
pop
rcl
pop
das
jae
or
adc
pop
and
jns
jbe
js
dec
add
or
or
pop
sbb
jne
and
xor
push
jnp
(bad)
shl
test
pop
(bad)
xchg
pop
dec
adc
test
pop
or
bound
pop
xor
xor
xor
daa
mov
pop
dec
jo
ss
imul
stc
pop
popa
mov
adc
push
loope
xchg
dec
pop
sub
dec
outs
jg
pop
in
push
iret
inc
fcmovu
std
or
or
jle
pop
adc
js
sti
add
imul
pop
addr16
inc
jbe
add
rcl
add
mov
push
lock
dec
daa
cs
dec
add
inc
retf
pop
inc
or
arpl
js
xor
push
out
jbe
jle
xor
jmp
cmp
jp
dec
add
mov
es
ins
retf
push
push
imul
add
dec
ja
mov
pop
push
mov
(bad)
mov
push
(bad)
push
iret
xchg
mov
fidivr
add
stos
(bad)
adc
xchg
push
pop
(bad)
loop
adc
jp
imul
xchg
ss
inc
dec
mov
pop
push
cmp
mov
sbb
push
push
xor
shl
(bad)
pop
pop
mov
out
(bad)
bound
dec
jmp
sub
and
adc
sti
mov
pop
loop
fwait
inc
movs
inc
adc
sar
outs
out
loop
push
sub
das
ja
les
ret
mov
lds
cmp
or
cs
and
xor
ror
inc
loopne
mov
fwait
push
test
add
inc
jae
bound
mov
mov
inc
add
pop
repnz
aaa
ficomp
dec
inc
test
add
xor
and
dec
cmp
outs
push
retf
jecxz
fadd
inc
mov
dec
lods
pop
xchg
jo
sub
or
dec
imul
ret
inc
imul
arpl
dec
push
adc
add
and
and
inc
fidiv
fimul
aam
mov
pop
xchg
cmps
out
sbb
dec
cmps
adc
xor
daa
nop
inc
ja
push
sbb
imul
cmps
not
shr
stos
sub
aad
(bad)
aaa
inc
inc
sub
inc
and
push
dec
adc
add
sub
inc
neg
sbb
mov
mov
jae
ins
sbb
or
push
mov
and
jno
je
ret
(bad)
out
ss
outs
and
jmp
fisub
retf
jmp
or
aas
sbb
mov
xor
jmp
pop
vmovss
adc
sub
push
push
jns
bound
mov
push
dec
jp
inc
or
add
add
ins
push
outs
aaa
pop
test
daa
fistp
sbb
inc
sti
push
jmp
inc
xchg
push
cs
cmps
pop
push
stos
xor
or
adc
inc
ret
push
add
sub
fidiv
adc
scas
call
push
jo
cmp
sbb
adc
push
call
jo
push
mov
ins
out
test
je
xor
cvtdq2ps
mov
mov
adc
mov
outs
neg
sub
mov
push
test
pop
popa
add
dec
mov
(bad)
dec
xchg
jmp
stos
pop
push
adc
mov
jnp
sar
addr16
call
mov
xor
or
xor
bound
jmp
push
mov
cs
je
daa
adc
movaps
push
xlat
lock
xor
xchg
adc
inc
push
mov
pusha
pop
xor
daa
js
fadd
ja
xor
inc
adc
ins
sbb
mov
ins
das
pop
add
mov
sub
xor
pop
xor
inc
jecxz
fwait
mov
xchg
pusha
adc
aad
dec
neg
ss
mov
pusha
mov
mov
sbb
or
pop
mov
(bad)
rcr
jo
aas
sub
mov
shr
cmp
add
jae
push
sbb
mov
rol
add
xor
loopne
je
addr16
jae
dec
movs
dec
cmps
(bad)
outs
xchg
push
test
inc
push
data16
shr
pop
div
fisub
add
sub
fwait
out
pop
push
sbb
ins
mov
rcl
or
mov
ffreep
jno
push
pop
sbb
mov
lods
mov
(bad)
mov
call
imul
iret
jae
cmp
rol
mov
sub
inc
sub
fs
les
or
add
(bad)
call
cmp
test
setg
sbb
push
pop
fs
(bad)
loopne
mov
mov
ret
push
mov
pusha
add
sbb
or
adc
xchg
mov
inc
aas
xchg
inc
(bad)
aam
cmp
xchg
dec
xchg
aaa
shl
fwait
gs
or
inc
imul
jmp
push
je
test
stos
enter
pop
lea
adc
jae
cmp
out
mov
cmps
cs
jae
gs
stos
xor
mov
inc
fstp
ja
add
add
or
mov
push
push
adc
dec
retf
jnp
xchg
dec
scas
ins
mov
add
push
or
(bad)
push
xlat
add
ja
xchg
hlt
mov
xchg
pop
jmp
ja
push
ret
add
popa
adc
sbb
add
pop
mov
adc
add
pop
push
ret
push
add
es
inc
mov
mov
mov
mov
adc
mov
mov
div
or
mov
push
mov
push
rol
dec
bound
add
lock
jae
aas
push
or
outs
fwait
bound
dec
out
and
cmps
mov
imul
xchg
xchg
sbb
mov
pop
and
push
loopne
mov
stos
adc
adc
inc
or
push
(bad)
out
popa
(bad)
and
xchg
lods
adc
test
inc
mov
pop
jo
adc
ins
mov
outs
fsubr
pusha
add
rol
xlat
xor
dec
inc
push
or
(bad)
xor
xor
push
pop
mov
pop
fcmovu
mov
xlat
add
dec
dec
sti
cli
or
and
push
or
sub
jmp
cmp
mov
aam
pop
outs
scas
fist
ret
jne
or
inc
imul
mov
adc
or
jbe
rcl
push
(bad)
aad
add
nop
mov
test
loope
test
push
xchg
push
xchg
and
aaa
jo
sbb
sub
adc
test
dec
or
lahf
daa
add
xor
pusha
xor
stos
adc
ss
jae
ror
and
cs
addr16
xchg
movs
push
pusha
xchg
stos
sbb
and
sub
scas
add
cmp
bound
pusha
xlat
mov
ins
test
xor
in
inc
pop
mov
push
pop
cmps
mov
inc
outs
imul
scas
(bad)
bound
sub
push
jecxz
loopne
movs
div
inc
adc
inc
ja
add
pop
pop
cmps
ficomp
mov
inc
mov
xor
imul
pop
jecxz
(bad)
(bad)
fdiv
add
or
mov
packuswb
cmp
mov
ret
push
mov
das
sbb
push
sbb
retf
arpl
sbb
pop
out
and
xlat
leave
sbb
cs
stos
dec
div
sbb
xchg
out
fcmovne
inc
stos
pop
cmp
sub
ja
push
mov
loope
mov
jbe
push
mov
push
aas
das
cmp
pop
(bad)
lahf
jnp
dec
mov
rol
pop
or
cmps
xchg
adc
pop
xor
sbb
outs
pop
cmps
pop
bound
push
inc
mov
push
js
jmp
mov
dec
call
add
add
add
jno
(bad)
push
imul
loop
pop
sub
inc
fcmovb
add
xlat
lods
mov
adc
jae
adc
jnp
dec
(bad)
pop
fistp
imul
xchg
pop
call
or
xor
pop
scas
imul
and
push
popa
xrelease
mov
add
cmps
rol
cpuid
cmp
out
retf
xor
iret
sbb
lods
fwait
cmp
cmps
push
mov
or
shr
jbe
addr16
inc
mov
cwde
stos
out
mov
add
or
mov
mov
push
das
jle
sub
shl
add
or
pop
and
sub
mov
dec
retf
add
out
sbb
adc
stos
inc
cmp
stos
neg
movs
popa
xor
imul
xor
sbb
lds
mov
outs
dec
pop
mov
not
add
or
mov
sbb
add
and
pop
call
inc
push
inc
inc
xchg
stos
sbb
dec
les
inc
pop
mov
inc
fiadd
adc
cmp
imul
bound
sub
sbb
sbb
push
fisubr
ret
sub
xor
add
(bad)
push
pop
dec
gs
pop
pop
sub
(bad)
cmp
stos
nop
sub
inc
add
cmp
sbb
ret
add
ret
xchg
pop
push
push
movs
bound
mov
mov
(bad)
mov
inc
adc
icebp
pop
add
xor
or
cmps
add
pop
popa
les
add
sbb
mov
nop
(bad)
sub
cmps
popa
cmp
dec
push
lahf
and
dec
pop
or
push
pop
(bad)
mov
outs
test
jg
lods
dec
bound
fcomip
mov
add
xchg
dec
dec
mov
loop
jg
xchg
cmps
pusha
mov
inc
pop
dec
aas
push
add
imul
dec
arpl
xor
or
sbb
adc
pop
or
sbb
push
dec
scas
jae
sahf
cmps
push
push
gs
stos
pop
push
fadd
inc
adc
push
fnstenv
jo
scas
push
jnp
dec
pop
adc
xchg
and
ins
inc
xchg
add
push
ret
mov
cmove
retf
pop
or
cmp
push
add
gs
imul
dec
aas
add
jbe
pusha
out
jmp
test
and
test
scas
add
and
add
shr
adc
mov
or
aam
adc
dec
adc
dec
sti
or
daa
mov
addr16
inc
jmp
or
data16
fisttp
fild
lods
out
pop
lahf
retf
sub
dec
fadd
adc
push
call
pop
test
jmp
fisubr
dec
jle
(bad)
mov
sub
xor
mov
adc
daa
dec
or
xor
or
mov
dec
sub
arpl
pop
imul
sub
jp
in
or
jecxz
imul
or
fmul
xchg
shl
jnp
imul
rcl
aad
dec
inc
add
push
push
or
mov
(bad)
xchg
and
dec
in
bound
out
xchg
push
push
pop
inc
test
xlat
pop
push
sub
mov
or
jmp
xor
mov
arpl
xor
sbb
xor
inc
loop
cmp
adc
pop
mov
add
ja
mov
pop
stos
outs
cmp
cs
pop
mov
not
lods
mov
adc
pop
lds
xor
jg
xlat
adc
jne
pop
and
jecxz
sub
push
unpckhps
rcr
add
pop
sbb
adc
iret
add
mov
xchg
xor
lods
sbb
pop
push
and
xchg
mov
mov
rol
pop
jnp
inc
mov
aaa
aam
mov
push
and
and
stos
sub
test
aaa
and
xor
addr16
pop
xor
aaa
adc
xchg
test
sub
jae
pop
xchg
bsf
adc
hlt
pop
adc
sbb
fstp
push
adc
stos
cmp
fwait
or
popw
or
stos
push
and
ret
push
pop
add
xchg
sub
xor
xor
sbb
inc
loopne
sub
cs
bound
dec
push
push
shr
ins
add
adc
daa
and
xchg
dec
call
lahf
jg
xor
lea
xor
ja
es
pop
outs
mov
(bad)
jo
adc
(bad)
inc
cmp
jmp
add
adc
xchg
(bad)
or
mov
sbb
xchg
nop
stos
sar
add
es
fs
pop
add
in
fldcw
push
and
sub
pop
push
sbb
push
inc
jbe
cwde
pusha
xchg
dec
rcl
mov
lock
nop
and
push
add
in
jmp
jo
add
add
add
add
add
(bad)
fild
add
add
add
add
push
add
jo
sbb
data16
add
add
add
mov
cmp
push
add
add
dec
inc
add
add
adc
test
jo
add
mov
add
add
add
jns
test
outs
adc
add
add
add
pusha
aad
push
pop
add
pusha
add
inc
inc
in
add
add
add
add
add
mov
loopne
lock
mov
add
add
stos
dec
adc
mov
xchg
cld
sub
push
jnp
nop
add
inc
test
loop
add
pushf
add
or
out
sub
push
adc
fbstp
out
rol
(bad)
mov
in
sub
pop
add
jbe
ret
rol
add
data16
into
add
sub
push
out
shl
cmps
xor
push
cmp
lock
pushf
scas
adc
add
adc
rol
or
mov
pop
jle
out
cmp
mov
std
add
cwde
push
repz
and
ja
add
add
and
push
and
fist
mov
add
add
outs
mov
jo
add
add
add
or
and
xor
inc
push
pop
push
push
pusha
push
push
jo
pop
sti
imul
push
nop
push
fisub
sbb
mov
retf
pop
pop
lock
loopne
pop
popf
push
pop
inc
pop
sbb
out
xchg
(bad)
jg
mov
sbb
add
pop
rol
pop
loopne
push
inc
ror
and
xchg
add
jg
aaa
cld
xor
inc
or
sbb
jo
or
add
pop
fdiv
daa
ror
xor
push
dec
ret
in
or
add
mov
or
or
inc
sbb
xor
sbb
sar
jg
xor
push
or
or
into
or
add
or
pop
lahf
loopne
mov
mov
push
add
xor
mov
and
daa
or
push
or
jo
or
inc
sub
or
pop
dec
jo
jg
add
or
jmp
lds
nop
sbb
add
fsubp
inc
(bad)
or
or
inc
or
pop
mov
jo
out
sub
cmp
or
mov
mov
shr
shl
pop
xchg
or
loopne
cmp
or
test
cmc
jle
and
add
or
mov
jmp
jo
or
mov
or
or
ds
adc
inc
or
jo
xor
(bad)
or
mov
ror
mov
mov
and
xor
inc
push
xor
jns
jae
push
dec
pusha
pop
add
sub
sbb
sub
sub
nop
push
add
or
sar
push
sbb
add
push
or
dec
sub
sbb
loopne
lock
(bad)
out
in
call
wrmsr
cmovo
push
cpuid
pusha
inc
mov
jo
mov
mov
mov
ror
push
mov
xchg
jb
movsx
sub
mov
invd
mov
adc
and
xor
adc
adc
sub
add
lahf
push
adc
pop
xchg
add
repnz
dec
adc
outs
jo
adc
adc
stc
xor
rcl
adc
adc
and
add
lahf
out
mov
rcr
adc
adc
ins
or
aaa
rcl
aas
mov
or
jg
adc
pop
add
(bad)
arpl
call
adc
jo
mov
push
mov
push
fsubr
mov
mov
mov
retf
add
add
mov
rcl
out
in
rcl
loopne
adc
adc
push
mov
pop
out
jnp
adc
sar
push
adc
push
adc
loope
loopne
jo
xchg
adc
scas
lods
clc
adc
rcl
adc
push
js
stos
inc
aam
out
sbb
push
add
inc
std
pop
adc
lock
mov
imul
xor
jg
mov
(bad)
arpl
push
das
ficom
push
push
rcr
rcl
adc
add
cmps
fidiv
or
adc
fidivr
add
add
dec
adc
sbb
in
mov
fimul
add
cmp
xchg
iret
xchg
(bad)
pop
adc
adc
adc
adc
add
rcl
xchg
repz
sub
or
inc
mov
adc
mov
rcl
sbb
bound
adc
adc
add
pop
xchg
push
adc
fisubr
push
addr16
add
dec
dec
dec
jo
adc
ins
adc
(bad)
cmp
push
adc
push
imul
adc
call
mov
add
cmps
sbb
or
nop
add
pusha
daa
pop
sbb
add
fidiv
sbb
sbb
movs
sbb
push
jle
add
or
dec
jnp
iret
leave
add
cmp
push
mov
ror
sbb
add
cmp
or
ret
in
jmp
sub
push
ficom
mov
or
add
adc
push
scas
mov
addr16
scas
pop
xor
pop
sbb
aaa
sbb
mov
(bad)
or
xchg
sub
or
adc
enter
adc
pop
jbe
adc
add
in
ret
call
popf
mov
sub
scas
pop
adc
mov
dec
and
jg
popf
inc
mov
addr16
pop
pusha
sub
add
clts
push
mov
out
mov
jg
sbb
add
aad
ins
ins
and
pop
add
mov
cld
(bad)
xchg
imul
popa
lahf
or
sbb
sbb
lods
imul
jo
movs
pop
(bad)
dec
pcmpeqw
adc
pop
or
mov
fstp
jmp
jmp
add
fimul
add
je
mov
mov
add
inc
mov
mov
test
jmp
xchg
mov
test
pop
or
sbb
(bad)
leave
leave
and
or
ins
mov
jmp
ror
or
shl
(bad)
sbb
ins
leave
or
adc
mov
mov
add
sbb
fisttp
lahf
(bad)
sysret
lahf
inc
mov
in
ins
pop
fnstcw
ins
add
adc
jg
rcr
jg
fstp
mov
jns
fdivr
js
jae
and
adc
pop
pusha
or
push
mov
cmp
xchg
ins
int
cmc
ret
sbb
mov
xor
push
fwait
adc
test
sbb
and
add
add
ins
cmp
push
adc
push
sbb
mov
ret
mov
add
fld
shl
xchg
mov
xor
fadd
and
ret
jnp
mov
fist
sbb
das
or
sgdtd
sbb
push
or
pop
inc
pop
sbb
mov
and
nop
sbb
imul
mov
adc
sub
add
shr
inc
jmp
int
cmp
icebp
cwde
mov
inc
mov
add
sub
sbb
(bad)
lock
or
and
jo
inc
lods
dec
add
mov
popf
jnp
mov
imul
adc
jo
inc
or
lds
dec
or
arpl
add
inc
test
sub
fwait
add
push
loop
adc
call
inc
nop
pop
pop
aas
and
or
or
sub
div
sbb
rcr
lods
mov
pop
mov
cmps
mov
ret
in
out
adc
push
adc
mov
cdq
sahf
popf
fistp
sbb
les
lea
inc
and
lods
mov
syscall
daa
mov
outs
add
sub
ins
push
cmp
mov
and
test
and
and
pop
jnp
jecxz
lds
add
test
dec
leave
push
add
test
fmulp
or
aad
inc
sti
inc
sbb
push
ss
int3
xor
or
or
push
mov
daa
stc
push
mov
bound
pop
not
das
cmp
imul
and
inc
add
sub
cmp
gs
loope
aas
sbb
ret
push
out
and
lods
sbb
adc
popa
aas
or
out
(bad)
inc
dec
xchg
add
pop
sbb
push
adc
push
mov
sub
adc
sahf
add
pop
push
mov
fs
(bad)
rcr
stos
cdq
jg
and
sub
push
sub
icebp
pop
pop
adc
jo
xchg
test
cmp
inc
popf
dec
adc
sar
sub
adc
or
cmc
xchg
test
lahf
and
mov
or
enter
add
ins
and
fwait
sbb
scas
imul
inc
adc
adc
aas
cld
adc
fdivr
adc
(bad)
adc
test
xchg
cmp
add
add
mov
sub
lds
mov
adc
mov
in
push
loopne
jg
sbb
pusha
icebp
loopne
add
daa
pop
test
dec
inc
push
xchg
jg
pop
mov
adc
shl
outs
pusha
das
adc
shl
mov
pop
sbb
lods
sbb
or
bound
adc
(bad)
adc
fnsave
sgdtd
movs
aam
sbb
adc
and
sub
sbb
shrd
psllw
test
dec
xchg
mov
test
mov
imul
pop
pop
scas
sub
cmps
push
(bad)
mov
mov
sbb
bound
sbb
in
xor
pop
retf
mov
sbb
add
add
and
repnz
push
dec
out
pop
ja
mov
xchg
fcomp
and
xchg
mov
fbstp
or
push
adc
pop
pop
loopne
dec
sar
daa
lds
inc
setae
jns
inc
adc
mov
mov
push
add
adc
and
adc
push
fisubr
mov
aas
add
inc
shl
pop
mov
stos
movs
(bad)
jnp
adc
or
addr16
out
repz
mov
push
and
mov
add
pop
push
sar
les
push
xchg
inc
adc
push
aam
repz
push
xchg
mov
mov
mov
add
mov
pop
rol
cmp
push
add
jno
mov
add
add
dec
rol
pop
das
xchg
push
test
mov
adc
pop
lock
mov
or
in
in
adc
sbb
inc
lock
and
sbb
das
add
in
fs
psubsb
scas
cmp
xchg
fbstp
inc
push
cmp
pop
nop
test
dec
clc
dec
dec
outs
daa
add
or
push
inc
dec
dec
dec
sbb
and
inc
ins
dec
das
(bad)
mov
pusha
jg
pop
xor
and
daa
daa
inc
dec
dec
and
xchg
xchg
push
push
push
lahf
mov
cmp
and
sub
sbb
xor
test
stos
ins
add
inc
(bad)
mov
imul
push
aad
pop
push
dec
or
in
out
fld
xor
add
push
je
sub
pop
push
lds
mov
stos
jmp
psubusb
in
aas
outs
pop
dec
adc
es
sub
adc
mov
popf
nop
(bad)
sbb
sub
shl
enter
pop
pusha
add
push
lea
or
mov
scas
lahf
sbb
add
add
mov
mov
pop
paddsw
(bad)
xor
leave
leave
aaa
cmp
cmp
jb
leave
cmp
cmp
outs
pop
inc
add
jb
test
inc
das
inc
inc
pop
in
in
inc
inc
inc
inc
in
in
inc
inc
inc
inc
jae
in
inc
dec
dec
fisttp
test
out
imul
test
mov
mov
inc
lahf
dec
jo
scas
xchg
xchg
mov
pop
mov
cmp
das
dec
fucom
dec
into
dec
mov
in
aas
pop
icebp
repz
cmc
fdiv
jb
aas
lock
dec
ins
rol
lods
sbb
fistp
cmp
fild
(bad)
cdq
push
dec
ds
sbb
dec
(bad)
scas
dec
mov
das
lods
stos
push
stos
lahf
lahf
push
mov
(bad)
(bad)
push
pop
pop
stos
mov
shl
pusha
das
scas
push
inc
and
iret
aas
pop
pop
xor
bound
dec
fist
rcl
outs
pop
push
ins
push
and
(bad)
ins
inc
ins
sub
fidivr
inc
aas
jg
push
fisubr
prefetcht2
or
pop
push
sub
cmovp
mov
pop
xchg
outs
pop
das
sub
sub
sar
adc
pop
lahf
stos
push
or
fcomp
(bad)
call
cmp
xor
repz
add
fwait
cmp
dec
xchg
fdivrp
or
dec
dec
add
outs
sub
cli
sub
or
fmul
pop
mov
pop
or
jae
push
sub
xor
leave
mov
add
pop
adc
mov
enter
push
rol
or
and
inc
outs
bound
cmp
and
shl
jo
inc
push
xor
and
add
xor
cmp
inc
jle
(bad)
cmp
xor
and
aaa
cmp
xor
xor
out
add
(bad)
add
add
add
and
jl
mov
push
add
pop
cmp
daa
cmp
push
add
add
lahf
in
in
pop
add
or
mov
(bad)
in
add
pop
inc
dec
je
dec
out
out
out
add
sbb
cmp
add
or
or
or
or
adc
adc
mov
pop
fiadd
adc
or
dec
add
or
adc
adc
ins
add
sbb
adc
pop
ins
xchg
adc
add
fnsave
je
rol
aas
rol
add
mov
ror
cmp
cmp
jg
ret
adc
xchg
push
add
add
cmp
xor
adc
add
and
xor
adc
(bad)
jmp
adc
xor
adc
pop
and
icebp
arpl
push
mov
(bad)
(bad)
inc
fs
ret
ss
rcl
gs
ret
shl
repz
daa
xchg
movs
test
(bad)
(bad)
push
movs
mov
aad
cmc
push
data16
xchg
cmps
mov
(bad)
out
aaa
inc
push
addr16
xchg
cmps
mov
xlat
out
adc
arpl
aas
clc
add
xor
add
jno
adc
xor
xor
pop
inc
shl
xchg
mov
and
movsx
es
pop
or
ss
loop
cmps
or
add
add
(bad)
fidivr
jmp
dec
cli
jmp
mov
jmp
xchg
jne
mov
ror
(bad)
mov
jae
(bad)
ins
fcomi
mov
push
push
mov
pop
nop
push
jg
mov
or
(bad)
call
je
sub
mov
jno
fwait
cwde
cld
out
mov
lea
inc
fnstenv
pushf
jg
dec
aas
cmp
sbb
test
lods
outs
(bad)
jmp
xchg
pop
repnz
sbb
daa
xor
or
frstor
or
sti
xor
(bad)
(bad)
jmp
cmp
lss
jae
fdiv
call
sbb
stos
std
push
pop
sub
add
(bad)
(bad)
jmp
pop
jg
cli
mov
adc
lods
imul
shl
arpl
(bad)
(bad)
dec
push
arpl
mov
arpl
adc
xor
(bad)
(bad)
jmp
push
jmp
test
mov
cmp
lea
loop
(bad)
(bad)
inc
(bad)
adc
scas
push
add
inc
fs
arpl
loope
(bad)
mov
repnz
mov
jae
inc
mov
adc
push
cld
(bad)
mov
std
lahf
int
push
out
push
xor
jb
ja
lahf
(bad)
fcomip
(bad)
mov
cmp
xor
popa
inc
test
xor
xchg
adc
out
sub
pusha
cwde
test
or
push
stos
mov
loope
stc
lahf
and
nop
and
push
(bad)
pop
cmp
outs
pushf
jl
hlt
sahf
loopne
bound
sbb
icebp
jg
jg
test
fisttp
out
mov
out
popa
daa
daa
scas
movs
pop
or
frstor
or
outs
(bad)
(bad)
(bad)
push
cmps
arpl
adc
loop
dec
mov
pop
not
mov
shr
inc
mov
iret
retf
dec
sbb
xor
xchg
out
shr
and
pushf
test
(bad)
fcomip
fcomp
call
adc
sub
mov
inc
xor
lods
and
dec
mov
add
push
cli
xor
sub
lods
mov
push
loopne
(bad)
(bad)
(bad)
jns
push
popa
adc
ja
not
pop
mov
mov
add
sar
mov
imul
js
add
cdq
cwde
nop
push
sub
fwait
mov
cli
aas
fimul
fldcw
jno
add
adc
call
mov
(bad)
(bad)
push
fdiv
ret
xlat
in
pop
gs
fcmovbe
add
xchg
jecxz
push
lock
pop
lock
(bad)
fist
cld
fs
jo
aaa
mov
sbb
(bad)
fs
call
fdivr
dec
dec
in
test
imul
into
xchg
bound
mov
fldenv
cmps
push
pop
ficom
(bad)
(bad)
(bad)
jmp
in
aad
ds
ret
cli
push
cmp
call
in
loope
push
test
inc
push
test
adc
popa
xor
call
mov
or
outs
inc
sub
inc
bound
add
adc
inc
es
add
sbb
xchg
movs
sbb
in
lods
xlat
dec
dec
(bad)
cmp
pop
inc
jb
pop
pop
mov
js
mov
mov
add
dec
fs
clc
mov
in
inc
jg
repz
fsubr
(bad)
(bad)
(bad)
aas
nop
test
dec
xchg
mov
cmp
popa
jge
xchg
cmps
mov
mov
sub
mov
cmps
cmc
inc
in
ss
movs
inc
int3
cmp
in
rol
clc
cmp
xchg
mov
cwde
nop
cwde
test
adc
adc
(bad)
adc
cs
dec
xor
imul
dec
ficom
pusha
adc
push
sub
push
jge
fisub
ficom
pusha
or
lds
les
mov
(bad)
(bad)
(bad)
(bad)
call
push
jno
jo
mov
inc
adc
add
in
shr
and
inc
xor
pop
xchg
retf
jg
call
mov
xor
and
xor
bound
test
movs
je
lock
js
repnz
cmp
and
and
dec
jmp
mov
and
je
or
dec
inc
cdq
sub
ja
push
cmp
iret
sub
add
(bad)
(bad)
movs
add
xchg
fdiv
(bad)
arpl
xor
sbb
mov
cmp
clc
(bad)
dec
aas
add
rol
xor
pop
sub
test
jg
jae
inc
or
jns
mov
push
icebp
mov
out
pop
nop
jl
popf
sbb
in
(bad)
push
cld
xor
push
ficom
or
dec
push
add
fcmove
jle
inc
and
(bad)
(bad)
(bad)
jmp
js
inc
or
and
jmp
mov
and
mov
sar
jl
shl
arpl
ins
ins
imul
outs
mov
cmps
and
push
(bad)
mov
push
je
loopne
(bad)
(bad)
call
movs
scas
jnp
or
adc
dec
add
fdiv
push
mov
sub
inc
sbb
bswap
dec
popf
cmp
(bad)
fsubr
mov
mov
jmp
and
ja
iret
push
inc
adc
imul
mov
in
jno
pmaddwd
(bad)
(bad)
(bad)
cmp
mov
cmps
cmp
cmp
adc
or
push
out
call
hlt
mov
xchg
pop
push
mov
test
out
and
add
sbb
dec
sub
jg
or
mov
dec
pop
sahf
mov
fisub
fisttp
add
imul
in
ret
push
pop
clc
es
push
inc
pushf
aad
jge
cli
(bad)
call
fistp
add
or
xor
jg
or
stc
icebp
outs
clc
mov
mov
stos
add
mov
and
(bad)
(bad)
(bad)
fucomip
enter
pop
dec
dec
cmp
xor
dec
addr16
ret
xchg
or
mov
(bad)
(bad)
(bad)
call
sti
pop
hlt
in
push
xor
out
xor
jno
pop
push
lods
xor
fst
cmp
and
inc
adc
jg
inc
and
movs
test
pop
xor
push
loop
pop
(bad)
fcos
in
adc
push
adc
(bad)
xor
xor
cmp
dec
add
mov
frstpm(287
sbb
cmp
out
popa
pop
inc
dec
jne
jo
es
sbb
jb
test
ins
pop
add
inc
inc
outs
jnp
push
pop
gs
pop
inc
pop
outs
sub
inc
ins
bound
das
push
imul
fisttp
in
add
push
dec
push
add
lods
sub
sbb
lods
cmps
std
nop
fistp
ins
bound
addr16
xor
repnz
out
inc
sbb
addr16
bound
cld
nop
pop
dec
addr16
inc
ins
ins
inc
dec
dec
push
dec
xor
or
inc
xor
pop
jbe
(bad)
jmp
outs
jne
inc
outs
das
inc
(bad)
jmp
stc
push
jb
push
push
outs
je
and
data16
push
ins
je
test
add
clc
repnz
jae
je
js
push
mov
jbe
mov
inc
pop
sahf
pop
mov
dec
pop
push
pop
pop
ror
jle
cmp
outs
jo
arpl
arpl
mov
mov
outs
retf
pop
getsec
add
push
mov
mov
or
sbb
pop
sbb
repz
cmp
into
inc
jno
inc
aad
retf
add
ins
out
cmp
data16
imul
cdq
call
jb
xor
mov
js
adc
add
add
aaa
pop
xchg
mov
xor
mov
add
push
add
or
add
ja
scas
xor
sbb
mov
mul
adc
fisubr
xchg
jbe
inc
fist
das
adc
cmp
ins
ins
lds
bound
jae
mov
jmp
xor
cmp
dec
ds
lea
inc
je
ins
mov
movzx
push
js
pop
or
jae
jle
mov
retf
pop
sbb
push
dec
push
xlat
mov
int3
jo
pusha
rol
and
dec
jl
mov
push
imul
shl
shl
dec
cmp
bnd
cld
retf
inc
outs
pop
or
fldcw
and
clc
push
adc
add
ins
std
nop
pop
ins
or
addr16
pusha
ja
push
popa
adc
popa
outs
push
arpl
pop
sbb
inc
dec
jae
push
dec
dec
loope
ret
or
add
dec
jp
stc
jmp
mov
xchg
ret
pop
jbe
jb
rcl
sub
pop
or
cdq
xchg
sar
sbb
outs
mov
mov
jns
xor
dec
sub
or
je
ins
or
push
and
lock
outs
adc
sub
add
mov
popa
sbb
pop
jmp
sbb
das
xor
adc
and
push
push
out
test
or
(bad)
int
push
add
adc
adc
shl
imul
ret
shl
out
mov
loope
cli
add
xchg
push
outs
jae
popa
jge
sub
js
jo
cmp
out
add
js
aaa
ret
sbb
and
stos
cmp
mov
and
adc
dec
xor
inc
gs
gs
jp
push
arpl
arpl
sti
(bad)
cmp
and
cmp
jo
push
and
ins
mov
jle
frstor
mov
xchg
imul
pop
dec
push
add
nop
and
xor
add
cld
cmp
add
out
das
xor
das
xor
sub
xor
cmp
cmp
and
jb
data16
inc
xlat
jnp
shr
test
xor
scas
call
cmp
xchg
pop
sub
popa
and
sub
push
das
mov
xlat
and
loope
pop
pop
mov
xchg
and
fmul
dec
jo
jmp
es
gs
aam
scas
sub
xchg
mov
sar
lock
dec
pop
ins
ins
pop
sbb
leave
pop
jae
inc
jbe
jae
and
jmp
and
push
dec
and
pusha
outs
test
sbb
mov
aaa
sub
inc
push
adc
outs
rcr
xor
add
mov
push
dec
xor
sub
cmp
xor
mov
ror
push
sbb
pop
retf
aam
push
enter
inc
xor
mov
sub
sub
sbb
sbb
xor
add
lock
cmp
aam
and
imul
movs
cmp
inc
xor
inc
inc
ss
xor
inc
lea
inc
inc
xor
cmp
mov
mov
dec
or
xchg
iret
imul
pop
fistp
push
gs
ins
imul
inc
mov
mov
xor
cmp
inc
lock
push
sbb
jae
cwde
add
pusha
mov
scas
ss
mov
and
jae
je
pop
inc
sti
adc
jo
and
movs
jb
lock
jbe
xor
sub
mov
arpl
inc
add
add
sub
outs
sar
pop
and
call
mov
mov
adc
and
xor
mov
out
ins
add
add
push
xchg
popa
test
(bad)
mov
push
or
push
or
push
push
or
inc
ins
aad
sbb
add
adc
jg
stc
push
adc
pop
pop
or
adc
dec
(bad)
xor
mov
add
add
les
pop
xchg
push
add
call
xor
std
and
call
dec
les
jge
adc
and
add
adc
jmp
add
adc
inc
adc
(bad)
mov
inc
fstp
and
jmp
adc
push
popa
and
jno
adc
mov
push
add
and
icebp
jb
mov
fidivr
push
add
inc
adc
pop
add
and
inc
push
xchg
popa
mov
push
and
ret
jo
mov
jecxz
add
(bad)
(bad)
jg
std
addr16
jle
(bad)
das
xlat
iret
aam
jne
inc
mov
rcl
cmp
and
xchg
sbb
ret
push
inc
test
mov
(bad)
jle
int
repnz
retf
cmc
push
(bad)
mov
push
jge
push
ror
imul
or
imul
int3
shl
bound
jb
adc
inc
xlat
cs
mov
mov
cmp
movs
jge
int
pop
add
xor
call
aas
popf
in
out
std
cs
jmp
loopne
sub
or
dec
dec
inc
(bad)
(bad)
call
jp
jl
jle
cmps
in
sbb
(bad)
mov
fnstsw
fist
(bad)
jmp
neg
out
nop
push
mov
dec
xchg
mov
les
(bad)
int3
cmp
cli
pop
jg
loopne
jmp
inc
scas
xchg
test
cdq
idiv
adc
xor
cmps
or
jb
mov
cmps
stos
ror
lds
arpl
out
mov
inc
iret
dec
lahf
arpl
mov
(bad)
call
ins
test
and
out
fstp
dec
mov
mov
(bad)
(bad)
inc
xlat
push
sub
mov
push
out
xchg
mov
xchg
fsub
in
sbb
pop
movs
int3
fcomp
or
dec
xor
pop
sahf
outs
(bad)
jmp
cmps
dec
and
fwait
iret
dec
aaa
data16
out
iret
pop
scas
xchg
jmp
jg
xor
xchg
(bad)
(bad)
(bad)
inc
xor
mov
push
gs
push
xchg
sub
pop
cdq
jmp
in
jns
outs
xchg
sbb
out
dec
in
clc
idiv
cmp
test
in
std
jmp
stos
int
mov
outs
aaa
cwde
test
movs
test
fadd
stos
fdiv
std
jle
cld
(bad)
mov
arpl
cmc
jl
test
std
mov
xor
add
ret
call
xor
mov
cmp
jge
imul
gs
(bad)
call
in
fistp
sbb
test
inc
movs
and
add
sub
cdq
jb
(bad)
(bad)
jmp
xchg
in
lods
jmp
int
xor
aad
jg
mov
dec
sar
(bad)
aas
les
sub
cs
jb
xchg
stos
push
jle
xor
(bad)
push
and
and
dec
and
dec
mov
outs
xor
adc
(bad)
inc
sbb
push
pushw
mov
loopne
dec
into
bound
leave
sbb
rol
pop
hlt
add
rcl
xchg
adc
inc
mov
or
fwait
mov
(bad)
(bad)
cli
dec
or
add
or
pusha
jae
call
mov
in
or
imul
lock
push
inc
push
clc
hlt
cli
jns
mov
(bad)
inc
xchg
adc
inc
adc
ss
(bad)
(bad)
jg
addr16
fistp
inc
(bad)
mov
jecxz
test
je
xor
jmp
arpl
dec
(bad)
inc
adc
shl
mov
imul
(bad)
inc
and
leave
jno
cmp
out
jmp
and
jae
scas
aas
cli
push
leave
inc
in
push
stc
push
je
nop
test
or
xchg
cs
(bad)
(bad)
(bad)
inc
outs
push
(bad)
mov
mov
xchg
pushf
outs
js
sahf
pop
out
pop
xchg
push
cmp
fimul
cmp
inc
sub
push
imul
aas
imul
jmp
nop
fimul
call
ffreep
ret
scas
jo
push
les
es
jns
test
loop
fnstsw
cmps
sahf
ins
mov
sbb
or
lods
bound
pop
(bad)
mov
pop
mov
and
pop
mov
jbe
ss
cwde
(bad)
and
(bad)
jg
(bad)
sbb
xor
dec
mov
out
xchg
jmp
pushf
jge
mov
dec
retf
cmp
pop
loop
xchg
inc
push
shr
pop
push
inc
or
or
aas
add
jl
(bad)
(bad)
cmp
mov
mov
in
call
pushf
add
das
dec
hlt
scas
stc
adc
iret
lahf
push
fcom
pop
leave
mov
xchg
mov
pop
aad
imul
and
test
retf
cli
rol
cmp
(bad)
(bad)
push
jg
sbb
jnp
ja
xor
leave
pop
push
lds
ins
loopne
test
(bad)
(bad)
jl
daa
pop
mov
mov
jns
stc
stos
sbb
cmp
cli
xor
out
dec
mov
(bad)
(bad)
(bad)
jmp
mov
push
mov
pop
xchg
pop
inc
jle
inc
aam
inc
inc
pushf
cmps
dec
xchg
in
mov
les
or
mov
mov
xor
mulps
dec
clc
into
mov
jb
sbb
mov
add
clc
dec
or
loopne
rol
leave
sar
pop
dec
mov
dec
xchg
(bad)
movs
push
fimul
daa
(bad)
(bad)
(bad)
(bad)
jmp
xchg
lock
adc
dec
daa
call
fiadd
(bad)
retf
push
xor
ins
(bad)
sbb
jns
(bad)
(bad)
(bad)
cmp
arpl
jmp
xchg
aaa
loopne
nop
inc
xchg
(bad)
imul
adc
aas
in
popf
addr16
fdivr
mov
retf
cld
rep
jg
(bad)
(bad)
clc
aaa
mov
sub
xor
cwde
push
lahf
test
push
jmp
mov
(bad)
pop
imul
sub
adc
ds
out
dec
adc
icebp
popf
and
in
fimul
xchg
arpl
(bad)
ins
and
mov
jge
pop
mov
div
push
xchg
adc
pop
sub
pop
push
ins
(bad)
test
aaa
hlt
outs
sub
outs
mov
xor
sub
push
mov
jno
sbb
jb
sar
push
retf
xchg
mov
or
loopne
pushf
dec
aas
inc
mov
fidiv
(bad)
out
xchg
pop
(bad)
jg
inc
jg
add
mov
sbb
sbb
mov
(bad)
(bad)
call
sbb
inc
outs
ror
mov
das
imul
(bad)
aad
cmc
(bad)
(bad)
jmp
clc
daa
cli
mov
adc
aas
sub
adc
shr
lods
mov
(bad)
(bad)
call
cmp
sbb
mov
mov
jecxz
aad
mov
call
push
cmp
ret
pop
into
nop
xor
cwde
(bad)
xor
pop
inc
in
ror
pushf
cmp
sbb
mov
into
mov
pop
fdivr
mov
push
push
xor
lea
cwde
loopne
(bad)
(bad)
(bad)
inc
cmp
(bad)
xor
jmp
neg
cmps
imul
ds
cmp
and
mov
movs
push
push
fidiv
xchg
cmp
jbe
je
xlat
xchg
int
lds
cmp
iret
jg
(bad)
mov
inc
xchg
mov
and
sbb
adc
push
cld
mov
jl
and
jecxz
scas
iret
gs
xchg
jbe
push
lods
jmp
xchg
cli
hlt
into
mov
lea
shr
(bad)
jmp
clc
cmp
scas
jl
or
in
sub
pop
and
ja
(bad)
(bad)
(bad)
jmp
(bad)
xor
jle
or
aas
sub
leave
push
xchg
(bad)
rol
sbb
sar
push
and
not
xor
jmp
imul
shrd
mov
or
lods
or
or
inc
mov
inc
pop
sub
pop
fsubr
(bad)
(bad)
call
cs
mov
ffreep
or
pop
xor
and
inc
inc
push
xor
(bad)
(bad)
inc
jnp
movs
enter
xchg
cmp
xchg
lods
js
pop
rcl
push
cmp
in
jno
daa
fsubr
movzx
push
xor
and
sbb
and
arpl
inc
iret
retf
inc
sbb
rol
mov
cmp
push
cmp
add
mov
and
sub
imul
and
mov
push
and
adc
dec
sub
imul
enter
or
sub
xor
or
dec
mov
outs
(bad)
jmp
xchg
in
outs
fld
cmp
rcl
fwait
shufps
push
mov
pop
movs
punpcklwd
xchg
cmp
pop
stos
lds
(bad)
(bad)
call
jg
fimul
sub
pop
sbb
mov
and
loop
mov
pop
icebp
(bad)
fist
lea
nop
jne
inc
push
pop
inc
mov
aad
mov
xchg
pop
js
jg
(bad)
in
lods
dec
je
dec
and
xchg
ja
cmc
mov
sub
(bad)
loop
(bad)
(bad)
(bad)
out
mov
mov
adc
ds
data16
mov
jne
sub
rol
(bad)
inc
sbb
repnz
lods
shr
arpl
xchg
in
mov
xor
jne
mov
ret
retf
iret
inc
fld
pop
sbb
inc
xchg
ret
mov
aad
lock
pop
mov
or
push
adc
xchg
(bad)
jmp
pop
adc
inc
fisubr
test
push
call
test
sar
pop
sub
pop
shl
enter
mov
(bad)
(bad)
jmp
enter
rcl
nop
xor
mov
mov
aam
mov
data16
dec
cs
xchg
push
jnp
hlt
jg
mov
cmp
or
sub
cwde
cmp
(bad)
cmps
mov
(bad)
dec
pop
mov
aam
pop
(bad)
push
jge
rol
jle
dec
mov
jbe
(bad)
mov
lock
push
stos
imul
fs
(bad)
(bad)
(bad)
(bad)
call
ds
imul
pop
fst
std
into
cmp
iret
cli
fbstp
in
jp
clc
lock
inc
jnp
mov
fdiv
sti
cs
ds
mov
mov
outs
push
push
jnp
pop
hlt
imul
rcl
mov
gs
outs
fs
inc
rcr
inc
push
xchg
das
cmp
cli
scas
cmp
std
(bad)
jg
jmp
cmp
cmp
mov
popf
arpl
xchg
(bad)
push
or
pop
fisttp
leave
add
push
or
push
sbb
fistp
jae
fs
jne
pop
cli
jbe
cwde
mov
jmp
cdq
mov
pushf
mov
imul
pop
xor
cs
jle
mov
dec
sbb
jnp
iret
int3
or
lds
inc
bound
push
push
push
test
leave
lea
and
ret
daa
pop
test
xlat
std
dec
imul
adc
mov
dec
(bad)
jg
aad
mov
lea
imul
sbb
pop
pop
mov
aaa
rol
(bad)
call
lds
sti
ss
pop
gs
mov
loop
int3
xchg
jmp
leave
mov
(bad)
call
je
mov
mov
out
push
and
push
sub
loop
pop
(bad)
mov
ja
jl
mov
mov
mov
mov
daa
mov
fist
(bad)
jmp
aad
in
pop
inc
push
inc
rcl
lea
lea
test
std
(bad)
(bad)
push
jge
(bad)
(bad)
lods
sahf
xchg
lods
outs
adc
push
scas
dec
mov
test
outs
pushf
(bad)
(bad)
fbstp
xor
mov
add
sar
sti
or
(bad)
ja
and
dec
cmps
mov
pop
xlat
(bad)
pop
cdq
jb
cmc
xor
mov
call
out
outs
aam
movs
jle
jle
rol
sbb
or
stos
inc
jmp
clc
call
arpl
mov
in
fadd
dec
stos
dec
push
(bad)
(bad)
(bad)
(bad)
(bad)
jno
jbe
mov
mov
jg
cmc
cmp
add
or
lods
fisub
cs
push
inc
sbb
daa
loope
jne
outs
dec
test
dec
jae
mov
cmp
stc
das
sub
fbstp
sbb
push
pushf
(bad)
and
pop
fsub
mov
lock
call
sbb
and
lods
jecxz
loope
inc
push
push
dec
or
scas
jmp
lods
jb
add
inc
je
mov
repz
push
pop
(bad)
into
lods
loop
into
xor
out
xlat
lock
add
sahf
ins
lock
outs
scas
stos
mov
jne
lea
xchg
or
jmp
(bad)
fiadd
in
cmps
in
lods
loopne
xor
out
inc
mov
call
jno
rcr
outs
mov
mov
pop
das
sub
pop
add
outs
rcl
stc
sbb
(bad)
(bad)
fcomip
xor
fisttp
jo
push
cs
clc
sbb
pop
cmc
sub
stos
call
cli
popf
retf
lods
jb
inc
mov
push
mov
push
push
int
ins
or
call
lahf
adc
lahf
and
cdq
lahf
push
clc
out
pop
mov
and
mov
outs
xchg
imul
(bad)
cmps
cs
daa
jl
outs
retf
cmc
fbld
xchg
fmul
enter
cmps
sbb
leave
ret
mov
push
and
jl
pop
xchg
scas
xchg
inc
pop
cwde
mov
cdq
lods
(bad)
ss
fsubr
loopne
jb
repz
daa
push
push
push
cld
call
pop
push
dec
xchg
cmps
jl
sar
jl
call
mov
(bad)
jg
mov
out
lods
cld
je
dec
gs
mov
mov
mov
(bad)
jmp
xchg
test
xchg
scas
pop
outs
xor
hlt
mov
mov
std
pop
pop
retf
aas
lods
mov
mov
jecxz
repnz
pop
cmp
iret
jl
push
stos
inc
mov
pop
jne
(bad)
cmp
mov
test
cmp
(bad)
(bad)
mov
outs
sar
addr16
jae
es
mov
repnz
xchg
popa
enter
outs
call
std
(bad)
fld
arpl
jp
xlat
mov
es
sub
in
pop
movs
(bad)
in
movs
mov
jmp
pop
push
adc
leave
fucomip
mov
leave
cmp
fstp
push
iret
(bad)
(bad)
out
cli
popf
and
mov
push
xchg
mov
adc
fist
mov
call
(bad)
cmp
nop
hlt
jp
add
daa
movs
pusha
call
jmp
shr
(bad)
loope
(bad)
call
lods
add
aas
add
push
cmps
push
jg
cmp
out
cs
fs
(bad)
inc
mov
mov
add
and
cli
push
fcomi
mov
leave
stos
jmp
jbe
add
pop
xchg
(bad)
jecxz
outs
dec
sti
(bad)
(bad)
(bad)
inc
pusha
test
pop
mov
jmp
inc
(bad)
ds
stos
stos
xor
cmp
ins
stos
hlt
mov
pop
call
jp
loopne
(bad)
mov
sbb
and
push
into
inc
pushf
jmp
pushf
mov
mov
xchg
pop
push
movnti
daa
add
mov
jo
mov
fdiv
push
push
call
out
(bad)
xchg
imul
rol
ret
mov
(bad)
push
in
cmp
outs
mov
data16
out
icebp
jns
pop
aam
cmps
mov
jbe
xchg
test
add
jg
jmp
dec
mov
mov
jne
loop
mov
jmp
(bad)
pop
(bad)
mov
fld
mov
mov
inc
mov
(bad)
dec
rcr
loopne
(bad)
(bad)
cld
aas
repz
sbb
mov
lods
std
mov
sub
ins
mov
or
mov
inc
jmp
cmps
ins
loope
stos
push
push
(bad)
(bad)
call
inc
xchg
shr
xor
inc
inc
inc
jo
les
imul
(bad)
(bad)
(bad)
jmp
or
push
jno
retf
and
mov
mov
or
mov
mov
test
cmps
shr
out
cmp
ss
into
(bad)
jp
cmp
fisub
test
mov
rcl
cdq
into
xor
dec
xchg
adc
cmp
xchg
fdiv
jb
cmps
xchg
push
stos
or
mul
push
mov
(bad)
(bad)
dec
sub
inc
rcl
test
test
pushf
xlat
aas
sub
lock
pop
mov
add
cld
dec
cmp
shl
mov
mov
inc
clc
pop
ret
mov
je
xor
or
dec
pop
movs
sub
gs
(bad)
(bad)
dec
jbe
retf
lock
dec
pop
sub
inc
cld
scas
(bad)
shl
pushf
push
push
test
cmc
(bad)
(bad)
inc
je
adc
test
fnstcw
in
movs
or
(bad)
fisttp
jae
inc
jecxz
pop
ds
enter
rcl
sub
lods
jg
out
movs
movs
(bad)
mov
out
enter
jle
cli
clc
call
jg
std
sub
xor
(bad)
popa
mov
jp
mov
call
push
mov
cwde
not
cs
(bad)
(bad)
jg
in
mov
mov
cld
sub
xchg
push
xchg
retf
adc
(bad)
call
stc
ins
push
mov
inc
xchg
mov
and
(bad)
(bad)
jmp
mov
sbb
sahf
js
test
jmp
cmp
sti
mov
(bad)
(bad)
jg
mov
sar
int
cs
cld
jg
ins
sbb
adc
xchg
push
int
mov
(bad)
jg
(bad)
in
or
sub
xchg
mov
dec
fcom
add
jb
jecxz
cwde
add
sbb
or
out
xchg
or
jne
mov
(bad)
inc
xchg
inc
xchg
dec
(bad)
stc
and
mov
xor
inc
(bad)
(bad)
(bad)
jmp
or
data16
stos
push
mov
outs
and
ret
dec
dec
adc
fbstp
pop
shl
(bad)
jmp
adc
scas
push
inc
push
ins
pop
hlt
lds
cwde
pop
std
sub
sub
loope
(bad)
push
jnp
sti
cmps
icebp
int3
out
pop
mov
sbb
pushf
sbb
int
outs
fdivr
(bad)
(bad)
mov
sti
ja
cdq
inc
fcom
xor
cmp
fild
and
lods
call
call
push
stos
xor
retf
imul
stc
test
(bad)
(bad)
(bad)
call
cmp
inc
leave
xchg
and
popa
xor
push
out
mov
xchg
aad
(bad)
inc
pop
nop
push
loope
fsub
inc
sbb
mov
enter
add
cmc
icebp
fcomp
pop
(bad)
nop
pop
or
das
inc
mov
dec
adc
call
cld
adc
and
fidivr
(bad)
iret
mov
mov
adc
(bad)
test
mov
push
gs
mov
js
push
dec
fcomp
test
and
test
movs
push
cmps
adc
dec
sbb
fs
xor
test
in
adc
sub
adc
sub
int
(bad)
jmp
sahf
call
xor
inc
in
lahf
out
push
nop
das
cmps
sub
in
iret
(bad)
(bad)
call
xor
daa
shl
inc
rol
cmps
fdivr
(bad)
push
xchg
add
(bad)
(bad)
jmp
ret
push
xchg
jl
nop
add
mov
test
loop
call
inc
fimul
and
mov
sub
jge
mov
ror
or
push
test
jge
inc
inc
gs
jnp
xchg
fstp
push
jno
loopne
xor
test
push
aad
or
mov
leave
inc
cwde
cmp
mov
dec
(bad)
call
mov
push
popf
adc
or
cmp
cdq
out
outs
scas
jnp
jmp
(bad)
push
cmp
shl
cwde
jne
int
mov
call
mov
inc
jmp
push
imul
or
cmp
mov
push
sar
xor
pop
sub
mov
mov
sbb
bnd
aaa
cld
test
ret
es
(bad)
rcr
jb
cmc
dec
sub
dec
in
rcl
xlat
xchg
aad
(bad)
(bad)
(bad)
call
ins
jl
scas
pop
push
push
jmp
cmp
enter
jp
inc
fs
mov
test
aam
(bad)
(bad)
jmp
(bad)
(bad)
sbb
loope
in
lea
pop
jle
cwde
je
inc
pushf
sub
inc
retf
es
cmps
jg
mov
jbe
sub
aad
xor
gs
pop
xchg
xchg
test
sbb
cmp
pop
retf
pop
es
sbb
or
fdiv
(bad)
(bad)
(bad)
jmp
xchg
ins
dec
dec
(bad)
mov
mov
sbb
pop
xchg
jbe
add
das
jbe
leave
pop
sbb
(bad)
(bad)
inc
sub
iret
mov
mov
adc
popa
dec
in
xchg
cmps
and
(bad)
(bad)
dec
call
pushf
pop
rcr
mov
bswap
add
and
mov
(bad)
dec
mov
test
dec
mov
ja
out
imul
fcomp
(bad)
(bad)
push
mov
int3
xlat
jae
mov
mov
cmp
not
lea
jmp
xor
sub
mov
mov
add
fcomp
sub
shl
(bad)
call
push
clc
test
mov
jne
lds
stc
mov
and
xor
(bad)
(bad)
inc
cld
dec
mov
retf
cmp
jb
inc
arpl
adc
rcl
(bad)
(bad)
jmp
sbb
jge
aaa
jg
cmp
xor
js
adc
add
imul
or
dec
inc
xchg
test
or
test
lea
jno
sbb
movs
inc
test
fcomip
add
test
xchg
je
and
gs
loopne
test
(bad)
(bad)
call
jecxz
add
repnz
enter
mov
jg
sbb
sub
inc
dec
cmp
ret
and
cmp
mov
mov
(bad)
scas
arpl
xchg
fld
int3
mov
adc
adc
adc
sub
fsubr
inc
add
cmp
ins
xchg
xor
add
pop
mov
sub
and
movs
iret
add
(bad)
mov
mov
add
sub
sbb
adc
fcmovbe
or
mov
and
push
push
dec
push
lock
adc
pop
in
mov
and
movs
push
dec
ins
mov
mov
jae
lock
add
add
ret
xchg
iret
sub
dec
add
push
adc
fld
and
xchg
ret
adc
add
out
mov
sbb
pop
sbb
fisttp
cmp
and
push
add
fwait
jge
inc
mov
inc
dec
or
in
pop
push
shr
mov
add
xor
xchg
int3
inc
out
retf
or
mov
push
and
(bad)
shl
ins
movs
and
xor
adc
jmp
and
ficomp
fs
mov
fdivr
push
mov
out
jg
inc
ss
push
imul
push
mov
add
xchg
and
pop
sbb
mov
das
loopne
retf
ss
je
inc
sub
loopne
dec
cmp
dec
pop
ins
pop
popf
adc
enter
dec
rcr
add
neg
lods
inc
fwait
mov
inc
sbb
push
dec
and
or
ins
ins
sub
xor
(bad)
mov
popa
pop
dec
retf
mov
push
mov
sub
data16
sub
adc
addr16
aad
sub
(bad)
movs
call
xor
xor
ror
(bad)
and
push
cmp
lea
outs
mov
call
jb
sub
test
mov
push
mov
xchg
jbe
xchg
mov
xchg
dec
data16
xchg
xor
push
dec
leave
push
sahf
rcr
adc
loope
ins
sub
xor
scas
mov
imul
mov
test
inc
or
add
dec
add
mov
adc
and
mov
inc
and
or
popa
les
pop
sub
and
inc
push
shl
adc
mov
xlat
or
push
jo
dec
and
sub
adc
daa
hlt
loopne
sar
add
inc
dec
dec
popf
dec
pop
push
das
mov
push
or
push
js
xor
retf
and
out
fild
mov
inc
jo
gs
out
cmp
adc
add
push
xchg
adc
sahf
std
out
or
sbb
adc
movs
xchg
test
mov
(bad)
mov
popf
adc
mov
add
inc
ins
adc
push
push
push
imul
xor
aas
push
inc
gs
push
mov
mov
dec
movs
xor
jge
push
dec
mov
dec
mov
es
push
addr16
push
fs
rcl
or
adc
add
add
pop
in
loopne
push
fs
adc
inc
js
popa
add
mov
xchg
retf
mov
and
dec
jmp
and
adc
imul
neg
inc
adc
int
shr
jg
arpl
mov
aam
or
test
cld
xlat
pop
cs
bound
lods
mov
mul
loope
fsubrp
in
adc
adc
jno
bound
movs
call
add
or
and
ins
out
pop
imul
add
int3
xchg
test
push
adc
imul
and
push
adc
adc
dec
fild
and
mov
sub
call
test
sub
out
push
test
test
adc
je
aam
outs
imul
adc
mov
push
loopne
and
mov
cmp
dec
cmp
sbb
inc
or
add
or
das
pop
inc
stos
inc
jne
jae
pop
icebp
add
ja
mov
arpl
pop
and
xchg
mov
pushf
adc
pop
xor
push
push
xchg
sbb
sbb
stos
sbb
jmp
std
movs
sbb
jo
je
xor
ins
in
xchg
push
xor
jae
or
mov
sbb
inc
dec
bound
stos
xor
call
add
jo
mov
imul
retf
dec
jp
js
aam
push
icebp
movs
xlat
cmps
push
lods
in
dec
ss
sbb
in
adc
adc
sbb
mov
adc
add
and
fwait
rcl
xchg
adc
mov
test
mov
or
sub
rcl
cdq
mov
cli
test
retf
test
data16
sbb
adc
cmp
pop
adc
ins
mov
mov
add
mov
mov
pop
sub
movs
cmc
add
imul
dec
dec
and
outs
sbb
outs
rol
arpl
dec
inc
dec
lock
push
lds
lea
mov
add
aam
add
add
push
sub
jmp
jne
xchg
repnz
jae
sbb
push
ins
xchg
je
cmc
shl
dec
add
inc
sbb
data16
ins
test
pop
xor
imul
add
cmp
(bad)
mov
in
aad
sub
and
xchg
idiv
mov
dec
fisub
add
sbb
mov
and
sub
inc
dec
inc
add
pop
std
(bad)
inc
mov
xchg
add
and
dec
ja
call
(bad)
jge
push
xor
sbb
mov
int3
inc
loopne
mov
or
mov
(bad)
mov
inc
xor
inc
sbb
clc
sub
add
(bad)
(bad)
jg
push
sbb
mov
jb
and
xchg
inc
dec
adc
ss
loop
lock
sub
(bad)
(bad)
(bad)
inc
sbb
adc
push
hlt
fwait
jnp
mov
cmps
test
mov
dec
mov
(bad)
dec
pop
lds
or
test
sub
icebp
ins
fistp
fwait
sahf
je
jmp
call
xlat
cmp
inc
out
mov
mov
loop
jns
xor
(bad)
(bad)
cmp
sbb
mov
cmp
pop
into
lods
push
scas
lahf
inc
aas
(bad)
(bad)
(bad)
(bad)
jg
rcr
cmps
or
inc
xchg
cmp
add
xlat
movs
cmp
ja
(bad)
dec
dec
xor
iret
repz
jmp
leave
stos
sti
cld
or
(bad)
inc
jno
aam
mov
adc
inc
cs
iret
(bad)
sti
aas
ret
retf
cwde
(bad)
(bad)
(bad)
dec
sbb
sub
sub
or
add
movs
inc
add
push
(bad)
(bad)
(bad)
fild
addr16
pop
jg
stos
xchg
int3
mov
cmp
xlat
pop
lods
push
mov
inc
(bad)
jmp
rol
enter
xor
adc
test
cmp
loope
mov
test
and
inc
sub
inc
and
mov
jns
xor
call
xchg
std
ret
sub
adc
lock
or
xor
pop
adc
add
adc
fs
push
mov
(bad)
push
jg
(bad)
rol
cmp
mov
add
dec
add
push
xor
jge
(bad)
(bad)
mov
shl
fistp
add
adc
and
cwde
sub
(bad)
call
push
dec
inc
adc
jbe
adc
fmul
daa
movs
mov
mov
pop
jg
loop
or
scas
mov
inc
sahf
sbb
(bad)
jmp
call
aaa
pop
pop
pop
dec
aad
sbb
pop
fstp
clc
sbb
std
call
mov
test
sub
sbb
(bad)
(bad)
push
sub
jbe
mov
sub
xor
or
sub
dec
cmp
dec
xchg
add
out
push
xchg
mov
sub
push
fs
shl
xor
(bad)
(bad)
push
jne
fbld
mov
push
mov
or
inc
add
xchg
sub
(bad)
(bad)
jmp
sbb
or
sub
push
es
out
cmp
cmp
(bad)
out
adc
xor
(bad)
xchg
fsubr
and
ds
(bad)
jmp
add
mov
or
sub
inc
(bad)
call
inc
lahf
push
hlt
pop
das
or
sub
sbb
inc
push
retf
call
cld
(bad)
cmp
mov
push
push
cmps
inc
js
xor
enter
and
movs
cmp
test
(bad)
(bad)
dec
xor
(bad)
in
cmps
add
inc
inc
sar
xor
test
and
mov
(bad)
(bad)
jmp
mov
push
xchg
xchg
sti
std
mov
adc
popa
dec
movs
popa
int
addr16
push
stos
inc
mov
jg
aas
clc
push
push
or
mov
pusha
xchg
mov
xchg
mov
cwde
and
jmp
xchg
es
mov
shr
lock
int3
bound
mov
sub
cmp
retf
(bad)
(bad)
(bad)
cmp
es
xor
xchg
ret
add
mov
fdiv
mov
pop
shr
adc
retf
aaa
std
inc
pop
mov
jb
jmp
out
cmp
je
scas
xlat
jbe
push
cld
mov
in
pusha
xor
or
js
push
in
sbb
xchg
fild
das
clc
pop
dec
rol
xchg
push
jmp
push
(bad)
or
enter
adc
jmp
adc
jmp
cmp
xchg
pop
mov
pop
cwde
(bad)
outs
inc
les
loopne
push
adc
(bad)
icebp
push
jp
adc
mov
call
pop
cmp
mov
push
mov
jno
call
xlat
push
(bad)
jmp
inc
pop
pop
mov
adc
mov
inc
cmc
and
pop
xor
(bad)
mov
jge
test
xchg
test
mov
int
(bad)
jmp
mov
(bad)
(bad)
call
mov
lahf
mov
jne
ins
and
sub
loop
xor
rcr
mov
pop
cmp
xor
fsubr
push
test
jae
fsubrp
mov
ds
mov
sbb
cld
inc
sahf
mov
adc
jnp
test
ja
add
jl
inc
push
and
jle
(bad)
(bad)
sti
sbb
cs
cmp
mov
inc
adc
add
ret
or
lds
sbb
das
xor
movs
(bad)
jmp
shr
(bad)
adc
outs
xor
push
push
sub
movs
ins
data16
sub
cmp
sbb
add
repnz
(bad)
(bad)
jmp
adc
jnp
retf
jmp
(bad)
sbb
lods
push
repnz
xor
outs
cdq
dec
(bad)
(bad)
push
inc
inc
inc
xchg
jl
push
inc
in
jg
lock
cmp
int
xchg
(bad)
jmp
mov
sbb
push
jl
in
call
in
adc
aaa
inc
movs
das
push
(bad)
(bad)
cmp
jbe
popf
lock
mov
lahf
test
sub
and
aaa
std
aaa
outs
test
jbe
sbb
mov
xor
pusha
arpl
std
(bad)
dec
push
adc
mov
or
jbe
fidiv
shl
mov
push
(bad)
dec
add
push
ret
jo
out
cmps
cmp
(bad)
(bad)
call
push
mov
mov
fiadd
fmul
leave
fbld
iret
inc
in
jecxz
dec
sbb
(bad)
(bad)
(bad)
inc
dec
jecxz
xchg
adc
movs
retf
pop
dec
pop
into
xchg
iret
in
(bad)
xchg
xchg
xchg
mov
(bad)
call
and
and
fnstcw
xor
mov
and
mov
xchg
mov
pusha
mov
adc
das
inc
fcomp
nop
xor
add
push
arpl
sbb
or
xor
std
jl
inc
mov
jmp
cmp
jmp
cli
retf
not
cmp
sbb
(bad)
(bad)
jmp
cwde
call
push
rcl
(bad)
ja
aaa
pop
mov
jno
adc
dec
(bad)
(bad)
(bad)
dec
shl
daa
push
xor
loopne
popf
pushf
sahf
jnp
mov
add
icebp
cmc
pop
outs
retf
shr
call
sbb
ja
fwait
xabort
dec
push
cld
mov
and
outs
pop
dec
push
stc
sbb
mov
gs
(bad)
(bad)
(bad)
jmp
mov
movs
and
jmp
imul
cwde
mov
popa
aam
stos
lods
xchg
pop
es
call
mov
(bad)
and
adc
mov
gs
(bad)
(bad)
dec
jecxz
sbb
sbb
jbe
sar
push
test
push
xor
aam
mov
sbb
jmp
push
aad
jecxz
xchg
aaa
or
out
and
shr
and
jb
(bad)
das
clc
(bad)
call
jbe
cmp
lock
stos
xchg
stc
inc
jg
push
xor
outs
push
addr16
cmp
data16
push
loopne
cmps
lahf
mov
and
push
or
(bad)
dec
cmps
sbb
scas
mov
sbb
sbb
inc
fs
inc
push
or
xlat
or
hlt
fimul
out
sbb
mov
(bad)
(bad)
(bad)
jns
out
or
xchg
inc
daa
fwait
cmp
retf
mov
inc
xlat
pop
cld
mov
test
(bad)
(bad)
(bad)
jp
xchg
imul
mov
jl
fmul
jbe
adc
data16
neg
sbb
and
dec
in
test
push
add
xor
scas
(bad)
fcomip
cmp
adc
into
aas
xchg
or
xor
dec
xchg
adc
sub
dec
pop
and
(bad)
data16
add
dec
dec
push
cmp
call
jbe
jmp
dec
push
in
mov
(bad)
xor
fdiv
dec
xchg
dec
xchg
sbb
fidivr
stc
je
xor
lock
cmp
jmp
(bad)
(bad)
jle
dec
sbb
jg
mov
ds
ss
dec
adc
mov
ret
stc
pop
or
push
mov
outs
lds
shl
repnz
ss
gs
in
retf
cdq
pushf
std
mov
(bad)
stos
inc
cld
mov
popa
sbb
test
sbb
rol
push
gs
mov
mov
aaa
ret
dec
dec
ins
mov
xchg
loopne
mov
sbb
clc
daa
and
inc
outs
loop
(bad)
inc
mov
outs
mov
stos
hlt
mov
pop
aaa
retf
aaa
mov
jmp
cwde
les
mov
call
mov
inc
pushw
stc
mov
or
lock
add
sahf
loopne
outs
jno
lahf
pusha
sub
retf
ficomp
jmp
adc
popa
mov
adc
jne
pop
push
sbb
add
loopne
push
cmp
addr16
or
jae
mov
adc
add
mov
and
call
and
mov
jp
and
jp
push
(bad)
cmp
xor
addr16
add
push
punpckldq
aad
add
loopne
mov
and
popf
(bad)
(bad)
(bad)
jmp
add
hlt
fcmovnb
xor
std
mov
mov
push
adc
dec
enter
dec
mov
(bad)
(bad)
dec
cmp
dec
ret
sbb
mov
inc
cmps
mov
sub
(bad)
(bad)
(bad)
jmp
inc
out
js
data16
test
fwait
push
sbb
pop
fnstcw
ja
test
(bad)
(bad)
inc
fmul
es
ss
inc
sbb
cmp
add
or
xchg
mov
sbb
mov
rcl
inc
xor
fcomp
inc
jl
cmc
xchg
add
pop
mov
out
fs
jmp
xor
je
ret
xchg
js
ret
or
inc
mov
fsubr
sar
(bad)
(bad)
inc
xchg
jmp
xor
test
(bad)
lahf
mov
cld
stos
fnstenv
imul
loop
(bad)
(bad)
call
bound
push
call
call
mov
mov
(bad)
(bad)
mov
inc
dec
clc
or
cmp
sbb
mov
(bad)
(bad)
dec
push
aam
push
das
inc
cmp
pcmpeqd
or
mov
mov
sti
ret
lock
dec
sbb
xchg
mov
sub
jecxz
mov
out
cmp
(bad)
dec
cmp
sbb
mov
loop
mov
add
sar
(bad)
(bad)
fistp
inc
push
mov
dec
mov
ret
mov
xor
push
(bad)
test
lea
(bad)
(bad)
(bad)
inc
jmp
jbe
mov
pop
in
test
int
(bad)
xchg
jg
call
(bad)
push
mov
fs
and
pop
jmp
fsubr
mov
cld
(bad)
(bad)
jmp
shl
xor
cwde
push
lahf
loopne
sub
xchg
dec
aas
mov
icebp
ins
inc
push
mov
jg
call
sar
inc
enter
mov
test
fldenv
cmp
stos
cmp
mov
loopne
mov
xchg
inc
xor
dec
aad
cmc
pop
sub
stc
sub
arpl
nop
xchg
inc
call
stos
or
or
xchg
mov
ret
or
(bad)
(bad)
inc
ret
mov
and
cld
mov
push
ficom
pop
repz
cld
(bad)
(bad)
jmp
sbb
mov
xchg
sub
pusha
leave
mov
(bad)
(bad)
xchg
and
sbb
cli
(bad)
call
xor
test
outs
(bad)
pop
jge
mov
daa
scas
mov
(bad)
(bad)
(bad)
push
(bad)
mov
cld
cmp
fistp
scas
lds
cld
mov
(bad)
dec
(bad)
mov
sar
loopne
lea
out
dec
push
cld
adc
push
adc
mov
cdq
dec
clc
lea
mov
mov
sub
mov
pop
pop
push
retf
and
mov
repz
pusha
push
ja
in
sbb
(bad)
(bad)
in
inc
fdivr
xchg
jmp
das
popf
xor
lock
das
dec
movs
sysret
repnz
lods
and
(bad)
call
shr
ret
sar
mov
dec
add
ret
mov
pop
mov
dec
fisub
ins
push
adc
jmp
inc
mov
sub
je
scas
(bad)
(bad)
dec
push
push
stos
lods
cmp
popa
sbb
add
arpl
and
mov
jo
aad
or
std
xchg
pop
xchg
add
fisttp
xor
loopne
mov
mov
jne
cmp
lds
dec
jge
jb
popf
ds
push
(bad)
jmp
rcr
dec
stos
loop
repz
mov
das
cmp
test
xchg
(bad)
(bad)
fbld
jl
mov
dec
sub
shr
push
stos
jo
ret
(bad)
sti
(bad)
call
loope
mov
sbb
cmps
fldenv
cmps
cdq
(bad)
push
ins
out
jp
fstp
(bad)
(bad)
call
push
leave
fimul
out
xchg
mov
pop
retf
imul
xor
and
inc
jmp
or
nop
push
mov
inc
xchg
inc
(bad)
push
retf
scas
das
mov
aam
pop
pusha
mov
(bad)
(bad)
(bad)
inc
sbb
inc
inc
inc
test
dec
ret
and
add
pushf
movs
fwait
sub
cld
dec
pushf
jmp
test
dec
repnz
inc
scas
iret
test
lahf
outs
fwait
mov
sub
test
call
sub
sbb
movs
mov
sbb
loop
push
xlat
xchg
retf
pop
sar
cld
push
lods
push
mov
pusha
sbb
push
adc
jl
(bad)
(bad)
(bad)
call
add
or
sahf
icebp
and
push
jno
outs
sbb
jno
push
cdq
inc
and
and
jbe
nop
jo
loopne
fwait
int
pop
sbb
aam
or
sahf
in
and
std
(bad)
hlt
sbb
sub
xchg
mov
mov
ffreep
dec
dec
aam
mov
mov
ficomp
jmp
and
mov
sahf
inc
inc
enter
sbb
push
icebp
(bad)
adc
imul
adc
push
and
in
(bad)
jmp
fst
and
in
arpl
xor
ret
fwait
mov
lods
clc
pusha
adc
std
inc
xor
call
out
les
(bad)
push
outs
rcr
rol
dec
ret
inc
inc
adc
test
dec
out
ds
pop
(bad)
(bad)
(bad)
jmp
jns
cmp
push
cmp
mov
test
fiadd
sub
mov
xchg
sub
push
xchg
cdq
xchg
cmp
push
inc
lods
pop
div
(bad)
jmp
mov
in
popf
ins
ins
sbb
sbb
xlat
ja
pushf
les
ficomp
jmp
inc
dec
dec
and
xchg
adc
adc
lods
dec
cmp
add
(bad)
(bad)
dec
test
xchg
or
imul
mov
push
and
cmp
(bad)
fcomip
ja
es
fidivr
mov
(bad)
repnz
(bad)
pop
iret
mov
cmp
(bad)
(bad)
push
dec
ror
in
mov
(bad)
not
xor
cmp
bts
or
pop
(bad)
(bad)
(bad)
(bad)
jmp
dec
lods
stc
inc
out
int3
cli
jp
xchg
and
mov
leave
cmp
jb
imul
mov
and
call
push
adc
unpckhps
pop
mov
mov
test
inc
sub
sbb
(bad)
(bad)
(bad)
(bad)
mov
jb
shl
add
mov
jae
into
pop
add
repnz
hlt
(bad)
dec
and
adc
aas
mov
push
retf
inc
popa
inc
xor
or
inc
jo
inc
push
jbe
lods
xchg
xor
xlat
iret
adc
push
(bad)
aam
(bad)
(bad)
fistp
clc
sbb
ds
dec
fldcw
cmps
mov
int
inc
ret
ret
das
(bad)
xchg
sbb
jno
lea
jle
or
push
outs
cmp
mov
cmps
mov
nop
nop
ficom
call
mov
mov
jno
rcl
das
cmp
cld
fisttp
cdq
test
jg
and
mov
push
mov
inc
mov
arpl
jb
push
jle
mov
loope
(bad)
dec
or
sbb
adc
ss
nop
jne
sbb
and
dec
test
(bad)
(bad)
mov
inc
bound
cmp
mov
sbb
fnstcw
mov
dec
add
sub
push
or
cmps
add
test
stos
pop
cwde
jmp
(bad)
call
dec
jmp
out
inc
mov
iret
out
xlat
aad
or
lock
fisubr
gs
daa
sub
out
cmps
repz
xor
cmp
pop
test
pop
xchg
iret
fcomp
pushf
push
and
sahf
sysexit
dec
leave
(bad)
(bad)
(bad)
inc
test
pusha
sub
sbb
mov
fdiv
int3
sub
mov
mov
push
(bad)
(bad)
(bad)
call
mov
sub
outs
mov
ret
retf
jo
mov
shr
sbb
push
sbb
clc
(bad)
(bad)
(bad)
jmp
daa
push
cmps
jle
mov
xor
sahf
lahf
retf
shl
dec
inc
lock
dec
xor
cmp
add
ret
or
sbb
or
adc
fbstp
xor
xchg
ins
xchg
lea
xchg
mov
scas
push
test
push
ret
cwde
repnz
shl
xor
(bad)
(bad)
jmp
(bad)
mov
gs
aaa
ja
jnp
in
imul
(bad)
(bad)
call
into
push
mov
mov
dec
jmp
rcr
mov
fist
(bad)
(bad)
fcomip
test
mov
sbb
loope
pop
mov
popf
(bad)
mov
loop
ins
retf
aaa
cld
(bad)
push
(bad)
cmp
int3
mov
fisttp
cmp
jp
scas
sti
jo
or
(bad)
sti
fs
(bad)
mov
inc
adc
lock
inc
add
cmp
(bad)
jp
je
cmp
cmps
xor
movs
mov
inc
inc
dec
aam
(bad)
(bad)
(bad)
jmp
loopne
mov
dec
push
popa
call
inc
pop
push
retf
and
bound
(bad)
mov
fild
loop
dec
xchg
cmps
sbb
(bad)
(bad)
(bad)
jg
stos
lea
(bad)
xor
mov
mov
loope
aam
(bad)
push
in
shr
outs
std
(bad)
(bad)
(bad)
inc
out
in
lahf
into
push
ins
mov
dec
(bad)
push
xor
std
pop
rcl
mov
or
out
(bad)
(bad)
call
es
push
jbe
outs
inc
or
rcr
mov
js
adc
scas
std
sahf
ins
dec
sahf
clc
(bad)
(bad)
(bad)
(bad)
mov
jbe
mov
push
aas
scas
bound
xchg
ins
push
mov
and
ret
mov
xlat
test
or
push
fcomip
das
fiadd
test
repz
les
xchg
xor
push
dec
mov
(bad)
inc
push
sbb
mov
and
imul
push
jae
mov
fs
(bad)
(bad)
(bad)
call
call
inc
push
mov
cmp
std
jmp
(bad)
sti
push
cld
mov
mov
(bad)
(bad)
dec
pop
mov
call
idiv
or
sti
int3
call
xchg
mov
cli
popa
mov
inc
hlt
retf
or
sahf
sti
popf
add
data16
push
jmp
add
mov
ins
lock
and
sub
pop
add
pop
mov
das
clc
(bad)
mov
ins
and
mov
or
cld
sub
cld
call
cmp
or
inc
stos
mov
inc
fwait
int3
sar
(bad)
push
add
aad
addr16
jge
std
shl
add
rcl
jns
jmp
call
out
fsub
call
out
inc
add
icebp
fisubr
(bad)
(bad)
dec
pusha
in
xchg
(bad)
jns
cmc
fild
push
(bad)
(bad)
(bad)
mov
cdq
or
lock
push
dec
or
cmp
adc
adc
scas
adc
(bad)
dec
loop
neg
mov
dec
pop
cmps
aad
stos
bswap
cli
dec
lods
fidivr
frstor
dec
hlt
(bad)
inc
cld
fistp
cwde
pop
movs
int
lods
es
lds
xchg
cli
stc
(bad)
(bad)
(bad)
(bad)
cmp
fld
sahf
mov
push
mov
mov
dec
(bad)
(bad)
(bad)
jmp
adc
jle
push
ins
mov
push
xor
aaa
scas
aam
or
sub
jmp
loopne
dec
cld
inc
es
sub
inc
mov
push
enter
dec
cwde
(bad)
(bad)
(bad)
jg
inc
rep
je
icebp
xor
js
cmp
jp
dec
lea
neg
add
(bad)
jmp
xchg
fcmovu
pop
shl
lods
stos
stos
inc
adc
xchg
fcmovb
xchg
loope
std
(bad)
mov
or
xchg
in
leave
data16
jg
push
hlt
iret
dec
mov
push
push
test
cs
jb
loopne
loop
enter
push
mov
fisub
xor
and
pop
lahf
push
and
jle
(bad)
(bad)
jg
inc
push
jmp
(bad)
jmp
arpl
aad
fsub
sar
test
mov
jp
(bad)
(bad)
(bad)
jmp
repz
push
retf
push
cmp
add
int
mov
jmp
mov
or
test
ror
push
data16
xor
push
fbld
xor
and
nop
nop
jmp
jg
jmp
jge
test
test
es
dec
add
push
push
or
out
cli
dec
lea
pop
pop
cmp
sbb
aam
retf
sub
cmp
call
das
cwde
pop
sbb
dec
repz
jnp
test
inc
mov
imul
sbb
arpl
mov
pop
mov
rep
(bad)
pop
leave
jbe
jge
add
cmc
std
jg
xor
lea
sbb
(bad)
(bad)
call
and
out
push
and
push
mov
pop
dec
cmp
ret
pop
push
adc
out
adc
cmp
xor
pop
cmp
out
push
adc
push
inc
test
mov
sbb
lods
es
dec
in
lock
test
lahf
jmp
inc
inc
es
fldcw
ficom
dec
add
sub
or
repz
pop
ins
test
push
dec
mov
and
adc
out
sti
(bad)
(bad)
(bad)
fstp
or
out
icebp
mov
(bad)
aad
sbb
(bad)
call
mov
sbb
xchg
dec
(bad)
repz
sub
mov
ret
(bad)
jne
xchg
int
cli
jp
shr
xor
test
into
and
mov
(bad)
(bad)
inc
cmp
call
push
jl
aaa
add
cld
ins
out
int
dec
cmp
popf
xchg
push
sub
les
sbb
push
loope
rol
imul
fst
add
mov
(bad)
(bad)
call
mov
(bad)
fs
imul
ror
(bad)
jg
mov
sti
push
in
push
in
movs
push
scas
popa
sti
rcl
mov
jmp
mov
outs
pop
jp
fisub
adc
mov
mov
push
ret
push
add
adc
cmp
sub
(bad)
(bad)
(bad)
inc
push
sbb
sbb
or
add
fwait
fwait
and
inc
inc
mov
and
cmps
pop
add
fadd
fidivr
lahf
aaa
fldenv
jmp
or
aaa
stos
dec
not
cmps
imul
mov
cmps
xor
mov
and
add
adc
dec
xor
test
dec
hlt
(bad)
(bad)
fcomip
inc
adc
into
dec
and
test
(bad)
icebp
out
call
cmp
add
hlt
mov
push
cmp
mov
jg
ja
(bad)
(bad)
(bad)
out
and
(bad)
icebp
ror
xor
imul
mov
(bad)
(bad)
(bad)
push
loopne
int3
in
loop
sbb
movs
loopne
xor
rol
push
jno
lds
pop
sbb
dec
or
or
jmp
jne
mov
and
pushf
jnp
into
iret
cdq
outs
cmp
pop
clc
or
jmp
pop
sbb
cs
lock
or
jecxz
and
sub
(bad)
push
mov
(bad)
jge
and
or
stc
cbw
push
cs
add
cmp
ficom
or
es
xchg
addr16
(bad)
(bad)
jmp
mov
pop
sbb
push
inc
loopne
push
movs
neg
mov
(bad)
stc
cmp
(bad)
(bad)
push
dec
out
jne
jmp
jns
jge
mov
pop
lock
jmp
cs
(bad)
mov
sbb
pop
xchg
push
mov
dec
adc
pop
xlat
push
push
adc
ret
xor
jo
ret
gs
adc
xchg
and
(bad)
jmp
pop
ins
test
xchg
push
xchg
fild
fsubr
in
in
sti
cmps
call
es
push
or
sbb
add
mov
aas
(bad)
jmp
xchg
scas
dec
imul
and
lock
sbb
mov
nop
inc
push
mov
fldcw
or
inc
fld
test
sub
and
ins
(bad)
(bad)
(bad)
dec
mov
dec
push
push
or
mov
adc
mov
jno
imul
xor
inc
mov
in
out
cdq
leave
repnz
ret
cli
xor
mov
(bad)
(bad)
jmp
call
inc
push
dec
mov
sahf
loopne
and
loop
dec
(bad)
(bad)
(bad)
dec
inc
mov
leave
sub
icebp
scas
leave
cmp
push
mov
push
pop
sahf
movs
adc
ja
(bad)
jmp
(bad)
pop
mov
fiadd
push
das
cmps
fs
sbb
pop
or
(bad)
(bad)
push
sbb
adc
sbb
(bad)
jecxz
dec
dec
or
aad
sub
(bad)
(bad)
jmp
pop
stos
xor
std
adc
lods
cmp
mov
nop
loope
jo
outs
(bad)
call
inc
xchg
or
push
mov
add
pusha
xor
out
push
mov
shr
sub
(bad)
jmp
loopne
jbe
sbb
mov
sahf
mov
addr16
push
and
mov
cmp
std
pop
pusha
leave
jecxz
jl
lods
fisttp
leave
dec
mov
xchg
test
sbb
pop
push
vpaddd
(bad)
call
(bad)
out
dec
enter
data16
mov
add
push
cmp
push
arpl
(bad)
jmp
ss
pop
cs
xlat
jmp
(bad)
data16
mov
sub
mov
xchg
and
into
out
(bad)
std
push
mov
test
mov
(bad)
or
push
dec
cmc
es
(bad)
(bad)
(bad)
dec
leave
ins
and
shl
sti
and
(bad)
rcl
pusha
mov
mov
pop
cld
(bad)
dec
pop
(bad)
adc
addr16
inc
shl
mov
adc
pop
lods
lods
jmp
adc
sub
jno
and
(bad)
(bad)
jmp
push
pop
xchg
mov
rol
and
sbb
or
xor
or
dec
mov
xchg
push
stos
jle
jl
(bad)
call
in
add
adc
sahf
fwait
ins
pop
mul
jg
mov
pop
lea
mul
call
dec
outs
mov
xor
xchg
(bad)
(bad)
(bad)
call
mov
or
cmc
out
adc
pop
mov
(bad)
sub
(bad)
(bad)
(bad)
cli
jne
stos
jne
retf
dec
lods
pop
repz
(bad)
movs
and
sub
int
(bad)
(bad)
jmp
repz
ja
cmp
imul
into
popf
call
ret
nop
fdivp
cmp
jmp
rcr
cld
push
pop
jmp
pop
sub
ret
push
dec
jmp
(bad)
inc
add
xchg
adc
cmp
inc
jnp
sub
(bad)
(bad)
(bad)
inc
mov
push
mov
fcmovnbe
mov
xor
es
mov
cwde
or
(bad)
inc
push
inc
xchg
add
sub
sbb
jne
or
(bad)
mov
call
test
mov
mov
ret
inc
je
cmp
or
pop
push
inc
jno
mov
inc
xlat
les
enter
out
add
jae
pushf
repz
jmp
fisub
and
scas
clc
sbb
ficom
mov
in
es
and
cwde
add
(bad)
(bad)
jmp
cmp
outs
repz
clc
mov
fwait
in
xchg
and
rcl
leave
mov
int3
das
(bad)
(bad)
(bad)
(bad)
xchg
push
fs
sbb
inc
xor
outs
in
iret
sbb
pushf
idiv
sar
(bad)
(bad)
fmul
retf
fidivr
lock
rcr
adc
sahf
cmp
popf
gs
pop
leave
pop
pop
xchg
imul
outs
scas
jl
push
push
mov
jmp
adc
cmp
push
xchg
(bad)
call
adc
inc
inc
add
xchg
pusha
int
sub
test
mov
xor
xor
and
daa
xchg
cmps
fwait
add
pop
adc
lock
dec
popa
sub
dec
(bad)
cmp
cmp
cmp
rcl
call
mov
mov
and
retf
jl
inc
shr
std
jmp
adc
enter
jb
fcomp
xchg
bound
cmp
das
mov
lods
loope
pop
pop
mov
bound
mov
fstp
call
aam
cdq
or
push
dec
sbb
(bad)
(bad)
(bad)
or
xchg
push
fstp
dec
mov
or
dec
dec
mov
test
test
iret
(bad)
push
ins
mov
pop
mov
test
dec
clc
sti
rcl
movs
push
push
test
ficom
(bad)
(bad)
(bad)
jmp
add
dec
push
pushf
and
mov
jns
adc
and
setnp
aam
jge
(bad)
(bad)
push
mov
xlat
xchg
call
pop
sub
out
push
mov
(bad)
(bad)
(bad)
jmp
fld
retf
(bad)
dec
inc
clc
das
outs
cld
xchg
aaa
pushf
mov
jae
mov
iret
push
add
scas
xor
int
(bad)
mov
retf
ins
pop
jae
push
adc
and
and
jecxz
(bad)
push
dec
xchg
or
int
xor
icebp
jo
fmul
xchg
mov
in
adc
(bad)
(bad)
inc
pop
sbb
in
mov
push
out
add
mov
and
mov
or
out
mov
mov
jge
mov
xchg
cdq
sub
cld
pushf
xor
jmp
(bad)
jl
jl
inc
ins
xchg
cmps
xchg
push
inc
mov
push
data16
sbb
mov
(bad)
(bad)
(bad)
call
mov
mov
ins
je
push
shr
pop
imul
out
fdivrp
aam
add
iret
push
xor
jbe
sbb
aas
mov
in
jge
inc
pusha
sub
sub
stos
idiv
(bad)
inc
dec
push
es
push
jmp
pop
inc
dec
pusha
lods
call
mov
bound
lock
adc
repz
mov
push
push
sub
sbb
call
pop
mov
mov
and
jp
sub
mov
lahf
push
es
jb
and
push
jl
sub
cmps
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
jns
cmp
dec
mov
cdq
dec
loope
cli
iret
dec
push
mov
or
push
(bad)
(bad)
(bad)
jmp
inc
inc
inc
scas
push
sbb
loope
mov
add
repnz
mov
std
sbb
push
mov
or
mov
xchg
imul
aaa
adc
rcr
das
inc
jmp
(bad)
cmp
or
lods
mov
mov
mov
(bad)
(bad)
call
bound
popa
ret
into
out
mov
ins
(bad)
retf
and
out
ins
lods
pop
mov
inc
(bad)
(bad)
fbstp
mov
sub
xor
test
and
xor
lods
inc
test
cmc
pop
xor
(bad)
(bad)
inc
or
cwde
dec
push
in
mov
cmp
xor
out
sub
es
jmp
aas
mov
aas
loopne
out
scas
jne
movs
rol
pop
sbb
pop
pusha
dec
xor
ss
cld
pop
stos
lea
arpl
mov
mov
(bad)
(bad)
(bad)
push
jl
jnp
or
pop
cli
add
fnstsw
out
sbb
and
(bad)
(bad)
jmp
xchg
mul
shl
cmp
aaa
and
repnz
mov
or
xor
(bad)
(bad)
push
sbb
mov
dec
mov
pop
(bad)
sbb
xor
stc
jp
jge
xchg
(bad)
(bad)
call
inc
sbb
cmps
fcomp
(bad)
or
jne
pop
cmp
jmp
cwde
inc
jbe
add
inc
add
sar
mov
call
mov
(bad)
(bad)
call
push
fsub
cld
inc
cmps
nop
std
daa
adc
push
iret
test
into
(bad)
sub
iret
(bad)
(bad)
(bad)
(bad)
(bad)
fmul
mov
sub
adc
inc
bound
mov
and
lods
mov
cmp
aaa
cld
mov
(bad)
pop
inc
les
in
int3
int
sbb
retf
adc
adc
sar
(bad)
jmp
pusha
popa
and
clc
scas
or
daa
imul
inc
(bad)
call
in
enter
fs
in
(bad)
int3
fdivr
test
shl
(bad)
(bad)
(bad)
jmp
ja
pushf
xlat
xor
sbb
adc
inc
aam
push
nop
loopne
call
(bad)
(bad)
(bad)
sub
mov
loopne
rol
inc
jno
popf
add
cld
xchg
sub
xchg
push
push
adc
mov
call
cld
jmp
inc
aad
bound
mov
or
sbb
jecxz
out
fisttp
(bad)
fdiv
js
sti
outs
out
in
jl
mov
jg
test
jg
inc
stos
test
push
jo
ss
mov
ins
fidivr
(bad)
push
jne
xor
pop
add
and
add
sar
into
aas
xor
out
(bad)
(bad)
jmp
int
mov
test
sub
call
in
sbb
push
test
test
xor
pop
lods
pop
jge
lahf
jnp
lods
inc
sbb
(bad)
(bad)
call
(bad)
(bad)
xchg
aam
push
push
jmp
test
ss
pusha
pop
mov
(bad)
(bad)
jg
jmp
jo
inc
pop
outs
repnz
outs
pop
xlat
dec
dec
mov
sti
out
pushf
xor
jg
(bad)
(bad)
cmp
iret
mov
dec
pop
call
les
call
jmp
jae
scas
sbb
icebp
mov
ds
test
mov
aas
nop
lds
xlat
pop
in
push
ja
fs
leave
sbb
jnp
call
sbb
jg
pop
ss
dec
or
repz
in
sbb
cwde
dec
sub
fnstcw
call
sbb
ins
and
adc
mov
movs
inc
mov
repnz
dec
(bad)
(bad)
(bad)
jmp
xchg
jb
pop
sub
sti
jmp
pop
aad
xor
cli
pop
lods
xchg
int
mov
cdq
dec
(bad)
(bad)
jg
retf
mov
sbb
scas
test
mov
xor
jne
fmulp
mov
jmp
mov
loope
xor
js
ror
cmc
imul
or
fs
mov
push
ret
xchg
or
mov
inc
pop
adc
mov
jae
je
push
xor
out
iret
or
add
cwde
and
mov
inc
sub
mov
jo
(bad)
(bad)
(bad)
(bad)
call
sahf
jmp
cmps
xchg
cdq
or
push
cmp
xor
imul
cwde
(bad)
(bad)
(bad)
push
mov
dec
rcr
out
dec
loopne
xchg
ror
add
mov
cmps
(bad)
(bad)
(bad)
inc
in
sahf
popa
sbb
rcl
jp
movs
ror
retf
jne
(bad)
(bad)
push
add
rcr
mov
inc
fcomip
shr
outs
inc
and
icebp
test
(bad)
(bad)
(bad)
(bad)
cmp
outs
retf
popf
push
fist
popf
inc
add
(bad)
sti
xchg
xor
add
(bad)
(bad)
jmp
shl
ja
and
repz
arpl
push
dec
(bad)
(bad)
(bad)
call
mov
push
mov
test
lds
cld
push
sbb
inc
xchg
push
dec
mov
dec
lock
stc
and
ret
shr
sbb
retf
and
(bad)
(bad)
push
xlat
cdq
jns
imul
and
ins
pop
fwait
repz
das
(bad)
jnp
popf
iret
xchg
(bad)
dec
jmp
pop
pop
dec
pop
pop
(bad)
shl
push
mov
sti
mov
(bad)
call
mov
out
fnstsw
push
cld
int3
std
mov
inc
out
call
(bad)
fist
in
call
leave
in
mov
nop
loopne
inc
ror
(bad)
rcl
fwait
ds
pop
pop
hlt
in
xchg
imul
arpl
push
mov
int
mov
mov
adc
sbb
sbb
jno
js
call
xor
mov
xchg
mov
sbb
(bad)
or
jae
nop
jmp
(bad)
das
pop
pushf
or
daa
lods
clc
outs
call
cld
jo
icebp
ret
test
sahf
jo
push
fimul
or
cmps
add
jbe
sub
(bad)
call
sub
add
cmc
stc
stc
jns
push
adc
mov
push
adc
(bad)
(bad)
jmp
pop
movlhps
mov
cmp
push
out
or
loopne
sbb
shl
mov
add
lods
push
(bad)
pop
xchg
sar
stc
jle
(bad)
(bad)
push
(bad)
pop
xor
pop
xchg
pop
or
sbb
test
ficomp
adc
add
pop
pop
cmp
mov
xor
(bad)
mov
add
inc
enter
jne
xor
mov
mov
inc
and
(bad)
(bad)
popa
out
pop
pusha
xchg
adc
xlat
add
rcl
out
mov
mov
add
(bad)
call
pop
push
sbb
movs
aad
movs
movs
xchg
(bad)
inc
popf
leave
mov
(bad)
(bad)
jg
jns
jp
das
xchg
stos
int3
stos
or
lds
cmp
or
aaa
jp
and
or
jle
loop
(bad)
(bad)
jmp
adc
sbb
or
dec
push
push
pop
(bad)
jmp
xor
ja
push
mov
jmp
push
pushf
sub
test
mov
mov
jae
sub
movs
mov
jbe
(bad)
(bad)
inc
shl
js
adc
and
xchg
aaa
sub
mov
xchg
fsubr
fst
scas
mov
cwde
out
mov
aaa
int
imul
jecxz
lock
(bad)
(bad)
call
and
fisttp
xor
inc
pushf
leave
jmp
sbb
dec
xchg
and
jo
mov
adc
sub
scas
mov
outs
js
jmp
and
and
xchg
jle
repnz
cmp
jbe
mov
add
clc
out
popa
adc
push
jg
in
call
mov
mov
dec
add
cmp
shr
in
ins
arpl
(bad)
dec
jecxz
fcomp
sbb
fwait
sub
push
rcr
out
mov
pop
cmps
enter
cld
xor
add
fnsave
iret
mov
dec
(bad)
(bad)
mov
(bad)
ror
xchg
dec
sbb
mov
out
div
ret
mov
je
cmp
mov
test
sahf
subps
jo
(bad)
into
mov
jmp
dec
call
(bad)
(bad)
call
cdq
test
adc
mov
inc
pusha
dec
ds
inc
mov
jle
cmp
mov
test
mov
mov
jg
shl
test
push
inc
popa
sbb
(bad)
(bad)
jg
or
mov
mov
sbb
jo
loope
sub
add
(bad)
call
push
or
mov
cs
test
dec
inc
dec
and
scas
call
loopne
iret
outs
sahf
add
xchg
jge
(bad)
xchg
(bad)
call
loopne
ficomp
and
pop
jbe
pop
mov
dec
jge
sbb
cld
(bad)
(bad)
jmp
dec
cmp
jne
popf
shr
jge
xor
aam
mov
lahf
ficom
or
adc
inc
cmp
push
dec
pop
sub
mov
push
js
or
inc
sbb
lds
mov
aaa
sub
jmp
aad
jl
shl
xor
xchg
enter
clc
(bad)
(bad)
mov
inc
or
add
(bad)
cmp
loope
cmp
add
adc
cmp
jae
mov
jmp
jmp
push
(bad)
js
pop
aam
(bad)
xlat
dec
ins
dec
sub
pop
sbb
(bad)
bound
mov
xor
cld
ret
pop
mov
or
(bad)
(bad)
jmp
xchg
mov
adc
cwde
enter
and
movs
xor
mov
idiv
(bad)
out
test
sbb
xor
and
add
sbb
clc
pop
dec
(bad)
add
push
(bad)
(bad)
(bad)
(bad)
fst
jne
ds
mov
in
cmps
daa
jns
pusha
sub
mov
out
(bad)
(bad)
fwait
sti
pushf
(bad)
(bad)
(bad)
call
sbb
bound
and
loope
jmp
mov
aam
daa
push
outs
xor
fcos
(bad)
jmp
mov
fdivp
leave
fmul
aas
sbb
mov
xchg
jns
mov
dec
inc
or
inc
xchg
inc
in
xor
pop
sbb
xchg
xor
ins
into
xchg
in
test
(bad)
(bad)
dec
xlat
mov
cmp
rol
(bad)
aaa
mov
cmp
(bad)
jg
call
jecxz
repnz
xchg
cld
pop
and
push
and
inc
mov
mov
jbe
imul
and
data16
ror
fwait
(bad)
push
xchg
ss
fcom
dec
or
sub
adc
xor
xor
or
(bad)
(bad)
(bad)
jmp
cmc
iret
pusha
xor
xlat
daa
out
push
mov
jg
repz
adc
in
out
lds
fwait
call
mov
repz
ins
cmc
ret
into
xor
pop
xchg
in
mov
mov
add
xor
adc
inc
mov
(bad)
(bad)
(bad)
mov
popf
dec
cdq
xchg
push
fwait
mov
inc
(bad)
pushf
imul
nop
pushf
and
(bad)
(bad)
(bad)
call
pop
mov
mov
jmp
das
pop
mov
js
ins
dec
out
fild
fistp
mov
sub
sar
(bad)
jmp
or
cmp
out
pushf
ins
jae
lods
xor
cs
mov
mov
call
and
inc
inc
pop
dec
sbb
test
(bad)
call
ins
test
fs
shr
fwait
int3
(bad)
int3
dec
mov
mov
ja
push
retf
xchg
ds
xchg
pop
and
adc
enter
sbb
loopne
enter
mov
inc
pushf
sar
add
xor
(bad)
cmp
stos
jge
sbb
popa
imul
dec
push
and
(bad)
(bad)
(bad)
mov
or
cmp
sahf
pop
mov
cmp
cli
mov
inc
mov
dec
push
lahf
mov
popf
jmp
inc
inc
cmp
adc
movs
push
das
cmc
mov
into
test
push
scas
jmp
xor
inc
shl
fcos
(bad)
(bad)
(bad)
sti
push
inc
cmp
imul
(bad)
jne
popa
xor
ss
out
inc
rcpps
scas
(bad)
call
push
mov
push
jmp
(bad)
loopne
xor
jmp
mov
and
mov
(bad)
(bad)
(bad)
jmp
scas
mov
ds
(bad)
lock
mov
mov
fist
fdivrp
out
cmps
aaa
xchg
test
(bad)
call
data16
cmc
cmc
mov
scas
pop
inc
xor
js
pop
push
push
test
(bad)
mov
lea
pop
icebp
adc
cmp
sbb
(bad)
sbb
sar
push
retf
push
push
xchg
hlt
(bad)
(bad)
dec
data16
push
pop
gs
ins
cmp
enter
sbb
fisttp
adc
clc
jle
aam
cmp
(bad)
jno
pop
(bad)
(bad)
(bad)
jmp
stos
adc
rcl
jo
sbb
ficom
cli
in
jmp
jmp
mov
push
cmc
(bad)
call
and
mov
inc
je
iret
dec
aad
jb
sahf
xchg
repz
es
test
dec
and
(bad)
jg
push
rol
cmp
jl
xchg
shr
rcr
sar
(bad)
dec
lock
mov
jbe
mov
inc
jg
mov
mov
cmps
lock
(bad)
xor
inc
outs
pop
lods
leave
mov
add
call
cmp
popa
push
push
xchg
cli
push
add
outs
push
mov
xchg
movs
add
out
or
(bad)
jmp
test
mov
scas
retf
(bad)
push
push
sbb
outs
aad
call
int3
cwde
lea
pop
cld
jno
xchg
retf
xchg
jecxz
or
cmp
(bad)
(bad)
(bad)
jmp
sahf
ja
xchg
cdq
ja
pop
imul
pop
sbb
xchg
cs
in
enter
jmp
add
or
cmp
outs
outs
cs
mov
inc
sub
xor
mov
js
lock
in
test
(bad)
inc
add
mov
jg
in
lahf
pop
fisub
out
and
je
sub
xchg
(bad)
(bad)
jmp
bound
jp
jne
int3
xchg
pop
(bad)
push
xor
je
pop
sbb
loop
(bad)
(bad)
call
ficomp
push
int
repz
es
or
jnp
inc
loopne
adc
(bad)
(bad)
jmp
adc
sbb
dec
dec
sbb
test
aad
cmps
(bad)
mov
ret
xchg
or
stos
or
lock
(bad)
out
add
lea
mov
xor
(bad)
(bad)
(bad)
push
adc
jmp
mov
adc
out
mov
xor
mov
int
fld
dec
mov
push
mov
aam
dec
xchg
inc
js
inc
push
adc
jo
lock
mov
pop
test
mov
mov
jp
rcr
leave
and
js
in
mov
js
idiv
iret
repz
cmp
(bad)
in
sub
dec
dec
retf
out
pop
es
test
faddp
fisttp
push
bound
(bad)
(bad)
(bad)
call
xchg
pop
sub
and
aad
sub
popa
sbb
jl
jecxz
add
adc
(bad)
(bad)
(bad)
mov
mov
into
and
mov
shl
hlt
lock
es
push
cmp
mov
scas
mov
outs
clc
(bad)
cld
es
addr16
xor
mov
mov
adc
push
sub
(bad)
(bad)
(bad)
fdivr
lods
out
sbb
xchg
mov
jmp
sahf
mov
sub
sub
fidiv
call
xor
fisub
push
loopne
push
inc
call
arpl
(bad)
push
sub
mov
cs
pop
in
pop
retf
lods
lahf
sti
sbb
adc
xor
add
jmpw
jg
sbb
aam
scas
jle
inc
adc
leave
mov
xchg
(bad)
jbe
or
sbb
push
test
and
bound
or
add
sbb
push
xchg
cmps
or
sub
push
fmul
or
cmp
iret
inc
mov
(bad)
jmp
cli
addr16
popf
mov
fdivr
ins
mov
xlat
iret
das
pop
out
mov
cmps
cmc
dec
cli
fild
mov
xor
sub
cs
(bad)
jmp
sahf
addr16
mov
stc
dec
(bad)
sub
shr
mov
(bad)
dec
aad
push
jo
pop
mov
(bad)
call
ds
jecxz
mov
iret
xchg
in
repnz
out
jp
push
or
add
clc
out
dec
fnstsw
outs
add
jg
inc
or
cmp
xor
mov
pop
imul
fmul
and
or
(bad)
(bad)
(bad)
jmp
adc
adc
cmp
add
cwde
frstor
fidivr
(bad)
pop
cli
mov
add
mov
loop
sbb
add
fsubr
fnsave
inc
icebp
push
jmp
call
or
mov
push
sbb
dec
mov
sub
mov
xchg
dec
ds
(bad)
call
pop
ret
inc
retf
(bad)
cmp
sar
mov
popf
xchg
add
jnp
lock
xor
add
jmp
push
add
sub
jo
xchg
jmp
mov
sub
push
push
repz
gs
mov
(bad)
(bad)
jmp
cmp
mov
clc
mov
and
popf
repnz
pop
xor
pop
mov
int
(bad)
inc
fs
add
(bad)
fimul
stc
out
not
jmp
cli
cmp
mov
push
mov
mov
pop
fsub
stos
inc
and
pop
push
ins
mov
retf
repz
pop
adc
jns
out
jp
call
cld
ret
nop
cmps
test
add
cmps
rcr
fnsave
call
clc
hlt
jns
pop
inc
push
dec
cmp
std
push
cmp
push
inc
mov
or
jmp
enter
xlat
jmp
call
outs
clc
mov
(bad)
ss
adc
add
ds
and
inc
lahf
adc
cmp
lock
adc
add
and
adc
lds
das
fisub
jg
mov
ret
test
nop
pop
mov
sub
mov
and
dec
xchg
sar
push
test
fstp
pushf
mov
sub
pop
sub
push
(bad)
(bad)
(bad)
jmp
adc
(bad)
jmp
(bad)
pop
lods
cmc
jb
adc
mov
ficomp
jmp
adc
movs
(bad)
(bad)
inc
movs
jbe
out
sub
pop
in
aam
call
(bad)
jmp
pusha
inc
scas
(bad)
call
movs
xor
add
and
scas
repnz
cli
(bad)
inc
not
cdq
out
mov
nop
scas
out
jnp
clc
sub
push
(bad)
jmp
cdq
hlt
mov
fucom
pop
xlat
xor
mov
pop
cmps
mov
call
in
(bad)
pop
cmps
and
cld
mov
mov
pop
retf
je
xor
sub
(bad)
(bad)
call
xor
ret
daa
xor
mov
push
mov
dec
xchg
dec
sahf
dec
mov
(bad)
inc
mov
lahf
inc
push
es
rcr
sbb
(bad)
call
jmp
inc
xor
ins
jo
sbb
and
fidivr
std
cmp
(bad)
(bad)
(bad)
call
aaa
push
xor
mov
sub
cmc
push
mov
add
inc
aad
les
cs
inc
pop
hlt
(bad)
xchg
xor
xchg
(bad)
mov
fs
(bad)
jg
mov
adc
mov
mov
jge
and
mov
(bad)
(bad)
jmp
lock
mov
cmp
ret
adc
enter
test
out
pushf
xor
adc
(bad)
fild
ret
add
addr16
popa
bnd
sbb
push
repnz
(bad)
(bad)
(bad)
inc
(bad)
pop
sbb
test
jbe
sbb
ss
and
(bad)
out
mov
fidivr
call
or
ss
movs
popa
inc
adc
scas
daa
stos
sbb
sub
popf
inc
mov
jmp
ror
ins
or
fld
dec
xor
popa
ret
add
mov
inc
pop
jmp
adc
mov
xor
stos
sbb
mov
sub
mov
pop
sar
jecxz
stos
mov
sar
(bad)
call
jmp
fdivrp
xchg
dec
mov
pop
loop
in
or
shr
(bad)
inc
fiadd
pop
cli
adc
ds
je
jne
adc
add
ret
stos
mov
jne
add
lahf
loopne
dec
sub
inc
lock
add
pop
mov
pop
mov
cmp
xor
adc
cwde
or
mov
or
cld
cli
(bad)
jle
shl
aaa
dec
adc
dec
into
adc
ins
xor
cwde
lock
in
xor
add
jg
bound
sar
inc
and
and
jecxz
cmp
cmp
dec
push
lods
push
inc
in
inc
hlt
cmovnp
or
add
fisttp
std
or
outs
ja
xchg
add
xor
dec
(bad)
(bad)
in
pop
pop
ins
push
push
sbb
cmp
sub
mov
ficom
cld
(bad)
push
shl
mov
sbb
push
xor
(bad)
(bad)
jmp
sbb
stos
das
adc
les
sub
xchg
push
or
mov
xor
mov
call
out
dec
data16
ror
(bad)
cld
neg
lahf
(bad)
cmp
(bad)
(bad)
dec
cmp
pop
and
daa
mov
cli
call
push
aad
(bad)
(bad)
(bad)
(bad)
clc
dec
(bad)
shr
repnz
cwde
or
sub
push
es
sub
(bad)
cli
call
(bad)
dec
cmp
dec
cmp
jmp
(bad)
push
mov
scas
jmp
lock
mov
jae
scas
sbb
pop
and
(bad)
inc
xchg
out
(bad)
mov
dec
adc
shl
lock
sbb
(bad)
dec
lock
stos
adc
and
mov
iret
jbe
mov
loopne
iret
sub
push
cli
xchg
xchg
dec
and
mov
push
inc
xchg
inc
mov
pop
mov
xchg
and
(bad)
(bad)
jmp
xor
mov
lea
mov
inc
dec
inc
pop
pop
fnsave
(bad)
addr16
das
xchg
lock
fwait
adc
xchg
pop
jno
rcr
sbb
(bad)
call
inc
inc
enter
add
push
aad
xor
loope
xlat
xor
inc
adc
dec
rcr
push
sbb
enter
jb
mov
aaa
(bad)
(bad)
(bad)
(bad)
out
jno
out
or
cmp
push
inc
leave
ucomiss
jp
fisubr
mov
and
(bad)
(bad)
(bad)
call
(bad)
push
xor
xchg
push
jbe
jge
push
aam
test
inc
(bad)
scas
xor
inc
fist
dec
sbb
adc
repz
(bad)
mov
retf
test
dec
shl
shl
pop
jae
(bad)
(bad)
dec
outs
adc
xlat
lods
cmc
push
mov
mov
xlat
sub
mov
(bad)
(bad)
(bad)
jmp
into
mov
or
imul
sti
pop
arpl
xchg
mov
loop
mov
sub
add
(bad)
(bad)
(bad)
cmp
cmp
adc
icebp
adc
jne
sub
in
pushf
mov
jg
(bad)
(bad)
jl
mov
hlt
int
jmp
jmp
dec
mov
(bad)
(bad)
(bad)
call
xor
and
jp
mov
imul
mov
jns
push
loope
(bad)
(bad)
inc
pop
shl
(bad)
sub
and
ss
retf
in
lock
jl
cwde
js
inc
sbb
mov
jle
cli
cs
lahf
(bad)
mov
or
jecxz
loopne
adc
lock
mov
dec
(bad)
hlt
stc
cld
mov
jb
sub
das
add
(bad)
inc
aas
push
adc
scas
dec
test
scas
mov
out
add
retf
jecxz
gs
fmul
mov
(bad)
(bad)
fbld
aas
dec
or
xchg
mov
sbb
adc
bound
and
repnz
in
(bad)
dec
dec
cmp
push
push
push
(bad)
bound
sahf
popa
jnp
xor
(bad)
(bad)
(bad)
jmp
sub
shr
cmp
xor
or
pop
mov
mov
jg
(bad)
dec
dec
pop
sub
data16
outs
dec
out
mov
(bad)
arpl
data16
add
std
sub
retf
xchg
cmp
movs
(bad)
jmp
and
call
loop
test
mov
add
adc
scas
aam
mov
(bad)
and
push
add
les
xor
es
das
mov
loop
out
xor
mov
jge
cli
xchg
xchg
(bad)
cmp
fisttp
(bad)
(bad)
dec
mov
xlat
add
add
lahf
add
test
cmp
js
aad
stos
(bad)
(bad)
(bad)
jmp
ret
fcmovnbe
push
in
mov
sbb
movs
dec
std
sahf
push
xchg
jle
ins
imul
imul
mov
int3
and
and
mov
mov
sub
call
and
add
jp
jb
mov
inc
push
arpl
(bad)
jg
imul
mov
cmp
jg
jb
jo
clc
call
inc
adc
xchg
out
push
push
cwde
pop
jns
outs
imul
in
(bad)
(bad)
(bad)
jmp
minps
mov
(bad)
mov
ins
or
loopne
mov
and
dec
add
fld
mov
adc
adc
(bad)
(bad)
call
(bad)
lahf
and
fwait
icebp
dec
das
dec
les
(bad)
(bad)
jno
xor
fs
loop
push
mov
(bad)
and
sbb
sub
loope
repz
rcl
lock
dec
lea
jmp
je
push
cmp
adc
call
(bad)
fbld
stos
cmp
xlat
mov
jle
leave
in
pop
les
(bad)
jmp
or
or
clc
mov
or
addr16
outs
arpl
inc
js
gs
pop
adc
adc
(bad)
cmp
(bad)
(bad)
call
sbb
jno
lock
jl
add
xchg
scas
pop
push
rcr
jae
out
or
retf
sub
jp
popa
int3
in
cld
inc
clc
lds
rcl
bnd
mov
dec
mov
les
cli
lock
ins
jnp
sar
lods
and
outs
(bad)
(bad)
(bad)
jg
cld
data16
push
sbb
jmp
inc
imul
push
xor
and
(bad)
(bad)
dec
stos
addr16
andps
xchg
call
cmp
test
(bad)
(bad)
push
and
xchg
call
not
in
jmp
dec
(bad)
in
cli
add
push
jmp
sub
mov
adc
scas
jae
xchg
imul
stos
xchg
aas
add
cmp
pusha
sbb
call
cmp
push
cmp
or
pop
jae
xchg
mov
add
call
pop
sbb
clc
je
dec
dec
cmp
fadd
pop
nop
mov
push
call
cld
jg
ss
and
cmp
xor
das
xor
rcr
sub
xor
xor
or
rcr
shl
mov
rol
dec
imul
and
dec
mov
gs
push
pop
and
dec
xchg
mov
stos
fdivr
outs
stos
and
out
or
ds
xor
or
and
imul
(bad)
sbb
les
jmp
inc
cmp
cmp
gs
aad
fwait
ins
(bad)
fild
ds
xor
push
xor
cmp
xor
xor
or
lods
sub
mov
xor
lods
xor
xchg
ficomp
or
(bad)
sbb
cwde
test
outs
fbstp
cmp
cmps
xor
bound
sub
shr
bound
cmp
arpl
mov
ins
pusha
mov
pop
mov
int
jae
inc
inc
cmp
mov
xor
inc
inc
ror
pop
push
inc
ss
xor
inc
cmp
sub
xor
dec
ins
mov
lods
(bad)
adc
inc
movs
movs
sbb
jbe
outs
sbb
or
push
ror
imul
nop
xor
push
cmp
sbb
mov
rol
shr
aad
adc
push
xor
test
and
pusha
test
mov
fadd
sub
mov
mov
addr16
stos
ss
ds
mov
cmp
imul
jge
push
leave
add
mov
dec
mov
add
mov
pop
ins
mov
adc
das
jno
inc
mov
mov
inc
xor
or
mov
cmp
popa
test
jge
popa
sub
sub
in
push
add
sub
imul
mov
xor
(bad)
pop
pop
leave
ins
jne
aaa
fcmovu
jae
call
jne
and
add
enter
mov
imul
shr
stos
push
jno
xor
and
mov
das
push
xor
imul
adc
jae
test
add
inc
adc
sub
and
and
adc
mov
or
lea
jnp
jg
push
ret
jle
arpl
dec
push
jp
add
add
int
jne
jmp
pop
lds
jg
imul
fnstsw
push
jne
pop
lock
mov
cmp
(bad)
(bad)
(bad)
jmp
movs
or
sub
and
mov
mov
sub
popf
jno
(bad)
(bad)
inc
retf
sbb
sbb
pop
inc
inc
inc
test
cmp
lods
or
dec
pop
dec
xlat
xor
push
jl
call
inc
(bad)
pop
lahf
out
cmps
dec
lahf
daa
cmp
sti
retf
(bad)
(bad)
(bad)
(bad)
sti
sahf
jae
sbb
dec
pop
and
lea
inc
mov
or
(bad)
(bad)
jg
cwde
mov
cmp
inc
aam
mov
mov
(bad)
jmp
or
jo
and
adc
mov
adc
lds
sar
sti
pop
lock
int3
or
sahf
adc
dec
or
into
sbb
xchg
jg
vsubps
call
and
push
pushf
mov
adc
xor
inc
mov
dec
(bad)
(bad)
rol
dec
xor
xor
cwde
sbb
mov
(bad)
call
enter
mov
xchg
push
int3
or
and
das
movs
fdivr
out
mov
and
dec
les
or
fistp
push
inc
(bad)
popf
aaa
pmullw
add
dec
icebp
mov
push
dec
rol
pusha
pop
movs
dec
push
cmovnp
xchg
test
cs
aam
cld
repz
push
pop
in
mov
sbb
mov
enter
(bad)
(bad)
(bad)
push
mov
ret
stc
xor
stos
mov
in
cmp
and
test
jnp
xchg
(bad)
(bad)
push
xchg
push
pop
jmp
imul
and
or
cmp
or
and
jo
dec
sbb
pushf
(bad)
push
ja
adc
daa
bound
mul
adc
sub
(bad)
(bad)
(bad)
(bad)
sti
imul
pushw
loope
jp
bound
out
jg
or
aad
scas
leave
sbb
(bad)
dec
dec
xlat
arpl
repz
mov
adc
mov
mov
lahf
xchg
inc
lsl
movs
ror
(bad)
(bad)
inc
mov
jge
nop
cmp
lock
xchg
hlt
mov
mov
lods
or
ret
jbe
adc
(bad)
(bad)
inc
inc
xchg
inc
data16
les
pop
out
imul
or
mov
cli
jle
(bad)
retf
sub
push
xlat
fmul
jnp
call
sbb
stc
adc
stos
or
xor
inc
push
(bad)
(bad)
(bad)
jmp
or
push
sub
pusha
ror
icebp
aad
sub
adc
lea
xchg
(bad)
(bad)
(bad)
jmp
xor
push
fwait
icebp
rol
outs
xlat
adc
jbe
out
call
aas
cs
icebp
out
sub
push
pop
dec
adc
in
aam
or
dec
leave
sbb
dec
das
push
or
(bad)
(bad)
(bad)
jg
in
jno
mov
mov
lahf
into
into
cmp
aaa
(bad)
ficom
daa
jmp
adc
and
cli
mov
icebp
enter
mov
(bad)
(bad)
(bad)
(bad)
push
and
mov
(bad)
jge
xchg
sub
(bad)
inc
sub
pop
jo
(bad)
(bad)
jmp
ret
jle
xor
dec
fwait
push
cwde
xor
sub
les
add
mov
sbb
ja
or
pop
lock
lahf
pop
cld
(bad)
inc
mov
iret
mov
mov
pop
push
inc
movs
call
jno
jmp
xchg
cli
pop
stos
fcomip
fwait
call
pop
out
stos
jecxz
(bad)
(bad)
jmp
add
inc
shl
hlt
out
dec
pop
adc
pop
jle
push
sti
fdivr
out
and
fidivr
ins
(bad)
jmp
out
pmulhw
leave
mov
inc
mov
mov
pushf
shl
jbe
adc
mov
cmp
in
pusha
inc
(bad)
(bad)
jmp
jle
add
mov
aad
adc
(bad)
pop
jecxz
addr16
cld
call
jg
ja
(bad)
retf
ret
push
add
sub
push
jo
adc
not
std
inc
mov
je
xlat
sbb
ja
cmp
mov
aas
xchg
jecxz
xchg
mov
jl
xchg
adc
shl
push
adc
ror
outs
cli
jg
inc
inc
jo
inc
add
or
mov
add
adc
push
push
pusha
neg
fwait
rcl
pop
and
jns
loope
cmps
adc
(bad)
call
mov
pop
sar
not
iret
mov
mov
dec
call
pushf
gs
xor
lds
aad
nop
sub
loope
iret
and
jle
mov
(bad)
push
mov
ds
test
mov
pop
xchg
retf
into
sti
pop
nop
sbb
or
cdq
out
call
jp
fsubr
jo
cdq
pop
jmp
sub
loop
cmps
popf
jae
popf
pop
(bad)
call
cld
in
sbb
push
mov
mov
add
in
inc
lods
popf
jg
scas
(bad)
(bad)
(bad)
push
mov
pop
inc
lods
adc
nop
sub
pop
xchg
or
addr16
clc
adc
or
(bad)
inc
repnz
cmps
add
jns
outs
lods
fisubr
mov
add
push
jl
pop
out
fs
and
inc
les
div
push
(bad)
(bad)
jnp
aas
xlat
clc
cmp
push
jle
adc
inc
inc
sbb
and
cmp
ficomp
loope
ficomp
cwd
mov
mov
jg
stos
or
dec
clc
add
add
pop
pop
scas
mov
ins
add
lods
repz
(bad)
adc
xor
outs
(bad)
(bad)
jmp
fstp
pusha
or
out
push
cmp
xor
cmp
xor
std
js
adc
dec
(bad)
call
enter
pop
call
ins
repz
pop
inc
pop
mov
(bad)
call
or
pop
cmp
(bad)
cmp
ins
test
add
jmp
sbb
icebp
pusha
loopne
in
and
lea
(bad)
jmp
dec
jbe
mov
sar
xchg
in
test
je
pop
jb
mov
inc
adc
sbb
xor
sbb
xor
sbb
jns
cmp
lods
push
push
stos
jbe
push
sbb
(bad)
(bad)
mov
add
push
jmp
sbb
retf
mov
xchg
sbb
mov
ins
int
outs
jo
sub
dec
(bad)
in
imul
(bad)
and
xor
loop
into
lahf
pop
mov
ds
push
pop
and
inc
lods
int
(bad)
inc
into
in
out
mov
adc
xchg
icebp
mov
pop
out
or
xchg
dec
pusha
pop
(bad)
pusha
arpl
mov
stc
repz
cs
(bad)
mov
ins
jo
cmp
fdivr
inc
push
or
cli
(bad)
enter
ins
dec
imul
fadd
dec
or
sbb
test
iret
scas
out
cld
stc
mov
push
loop
mov
std
std
(bad)
(bad)
jmp
push
dec
pop
xor
loop
mov
jns
or
(bad)
mov
test
scas
vfrczps
test
ja
ret
mov
mov
jae
(bad)
(bad)
jmp
loope
es
mov
push
ret
test
pusha
in
mov
adc
pop
lea
fsub
jmp
sti
out
pop
xchg
sub
push
push
ret
inc
retf
lahf
repz
push
xchg
add
lods
inc
xchg
dec
add
(bad)
(bad)
std
jmp
(bad)
push
jne
ret
mov
jmp
test
shr
and
mov
sub
in
das
dec
xor
dec
push
xlat
cmp
adc
shr
jno
enter
stos
ret
lods
mov
jmp
inc
test
mov
push
jb
div
mov
mov
outs
adc
cs
xchg
and
pop
aaa
cmp
and
stos
ins
fimul
inc
in
call
push
ins
cwde
mov
mov
inc
call
cmp
loop
aaa
icebp
popa
(bad)
cmp
cmp
sub
in
ds
inc
call
(bad)
(bad)
jmp
mov
adc
pop
push
pop
cmps
retf
lea
xchg
sbb
jno
cmp
cdq
fcomp
(bad)
(bad)
(bad)
push
mov
fiadd
mov
es
fwait
out
jl
jns
ret
icebp
scas
mov
(bad)
(bad)
(bad)
jp
and
int
shl
je
popa
out
pop
(bad)
and
push
mov
pop
pop
mov
(bad)
(bad)
(bad)
dec
mov
sub
stos
mov
out
call
cmp
test
ja
(bad)
in
push
(bad)
jmp
fwait
cdq
or
jle
adc
cmp
mov
push
jns
das
mov
mov
xor
stos
xchg
js
add
fsubr
clc
fisttp
lahf
xor
stos
add
sbb
and
push
adc
lods
into
sbb
ret
fcmovnbe
mov
adc
xlat
(bad)
cli
pop
ss
fcom
outs
cmp
(bad)
(bad)
(bad)
(bad)
cli
sbb
push
lahf
icebp
ror
fidivr
mov
add
sbb
jg
(bad)
jmp
scas
test
rcr
mov
shl
outs
cli
xchg
jmp
loop
pop
in
xlat
aas
addr16
sbb
fdivr
add
retf
pushf
xchg
(bad)
dec
inc
cdq
dec
xchg
pop
xor
xor
cmp
and
dec
fdivr
inc
or
mov
aam
mov
xor
pop
adc
pop
mov
inc
add
sub
jo
add
(bad)
(bad)
jmp
fisubr
and
neg
cmc
dec
dec
inc
pop
or
and
inc
je
movs
adc
sbb
in
pop
movs
daa
jmp
pushf
adc
bound
test
dec
pop
test
lods
ficom
movs
fwait
sub
dec
inc
jne
mov
sub
adc
iret
mov
jb
cmps
loopne
fwait
and
dec
(bad)
(bad)
(bad)
inc
icebp
call
push
loope
and
pop
push
imul
add
mov
inc
xchg
(bad)
(bad)
push
sbb
fldenv
into
test
dec
push
enter
xor
stos
lock
or
and
hlt
xor
iret
jnp
mov
(bad)
or
sbb
(bad)
jmp
cld
nop
sub
sbb
mov
lahf
jg
sbb
mov
in
nop
and
push
dec
out
addr16
inc
js
jmp
adc
jp
(bad)
call
adc
cdq
pop
mov
rcl
movs
pop
jle
repnz
shr
(bad)
(bad)
inc
loop
dec
mov
scas
imul
sbb
mov
cmp
mov
(bad)
(bad)
jmp
out
xchg
in
pop
out
mov
(bad)
ret
out
xchg
in
sar
(bad)
jge
arpl
sahf
fld
rol
and
(bad)
adc
enter
(bad)
(bad)
(bad)
push
stos
ja
jmp
and
jge
cmps
out
and
push
xchg
clc
(bad)
inc
jmp
jns
pop
adc
aas
scas
fwait
popf
sbb
cld
call
clc
in
mov
fisttp
sbb
xor
test
(bad)
lods
pop
scas
out
push
pusha
mov
popa
shr
hlt
cli
outs
and
imul
pop
xchg
sbb
ficomp
aas
(bad)
call
fsubr
fcmovnu
push
pusha
imul
and
enter
cmp
test
jo
sub
(bad)
(bad)
(bad)
call
test
sti
mov
js
test
and
or
cmp
pop
nop
cdq
fs
inc
mov
jmp
xor
pusha
in
test
pop
out
dec
dec
ss
test
adc
push
arpl
enter
push
or
xchg
les
sbb
cld
push
adc
fwait
pop
fld
repz
ds
cmp
(bad)
jmp
ins
sub
(bad)
xor
pop
enter
(bad)
and
(bad)
(bad)
(bad)
dec
and
imul
sbb
stc
scas
(bad)
retf
loope
gs
adc
shl
xchg
mov
dec
pop
mov
inc
and
jno
pop
sub
cmp
adc
fs
pop
cli
hlt
xor
inc
cmp
imul
(bad)
(bad)
jmp
pop
sahf
mov
or
xor
loop
daa
xchg
adc
adc
ins
pop
xor
(bad)
(bad)
push
mov
xor
popf
sub
(bad)
jmp
jno
in
sub
pop
ins
sbb
push
jle
xlat
out
pop
fwait
lods
test
ins
mov
(bad)
(bad)
(bad)
stc
add
cmp
push
mov
arpl
mov
fbld
jg
dec
outs
ins
sbb
cld
int3
sbb
jns
dec
add
cld
(bad)
jg
pop
push
push
sub
push
js
adc
aaa
adc
mov
and
cmp
ins
test
fisubr
inc
dec
adc
(bad)
loope
cmp
(bad)
(bad)
(bad)
call
sahf
pop
jb
xchg
movs
jnp
lods
mov
push
sub
or
sub
pusha
fimul
(bad)
in
cwde
push
pop
rol
imul
push
push
loop
jmp
cmps
pop
(bad)
xor
pushf
cs
push
adc
inc
adc
addr16
out
mov
xchg
and
iret
dec
dec
les
lods
(bad)
pop
pop
inc
push
(bad)
(bad)
(bad)
mov
rcr
and
or
div
cmp
adc
mov
test
stos
(bad)
sti
(bad)
(bad)
inc
adc
jno
in
sub
popa
ret
in
mov
lds
sbb
push
xchg
stc
ret
pop
mov
fdivr
mov
inc
sub
ins
and
push
jl
cmps
add
cmp
(bad)
inc
jecxz
mov
dec
xchg
or
mov
scas
aas
jp
scas
sbb
xor
mov
jmp
mov
call
das
(bad)
jle
push
pop
mov
xchg
gs
add
fucomip
stos
mov
in
(bad)
(bad)
call
jns
cmp
ja
(bad)
out
push
sub
js
(bad)
mov
ret
jbe
mov
or
loopne
es
(bad)
(bad)
(bad)
push
ja
ss
cmps
add
and
scas
sub
xor
sub
jle
(bad)
(bad)
(bad)
inc
arpl
(bad)
popf
test
cmp
les
dec
push
out
(bad)
lods
add
push
jmp
out
aam
cmc
(bad)
and
xor
xchg
pop
ins
ficom
pop
sti
dec
(bad)
stc
mov
cwde
adc
mov
das
nop
lock
pop
pop
ja
shl
neg
(bad)
(bad)
push
push
push
mov
dec
cmp
add
retf
sub
jl
ds
repnz
fcom
lock
cli
or
mov
xlat
jle
cmp
or
clc
(bad)
jmp
push
inc
(bad)
inc
lock
mov
mov
test
(bad)
jmp
call
pop
(bad)
push
xchg
loopne
mov
in
add
push
mov
(bad)
(bad)
(bad)
mov
fbstp
jg
push
mov
out
scas
dec
shl
js
in
hlt
call
call
cmp
test
jg
adc
mov
rcr
mov
leave
cmp
cli
outs
push
push
mov
imul
inc
popf
std
jle
scas
cmps
data16
lock
mov
cld
mov
push
cmp
jge
in
lea
inc
outs
xor
lods
arpl
fstp
adc
mov
(bad)
ins
pusha
adc
scas
cli
lds
test
call
inc
jge
or
mov
(bad)
call
or
gs
adc
jns
fldlg2
mov
xlat
rcr
neg
jbe
sbb
(bad)
(bad)
jg
push
add
js
or
rcr
and
push
xor
and
xlat
ret
imul
push
adc
outs
stos
ret
and
inc
xor
rcr
add
loope
jmp
lock
rcl
mov
cli
jp
mov
stos
mov
(bad)
mov
jle
sbb
sbb
jmp
enter
fwait
or
dec
and
pop
icebp
sbb
and
jmp
inc
aas
pop
mov
and
nop
pop
mov
xchg
pop
into
and
push
jo
aaa
adc
outs
and
add
das
lods
hlt
cmps
mov
retf
stos
fs
outs
mov
or
xor
mov
dec
mov
push
sbb
shr
stos
jg
xlat
push
xor
cmp
adc
retf
test
sti
mov
stos
in
fwait
inc
adc
sub
pushw
push
nop
iret
popa
adc
jp
xor
fidiv
add
fimul
cs
mov
or
sbb
es
in
ins
mov
(bad)
mov
sub
adc
ret
cli
mov
jg
pop
mov
or
push
mov
add
loop
outs
fdivr
repnz
xor
cmp
xor
cmp
xor
lea
(bad)
mov
xor
data16
test
sub
arpl
xor
jg
xor
pop
inc
inc
cld
call
inc
cmp
aaa
inc
inc
xor
xor
inc
cmp
aaa
inc
nop
or
xchg
pop
cmp
dec
movs
(bad)
mov
test
test
push
xor
stos
(bad)
jge
test
push
leave
adc
add
inc
repnz
cmp
or
adc
sub
push
cmp
xor
pop
ja
adc
xlat
jle
pop
pusha
cmp
mov
out
mov
(bad)
push
xor
rcr
fsub
mov
add
fstp
lds
and
add
inc
lea
idiv
arpl
jne
or
repz
pop
out
cmp
cmp
neg
mov
add
and
sahf
aas
jp
sbb
nop
(bad)
(bad)
mov
adc
push
sbb
dec
and
adc
push
imul
jmp
mov
inc
mov
sub
and
and
call
cmp
push
in
add
sbb
std
in
imul
sbb
jnp
ss
add
outs
(bad)
and
sti
xor
mov
mov
cvttps2pi
add
xchg
ss
(bad)
mov
ss
pop
sbb
adc
inc
(bad)
(bad)
jmp
or
sbb
inc
test
sbb
movs
jl
sub
mov
(bad)
and
(bad)
(bad)
(bad)
inc
mov
fbstp
pop
add
inc
fdivr
cmps
fcmove
pop
test
add
(bad)
out
fdivr
inc
bound
push
xchg
in
clc
pusha
mov
in
cmp
sbb
xlat
cdq
dec
xor
ins
add
jne
jmp
mov
adc
sub
xchg
call
mov
icebp
lds
(bad)
(bad)
push
cmps
in
rol
pop
mov
leave
mov
sub
mov
mov
ins
gs
aaa
cmp
fisttp
sti
dec
or
iret
outs
outs
clc
bound
jmp
stos
and
push
mov
and
js
sub
call
ss
(bad)
(bad)
(bad)
dec
out
adc
and
pushf
mov
aad
cmp
inc
jbe
in
(bad)
(bad)
in
jmp
pop
push
imul
mov
cmc
sbb
mov
div
cmp
ret
repz
(bad)
(bad)
(bad)
dec
cmp
repz
xchg
and
test
lods
xchg
sub
push
xchg
xchg
popf
and
rcl
imul
rcl
and
ret
popf
out
or
movs
nop
push
jmp
cmc
push
pop
sub
btr
add
sbb
(bad)
(bad)
inc
xor
jg
xchg
cmp
retf
fiadd
jae
push
mov
call
xchg
fdivp
scas
pop
adc
(bad)
(bad)
call
sbb
push
adc
mov
popf
xchg
cmp
cmp
cmp
inc
mov
mov
xchg
out
(bad)
pusha
dec
call
cmc
fbld
lahf
jns
stc
psrlw
push
xchg
movs
(bad)
(bad)
call
out
jl
inc
retf
test
xor
hlt
dec
rol
cmp
dec
aaa
pushf
pop
mov
mov
ds
add
dec
adc
mov
jae
adc
jmp
test
rol
ins
stos
mov
dec
adc
arpl
xchg
xchg
mov
cmp
(bad)
(bad)
fcomip
pusha
(bad)
iret
sub
fdiv
inc
jecxz
loopne
mov
ret
addr16
test
ins
icebp
jle
push
(bad)
(bad)
(bad)
push
iret
aam
mov
fnstsw
jae
lahf
cmps
jmp
xchg
mov
push
dec
dec
cmps
cmps
and
or
push
cmp
bound
je
adc
xor
push
test
lock
(bad)
(bad)
inc
enter
out
push
mov
cli
jns
cmps
cmps
(bad)
push
enter
jecxz
hlt
mov
push
xor
cld
mov
(bad)
fisttp
jecxz
jle
sbb
pushw
jmp
or
ja
fisttp
pop
call
sahf
test
ins
(bad)
inc
adc
or
(bad)
inc
sub
stos
fcomp
or
inc
daa
call
neg
pop
xor
or
(bad)
dec
sub
or
mov
cmp
dec
mov
push
scas
call
mov
mov
adc
ins
and
popf
add
ins
imul
repz
icebp
call
int
in
mov
xchg
lock
sub
mov
mov
inc
(bad)
fist
arpl
daa
sbb
cli
ins
(bad)
jp
push
pop
dec
xor
loope
cmp
outs
fdivr
sub
mov
out
in
sub
cmp
es
retf
shl
jo
outs
(bad)
(bad)
jle
sbb
std
(bad)
in
sbb
imul
sbb
xor
(bad)
(bad)
(bad)
ficomp
ret
cmps
jmp
mov
mov
xlat
xchg
ss
outs
xor
shl
retf
dec
(bad)
jmp
sbb
xchg
push
movs
jp
icebp
cmc
dec
mov
les
(bad)
clc
(bad)
(bad)
call
pop
out
mov
cli
sti
push
inc
repz
cli
and
push
xor
pusha
dec
or
dec
xor
inc
in
mov
mov
mov
push
pop
cli
mov
or
push
(bad)
mov
stos
push
call
or
jg
sub
jne
add
(bad)
mov
movs
push
add
imul
js
jnp
and
dec
test
shl
mov
pop
(bad)
(bad)
call
xchg
popf
and
add
icebp
rcr
cdq
fimul
mov
(bad)
retf
xchg
stos
push
(bad)
call
pop
or
mov
jle
mov
rep
into
(bad)
mov
(bad)
(bad)
(bad)
out
fstp
or
mov
push
(bad)
cs
outs
cmps
add
cdq
lahf
(bad)
(bad)
(bad)
(bad)
cmp
jg
lahf
mov
into
inc
adc
push
fnstenv
stos
ja
sahf
test
mov
sbb
dec
daa
repz
cli
imul
cmc
jg
push
xchg
jne
mov
xor
in
retf
ret
sub
cmp
loopne
js
xchg
mov
imul
push
mov
(bad)
dec
xchg
data16
lods
xchg
xchg
fimul
cmp
xlat
mov
add
sbb
push
(bad)
(bad)
call
jge
push
jmp
jmp
int
imul
gs
dec
(bad)
(bad)
fild
xor
jno
jb
in
xlat
imul
jmp
(bad)
(bad)
std
push
xor
in
cmp
mov
add
fist
shr
or
(bad)
cmp
jmp
or
pop
out
jmp
stos
add
cli
(bad)
mov
ins
sub
jmp
lock
mov
xchg
dec
hlt
out
inc
lahf
sub
xchg
popf
(bad)
push
or
repz
cli
mov
imul
retf
ja
std
(bad)
(bad)
jmp
js
pop
mov
int3
push
mov
neg
jbe
sti
sub
rol
sbb
int3
les
push
xchg
xchg
(bad)
adc
movs
int
rcl
and
inc
aas
mov
xchg
cwde
push
jnp
and
sbb
dec
mov
push
mov
jmp
in
sub
ss
add
mov
(bad)
das
idiv
(bad)
call
mov
int3
xor
dec
dec
inc
daa
pop
jne
sbb
fcom
les
das
mov
aad
sub
test
pop
xor
adc
xor
(bad)
mov
dec
pop
addr16
(bad)
hlt
push
(bad)
dec
mov
push
dec
cwde
mov
lods
push
fld
out
movs
out
xchg
mov
call
and
push
push
imul
mov
popf
(bad)
stc
in
xor
or
push
retf
(bad)
(bad)
mov
pop
cmc
dec
je
push
and
loopne
out
lods
mov
(bad)
(bad)
dec
out
bnd
pop
movs
in
call
popa
dec
jge
sbb
jmp
clc
jmp
mov
and
hlt
cmp
xchg
retf
pushf
pop
xchg
hlt
jmp
clc
popf
pop
pop
mov
inc
out
sub
mov
sbb
cmp
jg
lock
push
retf
mov
cdq
js
aam
int3
add
fcomp
hlt
(bad)
loopne
nop
jmp
mov
jo
mov
(bad)
mov
dec
ja
(bad)
dec
out
mov
jns
mov
dec
retf
dec
out
fnstsw
mov
icebp
(bad)
inc
mov
jp
daa
pushf
rcr
xor
int
aad
inc
movs
outs
push
dec
fnsave
and
pop
out
cmps
xchg
xor
dec
aam
mov
cmp
push
ret
(bad)
cs
(bad)
push
cld
mov
(bad)
jge
xor
repz
sti
cmp
fdivr
out
cs
jmp
inc
sbb
pop
mov
push
pop
mov
push
call
sbb
fisttp
sub
sbb
jp
cli
stos
and
jnp
mov
xor
pop
push
js
add
cmps
shl
jns
(bad)
(bad)
call
fidivr
sbb
cmp
loop
(bad)
cmp
fcmovnu
cwde
cs
(bad)
(bad)
call
adc
iret
or
mov
xor
leave
cmp
jmp
sub
gs
fcmovbe
push
mov
pop
pminub
cmp
sub
xchg
push
sub
out
call
nop
mov
push
sar
jg
push
jo
out
and
in
dec
jbe
mov
adc
or
jmp
add
mov
clc
imul
scas
loope
out
xor
cld
(bad)
inc
leave
mov
xchg
sbb
mov
je
mov
(bad)
jg
aaa
ret
xchg
cld
push
sub
inc
js
jg
hlt
movs
cmps
loope
sahf
movs
loopne
add
lock
mov
add
bound
xor
shl
ins
movs
clc
lods
(bad)
push
pushf
jp
adc
lods
test
call
(bad)
call
mov
test
xor
mov
sbb
mov
push
rcl
(bad)
aas
adc
xlat
retf
mov
mov
(bad)
imul
inc
ret
fs
fs
fneni(8087
nop
mov
movs
cmp
push
mov
ins
mov
xor
icebp
pop
lock
cli
cmp
test
imul
jle
jg
jmp
adc
mov
jae
dec
fst
repz
aam
mov
jae
adc
pop
mov
add
(bad)
inc
and
movs
sub
out
sub
sub
inc
fs
add
imul
fistp
adc
or
in
xlat
pop
fcom
(bad)
retf
dec
push
(bad)
or
xor
pushf
jnp
ins
int
sahf
xchg
aaa
std
fwait
mov
mov
push
push
dec
jne
in
push
mov
sar
jmp
or
mov
fsub
les
sbb
xor
repnz
jg
(bad)
jge
jge
sbb
sbb
cmp
lock
xor
jle
fs
jmp
rol
stos
sbb
cli
cld
in
cmc
jmp
inc
lahf
cld
or
clc
cli
int3
jo
push
(bad)
(bad)
(bad)
(bad)
fisubr
(bad)
add
adc
jle
add
outs
out
gs
mov
nop
pop
adc
xchg
xchg
dec
xchg
arpl
fistp
cli
and
xchg
imul
or
jmp
and
out
jp
in
cwde
inc
out
out
loop
dec
retf
retf
pop
stc
xor
adc
and
test
and
ins
mov
lods
sub
sbb
int
xchg
inc
and
imul
retfw
ins
add
sbb
(bad)
(bad)
(bad)
inc
xchg
lock
pop
movs
inc
(bad)
lea
mov
(bad)
sar
test
fs
push
pop
(bad)
(bad)
call
mov
and
push
daa
jns
vhaddpd
sbb
fdivr
xchg
(bad)
(bad)
out
cli
cmovle
cmp
push
cs
hlt
sar
cmc
sbb
dec
xchg
daa
xchg
test
dec
pop
ud0
(bad)
call
pop
cmp
in
test
inc
jbe
adc
push
cmp
xchg
jmp
push
mov
xchg
les
sahf
pusha
push
mov
jb
test
(bad)
(bad)
mov
pop
inc
int3
psrad
xor
xchg
cli
inc
(bad)
(bad)
call
mov
xor
mov
inc
cmp
arpl
clc
mov
mov
aaa
fnsave
out
add
test
inc
push
jp
mov
dec
data16
push
test
jnp
mov
icebp
or
mov
(bad)
(bad)
mov
and
sub
push
lock
adc
sar
call
in
jb
shr
adc
call
mov
das
and
fdiv
js
sbb
mov
enter
arpl
mov
pop
(bad)
in
test
cmps
(bad)
jmp
and
icebp
xchg
cmp
aam
pop
pop
out
jmp
cmps
outs
mov
(bad)
(bad)
(bad)
in
les
aad
out
push
adc
test
cld
inc
rcr
in
ja
xor
add
sar
mov
hlt
push
pop
inc
bound
jmp
mul
popf
pop
jne
sbb
inc
pop
lods
ja
jmp
iret
addr16
adc
das
push
daa
dec
mov
fist
and
inc
xchg
mov
push
(bad)
xor
push
cwde
sbb
fcomip
(bad)
aas
test
pusha
push
sbb
into
mov
adc
push
(bad)
(bad)
(bad)
call
test
in
dec
push
pop
and
mov
cmp
dec
sub
retf
push
xlat
scas
out
jmp
dec
sbb
(bad)
mov
jg
btr
jg
pop
push
push
cmp
adc
(bad)
(bad)
jmp
scas
xchg
xchg
sub
test
rol
sbb
cmp
retf
mov
outs
aas
xor
pop
sub
adc
fdivr
fadd
mov
pop
xor
lock
mov
cmp
(bad)
(bad)
fild
cmps
mov
fidiv
scas
sbb
popf
mov
neg
fbld
ret
lods
xor
dec
cwde
sbb
and
cmp
(bad)
dec
(bad)
call
(bad)
xor
mov
push
cmp
popa
lock
aaa
pop
inc
loopne
(bad)
cmp
les
(bad)
(bad)
cld
cmp
and
sbb
xchg
in
(bad)
in
cwde
cmp
push
sub
add
clc
jmp
fild
arpl
push
retf
cld
and
das
sub
sub
les
add
int3
int
lods
sbb
jp
and
shl
fwait
sub
sub
(bad)
mov
inc
jno
dec
daa
das
les
jl
shl
push
cmp
xchg
jae
(bad)
cmp
call
into
pusha
xor
inc
cmps
movs
inc
mov
jmp
or
xor
clc
jle
sbb
push
pop
hlt
retf
mov
test
xchg
fsubr
mov
mov
(bad)
jge
in
in
add
push
jmp
into
sub
rcl
jnp
aas
scas
add
mov
push
xchg
(bad)
fbstp
cmp
mov
push
add
mov
call
xchg
iret
dec
push
ret
push
and
mov
inc
pop
inc
sbb
cld
xor
leave
mov
sbb
cmps
jg
mov
adc
repz
or
(bad)
call
(bad)
xchg
add
xlat
mov
ja
mov
mov
add
(bad)
(bad)
(bad)
jmp
ret
in
mov
popa
scas
popa
fdiv
xor
jg
cmp
jge
loopne
sub
(bad)
(bad)
(bad)
(bad)
(bad)
fucomi
shl
(bad)
leave
rcl
enter
cmp
xor
int
xlat
shl
pop
scas
fwait
jae
(bad)
(bad)
dec
ficom
sub
clc
adc
adc
jns
pop
xor
push
jb
or
lock
(bad)
jmp
mov
je
push
stos
stos
test
mov
pop
xor
xchg
push
std
(bad)
jmp
xor
sbb
xchg
jp
outs
mov
iret
mov
xchg
(bad)
dec
lock
imul
imul
outs
jbe
pop
std
popf
dec
(bad)
(bad)
(bad)
(bad)
(bad)
fldcw
call
inc
fadd
sbb
jmp
mul
out
(bad)
dec
xchg
mov
(bad)
(bad)
(bad)
jmp
push
lock
fild
mov
in
dec
dec
fs
aas
and
bound
push
(bad)
sbb
in
mov
cwde
jnp
loop
(bad)
popa
cli
jmp
mov
(bad)
call
shl
mov
jl
mov
push
jp
stos
mov
mov
cli
(bad)
(bad)
dec
ja
in
ror
mov
jp
xor
arpl
mov
(bad)
call
sub
xor
dec
or
outs
(bad)
lock
out
pop
and
pop
(bad)
dec
lock
push
and
stos
or
movs
fisub
sub
or
in
popa
(bad)
(bad)
(bad)
(bad)
in
(bad)
int
arpl
lea
cmp
cmc
inc
mov
loop
dec
dec
fmulp
fisttp
(bad)
jg
out
dec
lods
ins
push
xchg
(bad)
es
or
jg
push
daa
repnz
and
retf
into
(bad)
(bad)
(bad)
(bad)
(bad)
fdivr
and
aas
push
sti
add
das
scas
pop
xchg
mov
test
fisubr
adc
mov
enter
(bad)
jmp
jb
in
loopne
in
fbld
clc
(bad)
mov
(bad)
cli
mov
or
or
add
xchg
hlt
js
jg
mov
dec
fwait
and
xor
xor
scas
(bad)
jecxz
xor
outs
(bad)
jg
inc
pop
in
sbb
jmp
and
std
les
loope
jo
(bad)
(bad)
(bad)
call
outs
and
jp
retf
and
(bad)
ficom
hlt
dec
pop
scas
int
mov
(bad)
inc
in
push
retf
cmp
inc
arpl
clc
push
mov
(bad)
jmp
call
push
(bad)
mov
ret
adc
cs
push
aas
or
xor
test
push
jg
movs
sub
hlt
mov
mov
jmp
(bad)
(bad)
(bad)
(bad)
std
ret
mov
gs
iret
dec
lods
dec
pop
outs
lods
ja
(bad)
jl
mov
sbb
pop
mov
fidivr
hlt
stc
jo
jb
cmps
(bad)
mov
fcmovu
xchg
es
(bad)
(bad)
push
fnstsw
jbe
nop
ret
repnz
out
jmp
adc
shl
nop
jecxz
div
(bad)
push
mov
scas
ja
push
pusha
retf
xchg
cmp
pop
cmp
push
jbe
shl
(bad)
jg
int
mov
pop
pop
cmps
ja
mov
dec
pop
push
out
dec
mov
jecxz
jp
in
jmp
xor
cwde
mov
dec
mov
xor
fdivr
in
jl
xor
jmp
jne
rol
aam
or
mov
jae
mov
inc
adc
adc
push
pop
jnp
aas
mov
mov
mov
aas
pop
inc
in
in
test
mov
je
femms
mov
mov
mov
push
push
push
cmp
cmp
scas
inc
aam
addr16
push
fcomp
push
fwait
sbb
outs
mov
das
push
dec
ds
sbb
mov
dec
bound
(bad)
jp
dec
(bad)
mov
cmp
pop
xor
adc
xchg
cmp
push
xchg
mov
xchg
jmp
lahf
mov
stos
(bad)
call
inc
xchg
inc
hlt
fst
adc
adc
dec
push
es
xchg
fsubrp
ss
(bad)
mov
shl
xchg
mov
or
xor
xchg
add
xor
iret
sub
out
push
mov
ret
mov
inc
push
test
sbb
ficom
jp
(bad)
mov
pop
call
push
shr
addr16
and
mov
aam
(bad)
(bad)
(bad)
call
loop
ins
mov
gs
push
ret
xchg
daa
aas
ret
add
adc
ja
loopne
add
mov
sub
push
(bad)
call
pop
sub
lock
ror
mov
retf
hlt
pop
out
ficom
aam
icebp
jecxz
int
aaa
and
inc
popa
js
adc
sub
xor
out
mov
retf
add
or
xchg
ret
dec
fcmovnb
fadd
dec
dec
mov
xchg
pop
shl
in
shl
(bad)
(bad)
(bad)
jmp
fsub
inc
in
pop
pop
neg
jle
cli
and
(bad)
(bad)
out
pop
cwde
dec
mov
lock
inc
out
test
inc
xchg
cmp
cwde
dec
(bad)
pop
scas
xor
sti
jg
(bad)
loopne
push
pop
inc
pop
ficomp
xchg
push
add
test
adc
jbe
int
pop
inc
js
push
imul
mov
repnz
cmp
ror
fisub
(bad)
inc
sbb
cmp
dec
out
sub
or
xchg
xchg
jl
(bad)
mov
pop
std
shl
and
xor
retf
out
sub
and
ss
push
xor
pop
push
adc
inc
aam
sar
(bad)
mov
scas
rol
mov
jmp
push
sub
mov
inc
mov
mov
(bad)
or
mov
div
mov
shr
cwde
imul
ret
push
retf
sbb
mov
xchg
lock
jae
dec
(bad)
stos
sbb
jg
cmp
sub
or
dec
sbb
movs
push
bound
dec
cs
mov
leave
data16
mov
sbb
(bad)
call
sahf
or
(bad)
test
xor
lds
jg
vmptrst
xchg
pusha
(bad)
(bad)
(bad)
call
or
shl
lea
cmp
xor
imul
lods
mov
xchg
(bad)
adc
lock
iret
mov
lock
test
or
push
sbb
jne
sub
or
test
ficom
mov
xor
cld
je
(bad)
pop
setns
lods
sub
es
xchg
cmc
fdivr
ins
(bad)
(bad)
(bad)
call
mov
fst
repnz
test
cmp
add
dec
call
imul
inc
mov
mov
test
(bad)
mov
(bad)
(bad)
(bad)
mov
stc
jne
idiv
js
jo
jns
stos
push
push
pusha
out
lahf
mov
xchg
xor
inc
(bad)
jmp
shl
push
xchg
add
test
lea
loop
(bad)
(bad)
push
jecxz
std
fild
fsubr
scas
inc
stc
jp
(bad)
daa
push
shl
(bad)
(bad)
mov
or
lods
and
test
adc
sub
cmp
mov
das
aaa
add
jmp
push
ret
inc
sar
movs
jl
lea
cmps
cwde
(bad)
cld
(bad)
call
adc
mov
push
sub
mov
int
cwde
push
fdivr
(bad)
fcomip
jnp
fldcw
jne
pop
sbb
pusha
inc
mov
outs
mov
lea
(bad)
jle
pushf
sbb
jb
clc
iret
retf
popa
out
pop
xor
sti
dec
cmps
jl
lds
clc
jo
lock
in
movs
push
rcr
movs
lods
call
stc
dec
pop
int
inc
xor
adc
test
pop
pop
scas
movs
xor
cs
fsubr
inc
mov
sbb
inc
imul
out
(bad)
(bad)
sti
mov
test
add
mov
(bad)
mov
aam
jo
retf
add
mov
jmp
mov
xlat
jnp
lds
int
test
out
add
(bad)
cmp
sar
fstp
imul
jmp
pop
ret
int
mov
fwait
shl
lea
shl
lods
adc
xchg
sub
cli
fbld
adc
pop
pop
inc
cdq
xlat
pop
cmp
(bad)
dec
and
pop
jge
cmp
sub
xchg
pop
sti
push
sub
into
jg
outs
inc
sahf
test
arpl
inc
test
dec
jns
dec
sar
call
retf
adc
mov
mov
stos
(bad)
movs
jg
popa
mov
ins
jno
jge
(bad)
fcmovnu
pop
mov
add
out
int
lahf
adc
js
aad
out
outs
mov
ja
rcr
out
test
out
jl
cmp
(bad)
inc
stos
nop
sbb
sbb
(bad)
stos
xchg
gs
loope
pop
sub
cld
dec
pop
or
cmp
lahf
mov
(bad)
(bad)
(bad)
(bad)
(bad)
and
lds
pop
jmp
(bad)
cmps
fs
icebp
pop
and
cmp
es
(bad)
dec
rcr
inc
loop
add
add
xchg
jns
mov
sub
inc
push
(bad)
(bad)
(bad)
push
push
pop
sbb
pop
ja
xlat
xchg
mov
ret
pushf
jae
fisub
push
lods
push
in
scas
loop
inc
in
inc
inc
adc
test
mov
push
jg
and
push
int
cmc
cmps
call
jns
mov
push
add
mov
push
pusha
mov
push
sbb
cmc
(bad)
sti
dec
fimul
xchg
addr16
add
mov
(bad)
imul
and
adc
adc
jg
jmp
test
imul
or
push
out
sub
rol
scas
or
(bad)
(bad)
jg
cmp
outs
jp
pusha
arpl
mov
pushf
repz
xchg
repz
jp
(bad)
cli
daa
clc
call
xchg
mov
outs
or
add
ja
stos
(bad)
(bad)
call
mov
dec
fs
sar
jg
mov
or
sub
(bad)
(bad)
call
and
pop
pop
es
test
dec
xor
cmp
sbb
jo
in
clc
dec
inc
pop
jns
jns
xchg
jae
jle
mov
pop
and
xor
(bad)
(bad)
jmp
fstp
add
pop
xor
push
ret
or
fwait
jp
fxch
(bad)
(bad)
(bad)
fbstp
push
adc
ins
shr
fdiv
mov
mov
and
push
addr16
(bad)
push
icebp
fdivr
mov
xor
lods
outs
nop
cmp
push
aaa
pop
iret
jg
jae
adc
xor
jecxz
jmp
nop
repz
jb
(bad)
call
loopne
sub
fwait
jle
mov
push
test
or
jmp
ins
(bad)
dec
std
push
fcom
xchg
fisubr
rcr
enter
scas
std
inc
rcl
das
cli
push
mul
mov
mov
outs
int
jmp
je
xor
dec
mov
adc
adc
jle
pop
jnp
(bad)
(bad)
jmp
cmp
push
into
push
sub
test
scas
in
xchg
pop
mov
(bad)
(bad)
(bad)
jmp
pop
add
fiadd
sub
bound
push
movs
inc
xlat
mov
call
mov
sbb
pop
jp
add
adc
dec
jle
mov
jno
shl
arpl
outs
mov
inc
add
push
mov
hlt
cmp
mov
(bad)
loopne
xor
in
call
or
mov
mov
cmp
call
mov
mov
inc
enter
movs
data16
or
shr
mov
scas
rcr
fadd
pop
and
mov
lock
and
lods
sub
call
mov
inc
out
call
loop
push
arpl
sbb
popf
pushf
or
(bad)
(bad)
aas
clc
aas
dec
inc
stos
call
cli
and
sub
ds
dec
push
dec
mov
dec
inc
push
outs
out
fiadd
sub
cmp
int
jae
repnz
xor
sti
(bad)
(bad)
(bad)
jmp
neg
in
lea
lahf
(bad)
fadd
sbb
jno
or
or
pop
(bad)
(bad)
(bad)
push
jb
mov
out
jb
in
pop
push
ficom
jge
shl
clc
(bad)
call
sbb
inc
cld
sbb
inc
hlt
adc
dec
or
lods
jl
pop
cmc
(bad)
inc
sub
push
add
imul
adc
cdq
mov
inc
jg
or
jno
in
fild
mov
jl
or
cld
(bad)
(bad)
dec
pusha
mov
mov
pusha
fld
push
imul
ret
es
test
int3
int3
les
shl
icebp
enter
nop
and
jmp
adc
dec
inc
int
dec
movs
mov
cwde
mov
daa
enter
call
(bad)
pop
add
xor
test
add
pop
clc
mov
(bad)
into
ins
call
das
sbb
mov
in
mov
jns
out
cli
push
jnp
push
out
call
ud0
ret
sbb
xor
enter
jmp
pop
add
mov
enter
xor
(bad)
cmp
dec
mov
xchg
xchg
adc
cmps
push
jl
fadd
push
xor
int3
ror
clc
mov
(bad)
push
cwde
and
outs
shr
mov
sbb
mov
and
retf
cdq
xchg
xchg
cli
arpl
jge
mov
adc
jne
jnp
jl
(bad)
(bad)
jmp
mov
xchg
add
jmp
daa
mov
rcl
sub
dec
cli
gs
jb
(bad)
xor
pop
dec
or
rcr
movs
adc
mov
xor
or
dec
adc
shr
in
jle
mov
xor
mov
pusha
(bad)
mov
sbb
jmp
jno
xor
mov
adc
xor
dec
cmp
outs
(bad)
mov
(bad)
(bad)
dec
(bad)
jmp
mov
lahf
add
and
sub
push
mov
imul
or
call
jmp
(bad)
jmp
xor
mov
pop
and
(bad)
(bad)
jmp
ror
out
ja
and
jbe
xor
std
loop
xlat
lahf
mov
and
fcomip
push
cld
icebp
in
or
aam
jmp
fimul
add
push
sar
(bad)
(bad)
dec
cmove
dec
jbe
sub
mov
imul
ret
(bad)
data16
call
call
xlat
bound
repnz
clc
push
jg
clc
(bad)
idiv
mov
imul
repz
call
call
ds
gs
jge
sti
jns
adc
mov
cmp
dec
pop
cli
iret
(bad)
(bad)
(bad)
jmp
cli
jl
mov
test
cdq
nop
icebp
fs
dec
dec
inc
mov
stc
xor
call
lods
mov
scas
and
and
aaa
xor
aas
mov
xor
(bad)
jg
mov
(bad)
addr16
jae
add
imul
push
(bad)
pop
add
fmul
adc
dec
mov
sbb
jne
xchg
ins
cs
xchg
arpl
jmp
je
movs
fist
mov
pop
mov
push
movs
cs
(bad)
(bad)
(bad)
jg
hlt
sbb
icebp
add
or
or
and
pop
(bad)
in
mov
loopne
mov
(bad)
(bad)
(bad)
call
inc
popa
jp
sbb
cmps
cmps
pop
push
cmps
push
shl
sbb
mov
(bad)
(bad)
(bad)
mov
aaa
xchg
xor
pusha
or
loope
sub
test
loop
in
retf
push
loopne
jmp
and
xchg
les
call
push
cmp
mov
dec
jno
jne
retf
cmovs
xchg
shl
sub
jp
mov
cmp
(bad)
call
cmp
xchg
or
adc
sbb
imul
mov
stos
inc
fimul
dec
ret
mov
retf
mov
(bad)
jnp
cli
fdiv
in
lods
mov
mov
xor
shl
leave
mov
jmp
and
mov
scas
pop
and
stc
and
or
jae
and
(bad)
(bad)
(bad)
call
mov
jbe
xchg
popf
retf
call
int
adc
mov
adc
int3
rcl
pop
jae
(bad)
(bad)
jmp
jb
in
ret
cs
xor
add
test
xor
adc
sar
cmp
mov
vprotq
shl
inc
fsubr
(bad)
(bad)
(bad)
call
and
or
jmp
rol
ror
dec
jl
xchg
xchg
(bad)
(bad)
call
pop
imul
fistp
lahf
enter
and
jns
test
mov
mov
(bad)
(bad)
(bad)
call
xor
ins
inc
pop
test
and
mov
pop
rol
mov
gs
rol
push
(bad)
inc
ins
pusha
iret
mov
inc
into
(bad)
leave
mov
pop
jle
mov
and
dec
loopne
loopne
sar
fcomip
push
sub
outs
ins
pusha
mov
add
mov
add
(bad)
dec
push
adc
cmp
dec
(bad)
rol
dec
lock
into
call
ins
jo
out
ins
(bad)
idiv
sub
sbb
stc
mov
push
idiv
(bad)
dec
addr16
push
pushf
jle
sbb
fwait
inc
ja
shl
lock
(bad)
jmp
in
mov
imul
and
xchg
jg
clc
add
inc
push
mov
mov
mov
jae
(bad)
(bad)
inc
jg
(bad)
jae
or
push
fdivr
sub
das
push
adc
cmp
push
fsubr
mov
mov
popa
adc
(bad)
(bad)
push
mov
adc
hlt
ficom
lahf
sbb
retf
je
jmp
lock
popf
or
(bad)
call
mov
and
jns
(bad)
dec
pop
mov
cs
arpl
mov
(bad)
inc
push
mov
aaa
and
rol
in
jo
sbb
out
mov
cmp
pop
xchg
sti
mov
dec
adc
(bad)
(bad)
(bad)
clc
pop
lock
sub
adc
sub
adc
stc
in
call
ret
jecxz
(bad)
(bad)
(bad)
jmp
sub
aam
js
sub
outs
and
inc
nop
jnp
and
and
(bad)
(bad)
inc
jecxz
inc
(bad)
call
sti
ss
mov
stos
cmps
dec
sub
jl
ja
daa
pop
jp
or
add
fcmovnb
inc
pop
cmc
pop
or
inc
pop
jl
repz
pop
jle
(bad)
(bad)
jmp
ret
dec
adc
or
adc
lods
mov
mov
xchg
pop
(bad)
ret
loope
fsubr
mov
lods
inc
fbld
nop
lahf
push
cmp
pop
adc
pop
(bad)
(bad)
push
shr
outs
movs
xor
and
outs
es
vdivss
jnp
pop
add
xchg
(bad)
(bad)
dec
daa
das
xchg
mov
mov
repz
mov
mov
call
jmp
lods
idiv
lahf
cmp
mov
out
ds
and
xor
(bad)
inc
pop
mov
sub
cmp
inc
out
and
fisubr
mov
aad
add
ins
ds
add
enter
inc
call
xchg
add
or
sbb
push
std
ins
lock
xor
out
sub
pop
cmp
cmp
rcl
ja
adc
lock
(bad)
fstp
(bad)
mov
add
adc
dec
in
(bad)
(bad)
(bad)
fist
call
push
retf
mov
loop
mov
je
pop
sbb
test
sub
inc
xchg
xlat
jnp
pusha
imul
dec
in
sbb
sbb
xchg
fsub
jbe
cs
(bad)
(bad)
dec
xor
gs
xor
xchg
aas
cmp
jbe
xchg
lds
test
adc
pushf
cmc
add
jmp
sar
shr
cmc
xchg
rol
gs
sub
(bad)
(bad)
fnclex
add
aas
aas
mov
mov
push
test
aas
test
mov
and
sub
jb
lock
aaa
clc
lods
std
bound
mov
fild
ror
pop
push
jmp
jno
stos
cwde
fimul
or
push
adc
imul
xor
or
cmps
jg
mov
dec
jg
gs
cmp
sub
(bad)
(bad)
(bad)
jmp
fadd
jnp
int
or
aas
xor
inc
out
jo
loopne
sub
in
mov
das
lock
(bad)
call
fidiv
jp
pop
or
repnz
cmp
(bad)
clc
out
mov
fisttp
fcomip
jg
(bad)
jmp
ins
aas
mov
mov
or
(bad)
call
ds
ins
pop
idiv
push
or
std
or
inc
cmp
(bad)
je
or
int
and
jg
(bad)
jmp
cld
jne
jg
push
pop
mov
push
dec
bound
mov
cld
(bad)
(bad)
(bad)
out
xchg
fidiv
sub
call
retf
mov
cmp
add
out
cli
push
repnz
or
xchg
xor
pop
mov
lock
fistp
xor
enter
(bad)
call
and
adc
xor
dec
cmp
ins
mov
push
inc
in
cmp
(bad)
(bad)
ds
add
and
js
test
jl
in
lods
scas
repnz
pop
mov
(bad)
(bad)
call
xchg
in
jle
sub
cmp
test
ins
or
push
outs
push
(bad)
jmp
push
sbb
(bad)
rol
iret
xor
pop
and
(bad)
(bad)
(bad)
push
pusha
fiadd
cs
dec
imul
and
leave
mov
mul
lock
jp
fidiv
out
push
sub
es
add
mov
(bad)
call
sar
sbb
sbb
int
jnp
mov
xchg
or
inc
mov
aad
cmp
mov
dec
mov
outs
jg
mov
inc
jle
fdivr
mov
sub
into
push
loope
sbb
xor
push
and
repnz
fnstenv
in
xchg
ficomp
sub
xchg
movs
(bad)
call
inc
cld
fdivp
dec
push
jno
xor
idiv
xchg
pop
aaa
inc
cld
(bad)
(bad)
dec
adc
repnz
or
hlt
stc
gs
test
sbb
mov
mov
(bad)
inc
mov
loope
clc
(bad)
retf
fisub
aam
cld
pop
jg
push
popa
cmp
(bad)
dec
xor
ret
loopne
mov
loop
jecxz
imul
mov
jmp
mov
sbb
bound
jge
fwait
es
sub
pusha
(bad)
xchg
add
sbb
mov
adc
test
fidiv
sbb
(bad)
(bad)
aam
imul
cmp
out
scas
pop
and
jle
cli
(bad)
(bad)
call
add
inc
adc
pop
mov
mov
scas
clc
mov
imul
push
lock
xchg
jecxz
sub
sbb
jb
xor
jmp
cmc
inc
fldenv
mov
jecxz
xchg
aas
icebp
(bad)
(bad)
(bad)
(bad)
mov
out
and
cmp
cmp
push
lahf
cmps
pusha
lds
lock
lock
(bad)
call
ins
stc
(bad)
xlat
(bad)
jge
cmp
imul
lds
test
and
xor
or
les
jne
mov
xchg
xchg
(bad)
(bad)
call
add
xor
imul
add
call
jle
adc
stc
push
inc
sbb
mov
push
sbb
out
les
in
mov
imul
daa
pop
inc
mov
(bad)
and
xchg
data16
fidiv
retf
sbb
lods
leave
(bad)
call
pusha
repnz
mov
xchg
mov
fnstsw
add
sub
fsubr
dec
or
xchg
outs
mov
jbe
xor
je
cs
pushf
ret
lock
ret
nop
xchg
dec
jmp
(bad)
inc
jns
push
mov
sar
es
(bad)
pop
test
xchg
and
hlt
fldcw
jbe
mov
or
inc
dec
sub
pop
xor
rol
sbb
fld
icebp
(bad)
push
mov
std
in
pop
sub
mov
pop
das
inc
into
ror
mov
inc
data16
sbb
(bad)
cmp
fiadd
pop
std
(bad)
(bad)
mov
xchg
leave
dec
iret
ret
jmp
cmp
mov
or
sub
sbb
(bad)
(bad)
dec
popf
(bad)
outs
mov
pop
sbb
cmp
mov
sahf
test
dec
fbld
test
mov
pop
(bad)
(bad)
(bad)
jmp
retf
inc
push
mov
hlt
mov
mov
cmp
stos
mov
or
lods
rcr
mov
out
(bad)
(bad)
(bad)
push
ins
jns
or
das
clc
pop
adc
adc
mov
call
pop
(bad)
jmp
xor
cmp
push
adc
shr
ja
data16
mov
mov
sar
std
cld
or
adc
rcr
loope
retf
(bad)
call
cwde
pop
movs
pushf
push
sub
sbb
pushf
fwait
jmp
test
retf
icebp
psllq
sar
add
pop
jbe
pop
mov
cwde
shl
jnp
iret
clc
(bad)
mov
outs
mov
cmp
clc
jecxz
push
test
(bad)
(bad)
(bad)
jmp
sahf
mov
ja
mov
data16
fldenv
test
pop
sbb
adc
xchg
inc
inc
ja
(bad)
leave
mov
push
and
lahf
or
push
fucomp
mov
fdivr
(bad)
inc
mov
mov
and
popa
add
pop
(bad)
and
test
jns
stc
(bad)
(bad)
(bad)
call
inc
(bad)
xor
pop
push
int
idiv
and
or
das
rcl
jne
es
call
adc
jg
ror
push
cmp
and
sub
cs
(bad)
call
loopne
fimul
std
movs
adc
scas
ja
test
out
add
(bad)
inc
sti
jle
out
stos
push
xchg
mov
in
fsubr
add
xchg
inc
retf
mov
dec
mov
xlat
(bad)
(bad)
push
cmp
clc
fs
xor
jmp
sub
(bad)
loopne
pushf
inc
mov
jg
enter
in
xor
pop
mov
pop
push
adc
cmp
(bad)
(bad)
jmp
cli
clc
hlt
inc
sub
stos
fst
jb
sar
int3
mov
dec
nop
std
out
imul
loop
xchg
pop
data16
cli
push
(bad)
(bad)
mov
ret
sbb
scas
inc
dec
fwait
(bad)
(bad)
(bad)
jmp
fcomp
jns
neg
(bad)
int
loop
sub
(bad)
pusha
or
test
(bad)
(bad)
inc
and
nop
lahf
pop
add
test
(bad)
aaa
pop
mov
shl
pop
lock
adc
(bad)
(bad)
std
lldt
rol
mov
mov
jg
add
add
stos
outs
nop
adc
cmps
out
out
scas
pop
repnz
pop
sub
mov
dec
js
cs
scas
mov
not
shl
loopne
jle
mov
sbb
cmps
out
push
(bad)
(bad)
cli
jecxz
add
(bad)
mov
mov
or
xor
fiadd
xor
std
call
dec
add
add
js
out
add
sbb
jbe
clc
call
std
sbb
xchg
cmp
and
(bad)
mov
cmp
bound
clc
enter
repz
jnp
push
dec
mov
add
jmp
ficom
add
inc
xor
daa
or
(bad)
(bad)
fistp
enter
xlat
enter
inc
retf
rcl
(bad)
(bad)
(bad)
call
(bad)
cli
cmps
or
fdivr
pop
push
(bad)
add
leave
inc
ins
mov
clc
pop
std
shl
or
jne
cwde
cmp
mov
and
push
adc
(bad)
mov
pop
sbb
push
(bad)
mov
ja
out
fdiv
pop
(bad)
out
and
jmp
lods
aaa
rol
pop
jnp
(bad)
xlat
jmp
cli
push
cld
call
sub
sub
dec
inc
std
rcr
les
jb
pop
ins
das
mov
lods
into
and
aad
cwde
cld
out
mov
lock
and
jg
mov
xchg
clc
(bad)
jl
in
xchg
movs
inc
(bad)
stos
jl
les
sbb
and
push
(bad)
(bad)
(bad)
(bad)
jg
(bad)
push
in
cmp
bound
fsubr
dec
test
push
xor
into
jns
mov
mov
std
jg
(bad)
jg
loope
sar
aaa
rcl
push
or
dec
mov
(bad)
dec
jecxz
mov
and
sti
cmp
push
(bad)
(bad)
(bad)
jmp
sub
jnp
lahf
mov
jb
out
push
and
mov
ret
loope
loopne
push
popa
pop
fwait
popf
(bad)
call
cld
pop
retf
xor
in
stc
test
add
cmp
lock
jl
(bad)
(bad)
fst
fcomp
dec
loopne
adc
mov
in
in
(bad)
push
pop
sub
cmp
xor
jle
add
jmp
(bad)
xchg
ja
(bad)
inc
jns
shl
and
enter
scas
(bad)
jmp
pop
adc
std
jmp
jecxz
cmc
add
enter
icebp
out
mov
xchg
inc
push
jmp
imul
gs
call
js
xor
ret
jl
stc
add
cmp
retf
call
das
(bad)
call
rcr
aas
mov
and
ins
jns
(bad)
sbb
mov
sbb
(bad)
jg
add
pop
int
daa
sti
inc
push
pop
cmp
cmps
imul
stc
jmp
mov
cld
nop
lds
xchg
xchg
aam
hlt
mov
and
(bad)
mov
lds
cmp
test
mov
push
ficomp
pop
call
ret
inc
ds
or
fadd
jmp
push
xchg
mov
test
inc
popf
lock
retf
jmp
movs
int3
mov
jno
repnz
(bad)
(bad)
cmp
mov
loope
or
cmc
into
lea
das
fdiv
in
adc
or
mov
mov
(bad)
push
inc
sbb
cmp
fst
jbe
pop
not
mov
jmp
call
(bad)
and
imul
mov
imul
push
cli
out
sbb
scas
fchs
cmp
rcl
jmp
add
lock
mov
inc
mov
test
inc
pop
lea
or
jmp
jp
cmc
xor
repnz
(bad)
(bad)
fcomip
or
mov
test
mov
fild
sub
call
adc
cmc
pop
lea
sub
out
mov
imul
add
ins
add
in
in
cmc
mov
sub
adc
cmp
(bad)
(bad)
(bad)
jmp
mov
mov
mov
cmc
xchg
rol
jle
in
mov
fisttp
and
(bad)
call
push
test
mov
loop
ds
icebp
push
xchg
sbb
je
inc
push
dec
jnp
adc
test
adc
adc
jae
rcl
mov
jmp
lds
nop
xchg
cdq
pop
push
xchg
or
lahf
and
rcr
retf
fist
and
mov
jo
fild
iret
mov
push
(bad)
(bad)
(bad)
inc
xor
fsubp
inc
jle
sbb
cwde
popf
ficom
or
(bad)
jg
cld
jne
cmp
inc
lock
aad
jbe
(bad)
(bad)
(bad)
(bad)
cmp
xchg
add
dec
inc
cmp
stc
aam
movs
fbld
enter
sar
movs
cmps
gs
call
inc
mov
inc
mov
hlt
jbe
jp
cmc
icebp
dec
ret
inc
jmp
fyl2xp1
(bad)
(bad)
inc
inc
(bad)
sub
mov
mov
inc
pop
bts
pop
mov
pavgw
dec
je
retf
enter
fdivr
cmp
sbb
call
jmp
ret
add
adc
pop
inc
scas
std
(bad)
mov
je
pop
iret
outs
(bad)
mov
add
mul
mov
data16
jle
add
jb
xor
cmc
ins
add
push
mov
mov
mov
inc
mov
sbb
push
dec
fwait
movs
retf
dec
repz
jb
mov
mov
jl
fdivr
(bad)
(bad)
dec
in
shl
sub
iret
jae
cwde
push
add
(bad)
mov
mov
sahf
pop
or
ds
mov
inc
lock
popf
js
adc
out
and
mov
jmp
fs
enter
mov
arpl
add
ja
sub
jmp
add
scas
stos
in
pop
pusha
adc
data16
dec
dec
mov
fild
es
(bad)
movs
mov
mov
fisubr
adc
jb
cwde
pop
add
sub
mov
(bad)
(bad)
aas
jmp
inc
outs
and
mov
mov
sahf
sbb
in
mov
push
aad
movs
mov
outs
shl
jmp
adc
inc
jge
jmp
dec
(bad)
jmp
mov
retf
mov
adc
mov
jle
les
and
lods
outs
scas
dec
ret
xor
dec
test
bound
aaa
popa
movs
enter
inc
fimul
stos
xchg
pop
cmp
cmps
(bad)
dec
test
in
jge
mov
test
cmp
adc
movhps
cmc
rcl
inc
ret
push
pop
addr16
fild
cmps
xor
std
mov
in
pop
sar
retf
sti
lock
mov
cmps
cmp
push
inc
lods
test
rol
push
add
jo
xchg
push
add
les
inc
cmp
mov
rcl
fdivrp
cmp
xchg
xchg
ror
add
mov
int3
das
dec
ins
dec
pop
mov
adc
cmp
imul
js
je
pop
stc
dec
sbb
ins
add
retf
adc
inc
sub
fisub
lea
into
cmp
dec
push
xchg
mov
pslld
movsx
sbb
add
push
fcomp
push
lock
push
add
push
(bad)
push
inc
xchg
pusha
sub
or
outs
addr16
mov
or
fbstp
cmp
cmovp
xor
push
popa
xor
popa
cmp
data16
bound
sub
mov
xor
bound
lahf
mov
cmp
mov
out
mov
mov
inc
inc
test
push
popa
loopne
xor
enter
inc
inc
and
mov
add
or
or
stos
xchg
fist
adc
adc
add
mov
xor
fist
scas
adc
(bad)
dec
sub
popf
jns
push
aad
(bad)
mov
out
nop
(bad)
push
call
add
pushf
out
lods
aam
int
add
jl
xchg
scas
ror
aam
repz
sub
xor
add
adc
addr16
push
add
dec
xchg
jnp
in
push
cld
jp
repz
js
ds
sahf
(bad)
(bad)
(bad)
call
lods
mov
dec
cld
sub
and
adc
mov
and
and
mov
test
xor
inc
adc
mov
push
add
arpl
es
xor
pop
adc
lods
inc
mov
in
or
xor
data16
or
or
pop
or
add
test
shl
xchg
jb
dec
mov
sub
iret
mov
inc
pop
pop
sbb
mov
cld
add
xor
add
bound
mov
mov
or
in
ja
push
push
adc
in
add
xor
sti
ja
and
fidivr
mov
mov
xchg
aaa
sbb
lahf
pusha
ja
pop
or
mov
movs
adc
jnp
pop
in
es
inc
jecxz
mov
dec
ja
int3
pop
mov
mov
fcom
dec
adc
pop
sbb
cmp
call
mov
je
(bad)
(bad)
mov
sub
xchg
dec
jmp
test
popa
jp
mov
push
out
out
or
adc
dec
(bad)
(bad)
(bad)
(bad)
out
scas
mov
adc
mov
dec
mov
inc
add
(bad)
sbb
lea
das
jecxz
xchg
jge
dec
jmp
or
xchg
dec
cdq
sub
(bad)
(bad)
dec
mov
movs
sbb
rcl
adc
cmp
test
cmp
scas
and
(bad)
(bad)
push
int3
push
jmp
push
cmc
sbb
pop
mov
retf
fistp
out
pop
aas
xor
(bad)
inc
adc
xchg
aad
repz
std
sub
ds
stos
dec
sar
cmp
push
jg
(bad)
(bad)
(bad)
mov
out
and
nop
test
ret
and
test
adc
pop
xchg
(bad)
(bad)
(bad)
(bad)
cli
jmp
dec
pop
iret
ret
jecxz
mov
rcr
sbb
call
adc
jbe
arpl
(bad)
jmp
and
inc
ds
mov
fadd
jne
and
push
pop
aam
mov
(bad)
cli
cdq
mov
sti
loopne
mov
shl
pop
lea
xor
cld
out
pop
(bad)
(bad)
(bad)
push
or
mov
nop
pop
push
fucomp
mul
es
jmp
dec
push
or
out
jns
out
mov
or
hlt
(bad)
rcr
and
adc
add
dec
(bad)
(bad)
(bad)
(bad)
fisub
(bad)
dec
ja
push
push
pusha
jmp
sbb
mov
push
test
sub
ja
add
push
les
xor
jmp
nop
repz
test
mov
push
xor
int
(bad)
(bad)
(bad)
(bad)
inc
xchg
jo
les
mov
out
inc
pop
bound
push
out
xor
jge
cwde
lea
sub
(bad)
dec
(bad)
and
inc
test
xor
mov
jge
stos
pop
sbb
es
cmc
adc
and
and
call
cmp
jbe
jg
add
dec
(bad)
out
popf
push
loope
jg
movs
ins
mov
cli
data16
mov
cld
adc
push
mov
xlat
pop
xchg
jmp
clc
in
jge
fistp
out
out
cli
(bad)
(bad)
mov
loopne
jecxz
jge
(bad)
adc
imul
not
(bad)
mov
mov
and
push
test
idiv
push
dec
mov
xor
dec
loopne
add
fistp
push
aas
cs
ds
(bad)
call
push
leave
dec
push
sbb
aad
adc
push
push
in
push
xchg
sbb
imul
sub
iret
(bad)
(bad)
xor
add
(bad)
jg
jb
pop
xor
in
das
ret
mov
cmps
mov
xlat
xor
pop
test
aaa
sahf
loop
sbb
lock
(bad)
loopne
jmp
mov
outs
sub
cmp
call
xchg
aad
(bad)
out
stos
add
ret
inc
jmp
out
mov
ins
cmp
rol
mov
jl
outs
idiv
(bad)
mov
sub
retf
repnz
xor
push
jmp
call
mov
out
daa
dec
stos
imul
mov
mov
(bad)
(bad)
aas
cld
stc
popa
push
mov
ins
sbb
inc
movs
pusha
push
retf
mov
xor
(bad)
(bad)
(bad)
jmp
pusha
pop
mov
xor
shl
ret
call
ja
leave
adc
jmp
loopne
dec
jne
inc
es
inc
and
in
out
data16
jp
inc
mov
in
inc
jmp
aad
hlt
std
jb
fidivr
jecxz
xchg
outs
or
fidiv
pop
add
mov
add
mov
aam
pop
mov
mov
sub
xor
mov
push
(bad)
(bad)
(bad)
jmp
jmp
stos
mov
fldenv
fcmovne
into
out
leave
jns
leave
xor
pop
adc
mov
push
inc
pmuludq
pushf
dec
pavgw
add
push
add
and
mov
pop
xor
pop
dec
int
push
in
call
clc
add
pushf
(bad)
(bad)
inc
mov
inc
test
icebp
gs
sbb
jmp
sbb
pop
dec
xchg
jmp
imul
push
jae
adc
movs
push
push
(bad)
imul
test
push
xchg
pop
aad
fwait
xchg
inc
lock
popf
fcmovu
sbb
cld
(bad)
jmp
adc
aad
ins
pop
mov
pop
inc
jle
std
call
(bad)
call
cmp
xchg
push
or
sti
cmc
jae
inc
and
mov
xor
dec
cmps
test
int
(bad)
(bad)
mov
in
mov
pusha
imul
jo
fdivr
jmp
sar
(bad)
jmp
gs
fnsave
data16
pop
and
in
xor
(bad)
(bad)
jmp
cmps
cwde
test
sub
cmp
popf
mov
cs
dec
mov
sub
(bad)
fiadd
cmc
mov
dec
movs
fiadd
call
ins
loop
(bad)
pop
push
xor
or
xchg
lahf
xor
push
pop
xchg
iret
xor
fwait
aad
pop
and
stos
sub
pushf
pop
out
cmp
pop
cld
pop
loopne
add
adc
popf
mov
jmp
(bad)
(bad)
(bad)
jmp
je
xor
jmp
int3
cmp
mov
sub
jg
idiv
(bad)
call
sar
ins
retf
rcl
sub
repnz
mov
push
adc
fndisi(8087
repnz
jmp
(bad)
xchg
mov
push
cmp
(bad)
(bad)
fild
jle
jbe
mov
lods
in
in
into
xchg
mov
call
mov
cld
cmp
or
xchg
lods
cmp
and
test
pop
(bad)
(bad)
jmp
push
call
fwait
retf
xor
cmovbe
jb
stos
cmp
(bad)
push
xchg
fucomp
imul
jmp
(bad)
xchg
loope
sub
out
mov
cmc
push
int3
out
bound
enter
lock
xor
out
shl
cmps
call
fs
xchg
xlat
cli
dec
stos
jmp
(bad)
(bad)
out
mov
cmp
sub
cmp
dec
test
inc
pusha
jmp
fisttp
loopne
cwde
pop
(bad)
xor
out
cmp
adc
(bad)
mov
mov
jno
xor
cmc
cmp
dec
xchg
dec
ins
(bad)
popa
xor
mov
xlat
push
xchg
xor
pop
fxch
pop
cmovo
or
in
into
(bad)
(bad)
(bad)
inc
data16
retf
xchg
adc
fidiv
or
iret
daa
jecxz
mov
push
iret
jnp
fdiv
lods
(bad)
call
dec
ficomp
mov
scas
arpl
das
cmc
dec
rcl
iret
retf
add
(bad)
(bad)
jg
addr16
adc
inc
and
inc
push
pop
jne
inc
pop
mov
mov
xor
ret
call
add
cmp
jmp
lock
ret
call
fcom
in
sub
and
jg
pop
mov
cmp
pop
jo
lock
adc
cld
test
adc
mov
mov
scas
jno
gs
sbb
retf
in
or
pop
aad
(bad)
(bad)
(bad)
mov
ret
jp
outs
mov
inc
mov
inc
dec
je
jb
fsubr
and
mov
lahf
(bad)
call
loopne
xchg
mov
sbb
mov
(bad)
clc
popa
sub
das
faddp
xchg
(bad)
inc
mov
shl
mov
mov
xchg
in
mov
sbb
push
sbb
ins
daa
inc
jmp
(bad)
call
or
enter
push
push
push
xchg
shr
fs
jle
sbb
(bad)
fcomip
in
repnz
pusha
faddp
inc
rcr
inc
(bad)
sbb
xor
pop
jg
scas
call
std
sbb
test
inc
push
inc
cld
(bad)
(bad)
call
into
cld
or
mov
es
fidiv
sbb
fadd
rol
or
xor
fnstcw
je
mov
neg
(bad)
out
cli
jmp
xchg
test
test
jecxz
cli
scas
adc
or
cdq
cmp
pop
loope
out
(bad)
(bad)
(bad)
call
push
sbb
jge
leave
je
jecxz
popa
out
mov
and
shr
pop
out
(bad)
fst
jmp
and
mov
mov
push
mov
cmp
(bad)
dec
outs
xchg
not
push
in
mov
jmp
ins
push
(bad)
fucomip
mov
jmp
jo
cld
or
call
ret
cmc
scas
sbb
(bad)
dec
push
loope
imul
sub
and
or
mov
push
pop
cmps
push
inc
add
add
jge
or
clc
cwde
retf
(bad)
(bad)
ficomp
in
shl
mov
lods
inc
in
pop
and
lods
popf
(bad)
je
sar
mov
xchg
mov
sub
jmp
lahf
or
pop
mov
(bad)
(bad)
(bad)
jg
xor
arpl
neg
aad
mov
aas
cmps
xchg
push
push
jecxz
iret
(bad)
(bad)
(bad)
jmp
push
push
add
(bad)
jle
sbb
aaa
push
loopne
dec
and
push
movs
(bad)
(bad)
(bad)
(bad)
clc
(bad)
addr16
pushf
xchg
jg
mov
push
cwd
xchg
(bad)
jae
mov
inc
fdivr
push
out
rcr
or
jmp
loopne
push
push
out
push
mov
sbb
mov
pop
hlt
pop
lock
mov
gs
cld
popf
repnz
fisubr
test
pop
(bad)
(bad)
(bad)
jmp
or
retf
jnp
push
scas
dec
(bad)
xchg
ret
retf
jno
adc
inc
test
(bad)
(bad)
jg
mov
mov
pop
inc
imul
add
cs
pusha
repnz
or
jmp
stos
mov
repnz
(bad)
cmc
mov
data16
xor
xor
enter
in
(bad)
add
xor
shl
iret
js
neg
std
(bad)
(bad)
jmp
push
xchg
popf
xlat
mov
push
xchg
inc
or
les
cmp
out
std
idiv
dec
scas
data16
cmc
stos
iret
cmps
jle
mov
jg
jbe
cmc
dec
add
push
xchg
sub
mov
adc
fs
(bad)
(bad)
jmp
push
daa
(bad)
cld
mov
push
sub
sbb
sub
cwde
aam
or
ds
iret
or
cli
(bad)
dec
shl
int
pusha
aad
jo
call
push
push
mov
pop
(bad)
out
add
(bad)
(bad)
call
shl
daa
sbb
call
loopne
int
mov
xchg
out
pop
lahf
xchg
push
(bad)
(bad)
(bad)
cmp
add
push
mov
sbb
rcl
xchg
ret
mov
in
movs
(bad)
(bad)
(bad)
call
jbe
mov
dec
ret
xchg
cvtps2pd
add
sbb
(bad)
(bad)
(bad)
jmp
call
mov
and
arpl
mov
test
mov
das
rol
icebp
outs
cli
(bad)
cld
xor
mov
adc
lds
pop
mov
push
std
outs
frstpm(287
dec
dec
call
or
jg
(bad)
clc
adc
nop
dec
arpl
add
mov
movs
mov
pop
sub
xchg
pusha
push
adc
aad
push
jge
rep
ficom
pop
adc
retf
push
call
fadd
ja
sub
xchg
lahf
pop
inc
adc
inc
cmp
icebp
clc
pushf
scas
(bad)
(bad)
push
fs
dec
ins
ds
aad
cmp
add
mov
xchg
call
(bad)
mov
sbb
ret
ret
es
ret
mov
dec
aas
outs
clc
(bad)
(bad)
mov
fadd
add
fild
add
mov
lahf
lods
ss
pusha
mov
(bad)
(bad)
(bad)
call
cdq
outs
push
lock
and
adc
(bad)
out
xchg
xchg
fnstenvw
mov
(bad)
and
cwde
or
(bad)
call
add
cli
add
mov
sub
sbb
fwait
leave
lock
jg
call
les
mov
cs
(bad)
out
push
cdq
(bad)
(bad)
dec
dec
enter
movs
aam
imul
out
mov
cdq
xchg
and
fdivr
dec
clc
imul
sub
clc
sbb
add
xchg
arpl
frstor
(bad)
(bad)
call
mov
arpl
jmp
inc
ret
test
sar
in
(bad)
enter
(bad)
(bad)
jl
clc
hlt
repz
je
xlat
imul
jmp
push
sahf
ret
cmc
add
jl
int3
lock
(bad)
call
sbb
enter
int3
fisub
cwde
add
das
mov
test
pop
mov
outs
pop
enterw
xchg
data16
scas
daa
out
(bad)
arpl
(bad)
inc
fcmovnb
std
(bad)
call
push
jae
mov
ss
sbb
mov
add
pusha
(bad)
(bad)
call
cmp
clc
push
mov
lods
mov
pop
les
shr
cli
outs
cmps
hlt
call
(bad)
pop
into
mov
inc
inc
out
push
pop
ror
push
cld
or
mov
in
into
sbb
add
bnd
mov
repz
lahf
ins
test
mov
(bad)
jp
lea
outs
(bad)
push
stos
outs
cld
inc
cli
mov
mov
pop
add
fstp
xor
push
(bad)
(bad)
(bad)
scas
push
xchg
add
jmp
sar
cmp
mov
jle
mov
xor
sahf
dec
xor
(bad)
sub
mov
add
cwde
jl
mov
scas
(bad)
(bad)
(bad)
inc
movs
fwait
jmp
xchg
dec
cld
cmps
cmc
jno
data16
jp
mov
inc
add
leave
(bad)
call
std
adc
or
cld
(bad)
cmp
jmp
or
loope
call
push
ins
nop
lds
mov
jl
mov
push
fstp
int3
lds
pushf
pop
ficom
cli
cmp
hlt
xor
lods
fidiv
test
scas
jle
(bad)
(bad)
(bad)
push
popa
(bad)
xor
psubq
sbb
sub
pop
cmp
js
xchg
ins
shl
call
(bad)
(bad)
jmp
inc
mov
(bad)
fstp
inc
mov
out
popa
repnz
adc
mov
fisubr
jnp
mov
fcomp
cmp
ins
mov
push
sbb
aam
mov
(bad)
jmp
push
or
mov
mov
in
enter
pop
and
cli
(bad)
jg
jl
add
jns
int
into
cwde
mov
xor
or
or
mov
ss
daa
push
jmp
add
div
ss
(bad)
(bad)
(bad)
call
idiv
adc
mov
ret
scas
lds
sbb
enter
arpl
jmp
(bad)
jmp
and
inc
popa
int
fneni(8087
dec
les
(bad)
std
neg
jecxz
push
pop
sar
(bad)
mov
mov
add
mov
push
(bad)
mov
xchg
jno
inc
push
xchg
inc
cld
jbe
test
je
icebp
std
pop
xchg
cli
xor
push
dec
push
fisubr
(bad)
outs
cli
call
fisubr
js
mov
sti
add
and
in
jb
std
(bad)
jmp
add
in
pop
movs
fdiv
mov
jmp
imul
cs
loope
sub
frstor
in
mov
sub
cdq
(bad)
(bad)
(bad)
inc
ret
jmp
repnz
loop
jg
iret
lock
sbb
pop
stc
enter
jp
add
mov
dec
adc
fs
lds
shr
pop
sbb
jl
sti
pop
cld
rcl
and
loope
enter
cdq
inc
call
in
(bad)
dec
imul
pop
xchg
hlt
inc
cld
icebp
mov
fnstcw
pop
movs
adc
(bad)
(bad)
(bad)
jmp
jnp
shl
pop
clc
out
sub
sub
xchg
repz
js
mov
mov
jno
jmp
movs
inc
pop
imul
(bad)
mov
stc
arpl
stc
jmp
fdiv
(bad)
(bad)
(bad)
jmp
retf
xor
or
rcl
dec
jmp
pop
adc
adc
inc
fist
dec
call
adc
jl
add
(bad)
call
(bad)
jge
add
in
sti
push
in
cli
cmp
push
pop
mov
(bad)
(bad)
call
mov
push
lea
cld
add
pop
dec
jns
xchg
mov
inc
jmp
ins
retf
cwde
cwde
pop
test
sbb
stc
popf
lock
ret
(bad)
inc
jae
imul
lahf
sbb
mov
test
push
or
pop
dec
ins
push
sbb
clc
mov
push
pop
and
(bad)
dec
dec
cs
ins
push
mov
push
cmp
(bad)
dec
adc
push
test
mov
cmp
idiv
mov
dec
std
in
push
das
out
aam
das
loop
mov
sub
out
and
(bad)
(bad)
(bad)
jmp
(bad)
out
lods
inc
inc
pop
adc
jp
pop
sub
gs
in
(bad)
jl
fs
cmc
fild
and
enter
jge
and
(bad)
(bad)
(bad)
(bad)
jl
push
aad
in
and
mov
pusha
shl
xor
mov
int3
je
pop
std
(bad)
jmp
add
in
sti
(bad)
retf
pop
sub
(bad)
imul
jg
ins
lods
gs
push
or
or
add
or
mov
sti
(bad)
call
out
pop
nop
jmp
lods
mov
push
xor
add
add
aas
popf
aaa
std
(bad)
dec
add
outs
mov
inc
data16
fs
cmp
push
stos
lods
xchg
(bad)
push
xchg
xor
mov
push
ss
retf
mov
not
cmp
jbe
add
xchg
sbb
pop
or
jle
jmp
nop
imul
imul
add
fdiv
daa
jmp
stos
clc
fidivr
hlt
data16
adc
outs
cmp
in
lea
mov
int
xchg
mov
push
mov
fidivr
call
mov
cli
inc
dec
div
pop
and
sub
pop
and
xchg
(bad)
mov
ins
(bad)
jle
inc
leave
jle
(bad)
push
repz
inc
in
xchg
add
cld
mov
lods
(bad)
out
push
jmp
add
xor
(bad)
call
pop
xor
mov
out
retf
lods
fidiv
jl
(bad)
out
ja
out
call
push
mov
dec
mov
into
call
mov
inc
out
(bad)
lds
data16
mov
out
push
mov
jmp
xchg
xchg
mov
pop
mov
call
inc
dec
jecxz
test
jp
mov
push
push
nop
pop
les
xchg
dec
fnstcw
adc
push
or
out
mov
(bad)
es
stc
imul
adc
(bad)
jmp
lahf
dec
inc
and
mov
mov
jbe
retf
fcom
fwait
(bad)
(bad)
(bad)
jmp
les
out
into
scas
movs
push
pusha
mov
dec
xor
icebp
out
outs
and
mov
aaa
pop
pushf
inc
push
adc
add
clc
sbb
mov
lock
mov
push
fwait
lods
pop
hlt
jmp
sbb
pop
(bad)
fisub
push
ins
sub
jle
daa
adc
xchg
fistp
imul
(bad)
repz
(bad)
(bad)
call
jmp
ror
jns
mov
pop
jae
lods
dec
call
fwait
rcr
inc
mov
shl
mov
mov
pop
(bad)
jmp
outs
fsub
les
inc
xchg
int
shr
mov
loope
(bad)
(bad)
cld
call
les
shr
xchg
xor
inc
jb
jno
leave
mov
sbb
out
push
call
add
aam
leave
cld
fdecstp
js
js
or
inc
jmp
sub
(bad)
pop
adc
adc
inc
jecxz
push
mov
jge
jns
daa
mov
dec
test
outs
cmc
pop
jbe
(bad)
(bad)
(bad)
call
pop
leave
lds
sub
shl
xlat
mul
dec
add
sbb
addr16
(bad)
(bad)
(bad)
cld
xchg
ucomiss
push
push
cmp
mov
vpminub
(bad)
(bad)
dec
dec
fstp
scas
cmp
jno
dec
jbe
shl
push
pop
pop
(bad)
in
(bad)
(bad)
(bad)
call
pop
xchg
sub
cld
lods
pop
inc
mov
out
push
sub
movs
loop
sub
mov
(bad)
(bad)
call
add
cmp
add
push
in
inc
jns
mov
mov
(bad)
jg
sbb
out
jbe
xor
scas
add
mov
(bad)
jbe
and
(bad)
fcomip
inc
sahf
sti
call
xchg
mov
mov
aaa
mov
or
aad
(bad)
dec
sub
(bad)
jg
aas
daa
and
div
mov
ds
jg
jle
or
cmp
push
pusha
aam
aam
cwde
sti
mov
fwait
pop
add
das
clc
inc
hlt
jns
cmps
inc
jge
and
cmp
cwde
sar
pop
out
push
adc
ss
mov
popf
jmp
mov
jbe
pop
mov
(bad)
(bad)
(bad)
inc
adc
pop
mov
pop
mov
je
loop
retf
mov
vpaddd
rol
jmp
(bad)
cmp
(bad)
(bad)
jmp
xchg
mov
add
xchg
imul
mov
xor
ins
pop
dec
scas
rol
mov
std
(bad)
dec
push
and
lods
sbb
inc
shr
dec
push
hlt
inc
jb
(bad)
(bad)
call
ficomp
adc
jnp
pusha
hlt
mov
shr
mov
in
sub
repnz
mov
and
add
(bad)
push
popf
push
push
pop
mov
xchg
dec
cmp
adc
jl
jmp
jl
outs
ror
sub
push
mov
retf
sub
and
leave
fs
(bad)
call
mov
in
aas
cmp
inc
mov
cwd
retf
out
(bad)
call
jne
aas
clc
(bad)
push
or
daa
mov
popf
cmc
push
sbb
xchg
mov
pop
sbb
fdivrp
(bad)
(bad)
inc
retf
add
stos
adc
nop
stos
xchg
push
cmc
cli
into
mov
lock
fstp
ja
cli
(bad)
(bad)
call
mov
cdq
add
mov
cs
dec
cmp
movs
icebp
fcomip
das
ret
jle
(bad)
dec
mov
push
mov
ja
mov
mov
cmp
ja
(bad)
test
in
mov
test
inc
fdivr
(bad)
mov
mov
shl
sahf
shr
retf
cmp
in
sub
jle
inc
test
retf
stos
or
xor
loopne
cdq
aaa
cld
(bad)
mov
jg
push
gs
fwait
add
push
mov
fistp
adc
(bad)
push
stc
dec
pop
ja
stos
inc
or
std
leave
clc
rol
ret
jmp
popa
push
ud0
inc
jmp
pushf
aad
loop
adc
lea
cs
in
and
(bad)
fcomip
call
jl
sbb
not
in
(bad)
(bad)
cmps
out
jle
sbb
fisttp
(bad)
(bad)
(bad)
call
ret
pop
(bad)
xchg
addr16
sub
mov
sub
jb
loopne
ss
mov
(bad)
(bad)
push
adc
cmp
int3
ror
nop
cmp
or
cmp
(bad)
(bad)
(bad)
push
sbb
adc
dec
dec
pop
and
jno
retf
sub
les
(bad)
dec
cld
(bad)
fist
add
jb
sbb
lds
push
sar
aas
test
jp
xor
std
ret
test
xor
(bad)
(bad)
push
(bad)
cwde
mov
and
out
out
xor
aad
shl
jl
shl
bnd
(bad)
(bad)
(bad)
jmp
sbb
js
fwait
sbb
jle
sbb
repnz
adc
repz
loopne
jmp
mov
sbb
cmp
lock
(bad)
inc
mov
jp
xchg
std
and
add
lods
repz
sbb
sbb
(bad)
mov
movs
pop
sub
mov
fstp
stos
mov
cli
sub
mov
or
xor
int
mov
or
(bad)
fcomip
clc
(bad)
mov
mov
dec
pop
push
pop
mov
sbb
fidivr
(bad)
(bad)
(bad)
jge
out
aam
push
inc
loope
inc
jecxz
std
mov
test
ffree
sub
imul
xchg
fwait
dec
in
sar
(bad)
dec
je
jg
or
aad
(bad)
call
cmc
sbb
inc
sti
sar
rcl
push
inc
dec
push
rol
(bad)
(bad)
jg
cmp
shl
int3
mov
xchg
test
js
inc
gs
lods
jge
sbb
sbb
(bad)
jg
repnz
sub
lahf
xchg
xchg
sbb
(bad)
xor
pop
xchg
xor
pop
(bad)
call
xor
jns
or
(bad)
push
hlt
(bad)
mul
jo
int
push
inc
mov
add
mov
and
ins
data16
add
xchg
(bad)
(bad)
(bad)
call
clc
cmp
cwde
repz
inc
push
mov
stc
mov
je
sahf
loopne
push
int
std
mov
mov
mov
addr16
mov
inc
jmp
jp
call
(bad)
xchg
daa
(bad)
mov
push
out
dec
or
movs
xchg
inc
nop
lds
inc
lds
xchg
sub
sub
(bad)
jg
test
pop
pop
inc
jl
or
test
cmp
gs
out
adc
add
mov
cmps
ja
int
sub
pusha
adc
ror
jmp
clc
(bad)
jg
push
sub
and
mov
sub
jnp
fcom
mov
jmp
(bad)
(bad)
push
(bad)
lock
add
push
inc
push
adc
fcmovb
iret
dec
mov
hlt
(bad)
inc
call
jb
push
add
xor
dec
popf
pop
push
sub
data16
cmc
ud0
(bad)
jmp
in
std
popa
fdivr
inc
pop
and
outs
loopne
cld
mov
push
stos
sub
mov
(bad)
(bad)
(bad)
call
mov
aas
jg
sub
or
loopne
gs
xchg
xchg
scas
pop
pop
loope
(bad)
inc
clc
das
xchg
mov
ds
mov
jl
mov
(bad)
mov
xchg
mov
adc
call
fld
fisubr
xor
push
mov
mov
mov
sub
(bad)
call
push
xchg
int
rol
cmp
fimul
test
inc
sbb
push
and
adc
mov
fstp
fnsave
sti
scas
pop
arpl
(bad)
(bad)
(bad)
out
dec
dec
enter
mov
mov
add
adc
adc
arpl
mov
outs
(bad)
(bad)
(bad)
(bad)
fst
xor
jle
sahf
dec
mov
retf
pop
stos
mov
(bad)
int
ds
jo
push
mov
fsqrt
sub
jmp
(bad)
dec
pop
jmp
mov
jmp
in
and
mov
sub
js
stos
or
lods
sbb
(bad)
(bad)
jmp
mov
fwait
cwde
fs
mov
stos
xor
icebp
adc
popf
xchg
xor
in
cli
jmp
dec
pop
sub
mov
stos
(bad)
(bad)
call
mov
loope
into
call
mov
sub
(bad)
(bad)
(bad)
push
cmp
add
out
dec
(bad)
daa
pop
dec
hlt
cmp
sub
fxch
jne
daa
les
xchg
(bad)
jg
dec
std
sbb
icebp
inc
jl
lock
sub
mov
mov
call
loopne
xlat
aas
and
ss
fs
or
pop
push
(bad)
(bad)
(bad)
(bad)
jnp
xchg
xchg
xor
loopne
outs
xor
sbb
int3
push
(bad)
and
(bad)
jg
lock
popa
repz
(bad)
mov
mov
mov
pushf
push
pop
cmp
jo
xchg
add
push
and
xlat
cmp
(bad)
(bad)
cmp
stc
bound
pop
jne
fsincos
enter
test
jmp
in
daa
dec
in
imul
mov
stos
and
imul
ret
nop
mov
jle
inc
es
aaa
outs
sub
push
ins
arpl
(bad)
(bad)
(bad)
dec
fdiv
xor
std
call
pusha
mov
cmps
cmp
into
mov
and
jg
movs
xchg
mov
shr
or
(bad)
(bad)
jg
xchg
(bad)
jg
mov
lahf
rol
or
cmps
sbb
out
ret
std
icebp
int3
loopne
cld
(bad)
(bad)
(bad)
(bad)
cld
das
add
popf
dec
ret
mov
xor
fcomi
call
dec
or
div
(bad)
jecxz
mov
call
call
scas
daa
popf
rol
and
lods
sbb
rcl
(bad)
in
cmp
(bad)
(bad)
dec
jno
sbb
mov
jns
cmp
add
push
rol
(bad)
jmp
mov
mov
push
jge
das
sub
or
mov
ss
sahf
icebp
pop
aam
fidivr
add
and
es
xchg
shl
leave
dec
fs
xor
inc
repz
push
loop
(bad)
call
push
jp
cmp
pop
cld
pop
jecxz
std
push
out
sbb
popa
sbb
(bad)
(bad)
fsubr
(bad)
cmc
xor
push
iret
cmps
add
call
xchg
xchg
push
or
mov
push
xchg
add
(bad)
call
push
dec
inc
pop
leave
ins
mov
lea
add
jmp
scas
jle
(bad)
in
pop
lock
in
popa
in
int3
sub
(bad)
or
(bad)
scas
mov
fdiv
push
jbe
movs
aas
in
sar
ret
fcmovne
lock
outs
in
cmp
cmp
out
dec
ret
(bad)
mov
pop
fdivr
fisttp
jg
das
(bad)
push
pop
outs
sub
and
(bad)
(bad)
jmp
jp
out
pop
add
retf
inc
sbb
mov
es
sbb
(bad)
inc
out
fcmovb
adc
call
mov
xor
or
inc
push
jmp
ja
or
or
xchg
test
(bad)
(bad)
(bad)
dec
fimul
mov
dec
mov
inc
mov
clc
jl
nop
adc
shl
aad
xchg
pop
push
test
fwait
inc
(bad)
das
xchg
rol
mov
enter
retf
inc
iret
inc
xor
mov
gs
cmps
pop
jecxz
(bad)
push
bound
ins
mov
push
mov
fist
dec
xchg
(bad)
jecxz
cmps
push
cld
(bad)
call
sar
rol
pop
push
mov
xchg
test
cmp
mov
std
(bad)
(bad)
call
les
test
cmp
int
jno
cmova
gs
push
push
fld
outs
clc
mov
add
jmp
and
sub
out
in
mov
(bad)
inc
xchg
int
xchg
pop
js
retf
adc
dec
mov
mov
(bad)
call
std
pop
jmp
xor
out
cmp
pop
icebp
fistp
push
sub
daa
(bad)
(bad)
hlt
sahf
js
movs
adc
ja
mov
(bad)
(bad)
(bad)
jmp
stos
xor
out
jge
arpl
fimul
mov
sub
cs
loope
aaa
jg
(bad)
(bad)
jp
fucomp
cmp
fisub
cli
bound
inc
and
imul
jg
or
xor
xchg
in
lock
cmp
pop
xor
add
jns
clc
jo
xor
hlt
sub
call
test
inc
pop
dec
enter
cmp
adc
push
lds
stos
sub
aaa
mov
aam
push
fdiv
or
loope
clc
in
sbb
call
push
mov
in
dec
ror
or
sub
rol
(bad)
(bad)
dec
sbb
ja
inc
dec
and
out
ins
mov
mov
pop
mov
push
in
cmps
or
and
pop
rol
ja
push
mov
dec
popf
adc
fcomp
(bad)
jge
mov
xchg
mov
rol
ja
inc
ror
inc
jns
out
out
inc
cdq
cmc
adc
sub
cld
rcr
enter
aad
sub
addr16
jecxz
push
test
out
mov
outs
outs
or
(bad)
(bad)
mov
mov
ss
dec
add
adc
(bad)
jno
cmp
push
cmp
pop
mov
movs
(bad)
loopne
pop
ds
cdq
inc
lods
cmp
call
std
inc
lods
xchg
xor
and
stos
nop
push
pusha
jl
sub
addr16
(bad)
(bad)
(bad)
(bad)
push
popa
or
ror
xor
adc
adc
fidivr
iret
in
mov
pop
mov
or
inc
push
inc
scas
push
add
xchg
sub
sti
retf
cld
push
or
sub
lds
sar
(bad)
(bad)
out
rcl
ja
dec
pusha
mov
ret
push
mov
outs
or
jle
pop
cwde
ins
hlt
(bad)
(bad)
jmp
pop
mov
stc
mov
test
and
inc
pop
outs
pop
jnp
or
clc
jle
sbb
inc
fisub
ja
(bad)
add
jecxz
mov
jns
(bad)
(bad)
jmp
dec
push
cdq
fdivrp
add
shl
sub
jmp
std
push
jo
loope
bound
mov
imul
ds
jge
jmp
lods
mov
sar
popf
or
xlat
or
jb
pusha
(bad)
mov
mov
mov
jno
sub
push
lods
sub
sti
cmp
xchg
xchg
cmc
(bad)
(bad)
(bad)
jmp
or
mov
inc
std
and
sbb
in
fdivr
mov
popa
int3
(bad)
(bad)
(bad)
call
out
jno
cmp
ja
adc
fidivr
or
call
jbe
and
scas
adc
pop
icebp
(bad)
jnp
mov
pop
mov
out
in
rcl
xchg
push
add
in
outs
mov
pop
mov
sbb
cld
add
jecxz
and
and
in
(bad)
dec
test
pop
in
ret
stc
mov
sar
pop
cmp
pop
movs
mov
(bad)
(bad)
(bad)
call
(bad)
(bad)
fisttp
not
xor
jmp
push
dec
daa
xor
pop
xchg
retf
(bad)
jmp
cmps
div
test
sbb
stos
push
inc
mov
clc
call
neg
ss
mul
mov
adc
add
out
out
mov
int3
jmp
jg
and
add
imul
(bad)
(bad)
(bad)
mov
inc
sahf
pop
out
inc
sub
dec
sub
push
push
pusha
xor
mov
ins
mov
and
pusha
repnz
addr16
push
mov
(bad)
(bad)
jg
les
mov
or
push
pusha
jnp
sub
bound
int3
pop
jl
mov
lods
xchg
outs
popf
fist
xchg
cmp
sbb
(bad)
clc
pop
or
jl
sbb
test
cmp
jp
cmp
cs
pop
popf
cmps
or
(bad)
jmp
jae
xor
call
sbb
jle
cmc
adc
push
dec
push
sti
(bad)
(bad)
inc
mov
sbb
into
bound
jecxz
lea
xlat
test
pushf
and
jge
or
mov
pushf
(bad)
retf
inc
ins
dec
or
(bad)
push
push
push
or
(bad)
jo
int3
jl
jle
in
cmp
nop
out
aaa
add
jg
mov
push
lods
push
push
lea
pusha
loop
test
inc
cmps
call
call
ret
mov
xchg
test
and
sub
pop
enter
mov
int
bound
xchg
bound
in
stc
popf
shl
inc
push
shl
std
jmp
mov
in
mov
inc
lock
dec
fild
jg
(bad)
inc
push
and
ret
loop
xor
sbb
jne
mov
sbb
push
(bad)
(bad)
(bad)
dec
sub
rol
add
add
jbe
(bad)
ins
call
pop
cmp
fisttp
(bad)
(bad)
dec
fcom
and
and
add
mov
retf
lds
pop
ss
jecxz
xor
(bad)
(bad)
jmp
pusha
cld
push
repz
int3
ret
push
jmp
sbb
faddp
xchg
jne
fwait
(bad)
das
push
sub
(bad)
(bad)
(bad)
jmp
sysexit
mov
(bad)
or
(bad)
not
cdq
fcmove
sbb
ret
jne
jg
(bad)
call
lea
xchg
mov
mov
sub
jb
in
aaa
std
xchg
and
pop
sub
addr16
cdq
push
ret
rcl
jecxz
(bad)
jg
cs
cmp
bound
sub
add
(bad)
(bad)
(bad)
in
mov
call
popa
pop
jae
sbb
pop
adc
outs
inc
pusha
mov
inc
call
lahf
or
popa
aam
pop
adc
in
jns
(bad)
(bad)
(bad)
mov
mov
stos
mov
ficomp
jns
jo
lock
dec
(bad)
(bad)
(bad)
inc
movs
mov
or
(bad)
ror
cmc
push
xor
pusha
out
ds
push
(bad)
jg
or
mov
data16
or
or
movs
shl
(bad)
push
inc
adc
fisubr
mov
ds
je
push
add
xchg
inc
mov
mov
(bad)
inc
adc
outs
addr16
test
dec
pop
sti
jecxz
pop
jmp
loopne
ds
in
movs
pop
pop
xlat
adc
inc
adc
aad
lock
or
scas
add
add
(bad)
mov
not
(bad)
jg
jbe
mov
in
mov
sbb
movs
(bad)
in
cmp
nop
loopne
sar
in
popa
push
(bad)
cmp
push
(bad)
jl
mov
jb
xchg
sub
pop
and
push
aam
(bad)
mov
mov
(bad)
clc
(bad)
mov
push
into
jecxz
ret
rep
popf
pop
lods
mov
mov
hlt
cmc
shl
xor
hlt
cmps
jmp
cmp
mov
jae
loope
enter
mov
dec
or
inc
mov
xchg
ins
mov
dec
jl
add
(bad)
call
pusha
fst
xor
inc
dec
cmc
cli
es
jecxz
test
add
and
jmp
scas
test
push
icebp
cmc
sbb
jmp
push
int3
cmc
pop
lock
inc
pop
nop
push
daa
mov
lods
int3
fs
mov
lods
gs
(bad)
call
out
mov
jp
jmp
out
jg
(bad)
mov
mov
(bad)
jg
(bad)
call
jnp
xchg
adc
pop
bound
(bad)
pop
repz
xor
out
inc
lods
xor
xchg
xchg
(bad)
xor
xchg
dec
sub
and
push
cmp
call
rcl
retf
push
(bad)
dec
jmp
adc
shl
push
xchg
xchg
lock
cmp
(bad)
call
inc
jns
data16
dec
lods
jmp
inc
jns
sub
mov
(bad)
call
test
fnstcw
shr
pop
mov
or
and
loop
and
mov
aam
mov
mov
mov
aam
mov
push
pop
jno
loopne
add
out
ss
adc
movs
cmp
mov
jl
data16
out
in
(bad)
(bad)
jmp
sahf
div
adc
push
stos
jp
cmc
ins
mov
add
(bad)
call
mov
fld
or
mov
jl
movs
xor
push
mov
dec
outs
cmps
shl
adc
ins
and
ins
pushf
imul
shr
aad
test
iret
movs
cmps
or
shr
mov
retf
push
pop
outs
aas
push
retf
iret
xchg
leave
or
in
mov
(bad)
mov
cmp
push
cmc
pusha
jmp
sbb
or
push
or
mov
lea
xor
jmp
jb
sub
add
and
adc
dec
mov
adc
xor
mov
arpl
sub
fld
movs
enter
and
fadd
(bad)
call
inc
mov
add
ja
cwde
call
sti
sub
adc
pusha
adc
outs
xor
jg
lahf
test
xchg
mul
aas
inc
dec
add
adc
cmp
mov
mov
push
std
lea
dec
and
mov
dec
xchg
add
ss
pusha
ret
pop
push
ret
xchg
mov
add
or
sub
push
sbb
fiadd
(bad)
fadd
and
shr
lock
out
push
test
sbb
ret
sahf
das
js
inc
adc
xor
pop
inc
daa
mov
jbe
cmps
xchg
xor
outs
cmp
mov
stc
push
test
jmp
xor
xor
cmp
mov
inc
mov
xor
add
xor
sub
jmp
ss
gs
(bad)
adc
xor
cmp
xor
inc
mov
inc
inc
xor
sbb
jo
or
inc
iret
pop
sub
movs
nop
inc
iret
adc
or
and
int
aad
push
scas
and
cmp
and
iret
mov
inc
pusha
cdq
and
mov
les
and
mov
(bad)
aas
(bad)
(bad)
(bad)
(bad)
fdivr
sti
mov
sub
sub
(bad)
sub
in
shr
(bad)
(bad)
(bad)
dec
push
retf
mov
sub
inc
dec
push
retf
or
int
xor
add
inc
jbe
cs
cmp
pop
mov
xor
add
enter
cmp
imul
(bad)
jae
cmp
xor
repz
addr16
add
push
add
mov
sub
add
push
(bad)
imul
fadd
inc
inc
and
or
xchg
test
jg
sbb
xchg
xchg
mov
inc
add
inc
nop
sub
ret
inc
mov
(bad)
cmp
outs
or
xor
sbb
adc
(bad)
sub
or
mov
ror
ret
add
in
pop
push
mov
shr
je
into
inc
mov
jg
fwait
test
mov
xor
and
and
sti
sbb
loopne
push
movs
or
rol
adc
fiadd
and
cmps
push
xor
add
mov
into
xor
inc
stos
cdq
aaa
dec
aad
adc
(bad)
add
xor
jbe
or
out
mov
mov
adc
cmp
xchg
jns
(bad)
(bad)
(bad)
dec
jo
push
movs
mov
adc
lock
aaa
bsf
std
cmp
dec
add
or
(bad)
(bad)
inc
jecxz
cwde
sar
retf
push
cmps
loope
popa
and
movs
sub
adc
loope
popa
mov
(bad)
(bad)
fadd
(bad)
icebp
ja
lea
repnz
inc
sbb
addr16
jl
icebp
out
cli
popa
neg
push
ins
cmp
(bad)
(bad)
(bad)
call
mov
inc
add
mov
jg
stc
retf
push
ror
add
jns
movs
push
(bad)
(bad)
(bad)
jmp
and
pop
and
cmp
int3
retf
repz
scas
adc
std
push
add
add
xor
int
add
test
pop
adc
loop
jg
or
dec
pop
out
ins
(bad)
cmc
xor
ret
or
sub
loopne
das
iret
jnp
cwde
(bad)
(bad)
(bad)
jmp
xor
inc
pop
inc
cmc
aas
loop
sub
xor
jmp
mov
mov
imul
lahf
out
aam
jno
pop
clc
inc
pop
and
in
dec
inc
add
sbb
outs
fisub
cwde
pop
aad
and
leave
aam
lock
mov
fstp
cmp
call
(bad)
(bad)
(bad)
jmp
push
dec
and
cld
xchg
shr
push
sub
xor
or
mov
std
mov
(bad)
call
jo
jno
adc
jns
fcomp
jns
push
push
push
jbe
scas
(bad)
(bad)
(bad)
call
leave
sti
les
retf
mov
add
mov
cld
(bad)
(bad)
(bad)
cmp
(bad)
aad
jae
hlt
cdq
mov
ds
shr
and
fnstcw
stc
mov
xor
or
mov
mov
sbb
mov
in
je
jl
(bad)
(bad)
jmp
cmp
call
fwait
xor
pop
lea
cmp
mov
xchg
mov
push
push
(bad)
mov
xor
pushf
out
lock
push
mov
ret
sbb
call
cld
(bad)
mov
retf
icebp
movs
cmp
mov
dec
mov
pop
sub
repnz
loope
mov
(bad)
call
sbb
(bad)
jge
push
mov
enter
jecxz
cmp
xlat
mov
sub
(bad)
(bad)
fbld
stos
mov
std
add
ss
out
sbb
cmp
xchg
in
mov
out
(bad)
out
cli
(bad)
jmp
pusha
jmp
adc
movs
xchg
test
mov
mov
cmp
pusha
call
mov
and
fdiv
(bad)
inc
xor
js
fisub
adc
mov
dec
in
fsub
pop
push
jg
stos
inc
pop
pop
neg
xor
or
mov
push
and
(bad)
(bad)
(bad)
call
je
test
xor
mov
loop
jns
jne
aas
hlt
(bad)
push
push
fcomp
adc
add
cld
(bad)
add
mov
add
(bad)
mov
mov
outs
pop
jle
adc
jae
push
cmp
lea
mov
repz
adc
jg
(bad)
(bad)
mov
push
stos
xchg
cld
adc
test
jmp
leave
repnz
dec
xchg
push
sbb
aaa
cmp
or
(bad)
dec
push
sbb
add
inc
add
(bad)
(bad)
(bad)
jg
or
cmp
(bad)
call
sub
sbb
cmp
imul
call
mov
scas
sbb
xor
stos
inc
rol
cmps
add
cmp
(bad)
(bad)
inc
imul
into
(bad)
fisub
pop
sbb
movs
dec
and
js
(bad)
jg
mov
sbb
ss
ds
push
in
(bad)
call
fnstcw
data16
jno
add
push
(bad)
(bad)
fcomip
enter
or
xlat
dec
icebp
sub
xrelease
stc
cli
(bad)
jg
(bad)
jge
ffreep
das
adc
bound
push
ss
das
pop
retf
sub
or
push
jbe
fcomip
adc
jne
mov
pushf
popa
sbb
(bad)
cs
pop
das
or
not
pop
in
cmp
scas
push
call
(bad)
cld
push
cli
jecxz
lea
inc
enter
ins
addr16
xor
aam
int3
sub
fwait
pop
or
add
stos
sbb
shld
pusha
or
test
sub
cmp
into
movups
lahf
jmp
clc
std
leave
and
call
pop
dec
jmp
in
or
push
mov
sbb
pop
ret
jb
(bad)
jmp
(bad)
jle
add
mov
je
lock
out
xor
mov
out
(bad)
(bad)
(bad)
(bad)
mov
pop
adc
jnp
out
xchg
cmp
ror
int3
stos
lds
and
(bad)
dec
test
mov
lock
dec
adc
add
sbb
jbe
bound
(bad)
jno
cmp
(bad)
gs
(bad)
pop
jb
or
jbe
cmp
inc
idiv
(bad)
call
pop
test
rcr
mov
jo
inc
fstp
les
mov
fdivr
(bad)
(bad)
call
iret
imul
sub
mov
mov
push
or
pop
fnstsw
cdq
lds
mov
ret
or
into
dec
test
dec
push
pop
mov
fldenv
mov
(bad)
fldz
sbb
mov
in
and
loope
retf
into
(bad)
(bad)
call
jmp
hlt
test
(bad)
xchg
bound
call
pop
add
inc
pop
pop
imul
xchg
std
mov
popa
aam
mov
inc
sbb
movs
push
jbe
mov
push
cmp
fisub
ss
out
push
fdiv
loope
jns
jns
jns
out
cmps
(bad)
(bad)
fbstp
adc
mov
retf
hlt
loopne
lea
ds
aad
jmp
pop
in
pusha
pop
jmp
dec
or
or
mov
test
sbb
fisubr
push
ins
xchg
(bad)
cdq
adc
mov
jg
dec
jne
mov
inc
sbb
xchg
fmul
loope
je
lea
adc
ja
call
std
cmp
fimul
int3
mov
movs
loopne
cmps
stc
loopne
(bad)
dec
lea
jmp
add
popa
or
push
xor
idiv
ret
jo
jb
push
mov
(bad)
(bad)
(bad)
fbld
in
dec
test
add
add
mov
bound
inc
or
jmp
ror
(bad)
fbstp
shr
call
add
add
mov
mul
xor
(bad)
(bad)
(bad)
jmp
sub
(bad)
aam
ins
pop
push
(bad)
or
mov
xchg
add
mov
add
sub
scas
in
nop
sub
pushf
jne
ja
aad
ss
mov
test
js
in
sbb
mov
cmp
test
inc
inc
loop
mov
pusha
neg
sub
(bad)
(bad)
jg
mov
fnstenv
mov
(bad)
push
loop
(bad)
mov
mov
rol
scas
mov
xchg
push
enter
inc
cli
or
cld
(bad)
fmul
cmp
lahf
mov
sbb
je
jbe
or
xor
or
icebp
cld
cld
sbb
add
and
cmp
xchg
cs
push
fimul
push
imul
out
div
inc
jmp
sbb
data16
jno
mov
fnstcw
imul
mov
or
scas
jb
pushf
mov
shl
scas
loopne
mov
sub
das
cli
(bad)
call
std
fsub
jnp
push
mov
mov
(bad)
fnstsw
clc
mov
(bad)
(bad)
js
sbb
aas
fcom
in
mov
xor
out
add
sub
mov
inc
xchg
mov
shl
fbstp
pop
arpl
dec
fucomip
mov
(bad)
(bad)
jmp
out
cmp
test
in
ds
lods
std
(bad)
fisub
push
daa
mov
(bad)
inc
out
gs
outs
and
dec
in
cmc
push
xor
ret
dec
inc
inc
out
retf
movs
ss
(bad)
(bad)
(bad)
(bad)
push
fst
hlt
add
adc
push
(bad)
jp
(bad)
imul
dec
add
addr16
adc
call
lds
fisubr
mov
(bad)
(bad)
(bad)
(bad)
cmp
adc
ss
mov
jbe
and
push
xchg
mov
push
pop
lds
(bad)
(bad)
(bad)
mov
sbb
mov
fwait
mov
pop
gs
ins
dec
sbb
or
adc
sti
cmp
imul
lods
pop
sub
fsubr
nop
add
(bad)
call
aam
mov
out
(bad)
shl
ret
push
(bad)
(bad)
fild
mov
sbb
jp
adc
inc
pop
cmp
arpl
(bad)
jmp
scas
(bad)
shr
test
sub
test
push
xor
mov
(bad)
jg
push
cli
mov
fiadd
push
jecxz
sub
push
mov
ins
push
ja
clc
cmp
mov
rol
mov
jno
imul
mov
sbb
(bad)
inc
cmp
mov
push
pushf
loopne
movs
cli
mov
retf
addr16
in
jge
icebp
sub
mov
xor
push
cli
jne
loop
mov
in
das
fmul
sub
jb
adc
mov
ret
sti
clc
scas
jmp
add
inc
adc
loopne
out
out
pop
mov
(bad)
(bad)
call
dec
dec
das
ror
dec
sub
rol
push
bswap
and
into
(bad)
(bad)
(bad)
jmp
mov
mov
psubq
scas
mov
dec
lods
ins
inc
ja
push
outs
dec
lds
sti
(bad)
add
push
jns
pop
xchg
(bad)
jmp
or
fdivr
in
jb
cmp
inc
cdq
lods
adc
mov
jo
xchg
inc
cmc
loop
mov
and
pop
inc
mov
in
jns
(bad)
(bad)
jmp
jg
xor
addr16
les
or
mov
movs
jmp
xor
div
(bad)
jmp
inc
xor
jmp
cmp
das
imul
inc
fstp
lahf
std
into
xor
(bad)
in
int3
sar
das
clc
ret
lock
ds
out
outs
nop
mov
minps
sub
scas
lea
movhps
mov
xchg
inc
retf
sub
or
scas
cli
(bad)
dec
mov
movd
nop
xchg
call
call
(bad)
(bad)
call
pop
mov
xchg
jnp
cmp
int
lea
or
fistp
sub
(bad)
(bad)
cmp
call
mov
ret
xchg
std
out
adc
sub
loopne
inc
dec
aaa
outs
ins
(bad)
(bad)
fcomip
(bad)
lds
sub
imul
sti
(bad)
pop
(bad)
(bad)
jmp
idiv
pop
xchg
xor
lock
cdq
gs
loope
bound
(bad)
jmp
inc
stos
nop
inc
ins
aam
stc
mov
loopne
cmps
jnp
lods
inc
dec
xor
pop
(bad)
(bad)
(bad)
dec
mov
popf
adc
xchg
aas
xchg
adc
arpl
popa
push
cdq
(bad)
ins
test
test
cli
pop
std
outs
push
call
inc
xchg
(bad)
jae
jo
xchg
cmp
ins
xchg
cwde
clc
(bad)
(bad)
push
xchg
repz
repz
iret
mov
out
mov
xchg
inc
scas
dec
call
or
adc
loopne
fsincos
sbb
sbb
xor
(bad)
(bad)
inc
jbe
scas
xlat
mov
push
retf
sbb
add
(bad)
cmps
call
pop
jno
sub
xor
out
and
not
dec
ins
ficom
outs
(bad)
mov
jnp
mov
jl
mov
bound
pcmpeqd
test
fild
cli
adc
ret
or
loop
out
in
pushf
bound
jns
sar
(bad)
(bad)
in
lods
lods
jae
jo
inc
dec
in
sub
inc
mov
je
push
pusha
push
pop
pop
hlt
in
out
icebp
jmp
mov
bound
inc
in
test
cs
dec
or
sub
mov
push
int3
daa
push
cmp
div
(bad)
(bad)
(bad)
dec
pusha
int
ins
dec
cmp
sub
or
sti
aas
xchg
pop
test
ds
jmp
leave
pop
gs
popa
pop
sbb
adc
xchg
push
add
icebp
pop
int
les
fbld
cmc
in
imul
movs
sbb
xchg
jbe
(bad)
(bad)
(bad)
call
scas
int3
dec
shl
sbb
add
retf
retf
mov
cmp
nop
inc
cmps
sub
add
dec
(bad)
(bad)
mov
loopne
jb
daa
mov
addr16
sti
ja
dec
lock
jmp
sbb
lods
xor
js
mov
dec
call
jno
pop
jb
dec
(bad)
(bad)
(bad)
call
mov
mov
ds
mov
sub
fs
sbb
dec
loop
(bad)
(bad)
fld
cli
in
int3
pop
mov
and
cmps
cmp
pop
sar
xor
inc
cs
pop
loope
(bad)
call
popf
retf
aaa
xchg
mov
xchg
dec
mov
arpl
mov
call
jb
arpl
loope
xchg
loop
idiv
test
ret
fsub
jmp
sbb
push
sub
push
sub
dec
xchg
jg
pop
dec
jl
into
call
enter
(bad)
(bad)
(bad)
push
call
dec
retf
int3
(bad)
mov
ret
fisub
outs
push
addr16
jecxz
(bad)
(bad)
(bad)
push
mov
pop
sahf
pop
mov
inc
pop
adc
out
cmp
jns
shr
inc
mov
pop
cmc
add
scas
std
mov
outs
pop
jbe
imul
out
in
cmp
cmp
dec
push
dec
sbb
push
jle
sub
jge
(bad)
cmp
test
jg
inc
(bad)
adc
fs
mov
mov
fwait
xor
icebp
enter
add
(bad)
jns
add
push
sub
xor
stos
movs
sub
sub
pop
sbb
test
pop
sar
sti
popa
fnstenv
mov
pop
cld
(bad)
(bad)
(bad)
repz
int
sbb
into
inc
sti
loope
jno
lahf
fs
(bad)
(bad)
push
xor
arpl
imul
pop
(bad)
(bad)
push
ja
jno
inc
mov
inc
mov
(bad)
(bad)
(bad)
push
inc
pop
rol
jns
mov
push
pop
sub
stc
and
dec
(bad)
(bad)
push
xchg
ret
shl
jmp
or
jle
pop
inc
adc
xor
pop
popf
div
movs
adc
(bad)
cli
fmul
mov
lods
adc
adc
sar
movlps
scas
(bad)
jg
adc
imul
lods
mov
and
(bad)
(bad)
mov
push
adc
clc
fstp
lock
pusha
lods
jge
xadd
js
popf
js
mov
(bad)
(bad)
(bad)
jmp
je
mov
mov
mov
repz
jbe
clc
xchg
fdiv
(bad)
(bad)
(bad)
cmp
lods
ja
push
dec
mov
dec
cdq
mov
fild
mov
scas
(bad)
(bad)
jg
(bad)
mov
pop
jmp
and
or
add
dec
leave
inc
js
sar
(bad)
(bad)
jge
js
shr
mov
jmp
push
aam
ficom
dec
cmp
sar
cmc
sub
lahf
out
ins
jp
jae
sbb
scas
add
push
cmp
int3
js
xchg
mov
pushf
int
jmp
xchg
(bad)
mov
cmovne
lods
cmc
cdq
sub
mov
mov
aam
(bad)
(bad)
(bad)
call
mov
push
popf
xchg
aaa
out
mov
push
dec
aad
repz
inc
adc
cmp
(bad)
es
(bad)
(bad)
(bad)
call
mov
cmp
(bad)
lahf
mov
add
sub
std
cmp
(bad)
mov
inc
out
push
fisttp
les
sub
jne
loope
ret
out
jns
or
jnp
mov
and
xchg
sub
mov
cmp
(bad)
out
jecxz
(bad)
dec
mov
das
es
ret
pusha
inc
cld
lock
sbb
pop
ret
ins
clc
jmp
pop
fisubr
inc
setne
rol
jns
mov
sti
(bad)
(bad)
(bad)
push
pop
fwait
lds
mov
mov
movs
sbb
pop
cmp
push
or
ins
dec
jnp
xor
push
xchg
arpl
clc
std
ins
push
or
lds
mov
outs
aam
out
mov
(bad)
(bad)
inc
std
ror
rol
adc
repnz
arpl
push
sub
popa
les
mov
scas
out
sub
(bad)
(bad)
cmp
int
jecxz
fwait
je
mov
xlat
inc
arpl
sub
mov
(bad)
call
(bad)
adc
in
pusha
jg
getsec
inc
es
pusha
ins
cld
imul
fdivrp
(bad)
(bad)
(bad)
std
jmp
ret
or
out
ret
repz
sub
call
inc
pop
mov
cmp
push
add
or
xor
call
pop
shl
push
je
mov
cld
cmp
mov
test
fstp
dec
pop
mov
(bad)
jg
loopne
int3
inc
ret
cmp
cmps
or
into
inc
lods
fdivr
cmps
scas
pop
dec
add
xchg
mov
test
int3
dec
cmp
jge
clc
les
popf
push
or
jne
std
loope
hlt
mov
pop
jge
dec
mov
xchg
fs
inc
mov
dec
sar
lock
(bad)
jmp
xchg
sbb
in
and
lds
fistp
pop
and
iret
or
or
call
xchg
push
pop
ftst
imul
mov
dec
imul
(bad)
(bad)
call
data16
out
jae
inc
add
rcl
inc
loop
ins
xchg
arpl
ja
clc
pop
push
div
inc
sub
mov
mov
dec
or
jp
sub
fcomi
fadd
ficomp
fidivr
sbb
dec
mov
(bad)
push
mov
lods
adc
int
rcr
pop
pushf
jge
mov
out
in
cs
xor
stos
(bad)
(bad)
(bad)
call
stos
push
pop
sbb
push
loope
jle
sbb
adc
jns
aaa
xor
jle
jmp
test
addr16
sbb
call
adc
(bad)
(bad)
jmp
sar
and
mov
add
sahf
fldcw
mov
ffree
clc
psadbw
(bad)
mov
sub
(bad)
fdiv
xchg
jb
adc
xchg
dec
icebp
std
fisubr
xor
jl
leave
jp
jmp
mov
xor
xlat
dec
sub
(bad)
jg
repnz
test
mov
dec
je
push
outs
sbb
cld
(bad)
(bad)
(bad)
(bad)
in
and
out
pop
or
add
sbb
push
nop
imul
(bad)
push
nop
sub
cmp
pop
and
nop
pop
loop
jne
out
inc
(bad)
(bad)
push
add
mov
gs
clc
pusha
movs
js
or
js
pop
ret
jmp
lods
fdiv
outs
dec
call
or
sub
xchg
xchg
xchg
mov
add
jl
jmp
pop
sbb
pop
loopne
jle
and
shl
daa
movs
jecxz
inc
(bad)
(bad)
(bad)
jmp
xor
jne
scas
mov
ja
sahf
sahf
mov
and
pusha
or
jae
(bad)
movs
loopne
(bad)
jmp
jl
mov
push
or
dec
add
xchg
or
shl
push
clc
jp
outs
cli
pop
movs
pop
mov
cmp
jle
pop
inc
ja
popa
jl
mov
div
std
sbb
push
clc
sub
aas
dec
in
add
call
hlt
int
xchg
sub
out
aam
add
mov
xchg
test
rcr
(bad)
neg
jp
outs
mov
sti
dec
popf
mov
xor
(bad)
(bad)
(bad)
jmp
lock
or
xor
lods
cmp
xor
lods
(bad)
dec
arpl
jno
addr16
(bad)
(bad)
(bad)
inc
in
mul
adc
mov
jge
mov
loopne
enter
lock
jne
xor
(bad)
mov
pushf
bound
(bad)
cmp
mul
mov
push
outs
or
(bad)
(bad)
dec
test
sbb
pop
fmul
lods
xchg
fcomp
repnz
in
mov
outs
dec
mov
scas
lds
sar
clc
cmp
sub
(bad)
(bad)
(bad)
call
stos
adc
mov
fwait
pusha
push
add
daa
test
(bad)
mov
cwde
mov
cli
mov
(bad)
cmps
or
push
jmp
xor
outs
(bad)
fild
add
xor
fwait
(bad)
(bad)
(bad)
jmp
sub
call
pop
imul
movs
adc
jp
push
dec
pop
lods
dec
pop
hlt
(bad)
test
iret
cmps
jmp
out
and
repnz
popa
hlt
cli
jmp
imul
loop
push
sub
add
push
pop
lea
loop
adc
push
fwait
or
inc
outs
and
jmp
mov
cmp
fistp
xor
mov
outs
inc
push
add
push
push
sub
(bad)
(bad)
(bad)
push
jecxz
jnp
clc
imul
add
jge
mov
ror
pop
ja
mov
fadd
jg
jne
(bad)
dec
scas
push
inc
scas
mov
(bad)
(bad)
mov
(bad)
jg
cmp
adc
push
in
call
arpl
xchg
jno
repz
sbb
(bad)
lock
cmps
xor
dec
(bad)
(bad)
dec
mov
mov
jne
mov
aad
mov
fist
movs
sub
mov
mov
jbe
cmp
scas
cmp
mov
ja
push
lds
sar
xor
sbb
(bad)
fild
repnz
fiadd
xchg
inc
add
repz
popf
std
pop
std
jmp
mov
push
jmp
(bad)
scas
test
mov
(bad)
fistp
inc
retf
dec
outs
mov
es
xchg
(bad)
jns
mov
jbe
pusha
div
(bad)
(bad)
(bad)
inc
out
push
popa
aam
pop
outs
and
xchg
popf
lgs
imul
icebp
add
(bad)
std
pop
icebp
es
fmul
sub
adc
cmp
(bad)
(bad)
push
or
sbb
cmc
ja
popf
jp
cmp
mov
ret
xor
dec
inc
out
fild
inc
xchg
add
aas
cmp
mov
(bad)
test
lods
ror
add
(bad)
dec
or
mov
ret
ret
xchg
mov
xchg
and
out
add
xor
inc
mov
push
mov
xchg
mov
xchg
dec
gs
sub
push
cs
or
fstp
cld
xor
xchg
jns
add
mov
sub
mov
or
loopne
adc
adc
xchg
pusha
adc
dec
or
and
fisttp
js
xor
enter
out
jge
outs
mov
sbb
pop
nop
sub
leave
dec
rol
add
fs
or
out
xchg
cmps
nop
and
jl
sti
mov
xor
movs
or
push
and
inc
adc
ja
loopne
dec
push
push
inc
pusha
repnz
mov
dec
pop
or
mov
jo
ds
inc
jns
in
push
loop
sub
and
inc
inc
popa
mov
cmp
jl
or
(bad)
(bad)
mov
push
pop
dec
pop
aad
mov
(bad)
mov
adc
call
adc
pop
mov
inc
dec
xor
cmc
(bad)
(bad)
call
and
xchg
int
cdq
ficom
and
leave
test
pop
inc
cmp
and
xor
and
aad
or
sahf
retf
iret
mov
push
cmps
sar
pusha
loop
mov
add
mov
std
fidivr
out
out
add
cmp
fidiv
in
mov
mov
mov
loopne
jmp
into
pop
loope
clc
pop
mov
sbb
mov
call
sub
sbb
pusha
xor
mov
sbb
jl
(bad)
fs
push
cld
inc
sbb
nop
and
ss
iret
push
lds
std
jle
sahf
out
jle
popf
bound
sbb
sbb
out
icebp
push
cmp
add
dec
gs
addr16
sub
sar
lods
sar
mov
cmp
inc
dec
out
test
mov
jns
ret
idiv
xlat
pop
jge
jmp
cmp
repz
retf
call
pop
or
jmp
sbb
popa
xchg
ret
inc
sub
cmp
cmps
in
mov
(bad)
call
nop
shl
fld
push
int
fwait
out
pop
(bad)
(bad)
xchg
xor
adc
call
pop
ror
xchg
add
pop
in
mov
das
hlt
lods
push
dec
add
in
retf
(bad)
(bad)
aas
retw
rol
loopne
add
shl
add
ss
clc
movs
clc
addr16
out
mov
inc
inc
test
sar
loop
mov
inc
adc
xor
aaa
mov
add
adc
inc
bound
(bad)
sub
adc
add
mov
mov
sti
aaa
retf
sbb
ja
(bad)
xchg
mov
dec
stos
add
aam
sub
or
pop
or
inc
push
xchg
sub
xor
or
sub
(bad)
jmp
pop
cmove
inc
push
dec
push
pop
inc
dec
inc
push
push
inc
push
or
push
sahf
sub
imul
pop
mov
retf
add
or
idiv
test
push
xchg
inc
jmp
push
pop
or
pop
test
pop
mov
sbb
ins
fwait
add
pop
movs
in
cmps
and
pusha
or
cmps
and
imul
mov
adc
add
push
inc
movs
inc
add
adc
inc
pop
pop
leave
or
inc
or
sub
xchg
or
inc
and
pop
sub
add
push
arpl
jnp
add
mov
fwait
mov
xchg
dec
and
sub
adc
data16
dec
inc
push
dec
shr
push
test
mul
inc
mov
or
xchg
arpl
repz
jmp
sub
pop
sub
and
add
inc
pop
lods
add
push
mov
fisttp
push
push
arpl
enter
add
adc
sub
jns
adc
imul
retf
or
or
add
sub
aaa
or
push
inc
adc
add
pop
mov
or
fild
stc
pushf
dec
dec
push
call
xor
cli
call
rcl
jae
iret
adc
popa
adc
bound
dec
sub
and
or
sub
pop
test
adc
mov
and
mov
add
push
in
push
add
mov
add
push
pop
shl
mov
pop
sub
dec
aad
sbb
adc
xchg
add
pop
and
inc
or
push
xor
add
add
push
pop
lods
adc
or
dec
scas
adc
add
js
push
in
jo
push
adc
iret
xor
ins
imul
xchg
and
daa
in
emms
pop
in
arpl
imul
mov
xchg
and
pusha
add
fs
mov
push
popa
pop
sub
sub
push
ins
cmps
fnstenv
jo
jae
test
mov
jb
jne
ins
jmp
mov
and
mov
pop
jae
cmp
loop
ja
pusha
gs
inc
add
in
scas
cmp
jmp
mov
mov
xchg
clc
or
shl
outs
fs
sub
outs
stos
inc
or
gs
dec
ror
xchg
lods
enter
aas
and
push
xor
jo
pop
inc
je
bound
jl
jp
xchg
rcr
shl
add
lock
sbb
(bad)
popa
(bad)
cwde
pop
jns
imul
mov
ss
push
fcmovu
mov
and
inc
xchg
aas
pusha
test
push
imul
popf
sub
jns
or
or
inc
inc
lea
jl
jae
test
fdiv
mov
push
jmp
push
std
fisub
sub
lock
add
imul
add
stc
sbb
ret
and
sbb
ret
sbb
ins
shr
xor
mov
fild
les
das
pop
mov
dec
or
sbb
xor
test
mov
cmp
push
jbe
and
xchg
xchg
or
mov
push
sbb
dec
imul
or
jmp
stc
idiv
das
bound
sbb
add
test
and
mov
int3
adc
push
rcr
test
sbb
jl
daa
sbb
ins
add
mov
xor
fwait
and
inc
and
fsubr
pop
adc
arpl
jnp
xor
lods
sbb
jae
cmps
inc
lods
ins
iret
call
lds
jecxz
inc
js
jb
sbb
daa
outs
jbe
add
sbb
add
mov
lds
repnz
mov
icebp
mov
ret
sub
into
scas
push
mov
fs
and
dec
sub
cmp
push
mov
loopne
in
lds
xlat
cmp
es
gs
or
sub
jmp
push
popa
in
push
ins
retf
inc
gs
mov
add
popa
cs
ret
lods
xor
or
mov
jecxz
dec
cli
imul
leave
ss
(bad)
popf
add
adc
and
cmp
inc
shl
movs
xor
shl
clc
mov
mov
or
mov
rdtsc
sbb
add
mov
fcomp
push
pop
dec
xchg
or
js
lahf
sbb
sbb
and
ret
cwde
in
fstp
mov
adc
das
xor
inc
in
imul
jno
imul
out
pop
adc
add
push
ins
in
sbb
jne
xchg
xchg
add
inc
pop
pop
push
stos
adc
or
lods
ja
inc
or
mov
stos
add
shr
pop
outs
mov
mov
inc
daa
retf
cmp
adc
fdiv
xchg
sbb
dec
push
outs
push
(bad)
test
cmp
xor
sbb
stos
push
(bad)
sub
pop
dec
out
sbb
jecxz
enter
mov
jg
mov
push
mov
sub
mov
fcomp
inc
and
or
jns
inc
xor
push
in
movs
or
dec
pop
enter
xchg
pop
(bad)
jnp
inc
or
xchg
imul
sbb
and
jmp
mov
jno
adc
jmp
xor
adc
pop
cld
mov
imul
add
inc
add
pop
loopne
and
push
sub
sub
xchg
lahf
push
inc
inc
imul
add
mov
inc
cmps
cmp
inc
arpl
xchg
cmp
push
add
bound
aas
add
fmul
pop
dec
outs
push
adc
add
xor
pop
shr
sub
xor
mov
sub
and
ins
sub
(bad)
ja
and
lods
lods
mov
bound
js
dec
sbb
cmps
xchg
sbb
mov
or
add
adc
enter
and
mov
inc
dec
neg
retf
sbb
push
pop
or
dec
jb
int3
pop
jo
jp
push
fstp
ins
or
movs
sub
inc
imul
push
ficom
adc
adc
jo
mov
add
movs
in
cmc
pop
loop
xor
inc
jb
jmp
mov
inc
call
sbb
cli
pop
inc
inc
cmps
je
inc
fdiv
dec
scas
push
sbb
xlat
fcmovb
in
sbb
push
fidivr
outs
adc
and
jns
and
sbb
cmps
push
bsf
aaa
and
cld
inc
push
scas
jae
cs
and
fcomp
add
scas
in
inc
inc
fistp
mov
je
(bad)
arpl
sbb
inc
xor
mov
xor
push
sbb
mov
pop
mov
sub
push
rcr
adc
fisubr
and
outs
fimul
out
push
ret
ja
cwde
adc
lods
mov
cmp
pop
jmp
inc
cmp
dec
jnp
cmp
xor
inc
inc
ret
cmps
sub
fdiv
sub
std
add
repz
in
imul
cwde
xchg
lods
xor
js
arpl
jo
push
or
fcmovne
sbb
jne
fwait
out
push
pushf
out
add
inc
enter
fs
push
sbb
mov
outs
sub
ins
jae
pop
lods
or
out
push
inc
and
cmovnp
pop
push
jo
jnp
mov
jo
arpl
jo
mov
and
add
sbb
jno
xchg
and
mov
in
adc
lea
ficomp
mov
dec
mov
outs
dec
xchg
add
jmp
jb
mov
adc
sbb
nop
(bad)
pop
sub
mov
inc
test
adc
ret
jns
dec
push
dec
inc
neg
ret
sbb
and
test
test
jno
loopne
mov
push
mov
lahf
and
lods
loopne
sub
ret
fadd
sbb
push
es
jo
pop
inc
sbb
ins
inc
outs
aaa
lea
mov
jo
mov
mov
jae
mov
add
mov
jl
das
fcomp
pop
add
sbb
mov
int3
jp
ss
push
xor
mov
dec
and
daa
dec
sub
test
nop
out
in
xor
mov
xchg
adc
add
and
sbb
mov
dec
cmp
pop
or
test
in
or
pop
in
and
mov
or
pop
mov
nop
dec
dec
jo
mov
js
push
push
add
aaa
mov
arpl
sbb
dec
popa
dec
fisubr
(bad)
arpl
fs
les
add
pop
pop
idiv
jecxz
adc
cmp
test
or
ret
jnp
jo
adc
pop
and
push
inc
fsub
sbb
xor
adc
rol
scas
mov
and
or
or
inc
bound
pop
push
xchg
mov
into
rcl
test
pop
and
outs
dec
ret
sbb
dec
imul
and
pusha
push
popaw
shl
repnz
test
or
sti
push
cmp
(bad)
dec
sbb
and
mov
inc
mov
mov
iret
and
or
shr
pop
jge
xchg
xor
inc
push
pop
add
adc
and
ss
add
pop
stos
test
adc
sub
sbb
mov
(bad)
add
rcr
lahf
mov
fdiv
adc
daa
push
lahf
cmps
shr
mov
push
shl
daa
push
mov
cdq
retf
xchg
daa
push
jne
fmul
(bad)
fsub
cmp
add
add
outs
sbb
data16
sbb
add
dec
cmc
cmp
add
or
stos
out
push
data16
dec
jae
inc
cmp
mov
sub
fisubr
sub
lea
ret
in
std
adc
loop
pop
sbb
sahf
mov
xchg
data16
dec
pop
adc
xor
in
or
and
(bad)
adc
adc
dec
or
fwait
mov
and
outs
fadd
push
xor
int
mov
scas
sbb
jae
push
and
lock
sbb
std
scas
inc
add
inc
push
dec
push
xlat
mov
pop
jno
inc
shr
and
rcl
xchg
ins
dec
imul
retf
or
adc
sbb
pusha
cmp
push
pop
inc
(bad)
xor
cmc
inc
pop
sub
pop
fimul
ins
pop
fwait
sbb
push
cmps
jmp
mov
sbb
dec
sbb
pop
sub
and
movs
ret
leave
inc
push
dec
mov
jbe
sub
test
jno
enter
inc
sbb
out
xor
jg
in
mov
pop
and
sub
xlat
test
mov
movs
mov
add
or
ja
arpl
nop
cwde
or
sahf
js
dec
adc
xchg
xchg
sbb
aad
test
ja
imul
loop
dec
fs
push
and
pop
xor
xchg
sub
and
(bad)
dec
add
mov
push
sbb
out
mov
mov
adc
mov
and
mov
and
fcom
or
sbb
(bad)
sbb
sbb
mov
dec
data16
pop
sub
and
dec
dec
sbb
inc
cmp
(bad)
lock
jo
lea
or
fcmovb
scas
adc
test
out
push
jo
ffreep
in
fxtract
push
pop
dec
xchg
xor
leave
outs
ja
pop
xor
mov
and
ret
aad
fs
and
push
cmp
pop
push
sub
test
jmp
push
(bad)
push
inc
addr16
or
scas
xor
jb
(bad)
or
mov
xor
out
mov
js
pusha
or
jp
outs
inc
xchg
or
ja
cmp
mov
inc
fadd
push
or
out
push
inc
add
dec
add
add
jno
pop
pop
pop
scas
sbb
pushf
adc
mov
fwait
aam
adc
sbb
vmwrite
and
ret
cmp
adc
aas
adc
mov
pusha
cld
mov
add
adc
push
sbb
push
cmps
fdiv
scas
ins
or
je
mov
jp
add
jns
xchg
fwait
and
imul
movs
test
fst
out
mov
dec
mov
or
bound
and
xor
and
dec
imul
lahf
je
jb
daa
iret
cmp
lock
xor
cmp
fisttp
mov
dec
gs
out
dec
inc
add
inc
jae
dec
cmp
mov
adc
or
jbe
mov
sbb
add
dec
xchg
inc
add
pusha
mov
lea
mov
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
pop
add
and
shl
