add
add
add
or
add
mov
push
sub
mov
jbe
aad
dec
and
mov
jns
pushf
aaa
xor
sbb
into
cli
xchg
mov
fwait
ins
lds
mov
cmps
test
sub
call
jbe
in
leave
dec
push
pop
call
pop
xchg
or
inc
pop
dec
sub
out
loopne
aaa
xchg
out
cmp
push
jle
xchg
jp
push
xor
dec
hlt
mov
mov
xor
push
in
lods
mov
cmp
hlt
sar
cmps
mov
mov
adc
in
mov
xchg
mov
fdivr
dec
scas
scas
neg
mov
cld
dec
dec
shr
data16
lea
mov
dec
repz
cmp
js
ins
add
mov
cwde
stos
call
or
sbb
jecxz
lock
sbb
xor
cld
fstp
into
sub
adc
push
cli
aam
jmp
sub
jno
call
inc
fild
fist
and
push
daa
push
ds
repnz
loope
gs
push
aas
sub
cli
mov
lds
mov
js
jns
cmps
cwde
sub
scas
repnz
push
mov
jp
cmp
adc
pop
rcl
je
outs
push
aaa
add
fnsetpm(287
mov
jmp
xchg
bound
inc
xor
out
rcr
xchg
retf
add
cmp
(bad)
pop
lods
out
xchg
fcmovbe
icebp
jmp
and
adc
mov
icebp
movs
bound
aam
in
(bad)
sbb
int
adc
loop
cwde
(bad)
jno
loop
mov
xor
cmp
test
cdq
sub
mov
(bad)
in
idiv
mov
int
sbb
jbe
cwde
add
out
push
jns
push
mov
add
loop
jns
in
xlat
push
cdq
fmul
dec
jae
push
xchg
and
fcom
mov
stc
retf
add
xor
test
stos
fwait
jecxz
dec
mov
fldl2t
stos
push
out
aad
fild
(bad)
repnz
xchg
daa
dec
jnp
fs
cmps
ror
test
push
push
jecxz
push
cwde
loope
jge
popf
out
into
dec
inc
jl
sbb
xchg
bound
pushf
jbe
dec
call
outs
cdq
pop
mov
inc
sub
and
or
lahf
aaa
or
push
ins
int3
cmps
dec
sbb
sbb
addr16
out
lea
cli
lock
add
test
push
jo
push
xchg
(bad)
inc
aaa
cmp
(bad)
and
jle
add
scas
jge
sub
ja
loope
call
fldenv
push
push
outs
pop
or
jns
in
fisub
pop
test
imul
or
stc
push
mov
jp
popf
(bad)
hlt
adc
sbb
cdq
and
xor
push
stc
fucom
lahf
movs
inc
(bad)
out
ins
lock
movs
test
ins
outs
push
cmp
data16
inc
and
push
push
stos
dec
dec
aaa
les
adc
and
mov
fldlg2
add
xor
stc
jns
or
neg
add
xor
add
rcl
or
cdq
mov
into
lds
jne
cmp
cmp
and
sub
ficom
sbb
int
cmp
out
dec
clc
jecxz
test
mov
push
mov
or
pop
xchg
fidivr
cmc
pop
add
dec
fidiv
adc
add
jbe
xor
mov
dec
pop
jae
cdq
nop
add
cld
or
cmp
adc
mov
popa
mov
push
imul
clc
mov
jnp
ret
push
jo
retf
push
jno
xchg
sub
(bad)
and
nop
clc
jg
xchg
mov
or
int
mov
inc
mov
lods
ja
ds
gs
fimul
es
dec
fcom
mov
out
add
fcomp
cmp
sahf
mov
in
es
pusha
fs
loope
hlt
xchg
add
xchg
xchg
push
not
add
scas
aaa
imul
stos
loope
aad
gs
or
fld
pop
test
push
(bad)
xchg
push
adc
pop
stos
(bad)
lds
mov
sub
add
add
ret
cmp
stos
inc
adc
inc
ror
mov
in
loopne
jl
dec
bound
push
pop
jae
mov
ins
jl
lock
sbb
mov
out
cmp
les
add
mov
jmp
std
sbb
mov
jb
mov
rcr
fs
sbb
test
or
(bad)
call
cmp
test
shl
ins
je
fidiv
dec
add
mov
test
jo
xor
fisttp
outs
push
ins
pop
shl
mov
stc
ins
xchg
(bad)
gs
and
aas
sbb
(bad)
ud2
add
xor
out
and
js
fstp
add
aad
jl
stc
mov
push
sub
add
ret
leave
aaa
(bad)
cmp
(bad)
fnstcw
cli
xor
or
mov
xor
jp
xchg
push
xchg
pop
cwde
or
add
shl
jne
mov
ficomp
aas
cdq
data16
push
jno
push
jno
cmps
pushf
gs
or
scas
adc
pop
push
sbb
xchg
in
stc
mov
inc
int
push
loopne
pop
mov
and
add
je
mov
mov
jge
(bad)
in
add
arpl
cwde
xor
sbb
aas
pop
cmp
loop
es
out
sbb
and
cmp
jmp
push
mov
xor
mov
push
dec
lods
jle
rcl
pop
lods
xchg
mov
inc
out
jnp
(bad)
xor
sub
and
push
das
pop
xor
adc
add
jb
cs
mov
in
push
das
enter
push
pop
pop
(bad)
adc
jp
rcl
cdq
call
call
xor
movs
inc
pop
push
xchg
push
push
iret
pop
xchg
dec
push
dec
jl
repz
inc
(bad)
(bad)
mov
sahf
jmp
mov
add
mov
cmp
dec
enter
jbe
stos
sbb
cmps
loopne
cs
jmp
hlt
arpl
dec
dec
xchg
out
mov
out
retf
adc
(bad)
enter
loope
cs
push
mov
sub
dec
shl
enter
das
add
(bad)
jb
stos
inc
jg
mov
ja
in
mov
imul
mov
or
push
inc
dec
icebp
outs
push
mov
add
sbb
ins
je
shl
hlt
cwde
dec
repz
sub
loopne
mov
rcr
mov
inc
add
xor
jb
ds
mov
inc
movs
or
shl
jg
aam
test
dec
xchg
int
push
dec
hlt
pop
sahf
repz
imul
ja
dec
in
aad
(bad)
out
add
mov
int
jo
cs
and
xor
xchg
add
test
out
sbb
lods
or
sbb
shr
enter
sbb
and
xchg
sbb
daa
dec
adc
retf
call
jmp
cmp
retf
sub
add
inc
shl
adc
mov
pop
push
xlat
fidiv
add
inc
in
push
aad
mov
xor
js
inc
pop
jbe
bound
in
or
cmp
sub
jno
mov
jnp
es
xor
dec
sbb
es
mov
jl
cld
retf
sub
jmp
inc
imul
dec
sbb
sahf
(bad)
and
jmp
imul
int
mov
sar
sub
mov
adc
and
ret
cmps
cmp
sbb
ja
std
loop
jmp
push
arpl
int3
inc
jle
loop
mov
movs
cmps
xchg
jb
push
clc
(bad)
pop
das
pop
cmps
sub
or
pop
ins
bound
sbb
sbb
mov
div
pop
(bad)
or
lea
aaa
push
sti
pop
icebp
inc
aam
stc
push
(bad)
cmp
or
repnz
stos
mov
cmps
fcmovne
test
fmul
mov
cwde
sbb
fisub
test
push
sbb
mov
fild
fsub
add
(bad)
imul
inc
push
mov
call
jp
pop
shl
sbb
(bad)
fild
lods
xchg
push
sub
push
js
adc
add
sub
loope
add
sub
push
mov
adc
loope
cs
pushf
dec
movd
imul
jmp
mov
addr16
leave
repnz
cmp
outs
imul
mov
push
push
inc
repnz
xor
imul
out
sub
aas
adc
add
add
inc
sub
aaa
add
mov
xchg
and
imul
scas
pushf
pop
inc
xor
mov
ins
push
mov
mov
sbb
mov
movs
xor
bound
das
mov
mov
je
mov
sbb
mov
fild
mov
mov
jle
xchg
push
dec
pop
mov
enter
mov
cli
jmp
cmp
jae
or
pop
retf
aaa
jmp
mov
in
mov
or
sahf
imul
xor
add
sub
jmp
ffreep
pop
stos
lods
std
mov
cli
push
push
daa
out
iret
push
inc
and
push
xor
jb
pop
xor
jno
push
(bad)
pop
jbe
mov
popa
in
cdq
or
ret
fnsave
sub
and
sbb
cdq
pop
stos
xor
jg
add
sub
sbb
and
inc
arpl
mov
ret
ficomp
and
sub
sub
pop
sbb
xadd
sbb
inc
in
or
popf
pop
push
fwait
xor
shl
pop
or
in
mul
mov
dec
ret
pop
into
push
lods
inc
push
add
aas
retf
outs
pop
cmp
and
and
sbb
jne
mov
add
fdivr
jb
ins
pop
dec
cli
js
dec
gs
and
xchg
mov
addr16
in
out
ins
in
mov
repnz
pop
lods
ja
push
rol
bnd
mov
cmp
div
aad
stos
dec
pop
mov
and
pop
or
jne
inc
pop
jno
and
scas
fst
jecxz
retf
push
jl
or
popa
cs
inc
adc
or
and
cmp
test
scas
ss
retf
mov
js
xor
adc
js
sub
push
push
and
fs
bound
jo
rol
scas
xchg
pop
cmp
dec
mov
push
cmp
and
lods
lods
les
pop
mov
adc
outs
aas
sub
pop
push
cmp
aaa
pop
shr
cmp
jne
pop
sub
pop
call
enter
jbe
fadd
inc
lock
pop
mov
mov
and
in
push
aam
mov
pop
js
ret
in
mov
out
and
add
aad
fs
xor
movs
(bad)
sbb
leave
push
mov
aad
popa
and
xor
mov
push
inc
pop
xor
mov
shr
cmc
mov
in
inc
call
jecxz
pop
cmc
aaa
retf
stos
sub
push
jno
cmp
bound
mov
retf
mov
inc
and
jmp
inc
shl
(bad)
jae
popa
mov
push
fcmove
ds
add
loope
push
test
push
jns
xchg
jns
mov
fnsave
lea
scas
repnz
inc
pop
movs
stos
rcl
mov
xchg
pop
mov
cmp
and
jge
mov
and
or
fwait
xchg
push
add
mov
mov
dec
mov
mov
sub
jae
jo
or
in
mov
stos
into
sbb
ss
mov
inc
lods
aaa
or
mov
movs
mov
int
jbe
adc
test
xor
xchg
das
and
push
and
stc
ret
mov
iret
out
lods
iret
pop
loop
pusha
js
add
mov
(bad)
fiadd
lea
pop
es
sub
sahf
pop
cmp
jecxz
sub
repnz
in
movs
dec
addr16
xor
test
fcomi
aas
clc
bound
shl
gs
fidivr
inc
adc
inc
xchg
add
and
xor
sub
adc
fimul
mov
(bad)
dec
lods
and
mov
mov
dec
rcr
xchg
and
outs
add
das
jno
ret
add
fs
inc
push
(bad)
jno
jg
dec
pop
push
jb
xchg
inc
jno
mov
push
cmps
sbb
dec
stos
(bad)
xor
adc
lods
stc
loopne
lods
(bad)
xlat
loopne
fs
jbe
ret
loopne
jge
sbb
ror
into
gs
dec
enter
xchg
dec
xchg
lods
cmp
add
(bad)
cmc
rol
or
mov
add
push
popa
sub
mov
pop
dec
test
lock
inc
inc
sbb
dec
jecxz
mov
mov
fdivr
inc
sbb
stos
add
iret
inc
jo
and
mov
std
repz
dec
ins
fist
xor
sbb
mov
fcmovb
int3
xchg
push
and
and
adc
gs
push
bound
out
adc
or
or
mov
pop
sub
sub
jecxz
xor
cmp
dec
xchg
xor
push
xchg
fsubr
int
sbb
mov
mov
mov
repz
sbb
fisttp
hlt
push
push
dec
or
aaa
or
fcom
jo
neg
es
jecxz
jmp
cdq
xor
imul
clc
and
push
in
dec
xor
rcl
aas
bound
sub
inc
pop
cmps
xchg
cld
sbb
or
inc
in
sub
std
clc
jecxz
or
mov
gs
cmp
sub
mov
xor
sub
sbb
mov
push
out
dec
sub
cmps
add
imul
fwait
pop
xor
sub
cs
into
xchg
inc
popa
dec
lock
pop
push
and
(bad)
xchg
add
fwait
cmp
jecxz
fild
jmp
jmp
(bad)
fimul
bound
fwait
inc
jl
jge
leave
pop
hlt
shl
dec
pop
jp
lds
not
sub
adc
or
mov
sbb
bound
mov
addr16
lds
jmp
adc
adc
sbb
repz
pop
ret
xchg
es
repnz
popf
push
sub
(bad)
(bad)
jecxz
scas
xor
lea
aam
stos
loope
push
mov
enter
bound
and
shr
je
xchg
ret
fisttp
ss
leave
fsubr
push
cmp
push
hlt
mov
sub
movs
outs
fld
int3
call
je
xchg
pop
sbb
and
scas
sar
std
or
test
dec
push
mov
adc
in
mov
adc
mov
pop
mov
enter
push
xchg
sahf
in
and
sbb
pop
mov
add
xor
dec
stc
shr
mov
dec
add
jno
leave
xor
daa
in
out
dec
retf
and
mov
loopne
inc
ret
sub
in
mov
xchg
mov
ins
sub
(bad)
ds
test
cmp
and
or
dec
es
sbb
jbe
enter
leave
push
jp
push
xor
push
and
(bad)
out
or
loopne
frstor
mov
stos
pop
retf
or
jb
dec
pusha
adc
dec
dec
add
push
stos
int3
xor
pop
gs
inc
pop
inc
jmp
loopne
inc
and
js
fsubr
shr
mov
aaa
neg
mov
mov
(bad)
push
mov
adc
mov
ror
mov
js
xor
adc
push
call
add
jne
pop
push
call
jg
cmp
scas
ss
sti
mov
dec
(bad)
cmp
adc
scas
and
mov
ss
sub
mov
ret
xor
(bad)
test
das
inc
fadd
in
xor
outs
enter
test
div
xor
pop
mov
enter
xchg
mul
inc
fs
test
fdivr
cdq
aad
rcr
lock
std
add
xchg
add
jmp
sbb
adc
popf
mov
ror
mov
push
mov
push
dec
xlat
jmp
enter
pop
jb
icebp
hlt
lods
popa
(bad)
mov
ins
pop
pop
pop
adc
mov
cmp
mov
mov
sahf
bound
stc
jmp
cli
mov
mov
sub
lds
call
fcmovbe
and
inc
push
pop
sub
fldln2
pop
dec
sbb
cmp
cmp
push
inc
in
sbb
jle
mov
and
in
jo
or
fwait
stc
or
xchg
mov
jge
add
lds
nop
pop
cdq
das
or
int
jno
dec
mov
pop
or
ins
dec
lahf
adc
fisub
dec
dec
xor
aam
mov
sbb
jmp
movs
xor
pop
push
sub
pop
xor
in
dec
xchg
test
inc
sbb
aam
scas
or
mov
jmp
xchg
bound
pop
adc
out
adc
mov
or
dec
and
and
and
xchg
adc
jge
fwait
xor
push
jg
int
xlat
dec
rcr
into
dec
pop
sahf
sbb
sbb
mov
lea
inc
push
fwait
sub
cwde
leave
push
(bad)
les
shr
(bad)
cld
lahf
or
cmps
loope
cwde
mov
stc
or
inc
lock
adc
and
push
popf
dec
or
aam
(bad)
int
or
or
add
jle
jg
pop
or
mov
jno
and
mov
jno
imul
sub
addr16
inc
dec
lds
or
sub
push
cmp
shl
pop
pop
push
cmp
mov
jb
jge
pop
bound
lahf
adc
sbb
mov
inc
mov
push
cwde
clc
mov
or
inc
int3
cmp
leave
fiadd
push
test
mov
jmp
dec
jo
and
in
sbb
sbb
call
aam
jns
repnz
les
mov
adc
ja
jmp
dec
lods
adc
fnstcw
push
adc
shl
in
mov
aam
inc
call
not
dec
ficom
pusha
push
xchg
arpl
pop
mul
add
stc
cmp
in
xchg
mov
add
and
into
dec
mov
inc
add
lods
jae
or
cmps
and
push
jecxz
(bad)
std
mov
adc
into
mov
add
adc
dec
mov
xor
retf
sbb
cdq
daa
mov
pop
jo
jg
fimul
ss
ret
das
or
ins
xlat
lock
xchg
mov
or
mov
ret
push
outs
sub
loopne
fnstcw
jmp
cmp
shl
and
dec
fisttp
(bad)
stos
stos
inc
gs
call
cmp
mov
mov
or
enter
sbb
cs
cli
add
and
mov
push
mov
movs
(bad)
and
push
xor
ror
je
es
fs
call
fxam
clc
call
movs
shl
xchg
out
sahf
push
ds
out
jmp
lea
mov
jp
ds
fcom
fs
sub
xchg
iret
dec
pop
loope
jmp
and
jmp
jecxz
jns
cmp
push
repz
(bad)
pusha
cmp
jl
and
icebp
xor
ret
add
add
or
jno
fisttp
cmp
jecxz
mov
inc
push
push
sti
sbb
mov
loopne
cmps
cmc
ins
xlat
into
push
test
xlat
mov
loopne
es
push
or
les
ins
dec
fild
and
stos
fst
jmp
jbe
retf
ja
pop
or
and
sbb
jae
fdiv
stos
mov
movs
mov
(bad)
ror
mov
paddusw
sub
xchg
out
call
sub
or
test
test
not
pop
and
jo
mov
imul
mov
test
dec
adc
imul
dec
cmp
punpckhwd
jg
and
fst
aaa
push
cmp
mov
mov
fld
xor
test
dec
sub
sbb
aad
loope
xor
jmp
mov
mov
mov
cmp
cmp
pop
mov
mov
jnp
rol
(bad)
and
xor
dec
xchg
lock
adc
icebp
(bad)
cmps
and
and
adc
fidivr
adc
push
pop
outs
dec
jl
std
fimul
mov
push
retf
add
mov
out
mov
imul
stos
mov
fnstenv
dec
cmp
fild
mov
fstp
out
sar
lods
fisubr
mov
push
adc
and
(bad)
and
sbb
mov
lock
and
mov
mov
shl
jb
stos
xadd
mov
lods
add
inc
xchg
adc
rcl
add
aaa
sbb
sub
scas
ror
add
or
aas
xlat
xor
fs
cmp
in
retf
jnp
out
pop
jle
pop
popf
adc
imul
sahf
xor
inc
inc
or
xor
mov
xor
sar
mov
sbb
pop
int3
jl
push
fs
adc
ins
push
mov
int3
test
add
add
pop
mov
out
jns
stos
rol
test
stos
or
and
out
adc
into
mov
mov
mov
sub
(bad)
popa
mov
aam
mov
mov
add
scas
in
ds
lock
cmc
cmp
sbb
out
inc
fsub
add
mov
out
in
retf
push
test
pop
fwait
(bad)
iret
mov
je
es
scas
int
sub
in
xchg
mov
jb
and
into
jp
outs
xchg
inc
and
retf
test
sbb
mov
adc
into
xchg
out
mov
fld
pop
sbb
scas
push
push
in
pusha
adc
popa
cdq
imul
fisttp
inc
jo
je
sub
test
out
mov
adc
mov
fcomp
adc
je
xchg
inc
in
lods
xor
pop
or
jge
mov
and
pop
shr
test
shl
sbb
mov
mov
mov
inc
pop
retf
and
pop
mov
jmp
ret
out
dec
inc
mov
test
out
mov
inc
or
cdq
jo
push
loope
mov
(bad)
fcom
clc
popf
les
movs
xchg
adc
lea
adc
call
cwde
sar
jge
dec
(bad)
cli
mul
mov
nop
dec
sar
jno
push
mov
int
(bad)
jge
scas
jp
add
mov
dec
test
xchg
int
loope
ja
lahf
fsubr
jl
inc
add
test
mov
ss
mov
shl
data16
out
sub
and
sub
dec
jo
stos
push
ja
test
popa
test
mov
ins
xor
dec
adc
pop
xchg
cmps
jne
sbb
in
fidivr
push
xchg
mov
inc
mov
je
out
outs
pop
mov
ficomp
icebp
pop
inc
(bad)
sbb
pop
clc
cmps
pop
or
cdq
or
(bad)
xchg
in
jp
movs
pop
jle
call
xchg
shl
cmps
add
pop
xor
adc
cmp
(bad)
jb
sti
sub
ins
inc
into
add
and
and
das
mov
push
push
test
adc
ds
sbb
pop
(bad)
push
ss
jle
sbb
inc
xor
lea
cmc
xchg
mov
and
jbe
or
mov
arpl
jne
addr16
cld
pop
adc
aam
addr16
jge
push
mov
dec
sub
dec
cmp
icebp
and
cmp
sbb
cdq
adc
pop
push
xor
ja
outs
pop
jb
or
popf
mov
jo
adc
into
pop
sub
adc
adc
xchg
mov
js
mov
jmp
pop
ror
shl
fsubrp
push
retf
jl
push
rcl
shl
pop
(bad)
pop
push
add
sub
aaa
sbb
ja
jne
mov
mov
cmp
rep
mov
sbb
ror
cdq
sub
lahf
mov
popa
out
shl
dec
cmp
test
call
addr16
pushf
gs
loopne
pop
mov
adc
movs
(bad)
movs
cmp
jno
mov
call
dec
mov
sub
scas
lea
in
cli
fcomp
dec
loop
mov
jb
push
xchg
sub
imul
jns
test
or
jmp
arpl
sahf
xchg
bound
inc
xor
in
push
mov
jge
outs
mov
call
mov
pop
dec
mov
sti
mov
xchg
iret
pop
dec
and
inc
xchg
xor
stos
xor
xchg
dec
push
fwait
rcr
popa
vmovhpd
dec
in
ror
and
inc
mov
arpl
repz
and
mov
jb
and
aas
daa
jo
icebp
js
push
xor
push
mov
ja
loope
ror
xchg
push
mov
cmp
push
mov
movs
and
repnz
sbb
mov
out
bound
and
mov
push
dec
retf
push
xor
into
fild
lods
arpl
sar
or
dec
push
or
xchg
aas
dec
aam
out
out
or
into
sbb
repz
and
cli
fistp
cmp
cmovo
cmp
mov
aam
fs
repnz
adc
mov
fisubr
es
cmps
rol
xchg
cmp
inc
clc
xchg
stc
cmp
das
lods
ror
push
pop
ja
push
jmp
pusha
sub
xchg
leave
push
lahf
mov
out
jns
ss
addr16
push
jne
push
mov
jbe
in
jecxz
or
adc
and
fsub
aam
dec
xlat
jge
cmps
jno
js
inc
js
jne
mov
xor
cmps
mov
fist
fwait
push
shl
sub
aaa
xor
mov
cmp
aam
mov
ins
jecxz
dec
clc
or
popa
repz
daa
outs
cmp
js
inc
cmp
call
jbe
adc
leave
movs
cmp
mov
inc
add
ins
sub
pop
aas
rcr
dec
sbb
in
push
sbb
lea
push
fidiv
test
(bad)
mov
ja
dec
enter
or
and
fwait
sbb
pop
mov
fld
das
sub
aad
fist
mov
adc
or
xor
or
pop
and
sar
mov
call
dec
adc
(bad)
(bad)
sti
rol
fcom
fcom
cmp
jmp
popa
sar
sbb
pop
xor
jbe
movs
aas
push
cli
push
xchg
repz
jb
pusha
in
clc
pop
adc
push
lock
movs
pop
sub
jne
je
push
mov
xor
and
cmp
sbb
add
sub
cmps
mov
push
and
in
dec
test
mov
mov
fsubr
jmp
and
jl
mov
popf
mov
stc
mul
sti
les
xchg
mov
jae
push
cmps
retf
pop
mov
test
sub
mov
cs
mul
mov
push
cmp
jb
xor
mov
jl
arpl
call
mov
jo
lahf
sub
imul
arpl
ror
ja
arpl
movs
adc
in
xchg
jg
call
mov
pusha
leave
not
fadd
mov
sbb
xchg
imul
inc
mov
es
shr
dec
pop
icebp
mov
jns
mov
xchg
je
in
or
pop
jg
mov
in
pop
arpl
push
push
call
arpl
sub
std
push
fnstcw
pop
and
(bad)
mov
mov
pop
cmp
icebp
test
arpl
mov
push
jp
push
inc
je
stos
xor
sbb
clc
sub
jnp
pop
jmp
jp
push
push
or
cmp
mov
jae
or
retf
and
fst
pop
mov
xor
push
cwde
inc
clc
mov
(bad)
fld
mov
inc
xor
mov
cdq
and
xchg
push
xchg
add
cmovno
xchg
adc
jmp
xor
out
call
pop
xchg
cli
xchg
xor
xchg
(bad)
mov
in
jno
out
mov
or
and
ins
or
js
ret
jb
push
call
mov
adc
xchg
ins
jae
pop
mov
iret
sar
dec
jl
mov
stos
cmc
out
int
xor
xchg
cli
rcl
mov
pop
dec
enter
sar
mov
imul
xchg
sbb
sub
jne
xchg
ja
call
cli
nop
xchg
pushf
out
scas
pop
arpl
dec
jns
mov
hlt
sbb
pop
adc
xchg
push
mov
gs
dec
jnp
jnp
jp
scas
or
(bad)
rcl
inc
frstor
sub
jb
mov
sub
outs
and
ror
fnstenv
sbb
mov
jb
mov
movs
mov
cld
sbb
sbb
cli
and
jbe
cmp
outs
adc
or
mov
ins
test
cmp
sbb
push
add
jae
fs
lea
sub
outs
xor
ror
jae
or
dec
jno
pop
lahf
pop
out
out
inc
stc
sbb
xor
pusha
fiadd
in
aad
xchg
xor
retf
cmp
adc
push
sub
shr
bound
jle
push
rol
iret
dec
dec
loope
pusha
sbb
or
mov
mov
out
jle
outs
sbb
aad
adc
mov
xchg
retf
cmc
push
jnp
lods
and
test
jecxz
clc
ds
adc
lea
adc
cdq
jl
pop
or
mov
xchg
xchg
sub
loop
jae
call
push
icebp
or
and
jae
pop
inc
jo
iret
add
mov
pop
and
sub
cmps
mov
ret
mov
bswap
adc
push
xor
imul
retf
adc
pop
dec
xor
icebp
push
pop
cmp
das
call
popf
sbb
aaa
sub
cmp
stos
dec
dec
xor
test
or
stos
push
stos
scas
or
cmp
in
jo
into
dec
dec
ss
mov
icebp
sub
push
pop
aaa
loop
xor
hlt
clc
cmp
cmp
rcl
pop
(bad)
mov
movs
push
pop
leave
outs
mov
sahf
cmp
call
test
fisubr
dec
int3
imul
mov
pop
nop
mov
jo
iret
inc
(bad)
mov
and
fiadd
xor
ins
mov
scas
mov
mov
mov
mov
fnsave
mov
mov
and
dec
out
add
(bad)
jbe
outs
cmp
aad
cmps
pop
push
fimul
xor
inc
mov
or
repz
or
lahf
sub
and
out
sahf
add
or
xchg
cmc
rcl
and
pop
fcom
daa
jnp
stos
movs
or
shr
fstp
pop
mov
test
push
fdivr
gs
pcmpeqw
mov
and
idiv
push
mov
pop
scas
cmp
lds
xchg
mov
mov
rcr
or
ins
jge
rol
lods
in
loopne
jle
jle
sub
push
retf
xchg
mov
jl
xlat
bound
retf
cdq
mov
cmp
test
pop
test
add
mov
sbb
call
mov
addr16
ss
jmp
and
(bad)
loope
test
cdq
lods
aam
inc
aaa
pop
loop
dec
shl
inc
dec
out
mov
adc
pop
dec
leave
data16
xchg
xor
imul
mov
xchg
out
pop
inc
mov
mov
pop
test
pop
push
stos
xchg
xor
jmp
clc
int
(bad)
mov
and
jge
push
dec
mov
mov
sub
inc
call
pop
mov
dec
mov
scas
getsec
mov
mov
in
adc
add
dec
push
cld
ins
jae
cmp
test
push
mov
stc
mov
push
pop
nop
inc
pop
ins
fdivr
outs
js
aam
push
fcmovnb
mov
call
test
repz
fwait
push
je
xchg
jae
push
jnp
inc
xchg
fistp
adc
in
aaa
mov
inc
mov
jmp
lock
inc
jg
xchg
imul
jnp
xchg
jns
ror
lds
in
cmc
or
fisubr
mov
xlat
xor
cmp
pop
test
stos
fwait
sub
mov
lock
scas
sub
add
sub
aad
aaa
push
pop
cdq
lods
into
les
cwde
fmul
stos
not
mov
jbe
dec
shr
lahf
mov
sub
ja
sbb
(bad)
sbb
(bad)
lods
mov
mov
or
inc
idiv
je
leave
sub
jg
mov
(bad)
sbb
shl
inc
sub
jecxz
or
mov
iret
ds
xchg
or
cmps
pop
push
imul
jae
mov
fnstsw
pop
hlt
xlat
jb
inc
and
aam
xchg
push
sahf
das
test
pushf
sbb
sub
and
int3
inc
lods
test
pushf
xor
push
lods
movs
mov
hlt
repz
hlt
and
xchg
(bad)
rcl
test
xor
mov
adc
xor
mov
mov
(bad)
jl
aaa
fisub
ds
cdq
popa
and
aad
mov
sahf
push
mov
pusha
imul
neg
cmp
add
stos
mov
fdivr
inc
mov
pop
jb
rcr
dec
cmps
(bad)
fdiv
ins
add
(bad)
xchg
xchg
ins
xchg
lea
sub
outs
and
dec
(bad)
xor
ins
inc
push
push
test
pop
adc
mov
lds
popf
fcomp
adc
(bad)
cwde
fistp
xchg
(bad)
mov
mov
sub
mov
sar
add
pop
int3
mov
push
test
mov
jge
and
pop
dec
(bad)
clc
xlat
ret
rcl
mov
je
add
sti
mov
jmp
pop
or
ss
pop
std
xchg
push
hlt
lea
test
test
and
xchg
xor
arpl
mov
movs
call
sub
and
mov
add
sub
mov
mov
popa
xchg
test
sub
jmp
repz
mov
lds
lea
retf
in
xor
jp
sbb
push
inc
ss
mov
xor
lock
sbb
sub
lock
pushf
jmp
pop
jmp
in
mov
ret
inc
daa
pop
inc
pop
xor
test
push
icebp
inc
jmp
mov
jmp
test
sbb
(bad)
cmp
adc
push
stos
setg
aam
ja
xor
lea
ins
dec
std
aad
sub
or
mov
loop
in
imul
out
cmp
aas
pop
xchg
frstor
jnp
clc
inc
mov
sub
dec
les
lods
inc
cs
fucom
xor
xchg
pop
ficomp
ret
mov
(bad)
pop
imul
cld
inc
and
add
mov
mov
mov
inc
std
arpl
mov
fcomi
xor
push
jmp
mov
ja
push
pushf
add
icebp
neg
mov
cmps
dec
ja
ins
jo
pop
pop
xchg
inc
in
mov
or
movs
jmp
jne
pop
and
jbe
(bad)
and
xchg
push
push
inc
aas
sbb
cwde
ins
scas
sti
shl
and
std
in
jg
xor
fisubr
and
sub
mov
cld
mov
daa
repnz
div
cwde
js
adc
ss
cmp
xchg
add
pushf
scas
or
and
mov
iret
lahf
(bad)
jecxz
out
sbb
iret
add
clc
mov
ret
cmp
and
call
shl
jp
test
loopne
dec
xor
and
push
faddp
scas
in
or
mov
mov
mov
outs
push
dec
add
(bad)
mov
sbb
lock
std
mov
inc
movs
xchg
jmp
out
mov
mov
push
pop
push
jge
out
jg
adc
mov
xor
retf
inc
movs
add
test
push
test
call
cmp
mov
mov
and
push
outs
or
mov
pop
lods
addr16
mov
je
push
xchg
ins
cmc
cmp
and
inc
adc
sbb
pop
retf
pusha
jle
icebp
pop
xchg
xor
jle
and
dec
jns
jp
rcr
push
sbb
adc
stos
mov
cmp
clc
ret
leave
aas
gs
pop
xor
mov
xor
xor
dec
mov
repz
icebp
in
jns
daa
pop
push
add
mov
pop
jmp
shl
inc
ss
ret
(bad)
dec
inc
xchg
push
arpl
sbb
sbb
jb
sti
mov
hlt
jl
sbb
jo
mov
jo
ss
arpl
mov
sbb
dec
cs
inc
mov
cmp
test
cdq
popa
xchg
add
(bad)
mov
scas
jle
inc
movs
sub
and
mov
sub
xchg
int3
out
xchg
out
dec
repnz
loopne
cli
or
test
xor
cli
daa
adc
out
mov
mov
fnsave
push
push
cmp
arpl
lods
jns
mov
cdq
repz
ret
xlat
imul
adc
retf
inc
ins
and
fsubr
sbb
idiv
inc
mov
iret
pop
lds
cmp
dec
sub
clc
pushf
bound
lods
es
jne
shr
jge
and
adc
adc
xor
lea
sbb
pop
cmp
pusha
out
add
inc
out
push
pop
jmp
cmp
mov
int3
repz
dec
xor
sbb
dec
cmp
dec
sahf
call
and
sbb
push
mov
les
cmp
xlat
inc
(bad)
push
and
mov
sbb
cmp
and
stc
sub
push
or
rcr
xchg
jno
sbb
cli
cmc
in
pop
retf
inc
mov
aas
ja
and
arpl
fld
pop
xchg
mov
pop
cmp
and
xchg
mov
and
in
movs
in
repz
je
daa
add
je
es
into
sub
retf
lods
xor
dec
les
dec
cmp
dec
mov
mov
mul
pop
add
xchg
(bad)
xor
and
xchg
mov
mov
jnp
add
fst
lds
push
mov
cmp
push
std
jmp
dec
xchg
xchg
sbb
imul
mov
ins
ficom
mov
pop
(bad)
fnsave
mov
xor
mov
(bad)
lock
dec
jb
jbe
jne
fwait
ret
test
fnstsw
pop
jne
cmp
nop
inc
ins
rcl
mov
fcom
mov
add
inc
scas
or
adc
scas
jno
jecxz
or
xor
pop
(bad)
sti
mov
scas
jns
jo
movs
scas
ss
mov
repz
inc
loope
outs
scas
mov
mov
inc
loope
or
dec
jge
fsub
das
pusha
xor
movs
shl
hlt
xchg
sub
std
add
xlat
aaa
not
mov
pop
adc
mov
mov
stos
es
sub
cmp
pop
adc
call
sub
cmp
sub
cmp
pop
xchg
es
jne
test
jmp
push
sub
adc
shl
mov
jmp
push
aaa
rcl
xchg
clc
in
fwait
into
(bad)
ds
pop
and
jmp
loope
mov
push
jno
test
imul
(bad)
pushf
daa
stos
jge
fist
fs
cmp
sbb
push
xlat
pop
aad
push
pop
cmp
sub
cmp
stc
xchg
and
push
out
xchg
or
sub
push
loopne
push
add
cmp
stos
jne
xor
clc
lds
shr
adc
sbb
loopne
mov
fistp
xchg
fist
dec
or
popa
pop
adc
inc
out
mov
inc
std
test
inc
cmp
ins
lods
push
test
cmps
mov
test
sbb
dec
(bad)
mov
pmaxub
(bad)
scas
or
ins
test
add
sbb
or
jnp
rcl
hlt
pswapd
fistp
(bad)
pop
jbe
sti
pop
(bad)
fld
inc
out
xor
clc
test
push
test
xchg
xor
adc
into
mov
pop
mov
adc
cld
rcl
push
or
in
jmp
xlat
cdq
leave
fimul
in
(bad)
sub
push
idiv
fisub
shl
sbb
je
pop
jno
cmp
jbe
push
lea
(bad)
je
(bad)
call
fcomp
or
(bad)
push
jno
jge
minps
shl
and
fstp
aad
gs
shr
sub
out
fmul
mov
sbb
cmps
ret
movs
and
pop
cmp
adc
mov
pop
psllw
push
sbb
add
mov
jmp
or
test
xchg
into
cmps
out
icebp
aaa
jnp
movs
mov
dec
shl
(bad)
lds
cmps
and
push
mov
and
jp
inc
xchg
xor
push
jnp
and
fadd
push
push
popa
jmp
mov
pop
push
or
test
imul
or
pop
pop
out
outs
icebp
dec
or
and
mov
push
stos
cld
mov
push
call
dec
inc
xor
sar
push
cmp
xchg
pop
pusha
inc
sub
in
outs
popa
(bad)
in
loope
inc
xor
(bad)
data16
mov
leave
sbb
out
mov
pop
shr
out
xchg
ss
push
xor
xchg
cs
sub
sbb
jmp
push
dec
add
nop
dec
mov
mov
jbe
std
inc
cmps
sbb
ja
dec
fwait
test
fwait
repz
push
les
or
xor
pop
inc
daa
sub
mov
dec
jne
outs
pop
enter
cs
loop
lods
sti
jp
push
mov
add
jp
inc
and
std
out
mov
js
jle
and
repnz
out
inc
push
and
dec
lea
add
rcl
or
mov
cli
js
ret
pusha
sub
push
adc
mov
in
repz
jmp
add
sbb
cs
adc
jns
test
into
push
je
and
mov
jo
daa
in
jno
icebp
mov
fwait
arpl
pop
test
push
mov
lock
iret
cmp
aam
dec
adc
push
loop
mov
shr
mov
pushf
ror
dec
mov
mov
movaps
imul
mov
cli
movs
sahf
mov
and
call
push
enter
dec
sbb
xchg
jns
repz
dec
lock
mov
xor
or
pop
mov
mov
hlt
(bad)
ins
lods
push
js
pop
push
push
or
fmul
push
inc
mov
clc
shl
mov
xor
not
xchg
pop
add
mov
mov
sbb
mov
hlt
add
dec
xchg
pop
push
aaa
in
jl
pop
or
push
jmp
mov
mov
or
dec
jmp
jno
addr16
xchg
sbb
jmp
mov
add
cdq
fiadd
dec
sbb
repnz
test
pusha
cmp
(bad)
mov
aam
cmp
or
in
les
repz
shl
stc
jne
mov
popf
fs
cmp
test
mov
dec
int
adc
(bad)
add
xor
xchg
cli
outs
rcl
or
or
mov
bnd
popa
mov
test
stc
jmp
dec
repz
mov
ins
movs
movs
nop
mov
mov
mov
or
(bad)
out
sti
faddp
loop
repnz
cmp
push
adc
in
push
pop
and
sbb
enter
jnp
sub
xchg
daa
cmp
test
push
pop
sub
pop
out
lds
out
xor
sahf
movs
aaa
aad
cmp
cmps
ror
mov
stos
fcomp
sub
fsub
push
(bad)
cli
or
pop
pmaxsw
movs
pop
pop
cmc
jge
add
sub
retf
je
pop
dec
(bad)
push
frstor
jl
inc
mov
sub
mul
adc
xchg
pop
xor
inc
dec
or
dec
xor
movs
mov
pushf
dec
dec
loopne
stc
lock
jbe
es
mov
add
in
add
add
loop
cmp
mov
loope
(bad)
cmp
and
mov
inc
idiv
pop
sbb
xlat
jecxz
inc
or
lock
out
sub
jbe
inc
add
or
bound
xor
js
pop
push
and
popf
or
xor
movs
jle
outs
adc
pop
out
mov
jg
(bad)
and
dec
(bad)
xchg
dec
dec
addr16
inc
inc
jp
push
push
out
push
jbe
push
jg
xchg
jl
lods
stc
adc
shr
hlt
cmp
out
(bad)
and
xchg
xchg
sub
test
imul
xor
nop
add
test
mov
mov
sbb
push
mov
retf
add
sbb
dec
dec
sbb
ja
test
(bad)
pop
nop
lahf
ds
cmp
cmp
sar
bound
int
aad
adc
mov
jecxz
ss
mov
retf
sbb
into
dec
adc
es
sar
sbb
or
popf
cmc
cmp
mov
test
push
fist
add
loope
cmps
mov
inc
mov
stos
xor
jmp
aad
rcr
jne
fwait
aaa
bound
dec
mov
adc
mov
xchg
sbb
jnp
stos
cld
mov
fdivr
mov
adc
dec
rol
pop
push
jmp
and
sbb
mov
ss
mov
std
push
aas
xchg
dec
mov
jge
sub
bound
push
shl
mov
sbb
movs
lea
dec
push
xchg
pop
pop
hlt
les
daa
adc
inc
shl
or
push
and
jbe
jl
repz
fbld
out
rcr
sub
icebp
add
jmp
xor
pop
sub
mov
jle
xchg
(bad)
std
sbb
jno
xor
add
pop
mov
dec
pop
jp
lahf
out
aad
fcom
cmp
das
xchg
inc
pushf
call
lea
xor
push
inc
mov
clc
sbb
ficom
pop
test
xlat
gs
(bad)
out
outs
aad
in
jo
xchg
call
fldenv
mov
call
adc
adc
stc
xlat
mov
ret
mov
inc
and
xchg
mov
shl
push
lock
pop
sub
out
mov
sbb
xor
push
movs
stos
inc
mov
aas
test
(bad)
cmp
mov
or
jns
mov
icebp
push
(bad)
pop
sub
mov
mov
fistp
cli
aad
xor
xor
xchg
dec
dec
sub
in
or
loopne
xor
call
push
mov
add
mov
and
push
xchg
adc
push
fnstcw
out
mov
pop
mov
daa
or
pop
jp
pop
imul
push
xlat
test
das
adc
dec
or
and
push
das
mov
shl
sub
loope
fs
loop
pop
mov
adc
jns
nop
shl
lahf
addr16
cmp
ja
ret
adc
adc
jno
shl
push
add
inc
cwde
xchg
xchg
hlt
cmp
adc
sub
ret
or
daa
(bad)
cld
gs
pop
mov
loop
cmps
test
retf
cmps
mov
xor
push
(bad)
mov
adc
shr
mov
xchg
inc
stos
aam
outs
adc
adc
stc
dec
cmc
and
inc
shr
sub
jge
xchg
jl
cmp
xor
imul
pop
inc
aad
adc
xchg
mov
cdq
repz
enter
add
repz
inc
cmp
cmp
adc
int3
arpl
repz
enter
fdivp
mov
jns
(bad)
cmp
loopne
xor
pop
or
pop
movs
addr16
mov
aas
add
jnp
test
inc
or
add
add
inc
dec
stc
fld
or
(bad)
in
sub
outs
call
stos
push
adc
and
pop
cmps
jmp
mov
dec
jmp
pop
nop
sar
xchg
cvtps2pd
pusha
mov
mov
cmp
retf
mov
or
jl
cmps
jl
fucomp
push
jo
call
add
and
rcr
out
adc
sub
mov
shl
test
out
iret
jne
loopne
movs
rcl
stos
dec
mov
cmp
out
sub
dec
std
mov
test
add
scas
xor
test
pusha
mov
rcr
sub
xlat
fst
pop
mov
push
scas
jae
xor
push
scas
mov
jbe
inc
mov
jp
sbb
sbb
int3
mov
iret
mov
movs
(bad)
adc
push
xor
shr
cmp
lods
add
addr16
pop
mul
cmp
mov
jnp
mov
in
pop
mov
mov
pop
adc
aaa
inc
cs
dec
xor
clc
adc
jo
mov
and
jl
jecxz
sub
in
fcom
ja
cmp
xchg
outs
(bad)
adc
daa
push
ret
daa
xchg
and
test
adc
(bad)
fadd
mov
push
(bad)
loopne
inc
inc
pusha
xlat
mov
push
loopne
je
mov
mov
hlt
into
inc
in
fidiv
scas
sub
inc
jmp
pop
scas
shl
sub
mov
hlt
fstp
call
inc
pusha
or
pop
or
vpcmpgtw
inc
xor
xor
fiadd
adc
(bad)
dec
(bad)
shl
and
test
sbb
ror
add
cmps
cmp
sbb
jmp
fbld
mov
mov
cmp
jge
dec
jo
ss
std
jo
movs
pop
fdecstp
(bad)
ret
pop
lea
sbb
sub
cs
retf
lock
ins
sub
push
js
cmp
fimul
xor
outs
std
cmp
mov
nop
xchg
(bad)
movs
and
loopne
(bad)
pusha
ins
sbb
sbb
dec
add
ja
cs
mov
sbb
je
aad
in
pop
loopne
leave
add
pop
push
xor
sbb
push
dec
repz
xchg
cdq
jle
pop
add
aas
and
nop
add
dec
ret
aas
fs
idiv
dec
and
(bad)
jecxz
test
or
dec
and
das
sub
shl
cld
add
adc
inc
jl
icebp
(bad)
adc
dec
ror
add
jb
jle
(bad)
mul
arpl
jp
repz
neg
push
cmp
scas
mov
fs
data16
ficomp
fimul
cmp
mov
clc
jb
mov
push
aam
js
dec
jmp
(bad)
pop
cmp
inc
jl
jmp
icebp
dec
add
mov
je
dec
mov
push
dec
push
jge
imul
jb
push
data16
inc
sub
pop
sbb
dec
sar
enter
mov
stc
inc
mov
jnp
lods
xchg
dec
pop
mov
addr16
dec
psubusb
push
or
lea
dec
jbe
outs
dec
cmps
rol
dec
mov
jp
iret
xchg
push
popa
sbb
nop
mov
jp
or
js
and
mov
inc
or
ins
pop
inc
jecxz
and
mov
cmps
mov
mov
mov
pop
xchg
jno
test
je
push
bound
jae
sahf
sahf
arpl
and
and
loope
add
repz
mov
xor
loop
and
(bad)
in
ret
pop
mov
jno
push
and
clc
push
clc
ss
cmps
in
xlat
pop
mov
add
ins
dec
mov
pop
dec
xchg
mov
inc
retf
scas
jno
ins
call
xchg
sbb
popf
xchg
xchg
(bad)
test
outs
scas
xchg
inc
leave
cmps
je
js
icebp
push
xor
mov
in
shr
lock
or
mov
push
cwde
jns
jg
xchg
pop
xchg
fadd
ins
bound
loope
inc
xor
push
sti
in
in
and
mov
idiv
test
lods
shr
xchg
mov
imul
xor
inc
aad
movs
jmp
out
lods
sub
inc
loopne
xchg
push
push
addr16
jo
or
push
cmp
pop
push
xchg
adc
sub
dec
pop
hlt
mov
mov
iret
sbb
icebp
ret
mov
xor
add
lea
mov
and
aad
das
mov
jle
ins
repnz
sbb
es
or
xchg
imul
pop
nop
xchg
outs
xor
inc
(bad)
(bad)
and
ins
outs
popa
std
xchg
test
push
xchg
cwde
xor
xor
pop
jg
call
in
mov
jl
retf
fs
mov
add
ret
jnp
mov
inc
push
test
dec
(bad)
jbe
sub
in
inc
pop
out
(bad)
or
cmc
js
fdivr
daa
push
addr16
sbb
fwait
mov
lahf
loop
loop
adc
jns
or
xor
cld
and
push
push
mov
adc
mov
daa
arpl
retf
dec
jno
mov
xor
rol
cmp
in
dec
mov
scas
fisttp
xchg
stos
xchg
mov
retf
sbb
movs
retf
adc
and
aam
out
xor
cwde
xor
hlt
mul
lds
xchg
push
cmps
test
ret
call
mov
sti
jo
mov
push
xlat
pop
dec
jecxz
pushf
into
test
into
scas
outs
leave
aas
xlat
outs
inc
xor
(bad)
les
fistp
scas
scas
pop
aad
add
add
push
inc
or
shl
adc
jbe
imul
out
and
ror
and
dec
push
(bad)
adc
push
xor
ins
(bad)
push
dec
adc
(bad)
push
mov
dec
adc
adc
add
ret
pop
iret
or
add
sub
pop
push
rcr
std
dec
or
jmp
sbb
jbe
out
dec
mov
cs
outs
xor
in
sbb
push
mov
mov
jns
mov
and
jle
mov
dec
push
push
repnz
push
stos
shl
pop
iret
mov
fs
mov
adc
inc
xor
add
mov
xchg
inc
dec
int3
movs
push
aam
mov
fmulp
ins
leave
std
(bad)
mov
adc
push
adc
pop
xor
std
stc
fisubr
cmp
clc
fwait
ins
sub
pop
push
xchg
push
repnz
and
arpl
outs
shl
int
xchg
push
xchg
mov
add
(bad)
ja
xor
ss
dec
adc
add
mov
jmp
pushf
adc
adc
xchg
div
and
cmp
fimul
push
mov
mov
sbb
call
sub
push
sub
shl
(bad)
div
jle
fs
aaa
add
aas
xchg
inc
pop
and
sbb
dec
ror
mov
cmps
std
mov
in
jo
lock
adc
xor
imul
xchg
pop
xor
out
nop
jl
int3
sbb
imul
and
loope
(bad)
dec
mov
mov
cmp
repnz
cld
xor
mov
test
js
lds
sub
aad
mov
fstp
jae
inc
push
pop
leave
push
mov
ret
aad
ins
aad
in
pop
dec
mov
mov
test
dec
test
pop
popf
pop
cld
jb
(bad)
push
push
popf
test
pop
xchg
les
ror
adc
mov
(bad)
jecxz
in
sbb
inc
call
mov
cmp
out
mov
(bad)
(bad)
mov
sub
dec
dec
retf
mov
and
push
pusha
mov
pop
lock
retf
nop
dec
test
int3
out
jae
in
pop
aas
es
push
movs
xor
or
and
xchg
jmp
cmp
rol
mov
add
sbb
ins
push
imul
add
loopne
sbb
bnd
xchg
xor
clc
out
retfw
push
and
pushf
jge
mov
or
dec
in
jmp
test
cmp
movs
or
dec
outs
fadd
movs
loopne
lahf
sbb
sub
lods
cmp
aas
push
mov
xchg
or
push
xchg
cmp
neg
pop
jnp
ja
scas
clc
jp
fprem
shl
sbb
push
rol
jp
daa
mov
mov
(bad)
cmps
rcr
sub
pop
call
inc
scas
add
fadd
movs
shl
(bad)
data16
(bad)
sti
adc
loope
call
mov
mov
cmp
ds
rol
mov
stos
add
mov
ror
aam
repz
jns
cmp
mov
dec
add
cmc
leave
adc
lods
xor
daa
in
or
xor
cmp
mov
mov
pop
dec
test
cwde
inc
add
mov
sti
dec
int3
outs
mov
mov
rcl
add
xor
aad
repz
mov
fsubrp
and
or
sub
(bad)
and
fld
vmread
xchg
or
int3
push
cld
(bad)
rol
mov
jg
push
jmp
mov
mov
mov
sbb
jecxz
ja
pop
lea
fwait
stc
imul
pop
xor
(bad)
xchg
adc
jbe
inc
push
sub
push
mov
dec
shl
mov
int
fwait
cmps
cmp
jb
repnz
and
mov
and
mov
rcr
mov
arpl
push
cmp
pusha
out
repnz
cmp
sti
icebp
pop
ret
ret
sub
cmp
lahf
dec
das
push
mov
pop
out
inc
push
adc
jge
jne
rol
jecxz
sub
in
(bad)
sbb
int
and
addr16
arpl
mov
ret
jmp
and
mov
out
loop
sub
lahf
pop
pusha
inc
xor
arpl
movs
push
call
cs
ins
mov
ror
push
xchg
xchg
mov
or
cmp
push
mov
inc
fidivr
push
adc
ror
popa
pop
xchg
xlat
dec
push
sbb
stos
mov
shl
mov
(bad)
stc
ds
out
mov
jae
or
push
aam
cmp
mov
jae
std
and
mov
xchg
test
add
push
sub
or
outs
fstp
fist
daa
ins
test
inc
icebp
add
fmul
lock
stos
inc
pop
(bad)
mov
fcmovb
cmps
dec
(bad)
outs
add
or
cmp
dec
aaa
(bad)
retf
repz
and
mov
mov
inc
cmc
dec
retf
or
aad
xchg
inc
cmps
not
xchg
(bad)
mov
mov
push
or
xchg
in
ins
xchg
xor
icebp
lods
mov
sahf
mov
mov
imul
adc
jge
cbw
fs
xor
shl
push
mov
jmp
adc
add
sbb
sbb
and
jle
jno
xchg
leave
mov
outs
jno
or
das
aad
lods
out
mov
inc
mov
iret
fild
mov
or
and
pop
mov
add
push
mov
movs
mov
pcmpeqb
aam
(bad)
and
cmp
(bad)
fdivrp
xor
retf
xchg
inc
dec
push
pop
outs
leave
xor
push
daa
jno
xchg
or
xchg
repz
sbb
enter
xchg
sbb
(bad)
pop
and
js
data16
das
pop
and
pop
pop
outs
push
shl
cmp
sub
fsubr
loopne
cmp
xchg
js
lock
cli
in
imul
pop
out
stos
cmp
aam
adc
inc
dec
add
cmps
jle
les
data16
pop
pop
and
into
cmp
dec
fisub
inc
leave
push
daa
dec
sub
(bad)
shl
sub
mov
xchg
xchg
(bad)
and
sbb
lock
pop
pop
cmc
and
sub
je
hlt
push
jb
in
popf
and
adc
repz
xchg
or
aam
in
ret
repz
mov
fistp
retf
out
or
inc
nop
mov
(bad)
scas
jne
les
add
add
xchg
or
fcmovnb
xor
cld
cmp
jno
xor
xchg
or
cmp
rcl
dec
fdiv
stos
dec
aaa
jne
fnsave
adc
mov
adc
and
sub
cmps
mov
pusha
xor
fmul
mov
and
frstor
jno
sub
retf
into
ins
jne
inc
cmp
pop
xor
mov
mul
test
cmp
jbe
mov
and
push
mov
sbb
pop
mov
push
push
fidivr
push
int3
cmp
add
fidiv
(bad)
push
adc
mov
and
mov
lea
ds
ds
mov
stos
mov
push
addr16
leave
ret
aad
loope
nop
mov
sbb
aad
in
lods
jp
xchg
or
push
scas
adc
inc
outs
add
lea
dec
cmp
call
fs
inc
test
jns
je
and
or
mov
add
nop
adc
loopne
xor
mov
lock
fwait
into
fist
sub
push
jnp
pop
mov
fbstp
jp
frstor
in
mov
movs
mov
js
push
not
dec
loope
or
and
add
xor
sbb
inc
pop
cli
scas
lods
aaa
inc
loop
push
pop
jle
lods
shl
(bad)
xchg
xor
clc
ins
adc
in
outs
out
mov
pop
rol
sub
punpckhbw
fisttp
(bad)
mov
clc
fcom
int3
pop
arpl
jo
pop
retf
xchg
nop
jle
ret
push
sti
out
pop
jb
xor
add
mov
jno
in
mov
ss
xchg
inc
in
mov
in
or
iret
xchg
jl
in
cmps
add
in
in
sub
jmp
sbb
stos
cmp
cwde
push
test
ins
movs
mov
dec
imul
adc
fisubr
mov
and
pop
(bad)
out
aam
mov
sahf
(bad)
jns
jmp
mov
ins
and
call
pop
jnp
fist
cmp
mov
xor
in
sbb
jne
mov
or
mov
xor
int
daa
jg
test
jnp
stos
(bad)
mov
shr
mov
or
ins
xlat
retf
dec
pop
retf
pop
mov
and
psrad
stos
out
jbe
cs
popa
sub
and
inc
scas
push
and
push
ret
js
int
test
inc
sar
test
test
fiadd
inc
out
imul
mov
inc
stos
mov
mov
test
sbb
outs
jmp
mov
sbb
sahf
ret
sahf
cmp
add
add
cs
mov
in
or
ret
lods
(bad)
adc
mov
and
loopne
cmp
test
sub
movs
imul
aam
push
and
fcomp
dec
cwde
push
das
hlt
sub
and
pop
push
xchg
addr16
add
mov
sbb
sub
mov
(bad)
ss
push
dec
jecxz
sahf
retf
xchg
stos
mov
and
fadd
int
pop
mov
bound
call
aam
xor
push
pop
jg
js
mov
xchg
ds
adc
pop
ja
clc
jno
cld
mov
jbe
rcr
mov
cmp
retf
pop
out
outs
push
scas
sub
es
sub
lea
jo
pop
ficom
loopne
sub
call
jl
xchg
movs
jg
inc
fldenv
adc
ja
ja
jl
and
dec
(bad)
and
and
test
add
std
stos
je
(bad)
loop
sbb
jmp
sub
xchg
sbb
test
js
sahf
mov
jbe
les
cmc
test
jmp
test
cmp
adc
jl
mov
enter
add
jns
ror
mov
mov
jbe
mul
push
adc
arpl
xchg
and
pushf
nop
das
pop
inc
pop
dec
in
inc
ins
pop
adc
dec
daa
pop
ins
push
xor
fs
lahf
push
loopne
fld
sub
push
fwait
sahf
test
icebp
adc
(bad)
ds
cmp
outs
test
sub
loop
fcomp
dec
push
fisttp
ja
and
mov
faddp
adc
std
or
dec
push
mov
pop
and
push
movs
dec
bound
fadd
sbb
call
pop
ret
xchg
js
movs
aad
jmp
and
push
mov
push
(bad)
sbb
retf
out
jle
out
jge
sub
pop
out
fiadd
jbe
ret
test
call
int3
adc
mov
addr16
movs
sub
dec
lds
rcl
xor
pop
test
js
in
aaa
sub
xchg
pusha
imul
add
jecxz
or
mov
stos
cmp
pushf
sub
xor
sbb
in
push
in
cmp
sub
dec
(bad)
jle
in
mov
in
cmp
and
icebp
fistp
mov
icebp
imul
sti
xor
pop
jne
out
or
cmp
(bad)
(bad)
icebp
ds
or
cmp
pop
into
push
in
push
mul
adc
popf
stos
loopne
in
shl
xlat
cmp
push
sbb
jl
adc
(bad)
xor
push
ret
cld
push
fsubp
push
sub
inc
lahf
pop
sub
nop
(bad)
mov
jecxz
and
push
retf
out
dec
sar
mov
fsub
outs
mov
adc
fdivr
adc
and
or
dec
dec
mov
xlat
xchg
inc
ret
sbb
jnp
pop
sbb
push
mov
fild
push
mov
mov
push
test
hlt
and
pop
(bad)
icebp
fs
dec
in
nop
test
dec
push
cli
adc
inc
adc
sbb
add
pop
and
int3
mov
sbb
push
xchg
and
sar
in
dec
lods
je
inc
cmp
ret
mov
xor
sbb
push
adc
addr16
mov
icebp
dec
enter
lods
test
or
mov
sbb
xor
jmp
mov
or
mov
sahf
lds
loop
clc
imul
and
fwait
inc
loopne
push
push
push
adc
xchg
sar
push
cmp
push
dec
aaa
dec
lds
call
mov
jg
inc
lock
mov
outs
ss
or
xchg
push
jae
test
popa
(bad)
cwde
pop
cld
cmp
in
rcl
pop
cmp
stc
shl
dec
dec
pop
stos
push
js
lods
pop
test
sub
and
aad
or
or
out
movs
sub
lock
dec
hlt
and
sbb
push
or
shr
mov
or
outs
jg
or
inc
add
std
loopne
jns
enter
cmps
jo
cmc
outs
ins
cmp
fst
std
shl
xchg
ins
jmp
push
sahf
lock
fwait
inc
sbb
inc
xchg
xchg
arpl
xor
test
pop
mov
mov
cmc
mov
ja
pop
mov
xchg
adc
arpl
(bad)
stos
inc
aas
mov
xchg
(bad)
or
pop
jecxz
or
pop
je
mov
(bad)
loop
int3
sub
out
pmaxsw
leave
or
aas
scas
test
mov
dec
popf
xor
adc
mov
push
out
(bad)
sub
jp
aaa
push
mov
popf
mov
sbb
push
inc
sar
dec
xchg
leave
jbe
dec
(bad)
mov
lea
dec
xchg
lods
jnp
push
xchg
ins
mov
xchg
mov
xor
jne
test
mov
scas
hlt
sub
and
xor
pop
xchg
and
mov
stos
push
(bad)
pop
push
not
mov
xchg
mov
fcomi
pushf
rcl
ja
inc
push
aas
adc
mov
jne
add
dec
push
jg
int3
cmps
out
cdq
stos
push
ds
je
or
mov
jae
push
out
das
cmp
fucomip
arpl
bound
pop
inc
jge
push
pop
in
int
push
push
cmp
pushf
(bad)
push
push
retf
les
pop
ja
mov
or
mov
int
into
(bad)
cs
cmp
add
test
sub
xor
push
pop
push
out
stos
cwde
jg
mov
outs
stc
jecxz
inc
pop
sub
mov
cmp
mov
mov
push
pop
adc
mov
xor
mov
sub
pmullw
retw
aaa
call
(bad)
arpl
ins
in
rcr
xchg
out
xchg
retf
mov
push
(bad)
div
xchg
cdq
lea
mov
and
popf
hlt
jmp
inc
sub
sbb
sbb
or
dec
and
or
imul
idiv
addr16
sub
pushf
dec
in
jmp
gs
jmp
xor
fisubr
shl
inc
add
adc
ret
retf
sub
or
inc
loope
repz
imul
mov
xchg
bswap
pop
aas
push
les
push
popf
xchg
popf
or
sti
cmp
push
inc
mov
inc
add
push
aas
push
es
add
mov
push
movs
mov
cs
loopne
std
rcr
pop
inc
dec
lods
add
rcl
cdq
das
setae
push
mov
lds
cmc
adc
sub
clc
inc
xchg
and
xchg
outs
ficomp
movs
lds
rcl
xchg
(bad)
or
dec
mov
push
mov
push
sbb
repnz
sub
aam
stos
inc
jb
dec
lods
mov
retf
jbe
xchg
or
jge
mov
les
sub
dec
cwde
imul
jmp
(bad)
je
test
and
xchg
jp
mov
pop
mov
jge
mov
not
push
call
cli
mov
(bad)
retf
push
cmp
add
(bad)
mov
leave
stc
dec
dec
enter
xchg
and
and
adc
ins
lahf
cld
inc
pop
leave
rol
icebp
cwde
dec
push
push
repnz
push
xchg
fwait
leave
sbb
pusha
outs
dec
inc
xchg
inc
push
stos
fstp
or
lea
mov
cmp
mov
ds
out
ficom
lods
je
xor
mov
inc
aaa
cmp
xor
mov
icebp
call
xchg
jb
xchg
(bad)
dec
ret
xchg
push
retf
mov
scas
pushf
pop
adc
adc
or
add
mov
je
movs
lods
pop
rcr
rcl
jae
fwait
lods
adc
es
sub
bound
jmp
repnz
ins
imul
fld
cli
push
mov
sbb
pandn
popf
lods
test
ret
into
add
pop
cmp
cdq
pop
and
fdiv
neg
mov
and
and
pop
add
loopne
xchg
mov
inc
mov
sub
xchg
mov
jns
add
ins
call
adc
adc
cwde
(bad)
lock
movnti
dec
lods
movs
adc
daa
lods
out
mov
and
jge
adc
bound
add
and
test
lods
shr
xor
cli
aad
mov
sbb
cmp
mov
aad
mov
or
bound
or
js
inc
ds
retf
mov
or
adc
sub
popa
xlat
(bad)
rcl
lods
push
cli
(bad)
jg
adc
mov
xlat
lea
in
jmp
adc
pop
stc
pusha
mov
xchg
pusha
adc
loopne
fimul
sub
push
daa
sub
push
sbb
adc
jle
aas
xor
mov
scas
dec
push
push
sti
xchg
mov
xor
loope
or
push
push
sbb
dec
les
out
add
test
and
fadd
sbb
cs
imul
and
lods
xor
(bad)
xchg
outs
pop
jmp
jo
clc
imul
dec
inc
cmc
cli
cdq
shl
xchg
test
in
(bad)
sbb
dec
loopne
fwait
add
sar
adc
out
xor
xor
push
hlt
mov
into
pop
(bad)
pop
cmp
imul
inc
and
out
in
xchg
outs
dec
dec
lea
jmp
test
movs
lea
lock
ret
mov
xor
sbb
push
mov
push
fs
aam
mov
jbe
and
outs
cld
jbe
ins
test
stos
cmp
out
push
fadd
call
inc
stos
sar
cmc
stc
(bad)
jnp
fstp
jae
xchg
out
adc
jnp
shl
call
jbe
ds
in
xchg
out
(bad)
fimul
mov
pop
mov
data16
cmc
cmp
xor
movs
xor
loopne
xchg
jae
push
js
mov
push
mov
dec
and
push
jp
dec
adc
pop
dec
add
daa
dec
and
fst
loopne
not
xchg
in
mul
jae
call
fcomi
sbb
les
jbe
lods
jns
dec
adc
jne
ffree
fsubr
dec
push
mov
push
inc
push
fstp
(bad)
lahf
or
jle
jo
test
or
xchg
xor
loop
push
movs
push
sub
xor
cs
in
xor
mov
std
mov
push
push
and
mov
jne
jle
outs
jns
(bad)
shl
pusha
ret
or
push
ss
or
jmp
pop
in
xor
mov
lds
jno
xchg
cmp
xor
xchg
or
xchg
add
and
cli
cmp
mov
in
dec
cwde
in
sub
xor
in
cmp
dec
es
dec
jle
mov
mov
out
scas
fsubr
or
je
jg
or
cmp
inc
push
add
ins
cdq
or
les
test
pop
(bad)
nop
jecxz
into
dec
cmovb
rcr
rcl
scas
sub
loopne
in
xchg
or
and
(bad)
jmp
add
mov
inc
into
cdq
rcr
inc
sar
pop
lds
sbb
out
pop
leave
push
push
test
cmc
mov
jae
adc
jmp
(bad)
mov
das
mov
and
popa
adc
retf
jae
jbe
leave
push
mov
xchg
inc
call
test
mov
(bad)
mov
jmp
stc
xor
stos
sbb
in
cs
(bad)
xor
popa
cmp
out
cmps
(bad)
repz
test
ss
push
pop
cmp
or
sub
imul
int
inc
les
clc
scas
adc
inc
and
jno
adc
xchg
cmp
leave
adc
daa
in
cmp
rcl
xor
ins
(bad)
test
mov
add
je
out
sub
xchg
xchg
repz
icebp
out
out
sbb
daa
je
pop
push
div
lock
push
or
sahf
mov
aam
mov
leave
dec
dec
repnz
xchg
pop
pop
hlt
lods
adc
test
add
pop
int
jmp
xchg
jbe
add
jle
arpl
sub
loop
arpl
lock
mov
(bad)
clc
xlat
cmp
in
or
jno
imul
cmp
cmps
mov
(bad)
ss
in
fdivr
pop
aad
aaa
adc
and
push
cmp
pop
scas
and
fisttp
fsubr
mov
push
sub
pop
in
cmp
sbb
mov
fldenv
dec
movs
loopne
scas
ja
enter
cwde
dec
inc
icebp
sbb
lods
das
test
cmc
int
jmp
jecxz
push
addr16
dec
mov
out
pop
movs
cmc
xchg
repz
shl
mov
jmp
and
retf
or
push
mov
inc
iret
jo
cmp
sub
(bad)
and
pusha
out
mov
les
xchg
je
inc
jae
(bad)
adc
add
mov
push
sti
add
xor
fst
mov
lahf
aam
cmp
jmp
test
cmps
ins
push
mov
push
faddp
inc
add
mov
test
and
call
std
gs
sahf
daa
lock
lahf
jmp
mov
ret
call
dec
xor
sbb
sub
into
sbb
movs
mov
aas
ins
fstp
test
or
es
xor
or
sub
xor
xor
ret
cmps
inc
fdivp
pop
push
jg
pop
cmps
fst
jno
test
jmp
xor
retf
imul
xchg
xchg
shl
pop
mov
rcr
jno
lock
es
dec
std
push
rcl
popf
mov
and
lds
arpl
nop
loope
pop
rcr
enter
adc
adc
mov
mov
inc
or
jae
aad
or
jp
pop
mov
shr
rol
cmc
pop
xor
fidivr
idiv
jnp
dec
jb
mov
or
jecxz
rdmsr
and
std
push
enter
or
inc
call
mov
push
cmp
hlt
retf
ja
mov
ret
sub
jp
scas
push
mov
or
adc
and
mov
pop
js
outs
test
push
xchg
mov
daa
pusha
mov
lock
js
ds
scas
and
mov
mov
popf
inc
or
fdivr
test
mov
jb
mov
fwait
mov
or
(bad)
cld
xchg
mov
push
adc
dec
fiadd
stos
daa
cmp
rcl
jae
pop
sbb
cmp
inc
xchg
mov
sahf
stos
fmulp
das
not
adc
ror
cmp
les
or
push
outs
icebp
mov
sub
jg
add
fbld
mov
add
push
nop
inc
jmp
mov
sti
test
inc
sub
mov
adc
stos
scas
lods
mov
lea
mov
sub
arpl
pop
test
xchg
mov
(bad)
pop
frstor
jb
hlt
jmp
hlt
dec
push
or
leave
(bad)
mov
loop
dec
stc
pop
mov
sbb
jnp
cmps
test
pop
cs
mov
sbb
xchg
dec
lea
xor
cmps
xchg
and
pop
rol
dec
inc
in
out
test
bound
pop
cdq
cmp
mov
pop
jbe
cmp
js
cli
std
sub
jmp
adc
dec
dec
out
(bad)
pop
int3
xor
pushf
mov
push
pop
cs
(bad)
sbb
push
push
jo
mov
cmp
(bad)
mov
lods
mov
fwait
sbb
movs
dec
stc
jbe
adc
jbe
call
scas
iret
sub
mov
cmp
add
mov
js
mov
add
jb
sub
test
mov
loopne
jp
lds
out
xchg
loope
das
add
push
push
fisubr
pop
cmp
sbb
push
mov
out
arpl
js
es
sub
sub
jbe
dec
fwait
sahf
lods
or
iret
push
fucomi
and
nop
mov
pop
push
sub
in
xchg
mov
jae
jno
pop
pop
(bad)
xlat
xor
sbb
mov
xchg
(bad)
std
(bad)
adc
xchg
retf
loopne
add
xchg
xchg
test
fimul
movs
or
in
(bad)
mov
(bad)
icebp
xor
mov
jmp
sbb
test
adc
inc
and
jae
mov
adc
in
lods
jo
sahf
lea
jp
je
movs
loope
es
jg
mov
sub
(bad)
mov
sahf
in
cmp
int
mov
int
mov
ror
jo
ja
data16
out
sbb
jbe
das
or
or
cmp
retf
xor
fst
push
in
movs
popa
retf
sbb
adc
cs
jnp
pushf
xor
ret
and
les
push
(bad)
pop
stc
in
arpl
daa
inc
push
dec
dec
inc
sub
out
sub
stos
xlat
sub
scas
cmp
fcmovu
cmp
addr16
mov
sbb
lods
inc
cmp
aaa
cmp
sbb
xlat
dec
les
push
pop
xchg
out
xchg
jb
mov
dec
push
out
inc
repz
es
shl
push
stos
imul
(bad)
out
push
and
mov
js
loope
cld
xor
sbb
jb
repnz
add
cmps
outs
shl
repz
or
push
mov
scas
bound
xchg
add
mov
fistp
adc
ds
rcr
xor
cmove
stos
sub
cld
adc
inc
mov
out
shr
and
xchg
cmps
icebp
dec
pop
xchg
inc
mov
nop
(bad)
into
or
mov
mov
mov
iret
ds
stc
xor
adc
sahf
call
outs
ja
js
jge
xor
rcr
fs
jecxz
pop
addr16
or
ds
imul
in
push
int
pop
imul
mov
or
inc
jmp
je
test
cmc
xor
jle
sar
pop
inc
(bad)
xor
xchg
push
enter
imul
sbb
(bad)
mov
je
dec
ficom
or
xor
dec
mov
cdq
das
outs
(bad)
xor
or
mov
and
lds
fiadd
int3
cmp
dec
mov
pop
pop
mov
repnz
js
stc
cs
retf
ja
stos
adc
in
out
(bad)
or
add
mov
dec
cmp
aas
mov
dec
or
cdq
push
mov
mov
sbb
lahf
xor
rcr
mov
jge
lods
jnp
fsub
sti
aam
fsub
push
(bad)
jno
scas
cmp
ds
lds
add
sbb
outs
ffreep
inc
mov
std
dec
mov
pop
cmp
js
outs
sar
cld
iret
retf
(bad)
pop
xchg
inc
repnz
je
test
xchg
sub
pop
mov
imul
or
(bad)
xchg
mov
div
stos
(bad)
stc
neg
or
mov
jg
pop
mov
ins
enter
test
xchg
or
xor
hlt
dec
mov
and
push
add
outs
scas
inc
jg
je
mov
jns
sbb
mov
cmps
cld
(bad)
(bad)
call
out
in
fdiv
dec
or
fisubr
(bad)
aam
pop
mov
xchg
and
inc
mov
pop
movs
mov
cmps
xchg
push
scas
jns
jnp
aad
aam
push
lds
je
fist
imul
inc
leave
mov
dec
jmp
jbe
lods
xchg
ficom
stc
xchg
popa
dec
sub
fcmovne
cs
cmp
fbstp
xor
xchg
sbb
push
push
call
mov
push
sbb
(bad)
fs
add
and
xor
adc
and
fs
mov
and
ins
cdq
popa
push
movs
inc
adc
jo
aas
add
gs
lahf
loopne
aaa
mov
xor
xor
xchg
cmp
mov
pop
dec
push
cli
jae
fistp
or
aaa
pop
mov
mov
sub
out
icebp
(bad)
fs
add
inc
fisub
lods
mov
icebp
imul
int3
daa
lahf
ss
out
(bad)
adc
(bad)
xchg
xchg
push
jns
pop
rcl
and
xor
sbb
in
and
ror
imul
or
pop
icebp
jnp
cmp
into
mov
aad
loope
mov
dec
mov
jmp
cdq
lahf
aaa
push
aas
mov
movs
popa
add
and
mov
into
dec
(bad)
mov
call
adc
mov
adc
jmp
sub
add
out
popa
stos
adc
test
jb
add
es
ins
jg
stos
xor
dec
push
icebp
fld
mov
sbb
stos
jnp
inc
jo
dec
mov
rcr
pop
js
mov
lods
mov
mov
inc
sbb
rcr
outs
sub
xchg
cdq
jae
pop
hlt
inc
rcl
mov
jg
(bad)
ror
lea
sbb
jae
jne
fidiv
pusha
hlt
mov
je
pop
bound
inc
jno
xlat
jge
es
sar
inc
in
push
gs
jecxz
adc
test
dec
fldcw
pop
rcl
sub
xchg
xchg
aam
pop
jecxz
sub
mov
das
test
xor
les
out
sub
push
or
gs
fmulp
test
inc
into
fisubr
(bad)
clc
sahf
fstp
mov
push
add
sbb
lahf
test
push
pop
call
mov
es
int
retf
sbb
and
and
nop
int
les
jle
pop
xchg
call
test
bswap
inc
xor
mov
rol
inc
data16
jae
ins
cwde
jae
fadd
iret
mov
shr
fsubr
cli
jmp
cmp
ins
inc
movs
push
adc
outs
mov
cmp
test
ds
fiadd
mov
mov
push
popf
call
ret
stc
cli
std
inc
dec
int3
cmp
add
outs
jns
adc
dec
frstor
push
test
pop
test
inc
push
pushf
clc
pop
cmps
movs
mov
pop
fisubr
out
mov
dec
mov
data16
jbe
mov
cmp
dec
jae
xor
add
jb
cli
gs
into
mov
or
pop
cmp
sub
int
aad
lea
inc
std
leave
inc
jl
xchg
fcomi
loope
add
push
jle
int
cs
jecxz
or
jecxz
fmul
not
or
xchg
nop
fnstenv
jnp
imul
cdq
or
or
ud0
or
or
adc
dec
lock
out
jmp
pushf
push
movs
cli
jae
xlat
sbb
sub
sahf
pop
pop
pushf
gs
push
dec
fsub
xor
jmp
pop
xchg
sub
(bad)
push
fdivr
inc
and
dec
cmp
shr
pop
push
int3
ficom
aas
cmp
lods
jp
cli
push
sbb
inc
jns
int3
aaa
test
das
loop
mov
pop
clc
push
data16
push
pusha
inc
and
cdq
cwde
fsub
add
sub
inc
and
movs
out
add
xor
out
mov
ss
pushf
sbb
stos
fist
mov
js
dec
rcl
fsubp
lahf
and
in
ja
test
dec
and
add
cdq
jge
inc
sbb
rcl
out
and
push
jnp
mov
jecxz
sbb
jno
xor
sbb
ret
sbb
mov
mov
jl
ins
test
pop
loop
sub
sbb
test
xor
test
sub
js
add
xchg
aad
and
cmc
jmp
sub
ins
sub
repz
jmp
inc
imul
lods
dec
push
xchg
dec
xchg
sbb
(bad)
inc
ret
push
and
inc
test
shr
movs
mov
lea
or
call
outs
cmps
or
jbe
dec
in
stos
mov
lods
xor
pop
dec
clc
dec
push
cmps
test
and
sub
adc
push
in
ror
iret
mov
rol
jmp
dec
sub
ds
scas
popf
or
dec
push
and
stos
mov
pop
es
xor
jnp
dec
mov
push
(bad)
test
xchg
leave
jo
and
mov
mov
xchg
fnstcw
call
into
bound
lds
cmp
xchg
dec
or
aas
out
sbb
sbb
mov
inc
dec
aam
inc
mov
ins
jne
int3
and
inc
dec
(bad)
sbb
cmp
push
movs
inc
js
cs
leave
mov
adc
xchg
cmp
jo
mov
mov
inc
sub
pop
jl
sbb
lods
jmp
stos
xor
repnz
retf
fbstp
dec
idiv
xor
sbb
ret
leave
cmc
stc
ret
mov
and
adc
sbb
sbb
xchg
jge
pop
xchg
pop
out
cmp
retf
fst
fsubr
cmp
pop
les
(bad)
or
add
cdq
(bad)
and
aaa
fdivr
pusha
jno
lahf
lea
ficomp
cmc
jns
int
add
xchg
mov
repz
fiadd
pop
jb
mov
cmp
jle
cwde
in
mov
test
inc
dec
test
call
inc
in
pushf
popa
push
push
das
call
cmp
test
add
jmp
dec
rcr
xlat
retf
movs
push
scas
stc
loopne
jbe
sub
enter
or
cs
fsub
cld
pop
cvtpi2ps
stos
call
(bad)
jmp
cmp
ror
sar
hlt
in
cmp
fwait
loopne
xor
(bad)
sti
xchg
out
or
inc
push
dec
je
fdiv
push
fldenv
xlat
stc
mov
jmp
fs
push
pop
inc
add
retf
rcr
loope
int
jno
cmp
push
sysexit
popa
pop
or
mov
sub
lods
pop
ins
cmp
nop
in
scas
mov
push
out
lds
fyl2x
xchg
shl
aad
xor
shr
or
imul
clc
jle
inc
lahf
or
and
outs
lea
add
mov
sub
sub
push
sub
xchg
sub
sbb
and
repnz
dec
cmps
mov
shl
ret
std
adc
fdivr
dec
or
push
sub
inc
xchg
push
hlt
imul
xor
mov
jne
ins
sbb
out
sub
pop
call
xor
mov
sbb
clc
lods
sub
aaa
push
rol
lods
mov
sbb
shr
mov
movs
std
inc
cmps
movs
fistp
or
pop
bound
xor
inc
call
jo
xchg
imul
inc
ins
mov
or
fwait
xchg
push
test
and
dec
push
stos
xor
ins
dec
and
mov
call
ss
push
fmul
jmp
ds
in
push
mov
ja
xchg
enter
(bad)
xchg
dec
test
mov
mov
inc
loope
xchg
fidiv
mov
in
pushf
jne
rol
xlat
xchg
repnz
adc
ret
retf
push
cld
cmc
mov
mov
mov
inc
imul
mov
retf
nop
jge
popf
adc
or
test
popf
jg
imul
retf
sbb
hlt
jp
call
mov
or
jge
fwait
outs
push
adc
jmp
add
mov
cld
inc
mov
fild
das
or
adc
mov
sub
xchg
sbb
call
cdq
dec
loop
push
add
push
lods
repnz
dec
push
adc
and
xchg
js
inc
adc
xlat
pop
repz
je
out
jge
push
(bad)
js
call
adc
xor
push
call
dec
test
sbb
dec
xor
mov
adc
lahf
mov
push
retf
es
xchg
into
mov
xchg
pop
scas
daa
jo
mov
inc
ret
mov
stc
inc
fld
les
out
inc
jmp
mov
fistp
mov
add
push
jmp
inc
mov
sub
pop
jmp
xchg
arpl
dec
sbb
jbe
cwde
sbb
loope
xchg
loop
or
add
mov
sub
div
sahf
int3
xor
daa
enter
sbb
(bad)
mov
test
sbb
test
out
and
inc
add
mov
std
push
sbb
push
pushf
jnp
xor
jle
xor
or
fld
pop
scas
cld
push
pop
xchg
adc
mov
(bad)
mov
or
jbe
xchg
xchg
clc
pop
add
ret
mov
clc
aaa
xchg
push
cmc
pusha
mov
cwde
mov
push
inc
ret
int
out
push
xor
jl
mov
stc
loop
dec
pushf
pop
add
sub
fsub
cmps
movs
rol
(bad)
(bad)
and
cmp
pusha
and
test
out
(bad)
lock
pusha
adc
mov
mov
das
or
cli
sub
ins
int3
daa
lods
popf
aam
jecxz
inc
xor
mov
adc
ins
loopne
psubsw
loopne
iret
dec
icebp
jo
mov
ins
sub
fdiv
pop
mov
cmp
lods
push
test
xor
pop
out
loope
push
and
mov
sub
aam
inc
call
xchg
jns
mov
int
in
dec
pushf
jle
jae
dec
iret
int
test
test
fcmove
mov
ins
xchg
inc
add
and
js
sub
mov
adc
push
jo
xor
cs
into
inc
inc
or
fcom
ret
ret
cmps
add
adc
mov
jmp
call
mov
ret
movs
sbb
inc
add
pusha
mov
fisubr
pop
sti
mov
loope
ss
push
movs
into
popa
cmps
xchg
and
lods
fldcw
cmc
xchg
hlt
loopne
and
outs
movs
adc
mov
leave
pop
rcl
xchg
sti
(bad)
push
test
jecxz
cmps
add
retf
into
enter
(bad)
add
mov
mov
cmp
xchg
xor
sbb
retf
pop
(bad)
push
fistp
push
in
fdivp
popf
fiadd
movs
popf
push
loop
push
loope
(bad)
mov
mov
popa
adc
sub
retf
mov
mov
stos
dec
movs
jmp
xchg
jecxz
lods
mov
lods
mov
loope
sbb
fdiv
add
out
mov
ss
stos
add
data16
jmp
add
stos
pop
fwait
call
cmp
dec
jb
sbb
retf
jp
test
(bad)
shl
inc
push
xchg
dec
sub
lods
scas
rol
ins
and
stos
test
retf
sub
fidiv
cmp
add
xor
sub
jo
mov
push
mov
fistp
push
xchg
rol
out
mul
popa
mov
mov
xchg
hlt
pop
mov
mov
sbb
call
or
cmp
push
and
xchg
or
loopne
add
fadd
xchg
rcr
or
push
add
adc
push
outs
push
xor
sti
ret
add
push
pop
mov
scas
pop
adc
popa
(bad)
push
cmps
add
jg
xor
dec
in
dec
cld
push
jg
cmp
pop
cmp
fnstsw
and
sub
mov
push
(bad)
aad
in
pushf
addr16
pop
pop
cli
ret
ins
sti
lock
test
ds
jo
cmps
(bad)
mov
lock
je
adc
mov
iret
mov
xlat
jl
dec
fistp
sbb
push
gs
jbe
mov
fild
les
(bad)
scas
mov
sbb
fsubr
popa
sbb
into
popf
xchg
pop
iret
dec
test
and
fld
or
adc
xchg
sub
dec
adc
lahf
stos
mov
rol
imul
aas
(bad)
inc
(bad)
je
jo
push
hlt
or
sahf
das
mov
mov
fisub
push
mov
xchg
call
aaa
adc
inc
stc
cmp
xchg
scas
push
out
or
jno
sub
mov
and
cmp
lds
mov
sbb
into
push
aad
xchg
push
and
jg
pop
sbb
ins
nop
leave
adc
idiv
mov
aas
xchg
dec
mov
nop
xor
mul
pop
outs
cmc
into
adc
sbb
push
rcr
retf
test
sbb
mov
cld
sub
cs
xor
pushf
fcomp
out
jb
dec
sahf
mov
repnz
mov
sbb
push
adc
dec
hlt
mov
mov
or
mov
push
out
xor
lahf
in
data16
mov
clc
div
movs
test
push
add
(bad)
movs
retf
cld
sbb
sbb
dec
mov
shr
retf
pop
bound
mov
sbb
(bad)
cmps
push
out
inc
popf
mov
mov
hlt
outs
dec
movs
data16
imul
outs
int
jb
gs
sbb
loopne
jo
(bad)
dec
xchg
retf
mov
sbb
jle
and
sar
repnz
jmp
pop
add
repz
push
mul
retf
mov
xor
popa
mov
cs
inc
or
mov
scas
pop
dec
dec
ins
jl
fldcw
mov
(bad)
lods
xchg
adc
dec
push
mov
data16
arpl
out
rol
rcr
clc
inc
or
mov
neg
sub
and
call
xchg
inc
(bad)
dec
gs
and
stos
out
pop
pop
movs
pop
rcl
les
jp
das
aas
je
add
or
push
mov
ins
and
dec
pop
sub
push
adc
push
mov
xchg
sbb
cmps
in
push
dec
gs
sub
mov
push
mov
out
iret
in
jno
mov
sub
ja
xchg
inc
fst
out
in
jb
and
in
sub
sub
lods
jbe
pop
cmp
mov
ins
push
push
mov
neg
ds
pop
cmps
movs
rcr
dec
shr
imul
mov
cld
xor
jecxz
(bad)
cwde
sub
enter
mov
(bad)
bound
pop
pop
jmp
adc
ins
mov
repnz
jbe
or
mov
xchg
and
inc
push
jle
sbb
add
out
push
or
ins
xchg
stos
push
add
adc
mov
fidivr
rol
sub
and
adc
das
shl
and
outs
ins
push
mov
div
in
sub
clc
enter
repnz
call
adc
dec
add
adc
std
push
add
cdq
test
mov
add
fwait
push
dec
iret
fistp
and
xor
jmp
scas
xchg
and
retf
sbb
xchg
pop
shl
mov
pushf
test
rcr
pop
(bad)
dec
mul
sbb
jno
jp
sub
lods
outs
jnp
(bad)
mov
retf
sbb
add
mov
xor
mov
jle
in
(bad)
mov
or
out
outs
and
(bad)
fld
dec
mov
or
pop
out
stos
int
push
xchg
fidiv
call
gs
dec
daa
dec
nop
aaa
jmp
adc
dec
pop
(bad)
mov
push
mov
repz
adc
scas
into
imul
xchg
mov
mov
jae
adc
jo
and
pop
lahf
adc
hlt
cmps
test
mov
xchg
scas
fdiv
pop
push
sub
jne
dec
out
xor
popf
mov
jbe
mov
jg
lods
rcl
ror
ret
hlt
mov
mov
and
jo
lock
add
sahf
cwde
aas
sbb
and
imul
icebp
inc
pop
test
in
repz
sbb
mov
aaa
leave
lahf
mov
gs
cdq
dec
ds
push
or
cmp
mov
xchg
in
xor
xchg
lea
xchg
f2xm1
xchg
push
dec
mov
pop
and
aad
data16
fstp
or
adc
jno
int3
cmp
jge
sub
nop
cmps
scas
mov
shr
inc
sub
scas
sub
mov
rcr
test
(bad)
sub
cmc
bound
jmp
or
in
lods
(bad)
push
(bad)
dec
and
jge
mov
daa
adc
sub
lahf
inc
sti
xchg
xchg
mov
rcl
add
cwde
xchg
std
out
cld
dec
(bad)
int
clc
or
out
or
in
ret
fisttp
call
push
mov
jl
int
mov
cld
fwait
push
add
mov
retf
and
arpl
popf
les
cld
dec
pushf
inc
mov
add
out
outs
pop
dec
mov
sar
mov
iret
test
cmp
push
dec
je
mov
lods
fldcw
xor
push
(bad)
lods
call
cwde
mov
cmc
(bad)
mov
and
iret
adc
jg
add
shr
fdivr
idiv
aam
mov
movs
mov
adc
shr
mov
cmc
cdq
xor
out
ss
into
mov
aad
aas
out
repz
clc
out
shl
lods
mov
pop
movs
mov
ss
fadd
jne
sub
or
jp
push
ficom
or
inc
loop
arpl
xor
ja
dec
push
adc
dec
bound
xor
repz
lock
mov
dec
into
or
inc
xor
repnz
pop
mov
jecxz
sbb
push
std
addr16
jle
sbb
repz
pushf
fsubr
jl
mov
cmc
hlt
aas
int
shl
xchg
mov
fnstsw
fcomp
dec
(bad)
mov
ret
mov
mov
(bad)
call
test
jbe
sahf
out
fsubr
test
pop
cmp
adc
adc
xchg
push
mov
or
or
add
push
es
(bad)
inc
cmp
iret
sbb
lahf
dec
jae
mov
pop
(bad)
xor
push
test
dec
ins
inc
movs
cdq
sbb
mov
pop
push
rcl
jbe
js
xchg
test
(bad)
pop
data16
pop
push
(bad)
sbb
ret
push
pop
rol
add
shl
cmp
enter
dec
aad
push
imul
popa
sti
or
test
scas
inc
adc
mov
outs
and
pop
in
lock
xor
aaa
sbb
mov
mov
rol
sub
mov
rol
xlat
pushf
repnz
loop
jbe
sub
mov
and
sub
fwait
mov
pop
push
sub
cmp
pop
mov
or
or
jg
dec
lea
test
addr16
in
mov
js
lods
mov
daa
mov
addr16
and
xor
mov
push
fcom
retf
jns
in
jmp
mov
loop
stc
ins
ss
xchg
fwait
mov
or
push
push
jno
sub
jmp
stc
inc
scas
out
lods
sbb
adc
ss
cmps
sbb
adc
and
jae
push
retf
adc
jae
mov
adc
popf
jle
sub
out
mov
aas
jp
sbb
nop
es
mov
pop
outs
lods
pop
jmp
mov
ins
and
fimul
jbe
jmp
outs
movs
retf
mov
ret
push
adc
ss
loopne
cmp
jb
scas
cmp
or
push
pop
je
mov
xchg
(bad)
mov
sub
cwde
das
jmp
fcom
aas
int3
jno
and
adc
dec
mov
inc
ins
xchg
nop
xor
rol
cmp
push
int
inc
lds
jge
cmp
mov
popf
bound
xor
mov
add
lods
aam
test
push
aaa
imul
(bad)
cmc
push
push
ja
repz
mov
(bad)
mov
lock
push
cmps
cmps
mov
test
xor
sub
stos
cs
sti
test
and
cdq
xchg
and
test
mov
sub
sub
jl
jnp
retf
int
mov
and
in
jb
lea
(bad)
fwait
imul
adc
les
out
inc
and
mov
sub
pop
mov
or
cmp
scas
mov
xor
fnstsw
add
lods
movs
shl
dec
lods
nop
sahf
inc
jg
fisttp
movs
cmc
hlt
cmps
ja
dec
in
call
out
inc
mov
loop
xchg
scas
sbb
dec
or
jmp
adc
loop
les
and
arpl
fs
repnz
jge
data16
mov
jp
sub
pop
leave
adc
div
mov
fnstcw
lea
jmp
xor
pop
icebp
(bad)
shl
mov
dec
lods
dec
or
mov
fimul
cli
jge
adc
adc
ret
outs
cmp
xor
popf
xor
das
sbb
sahf
cmp
aaa
mov
cmp
pop
inc
xchg
add
les
push
icebp
fsubr
sub
add
ja
std
jmp
(bad)
ror
int3
mov
fsub
dec
jle
int3
icebp
mov
stos
mov
cld
shl
and
and
xchg
in
int3
push
dec
stos
ja
addr16
ins
adc
mov
aas
cs
cmp
cld
jnp
ja
imul
add
fidiv
call
adc
inc
enter
movs
loope
ins
retf
dec
shr
je
and
push
jnp
mov
xchg
xor
jmp
popf
pushf
ins
(bad)
mov
mov
lahf
cmp
in
push
fidiv
push
sbb
or
ret
jbe
outs
or
test
fisttp
push
mov
mov
inc
fst
addr16
in
xchg
adc
push
xchg
test
daa
push
test
(bad)
xchg
mov
repnz
push
outs
inc
dec
ins
mov
(bad)
int
add
imul
sti
dec
add
xchg
stos
sbb
cmps
aas
in
ds
(bad)
cli
lods
and
mov
and
xor
inc
and
addr16
mov
leave
or
lods
or
or
cli
ds
rcl
sar
call
mov
jns
mov
mov
jecxz
loope
test
pop
pusha
push
jbe
shl
in
and
ins
(bad)
push
fsub
adc
sub
test
cli
push
ror
mov
sub
icebp
jmp
mov
push
retf
mov
inc
push
pop
jne
fisttp
dec
imul
ficomp
sahf
push
stos
aaa
mov
jl
push
(bad)
scas
jg
inc
add
inc
jmp
mov
xor
sub
fwait
popf
cmps
push
fistp
xchg
xor
ret
ror
loop
xchg
stc
(bad)
ins
xchg
(bad)
dec
push
adc
adc
fwait
test
mov
or
icebp
adc
mov
lea
mov
fwait
jle
clc
or
inc
jmp
ja
jno
int3
xchg
mov
(bad)
jne
jo
or
ss
test
jae
or
or
push
fld
adc
lods
jnp
out
inc
leave
addr16
xor
int3
test
into
leave
test
sub
pmuludq
test
jl
dec
scas
repz
icebp
ror
pop
push
jge
jno
cmp
retf
sbb
dec
mov
sub
inc
mov
pop
scas
ret
pop
push
xchg
sbb
lods
push
div
push
in
mov
gs
mov
fiadd
iret
lds
and
out
jno
frstor
dec
mov
(bad)
out
mov
jae
(bad)
dec
mov
cmp
mov
mov
dec
aas
fwait
mov
sti
jecxz
jbe
addr16
std
or
push
inc
pop
shl
or
jmp
data16
(bad)
outs
ss
mov
sub
mov
push
add
jecxz
xor
test
jno
and
stos
jmp
mov
push
sbb
inc
sbb
cmps
xchg
fist
repnz
loope
cmp
add
and
fistp
call
cdq
jecxz
dec
cmp
cmc
data16
mov
loop
ins
leave
pop
mov
inc
dec
and
fcmovbe
bound
xchg
std
jbe
(bad)
cmp
push
push
maskmovq
idiv
in
push
xor
cmp
xchg
(bad)
int
fwait
add
jmp
mov
mov
adc
xchg
xor
mov
xlat
ret
and
push
add
loopne
add
mov
and
jbe
xor
pusha
and
xchg
pop
fisub
cmp
mov
or
cmp
out
jge
inc
cmp
mov
in
jl
mov
or
push
imul
mov
and
sbb
jmp
iret
sbb
test
and
outs
mov
add
add
fmul
add
dec
mov
aam
ffreep
popa
add
adc
aas
add
sbb
fbld
adc
adc
mov
hlt
outs
shl
mov
push
out
mov
int3
jae
adc
lods
mov
jb
add
fucom
adc
pop
push
sub
test
aad
test
repz
(bad)
fisubr
jns
int
mov
push
jp
(bad)
enter
add
adc
and
out
and
push
pop
jp
popf
or
sti
scas
and
sbb
xchg
mov
or
xchg
fsub
push
icebp
lea
jg
mov
popa
and
cmp
cld
dec
sub
retf
into
xchg
mov
in
movs
ins
xchg
cmp
mov
mov
sbb
xchg
fiadd
pop
jbe
imul
retf
sbb
pop
outs
and
mov
scas
inc
xchg
retf
stos
daa
jbe
lods
in
sub
xchg
dec
push
push
push
add
push
in
or
pop
enter
ss
div
call
and
or
xchg
rol
inc
mov
int
sub
and
mov
pop
xchg
cmp
adc
add
bound
and
xchg
popf
add
cwde
add
sbb
or
push
bound
fs
aaa
clc
cwde
xchg
test
dec
mov
add
loopne
mul
cmp
jbe
lea
stc
cmps
sbb
ds
xchg
addr16
ja
loopne
movs
jp
stos
jmp
mov
ret
mov
push
repz
adc
jg
xchg
dec
push
cmp
retf
dec
push
or
add
mov
cmp
repnz
inc
fcomp
adc
call
test
jmp
rcr
sbb
popf
jle
rcl
adc
pusha
call
movs
mov
cmps
cmp
(bad)
nop
mov
inc
ret
cmp
arpl
sbb
test
mov
out
sbb
out
pop
mov
jns
jmp
dec
lds
imul
(bad)
pop
lods
(bad)
xchg
xor
inc
cli
pop
(bad)
jge
lock
fbld
out
cmp
std
cli
idiv
fsub
fistp
lea
add
out
or
mov
add
dec
lods
es
xchg
sti
stos
aaa
fbld
das
cmps
jmp
mov
ror
ds
pop
and
scas
call
ins
aaa
adc
icebp
rcl
aaa
jp
popa
int3
mov
repz
fwait
shl
push
outs
sbb
outs
xor
push
xor
test
sub
xchg
xchg
sahf
enter
enter
and
(bad)
(bad)
push
and
mov
popf
sub
mov
lds
enter
sbb
inc
movs
outs
imul
pop
mov
(bad)
in
sti
xor
push
in
int
dec
pop
loop
icebp
push
repnz
je
xor
(bad)
dec
fs
push
and
mov
nop
scas
ins
push
pop
dec
sbb
stos
imul
inc
mov
jecxz
in
ja
push
inc
fs
shl
test
(bad)
fwait
lods
loop
aas
jmp
inc
pop
pop
push
scas
psubw
out
loopne
je
and
dec
and
es
mov
test
mov
int
push
(bad)
int3
or
xchg
push
lock
into
arpl
shl
rcl
sub
mov
push
ffree
xchg
rcl
dec
ins
fcomp
adc
test
inc
mov
jp
bound
movs
sbb
sbb
xchg
and
cld
sub
mov
adc
fmul
sub
sbb
inc
mov
jl
xchg
cmps
das
ins
push
mov
fst
addr16
daa
sub
in
ffreep
push
xchg
push
call
jno
pop
dec
jns
fstp
cwde
push
out
cdq
jmp
rcr
jne
push
push
retf
mov
in
addr16
xchg
push
mov
fldenv
scas
fs
out
aaa
repz
stos
stc
sub
shl
(bad)
out
add
adc
mov
inc
xchg
cdq
mov
loop
ret
mov
mov
push
outs
(bad)
pop
cmps
fild
(bad)
lds
fwait
cwde
lock
adc
adc
fcomp
pop
cmp
popa
or
and
cmp
adc
lods
not
jecxz
cmp
xor
jnp
fwait
mov
push
ds
cmp
or
dec
inc
dec
leave
sub
sbb
inc
mov
jae
daa
mov
aas
leave
xchg
add
mov
pusha
push
pop
imul
mov
fbstp
jle
rcl
pop
add
rcl
pop
retf
(bad)
sub
aas
loope
push
adc
xlat
pop
icebp
add
adc
gs
push
mov
retf
popa
test
fwait
xor
cmp
pop
not
xor
(bad)
out
cmp
cmp
cwde
js
cmp
sbb
mov
bound
int
mov
ins
(bad)
sbb
lahf
inc
push
mov
cmc
or
jle
adc
push
scas
add
psrad
or
adc
nop
inc
sbb
lods
in
(bad)
mov
aad
mov
cmp
jle
(bad)
popa
into
test
cmp
push
fsubr
lds
xchg
out
inc
cwde
sbb
shl
mov
psrlq
jle
cmp
xor
mov
ret
mov
movs
push
enter
hlt
add
sbb
jae
inc
sbb
aas
jmp
sbb
xor
mov
pop
mov
jge
sbb
mov
mov
and
shr
push
xor
or
in
dec
inc
dec
inc
nop
adc
(bad)
pop
(bad)
mov
cwde
xchg
pop
add
add
test
adc
push
cwde
pop
mov
add
and
movs
mov
adc
add
sub
xor
mov
test
popa
push
nop
test
loop
xchg
adc
cmp
add
mov
xor
xchg
dec
repz
es
arpl
dec
(bad)
mov
pop
stos
shl
test
mov
mov
xchg
mov
sub
fnsave
inc
stos
mov
data16
pop
ins
pop
inc
sbb
jl
mov
cld
xor
xchg
mov
inc
mov
cdq
inc
inc
adc
popa
(bad)
push
push
(bad)
in
pop
ins
sub
mov
std
cmp
retf
xchg
sub
cdq
fnstenv
push
fwait
daa
adc
xor
call
fwait
aas
nop
dec
cmp
xchg
inc
xor
push
push
mov
cwde
jecxz
cld
bound
aas
inc
push
push
or
(bad)
pop
test
push
xchg
daa
mov
push
sub
mov
mov
fimul
test
mov
arpl
or
push
mov
imul
cmp
jb
mov
scas
mov
or
cdq
repz
or
shr
jecxz
push
aas
fdiv
rol
mov
sti
sar
inc
(bad)
popa
movs
mov
sub
inc
ret
ret
dec
enter
retf
popa
popa
fsubr
stc
mov
pop
(bad)
fdiv
mov
out
jae
ins
and
dec
jmp
data16
pop
arpl
rol
push
sahf
lods
iret
pop
cmp
scas
sub
lahf
dec
xchg
xchg
and
mov
mov
out
xchg
xchg
popf
and
push
sbb
icebp
mov
ja
xchg
daa
js
push
scas
dec
or
xchg
and
stos
xor
cmps
mov
fdiv
popf
jo
push
add
mov
retf
es
adc
xchg
popa
movs
adc
jl
or
call
in
jne
test
mov
pop
ret
adc
push
push
cwde
jns
inc
jae
scas
repnz
adc
pop
bts
ja
out
inc
jns
add
sahf
dec
lea
mov
push
das
xor
je
xchg
das
int3
loop
stc
outs
addps
mov
pop
repz
adc
dec
data16
adc
sbb
dec
xchg
mov
sar
stc
shl
ficomp
cmp
adc
mov
push
sbb
mov
fisubr
(bad)
jmp
iret
sahf
cmps
into
imul
int3
test
push
push
xlat
mov
inc
int
arpl
(bad)
mov
(bad)
(bad)
add
push
mov
inc
sbb
out
add
dec
mov
and
mov
or
das
and
jl
shl
jmp
push
stos
jg
shl
sbb
jne
cld
push
cli
add
jecxz
sub
push
mov
add
shr
add
imul
or
stc
leave
int
jge
fcom
std
ss
in
jns
push
stos
mov
xchg
add
mov
adc
pop
enter
shl
cmp
test
pop
rol
and
xor
sbb
mov
mov
aad
pop
ret
cmp
sahf
push
push
sbb
or
jae
int3
xchg
cmp
mov
sbb
mov
mov
push
adc
out
loopne
or
popa
xchg
daa
fwait
jle
add
outs
in
sub
inc
mov
jg
sbb
pop
stos
cmp
mov
retf
arpl
leave
aaa
ss
xor
push
mov
hlt
and
int
fist
loope
retw
jb
test
push
add
dec
push
lds
add
sti
lock
mov
mov
in
iret
mov
sub
mov
int
add
arpl
sbb
jp
les
repz
inc
push
pop
or
cmc
adc
sahf
pop
jle
retf
push
mov
cmc
ret
cwde
jns
mov
call
call
sahf
inc
sub
popa
test
mov
push
inc
jmp
mov
or
and
int
(bad)
mov
and
xchg
je
jge
jmp
cmp
mul
std
mov
(bad)
adc
dec
arpl
loope
push
shr
loope
push
xor
xor
and
cmp
lods
rol
cmp
adc
(bad)
cmp
aam
les
scas
imul
in
std
jmp
in
clc
mov
leave
retf
pop
add
cmp
cmp
cwde
jns
fist
retf
mov
fild
mov
push
pop
mov
repnz
sti
or
sub
jnp
add
push
xor
push
bswap
cmp
xor
mov
sti
into
rcr
sahf
adc
jle
and
pop
cdq
xchg
(bad)
ins
daa
dec
ja
loop
sbb
mov
pushf
sub
pusha
or
add
test
lods
push
imul
neg
ret
inc
test
cmp
arpl
or
push
inc
adc
das
imul
xor
shl
jp
js
addr16
mov
mov
out
jecxz
lock
add
sbb
inc
movs
mov
pop
inc
mov
cmps
int
data16
fdivr
mov
lods
das
pop
or
pop
mov
sahf
adc
rcr
mov
sbb
es
mov
mov
dec
xor
mov
shl
mov
jg
mov
out
inc
jp
dec
or
xor
lds
in
adc
dec
lods
ss
mov
(bad)
sbb
movs
stos
push
and
sbb
xor
std
mov
dec
mov
stc
or
shl
xchg
clc
cdq
cld
or
or
and
or
fsubr
or
inc
inc
push
frstor
out
imul
es
mov
or
push
lea
adc
fisub
xchg
hlt
jnp
jae
leave
rcr
dec
dec
pop
fwait
pop
ins
imul
fwait
std
lahf
les
and
scas
jae
fs
push
repnz
lods
loop
xchg
call
push
or
xor
pop
and
mov
pushf
push
hlt
sbb
xchg
xchg
push
cmp
xor
push
xchg
sub
jb
repnz
xor
jle
repnz
loopne
xchg
repnz
inc
mov
(bad)
and
bound
add
iret
cmps
adc
jg
sub
mov
hlt
cmps
cld
js
dec
sub
enter
mov
xchg
movs
jnp
xchg
or
mov
adc
jmp
xchg
sbb
fcmovnb
jmp
or
test
idiv
sub
mov
inc
mov
out
shl
adc
sahf
(bad)
pusha
aad
and
(bad)
mov
test
or
lods
out
xchg
sahf
enter
into
not
adc
mov
sub
pop
push
test
ins
cmp
jecxz
movs
(bad)
lock
adc
cs
adc
adc
pop
sub
es
(bad)
and
xor
inc
jle
xor
sbb
(bad)
(bad)
repnz
cmp
out
mov
or
retf
lea
clc
fwait
test
push
out
add
and
sahf
jns
jno
les
inc
(bad)
sub
inc
div
retf
scas
xor
shl
mov
call
jmp
aaa
sbb
cmc
js
cmc
ins
test
bnd
push
dec
jnp
push
mov
inc
dec
pop
popf
ss
mov
sar
jmp
push
pushf
pop
xchg
lds
dec
lds
jnp
and
adc
fwait
aad
xor
inc
mov
cmp
pop
mul
jl
int3
popf
enter
dec
(bad)
pop
sbb
mov
popf
pushf
neg
jns
nop
mov
imul
loope
fdiv
shl
adc
inc
fcom
popf
mov
in
mov
sbb
mov
or
pop
add
push
jle
dec
mov
xchg
pop
adc
inc
or
adc
dec
sub
leave
ss
xor
fistp
sub
fidiv
mov
stos
push
xchg
jecxz
xor
ret
xor
cmp
add
cmps
mov
xor
push
daa
cwde
dec
(bad)
ja
mov
aam
mov
jg
sbb
cmp
repz
aad
push
jns
je
stos
xor
add
mov
popf
push
test
xchg
or
pop
mov
(bad)
xchg
les
lock
lock
push
and
ins
(bad)
nop
and
int
push
cmp
out
or
in
call
(bad)
sub
xchg
jge
(bad)
mov
or
fdivr
mov
ret
cmp
sub
mov
add
test
xor
mov
or
and
sbb
xor
dec
xchg
mov
and
movs
jle
push
pop
ja
xor
mov
cmp
xchg
inc
cs
ror
ins
ss
sbb
aam
push
or
mov
dec
cmp
pop
cmp
outs
cld
popa
arpl
inc
es
sub
sub
add
ficom
jecxz
pop
jae
lods
xlat
cdq
fld
loop
mov
sbb
mov
retf
push
sbb
sub
dec
ja
mov
hlt
cwde
push
jecxz
sbb
mov
ja
push
imul
rol
in
push
ja
dec
xorps
mov
arpl
jmp
or
int3
inc
push
pusha
pushf
je
imul
js
jl
pop
jecxz
pop
mov
push
mov
cmp
imul
hlt
push
or
in
xchg
pushw
loopne
xchg
push
xor
xchg
inc
stos
sbb
test
popa
inc
stos
std
push
pop
repz
and
cmpxchg
iret
jl
mov
fadd
sub
imul
ds
xchg
(bad)
mov
sbb
inc
and
sbb
add
repnz
iret
jecxz
bound
lock
cmp
mov
ss
test
daa
imul
xchg
or
pop
mov
mov
mov
stc
cmp
push
mov
xor
ficomp
or
cli
mov
xor
sub
or
out
push
out
loope
mov
push
mov
mov
repnz
and
rcr
ds
and
cmc
mov
cdq
dec
fcmovb
cwde
cmp
ror
leave
sub
push
scas
fs
add
int3
xchg
jae
jnp
fs
out
mov
jnp
lds
or
mov
in
pop
dec
ror
or
sub
mov
jp
call
not
sbb
mov
(bad)
not
or
int
inc
jg
repnz
fadd
inc
sbb
sub
jg
mov
cmp
lahf
ins
jmp
stc
sbb
xchg
xor
push
sbb
cdq
mov
in
mov
pop
fisub
pop
push
lds
ret
push
fistp
shl
inc
test
dec
lock
fistp
dec
xor
push
hlt
add
dec
stc
out
nop
hlt
mov
jmp
jo
fistp
jp
push
xchg
pop
jae
pop
sub
push
sbb
adc
iret
jnp
xor
cmps
pop
loop
jge
retf
mov
push
rol
xchg
fimul
call
cmc
mov
daa
mov
or
jo
pusha
jb
in
jecxz
jle
pop
jno
xchg
xchg
stc
lea
pop
(bad)
out
jno
sbb
cdq
xor
frstor
inc
lods
daa
dec
shl
push
pop
adc
cmp
mov
fadd
mov
xchg
jbe
not
es
popf
jmp
les
sub
movs
movs
lods
enter
dec
bound
inc
mov
jle
pop
fs
lods
cdq
xor
push
jmp
js
pop
into
lock
mov
cdq
mov
jl
test
sbb
loope
cs
mov
mov
loop
pop
imul
adc
es
and
sbb
add
xchg
and
and
pop
add
or
enter
ss
loop
inc
cmp
mov
das
das
push
pop
das
nop
ins
test
xor
mov
repnz
stos
movs
xor
dec
into
iret
in
jg
in
mov
pushf
cwde
mov
fs
push
and
dec
adc
stos
enter
mov
mov
xchg
cmp
out
pop
inc
scas
pop
cmps
sbb
ins
pusha
rcr
call
es
jne
(bad)
stos
stos
push
push
xlat
neg
push
xchg
xchg
xor
inc
fcom
pusha
loopne
gs
jbe
cmp
and
inc
mov
test
sub
lahf
push
xchg
ds
scas
out
test
jg
xor
jecxz
sbb
add
xlat
retf
jns
sbb
pop
pop
imul
ficom
mov
aas
rol
test
es
jmp
inc
mov
mov
mov
hlt
mov
hlt
or
call
out
push
sahf
cwde
fiadd
mov
and
mov
sub
mov
jmp
adc
and
repnz
fmul
and
adc
popa
pop
call
fst
push
ins
xchg
dec
inc
dec
arpl
and
enter
push
dec
push
outs
jno
cmp
mov
or
sub
je
dec
enter
dec
hlt
and
cmp
add
sub
jle
or
push
adc
fs
test
sub
gs
int3
mov
xchg
pushf
and
cmps
pop
jo
sbb
jno
sbb
cmps
add
add
mov
pop
test
out
sub
mov
mov
pop
and
ins
loop
enter
lahf
aad
jbe
aad
shl
aas
std
pop
les
add
imul
fwait
shl
or
lds
pop
into
push
sbb
mov
(bad)
arpl
stos
add
mov
or
jl
sahf
repz
mov
dec
mov
inc
iret
push
cdq
adc
pop
shr
pop
pushf
inc
fimul
mov
retf
out
push
lea
jb
stc
push
pusha
repnz
sbb
fcomip
stos
xor
push
fldcw
ja
jle
cmps
(bad)
call
sbb
ins
push
xchg
mov
es
cmp
pop
push
xor
cs
in
retf
and
xor
ret
sub
inc
add
lock
loopne
xchg
or
mul
xchg
pop
fiadd
in
pop
push
aaa
xchg
aad
sub
cmp
pop
cmp
jns
jle
fwait
je
fwait
cmp
xor
mov
mov
pop
mov
and
repnz
mov
push
stc
hlt
inc
sbb
adc
mov
inc
and
ins
shl
(bad)
cmp
arpl
mov
inc
adc
add
mov
inc
daa
fdivr
aam
and
jo
cmp
pushf
icebp
sbb
mov
adc
inc
push
add
jnp
cmp
out
sbb
xchg
fs
xchg
mov
dec
int
cmp
sbb
inc
retf
(bad)
xchg
sub
pusha
mov
ret
cmp
shr
and
push
cmp
cmps
adc
dec
cwde
jp
fist
into
scas
or
(bad)
and
nop
icebp
mov
jecxz
mov
das
inc
mov
outs
das
pop
enter
mov
sbb
xor
test
or
hlt
ret
inc
dec
mov
ins
or
add
cmp
mov
dec
jle
xchg
(bad)
sub
imul
cmp
xlat
lods
(bad)
cmc
adc
arpl
add
push
lods
add
scas
xor
dec
idiv
inc
movs
dec
in
pop
dec
mov
test
ja
mov
push
inc
xor
call
or
mov
call
cmc
jnp
gs
mov
loope
les
push
sbb
pop
xchg
daa
fsubp
cwde
sub
aaa
and
jmp
rol
mov
xor
add
inc
cmp
dec
ins
test
or
outs
cs
pop
xchg
jnp
fisttp
cli
pop
dec
cmc
add
or
pop
mov
frstor
cld
mov
and
ins
or
push
push
pop
pop
mov
test
mov
dec
out
in
push
outs
jo
ins
ins
push
mov
cmps
enter
imul
cmps
data16
(bad)
and
mov
xor
pop
dec
pop
adc
ror
jae
imul
jp
ja
ret
in
xor
inc
popf
jo
(bad)
daa
cs
push
mov
cmp
adc
pop
adc
aam
dec
mov
push
xor
dec
mov
daa
pushf
inc
jg
sti
xchg
xor
mov
inc
xchg
jp
add
popf
leave
fs
inc
mov
int3
shl
in
xchg
es
pusha
dec
not
out
cld
adc
(bad)
fild
mov
xor
ret
push
mov
sbb
jl
enter
arpl
loop
inc
sub
cld
push
mov
fsubr
ret
xchg
dec
dec
out
cld
shr
hlt
das
fnsave
mov
cmp
sbb
fwait
cs
xchg
fadd
xchg
ins
std
ins
adc
push
pop
addr16
dec
jnp
mov
ret
pop
iret
jne
dec
adc
pop
fwait
pop
mov
sbb
scas
je
mov
xchg
in
shl
pop
jns
outs
mov
or
fstp
inc
sbb
or
repz
rcl
std
ret
gs
jnp
imul
enter
jae
mov
rol
iret
push
cmp
pop
cmc
fnstcw
dec
cmps
mov
jae
cmp
into
ret
movaps
cmps
outs
mov
aam
outs
cld
xor
out
sbb
lds
pop
dec
or
shl
adc
mov
lods
(bad)
clc
cmovge
or
lea
add
xchg
cwde
(bad)
cmp
add
xlat
mov
out
pop
push
movs
ins
popf
mov
stos
aaa
out
movs
cld
lock
add
retf
pop
sub
push
enter
lds
cld
jo
sub
lods
test
rcr
stos
jno
mov
imul
int
imul
out
sub
xchg
addr16
dec
and
and
mov
shr
mov
mov
fs
mov
fsub
data16
add
stc
jbe
dec
(bad)
neg
push
imul
outs
dec
xlat
inc
adc
gs
jle
loope
jbe
pop
or
ins
lods
out
inc
mov
loope
inc
loope
mov
dec
jnp
pop
cmp
popf
pop
arpl
js
add
cdq
xor
adc
(bad)
bound
cld
push
rcl
xchg
stc
in
fwait
loopne
or
adc
fistp
xlat
std
sub
(bad)
ins
push
dec
pop
xchg
call
pop
out
sub
xor
test
call
and
or
gs
sub
lods
mov
adc
and
cmc
pushf
cmp
fsubr
out
xor
xchg
loopne
fbstp
fnstcw
add
sub
out
popa
pop
adc
pop
add
jns
xor
fnstcw
sbb
mov
dec
xor
sbb
xlat
push
inc
out
(bad)
sti
push
fnstcw
mov
xlat
jb
push
(bad)
ins
jecxz
xchg
(bad)
sub
pop
mov
adc
xor
jbe
aaa
aas
sar
nop
mov
(bad)
xor
call
or
lea
mov
sub
jmp
add
xchg
jle
jg
pop
pop
ins
jbe
jle
imul
lods
imul
mov
loop
dec
imul
lods
adc
pop
pop
jecxz
inc
fsub
sub
cwde
(bad)
jae
mov
fidiv
jno
jne
inc
pop
cmp
nop
leave
jecxz
movs
dec
inc
mov
bound
ss
push
xchg
sub
nop
cmps
mov
push
sahf
lds
inc
xchg
xchg
fs
retf
ret
mov
sub
fmul
jae
xchg
test
test
inc
adc
adc
pop
mov
xor
sbb
adc
mov
fisubr
mov
jo
pop
js
inc
leave
jbe
adc
mov
pop
mov
pop
push
or
fs
mov
leave
and
(bad)
stos
ss
test
add
int
mov
call
cmp
pop
ret
mov
icebp
out
cmc
retf
out
aad
ins
push
mov
aad
int
xor
sbb
adc
shl
retf
sbb
jl
dec
ror
or
pop
jg
cmp
inc
xchg
int3
fwait
inc
je
mov
test
dec
push
neg
mov
lea
test
icebp
mov
popf
sbb
ins
fcmovne
push
sub
movs
jae
or
std
sbb
pop
mov
fst
adc
enter
out
push
aam
fadd
inc
repz
call
adc
div
adc
lock
ins
ss
daa
xor
scas
push
cmp
in
fs
sbb
jge
sbb
xlat
push
ja
lea
loop
out
xor
jp
mov
fmul
(bad)
mov
bound
ss
jge
xchg
fwait
cmp
ja
clc
mov
push
addr16
movs
dec
mov
ins
lock
je
and
adc
rcl
aam
jae
xor
push
push
popf
pusha
sbb
neg
aad
ret
push
out
popa
rcl
jns
pop
rol
or
pop
inc
es
aad
push
and
addr16
outs
adc
mov
pop
fstp
pop
push
pop
hlt
push
daa
out
cmp
(bad)
fisub
jge
out
out
js
jecxz
jl
retf
cmp
and
call
mov
stc
push
(bad)
xlat
jp
jns
jmp
stos
push
vhsubpd
lock
pop
and
jbe
mov
into
int
je
add
adc
pop
jo
setg
sub
mov
pop
cmp
ror
push
(bad)
adc
add
jmp
fcmove
jmp
enter
dec
cmps
mov
xor
cld
imul
cmp
loop
das
cdq
or
xor
mov
and
xchg
or
(bad)
xchg
mov
jl
cmp
movs
out
in
sbb
pop
sar
aam
jle
xor
add
imul
mov
lods
dec
push
inc
pop
xor
mov
push
les
sbb
repz
out
xchg
dec
out
xor
push
aad
and
or
push
mov
jle
imul
cmp
sbb
cli
stc
dec
push
pop
call
dec
loopne
leave
retf
test
cld
mov
outs
cld
rcr
or
cmp
inc
int3
in
xchg
out
mov
sub
repnz
sbb
pop
or
dec
mov
inc
shl
sub
pushf
leave
jo
lods
adc
adc
cmp
(bad)
(bad)
into
inc
dec
xchg
xlat
fs
adc
pop
pop
xchg
dec
lahf
outs
push
ret
jge
inc
ins
loope
mov
pusha
repz
pop
pop
mov
popa
retf
imul
cli
sub
xor
fistp
cmpps
mov
push
push
nop
mov
and
mov
mov
imul
aaa
cmp
or
xlat
xor
es
test
pop
sub
iret
mov
in
push
cdq
jl
jb
fst
fld
mov
mov
mov
mov
mov
dec
cmps
dec
pop
(bad)
(bad)
or
fadd
popf
xchg
push
cld
push
cmp
or
mov
(bad)
fucomip
imul
pop
add
push
cmc
push
inc
jg
cmp
std
mov
dec
push
fdivr
or
xor
or
sbb
dec
aas
and
cmps
test
mov
xchg
addr16
jmp
jo
scas
out
mov
jns
jg
inc
mov
test
mov
add
inc
sub
call
mov
(bad)
mov
inc
ret
call
lods
loope
pop
repnz
loopne
adc
ins
and
in
and
leave
lods
sub
retf
loope
cwde
cmps
mov
(bad)
dec
test
cmp
std
inc
es
test
retf
clc
xchg
mov
inc
and
retf
imul
cs
jmp
add
add
pop
in
adc
jmp
sub
mov
cmp
push
pop
mov
sub
scas
dec
dec
jle
or
data16
(bad)
(bad)
lods
rcr
clc
xor
xor
sub
mov
gs
test
int
aad
sar
and
xor
xor
cmp
fsub
int3
pushf
int
sbb
or
sti
sbb
(bad)
retf
ss
test
xlat
fistp
(bad)
fdivr
xor
xchg
push
sar
cmp
arpl
dec
xor
bound
jns
push
pop
xchg
fild
ds
data16
cmc
mov
int
loop
imul
enter
lds
xor
mov
mov
sub
adc
dec
lods
dec
or
add
sub
mov
jle
sbb
bound
idiv
(bad)
fst
sbb
mov
retf
cmc
test
icebp
pop
xchg
stos
loop
and
fsub
dec
sub
and
call
xor
adc
cmp
cmp
lds
push
mov
(bad)
mov
in
mov
out
test
add
or
dec
xchg
hlt
mov
fiadd
aaa
mov
sub
sbb
pop
scas
sbb
lock
ss
jnp
fwait
rol
add
add
inc
push
clc
push
mov
mov
sub
xor
cdq
xacquire
shl
inc
movs
popa
aam
sahf
pop
mov
jmp
add
cmp
cmp
adc
ffree
iret
fs
je
pop
ror
in
adc
cmps
dec
and
addr16
xor
out
mov
cdq
rol
push
imul
iret
aam
xor
lds
call
jle
adc
pop
fistp
pushf
dec
jno
lahf
adc
stos
dec
or
lods
popa
push
or
les
cmp
lods
sbb
xchg
xchg
push
fldcw
cmps
xchg
mov
(bad)
mov
push
sahf
ins
sub
leave
es
out
mov
jo
dec
push
inc
inc
xlat
cmp
pop
add
fisub
cmc
mov
jns
jle
and
shl
ss
mov
das
cmp
push
inc
inc
fs
pop
pop
mov
out
dec
pop
fdivr
or
js
mov
lahf
lea
inc
repnz
fadd
jne
gs
mov
ret
pop
and
(bad)
jns
in
jmp
mov
mov
(bad)
std
xor
sar
mov
movs
gs
stos
or
ret
or
int
jp
in
int3
mov
jae
call
jg
add
call
cmc
in
inc
xchg
mul
loop
ret
movs
les
cmp
(bad)
daa
xor
xchg
mul
jno
mov
fs
cmc
je
add
sub
and
(bad)
into
and
sbb
mov
test
jg
sub
sbb
xchg
inc
xchg
aad
mov
(bad)
call
(bad)
xchg
sbb
add
nop
sti
mov
stc
adc
sub
jmp
or
test
sub
ds
push
(bad)
fst
pop
push
xchg
mov
cwde
bswap
stos
xor
push
and
sub
xchg
pop
test
pop
repz
stos
adc
mov
pop
dec
xor
aas
rcl
jmp
push
pop
dec
outs
rcr
jns
jnp
add
stos
or
enter
push
(bad)
and
push
mov
dec
int3
push
mov
movs
jecxz
fdiv
push
dec
sub
add
mov
jno
lds
mov
std
div
push
jge
push
fild
sbb
ins
jle
xor
inc
and
push
or
jnp
imul
add
add
cli
(bad)
mov
adc
icebp
and
push
nop
xlat
shr
in
add
dec
or
in
sar
sbb
pop
sub
and
sahf
call
or
mov
inc
cli
shl
es
daa
jne
arpl
ret
jge
pop
sub
push
xchg
in
(bad)
icebp
cmp
dec
scas
push
arpl
jp
ror
sbb
scas
arpl
jmp
jne
dec
fcmovb
pop
push
mov
shr
dec
sub
push
std
push
push
(bad)
(bad)
pop
std
dec
psrld
jo
mov
ret
out
in
mov
shl
mov
adc
sbb
mov
sbb
repz
mov
cmps
std
sub
(bad)
(bad)
mov
mov
dec
add
test
pop
push
ins
lahf
cmp
out
xchg
mul
mov
cmp
(bad)
adc
inc
fld
cli
adc
adc
jbe
bound
(bad)
mov
je
adc
test
mov
inc
or
mov
mov
inc
bound
fild
sar
loop
and
out
dec
(bad)
popa
cdq
jmp
test
cmp
mul
push
and
add
push
pop
imul
jbe
xor
scas
dec
pop
dec
neg
sbb
icebp
adc
sar
jmp
push
cmc
push
neg
aam
stc
xor
(bad)
ds
xchg
xor
loope
push
ins
nop
push
adc
sbb
pop
aaa
mov
fnsave
arpl
mov
stos
aaa
ja
jne
mov
and
mov
push
inc
push
mov
daa
jno
inc
inc
or
inc
out
sub
jecxz
arpl
adc
popf
lds
(bad)
in
push
in
(bad)
mov
add
jmp
aaa
inc
inc
dec
add
in
xchg
dec
ret
mov
pop
out
in
pop
or
jmp
adc
js
mov
xor
mov
jmp
inc
pop
cmp
pop
pop
movs
loop
(bad)
shr
pushf
xor
and
jne
or
movs
inc
aad
and
and
or
lock
mov
lock
inc
hlt
aad
push
sbb
std
push
cmp
sub
fldcw
inc
xchg
jns
xlat
pop
imul
sbb
clc
aam
sbb
adc
(bad)
jno
inc
int3
xor
out
and
add
pop
sahf
nop
push
ins
pop
shl
(bad)
mov
inc
pop
fwait
jp
outs
dec
out
cdq
mov
cdq
inc
or
push
xchg
das
popf
push
mov
je
test
mov
dec
jne
hlt
call
push
xacquire
or
push
or
fild
push
lahf
push
mov
(bad)
mov
push
in
aaa
sbb
(bad)
(bad)
shl
(bad)
mov
adc
cmps
add
jb
mov
or
cs
div
xor
rcl
mov
test
enter
data16
jecxz
aam
lock
pop
jnp
outs
fwait
pop
movs
cmp
and
nop
inc
jae
fs
pop
inc
push
(bad)
rcl
push
iret
pusha
(bad)
jmp
in
inc
les
or
and
(bad)
jmp
push
or
fs
pusha
pop
test
hlt
ss
cmp
scas
popa
fwait
ror
dec
cmp
xor
push
mov
enter
daa
jne
stos
fst
sub
prefetch
sti
push
not
cmps
iret
ds
std
ret
cmps
mov
imul
sbb
(bad)
rol
dec
sub
enter
mov
xchg
dec
mov
cmp
mov
jmp
nop
push
leave
stc
hlt
mov
mov
inc
dec
mov
add
sub
ret
js
sub
push
xchg
pop
jo
mov
jmp
(bad)
aam
daa
adc
mov
mov
push
jp
mov
hlt
mov
mov
mov
push
cmp
arpl
lods
mov
imul
pop
xchg
jge
(bad)
cmps
lahf
dec
mov
fist
inc
sub
retf
inc
mov
jb
inc
push
add
jae
or
xchg
scas
neg
sar
dec
aad
icebp
mov
mov
jno
mov
xchg
scas
and
inc
mov
sar
inc
mov
or
(bad)
in
xchg
inc
daa
adc
or
adc
adc
push
add
enter
jne
push
cmp
jp
sub
pop
pop
and
pop
in
loop
mov
cmp
add
inc
jle
scas
xor
push
loope
out
xor
mov
in
ins
or
or
xor
popa
jp
in
stos
mov
xor
dec
jns
push
xchg
xor
sbb
(bad)
aad
mul
mov
mov
and
rol
ret
and
nop
and
dec
jbe
stc
adc
inc
in
xchg
movs
pop
out
xchg
push
inc
or
ds
shr
sar
fnstenv
cmp
out
or
inc
popa
mov
cdq
cmp
inc
mov
push
sub
push
jle
add
mov
xlat
fisubr
or
inc
sbb
test
jo
int
mov
lea
scas
mov
jae
(bad)
retf
leave
sbb
call
inc
test
mov
(bad)
jnp
sub
int
adc
push
sub
xor
fwait
or
mov
and
ins
adc
mov
nop
sub
out
jecxz
bound
push
cmp
scas
pusha
ror
mov
addr16
mov
push
cs
adc
jmp
or
adc
xchg
jge
inc
les
repz
sbb
jge
jle
and
dec
scas
sub
jns
je
push
pop
stos
push
pop
inc
dec
enter
test
aam
and
pop
ss
rol
inc
dec
out
inc
sbb
push
ins
push
xchg
push
stc
lods
mov
xor
add
fcomp
jb
(bad)
ins
dec
jmp
sbb
daa
(bad)
mov
pop
jbe
(bad)
lahf
fild
call
stos
cmc
repnz
inc
loopne
popa
dec
cdq
popf
inc
adc
(bad)
and
not
shr
pop
leave
xchg
iret
sbb
sub
pushf
sub
push
movs
rcl
mov
xchg
mov
in
adc
xchg
xor
push
pop
call
arpl
mov
in
jp
adc
lds
outs
(bad)
pushf
imul
pushf
push
outs
push
mov
enter
push
jo
fcmovnbe
jo
mov
sub
(bad)
in
cmp
inc
xchg
out
jbe
jnp
imul
mov
ror
mov
cli
jbe
jle
test
ror
add
ss
inc
push
(bad)
mov
aaa
test
push
and
mov
jnp
rcl
popa
int
movs
ficom
sbb
iret
add
jle
dec
sbb
or
mov
pop
ins
push
movs
call
cwde
pop
mov
mov
adc
int3
push
add
inc
out
xor
js
aaa
add
(bad)
test
push
push
jge
jne
push
push
add
or
pushf
inc
pop
popf
jecxz
adc
and
or
and
loope
aam
or
dec
in
(bad)
loop
or
cmp
inc
push
push
iret
(bad)
xchg
and
and
std
cmp
mov
sub
in
pop
repnz
pop
jne
xchg
adc
(bad)
jae
pop
cmp
daa
fiadd
adc
jecxz
ins
in
lods
nop
jnp
call
inc
shl
sub
cmc
in
icebp
iret
les
pop
sbb
pop
xor
jno
int3
(bad)
jae
scas
xchg
mov
push
js
sub
push
sbb
jmp
push
mov
stc
push
je
popf
push
push
bound
lock
dec
test
or
int
fcomp
xchg
inc
mov
inc
jb
lea
jno
ficomp
(bad)
repnz
shr
mov
fisttp
das
leave
jbe
inc
push
mov
bound
(bad)
jmp
mov
mul
inc
mov
jle
sub
sub
mov
test
lods
mov
call
jl
(bad)
adc
(bad)
rcr
cmp
pop
ret
mov
adc
push
int
(bad)
and
stos
sar
leave
push
pop
jb
mov
data16
sub
adc
pusha
push
into
push
and
idiv
stos
(bad)
mov
adc
jl
push
stos
cmp
outs
imul
jl
xchg
sub
dec
out
call
mov
xor
sub
mov
push
popf
push
inc
stos
(bad)
jae
fwait
pop
and
mov
jp
pushf
pusha
stos
dec
cmp
je
pop
dec
xor
or
(bad)
out
cmp
mov
lds
pop
nop
pop
dec
push
push
gs
(bad)
sub
jmp
call
cmp
jecxz
pop
mov
not
stc
push
mov
pop
hlt
retf
add
inc
sahf
fmul
retf
ret
mov
or
xchg
aaa
call
sbb
test
cmps
pop
pop
cmp
loop
xor
xchg
ror
call
or
scas
push
mov
pop
sbb
mov
sub
shl
adc
inc
mov
repz
bound
jle
cmps
scas
movs
pop
pushf
and
iret
call
stos
or
xchg
xchg
aas
jno
adc
lea
in
out
inc
in
pop
lock
mov
dec
mov
rcr
fist
ins
sti
iret
lea
fmul
fiadd
or
fisubr
mov
jecxz
pop
inc
xchg
ret
fcomp
push
sbb
sbb
or
sub
cmp
test
out
push
pop
(bad)
sbb
(bad)
push
add
repnz
push
lds
cmp
jge
xor
sbb
xchg
add
jbe
loope
pop
pop
dec
popa
xor
mov
adc
sahf
inc
in
lahf
mov
sbb
std
je
jne
push
loopne
xchg
lock
loop
fadd
bound
(bad)
not
add
pop
mov
push
inc
ins
fucomp
push
push
in
sub
call
loopne
pop
xchg
ja
rol
out
repnz
inc
bound
ror
mov
sti
addr16
mov
jmp
ins
scas
cmps
push
pusha
icebp
or
inc
jns
shr
mov
xor
inc
xor
mov
fwait
push
pop
or
std
sbb
mov
sub
sub
push
enter
imul
dec
ret
je
in
test
xlat
test
pop
js
leave
inc
lock
cmc
fldcw
cmp
push
fmul
ror
pop
jae
mov
mov
dec
add
(bad)
fdiv
bound
push
(bad)
test
add
or
and
sar
outs
lea
push
int3
outs
aas
dec
jle
stos
popf
cdq
(bad)
shl
loop
ss
mov
fs
(bad)
push
arpl
movs
int
sahf
stc
bound
ja
xchg
mov
imul
dec
(bad)
and
xlat
cli
mov
in
into
mov
sbb
cmp
or
arpl
fnstcw
mov
shr
or
push
cmp
pop
sbb
mov
sti
sub
sbb
dec
sbb
cli
jle
push
sub
xor
js
push
retf
das
test
js
int3
js
and
cld
dec
shl
pop
sbb
cmp
adc
ss
pop
mov
jp
add
test
stc
jmp
pop
js
pushf
pushf
sbb
icebp
mov
push
sbb
int
es
xlat
pop
push
fidiv
jle
mov
in
mov
cmp
pop
mov
repnz
mov
jmp
mov
mov
in
imul
jo
jbe
push
in
xlat
add
and
or
fisttp
scas
shr
cld
inc
in
neg
adc
pop
mov
or
loope
inc
inc
jnp
sub
call
(bad)
xchg
dec
in
dec
xor
in
pop
rcr
dec
imul
int3
into
cli
fs
out
je
test
sti
test
mov
mov
cmps
aam
add
dec
sub
xchg
cmp
cmps
mov
test
xchg
cli
sbb
movs
retf
mov
sub
scas
push
add
mov
out
sbb
pop
sti
add
and
lock
inc
lods
rcl
test
in
sahf
enter
test
jae
inc
pushf
(bad)
mov
adc
cmp
adc
jle
pop
xchg
push
mov
push
cld
sbb
jge
rcr
cmc
hlt
pop
pop
(bad)
jecxz
shl
clc
push
sub
add
mov
push
pop
fwait
add
mov
retf
arpl
cdq
dec
mov
out
call
icebp
sub
or
pop
dec
mov
inc
add
jmp
fs
in
add
and
sbb
and
adc
rcr
pop
xor
cdq
out
in
enter
fld
or
lock
loope
aam
(bad)
clc
imul
scas
jge
in
push
push
inc
add
push
mov
adc
dec
push
pop
jp
push
jecxz
xchg
sbb
cld
inc
rcr
ins
popw
cmp
pop
jmp
in
movs
ss
mov
int3
or
mov
mov
sar
mov
mov
xchg
dec
shl
(bad)
out
aad
fdiv
xchg
arpl
out
jmp
mov
sahf
fimul
jg
sahf
mov
stos
mov
jmp
std
sub
push
jne
ds
ins
and
sub
jb
push
mov
dec
dec
outs
pusha
cdq
movs
inc
mov
(bad)
xlat
(bad)
inc
jg
xchg
adc
in
and
mov
sub
mov
stos
or
xor
stos
inc
sbb
mov
xchg
sbb
cdq
or
data16
test
xchg
add
xchg
mov
ins
clc
and
int3
xchg
es
pop
daa
pusha
dec
jo
imul
stos
or
lahf
cdq
movs
push
int
and
or
jp
aas
cmps
daa
lods
sahf
ficomp
dec
pop
fmulp
mov
scas
call
setge
xchg
xchg
ja
pop
mov
(bad)
inc
pop
mov
or
rcr
add
sub
jl
push
and
pop
jns
and
popa
(bad)
jae
mov
jle
aas
(bad)
lock
push
popf
repz
mov
(bad)
je
pop
mov
cwde
sub
fisub
inc
fs
push
adc
cmps
ficomp
cld
push
sub
(bad)
ss
jl
sti
pop
lahf
push
cli
push
in
nop
test
sub
xor
repnz
and
fistp
test
add
(bad)
std
jg
fnsave
aad
cld
retf
imul
movs
aad
movs
mov
bound
sub
mov
fistp
test
pop
pop
push
adc
and
outs
loope
into
and
call
scas
fidiv
in
es
and
and
mov
outs
mov
push
dec
(bad)
sti
call
shl
adc
aam
jo
js
cmp
loopne
out
mov
mov
popa
jne
jmp
or
sbb
and
retf
add
mov
mov
pop
lea
push
sbb
cld
mov
pop
sbb
dec
into
les
adc
mov
jno
mov
cdq
cmp
popa
imul
dec
pop
out
mov
test
jb
sbb
lods
sub
push
pop
dec
mov
je
scas
adc
adc
xor
ins
push
arpl
pop
jo
lods
mov
add
mov
jnp
int3
mov
or
dec
scas
pop
outs
retf
shl
push
xlat
and
scas
jmp
loopne
sub
mov
fadd
stos
mov
jmp
dec
xchg
icebp
add
jae
test
(bad)
repnz
pop
aam
jne
sbb
das
dec
inc
dec
pop
mov
or
ins
add
shl
out
xchg
adc
stos
(bad)
and
fmul
add
xor
mov
jmp
and
fs
and
pop
mov
jmp
cmp
jbe
ret
addr16
pop
sbb
or
mov
cwde
add
es
jg
ins
call
mov
arpl
scas
xor
cmp
push
inc
out
sbb
cmc
add
loop
sbb
das
jne
mov
sti
and
fwait
call
movs
pop
mov
sahf
add
inc
jae
out
add
repz
pop
scas
leave
jae
add
jbe
jae
sbb
or
dec
shl
mov
dec
pop
or
xchg
mul
fnstcw
jne
sub
in
ss
imul
jl
je
(bad)
and
and
push
fidiv
jle
pop
repnz
fwait
adc
cmp
add
mov
xlat
aam
cmp
loop
pop
sub
fisttp
add
fmulp
dec
int
ds
shr
push
aad
xchg
rcr
retf
cmps
ins
dec
pop
push
lds
inc
inc
lods
cmps
jno
or
(bad)
(bad)
dec
pop
vmwrite
sbb
add
addr16
inc
xor
test
scas
cmc
push
and
cmp
xor
cdq
loop
and
int
repz
push
fisttp
mov
icebp
retf
in
xor
jp
ret
cmps
gs
push
int3
sbb
pusha
sbb
icebp
pop
pop
add
adc
push
or
xor
lds
add
adc
or
push
push
lahf
push
inc
dec
pop
outs
sbb
fsubr
imul
loope
dec
inc
mov
xor
retf
ret
pop
inc
adc
adc
jo
mov
mov
popa
jbe
fwait
pop
sbb
mov
mov
mov
jb
mov
cli
dec
stos
lahf
cmp
lahf
movs
xor
inc
fcom
pop
mul
int
add
sti
or
push
cmp
out
sti
xor
push
adc
mov
adc
fsub
inc
outs
xor
or
(bad)
popf
pop
adc
das
(bad)
(bad)
jne
hlt
iret
mov
fwait
xor
shr
data16
dec
ins
stos
mov
movs
add
add
idiv
(bad)
je
aam
or
ds
std
and
add
mov
cmps
cli
push
cld
rol
jnp
dec
pop
fild
test
push
jecxz
imul
loop
std
sbb
cmps
adc
aad
daa
add
mov
imul
adc
push
jbe
xchg
inc
sub
jns
xchg
aas
mov
adc
(bad)
jnp
adc
sub
cmps
test
sbb
push
push
nop
or
sbb
cmps
movs
cmp
jge
and
icebp
xchg
sbb
sbb
jmp
test
inc
cmp
mov
loop
xor
adc
inc
loop
sar
inc
add
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
std
or
sbb
in
push
ins
xor
test
xor
jp
cmp
sub
dec
push
pop
mov
in
pop
(bad)
ror
mov
fld
div
or
sahf
imul
pop
int
xor
pop
push
ror
ins
push
xchg
sbb
sbb
lock
aad
jl
adc
stc
and
enter
(bad)
push
(bad)
add
push
sbb
out
fild
mov
std
fld
call
push
mov
cld
sbb
out
jle
xchg
pop
pop
lods
ret
je
into
add
clc
lahf
nop
pushf
add
dec
out
cmps
cmps
std
icebp
mov
push
ja
push
add
cwde
cwde
push
(bad)
movs
in
ins
rol
dec
fidivr
rol
add
sbb
jnp
push
je
aad
adc
nop
adc
adc
int3
bound
pop
cmp
scas
mov
cmp
xor
jp
(bad)
retf
(bad)
stos
mov
je
call
mov
nop
shl
jge
mov
mov
cmps
inc
movs
xchg
adc
sbb
imul
push
in
push
sbb
add
leave
jecxz
repnz
mov
lock
mov
nop
mov
jns
inc
loop
mov
mov
in
or
imul
lock
xor
sub
jnp
(bad)
inc
jmp
stos
sbb
and
lods
fld
xchg
cli
jle
ret
and
imul
sub
js
jmp
dec
shl
es
jl
fadd
inc
cmp
pop
ins
sbb
out
cs
sbb
in
xor
dec
fdiv
int
xlat
mov
dec
repnz
add
mov
mov
xor
push
inc
push
add
or
xchg
jmp
je
jle
inc
ins
clc
xor
add
pusha
mov
ins
mov
sbb
xor
int
mov
pop
mov
mov
es
xor
mov
repz
inc
cmp
mov
xor
cmp
mov
pop
adc
dec
xor
arpl
aam
lds
adc
out
adc
jbe
jecxz
fidiv
inc
and
leave
rcl
jecxz
mov
test
int3
pop
imul
and
mov
add
ret
mov
ja
(bad)
pop
inc
inc
dec
push
pop
in
sti
dec
inc
(bad)
in
scas
ja
dec
outs
les
mov
sub
shl
sar
and
adc
add
xor
xor
jo
inc
loop
fcomp
xor
pusha
leave
add
push
push
sub
or
sub
jge
sbb
push
popf
xchg
jl
pop
jb
push
and
ret
mov
outs
jb
xchg
and
loop
xor
adc
pop
repnz
mov
ror
loopne
mov
push
cmp
int
jle
sbb
xor
mov
add
cmp
xchg
push
adc
mov
jne
cmps
hlt
jl
imul
mov
lahf
or
pop
int3
mov
mov
jge
jne
daa
add
inc
out
daa
xlat
jnp
sub
leave
push
test
je
pop
ror
mov
sbb
jnp
and
sbb
inc
xchg
(bad)
jg
nop
aas
xor
fild
mov
cmp
jmp
mov
and
nop
scas
jns
scas
jmp
adc
in
jmp
and
enter
push
(bad)
and
mov
xchg
or
push
rcl
pop
pop
hlt
mov
cmc
lds
fidiv
push
test
mov
xor
ja
push
lods
sub
arpl
sub
xchg
dec
shl
ins
aaa
or
lea
pop
sub
jno
cmps
push
push
popa
adc
retf
jno
(bad)
scas
scas
je
xchg
shl
cmc
push
pop
xor
sub
jmp
mov
imul
cld
outs
cs
xor
sub
sub
jmp
rol
rcr
pop
pusha
xor
mov
sbb
cmp
jae
add
jns
push
push
jle
xor
lods
jae
popf
cmps
dec
fsubrp
fimul
retf
pop
aam
xor
sub
not
push
scas
add
clc
mov
add
scas
ins
jae
and
es
push
xchg
mov
dec
fistp
xor
jge
jb
adc
xchg
iret
or
aas
inc
sbb
cdq
fwait
pop
js
mov
mov
leave
xlat
push
inc
out
sub
arpl
cwde
sub
fs
pop
jle
mov
xchg
push
pop
scas
add
dec
outs
ret
or
and
pop
ror
jl
(bad)
push
nop
push
pusha
mov
dec
mov
popf
xchg
sbb
popa
(bad)
or
cmps
leave
(bad)
adc
jge
inc
ficom
or
arpl
xchg
dec
inc
ja
loope
in
stc
cs
mov
les
push
push
cmp
sti
sub
push
push
sbb
jae
out
jnp
popa
cmp
bound
inc
ja
inc
stc
dec
dec
inc
test
test
aas
lds
jae
mov
inc
dec
loope
xchg
fs
scas
or
movs
pop
stc
je
cs
push
repnz
jno
fmul
adc
push
mov
inc
mov
sub
popf
mov
adc
jge
aad
les
les
mov
test
mov
test
(bad)
cdq
test
dec
iret
add
adc
cwde
sub
icebp
mov
(bad)
in
add
mov
out
(bad)
xor
loopne
dec
jl
jge
adc
call
sbb
or
int
mov
out
or
fcomp
(bad)
fsubr
and
movs
cld
sahf
cmp
jle
cmp
sub
or
shl
mov
in
retf
mov
repz
sbb
cmovnp
adc
fistp
push
and
mov
arpl
pop
cs
pop
clc
daa
imul
fadd
fistp
jo
(bad)
ins
xor
pop
outs
add
loop
xor
loop
mov
data16
cli
hlt
mov
ror
sbb
pop
dec
and
dec
jb
xchg
mov
or
sbb
popf
push
aas
lahf
xor
addr16
shl
sub
inc
jecxz
call
retf
jne
daa
bound
scas
gs
aam
and
aas
inc
sbb
popa
or
dec
sar
daa
or
(bad)
xchg
cmps
cli
jmp
push
cmp
(bad)
lock
adc
scas
ret
jle
pop
xchg
test
ds
jg
es
fmul
es
sub
and
rcl
dec
nop
sti
shl
ja
int
add
ss
cmc
xchg
dec
mov
out
fidiv
inc
and
(bad)
mov
call
repnz
(bad)
outs
jmp
sub
mov
jg
icebp
cmp
hlt
xchg
xchg
(bad)
std
hlt
repnz
mov
push
mov
ret
sub
(bad)
cdq
push
cmps
arpl
add
push
ret
xor
iret
movs
out
pop
push
add
xor
xor
mov
sub
gs
leave
(bad)
daa
mov
sbb
out
arpl
movs
push
fcomp
sub
js
stc
mov
loope
push
(bad)
mov
xor
pop
out
xor
int3
xor
xchg
fadd
mov
push
push
push
lock
mov
ficom
cmp
xchg
xchg
mov
out
xchg
call
je
jne
xchg
(bad)
adc
jmp
xor
jmp
dec
out
(bad)
mov
push
std
call
inc
pop
and
sub
lea
jno
fidiv
mov
outs
stos
movs
mov
(bad)
in
sbb
cmp
add
sub
mov
inc
jp
js
hlt
push
int
push
fld
sub
stos
jge
mov
and
pop
(bad)
push
and
sub
loop
jnp
popa
std
mov
pop
retf
adc
pop
aam
inc
pop
mov
stc
fcom
cwde
sar
popf
test
cmp
fild
fs
and
xor
outs
in
outs
inc
test
fsub
add
loopne
(bad)
or
dec
lea
sub
add
pop
sbb
mov
cdq
pop
xor
adc
or
mov
lock
add
sar
fstp
sub
push
dec
and
sub
dec
pop
xchg
imul
add
sub
mov
clc
mov
sbb
or
call
idiv
test
into
cdq
ss
cmps
push
les
pop
inc
inc
movs
jle
and
in
repz
jo
neg
add
inc
pop
xor
data16
push
jae
test
scas
sub
out
(bad)
or
mov
sub
in
push
push
ins
mov
jns
xchg
jns
and
movs
out
nop
fisubr
inc
clc
test
mov
xor
or
cmp
xor
arpl
cmp
dec
push
jb
and
retf
pop
add
es
cmp
ds
stc
retf
popf
push
jl
es
lea
inc
add
nop
out
mul
pop
das
rol
or
sbb
xchg
retf
pop
inc
add
mov
ins
addr16
(bad)
xchg
jmp
push
mov
xchg
ds
mov
(bad)
fdivrp
enter
cmp
add
shl
lods
call
adc
pusha
mov
dec
in
xor
(bad)
stc
arpl
dec
mov
out
std
mov
in
retf
daa
push
outs
icebp
stc
add
ficomp
jo
cld
xchg
ins
sbb
pop
je
push
int
dec
pop
dec
stc
loop
mov
add
lahf
xchg
mov
pushf
mov
cld
fimul
popa
cmp
xchg
adc
inc
lods
int
sub
xchg
loope
stc
imul
movs
xchg
(bad)
scas
cld
mov
lds
inc
sub
inc
scas
xchg
fcmovb
or
scas
dec
add
fld
vorps
cmp
cmps
call
ds
fwait
lods
nop
(bad)
adc
xlat
push
mov
pop
enter
fld
push
out
jmp
aas
aaa
shr
fbstp
cmp
pop
mov
lds
xor
cld
push
add
add
loopne
xchg
jns
xchg
pop
or
xchg
cmp
(bad)
mov
mov
pop
retf
and
ror
pushf
retf
(bad)
inc
sbb
adc
aaa
or
xor
sbb
push
mov
mov
mov
inc
movs
mov
cmps
sbb
push
mov
fwait
push
ret
pop
int3
push
pop
(bad)
mov
shl
test
pushf
add
jo
cwde
fisub
stc
mov
lods
stos
scas
jmp
sub
dec
jbe
outs
dec
cs
pop
(bad)
jge
out
or
xor
xor
jb
and
fs
or
loopne
sti
mov
add
aam
pop
fwait
clc
lds
retf
shl
mul
mov
in
fnsave
xchg
xor
movs
ror
in
pop
aam
mov
(bad)
mov
push
or
lea
mov
mov
jbe
dec
gs
mov
adc
push
call
inc
jecxz
pcmpeqb
lock
sub
in
loopne
pop
jns
and
outs
std
jge
cwde
outs
or
(bad)
shl
sbb
popa
lock
retf
jnp
jns
fst
pop
std
jne
inc
movs
or
dec
mov
loop
retf
rcr
mov
pop
lds
fsubrp
jecxz
aad
push
jae
or
xchg
xchg
mov
sbb
mov
in
pop
inc
sti
push
pop
push
xchg
pop
rcl
test
je
adc
adc
cli
mov
not
fimul
js
jb
in
xor
jge
clc
scas
pop
xor
ins
out
in
outs
data16
pop
retf
mov
sub
pop
pop
rcr
ja
mov
add
pop
clc
clc
mov
movs
add
jle
jmp
scas
mov
pop
and
out
aaa
sbb
jne
add
out
push
ins
adc
and
cmps
(bad)
in
push
inc
xor
cld
sub
cmp
mov
jg
cs
mov
jle
cs
mov
(bad)
(bad)
mov
pop
test
jne
mov
retf
push
mov
(bad)
in
mov
mov
mov
lds
adc
cld
and
leave
dec
popa
mov
aas
push
push
ret
xchg
mov
cmps
iret
dec
aad
sti
pop
jle
dec
retf
xor
enter
mov
ja
adc
sub
enter
out
and
xlat
inc
pop
sbb
jo
in
mov
jl
push
or
lea
not
add
out
fadd
or
xchg
sub
test
cmp
push
push
mov
lds
je
cdq
or
push
mov
adc
cmp
jbe
fst
iret
jmp
(bad)
jb
cmp
loope
inc
jb
lods
loopne
push
clc
xor
ret
adc
adc
imul
jl
xor
cmp
(bad)
or
xchg
xor
cmp
out
mov
out
mov
shl
jo
jle
aam
inc
push
sti
add
imul
jbe
fiadd
and
push
sub
ins
pop
push
jmp
adc
outs
fistp
jge
fnstenv
mov
dec
fidivr
add
cmp
aad
add
jae
sub
(bad)
ja
out
cld
sbb
xlat
jle
es
adc
jo
pop
popf
movs
sub
xor
aad
pop
lock
mov
out
inc
add
ss
mov
(bad)
outs
ins
mov
in
add
or
aad
int
nop
and
ds
sar
xchg
lods
jbe
test
xor
in
(bad)
cli
push
in
popf
jno
dec
call
in
adc
mov
sub
adc
gs
cdq
pop
inc
jnp
xor
sti
femms
and
popf
ror
shr
sbb
test
outs
mov
je
shl
cmp
icebp
std
pop
mov
pop
jbe
neg
xchg
mov
adc
imul
stos
in
pop
xchg
ror
ficomp
or
and
ss
cmp
fmul
sahf
int
dec
rol
mov
inc
cmp
fwait
adc
int
push
ret
mov
xchg
xchg
jne
in
mov
jno
cmp
iret
and
mov
inc
mov
pop
push
cmp
es
(bad)
in
add
xchg
or
pop
push
shr
mov
cdq
loop
daa
mov
pop
fs
jmp
push
push
dec
mov
fiadd
push
xlat
ss
sti
add
call
xchg
sub
dec
int3
jmp
ins
iret
push
inc
ret
pop
and
add
push
fnstenv
pop
inc
jecxz
cmp
mov
adc
xchg
push
sub
out
and
xchg
xchg
stc
mov
cld
retf
jle
jp
ins
xchg
adc
sub
push
test
repz
push
add
xchg
adc
add
xchg
dec
movs
pop
dec
xchg
add
pusha
pop
push
mov
push
scas
mov
fld
mov
adc
mov
ss
xchg
sbb
dec
add
pop
fsubr
pop
jbe
rep
(bad)
cdq
dec
xchg
add
adc
add
(bad)
pusha
jmp
dec
pop
dec
jp
cmp
fidivr
ins
xchg
push
mov
call
push
fcomip
aad
(bad)
out
nop
lods
mov
(bad)
mov
out
mov
sub
shl
push
fs
iret
ret
shl
mov
mov
mov
jmp
push
gs
jmp
xchg
iret
popa
jno
ss
add
jne
push
mov
fucompp
xchg
adc
ficom
cmps
jle
jmp
nop
mov
push
retf
add
push
mov
sub
cdq
xchg
daa
nop
icebp
dec
outs
inc
jo
ds
add
or
dec
mov
mov
adc
std
jle
fisubr
add
into
pop
fild
and
daa
imul
dec
popf
pop
dec
sbb
dec
jmp
nop
ror
xor
xchg
lods
dec
test
mov
and
xchg
cmp
enter
adc
jmp
test
mov
fwait
xor
inc
or
clc
xchg
cmp
xchg
daa
in
mov
in
inc
imul
(bad)
push
inc
std
iret
jl
inc
cs
fwait
jno
stc
add
and
add
mov
xchg
mov
ret
sahf
add
lods
inc
enter
(bad)
mov
inc
mov
push
(bad)
jne
push
outs
inc
std
fs
mov
sbb
mov
xor
stc
fld
hlt
daa
sbb
pop
jnp
(bad)
and
test
cmp
jp
out
aam
fs
jne
xor
xchg
fist
cmp
xor
sahf
lds
mov
mov
stc
fld
enter
sub
lock
jb
mov
jmp
pop
ret
lock
enter
inc
into
mov
cs
pop
(bad)
popa
xor
jbe
jmp
scas
repnz
dec
imul
inc
mov
cwde
push
jg
mov
(bad)
fsub
dec
fsubr
mov
(bad)
mov
jns
lock
inc
fld
mov
push
mov
(bad)
jmp
fistp
retf
push
cwde
xlat
jmp
popa
push
sub
jo
push
mov
pop
xor
cli
in
out
and
lock
pop
rcr
mov
xchg
cld
jle
mov
stos
std
inc
nop
pop
shl
xlat
mov
movs
xchg
inc
push
movs
pop
sub
mov
out
call
leave
ficomp
out
leave
xlat
inc
ret
int3
xchg
stos
out
mov
das
xchg
pushf
mov
cmps
push
xor
mov
mov
out
cmp
je
dec
popa
scas
or
aad
push
inc
aam
(bad)
dec
es
sub
sahf
enter
rol
shr
inc
fldenv
pop
or
mov
pop
add
ins
mov
xchg
xor
outs
adc
mov
scas
fcomp
dec
and
jge
mov
arpl
out
clc
scas
adc
jp
xchg
mov
cmp
(bad)
test
les
retf
sbb
call
cmp
mov
mov
pushf
icebp
test
(bad)
aad
xor
and
mov
sbb
mov
ins
lds
mov
jns
pop
xor
or
inc
and
xchg
jb
and
ficomp
(bad)
stos
jecxz
data16
xor
call
or
imul
or
fnsave
daa
and
push
bound
jge
push
push
xchg
cmp
xchg
(bad)
scas
int
scas
dec
or
std
pusha
xlat
arpl
imul
or
enter
add
gs
sbb
cmp
js
lods
xor
retf
push
pop
mov
cmc
jbe
fcomp
fistp
pop
jmp
pop
out
or
pushf
and
push
iret
daa
scas
mov
call
add
les
clc
and
push
out
jmp
sti
and
mov
mov
fst
push
ja
fs
pop
jno
les
scas
push
sub
cmp
xor
ret
push
outs
loopne
push
mov
sub
adc
push
mov
xchg
les
sbb
dec
dec
or
ss
fwait
push
sub
retf
mov
jp
and
push
xor
push
xchg
test
int3
inc
mov
outs
or
rcl
pusha
gs
test
and
cmp
ins
test
loop
add
jmp
lods
mov
nop
pop
pop
aaa
(bad)
xor
sbb
out
cmp
cmp
and
std
and
jmp
rcl
stc
xchg
mov
repz
push
mov
inc
shl
lods
dec
inc
inc
aad
cmp
cmc
rcl
(bad)
loopne
jg
stos
retf
into
mov
cmp
and
and
mov
adc
and
sbb
sub
inc
js
in
push
jmp
mov
icebp
xchg
cmps
loopne
ss
pop
fs
int
dec
push
pop
inc
in
push
pop
les
cmp
jmp
icebp
out
es
inc
iret
xchg
sub
outs
icebp
ja
popf
xlat
inc
cmp
jo
mov
pop
and
jb
and
cmp
cmp
retf
cs
mov
xchg
repz
nop
jle
ficomp
jne
fsub
stos
call
sub
adc
push
sub
mov
sbb
cwde
shl
(bad)
cmp
(bad)
outs
ds
repz
mov
pushf
(bad)
call
int
or
and
xor
sub
mov
rol
mov
out
xchg
into
fxch
xor
pop
mov
xchg
sbb
stos
fild
in
sti
xchg
iret
cmps
repz
scas
cwde
dec
jb
mov
mov
pop
sbb
cmc
xlat
mov
retf
call
pusha
jnp
mov
aad
out
dec
mov
mov
mov
cmc
aam
cdq
cmp
repnz
push
bound
mov
nop
clc
xor
xor
int
movs
mov
adc
mov
adc
aaa
xlat
cmp
sahf
mov
(bad)
jmp
test
int
jp
dec
mov
js
adc
push
fisttp
rcr
or
xor
push
add
cmp
out
cld
repnz
and
add
repnz
mov
pop
pop
and
int
test
xor
jecxz
jmp
xor
sbb
adc
xor
push
rcr
loopne
mov
jmp
mov
jbe
dec
and
jecxz
inc
pusha
(bad)
popa
jmp
fistp
fadd
into
nop
dec
jb
and
into
xlat
aas
adc
lods
cmp
and
sbb
cmp
and
inc
nop
xor
inc
add
cmp
ret
add
es
xor
scas
inc
or
iret
mov
lods
mov
xchg
push
pop
jnp
cmp
cs
adc
lods
sub
pop
cmps
cmps
fimul
fdiv
scas
out
movs
or
push
stos
test
jae
cmp
daa
sub
push
(bad)
dec
mov
movs
std
sub
test
(bad)
loopne
(bad)
sahf
inc
pushf
stos
mov
cmp
leave
test
fidivr
movs
jnp
cmps
imul
jns
repz
jle
movlps
adc
push
mov
neg
shl
jne
das
xchg
mov
movs
sbb
arpl
mov
inc
fbld
adc
psllq
daa
enter
sbb
jle
cli
add
inc
aad
jns
stos
mov
in
mov
jno
cmps
ret
cmp
and
aam
sbb
not
adc
push
mov
jl
and
mov
and
add
jl
inc
iret
loope
push
mov
xor
mov
ror
cmps
ins
add
pop
int
stc
stc
ret
and
lods
cmps
sahf
mov
in
cmp
push
es
imul
pop
imul
dec
mov
in
xor
adc
cdq
aas
int3
ins
bound
mov
mov
mov
push
dec
inc
inc
arpl
inc
jo
push
push
loop
arpl
or
bound
adc
xlat
fdiv
jp
push
fcomp
outs
sbb
jmp
in
out
jnp
or
push
xlat
fcomp
cmp
inc
xor
lods
cmp
ja
pusha
cwde
sbb
(bad)
iret
or
or
pusha
xor
test
jns
jno
and
mov
iret
int3
push
out
or
xlat
hlt
aaa
ja
ror
dec
xchg
xchg
push
jp
mov
mov
cmp
int3
jmp
or
daa
fwait
cdq
fist
or
adc
cs
in
mov
or
jns
aaa
xor
and
je
mov
pop
jl
movs
mov
or
mov
fiadd
sbb
aaa
stc
mov
xor
stos
pop
dec
mov
(bad)
jmp
mov
jecxz
in
call
push
sar
jno
sbb
sbb
rcl
add
mov
in
xchg
lods
inc
inc
mov
(bad)
int
jnp
ror
pushf
jbe
outs
mov
jb
imul
push
push
mov
in
pop
xchg
jae
jg
repnz
stos
stos
(bad)
jne
jbe
and
or
pop
rcr
int3
jmp
and
test
call
cli
(bad)
mov
mov
mov
dec
xchg
movs
stc
inc
cmc
cli
push
test
and
cmp
jle
mov
mov
addr16
jl
stc
out
sub
mov
xor
jmp
sbb
push
shr
sub
add
adc
xor
jge
xchg
add
test
sub
push
or
daa
xchg
and
adc
or
add
shl
(bad)
sbb
std
int3
popa
or
pop
popa
jp
xchg
dec
xchg
jmp
push
or
xchg
fild
adc
jecxz
(bad)
mov
(bad)
and
cdq
xor
mov
mov
pop
push
cmp
mov
fdivr
imul
int3
dec
and
mov
pop
ins
jbe
in
in
sbb
fcom
sbb
xchg
jmp
ror
(bad)
xor
jle
add
jg
je
pop
(bad)
dec
xchg
out
mov
cmp
push
test
push
(bad)
fistp
cmps
jns
pop
dec
cmc
mov
pop
arpl
pop
sbb
xor
cli
test
mov
mov
sub
jg
out
jae
scas
xchg
sub
icebp
int3
fidiv
jne
idiv
adc
call
mov
pushf
xchg
pop
and
movs
bound
ret
sbb
mov
ror
outs
loopne
lds
mov
xchg
clc
in
stos
or
mov
int
cmp
xchg
test
sbb
aaa
dec
stc
dec
pusha
dec
ja
add
sbb
push
push
(bad)
into
pop
jnp
push
shl
icebp
jp
xor
cmp
push
lods
pop
test
cwde
call
jns
cmp
shl
cmp
mov
pop
xor
pop
rcr
outs
sbb
(bad)
add
pop
rol
mov
aam
test
pop
fdiv
jne
cld
xchg
pop
frstpm(287
test
add
adc
cmc
xlat
mov
sahf
xor
jle
jnp
pop
clc
sar
shl
add
sub
push
and
pop
dec
aas
push
cmp
scas
dec
sbb
shl
mov
imul
aas
loope
or
das
retf
cmp
rcr
into
and
cmp
aad
cmc
les
leave
out
repnz
and
jbe
std
sbb
add
jbe
mov
sbb
adc
jl
pop
inc
xchg
dec
mov
dec
mov
and
add
pushf
ret
ret
mov
sub
push
push
sub
sub
sbb
mov
dec
lea
test
das
jnp
cmp
aas
jns
pop
stc
dec
lahf
adc
in
mov
ficom
fild
cmps
dec
jno
or
addr16
test
cld
mov
jns
(bad)
lea
xlat
cmp
js
jg
pop
jnp
test
stos
dec
push
jae
lods
jnp
fstp
cmp
sbb
(bad)
xchg
sub
fisttp
xlat
mov
add
add
xlat
mov
push
sub
cmps
adc
popf
and
loopne
cmp
or
lods
ret
inc
iret
dec
cmp
out
pushf
imul
push
push
pop
cli
int3
jl
and
inc
scas
sbb
mov
(bad)
fild
mov
dec
xor
jae
outs
dec
cmp
cmp
not
jecxz
std
sub
aas
fsub
cmp
push
jp
add
fcmovbe
ret
sub
test
mov
pop
aaa
rol
test
int
ds
sbb
fwait
outs
inc
sub
pop
jle
mov
fimul
dec
js
push
push
xor
cli
cdq
fiadd
data16
push
leave
pop
into
gs
aad
or
adc
lods
mov
mov
enter
mov
loop
pop
mov
pop
adc
scas
repz
sub
push
jbe
push
add
push
dec
cmp
ins
fisubr
adc
(bad)
rcl
iret
push
sub
cmp
popf
cmp
lds
loop
or
loope
idiv
leave
jne
xchg
or
iret
inc
mov
ror
mov
xlat
aad
les
ss
test
mov
and
inc
jbe
xchg
pop
test
sub
xchg
jle
jbe
dec
jbe
loopne
xchg
and
and
(bad)
out
jmp
dec
adc
shl
sbb
ret
sbb
ret
cmp
jmp
cmp
jg
adc
add
push
outs
fistp
movs
imul
dec
fidivr
adc
jle
adc
cmp
pop
fcomp
sbb
pop
hlt
cld
hlt
lods
pop
jne
iret
scas
mov
jno
inc
nop
daa
mov
mov
add
or
sbb
and
sub
push
outs
push
clc
cmp
out
shl
(bad)
outs
or
mov
dec
xor
adc
lods
ins
mov
int
call
(bad)
and
fidivr
outs
mov
jmp
push
in
xor
sub
into
cmps
hlt
sahf
jb
arpl
mov
sti
mov
add
mov
sahf
inc
xchg
cmp
fs
pminsw
inc
lea
jl
push
or
push
add
in
cli
ror
cmps
out
mov
push
hlt
pop
repnz
rcl
add
in
sbb
pop
cmp
jno
pop
pop
dec
add
(bad)
pop
jo
popf
fcom
in
sub
test
cmp
add
lods
xchg
adc
mov
movs
xchg
and
mov
jg
call
fcom
(bad)
pushf
and
ret
int3
out
dec
ret
mov
xor
inc
popa
das
push
sbb
outs
mov
mov
movs
or
out
mov
inc
cdq
popa
jmp
(bad)
sbb
pop
nop
inc
fcom
fdivrp
push
scas
popa
jno
and
stos
mov
or
pop
dec
icebp
addr16
mov
sahf
inc
jae
mov
jecxz
out
xchg
push
ins
add
push
xor
or
sub
inc
xor
shl
outs
jmp
push
inc
adc
lods
sbb
clc
dec
popf
mov
xchg
(bad)
xchg
scas
sub
aad
push
pop
inc
jnp
cmps
mov
mov
inc
or
ss
shl
adc
adc
xor
xchg
jecxz
imul
xchg
push
xchg
test
leave
xor
jmp
cmp
data16
sar
and
ins
dec
jg
adc
in
retf
int3
js
iret
punpckhwd
repz
fimul
ds
jnp
inc
idiv
add
mov
aam
jne
out
dec
inc
dec
mov
fwait
add
jle
dec
in
retf
mov
ja
xchg
and
in
xor
pop
jle
jmp
repnz
iret
(bad)
xchg
fbld
ins
pop
lock
aaa
and
(bad)
cmp
jl
ds
cmps
jbe
out
sub
shr
or
adc
adc
out
cmc
add
or
adc
rol
and
cwde
ret
js
aas
imul
dec
sbb
xchg
test
loope
push
mov
jbe
sub
test
outs
je
out
or
cmc
popa
dec
loope
adc
adc
xchg
xchg
ins
and
pop
call
mov
repnz
pop
outs
pop
outs
fdiv
mov
jl
xor
outs
cmp
ss
stos
fisubr
sub
sbb
lods
movs
aam
aaa
push
mov
ins
daa
hlt
jge
mov
stos
out
mov
cmp
ja
lods
(bad)
push
daa
jge
jmp
mov
scas
xor
mov
loop
les
sbb
mov
xor
cld
jmp
repz
out
push
mov
add
adc
adc
push
xchg
fisub
mov
xchg
xchg
or
aad
call
jns
pop
cdq
fwait
and
out
pop
loope
mov
aam
push
jmp
xor
xchg
loope
mov
fisub
dec
shr
xchg
mov
xchg
adc
std
les
je
inc
aam
mov
mov
adc
cmp
and
clc
pop
pop
xchg
scas
sbb
mov
cmps
bound
xchg
ins
out
push
xor
(bad)
mov
(bad)
(bad)
cmp
sub
xchg
cmp
fbld
les
add
mov
repz
xchg
fisubr
dec
sbb
mov
pop
jae
cmp
das
pop
sar
xchg
fwait
bswap
jns
pusha
pop
pop
fiadd
(bad)
out
mov
xchg
pop
mov
sbb
in
out
cmp
lods
or
xor
mov
inc
adc
add
jge
sbb
lods
adc
popf
cs
xchg
and
popf
jnp
jl
lods
xchg
mov
inc
outs
pop
ret
sbb
int
xchg
fadd
dec
mov
(bad)
jp
ja
pop
call
mov
loopne
pop
mov
inc
pop
fstp
pop
push
xchg
out
in
jmp
sbb
aaa
inc
leave
and
pop
stos
pushf
into
sbb
gs
mov
mov
mov
mov
dec
nop
(bad)
lods
sub
aaa
fldcw
sar
pop
ret
pop
add
xor
mov
int3
and
mov
in
pop
xchg
add
jbe
jbe
cmp
daa
or
or
out
cmp
nop
or
scas
push
cwde
(bad)
mov
outs
jg
pop
retf
push
test
fnstcw
mov
jp
lods
daa
inc
mov
xor
jg
pusha
fsub
cmp
or
push
jmp
mov
pusha
jno
in
jp
mov
sbb
lahf
stc
sub
xor
ins
hlt
mov
aaa
sub
sub
stos
jb
jnp
jmp
imul
jb
cmps
pushf
fwait
and
nop
jb
mov
cmps
stos
sub
pop
retf
jmp
sub
cmc
dec
test
sahf
lock
jo
xchg
mov
lahf
repz
push
cmp
mov
add
and
mov
aaa
jmp
xor
push
stc
xchg
mov
and
pushf
xchg
xor
int3
pop
enter
(bad)
(bad)
inc
jns
mov
fs
gs
int
addr16
push
jmp
enter
nop
or
in
push
sar
imul
mov
movs
cmp
std
mov
mov
(bad)
(bad)
mov
xchg
movs
lds
or
mov
fstp
and
(bad)
call
xchg
out
in
push
mov
inc
mov
sbb
sub
and
test
jno
xchg
push
stos
mov
out
arpl
call
bnd
pop
pop
fst
out
outs
hlt
iret
xlat
mov
in
in
stc
shl
mov
pop
xchg
mov
in
inc
mov
sbb
sbb
shl
rcr
pop
fsubrp
cmps
xor
and
fdiv
mov
lds
mov
jmp
fnstcw
pop
(bad)
out
pop
adc
and
xchg
hlt
push
loopne
jecxz
jmp
mov
aas
ror
popa
xchg
or
test
ja
js
inc
ja
and
mov
and
xchg
jnp
scas
sbb
cmp
rcl
aad
out
dec
push
ret
mov
aad
and
inc
cld
or
aaa
in
sbb
adc
jmp
xor
dec
in
pop
and
mov
or
add
and
clc
ret
or
dec
cli
add
ja
fld
cwde
mov
jle
fs
jnp
popa
or
push
jge
sub
pushf
in
jne
imul
or
cmp
pop
retf
push
sbb
sbb
pop
outs
stos
adc
push
sbb
out
add
adc
nop
imul
and
mov
cmps
out
xor
out
cs
sub
ret
cwde
xchg
or
jno
mov
icebp
mov
inc
pop
nop
stos
or
pop
out
pop
mov
hlt
lar
call
mov
arpl
xchg
in
int3
cdq
sbb
call
adc
fld
(bad)
int
das
jle
adc
pop
outs
prefetch
push
test
jne
cld
cmp
pop
pop
aam
or
mov
popf
push
jp
lahf
rcl
jae
iret
cmc
daa
in
loope
movs
test
hlt
imul
mov
or
je
mov
pop
mov
or
clc
sbb
ret
test
rcl
arpl
add
aam
pop
loop
mov
ret
fs
sbb
push
dec
das
cmps
push
cmps
add
cmc
xchg
push
stos
push
cwde
mov
fldcw
and
fnsave
jno
lods
sub
ret
ror
cmps
loop
pop
add
add
out
dec
xchg
nop
pushf
cmp
adc
icebp
arpl
(bad)
cmps
outs
imul
pop
fistp
(bad)
iret
sub
push
sbb
mov
std
xchg
mov
push
or
in
sub
or
js
int
add
shl
test
or
xchg
inc
fadd
sub
test
jp
mov
pop
pop
mov
cmp
inc
mov
jmp
add
xchg
cld
pop
fs
add
shl
xor
in
push
ret
or
sahf
sub
(bad)
xor
xchg
cmp
imul
shl
aam
adc
ror
or
mov
js
jp
adc
xor
push
dec
fwait
xor
in
shl
xchg
leave
into
pop
jge
bound
in
int3
jp
xchg
in
std
pushf
daa
loope
(bad)
dec
xchg
out
xchg
mov
arpl
inc
(bad)
cdq
push
fnsave
mov
cld
nop
pop
cwde
ret
xor
div
xchg
popa
pusha
fidivr
clc
sbb
add
ret
ins
mov
adc
sub
in
int
icebp
pushf
fdivr
or
push
repz
sub
rcl
add
adc
(bad)
mov
mov
jmp
mov
pop
mov
jp
xchg
test
lea
dec
mov
int
pop
ds
sti
cmp
sub
stos
ror
in
mov
fs
loopne
rol
or
push
jge
loopne
and
adc
in
cmps
xor
mov
mov
mov
push
call
xor
(bad)
push
fldcw
xchg
dec
push
cmp
repz
je
jns
cmps
cdq
call
jae
xor
rcr
jmp
jmp
call
movs
daa
icebp
sub
(bad)
cli
xchg
mov
cmp
(bad)
ror
jl
aam
jo
addr16
lods
pushf
xchg
cdq
mov
dec
dec
popa
push
sub
aam
xor
mov
and
jns
rol
fwait
xor
mov
fsub
ret
push
adc
add
in
dec
sub
sahf
loope
hlt
ror
and
adc
pop
in
sahf
test
pop
into
adc
xchg
retf
mov
bound
mov
lods
ds
cmps
fisttp
push
and
retf
mov
ja
jne
aad
jmp
in
xor
sub
adc
push
icebp
sub
push
aad
mov
add
aas
scas
mov
(bad)
icebp
jbe
mov
stos
mov
pop
push
push
lahf
dec
(bad)
pop
inc
dec
das
outs
add
inc
fidivr
arpl
aas
xchg
repnz
adc
std
(bad)
loope
jl
lds
ds
sub
test
cwde
adc
mov
jl
imul
fwait
retf
cs
jle
test
das
push
mov
pop
outs
or
lahf
in
shl
and
movs
or
(bad)
jo
in
jmp
jmp
cld
inc
sub
mov
mov
mov
fcmovbe
imul
imul
push
and
adc
test
dec
cmp
inc
loopne
cmp
jo
test
rol
xchg
ret
cmp
pop
scas
xlat
into
adc
mov
mov
push
(bad)
cmp
outs
push
repz
push
int3
mov
add
dec
arpl
add
mov
xor
test
mov
cmps
cld
add
arpl
call
aad
mov
call
repnz
retf
mov
or
pop
lock
aaa
sar
sub
mov
jb
popa
in
sahf
xchg
add
in
aas
ss
mov
inc
mov
and
cmp
push
mov
aas
xchg
dec
nop
std
aaa
not
pusha
addr16
leave
push
inc
lds
repz
test
push
push
jo
push
mov
icebp
and
daa
pop
cmc
pop
scas
xlat
imul
scas
lahf
sbb
ret
aad
dec
ror
stos
fnstcw
ja
mov
in
mov
aaa
fcmovb
out
sbb
jo
faddp
dec
cmp
cdq
pop
add
jl
push
sbb
(bad)
dec
hlt
jp
pop
movs
sahf
mov
test
movs
ror
mov
inc
dec
xchg
xor
lods
pop
test
into
or
pop
mov
xor
jne
enter
xchg
into
movs
inc
mov
xor
xor
ins
or
les
pop
arpl
mov
(bad)
jo
mov
vpshuflw
xchg
jb
mov
fild
fadd
xchg
adc
jle
adc
ret
daa
xchg
test
adc
inc
inc
xchg
test
loope
pop
ins
mov
inc
hlt
push
mov
mov
fmul
push
jbe
fmul
sbb
in
and
and
ficomp
ret
mov
scas
add
popf
stc
fucomip
jle
lods
into
xchg
and
xchg
add
inc
lahf
stc
xor
frstor
jmp
fstp
ret
push
inc
shr
and
cmp
lods
stos
(bad)
cmp
xor
or
or
jle
je
retf
cwde
fsubr
jmp
or
mov
mov
sbb
xchg
pushf
jl
fisubr
and
push
in
add
call
inc
xor
or
(bad)
mov
jg
test
jmp
mov
movs
pop
cs
clc
mov
cmp
jb
add
xchg
les
mov
mov
or
int3
xchg
sub
movs
inc
jne
pop
mov
adc
stc
pop
pushf
in
or
out
call
nop
dec
jno
rcr
sub
addr16
adc
xor
or
fsub
xchg
pop
pushf
imul
ins
pop
lds
imul
sbb
inc
fbstp
inc
mov
jl
(bad)
mov
pop
(bad)
les
push
add
(bad)
inc
pusha
shl
inc
ins
js
xchg
das
jbe
xor
sub
pop
stos
xchg
inc
push
mov
mov
lock
mov
cmp
jecxz
sbb
jno
imul
arpl
inc
(bad)
loop
repnz
cmp
dec
xchg
mov
add
lods
call
jno
add
pop
mov
xor
neg
push
popf
sbb
bound
pop
xchg
xchg
xor
js
or
ds
dec
adc
(bad)
shl
arpl
stos
retf
cmps
adc
mov
enter
mov
cmps
and
jns
lahf
scas
les
jae
ror
cmp
mov
jae
fsub
jo
aad
in
in
stc
mov
fdiv
jbe
adc
mov
sub
inc
dec
cmps
data16
dec
cld
ja
retf
and
fst
ins
cmp
cmp
mov
in
sub
mov
sub
jmp
add
(bad)
movs
call
hlt
cdq
outs
rol
and
movlps
jae
jbe
pop
inc
retf
scas
mov
and
(bad)
ds
and
aaa
push
mov
mov
mov
rcr
rcr
cmps
sub
jecxz
xor
lea
je
dec
cmp
push
mov
dec
(bad)
xchg
mov
mov
stos
iret
cmp
adc
mov
inc
cmp
push
push
dec
sub
test
jo
xchg
rcr
mov
cmp
aad
and
cwde
adc
add
shr
test
ds
jo
lds
mov
xchg
pop
jge
or
mov
dec
fnstenv
(bad)
outs
jnp
call
aam
dec
je
sbb
mov
aas
leave
jg
int
jmp
aaa
mov
movs
xor
cli
jecxz
jl
test
out
or
mov
in
dec
adc
outs
cmc
xchg
adc
push
push
repz
mov
inc
out
sbb
jns
jo
pop
add
xor
icebp
pusha
mov
jmp
add
xchg
pushf
fcmovb
jg
cmp
mov
movs
xchg
test
test
mov
inc
rcl
bound
mov
sbb
adc
scas
ror
push
and
jne
adc
rcl
es
dec
stc
lods
xchg
sub
dec
mov
sbb
xor
leave
mov
scas
sub
xor
popf
and
jge
fs
(bad)
adc
inc
dec
lock
push
cld
xor
xor
xchg
dec
and
sbb
ja
imul
mov
mov
jl
stos
or
js
sub
enter
dec
pop
sbb
add
stos
ins
push
sbb
sbb
push
pop
pop
jmp
ret
ficomp
jae
and
and
sbb
dec
sub
cmp
mov
xchg
ds
xchg
inc
movs
sbb
mov
cmp
inc
test
test
mov
inc
lods
movs
jecxz
jns
(bad)
inc
mov
in
dec
fmulp
je
lea
test
push
jno
mov
(bad)
cmp
rcl
(bad)
and
mov
cmp
scas
mov
outs
mov
add
jnp
push
movs
ja
xchg
fsubrp
cld
cmp
icebp
loop
jmp
dec
shr
nop
jnp
adc
iret
add
popf
xor
pop
inc
std
int3
mov
lods
stc
xchg
push
aaa
pushw
test
jmp
push
push
fldenv
loope
jae
dec
inc
pop
mov
jg
retf
inc
push
push
add
int
aad
push
int
push
call
mov
(bad)
adc
(bad)
out
leave
fs
cmp
jne
push
retf
adc
int3
mov
push
imul
call
daa
fs
fcmovu
out
mov
les
das
ret
sub
bound
mov
aam
nop
xor
enter
fwait
sub
cs
cli
lock
xchg
cmp
xchg
sbb
jle
(bad)
add
jmp
ret
cmp
mov
je
xor
(bad)
call
inc
sub
dec
mov
fwait
cmp
cmc
jns
mov
cwde
adc
inc
adc
mov
add
lds
outs
push
cmp
dec
mov
sbb
(bad)
mov
imul
xchg
pop
cmp
adc
jmp
cs
mov
mov
pusha
jge
loop
pusha
icebp
dec
add
xchg
das
mov
retf
mov
push
and
mov
ror
jno
pop
push
push
sbb
mov
jb
push
scas
enter
(bad)
loopne
jb
iret
arpl
test
out
pop
sti
mov
mov
xor
mov
lahf
cmc
stos
push
xchg
mov
stos
fwait
arpl
push
imul
dec
movs
adc
jns
fiadd
bound
retf
mov
movs
fist
call
icebp
sti
or
pop
xchg
or
shl
outs
rcr
in
js
lahf
xor
out
out
mov
inc
mov
pop
out
std
(bad)
imul
sub
mov
push
jmp
and
xchg
jle
mov
cmp
aaa
pop
out
aam
mov
and
repnz
cmp
mov
test
jb
mov
or
or
or
pop
cwde
aaa
pushf
popa
inc
shl
scas
ins
push
xchg
retf
xchg
or
cli
lea
xchg
stos
dec
add
shl
inc
mov
jo
dec
fdivr
dec
sub
pop
imul
daa
outs
xchg
(bad)
loopne
fwait
adc
(bad)
or
out
(bad)
shr
test
aad
out
sbb
sub
shl
popf
mov
mov
mov
rol
test
dec
inc
pop
xchg
pushf
loop
in
fist
dec
test
inc
xchg
hlt
mov
mov
mov
outs
mov
or
in
in
neg
retf
fmul
jno
adc
xchg
jecxz
adc
ja
fwait
cdq
cmps
jae
retf
retf
push
sub
not
cld
xchg
push
jmp
add
into
mov
and
or
inc
push
(bad)
xchg
or
inc
xor
dec
mov
ja
dec
jb
and
mov
fdiv
fsubr
dec
pop
aas
push
xor
shl
fnstenv
inc
out
inc
aas
mov
mov
and
xor
push
retf
sar
mov
jp
xor
jmp
(bad)
jb
add
fisttp
cmps
adc
cld
jecxz
fmul
jae
gs
dec
push
xor
mov
in
mov
xchg
mov
aam
cmc
xchg
test
arpl
and
mov
icebp
into
aaa
hlt
int3
nop
pop
and
(bad)
sub
int
loop
sbb
out
pop
xor
(bad)
xor
in
pop
xchg
mov
jmp
dec
or
aad
push
daa
add
cmp
outs
push
outs
fbstp
movs
int3
jne
mov
retf
mov
push
bound
xlat
cmps
jl
icebp
add
cmp
lods
xor
imul
pusha
mov
mov
adc
(bad)
into
inc
inc
jmp
(bad)
into
aad
add
add
neg
mov
add
mov
fnstcw
loop
sbb
mov
clc
xor
repz
adc
push
lea
xchg
sbb
je
push
imul
mov
cwde
xor
loope
adc
test
mov
rcr
rcl
aas
sub
sbb
mov
icebp
aas
xchg
sbb
add
lea
or
sbb
movs
addr16
fwait
sub
inc
jmp
imul
(bad)
xor
mov
push
xchg
xor
out
pop
or
xor
(bad)
sub
dec
lods
bound
push
or
mov
fwait
outs
loop
add
dec
ret
arpl
inc
enter
popa
pop
push
aad
sbb
mov
jno
and
adc
(bad)
cdq
jnp
push
sub
mov
js
movs
cmps
shl
movs
or
xchg
bound
mov
std
xchg
mov
xchg
movs
sbb
scas
movs
pop
adc
push
mov
inc
jmp
mov
cmp
in
adc
ins
dec
or
push
test
cmp
aas
movs
adc
dec
lds
xchg
cmp
push
call
push
or
nop
jl
aas
icebp
dec
inc
(bad)
ds
jecxz
(bad)
mov
aas
fisubr
cmp
pop
fst
push
scas
clc
push
mov
push
cmps
popa
stos
not
das
scas
or
(bad)
pop
cmp
push
inc
mov
dec
mov
aas
mov
push
inc
icebp
into
add
xchg
stos
mov
jo
cmc
add
push
or
dec
int
movs
scas
xlat
aas
cdq
(bad)
js
call
mov
dec
and
inc
ins
inc
mov
xchg
cld
pop
inc
ret
mov
pop
xchg
push
push
add
cmps
retf
scas
push
pushf
div
out
xchg
jge
dec
(bad)
arpl
das
cmp
jns
pusha
mov
push
or
inc
sub
add
jae
mov
iret
xchg
test
or
cmps
xor
or
mov
push
pop
in
pop
aad
shl
test
push
pushf
jmp
dec
fnstsw
pop
jmp
jno
mov
fild
sar
xchg
push
pop
or
sbb
dec
mov
nop
int3
dec
loop
rcl
stos
pop
mov
shr
ret
movs
cmp
push
out
xchg
data16
pop
cmp
fdiv
add
mov
out
ins
mov
out
fisub
lods
mov
cwde
mov
test
lfs
not
les
cmp
inc
pop
jmp
in
push
js
in
adc
stc
bound
xor
data16
cmps
push
test
pusha
or
in
retf
ins
pop
sbb
push
push
int
in
mov
out
stos
jne
jecxz
daa
movs
sahf
push
jmp
jno
jnp
mov
pop
pop
icebp
jo
int
clc
push
lea
dec
call
xchg
jnp
mov
clc
mov
xchg
push
int3
lods
loop
loope
(bad)
dec
cmp
clc
push
int3
hlt
mov
fistp
mov
push
cmp
dec
ret
in
int3
xor
sbb
cmps
mov
lock
out
out
xor
or
fisttp
stos
pop
dec
je
push
je
fisubr
xchg
ss
push
or
sub
addr16
xchg
shl
loopne
xchg
scas
add
jmp
mov
fld
xchg
or
test
mov
jnp
jecxz
push
stos
cmc
and
inc
in
in
int
push
cmp
js
ret
sbb
pushf
pushf
int3
push
mov
adc
enter
inc
dec
test
xchg
cs
xchg
lods
cmc
aaa
and
mov
lea
outs
dec
push
rcl
pop
stos
cmp
xor
ds
mov
push
clc
xchg
rcl
sti
ret
stos
add
adc
into
fimul
jb
sbb
das
mov
or
inc
sbb
gs
(bad)
fwait
adc
add
sub
cmp
mov
add
in
or
stos
jne
ret
nop
fbld
xor
xor
mov
(bad)
dec
ss
nop
xor
adc
push
fisub
js
stc
and
jno
sub
(bad)
sub
arpl
in
dec
dec
sbb
out
pop
push
iret
pop
push
xchg
ins
je
mov
mov
(bad)
mov
nop
mov
imul
ds
xor
daa
or
nop
lods
fwait
push
xchg
jae
jnp
dec
cmps
cwde
call
push
xchg
and
xor
cmps
jnp
fsub
in
jb
shl
xchg
pop
(bad)
adc
fld
and
fs
add
sbb
dec
jb
jecxz
mov
pop
xor
stos
std
push
les
aaa
add
test
mov
retf
and
mov
xor
inc
arpl
dec
jmp
and
jne
jl
icebp
mov
mov
push
in
xchg
outs
push
xchg
dec
push
jl
pop
add
jns
add
dec
sub
mov
adc
jmp
jo
es
dec
or
shl
mov
push
sar
loop
xchg
inc
push
cwde
test
movs
xor
mov
jecxz
(bad)
jo
retf
(bad)
aad
cmp
cmp
shr
fld
cmps
sbb
pop
cmps
lds
aaa
sbb
mov
cmc
in
ins
mov
in
or
mov
das
fldcw
sahf
aam
(bad)
mov
sub
jno
push
out
cmc
test
call
mov
cmp
in
mov
bnd
add
push
aad
xor
mov
push
retf
pop
sti
and
imul
jle
mov
jg
fisub
loop
sahf
(bad)
sahf
xchg
fabs
in
es
mov
mov
ds
stc
mov
jo
dec
adc
pop
mov
push
sbb
inc
xchg
add
jmp
xchg
push
gs
lods
adc
add
inc
push
pop
push
and
sub
call
inc
pop
cmc
jo
fmul
adc
jne
repnz
test
gs
pop
adc
in
sub
shl
or
ins
fwait
xchg
addr16
shl
pop
imul
ret
and
(bad)
mov
push
movs
sbb
mov
or
pop
xor
faddp
pop
scas
push
xchg
clc
xlat
sub
mov
jl
mov
int3
inc
test
addr16
out
inc
inc
test
mov
lds
imul
aaa
fwait
cmps
mov
stos
data16
xchg
cmp
inc
adc
mov
xor
inc
(bad)
jo
jne
add
dec
std
sar
pusha
sub
les
pop
and
fnstsw
sbb
jge
repz
dec
mov
repnz
mov
add
bound
dec
xchg
and
(bad)
int3
aad
aam
xor
dec
xchg
fwait
cdq
mov
in
aas
aam
push
jae
mov
push
mov
push
dec
fcmovnbe
movs
mov
mov
push
sbb
add
xchg
mov
repz
mov
movs
jecxz
adc
xchg
sbb
rcl
in
xchg
pop
(bad)
mul
jge
sbb
mov
test
dec
rcr
sbb
ret
pushf
fdivr
jle
and
sbb
inc
jmp
fmulp
jle
in
or
add
sub
adc
loop
gs
ins
aad
mov
lods
jns
sbb
js
sub
lahf
pop
retf
loope
or
xlat
or
test
fs
dec
pop
add
dec
add
fwait
data16
sbb
rol
jae
stos
pop
sub
fimul
dec
and
jge
dec
adc
pop
push
lods
fstp
es
pop
aaa
jge
mov
addr16
ret
push
pusha
mov
mov
pop
int
jb
pandn
adc
stos
into
out
sub
mov
pop
cld
or
test
data16
leave
(bad)
in
push
pushf
mov
push
mov
push
jg
add
jecxz
mov
jae
dec
inc
jg
jnp
data16
mov
outs
pop
push
popa
mov
ss
and
lods
mov
cli
xchg
pusha
scas
mov
pop
inc
push
or
cmp
aaa
out
pop
adc
push
leave
sub
int3
mov
cmp
(bad)
cmp
xor
push
push
cld
(bad)
inc
pushf
ret
out
jmp
dec
add
adc
scas
jo
popa
popa
sahf
pop
xchg
inc
or
shl
dec
push
cmp
sbb
into
imul
mov
jl
out
fisttp
and
retf
mov
adc
ins
aad
imul
ja
daa
adc
push
jne
movs
mov
xchg
jp
clc
cmps
aas
aam
stc
pop
dec
mov
push
jmp
push
sub
lds
aam
pop
sub
out
add
pop
iret
gs
push
stc
loop
push
mov
add
(bad)
std
leave
(bad)
mov
jecxz
pop
xchg
out
lods
outs
jo
xor
push
or
repz
call
in
lods
push
dec
lods
jno
loope
add
lock
int
push
ror
ins
scas
dec
mov
cmc
jno
(bad)
lods
mov
in
sub
dec
stos
leave
xor
aaa
rcl
call
and
and
add
add
sub
dec
or
inc
jl
jecxz
jmp
pop
data16
or
dec
outs
ret
out
ja
lock
mov
ret
(bad)
mov
imul
dec
scas
and
iret
mov
imul
jmp
jge
jne
movs
jo
push
mov
bound
cld
or
or
movs
xchg
xchg
mov
inc
cmp
ja
fsubr
ins
lods
lahf
sub
mov
or
aam
mov
xchg
je
pop
mov
hlt
into
pop
pop
out
xchg
stos
outs
ror
xor
push
sub
hlt
hlt
loopne
cmp
inc
in
mov
inc
ret
mov
cwde
adc
or
push
jmp
sbb
mov
xchg
mov
loopne
sbb
ret
mov
shr
dec
cmp
or
or
push
test
sar
sbb
test
inc
inc
rol
adc
rcl
xor
adc
movs
stos
ret
mov
pop
pop
mov
lds
dec
les
add
shl
repnz
jb
sbb
ret
cmp
dec
jns
dec
mov
inc
scas
jb
inc
dec
in
push
lds
(bad)
out
fild
cmp
daa
mov
adc
stos
call
jbe
test
dec
mov
dec
movs
pushf
push
xlat
pop
pop
xchg
dec
sub
lock
test
(bad)
retf
ds
or
pop
stc
dec
rcr
sbb
sbb
into
imul
fucomi
xchg
in
movs
lock
inc
push
inc
add
imul
inc
daa
inc
xor
or
inc
jp
sub
clc
push
sbb
or
scas
dec
xchg
dec
stc
dec
jmp
jmp
or
loop
pop
les
fstp
icebp
std
jg
in
aam
fld
mov
fcmovb
add
mov
fs
xchg
push
jae
add
xchg
ret
movs
in
sub
mov
add
dec
pop
shl
dec
inc
fs
ret
call
add
addr16
mov
sub
pop
stos
inc
jle
push
adc
adc
inc
mov
dec
sbb
and
sti
sub
cld
movs
loop
les
leave
loopne
or
in
xchg
popf
in
mov
cmps
retf
loopne
pop
fcomp
push
cmp
jno
cli
nop
cmps
repnz
sub
(bad)
fst
xchg
cld
daa
pop
inc
mov
push
pop
fcmovnu
sub
scas
jmp
pop
lea
add
pop
dec
sub
push
mov
gs
into
or
sbb
jmp
xor
cmp
cli
stos
jecxz
inc
mov
xor
sub
pop
pop
shl
out
test
addr16
xor
adc
push
popa
mov
pop
ficomp
(bad)
cmp
test
xor
sub
sbb
gs
jg
and
and
aam
and
xor
outs
mov
inc
jl
and
(bad)
and
imul
jle
sbb
mov
add
sub
int
mov
retf
mov
xchg
sub
jno
push
push
movs
(bad)
push
push
les
fcmovne
mov
es
pop
test
xor
xor
in
push
xchg
sbb
int3
inc
xchg
fild
popf
int
inc
dec
hlt
inc
and
cmps
jbe
pop
std
mov
inc
dec
lods
mov
or
xchg
inc
lock
enter
pop
fisttp
or
or
loop
out
std
push
pop
sub
jns
in
jecxz
(bad)
imul
retf
pusha
and
fsubr
push
stc
dec
pusha
mov
jl
(bad)
shr
mov
ja
int3
pop
push
in
pop
mov
push
iret
(bad)
popa
inc
fst
sahf
call
mov
jle
pushf
cmps
cmp
sbb
aam
fadd
xchg
out
jmp
daa
pop
scas
jge
or
adc
jl
sbb
mov
pop
movs
dec
pusha
adc
das
and
add
pop
xchg
pop
sub
(bad)
(bad)
push
pushf
xchg
fbld
popa
adc
cmp
jbe
fidivr
jecxz
pop
cmps
rol
iret
icebp
es
call
jp
xchg
pop
mov
rcl
into
and
test
xchg
xlat
cmp
xor
popf
mov
das
add
push
outs
aad
add
mov
and
or
mov
xchg
pop
enter
fs
in
jecxz
or
mov
cmp
aaa
dec
inc
pop
push
push
mov
enter
sbb
fldenv
xchg
xlat
and
enter
hlt
jb
pop
push
inc
jae
bnd
push
and
jb
dec
loope
das
movs
cli
fsub
pushf
xchg
sbb
ror
or
cmp
das
je
xchg
mov
mov
mov
lock
retf
fistp
xchg
sub
fisubr
adc
pop
push
add
cs
xchg
or
xchg
(bad)
arpl
or
mov
inc
lahf
xchg
inc
mov
cs
xchg
repnz
push
mov
(bad)
fwait
xor
rol
cs
xchg
repnz
call
std
hlt
dec
mov
(bad)
repz
popf
xchg
inc
(bad)
dec
sbb
mov
jmp
call
inc
jmp
test
inc
jl
test
jae
not
ss
inc
fadd
cmps
out
hlt
fisub
add
cwde
fucomp
iret
adc
scas
and
xchg
pusha
adc
or
lea
outs
dec
call
jne
icebp
test
adc
jns
mov
je
inc
pop
add
and
or
jp
jne
out
sbb
das
xor
sbb
scas
lds
addr16
pop
pop
std
repnz
test
popa
jecxz
into
je
cmps
test
daa
clc
adc
dec
(bad)
jl
and
aaa
stc
add
lods
jp
mov
rcr
int
seto
out
xor
mov
cmp
repnz
nop
popa
inc
neg
pop
mov
(bad)
jp
lods
adc
dec
sbb
lea
mov
sub
dec
fld
stos
pop
xor
push
cmp
popa
push
jno
cs
jo
inc
sub
test
test
fsubr
add
mov
jp
inc
pop
std
add
mov
mov
stos
getsec
inc
jns
sti
inc
mov
dec
mov
test
push
js
pop
test
jae
adc
xchg
int
sar
mov
call
retf
test
(bad)
and
push
xchg
jo
add
hlt
mov
inc
lds
fist
dec
and
sahf
fimul
ret
inc
arpl
push
xchg
pop
jp
hlt
inc
(bad)
jp
sub
xchg
mov
cmp
mov
jo
inc
cli
aam
and
int3
out
pop
or
sbb
repz
pop
dec
mov
stos
leave
pop
fadd
ja
fld
xor
lea
pop
retf
pop
mov
mov
cmp
dec
(bad)
jno
push
dec
ret
dec
clc
in
sbb
movs
int3
pop
push
(bad)
cdq
add
imul
call
push
pop
jmp
sti
mov
dec
dec
push
jb
sub
cmc
sbb
pop
xchg
into
aas
jl
mov
loope
lods
jmp
lahf
mov
call
mov
fbstp
outs
jno
in
pop
out
or
mov
or
cdq
add
sub
xor
sbb
adc
aaa
or
outs
ss
shl
ror
mov
outs
cmc
dec
sahf
test
fnsave
test
jne
and
lock
cmc
pop
xlat
in
loop
jge
sub
sbb
push
leave
sbb
std
lods
push
or
or
pop
fdivp
jmp
and
cmc
cmp
int
scas
cwde
and
jmp
sbb
jge
int
bound
cli
xor
int
nop
fdivr
cwde
jae
or
dec
je
loope
adc
push
add
stos
fistp
inc
lahf
dec
sub
addr16
fist
leave
mov
arpl
daa
dec
jl
(bad)
shr
arpl
sub
inc
nop
or
cmp
mov
test
lods
int
(bad)
adc
jecxz
stos
pop
loopne
adc
mov
(bad)
mov
cmp
int3
loope
cmp
ins
add
mov
sbb
or
mov
xor
and
stos
and
sbb
fild
das
sbb
push
lock
cmp
int
xchg
cwde
jbe
inc
jae
mov
add
cmp
adc
cmps
ret
retf
dec
push
shr
(bad)
cmc
cmc
or
cmp
out
fdiv
test
add
sbb
xchg
in
fs
jo
mov
in
mov
(bad)
jp
popa
and
cwde
lds
inc
and
jge
cmp
mov
inc
jns
adc
call
fcomp
repnz
xchg
mov
or
and
sbb
pop
imul
jbe
test
in
or
sub
neg
test
jae
movs
fst
and
call
xchg
(bad)
or
inc
aas
push
mov
cwde
sbb
lods
imul
int
pop
ret
and
sub
cmp
jnp
(bad)
rol
add
mov
sahf
sbb
mov
and
dec
push
push
cmp
adc
pop
xor
jecxz
cs
sbb
fisttp
(bad)
aaa
mov
scas
mov
add
cmp
pushf
lahf
dec
or
cmc
out
fldcw
mov
int3
or
mov
int
mov
jmp
add
sub
int
stos
xor
popf
mov
push
jno
scas
fdivr
pop
or
fidivr
add
and
inc
sub
mov
enter
scas
push
cdq
cdq
inc
and
dec
sar
out
sub
xlat
sbb
fs
test
mov
ja
mov
adc
dec
idiv
jmp
jge
add
xchg
enter
add
push
inc
and
or
mov
mov
lock
or
clc
add
pop
call
shr
cmps
arpl
push
pop
ins
hlt
pusha
push
adc
sub
mov
cwde
adc
iret
and
sub
push
mov
scas
and
clc
mov
frstor
ror
pop
call
int3
frstor
aaa
push
xor
mov
test
pop
pusha
pop
adc
mov
mov
mov
and
popf
fidivr
lods
das
stos
mov
movs
mov
test
sbb
inc
push
aaa
pop
enter
in
mov
dec
sbb
jg
sbb
mov
jmp
sbb
mov
add
repz
out
jl
repz
clc
inc
cdq
test
jno
xor
sub
mov
std
and
pop
rcr
or
icebp
inc
xchg
pushf
dec
lods
jnp
test
bound
enter
mov
out
push
adc
mov
mov
add
popf
xor
inc
pop
or
cmp
inc
lock
mulps
out
dec
addr16
rcr
xchg
out
fisttp
(bad)
lods
push
out
mov
mov
shr
movs
ds
push
push
add
cmc
sub
cmp
sub
push
in
cmp
cmp
push
or
jno
fld
sti
mov
repz
push
jae
mov
jo
inc
mov
sbb
sub
pop
xchg
into
mov
das
cld
loope
lahf
out
(bad)
in
inc
jae
push
sub
xchg
adc
or
sti
js
shl
sub
push
iret
mov
add
sub
int3
or
mov
int3
shr
jge
mov
fwait
in
out
js
and
arpl
jbe
outs
pop
pusha
aad
cmp
sub
mov
pop
xor
nop
shl
xchg
inc
push
imul
cdq
adc
and
xchg
repz
mov
fwait
jg
call
mov
mov
pusha
sti
mov
call
shl
sbb
xchg
ins
out
pop
jo
in
sub
arpl
or
mov
inc
inc
sub
sar
mov
pop
jg
xor
push
xchg
mov
(bad)
pop
rcl
test
call
xchg
pop
dec
mov
add
dec
pop
test
mov
cmp
int3
scas
push
ror
jne
or
(bad)
aaa
cmps
dec
mov
jge
pushf
aad
cmp
cld
add
jns
shr
stc
push
adc
pop
add
and
dec
dec
inc
jp
neg
jmp
push
push
outs
jno
sbb
(bad)
lahf
add
(bad)
int3
cmp
movq
lods
pop
and
loope
loopne
jp
iret
mov
and
push
popa
fcomp
jg
popf
jno
retf
fcmovbe
je
stos
xor
ret
outs
push
idiv
mov
rol
add
mov
dec
mov
mov
mov
xchg
or
ficom
pop
shr
into
fmulp
rcl
mov
(bad)
push
(bad)
pop
pop
out
cmc
xchg
stc
dec
cmp
loopne
jnp
aad
cmp
cmc
in
lods
dec
or
push
sub
push
pop
leave
je
jge
cld
(bad)
sub
inc
movs
push
sahf
or
fadd
sub
adc
or
out
test
js
scas
mov
in
pop
ja
test
pop
pushf
sub
call
cdq
xor
cmp
das
sub
cdq
cmp
iret
cmp
inc
jg
movs
fistp
(bad)
inc
lds
ins
test
test
push
and
xor
push
mov
lea
jno
sbb
in
in
mov
pop
cmp
les
xor
push
xchg
jmp
outs
fcmovbe
out
loop
fwait
loopne
enter
ins
or
sbb
push
out
dec
fst
cmp
rcr
jl
daa
stc
dec
cmp
fisubr
push
add
xor
jne
dec
shl
add
cmc
js
pusha
pop
mov
das
xor
push
jo
xchg
mov
retf
push
pop
inc
or
inc
gs
js
lods
jne
xchg
sub
call
into
cli
dec
in
(bad)
aad
fld
mov
out
loopne
std
sahf
movs
cs
mov
shl
cmc
aas
add
inc
stc
int
or
mov
adc
stos
ret
jmp
mov
hlt
cmps
mov
jb
inc
ret
xor
popa
fnsave
in
and
aas
mov
std
jnp
or
sbb
pop
xlat
sub
rol
pop
push
loopne
jnp
fmul
mov
or
out
int
sbb
pushf
adc
xchg
test
sar
nop
cld
lods
daa
ja
lods
std
or
sbb
mov
(bad)
sbb
adc
fisubr
sar
sbb
test
sub
push
(bad)
ret
(bad)
je
test
out
sbb
ret
inc
add
ins
xor
es
or
leave
ds
arpl
ins
hlt
in
imul
jg
ss
retf
sub
jnp
int3
and
pop
add
mov
out
arpl
sub
jae
mov
cmp
dec
add
vorps
cwde
or
rcr
mov
cmps
(bad)
lahf
xor
mov
jmp
inc
pop
dec
push
mov
popa
out
xor
gs
jns
xchg
lea
sbb
cli
mov
sbb
dec
int3
push
push
imul
in
imul
cmp
pop
dec
call
cmps
pop
cmp
mov
dec
stos
cmp
mov
out
dec
and
movs
sahf
clc
rol
inc
sbb
adc
enter
(bad)
out
test
stc
dec
pop
jno
cld
jne
int3
sti
jg
jno
sbb
jmp
add
(bad)
pushf
rcl
test
fsubp
mov
xchg
cmp
sub
lea
mov
mov
ret
and
enter
or
xchg
add
mov
shl
sub
std
mov
xor
push
hlt
lahf
call
ins
adc
test
sbb
fwait
mov
ret
and
mov
into
shr
cmps
add
push
mov
scas
add
xchg
cmp
lock
mov
mov
mov
pop
mov
add
repz
xchg
or
push
pusha
xchg
not
ins
sub
fwait
inc
dec
mov
mov
fild
dec
mov
ja
jne
sub
retf
push
push
mov
push
in
jae
jg
sbb
add
je
leave
jmp
push
mov
mov
adc
clc
pop
mov
(bad)
fs
addr16
jle
cmp
stos
repnz
push
mov
fnstcw
cdq
ins
js
fs
push
cli
scas
push
adc
je
cmp
fwait
popa
fnstsw
push
mov
aam
push
sub
fistp
inc
mov
fs
cmp
adc
mov
or
xor
xor
mov
xchg
adc
(bad)
dec
shr
inc
xor
xchg
fld
jl
cmp
iret
pop
push
or
add
outs
xchg
out
clc
push
xor
cmp
xor
inc
push
scas
add
push
dec
cwde
mov
push
jne
lock
jbe
mov
arpl
(bad)
push
mov
xchg
cmps
popf
add
or
js
ret
ins
fimul
push
neg
icebp
aam
push
sub
test
adc
push
xchg
xor
mov
dec
cmps
push
or
les
xor
and
(bad)
aad
out
xchg
jle
shr
mov
in
cs
outs
ins
test
or
add
lods
push
xor
mov
mov
add
inc
mov
rcl
std
xchg
xchg
mov
outs
test
push
sbb
mov
cmc
inc
mov
lods
fcom
out
rcl
ins
mov
dec
sub
mov
iret
mov
jmp
shl
(bad)
idiv
mov
push
pop
and
push
jle
test
ja
dec
clc
jno
pop
mov
add
repz
call
mov
push
inc
xlat
xchg
cmp
cmp
adc
aaa
cmp
mov
add
push
fcomip
sub
mov
mov
cmp
addr16
jecxz
xor
mov
loop
sub
mov
in
ja
popf
fimul
push
push
int3
pop
fs
push
jg
imul
sub
movs
dec
xchg
push
clc
je
int3
xor
js
mov
push
fcomp
sbb
mov
xchg
dec
cmp
mov
dec
fst
(bad)
mov
ficom
movs
pop
mov
or
adc
jbe
std
shr
scas
ror
mov
test
pop
mov
xchg
in
mov
xchg
(bad)
das
mov
fyl2xp1
xor
aaa
and
(bad)
bound
jb
ds
retf
clc
hlt
(bad)
push
imul
push
sar
fadd
cmp
ins
pop
ret
mov
ret
(bad)
mov
xor
(bad)
dec
cs
test
push
lahf
push
pop
jno
inc
push
jae
fucomip
or
int3
inc
cdq
cmps
repnz
int
pop
div
loopne
cmc
repz
out
lahf
leave
pusha
xor
xchg
test
push
push
scas
dec
sbb
dec
push
mov
repz
dec
lds
(bad)
(bad)
adc
dec
scas
pop
mov
bound
rcr
mov
jge
lds
int3
sub
mov
hlt
iret
xchg
in
xchg
into
dec
daa
inc
jle
mov
mov
xchg
mov
xor
xor
ss
fstp
test
and
adc
imul
out
lods
or
sub
rcl
dec
xchg
ds
adc
or
adc
sbb
int
push
cmp
leave
adc
cmp
adc
mov
ins
pop
mov
imul
ror
sahf
cmc
daa
jo
loope
inc
sbb
ins
and
outs
fdivrp
and
jmp
pop
push
fmul
push
rcl
clc
xor
fisub
sub
adc
push
add
fbld
pop
ds
dec
mov
adc
scas
je
cdq
mov
push
outs
mov
and
inc
retf
fwait
into
cmp
jnp
fidiv
push
mov
int
das
mov
mov
aaa
out
cmps
inc
xchg
loope
pop
adc
xchg
ds
loopne
pop
jmp
out
popf
xor
pushf
cmp
inc
pop
out
add
inc
jo
std
mul
or
mov
dec
popf
push
mov
ins
mov
xchg
pop
mov
adc
adc
adc
jg
daa
iret
sar
in
pushf
stos
cmc
shl
inc
pop
sti
dec
cmps
dec
sbb
mov
not
out
pop
cmp
pop
xchg
std
xchg
push
arpl
out
jnp
outs
int
cmp
and
aas
pop
data16
xchg
mov
adc
je
adc
sahf
cmc
cdq
lods
add
retf
xchg
ret
pop
cmc
nop
outs
(bad)
pushf
push
mov
jecxz
mov
(bad)
outs
(bad)
adc
mov
mov
cld
jns
pop
(bad)
cdq
pop
sahf
add
mov
inc
add
into
call
xor
pusha
dec
pop
adc
mov
cmp
xchg
data16
cmc
aam
dec
add
pop
icebp
dec
and
sbb
and
or
mov
rol
or
push
jmp
pop
push
mov
cmc
jb
add
pop
aas
xor
jmp
sub
popf
pop
add
(bad)
std
and
addr16
inc
xor
pop
mov
dec
mov
push
add
stos
adc
push
jmp
ins
clc
xor
dec
jge
aam
jge
push
inc
pop
shr
mov
adc
sub
mov
xchg
jo
loope
js
add
push
jns
xor
in
and
test
push
jle
and
pop
repnz
lahf
arpl
addr16
(bad)
jns
mov
or
js
jae
imul
inc
aam
test
fimul
sub
test
cwde
inc
cmp
sahf
test
xor
push
mov
jb
aaa
mov
rcl
aaa
pop
ficom
mov
movs
mov
cdq
cmps
or
fsubr
adc
mov
or
lea
daa
cmp
addr16
and
scas
sbb
call
cmps
pop
xchg
add
inc
sub
(bad)
stc
xchg
jb
fwait
jle
je
in
fisub
inc
mov
add
and
(bad)
(bad)
aam
fcmovu
cmps
mov
cs
mov
cdq
sbb
jb
test
out
test
sbb
ja
cmp
jns
icebp
ins
in
push
in
jnp
int3
xchg
pop
movs
cs
push
in
push
daa
retf
cmp
iret
push
push
dec
push
movs
lods
xchg
pop
add
mov
jbe
add
or
inc
xchg
cdq
hlt
and
jecxz
push
sub
in
or
aad
xchg
lahf
adc
sbb
out
pop
es
jno
cld
adc
out
je
mov
mov
into
dec
pop
push
in
add
(bad)
lahf
xor
inc
imul
push
pop
nop
fld
test
cmp
aam
(bad)
push
sub
mov
jbe
das
(bad)
cld
dec
xchg
vunpcklps
aaa
lea
mov
fwait
and
dec
push
fs
lock
fistp
aad
sbb
ss
(bad)
out
or
mov
pop
repz
jno
xor
gs
stos
sub
aas
cwde
int3
in
out
not
mov
push
loopne
mov
and
mov
and
repnz
movs
xchg
jecxz
mov
aaa
or
add
cmp
in
std
pop
or
in
daa
mov
mov
mov
sar
mov
sbb
mov
daa
mov
sub
xchg
xor
dec
mov
push
add
pop
ins
inc
push
inc
cld
jbe
push
or
dec
pop
jl
(bad)
mov
retf
ret
mov
pusha
jecxz
xchg
mov
shr
xor
adc
popa
mov
pop
aaa
fadd
lahf
ja
xor
shld
pop
dec
fld
cmps
ss
sbb
lahf
out
mov
inc
dec
es
add
lods
iret
pusha
add
jecxz
cmp
dec
dec
cwde
out
sar
inc
mov
mov
in
dec
mov
stc
movs
add
xchg
push
mov
jno
dec
dec
xchg
inc
inc
jmp
cli
js
ficomp
sbb
jae
xor
ficomp
out
pop
xor
pop
inc
clc
xchg
xchg
mov
and
add
mov
cdq
imul
xlat
cmp
in
add
jnp
add
out
pop
ret
fucom
mov
int
push
mov
cwde
mov
aam
cld
js
jmp
xlat
nop
loop
inc
push
vpsllw
mov
pop
add
or
pop
jne
sbb
xchg
fimul
std
jb
xor
in
bound
(bad)
cmps
xor
or
ss
in
hlt
push
inc
mov
(bad)
xor
push
sahf
cdq
aad
fs
out
adc
movs
mov
in
test
mov
and
mov
ja
and
push
jecxz
xlat
pop
in
jmp
shl
into
push
cs
xchg
fdiv
xor
jo
dec
xor
ja
mov
bound
sub
cmp
adc
enter
and
pop
fcom
pop
pushf
test
mov
push
(bad)
(bad)
xlat
xor
dec
les
lea
push
cli
xor
push
in
push
(bad)
sbb
in
stos
loope
shr
movs
scas
jmp
push
push
cmp
xlat
mov
adc
in
loope
sti
mov
and
and
jnp
ins
and
pop
test
mov
(bad)
sbb
sub
pusha
jns
jb
data16
xor
pop
mov
out
jecxz
test
xchg
cwde
enter
(bad)
sahf
clc
(bad)
or
test
test
cmp
lahf
pop
jbe
dec
lock
adc
or
dec
loope
test
or
sar
movs
jne
push
ficomp
adc
movs
ins
mov
sub
cmps
scas
outs
test
or
inc
push
out
ffreep
mov
jae
or
cmps
jns
jmp
xlat
sub
cmp
shr
pop
adc
test
adc
pop
dec
xchg
sub
icebp
(bad)
in
sub
mov
sub
repz
or
ja
rol
std
xchg
sbb
daa
cmps
dec
fs
jge
sahf
call
add
mov
out
in
in
out
or
xor
fsub
scas
jnp
sbb
jno
retf
mov
shl
dec
push
adc
call
mov
push
dec
jl
jl
pusha
inc
mov
(bad)
push
bnd
pop
shr
stc
inc
and
or
sub
das
hlt
mov
movs
mov
mov
iret
push
jge
lods
sub
retf
inc
cmp
dec
out
sbb
pop
hlt
cmp
in
xor
inc
test
jae
loope
add
clc
pushf
outs
pop
into
idiv
adc
dec
push
call
jle
scas
xchg
pusha
mov
add
pop
cwde
mov
adc
out
jns
inc
mov
(bad)
adc
adc
daa
sbb
cwde
into
or
shl
push
outs
cmp
add
cmp
xchg
(bad)
jge
cmps
fidiv
push
inc
lahf
push
sbb
popa
mov
sbb
mov
mov
xchg
pop
retf
dec
push
mov
rcr
call
jp
test
or
pop
push
pop
jmp
leave
mov
test
sub
test
mov
stc
leave
push
mov
jnp
jmp
and
dec
dec
sbb
int
and
ror
cdq
test
dec
mov
dec
mov
lods
xor
sub
retf
mov
aad
aas
shrd
mov
mov
and
push
push
mov
(bad)
pop
sub
xor
xchg
repnz
call
fs
ds
sbb
cmp
outs
xor
cmp
imul
xlat
jo
push
xchg
mov
lds
and
cwde
shl
lea
outs
jle
stos
cmp
xor
push
loop
dec
es
add
inc
enter
xlat
ins
pop
inc
or
add
mov
std
jecxz
xlat
lds
and
aad
cdq
cmp
push
leave
mov
arpl
jmp
mov
sbb
xlat
add
adc
xor
inc
fld
cs
cmps
sub
cmps
rol
cli
repz
enter
jbe
push
mov
or
adc
das
fld
xchg
sub
adc
sub
mov
cmps
imul
ret
and
inc
xor
add
test
jmp
rcr
push
jo
repnz
ins
dec
xor
fldlg2
mov
cmps
test
aaa
aaa
add
jg
cmp
or
lds
mov
shl
imul
sbb
add
sbb
or
mov
int3
mov
cmps
loope
fs
mov
xchg
imul
and
inc
shl
adc
xchg
call
repz
aas
or
out
ja
loopne
int
nop
cli
out
je
inc
test
cli
call
bnd
xchg
add
and
mov
xchg
jae
inc
xor
adc
mul
sub
int3
ror
mov
jb
inc
jns
div
mov
loopne
sbb
(bad)
cmp
mov
movs
leave
outs
xor
pop
cs
mov
outs
jg
jno
xor
lea
push
mov
lock
jmp
repz
sub
lea
inc
(bad)
fldenv
dec
adc
ins
sahf
inc
add
push
sbb
out
adc
fwait
xchg
adc
stc
jnp
ret
cli
pop
xor
addr16
mov
mov
sbb
dec
inc
repz
or
push
mov
sub
rcr
push
cmovnp
rol
jle
mov
mov
aaa
enter
xchg
outs
jg
jmp
idiv
fisttp
lds
xor
push
test
std
les
or
(bad)
int
das
pop
adc
dec
or
mov
ret
mov
cmp
or
test
push
arpl
ror
mov
fidiv
add
out
stos
sti
inc
or
cmp
add
call
cmps
pop
mov
fsub
push
frstor
fild
cmps
jle
gs
or
movs
or
iret
sbb
pop
inc
and
sahf
fst
or
aas
xchg
add
movs
in
fstp
inc
push
push
cmp
push
jno
cmp
fwait
cdq
or
cmp
or
fwait
sbb
or
pop
mov
out
js
movs
adc
loopne
das
rcr
inc
sbb
test
ror
dec
sahf
fst
pop
and
sti
mov
loopne
out
jp
xchg
in
sbb
xchg
mov
arpl
dec
and
fcmovnb
jns
fld
ficomp
les
in
loope
cmps
mov
jmp
test
sbb
inc
ins
push
loop
push
aam
into
out
or
pusha
and
aaa
fisttp
inc
int
fild
mov
pop
retf
jne
pop
push
push
lds
sbb
push
add
inc
clc
shr
push
adc
sbb
stc
cmp
add
adc
mov
cmp
(bad)
(bad)
push
jecxz
arpl
inc
ret
xchg
mov
aaa
push
daa
mov
mov
ss
daa
ror
dec
jmp
into
sbb
dec
scas
jge
mov
cli
add
jnp
pusha
jnp
test
jmp
add
sbb
jl
cmp
ret
mov
repnz
lock
scas
repz
push
push
xchg
std
or
aam
jge
sub
mov
out
adc
cmps
mov
jp
push
xor
mov
push
and
jmp
adc
imul
test
pop
ret
js
xchg
push
jo
out
loope
jmp
push
dec
xor
daa
fnstcw
retf
dec
ret
mov
mov
mov
push
ror
xor
pop
mov
jmp
int
jmp
cli
fldcw
repnz
and
mov
add
nop
pop
stc
mov
xchg
in
mov
push
and
sub
mov
popw
and
xor
retf
fstp
jp
int
outs
out
idiv
sub
mov
mov
out
leave
pop
ss
and
push
retf
sar
mov
mov
mov
sub
add
ins
stc
add
sub
(bad)
dec
stc
xchg
sub
je
out
add
sub
mov
outs
xchg
sar
cmps
mov
or
xchg
jge
or
add
pushf
xor
js
push
clc
cdq
pop
retf
les
loope
mov
cmp
jl
div
dec
je
or
cmp
pop
or
sub
in
call
push
ins
enter
or
xchg
xor
popf
inc
dec
mov
push
test
out
ins
xor
shr
pop
sub
scas
add
xchg
addr16
mov
cmp
push
mov
loopne
adc
jmp
js
xor
in
mov
inc
ret
lea
out
mov
xchg
jb
jbe
out
cli
jo
pushf
in
adc
scas
mov
cwde
sbb
dec
push
or
xchg
dec
cli
xchg
sbb
ret
out
push
jo
out
xor
push
call
and
idiv
mov
mov
add
test
jl
pop
jne
sub
lods
jmp
inc
pusha
in
fbld
push
cmp
push
xchg
ja
xor
in
in
jb
and
out
pop
push
mov
div
js
push
sar
shl
test
es
gs
and
pop
or
addr16
sub
sub
cmp
pop
fucomip
loop
mul
lahf
ins
scas
(bad)
jne
jbe
retf
ss
pop
adc
ret
sub
lods
test
sbb
es
pop
mov
mov
test
jg
in
mov
mov
inc
leave
mov
add
movs
xchg
pop
(bad)
in
jae
inc
enter
inc
inc
call
idiv
sub
pop
mov
rcl
jae
clc
fwait
xchg
jg
cdq
or
(bad)
or
xchg
leave
push
lods
sub
(bad)
add
loope
push
into
imul
sar
sub
icebp
int
mov
mov
loopne
daa
std
xchg
daa
jmp
pop
out
mov
int3
xchg
jmp
xor
jbe
iret
into
push
mov
push
jg
jmp
sbb
pop
data16
addr16
adc
std
popw
pop
cmp
push
fcomp
in
mov
gs
mov
cmps
push
fwait
sti
movs
stc
xchg
dec
sahf
test
mov
pop
jge
add
mov
sbb
out
mov
add
and
inc
jno
js
dec
outs
inc
int
js
xor
shl
sub
pop
jl
dec
(bad)
gs
test
mov
jnp
jbe
mov
vandnps
xor
cld
cs
clc
dec
jmp
mov
push
aaa
xchg
jbe
lahf
push
and
and
mov
popf
hlt
pop
add
sti
adc
addr16
ins
idiv
sub
and
and
add
loop
mov
shl
jae
(bad)
or
push
push
xor
sbb
adc
outs
xchg
push
out
dec
add
xor
adc
cmp
pop
sbb
xlat
adc
mov
sub
xor
sbb
rol
cmp
pop
stos
imul
inc
inc
adc
in
loop
and
pop
shl
fisttp
stos
cli
jnp
sbb
xchg
fstp
enter
fcomi
jp
ds
and
sub
cmps
adc
pop
(bad)
jmp
mov
push
or
lods
jnp
mov
jae
in
lahf
gs
sbb
sub
out
push
pop
push
mov
call
pop
mov
aad
idiv
inc
sub
movs
fist
stos
lahf
sti
mov
jno
cmc
gs
mov
pop
int
pop
or
xchg
pop
dec
stc
xor
popa
cmps
mov
cmp
and
call
xor
mov
out
inc
cmp
cmp
lea
addr16
inc
jmp
adc
sbb
test
retf
and
iret
out
mov
and
dec
inc
(bad)
mov
cli
jns
fiadd
lea
and
fimul
leave
fild
pop
jp
jbe
lds
rcl
sub
xchg
inc
and
popa
outs
mov
(bad)
dec
sbb
imul
addr16
repnz
adc
dec
jle
jae
out
scas
dec
test
(bad)
cmp
cmp
movs
shl
mov
popf
hlt
shr
retf
fmul
xchg
pop
pushf
mov
push
fmul
imul
xor
cmp
dec
lds
cmp
(bad)
hlt
test
in
mov
jne
mul
inc
loope
add
and
loop
rol
fst
or
pop
pop
or
outs
(bad)
add
mov
adc
mov
adc
mov
movs
dec
pop
mov
mov
shr
ins
mov
cmp
or
inc
loopne
out
xchg
sbb
jmp
adc
xchg
or
jmp
xchg
hlt
shl
pop
(bad)
add
test
shl
movs
ins
fwait
jle
inc
xor
enter
sub
sub
dec
inc
add
push
adc
push
pop
inc
mov
cmp
shl
movs
lods
(bad)
cmp
shl
dec
cld
inc
in
inc
rcr
sub
test
js
xchg
cmps
xchg
pusha
mov
or
ins
popa
mov
call
mov
xor
or
lds
ins
aas
jae
push
jmp
dec
or
xlat
dec
sub
or
adc
mov
inc
jg
test
loopne
outs
push
jg
ret
(bad)
cli
pop
pushf
push
cmp
sub
addr16
mov
cmp
inc
movs
jecxz
or
ret
hlt
or
ja
rcr
and
push
push
cmp
sub
mov
add
sbb
pop
dec
dec
jbe
inc
retf
cwde
inc
push
sar
push
add
pop
xor
test
ret
jg
inc
cli
hlt
sub
pushf
leave
aam
lods
test
jmp
mov
mov
out
imul
and
test
call
pop
mov
mov
lds
leave
mov
add
lock
xor
or
dec
jno
ret
cmps
movs
into
sub
out
mov
je
mov
mov
inc
das
or
pop
jno
and
pop
les
mov
add
cmps
inc
lods
int
dec
sti
push
adc
fild
push
cmp
lods
loope
and
xor
inc
add
add
clc
mov
mov
call
scas
and
jno
push
sbb
mov
dec
mov
and
fnstsw
inc
mov
jp
imul
out
cmp
into
test
xchg
adc
ror
iret
cli
mov
(bad)
push
aam
aas
jo
es
pop
xchg
dec
(bad)
pop
retf
pushf
pushf
mov
add
sbb
and
xchg
test
inc
loope
xchg
cmps
enter
sub
pusha
pusha
scas
pop
cmp
xlat
or
call
lock
repz
xor
cmps
(bad)
pop
cmps
pop
push
lahf
pop
jmp
out
add
adc
mov
sub
jae
or
ret
xchg
out
mov
sahf
or
mov
in
adc
or
out
aam
in
mov
jg
adc
or
xchg
pop
mov
ss
dec
mov
out
sub
stos
pop
add
test
dec
dec
push
jle
add
jp
out
mov
xchg
repz
std
dec
add
cmc
repz
mov
push
popa
pop
(bad)
pop
pop
add
xor
push
cmp
loopne
retf
mov
jmp
mov
out
mov
test
cmps
(bad)
daa
rol
cmp
icebp
mov
aaa
mov
inc
cwde
aas
xchg
cdq
dec
imul
ja
mov
inc
sbb
sbb
sub
shl
stos
push
in
test
in
mov
stos
sbb
push
xchg
pop
mov
inc
lock
(bad)
gs
cdq
sbb
jbe
(bad)
pop
pop
pop
ds
bound
sar
xor
dec
mov
sbb
imul
mov
mov
sub
popa
loop
xchg
inc
mov
call
repnz
sbb
jge
sbb
xchg
xor
pop
call
adc
in
dec
sar
mov
pop
push
pop
loopne
(bad)
int
aam
adc
push
hlt
nop
lods
and
pop
jnp
into
loopne
enter
mov
xor
lahf
inc
cs
cld
jae
ror
jp
lea
push
or
cmp
xchg
cs
shl
pop
mov
in
repnz
sub
adc
out
pop
and
jo
repnz
mul
les
mov
fnstenv
(bad)
and
adc
pop
clc
push
sbb
inc
add
mov
mov
inc
idiv
xchg
lods
sub
les
jno
xor
push
mov
lock
sar
sub
rcr
jge
mov
mov
sbb
cmp
inc
mov
cmp
aad
and
mov
cli
cld
push
retf
repnz
sub
push
ins
push
jb
push
mov
test
push
jb
popa
inc
pop
jnp
and
std
pop
ret
mov
mov
xor
xchg
push
xor
jmp
pop
jne
je
or
int3
repz
in
and
shr
dec
xor
or
ja
(bad)
adc
std
push
jo
or
test
arpl
rsm
mov
add
pusha
clc
and
pop
cmp
out
shl
mov
daa
and
lods
mov
or
ja
cmps
mov
fild
push
mov
inc
(bad)
mov
sub
imul
sub
outs
fiadd
pop
or
jg
stos
xor
call
or
ret
dec
jge
xchg
dec
ficomp
cmps
and
sub
or
aam
sub
xchg
fsub
mov
sbb
imul
and
ja
daa
scas
rcl
test
dec
pop
movs
ins
sbb
mov
fs
adc
retf
mov
data16
cmp
pop
mov
pop
pop
pop
lock
pop
clc
sbb
call
loope
inc
jle
test
mov
pop
inc
push
sahf
xlat
push
int3
xchg
adc
popa
call
sub
xor
fcmovbe
or
push
mov
rcl
mov
loope
mov
jns
lock
movs
mov
mov
jecxz
leave
gs
scas
pop
add
and
xor
mov
loopne
cmc
add
xor
fld
sbb
jl
cmp
cmp
pop
or
adc
add
mov
outs
mov
in
cmc
aaa
loopne
jmp
pop
jne
mov
mov
xor
mov
mov
fdivr
sbb
aam
xchg
or
hlt
add
jg
and
ss
or
push
sbb
adc
xchg
xor
mov
mov
into
and
pop
xchg
ds
mov
jbe
(bad)
fmul
adc
or
and
jb
dec
aad
dec
in
jl
mov
cmp
cmp
add
pop
xchg
mov
mov
(bad)
addr16
movs
scas
xchg
mov
call
mov
fwait
mov
(bad)
or
outs
in
and
pop
add
fwait
xlat
sub
push
push
sahf
out
inc
(bad)
xor
xchg
repnz
out
fbld
imul
jb
mov
add
mov
into
mov
mov
inc
and
sbb
xchg
cwde
cmp
iret
or
inc
and
je
push
sub
sbb
xor
pop
adc
mov
imul
cmp
adc
jmp
push
test
imul
loopne
popf
cmp
fisub
daa
jo
aad
mov
push
dec
jle
jnp
movs
cmps
retf
mov
and
adc
adc
cmp
dec
lds
retf
jbe
stos
hlt
xchg
nop
ficomp
mov
mov
push
in
icebp
mov
js
inc
cs
(bad)
mov
test
cmps
fwait
xor
daa
and
loope
push
inc
pop
cmp
jge
into
mov
mov
cmps
adc
test
or
pop
pop
cmp
xchg
or
pop
loope
adc
fsubr
lahf
mov
(bad)
xor
mov
scas
imul
jge
test
call
jl
fisubr
aam
or
nop
add
aaa
fwait
outs
pop
xor
sbb
mov
cwde
fst
leave
sbb
das
pop
mov
sbb
jbe
sub
cwde
mov
daa
arpl
push
and
mov
lods
in
xor
and
sbb
mov
in
scas
aam
bound
mov
xor
addr16
jns
popa
rcr
bound
pop
sti
mul
call
xchg
adc
cmps
sbb
stos
rcr
push
out
add
mov
das
xor
inc
out
idiv
sbb
mov
movs
stos
and
jno
dec
loopne
pop
std
add
lods
push
add
pop
int
mov
sub
jmp
xor
int
outs
in
dec
hlt
hlt
pop
cmp
je
jne
stos
int3
dec
cmp
push
inc
out
(bad)
std
xchg
push
out
(bad)
and
in
hlt
call
add
mov
imul
aaa
shl
or
and
dec
mov
pop
and
retfw
stc
sti
dec
mov
add
xor
cmp
shl
out
inc
mov
sub
nop
push
inc
push
pusha
or
mov
in
xchg
cli
stos
mov
shl
sub
leave
pop
test
sbb
jg
add
pop
xchg
adc
mov
ror
out
and
mov
popf
inc
jbe
jne
xchg
mov
push
push
pusha
pusha
stc
sbb
scas
mov
out
(bad)
mov
and
mov
out
daa
mov
div
clc
adc
xchg
cwde
push
arpl
aaa
dec
sub
les
mov
div
ret
fmul
sti
std
push
adc
ins
adc
mov
push
aam
adc
or
mov
fadd
cmp
push
pop
test
les
sub
movs
cmp
jecxz
fisttp
inc
je
cld
mov
pop
cmps
mov
mov
push
xor
add
fist
adc
xchg
mov
inc
add
scas
pop
xchg
sbb
ja
pop
pushf
movs
dec
pop
inc
(bad)
jg
lods
sub
loope
or
(bad)
aas
pcmpgtb
sahf
in
cmp
addr16
rcl
retf
mov
cmp
or
imul
idiv
mov
xchg
test
les
loop
stc
and
(bad)
call
xchg
cmp
pop
mov
cdq
add
bound
inc
pop
mov
xchg
xor
pop
add
adc
and
pop
rol
ds
adc
push
sub
enter
divps
cdq
test
inc
pop
push
imul
mov
mov
fbld
inc
cdq
inc
inc
sbb
adc
fwait
jae
xchg
test
int
test
dec
add
loopne
jno
outs
cmp
mov
jl
shl
cdq
nop
test
jmp
inc
jl
mov
(bad)
mov
scas
into
enter
dec
aad
jl
aad
clc
jmp
int
jae
jae
cmp
xchg
and
imul
add
sbb
mov
(bad)
aam
inc
movs
pop
mov
in
daa
or
cmp
xchg
int
mov
retf
or
sub
fmul
popa
aas
adc
xchg
jae
ss
lock
push
fs
mov
cmp
movs
push
mov
inc
push
mov
xor
mov
sub
jns
int3
int3
test
mov
add
mov
sar
mov
out
rol
add
push
sti
aad
pop
pusha
aaa
push
sub
add
xchg
mov
add
jge
and
pusha
dec
sub
jns
rcl
add
into
jo
ds
adc
fisub
xor
call
jl
push
(bad)
jle
push
xlat
mov
xor
pop
imul
call
fst
mov
dec
dec
push
scas
(bad)
pop
scas
fcmovnb
ss
(bad)
mov
jle
les
jle
ja
sbb
jo
add
push
push
sbb
inc
jbe
cwde
sub
fistp
pop
xchg
jae
(bad)
mov
nop
rol
mov
(bad)
adc
add
mov
and
adc
pushf
push
xor
push
cmp
fdiv
and
sbb
mov
arpl
nop
cli
jb
mov
rcr
mov
jmp
rcl
in
outs
sub
mov
outs
leave
mov
shl
(bad)
out
repnz
mov
jmp
mov
std
mov
mov
sbb
jge
add
data16
cmps
cmp
pop
jle
push
nop
xor
es
in
sbb
jecxz
outs
sahf
mov
xchg
cs
or
je
ins
scas
fcomip
mov
jno
jne
cmp
dec
xchg
mov
fsubp
(bad)
sub
adc
arpl
dec
mov
pop
push
(bad)
or
hlt
sub
movs
or
js
out
mov
call
xor
cwde
stos
retf
mov
or
lods
movs
push
loopne
pushf
(bad)
or
sub
aas
add
jle
sahf
mov
jmp
retf
add
sar
add
add
scas
mov
nop
(bad)
movs
icebp
loope
retf
lods
cdq
aaa
and
and
mov
and
cmp
mov
fs
push
jmp
outs
int3
xchg
xor
call
call
das
imul
adc
or
fldenv
or
(bad)
(bad)
test
ss
mul
jmp
scas
adc
ss
fcmovnbe
pop
xchg
mov
xchg
les
ds
xor
mov
lods
mov
iret
aam
repz
inc
fadd
fwait
out
pop
ror
test
cmc
push
cmps
je
and
and
jge
jne
or
popf
test
ficom
retf
cmp
dec
fdiv
dec
(bad)
jge
test
stc
fmul
leave
ins
mov
xchg
or
cmp
cmp
rcl
pop
cmp
add
enter
mov
out
mov
test
pop
cmp
mov
push
aad
mov
pop
mov
sti
push
sub
mov
arpl
push
xor
pop
ss
js
sub
mov
fisub
or
cmp
cmp
daa
mov
sub
cmp
inc
fdivr
imul
or
ds
jl
(bad)
gs
mov
or
test
jns
ins
out
xchg
icebp
jle
cmc
ss
call
and
cmp
add
sbb
out
push
aas
sbb
ja
mov
popa
cmps
mov
int
mov
inc
out
ror
pusha
sub
fwait
popa
lds
inc
ds
mov
adc
cdq
sbb
or
jae
mov
add
xor
loop
mov
jmp
out
movs
push
scas
movs
jo
pusha
out
push
enter
repz
cmp
jae
jecxz
aas
adc
shl
or
push
aad
outs
leave
push
sub
push
xor
mov
inc
cmp
inc
cmp
jecxz
int
add
popf
jge
xor
pop
and
cmp
rcr
cs
mov
test
dec
xor
push
pop
out
shr
sbb
mov
into
stc
repnz
data16
(bad)
xchg
dec
call
arpl
pop
mov
inc
je
(bad)
ins
jmp
mov
ror
aad
sbb
pop
mov
jno
mov
addr16
mov
jo
das
xchg
jnp
pop
xor
das
rol
mov
cdq
pop
fnstcw
fisttp
movs
into
rcr
loope
or
adc
push
mov
xchg
xchg
in
mov
daa
shr
dec
sbb
sub
imul
cmp
add
popa
xor
out
mov
(bad)
jg
ins
and
ins
jae
out
pop
mov
cld
fwait
lock
xchg
fsubr
in
loope
xor
jmp
fwait
sar
in
mov
(bad)
or
push
cmp
xor
hlt
jg
inc
mov
lock
mov
repz
lods
js
inc
cmp
xor
jmp
sbb
or
out
sub
add
jbe
jecxz
cbw
les
mov
cwde
sbb
lahf
jb
imul
or
test
mov
loope
or
je
pop
push
fwait
push
sub
popf
xor
and
(bad)
stos
jg
(bad)
pop
sub
dec
out
cmps
mov
lock
and
xor
retf
add
mov
mov
xchg
dec
lahf
test
jg
lock
inc
mov
inc
test
mov
(bad)
adc
sbb
fistp
mov
dec
push
outs
hlt
mov
xchg
ror
and
cmp
out
mov
ret
out
scas
mov
loop
xchg
dec
fwait
add
mov
aam
or
pop
(bad)
xor
fcmovb
cwde
add
mov
push
test
(bad)
je
jp
or
mov
scas
xlat
and
push
xor
push
popf
cs
xchg
mov
sahf
fisub
icebp
push
jl
cld
repnz
fwait
mov
dec
mov
cmps
fs
pop
nop
fwait
out
pop
lods
dec
(bad)
mov
xchg
xor
imul
fcomp
idiv
inc
sbb
daa
hlt
(bad)
test
retf
cmp
aam
xor
(bad)
push
pop
inc
mov
dec
or
sbb
and
gs
sub
jmp
lea
in
repz
xor
mov
jns
push
push
rcl
cmps
sti
sbb
cmp
jg
jne
jmp
loope
add
add
jb
and
call
stos
push
jae
or
push
repnz
inc
std
add
imul
mov
xchg
and
mov
test
mov
scas
cmps
add
stos
add
mov
lods
fisub
stc
movs
retf
cmps
retf
mov
inc
xchg
out
xchg
(bad)
nop
cmp
push
or
and
jb
and
in
xor
stos
fisttp
fmul
loope
cmp
inc
inc
mov
and
mov
cld
dec
test
pop
jl
retf
test
push
pusha
pop
inc
std
arpl
jmp
push
sti
addr16
sbb
fdivr
test
enter
push
clc
push
xor
adc
jmp
inc
int
mov
aam
pop
repz
pop
xlat
pop
fidiv
mov
imul
(bad)
jle
cmp
add
jecxz
into
dec
push
inc
pop
cmp
mov
sbb
sub
ficomp
mov
enter
call
mov
test
fiadd
mov
pop
aas
ret
push
mov
in
(bad)
fcmovnb
mov
mov
repnz
outs
not
cmp
cmp
push
push
ss
mov
stc
cmp
xor
pop
cmp
add
push
(bad)
(bad)
adc
test
movs
(bad)
aas
mov
jne
or
mov
int
dec
push
outs
or
int
cmp
push
jo
push
in
jmp
iret
jb
or
xor
and
lods
addr16
adc
rcr
dec
arpl
in
jmp
out
cwde
and
pop
xchg
rol
test
out
sub
imul
mov
ret
retf
mov
and
cld
in
dec
(bad)
out
sahf
fisttp
xchg
ror
xchg
adc
xor
cmp
movs
sti
ror
jae
mov
mov
cmp
pop
mov
sbb
mov
sti
scas
out
clc
mov
cmp
xor
(bad)
dec
cmc
out
cmp
es
mov
pop
jae
pop
out
das
fadd
(bad)
(bad)
sub
mov
mov
jecxz
lds
dec
call
test
jbe
lds
gs
lahf
(bad)
adc
ficomp
add
(bad)
scas
add
shl
out
push
in
mov
inc
mov
mov
sub
test
inc
cmp
pop
or
loop
push
jmp
cmp
repnz
push
dec
mov
mov
mov
cmp
hlt
pop
sbb
pop
mov
ret
clc
mov
mov
jo
jl
(bad)
sahf
xchg
xchg
adc
adc
inc
cmp
pop
fist
push
je
inc
call
test
popa
xor
jmp
fcmove
pushf
xor
imul
mov
mov
sub
adc
je
mov
rcr
stos
jae
mov
lds
fadd
mov
push
enter
pop
mov
ja
push
mov
imul
dec
xchg
fcomp
popa
aam
scas
mov
xor
std
bound
rol
pop
push
imul
cmp
dec
jns
mov
es
inc
and
inc
ror
scas
xor
and
push
jle
dec
inc
mov
repnz
jne
leave
adc
cli
pop
xchg
pop
into
inc
jle
inc
and
neg
sahf
and
cmps
xor
dec
pop
sbb
and
inc
not
(bad)
dec
fwait
sub
adc
sub
push
or
mov
in
idiv
cmp
pushf
or
mov
(bad)
in
adc
int
enter
out
aam
lods
mov
dec
sbb
mov
adc
sti
fsub
mov
dec
sbb
mov
call
int
pop
int3
pop
in
cmp
sbb
leave
shl
sbb
pop
sub
arpl
xchg
pop
leave
loopne
int
inc
adc
loop
mov
ret
retf
in
pop
sbb
mov
and
lods
mov
call
mov
leave
scas
sub
nop
in
inc
imul
mov
cmps
xchg
mov
adc
call
lods
xor
test
retf
jae
inc
xor
and
out
mov
in
inc
and
jmp
stos
(bad)
int
cmp
pop
fisttp
into
adc
ret
cmps
test
fxtract
iret
nop
xor
and
dec
iret
out
adc
adc
mov
(bad)
sub
mov
pop
outs
mov
out
call
add
fstp
dec
mov
mov
push
and
or
jae
shl
bound
mov
out
push
ret
mov
cmp
jmp
jmp
in
and
addr16
sbb
push
push
mov
sub
test
popf
dec
lods
pop
jae
fistp
mov
xchg
stos
mov
imul
cmp
xchg
retf
lods
in
xchg
scas
cmps
out
retf
movs
call
add
inc
inc
push
sbb
mov
inc
into
icebp
cmp
cmp
mov
lods
fwait
shl
fdecstp
movs
stos
add
int
ss
xchg
mov
and
or
sub
popf
or
dec
std
or
repz
inc
in
lods
cmp
cmps
xor
in
(bad)
mov
push
scas
sbb
data16
arpl
or
adc
rcr
sbb
inc
cmp
ins
adc
dec
mov
add
jmp
dec
adc
sub
cmp
mov
loopne
es
movs
jp
(bad)
sti
js
mov
outs
pop
pop
nop
or
test
dec
or
pop
mov
std
inc
mov
pop
add
hlt
ret
sub
ffreep
cmp
cmp
scas
jno
or
or
push
in
jl
dec
fcom
inc
adc
js
sbb
xchg
fisttp
jecxz
(bad)
jl
ins
mov
pop
cdq
leave
(bad)
push
cmp
daa
and
fwait
xchg
aam
aas
mov
push
xchg
enter
into
push
inc
shr
and
mov
sbb
push
push
shl
arpl
lock
fbld
jecxz
xor
adc
test
ja
gs
mov
mov
cmp
cs
dec
xchg
mov
in
lds
dec
xor
(bad)
lahf
pop
mov
cmps
aaa
cdq
push
xchg
ret
add
mov
or
xor
shr
in
pop
iret
inc
jle
clc
mov
fld
push
add
sub
in
(bad)
sub
mov
pop
outs
std
add
fisubr
mov
and
in
ror
mov
sub
je
cmp
push
stos
dec
inc
fcomp
or
cmp
lock
push
adc
arpl
test
cmps
out
call
paddsb
gs
imul
or
and
sbb
(bad)
movs
pop
icebp
addr16
enter
icebp
pop
sub
jae
sub
dec
sahf
add
out
in
or
in
retf
mov
cdq
adc
in
in
and
mov
call
cmp
mov
jmp
and
sub
add
add
adc
cdq
jbe
imul
or
movs
xchg
mov
les
test
in
jae
mov
sub
enter
mov
sub
fild
shl
adc
xor
mov
inc
add
repnz
jnp
pop
lds
les
or
mov
xchg
fidiv
pop
pop
(bad)
and
or
pop
xchg
outs
mul
scas
(bad)
xor
and
xchg
ret
mov
xchg
add
add
xchg
jae
cs
xchg
fs
lea
bound
jg
ins
ins
movs
inc
ins
aaa
call
aaa
adc
sub
movs
leave
or
nop
push
mov
mov
or
ret
pop
outs
ins
xor
inc
xchg
or
jp
xor
push
cmc
aaa
bound
ja
add
fadd
in
mov
mov
inc
clc
and
dec
out
or
jns
jnp
push
and
cmp
rol
dec
dec
pusha
leave
pop
nop
mov
call
sub
push
xor
outs
repnz
jmp
or
iret
mov
cdq
push
data16
loope
inc
inc
aaa
mov
stos
sub
inc
out
das
(bad)
nop
xchg
rcr
adc
fucomp
or
jbe
xchg
rcr
mov
adc
add
out
(bad)
ins
je
push
add
adc
imul
mov
in
ror
add
(bad)
ret
fs
adc
out
iret
mov
imul
enter
mov
mov
clc
cmps
and
mov
jg
sub
xchg
mov
cmp
sub
movs
or
cmc
mov
pop
cmp
loopne
out
icebp
jo
popf
scas
sbb
sub
(bad)
cld
shl
sub
outs
ret
or
popf
add
push
mov
ds
and
pop
pop
add
push
inc
mov
cdq
or
xchg
imul
cmp
xor
(bad)
pop
ss
xor
push
jo
cmp
mov
xchg
mov
and
dec
sub
adc
sahf
dec
cmps
je
inc
retf
mov
lock
lods
push
scas
in
cdq
sub
loopne
mov
and
shl
aam
rol
jp
call
(bad)
in
cmp
inc
mov
cwde
inc
jae
or
cmc
in
in
out
mov
out
and
xacquire
and
loopne
(bad)
daa
rcl
mov
int3
fcomi
fs
out
and
popf
rol
cli
popf
inc
stos
cmp
cld
or
stc
dec
jl
imul
xor
dec
mov
xchg
mov
out
pop
sbb
dec
mov
inc
mov
(bad)
lea
fwait
popf
xchg
xchg
ins
(bad)
and
xchg
xor
inc
mov
xlat
mov
and
pushf
pushf
dec
or
sub
pop
cs
xor
mov
and
gs
div
ins
adc
and
push
add
daa
mov
push
out
cmp
adc
test
mov
and
test
mov
mov
das
xchg
rol
nop
jnp
inc
gs
in
sub
pop
inc
out
leave
out
cmp
push
jno
jge
pop
ja
clc
and
ja
adc
pop
lea
adc
inc
lock
test
lods
sbb
fbld
pop
jg
xor
and
xor
mov
pop
cmp
stos
pop
pop
push
pop
ficom
dec
lock
ds
xor
test
inc
inc
(bad)
jle
sub
adc
push
sar
or
dec
dec
jb
mov
and
mov
jl
and
bound
loop
fstp
gs
loopne
mov
push
mov
out
mov
xchg
push
(bad)
in
jne
idiv
add
or
jno
in
jecxz
adc
adc
add
fidivr
cmovne
cwde
aaa
cwde
das
js
xchg
push
sub
retf
jno
and
or
push
pop
jl
aas
mov
aad
xor
shl
stc
xor
xchg
fs
pop
or
mov
adc
xor
push
inc
(bad)
retf
push
fwait
shl
call
pop
into
lds
cmc
jl
ret
scas
mov
or
cmp
cmp
rol
jp
js
stos
pop
push
inc
ret
cli
fisubr
mov
loop
add
pop
(bad)
outs
dec
push
xchg
shl
and
int
mov
sbb
movs
or
(bad)
xor
inc
rol
icebp
adc
xor
dec
sahf
xchg
xor
pop
sub
or
pop
and
enter
mul
jb
jne
bnd
mov
jb
(bad)
ret
pop
mov
mov
inc
jmp
retf
mov
mov
in
mov
fdiv
leave
enter
sbb
mov
cmp
inc
std
inc
push
mov
hlt
jo
mov
adc
cmp
nop
or
mov
ins
cmp
cmps
add
into
test
dec
xlat
scas
sub
lds
out
mov
retf
xchg
test
mov
push
mov
movs
call
test
fist
(bad)
xor
xor
jg
adc
and
mov
cdq
dec
mov
xchg
jb
bound
out
mov
or
fucom
in
and
adc
inc
popf
(bad)
fucomp
aas
cld
mov
imul
dec
imul
mov
xor
xchg
dec
mov
cmp
cmp
sti
sbb
dec
pop
push
aas
jb
rcl
pop
cdq
rcr
adc
mov
addr16
pop
jecxz
dec
xlat
mov
shr
test
cdq
fs
jecxz
cmp
shl
in
jb
pop
sar
cmp
fsubp
add
xor
sti
fld
nop
dec
popa
mov
lea
jno
shl
inc
or
test
jmp
mov
or
imul
or
fisttp
and
jle
sbb
pop
test
test
mov
xchg
mov
icebp
ss
dec
or
push
ret
jb
jae
out
inc
out
pop
(bad)
sub
sub
inc
jns
outs
add
xchg
mov
jnp
inc
or
dec
adc
mov
inc
jae
push
jmp
cmps
fcmovne
mov
xchg
popf
dec
and
inc
cmps
int3
xor
leave
(bad)
and
leave
mov
jmp
sbb
pop
push
mov
ficomp
mov
push
and
or
and
xchg
mov
into
mov
xlat
or
pop
dec
and
unpcklps
xor
call
cdq
push
stc
lea
sbb
fisttp
dec
test
sbb
daa
sub
movs
aas
cmc
in
xchg
test
cmps
rol
inc
test
mov
inc
in
std
fcom
stc
jg
cmp
movs
call
ja
aaa
dec
or
push
aas
arpl
adc
push
sub
mov
gs
sub
sti
xchg
jmp
push
dec
pop
arpl
or
out
addr16
cmp
mov
mov
add
test
inc
(bad)
mov
push
sub
xchg
into
or
xchg
xchg
inc
mov
add
in
gs
jmp
mov
dec
dec
(bad)
or
and
fdivr
mov
repnz
shl
pop
lods
cmp
dec
aaa
fsub
pmullw
dec
out
jle
cdq
pop
xor
test
div
cs
mov
or
jmp
ins
mov
dec
adc
invd
js
or
dec
lods
add
mov
sub
and
cmps
out
mov
cmp
or
repnz
xchg
push
fbstp
fstp
leave
jae
stos
or
add
and
loopne
lea
shl
jmp
rcl
push
sbb
sbb
fild
imul
jbe
(bad)
out
mov
stc
dec
imul
xchg
jae
rcr
push
js
call
jg
cmp
cmp
push
xchg
fld
push
scas
mov
jne
scas
pusha
pop
scas
popa
and
test
retf
mov
xor
push
rcl
mov
aas
sub
xchg
adc
fcomip
cmps
xor
imul
inc
dec
and
psubw
mov
dec
fsin
sub
pop
xor
jle
imul
xchg
xchg
arpl
mov
lods
cmps
mov
mov
imul
ss
jne
dec
cmp
stc
data16
pop
imul
pop
mov
push
loop
cmp
pop
nop
and
stos
ds
int3
inc
push
add
ds
push
inc
jge
dec
pop
test
loop
enter
cmps
xchg
test
mov
shl
fsubp
ja
push
jmp
push
movs
cld
arpl
cmp
xor
xlat
cmp
xchg
push
repnz
adc
mov
retf
mov
in
ins
push
sub
sbb
js
sub
pop
cmp
into
pop
push
and
rcr
cmp
pop
movs
pop
clc
mov
xlat
es
adc
push
pop
jmp
xchg
mov
std
call
jbe
mov
arpl
cmp
push
ret
and
cmp
pop
data16
mov
dec
mov
push
mov
icebp
out
gs
fcomip
and
and
cmps
test
adc
addr16
adc
add
int3
ins
rcr
adc
daa
icebp
ss
ins
mov
inc
add
pusha
fisub
push
adc
jns
pop
jmp
repnz
mov
mov
adc
outs
call
(bad)
xchg
cmc
push
and
dec
push
adc
and
mov
bound
(bad)
jp
cli
or
fld
jecxz
inc
cs
push
cmp
cdq
loopne
push
int
adc
popa
mov
ud1
cli
or
(bad)
and
xor
sbb
jns
pop
enter
iret
jmp
xchg
mov
push
jmp
mov
or
cmp
push
cmp
and
xor
jno
shl
adc
leave
mov
dec
and
mov
jmp
das
add
cmp
dec
ret
mov
(bad)
loop
iret
mov
and
stos
out
out
xchg
mov
lods
in
sbb
in
ds
push
inc
mov
imul
rcr
aaa
mov
push
clc
test
imul
mov
call
mov
outs
std
inc
cmc
inc
or
mov
add
sbb
lods
mov
ret
jg
mov
xor
pusha
and
push
fsubr
out
fadd
jno
push
sub
add
adc
dec
ds
sahf
sub
sub
sub
mov
in
test
sub
and
enter
mov
mov
mov
inc
pushf
test
sub
jle
int3
or
lock
mov
scas
mov
mov
aaa
push
inc
stc
mov
or
fild
cmc
movs
movs
inc
and
fistp
jmp
jnp
xchg
mov
inc
sub
(bad)
adc
sub
out
mov
call
outs
out
inc
inc
shl
loope
dec
fmul
push
adc
xchg
fiadd
mov
(bad)
mov
sub
es
dec
push
xchg
push
xchg
aad
or
sub
stos
or
test
fwait
push
or
iret
cmp
jl
dec
cmp
sub
mov
(bad)
or
add
pop
dec
push
cmp
add
and
jecxz
movs
pop
add
out
test
movs
stc
push
xchg
xor
xor
sub
lahf
retf
add
test
popf
ror
and
sbb
cmp
xchg
sub
in
adc
or
lods
inc
cwde
ret
shl
pop
cmp
sahf
sbb
sbb
push
push
data16
ds
push
and
and
mov
and
cmps
jns
mov
push
sbb
xlat
call
fmul
jns
loope
add
push
sbb
fucom
sbb
pop
inc
lods
adc
xor
inc
mov
sahf
sub
loop
adc
push
jno
pusha
adc
inc
inc
sbb
pop
out
in
pop
jae
sbb
push
mov
and
xchg
test
jp
cmc
idiv
jp
mov
xchg
or
aam
jg
inc
repz
and
cs
sub
xor
pop
sti
in
jmp
sbb
ret
cmp
pop
sbb
lahf
test
sbb
push
add
addr16
dec
outs
mov
fcmovnbe
sti
mov
pusha
call
mov
cli
fild
int3
bound
in
inc
mov
mov
adc
mov
sub
inc
int3
ror
mov
sub
popf
push
shl
pop
xor
sub
test
data16
and
push
jge
push
cdq
adc
pop
add
sub
add
fstp
mov
mov
enter
cmp
inc
add
xor
retf
(bad)
out
inc
jno
shr
adc
inc
dec
jbe
loop
pop
dec
ret
pop
pushf
hlt
(bad)
lahf
cmp
adc
gs
cmp
scas
xor
add
adc
cmp
cdq
jno
int3
test
inc
popf
mov
push
sbb
gs
ret
xchg
test
sub
iret
sub
mov
repz
dec
outs
fwait
in
and
add
mov
add
sbb
push
and
xor
or
pusha
mov
push
(bad)
xor
ja
enter
inc
sub
addr16
dec
add
mov
fwait
xchg
xchg
addr16
addr16
inc
xor
xchg
or
xor
add
cwde
cdq
or
jno
xchg
sbb
inc
loope
jae
xor
sbb
movs
or
daa
sub
mov
sbb
(bad)
loope
test
lods
mov
mov
adc
mov
xchg
int
lods
cdq
lock
xlat
imul
imul
shl
sbb
mov
jbe
mov
xchg
in
lods
mov
mov
mov
mov
js
xchg
int3
pop
and
ins
pushf
test
loope
add
test
fiadd
pushf
xor
bound
mov
adc
stc
inc
lea
std
cld
xchg
and
scas
pop
fimul
aaa
outs
rcr
sti
and
repnz
xor
jae
push
popa
das
pop
stc
loop
in
mov
push
xlat
and
mov
pop
ficom
test
sub
jecxz
sbb
arpl
rcr
out
das
call
push
out
dec
dec
dec
sub
dec
clts
push
scas
jb
xor
stc
mov
(bad)
sub
cld
mov
cli
leave
mov
out
lock
pop
sar
inc
jae
jne
mov
adc
mov
xchg
push
mov
xor
jmp
inc
fwait
pop
mov
sbb
pop
aaa
xlat
stc
ja
jp
push
ret
out
pop
out
in
cmp
popa
sbb
sub
popa
jecxz
cli
pop
enter
jae
dec
mov
push
sub
in
pop
or
mov
xchg
pop
cmp
cmp
sbb
arpl
retf
mov
xchg
rcl
xor
cli
cmp
jmp
jno
or
sub
cdq
inc
int3
mov
in
push
pop
int
rsm
sub
retf
push
out
cli
mov
add
jl
jle
xor
adc
retf
pop
or
pop
jmp
test
sbb
sbb
adc
ins
int3
cdq
jle
loope
lea
fdivr
xchg
lock
fldenv
ss
in
pop
sbb
outs
mov
dec
lahf
scas
cmp
inc
std
dec
jno
add
add
xchg
jecxz
outs
jbe
dec
push
and
sbb
(bad)
push
mov
movs
in
inc
cmc
mov
pusha
mov
add
xlat
push
mov
lods
dec
pop
pusha
out
(bad)
xchg
sub
and
cdq
cmp
cmp
(bad)
xor
ror
cmp
(bad)
jmp
je
xchg
ret
add
jbe
push
mov
mov
xchg
sbb
lods
scas
push
hlt
je
mov
rcr
or
(bad)
ror
hlt
pop
sub
int
lahf
xor
jmp
push
fild
mov
mov
ret
in
lods
push
or
fsub
imul
add
xchg
and
call
sbb
cmp
mov
pop
or
sbb
into
jecxz
mov
xor
cmp
fist
push
(bad)
cmp
fild
test
jmp
lea
pop
inc
mov
inc
mov
gs
pop
je
icebp
mov
and
mov
xchg
sub
sbb
test
adc
jp
push
imul
and
dec
call
cmps
or
mov
ds
test
je
pop
es
xor
test
or
fcomp
or
int3
inc
fisttp
and
xor
adc
pop
or
hlt
aaa
test
out
ins
push
movs
inc
jb
cmp
dec
jmp
aam
mov
repnz
scas
mov
adc
mov
xchg
add
out
inc
mov
jp
ss
scas
xchg
inc
bound
xor
rcr
test
push
push
imul
ror
cmp
xor
jg
inc
push
push
adc
call
int
in
pop
pop
inc
jg
mov
push
pop
and
mov
cwde
mov
xor
push
mov
scas
cmp
rcr
test
retf
(bad)
add
inc
out
in
stc
adc
adc
jle
or
scas
loop
jmp
push
push
stos
push
mov
(bad)
ins
push
(bad)
call
xchg
std
jne
adc
push
mov
ds
add
jo
(bad)
mov
ret
push
jl
and
mov
loope
sbb
cmc
sub
in
push
stos
or
clc
mov
popa
or
daa
icebp
mov
retf
cmp
mov
xchg
int
loope
adc
xchg
loopne
jle
call
ds
ja
mov
retf
sar
push
mov
mov
mov
push
gs
rcr
add
jne
out
mov
movs
xchg
neg
loop
leave
add
mov
pop
or
jge
push
lahf
or
adc
fst
cmp
xchg
mov
inc
fidiv
add
sbb
daa
mov
call
sbb
add
sub
add
aad
and
sar
aaa
add
xor
mov
and
sub
xchg
sar
pop
xor
jnp
xchg
dec
sbb
out
cmps
arpl
icebp
xchg
dec
ds
and
dec
or
jae
mov
dec
jno
and
lds
mov
sbb
enter
icebp
fsubr
frstor
jo
dec
repz
repnz
test
loopne
int3
out
or
outs
and
or
movs
ja
shl
test
fdivr
and
shr
xchg
out
push
jns
jle
retf
push
push
xor
add
nop
xchg
test
pop
xchg
add
mov
cwde
push
cmp
jae
imul
adc
popa
sbb
(bad)
lea
test
mov
mov
cmp
and
ror
movs
out
popa
sbb
cmps
(bad)
pop
jecxz
call
sub
pop
or
jae
fwait
in
xchg
push
jg
sub
dec
push
aad
sar
xchg
retf
mov
cdq
xchg
pop
stc
in
js
sbb
jns
xor
loopne
ret
mov
pop
xor
lock
or
out
pop
icebp
(bad)
cmc
stos
xor
outs
cs
cmp
retf
imul
jbe
mov
push
cmp
add
inc
push
arpl
xchg
mov
or
jmp
xchg
cmp
in
fidiv
mov
and
mov
sub
movs
popf
jp
(bad)
dec
mov
pop
mov
sar
daa
mov
daa
sbb
jmp
mov
cmp
add
mov
popa
push
jae
popa
or
xor
sub
or
xchg
test
push
push
and
aaa
mov
lock
sub
or
mov
in
push
aad
pusha
iret
pop
stos
mov
mov
xor
jmp
in
ins
inc
shr
scas
pusha
out
push
cmps
add
xlat
add
scas
shl
in
mov
ret
mov
int3
push
xor
add
xor
adc
lods
bound
adc
sbb
sbb
and
sub
(bad)
and
sbb
ror
cmps
mov
or
cwde
or
add
popf
imul
ins
sub
mov
clc
sbb
jle
xor
push
push
dec
cmp
aaa
adc
imul
lock
std
arpl
inc
dec
jbe
add
cmc
das
mov
pop
(bad)
icebp
adc
ret
loopne
adc
shl
add
loop
ins
jne
xchg
pop
adc
das
pop
lods
mov
pop
enter
aad
inc
push
stc
add
data16
cmp
ins
fimul
jg
adc
pop
cmp
mov
shr
(bad)
add
lock
je
fdiv
outs
pushf
scas
pushf
dec
lods
cmp
fimul
pop
and
inc
arpl
(bad)
call
xor
and
xor
xor
mov
scas
mov
jb
sbb
jno
popa
lea
bound
dec
dec
out
pusha
mov
ret
sbb
sub
cwde
rol
sub
cmc
fisubr
jmp
arpl
aad
inc
cmp
test
xor
sbb
(bad)
shr
into
xor
sbb
dec
lods
test
repnz
cmps
xchg
jbe
cs
push
adc
fsub
popa
xor
shr
add
xchg
lock
push
adc
mov
rol
cmc
scas
pop
loop
and
sub
or
fs
pop
adc
jne
cmp
xor
pop
fwait
dec
jp
imul
sbb
mov
dec
push
popa
test
mov
mov
ins
dec
xchg
imul
clc
push
ds
and
add
jbe
test
bound
adc
mov
ins
aaa
lods
jmp
cmp
add
cmp
call
mov
fnstsw
adc
lock
scas
stos
movs
aad
xor
(bad)
push
sbb
dec
in
aas
mul
cli
pop
loopne
mov
mov
sbb
add
jno
or
or
cmp
sub
cmp
jo
fisub
cld
xchg
add
xchg
not
cmp
push
leave
xchg
pop
lahf
das
cli
inc
(bad)
mov
fdivr
shl
movs
dec
push
sbb
mov
mov
cmp
xor
daa
dec
sub
call
outs
mov
jge
arpl
adc
in
mov
call
or
rcl
call
xchg
repz
jecxz
push
cmp
outs
loop
sahf
sbb
mul
pop
and
cmps
mov
jne
cs
jle
test
mov
ja
repz
fstp
dec
(bad)
fwait
maskmovq
not
in
adc
aad
hlt
ins
(bad)
mov
or
movs
retf
add
out
fs
lahf
add
sub
test
push
jo
sub
or
cmps
fdivp
mov
pushw
retf
pop
mov
jae
aaa
sbb
cmp
and
arpl
loop
das
ret
mov
sti
push
cmp
adc
hlt
mov
cmp
and
je
jl
rcl
sbb
sub
mov
or
bound
add
inc
or
ss
xchg
xlat
stc
xchg
sub
dec
xlat
test
pop
xor
and
test
repz
out
mov
sbb
dec
cmp
in
lods
xor
dec
pop
push
mov
nop
push
push
(bad)
dec
bound
in
jmp
test
cld
(bad)
and
ret
ror
pop
test
jns
ficomp
dec
fild
stc
add
(bad)
cli
ret
test
ret
dec
sub
fs
sbb
adc
adc
xchg
pusha
enter
mul
mov
enter
icebp
test
mov
cmps
mov
daa
push
push
test
xchg
cmp
fisttp
out
adc
dec
pop
add
adc
cld
sub
mov
call
mov
test
rcr
inc
inc
dec
inc
mov
(bad)
loopne
jns
cmp
or
loopne
rcl
(bad)
js
add
sub
xor
enter
int
cmp
stc
jae
arpl
fstp
(bad)
adc
ss
mov
imul
add
jo
xchg
inc
in
cmp
fstp
fisubr
scas
ret
jle
dec
mov
dec
push
jg
scas
repz
pop
jbe
mov
inc
inc
cli
into
jae
adc
retf
adc
xchg
loope
push
repz
outs
movs
cmp
mov
xor
clc
jge
clc
mov
sbb
xchg
nop
mov
enter
adc
xor
enter
mov
xchg
xchg
jge
outs
test
enter
sub
cmps
sbb
or
push
jmp
lods
outs
jg
cmp
sub
push
sbb
jl
add
adc
adc
popf
test
(bad)
out
add
stos
gs
cwde
call
sar
(bad)
loopne
cmp
and
and
push
xor
jmp
popf
in
and
popf
xchg
and
dec
mov
mov
fcom
call
clc
test
mov
ins
fbld
fdivr
enter
repnz
dec
mov
sbb
xor
lods
xchg
inc
cmp
stc
test
out
add
fdiv
inc
jge
jbe
cmp
and
xor
enter
xor
mov
lods
inc
xor
call
retf
and
push
outs
inc
jno
movs
mov
cmp
ja
retf
shl
xchg
mov
jbe
sub
mov
xor
ret
jmp
xor
dec
in
aad
out
es
js
cmps
push
jns
gs
mov
pop
jb
sub
call
xchg
push
inc
ret
jecxz
mov
sub
mov
call
mov
pop
mov
pusha
cmp
ds
imul
dec
mov
movs
xchg
xor
mov
dec
or
das
xor
cmp
enter
movs
bound
call
and
stos
cmp
test
addr16
loopne
in
xchg
ret
xchg
(bad)
mov
mov
jo
xor
out
dec
fidivr
sub
ds
retf
add
shl
or
daa
sbb
loopne
xchg
aas
test
push
pop
sahf
dec
xchg
jb
mov
rol
or
out
sbb
movs
jecxz
loopne
mov
mov
aam
addr16
arpl
dec
retf
dec
into
mov
adc
mov
enter
in
call
jno
popa
dec
call
sbb
jle
rol
or
fstp
or
add
mov
push
enter
inc
inc
int3
les
fiadd
int3
call
inc
cmp
dec
xchg
shl
inc
loopne
or
leave
int
leave
mov
sbb
lods
push
xchg
loopne
and
xor
mov
jmp
out
repz
xor
retf
xchg
xchg
sub
popf
push
jnp
jmp
cmp
(bad)
push
pop
sub
or
sar
out
rcr
imul
dec
outs
test
mov
repz
dec
fisttp
dec
dec
in
sbb
lods
xchg
in
mov
push
or
xchg
push
add
clc
lods
pop
mov
ja
inc
data16
loop
out
ret
sahf
adc
xchg
out
mov
pop
scas
out
and
sub
pop
mov
xchg
fisubr
repz
jae
mov
aas
adc
(bad)
cmp
test
es
repnz
jle
hlt
popa
test
bound
out
pop
pushf
mov
test
mov
retf
mov
stos
dec
cmp
mov
or
xchg
add
push
mov
icebp
and
xor
dec
mov
inc
leave
cmc
mov
push
xor
adc
mov
inc
fmul
adc
pop
sbb
xchg
pop
xchg
dec
(bad)
sbb
mov
mov
push
inc
push
jae
pusha
sbb
mov
push
and
sbb
mov
mov
mov
pop
xchg
cvttps2pi
rcr
push
add
mov
xor
cmp
int3
imul
xor
popa
mov
add
addr16
jmp
mov
xchg
jp
push
pop
fist
xchg
popa
mov
xchg
call
or
jne
fldenv
xchg
call
aad
or
fldenv
scas
pop
sbb
pusha
add
lods
jno
ins
xchg
ds
(bad)
cmps
cmps
sub
scas
aas
cwde
cmp
jge
or
sbb
loopne
stc
cmps
or
add
(bad)
mov
imul
out
jne
(bad)
cmp
int3
pop
aam
in
or
add
or
xor
cmps
push
xchg
cmp
or
daa
add
jb
cmp
jo
jmp
sub
push
or
push
ja
mov
cdq
jp
loopne
push
(bad)
mov
inc
xchg
les
out
push
mov
imul
cmp
shl
iret
cs
retf
in
jmp
cmps
mov
stos
mov
fimul
mov
retf
test
adc
adc
adc
sub
sub
lahf
xor
sahf
out
sahf
es
stos
mov
push
cmps
ds
push
out
es
inc
sti
lock
push
xor
push
dec
cmp
xchg
in
mov
dec
or
mov
inc
in
xchg
adc
aam
cld
add
sbb
lods
pop
push
jmp
cmp
sti
rcl
cmp
inc
(bad)
cmp
dec
cdq
scas
pop
cmps
dec
iret
dec
addr16
movs
repz
jbe
mov
xchg
jbe
pop
jge
mov
push
hlt
inc
cmp
lock
in
sar
loope
es
movs
mov
int
leave
dec
test
cmp
push
sahf
call
inc
fwait
dec
inc
nop
nop
nop
adc
xor
push
cld
inc
mov
adc
xor
div
xor
ret
arpl
es
in
sbb
sub
mov
aam
stos
jmp
xchg
lock
and
imul
xor
pop
(bad)
jns
(bad)
mov
idiv
loope
pop
cmps
lods
mov
(bad)
hlt
push
mov
(bad)
icebp
adc
test
dec
mov
mov
jge
cmps
xor
xchg
xchg
rol
jmp
loopne
imul
sbb
stos
jmp
mov
popf
call
cld
in
adc
(bad)
and
(bad)
dec
mov
jnp
fmul
jbe
in
jno
jb
leave
inc
popf
retf
sar
into
xor
lods
call
xchg
push
xchg
in
or
outs
mov
mov
push
pop
jle
pop
add
mov
gs
sar
mov
cmp
add
sub
daa
push
cdq
sbb
xlat
mov
rcl
inc
xor
mov
jmp
retf
jg
arpl
mov
push
pusha
cs
mov
push
movs
in
js
int3
jmp
mov
lahf
sbb
sbb
and
and
push
hlt
call
(bad)
jne
fdivr
and
test
out
mov
test
push
fcmove
cmc
mov
movs
movs
lahf
(bad)
repz
jecxz
jg
leave
lods
retf
idiv
xchg
repnz
sahf
in
cs
sbb
mov
call
push
test
push
mov
mov
clc
lea
pop
pop
fisttp
int3
or
sbb
inc
(bad)
xchg
mov
idiv
jae
fidivr
ret
shl
inc
jle
div
cmp
sub
and
add
mov
cmp
cmp
shl
and
cwde
shl
jo
jecxz
xchg
xchg
sbb
cmp
ja
loope
pop
jecxz
into
add
mov
stc
add
out
or
ss
gs
test
pop
addr16
lea
push
addr16
push
jge
mov
xchg
sub
jbe
xor
aam
dec
scas
jbe
jecxz
push
or
in
(bad)
lods
aam
cmp
mov
into
dec
mov
fnstenv
or
es
push
cmp
jg
(bad)
enter
aaa
aas
loopne
mov
ins
imul
cmp
cmp
mov
fimul
(bad)
neg
mov
push
xor
mov
aam
cmp
push
pop
cmp
dec
xchg
scas
fldcw
and
inc
push
cmps
retf
or
ins
cmp
scas
dec
fisub
inc
mov
lods
aad
xchg
dec
cmc
ss
dec
fsub
test
pop
fcmovbe
shl
xor
shl
adc
dec
inc
push
jp
(bad)
pop
sbb
pop
mov
mov
ficom
leave
(bad)
call
dec
stc
ret
aam
adc
cmp
lods
and
or
imul
dec
push
sub
mov
pop
push
hlt
loopne
push
pop
mov
add
enter
ret
mov
call
xlat
idiv
cmc
mov
jl
or
lahf
dec
in
cmp
add
arpl
aaa
es
retf
dec
inc
push
xchg
sbb
jl
mov
inc
mov
fmul
data16
and
push
lds
mov
lods
jae
jnp
pop
xor
idiv
popf
mov
xor
or
shl
int3
cmp
xor
test
lods
sbb
neg
adc
neg
and
and
sbb
xchg
cmp
aad
ja
pmullw
into
cmp
xor
push
pop
dec
ins
div
push
nop
hlt
retf
or
sub
popf
int3
adc
int
xor
outs
sub
fistp
nop
call
addr16
push
ret
add
in
xchg
daa
cwde
out
call
retf
sub
aad
sub
adc
pop
xor
sub
ds
outs
test
shl
xchg
xchg
in
repz
aaa
adc
dec
pop
popa
mov
xor
loopne
jno
retf
jecxz
sub
sub
fisubr
loope
mov
inc
aaa
push
sbb
gs
mov
cdq
fcmovne
repnz
and
(bad)
movs
sub
rcl
mov
shl
sub
dec
test
sub
cmp
adc
jne
inc
in
xor
imul
and
cwde
cmp
mov
hlt
cmps
aad
inc
out
dec
int3
mov
js
shl
push
cmp
lds
push
stc
out
jno
fs
sbb
and
dec
push
xchg
mov
add
(bad)
jecxz
push
ins
arpl
adc
arpl
mov
dec
cdq
mov
scas
inc
popa
cwde
fistp
jo
add
xlat
call
movs
fdivr
aaa
movs
mov
cmp
pop
scas
adc
dec
pop
addr16
lods
xor
inc
pop
add
push
shr
xchg
les
mov
fisttp
mov
pusha
inc
test
or
push
imul
pop
add
mov
fs
test
pop
je
jmp
nop
ret
cld
push
dec
add
pop
push
dec
jno
xchg
test
sbb
mov
mov
mov
push
ror
icebp
outs
inc
adc
mov
mov
pop
je
jns
cld
ins
xchg
lds
data16
inc
inc
or
mov
aad
add
pop
push
out
test
les
pop
xor
xor
mov
cmp
push
sub
push
xlat
shl
mov
sbb
(bad)
enter
mov
sar
jp
push
scas
mov
in
and
push
cmc
jle
adc
pop
push
add
test
inc
jl
mov
push
mul
mov
cmp
push
push
outs
jmp
data16
lods
(bad)
jg
mov
repnz
pop
les
jbe
mov
jb
xor
lds
jp
pop
push
fstp
out
xchg
sub
(bad)
or
int3
lea
and
rcr
pop
pop
mov
xchg
pop
adc
xor
sub
mov
and
outs
push
fldln2
stos
(bad)
xlat
cmp
xor
sub
adc
push
add
mov
cwde
cdq
repnz
push
jge
jns
adc
and
xchg
push
and
popf
pop
movs
mov
test
fst
sbb
push
xchg
push
add
fimul
nop
sti
popa
ins
cdq
pop
nop
loopne
je
xchg
sbb
icebp
inc
dec
xchg
(bad)
pop
arpl
das
adc
or
xchg
dec
ds
push
test
data16
dec
push
fs
fcomp
mov
xor
fwait
mul
add
xchg
sub
jo
adc
or
push
pop
stos
aas
xchg
jmp
ret
(bad)
mov
es
pushf
adc
(bad)
jno
leave
retf
xchg
int3
xchg
or
rcr
lea
inc
fadd
and
xor
daa
pop
mov
mov
ret
cdq
pop
xchg
js
retf
sub
cmp
cdq
imul
mov
adc
and
cmc
adc
pop
xchg
jecxz
popf
sar
xchg
shufps
pop
(bad)
(bad)
aam
xchg
jl
dec
xchg
stc
cmp
fistp
jge
or
inc
stos
cli
bswap
call
xchg
xchg
push
or
outs
mov
xor
pop
mov
push
mov
pop
mov
push
xchg
dec
dec
mov
cs
stos
mov
push
mov
add
scas
sub
jmp
dec
jno
or
les
mov
jecxz
mov
aas
fisub
je
push
sub
inc
xchg
(bad)
push
ss
dec
ins
fdivr
fs
xor
push
sbb
in
jle
daa
sbb
and
loop
ret
(bad)
mov
pop
add
rcl
ss
mov
mov
and
movs
xor
xchg
fwait
addr16
mov
and
mov
mov
cmp
sub
mov
and
cld
xchg
cmp
xor
retf
stos
dec
ffreep
dec
inc
jecxz
je
stos
cmp
scas
sti
mov
or
cmp
rcl
push
cwde
sub
in
movs
jb
and
ficom
loop
aad
out
inc
mov
sti
inc
(bad)
mov
or
cmc
cs
dec
push
out
test
jmp
bound
mov
stc
mov
adc
push
sub
mov
xchg
dec
jae
jecxz
mov
fldenv
and
fimul
cmp
jl
or
pop
xchg
and
sti
cmc
movs
pop
add
sbb
sti
out
add
ins
dec
dec
and
add
jb
(bad)
in
cmps
xor
pop
imul
mov
add
(bad)
cmp
in
pop
xchg
aam
ret
mov
jmp
jp
xor
xchg
cli
jb
xor
cmp
jns
(bad)
fild
test
pop
rcr
sub
xchg
leave
sub
jnp
or
jge
ret
daa
cli
push
sub
(bad)
pop
adc
cmc
jmp
jnp
and
mov
mov
sbb
sbb
jbe
pop
call
mov
jecxz
sub
xchg
and
cli
cmps
in
cld
fadd
mov
cmp
mov
jae
xchg
or
jl
push
jno
(bad)
pop
pusha
stc
inc
cwde
lahf
cmp
sub
add
sbb
shr
outs
call
(bad)
pusha
add
repnz
std
pop
ins
and
xor
adc
pop
inc
into
fild
jmp
call
int3
dec
dec
cs
mov
pop
fisttp
or
cmp
sbb
iret
not
or
push
ficomp
mov
dec
dec
pop
jg
cld
stc
sub
movs
ret
out
sbb
mov
stos
sbb
mov
push
and
cdq
jge
leave
cmps
iret
push
mov
and
jb
cmp
mov
call
fcom
mov
adc
pusha
mov
inc
shr
test
test
addr16
push
xchg
fdivrp
mov
retf
(bad)
je
cmp
jmp
sar
dec
(bad)
xor
inc
int
jno
fist
cmp
sbb
iret
add
scas
cmp
jp
push
inc
mov
or
icebp
sub
dec
mov
sbb
and
jmp
mov
mov
cvtdq2ps
(bad)
lods
add
xchg
push
mov
rol
jbe
mov
cmp
lea
js
cdq
sub
pop
mov
fidiv
dec
shl
scas
adc
jecxz
jno
xor
std
and
mov
and
push
sbb
mov
sbb
daa
mov
sub
inc
(bad)
stos
mov
popa
xchg
shl
(bad)
cmp
push
shr
inc
jbe
pop
ret
cmc
jecxz
es
dec
loopne
or
mov
jg
jmp
aam
mov
push
push
xchg
in
pop
js
xchg
lods
and
xor
push
repnz
cdq
mov
or
mov
or
push
mov
(bad)
push
aaa
push
adc
sub
push
inc
cmp
(bad)
je
addr16
mov
or
int
shr
xchg
mov
jmp
lods
lock
call
sbb
icebp
and
jmp
pop
push
xchg
repz
jnp
nop
push
jno
push
xchg
stos
mov
xchg
in
cmp
jl
or
adc
push
inc
cmps
loop
retf
stos
mov
push
je
cmps
jle
cmp
mov
je
lods
adc
adc
inc
mov
loope
in
cli
aam
out
nop
js
enter
xor
add
pushf
xor
jmp
jno
bound
sub
xchg
std
sub
imul
xor
or
pusha
es
and
mov
shl
xor
std
nop
pop
mov
pop
stc
or
sbb
cdq
daa
fst
(bad)
mov
test
mov
and
adc
int
adc
shl
pop
ret
imul
popf
in
mov
ja
icebp
(bad)
dec
mov
cli
xor
adc
jl
or
dec
(bad)
shl
loopne
xor
dec
inc
fistp
retf
push
mov
(bad)
je
scas
or
mov
push
scas
jmp
into
mov
popf
mov
cmp
pusha
(bad)
pop
imul
test
mov
cmc
xchg
(bad)
sti
std
(bad)
aaa
xor
mov
rcr
out
or
ror
adc
ss
inc
push
je
clc
xor
in
xchg
or
and
fs
(bad)
fiadd
imul
movs
ret
sub
dec
mov
pop
xor
pop
add
and
fsqrt
sbb
fadd
repz
ret
cli
push
or
pop
xchg
cmp
sbb
and
push
mov
mov
clc
push
push
(bad)
dec
mov
mov
pop
into
icebp
imul
pop
int3
pop
cmps
fwait
pop
xor
ret
push
(bad)
jg
cmc
retf
push
push
xor
sub
mov
jge
cmps
retf
sahf
imul
dec
adc
in
push
mov
adc
sbb
popf
xor
fucomip
jl
dec
xor
(bad)
fdiv
cdq
mov
nop
sbb
jo
sti
rol
popf
xlat
pop
and
paddusb
sbb
loope
shr
outs
data16
into
dec
mov
mov
fwait
inc
rcl
fsubr
call
pop
push
mov
mov
loop
xchg
out
rol
stc
cmps
cmps
mov
jb
push
push
jns
push
popf
outs
adc
in
test
jbe
dec
add
push
ror
ret
jne
dec
call
sub
inc
mov
pushf
add
mov
retf
push
js
sub
xor
popf
arpl
mov
repz
mov
imul
dec
addr16
mov
outs
sub
loope
mov
sbb
lock
sar
mov
jl
ins
inc
mov
outs
inc
mov
je
sbb
fistp
xor
cdq
loop
in
push
pop
lods
xchg
sahf
dec
mov
push
xlat
push
outs
mov
fsubrp
in
cmp
adc
leave
mov
ds
push
xor
js
dec
enter
xchg
sbb
mov
cs
stos
cmp
repnz
pop
push
pop
and
into
hlt
lahf
ins
or
add
adc
fidivr
push
mov
adc
aaa
add
les
or
pushf
stos
inc
xor
clc
mov
pop
sub
mov
mov
in
sub
es
mov
fnstenv
aas
call
xchg
retf
or
loop
ins
imul
adc
jno
inc
adc
call
xor
dec
(bad)
retf
pop
pop
add
stos
dec
jns
mov
scas
movs
sub
push
xlat
mov
or
and
dec
movs
pop
xor
retf
fisttp
mov
std
loop
out
xchg
mov
mov
cmps
mov
cmp
aad
lods
outs
mov
xchg
lahf
or
and
mov
mov
shl
stos
loopne
mov
dec
ss
aam
cmp
xor
test
pushf
outs
ss
icebp
cmp
mov
add
inc
out
mov
sub
pop
xchg
cs
xchg
icebp
clc
inc
cmp
test
mov
lahf
out
pop
dec
outs
mov
stos
dec
pop
jno
ret
cwde
push
xor
and
add
dec
dec
mov
mov
inc
fldenv
mov
dec
or
aad
daa
idiv
jnp
xchg
pushf
push
cmp
jb
in
jnp
stos
fidiv
div
cmps
hlt
(bad)
lods
loope
mov
xor
adc
aam
pusha
enter
jb
cwde
test
mov
add
iret
jno
in
xor
lahf
test
cmp
call
inc
ja
sub
mov
mov
jae
ds
jo
imul
lea
outs
mov
jmp
arpl
add
xchg
stc
push
retf
xchg
mov
xor
cmp
(bad)
out
xor
sar
and
lock
inc
nop
mov
icebp
sub
mov
cmps
ficom
mov
mov
mov
xlat
inc
mul
stos
lock
loop
xor
mov
sbb
xor
mov
mov
cli
inc
or
jge
cmp
mov
in
sub
and
push
adc
int
lahf
ror
mov
jmp
xor
lea
mov
scas
shl
add
(bad)
push
out
icebp
add
imul
jae
cmps
sub
pusha
mov
scas
in
xchg
sbb
adc
sahf
retf
fdiv
xchg
jmp
inc
pop
out
sub
and
test
lock
jno
pop
sbb
addr16
pop
push
addr16
fdiv
scas
adc
push
ret
pop
pop
ds
repnz
repz
cmp
arpl
scas
jno
mov
cwde
sub
mov
loope
lahf
xor
inc
pop
loopne
shl
stc
dec
jno
aaa
xor
ficom
sbb
sbb
cmp
(bad)
pop
mov
adc
adc
or
mov
cmps
retf
sub
jmp
xlat
mov
mov
adc
int
icebp
mov
sub
xchg
mov
lods
mov
dec
icebp
call
dec
(bad)
das
test
xor
mov
rcr
das
sbb
inc
adc
mov
add
dec
ins
dec
adc
aad
and
cs
lea
pop
dec
fwait
mov
push
out
sti
push
or
inc
popa
jae
neg
adc
mov
jmp
test
and
(bad)
in
pop
stc
stos
cmp
jno
aaa
mov
pop
das
mov
gs
xor
scas
mov
aam
adc
xchg
inc
mov
mov
in
adc
pop
mov
adc
(bad)
(bad)
jge
test
ja
dec
cmp
xlat
cmp
and
(bad)
mov
ja
outs
add
adc
jns
inc
(bad)
jns
je
inc
jns
jne
lock
dec
and
and
shl
in
and
out
or
mov
out
mov
mov
xor
sbb
mov
mov
push
push
sub
and
mov
xchg
cli
js
adc
jmp
call
dec
(bad)
adc
es
adc
mov
pop
add
xchg
add
arpl
xchg
outs
lods
repz
mov
lahf
and
mov
xchg
ror
push
int3
pop
out
or
test
in
fiadd
jg
scas
pop
imul
or
(bad)
stc
lahf
ror
test
inc
popa
fst
add
mov
adc
cmp
sbb
pop
dec
out
sub
stos
pop
inc
js
sar
push
bound
pop
call
cdq
xor
push
fistp
aad
je
retf
cdq
fcmovu
lods
xchg
jmp
xor
aas
jmp
aas
test
cmp
sub
sub
sti
stc
pop
lock
cmps
and
jmp
or
mov
rcr
retf
sub
jle
dec
cli
test
jecxz
call
xchg
add
hlt
fcom
(bad)
xchg
retf
ret
mov
dec
stos
cmps
or
pop
jmp
fist
pop
bound
pop
pop
inc
xchg
mul
mov
in
xchg
and
clc
inc
cmp
mov
icebp
outs
outs
pop
rcr
arpl
(bad)
and
mov
les
sbb
or
sbb
fwait
sar
and
jbe
sti
jnp
lock
pop
pop
mov
daa
xchg
and
test
add
inc
push
int
xor
mov
sub
sbb
outs
or
add
pusha
(bad)
popa
inc
jns
fcmovu
outs
mov
inc
xchg
(bad)
jmp
mov
stc
popf
popf
mov
pop
push
xchg
and
mov
or
imul
inc
and
xor
cmc
add
mov
mov
pop
or
ins
(bad)
(bad)
xor
pop
inc
sbb
cld
xchg
push
shl
push
jnp
mov
stos
int
dec
test
arpl
sbb
das
jns
cmp
ja
pop
arpl
push
jl
dec
push
arpl
js
jnp
repz
retf
and
ret
cmp
xor
or
jno
or
pop
xchg
(bad)
rcr
sub
push
or
pop
fbstp
and
xor
aaa
inc
fild
fsub
pop
mov
sbb
test
xlat
sub
fiadd
pop
and
add
push
cmp
jl
retf
mov
jns
mov
pop
jecxz
mov
xchg
pop
and
popf
mov
mov
dec
xor
jae
sbb
jg
rol
out
popa
sar
inc
cmp
ror
pop
shr
sub
sub
ins
cmps
test
inc
dec
adc
and
dec
jecxz
push
or
jne
mov
sbb
inc
imul
daa
adc
scas
xor
xchg
ja
adc
mov
(bad)
adc
cli
je
dec
pop
cld
dec
loop
mov
inc
sub
call
sbb
add
jmp
ja
sub
fistp
inc
inc
dec
aaa
xchg
and
mov
fwait
dec
push
repnz
adc
fcomip
mov
cmc
sub
shl
ds
repnz
pop
and
arpl
repnz
sbb
pop
mov
and
pushf
hlt
adc
out
mov
ins
sub
cli
pop
out
cmp
sbb
mov
pop
push
cmp
aad
(bad)
adc
je
lahf
pushf
sbb
cmp
add
jns
add
in
dec
fnstsw
hlt
int3
mov
push
popa
jecxz
or
xchg
out
addr16
aam
inc
ds
out
int
mov
movs
fwait
pop
out
test
pop
ss
ins
sbb
sub
pop
in
and
jle
ins
add
aam
mov
inc
retf
mul
les
cmp
loope
dec
jmp
sbb
out
es
test
ds
mov
mov
out
imul
iret
std
push
cld
mov
data16
icebp
imul
ins
in
sub
cwde
cmp
and
xchg
push
stc
xor
retf
pop
dec
pop
sub
test
add
jecxz
or
push
daa
jae
arpl
add
push
es
jnp
dec
jne
pop
jp
inc
jge
jo
and
or
jo
push
popa
dec
jns
stos
outs
jp
mov
and
push
aaa
jne
xor
(bad)
sahf
out
fisttp
test
xlat
sbb
loope
les
ror
pusha
or
push
stos
in
mov
js
movs
jmp
jle
shl
jmp
iret
jge
mov
xor
in
cli
cmps
xor
mov
out
add
xor
and
cwde
ins
or
adc
inc
dec
dec
ret
xor
nop
inc
add
stos
fcomp
or
xchg
mov
ds
iret
push
dec
xor
inc
xor
pop
stos
int
popf
mov
scas
sbb
pop
aam
mov
sbb
xchg
aam
adc
jbe
push
xchg
push
jae
jle
mov
jp
loope
push
mov
(bad)
dec
(bad)
stc
push
fldcw
xchg
push
mov
pop
in
les
sub
les
test
in
popa
retf
jnp
cmp
arpl
in
push
push
jg
and
fs
loope
mov
mov
loop
pop
push
fisubr
outs
outs
cmp
mov
add
push
cmps
adc
and
ja
retw
clc
cli
push
add
test
dec
bound
adc
sbb
test
sub
dec
xchg
(bad)
push
movs
inc
call
popa
hlt
mov
xchg
aam
push
rcr
jmp
out
es
jns
cwde
cmp
stos
mov
push
jecxz
sahf
test
retf
out
jmp
pop
inc
xor
(bad)
movs
pop
push
mov
stc
or
inc
aaa
adc
pushf
adc
jb
aaa
lods
push
push
ret
jbe
sbb
out
ss
jg
jne
push
xor
jns
jmp
pop
hlt
cmp
mov
pop
dec
push
imul
in
sub
push
xchg
es
shr
enter
clc
mov
cmp
xchg
jns
movs
cmovne
add
aam
sub
push
jne
push
sbb
mov
into
js
inc
(bad)
in
out
and
and
cli
mov
int
push
and
inc
nop
xor
pop
retf
and
jecxz
sar
xor
cmps
mov
mov
dec
fmul
inc
ret
loop
push
jg
sbb
mov
shl
jmp
pusha
fsubr
loopne
scas
add
xor
adc
call
xor
ins
jp
rol
pop
aaa
out
mov
mov
pusha
mov
sub
adc
ror
push
xor
retf
scas
movs
addr16
dec
dec
fcom
sar
movs
jae
into
fcom
aam
leave
leave
aas
mov
test
sbb
scas
inc
add
and
pop
pop
inc
test
inc
push
scas
fld
lahf
mov
sbb
mov
cmp
sbb
nop
(bad)
fld
mov
and
dec
scas
lods
sbb
arpl
mov
(bad)
(bad)
ss
mov
sbb
stos
sbb
aaa
push
adc
fld
icebp
out
repnz
lock
push
lahf
add
scas
sbb
cmc
icebp
aad
imul
nop
inc
xor
inc
outs
stos
jl
(bad)
pop
call
daa
mul
add
dec
xlat
mov
cmp
or
jns
push
push
cmp
(bad)
pop
fs
cdq
scas
hlt
inc
cmp
sub
aas
outs
cwde
popa
jmp
stos
or
sbb
xor
(bad)
cmps
cmps
out
shr
pop
test
imul
inc
test
ja
(bad)
cmc
mov
int
add
push
test
out
xor
mov
retf
mov
into
jb
pop
into
sbb
into
xlat
rcr
sub
fistp
mov
ret
js
iret
lea
mov
sub
or
cmps
xor
push
push
popf
jge
sub
and
es
inc
cli
bound
rcr
imul
fwait
test
int
imul
mov
dec
test
ins
(bad)
(bad)
adc
jg
imul
test
and
and
add
mov
js
call
addr16
sbb
das
pop
scas
mov
add
hlt
daa
adc
cmps
repnz
test
int
dec
movups
hlt
(bad)
nop
leave
pop
repnz
mov
xchg
jne
retf
retf
xor
retf
fcomp
pop
mov
test
dec
mov
ins
mov
pop
jle
pop
sub
and
test
aam
ja
rcl
cmp
outs
or
call
leave
(bad)
jnp
dec
push
in
sbb
aad
xchg
xchg
stos
cmps
out
mov
aas
retf
inc
xchg
scas
std
fs
aam
ins
fdiv
jle
loop
or
and
dec
cmp
cwde
jg
movs
ficom
push
and
pop
pop
and
aad
imul
mov
pop
outs
retf
cmps
ins
dec
mov
pop
bound
dec
(bad)
pop
retf
das
push
inc
shr
mov
enter
shl
dec
adc
pop
les
dec
sub
cwde
imul
or
or
mov
xchg
adc
es
push
dec
dec
jecxz
mov
jno
pop
mov
jbe
int3
lods
mov
xchg
and
(bad)
in
ja
and
ret
xor
xchg
xor
and
stos
repnz
idiv
mov
(bad)
outs
dec
les
rcl
push
sub
aaa
add
or
and
push
bnd
repz
inc
dec
cmp
sub
cmp
test
mov
leave
outs
loop
lahf
xor
ja
out
push
pop
inc
ja
dec
jge
inc
lock
mov
lock
aad
mov
(bad)
mov
push
mov
rol
mov
add
out
or
std
add
jne
cmp
cmp
dec
lods
and
es
pop
addr16
je
sbb
stos
xchg
xor
aas
enter
mov
repz
and
cmps
push
cmps
js
adc
cmp
lahf
ret
das
mov
push
mov
scas
sub
test
imul
jmp
nop
test
les
icebp
in
mov
mov
(bad)
dec
loop
xor
jno
jbe
xrelease
add
stos
or
xor
lahf
push
or
mov
jle
lds
mov
test
add
xchg
lds
jo
ds
jl
movs
cmps
cwde
call
cmps
fucomi
fcomi
leave
into
loop
and
je
call
jo
adc
push
fs
lods
push
in
into
xlat
call
push
mov
mov
call
mov
stos
gs
jnp
pop
not
push
fbld
push
call
mov
cmp
pmullw
sahf
pop
push
xor
fild
es
ins
inc
sbb
out
stos
in
cdq
xor
stos
lahf
add
jmp
sbb
add
jbe
pop
imul
jne
jp
lods
xchg
fadd
and
ins
in
fwait
test
fld
dec
retf
mov
lock
mov
or
pop
inc
jg
jnp
aad
mov
cmp
movs
jmp
or
fsubr
xchg
loopne
ins
test
mov
outs
sbb
push
cmp
stos
adc
dec
(bad)
jns
in
test
movs
int3
loope
jmp
or
out
adc
ss
popf
scas
and
mov
scas
add
aam
stos
add
inc
shl
mov
clc
lock
push
ss
ja
cmps
out
xchg
dec
in
and
push
adc
pop
ins
ins
stos
xchg
cmp
in
lock
xchg
je
call
jmp
and
cli
nop
stos
stc
dec
cmps
(bad)
outs
mov
(bad)
sub
push
ja
xchg
lock
xor
out
std
xchg
into
sub
int3
in
mov
ins
cs
(bad)
push
mov
mov
fidivr
int3
dec
mov
lahf
push
sbb
cmp
(bad)
jne
jns
cmc
or
les
loope
(bad)
adc
jmp
fist
nop
test
adc
movs
in
mov
and
js
inc
add
out
in
dec
add
push
adc
pop
dec
lahf
xor
mov
call
or
mov
adc
cmps
dec
test
jae
mov
lahf
push
inc
pop
jae
leave
lock
cmp
retf
test
sub
mov
cmp
mul
jl
sbb
imul
dec
mov
mov
sub
lea
lahf
retf
clc
(bad)
adc
rcl
clc
jp
inc
not
xchg
aaa
pop
fstp
mov
pop
mov
outs
int
cdq
xor
sbb
pushf
rcr
mov
pusha
mov
out
inc
mov
inc
adc
xchg
lods
cs
iret
enter
idiv
popf
and
es
jle
or
addr16
or
xor
and
inc
and
cmp
xchg
retf
sub
xchg
xchg
retf
jg
sbb
ins
mov
mov
fst
nop
xchg
sub
sub
dec
cmp
sbb
jns
ss
and
add
jae
or
movs
imul
and
sahf
(bad)
fcmovnu
cdq
xchg
rol
push
add
xchg
out
into
leave
out
data16
stos
mov
cmp
jle
ds
std
and
cmp
or
xchg
aaa
(bad)
shl
nop
addr16
lds
sbb
and
jb
cmps
iret
fild
ficom
push
ins
sub
cwde
in
jbe
xor
inc
sti
aaa
repz
imul
or
push
pushf
mov
into
(bad)
mov
into
mov
repz
inc
sub
gs
enter
loop
push
sbb
retf
nop
call
cdq
and
cwde
popf
sahf
cmp
jp
out
sub
or
push
sbb
push
mov
push
sbb
pop
arpl
push
sbb
add
mov
sbb
jp
ss
ret
ins
pusha
sar
pop
mov
stos
ja
sar
or
lea
je
pop
ret
in
clc
xor
cmp
out
jl
retf
ret
xchg
arpl
xor
pop
fiadd
jns
cmp
jmp
popf
inc
xchg
(bad)
scas
dec
push
fmul
popf
(bad)
test
(bad)
(bad)
mov
or
test
add
fdivr
clc
ins
iret
cmps
jmp
adc
add
cs
icebp
jne
xchg
dec
ds
pop
mov
xchg
add
inc
fld
dec
loope
out
aaa
nop
mov
iret
aas
data16
mul
test
or
outs
in
xchg
(bad)
mov
stos
loop
mov
or
jo
dec
enter
or
movs
ja
in
push
(bad)
jnp
mov
mov
mov
(bad)
lods
push
jno
pop
std
jl
xchg
sub
lahf
jp
jp
pop
sbb
adc
out
add
test
popa
mov
pusha
adc
stc
dec
pop
mov
inc
push
or
loope
mov
or
or
push
xor
mov
xor
cli
inc
mov
es
jp
retf
arpl
stc
imul
ss
add
(bad)
mov
hlt
stos
push
sub
xchg
push
mov
ins
(bad)
cmp
call
add
inc
xchg
in
mov
add
test
add
add
xor
inc
add
sti
or
pushw
sub
hlt
xor
mov
sub
adc
mov
push
mov
mov
add
push
iret
data16
inc
mov
clc
pop
mov
pop
(bad)
push
cmp
(bad)
xor
inc
dec
aam
jb
inc
sbb
jo
mov
(bad)
cmps
popf
loope
out
mov
movs
call
jns
popf
xchg
jb
jmp
ja
fucomp
dec
lock
retf
push
xchg
sbb
xlat
cmp
in
xchg
mov
mov
popa
push
ficom
and
and
sti
mov
sahf
pop
mov
inc
jno
mov
cmp
retf
imul
jo
adc
movs
or
and
repnz
adc
jl
ret
push
pop
test
cmp
sahf
sbb
or
dec
dec
mov
push
jg
mov
(bad)
jmp
arpl
bound
sbb
xor
mov
mov
jmp
loop
pusha
inc
or
hlt
(bad)
icebp
adc
aad
mov
xchg
cli
sahf
lods
mov
in
cli
rol
aad
ret
jo
ins
pop
xchg
xchg
or
call
int
lahf
aaa
dec
dec
sbb
pop
cmp
push
inc
sar
std
hlt
pop
test
call
(bad)
(bad)
das
stos
sbb
sub
push
sub
and
dec
cdq
sub
mov
stos
out
cld
cmp
pushf
xchg
push
fsub
push
push
dec
inc
sahf
push
and
push
test
mov
sub
test
cmp
pop
jle
nop
sub
cmpxchg
mov
cwde
mov
or
jmp
pop
or
cmp
mov
dec
je
lock
fldcw
lea
imul
repz
push
mov
rcl
imul
inc
ja
cmc
lock
fimul
xchg
fcmovb
in
dec
push
cmp
out
das
aaa
shl
fnstenv
mov
pop
data16
mov
mov
pop
movs
int
inc
stos
cmp
sbb
add
(bad)
mov
fmul
dec
adc
call
ret
sub
retf
repz
xchg
mov
jge
jmp
cmps
cmp
leave
push
push
mov
test
fstp
lds
int
aaa
pop
add
sbb
and
pop
xchg
into
imul
mov
ficomp
mov
fld
test
and
mov
mov
pop
sub
dec
retf
jns
and
push
cdq
mov
mov
sub
aas
push
mov
push
inc
sbb
test
add
test
dec
xchg
fcom
push
xor
adc
rcr
jmp
nop
pushf
adc
mov
xchg
clc
icebp
ret
push
and
imul
(bad)
inc
sub
rol
jp
mov
mov
jle
inc
or
xchg
cli
das
pop
push
(bad)
aad
push
into
sbb
push
xchg
into
sbb
test
aad
and
sub
push
ins
mov
mov
pop
adc
jmp
mov
mov
inc
add
inc
mov
add
scas
mov
(bad)
adc
sbb
stos
or
in
mov
pop
test
mov
adc
push
jecxz
jmp
aam
scas
or
je
repz
pop
mov
jae
cmp
mov
std
push
adc
(bad)
jmp
sbb
stc
jns
sub
add
adc
fbstp
out
sbb
lock
mov
mov
or
loope
push
or
test
icebp
inc
in
dec
imul
jbe
cmps
mov
mov
sbb
mov
jo
pop
cpuid
out
xchg
jle
xor
inc
out
jle
sbb
fdiv
pop
xlat
sbb
mov
lds
sbb
pop
cmps
call
mov
not
stc
xchg
mov
popa
mov
aas
jb
or
cmps
mov
in
and
popf
jl
inc
mov
add
jbe
lahf
push
ret
sub
pop
icebp
in
xor
push
fwait
xor
pop
cs
lods
test
mov
lea
neg
mov
(bad)
sub
push
xor
push
mov
ret
push
lods
mov
cld
sbb
sti
xchg
dec
xor
clc
aaa
cmp
into
dec
jle
outs
(bad)
ins
clc
xchg
sbb
mov
data16
cmps
enter
daa
and
push
loop
push
std
add
jl
repz
jns
or
iret
push
mov
repnz
dec
test
pop
pop
test
pop
xchg
xor
push
add
fsubr
rcr
jle
gs
or
(bad)
fsubr
cmc
out
repz
call
xchg
and
push
sub
mov
in
mov
mov
into
sar
pop
adc
mov
mov
das
lahf
rol
mov
call
mov
adc
push
xchg
mov
jnp
aad
outs
stos
adc
jmp
dec
ins
cmp
cmps
into
(bad)
nop
ins
test
into
pop
or
pop
fst
call
call
outs
enter
dec
not
adc
lods
cmp
cmp
(bad)
and
push
call
xacquire
push
cli
adc
xchg
adc
iret
retf
pushf
addr16
popf
jmp
xor
fdivp
das
mov
pop
call
fnsave
mov
cmp
sar
pop
sbb
fstp
or
add
and
and
cmps
jp
fbld
out
mov
int3
inc
inc
push
je
(bad)
push
xor
repnz
(bad)
daa
aam
out
inc
hlt
lock
and
jo
ja
push
mov
fimul
mov
cwde
loope
mov
ins
inc
mov
pop
push
sub
sbb
cmp
stc
sbb
mov
fmul
cmps
push
cmp
(bad)
sbb
cmc
mov
fcom
or
lahf
inc
sbb
mov
mov
dec
or
jmp
loope
leave
mov
sub
fimul
jb
jne
mov
pushf
jno
ficom
adc
out
inc
mov
mov
scas
repnz
sub
addr16
jmp
clc
push
ds
pop
mov
mul
or
jl
mov
stos
aad
jl
mov
jle
fbstp
getsec
push
jno
out
xchg
jge
xchg
cmp
inc
jge
(bad)
in
xor
(bad)
sbb
sub
rol
and
jg
lock
fnstsw
jle
and
mul
int
imul
sti
jmp
rol
(bad)
jl
xchg
es
cmp
add
mov
call
clc
sub
cmp
sub
and
out
scas
scas
or
inc
mov
je
into
out
adc
shl
pop
lds
(bad)
and
mov
sti
ins
adc
pusha
outs
sub
xor
jbe
arpl
mov
jne
imul
fwait
popa
push
mov
add
frstor
xchg
adc
pushf
or
es
pop
cld
pop
adc
ret
mov
mov
test
or
(bad)
inc
inc
pop
js
pop
cdq
sbb
test
(bad)
data16
(bad)
pop
and
mov
mov
inc
add
popa
sti
xchg
xchg
dec
je
push
xor
cmc
(bad)
outs
rol
scas
(bad)
out
add
pop
(bad)
loope
sti
call
or
or
cmp
jge
inc
xor
push
ja
daa
(bad)
test
rep
sbb
pop
jge
inc
push
add
fadd
cwde
xor
inc
lods
ficom
ss
xor
in
imul
pop
lock
scas
cmc
or
scas
lahf
icebp
mov
ss
stos
jp
fimul
pop
push
cld
popa
add
outs
in
or
mov
add
aam
mov
jge
adc
and
push
cmps
dec
push
inc
and
cmp
popa
cmp
cmc
mov
inc
aam
mov
(bad)
int3
mov
lds
push
dec
rcl
loope
into
sbb
(bad)
out
cld
scas
push
stc
cmp
nop
xchg
cli
sbb
sub
sar
mul
xchg
fsubr
cli
imul
and
out
fimul
dec
fild
out
inc
adc
and
out
test
xchg
gs
mov
ficom
mov
xchg
push
std
jle
test
in
aad
nop
icebp
sub
lea
popa
add
dec
aam
cwde
sub
stos
retf
push
sar
push
outs
cmp
cmp
jnp
sub
daa
stos
xor
aaa
push
mov
cmovge
dec
call
stos
mov
mov
or
pop
xor
popa
addr16
xchg
inc
out
mov
mov
or
cmp
test
jnp
sub
sbb
loope
sbb
and
mov
cld
call
or
sub
sub
scas
cwde
pop
repnz
push
ins
in
cmc
in
add
jb
add
jns
inc
adc
push
push
fcom
cwde
mov
js
sub
das
pop
stos
aas
fstp
sar
xor
xchg
popf
xchg
hlt
pop
mov
pop
ins
test
dec
test
(bad)
cmp
xchg
pop
push
bnd
popf
pop
cwde
xchg
mov
pushf
pushf
lods
ins
jbe
jmp
xchg
ja
add
add
sbb
data16
aas
xor
cmp
test
xchg
out
adc
ret
test
out
pop
cmp
mov
mov
movs
dec
jb
mov
push
xchg
and
sbb
inc
mov
mov
ja
mov
pop
ud0
mov
data16
fild
(bad)
mov
xor
mov
cmp
jle
mov
xchg
sahf
pop
jge
int3
movs
daa
adc
movs
push
cmc
xchg
sub
mov
jbe
mov
lahf
loop
sbb
adc
and
xchg
push
mov
sbb
pop
imul
pop
dec
dec
mov
mov
das
fiadd
jge
in
mov
lods
mov
bound
pop
addr16
pop
cmp
pop
fild
sub
jp
fcomp
out
cwde
xchg
in
test
cmp
stos
ins
repz
mov
and
fcmovbe
iret
fcom
push
fsub
sbb
test
aas
dec
inc
mov
sbb
(bad)
dec
mov
sub
movs
sahf
add
outs
pop
fcmovb
jge
sbb
cmp
lods
out
out
mov
loop
pop
mov
fadd
xor
leave
push
inc
sub
adc
add
mov
jmp
sbb
fdivrp
ja
movs
sahf
xlat
scas
cmp
lahf
mov
repz
pop
mov
shl
pop
lahf
imul
fbstp
pop
inc
jge
xor
sbb
or
repnz
adc
and
inc
pop
mov
mov
xor
jae
les
jo
loop
or
imul
and
mov
ret
mov
mov
aam
std
mov
push
push
pop
pop
(bad)
jmp
movs
add
cmc
sbb
dec
jl
dec
mov
sahf
xor
mov
aam
(bad)
stc
(bad)
xor
in
inc
cmp
cmp
rol
mov
les
pop
mov
rcl
retf
dec
adc
pop
hlt
mov
into
call
pusha
bound
cli
(bad)
add
mov
sub
repz
cli
mov
fbstp
jae
sub
jp
into
add
pushf
int
mov
outs
aad
mov
jo
pop
ficom
jecxz
imul
ds
and
or
cmp
ins
lods
fcom
in
test
(bad)
data16
pop
std
dec
push
xor
mov
data16
xor
leave
in
retf
and
sar
or
repnz
mov
adc
imul
or
cmp
imul
fpatan
ins
inc
push
bswap
xchg
adc
ja
es
shl
pop
sub
lds
nop
(bad)
enter
mov
dec
dec
add
imul
es
adc
xchg
xor
and
movs
cmp
add
cmc
jmp
adc
inc
(bad)
repz
cmp
(bad)
cs
fcom
pop
retf
mov
dec
pop
sbb
mov
sbb
jecxz
mov
sbb
fcomi
fnstcw
xchg
fmul
jle
cmc
outs
xchg
push
jge
mov
ds
adc
mov
sbb
jmp
adc
in
dec
and
and
push
ins
jmp
xchg
sar
jg
push
fs
sbb
push
or
ret
sbb
jecxz
mov
inc
int3
xchg
mov
push
and
jmp
fistp
adc
jmp
shl
add
loope
aaa
xlat
or
add
test
pop
aam
pusha
into
ret
add
add
cdq
xor
pop
or
push
stos
or
scas
add
adc
(bad)
cmps
(bad)
(bad)
xlat
inc
and
or
or
data16
in
sub
mov
outs
and
test
push
repnz
mov
(bad)
lahf
clc
sbb
push
mov
(bad)
not
loopne
mov
in
xchg
in
jmp
jp
adc
cmc
out
das
mov
pop
add
in
jmp
cld
add
iret
mov
or
popa
dec
neg
mov
jmp
inc
pop
sub
sbb
lods
and
jmp
imul
movs
call
ins
add
mov
lahf
ja
out
mov
push
pop
mov
jmp
fs
add
inc
mov
xor
sahf
pop
xchg
cmps
in
push
push
pop
jbe
mov
or
and
imul
cmp
push
xor
push
jg
sub
pop
js
xchg
test
inc
xor
clc
les
and
push
pusha
sub
test
and
xchg
dec
in
ror
dec
repnz
xor
rep
dec
clc
ja
sysexit
jl
mov
gs
fild
(bad)
(bad)
jmp
xor
sub
mov
js
inc
cmp
inc
push
into
pop
push
aad
jae
and
outs
out
lahf
xchg
xchg
aam
push
adc
jle
xchg
lock
(bad)
and
push
jo
push
pop
xlat
dec
xlat
cld
jns
(bad)
fdiv
pop
arpl
outs
ficom
out
inc
sub
sbb
aaa
sub
stc
pop
jl
(bad)
ds
mov
imul
loop
mov
movs
inc
mov
push
rcr
cdq
shl
mov
mov
data16
dec
xchg
loope
sbb
pop
inc
(bad)
fiadd
lods
and
stos
add
lods
adc
scas
jl
les
pop
push
aaa
cdq
(bad)
stos
jg
stos
inc
push
call
pusha
scas
jae
xor
mov
mov
popa
outs
bound
lods
into
gs
(bad)
retf
les
mov
out
out
cmp
fidiv
jae
shr
aad
inc
in
xor
sbb
not
and
sbb
pop
and
ss
xor
shl
xchg
dec
and
fcomp
add
ja
jl
out
sbb
dec
and
mul
jb
xchg
add
imul
xor
(bad)
adc
fs
cmp
or
xchg
sti
(bad)
(bad)
call
das
jne
jb
mov
ret
dec
ja
es
mov
loop
mov
push
dec
test
int
push
cwde
add
mov
fild
mov
scas
cs
movs
push
cmp
(bad)
sub
push
hlt
adc
lods
pop
fild
jle
and
mov
or
pusha
adc
xchg
push
hlt
mov
lock
into
imul
add
hlt
lahf
sub
mov
inc
imul
les
pop
nop
dec
sub
in
cld
movs
ds
lods
xor
pop
xchg
ret
jae
clc
and
dec
iret
scas
inc
xlat
out
pop
mov
mov
sbb
mov
not
arpl
xchg
dec
xchg
push
mov
stos
jge
and
dec
mov
add
ret
lahf
pop
xchg
jmp
and
and
popa
sub
(bad)
fst
sub
mov
arpl
lds
push
inc
xchg
nop
retf
into
neg
add
add
stc
xchg
fimul
out
data16
add
(bad)
(bad)
das
jb
mov
and
ins
xchg
lea
movs
stos
push
test
push
pop
(bad)
jg
xor
dec
and
xlat
test
pop
cmps
sub
adc
rcl
sbb
xor
pop
xchg
fcmovnb
fdivr
fdiv
lea
push
cmp
fnstenv
jmp
lahf
mov
or
and
add
stos
mov
mov
or
adc
ins
mov
pop
push
test
out
ins
push
xchg
inc
sub
jl
xor
or
sub
xor
fidivr
mov
cwde
in
xchg
mov
loopne
mov
pop
(bad)
out
daa
xchg
lods
in
jle
inc
enter
loopne
mov
loope
test
pop
dec
add
xchg
mov
aas
cs
sub
cmp
inc
jne
pushw
repz
dec
pop
(bad)
pop
adc
bound
mov
adc
fwait
inc
mov
dec
xchg
fsubr
out
sub
sbb
(bad)
xchg
xchg
mov
xor
pop
mov
add
sbb
xor
leave
scas
neg
jae
test
ret
out
sbb
dec
ret
retf
add
stos
mov
cmp
repnz
int
ja
mov
imul
add
or
stos
inc
jge
leave
bound
adc
pop
cld
sbb
ja
rcl
lods
stc
test
int3
fldenv
outs
sbb
xor
add
out
or
xor
xchg
mov
in
mov
cs
push
mov
in
fsub
xlat
pop
jnp
lods
push
out
lods
pushf
pop
(bad)
cmp
cmp
je
in
or
js
pop
hlt
scas
dec
push
push
fs
inc
mov
lea
sub
cld
cs
cmps
int
cmp
out
xchg
adc
into
pop
pop
adc
add
and
out
movs
test
pusha
mov
idiv
pop
push
in
add
push
jecxz
call
fist
cmp
and
add
stos
mov
je
jns
ret
cmps
adc
repnz
je
iret
jp
push
mov
movs
pop
jnp
xchg
sbb
sub
adc
adc
mov
aam
fld
hlt
xchg
es
pop
stc
sub
sub
cmp
jmp
ja
aas
mov
mov
fldenv
pop
pop
(bad)
cli
jnp
loope
xor
xor
pop
(bad)
scas
das
mov
ja
dec
packuswb
adc
xchg
mov
and
dec
push
cmp
inc
fwait
mov
cmp
xchg
mov
dec
loopne
push
(bad)
jno
pushf
add
cmp
jmp
es
push
mov
and
or
pop
jg
movs
movs
or
pop
cwde
mov
mov
cmp
lea
cmp
xchg
xchg
scas
cld
add
pop
mov
mov
cdq
dec
imul
xchg
out
lods
repz
repnz
mov
and
or
xor
pop
xor
dec
out
inc
cmp
retf
and
and
pop
xor
popa
popf
pop
jmp
mov
(bad)
mov
ror
mov
push
fcom
ss
and
add
push
xchg
(bad)
sahf
(bad)
push
cmp
pop
and
add
out
outs
mov
stc
pop
movups
cmp
cmp
push
out
mov
(bad)
ret
add
sbb
and
test
lock
pop
test
pop
leave
aas
retf
aad
mov
mov
mov
bound
loop
push
pop
mov
mov
mov
xor
outs
jl
and
mov
js
clc
add
cli
push
xchg
add
lds
xor
adc
fild
inc
scas
aam
xchg
loope
pop
push
movs
test
fstp
sbb
mov
call
daa
clc
and
add
or
jmp
(bad)
hlt
aad
sub
test
addr16
jo
shl
dec
and
popf
fmul
lock
fisubr
adc
shl
dec
rcl
jecxz
cmp
sbb
movs
or
push
fistp
cwde
sub
arpl
jge
into
and
dec
scas
jo
out
retf
sbb
loop
aad
pushf
adc
mov
out
cmp
out
pusha
xchg
or
pop
pop
test
and
mov
(bad)
ins
jb
xor
dec
mov
arpl
mov
mov
js
sti
and
or
fidivr
movs
mov
or
cli
mov
pop
dec
push
enter
mov
add
repz
loopne
mov
xchg
fstp
out
stos
(bad)
jno
sahf
loopne
(bad)
aaa
js
je
ret
inc
cmp
push
fistp
sar
popa
js
sbb
xchg
(bad)
in
(bad)
lock
mov
mov
ret
outs
cmp
push
jecxz
inc
mov
mov
push
mov
adc
cmp
loopne
dec
adc
imul
(bad)
mov
dec
jae
add
add
xor
mov
jno
cmp
cli
retf
stc
fabs
aad
mov
dec
scas
popa
mov
aad
push
jno
cmp
fdivr
cmps
push
jb
scas
xor
xor
sub
call
jl
and
pop
(bad)
jmp
out
ja
xlat
out
cmp
jp
xor
mov
loop
pop
das
jo
ret
jmp
call
adc
xchg
adc
and
gs
fstp
adc
dec
sahf
xchg
mov
sub
daa
cmp
adc
bound
sbb
jl
sub
ficom
(bad)
fld
mov
xor
inc
adc
fld
test
xlat
mov
(bad)
pop
or
pop
fistp
mov
call
push
xchg
sbb
fs
push
lahf
(bad)
call
xchg
jns
imul
and
jl
pusha
pop
add
dec
jne
sub
dec
fdiv
and
out
cmp
test
pop
in
ror
xchg
xor
xchg
sub
push
ins
(bad)
fldcw
push
ret
sub
xchg
and
outs
or
clc
sbb
(bad)
mov
je
jbe
add
ret
mov
shl
outs
or
cmp
movs
xchg
mov
xor
xchg
jnp
in
popf
add
in
pop
inc
fld
xor
inc
(bad)
stos
outs
mov
xchg
test
fs
stos
or
loope
inc
out
int
push
nop
mov
in
shr
lods
cli
loop
js
ins
int3
mov
ret
jo
(bad)
outs
test
iret
shl
retf
mov
ds
shl
pushf
cwde
sbb
icebp
mov
inc
in
ret
cmps
out
sub
in
mov
pop
push
test
pop
xor
sbb
xor
push
lahf
rol
retf
out
outs
pop
lock
cld
rol
and
push
cmp
mov
dec
mov
sbb
retf
sub
lods
xchg
ss
sbb
test
iret
inc
xchg
mov
jbe
test
mov
shr
int3
push
fbld
out
mov
pop
mul
dec
cmp
mov
xchg
and
mov
shl
out
test
jnp
or
repz
int3
pop
scas
xchg
pop
and
sub
out
inc
or
call
out
xchg
push
movs
leave
in
mov
adc
iret
test
dec
fadd
lods
fwait
xchg
dec
mov
aam
out
cwde
repnz
fimul
adc
imul
pop
vxorps
pop
push
jbe
movs
aad
test
sbb
mov
jnp
stos
(bad)
xor
sbb
xchg
mov
sub
mov
xchg
ds
cmp
pop
inc
fsub
shl
mov
les
add
dec
jb
stos
pop
xor
adc
popa
adc
mov
adc
pop
jg
mov
repz
stc
ds
sub
enter
into
(bad)
out
xchg
and
mov
gs
sbb
test
div
xchg
cmp
dec
aam
out
fimul
sar
and
sahf
lods
inc
fadd
mov
jo
imul
dec
sbb
int
pop
xlat
sti
sub
dec
mov
xor
pop
add
(bad)
sub
pop
sbb
jbe
test
inc
cmp
pop
retf
(bad)
int3
fs
repz
das
push
jb
aaa
or
mov
jne
out
adc
jp
ds
out
push
(bad)
mov
sbb
hlt
or
rcr
cmp
inc
in
adc
pop
(bad)
hlt
inc
(bad)
not
aaa
cli
cwde
sbb
push
jno
pop
xlat
aaa
sub
inc
jge
out
mov
lea
imul
inc
pop
and
out
mov
arpl
sub
pop
shl
enter
mov
std
loopne
ret
retf
lods
in
adc
repnz
xchg
dec
jl
shr
mov
clc
or
xchg
sub
arpl
push
xor
(bad)
fs
sbb
and
jns
and
pop
xor
ins
sbb
xchg
mov
jo
(bad)
mov
bound
pop
adc
push
std
popa
push
cmp
mov
sub
adc
push
daa
xchg
mov
mov
clc
test
cmc
fcomip
scas
mov
call
test
iret
out
scas
hlt
shl
cmps
add
jl
xor
fld
std
jge
and
cli
test
mov
jb
pop
dec
cwde
sbb
dec
cmp
mov
fisubr
and
mov
xchg
mov
jmp
mov
fdivr
rcl
xor
xchg
dec
adc
sub
jno
aam
push
mov
les
pop
int3
mov
call
dec
inc
add
cld
mov
and
daa
or
jne
pop
pop
not
stos
pop
in
sbb
js
jmp
sbb
pop
addr16
push
(bad)
dec
cs
push
nop
mov
fsubr
test
pop
lods
add
pushf
and
in
dec
add
dec
push
mov
mov
loop
or
lea
jo
inc
sub
clc
xchg
or
adc
cmp
mov
nop
in
xor
in
mov
and
push
add
jnp
jnp
sahf
cmp
or
fldl2t
mov
add
jecxz
cmps
mov
cmp
add
sub
je
ror
outs
pop
or
je
mov
data16
pop
stc
inc
imul
sub
aaa
cmp
stc
lock
(bad)
test
mov
add
mov
js
push
dec
mov
loope
sub
sti
pop
push
ror
jge
or
movs
xchg
test
jb
sub
in
ins
sub
sub
ffreep
rol
aam
push
mov
mov
cmps
xchg
mov
push
scas
pop
xlat
and
adc
push
add
dec
pop
push
fs
dec
inc
(bad)
or
or
xor
push
cmp
or
retf
push
stos
fmul
cwde
pop
jp
imul
call
mul
(bad)
mov
cmp
pop
movs
add
xchg
stos
mov
or
push
movs
cmps
dec
sar
add
push
loop
mov
mov
sbb
movs
sar
in
dec
xchg
add
movs
mov
sub
test
pop
pop
inc
jo
(bad)
xchg
lds
out
iret
push
bound
push
adc
adc
xchg
in
loope
mov
(bad)
push
xchg
ja
push
add
xchg
xchg
add
div
cmp
jecxz
clc
(bad)
retf
cmc
adc
sbb
(bad)
jg
test
stc
jo
inc
mov
xor
pop
inc
repz
push
call
or
xor
ror
inc
jo
mov
cs
mov
fisubr
mov
(bad)
inc
cmc
and
mov
in
icebp
ds
rol
pop
add
idiv
xchg
aad
mov
in
push
pop
inc
add
inc
mov
push
sub
inc
pop
mov
mov
and
addr16
or
pusha
cmc
and
ja
xchg
pop
(bad)
sti
pushf
cld
adc
mov
arpl
inc
mov
sub
mov
int
dec
xchg
retf
aad
mov
xchg
clc
jo
rcr
push
es
sub
cdq
scas
stos
aad
xor
(bad)
hlt
xchg
clc
xchg
pop
in
nop
push
mov
xchg
add
add
sbb
fsubr
movs
mov
aaa
sbb
dec
test
lea
rcr
sar
xchg
stos
push
aad
aad
pop
mov
pop
gs
dec
jo
mov
aas
fldcw
push
jns
mov
mov
dec
inc
jno
push
jg
test
xchg
mov
repz
ret
loope
inc
cli
mov
mov
adc
jle
popa
jae
add
jo
inc
jl
ss
movs
fisubr
mov
or
add
imul
test
fucomp
bound
mov
sbb
add
jo
or
adc
and
push
inc
std
push
call
jnp
mov
imul
cmp
mul
rcl
mov
push
neg
xchg
pop
ins
pusha
pop
sbb
cmp
arpl
clc
jne
and
bswap
je
and
or
xor
jge
mov
inc
fidiv
jle
std
inc
push
loopne
dec
jp
div
test
pop
and
jle
fnstsw
popa
mov
add
mov
js
adc
mov
push
mov
add
jl
and
or
loop
cmp
mov
jp
mov
ss
(bad)
outs
(bad)
sti
mov
mov
enter
or
jmp
in
adc
(bad)
enter
push
ret
in
mov
retf
sbb
fbld
jle
and
xchg
push
pop
mov
jbe
rcr
push
test
loop
cmc
mov
in
sub
sub
mov
es
mov
rcpps
adc
dec
push
mov
adc
dec
hlt
jg
xor
movs
cwde
cdq
mov
outs
ins
pop
cmp
cmps
test
dec
(bad)
adc
daa
aad
mov
push
into
sub
jle
cmp
xchg
cmp
int
cmp
imul
jle
sti
retf
into
mov
inc
push
push
imul
mov
aaa
cmp
sub
sbb
inc
ss
mov
or
imul
arpl
popa
cmps
fs
jge
stos
push
clc
bound
xchg
inc
jbe
fiadd
and
inc
sbb
aas
cli
rcl
daa
xor
mov
push
or
lahf
dec
aad
push
les
xchg
jo
mov
popa
xchg
mov
xchg
dec
xor
xor
adc
sub
mov
in
out
pop
push
jle
add
pop
call
or
nop
inc
loopne
dec
push
jg
add
xchg
icebp
fwait
jmp
mov
dec
movs
mov
mov
enter
imul
cld
inc
(bad)
mov
(bad)
cmc
inc
jle
jecxz
nop
mov
cld
cmp
(bad)
xor
or
test
jbe
cmp
inc
in
mov
dec
push
retf
push
dec
mov
(bad)
(bad)
push
push
add
xor
sbb
jg
xchg
mov
pop
sti
jp
(bad)
fcmovnbe
add
rol
mov
add
sbb
pop
jp
dec
in
inc
sbb
or
aad
lods
jmp
xor
sub
xchg
mov
adc
psllq
jno
jne
fstp
repnz
adc
sub
iret
enter
mov
dec
out
sbb
fnstcw
push
xchg
test
aad
jne
xor
clc
xor
and
mov
cs
loopne
dec
mov
adc
pusha
sbb
cvttps2pi
out
stos
mov
jge
jbe
lahf
hlt
in
sub
out
mov
cmp
rcl
outs
xor
popf
adc
aad
jg
loope
lods
xor
in
add
mov
leave
jle
fldenv
pop
mul
xchg
test
popf
dec
ret
sbb
sbb
xor
shl
xor
cs
call
xchg
popa
aas
loopne
push
(bad)
mov
bound
movs
xchg
xor
fsub
xlat
sub
bound
test
test
iret
adc
adc
lea
pusha
fsub
jmp
sbb
aas
push
sbb
xor
add
lock
mov
rcr
(bad)
int
push
or
adc
mov
loopne
cmp
sbb
pop
scas
pop
shl
test
int3
add
jo
mov
adc
cld
cli
dec
shl
sbb
xlat
mov
cdq
sub
dec
adc
or
inc
lea
hlt
cli
dec
adc
and
dec
(bad)
jmp
inc
inc
xor
in
call
mov
sub
and
pop
sub
int
and
out
add
fiadd
aas
out
push
push
jno
xor
inc
dec
in
in
xchg
fs
call
(bad)
sbb
test
jo
lea
int3
rep
dec
je
xor
push
fsub
cmp
inc
xchg
dec
ins
gs
outs
inc
jmp
in
mov
add
js
pushf
cli
pop
cmps
popf
adc
js
lds
iret
push
mov
(bad)
aam
cmp
mov
cwde
in
jle
enter
mov
and
int
xchg
popa
inc
sbb
lds
loopne
pop
jbe
out
sub
push
cld
xchg
push
sbb
fbstp
and
pop
popf
add
mov
test
dec
push
mov
fnstenv
out
xor
(bad)
mov
scas
loopne
sub
jp
add
fcmovnbe
sub
test
xor
data16
cmp
out
pop
imul
fwait
mov
fwait
popa
ins
sbb
sbb
inc
scas
jp
cmc
sub
mov
je
mov
gs
pushf
mov
cli
fidivr
xlat
pusha
sub
sahf
movs
pop
inc
loope
sub
jmp
mov
xlat
ficomp
mov
lods
cli
gs
xor
in
es
dec
add
into
out
jae
push
test
sbb
ret
dec
cld
clc
jl
loope
fisttp
fsub
and
mov
sti
lea
adc
add
push
push
mov
mov
add
je
(bad)
sbb
push
mov
inc
in
sbb
push
inc
sub
imul
mov
movs
pusha
scas
dec
fstp
mov
test
mov
in
aad
sahf
inc
push
dec
inc
mov
xor
pop
bound
cmps
inc
test
dec
push
outs
sbb
sub
ins
add
mov
fs
cmp
fcomp
mov
ror
pushf
inc
fsub
dec
push
sbb
cmp
repnz
cli
mov
aad
and
int3
cmps
fidiv
daa
les
movsx
push
popa
or
add
clc
xchg
sub
jnp
aaa
nop
rcr
ror
fist
and
xor
call
bound
jae
adc
add
lods
mov
lds
and
xchg
test
les
push
mov
iret
cmp
sub
iret
xchg
or
sti
push
pop
inc
shl
(bad)
(bad)
lea
(bad)
dec
outs
into
into
dec
or
sbb
mov
push
mov
les
ret
test
cmps
out
daa
pop
cwde
imul
pop
pop
fld
mov
stos
cmc
outs
sar
outs
fwait
jo
push
xor
sub
cs
mov
xchg
mov
call
push
rol
cmp
mov
mov
pop
mov
and
xchg
and
sbb
dec
call
(bad)
not
sbb
mov
dec
pusha
cs
pop
push
addr16
sbb
pop
jns
mov
cmps
dec
and
or
push
mov
jp
mov
xchg
dec
add
clc
ds
loop
add
cmp
mov
leave
(bad)
push
dec
fwait
mov
push
jp
daa
dec
xor
pop
fistp
popa
xor
test
mov
cwde
dec
in
(bad)
popf
rcl
iret
popf
push
test
xchg
and
fcom
scas
hlt
lods
push
push
dec
fnstcw
jns
jecxz
mul
and
lods
pop
pop
pop
mov
cmp
dec
inc
fwait
jbe
dec
pop
test
ret
mov
adc
push
stc
add
dec
movs
or
out
aaa
cs
jmp
addr16
test
(bad)
shr
out
(bad)
popa
jmp
mov
inc
ror
outs
mov
addr16
cmp
mov
mov
pushf
sti
add
loopne
cmp
stos
and
adc
inc
sbb
iret
xchg
fadd
repz
das
lock
stos
retf
mov
inc
cdq
pop
repnz
push
in
arpl
stos
rol
mov
lds
or
into
push
out
pushf
in
push
push
xor
xor
bound
push
cmps
cwde
dec
vsqrtsd
add
cli
sub
xchg
jno
jne
mov
loopne
add
loope
mov
loope
mov
pusha
imul
(bad)
aad
mov
xchg
jns
xlat
or
stos
ffree
add
pop
push
rcl
adc
push
(bad)
in
cmps
mov
sub
xor
dec
jbe
das
or
mov
sbb
icebp
sahf
xchg
sub
sbb
inc
jecxz
mov
inc
(bad)
in
dec
test
lods
ror
(bad)
outs
xor
pop
sbb
xchg
cmp
pop
aam
mov
mov
pop
jns
and
dec
push
sahf
push
retf
test
stos
bound
push
fmul
loop
dec
mov
mov
mov
fs
into
sub
mov
test
xchg
sbb
mov
xor
ret
stos
jmp
add
add
(bad)
in
sub
add
call
add
xchg
repnz
cmps
cld
push
mov
or
xor
jl
mov
jb
idiv
mov
sbb
and
dec
test
push
test
xor
ds
cmp
pop
add
sbb
fs
fst
call
and
mov
aaa
mov
call
lds
nop
sar
aaa
in
pop
push
or
adc
out
xchg
adc
sub
xchg
ret
xchg
rol
scas
setl
jno
clc
inc
mov
jne
sbb
jecxz
mov
pop
es
leave
ss
sub
mov
fs
arpl
fidiv
dec
dec
(bad)
and
xchg
neg
retf
inc
cmp
call
and
call
dec
inc
jnp
mov
popf
cwde
xor
mov
xchg
lahf
outs
mov
pop
cmc
xchg
int
loop
lea
sahf
ja
inc
mov
jge
xchg
dec
js
mov
push
jge
imul
sub
mov
or
add
cmc
mov
jl
mov
test
imul
stos
leave
sahf
ins
jns
jg
and
jp
jbe
(bad)
imul
arpl
imul
mov
sbb
mov
leave
inc
cmps
mov
jae
into
dec
xchg
lea
test
iret
mov
repnz
mov
add
jp
shl
cmp
inc
repz
dec
outs
xor
imul
out
sti
(bad)
int3
in
jae
pushf
loope
sub
hlt
pushf
sub
fsincos
rcr
adc
mov
and
or
nop
push
into
add
cmp
(bad)
sub
int
xor
fwait
rcr
sbb
mov
leave
lea
les
dec
(bad)
jg
push
into
dec
add
retf
loopne
pusha
test
addr16
and
pop
sar
sbb
sub
mov
mov
and
(bad)
jmp
add
mov
xor
scas
jnp
popa
push
jmp
or
jne
dec
jmp
or
mov
sub
xlat
mov
mov
pop
test
sbb
xchg
fst
stos
cmps
mov
(bad)
jne
imul
(bad)
fld
or
dec
pushf
jge
int3
aad
adc
fcmovb
and
lds
inc
ficomp
sbb
jecxz
mov
push
jp
mov
pop
fiadd
push
dec
adc
sub
je
retf
and
fcomp
inc
loop
sub
in
imul
pop
xchg
retf
mov
inc
pop
in
dec
and
ins
lea
or
outs
jge
pop
adc
mov
pop
jnp
je
xchg
xor
mov
arpl
(bad)
pushf
into
sub
repz
mov
inc
jmp
jbe
pop
call
add
imul
mov
jno
in
mov
loop
not
sti
cmp
xor
xchg
jns
lods
(bad)
ja
pop
pusha
fwait
cs
mov
pop
loop
dec
lods
cmp
cmps
and
xchg
mov
push
jg
icebp
sbb
sub
lods
test
into
jmp
sbb
jg
test
seta
push
scas
(bad)
shr
out
sbb
test
xchg
pop
fdiv
mov
and
dec
add
mov
inc
mov
or
inc
addr16
inc
lods
movs
dec
les
pop
dec
mov
xor
adc
movs
fild
fnstcw
iret
repz
out
mov
mov
sub
mov
repnz
pop
fsubp
in
popf
dec
cmp
mov
jecxz
push
dec
out
push
mov
or
(bad)
aad
add
stos
rcl
popf
call
sub
sbb
add
out
cmps
or
inc
lahf
push
xor
mov
pop
pop
pop
aad
sub
xlat
stos
daa
sbb
int
cmova
das
cwde
les
push
jle
push
imul
shl
xchg
mov
inc
mov
xor
mov
jle
(bad)
jae
ss
cmps
and
leave
cwde
mov
aad
dec
mov
repnz
add
lea
fsubr
sbb
dec
test
fwait
pushf
jo
test
xchg
pop
jb
pop
jmp
and
push
pop
in
jb
mov
(bad)
repnz
retf
mov
movs
dec
jbe
sub
call
test
daa
jmp
jae
sub
adc
sub
dec
rcl
lea
sub
xor
ret
rcl
inc
mov
add
adc
pop
pop
cmp
mov
mov
mov
ret
out
loop
mov
aam
das
call
aad
pavgw
fadd
mov
sub
xchg
test
in
mov
mov
mov
fcomp
xchg
stos
out
mov
idiv
cmc
test
sbb
xor
xor
push
xchg
sub
icebp
xchg
lea
jns
push
xor
stos
vpmacssdqh
or
dec
(bad)
mov
(bad)
ja
bound
leave
push
jg
ins
pusha
dec
loop
ret
xlat
jne
int
hlt
or
repz
rcl
imul
in
or
mov
in
ror
ds
lds
mov
rol
mov
cdq
inc
fadd
xor
or
div
aam
cmp
adc
aam
or
das
div
shl
in
inc
das
fmul
inc
cld
xlat
repz
(bad)
mov
(bad)
mov
das
aas
and
faddp
mov
popa
cmp
dec
fadd
(bad)
in
mov
out
(bad)
mov
dec
add
sbb
xchg
push
and
test
cs
cmp
adc
mov
push
idiv
add
retf
add
retf
fisttp
mov
fxch
fnstenv
pushf
pop
gs
xchg
ja
imul
or
cmp
cli
and
pop
dec
int
cdq
out
mov
sub
and
inc
fimul
adc
in
into
fnstsw
shl
fs
mov
addr16
xor
dec
lock
sbb
loopne
in
test
(bad)
push
repnz
int
or
jle
pop
mov
sbb
and
out
icebp
adc
push
push
lock
data16
xor
js
sbb
xchg
fcomip
inc
mov
xor
xor
xor
repnz
call
in
imul
dec
and
ret
inc
mov
scas
not
pop
pop
mov
xor
dec
pushf
mov
xor
pop
push
ja
pop
mov
test
mov
inc
ds
jae
popf
cmps
and
xor
stc
xlat
dec
pop
int
xchg
cmp
xchg
xchg
fiadd
xor
inc
mov
and
or
or
inc
out
xchg
inc
mov
scas
aam
push
jecxz
outs
lods
sub
mov
fbstp
xchg
mov
and
pop
or
sbb
xchg
in
test
jle
frstor
jo
or
dec
sti
daa
inc
lahf
or
cmp
sub
push
movs
jns
pop
popa
inc
test
hlt
das
(bad)
adc
adc
(bad)
pop
movs
in
and
mov
xchg
pop
xor
and
jge
in
push
jle
dec
fnstsw
inc
mov
in
dec
outs
mov
cld
inc
and
sub
scas
test
call
push
inc
cmp
jle
add
js
or
sub
mov
aas
pop
cmp
repnz
sbb
cmc
cmp
in
or
mov
xor
daa
jmp
out
fld
neg
ret
mov
add
stos
or
and
hlt
cdq
mov
jo
fcom
jb
push
shl
jp
das
mov
ss
xchg
or
or
add
jp
push
(bad)
and
imul
stc
nop
outs
sar
adc
ret
mov
gs
jecxz
stc
jmp
push
mov
ss
sti
sbb
mov
lods
arpl
idiv
push
or
inc
xchg
rol
out
loop
lea
lahf
cmp
xchg
aam
or
cmp
or
(bad)
sbb
push
nop
mov
pop
jno
dec
popf
loop
mov
test
inc
stc
pop
mov
jmp
in
dec
nop
add
adc
shr
add
rcl
xor
shr
xchg
xor
add
xchg
inc
sar
arpl
or
js
clc
int3
shl
imul
shl
cmp
call
ret
jmp
and
dec
push
dec
into
mov
fdivr
sbb
pop
or
jne
in
xor
inc
fwait
add
mov
xor
jmp
xlat
mov
mov
dec
pop
mov
imul
cmp
inc
lods
push
aad
lock
arpl
enter
hlt
mov
cmps
fist
pop
repz
inc
stos
pop
push
jno
movs
dec
nop
test
(bad)
hlt
cmps
rcr
iret
sub
mov
fcomi
test
lods
xor
ret
mov
xor
jo
mov
push
and
out
rcl
pushf
sbb
stos
(bad)
add
mov
mov
inc
outs
cdq
(bad)
mov
pushf
inc
mov
lahf
inc
pusha
(bad)
cmp
xchg
pushf
aam
call
out
fiadd
sub
(bad)
add
repnz
push
out
xor
mov
lea
pop
sub
fidivr
and
inc
in
shl
mov
cmps
xor
test
jp
movs
test
inc
adc
push
(bad)
aad
dec
das
jecxz
push
cwde
jle
pop
xchg
cwde
push
movs
jns
pop
jmp
inc
ror
cmp
xor
push
xor
repnz
ret
out
sub
mov
jb
adc
repz
add
push
or
ja
je
mov
pop
dec
dec
xor
pop
shr
in
iret
sbb
dec
add
std
sub
jg
or
push
inc
jmp
in
xlat
sub
push
aad
enter
or
fmul
loope
mov
mov
sahf
jae
je
scas
xchg
hlt
push
sahf
xchg
cmps
ret
jo
(bad)
mov
scas
enter
sub
xchg
jae
rcl
jb
push
cli
sub
ds
out
jmp
push
inc
cld
je
xlat
bound
push
movs
out
mov
into
lea
mov
mov
adc
outs
xor
loope
arpl
push
imul
rcl
loop
cmps
dec
sbb
lds
pop
pop
inc
adc
mov
fs
jecxz
scas
mov
jge
inc
loope
jp
xchg
fwait
mov
adc
mov
pop
add
leave
jo
jns
or
xor
pop
jnp
imul
add
retf
call
push
mov
sub
adc
stos
push
shl
pushf
ret
stos
jnp
jbe
daa
jecxz
sar
pop
xchg
add
test
push
sbb
ds
xor
les
push
push
jmp
adc
jo
cmps
dec
sub
lahf
add
jp
inc
xor
mov
fs
or
loope
bound
cmp
cmc
jae
push
(bad)
out
adc
std
ror
lock
inc
mov
mov
adc
mov
mov
rol
icebp
cmp
dec
pop
outs
xchg
fcom
sbb
lahf
mov
or
mov
mov
mov
repz
pop
ins
aaa
in
cmps
inc
cmc
mov
ret
pushf
scas
sub
or
push
mov
lods
fsub
xchg
xchg
ds
inc
dec
ret
mov
es
xchg
lahf
mov
imul
seto
aas
and
cmp
rol
adc
fsubr
(bad)
shl
and
loope
cmp
mov
scas
mov
sbb
push
es
xchg
in
sbb
lods
dec
and
pop
test
sbb
mov
sbb
adc
ss
outs
rol
xchg
xlat
test
and
mov
mov
adc
dec
enter
fs
aad
call
fnstsw
setb
pop
dec
lock
dec
fstp
mov
scas
jecxz
cdq
push
dec
push
dec
mov
push
aad
jnp
call
xor
and
mov
in
add
inc
mov
jl
loope
push
mov
mov
gs
fs
div
mov
in
ja
sar
stos
fcomp
popf
test
es
dec
scas
add
out
in
pop
sahf
repz
push
or
mov
jo
jnp
bound
rol
int
inc
jmp
pop
push
and
loopne
adc
pop
movs
push
das
leave
mov
pop
jne
imul
or
loopne
ds
ja
adc
dec
enter
mov
mov
adc
push
lods
jmp
(bad)
daa
and
scas
pop
in
mov
icebp
fld
and
sub
mov
sub
ret
or
ret
cmp
std
popf
jae
mov
push
aam
mov
push
push
or
pop
out
dec
xor
and
mov
mov
jl
loop
mov
es
jbe
cld
adc
mov
mov
add
mov
iret
xlat
fnstcw
xchg
jecxz
sbb
pop
setge
sub
pop
cwde
jo
and
sar
ret
(bad)
pop
iret
xchg
ds
ror
test
mov
mov
xor
push
or
ins
pop
jmp
inc
ins
add
in
inc
shr
outs
dec
(bad)
rol
aam
xor
pushf
pop
fsubr
loope
adc
mov
outs
ins
gs
dec
or
out
mov
jb
imul
push
out
outs
or
cli
dec
movs
jmp
and
push
in
pop
mov
cmp
not
mov
mov
and
rcr
popa
cli
xchg
rcl
push
aad
loop
dec
call
sbb
lods
mov
imul
jge
movs
or
aas
and
leave
xchg
movs
inc
rcr
sbb
cmp
sub
clc
mov
mov
adc
clc
pushf
dec
or
inc
test
out
pop
mov
mov
ret
mov
mov
out
mov
sti
cmp
js
lods
mov
sbb
das
jmp
push
call
out
out
loop
fsubr
xchg
out
adc
add
(bad)
jnp
push
jp
clc
lds
fcomp
pop
mov
int3
dec
hlt
aam
(bad)
fsub
mov
pop
xchg
aad
aas
mov
sbb
mov
mov
pop
nop
retf
pop
jmp
push
stos
sbb
gs
loope
sub
cmp
outs
sub
les
clc
xor
sub
movs
xlat
nop
rcr
push
in
cmp
xchg
mov
push
push
push
arpl
mov
inc
pop
icebp
shl
sbb
aam
das
or
mov
cmp
(bad)
cld
(bad)
stos
pop
pop
cmp
sbb
outs
mov
in
pmaxub
les
movs
push
jns
inc
add
mov
lock
ret
sub
dec
push
mov
adc
leave
inc
outs
push
pop
mov
sbb
pushf
add
inc
scas
aam
rcr
sub
lahf
rol
imul
in
adc
adc
ins
adc
jge
stos
mov
mov
shl
mov
into
int
frstor
mov
and
shl
xchg
in
and
mov
enter
clc
fcomp
sub
xlat
(bad)
xor
dec
mov
pop
mov
fmul
pop
fild
test
scas
adc
idiv
not
add
in
and
inc
xchg
mov
jb
push
out
mov
fild
pop
sbb
fcmovbe
in
shl
pop
jne
pop
or
push
jnp
pop
and
pop
arpl
add
leave
xchg
es
hlt
std
addr16
adc
sar
cmp
rcl
xor
retf
hlt
shr
push
sar
dec
push
(bad)
push
loope
neg
(bad)
cmp
or
movs
test
ins
cmp
adc
daa
sub
sbb
in
scas
and
dec
rcl
test
mov
mov
jl
add
xchg
xchg
pushf
sbb
mov
cmps
push
add
in
neg
imul
cmp
icebp
arpl
fdiv
mov
jo
in
and
imul
mov
cmp
xor
dec
test
jl
aas
inc
sub
jmp
pop
sbb
fwait
push
push
aaa
out
and
pop
sahf
xchg
push
mov
add
push
hlt
jno
retf
das
movs
push
rep
pushf
in
cmp
or
addr16
js
shrd
movs
inc
nop
das
fld
clc
loop
xor
xchg
ret
les
jmp
enter
jne
sti
inc
dec
sub
pop
lods
inc
sbb
mov
mov
mov
adc
mul
and
xchg
(bad)
add
fsubrp
mov
xchg
lods
not
cmp
pop
cmp
test
mov
cmc
pop
and
(bad)
jle
xchg
xlat
js
sbb
sub
xor
mov
jl
push
mov
mov
mov
and
ja
lock
dec
dec
movs
rcr
lods
loopne
imul
fwait
jge
ss
cli
(bad)
mov
enter
cwde
dec
nop
mov
and
shl
test
scas
jl
xor
jb
dec
xor
jl
dec
mov
mov
call
xchg
inc
fadd
add
cmc
lods
jne
and
add
les
mov
mov
push
in
out
(bad)
jmp
loop
lods
mov
cld
or
fsub
adc
add
adc
or
mov
das
cmc
in
in
mul
js
fisub
add
jle
sub
pop
push
adc
les
push
js
lea
xchg
jl
mov
iret
fbld
out
xor
xor
inc
mov
in
out
frstor
cmp
aad
call
cmp
(bad)
dec
sub
sbb
inc
pop
pop
test
(bad)
je
xor
and
imul
movs
(bad)
shl
test
add
xor
pusha
sub
mov
outs
inc
sar
sahf
jne
test
jne
and
cmp
add
(bad)
addr16
or
xchg
stos
retf
xchg
pop
lea
scas
in
dec
jg
jnp
retf
in
mov
test
xchg
xlat
into
imul
out
mov
scas
mov
rol
adc
cmps
adc
ins
inc
push
push
ret
sbb
and
test
lods
int
adc
xchg
push
test
inc
lock
out
and
mov
dec
lods
adc
mov
out
popa
mov
imul
sar
ja
cmp
pop
aam
cmp
jo
repnz
aam
xor
xchg
xor
jae
lods
push
out
pusha
sub
cld
lock
xchg
adc
sbb
fcom
cdq
arpl
inc
bound
cmp
mov
out
call
jae
out
sti
mov
xor
sub
pop
test
push
add
pop
sbb
sub
push
xor
and
repnz
into
xor
pop
inc
enter
sbb
xor
nop
pop
inc
jbe
adc
stos
sub
(bad)
pop
dec
mov
push
std
push
push
movups
out
(bad)
mov
xchg
(bad)
les
adc
lock
mov
ins
xchg
jmp
cmp
sub
mov
xor
fst
ins
fs
mov
fld
push
jle
xor
shl
pop
scas
lahf
cmp
int3
dec
movs
pop
mov
add
sub
movs
fwait
sub
data16
xchg
lods
repnz
mov
in
inc
std
cmp
or
ret
sub
loopne
sbb
in
push
jb
pop
xor
int
dec
mov
jbe
xchg
jle
pop
jae
mov
adc
fst
pop
inc
or
or
ds
jb
popf
mov
inc
les
leave
imul
int
inc
lods
sbb
or
push
pop
dec
mov
clc
jbe
and
jne
add
mov
pop
xor
add
dec
dec
call
fdivr
push
push
jecxz
sbb
repz
std
scas
mov
xchg
aas
shl
leave
sub
mov
call
adc
stos
imul
in
xchg
adc
popf
imul
push
xchg
mov
lods
pop
push
fisttp
pop
addr16
fs
xor
es
repz
call
ss
cdq
hlt
jl
test
and
popf
scas
arpl
jne
xor
jecxz
jge
sbb
jp
add
imul
arpl
xchg
cwde
or
lods
jbe
mul
rcl
pop
mov
repz
dec
fst
adc
stos
adc
test
jne
sbb
cmp
mov
push
xlat
out
std
sub
and
hlt
mov
inc
stc
jle
pop
dec
mov
mov
das
bound
inc
sub
sbb
push
(bad)
jns
(bad)
push
and
mov
sub
or
xor
out
test
aam
ins
repz
arpl
dec
shr
and
dec
repnz
fst
mov
pop
js
out
mov
mov
inc
fstp
scas
test
mov
xor
xchg
mov
shl
test
cmp
leave
adc
aaa
pushf
inc
sbb
std
fld
ds
scas
mul
into
or
adc
pop
repz
sbb
retf
addr16
outs
sub
std
xchg
ds
sub
mov
scas
push
mov
add
ret
ins
pop
shr
jl
jbe
xor
cld
(bad)
sub
nop
and
aam
sbb
push
and
pop
test
addr16
movs
aaa
(bad)
jmp
retf
push
scas
pop
ficom
repnz
push
pop
cmp
in
pop
dec
out
pop
das
and
mov
sub
(bad)
outs
adc
enter
movs
out
pop
xlat
jnp
xchg
es
dec
ss
std
shl
nop
lods
or
push
push
cmps
cmp
pop
pop
hlt
sbb
xchg
and
xor
mov
jno
jecxz
retf
enter
cmp
jo
push
jnp
push
add
jae
mov
pop
addr16
jbe
xor
jge
xchg
xchg
and
pop
sub
mov
aam
fcmovnbe
push
test
jno
pushf
jb
adc
stos
inc
lods
sub
(bad)
(bad)
dec
cmp
xchg
mov
push
push
ret
dec
pop
movs
dec
mov
sub
pop
out
jmp
arpl
jl
inc
mov
cs
(bad)
es
movs
shl
call
xor
inc
push
sub
jg
out
cmc
aaa
pop
xor
jmp
loop
xchg
aaa
clc
and
call
jno
mov
adc
ja
out
mov
aaa
lea
jle
outs
aam
jecxz
das
ror
jmp
iret
sbb
dec
xchg
and
aaa
pop
xor
xchg
cmps
push
mov
rcr
cmc
rcl
je
xchg
pop
push
int3
xor
adc
int3
fild
ficomp
jae
xchg
in
mov
aad
and
cmp
outs
lods
mov
test
push
imul
fbstp
or
jbe
adc
cmc
movs
loop
test
or
pop
pop
mov
sub
and
(bad)
imul
add
mov
and
jae
mov
push
pop
test
fnstsw
or
lds
outs
mov
mov
into
ins
stos
add
aad
pop
and
fistp
(bad)
das
std
popf
movs
ins
push
imul
adc
push
push
and
xlat
and
fsubr
(bad)
pop
sbb
stos
aad
sub
push
xor
or
and
mov
xchg
adc
xor
mov
mov
rcr
je
mov
or
mov
inc
shr
ror
repz
add
out
inc
xchg
mov
mov
dec
mov
mov
mov
xchg
shl
sub
xor
dec
data16
fild
fmul
movs
addr16
mov
out
push
xor
inc
mov
jecxz
add
dec
pop
scas
mov
and
adc
pop
icebp
int3
mov
push
repz
mov
cmp
xchg
movs
int3
dec
jle
hlt
cmp
jnp
jne
enter
xchg
mov
jmp
int
push
in
push
dec
out
sbb
int3
sbb
xchg
mov
es
rcl
pop
imul
scas
push
mov
std
and
(bad)
ficomp
pop
rcl
leave
popf
adc
cwde
mov
retf
div
adc
xor
jns
fld
mov
mul
jmp
inc
cli
add
cmps
xor
push
scas
or
jae
jbe
jle
or
and
or
lods
jp
scas
cld
xchg
jb
push
sbb
scas
mov
mov
dec
xchg
cdq
rol
dec
std
test
and
cwde
dec
pop
mov
and
dec
hlt
cmps
pop
mov
pushf
mov
in
mov
outs
mov
loopne
test
das
mov
int3
pop
fsub
loopne
daa
xor
push
lock
sub
dec
cmp
mov
es
mov
cmps
pop
inc
xchg
sub
sar
xchg
mov
jg
inc
push
dec
jle
xchg
hlt
mov
mov
pusha
mov
and
cld
cli
push
and
movs
cld
push
sti
repnz
mov
in
cdq
repnz
or
fwait
inc
ins
mov
adc
imul
and
inc
inc
xchg
ret
out
push
dec
rcr
dec
and
imul
mov
and
test
xor
pop
outs
fist
mov
aam
movs
mov
fs
ja
add
pop
xor
int3
das
sbb
fbld
call
sub
(bad)
fimul
jmp
xor
and
arpl
or
aam
div
aad
mov
aaa
dec
daa
(bad)
sti
int
inc
lahf
outs
jg
mov
loop
ret
cdq
mov
mov
pop
daa
or
jl
test
imul
add
lahf
lods
push
lods
push
popa
xchg
jle
or
popa
shl
xchg
inc
ds
loop
pop
pushf
dec
adc
jne
add
not
es
cmps
rsm
jo
jbe
dec
push
mov
xchg
sahf
scas
mov
jns
mov
int3
inc
cmps
mov
movs
nop
ss
sub
aad
ins
lods
mov
sbb
cwde
fsub
jmp
cmp
clc
in
push
ins
scas
shr
fadd
pusha
pushf
push
xchg
in
or
popf
sub
dec
(bad)
inc
xchg
imul
or
mov
lahf
dec
fwait
jp
jmp
(bad)
std
iret
loopne
mov
adc
stc
lods
imul
jbe
repz
push
out
out
mov
loopne
mov
scas
mov
lea
leave
arpl
shr
xchg
pusha
sub
ja
out
xchg
mov
mov
scas
test
push
jnp
lods
outs
inc
(bad)
xchg
call
mov
sbb
lds
ins
sub
mov
nop
xchg
sti
fidiv
aas
popf
mov
dec
sub
mov
add
pusha
cs
ret
dec
push
or
add
dec
cwde
pop
or
push
jmp
repz
std
cmc
test
or
lea
mov
or
inc
sbb
xor
pop
pop
push
popf
jl
jae
push
and
ret
hlt
shl
fisubr
and
add
shr
hlt
inc
jo
or
scas
push
(bad)
shl
jle
cmps
sub
je
stos
push
or
shl
(bad)
sub
xchg
inc
adc
mov
nop
pop
pop
pushf
mov
push
mov
xlat
jmp
push
sbb
sub
mov
mov
cmp
lea
repnz
xor
clc
(bad)
enter
xlat
scas
retf
pop
push
ror
popa
movups
jae
jo
xor
in
jo
jo
and
pop
mov
sub
jg
out
clc
out
fdivr
sbb
out
cmp
addr16
cwde
cli
sbb
push
mov
inc
retf
and
gs
dec
repz
call
test
sub
fisttp
dec
test
push
(bad)
lds
cmc
inc
jmp
and
cmp
or
inc
scas
jne
outs
lahf
jnp
mov
cmp
sahf
mov
jp
cmps
jge
mov
icebp
inc
push
and
push
ja
push
adc
enter
popa
pop
jl
movs
dec
sbb
push
ins
mov
mov
pop
or
fwait
pop
js
dec
mov
stos
fisttp
sbb
add
aad
shr
enter
cld
retf
cs
pop
outs
paddusw
icebp
hlt
outs
adc
cmp
jl
jmp
pop
es
rol
jnp
fs
add
ja
ret
cwde
add
push
adc
inc
mov
add
pop
xchg
inc
and
pop
jge
pop
jmp
push
es
or
mov
xor
inc
fisub
inc
nop
jp
dec
xchg
addr16
fcom
inc
ins
dec
ror
jno
out
imul
or
shr
and
jmp
mov
push
lds
test
rcr
not
arpl
or
and
add
in
cmp
js
inc
xchg
add
jo
nop
xor
rcl
icebp
mov
fiadd
(bad)
push
popf
call
stos
out
dec
es
add
or
mov
jmp
test
cmc
(bad)
jbe
sahf
cmps
iret
mul
movs
xchg
lods
stc
jmp
call
shl
aas
shr
leave
enter
or
push
xchg
push
and
pop
mov
mov
adc
dec
mov
inc
pop
retf
call
or
mov
and
pop
popf
loopne
jb
push
out
push
inc
fs
add
hlt
sbb
add
adc
ret
add
stc
sub
and
inc
sub
pop
pop
jmp
inc
gs
mov
stos
xchg
cmp
sub
out
or
push
cli
sbb
and
mov
gs
push
or
fiadd
pop
cmps
jae
mov
xchg
cmps
mov
fmul
nop
inc
xor
or
in
sub
pmaddwd
(bad)
std
xchg
cmps
jmp
sub
shl
in
stc
loope
pop
in
outs
rol
das
cmp
xor
add
stos
inc
add
mov
and
mul
popa
arpl
inc
add
fmul
lods
in
je
fwait
jb
adc
and
adc
out
mov
retf
(bad)
stos
inc
enter
mov
or
addr16
cmp
push
inc
and
xchg
adc
jmp
outs
test
cli
mov
pop
test
int
loopne
jo
xor
xor
or
cmp
and
pusha
push
outs
mov
imul
fisttp
pop
xchg
jp
push
movs
test
or
iret
and
xchg
sub
inc
nop
and
loop
add
mov
inc
and
xlat
dec
mov
gs
cld
dec
test
xor
iret
mov
jle
punpckhwd
sbb
xor
test
loope
mov
mov
daa
mov
adc
(bad)
int
stos
(bad)
push
xchg
enter
sbb
outs
jo
outs
mov
dec
xor
jno
imul
stos
inc
leave
or
mov
and
push
retf
lods
sub
pop
lods
daa
ror
add
push
cmp
fidivr
clc
jno
sbb
add
sub
push
imul
push
or
dec
jle
dec
and
sti
cmp
add
sub
and
mov
dec
aad
fidiv
dec
std
stc
pop
gs
jg
cmovo
ss
dec
mov
ins
in
and
dec
leave
arpl
mov
in
rcl
and
xor
jl
xor
pop
pop
out
cli
mov
lods
mov
mov
xchg
adc
xchg
pop
mov
and
imul
fs
or
lods
es
jle
movs
dec
sbb
popf
pop
in
fwait
jl
mov
or
mov
adc
jmp
sbb
pushf
jae
jne
sub
outs
jmp
or
or
xor
sbb
push
mov
lock
fidivr
cmp
fist
hlt
xor
dec
imul
jae
test
dec
rcl
mov
fimul
jp
test
sar
and
cdq
popf
mov
mov
mov
and
(bad)
(bad)
jmp
pop
inc
sbb
xchg
das
not
cmp
mov
sub
and
rol
cmp
mov
repz
xor
push
nop
ror
jnp
gs
or
dec
sbb
or
and
test
dec
jnp
(bad)
in
xor
push
mov
lahf
mov
sub
dec
int
jnp
int
out
lock
mov
xchg
mov
nop
lock
into
xor
push
not
push
fsubr
jns
mov
sub
pop
add
cmovne
sti
or
test
and
(bad)
ss
ror
mov
jne
xchg
xchg
pop
jae
mov
xchg
push
sub
push
and
mov
cmp
push
test
jne
leave
add
outs
cdq
out
push
jmp
ror
in
jnp
test
loope
adc
aam
jae
sbb
aaa
mov
popf
push
mov
(bad)
cld
repz
adc
test
inc
cdq
out
dec
(bad)
sbb
fidiv
mov
fwait
sahf
cwde
enter
jp
xor
mul
mov
fldcw
sbb
jl
nop
daa
nop
scas
jns
and
or
dec
jbe
fidiv
rcl
test
jmp
add
inc
and
push
je
test
push
or
and
push
push
xchg
dec
sub
and
push
rol
cli
mov
je
xlat
and
(bad)
clc
xchg
je
add
dec
aaa
in
cmp
jmp
adc
es
ja
and
mov
xchg
mov
add
cmp
mov
int3
mov
clc
push
dec
mov
pop
iret
xchg
pop
les
ror
repnz
cwde
ins
sbb
and
dec
daa
sbb
push
push
lock
xchg
lods
xor
data16
dec
dec
adc
shl
sbb
sbb
stc
in
mov
sbb
cdq
mov
push
and
mov
fst
jp
sbb
mov
sbb
pushf
retf
mov
inc
mov
cmps
sub
jecxz
jns
push
aam
ret
sbb
sar
nop
hlt
hlt
fsub
loop
inc
ficom
cmp
inc
add
stos
repnz
adc
add
shl
mov
imul
icebp
aas
mov
mov
dec
push
push
cli
lock
mov
inc
push
or
adc
loope
cmp
inc
or
cmps
neg
pop
mov
popf
ds
jae
mov
jp
xchg
nop
stos
adc
fisubr
rcr
cwde
popf
arpl
sub
and
jp
cmp
and
(bad)
fiadd
cwde
int3
push
sbb
inc
xchg
adc
shl
jle
sbb
push
dec
retf
pusha
popf
pushf
lahf
xchg
push
dec
xchg
push
sub
or
add
and
and
cs
fmul
dec
jmp
pop
and
aaa
ss
adc
lods
xor
loope
(bad)
sar
daa
pop
movs
je
cmp
and
mov
lock
fld
outs
and
jb
or
jg
add
jne
push
pop
jmp
test
adc
sbb
(bad)
es
mov
cmp
lods
pushf
jp
push
psraw
int3
mov
xchg
sub
sub
inc
les
inc
mov
lods
xor
mov
dec
out
cmp
repnz
js
add
retf
leave
jmp
push
stos
jmp
mov
mov
mov
stc
and
add
outs
sbb
lods
mov
aam
imul
xchg
je
push
sbb
pop
aas
jecxz
test
mov
mov
(bad)
jge
sbb
inc
fisttp
xchg
aas
pop
push
int
mov
cmp
sub
inc
cmp
adc
xchg
into
stc
aad
fcomp
test
sub
bound
sbb
fimul
das
pop
xor
(bad)
jbe
cdq
psubsw
popw
xchg
mov
adc
in
adc
xchg
xchg
aas
stos
and
arpl
jl
mov
or
inc
sbb
push
push
pop
and
das
neg
sub
jmp
pusha
cmc
and
and
mov
cli
call
pop
xchg
mov
push
mov
punpckldq
dec
mov
mov
call
jmp
pop
pop
leave
mov
ror
mov
(bad)
loopne
and
pop
sub
xor
mov
cld
push
jg
div
aas
mov
sub
movs
loop
xchg
fsubp
dec
hlt
lock
sub
mov
jmp
jge
stos
pop
shr
retf
mov
test
faddp
dec
call
sub
in
push
fist
into
mov
mov
pop
adc
mov
xchg
mov
cmp
jmp
cmp
addr16
scas
fisubr
jg
jmp
inc
and
adc
mov
(bad)
in
pop
les
shl
jns
rcr
inc
dec
aam
jle
in
shl
stos
mov
fcom
mov
out
push
pop
in
push
ins
xor
jmp
jno
sub
cdq
inc
popf
iret
(bad)
mov
jge
cmp
shr
out
data16
mov
push
sbb
push
scas
and
retf
pop
mov
es
out
(bad)
bound
sub
and
add
mov
into
mov
repz
adc
or
xchg
int
aas
out
outs
fucomi
push
push
jl
mov
fmul
pushf
xor
cmp
pop
fdivr
push
push
jg
arpl
adc
fcmove
addr16
cmp
pop
imul
popf
xchg
retf
je
idiv
enter
or
dec
xchg
add
(bad)
jg
lds
adc
jnp
cmp
nop
sbb
xor
xor
and
arpl
or
iret
pop
pop
(bad)
jbe
dec
jmp
jne
sub
pop
cwde
push
loope
(bad)
retf
dec
adc
jle
mov
cmps
(bad)
aaa
pop
rol
aaa
rcr
adc
nop
nop
inc
pop
jecxz
loop
mov
in
stos
jne
mov
mov
pushf
arpl
test
scas
adc
xor
adc
ins
div
mov
sub
sub
dec
arpl
(bad)
jmp
jge
lods
mov
fwait
repz
mov
les
xor
outs
aas
cmc
dec
push
push
iret
mov
mov
out
hlt
push
xor
dec
dec
pop
xchg
cmp
cmp
out
pop
inc
sar
pop
dec
sbb
inc
scas
sahf
push
enter
loop
call
push
sub
call
es
dec
addr16
mov
rcr
cmc
adc
sbb
sbb
jmp
repz
dec
enter
es
outs
pushf
mov
arpl
cmc
and
lgs
dec
pop
adc
in
nop
and
loopne
add
mov
fsub
mov
xchg
mov
push
mul
pop
adc
mov
mov
es
and
push
call
jbe
dec
and
add
in
inc
stos
stos
inc
add
dec
es
jbe
push
(bad)
jge
imul
or
dec
imul
mov
jmp
out
xor
pop
or
les
in
mov
js
mov
std
retf
mov
jge
nop
fldenv
adc
or
and
lods
stc
and
mov
inc
cdq
cmc
xchg
jno
mov
or
mov
sub
pop
ins
mov
and
inc
cmp
stos
jl
(bad)
out
adc
add
add
dec
jp
das
add
jno
xor
cmp
cmp
call
jne
cmps
es
xchg
xor
adc
retf
push
push
ss
push
adc
mov
dec
stc
aad
push
imul
inc
shr
jge
fs
inc
icebp
pop
push
mov
inc
push
int
jae
adc
xor
pop
or
pop
in
mov
mov
cmp
jmp
mov
mov
movs
ss
mov
aam
and
xchg
mov
outs
and
or
leave
ja
(bad)
push
fldenv
mov
outs
iret
outs
loopne
inc
xchg
fcomp
psubusw
mov
repz
mov
mov
push
jp
call
mov
or
adc
(bad)
sbb
outs
jo
inc
retf
cmp
push
retf
ror
cdq
or
cmps
push
mov
(bad)
ror
out
cmc
adc
cdq
hlt
fcmovbe
jle
mov
cmp
pop
mov
jne
mov
lahf
adc
or
ret
or
jae
push
(bad)
mov
(bad)
push
cli
sub
(bad)
repnz
jbe
dec
scas
ret
mov
jae
add
mov
adc
inc
jg
xchg
push
aad
push
cli
repz
movs
inc
pop
lods
adc
outs
dec
ss
out
lods
push
pop
out
sub
push
sbb
xor
xchg
push
repz
aam
jns
adc
int
xor
mov
add
xchg
nop
adc
scas
out
je
mov
call
cld
out
xchg
and
test
jno
add
jl
xchg
out
repnz
movs
data16
dec
pop
jp
inc
sbb
cdq
imul
aam
ficom
cmp
sbb
test
fdivr
mov
cmp
ror
xor
mov
ret
push
xchg
(bad)
scas
mov
mov
pop
gs
jmp
cmp
xchg
push
mov
addr16
lds
mov
out
loope
retf
push
sub
adc
jmp
adc
mov
ficom
cmps
mov
ss
int
lahf
sbb
push
ins
ins
add
mov
push
mov
xor
push
cmp
pop
add
int3
in
jge
adc
ins
adc
adc
nop
mov
enter
dec
repnz
mov
ror
scas
lods
(bad)
xchg
scas
iret
mov
mov
aaa
dec
push
mov
mov
xor
mov
mov
mov
mov
cli
test
rol
push
and
dec
fwait
mov
jne
sub
out
jb
enter
xor
sbb
push
push
sbb
inc
mov
ins
inc
xchg
not
and
repnz
mov
ret
mov
push
pop
dec
retf
fbstp
popa
mov
repz
sub
add
sbb
jns
inc
loope
pusha
enter
in
adc
xchg
push
or
cmp
xor
(bad)
adc
stos
dec
sbb
in
sbb
adc
lods
movs
rcl
xchg
imul
add
xchg
ins
jns
pop
sub
sbb
mov
retf
cmp
adc
jno
js
aas
call
cwde
and
sub
push
(bad)
outs
cmp
adc
adc
adc
cmps
jge
in
out
lds
aam
xchg
pop
dec
ja
cmp
push
int
stos
ds
aam
ficom
cmp
jne
mov
mov
xchg
inc
pop
ret
lahf
int3
mov
pop
stos
xor
(bad)
push
cmp
push
push
sub
out
xchg
call
call
pop
mov
mov
adc
test
xchg
fisttp
loopne
loopne
add
dec
int
test
jb
je
cmp
sub
out
fwait
mov
lea
xchg
and
fsub
aad
cmovle
mov
push
repz
test
and
pop
xor
push
(bad)
inc
pop
mov
imul
push
in
xor
inc
push
(bad)
cmp
into
and
or
push
outs
push
loopne
adc
dec
icebp
or
cdq
sahf
dec
jae
in
movs
psubusw
pop
stc
clc
icebp
xor
dec
mov
into
dec
call
and
popf
mov
add
fidiv
add
mov
xor
lods
leave
pusha
in
or
jmp
into
pop
mov
sbb
aaa
(bad)
mov
adc
dec
mov
pusha
rol
or
mov
inc
sbb
mov
call
cmp
xchg
jns
pop
jg
xchg
or
pop
push
ss
int
dec
mov
das
sahf
mov
ds
xor
xchg
jmp
pop
pop
mov
xchg
and
dec
pop
fstp
mov
inc
js
ret
sar
xor
pop
ror
popa
xor
and
or
sub
aad
xor
adc
sbb
add
sbb
push
jmp
pop
xchg
je
(bad)
push
or
and
out
push
(bad)
pop
test
stc
push
js
bound
popw
jl
rol
fwait
aaa
inc
imul
fwait
inc
call
cmps
push
fidivr
mov
adc
xchg
xor
pop
cld
mov
out
mov
jb
or
or
fidivr
arpl
out
out
adc
lods
add
xchg
mul
mov
mov
add
push
scas
jne
ss
add
in
out
add
push
xchg
inc
cdq
push
xor
dec
stos
je
sub
xchg
out
mov
(bad)
imul
add
je
in
xlat
es
xchg
push
pop
ss
rcr
or
xor
xlat
loope
pop
iret
add
dec
cmps
lods
or
push
call
scas
mov
stc
jbe
scas
pop
leave
(bad)
push
jmp
lods
adc
jmp
iret
xchg
sbb
retf
into
dec
movs
mov
sub
ins
xor
adc
das
test
cs
push
inc
stc
sti
cmp
xchg
cs
jle
out
in
ds
xchg
pusha
mov
xlat
add
fsub
cmp
and
loop
dec
pop
mov
ror
int
push
cmp
mov
adc
lods
xchg
push
mov
jmp
jge
sub
dec
shl
xchg
cmp
pusha
out
scas
dec
push
and
xor
shr
mov
outs
pop
xor
jmp
add
jle
mov
lahf
popf
xor
hlt
xor
sub
test
(bad)
push
cmps
movs
fistp
fs
call
push
sub
lock
pop
and
pop
pop
pop
es
xchg
stc
mov
push
es
pop
scas
sahf
add
push
call
sbb
stos
xor
imul
inc
repz
pop
call
sahf
call
mov
mov
outs
cld
pop
movs
loopne
or
fnstcw
loop
add
pop
aaa
pop
ds
mov
push
cs
or
sbb
dec
mov
popf
inc
adc
scas
xor
pusha
cmp
in
xor
adc
ins
int
imul
xor
mov
and
les
mov
movs
leave
sbb
aam
push
lea
into
jg
push
push
stos
mov
(bad)
aam
dec
(bad)
dec
jne
mov
dec
adc
pop
sub
dec
push
dec
ss
and
addr16
pop
in
push
repz
shl
xchg
mov
push
xchg
sti
cmp
(bad)
adc
inc
outs
jo
stos
les
adc
jge
not
cld
mov
in
shl
sub
jnp
xchg
stc
xor
mov
cmp
aas
or
mov
mov
sub
dec
retf
jno
aad
fdiv
sahf
push
lods
bound
aas
push
pop
imul
loopne
add
xchg
cmp
cmp
xor
xchg
int
and
enter
xor
test
test
fbld
retf
js
aaa
adc
sub
add
xor
ja
iret
arpl
adc
jp
push
lock
stc
pop
adc
add
inc
xchg
inc
add
call
fidiv
cwde
call
loop
mov
lahf
or
cmp
push
dec
push
mov
mov
mov
out
fcmovb
add
bound
push
pop
stos
pop
mov
lea
or
pop
pop
leave
out
push
sub
shl
mov
cld
repnz
jge
pop
test
repnz
ret
movs
nop
dec
inc
repnz
in
jb
adc
mov
jmp
inc
xchg
js
popf
fdivp
hlt
mov
call
xor
xchg
mov
cwde
shl
inc
jno
pop
out
pop
cmp
std
inc
test
sbb
outs
pushf
xchg
mov
das
popf
int3
inc
mov
ins
mov
mov
dec
aad
pop
cdq
pop
icebp
jb
aaa
jno
jg
aam
cmc
or
call
imul
or
adc
sbb
jb
jle
add
lock
xlat
cmc
ins
push
dec
jb
push
rep
movs
call
add
adc
jbe
push
jge
cs
inc
ins
adc
movs
(bad)
mov
aaa
add
jbe
or
xlat
outs
fsub
add
inc
repnz
ror
mov
jnp
mov
cs
add
mov
xor
not
arpl
dec
xor
pop
mov
mov
into
pop
push
xchg
adc
jg
and
outs
repnz
dec
xor
cmc
add
cli
(bad)
mov
fsubr
es
dec
jmp
mov
mov
xchg
or
rol
adc
outs
mov
mov
lods
xchg
dec
call
sbb
sbb
call
js
or
lea
out
rol
int3
pop
popf
inc
aas
inc
loope
rcl
xchg
in
cld
fadd
xchg
aad
aas
repz
(bad)
xchg
xchg
jmp
or
ja
ss
and
and
jae
pop
xlat
xchg
pop
xchg
scas
out
mov
sahf
cmps
lahf
mov
adc
cmp
xchg
clc
xor
cli
dec
(bad)
jmp
pop
inc
xor
push
aas
xchg
xchg
mov
(bad)
adc
jno
jle
jle
add
imul
mov
xor
ins
addr16
xor
cmp
mov
push
std
dec
shl
cld
xchg
and
imul
fcmovu
je
jg
fnstenv
mov
or
call
(bad)
sbb
lds
sbb
es
cmp
pop
inc
idiv
lea
sub
inc
sub
call
scas
pop
cmp
mov
adc
cld
or
xchg
aas
push
mov
not
jge
daa
push
and
sbb
neg
leave
dec
sub
and
dec
lea
jb
sbb
pop
js
outs
rcr
fwait
mov
hlt
inc
sbb
push
push
dec
ja
in
pop
xor
ins
and
fs
(bad)
das
pop
js
or
mov
push
std
sbb
dec
cmp
push
xor
dec
jmp
pusha
cmp
clc
shl
fistp
mov
pop
add
fdiv
adc
add
cmps
or
mov
ficomp
xor
mov
cmps
aaa
xor
enter
inc
xchg
xlat
push
pop
ror
cli
jne
jnp
frstor
adc
xchg
sbb
cmp
push
mov
mul
stc
mov
push
pop
xor
push
outs
mov
loopne
cmp
dec
sbb
les
pop
rcr
scas
loop
leave
xor
daa
xchg
int3
loope
and
push
stos
das
movs
mov
xchg
(bad)
push
add
stc
dec
lea
xchg
imul
call
mov
popf
inc
and
fimul
les
rcl
cmp
cdq
repnz
popf
dec
mov
add
(bad)
xchg
jmp
push
into
push
mov
xchg
movs
loope
inc
mov
(bad)
lock
xchg
lods
stos
dec
movs
das
jb
cmc
cld
mov
icebp
dec
dec
mov
xchg
das
pop
xor
stos
fdiv
jle
push
pushf
in
adc
(bad)
out
aaa
movs
inc
dec
xor
adc
lods
adc
add
in
mov
shl
mov
int
jp
das
mov
(bad)
das
outs
imul
cli
(bad)
stos
retf
mov
cmp
dec
out
add
in
loop
sahf
xchg
daa
rol
fild
xor
and
inc
out
sub
add
jecxz
ret
in
inc
and
dec
mov
lds
popa
loope
stc
push
sbb
dec
repz
dec
and
dec
bound
or
div
cmps
out
enter
push
mov
lds
mov
push
rol
sti
mov
sub
jbe
and
cmc
sbb
jns
or
test
adc
test
and
out
pop
mov
xor
sub
cmp
inc
lds
mov
cdq
push
in
mov
popf
cmp
push
icebp
mov
jmp
ins
out
push
sbb
data16
bound
ret
jo
sbb
jmp
xor
mov
mov
pop
dec
adc
xchg
pop
shr
and
stos
movs
pop
push
push
in
dec
sbb
movs
sbb
sub
mov
sub
sar
sub
imul
popa
ja
jmp
inc
shr
les
(bad)
loope
cmp
mov
xor
movs
xchg
test
mov
xchg
call
inc
dec
enter
xor
pop
pushf
arpl
(bad)
popa
(bad)
into
dec
mov
pop
call
es
fild
mov
jns
sbb
pop
xor
inc
div
in
gs
cwde
pusha
out
adc
mov
out
pop
ins
adc
mov
mov
mov
(bad)
push
test
icebp
(bad)
aaa
and
pop
leave
sti
mov
int3
cmps
jb
hlt
ss
ja
(bad)
aad
imul
sub
and
adc
jmp
sub
mov
and
sti
adc
sbb
sbb
retf
or
shl
movs
push
cmc
adc
into
fcomp
push
pop
pop
jns
add
dec
(bad)
xlat
pop
and
inc
fstp
sub
test
inc
inc
jmp
jno
movs
fimul
push
sub
enter
rcl
cld
ds
in
xchg
outs
iret
mov
mov
dec
mov
shr
rol
xchg
repz
outs
jno
mov
repz
xor
cdq
or
mov
cmp
sub
pop
sbb
fstp
cvtdq2ps
inc
and
pop
stos
rcr
sti
xchg
dec
pop
ja
dec
jmp
out
rol
(bad)
mov
pop
sbb
xor
mov
outs
popf
addr16
js
rcl
pop
repnz
and
jl
jge
and
xor
mov
mov
jl
stos
repz
sbb
inc
out
fcomp
js
movs
jo
pop
les
das
push
pop
fimul
fldenv
lods
repnz
xchg
add
jecxz
aas
mov
mov
pusha
sub
pop
cmp
sub
push
push
stos
mov
dec
retf
xor
aad
mov
lahf
mov
pop
bndldx
xor
pop
sar
jnp
adc
mov
test
pop
repnz
mov
jecxz
ss
sub
jae
ror
std
leave
mov
pushf
push
lea
or
xchg
ds
(bad)
jmp
or
push
shl
adc
pop
ret
mov
les
and
idiv
adc
dec
fcmovu
ins
cs
jnp
xchg
sti
add
neg
not
rcr
and
sub
in
sbb
xchg
int
dec
test
push
loop
mov
inc
push
hlt
enter
sahf
sbb
cmp
repnz
sti
or
add
sbb
popa
pop
call
and
les
pop
cs
xor
pusha
cmpps
pop
js
mov
test
xchg
jno
out
into
pop
fldenv
test
mov
xchg
xchg
iret
ds
fsubr
fcmovnu
mov
sbb
mov
cli
push
and
sbb
aaa
jo
adc
pop
mov
mov
xchg
gs
rol
add
or
push
stc
dec
fwait
pop
jmp
xlat
(bad)
pop
inc
jg
or
inc
sahf
cwde
es
and
stos
mov
xor
in
popa
jmp
fld
add
dec
(bad)
jmp
xor
dec
enter
scas
std
pop
scas
popa
mov
cli
pop
icebp
cwde
sbb
in
sbb
dec
mov
jmp
daa
mov
adc
(bad)
dec
ja
fisubr
pushf
daa
lock
or
repz
and
(bad)
fwait
icebp
call
adc
push
dec
call
clc
sbb
adc
mov
inc
mov
dec
retf
push
pusha
in
sub
sti
push
pushf
mov
jae
sbb
xor
stos
adc
jle
and
jnp
cmp
or
push
movs
cmp
mov
cmp
jmp
mov
cmp
pop
test
outs
cmp
js
loopne
mov
repz
xor
xchg
xchg
push
inc
pop
sti
repz
scas
mov
mov
int3
jmp
gs
mov
jmp
push
xor
push
fstp
add
fild
sub
jns
push
pop
stos
loope
scas
jno
out
dec
mov
or
cmps
xor
out
imul
lods
faddp
fisttp
iret
xchg
pop
test
test
je
pop
inc
mov
xlat
push
mov
ret
out
inc
(bad)
mov
add
leave
fwait
mov
inc
sub
fnstsw
cmp
addr16
fistp
mov
cli
lods
pop
mov
jg
push
mov
mov
fild
imul
movs
inc
fcomp
bound
or
test
and
cmp
cmp
in
xor
push
dec
mov
rol
fild
nop
mov
jae
lods
test
out
cli
hlt
pop
xchg
je
cmps
pusha
mov
inc
aas
sbb
call
xor
imul
mov
inc
pop
mov
repz
sub
push
cmps
push
call
dec
loope
jae
pusha
test
gs
xor
and
xor
inc
jns
test
or
cmps
mov
scas
dec
stos
xor
xchg
lea
aaa
daa
dec
enter
les
jns
xor
in
inc
and
and
push
(bad)
inc
jmp
cld
adc
push
test
inc
fisubr
out
rcr
(bad)
(bad)
pushf
stos
pusha
jp
add
push
mov
cmps
mov
gs
or
scas
add
mov
sub
dec
popa
xor
icebp
cmp
sahf
push
lea
stos
ds
enter
jns
idiv
xchg
les
daa
and
in
jo
adc
shr
aas
push
not
(bad)
nop
push
in
(bad)
test
sub
jl
adc
dec
packssdw
add
aaa
out
xor
mov
and
scas
mov
push
pop
inc
mov
mov
sub
and
or
outs
imul
test
enter
or
loopne
test
clc
mov
mov
mov
mov
inc
int
add
xchg
add
enter
jp
jg
inc
sbb
xchg
add
or
popa
and
test
and
add
xchg
mov
mov
outs
sbb
scas
rol
add
pop
jle
retf
or
fistp
cmp
inc
cmp
cdq
pop
cwde
in
fstp
fild
xchg
into
ss
ficomp
jae
xchg
dec
mov
add
cmp
rcr
outs
in
fadd
push
sub
or
or
aad
out
fwait
sub
mov
stos
mov
leave
xchg
push
fsub
push
into
fild
sahf
pusha
retf
jb
int3
xor
inc
push
js
cmp
mov
cmp
popf
repnz
lock
xor
(bad)
cld
or
aam
adc
add
imul
iret
mov
and
add
sbb
jg
icebp
adc
or
or
outs
(bad)
xor
jns
add
mov
popf
fsub
pusha
call
pop
push
retf
dec
cmp
loope
mov
sbb
dec
adc
mov
and
mov
dec
fs
imul
ds
jge
pop
xchg
pop
sbb
outs
pop
pop
cmp
sbb
stos
and
add
nop
fwait
pop
aaa
jns
fld
jg
xlat
xchg
or
into
sbb
shl
add
ret
jle
mov
xor
cmp
cmp
ret
repz
jae
cmp
out
cmp
push
jno
push
and
cmc
xor
scas
test
xchg
mul
xor
sub
shl
loop
push
xchg
xchg
out
xor
inc
dec
ret
mov
and
inc
push
dec
sahf
dec
jmp
jmp
ror
pop
test
addr16
jmp
in
dec
lahf
mov
adc
sbb
sub
clc
lea
pop
push
pop
out
stos
outs
cmp
loope
xlat
push
jmp
icebp
and
std
out
sti
and
sub
mov
sbb
pop
jae
sbb
lea
cdq
loope
out
cmps
loope
mov
jae
lock
cs
xchg
int
lea
aas
sbb
dec
mov
shr
cmps
(bad)
int3
xchg
loope
mov
xchg
mov
mov
stos
and
mov
mov
test
(bad)
cmps
movs
and
push
cmp
fcmovnb
loopne
mov
mov
ret
dec
(bad)
jne
inc
rep
or
adc
lods
ss
or
inc
jmp
add
xchg
ins
(bad)
xorps
fst
xor
or
jno
leave
xchg
(bad)
aam
mov
mov
push
pop
xchg
pushf
ss
push
jmp
xchg
inc
adc
in
mov
leave
pop
jmp
stos
clc
test
jmp
jb
mov
push
sar
das
adc
(bad)
mov
in
jmp
mov
jbe
fdiv
or
mov
inc
pminsw
mov
mov
dec
fild
je
xchg
gs
ins
movs
jb
push
mov
repnz
xor
imul
inc
out
shl
jg
(bad)
or
jmp
(bad)
hlt
pop
add
mov
scas
and
dec
outs
jo
push
stc
inc
mov
fistp
jmp
shr
cdq
push
dec
(bad)
ret
jno
mov
pop
js
mov
mov
leave
lea
int
lods
mov
mov
arpl
lods
nop
call
push
leave
lea
add
sar
jl
mov
push
mov
cmovp
ss
jnp
leave
dec
in
cmp
adc
push
nop
dec
lss
sar
out
xchg
out
lahf
sbb
jbe
sub
mov
(bad)
dec
xor
sub
add
pop
adc
mov
inc
xchg
pop
mov
daa
ins
xor
hlt
iret
movs
xchg
jo
arpl
and
inc
sbb
aam
test
xlat
or
jmp
xchg
ss
dec
and
shl
bound
and
or
pop
into
or
sbb
ja
outs
mov
add
bound
(bad)
jp
push
leave
cmp
cld
mov
in
fisubr
out
call
jno
adc
dec
sti
jb
pop
jae
sub
lods
pop
(bad)
mov
mov
cmp
sar
ret
mov
rcl
sub
jg
sub
mov
arpl
pop
test
bound
pop
das
push
inc
loop
push
retf
push
inc
and
cmp
inc
jo
xor
ja
cdq
pop
in
xchg
test
(bad)
stos
call
shl
mov
fsubr
mov
mov
mov
sti
mov
test
dec
cmps
or
xor
dec
add
iret
xor
ficom
iret
pop
dec
and
or
xchg
and
inc
mov
sbb
hlt
jmp
add
and
ds
bound
jmp
add
ror
or
js
ds
and
inc
in
push
pop
shl
or
pop
cmp
inc
ds
pop
lods
test
es
aam
(bad)
mov
adc
cs
cli
out
add
pushf
std
dec
adc
adc
add
int3
or
(bad)
sbb
fcomp
jge
arpl
mov
xor
cdq
mov
pop
(bad)
push
xchg
xor
pop
mov
lods
cmps
lock
xchg
lea
pop
and
test
jp
dec
dec
(bad)
adc
push
popf
sbb
inc
mul
mov
data16
sbb
and
mov
mov
xchg
and
push
xor
inc
pusha
sub
pop
add
xchg
inc
(bad)
fcomp
mov
mov
mov
fucom
mov
fdiv
retf
std
adc
jno
shl
clc
lea
inc
iret
sbb
gs
jge
into
(bad)
mov
pop
push
cmps
mov
retf
jmp
dec
ja
stos
jp
cwde
test
pop
stc
push
pop
jmp
pop
xchg
cmc
dec
push
inc
add
mov
mov
test
add
cs
stc
rcl
push
sahf
inc
into
sub
mov
xchg
repnz
mov
imul
jl
push
in
std
xlat
adc
mov
add
sub
leave
out
push
shl
movs
push
or
fadd
in
mov
mov
jnp
fimul
push
and
adc
into
arpl
std
xchg
or
adc
int3
outs
neg
inc
aaa
or
cld
leave
xchg
dec
ds
cmp
and
push
lea
cmps
(bad)
gs
and
xchg
sbb
out
int3
add
lds
lods
sahf
(bad)
pop
fwait
ret
push
pop
jle
adc
test
aas
cli
mov
sub
mov
mov
ret
push
ins
lock
imul
pop
in
test
hlt
and
add
out
cmp
pop
and
push
add
in
mov
hlt
scas
mov
dec
xor
xor
mov
imul
mov
ds
test
mov
idiv
popa
neg
or
fsubr
sub
call
loopne
jbe
aaa
mov
adc
test
repnz
fnstcw
jnp
rcr
in
dec
call
pushf
mov
and
repnz
mov
mov
std
inc
xchg
movs
pop
xor
icebp
movs
inc
xchg
and
cmps
mov
dec
pop
cdq
fstp
mov
jae
xor
and
and
hlt
jle
(bad)
mov
mov
mov
not
test
fsubr
push
fbld
inc
fdivp
retf
jle
xor
pop
cmp
mov
and
xor
mov
in
pushf
jno
push
sub
cmp
sub
jl
sbb
dec
dec
sbb
adc
cmp
xchg
call
mov
hlt
and
sti
or
jnp
ficomp
mov
xor
and
cs
mov
daa
ins
xor
fucomp
push
sbb
and
cmp
jp
jecxz
mov
dec
pushf
xor
(bad)
fsqrt
sub
add
int
push
dec
pop
test
xor
enter
cmc
push
call
push
test
imul
test
sub
and
fmul
and
lods
mov
ret
and
ss
das
call
xchg
stc
loope
fucomp
push
push
lock
cmp
xchg
adc
mov
cs
dec
icebp
mov
aaa
jg
dec
push
adc
sbb
shl
clc
iret
jge
push
js
mov
xor
fnsave
mov
(bad)
mov
mov
jnp
ds
sbb
pop
dec
and
jge
lds
cmp
sub
adc
mov
adc
ror
and
sub
sub
xchg
and
push
xchg
clc
cwde
jmp
sbb
inc
sbb
test
xchg
movs
push
mov
pop
nop
ret
cli
rcl
inc
xchg
icebp
pop
dec
clc
cli
daa
aaa
ret
sbb
pop
outs
dec
in
(bad)
pop
mov
jle
sbb
cli
mov
cld
pop
inc
mov
in
xor
sar
outs
fisubr
or
or
addr16
sbb
dec
inc
stc
xchg
in
add
out
repnz
bound
(bad)
jo
das
pop
(bad)
in
out
mov
int3
prefetch
or
cmp
popa
outs
push
pop
ja
jns
stos
mov
repnz
(bad)
sub
jae
add
rcr
das
cwde
mov
inc
pop
jb
or
mov
sub
mov
pop
test
jle
mov
pushf
aam
pop
les
movs
cli
inc
xor
mov
shr
pop
and
xchg
scas
ret
ror
ret
push
sbb
outs
sub
mov
push
sbb
shl
aas
cmp
push
rcl
ss
(bad)
sbb
in
imul
sub
imul
pop
sbb
(bad)
pop
loopne
cmp
push
pop
out
pop
retf
push
mov
mov
fnstcw
add
inc
mov
fcmovne
stos
mov
and
sub
sbb
xchg
adc
imul
mov
ficom
jmp
(bad)
pop
repz
(bad)
addr16
dec
push
jno
sub
xchg
jo
cwde
pop
add
(bad)
imul
aas
ret
hlt
xchg
rcr
dec
sub
sbb
or
push
jl
mov
sub
nop
movs
addr16
pusha
pop
sbb
(bad)
into
push
cld
mov
xchg
(bad)
arpl
add
mov
cli
repz
push
cs
pop
xchg
cmp
fnstenv
sub
lds
jae
inc
or
mov
jae
xchg
sub
and
mov
or
stos
outs
mov
or
xchg
pop
sbb
ss
sti
mov
xor
cmp
shr
hlt
addr16
pop
xor
movq
popf
inc
aas
(bad)
push
push
fcomp
(bad)
xor
fucom
test
adc
stc
xor
not
dec
inc
addr16
pop
addr16
in
inc
call
nop
xor
mov
cli
push
push
dec
sbb
inc
lahf
in
cld
enter
bound
shr
dec
sub
xor
lea
lods
mov
xchg
loop
into
loop
jp
fs
in
or
cmps
xor
pop
(bad)
sahf
imul
push
mov
sub
adc
pop
stc
call
inc
push
dec
pusha
aad
jge
dec
pop
adc
inc
push
pop
mov
fadd
daa
jl
test
mov
arpl
mov
mov
stos
sub
xor
and
push
jle
ins
pop
push
cmps
lods
aam
xchg
fidivr
(bad)
mov
cmps
loopne
inc
jo
mov
cmp
dec
fwait
loope
stos
add
mov
push
push
mov
mov
push
in
gs
xchg
ja
inc
and
jl
cmp
ss
jnp
push
sbb
mov
call
aam
sbb
dec
in
clc
xor
adc
sbb
sub
dec
cmp
cdq
push
mov
jo
cli
div
xchg
xlat
jbe
das
ss
sbb
push
pushf
and
adc
lods
outs
sti
aaa
sbb
rol
and
out
(bad)
jnp
pushf
sahf
(bad)
(bad)
xor
in
pop
sub
jecxz
and
push
adc
pop
cmp
cwde
das
and
mov
fidiv
scas
cli
clc
ss
rol
xchg
rol
repnz
hlt
xor
adc
in
shl
test
or
repnz
gs
pushf
mov
arpl
hlt
or
xor
cli
jmp
sub
jbe
cmp
jae
and
pop
mov
aas
ss
adc
cmp
push
add
push
retf
adc
xchg
pop
xor
and
jle
lahf
jb
ins
mov
jns
call
iret
sbb
dec
outs
das
lock
std
jns
jmp
xchg
mov
mov
paddw
pop
in
popf
push
mov
dec
movq
sub
enter
mov
bound
adc
aaa
inc
push
(bad)
in
ins
pop
xlat
shl
cli
inc
int
push
xchg
popa
cdq
pop
xchg
mov
mov
mov
cs
mov
dec
sbb
test
cmp
lahf
mov
dec
repnz
jp
imul
mov
sub
or
push
jmp
retf
mov
ficom
out
or
lds
and
jmp
xor
dec
sar
mov
push
retf
inc
cdq
sub
in
rcl
and
mov
enter
(bad)
ss
out
jb
and
shr
jbe
xor
dec
stc
pop
das
jmp
out
dec
fadd
outs
pop
test
mov
mov
xchg
mov
fidivr
jmp
adc
dec
stos
push
inc
or
inc
jmp
cmp
xchg
jmp
test
lahf
stc
mov
stc
ficom
in
cld
cdq
dec
das
loopne
ins
mov
inc
pop
movs
adc
mov
mov
pop
jmp
clc
rol
xchg
dec
jae
aas
push
mov
cmp
inc
ins
nop
cmc
mov
push
sub
mov
out
out
stos
sahf
fwait
or
data16
push
mov
pop
xchg
dec
pop
hlt
push
pop
pop
popf
fdiv
sub
mov
stos
adc
jp
or
test
aas
mov
jo
sbb
mov
jns
out
xor
and
jg
imul
test
stc
cmp
and
inc
jo
loop
mov
aad
movs
push
fld
sub
sahf
lock
mov
es
test
dec
xor
les
test
in
add
inc
dec
call
das
sub
mov
loop
and
dec
jp
mov
add
jl
fadd
out
pop
les
aam
cmc
sbb
add
mov
xor
shr
mov
push
push
out
jmp
xchg
leave
sar
and
sub
fst
mov
and
xlat
push
and
push
ins
push
lds
imul
mov
idiv
push
ret
pop
pop
aas
mov
or
clc
mov
or
push
xchg
in
aad
lds
(bad)
ins
mov
pop
aad
push
adc
cs
sbb
ret
push
adc
leave
inc
xchg
and
pop
mov
das
inc
cmps
rol
push
mov
push
sub
or
cmp
fcmovne
lds
push
inc
fisub
mov
iret
jge
pop
mov
adc
lods
stc
fwait
adc
mov
fdivr
dec
sbb
dec
dec
push
mov
(bad)
sub
mov
sahf
pop
xchg
dec
jl
std
stos
loopne
cmp
xor
xor
mov
leave
int3
rol
sar
int
inc
mov
cmp
outs
mov
pushf
mov
int3
cmp
fwait
jno
lea
imul
leave
xor
inc
mov
loop
inc
fnstcw
jge
movs
out
addps
fld
stc
mov
(bad)
sbb
sub
jmp
jecxz
or
dec
dec
xor
add
call
nop
pop
rol
aaa
leave
xor
add
mov
gs
ins
gs
nop
xor
in
fld
ret
pop
das
fisubr
popf
jge
in
ins
xchg
mov
jnp
inc
jne
jl
neg
xor
inc
cmp
test
sti
sbb
inc
imul
ins
fdivr
pop
(bad)
xor
imul
mov
rcl
push
xor
outs
mov
jo
push
or
cmc
push
push
xchg
dec
ds
and
inc
out
pop
out
imul
inc
inc
fwait
mov
ds
retf
addr16
or
outs
mov
mov
jnp
xor
popa
shr
pushf
not
sbb
xor
cmps
cld
sbb
mov
(bad)
arpl
sub
loopne
sbb
push
jns
(bad)
jbe
or
repz
not
xor
jmp
(bad)
fnstcw
jl
xor
jl
or
jae
pop
xor
fmul
dec
out
ds
stc
xor
pop
lds
and
das
sub
out
xor
push
in
in
aam
scas
aaa
mov
pop
add
rcl
add
inc
inc
mov
and
retf
inc
add
fmul
dec
pop
icebp
scas
mul
or
add
pop
in
add
rcl
jo
or
xchg
call
mov
mov
xor
aad
push
(bad)
scas
mov
lods
xor
inc
cmp
adc
shl
scas
dec
sub
inc
push
popa
fcom
cmps
sub
popf
mov
inc
jb
push
jb
shl
mov
cdq
mov
ds
mov
xchg
mov
mov
add
jae
mov
call
imul
cmp
inc
mov
pusha
xlat
div
lea
clc
shr
mov
xchg
or
dec
and
mov
push
cmps
movs
jno
outs
gs
inc
mov
test
add
mov
sar
push
inc
or
mov
sbb
dec
sbb
pop
push
fimul
add
push
mov
aas
dec
not
adc
push
ins
call
push
ret
out
sub
mov
jne
div
mov
jp
jnp
pusha
push
outs
repz
jae
and
add
jle
xor
xor
sbb
jl
pushf
jne
mov
pop
or
sbb
imul
repz
mov
push
sub
mov
and
test
call
nop
push
and
daa
mov
and
ins
inc
int3
pushf
js
jmp
pop
push
inc
lahf
sbb
jle
sub
out
dec
pop
idiv
in
int
movs
push
xchg
mov
sbb
xor
sub
out
inc
add
cmp
mov
fisttp
ret
pop
or
aam
push
lahf
ja
movs
push
aad
(bad)
int
call
or
or
cmp
sbb
jecxz
cmp
add
ins
sub
shr
aas
out
fst
and
xor
mov
rol
(bad)
int3
inc
mov
mov
jb
adc
pop
into
aad
ins
data16
mov
dec
fidiv
ret
sub
stc
sbb
data16
ja
daa
cwde
xchg
mov
leave
jle
adc
jae
dec
loop
aaa
shl
mov
inc
loope
jl
xchg
fbld
mov
lods
jns
mov
push
cdq
or
inc
pop
sti
pushf
cmp
jp
inc
aad
xchg
inc
loop
hlt
mov
mov
ret
lahf
jo
outs
ret
or
lods
rcr
popa
xchg
fwait
and
xlat
imul
jae
and
lock
ss
lea
or
leave
pop
lods
or
xchg
test
shr
inc
mov
pop
sahf
neg
inc
or
push
daa
aam
mov
std
cli
pop
fild
xor
jbe
mov
add
out
cmp
jmp
test
(bad)
jno
xchg
shl
out
cmps
or
jb
xor
fldcw
loopne
movs
je
pop
mov
cmp
dec
add
rcr
add
pop
fs
cmp
retf
mov
and
xchg
pop
or
loopne
ret
pop
rcl
mov
fucom
add
jo
cmp
imul
cmps
sbb
mov
inc
test
xchg
imul
mov
sar
xchg
call
mov
aad
pop
idiv
dec
dec
sbb
je
xor
adc
mov
xchg
jno
pop
mov
xor
dec
and
out
or
fisubr
jle
sub
push
add
pop
aam
test
mov
dec
xor
icebp
movs
xor
push
pop
push
in
mov
cli
sbb
cmovp
jmp
mov
popa
sbb
pop
sti
xchg
adc
out
jb
and
pusha
mov
outs
(bad)
mov
pop
aad
push
(bad)
scas
je
stc
in
xchg
fistp
sbb
mov
bound
fs
test
xor
xchg
sub
and
shl
mov
fwait
dec
add
data16
push
xchg
jbe
jp
stos
shr
cmp
mov
mov
mov
int3
sbb
mov
cmps
outs
and
test
stos
mov
iretw
dec
lods
ja
jne
fwait
jb
(bad)
xchg
push
sub
mov
jecxz
jmp
push
dec
add
mov
pop
ret
rcl
mov
push
push
jge
retf
(bad)
into
sti
dec
xchg
sbb
gs
push
jno
mov
mov
lea
iret
xor
cmps
repnz
jg
mov
pop
pop
clc
mov
addr16
cmp
sahf
xchg
jbe
in
xchg
push
cmp
(bad)
mov
dec
(bad)
icebp
stc
adc
sar
fbld
(bad)
sbb
mov
add
das
adc
cmp
sar
das
cmc
(bad)
sub
ss
jmp
rcr
sub
stos
cdq
out
inc
adc
repz
lahf
or
xchg
imul
jmp
stos
and
mov
adc
jae
loope
sub
and
loop
repnz
add
pop
jns
movs
mov
fistp
stos
add
xchg
outs
pop
in
nop
dec
hlt
sbb
outs
adc
mov
in
mov
mov
scas
xchg
ja
inc
shr
fadd
cmp
je
call
pop
or
jns
rcr
pop
adc
js
jl
xor
out
and
daa
popa
mov
call
mov
test
xor
call
or
push
clc
repz
add
shl
sbb
hlt
idiv
fdivrp
cmps
sub
adc
xchg
jne
cmc
dec
sub
xor
cmc
jle
mov
imul
jbe
or
sbb
(bad)
push
and
sbb
mov
mov
sbb
or
mov
jnp
xlat
mov
mov
dec
sahf
retf
fnstcw
pop
push
mov
(bad)
hlt
outs
xlat
cld
inc
jnp
jp
ins
repnz
sbb
pop
or
dec
mov
cli
jg
movs
pop
and
or
mov
fs
jp
in
nop
mov
push
sbb
and
hlt
ds
cmps
jne
(bad)
addr16
or
ins
lahf
popf
and
jnp
cmp
ret
pop
inc
sub
test
pusha
jbe
sbb
and
inc
scas
fsubr
cwde
jns
jne
adc
xor
mov
fbstp
cwde
or
inc
fprem
es
push
ror
aad
or
imul
lea
push
out
mov
mov
inc
test
not
pop
jne
fst
xchg
xlat
movs
je
clc
xor
clc
push
or
mov
mov
fisub
repnz
push
pop
and
mov
xchg
jmp
mov
push
or
dec
das
cdq
in
rol
cmp
inc
mov
adc
xor
or
and
(bad)
cld
clc
cdq
jb
dec
scas
mov
push
cld
jp
movs
movs
lds
or
mov
gs
xchg
stos
or
mov
or
adc
cmp
imul
fsub
ins
js
add
into
add
mov
mov
das
(bad)
ja
xor
mov
jnp
outs
inc
js
imul
sub
inc
xor
mov
in
jecxz
call
out
leave
sub
jo
cmps
ffree
cwde
jmp
sub
and
iret
into
sahf
cmp
jge
lock
pop
mov
mov
sahf
jne
test
push
adc
movs
dec
pop
adc
xchg
shr
inc
mov
nop
fdivr
adc
xchg
loop
retf
or
clc
cli
js
scas
shl
sub
dec
push
shr
xchg
jmp
arpl
retf
jno
push
in
or
mov
dec
pusha
add
rcr
dec
ret
fldcw
es
or
js
and
and
push
mov
jg
dec
push
sar
fwait
jl
scas
cli
shr
jb
stos
xor
(bad)
out
xchg
xor
push
aas
push
xchg
pop
shr
pop
cdq
push
loop
in
pop
stc
imul
ret
inc
xor
adc
sysenter
cmps
xor
dec
repz
cmc
(bad)
test
adc
int3
test
imul
pop
inc
enter
je
data16
in
sbb
mov
pop
or
lock
sbb
push
pop
push
cdq
gs
into
(bad)
push
div
push
pop
arpl
mov
push
cwde
xor
pop
pop
imul
mov
add
lods
cdq
rcr
lock
dec
dec
xchg
push
or
pop
fcom
daa
mov
jl
cwde
sbb
lock
psubusb
call
les
dec
push
pop
jecxz
mov
dec
cmp
(bad)
nop
fwait
sti
cmps
scas
fidivr
push
aam
aam
mov
in
push
pop
sub
dec
push
in
loopne
movs
mov
cld
pop
test
xor
cmp
and
inc
pop
or
xlat
inc
mov
ins
popa
cmp
pusha
cld
xor
or
jne
dec
ins
push
sub
addr16
push
inc
sub
xchg
xor
mov
dec
inc
jbe
push
or
sbb
out
into
push
adc
fdivr
iret
sahf
rcr
push
adc
lods
(bad)
xor
xchg
push
not
iret
pop
jae
xchg
pop
cmp
mov
call
adc
jmp
add
mov
lds
xchg
and
mov
xor
push
fsub
sub
xchg
cmps
cmps
imul
aaa
sbb
cmp
mov
nop
push
xor
xor
pop
movs
mov
jmp
sbb
or
push
push
outs
jb
loop
lods
ins
loop
jle
xchg
paddw
cmp
mov
cmp
jb
(bad)
retf
and
imul
cmp
xlat
pusha
(bad)
and
adc
loop
dec
scas
es
and
push
stos
pop
mov
shl
pop
in
adc
cwde
ja
add
push
mov
repz
fcomp
ins
stos
retf
mov
retf
bound
cmp
xchg
int3
add
out
mov
jb
sbb
inc
bound
scas
pop
cmc
sbb
out
sbb
push
xor
iret
into
xor
ja
xor
add
lea
into
push
(bad)
push
cmps
sahf
sub
jg
inc
sahf
inc
inc
in
jmp
push
adc
sub
add
lea
(bad)
mov
fisttp
loopne
pop
fild
dec
mov
mov
stos
xchg
int
mov
bound
outs
ret
cmp
lds
mov
mov
mov
xchg
jle
jno
mov
pop
lds
push
mov
xor
push
or
retf
jle
fcom
mov
cdq
jmp
jne
sub
add
cmp
jl
mov
out
dec
push
stos
add
enter
or
outs
hlt
in
outs
push
fucomi
push
or
(bad)
in
test
(bad)
cmp
push
mov
pop
movs
movs
push
ds
test
sti
or
push
xchg
or
scas
pusha
aam
in
xchg
ret
scas
or
lods
inc
test
adc
test
out
in
rol
pop
xor
mov
pop
jb
add
cmp
std
push
mov
mov
dec
sub
mov
pop
cmc
sbb
(bad)
and
xchg
fs
mov
inc
cmp
pop
inc
push
and
inc
jmp
dec
mov
popf
pop
jns
pusha
mov
sub
push
retf
sti
pop
call
das
xchg
dec
das
loopne
js
mul
add
(bad)
leave
xchg
aad
cmps
pop
dec
aam
fcomp
outs
stos
adc
jbe
xchg
jmp
pushf
pushf
xor
mov
pop
mov
push
imul
sti
dec
adc
or
imul
call
jns
mov
cdq
or
sub
ret
ja
mov
movs
pop
arpl
outs
les
xchg
jecxz
mov
nop
std
(bad)
fsub
xlat
mov
test
push
pop
cmc
in
call
adc
or
jmp
mov
xor
out
rcr
cmps
inc
xchg
ja
mul
add
add
mov
div
cmps
rol
dec
les
sbb
sbb
cmc
ja
ins
push
inc
(bad)
sar
std
mov
xor
or
and
ja
mov
scas
add
clc
jnp
nop
push
cbw
sbb
je
stos
cmp
cwde
sub
ins
out
jb
sbb
ret
jns
loope
xor
addr16
jge
xor
(bad)
cmp
and
cdq
call
out
outs
into
sbb
(bad)
out
mov
sti
or
inc
jg
fistp
jmp
scas
(bad)
jo
lea
pop
mov
dec
jmp
jo
jnp
or
movs
jmp
repnz
cld
loopne
sbb
dec
inc
xchg
add
or
sbb
test
cmp
cmp
or
ins
dec
(bad)
call
jmp
repnz
sar
dec
inc
mov
int3
xchg
mov
in
dec
cdq
in
cmps
dec
pop
xor
loope
xor
jnp
fild
pop
fdivp
mov
aam
cmp
cmp
xor
and
dec
xchg
push
push
jecxz
jno
pop
xchg
sbb
lds
jnp
sbb
rcl
dec
xor
rep
js
out
les
(bad)
cmp
dec
pop
cdq
pop
ins
push
xchg
pop
dec
adc
adc
or
ret
test
jb
dec
popf
jne
sub
jb
fwait
inc
(bad)
lock
cmps
push
dec
pop
out
adc
mov
dec
movs
cmp
pop
jge
jmp
xchg
hlt
dec
(bad)
jb
sub
nop
inc
jg
gs
mov
jae
dec
aaa
sub
push
stc
xor
inc
shr
adc
out
jmp
(bad)
push
xor
fcom
out
inc
sub
mov
mov
push
jns
pop
cli
or
imul
jne
or
imul
loop
shl
(bad)
cmc
adc
and
dec
xor
cmps
sub
(bad)
jo
int
mov
fdiv
sbb
jge
(bad)
mov
imul
sub
jecxz
cli
adc
cdq
(bad)
scas
push
dec
fst
mov
imul
inc
repz
ret
push
jg
dec
imul
fistp
mov
cmp
test
(bad)
sbb
dec
test
ja
stos
xchg
jne
hlt
mov
mov
ror
xchg
in
xor
mov
xor
add
add
or
test
and
xchg
repz
push
daa
in
inc
mov
and
xor
mov
pop
test
xor
jmp
aas
sbb
mov
loop
mov
test
adc
aad
(bad)
pop
aaa
sbb
rol
inc
fdiv
inc
cmp
dec
mov
sbb
mov
or
and
stos
or
out
in
outs
push
sub
frstor
in
pop
inc
cli
cmps
jmp
and
pop
jp
clc
sbb
jnp
add
mov
sbb
xor
xchg
cmp
popf
shl
push
jmp
outs
mov
and
cmp
pop
pop
mov
cs
adc
fcomp
jno
arpl
xor
les
mov
lods
jmp
ret
jl
cmc
sub
dec
ins
in
mov
mov
lods
icebp
in
das
aad
popa
fstp
ja
(bad)
rcl
out
cmp
dec
pusha
stc
push
sbb
mov
hlt
fild
das
pop
pop
out
aam
loop
outs
inc
cmp
push
xchg
aaa
mov
sbb
dec
(bad)
fimul
outs
dec
fdivrp
rol
sub
rcl
push
out
sub
fcmovnbe
test
mov
mov
push
mov
xchg
inc
push
mov
pop
bound
sbb
imul
push
ret
mov
mov
push
jg
rcl
mov
adc
jno
push
(bad)
xor
jo
xlat
and
or
pop
xor
loopne
iret
cmps
aaa
mov
loopne
cmc
ret
xor
jge
imul
repz
fdiv
(bad)
inc
mov
dec
ins
pusha
push
sbb
or
xchg
(bad)
and
retf
retf
adc
ret
movs
inc
jge
imul
pop
aad
(bad)
cld
lahf
es
pop
arpl
cmps
es
xchg
jae
jmp
enter
pushf
mov
push
ret
imul
inc
or
leave
sbb
mov
xrelease
repnz
daa
cwde
call
aad
pop
add
push
and
xchg
sar
mov
test
daa
pusha
popf
mov
retf
dec
and
or
and
cmp
sti
es
sbb
daa
out
or
inc
pop
mov
aad
sbb
cmp
pop
retf
mov
jnp
pop
(bad)
xchg
xor
add
push
or
and
aad
popa
pop
xor
adc
shl
push
int
hlt
adc
mov
leave
fsubr
sahf
xor
lods
lods
push
(bad)
ret
das
cmp
test
not
sar
inc
lods
mov
rcr
jecxz
out
es
xor
scas
jge
mov
ret
stos
pop
retf
add
mov
mov
pavgw
jmp
shl
mov
jge
sbb
loope
leave
pop
mov
push
pop
scas
push
lds
mov
rol
into
retf
adc
mov
pop
xchg
shl
fsubr
adc
inc
mov
or
push
and
imul
inc
lock
scas
or
pushf
xor
or
daa
push
adc
test
rcl
sbb
stc
mov
dec
sub
xor
cwde
sub
adc
mov
in
call
sbb
sti
jnp
(bad)
sbb
xlat
xchg
in
in
out
lods
shr
out
scas
mov
retf
cld
scas
or
cmps
mov
lea
repz
inc
call
pushf
imul
push
adc
pushf
into
cmp
psrlq
pop
add
sub
jns
jp
sbb
rcr
lods
add
fs
fcmovb
mov
ins
xchg
jns
dec
popa
lods
or
cmp
inc
sbb
mov
mov
jns
jge
jb
or
out
lods
sub
push
sub
sbb
popf
(bad)
stos
jp
ins
mov
sar
or
pop
push
push
in
cmp
out
icebp
out
std
adc
(bad)
cmp
fisttp
cmc
pop
arpl
fwait
sub
dec
dec
inc
shl
pop
and
pop
sbb
push
lods
out
xor
and
clc
shl
shl
outs
adc
stc
pop
pop
add
out
loop
js
and
add
and
jp
lea
retf
or
test
mov
(bad)
adc
pop
leave
mov
retf
xchg
dec
in
ret
xor
pop
repz
into
ficom
jp
dec
rcl
mov
sbb
stos
sbb
retf
inc
push
icebp
enter
imul
cmps
or
adc
push
idiv
dec
(bad)
sar
add
lock
cdq
popf
jge
pop
daa
bound
push
dec
int
call
test
mov
sub
fsubr
ret
push
push
(bad)
cs
cdq
xchg
add
(bad)
out
int
adc
mov
sahf
outs
pop
sbb
xor
or
imul
jns
cmps
idiv
mov
call
daa
pop
push
sahf
inc
jmp
(bad)
push
cmp
mov
outs
and
mov
inc
pop
jo
jle
dec
std
retf
pop
in
(bad)
scas
ficomp
xor
stos
jmp
mov
jne
sub
jb
push
adc
jbe
jb
inc
add
sbb
dec
cmp
pusha
popa
xchg
jns
icebp
std
xchg
inc
sub
sub
data16
ffree
fisubr
mov
pop
and
arpl
xchg
or
push
ja
xor
dec
(bad)
add
mov
cmovbe
fdivr
fsubr
out
mov
ret
inc
outs
xchg
(bad)
sbb
mov
pop
nop
jmp
outs
stc
data16
in
jl
mov
ins
enter
mov
int3
cmps
jle
test
mov
or
adc
popf
jmp
(bad)
std
sub
jno
retf
std
outs
cmp
popa
sbb
imul
xlat
inc
pop
daa
(bad)
xchg
ds
cmc
in
jmp
sar
or
push
lods
inc
clc
add
pop
mov
imul
jmp
sbb
test
mov
pop
popf
cmps
mov
jecxz
sub
dec
js
pop
jl
pusha
aam
lea
xor
pavgw
test
xor
add
rol
xor
or
push
arpl
push
in
sbb
mov
cmp
popa
sbb
ret
cld
lods
xor
cmps
mov
push
pop
xchg
nop
outs
jge
and
sbb
mov
shl
push
cli
sbb
ins
in
bound
adc
sti
push
loope
jg
mov
ja
push
push
popa
ds
lea
lods
data16
jge
in
xchg
jl
sar
lods
call
rcl
sbb
loopne
mov
fiadd
arpl
jne
addr16
ins
inc
jns
jno
sbb
cwde
imul
lahf
sub
mov
shl
mov
lock
in
push
push
adc
out
ins
shr
les
push
mov
mov
daa
or
mov
push
inc
add
ja
jecxz
and
dec
(bad)
mov
push
aaa
mov
push
bnd
push
pop
jmp
dec
in
lods
push
cmp
mov
xchg
mov
mov
mov
xchg
ds
dec
test
add
xor
jbe
xchg
shl
push
mov
outs
into
and
cld
sub
imul
add
cmps
sbb
add
pop
dec
stos
sbb
adc
jg
test
bound
sbb
xlat
retf
or
lods
push
adc
out
xchg
mov
add
ret
add
addr16
out
out
push
test
pop
pop
test
(bad)
in
rol
jmp
add
test
dec
mov
ss
and
pop
ds
ins
pop
ficomp
fs
lods
push
mov
mov
push
(bad)
movs
mov
or
sub
daa
mov
cmc
and
mov
fimul
mov
cmp
popf
add
pop
fcom
ss
xor
jmp
ror
push
out
jmp
(bad)
es
mov
jge
mov
cmp
je
inc
sahf
adc
inc
aaa
js
xor
and
ror
repnz
aaa
xchg
fcomp
inc
mov
pop
test
pop
or
push
in
xor
adc
(bad)
jo
in
loop
(bad)
sbb
sub
mov
adc
repnz
and
loop
push
fwait
mov
cmp
push
mov
stc
pop
adc
ror
fcomip
lods
fcmovb
mov
or
jle
(bad)
fnstenv
cmc
out
js
sub
xchg
in
dec
(bad)
push
js
outs
scas
xor
test
push
pushf
mov
iret
mov
(bad)
lods
jae
sub
mov
js
ja
inc
outs
mov
mov
sub
inc
mov
sub
mul
push
cmp
idiv
cld
and
cmc
cmp
push
rcl
scas
cmp
movs
sbb
xchg
test
xor
les
jb
popa
jge
test
inc
pop
cmps
or
jae
out
inc
shl
mov
shl
sub
adc
xlat
xor
cmps
jge
jne
test
xchg
and
and
xchg
fwait
je
adc
imul
cmp
mov
mov
adc
not
dec
xor
retf
push
dec
adc
add
outs
and
stos
fwait
push
jno
in
jb
jae
lods
in
dec
out
test
add
cs
push
lods
push
pushf
rcr
inc
hlt
push
push
mov
adc
out
or
adc
cmp
in
jbe
aad
mov
fisub
popa
iret
pop
mov
fisub
out
mov
mov
aas
push
adc
push
cs
mov
and
xchg
arpl
in
je
or
popa
xchg
and
jmp
int3
cmp
shl
rcr
ror
mov
inc
cmp
mov
inc
pop
or
loopne
sub
inc
int3
(bad)
cmc
jl
div
ins
in
mov
cmp
ficom
js
xchg
mov
add
cld
sub
outs
movs
(bad)
into
fwait
(bad)
xchg
jmp
in
imul
cmp
jb
inc
adc
jge
fcom
xchg
dec
xor
sahf
neg
cmp
js
ja
stos
imul
rcl
sbb
inc
cmp
xor
jecxz
cwde
call
inc
jb
(bad)
repnz
cmp
xchg
ret
and
pusha
jle
fcomp
arpl
jmp
dec
mov
rol
int
mov
or
rol
test
pusha
fistp
std
es
movs
sti
nop
jp
adc
jns
push
enter
cmps
push
jg
repnz
hlt
outs
mov
jecxz
adc
aas
sub
clc
out
adc
sbb
int
ja
dec
xor
test
enter
or
and
mov
inc
mov
daa
pop
aam
(bad)
in
call
retf
adc
retf
stos
pusha
jnp
repz
xchg
and
mov
outs
fistp
or
dec
jge
sbb
les
xchg
mov
cmp
add
or
sub
ret
sub
movs
mov
xor
cmc
xor
jnp
enter
jle
fldenv
push
sbb
mov
out
or
enter
das
push
add
rol
xchg
mov
outs
out
loope
inc
xlat
test
cli
mov
push
push
outs
cmps
and
mov
imul
mov
push
fsubr
pop
sbb
inc
imul
sub
adc
out
movs
aas
xchg
aas
cmp
push
cmp
dec
pusha
jbe
mov
rcl
inc
aad
lods
out
xchg
loope
xor
int3
int3
fdiv
push
inc
jecxz
push
lods
xor
jmp
outs
inc
shl
jbe
shl
inc
out
sub
dec
or
sbb
and
fsubr
popa
enter
enter
jnp
cmp
nop
mov
loop
jl
xchg
cwde
fist
mov
pop
push
jno
mov
sbb
cmp
mov
mov
into
lods
add
add
cmps
adc
fstp
xchg
mov
nop
outs
inc
outs
fisub
test
pop
pusha
adc
or
adc
inc
(bad)
mov
push
mov
sbb
push
nop
arpl
or
stos
shl
cmp
shl
ficom
loop
test
xchg
jle
int
mov
in
mov
imul
scas
and
jmp
and
or
fsub
int
add
sub
xor
mov
mov
loopne
enter
repnz
add
adc
sbb
repz
sar
sbb
push
jge
push
xlat
and
pushf
pop
(bad)
and
adc
push
icebp
mov
jne
stos
lds
dec
addr16
fmul
test
sbb
retf
push
jecxz
std
add
and
icebp
or
mov
mov
pop
mov
mov
add
pop
mov
jnp
std
sbb
aam
leave
push
xchg
outs
or
xchg
enter
jo
sbb
push
xor
lahf
xor
sub
(bad)
and
dec
or
jns
xchg
add
loope
fistp
loop
and
mov
xlat
jb
int
(bad)
jge
inc
les
adc
pop
ja
mov
retf
addr16
cmps
mov
lahf
cli
ror
jl
mov
cmp
dec
and
sub
push
mov
sub
mov
sbb
push
and
mov
cmps
cdq
xchg
mov
popa
cwde
jmp
mov
inc
dec
outs
fcomp
in
pusha
cld
sub
cdq
pop
pop
xchg
add
pop
(bad)
in
mov
enter
pop
cdq
mov
add
bnd
adc
sbb
mov
test
arpl
push
dec
in
xchg
cld
dec
mov
stc
pop
push
repz
add
xchg
xchg
add
or
arpl
repz
push
lea
mov
and
jmp
jge
and
inc
out
push
or
ss
and
ins
push
shr
mov
mov
fidivr
(bad)
fsub
pop
xchg
adc
cmp
stos
mov
std
pushf
sahf
jp
mov
mov
jmp
sbb
sbb
sti
aaa
cmp
mov
fidiv
jge
dec
adc
imul
inc
add
gs
cmp
popf
inc
mov
adc
mov
leave
inc
in
or
cmp
dec
xor
pop
mov
inc
or
push
je
xor
dec
lods
bound
cli
jmp
pushf
cmp
xor
div
adc
pop
mov
dec
dec
fcmove
imul
jae
out
lfs
jae
mov
loope
mov
dec
sbb
test
fwait
cwde
mov
xor
xor
cmp
inc
jae
loope
stos
inc
jne
jne
xor
xchg
test
xlat
sub
mov
imul
jb
je
cs
xor
sbb
in
mov
jmp
mov
imul
int3
and
cmp
adc
xor
mov
mov
xor
or
repnz
and
inc
add
cmps
xchg
test
cli
mov
mov
stc
sti
enter
loope
mov
push
frstor
xchg
clc
jb
inc
xchg
sbb
mov
mov
or
es
jg
mov
into
dec
mov
stc
mov
popa
add
repnz
mov
pop
std
cmps
popa
cmps
repnz
cmp
jge
xor
aas
jmp
aaa
jl
mov
(bad)
jl
push
nop
dec
leave
aas
aad
stc
ss
in
dec
pop
sbb
xchg
xchg
pop
push
pop
sub
aam
iret
mov
iret
push
ret
sub
fisttp
pop
inc
fmul
gs
out
mov
and
out
push
out
stos
adc
(bad)
jp
cmp
jno
call
mov
imul
cmp
ja
hlt
sbb
test
jle
rol
aam
mov
inc
mov
nop
pop
xchg
sbb
inc
sub
leave
mov
int
and
mov
mov
ins
add
out
loop
lods
shl
loope
sbb
outs
mov
jnp
add
aad
and
jg
je
cdq
dec
iret
shl
into
push
stos
sahf
push
fmulp
aas
mov
test
int
pop
enter
dec
clc
lea
push
xor
fndisi(8087
shr
int
mov
xchg
xchg
ret
mov
dec
push
inc
and
inc
mul
inc
lds
sub
out
lods
test
ror
adc
mov
jbe
add
out
adc
aaa
fs
jp
fisttp
adc
jmp
cmp
pop
mov
popf
xor
hlt
mov
into
or
int3
out
jg
mov
sub
mov
dec
mov
adc
pushf
imul
es
mov
sbb
cmp
inc
or
jo
sbb
(bad)
pop
inc
lds
rol
cmps
test
push
sahf
mov
cwde
ins
xor
std
fdiv
jns
cmp
pop
fs
shr
popa
xor
adc
imul
push
and
cwde
loopne
jecxz
mov
fisttp
add
lock
mov
jmp
fcomp
cs
add
push
jns
sub
lea
xchg
push
iret
pop
dec
lds
dec
aaa
(bad)
neg
ss
dec
(bad)
mov
and
(bad)
and
push
ins
sbb
add
inc
xor
xchg
push
cmp
jo
clc
shr
cmp
or
push
add
mov
xor
sbb
and
sti
xor
shl
pop
loopne
add
out
jne
addr16
imul
pop
jnp
add
div
pop
mov
and
daa
push
and
mov
mov
call
xor
or
push
xchg
add
xor
mov
push
cs
mov
pop
jno
retf
test
mov
xchg
mov
add
mov
and
je
js
push
test
jl
and
in
(bad)
jmp
xchg
pop
inc
add
jge
aad
mov
pop
mov
mov
outs
cmps
(bad)
call
sbb
lahf
imul
jmp
cmp
sbb
fs
fld
imul
xchg
jne
pop
ffree
clc
hlt
iret
aam
outs
pop
pusha
push
dec
ins
sbb
jmp
mov
(bad)
mov
(bad)
in
dec
lock
iret
jbe
loope
xchg
adc
inc
push
xor
shl
pop
jmp
jno
(bad)
fcmove
es
and
or
int3
inc
shr
cmc
push
js
jo
idiv
pop
sub
loope
sbb
aam
sti
cmp
jne
scas
add
outs
in
cs
mov
mov
int3
jp
ins
or
ss
sahf
jne
sbb
jns
in
adc
cmp
mov
ret
mov
dec
mov
mov
movs
retf
mov
sub
int
clc
xor
sbb
(bad)
out
(bad)
fadd
lahf
sbb
out
sahf
movs
std
dec
mov
dec
loopne
push
jae
aam
dec
adc
xlat
adc
xchg
pop
cld
dec
fidivr
enter
ins
jecxz
fdivr
fmul
cmp
push
and
les
or
xchg
cwde
push
push
dec
jb
add
outs
(bad)
clc
inc
jno
adc
loope
sub
retf
dec
fucomip
pop
test
daa
sbb
(bad)
jmp
lock
and
mov
mov
pop
or
mov
push
call
mov
inc
jmp
or
adc
or
adc
pop
loope
jns
and
mov
jmp
std
cmp
jns
ja
ds
aad
add
jle
scas
nop
inc
pop
sbb
or
mov
push
repnz
aaa
(bad)
fdiv
mov
in
push
xchg
dec
cli
mov
or
lods
and
lods
pushf
jg
mov
jle
push
push
(bad)
out
shr
mov
popf
mov
sbb
fadd
add
or
test
sbb
cmp
inc
fld
sti
cli
push
ja
not
movs
jmp
cmp
jno
sti
adc
sbb
or
inc
inc
mov
lods
sbb
adc
or
dec
pushw
scas
movs
int
jbe
call
pusha
stos
in
push
or
addr16
jmp
test
sti
repnz
ret
les
out
push
cmp
jle
sbb
sub
add
inc
pop
in
rep
jne
or
jnp
(bad)
lock
fisubr
adc
fst
push
push
pop
pop
mov
popa
(bad)
rol
sbb
(bad)
ffreep
cwde
mov
(bad)
push
mov
les
fs
mov
mov
call
push
mov
jmp
jb
and
jbe
sub
jg
dec
rcl
xchg
test
stos
and
lahf
and
cmp
jns
pop
jbe
pusha
xlat
lods
mov
mov
cdq
aam
stos
imul
cld
fwait
xlat
addr16
shr
pop
mov
and
mul
add
mov
xchg
icebp
push
pop
push
mov
pop
xrstors
scas
bound
lds
cmc
xor
xchg
aam
push
rcr
inc
sar
mov
gs
adc
popf
cmp
sbb
fld
aas
sbb
jo
outs
arpl
dec
sbb
mov
(bad)
jle
outs
outs
es
test
loopne
and
or
xor
aam
or
xor
(bad)
jae
mov
dec
mov
ret
mov
sbb
sbb
and
push
test
jmp
call
xlat
mov
xchg
setnp
push
cmp
cdq
inc
dec
clc
mov
cmp
adc
(bad)
mov
or
push
shl
lea
dec
lods
test
xchg
jns
adc
cmp
int3
mov
xchg
shl
out
dec
loopne
popf
ficom
sbb
outs
push
mov
enter
das
adc
rol
cwde
arpl
in
jae
adc
shr
push
pop
(bad)
sbb
push
mov
mov
lahf
ret
lahf
pop
add
repnz
add
jp
fwait
popf
jmp
or
aad
sbb
addr16
push
pop
mov
sbb
rcr
(bad)
ins
inc
div
outs
fisubr
sti
popf
mov
and
cmp
mov
mov
add
scas
mov
xchg
pop
lea
sbb
cmps
iret
aam
int
pop
hlt
sbb
aad
sbb
clc
pop
shl
retf
dec
inc
dec
call
jne
ins
fwait
popa
add
pop
bswap
dec
sub
int3
jecxz
jmp
mov
nop
jle
pop
int3
push
stos
stos
dec
aaa
mov
call
sbb
dec
aam
lock
dec
mov
inc
jns
stos
aam
jmp
sysexit
pop
(bad)
icebp
dec
out
mov
(bad)
cmp
mov
(bad)
aad
cmps
xchg
cmps
adc
je
sti
push
sub
sahf
xor
push
ja
hlt
shl
pop
das
pop
inc
addr16
test
in
test
je
dec
inc
imul
mov
jb
sbb
jecxz
stos
mov
pop
dec
ins
sub
pop
scas
adc
loope
test
xlat
gs
test
jns
xor
push
les
cmp
out
or
loope
nop
push
or
lods
cmps
pushf
cmp
inc
push
out
push
push
pop
loope
push
xchg
int3
mov
xor
sbb
movs
test
inc
pop
pop
or
adc
fsubr
and
cmp
jnp
mov
xchg
(bad)
pop
xchg
add
(bad)
es
push
out
or
arpl
mov
adc
(bad)
retf
xlat
pop
shl
mov
fldenv
xor
jb
test
sub
adc
inc
pop
test
adc
jg
dec
jns
mov
mov
sahf
mov
push
jb
mov
jb
or
mov
cmp
fst
or
loope
psllw
fisub
scas
inc
sahf
bound
data16
sahf
idiv
loope
hlt
mov
lea
xchg
shl
xor
ficom
into
xor
sbb
das
pop
fsubr
je
adc
lea
stos
mov
test
outs
inc
sbb
ret
sbb
test
shl
into
(bad)
sar
rcr
or
inc
addr16
add
push
stos
loop
push
and
cmp
or
mov
push
aad
mov
mov
fwait
mov
movs
hlt
inc
(bad)
daa
data16
mov
dec
mov
inc
push
test
pop
hlt
repnz
repz
xor
fcomip
cmp
outs
mov
jnp
das
jp
push
dec
das
pop
in
xchg
add
mov
scas
ret
ficomp
xlat
jb
neg
push
dec
stos
outs
imul
ret
retf
call
test
rcl
mov
xchg
pand
mov
out
push
(bad)
lds
in
in
imul
mov
cdq
popf
fmul
or
add
das
es
fistp
cld
xor
or
push
mov
sub
inc
xor
xchg
sbb
inc
movs
pop
adc
push
xchg
xchg
mov
pop
mov
push
adc
lock
imul
sti
ss
push
pop
imul
jbe
std
rcr
pop
mov
call
bound
mov
pop
mov
add
call
and
adc
mov
lods
int
ins
dec
mov
(bad)
push
mov
pop
ja
mov
cmp
test
dec
addr16
lods
daa
repz
mov
addr16
test
in
call
not
dec
add
and
push
cmp
sbb
(bad)
pop
int
sbb
xchg
pop
je
mov
hlt
scas
aam
mov
and
faddp
das
popw
add
jp
mov
sbb
jns
bound
dec
xor
sub
sub
sub
icebp
mov
mov
imul
shr
sti
pop
dec
test
xchg
xor
movs
cwde
arpl
sar
add
jp
push
in
adc
pop
call
int
adc
push
sub
pop
repnz
out
or
push
xchg
shl
icebp
xor
fwait
and
std
and
push
mov
out
out
dec
enter
not
adc
xchg
xor
iret
push
imul
int
cs
clc
daa
adc
cmps
cmp
das
into
inc
stos
mov
mov
(bad)
hlt
or
and
lods
test
or
inc
mov
jecxz
xlat
shl
popa
js
push
jbe
add
les
test
xor
loop
fiadd
sahf
fsubr
cmp
(bad)
jae
(bad)
push
ds
cwde
into
bound
js
jmp
cmp
add
dec
fisttp
loope
dec
aas
xor
inc
jge
adc
inc
adc
or
push
ret
jns
mov
or
ins
push
pop
outs
sbb
or
fst
lahf
imul
sub
(bad)
fldenv
loop
push
mov
jl
sbb
xchg
lods
xchg
(bad)
imul
test
jbe
sub
mov
mov
loop
push
mov
inc
add
cmps
dec
mov
push
pop
xchg
xchg
popf
sub
data16
clc
mov
outs
mov
jno
call
ret
sbb
out
push
jne
stos
add
and
or
pop
mov
pop
(bad)
fs
jmp
mov
pop
imul
retf
inc
popa
pop
push
lods
rol
push
shl
push
adc
daa
pop
cbw
test
mov
xor
jns
fdivr
mov
xchg
inc
cmp
inc
adc
mov
sbb
cld
mov
push
cmp
push
fdivr
xchg
inc
xor
pop
mov
dec
neg
xchg
test
dec
call
aad
push
mov
jge
(bad)
adc
(bad)
mov
dec
ror
inc
icebp
scas
pop
test
dec
repnz
dec
cwde
std
xchg
mov
aad
mov
mov
push
inc
cmp
pop
push
pop
mov
pop
mov
into
pop
adc
adc
gs
(bad)
fs
imul
ret
and
imul
inc
sub
or
cmc
adc
pop
jns
fucomp
cwde
mov
retf
mov
pushf
jp
(bad)
mov
lds
lods
dec
jnp
cli
add
mov
(bad)
mov
sbb
mov
in
cmp
lds
cmps
jg
icebp
add
aaa
aaa
or
inc
in
enterw
clc
mov
adc
or
fadd
xor
rol
js
cli
jle
int3
sbb
jle
mov
rcl
movs
div
cmp
push
lods
scas
jle
jmp
scas
mov
fcom
hlt
mov
mov
in
popa
rol
xchg
inc
icebp
scas
xchg
call
dec
movs
pop
nop
xchg
mov
inc
lods
jns
add
mov
push
pop
mov
mov
lds
jmp
dec
mov
scas
in
repnz
rcl
xor
icebp
jnp
in
sahf
icebp
push
adc
out
mov
test
test
stos
push
cli
dec
fbstp
mov
and
test
aad
mov
cld
inc
pop
and
lds
cmp
out
arpl
rcl
inc
inc
xor
push
mov
mov
adc
sub
xlat
cdq
ss
xchg
sbb
loope
out
ror
cmp
pop
push
test
add
rol
sti
mov
push
retf
xor
jg
cmps
mov
xor
iret
xchg
jmp
adc
xchg
sub
xchg
out
push
mov
inc
jl
pusha
ret
jo
int3
pop
mov
xor
sahf
xor
adc
add
add
ficom
int3
adc
fcom
push
iret
sbb
jle
icebp
fld
cdq
sub
inc
and
jae
fsubp
mov
adc
jmp
push
pop
fwait
test
mov
cmp
cmp
mov
cmp
jmp
add
push
xor
fiadd
loopne
fld
test
fdivr
inc
xchg
in
dec
mov
sub
jo
mov
sbb
mov
out
and
test
ins
sub
xchg
or
fild
and
xchg
push
and
int3
fisub
mov
cmp
jecxz
pushf
jmp
adc
dec
sbb
jns
dec
xchg
push
mov
aas
dec
sbb
push
pop
inc
sbb
cmp
test
adc
popa
xchg
xchg
in
mov
mov
mov
stc
retf
ja
mul
ins
push
pop
jae
jo
jbe
dec
and
ins
cs
push
dec
das
jno
adc
mov
enter
icebp
arpl
push
lds
(bad)
jb
loop
rol
jnp
jl
iret
jbe
or
dec
aad
retf
fstp
jbe
sbb
int3
pushf
aaa
push
rol
hlt
scas
add
jbe
cld
jne
adc
cdq
ror
or
jg
push
shl
xor
xor
mov
pop
out
popf
(bad)
push
pop
mov
add
aaa
hlt
inc
popa
jmp
fistp
xchg
in
mov
sbb
or
test
xlat
cld
adc
in
es
aam
xor
mov
or
push
push
push
pop
xchg
aam
shr
xor
sti
pop
imul
xchg
dec
dec
xor
pop
and
outs
cwde
mov
mov
adc
sbb
gs
jge
xlat
fdivr
sub
push
or
test
xor
ins
neg
jecxz
add
xchg
dec
test
jo
add
pop
mov
mov
sub
inc
mov
or
push
cmp
and
shl
pop
mov
addr16
daa
call
aas
sbb
push
dec
gs
push
cmps
call
les
int3
cmp
dec
mov
xor
shl
adc
ret
lds
pop
mov
or
nop
in
adc
mov
xchg
mov
pop
and
in
cmps
or
and
cmps
out
add
or
cwde
adc
movs
mov
pop
mov
fist
lods
jge
not
(bad)
push
cmp
scas
ror
(bad)
scas
iret
cmps
xor
dec
ins
sbb
lahf
adc
push
jp
jg
fnstcw
mov
fistp
cli
test
and
in
mov
js
inc
inc
sbb
je
sar
nop
fidiv
xchg
dec
sbb
std
mov
aaa
dec
mov
jo
enter
inc
enter
jg
mov
push
ret
std
repnz
movs
jp
das
sub
std
dec
push
push
mov
mov
jo
mov
jmp
sbb
imul
je
ja
xchg
mov
sub
adc
jnp
cmp
aas
and
ja
aad
and
jne
xchg
es
fist
pop
fst
mov
jecxz
stc
sahf
nop
and
xchg
aaa
add
ja
sub
pop
inc
push
xor
mov
mov
cdq
jbe
ins
mov
add
retf
in
xchg
push
lods
iret
sub
sub
add
and
in
in
loopne
mov
dec
cli
ins
aam
bswap
jo
push
push
stc
dec
xor
fbstp
dec
xchg
jb
call
cli
mov
push
xor
mov
jns
cmp
push
jno
xchg
dec
jmp
and
sbb
cwde
fwait
psadbw
jnp
mov
iret
mov
mov
xlat
add
out
jg
into
mov
cmps
hlt
out
mov
rol
pop
jns
cmp
fcomp
fistp
test
or
ins
loop
jge
mov
rcl
xor
aam
push
mov
(bad)
cmp
jne
test
xchg
daa
push
outs
bnd
les
add
xchg
mov
out
mov
xchg
add
lods
push
xor
pop
dec
cmc
pop
sbb
dec
outs
outs
push
or
or
(bad)
pusha
push
pushf
(bad)
cs
and
sub
imul
mov
fsub
adc
mov
adc
fisubr
rcl
arpl
ror
in
into
xlat
jnp
jae
ror
mov
jp
cmp
mov
sbb
mov
xchg
or
test
fwait
mov
outs
sub
fwait
mov
add
outs
fistp
psadbw
inc
pop
xor
in
into
retf
cs
xchg
bound
mov
movs
nop
(bad)
mov
fs
adc
dec
or
cmp
out
jbe
or
cmp
push
out
cmp
sub
lods
mov
mov
sub
jecxz
sbb
lds
iret
cwde
adc
xchg
call
and
sbb
fmul
rcr
movs
mov
xchg
adc
xor
and
dec
pop
iret
lods
dec
pusha
sub
mov
sbb
mov
push
sbb
xor
popf
xchg
leave
jo
push
push
nop
outs
ins
lea
jo
inc
les
inc
cld
sbb
mov
xor
or
dec
jmp
jnp
clc
iret
test
adc
or
mov
inc
or
(bad)
fwait
pop
adc
mov
mov
inc
jmp
add
xchg
call
add
aad
xchg
adc
fsubr
mov
mov
in
push
pusha
pop
push
mov
pop
jne
push
pop
and
pop
add
xor
jb
lods
popf
pop
and
test
sbb
adc
xor
add
cs
adc
stos
retf
sbb
aas
aaa
(bad)
daa
in
adc
mov
pop
xor
pop
adc
in
addr16
leave
fidivr
xor
das
lea
mov
sub
pop
mov
xchg
adc
sbb
ds
and
call
jecxz
mul
adc
rcl
push
js
jne
int3
aad
ret
cmps
in
pusha
dec
jmp
cmc
mov
out
jbe
mov
das
inc
das
dec
retf
push
rcr
shl
ja
repnz
push
scas
cmp
cmps
loopne
fldenv
xor
loope
mov
outs
or
in
stc
sub
sbb
mov
rcr
or
je
jno
dec
imul
imul
mov
inc
sub
shr
cwde
dec
mov
xor
scas
dec
push
add
adc
arpl
in
lods
js
shl
dec
or
jg
(bad)
push
xchg
inc
cdq
cdq
xchg
(bad)
push
and
xrelease
inc
cmp
push
int
imul
jns
mov
lds
int3
mov
out
ret
addr16
push
and
lahf
in
jae
dec
loope
hlt
adc
lods
call
or
xor
lahf
std
sub
and
push
push
inc
push
xchg
mov
sub
mov
cs
sbb
jl
outs
push
hlt
sbb
test
ficom
in
push
pop
mov
or
cli
inc
repz
(bad)
call
out
fs
stos
dec
cli
mov
leave
out
(bad)
aas
std
pop
scas
jno
cmp
movs
std
pop
imul
and
bound
mov
sub
stc
cmc
cmove
out
enter
scas
(bad)
cmp
mov
xchg
xor
pop
and
addr16
sub
sahf
sbb
mov
or
int
pushf
xchg
mov
push
jb
ins
enter
inc
loop
pop
sbb
mov
xchg
push
ret
(bad)
sub
add
dec
fist
ins
pop
mov
inc
call
rcl
loop
imul
arpl
adc
push
dec
mov
aad
into
xor
stc
cmp
inc
lods
jmp
mov
fistp
(bad)
icebp
pop
fld
xchg
ja
pop
jbe
fdivr
cmp
push
hlt
and
mov
sub
mov
test
lahf
inc
xor
stos
or
std
push
out
sbb
loopne
sbb
(bad)
jmp
(bad)
(bad)
stos
movs
push
or
or
ret
and
fstp
or
loop
inc
retf
push
sbb
cs
pop
call
into
cmp
int
test
pop
mov
push
sbb
pop
sbb
pop
jp
cmps
movs
ja
mov
std
and
push
jg
inc
call
xchg
sahf
repnz
cs
bnd
xchg
jmp
(bad)
int3
clc
sti
leave
jmp
mov
int
cmps
shl
(bad)
aaa
jb
div
xor
pop
or
fdiv
inc
popf
mov
sar
sbb
xor
ret
(bad)
mov
and
mov
xchg
sub
gs
repnz
loope
jb
mov
xchg
dec
dec
(bad)
or
cdq
push
push
or
add
sbb
loop
sub
gs
movs
jbe
scas
es
gs
pop
push
or
jp
clc
or
adc
pop
cmp
out
push
leave
ret
xor
mov
lea
sbb
les
add
push
(bad)
ins
out
dec
adc
mov
scas
xor
inc
std
inc
push
sub
lds
stc
inc
cmp
(bad)
sbb
aad
add
pop
dec
mov
hlt
lods
mov
es
lds
test
retf
retf
cmp
push
inc
stos
xchg
es
mov
fsubr
add
lock
sbb
jmp
pop
push
xor
popa
xchg
mov
inc
or
and
push
mov
test
in
mov
push
adc
pop
and
adc
xchg
dec
jmp
bound
jne
fwait
and
ja
sbb
out
fs
push
xor
mov
mov
add
push
xchg
xchg
inc
mov
scas
xchg
js
data16
pop
push
lods
les
mov
out
add
xchg
imul
mov
loop
mov
fmul
push
pop
pop
xchg
jmp
call
ds
cmp
push
rcl
inc
lock
pusha
push
movs
stc
jp
rcl
adc
lods
mov
jmp
dec
stc
sbb
fldln2
repz
cmp
xchg
mov
cmp
nop
sbb
ret
je
outs
cs
or
push
enter
xchg
adc
cld
test
popa
out
jb
js
outs
and
push
in
jb
pop
jno
ins
or
ins
adc
cmp
sub
pop
out
mov
xchg
mov
dec
repz
sub
iret
(bad)
stos
jbe
fistp
pusha
inc
xor
mov
shl
fisubr
xchg
adc
aam
cld
inc
nop
fdivr
mov
inc
daa
test
in
lock
and
adc
and
ret
pop
add
inc
dec
retf
call
xchg
mov
sti
mov
xor
imul
push
ins
ret
sub
mov
pop
int
jmp
or
inc
jmp
mov
test
enter
add
(bad)
pop
adc
or
aam
clc
xor
mov
cmps
mov
add
jmp
and
push
fbstp
jmp
adc
rcl
addr16
test
(bad)
out
and
inc
mov
adc
jg
push
stc
adc
jg
pop
push
dec
pop
scas
aas
xchg
xor
nop
inc
jmp
inc
mov
ret
dec
xlat
cmps
movs
imul
out
xchg
add
sbb
mov
add
and
sbb
lock
push
pushf
lahf
and
(bad)
nop
adc
stos
add
leave
pushf
popa
push
in
jns
out
cmps
push
mov
cmp
dec
idiv
add
and
pusha
arpl
jmp
add
stos
adc
jno
in
and
arpl
loope
xchg
and
xor
in
fistp
xchg
mov
jge
mov
xor
mov
dec
adc
cdq
sti
out
pop
mov
and
xor
xchg
add
xor
and
cdq
pop
and
add
lahf
iret
rcr
sbb
cmp
inc
and
or
xchg
dec
pushf
or
xchg
out
repnz
sbb
xor
(bad)
pop
loopne
mov
cwde
mov
imul
mov
stos
ja
mov
mov
mov
inc
jbe
(bad)
retf
fld
(bad)
std
jmp
movups
mov
sub
add
sbb
gs
add
cmp
arpl
push
inc
xor
or
xchg
sub
mov
cmp
push
pop
cmp
(bad)
stos
cmp
xchg
cdq
cmc
or
adc
lods
scas
out
sbb
push
lds
inc
xchg
outs
ror
into
out
jecxz
enter
cwde
retf
mov
scas
gs
lock
jp
mov
stc
and
rol
repz
jbe
stos
out
adc
ins
ins
cmps
sub
jo
out
mov
jo
mov
cs
inc
and
xlat
xchg
pop
push
mov
(bad)
fsub
repnz
mov
out
jle
call
push
and
cmp
loope
outs
or
pop
push
rcl
cwde
popa
pop
cmp
scas
mov
pop
test
aad
(bad)
out
pop
adc
push
(bad)
(bad)
xchg
ret
js
mov
inc
rcl
ins
pop
jne
test
leave
fcom
shr
push
and
sub
pop
mov
inc
dec
dec
mov
mov
push
cmp
fistp
jp
jle
repnz
jp
hlt
push
ss
stos
add
push
aas
jbe
movs
xor
adc
arpl
out
jp
jge
pop
addr16
push
pop
pop
lods
push
call
add
loop
xor
ins
daa
sar
or
add
adc
cwde
inc
fwait
daa
adc
mov
aad
push
(bad)
mov
mov
test
aad
xchg
xchg
mov
aad
aaa
lods
dec
sbb
or
bswap
sub
int
mov
int
mov
sub
nop
out
(bad)
push
addr16
enter
(bad)
mov
int3
add
outs
mov
push
xlat
add
add
out
cdq
gs
fbld
sbb
and
ret
add
jmp
push
fwait
out
xor
cwde
push
loopne
repz
call
sub
into
cld
fild
add
js
jns
leave
sub
pop
dec
call
es
mov
dec
xchg
(bad)
outs
mov
adc
and
shl
adc
dec
adc
pop
ins
push
and
adc
xchg
xchg
cdq
lds
loopne
bound
jb
movs
jns
into
sub
push
or
add
xchg
lods
cdq
pop
shl
adc
fdivr
sbb
mov
push
pusha
loopne
(bad)
pop
mov
jge
sahf
jo
cmp
out
xrelease
xchg
stc
jl
push
ret
das
inc
(bad)
outs
(bad)
aaa
aad
scas
in
mov
or
movs
jge
(bad)
mov
pop
sahf
jecxz
fstp
call
ffreep
fwait
fwait
inc
push
ds
lock
mov
ret
mov
(bad)
test
push
jns
and
cdq
sub
es
mov
div
sbb
(bad)
mov
or
adc
(bad)
out
es
push
clc
into
sqrtps
mov
scas
mov
outs
inc
xlat
popa
loop
push
sbb
jecxz
xchg
lock
dec
dec
push
xchg
sar
push
dec
jbe
sub
aad
adc
pushf
mov
push
cmp
mov
mov
add
pop
cmc
push
or
addr16
dec
test
push
jge
pop
push
push
xchg
aad
adc
push
fdivrp
pop
cmp
outs
daa
push
sbb
xor
xchg
push
xor
bound
sub
xor
mov
sbb
pop
dec
cli
out
stc
fwait
retf
mov
xchg
addr16
stc
fisttp
ret
loopne
push
jne
popa
dec
and
sbb
out
inc
pop
push
fmul
jecxz
xchg
pop
mov
popa
pop
data16
inc
mov
retf
sbb
in
xchg
aad
jne
sbb
push
(bad)
test
mov
cmps
inc
sbb
push
(bad)
mov
xchg
and
lods
repz
nop
lods
in
call
inc
pop
aad
dec
retf
cmp
repnz
inc
and
sub
call
(bad)
jmp
call
outs
das
icebp
jns
je
pop
adc
and
jae
les
inc
pushf
xor
dec
popf
push
mov
xchg
jno
dec
ja
test
or
retf
xchg
fistp
push
adc
(bad)
xor
je
inc
fwait
cmp
jno
jbe
ret
pop
mov
ins
js
adc
sti
adc
jbe
and
ret
jecxz
dec
pop
pop
cmps
addr16
adc
lods
popa
sub
or
xchg
xchg
aas
mov
jl
fst
push
add
sbb
xor
xchg
sbb
lea
xchg
pushf
or
movs
or
imul
adc
mov
icebp
inc
lods
and
jl
mov
dec
in
div
pop
in
(bad)
jmp
inc
imul
int
cwde
shr
inc
add
daa
ins
sub
les
cmps
fidiv
addr16
push
outs
add
and
in
out
or
sub
xor
mov
fsub
rcl
pop
inc
push
or
sbb
add
mov
hlt
push
test
pop
lds
xor
retf
xchg
ss
shl
das
jmp
int
push
test
dec
jmp
jg
mov
jp
fidiv
(bad)
jne
or
popa
xchg
mov
stos
xor
call
mov
call
inc
arpl
xor
add
push
cmp
push
xchg
imul
adc
cdq
shl
out
and
jmp
ret
dec
ds
dec
xlat
bound
loope
push
jge
cmps
dec
jns
inc
adc
test
cli
into
loop
mov
jnp
xchg
jp
shl
dec
push
ret
ss
sti
js
xor
jno
jbe
pop
sbb
jne
adc
mov
imul
jecxz
adc
sub
pop
xlat
fsubrp
daa
(bad)
dec
fld
sti
and
dec
ret
inc
dec
dec
repz
jae
retf
in
in
and
and
out
imul
jbe
mov
stos
or
movs
and
adc
xchg
xchg
cmp
aaa
iret
xor
and
sbb
and
dec
mov
inc
test
fnstsw
ss
scas
ret
std
sahf
int3
jle
stos
loop
sbb
jge
pop
out
jbe
xlat
sbb
push
cmp
xchg
inc
cmp
jae
lds
mov
popa
and
fadd
mov
mov
or
jne
dec
clc
sbb
or
mov
ja
sub
imul
stos
mov
jge
push
sbb
mov
jmp
xor
movs
pop
fld
xchg
fs
lods
sbb
repz
imul
int
hlt
(bad)
in
ds
or
sbb
fdivp
sub
add
test
or
cmp
cld
out
inc
aam
js
add
sub
(bad)
jne
popa
test
xor
es
mov
mov
fwait
in
iret
pop
lods
sub
inc
and
push
xchg
dec
call
cli
sbb
jecxz
sub
sub
mov
inc
mov
dec
inc
cmp
mov
mov
sub
stc
pop
test
xchg
cdq
and
dec
cmp
or
enter
mov
add
pop
shl
pop
xchg
test
popf
outs
and
and
pop
add
retf
int
movs
push
enter
inc
repz
push
fiadd
sti
add
aad
xchg
aas
clc
cmps
fwait
add
ja
shl
stos
push
dec
mov
and
mul
mov
and
xchg
and
ror
xchg
and
leave
mov
pop
(bad)
fiadd
inc
push
or
dec
imul
call
outs
jl
and
xchg
lock
enter
sub
mov
push
and
sbb
mov
jmp
adc
adc
jo
or
mov
mov
loope
lock
stc
dec
push
sti
lods
pop
pusha
jbe
add
aas
sub
test
aam
xor
fwait
push
cmp
dec
jb
rcl
xchg
push
sub
xchg
test
xchg
test
mov
xchg
jno
ret
cwde
jg
push
mov
or
ja
mov
mov
daa
fmulp
mov
sar
push
mov
xchg
fcom
imul
mov
stos
inc
call
out
fs
gs
cdq
retf
test
fld
push
rol
xchg
pop
or
cwde
add
jg
out
out
out
fwait
test
add
jg
jecxz
fisttp
or
and
pop
pop
pop
push
sub
fcom
les
sbb
mov
inc
jno
sub
retf
jmp
mov
repnz
aas
out
pop
pop
add
adc
adc
adc
inc
loop
cmp
inc
add
mov
mov
addr16
out
icebp
pop
inc
xor
pop
stos
mul
imul
rol
adc
jne
xchg
retf
ss
cmp
xchg
cld
lods
adc
mov
dec
xchg
pusha
pop
xor
fstp
jle
int
bound
test
dec
xchg
stc
jmp
mov
sbb
pop
lock
popa
hlt
xchg
addr16
call
push
leave
adc
xor
scas
shl
pop
add
sub
adc
cli
mov
sub
mov
lock
mov
sbb
ds
and
mov
pop
mov
xchg
fmul
mov
inc
and
add
stos
pop
aam
mov
std
out
jne
adc
xor
jno
xchg
int3
mov
(bad)
push
in
mov
ss
dec
lock
lods
fld
mov
(bad)
rcl
jns
iret
popf
int3
mov
jp
dec
and
shl
inc
dec
mov
pop
mov
pop
jno
sbb
std
mov
ffreep
jbe
sahf
mov
shl
cmp
dec
inc
push
test
sbb
cwde
cdq
dec
fdiv
(bad)
(bad)
mov
(bad)
xchg
push
mov
mov
mov
rol
mov
pop
xchg
sahf
xlat
or
fcmovnu
add
in
hlt
mov
push
es
cwde
sbb
mov
jg
stos
data16
loop
xlat
fstp
fisub
fld
dec
out
gs
jecxz
xor
add
cmp
popa
mov
jae
pushf
sbb
in
fwait
shr
jno
(bad)
into
push
or
jne
or
inc
push
mov
int
and
and
in
stc
ror
or
inc
adc
inc
jl
xchg
rcr
lahf
loop
add
and
inc
or
mul
in
mov
js
push
sbb
or
pop
xchg
push
sbb
inc
cmp
cmp
push
ficom
scas
test
retf
fincstp
icebp
mov
sti
sub
push
sub
in
rcr
add
shl
push
imul
shl
pop
jle
je
add
popa
xor
lds
mov
push
aad
sbb
(bad)
scas
and
and
adc
mov
pop
gs
pop
mov
repz
xchg
and
into
mov
dec
enter
hlt
add
ret
enter
xor
into
xor
xchg
add
mov
pop
jmp
and
fwait
iret
sub
jmp
ins
popa
sub
xchg
into
jge
out
jecxz
cmp
(bad)
jmp
(bad)
pop
mov
xchg
xor
(bad)
mov
pop
test
jg
rcl
mul
push
xchg
mov
inc
movs
fcomip
ds
mov
pop
lods
sar
sbb
xlat
fnstsw
mov
fisttp
int
sub
daa
aad
push
enter
mov
mov
mov
cmps
mov
push
repnz
xchg
cwde
data16
jae
push
(bad)
loopne
into
sub
addr16
lea
dec
(bad)
ror
or
add
mov
movs
retf
call
rcl
sahf
out
out
sub
pop
(bad)
inc
sbb
(bad)
sbb
in
daa
ret
or
aad
fsubr
popa
cmps
mov
inc
(bad)
cmp
xchg
ds
jmp
inc
in
and
mov
stos
leave
in
ins
cmp
mov
dec
and
xchg
push
pop
sbb
and
or
(bad)
and
jge
outs
add
outs
mov
inc
ja
push
imul
clc
iret
mov
fadd
push
cmps
mov
inc
jae
or
xchg
adc
adc
adc
nop
(bad)
lds
push
(bad)
adc
push
push
loope
sbb
push
sbb
ror
jecxz
call
xchg
lds
jo
sbb
adc
cld
popf
xchg
and
fist
stos
stos
cmp
cmp
call
aam
enter
in
mov
(bad)
cmps
push
mov
push
and
mov
mov
push
pop
sub
cmp
out
test
mov
inc
ds
stos
rol
and
sbb
mov
mov
mov
sub
mov
xor
sub
retf
xchg
movs
jb
push
mov
push
mov
movs
loope
dec
mov
or
mov
cmp
aam
sbb
scas
out
mov
fstp
imul
mov
lods
sub
sub
cmp
cwde
sbb
pop
xor
jge
cmps
pop
cmps
dec
iret
aad
xchg
in
jo
mov
mov
jle
(bad)
dec
out
sub
add
in
mov
jo
test
and
jmp
cmc
clc
aam
adc
fwait
and
inc
and
cli
rcr
idiv
les
out
xor
(bad)
aam
push
or
or
pop
and
call
daa
mov
push
xlat
adc
sbb
pop
cmp
rcr
dec
nop
add
ss
xchg
xchg
popf
jle
or
lea
fs
aas
mov
sub
adc
outs
and
add
in
jp
and
pop
cwde
xchg
fdivr
mov
test
mov
adc
mov
xchg
cmp
jmp
jmp
fst
pop
aaa
dec
jle
(bad)
or
stos
xchg
loope
stc
aas
mov
mov
pushf
ins
pop
dec
jle
or
(bad)
mov
dec
mov
int3
bnd
xor
pop
and
in
xor
gs
and
xchg
call
add
inc
loop
dec
aam
popf
jl
cmp
out
jg
dec
scas
and
ins
jg
ds
retf
sti
sub
mov
inc
fstp
sub
cmp
push
cmps
cmp
or
lods
sub
cmp
add
call
ficomp
mov
cmp
popf
popa
ror
int3
dec
(bad)
sti
mov
mov
mov
test
push
pop
pop
add
xchg
popa
in
das
repnz
out
or
add
dec
or
stos
dec
cmp
scas
mov
adc
movs
cmc
in
jmp
xlat
dec
or
push
pop
clc
enter
or
mov
ja
aaa
imul
out
xchg
or
mov
add
inc
add
gs
and
pop
sbb
hlt
inc
mov
and
dec
lahf
sbb
inc
and
cdq
dec
adc
ins
ins
aad
jp
sar
adc
call
cmp
pmaxub
push
into
cli
into
push
dec
les
sti
int3
pushf
push
xchg
addr16
adc
jle
ficomp
mov
out
dec
cdq
mov
cmp
mov
lods
xchg
dec
push
mov
sub
mov
mov
mov
stc
loop
movq
mov
cmp
lods
fadd
sbb
call
and
movs
shl
dec
xchg
jmp
mov
jne
add
pop
push
cli
cmp
out
sub
mov
sar
inc
or
les
in
pop
sub
cwde
call
out
or
fimul
call
repz
pop
mov
aad
and
sahf
cmc
dec
jae
aaa
cmp
add
add
add
mov
or
add
xlat
mov
js
scas
fwait
std
sbb
pop
inc
adc
outs
jle
shr
push
xor
cmc
pop
or
add
test
ins
mov
mov
sbb
(bad)
test
pop
aam
sub
push
and
mov
pop
js
xlat
sbb
hlt
rol
loop
mov
add
dec
dec
mov
popf
(bad)
clc
aam
cmps
scas
inc
test
cmp
mov
int
jns
mov
xor
or
fs
enter
push
cli
inc
or
sbb
imul
mov
cli
add
add
dec
xchg
or
fcomp
sub
sub
daa
shl
ret
ja
into
mov
jge
xchg
adc
cmps
mov
mov
not
mov
push
pop
jae
data16
or
ds
ins
nop
mov
and
adc
adc
cmp
push
xchg
cmps
ins
call
push
mov
pusha
dec
(bad)
iret
je
sti
sub
and
mov
out
repz
scas
fmulp
jnp
push
cdq
(bad)
cdq
mov
mov
jle
ret
mov
gs
and
bound
js
xor
lea
pop
mov
sub
mov
jl
movs
push
inc
shl
jle
imul
cmps
push
mov
jecxz
retf
inc
ror
adc
inc
push
es
inc
push
dec
aaa
and
cld
mov
mov
(bad)
aas
dec
fistp
cwde
cmp
sub
inc
cmp
adc
ins
push
stos
ret
das
std
movs
cld
sub
and
fwait
mov
pop
mov
dec
loop
ss
daa
or
dec
dec
pop
xor
sbb
test
sbb
add
push
out
add
rcl
ficomp
and
adc
call
stos
push
cmp
pop
and
stc
int3
xchg
scas
cmp
adc
mov
mov
xchg
out
scas
inc
mov
dec
(bad)
xlat
mov
jp
arpl
std
dec
adc
inc
(bad)
jg
sub
repz
fwait
xor
dec
lea
lds
les
mov
int3
test
xchg
fstp
or
int3
stos
jmp
in
pop
push
iret
(bad)
jmp
adc
xor
or
test
jno
stc
sbb
add
sahf
cli
loopne
stc
imul
jl
mul
inc
pop
adc
fdivr
out
pop
int3
or
(bad)
mov
les
retf
mov
jmp
or
jmp
ret
xchg
mov
adc
dec
mov
or
cmp
and
inc
cmc
jmp
inc
mov
pop
shr
mov
fs
loop
jmp
mov
div
mov
jecxz
and
add
xor
cmp
mov
cmp
mov
mov
pushf
xchg
mov
add
or
or
push
jl
gs
aam
clc
push
jb
pop
adc
arpl
jle
ret
(bad)
mov
shl
ret
shl
mov
mov
pop
push
add
ret
imul
mov
xor
and
push
js
add
sbb
sub
out
sbb
test
repz
and
push
mov
popa
call
mov
pop
das
mov
frndint
pop
adc
mov
imul
dec
loopne
lds
xchg
test
cmp
in
pop
jnp
dec
jmp
mov
jo
pop
and
sub
and
mov
lock
xchg
into
dec
jae
mov
aam
call
or
push
outs
fimul
test
xor
inc
inc
sbb
adc
and
mov
pop
and
daa
dec
lea
cdq
mov
adc
jmp
push
cmps
popf
loop
aad
dec
outs
and
aas
jecxz
(bad)
fnsave
sahf
psubsw
outs
outs
dec
xor
test
inc
push
aad
or
sbb
les
push
pop
sub
mov
mov
imul
jmp
ins
adc
nop
out
fldcw
push
pop
cmp
jbe
sbb
mov
adc
and
lods
adc
aas
mov
push
mov
xchg
arpl
cld
push
fild
mov
sahf
fs
test
(bad)
mov
inc
hlt
sub
ins
fucomi
mov
pop
(bad)
in
inc
(bad)
sbb
shl
test
(bad)
mov
repz
pop
inc
sbb
push
mov
sti
sub
sub
and
sub
imul
mov
jecxz
inc
repz
push
jae
sub
push
push
cmp
pop
push
shl
stc
repz
sub
jns
cmp
mov
dec
div
adc
shl
inc
popa
mov
ja
push
xor
(bad)
iret
mov
or
push
sti
cdq
je
lds
and
cdq
fild
push
icebp
jno
scas
dec
adc
loope
lahf
dec
mov
push
dec
lods
loope
aam
or
mov
sub
daa
mov
sbb
data16
jmp
lock
mov
aaa
sbb
push
cwde
mov
xor
sub
dec
push
inc
inc
shr
imul
popa
push
sbb
sti
in
out
add
hlt
adc
mov
int
pop
std
cmp
dec
cmp
pop
xchg
pop
cld
mov
fmul
dec
je
cli
or
ret
xchg
pop
jmp
ja
or
inc
dec
dec
jno
sub
outs
cmps
push
jbe
add
dec
add
pop
pusha
jno
call
es
jle
es
rcl
mov
out
fsubr
cmp
jne
clc
sbb
jnp
xor
mov
pop
mov
pop
mov
push
push
mov
repnz
add
push
and
je
mov
xor
sbb
and
test
jecxz
(bad)
mov
push
mov
or
test
outs
nop
lods
movs
dec
movs
mov
mov
retf
(bad)
jge
mov
sub
in
mov
movs
popf
inc
or
cld
ja
aad
adc
mov
sub
cmp
push
xchg
xchg
adc
sub
add
out
shr
shl
int
int3
(bad)
cld
xor
pop
in
repnz
dec
cmp
retf
fidiv
or
ins
into
mov
pusha
jnp
(bad)
out
pop
in
(bad)
ret
fcomi
and
js
mov
in
mov
mov
ja
pop
mov
cli
cmp
jb
mov
pop
mov
add
adc
cmc
getsec
imul
pop
inc
retw
cwde
mov
sbb
outs
xchg
cmp
(bad)
pop
dec
jle
inc
or
mov
dec
repnz
jl
fwait
int3
xor
es
xchg
inc
mov
mov
test
and
nop
sub
sub
xchg
arpl
les
jg
ins
xor
fimul
sti
fs
scas
imul
je
pop
loopne
mov
mul
loope
push
leave
std
cmp
push
adc
je
sbb
sub
test
dec
inc
movs
xor
and
cdq
and
cdq
std
dec
add
add
push
jl
ret
ins
in
add
xchg
in
push
jmp
dec
loopne
pop
sbb
mov
mov
imul
add
icebp
int3
pop
xor
xor
addr16
and
xor
or
cmp
daa
push
jge
jbe
xor
sub
and
test
retf
test
pop
nop
and
je
enter
fidiv
outs
mov
dec
je
adc
clc
loopne
out
and
movs
mov
cli
in
xlat
and
sbb
xor
leave
pop
int3
iret
repz
sbb
xor
ss
loope
lods
js
xchg
sar
movs
sub
(bad)
cmp
ret
movs
add
aas
ins
push
gs
dec
pop
add
sbb
pop
movs
(bad)
mov
mov
sar
push
jg
imul
cdq
jne
shl
int
mov
(bad)
aas
jge
addr16
jae
test
push
mov
test
call
sub
push
scas
mov
adc
addr16
pop
sbb
cs
add
data16
repz
or
jbe
sahf
adc
lods
mov
and
mov
outs
jae
daa
xor
mov
addr16
adc
bound
mov
dec
dec
pop
sbb
fst
int
in
inc
in
test
cmp
(bad)
cmc
or
addr16
outs
mov
push
jmp
(bad)
cmc
aam
cld
int3
outs
enter
mov
test
push
cmp
add
enter
popf
mov
sub
jmp
mov
cld
ret
scas
mov
pop
or
mov
xor
inc
or
mov
inc
pop
cmp
mov
jg
loop
das
dec
sub
retf
repnz
stc
mov
loope
jge
adc
jp
imul
in
cmp
fnstcw
or
fdivr
stc
dec
push
(bad)
sti
mov
sbb
mov
inc
push
cmp
adc
lock
(bad)
cli
into
hlt
xlat
or
xchg
mov
sub
cmp
push
jnp
dec
jb
push
popa
xor
mov
retf
adc
lds
rol
or
sbb
ret
mov
sar
in
(bad)
mov
cmp
push
mov
retf
sar
pop
out
xor
xchg
xor
xchg
adc
mov
inc
(bad)
loopne
inc
push
and
adc
fs
(bad)
cwde
cli
jl
call
dec
in
sub
fcomp
inc
hlt
test
mov
fmul
sbb
xchg
mov
cmp
je
fst
add
sbb
outs
sbb
push
psubsb
fwait
mul
adc
addr16
xchg
inc
lea
popa
lods
push
mov
and
(bad)
sti
test
push
lea
mov
add
mov
in
imul
test
fild
mov
cmp
mov
(bad)
fiadd
mov
out
cmps
stc
inc
loope
adc
repz
mov
je
movs
jbe
jg
dec
dec
dec
scas
fsubr
xor
pop
pop
(bad)
loope
fst
mov
pop
pop
rol
mov
jmp
loop
leave
adc
cmps
retf
out
out
inc
hlt
bnd
int
mov
movs
nop
dec
mov
adc
mov
jmp
rcr
ja
mov
cmp
out
call
lahf
mov
push
xor
fisubr
adc
je
in
(bad)
jmp
push
cld
mov
pop
jo
and
(bad)
sbb
or
das
mov
fiadd
cmp
or
lods
adc
mov
mov
pop
jle
rcr
sbb
xchg
pop
or
ret
xor
pop
mov
scas
cdq
xchg
shl
sub
rcl
push
inc
adc
add
dec
test
ins
inc
add
(bad)
cwde
sbb
jnp
fsub
xor
mov
shl
push
leave
dec
and
and
or
cmp
(bad)
or
add
lahf
lods
cmp
cdq
test
mov
jl
jmp
add
imul
push
ja
(bad)
dec
push
jo
jle
pop
dec
fnstenv
mov
or
out
xchg
xchg
scas
pushf
movs
mov
cmp
add
fist
adc
enter
hlt
mov
dec
not
xor
je
stos
idiv
mov
xchg
jge
in
add
and
xchg
in
pusha
or
int3
jecxz
mov
jle
in
mov
and
in
cmp
jns
stos
outs
sti
pop
ins
push
ficom
fidivr
imul
jle
mov
ins
dec
aas
pop
or
pop
cwde
fsub
repnz
in
push
pop
shl
cmp
jnp
repz
stos
pop
pop
imul
ins
xor
cmp
sbb
jle
(bad)
dec
xlat
movs
mov
ja
cmp
outs
test
adc
mov
iret
xor
adc
sub
ja
clc
adc
jmp
dec
sub
sbb
inc
mov
fwait
add
imul
inc
dec
fxam
imul
mov
adc
mov
rol
add
add
imul
pop
adc
push
jno
repnz
fwait
adc
mov
push
dec
nop
pop
sbb
mov
sbb
sub
pop
stos
(bad)
fist
mov
lahf
sbb
sbb
adc
mov
xor
sub
push
sub
dec
jge
hlt
test
mov
jmp
jne
mov
push
fwait
imul
es
and
pop
mov
or
add
xor
retf
mov
cmp
push
nop
lock
xchg
push
add
mov
lock
dec
popa
pop
pop
pushf
adc
sahf
or
test
cmc
cli
pop
stos
push
adc
jne
cwde
add
jge
inc
push
mov
loop
imul
xor
pusha
add
es
add
mov
or
std
mov
stos
add
mov
(bad)
jmp
jl
gs
sub
mov
les
clc
xchg
adc
sub
xchg
aas
lahf
cli
test
cmp
xchg
inc
and
lea
sbb
pop
and
adc
mov
jl
call
pop
jne
(bad)
call
sar
shl
sti
mov
fwait
dec
and
imul
test
adc
mov
add
push
cdq
jb
push
clc
retf
sbb
or
prefetchw
ins
fisttp
in
jecxz
psrld
pop
aas
dec
pushf
imul
pop
push
cmp
dec
popa
pop
call
outs
xor
lods
jbe
pop
out
outs
aad
mov
rol
jmp
jb
es
jg
es
ret
fld
jp
(bad)
rcl
test
ins
(bad)
pop
sub
inc
mov
push
push
xchg
mov
mov
xor
sbb
clc
(bad)
pop
inc
out
test
hlt
add
mov
sbb
sub
sub
jae
sti
or
mov
cmps
ficomp
clc
pop
(bad)
pop
lock
je
pushf
popa
fstp
cmp
test
retf
stos
or
add
cmp
(bad)
push
sbb
imul
call
inc
mov
jle
ja
arpl
outs
fcom
nop
adc
sahf
mov
dec
in
push
(bad)
hlt
and
fstp
in
cmp
ja
mov
fsubrp
dec
or
inc
(bad)
vpmulhw
push
(bad)
or
(bad)
(bad)
pop
movs
adc
inc
push
mov
sbb
push
and
push
mov
rcl
jmp
leave
pop
xchg
sbb
nop
adc
lahf
or
pop
pop
xchg
imul
mov
cmc
jno
inc
sar
adc
adc
push
jns
popf
mov
xchg
mov
cmps
dec
inc
js
sbb
movs
jp
retf
into
or
gs
addr16
or
jmp
and
xor
push
ret
std
mov
bound
icebp
vhsubps
push
(bad)
and
xor
pop
shl
cmp
xor
inc
mov
jnp
dec
push
jmp
sbb
scas
mov
jno
jmp
pop
lea
je
pop
ret
fsubr
inc
inc
test
mov
pop
jp
add
pusha
add
jo
jo
mov
ins
add
lods
pop
cmp
push
sbb
lock
test
daa
ins
jne
dec
jl
test
cdq
arpl
lahf
loope
mov
sub
inc
cs
cdq
stc
or
adc
jo
call
sub
xor
xor
mov
daa
(bad)
dec
sti
and
add
jns
mov
mov
pop
dec
or
and
pop
out
into
stos
cli
adc
movs
daa
dec
addr16
push
aaa
imul
push
mov
gs
pop
sbb
and
test
push
out
iret
js
jge
mov
sbb
nop
mov
jle
pop
stos
cmc
repnz
test
out
mov
mov
cs
ror
jb
lds
mov
mov
cmp
jnp
adc
int3
sti
adc
push
test
addr16
pop
cmc
inc
ror
mov
pop
lods
jmp
sub
ficomp
xchg
stc
add
popa
push
cmp
jo
mov
std
xchg
fwait
xchg
mov
aas
lock
inc
jns
xor
sbb
jge
icebp
xor
loope
lock
shl
mov
mov
jo
test
push
xor
(bad)
xor
out
gs
mov
adc
int3
hlt
loop
(bad)
js
xor
cwde
sbb
or
jl
sar
inc
out
sbb
ja
les
pop
mov
sbb
jp
lds
nop
int3
loop
or
mov
fst
jnp
pop
nop
leave
mov
jecxz
iret
fwait
out
dec
loopne
neg
and
cmp
call
adc
pop
jnp
lea
shr
test
mov
jp
fisttp
(bad)
mov
ja
add
xchg
mov
push
ss
fild
sub
movs
loop
std
cmp
mov
stos
addr16
cli
es
xor
loop
cmps
add
xchg
mov
xchg
jns
stc
hlt
add
clc
leave
sahf
lods
pushf
xor
test
jne
push
pop
mov
test
xchg
lahf
push
jne
sar
jns
lahf
jp
fadd
push
and
push
mov
cs
dec
int3
pop
test
psrld
nop
cmp
sub
test
punpcklwd
push
in
jp
add
mov
movs
jl
leave
jo
adc
scas
xchg
aas
loope
imul
aad
dec
stos
jmp
fsub
inc
inc
xchg
jns
(bad)
xor
sub
dec
test
sbb
adc
out
(bad)
ret
add
out
xchg
mov
mov
or
xlat
xor
push
adc
cmp
jno
jecxz
adc
xor
shl
xor
shr
imul
aaa
or
fcmovnu
call
xor
loopne
(bad)
mov
cmp
xor
cmp
inc
sbb
pop
les
mov
cmps
lea
inc
mov
(bad)
test
arpl
xchg
mov
cmp
inc
cmp
jb
push
jbe
clc
push
add
xchg
mov
clc
pusha
pop
mov
mov
dec
push
repnz
in
jmp
fdivr
xor
and
ror
cmc
fdiv
pop
outs
dec
or
pop
and
push
nop
mov
fld
stos
fdivr
add
idiv
cdq
test
sub
cmp
or
aam
cmp
mov
and
into
dec
add
cmp
sub
push
pop
or
pop
and
sub
fistp
call
sahf
test
call
dec
cmp
push
mov
(bad)
dec
ins
fs
jmp
imul
ds
push
dec
push
ret
or
lods
es
add
inc
or
xchg
xor
pop
push
adc
xor
mov
xor
inc
mov
jecxz
div
jo
les
jbe
and
je
int3
call
push
test
mov
pop
mov
arpl
or
jns
adc
mov
xchg
pop
aaa
retf
aaa
in
shl
(bad)
jns
lahf
sbb
adc
shl
or
mov
das
popf
cmp
mov
and
enter
(bad)
mov
sbb
idiv
adc
in
jg
loope
test
imul
cmp
mov
sub
adc
sbb
fimul
add
sbb
push
test
mov
push
int3
fistp
cmp
outs
xor
jp
jo
test
out
cmp
sub
cmp
ss
inc
xor
push
outs
cmp
jno
movs
iret
ror
pop
xor
sub
aas
sub
push
dec
bound
(bad)
std
pop
fst
je
jmp
ror
out
sahf
lds
fs
pop
inc
mov
loopne
dec
jnp
ror
leave
sbb
rol
jae
cmp
jne
cmp
out
mov
mov
xor
xchg
aam
cmp
sub
mov
and
xor
cs
mul
adc
ins
gs
(bad)
fbld
mov
cwde
lods
imul
ror
adc
pusha
repz
mov
repnz
sahf
xchg
rcl
jno
jecxz
sub
fidiv
ins
daa
pop
xchg
ja
imul
jb
xchg
xchg
mov
movs
jns
clc
xor
inc
in
mov
and
xlat
fcmovbe
lahf
lods
adc
pop
dec
xchg
out
cmp
sub
xor
jmp
jae
push
in
dec
add
enter
mov
inc
aad
(bad)
out
data16
xchg
push
xor
rcr
jmp
xor
adc
push
sbb
aaa
std
aas
jne
dec
call
xor
arpl
jae
inc
push
mov
jne
imul
repz
pop
xchg
dec
mov
mov
jg
mov
cwde
addr16
in
sub
loop
mov
and
mov
shr
mov
mov
addr16
jg
cld
xchg
ret
jl
pusha
punpckhbw
and
arpl
fwait
out
aad
ror
xchg
mov
and
mov
push
xor
out
push
mov
xchg
mov
sub
pop
out
xchg
push
sub
leave
ds
scas
les
div
dec
ins
pop
mov
push
movs
outs
xchg
dec
jmp
cmp
mov
xchg
repz
out
and
pop
jmp
fwait
loope
pop
ror
sbb
dec
rcr
sbb
adc
xchg
adc
or
cmp
iret
sub
mov
pushf
bound
and
dec
ins
cmp
and
call
xchg
dec
call
jo
push
(bad)
pextrw
daa
arpl
jmp
rcl
add
ret
mov
cli
mov
or
frstor
xchg
and
jmp
jmp
(bad)
ins
gs
(bad)
ret
fcomp
mov
push
loop
enter
icebp
pop
icebp
das
dec
ret
pushf
out
push
rol
int3
shl
lea
(bad)
je
shl
jb
cmp
std
dec
xchg
push
jne
mov
fst
xor
(bad)
lock
push
fdivr
sbb
push
test
xchg
fmul
cmp
inc
inc
ret
mov
sbb
out
inc
or
sti
clc
push
push
add
in
nop
dec
inc
repz
sbb
fwait
inc
fnstsw
and
test
enter
ins
dec
push
xor
sbb
jmp
xchg
(bad)
pop
cmp
test
repnz
adc
pop
cdq
shr
fnstcw
les
add
cmp
mov
mov
cli
arpl
sub
mov
mov
mov
sub
push
js
xor
jmp
loope
pop
push
xlat
call
fnsave
jmp
jmp
push
adc
pushf
inc
(bad)
in
arpl
cmp
jmp
or
xor
pop
jo
fadd
xchg
inc
add
push
jbe
xchg
loopne
adc
push
rol
sbb
outs
push
mov
test
lea
test
arpl
cmp
sbb
adc
pop
sbb
push
cmps
cmp
adc
mov
jo
dec
test
adc
pop
scas
test
(bad)
mov
cmp
pushf
inc
and
xor
pop
pop
mov
in
or
sub
sbb
mov
cmp
jmp
movs
inc
jmp
mov
jae
lds
int
addr16
sbb
sub
dec
hlt
bound
jno
jo
fwait
xchg
js
loopne
mov
lds
enter
and
adc
outs
jmp
cli
mov
adc
int3
nop
pop
xor
ror
sahf
add
ins
ret
call
outs
xor
and
pushf
jecxz
push
hlt
fwait
jae
nop
inc
jg
aad
mov
lahf
xor
int3
xor
xor
inc
mov
dec
fmul
adc
and
mov
sbb
pop
push
fwait
mov
sbb
xchg
mov
iret
scas
xchg
or
add
dec
and
mov
iret
icebp
cmp
and
jp
cmp
popa
add
mov
adc
mov
ds
jmp
(bad)
call
outs
push
(bad)
in
xchg
sub
rcr
jae
cmps
fidivr
lods
jl
repz
daa
xchg
inc
pop
sub
adc
mov
inc
cmc
inc
inc
push
sbb
add
loope
push
loope
sub
adc
pop
sbb
shr
std
pushf
mov
mov
pop
push
ins
into
dec
aad
in
ror
cmps
fdiv
xchg
adc
jbe
ja
enter
mov
xchg
sbb
cmc
rcl
call
push
xor
aas
pop
shr
daa
ins
adc
xchg
sub
fnstenv
scas
imul
add
adc
dec
jno
nop
cs
sbb
cli
retf
xchg
imul
add
xor
and
or
mov
or
jns
and
je
and
ret
es
cld
(bad)
pop
push
scas
xchg
outs
retf
push
pop
push
xlat
add
dec
push
lods
jmp
cmps
(bad)
xchg
stos
aad
adc
test
and
cmp
or
xchg
mov
(bad)
sub
mov
lods
sub
xor
push
mov
cmp
sub
xchg
inc
nop
mov
jg
movs
jp
and
push
dec
inc
rcl
inc
jge
ret
div
sbb
push
cmc
or
jns
mov
loop
jmp
mov
cld
gs
pushf
mov
adc
out
fsubr
adc
cli
(bad)
retf
in
inc
lea
mov
add
fs
sbb
mov
in
test
pop
cmp
dec
or
or
dec
xchg
or
leave
stc
pop
add
loopne
fisub
jns
shr
loop
xchg
jmp
rol
adc
iret
adc
inc
xor
icebp
imul
neg
lahf
jbe
mov
pop
jo
xor
mov
cld
dec
push
je
jg
or
mov
je
mov
les
jmp
lods
mov
mov
inc
mov
sub
scas
jnp
dec
add
cld
push
test
lock
mov
shl
fdiv
icebp
xor
out
in
jno
or
add
mov
cmps
mov
adc
ret
push
ds
icebp
xor
sub
pusha
inc
sub
add
mov
sbb
ds
ror
cdq
mov
inc
mov
mov
or
imul
mov
dec
retf
mov
fidiv
(bad)
xchg
gs
dec
in
imul
repnz
sbb
sub
clc
sti
aas
(bad)
out
into
mov
jb
xor
cmp
xchg
push
outs
js
imul
fist
popf
pop
adc
(bad)
jecxz
sub
ret
dec
inc
lods
pop
inc
test
mov
mov
lods
shl
mov
daa
dec
es
push
jl
add
lods
sbb
in
mov
mov
sub
ret
sub
lea
and
sub
xchg
and
loope
jl
cmp
sub
je
fsubr
enter
shl
je
aas
mov
(bad)
push
and
jmp
jmp
adc
cmc
mov
jl
xchg
pop
mov
push
call
cmp
inc
jbe
add
push
test
int3
sti
mov
arpl
pop
test
out
sbb
aas
dec
jno
push
add
xchg
xor
pushf
pop
sbb
scas
adc
dec
pop
out
inc
test
stos
fld
fwait
push
scas
rol
adc
pop
repz
pop
inc
dec
mov
je
pop
enter
jge
and
mov
mov
sub
xchg
sub
cmp
jae
leave
add
or
push
xchg
scas
repnz
jmp
stos
adc
lds
and
ins
jle
push
scas
arpl
and
add
lods
arpl
(bad)
out
arpl
sub
in
dec
jo
adc
sar
sbb
lahf
dec
out
pop
inc
jbe
mov
mov
std
test
mov
mov
pop
pop
sub
xchg
retf
lock
jne
mov
jge
push
arpl
fld
cmc
mov
adc
test
xor
jecxz
push
pushf
retf
retf
and
mov
dec
mov
adc
outs
stc
daa
stc
mov
inc
xor
jns
xchg
and
cmp
fs
mov
ds
mov
dec
pop
pop
pop
loop
jne
pop
jle
adc
je
mov
xchg
and
sti
xor
mov
sub
push
test
repnz
dec
fwait
out
xor
xor
mov
ja
movs
lds
fild
push
sahf
push
sub
pop
jmp
sbb
push
dec
dec
cmp
pop
mov
fadd
and
mov
sub
mov
test
repnz
mov
popf
ret
call
jecxz
or
mov
lock
xchg
xchg
inc
bnd
sbb
mul
(bad)
dec
das
fs
mov
push
icebp
(bad)
mov
pop
and
jmp
test
push
out
adc
jbe
clc
adc
call
jb
jmp
adc
outs
push
sbb
lods
bound
shl
push
ja
shr
inc
(bad)
jno
mov
xchg
jge
retf
aas
inc
mov
xor
retf
in
xchg
in
mov
loop
xlat
and
out
ret
out
mov
sbb
sub
ss
cld
out
mov
sub
sbb
inc
push
rol
cld
mov
dec
push
sar
add
fmul
js
test
mov
cli
(bad)
gs
into
xor
out
fiadd
push
mov
lahf
aas
popa
movs
aam
cdq
xor
push
jecxz
arpl
rcl
sbb
lds
xchg
or
daa
jbe
pop
xchg
fstp
push
xor
imul
pop
test
dec
sub
ror
jmp
jge
cmovne
push
xchg
adc
in
out
xchg
outs
rol
jne
imul
popa
loopne
adc
push
xor
jnp
inc
ror
aam
aas
sub
add
test
mov
or
fwait
addr16
mov
pop
lds
dec
dec
jge
jmp
jle
js
jno
push
mov
test
adc
or
cwde
arpl
int3
jno
add
jmp
and
cs
and
in
adc
pop
xchg
dec
mov
ret
mov
sahf
lods
jecxz
mov
dec
mov
add
and
iret
xchg
pusha
dec
outs
ret
stos
adc
sub
jmp
pop
ds
outs
xor
(bad)
push
cmp
(bad)
and
jp
icebp
test
es
cmp
stos
das
or
in
jae
cmps
in
cli
cmp
cmps
dec
mov
mov
add
sub
lods
fwait
jecxz
jecxz
and
dec
sub
pop
push
pop
cdq
js
stc
mov
push
mov
mov
stc
xchg
pop
or
and
add
inc
clc
aam
in
test
mov
cmp
xor
xchg
dec
mov
xchg
inc
jl
leave
retf
push
dec
xor
push
lods
cmps
int3
push
push
xchg
mov
call
push
fsubp
xchg
xor
popa
sub
dec
mov
inc
mov
jnp
outs
sub
int
test
ins
popa
out
xchg
mov
jne
sti
push
jne
mov
adc
inc
xlat
pusha
jnp
add
ds
daa
out
jne
(bad)
xlat
cmp
(bad)
clc
shl
cld
sub
pop
rcl
aas
dec
or
sti
xchg
push
dec
jecxz
and
retf
in
out
pop
xchg
push
aaa
retf
cmp
xor
push
adc
push
mov
jne
fiadd
adc
ss
cmp
cmps
sub
call
pop
mov
or
ins
cmp
rcl
je
pusha
ret
jmp
aad
pop
xor
pop
mov
div
inc
das
and
push
cmps
fistp
cmp
fstp
je
sub
jp
jnp
fwait
xor
repz
stos
add
sahf
int
in
rcl
sub
xlat
sti
aad
or
das
call
sub
push
sar
sub
and
gs
into
cmp
and
fwait
aaa
and
xor
cmp
ins
dec
mov
in
inc
(bad)
pop
call
sbb
lea
test
cmps
pop
jae
mov
or
adc
aam
adc
jne
adc
mov
adc
add
fidiv
xor
and
and
ss
adc
les
je
ja
dec
(bad)
movs
jnp
nop
(bad)
stos
out
add
adc
cmp
jg
out
sbb
leave
ins
mov
add
adc
cmps
fdivr
call
aaa
scas
xor
(bad)
lds
ds
inc
inc
test
fcomi
loopne
(bad)
push
push
cmc
pop
fwait
dec
lock
and
mov
cmp
xlat
js
call
retf
call
movs
lea
popf
jb
dec
dec
mov
(bad)
push
inc
xor
and
pop
retf
jmp
cmp
jae
sbb
ins
adc
inc
cdq
je
es
not
lahf
lock
xor
add
popa
add
cmp
mov
ret
rcr
mov
or
(bad)
sbb
(bad)
inc
add
fucomi
gs
mul
icebp
out
inc
(bad)
xchg
pop
adc
(bad)
data16
test
or
pop
hlt
dec
and
or
cmp
rcr
sar
mov
and
mov
out
push
mov
sub
inc
dec
enter
inc
je
sar
test
push
lahf
pusha
ins
mov
sub
int3
push
xchg
shr
mov
mov
mov
jmp
pop
movs
mov
push
adc
xchg
mov
enter
in
mov
(bad)
or
xchg
fist
dec
fcomi
stc
pop
xor
mov
mov
test
pop
icebp
lods
int
repz
gs
mov
ins
mov
aas
nop
pop
mov
jecxz
cmp
push
adc
scas
inc
sub
dec
or
lahf
jbe
jo
int3
stos
cli
call
jp
xor
or
out
pop
neg
cmp
mov
sbb
and
sub
xor
sbb
test
stos
ficom
loopne
mov
push
pop
and
dec
cwde
out
scas
cmp
sbb
adc
dec
cmps
pop
inc
push
pop
aas
adc
jmp
push
or
cmp
stc
and
(bad)
fldenv
rcl
mov
imul
lahf
inc
loop
mov
mov
retf
jne
sub
mov
cbw
test
mov
jbe
fist
test
sub
jae
test
cdq
inc
les
xchg
dec
jmp
dec
jl
outs
fidiv
loope
mov
pop
cmp
push
int
mov
dec
sub
sbb
ret
pop
sti
sahf
outs
lea
adc
imul
jge
mov
(bad)
mov
in
pop
jns
mov
cdq
mov
mov
or
pushf
stos
ret
out
xor
jmp
mov
ds
jmp
pop
mov
fisttp
mov
push
dec
retf
mov
loop
(bad)
xor
leave
jmp
aaa
js
pop
rcl
jp
movs
mov
shr
push
push
pop
mov
push
sbb
popa
adc
(bad)
xor
(bad)
imul
pop
ins
div
and
sbb
adc
jns
cld
sbb
jg
cs
outs
fld
mov
mov
and
or
push
test
outs
imul
or
stos
mov
push
les
jno
shl
arpl
fucom
rol
(bad)
pop
inc
fadd
dec
add
pop
aad
repz
mov
xchg
mov
into
fistp
jge
out
pusha
retf
sub
ror
jl
std
cmp
push
xchg
pushf
add
xor
in
pop
push
test
int3
popf
xlat
inc
mov
jb
dec
test
pop
cmc
dec
les
ret
mov
das
adc
(bad)
test
dec
pushf
ret
lods
jg
adc
xor
adc
and
daa
and
fcom
addr16
jmp
arpl
clc
addr16
fild
(bad)
imul
add
add
rcr
dec
pop
push
aas
xor
lds
bound
mov
dec
push
and
int
push
rol
cmp
icebp
les
xlat
pop
xor
mov
mov
rol
and
xor
imul
mov
das
mov
push
ffree
mov
adc
mov
ss
adc
mov
fisubr
rcr
sar
ins
(bad)
and
pop
popf
imul
jmp
(bad)
out
sti
dec
rcr
fucomip
fidivr
fnstsw
and
stc
mov
imul
in
mov
adc
scas
xor
or
fsubr
imul
and
out
(bad)
retf
mov
(bad)
pop
out
lea
pushf
add
(bad)
xlat
mov
scas
sbb
and
sub
sub
adc
ficom
mov
lea
inc
mov
pop
lods
sub
xchg
mov
cmc
outs
jns
push
loope
sbb
dec
jo
or
cmps
(bad)
push
aam
cli
repz
pushf
or
push
or
outs
and
js
mov
(bad)
fstp
dec
fidivr
and
mov
in
dec
xchg
jo
dec
outs
mov
mov
cdq
mov
pop
fldenv
or
mov
in
call
adc
out
sahf
test
or
mov
xor
sub
popf
push
cld
fmul
shl
adc
fisub
jecxz
les
sub
nop
adc
and
imul
add
(bad)
call
pop
imul
inc
mov
jns
dec
addr16
loopne
pushf
jne
movs
sbb
cld
stos
je
in
loop
mov
jecxz
jb
add
outs
lock
mov
scas
into
test
test
jne
in
xchg
xlat
jns
adc
sbb
and
or
and
pop
xor
(bad)
and
pop
sub
test
and
mov
lea
dec
sub
jg
sti
dec
sbb
xchg
test
push
inc
sub
cmc
ret
test
or
in
push
lods
or
sub
push
push
sbb
mov
dec
jno
dec
imul
movs
and
hlt
cli
pop
stos
xchg
out
pop
xor
mov
jo
(bad)
push
inc
pop
and
adc
jge
push
push
imul
pop
stos
sub
mov
cmp
mov
adc
jmp
pusha
cmp
xor
mov
pop
or
pop
mov
or
fcmovnbe
les
mov
push
sub
in
adc
repz
imul
(bad)
pop
and
or
(bad)
push
xor
jmp
xor
mov
and
movs
lahf
jns
pop
(bad)
stos
pop
or
mov
dec
lods
xor
push
out
mov
jo
xchg
ins
popa
out
inc
mov
and
fistp
adc
pop
mov
dec
movs
fwait
jmp
retf
mul
loopne
test
int
jo
ret
mov
not
xor
fisub
shl
stc
sbb
rcl
adc
mov
adc
mov
sbb
inc
dec
cdq
add
or
jle
cmp
and
scas
(bad)
jbe
outs
pop
neg
push
aam
shl
popf
(bad)
movs
inc
stc
shl
jns
addr16
bound
xchg
(bad)
mov
fiadd
mov
sub
in
push
mov
xchg
jmp
pop
mov
xchg
push
mov
sahf
push
pop
les
popf
dec
and
sbb
shl
aam
aas
loope
mov
sbb
mov
mov
leave
loop
xor
nop
mov
ret
cmps
pop
out
js
pop
or
out
stos
xchg
repnz
hlt
out
mov
je
mov
jne
fsubr
add
mov
out
ins
push
cld
pop
(bad)
push
daa
push
cmp
in
jmp
cmp
aad
shr
jmp
push
loope
push
test
sub
sbb
cmp
xor
data16
adc
repz
push
je
cs
add
dec
popa
adc
stc
push
inc
ror
xchg
mov
mov
dec
xor
or
hlt
aaa
jmp
pop
loop
jmp
xor
aas
cs
mov
push
retf
inc
inc
adc
ss
jns
arpl
fiadd
daa
addr16
dec
pop
test
movs
add
push
repz
loope
aaa
outs
scas
stos
std
mov
adc
pop
test
add
movs
sbb
cdq
and
mov
in
sbb
mov
(bad)
jno
loopne
xchg
mov
cmc
aaa
out
loopne
add
mov
mov
in
in
retf
sub
xor
and
jecxz
out
out
add
movs
jecxz
(bad)
jmp
jge
pop
mov
add
repnz
sbb
pop
test
and
pop
loop
fiadd
dec
jmp
lods
pop
sar
inc
enter
cmps
les
xchg
leave
dec
and
dec
push
loop
xor
adc
mov
pop
cmp
ss
xchg
bt
cmp
mov
xor
shrd
sub
push
jae
(bad)
pop
mov
loopne
icebp
ja
xor
or
mov
jns
cmp
addr16
sub
cwde
hlt
sbb
retf
icebp
jle
bound
jle
lahf
inc
mov
push
(bad)
arpl
cmp
fwait
add
add
addr16
call
pusha
push
mov
jmp
es
fnstcw
inc
imul
mov
das
xchg
into
mov
push
and
cdq
rol
rol
sub
mov
out
outs
cmp
fwait
(bad)
mov
push
loopne
cmp
xor
mov
out
call
cli
int
retf
inc
neg
repz
and
mov
dec
push
jp
xor
cmc
jno
mov
hlt
cs
sub
push
es
mov
ins
cs
call
fild
aad
or
leave
outs
in
mov
lods
dec
mov
(bad)
repz
push
mov
push
add
mov
ret
pop
loopne
cmp
push
shl
push
cmps
sbb
jno
pop
rcr
push
cmp
or
or
pop
push
xchg
dec
or
sub
adc
ins
hlt
xor
lods
xchg
sub
(bad)
test
xchg
push
push
ds
mov
arpl
jno
(bad)
and
shl
test
dec
int3
mov
int3
test
into
dec
jg
or
push
push
sahf
outs
mov
rcr
retf
xor
outs
arpl
stos
and
nop
push
pop
and
push
jl
(bad)
movs
dec
loop
inc
or
jns
fcomi
or
popf
sub
aas
das
clc
mov
in
inc
sti
mov
enter
aad
arpl
loope
call
mov
cmps
sahf
mov
pop
pop
in
outs
or
mov
or
ds
or
add
and
lea
(bad)
aam
in
jno
or
ficomp
or
in
addr16
push
ja
retf
mov
gs
out
retf
pop
and
sar
jl
xchg
jno
shl
adc
jb
inc
cmps
sar
ds
jns
dec
shr
inc
sub
and
sbb
pop
lods
xchg
call
mov
add
jle
push
and
int3
push
ss
pop
jmp
fcom
call
cdq
cmps
sbb
xlat
jb
mov
sub
emms
inc
(bad)
(bad)
jp
jns
and
xchg
push
sub
xchg
out
hlt
enter
adc
sbb
into
retf
hlt
mov
add
dec
ins
in
imul
(bad)
xor
retf
pushf
or
out
jl
and
push
xor
jbe
movs
lahf
ss
lahf
shr
loop
xchg
pop
test
mov
fyl2xp1
sbb
fidiv
mov
aad
xor
adc
xchg
aad
mov
(bad)
push
fdivr
or
outs
cmp
mov
fcom
mov
mov
daa
xchg
xlat
(bad)
jbe
popa
push
pop
mov
mov
xchg
xchg
(bad)
ror
push
rcr
mov
into
lds
jl
les
and
fsubp
xchg
sbb
xchg
scas
mov
test
scas
mov
dec
popa
sub
scas
pop
push
mov
scas
fsubr
and
mov
rol
push
jecxz
xor
add
hlt
ss
ret
repnz
repz
pop
cmp
sbb
sbb
fnsave
mov
add
inc
dec
lods
xor
clc
mov
sub
jbe
inc
dec
push
aam
pushf
out
into
pop
and
dec
fwait
repz
xchg
shl
call
data16
lods
test
fwait
jp
cli
add
pop
xchg
sub
xchg
pop
ret
dec
dec
aaa
xor
push
xchg
cld
jmp
sbb
dec
mov
jecxz
pusha
fmul
int3
or
xor
mov
add
imul
mov
lock
dec
fs
push
push
sbb
xor
sti
jle
sti
cmp
sar
es
aas
xor
mul
adc
push
movq
int3
add
shl
cwde
mov
lds
xor
dec
ror
sub
aaa
or
mov
xor
push
sub
(bad)
adc
inc
fnop
dec
inc
cs
(bad)
icebp
mov
or
jge
fisub
inc
mov
jmp
fstp
sbb
test
imul
out
jge
loopne
call
mov
jo
les
das
or
repz
imul
dec
fisub
not
xchg
add
mov
fdivr
dec
ds
(bad)
in
xchg
add
test
nop
into
push
dec
mov
xchg
fcom
out
add
push
adc
sub
or
xor
inc
cwde
sub
mov
stc
imul
rcr
out
jb
mov
mov
jg
icebp
xor
add
cdq
jo
imul
shl
dec
and
dec
(bad)
ins
or
mov
dec
scas
cs
push
loop
(bad)
cld
out
mov
dec
nop
test
js
movs
shl
loop
xor
dec
inc
push
jnp
mov
inc
into
dec
(bad)
hlt
push
jmp
(bad)
jo
push
ss
push
pop
add
or
jmp
inc
adc
fsubr
fisubr
jg
adc
js
xlat
fmul
movs
cmp
sub
into
inc
fnstsw
dec
and
adc
outs
fnstsw
hlt
inc
scas
stc
lods
ds
sbb
sub
mov
inc
fisttp
repnz
xchg
add
sub
cmps
mov
jecxz
into
jnp
inc
xchg
sbb
(bad)
push
rcr
aam
sar
ror
and
ss
in
in
rcl
popa
jnp
scas
icebp
xchg
fmul
push
clc
or
iret
push
push
stc
addr16
pop
mov
xor
dec
or
mov
push
mov
js
(bad)
xor
sub
ret
shl
bound
sbb
jmp
mov
push
fldcw
pop
arpl
xchg
retf
arpl
in
pop
mov
jnp
push
mov
jge
jp
or
ins
fstp
mov
pop
push
sub
inc
ret
pusha
dec
call
movs
fdivr
mov
rcr
rcr
cld
add
imul
xor
adc
xchg
mov
cs
mov
lsl
mov
shl
xor
adc
jbe
sbb
daa
adc
scas
xor
push
jnp
lods
cmp
mov
fisttp
(bad)
out
jl
xchg
(bad)
jmp
int3
daa
cmps
mov
(bad)
push
movs
neg
out
mov
and
leave
mov
das
or
out
iret
dec
inc
add
sub
jmp
mov
xchg
ins
mov
mov
mov
push
rep
or
inc
imul
xchg
ror
loope
dec
call
lds
iret
add
addr16
jp
fbld
ror
sbb
mov
lock
xor
int
sahf
add
pop
mov
(bad)
stos
push
pop
jge
imul
jp
adc
push
les
or
xor
fcomp
pop
xchg
ror
jmp
jbe
popa
add
shl
arpl
inc
ss
push
xor
imul
neg
clc
rcl
sar
(bad)
or
stos
pop
mov
cmp
cmp
outs
jo
xor
in
out
fcmovne
shl
push
mov
les
or
rcl
bound
cmps
sbb
retf
(bad)
dec
pop
cs
fdivr
push
inc
adc
mov
mov
bound
xlat
loope
pop
xor
(bad)
cmp
cwde
and
nop
(bad)
sbb
jmp
push
sub
iret
leave
or
add
sub
pop
lods
pop
cmp
(bad)
movs
mov
jns
dec
in
jmp
dec
sahf
repz
jno
dec
xchg
or
pop
adc
sbb
mov
xchg
jne
and
and
mov
xchg
mov
add
mov
ins
das
lods
movs
add
je
dec
push
pop
nop
test
ins
and
shr
sub
iret
adc
push
sar
push
push
jmp
cld
mov
cmp
pushf
jecxz
xchg
mov
cli
div
js
cmp
fwait
cmp
sar
jae
daa
sub
or
ins
mov
(bad)
frstor
lods
cmps
xchg
pop
jmp
gs
retf
outs
stos
sbb
test
cmc
pop
push
jmp
pop
adc
sahf
sub
fstp
lds
pop
push
jge
mov
js
xchg
dec
mov
dec
mov
movs
test
ja
mov
rcr
pop
mov
sbb
out
sub
jo
pop
push
ss
call
cdq
aas
mov
stos
ret
inc
repz
mov
pushf
mov
into
inc
xor
inc
ins
jns
jl
je
fwait
push
aas
rcr
div
mov
enter
add
jmp
retf
ret
imul
pusha
ficom
or
dec
(bad)
and
fcomip
cmp
push
bound
jp
inc
outs
in
hlt
ret
cdq
xor
jl
pop
add
pop
inc
mov
out
sub
cmps
add
and
mov
data16
mov
push
pop
xchg
enter
(bad)
imul
mov
sub
pop
pop
add
popf
add
mov
es
mov
les
imul
add
ja
sbb
in
sub
sbb
push
in
imul
pop
mov
jnp
pop
scas
iret
ret
push
xchg
inc
mov
cmp
adc
xor
or
stos
sbb
(bad)
mov
xor
mov
gs
jae
sub
pop
inc
fld
sub
mov
xchg
loop
call
shr
imul
mov
retf
xchg
jmp
or
and
sbb
movs
mov
in
adc
aad
push
push
add
fistp
jg
retf
repz
stos
(bad)
int
sub
pusha
rcr
pop
lods
adc
mov
pop
inc
mov
and
lock
(bad)
xchg
(bad)
jmp
push
add
jmp
pop
dec
ret
xchg
ins
div
jnp
fmul
dec
mov
mov
cmps
icebp
add
push
push
adc
xchg
jge
add
lock
mov
pop
push
jbe
adc
ss
adc
imul
adc
and
ds
loop
push
jb
sub
(bad)
ret
mov
xor
push
shl
fwait
ds
scas
push
movs
adc
popf
cmp
les
dec
pop
mov
cmp
add
add
jge
xchg
sbb
cmps
std
and
and
sti
dec
xor
fld1
jle
or
adc
cwde
inc
retf
sbb
lock
adc
ss
inc
out
sbb
scas
cmp
sbb
add
dec
push
mov
pop
mov
icebp
pop
mov
retf
jmp
mov
mov
jge
rcl
cmp
pusha
retf
test
loopne
xor
push
(bad)
jns
or
jbe
sbb
enter
or
xor
jmp
and
lds
dec
pop
adc
xor
jne
sbb
sub
xchg
jnp
outs
aam
push
inc
dec
lock
scas
sub
test
jl
(bad)
jo
mov
mov
mov
fcomp
jp
cs
mov
xor
mov
mov
or
adc
(bad)
aad
push
mov
add
push
and
lahf
sub
ficom
sub
cmc
pop
ins
push
add
mov
call
push
cmp
call
fdivrp
das
cmc
mov
stc
xor
fidiv
inc
push
lea
arpl
out
cmp
cmp
push
add
ret
push
stc
outs
js
or
ss
sbb
aas
int3
inc
or
xchg
fst
adc
jg
adc
pop
add
loop
pop
adc
sub
cmp
jbe
loop
mov
pop
dec
cmp
and
mov
pop
lods
pop
loope
jns
or
fbstp
ins
outs
imul
mov
push
test
push
aad
cmc
out
repz
pop
xchg
mov
inc
sbb
jno
sar
into
jecxz
inc
adc
repz
mov
fdiv
adc
jno
ror
sbb
and
or
and
hlt
sar
call
lea
push
rol
push
and
or
sub
pop
pusha
jb
mov
mov
mov
sub
or
lods
dec
jae
movs
jg
jmp
or
push
pop
out
pop
sbb
lahf
mov
cld
and
and
jle
push
fs
mov
xor
movs
(bad)
out
(bad)
xchg
xchg
sub
sub
stc
mov
mov
inc
mov
push
push
sbb
and
pusha
mov
sub
call
hlt
mov
fdivr
xchg
push
repnz
inc
inc
jns
ds
mov
shr
test
pusha
fstp
jmp
fsub
xchg
retf
cmp
and
loop
test
ficom
or
test
test
stos
out
pop
je
push
call
and
std
pop
sub
daa
outs
adc
mov
mov
xchg
and
and
mov
mov
jo
in
mov
pusha
add
mov
pusha
and
(bad)
inc
pop
ja
and
sbb
or
loop
pop
cdq
sbb
jle
mov
mov
jg
jmp
mov
inc
cli
adc
push
cdq
cmp
out
inc
in
push
sbb
push
push
mov
ret
out
cmp
aam
in
pop
mov
lds
in
xor
movs
sbb
retf
ret
xchg
fisub
(bad)
in
cmp
(bad)
pop
push
sbb
add
popa
fs
sub
adc
mov
mov
ins
es
cmps
pinsrw
test
es
jl
out
ja
loopne
scas
push
pop
lea
and
push
clc
fld
fdiv
outs
cld
aas
not
test
inc
loopne
dec
or
fs
hlt
mov
fdivr
mov
or
enter
call
or
fimul
mov
sbb
xchg
pop
push
leave
xchg
aam
cmps
ins
sub
jb
jae
pusha
jmp
dec
repnz
mov
(bad)
gs
push
sbb
cmps
jnp
call
mov
loopne
sar
sbb
fisubr
adc
pusha
pop
jns
mov
mov
mov
mov
add
sub
xchg
test
pop
call
cmp
mov
add
retf
inc
pop
pop
or
push
aam
inc
js
or
mov
cmp
and
mov
jp
inc
es
push
out
(bad)
fdiv
xchg
test
mov
mov
je
or
mov
push
or
mov
loopne
pop
mov
scas
cmp
bnd
and
addr16
push
add
push
out
jns
in
jns
inc
sbb
jb
test
mov
loop
(bad)
outs
xor
aad
cld
(bad)
shl
shr
arpl
or
dec
mov
ds
stos
mov
push
mov
dec
xor
mov
sbb
les
retf
cmc
pop
add
call
out
and
sbb
push
adc
fidiv
mov
push
push
sbb
pop
and
das
push
and
jge
gs
jno
cmp
mov
pop
xor
imul
pop
stos
or
and
stc
xor
test
inc
ins
inc
sar
sub
pusha
inc
imul
xchg
pop
call
jl
xor
loope
fcomp
test
xlat
les
mov
rcl
movs
mov
aam
stos
sti
mov
scas
or
or
aad
xchg
into
out
mov
mov
stc
pop
sbb
scas
imul
lods
call
iret
or
xor
inc
in
sbb
and
or
adc
sar
jb
movs
pop
dec
mov
es
xchg
jnp
xchg
mov
(bad)
dec
jp
jne
xchg
ds
(bad)
jmp
mov
pop
ret
mov
aaa
arpl
out
or
push
retf
(bad)
sbb
ins
ja
push
pop
(bad)
sbb
add
neg
dec
aad
pop
daa
ja
xchg
fisubr
and
(bad)
cmps
inc
sbb
inc
adc
(bad)
push
inc
dec
mov
bound
or
ror
adc
icebp
in
inc
pop
fsubr
sub
mov
(bad)
mov
bound
enter
not
je
push
es
ret
js
mov
out
mov
into
or
mov
push
dec
cli
jno
xor
mov
inc
cmp
aas
push
mov
(bad)
xor
or
dec
cmps
ror
bound
pop
pusha
rol
lods
sbb
ret
mov
or
inc
mov
dec
ret
inc
out
adc
cmp
mov
jo
sahf
retf
add
aas
jnp
jl
cmc
jle
dec
cdq
cld
fucomi
adc
mov
ins
cmp
cli
loope
adc
pushf
sahf
(bad)
shl
xor
sub
sub
xchg
dec
pop
test
sub
mov
add
jns
std
jb
xlat
xchg
sbb
mov
dec
sbb
outs
adc
mov
cmp
scas
jg
add
jge
jge
mov
cmps
mov
dec
dec
push
es
jb
mov
loope
loop
cli
test
or
stc
rcl
nop
sub
xchg
lods
dec
sbb
mov
mov
es
dec
adc
cmps
xor
clc
push
mov
adc
(bad)
jmp
xchg
sahf
aas
cmp
int
bswap
leave
movs
mov
sbb
jae
call
push
xchg
fstp
inc
push
push
test
xchg
stos
bound
repz
rcr
pop
mov
pop
xchg
mov
scas
in
xchg
sbb
aaa
cmp
popa
(bad)
dec
sbb
mov
mov
xchg
mov
test
xchg
cmp
xor
xchg
mov
das
mov
and
lea
cmc
jge
add
pushf
mov
mov
inc
inc
aas
sub
dec
fnstsw
jp
aad
cmp
push
sbb
pop
fadd
test
mov
push
mov
loope
(bad)
mov
xchg
(bad)
cmp
int3
lods
ins
or
call
out
jecxz
dec
je
xchg
pop
cmp
call
cmp
mov
cmps
pop
mov
or
jb
dec
retf
aam
xchg
test
cld
inc
clc
push
pop
sub
fdivr
aam
scas
sbb
pop
xor
test
mul
les
mov
and
jae
jmp
sbb
test
loop
bound
mov
xchg
mov
int
fdiv
dec
in
(bad)
push
cli
out
mov
xor
mov
mov
cmp
in
pop
mov
cmps
ret
mov
mov
inc
jp
adc
in
gs
mov
je
xchg
dec
mov
test
std
dec
aaa
addr16
test
pop
sbb
pop
enter
and
movs
not
out
cmps
shl
cmp
je
loopne
les
imul
psubusb
pop
jecxz
(bad)
out
xchg
add
cmp
mov
les
push
scas
shr
pusha
mov
push
pop
dec
adc
test
ins
cli
js
cmp
mov
test
push
and
call
or
inc
mov
fwait
jg
mov
push
mov
mov
dec
xchg
shl
push
enter
mov
clc
fs
add
mov
std
enter
xchg
mov
xchg
xchg
call
mov
ins
es
cmps
mov
retf
(bad)
aaa
ret
cmp
jl
mov
loope
pop
sahf
scas
retf
xchg
dec
xor
sub
out
std
(bad)
int
js
jle
and
stos
ins
sbb
xchg
cmp
xor
hlt
ret
inc
lods
inc
mov
test
ret
mov
lods
cdq
pop
pop
push
imul
sahf
inc
out
sbb
int
adc
cmps
cmc
(bad)
shr
jmp
sbb
lds
dec
sub
scas
ds
xor
bswap
pop
fldenv
es
(bad)
mov
jecxz
les
shr
stc
push
(bad)
aam
and
sbb
jns
pop
jno
mov
(bad)
jg
test
adc
out
dec
sub
and
iret
div
mov
rcl
lea
jl
ror
push
cmp
fs
sub
push
in
cmp
paddw
iret
push
(bad)
mov
js
stos
sbb
jg
ds
and
outs
adc
jecxz
pop
mov
aaa
mov
inc
lahf
scas
or
gs
jmp
xor
outs
jp
in
movs
adc
sub
cmp
push
movs
out
shl
jle
mov
ds
repz
cmp
out
dec
sahf
or
into
fdivr
out
cld
dec
sbb
pop
nop
xlat
loopne
dec
repnz
lds
cmp
mov
gs
sub
sub
mov
out
sahf
xor
stos
pop
scas
push
popf
ss
inc
fsubr
xchg
fisubr
pop
jg
sbb
fisubr
pop
leave
sti
fwait
mov
pop
ja
pop
dec
xchg
iret
jg
xor
and
data16
sbb
xor
in
pop
cmp
test
xor
jb
cmc
mov
out
ret
ret
popf
div
cmc
push
mov
cmp
mov
adc
inc
or
fdivrp
jne
dec
or
loop
mov
and
and
aas
mov
mov
push
or
(bad)
iret
sbb
data16
icebp
and
mov
sbb
and
push
mov
movs
ret
fnstenv
loope
stc
mov
or
dec
sub
dec
fild
dec
dec
shr
(bad)
stos
ja
mov
or
xor
je
push
(bad)
in
fmul
push
pop
xor
dec
pop
xor
cwde
jp
ret
mov
in
not
jecxz
push
pop
cmp
inc
daa
(bad)
ds
in
mov
adc
inc
fst
or
out
xchg
lahf
call
xchg
data16
pop
xchg
jg
jnp
ja
pop
outs
sub
and
cmp
jg
out
push
jecxz
inc
lea
and
mov
pop
push
add
stos
jl
jo
sub
out
jmp
adc
loope
add
test
push
lea
repz
xchg
lahf
test
rcr
fsubr
push
pop
les
xchg
inc
mov
push
cmc
mov
add
mov
dec
cmps
dec
in
add
in
add
xor
repnz
and
and
ss
pop
cmp
ins
enter
cmp
jp
sbb
push
aam
jmp
(bad)
pop
add
xor
jo
nop
cmp
cmps
(bad)
mov
jbe
pop
sti
aas
inc
push
sbb
jmp
hlt
xchg
imul
cli
call
aaa
and
mov
pop
(bad)
xor
imul
adc
imul
and
scas
mov
pop
movs
inc
jae
ror
cld
retf
int3
fneni(8087
inc
adc
imul
xchg
pop
cs
or
mov
cmp
into
pop
dec
loop
stc
loopne
add
loop
sbb
idiv
pop
mov
ja
xchg
aam
scas
mov
mov
movs
imul
(bad)
call
push
adc
push
mov
inc
mov
and
fcomp
pop
push
cld
lahf
ds
ins
xchg
mov
scas
mov
cwde
arpl
mov
loope
pushf
mov
stos
mov
retf
loope
cdq
cmc
pop
je
loopne
sub
lahf
call
add
popa
push
lahf
int
sbb
(bad)
mov
retf
jo
les
sbb
lahf
xchg
ss
jle
imul
idiv
xchg
ficomp
scas
inc
pop
lea
sub
xor
jmp
xchg
jp
fnsavew
addr16
xchg
inc
je
push
sbb
or
dec
cmp
jbe
mov
aas
js
mov
outs
test
add
sbb
and
xor
retf
xor
mov
mov
mov
aas
out
sub
dec
loopne
jnp
addr16
mov
dec
push
inc
sub
in
icebp
fisttp
cld
jg
xor
jmp
enter
je
dec
xor
cld
dec
iret
mov
fdiv
add
dec
arpl
adc
out
adc
jge
cmovp
jnp
out
ins
sbb
pop
mov
lods
lds
dec
lods
fcomp
mov
iret
js
mov
sub
xlat
dec
retf
cmps
(bad)
aad
retf
pop
sti
inc
aas
in
pop
addr16
out
pop
inc
popf
out
sbb
add
mov
sbb
cmc
in
(bad)
(bad)
xchg
dec
retf
ror
or
cmp
fwait
rcr
mov
stos
popa
stos
sahf
adc
push
sbb
call
ret
test
sub
ret
push
push
(bad)
(bad)
jae
in
enter
jg
ficomp
adc
dec
add
xchg
jmp
push
push
jp
fwait
movs
pushw
cmp
clc
jmp
sub
out
push
xor
sbb
jecxz
dec
mov
xchg
mov
cmp
push
xchg
push
movs
fld
jl
mov
push
fs
xor
jne
jmp
add
fcom
push
bound
xchg
lock
mov
xor
inc
add
test
jle
call
scas
nop
pop
cwde
xchg
cmp
xchg
or
add
imul
inc
mov
cmp
rol
sub
in
arpl
cwde
or
add
lea
sub
movs
or
sub
imul
inc
pusha
and
nop
adc
mov
cmp
mov
scas
and
adc
lahf
pusha
imul
jmp
push
or
aam
mov
adc
cmp
mov
fistp
dec
mov
dec
jl
jno
ret
and
ret
fwait
mov
sbb
sbb
icebp
cmp
cmp
sub
inc
scas
mov
fistp
test
pushf
lock
dec
aas
clc
jle
aaa
in
jle
pop
mov
aas
sub
adc
repz
mov
jecxz
cmp
jns
scas
jo
add
pop
mov
adc
and
in
mov
repz
mov
mov
sbb
outs
adc
std
imul
and
and
arpl
push
lock
leave
dec
cdq
loop
mov
test
test
push
xchg
lahf
pop
mov
cmc
fs
shl
shr
popa
pushf
fwait
adc
and
mov
loopne
daa
jnp
xchg
add
and
fwait
in
outs
or
inc
emms
inc
add
scas
mov
ja
repz
or
adc
add
loopne
je
or
adc
lea
adc
mov
fnstenv
out
(bad)
add
daa
test
push
mov
pusha
pushf
adc
(bad)
xchg
push
xor
aaa
fs
out
cmps
dec
or
mov
loope
and
fadd
cwde
xlat
inc
jo
in
xchg
out
je
add
rol
ins
or
and
pop
add
adc
cmps
jbe
lods
ret
sahf
fimul
out
je
or
mov
retf
jmp
hlt
pop
sub
scas
pop
in
xor
mov
out
fwait
aaa
cs
lea
pop
dec
sbb
jecxz
mov
jbe
xor
jp
lahf
pop
fdivr
mov
aaa
jg
jmp
push
fidivr
into
imul
xchg
enter
test
inc
pop
push
xor
mov
stc
xchg
push
out
add
aad
mov
ret
dec
pop
mov
mov
pop
sbb
inc
fs
cmp
mov
xchg
and
xchg
xor
jbe
lods
js
adc
jns
test
mov
push
call
fwait
ret
dec
or
push
adc
inc
mov
les
or
sub
dec
xchg
push
inc
les
in
adc
repz
push
xchg
jne
lea
stos
inc
xor
inc
and
cmp
dec
ss
pop
out
fstp
sbb
into
cli
repz
rcl
dec
sub
sbb
std
lea
xchg
imul
jp
jg
cli
xor
outs
dec
test
in
fimul
(bad)
clc
movs
jg
std
in
xchg
js
xchg
bound
inc
sub
or
loope
inc
(bad)
mov
xchg
lds
imul
std
xchg
add
jnp
inc
mov
popa
push
stos
lods
div
jp
cmp
jb
sub
and
add
xchg
push
aad
mov
mov
dec
bound
cmp
scas
jg
cs
xchg
mov
das
sbb
mov
arpl
popf
out
dec
jae
jne
push
(bad)
cmps
or
std
jecxz
mov
mov
xchg
test
push
sub
push
add
sbb
std
push
inc
mov
outs
rcr
ficom
sbb
jno
icebp
mov
cmps
sub
pop
adc
movs
mov
add
mov
jp
jbe
lods
mov
and
xchg
retf
fld
mov
and
mov
xchg
sbb
hlt
(bad)
ror
or
stos
jne
xchg
aas
lds
dec
fwait
mov
icebp
mov
in
mov
(bad)
out
shl
out
sub
dec
dec
jb
loop
mov
mov
mov
rcl
mov
cmp
push
mov
or
pop
outs
cli
cdq
xor
test
and
popf
scas
ucomiss
fstp
div
cdq
sahf
stc
(bad)
leave
test
xchg
push
pop
pusha
and
sbb
js
cmp
fldln2
add
add
call
aam
out
sub
(bad)
(bad)
(bad)
in
test
cmp
cmp
xor
loop
(bad)
dec
dec
push
xchg
jmp
jmp
mov
cmc
call
inc
push
das
outs
rcr
adc
and
aad
call
dec
xlat
and
lods
mov
es
xchg
push
push
mov
fcom
inc
mov
jecxz
add
(bad)
mov
in
lahf
mov
outs
cmp
lea
cmc
mov
gs
mov
int
push
jns
jmp
cld
je
push
iret
sub
fwait
xchg
jae
icebp
retf
jae
in
movs
jmp
outs
(bad)
mov
push
pop
sbb
scas
pop
ins
push
jb
mov
mov
pushf
and
test
pop
pop
(bad)
std
xchg
sub
jae
or
mov
jg
push
scas
std
das
imul
jl
xchg
push
dec
int
dec
popa
pcmpgtb
call
je
adc
(bad)
jae
cmp
pop
call
mov
pop
and
aad
aas
sub
fnstsw
cmps
jnp
pop
test
pop
jae
je
clc
jmp
fbld
aam
inc
xor
jmp
sar
mov
out
dec
lea
mov
hlt
mov
repnz
adc
retf
xchg
in
stc
movntq
outs
jae
(bad)
stc
pop
adc
test
lods
out
pop
jp
mov
push
movs
adc
jb
retf
add
cmp
push
lods
loope
loopne
adc
dec
stos
(bad)
pop
ins
dec
ror
test
mov
mov
pop
mov
cwde
in
in
cmp
call
jg
dec
outs
retf
push
out
test
loopne
xlat
sub
les
mov
pushf
or
push
ins
fsub
cdq
pop
dec
in
es
int3
jbe
clc
cli
inc
pop
ins
cwde
jp
xchg
(bad)
fsubr
xor
mov
pop
and
jl
and
jmp
and
inc
in
rol
aaa
fscale
mov
out
stc
pushf
int3
push
add
aad
loop
dec
mov
(bad)
repnz
mov
leave
push
pusha
int
push
inc
jno
add
or
cwde
ins
mov
mov
movs
hlt
and
pop
(bad)
js
hlt
xor
jmp
adc
jmp
out
pop
pushf
pop
xor
clc
fwait
sbb
xchg
pop
xor
dec
inc
adc
mov
push
mov
xchg
nop
addr16
call
fst
xchg
pop
lahf
adc
jbe
or
hlt
daa
ret
mul
mov
enter
clc
adc
pop
test
inc
shl
fwait
outs
add
clc
loope
inc
into
movs
jp
movs
jp
ins
sbb
sub
jbe
cdq
call
cwde
pop
aad
xlat
movs
pop
movs
inc
xchg
and
pop
jno
addr16
shl
push
adc
lahf
xor
dec
pop
jge
lahf
or
pusha
push
or
mov
rcr
stos
push
sbb
out
push
dec
fwait
jno
xchg
jg
pop
fwait
ror
out
aas
call
in
xchg
sti
add
pop
push
jmp
sub
mov
mov
or
jp
test
(bad)
xor
pop
or
pop
mov
lock
into
movs
test
adc
sti
xchg
jne
mov
stc
xchg
and
mov
inc
sbb
xor
mov
test
mov
aam
dec
inc
and
xchg
ja
jle
mov
repz
rcr
pop
xchg
inc
inc
or
xor
or
hlt
xchg
mov
jecxz
imul
or
or
sti
pop
xor
or
pop
push
sbb
stos
into
mov
sub
jmp
in
inc
inc
or
add
(bad)
stc
sbb
bound
sbb
jl
stos
jo
mov
test
nop
pop
in
stos
out
sub
fidivr
push
stos
xor
icebp
sbb
inc
cmps
or
in
mov
nop
(bad)
pop
cmp
lods
and
push
xchg
mov
hlt
pop
fadd
test
gs
inc
nop
iret
push
push
out
repnz
jmp
pushf
pop
das
or
(bad)
cmp
mov
inc
jge
in
cmp
fwait
stos
xchg
lahf
mov
enter
add
or
dec
test
fdivp
inc
fwait
sbb
and
hlt
int
es
aaa
bound
mov
sbb
or
pop
pop
fimul
jge
push
arpl
scas
xchg
xchg
mov
fwait
aam
sbb
loop
repnz
(bad)
loope
adc
mov
pop
int
test
add
pop
ss
rol
jge
fldenv
mov
jb
mov
std
push
push
mov
in
fisubr
or
xchg
rcr
and
idiv
xchg
mov
add
ins
pushf
jbe
lea
sbb
push
in
cmps
add
adc
jmp
jnp
(bad)
mov
in
sub
jp
pop
sar
xchg
outs
repz
sar
pushf
jmp
jb
fnstsw
add
scas
pop
jbe
xlat
shl
or
loopne
(bad)
pop
push
mov
sbb
cmp
test
loope
mov
pop
out
and
add
push
dec
adc
cmp
imul
lods
pop
jb
loop
xchg
xor
pop
xor
int
neg
cdq
pop
push
adc
test
dec
int
cmp
int3
scas
push
jmp
scas
adc
jl
and
std
pop
sbb
add
push
pop
in
mov
mov
mov
hlt
aas
(bad)
mov
in
movs
aad
(bad)
js
sub
adc
pop
inc
and
mov
inc
test
vcvtsi2sd
or
scas
mov
xchg
adc
sar
lds
push
mov
mov
add
arpl
imul
mov
inc
cmps
and
fs
sbb
mov
pop
xor
push
or
push
mov
stc
sbb
aam
fwait
mov
sahf
pop
pop
in
mov
stos
sbb
in
outs
mov
xor
cmps
jae
adc
sub
sbb
push
fstp
test
pop
aaa
or
repnz
iret
test
or
lods
call
mov
mov
(bad)
fstp
ss
and
add
adc
sbb
add
push
adc
sbb
call
cs
push
dec
add
loopne
xor
int
add
or
out
mov
mov
sar
sbb
inc
test
jne
dec
xchg
dec
push
or
not
loop
stos
inc
retf
cmp
out
aaa
xlat
xchg
sbb
repnz
cmp
imul
xchg
bnd
xchg
dec
adc
inc
pop
icebp
mov
dec
lock
outs
xchg
mov
int3
jmp
or
ss
jle
daa
dec
xor
lods
sub
push
push
xchg
fst
pop
xchg
lods
push
dec
sti
daa
daa
add
test
mov
(bad)
hlt
and
mov
cmp
pushf
add
pop
scas
iret
dec
pop
pop
add
fsub
jl
mov
inc
pop
push
jl
cmc
cdq
in
and
rol
lods
jne
push
or
jb
mov
push
ret
and
mov
inc
movs
out
sbb
lods
dec
hlt
sar
mov
(bad)
mov
cmps
mov
xchg
fmul
in
test
sub
push
out
fs
mov
or
js
dec
pop
and
xor
lahf
enter
pushf
add
into
(bad)
cld
cmps
inc
test
dec
inc
xor
test
lahf
fmulp
jl
es
xor
loope
in
fld
sbb
data16
jl
loop
pop
mov
popa
pop
inc
push
xchg
push
push
loop
std
xor
cmp
sub
sar
cbw
test
or
ins
(bad)
fwait
cmp
in
sub
add
mov
jo
lods
adc
cdq
xor
inc
daa
dec
and
jno
push
test
leave
mov
std
(bad)
stc
retf
out
add
out
mov
xor
fwait
arpl
and
adc
stos
mov
jle
push
lods
xchg
jnp
(bad)
bound
je
jb
cmp
pop
je
leave
lahf
push
xor
test
add
mov
and
mov
mov
mov
fstp
push
stc
ins
sub
mov
adc
fmul
mov
sahf
cmps
mov
and
popa
mov
out
dec
ds
fnsave
xor
sahf
sbb
out
pusha
es
pop
pop
icebp
jo
mov
mov
mov
fcmovne
jmp
addr16
or
mov
pop
xor
mov
sbb
push
lock
shl
sub
(bad)
pop
ret
mov
xor
in
out
data16
repz
xchg
ins
pop
dec
jne
daa
aas
frstor
mov
fstp
xlat
sbb
pop
adc
inc
mov
push
shr
cmp
xor
push
ss
xchg
xor
push
adc
jns
enter
cmp
inc
test
fst
and
mov
or
test
cdq
bnd
pushf
lea
or
inc
xchg
push
push
sti
fwait
mov
inc
mov
dec
out
enter
inc
jae
or
mov
or
sub
lods
ffreep
push
mov
sahf
loop
rcl
push
xchg
push
popf
jecxz
jecxz
aaa
shr
sahf
xchg
sub
and
mov
test
fadd
ss
outs
inc
(bad)
fidivr
iret
adc
in
jmp
int3
jle
push
int
repnz
push
gs
ficom
aaa
inc
(bad)
shl
test
test
cld
add
mov
or
jo
stos
in
dec
rcl
push
cmp
lds
repz
jnp
fldenv
in
sub
add
xchg
push
jmp
aam
lods
sub
jmp
or
mov
xlat
fucomip
dec
fwait
ss
inc
cmp
outs
add
dec
xchg
add
xor
jmp
test
sub
inc
cwde
mov
fcmovnbe
shr
xor
add
cwde
inc
sub
dec
dec
or
and
mov
sub
test
popa
out
test
cmp
addr16
cld
dec
push
cmp
xchg
ins
and
jbe
sbb
out
and
add
and
daa
mov
mov
or
add
xchg
int
or
cmp
ret
lea
jl
cs
out
jge
ss
dec
mov
and
mov
out
mov
sub
or
jmp
mov
sbb
pop
inc
sub
push
(bad)
xchg
loope
imul
les
mov
and
add
(bad)
imul
fcomp
mul
scas
push
and
cld
ret
pop
lods
sar
scas
xchg
cwde
xor
inc
fild
jl
adc
push
jecxz
dec
not
rcr
je
popa
jno
ret
mov
and
pop
mov
movs
sbb
jns
rcr
sub
cmps
cli
pushf
shr
pop
mov
les
and
out
cmps
sahf
(bad)
xor
int3
or
(bad)
and
adc
cmp
add
aaa
aaa
or
daa
enter
jb
xchg
xor
in
ds
loopne
push
call
cmc
jne
cmp
test
xor
mov
cmp
test
inc
xchg
into
pop
ss
pop
and
cmps
div
push
rcr
inc
inc
test
pop
fcomp
add
sbb
int
leave
pop
outs
and
mov
push
inc
mov
lods
stc
hlt
mov
pop
test
iret
das
retf
scas
jb
mov
pop
pop
mov
or
sub
cmp
mov
ja
dec
and
gs
add
mov
xor
ds
scas
xor
fs
mov
aam
aas
ficom
mov
adc
scas
ja
data16
add
or
mov
sbb
sub
xchg
icebp
jle
retf
xor
repnz
jmp
jmp
pop
xchg
loopne
adc
mov
fidivr
hlt
sub
fs
rol
jmp
add
retf
out
(bad)
mov
mov
mov
mov
popf
loopne
or
xchg
and
dec
popf
push
mov
into
and
mov
jmp
in
shl
stos
xchg
loopne
xor
and
cmp
icebp
adc
pop
gs
rcr
xor
and
mov
push
adc
aaa
mov
sub
jp
jo
add
js
div
test
mov
push
push
imul
push
push
cmc
mov
ins
push
repz
imul
ss
mov
add
xor
add
mov
xchg
lds
daa
sbb
fmul
xchg
jmp
out
nop
add
sub
sbb
es
push
or
mov
sbb
ret
fcmove
inc
cmp
fsubp
ficomp
pop
and
add
pop
ins
cdq
adc
xor
shl
xchg
sub
popa
jecxz
or
mov
and
sub
(bad)
mov
outs
outs
cld
jmp
inc
inc
shr
xor
clc
int
fisttp
jns
fisubr
xchg
call
in
or
jmp
cmp
fimul
push
fdivr
jge
fnstenv
mov
push
mov
lods
inc
mov
jb
xor
movs
(bad)
push
and
mov
push
iret
dec
fcmovne
movs
sub
cmp
xchg
mov
clc
movs
inc
jl
outs
push
test
add
jle
cmc
out
sar
(bad)
bound
cmp
mov
dec
cmp
add
sub
movs
stc
cwde
popa
mov
adc
stos
adc
icebp
nop
aad
mov
mov
pop
data16
pop
sbb
jle
add
and
ret
rcr
lods
call
sbb
mov
or
rcr
stc
lods
out
int3
pop
and
ret
inc
mov
mov
adc
push
inc
jg
mov
cmc
stos
add
inc
jp
and
pushf
dec
call
arpl
inc
scas
mov
sbb
mov
adc
lea
mov
push
outs
sti
rcl
out
inc
push
iret
or
pop
xor
test
out
lea
pop
test
adc
js
xchg
mov
mov
mov
retf
push
je
inc
aas
or
pop
mov
add
neg
pop
dec
pop
xor
rol
btc
jg
icebp
mov
jg
sbb
jmp
scas
rcl
shl
loope
mov
scas
imul
cmp
jno
mov
mov
imul
fcom
mov
cld
dec
aad
addr16
and
dec
push
xchg
sub
not
jbe
(bad)
jecxz
jmp
mov
js
xor
fisub
stos
fsubr
pop
mov
aas
adc
loope
mov
js
fnstenv
dec
push
cmp
mov
cmp
fstp
movs
push
ficom
icebp
jmp
loop
ins
jne
in
sbb
add
int3
sub
or
test
pop
mov
add
stc
inc
mov
dec
icebp
jns
test
jne
mov
jmp
jge
cmp
shl
adc
add
lahf
sub
pop
add
jmp
mov
mov
inc
jne
dec
aam
pop
or
sbb
xor
fs
outs
add
gs
dec
mov
inc
inc
dec
inc
inc
imul
push
mov
pop
cmp
pop
push
pop
push
jmp
ror
and
cmp
rol
outs
sahf
mov
iret
adc
mov
jp
cmp
dec
nop
retf
loope
mov
mov
push
enter
mov
and
sbb
ss
icebp
test
(bad)
cwde
fcomp
or
mov
and
dec
mov
and
imul
jmp
mov
pmuludq
pusha
aam
cmps
pop
dec
test
(bad)
sub
(bad)
repz
sub
leave
daa
(bad)
jnp
rcr
leave
jmp
push
xor
sub
data16
clc
or
adc
dec
push
fnsave
aam
add
imul
or
test
sbb
loopne
lahf
psrad
xor
test
inc
jle
xor
fnsave
in
lods
jmp
pop
leave
nop
inc
and
dec
scas
cs
sub
sub
mov
imul
fld
ror
cdq
inc
ins
pop
mov
retf
push
xchg
cmc
xchg
sbb
dec
jbe
jo
pop
adc
jp
xchg
xor
inc
(bad)
(bad)
dec
movs
jmp
loop
shl
xor
jg
(bad)
daa
addr16
rcr
fst
sbb
pop
out
(bad)
or
outs
sar
jmp
retf
push
mov
adc
xor
push
pusha
jg
je
sti
sub
sub
movs
(bad)
ins
mov
mov
(bad)
xchg
sub
test
cwde
jnp
and
inc
xlat
std
jge
sbb
xchg
test
mov
shl
dec
inc
es
sbb
in
xor
hlt
movs
test
cmp
repnz
dec
xor
adc
sub
mov
ja
mov
lahf
mov
or
test
pop
jg
mov
clc
scas
iret
or
out
push
dec
js
retf
add
and
sbb
sub
lahf
rcl
mov
fld
repz
outs
pop
push
xchg
fisub
adc
mov
in
push
gs
shl
adc
int
nop
loopne
int3
sahf
dec
xchg
sbb
packuswb
std
sub
jne
ins
movs
out
pop
lods
fiadd
fld
jbe
enter
jne
sbb
lds
and
sub
add
neg
cmp
ss
fwait
xor
aas
les
xchg
ss
fbstp
aam
adc
lea
lods
or
add
test
and
cmp
clc
pop
sub
sti
jo
jmp
xchg
dec
adc
mov
push
out
hlt
add
xchg
xor
push
pop
test
imul
mov
adc
pop
das
and
int
rcr
es
outs
clc
push
cmp
or
sbb
out
jnp
not
pop
nop
add
adc
test
neg
out
pushw
iret
mov
fadd
aad
(bad)
into
mov
daa
nop
xor
cdq
dec
cmp
scas
inc
adc
dec
sub
or
aaa
pop
jmp
or
push
mov
cmps
mov
sub
call
mov
sbb
aad
ret
mov
xor
mov
cwde
mov
js
cs
nop
loop
das
aad
fdivrp
aad
cmp
pop
clc
mov
sub
icebp
(bad)
mov
dec
icebp
add
mov
outs
cmp
push
adc
jb
mov
mov
lods
sbb
adc
int
fist
add
cmp
sub
pop
movs
mov
sub
jne
mov
dec
adc
xor
cmp
dec
push
icebp
cmps
mov
cmp
mov
outs
dec
or
jne
std
stos
mov
xchg
jecxz
icebp
add
mov
int3
mov
mov
push
cdq
(bad)
xor
inc
jb
mov
xchg
sbb
vmwrite
rcl
popa
add
jae
fcomp
out
aad
mov
in
sbb
cmp
mov
or
dec
dec
call
or
repnz
lock
xor
jmp
(bad)
mov
sbb
jp
test
retw
mov
pop
movs
sbb
mov
xchg
dec
adc
sub
push
in
icebp
dec
scas
adc
ss
out
and
ret
add
je
inc
mov
sbb
inc
popf
call
mov
push
daa
mov
mov
imul
mov
inc
into
xchg
xchg
pop
mov
out
daa
(bad)
mov
push
push
cmc
loope
call
mov
mov
mov
xchg
jae
inc
mov
ins
adc
jmp
jo
(bad)
cld
add
mov
or
mov
sub
jge
sub
jns
inc
in
addr16
mov
push
mov
xrelease
ja
push
mov
xchg
repz
cmps
cdq
cld
retf
fstp
enter
gs
movs
adc
sahf
xchg
enter
inc
icebp
gs
leave
push
(bad)
aam
cdq
jb
cdq
fcmovnu
int3
fstp
add
sti
push
adc
enter
mov
push
out
jg
pop
sahf
and
pop
add
inc
mov
sub
outs
cmc
nop
add
jmp
xchg
jmp
sbb
sub
xchg
leave
fwait
imul
call
test
loope
fcomp
adc
inc
test
outs
pop
mov
jbe
mov
adc
mov
fidiv
aad
sti
xlat
sub
and
(bad)
mov
sub
shl
add
pop
fwait
or
fld
inc
jmp
mov
test
jecxz
aad
ror
mov
sahf
bound
sar
addr16
and
jne
mov
jmp
loope
ins
add
sbb
pop
jl
pop
pop
int3
mov
data16
mov
dec
xchg
pop
cmps
push
sub
lock
dec
repz
dec
mov
cwde
cmp
jne
call
sub
sbb
cmp
pop
lea
jle
push
xchg
clc
xor
xchg
mov
cwde
stc
pop
lock
xchg
ror
lds
xor
xchg
pop
cs
jg
jnp
stos
push
in
adc
out
jo
(bad)
jle
stos
xor
inc
xchg
or
stc
imul
arpl
movs
aaa
jne
(bad)
lds
(bad)
mov
add
bound
pop
loop
hlt
inc
inc
rcl
sbb
xchg
jb
dec
add
stos
aam
loope
sahf
daa
or
iret
(bad)
cwde
mov
mov
cmp
adc
int3
pop
pop
imul
pop
push
cld
fadd
ror
jo
sbb
xchg
test
mov
pop
mov
push
xor
inc
popa
(bad)
pop
retf
out
cld
shl
xor
dec
cld
nop
jecxz
adc
inc
loop
mov
push
std
rol
mov
dec
sbb
loope
sub
xlat
(bad)
clc
xor
add
test
sbb
ds
xor
and
pop
adc
pop
aam
pop
dec
pop
inc
sbb
sbb
leave
jl
imul
rcl
adc
push
pushf
inc
inc
rcl
jae
cmp
int
inc
call
mov
jne
mov
dec
mov
test
mov
syscall
pusha
cmp
inc
shl
jmp
cwde
fisub
mov
mov
mov
push
into
and
(bad)
ficomp
push
inc
mov
xchg
and
hlt
mov
inc
mov
ficom
cmp
sub
mov
je
icebp
out
push
fild
push
push
shl
int3
dec
aad
mov
imul
mov
fst
in
pop
adc
pop
pop
fwait
cmp
adc
int3
inc
mov
jno
bound
ss
repnz
int3
retf
sbb
cdq
cmp
sub
ja
ja
outs
xor
cmps
sbb
mov
aad
xchg
add
fwait
xchg
sbb
mov
cmp
mov
mov
icebp
cmc
call
inc
sahf
mov
xchg
pusha
and
into
data16
in
push
mov
scas
xchg
mov
pop
sub
fcom
mov
pop
popa
ins
inc
jmp
stos
inc
push
xchg
sbb
xchg
cmp
imul
pop
call
adc
jbe
and
xchg
jp
stos
int
sahf
es
push
mov
jbe
pop
add
add
pop
cmps
ficomp
jmp
and
in
jl
add
int3
stos
outs
add
dec
lods
cmp
sub
xchg
push
lods
and
cmps
mov
pop
push
fldenv
gs
mov
xchg
push
call
adc
add
jecxz
fst
and
cmp
xor
movs
and
mov
int3
xor
into
jmp
jno
xchg
cmp
test
not
int3
sub
add
mov
add
arpl
push
je
fwait
sub
imul
pop
in
fpatan
rcr
test
in
xchg
xor
movs
retf
jne
push
jns
stos
daa
xlat
adc
in
fldenv
xlat
int3
fnstenv
inc
mov
sbb
jne
jp
push
inc
(bad)
popa
xor
sbb
sar
js
cmc
lods
or
outs
mov
movs
jns
cmp
into
mov
js
jb
ja
fwait
or
fld
push
ret
mov
push
outs
inc
and
dec
sti
es
jb
in
sub
inc
adc
pop
popa
cmp
and
jae
jle
hlt
push
cwde
lods
sbb
xchg
add
push
test
adc
push
pop
idiv
les
das
adc
loop
cld
add
cwde
mov
int
test
lea
ror
pop
outs
inc
adc
addr16
test
iret
movs
cmp
add
fimul
sub
push
dec
and
sbb
and
shl
call
call
add
cli
add
scas
inc
xchg
push
inc
push
test
and
mov
mov
cwde
fld
repz
call
movs
enter
shl
xchg
and
or
je
push
fwait
xor
movs
scas
(bad)
jmp
or
ret
cmp
imul
pop
mov
mov
(bad)
xor
jp
imul
fwait
inc
fwait
loopne
mov
adc
clc
jmp
and
mov
shr
(bad)
shl
jecxz
dec
and
xor
lahf
pop
and
scas
test
adc
or
jae
jbe
dec
ret
stc
scas
xor
lahf
mov
sar
xchg
adc
xchg
imul
loop
movs
xchg
xor
and
sbb
(bad)
and
cmp
movs
sub
lods
mov
push
mov
mov
adc
iret
dec
inc
cmp
pop
(bad)
mov
adc
push
shl
es
push
push
arpl
(bad)
out
cs
and
mov
in
rcr
(bad)
icebp
mov
jg
pop
fistp
movs
mov
mov
popa
cmps
xchg
inc
and
sub
dec
mov
cmp
mov
and
add
(bad)
das
xchg
ja
mov
jmp
add
mov
or
out
xor
add
xchg
(bad)
mov
sub
pop
mov
jp
mov
pop
addr16
fdivr
test
pop
sub
pop
aad
loop
add
jmp
retf
fdivr
fldenv
mov
nop
loop
call
ror
dec
out
repz
xchg
pop
xchg
mov
mov
push
xchg
int3
(bad)
fsub
lock
add
data16
mov
add
dec
scas
fisubr
mov
ins
cmp
stc
push
push
hlt
inc
fadd
mov
outs
jns
scas
arpl
push
mov
jge
sub
and
xor
pop
retf
xor
dec
and
sub
and
xchg
in
dec
jb
jnp
pusha
jo
mov
push
(bad)
jg
retw
mov
fdiv
adc
(bad)
jmp
std
mov
shl
test
popa
xor
sbb
cwde
mov
call
xchg
dec
cli
addr16
pop
jmp
leave
std
mov
sub
fld
or
pop
mov
loopne
jmp
in
ins
mov
call
not
mov
pop
test
mov
outs
shl
fs
scas
aam
jno
inc
loope
dec
pop
cmps
inc
or
out
das
idiv
mov
jbe
add
xor
mov
aam
es
test
adc
jne
pop
xchg
fcom
mov
fnstcw
jg
adc
and
lods
push
mov
lock
test
shl
xchg
adc
push
and
scas
shl
sbb
cmp
mov
xchg
into
pop
adc
pop
sub
inc
nop
pusha
jbe
imul
lods
xchg
inc
inc
repz
dec
inc
shl
fs
sub
adc
xchg
outs
add
sub
mov
loopne
aam
(bad)
aad
adc
and
enter
mov
ss
add
push
inc
lods
icebp
sbb
mov
dec
mov
pop
and
pop
and
loop
jp
mov
jno
test
sbb
pop
add
fs
pop
call
add
mov
jl
lods
retf
in
sbb
inc
std
add
dec
lock
mov
pop
xchg
inc
jns
xor
stos
add
mov
(bad)
into
push
test
scas
clc
into
jp
inc
test
sti
rol
or
add
movs
mov
inc
mov
mov
push
add
nop
cmps
enter
push
sar
sub
(bad)
call
xor
sub
adc
ret
shl
retf
pop
shr
repz
lods
jo
dec
repnz
(bad)
repnz
push
imul
cmp
jle
push
mov
test
adc
mov
iret
mov
sub
push
clc
rcr
sub
pushf
mov
adc
mov
xchg
pop
lods
ins
push
fist
jecxz
xchg
das
mov
lods
shl
sbb
push
loope
jbe
test
push
fimul
(bad)
(bad)
shl
mov
mov
jl
inc
idiv
push
sub
out
jecxz
and
popf
pop
aaa
retf
stc
test
and
retf
enter
scas
dec
out
or
stos
sti
fcmovne
aam
sub
add
jge
clc
cld
add
movs
lods
inc
shr
pop
outs
push
push
(bad)
retf
xchg
outs
mov
shl
pop
adc
mov
or
aas
xchg
jb
jbe
mov
mov
adc
int
loopne
adc
jl
mov
xchg
les
inc
loope
or
cmps
rcl
push
sti
cs
lahf
ja
pop
js
outs
cmp
xchg
shr
sub
xchg
stos
dec
mov
push
les
enter
(bad)
(bad)
and
stos
push
push
jo
jb
push
lods
dec
shl
pop
adc
jnp
pushf
push
jmp
sub
mov
aad
repnz
fisubr
test
mov
(bad)
aaa
sbb
(bad)
retf
mov
cld
aaa
(bad)
jg
mov
mov
xor
in
mov
icebp
dec
test
ficom
mov
inc
fild
cmp
test
into
icebp
cmp
jmp
pop
in
lahf
cmp
pop
cmc
ds
stos
pusha
mov
mov
in
ror
inc
ficom
pop
push
outs
lods
test
shl
adc
sub
sub
lods
push
mov
mov
data16
push
and
test
pop
xchg
xor
gs
add
out
jge
fcmovnb
push
fist
or
cs
jmp
ins
inc
test
adc
retf
sbb
push
push
mov
daa
imul
mov
cmp
stc
dec
mov
call
sub
popf
mov
aam
test
xchg
pop
dec
dec
data16
inc
repz
dec
cmc
ins
inc
pop
xchg
mov
jge
iret
jp
loopne
cwde
jbe
sub
and
xor
and
movs
inc
cli
fiadd
hlt
daa
add
iret
cs
shr
bound
push
fsubr
mov
cmp
cmp
mov
in
or
jo
scas
push
outs
add
pop
clc
imul
test
adc
cmp
mov
sar
cmc
call
int3
les
in
outs
push
es
cmp
xor
mov
mov
(bad)
push
push
push
and
jo
mov
out
(bad)
int
shr
hlt
or
or
sbb
jns
je
sbb
or
cmp
in
push
dec
mov
adc
(bad)
aaa
ss
mov
mov
inc
or
push
sub
adc
cmc
ins
(bad)
rol
outs
inc
sbb
add
daa
push
addr16
fbld
sbb
div
mov
adc
xchg
daa
ds
movups
and
scas
or
shl
pusha
jmp
sub
xchg
std
jmp
ja
js
mov
adc
jle
ror
in
pop
bound
jnp
push
mov
inc
sub
imul
or
push
xchg
out
push
cmp
jecxz
pop
mov
ins
js
inc
pop
lds
mov
pushf
out
and
(bad)
or
arpl
fmulp
and
test
push
or
inc
push
cwde
jge
stc
call
inc
or
mov
xor
mov
sub
xor
xlat
adc
mov
cmps
mov
jle
or
in
push
pushf
std
fcomip
pusha
mov
test
ins
imul
push
xchg
sub
lds
out
or
stc
and
push
cmps
cs
sub
push
push
in
test
sti
hlt
push
fs
pop
add
cmp
cmp
mov
jbe
les
mov
mov
es
push
push
mov
jp
(bad)
cmp
sbb
cwde
sub
inc
fldln2
dec
fwait
add
pop
push
in
in
scas
(bad)
les
rcr
out
adc
inc
enter
out
xor
jo
fld
div
xchg
outs
xor
jnp
int
jbe
jbe
xor
jle
cmps
lods
stos
sti
adc
cmps
adc
and
dec
jg
adc
fs
popf
pop
inc
sub
lock
out
ja
sti
call
fsubr
jl
dec
pop
pop
inc
loopne
out
sub
inc
(bad)
pop
mov
fs
mov
pusha
(bad)
mov
and
xor
xor
loop
jo
inc
xor
jge
jne
ss
inc
sbb
mov
cmp
or
addr16
xchg
mov
or
jb
sub
xchg
test
(bad)
pop
repnz
jnp
mov
lds
adc
pop
rcr
jo
push
out
dec
sub
push
into
fwait
sti
jmp
mov
cmp
sbb
imul
push
and
icebp
jecxz
imul
shr
push
or
cmps
out
mov
adc
pop
outs
push
popf
out
cmc
lock
loope
iret
or
popa
movs
hlt
out
ds
dec
loopne
push
shl
stos
jno
mov
sbb
fdivr
retf
mov
(bad)
dec
jmp
rep
fcmovne
pop
cmp
es
es
in
and
inc
icebp
xchg
into
nop
out
dec
dec
or
add
js
xchg
lea
and
std
(bad)
inc
adc
jecxz
es
(bad)
sti
mov
mov
mov
jmp
sbb
int3
(bad)
retf
jb
adc
push
dec
call
mov
inc
je
xor
jns
xchg
lods
ret
out
loope
(bad)
mov
dec
lahf
dec
out
inc
(bad)
dec
dec
movs
call
xchg
in
mov
pop
sub
gs
sub
inc
inc
out
popa
dec
sbb
mov
jl
dec
in
push
std
imul
imul
xchg
in
sub
loopne
pop
dec
add
arpl
stc
clc
sbb
push
sub
xor
mov
sbb
ja
add
or
popa
xchg
test
and
push
and
iret
push
or
dec
mov
mov
addr16
jmp
adc
fs
cwde
test
jmp
push
aas
push
dec
and
(bad)
mov
pop
sub
mov
mov
sbb
jmp
rcr
cmp
mov
ins
aaa
lahf
sbb
sar
pusha
les
fisub
lock
xlat
xor
in
mov
mov
shl
adc
dec
sti
(bad)
sub
hlt
mov
dec
push
test
adc
call
ins
sub
cdq
xor
test
jmp
pop
xchg
sub
add
leave
or
mov
(bad)
dec
cmp
pop
cmps
add
xchg
aaa
pop
iret
pushf
xchg
inc
adc
mov
int
in
loopne
pop
leave
or
inc
in
int3
xchg
adc
add
ror
xor
push
push
mov
inc
add
mov
in
mov
(bad)
(bad)
les
push
cmp
xchg
mov
xor
daa
call
mov
sub
mov
lock
lods
inc
sub
cld
cmp
fcmovu
sub
sahf
cmp
and
pop
fbld
mov
test
jo
rcl
adc
inc
xchg
ja
rcl
ins
inc
mov
mov
retf
mov
hlt
stos
cmp
aad
sbb
int
bound
xor
push
push
inc
and
cs
bound
cmp
js
fdiv
int
jnp
sbb
pop
push
jl
clc
call
fwait
aad
(bad)
add
cmps
jl
and
pop
mov
popf
add
(bad)
mov
cs
hlt
movs
out
test
cmp
dec
add
xchg
mov
push
jno
rcl
sub
xlat
call
jae
popf
movs
enter
mov
cmp
jb
es
cwde
stos
jmp
nop
pushf
sar
cmp
shl
dec
stos
fadd
(bad)
push
sbb
pop
mov
cmp
mov
pop
add
mov
lahf
mov
push
push
pop
les
adc
cli
in
outs
cmp
xchg
cs
popa
push
sahf
ins
dec
sub
mov
jmp
sti
sub
jbe
stos
xchg
adc
xor
rcl
(bad)
in
sub
(bad)
cmp
jnp
jb
or
mov
in
es
dec
or
inc
jnp
das
and
fadd
jb
sti
ins
push
or
imul
pop
fdiv
int
lds
je
add
scas
in
pop
int3
sbb
call
in
stos
and
call
xchg
pop
dec
sub
in
lods
sub
mov
fistp
loopne
(bad)
stos
adc
sbb
aam
xor
adc
das
imul
xor
mov
mov
mov
add
sbb
in
sub
lahf
mov
(bad)
lahf
in
loopne
push
or
pop
gs
xchg
xchg
retf
out
push
addr16
lea
mov
int
test
mov
cmp
add
pop
mov
out
setg
mov
xor
cdq
inc
push
ins
js
adc
xchg
jno
mov
lods
into
sti
xchg
(bad)
xor
xlat
in
into
lds
adc
cmps
xor
and
jb
pop
pop
rcr
inc
add
push
int
jecxz
icebp
mov
jb
loop
pop
sahf
lea
mov
xchg
jbe
retf
cmps
cli
lock
out
pop
jmp
mov
mov
fwait
pop
es
mov
mov
call
retf
dec
adc
sbb
add
sub
movs
mov
and
mov
cwde
neg
and
xchg
dec
jl
xlat
pop
rcl
psllq
stos
jl
dec
pop
enter
jbe
xchg
je
or
xor
in
add
inc
aad
test
dec
ss
(bad)
setne
or
inc
test
arpl
jge
fsub
push
sub
mov
mov
daa
push
push
jl
pop
outs
and
dec
fistp
adc
in
loopne
stos
pop
daa
xchg
xchg
fs
mov
and
call
and
adc
popa
scas
or
jp
cmc
movs
mov
add
and
push
push
jmp
in
jge
dec
mov
inc
and
fld
mov
cwde
mov
xchg
sahf
and
sbb
pop
or
xchg
cdq
inc
ffree
jnp
pop
jo
out
test
add
jle
mov
jns
push
pop
push
pop
popa
call
mov
xchg
movs
pop
push
in
xor
mov
and
mov
mov
mov
out
ret
stos
add
dec
ret
(bad)
scas
or
sbb
(bad)
mov
jb
push
hlt
mul
imul
pop
shr
pop
in
mov
test
mov
jb
mov
sbb
or
jmp
mov
jmp
mov
jg
sbb
xchg
lea
dec
retf
cmp
mov
js
dec
push
jl
stos
test
fist
jle
cli
lds
into
repz
dec
fistp
and
out
(bad)
loope
mov
cmp
sub
rcr
imul
push
pusha
inc
sahf
(bad)
mov
sub
fcom
cld
xchg
xor
add
add
jns
std
stos
xor
mov
xor
bound
xor
push
mov
mov
icebp
jo
pop
jbe
jecxz
hlt
xor
lods
mov
es
je
push
out
shr
push
xchg
add
adc
into
jp
mov
dec
lods
and
ret
data16
pop
jle
in
fbstp
or
add
rcr
aaa
cmp
pop
stc
sub
inc
inc
mov
jecxz
mov
fdivr
lds
repz
mov
daa
jl
hlt
(bad)
and
xchg
repz
data16
jl
cmp
jae
mov
jmp
daa
push
clc
stos
rol
jnp
mov
fs
pop
test
test
mov
lods
mov
(bad)
or
push
push
push
fild
cwde
inc
in
and
mov
sti
sbb
pop
mov
adc
daa
push
daa
pusha
aad
add
mov
xchg
inc
ret
xchg
dec
or
jb
scas
mov
pusha
fist
icebp
stos
out
xchg
and
(bad)
movs
pushf
mov
push
sub
xor
mov
xor
xchg
xchg
push
nop
cli
mov
cld
jne
in
mov
cmp
mov
xor
and
aaa
add
outs
clc
pushf
fild
push
cmps
inc
les
fs
div
cli
dec
sti
data16
xchg
push
sub
xor
cmp
cdq
movs
in
neg
sahf
add
push
jle
and
int3
adc
xchg
in
aaa
leave
pop
push
xlat
shr
movs
movd
cmc
and
push
call
enter
movs
jno
pop
hlt
loopne
pop
loope
xchg
cmp
fdiv
sbb
add
mov
jmp
push
add
or
sbb
adc
test
cmp
int
int3
loope
mov
stc
int
fsubr
data16
push
dec
aam
rol
movs
movs
loop
(bad)
cmp
cmps
hlt
add
pop
imul
sbb
push
add
sub
lods
mov
frndint
bound
xchg
mov
inc
jl
add
pop
mov
mov
add
add
and
scas
mov
retf
dec
pop
in
jp
mov
and
stos
test
cwde
int
cld
mov
mov
or
std
sub
cmp
cmc
xchg
push
ss
jns
pop
or
sti
jnp
fadd
sbb
jbe
cmp
sar
lea
mov
mov
adc
lock
mov
dec
and
cmp
aad
loope
shl
sub
std
mov
pop
repnz
cmps
and
mov
add
ja
cdq
add
repz
mov
rol
leave
add
cmp
mov
xchg
lahf
push
push
adc
hlt
(bad)
xlat
jl
loop
pop
xchg
jno
push
fnstenv
mov
adc
aam
std
mov
test
mov
mov
stos
ds
sub
sub
sub
mov
sbb
and
xchg
push
std
shr
jno
cmc
mov
jae
pushf
pop
(bad)
adc
push
rol
cmps
mov
cwde
push
fdiv
repnz
inc
aad
sbb
mov
test
mov
add
xchg
adc
or
(bad)
push
mov
jae
hlt
cmps
(bad)
dec
stos
or
outs
xchg
cmp
cmp
fadd
xlat
cmp
jno
cwde
je
shr
pop
mov
and
cmp
inc
mov
sbb
cmp
pop
retf
out
sbb
mov
addr16
popa
in
cmp
dec
sub
cmp
sub
cdq
mov
pop
out
(bad)
fild
(bad)
stos
mov
sbb
test
or
bound
imul
lea
ja
sub
jnp
cmp
lea
aas
pop
push
inc
test
pusha
popa
mov
mov
test
cli
(bad)
into
push
fiadd
add
adc
push
fs
leave
mov
(bad)
out
sub
sti
inc
gs
pop
xor
cmp
shr
sub
cmc
test
dec
sub
and
cdq
adc
fmul
ja
call
or
std
push
adc
loope
int3
xor
and
push
mov
cmp
xor
js
popa
lods
xchg
fldenv
sub
in
dec
cmps
mov
jp
inc
icebp
pop
sbb
push
int3
not
pop
fsubr
cmps
pop
adc
vpaddw
adc
sbb
scas
sti
sar
jbe
or
xor
pusha
push
jbe
mov
mov
inc
pop
icebp
aad
push
sbb
popf
sbb
and
cdq
xchg
push
mov
mov
out
not
cli
adc
or
jnp
mov
pushf
xor
gs
repz
jmp
xor
push
js
mov
fidivr
out
mov
sub
mov
inc
int3
pop
xor
mov
push
push
retf
outs
mov
xor
xor
retf
xchg
xchg
call
imul
icebp
jno
fs
aad
mov
data16
ds
push
mov
std
test
sub
ins
pop
mov
adc
add
push
fnstsw
add
js
(bad)
mov
std
pop
inc
leave
loop
pop
rcr
sbb
jne
or
push
stos
lahf
adc
call
mov
int3
cli
lock
mov
xchg
sbb
adc
dec
dec
mov
mov
dec
out
out
inc
lds
xor
fdivr
adc
cmps
sti
popa
inc
mov
mov
mov
xor
enter
adc
xchg
repnz
iret
inc
sbb
sbb
loope
retf
int
fld
stc
sub
adc
jle
xor
ja
pushf
and
rcr
jl
sub
pop
es
pop
scas
mov
std
xchg
or
popa
js
add
call
xchg
loopne
popf
aam
cmps
es
test
sbb
pop
mov
sbb
pop
(bad)
fld
gs
pop
push
es
arpl
push
xor
xor
dec
shr
pop
and
mov
inc
int3
dec
(bad)
enter
mov
dec
mul
cs
adc
out
test
mov
mov
(bad)
cmps
mov
dec
xchg
cmc
pop
bound
push
fiadd
xchg
in
in
imul
inc
dec
cmp
test
aam
les
xor
pop
paddusb
jne
jmp
adc
std
xor
pop
or
mov
and
data16
vpperm
cmc
dec
popf
or
clc
dec
mov
push
adc
adc
xor
loope
mov
push
packssdw
cwde
idiv
add
shl
adc
add
mov
bound
pop
jge
or
add
jmp
xlat
sti
pop
cmp
int3
ins
or
enter
retf
mov
inc
fadd
mov
popf
sti
sbb
out
sahf
jno
(bad)
xor
push
scas
test
inc
jl
xchg
or
jo
or
and
pop
scas
or
push
cmp
sub
les
ror
or
sti
mov
pop
adc
mov
inc
fwait
mov
inc
mov
mov
cmp
push
int
arpl
outs
in
mov
repz
fstp
sbb
cmps
and
push
nop
mov
fadd
mov
sti
mov
cdq
mov
mov
or
lds
lds
mov
(bad)
mov
ins
repnz
adc
jecxz
pop
xlat
das
aaa
xchg
lahf
das
fs
call
aas
ja
mov
inc
xchg
sbb
outs
ins
dec
dec
(bad)
adc
push
mov
lods
pop
enter
mov
push
fcom
mul
retf
cmp
sub
add
sub
inc
mov
arpl
or
sti
adc
ror
sti
out
adc
ins
inc
mov
inc
popa
cmc
push
xchg
cdq
push
fwait
idiv
sub
out
push
cmp
fwait
xchg
outs
iret
daa
add
dec
xchg
add
imul
dec
jae
jnp
retf
jmp
cmp
cmp
jns
and
inc
out
cdq
push
jge
out
sbb
lods
adc
shl
mov
(bad)
test
push
stc
pop
dec
push
data16
int
dec
retf
fcomp
aam
test
sti
aam
sub
pop
or
jp
jno
call
mov
and
push
jno
repnz
loope
nop
xchg
pop
mov
sbb
pop
sub
pop
cmp
inc
in
or
dec
das
call
adc
cmp
ja
xchg
or
xor
mov
loope
mov
icebp
jmp
ins
sub
cmp
test
outs
jns
icebp
fcomip
add
(bad)
or
repnz
call
jmp
sub
sbb
in
rcr
add
xchg
xchg
xchg
fs
dec
das
add
pop
jecxz
loope
fist
cmp
enter
cli
rol
xchg
adc
cmps
pop
mov
or
cmps
xchg
imul
pop
pop
push
pop
sub
and
in
pop
sbb
cwde
rcr
inc
mov
js
adc
mov
jecxz
loop
lods
jmp
xor
mov
mov
scas
xor
inc
not
pop
dec
in
mov
inc
bound
cmp
dec
loop
outs
nop
or
lock
push
leave
sbb
mov
push
jns
call
scas
push
xchg
ds
push
jle
and
aad
out
repz
mov
add
push
push
push
push
leave
imul
out
mov
out
xor
repz
mov
cmp
or
mov
sub
clc
mov
clc
jnp
shl
jno
xor
add
data16
pop
das
rcr
sbb
xor
loop
jne
jge
adc
sahf
sbb
mov
sbb
call
fidiv
repz
in
pusha
sbb
cmp
jnp
(bad)
pop
pop
sub
lods
(bad)
jmp
mov
mov
push
out
xor
jmp
pop
lock
sbb
adc
pushf
in
adc
rcl
mov
jg
lea
push
mov
xchg
out
mov
add
cwde
mov
pop
pop
aas
adc
mov
fstp
sbb
add
lods
iret
ins
sub
mov
fcom
xlat
mov
sbb
int
cmps
mov
push
imul
das
hlt
sar
mov
jns
retf
inc
loopne
test
movs
mov
jo
sti
jbe
pop
out
xor
stc
push
xchg
adc
mov
push
jne
je
repnz
xchg
dec
stos
outs
stc
xchg
out
jb
sbb
retf
test
jge
jmp
out
not
aad
int
mov
icebp
jecxz
pop
xor
xor
ds
lods
inc
ja
pop
repnz
xchg
stos
jo
sub
push
xchg
push
lods
mov
arpl
mov
call
outs
arpl
dec
movs
sbb
mov
pop
inc
push
aas
xor
das
ins
mov
xchg
push
adc
mov
(bad)
sar
xchg
add
lahf
dec
push
cmp
push
mov
mov
lock
mov
push
sub
mov
mov
pop
fisttp
scas
ret
cmps
xor
idiv
icebp
cmp
add
or
mov
mov
mov
scas
das
repz
bound
outs
fdecstp
or
ds
fs
push
jl
fsubr
sub
scas
fwait
lds
jnp
nop
inc
mov
stos
mov
push
mov
fld
xchg
stos
push
(bad)
pop
out
sbb
push
imul
mov
sub
div
scas
fbstp
call
xlat
in
xor
cmp
push
adc
pop
jecxz
repz
adc
mov
call
mov
sub
push
lahf
jbe
pop
inc
mov
sbb
cmps
cmps
ret
push
(bad)
cmps
loopne
mov
mov
mov
sub
(bad)
aaa
pop
aam
jge
lock
push
and
stos
mov
sbb
pand
and
imul
sahf
gs
or
push
icebp
(bad)
push
out
repnz
adc
jb
into
adc
in
sbb
mov
ret
inc
inc
(bad)
pop
pop
and
in
adc
jo
mov
jmp
ror
clc
and
jl
mov
ds
hlt
ret
add
loop
xor
rcr
fwait
lea
add
dec
lods
mov
lea
(bad)
push
rol
pop
pop
inc
dec
scas
sbb
int
push
(bad)
daa
jl
xchg
retf
lds
mov
stos
rol
loop
out
inc
test
vandnps
xchg
out
loop
ins
hlt
sar
cmp
fs
xchg
mov
hlt
inc
mov
inc
rcr
xor
sub
sar
mov
out
and
mov
idiv
sbb
jbe
sbb
mov
sub
inc
and
jecxz
lods
xor
cmp
scas
mov
cmc
sbb
pop
sub
inc
dec
leave
dec
sub
sbb
sbb
mov
cmps
push
dec
or
imul
xor
(bad)
fld
and
fadd
lahf
movs
call
hlt
inc
adc
sbb
sbb
leave
xchg
ss
bnd
movs
shl
add
sbb
mov
(bad)
shl
rol
sbb
and
adc
inc
push
arpl
mov
rol
push
cmps
push
inc
aaa
out
xchg
call
mov
push
sub
loope
in
pop
mov
jae
jb
sbb
test
push
in
sti
xor
cmps
iret
popf
push
xchg
(bad)
call
push
and
pop
push
mov
sbb
sub
xchg
xchg
mov
jle
push
outs
(bad)
fsub
xchg
lea
add
das
ret
or
inc
push
dec
call
pop
jmp
lea
es
push
mov
sbb
cs
fwait
les
add
das
cmp
movs
mov
shr
xchg
imul
jecxz
mov
mov
out
or
push
or
aas
xor
mov
ja
push
stos
pop
or
ret
fs
fs
les
jo
xchg
xchg
call
mov
mov
aas
ror
fidivr
xchg
xor
cmp
mov
(bad)
jno
mov
jp
or
out
and
inc
test
cmp
pop
inc
cdq
lock
xchg
rcr
jb
jae
das
stc
adc
and
push
(bad)
call
(bad)
jecxz
bound
mov
loope
push
mov
int
(bad)
cmp
retf
mov
sbb
cmc
xchg
(bad)
in
movs
sbb
ret
jmp
push
cmp
aam
ins
ficom
(bad)
in
jno
push
inc
push
push
xchg
mov
push
repz
jmp
push
mov
repz
out
lds
jmp
sbb
mov
sbb
inc
xor
(bad)
adc
push
push
adc
push
in
adc
stos
ret
and
arpl
push
jo
adc
mov
stos
mov
dec
inc
dec
(bad)
cld
or
adc
push
cdq
mov
rcl
mov
sbb
shl
scas
mov
aad
stos
mov
addr16
xchg
inc
cdq
add
ret
inc
pop
xchg
(bad)
jecxz
(bad)
mov
cdq
outs
gs
mov
mov
int3
cld
mov
ins
xchg
push
dec
mov
dec
inc
mov
ds
mov
and
or
gs
jae
and
cmp
mov
and
lea
je
xlat
icebp
adc
pop
add
fld
push
test
add
test
dec
call
sub
push
sub
dec
cs
sbb
mov
in
pop
cmps
sub
enter
ret
aad
mov
pop
jecxz
inc
ror
dec
lahf
mov
ss
hlt
sub
and
cmps
mov
in
pop
hlt
shl
rcl
add
jo
out
mov
or
cwde
outs
das
mov
(bad)
mov
nop
xor
outs
loope
adc
loopne
fucomp
retf
arpl
out
(bad)
pop
outs
clc
or
mov
rcl
in
add
mov
ret
bound
dec
xor
pop
leave
lods
xchg
mov
fwait
nop
pop
mov
movs
clc
or
in
aaa
fdivr
push
(bad)
push
pop
sub
push
dec
xor
add
(bad)
leave
(bad)
popf
lods
jmp
cmp
repz
aaa
mov
es
jecxz
xor
xor
jecxz
movs
pushf
fadd
in
sub
or
cmp
call
clc
aaa
test
icebp
or
dec
xor
mov
ins
stos
outs
xor
sbb
xor
pushf
xor
daa
(bad)
call
mov
cmp
shl
cld
jle
lock
xchg
retf
ins
cmps
adc
xchg
xchg
add
inc
inc
data16
cmp
xchg
push
addr16
dec
leave
in
pop
push
cwde
adc
xacquire
jnp
ror
jge
aad
and
hlt
inc
mov
rcl
push
cmp
jl
adc
and
pop
sub
push
data16
cmp
out
mov
repz
cmp
inc
sbb
jge
arpl
sti
cdq
(bad)
jno
es
push
xchg
mov
jmp
push
test
ret
fnstsw
hlt
popa
fwait
movs
mov
pop
shl
pop
scas
(bad)
jecxz
sbb
jecxz
ins
ror
fsubp
xor
or
popf
dec
sub
int
jmp
xlat
mov
test
add
arpl
jnp
in
out
and
dec
mov
loop
outs
xor
push
shr
pop
rcl
inc
fild
push
pop
lods
loope
push
push
setb
mov
int
dec
xchg
gs
adc
out
jae
out
loope
mov
pop
mov
jge
dec
je
dec
jmp
sti
sbb
add
dec
cld
popa
cmp
popa
shr
aad
cld
sbb
lods
xor
inc
sub
xlat
mov
fild
sub
cs
repz
loope
je
xor
test
rcr
add
mov
cmps
push
jp
out
sub
aam
mov
popa
popa
jl
icebp
or
or
jnp
mov
into
cli
mov
cmp
mov
adc
inc
pop
xchg
(bad)
fisubr
scas
dec
cmp
lea
or
fisubr
mov
jnp
dec
js
(bad)
cmp
push
ret
dec
cs
mov
mov
stc
push
movs
pop
push
adc
jo
mov
mov
lods
jl
sbb
scas
and
jnp
xchg
fsubr
xor
cmc
xor
push
or
pop
mov
out
pop
sti
in
add
fadd
outs
add
cli
stos
nop
gs
int3
outs
sub
arpl
ss
dec
call
sub
sub
pop
xchg
jae
cmp
movs
mov
retf
fiadd
(bad)
add
dec
sbb
push
inc
mov
inc
sbb
push
(bad)
hlt
sub
mov
ins
mov
pop
jo
pop
addr16
xchg
in
add
(bad)
mov
mov
fidiv
or
xlat
movs
sub
stc
leave
pop
fldcw
das
jp
mov
lods
dec
out
sbb
call
push
in
adc
or
push
icebp
dec
xchg
daa
repz
add
adc
out
test
mov
or
seta
and
xchg
xor
or
int
xchg
push
xchg
fsub
int3
push
or
mov
pop
retf
je
push
retf
cmp
std
sub
jp
pusha
and
je
add
and
jo
(bad)
mov
push
dec
iret
ja
(bad)
icebp
dec
adc
(bad)
xor
mov
and
mov
cwde
push
cmp
stos
je
push
mov
xor
push
cli
pop
jo
repz
cs
movs
jle
clc
int3
imul
push
jno
shl
mov
gs
fs
sub
popa
push
sub
nop
dec
test
movs
cmps
gs
dec
(bad)
cmp
in
and
fbld
cdq
mov
xchg
arpl
pop
mov
pop
ds
cmp
enter
repnz
lods
retf
mov
xor
cmp
mov
add
and
and
adc
mov
sbb
idiv
clc
out
js
dec
sub
sub
adc
mov
mov
xor
mov
push
adc
sub
sub
scas
loopne
inc
retf
ja
mov
or
pushf
mov
aad
jge
inc
addr16
sbb
bswap
sti
jns
and
or
repz
jbe
and
xchg
movs
leave
jle
dec
loopne
mov
fdivr
or
xchg
and
add
loopne
pop
dec
pop
imul
fcmove
push
imul
sbb
dec
mov
xlat
mov
test
xchg
xor
push
adc
sub
mov
and
mov
(bad)
xchg
cmp
jno
retf
mov
mov
or
cld
ja
push
fidiv
popf
adc
mov
xchg
dec
cs
cmp
add
dec
daa
dec
cmp
fwait
rcr
in
dec
fs
add
sahf
mov
push
sbb
adc
push
cmp
add
xor
mov
fdivp
nop
add
and
push
dec
out
xor
(bad)
push
or
dec
imul
xchg
xchg
inc
jmp
xchg
jne
loope
sbb
sub
or
das
(bad)
mov
and
mov
imul
push
fwait
xchg
push
lods
lds
cmp
out
dec
pop
xchg
adc
adc
(bad)
js
cmp
rol
pop
ds
cmp
int
mov
(bad)
xrelease
outs
imul
pop
(bad)
in
into
ror
xor
push
xchg
mov
and
add
fldenv
push
test
or
inc
imul
rep
icebp
mov
cmp
cmp
jbe
pop
mov
xor
inc
rcl
add
jmp
sbb
cmps
and
xor
add
and
pop
shr
fdiv
aad
mov
out
gs
in
call
bound
sub
mov
iret
repz
cmps
cld
sub
push
ds
nop
and
into
jp
sbb
pop
xchg
xchg
(bad)
sar
outs
loope
scas
jae
jnp
xor
cdq
or
cmp
loopne
inc
xchg
jno
aam
aaa
ss
shr
aad
adc
push
jae
test
jl
inc
iret
and
xchg
gs
xor
dec
pop
shl
mov
ret
aaa
aam
std
loopne
or
mov
push
mov
div
stos
xor
jmp
nop
retf
push
aaa
dec
adc
adc
dec
mov
pop
xor
xchg
xor
add
adc
fnstcw
fs
adc
cmps
shl
xchg
movs
add
mov
dec
push
xchg
icebp
addr16
jnp
mov
and
inc
mov
movs
shl
ins
stc
pop
push
mov
scas
addr16
push
retf
sub
sub
mov
ss
stos
out
pop
mov
inc
push
push
popf
(bad)
jp
std
loop
enter
mov
lds
xor
pop
xor
outs
fsub
iret
xchg
sbb
adc
cwde
cmp
mov
mov
and
mov
xchg
bound
neg
mov
div
add
add
jecxz
fdivr
call
mov
ins
movd
sub
push
cld
push
retf
inc
fwait
adc
xor
adc
add
add
out
movs
xor
add
movs
(bad)
sti
mov
ret
sbb
xor
aaa
cmp
xchg
push
and
mov
cmc
dec
pop
mov
inc
pop
cmp
in
mov
ror
mov
hlt
aam
mov
xchg
cmp
mov
ds
repnz
mov
ss
mov
test
sbb
das
inc
sbb
sbb
push
pop
stc
test
adc
loopne
pop
(bad)
ins
aam
jb
push
sbb
sub
lahf
pop
scas
push
clc
add
cwde
fwait
outs
push
enter
out
ins
and
imul
shr
fmul
je
js
ins
aad
inc
fsubr
cwde
(bad)
aad
repnz
xchg
push
cmp
in
or
cmp
pop
pop
push
push
dec
not
mov
xchg
fcomp
and
adc
ins
xchg
mov
nop
outs
aam
push
push
dec
(bad)
sbb
movs
outs
sub
fnstenv
lock
cmp
cmc
adc
push
xchg
add
mov
clc
jp
xor
into
retf
loop
xor
add
inc
mov
mov
sbb
cmc
push
in
lds
adc
sbb
push
mov
inc
sbb
xor
pushf
les
pop
xchg
mov
sbb
rol
cmp
scas
nop
clc
jmp
rcl
cmp
std
inc
popf
cmp
mov
daa
lods
and
dec
cmp
xchg
outs
retf
in
cmp
dec
pop
sbb
cmps
call
lock
xor
(bad)
cmp
cld
ja
(bad)
mov
ret
sysenter
pop
sbb
and
test
dec
rcl
adc
stc
rcr
push
xor
add
clc
loope
pop
out
sahf
mov
sbb
int3
add
mov
shl
inc
inc
inc
push
aaa
cli
adc
test
cmp
jne
cli
cmp
cs
adc
sub
jb
nop
push
shr
push
stos
xchg
setb
push
xchg
add
jbe
cmps
xchg
xor
ret
pop
rol
mov
sub
rol
loope
retf
xchg
dec
mov
mov
iret
or
sub
dec
arpl
fsqrt
fsubr
idiv
xchg
loopne
ss
inc
gs
dec
out
dec
ficom
dec
add
jbe
xchg
sbb
mov
mov
test
call
jnp
push
icebp
add
pop
(bad)
(bad)
jg
hlt
or
mov
xchg
mov
shr
sti
add
jnp
mov
cmp
push
bound
das
xchg
imul
xlat
xchg
cmps
jmp
sti
dec
push
rol
ffreep
lods
jnp
ret
icebp
call
inc
cld
iret
push
bound
imul
jge
pop
mov
mov
mov
xor
daa
inc
xor
fcmovu
sbb
push
not
xlat
xchg
cwde
loop
icebp
pop
loope
sbb
loope
pop
and
arpl
add
ja
fisttp
shl
push
nop
scas
mov
push
xor
bound
lea
imul
sbb
xor
push
mov
dec
mov
call
fcmovnbe
pop
daa
cld
ret
mov
fistp
inc
cld
jnp
cmp
das
cld
jecxz
fcomp
es
and
retf
push
push
xchg
dec
jne
push
mov
sahf
inc
mov
adc
cmp
test
cmc
pop
add
stos
int
cmp
xor
sbb
push
cmc
jmp
cmc
add
imul
shr
add
sbb
mov
fild
jecxz
rol
lahf
in
add
lds
mov
ret
outs
dec
adc
mov
and
jle
pop
stc
jbe
jae
jae
cmp
and
push
ja
(bad)
xchg
aas
sbb
cmp
cmp
ja
adc
sub
cmp
fst
jmp
call
popf
or
push
or
fs
jecxz
enter
inc
std
and
sti
mov
mov
jns
pop
sub
xchg
call
sbb
loopne
pop
dec
sbb
inc
mov
mov
mov
(bad)
leave
pop
jnp
jle
and
in
mov
std
fimul
dec
sbb
mov
(bad)
(bad)
ds
(bad)
and
popf
(bad)
retf
leave
daa
sub
mov
leave
push
jg
arpl
dec
repz
inc
push
or
mov
cmp
pop
adc
pop
imul
push
dec
pop
sbb
mov
mov
jae
cmp
push
jle
or
ds
sub
adc
cwde
mov
fbstp
xor
mov
pop
mov
aad
xchg
inc
mov
or
fist
leave
fld
sbb
mov
int3
aaa
jg
aaa
mov
shl
daa
xor
call
mov
ret
or
inc
inc
xor
push
mov
lahf
xchg
xchg
jne
pop
mov
inc
loopne
cmps
ins
lods
(bad)
call
xchg
mov
pusha
push
add
adc
(bad)
pop
adc
and
jl
xchg
or
add
xchg
push
mov
loop
inc
imul
pushf
(bad)
sbb
test
mov
sbb
xor
cld
nop
and
mov
mov
dec
iret
jle
xchg
xchg
lds
mov
mul
cmp
pop
cld
(bad)
pop
sub
loope
sub
add
sti
(bad)
lahf
mov
pushf
lds
daa
repnz
test
out
sub
fsub
pop
sbb
call
jmp
pop
inc
xchg
repnz
ret
sbb
mov
rcr
outs
xchg
repnz
and
scas
outs
std
sbb
cmp
jle
push
pushf
xchg
fs
pop
cmps
push
or
or
cmp
xchg
xchg
scas
pop
or
adc
lahf
adc
ret
jmp
adc
(bad)
sub
test
mov
inc
pop
push
addr16
addr16
mov
add
add
pop
push
sbb
xor
sbb
jno
xor
jp
push
test
mov
push
xchg
pop
inc
sar
jp
mov
shl
cmp
jne
inc
mov
xchg
cwde
(bad)
std
push
xor
das
imul
ret
gs
call
aaa
or
pusha
xor
jbe
addr16
cmp
mov
not
xchg
enter
jae
jecxz
mov
jle
js
stos
and
mov
jl
out
(bad)
cli
jne
or
arpl
cmp
popa
inc
or
dec
dec
(bad)
loope
je
hlt
fnstsw
add
xchg
retf
outs
mov
jmp
mov
pop
std
push
rcr
aam
inc
mov
xor
rcr
stos
shl
jo
daa
xchg
mov
xchg
sbb
push
or
pop
xor
movs
lods
dec
xchg
repz
cmp
ret
(bad)
ds
sar
int
push
sub
imul
dec
test
jnp
and
scas
sbb
scas
jne
out
sbb
lea
jecxz
xor
cmc
dec
add
packsswb
jo
fbld
xor
enter
cld
sub
inc
cli
pop
pop
out
mov
stos
retf
pop
leave
dec
push
mov
pop
pop
dec
sub
icebp
xchg
call
(bad)
sbb
enter
mov
cld
rcr
jl
in
push
fcomp
jecxz
cli
and
sbb
aad
add
es
mov
jecxz
(bad)
xor
hlt
or
fbstp
fcom
(bad)
mov
clc
lock
xor
fist
xchg
push
xchg
stc
push
repnz
rcr
or
adc
outs
dec
daa
out
cmp
gs
movs
and
mov
add
div
jo
jns
xchg
loope
test
inc
xchg
dec
frstor
mov
mov
adc
add
call
pop
not
lock
call
mov
xor
std
enter
inc
mov
jmp
cmp
push
push
arpl
in
test
out
(bad)
popf
mov
mov
xlat
mov
ins
mov
repz
popa
xchg
push
and
cwde
lahf
lods
sbb
cmp
xor
push
dec
and
inc
int3
out
inc
sub
add
mov
stos
into
mov
pop
fstp
call
clc
les
imul
pop
xchg
or
ins
cmp
jb
xlat
jno
pop
nop
int
and
mov
loope
daa
xor
ja
and
cli
retf
addr16
cmp
and
inc
xchg
cmp
cld
pop
mov
jnp
adc
adc
xor
bound
lock
and
mov
mov
jnp
adc
dec
sub
and
and
pop
repnz
mov
test
inc
mov
mov
inc
aaa
adc
repz
or
sub
cmp
retf
imul
dec
fcmovb
js
hlt
jae
fstp
mov
test
retf
(bad)
mov
fisttp
lods
adc
sbb
loop
idiv
pop
add
lock
xor
inc
std
dec
cmps
push
cmp
sbb
push
shr
fsubr
jmp
fwait
push
jecxz
icebp
jp
(bad)
and
add
fnstenv
stos
cmp
stc
ins
outs
inc
loope
loope
xlat
xchg
(bad)
imul
push
xchg
or
cs
cwde
push
rcr
mov
movs
jmp
(bad)
pop
sbb
fisttp
inc
fistp
jg
scas
add
add
jbe
jp
fcomip
(bad)
push
stos
dec
scas
pop
inc
cmc
popf
cmc
addr16
xor
push
pop
lahf
push
mov
jnp
ins
xchg
js
push
mov
mov
ficom
out
mov
cmc
add
cmc
cwde
ins
loop
mov
retf
leave
push
sahf
adc
js
inc
cmp
mov
xchg
sub
in
icebp
ins
mov
movs
es
std
xor
cdq
mov
mov
call
pop
or
imul
movs
retf
inc
sub
fimul
mov
mov
fsub
mov
xchg
test
stos
pushf
cmps
mov
pop
sbb
std
jne
retf
rol
inc
mov
add
cmps
sbb
call
xor
lds
addr16
stos
retf
mov
inc
rcr
retf
cmp
sub
in
adc
push
pop
stos
pusha
add
iret
pop
mov
leave
in
dec
or
jne
adc
dec
xchg
add
jb
(bad)
call
push
into
icebp
jae
sbb
aad
cmc
sub
xlat
test
inc
dec
fs
imul
arpl
cli
adc
dec
inc
dec
adc
(bad)
fstp
mov
jb
dec
and
xchg
scas
iret
ja
sub
cdq
sub
jge
push
sub
rcl
(bad)
jnp
fadd
iret
jl
inc
js
or
and
jns
cdq
push
rcl
dec
jp
mov
or
jle
cld
jp
fdivr
outs
sar
mov
stos
push
outs
jnp
xor
xor
cli
or
jns
es
ret
test
dec
clc
leave
cmps
cmp
(bad)
in
dec
pop
cmc
fist
adc
test
imul
push
repz
mov
les
rcr
movs
aam
fcomp
cwde
dec
sbb
lds
and
push
aam
rol
add
test
mov
push
call
cdq
mov
ss
jns
add
cmp
add
hlt
and
dec
dec
push
jo
sbb
inc
and
loope
pop
pusha
xchg
dec
hlt
mov
inc
inc
fpatan
sbb
gs
mov
xchg
mov
mov
imul
leave
jmp
pusha
and
mov
enter
sbb
lahf
push
sti
pop
cmp
jl
es
sti
std
cwde
fucomip
inc
dec
xchg
mov
cli
mov
(bad)
cmc
js
and
outs
add
stos
jnp
stos
enter
ins
lock
ficomp
pusha
test
mov
sub
ja
cli
adc
cmp
sbb
data16
jnp
or
jae
lds
lds
push
pavgb
push
test
and
xchg
mov
push
push
sub
rcl
mov
aam
lods
jmp
cli
(bad)
rol
sahf
gs
out
inc
les
jg
(bad)
dec
pop
aaa
sbb
cmp
adc
scas
lock
clc
addr16
sbb
out
and
in
shl
push
mov
aam
inc
jg
sub
sbb
sub
mov
ins
mov
inc
repz
mov
cdq
sub
jo
out
push
dec
loop
jb
out
arpl
mov
popa
sti
jb
nop
xchg
imul
test
sbb
cmp
fcomp
cmps
sbb
call
in
xchg
jb
mov
mov
pushf
pusha
mov
dec
jg
in
dec
jecxz
jmp
icebp
ja
mov
and
retf
imul
pop
pop
daa
add
pop
xchg
xchg
dec
in
push
in
xor
popf
daa
mov
dec
ret
jbe
cs
jmp
pusha
xlat
inc
add
push
std
div
out
pop
mov
inc
cwde
into
jmp
jmp
rep
test
icebp
add
aad
pop
mov
adc
push
aam
lods
ja
ror
xor
xchg
inc
pop
mov
(bad)
sbb
les
fwait
and
add
pop
pop
das
push
mov
mov
pop
sbb
jp
mov
icebp
icebp
mov
and
dec
daa
add
cs
ins
add
retf
jns
mov
std
jge
cmps
fild
addr16
(bad)
sub
pop
mov
cld
push
sbb
or
cmp
xchg
jbe
sbb
(bad)
aas
pop
xor
sahf
fwait
mov
adc
mov
test
lods
imul
call
test
sbb
sbb
icebp
mov
frstor
adc
xchg
rol
mov
fcmovnb
sbb
add
push
(bad)
adc
pop
pop
lds
pop
(bad)
loopne
push
fsubr
not
sahf
ins
xchg
mov
dec
(bad)
and
push
jae
push
inc
mov
test
idiv
cmc
sub
xchg
aam
aad
bound
mov
and
test
mov
dec
mov
add
sahf
jmp
test
cmc
aad
push
addr16
dec
cwde
icebp
es
test
inc
inc
mov
nop
and
loope
cmp
cmps
int
lahf
push
jno
jmp
xchg
inc
sbb
push
jle
push
sbb
aad
ret
push
pop
cld
out
xor
ja
cld
jb
mov
dec
dec
enter
mov
loope
pop
lock
dec
aas
jp
inc
push
leave
(bad)
std
pop
xchg
inc
mov
cmp
jge
iret
std
int
push
xchg
jmp
fst
ret
movs
daa
dec
jns
cdq
pop
mov
jmp
dec
out
sahf
dec
mov
test
add
retf
mov
lds
loop
shl
mov
loope
ins
ins
sbb
jl
pop
xchg
xchg
cmp
inc
ret
mov
add
wrmsr
iret
or
sub
imul
and
shl
xor
aas
icebp
xchg
and
neg
nop
adc
sbb
test
xchg
sbb
popf
stos
fsub
and
hlt
iret
dec
mov
xor
stc
fwait
ds
movs
adc
stos
cmp
scas
(bad)
into
pop
sbb
mov
adc
push
mov
mov
movs
ret
mov
mov
je
sbb
cmps
inc
fucomi
cmovge
pop
jl
(bad)
push
cmp
mov
fs
xor
jecxz
ins
and
mov
fstp
jnp
adc
shl
sti
cwde
popa
fs
or
dec
jbe
sbb
dec
sub
fild
push
jecxz
clc
fwait
into
aaa
int3
(bad)
xchg
cs
mov
adc
ret
sub
repnz
adc
mov
jp
je
shl
stos
in
cmp
imul
maxps
xor
xchg
aad
lds
or
cmp
(bad)
mov
and
bound
sahf
in
cmp
jmp
loopne
fcmovnb
fstp
mov
push
aad
and
fistp
add
pop
nop
push
jae
push
xchg
jne
cmc
xchg
dec
inc
adc
jle
test
push
jg
leave
cwde
retf
shl
fistp
outs
into
or
or
inc
stos
movs
xor
in
ins
in
pop
idiv
sbb
mov
push
adc
in
cmp
inc
int3
iret
fld
into
in
fbld
sbb
movs
pushf
cwde
lds
scas
dec
push
scas
adc
pop
imul
jge
sar
sub
into
or
ja
cwde
jle
loopne
xor
addr16
clc
into
add
cmp
push
pop
jne
jno
sbb
dec
arpl
or
fcom
xchg
ja
jmp
adc
mov
jmp
leave
outs
jmp
sahf
scas
sub
inc
mov
(bad)
mov
iret
repnz
jo
ficom
sbb
int
cmc
mov
adc
rcl
cs
cmp
out
out
inc
imul
add
cmp
or
pop
aad
cmp
jg
lock
pop
retf
add
lds
xchg
jg
daa
jg
sar
(bad)
push
push
shl
xchg
cmps
loop
stos
xchg
faddp
pop
in
mov
imul
push
(bad)
mov
stos
pop
scas
sbb
push
bound
sub
test
test
popa
xchg
mov
cld
or
arpl
sbb
adc
rcl
xor
mov
sub
lods
cmc
pop
mov
xchg
xchg
dec
lods
sti
mov
test
stos
cmp
imul
pop
xchg
mov
pushf
dec
cmps
cmps
pop
jae
icebp
(bad)
je
daa
push
not
xchg
stos
and
pop
sub
dec
mov
push
mov
adc
sub
add
or
pop
push
aaa
and
shl
loopne
ins
sub
pop
adc
(bad)
bnd
dec
repz
sub
ins
inc
int
ret
(bad)
cmps
xor
enter
mov
xor
jns
int3
push
xlat
pushf
push
xchg
(bad)
add
enter
add
jecxz
adc
and
loopne
cmps
dec
and
loope
push
add
inc
and
out
xchg
stos
jp
xor
dec
or
(bad)
pop
xor
sub
jmp
adc
call
lods
imul
push
mov
popa
xchg
scas
mov
mov
adc
push
xchg
jl
push
jmp
cmp
add
mov
xchg
test
sar
mov
add
and
clc
aam
jge
jo
call
mov
daa
call
sbb
enter
push
mov
sub
pop
rcl
cmps
add
cmps
mov
push
rol
pop
lods
mov
adc
pop
push
fdiv
hlt
aam
xlat
or
(bad)
jbe
bound
xchg
cwde
div
jg
shr
xor
(bad)
test
test
cmp
sub
dec
ret
sub
nop
mov
addr16
mov
mov
mov
call
cmps
mov
jae
not
jno
(bad)
pop
test
shl
sbb
out
xchg
xor
loopne
dec
mov
pop
loope
mov
pop
sbb
fmulp
lds
inc
test
cmp
sub
add
retf
test
adc
inc
movs
jo
sub
aaa
fisttp
mov
jecxz
jno
push
xlat
sbb
push
cmp
and
sbb
xchg
addr16
push
retf
mov
std
cmp
into
mov
sbb
movs
inc
cmps
int
test
push
and
pushf
and
cld
aas
sahf
fsubr
add
je
rcr
dec
and
adc
dec
loopne
(bad)
push
jmp
lock
repnz
jmp
arpl
std
pop
push
push
shr
fsubr
mov
add
jmp
loope
ss
adc
loope
sub
mov
int
xor
mov
cmp
cld
mov
adc
daa
aam
or
es
mov
mov
outs
jae
clc
arpl
sub
xor
mov
loopne
ss
loopne
in
or
dec
out
xchg
sub
xchg
push
dec
or
aaa
sti
stc
faddp
fs
test
pop
cmove
xchg
or
retf
mov
pop
mov
cmp
adc
ror
jle
mov
out
xchg
add
mov
push
and
sub
adc
repnz
fcomp
mov
adc
shr
jle
out
ds
es
sub
sub
and
xor
jnp
ret
mov
push
mov
js
int3
cwde
push
jne
fidiv
xor
push
jg
icebp
inc
jge
dec
jp
pusha
pop
inc
jne
aad
add
test
mov
push
lods
ja
sbb
jae
mov
aad
push
jmp
inc
pop
(bad)
js
push
(bad)
movs
sub
inc
cwde
inc
push
mov
fnstsw
mov
jmp
push
pushf
stos
and
or
dec
sbb
sbb
mov
pushf
mov
hlt
bound
mov
push
(bad)
enter
enter
mov
sub
mov
jge
ja
mov
or
push
sbb
test
mov
bound
rol
add
jns
and
jne
call
cmps
push
sti
test
nop
inc
fnsave
popf
jbe
data16
adc
cmp
or
je
fs
iret
cdq
sbb
jmp
pop
or
dec
fst
mov
lds
pop
cmp
jmp
adc
sahf
jl
add
aaa
sbb
push
jnp
into
imul
aaa
jo
pop
jbe
jns
jge
push
or
movs
sub
aaa
dec
mov
test
inc
fidivr
pop
stos
popa
mov
int3
mov
jl
jae
cs
cmps
add
inc
ret
sub
push
(bad)
xor
jae
pop
pop
push
sub
addr16
xchg
mov
push
iret
mov
in
or
cmc
jmp
jb
xchg
cmc
rcr
sub
cmp
cmc
rcr
bound
xchg
xor
adc
dec
mov
add
loopne
add
and
sbb
cwde
ins
mov
inc
mov
or
shl
dec
xchg
loope
mov
jmp
(bad)
xor
mov
loope
movs
test
xor
rcr
jle
loopne
jbe
adc
fdiv
pop
stc
add
jmp
xchg
lds
add
lock
sub
sub
sar
jns
push
inc
movs
xor
add
lahf
cld
mov
jmp
xor
mov
push
xor
pusha
sub
out
mov
dec
dec
push
mov
int
adc
jne
lods
sti
rol
adc
lods
gs
and
in
sub
dec
mov
cmp
sbb
in
jnp
test
mov
add
fnstsw
jns
sbb
mov
cmp
pop
mov
fs
push
cmc
popa
inc
dec
inc
xchg
popa
lods
xor
pop
sbb
sub
popf
ds
out
mov
mov
cmp
pop
mul
xor
xor
push
cdq
aas
sbb
adc
pop
mov
ror
fs
push
adc
mov
imul
sub
jle
outs
ror
ret
xor
test
fs
cmp
mov
into
out
inc
xchg
cmps
inc
retfw
push
(bad)
fidiv
cmovbe
cld
cmc
push
stc
xor
push
jmp
xor
(bad)
mov
jb
aam
ret
xor
add
dec
hlt
adc
pusha
push
mov
push
inc
jg
jge
in
call
fild
stc
fist
out
push
test
sbb
mov
ret
(bad)
mov
shl
sub
xchg
es
movs
mov
lea
add
xor
xchg
sub
mov
loopne
pop
test
mov
ret
lds
in
sbb
xchg
and
fdiv
push
outs
push
pushf
and
(bad)
imul
(bad)
sbb
push
(bad)
(bad)
jmp
iret
mov
mov
and
push
add
das
mov
cwde
pop
jne
jp
arpl
and
jo
bnd
in
lods
retf
popf
(bad)
cli
mov
mov
or
inc
clc
repnz
shr
data16
mov
sub
inc
and
dec
adc
xor
js
ds
popf
dec
dec
pop
inc
sbb
sbb
push
icebp
mov
mov
mov
outs
or
xlat
(bad)
sbb
cmp
scas
push
std
cmp
gs
imul
mov
lea
(bad)
aam
pusha
xchg
and
popa
add
jo
jae
aad
mov
mov
cmp
not
sti
adc
adc
dec
xor
cmp
xor
sbb
mov
addr16
dec
push
mov
(bad)
sub
in
cmps
push
mov
shl
jbe
mov
scas
inc
jae
fild
xor
sub
jmp
xchg
loopne
dec
cld
in
push
mov
and
ja
sar
rcr
neg
jns
mov
fdivr
push
inc
pop
jle
pop
jl
sbb
fsubr
fwait
jmp
stos
out
cmps
jne
jne
pop
dec
mov
cdq
popf
shr
or
adc
repz
inc
sbb
imul
jnp
addr16
push
test
jg
inc
lods
mov
add
mov
jg
lods
dec
inc
push
cmp
clc
xchg
or
fwait
out
mov
xor
fwait
jmp
test
stos
lahf
cmps
xchg
mov
pop
data16
scas
and
mov
mov
mov
dec
mov
mov
add
cmc
mov
aam
jno
test
pop
add
xor
mov
cmps
sub
mov
xlat
aas
mov
(bad)
cmc
inc
jae
fdivr
loopne
cmps
js
popf
out
pop
and
xchg
sti
or
int
(bad)
dec
outs
fdiv
neg
(bad)
stos
sub
sub
sbb
(bad)
inc
sbb
sbb
(bad)
mov
mov
pop
mov
mov
pushf
aas
aaa
inc
imul
or
lods
ja
push
in
pop
xchg
pop
add
adc
jle
xor
sqrtps
clc
push
gs
jne
add
adc
inc
sbb
mov
inc
pop
and
sub
adc
push
lahf
ins
test
mov
add
jne
or
xor
xor
inc
pop
rol
cs
inc
or
mov
aam
adc
cmc
xchg
cmp
mov
data16
sub
out
data16
jb
fisttp
pop
mov
scas
enter
mov
jecxz
mov
xchg
sbb
dec
adc
jl
ins
imul
cs
rcr
inc
push
(bad)
rcr
hlt
cmc
cmps
mov
push
push
repz
outs
pushf
inc
or
mov
les
pop
inc
pop
pop
adc
xchg
mov
aad
(bad)
data16
or
pop
lock
jbe
sub
or
and
pop
ret
xchg
jo
push
add
das
and
hlt
push
xor
push
push
or
push
xchg
in
dec
add
cmps
push
enter
or
sbb
aas
into
mov
push
lods
aam
sbb
lods
mov
test
imul
fst
sbb
jmp
adc
movs
cmp
dec
js
leave
loop
dec
sub
mov
xchg
(bad)
fcomi
pop
fisubr
push
jae
jae
in
dec
test
jnp
xor
pop
into
int
mov
dec
test
and
call
or
jge
retf
icebp
div
test
pop
pop
stos
lods
pop
mov
dec
xor
js
add
leave
imul
dec
cmp
inc
and
add
pop
inc
pusha
sub
push
ss
(bad)
fwait
add
jmp
loop
ds
aad
and
mov
xchg
outs
inc
jp
inc
dec
pop
jg
in
xchg
int3
call
mov
push
daa
gs
cmp
(bad)
imul
(bad)
into
push
push
push
xchg
jg
jmp
xchg
arpl
push
sub
xchg
cmp
xchg
jmp
add
cmp
cmp
and
call
cdq
fs
aam
(bad)
sar
test
out
and
xor
mov
cmps
mov
call
sub
cs
and
push
add
dec
mov
add
sar
call
push
add
inc
ins
mov
or
mov
popa
jmp
call
push
shr
adc
fcomip
mov
jge
jbe
dec
pop
pushf
mov
xchg
out
push
sbb
add
call
jno
push
inc
rcr
(bad)
fs
mov
ffreep
cli
sti
test
sbb
push
mov
mov
test
xchg
sbb
add
mov
xchg
pop
aas
call
(bad)
and
jb
int
sub
(bad)
jnp
or
push
mov
or
cmp
inc
and
aad
xchg
and
add
outs
je
int
mov
(bad)
retf
cmp
das
mov
(bad)
pop
xor
mov
loopne
mov
out
mov
mov
fisttp
fmul
pop
pop
push
loope
jle
xor
dec
jg
ins
and
icebp
mov
mov
sbb
mov
jnp
xchg
iret
push
ss
in
ja
scas
inc
hlt
inc
cld
pop
ret
jnp
cmps
xor
pop
or
fidiv
scas
pop
in
in
iret
das
xchg
fld
cs
inc
sbb
out
out
fisttp
xchg
mov
fs
mov
cs
adc
retf
mov
fidivr
pop
mov
fst
loopne
mov
in
push
ja
imul
sbb
pop
xor
dec
call
call
jno
sbb
xlat
mov
fs
or
lahf
adc
adc
addr16
adc
mov
inc
lods
js
(bad)
sbb
sbb
jp
iret
xor
sub
(bad)
and
pop
int
les
xchg
das
rcr
push
pop
int3
xchg
(bad)
int
stc
cmp
fst
mov
add
stc
and
dec
or
jmp
aam
cld
cdq
push
(bad)
mov
add
xor
dec
not
dec
xlat
cmc
cmp
shl
pop
fs
and
ins
retf
cli
jnp
jns
push
sub
cmp
cmp
data16
push
les
push
and
hlt
ret
pop
mov
ds
inc
(bad)
pop
outs
inc
pop
inc
loopne
popf
mov
outs
hlt
push
sbb
fisttp
std
pop
aam
enter
mov
sbb
imul
call
div
mov
jb
cli
sub
or
leave
stos
xor
mov
push
pop
std
add
imul
cmc
cld
arpl
fwait
nop
pushf
out
push
push
out
xor
js
xor
pop
xchg
clc
bound
sub
and
(bad)
mov
dec
dec
pop
cmps
repnz
inc
nop
hlt
pop
aaa
retf
enter
jns
stc
inc
iret
inc
loopne
dec
push
(bad)
jnp
mov
repnz
call
inc
cld
imul
into
sbb
push
sub
(bad)
fsubr
jno
fldcw
add
push
xchg
fcmovne
cmp
popa
and
call
call
push
je
adc
(bad)
in
cmp
(bad)
adc
add
das
retf
sbb
cli
bound
mov
add
push
xor
jl
jnp
std
sar
adc
mov
pop
add
es
or
int
pop
add
ret
repz
pop
out
mov
rcl
mov
and
shr
inc
sahf
xchg
imul
jno
jno
jg
fdiv
fldz
xor
pop
sti
pop
arpl
aaa
cmp
and
and
mov
and
sub
sub
push
bound
jg
loopne
xchg
mov
pop
push
inc
pop
mov
xor
pop
out
xor
or
in
test
xchg
mov
dec
mov
mov
cli
inc
add
pop
cmps
add
fst
dec
pop
mov
add
leave
fs
sbb
fsubr
retf
jnp
fisub
pushf
in
imul
cdq
adc
(bad)
test
jp
push
pop
movs
iret
jge
stos
mov
cld
push
paddsb
push
enter
jmp
adc
lahf
mov
fucomi
xchg
inc
ins
mov
div
mov
movs
std
ret
push
ins
(bad)
in
(bad)
je
inc
arpl
dec
push
xlat
popf
cmp
movs
test
mov
sbb
push
pushf
push
mov
test
pop
shr
sbb
icebp
inc
stc
ins
sub
fidiv
je
fidivr
test
imul
adc
jne
add
lock
mov
and
mov
je
xor
inc
or
or
inc
inc
or
jbe
mov
mov
idiv
dec
dec
jl
inc
icebp
mov
and
rcr
(bad)
lea
xchg
xchg
add
pushf
mov
inc
(bad)
push
call
add
out
mov
or
enter
fldcw
and
fcom
std
nop
and
ins
pop
inc
cmp
aam
mov
push
call
arpl
dec
cdq
sbb
imul
(bad)
pop
imul
jnp
int3
and
jmp
pusha
xor
mov
popa
clc
cmp
push
push
jecxz
cli
push
dec
int3
cli
mov
pusha
pop
ins
push
gs
add
sub
mov
push
popa
jmp
pop
mov
inc
test
lock
xchg
pop
cld
ret
into
sbb
push
pop
add
cmc
lock
or
adc
imul
adc
pop
(bad)
pushf
cdq
test
sub
xor
ss
mov
shl
adc
push
add
(bad)
iret
and
mov
sbb
cmc
imul
push
jl
in
mov
out
mov
ja
pusha
scas
ret
and
fistp
xor
outs
fstp
int
into
imul
(bad)
retf
pushf
mov
adc
popf
sbb
mov
dec
sub
stos
imul
cmp
test
nop
ss
ds
lods
mov
imul
sub
repz
add
xchg
mov
xchg
retf
std
lods
rol
add
mov
pushf
lahf
repz
in
xor
repz
popf
cs
inc
push
mov
xor
(bad)
xlat
inc
mov
xor
fild
jns
test
(bad)
xor
and
sub
adc
mov
shl
fs
sub
mov
sar
loop
push
cmp
sti
cmp
test
inc
xor
lods
mov
pushf
(bad)
ja
and
pop
ret
mov
add
dec
scas
xchg
push
and
dec
and
fld
dec
mov
pop
push
add
jb
dec
push
pop
test
test
(bad)
js
out
cli
mov
jl
mov
xchg
ror
pushf
xor
cmp
in
sbb
out
pusha
les
pop
mov
icebp
cmps
fnstsw
push
cmps
jb
inc
fistp
in
mov
inc
xchg
idiv
les
mov
xor
arpl
mov
adc
mov
sub
dec
daa
cwde
int
cmp
and
xor
mov
mov
aas
mov
pop
mov
dec
jp
das
je
dec
push
or
mov
or
cmp
fsubr
inc
dec
loopne
neg
xchg
test
mov
mov
dec
nop
cbw
push
outs
push
jbe
sbb
fwait
iret
scas
push
inc
retf
mov
jle
ror
addr16
fldcw
jne
mov
(bad)
mov
and
jg
pop
loopne
sti
add
mov
push
inc
lods
mov
mov
and
jecxz
rcl
mov
adc
push
leave
add
sub
(bad)
retf
mov
mov
jle
es
dec
adc
sbb
push
in
cli
aam
lock
out
and
mov
cmp
xor
lods
repnz
(bad)
and
mov
pop
push
out
sub
jnp
or
enter
dec
push
mov
cmp
nop
mov
or
dec
pushf
(bad)
retf
sbb
test
addr16
sbb
pushf
ficom
sub
mov
inc
mov
(bad)
xchg
mov
cmp
out
cwde
sbb
arpl
iret
sbb
(bad)
mov
jmp
fld
xor
mov
call
jns
and
mov
mov
mov
leave
scas
lods
jae
retf
dec
pop
add
lods
retf
addr16
loope
sahf
mov
mov
stos
dec
pop
sub
mov
aad
ds
adc
sbb
cld
mov
pusha
cwde
fucomp
xchg
jge
aad
mov
mov
into
push
sahf
fisub
push
(bad)
in
jbe
cli
xchg
(bad)
cmp
addr16
mov
mov
repnz
repz
push
ret
mov
popa
lds
xor
rcr
mov
xchg
or
mov
xchg
sbb
aad
daa
push
sbb
test
xchg
xchg
sbb
neg
adc
ret
fdivr
das
jmp
jo
shl
rol
add
cmp
cmp
fbld
mov
imul
arpl
in
cmp
adc
adc
test
or
sub
fsubr
outs
das
add
fwait
dec
gs
adc
mov
rol
cmp
outs
ficom
aad
imul
clc
clc
fldcw
push
dec
sub
push
gs
test
repz
fstp
xlat
jns
sub
aad
(bad)
cmp
call
pop
push
inc
inc
js
mov
pop
ins
ret
nop
into
call
mov
push
hlt
mov
xchg
xchg
imul
add
or
call
sbb
loopne
jae
jp
pop
dec
fwait
jno
xchg
xchg
mov
leave
add
pop
jp
sub
ficomp
add
mov
pusha
jo
aam
dec
mov
inc
jno
inc
xchg
jmp
inc
cmp
bound
xor
jb
loopne
out
adc
ds
and
scas
inc
clc
ret
ret
arpl
xchg
mov
sahf
movs
mov
call
nop
cdq
retf
sbb
dec
adc
mov
jns
sti
pop
xchg
sbb
in
cmp
popw
xchg
ror
cld
pop
repz
lahf
jnp
movs
lods
rcr
add
cmp
adc
xor
sbb
cli
rcl
sbb
adc
ror
pusha
push
ins
les
inc
lds
dec
cs
pop
mov
daa
xchg
add
movs
fs
cmp
jnp
cld
mov
das
jno
scas
mov
mov
scas
push
push
jnp
mov
lahf
loope
retf
sbb
jbe
inc
pop
push
leave
jnp
sahf
dec
aam
aam
mov
or
cmps
std
invd
das
shl
adc
push
sti
or
mov
in
xlat
outs
leave
gs
xchg
inc
sub
mov
loop
test
jae
shr
jmp
cmp
pop
test
pop
scas
adc
sub
jb
jle
imul
sahf
int3
mov
or
pop
clc
lds
sbb
mov
sbb
(bad)
jle
pushf
mov
adc
jl
sbb
xchg
fdivr
push
mov
sub
pop
mov
pop
and
into
scas
(bad)
shr
mov
test
daa
pop
or
out
cmp
loope
iret
xchg
not
mov
xor
sahf
push
push
sbb
inc
inc
xor
lods
mov
pop
lods
(bad)
xchg
retf
(bad)
(bad)
fstp
pop
fld
shl
inc
or
adc
cwde
mov
imul
jns
mov
or
push
pop
leave
jmp
dec
cld
ins
fbstp
neg
pushf
retf
push
dec
retf
or
fiadd
lods
push
sar
fldcw
xchg
addr16
sbb
stos
(bad)
(bad)
sbb
xor
xchg
in
cmp
es
outs
or
push
sbb
pop
fsub
pusha
jb
fild
imul
cwde
scas
jp
jmp
leave
inc
call
les
pop
xchg
sub
xor
(bad)
mov
dec
sub
sub
imul
js
push
xchg
stos
aaa
es
call
mov
pushf
xchg
sbb
xchg
xchg
mov
inc
jb
inc
push
iret
jae
push
gs
dec
add
repnz
cmp
test
cli
shr
mov
mov
cmp
jp
and
movs
aam
cmp
pop
(bad)
stos
mov
(bad)
dec
dec
mov
cmp
jg
inc
adc
test
fwait
or
shl
cdq
stc
shl
pop
xchg
in
and
ins
mov
pop
pop
in
leave
cmps
sub
mov
mov
xchg
adc
retf
call
xor
push
cwde
pushf
sub
jmp
push
into
loope
cmps
lahf
jge
or
adc
scas
mov
pop
test
xchg
push
into
(bad)
cs
lahf
retf
stos
sbb
jmp
lods
iret
ret
ret
mov
xchg
sti
ror
inc
add
xor
in
lahf
daa
or
xlat
repz
cli
push
or
icebp
adc
push
cmp
aaa
cmps
repnz
dec
in
push
shr
cdq
xchg
out
push
stos
mov
pop
call
add
pushf
bound
inc
aad
lea
inc
es
jecxz
pop
xchg
adc
enter
test
inc
sar
(bad)
repnz
push
in
or
cmp
pushf
cmp
mov
sti
pop
nop
aas
cmp
lods
imul
jo
cmp
xchg
mov
sub
aas
rcl
mov
xchg
ja
cld
xor
inc
dec
retf
lods
icebp
ret
mov
cmp
xchg
(bad)
sub
aas
jl
into
(bad)
cmp
sbb
mov
push
into
dec
aad
jp
add
rol
lock
mov
test
lods
test
popa
in
jne
ret
jle
cli
das
xor
or
or
js
movs
mov
lods
adc
sbb
xchg
nop
out
sub
fsub
imul
mov
jecxz
inc
mov
inc
dec
sub
repz
aad
fs
test
out
ins
push
fst
jns
loop
lock
retf
pop
adc
mov
mov
or
cwde
push
adc
sub
xor
scas
cmps
fimul
push
data16
fs
cwde
add
mov
adc
mov
push
retf
les
das
push
mov
push
in
push
mov
cmp
xchg
and
outs
or
mov
push
(bad)
mov
stc
cmp
push
je
stc
rol
dec
jl
popf
or
gs
mov
and
repnz
ds
lahf
mov
repnz
inc
push
lds
mov
inc
and
sub
ins
lods
sbb
xlat
inc
push
push
enter
aaa
xchg
add
mov
dec
bound
pop
or
cmp
mov
push
dec
dec
out
es
adc
sbb
sti
push
adc
push
xor
stos
pusha
xor
frstor
jle
mov
pop
div
mov
cwde
int3
call
out
push
rol
cdq
inc
cmp
(bad)
cmp
dec
mov
adc
cs
fidivr
and
cmp
cmp
out
movs
mov
inc
lods
fist
jge
mov
cwde
xchg
jnp
cmp
push
jno
or
mov
fs
enter
int
or
pushf
xlat
cmc
out
stc
push
cs
loop
popf
sahf
paddsw
js
(bad)
fld
inc
mov
jno
sub
repz
cmp
sbb
push
ja
inc
mov
fld
in
mov
jmp
push
pop
cmps
mov
loopne
iret
in
into
adc
mov
nop
adc
bound
fild
inc
sbb
add
jecxz
js
retf
mul
sahf
(bad)
fidiv
dec
jbe
fdiv
cwde
aas
iret
(bad)
mov
xor
inc
call
add
shl
inc
mov
dec
push
scas
scas
xchg
fcomp
stos
cmps
das
push
ja
mov
xchg
sbb
out
push
loop
sbb
add
sbb
inc
xchg
outs
xor
mov
jg
shl
int
hlt
cmp
xchg
inc
xor
xor
pop
dec
shr
or
sub
mov
pop
fnstsw
sub
sti
pop
and
add
int
cmp
sbb
mov
repnz
dec
pop
mov
ret
mov
mov
clc
pop
sbb
pop
sub
sub
aad
xor
aad
ror
add
or
add
retf
sub
sub
add
xor
xchg
mov
push
inc
mul
mov
adc
xchg
xor
(bad)
ins
daa
sbb
lea
jns
mov
mov
call
out
jecxz
xor
aas
pop
inc
shr
add
ret
arpl
pop
cmps
mov
jmp
(bad)
xlat
or
fidiv
retf
and
out
cmp
xchg
push
lods
jle
adc
push
jmp
mov
loop
mov
shl
and
ins
in
inc
pop
jne
jne
gs
leave
jmp
loopne
pop
push
hlt
test
std
ret
mov
mov
(bad)
push
mov
xor
mov
(bad)
cli
or
inc
std
aad
js
in
fidiv
jg
cmps
mov
push
xchg
(bad)
retf
mov
adc
xor
jg
shl
int3
dec
mov
mov
cli
jmp
out
int3
test
cs
pop
hlt
xchg
movs
xor
sbb
sub
sub
aad
and
mov
add
sahf
mov
mov
cmp
push
sti
mov
inc
hlt
dec
stos
mov
data16
div
mov
inc
imul
outs
test
push
jmp
xchg
lods
or
js
or
jno
loope
mov
retf
or
push
jne
(bad)
test
fscale
rcl
bound
xor
sbb
jg
xchg
idiv
cmp
test
or
ins
xchg
push
je
(bad)
or
sub
add
js
pop
shr
mov
and
lods
push
jle
sti
push
sbb
mov
adc
aas
fmul
ins
cmc
push
mov
pop
aaa
inc
fcom
(bad)
pop
dec
pop
adc
(bad)
mov
fadd
push
daa
icebp
push
lods
nop
and
push
adc
jo
mov
mov
neg
xchg
test
lods
(bad)
scas
jecxz
push
clc
xlat
xlat
xchg
xor
mov
mov
inc
pop
dec
sbb
cmp
mov
xchg
adc
dec
sbb
imul
and
jne
cmp
dec
sbb
mov
add
add
outs
cwde
push
sbb
inc
in
cmp
sub
outs
sbb
in
mov
fsubr
push
sar
retf
je
jle
mov
or
jmp
add
jle
lahf
add
fisubr
nop
clc
sub
adc
out
push
leave
scas
xchg
aam
pop
dec
mov
imul
push
rcl
lods
xchg
into
cmp
xchg
mov
leave
pop
ret
arpl
fimul
imul
jo
push
cs
imul
cmp
adc
sub
push
mov
dec
mov
add
lahf
fist
mov
bound
jmp
(bad)
cmps
int3
xlat
mov
inc
lea
dec
test
iret
dec
fwait
pop
or
adc
mov
into
sti
jne
jno
pushf
xchg
mov
inc
mov
retf
sub
sub
cmp
fsubrp
and
jg
mov
mov
or
sti
push
in
cmp
ds
cld
push
or
repnz
popa
fwait
and
inc
test
mov
clc
(bad)
enter
cli
dec
clc
xlat
mov
lds
add
fucom
in
and
adc
cs
push
jns
or
imul
jnp
ret
or
cli
adc
lods
mov
jg
jl
cmp
mov
xor
mul
push
mov
xor
ins
push
jmp
fist
pusha
ficomp
test
and
es
arpl
jl
mov
(bad)
repnz
scas
mov
dec
fld
in
inc
mov
out
pop
bound
jl
pop
nop
(bad)
mov
ret
push
pop
dec
dec
or
je
push
test
fisttp
xchg
adc
inc
cs
xor
rol
movs
push
ins
ins
push
imul
ret
ficomp
pop
sub
iret
outs
frstor
inc
das
xor
add
mov
dec
icebp
xchg
add
and
inc
and
aad
jo
sbb
xor
mov
test
add
add
out
pop
adc
pushf
xor
(bad)
or
les
xor
pop
sbb
mov
pop
lods
mov
in
bound
mov
or
ds
mov
rcr
hlt
cmps
xchg
stc
xchg
jecxz
jb
or
(bad)
iret
dec
or
sbb
loope
dec
int3
push
inc
sbb
aas
jno
xchg
popa
je
cmps
repz
stos
pop
cli
mov
add
and
mov
sbb
jecxz
adc
or
mov
push
nop
dec
mov
pusha
push
jmp
pop
and
iret
cmp
fs
data16
jmp
hlt
jbe
leave
or
xor
dec
sub
push
dec
ja
imul
cmp
jne
and
jmp
push
and
inc
xchg
jns
dec
loop
aaa
cdq
jae
(bad)
adc
out
enter
push
arpl
out
jmp
psubsb
cmp
in
and
jmp
push
stos
mov
and
ins
loopne
shl
mov
push
pop
mov
addr16
mov
ins
cmp
clc
jo
dec
shl
fnstcw
sbb
mov
stos
imul
div
mov
icebp
mov
add
aam
imul
(bad)
push
out
fldcw
seto
call
cld
cs
popf
fdivp
xchg
mov
xor
sub
pop
push
pop
cmp
jge
jmp
das
js
cmps
pop
test
push
mov
data16
pushf
xchg
stos
popa
pop
dec
xchg
lds
bound
adc
enter
or
ficomp
rcl
and
xchg
cmp
test
cmps
sub
cmp
adc
inc
stos
das
add
popa
lock
push
push
dec
test
cmp
out
push
dec
js
leave
adc
sti
mov
add
xchg
call
stc
xchg
lds
dec
and
jb
out
(bad)
jmp
pop
sbb
(bad)
dec
sbb
inc
sbb
pop
cwde
arpl
nop
ds
pushf
ja
push
adc
mov
pushf
mov
xchg
aam
scas
mov
push
jo
mov
lods
popf
adc
sbb
movzx
jne
mov
and
mov
ror
mov
sahf
xor
xlat
push
sti
std
add
dec
mov
arpl
loop
push
mov
mov
jmp
arpl
lods
xor
jo
call
test
movs
inc
xor
inc
sbb
mov
cld
int
sbb
pop
add
adc
stos
ja
cmc
arpl
rol
jmp
dec
pop
adc
add
mov
hlt
int3
mov
outs
mov
mov
mov
pop
out
(bad)
sbb
rcl
jmp
fxch
fucomp
mov
jmp
enter
cmps
adc
cmp
adc
and
cmp
mov
pop
xor
adc
pop
push
push
out
mov
add
add
adc
aad
repnz
int3
es
es
jns
fiadd
pushf
dec
pop
loop
sbb
lock
ja
and
xor
fdivrp
test
dec
adc
outs
adc
mov
fwait
jb
dec
dec
ja
push
inc
cdq
mov
mov
cmp
popa
xor
aam
(bad)
cmp
aad
mov
shr
ret
clc
(bad)
cli
(bad)
fisubr
jg
mov
int3
inc
mov
inc
pop
push
pop
mov
or
inc
fs
outs
cmps
enter
es
dec
out
adc
sub
push
mov
push
ins
aaa
jp
or
push
sub
mov
push
sbb
shr
or
sbb
and
out
iret
lods
jl
add
(bad)
mov
icebp
adc
pop
loope
out
repz
std
movs
mov
(bad)
loop
(bad)
popf
inc
and
mov
cwde
out
push
rcl
in
xchg
push
or
and
and
sar
mov
jl
add
sbb
div
mov
lods
je
mov
test
cmp
neg
ja
adc
jnp
sbb
push
stc
cmps
inc
or
repnz
aaa
add
push
cmps
inc
imul
pop
imul
sti
sar
sub
test
jnp
inc
jns
ror
jne
pop
jmp
cmc
adc
dec
xor
or
mov
in
cmc
jmp
iret
adc
jno
shr
mov
sti
cmp
sub
pop
jp
fidiv
mov
xor
pop
and
mov
shr
repnz
shl
inc
xor
fstp
add
xchg
sbb
hlt
jnp
xchg
mov
jle
mov
outs
ss
mov
lods
call
add
mov
xor
jns
xor
and
shr
xor
or
jmp
ins
repz
add
cmps
(bad)
sbb
and
sub
jno
or
or
fild
daa
rol
pushf
pop
push
and
adc
cs
ficom
and
jbe
or
xor
pop
loope
push
adc
shl
jbe
mov
cmps
mov
xchg
jle
or
ins
push
push
das
mul
and
cdq
and
rol
aas
stos
and
nop
(bad)
pop
fist
mov
jmp
dec
sbb
inc
fistp
icebp
out
popf
mov
add
test
add
xchg
sub
mov
jmp
bound
in
pop
jmp
add
loope
xchg
pushf
push
bound
movs
pop
jns
int
mov
push
ror
jns
mov
cs
pop
fild
jmp
adc
add
clc
mov
dec
push
mov
adc
pop
ss
cli
push
inc
push
push
seto
pop
shl
sub
movs
xchg
not
xlat
iret
fs
pop
fimul
sahf
mov
mov
cmc
lds
out
or
or
mov
pop
cmps
retf
add
mov
jg
add
or
arpl
or
xor
scas
mov
lock
mov
cli
xor
sti
mov
fcmovnu
inc
rcl
adc
mov
retf
jl
add
jbe
dec
mov
sbb
icebp
sahf
jo
cwde
add
ficom
adc
xchg
aas
mov
add
dec
pop
sbb
(bad)
push
rcl
iret
test
test
pop
and
retf
adc
imul
mov
(bad)
push
rol
xchg
pop
stos
or
xacquire
mov
mov
mov
cmp
sub
je
aam
mov
int3
sub
xor
stos
stos
outs
xchg
push
inc
jns
es
pop
cmp
adc
and
std
inc
(bad)
leave
fistp
shl
add
xor
(bad)
and
and
adc
mov
cmp
push
push
ret
int
clc
inc
lods
jno
call
push
dec
int
nop
es
dec
out
sbb
inc
cld
jns
cmp
jge
jmp
iret
add
dec
xor
push
adc
xchg
jmp
dec
(bad)
push
sub
and
popf
push
and
ss
pop
jp
pop
movs
retf
dec
jbe
mov
popa
jns
jmp
push
fwait
dec
(bad)
aaa
and
push
arpl
mov
add
shl
sub
aad
mov
push
push
inc
xor
or
jbe
cmps
pusha
or
xor
inc
sub
ret
fcmovb
mov
push
hlt
mov
sti
aad
push
out
dec
add
inc
(bad)
dec
add
cmc
mov
inc
enter
cmc
xchg
sub
adc
test
push
jg
mov
jo
xor
sbb
das
inc
push
pop
dec
mov
js
add
repz
enter
inc
je
xor
or
push
in
push
add
jb
outs
inc
nop
jns
xor
inc
cmps
ror
sbb
out
mov
mov
loop
mov
jnp
adc
mov
pop
int3
push
ins
nop
mov
cdq
std
mov
ins
mov
cmp
into
sub
btc
loopne
leave
mov
xor
dec
pop
add
push
adc
xchg
or
push
inc
ficom
and
xlat
pop
ins
popa
(bad)
leave
or
scas
lea
cmp
jmp
in
xor
(bad)
out
repz
loopne
movs
fwait
in
sub
outs
or
add
sub
sbb
push
cmp
push
push
or
mov
sbb
das
pop
or
loopne
cmps
inc
inc
(bad)
call
push
push
xor
inc
cmp
mov
stos
jg
and
mov
jbe
shl
fwait
lock
imul
shr
loopne
jg
inc
and
enter
sub
out
hlt
mov
and
fcomp
xchg
data16
clc
jmp
mov
outs
xor
inc
sbb
mov
lea
xor
xlat
arpl
movs
dec
mov
scas
push
ja
stos
cwde
cs
(bad)
push
and
jmp
pcmpeqb
test
into
or
fdiv
sub
aad
int3
into
or
sar
inc
jns
test
jbe
push
add
cmps
xor
ret
jns
push
add
stos
xchg
repnz
je
lods
lds
push
dec
in
jb
adc
adc
lahf
xor
sub
call
mov
or
xor
stos
jmp
add
jg
les
pop
lods
lods
js
xor
mov
jmp
push
xlat
movs
ins
pop
or
ins
aad
inc
or
int3
mov
mov
sub
mov
ss
push
add
adc
lods
scas
retf
clc
cmp
pushf
scas
cmps
xchg
mov
retf
xchg
pop
mov
pop
(bad)
lea
ins
mov
dec
ret
adc
mov
into
cs
push
mov
dec
cmp
inc
icebp
xor
cmps
lea
mov
lock
cmps
and
fmul
adc
jmp
cmp
mov
inc
sub
cmp
cmp
and
cmc
(bad)
or
cmp
lock
mov
idiv
dec
jecxz
mov
jecxz
pop
and
arpl
loop
shl
call
out
sub
in
not
imul
hlt
iret
push
inc
xchg
in
xchg
adc
aam
dec
pop
mov
pop
vmovss
movs
mov
fisub
cmp
pop
and
jae
cld
sar
mov
iret
dec
(bad)
iret
ret
loope
ins
mov
jmp
mov
lahf
les
in
sbb
lea
inc
ja
jmp
js
pop
leave
sub
push
jp
jle
xlat
js
mov
adc
cmp
jno
pop
aaa
stos
push
mov
xor
sbb
call
adc
or
push
gs
div
js
dec
ds
cmp
push
sub
sub
mov
jne
(bad)
movs
fmul
stc
xor
leave
mov
pop
mov
ds
loopne
data16
pop
add
ins
and
inc
js
mov
ficomp
mov
or
sbb
inc
out
cmps
lahf
pusha
add
cmp
imul
mov
adc
loope
and
cmps
xor
sahf
nop
mov
mov
sub
xor
nop
or
jmp
fcomp
push
aam
add
pusha
cmc
into
jno
ds
push
pop
jmp
ret
stos
mov
sbb
cmp
xchg
dec
add
rcr
inc
arpl
dec
cmp
sbb
ret
mov
ror
mov
popf
out
pop
shl
repnz
lods
ds
or
shl
ficom
les
adc
xchg
int
out
ds
sbb
mov
jo
cs
and
add
neg
fst
call
sbb
aas
inc
daa
mov
loopne
pop
sahf
jg
lahf
js
xchg
pop
es
in
push
fs
loop
fidiv
inc
adc
test
aam
mov
fst
pop
push
jle
mov
push
pop
out
fbld
retf
fbld
mov
adc
dec
iret
pop
movs
jecxz
out
sub
dec
dec
fistp
dec
das
mov
ds
add
aad
or
in
bound
js
adc
adc
(bad)
xchg
repz
cmps
out
jae
mov
jns
fcom
jmp
jo
enter
sbb
test
adc
lahf
add
pop
clc
lock
inc
fmul
test
rcr
mov
repnz
stos
fisttp
xchg
sbb
not
push
sub
jmp
xor
inc
sahf
xor
jmp
lods
stos
cli
cwde
pop
loop
add
mov
iret
mov
and
xor
pop
lods
mov
push
jge
jno
jno
(bad)
bound
or
mov
(bad)
and
xor
pop
std
push
inc
add
mov
int
dec
or
xchg
adc
mov
idiv
outs
rcr
shr
sbb
push
stos
mov
test
mov
mov
pop
cs
jle
movs
fs
mov
adc
mov
mov
adc
dec
pop
test
mov
sti
test
loopne
jb
test
cwde
jmp
jecxz
adc
(bad)
push
and
cmps
jnp
mov
push
jge
enter
es
les
mov
pop
jno
mov
ror
push
xchg
xchg
lds
mov
bound
cwde
cs
mov
sub
(bad)
push
int
inc
inc
mov
test
inc
sub
dec
icebp
or
or
and
icebp
or
xchg
nop
and
jbe
cmp
mov
mov
pop
fdivr
sahf
cmps
enter
loop
dec
inc
xchg
clc
pop
mov
jmp
ja
push
imul
call
vpunpcklwd
pusha
sar
ss
mov
adc
push
aam
xchg
mov
inc
pop
pop
push
fldenv
jp
in
xor
test
and
inc
add
outs
ss
pop
sub
push
out
pop
sub
jnp
sbb
ret
(bad)
pushf
cld
lahf
jo
jl
int
and
les
mov
sub
jp
sbb
cwde
gs
fdiv
or
fmul
mov
xor
scas
(bad)
fucomp
add
or
cwde
jecxz
test
jnp
call
jne
loopne
fisubr
cmp
xor
aam
jnp
scas
daa
jmp
mov
lds
mov
and
push
xchg
pop
add
in
arpl
sbb
push
cmps
push
adc
call
jns
push
es
scas
push
jne
sub
push
fild
xchg
mov
push
push
stc
or
jnp
retf
sbb
gs
and
mov
cmp
dec
ds
shl
or
mov
leave
sub
ds
loopne
inc
(bad)
repnz
jno
cli
mov
das
pop
cmp
xor
loopne
inc
mov
call
mov
add
jg
cmp
fild
rol
adc
jno
inc
rol
sub
movs
lock
rcr
jns
sbb
add
test
movs
xchg
imul
push
inc
mov
add
int
lds
pop
xor
inc
mov
aas
adc
lods
push
(bad)
ja
mov
xchg
mov
cmp
dec
add
sub
pop
call
mov
ds
and
daa
jae
adc
daa
cmp
push
dec
and
mov
jl
jno
shl
push
(bad)
dec
inc
sbb
in
test
loope
jl
mov
repnz
xor
imul
or
inc
call
(bad)
movs
leave
stc
or
dec
popa
ficom
mov
xchg
pop
mov
call
push
call
mov
adc
pmuludq
jo
jnp
or
lea
sub
fs
sar
mov
in
jne
cmp
je
rol
addr16
cmps
in
dec
push
mov
rcl
mov
(bad)
not
lea
adc
retf
mov
pop
push
jne
add
sbb
adc
ror
jecxz
shr
cmp
sti
cmp
sbb
cdq
aad
push
les
pop
xor
adc
xchg
(bad)
jns
stc
retf
out
cmp
mov
mov
pop
fs
pop
mov
fwait
mov
hlt
push
stos
rcr
outs
je
pop
pop
jno
fisubr
ss
es
inc
aaa
push
push
sti
(bad)
sar
pop
sub
push
int
inc
cmp
stos
mov
xchg
imul
or
xchg
lea
ds
sub
mov
stos
sbb
sbb
sub
xchg
inc
in
pop
leave
jge
hlt
xchg
fdiv
ficomp
mov
pop
dec
pop
adc
xor
push
jns
mov
jg
(bad)
loopne
add
jle
test
test
(bad)
test
pop
sbb
imul
push
sub
mul
lds
xor
jge
pop
pop
inc
cmp
(bad)
cmps
jo
xchg
aam
fsub
mov
lahf
jle
cmp
sub
jmp
jmp
sub
push
xor
add
push
(bad)
dec
ds
inc
dec
push
dec
inc
mov
int3
std
test
in
inc
sbb
stos
sbb
and
dec
add
stos
xchg
xor
sbb
(bad)
gs
rcl
dec
jmp
int
lock
adc
cmp
xchg
sbb
lock
jp
popf
sbb
clc
bswap
daa
pop
sbb
sahf
and
push
mov
pop
add
lods
pop
iret
sbb
lods
adc
mov
xchg
push
repnz
in
adc
mov
adc
xchg
mov
push
dec
es
xchg
icebp
pop
pop
bound
data16
fsubr
dec
in
push
cmps
daa
mov
movs
dec
das
push
cli
jecxz
pop
pop
add
adc
mov
cs
ja
sbb
pop
pop
add
inc
ficom
inc
fldenv
fnstcw
cdq
mov
mov
in
mov
mov
add
das
jmp
test
push
sub
or
add
cmp
ds
rol
jb
lea
shl
icebp
adc
xchg
push
pop
mov
mov
shr
repnz
lods
sbb
mov
sub
int
getsec
sub
test
jns
jle
retf
cmp
cmps
(bad)
test
mov
and
push
adc
int3
or
cld
dec
inc
mov
ins
je
xchg
je
scas
mov
cmc
pop
and
ret
daa
fist
call
mov
in
ins
(bad)
cmp
aas
mov
rcl
or
dec
push
xlat
inc
xor
xchg
mov
cmps
push
fnstsw
xchg
jnp
sub
mov
fnstcw
dec
aaa
xor
jge
and
adc
fistp
cli
repnz
call
in
dec
pop
repnz
mov
jnp
or
and
pop
sub
dec
je
cmp
push
fwait
push
xchg
in
lock
push
(bad)
es
xchg
adc
repnz
hlt
or
icebp
dec
add
imul
popa
lahf
inc
pop
or
je
jp
cdq
xchg
sbb
out
pop
mov
ret
pushf
je
rcr
inc
jbe
add
in
retf
sub
das
push
dec
pop
sbb
aam
sbb
add
(bad)
nop
sti
daa
(bad)
out
mov
(bad)
cld
call
test
dec
sbb
dec
hlt
dec
mov
fimul
ret
jno
js
pop
mov
test
out
leave
xchg
movzx
idiv
fstp
aaa
push
rcr
sbb
sub
jo
or
mov
jb
pop
pop
lock
dec
mov
add
sbb
push
xchg
cmp
dec
into
sbb
adc
(bad)
(bad)
and
je
dec
cmp
outs
test
ja
lds
stos
pushf
pushf
aam
xchg
push
push
fsubrp
inc
enter
mov
cwde
jecxz
xor
mov
das
ret
mov
hlt
sbb
jns
aaa
mov
and
fwait
lds
push
mov
push
das
retf
int3
div
sbb
rcr
js
xchg
rcl
jmp
cwde
arpl
cmp
int
nop
mov
(bad)
and
jmp
clc
push
xchg
or
cmp
rcl
(bad)
retf
ss
jmp
push
inc
mov
and
inc
jmp
and
dec
leave
outs
cmp
or
pop
pop
sar
sbb
push
stos
int3
sahf
mov
push
or
stc
aad
dec
fmul
je
xlat
out
stc
movs
xor
xor
repnz
add
cmc
and
ret
cmovno
gs
or
mov
in
and
scas
iret
icebp
scas
(bad)
sti
fld
sub
std
xor
sub
jb
dec
shl
jge
xchg
in
out
enter
frstor
fnstsw
fild
pop
mov
(bad)
fstp
popf
fistp
or
popa
sbb
sbb
inc
retf
js
pusha
int3
mov
push
imul
mov
and
fadd
test
ret
outs
aas
shr
mov
in
xor
cmp
repz
(bad)
scas
mov
pop
(bad)
jp
cli
stos
out
retf
sub
sub
inc
mov
sub
in
jle
loopne
imul
lds
jne
ss
jns
cli
fidivr
jb
or
or
add
gs
and
lods
ins
pop
push
loop
add
aad
cmc
pop
fist
les
cdq
mov
lods
fs
fcomp
pop
add
cmc
mov
test
adc
in
out
xor
aas
ds
mov
pop
dec
mov
xchg
fild
pop
xor
sub
aas
add
mov
and
adc
sub
int
popa
in
push
jmp
imul
push
jbe
cmp
imul
xor
clc
test
push
add
cld
test
pop
daa
jecxz
sti
mov
ins
pushf
clc
ss
push
retf
pop
ss
mov
xor
sub
push
lahf
call
aam
pop
pop
ja
je
push
mov
pusha
test
repnz
setbe
addr16
movs
mov
and
dec
ds
sbb
pop
iret
xchg
xor
pushf
add
out
adc
push
(bad)
scas
ja
inc
mov
cmp
mov
loope
inc
inc
stc
sub
loope
dec
out
addr16
ds
imul
stos
retf
fwait
dec
fs
in
mov
mov
add
lahf
paddq
out
or
shl
fs
mov
mov
les
test
add
cli
sbb
adc
inc
ins
popaw
sub
ret
cmp
push
pop
mov
mov
std
ja
test
push
xor
inc
fiadd
lock
into
and
frstor
sbb
fdiv
adc
jbe
mov
and
nop
sbb
dec
pop
shr
add
dec
add
inc
add
out
xchg
xor
test
(bad)
int
test
enter
outs
in
pop
mov
pushf
out
jbe
add
cmp
mov
enter
jne
les
ror
(bad)
hlt
loopne
sti
xchg
loope
js
popa
sbb
jo
cmp
retf
das
dec
inc
loop
repnz
mov
xchg
or
mov
in
test
rol
add
push
pushf
cmps
pop
cld
call
je
icebp
mov
mov
mov
xchg
fisttp
push
mov
movs
mov
cmps
arpl
inc
pop
xor
stos
mov
or
test
bound
lahf
sbb
sbb
in
loopne
popf
cmc
lea
xchg
cmp
xor
fs
retf
xlat
jl
dec
sbb
and
movs
jb
jmp
pusha
inc
push
fdiv
std
aaa
sub
pop
imul
data16
add
xchg
enter
sahf
and
push
and
add
push
ja
and
mov
push
movs
jmp
neg
add
mov
adc
dec
mov
mov
test
pop
ds
leave
mov
repnz
enter
fistp
push
aam
or
pop
and
inc
outs
sbb
cmc
mov
pop
mov
in
fwait
push
ja
retf
push
mov
mov
or
sbb
dec
inc
pop
jge
lea
pop
(bad)
retf
std
push
cmp
cmp
out
leave
gs
fistp
cmps
and
stos
mov
inc
outs
je
mov
(bad)
inc
in
lods
and
sub
jae
mov
adc
add
data16
pop
jbe
sbb
xchg
aas
ds
adc
adc
call
mov
cmp
jne
and
mov
jnp
push
shl
repnz
movs
and
fnstsw
jmp
xor
pop
movs
jne
popf
pop
nop
fist
mov
(bad)
int3
jle
xchg
retf
fst
and
push
sub
fsubr
ja
retf
mov
jnp
mov
popf
xchg
jnp
xor
clc
jle
dec
call
mov
inc
dec
int
clc
pop
pop
imul
cmp
push
mov
out
xchg
adc
jnp
add
(bad)
adc
movs
add
push
fwait
hlt
mov
popa
inc
fidivr
or
and
lock
inc
mov
jbe
push
dec
add
jp
jg
pop
aaa
inc
cmps
das
cmp
jo
out
inc
xchg
push
clc
test
cmp
xor
mov
fimul
aas
sbb
dec
or
mov
xchg
dec
fldcw
sbb
pop
mov
dec
repz
mov
fstp
pushf
sub
nop
call
fstp
jae
or
mov
rcl
push
or
add
dec
rol
and
push
inc
mov
xchg
cli
test
(bad)
jb
shr
adc
lahf
fs
add
adc
dec
cmp
test
out
mov
pop
aaa
imul
mov
xor
in
mov
jg
jbe
popf
fs
in
adc
add
sbb
(bad)
(bad)
cmp
dec
mov
aaa
mov
pop
popa
inc
inc
pop
rcr
cld
fisubr
or
jp
mov
jmp
test
vpsraw
mov
add
add
push
cmp
mov
leave
imul
mov
jmp
mov
sti
gs
or
sub
in
sub
or
fcmovu
adc
(bad)
dec
pop
add
xor
retf
(bad)
stos
mov
loopne
or
jl
mov
mov
and
jge
sub
cmp
hlt
mov
retf
lahf
mov
xchg
mov
nop
sbb
adc
jmp
ficom
pop
inc
adc
dec
inc
iret
jecxz
dec
mov
adc
jle
arpl
dec
mov
int
jmp
imul
cmp
loopne
or
stos
test
push
or
mov
xor
mov
push
jge
mov
out
ffreep
dec
or
cs
out
mov
mov
add
ret
movs
sub
xor
adc
dec
jg
inc
imul
cdq
int
push
xor
pop
cwde
(bad)
hlt
push
or
sbb
cld
adc
inc
mov
push
(bad)
mov
sbb
bound
cmp
or
xchg
fsubp
inc
jp
push
mov
xlat
jg
repz
not
adc
cmp
dec
retf
and
out
jl
sub
pop
ss
int
fs
stc
hlt
xchg
pop
stc
inc
in
(bad)
and
xchg
repnz
sub
inc
sbb
jns
fimul
or
dec
out
retf
or
cli
es
cli
pcmpgtd
mov
enter
or
ret
or
jb
adc
xlat
daa
aad
sbb
mov
je
pop
es
pop
jp
cs
inc
jle
push
aam
repnz
in
loop
pop
inc
jle
xor
push
mov
jno
jno
and
rol
or
nop
repz
mov
les
push
mov
scas
pushf
outs
dec
hlt
jae
sbb
dec
pop
cmp
mov
sub
fiadd
icebp
sahf
ss
stos
push
xchg
jg
cli
lahf
(bad)
mov
add
and
cmps
dec
mov
inc
xchg
shl
cmp
inc
xor
mov
movs
or
ja
add
js
sbb
sbb
scas
pop
fisttp
in
scas
mov
ret
scas
add
in
add
dec
add
scas
push
cmps
clc
test
jp
add
pop
xchg
test
fsubrp
cmp
mov
add
xor
fwait
cmp
inc
adc
mov
inc
inc
std
or
sti
in
pop
test
and
sub
ins
sub
mov
xchg
xchg
mov
jp
imul
xchg
inc
xor
dec
mov
mov
rcr
mov
pop
shl
lahf
push
ds
loope
adc
pushf
push
jbe
cld
stos
cwde
mov
dec
and
pusha
push
dec
xchg
out
fs
or
out
sub
daa
xor
xchg
repz
dec
test
fnstsw
push
mov
dec
xchg
and
(bad)
mov
jno
and
call
push
fldcw
jnp
inc
dec
push
xchg
jmp
cmps
loop
pop
sub
mov
sub
mov
inc
cmp
pop
test
push
test
jmp
lds
(bad)
mov
ds
dec
inc
push
scas
push
sbb
add
pushf
sti
or
mov
cmp
or
dec
xor
adc
addr16
dec
xor
dec
mov
pop
cmp
adc
popf
repz
sbb
(bad)
adc
push
nop
(bad)
mov
mov
hlt
dec
repnz
into
cmc
sub
jmp
push
sub
jmp
cmps
pop
mov
in
fs
cld
aas
jg
push
scas
test
inc
adc
stos
nop
cmp
test
sbb
xchg
sub
stc
fadd
add
test
xchg
mov
inc
cmp
push
dec
retf
jg
shl
hlt
push
inc
mov
lahf
sbb
std
xchg
stc
xlat
nop
or
mov
sub
pop
rol
retf
not
out
enter
mov
push
inc
sar
xor
into
push
cmp
sub
hlt
push
mov
and
jne
or
xstore-rng
cmps
add
fwait
into
in
add
cmp
cmp
jae
cmp
or
rcr
rol
(bad)
inc
cmc
jno
push
popa
aad
dec
xchg
and
rol
or
ja
push
outs
push
test
mov
stc
push
ds
cmp
ins
ds
in
cmovle
pop
aam
les
or
int3
ins
mov
lock
rcr
repnz
and
not
jns
mov
mov
and
gs
ret
les
cmp
fdiv
fmul
jbe
sahf
dec
mov
and
loop
inc
outs
push
dec
dec
fdivrp
mov
pop
sbb
ror
dec
add
adc
aas
int
nop
dec
jne
mov
or
sbb
retf
es
push
pop
stos
push
jno
mov
movs
shr
adc
push
xchg
cmp
in
mov
lods
xor
loope
nop
push
push
sbb
mov
mov
cmp
add
int
into
ja
sysret
jmp
mov
fisttp
fistp
hlt
retf
add
xchg
push
bound
scas
jmp
adc
mov
popa
jge
sbb
cmp
push
jecxz
je
sar
stc
pop
sub
movs
test
pop
movs
lea
dec
jb
test
ds
add
test
adc
das
or
mov
imul
lock
fwait
mov
loope
cli
or
jbe
daa
aad
add
mov
sbb
mov
aad
cwde
xor
dec
retf
cmp
sub
cmps
mov
mov
or
lahf
sahf
icebp
xor
call
and
stos
stos
mov
pop
push
rcr
and
(bad)
jg
fwait
rol
fstp
call
lock
pusha
out
xchg
mov
or
or
out
shl
ja
cmps
xchg
out
add
jb
cmp
or
sahf
test
mov
nop
fidivr
outs
(bad)
call
loopne
add
pop
sbb
stos
loop
cld
jno
cmp
lock
ficom
ins
pop
mov
call
mov
jg
(bad)
pop
adc
(bad)
push
pop
xchg
add
call
icebp
sbb
fidivr
xor
xor
inc
mov
adc
retf
jns
add
std
test
(bad)
mov
repnz
jle
mov
addr16
mov
scas
fcom
and
adc
dec
sbb
sbb
xor
retf
out
retf
lods
inc
ret
and
dec
(bad)
inc
mov
cmp
pop
ja
jge
and
add
test
gs
pop
jno
mov
inc
ins
inc
sub
pop
inc
jecxz
stos
push
pop
inc
loopne
push
inc
cmp
jl
xchg
or
sahf
out
ret
sbb
xchg
inc
test
(bad)
out
test
fmul
adc
pop
add
aad
mov
pop
adc
adc
mov
sub
mov
dec
add
ror
jbe
mov
in
ret
mov
xor
mov
mov
adc
xor
in
dec
rol
and
or
xor
adc
sti
inc
cdq
jbe
inc
xchg
mov
test
and
sahf
ret
jns
add
test
out
pop
cmp
rol
sbb
out
push
in
mov
mov
iret
dec
dec
retf
ret
add
jne
jecxz
aaa
jb
push
jmp
sub
add
add
(bad)
lods
out
mov
aas
jge
xchg
je
mov
fs
fstp
les
jb
ficom
call
push
lods
dec
jle
int3
cmp
or
stos
sahf
test
in
jo
jns
cwde
pop
retf
out
pop
dec
mov
sbb
gs
pop
jmp
or
dec
xchg
ja
call
sub
mov
mov
bnd
pop
mov
mov
and
mov
mov
dec
jp
movs
addr16
mov
inc
jl
sbb
jb
hlt
or
push
dec
ins
add
fs
cmps
jb
stos
hlt
cdq
into
(bad)
jnp
pop
add
test
push
cmp
sub
inc
jp
daa
sub
cmp
add
in
adc
xor
pop
pop
ror
test
(bad)
in
aaa
jecxz
shl
dec
and
test
cwde
rol
inc
fs
in
gs
iret
mov
inc
cmp
add
and
inc
mov
adc
sbb
shr
dec
push
xor
out
push
daa
jle
push
add
je
arpl
test
dec
or
mov
cs
(bad)
pop
ins
cmc
push
scas
push
sbb
ins
mov
xor
into
sti
push
sbb
popf
xchg
mov
lahf
mov
lock
pop
push
lock
cmps
imul
pop
ins
in
add
sbb
fdivr
jmp
mov
inc
jae
shl
push
pop
sub
xchg
retf
in
popa
pop
retf
je
xlat
mov
aam
sbb
fimul
pop
in
mov
push
test
rcr
or
cmp
repnz
mov
xor
add
xor
pusha
xchg
cmp
sti
scas
aam
push
inc
and
jb
icebp
jne
mov
xchg
jno
(bad)
jne
push
xchg
iret
mov
scas
shl
stos
lock
or
xchg
ret
dec
sub
ins
jb
push
repnz
shl
icebp
inc
pop
or
pushf
adc
in
cmc
add
mov
and
aad
pop
test
mov
xor
cmps
addr16
inc
int3
inc
push
lea
xchg
cwde
test
mov
jnp
scas
push
jo
pop
ffreep
into
outs
jmp
ja
xchg
jecxz
mov
cmp
test
stos
mov
xchg
leave
and
push
out
add
cmp
cmps
and
setbe
inc
mov
inc
jmp
(bad)
xor
sub
call
jae
shl
xor
into
aam
out
lock
out
ds
adc
sahf
ror
xchg
pusha
jne
js
scas
jge
jg
and
out
sub
pop
and
jns
and
cmp
pop
cwde
cmps
repz
and
dec
adc
cmp
jle
cmp
and
std
cdq
dec
jnp
imul
sbb
fild
inc
xchg
xchg
ss
mov
adc
cdq
fcomp
mov
cmp
xor
fwait
mov
mov
mov
jecxz
xchg
sahf
gs
mov
cmp
ins
push
push
push
add
xchg
cmp
add
in
sbb
push
sub
scas
(bad)
push
cmp
mov
shl
test
push
sub
in
adc
or
rcpps
mov
push
or
dec
xor
mov
test
pop
add
sbb
ret
mov
xchg
fs
jbe
pop
xchg
pop
fisub
les
jmp
aas
aas
in
add
call
aas
scas
adc
jns
mov
sbb
and
rol
xchg
cli
mov
mov
cmp
cmp
cdq
inc
and
or
stc
popa
out
pop
push
jle
test
jbe
into
xor
outs
aam
mov
mov
dec
jle
mov
add
ss
ret
cld
out
cmps
popaw
adc
xor
loopne
cmps
stos
adc
and
dec
cld
adc
adc
dec
into
jge
jns
cmc
bound
enter
jo
xor
popa
imul
call
in
mov
push
mov
sahf
repnz
adc
fdiv
mov
inc
leave
mov
mov
add
or
add
rol
pop
jle
sub
cs
push
sub
mov
push
stc
outs
pop
in
mov
mov
sbb
xchg
bound
mov
test
shr
shl
or
out
scas
push
fwait
sbb
aas
ins
xchg
les
or
sti
inc
jo
lods
push
mov
inc
add
xor
inc
push
lea
arpl
ins
mov
gs
and
xchg
jp
fistp
pusha
adc
retf
jmp
es
repnz
je
add
cmp
or
(bad)
push
cmp
shl
cmp
sar
pop
xchg
or
xor
pop
push
(bad)
push
ins
ds
sub
ins
mov
fcom
xchg
sbb
xchg
mov
mov
xor
pop
enter
in
in
add
push
(bad)
fistp
clc
sub
fsub
or
sbb
pop
and
ss
adc
jnp
int
xchg
mov
bnd
dec
or
xor
jmp
(bad)
xchg
and
sahf
fwait
xchg
popf
popf
mov
mov
outs
inc
rcl
jb
adc
retf
ds
fdivp
stos
sub
(bad)
ret
mov
and
push
icebp
mov
add
adc
and
scas
mov
cwde
dec
les
push
aaa
sub
push
xchg
in
push
retf
(bad)
mov
xchg
iret
inc
and
outs
lahf
sbb
rcr
addr16
aaa
push
outs
dec
jb
jns
test
jae
leave
sub
push
sti
fsubp
cmp
(bad)
iret
pop
iret
in
js
(bad)
scas
in
bound
sar
das
xchg
js
cs
dec
jmp
adc
fld
das
gs
shr
gs
dec
mov
and
adc
dec
cmp
or
pop
or
loopne
arpl
into
lds
(bad)
cs
mov
cmc
cdq
mov
dec
mov
sbb
adc
sar
repnz
pushf
js
sbb
and
pop
test
(bad)
push
push
out
out
or
test
add
cwde
sub
jb
xor
(bad)
jge
mov
data16
and
scas
fwait
xchg
lea
aam
xor
pop
sub
mov
mov
cdq
out
jns
in
movs
add
leave
pop
jno
in
shr
push
out
push
mov
aad
ret
push
cdq
and
scas
xchg
sbb
pop
fucomi
fs
or
(bad)
jmp
addr16
cmp
xchg
jmp
ficom
cmp
sub
in
xlat
aas
pop
imul
cdq
scas
push
ins
div
ins
hlt
pop
dec
cmp
ins
push
adc
out
pushf
loop
or
dec
nop
push
and
sahf
fsub
push
mov
ret
dec
fild
jns
sub
xor
jb
int
aam
jmp
pop
sub
lahf
shl
sbb
mov
pop
pop
rcl
sub
sub
aad
fcomp
adc
inc
fstp
mov
push
mov
or
cmp
mov
xchg
mov
inc
mov
(bad)
xor
and
push
mov
imul
jbe
fdiv
mov
mov
shl
cmp
push
fidiv
sub
or
mov
test
add
pushf
mov
mov
xchg
mov
shr
xor
cmps
xchg
add
in
mov
(bad)
arpl
popf
adc
and
pop
xor
bound
pop
add
inc
inc
mov
pop
into
push
fdiv
mov
movs
mov
mov
inc
inc
call
cmp
cmp
and
dec
lods
cli
jp
test
stc
adc
call
es
call
jmp
add
test
(bad)
cmp
mov
xor
jmp
xor
add
and
xor
test
cmp
mov
out
pop
(bad)
pop
repz
mov
sub
add
xchg
lods
push
push
std
sbb
add
fs
inc
movs
xor
and
(bad)
addr16
fimul
bound
pop
mov
add
sbb
fiadd
and
inc
mov
cmps
cmp
push
cs
into
pmaddwd
inc
ins
adc
jno
inc
xchg
cdq
cmp
out
xor
mov
fdiv
dec
push
mov
es
inc
(bad)
imul
sub
call
mov
ret
retf
test
sub
inc
stc
xchg
ins
mov
retf
push
sub
sub
ret
call
lock
cmp
sub
ins
xchg
xor
pandn
cmp
sub
sub
hlt
daa
inc
loope
mov
xor
dec
xchg
mov
xchg
cwde
stos
pushf
jnp
test
sub
jecxz
sahf
xor
dec
jge
or
xor
push
pop
cmp
frstor
das
dec
cs
mov
jmp
and
sbb
rol
sbb
sub
xchg
mov
jnp
cli
pop
retf
sbb
jae
(bad)
aaa
or
outs
pop
mov
mov
jmp
xchg
(bad)
and
aas
xor
jge
pop
leave
sbb
js
dec
enter
mov
nop
jp
cdq
imul
mov
jb
pop
fild
mov
xor
adc
xchg
popf
mov
dec
scas
inc
das
dec
mov
jae
jnp
pop
add
inc
bound
retf
add
cmp
retf
inc
leave
jmp
das
daa
xor
push
mov
dec
iret
dec
pop
dec
aaa
aam
fs
dec
inc
(bad)
mov
and
xchg
jg
test
movs
pop
cmps
(bad)
mov
and
mov
xor
into
das
loop
adc
cmp
clts
inc
pop
hlt
dec
shr
mul
jl
jns
xchg
and
clc
xlat
mov
ret
sbb
pop
mov
js
and
xchg
add
nop
icebp
push
add
test
cld
movs
sub
call
sahf
mov
mov
dec
out
sub
adc
cld
and
inc
fsub
dec
retf
adc
ja
mov
ja
popa
push
bound
test
adc
adc
loop
or
or
jmp
stos
movs
cs
jmp
cmps
sub
shl
jbe
jno
xor
adc
xchg
xchg
lods
or
call
mov
shr
inc
pushf
push
sbb
adc
cmp
adc
dec
inc
fdivr
cmp
or
in
pusha
popf
jb
lds
loope
add
push
leave
adc
cmc
dec
mov
outs
lods
(bad)
repnz
pop
add
dec
mov
pop
cmp
out
push
loope
mov
add
repnz
cmps
jae
push
bound
lock
mov
mov
or
cld
sbb
lods
sbb
dec
fnstsw
cmp
or
jmp
xchg
lods
xchg
jle
lahf
sub
cmp
jle
popa
pop
repnz
pop
pop
out
jb
xor
das
inc
push
jno
leave
cmp
xor
es
loopne
shr
es
mov
rcr
ss
es
pop
ds
je
scas
(bad)
add
xchg
(bad)
sub
mov
xchg
adc
gs
jmp
retf
xchg
mov
mul
cmc
push
push
or
and
fist
cld
mov
out
inc
sbb
cwde
sub
inc
adc
pop
xchg
cld
xchg
jbe
mov
mov
push
imul
test
push
jge
xchg
or
in
dec
mov
and
in
(bad)
div
mov
dec
cdq
mov
ret
and
push
sbb
enter
test
jae
pop
or
jmp
cmp
aam
pop
inc
pushf
mov
div
retf
adc
(bad)
clc
lahf
pop
mov
cmc
inc
ret
cmc
and
cwde
test
rol
jns
mov
(bad)
std
scas
push
dec
test
mov
rcr
(bad)
pop
pop
sub
test
test
aaa
xchg
jnp
or
aas
and
sbb
mov
or
in
cmp
dec
add
cs
jmp
aaa
push
sub
imul
ds
jecxz
dec
mov
cmps
push
mov
mov
add
lock
or
retf
ficom
sbb
ror
fmul
rcl
addr16
dec
cmp
bswap
cmp
pop
mov
jae
(bad)
dec
jle
(bad)
jl
and
push
and
fdiv
mov
mov
cli
(bad)
mov
jmp
test
push
sub
imul
cdq
adc
mov
into
inc
inc
dec
loop
loop
cmp
leave
sar
xchg
popa
outs
adc
add
dec
mov
cmp
mov
test
lock
mov
mov
das
push
jnp
repnz
iret
cmps
(bad)
shl
out
cwde
fidivr
add
jg
push
pop
out
inc
in
xchg
pop
and
scas
mov
retf
adc
jmp
in
adc
mov
dec
dec
xor
fist
or
mov
pop
mov
mov
imul
xor
ret
loop
in
and
push
inc
sbb
jge
ret
out
inc
add
aas
jae
and
neg
xchg
mov
call
ja
mov
es
xchg
cmp
mov
adc
lods
mov
mov
pop
test
in
pop
(bad)
out
xchg
xchg
adc
mov
pop
stc
lock
ret
outs
xlat
daa
test
and
gs
push
xchg
xchg
lods
sub
sub
lock
mov
sub
cld
retf
or
out
leave
mov
push
loope
or
clc
mov
ror
fadd
inc
mov
repz
mov
loope
sub
dec
add
cmp
add
add
adc
mov
cmp
sahf
(bad)
pop
cs
imul
scas
fldcw
aaa
fdivr
sub
aaa
test
aas
or
sub
lock
sub
jge
or
movs
mov
mov
and
fwait
jne
sub
out
pop
inc
cld
and
inc
cmp
sbb
add
jmp
out
fcom
loope
dec
int
adc
aad
loop
sub
push
test
push
loop
inc
push
cmp
arpl
jno
stc
lock
adc
call
not
in
xlat
add
sub
stc
neg
nop
mov
(bad)
jnp
pop
dec
dec
jmp
cwde
fmul
fwait
cmp
and
cmp
call
ja
int
sti
mov
test
dec
popf
movs
mov
aam
or
ret
ret
mov
movsx
dec
retf
dec
xor
mov
add
xor
dec
mov
loopne
cdq
mov
call
xlat
pop
push
mov
mov
in
ret
or
cmp
pop
mov
fadd
jnp
rcr
cmp
or
mov
cmps
mov
inc
(bad)
pop
mov
jge
push
mov
sbb
call
stos
mov
sbb
xchg
and
out
xchg
neg
xchg
dec
adc
dec
out
mov
push
push
or
mov
lds
cmc
or
dec
lea
jmp
dec
stos
(bad)
dec
cmc
jge
pop
mov
dec
add
in
push
push
ret
mov
std
ficomp
test
(bad)
fnstcw
ror
nop
add
dec
jp
mov
clc
(bad)
outs
mov
fist
adc
in
movs
cmc
(bad)
lds
test
inc
push
out
dec
ja
cdq
movs
push
push
mov
shl
pop
push
fist
and
dec
in
in
or
mov
add
xchg
push
and
ror
mov
outs
add
inc
dec
dec
and
clc
or
cmp
jmp
aam
xchg
sub
inc
add
sbb
jmp
jg
jl
jb
cdq
and
xchg
or
mov
clc
cld
repz
mov
and
int3
jmp
mov
sbb
pop
fwait
adc
(bad)
mov
in
lea
das
dec
add
add
scas
push
cmp
out
mov
mul
imul
lock
mov
xor
movs
in
loope
sub
lahf
js
shr
jno
scas
shl
pop
or
mov
in
(bad)
into
repz
xchg
adc
xor
add
xchg
jmp
stos
sub
inc
mov
imul
loope
popf
xor
ror
cmps
pop
add
ins
push
pop
and
xchg
add
repz
lea
jl
sysret
and
sbb
sbb
xchg
retf
mov
imul
aam
jns
aam
xchg
jne
popf
es
jns
adc
test
xchg
mov
sbb
loope
es
repz
cwde
retf
aad
mov
sbb
sub
jbe
pop
mov
push
(bad)
scas
shr
xchg
mov
push
and
add
and
ins
call
ins
sub
aas
xor
add
int3
push
lock
pop
(bad)
xchg
pop
cmp
movs
or
retf
ins
sub
cld
jnp
out
ins
(bad)
scas
sub
sub
pop
or
or
rcl
and
(bad)
retf
(bad)
(bad)
stos
mov
mov
mov
sub
mov
daa
xor
gs
cmps
outs
add
fs
xlat
pushf
stos
mov
xor
xor
out
xor
xlat
inc
inc
xlat
mov
shr
test
jne
mov
ret
jae
(bad)
sti
jle
in
adc
sar
add
aas
mov
ja
test
retf
and
test
pop
fwait
xlat
push
or
out
test
sub
mov
cmp
sub
xchg
sbb
int3
in
pop
push
mov
mov
xchg
std
icebp
fwait
or
gs
ins
mov
shl
cmp
inc
add
shl
push
pop
pop
xchg
xchg
js
shl
sbb
in
pop
call
out
pop
mov
fucomip
stos
push
movs
pusha
cmc
mov
push
cmps
jle
aaa
mov
retf
frstor
out
pop
xor
pop
stos
aam
ficom
dec
pop
ret
hlt
xchg
mov
ins
mov
dec
push
xor
rcr
mov
(bad)
cmp
push
int
mov
test
in
mov
(bad)
jp
repnz
push
mov
daa
mul
xchg
add
ror
loope
dec
enter
xchg
or
pop
mov
inc
xor
mov
dec
sar
test
in
repz
push
aaa
or
ficom
xchg
call
movs
sbb
sti
dec
loopne
in
aad
pop
outs
out
pushf
nop
(bad)
fcom
inc
or
cs
movs
xor
dec
data16
nop
mov
xchg
xor
push
test
mov
pop
dec
ins
ret
pop
sbb
test
test
lahf
icebp
lahf
add
fnsave
add
cmps
xchg
pop
sti
stc
sub
mov
fist
sub
mov
or
and
in
imul
cmp
in
sbb
push
pop
jne
pop
not
fprem
je
or
inc
inc
sahf
test
pop
mov
mov
call
jp
or
mov
inc
sub
mov
sbb
xor
ss
es
popa
or
jge
adc
scas
imul
(bad)
je
sbb
push
hlt
imul
lds
push
xchg
mov
repz
jns
xchg
jae
pusha
enter
jmp
daa
shl
in
dec
push
inc
retf
dec
jno
enter
nop
out
pop
(bad)
jmp
xor
push
ja
shl
leave
mov
sbb
xchg
out
shl
jge
dec
add
and
add
or
outs
call
nop
mov
jno
sub
movs
enter
(bad)
push
jecxz
jno
fwait
push
(bad)
xor
cmp
xchg
xor
out
mov
fwait
inc
nop
aas
shl
jg
mov
dec
jl
retf
fcom
mov
test
out
frstor
inc
ror
dec
sbb
or
stc
pop
xor
clc
call
out
stos
pop
xor
and
sahf
aad
and
pop
sub
scas
inc
lods
inc
jge
pop
and
sbb
shl
push
ret
jg
mov
out
jp
mov
jo
push
push
ins
inc
es
mov
fcomp
movs
mov
or
push
pop
ds
ss
push
(bad)
jno
sub
and
xor
test
dec
cmp
push
inc
pop
je
std
or
xor
pop
mov
cld
adc
and
mov
cwde
aas
rcr
xchg
dec
sbb
(bad)
lea
inc
sbb
mov
add
sahf
or
(bad)
aas
inc
xchg
ins
js
and
cld
mov
cs
add
arpl
dec
mov
inc
mov
popa
xor
mov
stc
aaa
pop
lods
adc
in
mov
mov
mov
mov
xchg
jge
loopne
outs
dec
jmp
jecxz
pop
int
jg
cmp
mov
add
bound
pop
mov
xor
pop
mov
mov
inc
xchg
or
les
mov
test
repz
repnz
or
out
jbe
stos
fnstenv
arpl
repz
cmp
in
call
frstor
cld
push
outs
jo
pushf
xchg
or
sub
vmulss
and
mov
xor
fiadd
jns
jne
scas
and
iret
stos
xchg
ins
popf
mov
sub
imul
jecxz
sub
ret
arpl
inc
(bad)
rcl
movs
arpl
mov
retf
inc
ja
sbb
mov
lods
sub
push
shl
mov
stos
data16
dec
or
xor
js
ins
(bad)
shl
push
mov
(bad)
add
dec
mov
out
pop
inc
inc
mov
nop
jb
lds
out
and
sub
loopne
and
outs
mov
pop
inc
xchg
cmp
dec
ror
repz
xchg
pushf
stos
sahf
jge
jo
or
mov
adc
repz
cmp
outs
fs
fisub
pop
mov
push
cwde
(bad)
mov
and
pushf
jne
add
xor
scas
loope
jge
(bad)
cmc
xchg
push
mov
sbb
daa
adc
out
add
test
test
cwde
mov
ins
es
test
sub
cmp
loop
and
out
aam
pushf
lahf
sub
dec
cmp
xor
xchg
xchg
xchg
scas
or
pop
popf
ja
adc
lods
or
pop
mov
jp
jp
imul
xchg
pushf
into
xchg
pcmpgtw
aad
(bad)
aas
jecxz
sahf
aaa
or
or
push
xlat
mov
jecxz
and
and
jo
pop
mov
ffreep
sar
scas
inc
xchg
fs
daa
sub
sub
mov
repz
xor
mov
icebp
das
mov
adc
fcomp
cs
mov
(bad)
gs
sbb
leave
jae
jg
fnsave
aad
mov
addr16
inc
mov
adc
xchg
sub
call
(bad)
sbb
jo
push
lds
adc
lock
sub
inc
f2xm1
call
mov
mov
retf
xchg
cdq
rcr
jle
rcl
jecxz
scas
lods
xchg
push
sub
ins
mov
adc
xor
jmp
and
shl
add
xor
or
outs
sub
pushf
test
jg
xchg
jnp
test
pop
sub
(bad)
ret
out
retf
out
and
in
ret
jbe
adc
xor
iret
cmp
pop
inc
loopne
ret
dec
fisttp
xchg
and
mov
sbb
jmp
popa
int3
sub
push
xchg
or
dec
idiv
lods
xor
mov
push
push
not
mov
cmps
add
cmp
int3
retf
fistp
cwde
jbe
(bad)
cli
or
mov
imul
test
xchg
stos
or
mov
jle
mov
xchg
mov
out
cmc
jl
cwde
and
jno
jle
sbb
adc
ret
fistp
pop
jbe
scas
stos
mov
sbb
inc
aad
sbb
cld
outs
xchg
sbb
adc
fiadd
(bad)
add
into
or
fldenv
aam
push
sbb
sbb
inc
mov
fisub
ja
mov
inc
xchg
daa
xor
out
scas
cwde
movs
push
sbb
in
retf
sahf
icebp
in
sbb
shl
lock
(bad)
or
aad
jne
adc
pop
out
push
daa
push
pop
and
sub
cmc
fist
xor
add
retf
jae
dec
bound
into
icebp
cmp
and
popa
adc
and
add
aam
jno
dec
std
push
pushf
mov
jns
retf
xor
dec
ins
mov
mov
xchg
(bad)
mov
or
shr
push
pop
add
add
ins
popa
mov
aam
inc
inc
dec
clc
(bad)
rcr
xor
or
xchg
nop
xchg
push
sub
push
mov
xchg
dec
cli
aad
jns
pop
cmp
jno
jne
pushf
outs
fistp
data16
pushf
adc
loope
lea
or
push
mov
pop
xlat
dec
xchg
std
jbe
arpl
sub
xor
adc
addr16
test
push
pop
pusha
pop
xor
mov
and
ror
adc
jge
jne
aam
sub
mov
mov
fldenv
xchg
ficom
inc
and
(bad)
mov
cmp
push
in
retf
jge
sbb
data16
xchg
and
bound
popf
xor
xchg
mov
xor
test
int3
cmc
nop
ds
pop
into
adc
xchg
jb
sbb
or
push
xchg
loopne
push
lahf
sbb
jnp
retf
mov
push
sbb
pop
xchg
les
leave
mov
out
aas
out
stos
push
inc
xor
ja
mov
repz
pop
inc
fisub
mov
test
xor
enter
pop
mov
outs
mov
ds
rol
or
cwde
inc
js
mov
js
jo
add
jg
fistp
dec
scas
inc
scas
cmps
dec
arpl
int3
mov
push
jno
jno
jp
shl
xchg
xchg
push
mov
aad
jb
push
sub
push
xchg
jns
lea
loopne
popf
lahf
inc
jmp
aaa
scas
fsub
dec
fimul
rcl
fst
pop
xor
pop
and
jne
outs
xchg
repz
mov
outs
in
jns
mov
sti
pop
or
(bad)
ficom
sbb
aam
or
fiadd
dec
int3
jg
mov
imul
ds
add
out
push
ins
mov
stc
ss
fs
inc
cdq
jnp
mul
or
test
mov
int3
or
pop
rol
or
(bad)
fcomp
jl
ror
sbb
je
push
push
fsub
mov
lahf
jmp
clc
sti
pop
cmps
cmps
xor
mov
or
push
jecxz
mov
pop
stc
scas
out
push
push
pop
aad
enter
mov
fdivr
fsub
push
and
dec
jnp
test
sbb
push
out
push
adc
repz
shl
data16
mov
outs
ins
add
add
sbb
in
xchg
sub
xchg
pop
fnstenv
mov
jl
shr
mov
in
inc
mov
sahf
lods
mov
and
push
xlat
pop
adc
mov
jno
mov
ja
pop
pop
and
mov
or
ins
mov
scas
test
jmp
mov
and
fild
retf
sti
fwait
ror
xor
dec
dec
dec
cmps
stos
push
nop
in
call
xor
scas
sub
or
or
push
or
js
cs
jp
movs
mov
pushf
xchg
test
dec
mov
ret
jge
retf
loop
aas
inc
pop
mov
fst
test
in
sti
inc
movs
push
mov
addr16
jl
test
inc
out
dec
lahf
mov
clc
bound
xchg
xor
mov
loope
imul
call
stc
test
rcl
push
or
(bad)
jmp
das
add
inc
push
outs
push
adc
out
imul
sub
outs
pop
pop
outs
mov
push
scas
adc
push
mov
clc
fs
mov
cmps
cdq
xchg
mov
inc
mov
pop
cmp
mov
outs
mov
loope
stos
and
adc
sbb
mov
pop
mov
mov
sub
sub
call
movq
std
sbb
mov
sbb
in
scas
jne
pushf
push
sub
imul
cmp
and
mov
fdiv
xor
call
sub
mov
sub
int3
sar
ror
xor
sbb
cwde
stos
repnz
in
dec
mov
add
sub
enter
jne
or
or
sar
cmp
dec
xchg
xor
and
pop
aas
loopne
in
cmp
rol
jle
or
mov
adc
rcr
xor
cmc
aam
shr
leave
and
js
sar
fmul
xor
adc
pop
xchg
ja
rol
outs
sbb
push
js
enter
xchg
pusha
lock
xor
mov
loopne
mov
jl
adc
out
arpl
fstp
mov
ret
xor
retf
nop
xor
data16
mov
xor
ror
sub
test
(bad)
es
outs
inc
repnz
pop
lds
push
push
sbb
sub
cmp
xchg
bound
pop
lods
cmp
stos
jmp
cmp
and
mov
arpl
jecxz
ret
repnz
inc
mov
xchg
and
jne
mov
outs
fstp
jns
mov
outs
test
dec
clc
popf
xor
(bad)
in
or
sub
xor
out
cmp
mov
int3
cmp
jno
add
mov
cmps
test
and
shr
nop
fs
push
xlat
push
daa
fadd
movs
dec
in
out
loop
sbb
sub
or
jmp
outs
inc
jle
fiadd
fwait
lods
mov
mov
and
sub
imul
cmp
inc
gs
inc
sbb
and
cmp
pop
and
scas
cmc
enter
inc
fild
not
mov
push
dec
sub
(bad)
mov
inc
ja
xchg
sub
xor
repz
or
pop
and
int3
xchg
lea
xchg
stos
fs
xchg
cmp
push
imul
and
sar
in
jmp
movs
jno
push
div
fidiv
jmp
int3
popa
mov
add
xor
shr
jecxz
adc
out
lods
inc
jge
inc
in
sub
pop
fsub
push
add
mov
mov
inc
je
xchg
push
pop
dec
ja
adc
adc
xchg
dec
aad
cmp
fstp
fsubr
cmp
popf
sub
jbe
lahf
adc
ja
mov
pusha
ret
fisttp
push
inc
add
cmp
jl
sub
and
mov
lods
pusha
add
cld
(bad)
addr16
mov
mov
sub
xchg
dec
push
push
cmp
mov
int
jo
and
mov
jmp
push
shl
and
imul
or
cmp
ins
pop
ds
sbb
jg
and
pop
or
add
cdq
xchg
sbb
pop
mov
cmc
mov
cmp
jl
stos
cmp
lock
pop
push
ret
jae
loopne
movs
jmp
xchg
stc
rcl
mov
xchg
hlt
and
fs
xchg
lock
xor
leave
shl
es
xchg
push
mov
jge
in
mov
cmp
sub
mov
sbb
jmp
jle
jmp
in
loope
es
loop
xchg
out
mov
adc
iret
sub
aam
ins
mov
xchg
and
ret
xchg
es
sub
xchg
ins
mov
ret
scas
mov
cmc
(bad)
jbe
sub
movs
push
dec
mov
mov
pop
adc
dec
xchg
or
icebp
test
dec
les
fstp
mov
lods
pop
or
push
daa
sub
sbb
pop
mov
cld
loop
jmp
or
loope
cmps
nop
lods
(bad)
lea
pop
int
shl
sub
ror
dec
cmps
test
retf
pop
xor
jb
addr16
sbb
repz
mov
nop
mov
sub
cmp
push
push
fcomp
and
pop
stos
clc
xlat
mov
xchg
clc
dec
sub
or
push
arpl
imul
xchg
add
repnz
xchg
jg
adc
mov
xor
adc
stos
dec
aad
adc
push
adc
xchg
call
in
mov
and
adc
mov
outs
loopne
add
add
mov
xchg
jno
les
inc
mov
sub
mov
(bad)
outs
inc
in
cmp
pop
dec
sub
stos
dec
pop
call
cmp
(bad)
fldenv
into
call
dec
pop
neg
push
dec
retf
add
scas
push
push
or
xchg
ins
inc
mov
pop
idiv
in
call
mov
jnp
cmp
push
call
xchg
dec
add
xor
xchg
mov
retf
mov
xor
in
xor
and
sbb
mov
push
pop
adc
loope
mov
jecxz
je
cmps
test
aaa
clc
mov
repnz
fcomp
push
clc
data16
lods
pop
shl
push
outs
out
in
mov
popa
sbb
arpl
outs
lods
xchg
dec
call
sar
(bad)
pop
sub
test
or
fwait
pop
push
mov
adc
int
jecxz
cdq
lods
fstp
mov
xchg
cmps
sub
push
cmps
inc
adc
push
(bad)
mov
mov
xor
pop
jmp
jo
ds
jns
push
bound
jle
dec
mov
jp
popa
jg
push
pop
test
jle
lds
lods
ret
enter
jg
inc
sub
ret
mov
loopne
and
icebp
pop
dec
das
repnz
add
lahf
mov
jmp
add
jecxz
and
ss
ret
rol
jnp
in
outs
repz
jmp
into
fcom
sub
dec
sbb
xchg
ret
mov
jg
sbb
sub
xor
aad
cmp
arpl
dec
jb
sub
pop
sbb
mov
rcr
(bad)
lock
retf
loope
jb
pushf
rcl
pop
repnz
jle
fist
push
ds
arpl
dec
add
ret
pop
jno
xchg
xor
mov
ret
and
sti
cdq
xchg
imul
mov
imul
into
dec
jmp
add
sar
ret
sahf
ss
les
mov
enter
aaa
inc
dec
ins
inc
std
xor
addr16
sbb
aaa
out
or
pop
mov
dec
push
into
mov
sti
dec
lock
jbe
xchg
(bad)
jp
jns
pop
inc
mov
call
leave
out
xchg
cmc
daa
mov
lea
push
test
idiv
add
bound
fild
adc
mov
fdivr
out
mov
fsub
pop
dec
mov
inc
adc
xchg
loop
es
push
jmp
retf
jbe
fnstsw
out
sbb
arpl
ret
iret
pminsw
sub
fs
mov
and
mov
push
movs
(bad)
cmp
mov
jbe
loopne
push
and
xor
cmps
pop
xchg
fnstenv
mov
push
xchg
sbb
mov
adc
fadd
sub
sub
push
ficomp
arpl
mov
or
mov
leave
jl
sti
icebp
ror
les
aam
sbb
or
test
xchg
enter
mov
fxch
xor
xor
mov
push
loopne
pop
lds
sub
inc
mov
dec
jbe
cmp
cmp
test
in
fist
int3
sub
loopne
xchg
or
xchg
into
test
ror
test
mov
xchg
xchg
inc
inc
xchg
dec
sti
inc
or
mov
lods
ret
mov
mov
push
popa
xchg
enter
dec
xor
fild
dec
sbb
aas
mov
std
pusha
out
cpuid
xor
sar
mov
data16
stc
mov
rol
ja
jns
dec
push
push
ins
nop
(bad)
pop
sub
(bad)
cmc
cmp
push
jle
add
jb
push
aas
mov
dec
sbb
pop
imul
jno
sub
mov
adc
int3
shl
jecxz
push
sbb
(bad)
add
jle
nop
test
or
xchg
popa
hlt
fimul
pop
in
cmp
call
pop
data16
ins
icebp
add
push
jno
add
sub
jae
inc
cmps
cmp
add
jecxz
test
dec
dec
mov
loope
cmps
pushf
push
(bad)
or
stos
jg
adc
(bad)
add
pop
xchg
mov
inc
repnz
fistp
(bad)
stos
mov
mov
and
jnp
(bad)
jle
mov
mov
das
loope
stos
mov
and
pcmpgtb
clc
jbe
js
xor
sbb
ror
fsub
in
xchg
push
fwait
xchg
(bad)
out
cdq
pop
idiv
fdivr
int3
xchg
sub
ds
popf
dec
or
(bad)
mov
stc
arpl
punpcklwd
call
pop
retf
cld
or
sbb
retf
out
fild
and
mov
not
mov
sti
mov
mov
mov
inc
ins
enter
and
mov
jnp
xor
cmp
pop
and
sbb
pop
aaa
ins
das
xchg
(bad)
imul
fwait
test
inc
scas
(bad)
js
lahf
scas
icebp
(bad)
clc
push
stc
dec
xor
mov
js
sbb
sbb
in
pop
shl
cmp
dec
xor
nop
loop
cmp
jns
dec
or
aad
xchg
or
ins
int3
jmp
pop
push
(bad)
enter
es
call
lock
je
mov
push
sbb
in
daa
pop
mov
xchg
xor
xor
pop
adc
lds
xor
loop
xlat
ret
pusha
mov
pop
push
stc
out
cdq
add
ss
sbb
fwait
stc
xchg
cmp
mov
out
lods
sbb
repz
push
call
add
fdiv
cmp
movs
dec
or
xlat
retf
xor
push
dec
inc
cdq
mov
nop
fnsave
push
(bad)
jnp
imul
inc
jmp
or
sub
inc
push
sub
dec
call
push
sub
push
xchg
jno
repz
cmp
not
jne
test
stc
data16
js
push
outs
inc
push
xchg
or
sbb
push
add
scas
push
sbb
imul
and
and
lock
outs
push
ss
xchg
inc
inc
leave
inc
loop
mov
jp
mov
daa
arpl
test
xchg
cmc
add
std
sbb
add
je
(bad)
ret
cli
mov
push
mov
adc
xlat
loop
xlat
leave
loopne
inc
pop
add
out
daa
imul
fisttp
(bad)
adc
xchg
hlt
in
hlt
and
outs
outs
inc
movs
sbb
mov
cmps
call
stos
aaa
sahf
and
pop
lds
sub
jge
adc
scas
push
ror
es
push
arpl
hlt
inc
inc
inc
mov
pop
cmps
int
pop
jecxz
cmp
jo
xor
inc
dec
lds
inc
(bad)
and
cmp
pop
movs
xchg
xchg
xor
icebp
fwait
xchg
or
not
sub
gs
push
lods
jns
sub
rol
loop
jg
shl
adc
out
fstp
pusha
std
xchg
sbb
add
test
rcl
hlt
or
jmp
cmc
adc
jmp
dec
adc
mov
cli
loope
sbb
lock
ficom
pusha
mov
js
(bad)
mov
jmp
mov
xor
push
jmp
jmp
scas
repz
fisttp
call
sbb
mov
lock
ficom
inc
(bad)
outs
(bad)
xor
clc
scas
int3
or
pop
fiadd
icebp
ins
mov
mov
mov
mov
popa
pop
jb
sub
icebp
xchg
(bad)
(bad)
push
movs
test
jnp
and
mov
hlt
(bad)
inc
repz
retf
inc
loopne
mov
jo
and
rcl
fsub
inc
retf
mov
jnp
js
sub
daa
inc
retf
fs
clc
cli
pop
fcom
movs
jnp
xchg
adc
loop
outs
xor
(bad)
test
sar
int
or
test
pop
push
iret
mov
mov
sahf
shl
test
mov
and
cmp
mov
mov
sub
sub
xchg
daa
xchg
dec
cwde
or
cmp
(bad)
ja
ret
sub
inc
out
adc
dec
jnp
mov
scas
jae
aam
in
iret
retf
mov
mov
int3
seto
out
or
xor
mov
pop
or
sub
xor
mov
enter
ins
stos
push
test
inc
cli
xchg
lods
ret
adc
fadd
arpl
aas
inc
call
cmc
mov
stos
dec
pusha
jp
add
pop
cmp
shr
ins
mov
mov
pop
bound
mov
pop
add
movs
cmp
and
gs
or
popa
mov
xchg
fdiv
cmc
cld
mov
cmp
ins
sbb
cwde
adc
test
in
pop
outs
jbe
push
fld
ss
sub
nop
stos
ud0
sbb
push
mov
jp
out
les
(bad)
pop
cmp
jo
pusha
push
cdq
xchg
xor
ret
push
pop
sub
(bad)
arpl
aaa
or
push
ds
dec
(bad)
jbe
xor
push
data16
and
stos
fs
xor
lahf
jg
je
or
sub
dec
push
cmp
inc
(bad)
pop
push
stos
push
dec
or
jmp
addr16
and
ds
add
push
cs
xor
inc
jle
(bad)
stos
arpl
hlt
push
pop
popa
adc
jp
(bad)
repz
loope
int
xor
mov
xor
sahf
pusha
dec
neg
retf
push
jnp
jmp
cdq
inc
int3
mov
push
inc
xchg
pusha
ror
cli
movs
mov
ror
mov
xor
jns
sbb
sti
fs
movs
je
mov
mov
retf
adc
rcr
dec
enter
adc
add
ret
jmp
mov
xor
mov
jp
fcomp
xchg
in
aam
pop
int
adc
lods
adc
fmul
dec
aad
jnp
add
mov
(bad)
lahf
ds
dec
mov
jp
jno
sbb
out
popf
lock
inc
jmp
lods
push
xchg
sbb
add
jns
mov
sub
and
adc
outs
push
sbb
xchg
inc
cld
repnz
mov
pop
push
pop
or
leave
rcr
sub
or
std
ret
xchg
mov
push
xchg
xlat
adc
stos
push
sub
cmp
xchg
shl
xor
(bad)
test
lods
rcr
jmp
pushf
test
push
inc
add
in
loope
aam
fdiv
test
out
pop
inc
cwde
xor
push
add
dec
(bad)
mov
add
mov
int3
shr
pop
push
xchg
out
(bad)
and
inc
repnz
add
aaa
aad
lock
ret
es
xor
call
mov
xor
mov
and
mov
(bad)
loop
into
pop
movs
test
cmp
repz
imul
cdq
sbb
aaa
mov
add
rol
stos
addr16
inc
pop
fnstcw
test
lods
fcmovne
mov
sbb
inc
jmp
adc
fmul
hlt
mov
dec
in
push
ficom
adc
push
or
dec
int3
lods
fs
sti
(bad)
cs
not
mov
sbb
out
rol
push
outs
xchg
pop
scas
push
xor
addr16
dec
sub
push
into
mov
mov
dec
jae
icebp
push
clc
xor
pusha
in
pop
push
lods
ins
mov
scas
cmps
std
push
outs
or
pop
out
scas
xor
cmp
loope
fsubp
push
pop
sbb
call
sub
add
xchg
lahf
ret
add
add
dec
or
in
mov
cmc
inc
xchg
mov
loope
loopne
psllw
sub
mov
lea
pop
mov
cld
mov
mov
cld
retf
dec
or
dec
adc
iret
vmovddup
aad
lods
stos
stos
add
sbb
adc
pop
icebp
or
test
or
mov
enter
into
daa
in
mov
loope
ret
cld
adc
add
ins
sbb
das
neg
mov
outs
pop
sbb
adc
xor
test
pusha
inc
push
loop
(bad)
sti
xchg
push
add
pop
ret
test
push
(bad)
and
mov
mov
dec
xor
xor
stc
push
pusha
pop
mov
or
jge
repnz
push
pop
jmp
inc
(bad)
cmp
sbb
(bad)
cmp
(bad)
popf
frstor
fcmovb
in
loopne
pushf
add
xlat
(bad)
cmp
adc
int
lock
jnp
pop
jmp
enter
push
daa
lahf
dec
in
sbb
jg
pop
imul
cmps
sti
push
push
mov
adc
cmp
jmp
aad
jmp
and
pop
movs
cmp
sub
shl
xchg
pop
or
mov
in
(bad)
push
leave
add
and
imul
aad
(bad)
sbb
sbb
rol
outs
rcr
xor
or
js
sub
jp
out
mov
(bad)
or
in
outs
mul
or
in
add
jl
mov
daa
or
mov
cli
pop
out
and
or
dec
imul
cmp
or
es
clc
inc
push
mov
in
ror
stos
inc
fidiv
inc
adc
mov
js
mov
cs
push
lock
inc
push
push
dec
ror
(bad)
xchg
xchg
jmp
stc
mov
cmp
push
icebp
movs
into
lds
xor
ja
retf
and
xchg
or
jle
(bad)
retf
xchg
sub
or
stos
test
test
popf
xchg
aaa
dec
pop
xchg
mov
cmps
ficomp
fwait
dec
xchg
jne
pusha
cmp
ins
mov
add
scas
or
xor
add
stos
push
pop
mov
jg
imul
sbb
add
xchg
fnstsw
addr16
and
mov
mov
jne
push
sbb
inc
jnp
retf
das
std
and
rol
dec
xor
sbb
xor
hlt
mov
mov
xchg
sti
xor
(bad)
aad
ins
scas
data16
and
ret
in
cmps
pop
or
cmp
loopne
push
and
movs
push
movs
add
inc
push
shl
pushf
daa
jae
stc
dec
cld
inc
xchg
(bad)
shl
and
mov
in
ret
(bad)
sar
ret
sbb
fidiv
mov
scas
jecxz
mov
imul
enter
xchg
mov
and
dec
pop
aad
movs
mov
(bad)
sbb
jp
bound
cmp
or
xchg
jbe
or
sbb
add
xchg
aam
jecxz
sub
push
xchg
out
aas
test
cmp
fbstp
fninit
inc
gs
mov
cmps
cmp
add
pop
repnz
jnp
cmp
or
scas
shr
neg
push
loopne
(bad)
(bad)
popf
push
mov
xchg
dec
jmp
mov
test
push
jns
arpl
cdq
movs
cdq
ja
mov
gs
push
shl
jnp
or
out
dec
sti
mov
fiadd
sub
or
sbb
outs
add
jp
push
mov
xchg
outs
sbb
inc
cwde
rcr
imul
mov
pop
nop
xor
dec
addr16
xor
push
or
lea
icebp
lea
lods
in
cli
jmp
loopne
xor
push
jo
jg
pop
cmp
cli
add
adc
std
outs
jl
(bad)
ja
add
or
repnz
call
and
push
call
inc
cdq
(bad)
sbb
lock
dec
adc
mov
and
in
xchg
repnz
pop
pop
jae
push
retf
movs
jbe
adc
add
mov
ins
int3
cmps
iret
mov
into
fdivr
rcr
push
(bad)
xchg
movs
sahf
xchg
inc
sub
push
sahf
int3
or
xor
mov
into
pop
and
inc
adc
mov
mov
ds
add
(bad)
and
lea
inc
jb
(bad)
xor
jl
(bad)
in
fild
xchg
sub
loopne
lock
stos
repnz
jne
lahf
inc
jno
mov
jo
(bad)
jl
cdq
icebp
push
lahf
mov
mov
ja
add
ss
rol
adc
js
adc
mov
(bad)
mov
(bad)
jmp
pop
jp
push
push
mov
ins
pop
cmp
cdq
ss
pop
(bad)
arpl
repnz
(bad)
add
out
push
xchg
(bad)
mov
xlat
aam
adc
push
stos
xchg
cmp
adc
mov
adc
push
jecxz
xchg
je
sub
sar
adc
loop
mov
pop
sar
das
lock
mov
test
jbe
lock
hlt
add
out
pop
call
inc
sub
xchg
push
add
sbb
adc
jmp
into
xor
and
and
movs
xor
mov
sbb
rol
call
mov
jns
sub
and
sbb
stos
popf
adc
stc
stc
imul
fstp
mov
cmp
cmp
jns
test
stos
push
cmp
cmps
cmp
aas
addr16
mov
scas
imul
add
add
pusha
shl
and
popa
mov
stos
mov
inc
icebp
cmp
jns
xchg
lahf
sub
mov
and
lea
or
sbb
jno
sub
or
mov
xchg
jnp
dec
sub
xchg
and
fcomp
clc
lods
and
sbb
cmp
or
movs
push
pushf
mov
in
pop
sub
vandpd
loop
adc
pop
pop
repnz
kmovw
iret
pop
inc
les
je
sar
pop
or
and
xor
js
shl
adc
sbb
cmp
mov
sbb
adc
mov
push
cmc
(bad)
inc
inc
adc
jl
inc
loopne
fwait
inc
sbb
jl
mov
loope
ins
stos
loope
test
mov
ds
call
mov
popf
sar
ror
(bad)
aas
jb
push
sbb
lahf
mov
loopne
repz
test
dec
inc
lods
call
mov
aam
xor
sbb
mov
or
pop
repz
fnstenv
adc
ja
mov
mov
shl
push
adc
xor
jae
and
pusha
outs
cld
pop
push
ins
add
fs
push
fcmovnu
sbb
outs
and
mov
pop
pop
fisub
push
pop
enter
movs
scas
push
aaa
ins
retf
push
and
adc
xor
jmp
ficomp
sub
outs
divps
fld
mov
sbb
ds
or
cmps
xor
inc
dec
add
adc
dec
or
jle
pop
int3
jle
and
(bad)
inc
inc
push
push
fst
mov
jmp
leave
jle
cmps
bound
movs
(bad)
fidiv
xor
sub
sbb
and
rcl
sbb
xchg
into
jae
xchg
xchg
pop
pop
out
rcr
or
mov
out
pop
dec
inc
dec
iret
sbb
xchg
movs
out
jbe
cdq
mov
add
popa
adc
ja
cmp
dec
(bad)
ror
leave
(bad)
adc
jbe
mov
sbb
icebp
sub
test
mov
loopne
mov
call
loope
jnp
adc
inc
(bad)
mov
mov
pop
cmps
hlt
add
mov
pop
cmps
outs
ror
mov
sbb
lds
int3
dec
js
sub
daa
mov
ret
xor
imul
loop
js
push
push
cld
mov
pop
int3
mov
or
shl
inc
cmp
(bad)
sbb
mov
sbb
mov
mov
jae
inc
inc
fstp
aaa
dec
dec
mov
push
call
ds
mov
jmp
retf
lods
cmps
push
dec
xchg
push
mov
add
push
xor
int
jbe
jo
out
pushf
call
cmp
mov
repnz
idiv
dec
not
(bad)
xchg
jno
pop
mov
mul
cmp
clc
mov
pop
(bad)
out
jmp
mov
jae
jl
mov
loopne
sbb
xchg
rol
mov
fadd
outs
or
inc
add
fimul
push
bound
js
push
sar
inc
sbb
sbb
and
in
jg
into
or
or
push
add
push
and
push
adc
sub
ins
pop
and
jns
inc
ss
lea
inc
or
mov
sar
addr16
retf
out
jnp
inc
and
popf
mov
ja
sub
jle
lods
or
ret
dec
sbb
xchg
mov
mov
or
sub
test
shl
repnz
mov
movs
mov
mov
(bad)
add
push
xor
mov
push
cli
icebp
sbb
and
sub
pop
push
xchg
xchg
inc
add
add
sbb
mov
pop
outs
test
(bad)
stc
adc
pop
(bad)
dec
or
es
or
push
cmc
sbb
adc
mov
movs
fwait
mov
ror
lock
ins
in
loop
fcom
inc
push
push
cli
jmp
jmp
jns
jmp
inc
pop
into
add
in
jno
in
aad
cwde
adc
cmp
or
pop
mov
xlat
jl
xchg
int3
add
rol
hlt
(bad)
js
pop
jae
(bad)
les
and
xor
imul
shl
mov
dec
int
ret
sub
ds
sub
push
jne
sub
push
cmp
and
mov
fisttp
mov
std
(bad)
jmp
and
mov
or
jnp
call
daa
xchg
push
pop
pop
mov
dec
je
or
paddd
pop
ror
fidiv
call
cmp
ins
popf
sbb
jmp
adc
loope
pop
dec
repz
push
pop
and
cmp
lds
clc
mov
push
lock
mov
mov
pop
mov
and
movs
pop
pop
dec
aad
ds
pop
or
or
data16
dec
xlat
test
xor
js
(bad)
cmp
xchg
or
(bad)
dec
retf
imul
popf
xchg
jo
fst
pop
jo
int3
jnp
jnp
jecxz
ds
cmps
outs
jb
(bad)
cdq
cmp
out
imul
stos
out
sub
push
push
ret
and
aam
rep
js
sbb
shr
mov
(bad)
in
outs
std
loope
xchg
aas
lds
leave
dec
xchg
popf
cmp
fimul
sub
cmps
dec
or
fldcw
jns
pop
add
adc
sub
clc
cld
xchg
cmp
es
lods
stos
xor
into
and
imul
sub
lea
sub
repnz
xor
addr16
dec
push
mov
bound
xchg
xchg
mov
cmpxchg
jne
fld
iret
inc
xor
test
rcr
pop
and
add
mov
(bad)
dec
mov
mov
inc
ret
jg
pop
push
or
pop
shr
fcomp
js
or
clc
or
loop
mov
mov
mov
xlat
out
or
sar
(bad)
stos
jmp
(bad)
ins
stos
inc
inc
or
js
jg
cwde
test
addr16
dec
mov
sub
pop
out
add
mov
mov
xchg
cs
movs
xchg
(bad)
call
add
cwde
cmc
mov
sub
scas
cdq
clc
dec
mov
ds
cli
adc
fucompp
mov
and
adc
or
mov
mov
(bad)
dec
mov
sub
jg
or
inc
mov
or
adc
mov
push
fisttp
cmp
cmp
mov
xor
add
hlt
dec
lds
pushf
mov
and
add
retf
in
xor
jl
dec
pop
jp
pop
xor
retf
jnp
xchg
cmp
mov
daa
call
ja
jmp
lods
or
inc
pop
pop
mov
dec
and
xchg
inc
mov
fidivr
stos
inc
scas
adc
or
push
nop
stos
sbb
bound
adc
cmp
in
push
rcl
add
cs
inc
and
out
sbb
dec
ins
jle
mov
jo
cmc
sub
push
aaa
aas
xor
xchg
cmp
inc
add
adc
mov
add
cmps
inc
scas
mov
xchg
shl
adc
(bad)
mov
jbe
jmp
and
mov
mov
rcr
pusha
outs
mov
jo
repz
mov
test
aaa
pop
popa
and
push
pop
iret
cmps
in
mov
sub
mov
iret
sub
je
pushf
cmp
rcl
push
sbb
jl
sbb
mov
and
adc
mov
pop
xor
addr16
sbb
xlat
hlt
in
fbstp
pusha
cdq
lds
out
pop
sub
jb
jle
and
(bad)
out
call
adc
aam
jg
dec
mov
push
adc
imul
or
xor
scas
mov
mov
inc
jno
inc
jnp
es
sub
mov
sub
cmps
push
xor
imul
mov
jae
jmp
aam
adc
iret
inc
inc
cmp
leave
inc
add
jb
lods
xchg
dec
pop
and
je
jge
int3
xchg
and
loope
cmps
lods
pop
mov
popa
xlat
leave
std
xchg
xor
mov
sub
outs
mov
aas
mov
push
add
cmovne
and
cmps
inc
das
push
pop
dec
and
or
pop
outs
mov
out
mov
push
push
cmp
add
pop
cmp
rcl
sti
jecxz
cmc
dec
or
sti
fs
out
(bad)
std
mov
in
fistp
(bad)
cmp
push
push
lea
jns
add
nop
cmp
xlat
jmp
fs
add
cdq
pusha
sbb
mov
jnp
hlt
popa
(bad)
sbb
jmp
mov
cmc
outs
pop
in
and
outs
mov
daa
or
xor
int3
dec
mov
adc
retf
xchg
pushf
scas
push
movs
out
dec
out
add
outs
(bad)
outs
push
dec
iret
je
mov
loopne
pop
fmul
cmc
inc
push
sahf
mov
pop
leave
xlat
sub
std
sub
pop
xchg
in
es
ds
outs
scas
push
mov
dec
inc
sub
sahf
pop
push
dec
mov
shl
lods
icebp
push
inc
outs
(bad)
cmc
lods
in
in
dec
aaa
jmp
mov
dec
sub
lods
fisttp
xor
inc
movs
sub
ds
mov
push
loopne
mov
imul
test
cmp
mov
dec
fsubr
jae
or
sub
dec
pop
xchg
aam
(bad)
mov
addr16
cmps
and
xor
xlat
adc
pusha
rol
(bad)
dec
pop
aad
cwde
xchg
mov
imul
ret
pop
movs
out
and
inc
add
and
xor
or
sub
ss
xchg
ins
lds
inc
nop
cmp
mov
mov
std
inc
and
bnd
aad
das
adc
imul
add
cdq
jl
sbb
dec
addr16
mov
imul
cmp
fwait
add
out
leave
dec
popa
ins
pop
pop
mov
aam
(bad)
(bad)
cmps
adc
mov
xchg
int3
dec
fwait
adc
jmp
mov
mov
jmp
dec
psubusw
cmp
mov
and
cmc
mov
in
lods
add
jmp
mov
or
(bad)
pop
inc
pop
test
js
daa
imul
aaa
add
outs
(bad)
fist
mov
shr
cmp
outs
xchg
and
shl
push
fist
inc
sub
sti
mov
xchg
jp
or
shl
and
xlat
enter
(bad)
stos
xor
daa
pop
rcl
inc
add
mov
inc
cmp
pop
jmp
dec
les
scas
lods
test
fnstcw
aaa
(bad)
mov
(bad)
loopne
or
