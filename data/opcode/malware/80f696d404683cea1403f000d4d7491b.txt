jge
ret
mov
cmp
mov
or
xchg
or
pop
sbb
inc
jo
fs
int
push
popa
lock
inc
mov
retf
push
and
xor
and
add
push
sbb
add
cmp
lods
pop
shr
test
test
pop
push
and
movs
neg
ret
shl
aaa
gs
jp
add
cmp
sub
mov
cmp
and
add
or
movs
pop
(bad)
push
jmp
dec
mov
xchg
adc
push
rcr
push
push
das
add
lods
test
fnstenv
jp
sbb
xchg
push
pop
fcomp
into
or
pop
or
pop
dec
sub
inc
loopne
xchg
iret
cmp
sti
adc
xchg
cli
sbb
sub
inc
push
pop
jnp
and
mov
shl
lea
je
setle
bsr
clc
push
add
test
pop
shr
mov
cmp
pusha
test
add
mov
mov
rcr
mov
pushf
cmp
pushf
lea
jbe
mov
rol
jmp
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
add
test
add
add
jns
mov
add
add
add
jns
sbb
or
mov
add
add
jno
add
mov
add
add
add
add
or
imul
add
popa
add
jno
pop
add
add
dec
add
add
add
add
add
add
cmps
shl
sbb
cs
out
in
push
dec
iret
std
(bad)
jo
add
retf
and
cmp
popf
pop
popf
pop
pop
and
lods
sbb
scas
push
hlt
lods
ins
push
(bad)
cmp
adc
dec
lods
scas
test
mov
shr
push
push
push
xor
mov
adc
movs
and
mov
aad
not
jmp
add
inc
gs
outs
fs
gs
popa
outs
fs
gs
add
dec
push
pop
xchg
aaa
mov
push
adc
xchg
in
xchg
aad
lea
mov
lods
jno
cmp
sub
or
sbb
push
fs
rcl
sbb
or
dec
xchg
test
rcr
or
and
mov
dec
dec
pop
in
add
and
xor
and
(bad)
test
sbb
jge
xchg
les
repz
jne
(bad)
inc
hlt
push
lahf
(bad)
sbb
mov
addr16
push
and
lock
test
imul
add
test
movs
xchg
inc
lahf
sub
lds
fld
(bad)
hlt
dec
push
lds
and
adc
call
lea
je
js
mov
add
in
hlt
(bad)
(bad)
popa
add
in
jne
sar
sub
or
ins
mov
add
aam
xchg
fist
jnp
mov
cmp
fist
jae
shl
rcl
repnz
mov
repz
push
add
push
or
repnz
mov
push
push
push
xchg
jb
rol
push
retf
out
jle
mov
fidivr
xchg
jle
in
shl
stc
push
ins
xchg
clc
sbb
pop
sub
mov
mov
mov
scas
lods
mov
pop
std
std
add
ret
jno
xchg
int
leave
outs
or
mov
pop
ret
ss
loopne
int3
jge
jno
in
test
inc
inc
and
aam
push
enter
fsub
adc
test
std
lahf
push
and
add
lea
pushf
mov
xchg
push
movs
adc
aad
(bad)
dec
xchg
test
mov
inc
enter
fimul
fs
jb
cmp
push
cmp
jmp
stc
not
clc
rol
clc
not
cmc
pusha
push
popfw
pushf
jmp
push
stc
cmp
jmp
retf
imul
test
popa
mov
ret
popa
mov
mov
dec
ins
into
sbb
inc
mov
(bad)
sbb
rcr
add
mov
retf
or
sbb
dec
jmp
jmp
cs
call
lds
add
mov
loope
inc
pop
sub
pop
pop
loopne
cmc
pop
push
cmp
mov
mov
ins
(bad)
lea
out
push
cmc
cmps
xor
pushf
push
mov
mov
jmp
jecxz
jecxz
repnz
pop
cmp
pop
cli
cmp
cli
jns
stc
cmp
xchg
pop
lea
lock
(bad)
adc
(bad)
cmps
mov
ret
fstp
jge
scas
or
cmp
jle
enter
mov
jns
cmp
add
daa
pop
add
sub
lods
xor
push
cmp
cmp
out
fisub
add
sub
push
jmp
cs
out
dec
mov
ficomp
loop
outs
dec
sahf
ins
lahf
lods
pop
lods
dec
dec
aas
cmps
cmp
movs
in
cmp
mov
jp
and
repnz
cmp
pop
jnp
fcomp
add
add
xor
push
pop
jle
mov
icebp
cmp
mov
test
sar
adc
loopne
or
sar
cmps
iret
xor
dec
sub
popf
mov
repnz
dec
stos
pushf
inc
fcomp
pop
sub
bound
jmp
xor
xlat
add
movs
(bad)
mov
repnz
dec
ret
pusha
mov
mov
mov
mov
xchg
call
lea
je
pusha
pushf
lea
jmp
lea
jae
push
push
lea
jmp
inc
inc
push
inc
push
dec
xor
cs
ins
add
add
and
inc
and
call
loop
pushf
lea
jmp
cmp
push
push
pusha
lea
ja
jae
pop
movsx
pop
pushf
mov
jmp
push
push
inc
lea
pushf
call
push
cmp
pusha
call
cmp
call
mov
lea
ja
mov
inc
not
dec
inc
inc
jmp
not
mov
lods
push
pusha
pushf
push
dec
cmc
clc
pushf
rol
clc
xor
push
push
jmp
rol
clc
not
push
shr
call
mov
lea
ja
pusha
push
push
lea
jb
test
test
call
sbb
outs
repnz
mov
or
stos
sub
dec
cmp
mov
cmc
inc
rol
outs
sub
jns
ficom
enter
pop
jne
xchg
dec
and
push
dec
fs
cmp
add
inc
push
xor
inc
add
mov
mov
jp
mov
push
jno
cs
mov
dec
cmp
aad
jge
repnz
mov
aas
xchg
dec
in
add
and
je
push
in
lods
push
xor
xchg
sbb
cmp
fwait
mov
mov
mov
mov
mov
pop
clc
mov
mov
mov
xchg
and
repz
shl
add
cmp
out
jp
jmp
repnz
aaa
rcl
xor
rcl
inc
push
and
rcl
lea
fidiv
xor
or
mov
mov
lock
xchg
bound
inc
jns
iret
movs
adc
daa
pusha
jl
cwde
sti
or
cmp
push
cdq
jge
xor
stos
push
push
xchg
mov
lods
dec
pop
dec
pop
scas
cmp
jge
mov
imul
nop
cmp
xor
sbb
imul
mov
movs
jmp
pop
les
lods
jne
mov
jno
adc
div
push
in
call
sbb
xchg
loopne
aam
out
mov
sub
push
add
sbb
enter
push
ins
iret
fcom
loop
ret
dec
aam
adc
pop
cld
movs
imul
daa
mov
mov
add
aam
je
cmc
addr16
xor
in
cmps
jmp
imul
loope
add
and
add
test
test
jg
leave
popf
imul
ins
add
or
xchg
xchg
adc
pop
jge
xchg
fs
cld
sub
xor
das
scas
addr16
xorps
cmp
dec
inc
bound
jl
jmp
sub
shr
jg
dec
jae
popa
pop
int
ror
fsubr
jmp
and
test
enter
mov
(bad)
ror
stc
mov
xor
neg
sbb
not
add
and
sub
clc
mov
test
stc
test
push
mov
jmp
jno
xor
mov
pop
pmaxub
mov
rcr
dec
imul
je
rol
imul
rcr
cmp
inc
or
sbb
fsubr
push
out
lea
jmp
stc
add
jp
jno
aas
(bad)
xlat
and
cmp
jmp
adc
shr
mov
dec
pop
jmp
push
mov
retf
mov
lahf
fidivr
lock
adc
and
aaa
movs
and
ror
mov
cmp
repnz
and
sub
and
push
xor
jns
data16
fcomp
pusha
cmp
fiadd
or
cmp
push
mov
xchg
cli
jl
pop
jp
cmp
ds
sar
inc
push
fsubr
xchg
sbb
fistp
xor
xchg
cmp
iret
xor
sub
or
pop
dec
arpl
xchg
xchg
lea
push
cs
int
and
inc
cmp
sbb
push
adc
dec
dec
cmps
icebp
pop
lahf
mov
cmc
js
jno
mov
cmps
jns
sub
and
cmp
xor
loopne
icebp
outs
sbb
cld
cmp
sub
or
stos
jns
jo
push
and
xor
xor
push
or
push
sbb
mov
dec
xchg
mov
aas
jl
sbb
add
jmp
mov
sub
jno
mov
xlat
mov
(bad)
xor
dec
sbb
sahf
and
pop
sahf
jp
lock
pop
cwde
daa
cli
and
je
cmp
loope
fsubp
loop
jno
fwait
pusha
js
push
ss
and
les
enter
xchg
jle
dec
sbb
inc
fdivr
rol
lods
fld
mov
xor
cmp
jge
int3
(bad)
lahf
inc
pusha
mov
mov
je
cwde
ss
dec
mov
push
aas
xchg
xchg
stos
mov
and
xchg
xor
call
pop
mov
jo
hlt
fwait
jp
jge
das
stc
loopne
jns
scas
push
shl
ja
mov
jno
lock
fidivr
adc
fsub
aad
pusha
aam
and
iret
call
icebp
cld
fsub
fs
add
jno
jg
adc
ds
mov
(bad)
cmp
or
cmp
xchg
or
add
xor
sbb
dec
test
cmp
jno
and
scas
xchg
cmp
(bad)
jns
cmp
out
xchg
push
sub
push
pop
cmp
sbb
jl
aas
add
enter
mov
int3
lea
clc
in
push
sub
arpl
xchg
push
and
and
push
jbe
xchg
sub
adc
in
out
maskmovq
idiv
fcom
add
js
aas
popa
jge
ror
retf
and
dec
repnz
shl
xor
dec
pop
sbb
cmp
pop
dec
xchg
push
in
icebp
jbe
lods
cmp
push
leave
mov
fcomp
mov
dec
mov
mov
sub
fisttp
mov
out
mov
jl
fsubr
mov
mov
ss
inc
cmp
jns
ins
enter
ins
mov
jge
popf
lea
movs
(bad)
pop
fist
rol
das
add
adc
sub
lock
cmp
sbb
jmp
fistp
jno
push
outs
dec
call
cmp
cmp
sub
imul
jbe
jg
jns
push
sub
xchg
pop
jg
xchg
jae
retf
jnp
pop
jle
cmps
out
adc
ins
adc
mov
and
push
jl
cdq
imul
js
pop
ds
pop
jns
fisubr
or
pop
retf
sbb
mov
sbb
call
push
call
pusha
cmp
gs
enter
xor
xor
jno
enter
add
aaa
clc
xor
mov
pushf
mov
test
call
sub
clc
push
stc
das
dec
in
mov
sbb
push
dec
paddusw
scas
aam
mov
push
jns
mov
lods
pop
aas
push
jo
cmp
jmp
cmp
xchg
mov
in
enter
xchg
sbb
inc
sub
xor
in
aas
inc
add
xchg
shr
pusha
jns
call
push
push
cmp
adc
stos
mov
adc
cmp
cld
add
nop
sbb
xchg
push
inc
xor
mov
jge
sbb
and
adc
(bad)
jge
mov
pushf
mov
cmp
jge
sbb
dec
sbb
outs
dec
sub
clc
ror
test
and
xor
cmp
lock
lods
cmps
adc
and
aaa
dec
movs
mov
lods
inc
mov
cmps
cmp
cmp
pop
sub
shl
or
xor
arpl
jg
sbb
pop
xor
xchg
sub
pop
call
add
pop
mov
(bad)
mov
mov
cmp
bound
mov
mov
inc
mov
js
sub
push
add
and
adc
(bad)
xor
or
inc
sub
aad
fimul
lods
test
xor
mov
mov
adc
mov
cmp
xor
fdiv
stc
ja
sbb
adc
xor
out
pop
dec
cmp
inc
adc
movs
add
je
arpl
push
mov
cmp
add
mov
jle
out
sbb
sar
cmp
cmp
cmp
call
pusha
repnz
shl
mov
loope
adc
sbb
pop
and
movs
aas
aaa
xchg
jns
or
xor
xor
bound
pushf
and
and
sbb
cmp
or
neg
inc
mov
push
sbb
jbe
jnp
mov
pop
add
div
fnstsw
jmp
cmp
rol
pop
or
sub
pop
ror
pop
mov
jmp
and
sti
cmp
lea
shl
mov
stos
mov
xchg
aad
or
or
pop
push
jg
not
and
clc
xchg
inc
scas
xor
cmp
cdq
jno
mov
or
ds
imul
and
push
dec
aas
mov
dec
jno
pshufw
adc
lea
jg
icebp
and
shl
out
add
fdiv
jmp
xor
xlat
pop
jl
jl
pop
pop
stc
mov
jl
jbe
pop
jge
je
aaa
xchg
push
jge
ret
inc
pop
lds
mov
cwde
mov
mov
mov
pop
xlat
push
mov
icebp
mov
scas
cmp
loope
and
xchg
pop
pop
push
fs
in
ss
pop
add
in
mul
pop
cld
into
inc
adc
sub
lods
push
jle
xchg
xor
mov
mov
sahf
cmp
stos
mov
xchg
mov
loop
push
and
loopne
jo
pop
push
rcl
cmp
jne
xchg
push
pop
test
in
fwait
ins
(bad)
xor
sub
daa
in
scas
scas
clc
pusha
push
xchg
outs
ins
imul
retf
fsubr
cwde
(bad)
mov
push
dec
mov
xor
fimul
stc
and
addr16
jecxz
lahf
jno
clc
movs
inc
mov
rcr
dec
jne
and
test
mov
pop
out
jno
popa
fdivr
das
push
movs
mov
nop
bnd
fistp
inc
pop
push
sub
lock
jno
aam
jp
(bad)
lods
sbb
add
pop
mov
cdq
sti
sub
or
out
in
test
sub
adc
mov
pusha
and
stos
aaa
jl
cmp
js
mov
mov
sar
push
dec
jl
stos
cld
sub
sub
xor
ins
and
adc
pop
mov
xor
cmp
mov
jl
add
inc
pop
xchg
js
ins
pop
int3
mov
dec
lods
(bad)
aas
jno
push
aas
mov
fsub
sub
pop
push
or
inc
shl
sbb
mov
cmp
xlat
xchg
cmp
and
sub
adc
xchg
neg
mov
sub
ret
je
push
or
push
pop
lods
int3
adc
push
fldcw
add
test
pop
hlt
lock
sub
mov
mov
pop
dec
add
pop
xor
sub
cld
push
inc
ds
neg
jp
fcmovnbe
ja
jno
xchg
pop
sahf
mov
adc
rol
sar
dec
dec
lock
push
pop
adc
mov
fcomp
adc
pop
mov
jg
and
sbb
imul
mov
jns
inc
xor
fidiv
ins
and
dec
fldcw
cwde
hlt
lds
nop
in
and
jno
mov
mov
mov
jle
imul
pop
mov
je
mov
mov
mov
push
and
jle
je
jmp
fcomp
cmp
push
xchg
fdivrp
mov
cdq
mov
stos
or
sbb
cmp
scas
push
aaa
scas
nop
pop
sub
fs
mov
mov
pop
mov
cmp
clc
loope
sar
pop
cmps
fdivr
mov
xor
xchg
rcr
std
push
fdiv
sub
fdiv
mov
movs
test
pusha
cmp
xor
cmp
cmp
mov
call
jp
jno
pushf
bnd
enter
mov
pushf
fwait
sbb
mov
(bad)
and
cld
add
lods
or
dec
xlat
stos
push
daa
xchg
adc
xchg
cmp
cmps
dec
xor
fsubr
mov
jns
add
push
aas
dec
sub
jmp
cmp
or
pop
test
inc
push
lea
fdivr
stos
xchg
and
imul
adc
and
int3
cmp
and
or
sbb
shl
pop
nop
js
and
es
stc
jp
(bad)
xor
mov
dec
mov
int
xchg
xlat
popf
gs
adc
adc
adc
jnp
inc
sbb
sub
mov
mov
push
mov
mov
dec
jns
pop
out
pop
xchg
das
adc
jp
cmp
(bad)
mov
in
lods
(bad)
xchg
ficom
xor
cmp
cmp
cmps
pop
or
inc
pop
fnstcw
pop
and
xor
sbb
popa
pop
ds
sub
xbegin
movs
je
mov
cwde
inc
xchg
mov
outs
push
jns
sbb
inc
sbb
cld
jbe
jge
pop
out
push
scas
pusha
idiv
push
fistp
(bad)
cmc
pop
push
add
popf
pop
sub
dec
mov
movs
in
inc
mov
(bad)
adc
cmp
imul
jne
jle
ins
cmp
dec
sbb
cmc
mov
dec
cmp
enter
inc
aas
(bad)
aam
jmp
retf
rcl
mov
cld
mov
xor
mov
aas
call
adc
fs
ds
mov
lods
jl
xor
cmp
(bad)
cmp
push
aas
fsub
mov
aam
mov
lahf
out
aaa
pop
js
inc
mov
mov
sub
stos
jg
adc
cmp
cmp
add
mul
mov
sbb
xor
and
or
lahf
adc
dec
lahf
mov
sbb
(bad)
and
xchg
push
gs
clc
fs
sub
je
shl
add
sub
hlt
or
mov
pop
je
scas
sbb
push
sar
repz
fisttp
adc
add
mov
pushf
mov
sub
mov
jno
imul
fld
jle
push
(bad)
cmp
jge
aaa
mov
cwde
inc
mov
mov
ror
and
lods
es
adc
test
pop
mov
test
sbb
push
js
aam
faddp
jae
nop
movs
loope
call
shl
xchg
push
or
repnz
cmp
push
push
enter
(bad)
mov
mov
sub
ror
xchg
sahf
shl
pop
cmp
sub
bndstx
mov
xchg
mov
jb
and
inc
inc
jl
jge
cwde
xor
sbb
mov
jbe
cs
dec
fwait
iret
mov
adc
jno
cwde
mov
sub
data16
cmp
sahf
mov
add
inc
lods
movs
mov
sbb
lods
outs
jg
iret
cmp
inc
lahf
cli
xchg
stos
loop
je
lahf
sub
pop
jno
cmp
pop
cld
shl
xor
jns
jo
ins
sbb
pop
test
xor
cmp
jmp
cmp
pop
xor
cmc
sub
xor
pop
sbb
push
sub
adc
mov
adc
imul
and
add
out
stos
fwait
dec
sbb
loopne
div
cmp
(bad)
cld
or
out
lods
jmp
add
cld
imul
int3
xor
call
lods
mov
push
mov
adc
call
imul
mov
jns
xor
and
mov
mov
sar
mov
cld
adc
jl
push
shl
mov
pusha
fiadd
jne
nop
inc
push
lods
jo
inc
hlt
ja
(bad)
sbb
jno
and
pop
mov
mov
cmps
and
mov
pop
push
mov
pop
cmp
sub
sbb
(bad)
xor
aas
mov
cmp
push
push
xchg
daa
sahf
aas
xor
int3
and
notrack
dec
pop
aaa
and
stc
lea
in
and
int
cmp
ins
jno
jo
inc
cmp
jmp
sahf
out
inc
sub
xchg
sbb
mov
xchg
in
and
xor
(bad)
sub
push
fadd
jmp
ja
js
pop
ja
jns
jns
in
sbb
(bad)
fnstenv
aaa
iret
mov
stos
mov
mov
add
xchg
jmp
ins
push
les
cmps
cmp
jecxz
es
cmp
loopne
adc
scas
cmp
inc
or
nop
pop
idiv
push
rcl
ds
adc
(bad)
pop
out
cmp
xchg
adc
fwait
cs
outs
dec
lea
stos
jmp
jb
divps
cwde
add
fwait
(bad)
jns
and
fistp
imul
mov
jl
xor
cmp
mov
jnp
aaa
mov
dec
fsub
xchg
jmp
or
setg
popa
rcl
cwde
add
cld
or
outs
dec
das
je
push
not
aas
out
add
mov
and
aas
cld
adc
mov
pop
hlt
(bad)
cli
xor
add
leave
inc
dec
mov
callw
punpckhwd
and
fild
retf
mov
aam
sub
pop
cs
test
jmp
add
ficom
mov
jno
mov
mov
ret
mov
mov
dec
mov
cmp
loopne
xlat
and
pop
push
cmp
sbb
mov
sub
mov
sbb
dec
je
(bad)
cmp
cmp
jge
mov
(bad)
push
pop
push
and
pop
inc
push
or
or
mov
cs
jno
int
je
sub
popa
mov
sub
mov
jno
jle
std
adc
jb
add
jne
fistp
in
gs
jne
stos
adc
fistp
ins
jb
aas
(bad)
xchg
jl
add
mov
mov
xchg
add
out
push
jo
aas
inc
or
cmp
out
sub
aas
sahf
imul
(bad)
addr16
sub
mov
jns
pusha
fnstcw
jl
scas
test
dec
xchg
scas
dec
inc
cmp
psrad
dec
xchg
shl
mov
fsubr
popa
pop
sbb
aam
pop
mov
sbb
stc
dec
or
xchg
hlt
and
xor
sti
icebp
jle
cmps
add
mov
mov
or
lahf
test
xor
imul
add
arpl
je
xchg
repnz
mov
dec
and
enter
js
push
pop
ins
inc
cdq
clc
add
sti
push
xchg
push
addr16
jno
add
add
inc
mov
fsub
sub
shr
in
fsub
and
pop
stc
xor
test
fimul
inc
xchg
out
js
jno
and
outs
outs
les
(bad)
sub
pop
sbb
add
aas
jns
jo
cld
lea
or
mov
sub
fwait
shl
mov
jl
mov
rcr
adc
cmp
call
xor
sub
pop
rcl
leave
jp
push
xchg
add
and
mov
loopne
jl
sbb
push
mov
(bad)
call
push
cli
std
sbb
fst
pop
mov
xchg
dec
mov
dec
push
jmp
retf
jns
js
xchg
cs
push
push
std
loopne
fidiv
jne
xchg
sub
fwait
scas
and
xor
sahf
cmp
adc
cmp
push
xchg
cmp
xor
adc
sub
ja
cmp
push
mov
lock
mov
mov
mov
mov
test
pusha
mov
nop
sti
jle
sbb
and
adc
inc
cmp
jg
mov
push
xor
jno
mov
xor
scas
pop
js
retf
cmp
repz
leave
push
dec
sar
fldenv
and
jno
ds
sbb
dec
icebp
mov
sbb
add
sub
cmp
loopne
inc
fnstenv
ins
mov
pop
mov
shl
mov
mov
clc
mov
pop
pop
icebp
(bad)
jns
popf
shl
xchg
popa
fdiv
rcr
mov
mov
jno
jle
(bad)
fisubr
push
lock
daa
out
push
adc
cmp
mov
add
xchg
jno
push
sbb
push
sbb
out
xchg
mov
bound
jns
stc
icebp
add
retf
xchg
cmc
in
jbe
add
or
mov
icebp
mov
adc
jae
icebp
pop
xor
dec
int3
dec
dec
imul
cmp
cli
xchg
add
sbb
pusha
icebp
lea
frstor
xor
xor
inc
xor
push
sub
mov
bound
xchg
and
mov
jg
add
adc
pop
les
scas
dec
clc
arpl
pusha
jno
and
cmp
fist
jns
lods
jl
mov
jge
outs
pusha
js
rcr
or
add
mov
xor
popa
jns
cmc
jns
jmp
into
cmp
jbe
xchg
popf
inc
sbb
pop
stos
fnstenv
xor
jge
outs
mov
(bad)
cmps
xor
sub
(bad)
aas
sub
ins
pushf
jne
cmp
mov
aaa
xor
cli
or
jbe
dec
(bad)
ins
xor
not
push
loope
xor
xchg
adc
retf
mov
cmp
and
std
ins
add
mov
cmp
loop
clc
xor
push
jno
jo
call
mov
push
mov
popa
sbb
mov
jno
mov
and
gs
xor
xor
cmp
jns
test
fistp
test
(bad)
pop
or
or
icebp
cmp
sub
adc
ja
loopne
cli
cmc
push
sbb
xor
aas
ret
imul
xchg
and
inc
cmp
cmp
xor
jns
movs
movntps
adc
jno
lods
std
jle
jae
test
fisub
or
retf
adc
sbb
pop
inc
mov
xor
imul
mov
mov
fs
(bad)
in
and
stc
and
push
into
push
and
sbb
jmp
sbb
rcl
sub
ja
fst
push
pop
pop
(bad)
xor
mov
je
pusha
or
and
sub
cmps
stos
dec
stc
cmp
adc
dec
int
mov
sbb
icebp
pop
xor
imul
xor
adc
les
outs
sbb
mov
mov
jns
jno
adc
lods
cwde
sbb
dec
add
jge
jmp
mov
pop
rol
fsubrp
rcr
adc
jle
lods
xor
js
jno
adc
adc
fs
(bad)
pop
movs
mov
lods
xor
stc
sbb
mov
rcl
out
xor
xchg
out
mov
inc
mov
push
fcom
fdivr
adc
or
mov
stos
les
adc
jns
dec
shl
movs
movs
mov
test
cmp
icebp
cmp
leave
cmp
add
cmc
sbb
repnz
fadd
jge
add
data16
xchg
or
aas
fnstsw
jge
push
push
fstp
adc
jp
ret
clc
repnz
call
daa
pushf
ins
sub
fild
(bad)
pushf
adc
xchg
imul
jo
pop
jb
dec
adc
xor
sbb
test
div
xchg
imul
pop
pop
cmps
out
call
or
xor
jno
jmp
mov
xchg
or
ins
mov
adc
cmp
gs
push
dec
iret
test
and
jns
sub
add
in
xor
movs
(bad)
hlt
jecxz
leave
ret
pop
out
fild
xor
cmp
xchg
xor
imul
addr16
sbb
call
push
fdiv
jmp
imul
inc
or
inc
mov
cmp
jl
pusha
push
jb
mov
stos
sbb
push
pusha
call
jmp
pop
cmp
add
mov
leave
and
fistp
mov
mov
cmp
xchg
sbb
pop
cmps
cmp
imul
push
mov
push
and
aas
(bad)
mov
das
imul
inc
imul
mov
cmp
test
daa
enter
mov
xchg
xor
jns
mov
pop
lds
cmp
pop
push
int3
bnd
test
pop
(bad)
pop
bound
push
pop
hlt
sub
adc
mov
mov
inc
pop
sub
mov
fistp
clc
xchg
je
mov
hlt
dec
mov
call
(bad)
retf
sbb
pushf
or
mov
jbe
mov
ret
pop
lahf
pusha
jno
sub
mov
xor
fst
movs
xor
pusha
into
sub
rcr
jbe
xchg
retf
lea
jnp
pushf
push
ds
adc
jle
jo
mov
and
mov
jbe
mov
gs
ins
adc
pop
cmp
jmp
sbb
js
or
jge
ror
sbb
cmp
push
xchg
mov
call
sbb
in
pop
loopne
in
popa
cmp
pop
jno
jne
dec
mov
mov
inc
mov
xor
push
mov
mov
sar
lock
inc
sub
jge
adc
jbe
(bad)
repz
fild
push
popw
fsubr
pop
ror
push
push
mov
pop
not
jno
add
cdq
(bad)
jl
test
xchg
pop
stos
sbb
das
call
mov
jp
fmul
inc
jp
mov
mov
xchg
ds
cmp
cmp
daa
add
adc
mov
adc
jno
cmps
adc
cwde
push
fimul
sbb
cmp
or
jns
rcl
pushaw
jbe
adc
sub
jno
and
lea
imul
fist
sahf
outs
jns
lock
pop
mov
push
xor
pop
xchg
sbb
ja
leave
add
mov
mov
sub
stos
and
pusha
data16
mov
and
sub
stos
mov
or
and
push
ds
cmp
xor
add
nop
jg
adc
cmp
sub
call
add
loopne
scas
xlat
popf
dec
push
repz
jno
mul
add
mov
xchg
stos
leave
test
ret
mov
mov
and
inc
push
mov
push
cmp
sti
mov
adc
js
jns
cmp
fs
into
(bad)
sub
fld
mov
mov
cmp
or
(bad)
loope
pop
lods
fcomp
sub
pop
ds
dec
sub
lock
loopne
push
into
push
call
mov
dec
mov
clc
jns
cmp
sbb
sbb
jno
mov
and
cmp
popa
movs
or
out
ficomp
xlat
push
mov
arpl
or
xchg
xor
dec
mov
mov
add
leave
popa
lods
pop
jp
jns
ja
xchg
fild
fadd
inc
repnz
push
cmp
adc
shr
mov
sbb
jp
mov
lock
jbe
push
or
stc
mov
add
jmp
cmps
icebp
neg
sbb
mov
stos
add
xchg
mov
push
ds
dec
leave
push
xor
dec
mov
jno
(bad)
mov
scas
pop
mov
cmp
dec
test
jge
pusha
test
ins
fcomp
sbb
fidiv
jecxz
sahf
mov
xlat
dec
in
scas
xor
add
pop
xor
mov
repnz
je
cmp
movs
jmp
pusha
addr16
xchg
scas
xor
pop
adc
sar
jo
lods
imul
maskmovq
test
mov
test
push
je
popa
dec
push
sbb
ins
dec
pop
add
mov
sbb
cmps
jge
aas
dec
test
push
cdq
nop
loop
je
aas
push
mov
cmps
xor
ds
push
mov
fistp
in
jne
dec
jmp
nop
notrack
loopne
cmp
enter
mov
jno
leave
je
cmps
out
nop
add
jo
ins
jle
pop
mov
dec
fdivr
pop
ss
xchg
shl
dec
jmp
mov
pushf
fiadd
retf
mov
jg
sbb
push
std
or
daa
hlt
call
push
lahf
dec
push
cmp
xor
cmp
loop
jno
xor
mov
ret
mov
add
rol
xchg
out
leave
ror
ds
jle
dec
xor
mov
adc
aam
push
and
jmp
stos
or
xor
imul
iret
fldenv
mov
pop
loope
mov
pusha
add
out
push
ret
sbb
xchg
cmp
mov
js
cli
stc
cdq
fidiv
xor
sbb
mov
popa
mov
mov
cmp
and
dec
add
cmp
jp
jns
lods
fs
mov
dec
mov
jg
data16
mov
xor
in
lods
inc
cmc
fisubr
retf
inc
call
and
fwait
mov
das
out
mov
in
aas
sbb
sti
cmp
cmp
clc
push
sbb
jge
ds
add
jl
movs
stc
nop
cwde
fistp
mov
retf
xchg
es
inc
jmp
dec
pop
fisubr
cmp
neg
cwde
stos
add
inc
lods
mov
pop
dec
mov
fild
adc
jmp
in
sub
lahf
(bad)
repnz
xor
inc
les
inc
xor
aas
jle
lods
pop
mov
adc
icebp
cmp
xchg
sub
in
and
leave
cmp
sub
js
fdivr
xchg
daa
fs
fwait
xchg
pop
test
mov
mov
xchg
jl
mov
mov
cli
mov
ficom
pop
xor
xor
cmp
cwde
jns
mov
mov
xchg
cmp
rcr
stos
and
loope
bound
cmp
idiv
stos
push
mov
add
cmp
jbe
xchg
jns
pop
mov
dec
sub
cmp
nop
rcl
sub
mov
xchg
jns
jge
pushf
sbb
jo
cmp
hlt
fs
jle
fbstp
mov
cmps
or
mov
call
sub
lock
pop
aas
mov
sub
ins
sahf
addr16
cmp
loop
call
sub
xor
jns
fisubr
hlt
push
jns
(bad)
call
jg
retf
or
dec
movs
cmp
nop
pushw
sbb
or
dec
js
jp
jns
jmp
xchg
jge
outs
out
mov
mov
fdiv
sub
call
sub
test
add
rol
fistp
or
xchg
push
cmp
clc
mov
mov
aas
(bad)
sbb
push
jmp
pop
mov
ret
pop
cmovp
aam
jmp
lods
sub
fs
pop
mov
push
jns
xor
(bad)
stos
push
sar
sbb
fdivr
xchg
jns
pushf
rol
hlt
adc
int
data16
in
pop
jbe
xor
and
inc
ins
push
jmp
adc
repz
inc
mov
ins
jno
ins
sub
pop
push
mov
cmp
bound
jge
and
cmp
and
add
pushf
adc
pop
sub
cmp
cmp
aas
dec
sbb
nop
imul
cmc
mov
and
jno
fnstenv
pop
sub
bound
ret
pop
sbb
sti
add
aam
loopne
cmps
sti
mov
mov
dec
aaa
fs
fsubr
and
dec
fcmovnbe
cld
dec
psllw
pop
sahf
mov
jge
or
(bad)
fwait
jb
test
retf
cmps
adc
fwait
and
sub
adc
adc
push
scas
outs
sbb
les
in
add
ja
adc
sti
push
imul
push
pop
retf
mov
pop
push
jno
sbb
aas
repnz
into
mov
mov
pop
lock
push
fdivr
sbb
push
xor
and
mov
pop
ds
into
fs
mov
and
daa
mov
sti
and
mov
je
stc
fbld
out
jp
(bad)
loopne
dec
ds
jle
in
inc
mov
imul
push
xor
and
sbb
sar
pop
mov
or
je
and
lods
sub
xor
bound
sub
pop
xchg
mov
xchg
sbb
xor
shl
aaa
pop
aas
test
pop
retf
bnd
push
inc
jns
sbb
sbb
pop
out
rcl
ds
cdq
ins
or
lods
cmps
cmp
shl
adc
mov
out
and
fsubr
cmp
adc
adc
jb
mov
pop
xor
add
scas
jno
lods
fild
sub
movs
or
inc
sub
cmp
stos
mov
fistp
fnstcw
and
sahf
cmp
jge
xor
adc
je
sar
xchg
out
mov
das
enter
and
xor
jno
inc
dec
pop
jo
sahf
xchg
mov
lods
dec
mov
mov
jae
mov
les
xor
and
sti
call
(bad)
mov
(bad)
push
xor
ds
in
push
dec
or
bound
sub
jg
mov
mov
jo
mov
dec
pop
popa
shl
xchg
cmp
push
jecxz
inc
and
xchg
ret
add
rcl
loopne
in
sbb
xchg
call
xor
add
(bad)
sub
fimul
mov
mov
add
jge
add
push
jno
jmp
data16
pop
mov
cmp
pop
mov
shl
add
popa
mov
jp
inc
aas
es
sbb
jg
adc
(bad)
out
sub
ss
in
cmc
jb
sub
adc
adc
jb
inc
rol
aad
mov
retf
call
jge
data16
int3
push
sbb
cmp
jno
imul
pusha
pop
xchg
test
jl
pop
mov
in
xor
xlat
stos
call
movs
jae
std
xlat
fs
sbb
fnstsw
sahf
sub
nop
pushf
nop
add
lods
mov
into
and
outs
ds
xchg
jns
icebp
shr
and
xor
in
ds
test
cmp
sti
dec
in
bound
add
mov
mov
ss
test
mov
jge
daa
pop
retf
leave
test
jne
jo
cs
pop
sub
arpl
into
adc
xchg
into
loopne
stos
mov
fdivr
xor
sub
aam
mov
push
pusha
sbb
cmp
aad
cmp
add
enter
jecxz
mov
into
retf
outs
ins
xchg
xchg
cmp
je
pop
adc
lock
cli
scas
ja
jns
test
rcl
outs
xchg
aaa
(bad)
test
movs
and
sbb
jno
jl
mov
pop
xlat
popf
jecxz
inc
sar
leave
mov
and
mov
jne
in
jb
or
pusha
mov
jae
ret
stos
xchg
cmp
aas
push
into
cmc
retf
jg
popf
mov
xchg
fidivr
in
or
dec
mov
mov
imul
or
xchg
les
jb
lds
cmps
mov
cld
push
push
cmp
aaa
dec
jns
cld
push
in
je
ds
jge
test
sbb
mov
stos
pavgb
arpl
xchg
and
mov
dec
int3
mov
in
adc
jmp
xchg
mov
call
je
mov
cmc
jns
push
(bad)
loopne
xchg
or
arpl
loopne
adc
add
mov
cmp
mov
jae
cmp
enter
loopne
sbb
loop
cmp
in
pop
sub
pop
cmp
(bad)
int
push
stos
fdiv
jns
outs
sar
je
lock
add
scas
cmc
inc
clc
js
fmul
jns
in
and
adc
stos
sbb
cmp
jno
jg
ds
dec
cmp
xchg
lds
inc
sbb
pop
xor
xchg
ins
mov
jl
jg
pop
push
cmp
pop
xlat
mov
adc
int3
lods
cwde
jp
jns
int
jae
stc
pop
outs
mov
dec
push
mov
mov
gs
retf
and
out
pusha
jb
jbe
shl
pop
and
cmc
push
ss
jg
mov
push
jns
in
nop
jecxz
xchg
jg
mov
cdq
push
add
or
scas
iret
push
jl
and
pop
xlat
into
mov
ds
sbb
inc
shr
hlt
sub
mov
xchg
outs
mul
push
xor
vpunpckhbw
push
pop
adc
mov
mov
icebp
stc
mov
enter
mov
les
xchg
push
inc
repnz
call
push
jmp
enter
repz
sti
dec
add
mov
inc
ins
loopne
add
retf
retf
stc
cmp
xor
push
push
fisubr
pop
cmp
data16
cmp
jb
cmp
cmps
inc
xchg
fld
adc
in
xchg
ds
aam
dec
sub
in
inc
cmc
dec
xchg
jle
dec
and
jmp
inc
icebp
jecxz
imul
jg
mov
out
push
inc
xor
pop
inc
fwait
mov
cmp
adc
cmp
jmp
lea
pushf
mov
adc
pusha
fadd
pop
div
(bad)
mov
jae
sbb
or
or
inc
clc
retf
inc
cs
mov
cmps
lea
and
sub
jl
dec
mov
pusha
lods
adc
inc
das
mov
mov
cmp
lock
rol
(bad)
retf
sbb
adc
imul
add
pop
cs
ds
or
inc
ficom
cmp
inc
and
into
cld
stc
out
mov
push
in
ret
cmp
sbb
adc
scas
mov
rcl
ds
inc
xlat
iret
push
in
rcl
jns
or
sbb
or
icebp
dec
neg
add
push
cwde
inc
call
outs
inc
call
pop
add
add
aad
scas
xor
jnp
adc
mov
cmp
sbb
inc
cmp
je
jno
jbe
jns
fdivr
scas
jbe
ins
ins
mov
sub
shr
and
mov
xchg
cmps
(bad)
mov
sub
jnp
adc
or
pop
outs
inc
sbb
mov
ins
jo
dec
aas
push
mov
scas
push
pop
fidiv
sub
sub
mov
cmp
aaa
ret
inc
cmp
call
add
xor
fs
lods
jl
and
jno
out
hlt
stc
cmp
push
mov
cwde
cmp
pop
gs
pop
jge
(bad)
clc
mov
mov
test
push
or
int
and
xchg
push
out
sub
ret
cmp
or
mov
or
add
pop
jge
xor
xor
jl
sub
mov
or
fs
xor
jne
sahf
pop
cmp
cmps
sbb
jecxz
pop
std
cmp
mov
mov
imul
sbb
fcom
jns
pop
jge
neg
cmp
add
jmp
inc
add
cmp
cmp
mov
adc
sbb
pop
nop
jecxz
cdq
rol
lahf
cmp
fsub
jno
push
jb
fwait
xchg
xor
sbb
and
jo
xchg
call
jno
test
mov
cmps
(bad)
cmp
mov
sub
cmp
jge
aad
in
inc
jno
pop
push
or
sbb
sub
sub
jg
mov
jg
cmp
sub
js
dec
in
sbb
outs
cwde
mov
repz
outs
(bad)
sbb
push
dec
icebp
je
mov
out
mov
adc
add
mov
xchg
adc
repz
mov
push
jmp
mov
mov
cmp
fidiv
jns
jbe
push
dec
arpl
jecxz
out
add
sub
push
dec
ins
mov
(bad)
and
jns
mov
je
les
mov
dec
jno
rcl
and
loope
xor
mov
sub
jmp
xor
stos
jb
sub
dec
adc
repz
or
les
inc
mov
in
pop
rcr
cmp
call
mov
pop
je
cmp
pop
fdiv
(bad)
(bad)
jge
and
mov
jb
cmp
jg
jne
imul
scas
add
push
out
sub
call
mov
jg
ja
mov
je
mov
out
inc
jb
cdq
dec
push
shl
pusha
inc
sti
les
rol
add
jns
xchg
mov
jno
jo
imul
mov
cmp
cs
test
push
inc
cmps
add
xchg
mov
mov
push
(bad)
push
mov
arpl
adc
mov
in
fwait
mov
mov
or
test
jge
sub
shl
std
cmp
adc
sub
in
and
or
xor
mov
xchg
outs
js
std
cmp
jge
js
bound
mov
pop
scas
lods
ds
repnz
je
sahf
mov
push
push
sub
(bad)
mov
das
sub
loopne
xor
pop
add
ss
dec
mov
jns
cmp
(bad)
dec
pop
and
(bad)
mov
int3
in
shl
rol
adc
imul
into
aam
fcmovu
not
and
stos
inc
sub
pop
jle
jbe
aas
cmp
push
clc
outs
pusha
xor
ins
dec
mov
test
test
out
xor
icebp
jp
adc
cmps
mov
mov
mul
data16
js
cmp
and
dec
repz
pop
push
push
out
mov
sub
fdivr
faddp
fs
sbb
cli
aam
jae
xchg
mov
xor
sbb
sub
retf
inc
js
pop
pushf
mov
sbb
and
jp
mov
aas
aaa
test
sbb
ss
(bad)
aad
(bad)
jle
inc
aas
mov
cmp
enter
clc
mov
imul
ds
and
aas
sahf
cmps
daa
xchg
aad
jno
(bad)
in
ds
xor
inc
jnp
cmp
adc
push
xor
data16
xor
mov
inc
fwait
aas
and
xor
idiv
adc
rol
push
or
xchg
jae
data16
fadd
pop
or
cmc
and
clc
pcmpeqd
mov
je
add
jne
ds
ja
pop
std
cli
push
mov
cmp
push
xchg
(bad)
pop
xor
ja
jecxz
jo
xchg
inc
sbb
aas
ss
repnz
add
push
stos
test
mov
pop
sub
inc
xor
imul
pop
or
cs
fcomi
sub
dec
out
mov
in
adc
mov
mov
pop
ss
leave
add
inc
sahf
inc
neg
out
ins
xchg
dec
cmp
pop
ds
cli
xchg
mov
jnp
js
jmp
xchg
inc
sub
push
cmp
mov
aas
adc
adc
and
inc
cmp
in
icebp
sbb
sub
inc
repz
push
inc
add
lea
sbb
push
neg
sahf
stos
add
test
test
out
pusha
mov
cmps
int
js
out
push
test
pop
adc
outs
repnz
lds
es
push
mov
and
cs
mov
xor
add
mov
fs
mov
xchg
mov
cmp
cmps
xor
inc
xchg
cmp
addr16
test
and
mov
outs
mov
mov
inc
clc
push
les
fwait
mov
pop
(bad)
enter
push
mov
cmc
cmc
and
out
xor
rcl
cmc
hlt
(bad)
sbb
add
test
dec
add
(bad)
aas
shl
sbb
add
jl
ja
push
out
das
fwait
pusha
cmp
or
xor
nop
rcr
xor
(bad)
xor
jle
jae
test
dec
nop
sbb
sti
call
xchg
add
mov
(bad)
enter
sar
repnz
shl
fisubr
xchg
cdq
inc
and
mov
jb
and
aaa
leave
test
jns
je
sub
sub
cmp
adc
mov
mov
or
sbb
int3
cmp
stc
cmp
sub
cmp
call
movs
xor
inc
pushf
xor
mov
cmp
(bad)
cmc
cmp
xor
sub
icebp
xchg
jae
cmps
ds
xor
cmps
jbe
hlt
cmp
out
aas
mov
add
jo
jo
push
js
xchg
(bad)
test
lahf
clc
or
cld
mov
cmp
add
cmp
mov
retf
addr16
jo
sbb
xor
mov
pop
cmp
clc
les
(bad)
jge
cmp
cs
add
add
adc
xor
out
hlt
outs
xor
and
cmp
sbb
pushf
pop
clc
add
xlat
lods
mov
xchg
inc
mov
mov
or
das
fsubr
mov
jnp
cmp
clc
mov
add
or
fld
fadd
cmp
fstp
test
xchg
mov
fucomip
pop
pushf
xor
mov
push
fbstp
mov
cmp
ja
lahf
ds
mov
and
movs
pop
outs
and
cli
imul
mov
inc
lods
rcr
lahf
jle
push
cmp
pop
cli
jp
jae
imul
std
sub
inc
push
jo
pop
sbb
pop
push
nop
jg
add
fwait
cwde
pop
inc
push
jle
jg
test
idiv
sbb
sbb
sbb
and
scas
cmp
cmp
jp
jbe
mov
jnp
ins
dec
(bad)
(bad)
(bad)
pop
repnz
push
(bad)
(bad)
fwait
mov
inc
fwait
jle
jnp
cmp
sbb
in
add
cld
push
inc
test
sbb
sar
icebp
fcomp
cmp
cmp
fdivr
and
sbb
popf
in
jg
(bad)
jae
scas
jp
aas
je
retf
outs
push
shl
pop
dec
dec
and
pusha
cmp
pop
into
jge
and
or
inc
xor
xor
mov
mov
jne
mov
inc
cmp
mov
push
int3
fs
mov
fstp
pop
fsub
jl
cmp
jns
lds
and
adc
iret
xor
push
jb
test
fcmovnb
popa
lods
fld
jns
cs
adc
xlat
or
pushf
stc
jp
xlat
fs
mov
mov
or
dec
mov
lahf
mov
xchg
iret
add
jns
imul
mov
cli
ds
push
push
dec
mov
(bad)
jge
add
cmps
jl
popa
sub
mov
mov
sti
xchg
ds
fist
pop
je
jge
arpl
sbb
xor
pusha
and
cmp
xchg
loopne
or
inc
cmps
or
jno
inc
push
mov
jno
(bad)
clc
or
push
(bad)
xchg
mov
cmp
mov
pop
je
cmp
mov
inc
sub
int
push
les
or
xor
repnz
jno
push
push
mov
jg
add
cld
sub
mov
and
addr16
in
dec
inc
xchg
in
in
pop
cmp
push
sub
jl
inc
fcomp
jmp
or
cmc
and
fisttp
loopne
(bad)
fnstsw
sub
xor
and
jns
and
mov
jns
test
xchg
call
sbb
mov
scas
push
lahf
mov
cmp
enter
and
sbb
shl
js
push
retf
btr
ins
mov
jecxz
jl
int
pop
mov
cdq
inc
xor
or
push
hlt
inc
add
js
mov
fiadd
mov
add
fdivr
(bad)
mov
sbb
mov
clc
pop
aas
inc
cmp
int
cmp
in
mov
dec
repnz
mov
loope
jl
cmp
xchg
pop
jns
dec
outs
sub
pop
push
(bad)
jne
or
rcl
mov
test
push
xchg
dec
jno
es
adc
out
nop
push
lods
sbb
addr16
mov
and
in
pop
xor
add
xor
aas
sahf
pusha
cwde
bound
fldenv
xor
aas
je
jmp
add
xchg
xchg
pop
xor
or
idiv
mov
test
pop
xchg
pop
jns
in
repz
pop
sbb
aad
adc
jle
sbb
jno
push
jae
popa
test
mov
sub
enter
dec
or
pusha
xor
rcl
dec
sbb
cli
cmp
xor
fbld
sbb
lods
xor
adc
stc
or
xchg
mov
pusha
xchg
push
pusha
pop
(bad)
cmp
dec
adc
jo
cmp
ret
pop
push
inc
lahf
pop
in
mov
call
cmc
in
(bad)
inc
pop
mov
in
sti
mov
inc
jb
(bad)
popa
shl
inc
lds
sbb
mov
adc
and
lods
(bad)
std
jmp
push
aaa
inc
cmc
adc
sub
push
sbb
pop
sub
std
fadd
movs
and
sbb
adc
out
jnp
jae
cmp
xchg
push
nop
xlat
adc
push
inc
xchg
pop
sbb
sbb
es
mov
inc
ficom
inc
rol
xchg
retf
hlt
pop
jo
mov
loope
fld
pop
ror
aad
cmp
inc
cmp
das
jle
or
into
mov
jp
jo
(bad)
aam
fs
xor
ins
jl
popf
inc
mov
cmp
loop
inc
push
xchg
dec
scas
cli
xchg
les
xlat
push
dec
jl
movs
loope
and
call
inc
sub
and
push
mov
mov
mov
push
ins
inc
in
call
add
outs
jge
mov
inc
xor
loop
popf
cmps
mov
pop
and
rcl
pushf
lods
add
mov
ja
inc
movs
push
and
hlt
xor
leave
pop
mov
fdivr
add
jmp
lahf
ja
int3
xchg
inc
les
and
xchg
pusha
rcr
jmp
inc
daa
dec
inc
xchg
adc
aas
ds
inc
aam
das
fmul
and
pop
loopne
pop
mov
bound
aad
mov
add
or
xor
xchg
push
arpl
cli
aaa
cmp
ss
dec
sub
inc
aam
cmp
shr
enter
ret
ffreep
jle
cmc
aaa
sbb
inc
ret
test
inc
push
add
push
jmp
push
or
lea
or
fs
sar
cld
stos
cmp
ins
xchg
sbb
clc
stc
cmp
push
xor
xchg
cmc
shl
ffree
test
js
mov
inc
cli
retf
retf
cmp
call
adc
(bad)
jns
xchg
ds
js
jno
lahf
mov
ds
outs
arpl
mov
mov
sbb
movs
and
es
inc
jg
sbb
jp
fisttp
popf
jp
fs
and
dec
xchg
int
jecxz
lahf
outs
fadd
movs
test
cmp
cmp
and
sar
pushf
sbb
js
sub
call
dec
jge
xchg
test
mov
mov
pop
into
scas
mov
sub
pop
or
cmp
mov
cmp
adc
fdivr
sbb
xchg
mov
jecxz
aas
stc
push
sbb
and
jmp
and
pushf
push
in
and
inc
pop
cli
mov
(bad)
out
(bad)
repnz
jns
icebp
mov
lahf
mov
(bad)
or
fs
add
dec
test
dec
jecxz
cmp
dec
nop
push
mov
fsubr
clc
add
test
sbb
mov
out
es
loopne
mov
cmp
je
xchg
cmp
cld
cmp
cmp
mov
js
push
aam
and
pusha
mov
jnp
adc
sub
dec
bound
cmp
jns
test
idiv
data16
jns
retf
fxch
push
pusha
push
aam
imul
dec
dec
(bad)
rcr
call
fmul
add
pop
dec
cli
jmp
adc
lods
mov
in
xor
mov
fidiv
das
aas
or
ds
js
stc
pop
mov
mov
dec
pop
xchg
repz
mov
aas
xor
mov
cmp
ins
cmp
shl
dec
or
mov
jns
xor
jno
xchg
sbb
leave
xor
sbb
retf
jns
fldcw
and
test
xchg
mov
arpl
mov
test
xor
mov
inc
cmp
clc
sar
dec
mov
jnp
sub
in
js
pusha
imul
fwait
mov
retf
pop
repz
pop
sub
pusha
in
jl
movs
cmps
leave
and
ja
jno
mov
sub
or
jge
xlat
into
or
jl
cmp
mov
pop
out
out
cwde
jno
repz
out
xor
mov
mov
xor
pusha
sub
ins
cmp
aad
mov
jns
imul
sbb
mov
call
inc
std
sbb
sbb
mov
lods
movs
aas
inc
inc
(bad)
(bad)
sti
jg
cli
ds
pop
cmp
ret
and
addr16
enter
pop
aas
xchg
cmp
pusha
sbb
mov
pushf
add
sub
xchg
sbb
mov
mov
into
mov
pop
push
push
mov
mov
jne
mov
loopne
jns
push
mov
movs
push
idiv
inc
ror
sbb
(bad)
fistp
mov
and
mov
xor
xchg
fstp
mov
mov
push
sar
in
jge
dec
clc
jbe
and
loopne
jg
ret
ja
lods
addr16
je
jns
retf
push
mov
dec
jle
ficom
hlt
fcomp
dec
mov
jnp
in
add
dec
imul
dec
js
sbb
cmp
sahf
outs
fcomp
sub
stos
jp
jns
repnz
retf
pop
mov
mov
je
in
(bad)
inc
out
push
dec
movs
gs
xchg
outs
(bad)
movs
or
dec
movs
nop
sub
das
pop
pop
mov
jns
popf
mov
adc
ret
into
mov
cld
mov
out
adc
ins
xor
dec
push
xchg
paddusw
adc
cmp
mov
cmp
jne
cmp
outs
stos
stc
mov
cmp
fsub
fnstenv
cmps
data16
xchg
(bad)
stc
xor
xchg
adc
jo
push
rcr
scas
or
jns
mov
mov
enter
mov
iret
adc
sub
mov
fnstsw
(bad)
mov
sahf
sub
xchg
or
push
jmp
adc
aaa
jmp
hlt
sbb
cmp
sbb
hlt
xor
jbe
pop
mov
dec
ret
cmps
enter
(bad)
mov
add
les
iret
jp
mov
xor
add
cmc
outs
sbb
mov
fist
dec
adc
inc
xor
add
retf
call
cmp
pusha
push
cmp
and
dec
call
(bad)
jl
ficomp
pop
dec
cmp
mov
arpl
imul
stos
sub
or
jns
xor
(bad)
jae
mov
les
mov
and
sahf
xchg
push
cmc
pop
sub
inc
rol
cmp
push
sub
or
push
jno
pop
sub
adc
or
cmp
cdq
or
jbe
(bad)
gs
cmp
cmps
outs
popf
mov
arpl
sbb
jno
mov
iret
jo
loop
mov
sub
xchg
mov
adc
(bad)
dec
repnz
popf
add
ds
jo
xor
mov
mov
inc
(bad)
sti
js
jge
test
cs
pop
in
cli
stos
push
and
repz
sbb
jne
mov
pop
mov
out
vpunpckldq
leave
cmp
mov
in
mov
ret
js
neg
pusha
iret
cmps
loopne
mov
into
xor
mov
xor
pop
sub
mov
xor
pop
repnz
push
retf
icebp
or
fistp
jecxz
jns
pop
int
push
ds
fistp
add
mov
sbb
nop
(bad)
mov
pop
mov
retf
pop
je
and
mov
jns
add
sar
(bad)
jl
xchg
test
stos
mov
cmps
mov
pop
xor
pusha
pop
adc
inc
xor
out
jns
lods
pop
lds
sar
rcr
es
jecxz
adc
xchg
jno
push
out
cmp
xor
test
std
gs
jo
ins
xor
hlt
sbb
es
pop
test
jmp
js
push
inc
arpl
aaa
jae
sbb
call
pushf
or
push
das
jno
jb
jge
aas
adc
ror
jns
lods
xor
loop
dec
adc
popa
aas
mov
mov
mov
call
cmp
sahf
jle
bound
pop
loop
cmp
outs
daa
lahf
mov
cmp
pop
mov
scas
pop
inc
mov
jmp
inc
sbb
mov
cmp
sbb
neg
push
add
push
aas
xor
stos
cld
xor
xor
je
scas
xchg
cmc
inc
cmp
jp
jno
retf
or
test
cmp
mov
addr16
sbb
mov
stc
pop
repz
cwde
pop
xchg
je
adc
cdq
sahf
mov
sbb
rcr
push
mov
int3
sub
inc
or
daa
add
inc
xor
ficomp
mov
cmps
cdq
pop
push
cmp
sub
inc
faddp
ror
loopne
(bad)
imul
add
lods
inc
cmp
and
push
cmp
sub
cmp
jne
sbb
mov
jb
mov
test
es
sub
leave
scas
ins
inc
jle
inc
mov
imul
inc
fimul
push
mov
dec
int
jb
inc
or
fstp
loopne
push
into
cmp
popa
inc
out
pop
jge
xchg
scas
call
shr
or
sub
cmp
add
out
adc
cdq
push
mov
dec
lahf
cmps
pop
stos
cmp
sbb
xlat
mov
cmp
das
les
jmp
sub
xchg
stos
inc
push
or
adc
jl
jmp
cmp
ret
push
fucomip
iret
cmp
push
or
xchg
cmp
cmps
cmp
(bad)
xchg
or
je
das
inc
mov
mov
out
sub
cmp
int3
(bad)
adc
call
pushf
jl
dec
pop
inc
fdiv
sub
inc
lods
gs
inc
sti
xor
test
nop
aad
push
int
ror
les
push
aas
pop
ret
pop
dec
(bad)
scas
out
xchg
movs
jle
mov
pop
in
cli
fdivr
pop
sub
cmp
test
jbe
push
and
lea
pop
jnp
mov
pop
mov
sar
cld
(bad)
sub
stc
adc
xor
jmp
loop
mov
add
out
mov
jno
mov
daa
pop
inc
mov
inc
inc
out
sbb
and
mov
loope
push
je
or
or
call
rcl
addr16
adc
imul
mov
cmps
je
cmp
aad
jns
fxch
repz
stos
jno
mov
dec
adc
jmp
cwde
stc
dec
sar
call
fs
add
mov
xchg
(bad)
in
add
mov
sub
mov
stos
out
mov
xchg
fmul
add
test
stos
dec
push
xor
retf
imul
(bad)
cli
or
add
push
and
out
xchg
jge
pop
push
lds
mov
jecxz
cmp
add
(bad)
cmp
icebp
xor
jb
pop
pop
test
(bad)
cmp
jne
out
inc
cmp
sub
pop
iret
cmp
jnp
or
(bad)
fistp
and
daa
xchg
dec
add
dec
ror
sub
cmps
jns
scas
xor
mov
push
pusha
adc
stos
popf
sbb
pop
call
jnp
jo
jb
sub
mov
mov
(bad)
cmp
add
cmps
push
xor
call
sub
mov
aad
or
cmp
mov
mov
sbb
into
sbb
fs
mov
pusha
pop
pop
je
mov
(bad)
jnp
sbb
push
xchg
xchg
inc
mov
sub
and
sbb
mov
sub
dec
or
cwde
std
cmp
lods
fidivr
into
ss
or
adc
pop
imul
jmp
pop
jns
jle
mov
sbb
xchg
jb
cmp
inc
jl
inc
jbe
dec
jle
fldz
mov
xchg
retf
in
mov
aas
sti
cmc
leave
xor
push
pop
loop
stos
mov
cmp
mov
inc
iret
cmp
adc
and
push
push
push
mov
nop
cmp
daa
mov
ins
mov
dec
das
lahf
scas
jne
icebp
pop
in
jo
cmp
enter
jae
ficom
cwde
ins
retf
shr
stos
inc
ins
pop
retf
add
movs
data16
lahf
cdq
and
and
mov
or
xchg
push
or
or
mov
arpl
adc
cmp
js
div
into
and
js
mov
and
mov
mov
fwait
jle
cmp
test
inc
mov
rcl
cmp
cdq
mov
fld
pop
dec
mov
sub
pop
sti
loopne
sub
jae
jmp
ret
inc
mov
movs
mov
sub
xor
fnstsw
mov
inc
mov
out
mov
cmps
ins
or
(bad)
inc
call
xor
mov
or
mov
(bad)
mov
push
fstp
or
inc
pop
ja
clc
inc
adc
out
dec
sub
xor
mov
aad
cmp
retf
das
or
dec
pop
jae
movs
pop
dec
push
inc
or
imul
fmul
stc
loopne
or
int3
and
pop
scas
sti
movs
push
mov
js
dec
mov
aaa
and
retf
mov
scas
cli
inc
leave
or
dec
out
sbb
inc
movs
stos
aaa
stos
mov
inc
test
cwde
jnp
loopne
jae
out
jno
test
xor
cmp
sub
cmp
sar
xor
scas
icebp
sti
dec
push
sbb
lods
push
scas
push
jno
jbe
js
leave
test
push
and
mov
mov
xadd
fxtract
jge
inc
jp
adc
mov
add
add
pop
mov
dec
and
mov
jge
cmp
fmul
sbb
jb
nop
push
add
cmp
cmp
jns
mov
jg
sub
jne
leave
cmp
pop
aam
scas
imul
test
retf
aas
push
pop
int3
push
sti
xor
mov
cmp
adc
pop
stos
imul
xor
sub
adc
icebp
jno
sub
jecxz
iret
sub
mov
cld
inc
pop
mov
mov
mov
pop
popf
push
xchg
cwde
mov
mov
lods
cmp
pushf
pop
iret
movs
inc
mov
xlat
shl
jmp
inc
ficom
cmc
repnz
pop
and
test
mov
movs
fstp
test
call
mov
ins
inc
jl
fs
mov
mov
jge
add
shl
adc
stos
jnp
xchg
outs
inc
pop
add
dec
inc
scas
xchg
jb
(bad)
sti
mov
pop
cmp
rol
sub
xor
lea
push
mov
mov
sub
mov
or
fild
mov
sbb
and
adc
or
inc
fwait
popf
mov
cmp
add
xchg
add
push
inc
sub
push
add
add
sub
retf
hlt
aaa
(bad)
push
pop
cld
sbb
std
push
cdq
fild
push
in
movs
pushf
push
mov
add
push
xor
call
dec
jmp
or
fsubr
inc
push
ficomp
jns
adc
out
jg
cmp
fs
mov
push
fcomip
cdq
cmp
daa
icebp
out
add
cmp
mov
and
ds
std
mov
cmc
add
push
mov
repz
add
inc
imul
movs
lds
jno
ror
ss
jmp
add
and
fiadd
pop
xchg
sbb
ja
jo
aas
ffreep
jg
jnp
sahf
sahf
repnz
ds
(bad)
test
push
mov
inc
out
cmp
mov
mov
lahf
cmp
mov
xor
sbb
pop
pop
repz
shl
fist
sub
inc
mov
pop
pop
out
mov
into
popa
mov
icebp
fwait
xchg
into
scas
mov
fdivr
add
inc
jbe
test
mov
xor
nop
mov
(bad)
(bad)
fdivr
push
fcom
mov
and
inc
jge
cmp
pop
jns
daa
cmp
je
jbe
call
test
mov
rol
jno
pop
mov
cmp
scas
(bad)
mov
or
inc
sub
pop
scas
aam
movs
jnp
dec
dec
sub
push
ds
(bad)
jmp
data16
inc
add
inc
icebp
imul
lods
repnz
rol
js
dec
inc
(bad)
addr16
push
cwde
adc
out
cmp
or
int
(bad)
cmp
inc
hlt
sbb
shr
loopne
inc
dec
data16
add
sbb
int3
mov
inc
repz
stos
rcr
push
push
cs
cmp
push
mov
jo
add
into
jns
jp
mov
mov
inc
inc
dec
push
pop
ins
push
pop
je
mov
cld
js
sub
(bad)
jge
addr16
pop
aaa
add
jns
mov
xor
loop
push
stc
mov
fbstp
adc
icebp
pushf
mov
pop
fistp
mov
shl
cmp
shr
pop
push
(bad)
fdivr
stc
xlat
push
or
sbb
sbb
test
mov
(bad)
mov
imul
cmps
in
add
fwait
mov
mov
cmp
popf
adc
mov
adc
pop
sub
xchg
cmp
icebp
cdq
aad
les
cmp
or
jmp
call
mov
cmp
mov
add
dec
clc
out
pop
add
(bad)
mov
push
lahf
jbe
dec
mov
jmp
add
ret
adc
gs
mov
pop
add
lods
lock
call
pop
jns
(bad)
cli
dec
sub
sbb
xchg
ret
pop
stos
fs
movs
jmp
jns
inc
ds
enter
mov
cmp
repz
add
mov
push
push
dec
dec
mov
dec
test
fwait
sbb
loop
mov
jns
push
in
sub
jl
cmc
xlat
cmp
outs
add
cmp
clc
dec
cmp
out
sub
push
lahf
push
arpl
sti
inc
pusha
sbb
clc
aam
scas
or
mov
das
mov
ds
push
jge
push
cmp
jecxz
push
sub
or
outs
cmp
cmp
mov
mov
mov
sub
dec
(bad)
mov
cmps
lock
fwait
test
aad
icebp
and
sub
fyl2x
std
sbb
(bad)
hlt
(bad)
sub
sub
jno
cmp
xor
scas
loope
adc
or
sti
movs
cdq
ds
sbb
cbw
cs
xor
push
xor
cmp
and
sbb
adc
push
fdiv
push
cmp
mov
adc
pop
fs
gs
lds
push
test
int3
inc
push
xchg
add
xor
dec
mov
scas
pop
xor
push
imul
mov
into
jecxz
sysenter
fsubr
adc
pusha
mov
fbstp
mov
xchg
mov
test
mov
inc
inc
mov
out
inc
je
sub
dec
pop
cmp
xchg
mov
pop
or
mov
(bad)
jg
(bad)
mov
mov
lea
into
test
inc
(bad)
cmp
sub
leave
xchg
add
jg
add
mov
aad
les
nop
xor
int3
imul
or
pop
mov
jecxz
aas
mov
jno
in
or
cld
cld
fs
inc
lods
mov
jno
inc
int3
jp
ds
sbb
or
and
push
leave
dec
nop
retf
sar
hlt
xchg
stc
ja
add
jmp
lock
and
inc
fwait
out
outs
mov
sti
mov
pop
mov
rcr
mov
cld
scas
loop
test
push
jns
add
test
sbb
jg
scas
mov
lods
fidivr
mov
mov
enter
(bad)
fadd
loopne
and
and
rcl
mov
fwait
jmp
xor
xchg
dec
mov
(bad)
xor
push
aad
fs
ss
mov
xchg
ins
mov
pop
push
dec
arpl
pop
dec
lea
imul
mov
xchg
push
addr16
mov
leave
xor
inc
popf
stc
jge
out
pop
in
jns
jne
test
jp
sbb
fcom
jns
loope
clc
inc
mov
jle
and
jl
pop
adc
xor
sar
scas
cli
adc
repnz
pushf
jge
jge
retf
adc
repz
mov
out
xor
xchg
push
sbb
in
inc
adc
pop
mov
mov
popa
or
loope
or
inc
jnp
sbb
jns
mov
xchg
and
or
sub
out
sbb
in
(bad)
shl
dec
sub
cmp
mov
mov
shl
fild
or
xchg
inc
jle
pop
ins
cmc
xchg
pop
mov
mov
cmp
jp
scas
ret
out
lods
inc
push
adc
fisubr
rcr
rol
mov
ja
test
(bad)
and
lods
xor
sbb
cmp
ret
or
dec
inc
jb
movs
push
inc
sub
(bad)
jmp
outs
js
cmp
clc
and
nop
mov
push
push
imul
aad
das
mov
mov
call
cmp
sub
retf
pop
pop
sub
mov
iret
mov
mov
inc
stc
mov
ret
fwait
fwait
pop
mov
cld
imul
mov
inc
mov
cmp
add
and
test
jns
or
ss
xor
stc
pop
inc
sub
and
jge
mov
js
lahf
inc
scas
out
mov
push
mov
cdq
pop
sti
cmp
add
nop
jno
add
push
jno
or
js
mov
sub
popa
shl
pop
push
aad
nop
and
sub
cmp
lods
aad
sub
xchg
js
sbb
mov
xor
pushf
(bad)
jge
sbb
into
mov
sar
out
mov
and
mov
mov
xchg
push
bswap
rcr
sbb
jo
adc
jo
mov
mov
xchg
(bad)
mov
nop
mov
imul
push
scas
nop
pop
pop
jno
rcl
cmp
pop
pop
mov
cmp
jno
sbb
inc
push
pushf
push
sahf
ret
call
ror
ins
xor
sub
out
xor
fwait
adc
sbb
jmp
mov
jge
xchg
jno
cmp
push
mov
sub
movs
adc
add
movs
ins
xor
dec
sub
enter
bound
sub
pop
mov
fidiv
mov
cmp
hlt
dec
cmp
(bad)
fimul
push
cmp
mov
shl
mov
cmp
movs
xor
push
jno
sub
dec
sbb
sbb
scas
test
or
cmp
ret
popf
jnp
ror
addr16
mov
repz
sub
dec
pop
mov
xor
jb
repz
enter
inc
mov
(bad)
sbb
dec
stc
aam
xchg
inc
outs
cmp
fsubr
push
mov
dec
cld
xor
push
mul
fistp
aam
cmp
and
cld
(bad)
pop
data16
xor
cmc
or
inc
sahf
in
jecxz
int3
ror
das
sbb
cmp
dec
jo
pop
cmp
mov
mov
add
mov
aas
and
jns
call
jp
(bad)
cmp
push
jno
inc
out
je
fcomip
mov
int
inc
stos
loope
adc
xchg
retf
add
sbb
sti
aad
jbe
dec
cmp
jns
dec
inc
sub
cmp
neg
mov
jne
jle
loopne
mov
cmp
pop
jmp
cmp
xchg
mov
xor
shr
push
sbb
movs
dec
jmp
arpl
jo
loopne
mov
cmp
stos
or
mov
mov
sbb
mov
jbe
sbb
inc
call
sti
sti
inc
or
adc
adc
jno
lds
cdq
out
in
jecxz
call
lock
sub
xor
and
out
or
push
shr
pop
pusha
stc
sub
nop
icebp
inc
jo
mov
pop
mov
repnz
xor
loopne
push
jl
and
mov
cmc
or
jns
cmp
iret
adc
test
test
mov
imul
xor
adc
clc
push
dec
lods
sub
xchg
dec
xchg
pop
fs
xor
imul
out
pop
aas
in
js
std
push
sbb
and
xchg
popf
movs
push
pusha
and
lods
test
les
mov
add
mov
aaa
jmp
lods
mov
das
add
sbb
(bad)
pushf
lahf
jge
push
je
ss
pop
mov
inc
mov
jge
add
retf
ins
inc
call
out
cmp
cmp
pop
loopne
adc
int
push
enter
bound
and
xor
jns
push
cmps
jl
adc
push
test
pusha
test
sbb
cmp
outs
fimul
add
inc
cmp
(bad)
int
adc
out
jecxz
push
mov
sahf
xor
in
test
pusha
pop
lock
inc
jmp
jo
out
jno
push
jle
xor
out
or
xchg
fisubr
or
mov
in
mov
fsub
xor
dec
je
test
cs
scas
push
inc
loopne
cmp
add
test
add
mov
push
loop
fmul
jb
mov
or
sub
mov
mov
jl
sbb
adc
jmp
lods
cmp
in
inc
sub
aaa
push
or
cmc
jp
sbb
sub
mov
popf
xor
mov
adc
in
jns
out
aaa
fsub
(bad)
scas
std
pop
les
ss
inc
adc
inc
and
jmp
jl
retf
out
pushf
sub
fs
cli
add
adc
and
push
movs
mov
mov
jns
xchg
inc
aas
xchg
push
mov
lods
adc
clc
lahf
lods
mov
aam
and
sbb
adc
mov
xor
adc
cmp
cmp
cli
fcmovne
push
mov
movs
add
pop
mov
xor
adc
std
mov
or
stos
push
(bad)
sbb
popa
adc
mov
aaa
cld
cmp
jge
ja
dec
jno
pop
xor
es
out
xor
ret
outs
sbb
imul
pop
mov
mov
test
sub
and
adc
push
mov
call
movs
icebp
xor
fsub
mov
stos
mov
and
mov
xor
push
jmp
inc
add
test
inc
mov
push
push
test
and
xor
in
ret
inc
repnz
or
and
aad
inc
clc
in
jmp
hlt
mov
mov
pop
(bad)
rcl
inc
and
cmp
inc
cmp
ss
push
sub
add
dec
mov
or
push
dec
mov
popa
push
in
movs
and
cmp
fiadd
fiadd
mov
adc
cmp
ds
ds
or
jmp
pushf
call
mov
lea
push
mov
xchg
test
js
mov
adc
xchg
inc
pop
or
jns
es
rol
cli
lds
jno
adc
jbe
js
in
jmp
mov
mov
add
dec
xor
sbb
data16
mov
mov
test
sbb
into
retf
test
in
cmp
push
sub
and
adc
dec
enter
rol
dec
mov
loopne
(bad)
repnz
out
repnz
and
scas
mov
jmp
fs
aam
add
aas
ins
inc
jl
sbb
adc
push
(bad)
xchg
mov
cdq
out
stc
push
sbb
dec
xor
mov
mov
inc
jno
lods
jmp
mov
rcl
mov
lods
xor
test
imul
call
stc
icebp
fs
mov
ror
mov
pop
(bad)
and
out
sub
dec
mov
mov
mov
fdiv
dec
mov
sub
lods
sub
imul
in
je
ret
call
pop
lods
fmul
cmp
das
pop
jno
movs
int
loop
xchg
repnz
add
je
xchg
mov
sbb
cmp
and
imul
test
xchg
sbb
mov
jl
cmp
ins
push
ins
sbb
jae
lods
inc
mov
dec
aas
jno
jno
jle
(bad)
pushf
les
shl
cwde
or
pop
mov
repnz
mov
cmp
or
sub
dec
xor
sahf
out
test
cmp
int3
and
or
push
mov
fcomp
pop
cld
ret
add
jl
fild
cdq
xchg
mov
dec
cmp
inc
movs
adc
jmp
sahf
pop
jmp
mov
cmp
xor
push
cld
je
adc
mov
mov
sub
ins
xchg
mov
mov
xchg
data16
mov
in
jge
fistp
or
js
inc
cmp
sbb
cmp
cmp
clc
add
sbb
pop
inc
sub
into
in
fcom
push
inc
retf
pop
movs
xchg
or
xchg
push
xchg
(bad)
sbb
mov
in
mul
shl
cmp
out
push
add
sbb
in
xor
loop
jo
imul
cdq
sti
fld
stos
ins
mov
cwde
into
xor
inc
outs
(bad)
imul
jne
leave
jmp
cdq
cmp
iret
ffreep
sar
jmp
mov
cmp
ds
test
fadd
(bad)
inc
(bad)
fld
pop
lock
or
jge
or
jg
les
pop
outs
dec
je
leave
std
sbb
cmp
rcl
stc
or
jnp
je
mov
cmp
les
xchg
push
mov
xchg
add
lahf
or
xor
nop
xor
lds
adc
add
movs
jl
inc
test
call
ret
xlat
pop
loopne
inc
add
cmp
mov
jp
cmp
sub
jle
bound
(bad)
jo
xor
dec
rcl
retf
cmp
iret
sbb
add
dec
out
jne
add
cmp
or
pop
jbe
inc
pushf
add
jmp
cmp
pop
xchg
cmps
xchg
jmp
out
or
rcl
mov
sbb
into
mov
ror
(bad)
pop
push
push
fsub
call
(bad)
cld
mov
cmp
in
(bad)
jle
dec
dec
inc
popa
mov
cmps
mov
push
inc
inc
lock
(bad)
lahf
pop
and
loopne
adc
cmp
out
test
std
xor
xor
(bad)
cmp
mov
mov
jmp
fs
(bad)
mov
jns
inc
jl
stos
mov
add
ins
jmp
(bad)
or
mov
pushf
cmps
mov
jo
xchg
jns
test
mov
pushf
loopne
jnp
movs
mov
daa
jecxz
fadd
sti
cmp
jmp
push
jo
ret
pop
out
mov
test
sahf
imul
pop
inc
push
dec
inc
lahf
inc
pop
sbb
test
mov
dec
call
mov
cmp
xor
push
(bad)
add
push
pop
push
fsubr
or
xor
adc
push
and
imul
imul
js
cmp
shl
ret
and
add
mov
and
ret
dec
inc
inc
shl
sbb
ins
jg
ins
mov
xor
xor
sbb
jmp
sub
aas
fnsetpm(287
inc
je
jbe
jle
jg
mov
(bad)
stc
sub
fild
push
adc
inc
or
sub
jg
test
sbb
imul
rol
xor
mov
sbb
xor
cmp
pop
loopne
jmp
cmc
push
cmps
(bad)
lods
mov
sbb
xchg
push
mov
xor
(bad)
jl
mov
rcl
jnp
jne
inc
push
ds
in
enter
les
inc
inc
sbb
push
adc
cmp
out
mov
add
add
mov
inc
test
mov
test
pop
xlat
stos
inc
xchg
in
push
dec
xor
mov
jno
cld
inc
or
inc
aas
movs
inc
inc
jb
loop
push
or
dec
pushf
inc
and
jecxz
loope
mov
push
mov
and
sbb
sub
sti
clc
inc
pusha
inc
aaa
jno
ja
mov
push
mov
mov
or
out
dec
(bad)
data16
inc
mov
std
pushf
fidiv
sti
add
xchg
sbb
ins
pop
and
mov
sti
and
repnz
data16
cmps
inc
inc
jno
test
int3
rol
fisttp
and
xchg
xchg
cmp
push
in
shl
cwde
rcr
pop
pop
mov
mov
xchg
inc
and
sbb
adc
mov
mov
sub
cli
lods
mov
arpl
arpl
test
or
adc
lea
mov
out
call
icebp
pop
inc
mov
lods
mov
test
xchg
cmps
dec
faddp
inc
mov
icebp
cld
mov
clc
and
sbb
pop
or
fwait
movs
cmp
cs
rcl
test
inc
mov
inc
inc
cmp
lea
aaa
cmc
pop
xor
inc
pushf
call
and
sahf
fstp
sub
mov
in
inc
inc
or
xchg
jge
repz
out
stos
or
sub
mov
inc
mov
jns
cld
sbb
mov
repz
xchg
push
dec
into
add
push
aaa
lods
dec
jb
jno
ins
retf
sahf
inc
cmp
inc
push
xchg
das
jae
(bad)
lods
mov
cmps
mov
inc
sbb
test
dec
sub
xor
ins
mov
inc
(bad)
mov
cmp
popf
cmp
xchg
test
pop
sbb
mov
xor
push
inc
mov
jno
shl
push
inc
push
sbb
fidivr
mov
mov
loopne
test
cld
leave
xor
pop
inc
mov
movs
pop
js
adc
or
dec
inc
cmp
out
fcom
push
std
xchg
pop
or
inc
adc
push
fwait
push
lahf
rcl
add
fcmove
call
xor
cmp
popf
test
fstp
xor
pop
dec
pop
(bad)
sbb
daa
mov
jp
and
pop
mov
xchg
push
frstor
retf
(bad)
mov
scas
dec
sub
mov
outs
push
adc
das
mov
bound
inc
outs
pop
xor
jae
xor
or
dec
leave
dec
jne
or
inc
(bad)
loope
inc
xchg
pop
ja
enter
adc
pop
ror
inc
add
dec
scas
cmp
jle
add
nop
xchg
(bad)
loop
or
retf
mov
adc
dec
push
jns
cmp
push
push
outs
pop
jns
inc
ja
fiadd
sbb
inc
jge
push
push
cmps
jl
inc
stc
out
lods
fs
push
fbld
lds
nop
pop
xor
push
or
dec
or
and
dec
fistp
mov
hlt
in
aas
dec
or
jne
mov
mov
imul
add
cmp
or
mov
inc
jp
(bad)
fwait
ret
dec
js
or
sub
dec
push
jo
inc
sbb
mov
sar
xchg
sub
lods
dec
jns
hlt
jg
jp
sub
shl
stos
repnz
mov
test
sbb
dec
mov
jbe
punpcklwd
sub
icebp
dec
mov
imul
inc
cmp
cmp
rol
inc
add
cmp
cmp
(bad)
or
cmp
movs
sub
mov
mov
idiv
or
into
and
adc
cld
mov
sbb
mov
loope
(bad)
lahf
dec
ror
test
in
mov
jns
fadd
test
jns
sub
idiv
int3
mov
out
cmp
cmp
push
push
mov
jno
adc
cli
mov
mov
or
test
xchg
cmp
jns
ror
jge
sbb
(bad)
sar
and
fdiv
stc
out
nop
ret
cmp
cmp
and
pop
dec
cmp
neg
inc
and
(bad)
sbb
mov
adc
add
jl
xor
out
jmp
mov
mov
dec
cli
mov
fwait
pop
xor
out
sub
jmp
fidivr
mov
add
ja
scas
sub
outs
cmp
dec
cmp
mov
mov
ss
dec
push
aas
xor
push
cs
(bad)
mov
pop
jno
and
push
mov
stc
lahf
mov
aas
xchg
mov
pop
jmp
out
test
retf
cwde
sbb
lods
xchg
pop
jnp
fst
out
push
sbb
and
cmp
sahf
fbld
cmp
call
das
cmp
and
sub
mov
dec
push
cmc
jne
sbb
inc
xchg
jo
sub
fld
ror
(bad)
mov
fnstcw
cld
inc
sbb
loope
cmp
sub
sub
sahf
sbb
inc
jb
adc
mov
push
push
movs
inc
shl
xchg
mov
jge
mov
fld
loope
ss
xchg
cmp
sahf
inc
or
ret
or
dec
stos
aas
movs
xor
cmp
loopne
retf
xor
xchg
mov
imul
sti
in
out
loop
sbb
mov
xor
je
gs
mul
mov
sbb
mov
mov
cmc
mov
add
sar
sbb
out
xchg
mov
ins
push
pop
das
fwait
push
aam
dec
(bad)
je
call
cmp
dec
shl
mov
not
out
pop
inc
mov
adc
inc
adc
cmp
das
imul
inc
loopne
lds
inc
ret
cmc
movs
sar
xor
sub
xchg
mov
jmp
test
shl
cli
loope
and
and
jp
ds
dec
add
shr
jno
inc
push
mov
mov
repnz
xchg
lods
jns
loopne
add
xchg
add
mov
push
mov
jae
int
les
pushf
inc
add
pop
sti
imul
imul
adc
add
jno
ss
mov
sub
push
cmp
xor
xor
pop
scas
pop
add
(bad)
loop
std
div
sub
mov
adc
sbb
inc
sub
(bad)
mov
inc
and
imul
or
sub
pop
out
aad
in
loop
xor
mov
pop
mov
leave
add
std
pop
inc
sub
imul
xlat
add
xchg
mov
sar
xchg
call
inc
xor
inc
cmps
inc
and
test
enter
xor
adc
xchg
push
push
lods
popf
cmp
and
xlat
push
pop
imul
inc
push
cmp
dec
jg
aad
inc
repz
xchg
cdq
push
test
dec
or
inc
movs
cmp
jecxz
(bad)
in
jae
ret
xlat
jg
inc
dec
fcom
sub
aam
and
ffree
pop
or
dec
lahf
add
ds
sahf
adc
add
js
ret
daa
inc
jb
jmp
or
cmp
add
rol
xlat
or
fimul
in
aas
popf
pop
inc
cwde
or
adc
rcl
dec
fild
lock
push
lea
xchg
mov
add
inc
ds
add
mov
dec
xchg
dec
push
movs
ror
iret
cmp
push
xor
adc
inc
cdq
jae
or
push
and
dec
dec
mov
cmp
ss
js
lods
imul
add
xor
loop
inc
dec
das
jmp
push
inc
fbld
jno
test
out
pusha
jl
popf
mov
jae
cmp
stos
cmp
jmp
or
push
pop
stos
sbb
cmps
pop
inc
aaa
add
mov
mov
mov
ins
mov
jb
(bad)
push
lods
and
or
pop
cmc
enter
cmp
inc
sub
sahf
js
lahf
xlat
push
sub
mov
fadd
fist
pop
cmp
enter
sbb
js
pusha
mov
arpl
inc
je
xlat
inc
pushf
and
xor
mov
ins
movs
cmp
int
cmp
in
aam
adc
sbb
xor
icebp
xlat
jne
jecxz
xor
test
mov
inc
jmp
jne
sbb
or
inc
dec
std
sub
ret
mov
sbb
out
push
pusha
dec
cld
push
pop
dec
adc
pop
inc
pusha
inc
sahf
xor
jmp
sub
adc
shr
movs
jl
adc
add
daa
jl
into
loope
or
mov
mov
add
js
rcl
fwait
add
scas
call
push
out
jp
sti
or
sahf
ds
out
sub
sbb
jle
std
fld
mov
gs
jnp
inc
fiadd
cmp
and
xchg
js
loop
inc
inc
cmps
xchg
movs
jne
sub
imul
cmp
pop
dec
data16
mov
cmp
mov
daa
inc
icebp
pop
cmp
mov
dec
pop
or
test
imul
cmp
fistp
and
push
sbb
sahf
jg
fxch
or
ret
div
loopne
adc
dec
enter
cmp
dec
rcl
sub
dec
scas
xchg
test
cmp
adc
push
iret
int
xor
out
pop
sbb
retf
stos
inc
enter
pop
inc
call
or
or
mov
inc
push
xchg
test
jg
les
or
inc
and
bound
jnp
or
stos
sbb
inc
pop
inc
jge
pop
inc
fucom
or
shl
cmp
adc
sub
test
ret
(bad)
mov
inc
push
gs
xchg
xchg
fisub
sti
mul
push
lds
and
cmp
or
pop
sbb
and
inc
(bad)
mov
in
sbb
dec
inc
lock
dec
mov
jmp
jl
sbb
xchg
xchg
mov
iret
mov
inc
add
retf
xchg
mov
cmp
jnp
pusha
push
std
in
pop
lds
fsub
je
cmp
dec
not
and
and
jbe
in
jb
cmp
cdq
mov
mov
je
lods
push
clc
rcl
sbb
imul
mov
(bad)
mov
dec
pop
scas
sub
or
call
push
cmp
xchg
cmp
sbb
mov
push
inc
add
scas
push
inc
cmp
lss
jle
call
mov
mov
in
inc
cmp
test
inc
jno
scas
jnp
(bad)
jb
inc
aas
lods
ins
or
sbb
sbb
sub
xchg
shl
mov
push
push
sbb
enter
aad
mov
inc
into
cmp
ret
and
add
pop
push
cld
into
inc
fadd
cmps
ror
cmp
push
xor
in
jle
dec
iret
and
inc
sub
and
out
mov
cmp
loopne
mov
ds
jo
js
fwait
inc
cdq
ficomp
movs
and
sub
loope
gs
outs
inc
jo
arpl
(bad)
pop
out
sub
mov
mov
mov
fcomp
clc
ds
fldcw
or
mov
inc
pop
and
int
inc
jle
sahf
push
push
ss
out
xor
jl
sbb
mov
adc
in
mov
test
pop
(bad)
fiadd
sbb
jp
xor
mov
call
leave
in
sub
or
cmp
cmc
mov
pop
inc
fld
push
xor
jle
out
mov
add
jno
xchg
retf
add
call
cmp
ins
enter
cmp
sbb
inc
(bad)
cmps
mov
fstp
adc
dec
loopne
aam
ds
mov
pop
fucomp
jmp
or
and
aad
mov
test
cmp
jno
xor
aam
stc
xor
inc
test
mov
int3
inc
adc
mov
inc
shr
jno
mov
inc
daa
pop
jnp
arpl
cmovo
int3
(bad)
mov
inc
in
add
test
inc
push
pop
scas
call
xor
in
pop
fmul
push
rcr
inc
add
rcl
mov
cmps
scas
jmp
shr
ret
mov
sbb
jl
lods
aaa
xor
cmp
scas
out
icebp
xchg
es
dec
cmps
inc
sub
pushf
test
adc
mov
inc
xor
std
dec
scas
stos
push
int3
mov
(bad)
ss
mov
(bad)
cmp
movs
les
mov
mov
mov
xchg
mov
out
dec
xor
push
sbb
leave
loope
lods
(bad)
xor
sbb
(bad)
fsub
xchg
adc
mov
pop
or
shl
push
ja
push
fcos
lds
and
gs
aaa
jne
sub
dec
retf
loopne
pop
bound
cmp
jle
out
rol
ds
push
dec
aas
and
jae
inc
push
mov
fwait
enter
pop
jmp
mov
sbb
pop
sbb
pop
bound
in
imul
stos
ds
aas
fnstsw
scas
cdq
test
sbb
test
xchg
inc
test
movups
or
in
push
cmp
stos
dec
mov
mov
sub
inc
dec
nop
ins
repz
(bad)
fdivp
push
in
sub
fsub
pop
jb
cmp
push
lods
mov
mov
push
dec
and
test
inc
xor
hlt
test
movs
fild
ror
push
mov
jns
and
fadd
mov
xchg
xchg
inc
xchg
sbb
sub
fwait
inc
pop
jmp
shl
sub
mov
xor
mov
dec
or
(bad)
popa
test
xchg
out
fld
jmp
or
lea
out
test
push
es
fsubr
jge
add
xchg
mov
dec
pop
ins
js
ds
and
sub
cs
dec
dec
cli
bound
push
add
push
aas
test
(bad)
xor
leave
or
adc
loopne
sub
fs
(bad)
jb
sub
xor
adc
dec
pop
mov
inc
inc
sbb
sub
call
iret
repz
cmps
xchg
push
call
inc
scas
sub
jmp
mov
rol
or
jmp
inc
aaa
mov
xor
imul
loopne
dec
rcr
(bad)
fcom
jae
cld
inc
std
(bad)
xor
dec
mov
cmp
sub
inc
or
popa
fprem1
retf
sti
loopne
push
mov
leave
loopne
pop
cmp
add
adc
(bad)
xchg
push
xlat
sub
fxch
fcomp
(bad)
fistp
fmul
ficomp
das
ret
jb
fstp
mov
push
sbb
retf
xchg
xchg
js
sti
and
cmp
int
mov
loope
mov
inc
push
mov
movs
jp
cmp
aaa
pop
xchg
ja
pop
dec
fidivr
push
scas
mov
rcr
cmp
mov
cs
(bad)
loopne
xor
cmp
stos
rol
xor
cmp
aad
xchg
lock
pop
jbe
enter
sahf
repz
mov
inc
call
mov
add
inc
push
inc
stc
(bad)
neg
jmp
xchg
inc
test
mov
inc
mov
and
cmps
arpl
ficomp
dec
(bad)
cld
jle
outs
sub
cwde
sbb
adc
mov
mov
mov
leave
sub
mov
outs
pop
lds
add
mov
xchg
xchg
or
push
outs
scas
mov
pop
rcl
inc
(bad)
out
lahf
mov
inc
cmps
pushf
gs
push
and
adc
movs
jl
dec
in
inc
arpl
movs
inc
sbb
jle
ret
ficomp
ja
leave
int3
xor
icebp
cmp
mov
xchg
jae
inc
je
(bad)
cli
xor
jbe
fistp
adc
sbb
push
inc
test
mov
mov
shr
or
mov
mov
inc
cwde
mov
xchg
test
push
fmul
dec
mov
aas
(bad)
rcl
fisttp
das
adc
imul
mov
ds
jno
es
mov
adc
sar
jg
xor
sti
pushf
adc
out
push
es
xor
mov
ds
addr16
lods
stc
fld
mov
sahf
inc
aad
sbb
cmp
pushf
pop
imul
popf
xor
xor
into
daa
ss
push
mov
cmp
pop
retf
in
mov
es
and
inc
icebp
imul
or
sahf
scas
and
add
cmp
mov
dec
scas
or
test
mov
addr16
inc
outs
lea
jmp
pop
xchg
sbb
xor
scas
arpl
xor
jns
outs
in
xor
cli
imul
push
lea
inc
sbb
loop
sub
outs
pop
lds
and
bound
jle
cmp
mov
js
cmp
jmp
ret
cmc
bound
aam
adc
scas
inc
pusha
fs
inc
leave
jl
bound
mov
imul
daa
xchg
jle
aam
cmp
retf
inc
add
jp
cs
cmp
push
arpl
pop
inc
sub
sbb
int
ja
inc
mov
test
cmp
into
(bad)
jne
sub
pop
fnstcw
retf
dec
mov
or
inc
fadd
pusha
push
popf
sub
sub
inc
push
cli
inc
das
xlat
mov
cmp
or
add
cmc
adc
push
mov
jge
test
outs
cmp
mov
pop
mov
call
fstp
mov
loope
rol
ins
ss
dec
mov
fcom
stc
pminub
sub
dec
cli
mov
or
push
lea
push
cld
jno
sbb
call
mov
or
adc
pop
sub
(bad)
cmps
inc
jns
test
cwde
aaa
fwait
jo
mov
inc
fsubrp
fnstcw
or
mov
test
ss
in
mov
popa
daa
fmulp
pop
xchg
xchg
test
cmp
mov
mov
sbb
arpl
push
ret
fcom
sub
inc
mov
arpl
aam
mov
stos
cli
cmp
dec
mov
xchg
adc
add
nop
sbb
test
or
xchg
ds
out
cmps
ficom
jbe
mov
sbb
js
push
xor
xor
int3
push
jmp
adc
jno
aas
retf
or
imul
je
outs
loopne
ins
jnp
icebp
std
jae
repnz
push
mov
push
mov
jb
mov
ins
mov
push
push
(bad)
mov
dec
mov
xchg
inc
jg
xchg
test
retf
jbe
jge
jl
jno
je
jg
in
repnz
shr
xor
inc
out
into
aam
(bad)
lds
enter
retf
fimul
sub
xchg
mov
inc
jb
into
cld
mov
(bad)
xchg
jp
xchg
and
scas
mov
inc
loop
leave
or
push
int
adc
cmp
(bad)
cmp
adc
push
sub
jl
pushf
mov
push
jo
leave
xor
cld
pop
xchg
push
test
lods
in
or
mov
fdivr
push
inc
cli
lds
xchg
jno
adc
mov
je
ds
inc
sbb
gs
mul
xor
arpl
mov
or
outs
and
jg
sub
xchg
inc
rcl
mov
popf
pop
inc
dec
mov
inc
mov
jo
mov
inc
(bad)
into
loopne
rcl
shl
ss
(bad)
cmp
adc
or
cmp
cmp
jmp
fmul
add
enter
xor
push
test
cmp
repz
lds
mov
adc
movs
data16
inc
add
sti
enter
push
es
jne
xlat
into
push
lds
lea
pop
rol
push
mov
inc
mov
pusha
sahf
stc
and
and
shr
sbb
jno
imul
sbb
outs
mov
inc
popa
jle
jg
outs
jns
or
jne
scas
mov
fisubr
arpl
inc
jge
cld
inc
sub
sub
test
push
in
lods
xchg
rcl
jmp
xlat
cmp
aad
int
dec
sub
push
jl
call
adc
and
in
inc
cmps
call
pop
mov
ins
or
adc
mov
mov
dec
cmp
in
fnstsw
gs
pop
(bad)
fdivrp
lds
aad
fdiv
push
scas
inc
and
lahf
xor
jp
icebp
inc
pusha
inc
ret
mov
fs
mov
dec
or
pop
fadd
jns
cmp
inc
mov
div
inc
sbb
in
inc
xchg
sbb
inc
cmp
mov
retf
pop
cmp
loop
shr
jo
adc
cmp
jb
pop
popa
and
or
sub
hlt
sbb
jns
lea
pop
jmp
ins
stos
jp
push
loopne
lods
push
clc
maxps
dec
fisttp
jns
inc
fadd
dec
lea
lds
pop
xchg
fistp
jb
cmp
imul
inc
cmp
push
inc
mov
out
loopne
push
stc
loope
push
sti
bound
inc
mov
add
mov
out
fstp
popf
je
jb
cmp
xor
sub
jbe
cmp
stc
aad
shl
adc
sahf
jmp
je
out
mov
sbb
push
out
sar
sub
test
push
stc
jns
jmp
(bad)
ds
sbb
dec
cdq
mov
mov
push
fisub
jns
or
mov
add
mov
bound
jno
xor
pusha
call
sub
xchg
push
push
jle
and
iret
dec
xor
not
push
stc
inc
xchg
jmp
mov
xor
add
stc
ins
mov
shr
dec
loopne
adc
push
pusha
outs
bound
pop
jl
or
and
pop
(bad)
shr
cld
popa
mov
and
cmovo
xchg
scas
cli
jl
lock
mov
fcmovbe
xchg
loope
inc
ficom
add
xor
add
dec
xchg
iret
xor
mov
xor
add
xor
jnp
and
cmp
cmp
or
adc
mov
or
fdivr
jb
cs
pop
mov
dec
out
or
cmps
jo
sub
sahf
imul
(bad)
clc
(bad)
int
jne
and
inc
das
ss
stos
adc
push
and
ds
inc
leave
dec
(bad)
mov
fst
scas
dec
inc
and
mov
fs
out
sub
inc
ins
or
cs
daa
aad
movs
and
mov
sti
loopne
adc
fbld
in
push
ret
in
aaa
push
outs
jo
sub
outs
and
adc
xbegin
sar
movs
outs
jbe
mov
and
ins
ja
add
cmp
ins
jle
ds
std
mov
daa
mov
xor
out
adc
popa
test
mov
cmp
inc
and
mov
cmc
inc
mov
jns
out
pusha
jne
aam
inc
sub
addr16
jo
bound
outs
inc
cmc
xchg
push
mov
push
cli
(bad)
jo
inc
push
repnz
fld
inc
in
push
dec
xor
rcl
or
sbb
or
cmp
inc
inc
jnp
fmul
fimul
pusha
lods
in
cmp
aas
add
int
push
sub
loope
(bad)
xchg
mov
cli
leave
loopne
movs
inc
mov
cwde
or
inc
dec
jno
icebp
and
out
inc
add
imul
lock
sub
loopne
xor
cmp
movs
movs
cmps
dec
ss
pop
mov
rcl
and
inc
and
sub
xlat
inc
jmp
xchg
xchg
inc
or
pop
test
lods
xchg
call
arpl
retf
xchg
enter
imul
cmp
mov
xchg
inc
inc
mov
ficomp
(bad)
into
xchg
gs
dec
jmp
mov
mov
inc
pop
inc
and
imul
jbe
jge
fidivr
arpl
push
aas
xchg
stos
mov
inc
xor
jmp
rcr
sbb
fisubr
cmp
or
pop
repz
idiv
push
mov
inc
xlat
das
sub
or
ror
pop
int
in
inc
or
dec
mov
and
push
in
shr
addr16
jl
loopne
inc
sub
scas
mov
inc
test
pop
adc
dec
mov
lock
pop
ss
es
out
jl
cmp
aam
ficom
cmp
adc
sbb
jne
outs
jo
repz
loop
jmp
mul
push
dec
in
das
pop
stos
dec
bound
je
cmp
js
aad
push
lods
xchg
push
jge
ss
sti
or
dec
xor
fst
jnp
jae
jns
jge
inc
stc
scas
mov
and
adc
leave
adc
aam
lds
leave
xchg
scas
cmp
mov
jmp
aaa
or
pop
sub
pop
call
push
xor
jge
inc
imul
(bad)
cmp
xchg
hlt
jmp
(bad)
or
jl
or
jbe
nop
jae
sub
cmp
sbb
rol
(bad)
dec
js
and
into
cmp
xchg
cmp
ds
repnz
out
or
cdq
push
sub
mov
adc
push
xor
std
and
sub
in
fcomp
mov
jl
test
sbb
loopne
pop
(bad)
fdivr
inc
adc
pop
jno
jle
cmp
repz
(bad)
imul
hlt
inc
ss
rol
and
out
jg
es
sbb
jno
mov
es
push
fcmove
stos
push
fadd
ja
cdq
jbe
fist
sub
xchg
retf
in
cmp
xor
cmp
xor
push
pop
mov
call
mov
out
ret
sub
inc
xor
adc
xor
xchg
jge
repnz
test
je
fld
and
pop
enter
test
or
xchg
dec
outs
jmp
xchg
jb
adc
jno
mov
xor
mov
lds
sub
idiv
sti
and
pop
into
sbb
push
outs
jp
pushf
xchg
sar
(bad)
pop
rcr
mov
sub
sub
xor
xchg
pop
movs
and
mov
out
fldcw
jno
ret
jo
ss
cmp
jo
mov
fdivr
in
adc
cmps
lods
push
dec
or
fs
inc
or
shl
sbb
xchg
push
clc
loop
retf
xor
lock
sahf
pop
imul
mov
sub
jmp
shl
inc
pop
bound
jno
imul
inc
pusha
pushf
mov
jo
xlat
inc
xchg
call
inc
bswap
xchg
push
jno
mov
inc
idiv
xor
test
fbstp
enter
push
cwde
aad
or
iret
or
cld
vmovmskps
(bad)
dec
(bad)
inc
dec
fimul
inc
cmp
(bad)
mov
test
xchg
jb
push
or
scas
shl
dec
push
push
push
idiv
and
jmp
add
jb
pop
jg
loop
mov
jg
xchg
jae
outs
mov
popa
mov
rcl
out
cmp
icebp
cmp
cmp
sar
(bad)
xor
stos
cmp
lea
mov
neg
test
pop
adc
sbb
mov
stc
or
push
fs
push
sbb
and
cld
xor
clc
je
mov
xchg
and
ret
xor
mov
mov
sub
je
call
jmp
sbb
cli
(bad)
(bad)
fcom
fs
xchg
outs
into
mov
je
cmp
push
daa
mov
in
rcl
aas
jno
adc
mov
sbb
adc
jno
cwde
adc
aad
mov
xor
or
out
pop
cmps
adc
jg
pop
and
push
sar
sbb
sbb
mov
gs
dec
loop
outs
push
xor
jns
sub
xchg
push
or
mov
ret
hlt
xor
push
xchg
je
cmp
out
sub
and
retf
add
sbb
adc
jb
out
jp
pop
outs
adc
das
inc
rcr
cmc
fcomp
sub
mov
fld
sbb
jle
mov
fld
and
jge
stc
stos
mov
add
or
mov
fadd
push
inc
ss
mov
and
xor
jo
dec
(bad)
popa
cmp
mov
xchg
js
mov
xchg
sub
test
test
int
cmp
loope
xchg
in
fdivr
adc
es
stos
cli
xchg
pusha
pop
xchg
out
pop
shl
xchg
cmp
(bad)
stc
sbb
add
idiv
fld
pop
(bad)
or
push
les
jge
sbb
jno
mov
adc
jl
sar
sti
xor
mov
lahf
stc
mov
cmp
jmp
sbb
xor
jbe
pop
mov
aas
and
sbb
aam
fstp
ud0
cmp
jns
mov
(bad)
jl
jae
fsubr
mov
sbb
imul
pop
int3
add
xor
cmp
xchg
xor
cmp
add
cmc
inc
jmp
frstor
shr
inc
fcom
and
(bad)
fiadd
test
jp
fsubr
fidiv
mov
cmp
into
mov
cmc
popa
cmp
xchg
(bad)
xchg
sub
in
lahf
mov
mov
pop
cwde
cmp
mov
xor
aam
je
dec
inc
iret
push
mov
stos
inc
fistp
aad
icebp
fimul
aam
adc
mov
(bad)
dec
push
(bad)
jp
pop
mov
and
mov
not
cmp
out
es
push
cmp
sbb
je
and
inc
xchg
mov
pop
jbe
mov
je
or
mov
fstp
imul
in
jmp
dec
jbe
inc
push
gs
aad
mov
sti
pop
fcomi
fistp
adc
(bad)
cmps
mov
or
mov
and
jl
test
imul
test
ds
dec
fild
push
jecxz
mov
mov
ja
ret
sbb
pop
mov
mov
shl
ss
ds
mov
push
out
cmp
push
cli
rcl
in
mov
pavgb
inc
(bad)
jmp
inc
(bad)
sub
(bad)
and
inc
mov
nop
pop
jnp
mov
fcmovu
loope
call
sbb
jae
aam
data16
out
mov
mov
cli
sbb
inc
push
jp
jmp
inc
popf
pop
add
inc
pop
sbb
push
mov
mov
aam
mov
xor
repnz
inc
loope
jecxz
jno
pop
cmc
cld
ins
loopne
sub
xor
fnstsw
cmp
nop
and
ret
loope
pop
fwait
int3
fist
add
pop
icebp
leave
scas
ins
mov
inc
div
iret
adc
xchg
xor
arpl
retf
lods
mov
clc
rcl
fldcw
outs
stc
mul
and
inc
jno
cdq
add
dec
sahf
lods
sbb
xchg
sbb
xchg
xchg
push
outs
cmp
out
and
xor
add
rcr
pop
and
les
fdivr
mov
inc
mov
pop
cld
cmps
mov
(bad)
cmp
jne
rcr
xchg
js
jmp
pop
push
mov
sub
xor
dec
sbb
push
js
pusha
fsubp
inc
out
nop
movs
cmps
sub
test
(bad)
cwde
or
mov
lea
ret
mov
or
mov
nop
out
sti
data16
ds
call
into
movs
pop
sub
mov
pop
test
cmp
jb
mov
jnp
pop
je
call
fcmovnu
push
push
shl
adc
mov
aam
xchg
cmp
bound
loop
cmp
cmp
add
adc
and
rol
(bad)
bound
retf
push
or
add
cmp
xor
adc
pop
mov
cmp
repnz
icebp
dec
and
aas
jecxz
mov
adc
add
je
icebp
stc
adc
jno
outs
inc
stos
xor
aas
ficomp
stc
ret
mov
adc
mov
mov
icebp
popa
in
mov
loop
xchg
cmp
pop
and
cld
(bad)
fs
fsub
stc
fcomp
push
add
imul
push
sti
das
or
jmp
int3
scas
and
(bad)
mov
sub
test
sub
inc
push
mov
jo
dec
repnz
lods
sahf
xor
bound
fbstp
aad
mov
fld
ja
icebp
mov
jl
int
dec
jb
cmp
jge
icebp
push
stos
cmp
mov
xor
dec
in
int3
into
inc
jmp
dec
pop
stc
xor
dec
mov
dec
(bad)
sbb
inc
push
pop
xchg
mov
add
rcr
in
jg
jg
xor
arpl
sbb
rcl
fild
sbb
cli
inc
pusha
cmp
idiv
pop
retf
outs
jno
cmp
dec
pop
icebp
sub
inc
retf
leave
imul
nop
dec
dec
jb
cmc
inc
xor
fbld
add
lea
test
xor
xor
xor
out
ss
push
sub
call
xor
add
ret
es
adc
(bad)
ds
ins
std
sahf
inc
pop
xchg
add
xor
xor
sub
pop
push
fdiv
leave
jns
std
mov
mov
retf
jno
sub
lds
(bad)
cmp
pop
int
div
inc
mov
dec
mov
sahf
fmulp
retf
push
sbb
cmc
out
fstp
idiv
imul
icebp
xchg
cld
lods
enter
(bad)
jno
mov
cli
leave
or
test
dec
xor
inc
(bad)
mov
mov
int3
sub
(bad)
les
lds
(bad)
inc
dec
mov
aad
pop
popa
add
inc
jl
stos
inc
and
repz
ins
std
ins
add
outs
mov
sub
push
int
sbb
xchg
push
cmp
(bad)
jge
(bad)
mov
cld
sbb
push
xor
popf
mov
sub
add
mov
xor
(bad)
xchg
sbb
mov
adc
jns
popf
aad
xchg
mov
fidiv
or
popa
(bad)
mov
je
fisttp
mov
or
mov
int
push
mov
sti
dec
fcomp
cmps
fsub
movs
adc
adc
scas
jns
mov
and
pusha
sbb
adc
jno
and
push
imul
(bad)
push
push
mov
out
icebp
fbstp
mov
in
cmp
xor
std
push
call
mov
movs
push
mov
lahf
sub
cmp
dec
(bad)
jns
nop
retf
xor
jecxz
push
sar
stos
pop
inc
sub
mov
hlt
in
stos
jnp
xchg
xchg
jmp
call
sti
mov
imul
lods
add
push
pop
or
fs
bnd
and
and
cmps
sar
fisttp
ds
sub
out
sbb
pop
pushf
movs
leave
mov
mov
pop
(bad)
in
jno
push
mov
sbb
dec
xor
jno
mov
ror
and
pop
and
xor
push
mov
push
cmp
pop
dec
pop
inc
push
mov
inc
cmps
int3
fild
ror
xor
das
sahf
mov
mov
lods
sbb
loope
ficomp
cmp
rol
push
mov
cmp
mov
inc
je
ret
cli
or
sti
bound
cmp
aad
jno
adc
inc
cmps
sahf
arpl
retf
xchg
js
dec
scas
xchg
mov
adc
push
inc
addr16
(bad)
push
mov
or
sbb
fild
popf
sahf
out
add
call
mov
adc
and
outs
sbb
cdq
xchg
ss
cmps
mov
shl
and
or
sbb
and
xchg
or
inc
jnp
inc
push
jg
das
aad
es
in
mov
push
jmp
mov
adc
arpl
cs
and
pusha
(bad)
cmp
loopne
pop
pop
mov
inc
xor
stos
test
idiv
sub
sti
push
mov
push
cmp
fs
cmp
push
movs
pop
mov
pop
lods
sub
pop
jmp
cdq
push
ds
cmps
sbb
scas
pop
stos
cdq
adc
adc
dec
jns
repz
cmp
jmp
test
loopne
sub
pusha
mov
add
xor
jmp
cmp
xchg
cmp
jae
mov
mov
push
fild
(bad)
xor
loop
adc
pop
fisubr
ss
dec
dec
aad
popf
mov
ins
pop
js
or
pop
adc
ja
ret
cli
push
sbb
mov
jae
retf
ds
jge
sahf
add
ja
iret
mov
mov
sahf
into
mov
js
mov
mov
out
sbb
inc
aad
sub
jmp
cmp
sub
movs
add
ret
shl
pop
rol
cmp
xor
pop
dec
popa
and
lds
pop
into
and
bound
cmp
(bad)
ins
stos
fst
cmp
or
je
add
and
test
fnsave
push
popf
lock
sub
inc
ja
iret
cmp
repz
sbb
inc
sub
push
jns
mov
in
jno
(bad)
cmp
pop
xor
imul
cmp
cmp
cmp
push
inc
xchg
scas
in
pop
adc
call
shl
je
cmp
aas
psrad
out
and
dec
pop
aam
ds
xchg
pop
pop
in
repnz
data16
hlt
out
sub
add
mov
and
aam
inc
js
lods
inc
sysexit
fdivr
jns
adc
push
add
scas
mov
cmp
test
jbe
sbb
jnp
into
shr
cmp
cmp
adc
fsubr
xor
rcr
lods
push
and
inc
xor
inc
jp
dec
cli
sub
pop
ror
mov
(bad)
fstp
xchg
fs
inc
inc
mov
push
mov
jb
jbe
loopne
sbb
fdivr
ror
sub
sbb
call
and
adc
adc
xlat
add
adc
push
movs
xlat
int
push
fstp
sti
ret
lds
pop
pop
jg
fs
add
adc
mov
inc
mov
push
xor
jmp
mov
jae
inc
inc
test
inc
loope
sub
inc
push
xchg
add
jge
cld
retf
or
cmps
mov
jp
(bad)
into
fmulp
fcom
fcmove
sar
push
retf
adc
(bad)
jg
lahf
cmp
jge
(bad)
pop
fadd
cs
or
pop
popf
inc
push
(bad)
sbb
inc
jmp
jl
dec
push
mov
inc
inc
popa
mov
sar
sahf
test
inc
lds
lahf
jns
dec
cmp
xor
adc
sbb
in
ja
mov
in
adc
fs
sbb
loope
or
cmp
inc
push
ss
hlt
arpl
pushf
cmp
inc
loopne
pop
dec
pop
test
mov
mov
add
pop
xor
test
add
aad
xor
xchg
test
cdq
dec
mov
jns
inc
pop
(bad)
out
sub
out
cmps
inc
shl
hlt
(bad)
push
(bad)
icebp
inc
cmp
scas
dec
jne
cmps
fwait
push
cmp
sub
inc
pop
dec
push
sub
popf
inc
dec
cmp
scas
and
adc
add
lods
pop
shl
sahf
out
movs
ror
inc
inc
adc
daa
ds
push
scas
cli
inc
aad
mov
cmp
ret
in
inc
pop
adc
add
mov
inc
push
retf
fdivr
cmp
out
push
dec
pop
xchg
push
sar
cdq
or
cmp
mul
inc
adc
pop
or
dec
xchg
mov
call
mul
sbb
cmp
jo
(bad)
sub
mov
and
dec
cmp
pop
fnstsw
icebp
inc
fild
mov
sub
gs
jo
mov
(bad)
retf
fst
push
sbb
lds
mov
inc
sub
iret
sub
cmp
pop
xchg
sub
xor
jecxz
mov
ret
inc
cmp
les
leave
jmp
lods
mov
shl
(bad)
xor
pop
inc
dec
jns
mov
xchg
push
dec
jp
inc
push
mov
add
mov
xor
or
(bad)
push
les
int
enter
sbb
jmp
adc
imul
(bad)
(bad)
ss
jns
xor
and
xor
dec
sub
mov
retf
inc
popa
les
ds
fcom
rcr
jno
jecxz
and
cmc
inc
jge
sbb
stc
xchg
leave
xchg
out
movs
dec
sbb
fistp
dec
cmp
sbb
mov
into
stc
jae
adc
pop
cmc
add
(bad)
mov
xchg
and
ins
retf
mov
sbb
pop
dec
call
(bad)
inc
sbb
or
dec
mov
push
icebp
push
and
cmp
arpl
sbb
(bad)
jno
and
cmc
mov
add
les
retf
aad
outs
repnz
fcomp
retf
mov
cmp
jno
fimul
fild
(bad)
fs
ficomp
js
aad
mov
xchg
aam
not
or
or
pop
mov
xor
mov
mov
ins
cmp
cmp
mov
daa
add
pop
xor
and
ss
scas
(bad)
sbb
push
mov
push
sbb
jne
pop
xchg
cmp
or
mov
sbb
xchg
iret
sbb
leave
xchg
sbb
fcomp
cmps
pusha
popa
pop
sbb
jns
pop
lahf
xor
adc
popf
dec
sub
cmp
and
add
retf
ds
xchg
clc
outs
and
push
pusha
fs
jns
inc
jge
(bad)
loope
sbb
mov
in
jno
mov
(bad)
hlt
ficom
pop
fsubrp
call
adc
cmps
push
cmp
not
mov
add
mov
sub
ds
pop
fs
pusha
dec
ret
call
xor
into
je
xchg
add
dec
rcl
mov
or
fs
push
bound
lahf
pop
or
xor
xor
cmp
xlat
cmp
inc
popf
pcmpgtd
mov
sbb
push
pushf
mov
cmps
jb
pop
mov
cmp
push
aam
test
push
dec
or
jno
mov
jns
jle
das
ins
imul
out
jno
mov
mov
mov
shl
jns
sub
out
call
mov
fldcw
mul
es
ss
pop
add
jae
adc
shl
shr
mov
scas
sar
jno
mov
cmp
rcl
jbe
cmp
mov
add
dec
imul
in
add
jns
sbb
jbe
xchg
and
das
es
shl
out
cmp
add
shr
repnz
pusha
rcr
test
dec
arpl
mov
fld
mov
dec
adc
cmps
loop
not
mov
mov
push
clc
mov
cmps
inc
cmp
sub
and
push
sub
push
dec
ins
jo
cmp
cs
bound
jp
clc
dec
jecxz
movs
xchg
mov
jl
or
daa
pop
out
sub
sar
sbb
std
xor
daa
outs
ins
sub
jne
jae
mov
idiv
jae
jecxz
ret
or
mov
es
xlat
sub
and
(bad)
je
sar
jge
call
dec
sub
int3
adc
aad
add
jle
or
xlat
dec
and
js
pop
sti
jns
jl
mov
and
add
adc
mov
pop
mov
clc
sbb
or
nop
pushf
nop
cmp
sbb
push
mov
ret
loop
bound
popa
jo
xor
ds
inc
ret
cmps
xchg
mov
push
rcl
ss
je
call
shl
das
fs
push
in
mov
(bad)
cdq
push
aam
mov
aas
inc
jno
sbb
pusha
es
xor
push
pop
pop
lds
mov
xor
xor
popa
sbb
mov
pop
stc
sbb
ins
mov
js
(bad)
imul
inc
(bad)
leave
push
les
push
push
add
iret
clc
scas
outs
inc
hlt
pop
cmps
scas
in
pop
stos
cmp
add
mov
push
fild
and
inc
sub
ficom
inc
ins
nop
mov
in
fwait
inc
(bad)
fs
shr
xchg
call
sbb
cmp
ins
pop
ss
pop
jo
test
lea
cmps
push
les
jmp
std
(bad)
aas
cli
cmp
adc
movs
lock
add
add
das
and
sub
jl
pop
mov
jnp
jnp
dec
cld
in
xchg
jb
fldcw
add
and
dec
inc
mov
je
mov
xchg
cmp
and
xlat
mov
jo
aad
bound
xchg
xor
addr16
lock
scas
sub
add
adc
das
pop
popf
mov
fld
popa
dec
movhps
fs
xor
ficom
retf
into
je
push
jmp
clc
pop
cmp
xor
jnp
push
xor
or
sbb
cmp
adc
pop
or
cmp
ret
scas
adc
dec
test
jae
mov
sbb
mov
mov
cmp
add
cld
mov
push
sub
scas
cdq
dec
mov
cli
aaa
aad
jb
add
dec
cmps
ins
data16
dec
pop
pushf
pop
and
pop
(bad)
mov
dec
mov
fcom
sbb
pop
pop
lock
cmp
mov
cmps
sub
and
fdiv
ins
enter
cmp
loope
and
jle
xchg
(bad)
xor
sbb
out
icebp
outs
sbb
js
pop
das
inc
div
outs
movs
scas
mov
ins
or
push
mov
fistp
aaa
dec
cld
push
stos
dec
pop
adc
mov
shl
inc
test
scas
mov
ret
mov
inc
hlt
pusha
dec
mov
and
jno
popa
iret
call
popf
mov
leave
cmp
xor
mov
fwait
mov
clc
or
push
pop
xor
out
lea
scas
mov
stos
aas
std
out
mov
stos
jno
repnz
mov
pop
ins
cs
icebp
das
inc
xchg
xlat
xor
inc
popa
mov
pop
pop
mov
jne
push
add
sbb
mov
cmp
arpl
pop
xchg
sub
fistp
lods
sar
ret
mov
jbe
sub
neg
mov
(bad)
pop
inc
jae
mov
pusha
dec
push
int
xor
leave
lea
mov
xor
and
mov
nop
(bad)
dec
fimul
std
outs
into
(bad)
and
(bad)
jno
daa
mov
es
xchg
cwde
xor
pop
icebp
add
mov
popf
sbb
sbb
mov
lods
dec
sub
test
outs
scas
adc
ss
push
push
sbb
scas
mov
ja
js
shl
ins
fcom
jl
push
push
cmp
cmc
pusha
xor
or
jae
pop
push
sbb
(bad)
push
or
push
or
sbb
mov
mov
gs
sbb
jle
ds
call
mov
fmul
fadd
jns
mov
pop
jno
mov
jno
stc
dec
mov
frndint
stos
lods
and
movs
dec
sub
arpl
xchg
clc
pop
js
mov
outs
sti
movs
into
sub
mov
pop
leave
or
ins
sbb
pop
push
xor
imul
pop
rcr
sub
rol
cmps
mov
sub
or
rcr
mov
(bad)
pop
cmp
dec
mov
mov
out
cmp
cmps
pop
push
dec
xchg
test
adc
call
mov
pushf
push
jge
sbb
pop
mov
call
cdq
mov
das
loopne
mov
dec
mov
mov
mov
pusha
jno
or
and
mov
cmps
aas
pop
jg
js
push
pop
mov
cwde
mov
pop
cwde
shl
push
mov
int3
pusha
mov
fnsave
sbb
pop
mov
adc
mov
jns
outs
dec
daa
mov
(bad)
(bad)
xchg
popa
jno
cmc
dec
xchg
pop
and
std
shr
scas
addr16
mov
dec
ins
cwde
cmps
pop
outs
rcl
test
out
pushf
(bad)
outs
rcl
aas
outs
fiadd
js
mov
mov
pop
(bad)
xor
sbb
jne
dec
je
popa
jb
pushf
xchg
mov
not
add
int
jnp
sbb
add
or
jne
shl
ss
out
mov
push
cmp
xor
daa
jge
xchg
jb
mov
fs
dec
pop
sbb
mov
cld
sub
test
add
sbb
mov
adc
mov
jmp
mov
cmp
fld
add
cmp
jno
leave
jmp
jg
sub
cmp
pop
push
call
dec
push
shr
jge
fld
pop
test
sbb
adc
xor
cwde
jbe
movs
cdq
adc
sbb
xchg
out
mov
xor
sbb
fcmove
jo
inc
sbb
add
and
add
lods
shl
cmp
and
out
or
pop
lods
lahf
clc
aas
xchg
pusha
jbe
cs
cmps
ins
adc
xor
ss
aaa
jne
popf
mov
fstenv
mov
popa
fsubr
int
mov
cmp
pop
adc
xlat
mov
push
aam
je
pusha
cmp
inc
fimul
scas
imul
scas
pop
inc
test
ds
mov
cmp
pop
cmp
es
pop
and
mov
sub
and
lea
mov
lock
bound
fnstsw
xchg
xchg
jb
jo
das
sbb
jmp
mov
pop
adc
add
push
mov
mov
movs
jnp
nop
add
hlt
xor
ret
cmp
dec
arpl
jmp
lods
repnz
enter
(bad)
sub
sub
scas
jge
sar
lds
jo
scas
mov
mov
push
and
pop
movs
push
inc
out
mov
or
test
dec
and
cmc
sub
cmp
jo
mov
xlat
jle
mov
adc
sti
pop
mov
nop
pusha
es
inc
sub
jp
cmp
dec
mov
leave
lahf
sbb
jns
or
mov
retf
push
sub
es
lods
test
out
in
dec
aaa
and
stos
test
push
sub
and
lods
dec
call
sub
call
push
ds
pop
out
cmp
xor
xor
jns
xchg
ja
and
or
fdivr
and
inc
cmp
lock
dec
xor
popa
xor
mov
sahf
push
jae
mov
or
sub
pop
inc
sbb
dec
and
xor
cmp
pop
pop
sar
jp
mov
pop
dec
jns
jns
shl
dec
(bad)
cmps
and
sub
adc
cmp
idiv
cmps
aaa
cmp
(bad)
sbb
out
inc
ds
test
inc
test
dec
pop
je
and
shl
popf
push
sti
jmp
ins
cld
(bad)
pusha
cmp
xor
int
(bad)
jp
sbb
sbb
arpl
add
mov
ins
rcl
sbb
push
fadd
dec
(bad)
mov
dec
xor
mov
mov
popa
xchg
sbb
cwde
cmp
sbb
cmp
mov
fs
adc
loop
ds
into
js
sbb
adc
daa
popa
push
sbb
(bad)
mov
mov
jle
or
ss
or
add
out
mov
lea
ja
inc
out
jmp
gs
inc
sub
call
jns
push
sbb
jo
sbb
jle
sub
push
retf
and
xor
adc
pusha
mov
push
fnstenv
cmc
pop
mov
push
push
cdq
cmp
pop
hlt
cmp
scas
cld
mov
scas
jns
xchg
(bad)
xor
jb
cs
jge
xor
jg
xchg
pusha
xor
adc
and
cli
fst
or
adc
cwde
sub
leave
pop
neg
add
mov
pop
adc
fs
pusha
cmp
cli
rcl
sbb
xchg
mov
or
or
aam
or
adc
jl
cmp
inc
adc
ins
cmp
and
add
mov
or
jbe
mov
sbb
or
cmps
push
out
xor
jns
dec
mov
adc
iret
mov
repz
pop
mov
pusha
jle
sub
pop
dec
jmp
pushf
jge
in
lahf
fldenv
cmps
jmp
mov
or
xlat
jle
arpl
jge
xor
pop
pusha
sub
sar
inc
push
xchg
stos
in
sub
(bad)
inc
cmps
jb
and
push
cmp
icebp
push
lods
mov
push
jle
sar
(bad)
pop
popf
call
test
sbb
push
(bad)
ins
push
sub
jp
out
daa
xor
jns
sbb
test
xor
mov
cmp
jns
mov
sub
daa
nop
mov
and
cmps
cmp
aas
xchg
and
scas
mov
fs
mov
cli
sti
push
or
jle
mov
add
cmp
jbe
sub
repnz
xor
ins
pop
xrelease
cdq
call
bound
jbe
addr16
cli
daa
leave
dec
xor
loop
mov
add
bound
or
(bad)
loopne
cmp
popf
js
call
lods
dec
push
mov
(bad)
mov
cmp
les
aas
cmp
je
loope
pop
jp
ss
jp
mov
or
ret
mov
lahf
aam
mov
pop
mov
hlt
inc
pusha
mov
gs
aas
sub
and
mov
jb
outs
add
jge
jmp
mov
sbb
aas
cmp
xchg
push
scas
call
fisttp
dec
out
mov
sbb
xor
pusha
fs
cmp
add
mov
jb
ja
jge
jnp
cmps
and
neg
dec
es
add
cmp
adc
xor
pop
jo
jb
jge
aas
cmp
cmp
jle
xchg
push
scas
ins
cmp
dec
neg
movs
sub
retf
and
sahf
mov
push
aas
pop
stc
mov
sar
lods
cmps
sub
mov
loop
js
retf
sbb
mul
cwde
popf
das
std
enter
jge
movs
nop
jns
xchg
cwde
imul
call
fst
cmp
xor
mov
lea
and
int
pop
retf
xchg
cdq
repz
pop
mov
push
cmp
ror
cmp
mov
cmps
lods
mov
mov
push
xchg
outs
clc
(bad)
add
jg
add
xchg
js
fild
push
stc
sub
in
js
jp
push
or
cld
mov
pop
call
jns
adc
aaa
cs
out
cmps
pop
test
out
mov
and
jl
xor
test
ss
pop
sub
out
cmp
dec
das
push
ret
jle
rcr
cwde
dec
stos
cmp
jae
and
sar
hlt
push
ss
cmp
shl
or
fld
or
push
data16
pop
and
pop
js
mulps
ror
inc
fsub
iret
mov
pop
(bad)
pop
mov
push
mov
xor
sbb
push
sub
jl
jmp
mov
les
mov
pop
sub
icebp
inc
xor
jg
mov
xchg
fs
icebp
mov
out
push
sub
out
or
mov
mov
inc
add
add
into
pop
adc
inc
scas
sbb
mov
sahf
cdq
mov
cmp
mov
xor
jge
mov
shr
mov
ins
sub
mov
stc
mov
push
pop
movs
bound
loopne
jns
jp
pop
sub
mov
pop
push
fbld
sar
push
sub
mov
bound
shr
inc
aaa
xchg
ja
xor
adc
outs
lock
and
sbb
dec
xor
stos
in
fstp
call
fistp
movs
jl
pop
fdivr
pop
je
pop
scas
loopne
addr16
xlat
jp
mov
es
and
and
mov
jg
fcomip
shr
fmul
(bad)
mov
cmps
adc
pop
add
shr
scas
sub
test
pop
sbb
xchg
hlt
les
and
(bad)
rcr
mov
or
enter
mov
mov
in
xchg
push
cld
dec
mov
mov
out
adc
arpl
cmp
jns
pop
xor
add
lahf
cdq
xchg
cli
mov
pop
dec
call
aaa
aas
mov
das
mov
mov
and
fbld
push
pop
js
das
mov
xor
mov
sbb
neg
xchg
fisttp
and
push
nop
fsub
xor
jle
shl
jecxz
jns
mov
adc
xor
jle
sub
pop
das
jl
adc
mov
xchg
aam
out
push
sbb
adc
mov
inc
xchg
dec
dec
and
jle
pop
sbb
rcr
sbb
mov
xor
loope
shl
add
popa
or
inc
mov
loope
fidivr
popw
mov
aam
push
jb
aaa
pushf
jecxz
push
test
mov
sbb
or
push
pop
fs
and
inc
mov
or
js
adc
mov
mov
adc
out
inc
les
mov
jne
sub
push
xor
cmp
dec
jo
std
syscall
xor
xchg
fdivr
push
(bad)
xor
sub
and
and
or
(bad)
cdq
stos
sahf
mov
dec
mov
and
cmp
jl
mov
cmps
ins
xor
shl
inc
add
mov
fs
adc
cmp
xor
jl
sbb
and
xor
repz
stc
xchg
xor
mov
adc
and
sbb
jge
and
cmps
mov
push
loopne
ins
scas
jne
clc
inc
pop
cmp
clc
je
and
sub
mov
push
rcl
pop
stc
mov
adc
addr16
ret
or
ins
mov
inc
adc
enter
mov
jae
xor
loopne
mov
push
adc
jbe
mov
cmp
and
aam
loope
xor
sub
push
cmp
ds
cdq
ins
adc
dec
xchg
ins
mov
sub
aam
inc
daa
sti
cmc
and
test
mov
aas
ins
aas
scas
jns
inc
pop
mov
sub
ficom
push
mov
mov
xchg
mov
loop
cmps
mov
push
rcr
cmps
jns
mov
aaa
and
(bad)
jge
xor
pop
mov
jo
push
add
popf
push
cmp
adc
fadd
ins
pop
sbb
xchg
xadd
popf
cwde
jl
pop
movs
jl
test
or
js
scas
popa
(bad)
retf
sbb
sbb
ja
pusha
fs
adc
cmp
sub
and
clc
test
or
mov
sub
popa
dec
and
jmp
xchg
imul
inc
lods
sub
rol
jmp
xorps
shr
icebp
je
stc
xor
cmp
pop
pop
mov
fdivr
sar
mov
popf
pop
nop
(bad)
shl
xor
je
sbb
xchg
outs
jl
(bad)
stos
stos
cmp
mov
pop
aaa
jp
jb
inc
push
mov
cmp
je
jge
arpl
inc
mov
adc
sbb
popa
dec
fs
fs
pop
shl
jns
xor
dec
je
jnp
ret
and
sub
push
jns
fild
call
fstp
and
xor
push
imul
and
fldcw
sub
jg
sbb
xchg
adc
stc
jns
fs
jge
jbe
int3
mov
mov
push
cmp
aad
mov
and
movs
jno
sub
repnz
sbb
jb
jbe
stc
mov
mov
xor
(bad)
sar
mov
sbb
cmp
aas
sbb
scas
pop
outs
mov
dec
cmp
mov
push
es
xor
stos
cs
pop
in
fsub
dec
or
pop
cmp
aad
add
cwde
push
xchg
inc
ins
push
mov
cld
psadbw
push
aad
jno
cmps
push
jp
jnp
xor
mov
mov
mov
pop
adc
jg
iret
std
adc
pop
cmps
cmp
ins
cmp
out
push
mov
fcom
cmp
(bad)
(bad)
into
imul
iret
sub
outs
sti
push
and
mov
jno
add
in
es
add
adc
mov
test
inc
dec
mov
xchg
mov
test
jno
scas
push
and
push
repz
fstp
lahf
pop
mov
shl
leave
xor
sub
jbe
icebp
int
pop
jns
adc
cmp
imul
in
popa
jnp
xchg
mov
cmps
sbb
outs
mov
jmp
cs
jg
mov
je
js
push
cmp
jmp
jns
jge
mov
lods
push
lock
sbb
xchg
xor
jp
jns
(bad)
js
movs
xor
outs
push
loopne
jl
in
dec
or
push
mov
cmps
jno
sti
add
xor
jnp
aas
push
xchg
fisubr
sbb
mov
xlat
pop
pop
jg
xor
jge
pop
add
xchg
push
leave
mov
rcr
in
push
cmp
push
rcr
lds
xor
inc
jo
or
mov
ss
sbb
sar
pop
inc
es
pusha
pop
pop
inc
outs
popa
jns
pop
xlat
cmp
jmp
jl
mov
xor
stos
add
sub
or
shr
xor
scas
sub
test
fadd
mov
mov
cmp
and
addr16
sbb
(bad)
dec
nop
xor
pop
adc
and
lahf
(bad)
enter
pop
jmp
ins
sar
and
mov
aas
imul
test
loop
jns
adc
jg
jecxz
jge
mov
clc
add
mov
inc
jp
loopne
mov
popa
mov
cs
sbb
lahf
sbb
pushf
add
mov
mov
ds
mov
sbb
stos
das
pop
das
ret
cmp
addr16
outs
test
mov
mov
xor
push
retf
call
imul
popa
scas
xor
xchg
outs
rcr
sub
vpsubd
ds
mov
xchg
je
sub
push
and
add
add
leave
sbb
mov
repz
scas
jbe
mov
call
sub
arpl
es
popf
push
pushf
mov
fwait
jne
loopne
push
mov
or
clc
and
fnop
jo
arpl
shl
jl
and
pushf
sbb
mov
mov
aas
dec
jg
adc
sub
xor
(bad)
push
hlt
cmp
xchg
cmps
je
into
and
xor
xchg
xor
call
pop
and
dec
stos
mov
cmp
clc
xchg
rcl
dec
fwait
pop
mov
das
sub
mov
loopne
pop
mov
ror
adc
cmp
dec
js
push
pop
fs
neg
loop
mov
xchg
cwde
adc
or
sar
push
out
push
call
and
jle
mov
sbb
sub
pushf
jp
cmp
sub
fbld
jo
in
or
mov
lods
xor
aaa
out
jb
or
or
addr16
rol
test
sbb
loope
jo
add
test
aaa
jbe
or
and
sahf
push
call
mov
mov
sbb
sub
mov
xor
sbb
repz
push
aaa
repz
cwde
xchg
jle
mov
add
popa
sbb
rol
push
adc
in
mov
or
data16
mov
lock
sbb
and
enter
cmps
adc
popa
ds
sbb
retf
push
int3
mov
pop
inc
or
xchg
fnstenv
push
aam
and
pop
dec
sbb
in
or
push
pusha
daa
xor
pop
jo
cmps
xchg
fdivr
fiadd
mov
jl
test
cmp
aas
jl
and
clc
popa
xchg
je
xor
lods
in
pop
pop
rol
cmp
mov
and
xor
cld
(bad)
icebp
or
jo
jb
add
shl
xchg
hlt
push
dec
pop
mov
sbb
xchg
mov
sar
sti
loop
popa
mov
imul
mov
inc
test
pop
imul
cli
aad
xlat
dec
inc
and
push
mov
inc
fild
sub
xchg
ds
dec
mov
int
cmps
add
jno
mov
sub
adc
pusha
xor
xchg
and
cdq
dec
sbb
cdq
(bad)
ret
dec
setge
hlt
mov
mov
(bad)
ss
das
stc
(bad)
jmp
and
cmp
push
or
mov
pop
lds
out
popf
test
mov
push
pop
rcr
mov
or
test
xchg
jle
sub
rcr
cli
repnz
rcr
mov
cmps
out
xchg
test
xor
sbb
or
das
and
int3
pusha
loopne
shl
mov
sti
sub
jge
pop
std
jmp
mov
arpl
mov
mov
jge
mov
fmul
fimul
lahf
and
sbb
popf
test
fmul
outs
not
ds
mov
outs
outs
stos
(bad)
lods
push
lods
movs
push
cmps
test
sub
mov
(bad)
aaa
xchg
pop
push
out
pop
xlat
aam
out
dec
rcr
dec
sub
rcl
jns
fstp
fidivr
dec
jne
stc
out
push
aas
mov
gs
loop
inc
imul
adc
mov
jns
adc
imul
jge
push
(bad)
enter
cmc
outs
mov
sbb
jne
mov
sub
into
(bad)
pushf
push
mov
mov
adc
lock
push
arpl
or
mov
das
div
scas
popf
dec
in
int3
sub
lea
xor
xchg
mov
and
std
movs
into
cmp
mov
lea
cmp
bswap
cmps
(bad)
mov
retf
mov
pop
or
iret
cmp
hlt
jnp
mov
jge
fwait
sar
cmp
push
movs
lods
cwde
jmp
mov
adc
pop
(bad)
xchg
adc
idiv
push
pop
ins
nop
mov
dec
sbb
(bad)
xor
adc
arpl
out
lods
jle
clc
fwait
shl
push
aaa
jle
sbb
lods
pop
jg
pop
xlat
mov
jge
sbb
lahf
sti
fs
inc
push
cwde
enter
cmp
jge
xor
nop
sbb
rcr
add
xor
sti
pushf
mov
aaa
push
and
neg
jns
cmps
sbb
jle
xchg
(bad)
call
mov
mov
pop
loop
pop
jp
cmps
xor
es
loopne
(bad)
repz
je
add
mov
adc
cmp
inc
xchg
lods
pop
cli
std
aam
std
mov
cwde
dec
mov
sbb
cmp
and
out
lods
adc
pop
push
call
mov
aas
dec
je
mov
nop
pusha
push
pop
ins
or
pushf
setne
out
nop
cmp
pop
sahf
gs
dec
sub
outs
jge
shl
sbb
cmp
inc
dec
lods
(bad)
enter
cs
in
and
stc
ds
outs
dec
jbe
shr
enter
pop
sbb
or
div
mov
out
xchg
ret
scas
ja
mov
shr
mov
xchg
test
rcr
push
cmps
mov
ins
sub
pusha
jo
popa
adc
lock
nop
sbb
outs
xchg
imul
jae
jle
pop
and
(bad)
cmp
sahf
jge
sub
mov
mov
and
dec
dec
ins
ds
aas
into
sub
jb
cs
fucomp
adc
cmp
jae
mov
pop
push
jl
adc
popa
mov
and
cmp
std
mov
pop
or
in
xor
mov
out
xor
fs
push
es
out
lods
pop
or
sub
push
fiadd
sahf
mov
add
cmp
fucomp
xor
cmp
jns
loope
sbb
cmp
cld
inc
cmp
sbb
mov
fdivr
pop
popf
movs
or
mov
mov
stos
test
mov
xlat
cmp
fst
popa
adc
jle
mov
push
add
xchg
aam
leave
ss
sub
push
data16
and
push
push
out
retf
mov
or
stc
sbb
enter
sub
test
js
and
add
push
sbb
xor
adc
das
jb
ror
and
push
fild
mov
fucomi
mov
dec
es
and
popa
lods
or
xor
cli
xor
ins
mov
sub
jle
jnp
or
mov
dec
or
sbb
pop
sbb
lahf
je
(bad)
movs
jae
ds
ds
popa
js
aas
mov
mov
popf
xchg
mov
jg
adc
pop
sub
add
lods
mov
jno
pop
std
mov
(bad)
fimul
push
lods
or
cmps
retf
retf
outs
iret
je
mov
add
inc
lock
mov
std
cld
push
repnz
add
lods
sub
pop
call
enter
xor
cmp
fstp
xor
jns
mov
aam
dec
xchg
push
dec
add
shl
xlat
popf
cmp
adc
mov
stc
ins
add
sub
xchg
and
dec
stc
dec
lods
cmp
xlat
data16
adc
or
cmp
xlat
adc
mov
jge
and
sbb
or
adc
arpl
(bad)
sub
mov
mov
mov
push
jnp
cmp
mul
add
cmp
jns
inc
bswap
xor
rcl
popa
sbb
cmps
mov
test
sub
mov
(bad)
lock
shl
test
leave
xor
sbb
mov
push
jo
popa
ffreep
arpl
adc
je
mov
mov
inc
pop
dec
test
iret
xchg
jmp
xlat
push
push
jl
push
and
sbb
popf
scas
jg
fld
dec
jae
loope
pop
sbb
cdq
les
xchg
and
cs
mov
jle
das
jno
dec
fistp
and
iret
or
popa
mov
clc
mov
outs
sub
sar
mov
popa
add
push
ss
ficomp
(bad)
add
adc
popf
sti
ds
cmp
mov
mov
inc
ins
adc
sbb
mov
aad
xor
cs
ja
mov
outs
sbb
and
test
xlat
xchg
xor
daa
jns
movs
adc
sahf
ret
xor
imul
daa
call
imul
mov
xor
int
cli
mov
scas
xor
popf
sbb
and
dec
popa
cmp
push
nop
pusha
xor
adc
push
sbb
dec
mov
imul
jl
pop
mov
jns
pusha
in
fidiv
lahf
xchg
pusha
cmps
sti
dec
outs
or
push
inc
xchg
sub
loope
test
inc
cmp
mov
pop
xlat
push
mov
outs
xor
xchg
fidiv
cs
xor
mov
sub
(bad)
xor
aam
imul
div
sub
xor
jb
mov
mov
test
sub
pop
popa
jae
js
loope
ins
xor
xor
pop
add
mov
cmps
loop
shr
dec
into
xchg
stc
mov
mov
and
jg
sub
test
or
xchg
jo
test
popa
scas
sbb
cmp
pop
xor
or
iret
jp
push
pop
add
mov
mov
or
into
mov
fsub
aad
stc
ds
(bad)
popf
jo
lea
test
fdiv
retf
(bad)
jg
jmp
arpl
xchg
push
das
adc
mov
mov
popa
fsubrp
ret
mov
jns
add
loopne
ins
jbe
push
test
sar
ds
gs
sbb
bnd
xchg
and
mov
ret
jno
jecxz
xor
cli
cli
scas
lods
and
jp
fsub
sti
and
sub
imul
mov
leave
lods
mov
mov
cmp
mov
push
jns
jge
mov
mov
mov
(bad)
test
sub
xchg
push
iret
sbb
out
les
int
jmp
xor
sar
ror
pop
cli
iret
mov
ffree
cli
into
xchg
scas
jo
mov
jns
sbb
iret
fnsave
shr
adc
ret
fadd
xchg
cmp
jno
into
sub
add
cmp
gs
mul
xor
jmp
int3
mov
adc
stos
mov
jmp
mov
or
movs
loop
aas
loope
and
sbb
pusha
adc
mov
mov
push
dec
push
dec
pop
jmp
jg
sti
add
jmp
sub
out
aad
pop
gs
mov
cmp
sbb
enter
cs
mov
out
(bad)
sahf
sub
outs
int
xlat
ins
dec
sub
or
push
jae
dec
jo
into
xlat
mov
dec
xlat
mov
rcr
xlat
movs
mov
xlat
push
mov
adc
xlat
inc
push
or
push
xlat
lods
sbb
or
or
ins
sbb
popa
or
lock
gs
aas
push
idiv
xchg
cmp
and
adc
sti
jl
mov
fs
lods
xor
and
int3
and
dec
xor
sbb
cmp
nop
aam
inc
pop
mov
js
adc
adc
cmp
push
jb
sub
mov
(bad)
mov
pop
and
call
mov
cmc
cli
push
xor
xchg
push
ficomp
sub
or
pusha
jnp
repz
push
lods
jne
pop
fs
sub
pusha
(bad)
jns
dec
mov
fbld
rcl
and
inc
nop
cmp
xor
cmp
aas
push
ret
or
pusha
sub
push
jbe
and
add
or
mov
cdq
cmp
xchg
mov
cmp
cmp
lds
pop
scas
aaa
fisubr
xchg
dec
cmp
sub
popf
pop
jl
and
in
loopne
or
out
jns
push
or
and
repz
popaw
loope
shl
jl
xchg
(bad)
ja
das
fcom
mov
jge
cmp
sbb
and
xor
scas
rcr
int
addr16
inc
and
(bad)
cli
popf
mov
movs
mov
adc
cld
push
stc
je
jle
movs
add
aaa
adc
outs
jle
retf
mov
mul
test
xchg
repnz
xor
std
pop
adc
xchg
ret
dec
or
jecxz
arpl
mov
add
adc
ds
mov
popa
cmp
jne
data16
lock
dec
inc
push
cmp
sahf
sbb
(bad)
xchg
sti
repnz
test
call
pushf
mov
jle
pop
(bad)
pop
xchg
and
retf
inc
adc
nop
fwait
sbb
rcr
je
rol
into
(bad)
stos
leave
mov
ret
mov
neg
js
xchg
ror
pop
jg
je
push
jg
mov
jns
psubd
lds
push
into
jmp
dec
xor
mov
inc
sbb
add
mov
jg
jle
sub
cli
iret
cli
(bad)
shl
xor
imul
imul
js
adc
or
inc
ja
out
sbb
xor
sbb
sbb
ret
jns
jl
push
mov
test
hlt
aad
sbb
pop
jp
stc
inc
sbb
sar
sub
fnstsw
div
lahf
mov
not
sahf
jmp
add
ins
pop
dec
and
imul
lock
add
push
popa
mov
xor
pop
ret
jle
pop
mov
push
and
(bad)
dec
inc
cmc
push
(bad)
pop
sahf
sbb
jp
push
data16
xor
jbe
push
and
inc
jg
pop
jge
jnp
pop
loop
fs
or
jle
iret
mov
fnstcw
rol
gs
jbe
xor
mov
pop
arpl
addr16
pop
sar
jbe
mov
and
dec
adc
test
out
cmc
jle
push
call
pop
sbb
push
pop
cmp
outs
retf
pop
mov
fs
jbe
out
fldcw
cmps
cmps
inc
push
loopne
fs
xchg
cdq
cld
add
mov
mov
mov
inc
add
popf
and
(bad)
lea
ins
and
fs
aam
imul
outs
inc
aas
movs
clc
fs
popa
push
push
pop
xor
cmp
leave
cwde
js
daa
xor
xor
popa
loopne
outs
cmp
lock
rcr
out
sbb
mul
jno
cmps
es
ds
sub
int3
call
fld
cmps
mov
add
stc
fwait
and
call
lds
and
je
cmp
out
lea
mov
mov
out
jmp
lea
and
test
mov
pop
mov
aaa
popf
mov
xchg
lahf
xchg
cmp
popa
lock
data16
cmp
fwait
pop
dec
mov
mov
xor
jbe
je
sbb
or
(bad)
pop
leave
inc
popa
sub
stc
mov
mov
cld
add
pusha
mov
not
outs
push
into
pusha
(bad)
add
pop
je
sbb
xchg
cmp
xor
xor
pop
cmp
repnz
aaa
push
xchg
(bad)
popa
outs
js
pusha
or
mov
jnp
add
ja
pop
shr
pslld
jmp
imul
je
mov
mov
(bad)
std
das
mov
call
cld
jne
into
cmp
ds
xor
dec
sub
int
mov
scas
mov
push
cmps
pusha
fidivr
mov
ds
and
jl
jmp
pop
push
jns
cmp
push
aad
adc
mov
mov
jbe
push
mov
add
pop
cwde
mov
xlat
mov
inc
mov
or
cmp
out
sbb
lea
push
and
mov
(bad)
std
cmp
je
sbb
mov
xor
inc
jmp
lahf
sbb
mov
cld
(bad)
js
int
inc
push
cs
in
cwde
mov
daa
rcl
mov
push
add
sar
je
shr
jge
stos
or
hlt
jbe
in
or
add
mov
(bad)
rol
and
sbb
ffreep
push
dec
push
and
add
push
or
xchg
sub
ins
dec
inc
cmp
mov
and
or
sbb
pop
mov
jns
ins
adc
fdivr
adc
xchg
cdq
sbb
loope
fs
add
mov
jp
push
pop
inc
aam
push
test
mov
ja
test
sbb
nop
pusha
stc
or
ss
stc
shl
pop
push
jo
mov
(bad)
rcl
scas
mov
ds
and
pop
sbb
jbe
bound
cld
cmp
aaa
aam
jmp
mov
sbb
push
(bad)
ins
push
movs
es
jp
mov
cmp
arpl
xchg
sub
pop
and
sub
adc
hlt
dec
outs
sbb
and
addr16
stos
mov
imul
push
inc
fsqrt
ror
aad
enter
inc
dec
mov
xchg
xlat
mov
popf
add
adc
inc
jno
loop
fnstenv
icebp
and
(bad)
fiadd
not
mov
and
mov
sub
jl
stc
cld
ins
fidivr
xor
push
(bad)
enter
mov
sbb
inc
loop
aam
js
adc
int3
mov
cdq
(bad)
addr16
dec
cmp
mov
(bad)
xchg
(bad)
cmp
and
mov
mov
enter
loope
rcl
les
dec
scas
dec
retf
out
rcl
mov
shl
cdq
das
inc
lahf
mov
pop
xchg
aas
loopne
push
inc
inc
xlat
pushf
sbb
jmp
sbb
adc
push
jns
jmp
ficom
das
add
stc
jno
jae
scas
jecxz
pop
dec
dec
push
inc
pop
mov
dec
push
data16
cmps
jbe
imul
and
dec
inc
daa
and
mov
ficom
push
enter
fsub
lods
push
aaa
leave
mov
jg
push
mov
mov
loop
fidivr
adc
xchg
mov
fidivr
jg
pusha
mov
cmc
mov
neg
in
inc
(bad)
das
pushf
jmp
or
aam
es
aaa
inc
mov
scas
xchg
dec
js
in
pop
fdiv
mov
sbb
adc
ss
add
sbb
in
xor
retf
(bad)
cmp
dec
jp
sub
xchg
mov
xor
mov
push
int3
cmps
jbe
sbb
xchg
test
dec
shl
popa
pop
inc
test
or
ret
(bad)
jb
xor
cmps
ss
daa
repz
inc
leave
cmp
mov
xchg
fcomp
mul
pop
das
bnd
out
mov
out
das
mov
loopne
repnz
sbb
sbb
cli
stos
pop
or
jns
call
xchg
es
in
adc
in
outs
xor
inc
pop
and
pop
push
das
rcr
aas
push
daa
scas
push
mov
int
outs
neg
jle
(bad)
neg
(bad)
pop
mov
mov
jmp
dec
scas
jmp
adc
mov
mul
ins
aas
(bad)
cmp
jb
adc
nop
push
jle
inc
test
jo
sbb
mov
dec
lahf
inc
int
mov
jmp
and
ja
clc
dec
aad
jno
mov
pop
mov
(bad)
jnp
jns
pop
daa
fidivr
adc
dec
xchg
cmps
mov
aaa
push
aaa
pop
pop
jl
shl
or
xchg
into
pop
mov
stc
stos
mov
in
sub
and
push
sub
in
outs
mov
adc
ss
mov
xor
sbb
jne
pop
out
adc
push
jae
popa
ja
movs
pop
push
js
mov
sbb
js
jmp
retf
cmp
push
mov
out
pop
mov
pop
pop
scas
stos
xor
push
icebp
cmc
in
iret
dec
cli
lock
fdivr
inc
retf
lods
sar
and
sub
push
cs
and
sbb
(bad)
bound
push
mov
mov
sti
bound
fnsave
mov
jmp
out
and
pop
lods
(bad)
dec
jns
in
(bad)
not
xor
int3
outs
mov
pop
pop
aas
test
les
popf
sbb
and
jb
dec
jle
xchg
lahf
inc
sbb
dec
sbb
pop
or
jmp
leave
cmps
xor
mov
sub
sbb
popf
jns
fst
dec
pop
sub
int
or
popa
push
push
ss
and
neg
loopne
mov
jge
mov
cmp
xor
ret
jne
pusha
and
jns
jp
lods
pop
xchg
jns
jp
(bad)
dec
push
pop
popa
cmps
dec
pop
(bad)
(bad)
mov
dec
retf
fsub
jnp
les
movs
ds
aam
stos
dec
sub
addr16
xlat
jge
ins
ja
xchg
je
or
pushf
xor
retf
dec
sbb
je
mov
mov
test
icebp
mov
mov
mov
jecxz
adc
imul
je
ins
jo
jne
test
arpl
retf
std
loopne
aas
outs
push
icebp
(bad)
xor
jno
lock
fs
cmp
mov
cmc
leave
sub
popf
pusha
addr16
or
xchg
mov
jp
push
sub
or
rol
and
pusha
jno
pusha
popf
adc
jg
imul
sub
pop
sbb
mov
ror
mov
stc
mov
mov
xor
cmp
pop
and
cmp
xor
sbb
sub
cmp
jns
bound
cmp
sbb
cmp
fld
push
cwde
mov
xor
aaa
add
das
mov
cmp
js
push
jns
ret
mov
adc
xor
jg
sbb
cmp
mov
inc
mov
xchg
pushf
mov
ret
movs
addr16
nop
mov
or
dec
mov
or
dec
retf
les
nop
sbb
jo
mov
sbb
or
js
dec
idiv
aam
std
stos
xor
mov
fdivr
and
sbb
jb
je
add
cmp
shl
dec
data16
pop
test
inc
cmp
call
ds
sub
stc
ret
hlt
pop
dec
iret
(bad)
and
fidiv
dec
pusha
sub
das
aad
clc
mov
push
cli
mov
popa
nop
loop
pop
(bad)
mov
cdq
js
enter
cmps
arpl
or
sbb
sbb
les
jns
fidivr
xchg
and
push
hlt
je
or
mov
jns
mov
lea
ja
dec
adc
pop
inc
cli
add
dec
jno
fcmove
jae
repz
xor
jmp
sbb
cmp
ins
scas
jge
xchg
jnp
call
ss
cmp
add
push
push
out
mov
lods
jl
sbb
mov
jle
fstp
shl
(bad)
scas
mov
xor
shl
sbb
rcl
enter
outs
or
jae
popf
pop
out
jo
jg
inc
ds
push
push
stc
mov
ins
pusha
pusha
pop
inc
cmp
adc
js
push
rcl
push
popa
div
cmp
(bad)
sbb
cdq
sbb
xor
adc
loopne
sbb
fsubr
in
fldenv
das
cdq
fdiv
js
lods
ror
mov
push
(bad)
test
sbb
and
dec
mov
cs
popa
in
int
dec
ins
push
jl
cmp
bound
add
and
push
xchg
outs
mov
inc
out
fst
and
xor
jne
jo
dec
mov
xor
pop
pop
sub
adc
cmp
jle
loope
and
(bad)
outs
and
mov
pop
mov
out
xor
shr
push
aad
scas
sub
push
ds
ds
(bad)
mov
scas
mov
cmc
xchg
mov
dec
sbb
cwde
nop
pop
or
test
pop
cmps
jo
mov
popf
out
lahf
sti
mov
test
add
push
sub
cmc
push
cmp
cmp
in
shl
mov
mov
fs
add
lods
and
ss
test
cmps
xor
jmp
sbb
and
add
(bad)
movs
sbb
test
jnp
add
xor
fwait
retf
xchg
inc
das
ja
shl
sub
ja
sbb
fs
jmp
out
jg
imul
aas
adc
mov
xchg
scas
cmp
xor
jns
mov
lahf
pop
pop
scas
(bad)
out
cmp
sub
sbb
jp
pop
pusha
fwait
lahf
aaa
and
xor
and
cmps
pop
pusha
adc
shl
sbb
inc
xor
mov
mov
mov
xchg
jg
push
clc
pusha
ss
mov
test
lds
sub
popa
push
in
clc
ficom
scas
add
jbe
jno
loop
imul
cmp
(bad)
sar
fisubr
test
pusha
lea
cmps
call
scas
cwde
xor
sub
sub
push
aas
mov
xor
xchg
or
cli
pop
daa
xchg
inc
clc
(bad)
(bad)
xchg
mov
imul
cmp
or
xlat
and
popa
cwde
cmp
inc
adc
int
in
add
cs
scas
mov
das
dec
xchg
cmp
jbe
add
out
ds
xchg
mov
mov
xor
and
cmp
je
xor
sub
jecxz
sbb
mov
in
(bad)
sbb
sbb
xchg
cmp
ja
(bad)
pop
lods
std
mov
jb
adc
call
js
es
cmp
sbb
cmp
adc
and
test
mov
add
xor
js
pop
xchg
sti
dec
xor
iret
call
push
iret
xchg
sub
imul
and
jns
ins
sub
scas
jl
aaa
lock
jl
xor
sbb
push
pusha
cmp
popf
ja
cld
loopne
mov
mov
add
out
dec
adc
mov
push
mov
mov
div
loopne
mov
cdq
mov
adc
lods
xor
sub
divps
mov
call
sbb
fnsave
or
push
addr16
adc
rol
jns
push
js
sub
int
adc
mov
test
aas
(bad)
jno
in
mov
xor
arpl
test
ds
in
mov
(bad)
sbb
loop
jns
mov
mov
test
xchg
popf
push
sub
sub
lods
mov
int
add
xlat
sub
test
ins
adc
fnstcw
js
add
call
jecxz
jp
hlt
shl
mov
imul
retf
lods
and
pop
lods
fmul
push
jnp
add
pop
jns
adc
inc
mov
mov
fsubrp
jmp
ja
inc
jl
jb
stos
xor
add
mov
xchg
les
div
jno
retf
or
cmp
jns
sahf
in
outs
or
ss
jecxz
push
xchg
pusha
pop
dec
push
dec
repnz
addr16
sti
xchg
inc
or
mov
jno
stos
mov
sahf
icebp
add
sar
popa
push
xchg
and
imul
mov
xchg
mov
outs
stos
xor
in
cmp
dec
mov
or
push
aaa
aas
rol
pusha
mov
jo
arpl
ffreep
xor
data16
test
dec
sti
aad
repz
(bad)
jno
jne
(bad)
mov
mov
jae
das
sub
movs
mov
mov
cmp
and
out
cld
wbinvd
sub
cs
ins
fdiv
push
xor
or
mov
push
out
or
hlt
xchg
mov
push
pop
sti
sbb
jbe
and
sti
push
mov
and
mov
dec
test
jo
xchg
fisttp
sub
xchg
xchg
add
inc
mov
mov
sbb
mov
arpl
inc
push
and
or
adc
mov
add
jo
push
or
xchg
ds
pop
jae
inc
fistp
or
pop
es
fistp
rol
pop
outs
add
mov
xchg
nop
(bad)
jge
stos
rcr
pop
pop
cmp
cmps
pop
sub
inc
sbb
mov
xchg
add
sbb
xor
pusha
pop
mov
es
fistp
mov
addr16
and
icebp
or
and
jmp
mov
es
aaa
mov
push
mov
pusha
fcomp
lock
cmp
dec
jp
push
and
cmp
pop
into
jbe
xchg
xor
mov
jg
jnp
sbb
test
mov
pop
ds
out
mov
stos
push
mov
push
int
jge
mov
(bad)
jmp
sbb
mov
int
mov
sbb
cmp
out
sub
jle
aas
or
(bad)
lahf
sbb
or
mov
(bad)
cmp
sbb
jo
lods
fsubr
cmp
arpl
cwde
pop
popa
mov
dec
lock
fimul
ins
adc
mov
movs
dec
xor
mov
aad
xlat
jnp
dec
jns
fstp
sbb
popf
mov
jl
push
ror
mov
sbb
hlt
out
jle
js
das
call
mov
add
cwde
mov
sbb
sbb
fadd
popf
mov
(bad)
mov
or
add
clc
push
jno
add
add
add
mov
hlt
fstp
mov
pop
call
aam
mov
rcr
js
das
(bad)
mov
(bad)
(bad)
cmp
mov
push
int3
aad
into
push
sbb
and
pop
push
mov
xchg
fs
and
or
pusha
push
lahf
push
dec
mov
(bad)
ja
push
je
les
pop
test
std
data16
mov
mov
and
jae
in
push
pusha
call
jns
neg
and
xor
js
inc
fidivr
jo
je
pop
mov
mov
loop
(bad)
jecxz
adc
ret
sbb
push
jl
push
jmp
test
retf
gs
ror
aam
fcomp
out
cmp
pop
frstor
xchg
int
pop
xor
fs
js
pop
not
xchg
lods
stos
lds
hlt
test
push
lods
ins
and
sub
sbb
cli
cmp
shr
jg
popf
adc
pop
sahf
mov
jns
mov
call
push
xor
xlat
mov
mov
push
push
adc
int3
mov
push
test
ins
out
iret
fldenv
int
add
fsub
adc
mov
dec
or
int3
add
mov
adc
mov
data16
retf
enter
pop
fs
cmp
fwait
pop
adc
jns
xor
fdivr
rol
sub
das
add
pushf
adc
jae
sub
push
je
aas
jo
retf
icebp
div
push
shr
das
dec
les
and
dec
xor
dec
xor
jns
int3
outs
or
xchg
scas
aad
xchg
das
xchg
xchg
fidiv
and
std
xchg
pop
daa
bound
stos
ret
test
sti
sbb
fs
adc
pop
inc
icebp
adc
xor
and
jns
jle
popf
jbe
pop
adc
mov
ins
push
jg
mov
xchg
xchg
mov
add
jne
daa
dec
lea
aas
scas
pop
or
sub
pop
cwde
pop
jno
pop
add
fcom
xor
mov
ss
dec
mov
lea
out
je
stc
push
and
test
and
jmp
ret
clc
jg
mov
sti
or
sar
cmp
inc
fild
xor
mov
cmp
cmp
sub
dec
pushf
sub
aam
cmp
cli
jle
sbb
stc
push
or
adc
xchg
add
cdq
(bad)
call
cmp
mov
jnp
(bad)
and
cs
jg
mov
or
mov
mov
fdiv
das
into
mov
cmc
das
stc
aam
or
mov
mov
cwde
add
not
scas
mov
and
fs
xor
cmp
pop
movs
pop
adc
fs
or
ins
loope
push
aaa
aaa
scas
scas
cmp
je
ret
mov
cld
cmp
rcl
popa
out
or
inc
push
jge
pop
jl
add
xchg
push
retf
sbb
mov
xchg
inc
loopne
jge
neg
rep
movs
ss
jb
mov
pop
fsubr
xor
movs
pop
rcr
pop
scas
imul
retf
dec
add
loope
aam
add
pusha
inc
cdq
ins
xchg
mov
fcom
mov
xrelease
test
push
lods
ins
sub
jmp
and
jo
sti
fs
(bad)
and
mov
mov
adc
and
xchg
cs
xlat
fabs
or
or
stc
sub
pop
mov
fadd
aas
push
clc
mov
and
add
push
lods
push
pop
adc
adc
mov
cmp
xor
loop
fsubr
jg
dec
js
sub
pusha
rol
sub
ja
sahf
jae
fcmovb
jns
in
and
cmp
inc
sub
xor
pop
cli
xor
jmp
mov
dec
aas
scas
or
je
int
xchg
push
jge
ficom
out
cmps
in
psrlw
das
pop
pusha
rol
dec
inc
cmp
popa
ror
mov
mov
mov
jo
das
mov
ret
dec
fcmovb
mov
xchg
add
test
pop
xchg
sub
sub
test
xlat
out
ss
stos
(bad)
adc
movs
hlt
daa
repz
mov
sub
dec
cmp
push
cmp
dec
add
mov
mov
inc
or
ror
addr16
int
adc
inc
(bad)
cs
call
pop
xor
div
pop
loope
nop
or
push
inc
push
mov
call
je
pop
and
(bad)
xor
jae
test
fnstcw
jge
adc
pop
pop
push
mov
push
in
lds
dec
xchg
mov
movs
sahf
popa
pusha
add
scas
push
jg
sub
out
xchg
fst
pop
inc
push
adc
mov
dec
fs
pusha
mov
inc
mov
fild
mov
jbe
pop
js
jl
sbb
stos
not
sbb
cmc
scas
and
mov
movs
scas
(bad)
mul
and
jecxz
pushf
sbb
jae
js
fs
cmp
xor
adc
not
push
out
out
sub
nop
cwde
pop
ins
adc
sar
sar
jns
adc
retf
hlt
leave
sub
stc
lods
pop
test
aaa
fsubr
adc
dec
dec
and
lock
cmps
push
es
mov
pusha
fisubr
adc
sbb
and
cmp
into
jns
dec
inc
cmp
push
inc
push
les
push
in
mov
cmp
jns
xchg
(bad)
jecxz
inc
jb
inc
outs
mov
test
push
imul
mov
cmp
out
int
xor
out
jmp
jns
call
rcr
daa
popf
dec
idiv
push
xlat
mov
xor
xor
ja
push
into
ins
jge
sbb
std
jl
popf
cli
push
and
jns
xor
inc
mov
sbb
fs
pop
cmp
cmps
and
mov
xor
cmp
cmp
je
cmp
out
arpl
or
push
jnp
xchg
out
mov
lfs
pop
push
in
sub
fidiv
or
scas
mov
sub
imul
js
sbb
fnstsw
push
(bad)
aas
jge
push
adc
mov
js
mov
out
or
push
and
daa
jne
outs
pop
js
push
out
lods
jo
sub
pushf
(bad)
aaa
js
pop
and
shr
adc
jb
popa
aad
inc
aad
xor
out
mov
aas
es
jo
cmp
popf
pop
retf
lock
out
add
test
into
or
sbb
cmp
mov
jb
nop
jne
repz
xor
sbb
js
fisub
sbb
xor
cli
mov
cmps
jp
popf
cwde
ins
jo
jbe
bound
inc
sbb
cld
mov
cwde
xchg
mov
sub
xor
ror
stos
add
push
and
jmp
daa
inc
pop
or
stos
rdpmc
inc
pop
or
and
sbb
fldcw
popf
(bad)
(bad)
sbb
inc
shl
aam
outs
jp
cwde
mov
das
adc
call
(bad)
or
pop
fst
jns
mov
xchg
retf
dec
fdiv
icebp
dec
pop
imul
cmps
movs
nop
jo
jnp
dec
push
add
xor
idiv
loope
stc
jmp
fsubr
stos
int
add
or
pop
dec
adc
pop
(bad)
sub
rcl
push
movs
sub
test
push
or
popf
fisub
add
inc
mov
or
ror
into
mov
cli
xor
and
pop
in
push
das
mov
jmp
mov
lock
in
in
scas
les
and
xor
pusha
dec
es
in
in
push
pop
adc
sti
xor
or
in
test
fstp
(bad)
inc
adc
inc
pop
aas
mov
scas
loopne
add
jle
push
pop
in
sub
iret
mov
rcr
call
push
gs
es
push
out
sbb
imul
xchg
arpl
loopne
dec
xor
xor
ror
inc
mov
ja
ficomp
push
xchg
sti
jle
and
fs
data16
xchg
mov
or
mov
mov
cdq
jo
enter
rcr
push
stos
retf
jnp
fwait
push
test
mov
jb
jp
inc
jp
sbb
mov
add
scas
outs
push
cmp
mov
int
xor
fisub
jle
xor
pop
rcr
shl
mov
ret
xchg
jecxz
dec
ds
mov
and
dec
loope
fyl2xp1
xchg
xor
lods
xchg
dec
sub
sub
pop
les
xor
loopne
xchg
aam
sub
dec
out
test
pop
push
mov
ja
into
mov
and
leave
mov
cmp
sub
jl
push
scas
mov
jae
ins
repz
add
push
xchg
ins
sahf
sbb
mul
mov
popf
iret
(bad)
fcom
and
or
cmp
into
arpl
inc
rcr
in
pop
sahf
daa
sub
(bad)
push
cmp
adc
test
push
dec
fisttp
cmp
jmp
int
jno
pop
jbe
in
fdivr
dec
out
fsubr
ins
cli
push
sar
add
sub
mov
cli
retf
jmp
and
push
jno
shl
mov
sbb
fsubr
xchg
mov
call
or
mov
es
cmps
pop
sub
mov
cmp
aas
xchg
loope
lea
fst
mov
mov
sbb
sti
add
stos
loopne
das
jle
pop
aam
add
stos
nop
sbb
out
cmp
jno
lds
sub
inc
cmp
sbb
or
pop
sti
push
cs
into
xor
jp
and
sub
es
mov
xchg
or
cmp
xor
test
je
pusha
popa
jo
std
sbb
lods
das
cmp
adc
pop
sub
in
stc
test
movsx
repz
push
mov
test
xchg
imul
pop
clc
xor
push
jmp
fdivr
mov
je
movs
shl
lods
fwait
jge
psubsb
loopne
stos
imul
stc
mov
and
test
jno
(bad)
fadd
mov
inc
sbb
outs
add
inc
mov
sub
push
cmc
leave
dec
shl
and
pusha
fwait
cmps
pop
or
cmp
push
push
adc
cmp
call
xchg
mov
add
mov
fmul
outs
div
dec
add
je
mov
adc
int
mov
ss
sar
and
cmp
cmps
or
jb
lods
ret
leave
inc
in
cld
jecxz
stos
mov
aam
std
mov
mov
inc
(bad)
cs
push
dec
mov
jmp
leave
inc
loop
push
jg
dec
or
cld
lahf
jge
popa
or
loopne
adc
pop
cmp
imul
fidiv
cmp
mov
cld
cld
cmp
stos
inc
retf
fidiv
rol
jle
out
add
into
mov
push
or
bound
mov
mov
cld
sub
cmp
pop
inc
pop
sbb
leave
shl
inc
mov
(bad)
mov
shl
retf
inc
scas
popf
xchg
sub
test
sbb
test
xor
or
or
xchg
popf
push
push
xchg
mov
adc
pop
inc
mov
mov
leave
pusha
les
lds
pop
enter
int3
inc
or
lock
push
test
add
inc
push
adc
fistp
pop
iret
xchg
mov
popf
aas
std
lods
push
pop
leave
jmp
popa
jno
inc
sbb
pop
add
les
mov
xchg
in
jg
mov
mov
dec
add
fistp
jle
pop
mov
pop
rol
mov
std
clc
retf
add
dec
gs
inc
test
or
mov
stos
mov
jno
aas
sbb
and
cmc
jge
inc
icebp
loop
aas
pop
jo
sahf
pop
inc
stos
mov
dec
and
dec
push
add
adc
inc
push
ss
mov
xor
lahf
lock
xor
and
jge
movs
inc
push
push
sbb
popf
stc
icebp
push
test
inc
inc
dec
pop
in
cmps
sar
xchg
ja
int3
or
cmc
iret
lds
imul
popf
pop
xor
mov
call
std
jle
pop
scas
cs
push
pop
sti
jb
mov
into
xchg
inc
mov
jecxz
and
in
mov
dec
out
cmp
ss
xchg
repz
xor
pop
sub
and
add
cmp
sub
xchg
lods
cld
test
adc
jg
xor
jo
mov
movs
adc
xchg
add
and
jbe
mov
mov
gs
dec
and
leave
pop
pop
fld
push
push
int
pushf
jp
aas
or
inc
mov
dec
lods
mov
les
ja
lock
clc
jnp
dec
xchg
cmc
call
adc
fcomp
jo
push
xor
push
scas
pop
or
dec
jge
jo
mov
js
mov
inc
lock
mov
cdq
pop
fst
sahf
cmps
mov
lea
push
shr
xchg
cmp
xor
scas
(bad)
js
loope
ss
adc
fwait
cmp
mov
scas
xchg
sbb
sub
sti
cs
fsub
out
adc
sbb
jo
xchg
leave
je
jne
xor
push
fdiv
sbb
scas
jg
lahf
cmp
pop
jae
inc
mov
js
loopne
mov
idiv
fsubr
mov
aaa
mov
pop
sbb
outs
sub
jle
lock
xchg
push
push
test
xor
fstp
dec
sahf
sti
(bad)
fcmovb
sbb
push
mov
inc
retf
stos
in
nop
scas
popf
adc
jb
es
imul
je
ss
sub
adc
lock
pop
mov
pop
daa
jmp
add
imul
stos
adc
cmc
pusha
adc
mov
jmp
stos
mov
mov
or
pop
sbb
(bad)
dec
fidiv
pusha
fistp
loop
or
outs
xchg
cmps
stos
iret
add
cmps
sbb
jl
aaa
push
mov
mov
push
dec
das
in
lods
jl
into
aaa
data16
cmp
pop
jmp
push
cwde
icebp
and
pop
and
pop
movs
les
add
sahf
xchg
pusha
push
add
or
adc
mov
js
push
dec
sar
inc
mov
clc
lock
enter
daa
pop
pop
cmovo
jg
outs
addr16
push
dec
pop
inc
jbe
scas
cmps
lahf
xchg
pop
out
xlat
iret
(bad)
ds
ss
push
push
push
jle
jbe
pop
push
dec
inc
mov
sahf
mov
inc
(bad)
imul
out
(bad)
test
(bad)
cmp
mov
inc
xor
ins
gs
push
cmp
mov
inc
xchg
lea
push
fst
int
jo
sbb
es
sub
mov
dec
aas
push
lock
xor
jg
sar
dec
mov
mov
push
and
mov
push
jle
sbb
add
mov
lods
jp
in
jl
cmp
sbb
add
inc
sub
dec
mov
lahf
test
enter
and
into
not
push
aaa
mov
inc
cs
std
sbb
scas
cmps
scas
dec
push
pop
lods
loop
(bad)
pushf
mov
in
out
pop
fsubrp
mov
pop
loopne
dec
add
lods
shl
ins
ret
ret
push
enter
stos
movs
or
mov
lods
jle
pop
out
mov
adc
jg
iret
sahf
cmc
xor
push
pop
cmp
test
push
push
pop
test
and
fwait
aas
and
sub
jns
data16
jge
jne
push
in
lods
push
cmp
jnp
outs
retf
mov
mov
movs
(bad)
add
pop
shr
mov
pop
pushf
into
out
not
cmp
movs
jle
aaa
movs
into
adc
inc
iret
jno
jmp
jmp
jle
and
(bad)
(bad)
xor
aas
ficom
movs
cmp
daa
mov
aaa
cs
sbb
test
or
push
jbe
pop
cld
aaa
scas
sahf
sub
fst
jle
adc
scas
mov
lods
bound
call
rol
xchg
outs
xchg
jle
jecxz
sbb
add
jl
mov
sti
xchg
mov
(bad)
cmps
lds
xchg
lock
mov
mov
ja
jmp
jge
jp
cmc
cmp
fwait
mov
push
cmp
rcr
dec
push
lahf
pop
je
out
jmp
mov
cmovle
div
add
das
js
push
outs
je
add
sbb
ja
pop
mov
push
fild
inc
push
dec
outs
push
add
and
call
or
pop
call
das
jnp
aaa
xor
js
push
pop
movs
and
jle
mov
test
pusha
sub
lods
test
pop
rol
mov
mov
pop
lods
or
add
call
sbb
clc
xor
fist
mov
mov
pop
jp
cmp
push
fistp
pop
ror
jnp
ds
js
mov
sar
xor
js
sbb
(bad)
stc
js
je
mov
pop
jns
fidiv
pop
je
mov
pop
cmp
mov
das
fwait
push
mov
sbb
cmp
mov
das
pushf
push
mov
sbb
cmp
fnsave
pop
je
mov
pop
cmp
das
ds
lahf
loopne
sar
fstp
mov
das
ficomp
jmp
jl
pop
xor
mov
pop
pushf
jle
mov
das
std
push
jge
je
mov
pop
aas
jle
push
sbb
mov
pushf
das
pop
push
ds
fs
fisubr
jp
sbb
jge
sahf
out
outs
sub
xor
jg
jmp
shl
sbb
lahf
das
scas
xor
jp
(bad)
xor
adc
xor
adc
mov
aas
scas
xor
stos
jge
mov
outs
xor
cmp
wrmsr
ret
push
xor
div
enter
inc
xor
mov
dec
ja
cmp
inc
mov
jge
mov
(bad)
or
xor
and
inc
adc
add
je
fs
inc
push
dec
inc
mov
inc
xchg
mov
inc
aam
les
xor
and
inc
adc
add
imul
push
dec
inc
mov
inc
xchg
mov
fild
retf
ret
cmp
sub
sbb
or
jp
push
pop
inc
push
dec
inc
mov
inc
xchg
mov
fiadd
retf
xor
and
inc
adc
add
imul
mov
inc
xchg
mov
fnstenv
imul
stos
sub
jno
inc
imul
cdq
ins
aas
scas
cmp
dec
jle
out
push
shr
sbb
jmp
js
fisubr
scas
add
in
mov
aas
mov
into
lahf
push
cs
dec
xor
(bad)
repz
inc
std
sahf
ds
cwde
xor
xchg
add
fild
pop
push
sbb
dec
adc
das
jne
push
mov
ror
adc
(bad)
outs
outs
dec
push
(bad)
and
push
pushf
mov
push
ss
call
cmps
fistp
retf
jo
sahf
jge
movs
pop
mov
jmp
aas
jo
inc
dec
jnp
cmps
xchg
or
jmp
mov
aas
sub
ja
mov
xchg
push
es
and
das
fs
lods
jg
cmp
add
xchg
fld
and
mov
sub
jne
stc
(bad)
out
push
sbb
push
shl
inc
inc
aam
(bad)
(bad)
mov
mov
rcl
xlat
call
mov
pop
mov
inc
or
pop
push
inc
nop
cmp
push
mov
sub
push
inc
minps
fiadd
outs
ss
sbb
aas
jo
jnp
pusha
jne
dec
in
js
scas
aas
pop
pop
in
pop
add
inc
pop
mov
pop
or
xor
clc
adc
cmp
pop
out
or
pop
mov
jle
and
sbb
(bad)
sbb
xchg
mov
or
and
lds
cli
jmp
popa
inc
lahf
jo
repz
mov
cmp
repnz
fabs
pop
out
cli
inc
out
ds
ins
es
mov
add
mov
je
mov
ret
dec
lods
pushf
mov
jle
inc
dec
jns
jmp
retf
inc
or
mov
jb
movs
test
xlat
inc
xchg
push
sahf
or
out
or
adc
push
ds
cmp
inc
in
jbe
adc
or
lock
add
stos
sub
sbb
and
xchg
and
sub
test
out
cwde
cld
xchg
push
push
sub
xor
(bad)
out
pop
(bad)
jge
and
sahf
pop
add
cmp
mov
pop
cmp
push
pop
dec
push
cmp
cwde
jl
jae
pop
daa
cmp
fcom
jb
mov
loopne
idiv
mov
mov
ja
and
cmc
dec
arpl
cmp
imul
shl
scas
mov
js
inc
(bad)
bnd
test
adc
sub
inc
and
pushf
mov
ret
adc
outs
lea
js
push
stc
lahf
push
sub
adc
and
push
xchg
cmp
cwde
dec
mov
stos
or
jg
mov
adc
in
je
stos
cdq
pop
std
adc
rol
add
or
leave
xchg
inc
clc
mov
inc
rcr
mov
jns
xchg
ins
into
mov
jno
mov
int
add
xor
js
inc
popf
dec
inc
cmp
push
sbb
mov
inc
add
push
out
inc
addr16
enter
lods
lods
inc
push
retf
hlt
shl
and
mov
ss
sti
mov
js
pop
sbb
(bad)
scas
push
out
ins
xor
(bad)
xchg
and
mov
clc
nop
jecxz
jb
inc
ror
sbb
cmps
(bad)
xchg
push
sub
ret
mov
sub
jmp
js
iret
push
shl
jne
sbb
stos
pushf
and
mov
shl
cmp
sbb
mov
and
(bad)
ds
imul
mov
ret
outs
add
fistp
aaa
cmp
xor
pop
pop
sahf
je
stos
mov
dec
cmp
mov
cli
mov
das
xor
ss
ins
cmp
stc
xor
cli
cmp
call
aas
cmp
aaa
fild
xor
and
pop
icebp
fnsave
sbb
(bad)
daa
pop
sbb
jle
in
sbb
fs
daa
sti
sbb
shl
fidiv
jle
sub
fistp
fidivr
mov
das
(bad)
push
sbb
mov
cmp
mov
inc
cmp
cmp
loopne
ja
pop
loopne
cli
jle
jl
mov
sub
pop
jl
jl
pop
adc
addr16
into
xchg
or
cmps
push
(bad)
dec
adc
cmp
aas
xor
test
shl
pop
pusha
es
push
jg
les
add
arpl
jp
mov
cs
fwait
aas
push
pop
adc
sbb
xchg
(bad)
mov
out
mov
sar
push
ficomp
adc
fisttp
popf
std
cmp
lea
mov
cli
mov
pop
aam
les
mov
mov
iret
add
pusha
push
push
call
jno
sbb
jle
cmp
dec
mov
mov
sahf
pusha
push
jle
loopne
mov
adc
fdiv
push
sub
jmp
adc
cmp
popf
cld
pop
push
lea
aad
jle
mov
std
xlat
stos
jge
fild
es
ds
out
(bad)
fs
mov
retf
das
sub
scas
je
mov
pop
dec
jle
mov
das
cmp
call
xor
pop
lahf
jle
mov
das
lea
pop
sub
cmp
mov
das
leave
aas
push
neg
loopne
je
mov
pop
ins
jle
mov
das
sbb
fld
out
stos
xor
jle
mov
das
cmp
lods
sbb
sbb
das
jmp
js
(bad)
jle
into
mov
pop
int
rcr
je
mov
pop
jns
cdq
jl
fidivr
dec
fbstp
jge
cmp
in
mov
das
sub
mov
xor
mov
pop
dec
jle
mov
das
ficomp
pop
int
mov
loope
mov
stos
js
jl
xor
movs
fadd
mov
cmp
jno
(bad)
xabort
cmp
push
stos
fisubr
inc
sub
inc
fstp
push
test
xlat
inc
xchg
nop
sub
inc
in
and
inc
pop
(bad)
hlt
repz
out
fidivr
sub
popa
cmps
sar
mov
jns
push
and
out
inc
xor
fldln2
inc
ins
inc
sub
adc
mov
or
daa
add
dec
js
in
pushf
xchg
out
mov
repnz
sub
push
leave
imul
mov
movs
xor
sbb
ret
mov
dec
outs
mov
add
in
add
aam
enter
into
cmp
call
xor
lea
add
stc
mov
and
push
fisubr
retf
jno
hlt
inc
aas
or
mov
sbb
loopne
imul
dec
rcr
cmp
jo
mov
jmp
cmp
cmc
ja
fwait
out
ins
out
scas
out
sub
int3
jnp
sub
bound
adc
mov
ins
jecxz
push
movs
cmp
push
(bad)
inc
cmc
lea
in
cmp
aaa
xchg
xchg
aas
in
ins
inc
clc
gs
les
lock
call
jae
fs
mov
enter
jp
cmp
push
inc
data16
in
sub
or
int
push
inc
sbb
add
xlat
aas
(bad)
xor
sbb
(bad)
xchg
int3
inc
pop
adc
jle
bound
sbb
jmp
xchg
ins
addr16
mov
mov
test
push
loopne
(bad)
inc
and
repnz
and
test
cmp
or
xor
inc
cmps
add
ds
xchg
inc
mov
in
outs
sahf
loopne
cmps
mov
test
jb
cmp
scas
stc
dec
push
nop
mov
cmp
mov
(bad)
cmp
pop
hlt
inc
sbb
mov
sub
ret
xchg
jmp
mov
cmp
shl
gs
loopne
add
sbb
xchg
sub
mov
cmp
dec
pop
and
mov
xchg
cmp
lods
loop
adc
cwde
cld
inc
popf
hlt
iret
nop
and
les
in
and
(bad)
mov
in
outs
pop
gs
outs
fdiv
mov
add
fadd
pop
dec
push
dec
pop
inc
inc
pusha
inc
push
cwde
add
mov
jo
lods
mov
cmp
sar
iret
xor
mov
pop
and
inc
out
imul
icebp
addr16
ror
sbb
pop
(bad)
pop
add
add
je
pop
aas
mov
out
sub
cmp
or
inc
and
js
nop
push
jmp
mov
cmps
lods
les
jmp
dec
sbb
jns
shl
mov
adc
lods
mov
(bad)
jmp
push
mov
inc
xchg
xor
add
ins
loopne
stos
and
xchg
push
jecxz
call
xchg
mov
cmp
ret
inc
lods
ss
es
dec
jle
lea
pop
mov
sti
xor
xor
shl
sar
push
hlt
out
ja
dec
lds
cmp
cmps
cli
cmp
(bad)
shl
stos
inc
inc
int
mov
xlat
mov
cmp
dec
cdq
in
mov
jae
enter
inc
fadd
ds
inc
mov
jle
xchg
or
loope
jecxz
pop
cld
add
jmp
mov
fisttp
inc
adc
xchg
sbb
and
push
inc
and
bound
add
jle
ins
or
int3
cmps
mov
add
fcomi
xchg
nop
into
inc
cmp
fsub
cmps
push
fimul
inc
mov
xlat
or
(bad)
jne
mov
ror
inc
and
xor
inc
dec
daa
jl
mov
add
in
push
inc
shr
xchg
fwait
lahf
sbb
cmp
hlt
aad
pushf
sub
inc
mov
ds
cmp
sub
dec
movs
or
mov
imul
or
aas
les
cmps
call
jecxz
retf
jmp
mov
mov
ror
pop
push
sub
mov
repnz
jmp
(bad)
imul
repz
lock
inc
push
icebp
sbb
jbe
inc
inc
test
mov
mov
cld
fcomp
cmp
popa
sub
jge
sub
mov
adc
stos
sub
rcr
mov
dec
mov
dec
mov
cmc
adc
pop
dec
dec
adc
call
inc
les
loope
aad
xchg
jl
test
jl
scas
mov
inc
js
into
fsubp
jne
sub
xchg
or
inc
fistp
imul
(bad)
and
cmp
mov
adc
xor
pop
movs
sbb
mov
cmps
loopne
call
jb
addr16
aad
fs
pop
inc
push
das
mov
xlat
loop
inc
xchg
jb
cmp
fsub
pop
inc
cdq
ins
or
nop
shl
test
stos
or
inc
xchg
popa
scas
cmp
xor
xchg
pop
mov
lods
mov
iret
fnstcw
fcmovb
fidivr
loopne
push
adc
inc
mov
xor
adc
mov
pop
popf
jb
inc
in
scas
in
leave
out
inc
rcl
daa
in
jg
(bad)
mov
movs
mov
fwait
mov
cmp
pop
lahf
inc
pop
fisttp
push
add
inc
outs
or
cld
ret
fimul
dec
fild
inc
dec
cmp
dec
rcl
out
(bad)
push
and
mov
pop
retf
iret
daa
push
loopne
mov
std
xchg
imul
in
fimul
push
dec
inc
xor
ja
cmp
mov
mov
pusha
xchg
mov
adc
mov
and
inc
inc
ja
outs
jne
jae
inc
fdivr
sti
or
stc
sbb
add
mov
cmp
stos
mov
mov
cs
jmp
cmp
push
cmp
mov
adc
mov
repnz
push
mov
inc
loopne
mov
jns
mov
inc
idiv
dec
jb
push
into
xchg
movs
xor
pop
shl
or
jmp
rol
aad
cld
icebp
cmp
and
pusha
cmp
mov
inc
out
push
cdq
(bad)
jns
iret
jmp
loopne
call
jnp
cs
je
ficomp
and
xchg
fdivr
aas
inc
jne
in
push
xchg
fstp
inc
call
pop
cmp
cmp
adc
pop
dec
inc
cmp
mov
inc
sbb
inc
imul
(bad)
inc
sub
stos
mov
push
loope
cmps
jae
fbstp
pop
sub
xor
cdq
mov
cmp
ins
enter
push
and
mov
fsub
sub
shr
xor
loopne
sbb
xchg
xor
in
sbb
fidivr
or
sub
dec
ds
xor
push
jl
sar
xchg
inc
push
jns
sbb
push
mov
or
pop
jp
mov
inc
inc
push
repnz
loopne
les
std
cdq
in
xchg
mov
pushf
cwde
mov
jmp
push
repz
sub
lahf
pop
vprotw
aaa
call
rcl
xor
cmp
fld
pop
dec
add
push
inc
cmp
mov
rcl
gs
or
inc
aas
out
cvttps2pi
dec
icebp
pushf
add
or
in
inc
popa
(bad)
jo
stc
mov
lock
sahf
pop
xchg
jae
loope
icebp
push
test
add
(bad)
iret
and
fcom
in
retf
fisub
lock
mov
jne
jae
jp
shr
inc
add
sub
pushf
sti
mov
fidiv
fs
js
cmp
fs
mov
cmp
or
sub
xlat
jns
or
fbstp
int
or
pop
mov
loop
or
lahf
aad
inc
inc
adc
and
pop
xstore-rng
cmps
inc
outs
in
out
xlat
in
pop
or
mov
cmp
cmp
push
jp
jle
call
inc
mov
add
mov
fstp
test
out
pop
ja
cmc
out
cld
inc
and
sbb
cmp
popf
inc
xor
push
adc
push
inc
loopne
iret
push
outs
adc
cmp
ficomp
mov
sub
push
xchg
imul
inc
in
div
hlt
sbb
xchg
push
xor
mov
bound
or
or
sbb
mov
push
hlt
pcmpgtw
jecxz
pop
cmp
mov
mov
arpl
mul
fwait
inc
outs
movs
mov
std
inc
mov
adc
or
inc
jge
imul
sbb
sub
cmp
cmp
pop
int
xor
out
inc
mov
push
(bad)
mov
in
loop
test
sub
pushf
cmp
lds
fdivr
daa
mov
test
lea
adc
loopne
jle
outs
inc
jl
pop
xchg
sbb
cli
inc
ins
jmp
inc
dec
pop
xor
sub
out
jns
add
arpl
or
mov
mov
int
inc
xchg
xchg
dec
cmp
inc
(bad)
push
cld
aaa
xchg
sbb
or
retf
sbb
fldcw
inc
aas
pop
lahf
popf
xor
adc
inc
popa
cmp
fisttp
es
mov
out
inc
push
push
add
call
(bad)
nop
cmp
rcl
lods
inc
or
ret
cmp
(bad)
(bad)
push
mov
xchg
inc
and
and
cmp
cli
out
inc
mov
addr16
push
test
imul
rcl
arpl
or
jl
out
imul
inc
adc
not
xor
fild
push
inc
jmp
adc
cmps
imul
pop
pushf
cs
sti
sar
adc
fadd
jp
es
das
mov
mov
push
pusha
mov
repz
dec
xlat
(bad)
xchg
xchg
cs
or
xor
sub
(bad)
ss
and
scas
or
loopne
xchg
mov
fist
mov
(bad)
adc
(bad)
cmp
js
mov
imul
pop
and
add
adc
or
jo
mov
fistp
or
shl
mov
and
aaa
lods
xchg
hlt
shl
es
cmps
mov
pushf
cmps
sub
adc
hlt
add
aas
pop
mov
pop
push
mov
xor
sub
and
cmps
sbb
das
mov
ja
or
xchg
mov
add
cmp
dec
scas
aas
xor
pop
cwde
pusha
mov
sbb
aam
pusha
call
rcr
stc
or
in
cmp
and
cmps
and
jl
cmp
das
shr
mov
pop
sahf
jle
mov
das
call
mov
pop
sar
mov
das
call
aas
sub
aaa
push
and
das
jl
sub
cmc
push
je
mov
pop
fnstcw
mov
aaa
aas
aaa
cmp
ds
in
test
aas
lock
xchg
sbb
sbb
test
gs
mov
mov
xchg
scas
push
push
call
mov
cmc
ja
add
sub
adc
fldenv
ds
cmps
jnp
xor
ins
push
mov
adc
sbb
lods
lock
pop
jns
out
cmp
add
adc
cmp
int3
ins
shr
cmp
jo
int
cs
fwait
(bad)
in
sbb
fdivr
mov
rol
pop
std
jg
adc
pusha
sub
sar
jge
sub
add
mov
mov
neg
inc
mov
jo
leave
rcl
jl
adc
pop
jo
sbb
mov
sbb
mov
jns
adc
clc
ret
push
movs
sti
cs
xor
jmp
lahf
js
mov
pop
pop
aas
jle
mov
das
cmp
repz
mov
cli
pop
call
push
sbb
je
mov
pop
fwait
jle
mov
das
sbb
cld
mov
cmp
std
mov
pop
sbb
das
push
push
fbstp
loopne
rcr
and
pop
pop
dec
mov
and
sub
in
cmp
fistp
jbe
jnp
movs
push
adc
in
scas
cmp
add
ja
mov
mov
xor
mov
ds
mov
pop
mov
adc
and
sar
mov
lods
sahf
test
xchg
jle
mov
outs
mov
dec
jle
and
test
fwait
pop
mov
mov
mov
push
pop
pop
xor
(bad)
xor
lods
cmc
ret
sbb
(bad)
xor
push
push
ds
jbe
loopne
cmp
xor
mov
dec
inc
mov
jecxz
push
jecxz
cmp
or
mov
add
jge
jle
inc
mov
mov
cmp
jmp
fist
mov
(bad)
sbb
jle
mov
adc
clc
ja
femms
cmp
jns
inc
aad
inc
fs
mov
mov
pop
mov
xchg
and
xchg
push
sar
push
repnz
sbb
repz
pop
test
lahf
retf
xchg
out
mov
(bad)
bound
call
(bad)
hlt
aam
arpl
outs
rcr
dec
popf
test
mov
push
out
fbld
mov
mov
adc
fs
cmp
inc
jo
out
add
adc
data16
dec
inc
push
pop
pop
lods
rcr
add
sbb
pop
popf
(bad)
or
cmp
es
inc
push
scas
xchg
nop
ror
inc
inc
aad
imul
dec
inc
std
leave
sub
mov
sub
add
js
jle
(bad)
jmp
xchg
rcr
pusha
xor
dec
mov
(bad)
sub
loope
cmp
leave
mov
inc
mov
int
jmp
out
push
pushf
(bad)
scas
repz
inc
in
pop
mov
mov
mov
call
pushf
mov
cdq
out
inc
adc
sbb
fwait
emms
adc
(bad)
push
pop
pop
sbb
inc
adc
sar
push
or
cmp
add
jns
(bad)
call
inc
cmp
xor
push
mov
inc
loopne
fcomp
or
div
addr16
jl
cld
lds
fdivr
loop
aad
inc
adc
and
test
mov
test
xchg
inc
and
mov
xor
and
aas
dec
pusha
dec
popf
push
fidivr
icebp
arpl
inc
push
pop
fwait
scas
imul
xchg
inc
addr16
lock
mov
es
(bad)
lds
mov
xor
sbb
ds
pusha
je
fidivr
leave
jne
rcr
or
aaa
stos
inc
iret
or
out
inc
and
jg
mov
xor
fcomp
fnstsw
jae
mov
gs
and
adc
inc
or
cwde
xchg
cmps
inc
js
jns
cmp
xor
inc
mov
xchg
sbb
inc
shl
cmp
mov
lods
inc
cmp
xchg
int3
push
sbb
sub
xchg
setp
mov
add
xchg
pop
sahf
lods
ins
jns
and
or
cmp
pop
jmp
ins
fcomp
imul
jmp
mov
and
aam
fidivr
mov
cmp
xor
mov
sub
fdivr
imul
loopne
aas
into
mov
adc
adc
cmp
mov
mov
inc
jl
mov
dec
inc
jle
mov
sbb
xor
leave
cmps
int
enter
inc
clc
popa
daa
mov
add
cmp
push
sbb
inc
mov
mov
sub
inc
push
xchg
mov
push
inc
ret
mov
(bad)
add
or
fnstsw
and
jge
pop
mov
rcl
in
xlat
add
mov
adc
mov
inc
stos
rol
mov
and
repz
arpl
adc
cmp
call
fisttp
movs
outs
or
and
pop
push
inc
fsub
jp
mov
enter
adc
js
and
pop
div
in
jle
and
movs
inc
xchg
push
bound
sub
cmp
iret
int3
jle
inc
jb
js
or
shl
in
inc
or
cmc
aad
jecxz
xor
arpl
mov
in
int3
jmp
push
mov
shl
ja
(bad)
div
mov
(bad)
movs
jno
jecxz
(bad)
in
cwde
pcmpeqb
adc
lahf
sub
inc
mov
xchg
ja
pop
dec
(bad)
mov
xchg
cdq
addr16
push
xchg
test
das
dec
dec
pop
inc
jmp
jno
out
popa
inc
inc
jne
adc
call
mov
sub
fwait
pop
jmp
das
xor
mov
popa
inc
pusha
pop
dec
(bad)
mov
(bad)
push
xor
fld
mov
mov
mov
cwde
and
sti
ds
out
loopne
inc
addr16
push
push
xchg
ins
pop
les
lods
ds
fsubp
and
cmp
ins
lock
data16
jns
jns
jmp
sbb
cmp
mov
cmp
pop
inc
cli
mov
shr
adc
inc
hlt
pop
mov
sub
scas
imul
inc
inc
inc
jg
push
nop
sbb
addr16
mov
pop
inc
mov
inc
inc
cmps
lds
loope
out
movs
xor
push
or
and
test
xor
aaa
push
xchg
dec
pop
stc
leave
inc
scas
jo
jmp
imul
int
es
out
inc
in
pop
out
push
mov
sbb
mov
push
rol
and
(bad)
in
pop
(bad)
cmc
and
xlat
jmp
int3
icebp
xor
lock
adc
jb
(bad)
push
mov
push
cmc
fsub
add
lods
stos
cmp
lods
push
add
loopne
sbb
or
inc
push
ds
std
and
stc
popf
add
repnz
mov
cmp
jne
std
push
fcmovnu
outs
loope
xchg
cmp
mov
cmp
rcr
inc
cmp
movs
cdq
pop
outs
or
fs
aas
mov
xor
jne
cmp
frstor
mov
daa
and
retf
push
push
ficomp
xchg
inc
gs
inc
bswap
fidivr
ss
mov
jp
push
enter
push
mov
das
retf
iret
repnz
sbb
scas
xchg
div
inc
fsubr
imul
jge
or
enter
mov
inc
lock
xor
xchg
imul
aad
mov
mov
inc
mov
jg
loopne
sbb
(bad)
mov
dec
ror
inc
mov
cmp
xchg
sbb
cli
jecxz
cmp
sbb
xlat
push
test
pusha
jae
push
fcom
cmp
retf
sub
push
rol
mov
cmp
clc
ja
test
cwde
jbe
pop
inc
pop
lds
jne
cmp
and
mov
retf
mov
sub
push
scas
inc
mov
out
dec
aam
xchg
inc
pop
push
mov
es
fld
sbb
sar
fisub
or
(bad)
sub
iret
hlt
ins
xchg
mov
cmp
ret
cld
test
das
xor
call
int
les
mov
out
cmp
mov
xchg
nop
fwait
test
aaa
jle
mov
in
xor
pop
cmps
and
addr16
adc
sbb
popa
mov
mov
xchg
mov
pop
xchg
sbb
pop
ins
cmc
xor
ds
js
mov
ret
inc
dec
nop
jne
ret
fsubrp
jl
and
pop
mov
add
push
stc
cmp
add
lods
pop
xchg
mov
mov
loopne
and
sbb
jae
je
jbe
idiv
mov
xchg
popf
pop
inc
dec
jge
push
lahf
fwait
std
or
ret
sti
xchg
(bad)
sbb
popa
das
ss
adc
fiadd
sub
mov
inc
int
fwait
nop
loop
add
inc
(bad)
div
out
aam
cmps
repz
(bad)
sbb
bnd
ret
inc
shl
xchg
sub
mov
ret
js
mov
pop
dec
mov
(bad)
leave
fisubr
inc
mov
imul
les
and
test
jb
pop
xor
jge
xor
mov
cmp
dec
and
stc
ret
call
popf
mov
aam
inc
mov
ins
inc
inc
add
sub
retf
adc
jl
and
js
xchg
push
pop
cmp
mov
outs
ret
fistp
adc
push
mov
mov
inc
fidivr
sub
sbb
nop
(bad)
sub
and
xlat
mov
sbb
enter
arpl
sbb
sbb
in
(bad)
xchg
xchg
add
(bad)
fldenv
inc
jle
inc
sub
repz
sub
cmp
and
daa
adc
inc
je
ss
mov
adc
or
aam
stc
inc
rcr
xchg
ds
call
sub
cmp
movs
xchg
fiadd
and
fucomp
adc
sbb
mov
cmc
aaa
or
lock
rol
scas
cli
mov
sbb
ret
stos
push
jge
loope
call
and
jae
cmps
xor
inc
aad
sub
pop
fsub
mov
mov
out
sub
ins
fnstenv
inc
loope
mov
mov
sub
adc
pusha
sti
xor
(bad)
lods
sub
inc
pop
addr16
xchg
jmp
(bad)
xchg
scas
movs
push
aas
xor
cmp
dec
clc
cwde
hlt
pop
lods
fdiv
lods
in
jno
inc
ror
xchg
inc
cwde
jmp
dec
mov
out
dec
mul
inc
pusha
stos
leave
mov
out
in
mov
sbb
add
inc
mov
push
retf
fscale
jo
inc
inc
repnz
mov
inc
push
push
popa
inc
dec
fs
les
mov
pop
es
in
inc
mov
mov
xlat
stos
push
pop
push
dec
pop
inc
inc
add
adc
shl
shl
mov
dec
loop
inc
iret
sti
xor
clc
dec
cmp
pop
xchg
dec
inc
sbb
push
sbb
lods
test
push
cmp
cli
inc
dec
repz
neg
push
or
mov
sbb
xchg
nop
xor
rcr
mov
test
adc
imul
pop
scas
fdivr
scas
out
sahf
dec
pusha
dec
pop
cmc
inc
cmp
pop
(bad)
cmps
inc
inc
cmp
dec
sbb
fadd
inc
ins
icebp
inc
cmc
jnp
shr
inc
pop
inc
jg
ss
and
jp
mov
test
xchg
inc
inc
add
aam
cmp
jo
push
add
dec
push
sub
lea
int
inc
(bad)
dec
cmps
pop
cli
cmp
inc
push
ds
inc
dec
gs
xor
add
mov
push
int3
retf
mov
adc
pop
stos
(bad)
mov
push
inc
push
imul
sbb
ret
sar
out
test
mov
arpl
add
add
lea
inc
retf
repz
hlt
push
imul
pop
not
inc
sub
jg
pushf
or
or
add
rep
test
pop
push
dec
inc
test
popa
setp
nop
cmps
jae
adc
pop
(bad)
aad
(bad)
pushf
adc
pop
cdq
adc
inc
loop
dec
cmp
xchg
add
fadd
loopne
scas
jno
push
pop
inc
dec
mov
(bad)
push
or
(bad)
dec
aam
cld
inc
aas
or
cs
mov
sbb
inc
in
imul
push
in
jmp
lods
retf
js
push
dec
mov
cmps
jmp
mov
cmp
cmc
cmp
repnz
stos
and
push
push
popf
imul
movs
dec
inc
shl
hlt
dec
std
inc
adc
(bad)
xor
and
jne
jmp
lods
jo
test
xchg
fistp
sti
inc
ds
and
lods
cmp
jbe
xchg
test
cld
inc
push
mov
push
jp
inc
jle
push
fcmovnbe
xchg
xor
inc
fmul
mov
jle
dec
inc
inc
les
in
or
cld
out
inc
cmp
mov
ins
inc
das
stos
mov
push
dec
push
push
cli
jb
shl
xor
mov
pause
call
pop
ds
addr16
xor
adc
sbb
sbb
cmp
sar
cs
push
mov
sub
inc
inc
xlat
adc
add
mov
(bad)
xlat
retf
sub
push
ja
inc
cmp
sar
cmps
adc
mov
retf
add
mov
les
sar
sbb
xchg
popf
out
retf
add
xor
aaa
cmp
push
and
inc
clc
xor
mov
inc
shl
out
xor
fnstcw
inc
(bad)
aaa
inc
sti
inc
idiv
scas
aad
pop
in
inc
sub
push
imul
push
cmp
daa
mov
les
es
inc
and
xlat
retf
inc
ins
jmp
add
scas
cdq
fisttp
enter
test
enter
push
movs
scas
ret
jecxz
mov
das
sub
mov
sub
aas
xchg
push
mov
pop
sub
cmp
mov
stos
inc
das
sti
inc
in
inc
mov
or
outs
out
int
inc
jl
cmps
movs
mov
and
mov
jge
adc
mov
mov
push
jl
cmp
pop
mov
sub
xchg
xchg
out
fimul
js
jbe
jge
cmps
mov
popf
cs
sar
dec
inc
pop
ins
popa
sub
add
ins
pop
test
aam
ds
mov
mov
shl
adc
pusha
enter
and
(bad)
xor
push
mov
inc
push
inc
pop
jne
push
adc
lahf
lods
cmp
out
int
push
fidivr
dec
xchg
push
mov
push
js
jecxz
inc
(bad)
outs
test
push
push
mov
scas
rcr
mov
outs
sub
rol
inc
rcr
mov
push
pop
addr16
iret
push
iret
inc
dec
aas
adc
push
aam
mov
pusha
xor
(bad)
inc
icebp
pop
sub
mov
sub
mov
inc
lds
cmp
push
into
cmp
sub
mov
adc
outs
dec
out
sbb
scas
imul
inc
cmp
(bad)
into
cli
dec
mov
pop
mov
out
xor
inc
sbb
jne
fsubp
je
icebp
mov
pop
inc
inc
sub
sbb
ds
lock
stos
imul
out
ja
jl
cmp
pop
xor
out
mov
lahf
pop
das
push
inc
push
fild
dec
or
inc
les
and
je
jmp
pop
inc
sbb
out
cmp
or
or
push
test
xor
enter
dec
inc
loopne
in
and
sbb
inc
inc
cmc
mov
mov
pushf
inc
inc
mov
pushf
mov
out
das
and
jbe
dec
jmp
inc
clc
sbb
in
xlat
imul
xor
mov
xor
jo
dec
inc
jb
or
adc
add
inc
out
sbb
inc
out
stos
adc
inc
mov
aam
in
push
retf
gs
out
outs
push
inc
popf
sbb
enter
push
scas
sbb
push
clc
inc
hlt
mov
aam
push
in
in
inc
imul
into
mov
mov
ds
pop
sub
ds
pushf
inc
inc
mov
mov
xor
and
cmp
push
ins
ret
jmp
add
inc
mov
cmps
inc
mov
inc
cmp
cmp
and
test
mov
and
lea
cmps
inc
pop
cld
adc
sub
mov
loopne
lods
sub
std
jg
push
xlat
clc
das
pop
daa
pcmpeqw
pop
ins
xchg
or
ds
cs
push
in
cmp
int
scas
aas
movs
repz
pop
inc
cmp
icebp
mov
mov
and
dec
cli
js
test
(bad)
lods
pop
inc
add
je
sbb
fimul
lods
mov
out
jle
fimul
inc
mov
and
sub
(bad)
lea
jo
inc
cmps
je
pop
inc
inc
push
dec
xchg
mov
das
inc
cmc
and
or
je
pop
inc
cld
inc
xchg
jnp
fstp
push
inc
and
fwait
sub
lahf
xor
imul
ins
inc
cmp
repz
sbb
inc
jecxz
cmp
sub
and
aas
sub
js
out
xor
sbb
in
ficomp
repz
ror
inc
adc
ins
test
add
scas
push
pop
rcl
mov
jp
das
mov
jp
sbb
push
inc
and
inc
sbb
sub
iret
ss
lock
cmps
jl
sub
push
mov
leave
push
add
push
and
cwde
fnstcw
add
pop
lods
(bad)
inc
inc
sbb
mov
push
push
inc
fadd
aas
or
mov
pop
jecxz
xor
mov
pushf
in
mov
pop
push
add
fnstcw
ficomp
push
inc
push
push
mov
ins
xor
(bad)
jb
inc
dec
inc
sub
lods
arpl
rcr
inc
xor
scas
mov
loop
adc
push
pusha
xor
ja
fdivr
push
or
call
cmp
shl
(bad)
mov
cld
inc
adc
(bad)
aas
add
(bad)
cmc
test
out
out
int
jmp
sti
jecxz
jp
sbb
lea
xor
adc
push
inc
mov
mov
pop
fucomi
sub
jp
inc
dec
int
mov
loopne
xor
ds
stos
repz
enter
cmp
sbb
cmp
enter
imul
repnz
xor
push
sahf
test
ds
sbb
sbb
or
cmp
xchg
clc
sub
xlat
jecxz
push
in
xor
mov
pop
cmp
push
out
mov
ins
xchg
mov
inc
push
jp
rcr
pusha
into
int
dec
cmp
je
std
data16
mov
fs
mov
inc
cdq
popa
movs
inc
inc
jmp
xor
aaa
and
pop
pushf
jge
cdq
inc
lahf
shl
ret
mov
aas
inc
mov
movs
test
inc
cmc
leave
repnz
mov
dec
jg
mov
out
dec
jb
repnz
xchg
push
mov
cmp
rcl
popf
inc
lock
push
clc
cmp
sti
fild
arpl
mov
addr16
fld
movs
fwait
cld
ds
neg
mov
test
push
fs
shl
or
or
jl
inc
xchg
mov
shl
xor
push
imul
dec
lea
inc
aad
js
call
inc
mul
dec
jg
mov
mov
sub
cmp
inc
pop
scas
icebp
mov
xchg
cwde
inc
popa
fisub
add
std
mov
rol
fsubr
xchg
das
add
add
test
mov
xchg
pusha
pushf
(bad)
push
sar
outs
push
fld
fmul
push
xchg
fdiv
inc
cdq
out
(bad)
sti
mov
movs
cmp
imul
jne
pop
inc
pusha
inc
mov
jae
fidivr
mov
mov
adc
jnp
gs
xchg
xchg
inc
cmp
test
inc
jo
mov
cmp
scas
mov
mov
inc
imul
inc
jecxz
idiv
push
pop
js
jmp
cwde
sbb
je
mov
enter
cmp
jmp
mov
cld
pop
lods
push
inc
fcom
repz
stos
cmps
dec
jbe
retf
sar
(bad)
out
sahf
wbinvd
cld
inc
(bad)
stos
add
inc
cmp
xchg
mov
push
add
cmp
cmp
inc
data16
idiv
xor
jae
ja
dec
jge
cmps
sbb
push
loop
xchg
and
mov
lods
out
sub
icebp
sub
xchg
xchg
movs
loope
push
mov
stc
push
outs
ror
sbb
fdiv
inc
addr16
jbe
pop
pop
test
dec
jae
push
inc
pop
test
mov
test
div
add
out
out
inc
sub
jb
fstp
cmp
xchg
jnp
das
dec
dec
inc
jno
fistp
inc
es
test
and
sub
cmp
cdq
add
lea
aad
mov
jo
pop
lea
je
or
data16
div
or
mov
mov
mov
jle
cmp
retf
pop
cmp
inc
push
pop
mov
fadd
in
inc
or
push
ins
nop
mov
inc
and
cs
xor
in
fild
aaa
retf
mov
mov
fsubr
and
dec
inc
inc
sbb
mov
cmp
sub
cmp
mov
xor
fs
cs
mov
hlt
or
mov
test
fdiv
outs
xchg
test
(bad)
loop
add
dec
mov
mov
pop
inc
mov
push
xor
sub
pop
gs
mov
aaa
mov
in
(bad)
out
mov
je
xor
cmp
jge
rcl
cmp
sub
mov
jae
nop
fstp
sub
scas
ins
push
out
xchg
mov
pusha
movs
xor
ret
pop
sub
fdivr
mov
ror
jle
add
nop
shl
ss
pop
sahf
aaa
lods
movs
inc
jle
cmp
push
jo
sahf
pop
sub
daa
jg
sub
ds
setg
lds
jge
outs
mov
imul
mov
sub
arpl
in
cmp
out
fnstcw
sub
ja
push
and
retf
push
int
outs
je
inc
cmps
rol
fstp
adc
movs
(bad)
loopne
call
nop
sar
adc
sub
and
cli
cmp
or
fstp
pop
xor
inc
mov
(bad)
call
push
fistp
and
cmp
ins
inc
fnstsw
inc
(bad)
ins
sbb
bound
pop
lds
movs
call
retf
nop
mov
adc
jns
sub
jle
inc
fimul
sbb
dec
push
mov
xor
std
pushf
pop
retf
js
nop
dec
mov
or
mov
dec
xchg
pop
cmp
enter
int
lods
test
sbb
cmp
out
inc
aaa
punpckhwd
out
test
cmc
xor
aas
add
push
sub
pop
cmp
xchg
xor
test
mov
push
jno
push
retf
(bad)
mov
fsin
enter
mov
movs
mov
dec
inc
cmp
or
pop
jg
inc
push
mov
sbb
mov
into
adc
int3
cmp
mov
mov
xor
loope
inc
jp
fcomp
cmp
inc
adc
int3
inc
xor
dec
or
repz
or
xor
fsubr
clc
push
push
and
xor
cmp
sub
mov
mov
dec
jl
sub
and
jno
xchg
inc
dec
add
mov
jmp
mov
js
cmps
and
push
inc
aaa
icebp
sbb
(bad)
(bad)
cdq
pop
enter
test
jmp
jb
jg
sar
inc
mov
push
outs
shr
scas
aas
inc
inc
movs
dec
test
pop
add
aad
sub
cmc
inc
jmp
lock
push
inc
sti
inc
cs
cmp
or
mov
ja
pop
dec
fld
pop
cld
mov
in
ss
stc
mov
addr16
fdivr
out
jns
inc
pop
(bad)
cmp
push
int3
pop
leave
pop
jno
int
cmp
xchg
out
dec
shr
nop
dec
pop
call
inc
cli
(bad)
loopne
jns
or
ror
xlat
(bad)
mov
inc
retf
add
jo
dec
and
loop
cli
mov
push
add
les
sub
fnstcw
aas
in
jae
mov
mov
push
xor
ins
loopne
(bad)
in
cmp
inc
pop
dec
bnd
pop
dec
addr16
push
data16
pop
mov
loopne
mov
jne
movs
cld
mov
jp
repz
js
popf
jg
(bad)
sub
add
inc
ins
xchg
push
imul
(bad)
loope
sub
inc
pusha
mov
stos
cmc
sub
leave
push
retf
pop
jp
ret
xchg
outs
fstp
in
addr16
rcl
sahf
mov
inc
inc
and
imul
ins
scas
xchg
pop
or
pop
and
fdivr
sbb
jbe
mov
test
jmp
push
(bad)
fwait
inc
or
dec
cli
sub
cmp
mov
iret
cmp
mov
leave
cmp
jecxz
cdq
movs
sbb
cmp
aaa
xor
mov
inc
pop
leave
push
int
adc
inc
call
jbe
out
or
mov
leave
loop
and
pop
cdq
fucomip
cmp
xor
loopne
fimul
test
sbb
mov
lea
fadd
or
cld
movs
mov
xchg
jnp
push
(bad)
movnti
add
stc
lea
loope
mov
lock
push
xchg
and
sbb
int3
dec
push
mov
mov
inc
mov
xchg
jg
lods
push
aam
stos
dec
jnp
inc
clc
icebp
sub
sub
shl
into
mov
pop
nop
lods
popf
mov
jle
stc
cmp
mov
mov
outs
push
xchg
and
test
cmps
cmc
cmp
dec
jae
cli
shl
js
add
cmp
in
and
dec
(bad)
jmp
jg
sub
inc
fistp
add
sbb
call
pushf
jne
mov
sbb
imul
test
xor
repnz
mov
xchg
cmp
rcr
cmc
fwait
xor
adc
les
and
cmp
xchg
push
cmc
fmul
pop
fwait
push
mov
pop
sub
xchg
repnz
inc
call
aam
push
cs
in
mov
pop
adc
xor
or
mov
inc
xor
mov
inc
dec
scas
lods
mov
popf
les
cmp
clc
iret
inc
ds
loope
scas
push
and
inc
jae
arpl
loopne
push
push
lds
xor
imul
xor
cwde
sub
pushf
inc
xchg
adc
cmp
jnp
mov
mov
test
jmp
and
and
pop
mov
inc
push
dec
jb
jbe
out
sti
inc
fisub
iret
clc
mov
add
loope
hlt
adc
sar
cwde
addr16
cmp
ret
jmp
mov
inc
cmc
fdivr
pop
cmp
dec
inc
mov
xor
cmp
jl
inc
and
inc
fadd
das
cld
dec
popa
mov
sub
mov
dec
loopne
and
shr
enter
les
sbb
outs
xchg
test
cmp
cli
ja
xchg
inc
and
test
pop
sub
mov
xchg
cmp
loope
or
push
fadd
cmp
fisttp
inc
jns
and
dec
mov
mov
stos
cld
add
stc
iret
rcl
ret
cmp
mov
dec
and
or
xor
add
call
daa
cmp
aad
iret
xbegin
cdq
inc
mov
call
cmp
mov
fadd
js
mov
add
cwde
cmp
pop
and
ins
cmp
xor
loop
rcl
fsubr
or
movs
sub
cmp
inc
lock
cld
mov
inc
dec
fstp
sahf
inc
test
jecxz
mov
jle
sub
movs
and
cmp
and
inc
into
cmc
inc
cmps
popf
fwait
lea
sbb
icebp
xor
sbb
push
je
xchg
or
push
dec
jne
mov
or
(bad)
inc
ret
pop
add
jp
rcl
sbb
cmovo
pop
cmp
add
retf
mov
inc
rcl
std
or
mov
inc
add
hlt
out
jnp
and
gs
jae
shl
xor
sbb
cs
dec
lods
xlat
push
dec
adc
jge
inc
and
(bad)
cli
or
add
scas
sub
cmp
mov
das
daa
adc
sub
pop
loop
inc
mov
inc
xchg
outs
inc
ret
dec
neg
mov
xor
inc
mov
cmp
inc
dec
jmp
test
imul
xchg
in
and
cmp
pop
retf
inc
mov
outs
mov
ja
hlt
xchg
cs
iret
std
fidivr
in
ins
in
loopne
inc
lods
sub
and
jmp
aaa
mov
pop
outs
stos
cmp
(bad)
sbb
xor
fld
sub
or
imul
icebp
outs
cmp
movaps
inc
fdiv
loop
rcl
add
inc
sti
mov
xchg
in
inc
sbb
outs
test
test
mov
sbb
push
adc
fdivr
test
pop
cmp
movs
cmp
cmps
mov
scas
ror
adc
in
cmovo
mov
and
lea
repz
jae
loopne
adc
inc
fdiv
sbb
ss
xor
sbb
jle
mov
in
cmps
arpl
stos
outs
pop
enter
mov
xor
push
jo
push
dec
jg
inc
mov
xchg
aaa
cmps
ret
inc
add
or
sti
xor
or
inc
xor
clc
push
int3
sbb
in
sub
ins
adc
fucomp
jno
ins
sub
stc
aad
inc
aam
cmp
mov
movs
in
jg
jns
or
add
inc
xchg
and
ins
cli
jne
daa
dec
ja
dec
scas
inc
bound
jb
in
push
adc
push
jp
push
das
xchg
mov
mov
test
inc
sub
pop
dec
call
(bad)
sti
test
cmc
repnz
cmp
inc
mov
adc
inc
fs
adc
stc
fnstenv
cmp
out
inc
inc
call
mov
push
xchg
stos
aam
xor
lock
xchg
jmp
aas
inc
sti
int
push
std
enter
cmp
pop
(bad)
sahf
imul
inc
dec
sub
shl
inc
test
add
xchg
mov
xchg
inc
mov
rol
ds
pusha
dec
inc
add
leave
mov
inc
mov
cmp
dec
inc
aas
add
ret
inc
test
xchg
inc
stos
xor
jmp
cmovp
jmp
cmps
push
int
inc
lds
push
xchg
mov
dec
std
pop
inc
call
jb
mov
mov
lea
adc
scas
or
arpl
fcom
rcr
test
cmp
mov
out
xlat
dec
imul
pusha
inc
and
sub
inc
cmps
add
jo
repnz
test
cmp
add
dec
mov
inc
sub
sti
inc
lea
cmp
cmp
movs
mov
push
frndint
or
add
popa
cmp
in
outs
jmp
fld
cdq
fcmovnb
out
or
add
retf
sbb
leave
call
nop
cmps
loop
sbb
jne
mov
inc
pop
imul
ds
je
mov
mov
ds
sub
mov
push
xchg
inc
mov
sub
adc
repnz
xchg
cmp
xchg
std
into
adc
or
ds
sbb
fld
jecxz
ss
jge
pop
ins
repz
sub
cmp
mov
cmp
nop
sub
jecxz
pop
aaa
cmp
xchg
jno
mov
sub
push
mov
cmp
cmps
mov
dec
std
hlt
mov
repz
mov
mov
enter
xorps
mov
or
jecxz
add
mov
dec
popf
mov
cld
sbb
cmp
pop
or
leave
xchg
push
sub
fdiv
add
cmp
leave
call
inc
fisttp
dec
and
xor
arpl
shl
fmul
sub
aam
fmulp
mov
pop
in
push
iret
pop
lahf
cmp
in
idiv
sti
or
shr
scas
stos
int
daa
xor
call
cmps
cmp
sahf
adc
adc
lock
push
adc
cmp
hlt
push
inc
repz
push
dec
imul
add
test
or
lock
jb
imul
mov
jle
sub
stc
inc
dec
xchg
xchg
ss
cmp
(bad)
in
sbb
sar
mov
pushf
or
sar
iret
inc
cmps
faddp
cmp
and
out
inc
(bad)
(bad)
movs
retf
lods
adc
outs
mov
xor
fcmovne
jns
push
mov
sbb
add
push
cmps
fs
pop
mov
test
push
adc
jb
aam
mov
inc
push
push
leave
xor
or
mov
mov
inc
sahf
int3
or
inc
popf
xchg
push
daa
dec
ror
fistp
mov
ret
sub
push
xchg
stos
add
xchg
push
and
mov
out
add
xchg
call
cli
data16
sbb
cmp
or
cwde
jno
inc
fild
pop
inc
pop
bound
outs
(bad)
and
mov
xchg
lea
shl
xchg
inc
add
cmp
inc
pop
popa
xlat
xor
jecxz
movs
inc
cmp
inc
inc
test
xchg
jo
and
in
xor
jae
push
inc
fstp
loope
or
(bad)
sbb
sub
sub
daa
add
xor
ret
out
xor
inc
sbb
loop
and
fadd
imul
jmp
retf
sbb
cwde
test
add
inc
pop
dec
bound
xchg
imul
cmp
ror
mov
enter
cmp
pop
shl
push
call
aad
dec
inc
mov
int3
nop
cld
jno
sub
in
ja
inc
sub
or
add
or
mov
rcl
call
test
dec
dec
(bad)
stos
dec
and
loopne
mov
sbb
pop
sub
sub
mov
(bad)
sti
and
xchg
inc
test
pop
int3
pop
lahf
cmps
push
jb
cmp
inc
xor
scas
mov
mov
fcom
and
xchg
or
mov
test
jp
cmp
mov
aam
cmp
sbb
xlat
dec
push
inc
pop
pop
adc
jae
fwait
cld
and
cmp
and
cmp
push
pusha
scas
jmp
cmp
mov
lods
ins
or
xor
stc
push
popa
push
movs
sbb
push
cmp
xor
iret
push
dec
stc
sbb
cmp
into
scas
jecxz
sti
retf
enter
dec
stc
mov
fst
and
pop
sub
pop
or
js
(bad)
test
mov
add
retf
inc
xor
xor
bound
fild
ss
or
cmp
dec
or
das
mov
ds
mov
fwait
mov
(bad)
xchg
lea
clc
ss
ret
cmc
shl
inc
add
inc
push
int
jo
inc
mov
or
xchg
dec
test
in
lock
ret
mov
(bad)
daa
aas
adc
pushf
mov
cmp
jo
iret
dec
or
or
xor
gs
jb
pop
in
ds
lock
loop
call
adc
or
xor
lea
xchg
fsub
mov
sbb
or
inc
enter
push
and
rol
pushf
test
jge
pop
xor
mov
iret
inc
fsub
or
fdiv
inc
rol
sbb
call
mov
and
cmp
popa
mov
mov
xchg
jmp
xchg
ds
dec
mov
push
mov
xlat
adc
aad
mov
pop
cmp
jle
jbe
jnp
jb
inc
jp
add
aam
cmp
imul
ror
fidiv
repz
shl
jbe
pop
cdq
add
ret
ret
sub
pop
popf
sub
cmp
sar
jecxz
or
data16
cmp
movs
lods
cli
pop
sahf
jbe
add
dec
mov
mov
and
repnz
popa
sbb
pop
jnp
lahf
jge
or
std
ds
xor
jg
cmp
push
lahf
adc
aam
jl
dec
ins
push
jo
not
dec
mov
cmp
lock
xchg
je
dec
jns
mov
sbb
add
xor
inc
sti
in
cmp
pop
and
cwde
setne
iret
cli
mov
loopne
call
(bad)
imul
mov
(bad)
hlt
xlat
in
jp
out
push
lods
dec
cmp
in
fldcw
inc
mov
jb
push
js
(bad)
in
fdivr
js
inc
ror
sbb
xlat
adc
call
or
aas
std
jno
or
ss
xor
cld
mov
into
cmp
jg
xor
sub
push
cld
fucomi
loopne
(bad)
fnsave
cmp
add
inc
pushf
xlat
cmp
in
adc
adc
ins
and
loopne
sar
lock
imul
cmp
push
mov
mov
clc
inc
mov
out
inc
icebp
cmps
cmp
inc
loope
lahf
div
jg
push
mov
inc
push
xor
sub
xor
stos
push
fxch
ja
push
cmp
and
arpl
shl
or
shr
xchg
fnsave
mov
xor
mov
out
lods
inc
hlt
xchg
push
leave
or
sbb
mov
out
push
cmp
lods
jg
push
jno
je
sub
xchg
shl
push
imul
test
bound
push
pop
out
mov
das
jle
xchg
fsubr
jmp
jnp
jo
mov
jae
jo
movs
retf
sub
imul
test
add
ds
mov
fwait
movs
scas
xchg
call
scas
dec
aas
inc
movs
add
sbb
inc
test
iret
mov
out
fiadd
loop
jno
mov
inc
and
and
enter
inc
lods
mov
jns
nop
loopne
xlat
add
xchg
mov
push
push
inc
and
sub
or
cmp
in
mov
jae
popf
or
mov
cmp
repnz
sub
cmp
dec
jg
inc
hlt
xor
dec
xchg
push
mov
jne
dec
jmp
lea
sar
scas
into
ret
mov
jp
dec
xor
lds
test
ins
repnz
js
dec
jae
cmp
div
jmp
cmps
add
lahf
das
retf
cmc
pop
inc
sub
and
dec
cmp
movs
jg
sahf
or
sbb
adc
inc
xor
pusha
add
in
dec
inc
outs
pop
mov
mov
xchg
sbb
jecxz
shl
cmp
test
and
xor
cmp
xor
and
(bad)
rol
inc
adc
adc
adc
(bad)
pop
(bad)
loop
ds
into
jge
cmc
dec
inc
aam
add
iret
inc
push
loopne
dec
fs
dec
inc
mov
inc
inc
ins
not
inc
outs
and
out
cld
ficom
inc
jae
test
(bad)
push
push
and
cmps
movs
xchg
int
outs
pusha
mov
or
pop
jne
inc
pop
lds
inc
test
in
addr16
xor
cmp
pop
lahf
fwait
jle
loopne
mov
jnp
xchg
ret
push
xchg
add
jne
retf
add
mov
mov
mov
repnz
push
mov
lahf
(bad)
mov
dec
mov
(bad)
adc
push
outs
mov
cmp
pop
xchg
mov
aaa
xor
loopne
sub
cmp
mov
cmp
aaa
push
call
and
xor
or
aad
fadd
rol
cmp
sbb
ss
cmp
je
pop
retf
pop
pusha
push
imul
push
jle
jge
cmp
jae
jne
shr
xlat
push
add
inc
ficomp
pop
or
cmp
repz
cmc
aaa
sub
inc
retf
out
cdq
nop
lea
mov
(bad)
lds
mov
push
inc
fadd
sahf
test
jl
add
pop
fistp
call
jge
inc
mov
out
xchg
jno
sar
pop
inc
js
push
adc
dec
mov
or
xchg
push
test
or
sub
add
enter
jbe
std
and
adc
ins
lea
jbe
retf
dec
cmp
jmp
xchg
test
rol
pop
iret
loopne
dec
and
cmp
or
sti
bound
adc
adc
mov
mov
sub
jmp
sbb
scas
inc
retf
stos
push
mov
xchg
jmp
test
test
or
stos
xor
aaa
sub
xor
loope
mov
mov
xchg
aas
inc
icebp
loop
ret
fistp
add
es
mov
iret
xor
cdq
dec
and
xchg
dec
inc
pop
sub
push
dec
pop
movs
pop
jle
jo
dec
inc
inc
aad
mov
mov
mov
xchg
mov
jo
test
in
mov
sub
add
lock
inc
(bad)
int3
push
into
xor
shl
mov
inc
push
(bad)
popa
mov
sub
mov
add
mov
mov
in
iret
fdiv
mov
leave
inc
ret
cmc
sub
pop
add
mov
nop
mov
inc
pusha
mov
push
shl
fs
lea
je
mov
push
int
push
iret
pop
retf
mov
dec
cmp
rol
inc
fwait
mov
nop
fcomp
popa
push
xchg
mov
cdq
pop
mov
repz
sti
cmp
mov
cmp
aam
or
sub
fld
outs
std
or
cs
cmp
out
loopne
jmp
ins
inc
sub
sar
and
jns
mov
sbb
add
ds
mov
cld
out
mov
jg
cmp
stos
xor
test
xchg
xlat
aas
loope
pop
inc
test
inc
pop
rsm
xchg
inc
nop
xor
dec
arpl
mov
inc
lods
and
push
cmp
test
xchg
xchg
or
fnstsw
fldcw
lock
adc
dec
push
dec
mov
out
cmp
and
jns
sar
daa
pop
arpl
scas
sub
jge
jp
inc
cmp
jecxz
dec
pop
aas
push
aas
not
cmps
mov
mov
fiadd
loopne
imul
iret
(bad)
adc
add
imul
stc
pop
push
push
jbe
pop
ror
ror
add
(bad)
(bad)
xchg
sub
cmp
mov
push
imul
leave
div
or
out
inc
jp
add
inc
movs
retf
xor
repz
fild
mov
loop
add
adc
int3
sbb
leave
in
cmp
or
jge
jl
add
pop
fs
push
ret
inc
mov
outs
popa
out
pop
cs
jno
sar
(bad)
xchg
and
sub
xor
(bad)
mov
xor
mov
das
inc
xor
mov
mov
jae
adc
mov
(bad)
iret
pop
inc
cmps
mov
mov
lods
sbb
out
pop
jb
jne
into
add
(bad)
(bad)
sub
fwait
retf
fisubr
popf
stos
push
jno
mov
pop
pop
and
dec
btc
adc
fucomip
inc
jl
xor
mov
fnstsw
retf
(bad)
mov
cmp
rcl
adc
mov
cmp
aas
cld
int
push
sbb
mov
cmp
fldcw
rol
inc
stos
psubsw
lahf
pop
ins
fdivp
or
ja
xor
retf
in
jge
retf
sub
ins
stos
pop
div
sub
inc
xor
ret
div
addr16
pop
cli
jmp
inc
loope
sbb
xchg
fsub
sbb
push
shl
mov
arpl
or
push
jmp
mov
test
inc
int3
xor
(bad)
dec
dec
fcomp
call
ror
xor
rol
dec
(bad)
sub
cli
sahf
push
xchg
inc
inc
rol
xchg
test
loop
std
and
push
xchg
mov
add
icebp
sbb
inc
xchg
cmp
je
test
js
sub
inc
fs
fdivr
inc
pop
dec
or
pusha
fstp
sub
inc
clc
ss
sbb
cli
sbb
imul
jmp
out
das
cmp
inc
aas
pop
inc
outs
std
cmp
fwait
jg
cmp
cli
mov
add
aam
push
std
ss
sbb
cs
mov
ss
mov
mov
xor
push
js
(bad)
out
cmp
rcr
dec
aad
inc
and
out
jo
(bad)
mov
inc
or
inc
cmp
in
and
gs
fxtract
rol
inc
mov
inc
xchg
ds
fsubr
pusha
jp
shr
jl
mov
xchg
mov
inc
jb
adc
mov
xor
sub
mov
sbb
pop
mov
push
lahf
je
jne
(bad)
imul
sub
stos
inc
dec
ins
xor
pop
inc
test
xlat
out
hlt
ror
xor
and
and
(bad)
cmp
out
xor
mov
dec
popa
push
xor
or
push
addr16
or
xchg
inc
xchg
lods
mov
and
mov
test
add
shl
retf
loopne
cmp
sbb
jb
test
sar
cwde
inc
jno
xchg
jle
(bad)
test
mov
pop
cmp
sbb
stc
adc
mov
sub
(bad)
jp
add
ss
lods
cmovo
call
inc
mov
inc
(bad)
repnz
cmps
pop
or
ret
jecxz
cmovnp
int
or
jb
cmp
bound
stc
xchg
sub
inc
cmp
dec
sub
pop
push
add
sti
mov
sub
mov
add
dec
lds
fiadd
(bad)
cmp
aaa
inc
addr16
mov
jmp
into
repnz
imul
ds
inc
pop
imul
push
mov
pop
sub
sbb
sbb
xlat
(bad)
mov
dec
call
(bad)
loop
jns
xlat
inc
iret
shl
add
out
fstp
push
mov
jnp
scas
xchg
xchg
cld
ds
and
(bad)
pop
ins
dec
push
popa
cli
aas
add
dec
push
lods
inc
repz
push
inc
aam
(bad)
dec
js
inc
fmul
sbb
inc
cmp
cmp
lock
scas
inc
inc
loopne
inc
jns
dec
sar
dec
(bad)
mov
inc
aam
or
cmp
dec
xchg
pop
stos
ret
xor
push
inc
jae
loope
not
xor
cld
fs
pop
lahf
fdiv
fidivr
mov
std
sbb
lds
pop
std
ret
icebp
and
outs
ins
out
dec
jg
pop
and
dec
mov
das
cmps
cs
and
cmp
mov
dec
out
aas
dec
repz
test
push
js
stos
in
cli
xor
fnstenv
(bad)
clc
push
push
mov
mov
dec
into
mov
inc
push
cmp
in
xor
sub
inc
test
int
inc
mov
inc
scas
mov
gs
std
pop
test
lods
int3
ret
sbb
mov
push
ss
in
inc
outs
jmp
inc
int
leave
idiv
inc
hlt
pop
lods
je
push
dec
inc
pop
push
popa
ds
cdq
adc
jp
inc
push
gs
xor
push
(bad)
and
dec
push
jae
cmp
cmp
pop
or
xchg
xor
std
and
aaa
aas
iret
scas
xor
sbb
fcmove
push
mov
mov
cmp
ret
pop
bound
aas
dec
mov
push
xchg
fs
jecxz
push
aas
sar
movs
push
sub
mov
jl
xchg
inc
add
and
jg
int3
mov
scas
aam
fidivr
or
fwait
lods
inc
(bad)
(bad)
inc
aas
sbb
dec
iret
pop
imul
aas
movs
nop
jns
call
sbb
cmps
cmps
pop
or
in
jbe
jmp
je
jmp
aas
mov
push
inc
jmp
repnz
lods
mov
les
inc
mov
(bad)
sbb
mov
hlt
retf
jl
jmp
jl
inc
sbb
cmp
or
aas
aam
cmp
jnp
pop
aam
dec
retf
lods
(bad)
sbb
arpl
(bad)
sti
inc
hlt
dec
clc
movs
push
mov
ja
and
shr
out
or
sar
push
xor
cmp
rcr
inc
cli
and
cmp
pop
stos
mov
in
cmp
pop
inc
push
sar
pop
mov
aas
jmp
pop
inc
(bad)
cmp
addr16
xchg
adc
pop
sti
jecxz
aas
shr
into
in
inc
pop
(bad)
in
xchg
cmp
dec
mov
cmp
inc
xor
xchg
js
ret
dec
lahf
daa
pop
inc
jb
dec
mov
inc
mov
fwait
aas
xchg
sbb
das
mov
xchg
or
push
in
push
cmp
aas
dec
sub
inc
ins
fs
mov
(bad)
(bad)
jbe
ds
aas
push
cmps
adc
inc
idiv
std
ins
(bad)
cmp
adc
mov
jmp
xor
mov
inc
or
xchg
mov
or
aas
mov
aas
fld
cld
inc
(bad)
movs
mov
mov
fcmovnbe
and
jb
and
ins
call
sub
cmp
mov
and
bswap
inc
jbe
aas
inc
pop
xchg
leave
mov
loope
cmp
icebp
mov
mov
mov
inc
lock
cmp
xchg
inc
icebp
push
and
jl
cmp
cli
(bad)
xor
cmps
cmp
pop
and
sahf
cmp
imul
cmp
stc
lahf
nop
arpl
aas
mov
or
test
or
xchg
inc
imul
cmp
ds
ficom
add
call
mov
cmps
lods
shl
pop
push
fidiv
mov
add
hlt
pop
inc
ds
inc
movs
cmp
sbb
xor
jns
or
push
inc
pop
inc
jle
addr16
jnp
pop
mov
imul
mov
in
je
stos
rcr
ds
test
inc
dec
xor
xchg
sub
add
aas
fisttp
inc
and
mov
cmp
js
cli
aas
inc
clc
enter
mov
cdq
push
in
mov
mov
rcr
cli
loope
mov
pminsw
arpl
mov
ret
inc
call
in
dec
rcr
inc
test
inc
push
push
or
jnp
lods
fimul
jp
or
es
mov
pop
mov
aas
test
push
aas
jb
pop
inc
push
rcl
mul
push
inc
dec
ret
or
cmp
cmp
push
shl
data16
je
ret
mov
sbb
inc
pop
mov
push
cmp
adc
call
gs
pushf
test
pop
mov
mov
jns
mov
rcr
ins
addr16
mov
cmp
ficom
ss
ftst
inc
sub
cmp
lock
dec
shl
into
cmp
fst
cmp
inc
sbb
sahf
out
cmp
inc
shr
mov
jp
mov
rol
push
inc
ficom
dec
push
mov
scas
and
dec
jmp
cmps
not
popa
ds
add
mov
cmp
daa
int
fild
dec
jp
cdq
popa
das
aas
movs
jbe
scas
and
pop
inc
xor
loope
sub
cmps
data16
push
push
test
inc
retw
dec
gs
shl
test
mov
inc
sbb
sub
jbe
in
sub
out
sub
jmp
jle
mov
rcr
jnp
add
pop
push
jns
loope
fdivr
arpl
xor
dec
and
cmp
and
ret
jne
inc
das
ja
leave
push
fdiv
sub
lds
cmp
ins
cld
jmp
mov
movs
out
js
jbe
xchg
leave
aas
repnz
jg
das
mov
dec
inc
xchg
nop
jp
cs
fsub
adc
stos
aas
adc
(bad)
cmp
mov
pop
jp
icebp
aas
jne
inc
cmp
out
sahf
inc
das
retf
cmp
jae
(bad)
mov
lods
lods
inc
inc
add
mov
pop
jae
icebp
aas
inc
arpl
mov
sbb
je
popa
lods
jns
or
cmp
retf
aaa
and
icebp
aam
aas
inc
mov
inc
and
(bad)
std
ror
into
pusha
mov
sbb
test
aas
inc
sysenter
jb
mov
inc
fild
inc
fs
scas
mov
(bad)
out
inc
mov
pop
aas
dec
mov
inc
push
mov
xor
ds
push
aam
aas
lods
dec
inc
or
inc
and
xor
adc
into
loopne
mov
inc
mov
push
sbb
outs
mov
inc
sub
xchg
iret
push
push
aas
dec
sbb
inc
movs
push
pop
sbb
inc
fidivr
cmp
push
inc
cmp
push
mov
and
mov
sti
inc
xor
fstp
inc
div
pop
jl
push
sbb
mov
mov
jl
(bad)
jp
and
fbstp
pop
jno
xor
bound
cmp
inc
push
jp
ror
cmp
imul
je
movs
pop
dec
(bad)
imul
cmp
sub
scas
add
or
pop
loope
rcl
mov
cmp
sbb
call
test
sahf
xor
daa
mov
sbb
jge
jns
inc
dec
jp
mov
aaa
pop
mov
xchg
(bad)
mov
add
cmp
ror
mov
in
mov
inc
adc
scas
dec
jle
outs
cmp
sub
jae
xchg
ror
jno
fst
adc
push
stc
pop
inc
cmp
lock
outs
bound
movs
data16
int
push
(bad)
adc
int
aam
inc
jl
inc
inc
pop
jmp
or
das
leave
clc
cmp
pop
into
adc
push
xor
fisub
cmp
add
mov
in
test
sub
shr
push
or
bound
dec
inc
inc
jb
xchg
mov
and
xchg
and
(bad)
inc
mov
stc
inc
or
das
ror
aad
rcr
jnp
pop
cmp
jae
call
xor
iret
or
cli
mov
push
fcom
inc
dec
inc
inc
dec
cmp
jmp
jmp
dec
shr
jns
sub
out
inc
and
fild
mov
movs
sub
ds
sbb
dec
push
inc
mov
jno
pop
sbb
pop
xor
xchg
mov
xchg
lahf
xlat
cdq
test
test
dec
cmp
and
push
sbb
out
arpl
ins
inc
bound
xchg
push
pop
sub
jno
cs
xchg
lods
dec
jle
jle
outs
inc
jmp
adc
xchg
add
jp
setl
daa
cmp
inc
clc
repz
pop
and
add
lods
push
ret
rcl
add
inc
repnz
and
xlat
mov
push
cmps
mov
stc
(bad)
iret
in
dec
ret
out
test
es
jge
fiadd
or
lea
mov
or
xlat
or
test
rcl
inc
(bad)
gs
jno
int
inc
dec
pop
mov
out
mov
movs
repz
ins
cld
out
inc
leave
push
or
xor
lods
sahf
mov
mov
inc
xchg
xor
in
inc
arpl
or
stos
rcr
leave
push
fmul
cli
into
pop
dec
inc
mov
(bad)
(bad)
jl
(bad)
inc
pop
cmp
push
cli
xchg
xlat
xchg
cmp
mov
fisubr
inc
jmp
cld
push
push
loop
add
inc
push
add
xchg
jb
mov
sub
jmp
jo
enter
(bad)
push
into
or
test
(bad)
and
push
push
xchg
rcl
pushf
(bad)
mov
xbegin
push
inc
ins
or
sbb
scas
inc
rcl
ins
mov
sti
and
call
and
push
jecxz
repnz
(bad)
cmp
mov
ins
mov
ss
and
movsx
cmp
push
push
jp
xchg
sti
(bad)
cli
clc
and
test
or
inc
out
scas
adc
add
rol
cs
cmp
lods
cmps
mov
pop
pop
lahf
pop
test
fdivr
mov
std
aam
cmp
jno
jmp
pop
je
popa
or
dec
mov
out
call
(bad)
jl
mov
jp
or
ret
cmp
xchg
push
aaa
je
dec
mov
fcom
push
mov
jb
das
xchg
or
add
(bad)
fsubr
cli
lahf
fisttp
add
push
fsubp
int
lahf
mov
leave
rol
cmp
push
push
shl
fidivr
aas
adc
js
or
jg
pop
dec
pop
pusha
cmp
push
push
aam
jno
lods
push
repz
cmps
cmc
jo
into
int3
mov
fcom
or
mov
arpl
and
inc
cmp
or
push
outs
fisttp
inc
popa
xchg
popf
push
inc
xchg
sbb
mov
jmp
out
inc
mov
dec
mov
test
out
add
dec
pop
retf
fcom
push
inc
add
xor
in
sub
add
xchg
js
and
pop
aas
adc
sbb
cmps
xchg
test
ror
(bad)
movs
fild
sub
mul
icebp
xor
sub
push
call
adc
xor
fcomp
add
mov
mov
icebp
and
cmp
nop
inc
pushf
add
adc
inc
sbb
cmp
push
fist
push
push
pushf
setnp
or
inc
pusha
and
(bad)
dec
and
xchg
jns
(bad)
add
lahf
jp
imul
mov
and
shl
retf
dec
sbb
xlat
test
cdq
sub
and
mov
hlt
test
jmp
pop
or
data16
inc
jmp
icebp
loopne
xor
bound
cmp
xor
mov
jp
push
add
or
add
pop
je
jo
xor
pop
jg
pop
sbb
lods
jecxz
pop
pop
shl
xchg
clc
sbb
lods
mov
jmp
cld
jb
push
or
stos
lock
into
out
cmp
js
xchg
cmp
fidivr
push
pop
fnstenv
lock
ss
fcmovbe
xchg
fwait
jge
xor
add
repz
jno
out
cmp
push
ficomp
mul
jb
cmp
iret
inc
mov
ja
adc
xor
inc
xchg
icebp
adc
cmp
mov
jg
sbb
cld
xor
mov
or
rcr
loop
(bad)
fnstcw
mov
icebp
jno
cmp
imul
pop
or
call
adc
pop
jns
sar
and
sbb
jge
bound
ds
pop
mov
mov
ds
mov
cmp
fs
retf
shl
cdq
in
mov
cmp
repnz
cld
or
mov
sbb
mov
retf
xchg
sub
jge
mov
scas
mov
cmp
das
adc
add
ret
cmp
or
fst
sbb
jb
stc
cmp
and
mov
push
and
call
xor
neg
cli
in
fsincos
and
leave
bound
push
cs
jmp
adc
jns
sub
cmp
add
sbb
pusha
test
aaa
xor
cmp
stos
xor
mov
pop
sar
xor
movs
sub
push
fild
mov
call
test
jge
inc
dec
mov
sub
mov
fwait
add
push
mov
pop
sbb
pop
lds
cmp
or
test
shl
cmp
call
loopne
(bad)
push
movs
out
dec
fdivr
dec
sub
or
cs
inc
rol
push
ss
das
jle
cmp
adc
sbb
ds
sub
pop
out
leave
cld
ins
xchg
outs
cmp
in
out
mov
cmp
retf
ds
cmp
push
xchg
popa
clc
pop
xor
lea
pop
cmp
or
adc
xchg
je
cwde
test
enter
sahf
shl
mov
jbe
cld
fiadd
jecxz
dec
mov
out
mov
rol
and
cmp
fmulp
(bad)
lock
pop
popa
push
je
pop
mov
pop
lahf
mov
pop
xchg
jae
mov
inc
fwait
mov
enter
cmp
sbb
push
sub
inc
dec
(bad)
mov
push
nop
mov
xchg
inc
xchg
outs
xor
shr
jae
cmp
mov
fisubr
add
repz
jle
outs
sbb
std
cmp
cmp
mov
cmp
(bad)
je
jns
in
mov
cmp
clc
inc
ret
call
cdq
cmps
dec
out
popa
inc
mov
aam
push
dec
imul
dec
(bad)
mov
mov
mov
arpl
mov
inc
mov
je
dec
in
mov
add
pop
outs
pop
cmp
jo
jne
pop
cmp
jmp
adc
or
xchg
pop
jecxz
fsubrp
lods
push
inc
inc
xor
loop
xchg
mov
aad
and
dec
mov
inc
push
xlat
cmp
sbb
jle
xor
inc
data16
pop
xchg
add
rcl
ins
pop
inc
outs
mov
jecxz
xchg
add
cli
mov
fdiv
lods
cmp
xchg
sbb
inc
cli
xlat
in
inc
mov
(bad)
pop
sub
inc
das
or
stos
out
imul
cmp
push
lods
add
xchg
pop
push
jnp
loope
in
inc
inc
je
ror
add
jl
mov
stc
test
inc
rcl
sbb
xor
shl
loopne
ror
inc
or
inc
sbb
dec
mov
inc
ins
icebp
out
int3
mul
jle
inc
sahf
add
fcmovnb
cld
sbb
dec
mov
loopne
cmp
jmp
clc
sub
cs
push
hlt
inc
jae
icebp
test
out
jbe
fidivr
retf
mov
dec
pop
leave
ss
cmp
out
jg
clc
aad
retf
inc
loop
cmp
sbb
inc
sbb
or
loopne
shr
dec
jl
dec
xor
(bad)
cwde
fist
inc
push
test
inc
add
enter
mov
mov
jno
jo
idiv
aad
mov
pop
push
inc
adc
inc
mov
ins
inc
in
out
xor
scas
sti
xchg
inc
int3
cld
shl
sbb
jmp
js
or
ja
fisttp
cmp
test
or
aaa
dec
jae
cli
fwait
movsx
leave
popa
aas
pusha
push
loopne
inc
(bad)
cmp
je
or
push
ja
(bad)
aad
push
inc
xor
sub
ins
pushaw
cmp
test
sbb
int3
rol
inc
in
movs
jne
imul
jecxz
retf
add
dec
cmp
aam
adc
scas
mov
js
jne
inc
cmp
rcr
jmp
and
outs
stc
xlat
inc
lahf
xlat
xor
cli
jp
add
fs
push
enter
jb
push
xchg
mov
add
cmps
mov
jp
mov
and
idiv
stos
loopne
mov
cmp
(bad)
pop
test
add
cmp
and
push
sar
nop
outs
stc
sar
lock
mov
inc
scas
mov
adc
cld
push
pop
or
or
cdq
or
fidivr
or
jno
test
arpl
ins
mov
xor
jle
dec
cs
aas
cmps
fs
ror
lods
(bad)
icebp
test
jmp
lock
into
jmp
pop
inc
jmp
icebp
inc
ret
jmp
(bad)
in
push
mov
lahf
retf
dec
cmp
fisttp
aas
jns
add
sub
dec
sub
retf
cmp
loopne
and
stos
pop
push
sbb
pop
je
jne
cmp
mov
es
icebp
xor
xchg
inc
(bad)
sbb
mov
scas
xchg
inc
jno
fs
(bad)
dec
inc
stc
or
inc
fs
pop
mov
lods
mov
sub
movs
je
mov
jno
mov
(bad)
mov
sub
shl
fcom
or
xor
loopne
jnp
das
aas
and
imul
fs
pusha
loopne
mov
test
sbb
js
jp
sbb
jo
mov
call
imul
sbb
bound
arpl
enter
test
pop
adc
ror
pop
push
(bad)
xchg
push
scas
pop
add
sub
mov
jno
movs
adc
loop
xor
or
sbb
imul
scas
jle
addr16
pusha
int
jl
sahf
fimul
sub
fistp
sub
inc
loopne
fisubr
ficom
test
inc
sbb
dec
je
(bad)
xchg
js
dec
add
call
outs
mov
clc
mov
inc
in
out
icebp
imul
dec
and
dec
dec
inc
pop
sahf
mov
not
out
jns
fstp
inc
stc
(bad)
outs
lea
call
xchg
into
(bad)
imul
and
out
mov
pushf
jae
sar
inc
(bad)
or
jns
xor
sub
nop
jmp
inc
repnz
gs
sbb
sub
xlat
cmp
and
and
cmp
dec
test
stc
adc
dec
rcl
jae
fdiv
scas
inc
adc
int
lahf
cli
inc
ins
retf
fld
dec
data16
retf
jmp
call
shr
retf
(bad)
mov
sub
jb
jno
cmp
mov
cmp
cmp
ss
and
push
xor
adc
mov
(bad)
sti
pop
test
add
les
inc
and
mov
fwait
mov
lds
inc
stos
and
xor
(bad)
iret
cmp
or
xchg
jo
rcl
ficom
ins
cmp
loopne
addr16
arpl
daa
std
ins
mov
sub
mov
ds
xchg
jns
popf
xor
jae
dec
cmp
(bad)
add
ins
cs
imul
inc
test
jecxz
retf
jns
(bad)
or
ins
je
cmp
jb
lahf
outs
ret
imul
mov
xor
or
adc
inc
mov
xor
mov
shl
cmp
add
out
daa
dec
fistp
(bad)
int3
cmp
push
and
stc
adc
fsubr
addr16
mov
das
cmp
sub
xchg
inc
pusha
imul
sub
in
outs
jmp
shr
jno
test
mov
call
mov
mov
out
je
push
jo
mov
int3
test
push
jnp
cmp
add
mov
(bad)
xor
jns
and
jge
push
test
and
lods
mov
jae
ror
push
adc
stc
sub
jg
lahf
adc
jns
scas
scas
rcr
mov
ficomp
sbb
mov
xchg
test
sub
retf
jb
mov
mov
xor
repz
pop
and
add
push
lods
pusha
jns
xor
retf
das
ss
call
outs
and
sahf
jno
fimul
add
push
test
adc
nop
stc
ds
mov
adc
mov
adc
movs
cld
lock
push
jge
retf
cli
jb
jmp
dec
ss
fsubr
jnp
iret
mov
dec
pop
mov
scas
adc
popa
and
iret
imul
out
jg
test
cmp
rol
leave
lods
pop
test
lods
jmp
scas
sub
jl
nop
jb
sub
push
xor
stos
mov
mov
add
mov
inc
xchg
cmp
sub
push
push
imul
mov
neg
mov
ficom
mov
dec
outs
or
call
adc
cmc
pop
mov
aas
and
pop
es
mov
jg
cmps
shl
stos
cmp
inc
in
dec
jo
inc
inc
mov
sbb
add
adc
mov
nop
mov
inc
fucomp
sbb
dec
pop
or
inc
pop
dec
aas
inc
(bad)
sub
cmp
ds
pop
add
inc
icebp
xlat
cmp
out
ja
jns
out
jecxz
cmp
in
mov
xchg
push
xor
in
adc
imul
sub
jbe
pop
or
inc
enter
mov
or
ror
scas
ins
shr
or
outs
(bad)
fistp
jne
mov
pushf
out
mov
not
loopne
pop
mov
sahf
sub
pushf
movs
bound
push
cmps
mov
sub
int3
inc
fisttp
pop
icebp
jmp
sub
pop
lods
int
cdq
pop
inc
aad
mov
cmp
pushf
inc
pop
popf
push
sbb
jle
into
or
add
es
or
mov
mov
sar
push
mov
add
rcl
jl
cmp
scas
inc
mov
push
mov
mov
cmp
cld
mov
sbb
ror
data16
adc
in
adc
cmps
cmp
sbb
push
xlat
and
test
std
scas
mov
xor
test
aad
movs
leave
retf
jle
mov
xchg
hlt
xor
les
push
xor
test
call
pusha
inc
xchg
cmp
dec
pop
xchg
add
in
cmp
xor
lea
ret
mov
xor
mov
fcomip
inc
aam
aad
rol
(bad)
pop
enter
loope
fisttp
in
(bad)
cmp
idiv
sbb
dec
cmp
cmp
adc
(bad)
popa
test
stc
cmps
gs
popf
cmp
mov
mov
or
mov
int3
xchg
dec
daa
aas
xor
cmp
xor
cmp
ds
clc
sbb
jecxz
cli
addr16
(bad)
push
mov
inc
pop
mov
movs
jg
and
dec
adc
js
(bad)
and
sbb
inc
lds
clc
adc
out
inc
nop
ins
jle
(bad)
fidivr
inc
xchg
jne
imul
inc
pop
ret
pop
mov
fcomp
or
mov
iret
sub
mov
add
ror
xabort
mov
dec
mov
mov
sub
jg
push
push
das
ror
adc
or
not
in
test
gs
movs
mov
out
cmps
push
jle
and
pushf
jae
jbe
jmp
icebp
mov
jle
imul
cmp
inc
outs
shl
test
jnp
mov
sbb
in
jl
(bad)
fnstenv
xor
cmps
mov
cmp
mov
(bad)
arpl
out
sbb
mov
sub
mov
inc
xchg
jb
xchg
test
or
mov
push
inc
shr
adc
jbe
push
enter
test
inc
or
outs
aaa
mov
dec
jns
std
int3
cvtps2pd
aas
fcomp
mov
stos
dec
jae
(bad)
retf
pop
inc
shl
je
cmc
inc
xor
sub
cmp
out
rcl
push
sub
fidivr
cmp
pop
pop
jp
les
inc
lods
sbb
mov
inc
inc
pop
enter
rcl
push
sub
pop
retf
cmp
fild
cmp
mov
cmp
sbb
(bad)
into
mov
and
out
xchg
sub
fsubr
ds
je
jb
jl
inc
xchg
movs
and
fwait
cmp
stc
adc
je
fisttp
and
jno
inc
pop
push
jg
stc
sbb
ret
mov
adc
iret
repz
sbb
ja
ret
jl
es
sub
mov
and
xor
aas
push
int3
mov
pusha
std
xchg
sub
jno
nop
(bad)
(bad)
xor
xor
cli
fdivr
(bad)
and
xchg
lods
pushf
mov
fs
xor
dec
fstp
test
ss
mov
dec
mov
dec
dec
pop
jbe
pusha
popf
in
lahf
ds
lock
pop
out
std
cwde
rcr
xchg
jbe
loopne
sub
cmp
into
push
movs
aas
scas
mov
sub
iret
jmp
push
pusha
jnp
test
outs
pusha
mov
scas
sbb
out
out
mov
xor
scas
mov
xlat
loope
bound
xor
lods
or
dec
inc
ins
push
int3
jo
jmp
pop
adc
das
lods
je
cmp
pusha
js
cmp
inc
adc
jle
xchg
mov
cmp
pop
jnp
cmp
and
pushf
ja
sub
cmp
cs
or
gs
into
cmp
push
dec
mov
std
enter
adc
call
jl
lods
inc
pop
lahf
xchg
loope
jno
std
cmp
dec
pushf
xor
xor
cmps
jns
gs
cmp
pop
sub
mov
popa
sbb
div
dec
data16
fld
stos
add
imul
leave
dec
mov
pushf
es
push
pop
ja
cs
and
ret
enter
fisubr
lods
adc
jge
lods
out
xchg
fadd
loopne
mov
pop
jecxz
cmp
or
dec
ret
sbb
(bad)
jns
sbb
sub
pop
cld
fld
test
cdq
adc
js
push
adc
sti
jne
pop
push
and
sub
dec
sbb
push
stc
lea
push
cmp
pop
ins
jae
inc
(bad)
jmp
or
call
(bad)
or
xor
xchg
xchg
mov
jle
int3
jmp
xor
in
mov
inc
jo
inc
imul
adc
inc
fucomi
lods
outs
pop
cmp
xlat
cmp
mov
sub
jle
add
movs
or
pop
ror
pop
inc
xor
fldz
or
sub
scas
ror
cmp
cmc
cs
inc
movs
bound
dec
shl
inc
gs
ins
xor
mov
mov
mov
sub
xchg
inc
dec
dec
add
mov
xchg
out
sbb
cmp
mov
jmp
cmps
repz
mov
cdq
pop
sbb
pop
sub
cmp
pop
jge
push
out
dec
pusha
inc
pop
dec
push
dec
rcl
out
or
cli
inc
jbe
or
stos
ins
rcr
bnd
lods
sbb
vpermilpd
mov
fs
mov
fcomp
sub
inc
jl
cmp
popf
ret
xor
inc
int3
xchg
test
cdq
fistp
or
xchg
mov
movs
inc
push
out
repnz
and
mov
addr16
int3
cmp
aaa
mov
xor
adc
aas
mov
sub
inc
xor
call
pop
adc
adc
jmp
sahf
shr
inc
jnp
rcl
adc
xor
cmps
stc
(bad)
out
or
lock
adc
movs
inc
ret
add
icebp
ror
inc
jle
out
add
ret
(bad)
cli
mov
push
dec
clc
mov
mov
in
leave
adc
inc
cmp
mov
jp
inc
fnstsw
stc
test
mov
ds
mov
inc
lahf
les
cmc
dec
sub
inc
fsubp
mov
repnz
mov
fisttp
pop
cmp
cdq
out
scas
xor
sub
and
arpl
cmps
sahf
in
ins
movs
sar
pop
mov
xor
int3
or
pop
inc
jmp
xor
in
cmp
mov
sub
xchg
stos
inc
out
xor
ror
daa
inc
jmp
add
ja
in
test
lds
mov
or
ins
mov
outs
or
pop
inc
pusha
test
mov
psrld
addr16
jp
hlt
pop
dec
fnstcw
push
and
mov
lea
enter
addr16
sbb
xchg
inc
cld
pop
dec
inc
fild
jns
mov
scas
aad
ficomp
cmps
dec
into
dec
cmp
xor
fild
(bad)
sti
push
dec
sbb
mov
imul
jne
jg
and
icebp
mov
mov
push
inc
(bad)
jmp
in
les
push
sbb
shr
mov
frstor
daa
aad
cdq
xchg
cmp
jg
pop
push
lahf
ss
inc
sub
or
movs
aaa
and
jo
jle
lea
(bad)
test
rcr
fxch
hlt
cmp
jg
fld
jb
cmps
ret
jo
gs
(bad)
jmp
(bad)
push
sub
mov
(bad)
fiadd
inc
mov
push
imul
jmp
test
push
sar
into
cmp
nop
mov
dec
popf
inc
outs
push
lock
jg
ds
push
xchg
push
dec
cmp
sahf
cmps
and
out
in
pop
inc
popa
outs
push
push
xchg
push
daa
cmp
pop
adc
out
aam
push
inc
cmc
dec
popf
sub
inc
outs
and
out
fidivr
inc
arpl
in
xchg
fdiv
loope
push
sbb
inc
dec
inc
es
push
sub
retf
adc
enter
ror
xor
xor
sbb
std
adc
jg
clc
mov
inc
sbb
call
fdiv
xlat
nop
xchg
jg
or
mov
cmp
int
and
sbb
loop
(bad)
jo
(bad)
push
dec
inc
movs
mov
pop
out
test
dec
aas
retf
inc
cmp
mov
jmp
clc
xchg
movs
mov
pusha
xchg
cli
ficom
dec
cmp
sbb
cmp
jge
imul
out
push
xor
cmp
movs
data16
dec
fcom
xor
iret
mov
pop
inc
fwait
lods
pop
inc
sar
dec
inc
addr16
cmps
call
push
sbb
mov
aad
aas
push
sub
push
ja
sub
mov
dec
sub
ds
inc
sub
aas
inc
lods
(bad)
std
sub
cmps
jecxz
add
loopne
popa
cld
pop
test
and
ret
retf
das
mov
call
xchg
test
adc
sub
cmp
cmp
inc
add
cmp
dec
dec
xor
es
pop
popa
clc
fsub
ss
push
test
mov
cmps
mov
fmul
mov
stc
pop
ins
inc
mov
aad
pop
test
or
or
pop
cwde
test
mov
mov
sub
jb
pop
or
and
sbb
cmps
sub
sub
mov
inc
dec
imul
pop
xchg
(bad)
cmp
pop
cmp
je
scas
adc
jl
push
xor
lds
dec
adc
int
sub
xor
cdq
test
sbb
cmp
into
test
jle
int
mov
ret
retf
push
ins
inc
sub
mov
pop
push
js
xchg
lods
push
cmp
mov
hlt
cmps
inc
pop
or
adc
pop
add
ja
inc
inc
jb
xchg
cld
das
xchg
retf
out
mov
test
push
cmps
mov
adc
repnz
sbb
and
or
loopne
push
push
cmp
sbb
xchg
jl
das
dec
xchg
push
rcr
pop
or
popf
leave
ins
sub
add
push
xor
push
cdq
sbb
popf
or
sub
cwde
xchg
jnp
jae
adc
pop
inc
fmul
call
push
lods
dec
inc
sbb
scas
pop
push
sbb
hlt
js
push
popa
inc
cmp
push
les
cmp
dec
push
jbe
inc
mov
mov
or
sbb
inc
push
call
inc
imul
loope
jp
or
int3
adc
ss
adc
xor
push
cmp
inc
hlt
clc
dec
mov
dec
inc
xlat
inc
aam
pop
lea
stos
fwait
or
lods
inc
out
movs
out
inc
dec
jb
xchg
cs
fnstsw
and
retf
in
clc
mov
and
ds
xor
mov
adc
int
dec
mov
leave
sbb
mov
jmp
dec
mov
or
outs
cmp
mov
sbb
inc
test
or
cmp
jbe
or
push
inc
dec
mov
out
inc
jmp
mov
js
fsub
inc
inc
inc
add
jb
aaa
xor
push
fnstenv
push
or
sub
pop
les
stc
imul
push
xchg
jmp
mov
sub
shr
mov
outs
pop
call
(bad)
fidivr
push
test
lods
xor
arpl
inc
pop
lock
frstor
jg
mov
push
inc
xlat
pusha
mov
jle
jge
inc
ret
not
daa
in
sub
mov
cmp
loop
inc
call
das
adc
fst
mov
inc
fisttp
aam
fiadd
push
fistp
movs
push
mov
pop
mov
fsub
pop
out
les
test
js
mov
jno
test
popf
push
sbb
sar
jno
in
xchg
sbb
push
pop
jns
les
cmp
aas
dec
lods
add
dec
inc
cmp
rcl
(bad)
jns
sar
mov
ret
ja
xor
ret
xchg
jmp
jmp
cmp
test
adc
mov
jge
sub
test
pop
outs
dec
add
cwde
fdiv
ins
xor
in
rol
popa
nop
jp
cmp
adc
fistp
cmps
aaa
cs
jmp
and
cmp
push
test
jmp
(bad)
inc
jg
sub
scas
xor
rcr
mov
(bad)
pop
loope
pop
je
push
enter
cmp
(bad)
mov
lahf
dec
dec
rep
pop
cmp
pop
push
mov
push
jno
push
adc
jecxz
cmp
ins
ss
icebp
pushf
stos
mov
cmp
mov
jns
out
push
xor
sbb
mov
jl
sub
fcomi
into
jge
cld
nop
call
sub
mov
add
mov
shl
xor
inc
pop
inc
push
jp
push
inc
pop
inc
pop
mov
in
mov
pop
mov
mov
rcr
hlt
adc
sbb
or
add
jle
xlat
push
inc
jns
mov
cwde
dec
out
dec
cmp
cmp
sub
repnz
adc
in
repz
dec
pop
pop
xor
jb
icebp
shl
cmp
xchg
ret
loopne
outs
data16
lods
xor
push
cmp
sbb
bound
bound
cmp
pushf
jle
sub
push
inc
(bad)
sub
int
bound
imul
add
mov
xor
in
cmp
xor
inc
pop
inc
pop
dec
inc
push
xor
leave
mov
mov
pop
in
das
push
xor
jmp
inc
mov
stc
jb
push
hlt
inc
fisubr
add
sub
mov
jno
jne
adc
imul
jbe
les
in
inc
pushf
test
push
inc
jo
in
bswap
fcom
pop
inc
mov
xor
aad
add
mov
cmp
out
cmp
fs
ds
xchg
cwde
(bad)
or
sub
mov
dec
mov
jge
mov
inc
mov
xor
inc
lock
les
push
fs
fsubr
in
fld
mov
popf
out
or
cdq
mov
scas
cmp
mov
popf
pop
pop
jo
dec
pop
xor
mov
inc
cli
int
enter
dec
cmp
mov
jns
loopne
(bad)
xor
dec
dec
jne
cmp
and
inc
(bad)
xchg
dec
cmp
push
inc
test
add
inc
xchg
stos
cmp
fcomp
(bad)
inc
xchg
clc
jae
and
xchg
inc
test
cmp
xor
or
xor
sbb
test
jl
std
(bad)
gs
(bad)
rcr
fsubr
fisubr
mov
das
je
xor
mov
mov
or
in
jp
sub
fcmovbe
fdivr
xchg
fld
dec
stos
pop
out
push
and
inc
aad
jle
and
cmps
test
mov
sbb
mov
cmc
push
cli
bound
jbe
push
in
pop
sar
fistp
sbb
(bad)
jmp
jnp
mov
inc
cmp
cmps
xchg
ror
std
call
jo
jae
mul
stos
add
into
xchg
(bad)
rcl
pop
mov
jp
or
xchg
sahf
(bad)
retf
jle
popa
pop
cmp
sub
pop
dec
outs
lea
ss
xchg
(bad)
jle
shr
stc
sbb
inc
xchg
ds
xor
popf
icebp
sub
push
mov
(bad)
loope
out
dec
cmp
sar
xor
inc
xor
jmp
aad
push
ins
dec
ja
popf
fnstcw
cmp
mov
fcom
cmp
lods
inc
jmp
cmp
sar
jns
cld
(bad)
xor
inc
leave
push
retf
movs
xchg
push
pop
inc
mov
js
mov
rcl
stos
pushf
lods
inc
ja
fs
dec
pop
jl
inc
ja
push
xor
lods
xchg
or
push
sti
ficomp
jge
nop
mov
aas
in
cdq
inc
inc
stos
adc
and
jnp
shl
xchg
shr
std
inc
fisttp
xlat
inc
fdivr
fld
dec
ficom
fs
nop
jno
test
div
fucomp
mov
cmc
out
je
(bad)
in
fs
xor
movs
inc
jb
adc
pop
gs
jmp
loopne
dec
adc
cmp
arpl
(bad)
cdq
inc
int3
test
xor
imul
mov
cmp
or
inc
stos
mov
loop
or
outs
xor
jl
stos
or
out
inc
fdivr
pusha
inc
adc
adc
sub
jno
sahf
adc
mov
cli
sub
inc
push
or
push
inc
dec
xor
mov
lds
inc
sbb
mov
sti
inc
out
in
in
(bad)
out
rol
jo
or
and
movnti
or
adc
repnz
inc
mov
cdq
pop
jns
sub
and
fistp
stc
aas
mov
outs
test
jbe
mov
cmp
mov
xor
in
inc
call
mov
fmulp
fdivr
into
pop
int3
xor
loopne
push
inc
jle
jg
fwait
ds
fild
into
(bad)
(bad)
ffree
xlat
rcl
adc
cmp
jae
ret
(bad)
sub
cmp
xchg
push
inc
sti
lods
push
retf
pop
jge
push
or
clc
xchg
pusha
cmp
dec
mov
mov
inc
jle
(bad)
cmp
or
jp
and
pop
(bad)
loope
adc
pop
inc
aam
in
repnz
jo
jmp
int3
and
xor
lock
cmp
inc
pushf
scas
dec
jl
retf
inc
cmc
cli
dec
mov
sahf
mov
nop
xchg
iret
sub
fidiv
mov
or
inc
in
lods
mov
inc
aas
or
and
dec
cmp
daa
out
int3
sub
sub
test
mov
repnz
jecxz
rol
ficomp
or
push
sahf
sub
sub
jnp
push
xchg
jl
push
push
mov
dec
scas
jmp
inc
sub
adc
jg
in
(bad)
cmp
enter
push
jmp
jne
loopne
jno
ds
inc
pop
or
or
mov
mov
xchg
in
sub
adc
rol
sahf
mov
in
out
nop
mov
or
mov
out
push
js
xchg
and
sbb
icebp
inc
ins
nop
mov
sbb
cmp
ja
fcom
ss
pop
sub
inc
sbb
fs
retf
pop
js
pop
les
mov
inc
add
adc
jae
jnp
jb
xor
xchg
and
jge
aad
mov
cmp
(bad)
cdq
rcr
popf
fs
repz
cmp
mov
mov
mov
mov
test
adc
sub
mov
xor
xchg
or
(bad)
cmp
jg
inc
fiadd
pusha
pushf
ret
adc
loopne
jmp
and
adc
fdivr
sbb
in
fdivrp
leave
pop
jb
inc
pop
push
lahf
(bad)
mov
sub
dec
add
cwde
sbb
xchg
inc
(bad)
in
pop
cmp
and
adc
sbb
adc
fmulp
add
sar
sub
jmp
cwde
pop
gs
pushf
int
inc
loope
and
mov
addr16
adc
(bad)
xchg
cwde
je
mov
inc
pop
dec
mov
sub
or
lods
inc
adc
sahf
and
add
cs
dec
pop
test
inc
sbb
hlt
(bad)
out
ja
inc
scas
mov
jne
jb
dec
sbb
hlt
cmp
inc
fisub
sbb
xor
pop
or
repnz
xor
cli
mov
inc
inc
icebp
repz
sub
push
cmp
mov
sbb
mov
or
xor
fstp
and
xchg
scas
mov
daa
ret
dec
push
arpl
pop
adc
jb
outs
mov
push
push
mov
rcl
int
xor
lods
cmp
mov
hlt
out
xor
mov
mov
and
icebp
jmp
pop
dec
lods
mov
lods
test
lea
sbb
not
rep
adc
jns
and
cmp
jno
mov
mov
nop
inc
(bad)
push
jo
leave
dec
into
inc
aad
fild
add
jle
cmp
lods
inc
xlat
adc
pop
mov
ret
lea
repnz
adc
push
sub
mov
arpl
adc
pusha
retf
loopne
dec
lds
cmc
jmp
pushf
and
adc
loop
and
gs
enter
pushf
xchg
jbe
outs
xor
inc
cs
pop
(bad)
retf
loopne
add
ds
mov
rcr
int
jno
jb
mov
inc
ins
sbb
pop
pushf
pop
inc
movs
in
sub
inc
cli
ror
inc
inc
gs
sub
sbb
retf
stc
outs
push
mov
imul
mov
and
int3
test
sub
(bad)
jp
cmp
enter
fsub
cmc
adc
cli
fs
sahf
rcr
xor
mov
dec
das
inc
mov
jmp
cmp
dec
jae
leave
repnz
imul
(bad)
out
xchg
cmp
sbb
mov
cld
ret
push
mov
mov
push
xor
fmul
dec
jne
and
inc
or
push
lock
inc
ds
add
sbb
imul
mov
inc
arpl
(bad)
fdivr
(bad)
imul
xor
imul
leave
pusha
cmp
pushf
pop
addr16
inc
push
lahf
pop
dec
sbb
push
or
cmc
adc
ss
pop
imul
enter
sbb
out
cmp
or
cmp
mov
inc
xchg
pusha
fs
in
or
cmp
(bad)
sub
pop
xor
div
inc
addr16
mov
cmp
call
mov
push
jae
js
cmp
pusha
not
pop
shl
inc
xor
add
xchg
sub
pop
adc
je
and
cmp
push
mov
xor
lock
inc
xor
test
dec
cmp
cmp
adc
add
js
jno
add
add
retf
mov
add
les
clc
dec
sub
mov
or
mov
pop
hlt
add
lods
xchg
push
fwait
test
(bad)
mov
rcl
lds
pop
jge
and
imul
loopne
fistp
xchg
xor
repnz
scas
lahf
loopne
test
jbe
dec
push
call
pop
sbb
mov
int
repz
push
jmp
pushf
or
std
shl
or
shl
jo
jge
adc
int3
out
and
xor
out
mov
jge
add
fdiv
shr
pop
inc
push
ror
(bad)
pushf
sub
lods
pop
push
enter
mov
push
cmc
pusha
push
scas
loope
rsm
mov
or
hlt
lods
push
pop
mov
push
jno
aad
leave
shr
shl
fidiv
and
sar
cmp
fsub
mov
dec
jns
les
jo
je
fst
sub
retf
int3
outs
cld
leave
mov
(bad)
and
sbb
cmp
or
unpcklps
adc
cmp
test
int3
inc
(bad)
cmp
add
test
or
xchg
stos
push
push
or
mov
sub
int3
push
fld
inc
cmp
ss
jp
mov
cmp
ja
pop
xchg
mov
push
cmp
jge
xchg
mov
loope
mov
ins
or
mov
inc
adc
dec
pushf
pop
stc
jp
shr
inc
push
jg
neg
inc
inc
and
cmp
js
jno
pop
cmp
out
jmp
sbb
xchg
jp
outs
gs
inc
hlt
jecxz
mov
pop
inc
fidivr
mov
adc
and
out
sub
mov
add
sub
ret
xchg
push
inc
jae
ja
mov
daa
int
mov
stc
mov
mov
inc
dec
pop
push
faddp
pop
push
enter
mov
iret
pop
sahf
pop
or
inc
sub
pop
loop
cmps
xor
shl
rol
dec
mov
mov
adc
out
adc
jb
js
jns
xor
test
retf
psubq
mov
mov
push
xor
xchg
sub
jns
add
cmp
sar
mov
je
xor
scas
dec
ds
cmp
cmp
in
ret
push
and
jns
nop
call
add
pop
std
sub
xor
sub
cmps
dec
pusha
jno
mov
sbb
or
inc
xchg
je
sbb
jle
mov
jecxz
(bad)
ss
loopne
div
aas
xor
jge
jnp
shl
(bad)
retf
cmc
inc
cmp
mov
cmp
xor
cmp
jae
mov
aas
cmc
or
jg
sub
add
mov
sahf
neg
bound
xchg
mov
jl
gs
mov
fild
or
sahf
cmps
xor
mov
inc
cmp
mov
out
and
xchg
into
es
cld
arpl
mov
add
push
icebp
je
jp
fidivr
mov
mov
jno
adc
and
fmul
sub
mov
add
add
or
jno
cli
sbb
sbb
mov
cmps
inc
pop
mov
mov
fdivr
sti
lock
push
and
data16
ret
push
or
jno
cdq
push
dec
pushf
inc
and
mov
cmp
cmp
pop
mov
inc
sbb
scas
or
aas
sbb
push
pop
dec
jge
add
sbb
adc
mov
sbb
lock
pusha
aam
push
sub
dec
or
jge
lahf
jp
inc
jl
push
into
cmp
aad
inc
jecxz
jmp
sbb
jg
loopne
stos
xchg
pop
and
inc
out
rcl
nop
pop
call
mov
pop
jbe
mov
cmp
xor
jns
jecxz
dec
(bad)
ret
in
fcmove
aaa
test
xor
push
je
jge
jne
jle
enter
xchg
jg
cmp
push
cdq
mov
pushf
test
inc
inc
jg
sbb
mov
in
jecxz
cmp
push
inc
fbld
add
popa
jge
inc
xor
test
inc
mov
mov
adc
mov
call
test
push
dec
add
pop
dec
and
cmp
cmp
adc
js
std
jl
mov
fcomip
(bad)
jno
push
imul
inc
jmp
jl
and
xlat
push
cmp
jecxz
adc
mov
mov
ins
(bad)
cmp
stc
imul
(bad)
rol
xchg
int
shr
div
cld
dec
mov
sub
jns
outs
cmp
test
das
test
mov
mov
ja
lahf
hlt
mov
movs
cld
(bad)
cmp
sti
hlt
pop
and
scas
cmp
movs
jp
sub
and
push
jge
call
xchg
(bad)
sbb
sbb
in
mov
scas
push
xchg
push
xor
in
cli
add
inc
xchg
ins
arpl
ss
jbe
loopne
push
add
lods
push
and
cmp
les
push
add
int3
pop
outs
dec
das
ds
gs
jge
movs
xchg
jg
inc
retf
(bad)
outs
or
sub
jle
mov
sahf
imul
sbb
cmp
shl
fld1
rol
into
pop
mov
inc
dec
mov
lahf
cs
cmp
mov
or
xlat
pop
inc
sbb
imul
pop
pop
imul
nop
rol
pop
rol
enter
retf
fstp
add
movs
idiv
xchg
lods
xor
mov
dec
fs
mov
mov
lock
dec
xchg
dec
aas
dec
or
push
or
cs
rol
pusha
or
inc
stos
jp
mov
ret
inc
xchg
sahf
sti
cmp
mov
adc
sub
out
inc
cmp
sbb
fs
les
aas
cmp
sub
fnstenv
lea
cli
ss
je
fnstenv
cmp
(bad)
out
dec
mov
push
sub
fnstcw
das
scas
add
cmp
(bad)
shl
rcl
cmp
(bad)
out
mov
aaa
gs
in
pop
dec
sbb
imul
aaa
cmps
add
cmp
xor
je
les
stos
pop
icebp
sub
add
leave
inc
adc
aaa
fnsave
scas
stc
icebp
inc
cmp
mov
xor
cdq
add
jns
ret
xchg
adc
cmp
and
or
cmp
dec
mov
mov
(bad)
repz
jecxz
jnp
mov
fsubr
cmp
dec
outs
js
nop
lahf
adc
or
inc
jns
pop
push
pop
or
pop
mov
mov
xor
cmp
push
sub
(bad)
(bad)
movs
push
bound
jns
popa
cmp
ret
jnp
aaa
dec
and
sub
lea
into
je
ficomp
test
cmp
xchg
sub
adc
mov
sbb
test
mov
xchg
test
dec
sbb
sub
push
bound
sbb
rol
movs
cmp
mov
(bad)
cmp
sbb
jg
pop
ins
sti
cmp
mov
xor
cmps
pushf
pusha
stos
push
dec
stc
sbb
je
mov
pop
cmp
mov
outs
add
pop
lock
jo
cmp
or
retf
pop
aaa
outs
pop
pop
inc
sbb
xlat
(bad)
jnp
into
std
mov
mov
cmp
cmp
cmp
sti
fst
ds
rcl
cmp
aam
inc
inc
inc
fisttp
sbb
push
cmps
inc
dec
pop
add
sahf
ret
dec
adc
add
movs
bound
cmp
bound
shl
cmp
cmp
call
cdq
mov
sbb
popa
xchg
mov
inc
test
test
xlat
xor
jo
mov
sub
mov
sar
pushw
add
xchg
clc
xchg
or
rcl
gs
jp
jmp
cmp
mov
popf
pop
and
cmp
fdivr
rcr
test
or
idiv
push
cmp
push
jge
xchg
loop
xor
mov
mov
xor
aas
or
jb
nop
dec
scas
xchg
push
fild
sbb
dec
out
inc
mov
imul
pop
push
fimul
(bad)
jno
add
or
fs
cdq
or
dec
jbe
jecxz
pop
push
je
jae
push
dec
shl
inc
fadd
fidivr
pop
enter
scas
gs
iret
add
imul
mov
sub
cmp
xchg
mov
pushf
scas
mov
mov
mov
and
call
retf
dec
iret
adc
sbb
je
jle
imul
das
mov
daa
pop
jns
test
shl
icebp
dec
jl
pop
sbb
js
jmp
mov
sahf
sub
pop
pop
sbb
sbb
adc
xor
loopne
vmovq
sar
pop
into
mov
shl
xor
and
das
or
dec
retf
jns
fcom
fs
pop
jo
push
pushf
pop
push
mov
mov
sbb
jns
push
and
pop
sub
adc
idiv
(bad)
mov
fisub
jmp
in
ret
ss
cmp
mov
cmp
js
stc
pop
leave
mov
xor
inc
xor
xor
cmps
ja
scas
(bad)
cld
inc
pusha
cmp
add
daa
push
xor
jne
test
hlt
xchg
pop
inc
jmp
cld
out
xchg
out
loopne
sub
dec
imul
cmps
dec
cmp
cmp
sub
inc
push
pop
xchg
mov
cmp
std
xor
and
test
sub
xchg
jns
sub
je
jno
out
iret
cmp
cmc
js
xchg
movs
mov
and
sbb
es
cmp
pop
adc
or
rol
add
je
or
popa
sub
jp
or
or
sbb
cld
inc
mov
mov
jge
cli
mov
push
scas
xor
inc
add
(bad)
je
jns
ja
sbb
int3
dec
sbb
add
adc
iret
dec
ret
or
test
sub
imul
fst
mov
jns
lock
es
aad
sbb
fcomp
(bad)
jmp
mov
sbb
adc
jg
jle
cmp
push
xor
mov
sub
dec
dec
lods
sbb
mov
push
js
and
imul
imul
cmp
xchg
int3
cmp
jecxz
xor
aaa
xor
sbb
jge
xchg
cmp
jmp
jns
push
cmp
mov
sub
fcomp
in
pop
icebp
pop
loop
push
sub
popa
push
sbb
push
test
jg
pusha
adc
pop
jg
fsubr
mov
out
test
cli
imul
push
push
cli
xchg
jnp
pop
rcl
bts
mov
cmp
mov
icebp
ds
mov
mov
cmp
cmp
dec
ss
in
add
mov
and
cs
mov
pop
dec
(bad)
jmp
jp
cmp
aaa
adc
sbb
setno
cmp
mov
push
add
sti
mov
out
jge
inc
scas
mov
hlt
sub
in
inc
jmp
inc
int3
push
mov
mov
iret
pop
push
xor
push
inc
xchg
jae
mov
xchg
out
dec
inc
inc
je
xchg
mov
retf
inc
imul
cwde
push
push
outs
jg
mov
mov
loopne
sub
push
cmp
into
sub
adc
mov
loop
(bad)
int
fistp
adc
xchg
pop
jb
fstp
and
push
inc
div
xchg
sub
cwde
js
into
adc
mov
(bad)
fdiv
cmp
test
and
mov
sub
sub
dec
inc
cmps
mov
sub
scas
mov
add
aad
adc
pop
data16
inc
sbb
in
inc
jecxz
cmps
mov
mov
inc
cmp
addr16
call
out
pushf
fmul
inc
or
ss
(bad)
push
inc
mov
arpl
jecxz
and
or
lods
fsubr
cmps
push
jp
fs
mov
xor
cmovo
xor
add
dec
jo
add
cmp
jb
adc
dec
cmp
mov
ss
call
stos
lahf
cwde
mov
sar
sub
or
cmp
pop
dec
jg
mov
jns
mov
enter
fxch
loopne
cli
jp
mov
mov
push
sub
fidivr
inc
xchg
js
add
xor
fsubp
aam
icebp
inc
dec
sti
into
addr16
adc
push
popa
inc
jp
inc
retf
in
pop
adc
push
xor
or
xchg
mov
iret
mov
loopne
call
fwait
mov
or
jmp
and
(bad)
inc
cmps
mov
inc
push
sub
xchg
and
push
ja
inc
pop
aad
mov
pop
xor
rcl
sub
jo
jl
imul
xor
add
push
sti
sbb
pop
jbe
fs
xchg
push
sbb
rcl
inc
aaa
sub
lds
jmp
fdivr
cdq
or
jb
dec
mov
inc
and
in
les
xchg
test
hlt
sar
cs
aas
repz
mov
js
or
pop
mov
lods
pop
cmp
mov
cmp
clc
inc
xor
push
aaa
push
add
xor
cmp
mov
sub
test
dec
jne
push
in
leave
aas
xchg
test
and
inc
push
int
sar
inc
xchg
movs
inc
jb
test
jnp
mov
xor
outs
scas
cmc
mov
addr16
(bad)
cmp
mov
cmps
mov
mov
push
cmp
xor
jmp
mov
inc
xchg
and
jmp
stc
inc
sbb
sub
sub
inc
cmp
aad
xchg
or
not
sub
std
and
cmp
mov
cmps
lods
push
cmp
fld
mov
adc
enter
sub
mul
loopne
or
fsubr
jns
repnz
arpl
and
hlt
cld
mov
mov
push
ret
jg
sbb
addr16
sbb
mov
iret
pop
xchg
les
push
jns
test
into
and
cmp
(bad)
mov
xor
(bad)
fsub
sbb
jns
mov
inc
lods
aaa
dec
jns
and
push
and
jno
cld
pop
js
lods
ror
int3
and
cmp
sbb
or
(bad)
adc
dec
mov
mov
scas
push
dec
cld
cmp
sub
jmp
jmp
(bad)
jns
or
cmp
aas
jno
mov
jge
lods
scas
sub
jns
jmp
fs
cld
je
(bad)
jle
jg
lea
mov
fcmovu
jo
repz
add
push
mov
jl
mov
pusha
dec
repnz
cmp
movs
inc
jne
mov
movs
cmp
xor
les
fld
jb
add
dec
leave
inc
mov
or
xor
shr
jle
sar
loop
dec
adc
das
dec
and
pop
scas
cmp
pushf
mov
out
test
adc
sbb
fs
lahf
dec
sub
sub
push
movs
jo
js
sar
ficomp
outs
scas
imul
sub
sbb
cmps
inc
xor
shl
imul
push
and
shl
dec
jl
test
(bad)
fcmovnb
jmp
sbb
inc
dec
idiv
pop
push
pop
inc
cmp
push
adc
in
js
inc
mov
iret
push
xchg
xchg
stos
out
xor
mov
adc
stc
push
loopne
inc
push
inc
push
mov
sbb
or
scas
inc
mov
int
or
ficom
cmp
hlt
test
out
icebp
push
sbb
call
aam
test
xchg
stos
cmp
xor
rcl
into
adc
rcl
in
dec
sub
push
mov
sti
dec
push
cmp
aas
push
dec
(bad)
cmp
in
std
or
shr
jp
rcr
shl
inc
jb
sub
stos
mov
(bad)
fild
mov
mov
test
mov
cmp
inc
retf
fisubr
mov
cli
cmp
xor
sub
mov
in
mov
icebp
ret
jo
stc
or
inc
push
jae
lock
dec
sar
retf
adc
xchg
sbb
mov
sbb
pop
xchg
inc
jb
popf
push
mov
sbb
push
mov
mov
fnsave
fimul
lea
cmp
test
retf
int3
jns
aad
push
sbb
and
shl
popa
cmps
fmul
jns
mov
rcl
stos
adc
stos
popf
aaa
jmp
cmp
ja
fimul
hlt
cdq
pop
ds
jns
inc
rcl
xor
aas
pop
retf
jb
pusha
xchg
jne
mov
mov
xor
mov
mov
pop
sbb
cdq
fdivr
test
cmp
in
dec
loopne
paddusb
(bad)
xor
ds
push
scas
pop
pop
je
dec
ss
test
mov
ds
xchg
inc
jbe
inc
adc
mov
dec
retf
cmps
shl
jo
cmp
fs
dec
mov
retf
inc
sbb
aas
repnz
xchg
test
push
cmp
cmp
das
mov
arpl
je
fnsave
or
sbb
jns
into
stos
iret
pop
int
sbb
pop
push
loopne
scas
add
jo
xor
shl
or
loope
in
mov
cmps
jp
push
ror
mov
jnp
retf
std
jge
hlt
inc
sbb
retf
pop
pop
push
cmp
mov
pop
(bad)
xlat
mov
stos
pop
cmp
or
outs
ja
iret
ins
and
sahf
aas
push
jl
loope
mov
sti
dec
pop
inc
ds
(bad)
cmp
cmp
cmps
cmp
mov
lahf
les
cmp
jg
dec
sbb
sbb
push
test
test
or
icebp
retf
or
addr16
sub
inc
xchg
add
mov
ss
or
mov
inc
repnz
stos
fist
mov
inc
mov
and
mov
js
out
lods
inc
jl
dec
mov
jnp
shr
push
imul
je
sub
js
(bad)
(bad)
cmp
inc
add
(bad)
inc
imul
and
repnz
mov
outs
and
adc
cmp
sar
sbb
jmp
xchg
leave
frstor
sbb
mov
mov
lea
leave
lea
imul
add
fst
cwde
sbb
enter
movs
fstp
dec
call
pop
(bad)
test
jnp
or
cmps
stc
std
lea
dec
pusha
lods
jns
pop
add
jge
in
sub
mov
mov
gs
cmp
mov
jp
sub
(bad)
icebp
(bad)
call
inc
test
xor
jo
stc
adc
push
jp
jno
les
les
inc
(bad)
in
push
dec
cmp
mov
mov
xor
mov
(bad)
rol
mov
pop
mov
retf
jns
cmp
cli
pop
push
sbb
jge
aas
xor
loop
scas
push
push
jmp
cmp
mov
cmp
lar
in
mov
arpl
fsubr
shl
jno
sar
sub
jns
sbb
pop
mov
loopne
out
adc
add
or
fst
add
lods
js
into
out
sbb
stc
rcl
mov
int3
and
enter
(bad)
fmul
xchg
jns
add
mov
mov
or
jge
aad
pop
sar
or
push
inc
ins
xor
gs
stc
jl
and
jno
int3
aam
push
sub
je
into
imul
mov
fdivr
push
in
stc
pop
and
nop
imul
sub
stc
mov
out
fcomp
sub
sti
loope
test
ficomp
(bad)
sbb
loop
arpl
lea
pop
pop
fistp
pop
dec
cld
mov
mov
retf
inc
imul
sub
daa
aas
and
mov
pop
dec
pusha
or
jle
aad
cmps
mov
cmp
cld
in
aam
in
(bad)
arpl
scas
add
push
pop
or
jmp
or
xchg
adc
(bad)
in
add
fild
sbb
mov
cmp
dec
aaa
sbb
in
mov
pusha
mov
cmps
inc
push
sub
jl
jge
jb
icebp
adc
adc
jne
int3
repz
mov
lds
cmps
mov
mov
fcom
mov
sub
xor
movs
jp
add
mov
push
bound
mov
pushf
inc
push
xor
sahf
add
inc
mov
ss
push
xchg
inc
jae
adc
pop
pop
cdq
test
arpl
cmp
std
sub
sub
add
in
push
lods
mov
mov
sahf
cmps
in
jmp
outs
in
fild
movs
fwait
cmp
push
add
inc
stc
or
in
ins
mov
sbb
sti
mov
sbb
adc
sahf
movs
scas
xchg
loopne
xchg
mov
cmp
fucomp
outs
push
or
xchg
call
push
add
(bad)
jge
ins
js
pop
fwait
test
add
outs
out
imul
inc
into
pop
mov
xor
dec
loopne
in
out
mov
cwde
cs
adc
cmp
div
dec
sub
leave
ficom
adc
ds
jmp
add
hlt
inc
data16
xor
(bad)
ret
push
aaa
jge
ins
push
sub
push
dec
inc
mov
popf
sub
or
jbe
fndisi(8087
rol
push
sbb
jno
cmp
out
out
je
mov
xor
cmp
dec
hlt
inc
cmp
inc
sbb
cmp
xor
and
popa
xchg
and
mov
js
jno
ja
pop
inc
mov
mov
mov
push
in
xor
mov
inc
fild
mov
push
mov
cmp
shl
jbe
jp
mov
(bad)
retf
jg
or
cs
pop
rcr
or
jno
pusha
jecxz
xor
and
jne
inc
jnp
je
jns
jle
shl
inc
popa
inc
and
xor
cmp
stc
or
mov
dec
test
push
movs
inc
cmps
(bad)
jmp
inc
fcmovne
ror
sub
push
sub
sub
inc
movs
inc
mov
or
aas
retf
gs
lds
das
jge
adc
lea
mov
pop
test
sbb
ret
loope
fadd
(bad)
sbb
xor
ins
add
inc
sub
out
inc
cmp
mov
or
rcl
shr
sub
test
stc
mov
cwde
xchg
pop
pop
sub
xor
xor
daa
ret
or
int
mov
sbb
adc
dec
jns
jecxz
pop
sahf
lods
push
sub
push
mov
aam
stos
ins
push
or
push
xchg
stos
imul
mov
fmul
std
adc
in
aad
pushf
scas
xor
cmp
daa
mov
pop
dec
ret
mov
mov
pop
xor
cmps
movs
(bad)
fdiv
xor
jmp
xchg
jmp
mov
rol
jp
fimul
sub
test
inc
ret
fsubr
gs
addr16
imul
xlat
inc
pop
(bad)
adc
loopne
xchg
xchg
cmp
add
ds
jmp
jl
inc
mov
test
pop
dec
test
jge
mov
jno
cli
cmp
shr
loope
test
xor
aad
loopne
shl
fwait
cmps
xchg
xor
pop
cli
dec
inc
imul
(bad)
loopne
lock
sar
and
sbb
in
or
fisub
(bad)
mov
cmp
inc
adc
inc
jnp
or
inc
mov
pop
(bad)
daa
clc
imul
ins
pusha
js
xor
gs
repz
test
nop
cmps
push
fcmovnbe
in
js
(bad)
add
sbb
shr
sbb
lock
enter
inc
sbb
cmp
call
add
sbb
sub
rcl
mov
jnp
jno
outs
icebp
adc
jae
(bad)
inc
dec
ret
pop
movs
cmp
out
lea
iret
int
movs
inc
or
repnz
(bad)
jmp
or
pop
fisub
add
lods
add
jecxz
xchg
nop
loop
and
mov
xor
jns
pop
enter
push
sar
adc
leave
cmp
push
enter
rol
mov
jg
sub
scas
out
std
dec
repnz
out
jp
into
sub
sub
cmp
mov
js
jecxz
in
inc
in
mov
or
std
xchg
loopne
xchg
mov
out
sti
out
popa
mov
cmc
(bad)
mov
sub
popa
mov
paddsw
sub
fdiv
inc
dec
bswap
cld
cmp
mov
mov
xlat
push
mov
test
jl
mov
jmp
inc
jb
repz
sbb
inc
xor
pop
cmp
fidivr
ss
into
inc
or
mov
xor
mov
add
sub
out
(bad)
jmp
imul
inc
pop
outs
je
es
dec
leave
cmp
out
jl
in
(bad)
(bad)
rol
std
sbb
out
xchg
outs
inc
je
pushf
pusha
dec
pop
fs
dec
lahf
mov
test
jge
adc
stc
sbb
adc
xchg
xlat
xor
fiadd
and
in
(bad)
in
pop
inc
in
push
bnd
cmps
ds
rol
(bad)
sahf
in
xchg
stc
inc
cmp
sbb
out
mov
iret
outs
pop
push
xor
pop
into
aam
dec
(bad)
sub
ja
addr16
mov
mov
cmp
std
xchg
les
call
out
call
mov
or
aaa
mov
mov
push
mov
retf
sbb
ret
pop
lds
and
pop
push
stos
test
test
xlat
fsubr
xor
mov
jl
mov
repnz
cmps
inc
xor
repnz
outs
aas
fisttp
stos
pop
xchg
iret
jno
or
or
and
mov
sbb
mov
jge
and
and
sub
adc
jns
jmp
sbb
mov
out
cmp
mov
sub
dec
sbb
pusha
sub
fcmovnb
sahf
add
and
mov
imul
and
enter
scas
jno
pop
lea
mov
inc
sahf
jmp
aam
mov
adc
adc
jmp
cmp
cli
or
int3
push
inc
pop
push
sub
std
in
jl
and
mov
mov
xor
and
int
xor
mov
jo
push
cs
jno
mov
cli
xor
jmp
mov
(bad)
rol
push
out
push
iret
cli
inc
cmp
push
sub
cli
movs
pop
or
loopne
das
add
loop
js
fld
dec
call
ret
add
push
xor
je
fs
cmps
int
rol
lods
test
rcl
push
(bad)
test
or
mov
xor
pop
scas
mov
xlat
cmp
sbb
jns
mov
gs
sbb
pop
test
jmp
jno
test
in
adc
outs
mov
pop
mov
(bad)
outs
hlt
sub
inc
jg
in
rol
jle
cmps
ret
mov
sbb
iret
or
sti
inc
or
shl
push
dec
cmp
cmp
ds
xor
mov
sub
pop
out
add
pop
pop
aaa
pusha
pop
cmp
sbb
pop
jns
push
adc
divps
dec
cmp
mov
lock
gs
lods
pop
pop
adc
(bad)
je
call
ret
xchg
mov
ds
mov
jle
jae
pusha
jno
mov
cmp
mov
ja
mov
or
cdq
leave
out
fsub
xor
aas
jbe
jp
mov
or
jno
pop
sub
sbb
clc
retf
inc
(bad)
int
xor
adc
ss
inc
and
sbb
xchg
mov
mov
cmp
and
aaa
sub
cmc
sub
leave
xor
test
test
loopne
(bad)
inc
out
pop
xor
mov
cmp
sub
cli
jmp
dec
sti
sbb
or
push
fcmove
cmp
mul
stc
push
popf
(bad)
lahf
cmp
aad
jb
xor
(bad)
cli
sbb
jg
pop
sbb
mov
scas
cmp
movs
mov
fs
mov
push
cs
ds
sub
loopne
bound
push
lds
lea
cmp
mov
mov
add
xchg
xor
inc
pop
or
nop
push
inc
test
cmp
xor
inc
inc
repnz
pop
push
pusha
sti
add
jle
(bad)
shl
adc
aaa
xor
lds
test
xor
(bad)
not
loopne
mov
(bad)
mov
mov
sub
inc
pushf
jp
cmp
lods
repnz
sbb
aam
in
jae
mov
in
sub
sahf
inc
pusha
adc
inc
dec
mov
and
icebp
inc
dec
pop
jnp
lds
inc
and
lea
es
xor
fild
jge
bound
lods
push
push
jno
sbb
pop
test
sti
mov
adc
hlt
sub
test
int
sub
sbb
movs
ja
inc
std
in
push
adc
cmp
or
loope
inc
movs
adc
xlat
hlt
repnz
aam
je
mov
add
repz
pusha
pop
push
imul
inc
or
jmp
dec
mov
dec
jmp
cmps
xor
lods
movs
call
cld
popa
icebp
fs
cli
clc
arpl
ins
shl
xor
call
stos
jno
pop
js
(bad)
imul
loopne
sbb
ins
cmc
inc
or
mov
mov
dec
aas
test
and
lods
push
mov
fimul
aaa
daa
ss
xchg
loope
scas
js
or
nop
xor
cmp
ja
and
test
cmp
inc
xchg
mov
xor
inc
int3
jmp
inc
popa
and
mov
test
add
xor
xor
push
push
int3
cmp
imul
out
xchg
cmps
cmp
inc
cmp
clc
fucomip
jnp
mov
inc
daa
cmp
sub
rcr
icebp
into
pop
test
repz
loopne
cmp
dec
sbb
push
pop
xor
loopne
xchg
jg
ins
aaa
cmp
mov
and
adc
hlt
xchg
mov
add
mov
enter
jo
inc
rep
repnz
mov
loop
(bad)
dec
cmp
cmp
or
mov
fiadd
mov
push
mov
jmp
addr16
or
pop
mov
inc
push
int
push
clc
iret
jmp
leave
mov
xor
add
jmp
imul
cmp
cmp
xchg
pop
js
es
add
cmp
inc
popf
test
int3
(bad)
(bad)
into
dec
sbb
and
js
and
sti
(bad)
cli
dec
and
div
inc
ret
jmp
ja
mov
in
aam
xchg
mov
mov
aam
not
sbb
adc
mov
add
call
sbb
xchg
mov
pop
imul
or
sbb
popa
mov
cdq
outs
loopne
aad
inc
test
jns
in
cmp
jmp
aas
mov
or
(bad)
jge
fmul
push
out
scas
je
cdq
cld
or
mov
mov
jns
adc
sbb
mov
(bad)
xor
mov
cmp
sar
adc
stos
mov
out
mov
cmp
sub
adc
mov
ds
push
(bad)
lahf
cli
inc
out
jle
add
loopne
jp
ds
cmps
vpunpckhbw
cmp
lods
xchg
mov
sub
or
inc
add
push
dec
xor
pop
mov
in
lock
xor
stc
pop
xchg
mov
add
or
jl
push
enter
mov
dec
fwait
add
fist
inc
pop
rcl
adc
(bad)
xlat
or
adc
scas
addr16
inc
xchg
rcl
rcr
stc
xchg
push
xchg
cwde
test
pop
push
out
cmp
dec
sub
mov
pop
cwde
shl
bound
mov
stos
inc
fcom
mov
inc
dec
sub
and
cld
push
div
fwait
push
adc
cmp
inc
dec
test
sbb
stc
push
jmp
xchg
inc
pslld
out
cmp
cmp
sbb
push
pop
and
jmp
xor
cmp
or
dec
xchg
ins
push
sub
in
aam
adc
sub
daa
pop
out
cmp
jmp
push
inc
cmp
ret
and
push
enter
call
mov
inc
mov
repnz
push
mov
adc
jle
adc
lods
xor
cmp
ds
sub
push
xor
inc
jmp
mov
xchg
xor
adc
test
clc
ins
cmp
dec
pusha
cli
dec
inc
cld
dec
icebp
loope
fistp
mov
inc
inc
push
ins
mov
cmps
adc
inc
adc
pop
or
outs
popf
cmp
out
aaa
(bad)
mov
inc
cmp
adc
lods
and
jne
mov
clc
loopne
cmp
jae
push
xor
(bad)
sti
dec
test
pop
call
js
dec
sub
retf
out
hlt
xlat
shl
xor
xchg
cmp
inc
jnp
pop
push
inc
ins
stos
dec
je
popa
push
inc
les
jge
inc
icebp
xor
inc
or
mov
loopne
aad
in
pop
jl
sar
(bad)
fld
call
xor
iret
xchg
or
call
sbb
movs
repnz
int3
fild
mov
and
inc
fnsave
and
cmp
gs
sti
fnstcw
loopne
jl
jbe
push
mov
mov
enter
ds
pop
jg
sub
xor
les
cmp
out
outs
fstp
int
and
inc
fisttp
imul
mov
stc
dec
stos
xchg
imul
ret
and
pop
add
adc
dec
jns
pop
loopne
adc
xor
push
shl
xchg
sbb
mov
sub
inc
dec
jnp
stos
movs
xchg
sub
mov
jmp
loope
adc
mov
sub
bound
cmp
jmp
addr16
lods
addr16
mov
shl
(bad)
pop
and
and
cmps
sub
adc
mov
xor
cmp
in
sysexit
mov
jle
jo
or
inc
sub
enter
add
cmp
repz
hlt
ret
loopne
dec
sub
push
ret
rol
inc
test
mov
je
std
sti
inc
pop
(bad)
shr
fsubr
jp
adc
mov
inc
push
sbb
adc
sbb
sar
into
dec
sub
inc
pusha
ins
dec
jp
sbb
movs
sahf
rcr
and
mov
cli
les
loopne
(bad)
retf
ins
sbb
loope
mov
inc
test
add
ins
inc
sahf
xor
sbb
inc
stc
push
pop
popa
arpl
xor
fs
xchg
sub
in
cmp
outs
nop
adc
std
jmp
jns
push
xchg
push
inc
(bad)
rcl
and
pop
js
into
push
stc
fistp
push
push
pusha
lahf
retf
cmp
pop
call
imul
mov
mov
inc
mov
lock
inc
pop
ja
dec
pop
lahf
mov
lds
adc
inc
js
mov
mov
push
fisttp
fwait
ror
jo
push
xor
mov
ja
cmp
cmp
mov
mov
jns
jmp
push
xor
inc
loope
mov
inc
mov
dec
rcl
xor
sbb
dec
or
cmp
xchg
or
icebp
mov
adc
out
cmp
mov
out
aad
ss
into
test
cmp
lock
inc
add
mov
inc
xchg
lods
sub
popa
cli
and
call
inc
loopne
sub
dec
dec
or
or
gs
add
hlt
mov
loope
sub
cmp
xchg
pop
mov
fs
daa
jecxz
mov
out
or
pop
cmp
shl
xchg
adc
and
sub
lods
push
push
pop
call
push
inc
pop
and
jbe
cmps
jecxz
push
loopne
inc
jle
out
dec
addr16
or
fs
push
and
adc
inc
jmp
push
test
and
pop
push
mov
leave
inc
xor
mov
gs
cmp
(bad)
fistp
retf
or
mov
adc
call
xor
imul
cmp
sub
inc
xchg
(bad)
jmp
xor
inc
dec
jmp
ret
outs
or
in
or
ss
pop
popa
pop
iret
cs
add
rcl
lock
xor
xor
sub
arpl
mov
push
mov
inc
sub
pop
mov
mov
cmp
vrcpps
gs
in
mov
cmc
icebp
inc
xchg
push
mov
inc
and
shr
or
add
sbb
pop
or
nop
push
pop
or
sub
jl
rep
push
inc
add
scas
mov
xor
mov
cwde
mov
inc
add
jg
dec
cmp
stc
mov
pushf
sbb
hlt
sbb
inc
outs
cwde
or
aas
cmp
xor
sub
fwait
mov
ret
shl
sub
cmp
push
push
arpl
mov
js
jae
fs
test
scas
xor
imul
nop
mov
inc
ret
sub
cmp
push
sbb
(bad)
fdivr
add
mov
addr16
ds
push
ja
sbb
inc
test
out
into
dec
mov
mov
inc
push
out
leave
mov
div
inc
mov
outs
push
jmp
cmp
and
push
mov
lods
xor
fiadd
je
cmp
nop
push
adc
cmp
aaa
loopne
out
jle
sub
mov
icebp
xchg
cmp
out
lock
and
pusha
jae
inc
mov
and
in
jle
mov
das
or
jne
scas
push
mov
xor
in
mov
cmp
mov
popa
jmp
inc
bound
cmp
mov
nop
shl
lock
lahf
mov
ret
ss
mov
and
loopne
inc
fcomp
inc
mov
push
xchg
pop
push
xor
pop
fnstenv
call
pop
xchg
cmp
(bad)
loope
inc
mov
push
in
fidivr
mov
stos
dec
inc
push
pop
mov
adc
lock
cmp
cmp
adc
adc
stos
cld
inc
das
ss
pop
dec
pushf
inc
pop
inc
push
adc
or
xor
fisttp
add
push
hlt
xchg
rcl
sahf
movs
cmp
jl
and
das
or
cmp
jp
pop
in
or
push
call
dec
dec
stos
xchg
and
push
sahf
aas
das
mov
mov
(bad)
rol
dec
inc
fiadd
out
(bad)
inc
xor
rol
push
rol
jp
cmp
inc
movs
mov
je
sbb
movs
test
mov
inc
mov
add
cmp
loope
and
ins
jnp
push
addr16
stos
fwait
pop
xchg
adc
std
cmps
lds
and
sbb
in
sub
pop
jo
enter
and
out
sub
mov
dec
jno
push
lods
mov
sbb
jge
lahf
push
pushf
pop
les
lods
aad
shl
ds
in
cmp
jmp
fld
push
fstp
add
dec
in
rol
dec
jae
ins
sub
xchg
inc
sbb
xchg
xchg
or
jmp
dec
push
inc
retf
fs
pop
inc
add
fdivr
jns
inc
iret
outs
adc
xchg
or
xchg
mov
stc
enter
inc
jmp
push
sub
in
not
loopne
inc
mov
ins
or
mov
cmps
xchg
std
pusha
pop
(bad)
loope
inc
xrelease
pushf
popa
jg
retf
cld
and
pop
cmp
inc
xchg
push
push
movs
cmp
shl
jnp
push
mov
mov
and
inc
ds
(bad)
fs
repz
adc
int
xchg
call
and
cmp
and
cld
and
stc
loope
in
jp
ds
adc
nop
jns
cli
ret
inc
mov
ja
push
loop
or
sbb
dec
add
sbb
ins
jecxz
lock
sub
leave
mov
cmp
jg
adc
mov
jnp
inc
pause
push
xchg
popf
retf
cmp
inc
gs
dec
pop
in
lock
cmp
mov
(bad)
pop
fadd
pop
nop
sbb
shl
jo
inc
fucomi
popa
pop
sub
out
scas
repnz
fwait
cmp
mov
rol
outs
mov
push
add
sbb
push
mov
fistp
xchg
repz
xchg
sub
dec
or
mov
cmp
outs
fnstcw
sub
mov
aam
mov
and
mov
imul
data16
and
(bad)
aas
and
fdivp
add
sub
test
sbb
daa
mov
adc
dec
push
stos
ret
rcr
or
call
inc
push
mov
jge
rcr
loopne
div
(bad)
or
ret
and
imul
je
fs
push
adc
mov
arpl
outs
lahf
pop
pop
mov
jnp
jge
and
ja
stos
jmp
or
(bad)
jecxz
sub
cmp
movs
sub
jmp
out
mov
push
push
imul
mov
mov
xchg
push
ds
pop
xor
add
mov
add
mov
dec
and
test
in
jl
imul
aas
stc
and
cdq
adc
push
and
shr
inc
loopne
lds
xchg
retf
das
inc
adc
retf
push
dec
sar
dec
ds
ja
xchg
pop
or
pop
sar
inc
cld
test
mov
fdivr
cmp
jp
dec
test
loopne
aaa
movs
mov
fistp
cmp
or
jbe
iret
sub
fld
mov
jns
in
and
loope
dec
mov
sbb
jge
push
int
mov
dec
and
lock
add
stos
call
mov
mov
inc
dec
xor
in
lods
les
sub
dec
xchg
iret
cmp
jno
jbe
fwait
push
mov
mov
sahf
push
and
pop
push
pusha
sbb
mov
or
rcl
pop
or
aam
cmp
rcr
jmp
inc
fucomi
data16
xor
aad
fmul
(bad)
cmp
cld
sub
fdiv
jecxz
pop
ss
cli
lods
stc
shl
sub
mov
jno
cmp
in
jo
push
mov
cmp
cmp
mov
retf
mov
rol
faddp
fcmovnb
jns
std
xlat
xor
addr16
in
cmp
movs
pop
lea
into
adc
mov
xchg
mov
pop
and
into
out
inc
loopne
or
adc
push
inc
ds
pop
sbb
aas
fcom
inc
add
xchg
jns
dec
jne
popf
lods
inc
js
repnz
mov
pop
jae
push
mov
sub
(bad)
arpl
cmp
int3
std
fs
xchg
inc
dec
mov
mov
xlat
(bad)
jg
xchg
imul
or
out
jno
inc
fsubr
jb
jbe
aas
inc
cmp
sbb
jmp
cld
fimul
push
fisubr
push
push
adc
pop
or
lods
push
inc
leave
cmps
mov
hlt
bnd
outs
push
mov
add
outs
mov
std
aas
in
mov
cmp
inc
dec
jecxz
fs
lods
std
popf
add
ja
push
into
push
ret
pop
leave
popf
pop
mov
lods
and
lds
jo
fdivr
enter
pop
repnz
pop
jb
enter
fs
(bad)
mov
pop
cmp
in
(bad)
test
jns
retf
retf
loopne
mov
xlat
xchg
in
into
std
bound
into
push
or
imul
dec
jg
ret
pop
ja
push
movs
cmp
add
(bad)
adc
sbb
mov
jno
je
(bad)
retf
inc
xchg
ins
icebp
aas
pop
ds
jecxz
mov
inc
jmp
pusha
cmp
jl
xor
rcl
inc
arpl
daa
sbb
or
aam
test
sub
loopne
cmp
jno
sbb
sti
imul
je
jmp
jbe
movs
nop
or
xchg
dec
sahf
fwait
mov
push
jns
xor
jno
dec
jo
mov
gs
sbb
leave
popf
leave
xor
(bad)
mov
adc
mov
push
sub
mov
xor
inc
outs
push
dec
pop
dec
sbb
push
inc
(bad)
mov
xchg
cmps
push
loope
imul
test
mov
mov
add
in
in
repnz
and
dec
or
cmp
inc
mov
jo
fcomp
stos
inc
cmp
ret
push
(bad)
cmp
cdq
inc
leave
xlat
adc
mov
cmps
or
xor
ret
ins
jle
outs
push
cmp
cmp
xchg
call
mov
pushf
repz
xchg
sbb
mov
imul
stc
int
pop
call
pop
outs
jecxz
sub
rol
test
mov
inc
cmp
retf
mov
sub
and
les
or
pusha
mov
mov
mov
xor
add
pusha
push
mov
loope
js
push
cld
sub
cs
fwait
jp
pop
(bad)
pop
xor
stc
lods
in
jb
mov
nop
or
aam
shr
mulps
pop
imul
repnz
xchg
jmp
repz
std
inc
xchg
repz
rcr
sub
jno
call
(bad)
idiv
cmp
fidivr
push
jmp
pop
aam
stc
test
jno
dec
out
jle
add
push
cld
jnp
shl
jmp
mov
cmp
jae
cmps
adc
ins
test
sub
or
xchg
lods
cmps
dec
jns
gs
lods
ror
test
fidivr
cmp
mov
xor
pop
adc
es
or
fldl2t
pop
test
or
inc
mov
(bad)
sub
pop
sub
jno
movs
out
xor
test
movs
aas
mov
cmps
stos
je
not
scas
jns
jae
popf
dec
jle
add
mov
movs
int
pop
adc
cmp
out
out
cs
ins
repnz
pop
(bad)
mov
push
dec
xor
ret
sbb
sub
adc
push
sar
aaa
imul
jl
test
aas
sub
cld
mov
fdivr
cli
cmp
jnp
push
and
mov
neg
mov
clc
jb
jp
inc
mov
mov
fisttp
and
cld
fbld
or
ss
data16
loopne
pushf
mov
imul
pop
pop
push
mov
cmps
and
jge
inc
xchg
stos
mov
cmp
jnp
scas
aam
hlt
aaa
mov
adc
lea
inc
cmp
loopne
mov
aaa
lods
jmp
mov
shl
dec
cmps
shl
pop
jb
and
les
inc
es
and
fdiv
dec
ret
test
push
pop
clc
xor
jle
sar
pusha
jg
ins
je
sub
pop
movs
push
push
scas
lea
jnp
mov
cmps
adc
outs
adc
cmp
(bad)
xor
jno
aad
sbb
mov
out
sar
jl
je
js
jno
xor
mov
and
push
(bad)
(bad)
jmp
mov
fnsave
dec
cmp
(bad)
push
dec
xchg
push
mov
sub
jp
std
cmp
pop
call
mov
cmps
dec
dec
ins
cmp
fldcw
aas
push
jo
cmp
jo
mov
push
mov
mov
pushf
ret
push
cmps
add
movs
sub
dec
in
js
sahf
sub
dec
pop
or
loopne
adc
and
mov
fsub
jle
movs
idiv
fisubr
jg
aad
or
mov
setb
sub
push
mov
jns
xor
jl
fdivr
dec
or
nop
nop
das
(bad)
enter
jnp
mov
or
mov
jp
cdq
mov
and
xor
jg
js
test
or
(bad)
mov
jno
rcl
sub
push
jecxz
dec
jns
nop
sbb
dec
loope
adc
stos
sub
sub
dec
lea
gs
sub
fisub
mov
in
std
loopne
mov
xchg
enter
pop
mov
shl
adc
jno
bnd
pop
or
cmps
fcmovnbe
shl
xchg
popa
xchg
std
mov
inc
test
inc
or
pop
pop
add
test
add
mov
or
mov
(bad)
lods
scas
adc
sti
retf
popf
xor
dec
lea
jl
rcl
mov
mov
push
inc
shl
jb
jne
lods
xor
out
inc
sub
scas
dec
jmp
adc
xchg
mov
pusha
out
sbb
(bad)
mov
push
adc
and
ds
inc
aas
popa
test
xchg
mov
mov
mov
sub
xor
push
int3
cmp
push
shl
(bad)
in
adc
push
push
ror
dec
pop
js
cdq
xor
pop
popf
cld
mov
pcmpgtb
sahf
mov
sub
fwait
pop
adc
icebp
push
xor
jge
rol
xor
fimul
xchg
jp
lods
dec
xor
pop
mov
adc
not
dec
jle
and
idiv
cmp
xor
mov
cmc
fst
scas
adc
sar
sbb
sbb
or
leave
in
out
mov
enter
jo
or
sub
mov
into
jns
xchg
cmp
pop
mov
out
fs
aas
retf
test
xchg
sub
mov
push
int3
add
cmp
adc
push
or
mov
and
out
jno
lahf
jnp
pop
loope
or
jg
mov
jge
das
xchg
mov
inc
and
mov
adc
add
les
je
sub
xor
mov
pop
bound
mov
jns
xchg
xchg
mov
dec
fcomp
retf
sahf
or
clc
or
xor
pop
ins
stc
pushf
repz
sbb
icebp
jg
cmc
imul
pop
ds
sub
sti
jge
loope
cmp
ss
and
scas
into
(bad)
dec
mov
(bad)
mov
scas
jg
dec
mov
rcl
pop
fild
lock
mov
leave
mov
repz
push
sti
bound
lods
fs
lods
sub
mov
int3
xor
dec
jl
loop
cmc
inc
je
xchg
les
cmps
shl
je
cmp
das
stc
lods
push
aas
loop
inc
nop
shl
aas
gs
aam
adc
mov
jae
or
jno
or
adc
hlt
xchg
lods
mov
sbb
mov
int
dec
xchg
and
ja
push
inc
sbb
jno
or
jo
enter
retf
fisubr
inc
shl
ss
cld
or
cs
jns
movs
cs
jno
loopne
jle
mov
dec
repz
lea
jo
mov
adc
add
in
loop
sti
inc
ror
(bad)
pop
sbb
inc
jp
xor
mov
push
add
(bad)
sti
xor
sbb
mov
sbb
stos
pop
jl
adc
xor
aas
ds
mov
jecxz
mov
xchg
idiv
or
lock
or
mov
mov
cmp
xchg
jns
fxch
dec
add
test
jecxz
mov
cs
jl
cmc
mov
std
sbb
mov
mov
fistp
jae
cmp
adc
inc
inc
jp
jg
jge
out
loope
mov
and
or
and
dec
mov
sar
push
ds
dec
push
inc
pusha
inc
inc
lods
leave
and
ins
push
inc
cmp
inc
das
js
or
ds
mov
push
xchg
repnz
es
xor
inc
inc
loopne
adc
mov
scas
jmp
mov
adc
inc
push
and
sbb
xchg
into
xor
cmp
hlt
rol
dec
mov
pop
push
lahf
ds
dec
dec
sub
adc
inc
or
(bad)
scas
xchg
mov
mov
inc
cmps
ss
ds
sbb
and
push
mov
inc
push
sbb
ds
fucom
inc
adc
outs
int
inc
ret
jae
(bad)
test
call
inc
mov
jbe
pushf
xchg
dec
mov
cmp
fidiv
das
lds
test
in
add
or
je
mov
inc
inc
xchg
and
dec
pop
push
clc
jae
leave
adc
aas
jecxz
mov
mov
test
mov
and
inc
inc
popa
pushf
pop
dec
inc
sar
rol
jp
inc
sar
imul
(bad)
mov
rcr
fwait
push
mov
(bad)
jne
into
gs
mov
movs
xchg
or
sbb
ret
jecxz
mov
cli
jmp
das
int
mov
push
cmp
ds
stos
ffree
push
xor
imul
sar
pop
ja
inc
xchg
xchg
mov
push
test
inc
mov
inc
or
test
xor
mov
xchg
stos
mov
adc
mov
sub
int
loopne
mov
cmps
sub
cmp
ja
in
out
jmp
stos
fisubr
xchg
xor
or
shl
xchg
mov
push
mov
mov
sahf
xor
xchg
and
pop
retf
pop
mov
imul
test
cmp
stc
retf
xor
js
cld
fwait
dec
stos
stc
cmp
add
sbb
(bad)
pop
dec
clc
adc
mov
dec
or
nop
xor
cwde
add
and
sti
jmp
call
jns
sub
and
sbb
pop
hlt
inc
mov
xor
mov
nop
xor
std
mov
push
mov
jns
fxam
jp
and
pop
lahf
and
rol
xchg
mov
lea
inc
xchg
pop
mov
call
cmp
add
adc
push
xchg
(bad)
loope
push
fldenv
xlat
pop
xchg
push
arpl
xor
dec
xchg
pop
gs
dec
sahf
push
cwde
test
mov
cli
mov
fwait
mov
mov
sahf
movs
mov
inc
add
xchg
ins
test
inc
xor
shl
and
dec
aas
and
es
sub
mov
or
mov
dec
pop
push
nop
and
sar
cdq
retf
inc
add
pop
push
pushf
or
ds
scas
ins
jge
outs
arpl
xor
popa
cmp
pop
int
inc
sbb
aam
inc
(bad)
jge
retf
adc
addr16
and
test
fwait
loope
xchg
imul
ins
movs
inc
inc
inc
movs
xchg
rcl
sub
fiadd
ret
xchg
add
jns
mov
stc
mov
test
dec
cmps
xchg
aad
not
cld
rcr
add
inc
pop
cmp
push
js
and
(bad)
stc
inc
mov
add
inc
push
clc
adc
out
addr16
inc
jl
fsub
jb
test
inc
js
inc
push
std
ins
sti
push
pop
sub
sub
push
jl
pop
push
sub
push
mov
sbb
sbb
shr
cmp
or
scas
stos
sbb
cmp
fmul
fnstcw
sbb
lahf
scas
push
fnstenv
cmc
loop
xor
jl
mov
push
fsubr
cmp
inc
retf
xlat
and
fwait
xchg
jmp
fimul
or
fidiv
mov
jno
pop
inc
sar
jmp
jns
mov
mov
cmp
and
data16
sub
jle
xchg
js
sub
or
enter
or
dec
mov
gs
dec
cmp
js
rol
(bad)
mov
out
pop
cmp
and
jl
mov
cmp
test
push
out
shr
fimul
inc
pop
scas
mov
inc
push
jns
jne
loope
push
sub
push
jmp
out
xor
inc
neg
imul
in
cmp
fisttp
push
je
and
jg
data16
fsub
rol
int3
hlt
ins
lods
cmp
rol
in
dec
inc
out
xlat
adc
mov
pop
inc
lods
cmp
mov
lahf
pop
dec
sbb
inc
imul
mov
mov
cmps
push
lods
xor
scas
pop
inc
outs
add
pop
into
or
dec
(bad)
pop
mov
lods
stos
pop
jbe
lahf
mov
movs
cld
arpl
outs
xchg
mov
or
push
sub
mov
mov
nop
sub
jl
xchg
mov
cmp
pop
xchg
fsubr
repz
push
push
inc
es
cs
adc
dec
pop
push
leave
repz
mov
mov
jno
call
xchg
ret
add
pop
jl
mov
out
inc
push
ret
cwde
inc
cdq
test
call
loopne
xor
je
sbb
loope
and
gs
retf
xchg
ja
mov
stos
add
js
sub
les
and
cmp
dec
stos
out
cwde
pop
cmp
jp
xor
jl
dec
js
rcl
mov
sbb
dec
test
cmps
mov
or
div
ss
mov
movs
mov
jno
mov
xor
sub
pop
cmp
movs
shl
test
mov
sbb
clc
add
inc
adc
cmp
arpl
enter
inc
push
inc
xchg
sti
mov
ficom
dec
ins
jo
pop
mov
or
repz
enter
and
sub
stc
call
adc
inc
cmp
mov
inc
pop
pop
adc
scas
icebp
mov
hlt
leave
or
clc
movs
inc
mov
inc
inc
or
call
inc
sbb
sbb
loop
jns
ret
cmp
fsubrp
xchg
jnp
inc
cmp
(bad)
adc
push
aad
fld
into
or
xlat
and
and
sar
mov
xchg
outs
jns
sbb
es
je
mov
sbb
gs
dec
xor
mov
mov
sbb
aam
into
pop
out
leave
pop
dec
(bad)
fcmovnu
add
fmul
mov
jecxz
xor
shl
in
xor
adc
jl
shl
cld
xor
shl
inc
mov
imul
cmp
mov
xchg
cmp
stc
fninit
repnz
mov
aas
out
cmp
(bad)
dec
xor
cmp
dec
inc
adc
mov
mov
cmp
push
ror
in
xchg
pop
fmul
and
push
inc
pop
inc
push
mul
cmc
outs
lahf
retf
or
cmp
mov
jb
cld
fidivr
out
xchg
or
dec
cmp
sbb
imul
(bad)
leave
ret
jno
mov
or
sub
pop
icebp
inc
js
out
es
pop
sub
pop
adc
mov
inc
and
in
jns
popf
lods
sbb
lock
inc
test
out
std
jmp
in
out
add
sub
jp
and
sub
std
jecxz
int3
cmp
outs
aad
xchg
fcom
sub
cmp
cwde
push
push
pop
or
rcl
inc
mov
inc
jl
into
icebp
inc
(bad)
and
jp
retf
enter
cmp
jb
ret
push
aaa
push
adc
cmp
cs
ins
shl
out
mov
inc
dec
mov
mov
and
out
jno
movs
fnstenv
shl
neg
pop
inc
(bad)
and
jb
stc
dec
inc
xor
icebp
adc
dec
jne
aaa
or
int
adc
mov
mov
loop
or
hlt
loope
add
xchg
fwait
or
aam
inc
(bad)
jl
add
ins
mov
repz
push
cmp
adc
mov
enter
cmp
mov
repnz
outs
repz
data16
addr16
cmp
sbb
popf
adc
mov
sub
and
and
add
cmps
add
pop
bound
push
repnz
pop
xchg
pop
mov
jg
sar
(bad)
pop
mov
pusha
pop
push
and
adc
mov
xchg
push
inc
mov
loope
sahf
clc
cmc
lahf
(bad)
aam
retf
test
add
lea
push
je
ja
mov
pop
pop
cwde
and
cmp
pop
jno
jb
sbb
sub
ficom
js
push
sub
sbb
mov
loope
pop
lods
push
xchg
mov
outs
scas
cmp
aas
jno
adc
stos
call
fdivr
cmp
xor
dec
pop
jae
ss
xor
ret
cmp
data16
into
mov
push
fwait
test
loop
add
mov
sub
retf
inc
ss
(bad)
stos
cmp
bound
dec
jbe
xchg
fsub
out
mov
xchg
pop
mov
fdivr
cld
cli
repnz
dec
lods
jge
xchg
stos
shl
mov
lahf
pop
cmp
and
dec
cmp
mov
inc
ds
aas
int
jns
xor
shl
arpl
xchg
aaa
imul
mov
sub
xchg
fs
enter
push
sbb
sahf
add
loope
cmp
lea
(bad)
scas
mov
das
pushf
ret
pop
xor
fs
sti
push
xor
imul
lea
xchg
xor
shr
scas
fiadd
in
cmp
add
xor
mov
aam
jo
sti
jae
outs
sti
xor
jge
fs
cli
(bad)
mov
repnz
test
inc
sbb
xor
jae
scas
jo
ins
cmp
dec
aam
loop
mov
push
js
jle
popf
test
xchg
arpl
rol
sahf
cmp
jmp
cmp
sbb
push
ret
cmp
mov
scas
nop
mov
mov
imul
mov
(bad)
loop
cmp
mov
imul
nop
lods
push
sub
int3
lock
adc
mov
setge
jb
and
ins
add
jno
loop
aas
fmul
jecxz
out
das
or
jmp
mov
jb
or
daa
pop
sub
pop
jmp
(bad)
or
fist
sti
(bad)
pushf
fadd
loope
push
fbstp
jle
sub
cld
dec
jp
cs
in
scas
ficomp
mov
jns
cmps
imul
ja
in
xor
jns
xor
dec
pop
xchg
pop
test
lods
jle
xchg
mov
push
(bad)
out
ds
adc
lock
add
pop
jg
fwait
sahf
(bad)
fwait
jp
loope
lahf
lahf
pushf
jne
repz
inc
pushf
xor
inc
sahf
inc
sbb
jnp
mov
xlat
cwde
jo
sub
xchg
cmc
mov
ds
cmp
repz
and
sbb
mov
mov
fcmovnu
sub
or
popf
test
pushf
sbb
and
out
push
pop
sbb
fist
mov
test
inc
ficom
cmps
jp
jns
mov
inc
fistp
xor
push
ds
jns
gs
retf
lahf
popa
push
mov
mov
jmp
shl
push
cli
xor
mov
or
push
loopne
(bad)
push
mov
in
pop
jl
dec
test
xor
ins
lahf
js
sub
pop
fidiv
stc
inc
adc
movs
mov
add
(bad)
and
ficom
fld
test
mov
xlat
dec
out
fcmovne
dec
aas
sar
jge
nop
inc
inc
mov
cmp
nop
repz
inc
xor
(bad)
jge
ffreep
and
cmp
pop
jmp
pop
sub
cmc
into
dec
jno
sahf
inc
cmp
call
cmp
jle
sbb
inc
cmp
fsubr
inc
cwde
push
data16
imul
inc
je
cmc
aaa
adc
js
jmp
sar
and
push
(bad)
or
out
pop
adc
js
cwde
xchg
inc
rep
add
jnp
hlt
cmp
xor
sub
inc
sar
loop
fsubr
xor
dec
popf
add
in
int3
or
pop
inc
retf
or
cmp
push
push
ss
mov
inc
adc
mov
ret
mov
xchg
add
ds
and
sahf
lea
xor
add
fnstsw
in
daa
add
ins
and
ss
(bad)
jmp
ins
sbb
xchg
sbb
pop
and
mov
aam
dec
adc
test
pop
fwait
jge
rcr
(bad)
jmp
sbb
js
sbb
cmp
cld
js
mov
mov
cwde
sbb
rol
mov
(bad)
out
xor
and
jo
jbe
mov
js
arpl
mov
inc
inc
dec
lods
or
aaa
hlt
ret
daa
pop
or
push
pop
imul
sub
or
sbb
cmp
pop
imul
loope
add
jmp
or
mov
inc
jno
sub
xlat
bound
or
sbb
and
fbld
test
inc
ret
xchg
mov
sti
xchg
push
fadd
jae
jbe
pop
test
lods
dec
dec
lock
cmp
xor
inc
push
int
and
sub
cwde
enter
arpl
fld
int3
push
into
in
in
gs
push
imul
cmp
sub
cmp
sbb
shr
push
jo
adc
shl
or
sar
inc
jg
jmp
mov
mov
xor
mov
mov
scas
fisttp
or
pop
jo
sub
inc
mov
mov
ins
ss
inc
div
loope
mov
push
sbb
stc
cmp
call
jmp
(bad)
(bad)
out
popa
jno
sub
or
push
mov
enter
jp
lea
outs
xchg
inc
add
xor
les
sub
rcl
mov
inc
pop
out
retf
or
inc
stos
iret
inc
sbb
pop
(bad)
fistp
rcl
sub
xchg
retf
sub
pop
pop
fstp
add
xchg
adc
push
fidivr
in
test
cld
inc
jg
cmp
push
scas
inc
leave
jmp
imul
bt
sbb
retf
js
sub
and
or
jae
xor
fmul
push
inc
loop
xor
xlat
jg
cmp
xchg
cmp
pop
xor
inc
jmp
mov
fsubr
jbe
inc
test
mov
ret
inc
(bad)
push
push
jne
test
(bad)
sbb
aas
push
imul
aad
mov
and
xor
ins
test
inc
pushf
inc
popf
mov
cmp
jnp
cmp
in
in
xor
pop
inc
xchg
(bad)
stc
sub
outs
xchg
lods
push
out
xchg
push
mov
into
(bad)
fs
jp
scas
fwait
inc
pop
jmp
aad
pop
cmps
lds
jl
cli
sbb
scas
inc
cmps
fistp
jp
or
xor
aas
pop
fisub
fsubr
or
sub
jo
ja
cmp
xchg
mov
add
dec
aam
add
sbb
sbb
ds
jl
push
mov
push
pop
sbb
jge
mov
add
or
mov
cli
and
out
mov
inc
xchg
pop
adc
inc
addr16
fiadd
xchg
aad
call
inc
in
test
dec
push
sar
imul
nop
mov
(bad)
mov
lods
xchg
(bad)
scas
sti
cmps
inc
(bad)
mov
push
inc
jae
inc
cmp
sbb
lea
sub
ins
mov
outs
(bad)
out
iret
jnp
pop
sub
nop
shl
mov
sti
or
pusha
stos
inc
fnstcw
aas
xchg
jne
add
inc
(bad)
clc
sbb
test
mov
inc
popa
xlat
int
stos
inc
ror
dec
mov
xor
test
cmp
cld
bound
xor
lahf
xor
std
pushf
mov
retf
inc
xor
fstp
(bad)
into
jg
js
out
out
fdivr
pop
inc
in
sub
adc
stc
dec
imul
movs
mov
inc
(bad)
sahf
push
pop
jmp
push
cmp
mov
aad
push
push
sub
sbb
xchg
loop
cmp
fdivr
movs
sahf
loopne
ds
jg
mov
pop
outs
imul
inc
sub
or
push
inc
iret
jo
popf
pop
mov
sbb
cmp
or
jmp
inc
inc
mov
js
and
jnp
ror
adc
dec
add
xchg
inc
hlt
loopne
test
clc
inc
mov
je
cmp
xchg
cmp
aam
mov
jle
mov
push
les
lea
(bad)
cmp
iret
and
jle
inc
data16
inc
pop
js
fcomp
stos
cmp
mov
ret
dec
mov
add
inc
inc
stc
adc
push
loope
repz
or
dec
daa
cmp
jp
push
int3
loopne
push
aaa
add
and
mov
fisub
jbe
dec
jge
push
arpl
(bad)
fadd
push
idiv
js
fadd
test
adc
cmp
sar
retf
mov
inc
dec
xor
and
rcr
adc
shl
gs
adc
pop
push
mov
push
or
mov
nop
adc
jae
push
shl
cmp
fsubr
pop
cmp
jno
sub
adc
mov
push
ds
jmp
sti
sar
icebp
call
dec
add
pusha
jno
loope
lock
push
retf
loop
aam
mov
aas
or
adc
bound
add
push
les
jl
cmp
mov
mov
pop
lods
shl
push
pop
xchg
mov
fs
xchg
pop
imul
(bad)
jl
sahf
push
xchg
or
sbb
aam
fisttp
fwait
jecxz
sbb
jle
jns
data16
add
xor
and
movs
and
mov
iret
mov
or
mov
das
loop
dec
mov
sub
mov
jns
xchg
pop
push
outs
jg
std
stc
pusha
adc
ror
sbb
cmc
sbb
mov
loopne
int3
bound
jp
jmp
inc
test
test
mov
or
cmp
(bad)
jg
jne
adc
mov
test
xor
dec
dec
sub
dec
clc
data16
xor
add
dec
xlat
outs
mov
inc
jecxz
out
cmps
jo
test
pusha
xor
in
adc
pop
add
push
jns
mov
or
sub
test
outs
cmp
inc
jmp
or
lock
icebp
scas
cmp
mov
jge
sub
loop
scas
inc
loopne
cwde
scas
dec
xchg
cmp
and
jns
fidivr
xor
add
mov
sbb
mov
xor
push
or
inc
hlt
xchg
imul
into
mov
test
and
popf
adc
(bad)
ror
gs
pop
pop
sti
or
out
fcomp
or
out
aas
into
pop
pop
mov
inc
pop
ror
xchg
jge
mov
loop
inc
xchg
mov
xchg
cmp
pop
ins
sbb
jp
xor
inc
shl
lock
add
(bad)
repz
arpl
ret
dec
dec
inc
pusha
pushf
push
sub
sar
movs
stos
push
enter
push
jecxz
in
ds
mul
hlt
inc
shr
retf
fcomp
cmp
(bad)
and
in
(bad)
(bad)
mov
inc
repnz
movs
jl
aas
or
sub
jmp
stos
xor
xchg
add
fst
iret
mov
mov
(bad)
shr
(bad)
retf
call
popa
inc
jno
repnz
mov
pop
jbe
fist
imul
rol
pop
(bad)
pop
xchg
mov
(bad)
pminub
or
jns
adc
sbb
xor
fsubp
jmp
outs
sbb
in
cli
into
arpl
inc
pop
jb
xor
jmp
popf
mov
mov
test
fidivr
inc
xor
out
jbe
mov
cdq
add
fucomi
retf
pop
ror
pop
popf
xor
adc
pusha
dec
fiadd
aas
mov
jp
mov
cmp
mov
adc
data16
stos
popf
mov
inc
and
pop
setb
cmp
push
and
or
test
add
sub
nop
ds
hlt
retf
inc
out
xor
dec
push
int
inc
push
sub
xor
inc
and
addr16
push
je
xor
jno
div
lods
fs
ins
icebp
imul
inc
aas
xchg
cmp
sbb
shl
inc
scas
shl
push
mov
mov
(bad)
cmp
and
fstp
iret
adc
cmp
pop
or
lods
pop
popf
clc
adc
test
test
mov
or
cli
fwait
adc
xor
and
lea
xchg
retf
aad
inc
sahf
ss
jg
test
sub
js
xor
push
arpl
jnp
repz
enter
mov
adc
inc
cmp
push
adc
jl
clc
leave
add
arpl
mov
pop
mov
and
sbb
pusha
out
je
fnstcw
dec
pop
aad
test
push
sbb
jno
push
sti
xchg
or
sbb
hlt
xchg
int
test
push
popa
aas
out
dec
je
pop
cmp
jge
and
pop
jg
jge
mov
adc
daa
cmp
ds
and
cmps
rcr
xchg
scas
in
outs
mov
sbb
sbb
push
inc
jbe
in
idiv
bound
js
push
adc
jns
push
aad
pusha
jno
push
push
push
stc
fldl2t
inc
je
mov
cmc
push
pop
adc
sbb
push
js
fnstcw
sar
jno
mov
ins
jge
dec
pop
sbb
mov
(bad)
jl
fadd
mov
push
cmp
cmps
xor
sbb
xor
mov
imul
and
stos
push
jno
(bad)
sub
aas
jns
cmp
bound
imul
dec
xor
mov
stos
sub
mov
xor
mov
cmp
push
cmps
dec
dec
rcr
fiadd
push
sbb
mov
lock
mov
jle
push
mov
mov
add
xchg
sub
(bad)
addr16
mov
les
fdivr
ds
add
test
dec
fld
aaa
and
jge
sti
fcom
xchg
dec
jne
mov
add
mov
jecxz
xchg
fsubr
inc
sub
cmps
inc
jmp
xchg
sub
pop
sbb
cmp
stos
das
ret
inc
pop
lock
iret
ins
scas
xchg
scas
inc
pop
pop
sub
je
jno
test
pop
mov
and
pop
push
aaa
mov
cmps
pop
xchg
xchg
fsubr
mov
push
inc
jp
cmp
jge
jne
(bad)
lods
pushf
data16
jle
mov
xor
add
pusha
sub
pusha
mul
out
dec
stc
test
jge
(bad)
leave
addr16
mov
mov
adc
adc
xlat
pop
jbe
arpl
ds
shl
or
ja
pop
outs
outs
xor
outs
cmp
push
aam
pop
ret
in
je
mov
mov
test
cld
cmp
ds
gs
sahf
call
sbb
mov
cld
fs
pop
jns
inc
sub
mov
test
daa
jge
jecxz
iret
xchg
fs
int3
sub
pop
jmp
ja
inc
push
ds
test
mov
sbb
sbb
xchg
js
jno
add
mov
xor
bound
and
fsubr
or
test
cmp
dec
pusha
dec
xor
mov
aas
into
jge
pop
mov
xchg
dec
dec
test
cld
sahf
jns
xchg
xor
push
push
cmp
dec
mov
out
mov
call
iret
loopne
fld
inc
inc
and
cmp
inc
sbb
or
sub
fnstcw
dec
jb
jle
ins
scas
or
popf
pop
dec
(bad)
lds
jns
outs
xor
icebp
push
adc
pop
mov
pop
fistp
push
mov
sbb
jbe
cmp
mov
test
mov
fbstp
xlat
push
push
cdq
push
test
ds
add
add
jbe
fs
jae
mov
xchg
mov
fist
(bad)
fld
xor
pop
cmp
fiadd
add
cmc
dec
repnz
push
cmp
inc
loopne
dec
aam
fiadd
dec
fstp
ss
ret
xor
mov
mov
sbb
scas
mov
sahf
xchg
pop
js
arpl
cmp
sub
fwait
adc
xchg
mov
sbb
cli
push
addr16
and
icebp
test
mov
je
adc
icebp
jns
fst
adc
mov
and
out
push
hlt
outs
cli
or
mov
popf
sub
imul
mov
mov
sahf
ins
xor
test
mov
mov
mov
in
pushw
dec
pusha
ins
and
jno
jne
jg
outs
dec
adc
mov
lock
std
jg
test
adc
es
retf
sub
test
(bad)
inc
and
add
pop
iret
pop
aam
cmp
inc
xlat
add
sbb
lods
ss
or
dec
inc
popa
jbe
pop
adc
or
add
jne
mov
xchg
dec
or
test
mov
in
jbe
xlat
pop
push
inc
cmp
cld
stos
push
inc
push
sbb
or
cmp
cmps
fwait
xor
mov
jno
pusha
popf
xchg
ss
cpuid
dec
repnz
adc
xor
or
mov
mov
aaa
mov
pop
push
shr
mov
xchg
sub
sbb
in
out
ds
mov
xchg
aaa
outs
push
push
jge
xchg
cmc
xor
and
inc
cmp
div
jnp
jmp
push
xchg
leave
xchg
dec
xchg
cs
mov
fs
jecxz
nop
sub
jno
int
outs
dec
pushf
mov
out
stos
mov
mov
popa
jle
jb
inc
push
outs
jns
jbe
neg
inc
dec
jp
mov
mov
outs
ds
lea
xor
lods
dec
adc
and
ret
sub
es
cli
nop
xchg
inc
xchg
out
cld
xchg
adc
jmp
mov
dec
jb
inc
push
aas
jge
mov
add
stos
add
mov
mul
cmps
xchg
sub
mov
ror
cmp
in
cmp
push
js
fidivr
inc
xchg
cmc
xor
fdivr
rcr
cmp
ret
adc
adc
add
dec
sub
add
sub
inc
mov
inc
sbb
retf
lea
pop
mov
jmp
inc
or
add
inc
out
xor
sub
cld
out
pop
(bad)
push
shr
mov
cli
ds
cmps
and
push
sbb
sub
dec
lock
stos
stc
ds
icebp
cmp
xchg
ret
pop
sub
push
mov
inc
xchg
rol
and
loopne
in
retf
push
aas
mov
(bad)
inc
lock
pop
mov
or
sahf
call
outs
or
jmp
cmp
inc
test
sbb
inc
xchg
adc
inc
push
arpl
js
dec
jp
mov
(bad)
loop
iret
push
dec
pop
pop
inc
inc
dec
stos
call
xor
repnz
pop
add
pop
push
mov
inc
pop
ins
test
sar
push
out
arpl
ds
cli
into
sub
cdq
dec
int3
popa
add
and
mov
dec
fdivr
mov
shl
jecxz
mov
ficom
lea
xchg
inc
inc
gs
dec
mov
shr
inc
aam
dec
cmp
fisttp
inc
cmp
fidiv
stos
mov
imul
inc
xchg
lods
mov
xor
push
xchg
aaa
mov
pop
cwde
inc
punpckhdq
pop
fistp
cmp
lock
fdivrp
ret
out
cmc
jmp
xchg
inc
jne
adc
inc
jae
ins
dec
bound
in
mov
in
sahf
dec
push
iret
inc
cmp
fidivr
in
es
inc
loope
stc
in
mov
aaa
xor
sar
dec
mov
mov
loopne
jecxz
push
mov
cmp
lods
fwait
lods
cmp
jle
out
inc
(bad)
loopne
gs
xor
ins
pop
icebp
enter
adc
or
and
sub
icebp
outs
xchg
jp
inc
pop
add
into
fistp
jecxz
add
pop
inc
scas
and
adc
int3
add
inc
mov
sbb
scas
out
jg
rcl
add
stc
cmps
xchg
inc
(bad)
cld
jmp
sbb
arpl
test
je
sub
dec
mov
inc
iret
repz
imul
inc
dec
fwait
xor
outs
bound
comiss
sbb
mov
jo
jge
(bad)
xor
sub
push
js
mov
(bad)
and
lea
nop
fucom
add
mov
sub
lods
mov
cdq
mov
inc
ja
push
dec
dec
mov
(bad)
fcmovb
mov
inc
je
dec
aaa
inc
jns
cwde
xchg
cmp
lea
or
js
sub
mov
xchg
mov
or
das
pop
mov
rol
cdq
add
idiv
jp
mov
inc
dec
cmp
std
adc
out
inc
movs
push
repnz
int3
pop
imul
add
aam
ret
add
jns
jb
in
jbe
inc
jmp
adc
pop
pop
inc
inc
push
push
dec
push
inc
arpl
mov
inc
xchg
movs
push
and
fist
add
add
cmp
sub
xor
inc
mov
or
nop
shr
aaa
cmp
mov
dec
pusha
mov
nop
jmp
xchg
jmp
xor
mov
stos
xor
stos
pop
cld
call
enter
mov
sbb
lods
cmp
sub
push
xor
inc
push
loop
inc
mov
mov
test
jg
jmp
arpl
xchg
or
shl
inc
shl
push
mov
int3
fimul
dec
lock
sbb
inc
and
leave
xchg
movs
fwait
bound
test
sti
mov
nop
gs
dec
inc
mov
push
ds
add
lods
or
and
movs
mov
push
and
(bad)
add
or
mov
jp
cmc
out
hlt
mov
mov
xchg
sbb
sub
out
je
sub
fisub
jl
lds
xchg
or
pop
or
loop
push
stos
sti
xchg
aam
cmps
in
ret
inc
adc
repnz
jge
cmp
jae
xchg
movs
jo
fsub
adc
stos
cmp
js
in
aam
idiv
sar
cmp
(bad)
movs
cli
jp
inc
stos
adc
lahf
(bad)
xchg
inc
push
cmp
xchg
jp
or
mov
inc
(bad)
das
jb
add
adc
fld
inc
sbb
idiv
adc
xchg
in
and
and
cmp
fld
lea
leave
test
loope
jb
pop
(bad)
hlt
test
lds
xchg
les
outs
pop
shr
pop
push
sbb
inc
sti
pusha
movs
xchg
push
mov
(bad)
mov
rcr
call
push
sub
mov
push
nop
retf
aas
(bad)
sbb
call
cmp
not
cmp
sub
add
aad
(bad)
pop
inc
fldpi
jnp
scas
test
and
mov
xchg
pop
mov
sbb
dec
cmp
inc
cmp
fsub
cmp
lds
pop
ds
out
imul
mov
dec
adc
jne
dec
and
test
scas
fwait
outs
cmps
pushf
xchg
mov
in
xorps
sti
pop
movs
inc
inc
int
gs
adc
push
and
inc
stos
xchg
stos
jmp
sar
fdivr
sub
rol
leave
lea
cmp
mov
cmp
and
sbb
dec
inc
aad
and
mov
int3
pop
mov
enter
dec
mov
aas
(bad)
jmp
fistp
or
clc
sub
les
sbb
fucomip
dec
inc
mov
xor
enter
inc
clc
in
add
fld
push
pop
aas
(bad)
sbb
int
clc
jmp
stos
shl
or
and
push
cdq
lods
lea
inc
sub
push
jne
call
xchg
cmps
aaa
adc
inc
xchg
inc
pop
cdq
jno
and
mov
mov
ins
lods
loopne
dec
xchg
inc
add
cmp
inc
jp
cmc
xor
dec
imul
sub
fisubr
lock
adc
and
mov
stc
inc
push
fcmovne
sar
cmps
inc
jbe
inc
ret
cmp
call
jns
or
jmp
ins
mov
test
cmps
mov
les
jmp
jno
mov
sub
es
xor
inc
sbb
aaa
cmps
jp
popa
xlat
cmp
and
rcl
inc
push
rcl
jbe
test
fadd
repnz
sub
adc
adc
iret
sti
test
mov
ins
fisubr
rcr
push
aad
xor
push
int
mov
xchg
and
cmp
dec
inc
gs
xor
pusha
mov
inc
fcomi
push
movs
das
inc
stos
jo
test
jbe
dec
(bad)
(bad)
cmp
(bad)
repnz
imul
fs
jns
jno
inc
adc
in
lods
mov
or
retf
fnstenv
mov
cmp
push
aam
sbb
sub
xchg
pop
ja
loope
pop
lea
daa
jge
xchg
add
and
ficomp
add
daa
push
adc
cmp
cmc
lods
pop
xchg
mov
and
mov
jnp
adc
push
cmp
arpl
push
addps
mov
jns
jns
outs
mov
leave
lods
ss
mov
and
pop
fnstenv
test
add
and
icebp
fadd
aas
stos
add
cmp
push
jo
or
add
stos
test
ja
adc
jge
div
aas
fisub
addr16
mov
jno
jne
jmp
pop
das
mov
test
pop
sub
cs
sub
pusha
add
xor
xor
sub
scas
es
mov
fdivp
jae
js
aad
lods
fwait
jecxz
pusha
jno
inc
rcl
mov
mov
fwait
jns
(bad)
lock
sbb
mov
sbb
movs
ins
sbb
xchg
jns
xor
and
in
mov
mov
cmp
aas
mul
lahf
mov
(bad)
arpl
pop
daa
or
lds
jl
or
dec
out
sahf
dec
leave
mov
sahf
sub
fnstsw
jno
loope
scas
dec
and
pop
add
inc
test
jmp
cmp
sub
mov
inc
mov
dec
mov
cmp
xor
mov
jno
push
(bad)
or
pop
mov
cmp
cmp
into
stos
pop
ret
mov
push
adc
mov
fcomp
scas
clc
and
les
inc
jmp
repnz
fwait
stc
jp
jno
cld
adc
push
cmp
jge
pop
enter
jl
shl
or
pop
loope
test
cli
adc
jb
xchg
add
adc
push
mov
fdiv
mov
jle
mov
scas
icebp
or
xor
ja
jle
daa
ds
stc
out
xor
jle
sahf
div
sub
int
mov
cmp
(bad)
jecxz
cmps
jp
daa
xor
sub
lahf
mov
mov
je
mov
add
cmc
ret
inc
cs
sti
rol
xchg
mov
inc
lods
xchg
lahf
mov
aas
outs
jp
pusha
xor
add
xchg
icebp
jno
add
lock
jle
push
ja
inc
adc
add
pop
loopne
div
cmp
jle
shl
inc
test
iret
aam
or
in
repz
jmp
jmp
sar
push
int3
jbe
lock
sbb
jnp
inc
mov
xlat
push
cmp
xor
mov
cmp
lahf
jnp
clc
shr
cmp
fisub
mov
mov
push
mov
loope
inc
sub
sti
retf
fidivr
sar
cmp
pop
int3
aaa
bound
loopne
or
fistp
data16
test
push
add
cli
and
xor
sbb
inc
gs
cmc
leave
repz
sbb
inc
lds
in
inc
inc
and
and
cmp
mov
stc
jb
cmp
sti
and
cmps
mov
and
nop
mov
inc
repz
(bad)
cmp
pushaw
stc
aaa
cmp
sub
sbb
dec
sub
loop
fucomp
jecxz
fs
jae
mov
stos
lea
popa
sub
sub
outs
dec
iret
ss
xchg
add
scas
sar
pop
pusha
adc
int3
nop
mov
pop
and
lea
dec
inc
arpl
ret
sar
mov
aam
pop
jmp
into
ins
pop
loop
cmp
repnz
inc
sbb
popa
and
test
sbb
das
or
sub
push
call
cmp
iret
dec
fcom
not
mov
arpl
loopne
mov
inc
xchg
fs
pop
pop
push
aam
add
inc
jmp
sti
or
imul
retf
dec
pop
lock
mov
cmp
mov
inc
xor
sahf
jp
aaa
jmp
enter
mov
jl
pop
cmp
sbb
retf
div
push
les
pop
(bad)
jb
cli
int
int
mov
(bad)
and
jb
adc
mov
cmp
xor
xor
mov
mov
adc
or
retf
sahf
popa
ss
fwait
mov
mov
jge
pop
mov
stos
lds
sub
ret
cmc
adc
lock
push
inc
dec
adc
fbstp
aaa
inc
lods
pop
outs
sub
stos
jo
push
(bad)
pop
ret
pop
int3
pop
iret
xlat
mov
or
imul
jl
addr16
sub
ss
lods
xor
hlt
dec
add
in
outs
loop
mov
sahf
popf
adc
xor
ins
jnp
fiadd
mov
or
push
sbb
inc
das
jb
lea
call
mov
repz
add
jle
(bad)
mov
cmp
mov
test
cmp
imul
or
push
les
pop
inc
pop
dec
pop
dec
push
dec
std
push
cmp
dec
fstp
mov
push
sbb
inc
push
sub
sbb
cmp
sub
loop
not
jecxz
jnp
call
push
mov
inc
gs
jmp
dec
push
ss
add
cmps
jl
xor
add
repz
inc
sub
jnp
ds
ud1
cmps
xchg
push
arpl
mov
add
or
inc
sbb
movs
scas
inc
ds
mov
inc
sub
xchg
(bad)
sar
loope
dec
jg
adc
xchg
(bad)
fdiv
cmp
cmps
in
xchg
rol
inc
fistp
movs
inc
dec
je
pop
inc
pop
cdq
add
mov
cmc
mov
jmp
pop
xchg
mov
jne
aas
inc
into
ja
cmp
push
sub
nop
popf
(bad)
cmp
jp
out
clc
inc
shl
xor
addr16
adc
and
mov
sbb
jmp
imul
push
inc
mov
sahf
push
push
jmp
xchg
adc
xor
lds
inc
xor
int
or
ret
jmp
sbb
inc
inc
popf
adc
mov
retf
add
and
fwait
out
mov
inc
inc
xchg
push
adc
fucomi
(bad)
push
lahf
ds
pop
and
push
and
jbe
pop
jnp
add
loop
xchg
inc
bound
sbb
inc
and
push
cmp
add
sub
movs
stc
fs
mov
adc
mov
dec
shl
cmp
xor
inc
jle
cs
sbb
pop
inc
pop
nop
stos
sahf
jp
mov
ds
out
pop
test
and
rol
aas
dec
mov
repz
sub
add
popa
cmp
ficom
mov
cmp
and
(bad)
cmp
aas
mov
adc
inc
sbb
inc
mov
movs
inc
or
lods
stc
jne
cmp
rcr
cmps
xchg
into
mov
cmp
add
call
sub
ds
fs
popa
or
dec
outs
dec
retf
inc
(bad)
iret
out
fild
sti
sbb
fmul
dec
into
js
pop
mov
cmp
inc
jb
dec
fdivr
jl
je
sub
in
imul
imul
xor
cmp
mov
fistp
mov
pop
icebp
push
xchg
mov
inc
addr16
pop
or
jnp
inc
xlat
adc
mov
inc
push
sbb
inc
test
sub
ins
push
lods
hlt
inc
xor
mov
test
mov
or
inc
xchg
inc
mov
cmp
pop
addr16
xlat
imul
(bad)
ror
sbb
aam
cmp
mov
sbb
push
(bad)
imul
sbb
cmp
stos
out
fwait
jnp
inc
push
cmp
jl
lock
dec
sar
xor
inc
lahf
outs
js
dec
or
dec
in
push
div
aas
stos
jp
pop
xchg
lods
or
fisttp
and
shl
dec
cmp
mov
mov
mov
es
jecxz
js
sar
mov
xor
cmp
data16
dec
mov
cwde
push
dec
lods
adc
(bad)
cmp
and
test
dec
fisttp
in
(bad)
cmp
lds
stos
jbe
sub
jecxz
sar
inc
lods
stos
adc
cmp
mov
sbb
cmc
inc
rol
dec
inc
fnstsw
sti
pop
inc
lds
xchg
mov
mov
mov
ficom
xor
daa
xchg
mov
xor
mov
fist
inc
je
(bad)
in
pop
enter
sub
inc
ret
es
(bad)
cmp
in
and
sub
inc
dec
shl
scas
dec
sahf
cli
inc
ret
add
lea
jns
push
pushf
pop
or
sar
xchg
inc
and
add
inc
cdq
or
cmps
gs
into
cs
sahf
xchg
jnp
or
in
das
pop
aaa
pop
xor
dec
and
sub
stos
cdq
pop
dec
in
ror
fnstcw
xchg
add
xchg
sbb
std
(bad)
push
fstp
inc
lea
int
adc
lds
cld
push
cmp
xor
and
aad
loopne
inc
ss
fnsave
loopne
cmp
inc
dec
sbb
in
cld
test
clc
or
cmp
cmp
pop
pop
je
out
mov
cmps
imul
inc
xchg
inc
mov
(bad)
pop
dec
dec
mov
out
mov
jl
lods
test
mov
pop
xchg
sub
xor
inc
in
into
repz
pop
inc
push
push
jne
mov
cmp
pop
shr
mov
inc
das
mov
inc
test
(bad)
cmp
mov
mov
repz
lock
dec
ds
push
jecxz
cwde
push
popa
inc
xchg
cmp
xor
cmp
mov
sbb
sar
stos
mov
xchg
rol
hlt
xor
cmp
ds
inc
mov
das
iret
or
icebp
xchg
xchg
sbb
aaa
in
cmp
and
xchg
lods
push
loope
inc
leave
jno
jns
mov
imul
or
lahf
cmp
inc
repnz
jno
inc
mov
sbb
sub
jge
daa
icebp
cmp
push
es
cmp
sbb
pop
call
jmp
inc
je
or
sub
rcl
inc
add
pusha
mov
push
fdiv
push
xchg
inc
cmps
pop
add
inc
js
fnstenv
fsub
int
inc
test
mov
sub
dec
mov
sbb
lea
fbstp
mov
clc
adc
or
add
xlat
aam
pop
add
and
cmps
adc
mov
call
dec
jp
lods
inc
adc
clc
int
lahf
mov
inc
push
shr
cld
push
cmp
xchg
dec
or
mov
adc
mov
jae
or
lea
shr
pop
dec
jmp
outs
jbe
vphadddq
inc
pop
lock
cmps
arpl
push
or
adc
js
inc
mov
aad
push
xchg
cmp
setne
div
(bad)
jns
add
adc
add
je
addr16
cdq
(bad)
fcomp
mov
inc
int3
xor
dec
and
data16
enter
cmp
jl
mov
xor
retf
cmp
sub
inc
pop
jnp
outs
pop
mov
sub
mov
cmp
pushf
jl
inc
(bad)
mov
jmp
sbb
mov
test
mov
add
fisubr
xor
sbb
mov
mov
sahf
cmp
scas
jmp
(bad)
mov
pusha
ds
jbe
sbb
xchg
sbb
ret
or
and
repnz
ss
jno
stc
aaa
or
repz
fwait
ins
mov
out
jmp
(bad)
mov
sub
lods
int3
out
mov
pop
cmp
inc
retf
lea
push
push
mov
(bad)
lods
inc
ror
aas
scas
test
pop
fmul
cmp
xchg
pop
in
popa
aas
in
jge
mul
bound
dec
inc
add
cli
retf
(bad)
out
sbb
push
pop
or
mov
inc
or
jno
xor
sahf
outs
fsubr
xor
jecxz
sbb
push
fnstcw
sub
adc
push
inc
sbb
mov
or
xchg
call
in
into
les
sti
adc
and
jge
mov
mov
sub
test
xor
outs
jb
jle
cmc
in
jp
mov
jno
xchg
adc
jns
pop
or
imul
mov
sub
dec
retf
mov
jge
sub
(bad)
jmp
fdivr
out
xor
mov
xchg
cld
mov
add
push
mov
xor
jge
mov
mov
stos
dec
out
jns
cld
ins
push
mov
add
std
popa
jno
scas
cmp
loopne
ds
lock
rcr
pop
ins
sbb
pop
inc
push
lods
rcl
rcr
fwait
in
enter
push
retf
sbb
mov
mov
jbe
mov
sar
add
out
cmp
pop
mov
add
xor
and
mov
cmp
mov
lds
inc
pop
xchg
pop
movs
xor
xor
inc
sbb
cmp
cmp
jno
rcr
call
test
xor
and
sub
jns
mov
cmp
pusha
inc
xchg
cmp
sbb
mov
icebp
mov
push
inc
and
xor
dec
mov
cmp
jecxz
aas
addr16
mov
ret
ret
or
imul
mov
sub
js
xchg
push
pop
mov
(bad)
pop
pop
sub
dec
outs
sar
(bad)
lods
xor
adc
inc
mov
mov
sar
xchg
cmpxchg
push
adc
icebp
popa
scas
push
dec
in
add
dec
les
mov
xchg
out
lock
xchg
clc
pop
pop
cmp
xor
or
jg
stos
scas
(bad)
stc
xor
cmc
cmps
jae
div
repz
es
mov
cmp
hlt
pop
out
add
test
(bad)
push
xor
and
mov
stos
push
mov
mov
push
mov
cli
ins
or
es
mov
mov
inc
fmul
cmp
aas
(bad)
sub
sbb
dec
push
inc
idiv
hlt
inc
imul
xchg
stc
push
inc
jae
mul
and
ficom
jns
and
into
or
dec
mov
jge
and
push
iret
(bad)
stc
movs
addr16
pop
fnstsw
adc
loopne
in
ds
jns
push
lods
adc
push
inc
xchg
fisttp
fstp
cmp
js
fisttp
jb
inc
test
shl
and
pop
or
adc
mov
adc
sub
pop
aaa
ins
and
nop
mov
cmp
int3
sar
bound
inc
push
test
or
int
aam
cmp
or
fwait
cld
cmp
push
mov
jmp
out
push
xchg
lock
popa
rcl
jl
push
in
sub
repz
movs
or
(bad)
pushf
sahf
cmp
sub
cmps
inc
cmp
xchg
push
push
or
inc
mov
(bad)
cld
out
test
jb
call
inc
test
mov
inc
jp
lea
call
adc
and
push
push
or
add
(bad)
repnz
dec
fnstsw
inc
fiadd
dec
xor
xlat
dec
fiadd
cmp
adc
aaa
or
pushf
add
jge
push
retf
mov
jl
mov
or
inc
mov
call
fwait
mov
lea
in
or
and
inc
pop
lahf
lods
int
dec
sbb
test
je
dec
outs
mov
(bad)
movs
mov
inc
and
push
pop
inc
pop
retf
or
mov
push
fwait
dec
cld
imul
inc
push
and
std
push
inc
pop
imul
cmp
ds
je
xchg
inc
mov
add
push
inc
sti
call
mov
inc
out
int
sbb
mov
cmps
out
loopne
aam
push
ret
cmp
dec
push
call
cmp
mov
(bad)
aas
mov
mov
mov
adc
in
mov
test
or
pop
addr16
or
or
sub
jno
inc
dec
jbe
mov
jo
xor
dec
pop
push
jmp
xchg
mov
fsub
repz
ds
les
movs
inc
inc
jg
inc
rol
jle
(bad)
jns
cmp
dec
das
imul
aam
and
pop
push
enter
ds
cmp
cdq
pop
dec
dec
loopne
inc
iret
jne
sub
out
and
cmp
xchg
mov
pop
dec
cli
jmp
mov
pop
sub
ins
dec
(bad)
fs
mov
push
les
push
dec
add
(bad)
in
inc
js
mov
inc
in
or
add
pop
mov
add
and
movs
xchg
dec
inc
pop
add
jbe
lock
neg
cmps
sti
add
and
add
in
pop
je
mov
inc
and
cmc
movs
shl
pop
bound
outs
mov
cld
and
movs
mov
cmp
aas
mov
cmp
push
jne
out
push
dec
inc
and
xchg
adc
inc
xchg
push
arpl
push
or
(bad)
sub
xor
into
test
mov
pop
xchg
icebp
xchg
js
jnp
pop
push
pop
push
inc
retf
pop
cld
ret
dec
or
out
(bad)
punpckldq
mov
adc
xchg
mov
or
mov
sub
or
jge
mov
xor
repz
mov
fbld
scas
push
push
add
cdq
mov
mov
sbb
int
fcmovnbe
in
push
xchg
mov
(bad)
inc
inc
inc
lahf
aad
mov
lods
ret
push
or
cmp
cli
mov
popf
lds
cmp
and
cmp
mov
inc
sbb
pop
pop
cdq
mov
ret
rcr
and
pop
jne
(bad)
test
adc
or
push
jnp
imul
ficomp
sub
cmp
sub
loope
jge
mov
cmc
outs
repz
add
ins
repnz
bound
or
loopne
dec
jno
push
test
imul
xor
xor
das
sub
jno
in
sub
or
lock
test
mov
inc
jecxz
push
xor
cmp
loop
call
jle
out
jge
sti
in
in
test
jae
mov
mov
pop
xchg
stc
sbb
ror
pusha
mov
xchg
inc
js
cmp
jge
sub
jge
fs
mov
add
rcr
fcom
int
loope
adc
call
call
mov
and
cmps
pop
sub
fmul
xchg
xchg
cmps
mov
cmc
pop
sub
inc
iret
sub
movs
sbb
mov
adc
es
data16
jo
rcr
icebp
test
cmps
sbb
ret
push
repnz
or
ds
arpl
test
dec
stos
not
push
out
jno
retf
sar
mov
iret
nop
and
dec
popa
pop
mov
push
jnp
jp
aaa
push
push
jmp
shl
mov
inc
into
fadd
push
stc
sub
inc
les
sbb
outs
inc
cs
sub
in
out
movs
push
pop
cmp
(bad)
mov
push
sub
popa
aas
mov
cmp
adc
dec
loopne
jge
adc
aaa
pushf
dec
stc
mov
sti
pop
and
xor
dec
or
stos
call
je
movs
mov
stc
xchg
mov
add
add
inc
fnstenv
ret
mov
mov
stc
je
inc
pusha
cld
stos
cli
cmp
pop
cmp
mov
mul
push
sub
dec
adc
pusha
aad
jmp
xor
adc
pop
jbe
aas
mov
(bad)
jmp
js
sub
loopne
cmp
push
cli
icebp
add
dec
pusha
xchg
cmp
leave
call
ds
adc
shl
push
loopne
dec
adc
retf
out
inc
rcr
into
les
add
test
test
mov
sub
xchg
and
cmp
cmp
mov
mov
cmc
repnz
mov
sbb
mov
mov
sar
sub
fidivr
mov
jl
xor
sahf
add
rcl
in
xor
cmp
xchg
out
fdivr
(bad)
fld
jp
inc
aad
sub
mov
cmp
shr
jbe
outs
call
stos
add
stc
and
ret
call
jp
and
in
ins
or
out
adc
enter
jns
inc
xchg
add
xchg
push
push
loopne
movs
dec
inc
and
dec
push
ret
sub
cs
aad
(bad)
pop
les
and
mov
push
inc
sar
out
or
shl
lahf
jecxz
cmp
dec
loopne
and
cmc
xor
dec
fiadd
add
dec
cmp
dec
adc
int
cmp
sbb
add
xor
clc
jbe
rol
jno
jle
movs
push
push
cli
mov
xchg
aas
xchg
sbb
std
cli
push
aaa
int
inc
sbb
jle
lock
retf
bound
xor
ret
mov
cmps
inc
sub
lods
mov
imul
(bad)
mov
ret
dec
fsub
mov
mov
inc
lods
int3
xchg
ret
cmp
pop
cmp
push
int
les
pop
lahf
xchg
push
scas
cmp
out
add
in
inc
stc
lock
sar
test
jl
fistp
push
in
cmp
sbb
mov
pop
dec
inc
push
das
sub
inc
mov
dec
add
int
loopne
in
mov
cmp
inc
mov
fild
bound
lods
in
fldcw
jo
not
jnp
scas
sti
loop
fld
loopne
cli
dec
inc
leave
repz
dec
mov
or
add
lods
cmp
movs
xor
sbb
in
mov
cmp
pop
arpl
or
rol
int
inc
pop
fsubrp
test
cli
rcl
inc
imul
imul
leave
iret
lahf
mov
popf
lods
inc
stos
push
add
pop
retf
stos
ja
xor
int3
and
and
jl
pop
inc
inc
pop
outs
jae
or
cwde
mov
dec
les
ins
sahf
inc
or
(bad)
push
(bad)
daa
sub
add
js
push
inc
add
out
rcr
dec
inc
bound
sbb
stc
mov
inc
sahf
xchg
lods
cmp
cld
push
leave
inc
js
jb
(bad)
int3
push
ret
(bad)
pop
retf
push
push
push
test
inc
cmp
sbb
retf
xchg
sbb
cmp
dec
gs
cmp
push
stc
dec
data16
dec
fcom
shl
xor
outs
fwait
sub
sub
cmp
inc
pop
jo
push
xor
adc
rcl
mov
(bad)
(bad)
adc
fld
mov
ins
ins
loope
into
mov
cld
cmps
(bad)
sti
mov
je
scas
test
dec
sbb
pop
pop
mov
aas
jno
fidivr
cmp
mov
mov
jns
imul
js
sti
mov
(bad)
aas
jecxz
cmp
lahf
jmp
js
inc
icebp
ins
sti
push
leave
fisttp
je
xchg
scas
jmp
fadd
test
sbb
jge
hlt
mov
pusha
inc
pop
xor
ja
call
sub
mov
icebp
in
cwde
bound
jmp
xor
ins
push
retf
leave
adc
stos
mov
dec
add
inc
mov
inc
jo
sahf
xor
pop
imul
mov
ds
in
aaa
sub
fldcw
cs
adc
repnz
push
(bad)
stc
or
xor
pop
or
(bad)
add
jne
dec
ficomp
jns
sub
pop
or
dec
pop
cwde
sahf
jb
pop
sbb
hlt
js
xchg
jno
in
inc
jge
fisub
call
rol
data16
xchg
adc
add
inc
jns
mov
lock
pop
mov
js
test
xchg
stos
pushw
popf
or
pusha
jle
adc
xor
popf
xchg
aaa
fisttp
cmp
pop
mov
inc
pop
or
pop
test
cmps
xchg
in
push
push
mov
fidivr
pop
inc
pop
stc
dec
inc
shl
add
dec
pop
test
call
cs
lea
addr16
ja
dec
inc
outs
sub
fadd
jno
pop
mov
out
loop
pop
jo
cli
pusha
enter
xor
push
inc
test
int
dec
pop
dec
mov
inc
dec
push
jns
shr
les
and
cld
push
lahf
inc
pop
je
cmp
scas
ins
jnp
sti
(bad)
movs
(bad)
fmul
ds
cmp
adc
sbb
inc
das
push
xchg
xchg
lods
add
inc
pop
and
gs
jmp
mov
inc
fcomp
fstp
call
pop
(bad)
cmp
sbb
inc
inc
cld
pop
retf
adc
xchg
enter
cmp
xchg
add
sub
data16
ja
mov
dec
inc
dec
jbe
mov
adc
adc
xchg
adc
out
std
mov
retf
sub
in
mov
xor
aas
or
scas
add
(bad)
adc
and
sbb
xor
enter
ins
call
cmp
ret
shl
stc
adc
dec
js
fmulp
cmp
add
xor
sbb
int
stos
std
arpl
jle
ret
cs
cmova
jmp
push
ret
inc
into
adc
xlat
in
add
test
cmp
xchg
mov
and
clc
addr16
pop
lahf
iret
push
push
inc
push
std
jmp
or
pushf
cmps
xchg
test
jg
stc
aas
clc
inc
inc
mov
add
push
mov
mov
sub
cmp
les
xor
mov
add
(bad)
cwde
adc
jo
and
cmp
mov
arpl
icebp
popa
cli
imul
push
out
sub
test
je
repz
sahf
cmps
inc
bound
nop
icebp
dec
js
lea
jmp
in
jg
retf
jbe
icebp
stos
sub
out
dec
jle
jnp
jno
nop
jno
ret
cmp
popa
movs
call
inc
ds
xor
add
push
cwde
cmps
cmp
loope
pop
mov
repz
lds
jl
mov
cmp
leave
xor
ds
pop
dec
pop
xchg
out
push
test
xchg
jb
outs
cmp
xor
call
and
add
inc
rcl
xor
push
xchg
jb
inc
push
iret
push
lods
cld
cmp
rol
pusha
xchg
cmp
inc
sub
xchg
outs
cmp
add
(bad)
push
or
mov
mov
jno
xchg
xlat
cld
ds
sub
out
pop
jle
dec
push
cwde
ret
xchg
push
inc
push
out
fwait
rcr
push
mov
stos
inc
ds
and
sub
inc
pop
cmp
pop
mov
or
cmp
aad
xor
aas
movs
inc
push
out
pop
inc
or
sti
fwait
jne
cmp
movs
lock
inc
cmps
pushf
xchg
fidivr
daa
sbb
dec
jge
or
outs
sti
inc
or
mov
stos
fsub
js
mov
enter
or
xchg
or
stc
int
mov
cmp
test
sub
mov
xchg
xor
jns
cmp
jle
mov
pop
xchg
mov
sbb
fmul
loopne
out
imul
xor
add
push
or
je
call
sahf
inc
or
add
pop
inc
(bad)
push
jne
lock
into
fdivr
(bad)
aam
mov
ss
rcl
xor
dec
add
rcr
or
fcom
mov
dec
out
inc
test
push
popa
(bad)
fucomi
jle
nop
lock
out
or
cmp
repz
sbb
scas
inc
or
mov
aad
cmp
add
push
mov
cmp
dec
(bad)
adc
sub
mov
xchg
add
add
pop
inc
inc
shl
and
dec
mov
enter
jge
stc
mov
xor
cmp
and
inc
sub
movs
sub
fbstp
mov
cmp
popa
push
mov
les
adc
add
xor
repz
das
or
push
ret
fdivr
(bad)
mov
call
aam
inc
test
out
jmp
cmp
aaa
cmc
adc
call
retf
fwait
pop
dec
add
cmp
jecxz
adc
fmul
mov
mov
imul
imul
cmp
into
cli
fisubr
not
das
rol
push
lea
outs
cs
mov
fs
cmp
xor
(bad)
retf
sbb
jmp
xchg
aad
xchg
setge
imul
or
push
sahf
add
cmp
ret
out
iret
je
mov
mov
daa
cmp
pop
xor
or
jb
sub
jb
cli
outs
jp
inc
call
dec
shl
inc
jmp
arpl
xor
repnz
(bad)
add
(bad)
icebp
pop
xlat
js
or
das
pusha
pushf
in
push
out
je
adc
mov
mov
fisttp
test
mov
jno
inc
adc
push
xchg
(bad)
mov
aas
lods
fild
jb
xor
into
std
pop
mov
addr16
hlt
push
cmp
push
dec
icebp
js
jle
sahf
ret
cmp
sahf
jno
mov
inc
push
pusha
mov
mov
in
xor
push
fdiv
jge
out
ja
add
and
push
sbb
lea
xor
add
cmp
adc
mov
outs
ds
xor
out
jo
int3
in
bnd
sbb
xor
jnp
rcr
jnp
aas
dec
imul
xchg
fnstcw
(bad)
movs
leave
ffreep
xchg
mov
and
inc
inc
cmp
jmp
dec
and
stos
cdq
outs
popa
fnstsw
pop
dec
int
mov
repz
stos
xchg
inc
sbb
inc
test
lock
(bad)
cmp
dec
xchg
sbb
fldenv
test
loope
cmc
inc
mov
mov
lahf
and
xor
jg
and
test
inc
push
dec
push
cmp
inc
xor
inc
test
ret
inc
or
push
xchg
xor
fs
push
cdq
dec
inc
in
inc
loop
xchg
dec
cmp
xchg
inc
daa
ins
mov
sub
adc
cmp
inc
neg
aad
stos
out
push
dec
cmp
add
xchg
jp
fs
or
inc
cmp
out
mov
dec
hlt
inc
clc
pop
mov
out
scas
call
sub
pop
xor
xchg
ins
out
rol
es
scas
std
jnp
and
dec
xlat
ret
arpl
push
sar
cli
sbb
or
sub
mov
sub
aas
adc
shl
mov
sub
scas
aam
mov
mov
push
enter
inc
mov
imul
push
inc
cli
cmp
fs
es
xchg
lds
add
push
inc
retf
jl
inc
xchg
pop
shl
mov
iret
popa
rcr
push
mov
push
jne
aaa
sar
sar
xchg
test
rol
sbb
stos
inc
mov
sti
mov
inc
test
shl
ficomp
cmp
sbb
add
inc
retf
xor
fstp
rcl
and
and
inc
leave
lds
inc
jb
sub
add
adc
retf
cdq
imul
xchg
clc
cli
mov
loopne
sbb
sbb
pop
(bad)
adc
mov
add
fdiv
lods
cmc
add
cmp
daa
inc
(bad)
das
js
aaa
inc
cli
or
sti
and
arpl
aam
inc
out
pop
sub
test
jbe
jge
test
stc
or
fstp
out
aas
inc
int
outs
ins
pop
inc
ret
pop
sbb
dec
clc
inc
hlt
pop
lods
pop
rol
pop
test
inc
lahf
repz
js
fcmovu
mov
pop
cmp
jbe
ret
mov
in
add
mov
add
dec
push
test
loop
inc
sbb
cmp
ror
loope
mov
inc
jne
inc
inc
mov
dec
pop
not
dec
imul
cmp
sub
scas
inc
pushf
inc
cmp
arpl
sar
mov
adc
scas
inc
and
mov
cld
gs
sub
pop
out
pop
sub
sub
enter
or
int
push
add
scas
jecxz
push
push
aas
daa
mov
movq
jmp
in
js
sbb
retf
mov
inc
cli
test
sahf
pop
out
fwait
inc
inc
inc
inc
mov
pop
fist
inc
dec
mov
pop
cmp
cmc
inc
xor
or
xor
push
xchg
inc
and
lahf
fdivr
sbb
sub
inc
mov
xchg
inc
popf
push
xlat
les
sbb
pop
inc
pshufw
push
dec
cmp
fdivrp
dec
inc
icebp
inc
cmc
pop
lods
shl
sbb
sbb
inc
jle
cmp
mov
pusha
xor
loopne
jge
inc
xor
pop
xchg
add
inc
mov
and
inc
lock
sub
clc
cmps
in
repz
ja
(bad)
push
cmp
cmp
add
or
ds
mov
call
push
mov
mov
js
sub
inc
inc
cmp
shl
in
js
scas
das
loopne
fisubr
inc
aaa
das
xchg
sbb
ins
inc
scas
inc
dec
pop
mov
mov
cld
and
cmp
es
pop
xlat
(bad)
stc
add
jle
inc
cmp
cmp
fcomp
xchg
inc
mov
out
sbb
repnz
ds
gs
mov
cmp
inc
mov
hlt
iret
add
mov
fs
cmp
pop
inc
inc
in
movs
mov
sbb
cmps
inc
inc
pop
jle
cmps
das
mov
lahf
inc
loop
sub
sub
das
jge
add
push
cmp
int3
ror
neg
test
cmps
test
inc
and
daa
xchg
xchg
inc
call
imul
adc
sub
in
test
jnp
fiadd
inc
pop
sbb
cmp
aam
or
fs
scas
rcr
aas
jno
dec
jle
add
idiv
cmp
repz
or
add
cmp
jbe
xchg
mov
outs
inc
out
add
and
(bad)
pop
rcl
add
mov
gs
retf
cmps
jl
sahf
xor
mov
pop
pop
ja
jno
jl
push
jno
adc
sbb
inc
cmp
or
jae
cli
mov
fst
ficomp
nop
stos
pop
inc
scas
mov
xor
cld
mov
mov
cmp
sbb
icebp
fdiv
not
pusha
jns
cmp
rcr
fxch
cmp
into
(bad)
jns
inc
dec
sub
push
lea
adc
cmp
jecxz
xchg
xor
cmp
hlt
jmp
xchg
ins
jl
lods
push
fistp
ins
ds
mov
or
fnstenv
and
cli
xchg
cmp
cmp
rcl
shl
inc
jno
xchg
jo
es
dec
cmps
lock
imul
xchg
es
jae
leave
je
ror
cld
mov
mov
jg
jno
test
nop
imul
sbb
jbe
mov
cmp
jle
sti
ret
mov
sbb
div
lods
into
scas
dec
cmps
mov
mov
(bad)
mov
mov
xchg
mov
(bad)
or
test
inc
sti
sbb
xchg
push
push
mov
dec
mov
aad
inc
ins
repz
imul
inc
sbb
test
in
pop
test
repnz
mov
mov
cld
or
mov
test
mov
inc
int
aaa
gs
mov
imul
or
push
add
add
fnstsw
inc
and
data16
jmp
repz
sub
push
mov
dec
and
test
mov
mov
imul
sti
cmp
mov
and
mov
outs
inc
(bad)
mov
xor
retf
inc
aam
aad
adc
scas
dec
je
cmp
xchg
fadd
pop
push
xchg
xchg
int3
ret
xchg
add
jmp
inc
enter
jno
stos
cdq
mov
pushf
sub
imul
adc
cmp
jmp
mov
pusha
sbb
rcl
sub
push
test
add
out
clc
mov
pop
mov
cmp
xchg
pop
dec
bound
inc
fwait
sbb
icebp
gs
not
outs
mov
inc
aaa
fmul
ds
push
push
and
leave
sub
sbb
ins
ret
fisttp
fcomp
inc
cmp
mov
cmp
ror
fistp
cmp
popf
xor
daa
mov
mov
sub
cmp
aaa
scas
sysenter
jns
cmp
fadd
inc
and
xchg
mov
scas
retf
sbb
and
pop
mov
adc
seto
aaa
jmp
jge
push
mov
arpl
jno
dec
mov
loope
loopne
(bad)
sbb
or
cmp
xor
dec
sub
jno
push
pushf
pop
jge
es
hlt
stc
or
jle
repnz
jmp
pop
sbb
xchg
push
push
and
inc
ret
out
sbb
push
pop
mov
or
popa
cmp
push
loopne
and
or
rol
cmp
pushf
mov
sub
adc
pop
pop
mov
jns
mov
cmc
sti
dec
fldenv
mov
push
add
mov
ds
jns
dec
or
and
jo
adc
clc
adc
push
stos
xor
mov
outs
jbe
add
xchg
test
pop
xchg
inc
out
out
jns
cmps
retf
and
mov
jle
nop
jae
scas
mov
inc
ficomp
retf
in
pop
mov
cmc
sub
xchg
sahf
jo
retf
add
mov
icebp
ror
inc
test
in
inc
mov
js
inc
jmp
pop
call
mov
and
adc
ss
into
sbb
and
(bad)
dec
mov
mov
(bad)
ret
xlat
ret
leave
shr
push
inc
mov
inc
aaa
pop
sbb
mov
push
or
les
cmp
inc
or
sub
pop
fistp
es
rol
fisub
or
mov
loopne
inc
push
fwait
push
xchg
pxor
in
out
add
retf
or
mov
repnz
bound
or
sti
ds
sbb
mov
and
sbb
add
mov
mov
or
push
and
xor
xchg
jne
sbb
ins
add
jmp
aas
jnp
inc
add
std
aas
jl
(bad)
cmp
in
xor
bnd
lock
jecxz
mov
aaa
jmp
test
sbb
fadd
sti
pop
ins
sar
fld
cli
rol
xchg
cwde
add
cmp
push
out
enter
cmc
loopne
cld
ror
enter
inc
fmul
cmp
add
pop
daa
cmp
lea
call
jo
dec
pop
dec
scas
pop
jo
out
sub
inc
push
mov
ins
pop
inc
dec
push
(bad)
fldcw
jno
mov
popf
test
adc
(bad)
out
pop
or
aas
movs
xor
cmp
xor
jo
jnp
mov
xchg
add
dec
stc
js
or
and
add
add
sbb
test
pop
cmp
sub
mov
lds
cmp
push
or
sub
pop
sbb
xchg
xor
and
data16
aad
xor
push
test
fcmovne
fmulp
or
xchg
push
outs
cmc
pop
xchg
cmp
in
out
or
(bad)
mov
sbb
sbb
jae
sbb
push
mov
std
jecxz
cmp
add
retf
movs
mov
aaa
icebp
sbb
aad
inc
inc
lock
adc
into
fucom
test
add
arpl
nop
sbb
mov
inc
push
or
xlat
inc
and
cmp
or
iret
add
xor
sahf
int3
ror
mov
cmp
jnp
daa
or
je
dec
shl
mov
lods
cld
add
mov
mov
lods
stos
inc
jle
frstor
sub
aam
loopne
(bad)
popa
push
cmp
retf
retf
pop
dec
mov
inc
loope
outs
mov
sub
or
sub
inc
sbb
inc
sub
or
cmps
inc
pop
or
add
cmp
sbb
inc
sti
jb
and
movs
lods
fs
scas
dec
mov
hlt
mov
cld
ds
sbb
mov
pop
push
dec
aaa
dec
xchg
test
enter
sub
fmul
jle
aam
cmp
mov
mov
sub
test
add
mov
pop
inc
data16
pushf
or
mov
and
cmp
inc
add
cmp
inc
sbb
dec
push
mov
ret
inc
int3
std
cmp
jecxz
int
or
loopne
(bad)
ins
add
push
cwde
xor
xchg
rcl
rcl
sbb
(bad)
idiv
out
inc
inc
fstp
pop
std
sub
cmp
aas
in
out
fstp
pop
(bad)
push
push
push
or
inc
into
dec
cmp
or
(bad)
rol
inc
in
fs
mov
adc
rcl
xchg
daa
sub
bswap
icebp
arpl
xlat
push
sbb
cld
add
inc
sbb
fistp
sbb
jmp
inc
fiadd
jbe
adc
cs
inc
jge
sti
into
pop
cmps
repz
add
inc
inc
clc
xor
inc
sbb
ja
cmp
movs
arpl
out
push
sub
dec
mov
add
sub
scas
inc
jo
lods
test
mov
repnz
adc
push
sti
mov
sub
xor
xor
or
inc
push
arpl
jp
mov
inc
jae
bound
sub
sbb
jns
cwde
cmovo
iret
pushf
repnz
or
nop
cwde
xlat
jmp
and
fucom
or
cs
cmp
call
pop
mov
je
cmp
ss
sbb
sub
loop
jbe
dec
pop
dec
jmp
dec
inc
and
cvtdq2ps
int3
nop
jne
stc
sbb
inc
xor
sub
fcom
aas
mov
jecxz
rcl
aad
rcr
test
add
frstor
jb
popa
mov
xchg
rol
jmp
out
jp
mov
jg
jmp
cmovo
into
(bad)
cmc
add
push
(bad)
or
dec
iret
dec
enter
add
cmp
adc
xchg
stos
jo
pop
test
out
jmp
fstp
cmps
addr16
inc
adc
in
test
inc
mov
pop
cld
mov
clc
inc
shl
loopne
jge
dec
scas
rol
xchg
fsub
push
dec
pop
jg
dec
sub
in
mov
je
ins
cmp
ficom
mov
(bad)
movs
jns
sub
jbe
loope
push
adc
mov
jg
ins
pop
inc
xchg
stos
mov
sub
add
sbb
loope
push
adc
or
or
mov
shr
imul
xchg
ss
jns
cld
inc
push
mov
stos
push
pop
xor
inc
jle
pop
bound
jge
inc
xlat
adc
loope
dec
es
push
scas
sti
gs
les
or
mov
out
sbb
outs
pop
les
dec
sbb
or
sub
inc
cmp
or
rcr
shl
fild
dec
sbb
sbb
sbb
dec
jnp
jmp
ficomp
xor
mov
aad
cmp
dec
sub
rdtsc
push
movs
xchg
xor
test
int
and
inc
(bad)
adc
xor
mov
test
mov
add
xchg
adc
jge
mov
mov
and
sti
fst
or
push
xchg
out
fmul
inc
stc
ds
mov
cdq
jnp
adc
push
and
xor
idiv
hlt
lea
jne
mov
dec
and
mov
or
in
inc
cmp
or
dec
push
inc
push
xor
stos
repz
xchg
loope
jmp
xchg
movs
xor
push
push
inc
xor
pop
cmps
movs
xchg
mov
test
or
jp
jge
enter
in
xchg
stos
in
out
push
inc
or
mov
fidiv
adc
shl
mov
and
and
or
mov
mov
and
push
push
jge
stc
inc
js
iret
ret
jbe
popf
ror
in
mov
mov
ins
inc
jg
ins
call
in
loopne
inc
(bad)
push
xchg
scas
int
out
rol
rcr
out
stc
mov
imul
adc
sahf
mov
adc
jno
ss
jle
inc
xchg
(bad)
sub
xor
pop
loopne
stos
cmp
or
idiv
ins
ss
cmp
jle
xchg
sub
cmp
fnstsw
div
xor
cmp
inc
ja
lods
jo
hlt
shr
cmp
inc
loopne
jge
sub
clc
cmp
lods
rcl
or
ret
pop
mov
test
mov
push
mov
mov
push
aam
in
out
out
jno
call
mov
fist
pusha
jns
shl
mov
mov
pop
adc
call
mov
mov
into
mov
loopne
mov
inc
ja
jns
inc
pushf
cli
adc
ret
pop
ss
push
dec
call
dec
test
test
mov
(bad)
xor
and
jb
push
mov
fs
pop
cmp
sar
inc
sbb
mov
loopne
fbld
push
cli
in
jns
popf
jmp
js
mov
ins
retf
test
xchg
xchg
and
js
outs
mov
sub
push
mov
aas
dec
retf
ret
icebp
mov
mov
jns
and
pop
sar
call
sub
je
sahf
ins
cs
cdq
retf
or
hlt
shl
icebp
aaa
sub
js
and
pusha
loopne
jb
in
xor
jp
mov
aaa
mov
inc
popa
pop
jl
lahf
xor
mov
xchg
cmp
aam
lds
leave
rol
sub
jl
shl
ror
repnz
inc
ds
smsw
sub
sbb
mov
aas
inc
jle
addr16
dec
inc
out
imul
xchg
mov
inc
mov
jne
push
addr16
jbe
cmp
and
ins
pop
enter
add
ss
or
jb
mov
jae
(bad)
cmp
push
vmread
mov
fnstcw
lds
jp
sar
outs
add
sbb
int3
test
pushf
jmp
movs
push
enter
mov
cmp
push
into
test
or
sub
std
leave
out
xlat
sub
repnz
inc
loopne
sbb
sar
arpl
imul
je
ror
push
and
dec
cmp
adc
mov
push
adc
adc
sbb
imul
loopne
xor
dec
mov
adc
push
pop
mov
aaa
inc
nop
and
mov
sbb
sub
cmp
out
dec
inc
into
xchg
push
imul
jecxz
mov
inc
sub
mov
(bad)
jne
lods
in
push
and
test
fcmovb
inc
(bad)
and
sbb
and
mov
out
div
jg
(bad)
xor
call
shl
neg
icebp
sbb
jns
mov
jecxz
mov
sbb
dec
or
into
sub
adc
shl
push
mov
call
jbe
sbb
in
(bad)
mov
js
das
rol
add
ds
ret
inc
pop
mov
test
jl
inc
sub
lods
stos
push
sbb
adc
js
cmp
cmp
cmp
mov
sub
mov
gs
sbb
push
inc
jl
test
in
(bad)
sbb
lock
test
dec
pop
cdq
stos
cmp
inc
inc
and
ja
lds
shl
mov
inc
bts
mov
sub
and
mov
wbinvd
pop
push
inc
mov
xchg
das
imul
outs
cmp
in
loope
fcom
mov
(bad)
push
outs
inc
aad
inc
dec
sub
or
aad
into
cmp
in
inc
(bad)
pop
dec
cmp
pop
aas
mov
and
sbb
sbb
push
out
mov
or
jp
xchg
fimul
lock
inc
(bad)
fiadd
xchg
arpl
inc
mov
cdq
cmp
inc
inc
ja
retf
scas
xchg
sbb
dec
cmp
xchg
dec
test
lea
inc
data16
inc
dec
call
inc
fcmove
out
lea
(bad)
into
jo
mov
jnp
adc
mov
das
dec
dec
cli
mov
sbb
pop
dec
fiadd
inc
mov
(bad)
loopne
jge
(bad)
mov
mov
imul
jnp
test
(bad)
in
cli
out
and
psllq
and
imul
mov
rcl
pop
cwde
scas
push
aaa
sub
arpl
pop
or
inc
sahf
mov
inc
hlt
add
sub
inc
aaa
sbb
(bad)
dec
or
gs
mov
out
jmp
mov
es
pop
jp
aam
mov
fbstp
in
pop
aas
jbe
xchg
cmp
pop
inc
daa
outs
jo
sti
stc
dec
nop
sub
int
and
cmp
pop
mov
jg
movs
sbb
mov
mov
in
jp
inc
add
shl
and
push
nop
or
fmulp
lahf
inc
xor
pop
jne
int
inc
bnd
and
wrmsr
shr
jmp
adc
dec
sbb
cmp
std
jl
(bad)
ins
inc
pop
stos
xor
inc
jns
lds
call
adc
xor
leave
add
in
pop
sub
sti
pop
mov
hlt
aam
mov
or
(bad)
cmp
icebp
outs
sti
data16
imul
mov
loope
mov
retf
(bad)
inc
(bad)
xlat
(bad)
(bad)
mov
mov
in
inc
push
call
or
sub
inc
ds
retf
imul
inc
(bad)
jbe
and
out
mov
scas
mov
stos
mov
lods
retf
sbb
popf
push
xchg
movs
mov
jbe
lea
cmp
cli
inc
data16
or
bound
cmp
xchg
es
enter
push
stos
not
lock
sti
test
and
pop
fisub
push
mov
inc
and
jmp
lock
pop
lahf
nop
aam
out
pop
cmp
fwait
aaa
inc
or
pushf
loope
push
inc
gs
sbb
cmp
mov
inc
leave
fst
jb
sub
inc
xlat
pop
adc
(bad)
out
aaa
sbb
pop
inc
retf
mov
(bad)
loope
sbb
inc
mov
arpl
stc
das
pop
push
je
out
popf
xchg
enter
inc
repnz
aad
cdq
mov
inc
xor
icebp
or
retf
xor
mov
fild
add
stos
fistp
das
inc
pushf
mov
(bad)
faddp
and
sub
inc
cmp
mov
aam
inc
mov
add
xor
call
xchg
push
push
and
push
fild
out
(bad)
sub
imul
add
es
retf
dec
xor
mov
fbld
cmp
scas
push
int3
xchg
xchg
jae
popf
call
jp
and
xor
jle
xchg
loop
mov
and
into
or
cmp
mov
(bad)
ds
scas
aas
cmps
aaa
test
mov
lods
out
dec
rcl
xor
enter
push
pop
add
mov
ds
add
fnstcw
push
test
xchg
or
inc
jp
sub
std
add
jae
daa
mov
push
push
pop
pop
sbb
aam
cwde
mov
lea
loopne
(bad)
ret
cmp
adc
ds
cmp
push
mov
ret
jmp
ins
imul
(bad)
les
stos
mov
ror
loopne
cmc
rcr
ss
cmp
and
mov
je
(bad)
bound
mov
or
ins
dec
mov
or
dec
inc
test
mov
dec
cmp
das
dec
cmp
sub
imul
sub
cmp
sahf
or
movs
mov
rcr
inc
and
add
xchg
xchg
pop
lds
or
xor
dec
mov
push
imul
pop
lahf
pop
inc
push
bnd
cdq
test
ja
inc
cmp
xchg
ror
js
sbb
(bad)
test
jmp
inc
xor
out
clc
lock
mul
addr16
mov
inc
outs
adc
fbstp
mov
sti
jp
stos
hlt
loopne
sub
loope
cmp
out
loop
inc
pushf
addr16
xor
pop
ror
(bad)
jno
cli
stc
sar
push
push
ret
or
add
test
icebp
jb
jns
sbb
cmp
sbb
outs
icebp
or
or
or
jl
inc
cmp
mov
sahf
or
imul
(bad)
mov
inc
aas
sub
dec
fs
xchg
lock
inc
les
stc
push
push
sub
cmps
jecxz
xor
dec
xor
mov
and
mov
mov
ds
mov
and
shl
test
(bad)
add
lds
out
aam
mov
into
adc
retf
test
and
ds
or
and
or
loope
out
cmps
arpl
fistp
int
sub
cmc
xor
or
jecxz
pop
icebp
ds
and
je
stc
adc
mov
push
fsubr
(bad)
hlt
neg
lods
sub
aaa
jne
mov
mov
jnp
in
das
cli
inc
mov
mov
lods
mov
mov
sbb
and
mov
pop
or
adc
mov
ror
or
push
sbb
xor
pop
jb
mov
shl
sub
mov
cwde
imul
mov
inc
xchg
idiv
xor
mov
lock
stos
cli
mov
js
out
mov
popf
push
sbb
pop
xor
xor
addr16
lea
lahf
test
pop
and
cmp
inc
inc
ins
jl
jne
aam
ror
or
ss
mov
and
mov
mov
sbb
(bad)
rcr
inc
push
inc
enter
jl
ret
rol
test
cmp
push
loopne
cld
jno
movs
inc
into
retf
or
sub
fcmove
sub
je
out
jmp
mov
xchg
stos
mov
(bad)
sahf
out
sub
test
dec
icebp
xor
push
rcr
sub
mov
dec
inc
push
aas
movs
jno
aad
jbe
adc
sti
adc
dec
jecxz
loopne
nop
jmp
sub
icebp
jp
or
or
dec
inc
fstp
add
push
gs
stos
jg
mov
cld
fisub
sti
cmp
mov
in
inc
les
xor
xor
ss
test
xor
inc
add
sbb
rcr
ins
push
push
out
sar
std
xor
fnstsw
inc
xchg
pop
(bad)
scas
push
outs
jge
inc
repz
(bad)
cli
popf
cmp
push
inc
(bad)
mov
and
or
jae
int
dec
ins
mov
das
loope
inc
(bad)
arpl
jne
inc
xchg
popf
mov
mov
xchg
or
mov
xchg
(bad)
repz
mov
inc
xchg
in
dec
js
ret
cdq
leave
push
push
mov
fcom
and
cmp
adc
jnp
dec
mov
cmp
inc
ss
adc
cmp
mov
inc
xchg
pop
repz
push
sti
jmp
inc
call
sub
pop
dec
pop
loop
in
inc
je
or
pop
sbb
xor
inc
dec
pop
sbb
ss
mov
mov
add
lds
xor
mov
in
inc
or
fmul
repz
cmp
fs
xor
paddd
pop
sahf
aas
icebp
stos
outs
cmp
jp
pop
inc
fcomp
push
push
jnp
xor
not
cwde
mov
in
dec
into
repnz
inc
push
pusha
pushf
retf
retf
dec
mulps
loopne
inc
sub
cld
push
mov
pop
cmp
or
inc
inc
imul
ror
push
and
pop
nop
adc
mov
sub
gs
add
sub
out
xor
stos
ror
and
sub
push
jns
out
push
out
jg
je
or
xchg
sub
cmp
loope
rep
jl
dec
push
arpl
add
mov
inc
dec
test
rcr
call
lahf
adc
push
cmp
icebp
ret
or
dec
add
jge
inc
popa
push
mul
inc
dec
xchg
retf
jns
add
jno
ja
(bad)
fsubr
mov
lahf
or
cmp
jmp
mov
adc
mov
pop
pop
mov
cmc
fdivr
xchg
mov
jne
dec
int3
xchg
inc
mov
fwait
imul
push
pop
cdq
sub
stos
ret
push
sub
out
sub
les
push
je
jmp
loope
mov
sbb
dec
sti
push
sbb
and
jmp
sub
pusha
jno
mov
sbb
cmp
mov
inc
shl
adc
ss
gs
inc
scas
mov
fsubrp
sub
xor
pop
hlt
lock
pop
cmc
movs
and
je
scas
call
adc
lahf
sub
cmp
in
(bad)
iret
ret
jg
std
pop
or
fsub
jge
jle
cmps
mov
aas
stc
in
shr
xchg
mov
sbb
sub
pop
test
cmps
into
bound
gs
jo
pushf
mov
xor
jns
cld
xor
jge
fidiv
in
ins
push
cmp
and
cmp
cmp
inc
dec
daa
or
not
test
jnp
sbb
cmp
dec
shr
push
(bad)
sub
imul
aam
outs
int3
inc
sub
clc
push
sbb
xchg
mov
movs
out
mov
inc
loope
sbb
test
out
mov
mov
stos
sbb
fisttp
push
repnz
(bad)
call
das
inc
and
push
jo
push
bound
mov
sub
sub
pop
fs
iret
mov
push
stos
and
mov
inc
xchg
popf
pusha
sbb
out
xor
pop
xchg
xchg
aaa
psubusw
xor
and
inc
adc
adc
retf
ret
aas
jbe
inc
ds
(bad)
sub
movs
xor
xchg
(bad)
sbb
and
mov
fadd
cmc
scas
ja
sbb
pop
sub
jle
xchg
mov
adc
xchg
cmp
(bad)
ficomp
xor
test
adc
xchg
mov
shl
ret
mov
dec
(bad)
cmp
leave
inc
retf
jns
sub
jle
(bad)
xchg
pop
sub
push
or
mov
push
sub
inc
push
sbb
push
sub
sub
fsubr
movs
mov
mov
cmp
ins
pop
retf
leave
fsubp
jns
mov
nop
mov
mov
stos
xor
cdq
je
inc
sub
sub
add
push
std
loop
jns
not
xchg
jns
fistp
in
mov
sar
outs
lds
lods
fisttp
mov
mov
scas
xor
fldenv
pop
out
mov
inc
cmp
adc
mov
lahf
mov
fs
outs
jl
pop
cmp
test
lds
sbb
aas
jno
into
sahf
xor
add
sub
bound
out
or
loopne
cmc
(bad)
aam
pop
test
daa
icebp
sar
mov
mov
xor
(bad)
cld
iret
sub
out
add
scas
test
jns
mov
push
in
stc
jno
(bad)
sub
xor
retf
jmp
ss
or
aaa
xor
mov
inc
arpl
or
inc
mov
cmp
and
cmp
leave
fiadd
mov
dec
loope
cmp
add
mov
jl
pop
pop
and
xor
inc
adc
sar
pop
sbb
int3
push
xor
xor
es
mov
push
sbb
in
cmp
mov
sar
std
inc
test
ds
inc
outs
push
adc
jmp
xchg
mov
sbb
test
test
jbe
sar
dec
inc
repz
retf
push
pop
pop
pop
mov
xlat
inc
aam
cmp
adc
movs
inc
fwait
pusha
xchg
enter
push
cmp
nop
dec
ja
inc
push
xchg
or
inc
in
push
push
and
jmp
cmps
cmp
inc
cmp
imul
push
dec
xchg
cmc
and
and
mov
jno
popa
aam
xor
adc
(bad)
mov
mov
retf
cli
and
sub
cs
mov
xchg
mov
mov
ins
sbb
inc
jbe
stc
mov
sub
xor
adc
cmp
ret
mov
out
addr16
cld
xor
nop
ja
lahf
sub
ins
push
xor
inc
out
addr16
mov
inc
lods
push
and
scas
aaa
jmp
call
cld
jmp
rol
pushf
lds
xchg
sar
je
aas
jns
sbb
mov
into
mov
fwait
jns
js
cmp
mov
or
in
ds
int
mov
sub
sbb
mov
sub
sar
nop
ds
mov
sub
xchg
jns
inc
imul
inc
jnp
add
cmc
aam
loopne
or
(bad)
sub
xor
cmp
or
cmp
test
pop
adc
add
jge
mov
(bad)
sbb
sub
push
pop
scas
cmp
js
fstp
jp
mov
jecxz
es
mov
pop
sub
jno
jne
das
cli
out
add
mov
pop
imul
test
lds
lea
mov
mov
pop
scas
sub
dec
pop
pop
cs
sbb
xchg
lock
sbb
cmp
sbb
mov
cdq
inc
inc
xchg
sub
xor
cmp
push
hlt
mov
cmp
dec
sub
cli
jg
jg
ja
repz
add
js
lods
cmps
mov
mov
mov
xor
xchg
adc
sbb
repnz
fmul
loopne
aas
inc
cmp
cdq
jle
mov
jge
pop
test
call
shl
cmp
sti
std
sbb
fs
xchg
push
in
sti
lds
and
in
out
dec
sbb
mov
mov
adc
sub
cmp
xor
mov
adc
nop
or
(bad)
fmul
popf
fchs
movs
pop
mov
sub
or
mov
(bad)
xor
push
sbb
lods
mov
sub
or
sub
retf
dec
sar
movs
pushf
xor
push
imul
pop
gs
sbb
or
rcr
mov
int
mov
in
adc
mov
repz
adc
in
xor
xor
ror
jecxz
or
arpl
lea
jne
jl
ret
add
daa
adc
inc
sbb
jno
push
aad
pop
inc
inc
pop
inc
cdq
test
popf
daa
jge
mov
ficomp
cwde
out
dec
pop
cmp
imul
push
jp
dec
imul
xor
ror
das
adc
aas
(bad)
cmc
ret
les
pop
add
rol
fist
das
ins
mov
movs
push
repnz
loop
push
add
lock
cmps
cmp
leave
addr16
fcmovnu
in
out
out
xchg
loope
dec
mov
mov
cwde
inc
jae
xor
adc
outs
pop
test
jge
xor
mov
and
adc
pop
inc
mov
adc
xchg
fmulp
in
sub
adc
cmp
sbb
inc
vcvttpd2dq
scas
dec
pop
mov
sbb
and
div
xor
ret
dec
movs
add
mov
xchg
cli
add
xchg
test
stc
repnz
inc
dec
pushf
push
mov
iret
pop
ins
sbb
inc
div
push
div
je
mov
aaa
sub
pop
sbb
dec
inc
test
push
ret
test
dec
imul
sbb
jle
dec
std
sbb
icebp
in
ja
loopne
out
js
stc
lahf
jae
sti
cli
dec
pusha
test
and
push
xchg
(bad)
in
fdiv
jle
std
mov
test
leave
mov
or
call
sub
dec
xor
xchg
arpl
stos
mov
hlt
sbb
inc
jo
mov
sti
pop
jmp
lds
mov
inc
pop
scas
or
mov
fstp
pop
pop
mov
js
scas
ret
cwde
xor
repnz
punpckhbw
cmp
jns
adc
mov
dec
shr
adc
imul
and
inc
xchg
sbb
int
aas
jno
dec
cmp
pop
xchg
dec
xchg
push
cmp
sbb
and
mov
jmp
sub
imul
stc
sub
cmp
push
mov
jge
lock
jnp
jno
lea
inc
cmp
sub
call
mov
sub
es
mov
inc
cmp
ret
xchg
dec
das
fcom
xlat
sub
arpl
add
dec
repnz
(bad)
sbb
adc
xchg
cmc
ja
sub
outs
and
mov
inc
aaa
add
or
adc
sub
adc
mov
sub
sbb
xchg
jbe
xchg
cmp
add
in
mov
outs
dec
jg
jns
jne
mov
push
cwde
push
or
mov
cmp
nop
jns
jecxz
pushf
or
mov
fwait
mov
bound
sub
not
lods
das
cmp
inc
push
xor
fmul
out
ins
cmps
sbb
xchg
std
scas
mov
inc
retf
push
dec
or
les
or
ret
lea
clc
adc
jp
popa
cld
jg
data16
xor
sub
rcl
push
mov
pusha
cwde
add
shl
mov
call
dec
gs
(bad)
xor
aam
adc
pop
ja
mov
push
and
xchg
jne
sub
cmp
sbb
mov
cmp
push
ins
cld
pop
mov
and
sahf
add
enter
cmovns
sar
fistp
ins
je
cmp
mov
xchg
and
push
ss
cmp
test
push
mov
sti
push
sahf
loopne
cli
cmp
jno
cmp
cmp
pusha
adc
cmp
pop
jecxz
mov
bound
popa
mov
addr16
outs
jo
push
pushf
pop
test
xchg
cmp
cmp
mov
push
(bad)
mov
lds
mov
fst
es
mov
ror
mov
inc
jle
inc
ins
and
mov
mov
xor
or
in
out
call
adc
or
fdivr
xor
js
mov
in
lds
lahf
mov
jno
fimul
ins
sub
out
jge
add
add
aas
in
aaa
lods
cmps
ret
stos
imul
jnp
push
jmp
popf
outs
cs
call
aam
jp
(bad)
enter
add
sbb
adc
xchg
and
xor
cli
push
or
jns
hlt
cmps
aam
fiadd
dec
jp
in
std
xchg
sub
les
retf
inc
and
mov
shr
in
push
test
imul
mov
aaa
(bad)
dec
jno
and
cmps
sahf
dec
xor
lods
je
pop
push
les
pop
fidiv
adc
(bad)
jbe
or
cmp
jecxz
mov
lahf
loopne
mov
mov
mov
xchg
mov
cmp
mov
pop
ret
rol
xchg
or
mov
arpl
rcl
push
ins
jae
sbb
ds
jo
les
iret
jns
sar
xchg
scas
cmp
mov
out
mov
out
jp
cli
inc
jecxz
in
add
push
jg
inc
aad
adc
dec
sub
xchg
stc
push
mov
mov
mov
pop
xor
scas
shl
or
ret
ins
mov
outs
or
and
mov
inc
ja
sbb
fsubr
jg
stos
inc
and
dec
push
stos
ins
dec
cmps
cmp
out
and
push
in
jp
jno
int
cmp
push
or
mov
cmp
(bad)
loope
in
add
cmp
leave
push
inc
or
dec
das
jno
inc
scas
cmp
mov
hlt
out
loope
inc
jb
cmp
or
cmps
loopne
(bad)
mov
add
inc
pushf
fisub
inc
cmp
push
popa
push
sub
ins
cli
rcl
retf
inc
cmp
enter
shl
inc
xlat
hlt
(bad)
push
jbe
pop
pushf
cmp
cli
adc
cmps
dec
sub
cmp
loopne
aam
fisubr
sbb
inc
mov
shl
lea
and
les
mov
sbb
dec
add
mov
pop
fwait
pop
into
out
dec
popa
inc
or
cmp
mov
cmp
dec
inc
cmp
mov
jmp
mov
mov
jns
sub
xor
adc
inc
ds
scas
pop
push
jmp
popf
cld
cmp
cmp
movs
loopne
push
enter
dec
test
xchg
add
xchg
adc
mov
push
arpl
imul
sar
jno
inc
mov
imul
outs
inc
push
fist
cld
das
in
pop
jmp
sbb
mov
jns
retf
xchg
jno
imul
inc
je
scas
push
xchg
rcl
inc
hlt
xor
mov
shl
xchg
pop
das
sub
jo
mov
je
stc
icebp
mov
and
jns
or
sbb
xchg
enter
js
push
sbb
clc
sub
mov
enter
ds
cmps
bound
mov
inc
icebp
sbb
mov
mov
lock
loopne
fcomp
rcr
fisttp
mov
inc
inc
add
xor
cmp
aam
jno
aas
sar
(bad)
cld
js
inc
mov
xor
loopne
pop
dec
or
nop
aas
jp
mov
shr
mov
cdq
ds
out
and
push
mov
inc
or
(bad)
aas
js
mov
and
mov
dec
add
jb
cmp
lods
push
push
cwde
ret
jg
aas
retf
pop
xor
add
xchg
mov
mov
xor
mov
sbb
retf
mov
jmp
aaa
cmp
jne
and
sahf
rol
adc
loope
inc
rcr
mov
inc
(bad)
jge
mov
and
dec
pop
retf
inc
nop
mov
fcom
xchg
xchg
cmc
push
mov
mov
inc
js
out
cmp
out
inc
sbb
xlat
adc
inc
pop
push
loope
imul
ffreep
push
cld
(bad)
fcom
sub
inc
rol
and
mov
sbb
cmps
dec
js
jp
dec
adc
or
jns
fsub
jno
add
mov
fild
cmp
pop
add
jg
in
jne
repnz
pop
iret
push
lock
rol
dec
dec
jno
add
sti
movs
(bad)
aas
and
fsub
movs
(bad)
cdq
or
push
or
and
in
js
mov
sar
fsub
add
jb
mov
jle
xchg
pop
scas
daa
leave
cdq
and
data16
mov
ret
out
push
inc
hlt
xchg
in
std
mov
dec
rcl
outs
pop
or
xlat
(bad)
js
aaa
inc
sub
sub
xor
or
(bad)
jns
lods
mov
not
sub
inc
adc
pop
aam
inc
dec
sbb
lds
or
or
(bad)
popa
repz
pushf
pop
ins
cmp
push
dec
mov
sub
jmp
push
popa
mov
cmc
xor
push
dec
dec
cld
cwde
inc
aas
push
sbb
mov
add
sub
xor
dec
mov
and
pop
inc
push
dec
push
dec
push
aas
nop
push
xlat
jmp
sbb
(bad)
icebp
(bad)
cmp
(bad)
sbb
ret
std
sbb
sub
xor
inc
loop
inc
popa
push
retf
pop
inc
xchg
adc
movs
push
and
and
loopne
mov
pusha
sti
je
out
sub
cmp
dec
movs
xchg
xchg
cmp
jmp
jns
std
es
ins
pusha
xor
mov
mov
bound
mov
mov
aad
test
adc
sbb
push
mov
(bad)
ret
stc
inc
cmp
jbe
enter
into
inc
mov
xchg
cmp
fld
and
dec
pop
inc
pop
lea
inc
pop
push
pop
lahf
cmp
(bad)
in
test
mov
into
adc
test
stos
inc
sar
mov
ja
std
or
into
cmp
in
push
cmp
mov
inc
dec
xsha256
cmps
xchg
adc
imul
int3
sub
(bad)
stos
pop
ret
push
in
jg
cmp
push
lahf
or
shl
mov
mov
mov
jl
mov
pop
arpl
sub
cmp
fdiv
cdq
cmovo
add
sar
adc
inc
(bad)
jb
mov
fxch
inc
(bad)
mov
inc
jne
ret
hlt
sbb
leave
repnz
out
retf
out
mov
cwde
cmp
xor
sub
mov
jmp
dec
jno
jmp
mul
inc
hlt
add
imul
out
repnz
not
fdiv
jns
retf
outs
push
fwait
dec
jg
push
cmp
outs
(bad)
fst
pop
sar
scas
dec
inc
mov
add
pop
xor
es
or
stc
inc
sar
fwait
xor
test
popa
xor
xor
and
mov
push
jbe
and
mov
popa
mov
xchg
in
leave
retf
lods
and
loopne
pop
add
dec
jge
nop
dec
and
xor
mov
mov
imul
add
pop
clc
xchg
rol
rcl
inc
or
sub
and
or
loopne
xchg
aas
popf
sbb
adc
mov
icebp
int
in
sbb
or
pusha
jecxz
aas
dec
or
add
cmp
cwde
stos
mov
sbb
adc
add
jo
idiv
(bad)
(bad)
dec
jne
cmp
shl
mov
mov
mov
ss
pusha
hlt
jmp
mov
or
inc
xor
cmp
xor
mov
cmp
scas
pop
inc
add
fcmove
or
adc
bound
stos
leave
mov
sub
cmp
jb
fsubr
dec
adc
lods
cmp
inc
(bad)
into
(bad)
jbe
daa
inc
sbb
push
loop
inc
mov
jb
cld
sub
fcomp
fldcw
jne
int3
inc
jno
cli
popf
pop
popa
cmps
lahf
inc
mov
adc
test
mov
shr
aaa
or
push
in
xchg
lea
xor
xchg
stos
push
adc
int3
shr
sar
mov
xor
out
xchg
push
jnp
js
xor
add
inc
mov
inc
sbb
or
nop
cmp
in
or
sbb
sbb
retf
mov
xor
pop
sti
dec
bound
and
jno
jecxz
cs
or
pop
jge
test
pop
inc
dec
push
mov
lea
lds
mov
ret
cld
mov
dec
xchg
scas
and
push
cmps
and
fs
adc
sbb
test
ds
ror
int3
fmul
(bad)
les
(bad)
aam
mov
sbb
inc
js
popa
stc
shr
scas
mov
mov
jge
aam
cwde
pop
push
ret
mov
sub
fldcw
les
arpl
(bad)
in
pushf
fwait
inc
inc
xchg
mov
(bad)
mov
fcomp
jmp
mov
ret
and
mov
loop
dec
(bad)
call
dec
cmp
scas
inc
ins
pusha
rcl
pop
lds
aad
je
stc
cmp
sub
sub
mov
jnp
xor
mov
xchg
cmps
cmp
inc
shr
call
out
inc
les
loopne
push
xchg
sub
xor
xor
or
adc
add
aad
inc
neg
inc
xchg
cwde
lds
or
popf
mov
dec
aas
push
dec
inc
cmp
ficomp
arpl
push
jb
or
inc
and
xor
call
cmp
adc
push
mov
ins
xor
out
fdivrp
enter
mov
add
cmp
leave
aad
add
cmp
fld
(bad)
jb
popf
or
data16
mul
fcom
jo
lahf
or
stc
lea
dec
pop
test
call
mov
pop
ds
inc
push
xchg
dec
sbb
mov
cmc
mov
dec
rcl
test
ds
gs
cli
ret
pop
int
ret
jns
mov
loopne
fisub
daa
jp
rol
sub
cmp
jmp
xchg
mov
mov
(bad)
iret
xor
lea
adc
and
(bad)
out
jno
and
cld
(bad)
into
xchg
imul
and
xchg
inc
retf
mov
mov
mov
jg
dec
cmp
cmp
pusha
stos
pushw
pusha
jae
fs
sbb
mov
xchg
out
mov
or
inc
icebp
ret
inc
mov
mov
cmp
xlat
js
addr16
stc
jge
sub
xor
test
dec
call
repz
mov
jp
adc
call
pop
adc
jb
lahf
gs
jge
sbb
rcl
xchg
pop
inc
test
ror
adc
dec
(bad)
fdiv
dec
mov
pop
lea
jge
jg
bound
je
pop
xchg
imul
jmp
je
mov
dec
je
xor
xlat
in
cmp
jg
mov
retf
ss
cmps
xchg
iret
sti
int3
iret
lahf
xlat
bound
aam
int
and
jns
dec
out
or
cdq
call
cmp
push
fdivr
aad
xchg
mov
fwait
adc
cmp
outs
mov
sub
pop
jo
pop
dec
mov
push
inc
or
jmp
sbb
add
add
fld
test
dec
outs
push
inc
xchg
or
inc
(bad)
in
scas
adc
push
pop
inc
das
dec
push
call
xor
and
sub
les
or
pop
aad
aam
mov
inc
sbb
lds
call
and
ss
dec
mov
lods
je
es
into
test
outs
inc
jl
inc
mov
dec
bound
stc
cmp
das
js
jno
cmps
inc
loope
xchg
jb
inc
arpl
and
sti
pop
mov
add
dec
jp
fs
leave
cmp
xchg
movs
mov
cmp
mov
inc
es
retf
xlat
lea
sub
lods
cmp
mov
(bad)
loopne
inc
xchg
xchg
dec
ins
pop
(bad)
pop
adc
cli
xchg
js
and
push
lahf
es
jne
test
or
push
pusha
repz
clc
inc
popa
pop
jnp
pop
dec
pop
out
inc
pusha
int
dec
dec
dec
mov
jg
enter
ss
sbb
mov
icebp
retf
shl
fsub
or
inc
rol
fldenv
fiadd
xchg
into
fild
out
arpl
fucomp
xor
xchg
in
xlat
mov
jle
rol
push
and
out
sub
adc
rcr
adc
inc
jns
pop
and
rcr
lock
xor
aad
inc
scas
xchg
sub
adc
mov
mov
and
cmc
jle
push
xchg
fld
xchg
ds
jecxz
inc
arpl
pushf
pop
test
sbb
dec
pop
cmp
inc
movs
cmp
iret
repz
jae
cmps
mov
cmp
cld
lock
dec
sub
dec
cmp
test
cmp
or
stos
inc
push
jmp
jne
pop
xchg
push
outs
xchg
retf
xor
popa
inc
xor
add
mov
ret
je
bound
in
sti
mov
dec
inc
imul
jle
paddb
push
ds
adc
call
jb
xlat
inc
shl
in
cmp
repnz
dec
cld
ret
maskmovq
out
push
out
and
and
inc
loope
cmp
out
push
mov
add
fnstsw
sti
lock
inc
jne
adc
adc
push
sub
lods
cmc
mov
cs
call
xor
fcom
xchg
shl
sbb
cmp
xor
cmp
push
retf
or
les
int
adc
inc
scas
sub
mov
out
mov
mov
stc
sti
(bad)
cli
xorps
std
std
retf
inc
mov
push
test
retf
pop
aas
add
cmps
xchg
and
pop
movs
inc
ret
icebp
(bad)
sbb
leave
pop
xchg
inc
nop
mov
int
das
retf
stc
mov
(bad)
fdivr
inc
pop
rcl
xchg
popa
push
int
pop
(bad)
mov
mov
push
fist
aam
push
mov
ret
xor
add
clc
add
(bad)
sbb
push
pop
sub
aad
push
jns
add
outs
push
xchg
cmp
jns
xorps
add
sub
movs
daa
les
or
scas
or
dec
xchg
aas
cmp
ret
shl
aad
rcl
rol
pop
add
adc
push
shl
out
inc
aam
rol
xor
out
lock
sub
adc
cmp
movs
dec
inc
mov
cdq
stos
dec
out
nop
inc
addr16
cmps
(bad)
fmul
adc
cli
int3
cld
push
fucomip
jno
aas
and
cmp
sub
not
xlat
cmp
xchg
xchg
push
sbb
mov
sbb
sbb
lahf
popa
xor
out
mov
inc
inc
mov
xchg
push
inc
addr16
into
pop
(bad)
enter
cmp
in
hlt
popa
ja
cwde
aaa
cmp
jmp
inc
cmp
cmp
ins
cmp
inc
(bad)
or
push
dec
pusha
inc
or
dec
push
(bad)
ds
(bad)
mov
pop
out
fwait
cmp
jg
sti
dec
sub
shl
mov
lds
jns
pop
js
add
into
inc
inc
or
fistp
push
sub
bound
pop
loop
rcl
push
push
adc
int
div
hlt
cmp
mov
lock
jne
xor
inc
xor
test
sub
inc
cmp
push
jnp
ins
dec
adc
call
sbb
sub
pop
mov
popa
xchg
(bad)
jmp
xchg
sub
in
inc
sub
mov
xor
sub
cli
in
cmp
and
inc
ja
push
xor
mov
cli
xchg
inc
vaddss
push
movs
(bad)
push
sub
mov
int
imul
mov
addr16
pop
movs
jne
mov
js
push
nop
push
pusha
xor
adc
dec
std
fucomi
jns
popa
xor
rol
dec
cmp
inc
outs
jno
mov
cmp
or
mov
call
iret
cmp
out
xlat
sbb
cmp
dec
imul
in
inc
cld
lahf
dec
dec
xchg
lds
sub
xor
mov
outs
push
mov
push
lods
mov
inc
mov
xchg
xor
imul
leave
mov
jo
pop
call
jg
jno
mul
cmp
test
mov
enter
mov
aas
jne
(bad)
jmp
sub
or
mov
jmp
cmp
push
inc
aad
sahf
and
inc
repz
pop
(bad)
mov
jns
sbb
loopne
xor
jmp
mov
stc
aam
cmp
out
push
mov
cmp
add
nop
cmps
clc
retf
cmp
imul
bound
lar
mov
lea
fist
ret
pop
mov
(bad)
cmp
pop
inc
imul
in
loopne
mov
xor
shr
shr
pop
cli
sbb
and
sbb
ja
sahf
lods
sbb
cmp
ss
sub
cmp
cmp
jnp
movs
mov
stc
clc
inc
jbe
dec
cmp
jmp
pop
enter
lock
adc
sbb
xor
in
(bad)
ret
daa
or
sbb
push
jecxz
fs
scas
imul
pop
call
bound
jge
adc
(bad)
mov
inc
fisttp
jnp
or
fidiv
ss
mov
xchg
cmp
imul
inc
outs
push
into
pop
ret
pop
int3
pop
jmp
ret
cmp
jmp
mov
jp
nop
js
xor
cmp
cmp
lock
test
aad
add
and
inc
jge
out
adc
xchg
push
ss
fs
mov
jl
out
shr
xor
dec
pop
call
dec
clc
xor
call
push
movaps
neg
xor
mov
cmp
mov
and
stc
cmp
daa
jge
push
push
adc
or
pop
add
cmp
add
pop
(bad)
adc
mov
mul
xchg
fdiv
aad
js
cmps
aas
pop
call
jmp
pop
fcmovu
rol
mov
aad
test
jp
adc
add
xchg
inc
pusha
lods
int3
mov
cmp
push
mov
mov
and
push
(bad)
cwde
fsub
cmp
in
jle
fnstcw
xor
in
daa
inc
and
je
adc
pop
imul
cmp
or
std
neg
add
or
push
mov
jne
sahf
pop
push
or
dec
dec
adc
dec
arpl
imul
pop
inc
repnz
sub
inc
mov
js
push
imul
lahf
mov
inc
jae
arpl
add
sbb
mov
inc
xchg
xchg
test
jbe
fld
mov
dec
dec
mov
inc
xchg
mov
jae
xor
lahf
xor
cli
ins
sub
mov
jbe
adc
stos
dec
cmp
out
and
mov
in
cmp
inc
and
sar
pushf
cmp
call
add
ret
sbb
nop
adc
xchg
fldenv
cmp
xchg
xor
push
pop
or
daa
mov
ret
sub
test
mov
push
mov
sbb
push
mov
xor
pop
data16
mul
xor
stos
es
imul
push
jne
pop
xor
test
ds
jl
pop
int3
sub
es
xchg
test
or
push
inc
hlt
jb
cmp
push
inc
sub
sub
scas
(bad)
xlat
(bad)
into
add
je
dec
push
hlt
mov
ret
add
fs
mov
xor
sub
cmp
xchg
xor
lahf
inc
enter
gs
mov
dec
(bad)
cmp
into
inc
out
and
add
cmp
cmp
sbb
inc
call
lock
mov
std
(bad)
rcr
or
inc
inc
leave
and
push
or
in
xchg
xchg
inc
lods
sub
je
dec
inc
add
cmc
int
sti
mov
xchg
xor
in
popa
leave
aas
and
inc
cmp
cli
int
stc
iret
push
fcomp
call
cmp
or
and
jae
inc
xor
dec
sbb
mov
mov
push
call
pop
mov
cmp
imul
jmp
mov
or
movs
test
mov
inc
adc
shl
inc
push
add
pop
push
pop
jp
lods
cmp
xlat
shr
xor
cli
or
cld
xor
add
jns
push
bnd
xor
fidivr
pushf
ds
fwait
stos
inc
retf
std
cmps
pushw
or
shl
ss
mov
cmp
inc
jp
js
cmc
or
xchg
or
test
adc
inc
cmp
add
mov
push
stc
jmp
ins
stos
stc
int3
loopne
pusha
cld
cmp
cmp
inc
fistp
or
xchg
movs
popf
shl
fiadd
repz
cmps
cdq
mov
(bad)
mov
mov
sbb
sub
inc
push
rcr
inc
aas
fisttp
dec
pop
es
mov
ds
add
popf
inc
sbb
addr16
pusha
push
leave
jno
pushf
call
lea
jl
iret
fadd
inc
hlt
mov
adc
mov
outs
aad
test
stos
scas
comiss
mov
(bad)
sbb
call
js
lock
jl
jae
mov
push
mov
in
(bad)
out
je
sub
outs
sub
inc
pusha
push
(bad)
out
outs
dec
xor
cmp
lods
and
jp
adc
push
adc
dec
cmp
jns
jnp
jp
jmp
cld
inc
(bad)
mov
add
add
inc
pop
dec
pushf
jns
add
cmp
adc
pop
hlt
mov
mov
pop
lds
or
fadd
inc
or
jle
sub
imul
dec
push
int3
stc
mov
sub
call
xchg
mov
idiv
in
icebp
out
cmc
addr16
aas
mov
mov
mov
cld
inc
cmp
adc
in
push
sar
imul
leave
add
test
inc
in
das
adc
inc
sub
push
sbb
and
dec
(bad)
cmp
enter
mov
xor
pop
dec
(bad)
cmp
dec
sbb
popf
adc
lods
imul
cmp
scas
mov
add
pop
sbb
pop
push
test
sub
inc
lds
(bad)
cmp
mov
retf
ins
mov
inc
jle
sub
mov
arpl
mov
pop
fild
push
les
aas
movs
cmp
(bad)
enter
xor
retf
cmp
and
std
sub
xchg
retf
cmp
neg
and
xchg
push
mov
enter
mov
pop
stos
lea
bound
sub
pop
jns
das
adc
sti
dec
pop
dec
les
inc
jnp
ror
fs
fldcw
rol
mov
aam
add
fucomp
test
inc
and
jo
inc
or
pushf
xchg
xchg
or
cdq
test
and
loope
inc
cmp
adc
xchg
jbe
pop
inc
pop
dec
fwait
nop
mov
outs
pop
sbb
push
cmp
push
cmp
pusha
push
sti
sub
or
test
adc
dec
push
add
and
mov
sbb
mov
mov
inc
ds
push
push
mov
push
inc
and
movs
out
test
adc
inc
jnp
scas
dec
add
stos
mov
mov
or
or
(bad)
adc
(bad)
out
jecxz
dec
xor
cmp
repz
pop
call
fild
inc
push
and
push
cmp
fmul
pop
fwait
cwd
add
sub
sti
leave
xlat
jns
inc
or
xor
repnz
push
cli
daa
fcomp
sub
ds
cmp
movs
aaa
or
mov
jle
lods
cli
sub
(bad)
cmp
cwde
or
xchg
mov
inc
mov
mov
xchg
ins
(bad)
leave
pop
inc
mov
pop
test
inc
sahf
pop
jae
xchg
lahf
pop
fxch
inc
mov
unpcklps
lods
dec
inc
je
or
dec
lahf
pop
mov
inc
gs
arpl
test
inc
stos
xchg
jns
cmps
inc
popf
or
out
push
lods
enter
adc
cs
push
mov
aam
pop
mov
nop
cmp
into
sub
xchg
and
movs
inc
mov
shl
test
xor
push
fistp
xlat
ret
mov
popa
mov
jecxz
cmp
lahf
sub
nop
and
imul
lods
add
stos
sub
cmp
les
mov
jno
xor
and
in
stos
rol
ror
(bad)
push
dec
idiv
inc
mov
adc
xor
inc
cs
cli
call
test
ja
mov
jns
std
pop
mov
mov
nop
and
pop
jns
fcomip
inc
ds
pop
aam
mov
sub
xor
imul
xchg
icebp
and
push
(bad)
loopne
fld
or
jno
rcr
xchg
leave
out
into
jg
mov
adc
inc
mov
jp
lods
popa
(bad)
icebp
test
icebp
ja
fsubr
(bad)
pop
jl
std
xor
jge
mov
cmp
jns
or
jl
adc
xchg
xchg
(bad)
mov
mov
xor
pusha
jmp
cmp
outs
cmp
dec
push
xor
sub
push
ret
jmp
into
adc
xor
xor
jns
cmp
aas
imul
fiadd
sub
or
xlat
stos
mov
pop
sbb
jno
cmp
fcomp
xchg
retf
sbb
mov
sub
or
loop
pusha
mov
in
das
fmul
jl
lods
mov
inc
mov
aaa
jno
cmp
into
push
popfw
cdq
fstp
mov
jns
and
inc
in
leave
movs
scas
mov
inc
mov
xchg
fs
add
mov
icebp
jmp
jns
push
xor
fs
mov
adc
dec
push
fimul
inc
fs
addr16
loop
sbb
cmc
mov
mov
scas
mov
shl
mov
jbe
dec
pushf
int
div
sub
xchg
js
add
out
push
pop
add
sahf
cmps
adc
xor
push
adc
inc
repz
cmp
out
jmp
mov
mov
pop
pushf
rol
repnz
into
xor
retf
adc
out
iret
dec
cmp
ins
xor
cmp
(bad)
icebp
mov
sbb
mov
sub
les
adc
adc
test
push
push
sub
or
cmc
iret
outs
push
pop
mov
ins
aaa
push
push
ror
mov
aas
push
repnz
cmp
dec
dec
cmc
mov
inc
js
pop
les
sub
pop
into
pop
int
(bad)
pop
sbb
cmps
cmp
and
xchg
push
pop
sub
xchg
aaa
in
add
pop
or
jmp
adc
scas
jno
js
mov
and
sbb
push
bound
pusha
in
add
rcl
cli
in
outs
gs
cli
rol
adc
mov
pop
jns
retf
push
sub
cmp
xor
pop
jp
std
mov
xor
rcl
popa
and
cmp
jb
xchg
sbb
xor
je
lods
cmp
cmp
clc
pop
and
mov
dec
inc
frstor
add
cmp
push
mov
inc
fisub
dec
aam
cmp
or
fisubr
popa
jbe
movs
sub
sbb
jno
mov
(bad)
stos
push
mov
ins
ds
mov
movs
out
imul
cmp
sbb
dec
mov
enter
xor
push
fbstp
int
xor
int
jb
test
add
jl
adc
(bad)
stc
and
aas
add
mov
push
sti
movnti
mov
mov
or
mov
pop
pop
mov
lods
cmp
cmp
and
fidiv
in
cmp
dec
int
cmp
ror
cli
bound
rcr
enter
ss
mov
adc
cmp
je
jmp
push
dec
(bad)
xor
mul
std
inc
call
call
mov
sub
xchg
mov
repnz
mov
jmp
mov
dec
jp
jno
inc
ret
mov
cmp
sbb
aad
jecxz
fs
pusha
jp
es
cdq
jmp
inc
mov
iret
gs
pop
push
shr
inc
inc
mov
in
or
pop
inc
inc
out
loopne
push
push
pusha
and
cmps
in
fs
push
xchg
inc
psubsw
sub
adc
mov
adc
inc
jl
or
call
jmp
fmul
add
shr
cmp
lods
jg
add
dec
inc
iret
and
mov
push
and
retf
loop
inc
js
sub
mov
imul
stos
push
jo
dec
in
xlat
data16
aam
xchg
jae
aad
rcl
sub
icebp
and
mov
sub
push
adc
jp
jle
sub
movs
cmp
inc
inc
loop
adc
inc
dec
push
sbb
mov
sbb
outs
mov
inc
mov
int
cdq
jbe
fs
sbb
retf
jae
pop
mov
test
aas
inc
fadd
(bad)
sub
pop
ja
xchg
adc
pop
inc
pop
pop
std
adc
fsub
jae
scas
inc
shl
iret
pop
enter
push
ret
xor
push
adc
scas
mov
repz
(bad)
mov
pop
shl
out
das
dec
dec
add
nop
fld
pop
stos
(bad)
ins
and
stos
fwait
popa
cli
ret
sbb
scas
sbb
dec
ins
mov
jno
push
idiv
pop
sub
adc
xchg
push
movs
loop
aad
outs
xchg
inc
loope
inc
cmp
pop
fdivr
test
mov
aaa
adc
aaa
aad
cmp
jo
push
in
mov
fs
push
stos
push
and
rol
xor
lods
clc
pop
mov
jge
xchg
pusha
pop
dec
movs
ds
add
mov
cmp
jbe
push
pop
scas
pusha
movs
inc
dec
sar
scas
or
cmp
into
push
adc
mov
sub
dec
sbb
pop
adc
mov
xchg
int3
shr
gs
push
je
dec
mov
cmp
pushf
sti
dec
and
pop
dec
or
fs
sub
clc
cmp
fs
xor
mov
lea
pop
fwait
add
jno
daa
jo
(bad)
adc
movs
mov
mov
xor
pop
jno
les
pushf
xchg
clc
fs
(bad)
pop
js
repnz
sahf
inc
pop
enter
sub
into
mov
into
lock
jb
xchg
mov
cmp
xor
sahf
aam
mov
and
icebp
pop
repz
sub
mov
push
xor
xchg
push
cld
add
lods
cmp
fst
ds
cmp
jge
ret
mov
(bad)
cmp
es
lock
pop
jp
xchg
jno
jp
dec
cmp
xor
into
retf
push
movs
jecxz
or
mov
out
or
xchg
cmp
or
or
pop
and
jl
jl
js
jno
mov
xlat
cmp
mov
cmc
adc
sub
pop
and
adc
add
xchg
or
mov
cld
fwait
mov
fsub
xchg
mov
inc
inc
jmp
pop
inc
xchg
fidiv
and
sub
xlat
cmp
ja
scas
add
cmp
jge
fwait
sub
rcl
inc
fnsave
daa
cmp
xlat
jg
inc
mov
ja
sbb
test
idiv
xchg
or
add
fucompp
shr
pop
and
mov
pop
mov
mov
and
cli
out
push
jge
test
sbb
jae
jno
cli
dec
mov
es
fwait
or
inc
lea
mov
pusha
pop
push
popa
mov
mov
pop
jne
mov
dec
(bad)
and
ror
dec
bound
fst
cs
push
daa
dec
(bad)
scas
imul
sub
cmp
sahf
sub
mov
dec
cld
push
int
push
xlat
mov
xor
push
push
ins
repz
outs
cmp
imul
xchg
adc
out
hlt
ror
mul
repz
stc
loop
jne
loopne
test
pusha
fcom
push
inc
cli
lods
shl
les
je
mov
jns
xor
adc
int3
cmp
ds
mov
inc
ror
xor
push
mov
adc
pushf
test
fild
pusha
mov
ret
cmp
sbb
or
mov
xor
int
outs
sub
pop
jo
and
pop
test
mov
inc
loope
and
and
add
call
mov
sub
or
loope
or
or
cmp
adc
fcom
pop
adc
adc
stc
jle
jb
nop
fist
add
(bad)
cwde
in
mov
sar
or
stc
into
jg
dec
cmp
div
jecxz
fwait
je
mov
sub
(bad)
mov
adc
xor
xchg
xchg
cwde
sub
icebp
(bad)
cld
cmp
inc
pop
lods
pop
pop
dec
pop
pop
pop
(bad)
mov
out
dec
sbb
mov
stos
movs
(bad)
retf
mov
inc
sti
out
jns
movs
sub
fiadd
sub
outs
pop
inc
fwait
test
pop
dec
iret
call
inc
cmps
mov
mov
call
jge
mov
test
fdivr
shr
cmp
xchg
mov
and
inc
cmp
dec
pop
push
sbb
shl
push
pop
dec
cmp
adc
cmp
add
add
setp
xchg
sbb
ins
sub
cmp
sub
cmp
cmp
fmul
and
push
idiv
stos
mov
xchg
retf
sar
enter
rcr
popa
mov
mov
pop
addr16
add
(bad)
jmp
xor
das
imul
or
or
adc
xchg
fldcw
inc
and
stos
inc
test
push
jbe
dec
or
imul
cmp
repz
fnsave
inc
imul
scas
mov
in
jg
sub
mov
call
imul
jmp
and
xchg
add
out
jecxz
fwait
dec
mov
inc
sub
adc
outs
cmp
jecxz
push
mov
inc
test
pop
pop
xchg
in
mov
mov
inc
add
int
dec
inc
jae
cmp
stos
das
adc
(bad)
fsubr
fst
ja
sbb
mov
mov
sti
(bad)
pop
and
mov
cmp
mov
cmp
fisttp
enter
sbb
cmp
push
adc
pushf
jo
jmp
ins
cmp
std
(bad)
pop
cdq
clc
mov
(bad)
shl
out
cmp
in
test
pop
rol
rcr
inc
and
sar
mov
mov
sub
pop
jg
test
and
cld
mov
or
jl
icebp
ss
fisub
add
xor
sub
(bad)
mov
enter
lea
ret
(bad)
and
scas
in
jg
fmul
(bad)
fiadd
mov
adc
daa
test
push
push
adc
fnstsw
out
leave
clc
(bad)
mov
inc
xchg
dec
push
enter
(bad)
dec
pop
rcl
lds
xchg
out
call
aaa
xor
mov
mov
inc
icebp
ja
or
pop
stos
shl
pop
hlt
cmp
jns
dec
cmp
out
sbb
aas
gs
pushw
popa
scas
pop
ret
mov
jns
arpl
fnstcw
ja
fsub
mov
mov
ficomp
ret
cmp
and
xor
add
sub
loope
cmp
xor
sbb
xchg
dec
pop
fwait
rol
or
test
cmp
xchg
xchg
inc
mov
mov
xchg
data16
pushf
mov
in
sub
xor
pop
mov
fcom
(bad)
push
cmp
stc
mov
mov
repnz
shl
jmp
adc
or
mov
xchg
aas
push
mov
push
std
cmp
sub
fnstcw
jno
push
inc
icebp
push
fisubr
pusha
or
in
pop
dec
inc
dec
clc
inc
hlt
pop
lods
rol
fcomp
int3
pop
inc
jle
cbw
lahf
cmp
inc
movs
scas
ret
adc
int3
stos
or
inc
test
lods
call
pop
gs
xchg
scas
inc
jmp
jl
aaa
pop
push
sbb
shl
icebp
jbe
lea
xchg
es
inc
retf
mov
ss
inc
int3
cld
jnp
cmp
push
test
add
jne
ret
add
and
(bad)
leave
jg
pop
inc
hlt
xor
test
call
jbe
inc
iret
icebp
shl
inc
not
(bad)
aad
sbb
inc
imul
shr
fadd
sbb
dec
ins
inc
iret
cwde
stc
xor
xor
mov
and
in
cmp
jp
dec
fcmovne
stos
add
rol
cmc
cmps
push
fild
cmp
cmp
push
mov
add
out
mov
pop
push
inc
cmp
and
jbe
jecxz
jbe
inc
and
ds
add
mov
dec
repz
xchg
pusha
sub
inc
fsub
xchg
inc
push
jmp
and
sub
std
cmp
pop
repnz
push
stos
gs
jmp
sbb
and
or
add
cmc
inc
icebp
cs
pop
stos
dec
jb
js
arpl
inc
inc
call
push
inc
clc
pop
mov
sub
push
cmp
mov
inc
aas
add
mov
(bad)
rol
inc
test
pop
(bad)
dec
inc
fadd
popa
fs
and
and
dec
(bad)
ja
ds
pop
retf
push
daa
push
popa
inc
mov
adc
cld
gs
imul
fistp
rol
pop
rol
xchg
adc
es
enter
(bad)
fnstcw
pop
xor
inc
dec
aaa
outs
xchg
cmp
movs
and
pop
jne
ins
xchg
jbe
pop
retf
push
dec
inc
mov
pop
xchg
imul
sti
and
mov
jmp
es
jne
and
or
sub
xor
pop
or
dec
stc
jno
cmps
sub
gs
adc
dec
mov
cmps
dec
cmp
push
push
cmp
pushf
and
inc
xor
dec
add
(bad)
clc
cmp
cmp
in
out
test
mov
out
(bad)
cmp
das
xchg
xchg
mov
jl
xor
jge
pusha
cmp
mov
xchg
jle
cmps
cmc
mov
out
xor
sbb
test
cmp
mov
sub
pop
or
or
add
pop
in
mov
bound
shl
lahf
stos
mov
fbstp
fs
cli
rcl
dec
inc
mov
dec
inc
(bad)
aam
jge
out
std
rol
scas
das
fst
stos
inc
inc
fs
jae
mov
aaa
cmp
daa
mov
rcr
inc
xor
cmp
adc
jb
add
jg
mov
outs
jl
(bad)
fcom
pop
push
and
mov
in
cmp
push
gs
and
rol
mov
dec
nop
push
pop
out
cs
ret
inc
ins
repnz
and
inc
div
fild
jno
jne
fwait
mov
rcl
push
pop
sbb
ds
pop
cdq
add
dec
and
lods
inc
shr
outs
mov
stc
iret
inc
arpl
aas
adc
out
mov
lock
inc
imul
and
inc
aad
pop
test
ss
bound
stc
mov
outs
daa
mov
jbe
sub
scas
cdq
or
and
dec
inc
das
sub
push
inc
in
sub
and
push
scas
lahf
mov
sbb
aas
aad
or
ds
push
imul
(bad)
dec
mov
push
retf
push
and
retf
(bad)
dec
jp
mov
lock
cld
push
mov
daa
sar
xor
in
jno
mov
ins
mov
mov
xchg
mov
cs
daa
fnstsw
je
cwde
aas
in
inc
shl
xor
dec
test
mov
pop
cmp
imul
(bad)
iret
inc
stos
xchg
cmps
mov
test
out
cmp
pop
add
shl
xchg
mov
lods
ret
inc
xchg
outs
aas
sub
sub
pop
mov
xchg
and
je
jnp
test
xchg
jnp
inc
adc
jle
pop
dec
mov
popa
add
call
fwait
dec
push
aam
mov
mov
and
dec
sub
js
jmp
mov
sub
bound
ss
push
in
inc
movs
xchg
cmps
inc
jnp
ror
add
fsubp
push
(bad)
mov
inc
sbb
test
out
ftst
inc
stos
xchg
add
inc
mov
faddp
add
iret
fadd
scas
adc
inc
or
cmp
add
cwde
xchg
retf
jg
cdq
stos
cmp
imul
mov
jno
push
jl
add
add
push
out
dec
pushf
cmp
add
ds
inc
popf
cmp
sbb
pushf
lods
out
inc
mov
cmp
bound
ror
enter
inc
jne
mov
inc
and
mov
inc
xchg
jne
call
mov
cmp
push
or
cdq
dec
pop
sbb
shl
push
push
or
mov
mov
inc
cmp
or
pop
and
out
xchg
xor
(bad)
loope
cmp
(bad)
fwait
inc
into
scas
inc
popa
(bad)
out
mov
inc
jbe
movs
call
adc
mov
mov
adc
scas
mov
fucom
cwde
dec
mov
inc
jl
xor
int
or
test
jnp
fstp
xor
cmps
idiv
test
cdq
jnp
sahf
je
or
cs
mov
ret
loopne
mov
xor
test
out
popa
repnz
adc
fs
fld
aam
add
inc
cmp
push
mov
outs
mov
push
and
sub
leave
and
fdiv
sbb
out
jnp
sbb
lds
stos
or
mov
retf
push
push
jo
cmp
add
cdq
xor
pop
ins
and
ss
sub
xor
lods
sub
push
mov
jge
sbb
cmp
sbb
mov
aam
pop
push
mov
or
out
jno
fs
and
ds
mov
and
xchg
xchg
sbb
jl
pop
cmp
jmp
das
dec
popf
mov
dec
popa
mov
mov
jae
mov
fild
ins
imul
or
and
or
imul
jno
dec
ror
jb
fidivr
sbb
pop
add
xchg
ficom
clc
in
xor
xchg
jge
xchg
pop
or
or
xchg
stos
jg
push
xchg
cld
test
push
push
xlat
cmp
sar
ins
jno
inc
xor
jge
or
hlt
xchg
setbe
or
jge
mov
cwde
rcl
ja
jecxz
xchg
sbb
xchg
sbb
push
ror
pushf
sti
(bad)
nop
jns
sti
dec
int
xor
call
cwde
rol
or
daa
adc
les
sbb
adc
arpl
jmp
je
cmp
dec
cs
stos
pusha
add
es
push
lea
mov
dec
inc
ret
add
iret
mov
inc
int
mov
fdivr
cmp
mov
mov
or
mov
cli
test
xor
pushf
dec
mov
loope
loopne
jge
repnz
push
inc
not
enter
cmp
in
data16
xor
imul
mov
inc
mov
mov
je
test
sub
scas
fdivr
jg
jp
sub
xchg
mov
adc
cld
fstp
fdivr
fwait
push
lods
(bad)
ds
scas
xchg
mov
pop
pop
test
ss
cmp
call
add
mov
cmp
hlt
cmp
pop
movs
jle
(bad)
jge
dec
push
repnz
dec
fisubr
or
mov
fidiv
fs
cs
pusha
icebp
cld
aam
sahf
movs
or
out
mov
xchg
aam
inc
cli
leave
pop
je
adc
cmp
sub
arpl
add
outs
dec
or
jns
inc
pop
dec
mov
and
loopne
fdivr
push
mov
add
movs
adc
fdiv
xchg
popa
push
sub
std
(bad)
xlat
mov
rcr
xlat
xchg
fisubr
fs
cmp
dec
cmp
arpl
add
or
add
daa
stos
repnz
call
jb
test
lods
jb
push
mov
adc
mov
mov
push
pop
and
jno
inc
jno
adc
cmp
add
cmc
xchg
xchg
neg
xor
fsubr
mov
pop
dec
sbb
sbb
ja
inc
arpl
jne
jbe
jle
fldcw
lahf
or
clc
fdivr
lods
(bad)
ds
and
inc
vpsrlq
sub
cli
cmp
pop
ds
int3
xor
mov
push
fistp
push
mov
movs
sbb
outs
inc
mov
inc
iret
pop
(bad)
and
or
xacquire
out
int3
lods
test
imul
cwde
push
xchg
push
sub
mov
mov
add
and
cmps
cmp
fcmovnbe
sub
xchg
pop
mov
add
sti
in
out
imul
std
out
inc
cmp
adc
xchg
jns
mov
dec
and
jg
jecxz
mov
test
mov
ja
out
loop
es
push
aaa
xor
pop
sti
pop
jmp
xchg
jp
inc
fstp
mov
std
ins
sti
add
fwait
jo
mov
stos
rol
shl
inc
mov
(bad)
cmp
les
mov
inc
xlat
jae
rcr
pop
push
jecxz
xchg
ja
ins
cwde
(bad)
sub
inc
adc
jno
inc
bound
scas
mov
sub
aaa
xchg
scas
add
xor
enter
inc
jmp
push
push
mov
cmp
adc
scas
mov
mov
fcmovnbe
xchg
inc
jmp
dec
lock
push
cld
jns
fild
data16
mov
(bad)
cmp
xchg
add
mov
fcom
in
push
ds
sbb
inc
in
push
add
inc
(bad)
xor
cmp
popf
or
sbb
ret
cmp
jp
es
inc
pop
xor
test
inc
clc
inc
dec
jne
neg
loope
push
sub
cmp
cmp
xchg
(bad)
inc
iret
es
fimul
aad
sbb
pop
mov
ret
and
retf
push
jg
retf
fnsave
gs
xchg
sub
adc
add
or
dec
mov
ds
loope
cmp
xchg
jne
gs
std
loopne
sti
pop
cmp
movs
fnstenv
mov
inc
repnz
sbb
pop
inc
scas
cmp
add
mov
xchg
inc
push
js
jns
popa
mov
out
inc
ss
lods
cmp
push
push
leave
cld
and
xor
stc
icebp
jl
cmp
push
mov
push
mov
fs
mov
add
scas
jnp
push
outs
xchg
pop
dec
lods
mov
sahf
and
jno
aaa
shr
dec
lahf
les
fstp
fimul
sub
ret
ffree
stos
mov
mov
xchg
mov
mov
pop
sbb
mov
pop
add
adc
mov
and
pushf
retf
mov
mov
cmp
aas
xor
xor
jp
gs
ret
loop
pop
ret
mov
adc
jmp
aas
fdivr
xor
(bad)
fidiv
iret
sti
pop
mov
scas
mov
pop
jmp
mov
push
movs
aas
cmp
fidiv
sahf
leave
sub
sub
loopne
add
lea
idiv
mov
inc
movs
shl
add
jbe
out
and
inc
sub
ret
sbb
fdivr
jmp
ror
dec
or
shl
adc
sub
mov
mov
fcmovne
leave
jl
mov
js
mov
adc
outs
fsub
sub
adc
inc
mov
add
in
bound
jae
aam
ret
dec
je
dec
les
jge
and
or
mov
push
retf
xchg
sahf
imul
dec
inc
or
mov
pusha
pop
fisttp
mov
imul
jge
(bad)
add
rol
and
mov
jmp
fistp
shl
sbb
inc
movs
and
pop
xchg
fdiv
xor
jb
scas
arpl
(bad)
mov
adc
inc
int3
inc
dec
js
cmp
jg
mov
pop
mov
push
inc
div
push
not
xor
sti
inc
in
cs
cmp
test
adc
in
jge
jns
pop
and
push
pop
dec
lods
inc
jmp
or
sbb
pop
inc
mov
or
cmps
jbe
dec
inc
or
sbb
cmp
jnp
and
sbb
lds
inc
mov
gs
mov
data16
pop
push
aas
add
mov
outs
sub
push
add
and
dec
mov
or
out
shl
shr
cmp
jge
adc
ja
cmp
shl
(bad)
jle
mov
js
popa
gs
push
int3
mov
push
xchg
jnp
xchg
shl
pop
ficom
push
test
stc
leave
inc
scas
mov
lods
sub
cmp
xchg
leave
push
inc
ins
jle
push
js
mov
inc
cs
jp
cli
push
lahf
sub
adc
aam
shl
inc
inc
sbb
mov
or
xor
adc
cmp
pop
mov
jno
adc
dec
(bad)
pushf
xchg
imul
enter
push
add
scas
lds
and
stos
inc
add
or
je
inc
lock
cld
lods
mov
and
jecxz
dec
push
inc
stos
jmp
rol
fld
stos
xchg
fidivr
mov
mov
adc
push
test
mov
mov
or
adc
mov
inc
(bad)
mov
xchg
dec
sub
push
in
xchg
ds
add
inc
and
shl
call
push
daa
cmp
or
ficomp
inc
dec
loope
and
xchg
cmp
data16
fwait
cmps
push
xchg
js
loopne
fiadd
mov
int3
cmp
cmp
xchg
push
inc
pop
fs
xchg
lods
mov
sub
cmp
jecxz
inc
(bad)
mov
and
cmp
aas
xor
std
dec
and
push
mov
pop
repz
(bad)
in
mov
arpl
cmp
retf
ins
mov
add
in
call
inc
cmp
xchg
mov
cmp
mov
dec
jmp
dec
loopne
cmp
imul
ins
pusha
adc
inc
adc
push
(bad)
stc
sbb
inc
push
retf
pop
sub
xor
mov
rcr
or
fisubr
stos
scas
clc
fdivr
out
pop
data16
xor
mov
jb
mov
cmp
data16
aam
xor
pop
or
sar
(bad)
cmp
mov
imul
push
out
sub
mov
mov
mov
icebp
gs
icebp
fld
dec
neg
int3
imul
mov
ds
pop
jmp
mov
xor
xor
pop
stos
retf
add
add
movs
movs
(bad)
pop
cli
add
mov
outs
ret
mov
adc
out
xchg
lahf
pushf
mov
add
outs
mov
js
push
ss
inc
adc
icebp
cmp
(bad)
in
ds
xchg
mov
in
jmp
cs
and
jecxz
dec
fwait
shl
jns
mov
pop
out
pop
mov
sub
push
cmp
dec
xor
jge
jnp
stos
jns
inc
jbe
fwait
xchg
xchg
sub
mov
add
outs
cmp
push
inc
sbb
ds
cwde
out
dec
aaa
mov
jnp
cmp
and
cmp
cmp
dec
pop
inc
push
es
inc
cmp
stc
sahf
js
sbb
add
jne
add
fidivr
mov
inc
loope
xor
imul
cmp
sbb
loop
sbb
dec
bound
push
xchg
ja
inc
cmp
jbe
loopne
outs
push
(bad)
pop
int
xchg
cmp
inc
enter
pop
dec
lods
jns
mov
(bad)
fiadd
std
inc
sub
jmp
sub
dec
sub
or
push
inc
call
sub
(bad)
sub
jg
cdq
cmc
xchg
int
xchg
push
ins
xchg
cld
ins
fmul
push
inc
inc
(bad)
inc
loopne
fld
rcl
jmp
in
jle
adc
pop
call
test
sbb
jno
dec
das
jae
add
mov
addr16
imul
mov
cmc
adc
inc
xor
jb
popf
xchg
cld
sti
mov
or
popf
dec
mov
js
jns
shl
xchg
jmp
add
adc
mov
mov
outs
shr
repnz
out
push
xor
cs
mov
or
sub
imul
sbb
mov
lea
fiadd
cdq
jge
pop
jno
sub
jnp
ds
dec
xor
into
test
(bad)
js
lods
popf
mov
jns
jg
sbb
and
fist
mov
or
jp
push
cld
pusha
mov
sbb
clc
mov
(bad)
std
cmps
(bad)
dec
arpl
lods
(bad)
in
sbb
sahf
sbb
cmp
and
cmp
mov
outs
mov
scas
mov
in
mov
rcr
or
xchg
jb
xchg
sub
cli
sti
in
leave
inc
stc
pop
sub
cmc
mov
sub
push
push
add
fsub
jl
add
sbb
and
jmp
repz
sub
mov
imul
in
sbb
inc
xor
jae
inc
lock
push
add
sub
les
xor
stc
(bad)
bound
pop
ret
call
dec
jnp
xor
scas
mov
mov
cmps
xor
cmp
inc
inc
inc
sahf
(bad)
fisttp
dec
fdivp
dec
rcr
fmul
dec
fstp
ja
pop
mov
cmc
ds
inc
aaa
jmp
int
stos
popf
movs
jae
test
sub
das
cmp
cmp
xor
(bad)
(bad)
mov
loopne
ret
xor
dec
in
je
outs
mov
xchg
xor
jl
loope
sbb
jno
sbb
imul
xchg
mov
pop
jns
aam
push
lods
dec
push
rep
cmp
jne
(bad)
mov
test
add
cmc
or
mov
xor
int3
cmp
mov
fisttp
jp
mov
aad
xchg
inc
push
cmp
scas
std
cld
movs
in
cld
adc
rcr
pusha
pusha
pop
mov
les
pop
je
mov
pop
retf
shl
(bad)
es
mov
add
add
shr
les
ss
imul
shr
loopne
data16
mov
jns
in
repz
jno
inc
push
sbb
adc
push
sbb
mov
(bad)
cli
loop
out
lock
in
hlt
bound
push
aam
inc
xchg
mov
cmp
(bad)
adc
cmp
and
sub
push
and
pop
push
cwde
jns
test
xchg
rcr
inc
pop
out
mov
in
pop
jl
inc
mov
xchg
adc
inc
jle
lods
adc
mov
mov
fisubr
iret
push
fisttp
test
out
or
imul
rcr
fstp
add
xor
mov
sbb
sti
pop
sub
mov
(bad)
push
jne
inc
sub
push
and
mov
sahf
int
push
jle
popf
aad
cs
addr16
push
cmp
xor
dec
mov
mov
in
cmp
or
dec
dec
xchg
mov
imul
ins
cmps
cwde
sbb
xor
int
retf
push
test
mov
enter
push
pushf
xchg
dec
enter
ds
test
das
cmp
add
adc
xchg
cmp
sahf
mov
inc
inc
cmp
jmp
test
adc
inc
adc
mov
adc
popf
nop
adc
or
loopne
mov
or
test
push
mov
push
data16
sar
fs
(bad)
jl
xchg
stc
iret
cmp
or
sub
push
leave
retf
inc
cmp
lea
mov
inc
out
fsubr
add
ror
fbstp
(bad)
addr16
jns
mov
xchg
inc
cmp
and
mov
jne
popf
sub
shl
fmulp
xor
fadd
xchg
add
fucomi
jne
stos
mov
test
or
add
jp
inc
cmp
inc
ror
(bad)
(bad)
std
dec
ins
sti
cwde
out
(bad)
popf
test
hlt
mov
push
scas
test
sti
jne
js
lock
fwait
iret
retf
jge
sbb
or
(bad)
mov
ss
idiv
adc
push
jno
sub
data16
pop
dec
arpl
jb
xor
jle
pop
ins
jl
jmp
adc
stos
call
xchg
int3
pop
xchg
or
push
jge
das
adc
lods
xchg
or
inc
outs
std
sbb
scas
je
mov
jno
and
cmp
out
fdivrp
je
aam
and
popa
hlt
cmp
push
jno
mov
or
push
stc
xor
jno
popa
xor
pop
xchg
into
cvtps2pi
xchg
mov
mov
mov
enter
jno
cmp
inc
push
push
jb
jmp
jge
inc
cli
dec
pop
jno
ror
mov
push
int
sar
jbe
fstp
test
mov
in
ins
out
cmp
adc
pop
jns
shr
ret
xchg
ss
xor
xchg
fisttp
gs
(bad)
loopne
bound
jecxz
xor
cmp
addr16
lea
cmps
mov
out
or
pop
iret
dec
fdivr
xor
adc
outs
imul
and
cmp
xchg
sbb
jns
popa
je
cmp
ret
(bad)
adc
int
test
xor
sbb
sahf
into
stos
xchg
aam
nop
je
adc
jo
mov
sub
mov
cdq
bound
add
fst
in
xor
rcr
mov
outs
repz
gs
jg
out
inc
push
or
mov
jbe
mov
pop
jg
lock
xor
(bad)
(bad)
adc
jl
stos
bound
pop
imul
mov
js
jmp
es
mov
mov
cld
mov
dec
mov
(bad)
into
pop
jecxz
cmp
mov
push
jns
fwait
fwait
xlat
mov
sbb
pop
push
jnp
cmp
loope
cmp
adc
imul
push
pop
pop
jp
lds
push
xor
jp
ja
or
mov
sbb
mov
sub
cmp
cmc
mov
mov
shl
iret
xchg
pop
jp
cmp
xchg
sub
jge
and
sbb
js
jno
popa
sbb
pop
test
movs
repz
sub
lods
sub
pop
mov
sbb
cdq
push
js
jno
sub
popa
mov
pop
dec
neg
xchg
sub
int3
outs
dec
hlt
mov
fiadd
sbb
and
mov
mov
xchg
xchg
mov
sbb
push
inc
cmp
jo
call
leave
cmp
jb
stos
icebp
js
cmps
cmp
test
push
add
out
fcmovnbe
sub
jle
dec
jb
loopne
leave
fild
add
leavew
jmp
inc
pop
cmp
loope
mov
js
push
dec
dec
retf
xchg
sar
jecxz
adc
jge
cwde
cmp
cmps
push
push
jns
add
push
retf
xor
xchg
or
inc
jecxz
mov
jae
cld
xor
cmp
cmp
mul
cmc
fdiv
mov
sub
outs
sar
jnp
adc
jno
aas
in
cmp
mov
lea
jns
dec
mov
sub
push
add
aad
and
stos
or
in
mov
mov
sbb
mov
scas
sbb
pop
or
xchg
dec
maskmovq
mov
jg
jle
push
jae
in
push
dec
and
mov
dec
add
jl
push
mov
ss
mov
adc
mov
call
por
cs
cmp
rol
lds
out
cmp
adc
pop
ss
stos
jns
hlt
nop
int
cmp
and
cwde
push
je
les
and
mov
xor
(bad)
jns
rcl
test
cmp
adc
gs
xor
loope
mov
pop
mov
adc
(bad)
sbb
pop
fbld
cmp
sbb
push
lahf
jl
inc
stc
in
mov
in
adc
push
movs
in
or
out
imul
inc
shr
imul
fs
ret
xchg
cmp
test
push
inc
mov
sub
or
mov
adc
ss
push
or
xor
test
shl
inc
int3
sub
fstp
dec
pop
dec
jp
aas
xor
les
cld
out
xchg
leave
call
xchg
dec
(bad)
xor
sbb
xchg
mov
dec
stos
arpl
mov
mov
arpl
pop
cmc
sbb
cli
aaa
pop
cmps
jno
(bad)
sub
sbb
les
jno
les
test
int3
xor
push
bound
lahf
pop
fst
lahf
pop
mov
sub
out
xor
cwde
out
push
fwait
inc
js
add
outs
clc
xchg
and
cmp
in
sahf
and
dec
cmp
sub
ins
fs
aas
(bad)
push
add
jle
xchg
mov
jnp
pop
jmp
adc
inc
into
sti
lock
in
out
inc
inc
jl
adc
out
inc
lods
jmp
cmp
cmps
or
xchg
outs
and
xor
adc
movs
inc
rep
shl
dec
fstp
or
inc
data16
and
js
inc
cld
std
or
inc
inc
cs
(bad)
ins
push
push
fdiv
push
jbe
push
mov
push
cmp
out
fisub
inc
and
sub
(bad)
sbb
inc
gs
call
mov
jmp
jae
sub
cdq
inc
lods
ins
int
out
fcmovb
inc
das
icebp
mov
inc
mov
cld
xor
and
(bad)
inc
cmp
push
sbb
shr
inc
cmp
ins
pop
cwde
imul
in
cmp
inc
inc
mov
shl
jle
xchg
mul
out
hlt
and
add
push
sbb
cmp
jb
das
or
mov
adc
xor
jnp
add
mov
cmps
loop
mov
and
es
adc
imul
in
cmp
mov
fcomp
out
inc
xor
xlat
xchg
stos
jo
or
mov
inc
add
jae
call
aas
and
js
mov
sti
fisub
sub
cmp
add
icebp
std
push
gs
sub
and
sbb
retf
add
xor
adc
and
popa
inc
cli
les
call
push
icebp
into
mov
(bad)
rdtsc
inc
inc
mov
les
in
into
fdivr
cmp
push
dec
jmp
lea
ss
xchg
stos
je
cmp
(bad)
mov
push
stos
mov
pop
dec
fpatan
mov
push
pop
retf
sbb
iret
pop
cmp
pop
ds
data16
cmp
ficomp
es
push
xchg
sub
into
pop
mov
int3
jl
xor
xchg
push
mov
pop
pop
jp
aaa
cdq
mov
out
repnz
into
adc
push
ds
inc
and
enter
xchg
lods
popf
inc
push
xor
and
pusha
and
inc
inc
rcr
bound
inc
shl
aas
out
pop
fs
inc
cs
or
xchg
(bad)
mov
pushf
inc
dec
push
in
sbb
scas
and
inc
pop
fnstsw
xchg
repnz
cdq
sub
adc
clc
mov
ficomp
dec
cmps
rep
inc
sub
inc
add
sbb
movs
xchg
mov
adc
inc
fsub
pop
shl
and
cdq
cwde
cmp
movs
pop
lods
xchg
xchg
pusha
into
jno
(bad)
js
icebp
adc
pop
xchg
inc
xchg
pop
or
cmc
test
cmp
adc
cmp
icebp
retf
or
push
popa
(bad)
push
or
sub
fwait
stos
cdq
cmp
inc
jo
mov
inc
adc
outs
sub
mov
pop
inc
cmc
xor
mov
inc
popa
cmp
(bad)
iret
sti
movs
inc
pop
adc
pop
imul
aaa
jo
cmp
popf
add
mov
cmc
lds
nop
push
push
sub
retw
aam
dec
sbb
(bad)
(bad)
and
aaa
dec
pop
cmp
je
scas
popf
shl
or
jp
push
(bad)
in
loop
and
ins
push
into
pop
cmpxchg
pop
adc
popa
inc
jle
rol
mov
push
int3
pop
cmp
std
or
aaa
jle
xchg
loopne
ins
ds
call
inc
mov
retf
jg
push
pusha
ret
inc
mov
call
cwde
mov
dec
out
sti
fiadd
fidivr
dec
pop
mov
pop
or
je
loop
es
fldcw
mov
enter
retf
dec
int3
pop
repnz
retf
(bad)
fsub
cmp
out
sub
xor
nop
mov
mov
cmp
mov
test
xor
inc
test
sbb
loop
pop
int
inc
js
mov
ror
enter
pop
cld
cmp
sbb
sbb
and
inc
pop
(bad)
scas
inc
(bad)
mov
stc
rol
ja
push
cmpxchg
mov
pushf
iret
(bad)
pop
inc
sub
inc
mov
dec
xchg
mov
xchg
pop
inc
jne
cmp
cdq
inc
cmp
mov
ins
fisttp
icebp
int
les
iret
pop
ret
pop
(bad)
pop
cmp
cmp
pop
push
cmp
int
mov
mov
outs
out
adc
and
and
in
mov
jns
ss
or
cdq
mov
inc
icebp
push
pop
scas
sbb
push
jp
xor
movs
cs
(bad)
xchg
pop
cmp
sti
iret
mov
mov
pop
out
pop
popf
jmp
fstp
add
jge
inc
push
sub
push
ret
das
rcl
outs
sub
movs
retf
(bad)
mov
ret
test
dec
and
out
out
or
clc
push
jno
popf
dec
out
mov
shl
ss
pop
jmp
jae
sub
dec
sar
es
xchg
cmp
test
test
sub
cmp
xor
das
sbb
and
retf
or
sbb
push
xor
jmp
add
imul
or
fidivr
pusha
ja
xor
(bad)
fbld
or
mov
adc
push
jmp
(bad)
sub
mov
adc
mov
fist
sbb
mov
call
jnp
call
mov
fs
mov
lea
aas
loop
inc
xlat
mov
or
xchg
add
adc
jnp
sub
adc
fwait
std
mov
xor
cmp
jg
mov
xchg
and
xchg
add
mov
cmp
inc
sar
jge
mul
cmc
inc
jb
inc
mov
out
cmp
inc
jecxz
xor
fsub
jns
push
icebp
dec
jo
adc
fsubr
xchg
xor
call
mov
cmp
loop
retf
shl
and
iret
mov
adc
sbb
or
mov
clc
xchg
scas
pop
mov
or
jns
adc
mov
adc
xchg
pop
fst
test
repz
jno
xchg
mov
push
mov
retf
pop
imul
sbb
stc
sbb
fidiv
jp
pcmpgtw
pusha
mov
ds
jo
or
rcl
xor
and
icebp
(bad)
cmp
xchg
ja
in
jnp
mov
push
or
mov
sbb
jbe
shr
jns
pop
aaa
popa
outs
adc
loope
sbb
jnp
sbb
or
and
fwait
push
jbe
(bad)
sub
or
inc
jg
out
iret
js
int
mov
push
add
fwait
push
les
add
out
mov
aam
mov
sbb
cmp
cmp
ror
out
inc
fdivr
sub
stos
pop
add
retf
scas
xchg
push
dec
pop
inc
push
dec
bound
(bad)
stos
inc
inc
pop
imul
dec
jl
cmp
ret
push
jno
mov
pop
sbb
mov
dec
mov
sub
inc
sub
gs
adc
sub
jns
cs
xchg
pop
inc
hlt
pusha
out
test
or
jge
add
mov
inc
mov
push
mov
retf
inc
call
mov
in
das
cmp
jae
(bad)
in
clc
inc
ret
enter
popa
jecxz
xchg
aas
sub
add
cmp
cmp
lds
rol
or
fld
cmp
mov
popa
sub
cmp
into
or
fs
loope
mov
inc
adc
xchg
inc
call
mov
aad
arpl
(bad)
out
repz
outs
sub
movs
mov
add
cld
push
and
fwait
inc
mov
mov
mov
dec
sbb
xchg
inc
jno
and
inc
sub
pop
dec
iret
test
sbb
je
push
dec
inc
pop
sti
push
or
adc
sahf
dec
mov
repnz
mov
mov
(bad)
cmp
(bad)
fcompp
dec
inc
jnp
xchg
mov
inc
enter
lds
mov
pop
in
mov
lea
ror
sub
push
hlt
sbb
iret
int3
cmp
adc
or
into
call
push
(bad)
in
shl
pop
or
fdiv
(bad)
rcr
int
xlat
shr
cmp
xlat
loop
cmp
xor
cmp
cmp
fild
inc
pop
xor
push
ret
sbb
stc
inc
jo
sub
mov
inc
mov
xchg
adc
adc
fs
jmp
inc
mov
loop
jge
fwait
xor
dec
ds
test
repnz
mov
mov
dec
sub
ins
popa
dec
adc
shl
push
ret
sbb
mov
push
imul
mov
and
fld
jb
repnz
cld
lahf
xor
imul
adc
or
pusha
call
outs
jmp
cld
xchg
sub
fimul
sti
sbb
js
and
mov
push
mov
sti
fadd
stc
jmp
(bad)
in
cli
and
cmc
stos
std
mov
xchg
es
or
inc
jb
push
sbb
movs
popa
add
inc
ficom
and
(bad)
cmp
inc
mov
mul
sub
fs
retf
xchg
lea
outs
inc
sbb
or
repnz
xchg
xchg
inc
lock
push
mov
shr
mov
gs
loopne
xchg
push
push
push
inc
cli
movs
cwde
or
inc
pop
lods
jbe
cmps
xchg
repnz
cmp
into
cmp
in
sbb
pushf
inc
stos
xor
push
pop
fcmovnu
inc
cmp
in
xchg
or
inc
stos
mov
mov
scas
call
mov
xchg
push
add
js
fcomip
js
sub
inc
call
movs
mov
mov
sub
je
mov
dec
jg
lods
push
(bad)
sbb
mov
inc
fmul
pop
inc
aad
je
inc
mov
out
out
jne
pusha
cmp
fisttp
adc
sbb
dec
push
aaa
cmp
imul
mov
stc
in
pop
cmp
ret
stc
mov
aas
ss
and
push
fnsave
push
mov
mov
cli
jp
sbb
addr16
cmp
push
sub
ret
(bad)
cld
enter
jmp
and
jmp
addr16
push
vunpckhps
dec
push
adc
push
fist
mov
rol
jp
je
iret
cld
adc
(bad)
jb
mov
inc
scas
and
xor
in
int
retf
dec
adc
jecxz
push
idiv
pop
push
ins
lea
or
push
xchg
or
inc
add
push
scas
mov
movs
je
fldenv
mov
call
mov
test
jl
aad
fwait
pop
inc
inc
inc
fs
pusha
jno
mov
mov
mov
push
jno
pop
sbb
jp
dec
retf
dec
jecxz
imul
mov
and
pop
call
fsubr
aad
pusha
sbb
(bad)
cmp
jno
push
outs
sub
sub
lods
adc
loop
loope
jecxz
push
mov
pusha
push
inc
xlat
push
add
dec
mov
mov
int3
std
call
in
(bad)
out
out
jno
add
dec
cmp
je
xlat
xor
xchg
adc
lds
push
and
js
mov
mov
jno
push
mov
cmps
ret
add
xor
ss
pop
add
mov
ret
inc
xlat
fdivr
jns
test
sbb
cwde
xor
cmp
jle
ds
fadd
pop
or
cmp
jmp
into
mov
stos
std
popf
add
push
outs
lea
mov
jle
fs
inc
psrld
inc
sub
cmp
add
inc
aad
mov
mov
pop
sub
aad
ret
sti
pop
or
lea
rol
and
stos
out
sub
sbb
sar
lds
pop
xor
dec
mov
mov
gs
xchg
push
and
test
jmp
sub
scas
cmp
xchg
pop
popa
js
inc
div
fxch
sub
jo
push
mov
mov
mov
xlat
pop
aam
inc
cmp
push
outs
inc
pop
pop
dec
push
(bad)
inc
data16
dec
aam
jno
stc
or
adc
pop
enter
mov
cmp
and
lods
xchg
fstp
test
push
shl
mov
push
aad
sub
jb
jle
jg
adc
xchg
shl
in
stc
and
loop
adc
outs
jns
inc
mov
and
fsubr
or
mov
and
les
test
mov
arpl
(bad)
pop
mov
xchg
ficomp
cmp
(bad)
sub
or
cmp
sub
sub
loopne
and
push
test
sub
sbb
inc
inc
in
cwde
xchg
xor
ins
inc
addr16
sbb
jmp
mov
loope
out
sbb
inc
push
es
mov
cmp
movs
lahf
repz
pop
or
adc
add
mov
mov
int3
xchg
pop
sbb
push
fs
jns
xchg
sub
mov
aas
sbb
sbb
imul
jmp
(bad)
adc
inc
cmp
stos
fidivr
ret
sub
daa
cmp
or
and
mov
stos
jp
dec
xor
test
inc
adc
outs
jle
jo
push
js
mul
scas
xchg
or
push
inc
or
into
mov
mov
js
pop
stos
test
xchg
inc
cmp
add
fld
adc
inc
jo
sbb
enter
jle
or
and
dec
pusha
cmp
mov
jae
shl
mov
jne
fisub
sub
pop
inc
call
pop
cmp
add
push
jg
mov
sub
nop
jbe
out
mov
addr16
ja
push
loop
fdiv
cmp
xchg
xor
cmp
mov
test
jbe
cmp
clc
int
mov
(bad)
push
xor
in
test
jno
cmps
dec
inc
mov
xor
cmp
loop
ret
into
mov
xchg
mov
(bad)
imul
inc
sti
inc
fbstp
inc
xchg
jecxz
inc
pop
enter
fcom
mov
and
and
std
fstp
push
push
mov
sbb
jbe
test
fidiv
out
inc
jecxz
jo
mov
or
aas
push
jp
fist
lods
(bad)
pop
adc
push
std
iret
fyl2x
in
ds
add
rcl
jmp
jmp
call
mov
(bad)
dec
add
sahf
mov
rcl
aaa
add
scas
adc
sbb
inc
cdq
jl
adc
cmp
xor
add
(bad)
cmp
movs
xor
cmp
pop
jecxz
and
add
aam
xchg
mov
add
or
data16
and
sub
fcom
ds
mov
cmp
mov
jne
adc
or
(bad)
ror
mov
iret
and
xor
js
shl
mov
pop
xchg
ficomp
jo
rol
xor
es
setg
icebp
mov
cmp
mov
mov
arpl
xchg
inc
outs
push
bound
mov
lds
mov
fadd
rcr
inc
push
je
push
pop
fidiv
into
mov
repnz
stc
sbb
sub
clc
mov
icebp
in
adc
outs
(bad)
sbb
je
jno
aam
cld
bound
xor
icebp
xor
inc
fiadd
dec
popa
sub
lahf
xor
outs
nop
jmp
sti
pop
mov
(bad)
loope
jo
cwde
mov
outs
aaa
je
fadd
std
or
test
xchg
repnz
fs
xor
xor
jns
das
sbb
out
data16
call
shl
jle
inc
ds
fwait
inc
jbe
sbb
and
popf
out
fucomp
or
pop
mov
add
js
(bad)
aad
sub
clc
adc
sahf
mov
mov
add
mov
push
cmp
mov
lods
mov
addr16
inc
aas
cmp
cmp
fld
push
pop
sub
add
mov
xchg
and
in
imul
xor
or
(bad)
ret
addr16
cmp
push
cmp
mov
mov
out
cld
add
or
pop
dec
sti
mov
mov
cmc
sub
mov
and
stos
(bad)
inc
cmp
lock
ret
lods
inc
inc
test
push
mov
leave
cmp
mov
mov
scas
add
iret
test
aam
test
dec
xchg
sbb
aad
pop
cmc
inc
inc
js
leave
jmp
scas
mov
inc
push
dec
ror
mov
and
cld
lahf
xchg
push
push
push
std
dec
mov
lea
push
inc
xlat
rcl
ds
cmps
mov
add
sub
inc
icebp
jp
pop
dec
or
dec
fild
add
(bad)
adc
out
jbe
inc
push
adc
dec
lea
sar
xchg
arpl
in
xlat
nop
ins
inc
stos
imul
icebp
jmp
jge
in
or
and
mov
add
xchg
xchg
add
sub
push
inc
adc
mov
xchg
fcmovu
and
(bad)
fmul
sbb
mov
mov
cmps
jecxz
mov
mov
pop
xchg
jns
xchg
mov
mov
stc
add
in
xor
push
cmp
les
sbb
jge
sbb
and
mov
jno
arpl
adc
inc
xchg
xchg
sar
mov
rol
stos
jno
outs
in
jl
dec
lahf
jle
cmp
mov
mov
fsubr
popf
outs
and
jns
mov
retf
push
jmp
inc
aam
test
push
xor
sub
mov
and
das
mov
inc
xchg
movs
pop
or
add
cld
cmp
loope
xor
inc
daa
dec
ror
loopne
fdivr
lea
not
add
inc
inc
jb
adc
cmp
scas
lahf
ds
frstor
or
gs
cmp
aaa
add
inc
aas
adc
xchg
push
jmp
and
cmp
imul
loopne
(bad)
and
out
and
add
imul
add
push
sub
(bad)
in
fisub
add
fsub
add
aas
movs
xor
retf
xchg
sar
xchg
or
jns
js
imul
dec
jp
into
jge
xlat
sar
outs
ds
cmp
push
arpl
test
sbb
push
jae
mov
xlat
sti
add
cs
fcom
cmc
jl
mov
into
hlt
rsqrtps
cmp
fisttp
aas
inc
test
mov
mov
dec
cmp
xchg
xchg
aaa
mov
sti
loope
push
dec
inc
cmps
inc
mov
push
mov
imul
add
adc
mov
ja
dec
fnstsw
inc
int
outs
pop
sub
stc
pop
enter
pop
mov
or
dec
mov
fadd
jmp
inc
jo
call
faddp
pop
cmp
je
mov
adc
mov
enter
ds
scas
pusha
(bad)
fucomp
xchg
xchg
add
les
and
inc
cdq
nop
jo
jmp
ds
test
inc
push
mov
push
jne
xlat
dec
jbe
inc
aad
jno
pop
fld
call
sbb
mov
mov
movs
inc
test
int3
aaa
xor
adc
gs
(bad)
sub
dec
add
cmp
retf
adc
ins
jns
aam
and
repz
cmp
std
into
add
or
xor
or
xchg
inc
movs
mov
icebp
test
cmp
xor
jle
jns
fild
pop
clc
rol
jmp
test
inc
outs
fstp
adc
ja
inc
scas
jo
mov
adc
and
mov
retf
xlat
ret
fistp
cmp
les
xor
jae
and
fnstcw
mov
inc
cdq
pop
ja
mov
test
mov
into
mov
fst
cmp
clc
pause
mov
shl
rcl
inc
inc
adc
(bad)
ins
icebp
ins
outs
mul
data16
sub
(bad)
sbb
xor
gs
mov
test
pusha
test
and
cmp
dec
(bad)
jg
mov
inc
rcl
(bad)
rol
fsubr
push
xor
adc
and
movs
cmps
xchg
pop
out
jmp
mov
ins
mov
out
dec
(bad)
fsub
push
inc
fcmovnb
movs
inc
jb
push
inc
pop
xchg
xchg
cmp
jnp
dec
jle
stos
out
inc
cmp
push
(bad)
dec
mov
inc
fcom
jnp
or
mov
leave
push
das
(bad)
cmp
lahf
pop
xor
sbb
sub
daa
in
and
sub
sbb
das
ret
cmp
out
adc
mov
pop
psubsw
inc
loopne
fadd
ror
std
aad
lods
push
xor
inc
int
cli
or
(bad)
and
movs
xchg
push
jno
mov
dec
je
inc
mov
mov
popa
popf
jo
or
or
sub
aas
(bad)
mov
pop
pop
inc
int
mov
mov
sub
pop
call
mov
imul
into
inc
fstp
push
adc
mov
sub
and
mov
fdiv
inc
ret
pop
ins
pop
sub
and
xchg
and
push
cmp
mov
and
dec
mov
cmp
xor
daa
inc
push
test
repnz
cli
add
outs
cld
imul
scas
jle
mov
add
fisub
jl
fistp
fimul
and
fldcw
dec
sub
popa
fidiv
inc
pop
pop
cmp
int
mov
jmp
movs
jp
sub
ja
jne
add
mov
aam
push
xor
iret
js
cmp
dec
adc
dec
ds
pushf
mov
fs
test
fnstenv
loopne
mov
movs
jns
in
sbb
push
out
fs
fldenv
or
sbb
ins
js
jno
add
aad
sar
sbb
add
sbb
and
jb
imul
or
adc
xor
mov
in
push
(bad)
aas
in
jno
cmp
jo
add
mov
mov
and
jge
mov
sbb
mov
cmps
or
jns
add
mov
adc
outs
mov
cmp
int3
sbb
xchg
pop
mov
sbb
test
mov
or
punpckhdq
mov
cli
cmps
dec
jmp
or
cmp
retf
(bad)
pop
ret
jno
gs
sbb
cmp
push
imul
ror
dec
sar
cld
pop
dec
addr16
mov
data16
push
xor
jle
pusha
std
cmp
adc
sti
xor
cwde
pop
in
cmp
cmps
and
cwde
xor
cld
lods
cmp
xor
and
and
sar
rol
dec
ins
fcmovnu
rcl
cdq
pop
mov
fwait
cmp
dec
aad
lods
cmovo
inc
and
sbb
mov
std
adc
xchg
sbb
mov
cmc
mov
arpl
xor
mov
cmp
mov
and
cmp
stos
mov
faddp
mov
jns
and
sbb
inc
out
cmp
mov
nop
out
mov
js
pop
lds
out
cmp
sar
and
cmp
or
inc
xor
dec
jg
mov
and
jle
inc
push
xor
pop
mov
pop
jno
lock
not
out
sbb
pop
push
xor
loopne
scas
jmp
adc
or
cmp
xor
cmp
test
xor
enter
cmp
ja
cmp
xchg
jne
pop
jge
cdq
cdq
inc
cmps
cmp
and
lods
sar
add
dec
mov
aam
in
push
add
fs
adc
and
stc
dec
loopne
inc
aam
mov
xchg
inc
data16
push
and
mov
cmc
bound
call
or
xor
push
mov
add
scas
mov
pop
mov
(bad)
imul
sbb
pushf
(bad)
jp
popa
cmps
cdq
push
xlat
jl
inc
aam
retf
pop
xchg
icebp
mov
xor
jg
add
xchg
js
iret
in
cmp
xor
sar
pushf
aas
lea
fsubr
(bad)
pop
inc
mov
mov
shr
mov
xor
iret
test
adc
adc
or
mov
cmp
mov
out
in
gs
push
iret
xlat
sti
jns
rcr
inc
pusha
aas
stc
es
test
jbe
mov
inc
iret
inc
cmp
sbb
fiadd
arpl
lds
out
sbb
sub
imul
sub
retf
das
inc
or
leave
push
inc
fld
inc
out
dec
stos
inc
ret
cmp
arpl
sbb
rcl
sar
cmps
jmp
mov
mov
xchg
mov
or
inc
jge
inc
push
cmp
xor
mov
sar
push
int
pop
push
(bad)
sub
icebp
cmp
cmp
mov
mov
push
scas
mov
pop
cmp
mov
and
mov
rcr
cmps
call
imul
lds
add
fwait
inc
and
adc
arpl
pop
adc
(bad)
cmp
sub
inc
cmp
and
mov
sub
and
pop
ror
inc
cmp
cld
out
xor
in
bswap
bnd
outs
inc
dec
rep
sbb
push
cmp
out
jmp
add
fistp
(bad)
push
dec
mov
inc
mov
inc
loope
lea
inc
test
mov
popf
aad
inc
cdq
retf
(bad)
sbb
outs
inc
push
adc
fistp
dec
(bad)
or
clc
mul
and
mov
pop
cmp
sub
mov
js
xchg
sub
stc
push
inc
loope
sbb
dec
(bad)
mov
cmc
push
in
sub
in
xor
mov
pop
mov
push
out
xor
jl
js
retf
pop
jl
add
push
mov
fstp
cmp
jge
inc
pop
inc
xchg
dec
ds
and
xchg
icebp
xor
je
out
loopne
push
icebp
push
cmp
adc
mov
xor
inc
add
repnz
int3
adc
push
inc
sub
mov
mov
cmp
dec
clc
jle
jns
lock
xchg
in
outs
stc
(bad)
pop
ret
pop
mov
dec
adc
int3
jle
push
inc
jge
push
ja
scas
xchg
sbb
xchg
sbb
idiv
add
ins
aaa
sub
fs
lock
mov
loop
callw
pop
mov
cmp
cmc
dec
push
dec
pop
xor
icebp
bound
aas
and
stc
or
inc
jp
and
mov
movs
les
lock
dec
ja
frstor
inc
mov
jne
scas
in
mov
dec
mov
sub
jle
or
adc
jae
outs
or
mov
sub
mov
in
iret
sub
cld
cmp
call
arpl
xor
daa
in
cmc
cmp
cld
lock
out
in
bnd
jo
ss
lds
and
xlat
sub
xor
pop
xor
outs
cmp
stc
int3
inc
or
mov
pop
(bad)
pop
cld
(bad)
inc
fstp
js
inc
std
jmp
(bad)
push
inc
lods
fidivr
xor
jge
xchg
enter
add
in
lea
mov
jle
and
jnp
mov
jns
xchg
inc
or
pop
add
inc
and
cmp
sbb
(bad)
rcr
into
sbb
out
je
xchg
jge
aaa
cmp
jns
shl
push
fst
cmp
movs
sub
cld
xchg
cmps
or
int
lods
and
cmp
push
add
sub
mov
sub
and
test
inc
popa
test
pop
test
cmps
inc
pop
cld
in
add
add
mov
pop
call
arpl
inc
dec
jno
les
retf
in
shl
dec
pusha
lods
mov
ss
push
fs
push
mov
adc
jecxz
cmp
cmp
xchg
cmp
inc
out
stc
imul
fadd
sbb
sbb
movs
rcl
mov
inc
xchg
retf
cwde
jmp
push
or
pop
je
js
push
jne
pop
in
push
stos
icebp
call
in
inc
xchg
out
fcmovnbe
inc
mov
stc
stos
sub
and
mov
ins
dec
inc
jae
repz
sbb
or
sub
sahf
sar
into
or
sub
mov
push
and
in
(bad)
push
push
adc
stc
rcr
repz
push
test
aad
pusha
mov
ins
jle
retf
stc
xor
div
ret
cmp
xchg
scas
cwde
imul
sti
or
cmp
std
iret
fcomp
cmc
stc
inc
fcos
retf
cmp
push
jae
xrelease
aaa
xor
daa
cmp
shr
aas
enter
add
(bad)
cmp
inc
cli
arpl
inc
jae
imul
fisubr
or
inc
sub
mov
pop
out
mov
xchg
cmp
sub
shr
call
repnz
or
and
inc
xlat
ret
(bad)
dec
in
scas
rcr
and
dec
push
ds
lea
test
loopne
aad
dec
sub
and
cld
dec
cmp
sub
mov
dec
pop
mov
daa
popa
mov
jp
inc
cmp
xor
xchg
dec
ja
pop
addr16
or
xchg
push
push
push
mov
or
mov
mov
inc
jbe
loop
xchg
out
sbb
lods
(bad)
cli
adc
movs
je
xchg
sub
cmps
lahf
mov
leave
repnz
push
or
cmps
neg
lods
jno
cmp
iret
(bad)
icebp
cmc
xor
or
cdq
add
mov
sub
pop
pop
jb
mov
add
sub
add
cli
inc
movs
xchg
in
sub
mov
sub
mov
inc
push
jmp
loopne
and
fldcw
mov
xchg
test
unpcklps
inc
sbb
sbb
sbb
fsub
sub
mov
fsubrp
iret
jmp
sbb
jns
outs
pop
sbb
adc
inc
loopne
or
jecxz
test
pop
ja
mov
inc
xor
ror
bound
inc
or
inc
das
in
cli
mov
inc
cs
(bad)
mov
stos
jmp
xor
out
(bad)
dec
aam
jno
repnz
fmul
jp
ds
int
out
ds
std
out
je
nop
jb
ja
movs
inc
ds
rol
lods
or
mov
loope
mov
lds
cwde
rcl
adc
mov
pop
xchg
nop
pusha
and
mov
push
mov
sti
xlat
and
cld
and
xrelease
dec
es
xor
clc
shr
jge
xchg
pop
mov
enter
(bad)
dec
(bad)
loope
push
ins
cli
fstp
jo
and
fwait
push
repz
mov
cmp
ret
and
xchg
cmp
inc
sub
inc
push
fs
dec
in
cmp
in
xor
cmp
sub
fwait
das
adc
aad
and
jbe
xor
jns
test
xor
out
leave
shl
pop
mov
mov
mov
les
(bad)
mov
sbb
jecxz
retf
jl
pusha
pusha
xor
loope
and
(bad)
call
sahf
cmp
jno
(bad)
jae
inc
cmp
lahf
or
int3
cmps
or
(bad)
jl
loope
sar
test
jmp
mov
(bad)
xor
call
and
sti
fst
xchg
mov
adc
add
push
fistp
int
sbb
xchg
mov
js
mov
jno
mov
jns
pop
xor
adc
mov
outs
retf
mov
pop
lds
inc
jns
jge
jb
inc
js
rcl
imul
aas
call
push
(bad)
sahf
sbb
mov
inc
jno
call
cmp
test
out
sahf
xor
inc
pop
mov
test
js
jne
push
(bad)
mov
mov
aad
int
adc
ss
fistp
adc
push
jmp
popf
sbb
and
mov
inc
out
add
shr
sbb
mov
inc
loop
test
pushf
dec
pop
xor
fisub
(bad)
cmp
xor
or
xor
stos
push
fdivrp
sahf
mov
cmp
clc
cld
jno
cmp
jmp
fsubr
(bad)
cmp
loopne
xchg
shl
enter
cmp
out
xor
push
cmp
and
lds
inc
mov
aas
or
inc
push
cmp
mov
out
cmp
(bad)
out
mov
push
cmp
xor
cld
push
push
jb
cmova
cmp
inc
mov
loop
lock
cmc
sub
xchg
les
scas
add
cmp
jl
xchg
dec
jbe
call
mov
(bad)
mov
push
sub
and
cmp
or
mov
inc
cld
stos
mov
xor
push
and
enter
pop
dec
ds
xchg
push
pop
sar
lods
cli
cmp
jns
fsub
aam
cmp
cmp
inc
les
adc
stc
inc
cmp
loop
mov
cld
sub
sub
das
or
call
popf
inc
imul
outs
sub
mov
jl
sbb
cmp
dec
add
sub
jno
xchg
das
ret
shl
jns
(bad)
scas
fs
lods
inc
mov
cmp
adc
rol
je
fwait
nop
xchg
dec
jmp
mov
adc
mov
mov
retf
imul
js
popf
shr
popf
inc
cmp
mov
(bad)
jg
mov
retf
bound
push
fsubr
ror
mov
int3
pop
jnp
pop
mov
and
fdivr
nop
mov
sub
addr16
xor
or
pop
hlt
cmp
ins
mov
test
mov
sbb
leave
jo
das
mov
cmps
xchg
retf
bound
gs
es
shr
jnp
or
aam
aad
call
and
and
xchg
stos
mov
(bad)
sbb
dec
mov
mov
retf
fld
jmp
pop
pop
or
mov
inc
dec
mov
sbb
popa
out
jae
inc
gs
jmp
push
test
mov
fst
xchg
loopne
es
mov
xchg
add
cmps
pusha
bnd
inc
js
(bad)
in
inc
je
popf
ja
push
test
inc
arpl
cmp
retf
test
sbb
aas
jp
push
mov
cmp
push
push
aad
mov
test
add
inc
jmp
adc
xor
adc
mov
popa
sti
and
push
xor
cdq
out
shl
ds
jnp
xchg
loop
loopne
out
fadd
sar
cmp
je
inc
pop
jb
jp
js
inc
push
stos
fild
xor
mov
shr
iret
call
inc
pop
mov
sti
retf
loope
xchg
sbb
mov
rcr
jle
dec
into
repnz
or
mov
mov
jge
adc
(bad)
inc
mov
mov
mov
movs
inc
mov
mov
or
sti
retf
dec
adc
mov
ret
ins
jp
sub
add
push
pop
push
cmp
fstp
inc
sub
push
js
cmp
imul
mul
xor
pop
dec
sbb
(bad)
out
outs
cmc
jmp
mov
cli
or
or
mov
push
xchg
mov
xchg
sub
jmp
jle
mov
bound
ficomp
and
xor
push
jo
push
dec
loop
mov
fldpi
pop
mov
jo
inc
and
mov
sub
fcom
pop
jns
pop
out
or
cmp
xor
cmp
sub
and
sub
mov
stos
dec
add
adc
add
add
aas
adc
push
jmp
and
in
and
les
retf
inc
pop
and
ds
lahf
mov
mov
xor
out
jno
cmp
loopne
inc
cmp
int
ud2
cmc
inc
sbb
mov
out
add
and
inc
imul
fucomip
scas
dec
fld
mov
ret
xchg
aas
ret
daa
inc
and
jle
cmp
xchg
iret
lods
and
add
dec
pop
jnp
mov
xchg
rcl
adc
jne
das
sbb
mov
stos
cmp
adc
and
dec
add
mov
pop
cmp
popa
and
popf
daa
(bad)
das
ret
pop
(bad)
jmp
fwait
cmp
pop
sub
dec
fidiv
leave
pop
(bad)
fst
push
and
fwait
mov
xor
pop
add
movs
xor
movs
rol
out
or
inc
inc
push
(bad)
mov
add
cli
imul
cmp
and
xlat
and
bound
cmp
inc
js
loop
push
rol
jl
mov
mov
std
xor
xchg
sahf
imul
cmps
in
inc
dec
into
sub
(bad)
mov
mov
mov
mov
into
xchg
push
push
jns
pop
cli
scas
jo
jb
xchg
loopne
jnp
cmp
ja
int
xor
mov
xor
xor
shl
int
xor
sbb
cmp
adc
sub
ds
aad
sbb
pop
push
sub
lods
cmp
xchg
ret
adc
xor
in
mov
out
inc
stc
inc
xchg
mov
sub
test
fmul
dec
dec
cmp
inc
pusha
inc
fwait
movs
dec
iret
add
pop
push
or
test
xchg
pop
inc
or
pop
out
pop
dec
sub
xor
(bad)
and
(bad)
inc
out
mov
xor
rol
aas
in
push
scas
inc
cld
repz
test
sub
psrlw
cmp
xchg
cmp
push
cmp
pop
ds
fcmove
stc
xor
jbe
xchg
dec
push
call
je
aam
or
push
shl
jmp
cmp
jno
cmc
hlt
inc
mov
mov
jne
idiv
leave
ret
inc
cmp
icebp
fisub
sbb
adc
cmp
push
clc
leave
inc
out
loopne
jbe
pop
dec
dec
inc
out
and
jno
repnz
or
test
sbb
inc
dec
cdq
mov
sbb
inc
popf
rol
xor
das
int3
cmps
fstp
jp
mov
loopne
mov
ds
jecxz
mov
sbb
shl
inc
inc
xor
lods
mov
arpl
repz
lds
sbb
dec
jg
adc
lods
inc
mov
cld
push
sub
add
mov
stos
adc
retf
jae
push
data16
and
into
je
inc
cmps
les
sbb
sub
cld
sar
cmp
outs
imul
addr16
push
shl
mov
fld
pop
leave
fadd
repz
mov
fstp
mov
or
jns
inc
xor
sub
mov
dec
aam
jns
call
into
push
retf
retf
in
add
jge
test
push
icebp
sti
jg
repz
dec
and
push
(bad)
and
(bad)
push
shr
rcl
add
cmc
push
out
sub
dec
mov
cmp
scas
adc
mov
imul
push
cmp
cmc
adc
pop
repnz
lds
imul
jno
and
xchg
mov
jmp
and
sbb
retf
cmps
out
push
inc
neg
test
js
lds
lods
leave
mov
cld
or
sbb
add
mov
sbb
or
dec
and
xor
mov
fdiv
icebp
mov
jl
shr
out
push
iret
sub
adc
inc
aam
add
jno
das
xor
stc
xor
pop
aam
or
push
sub
pop
addr16
mov
push
sti
es
ss
xchg
fs
add
pop
sub
into
jecxz
inc
jge
inc
prefetchwt1
or
push
outs
data16
cmp
cli
mov
mov
pop
mov
jmp
or
and
push
jg
adc
mov
jns
pop
sbb
imul
push
jno
fs
and
add
xor
xor
out
mov
call
aas
mov
sub
xchg
mov
xor
bound
sub
call
lds
stos
dec
cmp
or
xor
dec
test
mov
dec
pop
mov
leave
test
in
push
adc
add
test
cmp
mov
jno
sbb
test
cli
inc
cmp
fcom
dec
sub
xchg
ds
xchg
sub
mov
call
fadd
add
(bad)
mov
pop
pop
fucomp
push
push
xor
aad
nop
retf
cld
(bad)
and
dec
jg
test
out
jle
inc
repz
push
imul
dec
or
scas
fmul
in
push
mov
jmp
adc
mov
stc
retf
shr
mov
xor
test
dec
dec
mov
add
xchg
les
mov
jl
add
jbe
imul
xor
xor
ror
pop
cmp
lods
mov
ds
push
aam
sbb
mov
add
mov
mov
xchg
aam
jmp
nop
xor
jns
loopne
dec
jmp
loope
lock
adc
shr
cmps
fadd
cmp
call
push
jo
add
mov
sub
jmp
shr
and
jno
mov
lds
adc
xor
pusha
mov
jno
jno
cdq
fwait
jge
test
cmpps
lahf
outs
clc
xchg
mov
pop
cmc
sbb
mov
and
xchg
pusha
and
xchg
pop
repnz
dec
pop
or
and
movs
cmp
dec
scas
into
mov
xor
pop
lods
popa
mov
mul
inc
sub
cwde
in
mov
aas
inc
or
(bad)
ds
dec
ins
jns
popf
inc
lods
test
inc
fild
data16
into
xor
xchg
movs
push
ss
cmp
fsin
fcom
test
and
dec
addr16
xor
xchg
mov
jmp
jmp
nop
push
inc
jns
js
push
pop
push
push
push
arpl
in
xchg
lock
add
dec
mov
inc
mov
popa
cmc
inc
icebp
jmp
pop
hlt
dec
add
bound
xchg
lahf
out
mov
cmp
dec
leave
test
sti
cli
hlt
fdivr
inc
add
xor
and
adc
add
test
cmp
rol
cli
add
xchg
not
js
mov
pop
ror
mov
xchg
or
nop
cmp
retf
es
mov
js
div
inc
sbb
inc
dec
out
dec
or
in
mov
les
(bad)
into
dec
add
inc
cmc
test
lods
call
inc
mov
addr16
inc
push
lea
dec
ds
call
aam
hlt
je
fld
dec
inc
inc
inc
sbb
inc
jmp
sbb
mov
mul
xor
sbb
aaa
clc
inc
or
mov
jo
and
std
pop
test
repnz
stos
movs
cmp
push
adc
inc
sbb
push
xchg
mov
ret
add
mov
int3
retf
inc
cmp
out
ja
cmps
stos
test
pop
push
jmp
xor
arpl
mov
jle
pop
leave
push
loopne
loop
cmp
js
inc
test
dec
jecxz
xor
sbb
add
in
rcr
cli
or
and
ja
retf
pop
jp
inc
xchg
sub
mov
pop
clc
cmp
test
dec
loopne
dec
repnz
scas
inc
scas
inc
dec
pop
dec
sub
sub
int
xchg
cmps
adc
dec
mov
das
aas
inc
xchg
lods
stos
scas
and
push
dec
fidivr
cbw
sub
cmps
inc
push
scas
movs
push
aas
cmp
sar
pop
clc
and
sar
data16
(bad)
jmp
ds
sti
(bad)
cmp
inc
repz
stos
leave
lods
inc
ret
dec
fadd
gs
scas
xchg
in
jmp
cmp
nop
push
loope
jl
mov
cs
in
stos
jnp
inc
mov
inc
dec
bound
jbe
inc
inc
push
cld
mov
test
cmp
xor
popf
arpl
xchg
test
mov
jmp
jl
mov
jns
pop
xchg
xor
mov
fld
mov
mov
xor
inc
inc
mov
push
cmp
out
je
xor
mov
xor
mov
outs
test
xor
jg
ja
(bad)
mov
or
test
jae
and
fs
sub
mov
out
pop
call
ja
arpl
cmc
out
pop
mov
pusha
push
lea
inc
out
xor
jmp
cmc
outs
xor
mov
sti
pop
ror
dec
mov
mov
push
jle
push
pop
xor
out
cmp
pusha
sub
xor
out
xlat
cmp
and
popa
fldenv
leave
ret
cmp
adc
add
out
xchg
sbb
inc
(bad)
in
stos
sahf
add
inc
xchg
jno
cmp
fidiv
enter
push
xchg
aaa
mov
out
test
inc
jb
daa
sbb
fisttp
setns
inc
shl
jne
nop
sahf
inc
and
pop
inc
inc
iret
nop
jo
rdpmc
sbb
ffree
fcom
jmp
jae
mov
add
daa
shr
cdq
pop
gs
mov
dec
les
fild
push
jb
pop
inc
push
aas
sub
inc
lock
push
push
and
aam
cs
jb
leave
or
mov
cmp
and
xor
aas
mov
sbb
add
xor
(bad)
nop
es
movs
cmp
sub
sub
das
outs
out
retf
scas
dec
jb
sbb
ds
inc
out
repz
rcr
fisub
inc
std
and
mov
test
test
mov
imul
inc
(bad)
ins
and
adc
adc
scas
call
inc
add
stos
adc
iret
xlat
jg
sub
mov
lods
adc
xchg
jo
dec
loopne
xchg
aad
out
jns
cmp
cmp
xor
inc
stos
call
or
nop
inc
push
bound
mov
sbb
cmp
inc
adc
sahf
cmp
call
mov
add
out
xchg
sub
mov
push
push
sub
add
cli
cmp
movlhps
sbb
or
pop
popa
(bad)
cmp
pop
mov
fwait
mov
retf
pop
in
pop
cmp
shr
mov
push
mov
xor
pop
jle
inc
aad
jbe
mov
je
cmp
out
inc
xor
push
arpl
icebp
mov
mov
fiadd
adc
add
loop
call
js
lds
mov
or
mov
leave
inc
mov
and
jp
jae
shl
pusha
imul
out
xor
add
scas
enter
cmp
mov
(bad)
and
mov
popa
cmps
inc
xchg
mov
rol
add
cmps
inc
inc
movs
inc
outs
mov
cmps
inc
xchg
inc
test
xchg
mov
loopne
sahf
mov
inc
xchg
test
inc
jmp
int
outs
xchg
push
push
inc
mov
into
xor
inc
test
mov
gs
lods
or
das
fmul
adc
(bad)
fiadd
cmp
ins
push
mov
test
popa
fidivr
jmp
mov
push
shl
mov
call
(bad)
cmp
imul
push
ss
inc
fmul
shl
adc
push
inc
or
sub
ret
adc
cmp
push
pop
sbb
dec
cmp
add
mov
sub
jg
cld
lds
outs
jnp
inc
xchg
push
neg
ficom
aaa
push
(bad)
inc
ins
push
enter
loopne
push
sbb
inc
mov
adc
inc
push
mov
mov
sub
ud2
pop
add
and
adc
cmp
push
inc
pop
mov
mov
xlat
ja
cmp
scas
mov
inc
jle
ins
pop
add
test
dec
adc
es
pop
push
js
dec
dec
aaa
daa
icebp
xor
fadd
call
inc
push
aam
fstp
dec
pop
inc
add
stc
dec
imul
lea
ret
mov
jb
sbb
not
jnp
gs
retf
sbb
enter
inc
inc
fisttp
dec
rcl
inc
fsubr
push
mov
cwde
test
sahf
mov
(bad)
mov
cmp
pusha
adc
mov
outs
inc
cmp
mov
push
inc
jp
repnz
out
cmps
stos
or
jl
fldl2e
jno
cmp
cmp
cmp
imul
dec
fsub
dec
dec
cld
stos
mov
leave
inc
xlat
loopne
cmp
xrelease
cmp
mov
mov
sub
jns
push
fidivr
add
sar
xchg
js
ror
shl
aas
cmp
test
call
nop
lea
mov
(bad)
jge
and
dec
nop
sbb
cmp
dec
add
aas
rcl
push
ins
xor
xchg
call
adc
sub
ss
jge
popa
mov
out
and
jno
ret
cmp
jb
sub
cli
mov
dec
jbe
aad
cmp
sbb
mov
sbb
mov
jno
jmp
sub
mov
call
dec
les
inc
xchg
aam
cmc
mov
int
fadd
xchg
add
out
lahf
or
cmp
pushf
xchg
add
cmp
aas
pop
sbb
test
or
push
cmp
sub
jge
stc
outs
adc
bound
sub
js
aas
cmp
jno
mov
pop
pop
stc
sar
fld
sti
ss
je
push
push
or
mov
mov
push
ins
sbb
jge
pop
and
jp
xor
mov
mov
cli
and
int
xrstors
adc
arpl
or
ror
ud0
sub
in
int3
inc
(bad)
or
adc
mov
jmp
jle
dec
or
in
xchg
test
stos
(bad)
push
shl
rcr
fst
ret
int
es
mov
mov
ins
je
mov
jns
pusha
popf
adc
or
setnp
jge
sub
add
inc
mov
aas
pop
data16
add
add
xor
scas
xor
pop
test
leave
outs
sbb
shl
pop
mov
add
iret
sub
dec
repnz
jno
mov
into
cmps
jmp
mov
push
cmp
fisttp
jae
test
clc
stc
pop
js
out
pop
mov
xchg
jmp
test
jo
cmps
sub
or
dec
and
inc
int3
cmp
fidivr
xor
jns
and
xchg
inc
mov
clc
fidiv
retf
sahf
test
jle
scas
int
mov
pop
sub
test
jno
in
les
cmp
dec
jmp
jecxz
mov
mov
lds
js
sub
xchg
inc
test
sub
(bad)
aas
sub
int
sbb
cmps
sub
mov
mov
into
jmp
lods
or
sbb
mov
ins
sbb
int3
hlt
mov
mov
pop
push
int3
push
inc
shl
leave
rcr
jno
loope
cmp
shl
js
xchg
xchg
dec
sub
jge
pop
adc
lods
(bad)
jmp
div
cs
lods
jno
test
fadd
mov
arpl
xor
cwde
cdq
sahf
sar
in
mov
cmps
loope
pop
sub
test
out
mov
sub
gs
sub
sbb
jp
pop
pop
xor
or
sbb
mov
cmp
sbb
int3
stos
jns
sbb
fs
lea
iret
mov
nop
sbb
scas
and
jno
jp
fcmovnbe
lods
add
or
test
lods
push
mov
push
rol
(bad)
les
sub
adc
clc
loopne
jbe
push
dec
test
add
push
into
push
xchg
xchg
and
call
scas
sub
jmp
mov
or
aad
scas
mov
pop
repz
jl
mov
jbe
aas
jbe
sahf
mov
sub
push
jns
fwait
jge
in
lods
mov
cdq
mov
not
lock
pop
rcr
int
adc
jl
dec
ret
mov
cmp
cmp
mov
ins
fadd
jg
stos
leave
xor
scas
or
cmp
cmps
mov
xchg
je
mov
dec
out
sub
pop
fs
cmp
aad
sub
in
xor
jno
jo
repnz
mov
cmp
lods
arpl
inc
jmp
jno
add
jmp
cmps
xor
push
mov
pop
inc
xor
mov
cdq
outs
xor
jg
inc
xchg
and
mov
and
push
out
sti
mov
ds
sbb
xchg
push
inc
js
outs
lahf
pusha
test
aad
jne
or
mov
imul
sbb
test
scas
jmp
jns
or
neg
fidivr
pop
js
pop
sbb
(bad)
jmp
pop
js
lahf
lock
fcmovnbe
dec
je
xor
adc
cmp
jge
mov
jno
xchg
sub
push
mov
arpl
and
pusha
or
inc
(bad)
fiadd
sahf
cs
pop
ret
fcmovbe
xlat
mov
dec
mov
call
pushf
mov
cmp
jge
std
out
(bad)
jb
pusha
pop
fs
cmps
sysexit
arpl
out
push
fbstp
mov
sar
jne
cmp
fwait
push
adc
imul
xor
cli
aad
jge
push
js
push
aad
enter
adc
push
dec
test
into
in
imul
in
daa
cld
mov
mov
pop
int
mov
jg
ret
xchg
mov
xchg
(bad)
icebp
inc
jmp
mov
mov
cmp
in
rcl
adc
adc
sbb
js
out
xchg
xchg
push
jmp
jg
jnp
je
fidivr
add
mul
push
mov
xchg
inc
push
loope
das
and
leave
mov
xchg
mul
test
or
aas
inc
enter
ins
ret
xor
and
mov
dec
inc
int
inc
sub
icebp
sbb
jmp
sar
mov
jp
pusha
push
int3
jl
and
mov
inc
sbb
pop
hlt
iret
pop
fadd
mov
jmp
dec
cmp
mov
shl
cmp
into
mov
push
adc
jmp
call
mov
inc
repz
mov
and
inc
(bad)
dec
test
sub
mov
in
lahf
mov
in
or
jg
stos
lods
cwde
xor
pop
and
xchg
jne
jo
ror
mov
mov
fidivr
(bad)
jo
in
mov
or
jb
cmp
dec
adc
lods
fxch
mov
xchg
cmp
dec
jbe
(bad)
std
mov
test
jmp
frstor
inc
mov
fld
xor
push
mov
test
and
sahf
imul
inc
inc
mov
out
rol
ja
aad
jb
xchg
aaa
pop
sbb
inc
call
jl
and
inc
daa
sbb
(bad)
imul
das
inc
cld
mul
cmp
cmp
call
and
push
jle
dec
aam
repz
mov
push
pop
inc
stc
and
into
(bad)
jp
pop
sbb
add
inc
es
cmps
rol
std
into
xor
mov
je
int
test
or
imul
inc
mov
adc
push
mov
mov
cmp
enter
js
cmp
packuswb
cmp
mov
(bad)
fsincos
inc
ret
push
mov
cmp
or
push
shl
add
call
dec
and
js
push
cdq
and
xlat
sbb
mov
shl
dec
xor
sub
xchg
jmp
out
sub
sub
or
pop
inc
push
xor
jne
into
push
inc
xchg
stos
mov
cmp
and
inc
movs
scas
sub
out
push
aas
fcmovb
dec
push
cmp
push
adc
jmp
call
lods
cmp
pop
push
pop
aas
mov
test
jo
(bad)
inc
cmp
push
adc
cdq
sub
xchg
mov
scas
inc
pop
push
xor
retf
add
hlt
inc
cmp
in
fst
push
inc
lock
inc
rcr
out
or
adc
mov
xchg
or
mov
mov
xor
mov
cmp
retf
adc
mov
xchg
mov
or
aad
inc
mov
stos
push
int3
inc
(bad)
loopne
outs
leave
pop
xchg
jb
dec
xor
aad
xchg
xor
inc
or
and
and
fisttp
nop
je
loope
sub
aas
mov
lods
inc
lods
mov
out
cmp
inc
jmp
or
mov
fisub
inc
fistp
ds
dec
inc
inc
cwde
inc
sbb
xor
ja
inc
push
push
sbb
xchg
inc
ret
mov
xor
mov
cmps
dec
inc
cmps
in
ins
inc
sub
fdivr
lods
sbb
fld
(bad)
(bad)
jl
xchg
push
mov
int3
in
fst
(bad)
jl
and
inc
inc
in
cld
popa
pop
out
outs
std
(bad)
sub
dec
les
jmp
cmc
push
mov
add
(bad)
out
or
stc
out
and
xchg
rcl
mov
les
jmp
inc
lock
mov
xchg
test
pop
int
and
loop
cmps
inc
mov
mov
pop
ret
xor
(bad)
inc
mov
mov
clc
(bad)
jl
xor
sbb
pop
rol
mov
pop
jae
(bad)
ja
add
xor
outs
jno
cmp
fadd
pop
inc
sbb
lock
test
inc
stc
jne
xchg
bound
call
movs
loopne
push
into
add
int
mov
cwde
sar
mov
mov
and
repnz
mov
push
xor
cmp
nop
jns
inc
push
xchg
mov
or
lahf
fsubr
mov
or
cmp
jge
shl
push
bound
movs
faddp
cmp
loop
icebp
fs
lods
jo
popa
std
(bad)
imul
jmp
test
aas
lahf
and
aas
out
sbb
scas
mov
clc
imul
(bad)
pop
aaa
(bad)
sub
dec
push
mov
sub
call
pop
xor
retf
xor
fisubr
ss
sti
mov
cmp
lods
ficom
mov
lods
or
aam
scas
(bad)
xchg
push
lods
push
shl
jnp
sub
push
(bad)
jg
ret
inc
shl
jg
and
xchg
sar
ja
mov
push
loop
ret
outs
push
leave
xor
mov
int3
xor
or
xor
inc
out
bound
in
push
(bad)
rcr
hlt
or
inc
fdiv
mov
mov
mov
fucom
cmps
ins
(bad)
sub
cdq
fadd
rcl
cmp
pop
pop
inc
ds
les
es
loopne
fadd
jle
in
ror
push
sub
(bad)
cmp
jno
xchg
or
sub
(bad)
sbb
cld
pop
rcr
jle
and
call
int3
retf
mov
cmps
jne
push
test
sbb
xor
call
stos
mov
dec
lea
jecxz
adc
loope
fsub
sbb
test
(bad)
mov
jl
jmp
out
ret
mov
sbb
nop
lock
(bad)
sub
add
enter
ds
popf
jo
sub
or
pop
or
or
add
cmp
mov
add
loopne
test
ret
cli
inc
es
call
or
add
mov
mov
outs
stos
inc
mov
pop
push
out
dec
test
(bad)
mov
int3
adc
out
jne
mov
adc
mov
inc
fiadd
lods
lods
xchg
dec
int
test
add
inc
sub
jo
movs
popf
popa
mov
sar
in
lods
jns
adc
xchg
fistp
sahf
cmp
mov
inc
xchg
test
out
lods
into
inc
inc
and
fidivr
clc
push
loope
jmp
xor
pop
sbb
xor
push
stos
inc
or
cmp
inc
rol
fld
inc
aad
scas
les
iret
xor
aaa
add
js
imul
jno
inc
arpl
sub
and
xor
xor
adc
popa
push
fld
jno
pop
adc
aas
call
stos
mov
cli
into
xor
adc
cmp
add
dec
sahf
mov
mov
and
cld
push
cmp
pop
fcmovnu
adc
and
es
sahf
sub
and
mov
fs
in
xchg
dec
(bad)
jno
iret
push
out
mov
adc
mov
add
ins
jle
inc
sub
retf
rol
jno
(bad)
loopne
mov
bound
fbstp
sti
call
sub
jno
stc
out
jae
sar
pop
mov
js
or
and
sub
call
jns
xor
cmp
push
pop
jle
mov
inc
shl
scas
leave
mov
xchg
test
aas
cmp
xor
cli
push
jns
xor
push
push
mov
sub
ins
icebp
inc
jnp
sub
jns
mov
fsubr
mov
jo
mov
shl
dec
mov
sahf
std
or
push
rol
scas
push
je
jmp
stos
jge
cld
cmp
inc
js
pusha
push
cdq
add
xchg
pop
mov
(bad)
pop
jbe
mov
enter
sbb
outs
imul
int3
sbb
mov
mov
iret
jns
xor
dec
xchg
and
clc
movs
jae
je
adc
arpl
jnp
hlt
mov
es
in
jnp
stc
(bad)
dec
mov
or
jbe
pop
inc
cmp
imul
xor
jnp
mov
jb
cmp
push
daa
loop
mov
cmp
stos
pop
xchg
jae
push
cmp
jp
xchg
jl
cli
test
jmp
cli
jno
cmp
mov
mov
aaa
inc
je
in
pop
inc
ret
xchg
retf
push
or
push
fucomi
fldenv
fcom
or
cli
dec
xor
cld
add
pop
fidiv
pusha
jns
addr16
mov
cmp
sub
std
repnz
pop
sub
mov
int
mov
or
xchg
fidivr
fs
add
pop
popa
jl
push
mov
jge
bnd
(bad)
jno
outs
jmp
loop
cs
js
mov
sbb
pushf
lahf
xor
fwait
pop
cmp
lods
add
cmp
and
and
data16
mov
jno
fwait
loope
loop
aam
(bad)
ja
jmp
jmp
ja
push
(bad)
shr
cmp
imul
jp
call
in
retw
retf
add
pop
pop
and
mov
inc
pop
dec
push
inc
loopne
mov
mul
sbb
or
dec
push
xchg
std
mov
inc
pxor
mov
loopne
dec
mov
stos
cmp
dec
xlat
cmp
push
push
(bad)
push
scas
mov
jl
inc
adc
push
daa
inc
sbb
aam
cmp
mov
test
out
shl
in
sub
or
pop
lock
add
cmc
mov
push
jle
sub
shl
cmp
ds
imul
adc
(bad)
mov
inc
mov
or
adc
cmp
daa
mul
inc
nop
jg
mov
test
jae
mov
cmp
(bad)
inc
inc
xor
sub
imul
and
xchg
jno
fmul
jg
cmps
sbb
sti
cmp
in
arpl
les
cs
pop
shl
mov
jmp
xor
test
cmps
fwait
pop
cmp
retf
mov
push
xchg
xchg
mov
xchg
sub
repz
ss
mov
cs
cmp
add
rol
dec
pop
jl
inc
(bad)
stc
mov
cmp
retf
jae
test
inc
mov
cmp
popa
(bad)
cli
out
adc
ret
cmp
cmps
inc
mov
jmp
lds
ss
push
(bad)
pop
sar
jmp
fstp
sub
jmp
leave
pop
int3
push
mov
int
(bad)
pop
xchg
imul
fiadd
rcl
jns
dec
xchg
cmp
mov
adc
sbb
shl
dec
add
sbb
cld
jmp
pop
push
idiv
bound
xor
adc
inc
and
jge
in
pop
sub
call
xlat
jle
popa
dec
test
fisub
sub
mov
fst
nop
stc
lods
(bad)
stc
mov
adc
dec
dec
add
jle
in
pop
mov
push
out
adc
stos
test
icebp
mov
sahf
xor
mov
cld
and
sbb
lods
test
cmp
call
inc
add
and
loope
shl
mov
jmp
xor
je
fadd
jecxz
and
or
test
mov
mov
and
fwait
shr
and
mov
adc
mov
je
jmp
call
mov
mov
(bad)
pushf
or
shr
mov
ficomp
jge
jne
in
pop
cmp
lds
daa
pushf
jmp
mov
(bad)
sbb
sbb
jb
leave
sub
and
cmp
sub
imul
push
cmp
jge
shl
aad
mov
inc
jo
bound
test
pop
sub
ds
js
add
cmps
mov
sbb
int3
scas
loope
xchg
or
stc
jge
stos
loope
lds
sbb
sub
bound
inc
call
shl
add
es
cmps
lahf
jns
pop
dec
jp
les
scas
add
jmp
inc
sti
repz
jno
jg
mov
sti
sub
shl
mov
stos
adc
sub
xor
rcl
pusha
iret
retf
mov
daa
xchg
out
push
icebp
stc
mov
mov
xor
cdq
and
mov
mov
(bad)
ins
sub
pop
lea
cmp
mov
push
adc
pop
cmp
jge
aam
adc
pop
dec
add
jmp
adc
mov
pop
xor
punpckhbw
aas
mov
jne
jmp
mov
xchg
stos
dec
and
xor
imul
lods
cli
popa
test
stc
out
jno
repz
iret
inc
pop
mov
sbb
cmp
cli
cmp
sub
lea
xor
imul
or
and
pop
xchg
cdq
call
sbb
inc
lods
ret
mov
jle
pop
jmp
fdiv
xor
or
pop
lahf
adc
data16
mov
xchg
rcr
sbb
jmp
add
icebp
ret
test
and
rcr
and
jmp
inc
push
nop
test
pop
outs
imul
adc
jbe
sub
icebp
add
ss
loope
inc
mov
cmp
cmps
jge
xor
aas
pop
jns
dec
or
in
jmp
ss
jno
lods
jmp
outs
sub
das
ret
pop
adc
inc
pop
ret
mov
push
and
sar
inc
and
ret
fsub
and
adc
das
ret
add
(bad)
(bad)
sbb
pmaxsw
and
imul
call
sub
and
cmp
sbb
jo
jns
mov
js
jb
leave
repnz
fxtract
mov
mov
js
xor
test
mov
pop
into
mov
mov
sub
div
add
lds
mov
out
cmp
lods
xchg
scas
xchg
xor
bound
xlat
mov
mov
sti
call
sbb
or
inc
lahf
pop
popa
mov
fldenv
and
fdivr
or
xor
jl
cmp
lahf
retf
ds
dec
fimul
cs
fbld
xor
js
data16
jo
rol
and
icebp
fcomi
sbb
cmp
inc
inc
outs
cwde
inc
mov
inc
cmps
movs
ret
sbb
jecxz
push
add
hlt
ret
addr16
jp
adc
cmp
jmp
mov
push
cmp
and
inc
gs
in
popf
xchg
pop
jmp
push
xor
inc
push
loopne
inc
in
fcom
(bad)
mov
pop
icebp
pop
mov
pusha
dec
inc
inc
loop
mov
inc
add
mov
jecxz
leave
(bad)
sti
jmp
cmps
mov
fild
bound
inc
and
pop
add
cmp
(bad)
or
or
jns
clc
jl
dec
data16
pusha
test
push
aad
pop
repnz
dec
scas
movs
scas
mov
push
dec
mov
inc
xchg
mov
cmps
repnz
iret
fst
inc
cmc
pop
sbb
mov
outs
add
mov
inc
std
int
jmp
clc
in
inc
and
push
lods
jno
sub
out
sbb
xchg
and
les
ins
mov
mov
std
cmp
fiadd
fs
xchg
xchg
les
and
xor
inc
pop
retf
add
cli
push
push
mov
shl
and
sbb
mov
cdq
test
sub
or
jns
into
js
mov
fs
stc
cmp
fsubr
lahf
outs
(bad)
stos
pop
fisttp
cdq
cld
fcom
ret
jne
fs
jge
pop
sahf
scas
xor
pop
mov
xor
mov
adc
and
add
pop
ss
cmp
stc
ret
and
xor
sar
outs
scas
xor
stos
test
scas
xor
lahf
popf
stos
push
cmps
add
fst
int
sbb
outs
imul
sbb
jne
jl
push
ror
xchg
test
inc
test
cmp
adc
add
push
push
div
jp
dec
je
lahf
push
pop
xor
push
fmul
push
neg
frstor
inc
dec
cmp
mov
jge
fdivr
xor
mov
and
adc
imul
loope
pusha
mov
neg
add
pushf
xchg
mov
stos
or
scas
cmps
jae
mov
inc
push
(bad)
and
xchg
mov
push
inc
adc
mov
xchg
or
push
cmp
mov
push
cdq
(bad)
(bad)
rcl
inc
int3
(bad)
enter
push
jecxz
ffreep
jp
fxch
pop
sbb
cmp
sub
sub
mov
cld
popf
pop
ret
pop
push
aaa
inc
inc
aas
jbe
test
out
stos
cmp
popf
mov
mov
mov
or
push
dec
sub
xor
cmp
dec
lahf
mov
mov
jb
cmp
xchg
mov
pop
add
adc
loop
push
dec
outs
adc
sbb
std
enter
faddp
cmp
in
cli
or
dec
scas
cmps
mov
inc
out
repz
sbb
fmul
push
pop
test
adc
stc
test
rol
sub
dec
xor
mov
inc
repnz
or
stc
xchg
sti
jno
push
and
mov
or
adc
add
hlt
out
(bad)
xchg
push
xchg
ds
and
lds
sub
bound
cmp
fiadd
dec
jne
in
mov
push
or
(bad)
loop
pop
out
xchg
inc
mov
or
outs
popa
adc
dec
mov
jno
neg
and
inc
(bad)
std
mov
adc
fst
clc
hlt
xchg
enter
xor
out
pop
mov
(bad)
call
ds
movs
addr16
inc
mov
jns
jg
outs
pop
cmp
jecxz
ss
and
fiadd
es
cwde
ror
adc
sbb
sar
mov
cld
dec
icebp
xor
mov
mov
(bad)
sub
push
xchg
movs
cmp
cmp
jns
or
pushf
gs
mov
and
repnz
aaa
mov
pop
ss
stos
in
or
inc
xchg
cmps
loopne
lods
pop
test
into
je
rcr
addr16
and
popa
adc
xor
jns
cdq
cmp
adc
cmp
or
cmp
mov
data16
loope
mov
out
mov
jg
out
sub
dec
jle
xlat
sub
jb
cmp
imul
and
jmp
std
dec
sbb
data16
sbb
add
loope
stos
xchg
jae
sbb
sysexit
cld
sub
lds
les
leave
jmp
lock
dec
pop
sub
push
sbb
bound
loope
mov
jno
(bad)
sub
adc
aaa
fisttp
out
sub
mov
pop
fldenv
inc
aas
add
loopne
jl
cmp
loop
pop
xlat
jge
test
push
and
or
or
test
leave
ds
sbb
leave
jge
or
xchg
add
mov
push
mov
and
dec
movs
mov
test
mov
mov
jbe
adc
jno
test
ror
jo
mov
retf
mov
fdiv
adc
ja
jmp
cmp
lea
addr16
or
clc
and
loopne
sub
add
hlt
jne
and
and
mov
mov
pop
push
fs
lds
idiv
sti
cdq
clc
mov
mov
sub
pop
fs
mov
je
stc
jns
test
iret
nop
movsx
xchg
(bad)
xchg
jns
out
mov
cmp
mov
lahf
inc
jae
(bad)
rcr
cmp
loope
cdq
ins
mov
inc
es
(bad)
vmovlhps
xlat
cmp
icebp
inc
(bad)
push
(bad)
cwde
punpckhdq
xchg
inc
aaa
xor
lods
pushf
das
and
mov
sub
fld
mov
add
stos
ds
lods
sar
or
ins
sub
dec
je
sbb
repz
movs
push
ds
inc
cmc
sub
fstp
lods
pop
xchg
test
cmp
(bad)
loopne
jne
ss
jmp
js
aas
jp
ins
inc
cmp
std
add
push
push
movs
cmp
add
call
es
out
jmp
(bad)
std
out
adc
or
adc
xor
mov
test
dec
cmp
sub
call
mov
add
out
(bad)
jo
inc
outs
dec
iret
xlat
js
jecxz
push
pop
scas
inc
cmp
lds
xor
ror
fnstenv
test
mov
dec
cld
(bad)
aam
inc
pop
call
dec
lea
lods
push
cmc
mov
jecxz
pop
jecxz
mov
add
lahf
lea
cmp
xor
dec
pop
add
ins
jbe
push
shr
dec
add
dec
or
fcomi
pop
popa
cld
mov
out
test
cmp
pop
xor
mov
popf
inc
xlat
sbb
jnp
xor
dec
inc
cld
and
or
enter
push
mov
pop
jmp
xor
xchg
add
mov
xor
mov
inc
shr
fcos
in
xor
mov
pop
ret
cmp
pop
les
push
jns
cmps
cmp
add
retf
cmp
shl
dec
daa
and
cmp
jno
sar
popf
out
gs
sub
xor
pop
mov
stc
cld
int
iret
cdq
ret
retf
xlat
repz
fistp
and
push
mov
mov
js
sbb
sbb
cmp
out
jecxz
call
addr16
test
ja
cmp
xchg
mov
xchg
push
and
mov
call
add
cmp
gs
js
inc
fild
loope
inc
jge
(bad)
stc
pop
addr16
or
push
jns
lds
stos
push
or
mov
mov
test
or
or
xchg
hlt
mov
(bad)
fdivr
xlat
in
inc
jmp
pop
inc
pop
retf
call
hlt
arpl
dec
nop
mov
jne
or
inc
xchg
push
jo
cmps
or
cdq
inc
mov
add
dec
ficomp
(bad)
cmp
or
cmp
add
cmp
lock
mov
sbb
dec
dec
js
aad
cmp
add
fimul
std
ftst
test
repz
and
push
xchg
mov
inc
jb
mov
add
inc
fs
iret
xor
scas
outs
push
pop
retf
pop
xchg
jp
push
sar
xor
dec
pop
push
inc
in
fdiv
leave
or
xor
(bad)
xor
dec
std
sahf
pusha
sar
mov
and
inc
ins
xchg
ret
pop
int
bound
push
lahf
mov
xchg
add
ins
stc
hlt
retf
sbb
inc
shl
push
inc
add
xor
xchg
or
scas
je
cs
fistp
jecxz
cmp
cmc
inc
movs
push
nop
pushf
lods
dec
jno
inc
fdivr
push
popa
mov
cmps
xor
mov
repz
test
lock
dec
pop
inc
add
repnz
jae
fnstsw
js
or
inc
xchg
mov
aas
jbe
jle
lds
xchg
repnz
dec
dec
inc
movs
xchg
iret
cmp
jne
mov
or
cmp
mov
pop
sbb
mov
out
xor
xchg
add
test
cmp
lds
inc
loope
popa
aam
imul
in
mov
or
lahf
(bad)
mov
loope
dec
sub
cmc
lds
adc
rcr
mov
or
inc
pop
sub
imul
xchg
mov
jl
outs
and
inc
imul
mov
push
aad
dec
popf
inc
jp
je
sub
adc
(bad)
fdivr
xchg
gs
cld
jmp
mov
int3
mov
xor
mov
test
jno
daa
inc
sbb
stos
jnp
out
imul
test
dec
das
xchg
in
or
sub
(bad)
lods
inc
push
icebp
inc
sar
xor
sar
ja
push
inc
sub
inc
test
jecxz
inc
push
addr16
aad
pop
pop
pop
call
push
sub
mov
jnp
sahf
retf
inc
(bad)
mov
popf
mov
aad
inc
data16
stc
pop
cmps
inc
jmp
and
sub
bound
aaa
push
dec
jp
mov
xchg
pusha
fdivr
mov
push
sbb
xchg
dec
adc
out
(bad)
inc
jo
sub
sbb
jg
cld
mov
mov
aas
cmp
(bad)
std
stc
inc
pop
push
adc
fnstenv
lds
fiadd
cmp
push
dec
loopne
or
push
cmp
int3
or
xchg
pop
mov
sub
(bad)
mov
push
and
out
es
or
iret
stos
sar
sub
inc
leave
daa
adc
mov
data16
in
dec
mov
inc
sar
sbb
inc
dec
scas
rol
sbb
test
sub
inc
xchg
(bad)
hlt
int
cmp
retf
xor
fxch
sbb
test
popf
mov
outs
std
pushf
pop
mov
and
inc
sub
xor
cs
inc
cmp
fwait
jge
push
rol
and
or
add
test
and
add
lods
out
sub
mov
mov
jmp
push
enter
jnp
or
popf
lods
sbb
mov
ret
cmp
loopne
jmp
fwait
push
cdq
push
sub
into
sar
arpl
mov
jge
xchg
out
dec
fldcw
jp
inc
mov
pop
dec
jmp
cs
ja
mov
xchg
enter
cmp
pusha
mov
inc
push
inc
ret
cmp
jp
mov
and
xchg
pop
and
aaa
jae
inc
or
sub
dec
mov
dec
adc
add
jo
fstp
push
mov
inc
mov
(bad)
inc
lea
ret
ds
je
bound
fild
cmovns
inc
push
lods
or
pop
pop
inc
loop
cmp
jg
mov
jle
push
xor
mov
(bad)
fcomp
cmp
(bad)
out
into
pop
or
(bad)
sti
inc
pop
mov
pop
inc
neg
rol
nop
adc
sub
adc
aam
inc
pushf
stos
call
sar
and
jne
add
or
repz
pop
mov
inc
xchg
xor
hlt
inc
xor
mov
loope
and
cmp
inc
push
jg
pop
fwait
push
mov
jns
retf
push
sub
push
xchg
scas
jo
push
nop
inc
sub
out
pop
or
cmp
aas
inc
add
mov
jmp
das
xor
movs
ds
les
into
cmp
shr
sbb
cmp
call
(bad)
fistp
fidivr
shl
cmp
adc
sti
cmp
mov
mov
retf
jecxz
cdq
enter
dec
lods
dec
aas
jb
mov
int3
(bad)
adc
fmul
cmp
leave
push
lods
repnz
(bad)
iret
xchg
jo
jp
pop
adc
out
shl
int
mov
push
leave
push
retf
arpl
jmp
push
xchg
or
int
xor
in
dec
xor
jns
ja
sbb
scas
mov
fst
inc
and
out
lods
imul
adc
pop
lea
out
and
retf
jp
xor
cmp
(bad)
cmp
movs
(bad)
into
popa
out
cmp
and
cli
push
jno
mov
cmp
stos
fisubr
fist
call
cmp
mov
mov
fisttp
inc
jne
cmps
addr16
xor
in
xlat
adc
pop
xor
aam
xchg
mov
adc
jb
mov
out
hlt
cmp
jno
mov
repz
xor
retf
in
inc
jl
jle
jp
mov
int3
fistp
dec
mov
sbb
data16
imul
xor
or
mov
xchg
xchg
test
add
mov
je
test
ror
repnz
jmp
mov
inc
inc
add
xchg
add
ins
xor
jmp
cmc
push
or
cld
mov
inc
std
sahf
pop
popa
sti
ds
mov
loop
push
push
lock
cmp
xor
xor
aaa
adc
mov
cmp
popa
shl
inc
inc
push
(bad)
sti
mov
lock
inc
rcr
inc
add
lods
cld
inc
and
dec
std
or
push
pop
dec
add
sub
sti
in
sbb
dec
addr16
mov
inc
ror
cmp
ss
cmp
sbb
inc
cli
fistp
inc
or
cmp
repnz
push
inc
popa
sub
in
mov
call
fld
lods
std
clc
popf
fadd
sbb
cli
popf
adc
dec
inc
call
retf
inc
sbb
jb
lods
mov
dec
js
sbb
clc
retf
xchg
and
aas
aam
mov
out
xlat
sbb
xchg
mov
add
jl
stc
inc
dec
(bad)
dec
movs
inc
xchg
retf
mov
dec
(bad)
mov
das
sbb
dec
add
sub
retf
(bad)
rcl
dec
daa
out
inc
or
fnstenv
inc
aaa
fs
invd
rdmsr
out
aaa
inc
pop
das
cs
lds
neg
or
jbe
inc
pusha
mov
scas
xor
enter
int3
cmp
mov
ret
(bad)
scas
mov
pop
adc
adc
xor
out
or
cmp
xor
dec
ja
inc
aad
fidivr
iret
loop
imul
and
in
mov
fsub
jne
push
jo
inc
mov
jns
outs
jl
push
jecxz
xchg
inc
mov
jno
jne
lods
cmp
test
inc
xor
in
inc
push
and
mov
adc
jp
les
retf
imul
sbb
in
retf
mov
leave
xchg
xchg
mov
and
dec
(bad)
bound
retf
push
sbb
(bad)
xor
push
leave
push
into
xchg
sub
jno
imul
stos
aaa
nop
jns
inc
inc
clc
leave
and
or
jl
dec
or
in
mov
popf
icebp
push
and
mov
or
sbb
fisttp
fmul
sbb
add
sbb
cmp
rol
mov
call
lea
lea
cmp
inc
cmp
push
push
ds
mov
mov
sbb
cli
mov
mov
es
mov
inc
pop
push
xchg
cmps
cmp
loope
sahf
(bad)
cmp
rcl
in
rcl
push
mov
jno
sbb
sbb
mov
fimul
out
inc
jmp
loope
(bad)
(bad)
push
sbb
scas
aas
fwait
add
movs
bound
fs
pop
fucom
jns
aad
mov
icebp
mov
lods
push
jmp
or
out
ror
jmp
xor
xor
jp
leave
inc
dec
nop
and
cmp
mov
pop
out
mov
les
(bad)
xchg
sbb
daa
inc
scas
jmp
lock
adc
or
add
aad
nop
cli
enter
adc
push
and
test
sub
jge
cmp
in
test
pusha
xlat
add
mov
aas
inc
bound
and
mov
push
adc
enter
push
fwait
data16
xchg
xchg
lods
dec
jne
cmp
sub
movs
jbe
mov
mov
or
cmp
xor
aaa
cmp
xor
inc
mov
jnp
mov
cmps
imul
xor
mov
out
cmp
xchg
push
push
inc
pop
jmp
call
add
call
dec
inc
pop
pusha
jae
jmp
(bad)
aas
enter
cmp
outs
shl
adc
sbb
inc
adc
add
movs
pop
jae
pop
pop
mov
jb
push
inc
(bad)
jns
ret
or
mov
xor
les
mov
xchg
test
xor
(bad)
and
inc
ss
dec
scas
daa
dec
adc
clc
cmp
aad
fild
iret
fst
outs
lods
dec
jle
repnz
pop
inc
mov
pop
fxch
push
xor
jp
mov
bound
mov
lods
aad
sub
add
xlat
hlt
cmp
push
addr16
test
dec
(bad)
call
(bad)
out
shr
mov
xchg
dec
jb
retf
fnstcw
jge
and
sti
push
cmp
fsubr
inc
add
jno
aaa
ror
adc
jb
and
shl
inc
sar
mov
xchg
repnz
mov
or
sub
jo
nop
inc
jmp
push
cmp
adc
leave
out
cmp
inc
xchg
pop
pop
sub
outs
mov
xchg
mov
call
cmp
pop
movs
arpl
mov
ja
mov
lods
mov
pop
fsubr
xor
mov
inc
aaa
sar
(bad)
call
cmp
outs
div
add
shl
lods
js
daa
adc
push
std
push
xchg
mov
(bad)
and
and
sub
in
cmp
cmps
(bad)
idiv
popf
cdq
pop
push
sbb
out
bound
scas
cli
lods
adc
lock
push
in
xchg
ror
push
pop
inc
add
cmp
add
jns
cmp
cmp
pop
push
inc
sahf
ds
mov
jmp
in
sbb
or
cmps
mov
or
and
int
sahf
stos
outs
push
mov
ret
in
cli
out
rcl
xchg
test
mov
xor
aas
and
mov
(bad)
xlat
inc
and
inc
scas
xchg
mov
jle
arpl
or
in
cmp
cmp
es
or
rcl
repnz
inc
pop
nop
sub
inc
cmp
and
or
jle
fild
imul
mov
cmp
push
jnp
fdiv
inc
add
sub
adc
fmulp
or
push
xchg
outs
movs
ds
add
push
jle
push
inc
xchg
add
pop
inc
fnstcw
aam
inc
jmp
mov
sub
push
cmp
aaa
sbb
and
and
in
cmp
fdiv
retf
shl
(bad)
icebp
xor
jl
mov
or
mov
cmps
fimul
iret
mov
mov
cmp
(bad)
xor
lods
sbb
jmp
aad
mov
lods
push
pop
pop
cmp
retf
cmp
dec
jne
inc
jmp
xor
mov
adc
mov
dec
nop
in
stos
retf
arpl
test
inc
dec
mov
out
or
jns
sub
inc
pop
jecxz
fwait
pop
inc
xchg
cmps
pop
and
mov
out
fdiv
popf
std
imul
into
sub
imul
jmp
xor
popf
stos
ds
ret
or
in
sbb
cli
mov
pop
cmp
sbb
ds
gs
nop
inc
push
rcr
adc
or
or
and
mov
xor
adc
test
inc
stc
shl
lds
xchg
cmps
test
pop
aam
jl
sbb
test
sub
inc
push
ja
dec
aaa
or
ret
fimul
dec
aam
fisttp
dec
loopne
(bad)
aas
lods
mov
cdq
or
cmp
push
push
loopne
es
jns
xor
les
jnp
xchg
push
jns
out
jb
inc
jnp
imul
in
and
(bad)
dec
add
lods
(bad)
call
mov
mov
mov
stos
mov
sbb
daa
xchg
clc
pop
int3
repnz
movs
cmps
inc
push
cs
mov
inc
add
icebp
loope
out
cld
call
in
inc
sbb
cmp
or
inc
xor
sbb
sub
stos
aam
jecxz
mov
or
mov
inc
addr16
fsubr
inc
inc
jns
push
fcmovbe
repz
shl
dec
pop
outs
jg
inc
and
loope
ins
add
out
pushf
pusha
retf
push
add
inc
bound
(bad)
fwait
inc
jl
(bad)
mov
out
stc
ins
mov
jecxz
inc
cmp
jb
fild
fadd
loopne
pop
aaa
sub
adc
sbb
fbstp
or
sar
cmp
out
loop
pop
sub
jne
xor
jp
cmp
lahf
daa
inc
lock
jge
pop
or
add
xor
add
jnp
cmp
(bad)
ror
ds
pushf
mov
(bad)
dec
or
cli
pop
add
icebp
leave
jno
js
pop
inc
and
mov
dec
idiv
out
inc
shr
jnp
popa
mov
adc
mov
cmps
inc
push
push
push
add
pusha
inc
test
add
aam
cmp
mov
xor
dec
fist
sub
les
mov
mov
ret
add
inc
daa
cwde
dec
jns
inc
adc
cs
or
lods
shr
inc
es
into
xchg
movs
push
sub
in
leave
idiv
pushf
pop
pop
into
xchg
jne
mov
test
dec
and
jge
jp
neg
mov
dec
jb
clc
ret
out
dec
fild
out
not
in
add
inc
ins
ret
and
js
arpl
xchg
pop
and
mov
nop
mov
xor
sbb
sahf
fnstcw
test
les
pop
rcr
je
in
add
sahf
pop
rol
(bad)
test
inc
cmp
sti
mov
jg
enter
inc
mov
das
fidivr
jno
mov
mov
dec
aas
sub
dec
and
dec
or
xchg
add
jb
xchg
inc
pop
jmp
xor
pop
dec
jo
xor
and
das
popa
and
in
cmp
mov
xchg
pop
mov
and
and
enter
ss
cmp
jb
pinsrw
xchg
mov
adc
jae
(bad)
jmp
fadd
in
aam
jl
xor
sar
jno
aas
sbb
xor
mov
dec
and
add
adc
fldenv
dec
nop
sub
mov
add
movs
mov
xor
std
cmp
cmp
mov
stos
push
sbb
xor
dec
fwait
mov
call
cmp
mov
jo
(bad)
cmp
lds
and
mov
adc
mov
dec
adc
and
nop
jp
mov
or
xchg
clc
dec
and
dec
sub
cmps
xor
test
sbb
jns
mov
fcom
or
push
int3
fs
iret
call
sub
add
mov
sahf
enter
xchg
pop
pusha
cmp
test
mov
sbb
mov
out
or
out
sahf
pop
sbb
ret
and
cwde
sbb
leave
rol
sbb
mov
int3
xchg
jge
cmp
mov
jns
rol
mov
addr16
jo
sub
daa
dec
jns
mov
leave
jp
dec
jmp
int3
aad
ret
fcmove
pop
(bad)
cmp
ja
xchg
inc
rcr
test
cmp
inc
retf
push
xchg
xchg
jne
pop
dec
out
push
dec
(bad)
std
pop
loopne
dec
pop
jmp
leave
inc
scas
clc
ss
inc
sbb
jmp
lods
mov
push
ficom
xchg
dec
bound
mov
jmp
call
push
push
int
xchg
fs
or
inc
cmp
rcr
jo
jmp
jmp
xchg
call
out
sbb
cmp
repz
aas
pop
js
ret
and
cmp
mov
push
dec
pop
jo
fidivr
or
cdq
xchg
imul
fstp
pop
test
xchg
mov
aas
add
add
lds
xor
imul
or
and
mov
mov
(bad)
jb
mov
inc
jbe
mov
test
pushf
or
shl
push
nop
cmp
aaa
xchg
cmp
add
pop
adc
sub
inc
dec
and
inc
cmp
(bad)
xlat
(bad)
sbb
or
xchg
xor
test
mov
pushf
stos
shr
dec
data16
mov
sar
imul
sub
jmp
jl
cmp
lock
out
cmp
push
je
push
cmp
retf
in
cli
adc
add
popf
movs
pop
into
rcl
mov
lahf
jbe
outs
and
arpl
fcomp
and
fmul
push
cmp
dec
daa
pop
ftst
(bad)
push
xlat
pop
xor
mov
mov
out
rol
xor
cmp
jno
mov
adc
pop
pop
retf
xor
sbb
and
mov
push
adc
rol
outs
enter
lods
ja
mov
pop
mov
and
arpl
jge
cmovnp
dec
xor
(bad)
(bad)
stos
lods
dec
push
mov
mov
cmps
test
int
dec
out
jno
fcomp
mov
mov
add
loop
cmp
sbb
into
call
sar
add
xchg
cmps
push
dec
add
adc
scas
loop
imul
adc
xchg
sahf
in
jno
dec
ins
mov
bound
jge
psllw
mov
push
xor
cmp
jns
hlt
jmp
lods
xor
fdecstp
mov
aad
add
mov
pop
fsub
int
ds
loopne
cmp
sub
lea
dec
mov
jae
je
push
pop
jb
cmp
sbb
rcl
pop
fs
dec
adc
jle
(bad)
push
mov
sar
jno
mov
adc
stos
sbb
shl
push
cmp
jns
mov
inc
add
dec
inc
sbb
push
lahf
xchg
dec
stc
xchg
mov
fxch
push
jge
mov
pushf
mov
xchg
out
mov
mov
and
(bad)
sbb
sbb
lods
jno
push
push
cwde
imul
and
mov
stos
mov
lea
or
popa
je
xchg
das
repnz
dec
push
mov
pushf
enter
xchg
out
ds
rcl
mov
push
cmp
inc
ret
cmps
push
xchg
iret
pop
fnstcw
xchg
push
call
jae
cs
sbb
pop
addr16
arpl
jge
fdivr
ja
push
push
pop
jae
mov
mov
dec
and
and
(bad)
rcr
inc
xchg
cmc
lahf
outs
add
cmp
push
aam
in
mov
xchg
or
(bad)
call
lock
lock
add
retf
dec
lahf
and
ret
mov
(bad)
stc
loope
push
mov
(bad)
ins
inc
sub
test
movs
fild
cmp
nop
jb
addr16
pop
push
dec
fiadd
dec
fucom
dec
fld
dec
out
xor
out
mov
les
dec
mov
sub
adc
jo
or
mov
dec
pop
ins
push
push
out
aad
inc
sbb
add
mov
push
inc
addr16
int3
push
cmp
daa
idiv
aaa
inc
movs
sti
int
or
xchg
cmp
adc
ret
popf
inc
jo
or
jne
mov
inc
mov
jl
je
push
ins
sahf
pop
mov
movs
mov
inc
push
call
sub
add
aaa
mov
inc
xor
cmp
inc
jbe
call
sbb
mov
test
leave
inc
sti
jns
sub
add
lahf
inc
sub
cwde
test
sbb
inc
pushf
and
push
push
daa
xor
xchg
mov
pop
dec
inc
push
(bad)
and
lgs
out
cmp
pop
and
test
sbb
pop
inc
cmp
scas
mov
test
inc
push
ds
sbb
cmp
test
gs
sub
hlt
out
jae
mov
fsubrp
and
dec
xchg
call
je
jmp
(bad)
sahf
repz
jo
jb
sbb
enter
jmp
bound
push
outs
jne
cmp
mov
sbb
inc
jbe
lods
pop
popa
push
add
aad
ror
inc
loopne
(bad)
fcmovnbe
test
out
loope
cmp
pop
lods
cwde
ss
and
mov
retf
cmp
xchg
int3
call
jbe
sub
dec
pop
(bad)
arpl
adc
add
add
leave
mov
cmp
les
cs
sub
inc
inc
in
dec
xchg
test
dec
pop
shr
inc
mov
cwde
inc
jb
(bad)
and
popf
mov
mov
inc
sbb
jno
and
ds
mov
jb
outs
and
cmps
inc
xchg
jns
push
jbe
dec
fdiv
push
cmp
retf
inc
jp
sub
shl
dec
mov
adc
adc
cmp
or
retf
test
mov
inc
dec
outs
fnstsw
pop
mov
fadd
dec
in
lods
test
es
push
xor
mov
ds
jno
fiadd
test
mov
shl
sbb
gs
mov
mov
(bad)
cld
stc
cmp
mov
sti
sti
pop
jo
dec
sbb
cmp
inc
xchg
std
xchg
pop
adc
sub
sbb
dec
fnstcw
outs
stc
std
inc
inc
ror
adc
pusha
xchg
cwde
cmp
cmp
cmp
xchg
or
mov
lock
das
jle
jmp
arpl
icebp
outs
pop
popa
mov
repnz
cdq
int
cmp
sub
iret
(bad)
dec
mov
rol
int
and
pop
lea
dec
inc
inc
dec
addr16
xchg
test
jmp
push
rcl
retf
dec
inc
mov
pop
mov
add
(bad)
mov
jmp
dec
xor
inc
(bad)
mov
mov
ins
adc
jmp
das
inc
ds
cmp
scas
cmc
jno
pop
dec
clc
dec
dec
out
ins
adc
jmp
stc
or
(bad)
mov
jns
xor
in
add
inc
icebp
push
sbb
dec
out
outs
add
mov
idiv
sbb
(bad)
mov
mov
inc
test
inc
repnz
cmp
dec
call
call
(bad)
mov
sub
inc
repz
stc
dec
loope
fdiv
pop
push
out
clc
cld
shl
movs
sub
pop
jl
xor
stos
icebp
jne
push
cli
dec
loop
imul
mov
inc
cmc
frstor
mov
test
inc
cmc
dec
sti
push
jecxz
fsubr
pusha
push
lock
neg
cmps
sub
mov
inc
lods
repz
bound
dec
cmp
dec
in
imul
call
fbld
rol
jmp
scas
hlt
js
xor
test
mov
jmp
inc
je
push
call
pop
ret
add
xchg
pop
inc
mov
ds
xor
mov
push
mov
mov
jmp
mov
int3
cmp
pusha
inc
sbb
inc
call
mov
fucomp
nop
loopne
cmp
fimul
pusha
or
push
jle
call
cs
or
cmp
mov
xchg
outs
pop
loopne
jnp
mov
shl
dec
push
into
cmp
test
gs
out
fdiv
cmp
leave
test
mov
aam
dec
push
jns
jecxz
mov
js
mov
mov
mov
inc
stos
rcr
dec
pop
sub
nop
in
mov
call
mov
fimul
pop
dec
es
dec
test
(bad)
loope
mov
push
lahf
sub
into
test
pop
inc
pop
dec
and
mov
loop
mov
mov
xor
cmp
int
pop
(bad)
adc
inc
scas
pop
loop
dec
iret
leave
mov
rol
data16
xchg
into
add
push
icebp
repnz
enter
cmps
out
inc
(bad)
mov
push
int
sub
aam
pop
and
sbb
mov
inc
jno
inc
and
shl
or
xor
scas
push
mov
ror
inc
sub
retf
inc
sub
jecxz
mov
enter
adc
enter
(bad)
movs
inc
inc
or
inc
imul
cmp
sbb
push
int3
sub
aaa
test
or
inc
nop
jo
mov
movs
cmp
int
xchg
inc
inc
ror
popf
mov
mov
cmp
mov
rol
cld
inc
iret
sbb
pushf
mov
pop
mov
inc
cwde
stos
cld
inc
inc
sbb
neg
mov
fiadd
or
lahf
xchg
idiv
call
pop
xor
inc
cmp
cmp
dec
outs
xor
mov
mov
faddp
clc
jbe
lahf
das
inc
cwde
push
into
loop
xchg
mov
adc
cdq
fwait
xchg
mov
add
ffree
or
xchg
pop
int
inc
mov
mov
loopne
xor
pop
inc
inc
lahf
repz
nop
sub
cli
mov
pop
aad
fst
cmp
inc
test
rcr
inc
(bad)
mov
sbb
dec
cmp
xor
fwait
sub
or
cld
mov
add
mov
inc
cmp
fld
adc
and
or
aaa
mov
enter
mov
dec
scas
mov
mov
or
lds
xchg
mov
cmovo
or
inc
xor
(bad)
xor
mov
cmp
lods
inc
xor
xor
pop
inc
ret
or
dec
cmp
enter
add
inc
mov
mov
inc
stos
fstp
dec
push
inc
lods
nop
mov
out
loop
inc
cmp
xor
scas
je
mov
leave
ja
xor
fistp
sar
add
loopne
popf
(bad)
dec
repnz
inc
inc
xchg
(bad)
sub
loope
sbb
adc
retf
add
mov
repz
inc
pop
retf
fs
xor
ret
push
push
pop
adc
ficomp
pop
adc
lahf
push
xchg
xchg
xlat
push
add
jmp
pop
inc
int3
test
cmp
dec
and
mov
xor
add
mov
pop
(bad)
cmp
push
outs
cmp
pop
pop
jmp
jno
pop
dec
inc
out
cmp
cdq
test
add
mov
bound
cmp
sbb
jno
xor
and
and
jmp
mov
arpl
aam
lock
xor
xchg
sbb
mov
xchg
leave
sbb
gs
fnsave
ss
sbb
cmp
cli
cs
cdq
leave
or
mov
inc
mov
or
cmp
ds
mov
xchg
call
mov
jo
add
outs
xor
dec
loope
mov
outs
clc
scas
mov
aaa
push
fld
arpl
int
pop
dec
dec
sbb
sbb
push
(bad)
shl
mov
sub
jmp
adc
sbb
(bad)
je
outs
jmp
repnz
jns
mov
jge
daa
xlat
pop
imul
jp
push
out
jno
jp
or
or
arpl
std
std
clc
pushf
aas
(bad)
loop
add
xchg
pop
mov
movs
(bad)
je
push
push
cmc
pop
jle
jno
add
fisttp
dec
sub
inc
stc
jns
or
cmp
in
movs
jno
daa
ss
rcl
cwde
test
jl
xchg
push
fadd
or
jmp
jle
inc
fstp
das
in
sbb
inc
fsubp
cmp
inc
mov
jbe
push
push
inc
pop
inc
pusha
cmp
inc
xlat
mov
loopne
test
cmp
push
xchg
mov
cmp
mov
gs
test
data16
scas
mov
fmulp
lea
sbb
xchg
sub
ret
pop
lea
fsubr
adc
xchg
pusha
pop
sbb
add
icebp
push
sub
pop
push
mov
in
or
or
add
push
stc
je
jg
sbb
aam
fdivr
int3
inc
ins
stos
pop
ficomp
lods
test
iret
pop
mov
sti
xchg
jle
test
push
pop
push
ja
std
cmp
scas
icebp
inc
xor
mov
jnp
mov
sbb
ret
jmp
jge
fist
cmp
inc
pop
jecxz
fs
popf
lahf
jnp
nop
cmp
sbb
push
and
jb
pop
dec
xchg
mov
(bad)
ss
lock
ins
aas
xchg
sbb
and
lods
loopne
lahf
icebp
jecxz
in
push
sbb
dec
(bad)
repz
jg
scas
inc
inc
push
or
add
pusha
arpl
dec
fs
xor
cmp
inc
scas
xchg
cdq
jno
out
jo
adc
out
hlt
sbb
loopne
sub
out
scas
retf
sbb
pusha
iret
test
jo
add
nop
scas
icebp
cmp
and
mov
sub
jle
mov
xor
dec
fisubr
(bad)
xor
or
out
jle
dec
test
sub
xchg
mov
hlt
xchg
sub
std
(bad)
jns
push
xor
xchg
and
jbe
movs
sbb
jns
and
xchg
das
mov
cmp
iret
adc
popf
jecxz
jecxz
data16
sub
je
xchg
push
gs
jo
les
jns
sar
jge
adc
sbb
int
xor
mov
jno
dec
add
add
xchg
cmps
mov
xchg
jmp
es
movs
push
push
mov
xor
into
sar
outs
mov
int3
pop
jp
jge
jo
mov
mov
rol
mov
jp
cmc
sub
mov
add
sub
or
jnp
lods
xor
mov
sbb
pop
inc
cmp
out
push
fidivr
cmp
and
pop
jge
xchg
xchg
cmc
jp
ds
inc
sub
mov
jg
out
pop
or
pop
loopne
sbb
lock
cdq
stc
cmp
sbb
inc
pop
xchg
ret
inc
mov
add
and
cmp
scas
xlat
xor
mov
xchg
xor
xor
jno
sahf
test
mov
xor
xchg
jl
cmp
cmp
fisubr
jae
mov
out
cdq
ror
or
jno
sbb
inc
cmp
jl
sbb
xor
gs
fmul
mov
dec
add
mov
jge
xor
jg
cmps
stc
cmps
popa
pop
(bad)
int3
sbb
cmp
jo
and
jge
dec
outs
mov
or
adc
loop
xchg
outs
or
sbb
(bad)
sbb
jns
outs
xor
xor
mov
add
test
(bad)
(bad)
je
pop
rcr
adc
ret
int3
adc
xchg
shl
or
sub
mov
je
jge
mov
retf
sub
inc
jno
in
and
loopne
pop
cmp
stc
js
and
xchg
fidiv
dec
rol
dec
sub
mov
fbstp
pop
pop
sbb
jge
shr
jl
ret
adc
test
mov
add
jbe
hlt
inc
pop
inc
jp
and
aas
pop
and
or
mov
sub
lds
stos
test
push
jns
or
adc
cwde
cmp
mov
xor
(bad)
stc
nop
and
xor
mov
out
xchg
ss
stc
leave
sub
jne
cmp
push
add
xlat
pop
jno
in
sbb
lea
add
fxch
adc
sbb
adc
out
popa
jb
ins
add
cmps
pop
sbb
ret
xchg
sub
jbe
dec
cli
xor
pop
jmp
pop
and
cmp
in
sbb
cmp
ret
xor
loop
mov
int3
xor
jmp
dec
add
popa
test
cmp
xor
(bad)
mov
jb
dec
fnstsw
pop
inc
mov
ret
sbb
fnstenv
xchg
jno
jecxz
push
and
lea
dec
cli
icebp
mov
mov
jno
adc
bound
jns
or
mov
js
stos
sar
pop
cmp
add
movs
xchg
fstp
dec
inc
cmp
or
mov
add
add
jns
data16
(bad)
xchg
nop
js
retf
mov
push
dec
js
xchg
pop
movs
mov
adc
pop
lahf
bswap
jp
xor
fisub
jns
test
mov
(bad)
pop
int
(bad)
mov
ss
inc
jg
int3
sbb
jecxz
rcl
ss
xor
cmp
aad
ror
sub
and
push
pushf
and
imul
(bad)
fs
cld
loop
rol
push
imul
lods
int
mov
adc
adc
xor
add
inc
cli
push
jno
jge
fmul
xor
pop
push
dec
and
sub
add
pop
mov
sub
iret
dec
jge
adc
cmp
test
sbb
adc
mov
cmp
mov
sub
mov
loope
inc
rcl
rcl
mov
push
loopne
pop
loopne
cmp
inc
sub
or
mov
out
in
loopne
xor
repz
sbb
pop
jg
dec
pcmpeqb
addr16
mov
test
jle
and
add
push
call
xchg
std
les
add
jbe
xchg
cmp
xor
push
push
cmp
test
dec
ja
lds
ret
dec
add
fcmove
mov
movs
xlat
cmp
xchg
push
and
and
xor
xchg
push
pop
fild
shl
push
and
pop
shr
stc
and
xchg
add
or
inc
fdivr
pop
arpl
imul
xor
aaa
lahf
add
dec
xor
pusha
push
shl
sbb
mov
sar
adc
movs
xchg
fxch
mul
movs
inc
daa
jecxz
cmp
nop
push
or
mov
jnp
add
loope
or
lea
add
sub
mov
pop
cmp
stc
sbb
in
jge
stos
dec
jae
inc
adc
(bad)
cmp
jmp
dec
push
into
adc
mov
es
mov
movs
xchg
daa
or
jmp
enter
or
fwait
dec
push
inc
fs
jle
lods
mov
pop
dec
sub
mov
mov
and
sbb
xchg
add
jle
aad
xchg
jne
push
sbb
mov
pop
or
pop
push
scas
push
shr
(bad)
lock
xchg
iret
push
and
out
popa
mov
adc
jo
aas
hlt
add
aam
sub
outs
pop
jmp
in
test
loopne
cmp
push
test
mov
cmp
mov
je
sbb
lods
mov
cld
dec
fnstenv
ret
cld
cmp
xchg
xchg
mov
inc
cdq
loop
add
std
inc
out
dec
mov
xor
sub
data16
loopne
adc
jns
fisubr
fist
test
mov
(bad)
cmp
popa
or
adc
dec
jns
pop
add
mov
ins
ficomp
scas
cmp
mov
and
loope
shl
out
xor
jb
rcr
adc
xor
pop
sub
pop
push
mov
mov
out
inc
test
push
mov
mov
cmp
xor
stos
and
rol
and
jno
pop
sar
test
and
shl
loope
push
and
xchg
mov
retf
mov
and
pop
shr
bound
call
mov
(bad)
mov
mov
sub
or
imul
leave
imul
enter
jno
xchg
popf
outs
and
fwait
mov
or
in
(bad)
stos
fnstcw
cmp
or
mov
xchg
inc
inc
mov
jo
dec
ja
movs
cmp
pop
or
xchg
push
sbb
cmp
lea
js
jb
jo
add
inc
adc
sub
push
sub
jmp
xor
ret
jmp
test
repz
retf
hlt
loopne
je
dec
mov
shl
xor
loop
sti
pushf
push
call
test
sub
movs
arpl
or
stc
ds
inc
repnz
and
xchg
push
imul
inc
sbb
out
sahf
jl
pop
ins
xor
xor
pusha
xchg
fidivr
ss
lods
cmp
and
fwait
mov
outs
outs
jg
shl
dec
(bad)
arpl
sub
jno
mov
sbb
std
ret
jmp
add
and
and
xor
jns
adc
out
stos
jne
pop
nop
loope
outs
stos
dec
pop
in
sahf
xchg
inc
popf
xchg
jnp
jo
mov
sbb
loop
ja
sub
cmp
pop
sbb
cld
stos
add
(bad)
jmp
loop
sbb
out
sbb
fsubrp
nop
repz
push
sbb
push
stos
cmp
aas
sub
test
cs
faddp
lea
pop
repnz
jns
retf
enter
repz
sub
add
and
pop
shl
test
mov
sub
das
fcom
pop
mov
mov
jp
mov
jp
cdq
inc
movs
dec
les
inc
pushf
scas
test
dec
call
inc
daa
mov
jecxz
inc
outs
stos
mov
mov
shr
in
std
lock
loopne
cmp
sub
pop
leave
adc
inc
cmps
cmp
lds
aam
push
or
mov
test
pop
xchg
or
mov
jb
pop
icebp
aad
mov
sub
cli
cld
mov
and
cmp
mov
xchg
ja
stc
ror
fwait
maxps
xchg
mov
inc
jae
and
fsubr
sub
push
scas
leave
inc
or
rcr
mov
mov
daa
sub
mov
fcom
add
jle
test
popa
jl
fist
pop
push
mov
xchg
inc
ja
pop
mov
sub
sbb
(bad)
mov
lds
mov
pushf
mov
bound
push
and
mov
out
cmp
int
push
and
sbb
in
int3
cmp
out
inc
cmp
stc
test
shr
inc
mov
mov
movs
mov
retf
clc
mov
std
imul
mov
(bad)
cmp
inc
dec
je
push
cmp
loop
inc
mov
dec
test
inc
inc
dec
mov
sbb
repz
adc
dec
mov
(bad)
mov
dec
cmp
retf
aas
adc
rcr
inc
xor
and
sub
xor
inc
adc
push
int3
cld
cmp
cmp
je
call
inc
add
int3
hlt
ficomp
fcmovnbe
faddp
fisubr
(bad)
add
sbb
and
add
test
push
fiadd
mov
pop
xchg
xchg
test
inc
ret
cmc
sbb
add
lods
inc
mov
or
add
pop
dec
inc
clc
aas
(bad)
jle
cld
(bad)
or
in
gs
aas
push
iret
push
mov
(bad)
pop
retf
jns
icebp
fs
js
lahf
mov
dec
leave
jo
into
adc
test
retf
fwait
cmp
data16
xchg
jb
out
stos
div
push
loopne
sub
aas
dec
sub
mov
ficomp
mov
aas
test
in
pop
loopne
ror
(bad)
and
in
push
test
push
fisubr
ret
push
les
sub
mov
mov
sub
(bad)
cmps
sbb
mov
push
fs
push
dec
rol
aad
std
int
stos
es
pop
xchg
aad
dec
pushf
adc
aaa
lds
shl
std
and
jnp
dec
loope
cmc
jae
ret
stos
jmp
add
sub
stc
push
in
jae
lea
ret
jnp
les
sbb
mov
ffree
lea
dec
loopne
jnp
push
jl
mov
pop
pop
arpl
sbb
push
xchg
stos
or
les
lock
sti
pop
pop
retf
push
repnz
not
sbb
(bad)
cmp
leave
ss
jno
sub
cmp
sub
(bad)
js
jbe
and
jle
jmp
aas
jmp
mov
into
push
dec
imul
outs
fnstcw
sub
inc
mov
imul
mov
jbe
in
or
ins
push
sbb
jns
wrmsr
movs
or
sub
jge
fnstcw
xor
(bad)
stos
adc
cmp
int
dec
movs
mov
xor
pusha
jle
(bad)
mov
fisub
jbe
cmp
pusha
adc
push
pop
inc
mov
shl
leave
pop
adc
sub
xor
jge
int3
mov
pop
mov
cmp
cmp
cmps
mov
fidiv
push
mov
or
jb
jno
fimul
into
xchg
not
pop
pop
adc
jbe
sbb
in
jp
jle
jno
push
sbb
and
popf
jmp
push
jb
xlat
or
mov
mov
or
loopne
outs
cwde
add
js
ja
jno
jns
lea
xchg
push
mov
lea
fstp
stos
js
inc
call
inc
fsub
jns
loopne
xchg
or
(bad)
cdq
inc
or
xor
out
lods
outs
imul
retf
or
jmp
daa
cmps
call
inc
mov
in
inc
inc
sbb
repz
dec
inc
adc
and
sbb
and
scas
xchg
aas
jo
adc
fst
pop
mov
jecxz
retf
loope
pop
(bad)
arpl
aad
test
xchg
ret
ins
icebp
xor
or
or
mov
ins
popf
test
pop
lds
jo
jge
jge
popf
dec
jo
jns
fldcw
jno
sbb
jecxz
inc
shr
(bad)
(bad)
(bad)
jle
cmp
dec
in
je
icebp
mov
jne
sar
and
mov
pop
pop
iret
pop
(bad)
mul
jmp
mov
cli
pushf
mov
jl
push
jmp
ror
dec
mov
fsub
das
pop
sbb
mov
aas
fdivr
into
aam
lahf
lock
popf
mov
dec
or
stc
xor
mov
cmp
jecxz
iret
and
loopne
dec
aas
dec
shr
jp
mov
call
mov
shl
adc
pop
scas
or
push
popf
(bad)
pop
jo
jno
push
sbb
dec
retf
pop
iret
imul
(bad)
cs
ret
fbld
out
push
mov
cmps
mov
scas
into
pop
rcr
call
mov
xchg
jno
addr16
mov
jge
fsub
xor
(bad)
lahf
and
mov
jo
or
jno
push
js
jl
xchg
mov
and
sar
sbb
or
fcomp
lock
dec
cmp
mov
mov
rcl
mov
inc
mov
mov
pop
sub
pop
out
(bad)
jne
and
and
ins
mov
in
call
sbb
fstp
in
inc
sub
hlt
ret
outs
inc
mov
push
stc
out
inc
pop
dec
pushf
mov
inc
adc
push
fistp
pop
pop
sub
into
cmp
scas
mov
sbb
and
jecxz
dec
arpl
cmp
sbb
lods
sbb
and
push
xor
mov
xor
inc
inc
pop
cmp
cdq
mov
xchg
ret
mov
or
xchg
mov
mov
lock
or
add
mov
dec
in
daa
mov
xor
inc
and
repz
jnp
push
mov
fmul
(bad)
stc
push
inc
imul
inc
xchg
pop
(bad)
cmp
clc
outs
jae
jns
adc
mov
pop
mov
bound
pop
sub
add
sbb
dec
pop
inc
mov
and
es
in
mov
lds
imul
sbb
or
inc
push
popf
scas
jmp
and
sahf
inc
dec
sub
gs
mov
push
cli
jl
enter
rcl
dec
nop
mov
xlat
cmp
jecxz
(bad)
cld
cmp
cmp
stos
stc
test
inc
fidiv
mov
pop
mov
stos
add
sbb
inc
cmp
mov
mov
cmp
ficom
sub
cdq
or
inc
jbe
mov
fild
xor
dec
imul
and
sub
xor
cmp
loope
rep
icebp
fs
lods
xor
imul
call
xchg
popf
bound
sub
cmc
fdivr
mov
pop
mov
ficom
mov
cmps
fistp
xchg
cmp
xchg
adc
sbb
pushf
inc
mov
cmp
test
mov
jg
(bad)
fsubr
or
in
cmps
fcomp
jmp
xor
in
mov
inc
push
in
and
movs
mov
lea
jge
mov
fcomp
and
nop
cmp
mov
sub
out
js
jecxz
pop
inc
adc
pop
mov
loope
(bad)
jo
lods
jne
(bad)
jmp
add
cmp
pop
xchg
push
clc
or
ds
ins
sahf
sbb
fwait
jbe
cli
cmp
mov
mov
loope
pop
imul
lds
std
and
push
rol
fmulp
fdivr
aad
ret
into
add
push
sub
push
inc
and
call
jns
inc
sbb
scas
ins
cmc
push
pop
sub
cmp
inc
sbb
xor
cmp
int3
outs
into
mov
or
or
xchg
das
je
std
out
(bad)
in
cmp
mov
push
ins
cmp
or
je
dec
xor
jnp
sub
and
jge
xor
aaa
pushf
fidivr
mov
mov
dec
into
sbb
mov
sub
fnstcw
arpl
inc
dec
cmp
jge
out
adc
mov
outs
pop
jns
xor
into
jle
jge
cwde
mov
fistp
cmp
sar
pop
ret
mov
cmps
retf
jp
lds
adc
xor
retf
je
call
ja
aaa
adc
pop
call
xor
pusha
push
add
test
or
pusha
sbb
mov
pop
and
shr
dec
or
or
out
out
jns
mov
jo
retf
jo
(bad)
aam
aaa
push
ret
stc
jmp
inc
in
test
in
sub
inc
loopne
adc
out
sbb
out
js
mov
adc
iret
and
mov
cmp
mov
xor
fstp
cdq
pop
div
jae
je
sub
js
lea
sub
test
sbb
std
adc
mov
out
in
enter
adc
push
les
cmp
jl
fcmovnb
cs
cmp
pusha
gs
jne
inc
jns
lea
xchg
push
fdiv
(bad)
cwde
xchg
mov
lock
ja
push
push
je
cmc
gs
mov
inc
push
(bad)
or
out
cli
out
or
fld
sub
sub
test
popf
pop
push
retf
in
loop
in
adc
mov
cmp
bound
inc
lea
mov
sti
out
cmp
adc
stc
pop
inc
pop
adc
inc
and
sub
icebp
adc
push
in
lds
and
mov
addr16
stc
int
sti
aad
inc
jl
cmps
mov
ins
mov
sub
and
loop
pop
arpl
jae
popf
mov
inc
push
xchg
mov
out
cmp
push
test
mov
or
xlat
add
rcl
mov
test
inc
inc
or
push
sti
rol
fwait
inc
jb
jo
push
ins
mov
sbb
int
push
mov
push
lods
popf
pop
push
not
xor
push
je
sub
btc
or
dec
lea
mov
jbe
cmp
pop
dec
push
xchg
adc
dec
clc
mov
sti
push
cmp
and
ds
lods
in
add
loop
push
loope
in
mov
icebp
cli
(bad)
mov
jmp
push
mov
ja
push
cmp
push
fdivr
and
out
dec
int
clc
cmp
aam
cmp
sbb
fmul
in
and
jmp
mov
cmp
jmp
or
in
gs
inc
rcl
das
cmc
loopne
ret
or
pop
mov
and
xchg
xchg
leave
les
std
lds
jge
sti
add
adc
mov
cmp
loop
cmp
sub
je
aas
inc
rcl
mov
pop
repnz
or
jl
lahf
jb
ja
faddp
adc
xchg
fwait
or
mov
adc
jp
arpl
ins
stos
scas
shl
bound
sbb
push
adc
movs
inc
inc
jbe
retf
fmul
sbb
sub
rcl
movs
lahf
jnp
push
outs
xchg
adc
jmp
mov
loopne
pop
cs
lods
sahf
pop
xchg
jp
nop
stos
popf
cdq
mov
or
or
imul
pop
cld
sub
pop
and
out
cmp
dec
jge
or
sbb
mov
mov
movs
add
cmp
icebp
(bad)
xor
mov
clc
mov
rcr
pop
lds
iret
lods
mov
xor
fcomp
test
inc
pop
inc
pop
ja
push
or
or
xchg
add
add
inc
hlt
pop
call
pop
pop
ror
gs
je
mov
call
gs
push
xchg
cmp
pop
inc
jmp
push
dec
inc
push
inc
pop
dec
test
imul
mov
loope
fld
mov
lock
xchg
xchg
into
cmp
out
mov
enter
mov
jbe
out
stc
(bad)
stc
es
rcr
inc
sbb
fnsave
inc
sbb
cmp
fnstenv
push
cli
(bad)
pop
mov
xor
fs
xor
jae
stos
xchg
call
mov
adc
cmp
outs
pop
mul
inc
sub
push
popf
inc
jl
sub
sub
(bad)
aam
mov
cmp
imul
jno
adc
je
inc
iret
(bad)
jecxz
clc
pop
imul
mov
jns
inc
sub
pop
pusha
dec
xor
cmp
mov
jmp
fcomi
inc
pop
arpl
aas
mov
fst
cmp
push
and
cmp
inc
jmp
xor
mov
cmps
xor
popa
pop
mov
imul
stos
inc
adc
jb
aad
push
xchg
inc
loop
leave
push
lds
or
pushf
mov
jns
(bad)
push
sbb
sub
sub
pop
jg
jae
enter
call
dec
xlat
jmp
outs
sub
and
mov
cmp
lds
mov
xchg
aas
into
pop
jns
imul
jge
in
lock
(bad)
sti
out
nop
aad
xchg
sbb
mov
or
(bad)
(bad)
into
cs
test
pop
ret
stos
cmp
pop
jno
xchg
jmp
and
lahf
push
js
les
repz
loop
xor
call
add
fstp
jno
into
(bad)
jae
xor
mov
cs
fld
call
sbb
and
(bad)
push
ret
aam
mov
into
je
ja
fld
dec
add
ror
and
push
pop
not
pop
jno
dec
mov
sbb
jl
jno
call
iret
pop
add
ins
push
iret
popf
ds
mov
add
fisubr
cdq
in
push
and
sub
cdq
dec
jge
popa
js
aad
dec
aam
xchg
sub
out
call
inc
or
and
dec
fdiv
popa
push
or
cmp
cmps
mov
arpl
out
push
sbb
cmp
dec
push
mov
and
jmp
lock
sub
pushf
mov
cs
mov
mov
push
lods
rcr
or
jno
push
xor
add
and
aas
es
jge
lock
imul
cmps
or
sub
fwait
lahf
jmp
sbb
jnp
lods
sbb
jmp
adc
test
xchg
leave
cmp
push
invd
shl
scas
sbb
scas
and
jge
dec
je
es
push
mov
inc
jb
outs
dec
iret
mov
cli
or
xlat
iret
aad
fsubr
inc
xchg
xor
inc
push
shl
es
dec
adc
push
sbb
mov
dec
xchg
cmp
in
inc
loop
xchg
por
inc
outs
scas
aad
inc
inc
cmp
cdq
rol
xchg
movs
adc
mov
loopne
fimul
inc
xlat
mov
inc
aad
cs
inc
mov
push
fsub
imul
jmp
sub
cmp
sbb
adc
dec
jns
inc
call
mov
pop
inc
mov
xchg
popa
das
mov
cmps
inc
jns
sub
rcr
inc
adc
out
and
sar
ret
xchg
(bad)
std
out
test
aas
inc
mov
adc
inc
outs
ds
popf
or
push
leave
dec
addr16
xchg
test
in
ds
repz
test
push
xor
adc
in
inc
test
mov
mov
rep
aaa
ss
push
xchg
cld
cmp
sbb
jmp
or
leave
xor
sbb
cmp
dec
xchg
jle
inc
mov
xor
(bad)
and
cwde
sbb
inc
repnz
data16
dec
mov
cmp
bound
sub
or
outs
inc
jb
lods
mov
jbe
dec
inc
ja
inc
pop
(bad)
or
mov
push
ucomiss
inc
xlat
adc
inc
mov
dec
and
inc
ret
cmp
cld
cmps
shl
mov
cs
mov
les
scas
mov
loope
jge
mov
out
cmp
sbb
inc
push
(bad)
ficom
adc
jbe
cmp
test
shl
mov
inc
ret
hlt
and
push
in
shr
jae
je
sbb
jp
mov
pop
in
(bad)
pop
inc
sbb
out
pop
push
popa
add
cmp
nop
les
inc
mov
cli
loopne
sahf
fsubr
xchg
push
(bad)
aam
cdq
pop
inc
push
jp
icebp
push
cmp
mov
mov
bound
adc
sub
loopne
sbb
inc
das
sub
jno
xchg
push
inc
pop
pushf
mul
ror
pop
mov
xor
das
cmp
pop
stc
jmp
in
cmp
adc
mov
enter
push
dec
aas
and
lods
sub
outs
push
std
aam
lock
or
movs
(bad)
jmp
bswap
fsubr
call
ja
aam
pop
push
inc
rol
mov
inc
lds
xor
xchg
ins
lods
xor
inc
scas
imul
cli
test
mov
je
pop
faddp
test
dec
sbb
or
push
js
out
dec
fidiv
out
inc
xor
out
loope
fistp
lock
jo
repnz
lds
xor
daa
fdiv
and
xor
inc
or
jle
(bad)
aad
xchg
shr
mov
inc
mov
sub
push
pusha
ror
xchg
or
stos
ins
(bad)
clc
and
push
add
icebp
xchg
or
pop
test
fs
jge
inc
jns
push
jecxz
(bad)
rcl
and
test
and
pop
sub
xchg
jns
dec
lods
xchg
jg
sub
sti
jno
add
dec
push
cmp
stc
ret
jno
cld
mov
sar
cwde
mov
(bad)
stc
push
dec
pop
and
div
sahf
cs
bnd
dec
push
dec
pop
xchg
lea
movs
js
mov
adc
test
daa
sub
pop
cld
sar
jno
ins
and
lds
(bad)
gs
dec
sub
jmp
or
mov
pop
mov
stos
mov
push
test
test
inc
xor
cdq
aad
mov
pushf
fdiv
lods
fs
retf
mov
adc
pop
xchg
test
inc
jecxz
push
jns
sub
imul
add
sbb
enter
sbb
lods
and
cmp
fdiv
xchg
xchg
enter
push
idiv
iret
sbb
mov
loopne
cmp
sbb
ret
leave
test
jae
out
mov
push
clc
dec
sbb
jl
fs
dec
or
jge
mov
addr16
pushw
ret
outs
mov
push
add
sub
push
xchg
and
scas
mov
out
xchg
and
mov
icebp
add
or
mov
fisubr
mov
inc
cli
sar
mov
cmp
(bad)
popa
pop
retf
jp
adc
dec
nop
mov
das
sub
vpmaxub
xor
out
cmp
in
mov
test
push
jns
out
xor
ret
push
ficom
cld
sbb
mov
clc
jbe
pop
lea
iret
xchg
sub
jmp
adc
js
mov
push
loopne
jns
jnp
push
cmp
in
(bad)
fadd
rcr
pop
out
ret
loopne
(bad)
ret
pop
cmp
in
outs
scas
ror
xchg
mov
mov
sbb
mov
inc
sbb
and
or
out
fnstsw
push
cmps
inc
ds
daa
jmp
mov
mov
and
fcom
ds
shl
or
or
xlat
sub
xchg
dec
data16
mov
add
add
popa
xor
mov
int3
add
fcomi
out
ficomp
shl
ss
add
sub
mov
add
inc
mov
adc
jle
test
inc
(bad)
out
jg
je
jb
sar
jns
inc
xchg
push
cdq
jmp
inc
rol
int3
in
and
xchg
pop
cmp
jno
gs
mov
push
sbb
xor
jp
push
retf
mov
jg
inc
pop
push
jns
jbe
xchg
jne
fmul
call
sar
in
cmp
push
xchg
fs
sbb
mov
cmp
in
mov
and
push
icebp
inc
and
stc
or
into
arpl
fidivr
mov
addr16
cmps
push
xchg
femms
adc
cdq
fwait
stos
xor
mov
sub
aaa
outs
or
lods
lods
dec
mov
mov
jns
sub
fldl2e
dec
dec
push
mov
lds
xchg
hlt
pusha
call
neg
mov
cmp
sar
js
pop
jge
dec
push
rcl
adc
lods
enter
cmp
or
push
pop
and
into
call
sub
(bad)
mov
dec
div
push
push
mov
push
das
and
test
dec
nop
jg
jg
dec
pushf
mov
popf
push
pop
cmp
cmp
lahf
fld
cmc
imul
add
inc
xor
leave
adc
xor
jns
jb
xor
or
mov
inc
jne
test
lahf
in
imul
mov
arpl
repz
mov
jae
mov
push
frstor
or
push
jno
int3
test
lods
jge
cwde
ja
mov
repnz
pop
push
jns
push
call
inc
les
in
add
cmp
cmp
fstp
fwait
push
push
jl
or
pusha
jns
(bad)
jle
adc
int
jnp
or
cmps
mov
jnp
push
push
aam
arpl
mov
out
sub
into
mov
or
hlt
retf
fmulp
aam
mov
sti
add
inc
mov
inc
mov
loope
sbb
aas
dec
sub
sub
and
enter
rcr
add
cmp
ds
rcr
popa
or
cmp
push
sub
cmps
test
jp
cmp
inc
lds
mov
iret
sub
punpckhbw
ss
pusha
cmps
inc
jg
movs
clc
enter
cmp
leave
pop
mov
inc
xchg
push
dec
and
pop
cmp
in
(bad)
sub
adc
into
repz
sar
and
push
xchg
fiadd
movs
pop
adc
mov
sub
test
out
adc
dec
pop
dec
fisttp
and
stc
outs
mov
hlt
add
aad
xor
xchg
int
adc
pop
es
loopne
inc
and
enter
pop
pop
jg
or
pop
test
adc
dec
outs
and
jns
dec
scas
inc
pushf
loopne
jmp
jl
not
int
into
fsub
mul
xor
xchg
addr16
retf
hlt
mov
mov
(bad)
(bad)
push
sub
mov
stos
out
fidiv
and
repz
dec
sub
loope
nop
sar
push
and
js
xlat
xor
leave
xor
xor
test
hlt
and
repz
dec
pop
inc
xor
mov
jle
jge
cmp
xchg
mov
jns
cmp
(bad)
loop
dec
mov
xor
popa
dec
test
inc
out
aad
jle
mov
jge
clc
(bad)
div
push
sub
pusha
or
inc
xor
cmp
cmp
xor
xor
inc
inc
pop
jno
(bad)
mov
rol
jne
cli
or
sbb
pop
sbb
lahf
jno
pop
fild
pop
mov
enter
pop
jae
adc
or
pushf
sbb
xchg
inc
arpl
pop
pusha
loop
bound
sbb
xchg
rcr
jns
movs
scas
fs
cmp
sub
inc
int
cmp
push
stc
mov
mov
push
ds
shr
nop
or
mov
push
shl
adc
pop
lock
or
xor
adc
cmp
jecxz
gs
sbb
and
sub
or
lods
shl
push
(bad)
mov
or
jae
and
mov
ins
stc
fistp
retf
mov
cmp
imul
mov
imul
sbb
adc
adc
repz
pop
jecxz
leave
jno
jle
fist
xor
adc
jns
jl
jle
jg
cmp
dec
push
fidivr
pop
jge
pop
int
retf
cmp
jecxz
jno
lods
dec
cmp
jmp
push
ss
mov
inc
add
sub
sahf
pop
dec
pop
cmps
inc
mov
or
out
mov
(bad)
stos
jnp
fdivr
ins
cld
add
add
mov
stc
or
retf
in
movs
fst
jns
or
push
je
xchg
pop
or
das
adc
push
cwde
loopne
lods
cmp
xor
fiadd
jns
(bad)
jo
lods
xchg
inc
inc
sbb
pushf
sbb
pop
les
inc
ins
pusha
dec
and
dec
xchg
fcomp
pop
movs
loopne
fst
enter
mov
cld
fs
xchg
jmp
add
es
add
fstp
and
adc
bt
push
mov
scas
xor
je
fldenv
sbb
push
push
pop
mov
scas
xlat
pop
test
(bad)
adc
pusha
leave
cmovnp
xchg
mov
cmp
sbb
jmp
pop
dec
ds
dec
(bad)
outs
sti
jbe
test
shr
add
jno
(bad)
mov
hlt
(bad)
(bad)
pushf
sub
fimul
outs
movs
dec
sahf
xor
xor
push
test
and
popf
xlat
adc
xchg
push
sub
mov
scas
sbb
scas
push
retf
mov
in
mov
pop
icebp
sub
or
out
pop
jle
out
pusha
fwait
(bad)
into
and
xchg
push
stos
or
sbb
and
repnz
(bad)
popa
adc
sub
imul
or
inc
retf
dec
repz
test
jns
jo
pop
scas
mov
dec
cli
jl
pop
mov
repnz
pop
cdq
pop
mov
jnp
sbb
les
sbb
mov
dec
mov
test
pop
lods
clc
lods
inc
xchg
push
ret
dec
inc
nop
fisttp
in
je
loopne
ds
xchg
adc
push
mov
mov
arpl
dec
cs
addr16
inc
hlt
xor
(bad)
in
dec
not
mov
mov
jle
fadd
mov
into
pop
(bad)
out
push
ret
ins
call
cmc
leave
pop
iret
mov
ds
out
ja
and
inc
push
cmp
jns
(bad)
mov
ret
out
sbb
cmp
xchg
scas
pop
or
ins
inc
test
inc
xchg
(bad)
cwde
dec
lea
adc
shl
adc
cmp
xchg
xchg
or
stc
adc
or
or
push
data16
add
cmps
add
out
xchg
shl
inc
std
loope
arpl
jbe
jp
aas
inc
sbb
inc
or
push
adc
sbb
mov
cmp
ficom
pop
inc
loope
es
pushf
movs
inc
ss
xchg
push
adc
mov
sub
dec
pop
call
imul
sahf
test
shr
cmp
ret
and
pop
fild
add
add
fld
es
adc
xchg
aas
and
push
lock
add
cmp
sti
or
xlat
aam
xor
and
mov
idiv
mov
sti
push
dec
ds
pop
adc
pop
xlat
(bad)
mov
test
push
push
cmp
int
jmp
rol
mov
stc
xor
inc
sar
aas
cs
pop
sbb
fwait
mov
dec
(bad)
lods
loop
mov
mov
aad
inc
adc
(bad)
movs
inc
arpl
call
mov
out
adc
mov
sub
sub
inc
xor
lahf
mov
add
inc
sub
jbe
add
mov
in
or
jge
cmp
dec
inc
jmp
and
scas
pop
mov
out
jo
mov
and
ja
pop
imul
xor
mov
shr
(bad)
fimul
inc
adc
pop
les
dec
xchg
loopne
jl
xchg
(bad)
cmp
lea
mov
xor
mov
cmp
out
cmovs
push
jne
xchg
xchg
pop
out
(bad)
ffreep
inc
aam
(bad)
not
in
jae
inc
imul
mov
lea
pop
fnop
out
add
retf
cmc
mov
dec
fistp
inc
adc
cli
pop
inc
js
mov
jae
pop
sub
dec
jp
jp
inc
icebp
jecxz
ins
or
mov
mov
outs
xchg
movs
gs
mov
mov
leave
or
out
fmulp
mov
cmp
in
sahf
add
sub
stos
xchg
xor
inc
mov
jle
sbb
dec
and
push
sub
fdivp
cmp
iret
in
rol
jb
and
mov
sub
bound
inc
push
xchg
mov
ret
inc
inc
jg
rol
fild
(bad)
lea
in
jns
inc
mov
hlt
fstp
jmp
les
jmp
pop
or
inc
ret
test
or
sub
rcl
adc
cmp
cdq
adc
sbb
sbb
inc
add
mov
ror
cmp
sbb
sub
inc
retf
inc
call
push
enter
mov
dec
cmp
retfw
shl
mov
xchg
mov
je
pop
or
ret
in
sub
pop
and
les
div
mov
jnp
mov
inc
cmp
fidivr
add
mov
inc
mov
xchg
mov
xchg
sbb
rcr
jmp
fcomp
xor
mov
pop
fsubrp
sub
es
xor
add
sbb
xor
jmp
and
dec
cmp
ins
or
mov
lds
add
mov
fnstenv
loop
push
stos
clc
mov
aas
xor
in
add
cmp
icebp
outs
adc
repnz
cmp
or
imul
sahf
scas
inc
daa
push
inc
outs
(bad)
jo
int3
iret
dec
sub
loop
sub
or
and
(bad)
sub
cmp
(bad)
sub
pop
addr16
(bad)
cld
shr
inc
fdiv
movs
jge
fnsave
imul
sub
jae
pop
je
mov
leave
ret
data16
sub
pop
mov
sbb
mov
mov
sub
cdq
pop
pop
inc
popa
dec
dec
(bad)
or
dec
loopne
ds
cmp
adc
xchg
sbb
pop
pushw
aaa
stos
xchg
ret
not
stc
jge
lea
pop
adc
retf
sbb
daa
lods
outs
jp
aas
imul
mov
lods
add
sub
cmp
stc
sub
xchg
fisub
push
push
data16
jecxz
lea
aas
es
and
pop
pop
xchg
mov
jl
dec
inc
sbb
scas
outs
stos
pop
leave
movs
sbb
leave
(bad)
pushf
mov
push
dec
add
or
sbb
hlt
test
dec
add
or
mov
aas
jge
add
das
add
sub
jge
hlt
retf
xchg
cmp
aam
in
scas
jno
pop
ret
lahf
test
jb
icebp
inc
adc
mov
jge
add
repnz
cwde
or
mov
call
into
into
pusha
ja
loope
pop
push
outs
pop
dec
icebp
mov
out
fisttp
add
sbb
mov
xchg
mov
std
cli
inc
cmp
hlt
jns
inc
leave
shl
out
pop
pop
fdiv
jb
pop
mov
cmc
and
mov
cmp
push
in
shr
rcl
jl
jmp
xchg
sub
push
(bad)
xor
jno
shl
jno
sub
push
push
inc
xchg
inc
and
fs
mov
mov
mov
push
lods
mov
adc
push
in
arpl
cmp
mov
int3
pop
jnp
inc
sub
call
retf
fs
pop
mov
dec
test
push
mov
ror
sub
adc
scas
pop
adc
jge
mov
dec
(bad)
(bad)
jno
dec
fwait
popf
sbb
dec
or
or
cmp
cmp
xor
(bad)
sub
cwde
push
sbb
out
in
aam
inc
adc
push
cmp
repz
mov
push
in
inc
loope
pop
jb
jnp
inc
cmp
inc
cmps
jbe
or
push
add
pop
inc
inc
daa
or
mov
jmp
xor
inc
lock
mov
rcl
jns
mov
inc
mov
pop
inc
push
or
(bad)
fucomi
jne
mov
xchg
inc
add
mov
sbb
loopne
dec
jmp
lea
jo
mov
or
adc
mov
pop
dec
stos
outs
lea
out
jmp
loop
jmp
rol
fs
cmp
xor
cmp
shr
jnp
xchg
js
sti
mov
call
mov
sti
test
outs
pop
outs
and
mov
add
fidivr
test
and
xchg
add
jns
aam
dec
push
push
lods
stos
not
pop
mov
sbb
sub
and
fcomp
out
enter
cmp
(bad)
fdiv
adc
out
add
sbb
xchg
fstp
inc
int
mov
dec
ins
dec
fcomp
ds
sub
or
jecxz
ja
lea
iret
jae
cmps
inc
test
mov
inc
pop
aam
imul
lea
inc
adc
xor
call
pop
shr
sbb
pushf
or
retf
xor
fdiv
das
mov
sub
xchg
js
xor
out
mov
jmp
push
icebp
adc
dec
pop
jl
jp
stos
xor
cmp
xor
push
xchg
je
xchg
addr16
fdivr
xchg
adc
jns
nop
dec
xor
mov
lods
aas
pop
stc
or
mov
xlat
into
rcr
or
imul
je
popa
jle
cmp
jb
xlat
cmp
cmp
jbe
sahf
das
add
jmp
jns
sbb
sub
ror
push
mov
fcomp
cmc
pop
cdq
inc
aam
idiv
fcomp
pop
fs
add
popa
cmp
fs
lods
inc
dec
dec
scas
lds
in
hlt
push
xor
js
imul
mov
movs
cs
cmp
xor
in
arpl
xor
pusha
jg
mov
into
shl
xor
jno
xor
fnstcw
dec
rcl
mov
leave
dec
aaa
js
les
aas
arpl
(bad)
into
fmul
cmp
cli
pop
jmp
jno
mov
movs
nop
loopne
stc
sahf
mov
out
xchg
pop
inc
pop
mov
sub
fadd
mov
mov
and
mov
cmp
mov
jns
ss
push
adc
xor
and
jl
pop
inc
or
cmps
add
into
cmps
sti
leave
adc
js
scas
cmp
xor
mov
aam
dec
xchg
dec
int3
mov
cld
test
jg
aad
ror
add
xchg
bound
mov
push
jno
jge
fldcw
dec
push
je
aad
pop
(bad)
adc
xchg
sub
pop
enter
inc
int
ss
test
mov
out
dec
enter
xor
hlt
in
xor
mov
xor
movs
mov
stos
mov
movs
inc
or
mov
and
retf
jae
cmp
jmp
stos
or
icebp
fdiv
jo
or
mov
pop
sub
inc
int3
jnp
or
out
pop
into
adc
mov
dec
sar
mov
push
cmp
in
shr
jmp
sub
aad
pop
add
ins
in
pop
cmp
out
pop
fdivr
inc
test
outs
dec
adc
inc
retf
pushf
mov
and
enter
xchg
mov
cwde
mov
(bad)
push
push
mov
(bad)
clc
hlt
ins
fcmovnbe
ror
and
jp
mov
into
cmc
lods
lea
out
mov
mov
push
cmp
adc
pop
outs
es
mov
pop
inc
inc
scas
mov
mov
inc
inc
push
push
retf
stos
arpl
mov
cs
inc
cdq
pop
jmp
jmp
movs
pushf
mov
aad
pop
inc
pop
jl
or
inc
mov
ds
or
addr16
and
imul
adc
mov
stc
mov
adc
sbb
mov
sub
loop
psubq
loopne
dec
test
int3
fdiv
jae
cmp
icebp
rcl
mov
add
cmc
xor
ins
js
pop
xchg
sbb
mov
push
jmp
inc
sbb
fadd
mov
xchg
pop
ds
mov
pop
inc
mov
aad
imul
loopne
adc
xor
push
inc
movs
mov
lods
fild
call
aam
and
retf
aaa
repz
ins
inc
inc
jg
push
inc
pop
not
push
mov
and
dec
lahf
jae
inc
adc
cmp
ror
std
lock
or
ds
inc
adc
push
lods
inc
pop
push
jle
pop
pop
mov
aaa
add
stc
and
jmp
push
(bad)
push
or
xchg
mov
lahf
retf
pop
pop
mov
add
mov
add
xor
imul
test
or
inc
int3
push
in
inc
fs
gs
jecxz
sbb
movs
mov
or
inc
jecxz
add
or
iret
add
pop
xor
psubusw
jg
aaa
inc
inc
pop
ins
or
jns
(bad)
jle
jne
sahf
add
xor
int
cwde
and
(bad)
lea
inc
dec
sub
inc
in
add
test
(bad)
test
jo
dec
xchg
pop
test
inc
clc
pop
call
in
lds
out
mov
movs
pushf
lock
fsubr
cmp
jge
stos
dec
xor
jne
mov
mov
cvtps2pi
mov
add
mov
mov
cmp
pop
aam
shr
sbb
xor
scas
cld
movs
cmp
aas
push
mov
or
inc
daa
test
add
pop
(bad)
or
inc
retf
jns
mov
mov
cwde
les
inc
sbb
inc
sbb
sti
pop
sub
out
je
aad
pop
jae
cmp
xlat
lock
cmp
cmc
push
in
gs
pop
pop
xchg
cmps
popf
test
repz
inc
iret
sti
das
mov
out
xor
cmps
inc
ret
cmp
mov
pop
in
inc
and
jmp
leave
cli
cmp
iret
stos
int3
pop
sahf
aaa
ins
inc
dec
pop
pop
and
rol
int3
and
inc
repnz
cli
inc
aad
dec
or
cli
or
dec
inc
les
add
or
push
sub
pop
inc
dec
and
add
xor
imul
aam
dec
mov
or
mov
call
(bad)
shl
dec
jb
push
inc
xchg
(bad)
push
xlat
adc
cmps
sahf
mov
ds
lea
mov
data16
inc
sub
mov
pop
call
daa
dec
xor
adc
inc
ins
dec
adc
stos
xor
cmp
cmp
fldenv
xchg
mov
ficom
inc
jmp
ds
mov
dec
cmc
dec
sbb
aaa
cli
cmp
inc
adc
clc
push
out
bound
adc
pop
push
xchg
mov
pop
inc
inc
pop
int3
sahf
xchg
xchg
inc
pop
mov
cdq
add
iret
and
mov
loop
retf
fistp
sbb
jo
gs
inc
aad
dec
ds
inc
in
inc
leave
add
adc
repz
cmp
(bad)
fstp
mov
jbe
mov
xchg
call
cmps
xor
xor
add
mov
inc
dec
cwde
mov
sub
clc
and
xor
adc
test
xor
and
les
mov
retf
pop
pop
pop
mov
sbb
inc
fmul
sbb
add
cmp
lock
dec
(bad)
fadd
jae
je
cmp
xchg
or
sbb
adc
enter
scas
sbb
ftst
repz
inc
int3
das
(bad)
mov
inc
mov
inc
inc
stos
dec
ret
xor
lds
aam
push
dec
mov
leave
sbb
fadd
cmp
sbb
xchg
pop
xor
adc
inc
jno
inc
ins
jnp
stc
test
add
in
jg
mov
icebp
xchg
je
aad
pop
xor
outs
test
leave
(bad)
mov
inc
in
push
loopne
iret
out
hlt
inc
mov
cmps
mov
aaa
leave
test
in
push
cmp
xor
fild
push
aas
inc
es
push
mov
js
retf
cmp
jge
lahf
sbb
aam
pop
xor
inc
inc
fcmovnbe
popa
adc
and
in
(bad)
repz
inc
cmp
loop
push
popa
xor
out
sbb
pop
inc
jae
inc
addr16
das
stos
cmp
mov
and
dec
imul
inc
imul
scas
int3
test
(bad)
cmp
add
xor
inc
in
cmp
inc
js
inc
mov
inc
pop
(bad)
lea
fwait
jp
sbb
dec
pop
sbb
shl
cld
xlat
(bad)
jmp
xor
into
add
inc
add
jecxz
lock
cmp
push
fsubrp
(bad)
push
mov
mov
lea
mov
inc
inc
pop
(bad)
mov
dec
mov
xchg
int3
(bad)
mov
inc
js
add
sbb
jbe
test
push
pushf
ss
mov
nop
inc
stos
or
inc
lods
jns
inc
rol
aas
imul
call
push
push
out
ds
sahf
js
adc
mov
add
fdiv
jp
jecxz
shr
scas
adc
ror
inc
inc
and
push
push
sahf
mov
rcl
outs
scas
sbb
jo
aad
dec
sbb
xchg
cmp
cmp
xor
pop
push
dec
mov
sub
addr16
mov
jmp
adc
jns
into
xchg
sub
ins
mov
sbb
mov
inc
cmp
aas
outs
pop
int3
sbb
push
rcr
stc
sbb
add
and
push
jmp
fidivr
pop
es
cmp
xor
ds
addr16
scas
nop
jno
mov
cli
repnz
retf
jo
cmp
sbb
jl
jl
fwait
in
push
out
je
data16
fimul
sbb
int3
and
xchg
add
aas
iret
and
out
rcl
nop
or
sahf
sub
lods
push
sbb
(bad)
jb
mov
ds
sti
push
repz
pop
fs
rol
shr
into
out
jbe
test
lahf
adc
imul
sub
call
push
imul
xor
stos
in
push
push
out
stc
pop
adc
jno
sbb
scas
int
ds
mov
sbb
mov
pop
dec
jnp
arpl
fs
out
shr
shr
lds
lods
jne
rcl
cwde
in
ret
sbb
sub
cmp
dec
mov
std
repz
mov
jl
jns
(bad)
cmp
adc
mov
fnsave
xor
sbb
mov
dec
das
iret
mov
fidiv
push
sbb
sub
mov
outs
stos
sub
fmul
call
cmp
sbb
pop
mov
inc
fstp
pop
inc
jle
arpl
inc
push
cmp
mov
dec
sbb
cmp
inc
std
cmp
scas
xor
movs
jbe
inc
or
repz
mov
mov
imul
icebp
xchg
popa
sahf
cmp
xchg
mov
cwde
add
add
cmp
fidiv
inc
std
scas
imul
rol
dec
fld
inc
lods
inc
pop
adc
inc
mov
cmps
pop
mov
mov
inc
mov
push
test
sbb
movs
or
dec
nop
push
leave
(bad)
ins
ds
je
pop
cmp
ret
cmp
loopne
imul
mov
sbb
rcr
ds
sub
xor
xchg
dec
test
sahf
stos
pop
nop
dec
mov
mov
icebp
push
pop
push
add
int3
dec
add
mov
adc
mov
mov
(bad)
adc
pushf
pop
pop
sbb
jge
mov
mov
into
int3
cmp
mov
mov
adc
adc
adc
pop
inc
(bad)
sbb
out
sub
inc
retf
mul
fimul
cmp
push
mov
idiv
push
mov
push
ret
ja
add
aas
test
sar
sub
call
or
mov
sub
pop
inc
inc
sbb
out
inc
hlt
sub
mov
inc
fcom
inc
test
mov
sub
push
and
loope
mov
repnz
adc
test
jb
mov
cmp
rcr
rcl
inc
paddd
adc
pop
out
jnp
arpl
cmp
cmp
mov
cdq
push
pop
push
rcr
dec
inc
add
mov
aas
mov
inc
and
add
repnz
test
out
jnp
push
(bad)
div
sti
mov
sub
jb
and
lock
or
dec
push
and
xor
cmps
fistp
adc
(bad)
daa
inc
sbb
outs
das
or
(bad)
fmul
cmovo
adc
or
and
xor
std
mov
shr
push
mov
int3
sti
fwait
cmp
cs
push
(bad)
sub
jl
rep
stc
mov
gs
in
or
cdq
or
bound
mov
push
mov
lods
or
push
fwait
dec
push
jg
adc
es
pop
ror
sbb
aaa
inc
add
xchg
movs
inc
js
push
setp
mov
pop
lods
mov
jmp
xor
fstp
leave
test
dec
sbb
adc
push
or
sub
jg
mov
adc
lock
daa
loop
mov
out
jge
sbb
pop
xor
mov
and
cmp
jge
push
or
pushf
scas
out
push
xor
cmp
inc
sbb
mov
mov
out
fstp
popa
mov
adc
lahf
(bad)
and
cmp
enter
nop
dec
enter
data16
jg
fwait
mov
xchg
pop
or
pusha
(bad)
sahf
jl
and
sar
in
and
repz
dec
add
sub
inc
pop
pop
adc
push
ret
sbb
loopne
jmp
sar
inc
xchg
fnstenv
jp
and
test
lods
adc
push
jo
sbb
sbb
jmp
and
int
sbb
inc
nop
adc
iret
jp
sub
jno
fadd
sub
xchg
mov
mov
push
scas
adc
push
xchg
test
mov
das
xchg
ss
(bad)
(bad)
jns
lds
fwait
cmp
jnp
pop
push
clc
jno
test
xchg
jmp
push
xchg
into
sbb
inc
mov
out
pop
mov
jp
fnstcw
sar
xchg
mov
mov
movs
scas
cmp
mov
jb
jecxz
sar
fdivr
inc
sub
ficom
push
sbb
cmp
add
jno
sbb
inc
push
pop
aad
push
cmc
sub
in
shl
or
fstp
fsub
jl
sar
xchg
ss
dec
cmps
adc
fstp
mov
xor
aas
sti
ds
sbb
inc
fcmovnbe
ds
loopne
mov
jo
jno
mov
cmp
jge
arpl
push
in
mov
xchg
push
mov
inc
leave
cmc
adc
mov
add
cmps
pop
add
sahf
add
inc
mov
bound
sbb
pop
sub
inc
jecxz
out
in
xor
cmp
and
mov
sbb
aam
in
sub
sub
in
sbb
ss
(bad)
sti
movs
inc
not
adc
push
mov
inc
out
and
aas
jnp
lods
cli
fbstp
test
loopne
push
pop
ds
xchg
mov
neg
mov
rcl
pop
xor
ficomp
adc
aas
add
sbb
push
mov
scas
jb
(bad)
inc
mov
inc
jns
pop
mov
test
mov
mov
pop
popa
loopne
xor
ds
push
adc
inc
or
js
xchg
stos
cmp
push
sub
cmp
xlat
xchg
push
in
or
in
xor
mov
inc
pop
mov
test
ss
jp
push
(bad)
fdivr
sti
ret
inc
rol
daa
add
sub
pop
rcr
cmp
inc
xlat
cmp
(bad)
pop
sbb
clc
das
stos
sbb
sbb
nop
sbb
xchg
loopne
cmps
popa
dec
inc
mov
repz
add
mov
(bad)
(bad)
mov
sub
xlat
jns
in
cmp
adc
and
inc
xchg
xor
stos
mov
inc
int3
or
mov
xor
arpl
cld
jg
mov
popa
sbb
fcmovnb
daa
jmp
test
jle
lods
xchg
sub
xlat
dec
xor
stc
cmp
inc
loopne
ds
pushf
cmps
cmp
out
sahf
arpl
fadd
inc
shr
out
xchg
je
(bad)
mov
jns
cmp
adc
test
call
pop
xor
mov
ins
cmp
ja
cmp
sbb
inc
movs
mov
call
retf
inc
jne
dec
aaa
adc
sub
xor
jb
scas
inc
cmc
popa
xchg
inc
fistp
push
call
xor
push
ror
loopne
imul
and
test
mov
mov
out
es
sub
sbb
ins
inc
cmp
mov
push
dec
mov
int3
inc
or
hlt
fwait
out
inc
mov
xchg
aad
sub
xor
dec
cmp
inc
clc
dec
mov
(bad)
mov
add
mov
inc
call
icebp
add
int
cdq
mov
dec
push
mov
or
or
mov
push
dec
daa
cwde
(bad)
das
adc
les
cmp
mov
and
xor
loopne
inc
mov
(bad)
mov
inc
aad
popf
cld
sbb
gs
mov
push
or
cmp
and
inc
sub
xor
in
and
mov
cmps
or
frstor
cmp
cmp
add
jae
ins
mov
cwde
add
inc
lods
mov
data16
daa
adc
out
xchg
add
jl
inc
or
movs
sub
jmp
xchg
mov
popf
adc
push
cdq
test
mov
aas
cmp
or
sub
cli
adc
dec
jae
retf
xlat
jmp
ret
jl
sub
fcom
sub
aaa
(bad)
lahf
sbb
lods
inc
imul
test
cmp
dec
cmp
mov
cmps
imul
neg
pop
out
pop
mov
dec
leave
cmp
popf
xchg
inc
push
into
aad
xlat
(bad)
inc
inc
adc
cwde
leave
cmp
push
push
cld
inc
les
push
pop
ds
inc
lds
add
fistp
xchg
outs
push
outs
ins
loopne
or
daa
and
mov
stos
push
push
mov
mov
popf
lea
shl
xor
xchg
mov
add
iret
loop
mov
and
enter
ds
or
and
or
das
pop
inc
mov
jb
cwde
lods
xchg
stc
adc
(bad)
jo
inc
stos
das
xor
fcom
icebp
xchg
inc
imul
add
popf
dec
xor
retf
clc
cmp
lods
jmp
fistp
inc
or
push
mov
pop
arpl
outs
je
out
cmp
cmp
pop
retf
out
out
loope
inc
adc
jmp
push
mov
into
aas
not
and
sar
(bad)
dec
xlat
dec
fisttp
loopne
cmp
inc
cmp
(bad)
mov
iret
stos
cmp
icebp
cmp
ja
pop
push
jmp
jg
mov
xchg
inc
xchg
sub
out
retf
adc
fsub
stc
mov
cwde
inc
cdq
int
mov
and
push
retf
pop
mov
dec
xchg
jl
dec
test
aaa
push
sar
je
fs
cmc
rcr
mov
div
js
sbb
jmp
mov
stos
mov
pusha
inc
mov
xor
(bad)
fldenv
in
inc
mov
or
adc
jns
jmp
pusha
cs
jg
lea
xchg
popa
mov
pop
dec
xor
jg
add
mov
add
shl
cmp
mul
push
ror
bound
data16
cld
outs
daa
cmps
sub
retf
jl
mov
outs
cld
push
jns
out
cmp
or
or
test
xchg
lea
cwde
push
arpl
out
jne
cmps
xchg
push
outs
les
popf
cmp
ret
loopne
retf
inc
lods
mov
or
loope
lods
out
pop
or
enter
lods
scas
push
push
inc
xchg
and
and
pop
push
xor
push
sub
leave
cdq
cmp
arpl
cmc
not
sbb
daa
jno
lock
push
fstp
and
(bad)
inc
fiadd
xor
cmp
mov
lahf
xchg
inc
arpl
xchg
ss
fdivr
xchg
loopne
sbb
test
dec
or
data16
imul
rcl
push
sti
jl
loop
test
in
cmp
sub
dec
fs
hlt
stos
aad
push
dec
cmp
fnsave
dec
(bad)
inc
aas
cs
dec
xor
ss
fbstp
push
add
iret
fdiv
mov
fwait
out
clc
mov
ret
mov
rcl
fcomp
xchg
pushf
repnz
push
cmp
bt
push
fmul
rcl
mov
xchg
in
sub
or
sbb
adc
jnp
in
push
iret
(bad)
std
cmp
fs
mov
mov
jle
hlt
mov
out
outs
pop
fs
mov
aad
stos
sbb
mov
jl
pop
sbb
loop
loop
mov
mov
popa
dec
pop
shrd
out
sub
iret
js
leave
pop
div
iret
push
xchg
and
ja
jp
pop
push
pop
retf
xor
lds
cmp
inc
and
icebp
xchg
das
loopne
cmc
ins
sub
and
ror
adc
fs
cmp
add
sub
or
imul
mov
sbb
fwait
mov
dec
dec
rcl
pop
pop
outs
sub
adc
pop
jmp
cmp
cdq
ret
sbb
rcr
icebp
out
sti
out
inc
cmp
fstp
jmp
inc
mov
fcom
xor
jno
and
push
inc
cmp
xor
inc
mov
sbb
push
dec
jmp
add
inc
in
mov
inc
gs
mov
cmp
inc
pop
mov
icebp
xor
jnp
inc
inc
push
call
inc
adc
push
and
xor
mov
inc
popf
scas
cmp
inc
rcl
fild
mov
push
or
das
adc
daa
nop
scas
push
or
mov
ret
inc
inc
in
xlat
push
add
cmps
aaa
lods
scas
mov
stos
outs
inc
aam
call
(bad)
push
pop
sbb
in
arpl
sub
out
(bad)
mov
jno
addr16
cli
cmps
adc
(bad)
sti
or
or
add
pop
jge
aad
enter
pop
inc
rep
in
div
cmp
cmps
push
mov
push
pop
inc
mov
inc
rcr
adc
mov
jecxz
fldenv
and
cmp
xor
shl
jno
mov
enter
in
cs
adc
and
inc
sbb
in
outs
out
mov
les
inc
not
dec
or
inc
push
push
and
ret
or
cmp
mov
mov
push
cli
out
inc
sub
mov
dec
jp
dec
cmp
sbb
jp
mov
mov
lods
push
mov
(bad)
cmp
mov
pop
stos
or
mov
stc
mov
mov
sbb
mov
inc
inc
jp
stos
mov
or
push
int
inc
nop
mov
jecxz
inc
js
imul
ins
lods
mov
inc
fsubr
shl
jnp
sub
imul
les
mov
add
xor
cmp
xlat
jae
cmp
mov
arpl
imul
nop
stos
cwde
test
data16
les
loope
retf
and
push
inc
lds
std
leave
iret
dec
aad
inc
(bad)
add
test
xor
hlt
aas
mov
mov
dec
scas
in
aas
(bad)
retf
inc
(bad)
push
pop
dec
pop
inc
sbb
mov
cld
dec
enter
inc
mov
repz
jmp
cld
int3
adc
inc
add
movs
sar
mov
jg
mov
sbb
push
inc
(bad)
push
rcr
xchg
mov
ror
retf
jg
ins
nop
cmp
cmc
loop
inc
mov
aaa
repz
or
cmp
pop
popa
icebp
imul
cli
cmp
mul
mov
adc
cmp
test
inc
inc
in
jno
jne
outs
jge
jo
es
and
call
inc
stos
dec
pop
fcomp
sahf
pusha
popa
cmp
mov
sub
sti
div
fsubr
mov
lea
fild
push
outs
inc
mov
cmp
test
inc
cmp
push
xchg
add
(bad)
xchg
mov
inc
pop
push
mov
mov
ins
iret
sbb
aam
mov
mov
sbb
jg
inc
mov
xor
enter
(bad)
cmp
mov
iret
or
xchg
mov
mov
repnz
inc
jno
adc
jecxz
inc
loopne
cli
mov
leave
mov
sbb
mov
into
ds
aaa
sbb
lea
inc
mov
adc
pop
pop
xchg
sub
jecxz
mov
adc
cmp
xor
mov
jae
aam
scas
and
xor
cs
jl
ror
leave
fdiv
add
and
xor
sub
mov
nop
jle
pop
pop
mov
(bad)
lock
sbb
xor
lods
sbb
jge
stos
and
sub
cld
inc
pusha
jns
clc
pop
dec
pop
mov
mov
and
mov
jno
inc
gs
out
stos
loopne
pop
pop
inc
push
idiv
and
out
scas
xchg
aaa
ins
jno
adc
xlat
ds
push
loope
cmps
in
loopne
adc
loopne
push
movs
mov
jl
shl
lods
adc
(bad)
sti
xchg
jg
lods
push
into
adc
lods
xlat
add
cli
dec
int3
push
daa
pop
ret
das
pop
cld
mov
pop
lock
mov
test
add
enter
xchg
aad
cmp
lahf
pop
push
cmp
(bad)
movs
cmp
outs
clc
(bad)
pop
jb
iret
sub
mov
aam
xchg
cmps
pop
daa
add
cli
and
loopne
iret
jne
adc
mov
fs
pop
jge
jae
push
aam
lods
and
and
retf
int
or
mov
add
out
and
adc
jle
dec
inc
aas
sbb
or
and
or
aas
mov
ins
cld
retf
inc
ffree
fcmovnb
(bad)
lds
or
mov
sar
inc
add
fnstcw
or
and
(bad)
cs
or
cld
enter
cmps
xchg
sbb
inc
and
out
adc
sub
push
xchg
mov
das
mov
aam
int3
push
clc
rcr
inc
inc
push
dec
pop
mov
or
pop
lds
add
movmskps
and
push
cmp
stos
push
loope
lea
xchg
mov
adc
sbb
ret
dec
mov
jl
add
mov
xchg
cmp
push
mov
sbb
mov
dec
out
sub
xchg
jp
sub
cmp
or
jo
xchg
jbe
or
iret
or
cld
lahf
pop
pop
test
mov
pop
es
adc
fwait
mov
push
arpl
jns
xor
icebp
movs
xor
(bad)
mov
or
sysret
pop
out
js
mov
movs
xor
loopne
jmp
push
aas
repnz
lock
sub
push
fild
mov
test
enter
clc
inc
add
popa
out
xor
shl
push
sbb
cdq
pop
mov
jb
popa
mov
cmp
sub
inc
pop
lds
stos
pop
and
clc
xor
mov
nop
sbb
es
jns
push
xchg
xor
xchg
add
sbb
push
inc
(bad)
mov
jno
inc
stos
add
pushf
fist
sti
dec
fadd
cs
mov
aam
(bad)
lds
mov
and
ss
shrd
sub
mov
fdiv
fld
in
pusha
lods
cmp
daa
and
and
fdiv
jmp
rcl
data16
jge
xor
jo
rol
ds
jp
cdq
pop
or
jmp
xor
jmp
mov
ficom
jo
dec
xor
cmps
push
pop
mov
push
push
lock
popf
and
jns
add
pavgb
jmp
add
pop
fdivr
jne
pop
dec
aas
pop
frstor
mov
gs
or
mov
pop
inc
jmp
adc
mov
inc
mov
xor
mov
xor
jl
sahf
cdq
(bad)
(bad)
in
dec
dec
ror
sbb
push
or
int
neg
jmp
aad
imul
jbe
lods
call
add
in
xor
adc
mov
push
aam
add
jl
ds
jno
test
cmps
push
adc
mov
scas
pushf
sbb
pop
shl
sti
test
(bad)
jbe
icebp
or
mov
test
scas
inc
lahf
cmp
shl
test
xchg
adc
dec
mov
dec
jp
mov
nop
mov
inc
movs
mov
fcom
hlt
shl
cmovns
mov
or
je
(bad)
mov
cmp
fsubrp
mov
xlat
in
mov
repnz
xor
lea
add
xor
inc
add
fwait
mov
dec
scas
xchg
rcl
sub
xchg
mov
int3
cs
jge
aas
and
mov
or
cmps
jmp
repnz
aam
imul
xchg
jmp
and
jl
dec
jb
xchg
test
mov
mov
stc
and
(bad)
jp
dec
loopne
jg
inc
cmp
lahf
nop
pushf
bound
in
dec
imul
arpl
ds
rol
mov
xlat
dec
mov
outs
fidivr
out
inc
add
xchg
mov
mov
mov
es
pop
jecxz
mov
(bad)
jmp
imul
punpcklbw
jp
prefetcht1
sbb
addr16
test
dec
call
mov
push
cmp
xchg
xchg
dec
mov
ss
mov
xor
js
sti
jge
mov
cmp
ds
push
dec
(bad)
push
or
add
jge
add
xor
xor
leave
mov
call
inc
aaa
adc
aas
loope
pop
hlt
push
mov
dec
jp
sub
fwait
mov
test
imul
mov
inc
sar
xchg
enter
iret
aas
call
xor
fs
test
inc
xor
adc
pop
and
call
xchg
xchg
xor
add
int3
repz
jp
sbb
(bad)
push
js
inc
dec
xchg
jmp
inc
dec
and
sbb
fidiv
aam
push
int
arpl
jns
sub
sbb
adc
mov
cld
loopne
adc
or
fistp
outs
cmp
mov
nop
jmp
out
cli
icebp
jge
jmp
test
sti
mul
fwait
outs
add
mov
shl
or
mov
mov
and
push
pop
aas
add
sahf
mov
jb
jmp
test
ret
loope
or
push
adc
mov
fnstcw
fcmovu
fidivr
adc
cmps
cmp
retf
out
xor
mov
retf
or
sbb
jp
cmp
repz
lods
lahf
push
aaa
adc
pop
sub
sahf
fs
pusha
sahf
pop
cs
stc
jle
ret
pop
fcom
in
loopne
mov
mov
xor
dec
mov
inc
fisttp
sub
mov
aas
add
inc
les
lock
js
mov
or
and
jg
dec
ror
fild
sbb
push
pusha
scas
aas
mov
js
mov
or
cmp
jno
mov
xor
cmp
pop
mov
mov
push
test
fisub
jo
(bad)
pop
adc
dec
jg
push
outs
xchg
xor
jno
cdq
mov
mov
jmp
push
push
enter
cs
xor
and
and
fnstenv
fimul
cdq
add
jp
ds
xchg
cwde
cmp
fidivr
arpl
and
mov
inc
xchg
(bad)
in
and
sub
inc
imul
xchg
push
xchg
lods
push
imul
or
ds
daa
lds
sti
push
cmp
ffree
(bad)
dec
faddp
fmul
cmp
aam
jge
mov
in
add
jecxz
sbb
push
inc
xchg
outs
dec
fdivr
lds
xchg
fild
enter
icebp
mov
inc
inc
sub
aas
cdq
js
jge
jnp
and
in
sbb
rol
cmps
test
push
scas
mov
ins
(bad)
mov
pop
mov
cmp
inc
iret
mov
dec
rol
push
push
data16
retf
popa
ja
xchg
sbb
test
sub
dec
xchg
xchg
push
push
adc
loope
inc
sahf
sub
test
jge
add
inc
retf
hlt
xor
xchg
ja
push
scas
xchg
xchg
nop
adc
inc
pop
iret
cmps
xor
inc
jns
add
and
outs
inc
pop
mov
xor
inc
push
dec
adc
cmp
cmc
dec
adc
add
xchg
and
cs
and
rol
rcl
cmovo
cmp
out
sbb
mov
jle
sbb
cli
call
jg
push
inc
inc
push
dec
xlat
push
mov
and
fwait
and
jns
out
pop
mov
mov
cwde
ficomp
scas
mov
ret
das
cmp
sbb
ret
dec
inc
lds
clc
(bad)
pop
int3
neg
into
pop
rcr
enter
repz
mov
les
push
or
cmp
push
scas
cmp
(bad)
or
cmp
mov
and
int
jmp
ins
ss
xor
xor
aaa
adc
es
repnz
ret
ja
mov
cmp
jo
mov
and
sub
in
pop
aam
inc
in
cmp
shl
inc
aad
(bad)
push
mov
mov
in
inc
sub
sar
lock
cmp
es
mov
pop
mov
xor
pushf
or
add
push
inc
sub
daa
mov
inc
mov
sahf
inc
sub
inc
dec
push
inc
pop
inc
popa
cmp
pop
dec
sub
aam
arpl
out
push
mov
inc
jmp
stos
mov
xor
xor
adc
ret
mov
inc
dec
pop
mov
or
dec
sbb
adc
mov
dec
push
inc
rcr
ret
test
mov
neg
and
xor
dec
fild
dec
and
jle
dec
inc
push
daa
mov
inc
xchg
cmp
add
push
adc
adc
and
dec
cmp
push
cmp
xchg
sbb
jp
pushf
gs
loop
(bad)
ret
rol
in
mov
or
lock
sti
sbb
sbb
daa
ss
retf
add
(bad)
push
inc
loopne
lods
enter
gs
sahf
inc
xchg
jae
sbb
loopne
sbb
ds
xor
cmps
out
xchg
push
mov
inc
jo
fisttp
(bad)
(bad)
adc
std
cmp
inc
rol
cmps
mov
push
adc
push
arpl
add
dec
xor
(bad)
fist
outs
call
sub
add
rol
loope
sbb
inc
pop
ds
stos
mov
iret
adc
cs
cld
inc
ins
inc
jp
stos
outs
repz
(bad)
sar
data16
cmp
inc
mov
repnz
cmps
call
mov
ror
sbb
sti
ds
out
retf
push
cwde
cmps
cmp
cmp
stc
jne
std
scas
inc
dec
das
sub
mov
call
aam
xchg
add
inc
dec
pop
cli
aas
sub
cdq
inc
lock
imul
nop
mov
sub
inc
in
das
jp
iret
or
mov
scas
fld
pmaddwd
mov
add
mov
jns
mov
into
jl
xchg
fcom
int
push
addr16
cld
(bad)
cmp
call
inc
imul
mov
movs
cmp
daa
test
jle
das
and
cmp
(bad)
push
jge
pop
dec
xlat
and
adc
or
cld
shr
shl
mov
xor
mov
shl
sub
jno
inc
outs
test
xlat
cmp
inc
aaa
inc
mov
mov
or
inc
(bad)
xchg
leave
shl
ret
js
and
cmp
jmp
mov
fbstp
pop
pop
mov
mov
xchg
sbb
dec
mov
hlt
into
push
retf
or
add
(bad)
dec
mov
(bad)
cdq
outs
icebp
in
adc
arpl
xchg
out
add
cmps
push
mov
and
jns
push
cmp
add
call
rcr
cdq
push
add
add
mov
sbb
outs
sub
int
daa
jge
cmp
add
inc
leave
das
iret
test
dec
fwait
mov
in
out
dec
or
das
rcr
mov
es
jp
xor
sub
mov
dec
jae
into
fldlg2
inc
jae
cmp
nop
cmp
ja
push
mov
pop
push
jl
cmp
jno
out
push
cmps
push
or
jecxz
dec
imul
(bad)
xor
je
mov
in
fs
inc
sub
in
pop
das
and
sub
das
and
call
jge
in
(bad)
mov
int3
mov
cmps
mov
cmp
test
shr
neg
mov
mov
dec
push
sbb
mov
inc
addr16
daa
inc
mov
and
fdivr
data16
(bad)
std
inc
xor
clc
jmp
jns
xchg
inc
and
mov
(bad)
pop
adc
pop
pop
inc
sti
aas
add
mov
jl
mov
push
inc
xor
xchg
cmp
sub
inc
scas
jp
push
mov
jb
imul
gs
das
pop
in
(bad)
mov
rcr
add
or
jle
push
mov
xchg
fld
fidivr
adc
cmova
arpl
pusha
es
(bad)
push
adc
call
cmp
sti
fldcw
fs
and
sub
cmp
or
jns
or
lds
loop
pop
push
retf
pop
aas
add
stc
leave
icebp
scas
adc
push
pop
les
xor
cmp
mov
push
hlt
xor
pop
mov
jp
pop
jecxz
jb
(bad)
stos
in
ja
jmp
jmp
sub
ret
push
xchg
std
std
test
out
xlat
or
push
fsubr
sahf
out
sub
fnstcw
arpl
dec
push
into
pop
pop
pop
jg
in
jle
mov
xchg
cmps
rol
aam
and
and
les
pushw
ret
add
inc
xchg
adc
idiv
lods
push
test
mov
sahf
cmp
popf
jb
cmp
ins
sub
push
xor
adc
xor
add
inc
pop
fs
out
cmp
sub
cmp
icebp
pop
loop
out
mov
mov
mov
imul
cld
xor
dec
jp
xor
sbb
pop
pop
out
fld
shl
push
mov
mov
enter
mov
fisttp
mov
fwait
or
or
cld
iret
xor
mov
repz
pop
out
mov
fistp
int3
jecxz
or
cmp
sar
stos
rcl
retf
mov
push
push
(bad)
or
xor
push
jo
cmp
scas
inc
pop
cmp
idiv
jae
xor
ret
div
dec
mov
movs
gs
fdivr
jns
js
fucomp
jne
push
push
cmps
inc
xor
pop
cs
or
jns
pop
inc
pop
inc
push
push
inc
bound
pop
dec
pop
ret
pop
iret
push
xor
or
cmp
test
adc
xor
in
cld
cmp
outs
jmp
outs
cmp
jmp
cmp
lahf
push
push
dec
cmp
aaa
f2xm1
int
ds
cmps
dec
loopne
out
inc
bound
shr
xor
nop
jmp
mov
daa
in
inc
xchg
inc
xor
ret
inc
(bad)
popa
mov
pop
inc
jbe
out
inc
inc
mov
retf
loopne
push
or
push
aaa
stos
out
lods
jo
jg
xor
inc
pushf
push
icebp
xchg
jbe
dec
fiadd
or
in
sar
(bad)
jecxz
inc
dec
push
xchg
xchg
cmp
es
test
jnp
push
mov
icebp
loop
adc
enter
ds
repz
cmp
mov
push
cmp
out
ins
xchg
sar
hlt
aas
cmp
mov
adc
(bad)
ss
inc
or
je
inc
mov
cli
pushf
jge
dec
pop
ins
dec
xor
mov
js
mov
inc
imul
sbb
movs
and
loope
ret
xlat
jb
cmp
mov
pop
or
mov
aam
fld
fwait
and
outs
dec
nop
mov
sar
mov
sbb
cmp
dec
mov
inc
shl
jge
cmp
inc
mov
mov
imul
adc
leave
adc
lds
push
jle
pop
cmp
inc
mov
adc
lds
cwde
cmp
inc
(bad)
fadd
xor
push
adc
jnp
jbe
inc
ins
jno
mov
inc
sub
xor
jo
ds
daa
adc
cmps
leave
cli
ins
(bad)
shl
loope
inc
lahf
(bad)
or
xor
pushf
add
loope
inc
test
add
inc
jae
sub
mov
mov
mov
jnp
ja
je
or
rol
mov
stc
inc
out
jb
gs
out
pop
ds
inc
push
mov
inc
stos
and
retf
push
lea
mov
sbb
movs
cmp
mov
(bad)
mov
cmp
pop
push
fidivr
mov
push
(bad)
shl
pop
call
dec
sbb
xchg
movs
ds
jecxz
pushf
push
jb
fld
call
inc
inc
xchg
ficom
pop
pop
lock
clc
gs
adc
movs
aas
aam
retf
push
inc
dec
push
(bad)
shl
ins
in
out
loope
into
mov
inc
mov
out
adc
inc
push
iret
(bad)
(bad)
cmp
mov
outs
mov
aam
inc
ds
xchg
xchg
lods
les
jno
xchg
and
or
or
js
jae
lods
mov
pop
jb
retf
cmp
jecxz
cmp
add
cdq
xchg
push
sub
sbb
fstp
popf
cmp
push
ret
sub
lods
xchg
mov
cmp
cli
iret
jns
scas
imul
dec
shr
in
shl
imul
jmp
push
inc
ja
loopne
adc
sub
mov
mov
inc
shl
outs
inc
cmps
mov
shl
ret
fadd
shl
(bad)
cli
inc
ds
inc
push
add
jno
pusha
jmp
inc
cmps
adc
in
sti
cli
outs
pop
loopne
inc
loopne
mov
pop
mov
je
push
bound
pop
popf
js
shl
and
push
xor
sbb
dec
jle
loop
mov
mov
mov
mov
stc
push
mov
xchg
in
call
pop
mov
pop
jp
push
test
sub
shl
inc
sbb
xchg
inc
mov
shl
ror
aad
inc
fimul
je
add
out
mov
inc
sbb
adc
out
mov
stos
pop
add
xchg
mov
xchg
fistp
fs
rcl
and
cmp
loop
mov
dec
sub
cmp
cmp
mov
out
(bad)
out
dec
sar
and
pusha
jns
mov
pop
add
mov
popf
push
(bad)
jno
or
dec
fs
lods
xor
inc
nop
push
je
fist
pop
push
jge
mov
jno
idiv
jns
jnp
jnp
outs
fild
push
xor
mov
dec
pop
pop
xlat
into
mov
inc
je
push
retf
pop
add
rol
call
pop
jmp
test
arpl
sub
or
retf
pop
sub
mov
test
enter
daa
mov
add
call
mov
inc
mov
scas
and
pusha
jno
mov
(bad)
ins
sub
push
cmp
mov
je
lods
and
cmps
jnp
mov
call
pop
jns
push
int
pop
mov
sbb
je
cmp
jge
mov
iret
les
jno
or
push
pop
aaa
dec
push
repnz
cmp
and
aas
call
push
pop
and
push
push
leave
xchg
jp
stc
out
cli
cmp
popf
mov
(bad)
rol
push
add
pop
mov
jle
sub
push
jle
jns
shr
xchg
jae
outs
push
enter
jnp
sbb
mov
mov
and
or
iret
loope
dec
cmp
sub
sub
jns
mov
stos
fwait
pop
lock
lock
sub
ds
scas
mov
sbb
push
inc
xchg
jb
jmp
bound
jbe
je
jle
shl
push
add
iret
fadd
scas
jecxz
jne
sti
fnstsw
call
pop
cld
pop
sbb
dec
outs
cmp
fmul
cli
lods
mov
mov
inc
add
inc
inc
push
sbb
cmp
fist
mov
aam
pop
(bad)
je
les
dec
jae
lds
inc
push
loopne
xchg
xchg
hlt
sbb
sbb
loop
cmp
jmp
aam
xor
push
psubusb
lock
xor
test
outs
pusha
cmp
add
xor
mov
jns
pop
jl
sbb
jmp
push
xor
dec
jns
(bad)
dec
imul
dec
jnp
cmp
inc
push
(bad)
mov
and
js
cmp
adc
push
adc
popf
pop
inc
push
xchg
lods
outs
cmp
xor
inc
cmp
jge
dec
xor
push
cmp
test
sub
mov
into
std
sbb
aas
js
inc
test
xor
inc
movs
xchg
bswap
mov
(bad)
dec
pop
jmp
mov
pop
add
xlat
movs
int
dec
push
mov
dec
xor
cmp
xor
mov
add
add
daa
jnp
dec
pushf
aas
fucom
sub
inc
push
mov
or
fcmove
cmp
daa
and
mov
loope
cmps
dec
inc
pop
(bad)
in
prefetch
or
scas
aaa
mov
and
shl
jle
cmp
xor
sar
xchg
mov
sbb
or
outs
inc
push
xchg
sbb
aas
scas
pop
jo
popa
call
daa
cld
in
fs
ror
sbb
and
fwait
jmp
shl
mov
sbb
lock
in
dec
jg
mov
jmp
add
mov
xchg
loope
pusha
(bad)
call
inc
retf
or
pop
xchg
cmp
stos
popa
and
out
bound
shl
in
jbe
dec
cmp
mov
sub
dec
js
mov
pop
nop
jmp
fs
cmp
xlat
and
add
cmp
enter
(bad)
or
xlat
adc
adc
out
cli
jmp
les
stc
or
jne
scas
mov
push
sub
push
stos
dec
mov
and
pushf
iret
pusha
inc
sahf
adc
mov
mov
inc
or
(bad)
retf
inc
loopne
(bad)
push
adc
outs
mov
cmp
test
mov
jmp
stc
mov
inc
stos
nop
mov
ins
scas
int
inc
pushf
test
into
fnstenv
outs
out
jecxz
cwde
ss
push
out
sub
in
sub
fscale
sbb
cmp
shl
out
(bad)
cmp
loopne
jb
add
fsub
icebp
fsubr
imul
arpl
xor
inc
jl
mov
outs
je
mov
xor
mov
pusha
cmps
sahf
sub
fdivr
push
into
xchg
daa
push
mov
loopne
sub
dec
add
push
xchg
(bad)
in
jo
(bad)
cmp
xor
cmp
xor
sbb
arpl
stos
out
icebp
push
xor
imul
xchg
dec
ins
js
xchg
loope
mov
sub
push
bound
jg
xor
mov
pop
pop
cli
out
inc
stos
jle
clc
inc
rcl
dec
or
out
repnz
fisttp
sub
movs
jle
in
mov
inc
dec
push
les
sub
mov
sar
ja
dec
inc
push
popf
push
sub
xlat
mov
jecxz
or
mov
push
outs
dec
(bad)
cwde
adc
test
sbb
loop
retf
jno
push
cmps
icebp
sbb
cmp
pusha
jo
mov
or
cmp
xor
mov
(bad)
(bad)
icebp
cmp
sub
dec
push
cmp
or
inc
mov
xchg
fistp
xor
jecxz
sbb
bound
xor
cs
dec
mov
or
out
jnp
rcr
ja
pop
mov
mov
cmp
sub
inc
mov
adc
sahf
retf
and
hlt
cdq
lahf
or
and
sub
sbb
shl
cmp
stos
mov
sbb
or
inc
out
outs
jle
imul
mul
mov
xor
cld
sbb
xchg
in
push
push
ss
pop
movs
add
push
aam
mov
ins
call
fs
cmp
jnp
push
daa
mov
jge
pop
inc
inc
ror
jmp
push
popf
sbb
fisub
pusha
jle
fsubr
and
movs
sbb
sbb
push
repnz
sub
pusha
xchg
sbb
nop
mov
and
jle
sti
dec
popa
nop
mov
cmp
sub
outs
imul
mov
add
cmps
aad
adc
sub
cmp
in
inc
add
mov
dec
js
fwait
add
or
sbb
dec
dec
cmp
in
add
movs
test
enter
leave
imul
icebp
inc
mov
int
mov
rol
pop
pop
outs
mov
fxtract
js
xchg
and
sbb
loopne
or
aaa
mov
(bad)
mov
push
retf
add
sbb
scas
dec
jge
jp
mov
repnz
mov
fbld
popa
neg
in
sbb
cmp
sbb
dec
jg
rol
push
pushf
add
or
pop
les
sub
and
test
ret
cmp
scas
fwait
ins
retf
inc
ins
sbb
inc
mov
ds
mov
xchg
xchg
jl
mov
ud2
(bad)
out
jecxz
cmp
sbb
(bad)
mov
jo
mov
ret
pushf
or
inc
adc
xchg
sbb
mov
fs
sbb
ds
dec
mov
rcl
adc
and
js
mov
inc
loopne
scas
jmp
jg
(bad)
mov
jnp
cmp
adc
sbb
cmp
xor
das
fdiv
lea
mov
sbb
xor
(bad)
scas
call
ret
pop
sbb
mov
cli
cmp
or
mov
inc
sar
(bad)
xlat
bound
arpl
enter
inc
scas
inc
inc
xor
fcomp
mov
mov
or
and
hlt
popf
cmp
aad
push
leave
loop
mov
icebp
and
sub
loopne
pop
adc
cmp
es
inc
loope
pop
cs
je
icebp
sbb
cmps
dec
mov
in
inc
inc
mov
xor
shl
aad
jmp
arpl
sub
xor
adc
icebp
fwait
add
cmp
adc
and
ss
aas
adc
push
fcom
sbb
js
outs
js
sbb
xor
jmp
add
into
fdiv
jno
outs
xor
aaa
bound
sub
mov
int
pop
pop
fdiv
and
xor
mov
in
sub
jno
(bad)
out
dec
icebp
mov
das
lea
sbb
pop
jo
cmp
jge
les
inc
cli
mov
fs
sbb
out
js
xor
jno
fs
cmp
cwde
pop
popf
sbb
push
enter
adc
ins
push
rcl
test
test
leavew
cli
ins
sbb
sub
(bad)
jge
jmp
dec
fwait
sti
mov
pop
test
test
xor
jge
stc
hlt
data16
xor
dec
(bad)
sbb
pop
jg
gs
scas
cwde
jge
test
sub
adc
mov
xchg
pop
inc
cmp
push
adc
cmp
adc
fsub
mov
and
lods
retf
sub
cmp
int
jle
popf
(bad)
xor
cs
test
stos
lods
sbb
outs
pop
sub
mov
mov
imul
adc
mov
jno
pop
xchg
sbb
xor
pop
sbb
xchg
mov
(bad)
jecxz
rcr
dec
fsubr
out
bound
clc
xor
addr16
(bad)
push
fldcw
sar
stos
xchg
les
(bad)
aas
dec
inc
push
pushf
cmp
adc
and
sub
xchg
ins
jb
sub
jge
push
pop
sub
jo
test
pop
loope
(bad)
in
mov
inc
inc
lahf
mov
cmp
inc
jge
dec
shr
stc
mov
mov
mov
inc
mov
jns
pusha
push
je
pushf
inc
call
mov
jno
aad
aas
jnp
lahf
jne
jbe
cld
and
cld
pop
pop
jbe
ret
xor
cmp
add
jecxz
or
(bad)
cmp
je
mov
inc
cmp
add
in
fcomp
dec
push
push
add
mov
mov
jno
test
push
adc
movs
jle
shl
cdq
sub
cmc
rcr
ja
cmp
adc
imul
sbb
dec
jmp
arpl
les
sbb
or
imul
mov
push
cmp
xor
mov
popa
jo
loope
xor
jb
lahf
pop
shl
inc
(bad)
test
xor
xor
xor
pop
push
(bad)
or
mov
stc
xlat
cmp
retf
ins
mov
adc
shl
sub
sub
jb
int
js
ffreep
xor
push
mov
and
inc
sub
js
sbb
mov
or
mov
or
stos
ror
cmp
add
sbb
test
sti
cmc
movs
loopne
jmp
out
sbb
lock
pop
dec
aaa
push
sbb
xchg
inc
stc
or
add
cmp
sub
imul
sub
in
fdivr
mul
xor
adc
xor
push
cmp
cmp
push
push
adc
mov
pop
jb
and
sub
mov
scas
mov
and
mov
adc
lds
sbb
jno
or
pop
dec
lods
xor
loope
adc
cmp
popf
cmp
inc
nop
cmp
sbb
test
scas
jl
fsub
cmp
pop
psraw
pop
clc
bound
fisubr
or
lea
mov
add
sbb
or
mov
cld
loope
fistp
aad
loopne
xor
cmp
mov
cmp
pop
adc
test
loopne
mov
clc
and
add
cmp
(bad)
fsubr
enter
cmps
pop
sub
in
sub
fiadd
mov
xor
xor
or
(bad)
mov
jmp
jp
(bad)
adc
ins
ror
cmp
push
out
or
out
mov
sti
retf
or
inc
loope
shr
ds
in
ss
inc
xlat
adc
loope
div
sbb
into
icebp
cmp
(bad)
fadd
push
cmp
inc
xchg
pushf
add
stos
cwde
ds
or
push
pop
je
test
sbb
shl
mov
cmp
mov
inc
sub
add
shr
lods
test
std
stc
mov
inc
or
sbb
mov
lock
inc
cmp
mov
push
in
or
mov
cmp
ds
adc
sbb
push
inc
cmp
inc
mov
pop
cli
adc
fucomip
inc
pop
inc
push
ret
push
retf
add
ror
mov
imul
out
pop
int3
pop
cdq
push
sbb
lods
inc
mov
jecxz
or
outs
sar
push
movs
ds
xchg
mov
(bad)
js
ficomp
push
cdq
lahf
js
or
jecxz
ds
leave
ficom
mov
je
sub
add
arpl
dec
in
add
lods
sub
(bad)
mov
inc
icebp
(bad)
scas
jns
imul
pop
sahf
pop
imul
xor
xor
mov
xchg
ficomp
inc
scas
jo
and
dec
clc
jnp
je
shl
mov
lods
add
mov
fst
clc
iret
inc
cmps
lea
jge
js
push
push
int3
jns
xchg
ja
cmp
jmp
in
mov
jg
or
test
dec
imul
icebp
popa
mov
xchg
cmp
cmp
inc
(bad)
jge
nop
out
adc
je
mov
dec
mov
sub
or
ret
xor
rol
in
loopne
data16
lods
jbe
sahf
and
pop
mov
(bad)
aam
push
inc
xor
jge
add
cmc
dec
and
push
mov
dec
imul
lods
dec
mov
fstp
enter
into
mov
or
jno
stc
loope
icebp
mov
sub
or
xchg
out
ficomp
adc
ja
cmp
retf
inc
xchg
cmc
cmp
mov
cld
outs
fimul
data16
push
fimul
pop
and
sahf
push
imul
cmps
and
xchg
cwde
xchg
fst
inc
push
rol
dec
and
push
adc
inc
mov
sbb
sub
lds
fldenv
fimul
pop
in
cmp
mov
stos
jge
outs
mov
sbb
xor
movs
fs
or
sub
cdq
loopne
cld
aam
inc
jecxz
xor
leave
xchg
and
lds
ja
pop
inc
inc
and
je
sbb
test
data16
pop
add
jmp
and
add
scas
inc
inc
ss
sahf
cmovne
inc
inc
mov
cld
mov
dec
mov
aaa
and
fbstp
inc
fdiv
cs
or
pminsw
stos
mov
jbe
push
xchg
cmp
cmp
cmp
lock
mov
mov
jle
(bad)
loopne
xchg
jmp
inc
out
sub
retf
in
jg
nop
clc
fmul
or
rcl
jmp
xchg
xchg
ja
inc
xchg
movs
inc
iret
test
mov
(bad)
adc
test
scas
sbb
aad
inc
(bad)
(bad)
inc
cli
sub
bnd
cmp
jle
inc
push
fs
xor
cmps
div
sbb
dec
dec
ja
pop
pop
shl
popf
add
ds
test
dec
movs
mov
dec
lahf
outs
sub
pop
inc
clc
outs
(bad)
push
out
cmc
fimul
cmp
fpatan
lahf
dec
xor
pop
cmp
rol
jb
pop
and
repnz
inc
dec
pop
movs
jns
push
test
mov
iret
arpl
ss
and
xchg
xchg
out
sub
in
ds
push
sbb
adc
sbb
scas
ds
cld
inc
pushf
and
cld
jne
fwait
sbb
ss
cmps
test
and
dec
es
adc
inc
movs
repnz
(bad)
mov
(bad)
adc
cmp
and
jl
xor
cmc
sub
js
call
lahf
fld
iret
xor
mov
cwde
inc
pop
aas
lods
jp
cmp
fistp
adc
cmp
pop
mov
pushf
(bad)
out
jo
arpl
retf
mov
fwait
sahf
js
xchg
sub
in
cmp
lods
xor
int3
and
pop
inc
xchg
shr
jecxz
std
fadd
push
imul
pop
ins
pop
xor
and
inc
sbb
and
rcr
clc
inc
jb
xchg
push
into
mov
inc
dec
jecxz
sub
(bad)
mov
call
push
inc
xchg
cmp
push
inc
mov
push
stc
shl
inc
cmp
out
in
aad
cmp
mov
idiv
xchg
add
(bad)
and
fs
inc
jecxz
sti
pop
sub
call
in
bound
inc
cmp
inc
ret
dec
out
xchg
or
mov
inc
inc
sar
inc
adc
inc
test
pcmpgtd
inc
inc
push
leave
es
push
push
fs
mov
adc
inc
dec
or
inc
lods
xchg
ret
scas
inc
idiv
cmps
mov
push
rol
inc
inc
add
sti
mov
inc
mov
ja
or
ins
jae
push
test
push
pop
inc
lock
jno
xor
fwait
in
inc
fisub
nop
and
ja
lods
mov
sahf
popf
pushf
ret
in
lea
cmp
inc
cmps
inc
cmp
setg
mov
sbb
xor
pop
sbb
dec
jns
std
pop
int
inc
mov
add
bound
rcr
mov
mov
inc
lods
inc
xchg
cmp
pusha
into
inc
push
movs
mov
aas
pop
inc
fistp
or
iret
sub
and
inc
xchg
or
inc
inc
inc
xchg
adc
xor
cmp
mov
dec
ins
xor
call
pop
test
in
dec
cs
xchg
mov
jmp
js
cdq
cmp
sub
dec
adc
out
xlat
pop
popf
inc
fwait
inc
jecxz
std
jbe
dec
push
sahf
push
xchg
cmp
and
or
inc
inc
iret
sbb
arpl
stc
ja
pop
fcmovb
sub
int3
add
dec
lods
pop
inc
test
rcr
sub
sub
pop
mov
push
out
and
cmp
push
shl
pop
cs
push
sti
mov
push
mov
rol
cmp
pop
inc
js
jae
(bad)
mov
dec
cmp
sbb
jge
inc
enter
sbb
stc
push
inc
sbb
push
stos
icebp
in
sub
sub
das
and
pop
pop
and
inc
(bad)
jo
aam
mov
ror
sub
ret
test
pop
adc
mov
lock
fisubr
int
scas
cmp
fist
fnstcw
pusha
jae
add
movs
inc
inc
xchg
and
mov
inc
mov
jmp
jecxz
push
in
cmp
mov
scas
pushf
push
mov
lds
inc
adc
in
cmp
jg
adc
lahf
inc
push
in
fisubr
icebp
std
sbb
or
cmp
dec
mov
mov
jb
xchg
ja
inc
mov
push
js
mov
mov
repz
fs
inc
add
jns
jno
loopne
in
xchg
sub
sub
ins
xlat
xor
ss
fs
aad
xor
repnz
ins
inc
(bad)
cmp
xor
retf
fst
imul
mov
repz
outs
fmulp
fiadd
inc
cmp
arpl
inc
cld
mov
sub
inc
(bad)
xchg
dec
enter
inc
popf
inc
push
pop
inc
cmp
sub
and
cld
mov
dec
mov
loop
inc
in
inc
into
retf
push
cmps
inc
loop
fxch
xor
(bad)
mov
outs
push
mov
je
cmp
inc
loope
repnz
inc
mov
xchg
add
push
leave
pop
dec
pushf
inc
add
inc
sbb
mov
sbb
arpl
ret
mov
pop
pop
push
xor
and
in
push
ror
and
sub
inc
jnp
and
movs
dec
mov
retf
sbb
jp
and
cmc
ss
(bad)
xor
inc
fld
inc
lock
add
nop
jp
add
cld
rcl
mov
adc
push
push
pop
dec
inc
jnp
fs
inc
inc
mov
pop
cmp
inc
js
xor
inc
(bad)
adc
inc
iret
aad
add
mov
mov
mov
pop
repz
cs
pusha
inc
loopne
shl
bnd
popa
mov
cmp
cmp
sub
sbb
fisubr
and
pop
movs
mov
loope
ds
inc
sub
cli
fldcw
inc
mov
jnp
xor
pushf
loopne
pop
test
dec
pop
(bad)
rcl
cmp
retf
xor
mov
jb
movs
mov
ds
push
inc
jg
inc
jo
gs
and
shl
push
mul
in
inc
inc
inc
cmp
test
inc
lock
ins
sahf
mov
cmp
inc
cmp
push
aas
inc
data16
push
fadd
or
xor
mov
jae
cmp
mov
stos
int
ja
push
push
imul
push
inc
sub
stc
xchg
jmp
cmps
inc
inc
or
in
outs
dec
adc
leave
imul
mov
daa
push
cmps
pop
jne
inc
cmp
(bad)
sub
dec
out
or
push
mov
sub
sub
mov
sti
inc
call
cmp
inc
lods
(bad)
or
mov
jno
push
and
sti
or
jle
jns
pushf
cmp
mov
outs
cs
cmp
mov
rcl
adc
ret
hlt
dec
repnz
mov
pushf
cmp
or
mov
clc
cmp
aas
aad
xchg
sbb
jmp
adc
fmul
mov
inc
into
cmps
jl
jno
cmp
xchg
retf
push
call
cld
js
dec
xor
cmp
into
mov
aaa
mov
cmp
and
add
shl
sub
icebp
jno
cmp
cmp
mov
adc
sbb
xchg
clc
jecxz
inc
pop
and
into
xor
adc
fsubr
lock
xchg
loopne
jno
test
pop
push
je
xchg
inc
repnz
jae
add
sahf
cmp
dec
sbb
sub
(bad)
(bad)
xor
jp
xchg
sub
cmp
sbb
mov
mov
pop
out
inc
jae
leave
and
and
pop
mov
hlt
xor
mov
mov
movs
rcl
adc
loop
shr
out
loope
jmp
cmp
adc
jne
pop
test
or
ja
out
adc
adc
xor
mov
ins
nop
inc
outs
push
call
scas
imul
xchg
movaps
neg
lds
popf
int3
cmp
cmp
hlt
dec
stos
jns
sbb
test
(bad)
mov
fidiv
xchg
jecxz
ret
stos
adc
(bad)
xlat
cmp
xchg
push
add
jnp
cmp
jl
std
ret
pop
in
ret
icebp
retf
inc
and
outs
pop
test
mov
mov
mov
mov
mov
inc
sub
xchg
movs
xor
add
(bad)
lods
pop
icebp
inc
in
out
mov
pop
shl
add
pusha
repz
arpl
pushf
int3
xor
ins
dec
mov
aad
ds
loop
(bad)
cmp
cs
cmc
cmps
mov
cmp
ss
push
scas
lahf
test
popf
call
inc
adc
xor
pushf
lods
(bad)
fwait
inc
out
cmp
leave
jmp
pop
adc
inc
adc
ret
fs
imul
addr16
dec
test
pop
inc
sub
punpckhdq
xchg
or
fild
mov
scas
xor
aaa
out
sub
(bad)
cmp
cmp
(bad)
inc
outs
lods
rcr
xor
sahf
add
push
cmp
mov
int
cmp
xor
out
inc
adc
mov
push
scas
xor
nop
dec
jns
and
add
jno
inc
out
idiv
push
pop
sbb
js
daa
ret
leave
nop
in
inc
repnz
pop
sub
sbb
inc
push
xor
inc
movs
inc
and
jae
add
cmp
hlt
int3
fsubr
dec
or
sub
inc
or
mov
push
fsub
sub
mov
call
in
mov
cmp
cmp
loop
push
inc
jo
xchg
jl
cli
sub
popa
cmp
jnp
fs
aas
idiv
(bad)
loop
in
jecxz
jmp
sub
or
fadd
cdq
aas
jge
lods
in
inc
jg
jle
sar
retf
and
or
cmps
inc
adc
cwde
movs
sub
mov
mov
into
je
outs
pop
out
xor
lods
dec
mov
inc
xchg
bswap
aad
scas
jae
inc
clc
repz
push
push
xor
mov
ret
inc
rcl
cmp
pop
dec
jle
inc
addr16
inc
fabs
sar
sahf
pop
add
iret
cmc
dec
push
imul
xchg
push
push
loop
nop
aas
pop
sub
sahf
out
je
sub
inc
or
scas
fisttp
xchg
push
inc
fldcw
int3
inc
test
adc
jmp
xor
cmp
push
ret
mov
jae
cmp
cmp
adc
rcr
cmp
mov
mov
mov
add
loopne
inc
hlt
sub
fadd
repz
(bad)
inc
sbb
ror
dec
ror
inc
inc
fistp
loope
jae
sub
xor
jp
jb
push
sbb
inc
jp
or
and
dec
adc
add
mov
fnstcw
cmp
adc
xchg
mov
adc
push
mov
xor
pop
jl
ret
int
adc
repz
rcl
rcr
cmps
in
inc
and
xor
inc
inc
hlt
adc
inc
enter
adc
mov
addr16
clc
add
and
sbb
mov
int
or
rcl
inc
and
mov
push
mov
lahf
xchg
aas
pop
arpl
pop
and
mov
sbb
push
xor
and
aas
js
and
mov
scas
fiadd
repnz
xor
sub
mov
or
mov
ss
jl
lahf
jno
sbb
jl
mov
dec
cmp
pushf
stos
dec
hlt
inc
cmp
retf
adc
inc
daa
mov
aaa
popf
cmp
ins
pop
push
push
jo
push
pop
jmp
rcr
dec
add
fwait
mov
inc
(bad)
pushf
div
jl
pusha
sysenter
clc
retf
shl
sbb
in
inc
mov
sub
cmp
sar
arpl
std
idiv
sar
add
jno
jle
retf
ins
mov
ja
jnp
and
dec
inc
jl
int
ret
adc
(bad)
jmp
sbb
data16
je
lea
xor
add
call
sbb
pop
or
mov
dec
psubq
mov
mov
fisubr
mov
fist
fidiv
sub
push
sahf
dec
jae
mov
es
popf
sbb
js
push
das
cmp
cmc
aas
(bad)
jg
lods
jle
cmp
xchg
test
push
mov
and
sbb
(bad)
ficomp
pop
xor
jae
and
jns
jl
addr16
cli
ja
sbb
xchg
ins
ins
out
fnstcw
mov
jbe
nop
jmp
xchg
rcr
adc
test
fbstp
fimul
das
iret
sbb
pusha
mov
sbb
adc
pop
or
and
ins
(bad)
cmp
xor
adc
sbb
mov
jnp
das
repz
out
jnp
mov
out
aas
mov
xchg
mov
jbe
pusha
fnstcw
loope
ds
jle
into
jl
and
sbb
jl
mov
pop
xor
icebp
popf
shl
mov
je
js
pusha
sbb
repnz
xor
add
sbb
jl
inc
test
adc
icebp
push
cmp
xor
loope
jne
sti
cmp
stos
mov
cdq
and
fsub
mov
dec
(bad)
jl
cmp
inc
inc
pop
cwde
jmp
loopne
xchg
cmc
or
(bad)
jl
pop
ss
and
enter
mov
pop
jl
sbb
cs
cmp
xor
cmp
in
test
push
outs
jl
imul
cmp
adc
and
mov
xchg
pop
js
mov
or
sub
lea
or
xor
lock
inc
jl
mov
scas
mov
(bad)
sbb
lods
lock
pop
sbb
iret
aaa
xor
adc
or
xor
mov
lds
or
sub
adc
fwait
push
data16
out
popf
adc
retf
addr16
push
cld
push
pusha
scas
adc
jl
push
sbb
sub
imul
push
dec
pusha
sub
pop
cmp
cmp
push
fstp
xlat
dec
es
adc
fnstenv
mov
sahf
hlt
aas
ds
xor
cmp
lods
sbb
lds
xor
add
pop
call
mov
push
mov
cmp
jo
push
icebp
push
dec
je
jge
sti
xor
xlat
sbb
cmps
push
and
das
ja
cdq
pop
mov
movs
xor
xor
jo
xor
mov
cs
sti
sbb
xor
sbb
int
cmp
loopne
sbb
cmp
cmc
cli
sahf
test
mov
or
mov
inc
pop
inc
call
loop
(bad)
cs
pop
xlat
cmp
mov
dec
push
inc
push
icebp
sbb
out
xor
psubw
stc
cs
pop
pop
fdiv
fcom
add
push
cli
sbb
in
dec
sbb
cmp
sub
jns
shl
dec
addr16
retf
std
test
rcl
or
out
shr
cmps
xchg
pop
fidivr
out
or
mov
pop
lock
push
in
mov
movs
cmp
push
inc
cli
cmp
mov
add
jle
jo
leave
add
enter
aaa
outs
imul
sbb
xor
jno
add
outs
int
cmp
fsubr
stos
cli
(bad)
pop
call
clc
sbb
les
jl
xlat
push
dec
push
add
inc
fild
es
sbb
(bad)
sbb
(bad)
cmp
xchg
sbb
retf
pop
add
mov
jle
retf
sbb
aam
or
mov
add
cmp
ins
and
call
and
cmp
xor
ret
lods
and
xor
xlat
clc
pusha
sar
cmp
add
loopne
mov
int
sub
ds
fidivr
push
lock
push
dec
stc
sbb
push
out
(bad)
into
pop
mov
lea
imul
dec
mov
mov
movs
dec
not
sti
mov
pusha
sbb
in
ficomp
js
jb
cmp
cli
add
xor
sbb
or
push
call
pop
shl
mov
pop
pop
lock
pop
xor
adc
jp
aas
sbb
push
inc
push
mov
jnp
push
jg
add
jl
mov
jg
cmp
pop
pop
push
clc
mov
sub
mov
out
clc
pusha
arpl
xor
cmp
push
push
fld
pop
sbb
pushf
scas
fdivr
aas
shl
fidivr
and
cdq
xor
xchg
xchg
js
mov
sbb
sub
sbb
mov
mov
and
fwait
adc
pop
mov
pusha
(bad)
jge
adc
jae
pop
lea
ds
inc
adc
xor
add
movs
cs
adc
add
dec
inc
cmp
out
add
test
pop
jl
out
xor
repnz
inc
xor
jo
movs
fistp
sbb
std
aas
xchg
out
sub
ja
sub
pop
sar
loop
lds
pop
add
or
mov
leave
mov
fdiv
adc
mov
shl
cmps
or
sub
cdq
scas
push
mov
scas
sbb
adc
sub
es
xor
lahf
or
fmul
sub
jno
cmp
mov
icebp
mov
das
mov
and
int
dec
xor
adc
pop
pop
popf
ds
push
push
jle
pop
mov
es
add
sub
(bad)
push
adc
mov
lahf
dec
jp
in
cmp
jge
or
fisttp
cmp
sub
adc
inc
pop
nop
sub
loopne
pcmpeqb
xlat
mov
push
mov
mov
xchg
test
and
cmp
retf
inc
mov
int
and
xor
sar
and
enter
cdq
movs
add
mov
sbb
xlat
xor
cli
je
aas
cmps
js
repz
aaa
sbb
fistp
jl
push
push
sbb
mov
or
jae
rcr
inc
(bad)
or
adc
sbb
xor
adc
stos
sti
pop
int3
mov
jecxz
aas
jns
ror
inc
inc
xor
imul
les
pop
mov
dec
imul
jnp
push
mov
ds
cmc
sbb
fdiv
add
lea
mov
xchg
(bad)
cmp
lahf
(bad)
pop
test
in
xlat
xchg
pop
sahf
(bad)
sbb
or
clc
adc
cmp
xor
in
xor
cmp
xchg
sub
clc
clc
fimul
pushf
lea
cdq
and
xchg
xor
js
jge
rcl
push
in
fimul
sub
inc
dec
lahf
or
test
dec
add
cmp
jo
ret
xchg
mov
cmp
cs
add
mov
adc
jbe
loopne
sar
pop
jl
mov
jae
adc
loopne
aas
sbb
cmp
jmp
add
das
js
stos
sbb
div
ja
je
icebp
fdivr
fistp
mov
mov
in
(bad)
(bad)
repz
pop
mul
xor
adc
or
jnp
int3
retf
stc
cmps
add
gs
jl
mov
sub
pop
pop
mov
repnz
mov
sub
loop
mov
in
mov
mov
xchg
lock
call
mov
shl
sti
mov
inc
push
xlat
loopne
jle
scas
jl
in
add
jo
jge
fwait
std
pop
cmp
sbb
mov
mov
mov
shr
aam
aas
jle
fidivr
xchg
push
push
pop
test
cmp
mov
cmp
xchg
dec
mov
cmp
jecxz
cmc
cli
push
cld
cmp
jbe
inc
cmc
xchg
sub
mov
xor
jg
xchg
mov
xor
xchg
es
ins
cmp
xor
jnp
push
cmp
sbb
xor
jmp
aaa
sbb
mov
sub
xlat
(bad)
cmp
rol
lds
add
jecxz
ret
jle
(bad)
cmp
test
dec
hlt
mov
clc
test
fild
pop
aas
pop
xlat
xor
or
lods
sti
xor
jecxz
sbb
test
shr
jnp
lahf
inc
pop
test
mov
jl
(bad)
mov
pop
std
ss
pop
mov
mov
adc
cld
cwde
or
add
dec
loop
cwde
call
pop
aas
in
cmp
sar
mov
xchg
mov
pop
cmps
pop
mov
sbb
pushw
sub
adc
push
sbb
xchg
push
je
popf
fnstenv
sub
out
cwde
jg
mov
lss
rcr
aas
sub
sub
adc
jns
and
sub
aas
das
adc
mov
loopne
sbb
pop
xor
cmp
cmps
pop
mov
call
adc
imul
sbb
pushf
aas
rcl
xor
(bad)
nop
aas
mov
sub
jnp
(bad)
jle
sbb
std
std
or
jl
outs
add
nop
fdivr
rcr
jge
loop
add
push
sub
clc
out
jl
xchg
in
fidivr
std
aaa
cmp
icebp
cmp
je
mov
pop
mov
or
mov
scas
fst
dec
pop
cmp
sub
cmp
faddp
int
dec
dec
fdivr
xor
leave
cwde
sbb
cli
lods
cmp
dec
push
inc
fs
scas
fld
sbb
stos
sbb
fistp
out
imul
adc
sub
or
outs
push
mov
adc
test
jno
mov
(bad)
pushf
adc
sbb
xor
add
pushf
ds
stos
push
leave
retf
push
mov
sub
repnz
or
jmp
xchg
xlat
push
jg
add
adc
mov
or
mov
jle
cmp
and
shl
add
push
sub
jo
push
adc
(bad)
sbb
mov
sbb
iret
aam
loop
mov
mov
dec
jne
outs
ja
jo
jl
cs
jecxz
dec
sbb
aas
sbb
in
jmp
inc
inc
pop
ja
jns
popa
jl
jb
sub
fwait
xor
outs
ficomp
sbb
mov
lock
sbb
push
and
gs
mov
fwait
jp
test
repnz
and
cmp
mov
mov
push
mov
pop
std
mov
out
mov
push
and
cmp
push
cmp
sbb
das
cld
jns
nop
dec
mov
or
mov
mov
scas
sbb
aas
mov
pop
sahf
mov
mov
cdq
inc
ror
rcr
mov
pop
adc
mov
fs
aaa
dec
mov
outs
aas
xor
mov
cmp
sti
leave
clc
sahf
push
fwait
lds
add
mov
pop
ds
je
pop
cmp
cmp
dec
pop
xlat
mov
mov
jnp
jl
and
mov
sbb
cli
sbb
cmp
mov
pop
call
dec
xor
pop
mov
pop
adc
in
fild
jle
mov
and
jge
cmp
popf
aam
push
(bad)
out
xchg
es
jl
ins
mov
mov
fcom
pop
pop
mov
add
int
lahf
and
dec
fstp
jnp
sbb
movs
call
adc
mov
inc
pop
add
aam
sub
and
aad
ins
dec
ds
mov
mov
mov
or
add
jl
inc
shl
and
sub
and
shl
sar
cmp
push
push
not
fistp
mov
sbb
or
sub
(bad)
and
clc
sbb
mov
xor
add
xchg
adc
sub
sub
fwait
mov
enter
and
in
cli
sbb
sbb
inc
jno
loop
es
cmp
cmc
dec
jle
cmp
imul
fldlg2
scas
cmp
add
pop
pop
mov
mov
jmp
aas
mov
shr
jle
jmp
scas
test
mov
push
xor
pop
fidivr
cmp
fxch
ficomp
div
ss
cdq
retf
in
js
dec
fcomp
pop
add
int
push
out
mov
leave
adc
jge
mov
and
mov
jp
mov
lahf
and
push
sub
das
xchg
fnstcw
sub
jmp
add
les
cwde
inc
pop
xchg
bound
sbb
and
jle
push
sbb
jb
xor
sbb
dec
in
inc
mov
dec
test
leave
xchg
xlat
ss
jecxz
jl
cmp
inc
sub
das
sbb
cmp
xor
icebp
in
(bad)
sbb
xchg
ds
repz
mov
sbb
and
inc
cli
jnp
rcl
cmps
aas
(bad)
pop
mov
outs
jle
cld
mov
mov
sbb
pop
fdiv
cmps
mov
add
ss
test
sar
mov
sbb
push
xor
repnz
shl
dec
ret
inc
popf
sbb
cmps
dec
test
sbb
aaa
jg
dec
loop
mov
or
das
(bad)
cmp
dec
add
mov
cwde
fisttp
ja
sbb
sub
test
adc
pushf
mov
inc
daa
js
rcr
hlt
aas
lea
fistp
js
es
(bad)
inc
inc
jbe
test
test
mov
out
sbb
clc
enter
mov
sub
or
mov
out
mov
aas
popf
mov
cwde
and
(bad)
test
scas
aam
cmp
mov
imul
loope
adc
out
jg
imul
movs
pop
mov
mov
add
add
aas
lahf
jae
cmps
sub
mov
adc
cli
fidiv
lea
sbb
adc
stc
xchg
cmp
cmp
sbb
dec
mov
sbb
aas
std
sub
fsub
push
mov
lds
pop
mov
jbe
dec
adc
or
xchg
xor
jle
jns
mov
adc
pop
inc
rcr
fild
jns
push
in
(bad)
call
fisttp
pop
out
sti
mov
jns
jg
sbb
pop
stos
call
das
mov
cmps
fcom
or
repnz
sub
in
mov
mov
add
add
inc
cmp
fidivr
daa
lds
(bad)
cs
jle
aas
add
out
pop
mov
sbb
mov
data16
jae
fidiv
mov
clc
and
add
inc
int
loopne
xchg
push
fsubr
inc
xchg
push
jle
mov
test
mov
lock
stc
stos
sbb
mov
mov
loopne
push
test
mov
pop
cmp
(bad)
mov
pusha
cmp
fbld
sub
add
pop
inc
mov
pop
shl
sub
push
je
pusha
mov
mov
fadd
pop
jg
rcr
mov
popf
mov
jl
mov
(bad)
std
cmp
mov
bound
clc
sub
add
sub
fidivr
push
aam
fistp
cmp
mov
and
iret
pop
mov
xor
rol
imul
int3
jnp
mov
lahf
sbb
lea
xor
pusha
sbb
aas
out
adc
jnp
jge
into
ror
jecxz
dec
scas
jge
sbb
test
clc
mov
pop
int3
cs
aas
aas
and
dec
retf
cli
js
aaa
adc
aam
xor
in
inc
mov
sbb
jnp
stos
sub
nop
pop
neg
imul
inc
mov
sbb
and
std
stc
and
and
rol
aas
scas
(bad)
cli
rcr
adc
adc
add
dec
mov
outs
xor
jns
mov
imul
mov
push
rol
mov
cmp
pop
adc
push
add
mov
sbb
in
pop
jne
retf
fcmovb
sbb
inc
dec
jbe
cmc
mov
mov
cmp
mov
and
out
ds
pop
(bad)
push
cwde
mov
pop
pop
mov
add
push
mov
add
pop
fild
out
cmp
pop
push
lods
pop
cmp
pushf
sbb
sbb
outs
jmp
(bad)
aaa
aas
xor
ins
mov
sbb
and
ret
sbb
jle
iret
scas
jge
shr
jl
icebp
pop
mov
xor
jb
aas
add
fmul
in
mov
push
add
cld
into
pop
add
sub
jl
dec
add
jnp
pop
push
mov
cmp
cmp
sar
and
lock
xor
repnz
add
xchg
mov
cmp
pop
inc
xchg
sbb
mov
stc
push
(bad)
push
xchg
out
jno
movs
das
mov
neg
xor
mov
xlat
les
retf
pop
mov
sbb
dec
mov
lahf
imul
dec
sub
mov
movs
test
jp
push
sti
out
sbb
dec
cld
das
mov
sub
mov
fild
int
ds
inc
sbb
in
ds
shr
push
add
lods
sti
gs
fwait
ja
add
push
sbb
lods
dec
and
retf
dec
aaa
sbb
jge
aas
jo
pop
std
retf
mov
sub
push
jmp
pop
mov
xlat
mov
or
fistp
lahf
jmp
jns
cwde
mov
imul
push
fistp
fsubr
(bad)
jle
clc
xchg
lds
mov
das
dec
jg
clc
pop
idiv
xor
cli
test
mov
pusha
push
ds
xchg
js
jge
cmp
xchg
icebp
aas
pop
xlat
int3
mov
mov
ds
dec
sbb
jle
mov
cmps
imul
sbb
push
fnsetpm(287
std
into
jecxz
jp
add
je
repz
sub
sbb
jb
sub
dec
xchg
jno
mov
mov
add
sub
(bad)
sub
inc
sar
das
xor
xor
repz
pusha
ret
cs
inc
sbb
data16
jg
mov
fidiv
(bad)
push
lahf
sbb
fstp
adc
jbe
mov
cmp
imul
and
js
sub
mov
cmp
sbb
cmp
jmp
mov
clc
sar
or
push
fisubr
adc
syscall
sub
pusha
pop
gs
aaa
push
and
sbb
sbb
pusha
dec
cwde
xchg
sahf
inc
(bad)
sbb
fstp
sbb
mov
sahf
neg
js
call
cld
pop
dec
out
mov
jne
push
cmp
cmp
jnp
repz
xor
(bad)
mov
mov
fidiv
sub
mov
and
cmp
mov
xlat
ret
mov
out
pop
daa
scas
mov
shr
inc
aas
dec
mov
mov
aaa
repnz
cli
gs
nop
add
stos
rcr
fnop
mov
add
push
xchg
adc
jl
call
xor
pusha
dec
pop
pop
jns
cmp
imul
cld
xchg
adc
add
sbb
mov
clc
sub
xor
int
ds
popf
fistp
sahf
push
sbb
fidivr
push
addr16
rcr
pop
mov
jno
and
inc
dec
ins
cmp
das
faddp
std
jmp
xchg
push
mul
call
pop
mov
dec
cmp
xor
or
outs
sahf
cmp
jns
dec
neg
pushf
test
push
sbb
xchg
fdiv
das
or
and
nop
(bad)
outs
sub
jg
fnstcw
fistp
add
mov
pop
pop
in
mov
sar
xor
das
pop
xor
sbb
fisubr
sbb
ds
cwde
push
add
pop
mov
mov
push
inc
sub
shr
push
jle
dec
cmp
pop
fmul
ds
inc
lea
cmp
test
cmps
mov
xor
xor
js
pop
mov
sub
adc
pusha
or
mov
and
adc
mov
mul
cmp
fidivr
aas
jle
rcl
adc
hlt
in
xchg
ss
xor
enter
dec
out
add
cli
mov
sbb
test
push
jg
(bad)
mov
adc
sbb
xchg
enter
clc
mov
and
jecxz
jg
repz
shl
or
pop
xchg
outs
sar
jae
push
je
(bad)
call
mov
add
pop
mov
aam
pop
sti
(bad)
ins
mov
shl
bound
jns
pop
xor
lahf
ficom
je
icebp
shl
mov
mov
xchg
jle
retf
aam
fild
je
repnz
adc
imul
jle
test
sti
fild
sbb
cli
sub
sub
cli
mov
mov
imul
or
add
dec
cmps
jg
out
jmp
cmp
mov
xchg
scas
ss
inc
shr
in
mov
pop
std
xchg
call
cli
rcr
jnp
loope
sbb
fnstsw
es
xchg
and
and
mov
and
cmp
je
into
add
outs
cli
or
push
cmp
sar
jmp
mov
lock
mov
call
nop
mov
fisubr
(bad)
lods
dec
and
es
pusha
xor
stc
adc
dec
add
mov
in
mov
sub
pop
sbb
pop
movs
aam
mov
js
pop
fsub
fisubr
add
in
inc
cmp
xor
aas
test
js
sub
sub
jmp
mov
(bad)
jg
js
dec
or
scas
xchg
in
lahf
or
push
sbb
retf
je
movs
jmp
data16
mov
aas
fimul
or
iret
aaa
cmp
shl
test
ja
cmp
xchg
fwait
dec
add
or
mov
cmp
mov
repz
inc
and
das
add
sbb
add
not
mov
mov
push
das
call
adc
cli
dec
aam
mov
sub
aas
fiadd
jbe
mov
adc
or
dec
adc
inc
dec
or
mov
enter
pop
test
das
cmp
ds
mov
bsf
adc
lahf
jle
cld
dec
movs
push
sbb
push
add
mov
sub
(bad)
pop
int3
sub
adc
sti
sbb
lods
fidiv
pop
or
xor
add
mov
xor
fistp
mov
mov
sub
push
sbb
sbb
dec
xor
or
fsubrp
mov
leave
cmp
nop
jb
and
jle
pop
(bad)
rcr
jl
js
sub
fnstsw
aaa
inc
xchg
dec
rcr
cli
xor
dec
ss
jne
push
inc
jge
xor
(bad)
jne
mov
mov
sub
jge
fcomp
(bad)
jle
sbb
cmp
push
adc
das
test
and
mov
adc
inc
mov
retf
jle
stos
push
(bad)
cmc
ret
mov
loop
rcr
mov
lods
nop
or
pop
jo
cwde
add
cmp
and
in
xor
add
push
(bad)
xor
fistp
fnstcw
ss
les
push
cmps
cmp
sbb
loopne
sbb
cmp
fcom
and
and
mov
test
add
adc
fwait
sub
mov
xor
ss
jmp
and
sbb
pop
push
clc
shl
mov
(bad)
cmovge
shl
ror
mov
enter
pop
sbb
icebp
ret
in
lods
sbb
aas
cwde
into
cmp
out
not
dec
imul
ins
mov
inc
iret
inc
icebp
nop
stos
mov
mov
sbb
(bad)
aam
pop
in
xchg
out
sub
gs
fistp
out
ds
push
cs
fild
adc
cld
fisub
mov
pop
mov
movs
cmp
stos
shr
xor
push
(bad)
push
not
xor
fcmovne
inc
pop
jle
aad
fsubrp
fild
mov
clc
xor
mov
sub
push
faddp
push
jle
jle
or
clc
sti
dec
test
push
mov
es
xor
ret
outs
mov
stos
imul
das
rcr
out
enter
jge
jl
nop
push
loope
pusha
dec
(bad)
imul
push
mov
(bad)
cmp
daa
lahf
and
jns
clc
repnz
pop
mov
stos
in
sbb
ds
aad
push
sbb
repnz
fwait
cmps
mov
fmul
fadd
sbb
mov
sub
pushf
sbb
or
and
cmp
test
mov
mov
pop
jae
aas
stos
sahf
icebp
outs
sub
aas
adc
cmp
or
dec
stos
and
fld
movs
fstp
aas
and
into
nop
cmp
sbb
cmp
fdivr
mov
push
mov
mov
xor
fincstp
std
fdiv
dec
dec
pop
aam
push
xor
jnp
lahf
sub
pop
sbb
sbb
sub
dec
cmp
dec
cmp
sub
xchg
mov
xlat
push
push
out
int
or
push
je
jns
jge
xchg
sub
push
aas
or
push
jle
call
call
and
ret
loop
cmp
sar
or
mov
stc
inc
scas
mov
lea
repnz
pop
and
cmps
in
int3
add
call
test
cmp
push
ss
pop
pop
ins
jo
nop
sahf
mov
sahf
jle
jp
js
xchg
and
pop
adc
add
lock
mov
stc
daa
jge
aas
cmp
dec
pop
sbb
and
mov
sbb
cmovae
outs
cmp
mov
push
mov
repz
jmp
and
push
add
(bad)
sbb
or
push
leave
cs
cmp
pop
sbb
inc
std
add
push
add
sub
add
pop
sar
xor
mov
inc
mov
or
lock
pushf
mov
stos
call
sbb
mov
xor
es
jl
mov
imul
jnp
jle
dec
cmps
and
mov
jl
sub
adc
mov
addr16
jns
mov
or
test
mov
cmp
add
xchg
cmp
cwde
jbe
inc
repnz
mov
idiv
fild
imul
cmps
or
pop
pop
xor
sahf
neg
pop
cmps
jne
xchg
ds
mov
dec
das
or
mov
xlat
out
ds
and
pop
sbb
sbb
jnp
call
aaa
cmps
stos
jo
sbb
inc
scas
sbb
dec
cmp
cli
pusha
ds
push
outs
jmp
jg
mov
sbb
push
jnp
sar
push
mov
dec
cmp
cs
cld
aas
out
scas
jae
ins
add
leave
sbb
sahf
repnz
xchg
cmp
mov
fwait
jb
mov
or
jno
and
jnp
cmp
push
in
pushf
push
mov
cmc
add
(bad)
lods
in
scas
and
mov
mov
mov
(bad)
mov
or
rcr
into
mov
inc
jnp
add
pop
sub
add
add
mov
ins
fld
mov
sbb
and
mov
dec
mov
jbe
imul
mov
mov
mov
repnz
aad
inc
scas
cmps
sub
mov
stc
push
outs
aaa
fcomp
mov
leave
mov
add
outs
or
out
mov
(bad)
out
nop
pop
arpl
mov
sub
std
scas
add
pop
mov
in
jmp
ins
push
ds
sub
leave
jo
ret
adc
cmp
adc
jmp
clc
xor
mov
mov
sbb
or
hlt
sbb
clc
aad
jl
sbb
(bad)
nop
sbb
rcr
jle
jb
cld
jl
daa
adc
pop
sub
xchg
jle
push
retf
xchg
enter
push
sub
add
sub
repnz
jl
jnp
out
jnp
aas
xchg
sub
mov
mov
bound
adc
jle
lods
ficom
jg
cmp
sub
jnp
dec
out
idiv
into
sbb
iret
repz
dec
clc
fld
adc
cmp
repnz
std
das
movs
dec
adc
jnp
add
ror
js
mov
enter
add
shl
jnp
les
test
xor
mov
fadd
adc
cdq
mov
cmp
scas
jmp
aam
adc
fisubr
mov
aas
clc
dec
add
repz
(bad)
(bad)
adc
fld
je
xchg
jl
jg
xor
push
mov
fsubr
mov
and
rol
fnsave
sbb
mov
mov
cmp
(bad)
and
das
sti
out
rcr
hlt
(bad)
mov
ds
and
sbb
fidivr
sbb
dec
adc
ds
aas
test
fld
pop
gs
cli
or
or
ins
sahf
cmc
fcomp
std
(bad)
pop
inc
dec
(bad)
adc
push
test
sbb
cmp
cld
add
aaa
mov
or
inc
jns
ins
out
test
jl
cs
cmps
jmp
ds
hlt
pop
sbb
sub
and
push
es
jle
pop
stos
mov
jns
pusha
bound
xchg
js
mov
mov
cmp
iret
aas
call
fbld
jno
mov
mov
cmc
mov
movs
fbstp
pop
xchg
xchg
std
loopne
adc
movs
idiv
outs
sbb
cmp
pushf
pop
stos
shl
pop
cli
sar
call
(bad)
jl
rol
mov
mov
test
sar
sbb
mov
mov
sub
or
mov
nop
inc
test
sub
add
nop
test
loop
loop
sar
sub
imul
test
xor
stos
pusha
sbb
cmp
adc
cld
push
mov
and
pop
idiv
mov
sub
std
movs
push
xor
or
jns
pop
fdiv
mov
ins
pusha
jb
mov
jnp
mov
(bad)
repnz
pusha
jg
addr16
ins
cli
adc
adc
shr
cmps
hlt
cmp
xchg
push
inc
add
fld
retf
and
jae
bound
icebp
jecxz
out
sti
pusha
aam
jmp
mov
shl
jae
imul
push
mov
cli
mov
cmp
add
imul
push
popf
cmp
and
mov
adc
xor
loopne
jb
pop
jge
sbb
popf
xchg
inc
cmp
cmp
sub
das
or
js
fsubp
inc
std
jge
mov
mov
inc
(bad)
das
mov
dec
clc
leave
stos
out
dec
sub
pusha
es
jnp
push
add
mov
ins
enter
mov
loopne
mov
ja
xor
pop
xor
push
xor
mov
mov
xor
in
add
sbb
xor
mov
fst
push
adc
xchg
inc
(bad)
dec
jo
cmp
lds
out
pop
inc
pop
xlat
scas
sbb
(bad)
xor
js
sbb
movs
test
xor
and
add
and
dec
stc
sbb
push
inc
(bad)
mov
jbe
adc
repnz
mov
jg
mov
nop
fld
lahf
shr
mov
cdq
push
xchg
pop
xor
pop
jbe
cmc
push
sbb
xchg
mov
mov
aaa
xchg
ss
sahf
hlt
out
jle
sub
aas
test
(bad)
push
mov
xchg
xchg
xor
popf
add
mov
scas
ds
xlat
enter
popf
or
jle
imul
xor
xchg
ins
fwait
mov
out
pop
inc
inc
pop
jg
jnp
aas
dec
add
jecxz
dec
jg
std
sbb
cmp
ja
jl
scas
xor
lahf
push
pusha
adc
jg
mov
pop
sub
add
sbb
pop
cmp
adc
mov
mov
cmps
xor
outs
xor
lahf
mov
stos
and
add
test
push
pop
jle
outs
and
je
stos
cmp
and
mov
sbb
cmps
adc
addr16
fcmovnu
sbb
add
add
mov
jle
adc
pop
clc
pop
aam
aas
add
retf
into
pop
mov
jmp
nop
cdq
int
sub
fld
sbb
push
repnz
mov
(bad)
mov
and
stos
aaa
sub
dec
aas
xor
add
test
mov
cmp
and
pop
aaa
sub
mov
jns
sbb
shr
xchg
cmp
push
pop
adc
pop
cld
pop
mov
retf
mov
mov
xor
cs
ret
shr
clc
mov
hlt
mov
and
push
inc
pop
add
test
shl
sub
jge
(bad)
jecxz
nop
jnp
mov
cmp
dec
and
sub
mov
xor
sub
dec
aas
inc
jns
xor
repnz
fild
push
fidivr
add
pop
jge
div
aam
adc
shl
cmp
mov
xchg
clc
sub
sub
and
aas
pop
mov
bound
jmp
mov
pop
lock
adc
std
data16
xor
sahf
repnz
mov
sbb
pop
adc
pop
test
je
dec
cmp
cmp
(bad)
pop
in
cmp
(bad)
and
push
sbb
enter
and
ds
push
(bad)
outs
and
or
neg
sub
aas
jnp
sub
pusha
ins
lea
cmps
js
out
scas
aaa
int
mov
mov
jnp
test
repnz
cdq
mov
into
mov
(bad)
aas
and
or
stc
sar
ds
mul
mov
xchg
mov
xor
mov
xchg
ja
stos
cmps
data16
ret
mov
mov
adc
int
jle
cmp
aaa
call
xchg
sub
mov
stos
or
or
fdivr
nop
(bad)
or
call
xor
cmp
mov
sub
fisttp
sbb
(bad)
mov
or
add
stos
sahf
das
push
(bad)
clc
pop
cli
push
ins
dec
sbb
sub
test
shr
outs
aas
sbb
jo
sub
inc
xor
xor
jle
and
dec
xchg
pop
mov
and
daa
nop
pop
cmp
add
jl
mov
jb
jl
cmp
pop
adc
push
clc
outs
xchg
sar
sub
sahf
shl
das
in
ins
dec
mov
mov
ret
clc
dec
pop
call
adc
je
data16
xchg
sti
in
ins
or
cmp
sbb
rcr
ret
or
sbb
mov
mov
add
and
pop
call
imul
movs
movs
mov
fcmovnb
sub
scas
shl
sti
mov
inc
sbb
mov
pop
out
stc
cmp
iret
dec
inc
xor
es
jl
and
cmp
push
fstp
jnp
ss
xchg
sar
push
mov
sbb
aas
mov
lds
xchg
mov
inc
mov
fisttp
(bad)
and
push
inc
pop
fisub
mov
ss
mov
adc
add
addr16
das
call
mov
or
das
test
jle
sub
mov
mov
mov
repnz
fs
outs
mov
add
call
push
inc
pushf
sar
cmp
aaa
call
iret
push
popf
mov
dec
xor
int3
ss
mov
sbb
and
and
ins
sahf
adc
ret
mov
stos
jbe
pop
out
mov
cmp
outs
push
jp
push
aas
fstp
push
cld
cmp
and
cmp
inc
(bad)
and
stos
mov
pop
mov
mov
ret
std
xlat
xchg
sbb
pusha
dec
xchg
fwait
push
outs
cmp
jle
mov
cmp
aaa
mov
mov
sub
das
cmp
cmp
mov
movs
dec
mov
icebp
sub
mov
arpl
pop
test
sub
cmp
idiv
sub
fimul
dec
mov
data16
and
rcr
add
sub
mov
sbb
aaa
add
fidivr
jo
mov
imul
gs
js
mov
or
je
iret
aaa
mov
adc
pop
jl
scas
cmp
pop
retf
aaa
loopne
mov
xor
or
test
aas
lock
rcr
mov
xor
jg
sub
mov
xchg
mov
cmp
jno
or
movs
add
pop
and
pop
mov
mov
ror
pop
aas
jle
pop
rol
sbb
cs
or
les
mov
adc
sar
ficomp
out
jo
mov
outs
xchg
popf
cmc
jmp
test
sub
aas
mov
std
jle
push
jnp
push
in
pusha
or
lds
cmps
push
(bad)
sub
xchg
fyl2xp1
xchg
xor
arpl
mov
mov
add
or
cmp
aaa
push
and
push
(bad)
jnp
adc
in
sub
sbb
inc
stos
nop
mov
sub
inc
pop
inc
xor
daa
push
sub
outs
shl
aas
arpl
or
stc
mov
ret
add
sbb
jl
ss
pusha
pop
ror
loopne
repnz
movs
(bad)
sbb
mov
push
mov
dec
inc
nop
push
adc
cmp
cmp
clc
sub
mov
jno
mov
jge
iret
push
adc
cmp
outs
adc
jnp
xchg
ds
mov
jno
repnz
popf
add
xchg
loopne
jge
dec
xor
mov
std
jl
mov
add
or
das
int3
loope
test
(bad)
and
les
push
cmp
fidivr
(bad)
push
pop
aaa
pusha
scas
dec
leave
sbb
jmp
ss
push
aad
fiadd
xor
xor
movs
fstp
scas
xor
fistp
ins
mov
cmp
mov
pushf
jle
pop
pop
cmp
dec
adc
lock
in
mov
je
jg
jecxz
icebp
and
call
out
pop
sub
sub
add
nop
mov
(bad)
stos
repnz
dec
mov
sbb
shr
push
loope
nop
fwait
xor
adc
(bad)
cmp
push
aas
es
mov
call
clc
jl
or
in
sub
aas
xor
add
and
xchg
aaa
push
retf
inc
test
fdiv
fidivr
mov
mov
retfw
mov
cdq
test
sub
xor
push
add
das
call
add
jnp
sbb
and
fbstp
pop
cmp
mov
and
hlt
dec
jns
sub
out
arpl
call
imul
fcomp
retf
out
jg
mov
and
ja
xor
add
mul
sbb
cli
push
and
stc
xlat
push
movs
dec
lea
cmc
inc
sbb
dec
sbb
cmp
mov
jae
stc
sub
xor
aad
jl
test
or
sbb
fstp
imul
sahf
cli
outs
cmp
sbb
call
mov
sar
es
dec
(bad)
sbb
das
xchg
fdivr
jno
arpl
std
jl
mov
jnp
aas
and
repnz
aam
mov
pop
outs
push
ret
sbb
cwde
jle
cmp
cmps
jl
ret
out
add
dec
jl
lods
xchg
and
cmps
(bad)
xor
ins
xor
pop
inc
mov
dec
cmc
int
pop
mov
cdq
fcom
mov
loop
jle
and
inc
xor
stc
call
sbb
sub
adc
shl
mov
and
fidiv
pop
jnp
jmp
ficom
js
bound
mov
aas
(bad)
xor
js
or
(bad)
and
in
test
xor
add
mov
out
jl
das
dec
rcr
jg
icebp
pop
xor
sub
xchg
and
sbb
ss
push
int3
mov
loopne
pop
inc
push
es
mov
inc
aas
nop
(bad)
into
lahf
sbb
sbb
sub
sbb
retf
sbb
jmp
adc
sbb
add
pop
adc
dec
lahf
hlt
cmp
pop
add
adc
xor
stc
scas
push
adc
and
ja
sub
xor
lods
ror
cmp
add
xor
push
mov
jl
test
dec
enter
pop
std
pop
mov
loopne
mov
sub
aas
es
push
xchg
mov
mov
cmp
xor
pop
je
xchg
adc
mov
call
pop
push
mov
sub
cdq
xchg
and
mov
cli
bound
ficomp
and
sub
out
out
xor
ss
movs
xor
fwait
mov
mov
xor
sub
das
add
std
mov
xor
sub
xchg
jecxz
adc
ja
push
ds
xchg
fst
jnp
outs
sub
ror
mov
xor
jns
fdivp
cwde
in
fs
aas
sahf
sahf
(bad)
pushf
repnz
pop
cmp
scas
lock
or
mov
xor
mov
fnstsw
jmp
or
lahf
cmp
xor
xor
rcr
out
stos
add
mov
mov
add
js
je
pop
out
jl
stos
enter
sbb
sbb
sub
movs
and
xor
cmp
xchg
adc
jecxz
shl
repz
lahf
fisttp
xor
pop
ins
and
sub
stc
ret
cmp
rcr
aad
ret
cmp
fdivr
and
es
mov
int3
sbb
jae
sbb
cmp
(bad)
(bad)
pop
adc
cdq
cmp
mov
jg
and
and
enter
hlt
inc
mov
sub
push
test
sub
push
call
repz
inc
mov
je
jmp
mov
stc
stos
ds
lods
retf
cmp
sub
pop
sub
mov
das
add
jmp
jns
or
jl
pop
xchg
pop
cmp
add
lods
shl
shr
sbb
out
fsub
mov
repz
aas
loopne
push
in
xor
and
call
xor
retf
push
aas
aad
cmp
pop
cdq
xor
out
dec
call
cmp
fnsave
fcomp
ja
sti
cs
mov
repnz
pusha
call
add
pop
lods
aaa
cmp
je
push
adc
fbld
xacquire
xchg
out
and
sub
ds
imul
pop
enter
ds
sub
dec
push
inc
inc
outs
dec
mov
jle
mov
push
sbb
shl
cmp
loopne
add
out
je
inc
pop
cdq
cdq
jno
mov
or
daa
fisubr
mov
mov
mov
movs
adc
cmp
or
aas
jmp
cmp
sti
push
xchg
scas
mov
cmp
add
mov
sub
jl
xor
pop
mov
and
xor
jbe
sar
cmp
mov
inc
imul
pop
mov
adc
mov
icebp
add
aas
gs
mov
adc
jbe
movs
arpl
pop
mov
cmp
add
adc
mov
aam
js
leave
mov
mov
and
add
cmp
pop
mov
xchg
mov
jnp
dec
sar
mov
sbb
imul
cmp
push
shl
cmp
retf
fldcw
es
shr
imul
lds
std
cmp
adc
mov
pop
push
add
jp
out
xchg
sbb
mov
sbb
cwde
fistp
sbb
pop
cmp
xchg
ds
pop
jle
sbb
mov
xlat
push
pop
ret
jmp
or
retf
sbb
std
xchg
cs
mov
out
pop
mov
mov
jecxz
(bad)
push
sub
into
icebp
aas
js
xchg
in
(bad)
pop
mov
push
out
xor
mov
add
(bad)
push
jbe
cmp
or
cs
sahf
pop
test
inc
pop
pop
dec
gs
cli
and
or
cmp
fdiv
mov
sti
call
lock
cmp
imul
outs
sbb
call
cs
jp
pop
mov
pop
mov
mov
fmul
push
adc
retf
xor
mov
jle
cmp
mov
cdq
mov
mov
pop
cmp
aas
pop
pop
loopne
cli
mov
test
sbb
es
cmp
mov
pop
fld
out
or
mov
ds
cmp
popa
mov
shl
sub
push
xor
pop
pusha
out
or
mov
(bad)
into
cmp
ins
aas
mov
pop
test
push
int3
sub
sahf
ror
jle
jb
push
jle
loopne
mov
enter
or
les
jmp
ficomp
xchg
push
inc
adc
scas
loopne
cmp
iret
jl
jmp
cmps
sbb
mov
(bad)
out
pop
cli
xchg
jle
cmp
sub
aad
lock
mov
sahf
push
enter
scas
dec
fsubr
mov
pminsw
lods
iret
js
repnz
sub
push
sahf
icebp
jb
test
mov
fmulp
cs
pop
mov
jo
call
mov
(bad)
in
mov
push
sbb
shl
jae
repnz
lods
jns
in
outs
cli
mov
sub
dec
sub
aas
arpl
inc
inc
into
gs
mov
cs
(bad)
mov
aas
loopne
sub
sub
(bad)
aas
push
jne
clc
sub
xchg
mov
and
jmp
sbb
mov
fdiv
jle
sar
sbb
sbb
sub
xor
cmp
pop
or
pop
xchg
aaa
shl
pusha
scas
adc
mov
mov
jecxz
ds
call
push
cld
mov
jmp
rol
inc
clc
jns
adc
(bad)
jp
std
(bad)
cmp
sub
dec
add
xor
sbb
dec
and
or
ficom
jnp
sbb
js
ret
or
inc
inc
jne
in
(bad)
push
rcr
fmul
xor
mov
mov
sbb
mov
dec
shr
in
and
or
inc
mov
jl
or
fstp
sub
cmp
sub
or
aas
ja
nop
int3
add
jecxz
push
sbb
cmp
(bad)
xlat
jle
data16
cmp
or
repz
adc
jl
das
pop
fisttp
sbb
xor
js
adc
mov
fdivrp
mov
call
dec
mov
adc
fstp
jecxz
icebp
call
add
jne
js
cdq
adc
sbb
std
adc
add
sub
push
mov
mov
(bad)
nop
add
jae
inc
addr16
adc
scas
out
jge
inc
jecxz
jmp
cmp
clc
sbb
pop
out
dec
mov
sub
mov
xor
pop
popa
dec
mov
das
xlat
sub
xor
dec
stc
mov
xor
imul
mov
clc
mov
add
lods
nop
and
test
push
sbb
rcl
and
mov
and
sbb
aaa
xor
jge
ds
inc
(bad)
cmp
pop
mov
mov
pop
push
jnp
inc
xor
sbb
xor
fcomp
push
push
std
jo
pop
mov
xchg
adc
call
cmp
lds
add
mov
stos
cmp
repnz
and
out
mov
dec
fs
icebp
bound
aas
call
xor
je
dec
mov
cmp
lds
ss
mov
popf
sub
movs
ret
ss
xor
shl
push
push
jle
mov
mov
xor
mov
jl
pop
aas
xor
pop
xchg
inc
repz
cmps
jmp
js
clc
fiadd
pop
fsub
aam
fstp
repnz
adc
stos
arpl
jnp
(bad)
clc
xchg
jmp
test
cs
jle
ins
(bad)
inc
adc
mov
push
rol
(bad)
pop
dec
xchg
repnz
test
dec
inc
and
mov
sub
sbb
outs
pop
mov
and
ret
test
sbb
pop
xor
sahf
nop
inc
mov
cmp
cmp
in
mov
stc
fmul
jmp
pop
and
push
jle
repnz
xor
das
inc
sbb
push
fstp
(bad)
sbb
repnz
xchg
or
cmps
and
xor
scas
lods
or
jl
sti
lahf
(bad)
and
pop
xchg
pop
cmps
inc
add
stc
pop
or
aas
sub
xchg
or
mov
(bad)
(bad)
mov
(bad)
jl
mov
pop
(bad)
mov
je
pop
pusha
sub
mov
fcom
inc
ins
jge
icebp
sbb
xor
jp
add
pusha
outs
arpl
mov
test
mov
mov
sub
pop
pop
cli
aas
loope
sub
inc
movs
(bad)
cmp
mov
mov
(bad)
jmp
mov
push
xchg
cld
jl
daa
jns
outs
dec
inc
mov
fidiv
pop
and
adc
pop
jmp
or
pop
mov
retf
cmp
icebp
cmp
bound
xchg
mov
sbb
cmp
clc
in
push
cli
adc
pop
sti
jg
xchg
push
test
pusha
jns
xchg
(bad)
cmp
daa
cli
mov
xchg
mov
dec
aas
lahf
xor
mov
inc
mov
sub
das
js
mov
push
pop
mov
scas
add
adc
imul
jo
das
mov
inc
inc
movs
aaa
cmps
or
clc
nop
push
dec
push
jle
in
push
cmps
xor
repz
pusha
rol
rcl
icebp
rol
and
sar
aaa
fcomp
call
lods
aas
pop
jp
add
out
xchg
push
repnz
sar
cmp
test
mov
mov
xor
or
inc
imul
pop
xor
sbb
aas
mov
int3
loopne
sub
or
sbb
psrlw
and
pop
add
cdq
jo
jl
rol
lock
inc
jmp
dec
enter
fnstsw
fucomip
mov
and
int3
(bad)
mov
xor
jns
pop
std
mov
jp
repnz
xor
jo
fsubr
push
ror
leave
call
imul
fwait
sub
xchg
pushf
(bad)
clc
retf
sbb
sbb
out
add
lahf
imul
ja
jl
pop
aam
cmp
and
jl
push
mov
arpl
dec
enter
mov
pop
mov
data16
mov
nop
jbe
pop
les
repnz
sub
adc
jo
pop
or
cmp
inc
mov
(bad)
sbb
in
pushf
mov
pop
fmul
int
jp
xor
cmc
ds
int3
stos
pop
mov
stos
and
xor
push
lods
dec
mov
cli
mov
aaa
inc
(bad)
shl
cmp
dec
sbb
bnd
jmp
cdq
jl
inc
xchg
fidiv
enter
(bad)
mov
mov
mov
or
cmp
je
dec
leave
dec
pop
sbb
in
xlat
mov
mov
cmp
mov
js
imul
aad
gs
call
and
pop
nop
and
add
pop
xchg
xor
xor
fs
sbb
xchg
aad
mov
test
push
sbb
clc
push
mov
mov
mov
and
fcomp
inc
or
ins
retf
lea
das
std
sub
sbb
xchg
repz
aad
cmp
jge
out
cmp
mov
test
enter
jmp
jge
in
cmp
stc
ja
push
stos
lahf
data16
xor
(bad)
aam
aaa
fidiv
data16
mov
jle
pop
call
(bad)
sub
mov
repnz
bound
fwait
das
mov
mov
add
int
aas
mov
pop
shl
mov
push
mov
jbe
push
aam
add
scas
mov
cmps
neg
mov
xchg
retf
jno
sub
js
dec
sbb
sub
mov
or
fdiv
mov
sahf
and
and
mov
ja
or
mov
dec
sub
cmp
sbb
sahf
mov
mov
stos
cli
sbb
jae
sbb
es
int3
lods
sbb
js
js
movs
mov
cmp
push
repz
adc
sub
mov
nop
aas
and
dec
std
fidiv
mov
ja
and
call
pop
mov
ss
fadd
mov
and
push
cmp
scas
jb
ja
mov
ror
mov
pusha
adc
test
pop
mov
sbb
std
(bad)
pop
xor
or
sar
sbb
add
cmp
pop
popf
sbb
lock
mov
jns
mov
mov
pop
(bad)
stc
out
(bad)
cli
cmp
cdq
into
push
cmps
xchg
out
retf
je
or
fmul
inc
(bad)
clc
rcr
or
pusha
inc
xchg
nop
cli
(bad)
push
adc
mov
xchg
sub
and
and
pop
sbb
mov
ds
fild
pop
and
xor
dec
sub
adc
clc
cmps
mov
mov
inc
mov
sbb
fwait
aas
les
mov
xchg
in
addr16
fsub
sbb
test
adc
mov
pop
mov
cmps
xor
repnz
mov
test
pop
mov
cs
pusha
push
add
les
rol
xchg
mov
dec
cmc
repnz
mov
setbe
sbb
mov
loopne
fs
jg
clc
pop
mov
or
adc
jl
xor
add
aam
sbb
dec
fldcw
cli
mov
adc
xlat
div
pop
push
adc
mov
dec
loopne
and
sti
fiadd
adc
mov
push
mov
daa
loop
fbstp
mov
mov
push
cmp
and
add
daa
push
dec
and
mov
mov
jmp
je
sub
and
mov
adc
xlat
cmp
lahf
cld
ins
xor
bound
jecxz
jmp
jbe
mov
pmullw
and
ins
ficom
and
fnstcw
fwait
jae
jnp
xor
sbb
dec
inc
cld
push
mov
push
jge
mov
test
stos
mov
xchg
aas
mov
(bad)
cmp
pop
stc
repnz
sbb
push
enter
mov
les
mov
outs
mov
sbb
dec
sub
std
cmp
cmp
adc
mov
cmps
jnp
lock
pop
inc
xchg
add
adc
call
mov
mov
pushf
rcr
daa
in
fs
enter
mov
test
mov
and
std
stos
aad
sti
or
pop
push
pop
sbb
loopne
mov
bound
jns
outs
jno
push
lea
cmp
sbb
cmp
xor
pop
push
int3
xchg
sub
clc
push
repnz
clc
(bad)
or
sar
pusha
mov
jbe
add
xor
jbe
aaa
ja
push
out
and
sahf
clc
stos
xor
pusha
mov
enter
addr16
sbb
leave
cmp
pop
and
and
sub
leave
dec
push
sbb
aas
ds
test
je
sub
fst
mov
sbb
xor
int3
stc
inc
inc
sbb
sub
sbb
lds
sbb
fsub
add
mov
xchg
add
jge
hlt
rcl
lods
mov
aas
add
sbb
cmc
mov
in
jecxz
cmp
xchg
xor
out
add
jecxz
sahf
sbb
mov
dec
jnp
jns
test
call
js
into
jo
das
pop
pop
retf
jmp
jnp
ins
sbb
(bad)
sti
cmp
sbb
scas
dec
mov
aad
std
add
pop
add
sub
dec
dec
push
sub
mov
jns
inc
dec
fidivr
mov
dec
pop
sbb
push
jnp
pusha
jns
sub
aad
jg
fwait
and
push
clc
jg
loopne
out
mov
fldenv
shr
pop
stc
add
in
pop
mov
sbb
cmc
in
cmp
fcomp
pop
repnz
xor
cdq
sbb
sbb
or
aas
xor
jb
add
mov
popf
test
cmp
mov
add
stc
pop
arpl
icebp
sbb
pushf
mov
sbb
inc
push
cli
mov
pop
dec
aas
mov
cs
jmp
gs
sbb
and
cmp
cmp
out
retf
cmp
and
add
out
xor
ins
inc
mov
pop
inc
sahf
jp
ret
lock
(bad)
adc
cmp
(bad)
mov
xchg
jmp
cmp
add
outs
scas
fld
test
ror
pop
fldenv
pop
mov
fimul
outs
cmp
imul
adc
mov
cmp
mov
fild
clc
mov
ret
mov
dec
aas
mov
lahf
les
push
add
scas
int3
imul
pop
sbb
jmp
adc
cmp
int
inc
sbb
call
in
sub
aas
shr
mov
lods
and
mov
or
mov
lods
inc
mov
stc
pop
mov
or
dec
and
push
mov
jno
adc
dec
cmp
mov
mov
sbb
loop
pop
pop
test
fwait
sbb
mov
push
pop
imul
dec
cmp
xlat
or
pop
mov
out
js
nop
mov
pmaxub
dec
lea
jle
cmp
(bad)
add
int3
popa
push
sbb
pop
jg
fnstenv
pop
add
pop
adc
(bad)
sti
mov
imul
pop
call
sub
lds
shr
pop
int
push
sbb
mov
adc
sub
fwait
xchg
jl
jmp
std
dec
cli
or
sub
ss
icebp
sub
aam
je
xor
pop
outs
sbb
call
(bad)
mov
fmul
cmps
shl
pop
cmp
arpl
pop
out
(bad)
std
inc
sub
jo
jle
pop
add
or
add
jns
stos
fld
clc
(bad)
xor
push
test
mov
cmp
(bad)
fstp
sub
ficom
into
pop
pop
pop
jnp
sbb
idiv
pop
push
enterw
das
jno
jo
test
repnz
ret
pop
xlat
jge
mov
gs
cdq
loop
loopne
push
aas
(bad)
pusha
test
sub
lock
pop
js
fild
fwait
cmp
scas
sub
jecxz
jg
cmp
push
jecxz
sahf
je
cdq
cli
xchg
jmp
xor
fwait
nop
mov
pop
cmp
adc
in
sbb
xchg
jnp
sar
(bad)
cli
imul
iret
push
sbb
inc
nop
sbb
out
jle
and
and
and
adc
or
cmp
add
aam
jl
mov
scas
in
mov
sub
adc
(bad)
lahf
cmp
shl
adc
cmp
icebp
cmp
jle
or
xor
and
xor
mov
daa
scas
mov
shl
mov
inc
cdq
lock
ins
push
ins
stc
sbb
pop
pusha
enter
xchg
jp
sar
fst
inc
sub
adc
std
cmps
enter
mov
jmp
mov
pop
and
leave
inc
sub
inc
mov
enter
rol
fwait
scas
pop
inc
jle
ret
sub
push
jl
mov
sbb
xchg
in
cmp
fisub
mov
mov
ror
fnstenv
or
fstp
jg
push
nop
dec
jnp
mov
das
push
cmps
(bad)
neg
aaa
jmp
rcr
push
mov
and
into
jne
dec
and
xchg
cmc
jmp
sbb
cmp
pushf
neg
mov
fimul
jo
cmp
mov
dec
mov
push
and
dec
and
pop
retf
sub
fidivr
add
sub
push
xchg
imul
push
jle
cmp
pop
xchg
mov
sbb
cwde
nop
ds
lods
pop
push
jmp
je
loop
outs
mov
gs
sub
fimul
jnp
das
adc
pop
sahf
pop
clc
adc
dec
sub
rol
mov
fisttp
aaa
jge
cli
dec
test
repz
pop
cmp
cmp
and
enter
icebp
sub
dec
aad
aas
retf
mov
mov
call
and
add
jnp
xor
pop
mov
or
pop
jns
icebp
out
(bad)
sti
mov
sbb
cld
add
jl
icebp
add
rcr
leave
cli
aam
pop
and
and
inc
mov
push
adc
nop
ror
das
cmp
push
jle
pop
mov
icebp
lods
sar
in
inc
adc
pop
js
ds
imul
mov
or
and
push
mov
push
inc
add
data16
fwait
cli
mov
and
push
jnp
shl
ret
pop
sahf
jl
push
fild
mov
adc
mov
adc
scas
fstp
sub
jg
cmp
bound
and
sbb
xor
call
inc
fidivr
enter
sbb
or
and
cli
jmp
fwait
add
pushf
ds
jl
lahf
cmp
(bad)
cmp
ret
mov
movs
cmp
pop
outs
sbb
jns
and
hlt
inc
cmp
call
cmp
add
jbe
mov
or
repnz
ins
lods
cli
sub
into
pop
mov
dec
mov
mov
sbb
mov
pop
add
pop
sbb
add
pushf
ret
pop
bound
inc
xor
xor
mul
mov
sar
aaa
cmc
mov
mov
out
lahf
call
sub
cld
xor
xor
cwde
cmp
jg
clc
stos
ds
lock
(bad)
jl
sub
pop
imul
xchg
mov
retf
jg
dec
mov
pop
add
inc
fcmovbe
(bad)
mov
call
das
add
shl
jecxz
pop
push
sbb
jnp
mov
test
int3
add
in
fsub
mov
add
mov
ss
out
fwait
mul
(bad)
mov
mov
cmp
(bad)
rol
popf
das
add
aas
jmp
data16
pop
(bad)
int3
sahf
jp
xor
stos
rol
cmp
das
in
nop
inc
pop
xchg
data16
fstp
test
jl
add
mov
xor
enter
daa
xor
push
div
cmp
in
xchg
fwait
pop
jns
mov
clc
xor
jle
jecxz
repnz
sub
push
das
call
push
cdq
jl
mov
and
fsubr
or
mov
sub
sub
inc
dec
and
stc
pop
fisttp
cmp
sbb
mov
xor
in
pop
test
cli
dec
pop
cmp
jle
cld
adc
call
push
(bad)
push
sub
aaa
cwde
cld
and
and
add
adc
rol
leave
(bad)
(bad)
pop
pop
aam
pop
push
dec
ret
mov
adc
pop
iret
clc
push
mov
jb
std
pushf
aaa
int
mov
jg
cdq
mov
mov
pop
mov
cmc
pop
mov
add
push
mov
pop
retf
add
nop
fwait
pop
pop
repnz
ds
fdivr
add
jnp
(bad)
je
fstp
sub
xchg
jecxz
mov
shr
push
(bad)
push
fldenv
push
aas
scas
add
jnp
and
sub
out
mov
xor
mov
fcmovbe
inc
hlt
fwait
in
pop
(bad)
stc
lods
dec
mov
dec
sbb
cmp
ja
mov
pop
fld
in
sub
and
lods
and
xchg
mov
in
pushf
std
neg
ret
push
aas
pop
push
pop
es
push
xor
inc
fisttp
adc
mov
jl
sub
xor
pushf
bound
leave
inc
jno
sti
ret
cmp
test
stos
mov
pop
push
sbb
add
or
mov
sub
pop
dec
(bad)
mov
iret
push
popf
es
sti
add
scas
nop
push
ja
dec
sbb
cmp
(bad)
mov
jbe
ret
(bad)
test
sub
popf
and
sti
popf
fisttp
cmp
imul
popf
gs
clc
xchg
mov
out
xor
cmps
jecxz
aam
jl
enter
cdq
push
mov
adc
or
inc
clc
aad
add
pop
jl
mov
mov
sahf
sub
aas
ror
loopne
mov
pop
cmp
fidivr
js
mov
adc
call
inc
sub
and
lea
das
loop
int
add
pop
jl
movs
mov
mov
mov
stos
aas
or
xchg
out
pop
mov
mov
mov
cmp
mov
add
test
in
sub
aas
adc
jmp
aas
mov
pop
add
out
inc
cmp
mov
jmp
jne
jecxz
jl
cmp
jb
xor
adc
inc
sub
mov
ffree
mov
cmp
sub
shl
adc
jnp
mov
mov
inc
sahf
imul
ds
iret
test
lds
aam
inc
sub
sub
xchg
in
int
js
mov
imul
xchg
(bad)
mov
test
add
pop
sub
les
dec
push
inc
nop
pusha
cmp
xor
jecxz
mov
sahf
aaa
pusha
pusha
jge
ret
out
mov
fdivr
mov
fld
repnz
enter
cmp
sti
xlat
sub
movs
imul
aas
dec
fcomp
scas
pop
add
inc
js
push
add
xor
xchg
mov
sbb
clc
jmp
xor
sub
(bad)
dec
popf
push
adc
inc
sahf
clc
jg
cmp
cmp
inc
mov
add
push
clc
xchg
push
mov
fst
or
imul
cmp
and
sub
sub
xor
icebp
sar
xchg
ror
dec
clc
mov
and
mov
jmp
sub
inc
cmp
sbb
mov
fcmovu
sahf
pop
hlt
iret
popa
sbb
pushf
xor
mov
inc
bswap
add
pop
xor
inc
out
and
jg
pop
cli
jnp
pop
jl
push
mov
fnsave
shl
sbb
sar
ds
mov
sub
mov
mov
mov
sbb
rcr
pop
ins
pop
mov
pop
enter
sub
ficomp
adc
pusha
das
jne
clc
jbe
sub
arpl
adc
jo
inc
pop
lods
mov
pop
cmp
jae
sbb
shr
ja
cld
inc
retf
gs
repnz
leave
dec
and
cs
mov
mov
mov
rcl
pushf
sbb
jmp
aam
ss
cmp
sti
clc
sbb
cmp
pop
neg
(bad)
cli
xor
xchg
inc
push
out
sbb
cmps
jo
jle
dec
sub
cs
xchg
mov
push
cmp
mov
sbb
sub
push
jp
jae
or
mov
and
repnz
push
cli
inc
cs
push
mov
pop
data16
fnstcw
xchg
mov
jl
xchg
xchg
punpckhbw
out
mov
mov
repnz
xor
xchg
mov
or
aam
pushf
(bad)
mov
cmp
add
sar
add
test
in
and
xlat
push
fmul
sbb
mov
ja
and
push
test
push
xchg
aas
push
stos
cmp
std
mov
dec
fistp
sub
add
shr
mov
sub
ret
aam
cmp
mov
xor
xchg
or
xchg
stos
lahf
and
jl
jle
rcl
jle
jecxz
dec
pop
sbb
jns
repnz
aam
aas
sub
std
push
jl
daa
mov
sub
fdivr
inc
sahf
nop
pop
addr16
inc
out
mov
cmp
push
xor
xchg
cmp
pop
jle
cmp
sub
sub
pop
pop
outs
pop
jg
pusha
pop
das
clc
mov
aad
xor
sbb
inc
inc
mov
rcr
mov
add
or
inc
je
out
sti
add
out
and
ret
out
rcl
inc
cmps
clc
imul
clc
mov
mov
aas
test
fcmovb
cmp
(bad)
mov
mov
mov
repnz
cmp
cmp
adc
ret
cmp
sub
fstp
loop
xor
daa
scas
and
xchg
xor
in
call
mov
stos
xor
sbb
mov
ss
loopne
mov
(bad)
xor
fisttp
cmp
xor
jmp
sub
arpl
sub
add
jle
mov
addr16
aas
popf
retf
add
mov
jns
stos
dec
sub
stc
dec
jns
pop
adc
mov
and
clc
push
fst
push
(bad)
je
jae
nop
cmp
sbb
daa
outs
xchg
mov
jmp
sub
or
shl
adc
fstp
push
xchg
mov
sbb
sbb
inc
call
sub
mov
cdq
cdq
dec
jno
cld
pop
jo
fscale
mov
mov
jnp
jmp
mov
adc
repnz
mov
(bad)
and
pusha
pop
push
jno
hlt
or
or
cld
fs
das
fstp
gs
(bad)
jg
mov
cmp
out
jle
inc
call
pushf
and
push
mov
clc
(bad)
dec
cwde
aam
jo
repnz
js
xor
xchg
leave
mov
xor
xchg
(bad)
add
(bad)
bound
xor
pop
neg
mov
data16
iret
sub
sbb
lahf
enter
fnstsw
jnp
adc
cmp
mov
pop
sbb
ja
fnstsw
xor
sbb
jno
sub
jo
jbe
mov
js
test
sar
je
out
int
pop
add
mov
add
in
and
out
adc
ret
jle
xor
icebp
jge
and
lock
loopne
cli
inc
test
daa
inc
lea
xlat
fistp
mov
xor
dec
aaa
push
out
mov
mov
rcr
add
xchg
mov
sub
xchg
mov
or
jle
or
push
std
fmul
and
add
ds
xchg
jns
cmp
add
xchg
push
clc
das
in
adc
mov
sbb
and
aas
push
pop
stos
and
(bad)
fiadd
or
outs
enter
mov
add
or
push
sub
jne
cmp
mov
mov
mov
iret
sbb
mov
clc
push
mov
cdq
jge
nop
jnp
cmp
mov
adc
inc
ret
adc
pop
mov
cwde
push
adc
add
mov
das
pop
sub
jo
retf
jnp
fcomp
mov
jb
sbb
xchg
out
pop
sbb
test
sub
mov
scas
mov
je
push
sbb
jmp
fstp
ds
pop
adc
push
jmp
loopne
mov
add
fmulp
cld
xchg
fwait
pop
std
cli
(bad)
sub
std
fimul
adc
out
or
mov
sub
mov
mov
push
ret
ret
pop
ins
push
fild
jl
jmp
xor
fild
sbb
sub
std
sbb
das
inc
jmp
inc
das
cmp
repnz
imul
inc
adc
arpl
cmp
inc
jg
clc
test
mov
jb
jmp
dec
inc
mov
rol
and
jae
shl
int
rcl
jmp
(bad)
add
rcr
push
test
scas
cli
sub
add
sub
lods
sbb
mov
xchg
pop
in
pushf
xor
mov
add
jge
outs
inc
nop
imul
fmul
(bad)
out
fst
dec
or
jnp
pop
sub
jecxz
out
mov
dec
jb
mov
dec
cmp
pop
jg
aam
das
mov
and
jle
adc
es
xor
lock
sti
fbstp
div
mov
loope
loop
retf
(bad)
clc
das
sahf
and
leave
jae
add
es
cmp
sar
xor
adc
jle
stos
sar
inc
sahf
sbb
fdivr
xor
cmp
mov
imul
jo
sbb
outs
inc
xor
sub
data16
adc
or
(bad)
jnp
mov
push
fst
inc
xchg
mov
xor
loope
add
sub
cmp
pop
test
stos
jb
pushf
cli
js
cld
ja
mov
loopne
pop
in
jle
pop
ss
adc
inc
adc
add
or
xchg
movs
mov
jae
icebp
jbe
ds
fwait
adc
sar
call
imul
retf
call
and
cli
ds
rcr
das
xchg
nop
or
push
stos
jns
xchg
out
mov
mov
pop
pop
stos
ret
call
jle
jo
hlt
or
(bad)
sub
add
pop
pop
cmp
mov
and
xor
sbb
sbb
mov
mov
xor
por
in
cmp
lods
jae
jns
std
outs
icebp
xor
cwde
(bad)
pop
pop
pop
jl
cmp
dec
fcomp
add
cmp
cmp
call
pop
mov
push
mov
xchg
dec
xlat
mov
cmp
or
pop
push
out
(bad)
pop
out
or
(bad)
cmc
add
ds
xor
repnz
inc
push
adc
dec
push
loop
jle
nop
jl
ins
jmp
ds
adc
add
mov
sub
push
cmp
fnstenv
xchg
fist
or
in
clc
out
mov
or
outs
jecxz
xor
jnp
mov
xchg
sbb
adc
cmps
sbb
adc
jnp
lock
sbb
push
sahf
aas
jmp
mov
jecxz
mov
movs
inc
fcomp
push
pop
add
cs
mov
inc
fwait
clc
gs
pop
out
sbb
outs
stos
add
sbb
and
cdq
hlt
out
mov
fistp
stos
mov
sub
push
aas
(bad)
or
retf
icebp
sub
push
mov
cmp
adc
jae
ja
std
pop
pop
lock
popf
movs
mov
sahf
add
xor
add
and
call
test
jnp
xchg
nop
aas
mov
aaa
outs
into
aam
and
push
inc
xor
jne
push
imul
fidivr
stos
cli
sbb
call
shr
adc
movs
imul
jle
cld
rcr
dec
aas
pop
mov
cmc
out
out
popf
data16
fwait
jecxz
nop
fbstp
sub
push
cdq
jp
int3
push
sbb
or
pop
mov
pop
shl
xor
inc
dec
lds
mov
mov
jo
movs
outs
push
mov
loopne
cmc
pop
fild
sar
pop
and
push
pop
stc
pop
mov
jne
and
adc
je
mov
cmps
ins
cmp
sbb
jns
pushf
or
add
adc
pusha
iret
aam
jnp
push
imul
ffree
sbb
mov
sbb
sar
jg
and
mov
pop
jne
std
mov
leave
and
cmp
pop
xor
addr16
fsubr
jb
rcr
sbb
pop
jecxz
or
cld
mov
sub
jg
test
rol
cmp
es
sti
mov
xor
mov
jge
mov
xor
shr
inc
jg
push
fwait
das
rcr
pop
adc
int
or
icebp
fldcw
cwde
jl
aaa
mov
imul
pop
or
mov
push
sub
sub
mov
std
pop
add
jbe
jl
rcr
sbb
and
cmp
xor
sub
retf
cmps
and
push
shr
aad
xor
add
test
jb
cmps
inc
mov
xor
push
call
sbb
cli
aad
inc
and
and
mov
or
jg
dec
call
int3
ins
inc
inc
xor
pop
mov
daa
pop
repz
rol
jns
cmp
push
pushf
inc
jno
mov
std
fidiv
add
out
pop
jle
idiv
sub
mov
pusha
push
not
stos
jae
cmp
and
adc
dec
fwait
lahf
je
int3
cmp
call
sbb
sbb
sbb
sbb
cld
xor
mov
inc
xor
int
inc
add
lock
and
adc
pop
xor
inc
loopne
mov
js
clc
ret
mov
pop
mov
or
sbb
inc
popf
push
std
lods
lahf
jp
inc
push
les
push
mov
jmp
push
sub
mov
dec
or
jnp
push
push
(bad)
dec
jnp
jnp
pop
cmps
fst
mov
jns
sbb
pop
sbb
repz
movs
sbb
mov
xchg
shl
cli
sbb
or
shl
leave
mov
das
jl
jnp
cs
mov
and
sbb
jl
leave
mov
cmps
cmp
enter
pop
sbb
inc
inc
retf
out
xor
sahf
hlt
sbb
enter
cmp
push
xor
sbb
fldcw
mov
adc
mov
neg
jbe
mov
jl
cmps
nop
int
ret
sar
lods
push
sub
add
ss
adc
cmp
xchg
fisub
call
ja
pusha
dec
aas
cmp
jns
sbb
pop
adc
lods
cmp
das
nop
mov
cwde
mov
push
sub
neg
sub
mov
(bad)
cmp
sbb
inc
push
sub
js
test
sub
ja
cmp
cmp
movs
mov
xlat
cli
pop
pop
and
jnp
pop
arpl
and
fisub
and
mov
or
test
out
(bad)
adc
in
mov
sub
shl
cmp
inc
stos
mov
(bad)
push
xor
xor
xchg
cmp
ret
or
aas
adc
jle
outs
leave
jl
arpl
(bad)
mov
js
daa
retf
cmp
xchg
dec
popf
stos
mov
sub
nop
popf
dec
iret
cmp
inc
out
sbb
rcr
push
mov
bnd
or
aad
lods
jle
sbb
outs
pusha
fwait
push
(bad)
jnp
push
outs
rol
loopne
das
jo
mov
ja
fdiv
cli
aam
or
cdq
dec
data16
call
loope
xchg
jge
ror
mov
push
clc
dec
jle
xor
add
cmp
sbb
mov
pop
(bad)
cmp
adc
call
dec
dec
std
mov
mov
out
xor
mov
pop
retf
mov
js
mov
jecxz
push
jge
sbb
ret
frstor
jmp
add
mov
(bad)
cmp
inc
pop
jbe
clc
xchg
icebp
stc
cmp
ss
jns
or
jbe
pop
lods
sub
cld
or
mov
hlt
fild
mov
sbb
test
ja
cmp
xchg
out
shl
xor
dec
not
mov
mov
in
mov
shl
inc
push
test
sub
ror
dec
adc
enter
ret
and
inc
aaa
data16
pushf
mov
cmp
add
mov
gs
adc
xchg
(bad)
not
ret
(bad)
cld
data16
sahf
dec
movsx
jb
cmp
push
loope
int3
add
mov
pop
rol
repnz
pop
mov
rol
push
cmp
fimul
pop
sbb
sub
jno
std
int
out
pop
jo
mov
xchg
sbb
call
add
hlt
movs
pop
leave
cmp
xchg
data16
fidivr
fbstp
lods
dec
ds
loopne
pop
jne
jns
cmps
cwde
xor
mov
sub
adc
aas
push
add
stos
mov
mov
cli
das
pop
pop
dec
or
mov
add
out
sbb
push
adc
inc
rcr
cmp
sbb
mov
test
rcr
mov
xchg
mov
xor
jle
mov
push
ja
pop
cmp
pusha
mov
jecxz
add
cmp
cli
xor
hlt
push
sub
cmp
repnz
jns
retf
jb
iret
jnp
rcr
in
fadd
xor
or
mov
pop
aaa
rol
mov
cdq
jnp
nop
rcr
retf
mov
or
mov
out
cmp
jns
fmul
pushf
pop
das
xor
jo
cmp
push
out
idiv
jle
jae
xchg
cmps
add
mov
movs
jg
pop
fsubr
sub
inc
loopne
(bad)
arpl
and
sar
jp
sbb
dec
pop
ss
inc
push
sbb
sar
stos
dec
jg
mul
push
xchg
aaa
out
lds
pop
sub
cmp
sub
stos
in
aas
mov
mov
inc
jo
adc
sub
add
mov
pop
stc
sub
test
cwde
and
sub
inc
inc
cmps
test
xchg
loop
mov
clc
mov
lea
mov
aas
aad
das
test
shr
pop
sub
std
xchg
repz
mov
sub
push
sub
jae
cdq
inc
cmp
push
icebp
rcr
jg
mov
icebp
std
inc
sbb
jmp
pusha
movs
into
jecxz
imul
scas
pop
adc
pop
ss
outs
adc
or
push
mov
mov
out
cwde
cmp
enter
add
jns
out
aaa
aas
push
retf
repnz
lds
mov
and
pop
loope
and
pop
movs
xor
out
push
sub
xchg
lods
jl
sbb
mov
fild
fidivr
pop
sbb
std
aas
jnp
fld
ds
in
frstor
sbb
push
fwait
sub
pushf
pop
clc
fidivr
ficom
lods
sub
dec
xor
push
mov
je
jp
test
pop
mov
out
mov
scas
cmp
pusha
cmp
jmp
arpl
cld
fnstenv
imul
inc
popf
fistp
mov
popf
fmul
add
sbb
mov
icebp
sub
mov
mov
aaa
(bad)
or
mov
cmp
(bad)
fwait
imul
inc
xor
pushf
iret
xor
xor
aas
push
pop
popf
lods
sub
aas
fdiv
outs
mov
xor
jl
jo
mov
and
sahf
not
mov
adc
cmp
dec
sub
dec
push
sbb
inc
xor
jo
inc
xor
mov
aam
jp
in
and
sub
inc
hlt
mov
fldenv
in
cmp
xor
cdq
ret
cmp
aas
test
mov
(bad)
mov
sub
sbb
cli
test
sahf
ins
ja
sbb
ror
inc
jo
and
gs
jbe
inc
sub
push
test
push
and
scas
je
jbe
in
test
cli
(bad)
pop
mov
ss
xor
mov
mov
push
sbb
clc
das
out
out
test
retf
xor
jg
pop
sahf
rcr
cmp
adc
mov
fadd
pop
adc
xor
mov
jle
cmp
in
repnz
ds
or
push
mov
repnz
lods
cmp
sahf
pop
retw
xor
clc
cmp
stos
sub
mov
inc
inc
and
adc
daa
push
fisubr
movs
push
lea
sub
push
bound
mov
sub
pop
adc
inc
pop
push
inc
cmp
sbb
call
inc
cmp
repz
das
bound
sub
push
into
pop
jp
xor
aas
jmp
mov
or
nop
fld
js
mov
add
jmp
push
ins
cmp
mov
cmp
js
repnz
lods
mov
jge
aaa
jo
and
(bad)
dec
aas
mov
inc
and
sbb
pop
fidivr
dec
and
(bad)
jae
adc
cld
fiadd
jns
in
fisttp
inc
data16
mov
mov
aas
mov
sbb
(bad)
fwait
pop
bound
add
push
dec
bswap
or
sbb
sub
imul
ds
adc
retf
out
repnz
lds
jg
pop
mov
pop
cdq
outs
push
lea
into
inc
mov
dec
push
mov
cmp
push
les
test
pop
retf
fdivr
cmps
mov
mov
cmp
js
dec
(bad)
fcmovb
cmp
mov
enter
jnp
js
dec
(bad)
nop
fcmovnb
neg
fstp
jno
es
cmc
cmps
cmp
call
inc
aad
fstp
cmps
lods
xor
dec
fwait
das
dec
or
loop
sub
neg
repz
sbb
pushf
sbb
(bad)
xchg
xchg
cmp
mov
ins
cmp
and
jle
dec
sbb
ret
pop
pop
imul
push
lods
shl
rcl
(bad)
aaa
xchg
jecxz
ds
sbb
adc
and
sbb
jbe
jle
das
fnstcw
push
sbb
jecxz
mov
jno
or
test
jg
push
inc
imul
bound
pop
dec
cdq
cmp
dec
cmc
mov
cld
ds
jp
add
cmp
mov
pop
je
mov
jns
ds
add
jmp
mov
stc
xor
or
jge
shl
cs
out
std
test
mov
push
outs
sbb
(bad)
loope
jle
(bad)
call
js
xchg
pushf
sbb
loope
pop
loopne
call
cmp
(bad)
call
sbb
clc
repnz
cmp
mov
stos
and
cmp
and
sbb
jbe
or
cs
push
jns
pusha
loopne
push
pop
scas
xor
jno
sar
dec
jg
push
adc
cmp
sbb
mov
mov
repz
aam
mov
jecxz
inc
cmp
jae
jle
jo
outs
repnz
and
push
mov
cld
mov
ds
out
pop
sbb
jns
das
retf
test
mov
pop
mov
cmp
jl
fnsave
fstp
ds
cwde
jg
adc
add
dec
sbb
and
cmp
jge
jle
les
jb
jecxz
pop
mov
mov
cmp
aam
mov
aas
lds
cli
dec
(bad)
cld
std
into
mov
mov
(bad)
clc
jbe
scas
inc
in
fadd
cmp
call
fnsave
inc
sbb
jle
pop
jnp
inc
jns
jmp
dec
rcl
cmp
scas
icebp
cmp
jno
stos
and
cs
(bad)
fisttp
cmp
out
sti
adc
ret
mov
retf
adc
cmps
inc
jnp
iret
sbb
jnp
push
mov
mov
int3
xor
sbb
sub
lds
sbb
addr16
cmps
sub
inc
aaa
push
cmp
inc
cmp
cmp
mov
aas
push
popf
fild
ins
stos
mov
aas
or
cmp
test
mov
out
mov
sub
or
push
hlt
aas
mov
clc
out
adc
das
mov
sub
xor
out
and
mov
sbb
nop
and
jo
iret
adc
cli
ins
fild
pop
jno
icebp
jle
aas
in
push
pop
punpcklbw
dec
xchg
adc
push
cmp
pusha
xchg
mov
not
neg
sub
fstp
mov
js
xchg
jb
mov
call
nop
mov
pop
mov
sbb
jmp
in
jl
mov
mov
jg
shr
pop
jno
mov
add
loopne
pop
jnp
mov
inc
out
cmp
aas
jmp
sub
xor
es
retf
dec
add
mov
pop
push
sub
das
push
pop
mov
mov
mov
push
add
mov
add
je
cld
jl
aas
mov
outs
stc
mov
sbb
jns
add
pop
(bad)
pop
sub
pop
pop
sbb
mov
int3
xor
(bad)
in
pop
hlt
mov
mov
inc
pop
jo
dec
sahf
sub
stos
addr16
xchg
xor
sar
ret
push
mov
pop
lds
adc
scas
xor
hlt
mov
pop
repz
cmp
popf
jg
jl
push
aad
and
lods
mov
fdivr
sub
mov
cmp
retf
inc
jno
xlat
mov
mov
push
nop
loopne
mov
mov
rol
es
imul
adc
jg
jns
ds
mov
jb
sahf
jns
scas
ret
mov
imul
lods
jno
and
outs
cmp
mov
xor
shl
or
ds
out
stc
mov
je
outs
cmp
stc
shl
jp
mov
and
jl
cmc
ret
mov
cld
in
sbb
repnz
sub
cmp
out
ins
xor
js
adc
xchg
and
jbe
idiv
jge
clc
(bad)
mov
fcomp
push
fcomp
sub
pop
popf
mov
icebp
shl
add
mov
and
fistp
cmp
cmps
maskmovq
not
mov
cmc
loopne
aas
pop
scas
std
dec
aad
pushf
and
add
cmp
dec
jle
gs
cld
lea
sbb
add
in
mov
outs
mov
jae
mov
pushf
dec
ss
push
pop
add
jnp
sub
fistp
mov
orps
cmps
sub
mov
mov
push
aas
add
pop
sbb
outs
wrmsr
mov
or
and
leave
lods
inc
cmp
mov
sbb
ja
dec
xor
test
pushf
idiv
call
pop
mov
das
xchg
out
push
mov
add
or
loopne
sub
jmp
adc
pop
ret
cdq
push
ret
in
sti
jns
dec
cmc
sti
xor
sub
clc
cmp
jns
sbb
jle
loope
cmp
cmp
cmps
jns
stc
repnz
pop
jge
or
add
aaa
jo
iret
mov
push
pop
sbb
fs
push
and
shr
stc
adc
adc
cmp
xor
xchg
push
sbb
xor
mov
push
mov
pusha
sti
sbb
jle
xchg
mov
xor
fsub
mov
add
dec
xor
pop
outs
pop
dec
fwait
sbb
mov
std
mov
aas
retf
repnz
sbb
stos
pop
rcl
pop
and
lea
nop
data16
sar
dec
sub
push
out
inc
rcr
jno
or
sbb
sbb
xchg
stc
and
imul
out
jnp
push
data16
imul
loope
je
hlt
jp
jns
es
cmp
dec
jae
push
jl
xchg
mov
adc
repnz
cmp
dec
cmp
cmp
sub
xchg
stos
ss
xor
leave
sbb
jno
cmp
and
rcl
ficomp
cwde
cmp
or
cld
popf
lods
jnp
mov
aam
pop
das
jb
sbb
(bad)
in
mov
mov
fwait
and
xchg
jecxz
jg
clc
in
inc
inc
enter
jbe
jnp
pushf
jl
mov
add
mov
jp
js
enter
inc
shl
dec
mov
pop
jp
push
cmp
nop
inc
xlat
out
xor
cs
cmp
in
xchg
sar
pop
dec
shr
jnp
popf
cmp
pop
or
fucomip
outs
loope
sbb
fild
cmp
(bad)
cmp
sbb
mov
cmpxchg
cdq
mov
pop
and
xchg
dec
add
and
aaa
ret
jl
jle
ficomp
push
jbe
add
out
jl
and
mov
dec
jnp
mov
ja
mov
sub
das
js
or
sahf
sub
jecxz
(bad)
outs
sbb
jmp
sbb
add
push
jnp
es
add
dec
iret
mov
mov
dec
mov
jb
pop
stc
sahf
jl
(bad)
pop
jge
sub
adc
mov
jg
sub
out
loop
cli
daa
js
inc
pop
fnstenv
loop
imul
cmp
push
mov
cmps
xor
in
shl
(bad)
pop
mov
(bad)
xchg
xchg
pop
sahf
mov
jns
add
cmp
xor
push
gs
pop
xor
(bad)
cmp
add
fdivr
mov
mov
sbb
ins
lahf
mov
repz
push
jg
popf
(bad)
dec
jnp
ret
sbb
aas
ja
cmp
les
dec
jl
ins
mov
repz
lods
cld
jl
gs
sub
adc
mov
xor
test
pop
mov
clc
pop
mov
xchg
sub
jns
sub
arpl
add
enter
mov
dec
retf
pop
out
mov
cmp
mov
adc
cdq
mov
pop
cmp
push
cmps
repnz
jno
inc
mov
cli
pusha
jle
call
mov
pop
cdq
stos
cmp
test
pop
sub
xchg
das
stos
aaa
mov
mov
pop
aad
popf
mov
or
int3
pop
sbb
test
dec
fstp
mov
loop
cs
jne
or
inc
add
sub
aas
ins
pop
sub
sbb
sub
cmps
enter
(bad)
scas
sar
mov
xor
scas
cdq
mov
xchg
pusha
or
push
xor
mov
mov
clc
test
and
cmps
scas
jmp
mov
fldenv
jo
jne
fnstcw
aad
dec
ja
dec
add
pop
add
pusha
mov
and
cs
je
add
scas
mov
xchg
mov
xor
out
fadd
pop
imul
js
outs
jge
pushf
leave
sub
mov
mov
rcr
in
cdq
fwait
pop
js
add
xor
repnz
push
cmp
adc
pop
hlt
add
test
cmp
sub
std
mov
ja
mov
js
xor
pusha
stc
sub
out
adc
and
sbb
repnz
pushf
retf
pop
mov
pop
fld
cli
enter
outs
xchg
fiadd
cld
or
push
xchg
cmp
je
sahf
clc
das
pop
rcl
mov
adc
fstp
idiv
addr16
outs
sub
(bad)
mov
inc
in
aad
cmp
repnz
aaa
or
jmp
stc
clc
cmp
call
jl
push
aaa
ds
pop
jmp
xor
ret
jmp
pop
cs
or
xor
inc
pop
and
sbb
ins
cdq
adc
sbb
das
sti
mov
sbb
jl
jg
leave
sbb
jp
pop
dec
lods
out
sub
enter
mov
ss
das
dec
dec
cmp
mov
mov
pop
pop
pop
jb
imul
mov
mov
nop
inc
pop
fist
(bad)
xor
jne
and
ficomp
mov
out
mov
call
pushf
sbb
inc
sub
cmps
les
and
cmp
aaa
jl
xchg
mov
fnstsw
fidivr
add
mov
scas
outs
push
jle
push
(bad)
aas
cmp
test
das
out
iret
inc
cmps
cmps
mov
sub
test
cmp
sahf
jl
mov
mov
leave
pop
sbb
repnz
mov
or
add
add
les
adc
cwde
cmp
jns
sbb
push
fdivr
adc
adc
jnp
cmp
dec
(bad)
push
inc
pop
sbb
jl
iret
adc
bound
std
adc
jg
xor
mov
sar
sub
dec
in
ja
adc
mov
movs
adc
sub
xor
out
cmp
sub
inc
sbb
mov
dec
pusha
cdq
neg
scas
jo
mov
and
push
test
mov
jns
cmp
add
pop
clc
sub
dec
std
lahf
das
je
cmp
add
(bad)
mov
cmp
or
push
sahf
scas
xor
nop
add
adc
mov
popf
pop
add
out
cmp
ds
das
outs
xor
jp
lods
sbb
pop
rol
aas
add
aas
aad
sub
loop
and
cmp
sti
ficomp
cdq
add
adc
jle
push
popf
xchg
ins
fstp
das
pop
repnz
jnp
enter
fisubr
sbb
pusha
jg
pushf
cmp
cwde
pop
ins
xchg
cmp
rcr
mov
sbb
push
ss
push
adc
es
pop
cmc
rcl
out
sub
and
aas
xlat
jno
arpl
sub
stc
(bad)
clc
cdq
fs
(bad)
in
fsin
add
cwde
test
jnp
cmp
sub
jmp
xchg
mov
xor
hlt
and
mov
jle
aaa
xor
sub
sub
or
into
fiadd
dec
out
add
jge
or
sub
jle
jns
imul
mov
pushaw
and
push
cmp
jmp
sub
fdivr
sub
arpl
inc
inc
mov
and
cmps
ss
jle
dec
xor
cwde
jmp
std
fidivr
inc
cld
(bad)
push
and
lea
pop
fisubr
out
stos
add
inc
sbb
das
jmp
jg
cli
add
adc
cmps
add
pop
adc
(bad)
idiv
sub
iret
jecxz
and
push
add
cs
adc
mov
add
test
push
das
cmp
sbb
icebp
sbb
sbb
cmp
addr16
sbb
push
sahf
jo
imul
inc
cmp
jge
pop
jl
aas
mov
jle
push
push
jo
pusha
mov
fild
adc
enter
jg
cmp
jle
mov
bound
push
out
fld
jg
repnz
dec
aas
cmp
scas
mov
fisubr
sbb
jp
jmp
hlt
sbb
out
cmc
(bad)
or
pop
in
fst
mov
aas
adc
cmp
repnz
in
ss
add
rol
sbb
imul
(bad)
cmp
test
adc
add
cmp
loope
aas
sbb
or
les
sbb
cdq
dec
stos
sub
mov
mov
gs
jp
das
int
and
dec
aaa
xlat
pop
xor
ins
adc
cmp
outs
movs
ds
mov
mov
push
clc
push
xor
pop
xchg
inc
mov
sbb
pop
pop
sub
pop
cmps
cmp
xor
fild
pusha
loope
cmp
cmp
xor
imul
jge
cwde
adc
inc
mov
or
popf
adc
cmps
std
push
int
sub
and
add
pushf
pop
bound
jge
sub
fstp
xor
jno
std
(bad)
iret
sahf
out
fsub
mov
and
xchg
test
cmp
xor
fistp
push
sbb
pop
xor
div
cmp
sbb
pop
jle
jge
push
mov
push
test
nop
dec
xor
mov
retf
ins
pop
cmp
cs
pop
call
imul
inc
and
mov
les
mov
xor
add
jns
push
idiv
in
jg
and
cld
sub
sar
ror
sbb
sub
fdiv
xchg
pop
stos
cmp
sbb
jl
mov
in
das
cmp
jo
push
jmp
cmp
pop
test
fwait
scas
cmp
cmc
pushf
mov
int
jae
ja
lods
push
jle
pop
(bad)
(bad)
repz
jl
arpl
das
pop
cwde
mov
mov
mov
lock
fs
mov
jne
and
mov
sar
jns
and
pop
test
bound
fstp
mov
lock
jl
inc
xchg
add
or
sub
aas
movs
ret
outs
std
sbb
sub
jp
ds
and
shl
adc
clc
lea
xchg
mov
cmp
and
test
fwait
stc
ins
call
fbstp
test
mov
cmp
xchg
cmps
sahf
repz
and
in
mov
pop
xor
test
sahf
test
pop
push
leave
mov
add
mov
stc
in
sbb
loopne
(bad)
jp
out
mov
fdivr
push
sbb
sti
ds
(bad)
cmp
daa
aad
shl
sbb
icebp
mov
cmp
add
jg
or
cmp
mov
arpl
mov
inc
sbb
call
cmp
inc
jns
loope
dec
xchg
dec
sti
popf
ror
ror
ds
jno
(bad)
je
xchg
sar
es
shl
mov
cs
aas
rcr
cmp
call
cwde
popa
out
cld
test
shl
cmp
aaa
jns
clc
mov
jb
sbb
movs
aas
mov
cmp
jle
mov
xchg
std
cmps
pop
mov
(bad)
pusha
dec
clc
jle
xor
cmp
aaa
push
and
ins
cld
scas
push
mov
jg
mov
adc
inc
or
aas
dec
jns
xchg
dec
in
xchg
cmp
pop
xor
jae
mov
sbb
xchg
idiv
clc
and
(bad)
into
jp
mov
aam
cmp
xor
aas
sub
pop
mov
out
int3
xor
sub
dec
sub
popf
loopne
jp
test
and
cwde
mov
mov
jp
ja
sbb
inc
mov
mov
add
xor
out
rcr
andnps
jmp
shr
aas
imul
(bad)
bound
mov
je
push
jge
sbb
ds
dec
sti
cmp
add
xor
aam
test
push
das
mov
cmps
jnp
lea
cmp
jmp
cmp
dec
xchg
cmp
test
mov
pop
repnz
sbb
sub
cmp
cmp
je
loopne
mov
and
jle
fild
mov
outs
jle
inc
(bad)
cmp
data16
jle
pop
cld
cmp
cmp
test
add
mov
mov
xor
mov
sbb
adc
mov
in
xor
aas
xlat
cmp
jmp
outs
sbb
mov
jnp
add
into
stos
sub
jb
ret
sbb
pop
sbb
and
pop
mov
ins
out
fldcw
cmp
xchg
xor
test
add
stc
add
mov
cmp
and
imul
retf
mov
(bad)
stos
test
ret
fsubr
sahf
je
jge
xor
add
and
das
xchg
add
jae
jp
sahf
jle
popf
out
jp
xor
stos
or
std
cmp
dec
mov
mov
pop
idiv
push
int
cmp
xchg
pmaxsw
call
add
cmc
sub
cmp
ja
repnz
in
cdq
jl
push
mov
mov
mov
cmp
push
clc
ror
clc
lds
sbb
ja
aas
push
mov
adc
xor
fdiv
and
ss
ss
aad
sbb
mov
out
arpl
pushf
std
test
pop
or
cmp
add
(bad)
aas
aad
mov
dec
dec
sar
call
mov
in
push
repnz
cmp
imul
mov
pop
sub
std
fidiv
popa
sbb
dec
xor
adc
sar
inc
xchg
daa
jmp
jmp
in
sbb
std
mov
pop
mov
in
lods
mov
fwait
add
mov
dec
js
mov
fstp
cdq
cmp
and
jmp
xor
cmc
mul
jo
cmp
mov
mov
mov
call
int3
jle
pop
inc
mov
pop
pop
nop
cmps
imul
aas
mov
mov
popf
adc
outs
in
push
ror
push
mov
sub
rcr
ss
jno
xchg
mov
leave
aad
stc
adc
mov
sub
fcmovu
(bad)
mov
cmp
or
xchg
xor
mov
test
cmp
daa
out
jg
idiv
adc
shr
cmc
cmp
gs
js
ret
aam
pushf
(bad)
cmps
pop
mov
out
rcr
pop
inc
test
xor
dec
mov
inc
jmp
cli
call
das
mov
or
dec
js
or
clc
push
daa
mov
(bad)
cmps
imul
sub
push
mov
push
scas
fwait
lods
retf
lock
mov
adc
sahf
neg
stc
pop
push
adc
test
and
cmp
scas
pop
cmp
mov
jns
jmp
sub
(bad)
mov
jbe
mov
dec
xchg
(bad)
outs
adc
adc
mov
ja
jecxz
and
fnstcw
cmp
clc
cs
(bad)
repz
ins
sub
hlt
and
pop
fcom
test
cmp
cmp
mov
and
mov
xor
das
and
jo
lock
push
(bad)
pop
rol
pop
dec
(bad)
aad
xchg
test
dec
push
sbb
adc
aas
imul
es
xor
enter
inc
sahf
push
and
bound
xor
int3
not
cli
clc
inc
xor
aas
rcr
sub
mov
pop
js
das
nop
pop
stc
adc
and
sbb
xor
das
movs
xor
xlat
xchg
loopne
and
aas
jnp
arpl
cmp
in
shl
out
test
jnp
or
xor
repnz
shl
sub
jecxz
lea
scas
stos
cli
stos
jo
shl
popa
xchg
mov
xlat
pop
cdq
icebp
ss
pop
cmp
iret
sub
(bad)
cli
das
xchg
sbb
cli
push
push
mov
lds
in
mov
cmp
jmp
repnz
mov
and
in
xor
pop
pop
jl
sti
bound
arpl
sbb
in
pop
add
jp
aad
and
pop
popf
and
mov
dec
sbb
call
clc
mov
sub
cmp
push
mov
jmp
sub
aas
cli
xor
scas
jns
std
push
mov
pop
dec
cli
outs
mov
shl
or
jne
fisub
ret
addr16
cdq
stos
mov
jl
sub
xchg
jnp
mov
and
cmp
in
xchg
dec
and
dec
jg
mov
retf
jmp
sbb
shl
pop
sub
fnstcw
jno
mov
sbb
jle
fcom
cmp
pop
or
mov
sub
xor
add
push
xchg
aas
fcomp
(bad)
data16
jg
repnz
sub
mov
call
mov
mov
clc
or
daa
cmp
sbb
das
jno
adc
aas
call
xchg
jmp
sbb
stos
push
(bad)
clc
sbb
ins
ror
push
sub
pusha
mov
clc
loop
(bad)
sub
out
aad
frstor
pop
sbb
aas
jle
sbb
es
pop
stos
pushf
in
ins
push
mov
outs
mov
std
imul
xchg
adc
ret
add
mov
scas
out
and
xor
or
dec
xchg
fs
imul
loop
sbb
or
mov
jl
daa
add
fadd
shr
xor
adc
fwait
ds
ds
out
xor
loop
ins
test
jae
ficomp
mov
pop
mov
jnp
pop
arpl
xchg
mov
adc
sbb
aaa
sbb
out
leave
xor
and
mov
or
jmp
adc
fs
xchg
mov
push
add
out
sti
inc
jno
movs
sbb
into
fnstsw
mov
mov
cs
push
retf
ficom
cmp
mov
arpl
lock
pop
add
lods
and
sbb
inc
inc
pop
test
shl
or
or
dec
xor
sbb
cmp
loope
mov
and
cmp
and
sub
retf
mov
cmp
js
jnp
popf
cmp
lods
mov
movs
jnp
(bad)
add
and
aas
sbb
jp
mov
and
test
rcr
stos
pop
aas
sbb
or
mov
sub
jns
aad
in
push
pop
add
sar
and
xchg
call
loopne
xchg
mov
xor
shl
xor
fld
lock
std
jl
xor
push
adc
add
adc
sbb
add
repnz
xchg
dec
mov
xor
repnz
inc
pop
jbe
sub
cmp
mov
sbb
and
fwait
pushf
add
mov
aas
std
jns
add
movs
mov
sbb
sti
pushf
das
mov
cmp
jle
push
or
jo
test
mov
je
sub
jecxz
js
mov
dec
cli
lods
mov
cmp
pop
stc
iret
retw
stos
jp
imul
xor
sbb
pop
aas
into
stos
aas
inc
(bad)
cmp
movzx
cmp
ror
std
mov
out
xchg
fst
pusha
stc
and
mov
in
cmp
pop
daa
dec
add
fwait
das
xor
and
mov
sbb
retf
adc
and
ins
ret
test
sahf
sbb
jno
ds
ret
iret
mov
sbb
mov
mov
out
movs
std
inc
mov
sub
or
and
ins
xor
ror
xor
xchg
ret
mov
aas
loope
das
test
adc
ret
scas
cmp
cmp
adc
push
pop
jp
adc
cs
sbb
mov
(bad)
push
mov
(bad)
jp
jp
sbb
pusha
aaa
mov
push
test
mov
cld
std
ins
sub
ins
pop
pop
pop
das
mov
ss
js
push
mov
(bad)
or
push
pop
add
clc
jle
stc
shl
push
add
mov
mov
push
loopne
dec
and
cmp
mov
out
mov
or
ror
and
sar
inc
stc
popf
cmp
in
jl
lods
mov
lds
pusha
xor
aas
ret
pop
push
setg
(bad)
adc
test
aas
mov
pop
or
add
outs
lds
ds
jae
clc
mov
jl
and
fdivr
pop
cli
xchg
stos
les
sbb
out
mov
shr
cmp
gs
mov
(bad)
sub
leave
sbb
out
inc
mov
cmp
and
ss
out
mov
and
sti
jne
cmp
imul
jmp
push
pop
sbb
dec
ins
fld
push
cmp
dec
(bad)
or
dec
xchg
aas
mov
repz
jl
enter
iret
jbe
cli
xchg
jecxz
test
mov
sbb
mov
mov
aas
(bad)
das
ret
out
outs
es
push
add
fbstp
aas
adc
and
mov
cmp
jp
call
daa
imul
fidivr
enter
ret
ret
dec
mov
xchg
inc
rcl
jns
mov
sub
add
jo
push
sahf
mov
jb
and
test
fbstp
cs
dec
pushf
call
inc
inc
mov
clc
test
pop
mov
fsubr
in
cld
mov
jns
push
iret
mov
pop
push
cld
mov
std
retf
cmp
popf
xor
cmc
pop
pusha
mov
cmc
pop
out
fwait
xchg
mov
mov
push
pop
jg
adc
mov
stos
inc
mov
jp
inc
pop
xor
mov
test
pop
popf
dec
stc
sti
ds
sbb
cdq
shl
push
cld
cli
mov
jle
aas
add
xor
sub
adc
lods
cli
xor
aas
(bad)
jg
aas
cmps
pop
mov
nop
retf
stc
fldcw
add
(bad)
idiv
pusha
dec
cmps
xchg
cmp
cmp
in
mul
pop
das
mov
std
mov
stos
mov
aad
cmc
js
pop
shl
push
xchg
xor
out
mov
stos
pop
aas
outs
push
fistp
jp
icebp
fidiv
sbb
inc
(bad)
pop
(bad)
je
test
push
sbb
fcmovnb
pusha
cmp
pusha
add
pusha
inc
mov
sub
jge
fadd
ja
add
shr
fidivr
cmps
stc
repz
mov
and
sahf
test
xor
jns
or
xchg
and
pop
pcmpeqw
div
(bad)
scas
aas
das
aaa
clc
ret
sbb
fild
mov
js
retf
sahf
shl
inc
call
cmc
loope
jnp
mov
test
sbb
ds
mov
jnp
retf
mov
mov
dec
xchg
outs
push
xor
inc
cmp
retf
cli
push
mov
add
std
(bad)
xor
cli
rol
inc
pop
icebp
mov
mov
mov
jecxz
into
pop
fisubr
in
shl
nop
cmp
call
sbb
loopne
(bad)
or
xchg
mov
push
jl
push
push
xor
fisub
cmps
push
inc
dec
fcom
movs
lahf
jb
mov
pop
cmp
pop
sbb
cdq
cmp
(bad)
sahf
sub
ret
sub
push
fdivr
sti
sub
shl
jnp
(bad)
cli
cmc
dec
mov
repnz
sar
sub
std
inc
xor
icebp
out
(bad)
out
sub
cdq
popa
ja
jp
mov
mov
sahf
cs
std
sbb
add
cmp
mov
pusha
mov
pop
gs
sbb
jo
shl
mov
fadd
sbb
loop
inc
inc
sbb
jle
cmp
fwait
lea
sbb
add
cmps
repnz
inc
jno
pop
rol
cmp
dec
ret
xchg
inc
std
mov
sbb
cli
std
cmp
jl
pop
clc
push
or
cmp
sbb
rcl
jl
out
aas
pop
sub
cmps
ja
mov
rol
fbld
sub
fadd
sahf
sbb
jle
mov
lahf
push
sbb
test
das
scas
cmp
jnp
ds
adc
das
lea
lea
pop
mov
jnp
jp
stos
stos
int
jns
sub
xor
jo
xor
cmp
shl
mov
lahf
add
cmp
out
jae
inc
lahf
leave
mov
inc
sub
cld
mov
pop
pushf
test
pop
mov
fstp
add
jle
inc
rol
inc
call
std
adc
jmp
jg
into
clc
daa
cmp
aam
fdivr
xor
call
inc
adc
sub
adc
sbb
jmp
xor
shr
(bad)
pop
fild
mov
lahf
bound
add
ins
cmp
arpl
push
pusha
add
clc
cli
add
push
push
loope
or
inc
dec
inc
lods
nop
test
mov
and
(bad)
clc
jno
mov
lea
cmp
jmp
mov
aas
aas
scas
out
xlat
xchg
mov
cmc
xor
jg
fstp
leave
call
std
push
cmp
xchg
pop
jmp
and
mov
lahf
(bad)
lods
dec
test
and
pop
or
jg
imul
jp
sub
in
ret
repnz
push
je
sub
xor
jnp
in
push
cmp
add
fist
pop
xchg
sub
mov
inc
ja
cmp
sbb
(bad)
ds
lea
xor
and
jl
sar
pop
in
cmp
out
cld
push
jnp
or
clc
adc
xor
(bad)
fild
test
mov
add
pop
ins
or
sar
or
pop
sub
fwait
stc
sbb
pop
adc
mov
popf
cmp
pusha
pop
cmp
or
sbb
mov
(bad)
fist
int3
leave
sub
nop
jae
jle
rcr
pushf
mov
xchg
sub
jle
test
leave
ficomp
dec
pop
clc
pop
inc
sbb
mov
xchg
mov
xchg
mov
loopne
add
ins
das
jbe
gs
sub
(bad)
(bad)
pop
mov
adc
ins
repnz
cli
js
(bad)
pop
lods
cli
pop
cdq
outs
jl
mov
lods
dec
movs
mov
cli
pop
or
xchg
sti
std
push
clc
aas
jecxz
js
xchg
mov
fs
xor
movnti
inc
ficom
xchg
in
sbb
mov
xor
pushf
or
jl
cmp
xchg
mov
jle
js
clc
fucom
pop
mov
pop
cmp
cmp
rol
dec
lahf
mov
xchg
icebp
jl
test
loopne
xchg
dec
jl
cld
mov
aaa
and
test
xor
rcr
clc
push
pop
pushf
in
cwde
push
mov
ret
cs
and
pop
fidivr
scas
out
lea
(bad)
mul
pop
rcl
jae
cli
add
test
dec
movs
in
fstp
or
clc
sbb
sub
fidivr
cmp
add
fnsave
xchg
add
sub
shr
je
call
ds
iret
aad
jg
ja
das
icebp
retf
imul
mov
test
jecxz
ficom
data16
jl
jbe
lahf
jne
sbb
dec
sbb
daa
add
fadd
rcr
lods
xor
ja
xor
mov
fadd
and
sbb
xor
fadd
cdq
mov
aas
enter
add
add
xchg
adc
mov
(bad)
cmps
call
int3
stos
inc
mov
sbb
dec
mov
int3
jl
and
and
test
(bad)
pusha
fs
adc
mov
add
push
xor
in
fsubr
shl
mov
stc
pop
jnp
xchg
repz
push
mov
mov
mov
mov
sbb
loopne
out
xor
sbb
dec
(bad)
ss
shr
lock
pop
ds
or
retf
jmp
aas
aas
daa
mov
xor
repnz
jno
jb
sahf
dec
cmp
jle
mov
jle
dec
xor
out
mov
test
stos
mov
sbb
sub
cmp
cmp
test
pushf
adc
mov
add
cmp
jns
sahf
pop
push
push
cmps
lds
xchg
out
aas
jo
xchg
or
xor
xchg
aaa
loopne
nop
mov
jg
(bad)
pop
adc
push
sub
ds
inc
adc
mov
inc
dec
and
push
arpl
pop
push
out
lock
sbb
iret
jecxz
mov
xchg
inc
mov
or
jg
lds
lock
pop
sbb
in
das
adc
push
sbb
xchg
xchg
fyl2x
cmp
aas
cld
mov
pusha
dec
mul
fistp
faddp
mov
mov
into
sub
mov
mov
xlat
mov
mov
fsub
lea
xor
mov
mov
xchg
pop
cmp
inc
sbb
jns
in
mov
call
pop
pop
xor
mov
das
mov
adc
in
sub
cmp
scas
sbb
jg
enter
in
mov
xor
ja
mov
retf
sub
jmp
clc
xchg
aad
jg
cwde
add
jg
jmp
das
push
pusha
stc
aad
mov
dec
pop
inc
imul
aaa
xchg
loopne
(bad)
xor
jbe
outs
mov
(bad)
inc
in
mov
and
adc
cmp
cwde
in
mov
xor
out
dec
pop
pop
sub
call
inc
(bad)
mov
xor
aaa
add
xchg
frstor
cmp
xor
sbb
sbb
adc
mov
mov
movs
pop
(bad)
std
pop
clc
pop
adc
pop
cmp
push
mov
or
and
adc
mov
xchg
push
std
lds
out
add
jne
sbb
xor
sar
jno
sti
shl
xor
cdq
daa
sub
cli
xchg
jbe
add
hlt
and
mov
add
ins
sub
fcmovnu
(bad)
sub
or
add
dec
ja
mov
loopne
fwait
xor
into
fcomi
xchg
mov
dec
jmp
aas
mov
das
div
inc
js
mov
adc
clc
xor
pop
jg
cs
mov
movs
sbb
fimul
call
iret
mov
loope
mov
rcr
fld
js
xchg
and
sbb
mov
xor
lea
lahf
mov
mov
mul
push
mov
xchg
(bad)
xor
les
mov
outs
adc
cmc
scas
jl
enter
mov
into
lock
jle
repnz
fadd
mov
dec
xor
rcr
je
(bad)
out
(bad)
jle
sti
loopne
adc
clc
jp
retf
dec
xchg
shl
jle
das
lds
push
mov
das
sbb
js
mov
sbb
ds
into
cld
sahf
js
ins
loop
xor
jae
inc
imul
mov
pop
cld
pop
into
cwde
test
jecxz
mov
xchg
mov
and
jge
add
or
mov
(bad)
fnstcw
cdq
popa
or
cwde
or
nop
pop
and
inc
pop
fist
sub
jo
mov
inc
rcl
pop
in
fnstenv
movs
clc
call
mov
les
push
out
adc
ss
lds
mov
jl
push
add
cmp
std
pop
retf
imul
dec
(bad)
loope
fnstsw
das
push
icebp
and
and
jno
fst
xor
mov
and
aas
out
shl
aas
push
mov
jge
pop
mov
pushf
cli
popa
rol
xchg
push
(bad)
cmps
mov
gs
jmp
dec
mov
xlat
nop
mov
and
nop
dec
sbb
add
inc
sub
les
call
cmp
mov
dec
sar
pop
dec
clc
ins
js
gs
div
and
daa
sbb
jno
leave
ss
mov
stc
stc
jp
inc
sub
iret
mov
mov
pop
ss
and
jp
push
stc
cmp
mov
mov
repz
lahf
inc
loope
loopne
out
cli
aam
jmp
pop
rcr
pop
pusha
fbld
je
nop
inc
mov
jae
ds
std
mov
mov
xchg
dec
test
std
xchg
push
adc
dec
cmc
jnp
aam
sar
(bad)
sti
icebp
push
pop
jb
shr
(bad)
ds
inc
sysexit
add
push
das
idiv
and
das
retf
and
das
ss
rcr
rol
ins
cmp
sub
(bad)
dec
inc
jno
cli
jnp
call
push
mov
dec
clc
push
addr16
add
sub
shl
loopne
mov
ret
adc
xchg
cmp
mov
aaa
stos
xor
adc
and
lea
dec
push
pop
and
aas
add
das
(bad)
jl
mov
fbstp
push
iret
lea
addr16
fcmovnu
jnp
repnz
xor
clc
jle
pop
rcl
es
inc
pop
push
pop
test
out
idiv
fimul
repz
call
cmp
inc
call
sub
(bad)
dec
pop
lods
sti
push
adc
push
lahf
jle
xchg
leave
mov
mov
retf
pop
aas
xor
mov
in
mov
rcr
dec
outs
stos
fnstsw
cli
(bad)
dec
jmp
add
mov
pop
mov
pop
jle
push
sub
arpl
sub
dec
pop
jle
test
jl
or
sbb
das
retf
jo
(bad)
mov
jle
mov
aas
jo
pop
cmp
push
out
xor
stc
mov
jp
rcl
and
test
std
outs
lea
loopne
iret
sbb
je
sbb
xchg
dec
xor
stos
mov
pop
aad
ficom
repnz
add
mov
jl
sbb
push
jmp
jnp
and
push
pop
dec
loope
inc
inc
mov
out
fnstcw
mov
jle
test
cmp
ret
cmp
jae
adc
jl
adc
in
leave
jl
xchg
and
mov
jle
fistp
dec
pop
jl
add
jo
add
arpl
out
sbb
jl
pop
mov
dec
(bad)
sub
push
aas
push
mov
jl
cmp
pop
push
xor
add
cld
mov
pop
cs
mov
mov
call
aas
cmps
add
adc
fwait
loope
sbb
xor
xchg
pop
mov
xlat
es
jp
in
push
sub
outs
stos
lds
pop
pusha
iret
fdivrp
sub
add
push
cli
inc
pop
cld
push
cmp
xchg
and
loope
inc
xor
pusha
(bad)
ja
shl
retf
enter
fnstcw
cmps
imul
sbb
cmp
xor
mov
cwde
mov
(bad)
xchg
frstor
add
inc
sbb
jecxz
loopne
fwait
(bad)
jmp
cmp
add
rcr
(bad)
sub
in
cmp
cmp
pop
aaa
test
push
popa
or
cmp
imul
mov
out
sub
dec
hlt
sbb
mov
mov
enter
pop
ins
mov
inc
ret
pusha
inc
inc
or
sub
dec
pop
inc
jecxz
xor
sahf
repnz
inc
js
and
std
loope
dec
shl
shr
dec
cmps
pop
jecxz
add
jle
sbb
lahf
rcl
enter
fs
call
call
mov
in
add
adc
mov
je
loope
rcl
add
xor
mov
xor
ror
pop
fs
fcom
adc
mov
outs
jge
jl
enter
mov
mov
cli
arpl
jmp
das
rcr
std
jl
rol
fisubr
ds
cmp
(bad)
cli
mov
mov
jo
cli
sbb
neg
push
fwait
inc
cmps
sbb
rol
rcr
fsubr
retf
je
pop
js
jmp
mov
in
mov
sub
push
mov
leave
jge
pop
sub
js
mov
cs
sbb
popf
jp
xchg
cmp
test
sbb
push
and
nop
cs
je
sbb
int
ds
and
retf
jge
add
fbstp
jge
cmp
xchg
sahf
adc
ds
ja
pop
mov
fidivr
in
jl
sbb
pop
loope
std
scas
inc
call
int
mov
fistp
cmp
pop
adc
add
cdq
test
mov
jo
fadd
or
add
pusha
pop
das
fidiv
jg
sub
or
data16
and
das
mov
fcom
mov
inc
sbb
in
jle
xor
or
lds
adc
inc
and
das
retf
pop
cmp
rol
sub
pop
mov
cmp
jg
push
cmp
jl
outs
jno
(bad)
stc
mov
sub
xor
mov
jnp
sbb
xor
jge
cs
lods
add
fdivr
jae
or
addr16
xchg
ret
sbb
pop
adc
scas
or
sbb
icebp
add
mov
mov
xchg
ror
(bad)
std
pop
mov
jns
dec
loop
ins
sub
lock
inc
cdq
std
aas
stos
icebp
adc
clc
xor
shl
cli
push
(bad)
(bad)
jl
es
mov
std
sti
das
outs
out
or
sub
push
aas
adc
outs
and
dec
pop
js
lods
imul
sub
mov
pop
mov
jle
leave
mov
adc
sbb
in
cli
clc
xchg
push
cmp
test
repnz
(bad)
sahf
jle
xor
push
aaa
jae
pop
sbb
addr16
jo
mov
xchg
jge
mov
or
movs
(bad)
rol
data16
sbb
sahf
shl
xor
bound
(bad)
sub
mov
imul
add
sbb
stos
mov
push
(bad)
xor
test
pop
cmp
das
pop
rol
ins
mov
aad
push
mov
cmp
daa
test
cdq
and
in
cld
cmp
cmp
adc
cmp
loopne
rcr
xchg
push
and
pop
shl
fdivr
xchg
inc
jl
pop
push
and
push
mov
test
lea
jnp
push
stc
xor
(bad)
popf
loopne
mov
push
xor
pusha
iret
sahf
mov
mov
mov
cmp
out
sub
mov
xor
aas
out
dec
das
mov
pop
or
add
fdivr
add
adc
sar
and
inc
mov
test
(bad)
pop
pop
mov
dec
imul
shr
jo
in
xchg
fld
ins
mov
data16
shl
gs
mov
cwde
xor
cmp
inc
jno
loopne
inc
push
test
ds
(bad)
(bad)
cld
xor
pop
cmp
dec
ja
xchg
jle
(bad)
dec
mov
adc
sar
mov
setle
dec
xor
push
ret
add
pop
pushf
test
aas
ds
ja
and
out
leave
sti
pushf
sbb
sbb
test
pop
cli
add
xchg
mov
sbb
ficomp
pop
in
pop
sbb
fld
fwait
mov
dec
movs
in
sbb
mov
xchg
inc
js
add
iret
sbb
sub
jae
and
mov
sar
jbe
sub
or
rcr
jno
lahf
test
mov
pop
sbb
mov
(bad)
or
fidivr
scas
mov
xor
test
cmp
fist
je
imul
movs
and
bound
das
ss
ja
mov
scas
mov
jl
jge
pop
daa
bound
in
mov
jbe
push
xor
sub
mov
xchg
jp
fwait
test
pop
lahf
mov
sbb
fldcw
jo
arpl
mov
shl
nop
mov
ja
cmp
shl
or
xor
ret
outs
cmp
adc
retf
inc
ret
cmp
jns
sahf
fsubp
test
fcom
stos
jle
idiv
ds
sub
sub
pop
cmc
adc
cmp
sbb
or
mov
stc
push
shl
cmp
jecxz
pop
cld
push
mov
ror
stc
aam
dec
and
aas
mov
je
xchg
jle
jl
lods
sbb
mov
cli
fucomi
pop
fist
add
mov
inc
sub
test
pop
ss
das
cld
and
cmps
lock
call
jnp
(bad)
jmp
pop
mov
lahf
jne
jl
ret
idiv
sbb
sub
std
scas
repnz
pop
sar
test
nop
(bad)
mov
js
sbb
mov
out
outs
push
fscale
mov
fnstsw
int
pop
mov
nop
aas
jecxz
das
(bad)
mov
arpl
fcomi
shr
sbb
mov
jmp
and
repnz
push
loopne
pop
das
sbb
pop
cmp
shl
push
rcl
sbb
ja
ja
mov
inc
shr
fmul
test
jl
add
(bad)
dec
xchg
mov
dec
(bad)
pusha
inc
stos
xchg
mov
sbb
js
imul
sbb
or
xor
push
dec
xor
mov
dec
xor
mov
mov
push
mov
test
movs
xor
jecxz
sbb
sbb
in
fsubr
test
popf
and
and
repnz
rcr
pusha
outs
dec
mov
pusha
in
cld
inc
es
lods
push
icebp
cwde
pusha
dec
mov
js
loop
pop
xor
add
xor
or
sub
nop
cmp
xlat
fistp
or
push
pop
lock
cmp
and
or
std
jmp
call
sbb
repnz
xchg
dec
jno
test
push
cmp
cmp
cmp
dec
sub
or
mov
sbb
dec
cmp
sbb
imul
jne
sub
cmp
rol
fwait
xor
adc
adc
mov
out
fstp
fistp
add
clc
adc
(bad)
js
fwait
out
sub
iret
mov
push
cmp
cmps
or
in
sbb
enter
jp
sbb
pop
out
cli
inc
jge
jae
add
fidivr
jge
cmp
mov
push
test
call
pusha
xchg
icebp
lahf
das
jle
dec
repnz
sub
dec
aas
(bad)
scas
jmp
jns
rol
jb
outs
cli
call
jge
pop
outs
mov
dec
pop
cmp
sbb
and
adc
ss
lds
repz
adc
xor
in
in
mov
jmp
test
clc
jo
in
les
pop
cmp
adc
xlat
mov
mov
(bad)
mov
cmp
mov
jl
adc
cmp
jp
mov
jge
adc
aad
clc
adc
das
ret
cmps
in
sbb
out
jge
fld
add
sbb
sub
lea
fldcw
push
pop
nop
dec
and
shl
sbb
and
setle
xor
fist
mov
xor
mov
mov
cmps
jp
add
test
jle
pop
push
push
ret
cs
jns
inc
xchg
xor
fwait
ror
clc
in
cmps
jnp
dec
push
pop
add
jp
push
arpl
sar
(bad)
sub
outs
jmp
cli
cmp
(bad)
jl
test
pop
into
mov
pop
adc
push
(bad)
jecxz
aas
sub
scas
and
jmp
push
sbb
pop
cmp
xor
sbb
scas
cmp
add
xchg
jb
(bad)
sbb
ds
out
jle
cmp
ret
xchg
dec
jns
jnp
enter
outs
mov
jg
sbb
adc
aas
jnp
jmp
and
mov
test
cmp
push
sbb
mov
ret
mov
test
std
xchg
jl
inc
add
xor
add
or
jg
sub
adc
mov
dec
cmps
sub
xchg
cmp
mov
sub
add
neg
pop
sub
(bad)
cli
prefetch
adc
xchg
sub
ret
popf
shl
inc
push
fwait
into
dec
jo
xor
mov
aas
sbb
and
dec
adc
mov
xor
nop
adc
ror
mov
mov
nop
fdivr
sbb
pop
push
sti
aas
mov
xchg
call
mov
fs
inc
xor
jecxz
jns
jl
mov
push
pop
sbb
adc
adc
mov
mov
pop
jnp
hlt
(bad)
xor
ins
cmp
pop
dec
div
xchg
cmp
xchg
stc
jns
hlt
icebp
xor
mov
jnp
sar
pop
jb
xchg
pop
mov
inc
popf
inc
ins
xchg
ret
push
cs
jg
stos
cmp
mov
addr16
mov
cmp
fwait
push
add
(bad)
push
push
addr16
test
mov
mov
mov
lods
scas
nop
mov
pop
cmp
jl
push
out
dec
call
sub
shl
cmove
push
lds
inc
xor
loopne
imul
and
mov
ret
(bad)
and
clc
mov
sbb
fcmovb
outs
cmp
cmp
ds
jno
or
add
imul
fnstsw
add
(bad)
and
cmp
sub
lahf
add
cli
push
pop
or
scas
dec
sub
ja
pushf
push
mov
jle
fnstcw
cmp
xor
inc
(bad)
loope
or
xchg
pop
xchg
hlt
cmp
jl
push
inc
dec
jl
jns
shl
pop
sub
mov
popf
scas
adc
mov
shr
adc
mov
adc
dec
lods
sub
mov
(bad)
mov
cmp
mov
fbstp
pop
push
pop
std
adc
pop
jns
mov
loopne
pusha
lahf
xchg
mov
xor
ins
retf
jl
aad
inc
jno
or
dec
fnstenv
xor
aas
(bad)
mul
add
int
fstp
cmp
sub
push
or
sar
jmp
add
std
fldenv
mov
pop
es
xor
cmc
inc
pop
xor
or
and
jns
jecxz
jg
repnz
or
div
pop
mov
in
sbb
mov
stc
les
mov
pop
add
lahf
icebp
pop
addr16
bnd
les
pop
inc
test
mov
mov
shr
std
(bad)
call
mov
cmp
jg
sub
cmp
test
and
mov
ss
jmp
jge
mov
loop
pop
pop
pop
push
xchg
push
pop
mov
fsub
int
cmp
add
mov
push
push
adc
jo
arpl
inc
sbb
dec
pop
mov
sub
test
fistp
das
icebp
je
test
pop
mov
adc
cmp
fwait
or
sub
push
mov
stos
cmp
shl
das
aas
jo
das
push
jne
sbb
add
xor
cmps
int3
dec
outs
push
xor
(bad)
in
ds
(bad)
sti
imul
nop
ja
and
push
repnz
in
sub
ror
xor
loopne
cli
pop
or
repnz
gs
out
dec
(bad)
add
inc
and
into
cmp
mov
dec
add
inc
shl
pop
jns
shr
cs
movs
mov
data16
ds
jp
in
add
loop
nop
std
xor
shr
mov
mov
shl
cld
scas
stos
push
cmp
xchg
pushf
mov
test
sub
std
push
xor
mov
mov
int3
mov
fdivr
repnz
ds
enter
in
push
mov
or
dec
jecxz
gs
and
cmc
test
inc
inc
repnz
out
das
pop
sub
dec
pushf
xor
sahf
inc
cmp
repz
aad
xchg
inc
cmp
push
mov
pusha
std
popf
repnz
mov
icebp
adc
jl
dec
mov
add
xchg
js
in
jge
jo
aad
popa
je
or
out
cmp
jle
mov
and
xor
push
rcr
sbb
loope
mov
ss
shl
mov
push
jnp
jg
and
leave
jl
add
cmps
rol
push
sahf
fstp
scas
sub
repz
inc
daa
int3
mov
sub
or
cli
sub
sar
add
xchg
out
jg
push
mov
sar
inc
mov
fwait
std
inc
xchg
rcl
(bad)
data16
sub
cmp
test
inc
cdq
inc
mov
popf
(bad)
lahf
nop
icebp
int3
push
jle
pop
xor
fistp
dec
xor
sti
add
jae
fs
stc
mov
into
jl
pop
xor
dec
pop
cld
gs
fs
xor
aam
shr
leave
out
sbb
popf
aas
fwait
xchg
fistp
loope
mov
aas
pop
(bad)
aas
into
mov
ja
jb
mov
jmp
cmp
mov
sub
stos
xchg
push
pop
pushf
jmp
pop
pop
jle
xchg
nop
pop
inc
ins
jns
sbb
fwait
xchg
arpl
sub
rcl
mov
cmc
pop
mov
scas
jle
pusha
cli
cmp
out
or
add
pop
adc
cmc
pop
mov
ss
and
enter
cld
scas
imul
call
xor
pusha
mov
jmp
mov
lods
cmp
jns
(bad)
pop
inc
sub
mov
cmp
div
clc
mov
sahf
(bad)
(bad)
repnz
jb
and
mov
sti
outs
aaa
or
push
xor
xor
cs
sahf
sbb
push
data16
and
pop
das
lea
push
fistp
paddb
add
adc
fsub
nop
jle
push
mov
mov
jl
mov
std
add
retf
xchg
movs
dec
sub
mov
mov
mov
(bad)
loope
jnp
jl
dec
clc
cmp
addr16
outs
push
cmp
sar
inc
inc
sbb
sub
sti
and
pop
shl
xchg
jmp
push
std
retf
mov
je
(bad)
mov
or
test
aas
sbb
ins
cmps
mov
test
aas
jp
fistp
scas
cmp
jns
pusha
loope
mov
std
(bad)
ds
pop
and
repnz
rcr
and
sub
test
ret
aas
push
cmp
ss
int
clc
push
jl
cmp
inc
inc
mov
adc
adc
cmp
mov
not
inc
sub
fiadd
movs
mov
xor
pop
xor
lds
xlat
sbb
fwait
pop
jo
adc
and
jecxz
es
sbb
jnp
rol
xchg
or
lods
std
inc
retf
ja
add
mov
sbb
bound
fld
or
sub
aaa
or
pop
sar
loopne
sub
and
popa
jg
test
daa
xchg
sbb
or
ss
mov
xchg
xor
inc
data16
dec
lods
(bad)
add
out
pusha
jnp
push
sbb
ret
test
mov
pop
xor
jmp
mov
push
add
xor
sub
mov
pop
and
pop
out
and
mov
aas
sub
xor
retf
push
jl
push
adc
cmp
fwait
or
inc
stos
mov
fld
jb
xor
cli
and
or
sar
in
xor
xchg
adc
loope
cmp
out
sub
ja
sbb
pusha
sbb
or
mov
sub
and
add
sub
mov
xchg
cmc
sbb
fcmovnb
adc
aas
mov
arpl
(bad)
mov
aas
sbb
dec
cmp
pop
gs
scas
sti
fdivr
aas
imul
sbb
jle
and
jp
xchg
leave
frstor
cwde
retf
mov
dec
cli
and
ins
push
fbstp
(bad)
pop
out
adc
or
xchg
loope
jg
dec
mov
enter
mov
and
lock
mov
xchg
jge
retf
popf
cmc
pusha
inc
dec
add
mov
cli
les
das
xor
sar
sub
arpl
mov
lock
aam
jl
push
aaa
xor
mov
cli
ret
jl
nop
pop
das
pop
inc
js
fdiv
and
dec
xor
bound
fdivr
dec
mov
call
aas
mul
into
sbb
mov
inc
sbb
or
cmps
mov
sbb
pop
add
add
mov
cmp
add
jle
les
imul
sub
sub
pop
mov
and
mov
push
fdiv
mov
inc
jno
cmp
mov
iret
mov
pop
ret
dec
mov
mov
xchg
sub
sbb
fild
pusha
clc
retf
mov
(bad)
xor
or
mov
ja
dec
cs
imul
fnstcw
jo
xor
and
stos
out
inc
dec
sub
fdiv
and
pop
pop
sbb
fistp
or
jl
(bad)
daa
sub
retf
call
inc
pop
leave
dec
mov
mov
cwde
loope
sbb
jg
aaa
stos
test
mov
jbe
addr16
sti
sbb
lock
jbe
jl
pop
jnp
pop
and
je
cli
fidivr
stos
sbb
adc
fld
aas
movs
or
das
std
cmp
aad
fst
adc
test
cmc
ret
ds
pop
imul
out
sbb
repnz
cmp
inc
cs
sar
repz
mov
or
popf
xchg
out
add
sbb
sbb
mov
(bad)
sub
in
jg
in
cmp
dec
cld
sahf
dec
enter
cld
pop
jbe
cmps
mov
cmp
iret
mov
aaa
ja
jle
lahf
ds
jmp
popf
pop
sbb
mov
aas
add
jno
aas
enter
test
shl
pop
jns
or
sub
push
icebp
inc
xchg
and
jmp
adc
or
aaa
cs
xor
sub
daa
cmc
aad
call
cdq
sub
out
dec
sar
setbe
sbb
out
(bad)
sbb
sbb
push
test
push
aas
push
shl
xor
enter
rcl
cld
popf
fcom
jmp
pusha
outs
sub
cmp
push
sar
sub
(bad)
aad
aaa
push
mov
out
and
(bad)
sub
ds
aaa
dec
(bad)
cwde
mov
and
rcl
movs
hlt
and
(bad)
dec
add
jle
mov
push
imul
dec
xchg
mov
leave
retf
mul
clc
inc
gs
clc
cmovae
xor
xor
sbb
stos
mov
addr16
or
sar
mov
cmp
cmc
(bad)
sub
mov
jle
and
jnp
call
add
jl
push
dec
inc
pop
xchg
loopne
sub
mov
mov
push
jo
movs
or
cmp
js
test
lock
dec
jae
sbb
sub
sbb
or
arpl
adc
mov
dec
out
pop
mov
js
shl
mov
in
xchg
aas
adc
inc
xor
mov
scas
fiadd
cmp
sbb
push
jnp
nop
sbb
cmp
pop
(bad)
fwait
mov
xchg
add
mov
pop
mov
add
mov
mov
mov
leave
imul
push
pop
cmp
js
cmp
loope
mov
aad
(bad)
arpl
dec
mov
fnstsw
push
ret
clc
push
es
outs
cs
pop
mov
minps
mov
(bad)
ss
in
jb
pop
leave
jecxz
movs
mov
xchg
jbe
cmp
pop
cmp
aaa
adc
jns
sbb
jle
lds
into
popf
imul
jle
les
or
jns
sub
and
(bad)
fptan
and
mov
cli
pop
fdivr
icebp
sub
call
cmc
ror
sti
test
fcmovnb
xor
xor
pop
xchg
aas
cmp
push
cmp
inc
sbb
push
cmp
loopne
add
jmp
sbb
imul
xchg
lahf
dec
dec
sub
retf
ja
inc
mov
cli
or
sub
das
out
jg
call
mov
in
pusha
sub
xchg
add
adc
pop
sbb
fcomp
ins
ss
and
jle
sub
inc
sbb
push
xchg
sub
pop
mov
out
cs
pop
arpl
pop
lods
unpckhps
jmp
xor
xchg
test
ss
aas
cwde
(bad)
cmp
in
push
ret
stos
test
inc
sub
jnp
mov
cmp
xor
das
lahf
cmc
and
imul
push
xor
xchg
inc
dec
adc
sub
push
jne
and
(bad)
sub
in
pusha
dec
stc
leave
inc
std
dec
push
sbb
js
mov
sub
cmp
sub
mov
add
dec
mov
in
inc
jl
jp
not
pop
xchg
ss
repnz
sbb
mov
ret
rcr
cmp
sub
sbb
pop
in
fldcw
inc
push
add
aas
jle
mov
jg
jmp
aas
xchg
shl
cmp
cmp
fstp
push
sahf
sub
inc
inc
fisttp
std
fsub
into
daa
js
mov
sar
dec
inc
xor
dec
cli
sbb
mov
clc
das
sbb
mov
fwait
push
push
and
(bad)
js
push
lods
and
lahf
ds
jp
retf
mov
shl
mov
inc
ds
jb
rcr
stos
pusha
adc
adc
leave
mov
(bad)
imul
xor
dec
fdiv
movs
ss
push
inc
dec
idiv
sbb
dec
fdivr
clc
mov
fwait
xor
hlt
jnp
push
sbb
push
dec
pop
cmp
pusha
xchg
ret
add
retf
mov
pop
cdq
cmc
pusha
sub
add
iret
sbb
cmp
push
scas
mov
mov
add
movs
xchg
cmp
add
mov
mov
pop
jo
xor
scas
sub
fcmovnu
xor
mov
outs
push
(bad)
push
mov
dec
(bad)
fsub
add
cs
leave
nop
imul
inc
ds
and
adc
std
lock
xchg
sbb
sbb
and
or
loop
push
xchg
fsubr
dec
scas
xor
fmul
sar
retf
jnp
sub
xor
sti
jg
push
ss
in
pop
push
jno
dec
push
mov
pusha
jle
idiv
and
cli
js
xchg
ret
std
(bad)
push
mov
lds
pushf
mov
outs
dec
sar
dec
dec
push
popf
sbb
jmp
pop
out
les
pop
pop
push
cmps
lods
daa
jg
(bad)
das
rcr
mov
jne
dec
cld
cmp
rcr
adc
pop
cmp
push
out
ins
pusha
push
and
cmp
push
mov
add
int
pop
add
push
adc
push
retf
repnz
sbb
add
mov
js
jle
or
add
or
mov
jle
fnstsw
mov
pop
cmp
shl
xchg
pop
test
sbb
ja
outs
mov
mov
out
cmps
ss
rcr
repnz
clc
mov
cmc
clc
sub
repnz
aas
add
jge
sbb
jp
mov
push
ficomp
push
adc
and
jmp
outs
mov
shl
xor
clc
aad
jl
jle
aas
dec
shl
sub
aas
jg
aam
in
and
sbb
sbb
push
push
add
jl
adc
lahf
icebp
fdivr
aaa
sub
pop
pop
sar
cmp
neg
mov
jb
ds
and
(bad)
adc
in
xchg
bound
and
xor
dec
xor
push
fstp
sub
and
out
mov
scas
jnp
mov
clc
jno
push
or
jl
xor
dec
icebp
push
mov
sar
outs
and
in
jns
clc
in
jle
cmc
mov
xor
dec
sbb
pop
cdq
je
cmp
xor
stc
scas
hlt
aaa
mov
cmp
inc
out
xchg
cmp
sub
dec
cmp
jge
mov
add
adc
fbld
aas
aaa
adc
mov
clc
in
test
sbb
ins
add
jnp
xchg
inc
inc
mov
push
sbb
xor
mov
add
mov
lods
cmp
popf
mov
push
outs
jmp
mov
sbb
mov
mov
xlat
mov
sbb
add
pusha
cmp
test
hlt
mov
pop
add
repnz
mov
xor
jno
sub
ror
xor
pusha
rcr
call
lea
or
pop
test
mov
mov
dec
std
lds
sar
jle
cwde
sub
mov
mov
cmp
aas
sub
push
mov
push
std
sub
sbb
mov
test
ret
aam
jl
xchg
ins
sub
jae
cwde
cdq
pop
cmp
inc
movnti
aas
xor
(bad)
sahf
fstp
mov
ret
(bad)
lods
adc
pop
or
pop
cmps
das
push
cmp
and
fsubr
jno
adc
push
adc
call
ds
xchg
or
sbb
data16
aas
call
mov
cmp
push
loop
pusha
in
sub
clc
mov
push
push
test
jmp
pop
inc
mov
push
sbb
pop
stc
fldenv
call
aas
fstp
cmps
pop
adc
jns
aam
mov
sbb
xor
jg
jae
inc
xchg
push
adc
std
lock
div
ins
sub
add
cli
out
into
cmp
out
sub
cmp
sbb
jle
scas
sbb
jmp
dec
pop
add
cdq
clc
jb
add
call
dec
fisub
adc
data16
fstp
dec
xor
sbb
cmp
cli
(bad)
cmp
mov
pusha
xor
and
dec
push
cmp
mov
jne
cmp
xchg
out
adc
adc
fidiv
daa
(bad)
sub
shr
sbb
fist
sti
das
adc
in
xor
dec
jbe
test
mov
add
inc
ja
pop
and
daa
jecxz
mov
inc
ss
adc
mov
push
add
popf
shl
ins
inc
cmp
retf
mov
pusha
xor
cwde
push
call
cmp
mov
xchg
adc
mov
jnp
scas
rcl
mov
add
cmps
mov
sub
aas
pop
lahf
mov
shr
repnz
clc
imul
popa
ins
add
jle
idiv
or
xor
aaa
icebp
out
mov
dec
js
sub
mov
add
sub
mov
cmp
xchg
mov
(bad)
jmp
inc
jbe
(bad)
mov
aaa
sub
mov
jle
or
imul
daa
mov
mov
pushf
inc
clc
(bad)
clc
add
arpl
xor
xor
pop
retf
mov
jl
jnp
sbb
pop
and
pop
and
inc
fdivr
stos
and
fwait
dec
or
scas
jnp
sahf
inc
pushf
cmc
arpl
add
fimul
jl
adc
lock
push
add
xor
jae
mov
(bad)
jp
mov
clc
call
ret
outs
dec
mov
xor
inc
xor
fsub
push
pop
lods
mov
xor
pop
ror
inc
jns
cmp
dec
adc
int
mov
cmp
jns
in
stc
sub
(bad)
mov
cli
cli
inc
std
sub
xchg
nop
pop
pop
mov
mov
sub
pop
das
out
mov
add
jp
repnz
mov
jge
mov
cmps
gs
in
and
mov
fnstcw
ins
ds
sahf
ror
shl
mov
xor
mov
sbb
pop
mov
jbe
cli
out
scas
stos
inc
mov
jnp
adc
cmp
jo
cmp
cmp
push
mov
mov
int
mov
mov
push
sub
xor
mov
test
mov
popf
jg
fmul
ret
mov
or
xor
push
mov
es
pusha
sbb
cdq
shl
xor
sbb
cld
ror
jmp
repz
and
shl
sbb
mov
(bad)
xor
jns
nop
(bad)
pop
retf
mov
fcomi
mov
and
and
pop
retf
scas
sar
mov
push
and
and
inc
clc
std
xor
pusha
sub
repnz
scas
fst
outs
mov
test
aas
push
jmp
sub
fdivr
dec
adc
mov
or
pop
addr16
sbb
pop
push
mov
pop
loopne
mov
jl
clc
rcl
pop
jl
cmp
fild
aas
repnz
jl
push
mov
cmp
iret
aas
jl
xor
rcl
mov
push
call
sub
aas
lods
iret
test
(bad)
mov
mov
ja
bound
inc
inc
mov
movs
aas
sub
mov
je
sbb
mov
sahf
ss
jns
xchg
cmp
cdq
(bad)
sub
and
imul
push
pop
nop
ja
inc
push
pusha
pop
mov
mov
jnp
adc
aas
cmp
ds
add
xor
mov
ret
mov
xchg
out
jo
sbb
outs
(bad)
or
aas
pop
sub
fwait
daa
mov
imul
aam
jns
jns
pop
cdq
xor
imul
repz
mov
pop
pop
repnz
sbb
or
cld
mov
rcr
sub
xor
push
xchg
sar
retf
jg
out
pop
das
lea
mov
adc
ficomp
add
xor
test
jg
pop
cmc
dec
dec
cmp
cli
inc
inc
jge
inc
add
scas
mov
push
mov
push
inc
loopne
leave
imul
mov
cmp
add
in
jl
sbb
cmp
dec
push
mov
ret
imul
cmp
jle
add
jno
push
add
mov
dec
add
dec
mov
pop
xlat
nop
pusha
adc
imul
jnp
mov
push
in
mov
xor
push
shl
aas
imul
mov
dec
out
xchg
and
xchg
repnz
sbb
adc
nop
mov
call
hlt
push
jo
cmp
retf
leave
das
rcl
pop
das
mov
and
stc
pop
pop
shr
loopne
jecxz
sbb
stos
repz
enter
xor
movs
xchg
pop
cmp
adc
pop
repz
jle
push
inc
inc
sub
pop
xor
mov
ds
or
into
test
lods
pop
cmp
sbb
adc
fnstcw
fwait
es
(bad)
vprotw
mov
mov
shr
mov
mov
xor
or
sbb
jecxz
and
imul
(bad)
jp
jp
add
in
cmp
dec
clc
jmp
in
fidivr
fcom
push
push
retf
sar
sub
js
pushf
add
mov
adc
sub
je
out
sar
mov
aas
and
sahf
jp
movs
stos
sahf
cdq
pop
cmp
test
jb
add
in
mov
push
dec
lods
adc
cmp
sbb
pop
add
cmp
xchg
and
cmp
in
add
mov
(bad)
sti
jle
sub
xor
out
jge
dec
mov
(bad)
test
loopne
es
ja
mov
sbb
rcr
add
xor
push
mov
stos
sub
ds
pop
adc
adc
mov
dec
shr
jge
sub
fwait
add
retf
ds
sub
js
imul
pop
stos
xchg
pop
push
and
pop
add
jmp
xlat
(bad)
cmp
adc
inc
inc
inc
xchg
jle
into
mov
sahf
hlt
sub
es
ret
mov
scas
mov
push
retf
cmp
aaa
retf
jg
cmps
stc
or
jae
test
daa
stos
push
shr
dec
popf
sbb
xlat
(bad)
loopne
aaa
mov
mov
or
aad
mov
stos
sbb
xor
mov
inc
cmp
inc
add
adc
cmp
dec
test
repnz
fsub
cmp
cmp
int
jo
sub
dec
or
retf
mov
sub
mov
(bad)
fiadd
std
mov
mov
mov
dec
loope
aad
mov
sub
repz
push
stos
out
push
sub
mov
jns
mov
shl
inc
xor
xor
and
mov
sbb
jmp
(bad)
cmc
push
add
jno
addr16
std
push
mov
sar
lock
mov
(bad)
push
fldenv
push
sbb
test
push
sti
jnp
jne
add
mov
sbb
pop
xor
push
icebp
sti
mov
addr16
dec
ret
mov
jg
mov
jnp
mov
in
adc
test
and
push
xchg
and
aas
ja
xchg
fidivr
cmp
imul
dec
sub
xlat
clc
rol
mov
(bad)
cmp
cli
les
fdivr
xor
dec
daa
jmp
cmp
call
(bad)
jge
xchg
out
or
mov
repnz
jne
clc
scas
jmp
aas
loopne
adc
mov
mov
in
mov
push
mov
nop
add
stc
sahf
mov
ret
stos
mov
call
shl
movs
div
mov
clc
jae
gs
add
int3
jl
cmps
jb
jno
jl
xor
es
jbe
or
fstp
out
jno
clc
mov
in
jnp
dec
or
mov
sbb
push
push
sub
(bad)
stc
cmp
ss
cmp
xlat
in
pusha
push
sub
test
push
jg
cmp
jns
adc
sub
ins
std
push
jl
mov
jnp
das
adc
sti
pop
jge
adc
mov
(bad)
aas
push
xchg
add
add
push
sub
fld
sahf
test
mov
pop
pop
xor
sti
nop
mov
lods
xor
lea
fistp
and
sub
sahf
nop
repnz
sbb
shl
mov
jmp
add
pop
je
xlat
jg
pop
push
dec
fwait
mov
imul
std
dec
repnz
(bad)
stos
fwait
lds
jmp
or
mov
shl
adc
mov
jle
test
aas
daa
clc
cmps
xor
cli
shl
bound
fcmovnu
(bad)
or
aas
mov
add
pusha
dec
or
sub
push
sub
aas
shl
inc
lods
sbb
dec
fdiv
dec
movs
(bad)
test
loope
dec
jno
mov
xor
xor
aas
adc
xor
shr
cli
ds
sub
test
mov
xchg
adc
cmp
retf
cmp
cmp
cmp
jnp
cli
cmp
pop
rol
rcr
jl
cmp
jno
xor
addr16
inc
mov
repnz
rcr
cmp
mov
add
jae
pop
or
pusha
aas
and
ja
mov
lods
push
sets
xor
inc
sub
stc
xchg
xchg
lods
aas
lea
aas
pop
cld
mov
xlat
push
pop
enter
int3
xor
push
shl
scas
out
cli
or
xchg
cmp
arpl
sub
mov
js
repz
dec
mov
mov
inc
or
jb
loop
ds
xor
cld
adc
(bad)
xchg
xor
xchg
and
sub
aas
mov
mov
cmps
stc
ret
std
outs
xchg
aas
enter
pushw
lds
dec
rcr
dec
std
mov
bnd
xor
or
repnz
ret
jle
xchg
jl
in
test
jg
scas
mov
rcr
dec
arpl
adc
jecxz
loopne
pop
scas
loope
jo
cmc
pop
push
sbb
fwait
(bad)
in
sbb
mov
or
stos
call
or
sti
cmp
inc
test
lods
mov
jl
pop
push
outs
jmp
sbb
pop
sbb
ret
mov
rcr
push
shr
inc
mov
add
sub
rcr
das
out
aad
pop
sub
xor
or
pop
sbb
pop
pop
pop
sbb
inc
mov
cdq
aas
sbb
sub
adc
sar
inc
lods
adc
xchg
(bad)
jmp
sahf
cmp
pop
sub
hlt
sbb
out
sahf
and
sbb
clc
mov
bound
mov
mov
and
push
mov
(bad)
stos
cmp
nop
aas
rol
push
xchg
push
mov
inc
inc
outs
int3
add
dec
jl
repnz
(bad)
mov
ret
out
xor
cmp
dec
clc
or
jg
sbb
aas
rcr
xor
shl
push
add
mov
and
mov
pop
cli
test
sbb
push
jmp
jecxz
leave
pop
mov
aam
jl
(bad)
test
or
aas
mov
jle
add
shl
lea
call
stc
repnz
push
nop
mov
cmp
int3
out
sbb
mov
xor
xor
loopne
sbb
or
pop
mov
aas
jmp
push
pop
fisttp
sbb
lahf
fdivr
jg
mov
repnz
sub
sub
es
add
push
cmp
and
jge
cmp
jecxz
mov
pushf
jmp
retf
sbb
lahf
ins
and
(bad)
cli
inc
pop
rcl
scas
add
in
add
jmp
pop
or
ja
add
repnz
cmp
test
bound
mov
and
popf
inc
aas
das
ret
imul
sbb
out
pusha
jmp
rcr
jle
into
jecxz
pop
ds
fistp
mov
cmp
clc
sbb
sbb
jl
add
push
cmp
add
mov
aas
adc
in
inc
mov
pop
xchg
sub
(bad)
mov
pop
pusha
test
icebp
fmul
gs
add
js
and
xor
cmc
pop
sub
sub
or
(bad)
fdivr
inc
xchg
jno
jg
dec
adc
out
push
fidiv
stc
adc
loop
cmc
add
pop
sub
inc
xor
imul
mov
push
jno
inc
cmps
pop
adc
mov
lods
shr
mov
mov
push
xchg
push
sbb
call
pop
int3
pop
pop
popa
inc
outs
pop
inc
test
ret
adc
xchg
push
cmp
(bad)
das
imul
sub
xchg
adc
mov
xchg
fsubr
aas
leave
xchg
movs
mov
mov
adc
mov
jl
mov
and
pop
push
call
inc
fs
aad
cmp
pop
cmps
repnz
mov
push
popa
div
fnstcw
pusha
imul
test
fsub
(bad)
dec
sar
push
sub
xchg
jno
(bad)
lock
and
mov
or
or
addr16
adc
xchg
(bad)
movs
jae
outs
cld
lahf
inc
and
imul
dec
pushf
cmps
aad
push
mov
fisttp
icebp
(bad)
nop
sbb
xor
imul
inc
es
jns
adc
fld
mov
cmp
jl
inc
jnp
inc
cmp
out
mov
sub
add
jmp
je
int3
cld
sahf
cmc
cdq
inc
push
inc
jecxz
pop
outs
cs
inc
mov
pop
mov
inc
out
cld
jecxz
std
jmp
out
gs
pop
inc
addr16
adc
sub
inc
add
out
add
xor
pushf
and
sub
aam
jo
pop
jl
mov
ins
out
das
inc
test
dec
jae
add
test
push
pop
sub
or
sbb
or
sar
jo
jecxz
call
cmc
repnz
mov
pushf
(bad)
(bad)
lock
mov
dec
add
sahf
lds
dec
mov
jmp
and
repnz
test
pushf
mov
pop
push
stos
repnz
ror
adc
fstp
addr16
sahf
les
pushf
(bad)
sub
dec
jle
aas
add
loopne
scas
inc
xchg
jp
or
adc
xchg
cmp
cs
mov
inc
jns
in
cmp
test
mov
lods
mov
and
push
je
mov
lock
fdiv
(bad)
retf
test
cmps
or
adc
dec
cmps
cmp
xor
jb
mov
push
pop
jo
xchg
push
cmp
popf
adc
out
adc
sar
or
cmp
jg
and
sbb
jmp
(bad)
mov
ret
fisttp
retf
cli
push
add
sbb
out
xor
cmp
or
mov
cmp
inc
cmp
icebp
xor
xchg
mov
in
and
test
ror
js
clc
adc
adc
sbb
pop
mov
lods
add
sahf
xor
sbb
add
nop
jns
retf
mov
pop
ss
inc
pop
arpl
push
sbb
push
pusha
out
aaa
fucomp
jge
or
dec
add
pop
pop
sbb
or
cmc
inc
or
fadd
push
(bad)
fdivrp
adc
hlt
inc
xchg
scas
(bad)
in
int
data16
push
xor
mov
jge
int3
adc
jno
pop
jmp
mov
xor
adc
jge
xchg
or
sbb
push
fs
sub
jno
sahf
mov
jae
xlat
je
mov
ret
cmp
hlt
mov
pop
movs
jp
mov
cs
jns
mov
aas
pushf
pop
stc
push
mov
loope
movs
(bad)
xor
or
jno
cs
mov
sub
jns
mov
cmp
loop
in
and
add
and
out
out
or
scas
pop
out
lock
mov
sub
xchg
lods
dec
jno
mov
mov
push
pop
pusha
ds
inc
jge
mov
cmps
and
xchg
dec
into
ror
jg
nop
dec
bound
call
mov
scas
loopne
out
dec
js
and
jmp
movs
and
add
fcomp
cmp
emms
cmp
xchg
mov
enter
adc
push
jmp
jmp
test
jle
test
inc
repz
mov
mov
jo
pop
add
add
sahf
xor
inc
add
cmp
jo
xchg
or
out
pop
mov
ds
inc
push
je
add
jae
xchg
(bad)
lods
imul
adc
shr
jg
movs
call
stc
js
and
enter
cmp
loope
loop
jp
xor
ins
ss
jnp
mov
jae
push
imul
imul
(bad)
jmp
ins
inc
adc
js
loopne
inc
sar
dec
pop
ds
sbb
mov
mov
xchg
lods
mov
cld
loop
sbb
cmp
inc
(bad)
or
or
ret
inc
add
inc
sahf
arpl
(bad)
jns
or
test
xchg
cmp
sub
addr16
and
inc
sub
jge
jmp
arpl
jl
cmp
push
and
adc
jns
clc
loope
(bad)
outs
aas
and
mov
fisttp
cmp
int3
dec
xor
jl
sub
mov
xor
xchg
sti
and
pop
out
loope
push
fist
imul
sub
movs
sub
xchg
into
pop
fdiv
jno
adc
dec
data16
pop
dec
pop
imul
imul
in
sbb
les
cld
fmul
addr16
loopne
js
xchg
cmp
xor
mov
xor
sub
loope
pop
and
mov
fild
or
imul
jp
cmp
xor
mov
xor
mov
cmp
mov
mov
fs
mov
push
cli
jl
push
jmp
jge
fdiv
cld
fist
push
pusha
jno
and
out
sar
sub
push
push
push
jne
jmp
jg
popa
dec
adc
mov
mov
sbb
cmp
mov
inc
mov
shr
push
scas
aaa
jmp
ins
in
xlat
and
adc
mov
fnstcw
sbb
not
ins
cmp
sbb
mov
xchg
jnp
loopne
dec
(bad)
in
xor
call
inc
inc
adc
adc
mov
(bad)
neg
adc
cmp
jae
cmps
cmp
fidivr
ret
push
ss
lea
nop
dec
rcr
shl
or
cmp
popf
dec
pop
out
in
mov
or
test
push
rol
aas
cmp
inc
bnd
xrelease
stc
sub
out
xchg
cmps
fstp
push
and
add
jecxz
or
rol
aad
adc
sub
aas
add
inc
dec
xchg
or
mov
push
jb
sar
and
loope
or
fcmovne
cld
fiadd
jbe
mov
fbstp
or
inc
cli
mov
cmp
or
and
cld
or
mov
inc
retf
scas
jmp
pop
dec
push
lds
fs
add
push
push
jp
cs
rol
sbb
outs
xchg
mov
dec
pop
push
les
push
inc
pop
jae
enterw
fsub
ins
adc
retf
cmp
push
inc
adc
iret
push
or
je
out
mov
inc
test
push
jl
jns
inc
loop
in
cwde
fild
cmp
xor
mov
ins
add
call
inc
mov
mov
inc
pop
pop
mov
push
inc
aas
sub
int
mov
ins
push
leave
out
fidivr
or
adc
test
cs
adc
pop
jle
jno
cmc
jmp
cmp
clc
inc
inc
push
mov
xor
inc
or
sbb
cmp
xchg
lods
push
mov
out
xor
mov
enter
lea
imul
sub
fsub
jbe
cmp
pop
dec
xor
inc
cmc
shl
(bad)
imul
inc
test
mov
(bad)
cmp
dec
inc
push
iret
push
leave
mov
lods
arpl
jmp
aaa
fcomip
(bad)
int3
inc
xor
xor
cmp
and
ds
cmp
(bad)
out
cmp
ds
lods
xor
inc
sub
pop
test
js
or
cmp
cmp
lods
test
movq
ss
mov
xchg
cld
sbb
jno
mov
mov
add
mov
into
sub
sub
mov
sbb
adc
fdiv
xor
and
jp
push
daa
pop
cmp
xchg
xchg
je
cmp
jns
(bad)
cmp
sub
add
cs
ins
and
mov
retf
dec
test
xchg
js
xchg
sub
pop
cmps
pusha
vmwrite
(bad)
fimul
mov
lds
ret
loopne
sub
repz
jl
fwait
inc
cwde
mov
sbb
pop
rol
jmp
adc
fwait
pop
and
sbb
xchg
add
and
jmp
add
mov
cmp
div
retf
inc
adc
mov
sbb
mov
push
outs
stos
cmp
loopne
ss
sub
jno
ror
inc
inc
inc
push
push
jne
sahf
pop
and
xor
rcr
pop
mov
pop
lock
(bad)
mov
push
jmp
loop
scas
xor
cmp
bound
xchg
stos
sub
ficomp
scas
shl
add
jno
in
aas
jns
clc
cmp
sub
mov
je
inc
cmp
ins
cmp
ins
out
loope
jmp
inc
adc
stc
test
cmp
arpl
mov
sub
test
loope
push
jo
inc
enter
rcl
cmp
cmp
mov
pop
mov
fsub
jno
xchg
dec
jb
and
mov
adc
push
and
jmp
pusha
hlt
jno
jp
sub
movs
adc
sub
inc
stos
iret
or
(bad)
adc
ret
mov
imul
cdq
inc
mov
in
(bad)
push
cmp
cli
popf
cmp
cmp
sbb
call
inc
in
popa
jle
dec
cld
and
xchg
test
inc
dec
inc
icebp
sahf
jmp
inc
mov
stos
mov
sbb
dec
mov
add
cs
(bad)
push
mov
add
(bad)
mov
cmp
inc
mov
jbe
cmp
xor
pop
inc
popf
xchg
push
xor
mov
test
out
jle
js
dec
inc
movs
inc
jge
scas
rol
and
clc
pop
test
cmp
hlt
int
test
sbb
inc
out
(bad)
xchg
jne
lock
jl
stos
jmp
mov
add
xor
cmps
jl
cdq
pop
inc
in
mov
sbb
mov
xor
pop
inc
hlt
ret
sub
push
pop
cmp
and
stos
push
nop
inc
inc
sbb
cmps
xor
sub
push
aas
ins
jp
stos
dec
push
cmp
mov
test
jb
mov
hlt
sti
retf
lods
test
push
ret
lea
in
or
and
mov
push
fldln2
inc
(bad)
dec
xor
icebp
inc
imul
fild
cmp
js
mov
movs
inc
sbb
shr
test
xlat
popf
jmp
mov
jne
inc
dec
sbb
aaa
inc
mov
dec
imul
rol
lods
push
jnp
aam
sbb
das
xchg
push
sar
xchg
mov
cmp
stos
ins
jecxz
add
repz
push
cmp
aas
mov
mov
mov
mov
stc
(bad)
aaa
ret
in
repz
inc
pop
inc
pop
popf
inc
cmc
jg
pop
dec
xchg
add
mov
lea
dec
jp
and
movs
retf
cmp
mov
xchg
std
iret
lea
jl
jmp
shr
sbb
addr16
jne
clc
jle
inc
ja
sbb
xchg
popf
jg
inc
jmp
pop
mov
sub
or
adc
inc
mov
repz
pop
xchg
stc
ds
xlat
adc
sbb
cdq
retf
jg
(bad)
or
neg
jecxz
dec
loopne
adc
mov
inc
xor
(bad)
in
movs
out
popf
lods
fld
(bad)
cli
cmc
dec
mov
mov
test
push
adc
in
xor
cmp
adc
mov
mov
xchg
xor
mov
sbb
push
inc
sahf
dec
adc
dec
test
inc
out
sub
mov
nop
push
loopne
mov
ds
pop
jnp
or
int
rcl
inc
ffree
pop
mov
clc
pushf
xor
push
aas
adc
lock
inc
push
inc
inc
pop
inc
addr16
dec
sub
inc
je
cmp
popa
pop
lods
inc
movs
mov
(bad)
dec
inc
xchg
jg
cmp
pop
std
fnstsw
or
add
adc
or
inc
nop
mov
pop
dec
fdivr
push
rol
mov
cmp
std
inc
pop
bound
xchg
jno
cld
push
jb
imul
(bad)
in
in
inc
jae
loop
(bad)
push
popa
inc
push
movs
lds
addr16
inc
xchg
jae
icebp
retf
mov
mov
xor
inc
mov
mov
push
(bad)
(bad)
add
ins
push
push
pop
jnp
cwde
mov
dec
popa
int
inc
sub
cld
cs
pop
inc
je
(bad)
sbb
mov
loop
mov
rcl
push
popf
adc
xor
and
inc
jns
add
push
aas
std
inc
(bad)
sar
dec
stc
cmp
sbb
cli
div
test
scas
mov
sbb
push
mov
movs
sub
mov
mov
cmp
imul
xor
scas
mov
jmp
and
in
cmp
shl
fild
xor
mov
push
jo
xchg
xor
idiv
add
cmc
pop
cmp
stos
pushf
mov
outs
fimul
repnz
xor
inc
fistp
or
dec
test
in
idiv
push
arpl
ss
repnz
(bad)
popf
inc
mov
mov
addr16
cmp
and
ds
cld
mov
xchg
sbb
push
test
dec
and
mov
xor
cld
push
or
cmp
je
mov
adc
cld
xchg
imul
inc
fwait
movs
mov
mov
push
mov
cmps
lds
xor
gs
inc
xchg
ds
jo
and
dec
push
cmp
or
xchg
retf
cmp
es
loop
cmc
jg
(bad)
not
mov
cmp
sub
cmp
js
div
or
nop
mov
fidivr
mov
inc
xor
xchg
imul
push
jb
inc
and
xchg
cli
cmps
rcr
pop
or
inc
cmps
cmp
cmc
icebp
mov
jnp
cld
jo
mov
fld
sub
jle
inc
stos
lea
xor
adc
and
cmp
daa
inc
mov
sub
mov
cmp
retf
mov
jns
add
shl
scas
cld
pop
push
rcr
xchg
shl
push
xchg
mov
inc
xor
(bad)
aam
rol
mov
mov
out
mov
stc
call
rcr
nop
lahf
mov
pushf
inc
inc
cmp
push
and
push
inc
sbb
jae
fmul
shr
loop
hlt
enter
xor
lods
lahf
cmp
aad
arpl
ins
test
cmp
loopne
jl
mov
inc
test
hlt
int3
push
int
ror
rcr
jmp
adc
inc
test
fldl2t
js
or
pop
mov
pushf
push
xchg
add
cmp
jp
call
cmc
stos
inc
adc
mov
or
into
fsub
cmp
dec
sub
(bad)
fcmovb
push
xlat
rcl
icebp
and
sbb
and
sbb
pop
dec
mov
push
pop
xchg
inc
xchg
addr16
inc
push
dec
jmp
cmp
xchg
in
mov
inc
and
lds
jnp
pop
adc
adc
int3
xchg
mov
dec
fild
call
loopne
or
aaa
jge
cdq
mov
mov
rol
(bad)
in
cmp
aas
cdq
mov
and
dec
adc
or
in
jle
or
shl
push
in
jecxz
call
sub
pop
(bad)
xor
add
inc
mov
jno
mov
adc
xor
ds
xchg
mov
xchg
sbb
cmc
stos
in
xchg
les
and
test
or
loop
popa
or
neg
and
jo
xlat
cs
test
loopne
dec
mov
jmp
mov
inc
jmp
xlat
call
sahf
and
out
ins
inc
mov
adc
addr16
mov
mov
push
(bad)
movs
fsubr
xchg
pop
out
mov
movs
adc
jno
hlt
fisubr
dec
sbb
xchg
sub
(bad)
mov
test
ds
inc
loope
(bad)
lahf
inc
mov
(bad)
in
add
sbb
and
cmps
jl
push
inc
push
pop
leave
jmp
cmp
jo
js
add
lods
rcl
movs
pop
mov
test
sbb
cmp
lods
cmp
in
pop
enter
pop
mov
jno
xor
and
xor
pop
imul
jnp
mov
sbb
push
mov
jle
mov
into
fcmovb
jecxz
(bad)
fist
or
xor
xor
sub
mov
je
cmp
sti
inc
in
cld
out
loop
cmp
inc
jecxz
cmp
fstp
and
repnz
inc
lods
sahf
or
mov
or
fnstenv
aas
inc
jae
inc
fs
ret
in
lods
xor
push
gs
movs
add
push
cwde
mov
cmps
cmp
mov
sub
fwait
xchg
enter
inc
mov
shr
sub
out
(bad)
xchg
bswap
jge
dec
mov
mov
aam
cmp
xor
pop
shl
and
mov
dec
aam
ror
fidivr
or
push
adc
sub
sub
aas
dec
(bad)
cmp
mov
sbb
cmp
test
dec
jp
ficomp
and
test
sbb
dec
loopne
push
pop
inc
mov
dec
adc
and
inc
mov
imul
push
stc
aas
ins
jno
je
push
fimul
pusha
shl
dec
jg
fadd
pushf
stos
inc
mov
mov
(bad)
add
dec
jne
mov
push
push
dec
in
cmp
adc
add
mov
jbe
inc
imul
test
out
xchg
cmp
(bad)
adc
mov
stos
call
sbb
in
inc
aam
adc
in
sti
shl
or
sbb
mov
cdq
fwait
cmp
push
adc
sub
sbb
rol
ins
jle
sbb
ss
mov
pop
sahf
dec
push
mov
addr16
dec
xchg
cmp
mov
jl
lods
jmp
in
sbb
lods
cwde
je
pop
sti
sub
jg
aam
and
mov
xchg
push
ds
add
clc
loopne
fmul
inc
fisttp
fld
inc
inc
test
mov
das
mov
jmp
test
mov
jmp
xchg
mov
addr16
xchg
sbb
push
mov
pop
pusha
jmp
fistp
sub
xchg
cmp
jns
dec
or
jl
jp
xor
je
repnz
sub
fld
call
cmp
outs
stos
cld
(bad)
je
cmc
iret
aam
jno
sbb
xor
test
pop
cs
xor
push
ds
shr
sub
rcl
pop
jno
retf
dec
sahf
sbb
inc
sbb
leave
aam
cwde
popa
cmp
(bad)
cmp
(bad)
hlt
jns
mov
add
jmp
or
iret
push
in
aas
in
test
cmps
jge
push
fcmovnbe
rol
sbb
pop
jnp
or
js
aam
and
jl
retf
into
rcl
jns
sub
and
mov
les
retf
sbb
sahf
cdq
loopne
push
pusha
into
mov
mov
fidiv
sub
aad
(bad)
pop
dec
js
cld
or
cmp
scas
stos
xchg
(bad)
push
xchg
and
ds
jno
cmp
cmp
(bad)
rcr
leave
mov
faddp
rol
push
ss
dec
sub
call
lock
stos
sub
sub
enter
(bad)
mov
xlat
dec
inc
dec
jne
repz
mov
sti
arpl
(bad)
cmp
call
pop
ds
inc
mov
in
das
push
jnp
push
xor
push
sar
sub
bound
add
jp
test
pop
imul
push
mov
(bad)
clc
ror
jg
adc
fcom
adc
nop
sub
or
test
fadd
dec
pusha
mov
sub
fiadd
call
repz
cmp
or
fiadd
(bad)
push
fdiv
xchg
adc
loop
cmps
xchg
inc
adc
mov
inc
dec
xor
imul
ss
sbb
test
mov
jno
push
xchg
sub
and
test
jl
jecxz
pop
js
(bad)
clc
out
pop
es
ss
jo
xor
mov
pushf
xchg
mov
aam
mov
std
xor
pop
dec
pushf
cmp
push
sahf
push
js
mov
sub
lods
fucomip
jno
pop
sub
pop
fidivr
jle
fsubr
or
test
movs
dec
mov
adc
jno
ds
push
jg
dec
and
and
sbb
inc
shr
in
add
(bad)
cli
loopne
and
ds
pop
loop
jmp
ds
jbe
mov
bound
aas
jns
(bad)
das
repnz
sbb
jno
pop
cmp
mov
or
mov
sahf
jmp
inc
sbb
push
cmp
mov
std
popa
xor
ret
sahf
or
outs
jl
fs
outs
jns
jp
inc
adc
cmp
fs
aas
mov
arpl
adc
(bad)
jge
sbb
out
jmp
in
and
mov
sub
sbb
cmp
xor
xor
sti
cmp
sar
out
cmp
jmp
pop
jno
push
test
sub
jl
jle
mov
shl
(bad)
mov
cmp
arpl
popf
sbb
int
mov
sbb
mov
fs
xchg
dec
mov
xor
push
push
pop
xor
fcom
das
or
jp
and
xchg
push
pop
push
(bad)
mov
out
aas
pop
enter
mov
inc
test
test
push
or
adc
xchg
adc
pushf
cmp
ret
inc
cld
out
popa
cli
pop
pop
popf
inc
push
ror
inc
dec
and
xor
imul
push
gs
jae
ja
jo
xchg
out
mov
fs
inc
and
sub
mov
gs
inc
push
out
fistp
data16
(bad)
les
cmp
mov
jl
mov
mov
jecxz
dec
push
rcr
cdq
into
or
iret
push
inc
aas
rcr
xchg
in
sar
repnz
je
loopne
or
and
adc
je
sbb
aad
mov
jbe
js
xor
cmp
jno
aam
mov
mov
or
xchg
icebp
popa
jns
cmp
fisttp
pop
pusha
dec
arpl
shl
jae
sbb
ins
pop
add
stos
jmp
dec
xor
lods
outs
or
mov
ss
jge
ins
mov
jl
scas
popf
movs
daa
jne
cdq
xor
pop
push
xchg
jo
add
jns
jecxz
shl
sub
add
ds
leave
jne
xchg
in
je
xor
aad
retf
mov
ret
pop
fcmovnbe
pop
dec
nop
or
inc
and
xor
out
scas
mov
and
push
jno
mov
ja
and
gs
cmp
inc
iret
jecxz
cwde
inc
cwde
inc
pusha
ret
lock
push
mov
pop
jge
pop
div
cmp
mov
adc
mov
js
mov
stc
cmp
jno
pusha
inc
jo
xor
call
mov
and
call
fs
sub
pop
and
jns
or
inc
xchg
jge
mov
adc
cmp
adc
cld
sbb
stos
ficomp
sub
dec
cmp
scas
jo
xchg
mov
mov
mov
xor
ins
int3
inc
cmp
cwde
pop
jmp
cld
add
ins
xor
add
and
and
mov
dec
or
in
pop
push
inc
jno
jns
out
fstp
cmp
xchg
pop
gs
xchg
jmp
outs
add
loop
pop
and
pushf
sub
ins
cmp
jns
inc
(bad)
mov
push
dec
inc
xchg
mov
retf
jecxz
gs
daa
mov
xor
scas
mov
cwde
and
cmp
sub
(bad)
test
es
ret
mov
cli
push
xchg
inc
mov
add
and
add
jae
dec
cmp
inc
jge
jg
je
jle
fbstp
fucomip
inc
mov
(bad)
cld
shl
(bad)
test
fs
mov
pop
pop
loop
arpl
aas
add
(bad)
mov
xor
mov
loopne
jg
mov
cmc
shl
inc
xchg
test
cdq
into
aad
cmps
fmul
int
mov
(bad)
(bad)
cmp
cmp
mov
xchg
test
cmp
paddsw
dec
mov
or
(bad)
popf
or
outs
loop
aaa
add
xlat
sub
jno
pop
jb
inc
xchg
push
and
pushf
cmps
dec
test
js
xchg
jmp
push
sbb
cld
ret
cmc
mov
cmp
jl
push
test
sti
call
outs
sub
push
out
xchg
xor
sbb
and
dec
jb
cmp
sub
mov
xchg
pop
xchg
add
sahf
or
in
sbb
js
data16
mov
sub
sub
mov
mov
pop
xchg
mov
(bad)
cmp
imul
jno
ret
fdiv
pop
scas
mov
mov
add
or
pusha
lods
add
sub
cmp
xchg
stc
and
mov
xor
daa
xor
xor
xor
popf
int
push
loopne
repnz
fcomp
mov
(bad)
stc
stos
jp
or
sub
(bad)
jns
and
int
out
and
and
xchg
adc
and
dec
dec
ds
imul
es
mov
inc
inc
not
jns
pop
jb
movs
adc
cmp
sbb
adc
popf
cld
cmp
mov
pop
ins
mov
in
rcl
loopne
mov
xor
xlat
aad
pop
call
pop
add
inc
adc
mov
or
inc
jge
adc
or
(bad)
ja
test
push
jge
cld
fs
das
in
inc
mov
or
and
mov
push
dec
inc
xchg
mov
and
and
fild
loopne
inc
dec
pop
xor
inc
add
mov
jl
imul
pop
enter
push
shr
dec
je
popa
add
loop
sbb
push
xchg
cwde
sbb
xor
pop
loop
sbb
sub
fwait
ret
dec
push
xchg
inc
xchg
les
or
das
loopne
inc
sub
or
or
outs
mov
jg
cmp
and
leave
ret
push
push
retf
movs
or
(bad)
jmp
xor
jl
aas
rcr
and
jns
inc
jnp
retf
add
out
sbb
arpl
pushf
and
clc
mov
mov
adc
loop
fild
(bad)
cmp
(bad)
movs
fild
test
js
cmc
sbb
shl
and
cmps
and
dec
and
push
ins
inc
pop
xchg
iret
jne
inc
fst
retf
(bad)
or
sbb
push
ret
cmp
(bad)
(bad)
inc
jg
clc
int
pop
fs
push
and
aas
arpl
mov
cmp
jnp
mov
xchg
or
xor
inc
(bad)
push
pop
mov
repz
sub
xor
fld
xchg
std
retf
scas
dec
jae
out
sub
out
jb
jp
lods
push
stos
sub
xchg
scas
bound
mov
ret
inc
xor
mov
mov
and
pop
jns
push
jns
push
mov
jno
push
xchg
idiv
pop
pop
bnd
cli
fistp
into
cld
stos
out
adc
jnp
out
mov
cld
cmp
aam
push
repnz
adc
arpl
cld
leave
mov
jg
js
sub
push
mov
int3
out
fild
jl
inc
pusha
es
or
cmp
nop
sbb
pop
xor
pop
fild
mov
mov
int
jae
xor
push
(bad)
jl
xchg
(bad)
sar
les
(bad)
into
idiv
scas
mul
jno
pop
mov
leave
and
push
xor
or
push
xor
(bad)
dec
jns
jno
dec
push
out
add
adc
aaa
clc
xor
out
or
or
aas
(bad)
lds
aad
jmp
ss
jns
out
cmp
mov
enter
nop
sbb
mov
bound
sbb
or
loope
sar
jae
addr16
cmp
jno
mov
xchg
aas
mul
mov
adc
sub
bound
mov
mov
pop
fadd
jge
sbb
or
(bad)
in
jmp
cld
repnz
inc
jmp
fild
jl
sbb
jno
repnz
mov
fucomp
pop
cdq
or
pop
xchg
fild
xor
(bad)
push
inc
jge
pop
stos
(bad)
(bad)
pushf
inc
in
cmp
jbe
and
sahf
loopne
ins
out
out
and
not
mov
push
cmp
and
movs
pop
mov
je
push
jmp
int3
(bad)
loopne
loopne
dec
fcmovu
push
es
cmp
(bad)
sbb
mov
jecxz
sbb
aas
mov
adc
mov
shl
js
mov
imul
or
cmp
mov
mov
fidivr
idiv
pusha
aas
out
jmp
fsubr
movs
mov
jne
mov
test
xchg
js
inc
in
jne
ds
cli
jge
sti
add
ins
pusha
inc
and
sub
iret
and
xor
std
dec
jno
or
js
and
loope
pop
xor
idiv
or
outs
aas
cmp
xchg
sbb
inc
mov
jmp
ret
pop
aam
gs
mov
cmp
(bad)
shr
in
push
in
dec
mov
xchg
jmp
dec
sbb
sbb
lahf
push
sub
call
test
jns
mov
xor
push
mov
jmp
cli
dec
cmp
ds
(bad)
stc
(bad)
push
cmps
adc
sbb
fs
sar
cld
cmp
cmp
lods
jno
adc
test
sbb
pop
es
mov
push
pop
jae
lahf
jae
mov
jns
repz
inc
cs
pop
inc
aas
addr16
or
aas
rcl
out
xchg
popf
xchg
mov
sahf
hlt
out
test
add
dec
pushf
mov
xlat
or
fwait
mov
or
push
stos
leave
xor
pop
xor
icebp
ds
je
loopne
jno
(bad)
jo
sti
out
sub
mov
int3
add
in
enter
push
or
rcl
inc
push
mov
inc
daa
adc
jg
add
addr16
jae
ja
jp
jp
outs
inc
test
mov
inc
addr16
lods
dec
je
push
inc
das
or
stc
and
inc
call
imul
repnz
mov
sbb
inc
sub
loope
pop
mov
and
aaa
movs
dec
pop
jle
jle
jbe
cmp
std
mov
dec
xchg
mov
xor
jle
adc
arpl
add
and
hlt
sar
lahf
or
ret
lds
out
cs
dec
mov
jno
inc
cmp
stos
xor
mov
inc
into
fxch
rcl
jb
ret
inc
adc
dec
and
add
ficomp
mov
aaa
sbb
dec
fld
add
fwait
sub
inc
mov
pop
les
loopne
ficom
retf
(bad)
mov
cmp
mov
jmp
sbb
addr16
xchg
data16
rol
sbb
adc
sar
loopne
fidivr
pop
mov
jbe
in
call
mov
pusha
adc
sbb
mov
scas
jl
mov
cmp
cmp
sub
js
xchg
fadd
test
cs
xchg
cmp
popa
mov
es
imul
jne
jp
mov
pop
jno
(bad)
cmp
or
outs
adc
inc
std
je
xchg
aaa
jg
pop
xlat
pop
sub
push
mov
js
(bad)
aam
sub
cmp
icebp
mov
nop
and
xor
sbb
iret
mov
ins
lods
fwait
mov
and
xor
repz
pop
mov
jns
into
mov
hlt
pop
jbe
jmp
pop
dec
cmp
xlat
dec
jmp
in
push
pusha
js
mov
into
mov
shl
dec
neg
push
or
pop
jecxz
lock
xor
xchg
call
dec
lds
pop
leave
es
lock
xor
bound
and
cmp
icebp
fisubr
fcom
rcr
jno
mul
sbb
nop
in
adc
lods
sbb
pop
outs
fmul
movs
push
inc
(bad)
mov
call
arpl
shl
mov
in
and
ss
outs
xchg
stc
je
ret
pushw
pop
push
shl
cmp
adc
movs
mov
popa
inc
mov
sub
jle
out
dec
fsubp
repz
aaa
popa
outs
lods
loope
(bad)
ins
jl
jno
(bad)
xor
popf
dec
cmp
cmps
fisub
add
lods
jno
scas
xchg
push
out
repnz
inc
sub
jns
bound
mov
sub
mov
fild
call
fcom
push
sbb
idiv
or
loope
xchg
lea
cmovle
pop
push
xor
fstp
stos
dec
jns
sbb
push
push
add
push
sub
repnz
jnp
push
xor
arpl
jns
push
sub
(bad)
xchg
leave
aam
mov
imul
mov
and
xchg
pop
out
jmp
push
mov
mov
sbb
mov
repnz
mov
shl
mov
cld
jle
call
int3
mov
sti
mov
rcl
or
inc
and
cmp
push
and
cmp
or
jo
sub
scas
pop
ror
rcl
and
cmps
dec
or
cmp
movs
mov
lods
lods
mov
stc
push
loopne
xchg
inc
xchg
sbb
or
pop
cs
lea
pop
aas
xchg
or
and
add
cmp
sub
xchg
dec
jl
imul
push
mov
outs
iret
and
xchg
test
scas
ins
mov
inc
inc
and
loope
dec
cmps
cmp
sbb
xor
test
mov
xchg
femms
inc
(bad)
mov
add
add
add
cmp
inc
xchg
jecxz
dec
loopne
mov
out
add
inc
(bad)
fldcw
mov
xor
repz
sbb
mov
sub
jns
outs
add
es
fst
scas
cmp
lahf
adc
je
jns
shr
mov
rol
mov
cmps
jbe
les
sub
mov
mov
jp
sub
sar
fs
cmp
or
mov
stc
mov
ret
and
jbe
jb
dec
xor
fsubr
repz
inc
mov
and
jno
cmovnp
jns
mov
mov
dec
fist
and
cmp
aad
xchg
push
popa
sub
inc
mov
dec
dec
cmps
jo
sub
dec
add
arpl
rcl
inc
iret
fmul
ffreep
fyl2xp1
int
fmul
fnsave
mov
das
sub
rcr
mov
jno
inc
daa
lds
xor
mov
js
mov
mov
movs
dec
inc
stos
outs
sub
sub
adc
movs
cmp
pop
xchg
sbb
and
xchg
nop
mov
push
push
imul
or
dec
xor
(bad)
ds
xchg
push
adc
mov
inc
(bad)
fcomp
xor
rol
mov
aas
cmps
and
repnz
cmp
and
push
inc
aas
jae
mov
aaa
add
(bad)
cwde
add
mov
xchg
out
sub
cli
or
(bad)
int
mov
cmc
ret
(bad)
lds
xlat
mov
jb
scas
jo
pop
test
cli
in
ja
sub
pushf
(bad)
inc
cli
into
fld
inc
loopne
jns
push
cmp
dec
inc
rcr
jmp
nop
sbb
mov
adc
push
or
mov
arpl
and
in
nop
add
out
sub
dec
cmc
cld
lds
push
sbb
cmp
stos
add
and
pop
lahf
iret
aaa
cmps
cld
sbb
jo
fnstenv
mov
and
xchg
std
mov
je
mov
je
sbb
shr
jge
cmp
stos
out
sub
lahf
dec
into
pushf
das
sbb
cmp
aas
dec
jge
cld
mov
sbb
idiv
jmp
les
cmp
inc
sub
mov
sbb
popf
inc
mov
mov
or
pop
js
pop
mov
sbb
add
jge
rcr
jecxz
mov
cs
(bad)
out
jp
sahf
sbb
inc
aam
test
jg
cmp
push
ficomp
pusha
ret
shr
imul
lea
retf
pop
sbb
mov
mov
sub
or
mov
aad
add
call
cmp
push
je
mov
sub
add
xchg
je
(bad)
or
xor
(bad)
push
mov
ror
pop
ss
ds
hlt
repz
inc
add
leave
cli
mov
xor
dec
jge
jb
and
jnp
adc
out
rcr
shl
inc
sbb
cmc
imul
adc
data16
mov
inc
out
xor
(bad)
adc
outs
test
push
(bad)
sti
sar
or
xchg
xor
(bad)
std
aas
add
movs
mov
inc
push
pop
fs
dec
push
stos
xor
test
and
xor
mov
(bad)
adc
pushf
pop
dec
dec
stos
inc
jg
or
fidiv
pop
lock
jno
rep
push
cmc
popa
cld
outs
and
push
jo
adc
sbb
add
pusha
iret
repnz
scas
inc
xor
adc
test
jl
jne
ss
rcr
push
xor
in
test
jecxz
add
sub
push
jmp
rcr
pop
and
aam
(bad)
rol
out
mov
jg
into
jmp
xor
ja
cmp
push
(bad)
xchg
fsubr
out
mov
popa
inc
aaa
xchg
pusha
fadd
cld
fcomp
cmp
mov
xor
mov
mov
(bad)
leave
sub
pop
outs
ds
dec
into
dec
enter
xchg
and
lock
add
cmp
adc
and
(bad)
addr16
mov
getsec
xlat
fsubr
xor
fs
popf
into
add
add
mov
arpl
mov
sbb
fdivr
je
mov
push
or
clc
push
mov
bound
rol
outs
jmp
jmp
sbb
push
mov
xchg
jno
add
icebp
add
or
and
and
movs
xchg
adc
div
add
and
cld
fidivr
lods
sub
fstp
mov
leave
pop
sahf
dec
lods
and
test
sub
adc
adc
sub
cmp
(bad)
icebp
and
sub
loop
int3
push
jmp
cmc
push
sbb
shl
pop
in
jns
fdivr
jne
inc
jp
mov
inc
mov
into
inc
ror
jae
xor
jo
mov
xchg
jge
arpl
push
pop
dec
jb
or
loopne
adc
or
cmp
dec
xor
and
js
jb
jno
pop
es
in
mov
cld
sbb
xor
out
xor
lods
and
sub
adc
and
push
cmp
cld
pop
aam
scas
fdiv
sbb
test
add
push
mov
xchg
push
inc
rcl
sub
or
adc
mov
xor
cmp
sub
or
das
mov
retf
hlt
out
sub
sbb
pushf
fistp
jge
inc
daa
pop
test
(bad)
adc
push
test
add
push
std
pusha
mov
dec
(bad)
int
and
sbb
repnz
cmp
movs
fild
jp
pop
dec
add
sub
or
sbb
rol
neg
(bad)
ror
sub
iret
xlat
mov
aaa
bnd
mov
ftst
test
pop
xor
fadd
loop
popa
sub
shl
popf
ret
push
pop
mov
inc
inc
out
inc
mov
int3
cmps
xor
sar
mov
into
std
in
bound
inc
rcr
xchg
es
inc
pop
mov
xchg
fisubr
adc
xchg
lods
imul
adc
mov
dec
pop
arpl
cmp
cmp
int3
pop
es
inc
cmp
sub
stc
cmp
mov
cmp
sbb
push
stos
fwait
outs
cmp
int
enter
or
inc
xchg
mov
inc
cmps
popa
mov
imul
dec
enter
add
test
inc
adc
xchg
inc
add
jmp
xchg
sub
adc
test
cmp
ror
xchg
adc
pushf
mov
inc
adc
cmp
push
loop
out
repz
shr
movs
sbb
sub
cmp
test
test
(bad)
push
push
pop
dec
fcomip
lods
retf
inc
xchg
enter
and
xlat
jae
ins
stos
call
arpl
cld
sbb
popf
lods
mov
inc
sub
(bad)
idiv
cmp
jmp
push
jns
(bad)
fsub
mov
mov
inc
fs
mov
mul
jle
inc
mov
inc
fstp
test
mov
js
and
retf
inc
sub
inc
jo
lds
sub
jecxz
clc
(bad)
xor
cmp
inc
inc
cmp
stos
ds
loopne
or
into
dec
adc
or
mov
mul
(bad)
jl
dec
push
dec
jge
aas
cmc
jmp
popa
movs
rol
cmp
in
data16
cmc
dec
mov
inc
jmp
daa
out
leave
not
sub
aas
dec
movs
cmps
inc
jne
std
mov
jle
pop
aaa
nop
inc
adc
callw
div
xor
add
dec
inc
jg
outs
js
xchg
repz
inc
or
ins
sbb
aam
inc
add
mov
jge
nop
cmc
dec
jecxz
xchg
xlat
xlat
js
data16
adc
pop
jns
sub
ss
aad
inc
and
lds
sbb
inc
aas
fucom
push
mov
fs
fsubrp
inc
rcr
fiadd
lahf
sti
mov
sahf
xchg
adc
pop
dec
or
bound
sbb
cli
sbb
adc
lock
stc
fwait
xor
sar
pusha
ja
mov
mov
not
jns
stos
rcl
xor
adc
inc
sub
mov
into
and
xchg
xor
cmp
es
cmps
aas
cmp
scas
fs
jnp
mov
ss
cmp
stos
sub
push
ret
jnp
sbb
mov
dec
loopne
call
jns
je
jmp
cmp
loopne
ret
jno
mov
mov
mov
call
lods
out
jb
fs
jg
sbb
push
pop
xor
mov
jge
jmp
imul
loope
dec
pop
mov
lods
and
test
xor
jl
or
popf
jno
test
jns
jmp
jge
push
or
mov
fdiv
jns
add
lds
shl
dec
cmp
ficomp
fs
xchg
mov
ins
cmp
aam
fnsave
adc
inc
ins
lods
dec
fst
or
aas
sub
sub
inc
pop
xchg
push
inc
addr16
pushf
sub
test
mov
cwde
cs
retf
or
jmp
xchg
dec
lea
loopne
jb
inc
(bad)
outs
pop
fldenv
dec
mov
inc
mov
and
cwde
add
(bad)
mov
in
push
xor
inc
out
je
rcl
cmp
inc
jg
loope
fisttp
push
cdq
(bad)
enter
cwde
mov
imul
pop
fwait
cmp
icebp
adc
loopne
iret
sub
push
xchg
stos
push
push
imul
jg
fadd
push
jle
ins
push
cmp
stc
fucomip
int3
cmp
inc
mov
fwait
dec
inc
(bad)
(bad)
mov
stos
nop
sub
or
pushf
push
mov
sub
add
add
aas
sub
bound
inc
cmp
inc
icebp
xchg
cwde
and
add
inc
(bad)
xor
mov
imul
sbb
inc
jne
xor
or
inc
jecxz
pushf
mov
stos
lods
mov
pop
inc
inc
sti
clc
rol
(bad)
fld
mov
out
inc
sti
fcmovu
pop
sbb
ins
adc
dec
mov
movs
call
fld
jae
in
xor
cmps
hlt
inc
sbb
jo
fild
add
inc
mov
cmps
jecxz
mov
dec
movs
jp
bound
pop
inc
in
mov
cmps
jno
gs
cld
lods
addr16
pop
mov
scas
inc
jo
in
dec
push
dec
or
cmp
fldz
test
pop
idiv
test
push
add
xchg
add
addr16
int3
mov
pop
or
xchg
and
add
dec
sti
dec
mov
les
aam
xor
sbb
lock
cmp
xor
retf
data16
stc
std
je
sbb
(bad)
push
(bad)
pop
ds
cmc
xchg
jo
into
ret
js
adc
mov
sbb
mov
retf
xchg
or
push
jo
ret
pushf
(bad)
pushf
hlt
ss
in
(bad)
fld
sub
inc
call
cmp
sub
daa
fild
aam
int
push
lods
inc
pop
mov
in
mov
out
imul
sbb
pop
xchg
inc
xor
in
push
dec
dec
or
shl
popa
add
xchg
call
xchg
data16
mov
jmp
fidivr
pop
jns
test
inc
and
cmps
inc
js
shl
xor
sbb
push
in
cmp
mov
ror
in
inc
fcom
mov
and
inc
or
push
mov
js
cmp
cld
mov
rol
cmp
(bad)
mov
adc
xor
in
sub
mov
push
or
fisttp
jbe
push
push
mov
repz
out
mov
cmp
xor
pop
adc
leave
ficomp
pop
push
inc
and
ins
inc
jle
fs
aam
rol
pop
fwait
test
pop
fistp
inc
shl
and
jne
cmp
mov
sbb
bound
ss
inc
test
pop
xor
nop
popf
add
add
cmp
push
inc
fcomp
fwait
push
sar
xchg
pop
rep
cmp
addr16
jg
js
in
stc
sbb
fnstsw
jge
jmp
addr16
jnp
push
pusha
dec
cwde
mov
cmp
hlt
shl
mov
push
clc
or
push
mov
jne
scas
sub
add
sbb
mov
hlt
cmps
jns
jmp
ret
shr
inc
imul
mov
cmp
les
int3
jno
(bad)
ja
aam
fadd
icebp
fimul
rcl
adc
ret
mov
or
and
jmp
jo
or
push
and
mov
scas
enter
and
mov
mov
mov
and
sti
test
and
out
cmp
cmps
jge
pop
mov
test
retf
dec
call
mov
daa
lahf
jno
cmp
(bad)
imul
add
aas
inc
sub
fdivr
fistp
shl
hlt
ja
in
je
movs
and
out
aaa
dec
fdivr
(bad)
mov
jge
sbb
mov
sbb
test
stos
cmp
js
add
ret
pop
mov
mov
push
mov
xor
(bad)
loop
and
daa
mov
xor
into
test
out
aad
ins
pop
add
je
stos
xor
mov
cmp
xchg
div
out
mov
sbb
lods
push
or
xchg
push
push
mov
sbb
mov
mov
(bad)
cmp
sbb
or
xor
popf
jb
dec
cmp
dec
add
ds
test
inc
js
pop
jmp
dec
jnp
test
cmp
jo
mov
lds
push
dec
mov
cmp
and
inc
lods
mov
pop
or
dec
jle
ret
dec
and
cmp
lods
sti
ja
fild
dec
cld
adc
(bad)
dec
outs
pop
sahf
stos
pop
or
or
or
inc
jl
cld
xchg
(bad)
retf
enter
cmp
push
mov
pop
pop
add
pusha
or
ds
pop
and
mov
pop
inc
rcl
xor
cmp
or
add
inc
pushf
shl
xor
fs
cmp
and
jle
mov
xchg
mov
adc
cmc
data16
hlt
push
mov
xor
mov
mov
sti
iret
rcl
int
test
clc
sub
jno
mov
fld
cmp
add
sub
addr16
jle
ja
sub
xchg
inc
or
shl
inc
push
inc
test
add
sbb
stc
inc
xchg
mov
aaa
rol
pusha
mov
adc
add
popf
mov
inc
pushf
xlat
rcl
std
inc
inc
sub
fstp
cs
mov
mov
je
pop
cmp
push
sbb
mov
inc
jl
mov
enter
stc
push
jb
leave
loopne
and
js
iret
and
cwde
cmp
xchg
push
dec
push
mov
sbb
cmp
bound
sub
dec
(bad)
les
ins
jmp
sbb
loope
jno
sub
mov
inc
je
cmp
rcr
mov
sbb
(bad)
cmp
js
cmp
cmc
in
cmp
mov
(bad)
clc
iret
inc
cmps
mov
dec
mov
adc
xchg
scas
pop
mov
ins
mov
inc
adc
pop
stc
icebp
stc
das
inc
sbb
scas
inc
inc
dec
rcr
xchg
push
adc
test
mov
iret
xor
pop
popf
mov
mov
ds
add
sub
stos
inc
inc
push
xor
inc
and
aaa
adc
pop
aam
pop
push
and
inc
js
jge
imul
xchg
inc
mov
or
sub
(bad)
mov
je
div
pop
cmc
lea
cmp
mov
out
xor
mov
inc
add
in
mov
sahf
pop
jo
xor
lods
lahf
std
bound
push
mov
clc
jno
cmp
ret
das
push
repnz
movs
hlt
xor
outs
je
cmp
or
(bad)
not
sub
jmp
arpl
mov
mov
imul
and
das
jl
jno
push
retf
shl
sahf
mov
loop
cli
push
out
hlt
in
add
jecxz
lahf
pop
popa
push
or
and
out
fstp
pop
pop
xchg
gs
into
lock
(bad)
sar
jbe
xor
or
dec
pop
jb
cs
pop
cmp
xchg
adc
xor
imul
pop
ins
cmp
pop
test
and
adc
cwde
leave
or
push
imul
ret
push
leave
push
sub
pop
jmp
cli
inc
mov
xchg
stos
mov
mov
sub
or
ss
fwait
je
arpl
mov
ins
mov
int
leave
cmp
out
dec
mov
(bad)
inc
add
add
dec
stos
inc
pop
mov
lds
pop
addr16
mov
mov
dec
js
dec
xlat
mov
loope
loope
cmp
mov
addr16
arpl
ret
add
jo
out
sbb
stos
mov
ds
and
and
or
add
cmp
out
iret
clc
gs
js
jb
rcl
xor
adc
sub
sub
std
stos
xchg
push
jns
cli
sbb
mul
push
add
data16
sbb
or
pmulhuw
pop
push
shr
adc
sub
dec
sub
js
cmp
mov
movs
js
shl
lahf
push
jae
jns
sbb
pop
add
and
retf
xlat
shl
jae
inc
in
sbb
pop
push
fdivr
jns
adc
(bad)
rcr
inc
cmp
add
pop
fbstp
pop
fxch
inc
mov
fcom
jb
sub
push
jns
pop
mov
mov
jmp
adc
mov
dec
cmp
jns
and
sbb
mov
pop
fldcw
and
das
fdivr
(bad)
not
ja
inc
cmp
stc
fnstsw
jno
lds
jo
retf
aas
test
in
cmp
sbb
rcl
ror
lahf
xchg
jns
outs
xchg
popf
ds
sbb
rcl
inc
dec
std
push
mov
cmp
rcr
(bad)
sbb
xchg
les
inc
xor
or
imul
sbb
fwait
xor
loope
xchg
inc
adc
icebp
xor
lds
mov
sub
js
jo
cmc
push
adc
mov
ds
jge
inc
imul
adc
es
les
lods
test
popf
jns
js
test
imul
jbe
jg
loopne
stos
out
loopne
sbb
outs
(bad)
les
xor
cmp
das
test
into
sub
xchg
shl
mov
retf
inc
xchg
loope
xchg
ret
and
xor
pcmpgtb
pusha
cmp
mov
cdq
jno
and
xor
push
call
jmp
jno
rol
jbe
loope
stc
xor
pusha
add
inc
mov
stc
jbe
mov
in
push
xor
jno
push
push
inc
ss
adc
icebp
mov
sti
in
add
rcr
jecxz
and
add
loopne
std
or
fnsave
adc
(bad)
fldlg2
and
mov
jno
(bad)
sbb
cmp
adc
xor
and
ins
ja
xchg
jae
push
cmc
xor
leave
jno
push
inc
jl
sbb
mov
jno
sahf
cmp
xor
and
mov
jmp
js
mov
inc
popf
and
add
inc
xlat
or
shr
fistp
les
mov
(bad)
push
or
jp
es
aad
pop
lods
or
imul
cmp
test
fmul
es
or
jge
dec
jmp
fucomip
push
fsub
in
cs
(bad)
push
stc
cli
test
adc
jb
mov
rcr
dec
call
aas
pusha
retf
pop
pop
mov
in
pop
imul
xchg
pop
inc
push
sbb
pushaw
push
jb
dec
mov
fistp
pop
mov
stos
xchg
push
(bad)
fst
xchg
je
inc
icebp
xchg
jge
jmp
xchg
js
ins
and
fidivr
cmp
ds
or
mov
xchg
fs
cmp
sbb
jge
jns
pop
jns
and
push
mov
and
inc
cdq
retf
mov
sbb
(bad)
js
push
cdq
and
xor
adc
dec
mov
xchg
fst
sub
repz
into
jns
mov
sbb
sar
(bad)
dec
scas
movs
jecxz
push
data16
adc
jne
ins
(bad)
dec
mov
cmp
fstp
jno
sub
aaa
mov
mov
mov
inc
jl
dec
loopne
sahf
jl
ins
ror
sbb
sub
and
sbb
cs
aaa
lea
push
and
dec
aad
xor
mov
mov
int3
jae
add
shr
xor
xchg
in
mov
and
js
add
mov
push
dec
popf
cmp
push
or
inc
aas
into
jno
es
mov
add
jmp
(bad)
(bad)
inc
fcmovne
aam
fmul
lock
adc
cmp
lods
mov
inc
loop
dec
jg
pop
cmps
mov
(bad)
aas
xor
hlt
call
adc
inc
mov
shl
jle
stos
lds
(bad)
repz
rcl
daa
mov
dec
clc
inc
push
mov
pop
cmp
add
cmp
call
lods
add
xor
out
inc
lea
scas
cwde
push
retf
shl
call
and
mov
mov
sar
mov
mov
xchg
cmps
aaa
mov
les
mov
jno
test
repnz
pop
dec
sar
cmp
mov
adc
clc
dec
div
dec
inc
dec
bound
pop
test
int3
(bad)
and
jg
(bad)
jp
es
cmps
push
fistp
dec
jmp
fsubrp
mov
cmp
daa
stc
or
jno
xchg
inc
mov
call
out
je
leave
ficomp
xor
repnz
cmp
sbb
fadd
(bad)
push
lahf
nop
adc
jg
cmp
xchg
pop
loop
and
inc
add
sti
pusha
cmc
fisttp
inc
lahf
mov
movs
sbb
fild
or
call
repnz
push
cld
cmp
hlt
xor
push
sbb
pop
inc
cmp
icebp
loop
mov
mov
sbb
std
pop
(bad)
sti
push
inc
mov
pop
inc
dec
or
ret
loope
xor
push
lds
aad
add
cmp
or
and
mov
xor
mov
mov
xchg
sbb
rcl
inc
sub
(bad)
or
repnz
mov
or
xchg
or
ds
aam
mov
int
push
add
xchg
shl
push
push
or
pop
and
call
(bad)
inc
xor
jecxz
lds
inc
jge
pop
out
outs
dec
jae
push
pop
jl
cmp
ss
mov
mov
adc
mov
stos
adc
and
cli
in
xor
std
sbb
loop
sub
fs
jne
or
test
fiadd
mov
jnp
adc
and
fld
inc
ins
das
add
out
jo
sub
jmp
ins
inc
idiv
mov
inc
inc
sub
dec
and
xor
xchg
xor
into
inc
sub
fcomp
or
sbb
inc
xor
leave
pop
sbb
dec
dec
inc
das
test
(bad)
cmc
add
cdq
mov
fisttp
cmps
pop
pusha
fadd
dec
dec
movs
inc
bound
mov
repz
jb
clc
jle
inc
push
jl
push
outs
rol
icebp
in
inc
hlt
mov
push
xchg
jp
invd
sub
iret
cmc
add
mov
pushf
push
adc
retf
mov
xchg
xchg
dec
push
dec
in
mov
loopne
inc
ds
retf
pop
mov
or
stos
int
test
sbb
inc
pop
fwait
lods
xor
movs
cmp
fsubr
imul
ds
pop
(bad)
push
cmp
mov
pop
movs
cwde
aam
adc
add
pop
out
inc
std
fimul
cmps
push
sub
jecxz
loopne
aaa
test
xor
inc
inc
inc
push
dec
hlt
push
and
sub
mov
ror
and
mov
xor
sar
fisttp
adc
cmp
adc
inc
pusha
jg
js
cmp
dec
imul
inc
add
repnz
sbb
scas
je
inc
and
retf
fistp
inc
push
mov
imul
mov
aam
cmps
js
inc
and
jg
(bad)
dec
mov
inc
adc
invd
int
movs
scas
cmp
aam
mov
and
aad
inc
movs
adc
daa
(bad)
mov
ret
hlt
or
retf
addr16
imul
rcl
arpl
cmp
test
jp
aas
inc
cld
iret
fimul
mov
dec
inc
pop
sbb
sub
adc
and
movs
inc
gs
cmp
jg
push
sub
shr
cmp
push
push
and
call
fsubrp
scas
ins
push
mov
dec
push
les
cmp
cmp
inc
push
sbb
jg
sbb
adc
sub
retf
or
push
and
xchg
fiadd
mov
div
out
mov
mov
sub
add
test
(bad)
sub
xor
push
pop
push
std
jecxz
pop
js
xchg
lods
pop
fisubr
inc
ret
add
mov
test
mov
mov
das
addr16
lahf
je
cli
hlt
shrd
inc
pop
jo
push
int3
scas
inc
mov
xchg
pop
in
push
into
and
cmp
adc
inc
in
pop
or
and
mov
jle
add
aam
jmp
(bad)
dec
pusha
inc
ds
clc
ret
fsubr
xchg
push
dec
push
push
popa
ds
mov
test
pop
inc
(bad)
mov
jnp
dec
pop
dec
mov
js
sbb
mov
push
out
aad
test
test
mov
mov
vprotb
cmps
inc
inc
out
push
or
popf
sahf
cs
xchg
jp
pop
cmp
inc
ja
(bad)
icebp
lds
adc
pushw
and
xor
dec
inc
push
jge
cmp
pop
jne
inc
jb
mov
cmp
inc
popf
mov
scas
pop
jnp
sub
rcr
lods
loope
fsubr
mov
ror
les
mov
push
cmp
pop
ins
sbb
add
int
outs
jbe
push
cli
dec
(bad)
sub
nop
cmp
cmp
jg
xchg
push
pop
xor
xor
nop
int3
ret
clc
gs
cmps
cmp
popf
mov
xchg
cdq
movs
pop
das
pusha
into
cmp
cmps
xchg
xchg
mov
jmp
xchg
test
in
aad
mov
(bad)
xor
push
shl
mov
cmp
jo
lods
jbe
mov
test
push
jmp
icebp
ds
or
inc
jo
mov
dec
inc
out
cs
sbb
cmc
shl
mov
stc
or
pushf
pop
cmp
dec
pop
retf
fidivr
ret
xor
cmc
rcr
sub
mov
lock
jp
push
cmp
dec
aad
sub
cmp
adc
scas
mov
mov
dec
enter
shl
sbb
test
(bad)
mov
rol
lods
xchg
mov
dec
and
mov
into
cmp
sub
(bad)
xchg
push
popa
stc
push
punpckldq
dec
xor
cmc
add
mov
sbb
call
arpl
pop
imul
icebp
in
das
inc
lahf
sub
cmp
out
ret
cmps
or
add
sub
popa
out
icebp
mov
nop
jmp
mov
push
loop
aam
loopne
xchg
jg
xchg
cmp
inc
push
sbb
pop
jne
push
cmp
add
pop
sti
mov
inc
sar
inc
fwait
into
or
aas
sti
dec
inc
jl
leave
add
lods
outs
pop
inc
inc
aad
fiadd
fldcw
dec
mov
inc
push
in
sub
or
(bad)
xchg
cmp
mov
int
push
test
jle
jge
cli
push
mov
repnz
cmp
arpl
fidiv
cmps
int
mov
mov
cli
mov
icebp
int3
out
mov
mov
dec
data16
cmp
sti
gs
push
lds
js
repz
(bad)
jns
sti
out
push
jp
pop
inc
dec
loopne
push
sbb
sub
pop
mov
and
(bad)
mov
and
fdivr
jp
rcl
mov
push
and
jo
test
sbb
sub
ins
fcom
cmp
adc
or
adc
movs
fwait
les
jecxz
dec
push
cs
push
sub
push
inc
fcomip
adc
inc
push
js
inc
imul
les
or
fxch
jecxz
inc
inc
fisubr
dec
cmp
cdq
test
(bad)
out
push
sahf
punpckhdq
mov
xchg
out
iret
lods
mov
ins
push
xor
xchg
inc
shl
ds
sub
cmp
inc
(bad)
inc
and
fcom
jne
popf
inc
mov
jle
inc
push
mov
pop
clc
add
ret
call
inc
dec
jae
leave
frstor
jl
inc
inc
push
bswap
mov
sbb
mov
call
inc
int
mov
xlat
popa
and
and
ins
ret
sbb
mov
fimul
sbb
inc
nop
cmp
(bad)
mov
inc
ret
inc
out
cdq
pop
dec
xor
xor
cmp
pushf
scas
sahf
je
inc
(bad)
nop
or
jo
sub
lock
cmp
test
scas
sar
in
movs
inc
pop
sahf
mov
test
add
push
xchg
(bad)
sub
inc
and
cmovae
push
inc
ret
in
sbb
repz
add
mov
mov
popa
push
data16
fiadd
scas
inc
mov
and
rol
push
xor
inc
sbb
mov
or
sbb
cmp
gs
ret
sub
ror
mov
ficom
adc
pop
in
(bad)
sub
push
aam
shl
fnsave
xor
in
adc
je
adc
jle
jns
xor
mov
inc
loope
outs
mov
pop
iret
fs
jae
mov
test
sub
push
loopne
or
mov
sbb
cli
xchg
mov
cmp
cmp
adc
or
jp
adc
cmp
lock
sti
inc
mov
xchg
push
retf
inc
add
mov
mov
mov
aaa
mov
stc
xor
or
xor
popf
sub
or
xchg
ja
push
and
and
(bad)
fsubr
enter
out
sub
repnz
cmp
cmp
dec
push
inc
add
xor
fs
pushf
add
cli
test
mov
lds
ret
pop
and
cmps
or
sar
test
ins
lock
stos
rcl
mov
inc
mov
pop
push
ret
cli
mov
in
fadd
pop
jno
out
add
mov
mul
rol
fstp
jnp
call
dec
mov
jp
mov
xor
inc
adc
test
inc
stos
ret
add
or
push
cmp
cmp
and
mov
mov
inc
iret
cdq
mov
jg
mov
popf
add
cmp
out
cmps
dec
retf
stc
push
xor
xchg
(bad)
imul
in
cmps
cmp
(bad)
fdiv
xor
gs
mov
(bad)
dec
cs
aaa
call
fsubr
inc
mov
sub
(bad)
call
xor
pop
cmp
dec
and
push
data16
aas
scas
fiadd
and
push
movs
cwde
stos
xchg
es
icebp
jb
push
pop
pushf
pop
sub
cmp
mov
jp
int
add
stos
shl
and
in
xchg
jnp
mov
dec
cmps
imul
sbb
cmp
sub
and
(bad)
(bad)
dec
mov
push
test
lods
sub
aas
lds
add
mov
jns
xchg
sti
adc
adc
pop
xchg
mov
dec
test
inc
add
pop
add
loopne
ror
mov
inc
push
dec
push
inc
inc
pop
push
pusha
inc
pop
(bad)
mov
and
mov
(bad)
ins
imul
or
pop
xchg
dec
out
iret
loopne
dec
pusha
ins
add
push
call
mov
mov
inc
inc
jg
xlat
int3
add
and
sub
imul
lds
push
lahf
cmp
cmps
and
pusha
sbb
loope
and
out
in
js
inc
ins
inc
out
(bad)
adc
xchg
stos
jmp
or
pop
stos
sub
or
and
scas
pushf
mov
test
dec
arpl
inc
cld
xor
rcl
imul
sbb
arpl
stos
and
inc
es
mov
enter
sub
bswap
repnz
xlat
sahf
in
xor
jg
jmp
(bad)
stc
mov
imul
inc
mov
adc
test
xor
jle
xor
mov
and
bound
inc
sbb
xchg
push
sbb
iret
push
push
pop
pop
in
aaa
sub
cmp
or
fbld
mov
cmp
ret
inc
shl
int3
repnz
ja
retf
and
mov
push
push
sbb
repnz
je
ror
mov
scas
xor
or
mov
fcmovne
sub
inc
mov
add
fisubr
pusha
fnsetpm(287
shl
lea
adc
jns
inc
(bad)
xor
inc
dec
outs
push
vpsubusw
mov
js
pop
out
mov
mov
movs
fimul
jl
fisttp
loopne
fimul
push
loopne
pop
fwait
stos
outs
and
aas
mov
(bad)
out
cmps
test
mov
hlt
fmul
idiv
ret
jp
jge
ss
lods
add
jg
pusha
fist
mov
cli
mov
test
jns
mov
xchg
xor
push
pusha
mov
dec
mov
mov
inc
fidiv
in
jno
mov
push
xor
(bad)
sub
pop
ss
retf
xor
cmp
xchg
push
lea
stos
pop
hlt
hlt
sbb
or
xor
jb
inc
pushf
jge
retf
xchg
cmp
mov
int3
add
fidiv
in
fucomp
mov
jnp
push
loope
and
scas
sub
aas
xor
or
out
test
push
xor
nop
jns
call
ror
xchg
mov
mov
sub
mul
or
pop
popa
mov
adc
add
sbb
jecxz
daa
jns
pop
mov
icebp
lods
inc
jle
mov
xchg
int
les
jns
cmp
jnp
adc
data16
jns
(bad)
out
fs
mov
retf
pop
cmp
cmp
xchg
cmp
sahf
pop
popa
mov
mov
stc
cmp
cdq
mov
inc
mov
(bad)
popf
mov
inc
jns
cs
cld
fwait
inc
sbb
ja
and
add
xchg
rcl
mov
xor
dec
jns
and
or
and
fbld
cmp
(bad)
pop
dec
nop
xor
stos
cmp
sbb
or
adc
add
push
add
cmp
adc
lods
pop
lahf
mov
stos
push
data16
ins
sub
mov
in
pop
clc
jns
cmp
add
push
sbb
cmp
(bad)
dec
loope
inc
gs
sbb
call
cmp
cmp
jo
sbb
inc
test
bound
ret
xor
stos
mov
push
push
mov
inc
test
mov
fild
add
sbb
push
xchg
ror
mov
inc
ret
sbb
(bad)
jo
(bad)
lds
hlt
mov
dec
adc
repnz
gs
dec
inc
adc
add
xor
inc
test
xchg
stos
push
rcr
hlt
add
mov
inc
inc
push
and
sbb
sti
inc
in
add
dec
or
jmp
dec
movs
int3
daa
mov
stos
pop
jecxz
pop
mov
dec
lea
add
sub
mov
iret
(bad)
push
mov
xlat
cmp
sbb
mov
jmp
inc
(bad)
xchg
or
iret
loopne
or
jmp
mov
mov
mov
sub
std
pop
test
dec
sbb
jecxz
xbegin
pop
fwait
mov
cld
sahf
adc
fdiv
and
ds
jle
bound
dec
movs
cdq
sub
std
jl
jle
inc
(bad)
in
and
mov
cmp
cmps
inc
div
jp
pop
ret
xor
retf
inc
add
mov
xlat
adc
out
cmp
dec
lea
movs
xchg
inc
jl
push
ret
outs
cld
arpl
imul
hlt
ins
and
test
lahf
xor
pop
aad
xor
je
mov
fadd
lahf
jno
loope
xor
push
xchg
xor
retf
and
inc
sub
sub
(bad)
cld
rcr
mov
jb
sub
inc
dec
or
xor
scas
adc
push
cmp
cli
push
sub
sbb
dec
and
sbb
loopne
add
aas
sti
mov
pop
push
rcr
fadd
sbb
add
(bad)
jmp
mov
push
(bad)
mov
lea
enter
cmp
aas
pop
mov
xor
xchg
test
test
test
or
inc
repnz
imul
stos
cli
cmp
ss
sbb
cmp
out
sub
je
sub
and
sbb
push
cmp
vpshlb
push
xchg
adc
xor
rol
mov
and
dec
fist
data16
or
xchg
xor
out
sti
addr16
xchg
cmp
pop
rol
stos
jae
ds
aad
leave
sahf
outs
pop
movs
repz
sbb
in
in
fadd
inc
and
nop
adc
aas
xor
pop
sub
(bad)
cld
mov
pop
pop
cmp
jne
rcr
cmp
xchg
sbb
ins
pop
aad
push
dec
outs
popa
jnp
adc
daa
enter
imul
out
retf
fisub
and
pop
cmps
imul
mov
les
les
xchg
sar
dec
stc
xchg
fs
pop
(bad)
cmp
icebp
or
cmp
add
xor
xor
ss
xchg
frstor
retf
sahf
push
push
cmp
push
sbb
sbb
ja
sub
dec
or
mov
in
cmp
jge
icebp
jmp
push
sbb
ret
and
jno
adc
pop
jge
xor
xchg
jle
not
std
hlt
inc
mov
adc
xchg
sub
jns
iret
jns
cmp
dec
push
inc
sar
addr16
push
inc
sbb
inc
lea
or
cmp
out
rol
mov
sub
sub
fbstp
cmp
adc
lahf
jnp
test
xchg
jg
cli
jp
in
inc
(bad)
idiv
dec
(bad)
loopne
int
mov
arpl
cli
fsub
(bad)
(bad)
pop
push
inc
ret
mov
sub
inc
dec
test
iret
or
stos
leave
mov
int
inc
jmp
test
and
retf
loopne
dec
inc
es
cmp
push
cmp
test
(bad)
(bad)
out
int3
aam
push
inc
xchg
mov
mov
mov
inc
in
in
or
test
imul
pop
rcl
sub
mov
nop
in
mov
add
lock
cmp
adc
inc
inc
inc
cwde
jle
clc
retf
enter
cmp
and
addr16
pop
lds
xchg
push
mov
int3
xchg
in
test
xchg
xchg
dec
push
mov
shl
jge
dec
pop
add
das
adc
mov
pop
cli
inc
imul
jnp
cmps
loopne
lahf
sar
adc
les
lea
iret
adc
cdq
test
mov
dec
sub
or
js
retf
cmovo
dec
(bad)
test
int3
loopne
adc
mov
loope
(bad)
iret
and
inc
lds
sahf
movs
mov
inc
jns
inc
sbb
mov
sti
sub
xor
fstp
inc
xchg
mov
push
ficomp
pop
jmp
inc
(bad)
fucomip
hlt
inc
jg
cmp
xchg
les
test
es
dec
inc
enter
out
sub
sub
outs
mov
inc
inc
sub
(bad)
cmp
loopne
mov
fxch
add
jmp
enter
sub
xor
mov
jae
(bad)
fcom
and
std
and
das
cmp
or
fdivr
or
push
add
(bad)
aad
inc
and
inc
push
bound
adc
mov
mov
ret
into
dec
inc
test
loop
fdiv
(bad)
clc
sub
push
sub
stc
mov
inc
or
fwait
cmp
xchg
or
std
push
pop
retf
inc
adc
or
push
call
cmc
mov
jno
mov
js
sub
fwait
adc
inc
int3
stos
mov
cmp
push
sbb
cmc
pushf
inc
xor
inc
add
inc
stos
xchg
cmp
and
cs
and
das
inc
jne
pop
(bad)
in
sub
inc
mov
and
xchg
cmp
cmp
icebp
js
jmp
cmp
jmp
inc
into
cld
dec
pop
dec
in
push
inc
mov
rcr
cmp
test
xor
push
fsub
ror
mov
out
mov
rcr
es
aaa
in
inc
cmc
jg
scas
mov
pop
pop
js
int
sub
pushf
iret
loope
rcl
js
cmp
jg
or
jmp
dec
les
sbb
push
mov
pusha
xor
and
mov
pop
cmp
ror
rol
and
cmc
mov
je
add
addr16
or
jle
inc
push
push
dec
sub
inc
push
pop
pop
mov
inc
or
cmp
fmulp
xchg
cwde
loope
inc
push
test
xor
out
rol
nop
rcl
idiv
ds
mov
movs
div
jmp
push
adc
inc
inc
jns
dec
xor
xchg
ja
fiadd
sub
sub
pop
and
stc
loop
jbe
mov
loope
xor
jb
loopne
or
rcr
jae
mov
inc
xor
jmp
mov
pop
bound
sbb
clc
push
retf
push
iret
add
in
adc
inc
jmp
(bad)
out
stos
imul
cld
jp
inc
inc
fldenv
mov
dec
cmp
(bad)
inc
mov
mov
mov
mov
sbb
push
mov
jno
or
ss
iret
daa
cdq
fidivr
push
loopne
(bad)
in
pushf
cmp
mov
jnp
in
popa
dec
and
push
fld
inc
cmp
(bad)
push
fcom
ds
adc
js
loope
imul
es
pop
push
cmp
call
sar
addr16
xor
pusha
pop
pop
sub
fcom
stos
mov
mov
clc
push
imul
jb
stos
sbb
jecxz
mov
jnp
cmp
push
mov
mov
sub
je
shl
jp
sar
xchg
cmp
jle
mov
pusha
xor
sbb
(bad)
xchg
dec
xchg
add
xchg
leave
imul
jg
inc
cmp
scas
imul
xor
loope
mov
mov
leave
jmp
xchg
adc
and
and
sbb
or
ins
scas
cdq
cli
inc
jecxz
jg
add
out
mov
add
fwait
pop
inc
out
imul
mov
int
outs
aad
and
cmp
add
inc
jnp
cmp
(bad)
in
les
cmp
push
cs
xchg
cli
push
iret
xor
cmp
cld
lds
cmp
fidivr
inc
pop
or
out
mov
ja
arpl
jbe
push
pop
xor
cli
pop
push
mov
ds
sub
addr16
mov
pop
in
rol
lods
or
or
cmp
and
out
xor
outs
dec
test
fucomp
std
jmp
loop
add
test
xchg
sub
mov
and
xor
inc
fucomip
shl
data16
mov
fst
mov
jl
mov
lea
imul
(bad)
nop
pop
ret
cmp
outs
push
test
jns
jmp
push
sub
mov
scas
lahf
pop
jl
ss
dec
or
push
push
js
js
gs
in
fwait
inc
sti
sub
mov
mov
add
jge
push
sub
pop
into
cld
fld
out
leave
repnz
push
mov
aad
inc
add
daa
loope
cmc
inc
inc
sbb
leave
popf
jb
call
xor
cmc
sub
jle
inc
lahf
jae
popf
pop
dec
add
out
icebp
inc
lods
mov
mov
movs
mov
mov
hlt
and
mov
cmp
js
xchg
out
repz
inc
adc
cmp
leave
pop
cdq
loopne
jmp
xchg
cmp
fiadd
imul
and
pop
mov
xor
inc
cld
(bad)
leave
mov
jge
and
imul
inc
sbb
aad
sub
inc
fild
mov
inc
div
mov
add
mov
xor
dec
loopne
aam
inc
mov
sub
out
or
push
dec
jbe
sahf
sahf
aam
jle
mov
aad
sub
out
cmp
jge
cdq
inc
xlat
sti
add
mov
sti
mov
add
or
or
repz
cmp
pop
jne
sahf
pop
out
xlat
adc
scas
jo
ins
cmp
cmp
add
push
dec
pusha
pop
mov
test
jge
pop
adc
pop
(bad)
pop
rcr
pop
jns
and
aaa
test
mov
fs
cmp
outs
out
movs
test
loop
mov
jns
daa
cmp
movs
imul
fs
mov
xchg
mov
sub
rcr
mov
stc
fld
jmp
jne
mov
mov
sub
and
dec
pop
xor
xchg
(bad)
aam
push
adc
fsubr
imul
mov
jmp
jge
gs
icebp
sbb
and
jle
pusha
clc
cmps
scas
in
es
add
ret
and
mov
fmul
mov
pop
pop
adc
dec
pop
fisub
xchg
lock
adc
xchg
std
sbb
xor
out
test
je
fwait
adc
xchg
(bad)
mov
in
sbb
dec
mov
sub
call
into
mov
int
lods
jbe
rcr
jno
xor
mov
into
mov
cmp
mov
outs
sahf
sub
dec
movs
adc
popa
cmp
lds
dec
dec
mov
sbb
mov
mov
jno
ret
test
leave
daa
test
lea
jecxz
mov
fidivr
cmp
push
lahf
push
jge
mov
xchg
mov
jmp
push
mov
outs
mov
pusha
cmp
pop
xchg
arpl
mov
in
out
xor
add
mov
pop
mov
jnp
ins
xor
sbb
xchg
mov
pusha
jmp
std
xor
or
jmp
sbb
sbb
cwde
add
enter
xchg
aaa
fisub
add
inc
ins
dec
lods
mov
sbb
or
inc
mov
aam
cmp
mov
js
or
add
fsubr
pusha
imul
xchg
js
pop
bound
pusha
call
mov
xor
cmp
sahf
xchg
rcr
jle
ds
jmp
jle
pop
pop
xchg
cmp
(bad)
out
es
cmps
sbb
outs
cli
xor
fidivr
dec
and
outs
popa
add
mov
cmp
push
js
add
dec
push
fdivr
icebp
sub
dec
xchg
and
jns
cmps
fbld
es
dec
or
mov
adc
jge
cmps
jge
popa
js
mov
cmp
js
push
cdq
jns
mov
dec
xlat
adc
pop
cld
sub
and
fsub
cld
(bad)
jns
mov
mov
loopne
inc
mov
sub
add
icebp
cwde
pop
retf
push
mov
push
pop
aam
mov
shl
xchg
and
cmp
cs
ret
aad
clc
push
cmc
sti
push
fwait
test
add
lods
xchg
nop
popf
or
arpl
mov
mov
jnp
mov
sub
jo
and
dec
les
jo
ret
mov
loop
or
clc
or
jg
jge
adc
das
jp
or
fs
call
in
pop
jle
enter
cli
(bad)
hlt
mov
fstp
movs
lldt
js
mov
cmps
cmps
push
xor
out
xor
(bad)
dec
jmp
jne
mov
dec
dec
in
push
push
and
cmp
test
mov
mov
mov
adc
jns
or
les
push
sub
aaa
enter
inc
jl
cmp
data16
dec
mov
mov
inc
mov
add
dec
jbe
outs
push
ja
and
jb
xchg
inc
mov
push
inc
imul
ins
shl
aam
sbb
inc
push
inc
lds
stc
in
push
dec
sub
daa
lahf
mov
(bad)
fst
xchg
jns
mov
retf
or
mov
mov
loop
call
ds
and
mov
bound
xchg
and
fwait
movs
add
je
in
clc
int
mov
repz
pusha
or
lock
sbb
out
mov
sub
inc
and
jp
pop
inc
xchg
scas
ins
pop
shr
stc
lock
popa
sub
jns
ins
rol
adc
xor
(bad)
jmp
mov
inc
idiv
and
xchg
inc
push
push
jae
dec
dec
aas
inc
cmp
pop
ins
mov
mov
mov
daa
xlat
sub
push
cmp
popa
jnp
push
inc
loopne
fstp
inc
push
inc
in
shl
rcl
add
push
jl
mov
jecxz
mov
pop
dec
push
add
inc
daa
int3
fstp
test
cmp
pop
jns
test
stos
inc
mov
push
outs
fmulp
rcl
inc
inc
pop
jl
cwde
cli
cmp
sub
js
iret
fdivr
inc
(bad)
scas
jmp
imul
pop
adc
mov
mov
dec
jne
sbb
int
ror
aas
setl
inc
jmp
mov
push
jb
sbb
mov
into
(bad)
pop
sub
jnp
cmp
push
and
dec
pop
ds
mov
inc
test
pop
adc
add
sub
jno
lods
call
ins
enter
or
cmp
cmc
rcl
xor
xor
cmp
aaa
stos
inc
lock
sub
jne
push
jbe
add
out
pop
sub
ja
fs
adc
cld
adc
and
ds
out
sub
xor
sbb
cmp
inc
mov
mov
cmp
mov
pop
test
xchg
xchg
adc
mov
inc
add
hlt
ss
inc
sbb
mov
mov
pop
jmp
push
inc
shr
rol
xchg
cmps
cs
es
mov
fistp
mov
fstp
or
div
(bad)
cdq
lea
sub
idiv
cli
fidiv
and
mov
iret
or
add
push
fwait
inc
or
mov
and
lock
cli
fs
retf
ds
adc
adc
sub
inc
mov
cmp
jns
ds
fdiv
ins
xchg
inc
aam
(bad)
dec
getsec
mov
jmp
dec
add
dec
jb
gs
push
jno
mov
or
cmp
cmp
jp
and
fnstenv
les
mov
dec
or
add
lea
cmp
shl
xor
mov
inc
pop
xchg
or
test
inc
loop
dec
fs
inc
push
int
fsubr
das
cdq
inc
jmp
xchg
push
push
mov
lods
or
mov
pop
out
cmp
pop
ins
fld
cs
mov
inc
adc
push
in
inc
sbb
cli
pop
idiv
out
or
fisttp
jb
push
mov
mov
jg
loope
and
(bad)
mov
adc
cmp
mov
sbb
fcmovne
(bad)
stc
data16
outs
push
mov
and
fs
rol
or
mov
xchg
add
(bad)
icebp
pop
cmp
pop
loopne
pop
mov
out
push
cmps
adc
loop
mov
pop
mov
dec
fild
jp
sti
cmp
rcr
cmp
push
cmp
dec
inc
mov
stos
sbb
inc
dec
bound
mov
sti
ins
xchg
ret
pop
mov
int
and
fnclex
cmp
inc
(bad)
js
cmp
(bad)
dec
lods
stos
inc
cmovs
stos
(bad)
cmp
push
adc
mov
in
shl
sub
dec
loopne
shl
fld
cmp
sti
push
push
rcr
add
mov
mov
lods
enter
pop
lods
pushf
fldenv
repz
and
cmp
je
adc
retf
lods
jmp
add
scas
push
sar
mov
push
inc
dec
push
inc
pop
jp
push
inc
xlat
pop
dec
pop
inc
out
dec
retf
pop
mov
cld
mov
inc
dec
pop
mov
aam
daa
mov
mov
pop
jo
push
inc
inc
inc
ja
xor
dec
inc
pop
inc
jbe
jge
inc
jl
jae
mov
adc
ds
jmp
cmp
cmps
push
sbb
sub
pop
mov
cmp
les
cmp
fucomp
sub
xchg
inc
int3
inc
cmc
jmp
xor
es
sbb
ins
mov
jecxz
xor
lds
loope
xlat
xchg
pushf
cmp
jp
jg
jbe
xchg
inc
push
push
jnp
or
cmps
cmp
pop
test
lds
sbb
outs
jae
inc
jbe
jge
and
lods
mov
xor
adc
fisub
or
rol
cmp
sbb
ja
out
into
xor
or
mov
mov
jb
sub
(bad)
cli
add
lods
mov
movs
mov
fs
mov
lds
push
inc
sbb
loop
jmp
push
xchg
mov
cmp
add
pop
cdq
mov
cmc
push
push
sub
lods
repz
pop
ss
cmp
xor
inc
ror
xor
test
and
xchg
cmp
mov
or
adc
(bad)
cli
or
inc
ficomp
push
or
or
test
out
cmp
dec
sub
pop
inc
push
inc
mov
es
lods
xor
jbe
xchg
sub
inc
pop
sub
inc
fisttp
inc
shl
addr16
mov
jae
sub
cmp
add
cmp
dec
xor
fs
inc
jnp
adc
mov
push
jp
add
push
jecxz
inc
inc
movs
xchg
mov
fist
cmp
(bad)
pmaxsw
dec
inc
adc
sar
push
enter
inc
movs
add
mov
dec
fistp
push
sbb
xlat
int3
enter
ret
inc
fucomp
cwde
jb
icebp
adc
xlat
fucomip
sub
popf
ds
sbb
mov
jae
ret
xor
xchg
es
les
pop
mov
pusha
imul
int3
push
xchg
and
dec
cwde
jns
or
fld
inc
xchg
inc
cmp
ja
loopne
mov
push
retf
pop
mov
cmp
dec
into
fld
dec
jns
jl
out
mov
std
inc
sbb
xor
push
sbb
ror
cmp
inc
jg
ret
sbb
mov
mov
aaa
xor
pusha
mov
ror
arpl
push
xchg
stos
in
inc
out
adc
inc
mov
inc
jns
inc
std
int3
lods
(bad)
sbb
cmps
inc
inc
or
push
outs
call
xchg
push
pop
inc
pop
push
add
inc
jecxz
mov
not
mov
inc
push
dec
fdivr
or
xor
das
cmp
ret
cmp
(bad)
push
cmp
clc
andnps
dec
fnstcw
fld
inc
popf
loopne
fiadd
sbb
sbb
enter
or
sub
repz
inc
mov
outs
jne
and
sub
cmp
lahf
push
cmp
xchg
aas
icebp
mov
loope
jge
or
add
aaa
fdiv
fnstcw
xor
push
push
test
mov
pop
bound
and
test
fstp
lahf
jno
stos
sub
pushf
pop
out
adc
dec
xor
cmp
and
cmp
in
inc
cmc
lds
aaa
hlt
repnz
dec
cs
or
inc
push
int3
push
aas
add
sbb
mov
mov
js
jb
imul
fsubrp
setbe
or
push
jmp
int
dec
sub
scas
test
nop
sub
or
or
mul
bound
sar
pop
cmp
test
mov
sar
inc
hlt
fucomp
lods
pop
inc
shl
loopne
adc
xchg
jne
mov
mov
cs
and
dec
nop
imul
sub
cld
mov
mov
aaa
popa
loopne
ret
cmp
stos
(bad)
jns
adc
xor
cmp
jne
mov
or
div
mov
ret
inc
ds
neg
cmp
mov
in
or
loopne
adc
inc
push
retf
pop
ret
ds
pusha
rcr
inc
add
aas
stos
cmp
mov
jl
xchg
cld
out
bnd
nop
jno
add
cmps
jge
push
mov
les
(bad)
in
sub
jp
sub
push
daa
movs
shl
pusha
jns
jl
fs
frstor
lods
pop
nop
icebp
imul
ss
mov
in
sbb
xlat
(bad)
jns
mov
popf
sti
icebp
pusha
es
cli
pop
mov
sub
push
mov
outs
int
enter
idiv
ins
imul
out
fucomi
push
ins
jbe
leave
and
repz
jo
leave
xchg
pop
push
hlt
inc
out
in
rcr
adc
add
push
cld
shl
stos
sbb
pushf
cmp
pop
jmp
and
add
add
shl
in
stos
bound
cmp
cmp
pop
movs
inc
inc
mov
test
cmp
fwait
jl
jno
call
add
ds
out
int
mov
stc
rcl
adc
mov
jge
popf
shl
or
mov
sbb
fisttp
mov
xlat
push
pop
and
and
jns
xor
je
or
xor
dec
cmp
xchg
mov
or
fdivr
bound
inc
sti
lods
dec
push
jmp
ja
(bad)
je
mov
push
dec
pop
es
inc
cmp
jmp
xchg
cmp
xor
imul
jbe
fadd
push
mov
dec
and
jno
dec
and
jg
je
mov
xor
pop
inc
cmp
in
xor
shl
and
sub
das
cmp
fadd
fwait
pop
shl
movs
cld
mov
xchg
inc
cmps
mov
lods
mov
cmps
jno
pusha
xor
cmp
jmp
cld
mov
clc
pslld
pop
fdivrp
jmp
cwde
pop
mov
add
mov
inc
in
or
lahf
inc
daa
adc
test
mov
inc
and
popf
push
adc
and
mov
(bad)
cmp
lods
int3
inc
popf
test
jno
mov
std
mov
push
fsubr
push
adc
push
xchg
mov
mov
mov
sbb
inc
or
mov
xor
ins
mov
pop
jnp
cmp
test
adc
inc
pop
and
sub
add
dec
and
mov
mov
inc
dec
and
and
jmp
aad
and
enter
stc
por
xlat
ds
cmp
call
clc
pop
and
adc
ficomp
rol
retf
jl
and
cli
sub
jne
push
add
inc
mov
and
les
(bad)
adc
pop
movs
sub
test
xchg
mov
jmp
mov
inc
sbb
iret
loop
imul
in
add
add
mov
inc
dec
repnz
mov
pop
mov
retf
cmp
push
jbe
xchg
loop
mov
sub
adc
or
(bad)
cmp
jmp
fwait
nop
cmps
push
das
loopne
data16
(bad)
fimul
jns
inc
sub
mov
push
rcr
js
aad
jb
or
lock
rcl
repnz
xchg
stc
fdivr
les
fwait
std
fld
and
add
xchg
or
inc
xchg
idiv
sbb
and
cmp
jmp
sbb
mov
rcr
cmp
cmp
cmp
inc
push
sti
fnstenv
mov
outs
xchg
jmp
out
rcl
pop
nop
pop
test
retf
jmp
(bad)
ficomp
push
loopne
dec
mov
(bad)
call
outs
fnstsw
enter
xchg
popf
jns
mov
push
mov
jnp
data16
lahf
shl
mov
and
daa
in
xchg
call
clc
mov
ja
clc
and
dec
cmp
ins
mov
jno
hlt
sbb
call
jmp
dec
sub
fimul
push
mov
mov
nop
push
and
aas
xchg
pop
sub
jns
mov
inc
dec
or
je
lea
cmp
lahf
addr16
inc
xchg
pop
imul
lds
add
aad
inc
(bad)
leave
rcl
rcl
ins
sahf
mov
sub
inc
bound
mov
sub
cld
pop
add
cmp
outs
loope
pop
mov
ficom
xchg
inc
pop
test
fcmovne
or
movs
pop
daa
cmp
into
mul
hlt
push
add
xchg
outs
xor
loope
cli
fwait
(bad)
dec
push
sar
push
xchg
xchg
pop
or
fwait
test
rcr
and
leave
loope
fidivr
sbb
adc
cmp
dec
xchg
(bad)
aas
and
and
cdq
jnp
push
jecxz
popa
sub
mov
imul
mov
inc
push
ins
pop
data16
loopne
sub
div
test
cld
lods
cmp
inc
dec
xchg
push
or
inc
ret
mov
arpl
push
stos
idiv
(bad)
fucom
(bad)
stc
inc
je
shl
test
lds
xor
pop
popf
call
out
xor
cmp
jns
getsec
mov
mov
sbb
mov
xchg
cmp
(bad)
or
mov
cmps
inc
pop
cmps
ss
xor
and
and
ret
cmp
inc
dec
sbb
or
lods
arpl
(bad)
xchg
add
sbb
iret
pop
out
mov
mov
test
cmp
mov
mov
ret
inc
test
sub
(bad)
push
ret
pop
(bad)
pushf
int
dec
mov
sub
fwait
gs
cld
loope
jle
and
jo
and
sbb
sbb
xor
cmp
cmp
(bad)
leave
dec
(bad)
mov
jmp
iret
aas
hlt
data16
mov
jl
push
sbb
jmp
(bad)
aam
sub
push
pop
adc
jbe
hlt
dec
lahf
sub
nop
xor
jl
and
mul
xchg
mov
je
data16
jp
jns
and
xor
xchg
sbb
push
pop
xor
mov
int
mov
in
cmp
push
and
sub
inc
dec
(bad)
mov
mov
xchg
inc
xchg
cwde
ret
add
(bad)
mov
dec
cmp
dec
xor
pop
cmps
(bad)
data16
xchg
inc
fidivr
test
std
cmp
call
sahf
stc
aas
(bad)
jno
nop
fdiv
(bad)
fcmovnu
inc
in
inc
aad
je
stos
sub
sbb
in
jns
adc
and
cmp
mov
sbb
repnz
inc
xor
mov
adc
cmp
inc
fsub
jns
xor
mov
cmp
int3
and
sub
cmp
sub
sub
mov
adc
fld
lahf
cwde
mov
aam
jnp
pop
mov
jo
jecxz
mov
call
inc
inc
test
fwait
lods
dec
bswap
imul
cmp
div
or
(bad)
stc
aam
sub
inc
scas
ret
mov
dec
sbb
sbb
inc
mov
and
ins
inc
xor
div
adc
dec
pop
nop
mul
(bad)
xchg
xchg
je
push
call
and
mov
inc
inc
sar
popf
popf
inc
ffree
fadd
nop
call
mov
inc
gs
ret
cli
and
nop
push
cmp
xchg
jnp
stc
mov
add
mov
std
dec
mov
dec
pop
add
push
imul
ds
sub
xor
jge
mov
dec
in
push
js
cmp
push
enter
test
inc
lock
fs
outs
cmp
lods
inc
retf
mov
or
mov
mov
ins
push
ds
xor
xchg
icebp
clc
(bad)
sti
enter
jne
and
add
inc
dec
aas
in
ret
call
ficomp
or
inc
adc
cmp
push
cmp
pushf
adc
or
mov
and
imul
pop
dec
fisub
std
and
test
in
xchg
test
stos
xor
jecxz
inc
idiv
inc
cmp
(bad)
(bad)
retf
iret
inc
sub
mov
xchg
and
test
ret
xor
int
push
cmc
mov
sbb
mov
in
fimul
mov
push
xor
xchg
and
mov
xchg
mov
call
data16
ds
mov
adc
jb
aaa
test
cdq
aaa
or
mov
push
retf
push
test
dec
ins
das
pop
pushf
jle
mov
push
ret
jns
fidivr
and
xor
nop
inc
fwait
sub
mov
lea
hlt
int
cdq
xor
(bad)
movs
mov
adc
mov
push
jge
pop
xor
xor
das
mov
arpl
xor
xchg
call
sbb
iret
ror
call
cmp
(bad)
adc
lock
cwde
sub
inc
adc
dec
cmps
sbb
sar
pop
adc
aas
ins
lock
mov
dec
jb
cmp
push
in
inc
(bad)
jp
xor
mov
mov
add
lock
daa
push
xor
imul
dec
mov
inc
or
adc
push
es
loopne
(bad)
pop
or
mov
ret
adc
dec
jecxz
jp
addr16
xor
(bad)
repz
fbld
aas
outs
mov
xchg
sub
call
xchg
ret
dec
hlt
inc
cli
aas
std
inc
sub
stc
call
jl
push
push
je
inc
outs
hlt
(bad)
lock
jp
aad
mov
mov
jmp
(bad)
test
cmp
icebp
inc
pop
adc
arpl
call
out
ror
jecxz
inc
or
movs
add
jnp
adc
(bad)
jecxz
dec
stos
jmp
inc
mov
dec
sti
push
pop
outs
push
inc
pop
scas
push
ds
test
mov
pop
sti
xchg
(bad)
in
pop
lods
push
lock
sub
mov
dec
sbb
jae
scas
jmp
sub
xor
retf
inc
aam
out
aad
lods
xchg
mov
cmp
inc
jnp
push
dec
push
mov
inc
jmp
ffreep
push
div
(bad)
cmp
in
pop
or
je
mov
les
fadd
sbb
push
inc
jle
add
mov
iret
imul
out
cmp
xchg
xchg
xchg
mov
cmp
movs
cli
cs
inc
inc
push
popa
dec
lods
fiadd
ret
cmp
adc
(bad)
stos
add
mov
sbb
or
mov
les
xchg
push
sbb
xor
cmc
(bad)
sbb
mov
cmp
int3
or
cmp
das
lea
add
sbb
cmp
(bad)
cmp
pop
les
ds
sub
mov
and
sar
scas
aas
imul
mov
sbb
rcr
inc
arpl
pop
jmp
push
stc
xchg
stc
cmp
clc
jmp
cmp
mov
ss
mov
test
cmp
inc
shl
dec
pop
daa
fucom
(bad)
xchg
push
or
sbb
or
cmp
add
in
inc
or
or
cmp
loope
adc
dec
cmp
cmps
int3
das
mov
into
push
pop
in
jmp
out
inc
xor
pushf
pop
inc
mov
lds
setle
popa
xlat
lds
aaa
mov
(bad)
outs
arpl
xor
clc
(bad)
pop
dec
cmp
inc
mov
inc
add
aad
sbb
fs
jg
dec
outs
pop
ret
cmps
push
pop
inc
jo
sub
xchg
mov
xlat
pop
outs
cmovns
mov
rcl
clc
leave
cmp
gs
inc
lock
sub
(bad)
inc
enter
out
and
into
das
inc
daa
add
les
push
call
ficomp
ror
push
mov
push
loopne
and
mov
jmp
inc
(bad)
mov
cmp
lods
mov
call
std
popf
fxch
(bad)
daa
dec
(bad)
add
in
cmp
jb
lods
dec
sbb
inc
jno
pop
nop
ja
push
pop
inc
shr
or
mov
jl
call
stc
xor
xchg
rcl
add
xchg
arpl
push
jno
push
inc
mov
js
data16
sub
cmp
imul
es
dec
push
int3
xor
mov
pop
cmp
cmp
xchg
mov
in
mov
imul
cmp
jl
inc
cmp
ins
scas
nop
cwde
mov
cmp
loopne
nop
mov
js
fidivr
inc
push
sbb
call
aam
mov
inc
lea
in
movs
movs
inc
inc
jle
mov
inc
loopne
cmp
idiv
inc
aam
leave
fcmovu
out
pop
inc
mov
inc
mov
and
mov
inc
arpl
mov
pop
jo
pop
adc
nop
pop
xchg
mov
pop
xchg
out
stc
mov
shr
sar
out
mov
or
in
aam
inc
dec
(bad)
cmp
mov
sub
xor
xor
inc
cmp
loop
and
out
mov
(bad)
cli
into
sub
leave
pop
ror
mov
xor
(bad)
cmp
add
pop
ins
sbb
sub
xchg
imul
sti
and
dec
ja
cmp
inc
pop
xchg
sar
xlat
sub
push
sbb
inc
xor
mov
cmp
adc
gs
outs
xor
dec
sar
inc
movs
inc
jmp
pop
sbb
and
cmp
cwde
stos
out
das
pop
rcr
into
cmp
call
arpl
es
jae
xchg
inc
mov
mov
push
cmp
lahf
cld
mov
mov
inc
jae
xor
or
jecxz
fdivr
add
(bad)
pop
bound
adc
cld
pop
addr16
dec
jl
in
inc
loopne
jge
(bad)
fild
cmp
sub
xor
or
and
sbb
js
pop
data16
cmp
gs
mov
pop
(bad)
jmp
add
ret
xor
popa
stc
mov
cmp
sahf
mov
xchg
iret
inc
or
jp
inc
dec
mov
daa
or
inc
push
sahf
fistp
jmp
idiv
retf
mov
inc
sti
loope
outs
mov
inc
rcr
cmp
(bad)
hlt
pop
cmps
push
aam
dec
rol
sbb
cmp
adc
dec
fstp
push
push
xchg
inc
xchg
mov
pop
cmp
sub
idiv
ins
inc
add
lods
xor
icebp
js
pop
inc
daa
jl
adc
or
clc
in
xchg
xor
dec
push
xchg
xchg
push
inc
push
dec
add
sbb
cmp
les
loop
inc
xchg
lods
jmp
pop
inc
daa
pushf
loope
xchg
clc
pop
bound
popa
test
arpl
lods
movs
cmp
and
icebp
repnz
ss
inc
test
pmaddwd
xor
sar
dec
leave
cmp
lods
cmp
imul
adc
xchg
add
cmps
cmp
xor
cld
inc
mov
outs
mov
inc
push
xchg
stos
ss
jb
dec
mov
dec
js
inc
mov
scas
xor
loopne
cmp
mov
sbb
nop
mov
mov
fistp
push
inc
retf
push
or
inc
movs
fwait
outs
stos
xchg
pop
cdq
add
adc
mov
pushf
iret
shl
mov
cmp
or
fild
adc
add
inc
repz
sub
jle
or
inc
sub
dec
sub
mov
add
cmp
inc
inc
push
jg
mov
retf
jne
add
and
push
mov
jg
add
arpl
inc
sub
std
sub
sub
inc
and
shl
sub
cmp
sub
xor
push
jl
fnstcw
fsub
sub
je
push
adc
add
dec
les
jmp
adc
(bad)
mov
lds
dec
imul
jmp
cdq
test
(bad)
pop
and
repnz
sbb
cld
(bad)
lea
mov
adc
jmp
(bad)
out
mov
inc
pop
aas
mov
jg
mov
mov
cmp
mov
cmp
mov
add
pop
jge
rcl
hlt
mov
out
ret
cld
loope
mov
xor
xor
or
mov
mov
mov
dec
push
cdq
rol
ja
lods
push
pop
adc
cmp
add
fiadd
mov
out
inc
cmp
into
test
push
xchg
mov
mov
xchg
cmp
out
inc
inc
addr16
leave
cld
ret
(bad)
fmul
push
fmul
pop
pusha
sbb
lock
bound
mov
mov
sub
xchg
mov
or
inc
jg
jmp
or
in
pop
inc
cmps
call
mov
cmp
movs
xor
arpl
cmp
imul
leave
push
retf
fxch
pop
int
into
or
cld
or
pop
outs
std
sub
shl
retf
jnp
mov
mov
xchg
fsubr
sub
add
out
and
(bad)
jo
mov
push
into
jge
adc
aam
mov
outs
mov
inc
mov
inc
push
(bad)
idiv
jno
std
jmp
push
cs
cmps
add
sub
cmp
xchg
xlat
fsub
(bad)
sbb
or
icebp
xchg
sub
add
pop
push
sub
(bad)
xchg
not
mov
adc
jp
adc
jmp
shl
xor
and
push
or
xchg
push
test
fcomp
dec
push
pop
xor
jns
or
sub
(bad)
pop
add
out
dec
inc
or
ret
aas
jno
popf
cwde
jl
add
in
cld
mov
sti
leave
push
fsub
(bad)
mov
mov
sub
mov
jns
inc
je
leave
cmp
stos
stos
lds
iret
sbb
inc
movs
sti
mov
pop
leave
stos
jns
or
inc
jecxz
adc
cmp
inc
cmp
test
jns
fimul
cmp
inc
cmc
adc
popf
lea
xchg
jmp
mov
ins
inc
scas
xor
cmp
push
push
in
add
or
rcl
arpl
jns
jnp
addr16
jl
add
dec
inc
sahf
inc
popa
xchg
xor
cmovo
push
xor
repz
out
inc
ss
scas
jo
xor
bound
dec
dec
xchg
sti
jmp
pop
push
(bad)
fcomp
fnstcw
ss
out
sub
pop
inc
dec
sbb
aas
mov
outs
jle
inc
jl
pusha
jmp
mov
xchg
adc
int3
adc
dec
sbb
retf
rcl
mov
sub
xor
cld
loop
cli
jmp
repnz
(bad)
outs
inc
pop
pop
loopne
xchg
sahf
test
inc
ret
mov
addr16
pop
mov
jb
inc
push
movs
inc
rcr
retf
adc
adc
call
in
mov
stos
inc
test
test
and
xchg
cmp
mov
in
jnp
inc
es
lds
in
(bad)
jo
pop
inc
addr16
and
lock
mov
(bad)
leave
xor
int
jle
xchg
cmp
movs
sbb
sbb
clc
or
xor
int
cmp
popa
cmp
jge
push
jp
les
pop
cmp
and
ror
out
cdq
jge
push
sahf
out
mov
ds
in
icebp
in
add
scas
xchg
or
cli
adc
mov
sbb
retf
test
popf
pop
add
cmp
mov
fsubr
cmp
fld
stos
xchg
stos
sti
push
add
pop
xchg
xchg
je
aas
push
movs
sub
pusha
jl
cmp
mov
and
mov
lock
xchg
addr16
xchg
(bad)
mov
mov
adc
(bad)
cmp
and
icebp
mov
repnz
jns
aam
push
call
mov
push
cld
adc
jbe
les
loope
bound
add
or
mul
push
ds
dec
push
xor
sub
jmp
call
jp
les
jns
outs
lahf
inc
rol
inc
cmp
nop
jns
loop
out
mov
xchg
sub
inc
push
pop
adc
int
sbb
(bad)
xchg
sbb
cmp
dec
jg
mov
inc
jmp
les
xchg
adc
mov
cmp
movs
mov
mov
shr
jnp
dec
xchg
imul
inc
or
jae
inc
cmp
fwait
push
fs
and
ss
mov
rol
ret
loopne
mov
cmp
or
jl
xchg
nop
sbb
and
jo
xchg
js
inc
fsubr
adc
adc
out
jge
jecxz
inc
js
je
packssdw
dec
in
xor
pop
mov
and
retf
aad
add
add
xor
sub
mov
aaa
ins
pop
fs
test
cmp
loopne
pop
mov
inc
inc
push
inc
push
ret
xor
(bad)
mov
jmp
(bad)
mov
repz
pushf
add
or
fiadd
retf
sub
shl
mov
push
push
int3
or
mov
cmc
enter
xor
add
jno
std
mov
outs
test
cmp
cld
jbe
mov
inc
dec
and
rol
jb
in
cmp
xchg
por
cmp
daa
sbb
retf
cdq
mov
pop
adc
jmp
lods
outs
jnp
mov
mov
leave
inc
cdq
nop
cmp
cmp
les
mov
loopne
mov
arpl
inc
retf
fadd
xchg
push
sbb
nop
mov
scas
popf
sub
shr
jmp
push
ins
cmps
mov
xchg
nop
add
sbb
xor
stos
fwait
ret
pushf
enter
xor
sbb
test
xor
dec
mov
adc
mov
pop
add
add
rol
mov
mov
mov
pop
and
mov
pusha
jno
fs
out
sbb
or
clc
hlt
or
mov
dec
sbb
fmulp
(bad)
in
dec
dec
data16
inc
fs
lock
or
inc
clc
add
inc
mov
(bad)
cmp
cmps
cmp
dec
in
mov
sub
cmp
mov
mov
sbb
adc
sbb
in
inc
cld
(bad)
das
adc
(bad)
arpl
xchg
imul
xchg
cmp
repnz
xor
push
in
js
popa
lds
sahf
jp
adc
lahf
sbb
aas
dec
bound
or
cdq
cmp
retf
cmp
outs
adc
cmps
pop
fcomp
sbb
cmp
xor
scas
add
enter
leave
push
inc
mov
mov
cdq
xchg
lods
jb
stos
inc
sbb
push
in
mov
data16
fcmovb
(bad)
cmp
sub
mov
xchg
xchg
in
inc
cs
inc
je
pop
inc
adc
or
in
ss
mov
jns
lods
lods
loope
and
and
adc
add
call
xor
pop
mov
xchg
cmp
lods
push
loopne
ret
add
inc
add
push
xlat
ror
loopne
stc
fidivr
push
jo
jp
ins
inc
stos
mov
cmps
loope
sbb
fbld
jne
cmp
popa
pop
stos
dec
lea
cmps
jg
xchg
jp
prefetcht1
in
inc
cmp
dec
jns
(bad)
xchg
ds
mov
dec
xor
cmps
sar
mov
repnz
cmp
dec
dec
mov
aad
loop
iret
in
jne
jl
rol
fcomp
push
cdq
push
in
jae
ds
push
(bad)
icebp
jmp
popa
inc
jnp
sub
scas
shr
add
mov
popa
inc
js
(bad)
fiadd
mov
adc
in
sub
dec
jnp
outs
mov
loopne
or
imul
inc
add
cld
mov
retf
mov
jns
jge
push
xchg
dec
inc
icebp
inc
and
aad
mov
inc
mov
jo
outs
inc
dec
jl
aad
sbb
cwde
inc
jbe
aaa
in
sub
push
pop
push
data16
ficom
jmp
cmp
aas
and
add
xor
rcr
rcl
sbb
add
in
popa
mov
fdiv
xlat
cmp
test
fst
iret
xor
ret
in
sar
enter
in
es
pop
mov
data16
add
mov
into
inc
popf
sbb
xchg
movs
push
inc
fisub
je
in
aam
icebp
cmp
mov
out
dec
mov
mov
aam
xchg
adc
rol
xchg
cdq
jmp
lahf
js
mov
pop
leave
inc
rol
jge
(bad)
mov
stos
and
test
jns
outs
mov
ss
mov
jg
jg
pop
fdiv
xor
pop
sahf
adc
mov
imul
cld
sahf
lds
fdiv
test
into
cmp
cmp
aaa
cmp
xchg
loopne
mov
pop
mov
cmp
dec
add
add
in
jno
inc
rcl
fistp
xchg
sub
ror
and
mov
pop
sahf
jns
mov
inc
sar
fs
dec
ja
movs
push
adc
mov
mov
mov
stc
jge
pop
cmp
mov
or
fadd
int3
cmp
adc
mov
int
mov
cmp
aas
cmp
out
cmp
jno
cld
imul
mov
loop
xchg
add
sti
push
inc
lahf
push
mov
ficomp
sub
mov
test
add
jno
dec
push
es
add
outs
ds
pop
jge
cmp
dec
ror
aas
aaa
push
dec
cmp
pop
inc
cli
aam
aas
mov
ror
(bad)
sub
mov
jne
push
rol
lahf
push
push
dec
cmp
stc
or
out
mov
sbb
rol
dec
jo
mov
outs
pusha
cmp
je
mov
mov
mov
pop
dec
js
and
cmp
std
cmp
inc
rcr
push
mov
inc
stos
cmp
cmp
dec
icebp
adc
and
jl
dec
std
stc
(bad)
jmp
mov
pop
mov
jle
xor
and
mov
cmp
js
stos
cmp
loopne
xchg
or
mov
and
push
jmp
xabort
push
mov
or
sahf
nop
or
fdivr
push
sub
sahf
xor
mov
mov
push
outs
mov
aam
jle
xchg
and
imul
cmps
pop
(bad)
adc
fdivr
pusha
pusha
imul
inc
push
pop
xor
aas
(bad)
clc
sub
rcr
popa
pop
fs
fldcw
iret
pop
or
mov
nop
and
pop
mov
and
mov
sbb
out
sub
jecxz
hlt
xchg
rol
jno
rcr
sub
inc
push
jl
jns
adc
jmp
jno
cs
ds
into
int3
xor
pop
lea
mov
stos
call
pop
mov
mov
xor
pusha
cmp
dec
jno
sub
clc
push
mov
popa
out
jmp
add
pop
shl
and
sub
inc
imul
lock
xor
mov
xor
jl
imul
scas
mov
fs
(bad)
test
inc
jbe
mov
add
jno
or
stos
icebp
rol
nop
ret
push
fisttp
call
mov
push
mov
(bad)
aad
pop
sbb
addr16
mov
loop
add
bound
add
cmc
ret
and
mov
ins
into
inc
and
dec
call
sti
jmp
aas
inc
sub
or
dec
adc
inc
mov
mov
cmovo
and
or
ror
mov
mov
movs
and
adc
inc
jne
sbb
rol
pusha
push
call
xlat
ror
push
js
movs
sbb
das
mov
or
repz
sbb
cmc
(bad)
fsubr
xchg
ds
sar
add
mov
inc
or
bound
call
pop
stc
das
dec
xchg
cmp
adc
iret
dec
sbb
xchg
jl
(bad)
xlat
inc
xor
std
pushf
pop
test
inc
sbb
and
js
xchg
clc
inc
sub
fs
into
lods
mov
mov
mov
sub
sar
add
test
sub
pop
sub
dec
js
inc
hlt
clc
adc
inc
scas
cdq
xchg
inc
xlat
aad
pop
inc
popa
mov
sub
ins
lods
xchg
lea
sbb
(bad)
mov
add
mov
inc
fdiv
fucomp
je
mov
pop
jns
cs
lods
cmps
in
rol
test
pop
icebp
and
icebp
aaa
push
sar
mov
inc
imul
mov
jno
cmp
cdq
xor
loop
enter
sbb
les
(bad)
or
push
imul
mov
and
or
ja
or
cmps
cli
push
adc
push
mov
enter
loopne
pushf
leave
xor
inc
mov
jae
xchg
stos
cs
and
cld
loopne
mov
inc
jmp
ret
les
jp
and
aas
outs
loopne
rol
inc
movs
mov
es
xlat
jecxz
les
xor
call
cmp
je
mov
cmp
dec
pop
mov
sbb
icebp
shr
test
aaa
rcr
jo
jmp
and
xchg
jns
mov
add
jno
inc
not
sbb
pop
adc
imul
inc
gs
imul
mov
repz
dec
mov
stc
rol
push
mov
retf
xor
mov
push
outs
nop
mov
jbe
out
sti
retf
cs
mov
inc
or
mov
aaa
in
mov
popf
jl
inc
iret
or
or
fisub
ds
popa
and
jmp
cmp
cmp
cld
cmp
das
lock
xor
inc
mov
or
fsub
and
ds
in
dec
pop
into
inc
dec
mov
shr
test
cmp
je
mov
xor
inc
sbb
in
pop
(bad)
pop
inc
mov
push
in
int3
inc
fistp
hlt
les
frstor
push
data16
pushf
mov
and
jecxz
(bad)
cmp
pop
in
mov
jmp
adc
cs
mov
sub
and
jl
es
xor
inc
or
call
push
mov
data16
rol
mov
stos
ret
cmp
dec
cmp
cmps
lea
mov
fs
mov
(bad)
into
cmp
and
shl
adc
xchg
mov
icebp
add
xor
cmp
or
fbstp
sub
or
jl
cli
hlt
mov
fwait
shl
sbb
loopne
leave
cmc
rol
inc
repnz
pop
xlat
in
mov
inc
or
lods
jge
add
repz
(bad)
cmp
data16
loopne
push
pop
inc
test
or
retf
push
lds
push
stos
mov
mov
rcr
mov
push
aas
nop
add
(bad)
sub
aam
or
ss
aas
sbb
test
inc
inc
lahf
icebp
jmp
mov
in
dec
pop
fucomi
add
jp
cmp
cdq
sbb
inc
cmps
pop
mov
movs
inc
jg
inc
push
add
inc
mov
xor
sub
cli
pop
adc
cmp
xor
ret
in
mov
leave
sbb
push
test
aaa
enter
inc
mov
inc
xchg
sub
mov
ins
fwait
inc
add
fsubr
fld
outs
cmp
int3
sar
dec
inc
sub
pop
pushf
hlt
aad
jnp
and
mov
rol
aam
jp
xor
mov
adc
add
outs
test
and
ror
inc
mov
cmp
cmp
popf
and
cmp
xchg
(bad)
push
mov
call
enter
mov
mov
inc
sub
fcmove
jmp
pop
das
sar
in
mov
adc
sbb
or
pop
iret
sar
test
sbb
mov
js
inc
ins
mov
adc
add
je
cmps
(bad)
retf
(bad)
in
fnstcw
dec
xor
dec
cmp
sub
les
jl
sub
jp
bound
mov
cmp
dec
mov
je
les
or
adc
cwde
mov
imul
cmp
jno
mov
mov
aas
mov
mov
dec
stos
xor
ja
mov
imul
cli
mov
pop
mov
sbb
ror
adc
loope
mov
jge
or
out
dec
push
or
xchg
(bad)
jle
data16
js
call
sti
cli
fist
push
addr16
cmp
jl
shl
xor
xchg
mov
out
aas
push
xor
push
in
cdq
mov
xchg
fs
sahf
adc
popf
cmp
fwait
inc
call
mov
int3
or
test
push
inc
jecxz
cli
rcl
outs
inc
dec
stc
jmp
adc
sub
inc
and
cmp
popf
mov
push
lock
inc
xor
shl
jbe
ins
xor
cmp
mov
mov
and
fmul
shr
add
cmp
call
call
pop
(bad)
loope
test
call
cmp
mov
mov
and
movs
pop
lock
jbe
std
ins
xchg
retf
leave
push
idiv
xor
ror
cmp
cmp
movs
and
test
(bad)
movs
pop
fdivr
loop
jecxz
pop
fwait
mov
inc
cli
pop
mov
rol
loopne
push
mov
adc
ins
mov
mov
stos
dec
fidiv
mov
dec
loopne
jmp
inc
in
mov
mov
cwde
cli
dec
popa
inc
into
clc
mov
sbb
adc
inc
jnp
mov
fxch
fucom
xor
enter
cmp
in
jnp
sub
cmp
or
inc
loopne
es
dec
ins
stc
fnstenv
jns
pop
cmp
ret
dec
imul
and
xor
lea
ss
or
mov
loope
cmp
nop
jp
cmc
bound
repnz
pushf
mov
mov
add
push
add
mov
inc
jnp
push
xlat
stos
ja
lds
cmp
mov
lods
and
xchg
std
xchg
cmp
in
xchg
jb
mov
dec
jae
lods
loopne
adc
cmp
(bad)
jmp
loopne
aaa
sub
push
inc
movs
(bad)
or
mov
outs
fstp
push
in
lock
inc
into
pop
ret
pop
(bad)
push
iret
pusha
mov
repnz
mov
pop
out
inc
sbb
push
(bad)
mov
arpl
outs
adc
ds
cmp
sbb
imul
mov
pop
push
lea
cs
bound
ss
cmp
inc
mov
js
jns
add
cmc
dec
ffreep
sti
cmp
loop
jno
inc
into
in
adc
pop
or
(bad)
sbb
stos
rol
es
dec
jb
out
add
mov
sub
clc
inc
fdivr
mov
out
rdtsc
push
(bad)
stos
aaa
cli
sbb
out
or
jno
popa
shl
jns
pop
mov
cmp
xlat
cld
jmp
std
mov
mov
cmp
pusha
jno
sbb
fnstsw
int
test
push
repz
dec
jno
xor
mov
mov
fdivr
xor
clc
sbb
adc
add
push
stos
arpl
dec
adc
call
sbb
cmps
shl
mov
push
xor
lds
icebp
or
cli
or
and
repnz
cmc
jns
sahf
cld
cmp
dec
(bad)
fisttp
in
or
jmp
xchg
xor
stc
clc
cli
push
inc
popf
sbb
int3
sub
retf
or
push
loopne
push
or
dec
dec
cmp
dec
sbb
or
repnz
sub
enter
hlt
mov
lods
mov
movs
push
sbb
jns
and
inc
pop
mov
cmp
dec
loope
mov
(bad)
mov
sbb
rol
sbb
sbb
push
out
push
leave
jmp
add
aam
pop
jno
jg
jae
mov
cmp
pushf
test
pminub
xchg
xchg
cwde
jl
pop
jbe
xchg
stos
push
push
pop
fucompp
outs
cmp
mov
in
ds
int3
loop
inc
adc
mov
xchg
mov
test
adc
xor
aas
popa
ja
call
inc
sub
sbb
mov
jl
mov
cmp
(bad)
(bad)
popf
cmp
inc
data16
rol
and
hlt
out
out
ds
pop
ss
out
xchg
mov
leave
sub
adc
(bad)
sar
mov
out
icebp
add
mov
mov
mov
sbb
imul
enter
shl
cmps
ret
cmc
fcomp
jnp
lods
sub
push
rcl
push
in
ja
stc
cmp
push
inc
pop
pop
cmp
jmp
out
dec
inc
fwait
xchg
and
adc
xor
sub
mov
push
jno
and
mov
jg
jo
inc
fwait
push
in
mov
inc
(bad)
mov
sub
add
fwait
cmc
ret
inc
ins
nop
mov
mov
pop
dec
mov
fwait
jl
gs
(bad)
stc
push
sbb
cdq
xchg
dec
(bad)
sub
je
jno
stos
dec
jg
imul
retf
out
pop
inc
fsubr
and
mov
mov
aam
lods
push
inc
mov
sbb
rdmsr
arpl
pop
ret
jle
dec
sub
fsubr
xchg
inc
lods
jmp
or
push
(bad)
pop
daa
pusha
lds
adc
inc
cmp
(bad)
lahf
fwait
js
aam
xchg
das
retf
aad
pop
call
aaa
pop
sub
movs
(bad)
cmp
pop
jns
imul
mov
lahf
pop
pop
sbb
ss
adc
iret
sbb
imul
xlat
neg
inc
cmp
adc
xor
xchg
je
daa
fcom
cld
jno
sbb
js
xchg
out
cmp
imul
test
sbb
cs
dec
inc
pop
aad
adc
sahf
fyl2xp1
fs
or
cs
or
fyl2x
cld
call
jbe
fild
push
je
loop
xor
pusha
loop
pop
pushf
loope
inc
xchg
cmp
inc
ss
pusha
jno
jle
in
sbb
js
sub
and
stos
rcr
(bad)
loop
and
mul
inc
fiadd
fadd
mov
add
sub
cmc
mov
cmp
movs
shl
cwde
sub
inc
shr
push
jge
imul
sbb
aaa
test
(bad)
jle
push
mov
lahf
jmp
dec
dec
or
xchg
outs
pop
movs
sub
jns
add
(bad)
mov
test
scas
outs
jge
sub
dec
or
sbb
ret
xor
scas
mov
ror
xor
xor
or
xchg
xchg
and
lock
xor
pop
mov
push
cmp
loop
repnz
mov
aaa
xchg
je
mov
lds
xor
ins
mov
shr
outs
mov
pop
sbb
in
inc
call
or
sbb
push
jecxz
adc
js
adc
mov
push
enter
sbb
stos
dec
mov
xor
pop
rcl
cmp
movs
xchg
rcl
or
js
not
mov
sbb
cmp
mov
and
and
push
nop
out
sbb
ins
inc
push
(bad)
pusha
cmp
sar
or
and
jge
fidivr
in
test
mov
(bad)
cmc
mov
or
fld
clc
dec
push
sub
inc
cmc
test
sub
cmp
out
inc
fild
and
aam
or
lock
xchg
adc
retf
stc
cmp
adc
lds
inc
mov
jb
mov
aam
adc
(bad)
repnz
ins
(bad)
mov
sbb
or
mov
(bad)
mov
fxch
mov
cmp
and
ins
mov
adc
pop
mov
pop
ins
and
cmp
repz
call
jmp
cmp
movs
mov
cmp
scas
mov
jmp
pop
out
les
cdq
inc
cmp
push
shl
adc
mov
ja
push
(bad)
pop
popa
(bad)
cmps
inc
popf
add
retf
jmp
mov
jae
mov
xor
in
aaa
(bad)
clc
sub
f2xm1
cld
dec
pop
and
inc
in
sbb
sub
adc
scas
cmp
mov
popa
pop
sbb
cmp
xchg
jbe
pop
inc
mov
push
or
scas
dec
jle
rol
or
es
sti
dec
xchg
push
ins
inc
mov
int
add
add
mov
mov
and
idiv
inc
jmp
pop
xor
loopne
hlt
data16
outs
stos
fistp
mov
xor
push
cld
(bad)
out
inc
test
inc
jno
xchg
xchg
bound
ds
ret
cld
sar
mov
cmp
div
imul
xlat
fs
mov
add
scas
test
pop
out
adc
out
mov
loope
add
add
push
mul
adc
inc
push
out
mov
or
xchg
es
sub
lods
cmp
dec
push
(bad)
cmp
cmp
pop
popa
pop
stos
mov
pop
cmp
pop
cwde
iret
inc
push
ins
jne
jl
out
jae
jbe
js
rcl
sub
inc
or
call
xchg
xchg
inc
add
div
mov
ret
jmp
fstp
inc
jne
popf
mov
cmp
xchg
inc
jmp
mov
xor
push
dec
lea
mov
inc
out
push
inc
adc
enter
inc
pmovmskb
movs
iret
mov
mov
add
dec
cmp
mov
fist
lock
add
rcl
cmps
fs
or
fnstcw
mov
cmc
adc
add
jmp
adc
(bad)
pushf
or
cmp
cwde
(bad)
das
xor
retf
fmul
dec
rcl
cli
add
cmp
push
push
mov
retf
sbb
dec
mov
inc
mov
int3
lods
outs
mov
mov
adc
movs
call
inc
adc
leave
sub
or
lea
adc
dec
jp
xor
aas
mov
push
ret
movs
cmp
lea
aad
fidivr
inc
call
jne
mov
cmp
test
pop
cmp
adc
(bad)
imul
bound
jb
or
mov
xor
xor
fmul
xchg
stc
dec
xchg
cmp
imul
push
imul
xor
mov
mov
cld
ds
cmps
and
test
movq
xchg
mov
sbb
sub
and
add
mov
jle
lods
leave
out
jns
and
and
loopne
cmp
in
cmp
fs
cmp
mov
push
jge
loop
sub
jns
in
aam
in
pop
xchg
xchg
pusha
pop
lahf
outs
pop
pop
data16
sub
ds
dec
test
jmp
inc
or
inc
fcmovbe
mov
xor
and
pop
arpl
and
jg
jecxz
push
xchg
inc
inc
or
popa
jge
shr
push
dec
call
stc
xchg
and
dec
add
and
cmp
inc
xchg
dec
outs
fwait
mov
jnp
loop
cmp
repnz
outs
add
fwait
sbb
fwait
mov
shl
add
inc
test
jns
inc
adc
pop
mov
inc
xchg
mov
test
adc
mov
lahf
pop
stos
es
cmp
mov
dec
int3
test
inc
mov
idiv
std
inc
fwait
js
dec
pusha
mov
(bad)
aad
rcr
mov
dec
mov
cmps
js
ja
int
cmps
push
xor
jbe
rol
push
jns
cmp
adc
pop
lods
pop
sbb
mov
stos
cs
scas
push
or
push
cmp
fidivr
test
mov
inc
sbb
adc
add
scas
ins
add
data16
mov
adc
jle
je
jp
pushf
inc
inc
xchg
xchg
and
adc
loope
inc
stos
sbb
adc
mov
jo
jmp
dec
cli
jmp
retf
cmp
mov
inc
clc
movs
inc
jg
fiadd
push
pop
dec
sar
retf
mov
jno
mov
clc
sar
sbb
out
mov
mov
bnd
leave
sub
push
adc
leave
outs
inc
das
or
iret
call
add
pop
imul
inc
(bad)
iret
enter
add
mov
rol
mov
inc
dec
(bad)
mov
aaa
pop
shl
pop
or
nop
push
mov
add
test
xor
sub
jle
js
les
clc
xchg
test
pop
mov
pop
fwait
jle
add
addr16
jb
push
jge
mov
inc
dec
xchg
jmp
sbb
inc
ret
xor
jb
jns
sub
clc
inc
pop
in
pop
jns
mov
cmp
push
jmp
add
push
sahf
lea
call
(bad)
fdiv
add
xchg
leave
clc
imul
inc
idiv
ins
mov
cmp
push
mov
mov
in
sbb
push
test
push
sub
adc
stos
fdivr
sbb
jg
(bad)
lds
arpl
ret
pop
jno
dec
and
or
pusha
push
xor
xor
les
mov
sub
out
neg
cmp
mov
cmp
sti
mov
fild
jmp
push
test
xor
data16
popa
es
or
inc
icebp
xor
sbb
fdivr
(bad)
scas
or
enter
xchg
lods
jl
jmp
and
adc
iret
mov
or
(bad)
retf
jge
inc
jmp
jp
lods
sbb
mov
out
loopne
cmp
adc
lahf
mov
ds
std
fst
dec
movs
movntq
out
mov
add
push
cmp
xchg
cmp
inc
cmps
lahf
or
test
or
scas
mov
retf
sub
test
dec
out
es
mov
ins
das
fwait
or
not
into
sub
rol
add
jb
adc
jp
xchg
add
sub
mov
js
das
mov
xchg
inc
shl
xchg
jne
jmp
adc
popf
(bad)
and
stc
inc
push
in
xchg
or
outs
jge
mov
inc
inc
jg
into
repz
ins
je
outs
imul
mov
push
lods
mov
mov
xchg
call
fsubr
xor
aam
scas
and
ins
xor
xor
leave
setno
jp
les
add
mov
jmp
jnp
shr
xchg
push
xor
ds
sbb
and
push
sub
aam
andps
lods
mov
sub
cmp
cwde
xor
fild
inc
fs
cmp
rcl
loopne
inc
std
enter
out
ja
jp
jb
lahf
out
loop
mov
cmp
xor
fistp
ja
xor
div
adc
mov
rol
jge
sub
sbb
sub
repnz
mov
(bad)
sbb
cmc
aas
jns
pop
out
inc
jb
sub
mov
sub
shr
iret
(bad)
push
fnstcw
fidivr
pop
xchg
jno
push
aaa
dec
dec
aas
pushf
sub
je
jae
lds
retf
pop
pop
mov
jl
dec
das
outs
jg
cli
leave
and
jno
cmp
btc
push
and
aad
ror
jno
inc
inc
cmp
or
mov
and
or
inc
movs
call
mov
in
xchg
data16
arpl
test
push
repnz
sub
jb
or
or
ja
sbb
jmp
rol
jbe
cdq
fwait
or
push
push
lods
pusha
mov
inc
xchg
mov
jecxz
cmp
lds
sub
cli
cmp
call
(bad)
xor
cmp
sub
pop
(bad)
scas
mov
loop
fadd
ds
leave
cmp
hlt
(bad)
stos
jmp
and
and
adc
ficomp
js
outs
mov
icebp
repnz
fild
cwde
mov
pop
daa
cmp
adc
or
sub
push
mov
dec
inc
inc
arpl
adc
mov
dec
bound
lahf
pop
jl
and
fistp
dec
mov
dec
enter
sub
adc
adc
mov
inc
pop
jo
sbb
inc
mov
cmp
out
pop
push
and
retf
lods
dec
test
movs
daa
or
jns
stos
movs
inc
cmps
pop
fnstenv
inc
div
and
and
pop
cmp
xor
in
das
sbb
(bad)
cld
arpl
sub
sub
icebp
mov
jns
pop
sub
or
mov
jg
lods
cmps
inc
mov
jne
jo
mov
cmc
(bad)
loopne
popf
inc
push
daa
nop
mov
mov
inc
pop
ret
aas
cli
retf
mov
mov
pop
loope
sbb
aaa
jo
xlat
retf
pop
mov
inc
ins
xchg
pop
xor
sub
repz
cmp
or
lock
ret
pusha
dec
(bad)
push
(bad)
push
jo
xor
loope
jb
sub
vpminub
xchg
push
je
aaa
pop
in
das
jno
jmp
jl
shl
fdivr
scas
jno
jmp
sbb
jo
or
xchg
push
fs
jge
sar
pop
icebp
pop
call
add
cmp
imul
add
ror
or
xchg
leave
push
xor
mov
sub
sbb
xor
push
std
pop
aas
loope
xor
mov
xchg
jns
loopne
shl
inc
and
in
je
cmp
nop
aad
dec
outs
xlat
add
es
mov
mov
xor
or
popf
cmp
fbstp
jp
out
cli
leave
inc
jecxz
mov
ror
xor
fstp
daa
adc
aad
cmp
leave
mov
pop
mov
xor
sub
jns
push
mov
push
jb
mov
jp
mov
add
cmp
add
stos
jl
sub
(bad)
xor
dec
push
xor
jns
outs
ror
jno
cmps
ds
jl
rcr
retf
scas
lods
pushf
jb
mov
fwait
pop
jge
shl
mov
cmp
cmps
sar
lea
out
retf
dec
pusha
mov
sub
std
sub
pop
std
popa
sbb
mov
xor
push
les
test
scas
xchg
mov
jp
xchg
adc
adc
(bad)
clc
inc
and
popa
mov
mov
sub
xor
cmp
jno
pop
and
or
or
loope
popf
imul
lock
pop
repz
sub
out
std
rol
cmc
jmp
push
push
mov
jno
and
int
imul
mov
jns
xchg
xor
stc
cld
push
cmp
(bad)
icebp
in
cld
jmp
jmp
test
ja
lods
adc
adc
push
ss
int3
cmp
pushf
sub
pop
enter
adc
lds
popa
inc
push
(bad)
xchg
mov
ror
(bad)
jle
stc
xor
push
into
and
and
(bad)
cs
leave
das
sbb
mov
xor
sub
leave
nop
fisub
or
(bad)
mov
cmp
push
lds
xlat
rcl
or
sbb
int3
daa
mov
inc
sbb
into
neg
mov
stc
inc
jmp
es
scas
bound
enter
inc
adc
fld
call
ret
das
or
inc
in
xor
mov
jbe
dec
add
ss
retf
into
call
jns
inc
div
xor
mov
xchg
(bad)
add
popa
fmul
mov
aas
and
fmul
cmp
dec
sbb
inc
fdivp
push
pop
test
leave
push
fisttp
cwde
icebp
arpl
sbb
int
sbb
loopne
jmp
out
push
jmp
into
out
inc
jae
push
push
mov
xor
aam
push
pop
cvtdq2ps
jbe
rol
test
xchg
mov
in
ret
ror
inc
(bad)
xchg
enter
lods
movaps
cmp
aam
mov
test
out
call
cmp
pop
addr16
ds
repnz
sub
cli
(bad)
test
or
jmp
(bad)
and
mov
mov
and
inc
fcom
repnz
inc
daa
inc
idiv
dec
sub
jbe
mov
iret
fadd
test
popa
dec
pop
scas
push
push
or
sbb
retf
stos
(bad)
cld
cmp
xlat
xor
and
and
add
cmp
jbe
addr16
or
fld
mov
inc
mov
adc
cmp
loop
addr16
mov
call
jmp
cmp
pusha
(bad)
fwait
imul
inc
jg
ins
rcr
adc
sub
out
mov
xchg
(bad)
fild
cmp
sbb
test
jle
inc
xchg
sbb
mov
lock
test
inc
cdq
cs
lods
aad
xchg
cmp
mov
lods
mov
aad
sub
jmp
sub
inc
aaa
movs
xor
sbb
mov
ds
inc
pop
xor
popf
iret
and
sub
mov
dec
sub
das
jmp
(bad)
(bad)
mov
(bad)
jns
imul
xor
cmp
pop
js
adc
mov
inc
inc
dec
inc
and
cmps
mov
cmp
aad
jg
cmp
jge
(bad)
hlt
stos
jns
jge
and
jle
ret
je
out
pop
je
das
test
loopne
lahf
dec
mov
xor
mov
pop
and
and
cmp
(bad)
fsubr
pop
jge
mov
retf
jno
jae
popf
scas
div
jge
jle
(bad)
xchg
add
push
lahf
dec
ss
fs
mov
lea
push
icebp
cmp
inc
div
std
push
xchg
push
ins
lock
lock
push
jo
fmul
jne
mov
jl
aad
pop
pushf
out
and
inc
arpl
ret
dec
jmp
jnp
cmp
inc
pop
push
bound
pop
ret
popf
cmps
movs
sbb
repz
pop
inc
cdq
in
ss
mov
sbb
inc
pop
mov
bound
retf
jecxz
pushf
pop
push
daa
xor
out
and
dec
pop
mov
inc
mov
or
inc
fwait
pop
ins
stc
push
enter
add
mov
or
lods
lods
cld
movs
xor
test
cmp
cmp
sub
jmp
cmp
cmp
push
xchg
push
cs
call
inc
mov
jmp
mov
and
cmp
cdq
sbb
in
dec
nop
push
dec
cmovo
add
mov
jl
mov
lods
fcomp
sbb
pop
inc
xchg
xchg
cmp
sahf
test
inc
das
jo
inc
cmp
icebp
out
fnsave
sub
mov
ds
je
leave
cmp
sar
push
sub
sub
nop
scas
jo
loopne
cld
sar
aad
addr16
lahf
cmp
enter
adc
test
and
jl
xor
inc
mov
add
and
rcl
dec
fidivr
(bad)
dec
rol
jnp
mov
xor
ss
and
ds
in
jbe
jnp
cwde
xchg
ficomp
rol
cs
ret
cmp
cdq
push
sub
or
and
dec
mov
repz
test
aam
repz
(bad)
gs
dec
inc
loop
retf
bound
jno
fs
cmp
sbb
mov
movs
pop
test
sar
ins
mov
cmp
ins
pusha
jno
mov
add
jbe
nop
sub
mov
(bad)
pop
aad
xchg
leave
pop
mov
adc
and
jmp
jo
repz
inc
sub
add
lods
sub
dec
hlt
and
xor
jns
push
sbb
fwait
test
ret
mov
pop
jo
std
pop
stc
bound
push
push
cld
xchg
push
push
test
xchg
loopne
push
ss
xor
fldcw
sti
fcmovnb
aas
imul
ret
jl
ds
in
int3
xor
jb
jno
scas
repz
xchg
pop
movs
cmp
sbb
jns
xchg
sub
retf
cmp
icebp
div
jecxz
push
jp
xchg
shl
jg
repnz
mov
push
repnz
xchg
adc
jp
inc
mov
outs
mov
dec
data16
fs
push
cmp
xchg
jns
sbb
cmps
pusha
adc
test
sbb
xchg
mov
rcl
mov
pop
arpl
es
jns
int
pop
xchg
mov
mov
lods
stc
cmp
sbb
sub
lahf
jecxz
test
mov
cs
aad
jmp
pusha
movs
jae
pop
mov
popa
arpl
xlat
sub
xor
and
lock
scas
in
push
fwait
or
or
fistp
or
mov
xor
cmp
adc
jmp
push
ret
lock
sub
mov
jmp
je
xor
enter
inc
pushf
and
and
or
imul
fnsave
adc
jne
pop
xchg
into
into
jae
xchg
and
jle
addr16
cmp
stc
fldcw
push
or
ret
cs
inc
aaa
jbe
push
sar
and
cdq
xchg
xchg
pop
mov
loopne
repnz
icebp
fimul
js
mov
jmp
pop
ds
(bad)
mov
mov
sbb
push
xchg
xor
ds
push
ror
add
adc
dec
arpl
xchg
pop
inc
scas
das
stos
into
xchg
jp
push
mov
js
cmp
jge
movntq
jno
fs
sbb
(bad)
movs
sbb
pop
jbe
sub
repnz
imul
sbb
fs
fcomp
call
stos
stc
mov
cmp
cli
pop
fstp
mov
push
mov
out
fadd
or
fadd
aas
xchg
sbb
and
lods
pusha
xor
sub
lods
fcomp
add
mov
aad
aas
jno
sub
icebp
pop
vmovhpd
adc
and
jno
and
ret
mov
sbb
dec
or
outs
rcr
and
fmul
adc
xchg
mov
jbe
iret
dec
cmp
ins
xchg
ds
outs
fs
mov
cmp
fstp
ret
push
cmp
sahf
add
xchg
rcl
mov
hlt
test
dec
mov
pop
mov
pop
xchg
std
imul
popa
cmp
je
(bad)
stos
pop
xor
out
ja
push
cmp
lea
pop
ror
jns
sbb
fs
cmp
(bad)
aam
icebp
dec
mov
cmp
xor
mov
fdivp
cmp
mov
repnz
pop
(bad)
xor
add
scas
add
nop
mov
retf
cmp
jge
or
data16
sbb
cmp
jns
mov
jge
mov
xchg
movs
sar
cmc
(bad)
pop
js
pusha
jno
jmp
cmp
sar
jecxz
adc
add
dec
xchg
and
iret
xchg
mov
jno
sbb
icebp
mov
pushfw
in
pop
dec
pop
jnp
test
inc
inc
xchg
addr16
xor
add
sub
or
xchg
div
push
and
push
xchg
inc
sbb
pop
pushf
add
fld
faddp
(bad)
mov
cmp
dec
stc
adc
xor
push
fild
cld
push
mov
movs
mov
ror
ins
scas
sub
lods
int3
or
sbb
shl
pop
(bad)
scas
das
inc
fcmovbe
dec
sub
mov
inc
test
and
aaa
jmp
mov
mov
dec
fdivr
(bad)
inc
push
retf
call
hlt
push
adc
xlat
sbb
xchg
sub
jecxz
pop
lahf
hlt
stc
into
push
les
sub
jecxz
push
cli
cmp
mov
sub
cwde
stos
gs
inc
pop
inc
mov
pop
dec
int3
inc
jnp
cmc
shl
and
pop
jns
repz
cmp
cld
cli
(bad)
cmp
enter
ds
pushf
mov
aas
fucomi
push
inc
pop
or
sub
inc
retf
adc
fidiv
call
scas
cwde
je
inc
inc
cmp
shr
int
dec
pop
cmp
pop
jmp
enter
ins
(bad)
cmc
jge
sbb
push
mov
cmp
sub
inc
add
xor
shr
(bad)
enter
sahf
inc
sbb
or
sbb
pop
cmp
sub
inc
sbb
loope
xlat
(bad)
enter
cli
shl
int
adc
cmps
cmp
je
outs
sbb
mov
xchg
mov
lock
cmp
sbb
test
pop
and
inc
push
pop
call
mov
test
test
leave
push
(bad)
fcomp
int3
push
rcr
pop
adc
fld
ss
xor
sub
mov
mov
inc
sbb
ret
sub
xor
push
leave
pop
test
or
jl
mov
sub
lods
mov
sbb
neg
test
pop
push
das
xor
inc
dec
enter
cmps
js
out
or
mov
mov
pop
retf
adc
les
les
imul
cmp
jge
jae
pop
jns
cs
mov
ficomp
test
mov
sub
jp
ds
xchg
std
cwde
std
jno
mov
or
aam
mov
sar
push
jle
xor
pop
add
or
mov
mov
xor
ror
(bad)
jmp
out
popf
repnz
out
sbb
clc
call
mul
jns
fistp
call
jmp
mov
inc
xchg
ret
pop
and
jp
(bad)
and
cmp
call
(bad)
xlat
fst
inc
std
aas
add
mov
xor
xor
adc
mov
sbb
fs
xlat
inc
call
cmp
adc
dec
sub
lea
scas
sbb
pop
push
lods
fnsave
loop
fs
xchg
rcr
inc
add
aaa
iret
dec
(bad)
inc
dec
mov
div
mov
xchg
(bad)
out
out
push
push
push
cmp
lds
push
mov
inc
and
outs
cs
fcom
enter
sbb
shl
push
sub
add
inc
loope
xchg
inc
aaa
int3
popf
mov
inc
dec
inc
push
pusha
inc
add
into
push
idiv
cmp
sbb
dec
jl
or
inc
jo
add
inc
cmp
out
pop
fmul
sar
or
repnz
jae
jmp
scas
or
inc
sbb
retf
fadd
or
test
movs
div
adc
push
xor
iret
fdivr
rcl
ror
rol
(bad)
mov
retf
adc
outs
add
sub
jnp
je
(bad)
leave
loop
(bad)
(bad)
sbb
pusha
mov
das
jge
aaa
or
out
and
xchg
test
mov
adc
outs
mov
fdiv
push
jmp
mov
or
sub
cmp
imul
and
jmp
mul
iret
xchg
arpl
dec
and
or
xchg
shl
stc
aas
push
and
mov
mov
pop
imul
pop
add
shr
xchg
jge
mov
test
stc
dec
imul
ret
cmps
cdq
mov
inc
lods
daa
push
inc
xlat
out
ret
add
push
mov
mov
call
add
add
fincstp
mov
mov
cmp
nop
jno
popf
jnp
inc
sbb
xor
shl
adc
scas
(bad)
movs
out
mov
and
jo
mov
lock
data16
adc
push
add
jns
loopne
fnstsw
data16
xchg
sbb
pop
mov
test
mov
cmp
rcl
test
repz
mov
mov
push
adc
jae
pop
out
cld
lods
and
jb
das
mov
leave
hlt
daa
xchg
or
jo
xchg
(bad)
sbb
mov
imul
sbb
sub
jno
mov
or
ds
push
mov
cmp
adc
mov
push
mov
cdq
sub
jge
ret
fdivr
cmp
je
jl
in
or
pop
jmp
jae
and
mov
test
or
pop
dec
aam
repnz
outs
mov
clc
dec
jno
adc
push
adc
outs
xor
dec
jno
sbb
jl
add
fdivr
hlt
ret
adc
nop
jmp
sub
pop
mov
push
arpl
jnp
ins
mov
hlt
out
cmp
jmp
cmp
jge
repz
rcr
xchg
xchg
adc
cmp
aam
jmp
int
jno
dec
(bad)
(bad)
cmp
in
test
cmp
clc
cmovne
je
jl
arpl
call
(bad)
ss
int3
es
fucomi
sbb
cmp
jno
(bad)
jne
mov
cmp
in
mov
cmp
movs
scas
sti
inc
inc
push
imul
or
mov
push
cmp
jbe
inc
jecxz
imul
out
fistp
or
std
in
aas
repz
lock
ins
inc
or
adc
inc
sub
sbb
xlat
enter
(bad)
fs
jns
mov
inc
jno
adc
cld
xchg
push
push
out
sub
retf
sbb
mov
pop
shl
dec
cmp
mov
xor
int3
stc
aaa
cmc
inc
(bad)
test
cmp
jo
pop
sbb
addr16
cmps
pop
xor
or
mov
cmp
inc
mov
lods
fwait
outs
inc
clc
in
dec
jl
add
jne
scas
xchg
jbe
inc
ret
pop
fisubr
(bad)
dec
inc
xchg
xchg
sbb
mov
jmp
outs
and
inc
in
push
dec
out
retf
adc
das
cwde
xchg
sbb
aas
inc
mov
call
fist
std
lds
or
sub
gs
cdq
clc
aaa
jns
mov
inc
ss
jecxz
inc
arpl
inc
mov
jno
movs
cmps
xor
add
jmp
inc
mov
inc
pushf
or
ja
jae
test
outs
and
inc
pop
shr
loopne
leave
retf
inc
add
add
clc
mov
jno
jns
jne
adc
retf
into
cmp
inc
jbe
bound
ins
pxor
loop
(bad)
retf
inc
cmps
pushf
fdivr
inc
rol
pop
sbb
imul
fidivr
xor
into
sar
(bad)
enter
inc
hlt
out
push
push
cmp
int3
inc
popf
mov
sahf
jno
inc
xchg
aaa
xchg
xchg
push
ins
clc
adc
int3
ja
inc
(bad)
mov
add
inc
fist
inc
jp
sub
sti
dec
(bad)
cmp
fs
jg
jl
out
jne
jbe
jae
mov
repnz
or
sbb
pop
cmp
lods
pop
add
les
and
inc
lahf
sub
fdivr
push
xor
iret
rol
fadd
inc
out
dec
jl
xor
adc
mov
pop
retf
js
hlt
leave
cmp
cmps
xor
push
imul
ret
inc
stc
sub
repnz
cmp
jmp
call
xchg
or
(bad)
stos
cmps
test
mov
push
test
cmps
sub
jg
fs
fwait
inc
push
and
jno
inc
arpl
pusha
pusha
xchg
mov
jg
outs
clc
push
sub
push
fist
inc
pop
nop
in
mov
retf
ins
mov
loope
xor
adc
mov
cmps
pop
pop
shl
dec
lods
and
jmp
in
sbb
push
sbb
sub
mov
test
aas
data16
xor
sub
push
jo
adc
(bad)
out
fldlg2
ret
sub
dec
push
pop
xor
and
std
sbb
shr
stos
out
sub
jno
out
jmp
mov
lods
push
mov
test
js
test
ds
gs
shl
cmp
xchg
lds
mov
cmp
jbe
mov
xchg
jmp
push
cmp
sbb
cmp
neg
push
pop
test
fcomp
pop
push
call
or
(bad)
pop
and
scas
cmp
mov
pop
sub
sti
(bad)
jmp
add
mov
xchg
sbb
adc
sahf
mov
mov
jbe
fcom
fwait
xor
arpl
aas
pop
mov
pop
sti
cmc
fld
and
fisub
dec
js
shl
test
ins
mov
jle
stc
jmp
cmp
xchg
adc
jb
sub
gs
nop
loop
mov
push
mov
or
stos
(bad)
jge
jecxz
xchg
sar
jg
fisttp
shr
push
jns
sbb
pop
push
or
cmp
xchg
mov
xchg
push
div
inc
mov
in
xor
sub
outs
mov
daa
cmp
xor
sbb
push
adc
sub
cld
data16
pop
xchg
rcr
push
out
mov
fsub
jle
pop
pop
shr
jle
mov
retf
push
loopne
and
call
ds
test
sar
cmp
js
pop
sub
repz
jae
sbb
lock
sub
jp
or
ins
sbb
dec
sub
and
inc
mov
popa
inc
xchg
je
fistp
and
cwde
jns
or
lea
cmp
mov
mov
retf
cmps
jg
and
push
outs
dec
sub
mov
add
dec
(bad)
jns
outs
push
dec
inc
pop
inc
pop
dec
pop
inc
pop
inc
std
pop
rol
mov
les
or
inc
cmp
adc
push
fcmovnbe
mov
inc
movs
cdq
lods
mov
pop
cmp
popa
(bad)
sbb
nop
jb
cmps
push
or
mov
lea
jp
hlt
mov
not
call
jo
(bad)
inc
out
add
clc
mov
dec
cld
imul
repz
rol
xchg
in
(bad)
pop
inc
aad
imul
jnp
addr16
loopne
dec
push
(bad)
sbb
js
hlt
(bad)
inc
ja
call
dec
inc
push
nop
mov
xchg
push
or
sbb
and
mov
test
inc
jne
pop
rcl
adc
sbb
das
add
(bad)
in
inc
inc
in
aad
enter
fistp
cli
les
adc
jne
in
aad
lock
in
loop
sbb
pop
pusha
loopne
std
mov
inc
stos
jl
xchg
xchg
aaa
xchg
and
ins
sar
inc
dec
in
jmp
mov
xchg
mov
xchg
mov
pop
inc
or
lods
or
int
dec
pop
dec
inc
fcom
jnp
xchg
pop
rcl
inc
sbb
(bad)
xor
dec
inc
xor
int3
cmp
adc
xor
aaa
or
sbb
inc
iret
repz
and
or
sub
mov
sti
loope
xor
mov
mov
sub
push
inc
cmps
fidiv
sub
xchg
mov
inc
push
sbb
clc
mov
inc
stc
pop
push
jo
aaa
inc
repz
and
cmp
inc
popa
mov
arpl
aam
inc
int3
mul
push
jmp
data16
loopne
pushf
inc
(bad)
pop
ja
or
cld
daa
inc
cmp
ror
aam
aad
fild
dec
lods
xchg
test
shr
or
xor
pop
mov
out
cmp
add
icebp
inc
cmp
bnd
ss
mov
mov
pusha
bound
movs
les
data16
lahf
fld
add
pop
jle
into
js
pop
mov
xor
rol
mov
adc
add
int3
fild
xor
xchg
lods
test
cld
push
sti
cmp
sbb
mov
cmp
scas
pushf
jle
repz
mov
adc
inc
push
xchg
js
retf
mov
out
xchg
sbb
(bad)
call
cmp
and
sub
fnstenv
cmp
in
mov
inc
int3
sub
push
stos
inc
mov
push
call
or
ja
inc
icebp
adc
sub
push
fxch
mov
sub
adc
pcmpeqb
rol
addr16
pop
js
std
pushf
repnz
in
sub
shl
out
fiadd
sub
push
xchg
xchg
aas
aam
cmp
push
jl
fiadd
sbb
(bad)
dec
retf
pop
cdq
cmps
inc
popa
jecxz
int
jns
in
sbb
call
retf
push
iret
pop
inc
rcr
mov
imul
or
cmp
add
stos
xchg
xchg
mov
add
mov
shr
xchg
inc
jbe
(bad)
in
sbb
adc
push
xor
retf
icebp
cmp
mov
ss
jne
jl
jno
iret
sti
test
ja
call
loop
hlt
fwait
daa
pop
jp
fmulp
gs
inc
jbe
pusha
and
repz
or
shl
rol
icebp
fnstenv
out
fs
ror
mov
cmp
fist
mov
xchg
(bad)
fwait
mov
xchg
add
xor
xor
shr
pop
mov
xchg
and
aas
cmp
stc
imul
cmps
pop
or
xchg
push
ror
xor
add
inc
(bad)
sbb
cmp
pop
mov
inc
jne
cli
sahf
mov
sbb
jmp
dec
fisttp
mov
add
sub
cmp
cmp
scas
push
sub
add
or
rcr
push
fnstcw
add
rol
xor
stos
sbb
xor
rcr
cmp
cmp
sbb
and
push
add
(bad)
fld1
inc
lods
inc
mov
pop
or
inc
mov
adc
gs
call
out
jb
jnp
mov
jg
outs
ins
inc
mov
xchg
imul
imul
fiadd
test
in
inc
jae
out
das
test
fs
pushf
js
adc
jg
pop
int3
jmp
test
push
aad
push
push
test
inc
xchg
adc
and
call
retf
pop
mov
in
push
rol
or
xor
sbb
stc
cld
test
or
jns
ret
xchg
mov
repz
jns
in
cmp
mov
cmp
cwde
outs
fldenv
mov
dec
movs
sbb
movs
mov
fwait
enter
and
aas
jecxz
jno
inc
(bad)
adc
dec
sub
test
push
push
js
and
icebp
jl
push
lahf
aaa
sahf
cs
add
scas
or
leave
cli
push
std
fwait
outs
fimul
sub
mov
icebp
ins
call
xchg
push
adc
push
jge
test
cmp
fcomp
pop
popf
mov
xchg
jp
cmp
push
pop
ins
fs
mov
(bad)
cmp
and
test
mov
sub
or
cld
add
loop
sti
and
ds
loop
pop
inc
dec
ds
inc
mov
sub
fsubr
push
xor
jno
cmp
xchg
push
lods
out
sub
jle
hlt
xchg
aad
mov
fcomp
adc
cmp
jno
scas
mov
push
or
cmp
cs
adc
sar
mov
push
or
js
fdiv
xor
or
test
fs
retf
les
add
adc
jne
push
cmp
repz
sar
ss
push
xchg
sbb
ret
fwait
mov
push
and
mov
pop
aas
jno
retf
(bad)
call
sbb
inc
and
pop
sub
gs
repnz
mov
imul
das
sub
arpl
rcr
or
and
mov
mov
hlt
bound
jb
cmp
push
lds
adc
jg
shl
fidivr
jns
jne
mov
scas
dec
ds
int3
pop
jno
mov
jp
xor
int
fiadd
sbb
in
lods
(bad)
imul
test
pop
mov
nop
test
test
adc
cmp
and
mov
je
inc
je
call
mov
inc
cmc
push
mov
imul
aas
pop
pop
popa
mov
lahf
sbb
jno
and
mov
push
bnd
and
lds
imul
addr16
sbb
icebp
loopne
dec
xchg
mov
push
jae
stos
loopne
ja
xchg
lods
stos
arpl
test
jmp
xchg
cmp
jbe
and
cmp
movs
aas
xchg
dec
push
test
dec
retf
movs
lds
add
pop
xchg
pusha
adc
imul
and
mov
mov
(bad)
je
pop
jno
psraw
mov
sbb
loopne
lock
jmp
mov
fsub
test
test
sbb
fs
fistp
shl
xchg
mov
pop
dec
add
aaa
outs
movs
jp
pop
and
call
pop
inc
sub
jp
stos
test
jmp
xor
mov
pop
retf
push
ror
mov
pop
dec
mov
push
cmp
sbb
add
xor
dec
mov
sar
movs
fmul
fist
cdq
test
mov
(bad)
push
das
(bad)
jge
xchg
ja
jmp
cmp
lods
aas
mov
xchg
jg
inc
ja
js
loopne
xor
movs
jns
push
outs
jmp
pop
mov
jbe
(bad)
cmp
out
or
je
cli
fild
(bad)
jl
lods
js
inc
and
in
(bad)
mov
out
xchg
inc
je
ror
xor
cld
pop
jno
inc
retf
aas
into
pop
adc
sub
dec
jns
dec
sub
and
inc
or
call
scas
xchg
or
das
out
xchg
mov
inc
push
inc
lahf
(bad)
sub
mov
jle
jl
ja
cmp
jb
inc
fnsave
repz
xchg
ret
inc
or
or
push
xchg
lea
inc
adc
loopne
xchg
scas
sub
lds
cmp
movs
pop
add
out
pop
and
enter
mov
(bad)
cmc
cmp
(bad)
arpl
stos
adc
in
mov
lods
jle
xchg
ins
cmp
jg
addr16
fwait
mov
adc
sahf
stos
xlat
outs
js
cmp
sub
mov
mov
int
dec
and
add
shl
mov
mov
inc
inc
movs
pushf
mov
or
lods
inc
jb
mov
inc
shl
imul
ds
mov
(bad)
inc
adc
fincstp
mov
fisubr
stos
dec
jle
mov
(bad)
mov
sub
movs
xchg
stos
mov
ja
jp
dec
and
inc
cli
and
mov
or
cmp
sbb
mov
mov
mov
inc
(bad)
in
mov
dec
fsubr
inc
hlt
jmp
pusha
adc
pop
pop
out
(bad)
and
or
mov
fcomp
dec
ror
mov
in
push
mov
dec
test
jne
inc
cmc
mov
out
stc
cmp
data16
sub
jecxz
lds
pop
inc
or
mov
dec
or
imul
inc
mov
in
push
call
fsub
test
or
and
xor
cmps
imul
fs
cmp
lods
cli
sti
popf
(bad)
loopne
pop
cmp
mov
daa
fwait
dec
inc
push
xor
iret
sub
es
sub
shr
adc
mov
mov
dec
pop
int
mov
sahf
sbb
fdivr
mov
jns
fs
js
xor
imul
sub
aas
xchg
cmp
(bad)
(bad)
(bad)
dec
inc
pop
ds
xchg
push
xchg
or
mov
mov
dec
inc
adc
pop
jge
xlat
jnp
push
pop
mov
cmp
push
int
inc
popf
cmps
inc
inc
(bad)
cmp
test
ret
repz
mov
xchg
xchg
jp
and
adc
fldl2t
mov
jae
ins
adc
in
jmp
mov
jnp
and
movs
cmp
xchg
cmp
clc
out
enter
repnz
inc
div
cmp
in
xor
mov
idiv
(bad)
mov
pop
stos
xor
mov
mov
sub
hlt
inc
retf
inc
xor
xchg
mov
pop
pop
(bad)
lahf
or
or
mov
lds
stos
shl
cmp
ror
xor
lds
hlt
xor
push
inc
add
xor
mov
jbe
movs
pop
gs
jg
aam
push
xchg
test
xlat
aas
rcr
adc
shr
mov
cli
inc
xor
sahf
adc
jmp
add
cs
push
sub
pusha
call
cwde
jp
cld
inc
push
sbb
jle
push
xchg
inc
out
add
stos
sub
fdivr
or
or
mov
and
mov
jge
jmp
neg
mov
shl
sub
push
leave
scas
jo
out
sub
stos
lahf
pop
(bad)
imul
arpl
aad
pop
int
push
int3
fmul
push
inc
mov
clc
push
cmp
mov
arpl
push
inc
mov
jge
fs
icebp
cmp
cli
mov
jne
jo
repz
rcl
stc
cmp
retf
dec
and
icebp
and
pop
pop
push
sbb
stc
sbb
cmps
push
int3
or
or
xchg
mov
xchg
sbb
mov
std
mov
or
ja
cli
cmp
fidivr
dec
mov
je
cmp
push
sub
ficomp
sub
jno
rol
jge
lods
jg
cmp
jns
ss
push
adc
das
iret
jae
inc
repnz
mov
nop
or
pushf
mov
aaa
add
out
add
scas
adc
mov
jecxz
mov
mov
dec
sbb
inc
ss
xchg
aad
repz
fcmovu
jns
mov
pushf
cmps
add
inc
jno
fcmovu
push
adc
(bad)
out
fdiv
push
sbb
push
std
or
cmps
cli
aad
push
sbb
mov
xlat
jle
shl
leavew
jmp
shr
rcl
or
cld
adc
ds
jb
(bad)
cmp
pop
imul
cmc
cmp
push
sbb
push
fdivr
test
xchg
inc
or
jns
stc
and
push
mov
retf
cmp
std
es
inc
cmp
inc
mov
xor
sahf
dec
sti
cmp
test
iret
or
jmp
mov
(bad)
cwde
dec
inc
sbb
mov
ins
inc
pop
cmp
je
sub
xor
out
adc
mov
sbb
in
ror
sti
out
aas
add
push
test
js
fs
daa
in
push
inc
mov
out
mov
icebp
pusha
sub
scas
je
daa
mov
das
mov
mov
xor
ds
xor
test
cmp
(bad)
repnz
bswap
mov
repz
mov
out
pop
xchg
mov
loopne
aaa
cmp
adc
inc
in
rcl
and
push
adc
fwait
(bad)
mov
scas
lods
cmps
out
xor
xlat
int
adc
pop
scas
(bad)
loopne
fnstcw
mov
cmp
dec
into
mov
jmp
stc
stc
pop
or
and
aam
sbb
jl
inc
pop
sar
pop
xchg
jae
xor
sub
or
mov
cmp
aad
stc
xchg
xchg
gs
cmc
inc
cmps
ss
daa
jp
jno
mov
push
aas
(bad)
push
mov
push
push
mov
sbb
jl
sub
fidivr
test
mov
or
jmp
xchg
and
dec
aaa
pop
das
mov
movs
mov
into
leave
adc
xchg
fs
and
and
jmp
and
dec
add
jg
daa
fsubr
hlt
ror
sub
jmp
pop
es
sbb
dec
or
test
mov
ret
xor
push
sub
mov
test
sbb
push
cmp
mov
enter
mov
add
pop
test
sub
or
and
out
cmp
cld
inc
adc
rcr
adc
jns
inc
jp
mov
fs
pop
xchg
pop
mov
adc
into
aas
ins
xchg
fsubr
out
jmp
mov
stc
sbb
mov
dec
std
pop
js
icebp
mov
imul
hlt
xor
scas
jns
pop
xor
jnp
or
stos
fisttp
mov
mov
jns
mov
xor
loope
(bad)
mov
(bad)
pop
jnp
aam
or
iret
adc
mov
pop
movs
loop
popa
mov
jl
and
inc
js
jb
aad
mov
cdq
retf
mov
jae
mov
lock
push
ret
add
fimul
push
repz
mov
mov
push
(bad)
repnz
(bad)
sbb
xlat
pop
sub
aas
stos
shl
dec
inc
int
xor
xchg
inc
sahf
lea
rcl
mov
dec
(bad)
aas
je
sub
jae
dec
arpl
xor
ja
retf
jmp
inc
ins
push
or
push
cli
pushf
inc
call
xor
lock
sub
xchg
adc
sub
sti
adc
shr
sub
push
mov
jb
outs
fs
cmp
in
inc
pushf
bnd
outs
sub
inc
add
jae
int3
mov
scas
cli
inc
hlt
call
xchg
jo
add
inc
sbb
and
loopne
retf
jmp
pop
mov
inc
jae
fwait
mov
out
cmc
jecxz
jo
inc
adc
lods
xor
add
dec
ds
inc
mov
xor
adc
stos
rcl
or
outs
lahf
mov
xor
scas
fnstsw
ins
aad
add
jae
dec
cmp
pop
sbb
addr16
icebp
xchg
pop
popa
lods
jmp
pusha
jno
inc
and
sub
push
push
mov
js
jecxz
out
(bad)
fs
mov
or
in
pop
mov
xchg
pop
mov
adc
mov
or
clc
inc
fadd
cmp
mov
mov
mov
push
sub
jb
jno
out
jl
inc
fsubr
inc
mov
xor
inc
adc
sbb
int
pop
movs
daa
pop
out
das
retf
mov
jno
pop
or
retf
dec
fbld
jnp
loopne
into
sub
(bad)
aaa
inc
cmp
(bad)
mov
or
jp
jns
movs
stc
data16
or
aaa
js
xchg
mov
cmp
cmp
jo
cmp
mov
jno
int
cli
sahf
icebp
sbb
wrmsr
pop
jge
dec
nop
sbb
add
sub
aas
jp
jns
pusha
dec
sub
jge
js
repnz
fidiv
ss
icebp
xor
xor
or
ja
mov
repz
jg
push
in
cmp
jne
jle
clc
mov
jl
jae
aaa
mov
enter
pop
mov
or
mov
xor
popa
dec
xor
sub
jne
push
in
cmp
mov
inc
mov
jmp
inc
je
shl
jp
and
jns
add
cmp
(bad)
aaa
jmp
leave
mov
inc
cmp
jns
sub
jnp
inc
jle
dec
mov
mov
cmp
pop
leave
in
xchg
jle
je
mov
out
je
or
stc
or
sbb
adc
sub
mov
lock
retf
xor
xchg
je
add
cmp
icebp
call
or
js
cdq
pop
sub
push
fstp
cs
test
ss
mov
cs
into
jge
push
jns
test
or
mov
pop
cld
push
inc
fs
or
inc
(bad)
xchg
pushf
movs
inc
cmp
push
ins
sti
jle
sbb
push
xchg
jge
iret
popa
stos
sub
ror
imul
cmp
mov
mov
mov
retf
loope
sub
and
in
adc
aaa
fcom
vmread
test
fs
punpckhbw
cmp
imul
lahf
dec
mov
aaa
sbb
jae
jno
ins
pusha
sub
mov
xchg
or
or
dec
xor
cmp
mov
xchg
dec
mov
dec
jmp
(bad)
jb
jg
cmp
pop
les
xor
sbb
sti
mov
ss
xchg
xchg
cld
dec
jg
jl
or
xor
jbe
cmp
jno
rcr
xchg
jmp
lea
inc
loope
jb
jle
push
jb
sar
push
int
cmp
and
jmp
idiv
in
dec
xor
mov
and
mov
cld
xchg
jb
fs
add
mov
xor
hlt
mov
jo
lods
movs
push
push
sbb
or
imul
mov
loopne
test
popf
adc
je
add
dec
out
sub
ret
dec
pop
mov
icebp
mov
cli
sub
xor
cli
dec
sbb
ds
jno
repz
xchg
mov
jnp
pop
sbb
mov
movs
sar
shl
sti
daa
sub
add
sbb
and
adc
jecxz
lahf
add
xchg
and
jl
lahf
pop
fldenv
int3
neg
rol
or
loope
fs
mov
nop
cmp
inc
(bad)
push
add
ret
popa
inc
sahf
and
push
jle
mov
lock
fsubr
addr16
ds
jmp
popf
inc
xchg
lahf
mov
imul
adc
clc
adc
mov
sbb
push
sti
retf
inc
fidiv
addr16
loopne
inc
rcl
clc
push
pop
mov
mov
jg
pusha
fxch
adc
loope
push
adc
in
cmp
dec
out
fnstcw
or
mov
pop
retf
bnd
xor
js
inc
xchg
add
inc
mov
or
xchg
or
xchg
xchg
ins
push
xor
push
jp
mov
(bad)
cmp
scas
repnz
mov
dec
dec
xlat
call
cmp
sbb
fs
out
jecxz
inc
jmp
fsubr
imul
push
sahf
sub
jno
test
ret
test
push
and
aad
xchg
xor
pop
rcl
cld
sub
xchg
cmp
and
retf
scas
or
pop
mov
add
popf
inc
jge
in
xor
sar
jmp
mov
cmp
sub
out
addr16
adc
xchg
and
leave
aam
sbb
(bad)
add
jle
mov
ds
out
push
push
test
dec
or
inc
sub
fbstp
mov
ds
jmp
scas
dec
(bad)
lods
push
ins
cdq
cmp
jns
in
cmp
pusha
xchg
test
js
sbb
fiadd
pop
sub
js
cmc
fwait
cmp
movs
lods
cs
(bad)
(bad)
cmp
pop
(bad)
ja
mov
pusha
pop
cmp
ja
or
icebp
dec
sub
lea
jns
ja
enter
adc
lods
mov
adc
mov
mov
hlt
add
std
shl
sti
pop
int
xchg
pop
loope
mov
repz
icebp
add
mov
push
sbb
rcl
enter
dec
dec
mov
outs
fmul
or
retf
push
fwait
inc
sbb
mov
imul
xchg
mov
xchg
pop
sbb
retf
ss
push
shl
cdq
jno
inc
call
js
cmps
inc
and
dec
pop
inc
dec
pop
inc
push
ja
pop
dec
inc
mov
inc
jge
mov
cld
into
(bad)
sbb
inc
ds
cmc
xor
out
test
cmp
add
pusha
gs
js
dec
data16
lea
inc
and
mov
fs
(bad)
fistp
fadd
(bad)
dec
fisttp
inc
mov
add
adc
cmp
retf
fsubr
jmp
call
fs
xor
inc
xchg
cli
pop
push
test
inc
fsub
ss
inc
mov
in
lea
daa
movs
inc
loopne
inc
out
dec
iret
hlt
(bad)
loope
inc
imul
lock
call
push
sbb
dec
into
push
inc
ins
stos
cmp
fs
repnz
pop
iret
push
cmp
lods
inc
push
add
mov
loope
cmp
mov
mov
loopne
or
out
js
movs
sub
mov
jne
mov
mov
mov
cmp
sub
fstp
or
sbb
sub
mov
or
adc
inc
icebp
and
lods
pop
dec
cmp
dec
jg
push
inc
repz
je
inc
and
dec
inc
jle
dec
or
stos
mov
arpl
test
mov
in
pop
cmp
outs
pop
and
movs
loopne
or
pushf
movs
adc
outs
out
mov
xchg
inc
jmp
jge
loope
sub
inc
sub
xor
inc
sbb
inc
rol
dec
mov
push
mov
cmp
outs
in
sbb
sub
or
mov
cmp
in
jbe
push
push
dec
or
(bad)
inc
stos
pop
pop
bound
nop
cmp
and
aam
mov
sbb
add
jmp
or
mov
and
inc
stos
xor
push
dec
lods
cmp
or
scas
cmp
add
pop
cmp
imul
inc
loopne
dec
pop
out
daa
sbb
and
inc
add
lock
fsubr
gs
outs
and
cmp
arpl
fcomp
inc
cmp
dec
lea
xchg
mov
shl
lods
outs
push
xor
adc
jmp
xchg
mov
jno
mov
xchg
retf
retf
inc
sub
stos
lahf
add
mov
jmp
test
aad
ds
sub
fcomp
dec
adc
inc
jle
push
or
repnz
gs
out
mov
aas
mov
xor
loopne
nop
xor
add
fwait
lahf
add
and
cmc
add
stc
test
cld
pop
sub
outs
jbe
mov
sub
adc
sbb
fwait
and
inc
push
xor
push
ficom
mov
pushf
and
lods
jmp
push
mov
mov
add
hlt
int3
mov
push
je
aam
push
cmp
sbb
icebp
pop
dec
mov
or
aam
adc
ins
xchg
int3
(bad)
into
dec
jns
inc
ins
imul
xchg
push
imul
into
ror
aaa
pop
dec
scas
leave
cmp
lea
sbb
dec
xor
push
inc
mov
sbb
mov
add
bound
push
enter
or
push
and
movlps
add
push
push
mov
dec
xor
xor
mov
aad
das
das
sar
arpl
inc
cmp
cmps
rcl
pop
je
into
pop
jno
ds
and
retf
fnsave
add
dec
ss
dec
cs
jl
(bad)
aas
sbb
cmp
push
in
mov
dec
ds
jle
test
sub
call
sbb
mov
ds
cmp
dec
inc
sbb
sti
xchg
sub
mov
cmp
jns
mov
xor
(bad)
adc
repz
fs
lea
lahf
retf
popf
movs
inc
add
outs
sbb
mov
inc
and
ret
ror
in
xor
retf
rol
cmp
and
ins
sbb
and
add
push
and
dec
lea
add
test
pop
mov
loopne
int
and
(bad)
lahf
pop
push
mov
fwait
mov
push
sbb
cmp
xor
or
daa
sbb
jae
xchg
cwde
imul
push
xor
sbb
fild
jl
push
push
fcom
or
test
adc
add
and
inc
out
add
retf
mov
out
jecxz
mov
outs
jp
xor
sbb
inc
retf
pop
es
out
int3
push
cmc
push
bound
daa
sbb
jl
(bad)
or
ds
xor
xlat
add
in
mov
xchg
jo
jmp
cmp
repnz
sbb
xchg
inc
xchg
mov
cdq
pop
(bad)
aas
cs
daa
inc
sub
cmp
inc
adc
fmul
cmp
ret
inc
popf
inc
push
xor
or
xor
inc
stos
mov
ins
push
inc
out
jmp
cmp
and
ins
mov
fld
and
cmp
out
test
cmp
sub
cmp
(bad)
mov
jle
pminub
inc
ror
dec
inc
or
(bad)
into
leave
nop
arpl
xor
popf
fxch
cmp
cmp
and
inc
cmp
sub
aam
pop
push
push
popa
loopne
addr16
push
inc
mov
inc
jmp
sub
out
xchg
xchg
mov
imul
mov
js
adc
xor
repz
dec
cdq
sub
sahf
fs
outs
dec
cli
xchg
mov
sbb
cdq
jnp
ins
mov
and
pop
inc
dec
(bad)
(bad)
push
xor
mov
or
mov
movs
mov
xchg
and
fnstcw
cmp
sub
(bad)
shr
push
ret
test
push
(bad)
dec
sbb
fwait
adc
and
aaa
outs
add
jg
jge
test
retf
or
(bad)
jns
mov
hlt
into
pop
in
sbb
(bad)
push
aad
add
inc
add
jge
adc
xchg
xlat
inc
pusha
xchg
sub
inc
mov
jecxz
mov
xchg
inc
xor
jns
mov
loopne
addr16
jmp
mov
jno
jo
cmps
add
shl
cmp
stc
jge
pop
pushf
cmp
cli
cmp
sbb
loope
adc
jb
out
cmps
das
cmp
mov
lea
jns
into
call
out
adc
sub
push
aas
inc
jg
jns
jne
ds
mov
jns
rcl
pop
mov
not
vmread
adc
mov
(bad)
retf
loope
ja
jno
add
pop
mov
loope
jmp
or
jg
pop
scas
sbb
es
mov
cmp
and
jno
into
add
cmps
sub
loop
fs
sbb
movs
cmc
loopne
pop
or
jns
repnz
fs
sbb
rcr
fstp
xor
mov
mov
pop
jns
add
call
push
test
xchg
mov
je
stc
dec
ss
jg
mov
pusha
iret
sbb
pop
and
jl
jb
xor
dec
pop
jo
push
stos
aad
xor
sahf
enter
cmp
mov
popa
xchg
in
adc
ins
mov
adc
xor
shl
add
sahf
xor
jge
repnz
or
mul
jbe
mov
jns
mov
inc
cmp
cmp
push
cmp
fnsave
dec
pop
jo
adc
shl
jp
jge
daa
das
lea
jp
ins
pop
cpuid
mov
mov
jge
push
dec
pop
sbb
jae
mov
jne
add
jmp
push
jns
xchg
sbb
aam
(bad)
cmp
in
iret
sbb
mov
mov
push
cmp
pop
iret
and
cmp
out
jno
iret
sbb
aam
pop
sub
icebp
repz
jnp
jge
fisubr
push
and
shl
pop
shr
out
or
ss
icebp
push
xchg
mov
jne
cmps
icebp
les
imul
mov
and
inc
cmp
jl
mov
and
pop
lock
xchg
jle
sub
lea
push
or
cmp
sub
jns
fcmovne
xor
ds
and
test
jge
test
jle
aas
push
idiv
movs
imul
mov
or
adc
jne
and
push
inc
inc
test
(bad)
push
call
pushf
std
aas
(bad)
inc
das
cmps
or
push
xchg
arpl
cmp
aaa
sub
cmp
cmp
in
stos
fld
ja
mov
pop
mov
sbb
inc
je
jl
das
jge
push
pop
pop
clc
cmp
or
les
cdq
xchg
sbb
inc
jl
cmp
push
ret
push
scas
cmc
adc
jp
addr16
xor
cs
jge
fiadd
call
add
add
cmp
(bad)
cli
pop
imul
sti
call
push
mov
shr
jmp
movs
jns
xor
movs
cmovo
cmp
pop
enter
xor
mov
mov
jnp
dec
sub
or
loopne
and
cmc
clc
inc
sub
into
xor
or
popa
push
in
aas
sub
imul
jb
je
fdivr
cmp
cmp
or
fwait
pop
dec
adc
dec
cmp
dec
ds
daa
scas
inc
in
out
adc
mov
inc
sar
xchg
test
aaa
loopne
arpl
ss
int3
test
add
mov
cld
jmp
cli
push
fbstp
sysenter
xor
ficomp
fcmovbe
add
jbe
push
inc
ffree
inc
pop
lds
test
or
sub
aas
push
aam
leave
inc
push
mov
and
or
jmp
xchg
dec
loope
sar
jge
cmp
ret
mov
aas
fidiv
xchg
leave
xor
jle
or
pop
mov
mov
ss
pop
aas
inc
xchg
mov
adc
shr
rol
adc
addr16
pop
add
or
jns
or
out
sub
fbld
cs
mov
push
std
stc
(bad)
cmp
jg
pop
sar
jno
(bad)
or
jle
imul
xor
aad
mov
xchg
cmp
clc
and
cmp
jno
inc
shl
dec
xchg
stos
dec
mov
outs
and
cmp
jo
inc
ficom
xor
cs
cmp
bound
jno
jp
inc
cmp
push
inc
and
push
sub
cmps
call
in
aam
xchg
repnz
cmp
cdq
test
fnstsw
retf
aad
push
rol
add
dec
sti
fucom
jbe
loop
push
fldl2t
div
mov
stos
sti
inc
pop
pop
aaa
xlat
dec
mov
js
ftst
inc
sub
push
xchg
cmps
loop
inc
or
adc
xchg
sub
in
xor
inc
jno
adc
dec
push
inc
add
bnd
ror
hlt
xor
cld
and
dec
retf
inc
(bad)
dec
jge
jg
shr
mov
cmp
mov
leave
jecxz
mov
inc
and
daa
ret
stc
jmp
jbe
pop
fisttp
pop
aaa
loopne
repnz
(bad)
xchg
mov
ror
sbb
sti
push
inc
or
fiadd
xchg
shr
dec
inc
mov
and
dec
enter
or
enter
rcl
inc
dec
xor
xor
inc
cmps
mov
inc
and
inc
std
ins
hlt
xor
rep
mov
jle
mov
cwde
stos
cmp
vpsubq
xor
push
ds
push
ins
popf
or
sbb
jmp
lea
mov
shr
push
scas
sti
pop
inc
xchg
push
or
fwait
or
fldcw
mov
sbb
push
inc
inc
lahf
mov
xor
sar
retf
fst
(bad)
pop
enter
inc
movs
stos
inc
mov
cmp
ds
rcl
jmp
hlt
inc
xchg
shr
pop
mov
mov
aas
add
loope
adc
inc
fstp
xchg
in
fs
rcl
mov
inc
ror
push
imul
mov
dec
pop
push
xor
call
sbb
fisubr
pop
push
int
push
inc
inc
ds
mov
mov
cmp
cmp
(bad)
js
repnz
inc
ret
cwde
push
call
or
inc
es
xchg
adc
push
mov
call
lahf
stos
test
and
cmp
cmp
adc
push
adc
push
test
aam
fabs
mov
sub
clc
sub
(bad)
loop
cmc
or
and
xor
or
xor
jecxz
fadd
cmp
jge
dec
fiadd
or
fadd
out
popa
mov
inc
xchg
mov
and
(bad)
pop
mov
xchg
xchg
sub
sub
lock
mov
cmp
jmp
inc
xchg
or
mov
repz
popa
mov
pushf
punpckhdq
das
jb
inc
ss
idiv
add
out
inc
fild
mov
sbb
stos
ins
ret
xlat
or
loopne
cld
dec
mov
test
jns
enter
and
adc
xor
dec
inc
outs
pushf
jle
cli
loopne
jne
adc
or
cmps
mov
ins
cld
sub
cmp
adc
inc
fdiv
test
js
sbb
sub
add
(bad)
movs
sbb
inc
pusha
sar
popf
pop
mov
popa
cmps
jl
in
and
jb
jg
and
mov
mov
js
(bad)
fcmovnu
mov
push
and
or
pop
mov
int3
inc
or
cmp
std
pusha
push
cmp
cmp
dec
or
cli
loop
inc
test
std
int
jmp
dec
mov
rol
push
cmp
push
jns
dec
sbb
(bad)
jmp
dec
lea
inc
adc
or
push
enter
adc
xchg
lods
test
pop
sub
xchg
pop
xchg
pop
fs
bound
loop
or
test
into
push
mov
inc
iret
pop
dec
cmp
push
ja
push
inc
pusha
sar
sub
mov
es
loope
lock
in
xchg
mov
mov
mov
adc
popa
sub
inc
push
xor
test
or
xlat
mov
inc
push
retf
cmp
sub
imul
xchg
rcl
pushf
sub
dec
jmp
lds
mov
and
add
ja
adc
cmp
jo
xchg
mov
pop
mov
ins
cmp
lods
dec
jl
inc
imul
inc
lea
pop
jecxz
dec
inc
in
push
jmp
imul
test
inc
int3
mov
mov
inc
cmp
and
adc
jb
add
add
(bad)
jecxz
xchg
stos
out
fld
fcmovnb
sub
jp
arpl
ss
je
adc
cmp
data16
mov
add
pop
movs
xchg
pop
jmp
and
ret
js
clc
repz
pop
mov
outs
push
imul
mov
mov
inc
sub
sbb
loop
fucomip
pop
cmp
ret
jmp
xor
scas
scas
cmps
inc
jns
cmp
pusha
push
lock
lea
stos
imul
clc
inc
sub
(bad)
jb
pushf
fs
sbb
and
jmp
lea
cs
ds
out
fstp
neg
js
dec
fmul
inc
adc
and
sub
retf
std
xor
leave
mov
inc
out
xchg
idiv
xchg
xchg
mov
(bad)
out
xchg
xchg
iret
mov
push
or
and
pop
dec
or
push
jae
jnp
stos
aas
inc
fucomi
sbb
int3
xlat
adc
sbb
(bad)
lods
push
cmp
jbe
xchg
sti
inc
and
pop
mov
add
ret
mov
pop
stos
icebp
js
gs
push
inc
imul
cli
inc
lods
pop
(bad)
fwait
movs
sbb
pop
sub
jge
test
add
inc
inc
inc
sbb
outs
fiadd
ret
add
inc
inc
and
aaa
mov
(bad)
inc
mov
push
jno
xlat
sub
jg
mov
cmc
xor
xchg
stc
sub
adc
fisttp
int
rol
inc
cdq
leave
or
push
and
das
push
add
mov
jmp
aad
stos
dec
cmp
cmps
pushf
cwde
xchg
inc
dec
pop
sub
mov
inc
test
jmp
aaa
cmc
repnz
out
out
dec
hlt
dec
push
inc
retf
das
push
loopne
add
push
pop
rol
call
mov
xor
or
push
ret
push
inc
jno
and
inc
pop
leave
pop
(bad)
push
retf
push
int
pop
cdq
fs
sbb
or
cmp
ins
pop
cmp
aaa
ret
fsubrp
pop
sub
and
xchg
push
pop
pop
xchg
xchg
mov
sti
lods
das
ds
js
mov
jno
shl
pop
pop
jg
and
arpl
jp
mov
push
jle
dec
in
mov
lds
xchg
push
cmp
lods
stc
icebp
push
mov
je
aaa
nop
test
scas
sti
je
mov
mov
rol
mov
xlat
or
adc
test
xlat
jo
mov
pop
xor
pop
test
(bad)
cmp
xchg
and
ficom
or
into
sar
push
pop
clc
sbb
dec
cmp
xchg
xor
cmp
retf
inc
sub
es
fisttp
fdiv
stos
cmp
push
xchg
sub
push
mov
inc
scas
jge
sahf
sub
shr
vorps
cmp
jno
mov
fldl2e
pusha
inc
mov
cld
inc
out
test
sub
cmp
rol
inc
scas
pop
es
test
fxch
push
cmp
sbb
inc
add
add
inc
mov
cmc
push
jp
push
clc
call
mov
or
cmp
mov
cld
cmp
(bad)
or
cmp
repnz
fsub
sbb
out
fadd
pop
sbb
arpl
fs
inc
mov
jne
add
xor
sar
dec
jle
sub
mov
inc
add
pushf
mov
inc
and
adc
xchg
cwde
sub
jns
inc
fs
adc
inc
test
test
loopne
shr
inc
push
inc
mov
mov
ins
dec
ja
sbb
cmp
lock
push
inc
mov
inc
je
scas
mov
or
test
or
mov
jle
popa
cmp
add
in
icebp
jmp
jnp
inc
arpl
dec
jl
cmp
in
sub
pop
push
ins
jp
inc
and
imul
fidivr
push
mov
icebp
inc
push
cwde
hlt
imul
jmp
mov
dec
mov
add
shl
out
loopne
popa
cmc
cmp
rol
mov
dec
mov
int3
loopne
or
jl
shl
div
js
or
int3
mov
cld
sub
inc
inc
xchg
pop
mov
push
cmp
mov
shl
(bad)
test
mov
jg
ret
xchg
lods
or
xchg
aad
xor
mov
or
cs
cmp
lahf
fdivr
(bad)
xor
push
jmp
ret
sbb
mov
jnp
push
rcl
nop
xor
jmp
bound
retf
mov
jns
xor
stos
shl
aas
sbb
sbb
push
mov
repnz
inc
cmp
jmp
adc
je
cmp
movs
(bad)
stc
adc
bound
dec
fmul
leave
inc
je
not
jne
sub
lds
shl
dec
enter
push
jns
xor
adc
call
sbb
lods
sub
jp
pop
mov
cdq
dec
pop
dec
arpl
pop
mov
mov
push
pushf
xchg
mov
test
dec
jno
not
lods
ins
jo
nop
mov
mov
test
lods
mov
push
and
enter
adc
or
fxam
lahf
and
inc
jecxz
movs
mov
inc
test
mov
cmps
pusha
lods
dec
fdivr
adc
mov
or
cmp
push
inc
cdq
rol
mov
ret
add
retf
jo
push
lds
pop
das
cmc
sti
push
inc
in
enter
add
jbe
sub
push
sub
pop
imul
in
mov
sbb
jp
rcl
add
cmp
and
adc
aas
add
push
mov
mov
pop
xor
push
mov
add
cmp
sahf
movs
aam
add
mov
jno
fucomip
dec
jb
pop
addr16
int3
and
rol
xchg
cmp
fld
test
jg
sar
xlat
adc
rcr
loope
fadd
jb
xchg
cmp
in
sbb
xchg
sub
jae
mov
cld
add
mov
adc
add
dec
lods
fisttp
rol
cwde
dec
cmp
add
push
sbb
imul
sub
scas
sub
add
retf
out
int3
sti
imul
lea
stc
scas
or
and
add
push
mov
mov
push
dec
sahf
and
pop
les
aad
rcl
sub
cmp
inc
js
xor
in
lds
dec
adc
inc
inc
test
cmc
or
(bad)
rol
jbe
mov
push
dec
push
test
and
iret
test
stos
sbb
cmp
repnz
ins
mov
inc
pop
push
xchg
xor
xchg
mov
cmp
idiv
sub
and
dec
pop
(bad)
fwait
cdq
inc
arpl
mov
cmc
ret
pop
inc
mov
enter
xor
sub
add
inc
in
and
sub
mov
mov
fs
test
push
inc
mov
inc
jbe
inc
in
sti
pop
push
add
pop
loopne
pop
loop
fwait
std
clc
in
mov
jae
mov
mov
pop
lock
cmp
add
retf
xchg
dec
jle
sbb
inc
adc
inc
and
add
xor
outs
cmp
dec
xchg
sbb
inc
(bad)
aaa
sbb
sub
ret
pop
cmp
mov
inc
aas
ins
jbe
add
(bad)
cmp
adc
fwait
test
inc
xchg
ds
jbe
aaa
push
inc
pop
cwde
mov
and
mov
pop
dec
xchg
cmps
push
aaa
inc
xchg
retf
dec
ja
cmc
out
sub
pop
mov
sub
mov
inc
xor
pop
and
cmp
dec
xor
mov
jns
cmp
cmp
or
dec
or
dec
aas
or
sbb
inc
dec
push
pop
jb
adc
sub
lock
mov
add
(bad)
aas
loopne
clc
mov
cmp
out
dec
adc
jmp
and
pop
pop
cmp
jnp
inc
mov
sbb
fsubr
mov
es
loope
push
cmps
pop
pop
gs
add
or
pop
sbb
pop
push
fcmovnu
aas
mov
(bad)
enter
mov
in
mov
inc
into
mov
jns
jp
cmp
mov
not
inc
inc
mov
addr16
inc
test
gs
sbb
mov
pop
cli
and
cmp
test
nop
fbstp
inc
and
sub
jecxz
jle
jmp
pop
inc
test
scas
inc
inc
pusha
pop
pop
out
sbb
jle
pop
imul
in
cmp
jnp
inc
dec
mov
inc
std
jo
or
mov
cmps
sahf
jl
clc
adc
sub
in
out
loop
out
ja
fistp
or
fist
cdq
xchg
ss
mov
inc
pop
(bad)
or
cmc
(bad)
sub
xor
rcr
clc
xchg
mov
sahf
stos
cs
xchg
fs
ja
pushf
shr
mov
aas
rcr
aam
ror
sbb
iret
jns
gs
cmp
sub
std
adc
arpl
dec
stc
rol
xor
fs
add
xadd
jns
inc
fiadd
mov
dec
mov
sub
lods
or
cmps
push
cmp
sbb
and
pop
dec
mov
pop
and
stos
stos
cmp
js
sbb
pop
shl
fwait
int3
or
js
mov
dec
loopne
dec
cmp
sbb
addr16
dec
icebp
(bad)
stc
cmp
jns
mov
test
jmp
int3
inc
jb
add
mov
cmc
imul
iret
push
jge
hlt
or
push
out
inc
outs
enter
dec
scas
inc
stos
mov
es
sti
hlt
aam
sahf
sti
adc
push
add
cmp
lods
test
mov
fnstsw
dec
sub
cld
cmp
(bad)
sub
mov
jecxz
rol
push
leave
aaa
pop
add
or
and
xchg
aam
mov
mov
or
neg
push
arpl
in
lahf
push
dec
loopne
fisubr
mov
pop
pop
xchg
jnp
adc
jbe
aaa
sbb
cmp
jns
int
je
lahf
push
inc
add
dec
or
mov
mov
cmp
out
add
test
jle
push
mov
jo
sbb
cs
les
jl
aas
cmp
jb
pop
in
dec
dec
xchg
and
es
sub
xchg
dec
loope
mov
pop
push
push
rol
int3
pop
mov
push
sub
movs
add
mov
sahf
test
ja
cmp
and
cmps
xor
stos
pusha
jno
in
push
out
ret
push
add
les
(bad)
sti
test
jb
aad
and
xor
add
icebp
inc
(bad)
in
loopne
mov
shl
jno
and
xchg
mov
pop
jae
sub
pop
out
fwait
mov
jno
fucomip
out
call
icebp
aad
mov
sar
(bad)
mov
test
leave
pushf
shl
test
(bad)
cmp
xchg
pop
mov
pop
adc
xchg
ror
xor
push
je
xchg
mov
pop
cmp
pop
lods
(bad)
cmp
jns
xor
jg
lods
sub
mov
jnp
cwde
xor
mov
sub
mov
inc
sahf
ds
mov
dec
mov
mov
adc
sar
jbe
adc
pushf
mov
xlat
push
int3
sub
aad
or
jnp
inc
pop
inc
push
jmp
jne
inc
repz
xchg
repnz
dec
loopne
loope
ds
sbb
pop
outs
scas
jnp
fsqrt
xor
aaa
xlat
mov
dec
in
test
stos
inc
out
fcomp
in
jl
and
ret
push
dec
xchg
pop
fld
aaa
or
retf
das
sbb
ds
xor
push
cs
popa
(bad)
in
cdq
pop
push
rol
jns
dec
fsubr
aad
inc
div
test
data16
mov
call
repnz
int3
adc
inc
fwait
inc
into
icebp
push
and
push
xchg
movs
mov
shr
inc
mov
popf
inc
clc
movs
adc
fadd
xchg
iret
xchg
xor
lahf
mov
out
and
ds
adc
lods
dec
jp
test
jb
ja
or
stc
or
fwait
and
mov
inc
je
ror
loope
pop
test
mov
ror
pop
jo
call
stos
cmp
adc
xor
cli
jns
xchg
jmp
push
xchg
enter
fs
xchg
pop
test
jno
mov
js
inc
sub
in
pop
jbe
lods
ret
or
ret
out
and
retf
sti
(bad)
fadd
inc
aad
or
sbb
mov
js
inc
call
inc
jo
in
shl
out
inc
jge
stc
lods
add
lea
mov
loopne
sub
or
ins
push
xchg
mov
pop
dec
rcl
mov
gs
shl
retf
dec
and
jmp
lds
mov
inc
add
sar
cmp
pop
jno
inc
jb
and
mov
dec
push
int3
fisttp
frstor
and
pop
sbb
inc
test
pop
jmp
popa
ins
jb
mov
ja
xor
cmp
xor
icebp
xchg
push
push
inc
ret
scas
jge
sbb
outs
mov
mov
mov
sar
sbb
jmp
scas
lods
sub
jge
xor
aaa
jnp
cmp
jle
cdq
add
sbb
movs
sar
(bad)
(bad)
(bad)
aad
jp
loop
fimul
pop
sub
mov
inc
xchg
adc
ss
xchg
inc
pusha
bndstx
pop
or
dec
repnz
or
cmp
inc
dec
mov
cmp
popa
mov
ins
jle
mov
pusha
cmp
outs
adc
pop
pop
or
scas
dec
repz
add
inc
fsub
movs
pusha
inc
fiadd
xlat
mov
xor
sbb
cmps
loop
frstor
sub
sbb
inc
(bad)
hlt
fs
or
cmp
mov
dec
sub
cmp
xor
mov
dec
mov
push
pusha
xchg
jg
mov
xchg
ror
movs
inc
push
out
mov
jno
popa
jg
jl
xor
dec
jl
movs
out
xor
xlat
cmp
cmp
movs
cmp
add
dec
sbb
cmp
retf
ins
jno
repz
pop
pushf
retf
retf
or
sar
ins
mov
cmp
add
fs
xor
cli
je
jecxz
push
cmp
adc
or
mov
sbb
sbb
mov
jns
dec
sbb
fdiv
or
dec
and
adc
loop
call
stc
jo
mov
inc
in
or
mov
mov
add
adc
xchg
out
js
cs
xchg
inc
sahf
sahf
mov
mov
mov
adc
retf
mov
cmp
jg
sbb
in
xor
popf
pop
arpl
jnp
jge
push
popa
js
sbb
dec
push
jo
loop
je
cmp
mov
jl
xchg
or
inc
mov
ins
mov
inc
int
lahf
pop
ror
inc
jae
xchg
mov
test
inc
and
inc
sbb
out
and
mov
xchg
xchg
sub
add
inc
pop
jne
or
out
test
adc
in
das
stos
add
call
cmp
idiv
mov
cmp
(bad)
std
mov
cmps
xchg
and
mov
cmc
cmp
pop
or
xchg
mov
test
cmp
jbe
(bad)
or
not
add
clc
lods
inc
push
inc
(bad)
push
rol
lods
inc
test
gs
sbb
and
fld
lods
pop
fiadd
cmp
jge
dec
adc
popa
cli
mov
in
inc
(bad)
ficomp
xor
mov
in
and
cs
clc
pusha
pop
inc
cmp
fcom
xor
push
xor
jns
test
test
lods
(bad)
into
ds
shl
retf
rol
mov
nop
xchg
mov
int3
je
out
scas
gs
pop
leave
fmul
dec
push
sub
movs
sub
mov
jp
out
xor
xchg
repnz
popa
jno
test
mov
mov
mov
stc
repnz
mov
push
js
dec
std
ficom
mov
and
(bad)
push
test
xor
or
das
hlt
sub
cld
into
jg
jge
pusha
mov
jmp
out
add
shl
jl
(bad)
adc
and
jno
lods
loope
cdq
ds
jge
cs
arpl
fldcw
mov
jp
sar
mov
xor
mov
pop
iret
or
bound
cmps
add
jmp
cmp
jne
jge
pop
sahf
xchg
imul
fs
shr
mov
sar
or
xchg
mov
sbb
aam
mov
xor
push
pop
mov
das
inc
cmp
aaa
pop
mov
ds
jno
mov
movs
add
sub
adc
call
out
push
shl
xchg
push
shl
add
adc
inc
jnp
sub
test
jge
push
aaa
rcl
mov
out
mov
sti
sbb
mov
or
mov
lds
test
dec
add
push
sub
dec
and
xlat
mov
out
xchg
lahf
shl
or
lock
inc
ret
mov
inc
fdiv
movs
add
inc
push
mov
inc
(bad)
jge
mov
cmp
retf
sbb
adc
and
jp
fcmove
sahf
lods
and
lds
mov
jo
pop
mov
jl
sub
inc
add
inc
out
inc
fcom
out
push
leave
enter
mov
sbb
ds
scas
or
into
push
int
mov
repz
cmc
into
inc
jg
repnz
inc
push
jmp
mov
lock
mov
mov
(bad)
mov
sub
pop
popa
fwait
and
mov
adc
and
mov
mov
jo
test
rcl
popf
adc
outs
sub
into
dec
cwde
sub
jbe
fmul
lods
leave
cmp
sbb
mov
lock
das
adc
adc
fcomp
pusha
ss
inc
(bad)
cli
inc
push
fnstenv
pop
mov
inc
pop
retf
icebp
and
sub
inc
fisub
jecxz
inc
leave
in
and
mov
call
sub
(bad)
fistp
cmps
rcl
mov
mov
std
xor
cmp
pusha
dec
jns
pop
xlat
mov
stc
lods
loopne
retf
or
cmp
mov
pop
jge
cmp
jnp
jg
sub
jp
mov
xchg
adc
adc
out
ja
xor
inc
jo
cwde
retf
mov
or
xchg
or
(bad)
push
stos
xlat
fild
add
aas
push
retf
jno
int3
loopne
adc
jo
push
jl
adc
mov
aaa
nop
stos
jae
fbld
imul
cmp
mov
stc
ror
je
gs
cmp
push
sti
(bad)
paddusw
xchg
test
cdq
or
in
fst
cmp
out
push
call
push
jo
imul
jge
and
add
and
mov
rol
jae
imul
dec
push
mov
sti
mov
data16
dec
dec
fadd
pop
jno
ds
jle
xchg
fnstsw
pop
pop
or
inc
mov
js
jg
push
jecxz
fistp
cmp
inc
loopne
add
cmp
cdq
cmp
ss
clc
fdiv
inc
jb
movs
stc
add
addr16
or
lahf
cwde
jbe
push
leave
or
mov
cli
gs
push
inc
inc
sub
popa
add
je
scas
inc
int
mov
xrelease
cmp
adc
mov
test
popf
repnz
je
inc
arpl
(bad)
into
or
ror
test
imul
rol
push
mov
ret
daa
xchg
jmp
jae
aad
aas
adc
test
pushfw
dec
cwde
mov
xlat
mov
inc
dec
push
mov
ss
inc
cmc
sahf
addr16
pop
cmp
in
push
add
push
sbb
xchg
nop
enter
ss
test
aas
add
fcomp
leave
dec
loope
dec
inc
mov
stc
push
dec
push
ins
into
inc
movs
sbb
sbb
inc
pop
inc
fmul
scas
jge
fmul
imul
push
cmp
add
jge
xchg
sbb
test
inc
mov
sbb
fwait
cdq
leave
jecxz
sub
retf
or
js
mov
cmp
lahf
test
jmp
xor
fst
icebp
jno
mov
icebp
jp
sahf
sub
mov
jmp
jmp
inc
or
test
inc
jns
dec
xor
stc
mov
xor
lahf
retf
fbld
aad
pop
ror
retf
sbb
mov
and
add
dec
jns
loop
cmp
sahf
mov
cld
mov
xchg
or
aaa
mov
cmp
js
repnz
gs
out
rcr
int
arpl
fcomp
jge
mov
jecxz
test
push
shl
lahf
pop
jns
or
pop
adc
cmp
adc
mov
push
mov
dec
clc
loope
mov
and
xchg
jns
sti
cmp
xor
or
adc
(bad)
add
push
fmul
cli
pop
mov
retf
cli
pop
jno
sub
mov
xor
aas
sbb
sub
and
sub
sbb
(bad)
(bad)
dec
std
out
loope
sbb
pop
pop
sbb
ins
xor
ins
and
sbb
test
je
jne
cli
jl
loope
jo
sbb
sbb
rol
push
(bad)
clc
aam
mul
push
and
inc
arpl
inc
push
mov
jne
inc
pop
pushf
ds
mov
inc
test
repz
out
test
inc
jl
cmc
mov
jns
sbb
dec
push
lods
push
adc
xor
mov
cmp
mov
outs
stos
mov
cmp
dec
sub
loop
in
add
rol
inc
adc
in
dec
xchg
pushf
xor
in
sbb
mov
mov
inc
inc
in
cs
jmp
nop
inc
movs
mov
bound
sbb
jae
jne
mov
mov
out
enter
inc
push
add
push
mov
popf
jl
pop
ret
push
xor
pusha
cmp
clc
ins
and
cmps
cmp
cmps
dec
fs
jb
push
mov
xor
sbb
dec
inc
mov
shl
imul
aas
jno
dec
cmp
jge
fist
xchg
movs
(bad)
pop
mov
std
shl
cmp
jl
pop
dec
in
mov
mov
jbe
or
mov
fadd
pop
pop
(bad)
enter
ret
aad
lock
call
push
add
pop
popf
cdq
jno
xchg
mov
jbe
dec
mov
sar
js
out
jnp
add
sbb
sbb
xor
xchg
jno
nop
rcr
push
cdq
fisub
cmp
xchg
rol
lea
add
aaa
daa
repnz
pop
cmp
push
(bad)
add
push
mov
out
std
loop
ds
push
fcom
cmc
dec
pop
or
inc
shl
cmp
out
(bad)
xor
cli
push
mov
lahf
inc
fcomp
sub
inc
cmps
addr16
xchg
dec
dec
aaa
int3
inc
test
popa
or
lods
aas
scas
cmp
inc
ficom
xchg
sub
mov
mov
or
adc
mov
jne
aam
inc
xchg
fld
enter
inc
outs
push
cmp
rcl
icebp
repnz
jmp
push
adc
enter
rol
dec
out
in
inc
call
sub
pop
cdq
or
fs
call
inc
je
push
into
add
mov
xchg
pop
dec
fisttp
sbb
ffree
and
shl
add
mov
mul
loopne
aas
in
cli
mov
jge
or
cmp
pop
cmp
rol
jns
jbe
cmp
push
xchg
fdivr
shl
cld
clc
adc
inc
mov
or
inc
lea
push
or
std
inc
adc
sbb
pop
cmps
mov
arpl
sbb
lds
pop
fwait
test
mov
xor
fst
xchg
xchg
cmp
movs
leave
scas
loopne
daa
mov
mov
dec
movs
add
in
inc
mov
(bad)
loope
ror
add
ds
scas
sub
sub
fnstcw
jne
fdiv
lods
cmp
or
cld
sbb
inc
fwait
ret
mov
(bad)
or
jns
push
cmp
xchg
ins
jl
scas
mov
mov
js
clc
lods
mov
dec
fimul
aaa
push
out
daa
in
cmp
mov
shr
ds
test
mov
inc
inc
dec
jno
mov
rol
inc
dec
mov
adc
cmp
out
clc
jecxz
icebp
mov
inc
inc
mov
stc
inc
inc
test
cmp
and
rol
push
push
inc
cmp
into
std
test
cmc
arpl
bound
and
jno
or
sub
jns
or
loop
inc
test
sbb
and
in
jg
mov
and
push
cmp
(bad)
(bad)
fmul
ficom
inc
gs
cli
jbe
repnz
dec
push
fldln2
(bad)
jp
jmp
leave
jmp
test
inc
jle
out
adc
inc
aaa
pop
lds
mov
daa
sub
dec
loop
ret
push
cwde
lods
out
cvttps2pi
retf
dec
cmp
inc
mov
pushf
loopne
add
icebp
xchg
push
lds
xchg
push
or
in
int3
xor
test
add
pop
dec
add
ds
push
and
sub
iret
cld
and
pop
xor
js
pop
(bad)
out
ds
in
mov
test
and
enter
xchg
mov
mov
sub
sub
xchg
push
inc
cmp
into
icebp
jnp
mov
(bad)
out
or
les
or
adc
cmp
xor
cmp
mov
mov
xor
inc
jecxz
imul
lahf
jle
ins
aad
add
into
inc
cmp
iret
scas
movs
test
jl
(bad)
xlat
mov
inc
into
ror
or
ja
call
jg
lock
stos
cdq
jge
pop
pop
leave
or
out
sti
xor
push
cmp
push
aas
(bad)
fs
cmp
pop
scas
xchg
mov
fwait
lahf
or
std
inc
inc
inc
xchg
xchg
push
rcr
inc
hlt
clc
fs
dec
jg
inc
inc
xor
sub
rol
push
aaa
out
push
(bad)
pop
inc
mov
xor
mov
das
inc
cmp
test
inc
and
dec
(bad)
xchg
ret
call
push
test
xor
jg
inc
das
aam
adc
mov
push
and
jnp
sbb
push
xchg
inc
adc
sbb
cmp
or
add
jne
jge
jmp
push
stc
jmp
aas
hlt
and
fwait
push
bound
pop
xchg
aaa
and
test
jo
xor
inc
inc
or
mov
mov
ds
mov
aad
sar
xor
mov
ds
mov
push
inc
push
cmp
ror
sbb
push
cmps
push
aas
or
jp
popf
mov
fsubrp
test
mov
lock
frstpm(287
ret
cmp
mov
mov
sti
pushf
mov
rcr
sti
cdq
and
es
add
or
nop
stos
mov
sbb
test
fbstp
inc
jns
sub
push
cmp
jmp
test
out
iret
aad
int3
xor
jmp
dec
arpl
inc
shl
lahf
sub
dec
xor
repz
cdq
call
mov
inc
jb
add
not
test
cmp
sbb
mov
cmp
inc
addr16
cmps
inc
cdq
sub
inc
shl
int3
xchg
add
or
mov
xchg
cwde
movs
sub
(bad)
fs
mov
mov
sub
jge
dec
or
mov
mov
sbb
clc
mov
loop
sahf
adc
mov
jbe
inc
fsubrp
or
and
push
cmp
cdq
or
dec
push
mov
lahf
jecxz
pop
inc
jp
ficomp
push
scas
cmp
aaa
mov
cmps
(bad)
dec
xchg
adc
inc
jle
(bad)
cmc
cmc
jmp
loope
ret
jno
or
jne
jg
ss
adc
jle
jno
xchg
js
cdq
jmp
add
or
loopne
jecxz
fs
or
adc
sub
shr
sub
mov
sub
dec
mov
jno
popa
sar
cmp
mov
call
out
sbb
mov
mov
and
xchg
or
in
hlt
mov
lock
cdq
sbb
addr16
pop
mov
cmp
repz
or
shl
call
aad
mov
xor
mov
in
mov
hlt
inc
dec
aad
cmp
mov
leave
cmp
pop
int3
push
rcr
xchg
imul
pop
xchg
outs
sar
inc
jbe
cmc
lds
aaa
shl
mov
pop
mov
xchg
hlt
xor
or
adc
fucomp
inc
sub
sti
xor
sar
jno
dec
pop
dec
jnp
test
movs
jns
jge
cmp
imul
cmp
jno
jne
int3
xchg
aaa
cmps
adc
shl
icebp
jns
int
fsub
jnp
push
jecxz
add
pop
lds
push
cmp
sbb
add
pop
cmps
rol
ret
das
xchg
adc
and
leave
dec
lea
mov
icebp
pop
cmps
pop
sti
lds
aas
call
les
cmp
mov
sub
xchg
mov
push
inc
add
out
mov
popf
mov
nop
cwde
and
leave
mov
add
inc
cmp
xchg
xor
push
sub
ds
fisubr
xlat
adc
(bad)
daa
and
mov
jo
xor
nop
push
mov
int
outs
(bad)
ds
cmps
mul
(bad)
imul
int3
pop
inc
mov
pop
inc
cmp
test
pop
dec
mov
outs
xor
outs
cmp
out
inc
push
in
mov
loope
dec
pop
sahf
dec
or
arpl
xchg
push
cmp
ror
cmp
inc
mov
mov
out
inc
test
xor
inc
loopne
adc
std
test
(bad)
enter
jb
sub
aam
out
std
dec
inc
rol
in
das
add
retf
dec
mov
sub
or
aam
movs
std
fild
fs
ja
icebp
ret
push
sbb
addr16
cmp
cmp
out
inc
pop
jp
clc
xor
int
hlt
mov
push
pop
cli
pop
xchg
push
inc
nop
pop
or
sahf
mov
cdq
jge
pop
(bad)
nop
push
iret
sub
cmp
ret
jg
test
popf
xor
stos
jmp
(bad)
jp
cli
outs
cmc
dec
or
lds
imul
inc
jno
out
mov
cdq
xlat
add
mov
sbb
ins
hlt
or
iret
movaps
jl
pusha
retf
jl
movs
(bad)
xor
sar
mov
cmp
pop
jp
inc
xchg
and
dec
jno
dec
inc
inc
imul
mov
stos
and
mov
push
fnstcw
(bad)
xor
sti
(bad)
in
test
mul
ja
inc
add
cmp
(bad)
fsub
sbb
movs
dec
add
ds
and
inc
fbld
adc
ss
mov
push
pop
int
sahf
xor
push
ds
scas
jle
data16
cmps
lock
jp
mov
dec
push
(bad)
sbb
fisubr
mov
inc
push
xor
outs
loopne
dec
or
aaa
lock
and
xlat
ficom
daa
mov
sbb
in
mov
cld
aad
mov
mov
inc
jle
xlat
adc
pop
and
xor
cmp
pusha
loop
xor
lock
push
ret
pop
lahf
dec
mov
arpl
jb
pop
inc
xchg
cmp
ins
push
stos
stc
jmp
xchg
xor
js
push
leave
xor
push
test
test
mov
pushf
mov
jmp
inc
arpl
pop
add
lds
test
mov
sar
hlt
and
aad
cmp
or
inc
cmovg
jmp
bound
inc
push
scas
stos
aas
and
loopne
fadd
enter
and
loopne
mov
sbb
cmp
xor
push
imul
pop
add
retf
xchg
mov
cmp
xchg
sub
cdq
hlt
xor
ds
repnz
inc
aaa
or
mov
loopne
lods
mov
mov
imul
mov
jmp
push
pushf
cmp
not
ret
mov
mov
(bad)
mov
aaa
push
sbb
repz
in
shr
add
cmp
into
adc
dec
mov
jmp
mov
cmp
push
inc
cld
daa
cmp
sbb
cmp
sub
test
add
out
ret
pushf
(bad)
cs
mov
sbb
and
mov
sub
add
cs
mov
jmp
add
jl
mov
arpl
fstp
pop
pop
jmp
jl
fs
ret
push
aam
fsubr
jp
stos
int3
test
add
frstpm(287
retf
cmc
cmps
inc
cmp
inc
dec
push
mov
mov
xchg
sbb
jle
cmp
sahf
lods
push
mov
ss
imul
adc
retf
leave
sub
mov
sti
inc
int
adc
shl
dec
xchg
ror
sub
ins
xlat
popf
inc
jne
mov
mov
dec
push
and
and
xor
leave
je
cmp
mov
shl
xchg
sub
bound
outs
or
fdivr
mov
ficomp
stc
mov
call
add
cmp
xchg
pop
jo
sub
test
les
arpl
addr16
lahf
sub
push
mov
icebp
xchg
dec
xor
fst
and
mov
dec
stos
mov
stos
push
ds
jge
sbb
jns
nop
out
jae
stos
dec
ss
and
out
jg
jne
fld
mov
fs
(bad)
xchg
sbb
jno
out
rcr
cmp
(bad)
fisubr
adc
xchg
stos
mov
call
mov
sbb
xchg
gs
daa
and
nop
xbegin
inc
sbb
or
stos
dec
out
and
js
cmc
mov
cmp
(bad)
popa
stos
jae
adc
inc
sti
arpl
pop
fnsave
je
and
shl
mov
pop
cmp
cmp
dec
popf
jns
mov
or
pop
das
adc
js
push
mov
scas
ins
jp
cmp
cld
hlt
loopne
jp
xchg
rcl
add
inc
loopne
xor
and
ds
add
js
cmp
xor
mov
add
sub
adc
jmp
ds
xchg
sub
dec
pusha
or
xlat
cmp
jns
mov
mov
(bad)
adc
ins
inc
or
out
sti
pop
lahf
jge
pop
dec
pop
test
mov
cmps
add
ret
jg
int3
ret
(bad)
cmp
icebp
sbb
cmp
not
or
enter
sahf
fs
nop
push
les
(bad)
test
pop
aam
shr
add
mov
(bad)
icebp
inc
pop
fisttp
fcom
mov
jecxz
pushf
xchg
out
ds
ins
addr16
rdmsr
aad
mov
xor
fild
test
jge
imul
mov
hlt
pop
fs
pop
push
fstp
push
sub
jmp
mov
aad
pop
js
aad
cmp
pop
dec
lahf
test
or
scas
out
xchg
inc
cld
mov
fldcw
hlt
mov
clc
stos
mov
mov
mov
mov
ret
push
sbb
sub
fld
lods
sub
scas
xor
jl
repnz
jnp
sbb
test
movs
xchg
push
inc
inc
and
sbb
ss
and
push
fmul
mov
xchg
cli
into
sub
pop
adc
out
enter
ds
jge
mov
xor
repz
es
retf
or
sub
stc
je
mov
inc
mov
cmc
cmp
arpl
out
jmp
push
mov
shr
setl
cmp
xor
arpl
out
pop
test
mov
sub
cmp
sub
xchg
or
in
mov
(bad)
or
retf
push
pop
push
add
inc
sbb
popf
or
fld
pushf
pop
call
sub
mov
cmp
ins
adc
mov
enter
(bad)
test
bound
fptan
pop
sub
(bad)
mov
rcl
inc
xor
sbb
cmp
pop
sahf
pushf
pusha
dec
in
inc
xchg
xor
int3
mov
inc
cld
pushf
mov
fld
lock
adc
xchg
mov
xor
inc
nop
mov
mov
jns
jo
dec
cmp
in
push
sar
outs
pop
inc
jnp
inc
into
inc
sahf
or
inc
mov
mov
fcom
rol
add
push
dec
nop
fwait
rol
xor
mov
jo
xor
push
add
mov
pop
retf
cmp
repnz
xchg
pop
or
push
imul
mov
out
sar
mov
and
loope
add
mov
inc
pop
fstp
(bad)
imul
ror
inc
ret
bound
dec
rol
mov
movd
into
dec
cmp
or
ins
int
dec
addr16
imul
cmc
xor
mov
pop
xor
test
loopne
sbb
dec
cmp
jns
ja
inc
push
(bad)
xchg
jp
test
rol
or
push
or
pusha
push
mov
cli
cmp
mov
add
or
and
adc
mov
int3
scas
mov
nop
inc
jo
xor
mov
or
dec
(bad)
(bad)
jecxz
lods
sub
data16
fdivr
dec
pop
sub
adc
xor
inc
test
xor
loop
mov
sbb
test
mov
fwait
jb
jp
cmp
pop
xor
daa
jle
(bad)
cmp
icebp
jno
pop
sbb
addr16
fwait
adc
jb
dec
ds
cli
adc
ds
ror
inc
jge
cmp
jno
popf
and
aad
les
xchg
pop
jnp
loopne
nop
lea
loope
lock
sub
lds
jb
and
xor
je
mov
popa
xor
adc
dec
data16
sub
xchg
outs
mov
sbb
push
push
mov
sub
adc
fidiv
dec
test
pop
jg
aam
int
mov
or
cmp
xor
mov
cmp
in
addr16
jmp
xor
sub
cmps
data16
pop
cmps
mov
pop
call
mov
xchg
ficom
(bad)
fcomp
push
repz
cwde
jnp
and
sub
mov
hlt
mov
or
jno
mov
jns
repnz
add
cli
jmp
adc
out
fstp
fmul
or
cmp
stos
mov
sub
(bad)
(bad)
cmp
sbb
nop
push
jns
inc
and
xchg
retf
jp
rol
pop
adc
jns
lahf
or
inc
aad
push
mov
sbb
daa
ret
adc
cmc
mov
or
pop
stc
sub
cmc
jne
mov
in
xchg
or
mov
add
(bad)
xchg
pop
sub
fwait
je
sub
sub
scas
dec
xchg
xor
or
mov
mov
jno
inc
std
add
or
push
inc
leave
pop
xchg
adc
mov
fist
mov
dec
inc
sub
stc
retf
add
dec
sub
cs
or
mov
loope
iret
xor
xchg
shr
inc
xor
inc
mov
(bad)
shr
fisubr
adc
stc
jns
into
in
adc
rcr
inc
jno
jg
fmulp
js
movsx
cli
mov
ret
pop
jg
sub
outs
repnz
scas
rol
fnstenv
push
fs
(bad)
shr
aad
inc
add
adc
cmp
xor
mov
sbb
js
(bad)
cli
cs
mov
pop
je
pop
cld
mov
mov
enter
ret
push
xor
mov
rcl
xor
test
push
cmp
add
mov
fcom
ss
sbb
ficomp
nop
jle
inc
stos
jge
in
sbb
pop
lods
xchg
fisttp
cli
jge
imul
aad
pop
add
aad
mov
push
stc
lods
adc
and
aad
or
repnz
and
mov
xlat
add
ds
push
lds
mov
mov
loopne
cld
sub
push
sbb
mov
das
clc
inc
sbb
cmp
sub
stos
iret
leave
(bad)
ror
mov
call
inc
jle
xor
sti
stc
enter
sbb
push
loopne
shr
pcmpeqb
fist
cmp
mov
in
ds
shl
lods
sub
dec
cld
(bad)
cmp
ins
popf
xor
pushf
jg
and
popf
sbb
popf
mov
mov
adc
or
add
icebp
in
xlat
mov
jecxz
nop
pop
lods
pop
and
pusha
fs
lods
jo
push
mov
and
jne
aaa
xchg
mov
xchg
scas
xchg
or
xchg
pusha
push
popa
lds
and
lahf
adc
inc
pop
rol
imul
mov
call
leave
loopne
outs
js
inc
push
imul
pop
or
fdivr
sub
add
mov
ret
in
dec
lahf
mov
mov
or
arpl
dec
jmp
jb
push
inc
push
jne
mov
out
mov
inc
je
push
daa
add
and
xchg
add
fiadd
xchg
inc
jbe
add
inc
(bad)
add
inc
(bad)
in
outs
dec
jle
sahf
inc
push
sub
mov
inc
shl
mov
mov
cmp
int
sbb
test
fnstsw
jg
push
pushf
jge
stc
mov
adc
ficomp
mov
and
cli
fsubrp
jb
mul
mov
out
mov
xor
leave
push
js
(bad)
push
jb
xor
pop
cdq
pop
lds
sbb
xchg
add
jno
lea
cmp
outs
daa
and
jns
xchg
mov
sbb
aas
scas
loopne
cmp
jns
rcl
jge
mov
rcr
push
out
pop
out
sub
cmp
movs
inc
mov
cmp
test
das
inc
movs
hlt
leave
(bad)
scas
dec
add
lds
mov
lods
jmp
in
in
jmp
ins
test
icebp
div
jge
pop
jb
addr16
out
fbld
into
pusha
inc
pop
cld
leave
add
sub
test
xchg
fsubr
sbb
ret
imul
cmp
pusha
lods
jno
ror
sbb
mov
leave
dec
test
fwait
ins
xchg
ret
cmp
and
jmp
cmp
add
das
cmp
cmp
aas
mov
scas
outs
arpl
mov
jp
loopne
dec
test
push
xchg
movs
mov
xchg
out
inc
gs
xlat
ja
dec
je
pop
addr16
add
mov
ret
push
or
add
mov
pop
aas
out
xor
call
ficomp
not
xor
into
dec
inc
push
arpl
xor
(bad)
mov
(bad)
loope
cmp
pusha
inc
test
test
test
cmps
inc
(bad)
pop
jg
fidivr
or
repz
cdq
sbb
inc
add
call
mov
push
lds
inc
aaa
jae
mov
inc
jo
test
mov
push
in
inc
mov
mov
dec
push
out
cmp
mov
call
fadd
sub
mov
inc
repnz
cmp
xor
inc
sti
jge
sub
mov
mov
dec
mov
loop
in
stc
inc
add
inc
out
call
mov
in
adc
push
ror
or
sub
clc
jo
scas
ins
rol
xchg
rol
dec
jl
mov
mov
cdq
pop
fcmove
hlt
inc
xlat
out
xchg
mov
outs
and
imul
stos
scas
enter
cmp
(bad)
fistp
mov
aad
test
mov
xor
cmp
jp
jnp
inc
aad
enter
pop
sbb
jp
and
or
mov
fdivr
sub
(bad)
cmp
or
mov
mov
ret
retf
sbb
mov
or
stc
leave
(bad)
adc
push
aas
xor
xor
shl
inc
sbb
clc
cmp
sub
fstp
mov
int3
jmp
lods
mov
push
cmp
pop
out
cwde
jb
jno
cmps
xor
rol
fwait
add
jg
lock
xor
inc
push
movs
inc
sti
jmp
(bad)
xlat
push
sub
lea
sub
push
pop
or
lock
sbb
jl
sahf
call
inc
mov
inc
icebp
test
(bad)
movs
lahf
mov
les
mov
mov
inc
inc
adc
xor
inc
xor
fcom
(bad)
icebp
(bad)
loope
sub
mov
test
add
fxch
mov
xor
cld
inc
(bad)
lock
inc
inc
fiadd
out
sub
xor
outs
ds
gs
fdivr
fild
xor
mov
sub
cmps
inc
fisubr
or
or
dec
push
inc
iret
mov
loope
and
inc
test
movs
hlt
in
inc
das
jecxz
lea
add
jb
cmp
inc
(bad)
sbb
or
(bad)
pop
pop
mov
mov
push
inc
sub
push
lds
mov
inc
dec
pop
jecxz
or
pop
gs
sub
sbb
pushf
dec
lea
inc
or
mov
push
pop
sti
(bad)
aad
cmp
sbb
ds
ds
mov
adc
loopne
out
push
xor
in
and
sbb
or
dec
outs
dec
nop
fwait
mov
das
mov
call
(bad)
jmp
in
cmp
retf
inc
mov
pop
adc
sbb
inc
inc
adc
mov
xor
cmc
mov
mov
enter
into
ds
test
push
gs
and
out
test
int
jbe
dec
inc
sub
enter
inc
inc
and
shl
ja
popa
js
mov
adc
pop
int3
lods
sbb
enter
xor
pop
xor
and
bound
cmp
dec
scas
xchg
mov
inc
add
outs
push
div
add
inc
dec
sbb
sar
mov
into
inc
or
popa
sub
call
mov
out
jne
cs
pushf
ins
sub
out
mov
cmp
cmp
fstp
and
cmp
popf
sub
and
or
jno
(bad)
cmp
js
aaa
push
mov
loopne
add
(bad)
int
leave
sbb
out
and
scas
arpl
jo
adc
and
aas
addr16
fucomi
outs
cli
retf
outs
dec
lea
jno
inc
add
xor
jge
and
mov
inc
sbb
mov
and
out
in
mov
pusha
retf
fs
retf
(bad)
adc
or
aas
mov
je
xor
push
mov
jnp
mov
lods
inc
or
fwait
and
jns
jne
int
xor
xchg
daa
and
or
test
ins
sub
push
ins
mov
stos
sbb
cmp
push
jmp
mov
dec
xchg
jg
sub
or
jge
push
xor
imul
sar
sub
repz
ss
push
stc
pop
sbb
imul
and
scas
mov
aas
push
cmp
dec
add
inc
jb
(bad)
jns
mov
(bad)
sub
mov
add
ficom
frstor
jns
jg
stos
loop
mov
sub
jae
jb
xchg
mov
dec
cwde
pop
or
fcomp
mov
xchg
xor
jno
test
fidiv
push
hlt
xor
cmps
xchg
daa
fdiv
call
sbb
sar
and
stos
les
bound
or
or
repz
in
mov
mov
or
mov
ror
leave
add
sub
cld
push
fisttp
xor
fs
jns
ret
and
addr16
lods
test
or
retf
ret
data16
mov
jle
push
cmp
sbb
ds
or
into
mov
icebp
push
ret
mov
out
xchg
xor
bound
aas
or
inc
lea
int3
test
and
mov
mov
mov
(bad)
retf
inc
ret
jns
jb
clc
iret
xor
data16
inc
popa
jbe
das
les
push
dec
inc
xchg
jae
std
pop
out
repz
inc
leave
not
push
mov
fstp
cwde
pop
inc
dec
int
pop
mov
adc
clc
int3
or
pop
fwait
or
inc
xor
mov
push
ret
sbb
xchg
inc
aas
test
mov
jo
jbe
pop
ins
cdq
test
pop
pop
popf
mov
sti
fcmove
fiadd
sub
les
sbb
ret
or
into
inc
pop
ror
inc
cmps
inc
and
ss
lock
aas
pop
aaa
jb
pop
jns
(bad)
daa
loope
sar
and
or
mov
repnz
ficom
pop
outs
(bad)
lock
(bad)
jmp
(bad)
jbe
out
(bad)
gs
test
imul
cld
xchg
cmp
inc
mov
mov
xor
repnz
xor
adc
dec
inc
push
ja
cld
ftst
xlat
adc
jl
ret
aaa
inc
es
dec
(bad)
bound
out
inc
fdiv
cmp
rcl
int
adc
iret
loopne
sub
fcmove
cld
adc
jl
fadd
retf
add
or
cmp
mov
push
mov
pop
jle
inc
inc
sub
or
test
(bad)
call
inc
pop
sub
push
inc
jle
pop
inc
cmp
out
(bad)
retf
sub
call
adc
sti
scas
mov
lods
dec
mov
pop
mov
pop
cwde
inc
dec
push
mov
xchg
dec
aaa
cs
inc
inc
jns
sti
(bad)
in
inc
shl
push
mov
sub
pusha
rcl
rcl
dec
jl
cmps
movs
mov
sub
dec
rcr
sub
cmp
rol
push
cld
out
and
jns
imul
jmp
fwait
cmp
and
retf
stc
mov
xor
je
pop
ss
mov
add
jo
test
jns
pop
pop
rcl
hlt
aam
in
mov
std
jp
and
jl
(bad)
dec
out
aas
test
cdq
outs
call
ins
jno
push
or
fist
jo
mov
push
sahf
jg
jnp
adc
xchg
sar
jmp
adc
js
xor
xchg
jge
sbb
jmp
add
mov
shl
movs
and
jmp
retf
inc
mov
add
add
ficom
adc
sar
dec
xor
mov
xchg
and
inc
test
mov
pop
dec
and
sub
cld
sar
js
cmp
aad
and
mov
add
wrmsr
retf
fcomp
and
je
into
add
mov
and
mov
xor
sub
das
cmp
sbb
and
cld
cmp
imul
je
into
test
push
mov
out
push
int
rol
xchg
cmps
ret
loope
enter
xor
fs
and
cld
cmp
pop
push
ja
mov
mov
sub
add
mov
push
loop
push
xor
vpsrlq
xchg
imul
pop
leave
(bad)
adc
mov
cmp
jmp
dec
or
ss
mov
cmc
inc
lock
xlat
xor
int3
dec
inc
sub
and
dec
fadd
test
(bad)
push
pop
into
push
ret
and
pop
(bad)
mov
add
daa
pushf
inc
push
leave
pop
adc
bound
jl
inc
mov
cwde
inc
pusha
inc
into
and
xor
jbe
popf
dec
push
and
or
sar
ins
fs
movs
pop
and
iret
cmp
scas
xchg
mov
cmp
xlat
test
sbb
cmp
lahf
and
jns
dec
mov
xchg
sbb
sahf
sbb
pop
int
popa
mov
jmp
fwait
ds
test
sti
std
lods
(bad)
test
mov
test
adc
add
mov
fst
mov
add
xor
stc
dec
popf
in
xor
je
xor
and
les
sbb
ret
adc
xor
je
push
xchg
popf
(bad)
cmp
popf
mov
mov
mov
jp
mov
lahf
push
xchg
sbb
fnstcw
cmp
cmps
inc
mov
ret
outs
jno
icebp
and
das
xchg
pop
mov
pop
(bad)
jl
fst
cs
mov
jge
in
sbb
cmp
mov
jg
xchg
cmp
cmp
push
stc
dec
pop
aas
jo
mov
js
retf
cmp
mov
popa
not
test
adc
jecxz
pop
aad
jno
inc
push
push
add
repnz
fld
jno
fs
fnstcw
icebp
and
pusha
shl
xor
cmp
out
div
adc
or
rcr
(bad)
dec
in
add
mov
jge
push
inc
pop
lods
dec
rol
dec
out
dec
nop
ret
jno
pop
xchg
inc
xchg
data16
push
xchg
mov
cmp
xchg
inc
xor
ins
jg
in
pop
cmp
jo
xchg
inc
mov
xor
jg
cmp
sbb
add
movs
jp
adc
ficom
push
pop
or
xor
inc
add
mov
cmp
loopne
pop
mov
inc
fistp
retf
clc
test
cmp
inc
je
repnz
sbb
dec
cmp
add
or
movs
sub
sbb
int3
outs
enter
inc
xor
mov
inc
push
repz
out
ffreep
fisttp
ficom
mov
dec
dec
popa
lea
adc
int
inc
xor
in
xor
inc
sti
imul
jmp
outs
mov
add
lock
adc
sahf
mov
adc
test
lods
js
pop
div
fidiv
movs
add
dec
jo
mov
cmp
aaa
inc
dec
in
ffreep
aad
rcr
into
pop
int3
xor
in
inc
bound
enter
fs
jecxz
jp
lock
cmc
aaa
xchg
or
inc
mov
xchg
add
mov
(bad)
std
cmp
adc
bound
add
sbb
xchg
xchg
pop
jg
push
and
mov
inc
adc
or
retf
jmp
sub
lods
push
sti
or
xchg
cwde
pop
stos
shl
daa
arpl
sahf
adc
aad
or
inc
push
xchg
push
pop
ret
adc
mov
pop
xchg
push
movs
cmp
inc
inc
xchg
sub
rol
call
cmp
mov
popf
inc
cmp
and
and
sbb
mov
gs
mov
ja
xchg
sbb
inc
test
xor
cmp
or
and
jmp
push
inc
imul
xlat
or
es
jle
cmp
sbb
retf
inc
mov
mov
cmp
pushf
pop
rol
xchg
mov
out
push
inc
sbb
add
jle
cmp
push
push
push
push
jmp
sti
mov
jb
dec
inc
ins
sbb
mov
outs
cs
retf
pop
add
dec
(bad)
out
push
inc
(bad)
aad
sub
xlat
iret
loopne
jecxz
xchg
in
(bad)
cdq
sar
int
mov
retf
or
inc
lods
xor
cmp
gs
jecxz
cmp
mov
xchg
idiv
xlat
jg
cmp
sub
pop
push
dec
out
or
dec
movs
cmp
loope
loopne
cmc
sbb
cld
push
inc
dec
das
arpl
aaa
or
ret
ja
pop
jae
popf
or
mov
sub
mov
sub
pushf
stos
dec
jle
and
xor
outs
mov
sub
nop
push
mov
sbb
mov
out
inc
pop
jg
xchg
mov
retf
push
aas
mov
pop
jo
loopne
sbb
jb
sub
adc
sahf
push
mov
pushf
sub
ds
mov
bound
xchg
mov
mov
cmp
sar
inc
fs
mov
cdq
popa
in
push
cli
outs
std
add
pop
sub
jb
xor
sbb
push
lds
xor
xor
les
test
(bad)
cmp
mov
and
xchg
cmp
inc
add
stos
icebp
and
iret
rol
cmps
bound
into
test
push
cdq
(bad)
icebp
jl
pop
xor
dec
inc
mov
cmp
cmp
mov
in
sbb
scas
gs
out
cmp
sbb
je
cmp
pushf
dec
jge
call
fild
fcmovne
cmp
push
(bad)
(bad)
(bad)
shr
js
pop
add
rcl
or
xchg
fadd
movs
inc
sub
lods
cmp
jge
fisubr
push
pop
fmul
aam
mov
or
jo
jno
(bad)
dec
mov
sbb
push
xchg
sbb
mov
adc
sub
js
xchg
in
cld
cmp
mov
cmp
mov
xchg
add
jno
sub
xchg
ret
sub
(bad)
loopne
xchg
inc
sbb
arpl
mov
add
shl
(bad)
mov
push
pop
frstor
(bad)
cld
pop
add
add
jg
stc
lds
dec
and
mov
sbb
stos
dec
stos
leave
jp
int3
pop
pusha
clc
mov
pusha
stc
jno
fwait
mov
mov
ins
call
ins
jae
mov
mov
stos
mov
mov
xchg
xchg
add
or
inc
xchg
push
fiadd
xlat
aad
iret
mov
sub
xor
gs
mov
mov
test
test
cmp
test
or
adc
addr16
sub
and
pop
push
cmp
js
sub
aas
and
inc
sbb
mov
mov
pop
cmp
popa
inc
iret
mov
add
inc
add
int
jmp
outs
xor
mov
mov
cwde
mov
dec
scas
xchg
inc
(bad)
dec
call
mov
jge
in
inc
shl
sub
inc
out
int3
mov
jbe
test
retf
fild
xchg
mov
loopne
mov
lea
add
loope
xlat
jl
inc
mov
mov
and
aaa
inc
xor
lea
in
ror
inc
push
rcr
pop
enter
push
ret
outs
rcl
dec
push
pop
retf
call
push
call
repnz
lea
movs
mov
jno
adc
xchg
mov
arpl
add
inc
mov
aaa
jecxz
fsubr
cs
jne
cmp
mov
mov
jmp
jp
cmp
in
ss
rol
test
inc
adc
icebp
loopne
dec
pop
iret
and
das
hlt
jecxz
jl
int3
rol
test
mov
cmp
retf
stos
cmp
inc
clc
bound
cs
sub
jp
adc
inc
mov
lods
imul
popa
and
fadd
mov
mov
xor
xchg
nop
dec
cmp
gs
and
push
pop
mov
loop
in
jecxz
mov
inc
call
xchg
xor
lea
cmp
xor
in
cmps
repnz
call
mov
inc
std
cli
ret
outs
lods
inc
loope
fnstenv
push
and
xchg
movs
into
add
adc
popa
or
push
adc
shr
js
adc
mov
push
xor
ds
(bad)
mov
sub
push
cmc
mov
push
or
clc
push
jnp
enter
xchg
sti
cmp
mov
scas
mov
add
mov
pusha
sbb
iret
sar
(bad)
loope
cwde
push
arpl
clc
adc
cmp
cdq
xchg
and
loopne
imul
test
inc
in
push
clc
ins
repnz
popa
pop
inc
and
out
jge
loopne
push
fnstsw
or
sti
adc
sbb
pop
pop
jae
dec
cli
stc
inc
dec
cmp
jmp
sbb
sub
cmp
mov
or
mov
inc
xchg
iret
daa
sbb
inc
cwde
sbb
std
cmp
shr
cmp
lea
add
mov
xchg
imul
aam
push
push
in
sub
xor
jo
lods
fwait
mov
or
push
shl
enter
inc
or
xchg
inc
mov
test
sub
arpl
outs
into
fnsave
push
xor
pop
(bad)
inc
retf
movs
xchg
xchg
nop
lea
push
inc
or
or
shl
ret
(bad)
sub
mov
xor
leave
hlt
and
loop
repz
retf
inc
shl
cld
lock
test
in
ret
into
aam
sub
add
sti
loop
and
inc
fsubr
rcl
aas
sbb
cmp
shr
and
inc
cdq
mov
add
dec
js
and
cmc
enter
cmp
int3
daa
pop
(bad)
loope
jae
and
xchg
scas
(bad)
adc
cli
inc
bound
js
inc
(bad)
icebp
out
arpl
push
pop
(bad)
lahf
sbb
inc
xchg
mov
mov
or
mov
push
xchg
inc
mov
inc
xchg
(bad)
enter
icebp
sbb
loop
jmp
push
mov
inc
sub
xchg
js
mov
lock
jo
xchg
sahf
and
loope
cmp
sti
cmp
jmp
sub
xor
leave
(bad)
sbb
repnz
cmp
dec
je
adc
pop
mov
stos
sahf
ins
test
adc
into
cmps
mov
cmp
jecxz
mov
bnd
sbb
aaa
shr
cmc
xor
sbb
jns
mov
movs
jae
mov
cmp
push
and
clc
enter
inc
out
call
jecxz
dec
les
stos
loope
add
cmps
pop
fs
loopne
cdq
shr
rcr
sbb
mov
sar
repz
cmp
cmp
arpl
data16
shl
push
mov
inc
pushf
xor
stos
imul
xchg
ins
cmp
inc
ss
sti
mov
repz
xchg
sbb
inc
jb
sbb
push
out
mov
push
mov
pop
jo
cmp
and
daa
out
sbb
aas
jne
lahf
mov
inc
call
dec
mov
lods
out
scas
pop
mov
adc
cmp
sub
shl
add
repnz
add
jg
test
adc
call
cmp
lds
sahf
fadd
push
out
jge
out
jb
jno
jbe
or
push
aad
sbb
inc
out
shufps
movs
pop
adc
jmp
push
push
fstp
hlt
(bad)
jno
pop
into
test
mov
jl
sar
stc
cmp
sti
fsub
lods
addr16
es
mov
push
outs
imul
push
xor
dec
cmp
or
or
cmp
cmp
sbb
mov
inc
bound
jae
jne
jbe
ins
inc
scas
mov
sbb
xor
cmps
inc
inc
and
(bad)
jnp
cmp
aaa
sbb
retf
inc
lock
ins
pop
mov
dec
mov
jl
das
push
out
cmp
sbb
mov
pop
push
inc
mul
jns
into
loopne
adc
stos
mov
iret
mov
inc
(bad)
ror
mov
jp
test
xchg
inc
lock
mov
inc
xlat
inc
dec
fucomp
fmul
fidivr
or
cmp
stos
inc
or
in
pushf
cmp
or
mov
xor
sub
fwait
movs
xchg
enter
fcomip
and
test
sub
pop
pop
inc
and
(bad)
int3
movs
movs
xor
rcr
mov
push
inc
fisub
adc
cmp
leave
test
cwde
fnstenv
(bad)
cmp
pop
test
and
popf
mov
adc
sub
repz
dec
dec
inc
movs
and
popa
adc
sub
inc
mov
adc
adc
and
ret
pop
inc
inc
fistp
loopne
xor
mov
test
mov
push
enter
xchg
rol
pop
ret
cmp
mov
(bad)
fild
cmp
inc
pop
dec
cdq
mov
(bad)
and
inc
std
mov
xchg
scas
pop
push
cmp
mov
jmp
hlt
loop
cli
xlat
and
cli
inc
or
mov
mov
push
or
mov
cmp
or
pop
push
inc
inc
pop
mov
mov
mov
pop
sbb
sti
sub
sub
hlt
fcomp
sub
das
mov
mov
mov
xchg
lock
fdivr
adc
adc
mov
call
mov
(bad)
cmp
cmp
pop
mov
xchg
fadd
jnp
movs
jmp
icebp
jns
jg
(bad)
dec
sbb
xchg
push
cwde
cld
(bad)
inc
pop
sbb
aaa
js
inc
push
cwde
les
jns
loopne
popa
cmovns
jb
cmp
out
mov
je
fnstsw
mov
pop
aad
imul
movs
push
stos
and
push
pop
sub
cld
jge
mov
dec
xchg
out
pop
xor
xchg
ins
mov
retf
push
pop
mov
push
push
xchg
xor
daa
jns
xor
add
jbe
call
in
cs
aas
mov
push
shl
(bad)
cs
sub
and
push
pop
sbb
movs
jl
fst
in
jl
retf
ja
fadd
or
xchg
aas
xor
jmp
sub
pop
pop
jl
sbb
mov
jns
add
hlt
nop
adc
out
loop
jmp
adc
xor
out
pusha
jae
sbb
jo
sub
mov
les
cmp
adc
inc
mov
icebp
xor
pop
loope
rcr
xor
mov
retf
pop
mov
loope
test
mov
jb
add
xchg
or
stos
retf
adc
xor
mov
xor
cmp
stos
push
inc
mov
jb
cmp
xchg
out
not
(bad)
sub
sub
xchg
(bad)
push
inc
mov
retf
jns
dec
fsub
jbe
nop
ret
push
sub
fild
jno
jmp
in
cmps
ds
xor
fs
popa
(bad)
addr16
jns
dec
xor
push
jnp
jns
(bad)
call
fwait
add
mov
jge
mov
cmp
fdivr
xor
mov
js
mov
sub
xlat
pusha
les
retf
test
cmp
sub
ja
cli
lock
jecxz
pop
idiv
cmp
cmp
mov
xor
pop
jno
inc
js
jp
pop
imul
push
test
scas
jno
jb
adc
dec
mov
cmp
sbb
inc
mov
mov
les
mov
push
outs
lea
shr
clc
pop
mov
stos
mov
cmp
aam
fnstcw
xchg
call
push
ds
imul
mov
sub
iret
cmp
test
sahf
icebp
cmp
stc
and
adc
fild
sar
ja
fs
fldcw
cmp
stos
dec
ficomp
ja
loop
fst
cmp
stos
or
cmp
adc
lods
sar
xchg
sbb
xchg
test
push
daa
jbe
and
fs
jmp
mov
and
or
mov
sbb
fdivr
retf
lods
fsubp
cs
into
mov
shl
js
xor
cmp
lea
xor
xchg
je
clc
jmp
mov
cmp
xor
cmp
xor
js
fsubr
mov
jno
mov
icebp
ret
add
sub
lock
lods
jle
mov
in
test
adc
das
pop
pop
popf
mov
cmp
sub
cmc
jns
inc
pop
fwait
jg
and
sub
(bad)
adc
repz
mov
shr
jns
jge
mov
jnp
jge
nop
jmp
cli
test
imul
cmp
push
mov
cmp
lds
call
sub
xlat
out
sbb
sti
pop
mov
cdq
and
bound
pop
push
push
call
enter
fist
scas
imul
add
lods
iret
aam
(bad)
pop
nop
cmp
aas
ficom
cmp
and
inc
mov
xchg
sbb
xchg
jmp
cmp
ds
lods
mov
sub
adc
pop
in
retf
cdq
test
ss
jns
repz
cmp
sbb
loope
push
in
xchg
icebp
out
jl
ds
call
cmp
ret
je
mov
xor
sub
xor
jl
jmp
and
jl
int3
test
and
jns
lods
rcr
xor
lds
ret
push
lock
adc
push
out
and
shl
jge
out
jmp
das
(bad)
in
loope
xchg
mov
adc
inc
sub
lods
out
in
and
scas
dec
test
mov
mov
xchg
rol
adc
jge
hlt
dec
mov
mov
jno
fwait
sti
cdq
jmp
fdivr
nop
out
icebp
ret
sbb
out
add
lea
cli
push
cmp
sub
inc
push
nop
sbb
outs
sahf
jns
cmp
or
sub
jge
cmp
add
lea
js
sti
icebp
xchg
shr
xor
sbb
mov
fnstsw
mov
aam
stos
pop
ret
mov
je
cmp
add
outs
add
gs
jns
pop
mov
or
in
mov
xor
dec
je
sbb
mov
dec
mov
xor
adc
pop
nop
lahf
sbb
mov
xchg
leave
xchg
fs
ds
sahf
in
scas
mov
cmp
xor
fs
ins
push
test
stos
dec
stos
lahf
xchg
xchg
ja
sbb
pop
inc
lods
jl
sub
pop
sbb
cmp
rep
sbb
leave
fdivr
fisub
pop
add
jp
pop
fdiv
lods
add
cdq
cmp
adc
or
cs
adc
out
push
push
or
mov
fstp
retf
iret
pop
mov
fs
aaa
fimul
cmp
cmps
movs
shl
les
sbb
mov
mov
std
scas
js
jno
loope
pop
xor
sub
sbb
xor
sar
jno
xor
sahf
and
mov
iret
jno
test
cli
pushf
pop
jmp
stc
call
ds
xor
lods
retf
pop
or
or
ds
jne
arpl
stos
mov
mov
movs
mov
mov
cmp
dec
push
jno
out
jne
inc
jb
fcom
mov
fwait
daa
jl
cmp
mov
inc
ds
test
push
inc
sbb
adc
inc
ja
sub
xchg
xor
lods
outs
(bad)
sbb
test
sbb
mov
pop
mov
pushf
sbb
sub
xor
mov
jb
setns
retf
in
mov
inc
test
inc
inc
and
sar
movs
dec
cmp
cmc
pop
mov
lahf
in
cmp
sub
icebp
rol
cmps
lods
jbe
push
hlt
int3
xor
in
push
and
fsubrp
inc
and
or
inc
leave
into
cmp
inc
jmp
and
adc
ds
xchg
cmp
aad
xchg
xchg
fs
jmp
call
lds
add
mov
or
cmp
xchg
mov
inc
rcl
inc
hlt
xor
push
rcr
test
inc
mov
inc
inc
mov
push
and
fldl2e
loopne
rcl
or
dec
pusha
or
ss
cmp
inc
cs
pop
push
xchg
movs
jg
sbb
test
jp
cs
retf
inc
jne
jae
sub
dec
push
pop
in
mov
scas
sbb
adc
(bad)
test
jle
push
dec
ds
int3
(bad)
or
sbb
or
rcl
cmp
cmp
pusha
mov
fild
push
mov
leave
out
lea
mov
cmp
gs
mov
xor
cmp
enter
and
pushf
inc
push
xor
ss
test
or
jl
data16
enter
repnz
fcom
clc
sub
ret
dec
fs
int
test
pop
jl
sub
mov
repnz
(bad)
js
mov
outs
pusha
test
xor
arpl
jne
lds
retf
pop
lock
add
fild
mov
fs
jge
inc
inc
movs
jp
and
ds
push
sahf
(bad)
fsubr
jno
js
mov
int3
into
mov
repz
in
fwait
out
mov
(bad)
jne
sbb
in
lods
stos
jmp
sar
mov
das
pop
les
jmp
jo
jo
je
mov
mov
jno
in
pop
cmp
call
fstp
inc
jecxz
iret
(bad)
aam
loopne
int
inc
cli
pop
sub
adc
cmc
retf
pop
mov
mov
call
inc
add
or
pusha
push
xchg
xchg
mov
repnz
add
jns
push
aam
ret
inc
aad
or
out
jns
mov
sahf
jp
add
jecxz
or
in
sub
dec
icebp
mov
adc
inc
inc
add
hlt
addr16
data16
data16
aaa
cmp
iret
push
add
(bad)
cmp
mov
sub
test
mov
mov
int3
sbb
aas
cmps
cmp
cmp
jg
retf
xchg
adc
inc
pop
inc
and
jbe
repnz
xor
pushf
enter
inc
dec
mov
xlat
and
inc
sbb
jo
pop
add
retf
out
pop
inc
sub
pop
dec
add
or
dec
jg
leave
sub
imul
rcr
and
das
or
imul
jp
jns
inc
mov
push
dec
sub
and
push
cwde
xchg
nop
inc
adc
inc
pop
sbb
adc
inc
jl
shl
jg
sub
dec
movs
sbb
call
mov
test
cmp
mov
mov
mov
sbb
push
int3
cmc
jmp
inc
fild
clc
sub
ja
(bad)
push
adc
fwait
mov
cmp
or
(bad)
mov
sbb
mov
daa
test
inc
lea
ss
call
cmp
aas
fstp
xor
jo
js
or
jno
xlat
retf
cmp
repnz
and
adc
jmp
jno
jge
loop
xor
push
cmp
daa
cs
and
mov
retf
inc
or
or
mov
push
jmp
fsub
push
cmp
ret
pop
ins
out
je
pop
jbe
xor
push
clc
jno
add
mov
fs
add
sbb
rcl
dec
fisttp
mov
ds
push
xor
scas
dec
sub
cmp
adc
dec
sbb
loopne
cmp
dec
push
int3
enter
adc
add
cld
push
retf
repnz
sub
jecxz
pop
cmp
jns
jno
push
jns
out
icebp
xlat
into
loopne
pop
inc
or
iret
xor
cmps
sbb
xchg
push
lea
inc
das
cmc
dec
adc
sar
inc
push
dec
pop
cld
imul
mov
je
mov
jns
mov
fild
adc
neg
inc
fist
and
jno
ins
es
(bad)
jns
(bad)
iret
pop
call
cmc
aad
sti
jmp
jecxz
push
pop
ja
clc
xor
pop
add
lock
push
inc
pusha
ds
dec
pop
leave
pop
inc
mov
nop
and
imul
lods
lock
inc
add
fucomp
aad
cmp
(bad)
ds
dec
or
lea
fs
cmp
push
mov
pop
jmp
ss
ds
fwait
mov
push
xchg
push
sub
inc
test
add
scas
mov
pop
mov
add
xor
rcl
adc
and
inc
inc
add
ss
ror
cmp
into
push
sbb
inc
xor
sub
add
sbb
mov
mov
mov
jle
adc
add
add
scas
push
fwait
mov
popa
xchg
jae
dec
inc
mov
jb
sar
ss
inc
loop
test
adc
imul
dec
xor
sub
leave
fadd
mov
out
int
inc
dec
shl
(bad)
adc
mov
je
enter
push
adc
repnz
cmp
loopne
movs
inc
(bad)
pusha
or
aas
and
xor
sub
dec
jne
out
cld
mov
jmp
shl
retf
pslld
xor
cmp
jle
ins
cmp
stos
(bad)
sbb
in
into
mov
or
jns
jbe
jo
aad
jmp
dec
fistp
icebp
push
pop
add
retf
inc
int3
push
and
mov
cmps
mov
loopne
cmp
mov
sub
aam
outs
inc
fs
push
sbb
aam
jb
enter
ja
dec
repnz
cmp
(bad)
pop
push
movs
mov
adc
sbb
mov
mov
cmp
std
fwait
mov
les
ret
aam
out
cmovo
ret
inc
fs
inc
loopne
lds
scas
mov
xlat
rcl
mov
fmulp
inc
je
xor
stos
imul
sbb
pop
test
push
shr
loop
sbb
inc
or
mov
or
mov
inc
jge
ret
cmc
sub
ds
cmp
jecxz
inc
cwde
jno
(bad)
fsubr
jns
inc
scas
dec
jne
adc
pusha
aad
inc
or
movs
inc
bound
ins
nop
jmp
inc
sar
cmps
mov
add
out
out
outs
inc
imul
std
lods
push
aas
jnp
xchg
xor
push
sbb
pop
xor
adc
icebp
xor
ja
mov
movs
dec
(bad)
lods
rsqrtps
nop
retf
pop
cs
sub
cli
rcr
nop
gs
jmp
pusha
arpl
jge
and
pop
push
lds
sub
jl
cld
iret
inc
pop
mov
pop
mov
sub
rcl
pop
cmp
icebp
cmp
ins
stos
call
xchg
cmp
fild
inc
sub
cwde
stos
xchg
je
hlt
jns
dec
cmp
sbb
inc
imul
jae
jne
inc
imul
xchg
push
dec
movs
adc
mov
aam
push
hlt
mov
mov
push
pop
inc
and
pop
mov
test
push
enter
push
sub
mov
xchg
mov
xlat
loop
jp
lods
mov
and
dec
scas
xchg
lea
ror
jnp
mov
popa
mov
lods
jmp
jbe
inc
les
call
sbb
mov
imul
push
pop
cmp
cmps
inc
pop
fdivr
scas
dec
outs
cmp
ja
test
dec
ss
imul
mov
xchg
loopne
jp
cmp
in
clts
xor
inc
cdq
test
cwde
lods
mov
add
rol
test
push
mov
xchg
rcl
fnstenv
mov
sub
sahf
fnstenv
dec
fst
mov
cmp
mov
inc
test
jnp
sub
pop
sub
sub
adc
xchg
scas
inc
xchg
mov
push
push
jg
cli
arpl
xor
cmp
sbb
hlt
sbb
cmp
xchg
jg
shr
xchg
mov
aad
icebp
test
sti
mov
ret
stos
mov
pop
ficomp
jge
retf
sub
jns
jg
mov
push
(bad)
data16
stos
pop
cli
cmp
lea
enter
pusha
mov
push
jno
dec
shr
cli
mov
(bad)
jns
cmp
(bad)
stc
mov
das
stos
fs
sub
or
or
fisttp
and
test
jmp
mov
or
pop
inc
push
ss
dec
push
dec
mov
lahf
sub
mov
sub
cmp
push
dec
test
mov
scas
cmp
dec
xchg
push
jge
les
dec
add
aaa
movs
add
and
rcr
gs
dec
popf
cli
cmp
mov
push
std
rcl
pop
outs
fdivr
pop
bound
jb
add
push
repnz
cmp
cmp
les
les
cmp
stos
int
jbe
jp
loopne
sbb
or
dec
or
mov
mov
sub
xchg
nop
loopne
popw
jp
inc
inc
cmps
cwde
imul
inc
and
mov
mov
and
pop
dec
pop
jg
dec
xor
dec
mov
or
in
sub
dec
jbe
mov
je
lods
pop
fnstenv
stos
cmp
jb
mov
mov
or
arpl
cmp
sub
fisttp
mov
fwait
cmp
js
xor
loope
ins
inc
bsr
movs
jge
cli
mov
int
xor
enter
clc
sbb
ss
ffreep
pop
xor
add
pop
lods
cmps
dec
cmp
dec
jl
repz
lods
pop
xchg
xchg
scas
test
push
xchg
ja
out
out
mov
test
jge
fnstcw
cmps
push
sbb
imul
in
aaa
dec
fs
push
and
sbb
mov
xor
mov
nop
sahf
pop
les
push
ins
lods
fld
cmp
mov
ja
leave
or
in
add
push
xchg
jns
aad
xchg
and
cli
pop
fidivr
cmp
xchg
inc
sbb
pop
or
(bad)
jbe
and
ins
pop
jmp
test
mov
mov
sbb
mov
pop
xor
pusha
xchg
sub
rcl
or
test
jno
xor
cmp
fdivr
push
xchg
fisubr
cld
(bad)
std
mov
jb
sti
out
jns
push
mov
stos
js
mov
jns
fsubr
mov
sub
xor
fwait
movs
mov
dec
and
mov
inc
ins
test
sbb
inc
in
inc
popa
pop
dec
pop
inc
test
push
inc
pop
dec
cmps
xor
fld
xchg
cmp
ror
enter
js
push
inc
cs
jp
xor
jnp
sbb
cmp
into
xchg
aad
mov
mov
add
ja
cmps
and
adc
rcl
(bad)
pop
dec
add
in
int3
fucomip
aas
fldenv
div
xchg
sti
mov
inc
fcmovne
adc
jnp
dec
mov
cmps
ds
loope
(bad)
jmp
fsub
lea
mov
adc
sbb
mov
cli
clc
inc
add
addr16
jle
mov
mov
fisttp
jo
fidivr
sub
and
les
cmps
clc
out
out
out
rol
rcl
adc
inc
in
(bad)
xchg
iret
add
pusha
dec
leave
cli
xchg
or
add
cmp
sub
push
aam
cmp
cld
sbb
jno
inc
push
jo
jmp
adc
cmc
adc
and
sub
je
aam
popf
add
push
and
xor
inc
inc
mov
lea
mov
mov
xchg
je
inc
test
xchg
jmp
sahf
shl
pusha
xor
movs
dec
fwait
mov
sub
adc
jbe
cmp
dec
adc
sub
and
js
cmp
mov
inc
mov
retf
or
shl
cmp
cmp
mov
inc
sub
neg
int3
xor
push
pusha
fidiv
inc
inc
icebp
adc
xchg
xchg
push
pop
lea
push
sub
stc
retf
inc
sti
loopne
add
lods
cmp
inc
xor
shl
jns
outs
xor
call
mov
mov
imul
cmp
inc
mov
imul
cmp
pop
inc
pop
dec
pop
dec
inc
push
xchg
fs
(bad)
cmp
cld
das
shr
sysenter
xchg
sub
(bad)
bound
ds
lods
dec
mov
and
dec
sti
cmp
inc
icebp
mov
push
inc
jecxz
dec
pop
enterw
shl
mov
sub
or
cmp
mov
ja
cmps
or
dec
or
pop
aas
sti
fucomp
adc
mov
cmp
jl
cmp
mov
dec
mov
test
movs
xor
cmp
cmp
cmp
movs
call
and
mov
imul
fs
imul
xchg
fld
popf
stc
mov
cdq
mov
pop
mov
test
cmp
or
adc
add
out
sbb
jge
or
cmp
cmp
lods
shl
mov
stc
mov
jl
or
loopne
sbb
xor
xchg
or
inc
adc
pop
sub
rcr
adc
leave
push
cld
xchg
xchg
sti
ss
xor
fs
xchg
cdq
pop
push
es
fild
mov
mov
dec
jnp
int3
fdivr
jns
fs
mov
dec
hlt
sbb
or
xor
sub
(bad)
fs
sbb
movs
sahf
lock
adc
dec
mov
pop
add
jbe
aas
test
shl
sbb
(bad)
rcl
nop
popa
fninit
lods
push
fcom
sar
xchg
cs
jmp
sub
lds
sbb
fmul
fdivr
pop
cmp
and
inc
mov
sti
fisub
jge
icebp
jg
ror
cmps
pop
dec
jp
dec
xor
imul
xor
shl
sbb
sbb
jne
dec
fldenv
fnsave
shl
push
(bad)
jmp
into
cld
cmp
push
or
xor
sub
sti
hlt
sbb
mov
or
shl
add
xchg
retf
das
mov
adc
das
shl
(bad)
int
cmp
jge
daa
inc
(bad)
xor
xor
jle
push
and
pushf
sbb
ja
mov
inc
mov
enter
xchg
or
inc
push
sbb
cmp
jno
mov
retf
stos
sbb
xor
pop
loop
xchg
sbb
xchg
retf
xchg
stos
or
pop
(bad)
ror
fimul
into
into
inc
push
jp
xor
fdiv
mov
and
pop
inc
cmp
push
dec
xchg
setp
pop
leave
shr
pop
jns
add
push
push
mov
clc
shl
jb
in
les
xchg
mov
imul
mov
or
(bad)
rol
pop
ss
idiv
sbb
xchg
jns
pop
push
mov
imul
jbe
jge
lock
or
movs
cs
xchg
mov
cmp
push
jp
pop
stos
push
xchg
mov
xor
ror
sub
mov
ins
scas
mov
cmps
cmc
outs
xlat
call
stos
xchg
imul
dec
(bad)
sub
mov
sub
daa
inc
(bad)
push
push
jno
outs
adc
cmp
aam
add
add
mov
popf
fs
mov
jl
mov
xchg
cdq
add
jno
out
xchg
mov
int3
ss
pop
cmp
jns
jle
pop
test
fsub
cmp
imul
cmp
push
out
stos
stos
xor
mov
jns
into
dec
pop
scas
movs
mov
imul
ins
pop
mov
out
in
mov
addr16
cmps
add
loop
cmp
fwait
mov
xor
retf
cdq
xor
addr16
sbb
into
jg
sub
jge
and
(bad)
loope
dec
imul
rcl
loopne
(bad)
adc
jae
mov
and
mov
push
je
and
jno
push
mov
js
add
loopne
pop
pop
popf
mov
stos
push
mov
pop
adc
je
ds
les
and
fst
mov
add
push
and
cmovo
mov
mov
pop
dec
fadd
icebp
rol
fwait
jle
inc
xor
jge
in
inc
cmps
mov
push
loop
sub
cmps
mov
test
or
out
lods
mov
int3
cmp
and
cmp
jle
and
and
xlat
add
popa
or
xor
jecxz
xchg
outs
shr
loope
scas
mov
fnstenv
jp
cs
imul
mov
mov
data16
es
adc
or
jle
cmp
mov
rcl
jge
nop
jno
icebp
ret
jp
test
outs
dec
cmp
stc
add
mov
mov
mov
mov
cmp
inc
in
inc
loopne
pop
push
and
js
in
dec
adc
loopne
jmp
loopne
cmp
inc
or
div
cmp
jge
enter
aas
push
or
iret
cld
mov
imul
push
add
cmp
repnz
fwait
add
cdq
aam
popa
cmp
repz
popf
inc
pop
or
push
(bad)
push
loop
push
add
lods
cmp
inc
inc
aad
in
(bad)
mov
jnp
pop
sti
xchg
inc
push
inc
pop
cmp
(bad)
mov
jns
mov
push
call
retf
jle
jae
and
jge
mov
pop
and
int3
pop
mov
(bad)
fnstsw
inc
fwait
cmps
loop
adc
jns
ins
mov
mov
inc
mov
fisttp
inc
push
xchg
idiv
mov
xor
push
push
xlat
inc
fcomp
cmp
(bad)
loope
inc
shl
sub
retf
inc
loop
lahf
mov
inc
xchg
ud1
push
push
inc
adc
fst
lock
lahf
inc
pusha
in
leave
dec
jle
inc
or
in
leave
fiadd
sub
mov
movs
mov
sub
je
and
arpl
sub
mov
cmp
loope
cmp
inc
jae
jb
aaa
xchg
sub
cmp
or
(bad)
sub
add
sti
sbb
bound
pop
inc
and
pop
shl
inc
sub
xor
push
adc
push
in
inc
cmp
dec
push
jo
xchg
add
inc
dec
inc
xchg
out
(bad)
cmp
fs
cmps
fwait
pop
push
inc
dec
fistp
xchg
and
sahf
mov
jae
daa
or
cmp
loope
inc
hlt
les
inc
cmp
xchg
dec
pop
push
test
lahf
mov
pop
ret
cmps
fs
iret
push
imul
pop
test
or
mov
inc
dec
fisttp
inc
rcl
dec
inc
hlt
daa
jge
dec
jns
mov
idiv
xor
rcr
mov
pop
mov
sub
(bad)
fld
aas
push
push
test
xchg
in
push
gs
and
loopne
fnstsw
mov
shl
push
stc
jno
adc
mov
mov
jo
or
fistp
pop
je
and
cmps
mov
ret
(bad)
repz
jmp
pop
xchg
inc
mov
mov
int
mov
push
add
cmp
jecxz
sub
data16
jo
cmps
dec
sahf
sbb
ret
imul
jno
repz
mov
sub
push
xor
test
cmp
mov
cmp
stos
mov
mov
dec
xchg
int3
retf
push
xor
mov
nop
std
into
les
cmp
mov
clc
mov
cmps
fsubr
fnstcw
mov
sbb
inc
repz
loopne
ror
fidivr
cli
retf
aad
sub
or
(bad)
sbb
or
pop
retf
mov
sub
sub
sar
iret
mov
neg
mov
loopne
jo
imul
mov
popf
fistp
and
sti
lds
imul
std
bound
cmp
sub
mov
push
dec
dec
pop
inc
push
dec
cmp
add
xor
pop
or
std
in
out
stc
call
pusha
js
ins
cmp
out
aaa
jl
inc
jmp
cmp
jns
jg
and
dec
les
xlat
or
enter
cmp
cmp
inc
ss
or
inc
mov
(bad)
dec
jae
fxch
test
icebp
gs
out
xor
or
cmp
je
aam
pop
lds
nop
push
aas
movs
jns
mov
adc
add
sbb
or
inc
xor
popf
outs
(bad)
xchg
cmp
out
jl
jmp
or
cmp
sub
js
mov
inc
xlat
lods
sub
mov
loope
mov
jecxz
out
or
cmp
dec
fmul
xor
push
inc
stc
cmps
and
not
cli
and
stos
sti
retf
pop
call
addr16
jg
xor
cmp
add
adc
stos
rol
rcr
sub
inc
sbb
sar
jno
cmp
cld
addr16
mov
mov
pop
mov
inc
out
mov
pop
xchg
push
sub
cmps
je
inc
xchg
(bad)
mov
icebp
sahf
xchg
inc
mov
clc
and
inc
cmp
dec
sbb
test
lock
nop
inc
push
stos
or
pop
bound
mov
cmp
outs
pop
adc
ss
dec
mov
adc
inc
inc
xlat
push
push
and
ret
sbb
fldl2t
inc
mov
jno
ror
lods
sub
inc
sbb
cmc
int3
dec
aas
push
fs
cmp
std
(bad)
retf
sub
leave
mov
xchg
scas
in
adc
add
inc
mov
enter
test
inc
daa
fcomp
ficom
cmps
pop
inc
arpl
(bad)
adc
and
add
or
popf
inc
nop
lahf
inc
push
pop
lea
jnp
push
xlat
int
inc
(bad)
cmc
jb
idiv
push
sub
imul
int
inc
fdiv
mov
or
xchg
pop
sar
or
(bad)
scas
xchg
sub
mov
and
mov
sub
jnp
fs
cmp
in
out
mov
leave
cmc
(bad)
repnz
popa
retf
cmp
add
ja
push
cmp
mov
inc
push
push
add
mov
jbe
fs
outs
dec
cmp
jmp
sbb
ds
or
xchg
add
inc
loope
jg
sub
inc
movs
loop
push
ss
lahf
jnp
jl
and
iret
adc
pusha
sub
retf
lods
cmp
adc
(bad)
bound
pusha
data16
fbstp
fdiv
outs
retf
inc
cmp
lods
int3
outs
(bad)
stos
xor
cmp
jge
add
lds
xor
call
xor
(bad)
pop
ror
lods
dec
xchg
and
push
cli
cmp
mov
xor
cdq
push
jno
out
les
jnp
inc
cmp
outs
pop
push
gs
imul
adc
cmp
pop
fistp
xor
call
je
ret
idiv
call
cli
sbb
mov
pusha
jns
xchg
mov
ret
pop
stos
call
jge
mov
ja
imul
adc
add
lds
jne
and
iret
adc
push
div
cmp
jbe
fs
jge
push
(bad)
ds
cmp
in
pop
fimul
xchg
push
or
scas
or
jecxz
ss
aaa
sbb
inc
sbb
cmp
test
inc
out
shr
shr
(bad)
iret
popf
adc
mov
pop
cmp
gs
jno
test
xlat
icebp
xor
shl
pop
cli
cmp
js
adc
jge
pop
pusha
sar
bound
sbb
inc
push
fs
clc
xor
push
and
add
sbb
cs
int
cld
stos
and
mov
xor
push
lods
scas
sub
push
push
pop
mov
mov
sbb
mov
add
ret
popf
jp
stc
lea
hlt
bound
ret
and
cli
and
mov
push
xchg
inc
xchg
movs
sbb
pop
(bad)
outs
or
push
into
jecxz
xchg
adc
popf
dec
shr
call
or
mov
mov
stc
dec
inc
mov
out
inc
push
adc
loope
sbb
loopne
xor
sub
cmp
and
inc
out
jecxz
and
fild
daa
adc
inc
(bad)
mov
jns
in
rol
jnp
outs
mov
push
adc
popa
add
jns
xlat
lock
dec
sti
jecxz
fidiv
inc
(bad)
mov
aaa
fcmovnu
xlat
dec
cmc
push
inc
lahf
push
xor
add
push
dec
loopne
ds
sub
and
jb
mov
cmp
cmp
dec
mov
cli
ins
out
xor
out
in
cmp
mov
arpl
xor
rcl
hlt
pop
sub
push
jmp
inc
pop
mov
adc
fcomi
push
pop
test
push
push
addr16
scas
push
sub
hlt
mov
inc
outs
push
fdiv
cmp
adc
sbb
fistp
or
pop
pop
les
cmps
ds
lds
jne
mov
je
mov
adc
dec
imul
aas
xchg
movs
call
inc
push
int
int3
pop
into
push
(bad)
xlat
push
ret
xor
les
add
dec
repz
pop
mov
ins
cs
not
xor
cs
xor
sub
cmp
dec
out
sbb
xchg
sub
jno
aas
mov
xor
cmp
sbb
mov
add
clc
fcmovnu
cmp
or
add
jge
int
in
lods
je
(bad)
dec
jnp
ins
jg
adc
adc
cmps
sbb
fisttp
movs
push
push
cmp
test
ss
(bad)
jns
xchg
adc
movs
into
loopne
xor
ret
rol
mov
aas
jl
retf
mov
enter
(bad)
sti
inc
lods
test
sbb
adc
aad
jmp
nop
into
jno
jecxz
mov
les
mov
les
dec
sahf
or
mov
dec
sub
cmp
jmp
lds
or
adc
and
mov
pusha
aad
jno
fs
mov
jmp
(bad)
xlat
loopne
add
fadd
fild
dec
rol
dec
sub
(bad)
jl
cli
repnz
jnp
dec
test
push
push
fs
out
ds
loop
in
jge
out
movs
add
lock
cmp
add
mov
pop
les
pushf
inc
mov
jp
and
sbb
mov
dec
cmp
mov
scas
ins
jle
cmc
dec
mov
sbb
ds
scas
stos
sub
fadd
inc
out
lahf
pop
jo
xor
test
lods
mov
mov
sti
in
lea
ret
stc
push
and
nop
inc
(bad)
sub
test
inc
std
pop
fs
jae
aad
fidivr
inc
outs
push
daa
mov
add
ret
push
dec
sub
fmul
and
inc
or
test
sub
mov
ret
pop
ins
push
imul
add
fadd
aas
popa
cmps
jno
pop
pop
test
jo
pop
inc
arpl
mov
pusha
into
inc
xor
cwde
mov
ins
aad
sar
clc
inc
(bad)
or
jno
pop
inc
aad
mov
lods
clc
xor
aas
inc
sbb
xlat
pop
mov
push
cli
or
repnz
mov
cmps
sbb
test
nop
jns
addr16
cmp
push
arpl
pop
or
mov
and
push
push
pop
out
push
inc
aas
mov
inc
xchg
pop
add
mov
stos
mov
loop
jmp
mov
out
bound
inc
ja
loope
mov
pop
cmp
xchg
inc
push
ss
sub
sub
inc
fs
aam
add
pop
dec
stc
fild
sbb
inc
inc
outs
pop
scas
mov
fwait
jg
pop
int3
adc
mov
jb
add
loopne
outs
aas
add
inc
jge
adc
adc
fadd
push
loopne
inc
or
inc
jnp
cmp
xor
inc
cdq
data16
js
cmps
aas
pop
inc
push
daa
mov
cs
outs
mov
adc
mov
sub
call
mov
mov
mov
ja
(bad)
clc
push
pusha
sahf
(bad)
fistp
les
jnp
inc
ror
mov
pop
dec
jbe
cdq
or
jmp
int
dec
cli
fcomp
jmp
inc
rcl
pushf
nop
cmp
add
and
shl
cmp
or
movs
inc
xor
dec
push
repz
sbb
rol
xor
adc
clc
ret
daa
sbb
xor
mov
sub
push
cmp
cdq
mov
inc
xchg
test
inc
lea
out
lahf
dec
mov
and
leave
cmp
not
(bad)
push
aas
add
mov
and
or
in
out
or
mov
sbb
jecxz
ins
jmp
cmp
cmp
sar
mov
mov
(bad)
loope
and
js
sbb
jo
inc
inc
sub
ficomp
cmp
(bad)
in
shl
fistp
sub
cmp
lods
fldenv
cmc
iret
mov
pop
call
or
xor
cmp
dec
mov
push
sbb
or
ja
pop
cmp
ret
pop
fwait
lods
jo
inc
mov
popf
push
loop
clc
push
inc
outs
repnz
push
mov
pop
les
add
loope
cmp
cwde
(bad)
lahf
xchg
push
push
fdivr
idiv
cmp
sti
and
xchg
add
pop
ins
gs
pop
loope
adc
pop
lahf
add
cmp
(bad)
pop
(bad)
stc
outs
mov
pop
out
ins
retf
in
jns
sbb
arpl
outs
imul
push
add
push
xor
push
cmp
mov
mov
outs
pop
sub
js
or
jo
ins
stos
jo
das
div
mov
cmp
popa
gs
or
rol
mov
aam
sub
push
outs
pusha
adc
mov
dec
mov
mov
jno
mov
stc
xchg
dec
mov
mov
pop
sbb
das
mov
jb
cmc
out
imul
fcmove
sub
adc
jecxz
push
(bad)
xor
punpckldq
sub
frstor
or
jo
jge
je
xchg
movs
mov
mov
add
or
outs
xchg
das
aam
sbb
ds
je
pusha
or
lock
stos
inc
repnz
push
stc
cmp
mov
mov
fbld
imul
push
mov
pop
push
out
dec
fnstcw
mov
jb
push
int3
xor
mov
in
pop
inc
mov
stc
push
mov
ret
push
pop
out
mov
mov
or
stos
pop
icebp
adc
push
push
xor
dec
paddusw
push
or
or
fild
enter
test
push
pop
test
mov
ds
aas
xchg
sub
retf
xor
or
add
dec
sub
pusha
inc
jno
cmp
test
(bad)
in
mov
fsubr
jae
out
pop
lea
dec
cmp
lds
mov
adc
dec
pusha
fcmove
push
into
movs
cmp
jg
mov
xchg
push
movs
int
jecxz
push
mov
aad
stc
mov
test
or
nop
dec
pop
pop
fidiv
je
pop
jmp
idiv
cmp
jecxz
fsubr
icebp
out
hlt
enter
ds
jne
ds
sub
xor
das
mov
pop
push
outs
jle
aas
daa
es
jl
add
ds
ret
retf
fcomp
jle
aad
add
div
test
pop
jbe
jb
rcr
(bad)
fidiv
outs
sub
das
ds
adc
in
cmp
mov
sbb
out
push
dec
scas
fistp
out
js
aad
inc
push
xchg
movs
popa
(bad)
cmp
test
fidiv
dec
inc
or
(bad)
bound
and
fadd
push
xchg
xlat
inc
xlat
dec
leave
cmp
icebp
pushf
xor
loopne
dec
push
dec
(bad)
cmp
or
pop
push
mov
call
fsub
mov
sub
cmp
popa
sub
jnp
jbe
mov
movs
mov
mov
(bad)
ds
push
push
sbb
lods
dec
sub
cmp
shr
icebp
gs
mov
mov
ror
mov
pop
dec
cmp
adc
retf
cld
aas
push
adc
arpl
cmc
inc
nop
and
push
les
loop
sub
js
cmp
xor
sub
or
cmp
retf
jns
xor
test
clc
adc
idiv
in
fiadd
cli
retf
dec
int
rcl
dec
xchg
cmp
cmp
es
inc
adc
mov
pop
cmp
out
push
inc
cli
clc
shl
pusha
mov
dec
pop
jo
mov
adc
sahf
mov
inc
jns
push
(bad)
xor
gs
stos
in
inc
sar
test
push
(bad)
test
xchg
das
push
dec
pusha
sbb
sub
cmp
pop
adc
xchg
mov
jno
aas
pop
xchg
inc
scas
sbb
not
push
push
ror
jge
xlat
neg
(bad)
sub
pop
test
push
cmp
dec
mov
inc
pushf
cld
cmp
stc
imul
adc
or
mov
mov
mov
test
cld
outs
cli
add
adc
sub
cmpxchg
sub
iret
and
sbb
sti
inc
aas
xor
fsubr
in
pop
push
push
cmp
popa
inc
sahf
add
and
aas
sub
mov
inc
adc
cwde
add
(bad)
inc
clc
sbb
or
movs
dec
pushf
pop
jbe
cmp
sub
retf
inc
int
retf
adc
inc
int3
sbb
push
push
pop
cld
or
popf
mov
add
inc
pop
mov
lods
or
stc
mov
outs
push
out
jmp
rcl
in
cmp
jle
cmp
icebp
rol
jnp
stos
lock
pop
cmps
cmp
in
xor
ror
inc
(bad)
aaa
scas
jo
add
inc
popa
test
pop
push
loopne
sbb
and
dec
mov
call
(bad)
loop
mov
dec
loopne
xor
mov
ds
pusha
or
push
int3
pop
rol
pop
into
pop
mov
add
cdq
call
or
xlat
seto
mov
je
or
sbb
fld
shl
push
(bad)
sahf
jno
(bad)
ror
xchg
push
and
cmps
pop
mov
xchg
into
and
sbb
add
lahf
(bad)
into
add
not
fisttp
dec
xor
pop
mov
jl
clc
cmp
pop
sbb
jo
int
ret
inc
jb
sub
and
push
inc
addr16
jbe
and
mov
xchg
test
xor
xchg
aas
dec
icebp
jno
ja
sbb
scas
push
sbb
ror
lods
mov
shr
xor
jge
sti
add
in
outs
mov
pusha
lods
div
rcr
fst
scas
nop
lock
rcl
sahf
je
cwde
push
xlat
cmp
mov
std
inc
cmp
and
sbb
in
jnp
(bad)
adc
in
pop
sar
cmp
or
iret
pop
(bad)
shl
mov
(bad)
xchg
add
fcom
mov
or
jge
dec
(bad)
lods
fstp
mov
jo
add
pusha
ins
jg
(bad)
out
jns
push
shr
mov
mov
jl
mov
sub
add
push
in
icebp
jle
dec
je
pop
dec
adc
pop
jge
dec
jle
mov
repz
nop
scas
cmps
je
sar
mov
call
mov
sbb
cwde
test
fimul
outs
xor
xchg
(bad)
not
sahf
leave
push
adc
xchg
js
leave
test
into
mov
xor
jmp
push
popa
lods
div
into
fstp
loope
adc
push
sub
mov
dec
movs
sbb
mov
clc
jo
adc
call
push
scas
mov
add
out
cmp
bound
das
xor
or
daa
inc
cmp
jb
cwde
in
jne
jg
outs
mov
sbb
jle
add
ror
jmp
jb
lods
repz
xchg
add
pop
inc
inc
pop
les
rcl
test
cmp
cli
cmp
cdq
jecxz
cmps
gs
stos
add
enter
mov
mov
dec
cmc
ret
int
cmp
std
jb
nop
ja
mov
xor
sbb
icebp
loopne
and
pop
lahf
movs
xchg
xor
cmp
add
add
or
mov
inc
cmp
in
arpl
cld
inc
movs
mov
fsubr
(bad)
and
ins
and
jmp
jmp
inc
mov
push
imul
not
push
pusha
dec
fild
xor
call
jg
sbb
cmp
inc
xchg
push
jge
lea
cwde
repz
push
cmp
(bad)
retf
repnz
inc
jp
cmps
inc
movs
cdq
inc
dec
pop
sbb
(bad)
(bad)
in
and
enter
adc
inc
cmp
out
popa
scas
addr16
or
sahf
ins
or
aas
or
and
in
popa
ror
fwait
nop
ret
inc
inc
mov
test
sub
push
add
cdq
rcl
fcomp
or
inc
push
movs
aas
sub
jne
or
pushf
fild
cli
push
sub
cmp
push
inc
pop
push
push
pop
psrlw
mov
push
or
movs
cmp
cmp
es
add
push
and
sub
inc
push
or
hlt
inc
inc
sub
mov
jo
mov
push
in
mov
cdq
jle
push
jo
or
repz
call
jecxz
dec
push
inc
leave
movs
addr16
cmps
in
push
mov
inc
jnp
xchg
mov
bound
push
dec
jbe
neg
out
in
out
inc
jmp
ds
gs
rcl
xchg
lods
sbb
ins
call
div
jmp
enter
inc
push
mov
xor
xchg
cwde
mov
dec
aad
pop
pop
int
(bad)
retf
icebp
ds
xchg
dec
out
xchg
push
or
in
lods
cmp
xchg
or
and
movs
cwde
je
push
shl
inc
adc
mov
mov
mov
mov
in
(bad)
(bad)
and
fadd
inc
jg
(bad)
aad
sbb
jl
lds
shr
stos
rcl
sub
sbb
push
mov
stc
push
test
jns
sti
dec
leave
(bad)
sbb
mov
leave
mov
or
cs
pop
fsub
and
jns
js
in
nop
or
rcr
and
pop
adc
mov
in
stc
movs
push
sar
mov
cmp
fist
cmp
and
out
push
push
inc
in
jle
not
out
lahf
inc
adc
fbstp
push
xlat
xor
dec
aaa
je
pop
add
mov
aad
(bad)
shl
inc
dec
int3
js
dec
test
adc
(bad)
enter
enter
not
inc
pop
lds
inc
ins
fild
int3
pushf
loopne
sbb
sti
or
in
and
adc
adc
fsin
push
push
jae
xlat
pop
pop
push
das
arpl
jns
iret
stc
sbb
lock
dec
outs
sub
mov
out
sbb
inc
into
xor
cmp
jmp
cmp
(bad)
iret
dec
push
mov
idiv
imul
mov
lock
dec
jge
sbb
enter
and
cmp
inc
fcmove
std
cs
iret
scas
(bad)
pop
(bad)
xchg
cmc
inc
loop
mov
test
xchg
icebp
jne
mov
cmovo
aad
repnz
(bad)
mov
push
jno
cmps
mov
sub
push
push
inc
fcmovbe
pop
sahf
push
adc
nop
mov
pop
xchg
fdiv
sbb
cdq
int
push
cmp
fnstcw
xor
mov
mov
jmp
mul
mov
sbb
sar
scas
pop
hlt
xchg
add
inc
sbb
and
js
jmp
adc
xor
sbb
ins
cmp
jno
gs
xor
inc
mov
fwait
mov
sbb
mov
sub
adc
cs
ret
pusha
ret
int3
int3
rol
test
int
push
jno
rol
or
out
sub
sbb
and
call
sub
ror
xchg
push
es
push
sar
cmp
cli
mov
test
pop
imul
cmp
mov
jecxz
inc
js
jmp
fld
xor
lods
ins
push
inc
sbb
push
inc
push
add
aas
pop
dec
aam
push
inc
shr
out
lods
and
dec
mov
leave
retf
xchg
std
fiadd
adc
inc
out
jmp
test
lds
inc
add
sahf
jle
xor
lock
xor
and
ins
fidivr
push
int
cwde
imul
test
aas
fldcw
adc
mov
mov
pop
adc
out
aas
addr16
cmp
sub
ret
push
inc
push
dec
push
push
dec
push
inc
cmp
ss
dec
out
jnp
enter
push
ins
xchg
mov
cmp
mov
call
jg
test
stc
dec
inc
and
cmp
jmp
inc
iret
pop
cmp
fmul
retf
inc
push
inc
push
adc
cmc
xor
leave
mov
(bad)
jne
gs
inc
jb
fstp
push
enter
fnstcw
mov
inc
inc
fs
movs
outs
and
cmp
adc
cwde
out
mov
lsl
inc
out
xor
mov
mov
xor
pop
mov
jge
sub
push
fs
cmp
cmp
cli
ds
inc
sbb
jo
push
or
enter
adc
and
xchg
fnsave
inc
add
lock
push
jbe
cmps
sub
sub
mov
ins
mov
(bad)
jnp
inc
scas
inc
jb
cmp
and
and
pop
and
mov
jle
push
ds
icebp
inc
ds
retf
sahf
inc
hlt
pop
xchg
(bad)
ds
jle
test
test
mov
loope
stos
cmp
(bad)
adc
js
repz
rol
push
data16
(bad)
fcmovbe
xchg
cmp
jecxz
popf
imul
mov
sbb
mov
mov
fstp
cmp
inc
add
mov
out
cmp
sbb
mov
mov
inc
mul
std
ret
repz
daa
adc
lds
sbb
inc
je
cmp
jmp
cmp
inc
loopne
fsubr
jle
mov
xchg
test
enter
sbb
into
jl
inc
jae
jo
fidivr
inc
add
test
loopne
and
mov
stos
sub
jl
dec
scas
inc
mov
xor
jecxz
cdq
lods
xchg
push
xor
inc
out
cmp
sub
test
mov
mov
nop
(bad)
int3
mov
test
and
mov
jno
ret
or
jns
je
rol
push
icebp
test
adc
stos
mov
inc
mov
stc
jns
ins
sar
push
je
xor
out
jmp
out
stos
mov
and
mov
loopne
popa
inc
rcr
addr16
sbb
xchg
fist
lock
sbb
ror
ret
xchg
test
jns
std
push
sbb
mov
add
xchg
cmp
jge
out
push
scas
sbb
sub
sbb
fcmovnb
repnz
jns
or
dec
xlat
adc
mov
or
jo
ins
aas
pop
shr
mov
dec
xchg
ret
cmp
neg
sbb
inc
cmp
outs
dec
jle
je
jb
mov
cmp
adc
cmps
fcomp
or
iret
sub
out
jne
mov
jg
outs
add
imul
mov
dec
or
pop
inc
test
popf
and
inc
jl
loop
repnz
popa
inc
xchg
std
xor
sub
mov
adc
push
sub
stos
mov
(bad)
loop
inc
test
inc
cmp
or
int3
(bad)
mov
cld
fwait
or
lds
pushf
adc
cmp
(bad)
repz
sti
add
jmp
mov
ss
cmp
jns
and
jno
cmc
les
cmp
lock
std
arpl
loopne
fdivr
xchg
stc
inc
mov
js
jmp
ds
je
cmps
in
outs
cmp
imul
adc
jnp
sbb
ret
and
test
jo
mov
mov
mov
mov
retf
adc
iret
xchg
or
aas
xchg
or
pushf
jae
stos
cmp
(bad)
repnz
adc
jmp
mov
ss
aaa
xchg
mov
push
(bad)
jg
cli
js
push
aam
nop
push
xchg
imul
dec
movs
psadbw
movs
aaa
fwait
xor
jno
addr16
cmp
xchg
mov
xor
fmul
and
and
fcomp
xchg
mov
mov
cld
mov
lods
push
mov
je
adc
fld
adc
aad
cmp
ins
jp
add
or
jb
cmp
test
jno
ins
cdq
jecxz
(bad)
cmp
xchg
and
jns
inc
sub
sbb
sbb
jge
in
outs
nop
jecxz
push
xchg
jl
sbb
sub
or
jge
fcmovb
inc
push
fs
dec
and
fstp
mov
add
cmp
cmp
sbb
(bad)
(bad)
idiv
scas
rol
mov
cmp
mov
shl
add
pop
lods
test
inc
add
jnp
or
mov
std
or
sbb
jg
mov
inc
inc
leave
inc
jne
and
mov
sub
scas
outs
cmp
mov
sbb
sub
push
adc
sbb
jae
aas
cmp
and
xlat
adc
into
jmp
out
in
adc
add
cmps
pop
es
mov
icebp
test
lds
hlt
adc
ficomp
sub
call
ret
(bad)
sub
jge
mul
mov
cmc
inc
push
cmp
js
in
in
fstp
ror
sbb
or
sbb
adc
rcl
mov
mov
push
cmp
xchg
and
outs
into
fadd
add
mov
stos
hlt
test
fsub
jmp
pop
cld
cmp
call
inc
paddq
aam
jge
push
jg
add
xchg
(bad)
cmovge
nop
cmp
xor
jp
mov
mov
push
outs
lods
retf
sbb
cmp
adc
fnstcw
or
mov
ss
(bad)
ret
inc
mul
pop
outs
or
test
shr
jl
sub
jo
push
dec
shl
jmp
adc
outs
push
dec
jbe
ins
fild
(bad)
cmp
cld
loopne
imul
outs
mov
fadd
pop
xor
pop
or
(bad)
sahf
jne
mov
aam
mov
pop
xchg
cmp
or
xor
ins
arpl
outs
les
loopne
dec
not
js
push
push
lea
jb
repz
cld
xchg
(bad)
call
pop
jg
(bad)
adc
push
call
cmp
sbb
aam
or
sub
and
jno
sub
loope
hlt
bound
aaa
repz
push
ret
arpl
xrelease
les
mov
jmp
push
xor
jl
sub
and
fsubr
mov
test
(bad)
aam
fdiv
ret
cmp
adc
cmp
cld
pop
aam
sar
xor
sbb
push
pusha
xchg
jb
xor
(bad)
lods
dec
(bad)
cmp
inc
(bad)
pop
cmc
rcr
mov
and
leave
minps
mov
inc
not
cmc
aas
fisttp
mov
mov
inc
inc
leave
movs
jmp
stc
repnz
into
int
jge
iret
test
cmp
sub
xor
enter
mov
out
cli
rol
push
test
or
sbb
cs
inc
mov
stos
xchg
push
cli
sub
or
(bad)
daa
inc
mov
or
xor
dec
pop
ret
das
(bad)
aam
pop
jge
repnz
inc
ins
pop
call
clc
sbb
adc
ror
inc
repnz
sub
cli
test
test
data16
adc
and
(bad)
(bad)
push
cmp
jmp
pop
push
inc
or
shl
cmps
sub
mov
jmp
mov
add
cmp
push
jl
xchg
addr16
arpl
mov
fmul
pop
inc
iret
sub
lods
jne
in
pop
cmp
retf
outs
jl
cdq
sbb
ja
mov
cmp
or
mov
push
out
pop
push
cmp
ret
push
mov
dec
jo
cdq
fnstcw
or
out
mov
push
sub
xchg
test
cli
iret
ins
fcomp
repz
mov
mov
sbb
leave
imul
test
aaa
fnstcw
inc
push
mov
and
mov
mov
pop
(bad)
sub
pop
and
hlt
jns
fsubr
push
je
cmp
push
lahf
or
fistp
jne
pop
add
aad
sub
stc
pop
push
inc
push
jo
(bad)
add
inc
sbb
xor
nop
fcomip
inc
inc
cli
js
scas
bound
std
out
mov
pop
dec
imul
adc
cmp
lock
dec
xchg
into
sub
adc
jl
mov
pop
ficom
int
cmc
inc
shr
sbb
aaa
xor
scas
xchg
or
(bad)
ror
fld
pop
sbb
jp
call
aas
sar
or
inc
jbe
icebp
cwde
push
mov
test
stos
or
cmp
fcomp
in
adc
mov
lods
aas
stos
cmp
dec
inc
push
cs
push
sub
repz
push
cmp
dec
test
addr16
cmp
jo
mov
adc
xchg
and
repz
cmp
mov
lods
mov
mov
jno
mov
xchg
dec
cmp
mov
mov
and
mov
clc
mov
daa
add
sbb
or
pop
add
mov
outs
push
sbb
call
xor
je
inc
mov
and
sti
dec
mov
cs
ds
dec
out
jno
lods
ret
cmp
pop
pop
mov
dec
add
cmp
jns
(bad)
mov
call
lock
jg
fiadd
(bad)
std
push
mov
or
sub
retf
movs
dec
stc
into
sbb
clc
nop
pop
sti
mov
pop
stc
adc
mov
(bad)
in
push
inc
imul
mov
fadd
fimul
xchg
fdivr
(bad)
(bad)
icebp
or
aas
mov
inc
jnp
fwait
inc
pop
ja
sub
int3
out
cmp
pop
pushfw
mov
outs
or
push
ins
mov
inc
jno
pop
pop
cdq
jecxz
mov
adc
mov
sbb
inc
sub
dec
(bad)
pushf
sub
adc
xor
sub
and
add
stc
out
cs
cmc
jno
and
adc
cmp
push
out
pop
adc
in
loopne
bound
inc
das
sbb
push
ret
cdq
mov
imul
add
call
(bad)
inc
movs
inc
cmps
lahf
sub
adc
dec
mov
cmp
jge
inc
aad
xchg
jne
mov
repnz
sub
bound
mov
cwde
test
cs
es
out
cmp
pop
inc
fisttp
movs
xchg
inc
xchg
aad
inc
jb
test
fdiv
push
cmp
stc
in
inc
mov
aad
je
sbb
or
inc
xchg
adc
cmp
sub
mov
sub
or
fisub
cmp
fisub
stos
mov
(bad)
loope
xor
inc
mov
dec
popa
jno
inc
in
in
jmp
mov
cmp
and
les
leave
xchg
push
xor
test
jecxz
jecxz
mov
sub
cmp
retf
xlat
imul
or
jno
(bad)
dec
movs
jbe
xor
xchg
ret
cmc
cwde
inc
xchg
mov
push
dec
out
div
push
jns
fimul
dec
and
jecxz
hlt
sub
jl
aad
inc
jge
call
inc
xlat
fmul
xchg
push
neg
in
sbb
push
or
sbb
fs
jp
jno
jle
sbb
shr
xchg
leave
adc
rcl
jno
inc
fwait
sub
sub
cmp
pop
ins
mov
dec
test
jno
xchg
jp
mov
pop
pop
iret
mov
jp
fst
cmp
sub
jmp
addr16
out
mov
dec
inc
shr
sti
stc
pop
fdiv
add
imul
rcr
adc
inc
jns
test
daa
jecxz
jge
jge
mov
fstp
cmp
jno
jg
leave
add
push
stc
add
inc
adc
inc
(bad)
aad
arpl
push
pusha
sub
gs
mov
xchg
test
sub
mov
(bad)
push
data16
stc
mov
pusha
jns
cmp
lea
test
out
pop
mov
jns
int3
adc
sbb
sbb
and
sbb
jmp
push
ds
jns
test
xchg
js
cmp
jo
cmp
mov
xchg
popf
stc
pop
outs
cmp
jle
add
mov
xor
in
cwde
cmp
jmp
pop
lds
test
cli
pop
pop
je
add
xchg
jle
bound
jno
sub
(bad)
xor
push
cs
and
ret
loope
retf
call
(bad)
test
mov
cmp
jae
mov
out
into
jno
test
mov
fistp
jbe
xchg
gs
popa
jl
pop
(bad)
pop
sar
push
retf
fndisi(8087
pop
in
pop
mov
int3
(bad)
shr
pop
fadd
mov
fiadd
cmp
pop
push
dec
out
(bad)
frstor
jns
gs
xchg
inc
cmp
cmp
or
adc
push
test
sub
mov
fadd
xor
addr16
mov
nop
sahf
das
or
pop
loope
das
test
scas
mov
xchg
and
cmp
xchg
(bad)
nop
mov
jmp
in
(bad)
and
jns
mov
cs
sub
pop
aas
xchg
push
adc
fwait
das
cdq
push
shl
(bad)
jmp
(bad)
fs
(bad)
dec
dec
mov
mov
inc
lock
call
call
xor
push
jo
pop
addr16
cmp
fs
mov
push
fcmovu
cmps
stc
mov
add
shr
mov
lahf
push
cmp
jnp
(bad)
pop
cdq
mov
mov
test
cmp
jge
pop
arpl
sbb
jmp
or
pop
push
and
sub
xor
icebp
cmc
je
test
sahf
jns
(bad)
jns
mov
mov
cmps
sub
push
xor
dec
pop
xor
fwait
or
jp
pop
aad
pop
sub
jns
pop
dec
addr16
jmp
or
sahf
cmps
dec
jg
sub
xor
mov
and
xor
sub
or
jmp
call
arpl
xor
jg
pusha
test
sbb
inc
das
sub
ss
cli
ficomp
data16
xor
mov
adc
xchg
fs
cs
mov
cmp
and
jo
loopne
stos
cdq
fisubr
adc
push
enter
ret
scas
and
cs
(bad)
sub
sar
inc
stc
mov
cmp
call
push
cld
push
mov
arpl
jecxz
dec
movs
or
mov
pop
outs
sbb
inc
pop
sbb
shl
adc
xor
je
xor
sahf
pop
xor
mov
sti
inc
sbb
mov
jecxz
pop
jno
pop
in
dec
pop
lock
pop
xlat
(bad)
and
pushf
dec
stos
xor
ja
xchg
jno
(bad)
fimul
or
outs
loopne
aaa
dec
sbb
mov
push
sub
(bad)
inc
outs
xor
je
call
and
dec
jl
push
into
rcr
mov
and
mov
sub
xchg
jle
jo
jb
fmul
jo
retf
pop
cmps
jmp
sbb
xor
push
arpl
test
mov
push
call
ja
test
mov
into
pop
jl
mov
sahf
and
cmp
pop
ds
fcom
mov
adc
xor
adc
pop
addr16
pop
test
call
retf
ret
push
ins
test
mov
out
iret
mov
jmp
mov
ss
adc
jmp
cs
jae
sub
stc
push
jo
enter
inc
int3
sbb
sti
inc
sub
xor
xor
jno
int3
jle
or
leave
lods
call
arpl
fistp
add
add
jo
jne
outs
aaa
xor
jnp
lea
int3
popf
pop
bound
fs
ins
xor
jae
or
push
aad
mov
rcr
push
das
out
xor
aas
sub
jo
xchg
out
push
loopne
add
ds
jmp
xlat
repz
clc
cmp
adc
mov
jmp
inc
mov
jbe
jno
cmc
inc
out
and
xchg
xchg
les
push
loopne
out
add
and
ficomp
sbb
add
daa
dec
or
xor
(bad)
fiadd
das
(bad)
push
daa
cmp
fistp
inc
(bad)
icebp
add
repz
bound
mov
pop
or
aad
inc
pusha
dec
push
dec
lea
xor
(bad)
ja
dec
(bad)
mov
sub
inc
inc
push
sti
shr
inc
mov
push
jle
sbb
pop
jnp
mov
sub
dec
popf
cmp
or
es
push
jge
mov
inc
jae
(bad)
call
pop
or
iret
dec
or
test
push
imul
test
cmp
fidiv
test
neg
cdq
inc
dec
mov
int3
or
inc
out
xor
inc
sub
movs
pop
cmp
scas
or
into
xor
push
call
mov
js
mov
rcl
in
xlat
or
leave
cmp
xchg
sbb
cmp
xchg
mov
inc
cmp
lds
jnp
data16
mov
jo
pop
ins
sub
inc
fscale
leave
push
mov
out
sbb
cmps
mov
hlt
pop
rol
in
mov
inc
push
popa
mov
pusha
(bad)
xlat
leave
mov
sub
add
xor
in
ds
div
sub
xor
sbb
sub
shl
jl
retf
arpl
inc
cdq
pop
push
call
sahf
cmp
imul
cmp
hlt
or
inc
(bad)
aad
adc
inc
(bad)
es
jmp
sub
(bad)
pop
dec
pop
shl
cs
int3
or
xor
rcr
inc
popa
(bad)
inc
ds
dec
pop
inc
dec
mov
iret
inc
mov
add
add
or
scas
jno
add
movs
push
inc
or
adc
addr16
cmp
and
repnz
jecxz
push
shr
sub
vpminsw
shl
mov
gs
inc
push
sbb
cmp
mov
out
fdiv
or
xchg
add
xchg
pop
jo
fdiv
ficom
mov
stos
mov
sub
push
ds
imul
cmc
(bad)
inc
sbb
mov
xchg
fadd
and
in
inc
enter
aam
sub
sbb
sub
pop
pop
mov
pop
lea
adc
stc
iret
inc
(bad)
dec
sbb
mov
test
cmp
adc
dec
aas
jge
(bad)
fld
xor
sub
ret
test
arpl
scas
fs
mov
pop
mov
sbb
jno
imul
ffreep
jns
fisub
popa
nop
or
push
or
idiv
xor
sbb
adc
push
inc
in
pop
(bad)
fnstsw
out
pop
and
mov
cmps
js
dec
leave
call
rol
add
mov
xchg
xchg
mov
add
mov
(bad)
cmp
push
sub
adc
adc
xchg
out
xor
aad
mov
mov
cmp
mov
ret
ds
sti
xchg
pop
dec
adc
(bad)
cs
into
mov
dec
xor
aas
add
sar
cmp
jno
cli
test
sbb
mov
cmp
iret
sbb
jb
retf
mov
sbb
std
fidivr
sar
addr16
push
jl
bnd
add
mov
rol
mov
fwait
push
js
jmp
mov
add
iret
pop
stc
dec
out
test
scas
retf
aad
mov
lods
sub
mov
xor
dec
enter
fimul
inc
cmc
add
push
push
dec
pop
inc
aad
sbb
cdq
sub
jl
sbb
inc
int
push
stc
inc
hlt
and
add
sbb
fidivr
inc
push
inc
call
movs
push
xor
dec
cmc
int3
test
dec
repz
or
jge
xchg
gs
mov
and
push
push
retf
je
ins
repnz
sbb
stos
jge
ins
push
rcl
and
or
inc
mov
push
retf
jl
jmp
and
pop
inc
inc
cdq
arpl
out
stos
xor
jl
jns
jmp
test
imul
not
jae
in
aad
test
cmp
and
aaa
cmp
mov
call
push
jmp
and
jb
mov
jno
sub
test
outs
xor
addr16
js
jmp
jecxz
sti
(bad)
dec
loop
jno
cmp
mov
jge
fisubr
dec
cs
inc
shl
inc
lahf
cmp
push
std
inc
sub
jae
out
rcl
retf
fadd
(bad)
fcom
test
jg
sub
pop
sbb
iret
xlat
arpl
je
cdq
sbb
shl
jne
jl
imul
fcmovnb
inc
movs
repnz
inc
in
xchg
xchg
pop
adc
cmp
mov
xor
jns
inc
mov
js
mov
cmc
ds
int
scas
pop
inc
jmp
mov
inc
out
xchg
imul
and
in
ret
idiv
xor
lods
repz
cmp
add
fwait
mov
(bad)
aas
pop
arpl
js
push
int
xchg
popf
push
cmp
fistp
sub
(bad)
cmc
mov
push
aas
inc
inc
xchg
xchg
dec
sbb
cmp
sahf
mov
lods
mov
addr16
daa
fcmovne
shl
fistp
mov
cmp
gs
sbb
into
lea
mov
sahf
or
sbb
rcl
ins
mov
addr16
(bad)
imul
sbb
add
mov
inc
push
lock
push
pop
repnz
out
cld
pop
nop
push
gs
fs
and
jmp
mov
push
xor
add
(bad)
mov
cmp
dec
mov
fadd
inc
mov
repz
mov
inc
xor
inc
inc
and
aam
std
(bad)
cmp
aaa
xor
dec
xor
sar
mov
cmp
or
adc
jo
or
imul
lea
mov
add
sahf
inc
aad
jae
xchg
nop
sub
xchg
dec
leave
inc
cmp
fsubrp
or
mul
jb
jno
pop
jl
jecxz
repnz
stc
inc
cmp
dec
inc
push
out
scas
ret
inc
shr
sub
sbb
cmp
cdq
sbb
icebp
jne
xor
xor
aad
retf
aam
pop
jno
std
jp
add
mov
add
cmp
fdivr
cmp
stos
in
sbb
xor
out
sub
jno
sbb
sbb
bound
adc
pop
jmp
dec
or
aaa
cmp
out
and
js
jno
sar
jns
fwait
xor
jb
fist
pop
cmp
div
fstp
or
(bad)
icebp
push
jno
popf
mov
fstp
loope
and
inc
dec
scas
cmp
mov
movs
adc
inc
push
fs
jp
fmul
sar
mov
xchg
mov
sub
outs
addr16
mov
inc
aas
sub
movs
cmp
rcr
iret
xor
mov
or
ret
jg
mov
out
add
fld
dec
sub
(bad)
sti
pop
dec
inc
call
pop
movs
adc
inc
dec
pop
cmp
repnz
ds
adc
ror
out
inc
jmp
push
inc
pop
shr
sbb
sub
mul
jmp
cmp
add
mov
(bad)
mov
inc
mov
inc
test
mov
rep
jle
inc
scas
mov
not
jmp
scas
xchg
xchg
retf
and
cmp
loop
rol
loope
dec
fdivr
into
add
out
mov
jp
rcl
mov
xchg
dec
mov
nop
pop
ret
add
mov
mov
jp
jge
jp
push
add
xchg
popa
pop
aaa
jb
xchg
fcmovnb
fwait
arpl
mov
cmps
data16
in
pop
xor
mov
inc
push
fstp
sub
into
add
push
or
mov
fild
retf
pop
xchg
pop
xchg
xor
cmp
xchg
xor
shr
add
jns
arpl
sar
sbb
out
mov
mov
inc
sbb
jns
and
test
into
and
add
sub
xor
or
ja
imul
and
pop
cmp
dec
fnstsw
add
in
ss
push
jbe
push
mov
mov
xor
jge
add
inc
xchg
sub
pusha
stos
popf
(bad)
data16
jl
hlt
or
scas
jge
pop
je
sbb
cmp
jns
jle
adc
mov
outs
or
dec
and
jae
xor
lahf
(bad)
scas
outs
jae
mov
xchg
mov
push
xor
jno
inc
jle
fcmovb
aaa
les
int
ffree
mov
pop
enter
mul
ret
xor
adc
pop
push
test
ins
div
sub
push
(bad)
sti
ror
ss
jle
cmp
inc
js
fisub
jno
cmp
fdivr
adc
jle
dec
cld
bound
loope
cmp
outs
cmp
mov
pop
dec
sbb
add
xor
add
(bad)
xor
ja
jg
cmp
adc
jno
push
dec
xchg
mov
js
push
pop
mov
mov
push
cmp
leavew
inc
in
sbb
in
dec
xchg
inc
les
jmp
push
jns
rol
jge
cmps
xlat
inc
ins
and
mov
adc
xchg
mov
sub
jno
aaa
add
mov
and
cdq
test
inc
hlt
loop
pop
cmp
je
sub
mov
inc
mov
adc
push
push
loop
sub
es
test
stc
(bad)
(bad)
cli
inc
ins
scas
aad
neg
mov
push
fs
es
shl
xchg
fstp
ror
movs
pushf
xor
or
xor
mov
cmps
cmps
cmp
mov
or
stos
or
(bad)
xor
adc
inc
movs
xchg
stc
jb
inc
iret
push
retf
fist
xchg
int
addr16
lock
ja
jb
jne
out
cdq
jns
in
imul
cld
arpl
mov
mov
pushf
add
loope
mov
ss
mov
mov
movs
dec
cld
dec
mov
cmp
daa
xchg
xor
dec
inc
mov
sbb
in
ds
mov
rol
mov
xchg
(bad)
inc
sbb
icebp
nop
ret
xchg
push
mov
cs
inc
jb
xor
test
mov
in
jns
int
or
and
and
fldcw
mov
jg
ja
xor
sub
iret
arpl
cmp
push
ror
pop
or
jmp
jmp
inc
dec
xchg
xchg
and
test
mov
cmps
retf
adc
mov
aam
leave
lds
jno
jl
ja
sbb
adc
iret
and
dec
repnz
pop
scas
aam
test
push
aas
and
inc
push
push
movs
pop
loopne
cmps
push
push
adc
into
fadd
push
stc
inc
sub
les
inc
sbb
inc
cs
inc
sub
push
out
movs
push
inc
pop
dec
pop
int
dec
inc
inc
hlt
pop
lods
shr
dec
cmps
inc
push
data16
xchg
inc
or
jmp
ret
inc
add
xor
cmp
pusha
stos
shr
pop
add
push
jmp
mov
enter
cmp
mov
push
inc
sub
add
xchg
and
fsub
fdivr
cld
mov
push
icebp
mov
loope
push
dec
inc
sbb
inc
sbb
mov
dec
dec
leave
pop
sti
inc
adc
inc
clc
movs
push
ret
sbb
pop
pop
inc
ds
bound
xchg
test
fld
inc
mov
adc
inc
adc
div
(bad)
cmp
mov
movs
inc
dec
rcr
jle
sbb
nop
cmps
inc
push
cmp
dec
ror
int
inc
or
adc
outs
scas
push
scas
in
test
ds
push
or
pop
push
cmps
pop
inc
test
into
inc
test
cmc
inc
lods
and
mov
cmp
pop
movs
sar
mov
mov
in
push
dec
mov
inc
dec
pushw
xchg
cwde
ins
test
ds
call
push
repz
stos
cmp
loopne
adc
xchg
es
mov
retf
sbb
or
(bad)
repnz
cmp
push
inc
inc
and
xchg
lahf
lock
cmp
dec
retf
retf
dec
cmc
inc
icebp
pop
shr
add
sbb
cs
xchg
add
mov
dec
retf
sti
dec
ds
pop
push
mov
test
add
bound
and
cmp
stos
mov
cmps
cli
cmp
imul
rcl
and
arpl
xchg
leave
lock
push
push
or
or
xchg
mov
inc
pop
jno
pop
je
fidivr
pop
dec
jmp
xor
jne
jg
jl
jbe
inc
xlat
in
lea
repnz
inc
cmp
pushf
and
cdq
pop
ret
mov
ins
aaa
hlt
iret
in
neg
int
inc
in
mov
mov
daa
sbb
push
inc
aaa
mov
pminub
pushf
and
test
sbb
jecxz
cmp
ror
dec
inc
into
pop
mov
dec
cmps
inc
pushf
inc
dec
(bad)
lock
lods
mov
jbe
repz
dec
lods
sar
(bad)
mov
les
jo
push
and
cmps
iret
data16
into
pop
pop
or
ror
scas
mov
and
dec
jo
sbb
cmp
or
test
inc
imul
or
pop
sbb
inc
popa
sub
push
ins
cmp
std
push
ins
jb
push
cmp
hlt
int
jae
mov
add
ja
iret
sub
add
cmps
test
or
pusha
sbb
xor
lods
cmp
pop
es
inc
into
xlat
loopne
pop
dec
inc
arpl
adc
inc
enter
mov
xchg
lock
push
call
fxam
cmp
xchg
xchg
sbb
dec
mov
fdivr
mov
sbb
pop
sub
cmp
ds
push
xor
adc
jle
jae
mov
inc
mov
sub
nop
dec
pop
or
mov
pop
cmp
retf
cmp
fs
cli
fisubr
pop
gs
inc
outs
stos
mov
sar
push
sub
aad
inc
jg
cmps
popf
rol
mov
dec
inc
jmp
js
inc
jnp
and
push
mov
retf
outs
inc
mov
cmp
mov
push
xor
xor
push
aas
jecxz
fwait
outs
inc
sahf
mov
pop
aad
sbb
sub
push
jno
imul
push
out
adc
jno
jnp
js
repz
cmp
mov
mov
pushf
mov
inc
test
cmps
sahf
or
mov
jns
dec
js
imul
and
dec
cdq
jl
pop
xor
iret
div
inc
mov
jmp
inc
out
call
xor
push
fistp
mov
popa
and
mov
adc
aaa
shl
jl
jb
inc
je
jno
sub
in
inc
pop
rcl
adc
inc
scas
pushf
mov
inc
xchg
mov
cli
or
mov
fisttp
cmp
mov
push
inc
inc
push
xchg
icebp
fisub
pop
jmp
ds
pop
and
xor
inc
popf
mov
shr
mov
fistp
xor
outs
cmc
fsubrp
das
lods
(bad)
cld
or
loopne
jge
(bad)
mov
inc
ins
cdq
push
lods
push
fistp
jne
data16
inc
inc
into
adc
jmp
cmp
adc
xor
cmp
push
scas
mov
adc
inc
lahf
test
jmp
mov
inc
(bad)
dec
movs
out
sbb
xchg
iret
imul
push
xchg
xchg
jno
fimul
ins
push
test
mov
mov
sar
aam
cld
or
(bad)
xor
ds
arpl
ins
pop
scas
sar
or
movs
cmp
div
or
mov
push
mov
out
mov
shr
inc
jle
gs
adc
loope
dec
add
repnz
cmp
outs
jnp
push
inc
jp
add
jge
sahf
or
out
cmp
dec
pop
inc
shl
and
scas
mov
out
pop
ja
mov
inc
cmp
jae
inc
lods
sbb
jecxz
inc
sbb
xor
xor
sti
int
ret
cmp
imul
inc
inc
cli
call
js
adc
pusha
std
out
and
sbb
and
mov
inc
mov
repnz
ins
inc
pop
into
pusha
mov
inc
js
dec
jae
add
arpl
jb
bound
in
clc
adc
mov
fcom
xchg
mov
inc
mov
std
mov
call
and
xor
mov
or
loopne
add
inc
test
sahf
cmp
movs
mov
and
mov
xchg
loopne
xor
mov
mov
inc
fiadd
and
push
mov
nop
cmp
push
(bad)
dec
js
inc
xchg
sar
adc
in
push
test
sub
retf
and
mov
mov
xor
mov
jnp
(bad)
push
push
fisttp
inc
push
data16
sub
sbb
pop
sub
and
mov
cmp
jns
inc
jo
ja
test
stc
cmp
mov
inc
js
add
mov
or
push
jno
mov
add
out
jmp
in
cmp
sub
inc
movs
movs
rol
pop
adc
cmp
or
sbb
ds
add
or
ret
jle
mov
and
pop
mov
repz
jnp
mov
icebp
xor
add
mov
shl
jns
jno
mov
xor
lods
and
pop
icebp
adc
adc
imul
jbe
aam
int3
cmp
add
into
scas
xchg
jmp
shl
dec
jle
sar
call
cld
fistp
shl
out
pop
test
push
ss
or
cmc
adc
imul
xchg
sbb
imul
adc
and
fbstp
and
mov
jns
cmp
pushf
ret
cmp
cmp
or
ret
aas
jge
jmp
xchg
adc
sub
lahf
xchg
aaa
add
shr
and
sbb
cmp
(bad)
sub
ds
mov
or
cmp
and
cli
scas
inc
ins
sbb
mov
sbb
repz
out
push
cmc
aad
clc
add
lock
ins
push
ror
inc
xor
in
repz
fistp
mov
fwait
mov
loopne
fmul
add
jae
out
mov
repz
adc
pushf
mov
xor
fiadd
sub
iret
pop
and
shr
or
add
adc
xchg
imul
mov
fadd
test
push
mov
loop
sbb
jae
dec
sub
jecxz
sub
inc
mov
sub
push
ficomp
rol
add
dec
pusha
add
jp
sbb
xor
aas
div
adc
lds
sub
jbe
inc
mov
ins
jmp
pop
xor
lahf
fild
(bad)
out
mov
cmp
addr16
push
xor
or
xchg
xchg
fsubp
inc
jbe
shl
push
inc
xlat
fdivr
fisttp
inc
in
push
lock
test
sub
inc
mov
xchg
sbb
movs
and
pop
jns
or
inc
(bad)
nop
jmp
shl
xlat
loopne
pop
cmp
sub
jns
dec
repz
loope
dec
xchg
test
xlat
pushf
lods
shl
fidiv
test
fdivr
pop
fld
outs
add
inc
je
inc
jnp
in
imul
loopne
cs
inc
jmp
xor
mov
cmp
enter
pop
bound
in
sub
inc
gs
mov
push
xchg
xchg
sti
fldenv
xor
cmps
inc
dec
mov
loope
pop
jp
fild
inc
and
mov
and
in
xor
adc
cmp
ins
popa
loop
jmp
lods
cld
out
ret
inc
je
movs
out
jl
sub
fstp
sub
iret
fsubr
xor
cmp
xor
out
stc
jp
inc
cdq
das
and
imul
inc
int
push
bound
sbb
mov
popa
add
inc
sbb
or
sti
in
pushf
mov
test
sub
es
xlat
xchg
sbb
inc
cmp
out
das
int
(bad)
sbb
inc
mov
popf
imul
cmp
stos
mov
adc
or
or
or
repnz
push
ins
stos
mov
mov
movs
jbe
mov
mov
push
sti
cmp
mov
pop
ja
xchg
push
mov
or
mov
cwde
(bad)
scas
push
addr16
inc
xchg
call
jo
popf
push
into
je
fxam
sub
mov
adc
sbb
int
cmps
xor
out
adc
jno
test
fistp
or
(bad)
cmc
adc
shl
and
push
and
mov
pop
mov
sub
pop
movs
pop
into
sbb
sbb
outs
mov
sbb
pop
(bad)
and
fnsave
mov
xchg
jbe
and
xchg
cmp
mov
out
out
jno
repnz
stos
icebp
xchg
test
mov
sub
cmps
mov
jns
mov
and
and
out
dec
or
push
lds
test
test
mov
mov
jno
xor
clc
int3
fmul
xchg
int3
adc
std
xadd
cmp
test
outs
sub
adc
jns
pop
sahf
imul
or
mov
xchg
scas
fbstp
daa
jo
xchg
fsub
push
int3
inc
outs
data16
test
adc
int3
ins
pop
pop
neg
aad
std
stos
jl
cmps
xor
inc
inc
sub
xchg
sahf
aaa
jmp
lods
std
dec
imul
bnd
cmps
mov
lock
cmp
dec
pop
retf
pop
aad
inc
fisttp
stos
cmp
add
dec
dec
push
shr
mov
mov
xlat
inc
pop
ss
cmp
bound
xor
hlt
xor
leave
xor
fdivrp
dec
repz
mov
fsub
ds
iret
imul
repz
lea
nop
cmps
lods
enter
cmps
(bad)
ins
inc
out
out
pop
retf
out
push
in
jecxz
inc
lods
rcl
add
icebp
cmp
jecxz
dec
scas
ror
pop
es
cmp
addr16
cwde
or
jecxz
cld
sar
sbb
push
add
push
pop
mov
stc
add
cmc
ds
icebp
ja
xchg
or
mov
cmp
mov
std
cmp
jecxz
cmp
ja
inc
or
cmp
sbb
cmp
(bad)
jbe
push
fisubr
jno
dec
jae
outs
and
outs
jnp
popf
jb
jl
clc
(bad)
stc
and
ins
add
inc
fwait
das
or
and
sbb
inc
push
or
aaa
sub
push
mov
out
mov
mov
inc
inc
into
pop
pushf
in
pop
(bad)
cmc
xchg
mov
mov
loopne
setl
sub
js
jb
mov
ja
sbb
loopne
mov
jmp
das
add
cmp
in
add
jns
mov
mov
mov
inc
mov
fwait
enter
into
inc
pushf
jp
cld
and
rol
out
movs
xor
retf
adc
icebp
or
test
add
inc
in
imul
popa
cmc
addr16
push
js
test
test
dec
ror
aaa
pop
cmc
inc
clc
inc
push
adc
imul
push
add
clc
ss
mov
mov
in
test
cmc
adc
xchg
mov
mov
cmp
icebp
pop
push
and
mov
es
mov
pop
jmp
mov
mov
shr
add
mov
inc
jecxz
popa
test
adc
sahf
inc
push
xor
adc
jo
sbb
icebp
bound
add
bound
inc
and
sub
cmp
adc
dec
jl
xor
inc
aaa
shl
std
int
pop
cmp
xor
cmp
xchg
fcom
and
pusha
push
adc
fild
or
(bad)
dec
fiadd
adc
cmp
fs
je
cwde
push
les
out
inc
push
cmp
inc
dec
pop
jb
adc
fiadd
rcr
clc
or
rcl
test
mov
jmp
cwde
js
nop
aas
push
outs
lods
mov
push
push
xchg
cld
xchg
push
push
sub
out
test
in
stos
ins
mov
sbb
test
xor
jg
retf
adc
cdq
inc
imul
mov
js
inc
hlt
inc
in
jmp
scas
call
ret
mov
sub
cmp
inc
push
scas
push
and
ret
and
cmp
cmp
inc
bswap
loopne
cld
jl
stos
dec
jne
retf
sub
aaa
ins
lods
xchg
mov
inc
add
inc
stos
ror
(bad)
pop
push
jnp
ja
movs
cmps
fcmovu
or
push
sub
jns
cmp
cld
jo
ret
jecxz
xchg
std
cli
or
jmp
pop
fld
into
fs
mov
aas
xor
cmp
inc
inc
mov
pop
mov
in
mov
mov
push
dec
sti
push
pop
and
aam
ret
push
jnp
push
pop
ins
cli
jmp
lods
mov
fs
xor
(bad)
ds
or
movs
stc
inc
pop
sti
int
or
fist
cmp
dec
mov
pop
lods
xchg
xor
cs
dec
xor
dec
push
sbb
pop
xor
mov
test
xchg
sbb
ins
mov
jmp
js
push
push
idiv
xor
scas
lds
test
rol
fdivr
or
outs
mov
sbb
mov
jns
fdivp
and
ret
fdiv
retf
fcmovb
and
cmp
sub
pop
in
pushf
jmp
push
in
pop
nop
fcomp
and
inc
pop
cdq
mov
jmp
add
cli
in
push
fistp
xchg
dec
adc
xchg
js
in
fstp
jb
xchg
imul
cmp
mov
jl
outs
dec
not
cmp
xchg
and
mov
xchg
sti
mov
iret
into
push
imul
adc
ret
mov
jg
push
add
iret
pop
jno
and
jge
(bad)
std
xchg
repnz
fstp
mov
lock
jl
cli
call
int3
jmp
ds
push
mov
cmp
push
mov
rcl
inc
pop
adc
push
loope
xchg
loopne
(bad)
sub
js
and
add
mov
int3
jmp
popf
scas
icebp
shr
jns
sbb
sub
sbb
sar
cmp
cs
and
push
movs
push
stc
(bad)
leave
and
jecxz
adc
xlat
call
out
sub
inc
fst
jp
cs
sbb
adc
ds
test
push
fld
push
xchg
jmp
clc
xor
xor
outs
cmp
stc
xor
add
aaa
pop
or
pop
ss
xor
xor
sbb
mov
les
pop
adc
std
leave
fwait
jge
aam
mov
das
jns
xor
jmp
cs
jl
mov
push
xor
aas
jmp
data16
lahf
ror
mov
adc
sub
cmp
pop
inc
mov
imul
mov
in
sbb
aas
sar
sar
sub
adc
push
ss
sbb
icebp
loope
cld
cmp
ret
jmp
xchg
add
jl
and
mov
pop
adc
mov
(bad)
cli
not
mov
sbb
sbb
jecxz
sar
dec
jnp
icebp
xchg
ret
and
push
and
adc
fbstp
sub
cmp
jae
test
fld1
enter
out
xor
(bad)
mov
mov
imul
push
(bad)
jbe
and
xor
cs
dec
xchg
cmp
sbb
inc
je
mov
inc
out
lds
push
adc
jge
sub
push
pop
sti
xor
push
out
mov
rol
pop
inc
xor
mov
test
mov
fsub
add
pop
loope
add
cmp
(bad)
out
sbb
mov
loop
dec
retf
inc
inc
xor
inc
add
adc
scas
aaa
mov
sub
mov
fnstenv
dec
adc
add
sahf
push
xor
test
and
inc
or
lods
mov
inc
movs
cmp
stos
mov
ds
cmp
inc
adc
cmp
pop
test
push
cs
sub
cmp
cmp
xchg
mov
cmp
in
jo
mov
inc
cmp
mov
jge
call
mov
and
loop
lds
add
in
nop
pusha
push
ins
inc
bound
jne
fdiv
inc
sub
pop
jge
cmp
cmp
fsub
in
les
inc
jmp
cdq
adc
mov
rcr
mov
icebp
jmp
jnp
std
push
jns
xor
push
lds
mov
addr16
inc
inc
jmp
sbb
xor
je
jno
xchg
add
cdq
in
inc
int3
cmps
mov
fidivr
js
jmp
cmp
cmp
cmp
pop
icebp
js
popa
sub
dec
inc
xor
daa
inc
mov
mov
mov
mov
push
push
sbb
mov
push
xchg
imul
neg
cld
out
daa
out
aaa
dec
or
xor
sub
aas
and
fistp
fstp
inc
movs
push
xor
or
into
inc
in
sub
fucomi
(bad)
jmp
or
cs
nop
xor
leave
popa
sub
(bad)
or
fdiv
dec
inc
jg
sbb
or
mov
mov
cmp
sti
dec
add
cld
cmp
cmp
mov
xor
hlt
add
retf
icebp
adc
sbb
mov
or
iret
clc
inc
in
lock
inc
sub
inc
jae
mov
cld
cmp
cs
xor
cmp
jb
daa
mov
int3
js
scas
jbe
cmp
nop
inc
sbb
cld
inc
xor
cli
add
inc
jnp
fisttp
js
nop
push
cmc
inc
data16
aas
stc
jne
push
ins
fwait
pop
jo
scas
retf
sub
sub
mov
nop
stos
aam
adc
sbb
ror
pop
pop
jmp
and
push
shl
and
(bad)
mov
pusha
rol
aam
cmp
les
mov
test
xlat
or
pusha
cmp
fcmovne
cmp
sub
movs
xchg
cwde
rol
popa
sbb
loop
adc
jp
pop
cs
inc
mov
push
add
mov
adc
jg
dec
test
jmp
sub
imul
leave
inc
cs
cmp
and
std
mov
cmps
aam
pusha
enter
cmp
xchg
retf
mov
inc
repz
aaa
pop
dec
mov
mov
mov
mov
mov
dec
inc
mov
sub
pop
inc
daa
retf
push
jg
ret
inc
(bad)
mov
inc
jle
jmp
add
mov
in
dec
xor
cmp
mov
xor
ret
jnp
cmc
sar
pop
sub
xor
jbe
pusha
pop
ror
out
push
push
push
pop
and
fsubrp
or
cmp
sbb
enter
sbb
pop
int3
pop
pop
adc
pop
mov
jle
jns
mov
cmc
push
jmp
inc
jne
push
dec
pusha
inc
push
fadd
inc
inc
pop
fwait
int3
push
mov
adc
ds
inc
rcl
or
jge
js
scas
nop
cmp
inc
jne
pop
retf
mov
stos
dec
jge
mov
test
inc
sub
cmp
sub
mov
pop
sbb
cli
inc
aad
fmulp
xchg
test
stc
les
xor
mov
inc
retf
dec
lea
loopne
or
cmc
cmp
imul
sub
push
iret
sub
inc
fisttp
pop
leave
inc
sub
xchg
or
and
add
or
push
sub
in
mov
inc
mov
outs
pop
inc
push
pop
jne
jmp
xor
sbb
cmp
jge
data16
ins
adc
retf
cmp
jmp
mov
push
ja
fs
jns
add
mov
lahf
adc
addr16
xor
das
out
jmp
add
fs
pop
add
in
loopne
in
sbb
mov
call
adc
mov
dec
sub
xchg
mov
shr
out
cmp
fsubr
pop
push
push
xlat
cmp
test
cmp
xor
in
sbb
retf
stos
inc
xor
dec
mov
adc
inc
mov
push
pop
fadd
push
stos
out
dec
dec
pop
xchg
xchg
cmps
outs
ss
add
sbb
test
ds
push
iret
sub
cmps
cmp
jge
mov
push
sbb
dec
lahf
jb
not
and
div
mov
aas
and
shl
mov
adc
aaa
add
aam
mov
jecxz
jg
mov
pop
hlt
inc
mov
lds
out
sbb
inc
call
fidivr
ds
mov
ficomp
repnz
test
sub
addr16
outs
lods
jno
cli
aas
pop
arpl
jo
je
les
lods
pop
add
sub
(bad)
std
lods
inc
pop
xchg
bound
sbb
sbb
mov
inc
aam
mov
scas
and
inc
mov
pop
cmps
std
loope
clc
lock
in
repz
fcom
sub
xor
rcl
pop
xor
sub
jp
mov
add
pushf
pop
test
sub
(bad)
popa
push
push
cli
cmp
dec
jb
xor
pop
pop
add
sbb
push
inc
pop
inc
pop
push
out
sti
mov
lods
imul
sub
push
xchg
mov
stc
fadd
and
xor
cmps
push
dec
cld
loop
jns
pop
rcl
cs
inc
add
mov
push
pop
mov
mov
inc
hlt
bound
inc
dec
mov
adc
mov
pop
(bad)
cli
inc
xchg
dec
push
or
fild
jo
stos
push
dec
pusha
inc
pop
popf
stos
pop
sti
iret
or
mov
sbb
mov
aaa
(bad)
int3
add
imul
lea
in
cmp
adc
sbb
fcmovnbe
add
xor
sti
push
dec
xchg
fsubr
sbb
icebp
cmps
push
hlt
mov
mov
inc
pop
(bad)
das
test
iret
popf
dec
mov
mov
lock
out
inc
jne
js
icebp
fs
les
sub
pop
dec
cmp
mov
sbb
(bad)
jg
xchg
fst
push
into
sar
cmp
mov
loopne
inc
adc
icebp
sahf
out
adc
mov
add
scas
add
mov
or
mov
cmp
loope
retf
dec
pushf
jp
repz
lods
imul
jno
inc
nop
dec
out
and
or
test
jae
pop
ins
mov
and
cmp
(bad)
jo
enter
lods
int
icebp
or
adc
dec
mov
aad
pop
cmp
icebp
sbb
sub
std
and
inc
jle
les
and
dec
dec
fadd
jae
movs
fwait
sar
into
(bad)
loop
or
lock
out
inc
inc
adc
inc
sar
xchg
mov
inc
mov
add
inc
fimul
cli
in
inc
icebp
outs
shl
and
retf
cmp
fmul
fcomp
sbb
sbb
iret
sar
sbb
stos
fdivr
mov
loope
jae
jl
out
and
mov
ror
outs
dec
jge
in
xchg
sub
push
repz
cmp
loop
and
xor
(bad)
aam
icebp
inc
shl
inc
js
xchg
inc
shl
mov
lahf
mov
in
in
push
add
int
inc
pusha
shr
out
nop
jg
icebp
jo
sbb
inc
xchg
xchg
cwde
lock
inc
push
xor
adc
xor
mov
cld
jle
(bad)
cmp
add
ds
imul
inc
movs
in
inc
jbe
lods
push
inc
jb
push
xor
bound
add
retf
cmp
ret
xchg
mov
and
mov
shr
mov
cmp
add
lock
pop
cmps
jns
stc
fwait
sub
mov
aas
mov
mov
imul
push
inc
sbb
xchg
ss
cmps
fsubr
or
(bad)
mov
mov
jns
comiss
popf
sbb
hlt
imul
mov
adc
fisubr
adc
xchg
pusha
sbb
outs
inc
mov
inc
xchg
inc
pop
xor
test
sub
cmp
ficom
xor
dec
(bad)
test
xchg
sti
mov
jno
adc
dec
cmp
out
mov
lahf
jno
and
aam
sub
dec
mov
and
popa
sub
sbb
and
jo
dec
sbb
leave
mov
enter
push
xchg
mov
cmps
aas
scas
jge
pusha
nop
in
je
call
int3
or
movs
sti
nop
mov
cmp
nop
push
mov
je
sbb
test
js
ret
lods
in
retf
cmps
es
cdq
add
mov
stc
jg
mov
into
hlt
cmp
sub
aas
data16
add
shl
sar
xor
je
popf
popf
sbb
jns
mov
mov
fnstenv
(bad)
jnp
sub
pop
mov
jl
out
(bad)
jecxz
addr16
push
xor
lahf
bound
or
dec
and
inc
and
sbb
sbb
xchg
arpl
std
mov
xor
adc
jg
xor
xchg
test
icebp
scas
cwde
jle
xchg
pop
dec
add
popa
mov
into
cs
adc
xor
iret
and
xor
into
sub
inc
push
loope
sbb
gs
cld
jno
std
xchg
leave
pushf
pusha
sar
jne
add
fisttp
jno
mov
or
imul
mov
iret
ret
mov
popa
scas
stos
sbb
xor
pusha
or
cmc
push
mov
pop
in
mov
mov
sti
cmp
push
lock
std
mov
lea
adc
xchg
and
(bad)
int
fwait
js
mov
stos
mov
xchg
pushf
pusha
addr16
pop
or
test
xchg
dec
cmp
icebp
inc
pop
popf
cmps
push
fwait
xlat
adc
xor
jp
bound
push
push
xor
pop
cmp
mov
sti
ds
loope
int
call
stos
hlt
out
sbb
cld
outs
jno
lods
fadd
sti
sub
mov
or
stos
aas
pop
sahf
mov
add
xor
dec
movs
dec
add
cmp
sbb
inc
in
push
repnz
mov
int
push
call
test
push
xchg
imul
sbb
(bad)
jb
push
push
scas
stc
in
out
clc
out
lock
ret
xchg
dec
mov
inc
and
out
popa
(bad)
stc
test
pushf
mov
inc
fisubr
jne
mov
mov
std
inc
rol
out
jno
out
movs
inc
in
xor
mov
cvtps2pi
push
xchg
push
rcr
inc
mov
pop
xchg
shl
pop
cmp
and
retf
sbb
adc
sar
repz
bound
rcr
pop
retf
push
mov
adc
sti
in
pusha
and
xor
out
mov
inc
ds
(bad)
push
inc
push
scas
std
aas
pop
mov
mov
adc
sbb
lahf
cmp
pop
clc
aaa
js
sbb
idiv
arpl
imul
sbb
loope
and
enter
fcomp
inc
lea
test
sub
add
dec
add
cmp
and
repz
add
arpl
lds
pop
jmp
loope
cmp
shl
push
push
mov
lods
cmp
mov
mul
ja
inc
int3
sub
popa
test
ins
or
cs
mov
push
in
dec
mov
cwde
xchg
jae
inc
movs
cmp
sbb
in
mov
xchg
xor
mov
sbb
out
icebp
cmp
jl
je
jge
loop
int3
test
cmp
sti
and
scas
je
adc
sub
push
test
add
mov
push
xor
cmp
jge
shl
mov
mov
dec
les
(bad)
push
movs
add
aaa
mov
mov
inc
imul
adc
js
pop
jg
(bad)
mov
int
enter
es
popa
mov
stc
(bad)
pop
add
bound
jp
enter
sar
sbb
loope
push
cmp
mov
jns
lds
push
cmp
shl
jecxz
into
push
mov
sub
ja
and
jge
xchg
hlt
mov
and
cmp
test
push
ds
jge
mov
clc
fild
call
mov
pusha
and
out
mov
inc
add
cmp
mov
mov
or
jno
out
fdivp
aam
jl
sar
jge
repnz
ins
inc
out
sub
xor
mov
jl
mov
lods
push
mov
aam
jo
(bad)
dec
out
call
stc
add
daa
mov
push
mov
cs
stos
xor
into
test
fidiv
and
popf
push
mov
xchg
xor
add
repnz
rol
(bad)
sbb
test
xchg
push
pop
mov
cmp
popa
jne
mov
and
clc
dec
lods
(bad)
(bad)
sub
xchg
aad
and
inc
fstp
addr16
or
mov
jo
out
inc
inc
and
cmc
outs
inc
jle
cli
push
adc
imul
cmp
inc
mov
fnstsw
jecxz
sbb
add
out
cmp
callw
and
lods
ins
ret
sub
shl
fs
popa
test
cmp
fsubrp
test
adc
mov
std
inc
sar
and
sub
inc
das
sbb
jle
aad
cmp
cmp
(bad)
add
neg
dec
pop
sub
xor
xor
push
push
bound
adc
mov
mov
scas
stc
js
pop
or
jo
(bad)
mov
cli
mov
rcl
cmps
push
xchg
mov
sbb
inc
cmps
outs
aam
adc
pop
fwait
inc
jle
cmp
cmp
cld
call
nop
jo
mov
pop
outs
inc
inc
loope
dec
frstor
and
pop
inc
shr
jecxz
enter
inc
es
mov
jl
inc
cmps
push
add
stc
or
sbb
inc
pop
cmp
add
or
mov
icebp
cwde
push
push
inc
js
push
stos
mov
xchg
jbe
adc
loope
jns
jge
(bad)
std
(bad)
in
or
js
pand
inc
dec
lods
jo
lea
sti
or
push
push
sub
fmulp
fdiv
inc
pop
sbb
adc
sbb
mov
jae
aam
in
jl
xlat
mov
add
shl
or
jle
(bad)
dec
cmp
fldenv
enter
push
idiv
push
mov
jb
mov
push
int3
aam
jmp
jns
mov
in
data16
sub
pslld
into
sar
jne
xchg
mov
adc
jno
out
lahf
cld
cwde
ds
jnp
adc
outs
pop
xor
aam
push
test
in
imul
inc
sbb
pusha
bound
pop
xor
cmp
adc
inc
repnz
push
mov
das
mov
mov
inc
ret
je
out
sbb
sub
inc
js
ss
sub
out
je
pushf
and
lods
call
push
call
xchg
push
cmp
or
or
in
sub
inc
push
push
rol
xchg
ds
rep
inc
mov
mov
pop
int
fld
inc
movs
push
mov
cmps
add
xor
mov
sub
cmp
sub
fisub
ret
pop
fcmovnb
int3
(bad)
mov
jo
gs
fdivrp
pop
push
add
pop
aas
xlat
call
std
add
jle
repnz
and
mov
or
in
mov
mov
xlat
and
int3
jmp
sub
inc
jge
aam
adc
lds
popa
pop
jb
sub
xor
adc
push
xchg
stos
iret
(bad)
mov
aaa
cmp
sar
xor
cmp
clc
outs
jae
retf
ret
or
enter
xchg
mov
or
add
inc
push
mov
ins
pop
inc
push
(bad)
xlat
mov
outs
lods
xlat
or
fmul
adc
push
and
mov
mov
setp
hlt
shr
stc
push
fild
addr16
sbb
inc
push
popf
mov
or
sub
sahf
repz
mov
mov
adc
(bad)
stc
aad
mov
cmp
cmp
jb
lahf
rcr
jne
push
(bad)
xlat
mov
js
dec
das
and
in
out
fcom
jns
or
xchg
jb
scas
cld
sbb
adc
rcl
mov
sub
ins
inc
adc
add
adc
out
shl
xchg
sar
jmp
xor
rcr
cmps
sbb
jmp
aad
ins
lds
jo
cld
les
or
xchg
loopne
pushf
inc
push
es
cmps
lock
fs
add
(bad)
and
retf
mov
ins
xor
adc
or
ins
xchg
jecxz
sub
or
int
je
jns
dec
add
xor
add
pop
dec
cmp
bound
jns
push
sub
int3
shr
std
adc
xor
xor
push
xlat
jp
jl
cld
mov
mov
pushf
mov
in
int3
xor
mov
test
(bad)
push
and
repz
cmp
jecxz
or
daa
sar
xor
jl
mov
cmp
or
xor
fsubr
and
cmp
sbb
les
js
aaa
das
jl
cmps
inc
or
jge
nop
xlat
jns
sbb
adc
mov
daa
push
je
les
test
or
mov
stos
icebp
into
adc
pop
xor
pop
aad
add
popf
cmps
ret
sahf
shr
sbb
imul
aas
outs
mov
gs
pop
pop
push
bound
jle
ins
jns
and
push
imul
xor
retf
or
test
mov
imul
ret
pop
adc
sbb
cmp
inc
mov
es
ret
mov
or
pop
popf
dec
test
pop
xchg
(bad)
leave
inc
aam
push
add
loope
dec
int
mov
rol
mov
inc
ret
mov
cs
test
add
pop
mov
daa
call
inc
(bad)
push
sysexit
add
adc
in
cmp
inc
ror
inc
sub
inc
test
add
(bad)
push
in
fisubr
loope
shr
or
scas
cmp
cmp
cwde
dec
pop
jg
arpl
cmp
sbb
test
push
outs
inc
scas
cmps
stos
mov
inc
mov
xchg
dec
mov
push
dec
pop
mov
dec
inc
clc
xchg
out
div
sub
mov
int
jmp
lahf
repz
sub
daa
mov
inc
mov
push
fld
and
pop
jno
repnz
lods
inc
mov
cmc
cmp
inc
sti
in
cmp
push
dec
inc
inc
ret
fstp
ss
mov
in
inc
mov
call
add
mov
mov
cmp
jmp
dec
jbe
scas
fwait
jecxz
mov
test
push
(bad)
xchg
push
retf
call
mov
mov
inc
fstp
and
mov
jae
arpl
inc
push
les
and
xchg
jle
dec
jp
jmp
fld
sub
mov
aad
inc
ret
mov
sub
je
out
push
sbb
(bad)
loope
mov
push
cwde
inc
lods
jo
pop
xchg
sbb
cmp
cmp
mov
and
add
xchg
mov
mov
xchg
mov
call
mov
(bad)
jge
inc
dec
inc
add
jno
jbe
(bad)
sub
or
je
cmp
ret
xchg
push
mov
xor
cmp
sbb
fldl2t
mov
mov
mov
dec
inc
lds
clc
cmp
or
pop
push
inc
call
sbb
mov
inc
jno
adc
icebp
shl
out
arpl
cld
pop
das
jnp
inc
call
ret
cmp
hlt
retf
cmp
fistp
inc
cwde
pop
inc
jbe
dec
mov
push
sbb
movs
xchg
loopne
fmul
and
adc
and
mov
fisub
and
iret
inc
sbb
inc
add
ror
jl
idiv
add
aad
popa
out
sar
into
neg
dec
aas
and
add
xor
inc
sub
cmp
mov
sysret
fcom
idiv
sub
hlt
dec
movs
sahf
sar
mov
jbe
mov
dec
xor
sub
jp
ds
and
cmps
pop
jns
sub
fidivr
xchg
sub
js
(bad)
rcl
mov
(bad)
jbe
xor
cmp
xor
ja
and
(bad)
loopne
cmp
shr
out
xlat
xor
aam
in
daa
div
fist
inc
push
lahf
inc
movs
sahf
fisub
xchg
cmp
imul
sbb
mov
in
fistp
and
cmp
outs
cmp
pop
inc
dec
fdivr
rcl
cmp
inc
pushw
ss
add
test
out
icebp
outs
or
dec
pop
int3
enter
loopne
adc
movs
ror
mov
cmp
cmps
xor
fsubr
repnz
(bad)
push
inc
inc
jbe
jb
(bad)
dec
cwde
inc
mov
or
(bad)
in
mov
mov
lea
inc
mov
neg
mov
cmp
sbb
mov
push
dec
test
push
pop
xchg
out
shr
mov
jbe
mov
jne
push
dec
fld
pop
aas
stc
and
jmp
inc
inc
nop
pop
xor
cmp
and
cmp
inc
dec
(bad)
out
jge
mov
mov
mov
jno
lea
test
les
gs
fsub
dec
sti
xor
mov
xchg
mov
mov
jp
jle
jns
xor
mov
rcl
mov
pusha
fldz
ds
inc
aad
sbb
xchg
push
sti
xchg
in
stos
int
mov
aaa
cmp
xchg
adc
xchg
cmp
push
stc
js
fisttp
mov
ret
mov
(bad)
mov
adc
sbb
cmp
adc
add
inc
inc
mov
arpl
pop
(bad)
sub
movs
pusha
mov
jl
dec
pop
mov
lods
cmp
rol
jns
sub
sub
cmp
ds
mov
ret
dec
dec
rcl
(bad)
xor
lds
daa
repz
scas
fisub
xchg
(bad)
dec
jno
clc
jp
push
xor
sbb
shl
inc
rcl
outs
leave
push
int3
push
or
mov
aad
pop
jp
leave
inc
xor
sbb
aas
pop
mov
or
pusha
lods
(bad)
pop
sahf
scas
sub
or
arpl
mov
jmp
or
(bad)
aad
cs
jmp
ins
xor
(bad)
sahf
xor
cmp
iret
sub
rol
jnp
jns
jmp
retf
leave
and
(bad)
aas
mov
sar
outs
jb
icebp
jge
push
loop
(bad)
and
push
icebp
test
leave
push
mov
jno
push
mov
ret
jg
or
pop
(bad)
mov
add
repnz
addr16
sbb
imul
outs
jmp
js
cwde
sub
int
movs
and
inc
dec
mov
retf
and
movzx
add
btc
xchg
cmp
movs
adc
xchg
test
retf
jge
and
scas
nop
push
and
arpl
adc
jbe
dec
mov
out
mov
cld
dec
lahf
test
stc
sub
sub
pop
pop
sbb
loopne
pop
lea
pop
adc
or
fist
mov
xor
sbb
jne
inc
adc
jns
cdq
int
mov
push
js
je
(bad)
rcr
ret
call
cwde
inc
push
mov
ret
addr16
jp
mov
lahf
sub
xchg
cmp
mov
add
pushf
fucomp
jmp
addr16
mov
inc
jp
push
xor
adc
sub
or
push
rol
popa
loop
pusha
int3
cs
sbb
clc
sbb
push
inc
(bad)
ffree
leave
into
loope
pop
fist
inc
jmp
inc
icebp
xor
in
mov
sub
push
cmp
sub
(bad)
cld
push
ret
mov
jg
stos
xchg
push
gs
sar
fxch
fisubr
ja
cmp
stos
sub
enter
pop
inc
and
shl
cmc
aaa
inc
call
xor
sub
push
jl
dec
imul
in
sub
xor
popa
adc
or
loopne
dec
fistp
outs
out
inc
scas
ins
inc
test
or
inc
test
pop
into
stos
mov
gs
jns
inc
wbinvd
imul
inc
pop
and
xor
(bad)
js
js
js
adc
sub
cmps
xor
rol
sbb
add
push
xor
dec
sub
cmp
dec
inc
pop
mov
out
mov
(bad)
mov
call
add
pop
fwait
cmps
popa
xor
jno
fld
push
aam
sub
dec
push
dec
fcomp
pop
cmp
sbb
popf
inc
les
js
sub
rcl
aad
ret
cld
sbb
dec
std
add
push
push
js
or
push
mov
out
pop
jmp
jg
cmp
inc
xlat
into
sbb
lahf
inc
bound
inc
data16
jno
pop
mov
popa
enter
ret
pop
push
jb
inc
push
and
int
lock
out
inc
jp
xor
outs
mov
ja
inc
mul
inc
xchg
scas
loop
inc
push
test
inc
push
jle
inc
mov
jg
xor
jp
mov
cmp
sub
mov
xchg
(bad)
xchg
push
pushf
mov
push
int
sbb
fsub
xlat
in
cmp
(bad)
sbb
clc
movs
xor
xor
add
push
jge
mov
es
sbb
pop
outs
and
or
cmps
sbb
sub
iret
mov
(bad)
pop
mov
mov
xor
xchg
jmp
mov
or
imul
lods
jne
push
or
(bad)
pop
cdq
or
cli
pusha
enter
push
sahf
retf
mov
call
inc
cmc
mov
and
lods
push
sbb
sti
test
jnp
sub
mov
lds
mov
adc
inc
int
inc
push
ror
pop
or
mov
cwde
inc
push
xor
nop
or
or
cmp
xchg
or
scas
xlat
adc
add
adc
jb
sub
outs
cmp
push
pop
inc
and
lods
and
pop
jecxz
push
xor
or
in
and
mov
inc
sti
xor
in
fsubr
mov
imul
sub
push
cmps
test
jo
enter
test
ror
push
sub
mov
dec
loop
cmp
(bad)
add
cmp
xchg
jmp
sbb
inc
fdiv
push
xchg
pop
push
outs
sub
cmps
cmp
call
cmp
xor
(bad)
ror
push
shl
inc
mov
out
add
mov
gs
enter
je
dec
sti
fnstsw
cmp
das
cmp
inc
sbb
pop
ss
hlt
and
adc
(bad)
mov
inc
(bad)
stc
sbb
movs
inc
sub
repz
fldenv
inc
ja
pop
jg
stc
std
dec
cmp
leave
nop
xchg
mov
lea
inc
ret
inc
aam
dec
inc
in
rol
inc
les
jnp
xchg
dec
adc
sbb
sbb
mov
or
jl
jmp
call
scas
mov
rcr
pop
adc
aad
xor
cmps
out
pushf
inc
js
imul
std
jo
mov
inc
inc
xor
xchg
nop
mov
mov
sbb
in
js
into
inc
sub
dec
jns
lods
pop
sub
jns
lahf
jecxz
stc
and
(bad)
loopne
fidiv
adc
cmp
in
xchg
std
scas
xchg
or
inc
fild
mov
inc
push
add
and
and
jecxz
retf
mov
in
inc
jo
add
pop
fadd
out
ds
cmp
adc
pop
mov
out
stos
(bad)
retf
loope
cld
push
inc
sbb
mov
push
in
sar
mov
jne
nop
or
pop
lods
addr16
ret
jp
cmp
dec
jae
mov
sub
test
mov
and
cmp
mov
jge
fst
into
enter
jmp
sbb
and
mov
or
xor
sub
out
pop
out
jne
or
xor
imul
js
sbb
inc
sub
xor
fadd
fs
je
(bad)
mov
sbb
pop
in
mov
mov
jno
jmp
movs
shl
scas
push
je
pusha
and
sti
mov
aam
pusha
or
fmul
add
sbb
movs
in
sbb
add
cdq
lahf
xor
cmp
scas
inc
push
and
mov
jp
and
push
adc
push
retf
inc
in
out
shl
ret
movs
dec
inc
mov
jns
mov
sub
xchg
pop
xlat
pop
outs
sbb
aas
jl
sub
jns
mov
sub
fs
push
mov
pop
ins
fcmovnb
js
ror
pop
ret
cmp
out
cli
loope
or
das
pop
shr
(bad)
je
test
push
into
out
pop
lods
xor
jge
push
call
sub
nop
ficomp
mov
je
mov
push
cmc
mov
sub
push
push
push
cmp
(bad)
cld
cmp
cs
push
fild
fdiv
mov
mov
and
jl
push
cmp
cmp
mov
ins
lahf
and
iret
repz
add
mov
xor
xchg
pusha
push
sbb
xchg
cmc
scas
and
adc
xchg
dec
add
sub
jg
xchg
sbb
test
stos
out
or
je
pusha
mov
mov
aam
mov
or
cmp
push
xor
popf
pop
outs
loop
xor
sahf
dec
or
imul
mov
inc
jno
lds
iret
xor
shl
(bad)
icebp
pop
xor
aad
aad
(bad)
add
mov
mov
cmp
cmp
(bad)
jp
pop
sbb
lods
fstp
shl
mov
mov
cwd
mov
lea
push
retf
push
sbb
mov
sbb
sbb
fstp
adc
outs
into
push
sub
out
add
pop
data16
pop
es
sub
xor
stc
call
pop
sbb
stc
xor
stos
bnd
ror
pop
sbb
pop
test
push
mov
or
ja
sbb
test
adc
int
inc
(bad)
aas
sbb
sub
xlat
inc
push
sub
dec
jne
shl
fst
xchg
dec
add
aas
dec
mov
outs
lods
mov
push
jne
cmp
xchg
and
aas
std
popa
and
js
popa
mov
or
popa
pop
movs
std
cmp
mov
xlat
pop
cmp
lods
xchg
inc
or
push
jmp
inc
dec
adc
(bad)
in
sub
xchg
jp
lahf
lods
inc
mov
xor
xchg
lea
jae
push
imul
int
dec
movs
(bad)
stos
aas
loope
cdq
cmp
inc
xchg
mov
stos
mov
lock
js
dec
pop
enter
mov
lahf
pop
add
pushf
dec
fldenv
inc
jp
jnp
fsubr
js
rcl
pop
mov
or
dec
outs
mov
sbb
stc
iret
and
retf
cmp
cmp
cmps
bound
call
xchg
pop
add
cmp
imul
call
repz
mov
cmp
in
pop
loopne
jne
cmp
add
mov
(bad)
and
push
pop
ins
xchg
iret
pop
leave
out
xchg
lods
mov
inc
sub
push
cmp
mov
(bad)
imul
push
outs
mov
lock
sub
rcl
test
xchg
xchg
out
fcmovnu
inc
add
mov
cmp
stos
lea
and
sbb
aad
cmc
inc
cmc
cmp
lods
cmp
push
pop
aas
dec
fcomi
adc
push
push
gs
pop
xchg
adc
mov
mov
(bad)
jmp
daa
adc
inc
xchg
jge
pop
sub
addr16
pop
jo
sub
movs
lea
dec
inc
adc
lods
push
xor
inc
jnp
imul
push
xchg
ins
test
cmp
add
loop
jb
xlat
xchg
test
add
cwde
mov
aas
mov
iret
dec
jge
das
push
cli
(bad)
xor
sub
jp
fisubr
mov
inc
mov
cmp
xchg
xchg
lods
(bad)
cli
jle
inc
add
mov
inc
adc
and
push
aaa
(bad)
jnp
sub
lahf
push
mov
int
lds
jmp
data16
add
fstp
push
clc
popa
sub
lmsw
cmps
or
fst
push
cmp
nop
in
sub
sub
xchg
mov
stos
enter
cld
dec
mov
rcl
inc
xlat
xor
mov
adc
cdq
cmp
aad
xchg
sti
mov
std
pop
out
or
and
or
aam
and
sbb
and
pop
popf
mov
mov
jl
and
cmp
out
fcmovb
test
inc
js
cmp
test
cmp
cld
sahf
cmp
mov
inc
mov
cmp
jmp
cmp
jmp
and
inc
cmps
arpl
xchg
pop
push
xchg
inc
xchg
and
imul
mov
adc
sub
inc
mov
(bad)
rol
inc
out
bound
adc
xchg
sahf
or
cmp
in
pop
inc
imul
ror
enter
inc
cmp
dec
jbe
pop
int
test
shl
scas
mov
dec
jp
adc
jno
test
jmp
cmp
push
pop
push
mov
(bad)
cmp
adc
fld
mov
inc
and
cmp
jne
jbe
mov
or
shl
les
arpl
ss
stos
mov
mov
loopne
cmps
jbe
jne
push
inc
mov
jno
ror
sbb
pop
mul
data16
sahf
add
mov
dec
sbb
sub
fdiv
push
int
out
mov
retf
and
test
(bad)
sub
ja
dec
pusha
add
cli
push
xor
mov
jnp
leave
cmc
in
icebp
or
mov
jo
push
push
mov
sub
inc
adc
imul
xor
or
lods
cld
and
into
(bad)
out
retf
jnp
call
xchg
pop
dec
adc
ds
sub
inc
push
retf
into
push
lds
pop
ret
pop
int3
push
inc
xchg
imul
inc
test
add
xchg
loopne
retf
pop
or
repz
sar
xor
xor
popa
retf
mov
mov
mov
je
adc
fdiv
loope
cs
in
nop
push
dec
arpl
cmp
or
jl
scas
iretw
or
xor
jno
cmp
outs
or
mov
sar
jle
cld
and
ja
fsub
jb
outs
sub
test
(bad)
fidiv
cdq
pop
sub
pusha
jns
cmp
fs
loope
cmp
fdivr
jge
xor
xor
or
cmp
sbb
dec
ja
push
sub
jmp
pop
imul
push
repz
clc
push
(bad)
jmp
xchg
push
out
pusha
pop
pop
xor
aam
inc
push
popf
jge
(bad)
sbb
fdiv
jns
out
adc
mov
mov
aam
dec
ret
mov
les
cmc
cmp
push
jmp
add
push
xchg
int3
imul
cwde
adc
sub
push
add
sar
ins
cmp
mov
in
adc
push
jno
xor
jge
and
hlt
push
fdiv
mov
mov
jne
loope
jo
sub
or
cmp
jo
jns
aad
mov
jno
sub
sub
pop
out
pop
std
(bad)
cmp
loopne
rcl
jno
out
or
add
mov
sub
mov
imul
mov
cmp
push
lahf
adc
dec
pop
mov
shr
int3
in
sahf
mov
mov
nop
test
mov
scas
data16
mov
and
cdq
inc
mov
mul
repz
dec
test
scas
sbb
or
jno
scas
cmp
mov
inc
out
enter
xchg
scas
mov
pushf
jbe
(bad)
push
mov
test
lds
fistp
in
pop
adc
xchg
push
jae
cmp
dec
mov
adc
sub
lods
fnstenv
sahf
repz
xchg
jne
lods
pop
jne
(bad)
js
add
outs
rol
je
stc
mov
adc
mov
call
out
xor
lods
cmp
cdq
push
sub
in
adc
data16
xor
xor
xchg
fld
jnp
icebp
cmp
jge
test
push
jecxz
adc
mov
adc
outs
dec
adc
inc
push
fstp
in
cdq
add
jo
and
lahf
pusha
leave
sub
mov
fcom
in
push
cmc
aaa
and
xchg
ja
jno
jno
cld
jle
sub
ds
adc
and
bound
dec
shl
enter
jae
cmp
sub
les
mov
push
xor
jbe
jg
sbb
push
cmp
clc
ror
or
fidiv
and
mov
push
sub
(bad)
js
rcl
xor
cmp
or
cmp
sub
jns
mov
add
fisttp
mov
cmp
ja
push
idiv
or
xor
lock
(bad)
adc
mov
mov
dec
sbb
adc
mov
dec
ins
cdq
mov
ss
stc
mov
xor
fld
or
mov
jns
ret
cmp
pop
cdq
xor
mov
sub
mov
push
shl
popa
jns
pop
sar
ss
in
or
ins
jns
lock
test
mov
scas
cld
(bad)
sub
fimul
lock
(bad)
push
lea
adc
test
sbb
mov
lea
xor
pusha
cmp
rol
xchg
sldt
adc
loope
jl
sbb
inc
test
outs
sub
loope
scas
cs
bound
int
or
or
stos
jns
movs
jo
pop
cmp
or
jp
jns
dec
push
mul
mov
int3
leave
test
cmp
je
inc
adc
push
repz
mov
cmp
ficomp
jmp
cmp
scas
jns
into
push
sub
pop
adc
sar
sbb
sbb
outs
out
mov
cmp
adc
mov
jno
loope
dec
sub
push
out
dec
and
adc
cld
mov
fmul
push
xchg
fldcw
test
xor
shl
jns
xchg
data16
pop
or
jne
add
xchg
add
jmp
pusha
sub
imul
sbb
jmp
and
cmp
jl
stos
fs
inc
dec
dec
repz
mov
cli
sbb
imul
pop
lock
mov
out
jge
mov
cs
pop
cmp
ror
or
lods
retf
mov
pop
dec
jno
dec
dec
fxch
push
pop
pop
or
into
loope
int
mov
cmp
xchg
ja
and
mov
cmps
mov
leave
repnz
je
cdq
jle
scas
xchg
dec
dec
and
push
inc
mov
dec
cmps
sbb
mov
dec
iret
into
pusha
add
add
cmc
jae
jmp
inc
inc
dec
push
cwde
mov
(bad)
push
mov
int
imul
sub
xor
pop
(bad)
pop
xchg
xchg
mov
push
bound
pop
fimul
jle
lahf
add
jmp
sbb
popa
jns
outs
push
dec
fs
cmp
add
loop
sub
jne
push
inc
cli
jns
push
jmp
fidiv
inc
sub
stos
fmul
jge
pop
clc
aam
or
xchg
xchg
out
mov
lods
out
xchg
push
pop
dec
packsswb
lods
sbb
fwait
push
shr
inc
add
add
(bad)
stc
dec
or
mov
fadd
cmp
je
sub
push
loopne
dec
cmp
push
call
adc
push
shl
mov
(bad)
mov
inc
test
aam
out
pop
jbe
push
push
in
enter
iret
shl
sub
pop
lods
shr
inc
inc
inc
dec
addr16
xchg
test
ret
inc
push
mov
retf
addr16
jp
scas
data16
movs
xor
shr
inc
cmp
test
clc
xchg
stc
clc
mov
and
dec
gs
lds
mov
cmp
fscale
dec
test
ss
pop
or
xor
mov
jle
jns
adc
cmc
or
mov
inc
pop
inc
jae
add
adc
pop
dec
pop
clc
test
xchg
out
push
dec
inc
jbe
popa
xchg
mov
rol
or
add
loopne
shl
or
pop
inc
push
inc
aas
sbb
xor
add
test
stc
jmp
mov
cmp
pop
cmp
xor
ret
jmp
mov
push
dec
scas
mov
in
jp
sbb
jmp
mov
sub
or
sub
jnp
mov
sub
jnp
cmp
test
aaa
and
mov
mov
out
push
and
mov
ins
jl
adc
push
stos
(bad)
in
sbb
loope
or
pop
sbb
push
out
jge
aas
inc
add
stos
(bad)
out
mov
inc
xor
pop
mov
mov
sub
sbb
stos
mov
jl
mov
adc
stc
jno
inc
out
mov
xor
or
push
sub
stos
mov
aas
mov
loope
jg
in
sar
pop
inc
lock
xor
mov
out
push
sbb
lods
mov
aas
mov
loop
add
sti
jae
scas
ret
mov
inc
test
adc
clc
and
inc
call
inc
xchg
cs
addr16
call
daa
adc
xchg
frstor
mov
add
mov
out
mov
inc
or
mov
repnz
xchg
mov
dec
mov
mov
jmp
xchg
mov
dec
daa
xchg
adc
fbld
mul
sub
mov
sub
mov
xchg
mov
cmp
pop
mov
lods
mov
mov
in
(bad)
hlt
and
pop
outs
and
shl
xchg
or
(bad)
cmp
adc
inc
aam
inc
sbb
push
xchg
pusha
bound
ret
sahf
sub
movs
xchg
xor
mov
movs
pop
inc
iret
inc
ret
dec
push
jecxz
jns
xchg
cmp
movs
sub
xor
dec
cmp
dec
push
(bad)
pop
lods
rcl
mov
out
jp
ror
mov
add
test
(bad)
mov
daa
sub
inc
xor
ins
in
inc
(bad)
dec
mov
mov
pop
add
xor
aaa
in
mov
jae
pop
shl
cmps
outs
inc
lds
and
mov
leave
inc
lea
sbb
cmp
lock
inc
xor
and
aad
loopne
mov
cmp
add
cmc
pop
sub
push
inc
sub
push
xchg
inc
scas
xor
xor
sbb
inc
outs
mov
mov
test
dec
cmp
push
aas
mov
push
jle
inc
or
sub
fwait
mov
test
mov
inc
xor
iret
and
cmp
lods
or
and
adc
inc
mov
push
xor
popf
(bad)
into
sub
inc
imul
or
(bad)
nop
iret
inc
inc
pop
add
nop
shl
test
stos
push
in
dec
ds
jecxz
inc
add
pop
mov
es
cmps
mov
and
(bad)
cmp
icebp
and
xor
inc
bound
and
(bad)
imul
mov
xor
rcr
cmp
popa
call
inc
jg
dec
stc
out
push
dec
inc
xor
and
add
mov
ror
cdq
pop
ins
inc
or
pop
aad
lock
xor
enter
or
sub
loope
push
es
loop
or
and
mov
and
mov
ss
inc
xor
mov
inc
retf
dec
sbb
mov
cmp
mov
cmp
jne
nop
and
inc
cmp
mov
bound
add
adc
inc
mov
or
inc
(bad)
scas
lods
mov
and
stos
int3
inc
fsub
jmp
cmps
aam
inc
inc
iret
pop
or
inc
test
shl
xor
jmp
(bad)
jne
(bad)
popa
inc
xor
lds
inc
aaa
int3
mov
xor
aaa
xchg
inc
das
inc
dec
js
cmp
cdq
fcmovnu
mov
and
pop
sbb
and
inc
jmp
dec
aas
mov
xchg
(bad)
dec
js
mov
jge
ins
imul
mov
fbld
test
add
sar
sub
cmp
sbb
mov
fnstcw
xor
pop
pop
xlat
push
inc
sbb
adc
retf
inc
test
into
dec
inc
fcomi
and
mov
test
xor
xor
dec
inc
adc
or
mov
mov
inc
sub
add
sub
out
iret
inc
stc
out
jle
inc
mov
mov
inc
fstp
push
cmp
div
in
inc
cld
dec
enter
mov
xor
add
shl
inc
imul
pop
mov
fsubr
ret
cmp
shl
inc
cld
shl
movs
xor
and
adc
in
dec
mov
in
je
xchg
inc
scas
mov
shr
adc
pusha
mov
out
inc
add
inc
std
mov
inc
inc
pusha
add
mov
enter
or
ficom
inc
inc
in
in
add
lock
inc
jbe
xor
in
aaa
mov
inc
icebp
inc
scas
shl
es
inc
xor
sbb
add
fldcw
inc
push
fild
dec
hlt
mov
inc
(bad)
cmp
das
in
es
movs
inc
aas
call
and
enter
das
aad
and
mov
ret
xor
outs
inc
or
scas
inc
and
cmp
aam
sub
sub
ds
out
cmp
mov
cdq
jmp
cmp
test
push
sub
fcmovbe
jo
inc
sbb
adc
adc
inc
mov
add
leave
ins
cmp
nop
pusha
xor
pop
xor
pop
in
push
cmp
stos
leave
mov
push
inc
xor
cwde
mov
xor
(bad)
or
jns
sub
ds
retf
lock
ds
cld
inc
jmp
cmp
aam
inc
and
ss
adc
cmp
fdivr
xor
inc
das
sub
mov
in
add
inc
loope
out
cmp
add
inc
mov
addr16
test
outs
push
sub
xor
jns
xor
pop
dec
and
nop
rsm
inc
push
cmp
dec
shr
pop
ins
cmp
lods
dec
imul
inc
inc
icebp
mov
and
fild
lock
mov
xchg
mov
xor
aas
inc
cmp
or
sbb
dec
inc
scas
and
setle
lods
jl
cmp
enter
scas
adc
enter
inc
mov
cmp
dec
lahf
mov
imul
test
loope
int3
aas
inc
pop
inc
pop
dec
push
cmp
(bad)
aad
jnp
int3
inc
cmp
sbb
push
xchg
dec
or
sub
ror
nop
xor
mov
xor
inc
cmp
push
shl
xor
lea
inc
fidiv
or
mov
arpl
scas
xor
mov
sub
(bad)
retf
xchg
sti
cmp
punpckhbw
mov
jb
xor
add
daa
outs
sti
mov
out
(bad)
jmp
push
mov
push
inc
cmp
(bad)
mov
test
pop
addr16
int
inc
aaa
lea
cmp
push
repnz
retf
and
imul
add
mov
fisub
fadd
cmp
inc
jmp
dec
inc
inc
hlt
inc
nop
test
xchg
in
test
pop
mov
mov
push
daa
daa
mov
inc
(bad)
ds
inc
sti
ins
call
sbb
stos
cmc
inc
mov
jg
cmp
cmp
aaa
xor
enter
xor
inc
ins
cwde
jecxz
stos
hlt
cmp
ds
das
ds
bound
inc
dec
pop
in
mov
inc
cmp
jp
nop
mov
jmp
mov
dec
(bad)
movs
inc
test
adc
xchg
push
gs
enter
xor
scas
cmp
ins
add
mov
sbb
mov
mov
mov
sbb
loope
inc
inc
test
inc
xchg
std
push
inc
add
sub
ins
retf
retf
(bad)
rol
scas
movs
fdivr
ss
push
inc
inc
add
fcomp
(bad)
mov
test
xor
xlat
lods
lea
cmp
sbb
stc
nop
inc
add
sbb
push
shr
mov
sbb
inc
cmp
jne
fdivr
inc
pop
inc
das
push
sbb
cmp
cmp
inc
ins
mov
pop
dec
test
inc
js
sar
cdq
fstp
inc
mov
adc
inc
es
inc
xor
sub
shl
lea
adc
sub
leave
inc
movs
adc
inc
xor
mov
sbb
cmp
mov
jp
mov
inc
sub
hlt
mov
or
inc
xchg
inc
cld
inc
aas
(bad)
js
xor
pop
cmp
fldcw
scas
dec
inc
les
mov
jnp
test
mov
leave
add
fisubr
inc
xor
inc
in
(bad)
imul
xor
retf
dec
and
xor
xlat
rcr
inc
test
dec
dec
fild
imul
neg
push
sub
dec
movs
mov
and
ret
pop
cmp
sub
xchg
xor
mov
cmps
inc
aaa
test
retf
push
or
hlt
inc
jae
sbb
jbe
inc
test
mov
inc
les
mov
xor
inc
adc
mov
mov
jnp
js
rcr
and
dec
inc
popa
cmp
mov
iret
cmp
dec
mov
test
inc
jae
inc
xlat
xchg
out
stos
int
push
leave
loope
xchg
cli
in
cmp
int
js
mov
js
cmp
inc
cmc
cmps
aad
push
and
inc
data16
jle
or
inc
mov
inc
or
aad
inc
iret
ds
ss
fwait
xchg
add
inc
mov
ret
cmp
xchg
push
sbb
mov
sbb
sub
inc
sbb
mov
xor
and
push
sub
mov
inc
ins
pop
imul
cmp
test
adc
(bad)
repnz
inc
or
cmp
cs
xor
cmp
aaa
aas
inc
test
inc
mov
and
fsubr
inc
test
xor
inc
int3
xor
cmp
movs
inc
sub
and
mov
pop
fwait
inc
fist
inc
jo
sahf
repnz
int
pop
add
fwait
mov
in
mov
das
xor
lea
jno
mov
sub
mov
inc
sub
rcr
daa
(bad)
fst
nop
in
and
cdq
call
in
es
and
and
xchg
call
ret
dec
pop
mov
enter
cmp
ss
jne
and
cmp
cmp
push
xchg
gs
es
inc
jecxz
mov
inc
ins
fwait
test
sub
or
sub
stos
mov
cmp
dec
inc
nop
adc
fcomp
xchg
adc
mov
dec
fwait
popf
sub
or
enter
jmp
inc
and
(bad)
sbb
lahf
test
dec
xchg
lds
clc
adc
inc
push
in
inc
pop
movs
xor
pop
fiadd
xchg
push
sub
and
sbb
pop
popa
iret
inc
push
in
inc
cmp
inc
mov
add
sbb
js
mov
movs
mov
out
mov
adc
mov
pop
das
ds
dec
lods
aad
dec
cmp
or
inc
ror
scas
(bad)
or
and
shl
cmp
pushf
or
aas
inc
add
enter
dec
repnz
push
cmp
pavgb
enter
adc
xchg
dec
xor
inc
jmp
xor
xchg
cmp
aam
sbb
out
test
ds
jb
cvtdq2ps
test
stos
mov
dec
mov
add
std
mov
inc
xchg
mov
mov
nop
int
rol
test
sbb
cmc
pop
adc
adc
inc
add
in
ret
adc
inc
jns
sub
rol
pop
xchg
rol
mov
push
jno
in
inc
inc
loope
dec
enter
fiadd
add
ds
mov
mov
test
outs
loope
push
mov
sbb
and
add
mov
scas
fnstcw
dec
cmps
adc
movs
pop
sbb
aad
nop
push
inc
fisub
test
xor
xor
xchg
addr16
inc
xor
and
in
jmp
lahf
fild
dec
xchg
mov
xor
inc
mov
fwait
mov
inc
retf
inc
aaa
inc
sub
mov
jmp
je
inc
xor
enter
inc
mov
imul
add
cwde
jge
sbb
dec
into
add
xchg
inc
xor
inc
adc
pop
nop
outs
enter
out
inc
jbe
mov
cmp
bound
mov
out
ds
add
or
out
js
xor
shl
sub
out
imul
push
cmps
push
inc
(bad)
inc
cld
or
outs
mov
jne
jnp
xchg
les
inc
popa
test
mov
or
xor
scas
movs
es
call
ja
sar
pop
in
jge
xchg
xor
dec
inc
hlt
(bad)
mov
ficomp
leave
cmp
inc
xchg
sub
and
push
add
xchg
xchg
inc
inc
cmp
faddp
xor
mov
xor
ror
sti
dec
cs
outs
out
movs
pop
aam
aaa
xchg
mov
mov
std
inc
inc
pop
stos
cmp
js
xchg
mov
inc
fiadd
inc
mov
inc
packsswb
loopne
scas
pop
ds
dec
lds
lods
mov
cmps
xchg
or
imul
xchg
xor
(bad)
loope
jmp
out
nop
jge
hlt
and
sti
vpsadbw
inc
rol
sub
loopne
stc
inc
leave
xor
aas
inc
push
aaa
or
mov
mov
and
stos
inc
gs
jns
data16
push
inc
inc
xchg
pop
inc
repz
inc
inc
xor
dec
mov
sub
jmp
gs
push
in
inc
data16
arpl
imul
inc
popa
stc
mov
mov
xchg
push
call
dec
sub
mov
or
repnz
xor
push
push
sub
push
(bad)
into
(bad)
into
shr
arpl
call
mov
shl
cmp
inc
adc
popa
inc
mov
sbb
xchg
cwde
and
shl
(bad)
js
outs
adc
mov
adc
retf
jp
inc
repnz
jnp
push
mov
lahf
inc
cmc
pop
imul
imul
cmps
aas
xor
sub
test
aas
rcl
cmp
mov
mov
stc
cmp
cmp
push
dec
shr
xchg
cli
rcr
inc
(bad)
mov
xor
sbb
sbb
inc
sub
xchg
in
mov
jge
hlt
fisttp
cmp
arpl
sahf
inc
daa
sub
add
cmc
out
(bad)
push
fs
inc
aas
mov
lock
inc
inc
dec
in
inc
inc
jo
mov
fwait
mov
int3
sbb
cmp
fsubr
dec
fucomi
inc
mov
mov
fsubr
pop
push
dec
je
sub
inc
jp
inc
outs
daa
mov
sub
fst
mov
iret
out
inc
fmul
icebp
inc
jg
push
xlat
adc
or
lahf
sub
ja
in
pop
pop
jb
rcl
push
sbb
xor
cmp
add
repz
(bad)
pop
and
jns
pop
jl
mov
inc
lahf
jmp
mov
imul
xchg
test
sub
mov
and
(bad)
add
sbb
in
std
push
add
inc
dec
loope
add
outs
inc
rcr
in
into
add
out
xchg
loopne
jmp
scas
or
cmp
cmp
and
out
xchg
lock
popf
xchg
hlt
cmp
and
shl
sti
xchg
cmp
pop
aad
cmp
cmp
sub
xor
jle
jecxz
imul
(bad)
out
dec
into
xor
jp
inc
fldcw
inc
ins
push
mov
xor
jl
pop
fs
inc
push
inc
leave
inc
xchg
(bad)
mov
out
ins
pop
cmp
clc
in
ins
fs
sbb
test
fwait
imul
addr16
repz
pop
jmp
xor
clc
inc
in
xor
in
(bad)
mov
or
or
test
push
out
ins
sbb
lea
stc
inc
inc
mov
(bad)
pop
or
cmp
push
enter
cmp
jp
push
fstp
es
rcl
xor
mov
pop
loope
fld
cli
or
add
and
mov
sbb
(bad)
(bad)
vpsrlw
cmp
lods
add
sbb
stc
mov
bound
pop
inc
cli
push
pusha
fild
and
in
out
mov
fldenv
xor
mov
cmc
call
(bad)
inc
add
popa
fdivr
out
ds
test
loopne
cmps
jle
(bad)
cmp
inc
fsub
jns
inc
and
das
mov
inc
mov
cmp
loope
ret
inc
dec
clc
aaa
out
pop
in
outs
xchg
pop
out
cld
cmp
in
dec
sar
xchg
test
inc
mov
or
inc
dec
fadd
cmc
push
cmovb
mov
sub
xor
xor
mov
mov
pop
jnp
ins
out
jo
jo
rcr
mov
xchg
jae
mov
inc
adc
pop
jbe
jecxz
inc
jg
pop
aas
xor
or
mov
nop
out
push
jae
js
or
push
std
or
addr16
pop
mov
sbb
push
inc
nop
jns
or
xchg
xlat
cld
jg
cmc
inc
dec
ins
(bad)
ss
mov
scas
in
inc
js
pop
dec
pop
imul
dec
xor
dec
jmp
pop
cmps
pop
ds
inc
jo
or
sti
mov
repnz
aad
iret
stc
inc
dec
xor
pop
push
inc
xor
test
data16
popa
shr
fnstsw
xor
inc
arpl
sbb
in
or
movs
cmc
adc
ins
cs
mov
jge
loop
push
data16
cmp
out
outs
pusha
in
inc
out
cmc
fld
call
sub
xor
call
pop
sub
inc
repz
adc
out
icebp
add
shr
cli
pop
loope
inc
outs
in
loop
out
repz
ret
int3
movs
mov
inc
push
adc
div
and
stc
pop
repnz
jns
push
cli
jle
fild
mov
add
sub
je
cmp
mov
int
cmp
adc
inc
data16
imul
loopne
loope
ds
in
mov
fld
jns
idiv
or
or
outs
cld
inc
jl
dec
xor
call
add
or
jp
cmp
inc
jno
adc
enter
dec
rcr
cmc
clc
mul
sar
out
or
xor
imul
xor
pop
xor
lds
arpl
bound
inc
add
in
call
inc
icebp
retf
inc
adc
mov
add
sub
fnstenv
repnz
inc
pop
mov
jp
cmps
fild
mov
cmp
sti
sbb
fs
out
gs
sub
jmp
jmp
mov
mov
mov
movs
mov
pop
into
inc
loope
pop
out
(bad)
fld
add
call
aas
cli
jmp
into
arpl
fsubr
inc
dec
add
xchg
xchg
xchg
fchs
cwde
bnd
mov
mov
cmp
jmp
js
pop
aad
fld
dec
jecxz
imul
hlt
mov
pop
sar
mov
test
mov
cmp
aam
enter
(bad)
cld
call
sbb
sbb
cmp
adc
xor
retf
imul
jmp
(bad)
out
mov
cdq
sahf
stos
push
bnd
jno
in
push
push
inc
cmps
icebp
mov
pop
(bad)
std
lds
lds
sbb
jmp
fs
push
inc
inc
jb
cmp
pop
push
xchg
ret
cwde
inc
popf
inc
fist
stos
xchg
int
mov
rol
mov
inc
pop
arpl
(bad)
test
(bad)
call
adc
es
xchg
inc
cmp
jo
(bad)
fcom
push
repnz
and
js
jecxz
mov
mov
cmp
dec
mov
inc
mov
idiv
push
ins
inc
mov
inc
inc
cmp
popf
fwait
adc
mov
cs
xor
out
imul
loop
inc
test
outs
cmc
(bad)
sbb
mov
int3
add
pusha
xor
div
js
imul
jb
mov
fdivrp
ds
fwait
xor
movs
add
stc
inc
cmp
mov
mov
xchg
in
xchg
fsubp
push
xchg
cmc
stc
sbb
pop
bound
sub
out
je
repnz
dec
add
jp
fadd
in
rol
xor
lds
pushf
sbb
sbb
lock
jg
jecxz
mov
jge
inc
cmp
dec
jbe
pusha
cmp
dec
mov
inc
int
inc
mov
(bad)
xor
cwde
adc
inc
adc
adc
arpl
inc
(bad)
ss
dec
adc
add
outs
out
lds
stos
mov
ret
das
inc
mov
inc
jno
cmp
pop
dec
in
retf
inc
mov
je
push
loopne
shl
xor
loop
xchg
mov
xor
inc
hlt
ja
push
(bad)
mov
call
in
mov
shl
sub
mov
cmp
aam
lds
sti
mov
aad
inc
ja
loope
std
push
dec
rol
cmp
xchg
jno
imul
cmp
inc
inc
sbb
xchg
pop
popa
ins
ins
inc
jb
lock
out
dec
inc
cli
mov
loope
out
sub
aaa
pop
sub
sub
mov
pop
jg
iret
cmpps
lea
or
or
adc
push
test
cmc
frstor
jge
mov
data16
pop
jle
push
dec
(bad)
jmp
into
test
add
in
or
ds
push
inc
(bad)
in
retf
jno
jp
repz
dec
mov
and
ret
xlat
inc
inc
fucomip
add
in
jle
or
push
mov
retf
push
fild
nop
cld
in
repz
mov
sub
test
mov
inc
outs
out
clc
je
cld
cli
dec
xlat
icebp
sbb
dec
out
lock
mov
sub
jmp
inc
in
cld
pusha
shl
dec
and
dec
vpunpckhqdq
mov
xchg
inc
mov
sub
and
sub
pop
fadd
stos
xchg
xor
or
repnz
dec
lock
aas
adc
addr16
out
jecxz
push
cmp
mov
loop
test
mov
push
in
stc
dec
cli
cmp
ja
(bad)
jp
out
test
cmp
(bad)
cs
stc
test
push
ret
push
loope
icebp
cmp
pop
mov
inc
inc
cmp
or
out
inc
in
out
cmps
sbb
and
leave
inc
mov
aas
mov
dec
ins
or
inc
imul
cmp
sub
leave
(bad)
repnz
loopne
ror
sub
xor
xchg
xchg
fild
cli
outs
(bad)
push
test
or
out
ja
ds
pop
les
int3
fwait
add
out
call
pop
jmp
push
inc
leave
and
cld
leave
gs
cmp
inc
nop
sahf
ret
add
in
adc
std
jmp
test
mov
inc
add
pop
aaa
(bad)
(bad)
fistp
and
in
dec
jge
out
jmp
pop
push
xor
cmp
clc
cli
retf
dec
fild
out
in
jmp
dec
jecxz
mov
(bad)
mov
inc
add
and
mov
mov
xchg
jnp
jbe
sbb
inc
in
jmp
pushf
adc
jo
pop
gs
ss
ds
cmps
aas
sbb
inc
in
ret
push
push
out
dec
loopne
add
dec
fs
in
out
inc
call
dec
addr16
mov
ds
push
inc
sti
pop
call
add
adc
not
dec
xor
add
mov
xor
sahf
imul
adc
test
inc
push
(bad)
mov
xchg
inc
loop
pop
rep
(bad)
fcmovbe
jns
inc
ds
test
jle
fnstsw
jo
std
add
movs
adc
push
jmp
push
cli
xor
jns
inc
repz
shl
aad
mov
pop
pop
cmp
loopne
outs
inc
xor
pop
in
leave
pop
test
into
icebp
repnz
inc
ret
cmp
mov
call
cdq
xchg
jmp
imul
xor
les
fs
inc
ds
sbb
push
ins
sti
lds
out
pop
retf
loope
stc
xchg
xchg
adc
xor
je
cmp
iret
xor
xor
add
mov
cmps
inc
sub
add
fld
xlat
int
cmp
(bad)
fisub
clts
in
or
inc
inc
cmp
xchg
mov
inc
sub
xchg
add
push
loope
pavgb
inc
inc
test
int
popa
cmp
dec
arpl
and
dec
int
inc
mov
out
in
lock
outs
jne
sub
pop
test
es
jo
and
sbb
mov
or
cmp
mov
adc
inc
cdq
mov
sbb
mov
sbb
cmp
fwait
jo
(bad)
xchg
and
lods
xchg
push
lods
inc
sub
mov
inc
mov
pop
js
repnz
cmp
and
call
ds
inc
retf
rcr
inc
cdq
mov
test
cwde
imul
in
jns
inc
inc
push
mov
cmp
out
ret
imul
jbe
retf
cmp
push
cmp
sub
or
retf
fnstcw
test
and
sub
mov
inc
dec
and
fsubr
cmp
add
inc
jmp
shl
push
inc
retf
cmp
test
mov
jmp
jbe
sbb
inc
in
loopne
outs
inc
call
(bad)
or
pop
xchg
jl
jle
sti
psubusw
pop
jmp
cmps
add
xor
das
adc
pushf
fsubr
fwait
lahf
jmp
ret
leave
call
mov
cmps
inc
or
push
fst
aad
bound
scas
jno
fdiv
mov
pop
inc
cmp
adc
mov
push
xor
inc
inc
inc
sub
inc
out
movs
cmp
pop
std
cmp
imul
pop
loop
cmps
das
lods
inc
inc
pop
scas
mov
mov
sar
mov
inc
lock
dec
or
mov
stos
push
pop
ret
inc
fld
sbb
push
xchg
inc
sbb
ret
div
inc
mov
test
jnp
sbb
cdq
or
xor
inc
rol
mov
xchg
xchg
adc
popa
in
jb
js
repz
mov
ret
xor
add
cmp
mov
or
push
pop
aam
push
mov
mov
inc
or
sbb
clc
dec
sub
pop
shl
loop
stos
ds
xor
fldcw
add
add
dec
sahf
jmp
xor
inc
inc
test
imul
mov
dec
push
or
inc
mov
sar
dec
bound
push
adc
jmp
mov
(bad)
add
jmp
push
sub
hlt
enter
mov
test
fbld
pop
test
cmp
mov
push
inc
cmp
sbb
retf
(bad)
mov
adc
lahf
movs
(bad)
mov
xor
pop
sbb
mov
and
jecxz
or
sbb
aam
into
daa
int
inc
cmp
push
ret
jmp
in
add
cmp
inc
loopne
frstpm(287
add
dec
inc
out
dec
xor
shl
xchg
jg
inc
dec
pop
rol
aam
xor
and
mov
pop
cdq
pop
xchg
cld
inc
and
xor
pop
imul
push
ret
iret
mov
mov
or
gs
imul
test
jbe
inc
fcomip
(bad)
ror
sub
mov
xor
int
inc
cmp
iret
sbb
xchg
cli
rcl
xor
js
in
mov
sbb
adc
add
or
js
or
repnz
sbb
jmp
cdq
inc
popf
in
inc
ins
rol
pop
inc
xchg
lds
mov
leave
mov
pop
loop
fmul
pop
inc
cmp
push
xor
jbe
out
pusha
(bad)
push
jnp
fisubr
scas
aaa
pminsw
mov
xor
inc
mov
inc
jns
popa
ins
rcr
and
cmp
lahf
jl
add
mov
sub
xor
inc
pop
xlat
inc
es
arpl
and
cmp
pop
in
add
push
inc
cmp
call
in
(bad)
ret
xchg
bound
loope
inc
jne
jg
call
inc
icebp
out
in
in
mov
js
cwde
cmp
dec
mov
repnz
mov
inc
cmp
inc
ins
aaa
add
add
mov
inc
mov
jns
and
fsub
fwait
cmps
stos
rcl
inc
mov
popa
inc
sub
inc
xchg
cmp
aas
cmp
push
dec
gs
jle
jno
jne
cmp
inc
cli
fsubp
adc
pop
(bad)
xor
inc
loopne
inc
or
jnp
aas
retf
inc
cmp
shl
inc
loopne
das
dec
bound
inc
cmp
jecxz
test
int
inc
cmp
fwait
test
inc
mov
sub
ds
test
clc
je
inc
repz
pop
xlat
mov
and
inc
repz
in
sub
ror
inc
inc
arpl
inc
jg
mov
add
pop
xchg
iret
call
cmp
pop
pop
xor
int
inc
cmp
out
xchg
std
inc
inc
xchg
je
stc
mov
and
fadd
(bad)
imul
cmp
imul
inc
lds
scas
jb
xor
adc
cmp
jle
inc
jl
xchg
out
add
aad
jle
add
or
and
or
or
cmp
jge
in
sbb
cmp
xchg
int3
inc
xchg
ds
sbb
inc
xchg
out
add
neg
imul
inc
imul
sahf
push
std
aaa
test
imul
dec
sub
inc
retf
aad
inc
js
inc
jne
dec
repz
hlt
imul
ss
jnp
inc
clc
test
or
repz
push
or
fadd
jo
popa
outs
stos
inc
mov
inc
test
mov
(bad)
cmc
inc
test
dec
mov
iret
xchg
or
stc
inc
call
jl
stos
inc
call
out
shr
inc
cmp
inc
mov
pop
neg
popa
jge
jp
cmp
push
jmp
adc
add
arpl
std
scas
sbb
xchg
cmp
or
scas
jmp
push
add
or
pop
rol
das
cmp
jp
scas
inc
cmp
sbb
dec
cmp
in
test
inc
cmp
xchg
mov
scas
inc
out
pop
inc
retw
inc
xlat
int
xor
idiv
mov
jbe
imul
enter
jnp
push
cs
add
fsubr
cs
inc
pop
jae
inc
aam
out
push
inc
push
inc
test
xor
add
adc
imul
mov
add
loopne
sbb
inc
xchg
pushf
dec
test
pop
daa
jl
leave
or
cmps
jecxz
inc
psraw
test
inc
mov
cmc
cmp
loopne
pusha
jmp
int
aas
inc
sub
ret
add
int
hlt
inc
clc
enter
es
push
stos
inc
add
out
cmp
lock
sub
cld
push
loop
cmp
cli
jge
arpl
ret
inc
cmp
mov
adc
mov
xchg
sub
pop
inc
mov
sub
cmp
(bad)
imul
mov
add
(bad)
loopne
dec
(bad)
dec
outs
imul
inc
sub
mov
adc
mov
jl
pop
sbb
icebp
mov
clc
cli
mov
add
jge
mov
and
or
sub
jmp
inc
popa
repnz
out
and
js
jle
mov
sub
inc
cmp
leave
sbb
mov
(bad)
pop
cmp
pushf
mov
and
ficom
inc
(bad)
je
das
test
inc
outs
sahf
pop
inc
pop
inc
sbb
jae
nop
or
in
js
inc
dec
inc
push
mov
mov
inc
jns
xor
dec
fld
or
(bad)
in
add
push
xor
arpl
in
sbb
sub
sub
leave
jmp
div
in
imul
in
mov
loope
aam
outs
cmp
fs
out
inc
and
bound
mov
pop
call
test
mov
cmc
int
inc
je
test
data16
das
inc
lds
les
inc
mov
inc
lods
into
dec
inc
aaa
popa
sub
jb
cmps
aaa
scas
cmp
ss
inc
inc
not
jns
jnp
out
loopne
das
ds
mov
aad
mov
iret
inc
inc
mov
into
arpl
pop
in
inc
aas
push
int
pop
mov
aas
xor
fld
test
xor
add
mov
rcr
icebp
cmp
inc
je
sbb
jne
int3
inc
daa
hlt
stc
test
adc
loopne
fcom
inc
pop
sub
outs
jo
inc
dec
jne
fs
sub
in
stc
jecxz
push
popf
push
push
pop
out
inc
inc
xchg
call
hlt
mov
inc
test
fstp
cli
and
fsub
mov
sbb
call
jb
push
inc
adc
inc
mov
cdq
jb
inc
pop
clc
mov
jle
inc
inc
(bad)
test
jge
les
mov
inc
ja
dec
cmp
inc
ds
icebp
mov
les
pop
repz
(bad)
loopne
(bad)
js
and
inc
inc
pop
pop
aam
and
cmp
data16
inc
jns
adc
pop
push
aad
and
cmps
cs
and
mov
sbb
stc
inc
retf
dec
aam
sub
inc
js
mov
jecxz
inc
inc
pop
inc
mov
(bad)
js
inc
sbb
jge
push
(bad)
xor
and
sbb
cmp
clc
ins
cld
jmp
fsub
fnstsw
inc
add
fmul
sti
mov
cmp
xor
mov
test
pop
inc
inc
mov
ds
shr
mov
dec
push
cmc
fiadd
jmp
in
repnz
imul
push
push
mov
ficomp
stos
lahf
out
inc
fmulp
inc
ret
or
pop
pusha
sbb
fiadd
push
lahf
inc
pop
mov
data16
mov
mov
sub
dec
xchg
xor
imul
stc
repz
sub
pop
jnp
mov
and
cmp
mov
push
pop
pop
or
inc
(bad)
xor
cli
sbb
push
loope
idiv
adc
lahf
mov
(bad)
jmp
inc
shl
inc
pop
inc
or
push
das
cli
rol
je
sbb
mov
inc
xor
fiadd
sahf
out
in
dec
pop
in
cmp
mov
sub
cld
ds
adc
ins
inc
pop
bound
retf
aas
rol
inc
in
mov
xor
cmp
in
jmp
(bad)
cld
fadd
mov
out
push
inc
stos
mov
push
repz
push
mov
fstp
add
dec
xchg
inc
mov
lock
mov
int3
inc
push
adc
pop
retf
mov
lea
nop
sbb
xor
sbb
sub
mov
or
cbw
jb
inc
nop
inc
dec
cld
jae
sub
adc
in
xchg
(bad)
les
loope
test
bound
setbe
inc
inc
int
lods
out
jo
adc
fadd
xor
mov
loopne
out
test
mul
stc
inc
retf
pop
adc
pushf
inc
xchg
mov
inc
sbb
int3
jg
jnp
cld
inc
outs
mov
pusha
mov
jg
pusha
jmp
push
inc
mov
sar
jge
fsubr
lock
xor
loopne
sbb
adc
call
std
xor
in
hlt
mov
nop
clc
mov
stc
mov
lea
adc
jbe
dec
dec
or
xchg
mov
stc
cmp
mov
inc
inc
adc
cmc
jg
stos
loopne
inc
faddp
inc
jb
sub
outs
sub
mov
iret
sbb
inc
neg
sbb
sub
popf
pop
leave
jo
xchg
dec
into
xchg
xlat
(bad)
jmp
fadd
sub
aaa
adc
xchg
aad
xor
add
in
nop
adc
pop
cmp
add
mov
push
jns
ss
int
sahf
ret
std
dec
push
adc
ins
cwde
cmp
jmp
sbb
sub
je
push
sub
aas
ja
xchg
cdq
scas
add
cld
mov
mov
jl
dec
xor
jmp
cmp
add
inc
gs
sti
jno
sub
pop
pop
xchg
leave
sbb
push
mov
inc
std
cld
pop
jno
popa
inc
ds
test
jo
fadd
adc
jnp
add
inc
inc
ds
test
repz
push
mov
fucom
inc
pop
rcr
inc
xor
inc
sub
mov
inc
jae
dec
inc
mov
leave
adc
add
retf
sti
push
mov
inc
retf
ins
int3
cli
in
add
jae
mov
outs
sub
and
fs
adc
fcomi
xchg
push
sar
test
push
cmp
cmp
mov
inc
xor
xchg
ja
sbb
and
cmp
cld
ds
out
test
jmp
mov
push
inc
pop
outs
adc
mov
mov
inc
add
inc
into
mov
out
push
inc
xor
mov
mov
fstp
add
cli
jmp
stos
inc
xor
iret
mov
xor
jp
or
in
movs
mov
repz
fwait
inc
xor
cmp
jns
add
stc
mov
xchg
fndisi(8087
out
clc
aas
mov
sub
enter
dec
inc
bound
mov
inc
lods
mov
inc
push
stos
jp
inc
cmp
lods
push
ins
sub
mov
iret
je
cld
cmp
push
add
loopne
sti
inc
add
mov
sub
clc
dec
test
mov
xchg
aam
inc
fisttp
inc
inc
outs
fadd
out
push
cmp
add
inc
outs
xchg
fs
pop
mov
inc
int3
arpl
push
cmp
jp
enter
xor
and
imul
pop
aad
cld
sub
and
inc
mov
inc
fiadd
je
mov
mov
into
sbb
add
inc
sbb
inc
ficom
leave
test
lock
ror
clc
dec
and
ds
or
xchg
(bad)
jbe
js
cmp
pop
int3
inc
add
push
inc
std
lods
inc
inc
fist
div
dec
iret
inc
loopne
ds
push
stos
ret
inc
cmc
stc
add
mov
out
les
dec
out
xor
cli
pop
cmps
ret
mov
jle
inc
xchg
out
jbe
add
test
fldenv
inc
mov
movs
jle
lds
mov
test
mov
(bad)
std
inc
mov
add
cli
mov
pop
inc
dec
or
jmp
aad
scas
cmp
push
jle
aaa
popa
adc
inc
cs
rol
jae
imul
pop
fist
inc
(bad)
add
cmp
aas
adc
push
mov
dec
in
inc
cmp
mov
mov
jp
xor
aam
mov
inc
repnz
addr16
mov
mov
fiadd
push
sub
xor
aaa
inc
movs
les
ror
pop
mov
cmp
mov
fs
or
xor
push
dec
sbb
stc
dec
out
loope
js
dec
repnz
inc
cmp
lods
inc
and
dec
iret
(bad)
fdivr
jmp
inc
sub
imul
cmp
mov
or
repz
bound
inc
test
jno
lods
scas
jmp
movs
(bad)
cli
repnz
fcom
or
inc
dec
(bad)
adc
dec
jg
xor
psrad
sub
cmp
sar
inc
jb
sbb
(bad)
jno
cmp
dec
in
adc
pop
pop
rol
mov
add
jbe
sbb
ret
in
mov
js
push
js
adc
xor
int
inc
stc
jno
pop
mov
outs
imul
aad
mov
pop
adc
push
retf
movs
inc
lea
fwait
sbb
dec
outs
xchg
mov
stc
inc
jmp
inc
sbb
or
idiv
or
lock
adc
scas
inc
pop
xor
sub
inc
add
repz
xor
in
jmp
loopne
sub
cmp
jmp
push
mov
jmp
addr16
sbb
pop
adc
pusha
dec
dec
dec
jecxz
fcomp
inc
adc
hlt
pop
jl
ss
cdq
push
inc
mov
sub
clc
cld
test
hlt
movs
cmps
into
fbstp
inc
int3
jecxz
imul
dec
(bad)
cmp
addr16
bound
push
add
sub
cmp
dec
adc
add
jne
inc
jl
stos
push
adc
cs
test
inc
sub
(bad)
sbb
(bad)
out
into
cmp
gs
jmp
inc
push
and
push
inc
push
xor
bound
sbb
mov
inc
jnp
jb
sbb
inc
sti
inc
ror
or
stos
int
sbb
aas
(bad)
mov
(bad)
fdivp
gs
pop
adc
dec
pop
inc
ficomp
mov
lds
or
jp
data16
sbb
ret
cmp
in
inc
xor
lock
xchg
inc
adc
dec
jle
cmc
inc
inc
adc
outs
hlt
inc
add
jno
pop
push
mov
xor
(bad)
xor
dec
ds
adc
push
jmp
push
sub
add
ds
in
idiv
fimul
jmp
push
dec
int
inc
(bad)
hlt
or
aad
inc
sbb
lods
and
inc
xor
pop
pusha
outs
mov
sbb
pop
sub
cmc
sbb
inc
add
jmp
pop
popa
inc
test
inc
adc
scas
pop
sbb
call
imul
add
mov
pop
cmc
jmp
adc
inc
mov
rcl
int3
inc
retf
movs
cmp
cld
dec
in
es
add
xchg
fild
cwde
inc
adc
mov
int
inc
es
rol
adc
rol
inc
mov
retf
add
sub
xchg
call
cmp
(bad)
outs
cmp
bnd
sbb
push
js
dec
fwait
cmp
lock
pop
xchg
or
and
push
loope
pop
mov
fbstp
push
inc
inc
sbb
jb
cmp
retf
inc
jmp
push
pop
add
inc
inc
arpl
xlat
outs
push
add
xor
fdiv
xchg
inc
inc
mov
ss
cli
inc
xchg
aam
inc
mov
mov
push
add
inc
shl
sub
mov
ins
fndisi(8087
(bad)
mov
cmovo
pop
jl
mov
adc
jne
push
jecxz
dec
cli
ja
xchg
nop
push
pop
ins
and
cmp
lods
or
inc
enter
jmp
inc
ja
inc
inc
mov
leave
jecxz
inc
or
xchg
retf
inc
jg
adc
push
iret
inc
inc
and
cmps
mov
jne
inc
adc
inc
push
inc
adc
inc
inc
js
push
pop
mov
shl
(bad)
mov
minps
pop
inc
mov
xor
cmp
loopne
movs
dec
es
pop
push
sbb
push
add
test
and
dec
or
inc
xchg
in
(bad)
mov
clc
xchg
mov
jns
or
jae
inc
sbb
xchg
xor
inc
adc
idiv
std
mov
cmp
pusha
mov
ficom
inc
not
pop
inc
jb
pop
inc
ins
pop
inc
mov
mov
test
and
fiadd
imul
aam
inc
mov
xor
cmps
loope
cmp
cmc
dec
pop
retf
cmp
xchg
push
stos
pop
bound
inc
inc
mov
xor
ret
xor
popf
out
pop
test
xchg
cmovo
outs
ins
pop
imul
int3
inc
inc
push
cmp
cdq
adc
mov
nop
sbb
dec
loope
push
pop
cmp
ret
pushf
int
inc
bound
or
mov
pop
aas
inc
mov
xor
jae
mov
xor
xchg
inc
mov
test
sbb
dec
cmp
xchg
mov
(bad)
or
stc
inc
pop
inc
push
inc
inc
pop
pop
sar
jl
or
or
in
jne
dec
cmp
imul
dec
cmc
in
cmp
js
mov
mov
xor
sub
add
inc
inc
lahf
xchg
mov
aas
dec
cdq
inc
inc
mul
jg
icebp
jne
je
dec
repnz
(bad)
push
ins
inc
stos
jmp
inc
lods
mov
inc
hlt
dec
cli
aaa
mov
mov
and
inc
sub
mov
aam
inc
popa
and
dec
sti
push
sbb
out
jecxz
inc
cmps
and
sbb
(bad)
popf
inc
cmp
inc
jl
sar
pop
xor
inc
stos
inc
loopne
out
inc
pop
in
dec
push
fs
inc
add
sbb
jnp
(bad)
aas
jle
mov
imul
leave
push
loopne
adc
sbb
push
jbe
add
inc
xchg
mov
inc
pop
test
push
dec
jb
xchg
mov
mov
inc
mov
pop
imul
inc
mov
push
pop
stc
pop
inc
and
push
icebp
pop
mov
mov
out
sub
xor
jmp
icebp
punpckldq
mov
sbb
(bad)
mov
mov
sub
push
stos
or
cmp
ds
sub
nop
(bad)
cmp
add
inc
pop
cwde
xchg
clc
inc
adc
aas
inc
or
mov
out
int3
xor
mov
inc
cmp
add
dec
pop
add
cmp
addr16
out
mov
inc
pop
or
and
inc
ror
jle
jecxz
push
push
(bad)
out
jae
pop
mov
dec
stc
paddb
xchg
inc
inc
mov
cmp
dec
xchg
pop
in
cmp
and
xchg
push
jmp
push
sub
popf
inc
test
inc
cmp
loopne
jae
cmp
or
or
add
xchg
push
imul
or
mov
push
add
inc
lahf
adc
cmp
lds
imul
xor
sbb
mov
mov
fs
repnz
mov
xor
fld
mov
mov
lods
xor
inc
inc
cmp
xchg
add
and
xchg
std
inc
dec
mov
inc
or
mul
stc
inc
arpl
lods
dec
mov
aas
out
sub
ss
jns
cdq
cmp
mov
rol
xlat
inc
das
cmp
(bad)
dec
or
je
jne
inc
inc
mov
ins
xchg
hlt
and
cmp
add
sub
sbb
xor
test
inc
xchg
mov
jnp
jb
clc
inc
mov
daa
inc
xchg
outs
mov
es
xchg
or
test
adc
add
mov
shr
aas
sub
mov
js
mov
adc
pop
or
push
js
lods
inc
inc
fstp
adc
ja
sbb
dec
sbb
cmp
mov
js
xchg
repnz
mov
mov
inc
fwait
sti
repz
or
mov
shl
xor
jmp
sbb
xchg
loopne
cmp
inc
jmp
adc
pop
xchg
mov
(bad)
(bad)
dec
repz
inc
leave
xor
sub
inc
in
aas
inc
push
inc
xchg
movs
mov
cmp
gs
int
inc
(bad)
je
jmp
xchg
outs
adc
mov
aaa
xchg
pop
inc
xchg
sbb
movs
jne
inc
inc
mov
shr
mov
push
dec
repz
dec
imul
mov
adc
inc
jecxz
std
dec
hlt
adc
jl
pusha
xchg
jo
cli
aas
inc
mov
pop
sbb
adc
scas
mov
stc
dec
sbb
adc
push
inc
mov
wbinvd
pop
inc
cmp
mov
jmp
add
mov
push
pop
inc
dec
pop
fild
loop
inc
and
mov
inc
mov
push
jle
test
cmp
jo
hlt
pop
cli
pop
dec
inc
jo
das
imul
lods
inc
mov
(bad)
or
cmc
dec
mov
inc
push
sub
lock
test
mov
das
idiv
xchg
fiadd
mov
sbb
fbld
dec
xchg
je
fiadd
cmp
popa
addr16
mov
inc
inc
in
pop
inc
ja
push
inc
push
add
inc
aas
xchg
out
inc
fiadd
outs
or
lds
inc
xor
jmp
inc
cmc
stos
hlt
sub
dec
pop
mov
aam
js
rcr
hlt
jo
std
push
inc
scas
into
inc
add
lods
mov
jmp
cli
xor
data16
inc
cdq
inc
push
out
rol
and
inc
loopne
sub
inc
outs
inc
fld
dec
in
lods
ins
fistp
pop
call
cmp
cmp
outs
cmp
cs
rol
mov
mov
sub
inc
jp
or
cmp
dec
dec
call
cmp
into
dec
in
inc
int3
hlt
movs
fimul
ds
imul
mov
inc
cmp
pop
cdq
jmp
cmp
scas
or
inc
or
push
iret
cmp
and
dec
inc
jl
xchg
sbb
inc
aas
(bad)
bound
aas
inc
sub
inc
xor
or
jmp
mov
inc
dec
cmp
pushf
cs
test
mov
inc
scas
jmp
je
sbb
inc
mov
mov
sub
cmc
cmp
jmp
pushf
adc
inc
out
xchg
sbb
jno
inc
jne
push
adc
sbb
out
sbb
retf
cmp
adc
inc
inc
dec
add
je
add
and
in
enter
push
test
push
in
sti
stos
clc
or
addr16
(bad)
add
jp
out
xchg
ins
inc
xor
mov
inc
add
add
inc
adc
jns
out
adc
cmp
dec
jg
dec
addr16
cmovo
fild
imul
ds
or
sbb
in
dec
div
aas
adc
retf
mov
fbstp
shr
std
xchg
pop
call
adc
add
xchg
inc
cmp
jns
ret
jmp
adc
js
cmp
ins
inc
repnz
cmp
das
pop
push
(bad)
jmp
ss
jmp
inc
mov
leave
clc
sbb
inc
push
fild
aam
push
int3
out
inc
xchg
inc
push
inc
cmp
or
add
sti
mov
pop
push
cwde
aad
inc
leave
dec
pop
test
inc
pop
jnp
add
fidivr
mov
test
sbb
aam
mov
and
sahf
cs
and
bound
retf
cmp
adc
dec
in
jecxz
xchg
cmp
test
ds
cdq
rol
in
add
je
clc
dec
cmp
cmc
inc
adc
jae
pop
sbb
scas
je
push
or
cmp
cmps
cli
inc
sbb
outs
add
xor
loopne
push
test
sub
pop
into
inc
gs
inc
inc
xchg
aaa
int
mov
or
sub
aaa
sbb
sub
(bad)
inc
jg
or
and
xchg
and
dec
sbb
test
push
call
mov
scas
inc
and
loope
ja
bound
pop
jmp
in
lods
jp
push
repz
ds
jle
daa
xor
stc
(bad)
shl
mov
inc
cmp
stc
add
fidivr
cmp
mov
xchg
inc
mov
pop
dec
pop
and
or
push
stos
rcl
ds
inc
xchg
mov
outs
or
leave
cmp
push
retf
sub
push
ret
dec
mov
mov
jge
lods
(bad)
aad
ins
dec
mov
mov
adc
pop
arpl
(bad)
scas
inc
ss
jbe
inc
addr16
in
jmp
sbb
retf
icebp
out
std
inc
neg
cmps
in
(bad)
sub
dec
xchg
cmp
test
(bad)
cld
xchg
mov
(bad)
ja
bound
push
or
(bad)
and
or
mov
xchg
cs
xchg
js
aas
inc
jl
dec
(bad)
stos
sahf
call
lock
sub
js
icebp
cmps
lds
jg
ds
inc
loope
lock
cmp
jmp
cld
jecxz
movs
cmp
aaa
imul
inc
inc
add
loop
cmc
dec
dec
jmp
push
and
mov
and
jne
cmp
dec
cli
dec
loop
sbb
and
add
and
add
or
aas
push
jecxz
jno
nop
test
rcl
pop
sub
mov
mov
(bad)
cs
cmp
js
and
dec
cld
inc
xchg
xchg
mov
fild
inc
jl
(bad)
add
sbb
daa
inc
std
jmp
outs
lock
pop
call
mov
icebp
fldenv
jp
push
sbb
inc
cli
test
cmp
sbb
stos
in
pushf
and
inc
inc
push
jge
jg
inc
inc
push
out
mov
clc
je
add
mov
int3
inc
sbb
push
xor
push
retf
icebp
jg
sub
aaa
arpl
in
xor
movs
stos
test
js
xor
hlt
or
inc
ret
pop
dec
sbb
inc
aas
sub
sbb
cmp
jne
add
sar
call
pop
and
bound
cmp
in
enter
lods
jmp
cmp
test
and
inc
adc
push
or
adc
sub
cmp
xor
inc
xor
push
cwde
push
xor
sbb
add
sbb
jmp
inc
jecxz
inc
stos
out
cmps
inc
pop
sub
(bad)
add
dec
hlt
inc
lods
cmc
fild
pop
rcl
inc
sbb
dec
mov
inc
inc
add
push
inc
mov
addr16
and
cmps
inc
cmp
mov
pop
test
imul
popf
aas
cmp
ror
inc
dec
shl
les
cmp
mov
mov
push
sub
in
cmc
add
(bad)
sub
js
inc
nop
imul
xor
cmps
xchg
cld
inc
jne
mov
aaa
dec
(bad)
and
scas
jnp
shld
in
sub
retf
fst
cmc
inc
cdq
cmp
arpl
jl
aam
inc
shl
inc
xlat
jnp
icebp
mov
inc
loop
(bad)
in
out
movs
ds
test
scas
sub
aas
scas
inc
jecxz
push
cmp
lock
inc
sbb
xor
scas
add
cs
rcl
mov
xor
dec
in
xor
leave
cmp
call
pop
test
inc
lods
xlat
(bad)
pusha
pop
jbe
inc
sub
jbe
inc
adc
xor
jb
aad
inc
and
xchg
test
add
push
inc
push
xor
rcr
add
inc
push
adc
jo
inc
(bad)
retf
jmp
stc
pusha
icebp
sbb
push
sbb
int
mov
cmp
outs
mov
lods
ja
js
cmp
mov
leave
inc
add
ror
inc
cmp
fs
jnp
out
jb
leave
inc
lds
pop
in
xchg
nop
fwait
aad
inc
push
mov
iret
loope
mov
cs
fcom
mov
inc
push
inc
stc
lods
test
inc
inc
icebp
and
pop
push
xor
cmp
cmp
cwde
inc
retf
cdq
mov
(bad)
sti
cmp
fld
iret
stos
xchg
or
mul
cmp
cli
dec
stc
push
add
icebp
(bad)
out
sti
in
(bad)
inc
int3
jecxz
cmp
or
call
mov
and
xor
repz
cmp
sbb
xor
jecxz
mov
xchg
ds
push
inc
cmp
inc
es
gs
adc
je
push
inc
aas
idiv
scas
lock
js
push
mov
pushf
shl
inc
jp
mov
ins
jecxz
loope
popa
inc
push
cmp
push
jns
and
sbb
xchg
stos
clc
fs
inc
loop
retf
out
jo
dec
js
in
cld
xor
pop
shl
inc
inc
int
addr16
inc
mov
mov
lea
cmp
and
out
fld
xor
mov
jp
inc
mov
fist
inc
mov
adc
cmp
ret
div
inc
push
adc
sbb
xor
push
mov
and
ds
xor
fiadd
out
addr16
inc
jns
lea
push
mov
mov
inc
data16
jp
loope
mov
stos
xor
std
cmp
push
inc
mov
lahf
ins
mov
xchg
jmp
(bad)
aad
(bad)
mov
sbb
mov
inc
and
or
lahf
lods
sub
in
sbb
mov
inc
(bad)
stos
aam
pop
push
or
je
xor
jo
in
enter
push
mov
mov
push
outs
sbb
dec
inc
mov
sub
inc
pop
je
in
xor
or
(bad)
jg
cmp
in
and
jl
js
dec
test
cli
cmp
(bad)
call
cmp
sbb
lahf
mov
jno
fwait
cmp
xchg
xchg
push
ficom
push
or
inc
add
sar
mov
and
adc
inc
inc
cmp
(bad)
fild
xchg
(bad)
enter
in
xor
int3
out
mov
inc
inc
neg
movs
inc
push
jne
inc
dec
pushf
test
xor
pop
inc
adc
jle
inc
jle
inc
repnz
xchg
adc
out
sbb
(bad)
std
lds
inc
inc
add
jge
jbe
pop
xor
shr
or
mov
add
dec
out
daa
cmps
mov
(bad)
xor
lds
pop
in
pop
loope
jns
imul
inc
xor
cmp
and
sbb
dec
inc
sub
clc
sbb
ss
xor
pop
nop
add
and
and
sti
xchg
inc
inc
and
push
outs
xchg
cmp
and
lods
inc
sbb
inc
lods
mov
popa
mov
pop
push
and
inc
push
or
sar
sub
lds
inc
xor
es
push
in
jmp
call
ja
push
sub
push
mov
jmp
ds
out
cld
pusha
xor
cwde
pop
fs
(bad)
jnp
cmp
fisubr
mov
jmp
jmp
inc
mov
push
ss
and
pusha
add
idiv
ds
ficomp
xor
les
xor
cmp
test
inc
mov
data16
inc
cwde
jae
sub
cs
xor
inc
repz
fild
mov
inc
mov
xchg
inc
cmp
jne
inc
hlt
frndint
out
jno
not
inc
sti
cld
repz
mov
cmp
pop
into
cmp
lods
inc
bnd
in
sub
fcmovnu
jnp
mov
xor
push
(bad)
sub
jnp
and
lds
or
rol
add
sub
(bad)
dec
add
push
xchg
and
fistp
push
nop
mov
cs
xchg
pop
inc
xor
pop
inc
lods
mov
xor
jns
inc
push
inc
sub
inc
inc
mov
outs
mov
idiv
out
xor
clc
add
call
sub
dec
jl
mov
push
call
jle
inc
inc
mov
mov
xchg
dec
test
cli
inc
and
(bad)
test
mov
ret
mov
mov
fs
pop
sbb
mov
push
cs
dec
fldcw
xor
cmp
arpl
inc
loope
dec
add
adc
xor
xchg
std
inc
lods
jg
mov
test
inc
(bad)
jae
test
cmp
xchg
pop
jecxz
inc
adc
push
jle
cmp
inc
nop
sar
inc
rol
xor
out
pusha
mov
cmp
retf
test
cwde
rcr
in
dec
mov
add
dec
cmp
xchg
(bad)
cmp
je
lock
cmps
pop
cs
cmp
in
pop
cwde
mov
dec
mov
inc
add
adc
jno
sub
sbb
inc
mov
mov
or
in
inc
xor
ins
push
imul
pop
inc
pop
aas
(bad)
les
and
hlt
inc
out
inc
xor
inc
jno
inc
inc
mov
lea
cmc
es
inc
or
cli
jmp
inc
in
int
dec
in
fild
jecxz
adc
inc
inc
fild
cmp
(bad)
jne
cmp
(bad)
dec
jl
in
in
movs
adc
and
add
push
cmp
sub
fidivr
clc
dec
jnp
sahf
adc
lods
fld
and
mov
hlt
inc
sbb
(bad)
leave
iret
inc
(bad)
jmp
mov
inc
inc
(bad)
adc
jmp
jbe
inc
inc
cmc
dec
jmp
in
imul
repz
out
jl
cmps
sub
je
and
cmp
ja
hlt
push
jae
jne
in
adc
push
inc
xchg
dec
jp
(bad)
fbld
stos
inc
inc
(bad)
cli
cmp
dec
hlt
sub
ret
cli
cmc
pop
push
and
jmp
push
lds
inc
les
inc
jne
stos
and
pop
std
lods
dec
cmp
loop
cmp
jmp
leave
push
mov
dec
mov
inc
xor
aad
mov
jge
jecxz
inc
test
jg
cmp
retf
fwait
jo
jmp
jae
inc
inc
inc
xlat
push
(bad)
aaa
push
loope
leave
inc
xchg
adc
std
je
shl
dec
mov
sub
mov
inc
mov
(bad)
hlt
inc
pop
jmp
ins
mov
sub
pop
push
inc
xlat
imul
jne
cdq
inc
hlt
inc
dec
xor
xchg
cmp
fiadd
sbb
inc
(bad)
ds
dec
cli
push
inc
addr16
lahf
adc
fsubr
iret
jmp
inc
xor
xor
inc
fsubr
xor
xchg
stos
out
arpl
sbb
xor
mov
fsubr
(bad)
cmp
sti
jnp
retf
mov
imul
int
xor
mov
leave
ds
jo
out
fld
cmp
mov
clc
jb
dec
call
int
jge
test
stc
jmp
sub
js
xor
in
into
inc
sub
in
js
nop
inc
out
jbe
pop
push
and
sub
imul
cmp
aaa
fld
cmp
fild
inc
es
inc
pop
scas
repz
fadd
js
std
dec
out
inc
xchg
retf
in
cmps
add
fadd
add
scas
je
cmp
dec
js
std
adc
dec
ins
dec
pop
out
cmc
xchg
xor
pop
mov
jle
inc
push
adc
inc
xchg
je
cmc
xchg
arpl
fisubr
sub
scas
daa
aaa
aad
inc
lods
jecxz
js
push
cmc
pop
cdq
pop
pushf
inc
sub
push
sbb
jne
push
jg
or
in
pop
mov
inc
inc
test
adc
imul
test
ret
aad
push
dec
sub
imul
out
mov
sub
dec
es
pop
stc
push
mov
jbe
popa
sar
adc
cmps
mov
cs
inc
and
jp
inc
js
inc
ds
sar
mov
addr16
jns
inc
sbb
je
ja
(bad)
repz
dec
loop
cmp
icebp
imul
cmp
push
(bad)
mov
sub
bnd
inc
mov
xchg
or
jmp
inc
inc
cmp
ss
out
test
inc
jbe
nop
popa
inc
or
addr16
jns
xlat
pop
mov
inc
inc
fs
cli
shl
neg
inc
push
repnz
lock
out
jg
add
call
inc
cmp
cmp
jnp
xor
xchg
out
fld
dec
cmp
pop
jmp
jo
outs
mov
cld
js
and
inc
nop
sub
inc
jns
fadd
dec
sahf
push
lea
inc
stos
sub
jl
sub
je
inc
(bad)
loope
dec
jmp
jp
repnz
inc
mov
pushf
ins
add
gs
popa
pop
cmp
call
jo
in
scas
repz
push
inc
cdq
inc
pop
ret
test
sbb
inc
ins
push
and
xchg
mov
jns
nop
cmps
loopne
cmp
sbb
mov
mov
div
sar
xchg
ins
xchg
pop
mov
sub
inc
and
cmp
in
add
stc
push
add
inc
jmp
jb
xchg
cmp
loope
ds
inc
inc
xor
pop
in
jbe
out
mul
loopne
sub
inc
or
mov
hlt
clc
cmp
je
std
or
sub
mov
sub
inc
fdiv
aas
mov
inc
push
ins
nop
mov
popf
ret
xchg
sahf
inc
aad
fld
cmp
xor
mov
mov
cmp
jecxz
jp
xchg
or
pop
or
cmp
aaa
call
arpl
cli
lds
jl
jp
jmp
cmp
hlt
test
mov
mov
call
aad
fld
jb
rol
inc
pop
push
add
int3
dec
imul
cli
dec
gs
pop
out
push
fistp
std
lods
frstor
lods
cmps
inc
lahf
loop
mov
inc
lds
jl
arpl
inc
or
jbe
jb
adc
add
adc
inc
or
scas
shl
inc
inc
push
lock
das
clc
cmc
loope
sbb
jge
popa
sbb
inc
out
(bad)
jl
cld
dec
inc
pop
lods
xor
sub
in
stc
inc
jne
push
dec
lods
call
fdivrp
inc
inc
cmp
xchg
xchg
fcom
fstp
shl
add
mov
inc
or
or
sub
cld
repz
clc
stos
sbb
shl
xchg
test
jns
or
jb
shr
fidivr
in
mov
jmp
stc
cmp
icebp
fistp
push
inc
mov
fwait
in
mov
gs
jne
je
inc
mov
push
jp
and
out
push
jp
mov
adc
jb
push
les
xchg
jmp
jae
clc
push
std
nop
dec
popf
push
inc
in
ja
jnp
inc
pop
sub
inc
sub
jmp
jp
icebp
inc
arpl
shl
mov
sbb
fldenv
outs
jmp
jbe
test
mov
jae
fisubr
inc
push
fild
adc
xchg
out
jae
inc
jl
imul
mov
cmp
ja
out
cs
(bad)
enter
cmp
jecxz
(bad)
iret
dec
jge
in
and
fcmovu
dec
sub
cmp
outs
js
repz
pop
dec
cmp
ret
pusha
call
int
cmp
dec
pop
jo
pop
repnz
ret
sti
cmp
jecxz
bound
jp
jns
and
jle
outs
and
jmp
repz
mov
adc
cmp
mov
mov
or
add
adc
jmp
in
repz
scas
mov
inc
push
cmps
test
jmp
retf
loop
xchg
push
mov
movs
jge
add
sar
outs
lds
inc
(bad)
fnstcw
inc
pop
dec
cmps
pop
sbb
inc
cmp
push
test
pop
sbb
inc
jnp
mov
sub
push
imul
inc
fidivr
ds
das
inc
add
dec
retf
xchg
xchg
js
xor
aam
outs
imul
jnp
sbb
inc
nop
sub
imul
xchg
mov
push
jno
jmp
ret
pop
inc
mov
push
stos
pop
outs
sub
jp
mov
fild
cmp
repz
ret
inc
xor
xchg
fiadd
stc
nop
js
jb
dec
ds
xor
dec
fs
cmp
(bad)
call
loopne
jo
ds
xchg
daa
jne
out
sti
inc
sub
jp
test
xchg
fld
pop
mov
cmp
aaa
fisub
cmp
mov
or
out
in
adc
inc
scas
sub
xchg
(bad)
aad
inc
repnz
push
jae
cld
dec
push
jecxz
ins
pop
cmp
jmp
mov
(bad)
cmps
pop
shl
inc
imul
jo
(bad)
gs
jnp
mov
ds
test
adc
shl
inc
inc
mov
std
ficomp
sub
sub
inc
test
dec
test
loopne
adc
pop
inc
fs
fisub
inc
lods
mov
sbb
pop
and
inc
inc
lods
inc
jns
hlt
inc
dec
ins
out
jmp
mov
or
jg
pop
mov
ret
add
loop
inc
call
fbld
inc
cmp
push
ins
mov
xchg
mov
pop
inc
fs
fnop
bound
xor
or
push
std
shr
pop
mov
mov
mov
div
lds
pop
sti
dec
xor
jmp
xchg
inc
es
mov
mov
pop
out
mov
dec
movs
cmp
inc
inc
stos
xor
clc
adc
call
repz
popf
stc
inc
loope
lock
fisubr
or
hlt
jg
sub
mov
mov
jo
mov
dec
pop
je
test
test
dec
arpl
pop
shl
cmp
push
dec
outs
push
ja
cmp
addr16
aad
sti
mov
pop
jp
inc
sbb
or
jae
jmp
clc
adc
sbb
cmp
das
sti
jnp
pop
es
bound
sbb
dec
inc
jnp
inc
add
loopne
ret
sub
in
fstp
push
sbb
sar
xchg
dec
inc
ds
mov
jo
mov
xor
cmp
in
inc
mov
inc
stc
enter
adc
xchg
or
out
jae
shl
fcom
imul
and
and
sub
jae
inc
mov
inc
repz
xlat
outs
inc
std
adc
add
adc
lods
loope
clc
jnp
or
cmp
or
idiv
cmp
xor
sahf
gs
cmps
xchg
mov
cmp
jg
xchg
inc
aas
int
es
ret
mov
imul
inc
ins
inc
fs
sbb
test
sbb
adc
das
pop
and
xor
add
outs
iret
and
js
sbb
dec
aaa
test
adc
js
pop
push
aam
fld
push
dec
cmp
jp
jle
gs
cmp
arpl
mov
adc
inc
cmc
xchg
repz
jmp
push
inc
pop
mov
jae
inc
out
and
mov
outs
stos
dec
dec
inc
stc
push
inc
enter
and
clc
add
arpl
inc
hlt
pop
dec
jmp
mov
mov
xor
pop
mov
inc
xor
jno
mov
retf
cli
dec
push
pop
in
xor
jge
cmp
aad
fiadd
mov
cli
loop
and
cmp
jp
mov
(bad)
cmp
arpl
inc
repnz
imul
lock
in
repz
mov
mov
mov
ror
cmp
xchg
push
cdq
push
and
xchg
sbb
dec
sub
stos
jns
push
gs
das
inc
jns
and
inc
inc
scas
jb
vaddpd
inc
aas
popf
jmp
in
idiv
aas
pop
and
mov
inc
mov
jnp
and
(bad)
dec
sub
add
call
add
fwait
xchg
pop
and
repz
clc
jmp
inc
jecxz
add
inc
sbb
pusha
daa
jge
jb
inc
push
jno
jp
scas
adc
sbb
inc
pop
or
add
lods
inc
sbb
in
pop
adc
mov
nop
fs
adc
cmp
push
dec
out
in
pop
daa
adc
jo
in
cmp
aaa
jo
xor
cdq
cmp
inc
(bad)
add
sbb
cwde
inc
xchg
xchg
lods
mov
js
imul
inc
aad
add
dec
pop
and
mov
popa
aam
fnstsw
pop
push
arpl
pop
inc
lods
inc
and
(bad)
(bad)
cli
cmp
(bad)
std
inc
inc
fs
mov
cld
add
gs
cmp
in
test
mov
std
lods
enter
sub
pop
je
iret
jp
add
xchg
push
iret
xchg
imul
inc
mov
mov
rcl
mov
mov
cmp
addr16
outs
in
adc
inc
mov
cmp
xlat
or
inc
jnp
xor
not
jne
inc
ja
stc
retf
pop
xchg
jmp
cmp
and
std
je
xor
int3
shl
inc
ret
cmp
imul
jp
lahf
adc
aad
sbb
cmp
jb
xor
xor
add
test
xchg
pop
inc
push
es
jns
fiadd
mov
mov
in
mov
sar
dec
adc
repz
lods
inc
not
mov
adc
mov
cmp
sub
xchg
out
xchg
sbb
call
sti
call
sub
cmp
jmp
sub
js
arpl
retf
push
out
lea
sbb
outs
cmp
in
jp
or
int
sbb
in
mov
retf
call
popa
cwde
(bad)
repz
inc
cmp
cs
aaa
and
jmp
jmp
(bad)
retf
mov
test
sbb
and
jecxz
scas
cli
inc
enter
mov
inc
ret
pushf
inc
pop
jmp
pop
in
mov
or
sahf
jp
inc
or
and
cs
inc
add
test
mov
lea
movs
and
inc
cmp
and
(bad)
inc
(bad)
cli
inc
inc
in
sti
loopne
push
lock
jno
jae
inc
inc
repz
stc
fld
jo
inc
pop
push
push
mov
ja
inc
lods
and
pop
test
fild
sub
mov
ja
inc
inc
xchg
mov
(bad)
mov
sub
loope
bound
mov
cmp
and
test
cmp
adc
cmp
jl
xchg
inc
out
jne
xchg
pushf
and
shl
call
inc
(bad)
mov
jle
and
data16
pop
movs
jns
push
in
mov
jnp
(bad)
inc
inc
and
inc
es
mov
mov
adc
adc
call
aas
or
xor
mov
xchg
push
imul
inc
cmp
push
jbe
cmp
mov
inc
xchg
cmp
adc
adc
xor
dec
bound
inc
dec
dec
outs
mov
bound
sar
inc
js
or
sbb
pop
pop
imul
out
data16
lds
int3
(bad)
inc
inc
push
or
mov
retf
xor
repnz
xchg
ds
and
int
mov
xor
mov
push
int3
pop
and
pusha
cmp
aas
xchg
or
ds
xor
call
jle
js
ds
pop
inc
imul
xchg
jno
test
dec
iret
jecxz
inc
sub
jbe
rol
mov
call
add
xchg
inc
in
lods
mov
fcmovbe
lea
mov
mov
sbb
cs
cmp
xlat
rcl
sub
jp
mov
mov
in
shr
jl
xchg
mov
xchg
dec
adc
jg
jb
mov
xor
(bad)
xchg
sub
xor
rol
mov
and
inc
sub
dec
enter
xchg
(bad)
mov
js
push
test
sub
(bad)
cmp
or
push
cmp
dec
call
sub
push
leave
mov
mov
aaa
js
rcr
out
out
mov
inc
(bad)
add
xchg
jno
add
stc
inc
dec
popa
fwait
imul
inc
and
cld
dec
ins
test
adc
mov
stos
arpl
inc
aad
(bad)
push
clc
test
outs
dec
inc
bound
outs
inc
stos
cmp
mov
inc
inc
sti
shl
adc
push
inc
mov
test
push
repz
mov
mov
inc
retf
lods
dec
and
and
xor
xor
mov
sub
and
cdq
inc
ins
inc
jg
ds
inc
into
xor
add
icebp
cmp
inc
cmps
aam
mov
addr16
movs
sbb
ds
aas
in
popa
xor
cdq
cmp
sbb
jge
inc
stos
add
out
inc
xchg
add
and
jmp
ds
shl
sub
bound
enter
shr
xchg
rcr
dec
jg
mov
stc
js
mov
push
xlat
sahf
hlt
inc
or
leave
and
jmp
jg
cmps
sub
sub
inc
jne
sub
and
dec
(bad)
aas
stos
inc
jmp
das
cdq
cmps
fadd
cmp
arpl
xor
sub
inc
ins
dec
aas
mov
inc
into
mov
fsubr
(bad)
rol
and
iret
bound
out
cmp
test
ror
and
dec
cmps
pop
xor
sub
push
fsub
and
dec
cmp
xor
cmp
cdq
cmc
dec
xchg
adc
add
(bad)
adc
cdq
popf
jl
jae
ja
rcr
cs
int
cmp
lock
xchg
inc
retf
loopne
int
inc
xor
and
inc
ds
cmp
inc
arpl
xchg
enter
or
clc
and
mov
into
or
inc
or
sbb
add
inc
mov
inc
cdq
inc
and
dec
mov
inc
xchg
(bad)
mov
aas
sub
mov
add
inc
jl
fld
cmp
dec
mov
mov
inc
inc
addr16
inc
js
xor
fs
imul
adc
add
xchg
cmp
imul
push
(bad)
lods
inc
jp
inc
aad
inc
test
pop
lock
sbb
and
ds
xor
jnp
ds
sar
inc
es
aaa
mov
retf
xchg
in
inc
(bad)
jbe
pop
push
aad
or
inc
cmp
inc
cdq
xchg
aad
inc
cmp
and
pop
es
icebp
cmp
sbb
mov
inc
sbb
cmp
and
ror
inc
rol
inc
ror
lea
and
or
inc
sbb
mov
xchg
inc
inc
sbb
in
push
cmovo
push
out
mov
mov
inc
stos
mov
add
arpl
ds
icebp
inc
aad
xchg
mov
sar
js
add
pop
fsubr
inc
jmp
int
rol
mov
cld
test
xor
mov
addr16
inc
inc
adc
cmp
test
repz
mov
inc
and
inc
jl
mov
aad
inc
adc
sbb
xchg
jae
rol
int
outs
inc
out
imul
jmp
xchg
pop
push
jns
(bad)
jecxz
arpl
inc
mov
out
aad
inc
inc
sbb
inc
inc
cmp
sbb
add
inc
out
mov
inc
inc
sbb
inc
inc
dec
or
pop
mov
je
add
mov
xchg
sahf
inc
(bad)
jbe
inc
xchg
int3
xchg
jle
iret
jecxz
gs
clc
inc
cmp
inc
retf
lods
or
mov
rcr
inc
(bad)
gs
inc
test
or
pop
mov
jl
addr16
mov
leave
mov
mov
(bad)
loopne
jno
fmul
and
xchg
sar
add
rol
xor
cmp
cdq
or
mov
mov
stos
mov
push
jmp
out
rol
fisttp
lods
loopne
pop
adc
push
pushf
clc
rol
mov
or
pop
or
je
dec
test
xor
xor
not
pusha
pusha
jno
inc
test
push
add
fs
popa
addr16
dec
adc
retf
jns
jno
ds
jl
sub
cli
inc
and
imul
and
push
pop
imul
fisttp
pop
mov
pushf
(bad)
loop
ins
fadd
dec
movs
sub
in
nop
sbb
lods
xor
cmps
cmp
fsub
adc
mov
sbb
inc
dec
adc
add
fsub
jns
mov
in
imul
ss
mov
shr
ret
xchg
push
add
sub
mov
cmp
inc
mov
fmul
(bad)
inc
int
rcl
les
inc
xor
push
or
pop
or
xor
popf
shr
mov
sub
cdq
stos
jmp
and
fistp
div
inc
or
fldpi
mov
out
jb
std
push
clc
cmp
nop
mov
in
inc
xor
ins
pop
jp
jns
mov
pusha
iret
cmp
push
(bad)
aam
xchg
cmp
addr16
mov
cmps
dec
and
push
pop
(bad)
popf
mov
mov
mov
pop
js
mov
loop
outs
lock
mov
mov
pop
mov
test
out
inc
shl
add
std
(bad)
inc
pop
and
dec
xchg
mov
pop
push
pop
xchg
pop
pop
mov
(bad)
adc
nop
mov
and
gs
ss
mov
mov
dec
inc
fnsave
aaa
or
inc
push
adc
loop
pop
xchg
mov
ret
dec
push
or
mov
sbb
ss
cmp
outs
jl
pusha
inc
cmp
dec
push
dec
mov
sub
jne
ins
pop
push
mov
jnp
(bad)
sbb
outs
fisttp
inc
dec
pop
pop
and
adc
(bad)
pusha
mov
dec
fld
and
stos
mov
add
lea
fadd
fucomp
retf
je
cmp
hlt
inc
cmp
js
ja
stc
jp
aas
inc
sti
or
xor
jecxz
call
mov
mov
mov
fldcw
cld
nop
pop
push
inc
inc
not
and
call
cmp
inc
fld
xlat
dec
fsub
mov
sbb
pop
js
jle
mov
sub
data16
retf
aam
icebp
or
inc
icebp
pop
stc
(bad)
xchg
jl
cli
fsubr
jge
(bad)
outs
(bad)
jns
jmp
test
out
mov
jns
rcl
stos
or
imul
cmp
pusha
fdiv
outs
sbb
xor
neg
icebp
iret
xlat
and
inc
or
jp
push
test
mov
inc
jmp
cld
fs
pop
js
std
jmp
add
jle
mov
jmp
pop
cmp
mov
dec
or
stos
adc
div
aam
mov
bndldx
adc
adc
mov
sbb
mov
cmps
inc
mov
sbb
sub
stc
test
(bad)
(bad)
cmp
ss
getsec
loopne
es
pop
or
aas
and
cmp
iret
push
dec
fisttp
inc
(bad)
and
push
pusha
pop
out
dec
pop
aad
lea
cwde
ret
add
jne
push
shr
and
mov
jnp
cld
lds
xor
mov
cmp
lock
adc
jo
stos
ins
cdq
ins
cmp
test
inc
mov
and
mov
rol
cmp
add
test
dec
jae
pop
shl
aas
stc
mov
ret
dec
sub
in
jnp
lea
or
retf
xlat
mov
loope
push
cmp
in
pop
int
(bad)
addr16
repz
out
jg
jo
cdq
pop
mov
(bad)
in
enter
xlat
xor
ror
outs
lods
xchg
ins
or
cmp
call
pop
movnti
cmps
xchg
xlat
sar
test
mov
loop
cmp
into
out
sbb
(bad)
sbb
dec
test
test
sub
stc
mov
fst
xor
adc
call
inc
jecxz
aas
sub
push
cmp
jl
outs
or
inc
data16
xchg
idiv
fistp
fmul
pop
cmp
sub
outs
cmp
jns
mov
cmp
xchg
mov
popf
mov
cmps
cmp
ds
out
rcl
push
mov
push
mov
inc
add
fadd
das
in
cli
cdq
cmp
cmps
mov
mov
loope
mov
mov
sub
dec
imul
out
inc
inc
cmp
push
push
sub
hlt
jo
(bad)
adc
cmp
mov
sub
cmc
cmp
bnd
in
or
nop
xchg
inc
mov
dec
push
push
xor
ja
js
das
mov
fxtract
inc
add
push
mov
cmp
or
icebp
out
stos
xchg
inc
je
fmul
push
or
inc
arpl
mov
out
pop
pop
jl
lea
mov
mov
xor
mov
or
mov
mov
fcom
rol
fnstcw
(bad)
movs
pop
cmp
(bad)
and
jmp
(bad)
dec
sbb
cwde
xchg
push
cmp
push
xchg
mov
icebp
mov
cmp
mov
iret
cmp
movs
sub
fs
les
inc
(bad)
jp
aam
nop
dec
pop
cmp
jmp
cmp
inc
add
sahf
push
pop
cmp
inc
out
icebp
xor
pop
push
enter
pop
addr16
fcom
aas
or
pop
push
inc
pushf
or
gs
les
or
dec
data16
cmp
mov
movs
loope
xor
mov
dec
call
ja
jl
and
cdq
ins
jge
cmp
movs
cmp
xchg
pop
call
jbe
cli
les
xlat
loope
dec
mov
pop
sub
and
mov
push
mov
mov
cmp
sub
loopne
sub
aaa
mov
cli
test
jns
nop
ins
pop
ret
rcl
fs
js
jge
cmp
dec
jmp
xchg
cmp
sbb
nop
jno
dec
clc
fwait
(bad)
xor
pusha
xor
push
fbld
mov
inc
stos
jmp
push
dec
xchg
(bad)
test
xchg
outs
xor
std
cld
add
mov
rcr
xor
inc
push
pop
jno
aam
test
push
mov
(bad)
adc
pop
test
xor
xor
mov
fsubr
stos
xlat
add
sub
cmp
inc
fsubr
cs
cmp
mov
mov
ret
ret
cmp
and
mov
nop
xlat
hlt
leave
jae
fdivr
push
cmp
cmp
jge
dec
imul
jl
movs
cmps
clc
fadd
imul
push
push
add
loopne
xchg
aas
idiv
jns
loop
sbb
add
mov
jbe
in
push
js
out
mov
sub
hlt
xchg
out
cmp
sub
aas
dec
push
ds
mov
lds
ja
fsubr
loopne
out
fcmovnbe
fadd
xlat
cmp
hlt
retf
pop
rcl
push
xchg
mov
imul
mov
jl
call
pop
mov
inc
sub
xchg
movs
dec
cmp
sahf
ret
rcl
push
stos
xor
div
inc
push
jb
aam
jno
lods
inc
push
xchg
xor
int3
pop
push
inc
push
mov
arpl
nop
sub
fbstp
popf
setg
cli
sbb
fld
jmp
(bad)
(bad)
fdivr
js
ins
cli
aas
cmp
out
inc
cmp
fstp
sub
or
and
fwait
pop
or
rol
ins
aas
lds
cmp
jmp
pop
fucom
cmp
retf
cmps
test
cmp
(bad)
jge
fidivr
pushaw
call
test
repz
push
xor
cwde
or
into
mov
cmp
repnz
cmovo
mov
rcl
loopne
scas
xchg
inc
push
dec
xchg
inc
es
pushf
add
push
clc
cmp
ds
and
adc
repz
sbb
(bad)
inc
leave
adc
mov
aas
popa
inc
hlt
aas
neg
retf
sub
jne
and
fnstcw
pushf
test
inc
sub
inc
loopne
jbe
(bad)
out
inc
and
ds
mov
sar
pop
stc
pop
inc
pushf
add
out
and
sti
pop
inc
push
mov
mov
cmp
mov
inc
arpl
ror
jg
outs
sub
and
inc
mov
fistp
cld
jo
aad
dec
inc
sbb
scas
dec
jge
lds
jmp
cmp
xchg
retf
xor
push
mov
sbb
(bad)
enter
cmp
add
push
push
test
aad
jl
and
xor
into
sub
(bad)
xor
dec
mov
push
jmp
jb
add
and
pop
pusha
jnp
push
sbb
cmp
adc
mov
(bad)
scas
mov
cmp
inc
les
cmp
aam
ja
mov
imul
repnz
jle
lods
sub
outs
sub
loopne
mov
call
add
cwde
ins
inc
leave
sbb
xlat
sub
fdiv
retf
test
and
je
cmp
jb
and
aaa
pop
adc
inc
xchg
xchg
dec
lods
inc
add
(bad)
mov
push
adc
pushf
inc
sbb
inc
add
loope
js
sbb
inc
adc
out
add
shl
cmp
ror
cmp
inc
xor
cmp
push
push
push
cmp
add
sub
inc
movs
cmp
inc
push
rol
dec
mov
sbb
push
add
jmp
jno
jg
fs
daa
pop
mov
mov
inc
inc
aaa
or
cmc
aad
movs
add
adc
jo
jl
stos
xor
dec
jae
dec
enter
and
pop
and
(bad)
in
aas
das
cmp
xor
push
cmp
ror
call
pop
adc
cmp
cmp
mov
cmp
int3
lea
jb
mov
adc
bound
inc
imul
mov
xor
(bad)
and
int3
fild
frstor
inc
movs
jno
fwait
aas
inc
mov
js
dec
adc
cwde
test
fistp
dec
jge
push
inc
cs
setns
int
ffree
push
cld
mov
or
mov
cmc
inc
cmp
sbb
sar
loopne
mov
or
out
inc
das
or
scas
ins
push
xchg
mov
divps
adc
or
or
iret
push
mov
retf
push
xchg
outs
sahf
and
jo
lds
jns
pop
xchg
leave
call
les
jl
inc
pop
rol
dec
sti
retf
cmps
jns
xchg
cmp
fidiv
pop
and
sbb
pop
mov
dec
das
xchg
jnp
jmp
sub
out
fdiv
fdivp
mov
sti
jae
cmp
push
loopne
inc
mov
push
test
shr
stos
add
jns
mov
jnp
dec
mov
es
add
(bad)
push
rcl
je
jle
(bad)
and
sbb
cmp
or
mov
or
xchg
cmp
cmp
sub
add
cs
addr16
ret
outs
xchg
inc
xor
test
jge
nop
or
loope
pop
jmp
and
pop
dec
jae
or
out
add
scas
movs
outs
pop
retf
jns
sbb
sub
mov
and
sbb
sbb
and
or
arpl
(bad)
xor
jge
sub
sbb
add
cmp
mov
enter
pusha
mov
jnp
out
inc
aas
scas
sbb
jecxz
cli
xor
dec
mov
or
mov
jbe
add
mov
push
xor
adc
lods
loope
out
outs
retf
stos
or
cmps
cmp
nop
push
mov
cmp
cmp
scas
jns
sbb
outs
push
js
pop
xor
ret
or
fs
adc
jmp
pop
imul
nop
jno
jne
daa
cmps
sti
push
dec
leave
retf
jmp
push
jbe
bound
xor
pusha
jno
and
xchg
pushf
sub
jg
je
shl
ds
test
mov
call
sub
mov
mov
ret
mov
sub
sbb
and
cwde
out
call
lds
mov
test
mov
pop
cs
fstp
cmp
mov
ss
or
cmp
ret
push
ja
aas
call
(bad)
cmp
xor
mov
and
dec
inc
add
jle
adc
and
js
cmp
mov
adc
ins
xor
daa
ins
test
loop
jl
jg
push
sub
arpl
cmp
test
mov
cmp
outs
inc
je
adc
retf
aas
js
(bad)
xor
shl
ja
(bad)
and
pop
test
pop
js
jg
jo
jmp
clc
cmp
jnp
jmp
mov
adc
xchg
jle
ret
mov
cmp
lods
cmp
pop
cli
sbb
js
xchg
push
and
jecxz
pop
jmp
inc
or
or
shr
jmp
out
sti
jno
sbb
dec
mov
and
pop
out
push
ds
cmp
aam
mov
jl
stc
ror
mov
xchg
ret
sub
jae
or
test
scas
mov
push
sbb
sub
test
dec
xlat
cli
push
out
sti
pop
into
mul
fidivr
inc
jns
into
push
dec
cmp
lea
aaa
push
xlat
dec
cdq
sbb
in
mov
push
mov
add
fscale
popa
je
xor
mov
push
mov
mov
js
push
pushf
enter
xor
out
jmp
jns
popf
cld
mov
icebp
js
mov
in
pusha
xchg
mov
jnp
retf
loop
adc
fdivr
or
mov
pop
cmp
xor
mov
push
mov
adc
jne
dec
dec
jmp
mov
xor
inc
add
mov
leave
adc
cmp
jns
dec
sub
mov
jno
sbb
sub
bswap
dec
sub
mov
mov
(bad)
and
xchg
fisubr
ins
or
jg
scas
cmp
or
xor
shl
icebp
adc
fmul
sti
inc
ds
jno
scas
call
add
movs
mov
push
cwde
shr
jb
cmps
scas
jle
pop
mov
cmp
sbb
js
out
xchg
mul
lods
mov
stos
ret
jmp
mov
loopne
push
aaa
repz
xor
pusha
out
int
xor
jns
jbe
xchg
cmp
cmp
inc
cmp
js
add
cwde
loopne
xchg
jne
iret
xchg
popf
stc
mov
adc
jle
cmp
xor
outs
push
add
inc
adc
mov
or
gs
jle
fistp
ja
imul
arpl
dec
xor
(bad)
sbb
cmp
mov
dec
jno
scas
test
or
mov
push
adc
jns
adc
sbb
scas
sbb
lods
imul
jns
rcr
cld
fdivr
mov
std
ss
push
stos
cmps
sbb
xor
retf
ja
dec
call
xchg
lods
jl
lds
adc
jno
jns
cmp
test
mov
xchg
movs
or
sub
inc
dec
sahf
push
ss
mov
xor
mov
fsub
mov
inc
jg
mov
not
and
and
scas
add
xor
mov
cmp
daa
mov
pop
or
jns
adc
xchg
in
xor
cmp
xchg
inc
imul
or
inc
add
add
or
dec
in
mov
mov
sbb
inc
or
lock
fdiv
hlt
test
dec
mov
pusha
push
sub
stc
push
(bad)
loope
mov
cmc
mov
inc
icebp
adc
leave
popf
inc
inc
pop
int3
daa
sbb
sub
jmp
or
push
push
cwde
scas
push
cmp
xchg
sub
cmp
repz
clc
in
mov
shl
ds
cli
pushw
mov
mov
stc
cmps
cdq
fild
sub
xchg
or
js
in
cld
out
mov
mov
inc
push
fild
mov
aas
xor
outs
mov
fcomp
scas
ds
and
adc
and
mov
rol
rcr
inc
fstp
fsubr
push
adc
push
fidiv
ds
jno
outs
jl
adc
sbb
sbb
cld
iret
lahf
pop
fistp
mov
cmp
xchg
xchg
and
pusha
out
popa
outs
mov
ja
mov
jmp
int
loopne
ffree
std
(bad)
adc
(bad)
inc
push
imul
xchg
push
inc
pop
adc
add
shr
mov
fs
sub
mov
pop
mov
mov
ds
dec
or
setne
lea
jb
std
fucomp
pop
mov
sbb
adc
mov
int
dec
inc
mov
xor
or
or
inc
adc
es
mov
xchg
div
add
test
stc
pop
jbe
mov
movs
xchg
leave
or
iret
xlat
inc
mov
mov
lahf
inc
into
out
bound
adc
push
in
mov
cld
ins
inc
mov
mov
mov
or
adc
out
dec
jg
in
in
loopne
cwde
cmp
sbb
push
mov
mov
bswap
cmp
jle
push
mov
into
fwait
mov
jl
cld
xchg
push
inc
dec
add
jecxz
sub
push
inc
jno
(bad)
lds
into
adc
sbb
das
xor
aas
mov
repz
adc
dec
fisttp
movs
and
push
mov
ds
inc
outs
sub
sbb
xchg
sub
scas
pushf
cmp
xor
ret
loopne
cwde
push
inc
fxch
pop
ret
pop
stos
dec
jnp
dec
mov
fdivr
jp
in
xchg
pop
retf
rcr
lds
(bad)
hlt
sbb
xor
das
sub
mov
or
push
bound
(bad)
push
cmp
push
test
out
fs
js
xchg
mov
jb
dec
pop
inc
inc
scas
stc
cmp
gs
in
xor
inc
inc
xor
lods
push
aaa
mov
data16
mov
lds
cmp
dec
xor
stos
dec
cmp
shl
aam
or
jne
mov
dec
sub
jg
psadbw
cmp
cmp
mov
xor
sub
xor
jbe
out
xchg
dec
mov
ror
pop
add
rcl
(bad)
pop
xchg
mov
into
xchg
movs
dec
je
sbb
retf
inc
pop
aam
pop
pusha
and
pop
sbb
dec
daa
jp
popa
mov
aaa
and
inc
push
xchg
and
cmp
sbb
cmp
inc
cli
loopne
fcomp
and
mov
pop
mov
inc
push
fwait
cdq
and
jmp
sahf
cmp
pop
sub
ins
fdivr
add
cmp
mov
ss
mov
mov
inc
pminsw
push
push
xchg
or
push
xchg
jbe
mov
fld
dec
xlat
mov
mov
mov
test
lahf
jno
mov
mov
xchg
mov
jno
push
pop
fidivr
adc
sub
loopne
add
cs
mov
pop
xchg
outs
jbe
fidiv
pop
jno
retf
mov
cmp
jnp
aad
cmp
test
adc
push
push
nop
retf
push
mov
mov
mov
cmp
leave
ja
mov
mov
lahf
push
add
cmp
jno
adc
adc
mov
jb
loope
es
cmp
inc
pop
mov
push
sar
mov
push
sub
jnp
in
outs
mov
jns
lea
int
or
iret
je
add
inc
mov
nop
push
dec
fs
sub
cmp
add
das
dec
cdq
or
movs
fwait
cmp
xchg
xchg
sbb
inc
mov
(bad)
cmp
sti
inc
(bad)
jne
mov
js
test
and
fbld
iret
cmp
sub
cmp
outs
dec
jmp
sahf
inc
push
fcmovne
mov
push
mov
or
es
inc
push
adc
rol
inc
sbb
cmp
iret
push
adc
inc
ss
xchg
js
jmp
sbb
add
retf
and
ret
jno
push
mov
sar
jl
das
jmp
jp
mov
je
mov
mov
dec
jb
push
cmp
test
jle
cmp
inc
call
loopne
jb
mov
enter
dec
sti
sub
je
dec
fld
pop
sbb
add
(bad)
xor
cmps
lods
xchg
pop
sub
xchg
ret
mov
test
cli
cmp
ins
in
data16
cmp
pop
push
(bad)
fwait
mov
mov
mov
jnp
xor
adc
fistp
or
sti
cmp
dec
mov
inc
and
pop
mov
cmp
rcl
jns
push
jp
xchg
inc
or
test
fild
outs
xor
and
mov
pop
pop
ret
sub
inc
ror
cmp
and
inc
fisttp
push
imul
icebp
(bad)
sar
adc
mov
or
inc
push
jns
popa
dec
or
mov
cmp
dec
and
xchg
push
inc
in
inc
fsubr
dec
sub
inc
test
popa
mov
mov
scas
xor
cmp
dec
jle
and
dec
adc
sub
pop
daa
in
cmp
ja
cmp
inc
jne
fldcw
jns
popa
inc
push
enter
iret
or
jnp
fsubr
xor
into
sbb
int
cld
call
or
rcl
push
inc
icebp
(bad)
hlt
adc
inc
mov
mov
sub
inc
jb
add
mov
xor
lods
cmp
test
sbb
bswap
sbb
add
mov
and
mov
in
jae
push
ins
sti
out
out
rcl
jne
or
and
inc
fistp
lock
popf
pop
push
xchg
push
xchg
cmp
idiv
out
repnz
mov
outs
repz
inc
test
sti
dec
fisubr
mov
mov
int3
dec
inc
ret
jae
or
mov
jmp
push
fdiv
(bad)
cmp
mov
mov
(bad)
in
jl
adc
inc
cmp
jno
lods
mov
jg
arpl
int
sar
adc
clc
jecxz
inc
mov
dec
js
xchg
add
rol
mov
std
inc
in
xor
push
cdq
repnz
sub
adc
out
inc
mov
sub
jge
inc
stc
ja
and
fs
xchg
inc
cmp
(bad)
(bad)
(bad)
push
imul
jmp
lock
psllw
fiadd
inc
mov
aaa
mov
dec
mov
sbb
pop
inc
in
and
dec
sub
(bad)
xlat
sbb
xchg
lea
in
in
aad
ja
int
mov
addr16
cmp
jl
inc
ins
mov
push
sbb
out
push
fisub
push
into
and
inc
mov
jo
cmp
(bad)
ret
jnp
cwde
sbb
cli
inc
int
mov
stc
sbb
mov
cmovo
das
push
add
xor
int3
pop
shr
inc
rcr
scas
dec
(bad)
pushf
inc
jp
mov
or
ror
xchg
mov
push
cmp
add
push
jne
inc
sbb
call
mov
ins
mov
inc
pusha
jno
(bad)
std
les
xchg
cdq
ja
rcr
out
sub
add
dec
outs
pop
mov
ins
inc
ja
je
inc
jno
jnp
js
jne
cmc
mov
rcr
push
sbb
dec
fcomp
(bad)
outs
mov
clc
fdiv
mov
mov
cmp
sbb
iret
inc
stc
jge
popf
push
std
cmp
loope
cmp
push
je
mov
pop
dec
sub
movs
enter
mov
jns
add
jnp
fnstsw
and
dec
cmp
dec
jp
je
into
(bad)
fdiv
adc
push
push
aam
mov
ins
jmp
scas
lahf
and
xor
cmp
aam
push
pusha
mov
out
sahf
(bad)
aam
retf
repz
adc
sub
xchg
sbb
push
xchg
(bad)
inc
fidivr
clc
xchg
jmp
jmp
cmp
jmp
sbb
dec
sub
stc
or
xor
push
jno
and
ret
loope
adc
fld
sbb
das
xchg
add
pop
sahf
sbb
in
sub
jg
mov
stos
cmps
xor
inc
shr
icebp
ja
cmp
int
inc
and
(bad)
fs
cmp
into
in
aas
inc
mov
jne
je
mov
sbb
jmp
lods
jns
mov
mov
mov
jecxz
in
aad
cmp
ror
fldenv
adc
sub
call
xor
icebp
mov
inc
mov
ja
inc
push
add
bnd
sahf
in
or
pop
fisttp
jge
and
pop
adc
fdiv
mov
push
call
cmps
sbb
daa
xor
add
dec
addr16
jb
in
daa
xor
inc
dec
mov
and
test
fs
sahf
mov
dec
cld
pop
xchg
jmp
sub
jns
pop
popf
jae
stos
inc
inc
inc
mov
jae
mov
jp
sbb
lahf
jno
jns
sbb
lods
jne
jne
dec
sub
pop
je
push
out
mov
aaa
sbb
es
pop
push
jns
ins
jl
jnp
pop
xor
sti
and
stos
inc
xchg
(bad)
in
sub
mov
push
add
or
cmp
mov
mov
mov
movs
aad
loopne
call
sub
std
xor
adc
inc
nop
int3
ret
cld
aas
or
and
mov
ret
cmp
cmps
xor
xor
xchg
inc
jb
stos
sbb
push
push
jne
and
or
scas
cmp
aaa
cmc
dec
(bad)
mov
adc
mov
cmp
add
jle
xchg
push
or
mov
and
rcl
sbb
iret
rol
xchg
ret
test
xchg
sbb
push
cmp
enter
cmp
jae
mov
aam
loopne
pop
leave
add
movs
mov
xor
lods
dec
pop
cmp
cmp
mov
cld
jno
call
mov
sbb
pop
loopne
dec
push
ss
cmp
adc
jl
popf
inc
dec
jae
jecxz
inc
arpl
cmp
xchg
push
push
ds
cdq
scas
mov
inc
(bad)
dec
mul
sub
fidivr
movs
scas
call
gs
mov
jle
cwde
inc
push
out
xchg
imul
or
inc
cmp
sar
sbb
pop
xchg
ss
xor
iret
inc
dec
xchg
mov
mov
xor
xor
addr16
push
mov
mov
shr
mov
ss
add
cmp
rol
ins
pop
outs
enter
xor
inc
out
inc
popa
dec
ds
push
mov
xchg
ror
in
pusha
mov
dec
adc
mov
inc
cs
mov
ins
inc
icebp
adc
fs
fcom
lock
dec
cmc
mov
sub
inc
cmp
ret
ins
mov
inc
sbb
fadd
cmp
xor
xchg
adc
stos
cdq
inc
inc
jae
or
cmp
mov
out
inc
das
jl
add
mov
push
pop
ins
jle
add
rcr
adc
loope
inc
mov
repnz
mov
out
sub
sbb
xchg
push
xchg
lods
xchg
cmp
xchg
icebp
cmc
popa
sbb
lea
daa
rcl
clc
mov
ret
in
xor
dec
sbb
mov
or
out
sbb
or
cmp
mov
dec
mov
mov
jmp
fs
fld
mov
xor
sub
inc
inc
jae
aad
pop
les
ret
jmp
pop
(bad)
push
lds
(bad)
jg
jmp
or
es
sbb
into
push
or
test
mov
stos
jp
jge
aaa
jo
cmps
push
js
fs
xor
int3
cmp
cli
movs
aas
rcl
mov
test
add
push
lods
pop
jl
inc
inc
cmp
scas
je
pop
mov
fs
fdiv
jge
loop
sahf
push
aas
cmp
cmp
mov
out
test
xor
aaa
inc
jns
inc
je
clc
cmp
add
or
hlt
shl
sub
mov
and
jp
jl
test
push
pop
jns
jb
mov
rol
dec
adc
sub
xor
aam
jne
mov
sbb
movs
js
sbb
addr16
stos
jmp
(bad)
cmp
xchg
test
cld
sub
scas
cmp
inc
stos
pop
fwait
push
or
jns
loop
out
and
fsubr
dec
and
jmp
fbstp
mov
add
pop
iret
xor
movs
add
out
in
jns
pushf
ss
shl
mov
pushf
mov
jmp
in
add
xchg
dec
sub
mov
and
jg
mov
sbb
aas
daa
cmp
mov
stc
(bad)
mov
loop
xchg
mov
and
out
stos
movs
fbld
arpl
hlt
xorps
adc
mov
jmp
dec
sub
ja
inc
push
dec
adc
pop
or
lock
pop
sahf
xchg
fisubr
push
(bad)
cmps
movs
ror
jns
scas
sub
daa
adc
js
jle
pop
mov
bound
sbb
jle
adc
xchg
daa
les
scas
push
jne
mov
fs
movs
push
xor
fiadd
mov
sbb
push
aam
hlt
xacquire
mov
mov
mov
dec
jp
mov
stc
inc
cmp
aam
pop
outs
(bad)
test
sbb
pop
ds
xlat
push
test
pop
ss
cld
out
jmp
(bad)
imul
mov
or
scas
ss
mov
sti
cdq
out
jno
jg
cld
jle
or
pushf
dec
inc
xchg
or
push
pop
fsubr
icebp
out
xchg
ficomp
gs
cdq
lea
pop
test
xor
pop
dec
fbstp
jmp
stos
jno
out
call
sbb
dec
mov
lods
mov
pop
cmp
jg
sub
pushf
cld
push
aam
jbe
jno
and
in
inc
dec
cmp
sbb
sbb
xchg
push
call
mov
dec
mov
push
leave
test
push
sub
mov
cmp
mov
cmp
lds
push
pop
jno
xor
fstp
pop
pop
jge
daa
add
inc
mov
lock
std
and
mov
inc
push
aam
mov
push
push
enter
mov
call
sub
push
jns
dec
jmp
je
and
mov
enter
ds
adc
and
cmp
pushf
xor
sbb
rcr
mov
mov
js
cdq
jns
ret
retf
or
test
mov
cmps
push
popf
test
(bad)
cmp
xchg
jno
jae
dec
pop
adc
and
nop
clc
xchg
push
jle
sbb
call
out
jns
xchg
iret
push
pop
(bad)
fsub
pop
cmp
mov
add
and
bound
inc
mov
dec
sar
jmp
cmp
or
dec
mov
sub
dec
xchg
inc
pop
ins
jb
test
icebp
xor
shr
stos
das
push
(bad)
jl
fiadd
sub
cmp
in
mov
mov
mov
mov
sub
cmp
sbb
push
fist
jle
inc
pushf
pop
dec
aad
add
push
and
lods
or
sub
cld
xor
dec
mov
retf
pop
sub
iret
fmul
js
jl
and
or
sar
js
jns
sbb
jmp
inc
jmp
rol
aam
pop
xor
xchg
mov
inc
fcomp
add
dec
mov
ret
sub
int
mov
dec
leave
imul
pop
fbstp
pop
mov
cmps
cld
pop
sbb
xchg
fsubr
mov
ds
jge
inc
pop
mov
sahf
loope
(bad)
popa
dec
push
jno
adc
cmp
inc
mov
call
(bad)
or
dec
cdq
mov
mov
and
and
int
out
sbb
mov
sbb
push
mov
je
cmp
jl
pop
js
sbb
jg
and
ret
jle
(bad)
(bad)
fsubr
jns
xchg
inc
jne
jmp
inc
(bad)
mov
adc
jae
imul
jle
jl
and
jo
bound
jmp
pop
ror
push
sub
inc
aaa
mov
mov
mov
xor
pop
cmp
cmp
xor
cmps
ret
sub
pop
push
inc
or
xchg
cmps
and
xor
cmp
arpl
lock
pop
sub
stc
test
pop
and
inc
or
push
mov
lods
mov
and
add
inc
js
je
ret
js
mov
inc
sbb
xchg
test
cmp
inc
test
fiadd
or
out
push
mov
pop
popa
xchg
or
jmp
push
inc
jle
sub
add
and
fdivr
and
js
fidiv
inc
sar
mov
sub
dec
(bad)
or
rcr
and
jae
fsub
pop
sar
movs
or
dec
inc
in
aam
dec
int3
push
fwait
jle
mov
call
mov
enter
aas
nop
out
movs
ror
jmp
mov
ror
ror
lods
xchg
xor
dec
not
scas
cmp
pop
and
inc
ja
inc
push
adc
in
retf
sub
xor
fs
pop
sub
cmp
inc
call
lods
std
and
loopne
dec
fmulp
add
fcom
sub
div
pop
cmp
mov
ins
jnp
sub
xchg
xchg
add
cwde
imul
js
popa
pop
leave
inc
call
sbb
inc
xor
sbb
cmp
cwde
mov
jo
adc
daa
ror
(bad)
add
cmp
pushf
in
dec
ret
xor
and
mov
mov
mov
sub
push
push
xor
xor
inc
mov
hlt
mov
push
scas
lods
xchg
rol
retf
jge
mov
push
jns
int
fadd
push
fimul
or
arpl
jecxz
dec
xchg
nop
fimul
loop
lds
pop
inc
test
mov
std
cmp
pop
leave
not
dec
call
adc
inc
cmps
inc
inc
dec
into
xchg
mov
mov
neg
(bad)
ficomp
(bad)
int
jmp
xor
enter
jne
cld
mov
push
xchg
mov
add
xchg
dec
aas
nop
push
(bad)
cdq
inc
cmp
sub
mov
adc
inc
xor
sti
scas
inc
movs
xchg
imul
sbb
adc
inc
cs
inc
cmp
sbb
scas
mov
mov
mov
push
push
pop
cmp
pop
data16
inc
sub
sbb
or
xor
(bad)
and
jmp
push
jne
jl
imul
dec
and
sub
push
jno
add
xchg
sub
out
mov
and
mov
shr
add
inc
pop
sahf
(bad)
(bad)
retf
cmp
adc
or
cli
mov
mov
inc
mov
sub
out
pusha
inc
add
push
sub
mov
xor
push
inc
(bad)
je
cmc
test
outs
sub
sbb
les
mov
cmp
cdq
scas
pop
jge
inc
rol
push
shl
mov
aas
std
inc
into
sub
xor
mov
fs
sub
xor
push
cmp
dec
fiadd
aad
rcl
inc
out
fild
sbb
scas
rcr
dec
and
lahf
mov
mov
cmp
cmps
sub
cmp
outs
aas
loopne
adc
mov
cmp
sbb
(bad)
fdivr
mov
xor
pop
add
jno
mov
push
adc
cli
scas
cmps
pop
cmp
cmp
jb
xchg
or
dec
js
popa
sahf
sub
mov
js
jns
inc
mov
xor
sbb
push
sahf
leave
inc
sub
or
ss
pop
ds
es
pushf
std
in
sbb
adc
cmp
adc
shl
adc
fmul
fmul
push
mov
inc
test
outs
push
jge
cmps
addr16
mov
pushf
sahf
jge
int
adc
fdiv
inc
repnz
sub
lahf
jns
adc
outs
in
jo
div
jge
push
pop
ficom
scas
enter
dec
sub
add
add
scas
int
inc
in
xor
mov
rol
or
jno
fstp
add
fwait
sysenter
sub
sti
jmp
jnp
scas
pusha
lds
xor
mov
push
xlat
xor
fadd
and
jecxz
fwait
cld
mov
sub
leave
mov
jl
mov
ds
sub
jl
jle
xchg
or
or
mov
je
and
mov
cmp
sbb
cdq
jl
jno
in
cmp
rol
sub
(bad)
(bad)
cdq
cmp
ds
mov
cwde
retf
test
xor
jns
mov
cmps
xchg
icebp
inc
jg
jg
xchg
ret
pop
fisub
cmps
les
sub
xchg
mov
loopne
inc
jns
leave
mov
(bad)
mov
ds
fdivr
add
or
xchg
cs
ror
dec
sub
fcmovnbe
inc
push
lahf
leave
test
jb
dec
ret
sbb
dec
es
mov
and
cmp
cmp
stc
xchg
cmp
pop
jno
cli
or
or
aas
and
dec
sub
jns
nop
pop
test
push
pop
repz
mov
mov
(bad)
lahf
cmp
jo
lods
inc
add
out
sahf
pusha
imul
shr
nop
dec
frstor
retf
nop
jmp
cmp
rol
js
inc
pop
xchg
mov
das
inc
psrld
pop
out
jb
or
les
mov
inc
cmps
ror
xchg
or
cmp
stc
pop
imul
dec
pop
hlt
inc
sbb
retf
inc
outs
pusha
jle
xchg
mov
adc
xlat
out
pushf
pop
in
nop
inc
cdq
bound
or
xchg
stos
inc
test
lahf
lods
mov
imul
and
cmp
add
push
aas
or
jge
push
retf
sub
ins
mov
sbb
inc
dec
(bad)
std
mov
pop
scas
outs
cld
cli
fcomip
pop
inc
jnp
(bad)
jp
inc
adc
pop
mov
ret
inc
pop
fnstsw
push
std
fucompp
inc
cdq
fidivr
loop
(bad)
mov
add
inc
iret
inc
pop
repnz
je
vmovdqa
in
leave
cld
or
mov
loopne
das
push
mov
cdq
inc
arpl
inc
dec
inc
push
mov
retf
xor
cmp
sub
mov
adc
inc
bound
sahf
xchg
adc
cmp
dec
jmp
xchg
test
push
sub
ins
lods
ds
push
cmp
aaa
inc
jno
sbb
fadd
jne
cwde
push
or
into
inc
xchg
hlt
repnz
je
cmps
sbb
and
adc
mov
fbstp
scas
mov
cdq
or
fwait
jns
repz
push
push
mov
aaa
or
not
inc
cs
in
jmp
adc
pop
mov
or
add
ret
inc
stos
cmp
mov
dec
xchg
mov
sbb
ret
mov
rcr
sti
in
stc
or
mov
not
dec
sbb
sbb
nop
sbb
inc
ret
retf
mov
and
mov
test
dec
aaa
push
jbe
adc
cwde
in
dec
push
sub
popf
lods
jg
out
mov
pop
xchg
or
lahf
xor
fld
cmp
movs
mov
pop
mov
fsub
popf
daa
cmp
in
shr
je
aas
gs
jo
jbe
fsubr
ds
push
xchg
inc
fst
push
xchg
jo
inc
or
inc
push
cmp
retf
inc
jge
arpl
or
cmps
mov
pushf
lods
dec
cs
dec
adc
nop
cmp
std
sub
clc
and
test
out
pop
and
inc
cmp
outs
loop
iret
pop
jne
cmp
and
rcl
cld
inc
out
(bad)
sub
es
lods
xor
mov
xor
cmp
dec
dec
clc
mov
mov
add
push
cwde
lods
mov
sub
sub
repz
xor
adc
(bad)
jno
into
out
loope
sub
in
ficomp
enter
mov
pop
movs
(bad)
jmp
or
push
push
or
mov
cmp
repz
fiadd
cmp
xor
cmp
into
xor
lahf
or
jmp
nop
cmp
jns
scas
stc
mov
arpl
fs
xor
sub
jg
stc
scas
pop
dec
pop
xchg
mov
cmp
jns
scas
jmpw
xor
mov
or
aad
xor
inc
xor
cmp
aad
fistp
dec
popf
jge
pop
std
dec
push
adc
cmp
xchg
pop
push
jp
or
dec
push
lea
stos
sbb
fstp
js
movs
(bad)
loop
xor
push
popf
mov
sti
cmp
pop
adc
xchg
retf
mov
repz
jno
outs
jl
dec
out
sub
jbe
xor
jmp
pop
mov
test
inc
xchg
test
push
outs
cmp
(bad)
fild
data16
ds
and
loopne
popf
mov
sbb
pop
sbb
test
fucom
(bad)
icebp
int3
movs
adc
mov
add
movs
xchg
repnz
cld
sti
mov
stos
fstp
pop
push
nop
lahf
xchg
(bad)
in
cmc
push
cdq
les
shl
inc
add
mov
ss
popf
pop
xchg
or
out
push
data16
mov
stos
push
or
dec
adc
and
cmps
inc
jns
js
xor
dec
mov
js
cmp
inc
xchg
cmc
sbb
adc
sub
shr
xchg
push
cmp
push
dec
ficomp
mov
mov
cmp
mov
jmp
mov
mov
ret
sbb
loop
inc
retf
rol
into
stos
imul
ins
jnp
lock
mov
add
dec
jp
fld
fcom
in
lahf
inc
inc
repz
jbe
ror
aam
dec
push
add
mov
cmp
add
cmp
(bad)
jecxz
sub
ficom
fsub
fucom
pushf
stc
ds
inc
(bad)
dec
sub
pop
jne
dec
add
pop
mov
jmp
in
cdq
jo
outs
xchg
fst
inc
or
lock
rol
je
jno
inc
cmp
cli
clc
jns
mov
jg
out
sbb
stos
int
jmp
jg
pushf
call
xchg
or
lahf
mov
out
mov
rcr
dec
je
cmp
mov
xchg
mov
mov
cdq
fimul
jns
bnd
ret
push
pop
jge
aam
imul
(bad)
shr
and
jl
jle
ja
js
jno
push
outs
and
mov
sub
sub
xchg
xor
test
sub
leave
and
inc
xor
mov
sub
std
adc
int
pop
sbb
cmp
sub
mov
and
inc
loope
adc
into
in
les
push
test
cmp
repz
adc
icebp
add
push
ret
lods
sub
mov
cdq
clc
cmp
or
fbld
jl
in
(bad)
std
or
retf
cmps
les
mov
movs
pop
add
das
(bad)
fistp
je
fcmove
jmp
fucomi
popf
dec
lods
fwait
sbb
in
and
jle
aas
outs
add
sahf
jno
call
pop
xchg
sub
pop
je
ss
adc
xchg
add
sub
mov
pusha
sbb
repz
pop
jns
sti
sbb
cdq
lods
push
sbb
dec
push
scas
scas
xchg
test
cmp
lods
sbb
test
push
ficom
shr
je
jg
inc
ret
adc
mov
jno
mov
stc
addr16
jge
xchg
pusha
inc
pop
push
xor
mov
data16
lahf
dec
sahf
mov
adc
push
push
js
ret
js
add
mov
push
cdq
gs
loopne
dec
jge
inc
push
mov
ret
ja
shl
cld
jbe
jae
popf
(bad)
jns
xchg
outs
pop
cli
nop
fs
add
mov
icebp
xchg
ds
stc
xchg
jmp
pop
xchg
mov
or
bound
sub
lods
push
pusha
pop
mov
inc
out
push
or
sbb
dec
cmp
in
adc
sbb
inc
mov
stos
xchg
stos
call
fcmove
or
add
js
inc
mov
dec
fdivr
cmc
push
push
sub
cmp
sbb
inc
push
outs
and
gs
cmp
imul
xor
jge
adc
adc
xor
mov
cmps
(bad)
push
mov
mov
mov
(bad)
and
xor
icebp
push
pop
dec
xor
sub
jns
mov
(bad)
pop
mov
or
sahf
sbb
mov
sar
pop
cmc
dec
call
jo
pusha
xchg
mov
scas
les
aam
repnz
inc
dec
outs
jge
sub
fs
pop
inc
inc
cmp
paddsw
xchg
xor
xchg
imul
ins
fs
into
scas
adc
and
pop
mov
xchg
push
cld
ds
mov
and
(bad)
push
daa
test
repnz
icebp
(bad)
fs
push
sub
inc
enter
jmp
push
jg
sar
jae
inc
scas
fs
out
mov
nop
or
jmp
imul
hlt
call
jg
scas
xor
repnz
(bad)
icebp
lods
add
fs
or
cld
jno
call
mov
jns
dec
dec
xor
lods
fucomi
push
sbb
mov
adc
mov
xchg
push
mov
and
shl
mov
test
sub
lods
popf
adc
inc
stc
out
jbe
icebp
ss
pop
cmp
les
jle
and
ja
cmp
aad
in
ja
dec
test
jle
ds
ss
icebp
stc
stc
idiv
in
test
mov
or
xor
sub
outs
inc
or
add
sub
cmp
les
push
jbe
sub
cwde
xlat
push
leave
and
or
scas
enter
gs
adc
mov
out
ret
jns
jmp
mov
push
pop
dec
xchg
jg
pop
xor
add
in
js
cli
cmp
icebp
xlat
nop
jo
sbb
xor
inc
jns
mov
adc
mov
xor
sbb
stos
jnp
push
jle
add
fldcw
hlt
xchg
push
sub
cmp
sbb
dec
les
scas
cs
scas
jno
jmp
lahf
sar
icebp
cld
pusha
lahf
ss
dec
push
pop
inc
jmp
mov
pushf
push
add
mov
mov
pop
je
arpl
cmp
inc
imul
mov
lahf
jl
ins
mov
sub
dec
mov
(bad)
bound
pushf
and
ins
dec
test
jecxz
movs
ds
mov
xlat
add
nop
push
jno
push
sar
pusha
das
retf
and
bound
and
ins
xchg
mov
xchg
dec
pop
repz
dec
jbe
and
outs
cmps
mov
dec
inc
dec
sbb
pop
shl
dec
icebp
jb
mov
dec
js
fcmove
out
or
pop
or
mov
mov
or
fld
cmp
xchg
test
mov
push
xor
cwde
ins
add
sub
pop
cli
ss
lock
lock
das
pop
sbb
jnp
ss
dec
fs
inc
aas
pop
jns
mov
mov
arpl
or
lahf
jo
in
clc
pusha
sti
cmp
cmp
shl
add
push
(bad)
cdq
adc
cmp
mov
xchg
mov
outs
movs
mov
pop
(bad)
ss
daa
mov
cld
cmp
ins
jns
bound
or
repnz
sub
loope
inc
fst
stc
xchg
leave
or
fild
aad
xchg
aas
mov
loop
call
(bad)
(bad)
mov
js
mov
or
jae
mov
or
xor
fld
sti
leave
cwde
xchg
push
add
es
lods
(bad)
jae
mov
stos
dec
sti
in
adc
mov
icebp
push
adc
xchg
lods
fidivr
in
adc
outs
js
mov
cmps
es
and
xor
or
inc
or
pusha
xchg
in
and
inc
xor
out
xor
outs
jmp
dec
jno
popf
sub
mov
or
ror
fs
pusha
dec
mov
pop
imul
dec
xor
xor
cmp
mov
adc
cmp
std
ins
or
pusha
mov
pop
inc
or
ss
inc
or
sub
mov
jns
mov
cli
sbb
pop
hlt
data16
and
jns
dec
test
jmp
arpl
pop
iret
jl
ins
scas
out
pop
(bad)
mov
sub
adc
das
adc
push
xchg
mov
out
mov
mov
mov
cmps
mov
adc
xor
cmp
and
cmp
or
pushf
stos
std
sbb
adc
cld
sub
pop
and
mov
fwait
pop
add
inc
loop
pop
jp
mov
cli
inc
jmp
push
jb
pop
dec
je
popa
dec
push
retf
dec
push
mov
ds
out
sbb
sub
repz
sti
inc
stc
inc
sahf
xor
xor
mov
mov
in
fiadd
pop
loop
std
xchg
inc
xor
nop
mov
inc
enter
loopne
pop
addr16
inc
pusha
mov
inc
fwait
xchg
mov
inc
sbb
mov
and
or
xchg
mov
call
sub
xchg
leave
xchg
inc
nop
cmp
push
aaa
repz
sbb
sbb
inc
lds
les
test
xor
xchg
fsubp
inc
(bad)
mov
inc
sub
or
xor
inc
loope
ficomp
mov
mov
stc
and
cmp
inc
adc
sbb
xchg
mov
test
cmc
aad
movs
push
mov
mov
nop
adc
test
rcl
in
jp
xchg
ins
inc
fstp
and
inc
add
dec
push
ret
inc
inc
mov
jae
xor
mov
(bad)
push
imul
dec
inc
(bad)
shl
data16
mov
sbb
mov
xchg
or
sbb
and
cmp
adc
cmp
sub
dec
jmp
in
push
xchg
cmps
push
mov
(bad)
cdq
pop
inc
jb
push
ins
scas
pshufw
dec
inc
jmp
pusha
iret
or
jmp
retf
scas
mov
sti
inc
int
inc
push
dec
cdq
mov
sub
rol
pop
lock
inc
in
pop
hlt
jno
scas
pop
(bad)
push
fld
inc
imul
push
mov
xor
or
jmp
jne
jbe
add
loope
sbb
or
add
xlat
mov
push
inc
cli
push
sbb
out
inc
lock
lock
inc
ins
adc
cmp
add
inc
out
lea
inc
fwait
aaa
or
leave
aad
inc
mov
out
(bad)
loopne
sub
(bad)
fsubrp
test
mov
mov
jp
mov
push
mov
mov
jle
es
test
out
mov
stos
sbb
add
or
out
dec
sub
push
jno
not
sub
xchg
stc
aam
test
add
jp
sub
loopne
rcl
test
jmp
cs
jns
inc
stos
xchg
es
inc
hlt
call
jp
ret
xor
pop
and
add
inc
and
cmp
bound
inc
test
jmp
inc
outs
int
test
clc
sub
push
or
mov
in
in
sub
jo
lds
les
out
dec
fisubr
leave
pop
cld
xchg
sub
push
and
cmp
sbb
cmp
cs
movs
xchg
sar
fldcw
test
inc
adc
popa
sti
push
imul
repnz
mov
jns
pop
out
inc
jno
xchg
rol
adc
stos
push
push
fsubr
mov
mov
stos
xor
stos
mov
out
and
xchg
jge
push
popa
div
cmp
cmp
jns
adc
adc
rol
je
ds
fistp
test
cmp
stos
div
aad
stc
cmp
scas
mov
push
frstor
dec
lods
add
mov
pop
fiadd
dec
jnp
pop
or
addr16
jg
retf
adc
sbb
dec
retf
rcl
iret
cmp
inc
mov
jecxz
je
movs
cmp
lods
inc
cs
xor
sub
mov
sbb
add
jno
nop
stc
push
rcr
call
jno
or
xlat
pusha
jb
(bad)
jns
stos
xor
push
xor
mov
loop
sub
jns
cmp
fcom
jb
jb
pusha
pop
mov
and
inc
or
ror
xor
add
cmp
aaa
push
cmps
stc
sar
jno
cmp
mov
je
cdq
shr
mov
xor
jp
cmp
daa
pop
cmp
cmc
jecxz
inc
std
inc
(bad)
jmp
fucomi
inc
stc
outs
hlt
popa
div
retf
xor
xchg
and
fisub
int
into
inc
popa
cmp
test
xor
push
hlt
xor
js
push
add
(bad)
dec
cmp
jbe
ficomp
jmp
jmp
inc
stos
inc
pop
imul
mov
push
test
out
dec
adc
adc
hlt
cmp
outs
(bad)
cmp
(bad)
mov
add
inc
sti
adc
std
fld
cmp
repnz
je
psadbw
xor
imul
mov
fild
inc
push
shl
stos
movs
cdq
inc
pop
fimul
push
inc
daa
jmp
dec
pop
sbb
inc
adc
loope
xchg
add
pop
push
adc
mov
out
mov
inc
loopne
pop
movs
daa
lea
inc
mov
pushf
push
push
push
fldlg2
jns
adc
sub
(bad)
push
js
(bad)
into
ss
cmp
mov
inc
push
dec
push
xchg
xchg
test
cmp
jae
adc
in
push
neg
js
cmp
push
push
repz
inc
xchg
lods
(bad)
jb
sub
cmps
cwde
lea
xchg
(bad)
push
jle
stc
(bad)
xor
jne
fmul
add
mov
inc
adc
test
push
or
adc
mov
inc
pop
add
sbb
inc
gs
fmul
clc
inc
out
imul
mov
mov
sub
inc
add
dec
popa
add
ficom
mov
pop
js
test
fucomp
movs
cmp
lea
test
hlt
mov
mov
xchg
inc
jnp
and
pop
cmp
or
mov
jmp
sub
retf
ss
fmul
arpl
xor
lahf
imul
das
mov
test
add
and
das
xchg
sub
(bad)
push
dec
inc
pop
mov
sbb
cmp
jge
push
daa
stc
fcomp
ds
ins
or
adc
pop
jge
cmp
push
in
cmp
jb
call
ins
dec
add
loopne
xchg
mov
repnz
push
jge
xor
ret
dec
cwde
mov
mov
mov
mov
adc
jp
xor
inc
cs
pop
(bad)
jge
jbe
inc
mov
sahf
out
add
neg
sbb
xchg
ds
pop
leave
or
stos
(bad)
cmp
nop
stos
call
movs
mov
cmp
dec
mov
push
dec
mov
lea
inc
pop
cmps
dec
daa
ins
sub
sti
lock
push
jmp
cmp
mov
inc
dec
dec
dec
js
icebp
aad
inc
jp
mov
fmul
cmps
and
xor
adc
inc
aad
xchg
push
jl
popa
push
xchg
pop
xor
aam
cmp
inc
movs
xor
and
test
inc
repnz
mov
es
cmp
sub
std
inc
dec
cld
cmp
ins
add
dec
ret
xchg
mov
imul
(bad)
in
or
and
jno
inc
mov
sub
mov
loop
cmp
inc
cmps
iret
add
inc
cmp
xor
inc
sub
or
outs
js
es
cmp
mov
mov
inc
pop
mov
cdq
int
inc
dec
rcl
daa
jecxz
sti
rol
aaa
lods
ins
inc
sub
inc
pop
stos
repz
push
dec
fiadd
xlat
sub
dec
fisttp
inc
cmp
test
inc
pop
xchg
adc
ret
pop
(bad)
std
jmp
js
retf
push
jl
jp
jle
sbb
rcr
sub
adc
out
ins
and
rcr
popf
mov
adc
lock
test
or
pop
jle
jmp
xchg
test
pusha
xchg
jmp
sub
push
icebp
popf
jae
(bad)
xor
in
pop
and
icebp
ja
pop
sub
js
mov
inc
add
adc
dec
imul
jns
add
fld
pop
mov
mov
aad
sub
pop
fsub
mov
(bad)
sub
(bad)
ins
cmp
push
mov
sub
pop
adc
sti
inc
xor
(bad)
push
push
dec
outs
rol
addr16
xchg
jmp
xchg
scas
test
add
xor
pop
repz
sbb
xchg
jmp
dec
mul
cmp
mov
shl
pop
in
and
idiv
scas
jmp
mov
cld
mov
ror
aaa
push
popa
test
mov
das
xor
push
jns
cmp
ins
jl
test
xor
push
mov
loopne
movs
cmc
inc
jge
stc
pop
dec
bound
xchg
xchg
out
or
cdq
test
inc
stos
ror
add
jl
inc
aaa
cld
jno
sbb
(bad)
xor
pop
inc
mov
sbb
movs
fiadd
(bad)
cld
or
sar
adc
jb
js
out
addr16
dec
jmp
push
jne
pop
xchg
sbb
out
push
pop
add
addr16
add
outs
fmul
sub
shl
test
pop
int
rcr
ins
mov
cmp
mov
cmp
mov
mov
dec
cmp
enter
push
and
inc
mov
mov
jmp
(bad)
call
rol
ins
pop
xor
imul
xchg
test
outs
stos
sbb
fstp
mov
dec
push
ins
push
cwde
mov
xchg
push
pusha
loopne
push
fstp
inc
sbb
push
dec
rcl
std
cmp
rol
sbb
push
dec
push
pop
jmp
add
aaa
add
push
hlt
sar
test
inc
pop
lock
popf
fild
std
add
mov
(bad)
fiadd
xlat
(bad)
mov
das
jl
or
jg
mov
and
fstp
ds
or
test
retf
in
icebp
add
xor
cmp
pop
mov
inc
jmp
je
and
mov
push
cmp
ds
fimul
pop
lods
clc
inc
mov
pop
mov
inc
inc
jmp
js
out
test
cmp
jge
cmps
mov
mov
das
jmp
add
add
pushf
mov
and
cmps
push
sub
pusha
pop
xor
aas
hlt
les
inc
pop
pop
dec
xor
pop
out
mov
cmc
push
lods
fld
jmp
out
test
cmp
pop
mov
into
in
inc
and
xor
dec
(bad)
add
test
push
push
dec
mov
inc
or
cmp
and
inc
not
inc
inc
ins
idiv
test
ds
je
mov
test
stos
add
jne
jne
inc
inc
wbinvd
mov
inc
loop
fnstenv
in
aam
add
add
inc
mov
add
mov
and
mov
das
popa
jbe
inc
cmp
jno
sub
movs
and
pop
and
pop
cmps
loope
inc
not
hlt
scas
sbb
add
jne
lods
test
sbb
out
lods
shl
add
ds
loopne
jecxz
xor
mov
pop
pop
loopne
sub
push
xchg
mov
mov
jbe
loop
mov
rcl
xor
mov
daa
sub
and
sbb
jmp
mov
or
aas
inc
cmp
jge
add
cmp
xor
sub
xchg
mov
fcom
fwait
sub
lahf
xor
mov
and
cmp
loop
cmp
in
sub
inc
push
mov
jge
test
hlt
inc
cmp
sbb
cmp
cmp
xor
cmp
jl
aam
push
sbb
sub
and
jb
lock
ds
jg
mov
push
add
ss
out
inc
inc
sahf
movs
dec
aas
inc
jmp
xchg
and
mov
mov
outs
mov
(bad)
pop
add
cmovge
mov
xchg
das
lds
push
sbb
pushf
in
cs
xor
das
(bad)
fdivr
cmps
and
jbe
lds
aad
jge
or
dec
shl
inc
pop
icebp
mov
bound
push
retf
inc
rcl
push
add
jge
inc
adc
xchg
add
ds
and
lods
cmps
imul
ds
(bad)
pusha
aad
out
rol
push
cmp
leave
or
push
mov
pop
xlat
ret
cli
add
jl
loope
jo
into
das
mov
shr
cmp
loopne
adc
jp
and
cmp
lods
fs
cmp
cli
and
xor
push
xor
mov
xor
(bad)
pop
add
sbb
es
xor
push
inc
mov
dec
jo
mov
inc
fldcw
inc
int
push
jl
cmps
movs
mov
xchg
jbe
jle
mov
sub
xor
das
lea
mov
sbb
sub
pop
pop
sub
fiadd
inc
(bad)
jmp
lods
jo
iret
cmp
sbb
jbe
inc
mov
ror
out
xor
add
inc
movs
add
add
inc
mov
pushf
inc
cli
jge
xor
pop
mul
sbb
inc
sbb
inc
push
stc
js
inc
pop
push
(bad)
sar
std
pop
gs
xor
ds
ss
push
xor
xchg
ds
push
inc
sub
xor
leave
in
push
mov
shl
mov
and
cmp
add
inc
in
mov
adc
mov
pusha
inc
xor
aad
mov
inc
test
xor
cli
push
inc
xor
jle
test
mov
push
inc
dec
push
inc
jae
mov
sti
dec
cmp
inc
cmp
and
jl
(bad)
movs
in
cmp
inc
fild
out
aaa
stc
push
pusha
push
jl
and
jg
jge
inc
and
xchg
and
nop
inc
pop
jnp
add
cmp
fwait
pop
jg
inc
cmp
pop
push
mov
jp
outs
ss
mov
retf
dec
dec
inc
into
fbstp
jmp
push
jns
mov
outs
push
jge
pop
inc
and
sbb
fistp
retf
aaa
aad
sbb
inc
sub
out
and
sbb
push
inc
jbe
in
sub
push
sti
inc
inc
icebp
cmp
scas
inc
mov
inc
popa
inc
sbb
add
stos
inc
dec
aas
sub
and
inc
pop
dec
sub
xchg
mov
cmp
scas
sub
inc
mov
or
(bad)
(bad)
adc
mov
movs
and
mov
or
dec
test
mov
daa
mov
les
mov
cmp
and
pop
stc
or
cmp
in
lods
dec
dec
pop
aad
inc
sti
pop
add
inc
setg
mov
jecxz
setle
inc
int
(bad)
add
pop
loopne
dec
inc
movs
repnz
lds
repnz
aam
add
ins
inc
mov
dec
js
rol
mov
adc
lods
add
and
inc
xlat
sub
sbb
sbb
cmps
xchg
ficomp
aam
div
adc
fild
mov
shl
push
sub
sbb
out
ror
mov
xchg
out
push
or
shr
xor
push
pop
ds
jg
(bad)
cmp
shl
mov
out
add
inc
pop
jg
je
mov
mov
retf
inc
sbb
add
movs
inc
pop
add
or
ror
xchg
fiadd
ds
inc
xor
sbb
sub
call
mov
push
sub
sub
fs
cmp
(bad)
clc
cmp
je
and
aas
mov
stc
inc
fst
pop
mov
fdivrp
jbe
mov
push
add
add
mov
cli
outs
mov
jns
mov
icebp
sbb
test
adc
mov
loope
imul
sub
ror
lods
push
je
inc
mov
test
sub
mov
jno
jle
sub
int
dec
and
clc
mov
loope
pusha
in
pop
cmp
fcom
inc
pop
icebp
and
jno
pop
dec
or
leave
test
je
popf
push
retf
pushf
scas
pop
rcr
push
jmp
dec
ss
mov
mov
jo
jns
inc
push
out
inc
ret
mov
add
sub
sbb
jno
jg
inc
pop
mov
cmp
dec
adc
xchg
dec
fstp
je
mov
mov
cdq
inc
mov
mov
mov
pop
cmp
add
cmc
jle
dec
movs
mov
add
or
sahf
mov
xchg
imul
daa
fsubr
xor
push
dec
in
mov
(bad)
je
push
jmp
sub
leave
cmp
jo
jne
cmp
inc
xor
daa
aam
dec
xchg
arpl
jge
clc
out
inc
sbb
xor
icebp
rcl
jle
stos
in
push
out
pop
popa
bound
test
icebp
push
push
sbb
aaa
and
and
(bad)
cmp
fild
xchg
mov
jnp
mov
mov
aam
cdq
and
pop
pop
pop
xchg
sbb
jmp
jmp
pop
xchg
rol
dec
mov
xchg
mov
pop
test
push
dec
loope
pop
jno
mov
pop
icebp
sahf
emms
loop
or
sub
push
jmp
ins
jae
rcl
out
mov
test
iret
jnp
sub
mov
mov
mov
xor
mov
pop
stc
mov
fdivr
ins
(bad)
pusha
jno
dec
mov
sti
mov
ja
icebp
stos
test
sub
add
sub
sbb
shr
or
stos
js
into
gs
mov
lock
in
jmp
lea
(bad)
(bad)
push
pop
int3
sub
mov
xor
push
mov
pop
push
ds
jo
ss
or
sbb
push
sub
sbb
fcomp
div
sahf
fadd
jnp
jge
test
(bad)
scas
stos
push
pusha
pop
and
push
imul
mov
add
sbb
ret
pushf
ret
pop
push
imul
and
hlt
outs
cdq
loop
mov
fbld
icebp
push
and
jecxz
ins
(bad)
sbb
ja
stc
outs
push
inc
jae
jl
sti
outs
xchg
ret
add
jp
in
and
out
jmp
push
sub
sbb
sti
(bad)
rol
ffree
pop
mov
pop
push
inc
(bad)
pop
or
gs
adc
inc
or
xchg
jns
mov
inc
xchg
retf
push
xor
cs
jg
arpl
imul
(bad)
rcl
xor
dec
jl
mov
retf
cdq
pop
cmp
cs
sbb
(bad)
inc
jg
mov
xor
loop
push
pop
(bad)
pop
inc
or
cli
cs
(bad)
pop
lods
cmp
dec
add
in
out
inc
mov
or
fucom
(bad)
out
ja
jb
push
lds
inc
aam
push
fdiv
ins
lea
repz
pop
inc
(bad)
inc
ror
dec
out
loopne
loopne
rol
cmp
cmp
pop
xor
sub
sbb
fwait
outs
in
popa
cdq
scas
ss
sub
mov
sbb
pop
stos
test
adc
mov
sbb
mov
nop
repz
ds
jecxz
or
push
xor
mov
pop
stc
dec
cmp
cwde
pop
cmc
retf
cmp
iret
clc
jecxz
sar
cmp
sbb
sub
mov
out
jne
(bad)
jb
sub
sub
sub
sub
(bad)
pop
mov
push
push
popa
pop
ins
jno
jbe
jo
pop
pusha
sbb
dec
bnd
sahf
lea
cs
mov
jg
inc
hlt
out
jae
adc
inc
stos
jno
ins
bound
stos
loopne
aaa
ds
ins
inc
mov
mov
inc
leave
push
mov
stos
loopne
aaa
in
test
xor
sub
mov
jecxz
mov
cmp
cmp
cs
out
fwait
cli
or
cli
fmul
pusha
xchg
mov
cmovs
scas
push
xor
out
sbb
lock
aas
imul
mov
fwait
movs
push
retf
cmp
lods
les
sub
mov
pop
ins
pop
out
inc
add
out
adc
xor
mov
sbb
cs
mov
(bad)
popa
sbb
adc
push
mov
shl
xchg
cld
(bad)
shl
enter
xor
add
mov
fbstp
aam
xchg
mov
adc
ja
xchg
push
push
aaa
sub
push
mov
mov
add
fidivr
add
push
(bad)
dec
jg
or
and
inc
xor
push
(bad)
jns
inc
in
cmc
dec
enter
sub
fsub
cli
les
mov
sub
cmc
jnp
pushf
sbb
dec
in
movs
inc
push
push
inc
ret
jmp
rol
mov
sbb
test
add
mov
cmp
sub
loopne
pushf
cmp
(bad)
mov
lods
push
dec
xor
mov
sub
mov
ret
pop
xor
ins
inc
aas
nop
xchg
aaa
fcom
cmp
xchg
test
inc
scas
je
in
(bad)
mov
pop
in
psubd
inc
test
sbb
and
push
cmp
xor
ds
add
sti
retf
or
call
add
mov
fild
ins
xor
imul
sbb
and
mov
ss
mov
inc
pop
call
cmp
or
push
jne
add
dec
xor
scas
aas
xchg
and
push
arpl
cmp
cmp
ds
pop
fdivr
test
adc
sbb
mov
leave
fcom
jbe
mov
imul
mov
mov
inc
rcl
mov
(bad)
fst
jmp
inc
imul
and
bound
push
pop
jne
inc
xchg
loop
outs
sahf
imul
or
mov
call
pushf
scas
sbb
mov
inc
mov
mov
mov
jb
cmp
push
mov
mov
and
inc
xor
xor
rcl
mov
lahf
add
stos
push
inc
xchg
sahf
enter
loope
cmc
mov
sbb
push
sbb
in
push
jecxz
or
jge
fnsave
icebp
inc
dec
adc
cld
loopne
das
int
dec
or
cs
loope
mov
sub
(bad)
scas
mov
sub
xor
inc
repnz
(bad)
loopne
stos
mov
lea
rol
(bad)
xor
and
fwait
cld
popf
or
inc
jns
cmp
js
mov
push
add
inc
shr
add
ins
hlt
loopne
cli
arpl
cmp
mov
mov
xor
cmp
mov
(bad)
inc
inc
mov
sbb
(bad)
stc
mov
sbb
bound
mov
push
inc
mov
inc
jo
xchg
ins
push
out
stc
cmp
repnz
push
cmp
imul
inc
dec
mov
adc
js
jbe
jnp
test
fwait
jg
lods
mov
add
div
mov
push
(bad)
jecxz
cmp
mov
pop
jl
cmp
cmp
add
add
mov
inc
retf
jmp
imul
pop
ror
cdq
mov
ins
push
inc
jecxz
ss
int3
out
aad
inc
jns
movs
(bad)
mov
aad
cmp
shl
imul
lods
jo
mov
gs
rcl
fild
sub
stc
in
imul
push
mov
inc
movs
or
mov
imul
hlt
jmp
and
in
out
in
sub
jp
fiadd
fsubr
test
sbb
sub
jl
xchg
inc
test
or
scas
push
rcl
fs
cli
xor
xor
sub
shl
fsub
push
jns
dec
aaa
js
sub
xor
outs
mov
add
jbe
dec
js
sub
mov
pop
xchg
ds
adc
nop
cmp
jns
imul
in
xor
xchg
fldcw
ins
pop
test
in
jno
(bad)
call
ret
jns
ins
xchg
xor
sbb
mov
pop
jns
mov
rcr
iret
push
cld
pop
xchg
mov
inc
cmp
jno
mov
stc
dec
and
idiv
xchg
xchg
jge
mov
fsub
xchg
mov
je
rol
stc
fcom
call
cmp
add
jg
xchg
test
jno
sbb
je
int
mov
xchg
push
pop
in
jl
jno
leave
push
xchg
sub
and
cmps
sti
jne
(bad)
fwait
sahf
push
jge
test
div
cmp
jno
dec
rcl
cld
icebp
inc
xchg
jle
rcl
sbb
dec
imul
jns
pop
pop
fsubr
jle
push
jae
cmp
hlt
add
scas
cmps
mov
or
stos
mov
lods
cs
in
scas
cmp
dec
xor
sub
lods
fnstcw
aas
je
cmps
mov
pop
add
or
jno
inc
addr16
rol
cmp
xor
mov
dec
add
jmp
pop
add
call
icebp
sub
xchg
jns
(bad)
fild
data16
push
jmp
sar
fnstsw
into
dec
and
pop
jns
nop
icebp
repz
and
push
sbb
cmp
add
pop
jge
test
xor
das
leave
pop
ins
out
sbb
xchg
rol
pusha
in
retf
push
jle
sub
stc
xchg
jno
inc
imul
fnstenv
cmp
ret
adc
sbb
jmp
push
sub
sbb
pop
push
push
stc
mov
adc
mov
adc
cmp
inc
push
inc
push
inc
cs
or
lock
xchg
adc
scas
out
out
mov
imul
je
and
dec
movs
imul
mov
aad
les
xor
stc
jmp
(bad)
sub
fiadd
inc
sub
mov
lods
mov
aaa
xor
push
test
mov
mov
push
test
inc
ins
jge
retf
test
pop
sub
jno
add
sbb
and
shr
push
cmp
jns
or
add
jg
pop
adc
push
mov
mov
mov
dec
mov
adc
shl
ds
out
repz
xor
mov
add
cdq
sahf
shr
mov
fistp
aad
iret
js
sub
jb
fmul
bound
or
jns
loop
add
stc
out
pusha
cmp
pop
inc
and
cld
sti
lahf
das
mov
and
inc
ret
aad
dec
stos
or
jns
mov
jno
out
scas
xor
jmp
sar
loope
ret
int3
jg
daa
cmp
cmps
pop
stc
mov
fld
inc
movs
shr
dec
mov
aas
idiv
sbb
sub
mov
pop
jnp
lahf
jmp
(bad)
cmp
ret
pop
jmp
adc
pop
adc
dec
icebp
inc
sbb
cmp
mov
loopne
inc
mul
mov
adc
mov
in
into
mov
dec
sahf
jno
stos
mov
(bad)
rol
xchg
mov
pop
stc
cmp
je
aas
adc
xchg
push
repnz
jmp
sbb
jmp
retf
loope
aam
cmp
imul
push
inc
jno
mov
retf
jns
jmp
cmp
mov
jne
add
jl
jns
nop
pop
and
mov
dec
mov
stos
add
rcr
scas
cmp
sbb
lea
in
mov
fnstsw
or
jns
mov
pop
cmp
mov
retf
sbb
dec
jno
or
into
test
(bad)
push
addr16
fstp
jns
rcl
jp
inc
xchg
xchg
outs
pop
pop
out
push
mov
mov
lods
jmp
fwait
mov
fimul
pop
(bad)
fsub
das
add
or
movs
sar
mov
cmp
sub
(bad)
push
stc
push
push
jae
test
pusha
push
pop
inc
sub
mov
sub
xchg
push
mov
sahf
test
pop
inc
fistp
outs
je
mov
dec
adc
cmp
mov
loopne
inc
adc
xor
cmp
mov
lods
(bad)
mov
mov
jge
xor
dec
sub
jmp
shl
je
cmp
jb
or
mov
jae
mov
daa
loopne
je
(bad)
stos
aaa
cmp
cmp
pop
add
mov
pop
imul
dec
xchg
cmp
xchg
mov
mov
call
sbb
add
(bad)
or
inc
xchg
idiv
shr
sub
mov
jno
mov
movs
sub
cmp
arpl
int
mov
mov
inc
xor
loop
in
adc
and
fsub
jecxz
ror
lea
mov
and
es
int
call
retf
inc
lods
movs
sbb
xor
xchg
add
jp
mov
into
fnstsw
imul
push
ins
lods
lahf
jnp
pop
inc
(bad)
out
int3
or
(bad)
loope
cmps
inc
in
sub
inc
mov
adc
inc
push
and
sbb
arpl
push
lods
pop
(bad)
and
sahf
jle
fnstsw
dec
test
inc
scas
out
sub
daa
rol
(bad)
loope
push
lock
(bad)
ret
xor
push
add
inc
and
stos
xchg
std
call
test
(bad)
pop
mov
add
mov
adc
sbb
mov
jmp
and
cmp
shl
push
lahf
xchg
(bad)
test
int3
or
gs
lods
push
shl
aas
mov
mov
mov
mov
and
inc
mov
out
lds
lods
std
mov
repnz
ds
lock
leave
fisub
cs
push
loop
ds
repz
cld
jmp
adc
sahf
dec
iret
outs
xchg
leave
mov
cmps
inc
out
iret
aam
les
mov
xchg
xor
mov
or
and
cmps
in
push
sbb
div
and
and
inc
jp
xlat
fistp
or
imul
cmp
or
adc
inc
hlt
mul
jo
addr16
inc
jbe
sub
cmc
stos
mov
xchg
je
sub
popf
popa
addr16
add
cmovns
sub
fisubr
das
push
icebp
xchg
push
cmp
loope
push
xor
test
cmp
xor
cmp
fwait
inc
call
push
inc
cmp
add
mov
loopne
ja
cmp
sbb
cdq
cmp
pop
mov
mov
stc
pop
cmp
pop
mov
cwde
inc
inc
jo
add
in
jle
dec
(bad)
imul
(bad)
out
cmp
pushf
mov
(bad)
inc
loope
hlt
outs
clc
ins
repz
mov
jae
fisttp
cmp
imul
int3
sbb
xor
inc
pushf
scas
cmp
jmp
cmp
pop
and
cmp
cmc
inc
mov
fldenv
jnp
lds
dec
inc
inc
cld
repz
sub
mov
inc
push
mov
sbb
mov
(bad)
pushf
pop
fs
jno
sbb
aaa
or
sub
pop
add
ror
test
push
ds
pop
cli
add
(bad)
sub
rcl
sbb
jne
xor
retf
mov
jns
ret
adc
rol
xor
or
mov
aaa
xlat
in
in
dec
dec
outs
nop
xchg
push
add
inc
pop
ins
pop
mov
outs
inc
cmp
push
mov
jmp
jns
fild
fisubr
(bad)
inc
inc
xchg
cld
sbb
popa
pop
cmp
js
cmp
in
cmp
jmp
mov
rol
push
jb
rcr
inc
push
mov
and
mov
pop
mov
pop
or
call
outs
pop
lods
movs
dec
inc
pop
inc
pop
and
aad
data16
push
inc
jne
and
sub
int3
retf
push
(bad)
dec
lea
ret
push
jmp
fistp
adc
inc
dec
xchg
mov
jl
dec
push
jne
mov
pop
inc
(bad)
jmp
sbb
xor
cld
fucomip
or
lds
sbb
leave
push
mov
es
adc
ins
sub
xchg
cmp
cmp
dec
(bad)
push
pop
fld
pop
mov
sar
imul
(bad)
(bad)
sub
test
mov
inc
cmp
sub
inc
push
daa
fsubr
mov
or
clc
jmp
imul
cli
in
inc
pusha
pop
mov
pushf
push
outs
inc
inc
inc
arpl
pop
inc
mov
and
pusha
sub
mov
stos
outs
jl
call
pop
xor
cmps
cmp
inc
xchg
mov
push
mov
(bad)
stc
fs
cmps
pushf
lods
or
mov
adc
jnp
out
mov
cmps
lahf
imul
push
dec
jg
inc
or
lock
pop
dec
dec
(bad)
or
inc
(bad)
mov
dec
mov
fcomp
xor
cmp
(bad)
jmp
je
mov
inc
pop
in
sbb
inc
mov
sbb
repnz
test
mov
and
jnp
xor
fmulp
push
jp
fs
test
stos
inc
adc
inc
or
xchg
mov
dec
hlt
repnz
xor
adc
aad
(bad)
int3
add
xlat
sbb
sub
push
fucomp
jp
and
add
cmp
ficomp
es
xchg
mov
dec
dec
aaa
adc
(bad)
call
mov
lods
push
pop
ret
inc
mov
xchg
or
mov
out
out
jbe
jne
jae
jge
jmp
mov
js
cs
int
mov
add
test
jb
jo
xchg
pop
jge
dec
push
inc
jge
fdivrp
jns
les
inc
les
test
dec
adc
enter
mov
pusha
inc
cld
dec
icebp
rol
xlat
je
push
sub
jnp
jmp
je
xor
push
xchg
je
jle
jle
cmp
ja
ins
jl
push
(bad)
xor
jno
sub
addps
iret
pusha
ja
push
mov
mov
outs
xchg
xor
mov
adc
jmp
xchg
xchg
std
in
mov
mov
fdiv
shr
and
icebp
jge
call
jo
hlt
jmp
jno
test
mov
or
sub
fst
repnz
jl
sub
dec
or
outs
scas
mov
jno
mov
dec
pop
mov
dec
mov
dec
sar
lea
dec
(bad)
je
mov
jno
outs
rol
mov
mov
iret
fdiv
and
and
rol
mov
push
push
shr
jb
div
mov
adc
push
mov
outs
and
jno
sbb
xchg
mov
xchg
gs
or
jns
or
jno
cmp
add
int
imul
shr
sbb
sahf
jns
inc
std
cmp
sub
inc
int
sub
xchg
(bad)
sar
cmp
sub
cli
xchg
mov
popa
and
inc
sahf
int3
fdiv
xor
sar
adc
push
cmp
cmp
mov
and
jb
push
hlt
mov
mov
xor
mov
ret
inc
out
outs
mov
dec
aad
push
sbb
xor
jae
mov
cmc
addr16
push
popa
inc
jb
pop
dec
mov
pop
dec
fdivr
add
mov
rcr
es
aad
std
inc
mov
lods
lea
popa
sub
(bad)
dec
jmp
test
out
shl
adc
push
jmp
or
add
adc
inc
push
push
repz
cmp
jle
cdq
xchg
lods
xchg
jno
cmp
xor
cmp
fwait
mov
ins
dec
inc
test
push
pop
ret
ja
adc
xchg
or
pop
popf
jns
sbb
push
xchg
mov
test
jg
and
inc
push
xchg
xchg
sub
push
pop
imul
shl
cmp
or
fidiv
nop
mov
dec
cmp
cmps
mov
loopne
sar
inc
data16
pop
mov
(bad)
cld
inc
mov
dec
or
xor
mov
ds
dec
mov
adc
aas
jae
mov
mov
scas
cmps
pop
outs
fild
(bad)
out
lds
or
cmps
sar
jge
mul
or
hlt
cmp
(bad)
adc
les
inc
xor
mov
loopne
sub
ds
mov
cs
jno
inc
gs
out
leave
sti
sbb
inc
mov
sub
mov
popf
jle
stos
dec
sub
or
data16
xchg
mov
xor
xchg
mov
test
mov
mov
mov
cmp
mov
nop
dec
scas
push
stos
xor
xor
xchg
sub
mov
enter
js
movs
out
repnz
sbb
(bad)
push
fadd
movs
dec
nop
or
ss
cmps
arpl
mov
movs
mov
mov
pop
outs
xor
dec
test
xor
inc
movs
mov
daa
xor
add
push
sbb
and
adc
std
(bad)
fst
fistp
xlat
and
into
mov
adc
mov
mov
scas
cdq
inc
lods
loopne
shl
sbb
add
fdivr
(bad)
inc
sahf
movs
mov
inc
(bad)
fidivr
cmp
(bad)
repz
movs
call
jmp
xchg
call
stos
push
dec
inc
int3
push
add
stc
leave
mov
sbb
mov
pop
shl
sbb
mov
sub
cli
inc
arpl
lds
cdq
adc
mov
cli
pushf
and
mov
xchg
adc
fcomp
or
add
and
inc
push
xchg
movs
pop
cmp
(bad)
dec
push
or
or
push
popf
push
mov
mov
jns
inc
cs
pushf
inc
rcr
mov
and
jbe
adc
mov
add
cmp
cdq
sahf
jne
je
mov
inc
jle
cld
inc
into
prefetch
and
inc
outs
add
xor
inc
in
inc
ins
push
sbb
jmp
imul
xor
rol
jge
cmp
push
retf
adc
movs
pop
fdivr
in
dec
cmp
stos
xor
test
icebp
cld
sbb
cdq
mov
xor
dec
mov
jecxz
mov
outs
data16
mov
jo
adc
sub
int3
jge
jmp
jae
pop
(bad)
stos
jbe
mov
popf
xor
and
stos
jmp
mov
mov
cmp
les
fidivr
mov
or
in
or
out
aas
and
push
and
pop
icebp
scas
cmp
mov
and
fldenv
sbb
idiv
retf
jns
inc
fmul
not
cmp
pop
clc
je
aas
addr16
pop
repnz
xchg
les
cwde
inc
(bad)
pusha
sbb
out
loopne
fiadd
adc
test
jmp
or
in
sub
imul
and
mov
out
xchg
arpl
mov
jle
adc
sbb
sbb
movs
pop
fldcw
add
adc
mov
sbb
mov
sbb
jb
jbe
pusha
(bad)
xor
push
nop
out
cmps
cwde
cli
mov
pop
mov
inc
inc
addr16
sbb
test
sti
stos
push
jmp
out
sub
dec
jno
mov
je
ds
xchg
rol
icebp
sbb
and
and
xchg
cmp
adc
xchg
xor
push
inc
(bad)
cdq
mov
cwde
fld
jno
xchg
cmp
xchg
leave
icebp
scas
imul
cs
(bad)
iret
les
je
lds
mov
cmp
mov
fbld
cmp
or
jno
xor
mov
aas
fs
or
inc
or
adc
push
cmp
scas
ror
dec
je
jge
cwde
adc
out
fistp
(bad)
and
fdivr
fld
(bad)
(bad)
jmp
outs
cmc
xor
into
push
js
sub
xchg
xlat
adc
hlt
icebp
mov
add
retf
data16
test
arpl
xchg
jno
inc
retf
mov
sub
test
jno
pop
jle
dec
jmp
fsubr
sbb
stos
cmps
sbb
dec
push
retf
xchg
sti
call
(bad)
fistp
and
aas
xor
cmp
loop
pusha
adc
xor
repz
mov
jbe
cmps
imul
cld
js
or
add
ficom
inc
iret
mov
lock
cmp
cmp
adc
fs
dec
jecxz
(bad)
je
mov
or
mov
and
mov
shl
inc
shl
pop
cmc
pop
mov
push
push
cmp
shr
pushf
adc
bound
mov
sub
inc
add
ds
sub
sub
add
cmp
js
jg
cmp
imul
mov
ror
arpl
cmp
xor
cmp
das
jmp
or
mov
sar
pushf
aas
pop
data16
test
xchg
sub
or
xor
sahf
jge
mov
ss
cmp
pop
std
pop
movs
js
(bad)
jmp
push
jp
jns
pushf
fistp
and
inc
sbb
jecxz
pop
xchg
xchg
sub
data16
jge
dec
ss
pop
movlps
mov
les
mov
pop
mov
mov
inc
test
jge
xor
dec
sub
mov
adc
push
stos
imul
pop
push
dec
mov
nop
rol
aas
mov
mov
das
sub
xchg
jg
enter
push
push
inc
stos
(bad)
cmp
out
jmp
sub
(bad)
sahf
sub
jbe
mov
cmp
mov
mov
fs
mov
adc
fcmovnb
clc
movs
movs
ins
mov
pop
js
ins
wrmsr
mov
adc
mov
ret
icebp
cmp
mov
dec
sbb
movs
sbb
add
pop
cli
sbb
dec
dec
jp
mov
popa
add
xchg
push
sbb
cmp
jl
fs
pop
cmps
add
aas
bound
cmp
push
push
mov
xchg
mul
xor
(bad)
pop
jb
jns
cmp
mov
and
in
fsub
mov
iret
aas
scas
fcmove
jle
and
arpl
mov
adc
jns
mov
sbb
mov
mov
xor
adc
and
nop
jmp
repnz
popa
lods
sbb
arpl
push
sub
(bad)
in
call
in
std
in
sub
adc
or
cmp
(bad)
int
outs
add
mov
fmul
test
ds
aaa
out
mov
lock
inc
pop
div
shr
sub
je
mov
loope
jg
ins
cmp
inc
imul
iret
push
ret
pusha
fdivr
dec
dec
fsubrp
pop
inc
test
loop
mov
mov
ret
inc
call
hlt
xchg
das
(bad)
fdiv
es
cmp
lock
icebp
fdivr
inc
dec
or
or
mov
mov
not
jle
lds
mov
das
mov
stc
sti
and
int
aam
and
inc
aaa
js
xchg
clc
mov
inc
dec
dec
inc
or
mov
aaa
sub
(bad)
jl
inc
sub
inc
repz
mov
inc
aaa
dec
jnp
(bad)
(bad)
cmc
push
inc
xchg
ins
inc
mov
xchg
xchg
jo
ja
adc
ins
scas
cdq
or
cmp
sbb
adc
sbb
mov
outs
mov
sub
inc
or
inc
adc
xchg
int
ins
pop
ret
fldenv
mov
xor
cmp
xor
loopne
cmp
dec
mov
jbe
inc
ret
test
and
repnz
and
cld
cld
cmp
or
sbb
mov
inc
cmp
and
mov
clc
sub
test
add
stc
and
(bad)
enter
stos
inc
cmp
test
mov
sub
jmp
xchg
ja
rcl
pop
retf
pop
les
leave
xor
and
push
jne
pop
jno
test
push
out
cmp
aas
ret
(bad)
fadd
(bad)
ffree
mov
hlt
das
jno
jecxz
aaa
inc
ss
sbb
inc
(bad)
nop
mov
sub
inc
push
inc
adc
add
lods
inc
mov
ja
inc
mov
cmp
fsubrp
push
std
mov
push
cmps
aam
pop
inc
mov
push
and
cld
daa
inc
xor
fiadd
arpl
jp
mov
mov
sbb
outs
xchg
inc
mov
lods
cmp
or
adc
xlat
enter
mov
inc
adc
aaa
sub
loopne
pusha
std
ds
add
mov
repz
jb
xchg
adc
(bad)
inc
ja
gs
mov
mov
imul
pop
lds
and
inc
jne
sahf
mov
sub
or
cmp
cmps
push
pop
inc
pop
popa
mov
pop
out
icebp
imul
pop
sbb
test
inc
fst
iret
cmps
loop
jo
inc
outs
imul
mov
aaa
inc
jmp
cmp
pusha
mov
xor
out
or
xor
ror
int3
fucomi
inc
lea
and
cmps
mov
xor
mov
push
retf
ja
lods
fidivr
scas
lahf
inc
push
loop
jo
sbb
loopne
or
(bad)
into
std
or
lock
sub
shr
inc
jo
and
xlat
or
add
jno
mov
cmp
in
ds
cwde
xchg
xor
adc
movs
sbb
dec
jae
jne
jmp
lea
and
jo
or
rol
mov
pop
lahf
push
add
in
add
and
rcr
jno
mov
ret
cmp
clc
fs
sbb
loopne
std
bound
mov
push
inc
mov
mov
aas
sub
lock
cmp
es
xlat
add
retf
xor
add
cli
push
lds
cmp
mov
pop
cmp
pop
cwde
outs
ins
aas
out
test
inc
pop
arpl
add
sbb
dec
leave
inc
lea
dec
repz
shl
push
data16
add
out
mov
xchg
sbb
idiv
mov
inc
scas
int
cmp
fs
sbb
xor
lea
stos
in
cli
xor
fnstcw
(bad)
clc
pop
and
fistp
pop
lea
cmp
push
and
in
pop
push
push
js
inc
mov
push
inc
inc
scas
mov
gs
std
pop
pop
test
int3
mov
push
data16
in
inc
jmp
inc
int
leave
jbe
inc
fs
xchg
mov
mov
cdq
adc
test
cmp
into
push
mov
das
jae
xor
js
(bad)
jmp
xor
push
mov
mov
dec
ret
pop
bound
lea
repnz
js
xchg
mov
mov
bound
inc
jae
dec
mov
jno
jge
test
inc
outs
inc
push
in
push
cli
or
lea
dec
xchg
sti
adc
adc
or
inc
test
das
arpl
xor
sub
cmp
inc
xchg
retf
or
dec
sub
xlat
(bad)
scas
fadd
das
push
sti
push
sar
mov
ds
jo
cmps
loopne
lea
hlt
nop
call
jmp
jle
shl
cdq
lea
jnp
movs
test
mov
mov
lea
loop
bound
leave
fild
cmp
test
lea
xor
int
rol
out
push
jp
jle
mov
cmp
pop
pop
inc
mov
shr
or
ja
in
cmp
push
and
stos
inc
not
lds
rcr
xchg
cmp
adc
stos
sar
(bad)
push
dec
addr16
out
sbb
cli
jbe
imul
xchg
sub
lods
das
push
imul
inc
aas
dec
cli
push
jno
shl
inc
sub
rcr
fnstcw
mov
push
shr
loope
jl
inc
inc
xchg
stc
je
xor
fucomp
and
cmp
push
shl
jnp
fcom
mov
mov
idiv
lea
cmp
jmp
adc
in
inc
sbb
sub
inc
popa
ds
into
test
mov
ror
lods
inc
mov
das
xchg
inc
imul
lods
xchg
add
add
mov
dec
inc
sub
lock
lea
loopne
xchg
mov
pop
bound
lea
inc
jp
cmps
push
fistp
pop
mov
cmp
fmul
mov
inc
pop
test
inc
or
mov
mov
xor
gs
lea
sete
(bad)
(bad)
lods
push
je
cmc
mov
inc
ins
add
pop
dec
xchg
push
inc
ins
repnz
lea
cmp
mov
dec
loop
bound
push
mov
mov
loopne
inc
inc
jno
sub
repz
fdiv
inc
out
dec
int3
add
and
imul
mov
mov
rcr
(bad)
cld
adc
cmp
and
rcl
cmp
daa
es
cmp
ds
sbb
mov
bnd
xor
mov
jb
inc
push
lea
mov
push
dec
gs
and
popf
lea
ds
ret
mov
shr
push
inc
ror
lock
cwde
and
fs
adc
xor
outs
cmp
dec
sahf
sbb
lods
xor
cmp
adc
das
adc
aas
movs
inc
push
outs
mov
cmp
sbb
add
add
pop
fs
adc
pusha
out
pop
es
pop
mov
fnstcw
inc
nop
int
lea
or
pop
aad
aas
dec
ror
inc
inc
das
sbb
mov
sar
adc
jmp
push
jae
and
dec
cmp
addr16
dec
inc
les
lea
jl
lea
inc
es
xchg
call
leave
repz
jnp
sbb
push
and
mov
inc
arpl
jmp
inc
push
jo
sub
shr
fcomp
inc
dec
aam
add
arpl
aaa
inc
inc
pop
lea
loop
imul
push
push
clc
mov
adc
mov
sub
xor
inc
sbb
pop
inc
inc
mov
js
not
rcr
and
or
shl
mov
lea
push
mov
cmp
pop
imul
mov
inc
push
adc
test
fs
jmp
call
fiadd
nop
adc
pushf
data16
push
std
mov
or
mov
cld
push
mov
popa
mov
jbe
mov
rcl
pop
or
jge
lahf
inc
jp
push
ret
js
out
pop
inc
std
lea
push
fs
dec
inc
and
or
out
jecxz
mov
and
inc
das
dec
mov
sbb
xchg
add
dec
cmc
lea
(bad)
enter
cmp
xchg
jmp
lock
dec
inc
cmp
push
lods
inc
jle
add
or
or
(bad)
jmp
dec
dec
sbb
xchg
sub
xor
cmp
into
(bad)
adc
lds
inc
lods
lea
neg
push
jmp
jne
sbb
mov
mov
ret
inc
fstp
inc
mov
in
mov
shl
and
pop
imul
mov
inc
dec
stc
pop
mul
xor
push
(bad)
jl
inc
test
pop
movs
fild
daa
inc
je
pop
inc
movs
pusha
inc
xor
es
js
shl
clc
push
xchg
inc
in
mov
mov
add
mov
out
xchg
std
rcr
mov
ds
pop
je
mov
and
arpl
inc
aas
pop
push
fisttp
lds
stos
inc
fimul
cmp
dec
inc
test
push
sub
(bad)
mov
inc
xchg
cmp
adc
xchg
not
ds
push
pop
inc
sub
popf
sar
aaa
cmp
xchg
adc
dec
cs
(bad)
lock
scas
js
jb
mov
sti
sar
retf
or
or
mov
mov
inc
lea
and
adc
movs
inc
sbb
push
cdq
js
xchg
adc
inc
retf
push
stos
inc
cs
loope
lods
mov
pop
(bad)
pop
sar
imul
sub
cs
mov
mov
sbb
cmp
mov
or
loop
mov
fst
inc
je
dec
jmp
fidivr
mov
jg
push
je
jae
jg
jo
test
fidiv
pop
pop
xchg
push
shr
mov
lods
shl
jecxz
inc
cs
in
daa
arpl
call
xchg
(bad)
mov
jmp
int3
sahf
pop
and
inc
ja
cmps
mov
and
outs
inc
jbe
cmp
adc
xchg
jge
xor
inc
push
inc
pusha
pop
sub
sub
pop
nop
cmc
xor
adc
xchg
leave
jle
push
and
fs
pusha
push
fwait
dec
cmp
loope
push
ds
push
call
rcl
cmp
std
rol
jbe
ins
push
push
inc
cmp
sti
xor
xchg
mov
outs
std
mov
jmp
jns
ins
clc
inc
xor
jo
pop
cmp
cld
out
cli
(bad)
sbb
hlt
nop
pop
retf
lahf
adc
mov
in
add
stos
cmp
jg
mov
push
ja
inc
add
xchg
(bad)
or
cmp
xor
enter
cmp
fdivr
pop
sub
idiv
add
jno
movs
push
int3
sub
lea
fs
sbb
mov
cmp
aas
mov
fcomp
sbb
fs
jl
sub
fisub
and
jge
into
push
fsub
jecxz
scas
jle
mov
leave
mov
imul
xchg
pop
adc
mov
ror
sahf
mov
jns
jmp
imul
jno
les
nop
imul
repz
pop
les
add
mov
push
scas
leave
test
jae
std
inc
mov
ret
in
cmp
aam
retf
jecxz
cmp
adc
scas
jns
mov
pop
jge
outs
mov
data16
(bad)
outs
cmp
es
je
test
(bad)
cmp
push
jg
sub
mov
outs
cmp
mov
add
dec
inc
fcomp
imul
icebp
xor
out
cld
xchg
or
cmp
mov
pusha
pusha
repnz
cmp
and
sub
loopne
pop
fdivr
dec
and
mov
pop
cdq
lods
pusha
das
sbb
enter
sti
loopne
icebp
ds
scas
push
clc
in
js
leave
mov
inc
mov
jno
es
out
sbb
jmp
pop
test
pop
inc
imul
jmp
cdq
(bad)
mov
div
cmp
mov
mov
cmp
inc
jl
adc
cmp
setp
cld
mov
stc
or
and
jmp
mov
dec
jbe
pop
inc
inc
test
sti
aas
xor
ja
or
fmul
mov
aas
pop
or
mov
sti
arpl
ret
movs
ror
movs
lea
mov
and
sub
(bad)
jmp
dec
jg
pop
inc
gs
and
mov
mov
jg
retf
adc
into
xor
jecxz
out
je
jge
jno
and
out
mov
or
rcr
out
mov
test
in
mov
jns
mov
pop
jg
dec
scas
sahf
(bad)
ja
sbb
sub
(bad)
data16
xor
cmp
and
mov
cmp
pop
rol
pop
mov
cmps
cmp
fstp
ss
jecxz
jno
push
repz
dec
outs
jmp
sar
jns
cmp
pop
adc
(bad)
jg
and
ds
dec
xor
lock
ins
or
xchg
add
push
adc
pop
xor
add
std
jp
xchg
mov
dec
cmp
jb
aas
lea
mov
mov
mov
das
in
addr16
sbb
out
aam
xchg
cdq
mov
out
adc
(bad)
cmp
xlat
loopne
add
cmp
cmp
push
pop
cmp
xchg
mov
inc
and
dec
xor
cmc
aam
stc
sbb
push
mov
push
js
sti
dec
scas
push
rcl
add
(bad)
inc
mov
xchg
or
jns
inc
push
imul
fimul
(bad)
stc
dec
push
pusha
stos
fstp
pusha
jne
sub
jecxz
stos
xchg
pop
test
cmps
lods
inc
rcl
inc
sbb
(bad)
add
ret
pop
pop
cmp
std
sbb
jl
add
rol
repnz
inc
sub
ins
test
cmp
jmp
pop
imul
xor
xor
(bad)
mov
pop
call
xchg
xor
aaa
or
fdivr
mov
jae
cmps
ss
push
sub
in
aaa
jne
inc
xlat
sub
jnp
xchg
call
mov
repnz
cmp
inc
xchg
iret
jne
sub
das
loope
mov
mov
xchg
inc
jo
jmp
dec
fisub
aad
adc
stc
inc
jmp
lahf
aad
jo
or
imul
push
rcl
mov
push
and
fld
inc
inc
mov
cli
in
sub
or
out
fdivr
dec
lea
pop
ins
or
inc
(bad)
icebp
push
xor
in
shl
jle
inc
into
or
js
mov
add
sbb
and
push
retf
inc
push
inc
je
sbb
pop
push
push
test
lods
mov
ss
mov
dec
pusha
imul
hlt
pop
or
cmps
jmp
pop
cmp
dec
outs
ds
jmp
mov
and
mov
inc
and
mov
add
fisttp
out
cmp
imul
push
stc
out
iret
hlt
fnstcw
and
movs
shr
ins
pop
pushf
xchg
mov
or
or
jnp
stc
shr
(bad)
cmp
xchg
ds
retf
sub
mov
ror
loop
mov
and
fstp
imul
dec
arpl
retf
xor
fild
pop
shl
shl
adc
mov
jae
dec
sbb
pop
mul
mov
jmp
int3
mov
sbb
retf
xchg
or
sbb
and
outs
pop
lahf
test
jle
test
jnp
sub
inc
addr16
inc
in
dec
xchg
mov
sub
mov
cmp
inc
xchg
pop
xor
inc
test
ss
add
lods
stos
aam
adc
pop
loopne
scas
adc
jno
cs
out
cmp
inc
sbb
shl
or
mov
cmp
call
loope
sbb
loopne
test
xor
daa
mov
xor
mov
or
gs
aas
sbb
hlt
bound
test
fs
sahf
lahf
or
pop
mov
pusha
add
jns
mov
mov
(bad)
icebp
cli
xchg
js
imul
and
push
push
jno
cli
jo
mov
add
lea
mov
mov
test
xchg
jno
sub
dec
cmp
pop
mov
jns
or
loop
add
repz
and
jno
push
push
loope
test
sub
mov
jno
xchg
je
(bad)
sahf
sub
cmps
dec
and
or
rol
nop
mov
inc
or
push
mov
push
cmp
inc
cmp
retf
jo
or
sub
fidivr
ret
jp
mov
aas
and
mov
and
push
jl
inc
fsubr
jge
mov
mov
dec
pop
lods
xchg
pop
cmps
adc
lods
cli
pop
idiv
push
in
jno
retf
sbb
rol
stc
inc
mov
lods
imul
pop
jno
xchg
(bad)
push
call
push
jmp
ja
aas
(bad)
jno
xchg
aam
daa
and
pusha
test
or
pushf
pusha
sbb
in
fst
(bad)
jle
in
(bad)
mov
mov
js
jge
pop
les
dec
xchg
mov
jmp
pop
adc
cmp
inc
mov
imul
int
into
cmp
cmp
(bad)
mov
jle
pop
test
fwait
jl
mov
ins
out
rol
adc
sar
mov
sbb
dec
jns
mov
mov
and
stos
push
jge
je
test
jl
retf
enter
rcl
xchg
loopne
call
stc
or
adc
jp
mov
jmp
push
nop
adc
repnz
mov
xchg
mov
dec
(bad)
jmp
xchg
mov
jns
cwde
inc
fcomp
sub
cmp
leave
mov
push
shl
push
cmp
sub
add
adc
rcr
dec
fsubr
jae
leave
push
cmp
out
sub
add
push
mov
adc
bound
nop
icebp
arpl
push
jbe
pop
js
popf
loop
adc
cmp
push
mov
push
and
mov
sbb
xchg
jp
mov
add
je
and
mov
leave
ret
(bad)
ja
outs
test
fdiv
sbb
(bad)
cmp
and
in
dec
imul
pop
mov
(bad)
jno
mov
fs
loopne
lock
and
bound
or
mov
adc
sar
pusha
jnp
into
stc
imul
(bad)
les
ss
adc
in
ror
scas
(bad)
call
adc
push
mov
jmp
cld
dec
in
xor
loope
in
xor
rcl
cmp
mov
xchg
outs
adc
test
pop
sti
inc
push
popa
inc
or
stc
aad
shl
(bad)
fcomip
jmp
pop
mov
mov
push
iret
fnstcw
scas
jb
por
inc
adc
xor
enter
mov
(bad)
fidivr
or
lods
dec
inc
jle
fs
pop
sub
cdq
push
jge
stos
cmps
or
pop
inc
les
fxch
mov
sbb
xor
daa
leave
stc
dec
ins
dec
jns
push
push
stos
mov
addr16
inc
cmp
sbb
cmp
daa
adc
vaddsubps
sbb
aaa
pop
cmp
in
mov
into
sbb
fcom
jns
leave
inc
sbb
popf
mov
cld
ins
or
adc
xchg
cmp
cdq
mov
fiadd
popa
push
sahf
fldcw
enter
mov
xor
imul
dec
jae
cmp
inc
test
push
push
lahf
movs
(bad)
mov
cld
sub
das
cmp
mov
push
stos
mov
into
aaa
fnstcw
shl
das
xor
inc
cmp
imul
retf
mov
inc
inc
movs
lahf
pop
fwait
add
push
in
rcl
loop
or
push
mov
mov
lea
mov
pop
inc
rcl
sub
mov
jno
fiadd
rcl
lock
loop
xchg
scas
out
cmp
call
into
retf
lods
sub
sti
mov
imul
(bad)
pop
xchg
pop
into
fld
movs
enter
std
inc
cmps
add
inc
mov
pop
jno
mov
sub
sbb
(bad)
cmp
jmp
sbb
cmp
imul
inc
mov
test
dec
aas
jg
xor
adc
jns
dec
bound
fist
ss
adc
jno
xor
mov
ins
pop
scas
cld
xor
jge
xchg
mov
mov
push
or
js
jno
mov
mov
sbb
mov
clc
call
fstp
mov
ror
pusha
aad
dec
retf
pop
stc
fsubr
inc
test
(bad)
xchg
or
adc
(bad)
ror
sahf
mov
bound
(bad)
and
les
dec
call
push
xchg
add
mov
nop
inc
cmp
js
mov
lahf
sub
mov
xchg
and
les
ret
lods
(bad)
clc
mov
inc
std
stc
neg
jg
fsubr
or
xor
mov
test
push
or
jbe
pop
lock
mov
test
or
cmp
sub
stc
jmp
(bad)
mov
push
dec
dec
push
xor
adc
pop
ds
pop
scas
loope
mov
repz
outs
imul
and
call
cmp
inc
es
dec
scas
int
sbb
mov
js
adc
mov
nop
jne
cmp
aaa
mov
ret
push
mov
mov
test
nop
pop
adc
pop
daa
out
lock
out
inc
sub
xor
pop
std
fdivr
jmp
cmp
ins
aas
sub
mov
iret
std
jg
std
or
push
in
ins
mov
dec
lock
jns
das
sahf
mov
lods
pop
pop
fwait
push
jnp
adc
inc
stc
xor
outs
js
pusha
sbb
arpl
sbb
jo
cmp
jmp
fisub
pop
adc
pop
(bad)
mov
xchg
pop
mov
rol
movs
pop
push
xor
xchg
xor
mov
push
jno
mov
xor
add
loopne
das
sti
dec
ret
xchg
ss
xchg
stos
or
pop
or
sbb
mov
aam
push
shr
int
popa
aas
aaa
aad
dec
test
das
or
jbe
jmp
int3
mov
in
mov
int
push
inc
jne
into
push
ins
push
loopne
and
test
loopne
xor
test
in
jno
sub
arpl
(bad)
pop
test
into
pop
jno
aam
movs
cmp
jge
xor
aad
fs
pusha
xchg
(bad)
pop
pusha
inc
hlt
stos
or
loope
or
mov
cs
dec
xor
test
and
xchg
sub
sbb
std
movs
inc
scas
cmp
xchg
xchg
push
aam
sub
jnp
xchg
dec
pop
push
push
inc
cdq
dec
or
or
imul
cwde
(bad)
call
cli
out
push
pop
jge
es
inc
(bad)
in
xchg
std
cli
inc
pop
or
aad
nop
dec
je
ins
ja
mov
retf
inc
inc
push
lods
sahf
dec
loopne
and
mov
sbb
movs
pop
loope
cmp
cmp
inc
paddq
add
fstp
push
cmp
fisubr
cli
mov
inc
mov
mov
test
inc
mov
(bad)
sbb
dec
jge
xor
pop
adc
mov
pop
arpl
test
mov
xor
iret
mov
nop
je
fmul
xchg
and
push
cs
clc
pop
and
fiadd
leave
scas
repnz
sbb
sub
inc
scas
mov
push
mov
js
jno
inc
inc
lahf
dec
mov
loope
popa
cli
cmp
int3
sbb
popf
fild
ret
mov
cwde
cmp
sbb
inc
fcmovu
cmp
xchg
jne
dec
rdmsr
adc
imul
dec
sbb
pop
pop
xor
jl
push
cmp
inc
add
movs
jp
mov
rol
jo
and
pusha
daa
adc
sbb
cmp
mov
in
cld
inc
dec
add
jecxz
sar
xchg
enter
fistp
inc
int
pop
inc
push
or
repz
aaa
inc
(bad)
stos
dec
jae
jg
or
cmp
inc
bnd
inc
outs
pop
mov
ins
popf
icebp
out
popa
push
arpl
addr16
fstp
cli
cmps
inc
sub
(bad)
pop
push
je
adc
xchg
sub
add
cdq
retf
push
mov
(bad)
neg
sub
jns
sbb
jmp
js
sub
mov
add
xchg
pusha
cmp
jge
inc
push
mov
jno
out
mov
popa
aas
cmp
inc
cli
jmp
stc
mov
cmp
leave
setb
adc
mov
pop
popf
clc
cmp
pop
cdq
movs
push
mov
mov
std
stc
mov
loop
jp
cmc
movs
mov
adc
inc
ss
or
dec
push
ins
inc
sbb
cdq
out
aam
outs
pop
sbb
call
loope
repnz
pop
inc
and
rcr
loopne
ins
inc
popf
pop
imul
mov
sahf
or
push
cwde
imul
loope
lods
sbb
dec
cmp
jmp
outs
dec
inc
jbe
popa
cmp
sahf
add
mov
stc
pop
adc
inc
(bad)
out
xchg
push
or
mov
sbb
sar
lods
outs
lds
inc
out
fstp
ins
mov
inc
int3
scas
dec
and
sbb
and
je
push
imul
inc
aaa
out
push
cmc
ficomp
jbe
mov
sub
pusha
ja
fnsave
cmps
sub
mov
sar
or
sbb
pop
inc
outs
sti
pop
sub
inc
jo
jp
xor
retf
jmp
out
fimul
fistp
cmps
add
mov
in
mov
outs
repnz
inc
loopne
xchg
aad
xchg
push
pop
cmp
add
sbb
cmp
jmp
push
cmp
call
jge
add
ds
pop
and
sbb
push
cmc
mov
inc
sub
imul
or
int
pop
push
and
aaa
cmp
in
(bad)
es
inc
sar
movs
clc
fstp
sbb
adc
je
bound
inc
bound
push
pop
xchg
sub
xchg
setns
inc
(bad)
stos
rcl
ds
pop
push
nop
mov
inc
int3
je
push
arpl
push
sub
ret
push
sti
push
sub
call
fisttp
adc
ss
ins
daa
and
mov
push
inc
sub
sbb
out
inc
jge
mov
mov
lea
icebp
dec
inc
cmp
lock
imul
mov
cmp
cmp
jmp
pop
and
push
sub
nop
or
sahf
mov
adc
call
lock
push
lds
inc
int
out
xchg
push
(bad)
(bad)
test
push
inc
jae
jecxz
call
mov
xchg
in
inc
mov
dec
inc
movs
sub
jo
jmp
mov
addr16
lds
xor
daa
mov
xchg
mov
pop
inc
mov
and
(bad)
and
adc
stos
cmp
loop
jbe
jl
inc
ss
adc
jmp
dec
dec
leave
adc
inc
retf
add
dec
jmp
push
fwait
jg
or
clc
in
inc
jbe
ror
inc
cmp
ud0
cmp
mov
inc
inc
rcl
int3
jge
dec
or
(bad)
ror
sbb
ins
inc
push
movs
xchg
int
icebp
ret
or
sbb
push
and
enter
cmp
cmps
sub
cdq
(bad)
sbb
sub
pop
pusha
and
adc
add
lds
xor
mov
mov
mov
ficomp
lahf
test
inc
call
sbb
rol
mov
rol
push
inc
jle
inc
sbb
stos
popf
fild
sub
ins
cmp
mov
aas
dec
(bad)
lea
imul
sub
add
nop
jns
cmp
das
sbb
mov
dec
sub
cmp
add
movs
aas
inc
sbb
mov
jle
not
faddp
fsubr
jno
inc
retf
cmc
inc
addr16
mov
cmp
aad
mov
test
cdq
loope
inc
pop
call
jo
inc
pop
mov
dec
leave
clc
popa
test
pop
in
loopne
push
adc
jmp
xor
jb
mov
cdq
push
sub
pop
push
mov
mov
rol
cld
in
jns
cmp
inc
jb
iret
stos
sub
inc
push
call
or
rol
stos
xchg
inc
mov
imul
js
push
xor
inc
imul
sbb
outs
dec
mov
hlt
mov
(bad)
inc
or
int3
xchg
add
cmp
add
mov
mov
jmp
shr
push
repz
push
sbb
ficomp
cmps
imul
dec
cmps
push
fidivr
jp
fst
jmp
sub
push
add
retf
out
out
sub
outs
adc
jo
jmp
add
mov
mov
mov
mov
xor
fcom
cmp
mov
pop
ret
jmp
jne
nop
jmp
outs
or
mov
cmp
lods
retf
imul
ret
imul
sbb
lods
mov
or
sar
data16
mov
inc
push
aad
inc
mov
fs
push
mov
xchg
ret
mov
xor
and
fsincos
and
mov
cmp
add
cmp
adc
jno
jmp
pop
enter
lods
jo
sbb
push
jb
xchg
inc
jb
imul
out
mov
dec
ficomp
or
data16
in
fs
cmp
jmp
leave
adc
(bad)
or
and
ds
gs
ds
cmp
(bad)
sti
cmp
aam
jle
jmp
stos
jno
add
test
or
je
jns
mov
xchg
loope
xchg
jge
rol
popa
xor
idiv
lahf
add
fs
in
mov
and
into
lds
popa
call
lock
aam
mov
and
fwait
cmp
jg
inc
mov
pop
inc
test
dec
push
push
pop
add
xchg
inc
and
out
aad
inc
and
cmps
arpl
cs
sbb
jae
jp
cmp
loop
adc
out
(bad)
sahf
es
hlt
frstor
jns
sub
adc
xlat
dec
aam
enter
and
cmp
out
in
repz
cmp
xchg
push
push
stc
scas
cli
mov
fild
fnstsw
mov
stos
(bad)
mov
inc
lds
jnp
push
ja
test
xor
leave
pop
and
cmp
or
out
add
inc
jbe
(bad)
stc
mov
(bad)
dec
aam
jae
xlat
enter
mov
jnp
mov
inc
test
or
adc
mov
cmc
lods
pop
in
sub
mov
xor
cwde
or
mov
fcomp
aas
inc
jge
stc
(bad)
sbb
arpl
fstp
loopne
ds
rcl
mov
inc
mov
cli
into
test
adc
add
mov
inc
je
sar
add
cld
(bad)
fcomp
les
and
mov
enter
fcmove
cmp
clc
cmp
mov
mov
mov
mov
add
les
cmp
mov
xchg
lock
cmp
dec
xchg
jns
inc
mov
add
cld
inc
inc
fnstsw
cmp
push
adc
int3
xor
or
adc
pop
ins
rol
inc
bound
cmp
gs
adc
shr
dec
fmul
dec
fnsave
in
stos
(bad)
loope
fadd
cwde
je
xchg
mov
js
sub
jle
mov
xor
jmp
adc
movs
shl
fs
sub
pop
jno
jae
mov
mov
or
fs
cmp
mov
aas
(bad)
aam
or
adc
mov
out
sbb
push
add
jbe
sbb
cmp
gs
les
jbe
adc
fdiv
ret
mov
mov
cmp
xchg
mov
cmp
cmp
cwde
dec
inc
push
imul
js
mov
nop
xor
push
xor
push
jo
mov
ret
jp
cmp
mov
jge
xchg
cld
test
leave
mov
sbb
jne
mov
xchg
pop
mov
jne
cmc
ds
push
sub
adc
aad
xor
jns
leave
cmp
pop
sbb
fbld
xchg
mov
repnz
sbb
sub
xor
clc
ret
popa
or
mov
mov
mov
aam
fucomi
aaa
sub
inc
sbb
jle
loopne
inc
jae
cld
out
sub
mov
inc
loop
push
jns
adc
lods
and
ds
dec
shl
push
push
nop
lea
xchg
popf
push
cmp
out
retf
mov
mov
or
mov
test
aam
or
inc
mov
or
fsubp
icebp
out
jns
(bad)
imul
loop
mov
aas
inc
inc
in
pop
xchg
test
and
sub
mov
inc
mov
out
push
lds
sbb
sahf
cmovbe
cwde
xchg
xor
push
ds
sub
mov
jae
mov
jg
stc
hlt
sti
ficom
push
jmp
add
xor
mov
jb
mov
mov
mov
cmp
sbb
mov
xchg
jecxz
shr
pop
pop
pop
inc
pop
cmp
rol
sbb
ror
cld
sbb
push
(bad)
cmp
shr
scas
(bad)
xchg
(bad)
in
jb
ret
fisttp
das
inc
stos
sbb
jge
ds
jno
mov
push
nop
std
hlt
push
fmul
or
lods
dec
test
js
mov
movs
jle
push
cmp
pop
outs
xchg
je
pop
mov
or
stos
mov
or
repz
aas
das
cmp
cmp
sbb
sub
cmp
imul
iret
cmp
pop
push
sti
test
push
push
sbb
inc
sub
fidivr
jecxz
lock
pushf
int
mov
(bad)
mov
pop
pop
(bad)
cmp
add
and
psrad
sub
push
or
(bad)
loopne
inc
pop
mov
inc
nop
cmp
ss
xor
in
and
out
popa
sub
xchg
jecxz
gs
stc
cmp
fmulp
addr16
push
ror
scas
push
xchg
iret
cmp
mov
cmp
xchg
(bad)
jae
mov
cmp
std
cmp
cmps
inc
and
adc
inc
mov
outs
lahf
rcr
add
sbb
fdivr
mov
add
cwde
sub
or
mov
pusha
pushf
(bad)
fild
pop
inc
repnz
cdq
add
and
adc
lds
dec
xor
or
mov
inc
ret
cmp
repz
jne
popf
sbb
mov
aas
xor
gs
or
shl
test
sub
push
sbb
dec
inc
imul
jg
pop
xchg
sbb
or
cmp
sahf
push
pop
fsubr
loop
jo
iret
cmps
hlt
sbb
push
fld
dec
int3
sbb
in
pop
jl
dec
inc
push
dec
push
add
xor
in
fld
rcl
shl
or
mov
dec
pop
push
adc
sti
mov
inc
cs
test
pop
sub
aad
rcl
repnz
mov
fwait
out
lods
out
loop
loope
inc
je
jl
cmp
push
xchg
jno
pop
lahf
scas
pop
neg
mov
jl
fsub
add
push
mov
push
repz
loope
adc
jno
not
test
sub
xchg
cmp
out
in
dec
pop
or
je
sbb
pop
sbb
das
and
das
in
jne
int3
jno
xor
in
stc
jecxz
pop
add
pop
xchg
fs
push
in
fidivr
stos
xor
icebp
aam
mov
arpl
mov
mov
xor
bnd
jge
jl
inc
pop
adc
(bad)
xor
adc
push
in
inc
add
in
xor
ss
or
sbb
out
(bad)
add
xchg
push
fstp
es
sub
in
fcmovnbe
xchg
test
mov
dec
mov
jno
xchg
mov
add
sbb
xchg
cmp
jge
movs
aaa
add
pusha
jno
fstp
lea
xor
inc
cmp
cmps
jp
mov
jmp
fmul
cmp
or
pushf
sub
mov
fimul
lea
sub
fcmove
pop
xchg
repz
inc
mov
push
add
cmps
fwait
cmps
jno
fsub
test
sbb
loop
nop
or
dec
mov
loope
sub
shl
cdq
dec
cmp
jge
sub
icebp
in
mov
in
push
sbb
and
dec
xor
inc
sbb
cmp
or
retf
jg
cmp
(bad)
in
mov
fcomi
lods
lods
push
ret
xor
into
call
xor
jno
jmp
pushf
mov
xor
adc
aas
in
mov
test
fiadd
pop
jno
sub
mov
rcr
ja
outs
out
push
out
jnp
outs
shr
and
pushf
iret
hlt
mov
cmp
or
push
mov
jns
in
mov
inc
(bad)
aas
or
dec
xchg
mov
inc
or
nop
or
add
movs
xchg
ins
or
cmp
cs
push
in
aaa
call
aas
jae
bound
loope
cmp
inc
sbb
adc
out
(bad)
icebp
imul
aad
(bad)
xchg
mov
iret
clc
inc
pushf
xor
out
xor
das
cmp
pop
sbb
dec
inc
rcr
enter
ror
cld
ds
cmp
push
call
mov
mov
and
xchg
inc
jb
cmc
mov
enter
cmp
das
ficomp
sub
or
mov
lea
cmp
jo
xchg
push
outs
inc
iret
cld
out
imul
cmp
mov
loope
icebp
jne
inc
xor
mov
push
leave
fxam
jbe
mov
push
sahf
xchg
sub
lods
inc
sub
in
cmc
(bad)
and
cmp
pop
or
movs
inc
dec
popf
test
mov
mov
mov
fxch
sbb
clc
cli
out
push
inc
mov
jle
inc
aad
mov
jae
(bad)
je
push
in
mov
sbb
mov
xlat
nop
dec
inc
pop
cmp
push
and
push
xchg
mov
add
ds
(bad)
sahf
or
xor
and
inc
outs
xchg
xchg
call
lahf
sti
cs
sub
jne
pop
sub
shl
mov
or
imul
push
mov
inc
inc
arpl
push
or
clc
in
js
push
inc
mov
ja
fcom
sar
popf
mov
cmp
xor
xor
aam
rol
xchg
out
xor
and
mov
mov
adc
mov
and
iret
fadd
inc
daa
dec
fstp
dec
sar
in
ret
sub
add
sub
outs
out
xchg
leave
hlt
push
jbe
push
or
mov
gs
enter
leave
test
repnz
popa
popa
aas
push
adc
jns
pop
mov
stos
cmp
sub
sbb
lea
int
cmp
mov
jns
xor
je
(bad)
stc
stos
mov
cmp
sbb
mov
xchg
ss
add
dec
retf
push
xchg
xchg
fld
xor
test
in
cmp
das
sti
pop
dec
xchg
icebp
cs
(bad)
xchg
mov
inc
mov
or
jmp
dec
push
inc
sub
pop
jb
and
in
out
pop
mov
dec
pop
fcomp
push
fs
push
ret
lahf
add
jo
(bad)
and
jle
arpl
and
mov
sbb
cmp
push
(bad)
xor
nop
aam
in
aaa
xor
jp
pop
sbb
cli
jmp
mov
push
mov
ins
repnz
and
stc
dec
cmc
outs
xor
stc
sti
iret
int3
sub
or
sub
imul
pushf
mov
push
mov
fimul
adc
sub
dec
xchg
mov
aad
mul
jl
sub
sub
xchg
xchg
xchg
out
push
(bad)
dec
in
addr16
adc
repz
ins
test
(bad)
inc
jnp
jo
or
je
and
cmp
mov
mov
data16
int3
add
inc
call
push
sbb
movs
mov
fs
jb
aas
mov
xor
push
les
xchg
(bad)
fcmovb
cmps
dec
mov
loope
stos
imul
xchg
js
xor
ficomp
xchg
cmps
adc
jns
int3
sar
lock
retf
(bad)
fcmove
fistp
ret
les
fcom
cmc
out
movs
cs
ds
les
and
or
sub
out
xor
fnsetpm(287
test
aas
dec
xor
dec
add
aas
cmps
xchg
sbb
cmp
cmp
call
cmp
xor
cmp
(bad)
sti
(bad)
sub
mov
mov
mov
aad
rcl
cmp
or
xor
mov
aam
fld
cmp
jle
sbb
addr16
aas
(bad)
xor
les
inc
cmp
ret
inc
or
xchg
aaa
or
loopne
aas
inc
mov
ins
ret
add
jne
push
mov
gs
jns
xchg
cmp
inc
stos
cdq
mov
push
loope
test
and
cmp
enter
and
mov
sbb
and
sbb
jnp
xchg
rcr
mov
fxch
pop
adc
rol
adc
sub
les
aad
mov
lea
nop
pop
sti
retf
shl
inc
sub
mov
add
(bad)
shr
xchg
out
sub
jbe
mov
dec
jle
cdq
stc
cmp
rol
ins
pop
inc
and
jg
mov
sub
or
cmp
stos
ss
cmps
jne
pop
in
inc
xchg
xchg
shr
popf
jmp
add
sar
push
sub
add
cmp
lea
mov
das
sbb
scas
dec
jb
idiv
pushf
fdiv
pop
inc
jmp
cmp
mov
mov
ror
sub
cmp
mov
dec
mov
dec
xchg
cmp
sbb
xchg
adc
xor
stc
js
lods
lahf
stc
mov
pop
std
fimul
adc
into
data16
or
and
xlat
dec
mov
fucomp
in
icebp
push
cdq
cmp
repnz
int
adc
aad
mov
sub
mov
jmp
adc
jb
pop
jmp
std
xchg
push
icebp
ss
ror
lds
cmp
cmovge
xor
lahf
sub
mov
cmp
xor
pushf
in
sbb
adc
jo
fs
inc
jo
sbb
adc
xor
and
test
sub
cmc
push
xchg
pop
(bad)
pop
inc
mov
fmul
out
and
jbe
loop
or
fld
jl
int
pop
in
xor
mov
sub
mov
xchg
pusha
mov
jo
fcom
and
mov
jp
jge
fiadd
(bad)
adc
inc
fnstcw
jmp
sbb
repnz
stos
loop
add
dec
jns
cli
pop
ds
dec
adc
pusha
cdq
xchg
lods
cmc
sti
pop
pop
shl
inc
push
iret
ins
clc
jno
mov
mov
cmp
dec
jge
lods
add
data16
jl
jnp
test
outs
(bad)
adc
jns
inc
jp
pusha
dec
jmp
dec
jl
imul
scas
ds
cmp
push
push
outs
repnz
jp
xchg
mov
pop
mov
dec
out
adc
cmps
movs
cdq
int3
lds
push
scas
sahf
fisub
jl
out
dec
sbb
jecxz
aad
dec
cwde
xchg
and
jb
neg
inc
and
nop
imul
adc
shl
(bad)
icebp
xor
add
mov
inc
imul
iret
stos
ins
cmp
and
std
aad
sub
idiv
jbe
inc
jno
ror
cli
pop
push
dec
fidivr
cmovg
adc
out
mov
mov
inc
inc
jbe
scas
xchg
pop
xchg
push
inc
outs
cwde
(bad)
fmulp
fcmove
sti
loopne
das
ror
sub
mov
(bad)
les
test
push
and
dec
or
pop
gs
faddp
mov
std
jmp
cmp
xor
daa
arpl
ins
pop
int
cmp
(bad)
imul
mov
mov
shl
cmp
jge
rcl
dec
sub
or
movs
les
push
(bad)
mov
imul
cmp
sub
xor
imul
add
jp
pop
cwde
xchg
xchg
jle
inc
mov
test
inc
xor
push
jmp
ficomp
dec
cdq
xchg
ins
inc
cmp
jne
leave
aad
jo
jnp
add
mov
fsub
inc
and
loope
(bad)
repnz
sahf
mov
inc
data16
jne
mov
inc
rcl
(bad)
ds
mov
inc
test
jae
cmp
sub
mov
lods
push
inc
(bad)
jmp
in
and
vpcmov
pop
fs
mov
add
jmp
mov
int3
out
ror
call
sahf
cmp
out
ret
push
scas
mov
add
std
int3
aam
dec
or
jp
inc
aaa
(bad)
cwde
cmp
imul
jmp
mov
mov
lea
sbb
inc
cmps
xchg
push
mov
mov
xor
inc
ins
js
scas
or
mov
mov
les
test
or
mov
inc
and
add
pop
pop
sub
fs
dec
neg
push
jns
out
cmp
inc
sub
inc
sub
jno
add
fcomp
jmp
stos
mov
mov
xor
sbb
je
imul
push
add
xchg
xor
mov
cmp
and
and
jl
mov
inc
dec
cld
jmp
shl
or
sub
pop
fwait
test
cmps
inc
mov
inc
in
xor
jmp
xlat
mov
js
adc
fdivr
inc
sbb
mov
nop
cdq
xchg
(bad)
int3
mov
arpl
mov
(bad)
xchg
out
xchg
push
cmp
xchg
push
cwde
push
sbb
shr
mov
jmp
nop
push
or
idiv
sti
repz
fisub
out
or
test
sti
loop
mov
loope
sub
add
xor
in
cs
sbb
clc
sbb
mov
sub
je
inc
imul
pop
jb
into
fwait
xor
sub
fbstp
and
pusha
push
push
frstor
mov
lods
dec
ins
jne
out
jno
pop
(bad)
sub
loope
xor
scas
pop
test
test
inc
(bad)
lods
inc
retf
fnstenv
imul
add
pop
sbb
inc
in
or
inc
lahf
je
pop
sar
add
or
loope
les
xchg
cli
popa
ret
fadd
mov
(bad)
test
mov
jno
les
adc
push
pusha
adc
pop
mov
bound
retf
rcl
pop
adc
mov
mov
sub
imul
xchg
jge
jns
cmp
adc
pop
into
xor
addr16
movs
or
cmps
pop
adc
cmp
test
fabs
and
push
add
xor
lahf
je
mov
sub
neg
mov
pop
push
lock
ins
push
(bad)
cmc
pop
cmp
das
or
test
scas
(bad)
cs
lea
or
jns
cmp
cmp
jae
cmps
pushf
retf
cmp
dec
loopne
xor
sti
sub
imul
sbb
sbb
bound
mov
dec
adc
jge
fwait
cmp
sub
and
nop
sbb
fdiv
adc
in
jmp
or
mov
ja
pusha
jmp
jno
aas
mov
fistp
sbb
repz
adc
mov
sbb
leave
or
mov
hlt
loopne
xchg
and
xor
cmp
repnz
jmp
or
out
std
add
cdq
mov
cmp
jmp
push
outs
cli
pop
xor
jno
jns
fs
js
jge
retf
sub
push
and
sbb
shl
xchg
jns
repnz
jecxz
jle
jo
jge
mov
pop
add
jns
out
mov
in
fldcw
aaa
pusha
sbb
add
in
push
gs
mov
push
mov
xor
xor
sbb
loop
cmp
jge
mov
imul
inc
es
cmp
sub
sub
sbb
rcl
sti
pushf
cld
pop
mov
fs
mov
imul
mov
loop
and
or
sbb
cs
add
cmp
test
stos
sbb
je
jg
test
mov
call
cmp
dec
xchg
sub
push
or
scas
dec
ins
enter
xor
jp
mov
dec
push
mul
clc
out
idiv
adc
out
icebp
sub
and
mov
jb
ret
ds
dec
mov
std
loopne
into
sub
inc
mov
imul
xor
repnz
push
xlat
adc
out
mov
mov
xchg
add
inc
sbb
je
test
stc
inc
test
mov
xlat
inc
xor
mov
fnstcw
sub
fmul
cmp
mov
leave
pop
ret
daa
push
inc
movs
dec
jl
sbb
cmp
outs
clc
fsubr
or
popa
movs
sahf
or
pop
cmps
mov
out
xchg
cmp
dec
(bad)
mov
stos
add
mov
push
or
or
pushf
pop
cmp
(bad)
cdq
jl
sub
sbb
inc
mov
or
addr16
push
push
out
lea
mov
in
lock
cli
push
into
scas
pop
das
inc
cs
pop
jge
pop
sub
inc
cmp
fstp
fimul
data16
xor
dec
sub
ss
aas
in
fmul
push
pop
pop
lahf
test
jns
mov
or
sub
fwait
inc
aam
sbb
inc
repnz
mov
push
jo
(bad)
cmp
rol
(bad)
jmp
sbb
cmp
mov
dec
test
ins
scas
inc
xor
repnz
fs
push
cwde
dec
sbb
in
loopne
je
ds
popf
mov
add
jl
and
in
cmp
movs
inc
call
addr16
ins
mov
fwait
pop
sub
adc
cmp
sub
add
mov
shl
fild
mov
pop
add
xor
lods
jmp
mov
jae
stos
push
xchg
ins
xor
cmp
sbb
mov
xor
lds
mov
out
ja
cmps
mov
test
popw
sahf
sub
repz
pop
xlat
aam
shl
test
loope
mov
push
sti
ret
sti
cs
push
fs
stc
add
std
loopne
sbb
xchg
push
pop
push
cmp
into
neg
out
cmp
xor
add
and
jbe
fdiv
sbb
sbb
mov
sub
mov
or
aas
shr
sub
push
loop
fidivr
add
imul
arpl
cmps
sti
pop
cmp
movs
cmp
mov
test
push
and
jle
cmp
dec
sub
cmp
in
cmps
push
push
sbb
xchg
cli
aas
sub
push
mov
outs
cmp
push
jmp
mov
mov
jno
call
pop
sub
sub
jmp
ret
sbb
in
inc
or
repnz
cmp
cmps
popf
jns
dec
and
xor
out
mov
add
inc
push
out
outs
sbb
popf
scas
imul
gs
xchg
and
enter
aam
cwde
or
ins
xchg
rol
add
inc
fwait
push
ins
jg
push
mov
(bad)
pop
mov
sbb
adc
test
out
fist
jne
xchg
mov
xchg
mov
ss
sahf
pusha
les
inc
ficomp
lea
cmp
pop
(bad)
cmp
pusha
rcr
push
xchg
inc
jo
push
fstp
add
enter
inc
leave
mov
(bad)
cwde
mov
out
rcr
and
aas
dec
jnp
and
inc
push
xchg
sub
dec
pop
dec
cmp
add
jp
inc
test
stc
js
mov
mov
push
hlt
in
xor
mov
push
movs
out
mov
cmp
inc
repz
mov
adc
xor
or
inc
mov
scas
out
mov
sbb
call
loop
inc
stos
or
icebp
fdiv
jo
nop
xor
or
sub
outs
cmp
or
out
xor
adc
mov
sar
mov
mov
lods
es
stos
fsubr
sub
adc
xor
imul
add
ins
in
in
pop
cmp
out
pop
mov
and
jl
xchg
jl
in
jns
inc
dec
adc
retf
pushf
mov
jmp
ja
mov
pop
inc
mov
inc
mov
(bad)
push
push
mov
(bad)
clc
hlt
ins
fcmovnbe
enter
fs
mov
fidivr
jmp
mov
jo
test
or
cmp
jns
pop
xor
shr
out
aaa
pop
mov
inc
int
fisttp
jmp
dec
outs
fidiv
out
mov
xor
stos
in
cmp
rcl
adc
and
aaa
pop
in
ds
xchg
js
std
cmp
inc
ret
or
mov
push
jae
popf
pop
inc
mov
or
push
loop
fimul
dec
in
ds
xchg
cs
inc
mov
test
mov
pop
call
repnz
iret
push
sar
out
ror
hlt
inc
clc
pop
mov
scas
call
repz
pop
inc
addr16
xor
lods
cmp
cmps
pop
and
mov
add
pop
inc
cmp
in
jbe
pop
mov
out
pop
dec
push
shl
jae
sub
add
jmp
into
fcom
daa
jbe
inc
sub
xor
cmp
(bad)
fsubr
lds
(bad)
mov
add
loope
daa
cmps
xor
pop
lods
shr
inc
cmp
mov
adc
jp
retf
add
adc
mov
xchg
ret
imul
into
dec
cmp
inc
sub
jb
ret
push
loope
jge
int3
leave
psadbw
pop
jp
test
inc
and
cld
aad
add
or
das
or
push
fcomp
sbb
xchg
mov
sbb
(bad)
and
mov
mov
dec
mov
inc
dec
cs
xchg
inc
jmp
xor
cmp
mov
fdivp
sub
jp
xchg
or
sub
out
lock
pop
inc
inc
add
pop
out
icebp
ins
dec
sbb
mov
push
mov
outs
jmp
clc
xor
daa
js
adc
jmp
movs
xor
mov
inc
outs
daa
popf
rcl
mov
outs
sbb
inc
nop
dec
pop
pop
enter
stos
inc
push
xor
dec
outs
cmp
mov
or
jo
sbb
xlat
inc
add
pusha
shr
inc
ret
add
dec
std
(bad)
cld
inc
push
mov
stos
mov
xchg
repnz
into
cmp
or
daa
xchg
cmp
stos
test
mov
inc
push
push
into
xor
xor
sub
or
inc
push
add
daa
stos
test
inc
sti
mov
ja
inc
scas
shl
or
hlt
bound
std
pop
fadd
push
es
pushw
mov
cli
mov
inc
cmp
pusha
sti
xchg
scas
cmp
mov
and
or
and
das
adc
mov
mov
pop
sub
cmp
cmp
shl
sbb
inc
add
dec
jbe
mov
sbb
sar
loope
xchg
or
jmp
ins
dec
push
test
ins
(bad)
call
sar
retf
xchg
aaa
cmps
pop
inc
dec
fwait
les
sti
dec
cld
pop
mov
adc
stos
or
call
mov
mov
xor
sbb
inc
push
retf
mov
xchg
mov
shl
jbe
pop
test
(bad)
jmp
dec
fs
push
cmp
jl
mov
jns
mov
sub
xchg
mov
ret
mov
fbld
aam
lahf
mov
mov
and
sbb
imul
jle
cmps
jnp
sub
pop
stc
adc
scas
add
or
into
cmp
xchg
xor
push
mov
or
jl
and
cmps
ss
lods
std
ror
adc
mov
mov
push
pop
out
cmp
iret
jl
jecxz
pop
sahf
ss
outs
jl
icebp
out
mov
sub
cmp
call
pop
jns
push
repnz
lds
daa
popa
call
mov
sub
dec
mov
int
sahf
rcl
push
mov
frstor
dec
mov
mov
mov
push
stc
pop
cmp
mov
lds
je
xchg
pop
outs
push
cmc
cmp
dec
jp
ins
cmp
xor
sbb
or
sbb
ds
and
fcmovb
inc
and
test
jg
or
jg
sbb
inc
test
fidivr
cmp
(bad)
dec
xchg
ret
jp
and
shl
mov
xchg
mov
out
aad
jle
mov
repnz
sub
sti
jmp
sub
(bad)
icebp
or
inc
push
mov
enter
mov
cmp
cdq
cmp
in
mov
cmp
xchg
inc
and
pushf
mov
out
fistp
adc
mov
imul
sbb
jbe
jmp
jb
cmp
sub
or
ficom
lahf
int
inc
cmp
pusha
jno
dec
xor
dec
mov
(bad)
xchg
stc
jmp
jmp
jmp
dec
mov
loopne
inc
mov
inc
pop
cmp
and
mov
and
daa
fldenv
jp
sbb
xchg
fisub
jns
nop
mov
pop
movs
das
sahf
sar
xor
mov
jo
(bad)
adc
pusha
pop
jno
xchg
std
shl
push
aas
cmp
daa
xor
sbb
loope
jle
shl
push
leave
mov
push
mov
push
loopne
stos
xor
push
repz
jb
and
xor
hlt
fisub
jg
mov
div
cmps
inc
test
sahf
inc
mov
inc
lods
and
xor
int
dec
mulps
inc
pop
or
inc
in
add
pusha
and
and
push
sti
push
setge
push
pop
inc
test
mov
js
jbe
xor
enter
les
(bad)
sub
inc
hlt
(bad)
ss
ins
popa
inc
inc
pop
dec
leave
push
or
cmp
pop
cmp
sub
fadd
sbb
cwde
mov
cmps
sub
mov
xchg
push
jmp
sbb
js
jmp
xlat
test
inc
hlt
stos
repz
jecxz
pop
or
cli
pop
mov
xor
xor
arpl
call
adc
fsub
(bad)
cmp
popf
cmps
inc
out
add
(bad)
icebp
fsubr
(bad)
xlat
or
mov
inc
test
out
(bad)
not
inc
push
mov
mov
inc
ror
and
mov
inc
cdq
mov
mov
xchg
jae
mov
stc
jg
mov
jge
dec
lods
add
add
(bad)
xor
jl
mov
xchg
pusha
and
cmp
fsubp
inc
call
sub
icebp
rcr
inc
stc
int3
or
push
pop
xor
fsub
or
pop
mov
pop
xchg
lds
test
sbb
inc
add
dec
sbb
mov
jecxz
repnz
lock
aad
lods
push
mov
nop
stos
xchg
outs
pop
stos
xor
stc
lea
jnp
xchg
inc
and
call
cmp
cld
xor
sbb
xor
push
shl
push
inc
inc
mov
sbb
add
mov
(bad)
aad
ret
lods
ret
jl
pop
cdq
sub
add
cmps
xchg
mov
mov
or
lods
sub
test
mov
les
test
adc
ja
pop
mov
add
popf
bound
sbb
sub
pop
pop
ret
add
movs
cli
enter
jnp
prefetch
and
xor
jns
xchg
pop
shl
repnz
pop
push
cmps
icebp
lea
bound
pusha
push
lea
cmp
xor
test
sahf
jb
adc
inc
adc
jns
in
adc
in
push
xchg
cld
ins
in
xor
(bad)
mov
dec
add
pop
neg
lahf
push
leave
imul
cmp
(bad)
or
jg
sub
inc
gs
cli
push
xchg
scas
mov
sub
push
hlt
mov
out
enter
into
add
rcr
shl
pop
xchg
inc
cwde
test
xor
push
xchg
scas
lods
dec
cmp
leave
lds
or
jecxz
xchg
lods
mov
inc
bound
cmp
mov
sbb
inc
(bad)
pop
shl
mov
mov
xor
mov
cmp
shl
inc
xor
shl
cmps
add
shl
or
pop
xor
mov
sbb
test
fcmove
inc
push
and
dec
jb
mov
cmp
pop
mov
push
inc
fistp
add
int3
inc
shr
mov
fild
and
ja
call
ins
push
mov
(bad)
out
into
repnz
cdq
mov
push
adc
inc
and
fistp
and
stc
outs
inc
mov
loop
repnz
cs
aad
cmp
sbb
cmp
test
pop
dec
push
sub
cmp
sub
jecxz
and
stc
jmp
push
sub
pop
repnz
cmp
adc
loope
mov
jmp
das
mov
ins
sub
sbb
(bad)
xlat
popf
xor
fmul
add
cmp
arpl
out
call
pop
jne
cli
cmp
mov
shl
shl
ror
or
cmp
xchg
imul
xchg
or
ss
test
jnp
leave
sub
js
data16
shl
fisttp
iret
jne
mov
jg
std
fucomi
(bad)
or
inc
cmps
xchg
jb
fiadd
cmp
inc
out
ror
dec
aad
fimul
frstor
sbb
stos
pop
test
xchg
shr
ds
push
data16
es
sub
xchg
or
shl
jno
add
or
jg
jbe
inc
pop
push
cmp
stc
mov
mov
sub
xor
and
push
loopne
cmp
cmp
pop
inc
push
fdivr
pop
xchg
es
push
sub
jo
jns
cmp
mov
and
les
sub
rol
nop
test
mov
retf
dec
inc
sub
aam
hlt
lods
imul
scas
ins
arpl
ins
push
adc
jns
ins
loopne
sahf
nop
fs
mov
or
ror
pop
xchg
sub
fisub
mov
xor
sub
fs
lods
je
cmp
into
jo
out
(bad)
sar
push
fdivr
sub
mov
mov
stos
dec
xor
loope
pop
xlat
xchg
cmp
pop
xchg
loopne
sub
int3
(bad)
xor
sub
daa
push
test
stc
loope
mov
mov
cmps
dec
fdiv
mov
mov
mul
int
push
jmp
fcomi
cdq
mov
cmp
lahf
xlat
test
pop
jg
xor
sbb
retf
xor
or
std
pop
xchg
dec
loopne
loop
jnp
shl
cwde
mov
repnz
mov
pop
pusha
in
into
jecxz
xor
add
cmp
cmp
shl
stos
je
retf
push
pop
xchg
pusha
das
les
mov
fistp
mov
ds
cli
jno
mov
idiv
adc
stos
pushf
mov
cmp
les
fdiv
ins
push
repz
retf
and
add
xchg
je
pusha
pop
les
push
cmp
pop
clc
outs
push
xor
loop
push
in
daa
cmp
jo
mov
mov
aam
or
(bad)
inc
call
push
xchg
inc
fisubr
cmp
sar
pop
xor
and
sub
lods
xchg
push
div
loope
cmp
xor
mov
inc
and
cmp
pop
push
test
mov
scas
push
cmp
dec
or
cmp
imul
pop
mov
mov
rcl
pusha
fisub
push
aas
popa
pop
dec
div
push
xchg
dec
inc
sbb
cmp
scas
mov
jnp
xor
mov
aam
imul
and
je
mov
xchg
adc
jno
xchg
ins
xchg
imul
push
cmp
and
or
push
jb
retf
lahf
call
mov
loopne
jle
xchg
or
pop
adc
test
mov
test
aad
cmp
jno
xchg
xor
sbb
mov
movs
ins
mov
out
push
aaa
in
fbstp
jg
gs
ds
jmp
pop
ins
xor
sbb
or
pop
pusha
ret
aas
fwait
stos
nop
mov
pushf
mov
sub
jnp
mov
inc
and
test
sub
jne
xor
prefetch
sub
jle
and
shl
xor
bound
cdq
enter
cmp
push
lock
xor
push
in
dec
jne
inc
inc
ret
mov
push
inc
sti
jo
cwde
push
cmp
push
mov
cmp
push
and
xor
mov
fiadd
mov
mov
dec
nop
mov
inc
mov
or
pop
dec
mov
cmp
pop
sub
mov
cmc
add
stc
or
mov
jns
inc
jmp
js
data16
sub
add
ins
out
mov
push
mov
sets
call
cmp
add
cmp
dec
loopne
mov
loope
imul
(bad)
jns
or
jae
adc
aaa
aam
sar
mov
outs
cmp
xchg
aam
addr16
mov
push
xchg
ja
push
and
cli
mov
xchg
aas
jns
pop
adc
movs
cmp
or
add
div
add
and
loope
fs
call
inc
inc
mov
pop
inc
xlat
arpl
repnz
inc
enter
sub
stc
add
das
aam
out
cli
out
jecxz
lock
and
mov
in
mov
out
adc
adc
mov
add
inc
jbe
pop
popf
mov
popf
cmp
dec
and
sbb
xor
mov
jno
cmp
push
cmp
lahf
inc
push
xchg
push
push
and
cmps
aad
add
inc
push
fild
out
std
popa
dec
xor
mov
sbb
xchg
jne
inc
scas
sbb
pop
lea
out
(bad)
cli
cdq
pop
gs
enter
fiadd
call
out
sahf
dec
cdq
inc
pop
mov
out
lds
into
pop
les
int3
cli
enter
inc
mov
pop
pusha
cdq
lods
xor
adc
pop
mov
out
ret
scas
dec
xchg
mov
sub
xor
and
xchg
jmp
lods
push
ja
sub
int3
(bad)
xchg
jns
adc
popa
push
ror
mov
inc
pusha
int
stos
jmp
arpl
pop
test
sbb
nop
in
xor
stos
sar
nop
dec
jnp
ret
sub
push
push
imul
adc
(bad)
jb
mov
jp
add
cmp
jns
pop
xor
jg
retf
mov
aam
xchg
test
pop
cwde
enter
(bad)
mov
ss
cmps
push
fild
mov
sub
mov
(bad)
jecxz
(bad)
fs
jmp
pop
and
xor
jmp
mov
adc
pusha
ins
cmp
adc
rcr
popf
adc
(bad)
mov
jge
xor
neg
or
cmp
sbb
ror
fild
aas
jnp
fadd
mov
(bad)
sbb
jmp
std
sti
adc
cmps
mov
in
(bad)
cmp
dec
retf
inc
(bad)
into
mov
jmp
adc
ret
sub
jmp
call
jns
popf
xor
leave
xor
mov
std
jno
in
inc
mov
fnstcw
test
cmps
rol
xchg
pushf
push
out
mov
pop
fdiv
mov
ds
mov
fadd
cld
call
inc
mov
pop
aam
or
pop
das
test
xor
or
dec
jg
ds
push
pop
(bad)
mov
mov
dec
mov
pop
sbb
fld
jmp
sbb
xchg
ss
rol
jns
jle
sub
loopne
xchg
push
retf
mov
test
jl
cs
inc
push
sahf
mov
sub
or
fld
sti
das
or
jge
retf
leave
es
and
push
leave
bound
jmp
inc
mov
cmp
sbb
push
mov
and
adc
dec
pushf
sbb
gs
xchg
add
pop
xor
retf
lds
jge
ret
scas
les
mov
or
dec
add
dec
mov
addr16
les
in
into
es
ret
push
jbe
add
mov
fdivr
mov
xchg
ss
jns
jno
cmp
xchg
xchg
and
sbb
imul
mov
loopne
bound
fnstcw
xor
outs
jg
je
sub
imul
pop
loop
inc
(bad)
in
mov
ja
push
aad
mov
cli
fsubp
inc
and
push
xor
add
movs
rcl
loop
cmp
inc
out
mov
test
inc
xchg
pop
xlat
cmp
into
dec
mov
add
je
mov
or
and
inc
(bad)
test
or
xor
inc
shl
inc
inc
lahf
leave
adc
not
add
cmp
ja
inc
ror
add
sub
sti
cdq
mov
call
pushf
imul
add
out
or
ret
inc
jns
ror
mov
stos
or
(bad)
push
clc
icebp
int
inc
and
and
cmp
dec
cmp
fwait
gs
clc
inc
scas
repnz
cmp
push
(bad)
push
jb
inc
inc
cld
movs
xchg
jo
cmp
mov
aad
sbb
div
mov
xor
lods
sbb
ins
pop
dec
imul
jbe
retf
sbb
mov
sti
aas
sub
fcmove
jmp
stos
inc
pop
(bad)
cmp
inc
mov
cmp
int
adc
cmp
mov
mov
inc
sbb
mov
push
fnstsw
push
test
aam
fisub
(bad)
movs
inc
push
mov
scas
sub
icebp
fdivr
sbb
push
aas
and
adc
sbb
clc
int3
shl
mov
jp
jbe
jne
sbb
cmp
cs
(bad)
jb
mov
scas
and
int3
mov
nop
push
add
add
sbb
int
and
ins
sub
mov
push
jns
scas
xchg
retf
outs
adc
sbb
jl
(bad)
push
sar
div
pop
dec
aaa
repz
(bad)
pop
sbb
or
and
pop
aaa
outs
loope
jb
mov
inc
cdq
movs
push
xor
xchg
mov
xchg
cdq
lds
pop
fild
test
xchg
(bad)
xor
or
out
and
jns
(bad)
push
fadd
ds
lods
sub
cmp
int
addr16
sbb
in
fsub
jp
test
sbb
repz
inc
inc
inc
jns
mov
jb
das
sub
ss
ja
(bad)
cmp
scas
dec
inc
and
ret
ret
inc
lds
xor
out
lea
xchg
jne
mov
dec
iret
xlat
adc
push
pop
jg
sbb
das
cmp
pop
jns
shl
fwait
(bad)
retf
add
xor
add
dec
mov
scas
inc
cmp
add
inc
lods
push
dec
inc
mov
or
and
inc
call
into
(bad)
sbb
cs
sbb
inc
jnp
or
pop
stc
cmps
pop
push
lea
xor
mov
add
xchg
inc
inc
es
outs
stos
inc
xor
pop
movs
popf
je
leave
push
inc
inc
lock
or
and
and
arpl
jp
lods
dec
inc
xor
adc
cmp
(bad)
lock
gs
mov
mov
and
inc
sbb
inc
(bad)
clc
pop
cmp
(bad)
pop
cwde
inc
int
das
shl
fwait
jg
out
push
mov
inc
inc
jl
(bad)
cli
test
sub
inc
sbb
rcl
fcom
push
push
retf
das
sub
xor
mov
adc
inc
test
xor
in
repnz
enter
mov
push
(bad)
shl
fs
leave
inc
int
or
inc
lods
mov
pop
(bad)
and
(bad)
iret
cmp
jmp
sti
inc
lock
adc
adc
sahf
inc
mov
stos
mov
dec
cmp
loope
cmp
pusha
iret
and
and
or
push
cli
fnsetpm(287
or
outs
clc
adc
mov
inc
outs
mov
xor
fs
inc
addr16
ret
cmp
cmp
test
add
fdiv
out
adc
cmp
dec
out
jmp
dec
hlt
sbb
adc
mov
inc
xchg
retf
or
or
mov
cmp
(bad)
aas
dec
scas
mov
ja
test
int
xlat
inc
cmp
ins
lock
add
jbe
push
mov
aas
fucomi
inc
das
pop
mov
lahf
stc
xchg
inc
add
std
aas
(bad)
inc
and
lods
jle
add
sbb
jbe
cmp
mov
xchg
or
fwait
loopne
mov
iret
cmc
ins
push
ror
dec
fnsave
inc
adc
pop
xchg
mov
add
aad
jns
mov
or
mov
sbb
nop
cmp
leave
inc
neg
cmp
cmp
out
loope
int
jl
sub
push
mov
sbb
dec
sbb
mov
jno
or
cmc
adc
mov
mov
jp
or
out
sub
cmp
cmp
js
(bad)
lods
nop
scas
mov
mov
xchg
sbb
prefetch
into
mov
or
cmp
mov
mov
loope
push
sti
jge
mov
int3
ror
loopne
push
and
aaa
sti
in
cmp
repnz
sar
aas
push
jmp
mov
mov
cmps
shl
xchg
arpl
xchg
(bad)
repnz
scas
mov
sub
adc
fs
jbe
fst
add
js
xchg
add
mov
jmp
sbb
and
jmp
jns
push
cli
mov
mov
mov
inc
lea
ss
and
add
fsub
pusha
mov
aad
jmp
icebp
cmp
dec
adc
jns
aam
or
scas
ds
nop
push
cmp
cmc
xchg
test
fdiv
dec
jecxz
cmp
mov
pop
or
ja
sbb
add
push
sbb
jnp
add
add
lock
push
popf
xchg
adc
jl
js
and
cmps
scas
and
pop
pushf
cli
scas
jns
out
push
mov
stos
mov
xchg
stc
jne
bound
mov
jno
ds
cmp
adc
inc
popa
call
popf
or
inc
jno
(bad)
cmps
(bad)
sub
arpl
or
inc
cmps
popa
push
dec
push
dec
fs
jmp
jecxz
cmp
mul
and
jp
ja
rcr
std
jmp
inc
inc
int
jbe
pop
inc
dec
sub
mov
or
(bad)
cmp
mov
jge
in
and
stos
call
lods
test
jo
jb
jae
in
jnp
jne
(bad)
cmp
cmp
cwde
jg
xchg
jp
mov
mov
fldcw
scas
jo
daa
in
xor
loop
in
hlt
out
clc
xchg
push
outs
cmp
pop
mov
scas
cmp
dec
cmp
pop
cmp
in
inc
repz
shr
cmc
aaa
jl
pop
rcl
cmp
imul
popf
inc
aam
ret
std
cmp
ds
sub
fldcw
inc
jge
out
fmul
fxch
in
inc
jmp
mov
cmps
aaa
pusha
hlt
cdq
jp
addr16
not
xor
pop
sub
int
push
(bad)
lods
inc
loopne
(bad)
retf
xchg
cmp
sbb
inc
cdq
(bad)
cmp
mov
cmp
sbb
inc
push
add
push
inc
jbe
add
dec
mov
or
call
mov
pop
mov
rol
sbb
add
fisttp
jle
dec
inc
and
int
outs
dec
jp
inc
outs
pop
sahf
pop
(bad)
gs
jge
inc
inc
call
push
inc
popa
outs
pop
out
push
xchg
xchg
push
mov
ret
fiadd
and
mov
add
es
(bad)
neg
mov
ins
mov
gs
out
sbb
fstp
add
jno
jns
fld
push
mov
fsubrp
(bad)
jo
push
gs
imul
adc
(bad)
and
dec
rcl
or
add
jns
push
and
pop
cmps
jns
jns
jle
sar
xor
stc
mov
aas
cmp
add
cmp
fwait
shr
int3
mov
je
xchg
sbb
or
pop
icebp
inc
fnstsw
push
dec
and
pop
jg
add
(bad)
aad
(bad)
push
sub
pop
es
ins
fstp
inc
adc
cmp
(bad)
mov
sub
and
pop
xor
mov
adc
cmp
inc
or
push
pop
and
cmp
xor
dec
cmp
int
sbb
xchg
xchg
jo
mov
mov
sbb
or
and
cmp
xor
mov
mov
and
jmp
inc
hlt
cmp
inc
cmp
enter
xchg
lods
imul
mul
shr
fadd
and
add
xor
cmc
int3
nop
xchg
push
inc
or
cld
cmp
imul
daa
jecxz
push
inc
jp
cmp
mov
cmp
xor
cdq
fs
inc
mov
add
test
ret
and
in
push
mov
inc
clc
cmp
imul
ret
xor
jbe
js
test
jl
push
mov
sub
bound
jg
(bad)
popw
inc
jle
inc
push
(bad)
sti
jo
pop
adc
xchg
hlt
xchg
cwde
scas
scas
inc
inc
lea
xor
dec
xchg
pop
call
fiadd
mov
mov
jo
pusha
mov
adc
push
dec
cmp
xchg
inc
cmp
shr
fidiv
add
mov
jle
int3
inc
jl
clc
mov
mov
xor
adc
cmp
cmp
mov
pop
fcomp
sub
lss
add
scas
outs
cmp
leave
enter
(bad)
pusha
arpl
inc
mov
in
sahf
jp
add
ret
sub
scas
rol
cs
mov
hlt
sub
div
push
xor
inc
xchg
xchg
retf
cmp
mov
sbb
xor
jg
test
cmp
and
jbe
je
aas
pop
jns
dec
or
inc
xchg
mov
xchg
lea
xor
outs
out
inc
fistp
mov
inc
call
nop
cmp
inc
jmp
xor
mov
stc
cmp
and
inc
xor
inc
sbb
loope
out
pop
ror
clc
jb
inc
(bad)
or
mov
out
ret
inc
pop
mov
sbb
jecxz
call
mov
pop
push
jno
stos
cdq
cli
sti
sub
lods
into
xor
push
mov
inc
sbb
stos
cmp
inc
xor
(bad)
or
push
xor
mov
inc
test
mov
jno
mov
fmul
ret
push
xor
cwde
imul
or
cmp
sub
lods
aaa
test
push
out
inc
and
stos
dec
or
sub
fsubp
push
xor
lock
shl
inc
pop
dec
ret
rcr
inc
out
adc
or
movs
inc
mov
mov
mov
lea
hlt
sbb
loop
rol
fcom
fiadd
sbb
(bad)
pop
icebp
fs
add
je
mov
xor
xchg
ds
les
inc
aam
adc
cmp
push
nop
xchg
mov
push
mov
loopne
sub
outs
scas
stos
outs
outs
cdq
cmp
sahf
inc
pushf
mov
(bad)
adc
pop
pop
mov
shr
das
in
push
xchg
cmp
and
inc
loop
mov
outs
inc
xor
sbb
ret
cs
push
sbb
and
rol
mov
out
aas
hlt
scas
inc
int3
push
cmp
js
stc
and
adc
mov
and
repz
test
cs
mov
xlat
sub
cmps
gs
push
cmp
mov
mov
pop
(bad)
and
xchg
std
lock
scas
enter
xor
sar
dec
sub
mov
loopne
mov
cmp
cli
pusha
in
mov
jp
pop
jmp
retf
(bad)
cld
pop
les
sub
(bad)
cmp
pop
xor
or
pop
mov
lock
shl
sub
dec
pop
dec
loope
mov
xchg
sub
sbb
(bad)
push
dec
(bad)
mov
xor
int3
fmulp
inc
(bad)
retf
rol
loopne
sub
fldlg2
loop
scas
push
iret
add
stc
inc
push
mov
cwde
sbb
mov
jbe
xor
int3
repnz
sub
pop
fnstsw
dec
(bad)
rol
xchg
sbb
(bad)
mov
dec
cmp
pop
add
xchg
xchg
ror
and
inc
pop
inc
fdiv
int
inc
pop
sar
inc
inc
jne
sbb
xchg
scas
sub
cmp
mov
jnp
jnp
sbb
xchg
stos
pop
enter
inc
inc
cmps
scas
or
rol
mov
(bad)
sub
cmp
push
add
popa
mov
pop
(bad)
mov
sub
add
div
mov
sub
js
mov
push
dec
pop
jmp
(bad)
dec
ret
inc
repz
or
push
cmp
xor
adc
jmp
or
jne
add
mov
inc
pop
scas
ins
jp
push
dec
xchg
push
mov
inc
sar
lds
inc
lods
add
call
into
add
ja
push
pop
mov
movs
or
mov
push
push
mov
mov
adc
lea
push
cmp
test
or
inc
nop
or
out
sahf
cmps
stos
inc
inc
test
mov
pop
int3
pop
in
xor
jp
jnp
push
dec
cmp
xor
inc
ins
push
adc
das
or
mov
aad
lea
push
inc
xor
int3
jbe
mov
ins
pop
jnp
add
jmp
in
jp
jg
sar
(bad)
rcl
stos
or
and
sbb
into
icebp
inc
mov
movs
mov
dec
pop
je
mov
fdivr
pop
cli
jbe
sar
inc
fimul
lods
push
cmp
inc
xor
lods
cmp
cmp
inc
daa
jno
jp
xchg
fnstcw
cmp
sub
xor
(bad)
test
add
sub
adc
shl
sub
out
mov
retf
sub
ret
push
mov
mov
pop
sbb
push
jle
mov
sbb
xor
stc
out
outs
sbb
sub
scas
nop
leave
scas
or
int
xor
mov
pop
xor
test
add
sbb
push
fistp
sub
icebp
(bad)
cmp
out
in
scas
fs
mov
pop
ret
call
xor
push
adc
sbb
in
test
or
cmp
jno
retf
mov
leave
push
cmp
aam
pushf
push
sub
xor
pop
jmp
xchg
imul
js
jg
(bad)
stos
mov
jmp
bound
cmp
or
and
jae
sub
loopne
mov
adc
ss
jnp
push
je
jge
addr16
mov
adc
arpl
call
cli
add
mov
pusha
dec
pop
dec
push
inc
pop
adc
push
aam
int3
retf
into
or
jmp
aam
fst
add
jns
ror
sub
das
sbb
inc
popa
popf
mov
pushf
ret
jecxz
xchg
sub
push
inc
push
dec
push
int
sub
xchg
retf
hlt
mov
push
inc
scas
push
lods
pop
leave
outs
mov
movs
inc
or
sub
pop
int3
pop
rcr
and
push
adc
es
cmp
xchg
inc
test
mov
or
sub
sub
shr
sbb
enter
nop
xlat
inc
mov
jmp
inc
inc
dec
push
(bad)
movs
cmp
out
cli
rol
push
mov
shl
fbld
ret
or
movs
xchg
adc
imul
mov
pushf
(bad)
aam
(bad)
mov
jns
shr
inc
add
sti
aas
pop
xchg
aam
(bad)
mov
test
xor
ret
hlt
aaa
adc
ins
out
bound
inc
repz
sub
xchg
jmp
lds
cmp
push
in
dec
pop
ss
pop
jmp
mov
xor
add
inc
sbb
xor
jns
hlt
(bad)
out
ds
cmps
xchg
or
and
lock
cmc
mov
fild
shl
mov
mov
popa
sub
shl
mov
cmp
frstor
mov
pusha
mov
fs
cmp
cld
shr
ror
xor
stc
call
mov
push
xchg
div
and
and
sub
seta
push
std
jl
imul
jnp
push
icebp
retf
push
xor
sbb
add
(bad)
daa
rcr
inc
xchg
in
rcl
mov
icebp
sti
scas
inc
nop
mov
inc
inc
adc
sbb
in
xchg
pop
popa
and
xchg
ror
sbb
(bad)
push
cmc
and
mov
jecxz
out
xor
mov
pushf
arpl
popf
jae
fld
add
cmps
pop
add
inc
dec
push
lea
cmp
dec
dec
stc
fdivr
mov
push
aas
cdq
xchg
clc
imul
pop
out
jg
or
sbb
cli
jmp
pop
(bad)
inc
cdq
call
pop
push
enter
imul
jo
aad
icebp
cli
mov
xor
inc
sbb
jbe
jae
inc
in
sbb
mov
inc
pop
inc
pop
inc
jns
lds
out
ds
rcr
and
or
xchg
and
add
mov
enter
retf
inc
cwde
sbb
inc
cmp
jo
iret
sub
push
popf
fild
inc
mov
dec
xor
ret
arpl
shl
outs
sub
test
ret
mov
inc
cmps
cmp
aam
push
add
pop
aas
ror
cli
leave
(bad)
fsubr
das
int
inc
int
jecxz
push
mov
pop
sbb
ins
pop
xor
sbb
inc
std
mov
cmps
inc
jnp
lods
idiv
cmc
push
xchg
cmp
(bad)
call
(bad)
lds
inc
mov
sbb
test
cld
leave
pop
sahf
mov
stos
pop
dec
adc
nop
dec
xchg
call
push
or
pusha
lds
retf
pop
iret
or
fsubr
cmp
inc
dec
nop
fcmovnbe
xor
xchg
mov
mov
or
pop
push
jne
pop
test
mov
or
push
cmp
add
mov
aas
adc
cmp
dec
fisttp
dec
pop
jbe
inc
inc
(bad)
xor
dec
cmp
add
clc
and
rcl
(bad)
daa
call
xor
xchg
mov
loope
fdivr
pusha
inc
mov
shl
bound
sti
scas
inc
repz
push
fmul
aam
jmp
in
repz
adc
jno
adc
jge
lds
xchg
fnsave
cld
pop
xchg
test
inc
imul
ret
bound
adc
cmp
pop
cmps
xchg
add
cli
add
add
dec
mov
and
mov
pushaw
pop
mov
out
adc
push
jmp
in
push
add
clc
fidiv
cmp
cmp
in
jnp
out
cdq
mov
js
lea
or
and
or
inc
xor
test
fisttp
sbb
cmp
(bad)
(bad)
mov
push
lods
inc
je
pop
inc
std
mov
cmps
bound
add
inc
sub
jne
lods
int3
mov
xchg
cwde
jae
inc
aad
fmul
inc
inc
ficomp
push
sti
iret
popf
les
icebp
sbb
out
clc
mov
inc
je
xor
mov
adc
jmp
out
or
ja
xor
dec
xchg
xchg
jo
mov
inc
mov
jmp
ins
jnp
pop
fidivr
fisttp
jmp
xor
cmp
mov
aad
cld
test
test
(bad)
cs
mov
push
cmp
movs
xor
mov
ficomp
sahf
or
clc
mov
arpl
add
dec
xor
movs
in
adc
jle
in
cmp
xor
cmp
mov
sar
dec
test
cmp
xchg
stos
sbb
adc
cwde
shr
outs
lods
add
add
jp
pop
push
mov
jns
inc
mov
jnp
or
lea
mov
xor
in
loop
setnp
daa
sti
pop
repnz
jne
sub
inc
jle
out
enter
dec
ins
push
push
mov
push
push
xor
ret
idiv
dec
into
or
stc
imul
nop
sahf
inc
jbe
ja
or
repz
test
mov
xchg
inc
shl
aaa
or
dec
aam
xor
inc
mov
sbb
mov
nop
cmp
mov
sub
or
pop
or
js
mov
xor
or
popf
out
sub
fidivr
mov
(bad)
shl
mov
retf
pop
push
and
jmp
pop
js
mov
je
(bad)
je
rcr
mov
jae
sub
mov
sbb
or
sub
enter
fcom
in
adc
mov
fs
xchg
pop
push
test
fs
xor
and
add
xor
cmp
xchg
xchg
sub
stos
(bad)
mov
pop
pusha
pop
out
fs
stc
outs
les
out
cs
dec
inc
sahf
jge
loope
sbb
fs
cdq
inc
rol
fcmovnu
sub
sbb
sar
test
icebp
jl
mov
mov
jmp
loopne
mov
lods
sub
aam
xor
sar
leave
les
fst
pushf
ret
push
iret
scas
lock
or
stc
xor
loop
shr
retf
jns
in
jae
mov
and
(bad)
sti
sub
adc
imul
shl
xor
add
pop
aas
pop
jl
mov
out
ds
pop
cmp
or
js
mov
and
inc
mov
nop
xchg
(bad)
scas
dec
jnp
xlat
cmp
inc
push
and
and
mov
inc
dec
pop
inc
push
dec
pop
dec
pop
inc
dec
movs
out
in
cmp
loopne
daa
pop
adc
add
pop
sbb
test
js
lods
xor
inc
xchg
enter
in
cmp
aaa
ror
test
push
movs
dec
sub
(bad)
out
das
pop
test
sbb
xor
inc
jp
jmp
pop
jns
push
dec
mov
mov
and
push
and
mov
inc
or
add
stc
xchg
retf
sbb
repz
xor
jns
shl
or
gs
cmp
inc
cmps
inc
jae
test
dec
ret
scas
or
shr
mov
mov
xchg
movs
or
mov
cmps
sti
cmp
test
std
xor
xor
inc
das
pop
jnp
pop
(bad)
adc
stos
(bad)
cmp
inc
shr
aas
cs
mov
inc
and
or
repz
xlat
iret
pop
jl
cmp
xor
xchg
push
rcr
push
jno
gs
popf
pop
mov
sbb
test
pop
add
or
mov
(bad)
test
push
cmp
inc
fwait
div
push
or
inc
hlt
sbb
fwait
jo
adc
and
adc
pop
(bad)
adc
(bad)
push
retf
mov
sbb
inc
sbb
fsub
add
push
add
push
inc
in
mov
xchg
jbe
dec
outs
jle
mov
in
jmp
aas
jge
jnp
mov
scas
in
jl
jns
mov
xchg
add
inc
xor
inc
adc
inc
xor
in
adc
jge
sub
cs
push
dec
test
pop
sbb
loopne
jmp
(bad)
sahf
(bad)
int
out
inc
cmps
push
pop
push
lds
mov
or
fisub
mov
add
xor
scas
xchg
stc
ffree
mov
js
cmp
hlt
into
fwait
and
jp
mov
nop
test
push
pop
sub
(bad)
je
pusha
jns
pop
jl
xchg
inc
mov
call
jge
mov
push
sbb
dec
xor
stc
jecxz
shl
daa
xor
fs
push
inc
add
daa
sub
or
cmps
and
stc
mov
je
mov
rol
lock
mov
sbb
inc
(bad)
aaa
adc
ror
mov
not
inc
ds
enter
xor
test
iret
sbb
sub
out
jo
int3
xor
movs
shl
cmc
jp
fs
jno
jb
aas
jmp
sbb
rol
lock
jge
loop
push
call
sbb
imul
mov
stc
or
leave
and
mov
adc
xor
or
inc
ficom
sub
dec
jb
lock
std
or
sub
jnp
js
push
add
dec
mov
je
jno
(bad)
push
sbb
and
sti
inc
in
jno
outs
push
(bad)
in
pop
sub
mov
pop
mov
sbb
jo
pop
or
sub
sbb
dec
adc
jb
jns
sbb
bound
xor
idiv
dec
xchg
mov
lods
mov
push
push
sub
pop
enter
dec
pop
iret
jl
pop
xor
inc
outs
fsubr
mov
sub
sub
popa
dec
dec
cmp
inc
xchg
out
dec
dec
cmp
xor
loope
sahf
je
lock
mov
jmp
aas
cmp
push
dec
sub
mov
inc
adc
sbb
jbe
out
dec
xor
cmp
mov
enter
mov
or
jg
fwait
std
push
push
out
test
sub
sar
lods
push
jl
js
ret
sub
cdq
xor
data16
mov
jg
in
cmp
out
mov
jns
inc
jno
das
push
sub
pop
sub
add
inc
ins
jns
out
mov
mov
mov
push
shr
je
cmp
pop
pop
outs
stos
pop
fwait
popf
jo
sub
jg
sbb
jmp
jae
or
cdq
push
jle
dec
mov
(bad)
or
adc
ret
xchg
cmp
jmp
repz
shl
les
mov
mov
adc
fstp
mov
xor
enter
test
jl
ins
inc
xchg
(bad)
sbb
mov
test
mov
fucomp
rep
and
cmp
ja
sti
and
lahf
xchg
or
out
js
imul
movs
inc
or
push
in
fiadd
mov
mov
mov
(bad)
loop
fwait
pop
arpl
add
mov
and
inc
mov
xchg
lea
jmp
jb
pop
add
cmp
pop
mov
and
ss
das
inc
jl
clc
ins
xchg
into
adc
les
shr
and
data16
add
and
jnp
inc
add
sbb
cmp
or
and
retf
or
sahf
jnp
rol
pop
and
cli
call
jne
aam
pop
pop
mov
inc
jb
jp
sbb
into
clc
xor
mov
pop
ret
mov
lea
inc
movs
sbb
dec
std
(bad)
mov
xchg
ins
xor
mov
mov
fbld
retf
jno
pop
ins
jmp
xchg
lods
outs
sahf
scas
cmp
pop
data16
jl
bound
(bad)
mov
or
add
push
add
xor
shl
and
in
sti
mov
aas
mov
jl
repz
or
mov
mov
cmp
inc
dec
mov
sbb
xchg
and
cdq
outs
sub
sub
jl
sti
pop
inc
sbb
movs
inc
xor
std
adc
jge
call
aad
int
loope
(bad)
ss
xlat
stc
out
fs
wrmsr
(bad)
call
es
in
inc
cmps
mov
lods
and
jo
xchg
not
rol
dec
call
ds
mov
inc
push
mov
cmp
add
mov
ret
cmp
sbb
jecxz
in
inc
mov
xchg
cmc
cdq
jbe
in
jp
add
mov
mov
mov
dec
pop
out
sbb
js
dec
jg
mov
call
shl
dec
jae
pop
aaa
jle
mov
repz
xor
mov
out
mov
fdivr
ja
cs
loopne
std
ds
es
push
mov
inc
pop
mov
pop
mov
cli
outs
fldcw
sar
jae
fsub
mov
jbe
fincstp
jns
cmp
jge
jmp
push
push
jg
jnp
xor
mov
lahf
(bad)
rcr
mov
xor
es
jge
(bad)
xchg
js
jp
mov
sbb
mov
mov
das
repz
stos
pop
mov
push
aas
jmp
mov
test
xor
(bad)
call
repz
jge
pop
retf
push
add
mov
fsubr
adc
or
cmp
jge
xor
fst
shl
mov
push
js
jns
mov
js
je
sub
xlat
out
ret
mov
mov
nop
cmp
cmp
ret
push
xor
sbb
push
stos
fsubr
jle
sar
pop
cwde
mov
cvtps2pi
push
fwait
cmp
fistp
mov
not
mov
cmp
ret
adc
(bad)
(bad)
sub
push
cmp
movs
jg
inc
sub
push
inc
jb
and
inc
nop
sar
sbb
scas
jo
sub
sub
aam
inc
xchg
lods
or
mov
cdq
repnz
nop
sub
push
popa
les
(bad)
jecxz
(bad)
call
sbb
dec
mov
movs
pop
mov
jmp
jp
xor
push
inc
xchg
adc
mov
out
data16
lods
inc
mov
stos
adc
ds
ja
and
and
out
scas
sbb
sti
pop
cwd
inc
sbb
in
xor
gs
rol
cmp
add
cdq
or
shl
(bad)
(bad)
out
inc
(bad)
test
inc
sahf
scas
ins
pop
dec
fidivr
or
mov
cmp
pop
inc
mov
pop
js
out
scas
retf
ins
pop
or
aad
and
stc
jecxz
push
xlat
mov
cmp
fiadd
ins
sqrtps
outs
lds
repnz
xor
pushf
fidivr
dec
shl
jne
xor
mov
xchg
inc
adc
fimul
dec
into
sub
mov
imul
stc
dec
sub
les
xchg
iret
jo
inc
ins
repz
cs
and
cmp
adc
inc
dec
mov
cmps
sub
push
ret
(bad)
xor
xor
mov
cmp
shl
fdiv
mov
inc
sub
(bad)
and
into
aam
sub
inc
push
cmp
and
popa
hlt
sub
inc
pop
scas
cmps
inc
sbb
adc
aam
inc
xchg
neg
je
leave
jo
ret
adc
add
mov
sub
xchg
stc
jl
scas
in
das
inc
fisubr
lods
xchg
dec
or
lfs
mov
imul
push
inc
loop
or
jns
popf
adc
(bad)
rcr
out
xchg
cmp
mov
je
fwait
inc
push
xor
sti
inc
pop
out
mov
dec
outs
ins
mov
xor
mov
mov
imul
enter
daa
jb
sar
pop
jo
and
add
sub
aaa
add
icebp
in
inc
push
inc
dec
and
retf
cmp
je
mov
mov
and
fstp
lock
dec
inc
jae
pop
add
and
dec
mov
inc
(bad)
arpl
inc
movs
xchg
add
int3
cmp
mov
ret
inc
gs
fwait
sub
cmc
inc
cmps
xchg
or
inc
add
imul
les
sbb
push
and
js
inc
inc
and
pop
xor
mov
cwde
inc
fadd
icebp
adc
adc
and
cmp
loopne
xor
ss
mov
add
rol
sbb
sbb
cmp
cwde
pop
in
sub
fimul
mov
clc
jmp
jne
repz
mov
dec
inc
jg
cmp
repnz
loopne
cwde
call
mov
jge
bound
or
adc
or
dec
out
aaa
scas
mov
inc
jbe
mov
xchg
out
stc
imul
mov
pop
jo
fucomi
sbb
xchg
add
push
jmp
add
inc
in
icebp
xchg
lods
std
pop
(bad)
fistp
jnp
xchg
fucomip
push
fld
jmp
int3
std
inc
add
sbb
inc
jl
cmp
cmc
cwde
shl
inc
repz
fidivr
dec
sbb
mov
les
inc
xor
jbe
xchg
pop
adc
out
jno
scas
cmp
and
test
or
into
inc
and
int
inc
push
mov
pop
jnp
les
mov
call
xchg
cmp
dec
mov
jnp
adc
lock
jmp
add
push
sub
iret
enter
dec
stc
ret
or
shl
rcl
ss
cld
mov
adc
enter
pop
nop
push
lds
rol
jno
rcl
test
div
rcl
out
dec
test
fidiv
add
mov
jmp
inc
stc
xchg
or
or
jno
out
ss
and
fmul
cmp
nop
pop
sti
test
(bad)
or
inc
jg
test
sub
ss
cs
inc
or
lods
lahf
or
adc
in
sub
mov
retf
iret
fnstcw
dec
cmp
push
dec
mov
sbb
lock
xor
int
sub
or
or
cmps
jecxz
pop
test
jge
jmp
and
and
aam
jmp
pop
jge
xchg
or
pop
inc
test
push
push
mov
push
mov
stos
pop
das
sbb
pop
pop
jbe
add
fisubr
or
or
ins
or
scas
inc
or
aad
jb
jb
cs
mov
pop
aas
fcomi
ds
(bad)
jb
pushf
xchg
cmp
mov
and
fstp
sbb
mov
push
ss
push
aas
(bad)
enter
xor
lods
or
gs
imul
mov
and
int
adc
cmp
ins
cmps
xchg
mov
pusha
pop
mov
jb
call
adc
jno
mov
icebp
fidiv
daa
inc
mov
pop
inc
sub
cs
std
cld
pop
je
retf
loopne
mov
movs
test
cld
(bad)
dec
(bad)
jge
fild
inc
aas
and
mov
jns
cmp
lock
es
sub
jp
xchg
jle
jns
mov
mov
inc
scas
sbb
xchg
test
cdq
retf
jmp
bsf
inc
and
jno
dec
mov
ds
xchg
cmp
jge
lahf
aad
(bad)
out
test
and
jo
mov
jmp
cmp
(bad)
cmp
ret
push
shl
nop
jg
jmp
push
inc
mov
xchg
dec
mov
cs
pusha
jno
sahf
xor
into
retf
in
sbb
(bad)
push
xor
(bad)
dec
inc
mov
enter
(bad)
adc
dec
mov
push
sub
arpl
fstp
xchg
(bad)
cmp
js
cmp
mov
fild
xor
jb
cmp
xor
fistp
lock
mov
popa
cmp
jg
cmp
push
jbe
lods
xor
pop
adc
dec
and
(bad)
and
add
and
sbb
lea
(bad)
push
push
cmp
sub
push
mov
mov
stc
add
jno
mov
mov
mov
jo
mov
fidivr
push
mov
pop
inc
out
test
ror
jno
pop
pop
rol
sub
popa
push
ret
xor
mov
inc
jb
sbb
pop
ds
lock
cmp
jl
sar
retf
xchg
(bad)
jge
pop
cmp
test
sub
(bad)
fdivr
mov
dec
les
or
icebp
ja
cmp
shr
jno
fmulp
leave
cmp
cmp
mov
data16
xor
sti
sub
or
retf
mov
or
sbb
sub
sbb
sar
mov
aad
dec
dec
jnp
xchg
bound
cmp
cmp
mov
loopne
popa
call
mov
inc
add
push
out
daa
inc
mov
adc
jecxz
sub
cmps
mov
mov
push
sar
pop
pushf
or
cs
stc
and
fiadd
cmps
push
ret
pop
dec
cmc
cwde
dec
inc
push
jb
cmp
jbe
jg
jl
push
js
nop
dec
aas
cmc
or
popf
pop
fdiv
ret
adc
cwde
out
data16
push
leave
or
pusha
add
in
sahf
cmps
ds
in
out
std
out
inc
inc
je
rcl
push
mov
mov
arpl
cmp
mov
or
sbb
fpatan
dec
jb
sub
out
jns
inc
jmp
sub
out
call
add
daa
(bad)
aaa
cmp
and
xchg
inc
lods
mov
cmp
call
mov
push
aaa
xlat
mov
test
(bad)
fld
dec
aad
or
inc
dec
fiadd
and
repnz
call
nop
push
int3
xor
mov
jmp
inc
jp
or
cmp
push
add
(bad)
dec
fstp
lea
dec
dec
pop
xchg
call
mov
enter
pop
ins
(bad)
cmp
cmp
sbb
inc
rol
mov
(bad)
mov
mov
movs
cmp
cmp
sub
sbb
xchg
add
cmp
cmp
pop
or
dec
(bad)
xor
sbb
add
pop
sti
das
js
retf
push
add
test
mov
scas
inc
mov
mov
mov
mov
adc
push
cs
ins
xor
loop
xchg
sbb
sti
jmp
enter
inc
push
outs
sbb
lds
fild
mov
aaa
push
mov
add
inc
sbb
inc
into
icebp
inc
cdq
(bad)
mov
fnsetpm(287
jnp
loopne
cmp
mov
call
push
mov
arpl
inc
ja
lahf
pop
dec
inc
(bad)
call
not
stos
fnstenv
aam
in
lahf
mov
jb
fiadd
inc
cld
enter
lahf
mov
fdivr
sbb
stos
popf
enter
out
xchg
mov
retf
out
pop
icebp
inc
retf
fmul
mov
adc
aam
mov
jle
sub
cmc
pushf
or
adc
fld
push
pop
scas
fild
hlt
mov
loope
cmp
pop
cmp
mov
jp
cmp
push
arpl
jne
adc
xor
sub
fs
xor
(bad)
jnp
sbb
sub
fistp
out
add
push
test
jmp
(bad)
out
or
test
xchg
pop
ret
inc
daa
lds
pop
mov
add
xor
cmp
inc
(bad)
out
xlat
rol
pop
push
test
rdtsc
and
or
jle
scas
inc
dec
daa
xor
sti
mov
sbb
cli
pop
push
test
mov
pop
xlat
dec
add
test
xor
add
cmp
inc
and
pinsrw
test
hlt
jmp
dec
(bad)
cmp
pop
adc
imul
xor
fstp
sbb
dec
inc
dec
rol
dec
aam
mov
inc
(bad)
test
jl
addr16
clc
out
mov
retf
pop
sub
ss
dec
xchg
retf
pop
jmp
mov
mov
iret
nop
sbb
pusha
lea
jno
mov
lds
imul
retf
leave
jnp
cmp
lea
nop
xchg
mov
push
push
arpl
in
jmp
cmp
lds
repnz
adc
stos
test
sbb
cmp
mov
mov
xor
xor
sbb
push
xor
mov
js
and
pop
ds
xchg
mov
retf
popa
inc
inc
jae
fbstp
mov
xor
lds
mov
sub
jae
test
push
inc
aam
cmps
xchg
(bad)
retf
add
clc
inc
or
hlt
lock
jnp
idiv
inc
call
and
aad
test
mov
dec
sub
icebp
cmp
mov
sbb
inc
push
inc
out
pop
sub
sar
jno
inc
enter
xor
mov
in
mov
push
clc
into
push
cld
adc
je
cmp
jp
xchg
scas
arpl
adc
cmp
jge
or
out
inc
retf
jns
adc
xor
jmp
push
pop
dec
push
(bad)
mov
mov
xchg
cmp
pop
jmp
cld
cmc
sbb
jns
cmp
dec
jae
cmp
add
(bad)
jns
jns
mov
cdq
das
and
out
jmp
inc
jnp
fiadd
movs
and
sbb
aad
scas
or
push
outs
push
ja
jo
sti
inc
ins
jle
cmp
cmc
sub
sti
mov
cmp
cmp
daa
ret
and
jo
mov
sbb
push
repz
dec
rol
push
(bad)
(bad)
cmp
mov
stos
imul
mov
sbb
test
nop
inc
sub
adc
cs
jo
outs
mov
sub
es
xor
mov
aam
cld
retf
cmp
stos
sub
jl
pop
(bad)
inc
dec
cmp
mov
lea
hlt
test
push
imul
push
xchg
in
mov
and
sahf
jp
add
in
xchg
bswap
fxch
test
mov
push
pop
aam
fld
jns
inc
or
loopne
sub
sub
and
push
jl
dec
jbe
(bad)
aam
shl
sti
popf
cmp
mov
xchg
cmp
xchg
cmc
pop
lods
out
inc
sub
fst
lods
stc
int
sub
cmps
fs
pop
popf
inc
adc
lahf
jp
(bad)
cmp
add
(bad)
add
cmc
push
mov
fstp
pop
fmul
gs
cmps
repnz
and
cmp
push
out
jo
or
cmp
int3
nop
push
mov
fistp
and
xchg
inc
lock
test
pusha
inc
or
clc
push
out
mov
iret
inc
push
push
add
inc
test
pop
pop
jns
lods
fwait
cld
loop
push
cmp
call
pop
aam
pop
mov
cli
jmp
call
inc
popf
pandn
das
jmp
mov
inc
or
outs
(bad)
jge
popf
jno
add
movs
xchg
push
cmps
je
jnp
inc
fsqrt
mov
mov
(bad)
sbb
xchg
rcl
jno
cmp
arpl
fucomp
inc
je
in
neg
jge
sub
jne
aas
pop
sar
sub
cmp
cmp
add
xchg
enter
jge
shl
out
repnz
mul
sub
mov
pusha
retf
xchg
jp
adc
(bad)
aad
jp
xor
add
jne
xlat
sub
and
dec
fisttp
mov
(bad)
mov
aaa
xor
out
jle
dec
dec
cmp
adc
jno
leave
or
dec
rcl
or
push
and
or
jge
test
adc
ficom
jno
mov
push
pop
jmp
push
pop
inc
pop
mov
xlat
xor
gs
out
mov
adc
cmp
jno
mov
jo
cmp
pusha
push
popf
cmp
pop
adc
sub
pop
mov
js
push
pop
adc
xor
jbe
add
cdq
fdivr
sbb
jno
mov
fnstsw
shr
or
or
les
mov
mov
stos
mov
jg
inc
adc
push
add
lea
push
loope
push
jno
and
pop
xchg
jg
jns
xchg
pop
mov
sub
hlt
fs
add
cmp
sar
fdivr
sub
cmp
shl
add
xor
sbb
aam
mov
sbb
cli
push
popf
in
sbb
mov
pusha
jno
test
cmp
cmp
ror
(bad)
leave
imul
call
ins
cmps
out
xor
lahf
dec
jp
jns
cmc
sbb
cli
lods
sbb
loopne
pop
imul
xchg
push
push
mov
fbstp
mov
loope
adc
cmp
out
sbb
push
rcl
pop
enter
ret
ss
(bad)
jns
mov
mov
dec
cmps
push
dec
add
rcl
int
cmp
je
cmp
fldl2e
gs
push
and
icebp
addr16
loopne
imul
ret
mov
push
icebp
or
std
jmp
test
mov
xchg
push
mov
xor
jns
cdq
icebp
xchg
call
add
cmp
test
ret
jnp
mov
mov
fsub
xor
or
jg
push
mov
sub
jbe
mov
fnstcw
dec
es
inc
aaa
jno
das
popa
xlat
lahf
mov
scas
dec
jle
inc
(bad)
cmc
call
add
shl
xor
dec
mov
adc
je
ret
sub
jnp
push
les
clc
leave
xor
push
pusha
jle
aam
loope
enter
cmp
cmp
cld
add
pop
sub
and
in
and
sar
mov
cmp
movs
lods
sbb
jl
and
mov
or
or
pusha
mov
mov
ss
ret
je
or
adc
mov
inc
cmp
(bad)
stc
jno
pop
xchg
xor
and
scas
pop
aad
mov
adc
pop
mov
ja
loopne
aas
pop
sahf
idiv
jp
dec
(bad)
inc
repnz
sub
icebp
sub
je
scas
mov
inc
stos
xor
jae
js
imul
dec
cwde
pop
xchg
push
cmp
pusha
mov
xchg
inc
jne
call
adc
or
pop
cli
inc
stos
ins
scas
cmp
ss
mov
(bad)
icebp
adc
movs
mul
cmc
jmp
loope
mov
inc
mov
jo
int3
es
in
test
pop
movs
dec
stc
out
pop
cmp
(bad)
ficomp
or
call
and
and
adc
inc
cmp
adc
push
retf
sub
pop
pusha
mov
push
jno
es
add
mov
push
xchg
out
adc
idiv
jmp
mov
xchg
add
data16
push
push
and
push
inc
jo
retf
push
inc
xor
repz
out
cli
loopne
sub
cmp
xchg
imul
jne
jmp
mov
jecxz
xor
inc
push
xchg
cwde
std
xchg
setno
pop
xchg
inc
xchg
xlat
xor
mov
xor
push
push
pop
retf
fisub
ja
iret
add
inc
cmps
xchg
inc
xchg
and
loopne
jnp
cld
or
outs
sti
outs
cmp
shl
xchg
and
loop
stos
jl
out
cmp
mov
and
pop
xchg
pop
sub
inc
lds
cld
lods
lods
pop
xor
cmp
xor
mov
cmp
(bad)
inc
adc
mov
add
mov
inc
xchg
mov
shl
cmp
test
test
pusha
cwde
je
pop
adc
jecxz
jno
pop
push
mov
ja
push
sar
and
sbb
xchg
shl
cmp
adc
sbb
cdq
int
ds
inc
dec
mov
(bad)
mov
leave
xchg
add
push
lock
retf
jnp
scas
pop
cmp
xor
fcmovnb
iret
push
retf
push
cmp
pop
and
stc
mov
sbb
or
js
xchg
xchg
call
repz
dec
dec
sbb
pop
add
mov
push
mov
push
sub
sbb
jno
gs
mov
or
add
fpatan
mov
or
sti
test
cs
hlt
js
jmp
inc
(bad)
stos
jle
out
aas
jge
test
sub
adc
cmp
je
and
pop
push
stos
mov
adc
xor
and
icebp
push
inc
in
jno
ret
xor
add
fnstsw
into
xchg
aam
mov
inc
fcom
je
push
fyl2x
test
jo
(bad)
sahf
loop
adc
dec
jno
jecxz
sahf
mov
popf
aaa
sahf
cdq
fstp
hlt
jmp
jge
cmps
addr16
or
retf
jbe
jne
mov
inc
popa
fldcw
in
(bad)
repz
in
cmp
mov
iret
pop
cli
jle
fsub
sbb
push
dec
push
inc
add
pop
sbb
adc
es
push
mov
inc
jne
jae
and
cmp
pop
mov
sbb
inc
sbb
push
and
pop
mov
cdq
mov
mov
inc
test
sbb
test
mov
cmps
adc
es
fisttp
dec
sbb
sub
mov
xor
or
or
mov
fwait
xchg
pop
cmp
arpl
jmp
pop
mov
inc
mov
test
lods
push
mov
or
mov
inc
pop
scas
mov
or
cmp
cmp
ror
popf
mov
repz
or
and
mov
jle
inc
test
iret
into
lods
outs
inc
jge
push
cmp
cmp
cdq
stos
iret
or
inc
loopne
push
(bad)
inc
jae
inc
fxch
pop
ss
mov
or
fadd
test
dec
jno
pop
hlt
lds
cli
pop
and
in
inc
fs
dec
daa
out
cmps
ja
xor
into
mov
mov
mov
out
xlat
popf
dec
and
fsub
out
int3
neg
jp
lahf
cmp
enter
cmp
mov
sbb
ror
jmp
jne
inc
add
mov
sbb
inc
sbb
hlt
ret
sub
test
leave
(bad)
cmp
aaa
add
sbb
nop
mov
xor
mov
cmp
sbb
sub
repz
sti
jnp
movs
sbb
dec
les
sbb
jbe
repnz
dec
inc
sbb
add
pop
push
cs
sbb
lods
aad
ror
pop
outs
inc
push
loope
out
ja
repnz
cmps
dec
pop
cld
sbb
cmp
int
mov
pop
cmp
jne
movs
jp
es
retf
cmp
mov
addr16
mov
movs
out
call
stos
imul
or
(bad)
icebp
mov
fdiv
or
jle
cmp
inc
push
imul
inc
mov
pop
fistp
fcmovu
jecxz
rcl
retf
mov
adc
mov
mov
add
dec
xor
and
push
add
fisttp
dec
popf
aad
inc
sbb
inc
fmul
retf
popf
js
sub
je
and
aas
aas
dec
jns
mov
xor
aas
sub
and
adc
add
jle
retf
inc
mov
icebp
push
push
int
inc
push
dec
push
xchg
ds
test
cmp
xor
pop
dec
inc
xlat
cli
ret
pop
outs
xchg
je
inc
push
push
and
leave
sub
cli
gs
js
rol
xor
stos
mov
cs
movs
mov
add
mov
inc
xor
mov
pop
cmp
repz
xlat
dec
outs
dec
cmp
cmp
xchg
add
popf
push
fldenv
retf
cmp
cmp
inc
jnp
xor
lea
mov
les
mov
ficom
xor
out
mov
xchg
mov
cmp
mov
sub
jo
xchg
add
jle
pop
sub
jnp
mov
cmps
inc
hlt
call
dec
je
xchg
test
mov
loopne
mov
cmps
mov
sysenter
inc
sbb
lahf
idiv
or
cmps
inc
scas
lea
xor
cli
pop
inc
loopne
sbb
fxch
sti
ror
inc
arpl
loopne
cmp
xor
pop
int
popf
jb
adc
leave
jae
sub
repz
adc
sub
cli
pop
xlat
into
sub
icebp
mov
xchg
mov
adc
out
fstp
add
mov
cwde
inc
fild
retf
ror
and
fiadd
sub
push
jnp
dec
outs
inc
push
mov
cwde
mov
push
jae
and
dec
jnp
push
pop
cdq
add
jge
(bad)
je
jl
mov
inc
jle
ret
fidivr
cmp
pop
cs
xchg
jae
mov
sbb
outs
rcr
jb
xchg
mov
push
mov
jo
sar
cmp
popa
pop
hlt
mov
adc
sbb
mov
or
or
inc
jo
sahf
fldcw
xor
ins
mov
fsub
fs
je
aam
mov
dec
jae
gs
retf
mov
lds
stos
mov
mov
mov
rol
jo
mov
mov
mov
cmp
inc
mov
push
push
out
aam
and
cmp
add
enter
cdq
or
loopne
push
dec
jle
mov
stos
push
xor
in
aaa
pop
pop
out
imul
fiadd
cmp
xchg
sub
popf
mov
rol
mul
stc
sbb
sub
loope
adc
jmp
sbb
test
push
js
fidiv
pop
push
rcl
sub
jne
ins
(bad)
inc
mov
jle
nop
mov
jg
out
icebp
inc
mov
and
add
add
xor
add
call
mov
pop
sbb
cmp
fwait
in
xchg
inc
nop
scas
inc
mov
cmc
add
inc
adc
and
nop
push
xchg
stos
dec
das
ror
xchg
rcl
push
fcomp
push
call
push
xchg
xchg
or
repnz
and
mov
cmp
arpl
inc
mov
adc
(bad)
not
xchg
fdivp
add
repnz
cld
pop
jmp
inc
leave
shr
jl
or
inc
shl
sti
mov
pop
push
inc
push
mov
nop
outs
cmp
cld
out
rol
shr
inc
inc
add
loop
inc
cmc
dec
pop
mov
inc
fild
mov
test
add
rep
cs
cmp
push
(bad)
sti
sbb
(bad)
movs
pop
or
cmp
inc
dec
fild
or
xchg
js
xchg
and
hlt
fucomi
clc
mov
dec
add
add
sbb
jne
out
fidiv
aaa
in
jp
push
inc
movs
xchg
loope
or
lea
fcmovne
bound
loop
imul
icebp
inc
xlat
jmp
inc
rcl
inc
fisttp
lods
ror
or
stos
sub
cmp
sub
repnz
add
fldcw
or
pop
jno
rol
mov
mov
cld
xor
add
leave
xchg
loop
dec
push
xor
xor
enter
or
jns
fisub
mov
fcmovne
js
scas
je
(bad)
sbb
jno
shl
fs
cmp
xor
push
xor
add
xchg
fdiv
dec
sbb
push
pusha
fs
in
jge
xchg
pop
leave
jns
cdq
xchg
cli
or
(bad)
in
out
loop
in
outs
pop
jno
data16
mov
push
popa
mov
inc
pop
sbb
into
and
call
sbb
mov
push
sbb
cmp
fadd
sar
xor
cmp
(bad)
stos
and
sbb
pusha
mov
mov
cld
adc
dec
cmp
bound
aad
gs
inc
cmp
loop
xor
gs
mov
cmps
ror
or
or
adc
adc
aas
add
mov
and
call
or
or
ror
inc
pop
int
out
inc
mov
popa
push
mov
cmp
add
xor
call
cmp
in
jmp
inc
cmp
lea
xchg
mov
sub
push
cmps
movs
inc
inc
(bad)
xor
mov
ins
jp
loope
jmp
xor
mov
inc
inc
sub
in
jb
fwait
rcl
in
jo
mov
xchg
mov
jae
repz
nop
push
sub
mov
push
and
(bad)
jmp
ins
mov
js
into
fld
loopne
mov
and
sub
xchg
xchg
jp
ja
dec
pop
rol
div
inc
addr16
adc
sar
data16
fmul
mov
mov
inc
out
xchg
out
hlt
inc
das
adc
shl
xor
xlat
inc
ja
out
cmc
shl
bound
jecxz
mov
cmp
mov
sbb
js
push
icebp
xchg
cmp
(bad)
mov
out
add
pop
cmp
out
in
jbe
stc
cmp
repz
mov
or
xor
inc
in
clc
mov
mov
popf
daa
cmp
fist
and
mov
sub
inc
js
mov
inc
stos
mov
das
enter
pop
sub
fsqrt
jne
loopne
xor
xor
inc
loope
cmp
lahf
add
xchg
dec
popf
pop
ds
fs
mov
xlat
jge
jne
push
scas
jno
test
cmp
stc
pop
jge
inc
push
dec
push
dec
pop
cmp
enter
or
xor
mov
ret
fcom
popa
sahf
shl
iret
enter
adc
push
inc
(bad)
movs
pop
jecxz
xchg
outs
jno
push
aam
ja
cmp
pop
and
js
mov
cmp
pop
jmp
movs
mov
xor
inc
lds
les
inc
push
nop
loopne
sub
add
test
xor
cmp
adc
mov
icebp
mov
loop
test
loopne
int3
jno
mov
out
xor
inc
inc
jg
sbb
leave
inc
dec
out
mov
retf
push
pop
xchg
push
add
inc
call
loopne
out
repnz
jmp
lock
in
inc
rol
sbb
sub
call
mov
xor
pop
test
nop
or
xchg
cmp
fisubr
fwait
jg
dec
jnp
pop
pop
fisttp
jp
xchg
aam
in
inc
and
cmp
ins
jle
adc
pop
out
loopne
arpl
push
fisttp
aaa
or
test
inc
jecxz
pop
in
mov
xchg
and
xor
push
push
inc
jl
ins
push
outs
popf
pop
push
retf
dec
sbb
and
mov
push
ins
sub
xor
outs
push
(bad)
jnp
dec
inc
ins
loope
hlt
pop
jo
inc
(bad)
push
and
lea
cmps
jecxz
dec
mov
xchg
mov
xchg
sub
jne
test
cld
and
popf
hlt
jae
aaa
xor
cdq
xlat
adc
jne
xchg
and
sub
movs
and
mov
jge
inc
pop
fdivr
retf
(bad)
dec
and
cmp
jmp
cli
mov
xchg
mov
loopne
pop
mov
scas
mov
inc
adc
iret
jb
cdq
addr16
outs
xchg
jns
inc
(bad)
adc
leave
mov
ret
ficom
mov
pop
ror
in
xchg
test
je
inc
cmp
sub
out
push
test
inc
nop
dec
cmc
and
retf
and
inc
retf
das
sbb
test
dec
add
and
cmp
mov
sub
scas
jp
xchg
stc
popa
inc
mov
test
sub
es
cld
inc
hlt
push
xchg
loopne
add
inc
jl
mov
out
cmp
lea
cmp
and
jbe
cdq
cmp
add
addr16
jns
(bad)
nop
imul
push
jno
shl
push
mov
and
or
mov
xor
fstp
mov
jmp
mov
dec
mov
clc
dec
mov
xchg
cmp
jmp
xchg
xchg
in
fcmove
pusha
loopne
ins
adc
mov
sub
mov
cmps
sbb
mov
jns
inc
movs
xchg
mov
xchg
mov
jae
push
pop
sub
sbb
jp
es
out
adc
retf
stos
call
test
adc
sbb
sub
cmp
aas
retf
dec
mov
xor
dec
xchg
jno
push
cmp
mov
pop
stc
outs
imul
jno
arpl
add
jmp
js
sbb
sbb
or
dec
cli
cmc
cmp
cdq
mov
arpl
jp
xor
ror
ret
xor
in
jns
lods
mov
lea
mov
mov
jb
push
nop
sbb
inc
push
ja
jge
movs
adc
ins
inc
cmp
enter
shr
repz
ds
dec
jno
jecxz
in
xor
call
cs
cwde
pop
add
cmp
int3
and
mov
lods
mov
mov
movs
cmp
maskmovq
neg
stc
(bad)
mov
and
cli
or
adc
cmp
(bad)
sbb
add
sbb
cmp
or
jnp
imul
sbb
cmp
sub
ret
mov
mul
les
inc
pop
dec
fistp
push
ja
dec
fptan
lds
or
inc
sub
repz
xor
xchg
pop
mov
cs
arpl
xor
adc
inc
cmp
dec
outs
pop
in
retf
icebp
ins
cmc
div
idiv
pop
hlt
xor
(bad)
jo
jb
pop
sbb
loope
xchg
cmp
lds
movs
inc
js
enter
push
xor
das
cld
movs
or
add
pop
cmp
fild
out
lea
add
push
fwait
test
xchg
cmp
fdivr
pminub
adc
sahf
dec
sub
out
cmp
cmp
shr
xchg
pop
arpl
jae
push
and
arpl
cmp
rcl
and
and
stc
nop
idiv
arpl
inc
inc
pop
(bad)
xor
jp
xchg
and
les
movs
ds
adc
sub
popf
push
mov
mov
sbb
cmp
sbb
xlat
std
inc
xchg
jle
adc
sbb
cmp
lock
push
shr
mov
int
in
cmp
lds
je
adc
fs
and
mov
leave
aas
movs
sar
cmp
pop
(bad)
lods
popf
mov
ficom
pop
adc
ins
pusha
dec
mov
jno
and
(bad)
lods
imul
aas
cmps
jle
jns
pushf
xor
cmp
mov
or
cli
ja
icebp
and
push
out
inc
enter
int
dec
sbb
cmp
sar
dec
push
push
les
sbb
sbb
jmp
out
cs
retf
outs
and
mov
inc
jns
mov
add
ret
mov
jns
push
pushf
inc
jno
dec
dec
(bad)
jge
and
push
jmp
nop
push
sahf
(bad)
mov
ins
out
mov
sub
inc
mov
cld
push
xor
js
je
xor
jecxz
pop
fld
sub
shl
cmp
repnz
rcr
jecxz
setp
popf
cli
pusha
mov
aam
jbe
pop
(bad)
pop
int3
pop
scas
cmp
xchg
scas
jecxz
mov
add
ficom
ss
stos
ret
inc
jge
mov
mov
xchg
mov
cmp
jae
jle
xchg
mov
pop
pop
cmp
outs
pushf
mul
adc
pop
js
sub
jmp
xor
sub
(bad)
and
pop
mov
pop
mov
pop
mov
jns
pop
(bad)
sub
pushf
sbb
mov
les
lods
push
fcmovu
mov
fsubr
data16
mov
add
sbb
pop
adc
gs
push
mov
sub
xor
add
ret
mov
iret
mov
add
push
scas
je
dec
stc
movs
dec
fnstcw
jge
loope
xchg
(bad)
ds
push
sbb
add
fstp
movs
mov
icebp
sbb
sub
xor
sar
nop
jns
xchg
jae
shl
xor
push
shl
retf
push
pusha
icebp
jge
scas
jo
dec
out
jae
xor
cmp
xchg
dec
adc
sub
jl
lahf
nop
outs
jl
fwait
mov
push
mov
pop
xchg
and
push
stc
or
leave
cmp
mov
ins
loop
je
hlt
sub
cmp
and
mov
pusha
fsub
mov
cmp
and
cmp
sub
mov
fs
add
ror
js
jle
fwait
xor
push
jg
cmp
stc
adc
cmp
sbb
sbb
pop
pop
sahf
pop
add
mov
pop
mov
cmp
adc
ds
call
fnsave
push
mov
fidivr
pop
mov
fnstsw
pop
retf
ds
arpl
or
jb
(bad)
cmp
dec
xor
or
mov
pusha
add
dec
add
sbb
push
jno
dec
jns
inc
je
fdivr
push
pop
mov
stc
loope
into
in
nop
push
mov
movs
pop
div
test
adc
jae
and
cmp
jecxz
cmp
adc
jno
jnp
jmp
cmp
xor
adc
fnstenv
outs
popa
sbb
adc
outs
sub
stos
pop
int
xor
mov
je
push
cmp
inc
ss
xor
mov
mov
mov
inc
mov
std
cmp
add
stos
aad
pop
mov
push
add
icebp
xchg
xor
jmp
call
add
xchg
into
scas
mov
dec
fistp
inc
pop
fadd
jb
mov
jp
or
sbb
sti
in
stc
push
jb
sar
dec
cmp
fisttp
adc
nop
mov
xor
jge
adc
mov
mov
cmp
mov
out
int
addr16
jge
(bad)
(bad)
push
das
enter
sub
adc
and
dec
data16
leave
(bad)
loope
(bad)
jge
(bad)
mov
mov
fcom
inc
addr16
call
mov
dec
jmp
test
vpor
jmp
add
add
cmps
jne
jno
test
je
jns
aaa
cli
and
rcl
xor
mov
mov
dec
inc
sahf
cmp
pop
data16
cs
and
jp
fild
sub
cwde
sar
fcom
mov
mov
popa
aaa
xchg
ins
ror
fimul
jne
jle
test
test
xchg
(bad)
in
and
mov
and
sbb
lods
cmp
sti
repz
out
cs
arpl
pop
enter
pop
push
dec
mov
sub
js
aaa
inc
fild
out
lods
mov
xor
add
cdq
lods
sti
scas
nop
ins
out
pop
jmp
gs
clc
mov
hlt
icebp
nop
cmp
test
stc
int
mov
(bad)
jecxz
aam
jge
loope
daa
and
call
mov
retf
dec
dec
gs
into
sub
ffreep
push
dec
dec
cmp
enter
inc
push
iret
enter
push
inc
cmp
inc
push
sbb
les
ret
cmp
inc
test
loopne
loop
stc
jmp
in
rcr
xlat
rol
(bad)
or
test
push
mov
(bad)
rol
inc
out
cmps
mov
ds
mov
sub
and
popf
mov
mov
xlat
inc
or
mov
out
(bad)
test
dec
rol
data16
daa
pushf
retf
or
ss
push
xor
icebp
inc
inc
popa
jb
sub
les
inc
pushf
stos
lock
xchg
repz
lods
cs
adc
sbb
enter
mov
ret
daa
cmp
mov
mov
fadd
dec
push
pop
cdq
and
inc
leave
popa
inc
je
fimul
inc
fcomp
inc
fld
loopne
push
mov
jne
arpl
mov
xor
push
rol
fistp
pop
movs
sub
xor
sbb
hlt
cs
pop
popa
mov
or
and
(bad)
jmp
sar
inc
cmp
outs
cdq
mov
sahf
push
retf
fdivr
ror
mov
stos
xchg
stc
ss
push
adc
popa
fcomp
inc
fistp
pop
clc
adc
add
mov
cmp
cdq
mov
bound
sub
inc
sub
push
je
std
sbb
mov
xchg
scas
push
add
pop
shl
inc
ror
cmp
push
mov
cs
xor
push
or
xor
mov
inc
and
aad
cmps
xchg
inc
and
pop
call
loopne
add
push
add
and
stos
xor
call
enter
out
or
xor
push
inc
mov
mov
js
xor
pop
sbb
test
jmp
call
mov
ret
add
or
aad
cli
(bad)
jnp
lahf
movs
xchg
inc
add
cld
imul
fcom
pop
mov
mov
add
es
test
pop
rcl
jmp
ja
cmp
pop
pushf
popf
scas
inc
enter
les
inc
faddp
(bad)
and
sbb
fiadd
push
and
in
icebp
div
sbb
inc
adc
push
test
xor
clc
mov
arpl
sub
mov
inc
sub
(bad)
or
mov
mov
js
mov
sub
ds
imul
movs
sbb
popf
mov
push
and
cmp
inc
sbb
and
in
jmp
call
pop
xor
push
out
stc
sbb
popf
(bad)
mov
inc
pop
aam
adc
and
(bad)
mov
test
inc
loop
(bad)
aad
(bad)
push
cmc
js
jae
js
jge
mov
mov
inc
xlat
bound
sbb
push
jo
dec
scas
in
pushf
inc
pop
sub
std
fldcw
push
retf
ins
ds
push
out
iret
popf
cmp
sbb
retf
sub
pop
sti
pop
aaa
jge
adc
sar
sbb
test
cdq
mov
jns
cmps
mov
fidiv
push
mov
ss
jp
imul
xor
(bad)
in
add
dec
aaa
or
inc
and
sub
mov
jp
scas
inc
inc
xchg
fcomp
xor
inc
dec
pop
sbb
jmp
repz
out
cld
addr16
imul
add
push
and
add
jno
mov
sub
mov
sar
pop
inc
xor
call
into
push
xchg
push
jno
dec
fcom
popa
cli
mov
movhps
or
imul
(bad)
jae
xor
adc
int3
iret
xor
pop
cmp
jge
std
xor
stos
cmps
test
sub
push
fadd
mov
aam
shr
inc
push
mov
pusha
mov
shl
and
ret
out
mov
xchg
lea
fld
lods
or
inc
fs
bound
leave
ss
popf
loopne
jle
repnz
out
data16
pusha
jbe
gs
xor
jnp
jl
mov
cmp
pusha
fistp
inc
cdq
xchg
inc
jmp
stc
mov
mov
or
pop
sbb
stos
mov
aas
fdivr
xchg
and
icebp
jl
push
add
jns
repz
xor
cmc
pop
sbb
sbb
shl
aad
mov
jno
dec
ins
loopne
pop
(bad)
sar
aaa
push
mov
test
cmp
xchg
jle
sub
xor
or
enter
jecxz
inc
add
leave
pop
inc
ss
xor
dec
pop
or
scas
mov
jns
out
sbb
les
adc
push
mov
xchg
cmp
div
inc
es
and
sub
cmp
cs
out
xchg
mov
xchg
adc
sbb
adc
ror
sbb
xlat
in
jl
cld
(bad)
push
and
les
inc
jp
xor
hlt
(bad)
mov
(bad)
(bad)
pusha
std
pop
adc
dec
cmp
xor
call
mov
inc
addr16
push
xchg
ds
jg
(bad)
cs
stc
loopne
pop
xchg
mov
into
cmp
xor
cmp
ss
out
inc
and
inc
xor
div
cld
sub
cmp
sbb
jb
js
push
push
stc
jns
and
jo
sbb
inc
sar
je
fistp
fldcw
and
and
icebp
nop
ss
jns
mov
stc
(bad)
jg
test
jg
jno
je
mov
test
push
pop
stc
xchg
bound
imul
fisubr
in
xor
and
push
arpl
mov
shl
dec
add
jp
mov
jnp
push
mov
inc
retf
jae
jge
mov
mov
xor
addr16
rcr
push
movs
in
ret
cmp
sub
call
jmp
xchg
sbb
data16
add
mov
in
out
mov
cmp
ja
aas
fwait
mov
mov
add
mov
(bad)
dec
js
jns
cmps
fidiv
or
dec
cdq
movs
ds
and
cmp
push
retf
aam
cmp
inc
push
dec
pop
dec
ds
push
js
or
scas
mov
out
outs
jne
mov
test
movs
inc
mov
and
or
sahf
jl
cmp
cmp
inc
(bad)
repnz
out
clc
ret
fsubr
mov
gs
rcl
or
sub
sbb
jne
sub
inc
jecxz
movs
retf
push
push
inc
cmps
mov
push
jo
scas
inc
push
fcmovbe
js
lahf
mov
adc
fisttp
loopne
add
jl
stc
push
scas
dec
(bad)
imul
adc
lea
inc
enter
mov
jmp
outs
cmc
jo
imul
fs
cmp
sbb
push
xchg
adc
(bad)
imul
add
ret
sbb
test
sub
xor
cs
push
mov
lods
inc
mov
mov
xor
xchg
sub
and
clc
cmp
outs
dec
je
popf
or
imul
pop
pop
add
and
out
ins
aaa
pop
cdq
sub
jmp
sub
xor
mov
xor
and
inc
rcl
movs
mov
inc
xchg
test
mov
daa
rcr
call
ret
jbe
xor
or
loopne
aad
xchg
pop
cli
adc
je
aam
mov
push
fs
sbb
mov
test
add
inc
mov
mov
mov
mov
fcom
jl
cmp
add
sti
mov
pop
inc
mov
or
push
cwde
mov
and
pop
inc
outs
jge
adc
adc
loope
fwait
aaa
add
sti
and
test
xor
cmp
push
xchg
stos
jo
sbb
add
shl
pushf
inc
ins
pop
jmp
hlt
bound
jg
das
and
mov
jbe
mov
into
cmp
xlat
push
es
stos
dec
cmp
adc
sub
mov
in
pop
add
and
bound
inc
xlat
fdivrp
retf
std
sbb
rol
mov
stc
cmp
mov
push
xchg
push
jae
cli
loopne
stos
cmp
ss
cmp
mov
inc
stos
or
or
push
sbb
ss
int3
mov
lods
pop
push
or
inc
aam
push
xor
fmul
nop
fcmovb
dec
daa
adc
jns
pop
fisub
loop
data16
aas
push
cli
inc
test
outs
inc
pop
imul
pushf
call
loop
dec
xor
rcl
inc
and
mov
mov
jbe
xor
jno
or
inc
pop
addr16
and
xor
sub
xor
cmp
xchg
cwde
inc
sbb
cmp
and
in
test
icebp
cmps
aas
fld
adc
(bad)
leave
push
mov
sbb
cmp
mov
in
mov
lods
int
pop
and
stc
cmp
inc
mov
cmp
and
or
stos
cmp
test
aam
iret
cmp
or
in
inc
or
and
mov
xor
sahf
xchg
push
and
repnz
mov
loope
outs
inc
or
push
js
push
dec
fadd
test
sbb
pop
test
popf
out
cmp
nop
or
adc
cli
jae
stc
or
in
pop
ja
shl
jecxz
push
loopne
cmp
js
into
(bad)
out
xchg
sub
fild
adc
xor
rol
or
sbb
iret
dec
out
ficomp
(bad)
(bad)
dec
fisub
jle
movs
pop
pop
inc
lds
add
addr16
sub
add
mov
aas
inc
arpl
out
sub
xor
mov
icebp
sub
movs
in
cld
xchg
dec
pusha
loopne
xchg
stc
cmp
mov
jbe
aas
data16
dec
xor
test
adc
pop
bswap
pop
rcr
lahf
loopne
mov
inc
dec
pop
xor
cmc
imul
cld
jbe
xchg
push
cmp
or
or
or
mov
cmc
cmps
push
retf
inc
call
(bad)
std
icebp
sub
dec
push
ja
jnp
pop
lds
test
pop
mov
fild
fistp
push
sub
cmp
mov
inc
jg
cmp
sub
add
adc
cli
cmp
push
ret
add
inc
sub
mov
pop
rcl
retf
aad
dec
das
in
pop
cmovo
cmp
stos
data16
or
cmp
cmp
xchg
movaps
add
dec
xlat
pop
push
cmp
mov
test
xor
mov
and
cmc
sub
xlat
or
mov
mov
sbb
xlat
sar
adc
cmps
cld
push
xor
stos
(bad)
pop
(bad)
cmp
xor
xlat
cmp
pop
fld
push
cmp
adc
fild
mov
popa
push
rcl
adc
or
pop
or
xchg
sub
cmp
ftst
jmp
mov
out
in
and
dec
or
fdivp
retf
adc
fldenv
mov
mov
rcl
cli
push
cmp
xchg
jnp
data16
jmp
shl
cmc
(bad)
push
xlat
add
inc
jae
pop
mov
and
adc
cmc
cmp
call
outs
push
pop
ds
cmp
fbld
jmp
dec
(bad)
es
std
in
inc
stos
inc
pop
ds
ds
loop
mov
dec
mov
(bad)
mov
cli
in
jle
out
push
sahf
dec
(bad)
ror
dec
sbb
scas
xor
aam
dec
pop
mov
aas
jae
push
push
jle
or
aas
adc
jo
push
mov
adc
mov
xchg
addr16
(bad)
(bad)
mov
xor
sub
sahf
jns
mov
xor
cmp
aaa
ret
push
adc
das
pusha
inc
mov
imul
icebp
cmp
cld
push
mov
add
ret
inc
outs
jno
clc
ret
push
mov
mov
movs
mov
sbb
out
jno
int3
jmp
mov
scas
xchg
stos
and
mov
jno
and
push
nop
js
cdq
push
in
mov
jno
mov
adc
mov
push
cld
mov
cmp
(bad)
aas
dec
rol
jno
xor
ret
sahf
outs
and
les
or
fisubr
popf
cmp
mov
lods
cmps
or
sbb
lds
outs
pop
mov
inc
dec
jl
jge
aas
imul
(bad)
mov
es
jge
cmp
mov
sub
enter
dec
test
push
mov
cmp
cmps
ret
push
add
adc
fmul
ins
inc
stos
xchg
sbb
stc
call
sti
push
sbb
mov
cmp
mov
inc
fwait
mov
cmp
or
ret
or
xor
loope
inc
aas
repnz
inc
and
jmp
cmp
out
add
cmp
mov
jmp
jmp
cmp
inc
jmp
jle
out
pop
xlat
mov
int
pop
xchg
lock
dec
cdq
mov
fbstp
fmul
sbb
stc
lods
jecxz
mov
clc
mov
int3
leave
nop
sub
xchg
mov
cmp
push
inc
push
test
popf
test
push
je
retf
jl
pop
test
sub
stos
jnp
into
or
dec
add
test
adc
mov
jns
inc
add
push
(bad)
dec
(bad)
cdq
mov
cmp
pop
jecxz
and
js
leave
cmc
jae
xchg
xor
mov
daa
sbb
xchg
fistp
mov
stos
icebp
push
pop
lahf
mov
inc
dec
push
(bad)
push
jno
cmp
pop
shr
add
xor
fs
mov
mov
jo
push
pop
jno
adc
jg
add
fdivr
hlt
cs
mov
xchg
int
sub
aas
add
leave
cmp
cdq
adc
push
dec
sub
push
mov
fdivr
push
and
ror
pop
jae
or
xchg
shl
sbb
cmovo
(bad)
sti
cmp
cmp
jp
fistp
test
clc
jnp
dec
fisttp
xchg
cli
sub
mov
xor
mov
ja
repz
mov
shr
js
mov
jmp
add
sbb
xor
mov
enter
out
rcl
and
cmp
bnd
mov
xchg
ja
add
pop
dec
mov
cmp
into
or
push
aaa
sbb
das
cs
clc
push
test
dec
jmp
and
aas
mov
pop
clc
adc
js
call
xchg
jb
rcl
(bad)
loopne
or
inc
jp
(bad)
cld
sti
and
cmp
add
sub
push
mov
push
psubsw
xor
mov
repz
(bad)
out
pop
add
mov
rcr
cli
leave
pop
jg
cmp
imul
sub
rcr
lods
inc
je
mov
rcl
xchg
imul
xor
adc
pop
shr
lods
cdq
in
add
add
pop
inc
rcl
xor
jbe
push
sti
je
jge
in
rcl
aam
ds
mov
jbe
mov
cmp
xchg
leave
(bad)
sub
(bad)
stc
pushf
xchg
call
pop
sar
leave
fadd
jae
mov
push
shl
and
lahf
cmp
imul
lahf
push
loopne
add
mov
repz
xchg
cmp
pushf
cmp
cmp
and
dec
(bad)
stos
sub
inc
mov
repnz
pop
ins
push
cld
cmp
sub
outs
jns
sub
cmp
pop
call
xor
sub
and
test
call
out
mov
scas
xor
mov
(bad)
in
pop
retf
repz
mov
and
xor
repnz
fs
(bad)
fmul
int3
pop
mov
dec
ins
xchg
ror
aas
jo
or
lea
retf
and
daa
jecxz
pop
cs
retf
push
or
pop
mov
xchg
call
adc
inc
pop
jp
xchg
and
add
ss
repnz
in
mov
adc
adc
mov
inc
inc
push
mov
inc
mov
adc
ja
cmp
inc
inc
dec
(bad)
es
lods
outs
inc
pusha
mov
inc
(bad)
inc
int3
repnz
addr16
daa
sbb
ds
jmp
dec
lods
iret
xor
ins
mov
ins
pop
ds
xor
bound
mov
pop
jnp
movs
inc
cwde
mov
sbb
iret
dec
lock
call
jmp
inc
lods
add
add
loope
inc
cmp
sub
xchg
outs
xor
ja
addr16
dec
lock
out
xor
aam
sahf
cmp
push
or
mov
stc
stc
int3
push
aam
xchg
inc
or
mov
mov
and
or
in
ficomp
aaa
mov
ffreep
sbb
jp
mov
call
cmp
inc
mov
repz
(bad)
fisttp
out
fs
aad
push
push
cdq
out
push
sbb
outs
ret
add
test
inc
mov
sbb
pop
sti
in
pop
inc
mov
pushf
pop
cmp
cmp
and
xor
dec
and
inc
xchg
test
test
inc
sub
dec
cmp
fsubr
dec
sbb
cmps
mov
cdq
xor
cmp
cs
mov
jae
mov
mov
cmps
inc
cmp
hlt
inc
retf
sahf
cwde
scas
call
sub
imul
cmp
vpmacssww
inc
fnstcw
ins
jg
les
into
push
mov
dec
retf
add
mov
leave
inc
out
xlat
inc
popf
mov
loopne
pop
pop
gs
jecxz
(bad)
mov
pop
inc
cmp
pushf
shr
sub
test
pop
add
add
sbb
or
popa
mov
daa
ds
dec
arpl
or
scas
jae
sbb
test
cmp
loopne
cmp
pop
mov
xchg
inc
jnp
icebp
mov
repz
nop
inc
stos
xchg
mov
xchg
in
out
mov
out
js
inc
imul
adc
mov
bound
push
fwait
cmp
clc
retf
das
adc
popa
pop
mov
or
ins
inc
push
ret
shl
sbb
cmp
add
(bad)
dec
fbld
loopne
mov
fdivr
call
jge
mov
fdiv
aas
(bad)
jno
aam
xchg
adc
pop
out
sbb
fdiv
pop
outs
loope
sbb
dec
jge
inc
pop
nop
mov
mov
ret
mov
mov
sar
cmps
xchg
arpl
std
mov
or
mov
push
icebp
scas
add
mov
jae
mov
aas
jle
pusha
daa
sti
jmp
pop
imul
movs
dec
fstp
cmp
mov
retf
jge
mov
out
push
xchg
cmp
add
loopne
push
xor
or
jns
push
and
inc
or
mov
adc
push
adc
and
pop
xchg
jns
sbb
(bad)
(bad)
into
or
push
push
sub
inc
(bad)
mov
cmp
mov
jb
test
ja
hlt
inc
int
movs
mov
mov
or
fild
jne
adc
sbb
mov
jno
mov
pop
sub
jl
and
add
shl
in
push
ror
pop
adc
loopne
pop
cmp
mov
cmp
cmps
mov
scas
xor
outs
inc
sar
(bad)
daa
sub
cmp
aam
icebp
fsubr
repnz
loop
add
sbb
pop
mov
dec
fucomp
stos
ins
ds
(bad)
in
sub
sbb
jp
cli
mov
cmp
dec
adc
xchg
push
cdq
add
xchg
or
mov
cmp
push
retf
mov
gs
ins
or
cmp
mov
test
mov
xor
pop
scas
xchg
mov
pop
sbb
aad
cs
fsub
mov
(bad)
adc
jge
cld
sub
jb
(bad)
hlt
loopne
fs
pop
pop
pusha
cdq
jle
xor
sbb
sub
xchg
pusha
or
enter
inc
sub
xchg
cmp
mov
jle
jns
pusha
mov
cmp
xor
outs
fs
scas
inc
cmp
lock
outs
xlat
inc
push
ret
push
xor
sbb
jg
movs
push
dec
mov
in
jnp
mov
sbb
jmp
iret
test
adc
jno
hlt
pop
push
push
cmp
jno
mov
repnz
jle
ret
sub
xor
adc
popf
outs
lods
ror
jns
xchg
les
iret
sbb
int
xor
push
mov
ja
scas
fwait
mov
daa
test
pop
das
(bad)
leave
mov
not
fild
push
ror
sbb
xchg
jge
cmp
mov
aas
or
mov
bound
lods
add
pop
mov
sub
nop
jle
stc
sti
inc
aam
(bad)
mov
adc
jge
dec
lods
mov
int3
and
icebp
mov
mov
mov
push
cwde
pop
and
mov
sub
aas
push
push
addr16
sbb
pop
jno
bound
mov
(bad)
jns
movs
mov
mov
add
xchg
iret
pmuludq
(bad)
in
stos
call
adc
push
icebp
and
cmp
imul
xchg
cmp
jge
jle
inc
lahf
int
ss
outs
aas
bnd
repnz
stc
sub
jns
call
and
jp
sbb
mov
aam
add
jns
inc
pop
cmp
and
mov
inc
mov
cdq
aad
inc
mov
push
inc
inc
push
dec
pop
mov
test
push
and
sbb
cmp
icebp
gs
inc
dec
mov
add
inc
dec
xchg
pushf
shr
test
into
rcr
lock
out
cmp
inc
push
jne
leave
scas
aaa
js
add
mov
mov
aam
std
cmp
sbb
push
call
xchg
in
inc
jns
xor
push
cmc
push
push
inc
xlat
les
mov
nop
xchg
xchg
in
sbb
mov
les
cmc
retf
push
iret
push
adc
mov
push
mov
xchg
jbe
mov
repz
movs
push
push
loopne
fnstcw
int
pop
test
add
inc
into
out
dec
sub
pop
fsub
pusha
inc
cmps
xchg
lods
pop
movs
mov
(bad)
(bad)
mov
push
cmp
mov
add
outs
pop
pop
and
xchg
jne
rcr
into
icebp
jmp
arpl
inc
mov
adc
jns
xchg
xchg
js
aad
mov
clc
add
dec
loop
xor
dec
pop
and
inc
inc
movs
pop
rcl
and
dec
mov
outs
addr16
push
dec
dec
push
jbe
jmp
clc
mov
mov
dec
pop
leave
xor
push
cmp
bound
stos
mov
jbe
jae
sbb
mov
fild
aaa
jmp
mov
int
push
inc
fld
cmp
ins
stos
inc
inc
push
repnz
fadd
sub
pusha
sahf
mov
jbe
rcl
mov
adc
sbb
rol
jle
ins
jg
sub
jl
out
retf
xchg
pop
sar
inc
dec
movs
ss
inc
pop
dec
push
sbb
cmp
lods
mov
mov
dec
test
xor
mov
xchg
dec
xlat
fistp
fmulp
scas
dec
or
mov
cmp
loope
dec
pop
inc
xlat
inc
icebp
retf
jb
dec
test
inc
gs
jnp
mov
cmp
inc
into
jmp
repz
sbb
xchg
inc
add
adc
add
cmp
fst
sbb
inc
push
push
adc
gs
inc
test
(bad)
jne
test
and
mov
pop
jbe
cmp
stos
mov
(bad)
cmp
jecxz
ins
mov
cdq
mov
jb
std
xchg
push
pop
inc
in
add
ins
dec
cmp
jmp
addr16
test
popa
cmp
mov
int
pop
push
fsubr
xor
xor
pop
mov
cmp
sar
inc
dec
js
daa
inc
cmp
fmulp
jp
push
inc
scas
pop
mov
test
or
in
ret
dec
inc
mov
pop
and
mov
mov
inc
push
outs
adc
cmps
mov
jmp
inc
pop
lods
xor
mov
shr
pop
cdq
pop
test
xchg
fbstp
sahf
or
pop
dec
inc
mov
xor
rcl
xor
movs
outs
js
cmp
cmp
xor
and
mov
movs
pop
cmp
mul
mov
ja
test
es
out
cmp
out
out
add
adc
test
neg
xor
or
into
and
pop
dec
cdq
jo
out
pop
loop
leave
fisub
dec
jnp
std
pop
cld
sbb
sbb
popf
stos
mov
fnstsw
and
and
outs
sbb
fs
xor
mov
clc
loopne
stos
dec
pushf
jbe
in
test
mov
sub
push
xor
push
pop
mov
cmp
push
stos
fst
push
cmp
push
pop
mov
rol
inc
xor
int
cmp
dec
js
mov
into
ret
je
sahf
mov
adc
movs
mov
enter
(bad)
fisub
js
and
movs
dec
push
cmp
sub
les
inc
sbb
inc
cs
inc
sub
push
out
movs
push
rcl
pop
mov
inc
outs
data16
sub
int3
mov
xor
push
push
pusha
ret
inc
sub
sti
mov
inc
jg
neg
repnz
cmp
inc
xchg
(bad)
lock
inc
cmp
dec
(bad)
retf
fld
outs
icebp
das
test
pop
int3
dec
inc
inc
inc
arpl
les
ret
mov
dec
imul
sti
(bad)
hlt
inc
inc
clc
lock
test
inc
inc
inc
cmp
xchg
sub
add
dec
cmp
test
outs
imul
or
loope
inc
dec
sub
inc
mov
push
scas
mov
dec
push
test
push
lea
loopne
cmps
imul
inc
pop
cmp
fld
xor
out
inc
push
addr16
cwde
add
mov
jp
test
int
cli
ds
clc
cmp
ins
lods
jecxz
sbb
sub
inc
das
data16
xchg
mov
jmp
stos
inc
sub
or
and
gs
xor
sub
inc
push
stos
inc
es
(bad)
lahf
mov
mov
jmp
out
or
inc
inc
inc
sub
xchg
cmp
out
call
rol
mov
clc
js
mov
test
cmp
inc
bound
xchg
and
add
inc
test
cmp
dec
ror
cli
fcomi
imul
call
inc
sbb
xchg
stos
cmp
or
jae
lods
iret
fdivrp
inc
push
repnz
jb
fldcw
inc
dec
inc
push
in
push
pop
cmps
push
inc
mov
into
rol
int
fcomi
sbb
pop
lds
or
mov
repnz
add
dec
sub
inc
fcomp
dec
data16
std
pop
test
or
or
push
sbb
mov
lds
mov
cmp
push
test
mov
cmc
(bad)
int3
bound
cs
sub
sub
lods
push
popa
pop
push
scas
sub
mov
not
xor
and
pop
stc
aam
shl
xor
(bad)
cmp
jge
cmp
adc
dec
cmp
push
arpl
or
jae
(bad)
fdiv
pop
ret
(bad)
xchg
in
cmp
push
(bad)
xchg
icebp
fiadd
pusha
cli
(bad)
push
in
enter
lock
cmp
mov
(bad)
inc
mov
sti
(bad)
mov
push
pusha
ins
aad
pop
fldcw
mov
jnp
sbb
xor
outs
xor
jno
popa
pop
sub
mov
in
leave
stos
mov
sbb
rol
adc
inc
cmp
pop
mov
dec
pop
pop
xor
test
into
jno
dec
cmc
addr16
(bad)
or
fs
jae
and
push
xor
stc
test
adc
cli
xor
mov
fwait
fwait
in
ins
jnp
iret
fwait
std
mov
mov
adc
in
or
pop
mul
ror
cmp
cmc
retf
pop
sbb
inc
out
and
inc
mov
pop
movs
cli
aas
sbb
fdivr
push
clc
sbb
test
inc
movs
pop
cmp
inc
dec
inc
data16
sbb
push
std
ds
dec
call
div
sahf
in
aam
jbe
retf
lds
cld
mov
mov
retf
sbb
pop
xchg
sbb
test
rcr
jl
xchg
(bad)
imul
mov
aam
dec
push
mov
jne
sbb
ret
pop
sbb
inc
fist
mov
fs
dec
jle
push
mov
jg
fisttp
add
sub
and
in
aaa
lds
pmulhuw
mov
leave
pop
mov
sbb
test
dec
jl
cmp
mov
adc
aam
mov
aam
(bad)
sahf
repz
icebp
sbb
test
cmp
mov
inc
cmp
je
xchg
test
cmp
mov
ret
mov
inc
or
xor
rol
ins
mov
aad
stc
xchg
or
(bad)
ret
fs
out
sbb
mov
fist
je
(bad)
or
ret
pop
icebp
(bad)
jns
adc
outs
imul
jge
mov
mov
and
cmp
pop
loopne
jns
xchg
stos
fst
mov
nop
or
cs
adc
or
jns
jge
(bad)
sti
pop
out
int
xor
dec
mov
cmp
ret
sub
bound
js
xchg
sbb
jg
jnp
lea
mov
mov
xor
inc
adc
xor
fs
cmp
jl
jbe
and
fnsave
mov
or
dec
xchg
sbb
or
hlt
mov
sbb
xchg
add
outs
add
mov
jmp
scas
mov
push
mov
push
xchg
pop
pop
rcr
adc
push
imul
inc
pop
ds
jns
jbe
fistp
and
outs
dec
and
addr16
cmc
ins
push
sar
adc
push
jle
mov
test
(bad)
arpl
fild
add
aas
jno
cmps
jae
retf
mov
xor
shr
sbb
xchg
test
test
loope
je
and
push
sub
push
je
xor
je
dec
pop
mov
popf
test
pop
cmp
sbb
add
icebp
cmp
lods
and
cmp
jbe
nop
test
cmps
mov
jns
repz
shr
retf
je
inc
imul
pop
jno
sub
fsubr
(bad)
mov
xchg
or
data16
loope
push
js
sub
popf
push
jne
inc
aad
add
mov
and
ins
adc
mov
stos
leave
sub
leave
push
or
sub
rcr
mov
xchg
mov
pcmpeqb
jmp
jp
cmp
mov
pop
or
test
jmp
pop
or
jno
call
mov
mov
dec
mov
in
aaa
nop
push
fisubr
ds
or
sub
sbb
pop
mov
fidiv
xor
sbb
jg
outs
cmp
xchg
adc
xchg
mov
or
fst
jno
mov
sahf
xor
mov
add
sbb
lahf
rcr
or
pop
mov
mov
mov
lock
mov
js
xchg
and
popf
inc
jle
bound
frstor
mov
mov
mov
xor
pop
inc
dec
sbb
inc
lds
cmp
adc
mov
mov
pop
imul
mov
enter
inc
add
xchg
into
in
push
stos
sub
dec
jnp
cmp
mov
add
add
ret
inc
add
xchg
in
jb
rol
mov
xor
mov
jp
lea
mov
add
repnz
clc
xchg
cmp
rol
push
xchg
mov
jecxz
aaa
add
xchg
push
push
fld
sub
cmp
push
xchg
inc
sub
pop
lock
movs
inc
jge
mov
cmps
adc
jnp
outs
add
xor
xor
cmp
or
push
inc
adc
enter
mov
pop
or
out
lds
ins
and
and
mov
sar
imul
adc
pop
sti
cmps
je
cmp
rol
inc
pop
mov
call
into
mov
push
jl
jns
dec
test
mov
sub
or
pop
inc
push
(bad)
inc
jge
lods
pop
dec
ja
or
or
sbb
mov
dec
inc
mov
iret
hlt
push
mov
(bad)
add
std
sub
arpl
jo
xor
imul
dec
aas
fndisi(8087
ja
js
jno
mul
push
fild
aas
xchg
push
push
mov
jb
pop
sbb
or
shl
je
rdmsr
pop
fmul
pop
loopne
int
stc
out
jl
sbb
dec
push
test
mov
xor
pop
add
jbe
jle
push
inc
pop
sbb
pop
into
pop
call
inc
inc
jno
sbb
in
(bad)
int3
cmovo
cmc
retf
ffreep
fcmovnb
rcr
aam
adc
dec
sbb
sub
ja
aas
or
(bad)
mov
stos
ins
mov
xor
inc
xchg
xchg
push
cld
iret
pop
fwait
inc
popa
loopne
in
adc
shr
or
mov
(bad)
xor
out
ror
sub
dec
mov
add
cmp
cmps
(bad)
sub
adc
inc
fcom
and
cli
jno
in
iret
cwde
arpl
cs
cmp
sub
inc
inc
add
inc
test
mov
jnp
cmp
mov
in
cdq
pop
data16
cli
jnp
int
inc
dec
pop
mov
push
inc
push
sti
add
sub
loope
in
jnp
in
inc
mov
loopne
and
repz
in
shl
xlat
sub
xor
mov
or
cmp
xchg
and
out
sub
mov
shr
push
js
outs
jno
bound
jnp
sbb
div
push
and
sub
test
adc
mov
inc
ret
mov
sub
loop
repnz
cmps
push
jge
cs
jg
inc
ja
push
xlat
ret
mov
imul
ds
push
inc
push
inc
ret
shl
adc
(bad)
sub
into
xlat
inc
adc
ss
iret
and
xor
mov
fstp
sub
nop
call
dec
mov
lahf
mov
outs
inc
inc
mov
xlat
rol
icebp
sbb
fmul
ds
sahf
mov
inc
sbb
inc
ja
add
mov
jmp
clc
jecxz
in
xchg
jo
mov
mov
pop
push
cmp
sbb
in
cmp
mov
retf
add
push
adc
mov
fsubrp
sbb
scas
push
cmp
inc
je
inc
mov
in
stos
sbb
dec
mov
mov
iret
sub
mov
push
test
xor
jmp
add
dec
fcmovnbe
xor
pop
ins
dec
cmp
scas
sbb
inc
aad
icebp
inc
push
rcl
mov
xchg
movs
cwde
cmp
add
out
dec
pop
and
cmp
add
push
clc
(bad)
pop
ret
call
sub
popa
adc
sub
(bad)
ror
stc
cs
dec
bound
sbb
cdq
cmp
fisttp
inc
push
aam
scas
mov
in
cli
dec
pop
imul
retf
inc
xor
xlat
ret
xor
mov
shl
cmp
mov
test
aam
add
movs
cmp
cmp
mov
xchg
xchg
mov
and
ds
(bad)
fbld
pop
add
lds
jbe
cmp
jno
dec
mov
fnstsw
dec
adc
rcl
gs
cmps
fdiv
mov
pop
ss
call
scas
iret
js
ret
mov
adc
push
cmp
jge
imul
nop
jno
jnp
pop
loope
mov
dec
mov
and
jmp
jp
xor
adc
pop
hlt
test
rcr
fist
xor
lock
shl
hlt
mov
xchg
xchg
xor
or
jno
push
xor
dec
pushf
xor
mov
dec
and
and
dec
leave
movs
inc
je
pop
sbb
call
lods
and
sub
push
xchg
mov
arpl
jge
cmp
call
xor
icebp
jns
dec
fstp
or
loope
fsubr
lahf
ds
sub
xchg
pop
sbb
lock
popa
ja
(bad)
fiadd
retf
mov
pop
jns
ins
cmp
push
sbb
jo
cmp
dec
jge
push
adc
fdiv
daa
sub
adc
nop
mov
stos
fwait
pushf
ins
nop
mov
mov
mov
pop
sbb
movs
pop
xchg
jg
cmp
add
sub
mov
stc
cld
xor
xor
fs
(bad)
js
loope
pop
fst
clc
sbb
aad
ds
pusha
repnz
je
data16
sbb
mov
(bad)
mov
jno
(bad)
ins
cmp
inc
and
pop
xor
cmp
ffree
rcr
aaa
add
cld
movs
cs
or
pop
in
jno
mov
sub
jae
mov
push
jae
and
xchg
in
fsub
mov
(bad)
mov
mov
mov
mov
scas
inc
and
cmp
pop
fbstp
jns
xor
pop
shl
int
scas
test
xor
push
dec
das
cmp
pusha
jns
lods
cwde
sar
jno
mov
das
imul
bound
stos
cdq
xor
nop
or
push
jle
ds
add
xchg
pusha
mov
add
bound
je
jge
add
cmp
mov
in
sbb
loope
xor
fadd
or
pop
cs
out
ins
xor
retf
stc
cmp
lods
mov
call
jbe
and
retf
in
jae
inc
fcomp
dec
mov
xchg
aas
push
out
pop
sbb
xor
add
ret
in
retf
leave
loopne
(bad)
shl
rcl
inc
mov
fsub
in
sub
pop
lahf
(bad)
mov
inc
repnz
mov
retf
jg
sub
inc
fimul
dec
popf
into
inc
inc
test
adc
and
loopne
lahf
nop
dec
mov
sbb
push
mov
imul
mov
cmp
push
cmp
jnp
inc
adc
inc
xchg
mov
jb
fwait
ds
cld
jmp
fs
pop
inc
mov
inc
add
cmp
inc
call
cmp
out
xchg
(bad)
test
cmp
retf
aam
loop
push
rol
stos
outs
jl
add
ja
jne
repz
leave
lea
jo
ret
xchg
mov
jl
hlt
push
inc
or
xor
pop
mov
sub
sbb
loop
int3
lods
push
or
pop
rcr
push
retf
pusha
sahf
sub
mov
loopne
stc
push
ror
call
add
mov
movs
loope
pop
scas
addr16
inc
push
sti
movs
ins
fs
ret
aas
dec
out
pop
push
jae
cld
hlt
cmp
repz
jp
sahf
clc
jno
push
xchg
push
push
push
jmp
adc
sahf
push
pop
push
add
iret
pushf
and
sbb
je
leave
add
icebp
and
pusha
cmp
aam
in
sub
jns
lock
mov
pop
ins
cmp
bound
ds
(bad)
std
jb
not
in
adc
sbb
cld
xchg
in
jno
(bad)
mov
lahf
xchg
jmp
test
lahf
mov
cmp
clc
pop
push
mov
xor
inc
jno
(bad)
mov
push
cmps
dec
fcmovne
jne
loopne
sbb
mov
pusha
mov
idiv
or
div
icebp
jge
push
popf
je
mov
pop
ins
leave
ins
cmp
out
rcr
xlat
push
fiadd
icebp
adc
dec
add
xchg
adc
mov
rcr
pusha
jmp
sub
sar
push
clc
dec
(bad)
xor
sar
repnz
inc
rol
sbb
mov
js
sbb
jns
inc
dec
xchg
mov
rcl
bound
xor
xchg
jns
stc
jmp
pushf
ja
fwait
cmp
and
sbb
pop
sbb
in
pop
fsub
ds
pop
aad
fdiv
ror
bound
shl
shl
out
jge
adc
shr
jnp
mov
and
mov
mov
iret
pop
jae
fwait
xchg
hlt
adc
popf
mov
jle
mov
jl
popa
jne
loopne
retf
jmp
scas
mov
ds
movs
xchg
dec
inc
icebp
adc
inc
xchg
push
js
dec
mov
shr
fadd
stos
inc
sub
lods
mov
jmp
out
hlt
inc
jle
sbb
into
(bad)
f2xm1
cmp
shl
mov
xor
movs
inc
addr16
or
pusha
aad
inc
inc
dec
xlat
retf
mov
in
inc
jb
mov
pop
inc
loopne
(bad)
lods
mov
inc
aam
jge
data16
(bad)
dec
sub
or
or
das
retf
cmp
fcom
stos
retf
enter
sbb
sub
mov
and
int3
fstp
call
pop
mov
stos
retf
or
(bad)
dec
fnsave
aam
xchg
mov
xor
and
xchg
mov
ret
sub
jns
pushf
add
test
loopne
cwde
test
leave
pop
popa
xor
xor
addr16
inc
int3
cmp
fidiv
addr16
mov
jmp
dec
fdivr
pop
add
mov
xchg
arpl
ja
pop
test
fadd
pop
out
inc
sub
movs
scas
dec
inc
dec
jae
clc
das
cmps
cmps
lods
mov
dec
call
pop
sti
inc
in
sti
jbe
xchg
xor
pop
push
dec
inc
mov
lahf
imul
cmps
movs
stos
cmp
cmp
(bad)
popf
dec
aas
pusha
repnz
mov
jmp
xor
inc
cmc
mov
fst
inc
ins
clc
loope
inc
mov
push
pop
fadd
inc
pop
iret
fistp
jl
sub
add
push
inc
fidiv
js
xchg
dec
cmp
fadd
and
pop
mov
xor
mov
xchg
push
fisttp
int
mov
and
sbb
mov
adc
stc
dec
sub
pushf
jmp
inc
enter
adc
push
into
push
xchg
xor
sbb
cmc
cld
dec
cmp
xchg
jns
adc
pushf
(bad)
and
dec
inc
mov
int3
xchg
sub
pop
push
dec
inc
mov
icebp
dec
xor
fidiv
je
sub
pusha
sti
and
add
push
sub
mov
dec
shl
inc
das
adc
or
int
aaa
rol
sub
test
out
cmp
in
sub
xchg
das
cmp
pop
pop
dec
inc
mov
fldcw
inc
out
daa
jno
xchg
dec
inc
cmp
or
std
inc
arpl
scas
call
inc
mov
cmc
sub
mov
imul
fild
nop
push
cld
dec
loop
pop
sub
icebp
inc
out
jbe
inc
mov
pushf
hlt
sub
lods
cmp
push
cmp
or
mov
xor
xchg
sub
out
push
dec
inc
mov
repz
sub
fdiv
cli
sub
pop
sti
inc
call
cwde
sub
pop
push
dec
inc
inc
mov
repnz
inc
pop
cmp
cwde
dec
cmp
cmp
movs
cs
inc
cmp
jnp
mov
mov
inc
data16
inc
aas
retf
adc
pop
jb
sbb
js
add
pop
sub
dec
jl
movs
sbb
inc
(bad)
je
loopne
xor
pop
inc
mov
mov
cli
pop
adc
test
cmp
aaa
jno
fisttp
ds
aas
pop
cs
cs
dec
and
xlat
and
test
cld
xchg
inc
cmp
mov
pop
rcl
rol
jmp
add
pop
sti
stos
bound
movs
std
cld
cmp
pop
in
lahf
rcr
sbb
mov
and
xor
lods
inc
push
test
inc
shr
pop
inc
inc
mov
jle
xchg
outs
inc
xchg
inc
jp
js
leave
pushf
inc
aas
sahf
idiv
movs
jbe
fild
xchg
sbb
scas
inc
movs
pop
jne
inc
cs
inc
daa
loop
add
xor
pop
cmovo
mov
int
xchg
pop
push
ja
jno
inc
ja
cs
xor
gs
das
sub
cmc
das
fisubr
retf
dec
das
(bad)
xor
push
cmp
js
das
inc
fsubr
jg
mov
push
inc
addr16
push
aaa
dec
push
and
push
xor
push
inc
cmp
adc
push
scas
jnp
je
push
adc
push
pop
adc
mov
sbb
mov
icebp
in
push
add
push
lock
and
mov
push
add
aad
push
adc
arpl
cmp
push
ficom
push
adc
push
push
push
retf
sub
push
pop
or
rcr
jl
mov
xor
xor
xchg
xor
fistp
cmp
dec
xchg
inc
fstp
dec
cmp
gs
inc
test
xchg
ds
sub
into
sub
inc
rcr
dec
jno
retf
xor
jecxz
into
in
cs
stos
inc
cmp
scas
movs
inc
inc
repnz
and
dec
dec
pop
xlat
inc
sub
mov
inc
or
sub
das
add
das
mov
das
adc
das
adc
mov
pop
push
sub
push
out
push
push
sub
mov
adc
in
mov
inc
call
fsubr
int
cmp
and
xlat
cmp
shl
std
sbb
or
cmp
sub
sar
cld
test
inc
mov
cmp
aam
inc
in
ss
(bad)
add
push
(bad)
mov
pop
push
cs
add
in
inc
cs
psrlq
test
clc
inc
jnp
inc
mov
inc
pop
cmp
addr16
sahf
mov
jbe
hlt
stos
rol
xor
push
mov
jno
cmps
mov
sbb
ret
jb
or
stos
xchg
scas
cmp
ins
xor
inc
pop
and
das
mov
pop
movs
scas
sub
sub
inc
inc
jne
repnz
ret
inc
inc
lahf
sub
inc
lods
mov
movs
scas
inc
push
sub
dec
sar
sub
mov
pop
lods
cmp
push
xor
pop
daa
dec
mov
and
inc
sub
jmp
add
push
lods
shl
repz
mov
shr
cmp
sub
jns
xbegin
lds
repnz
sub
mov
jle
pop
mov
das
popa
jns
dec
xabort
imul
shl
pop
sub
mov
jge
pop
test
pop
int
inc
cmp
clc
and
mov
dec
mov
pop
xor
mov
xor
sbb
sbb
scas
iret
add
sub
fist
pop
popa
aas
xchg
adc
cmp
push
aas
and
aas
outs
pop
xor
dec
ret
xor
xor
xor
das
xor
popf
xor
dec
xor
ja
or
call
or
aas
push
cmp
mov
inc
xor
mov
cmp
xor
inc
jp
pop
and
and
mov
and
ds
pop
xchg
sbb
push
inc
or
sub
or
cmp
xlat
jmp
ja
cmp
xchg
pop
aas
jo
inc
cmp
retf
fmul
adc
sub
fdiv
movs
inc
cmp
xlat
cwde
xor
inc
cmp
xchg
out
shl
xor
cmp
test
mov
add
(bad)
and
ror
adc
xchg
inc
cmp
(bad)
add
inc
iret
inc
sti
call
inc
sbb
mov
cwde
aas
cmp
inc
or
xor
loope
or
outs
push
or
enter
inc
sbb
cmp
cmp
mov
mov
lods
jecxz
push
and
sub
adc
cmp
cwde
xchg
push
inc
push
or
jmp
in
fcom
inc
loop
cmp
neg
xor
sub
loopne
jb
ins
int3
test
in
sub
loope
pop
dec
inc
shr
push
add
add
pop
xchg
add
shl
out
cli
xchg
sti
int
fs
xor
movs
and
inc
js
shl
fs
(bad)
cmps
sub
push
out
mov
mov
inc
xor
and
add
mov
inc
rol
ds
pop
outs
cmp
icebp
and
cmp
jno
js
fisubr
xchg
and
jns
mov
cmp
cmp
outs
ret
fs
inc
inc
pop
es
add
adc
sti
xchg
shl
loopne
cmp
jo
cmc
fcom
xor
adc
xor
mov
inc
das
mov
sub
int3
fistp
or
mov
dec
sbb
xor
cmp
pop
mov
adc
mov
(bad)
pop
retf
es
addr16
aaa
inc
pop
cmp
jp
test
cmp
push
mov
pop
ds
xor
lods
dec
clc
and
cmp
inc
div
mov
adc
(bad)
fisubr
add
dec
inc
cmp
sbb
and
fadd
out
mov
loope
sub
cmp
ds
loop
inc
xlat
cmc
repnz
out
adc
out
adc
and
shr
mov
ss
sbb
test
push
inc
nop
jb
sub
mov
test
sub
or
jg
icebp
out
cmp
shl
jno
fisubr
idiv
adc
and
cld
cmp
mov
nop
je
mov
das
mov
and
inc
mov
das
xchg
aas
int
jns
cmp
or
jl
xor
cmp
jne
mov
test
mov
jae
and
and
pop
std
adc
cs
rol
js
daa
aad
cmp
push
mov
in
out
test
rcl
repz
dec
mov
pop
loop
lahf
test
add
add
sub
xchg
jl
sti
and
xor
daa
pop
fld
mov
mov
sub
xor
fnstsw
aas
inc
push
repnz
pusha
pop
test
add
je
in
or
aaa
imul
mov
mov
shl
jb
ret
dec
add
loopne
xor
dec
sub
inc
pop
push
cmp
retf
inc
inc
mov
in
es
scas
inc
cmp
hlt
push
pop
pop
fbstp
inc
out
or
imul
fstp
mov
fidiv
pop
loopne
dec
inc
outs
movs
inc
jmp
or
es
lea
std
adc
mov
stos
jle
mov
inc
fistp
or
cmp
test
jo
push
lahf
push
pushf
inc
pop
mov
ins
jmp
mov
inc
add
add
cmp
inc
enter
rcl
stc
imul
xchg
inc
push
loope
or
retf
sub
js
push
cld
mov
add
loop
mov
(bad)
pop
outs
xchg
inc
out
(bad)
sub
mov
xor
in
call
jne
data16
xor
jns
inc
or
sub
test
cwde
cld
ins
in
inc
push
pop
xchg
arpl
ret
in
or
xor
(bad)
repz
test
xor
cmp
(bad)
inc
fisub
push
cmp
mov
push
push
ss
pop
or
dec
inc
xchg
add
arpl
push
cmp
into
push
pop
mov
jne
adc
cmp
cmp
call
pop
(bad)
in
call
rcl
inc
jg
cmp
shl
inc
das
inc
dec
and
std
inc
sbb
inc
vcvtsd2si
test
mov
xor
jl
das
aad
add
rcl
pop
mov
pop
cmp
mov
sub
dec
mov
test
cmp
and
repnz
imul
dec
stos
cmp
add
add
or
mov
push
sti
push
xchg
repz
cmp
push
dec
lock
iret
jns
inc
ret
cmp
or
lds
fnstenv
cmc
aaa
sbb
fwait
inc
leave
inc
jmp
xchg
push
push
fs
sub
xor
ins
mov
push
call
inc
dec
inc
mov
ret
pop
jb
cmp
std
pop
scas
lahf
sub
push
out
fnstcw
fmul
(bad)
cmp
push
mov
das
stos
stc
jl
dec
push
out
adc
jbe
jne
inc
dec
rcl
fwait
pop
out
popa
inc
ins
sub
jmp
pop
pop
cmp
lock
dec
in
xchg
dec
cmp
(bad)
icebp
retf
mov
pop
cmp
nop
test
or
in
push
pop
mov
jae
scas
stos
pop
add
xor
test
mov
and
fisttp
rcr
sbb
cmp
cmps
xor
push
mov
xchg
push
inc
push
pop
mov
push
or
arpl
push
inc
cmp
cmp
call
sbb
pop
adc
sbb
mov
ret
fs
mov
ins
inc
scas
cmp
pop
pop
lahf
mov
sti
inc
(bad)
retf
inc
cmp
aad
pop
inc
stos
sar
in
xchg
cmp
(bad)
sub
gs
mov
cmp
inc
and
sbb
inc
pop
mov
fldcw
retf
xchg
out
inc
outs
jge
jecxz
loopne
push
xor
fstp
inc
int3
repnz
push
cld
push
xor
inc
push
push
out
inc
ds
(bad)
test
cld
inc
inc
cmp
mov
push
jns
mov
pusha
fstp
pop
popa
mov
fdivr
lods
and
rcl
sub
je
push
add
mov
mov
inc
xor
repz
inc
mov
xchg
xor
inc
mov
call
or
inc
jns
daa
retf
repz
call
add
ret
inc
inc
adc
inc
jno
dec
and
addr16
add
and
adc
retf
clc
push
stc
push
repnz
mov
das
dec
inc
mov
xor
add
movs
sbb
jb
cmp
popf
or
(bad)
fldcw
xchg
sub
pop
sbb
inc
cmp
jl
xchg
inc
pop
pop
cmp
(bad)
push
loopne
push
cmovo
and
push
push
pop
mov
test
push
xchg
xor
add
jns
inc
or
and
dec
xlat
mul
hlt
clc
add
push
lods
js
push
inc
sbb
lds
cmp
inc
inc
and
movs
call
inc
imul
xchg
fsubr
mov
das
inc
fwait
mov
sub
sar
fcom
stc
in
cmp
je
scas
inc
out
add
ja
inc
mov
out
pop
sbb
inc
sub
xchg
sub
mov
xor
fwait
or
inc
jp
adc
fdivr
sbb
nop
cmp
lods
test
in
jbe
mov
inc
movs
push
adc
sti
or
jge
nop
cmc
jp
inc
push
inc
add
mov
stos
inc
sbb
stos
inc
add
inc
cmp
inc
dec
mov
stos
iret
inc
push
or
inc
xchg
js
sbb
imul
shl
aam
xor
daa
xor
pop
pusha
dec
in
mov
add
inc
dec
loopne
cmp
inc
push
fadd
lahf
pop
adc
xchg
retf
inc
inc
mov
fld
ret
movs
loope
fidivr
mov
repnz
pop
ror
iret
jbe
test
pop
js
fcmovb
adc
cmp
add
ds
xor
dec
push
test
or
cmps
das
sbb
dec
out
pop
adc
inc
and
out
sbb
sbb
fstp
inc
jmp
cli
pusha
cdq
cld
test
and
jge
stos
jnp
jae
(bad)
into
das
jmp
inc
pop
call
inc
dec
dec
call
out
aad
mov
data16
mov
inc
sets
sub
retf
cmp
jle
cmp
inc
fdiv
push
dec
lods
sbb
popf
and
fild
inc
jl
dec
in
cli
test
inc
add
cmp
adc
scas
aad
inc
mov
test
mov
ret
test
(bad)
out
xchg
pop
mov
cmp
int3
test
inc
xchg
stos
cld
inc
inc
out
mov
sub
out
xlat
in
cmp
jno
(bad)
out
push
inc
mov
mov
loope
xchg
mov
out
nop
ds
inc
xchg
(bad)
(bad)
pop
dec
sar
inc
fucomi
out
dec
daa
xor
push
popf
loopne
sbb
movs
stos
pop
xor
pop
ds
pop
pop
std
out
rcl
add
dec
inc
mov
jmp
mov
test
or
adc
(bad)
out
ds
jae
sub
(bad)
out
clc
dec
fnstcw
pop
cmps
stos
rol
inc
cdq
inc
lods
loopne
std
mov
and
(bad)
icebp
(bad)
fwait
inc
xor
fwait
imul
and
cmp
jb
cmp
cmps
push
lea
inc
push
fmul
xor
test
aaa
xchg
fst
pop
jne
imul
in
cmp
sbb
push
xor
dec
inc
test
add
aas
and
das
adc
hlt
inc
or
out
out
inc
(bad)
push
mov
gs
cdq
inc
mov
adc
jmp
cmp
cmp
jbe
inc
cmp
in
pop
jg
push
cmp
inc
dec
xchg
xchg
mov
push
jns
sub
(bad)
stos
and
ds
pop
test
add
inc
push
bound
push
ds
sbb
sbb
dec
mov
inc
cmp
cmp
mov
out
inc
inc
and
jns
push
ret
lea
adc
out
cmp
jg
mov
and
add
xor
(bad)
aaa
push
jnp
sbb
sub
stos
cmp
push
push
jp
shl
scas
sub
ret
fdiv
cmc
ds
or
mov
cmps
shl
xor
hlt
fist
inc
cmp
ins
fcomp
sbb
mov
mov
popa
in
and
push
loopne
repnz
dec
mov
jg
shr
push
fdiv
icebp
call
push
ficomp
xchg
cmc
lods
jg
jl
pop
inc
pop
jl
loope
test
addr16
cld
stos
add
push
outs
mov
sbb
mov
mov
mov
cmc
out
mov
lods
scas
ror
dec
ret
repnz
cmp
jmp
jmp
mov
mov
das
lock
pop
pusha
add
xor
mov
inc
jp
sub
out
mov
lods
mov
cmp
cmp
inc
into
sbb
js
jmp
stos
fwait
inc
push
mov
xor
xchg
inc
mov
mov
mov
sub
lods
test
pop
jle
inc
ror
and
dec
push
les
inc
fistp
dec
inc
inc
das
ficomp
and
pop
dec
inc
jbe
inc
cmp
push
mov
inc
mov
mov
cmp
mov
cld
inc
xor
jl
sub
shr
inc
jecxz
mov
arpl
fimul
enter
mov
jbe
mov
dec
(bad)
xor
imul
cmp
test
popa
lock
aas
icebp
cli
add
lds
mov
jge
cmp
icebp
movs
add
mov
inc
test
and
mov
inc
sbb
test
cmps
mov
pop
pop
cs
xchg
xchg
sti
adc
mov
test
mov
or
js
inc
ret
inc
xor
pop
ss
clc
movs
scas
lock
movs
sar
lahf
xor
push
das
and
out
inc
mov
adc
iret
int3
aas
test
inc
js
pushf
inc
inc
fisub
dec
(bad)
sub
stos
sub
test
xor
jge
xchg
popf
inc
shl
popf
pusha
sar
shl
jns
shr
rol
ror
shl
mov
ds
xor
fs
cli
retf
fdivr
cmp
mov
out
cmp
jno
cmp
dec
in
pop
das
cmp
in
inc
pop
pop
jns
ds
pop
jge
mov
icebp
in
cmp
xor
pop
sbb
xchg
sahf
or
dec
pushf
inc
push
out
dec
mov
fs
pop
les
sbb
xchg
mov
add
(bad)
call
push
xlat
outs
add
push
(bad)
rol
push
pop
mov
cmp
ss
add
cmp
lods
bound
or
outs
xchg
in
in
mov
jecxz
and
ds
inc
cs
aaa
mov
mov
mov
(bad)
sub
dec
popa
inc
or
push
xor
sbb
addr16
or
mov
push
adc
inc
push
cdq
inc
xchg
pop
xor
rol
xchg
nop
xor
pusha
and
cld
aaa
test
lahf
lock
push
shr
add
(bad)
call
test
aas
mov
inc
mov
jp
sbb
dec
push
cdq
and
or
aam
add
sbb
pop
cdq
jge
out
aas
test
mov
push
js
(bad)
jecxz
mov
aam
jmp
sub
(bad)
ss
scas
shr
push
dec
push
xchg
fcomp
es
(bad)
and
mov
mov
test
ins
call
lds
inc
in
xor
inc
mov
imul
add
xor
push
mov
push
(bad)
rol
mov
xlat
adc
repz
sbb
leave
add
sub
ins
dec
adc
cli
mov
push
mov
lahf
mov
xor
cdq
xchg
aaa
lea
(bad)
ds
xchg
inc
ret
in
inc
xor
adc
fwait
pop
pop
inc
les
inc
inc
cmp
and
or
pop
rol
repz
cmp
or
sub
pushf
inc
retf
lods
dec
xor
in
jge
push
jle
inc
and
xor
cmc
mov
inc
inc
xchg
mov
mov
adc
ss
inc
bound
inc
mov
leave
sub
pusha
mov
or
cmp
fisttp
in
sti
pop
pop
push
aas
inc
and
mov
cmp
ins
cmp
out
sbb
out
dec
ret
sar
and
stos
(bad)
jecxz
inc
rcr
cs
cmp
pop
pop
lods
scas
push
retf
pushf
test
dec
adc
mov
das
push
wrmsr
cmp
xlat
shr
jae
pop
cmp
nop
fdivr
mov
and
mov
je
inc
call
outs
sbb
mov
mov
std
inc
mov
sub
inc
dec
add
mov
repz
jo
xor
inc
sub
pop
mov
mov
cmp
sbb
sub
jne
mov
fwait
pop
js
ins
sbb
ds
pop
mov
inc
movs
sbb
adc
rcr
out
push
ret
inc
pop
or
mov
inc
rcl
daa
inc
stos
cmc
xchg
data16
dec
jle
push
mov
outs
pop
adc
nop
cmc
scas
aaa
mov
loope
das
dec
mov
lock
addr16
lods
in
and
outs
inc
cmp
sbb
pop
cmps
call
inc
dec
popa
cld
test
add
cwde
cmp
push
add
aam
loope
hlt
mov
addr16
inc
ja
ret
cmps
inc
sub
(bad)
iret
retf
in
fist
sbb
mov
sub
jns
mov
dec
jae
inc
fdecstp
mov
shr
rcl
fisttp
dec
icebp
mov
add
or
cmp
leave
ins
mov
and
lods
inc
lods
pop
das
jmp
sub
inc
and
mov
out
xchg
or
jmp
jne
mov
inc
inc
jl
cmp
leave
mov
fisubr
add
(bad)
in
push
push
add
sbb
pop
push
mov
and
add
jae
fild
push
shr
fbld
push
aaa
rcl
cmc
inc
ins
lahf
les
inc
(bad)
cs
mul
sti
ins
add
sbb
adc
xor
and
lea
jnp
data16
sbb
sub
dec
cmp
dec
sub
xor
lods
stos
mov
cs
mov
sub
inc
int
pop
jp
jb
inc
scas
xchg
add
xor
inc
inc
push
sub
fwait
inc
rcl
jne
cmps
inc
and
pop
mov
sbb
push
cdq
xor
and
cmp
cmps
sub
mov
retf
pushf
push
int3
sbb
movs
ja
xchg
cmp
dec
hlt
or
retf
aas
push
mov
mov
ins
je
imul
push
aas
ror
inc
dec
mov
aaa
sub
xchg
dec
(bad)
adc
repz
inc
xchg
dec
inc
scas
cmc
dec
xchg
and
xchg
xor
cmp
loope
or
daa
cmp
dec
enter
xchg
repnz
imul
inc
and
js
inc
movs
xchg
ror
repz
dec
shr
cmp
sbb
cmp
adc
add
xor
mov
inc
xor
inc
sbb
cmps
cld
out
popa
inc
sti
mov
or
inc
push
retf
sub
inc
push
(bad)
in
fiadd
mov
push
int
sub
sbb
add
dec
xchg
popa
popf
(bad)
in
fucomp
div
fnstsw
(bad)
inc
push
xor
call
not
add
inc
(bad)
(bad)
cmp
sub
stos
inc
fdiv
bound
repz
inc
mov
sub
cli
leave
and
inc
jns
ins
mov
pop
push
sti
nop
int3
inc
pop
cmp
jmp
and
or
xchg
sahf
jno
ret
push
push
inc
push
jmp
mov
cli
iret
retf
or
out
mov
dec
inc
xchg
xor
mov
aad
test
lea
or
inc
sub
sbb
xlat
jno
icebp
test
pop
dec
inc
cld
pusha
cmc
sub
sbb
cmp
and
sbb
inc
(bad)
jno
retf
adc
std
adc
retf
inc
mov
(bad)
adc
jb
dec
mov
push
iret
mov
sub
sti
ds
sub
dec
push
es
jnp
xor
cmp
jb
add
pcmpeqd
push
mov
mov
dec
mov
in
call
pop
mov
(bad)
xchg
jb
and
mov
inc
std
dec
cdq
(bad)
sbb
dec
xchg
stos
xchg
inc
aad
mov
add
xchg
inc
jne
xor
xchg
out
inc
mov
dec
xchg
loope
in
(bad)
xlat
dec
sti
adc
ror
call
pop
inc
inc
mov
test
sub
popa
dec
popa
lods
mov
jp
std
inc
loopne
pushf
es
bound
pop
pop
ror
dec
xchg
inc
jae
cmp
imul
sub
jbe
cmp
mov
xchg
mov
test
jne
push
push
xchg
mov
popf
mov
sbb
std
jbe
(bad)
adc
xor
repnz
cmp
dec
in
lahf
jge
dec
mov
and
cmp
push
jmp
mov
in
fsub
mov
sahf
ja
sub
pop
inc
lds
adc
cli
inc
sub
adc
inc
jg
iret
dec
scas
inc
loope
cmc
mov
jae
lock
sub
jl
pop
out
jle
mov
cmp
mov
dec
ja
daa
in
xor
mov
add
ins
mov
in
in
inc
jne
add
dec
inc
cmp
push
inc
movs
call
mov
dec
xchg
add
imul
int3
inc
inc
sub
inc
aaa
stc
and
cld
icebp
push
xchg
movs
mov
outs
shl
loope
shl
pop
inc
mov
inc
push
and
inc
cmps
js
shr
jecxz
push
loopne
clc
jmp
fwait
or
mov
dec
cdq
(bad)
xchg
or
mov
pop
test
stos
test
pop
jno
mov
mov
push
pop
popa
dec
ins
arpl
push
pushf
shl
aas
shl
fdiv
inc
push
mov
push
mov
cmp
lods
adc
repnz
test
stc
adc
arpl
xlat
sti
lea
dec
js
push
rcr
or
movs
in
inc
jae
fcom
fstp
(bad)
mov
push
punpcklwd
mov
jne
retf
push
js
das
(bad)
push
xchg
data16
mov
add
dec
cmp
mov
ret
ss
jne
aad
inc
(bad)
pusha
adc
adc
fiadd
sbb
jg
inc
or
push
jb
pop
daa
xor
mov
out
inc
inc
sbb
sub
jne
push
loop
adc
xchg
retf
and
das
or
gs
ja
rcr
xor
jbe
idiv
outs
add
mov
cmp
add
inc
dec
inc
nop
in
into
add
push
and
rcl
push
in
push
fist
push
xchg
cld
inc
lea
pop
inc
nop
mov
inc
sub
ins
inc
jbe
aaa
and
mov
sbb
push
push
out
mov
mov
in
sbb
leave
and
cmp
dec
or
jp
dec
xchg
das
dec
adc
push
dec
mov
or
sbb
mov
shl
mov
mov
fwait
cmp
inc
int
imul
ret
mov
cli
out
inc
push
inc
dec
sub
je
inc
ss
and
mov
jl
pop
lds
pop
ins
mov
adc
repnz
stc
fucomip
jo
retf
inc
inc
cmp
add
inc
adc
mov
mov
aas
or
mov
jle
stos
clc
cmps
push
inc
push
sbb
mov
cmp
fmul
push
cmp
daa
mov
cmps
inc
inc
or
popf
dec
dec
ss
push
std
ret
mov
push
stos
fadd
mov
stos
cmp
adc
test
shl
push
inc
mov
int
sbb
(bad)
mov
aam
mov
inc
pop
mov
adc
cmps
xchg
mov
cs
icebp
fwait
mov
addr16
sbb
sbb
xor
outs
cli
mov
call
mov
bnd
cmp
into
fnstenv
pop
mov
cmp
jmp
cwde
inc
sar
cmps
int3
cmp
push
pop
push
mov
xchg
cld
mov
cli
dec
and
sti
inc
gs
fild
std
test
mov
mov
ds
test
mov
aaa
ds
xor
stos
pop
xlat
mov
popa
nop
icebp
je
js
aas
fwait
jns
inc
xor
cmps
pmuludq
call
cmp
push
cmp
cmp
ja
in
dec
cmp
inc
xor
adc
mov
cmp
dec
cld
stos
xlat
push
lock
mov
test
test
popa
mov
mov
mov
mov
test
pop
adc
stos
xor
ja
push
mov
lock
clc
leave
inc
loopne
cli
cs
mov
mov
xlat
jecxz
adc
test
fimul
mov
inc
push
mov
scas
xor
pop
jbe
dec
ds
hlt
loope
and
xor
sbb
test
movs
inc
sub
loop
or
cld
cmp
out
mov
push
sub
sbb
sub
inc
mov
ror
pop
(bad)
mov
into
push
inc
adc
retf
sub
jmp
pop
dec
lods
stos
inc
jnp
cwde
inc
jno
or
push
cmp
and
inc
(bad)
loopne
jle
cmp
lods
movs
stos
lea
add
inc
inc
inc
arpl
ja
mov
movs
inc
dec
outs
xchg
in
cmp
mov
js
adc
gs
sbb
int3
bound
ja
dec
mov
jb
push
in
daa
fsubr
cmp
jmp
inc
mov
js
inc
mov
mov
(bad)
aas
inc
sub
jno
cmp
inc
xchg
ret
enter
fild
arpl
lahf
mov
cmp
or
ficom
jmp
lods
inc
mov
addr16
inc
xor
outs
mov
inc
and
stc
mov
pop
jbe
sub
(bad)
lods
mov
mov
jb
or
inc
repz
popa
and
sub
sbb
aad
push
shr
push
mov
inc
inc
cli
dec
ror
or
push
out
rcr
push
sbb
mov
inc
mov
mov
mov
bound
retf
or
pop
pusha
adc
mov
mov
mov
pop
popf
add
cmc
test
nop
cmps
cmp
sub
pop
add
pop
je
enter
stc
fdiv
cmp
data16
jp
mov
pushf
scas
fs
aas
lods
call
cmp
lds
cs
push
or
xor
rep
mov
pop
fdiv
cmp
mov
add
adc
lods
je
out
popa
cmp
and
and
lahf
pop
lock
out
(bad)
cmp
or
pop
pop
xchg
sbb
das
loopne
fld
mov
cs
fdivr
sub
cmp
into
inc
mov
mov
pop
fldenv
mov
inc
sub
cmp
sbb
sbb
and
cmp
dec
sub
pop
adc
sbb
cdq
mov
jne
out
sub
jle
(bad)
push
rcr
das
or
xor
mov
inc
or
dec
(bad)
(bad)
aaa
jno
mov
outs
imul
mov
rcl
loopne
add
movs
pop
add
or
(bad)
mov
jge
xchg
adc
jns
inc
xor
inc
pusha
test
xor
cmps
add
out
pop
cmp
ds
and
shl
ds
push
retf
xchg
cmp
ss
data16
add
(bad)
aas
inc
cmp
fbld
fidiv
and
stos
mov
and
les
ss
rol
mov
call
xchg
inc
repz
fdiv
push
movs
xor
sahf
std
rol
jecxz
bound
jmp
jp
add
cli
add
(bad)
and
xchg
jl
in
sar
retf
aad
inc
addr16
inc
hlt
inc
je
movs
cld
or
imul
jmp
pop
leave
loope
es
add
push
add
adc
test
test
and
(bad)
adc
push
pop
mov
cmp
cmp
push
mov
and
xor
or
xor
outs
inc
movs
pop
fcom
dec
sbb
mov
push
pop
inc
jp
sub
inc
add
(bad)
push
fs
jmp
out
imul
inc
xchg
sub
dec
jbe
adc
mov
inc
cmp
arpl
out
fistp
data16
inc
pusha
out
lock
jo
inc
mov
add
sti
jp
cmp
fisub
jns
(bad)
stc
xchg
mov
push
inc
inc
push
movs
imul
stos
lods
inc
sbb
mov
les
push
mov
pop
test
inc
movs
ins
cmps
jmp
stc
inc
push
jmp
inc
push
mov
sbb
jmp
out
inc
mov
cmp
fcomp
add
inc
push
jno
inc
inc
xchg
dec
ret
(bad)
inc
(bad)
hlt
stos
mov
mov
(bad)
xor
jb
inc
inc
mov
pop
sti
sbb
jbe
sar
or
inc
inc
or
fs
add
push
int3
inc
sar
retf
bound
jg
push
push
adc
inc
xor
mov
ds
inc
sbb
jo
nop
cmp
rcl
add
and
inc
xlat
adc
data16
sub
dec
cmp
push
cmp
cmp
jle
repz
fimul
mov
add
adc
inc
sub
xor
js
pop
stc
gs
mov
xor
mov
jmp
or
shl
push
xlat
arpl
pop
xor
cmp
leave
mov
out
jnp
sub
pop
xchg
mov
inc
(bad)
cmps
xor
into
test
call
mov
inc
pop
cmp
in
mov
loop
aad
inc
pop
pop
shl
bsr
cmp
outs
and
cmp
push
neg
inc
mov
outs
xchg
imul
nop
es
mov
(bad)
aam
fs
std
inc
add
in
stos
mov
xchg
cmps
dec
je
mov
cmp
jg
into
jp
aam
and
or
int
lock
cmp
pushf
hlt
ja
out
inc
add
jns
inc
cmp
and
push
cmps
je
jno
sar
cmp
repnz
sub
stc
aam
or
inc
jmp
inc
dec
pop
push
adc
fdiv
das
call
cmp
inc
out
sub
mov
xor
jae
jnp
stc
add
jbe
fcmovne
in
movs
or
daa
fwait
aam
ds
sub
mov
xlat
mov
jmp
push
ret
mov
sbb
sar
xchg
loopne
and
sbb
xchg
das
loop
or
sub
call
int
inc
or
scas
or
push
push
rcr
adc
ror
add
or
loopne
lock
inc
sub
cld
dec
mov
or
shl
cmp
cmp
stos
or
iret
imul
inc
or
jmp
dec
dec
jg
sub
fs
shl
pushf
jp
fmul
push
mov
push
cmp
cmps
lods
daa
pushf
push
sub
aad
mov
inc
jl
rcl
jae
push
xor
es
cmp
ss
mov
sbb
icebp
addr16
mov
inc
ins
sub
rcr
xor
mov
jl
stos
dec
hlt
dec
inc
add
push
loopne
pop
fdivr
mov
sub
sub
loop
shl
sahf
inc
inc
lods
add
push
out
in
fsub
cli
inc
popa
ins
inc
xor
jae
(bad)
mov
movs
adc
into
pop
hlt
mov
pop
not
xlat
mov
scas
aaa
jge
inc
or
les
mov
sub
int
inc
pop
jns
lock
and
push
xchg
jb
aad
sbb
dec
retf
cmp
ins
fisub
and
fnstcw
push
bound
add
xchg
shl
inc
enter
cmp
mov
(bad)
dec
add
sbb
xor
mov
xor
adc
lods
push
sbb
outs
scas
sbb
mov
sti
sub
cmp
sub
cdq
push
inc
or
fsubp
fs
xlat
ja
(bad)
aas
ins
inc
sbb
cmp
lods
xchg
xchg
aad
inc
jnp
sahf
xor
in
sub
les
inc
retfw
dec
in
lds
imul
je
pop
xor
das
loopne
cmc
mov
inc
std
push
inc
or
mov
inc
or
test
inc
ret
mov
imul
cmp
cmp
es
shl
sbb
inc
aad
cmp
mov
and
mov
inc
inc
fisttp
sbb
mov
repz
inc
inc
push
or
jge
mov
jae
popf
inc
ror
inc
fs
jns
mov
sbb
mul
ins
push
mov
cmp
pushf
push
adc
psubsw
data16
in
push
pop
inc
push
cmc
dec
std
push
sub
inc
mov
or
fnstenv
imul
fdiv
mov
loop
mov
fsubr
push
dec
ds
add
push
dec
push
cmp
jecxz
mov
cmp
cmp
mov
call
imul
arpl
mov
and
inc
push
sbb
sbb
mov
mov
in
adc
repz
pop
icebp
cwde
pop
nop
test
jbe
pop
shr
aas
push
sar
fstp
adc
je
xchg
jg
mov
push
xchg
lods
mov
pop
cmp
ror
popf
inc
retf
stos
jge
(bad)
div
mov
add
cmp
cmp
mov
ins
sbb
add
xchg
fwait
es
push
stos
clc
dec
inc
inc
call
inc
mov
ss
or
mov
dec
inc
retf
inc
pushf
(bad)
pop
jmp
mov
inc
mov
cdq
push
adc
add
push
pop
pusha
or
std
cmp
adc
fwait
xor
mov
fadd
test
sbb
inc
jb
sbb
lods
adc
sub
xor
shl
dec
jo
xchg
xor
inc
imul
jb
push
jbe
movs
fstp
jnp
and
(bad)
movs
and
push
and
pusha
sti
pop
test
or
repz
test
cmp
and
cmp
xchg
jae
xabort
pop
imul
mov
daa
jmp
xchg
xor
mov
xor
aam
inc
or
mov
into
and
lods
cmp
or
pop
mov
or
cmp
xor
pop
(bad)
push
jo
popf
mov
add
adc
push
push
cld
pop
xor
cmp
retf
sub
cmp
inc
cmp
mov
sbb
nop
sub
mov
lock
repnz
test
cmp
and
and
jae
int3
push
cld
mov
adc
scas
jb
inc
mov
mov
sub
(bad)
push
cmp
inc
and
jb
(bad)
push
push
out
imul
in
inc
stc
xor
xor
mov
movs
inc
adc
mov
cdq
fimul
mov
or
cmps
ss
(bad)
outs
mov
inc
xor
call
inc
and
leave
int3
mov
or
inc
mov
mov
enter
cdq
inc
inc
and
(bad)
std
ins
xor
mov
fiadd
inc
cmp
idiv
loopne
mov
sbb
cmps
sbb
leave
inc
paddq
pop
pop
cld
cmps
sub
rcl
xor
popa
mov
rcr
inc
mov
test
test
inc
inc
scas
dec
mov
cmp
pop
ss
loopne
cmp
jbe
pop
sbb
cmp
ja
adc
mov
jmp
pop
xor
clc
or
inc
cmc
add
(bad)
sar
repnz
jbe
jo
sti
out
out
or
ds
xchg
add
add
daa
shl
mov
inc
xacquire
jns
(bad)
xlat
push
inc
cs
in
addr16
fild
ror
fisttp
mov
mov
mov
aaa
pop
adc
pop
pop
inc
sub
inc
and
and
xchg
xchg
(bad)
inc
inc
mov
jmp
sar
js
jp
data16
adc
std
sub
cmp
arpl
lock
xor
dec
and
and
scas
inc
aaa
mov
outs
jmp
xor
pusha
or
out
push
mov
mov
daa
in
mov
inc
aaa
fnstcw
xlat
inc
aaa
cld
inc
sub
jo
loope
sub
adc
mov
jge
dec
fwait
xlat
inc
or
jp
rol
mov
xor
jmp
sub
std
outs
inc
(bad)
lods
xor
add
push
cli
sbb
push
mov
or
das
int
inc
sub
pop
mov
cwde
dec
mov
inc
xor
outs
cmps
nop
sbb
js
in
xchg
sbb
data16
daa
xchg
inc
aas
mov
js
ss
cmp
fmul
lahf
push
js
xchg
mov
inc
out
xchg
leave
or
push
stc
inc
inc
xchg
lock
inc
aad
dec
loope
dec
shr
cmp
mov
addr16
icebp
ss
jecxz
fild
inc
std
inc
mov
cmp
add
mov
and
in
xor
sbb
push
and
iret
lds
pushf
sub
jnp
and
xchg
push
push
dec
pop
clc
xchg
jge
dec
imul
sub
push
fbstp
add
dec
inc
push
pop
into
inc
mov
shr
inc
push
jmp
in
push
into
inc
mov
pop
push
call
inc
xchg
cmc
in
into
and
xor
cmp
retf
inc
and
push
fnstsw
loop
imul
cmp
std
js
jb
sar
xlat
mov
jl
das
inc
dec
lahf
inc
fisttp
jo
scas
sbb
push
or
stc
div
jle
arpl
xlat
fidiv
inc
jge
mov
aaa
mov
xchg
mov
loope
lahf
sbb
pop
scas
bound
inc
cmp
shl
add
mov
mov
push
fmulp
add
sub
cmc
inc
xor
or
fld
test
shl
inc
test
mov
pop
cmp
mov
call
mov
fidivr
push
inc
mov
xchg
xor
pop
fnstcw
xor
mov
fsubr
clc
cmp
xchg
cmp
adc
push
jnp
jae
inc
jb
iret
pop
push
pop
ret
xor
xor
mov
sub
and
arpl
cdq
hlt
icebp
jb
out
cmp
cdq
(bad)
in
dec
nop
ret
push
int
push
push
icebp
xor
ror
cmp
or
cmp
out
add
cmps
pop
xor
in
not
or
cmp
mov
dec
ror
xor
adc
or
inc
sbb
xchg
cld
mov
inc
inc
pop
aas
add
fidiv
cmp
push
inc
ss
push
jecxz
stos
pop
inc
jbe
adc
xchg
loopne
pop
in
cmp
fidiv
out
test
and
cmp
retf
xor
int3
cmp
adc
ja
or
cwde
adc
fs
mov
sti
sbb
sub
inc
jbe
inc
inc
hlt
shl
arpl
sub
inc
movs
and
call
out
icebp
mov
test
dec
push
fwait
inc
inc
cmc
ss
movs
inc
jp
shl
inc
rol
push
jg
rcl
mov
mov
xchg
sbb
test
es
inc
push
shl
xchg
jbe
inc
inc
pop
or
or
or
adc
mov
or
add
pop
out
inc
jecxz
cmc
lahf
or
sar
daa
mov
fldcw
jecxz
or
adc
sub
mov
pop
out
popf
(bad)
js
sub
mov
bound
inc
dec
inc
leave
xchg
xor
jb
dec
add
xchg
imul
inc
mov
retf
shl
jae
(bad)
sub
nop
sub
cwde
push
inc
inc
pop
or
jmp
add
test
xor
jmp
cmc
cld
ret
mov
unpckhps
pop
cmp
inc
enter
or
and
inc
pushf
mov
or
inc
xor
push
xlat
pop
(bad)
fcom
mov
(bad)
mov
pop
(bad)
popf
mov
jno
leave
sub
rcl
(bad)
cmp
jl
push
iret
push
sub
add
mov
fnsave
sahf
xchg
inc
jno
xchg
sbb
retf
dec
gs
add
inc
daa
retf
mov
lods
scas
mov
icebp
push
xchg
das
inc
cmps
mov
mov
inc
xchg
je
mov
sbb
iret
xchg
cmps
(bad)
int3
cmp
xchg
cmp
inc
lods
aas
rcl
inc
ins
and
bound
stos
mov
nop
lds
out
mov
add
movs
sub
push
test
jnp
sbb
jne
xchg
or
out
sbb
cmp
jecxz
mov
or
jbe
fdivr
push
test
shl
out
jo
inc
inc
lock
dec
jmp
stos
(bad)
call
cmps
jb
mov
enter
inc
xchg
cmp
dec
inc
iret
out
mov
mov
mov
inc
and
ror
inc
movs
das
mov
jne
je
push
outs
psubusb
pushf
pop
inc
push
xchg
call
mov
and
es
repz
mov
imul
push
xor
sub
add
mov
inc
fwait
aaa
mov
xchg
in
int
jmp
cmp
adc
jge
stc
pop
nop
jg
stos
push
inc
dec
lods
inc
daa
mov
xor
mov
test
inc
jnp
jbe
pop
sub
xor
(bad)
(bad)
adc
xchg
fucomip
and
and
imul
add
adc
inc
ret
in
jno
adc
inc
inc
iret
sbb
pusha
jbe
popa
mov
sub
in
or
cli
imul
scas
jmp
mov
push
pop
movs
mov
clc
or
hlt
in
je
pop
inc
or
add
mov
inc
call
pushf
out
mov
sbb
std
mov
div
adc
nop
int3
dec
sar
sar
or
dec
aad
add
jns
in
push
out
push
aas
cmp
dec
lock
adc
push
xchg
js
test
add
mov
bnd
cli
int3
mov
inc
retf
das
fs
add
(bad)
cmp
dec
fld
stos
cmp
jne
mov
out
call
or
test
xchg
push
xor
and
push
sbb
xor
pop
lock
scas
and
cld
inc
push
dec
and
inc
and
add
sub
inc
lock
cli
movs
aad
(bad)
retf
cmp
xor
mov
cmp
(bad)
sub
jmp
jl
rol
sub
inc
cmp
jbe
adc
out
icebp
mov
mov
fcomp
pushf
inc
xor
iret
in
movs
cmps
inc
mov
xlat
inc
xor
cld
outs
push
stc
ds
mov
jmp
inc
xor
dec
es
add
pop
add
cli
pushf
inc
movs
sbb
inc
push
or
loope
inc
fstp
xchg
ror
mov
test
push
leave
test
inc
dec
sub
(bad)
mov
jbe
cmp
in
jle
or
push
jne
sbb
sub
(bad)
dec
out
cmp
adc
inc
out
jne
cs
int3
push
inc
arpl
retf
and
popf
xchg
pop
push
xor
inc
inc
or
sbb
mov
jl
lahf
or
jmp
mov
call
or
xor
inc
clc
mov
or
aam
xor
gs
cmp
pusha
sbb
mov
test
repnz
inc
sub
cmp
lahf
sub
in
inc
inc
stos
or
mov
adc
repz
mov
inc
lods
clc
xor
daa
es
inc
xlat
add
jmp
inc
inc
ds
ror
fisubr
xor
and
into
or
das
jnp
inc
mov
xchg
push
xchg
pop
test
inc
aas
cmps
xor
inc
sti
cld
jae
sbb
inc
cli
mov
inc
data16
movs
ja
leave
ins
inc
adc
mov
or
(bad)
mov
test
push
dec
xchg
jecxz
stos
sbb
add
(bad)
in
pop
cmp
js
jp
inc
inc
jmp
imul
sbb
fld
arpl
xor
pop
movs
daa
mov
cmp
pop
aaa
jns
pop
mov
mov
xchg
cmc
xor
arpl
inc
add
push
pop
test
hlt
nop
movs
(bad)
lds
dec
xchg
push
aas
es
in
sub
iret
fsubrp
cmp
or
ins
cmp
jg
sbb
pop
scas
and
inc
jno
mov
push
pop
out
cmp
inc
fisub
scas
push
rol
inc
inc
mov
test
loop
je
jle
sbb
and
mov
dec
int
inc
cwde
jp
jmp
(bad)
or
mov
sbb
dec
inc
cmps
loopne
int
xchg
sar
fistp
loope
xor
je
jmp
xchg
pop
xlat
popa
out
mov
loop
mov
jne
pop
jle
in
inc
test
repnz
cmp
inc
sahf
mov
add
mov
hlt
pusha
cli
sti
pop
pop
push
sbb
mov
dec
sbb
loope
fidiv
inc
inc
add
push
aas
iret
loopne
cmp
dec
sti
xor
xor
and
ficomp
cmp
dec
push
call
sbb
xchg
mov
mov
ds
test
sub
popa
pop
cmp
jmp
stc
xchg
or
sbb
inc
je
push
jl
sbb
mov
push
sub
fimul
daa
das
sub
lods
inc
dec
xor
dec
pop
inc
sub
inc
inc
cmp
inc
xlat
mov
add
test
cs
inc
lds
test
sbb
xchg
inc
jne
call
cmp
dec
aam
adc
rcr
jp
inc
mov
fnsetpm(287
fmul
jae
fisubr
(bad)
cmp
pop
sbb
inc
cmp
ret
outs
std
aam
test
inc
cmp
pusha
push
inc
rcr
mov
mov
in
adc
inc
push
jmp
mov
and
in
gs
mov
iret
ds
fisubr
mov
nop
sub
xor
ror
outs
out
pop
cmp
mov
mov
mov
add
ins
popa
inc
jmp
inc
sub
push
cmp
inc
inc
(bad)
push
cs
leave
jmp
dec
jp
sbb
inc
cmp
adc
mov
inc
sti
mov
xor
mov
icebp
cmp
nop
jmp
pusha
fisubr
jae
imul
(bad)
xor
call
lods
cmp
(bad)
pushf
ror
js
dec
cli
mov
mov
sbb
lods
imul
ficomp
sbb
mov
jmp
xor
ins
dec
adc
addr16
je
push
rol
inc
lea
sbb
cdq
xlat
hlt
cs
and
jg
gs
inc
cmp
pmulhw
out
cmc
pusha
inc
repnz
mov
stos
sar
inc
xlat
xchg
jl
out
xor
or
nop
(bad)
shl
inc
cmp
and
shl
mov
jno
inc
rol
mov
pop
sbb
fmul
outs
in
fstp
mov
mov
mov
lock
out
mov
arpl
xchg
addr16
(bad)
shl
ja
push
jecxz
adc
mov
hlt
dec
inc
jg
lahf
inc
add
and
mul
cmp
inc
mov
cmc
xchg
mov
xchg
sbb
inc
cld
mov
pop
(bad)
call
adc
lahf
inc
and
push
xchg
mov
inc
pusha
outs
bound
mov
jnp
sub
inc
fnstcw
ret
mov
cld
inc
std
push
inc
fidivr
cmps
cmps
clc
lds
inc
mov
mov
ds
sbb
(bad)
mov
adc
(bad)
fadd
jecxz
mov
mov
sbb
fld
cmp
jmp
or
push
cmp
and
mov
jns
nop
dec
mov
cmps
push
jl
mov
dec
pop
pop
leave
fiadd
int3
loop
or
mov
pop
(bad)
mov
test
sbb
sub
cmps
xchg
mov
xor
push
mov
loope
ins
jl
pop
sub
mov
xor
cli
fwait
push
test
sar
adc
std
sbb
cmp
imul
and
imul
test
lahf
retf
jmp
das
lds
add
not
add
scas
push
ret
cmps
cmp
adc
cwde
into
jnp
movs
pop
jns
imul
(bad)
jae
and
push
dec
out
sbb
adc
(bad)
out
outs
inc
inc
shl
jo
loopne
out
mov
adc
aam
icebp
push
int
mov
mov
test
mov
fistp
stc
cmp
mov
dec
aaa
push
scas
sbb
jmp
mov
dec
cmp
mov
test
inc
or
loope
sahf
xchg
jbe
adc
test
lea
scas
mov
movs
push
inc
arpl
rcl
cld
pop
inc
jne
test
(bad)
push
ret
xor
mov
fnstsw
test
xchg
test
jbe
mov
data16
xor
inc
jno
push
sub
loope
ror
jl
sbb
clc
ror
xor
and
mov
inc
outs
mov
sub
popf
dec
mov
int
ss
addr16
scas
jo
inc
mov
pop
cdq
pushf
xor
inc
imul
stc
dec
loopne
int3
ins
cmp
stos
sbb
pop
pop
(bad)
sub
cmp
pop
jmp
in
stos
add
movs
add
and
jno
out
and
popa
pusha
cmp
inc
mov
and
mov
mov
out
cdq
inc
and
xor
mov
mov
retf
test
push
aaa
cli
mov
sbb
loope
mov
and
inc
sub
cmp
add
clc
int
int3
jecxz
stos
enter
push
cmp
jno
aam
leave
mov
pop
(bad)
bound
mov
sti
pop
lock
mov
sar
(bad)
pop
dec
cld
inc
into
retf
nop
scas
add
cmp
dec
aad
push
not
test
jae
xor
xchg
aad
inc
(bad)
sar
add
xchg
xchg
cmp
and
in
(bad)
es
jns
into
data16
push
dec
inc
(bad)
retf
adc
cmc
sbb
adc
mov
pop
jbe
xor
popf
and
mov
sub
mov
add
cmp
out
(bad)
push
cmp
mov
call
sbb
jge
fmul
into
pop
cmp
popfw
je
push
and
sub
out
cmp
aaa
add
inc
out
push
jbe
sub
inc
inc
xchg
pop
rol
aaa
xlat
gs
ja
sbb
xchg
leave
dec
xor
movs
stos
sub
inc
inc
(bad)
ins
in
imul
call
pop
icebp
mov
xor
out
fldcw
sbb
mov
inc
mov
xor
mov
out
push
cmp
inc
adc
ucomiss
scas
(bad)
adc
outs
pop
test
(bad)
sub
jae
repnz
mov
nop
adc
mov
or
inc
inc
outs
repnz
mov
pop
rcl
push
sbb
movs
cmp
push
jae
cld
imul
(bad)
(bad)
mov
ins
mov
pop
pop
fmul
rcr
cmp
inc
data16
arpl
test
enter
ds
push
push
mov
inc
inc
mov
sub
or
mov
rcr
or
pop
inc
fld
arpl
dec
pop
test
push
cmp
popa
sbb
loop
ss
inc
into
cli
mov
call
clc
jae
sbb
inc
jo
add
jne
cmps
push
dec
mov
inc
or
sub
sub
scas
inc
test
mov
dec
cmp
movaps
ins
pop
pop
(bad)
xlat
sbb
sub
mov
std
int3
in
inc
xchg
pushf
scas
sti
push
jmp
inc
cli
pop
xor
mov
xor
inc
inc
xlat
sbb
iret
mov
fistp
push
cdq
or
stos
cli
push
inc
adc
fmul
push
jmp
push
es
pop
mov
fild
ror
sub
add
pop
ror
movs
cli
retf
enter
cmp
rol
and
mov
dec
lea
(bad)
and
push
xor
lahf
sub
rcl
add
fdivr
in
test
inc
mov
mov
inc
lods
imul
dec
test
pop
push
inc
cmp
fdivp
in
sti
inc
inc
xchg
fdiv
fild
outs
pop
ss
and
mov
das
pop
push
cmp
daa
mov
sbb
ins
or
sub
mov
movs
je
mov
mov
hlt
sar
fcom
push
push
pop
repz
xor
xchg
cmp
fwait
ins
push
jmp
pop
jno
push
inc
xchg
iret
jle
jecxz
pop
sbb
loope
mov
push
adc
inc
xor
jno
test
cmp
inc
mov
lods
out
inc
sar
xor
lods
js
popa
je
fiadd
mov
or
adc
cmc
mov
inc
cmp
and
and
leave
xor
ss
dec
cmp
(bad)
mov
inc
int3
sbb
sub
sub
inc
sar
bswap
fimul
adc
cmp
fisubr
mov
cmp
sub
push
fistp
nop
mov
out
ss
jnp
fsubp
pop
inc
ds
adc
sub
add
outs
call
mov
(bad)
out
pop
arpl
imul
mov
cmp
add
cmps
xor
xor
inc
jp
sbb
xchg
inc
mov
ins
pop
push
cmp
push
(bad)
jne
fdivr
inc
ds
pop
sub
mov
push
data16
jo
mov
cmp
jmp
jnp
pop
add
out
and
sub
push
hlt
mov
fld
outs
pop
mov
or
inc
mov
dec
cmp
xlat
lahf
pop
enter
or
retf
(bad)
or
sbb
cmp
pop
dec
mov
cmps
scas
sub
(bad)
je
inc
inc
ins
sub
cmp
out
inc
lea
icebp
sti
inc
js
repz
or
mov
inc
pop
aam
xlat
daa
pop
bswap
inc
sbb
sbb
outs
ss
ja
(bad)
cmp
jmp
adc
sub
or
fild
cs
mov
clc
lods
std
lods
mov
sbb
xchg
imul
scas
icebp
ds
mov
sbb
fcomp
test
xor
dec
cmp
pusha
push
cmp
mov
in
inc
dec
push
dec
or
(bad)
sbb
sbb
mov
add
aam
pop
add
sbb
mov
nop
pop
inc
es
daa
dec
shl
or
mov
and
or
stc
rol
call
bound
dec
add
js
xchg
cmp
fiadd
in
mov
inc
add
xor
inc
in
adc
inc
mov
fld
(bad)
and
xor
popa
pusha
int
inc
dec
cmps
inc
shl
inc
in
aad
lods
xchg
inc
rcl
mov
scas
inc
jmp
iret
int
cmp
test
mov
test
mov
inc
adc
ret
inc
fild
cmp
cmp
inc
inc
adc
mov
pop
outs
cwde
leave
inc
cmp
popa
adc
imul
or
idiv
clc
add
cmp
and
test
mov
add
cmps
cmp
cmp
dec
rcr
ret
sbb
pop
int3
and
das
setp
lods
sar
jecxz
lods
scas
or
aam
test
in
xor
jb
pop
into
cmp
out
fcmovbe
test
or
xchg
mov
inc
nop
mov
les
shl
and
sub
bound
or
dec
xor
push
clc
inc
xor
jge
inc
repz
dec
shl
inc
inc
push
sbb
inc
or
or
fist
cwde
inc
xor
lea
nop
ins
sbb
jle
retf
cmp
mov
inc
dec
outs
mov
mov
lods
xor
aaa
ins
(bad)
push
std
inc
inc
or
xlat
test
add
inc
adc
cli
sbb
ret
xchg
jne
out
mov
jp
push
cmp
sub
jns
bound
(bad)
or
pusha
xchg
pop
lock
and
push
lea
inc
cmp
das
inc
mov
sub
mov
aad
dec
fwait
std
inc
sbb
arpl
xchg
nop
les
(bad)
icebp
sub
clc
mov
xchg
jb
int
lea
jne
push
and
inc
lods
fstp
xor
or
inc
mov
into
fwait
inc
inc
jl
hlt
movs
cmc
outs
out
ja
mov
mov
arpl
aam
inc
inc
mov
sti
es
mov
(bad)
pop
pop
mov
mov
hlt
or
inc
inc
into
push
xor
pop
push
lock
mov
out
mov
das
push
jbe
xchg
mov
dec
movs
jmp
pop
pop
inc
dec
arpl
sub
sbb
mov
inc
jae
jge
les
imul
pop
out
mov
and
inc
test
push
mov
inc
fld
or
add
xor
adc
(bad)
in
cmp
mov
test
mov
push
repz
jmp
mov
clts
not
repz
inc
or
imul
cld
movs
jmp
out
and
ret
mul
std
inc
add
(bad)
rol
movs
in
pmulhw
cdq
xchg
jno
mov
jmp
inc
leave
fsubrp
jae
out
jge
loop
add
inc
mov
inc
js
sbb
mov
mov
ins
inc
gs
adc
stc
xchg
cmp
or
fcom
sub
aas
stos
inc
sub
inc
push
pop
(bad)
fs
mov
and
inc
fmul
sbb
sahf
mul
xchg
adc
bound
ret
jmp
jmp
jg
inc
vpaddusw
in
mov
fidiv
jbe
ja
cmp
push
and
aas
data16
test
jp
or
dec
pop
sub
inc
inc
sub
mov
rcr
out
shl
and
stc
inc
fld
aam
cmp
cmp
pop
pop
xor
xchg
femms
dec
inc
inc
inc
xchg
arpl
mov
push
outs
popa
adc
(bad)
inc
pop
cmp
xchg
sub
ficomp
or
test
inc
sahf
sub
push
mov
dec
xor
int
adc
fisttp
xchg
(bad)
out
imul
ins
ror
add
pushf
and
sar
xor
not
dec
mov
inc
inc
mov
and
inc
xor
dec
inc
push
mov
xor
cmp
ins
in
and
in
mov
mov
pop
ss
sub
out
push
aas
dec
or
jle
imul
sub
clc
sub
ror
cmp
xlat
adc
aad
ret
sub
(bad)
cmp
mov
jl
sahf
inc
inc
inc
les
push
test
js
cmp
ror
out
test
mov
jns
in
sub
popa
cmp
adc
jo
fild
aam
inc
cmp
ins
sbb
nop
dec
in
inc
inc
stc
or
xchg
cdq
scas
mov
add
mov
cld
pop
push
fiadd
sar
xchg
pop
stc
sbb
push
sub
jmp
jl
lock
lds
aam
add
push
cmc
std
mov
mov
xchg
cmp
push
cld
jno
mov
inc
adc
fdivrp
jmp
and
shl
aad
inc
mov
push
scas
and
ficom
jmp
int3
xchg
inc
ffreep
adc
mov
int
mov
pop
jbe
aaa
jno
fs
inc
mov
arpl
cmp
out
push
mov
sbb
test
retf
mov
outs
push
mov
repz
js
mov
dec
(bad)
fadd
dec
and
out
pop
mov
inc
das
out
sub
jl
xchg
jno
push
fiadd
inc
mov
dec
test
or
bound
cmp
sti
jmp
or
rol
mov
movs
xchg
dec
inc
dec
inc
out
cmp
data16
inc
mov
push
out
arpl
mov
dec
add
dec
mov
xchg
cdq
cwde
inc
fcomp
add
(bad)
adc
adc
aad
jo
dec
xchg
and
add
stos
(bad)
scas
sub
mul
inc
fcomp
mov
std
cld
inc
pop
lods
cli
cmp
xor
jnp
mov
inc
xchg
shl
pop
push
inc
xor
add
xor
in
ja
test
sub
es
push
jns
loopne
fiadd
add
push
inc
fwait
test
scas
rcl
aam
fsubr
push
mov
test
jl
ds
push
(bad)
scas
sub
nop
push
sub
(bad)
enter
cmp
xor
in
xor
ret
cmps
inc
mov
push
ror
sbb
sub
sub
inc
xchg
mov
scas
inc
xor
dec
pop
push
cdq
xchg
je
cmp
xchg
and
inc
inc
arpl
add
fist
call
fstp
xor
mov
dec
inc
inc
inc
adc
iret
lods
xor
pop
pusha
cmp
inc
ror
addr16
inc
ja
xchg
xchg
dec
push
or
nop
(bad)
jle
push
jne
sbb
inc
enter
pop
loop
adc
js
xchg
inc
add
movs
lds
out
inc
inc
push
cwde
jg
scas
jecxz
and
ja
push
cmp
pop
daa
sbb
add
ret
inc
inc
stos
mov
pop
test
pop
mov
pop
mov
xlat
movs
stos
sub
pop
add
sbb
cmp
mov
imul
push
movs
hlt
fld
movs
iret
mov
inc
or
jae
mov
jl
mov
inc
enter
bound
add
shl
and
inc
cmp
dec
push
jmp
mov
mov
out
enter
add
aas
div
dec
leave
and
cmp
inc
aam
or
call
inc
jp
shl
xchg
out
ja
mov
or
cdq
inc
cmp
or
sub
dec
retf
inc
sti
mov
push
(bad)
jmp
add
sbb
and
sub
jg
int3
fs
iret
and
inc
pop
(bad)
sub
or
mov
inc
mov
inc
sbb
pop
gs
pop
mov
leave
cmp
or
imul
nop
inc
rcl
jae
inc
jno
inc
pop
sar
jo
pop
add
mov
je
sub
sbb
mov
inc
jb
mov
xchg
inc
cmp
in
push
xlat
pop
jp
fist
(bad)
retf
cmp
lods
push
mov
cmp
ins
scas
pushf
aas
hlt
pop
movs
fimul
sbb
jmp
sub
sub
popa
fisubr
push
dec
push
mov
mov
pusha
push
in
imul
jl
int
pop
xor
cmp
js
push
inc
sahf
mov
cs
cld
xchg
idiv
popa
cmp
out
xor
xor
sbb
adc
inc
sti
iret
(bad)
popf
add
sbb
or
pusha
and
push
or
sub
xchg
fbstp
mov
adc
jge
stos
push
dec
out
sbb
cmp
cmp
sar
(bad)
mov
jb
stc
sub
lock
dec
jmp
fs
inc
inc
cmps
rep
mov
pop
cmp
cmp
sbb
and
call
gs
mov
js
out
push
cmp
add
inc
aam
loop
sub
out
fnop
inc
(bad)
loopne
ror
lea
imul
cmp
(bad)
and
loopne
add
and
inc
or
sub
das
push
sti
test
clc
xchg
cmp
stos
pop
stos
sbb
outs
lods
cmp
test
icebp
aam
inc
jne
xchg
push
mov
fwait
mov
jbe
cs
xor
enter
cli
or
inc
sahf
shl
and
(bad)
cmps
sahf
rcl
stc
inc
xor
inc
popf
jle
inc
or
popa
and
mov
xlat
sbb
cmp
jge
cmps
in
pop
mov
mov
sbb
sub
movs
xchg
(bad)
sub
inc
daa
mov
aas
mov
lahf
cmp
xor
shr
dec
xor
bound
xor
int3
inc
inc
mov
inc
sar
inc
pop
jae
ror
sbb
mov
sub
push
pop
add
ds
mov
jmp
fbstp
cmp
add
fstp
inc
inc
shl
stos
push
sub
inc
mov
pop
adc
pop
pop
(bad)
mov
jb
mov
sar
imul
leave
mov
adc
jle
inc
or
test
pop
and
inc
icebp
xor
and
push
pop
sub
inc
mov
jle
jne
(bad)
sbb
pop
push
pop
push
lods
dec
inc
enter
pop
xor
into
adc
adc
mov
xchg
push
sbb
in
cmps
mov
xor
ja
and
enter
inc
test
inc
fisubr
inc
inc
cwde
sar
fistp
cs
cmps
mov
and
and
sub
jne
pop
inc
in
aaa
nop
fwait
xchg
mov
pop
fld
js
out
mov
sar
inc
and
jne
in
cmp
outs
in
mov
inc
pop
jp
mov
or
cmp
xchg
push
jl
int
cdq
xchg
loopne
inc
xor
add
leave
push
cmp
sar
int3
mov
jp
rcr
repz
iret
and
cmps
leave
scas
mov
push
stos
sahf
inc
jl
inc
xchg
mov
add
inc
xor
pop
or
sub
popf
mov
in
nop
sbb
mov
inc
dec
repnz
dec
test
imul
xor
inc
adc
xchg
jbe
jge
add
xchg
mov
das
mov
stos
mov
outs
mov
inc
shr
(bad)
xlat
mov
mov
or
jae
cli
push
stos
pop
cmp
pop
sub
xor
aad
cs
cmp
cdq
pop
stc
sub
dec
inc
loopne
cmp
(bad)
nop
ret
or
fst
into
fnstcw
inc
add
repz
shr
cmp
push
add
cld
cmp
push
or
mov
out
lods
movs
hlt
data16
jno
mov
or
cmp
mov
push
inc
fcmovnbe
out
adc
ret
inc
icebp
mov
or
pop
push
add
movs
sub
mov
cmp
dec
inc
sti
xchg
adc
push
nop
aaa
cdq
fsub
jmp
test
(bad)
mov
dec
std
cmp
dec
push
stc
inc
cmp
inc
jl
add
or
add
jo
xor
mov
sti
test
cs
nop
je
lock
inc
cli
arpl
sub
sub
into
sti
inc
shr
sub
xor
in
and
movs
inc
(bad)
out
dec
xor
rcl
inc
sar
test
or
jp
rcr
inc
and
mov
in
mov
xor
jb
xor
dec
sbb
inc
imul
or
xor
fwait
or
cmp
aam
cmp
lods
push
mov
mov
ds
or
nop
add
(bad)
and
(bad)
jecxz
inc
mov
aaa
cld
lahf
add
jle
data16
mov
test
inc
pop
or
retf
push
cmp
pop
int3
aas
xor
cmp
pop
push
push
fnstcw
xor
aad
sbb
popf
pop
fadd
inc
push
jnp
cwde
pop
xchg
rcr
inc
inc
scas
fidiv
inc
mov
addr16
dec
and
mov
inc
sbb
or
and
inc
stos
mov
call
clc
js
pusha
rcr
inc
aas
mov
inc
ss
and
add
iret
mov
fiadd
pop
cmp
sbb
fnstcw
sub
cli
adc
inc
enter
jg
mov
or
aad
lods
pop
push
inc
inc
mov
inc
mov
(bad)
jmp
rol
cmp
push
retf
inc
mov
add
dec
xor
(bad)
cmp
out
or
(bad)
shl
adc
pop
push
int
iret
aad
ror
adc
jl
pop
loopne
cld
outs
inc
fisttp
xlat
add
inc
or
adc
adc
ins
jl
test
xor
pop
out
outs
js
fld
mov
mov
sbb
sbb
sbb
xor
jg
dec
and
sahf
inc
cmp
mov
inc
leave
jg
sbb
push
cmp
dec
mov
into
cmp
clc
push
shl
test
inc
sbb
mov
and
fisubr
inc
stos
loopne
loopne
jbe
in
cmp
jmp
mov
cmp
outs
loopne
mov
xchg
in
ret
mov
lea
das
out
dec
enter
cs
fadd
in
sub
iret
add
cmp
push
and
inc
xor
clc
sub
pop
add
hlt
inc
and
or
fs
push
cmp
xchg
and
push
nop
loop
ret
push
inc
loopne
div
pop
add
call
or
ins
xor
lds
shl
and
or
into
mov
out
std
inc
cdq
xor
jns
scas
ret
pop
mov
or
cmp
dec
inc
inc
mov
shr
mov
ret
sbb
je
push
jp
(bad)
xchg
mov
xor
inc
lea
leave
and
inc
or
pop
sbb
or
mov
xor
add
pusha
repz
inc
xor
push
rcr
xor
inc
sbb
ss
out
jo
inc
js
jecxz
jns
adc
sbb
cmp
mov
add
adc
out
xchg
dec
cmp
imul
cmp
outs
inc
dec
cmp
loopne
cmp
add
pop
in
int3
pop
jbe
mov
xlat
idiv
xor
in
inc
das
scas
pushf
adc
icebp
lahf
inc
js
enter
inc
xchg
and
test
into
jo
inc
inc
jb
push
je
sub
inc
and
shl
call
inc
int3
jnp
cmp
jae
cmp
daa
xor
sbb
dec
fsub
mov
repnz
and
sbb
(bad)
scas
mov
sbb
cdq
push
cmp
mov
jmp
inc
(bad)
cmp
shl
and
push
inc
jae
sbb
and
inc
retf
or
mov
cdq
icebp
je
cmp
cmp
sbb
and
push
ds
out
aam
inc
retf
cmp
mov
push
or
cmp
test
sti
push
dec
xchg
pop
dec
addr16
inc
enter
dec
sar
mov
mov
mov
cmps
movs
shl
add
cmp
jb
leave
popa
sbb
inc
fs
add
ret
jno
lar
mov
inc
out
sub
inc
xor
retf
and
push
jge
xchg
mov
rcr
push
mov
push
leave
add
scas
(bad)
ss
mov
nop
cmp
loope
mov
or
dec
and
repz
inc
and
mov
popf
sbb
cmps
xor
inc
movs
sbb
lods
(bad)
stos
lock
dec
jae
aas
jp
push
inc
push
pop
xor
adc
and
addr16
psubusb
ror
jp
inc
mov
stc
pop
fcom
scas
inc
test
mov
imul
sbb
cmc
arpl
in
xlat
icebp
inc
push
xchg
js
push
repz
aam
adc
int
inc
inc
push
inc
sub
dec
rcr
in
xor
mov
mov
aad
ins
sub
addr16
mov
imul
icebp
lods
call
push
xchg
inc
push
pop
mov
inc
loopne
mov
leave
and
outs
mov
repnz
dec
rcr
mov
cmp
popf
inc
gs
ret
retf
adc
cli
stos
cmp
hlt
movs
push
movs
sub
(bad)
out
add
enter
in
popa
inc
mov
ret
je
jne
push
mov
inc
or
mov
add
and
in
dec
fnsave
loopne
pop
fild
outs
sbb
ret
and
pushw
fcom
into
int
inc
inc
and
fdivr
ins
inc
mov
stc
imul
(bad)
hlt
or
xchg
inc
mov
sti
xor
(bad)
(bad)
add
clc
cs
mov
mov
shr
fimul
cmp
xchg
ss
inc
pusha
push
pop
mov
jno
aam
add
pop
push
adc
fmul
xor
jg
push
jge
pop
in
into
inc
out
aad
in
pushf
inc
xor
repnz
cmp
in
mov
sbb
fld
aad
dec
je
jle
mov
pop
cmp
inc
mov
jmp
sub
jg
inc
sub
popa
movs
add
shr
xchg
cmp
fcmovbe
mov
lods
cmp
mov
jp
icebp
mov
inc
movs
sbb
stos
push
push
and
(bad)
inc
mov
stos
je
xchg
mov
std
pop
(bad)
lods
call
loope
mov
(bad)
adc
mov
js
cmps
ret
leave
inc
inc
xor
jo
pop
lds
das
inc
push
and
jp
sub
aaa
mov
into
cli
or
jp
inc
mov
and
inc
cmp
or
iret
inc
jecxz
loope
push
sub
mov
ins
jmp
movs
inc
pop
shl
pushf
inc
add
cdq
sbb
iret
inc
mov
fsub
dec
sub
cli
cld
stc
xor
movs
inc
pop
add
(bad)
xchg
cmc
inc
ja
fild
push
adc
mov
sub
sbb
xchg
push
out
adc
xor
in
mov
jl
icebp
inc
in
movs
fwait
stos
dec
add
cmp
punpcklbw
jp
and
out
(bad)
dec
lea
xor
aad
sub
xchg
cs
mov
lods
leave
test
aaa
and
gs
rcr
cmp
iret
xchg
scas
dec
mov
into
inc
loopne
aad
test
dec
xor
je
aad
inc
pop
pop
inc
stos
push
mov
add
add
out
dec
cdq
shl
stos
xor
inc
dec
addr16
cmp
shl
jle
dec
and
push
or
inc
loop
fcom
mov
(bad)
jbe
push
repz
ficomp
xor
fbstp
sub
inc
pop
mov
push
sbb
stos
inc
mov
cmp
fmul
dec
fmul
mul
add
loopne
inc
or
in
jo
mov
js
adc
inc
adc
cmc
mov
push
add
je
retf
das
cli
inc
movs
dec
and
sub
ror
lods
aam
inc
push
inc
cmps
ret
jmp
ret
pop
ss
inc
push
and
movs
cmp
test
and
jmp
lods
inc
in
adc
pusha
xor
sbb
mov
iret
push
sub
and
xor
mov
inc
pop
inc
cmp
not
aaa
xchg
fsub
inc
cmp
stc
mov
fbstp
cmp
mov
aas
outs
xchg
xchg
int
popf
jne
add
mov
test
pop
shl
xor
inc
addr16
inc
mov
inc
add
and
inc
inc
aaa
lahf
push
add
mov
loop
int3
aas
sti
inc
dec
inc
mov
pop
and
push
idiv
stc
inc
sbb
cwde
ss
dec
cmp
xor
retf
or
stc
ror
lahf
xchg
fnsave
movs
or
jne
aam
not
push
js
bound
and
inc
add
dec
ss
in
jmp
inc
jnp
mov
push
pop
js
dec
mov
ss
cmp
test
inc
push
dec
rol
dec
dec
aad
inc
inc
arpl
xchg
jmp
cmp
je
icebp
cmp
jns
retf
mov
inc
sub
mov
jmp
inc
fsubr
pop
sub
fdiv
into
int3
xor
js
iret
pop
cdq
mov
jo
jae
or
push
fidiv
xor
cmp
imul
retf
les
mov
and
push
dec
fdivr
movs
inc
mov
mov
cmp
pop
jmp
cwde
dec
int3
inc
inc
and
stos
jae
(bad)
cmovae
push
inc
adc
jbe
adc
inc
mov
inc
adc
cld
xor
btc
cld
icebp
(bad)
jp
cmp
sbb
out
inc
imul
cmps
push
hlt
cld
pop
inc
repnz
push
or
push
sbb
js
mov
push
xchg
scas
lea
push
or
pop
rcr
leave
xlat
sub
in
loope
inc
movs
inc
out
jbe
xchg
and
adc
jmp
inc
cmp
cmp
stos
push
cmp
inc
aas
mov
push
mov
nop
and
sub
inc
(bad)
mov
mov
push
imul
add
cmp
cmp
idiv
xor
push
bound
loopne
iret
or
test
daa
xor
addr16
or
fld
sbb
pop
shl
or
dec
out
inc
jns
xor
mov
add
inc
scas
adc
das
or
mov
out
(bad)
cld
push
mov
inc
sbb
cmp
sub
repz
shl
and
xor
jmp
push
ret
hlt
inc
sub
pop
mov
jne
mov
in
jp
aad
inc
ss
dec
sbb
and
test
sub
stc
xor
div
arpl
mov
xchg
mov
adc
adc
or
pop
xchg
cld
jmp
fisubr
test
(bad)
fld
loop
add
mov
inc
xor
outs
pop
and
xor
xchg
movs
outs
ds
pop
fs
sub
inc
gs
xor
pop
and
mov
ds
out
dec
cmp
in
clc
push
xchg
fsubrp
xchg
pushf
lahf
scas
push
and
dec
mov
pop
inc
clc
nop
or
mov
dec
mov
mov
shl
hlt
or
dec
fisttp
push
jbe
cmps
push
cmp
and
inc
or
jae
mov
out
sub
cmp
inc
es
stos
pop
cmp
push
ins
inc
inc
fld
out
adc
test
cmp
inc
ins
mov
inc
xor
jbe
lds
pusha
jns
mov
inc
jmp
push
mov
pop
or
dec
push
mov
pushf
xor
js
test
cmp
ror
jae
ds
jmp
dec
pop
or
inc
pop
jbe
dec
cmp
sub
cmp
push
out
cmp
shr
aaa
rol
mov
lock
in
stc
inc
popf
inc
or
push
xlat
pop
test
inc
inc
stos
mov
adc
nop
xor
xchg
test
pop
shl
dec
cmp
jnp
cli
inc
in
mov
aaa
cmp
sbb
sbb
cmp
retf
or
cmp
ds
inc
inc
aaa
adc
mov
mov
or
mov
sub
ins
jo
sahf
jge
repnz
mov
cli
inc
cmp
xor
jmp
dec
pop
push
mov
sti
inc
inc
adc
cmps
mov
stos
je
jecxz
ins
inc
ja
fdivr
inc
daa
push
or
inc
cs
movs
sbb
mov
sub
pop
pop
out
dec
mov
aaa
mov
jnp
xor
aam
mov
inc
leave
fistp
mov
inc
cld
mov
push
add
inc
mov
pop
pop
fdiv
repnz
or
dec
out
inc
xor
mov
inc
in
add
xchg
push
xor
adc
test
inc
inc
or
repz
push
test
cmp
add
xor
fild
enter
pop
std
inc
outs
mov
push
push
pop
repnz
imul
lods
daa
mov
inc
out
cmp
and
mov
fst
inc
inc
pop
in
jecxz
daa
inc
iret
repnz
sti
nop
enter
sbb
out
sub
add
retf
retf
inc
js
cmp
and
inc
out
and
inc
sub
or
jecxz
sar
shr
pop
jmp
xchg
mov
mov
inc
leave
inc
test
out
jno
in
test
imul
rcr
fst
pop
pop
inc
into
add
dec
dec
push
inc
inc
add
pop
mov
push
jmp
mov
sub
cmp
cmp
movs
fisub
inc
mov
adc
call
fild
(bad)
mov
cwde
sub
pusha
or
hlt
adc
scas
sti
push
fadd
aas
mov
in
out
jno
cmp
movs
lods
mov
das
cld
inc
pop
loop
mov
lea
xchg
test
(bad)
cmp
stc
sub
lds
fiadd
jp
clc
popf
jle
inc
inc
mov
push
and
xchg
push
mov
mov
mov
pop
mov
daa
dec
pop
xor
push
scas
cmp
pop
or
dec
pop
pop
js
and
inc
daa
aas
and
out
icebp
rcr
movs
ror
and
lahf
ja
retf
mov
rcr
jns
xor
cmp
loop
leave
adc
lea
xor
mov
out
and
sbb
ret
ror
pop
xlat
or
test
pop
fnstenv
pop
sub
pop
mov
adc
into
adc
movs
inc
cmp
inc
sbb
ret
dec
push
sbb
test
pop
mov
inc
gs
sub
pop
sub
mov
jnp
out
inc
push
dec
out
add
add
inc
jne
sub
inc
xchg
fbstp
je
ins
xchg
inc
cmp
and
cmp
dec
xchg
inc
stos
pusha
dec
movs
xor
inc
(bad)
adc
and
fcom
test
inc
sbb
xchg
pop
inc
cmp
in
popa
pop
stos
inc
sbb
repz
inc
push
cwde
aam
psubd
inc
cmp
inc
aad
jae
jecxz
in
inc
js
mov
dec
inc
or
mov
mov
aaa
loopne
or
pop
inc
push
dec
es
add
push
daa
enter
pop
or
mov
inc
stos
push
cmp
xchg
jmp
inc
das
loop
jge
jecxz
push
pop
aas
stos
es
mov
cld
cmc
push
jns
div
js
xchg
dec
fs
inc
add
cmp
ror
jl
out
jne
push
cmp
out
mov
cmp
ja
xchg
std
push
inc
or
arpl
inc
in
dec
jmp
out
jno
jae
mov
shr
mov
xlat
pop
pop
repnz
jge
es
inc
inc
in
pop
sub
push
push
pop
and
cmp
jo
cmp
sbb
lds
inc
dec
pop
and
inc
mov
repnz
adc
inc
aad
push
lea
outs
add
add
sub
inc
xor
mov
leave
mov
push
stc
lods
jmp
ds
adc
pop
jg
in
js
mov
add
scas
xchg
lahf
cmp
cmps
fld
loope
ins
stc
and
imul
inc
retf
outs
movs
mov
inc
dec
enter
pop
loop
mov
pop
int
inc
sub
fild
or
sub
jg
shr
inc
leave
inc
sahf
sub
js
sub
call
cmp
mov
lock
pop
inc
pop
hlt
ret
or
push
mov
pop
cmps
cmp
ins
mov
push
dec
mov
inc
mov
mov
pop
cdq
test
xchg
mov
pop
jl
xchg
leave
inc
or
jge
sar
or
cmp
cmp
inc
sti
retf
mov
inc
adc
push
and
dec
addr16
scas
push
ds
and
sbb
inc
mov
jae
and
dec
sbb
cmp
mov
lds
inc
and
dec
stc
ins
inc
gs
cmc
mov
lea
mov
out
icebp
or
mov
add
push
inc
push
mov
hlt
push
cmp
mov
repnz
sbb
jns
fnsave
mov
pop
std
and
jecxz
cmps
adc
or
stc
mov
dec
mov
in
add
sbb
into
jno
mov
push
inc
add
cmp
stos
inc
repz
out
pushf
hlt
daa
jp
and
ja
inc
mov
inc
and
jge
pop
popa
mov
xlat
cdq
lods
out
dec
imul
fwait
sti
dec
cmp
cmp
fwait
cmp
jg
push
dec
pop
adc
scas
outs
(bad)
mov
inc
push
mov
fbld
in
cli
ds
inc
mov
int3
xor
cmp
std
dec
mov
iret
cmp
sbb
mov
xor
les
mov
sahf
fwait
mov
and
push
cs
ds
(bad)
lock
in
in
(bad)
jnp
pop
inc
inc
loop
and
fwait
dec
mov
mov
ins
cmp
fldenv
je
and
mov
(bad)
and
jmp
mov
add
cmp
adc
sbb
push
ja
jo
add
push
call
mov
popf
pop
adc
aas
pop
mov
mov
clc
push
mov
lea
sbb
inc
inc
loopne
cmp
inc
lods
xor
arpl
lahf
xchg
sub
inc
test
cmovg
rcr
or
inc
jecxz
cmp
pop
int
cdq
inc
fs
mov
jbe
push
pushf
pop
sahf
mov
leavew
xor
mov
xor
add
imul
adc
iret
or
xchg
stc
lea
mov
sub
outs
cmp
add
mov
jnp
push
inc
sahf
imul
add
mov
xor
test
inc
dec
sbb
out
in
shl
or
pop
clc
adc
inc
or
xor
xlat
mov
xlat
ret
scas
and
jo
fild
jecxz
aad
push
xchg
pop
aas
cmp
es
imul
retf
clc
push
jge
sbb
(bad)
inc
inc
mov
in
inc
cld
bswap
bound
xor
std
jle
enter
ins
ret
aad
dec
jnp
ficom
mov
inc
cmp
imul
inc
jg
rcr
mov
pop
and
scas
inc
into
hlt
aas
dec
mov
fdivp
fld
mov
push
push
mov
or
mov
xor
xlat
fnstcw
popf
xchg
mov
popf
in
in
int3
inc
add
cmp
fs
jg
cmp
sbb
aam
inc
and
add
sub
jle
xor
jno
cmp
fdiv
hlt
ds
test
pop
jecxz
push
inc
fmul
or
loop
mov
add
jb
add
jno
add
inc
or
inc
and
jns
inc
xor
scas
repz
xchg
sbb
ret
jae
outs
mov
and
loopne
mov
inc
mov
fld
movs
and
dec
push
repz
add
and
jle
push
inc
xchg
sub
inc
and
fild
pop
pop
adc
cmp
lea
pop
mov
mov
pop
push
and
pop
cld
jne
mov
or
push
cmp
inc
jp
leave
fadd
inc
cmp
icebp
sbb
and
ss
inc
mov
sbb
addr16
cmp
mov
movs
fiadd
outs
pop
mov
and
fild
sub
in
fist
mov
add
sub
repz
cs
mov
fadd
frstor
inc
cld
dec
sub
nop
popa
sub
push
cmp
repnz
xchg
dec
jp
jno
inc
cmps
call
mov
ret
dec
clc
ret
(bad)
xor
sar
inc
das
gs
ret
jo
mov
lea
or
or
leave
out
inc
push
dec
pop
or
cmp
(bad)
out
mov
int
out
sbb
cmc
(bad)
sub
mov
cmp
mov
arpl
jg
xor
cs
push
dec
cmp
push
pop
add
and
das
sahf
jne
imul
ss
inc
lods
jg
mov
inc
imul
mov
hlt
mov
xor
es
outs
cmp
cmp
cwde
movs
mov
dec
stos
mov
icebp
xor
mov
pop
sbb
sub
fld
out
and
adc
cmps
lds
into
add
cmp
lods
dec
div
inc
xor
inc
push
das
dec
test
inc
sub
test
jl
inc
mov
xchg
aam
inc
inc
(bad)
sub
inc
adc
aaa
lea
dec
mov
test
iret
dec
inc
inc
jmp
mov
cmp
sbb
(bad)
jle
fnstcw
dec
dec
pop
sbb
xchg
sar
inc
cmps
jns
packsswb
dec
dec
js
mov
jp
add
jae
add
xchg
enter
inc
call
adc
jnp
js
retf
loopne
mov
dec
inc
inc
mov
addr16
sub
repz
dec
fs
inc
xchg
fdiv
pop
jmp
cmp
push
jmp
dec
inc
idiv
and
clc
(bad)
mov
jo
out
scas
inc
aas
mov
mov
xchg
mov
dec
loop
adc
cmc
jb
call
jmp
jno
ins
jecxz
inc
std
outs
pop
sub
add
jmp
ja
adc
cmp
(bad)
xor
aad
sub
inc
jne
cld
sbb
lds
mov
inc
int3
mov
lahf
test
lds
jecxz
inc
inc
jns
mov
loop
das
loope
(bad)
add
imul
jmp
cld
ins
mov
ds
jmp
sbb
cmp
rol
mov
mov
lods
mov
jmp
stos
mov
scas
sbb
sub
inc
cs
lea
popa
xlat
outs
sbb
pop
push
setnp
inc
mov
jne
ja
dec
inc
mov
xor
add
xchg
adc
outs
cmp
test
inc
push
mov
pop
cdq
stos
pop
inc
xor
scas
ret
push
mov
mov
pop
add
cmp
jle
test
adc
inc
inc
(bad)
pop
push
int
push
jno
popf
inc
(bad)
cmp
cmp
push
js
inc
ds
inc
push
icebp
in
jle
sbb
and
dec
sub
sbb
xchg
dec
inc
adc
stos
push
mov
add
xor
inc
and
mul
xchg
sbb
pop
and
mov
xlat
enter
xor
pop
cwde
mov
mov
movs
std
sub
fidiv
jno
push
xchg
cmp
mov
shl
bound
popf
cmc
or
add
sbb
dec
pop
dec
cld
dec
inc
or
int3
test
popa
icebp
leave
xchg
inc
xchg
sub
or
mov
dec
mov
xor
inc
xchg
push
stc
outs
and
in
push
cmp
lods
mov
repz
sub
test
sahf
mov
loope
sub
cli
inc
(bad)
movs
outs
int
jbe
test
inc
mov
repnz
sub
inc
outs
arpl
cmp
and
jmp
call
inc
pop
mov
loopne
mov
dec
jo
jmp
inc
sub
retf
arpl
dec
das
mov
sub
adc
sbb
push
outs
mov
aad
and
sub
push
adc
cmp
and
cmp
loopne
fcomp
leave
mov
(bad)
scas
inc
into
out
icebp
adc
xor
leave
sbb
cmp
cmp
fst
cmp
cmp
adc
loop
cmp
or
adc
inc
push
fidiv
cld
into
popa
mov
cs
jg
int
mov
pusha
inc
mov
xchg
xlat
add
inc
fld
jmp
push
int
inc
lea
push
sub
repz
push
ja
aas
scas
inc
jae
lea
mov
xchg
dec
pop
cs
and
clc
mov
fstp
and
out
das
ret
inc
jae
mov
dec
mov
jmp
shl
sub
sub
mov
in
retf
push
call
les
or
cli
fcomp
dec
pop
(bad)
jae
(bad)
jge
mov
mov
inc
pop
cli
inc
xor
pop
mov
mov
stos
jle
inc
movq
inc
sbb
sahf
and
inc
retf
mov
loope
(bad)
pop
dec
or
das
mov
out
jno
xchg
dec
arpl
into
and
inc
mov
mov
inc
inc
adc
sbb
mov
bnd
neg
in
fcomp
dec
outs
call
pop
inc
and
add
dec
pusha
inc
ins
cwde
inc
in
pop
push
je
daa
cmp
inc
loope
xchg
or
mov
mov
out
xchg
fsubr
call
inc
jbe
rcl
xor
retf
inc
inc
xchg
mov
xor
js
clc
sub
aad
jne
(bad)
cwde
daa
aad
sub
inc
call
adc
pop
pop
cdq
test
and
dec
cmp
xor
xor
sbb
cmp
leave
xchg
sbb
outs
jno
js
dec
lods
sbb
inc
cmp
mov
inc
sub
inc
xor
pop
push
mov
or
bound
test
int3
jnp
and
pop
ds
pop
outs
inc
xrelease
mov
out
aad
ds
dec
cmp
or
sahf
cmp
dec
inc
stos
sbb
sub
sub
or
or
ss
stc
adc
ds
pop
mov
mov
push
inc
or
test
icebp
test
mov
dec
mov
ins
inc
or
mov
leave
push
mov
dec
dec
inc
dec
and
cmp
cli
and
outs
nop
ss
callw
and
fmul
pop
push
icebp
std
inc
js
loope
and
inc
or
cmp
daa
rol
mov
pop
test
in
and
dec
xor
inc
sub
inc
mov
lea
push
jecxz
pop
add
test
mov
leave
pop
jmp
enter
inc
ds
lock
push
ror
pop
cmp
fwait
jmp
adc
pcmpgtb
sub
fmul
pop
sahf
pusha
(bad)
out
test
mov
xchg
rol
neg
int
out
push
jmp
and
pop
fld
sbb
xchg
push
rcr
es
add
jmp
ss
inc
int3
and
rol
daa
xchg
lods
mov
mov
ds
in
inc
aad
je
imul
mov
cmps
jmp
pop
push
out
push
fbstp
mov
xor
les
inc
and
popa
inc
cmp
inc
cmp
mov
sbb
fisub
in
js
push
repz
inc
mov
pop
xlat
scas
inc
loopne
jb
cmp
in
fmulp
(bad)
sti
or
repz
and
fwait
cmp
retf
cmp
lock
(bad)
mov
into
ror
in
sub
rol
inc
ror
jo
popa
leave
out
mov
cdq
inc
fisubr
hlt
and
(bad)
dec
mov
lahf
(bad)
cmp
pop
ficom
into
test
inc
xor
jge
imul
xchg
(bad)
jmp
pop
test
pop
in
inc
inc
ds
call
inc
jmp
(bad)
sub
in
lock
fnstcw
mov
push
sbb
push
cld
dec
std
sub
xchg
fistp
cli
inc
inc
inc
xchg
(bad)
jmp
les
inc
cmp
mov
pop
sti
inc
std
cmp
stos
pop
clc
mov
inc
inc
cs
and
loope
or
cmp
hlt
cli
pop
pop
sar
gs
sbb
mov
dec
push
cmp
jp
add
(bad)
shl
sbb
pop
or
mov
and
jns
push
cwde
icebp
cmp
xor
daa
fcom
adc
fisub
inc
sub
xor
mov
dec
dec
mov
mov
add
sub
dec
mov
ja
shr
push
inc
push
retf
inc
mov
outs
add
inc
or
dec
jp
leave
pop
inc
mov
mov
stc
cmp
and
pop
mov
mov
cld
lods
or
jns
sub
and
add
pop
push
out
mov
xor
stos
pop
inc
ja
inc
cld
in
sub
loopne
test
ss
jl
xchg
in
mov
pop
sub
xor
mov
sbb
inc
test
inc
mov
rcl
cmp
ins
fnsave
mov
aam
sub
les
inc
sub
jo
dec
inc
mov
mov
inc
mov
stc
jb
ret
inc
lods
add
sub
fisttp
or
inc
addr16
cmovno
adc
pop
mov
sub
inc
test
push
xchg
cmp
lods
pusha
pop
fld
mov
out
cmp
push
cmp
lods
mov
test
push
push
dec
inc
mov
clc
das
cmc
jmp
push
push
js
cmp
push
inc
xor
xor
inc
add
cmp
lds
cld
inc
das
jae
aas
dec
ss
lahf
pop
(bad)
cmp
pop
outs
out
cdq
inc
icebp
cmp
cmc
cmps
push
jg
cmp
cmp
mov
test
inc
gs
and
inc
inc
in
fucomi
jne
pop
sub
mov
lods
sbb
enter
sub
popf
and
inc
dec
mov
pop
gs
mov
dec
scas
mov
(bad)
mov
cmp
and
xor
pushf
data16
push
cmp
lods
xchg
push
and
out
scas
inc
retf
and
jns
mov
out
repz
out
cld
daa
das
jo
mov
out
mov
xchg
pop
mov
es
xor
fadd
dec
aam
inc
inc
sbb
xlat
inc
sbb
adc
in
iret
and
inc
inc
cmp
inc
dec
fwait
inc
enter
hlt
enter
inc
retf
int3
imul
repz
stc
inc
mov
adc
add
mov
or
test
aas
enter
test
inc
inc
xchg
cli
rcl
pop
and
cmp
movs
inc
int3
jmp
and
test
lock
sub
imul
sahf
imul
jmp
mov
fcomi
dec
inc
push
jmp
inc
jno
inc
mov
mov
add
cs
scas
ret
cmp
mov
shl
movs
add
push
repz
les
test
stos
outs
jo
cwde
hlt
mov
inc
je
jae
mov
repnz
not
loope
inc
inc
leave
sbb
push
lods
inc
mov
dec
mov
mov
lods
pop
mov
push
xchg
add
inc
sbb
shl
gs
push
xchg
inc
inc
data16
inc
inc
jb
jne
mov
inc
cmc
or
mov
int3
retf
inc
sbb
push
scas
mov
push
mov
mov
fdivr
(bad)
ss
adc
dec
sbb
aam
cdq
jcxz
aas
mov
inc
das
cmps
mov
js
inc
ja
(bad)
call
repz
mov
retf
and
push
mov
mov
(bad)
out
cmps
ror
cdq
inc
ret
mov
cmp
inc
mov
aaa
outs
sar
dec
mov
mov
inc
ja
or
mov
movs
icebp
push
aas
jecxz
inc
iret
push
mov
sub
ret
test
inc
mov
mov
inc
cld
inc
mov
hlt
mov
inc
jno
cmp
pop
inc
addr16
and
xchg
cmp
ret
mov
cmp
sahf
hlt
pop
inc
nop
dec
inc
data16
inc
scas
push
mov
mov
mov
xor
fisub
inc
inc
and
iret
push
push
or
lods
mov
test
sbb
(bad)
push
test
or
dec
ins
sub
lds
inc
or
je
jge
inc
jmp
clc
inc
arpl
add
mov
das
jmp
jo
and
push
pop
inc
jecxz
ins
mov
in
cmp
out
pop
jmp
cmp
test
sub
(bad)
sub
(bad)
xchg
push
jns
dec
mov
retf
out
jb
sbb
repnz
mov
inc
jbe
inc
mov
std
adc
pop
jmp
add
ficomp
mov
inc
rol
fiadd
mov
fild
jae
xor
jne
sub
hlt
stos
jbe
rcl
pusha
add
xor
test
mov
cs
inc
inc
stos
outs
jne
inc
cmps
fwait
xchg
jae
jno
out
shl
jns
jb
cmp
mov
ret
sub
arpl
cmp
scas
outs
call
xchg
xor
inc
dec
cmp
adc
test
mov
or
test
icebp
mov
out
pop
xchg
repnz
mov
je
js
sbb
aad
ret
dec
and
outs
push
or
sbb
mov
inc
pop
fwait
addr16
(bad)
enter
dec
adc
cmp
mov
jecxz
and
int
mov
and
or
mov
sub
fistp
cmp
inc
or
and
xlat
jle
inc
mov
pushf
std
push
bswap
inc
inc
inc
outs
rcl
push
adc
lea
sbb
or
(bad)
xor
cld
push
js
call
inc
lock
or
je
cmp
push
mov
pop
test
pop
mov
push
jae
and
cld
mov
mov
ret
cmp
sar
and
fstp
hlt
fdivr
inc
inc
push
jle
scas
retf
mov
dec
aaa
movs
push
icebp
cmp
(bad)
test
int3
mov
inc
aad
retf
xor
xor
cmp
test
push
cmp
add
inc
add
mov
int
jl
inc
inc
sbb
mov
cli
sahf
inc
(bad)
clc
fld
loop
pop
cmp
dec
mov
stc
(bad)
inc
push
inc
aaa
jnp
cs
ret
sub
jle
pop
pop
into
and
inc
dec
jnp
mov
nop
ds
xor
inc
inc
fcomp
push
push
popf
inc
inc
pop
dec
loope
arpl
nop
push
int3
xchg
and
mov
mov
xchg
shl
sbb
inc
dec
cmp
and
xor
mov
hlt
cli
ror
inc
sar
push
inc
xor
mov
dec
add
jne
cmp
cmp
push
push
fmul
mov
pop
inc
pop
es
out
stc
jae
test
xor
cld
mov
cmc
push
ins
mov
xchg
jb
inc
and
enter
push
sbb
stc
xor
mov
mov
fidivr
in
add
inc
aam
xor
enter
inc
mov
pop
cmp
inc
dec
shr
pop
mov
or
jb
jecxz
xor
ins
es
loop
push
inc
pop
cmp
clc
mov
push
mov
inc
mov
ds
jmp
cmp
inc
jbe
outs
jmp
and
in
mov
pop
pop
dec
outs
outs
stc
jg
movs
inc
mov
inc
fadd
ror
fisubr
mov
mov
inc
daa
mov
lahf
add
xor
les
(bad)
fld
jnp
pop
mov
xor
stos
add
xchg
sub
push
xor
fprem1
nop
movs
xor
inc
inc
dec
mov
loope
or
ss
adc
xlat
inc
fxch
(bad)
ffree
imul
ins
stos
out
pop
scas
inc
mov
data16
inc
je
cmp
mov
mov
(bad)
push
aad
adc
jns
xor
jb
inc
inc
cdq
inc
inc
inc
jecxz
cmp
loopne
popf
sar
inc
mov
push
(bad)
je
add
lds
mov
aam
inc
inc
out
or
inc
mov
fsubr
pop
pusha
fnstenv
test
push
sahf
pop
inc
ror
push
imul
push
mov
jg
retf
xlat
cdq
fsub
pop
cwde
int3
and
jle
movs
sbb
dec
iret
inc
aaa
(bad)
stc
ja
or
inc
mov
aaa
jns
std
xchg
push
xchg
fld
adc
xchg
movs
mov
or
xor
push
out
cmp
inc
lock
(bad)
stc
popa
push
sbb
test
arpl
les
push
inc
std
aam
inc
pop
adc
push
test
jns
cmp
push
(bad)
cmp
pop
pop
aaa
addr16
mov
loop
enter
xor
and
and
inc
out
mov
dec
inc
popa
jb
mov
or
xchg
pushf
xchg
shl
and
rol
dec
mov
inc
push
push
movs
nop
sbb
cmp
cmp
or
inc
inc
cmps
jne
add
or
out
push
mov
inc
push
inc
pop
jns
stos
dec
jge
inc
jp
(bad)
inc
aad
inc
mov
sbb
jns
and
ins
adc
sbb
jne
pushf
sbb
jae
cmp
idiv
push
inc
push
add
aas
jno
xchg
jl
inc
mov
imul
inc
push
hlt
cwde
out
sub
mov
xchg
cli
icebp
push
mov
mov
adc
out
lods
cmps
mov
std
aas
add
fiadd
arpl
ja
pop
adc
inc
xlat
std
and
repz
cmp
cmp
das
mov
xor
fidivr
inc
inc
dec
inc
mov
cmp
inc
cmps
push
outs
mov
or
jg
addr16
mov
and
stc
fwait
mov
in
test
sbb
jb
mov
(bad)
or
jbe
inc
repz
inc
push
xor
jo
fs
jecxz
(bad)
les
sub
add
inc
js
mov
push
pop
mov
cmc
mov
adc
jns
jb
out
fs
cmp
pop
fisttp
xor
fdivp
(bad)
int3
test
pusha
fst
inc
inc
adc
xchg
mov
movs
int3
cmovl
inc
inc
cmp
sub
jo
mov
jmp
fidiv
sub
sbb
sti
popa
cmp
(bad)
cwde
rol
or
jo
movs
mov
mov
pusha
sbb
ds
popf
lods
test
inc
btc
inc
xor
inc
pusha
push
sbb
jmp
inc
sbb
cmps
loope
pop
js
pop
aas
pop
inc
inc
and
mov
push
adc
mov
(bad)
mov
(bad)
cmp
in
push
sub
cmp
shl
inc
sbb
adc
mov
ja
not
inc
jne
inc
mov
in
mov
jnp
inc
ficomp
lods
jmp
mov
cli
inc
cmp
add
stc
retf
loop
mov
xchg
sbb
(bad)
(bad)
mov
sub
mul
jle
dec
mov
or
loopne
adc
pop
jnp
dec
sahf
inc
or
mov
jmp
aas
inc
sub
jge
std
cmp
xlat
xor
inc
mov
pop
adc
cld
inc
iret
pop
cmc
dec
xchg
push
adc
mov
das
and
or
adc
and
cmp
sbb
frstor
pop
retf
cmp
xor
cmp
push
xlat
pop
and
jno
push
or
cmp
dec
pop
push
retf
jae
test
hlt
adc
add
pushf
lock
pop
dec
les
cmp
push
nop
or
(bad)
in
sbb
sub
cmp
push
dec
rol
cmp
cmps
(bad)
daa
xor
jl
xlat
inc
hlt
dec
jns
push
lds
xor
aam
fild
xor
xchg
stc
inc
inc
std
pop
add
xor
dec
adc
lods
scas
inc
inc
mov
cmp
xchg
inc
mov
movs
lods
es
xchg
loopne
and
add
lock
mov
or
jge
inc
and
push
movs
std
inc
mov
enter
out
call
das
je
int
movs
mov
test
sbb
in
test
dec
rcr
and
int3
mov
sbb
add
(bad)
pusha
inc
inc
hlt
mov
mov
js
cmp
sub
inc
jbe
push
sub
xor
push
cmp
inc
scas
jne
and
pop
adc
out
xchg
dec
mov
ja
inc
gs
mov
xor
xor
mov
sub
pop
jb
dec
push
push
sbb
adc
push
cmp
adc
hlt
dec
ret
nop
mov
dec
jle
pop
pop
cld
js
adc
scas
inc
and
jns
(bad)
fadd
add
inc
jecxz
std
adc
imul
cs
xchg
mov
jnp
sbb
arpl
cld
inc
pop
sbb
inc
dec
ret
push
retf
cli
cmp
mov
int3
mov
xor
inc
mov
test
adc
js
inc
mov
or
(bad)
pop
shl
fbstp
inc
inc
cmp
cmp
mov
push
lahf
jge
lea
mov
push
or
dec
inc
push
jae
jnp
and
mov
pushf
movs
dec
into
ret
cmp
inc
out
push
inc
jae
call
fdivr
fisub
inc
int
jbe
push
aaa
mov
inc
ins
push
pop
scas
ret
sbb
cmp
cmp
js
daa
adc
inc
in
jmp
xchg
xor
ins
inc
xor
add
or
pop
mov
pop
xchg
lea
mov
lock
rol
sub
dec
mov
push
addr16
sub
mov
jle
sahf
or
fimul
inc
inc
outs
popf
arpl
inc
loope
bound
mov
cwde
js
cmps
in
lds
inc
mov
shr
das
cmp
fisub
xor
mov
xchg
xchg
xor
pop
cmp
inc
jecxz
cmp
jmp
call
adc
cmp
inc
mov
or
mov
shl
or
push
std
inc
idiv
mov
xchg
pop
imul
stc
fisubr
repnz
xor
into
inc
dec
shr
in
js
adc
and
mov
mov
jg
inc
stos
push
xchg
je
push
outs
fnstsw
cmp
push
xor
cmovae
in
fld
cs
iret
bound
and
inc
pop
add
shl
mov
push
add
jmp
enter
mov
mov
xchg
inc
inc
adc
mov
dec
pop
pop
push
push
mov
cmp
repnz
mov
sar
sub
js
mov
in
jp
ins
cmp
inc
or
sub
push
fidiv
sub
lea
aad
shr
cmp
cmc
push
inc
in
mov
in
loopne
std
pop
cmp
xchg
or
xchg
or
push
in
lahf
sub
pop
out
inc
cmp
jo
xor
cmps
adc
inc
rcr
mov
inc
sbb
cs
cmp
inc
scas
ret
ds
inc
fisttp
xor
or
cmp
sti
inc
fdivr
call
inc
mov
cmp
pop
push
aaa
stos
jl
inc
cmp
push
scas
sbb
inc
inc
xor
ret
sti
das
or
retf
sub
inc
adc
push
or
test
pop
cli
ret
xchg
inc
jns
xchg
inc
test
dec
mov
xor
inc
mov
retf
dec
lock
mov
xor
cmp
movs
fwait
jmp
cmp
add
xchg
sub
imul
and
in
inc
xor
out
mov
cmp
les
imul
inc
ds
movs
pop
les
xor
bound
jnp
cmp
aas
pop
add
hlt
mov
mov
es
cmp
sbb
mov
jbe
out
cmp
lahf
dec
add
inc
mov
cmp
fldenv
push
inc
ss
stc
xchg
div
in
push
inc
repnz
inc
sbb
jmp
sub
inc
mov
xor
frstor
xor
or
xchg
add
aad
cmp
cmps
mov
inc
sar
xor
daa
sub
out
ficom
inc
idiv
dec
int
xor
pop
hlt
mov
inc
inc
sbb
addr16
sbb
inc
sub
mov
pop
adc
pushf
sbb
and
(bad)
aaa
pop
retf
(bad)
and
sbb
popf
inc
sub
daa
mov
inc
inc
mov
xchg
jb
inc
in
sar
test
xchg
or
inc
pop
and
stos
inc
sub
xchg
and
mov
dec
in
and
pop
aad
imul
sti
int
inc
or
std
xchg
push
mov
test
popf
cmp
call
sbb
mov
xchg
(bad)
jmp
hlt
mov
inc
js
ja
(bad)
es
dec
rcl
sar
cmc
pop
jns
lea
imul
in
adc
cmp
mov
loope
imul
lods
inc
push
inc
data16
mov
fs
shr
add
mov
and
inc
pop
or
leave
push
xchg
jp
ins
xor
(bad)
jmp
jno
imul
iret
loopne
das
push
test
jbe
mov
idiv
xchg
aad
retf
inc
dec
xlat
add
pop
inc
xchg
cs
push
popa
mov
cs
add
iret
imul
enter
xor
cdq
fs
rol
das
push
add
inc
mov
stos
sbb
jns
jl
stc
xor
mov
retf
inc
sub
nop
out
cwde
jmp
outs
movs
jl
stos
leave
inc
pop
add
adc
in
or
xchg
aaa
shr
cmp
dec
dec
lods
js
retf
jmp
jge
test
jae
shl
inc
xor
inc
mov
dec
mov
les
mov
leave
add
inc
test
ret
in
iret
mov
jecxz
cmp
mov
inc
xchg
call
inc
shr
aas
aad
inc
sbb
rcl
pop
out
or
and
out
cld
sub
push
test
mov
repnz
leave
cmp
pop
or
clc
ds
das
data16
mov
adc
test
inc
arpl
test
sub
inc
aam
inc
stc
add
and
cld
lods
mov
inc
icebp
fucomip
shl
repnz
cmp
fdiv
ins
xchg
mov
dec
sbb
sti
add
add
adc
jle
rol
into
ds
stc
mov
cmp
sub
inc
jno
push
retf
cmp
add
fidivr
test
retf
inc
int3
cmps
jmp
jle
daa
and
push
aam
cmp
stos
xchg
mov
inc
mov
inc
pusha
pop
loop
xlat
inc
xchg
jg
add
or
or
inc
push
xor
shr
aam
cs
stc
loopne
inc
sub
neg
pop
iret
push
gs
xor
hlt
sahf
inc
test
aad
pop
inc
pop
cli
sbb
fld
lock
sub
xchg
xor
popa
inc
rcr
imul
or
sbb
jge
das
mov
test
loopne
clc
xlat
mov
cmp
adc
cmp
mov
out
fcom
repnz
dec
cmp
sbb
add
cmp
shl
sbb
cmps
jne
cwde
popa
int
loopne
data16
inc
mov
repnz
and
aam
cmc
outs
(bad)
inc
fs
dec
shr
mov
sub
pop
js
enter
mov
dec
(bad)
bound
call
sbb
call
mov
xor
das
xor
sub
jno
dec
enter
shl
inc
jge
in
cmp
cmc
fld
es
(bad)
sbb
fmul
mov
add
inc
das
jmp
inc
adc
sbb
and
stc
jp
rcl
or
jns
in
adc
push
clc
repz
cmp
mov
mov
dec
aas
je
fdivr
add
iret
add
push
jo
fcmovnu
test
cmp
clc
mov
or
mov
sar
push
les
inc
dec
cmp
sbb
mov
push
dec
arpl
(bad)
int
add
(bad)
cmp
inc
stos
dec
inc
imul
je
xor
les
sti
jo
jbe
out
loopne
dec
add
fist
retfw
lahf
dec
repz
cmc
xlat
jp
lea
push
cmp
inc
ror
push
mov
adc
pushf
outs
call
movzx
sub
xor
cmp
add
movs
sbb
inc
fistp
inc
pop
pusha
pop
sbb
push
dec
cmp
adc
jecxz
pop
js
bound
loop
sbb
js
test
xlat
sub
inc
(bad)
movs
inc
call
jmp
cld
stc
cmp
inc
out
int
inc
sbb
mov
imul
stc
sub
adc
inc
and
and
inc
cmp
clc
inc
cmp
loope
push
cmp
test
ret
xor
inc
xchg
clc
mov
mov
xchg
(bad)
cmps
int3
or
and
jmp
mov
hlt
mov
pop
push
inc
test
inc
cmps
ins
dec
jmp
inc
adc
xlat
ror
(bad)
jmp
jb
mov
inc
jo
stc
xor
mov
stos
push
sbb
push
nop
shl
pusha
adc
cmp
inc
inc
inc
in
mov
inc
sbb
popa
mov
shl
fwait
push
xor
mov
cmp
scas
push
mov
inc
inc
sti
sub
fdiv
xor
pop
push
lods
dec
ds
xor
add
inc
popa
call
iret
cmp
dec
sbb
dec
bound
retf
inc
inc
ins
fdivr
sahf
dec
cmp
inc
in
sub
std
jge
push
cmp
ins
cdq
push
inc
add
aaa
jno
int
int3
outs
daa
sub
inc
xchg
std
jno
inc
cmp
(bad)
(bad)
xchg
mov
xchg
push
push
adc
imul
ds
xor
inc
test
jge
scas
dec
pop
sti
inc
and
idiv
add
sub
into
lea
inc
(bad)
nop
inc
pop
(bad)
jno
mov
push
cmp
dec
fs
mov
mov
stc
cdq
inc
aas
mov
jle
in
and
inc
stos
mov
inc
fcom
and
jp
inc
inc
inc
mov
mov
dec
inc
jno
cs
test
aas
sub
push
fld
xor
inc
fs
aam
fld
(bad)
push
mov
rcr
dec
jo
ffreep
aas
retf
and
je
popf
dec
jne
stos
xchg
sub
push
arpl
clc
pop
mov
jp
inc
xor
ficomp
sub
std
inc
inc
lods
loopne
(bad)
icebp
mov
jnp
pop
mov
clc
movs
inc
or
data16
cli
sti
inc
cld
jne
icebp
lahf
dec
in
leave
cmp
pusha
pop
pop
inc
fst
and
je
inc
inc
jmp
cmp
and
or
daa
jmp
jl
adc
movs
ds
cmps
sub
jmp
adc
mov
repz
lock
push
jl
pop
cli
xchg
sti
sub
fiadd
lahf
or
cmp
int
add
loopne
or
push
aaa
mov
xor
jmp
jg
cli
inc
js
sbb
aad
inc
mov
or
aas
fidiv
xor
(bad)
jne
sub
mov
inc
fsubr
pusha
sbb
sub
cmp
push
jo
pop
pop
or
jo
sub
add
mov
test
pop
movs
mov
dec
sti
inc
cmc
push
and
inc
mov
xlat
int3
mov
or
outs
add
push
cwde
ret
pop
sti
shr
inc
cmp
call
adc
mov
retf
and
ror
mov
popa
retf
cmp
xor
hlt
add
inc
adc
mov
and
push
rol
mov
loopne
xor
(bad)
sbb
ret
mov
iret
push
in
inc
sub
mov
inc
cwde
pop
add
inc
push
stos
cmp
xchg
or
xlat
mov
fnstsw
loopne
sub
rol
add
jb
mov
xor
fcomp
sar
xlat
(bad)
hlt
add
push
into
aaa
inc
mov
packuswb
std
stos
shl
(bad)
lods
inc
inc
jle
sbb
add
sub
push
mov
ins
fcomp
outs
push
(bad)
outs
add
sub
cmp
add
arpl
call
dec
(bad)
and
cmp
and
mov
push
sbb
mov
aaa
lea
mov
inc
adc
ds
xchg
inc
inc
mov
or
cmc
mov
shr
mov
inc
cmp
ret
call
inc
out
mov
sub
and
ficomp
dec
loopne
or
inc
and
mov
movs
adc
repz
push
cmp
ret
cmp
inc
sar
jns
sar
lds
test
inc
jns
fstp
inc
cmp
lock
inc
call
outs
mov
inc
loope
sub
xchg
xchg
lods
inc
xchg
add
dec
clc
or
rol
cmp
iret
sub
inc
into
loop
sub
xchg
cmp
dec
sbb
call
inc
int
cmps
ficomp
dec
dec
sti
inc
and
jb
test
ds
fdiv
inc
popf
enter
js
(bad)
jmp
inc
jecxz
dec
cmp
fcom
inc
inc
scas
or
adc
ins
(bad)
fldenv
fild
pop
imul
in
arpl
and
mov
sti
inc
aas
rcr
mov
mov
mov
inc
jmp
cmp
inc
xor
outs
movs
inc
push
mov
mov
push
inc
sti
inc
out
ds
sbb
dec
pop
cmp
push
addr16
xlat
cmps
jge
xor
lea
mov
push
xchg
push
inc
mov
inc
jno
push
mov
pusha
nop
push
inc
cmp
lods
add
jb
int
inc
or
cmps
ror
rcr
les
sbb
inc
fwait
stos
mov
hlt
inc
cwde
and
ror
xor
cmps
jno
adc
mov
bound
cld
not
or
jg
sbb
dec
aad
js
sbb
inc
inc
in
inc
mov
sbb
push
(bad)
ins
jb
test
mov
ret
inc
inc
push
pop
cwde
in
mov
outs
test
dec
mov
inc
pop
and
rol
jmp
pushf
test
mov
mov
lods
je
fild
rcr
into
ror
or
cld
iret
arpl
inc
jb
mov
inc
or
xchg
ret
inc
lock
mov
int
retf
push
inc
lods
pop
inc
call
adc
add
push
inc
repz
retf
in
push
js
lds
cmps
xlat
or
inc
ret
inc
inc
imul
add
inc
inc
movs
scas
cs
sahf
mov
mov
cld
push
jle
(bad)
sub
movs
stos
cmp
loope
out
popa
inc
xor
pop
pop
mov
bound
mov
sbb
inc
rol
cmp
pop
setns
pop
or
fnstcw
movs
xlat
imul
(bad)
mov
lods
fnsave
jge
jle
jl
cmp
call
dec
mov
dec
out
shl
inc
cmp
dec
sbb
inc
inc
inc
arpl
addr16
inc
mov
inc
xlat
xchg
bound
sbb
jmp
leave
lock
ret
cld
jmp
gs
inc
inc
inc
cmps
and
mov
xor
or
test
xchg
inc
and
aaa
mov
or
outs
das
pop
xchg
daa
sar
retf
clc
loopne
cmc
dec
and
cmp
pushf
pop
pop
pusha
cmp
stos
mov
cmp
imul
call
out
test
rol
push
(bad)
test
pop
jbe
leave
cmp
or
pop
dec
inc
test
outs
mov
add
adc
fisubr
inc
xchg
push
outs
int3
(bad)
in
ret
cmp
aam
outs
inc
inc
ss
inc
sbb
outs
cmps
xchg
or
in
mov
inc
jae
(bad)
call
and
stos
rcr
movs
add
add
sbb
mov
aaa
rcr
lods
jecxz
xchg
inc
inc
push
clc
mov
push
dec
adc
out
xchg
mov
pop
jle
or
cmp
inc
cmp
or
pop
jp
xchg
pop
push
das
cdq
inc
inc
(bad)
mov
inc
imul
pop
sub
inc
mov
inc
or
not
mov
mov
not
test
aaa
pushf
inc
in
inc
inc
jle
cs
ds
nop
stos
fsub
push
adc
cmp
inc
rol
mov
and
das
xchg
sub
push
inc
mov
mov
fsub
xor
mov
daa
sar
mov
shl
(bad)
and
mul
out
inc
pop
inc
push
sti
addr16
aas
lods
inc
xor
inc
xchg
imul
inc
pop
mov
pop
sub
ss
(bad)
popa
mov
movs
mov
sub
fimul
xor
dec
push
add
mov
je
ds
popf
inc
mov
es
lahf
push
out
gs
add
mov
shl
arpl
inc
mov
movs
cld
add
ret
sub
adc
cmc
xchg
adc
cdq
add
mov
xchg
inc
jecxz
or
cmp
sbb
inc
ss
ins
adc
push
(bad)
rol
fwait
xchg
and
es
mul
adc
push
push
(bad)
cmp
mov
add
add
pop
jmp
add
cmp
cmc
movs
loop
repz
sbb
mov
jb
pop
fiadd
fild
adc
and
add
xchg
inc
inc
cld
mov
or
dec
sub
inc
xor
mov
pusha
loopne
mov
out
xor
dec
sub
in
mov
cmp
push
sar
mov
dec
retf
sbb
push
je
jmp
sub
enter
xlat
enter
ds
cmps
(bad)
sub
add
xchg
retf
mov
sti
push
inc
or
iret
xchg
mov
mov
arpl
cmp
mov
jne
imul
stc
inc
nop
popa
or
test
cmp
ja
push
hlt
ins
call
inc
test
loope
xor
cmp
leave
or
popa
inc
inc
call
loopne
mov
dec
xchg
cmp
jbe
in
js
clc
lds
sub
inc
fdivp
xchg
ja
cld
mov
inc
cmp
(bad)
imul
sub
lds
js
lock
inc
xor
retf
(bad)
mov
inc
push
mov
sbb
fldenv
add
cmp
mov
clc
mov
xor
aas
dec
leave
inc
mov
pop
aas
into
fadd
aad
ret
sbb
mov
cmp
inc
aam
adc
outs
mov
call
jno
ds
pop
push
inc
inc
lahf
cmp
test
ret
mov
jp
cmp
call
out
inc
adc
and
fisubr
mov
xchg
icebp
mov
outs
cmp
or
pop
inc
add
pop
mov
popa
and
mov
xor
mov
inc
mov
jbe
int3
call
inc
sbb
mov
sub
retf
js
mov
test
inc
inc
adc
(bad)
int
push
imul
fidiv
fdivr
imul
mov
cmp
pop
pop
popa
lock
in
fild
inc
aaa
repnz
dec
dec
fdivr
imul
push
bound
not
mov
lea
outs
push
pushf
xchg
iret
push
inc
or
push
dec
in
inc
or
inc
ret
jmp
mov
cli
lods
sbb
mov
cs
popa
inc
inc
fs
sbb
call
inc
das
mov
imul
xchg
sar
sub
cmp
clc
cmps
mov
jle
loope
mov
push
xor
adc
or
fidivr
sbb
add
retf
pop
jb
das
int3
bound
and
fstp
loope
jmp
int3
imul
jp
push
jbe
adc
cli
dec
xchg
ds
sbb
std
pop
ds
xor
inc
xchg
repz
push
nop
jbe
int3
inc
mov
gs
jb
repnz
pop
call
loope
ss
ds
inc
inc
mov
xchg
rcl
dec
mov
fnstsw
rcr
nop
clc
cmp
imul
xor
push
sti
inc
pminsw
push
and
retf
and
call
imul
js
ins
add
or
jmp
adc
fnstcw
inc
(bad)
fld
inc
aam
cmp
mul
xchg
inc
outs
and
inc
nop
push
outs
pop
jnp
and
cmc
js
sbb
out
inc
ja
adc
in
add
inc
xlat
inc
loopne
push
and
sub
rcr
inc
dec
or
xor
(bad)
and
push
ffreep
movs
xor
cmp
out
mov
sub
fld
cmp
pslld
fdivr
sub
out
rcl
imul
dec
mov
cld
cmp
cmp
lds
xchg
outs
sub
xor
les
and
scas
inc
test
daa
loopne
js
mov
or
ins
mov
jae
mov
inc
daa
inc
retf
ins
push
jo
mov
lds
sub
popf
push
hlt
jmp
dec
js
and
mov
jmp
mov
add
mov
call
dec
mov
out
movs
inc
mov
xchg
into
inc
popf
retf
adc
jle
dec
inc
mov
daa
popa
dec
inc
mov
dec
imul
test
inc
aas
jle
push
mov
mov
push
inc
fimul
adc
scas
imul
pushf
push
sbb
test
mov
into
xor
and
mov
push
sbb
jge
daa
jnp
inc
cmps
jecxz
out
sub
inc
and
aas
pop
mov
mov
xchg
mov
cmps
nop
xchg
and
inc
pop
and
or
inc
cld
sub
mov
cmp
push
pop
(bad)
fidiv
lea
and
movs
out
gs
pop
inc
push
inc
jns
cmp
adc
addr16
enter
std
inc
inc
pushf
mov
xor
inc
jb
jl
cmps
push
jecxz
dec
mov
jmp
sub
and
pop
in
jne
cli
pushf
mov
inc
jl
dec
inc
repnz
or
inc
pop
outs
xchg
clc
sub
xlat
dec
inc
test
es
pop
fwait
shl
int
cmc
push
mov
addr16
mov
push
int
xor
pop
mov
test
push
leave
pop
inc
and
or
ror
or
retf
fnstsw
jmp
cmp
xchg
pushf
inc
nop
enter
pop
fimul
adc
cmp
fild
xchg
adc
cwde
aad
sbb
inc
adc
mov
out
shl
or
jbe
int
leave
ret
dec
jmp
mov
sub
inc
fucomp
sti
out
xor
sbb
outs
push
jae
sbb
inc
inc
cmc
or
push
sub
xor
sti
lock
std
(bad)
fnstenv
or
outs
ja
inc
xchg
cmp
or
inc
fisttp
dec
stos
inc
xor
jmp
sub
inc
not
pop
imul
mov
clc
stc
xor
out
test
fwait
inc
push
call
sub
inc
pop
mov
pop
inc
movs
imul
cmc
aam
pop
push
mov
cmp
das
nop
jae
inc
(bad)
sti
and
inc
and
jp
dec
mov
or
add
jge
inc
xchg
jbe
je
cmp
(bad)
loop
and
loope
imul
sbb
cmps
inc
sub
test
sbb
cmp
push
mov
and
arpl
inc
out
dec
push
fimul
rol
pushf
push
aaa
mov
cs
sub
cmp
jns
cmp
push
xadd
sbb
lods
fisub
sub
add
push
mov
popa
push
and
inc
xchg
das
adc
push
adc
inc
inc
dec
out
aas
inc
fstp
pop
inc
sub
sar
(bad)
sub
inc
js
iret
xchg
dec
xor
and
jg
movs
xchg
xor
cs
sar
mov
inc
cmc
(bad)
outs
mov
inc
sbb
adc
inc
imul
cwde
mov
sbb
jnp
mov
test
in
movs
pop
inc
xor
jle
xchg
inc
mov
movs
mov
enter
or
lahf
pop
cmc
xchg
rcr
jo
pop
inc
fiadd
push
inc
icebp
pop
add
sahf
or
mov
sub
jl
dec
repz
inc
xchg
or
xor
sbb
loop
movs
pop
inc
inc
pop
fnstcw
and
cmp
cli
xchg
movlps
inc
rcr
lods
clc
sub
js
into
fldenv
mov
jge
shl
test
ja
sbb
in
call
sar
jecxz
pusha
stos
pop
retf
hlt
inc
sbb
pop
loope
inc
jno
mov
xor
adc
inc
loop
retf
xchg
(bad)
mov
mov
add
aas
cmp
cmp
sub
leave
cmp
cs
jae
jp
sub
ja
inc
jne
(bad)
mov
cmp
mov
rol
jne
sbb
push
rol
push
test
xor
pop
(bad)
loopne
inc
aad
out
(bad)
mov
add
cmps
fs
inc
xor
call
stos
inc
jp
jmp
push
mov
retf
adc
xchg
aam
ds
sbb
gs
or
cmp
pusha
sbb
mov
(bad)
mov
xor
popf
fadd
mov
or
jl
scas
push
pusha
adc
mov
adc
push
jb
cdq
int
inc
inc
arpl
mov
out
pushf
jp
gs
mov
test
inc
loop
sub
daa
pop
xor
mov
bound
in
and
xor
mov
cmp
dec
mov
push
xchg
inc
jmp
push
bound
div
cmp
imul
out
mov
add
fbstp
inc
aas
not
ficomp
js
xchg
pop
inc
into
cmp
imul
jb
dec
outs
xchg
inc
inc
ret
mov
test
inc
js
adc
mov
add
test
rcr
sbb
sbb
or
and
lea
inc
xchg
inc
loop
adc
cmp
nop
jmp
push
mov
out
je
imul
ins
cld
mov
call
xrelease
inc
mov
stc
leave
shr
jge
dec
cmp
inc
pop
cdq
mov
rcr
(bad)
inc
jne
mov
xor
xchg
ja
iret
stos
adc
xchg
lock
push
xor
xchg
fs
out
cmp
mov
cwde
xor
adc
retf
inc
aas
jne
add
cli
sbb
fnstsw
or
(bad)
jmp
fist
inc
sbb
push
ret
aam
dec
or
pop
iret
cmp
lods
out
sub
mov
dec
imul
test
icebp
inc
or
clc
adc
pop
ins
stc
push
xor
xor
inc
(bad)
mov
in
adc
cs
inc
push
fldcw
add
(bad)
mov
cmp
jae
daa
add
cmp
push
cmp
inc
xor
(bad)
cmp
and
in
imul
std
mov
inc
stos
clc
pop
jg
xor
std
lahf
pop
cmp
jo
lods
inc
push
inc
fimul
adc
test
cmp
les
mov
push
dec
icebp
add
retf
push
lahf
loopne
int3
xchg
cmp
adc
imul
mov
inc
jb
mov
push
cmp
movs
das
out
and
jmp
jnp
js
cmps
jecxz
loope
sub
pop
inc
stc
aaa
fs
or
out
inc
fucom
mov
imul
inc
inc
fwait
rcl
jmp
or
leave
and
jg
iret
es
inc
and
adc
pop
sbb
inc
mov
or
fidivr
xor
arpl
shr
inc
mov
clc
rcl
ret
and
inc
fstp
inc
inc
inc
cmp
cld
cmp
pop
test
push
mov
in
out
cdq
push
fwait
cmp
sbb
pop
fsubr
loope
inc
jmp
aas
or
dec
inc
cmp
cdq
add
out
jo
inc
push
adc
jnp
cmp
push
shl
inc
call
(bad)
das
jae
push
out
bound
scas
cmp
xchg
add
xchg
outs
sbb
mov
or
std
inc
push
xlat
pop
sbb
ficom
(bad)
jno
inc
ds
xor
aam
clc
pop
push
js
sub
std
ja
and
lds
cli
push
mov
mov
fstp
or
test
add
push
(bad)
xor
ins
cmp
pop
or
scas
mov
ret
fcmove
mov
inc
stos
in
sub
inc
mov
mov
in
cmp
mov
inc
push
les
mov
movs
movs
inc
stos
sbb
hlt
fst
inc
arpl
add
fs
xchg
or
xchg
fcmovbe
outs
push
xor
lds
push
fisub
inc
mov
std
jl
mov
iret
int
cmps
cld
mov
cmp
outs
mov
xchg
cwde
iret
mov
scas
lea
and
lds
inc
leave
ins
push
mov
jmp
inc
movs
push
inc
fcomp
sbb
scas
xor
in
push
js
sbb
dec
(bad)
out
cwde
sbb
aas
sub
adc
cmp
dec
(bad)
test
cmc
int3
xor
mov
xchg
inc
in
ds
iret
sub
cmps
or
mov
sub
inc
lods
hlt
sub
(bad)
adc
cmp
mov
cmp
mov
xchg
xor
inc
mov
dec
adc
lods
jns
scas
ret
xchg
movs
div
test
and
dec
inc
inc
sahf
push
ror
inc
sbb
and
jnp
test
or
or
xlat
sahf
inc
sub
or
mov
inc
jecxz
loope
repnz
(bad)
fbld
cmp
inc
xchg
jae
fisttp
ss
xchg
jns
scas
adc
sbb
call
inc
push
cdq
jo
mov
mov
xlat
push
pop
cmp
mov
adc
jno
ja
jecxz
cli
dec
cld
xchg
inc
and
je
out
arpl
xchg
sti
aaa
lea
call
sub
mov
cld
outs
ret
in
(bad)
push
add
mov
fsub
dec
mov
(bad)
test
gs
sbb
jmp
mov
(bad)
shl
ja
dec
push
repz
push
int3
inc
inc
and
add
sbb
push
xchg
cmp
in
inc
or
shl
in
sar
inc
push
cmc
inc
mov
retf
(bad)
cli
inc
and
pop
mov
inc
out
cmp
adc
sbb
sub
cmp
data16
stos
push
jmp
fisttp
pop
inc
push
sbb
jge
mov
inc
xchg
mov
inc
outs
mov
mov
rol
int
sub
adc
sbb
xor
sbb
js
sub
(bad)
xor
cmc
xchg
inc
cli
pop
ins
rol
sti
iret
pusha
mov
pop
inc
mov
inc
lods
retf
outs
btc
inc
(bad)
jo
inc
add
jp
mov
push
mov
fld
mov
adc
data16
inc
cmp
adc
js
addr16
sub
xchg
push
inc
outs
(bad)
or
inc
cld
xchg
pop
stos
addr16
xor
inc
movs
repnz
inc
(bad)
in
out
cmp
aam
push
adc
dec
cmp
aad
inc
cdq
ins
and
fimul
and
or
sbb
repz
inc
cli
jo
adc
mov
inc
push
inc
fst
mov
in
inc
fs
push
retf
inc
ret
std
inc
inc
jg
mov
push
mov
ja
or
ins
movs
imul
jb
sbb
rol
adc
jp
std
popa
push
jnp
push
stos
sub
icebp
cmps
daa
imul
call
rcr
out
lea
mov
inc
or
pop
jbe
xchg
push
shr
inc
popf
test
cmp
stc
pop
(bad)
xchg
add
and
jl
data16
xchg
push
cmp
int3
(bad)
retf
push
mov
dec
sbb
mov
cmp
jecxz
daa
lods
inc
cmp
xchg
lea
pop
popa
aas
mov
inc
mov
das
inc
iret
pop
push
inc
cmps
inc
inc
add
pop
mov
or
je
jo
sar
loop
in
test
sbb
daa
push
mov
dec
aaa
repz
push
stos
jl
cmp
aas
sub
sub
push
inc
add
jnp
ja
pop
dec
push
out
test
jns
aam
dec
rol
cmp
sbb
test
std
shr
mov
ins
pop
mov
push
fiadd
test
cmp
pop
jno
sbb
push
aam
and
cmp
mov
dec
adc
sub
ins
(bad)
sahf
cmp
cdq
dec
not
mov
add
jo
cmps
mov
dec
jns
ror
inc
mov
test
jecxz
sahf
daa
xor
rcl
sub
jle
sbb
out
jae
mov
add
fild
jmp
xchg
std
inc
inc
jbe
adc
sahf
(bad)
push
mov
pop
push
test
inc
in
xchg
or
jmp
inc
mov
jne
pop
adc
pop
inc
cmp
fimul
lods
mov
call
inc
nop
les
fiadd
movs
inc
(bad)
out
scas
inc
inc
push
sub
aam
nop
xchg
idiv
inc
inc
cld
mov
inc
push
ja
add
lods
or
mov
je
xlat
push
popa
inc
push
mov
add
lods
cs
call
push
(bad)
cmps
fmul
push
xchg
inc
inc
lds
(bad)
dec
sti
inc
loope
(bad)
cmp
aad
fadd
xor
ins
xchg
xor
xor
lock
inc
and
cmps
mov
xchg
jb
fdivr
cmp
ins
cmp
jge
dec
inc
pop
js
mov
push
imul
loope
push
in
jg
ja
rcr
lahf
int
xor
push
inc
xor
sti
lods
call
cmp
(bad)
jg
cmps
jne
call
xchg
lods
je
pop
xchg
pusha
inc
jb
pop
sbb
icebp
cs
leave
cmp
cmp
mov
push
jae
cmp
es
jo
cmp
(bad)
imul
ror
dec
cli
mov
stos
jb
jp
aas
inc
add
jbe
sub
fstp
repz
fcomp
dec
popa
push
push
fnstcw
pop
cwde
loop
sub
xchg
cmp
stos
cli
mov
dec
(bad)
dec
and
popa
hlt
mov
inc
mov
repz
push
retf
jbe
loope
xor
js
xor
aad
call
push
test
test
sub
and
scas
pop
call
inc
dec
mov
shl
rcr
stc
dec
inc
aas
inc
jg
inc
xlat
adc
add
js
inc
dec
fdivr
test
hlt
je
add
push
ds
mov
leave
ds
outs
mov
in
lds
pop
jge
imul
adc
or
(bad)
mov
shl
fnstcw
loope
mov
cmp
mov
sahf
inc
dec
or
mov
or
sub
or
sub
ret
or
add
pop
inc
sbb
push
push
pop
inc
inc
mov
fldenv
scas
mov
inc
xor
cmp
xchg
push
mov
inc
adc
inc
mov
jns
popa
jo
inc
mov
scas
test
rol
adc
inc
(bad)
pop
dec
out
push
mov
inc
cli
mov
call
mov
addr16
dec
stc
cmp
fcomi
or
xchg
pop
jns
inc
jmp
mov
into
imul
dec
push
jae
stc
in
test
inc
inc
dec
out
addr16
aad
inc
shr
inc
sub
movs
push
sub
inc
or
sub
add
jb
in
cs
jae
int3
push
out
stc
fild
mov
stos
and
ds
jnp
push
aad
fld
push
popa
xchg
ret
scas
sbb
aas
xlat
out
adc
cmp
aad
pop
sbb
cmp
(bad)
imul
outs
mov
pop
ret
cld
(bad)
ins
popa
cmp
mov
add
jmp
mov
test
push
stos
cmp
xchg
iret
push
rol
add
mov
inc
imul
out
mov
add
imul
adc
pop
sti
dec
into
jae
inc
push
(bad)
retf
cmp
aas
sbb
cmp
iret
call
xor
call
inc
cmp
mov
bound
ds
xor
mov
inc
(bad)
inc
je
push
cmp
ret
sbb
mov
(bad)
mov
je
dec
pushf
push
inc
cmp
movs
sbb
mov
addr16
sub
push
xor
pop
jns
sbb
loop
mov
adc
cmp
addr16
(bad)
ja
and
neg
mov
sub
cmp
inc
jnp
push
pusha
inc
(bad)
ret
in
js
xor
mov
inc
test
xor
xor
cmps
stos
mov
out
std
mov
js
fld
inc
inc
adc
test
mov
mov
mov
ins
adc
iret
test
into
popa
or
xor
sub
jg
and
stos
dec
shr
hlt
cmp
mov
or
cmp
aam
(bad)
cld
dec
jne
pop
xchg
retf
xchg
sub
xchg
mov
add
and
dec
pop
mov
mov
cmp
jb
mov
ds
or
inc
fisubr
(bad)
out
mov
dec
out
les
inc
test
fild
jae
(bad)
cli
xchg
outs
sub
or
repnz
out
nop
cmp
adc
mov
sbb
xlat
cs
jmp
aad
sar
fld
xchg
mov
adc
inc
sbb
xlat
push
lea
inc
ret
adc
inc
jae
jle
std
jmp
xchg
and
inc
sbb
test
cmc
pop
xor
push
dec
dec
cmp
mov
dec
adc
data16
adc
or
push
popf
ds
adc
sub
pop
cmp
call
rol
mov
mov
inc
scas
mov
out
pop
inc
cmp
mov
(bad)
xlat
mov
sbb
neg
shl
push
call
add
xor
les
imul
cmc
jb
retf
ficom
out
push
cmp
push
aas
jns
cmovo
push
test
gs
dec
xchg
out
inc
push
out
jo
pop
cmp
arpl
pop
dec
scas
and
retf
mov
pop
ins
and
or
sub
lock
xabort
push
ret
movs
xor
mul
jns
cmps
dec
aas
sub
js
inc
lods
inc
mov
mov
jl
jns
movs
movs
mov
jo
jmp
mov
push
sbb
sti
(bad)
shl
jae
cmp
push
adc
xchg
xchg
and
out
stc
pop
pop
inc
les
call
adc
xor
outs
mov
fs
sub
sti
dec
cmp
adc
fld
out
adc
hlt
scas
pop
imul
inc
inc
mov
mov
sbb
pusha
div
xor
js
std
mov
adc
into
push
data16
inc
rcl
in
clc
loope
push
xchg
push
dec
shr
mov
cmp
jmp
js
or
ror
out
xchg
cmp
sub
mov
dec
imul
cmps
mov
xor
cmp
out
inc
push
xchg
in
mov
sub
mov
fisub
mov
test
mov
dec
jbe
mov
mov
jmp
dec
mov
or
or
cmp
xchg
sub
mov
or
jo
jmp
mov
xor
loope
sub
xchg
jle
mov
retf
and
sbb
into
pusha
push
add
inc
mov
xlat
pop
jecxz
inc
out
inc
inc
fs
movd
mov
cdq
out
ret
jle
fld
scas
inc
pushf
and
scas
ret
cmp
outs
jp
stc
in
sub
daa
push
ds
adc
lods
push
xchg
icebp
add
sbb
test
sbb
push
or
push
repnz
mov
shr
cli
mov
cmp
pop
sti
push
xor
pop
dec
data16
xchg
inc
inc
(bad)
rcr
pop
idiv
call
dec
fild
icebp
xor
jl
sub
or
nop
das
ds
inc
push
in
sub
or
nop
stos
sbb
int
inc
xchg
stc
call
cmp
(bad)
dec
lock
mov
js
sub
popa
jge
jo
test
rol
call
and
adc
adc
mov
sbb
not
cmp
mov
test
cmp
jno
mov
je
adc
mov
pop
sti
mov
cmp
sub
cmc
movs
imul
addr16
sbb
jmp
cmps
mov
(bad)
shl
pop
and
test
xlat
inc
retf
xor
push
(bad)
mov
imul
adc
scas
loop
or
inc
adc
xchg
dec
dec
mov
mov
pop
repz
mov
in
add
cdq
jae
dec
mov
aas
inc
jno
and
jmp
mov
inc
and
sbb
fsubr
push
in
add
sbb
and
popa
inc
pop
icebp
mov
cmp
aaa
mov
xchg
inc
inc
xor
inc
hlt
push
inc
imul
push
pop
repnz
cmps
fwait
inc
mov
jmp
out
lods
pop
and
mov
add
fdivr
inc
push
and
push
ins
ret
shl
sbb
mov
cmp
jg
loopne
cmps
add
addr16
fldcw
inc
lock
mov
mov
xor
sbb
stos
ins
push
or
cmp
or
mov
cmp
inc
jmp
scas
cdq
dec
popa
jnp
or
rcl
jb
je
cmp
int3
inc
data16
in
mov
jnp
jb
ror
inc
lock
in
mov
inc
inc
mov
cmp
or
inc
xchg
in
jmp
add
cmp
inc
out
repz
adc
mov
test
push
pop
jbe
xor
es
not
je
pop
leave
lahf
aad
pop
mov
inc
test
sub
push
or
stos
js
cdq
add
inc
pop
or
mov
hlt
inc
jo
push
sbb
xchg
and
add
inc
cmp
imul
popf
pop
push
mov
cmps
mov
fadd
xlat
stos
cli
pop
xchg
sbb
or
pcmpeqw
mov
mov
add
cmp
mov
lods
mov
test
in
or
inc
loopne
stc
pop
pop
retf
daa
pop
pop
rcl
cmp
pop
add
sbb
inc
dec
retf
pop
mov
(bad)
mov
sti
mov
inc
add
pop
inc
or
push
and
iret
movs
jmp
mov
rcr
sbb
inc
cmp
ds
and
rol
add
maskmovq
test
pop
jnp
out
repz
pop
clc
mov
call
mov
rol
push
inc
inc
fmul
cli
mov
dec
cmp
pop
mov
jns
mov
or
jne
inc
pop
jns
loope
xor
sbb
inc
sbb
sub
pop
(bad)
inc
shr
add
(bad)
push
jno
fiadd
xchg
out
cmp
mov
push
loope
(bad)
sbb
stos
adc
dec
mov
cmp
adc
mov
cmps
gs
push
imul
int
fs
mov
mov
push
xchg
cmp
jbe
mov
loope
or
test
inc
cld
mov
inc
jae
out
mov
mov
sub
aaa
adc
pop
fstp
mov
mov
cmp
mov
clc
imul
push
shl
rol
jo
cmp
inc
cs
adc
je
dec
or
es
add
xor
shr
iret
cmp
mov
shl
mov
fistp
sti
ja
push
int3
xor
jmp
adc
inc
cld
(bad)
cmp
sbb
push
inc
inc
in
mov
push
inc
(bad)
jp
loope
enter
jl
push
adc
or
into
xchg
cmp
adc
fidivr
lods
dec
jmp
inc
inc
ret
ins
push
js
inc
test
popf
jae
inc
cdq
iret
ja
or
sbb
sub
lods
daa
dec
push
adc
xor
(bad)
(bad)
stc
inc
inc
in
sahf
movs
(bad)
stc
cwde
push
and
and
fs
cs
int3
imul
test
ret
ds
and
dec
pop
into
sbb
jbe
ins
sbb
xor
dec
pshufw
inc
pop
xchg
xor
fsubr
fild
mulps
arpl
rcr
jmp
push
(bad)
cmp
push
mov
cmps
xchg
ja
scas
mov
jle
inc
pop
lods
xchg
sub
push
jle
call
fwait
scas
cmp
repz
cmp
mov
mov
pushf
sub
sub
(bad)
fadd
dec
rcl
cdq
inc
test
xchg
jae
inc
xor
adc
dec
ret
inc
mov
add
inc
jge
cmc
jno
daa
cs
loopne
xor
int
and
js
das
pop
ds
sub
cmp
out
cmc
add
bound
test
cmps
push
cli
aam
inc
enter
into
ds
cmps
stos
add
xchg
retf
jne
adc
sub
(bad)
jmp
in
inc
test
stc
inc
inc
cwde
adc
lods
ja
test
inc
adc
das
iret
lea
and
inc
outs
dec
popf
test
cmp
dec
and
cmp
rcl
fs
mov
cs
ds
(bad)
adc
or
ret
(bad)
jmp
mov
inc
inc
ins
pop
add
(bad)
cmp
hlt
retf
ins
movs
jae
cmp
mov
mov
out
popf
inc
inc
stc
ja
sti
in
outs
cmp
clc
movs
inc
inc
(bad)
out
inc
xchg
cmp
std
mov
test
lock
and
ins
inc
fdivp
cmp
mov
inc
mov
int
(bad)
cmp
dec
into
(bad)
les
add
inc
fisttp
fistp
(bad)
pop
or
xchg
(bad)
sbb
push
mov
outs
jp
inc
dec
dec
scas
ds
jo
(bad)
sub
mov
cmp
lock
imul
cmp
inc
add
cmps
mov
ins
jb
cmp
mov
push
inc
bound
call
lods
jbe
jmp
or
mov
sbb
jecxz
sbb
sub
out
mov
test
test
arpl
cmp
or
or
jnp
inc
retf
sbb
add
adc
sub
stos
cmp
or
fisubr
mov
dec
and
sbb
mov
in
test
jmp
push
das
dec
inc
inc
stos
mov
sub
inc
jbe
xor
push
push
sbb
push
inc
cmp
addr16
xchg
sub
mov
stos
shl
ins
cmp
and
or
add
and
inc
clc
xchg
mov
dec
xor
cmp
sub
sti
jmp
out
jmp
cmp
inc
adc
cmp
mov
add
(bad)
rcl
ds
adc
repnz
ret
add
push
cmp
push
lahf
mov
loop
cmp
push
and
jne
add
push
mov
mov
std
jg
cmp
popf
push
into
pop
push
cmp
nop
test
inc
je
jmp
dec
sahf
sbb
ret
into
lock
inc
in
leave
push
ins
dec
call
mov
inc
inc
rcr
out
push
cmp
jge
add
hlt
sti
loopne
mov
cmp
stos
(bad)
daa
sbb
mov
mov
inc
push
push
pop
shr
cmp
inc
movups
dec
es
push
inc
sbb
ins
mov
aas
xchg
sub
ror
fwait
mov
ins
cmp
xchg
cmp
inc
push
pop
shl
addr16
ins
cmp
push
hlt
jp
and
cmp
adc
test
aad
enter
cmp
(bad)
cmc
outs
mov
inc
and
jbe
repnz
push
and
inc
add
ja
inc
mul
jae
stos
inc
and
pop
out
mov
cmp
inc
lods
std
pushf
inc
out
xor
adc
mov
adc
sbb
cmp
dec
ret
out
or
(bad)
js
cli
dec
retf
inc
lock
bound
xchg
inc
movs
or
add
push
add
cwde
inc
mov
es
jl
(bad)
out
add
dec
and
adc
and
push
jnp
jbe
in
inc
loopne
push
repz
cmps
dec
xor
shl
shr
inc
or
or
jle
imul
sbb
movs
mov
in
pushf
addr16
aaa
stos
mov
aaa
push
icebp
sbb
in
mov
out
mov
rol
sbb
popf
xlat
mov
xchg
lods
inc
cmp
ins
inc
or
and
cmp
inc
std
jo
in
arpl
cmp
popa
test
or
mov
xchg
sbb
cmp
dec
jg
dec
shl
dec
shl
inc
hlt
inc
pop
mov
pop
add
and
push
sahf
inc
inc
div
inc
cmp
xchg
push
push
inc
stos
loopne
icebp
test
lods
in
js
adc
or
fisttp
repz
inc
add
lods
loopne
fldenv
in
aad
sub
or
out
xchg
sbb
push
dec
sub
mov
inc
pop
xlat
pop
push
cmp
ret
inc
out
cmp
ror
jno
cmp
arpl
mov
mov
cmp
inc
pushf
popa
jl
pop
lahf
and
mov
add
xlat
jmp
xchg
sub
cmp
loope
loopne
enter
cmp
dec
gs
mov
add
xlat
pushf
dec
pop
and
fld
cmp
ins
je
push
inc
inc
out
idiv
push
addr16
movs
sub
sahf
shr
inc
ins
cmp
inc
int
vmwrite
inc
inc
neg
jae
xor
cdq
pop
pop
jge
or
fwait
dec
adc
inc
sub
aas
jbe
rcl
mov
into
sub
in
(bad)
mov
or
addr16
aaa
mov
sbb
aaa
inc
dec
test
sti
test
ins
sub
aaa
xchg
inc
loop
push
retf
xor
retf
xor
fwait
inc
sub
xchg
out
xchg
arpl
push
inc
pusha
xchg
and
pop
shl
xor
push
sbb
xchg
add
xor
out
xor
fld
gs
(bad)
ins
inc
mov
adc
ret
test
jl
jae
rdtsc
mov
xor
jp
inc
ror
aas
xor
nop
(bad)
mov
int3
imul
out
sub
les
test
or
and
jnp
pop
jne
inc
ficom
retf
outs
push
lea
pop
jle
inc
mov
call
adc
mov
dec
cmp
sub
fwait
mov
scas
or
inc
push
test
in
inc
scas
jmp
adc
pop
pop
xor
dec
xchg
lods
mov
dec
mov
shl
jae
xchg
cld
inc
sub
jg
hlt
inc
imul
jnp
jo
jp
cs
pop
aas
jp
in
and
das
iret
adc
sbb
jg
inc
xor
js
movs
jns
(bad)
in
or
cmp
xlat
add
inc
cdq
mov
jo
scas
inc
shr
and
cwde
enter
xor
fst
cmp
inc
or
fs
or
xchg
shl
ret
push
cmc
push
js
and
pop
inc
add
mov
js
lahf
push
div
inc
mov
and
jae
add
and
dec
mov
inc
cmp
sbb
jne
cmp
xor
ficomp
movs
fsubr
lods
mov
ja
int
cdq
inc
aas
scas
mov
push
sub
fild
lea
jo
lahf
dec
pop
pop
push
sub
push
jns
inc
fstp
mov
add
add
push
pop
mov
mov
gs
push
pop
out
movs
inc
jg
inc
pushf
jmp
js
cmp
jmp
pop
adc
push
inc
sub
mov
or
mov
inc
rol
mov
cmp
mov
and
cmp
(bad)
xor
ds
lea
cmp
jno
inc
add
jmp
mov
xchg
mov
ret
ds
enter
das
mov
push
sar
inc
push
mov
add
add
and
movs
or
mov
(bad)
push
inc
fild
add
inc
outs
and
rol
xchg
inc
pop
pop
push
mov
pop
push
call
outs
cmp
mov
cmp
sbb
retf
addr16
inc
ret
inc
and
mov
inc
dec
imul
fisttp
and
(bad)
aad
mov
int3
pop
into
ins
(bad)
and
test
cli
js
inc
xchg
and
jecxz
movs
cs
mov
mov
loopne
mov
cmp
inc
inc
je
aas
sbb
fdiv
inc
dec
mov
daa
cmps
cmps
aam
test
dec
enter
stc
mov
sbb
fadd
add
movs
mov
mov
add
imul
inc
xchg
pop
mov
dec
fisubr
and
inc
arpl
sbb
inc
nop
mov
(bad)
pop
xor
loope
jae
inc
in
push
sbb
cmp
push
outs
dec
into
inc
inc
std
mov
or
test
pop
sbb
ds
ds
and
sbb
ret
xchg
inc
and
mov
mov
je
add
fstp
icebp
iret
int3
cmovo
cmps
push
xor
jmp
cld
inc
mov
jecxz
cmp
cli
push
ret
in
inc
aam
inc
(bad)
mov
fsubr
add
out
outs
mov
inc
inc
cmp
mov
jnp
mov
sub
mov
add
cli
mov
adc
inc
loope
inc
pop
jns
sbb
add
adc
cli
sub
fdivr
je
fadd
xchg
xor
cmp
popa
mov
aaa
loope
mov
add
stc
in
imul
mov
aas
xor
dec
pop
(bad)
inc
and
mov
(bad)
std
xchg
mov
and
or
int
inc
adc
add
cmp
push
xor
rcl
imul
les
stc
ins
fsubr
pushf
inc
push
ins
sub
cmp
lods
cmp
test
enter
adc
addr16
inc
inc
sar
xor
loop
cmp
lds
mov
add
aas
fdivr
lahf
and
pop
inc
repz
cmp
int3
jmp
(bad)
push
inc
inc
sbb
stc
push
xchg
shl
mov
aas
in
cmp
jnp
inc
clc
sub
(bad)
hlt
test
or
cmovo
cmp
sahf
rcr
(bad)
sub
ins
or
in
pop
repnz
ficomp
sbb
sbb
popa
cmp
sar
mov
shl
addr16
inc
aas
les
push
lds
lods
adc
push
cmp
(bad)
dec
sar
inc
call
push
cmp
ins
(bad)
cmp
daa
pop
jnp
rol
dec
cmp
lods
mov
mov
mov
or
data16
dec
ret
or
mov
add
jecxz
push
sbb
cmp
sub
or
fadd
and
mov
inc
cwde
dec
scas
sbb
std
and
stc
clc
push
mov
inc
cmp
push
in
xchg
and
push
int3
cmp
mov
mov
mov
in
inc
ss
ja
inc
inc
cmp
jmp
ret
inc
pop
or
mov
inc
ins
xor
cmp
xchg
out
push
(bad)
stos
scas
mov
aas
sub
int3
sbb
mov
mov
(bad)
push
xor
mov
inc
mov
push
mov
fmulp
mov
cmp
dec
or
mov
aad
inc
inc
into
push
sub
inc
bound
adc
faddp
mov
inc
inc
adc
mov
jecxz
shl
cmps
or
cld
sub
push
mov
cmp
inc
or
pop
std
sub
out
mov
xchg
inc
in
cmc
cs
aad
pop
js
sub
outs
gs
inc
and
or
ds
sbb
dec
rcl
test
mov
imul
xor
jle
push
sbb
add
xlat
out
pop
rol
inc
inc
pop
into
in
pop
push
call
mov
mov
inc
inc
jbe
cmp
xor
ret
push
sub
pop
outs
add
cmp
mov
cld
cs
adc
xor
sbb
cmp
push
sar
cmp
jo
mov
cmp
gs
xor
movs
inc
inc
popf
sbb
cmps
add
cmp
pusha
sub
fisub
cli
inc
dec
loopne
inc
out
dec
nop
inc
jae
in
jecxz
mov
or
movs
sub
popf
sar
inc
imul
sbb
inc
adc
fwait
sti
xrelease
inc
xor
and
call
jns
or
dec
cmps
ret
shl
pop
(bad)
cmc
inc
enter
ins
inc
retf
or
in
lods
ret
sub
aas
inc
pop
adc
push
inc
scas
pop
pop
jne
xor
cmc
inc
call
pushf
hlt
push
xchg
sbb
adc
xor
mov
sbb
retf
mov
add
lahf
jno
cmp
fstp
mov
movs
xchg
retf
pushf
inc
xchg
sbb
shl
inc
cmp
mov
add
enter
cmp
lds
dec
popa
out
mov
aas
stos
retf
sub
cmp
push
js
mov
inc
nop
mov
out
loope
call
fcom
jge
add
in
aad
in
xor
inc
or
mov
out
inc
sbb
(bad)
mov
fwait
popf
xchg
sub
cmp
xor
movs
out
inc
inc
adc
iret
push
mov
push
inc
mov
pop
cmovnp
or
jecxz
loop
inc
int3
shl
xchg
inc
sbb
dec
arpl
mov
stos
inc
xor
dec
je
lahf
mov
dec
test
outs
lods
cmp
fs
and
stc
jecxz
push
mov
cmp
sbb
inc
adc
cwde
out
add
push
and
pop
xchg
and
cmp
imul
sub
inc
xlat
clc
inc
popa
and
sbb
push
sub
daa
rcr
sub
loope
push
fcomp
ss
inc
inc
fdiv
mov
xchg
and
jmp
inc
lahf
pop
jmp
mov
cmp
add
xlat
inc
fst
loopne
mov
iret
lea
push
ja
sub
and
mov
push
pop
dec
adc
inc
mov
mov
jmp
inc
rol
pop
out
mov
ffree
and
pop
(bad)
lock
sahf
cmp
idiv
outs
cmp
jns
mov
cmp
xor
inc
pop
xchg
xor
and
aaa
sbb
loopne
int3
cmp
int
inc
mov
shl
fidiv
js
test
nop
inc
cdq
push
ins
mov
mov
mov
xchg
mov
fiadd
pop
mov
cmp
jmp
inc
adc
lock
inc
jle
retfw
mov
mov
sti
cdq
ds
push
outs
cmp
das
jo
inc
lahf
call
inc
or
fwait
jle
inc
xor
retf
cld
inc
cmp
jge
or
(bad)
jne
aas
mov
cmp
into
int3
dec
ins
(bad)
fsub
or
mov
iret
sub
inc
mov
push
xchg
inc
inc
jno
(bad)
repnz
or
sub
inc
inc
inc
push
adc
aam
inc
xchg
push
pop
shl
add
mov
inc
jmp
neg
js
xor
dec
or
ficom
pop
xlat
sbb
and
das
movs
push
cmp
mov
jb
xor
and
inc
mov
dec
enter
je
inc
das
dec
(bad)
out
cmc
push
adc
mov
loopne
rol
dec
cmp
ror
sbb
lock
icebp
les
or
mov
push
stos
xor
sub
cld
cmp
les
inc
mov
cmp
outs
mov
and
push
mov
in
cmp
fmul
fldcw
test
pop
(bad)
inc
inc
inc
mov
jmp
sub
mov
loope
inc
and
ins
in
inc
sub
out
mov
xor
mov
inc
add
mov
add
jns
inc
inc
push
pop
xor
mov
aad
xor
aaa
int
std
inc
xor
cmp
cdq
sub
mov
mov
test
push
mov
xchg
push
mov
les
mov
cld
add
push
cmp
aas
test
cdq
repz
inc
inc
and
popf
fimul
dec
jne
sti
out
or
scas
iret
leave
das
add
mov
inc
shl
mov
es
inc
add
(bad)
pop
cmp
pop
mov
cmp
stos
inc
inc
and
ds
jle
inc
inc
dec
cld
sbb
xor
mov
rol
push
sar
stos
fld
dec
fcom
sbb
bound
movs
das
mov
or
(bad)
mov
cld
dec
fild
push
mov
cmp
inc
push
(bad)
mov
dec
(bad)
out
sub
pop
cmp
push
cmp
inc
out
push
pop
push
ds
jmp
dec
ror
and
mov
push
shr
pushf
or
add
mov
pop
cmc
or
xchg
pmuludq
mov
ins
xor
aaa
sub
mov
xor
pop
shr
mov
aas
rcr
xor
lock
and
jno
mov
push
(bad)
(bad)
cmp
int
xor
push
pop
mov
push
mov
xchg
out
mov
mov
in
sub
inc
data16
xchg
jne
push
mov
in
fidivr
sbb
inc
xchg
(bad)
dec
or
sbb
xor
cmc
cs
push
adc
cmp
cmp
enter
aas
xor
movs
cmp
cmps
cmp
push
inc
add
sahf
test
fsub
sbb
inc
mov
or
mov
or
sub
neg
pop
inc
and
mov
inc
inc
movs
movs
pop
mov
mov
xchg
cmp
add
ret
pop
inc
inc
jbe
inc
out
fild
cmp
inc
xor
fadd
or
out
inc
cmp
ins
pop
push
push
cmp
retf
or
jmp
imul
out
pop
fwait
adc
push
repz
ins
pmaxub
inc
sub
(bad)
out
cli
and
xor
pop
pop
mov
cs
pop
fld
mov
cwde
xlat
nop
ja
inc
push
fs
int3
push
pop
or
sbb
pop
inc
dec
cmp
push
cmp
dec
cmp
sub
in
inc
inc
mov
push
pop
xor
cmp
add
aad
jbe
clc
sub
xor
leave
adc
pop
sqrtps
fwait
enter
cs
xor
dec
test
xchg
cmp
dec
mov
jg
add
popf
cmps
dec
rcr
inc
sbb
rol
pushf
call
pop
and
mov
inc
or
pop
push
inc
ret
stos
js
inc
dec
mov
push
lea
inc
dec
dec
inc
inc
in
mov
aas
pop
inc
or
xchg
mov
inc
sub
jecxz
or
pop
push
sub
push
jno
sbb
ret
inc
inc
jno
cmp
aaa
lahf
xor
outs
push
push
stos
add
mov
add
cmp
and
xor
jmp
push
shl
cmp
mov
fild
sub
sbb
loope
sbb
jbe
addr16
sbb
sti
ror
mov
pop
dec
mov
sar
inc
mov
fiadd
je
fbstp
(bad)
mov
aam
inc
mov
inc
jae
outs
clc
aaa
psubusb
add
iret
cmp
mov
add
add
in
xlat
mov
pop
mov
mov
jmp
inc
mov
popa
outs
ds
cmp
in
xor
mov
enter
in
aam
inc
pop
push
cmp
pushf
inc
inc
mov
add
inc
inc
movs
add
inc
pop
sahf
pop
bnd
add
out
lock
xor
inc
push
pop
fld
test
ss
mov
mov
and
xor
mov
cmp
xchg
pop
or
stc
dec
mov
inc
inc
loope
out
pop
or
sub
sbb
inc
and
inc
mov
out
div
pop
movs
jne
jl
data16
in
or
add
pushf
inc
mov
repz
or
xor
daa
addr16
xchg
mov
ficomp
cmp
mov
push
fwait
cmp
mov
push
ret
addr16
not
inc
mov
cmp
scas
and
sbb
dec
arpl
shl
push
inc
and
je
clc
and
enter
sbb
cmp
idiv
aad
dec
sbb
test
mov
or
cmp
mov
test
stos
adc
dec
nop
mov
in
inc
imul
push
sub
inc
inc
ficomp
inc
xchg
push
mov
add
push
dec
pop
mov
or
data16
pop
cmp
pop
push
jp
dec
in
inc
fwait
push
ja
out
add
cmp
xchg
imul
bound
out
popf
adc
jo
cmp
nop
xor
daa
sub
inc
jmp
push
dec
fwait
jmp
js
pop
cmp
jb
cmc
jg
or
add
mov
bound
inc
cmp
inc
fisttp
and
cmp
push
add
hlt
sub
int
xor
sub
or
mov
shr
ret
in
outs
test
clc
sti
and
iret
pop
push
xor
inc
mov
inc
dec
dec
ins
test
stc
inc
inc
das
xor
sub
inc
inc
into
adc
inc
(bad)
jae
imul
test
inc
ds
(bad)
repz
pop
push
fisub
xor
gs
inc
lods
dec
mov
cs
dec
mov
sahf
inc
push
and
pushf
aas
lods
cmp
sub
pusha
mov
xchg
push
test
inc
adc
mov
loopne
movs
jb
add
rol
rcl
mov
inc
mov
xchg
loope
push
or
or
and
(bad)
lea
ret
push
addr16
arpl
test
xchg
sbb
cmp
xor
ja
add
xchg
cmp
or
cmp
icebp
out
inc
sbb
pop
in
fld
jo
push
(bad)
and
inc
xor
sti
inc
aas
or
dec
xchg
sbb
sahf
dec
ret
push
in
pop
push
mov
cmp
xchg
fild
mov
adc
push
sbb
mov
lods
mov
cmp
xchg
xor
jnp
mov
sub
mov
dec
ret
mov
repz
stos
sahf
imul
mul
inc
cmovg
enter
scas
data16
gs
inc
(bad)
dec
ret
repnz
inc
xchg
dec
xor
push
cmp
cld
sub
dec
shr
loope
cmp
shl
retf
inc
adc
dec
push
pusha
and
lods
add
fmul
popa
add
xor
inc
sub
push
outs
stc
test
inc
rcl
mov
inc
xchg
cli
mov
xor
bound
mov
inc
test
xchg
sbb
xor
cmp
fs
inc
ror
repz
sti
aam
lds
mov
fild
sub
fcmove
inc
mov
(bad)
sbb
mov
xchg
jbe
mov
xchg
(bad)
pop
or
cmp
inc
xor
call
push
jmp
push
cmp
and
(bad)
jo
dec
and
fisttp
aas
jle
rcl
add
pop
movs
xchg
cmp
mov
jns
call
mov
mov
bound
sub
out
aas
sub
and
mov
xlat
mov
stos
jae
inc
repnz
jno
mov
push
inc
aam
and
bound
dec
adc
je
pop
cmp
inc
movs
push
or
push
jns
xchg
inc
loopne
sbb
jne
inc
leave
xor
push
cmp
inc
aad
cmp
xor
stc
jbe
inc
inc
cmps
mov
in
dec
stos
shr
jb
or
mov
inc
ja
daa
data16
mov
push
out
inc
mov
stos
and
inc
inc
and
(bad)
dec
cmc
(bad)
dec
fs
sbb
ret
stc
sbb
push
jmp
out
inc
sbb
jle
pushf
inc
mov
inc
dec
inc
mov
cmp
(bad)
repz
out
sti
cmp
mov
add
push
push
(bad)
xchg
imul
or
cdq
ret
mov
inc
loop
(bad)
cmps
push
jmp
out
adc
push
mov
inc
mov
cmpxchg
sti
inc
lea
or
push
ins
or
add
jbe
outs
cmp
mov
test
lds
jb
dec
or
test
sahf
fidiv
fwait
xchg
xor
dec
push
mov
daa
adc
out
mov
push
test
fcomp
sti
mov
cmc
push
rol
xor
data16
(bad)
sbb
sbb
cmp
inc
xor
iret
xor
nop
loopne
sub
cmp
fisttp
inc
xchg
sar
mov
jle
pop
loope
jno
arpl
ja
add
push
cmp
rcr
mov
dec
fldenv
cmp
out
inc
mov
pop
call
inc
psubb
(bad)
adc
cmp
or
sbb
pop
lds
push
and
push
sub
pop
push
lahf
fwait
inc
and
dec
in
sbb
jmp
inc
in
mov
inc
xchg
sbb
add
adc
xchg
(bad)
cmp
jle
fmul
icebp
outs
cmp
and
sub
push
and
ja
mov
and
or
rcr
outs
xor
mov
cmp
inc
pop
inc
ins
sub
sar
mov
or
mov
mov
imul
cs
pop
scas
cli
pop
dec
enter
shr
cmp
mov
aaa
neg
inc
inc
pop
mov
ins
test
adc
sahf
pop
cs
push
xchg
inc
cmps
js
popa
jnp
jne
cmp
adc
mov
mov
ret
sbb
cmp
imul
enter
inc
lock
inc
mov
sub
jno
scas
movs
push
dec
adc
aas
fldenv
pop
(bad)
inc
aam
(bad)
out
or
out
sti
outs
pushf
add
mov
jo
pop
(bad)
dec
jle
inc
lods
inc
loopne
aaa
sub
mov
int3
sti
inc
sbb
(bad)
lods
cmp
pop
cmp
inc
mov
dec
loope
inc
(bad)
cwde
add
push
pop
in
in
cmp
(bad)
cmp
test
push
and
mov
inc
dec
dec
pop
xor
aas
mov
pop
cli
inc
popf
je
xchg
int3
mov
jg
xor
xor
xchg
jmp
inc
fmul
pop
mov
and
inc
xor
enter
punpckhdq
inc
popf
mov
push
push
js
fcmovbe
cmp
mov
mov
or
push
sub
es
pop
stc
addr16
cmp
pop
sar
cmp
aad
fchs
cmp
inc
and
(bad)
loopne
sub
xchg
mov
fwait
dec
inc
xor
cmp
push
pop
inc
mov
inc
retf
fistp
or
push
sar
inc
retf
mov
fcomp
jl
inc
aaa
inc
cdq
(bad)
cmp
adc
ds
xchg
and
cmp
or
cmps
inc
cmp
fstp
or
rol
mov
inc
(bad)
test
clc
in
pop
dec
lods
xor
sub
pop
mov
jle
sub
fmulp
fmul
ds
lds
dec
inc
adc
inc
lea
dec
xor
ret
inc
push
jmp
xor
jno
pop
cmp
aad
daa
mov
cli
jb
sti
lds
xor
sbb
rol
inc
push
in
cs
pop
mov
add
sub
mov
adc
int3
jb
cmp
pop
dec
movs
push
sahf
jmp
jge
or
push
sbb
cmp
dec
test
ds
and
mov
movs
dec
sub
sub
cmp
and
fwait
xlat
mov
pop
add
add
and
pusha
xchg
(bad)
inc
mul
sbb
and
mov
and
pop
sar
popa
loopne
out
add
rcl
not
adc
nop
add
popf
inc
js
inc
xor
loope
and
mov
inc
dec
mov
or
xor
dec
mov
cmp
inc
jmp
bound
enter
shl
imul
inc
ins
(bad)
outs
(bad)
popf
cmp
test
jnp
inc
out
push
fs
loopne
inc
stc
add
je
inc
jge
mov
mov
push
inc
test
popa
push
pop
inc
inc
sti
xor
inc
mov
lods
adc
and
fadd
and
ffree
inc
push
sbb
inc
push
ss
push
xor
movs
add
mov
lods
hlt
xor
imul
int
sbb
jo
push
int
pop
cld
inc
cli
inc
sub
push
mov
(bad)
cmp
std
inc
jb
xchg
dec
mov
rol
lods
scas
(bad)
sti
jb
mov
fnstenv
test
bound
inc
fs
sbb
cdq
mov
mov
scas
lods
inc
inc
sbb
mov
(bad)
or
ror
stc
mov
inc
ja
push
out
and
jmp
push
cmc
jp
sar
fisttp
adc
daa
cmp
inc
in
(bad)
cmp
mov
or
or
xchg
repz
inc
dec
(bad)
mov
out
inc
ret
mov
or
ror
call
mov
or
outs
push
xor
imul
xchg
add
jge
jb
imul
mov
ja
out
dec
or
nop
lods
cs
jnp
inc
mov
lods
jmp
inc
dec
rcl
popf
mov
pop
rol
inc
xor
fdivrp
mov
ds
mov
ss
fbld
ret
sbb
cmps
mov
inc
pop
retf
ss
mov
push
pop
pop
inc
cmp
and
sbb
pop
pop
enter
mov
addr16
lahf
jae
push
(bad)
sbb
int3
mov
fistp
dec
stc
cmps
xor
sub
aas
and
mov
xor
inc
test
cli
sbb
or
jae
rcr
mov
(bad)
stc
out
inc
sti
in
push
aam
fs
ds
and
enter
dec
lock
in
pushf
inc
loop
sub
rcr
mov
xchg
push
cdq
mov
pusha
xchg
movhps
mov
push
push
hlt
sub
xor
mov
cmp
sub
aam
call
mov
test
cmp
mov
push
stc
jno
inc
inc
sbb
add
inc
cmp
aam
out
jae
cmp
leave
pop
pop
sahf
cmp
push
out
mov
call
fistp
add
dec
les
inc
xlat
outs
sbb
bound
repz
xchg
fild
inc
inc
inc
sbb
scas
cmps
mov
data16
inc
adc
inc
lock
sbb
jp
je
and
cdq
jno
mov
lods
rcl
xor
cmp
dec
mov
sbb
test
or
cmp
mov
pusha
mov
and
jne
sub
add
test
rcr
add
adc
movq
lods
jmp
cmp
jne
pushf
push
bound
fdivp
inc
jp
loopne
sub
pop
xor
ds
sar
jb
test
js
jmp
mov
inc
mov
loopne
cld
dec
adc
loope
or
call
ds
push
sbb
hlt
retf
cmp
cmps
shl
cmp
xor
inc
aas
mov
pop
inc
je
xchg
rol
stos
icebp
inc
pop
jnp
pop
cmps
mov
push
sub
mov
mov
pop
mov
daa
jmp
sbb
outs
test
add
ds
cdq
movs
xor
je
fmulp
cmp
inc
xchg
icebp
lods
inc
cmps
push
jle
adc
mov
and
cmp
add
mov
mov
fnstsw
inc
jle
cmp
fadd
fcmovnu
inc
inc
test
lahf
push
dec
mov
stos
shl
push
sti
jbe
mov
popf
jp
dec
inc
or
(bad)
aas
into
cmp
mov
loopne
inc
test
xor
inc
popf
or
xchg
and
mov
push
sub
lods
xor
sub
cmps
cmp
sbb
or
test
jg
fstp
push
sbb
or
jnp
cmc
mov
xchg
cmp
lahf
hlt
call
xor
pop
test
inc
mov
sbb
(bad)
ftst
out
adc
push
cmp
sar
mov
jl
(bad)
out
dec
inc
cmp
mov
inc
sub
pop
(bad)
mov
cdq
mov
push
gs
outs
inc
inc
xchg
jne
sbb
cmp
fsub
shl
and
pop
call
sub
movs
repnz
cmp
and
cmp
call
pop
movnti
fs
jns
push
movs
sub
inc
enter
out
rol
pop
dec
test
call
ja
fistp
jne
and
repz
sub
shl
xchg
push
mov
or
lds
cmps
cwde
retf
pop
add
inc
push
pop
repz
cmp
dec
xchg
int3
inc
loopne
sub
es
mov
inc
sub
mov
loop
or
repz
cdq
inc
cmp
sti
inc
xor
inc
aaa
cmc
inc
inc
dec
(bad)
les
xor
pop
leave
cmp
dec
inc
mov
xor
add
mov
lock
(bad)
data16
fadd
les
push
pop
push
or
jo
push
cmp
jg
mov
or
ret
push
std
inc
add
call
mov
mov
inc
inc
jmp
sub
inc
arpl
mov
inc
lods
clc
mov
and
push
push
xor
fld
inc
fs
retf
fldenv
inc
and
xor
xchg
js
mov
inc
fs
(bad)
xor
adc
aas
inc
(bad)
das
push
mov
ins
adc
jae
and
mov
sub
push
dec
xchg
iret
jmp
xor
cmps
mov
inc
int
icebp
pop
aas
xor
sub
xor
cmp
inc
stos
cld
mov
fbstp
aas
icebp
cmc
in
push
test
cmp
mov
sub
inc
sub
inc
int
or
inc
push
or
sti
je
xchg
dec
and
push
fs
sar
mov
pop
js
sbb
hlt
lock
mov
xchg
jge
fdiv
sbb
cs
shl
inc
fisubr
mov
(bad)
pop
fwait
les
nop
sbb
popf
add
dec
cmp
dec
call
mov
imul
or
dec
cmp
les
test
(bad)
inc
hlt
inc
inc
push
inc
test
das
mov
mov
inc
dec
pushf
cmp
aaa
inc
inc
jnp
fdiv
or
sbb
rcr
xchg
shr
dec
inc
xor
ds
xor
dec
std
pop
inc
inc
cmp
inc
div
cmp
iret
push
hlt
push
cmp
pop
nop
xchg
(bad)
dec
xor
cmp
cli
cmps
mov
push
push
ja
repz
aam
inc
movs
xor
bound
les
sub
test
cmp
inc
push
fcmovnbe
adc
fbld
or
xchg
cmp
outs
enter
push
ins
fdiv
push
inc
push
mov
cmps
sub
inc
aad
cmp
hlt
or
clc
shl
lods
sbb
add
and
or
ins
sar
outs
repz
inc
lock
xor
sub
mov
test
pusha
jmp
mov
mov
outs
jne
xor
jmp
mov
(bad)
cmp
sub
mov
sbb
daa
(bad)
frstor
in
sub
cmp
push
push
pop
dec
sbb
test
sub
lds
inc
add
pop
mov
or
inc
dec
inc
dec
mov
dec
fxsave
sub
div
xchg
inc
xchg
test
test
aas
pop
jp
sbb
cmp
outs
pusha
and
mov
inc
test
ins
xchg
fimul
mov
std
mov
aad
into
(bad)
fsub
cdq
add
cmp
cmp
cmp
inc
bound
xor
mov
out
add
inc
movs
or
sti
inc
sbb
dec
mov
sbb
sbb
xlat
clc
fst
cmp
or
mov
mov
ds
loopne
test
out
dec
outs
or
inc
fiadd
mov
(bad)
fmul
inc
add
xor
mov
push
rol
adc
xlat
sub
cmp
in
xlat
stos
test
inc
cmp
push
out
jmp
jg
xlat
jl
mov
push
out
call
inc
inc
in
xchg
mov
inc
sub
in
xlat
mov
(bad)
ins
sbb
lods
cli
dec
test
inc
jecxz
inc
fwait
inc
test
or
xor
out
not
cwde
fmul
mov
test
or
cmp
loopne
ret
push
sbb
inc
inc
xor
out
sbb
cld
pusha
xor
xor
xchg
cmp
and
mov
xor
fild
aaa
mul
cwde
rol
push
mov
xlat
mov
sub
xor
add
add
ss
cmp
cmp
cmp
out
sub
sub
pop
fcom
pop
adc
retf
or
(bad)
sar
jae
mov
jle
inc
lds
add
adc
xor
scas
mov
inc
inc
xor
mov
push
cmps
sti
mov
mov
adc
inc
lds
push
es
jl
inc
enter
adc
inc
sub
shl
mov
cmp
mov
test
jl
xor
push
ins
pop
fnstcw
push
cdq
inc
stos
adc
inc
arpl
aaa
int3
inc
(bad)
or
and
loopne
inc
mov
xor
mov
xchg
inc
outs
mov
xchg
loop
test
and
inc
out
push
inc
addr16
pop
pop
inc
lahf
ficomp
aam
jp
movs
xor
in
fnstcw
inc
(bad)
cdq
cmps
aad
inc
out
mov
and
ficom
inc
rol
neg
inc
rcr
push
pop
xlat
jle
inc
cli
inc
imul
stc
aaa
inc
repz
ret
mov
jg
xor
xor
dec
and
cld
frstor
fstp
xor
fadd
and
push
pop
adc
repz
imul
mov
and
js
pop
xchg
lock
jg
and
aas
out
cmp
and
imul
scas
sti
mov
inc
jae
and
and
add
xchg
cmp
cwde
push
sti
in
mov
call
push
pop
cmp
inc
sub
mov
xor
inc
and
cmp
popa
and
mov
push
aas
loope
cmp
ficomp
in
in
adc
dec
dec
sbb
cmp
dec
inc
sbb
shl
test
cmp
inc
xchg
cmp
cmps
xor
popf
hlt
sub
push
push
stc
fs
mov
mov
sub
push
dec
lods
outs
sar
and
mov
retf
mov
js
or
icebp
stc
inc
cmp
and
push
repnz
cmps
xchg
push
inc
(bad)
(bad)
sub
retf
mov
or
adc
adc
xchg
and
rcl
xor
sbb
fs
inc
mov
push
test
pop
mov
push
ja
jmp
jnp
stc
ds
mov
sub
pop
jns
test
and
stos
call
pop
ja
rcl
inc
fcom
push
out
xchg
ret
add
inc
xchg
iret
mov
stos
mov
mov
pop
pop
(bad)
jge
mov
out
mov
leave
jne
push
div
sahf
inc
ds
or
fsub
xor
sbb
ins
movs
cmp
inc
pop
jl
fs
arpl
cld
inc
mov
out
sub
pop
xlat
add
nop
int
mov
cmp
jp
mov
movlps
inc
pop
sti
aaa
dec
sbb
dec
fst
ins
dec
inc
inc
into
inc
push
push
push
mov
sub
and
inc
xor
xor
inc
scas
ret
das
mov
cmp
or
cmp
nop
imul
pusha
or
and
int3
sub
or
aad
pop
xchg
inc
aaa
inc
jmp
or
retf
adc
sbb
push
mov
or
sbb
sub
xor
or
mov
add
mov
push
mov
out
jle
inc
mov
inc
inc
dec
loopne
inc
sbb
cmp
cmc
outs
jmp
push
inc
in
fild
(bad)
dec
outs
test
xchg
push
sahf
push
outs
jae
jmp
push
sbb
ds
bound
inc
push
mov
adc
test
sbb
or
sbb
sub
clc
repz
inc
test
or
inc
and
push
mov
and
(bad)
cmp
mov
sti
mov
pop
lea
inc
adc
or
inc
jbe
loope
adc
xor
jnp
es
popf
jae
jb
test
idiv
scas
add
cld
loop
cs
icebp
repz
clc
pop
xchg
inc
lea
and
sub
cld
inc
mov
mov
add
rcl
outs
adc
adc
pop
mov
adc
push
pusha
xchg
add
inc
mov
fist
mov
xor
mov
xchg
mov
int
xor
psubd
cmp
adc
xchg
jle
in
pusha
sub
or
and
cmp
jge
pop
dec
inc
push
mov
mov
out
mov
cwde
rcr
xchg
mov
and
dec
cmps
mov
jecxz
sub
inc
cmp
mov
sbb
es
outs
inc
in
aam
fild
jmp
mov
pop
lock
inc
push
mov
push
out
mov
cmps
sub
adc
sbb
inc
call
mov
mov
into
mov
inc
fld
mov
mov
jmp
mov
inc
dec
div
mov
inc
fldcw
scas
mov
xchg
or
sti
call
cmp
sub
jmp
cmp
in
movs
aaa
cmp
bound
pop
xor
sar
push
sti
adc
inc
inc
mov
xchg
xchg
inc
adc
pop
cmc
cmp
loopne
inc
cmp
dec
push
repz
xor
mov
pop
(bad)
sti
stos
cmp
jbe
sbb
add
mov
(bad)
(bad)
out
dec
inc
push
mov
inc
or
retf
mov
xchg
push
cmp
fild
call
and
not
jp
cmp
dec
repnz
pop
push
retf
(bad)
sar
jns
mov
cdq
sti
cmp
and
push
cmp
lea
js
sub
out
(bad)
movs
xchg
mov
outs
cmovo
hlt
test
inc
and
bound
lods
cwde
and
(bad)
sbb
loop
inc
inc
imul
sbb
inc
out
add
sti
mov
xor
hlt
pop
pop
jno
ror
out
test
jge
sbb
mov
xor
(bad)
jns
fisubr
xor
js
push
cmp
addr16
arpl
sbb
add
scas
(bad)
arpl
or
clc
mov
inc
loopne
inc
sti
sub
sar
jmp
dec
sbb
xor
jecxz
outs
and
dec
push
xor
sbb
retf
xor
(bad)
xchg
(bad)
outs
fld
cmp
push
mov
add
mov
aas
gs
fdivp
or
mov
mov
sbb
push
arpl
mov
imul
inc
sub
xchg
mov
inc
lahf
fld
inc
push
out
lock
jae
sbb
inc
cmp
inc
mov
pop
push
repnz
push
push
cmp
fsubrp
inc
mov
sub
pusha
aaa
adc
sub
sbb
jp
mov
retf
add
lahf
mov
jno
xchg
cmp
aad
fild
fiadd
dec
(bad)
mov
fs
mov
gs
iret
sar
dec
ss
mov
mov
lods
xor
inc
mov
cmp
jp
mov
imul
inc
jae
iret
je
inc
call
inc
and
add
out
pop
inc
cmp
inc
xor
xchg
in
add
cmp
dec
mov
inc
jbe
loope
fs
mov
shr
sbb
mov
mov
sbb
adc
jmp
mov
test
(bad)
stc
dec
inc
inc
inc
adc
mov
inc
xor
aam
hlt
jb
enter
xchg
in
icebp
ss
adc
ds
cs
ins
pusha
add
mov
cmp
bound
jmp
mov
xor
mov
pop
add
inc
or
(bad)
dec
sti
(bad)
fsubr
dec
fnstcw
les
jmp
cmp
aad
inc
movs
jnp
test
or
xchg
push
jo
mov
int3
push
addr16
cmp
stc
sbb
and
inc
std
aad
cmp
dec
mov
bound
movs
inc
mul
xor
jae
fiadd
sar
dec
jge
mov
push
or
fwait
hlt
and
add
inc
cwde
cmp
nop
cmp
pop
int3
dec
ret
xor
add
pop
xchg
mov
sbb
inc
add
mov
adc
inc
aad
aas
push
(bad)
and
loopne
jmp
movs
adc
loopne
push
pushf
inc
scas
inc
test
mov
inc
jle
jp
aam
adc
int
sub
ins
xchg
ins
sub
jp
in
jmp
cmc
scas
outs
xchg
aas
mov
js
lahf
xchg
popa
popf
stos
fwait
ds
gs
inc
sbb
xchg
mov
push
and
dec
mov
ret
hlt
jecxz
xor
aad
inc
inc
inc
enter
jle
lea
inc
or
jbe
or
cmp
inc
adc
lahf
push
sbb
daa
cmps
mov
add
inc
inc
ins
sbb
adc
rol
adc
call
cmp
push
sub
inc
lock
xor
jl
mov
scas
int
nop
and
push
ret
inc
inc
fcomp
dec
dec
dec
addr16
cmp
or
into
xor
dec
dec
inc
xor
cmps
ret
sbb
inc
ins
scas
hlt
jecxz
lea
jo
mov
daa
pop
int3
push
inc
pushf
pop
mov
mov
test
js
aaa
int3
cmp
(bad)
out
xchg
push
rcl
icebp
cmps
push
je
mov
repnz
sub
inc
and
mov
fsub
xor
xor
cmps
movs
cmp
das
rol
mov
pop
cmp
js
or
rcr
in
cmc
sub
inc
inc
pop
add
psubusb
inc
in
inc
pop
bound
inc
stc
lds
fsubr
std
nop
arpl
das
push
xchg
add
push
xchg
xor
js
out
movs
inc
inc
add
mov
fcom
adc
scas
push
imul
enter
xor
or
test
mov
mov
inc
mov
cmp
lds
out
fcomi
ret
leave
inc
mov
std
mov
inc
mov
int
cmps
cmp
js
add
je
mov
retf
sub
cmp
jp
mov
xor
xchg
cmp
stos
mov
mov
xor
es
jo
dec
fwait
inc
daa
out
push
cmp
pop
outs
push
sbb
div
add
stos
inc
ret
stc
dec
les
inc
inc
jle
pop
add
sub
shl
inc
cwde
test
lods
add
ins
mov
lds
clc
scas
test
inc
call
mov
xchg
test
pusha
dec
inc
dec
call
sub
les
imul
adc
in
enter
jnp
inc
mov
stc
ss
cmp
xchg
ffreep
ds
mul
jns
or
sti
daa
mov
xor
cmp
pop
dec
xor
test
test
inc
mov
call
dec
popa
inc
sub
xor
loopne
gs
mov
cmp
and
std
test
sbb
jle
inc
gs
sub
ror
mov
cmp
(bad)
(bad)
pop
enter
cmp
mov
inc
pop
xor
add
nop
dec
icebp
enter
jns
add
dec
pop
int
inc
inc
xor
nop
mov
cmp
cmp
jae
pusha
ret
mov
inc
test
inc
inc
add
call
push
cmp
inc
(bad)
ins
(bad)
daa
push
pop
mov
and
loopne
retf
adc
mov
mov
push
pop
push
xor
pop
sub
into
cmp
inc
dec
fs
add
adc
popa
inc
cmps
jg
(bad)
mov
xchg
xor
inc
int3
pop
in
sbb
fild
out
bnd
jns
inc
shl
psrlw
or
pop
lods
inc
sbb
fs
(bad)
imul
int
ja
inc
cmp
mov
mov
loop
movs
test
inc
inc
ins
rol
imul
ja
int
addr16
fnstcw
jecxz
fldcw
or
(bad)
fbld
push
pop
mov
mov
inc
aam
or
(bad)
jns
adc
jbe
xchg
(bad)
pop
ret
bswap
add
xchg
mov
cmp
or
ins
jb
cmp
inc
mov
jmp
and
xchg
and
lea
sti
xchg
adc
cmp
cwde
fucom
cmp
pop
inc
mov
mov
inc
sub
push
adc
push
lea
mov
pop
xchg
scas
mov
xchg
mov
push
xchg
cmp
and
nop
sub
fiadd
inc
or
pop
cs
cmc
lods
setbe
test
jnp
out
add
cmp
inc
cmp
inc
mov
cmp
xor
cld
sub
fsubr
inc
popa
cmp
imul
dec
inc
inc
pushw
xlat
fld
scas
ret
lock
cli
jmp
icebp
(bad)
adc
inc
das
or
inc
jmp
inc
in
inc
fdivr
ja
scas
ret
test
inc
dec
fidiv
push
push
shr
inc
adc
inc
and
sar
retf
(bad)
cmp
inc
dec
inc
mov
inc
fdivp
dec
enter
add
push
inc
add
test
push
inc
out
inc
aam
inc
idiv
aad
or
(bad)
out
mov
sub
sbb
add
dec
stc
inc
pushf
inc
sub
or
les
scas
and
inc
imul
dec
ret
jmp
dec
stc
inc
xor
and
movs
inc
mov
adc
or
test
clc
inc
retf
daa
cmp
sbb
mov
iret
lea
ss
cmc
mov
mov
inc
xor
clc
scas
mov
sbb
movs
inc
mov
adc
sbb
inc
push
inc
pop
jmp
(bad)
xor
cmp
inc
and
icebp
aas
xor
pop
cs
jmp
es
inc
xchg
outs
inc
inc
push
adc
adc
inc
gs
test
inc
push
inc
mov
ret
ss
repz
xor
pop
cs
or
mov
in
repz
ins
mov
push
jp
push
inc
sar
scas
ret
jne
out
mov
daa
push
movs
scas
ds
inc
data16
inc
ror
scas
add
sbb
pop
inc
and
inc
aam
inc
mov
sbb
dec
rol
fstp
into
cmp
push
xor
inc
mov
outs
inc
sub
pushf
sbb
sub
push
inc
mov
pop
ror
aaa
les
das
sub
inc
ds
ds
ds
leave
ss
xor
cmp
cmp
or
and
mov
xor
and
and
dec
and
dec
repnz
xor
and
icebp
sub
jl
jle
loopne
aas
aas
dec
mov
aaa
xchg
aas
and
das
cli
push
cmps
sar
nop
leave
sbb
inc
pop
ins
xor
xor
test
sar
and
test
cmps
mov
xor
pop
shl
xor
aaa
repz
stc
ds
stos
and
les
cmp
dec
xor
push
cmp
jae
(bad)
test
and
sbb
repnz
stos
aas
push
jge
int
aas
fimul
aas
xor
aas
mov
aas
jg
aas
lods
mov
mov
dec
cmp
xchg
movs
mov
cmc
jp
ret
stos
ds
enter
rol
popf
sbb
push
mov
push
leave
ds
sbb
fsubr
ds
ds
xor
xchg
push
test
jb
ss
div
inc
cmp
cmp
cmp
sar
or
cmp
cmp
cmp
in
mov
xor
inc
xor
and
pop
iret
ss
sub
jbe
sub
pop
and
mov
push
jnp
or
adc
and
jne
mov
and
push
and
ja
xchg
jnp
and
and
and
loope
mov
and
mov
sahf
dec
and
and
enter
movs
ror
add
outs
sub
ds
cmps
ds
ds
fld
xchg
jo
or
and
and
and
and
push
push
daa
and
and
and
scas
or
cmps
mov
pop
sub
sbb
xchg
je
imul
in
sub
xchg
dec
xchg
loop
push
xor
lahf
jg
ss
mov
repz
lock
jns
sub
inc
mov
mov
std
sub
sub
and
xchg
cld
ds
inc
push
std
adc
jmp
scas
xchg
or
sub
mov
popf
jle
in
mov
mov
fdivr
xchg
loop
sub
inc
xchg
(bad)
out
push
mov
cli
sub
fstp
ja
inc
xchg
jbe
outs
movups
adc
loope
xor
pop
push
xor
xor
or
ds
mov
loopne
pop
adc
cmp
outs
pop
add
jne
inc
es
sbb
cmp
or
stos
mov
pop
cmp
aam
call
add
xchg
movs
fsub
mov
sub
cmp
cdq
or
in
jle
jb
add
pushf
add
inc
cdq
push
xchg
outs
out
addr16
inc
mov
jmp
mov
test
and
mov
jb
ret
addr16
pop
fsubr
retf
inc
xchg
and
pop
cmp
loopne
xor
cmp
jg
xor
ins
inc
cmp
loopne
sub
push
push
fistp
inc
inc
xchg
mov
ja
pop
cld
rol
test
pop
(bad)
push
ss
pop
ror
push
aad
jmp
mov
hlt
adc
push
not
retf
push
add
iret
mov
push
xor
inc
mov
xor
fisttp
sbb
inc
popa
jmp
inc
loop
rcl
stos
push
mov
inc
mov
inc
push
xor
fdivp
pop
cmp
int
inc
dec
add
aas
inc
mov
sub
cmp
hlt
xor
pop
xchg
aam
dec
inc
xchg
nop
jae
xchg
pushf
add
fs
mov
mov
jmp
outs
mov
outs
ret
cmp
fisttp
data16
mov
dec
mov
fsub
icebp
jne
sub
sar
fsubr
inc
cmp
jae
jnp
pop
sahf
inc
push
push
addr16
xor
cmps
pusha
cmc
cmp
and
(bad)
xlat
test
call
mov
sub
cmp
loope
inc
xor
gs
push
jmp
test
mov
pop
pop
in
pop
and
sub
es
loope
push
push
fs
push
test
push
inc
mov
or
xor
mov
mov
scas
jb
inc
sbb
inc
out
stos
xchg
jle
inc
and
fldpi
mov
mov
movs
ss
clc
int3
pop
call
inc
mov
cdq
mov
mov
ins
aad
cmps
sub
ret
fs
lahf
sti
pop
lea
mov
ds
add
xchg
push
xor
sbb
inc
loope
out
ret
add
inc
dec
mov
pop
mov
iret
sti
fst
in
push
cmp
addr16
cmc
mov
std
or
stos
jbe
out
inc
rol
adc
mov
inc
clc
ret
es
rep
inc
lock
push
mov
pop
pop
pop
jmp
outs
aaa
out
nop
pop
dec
cdq
xor
(bad)
cmp
fdiv
dec
enter
add
mov
inc
adc
pusha
sar
xor
pop
sub
mov
mov
jne
add
sti
pop
pop
pop
in
idiv
mov
cdq
push
add
retf
in
jns
and
add
enter
cmp
int3
pusha
gs
inc
xor
ret
jg
sub
and
mov
pop
aas
and
int
inc
inc
pusha
out
loop
ds
jecxz
mov
or
add
pop
cmp
pop
sbb
inc
rcl
fs
push
aaa
or
(bad)
ds
aam
sbb
dec
sbb
xor
pop
add
mov
dec
ret
sbb
and
cmp
out
xchg
jge
dec
xor
add
bound
xlat
or
pop
inc
ret
fnstcw
imul
es
or
jle
push
dec
inc
mov
(bad)
inc
inc
sbb
mov
xor
xchg
fdivr
xchg
mov
imul
mov
jecxz
aam
cmp
in
repz
call
stos
and
adc
scas
cmp
add
sub
push
int
out
cmp
push
into
imul
imul
js
mov
test
jbe
jp
and
call
dec
iret
out
mov
mov
fimul
rcl
or
mov
in
enter
mov
cmp
mov
adc
cmp
fstp
stos
and
mov
jae
(bad)
ror
pushf
inc
pop
in
add
jl
stos
adc
aad
fidivr
aam
popf
inc
in
addr16
mov
jnp
fistp
xchg
inc
in
pushf
cmp
fdivp
popa
inc
lods
mov
inc
xchg
nop
fstp
retf
stc
stos
jne
inc
mov
daa
(bad)
enter
jle
adc
(bad)
(bad)
inc
xchg
mov
dec
mov
jne
ror
push
out
pop
and
add
add
inc
mov
inc
cli
lea
movs
or
test
mov
aam
cmp
inc
inc
setg
inc
fwait
mov
xchg
in
pop
cmp
dec
fiadd
xchg
adc
pusha
and
xchg
shl
cmp
sbb
push
mov
inc
loop
jb
aam
inc
push
or
stc
xchg
jbe
inc
or
jp
outs
and
scas
aaa
ds
xor
and
fisttp
ret
sbb
mov
fdiv
ja
lock
push
fdivr
jno
stos
pop
pop
pop
(bad)
sub
ss
inc
dec
dec
xchg
inc
retf
or
mov
iret
sub
sbb
pop
dec
pop
push
inc
inc
ss
shl
mov
inc
push
shr
gs
dec
pop
(bad)
ds
push
(bad)
adc
push
scas
xor
inc
xor
aam
mov
fcmovnu
pop
psadbw
inc
inc
mov
pop
(bad)
xchg
pop
loopne
xchg
repz
mov
and
cmp
mov
mov
(bad)
push
jmp
xor
adc
cmp
pop
or
fwait
rcr
fild
cmps
mov
mov
cmps
cmp
(bad)
mov
sbb
cs
cmc
lods
push
push
and
int3
sbb
fmul
sub
cmp
movs
mov
sbb
ret
arpl
cdq
mov
lea
push
loop
imul
cmps
jle
inc
cmp
scas
inc
icebp
mov
mov
repnz
std
vmread
ds
loop
in
fild
xor
pop
jmp
and
mov
add
stos
inc
fcomp
xchg
push
cmp
add
ja
push
dec
pop
jo
adc
je
in
cmp
xor
das
inc
mov
inc
outs
and
pop
imul
gs
(bad)
push
sub
sub
cmp
(bad)
or
pop
dec
fiadd
rcr
xchg
dec
aas
(bad)
call
and
dec
daa
lock
inc
aad
icebp
inc
adc
repnz
inc
loope
in
mov
int
push
fild
(bad)
inc
pop
pop
xchg
stc
icebp
inc
loop
ds
mov
or
popa
mov
inc
add
aas
sub
jp
xor
sub
cs
inc
inc
in
sti
inc
cmp
pop
movs
icebp
push
cdq
cmp
mov
outs
adc
cmp
in
sti
inc
mov
mov
arpl
cmp
and
fstp
cmp
inc
dec
push
cmp
das
mov
push
movs
inc
push
jno
jae
ds
cmp
mov
sub
xor
loop
or
inc
inc
xchg
aas
mov
mov
jb
cmp
push
dec
cmp
sub
daa
loope
rol
inc
push
push
and
hlt
inc
stc
jno
inc
or
ds
cmp
sub
xor
call
inc
ja
and
add
push
add
jb
scas
sar
add
ret
sub
dec
cmp
dec
cmp
shr
stc
xor
stos
xor
jp
js
nop
cmp
or
sub
dec
cmp
adc
cs
push
and
fstp
(bad)
sbb
cmp
inc
cmp
js
retf
xor
xor
cs
inc
pop
dec
xchg
inc
and
jmp
cmovo
ja
and
sbb
cmp
fld
shl
mov
in
push
jno
or
and
push
cld
adc
and
push
cmp
test
aas
cmps
jge
mov
push
sti
xchg
jns
dec
adc
mov
add
inc
cmp
or
inc
cmp
dec
cmp
aaa
inc
and
nop
hlt
inc
inc
in
cmp
or
jnp
popf
cmp
inc
test
lods
push
mov
or
xchg
or
(bad)
aaa
movs
sbb
mov
push
pop
xor
inc
cmp
sub
inc
sbb
movs
mov
sub
add
pop
stc
gs
xchg
push
hlt
bound
lahf
outs
cmp
lea
inc
and
enter
and
inc
inc
push
scas
or
mov
out
test
xchg
mov
es
sbb
in
xor
in
pop
mov
or
movzx
pop
rcl
inc
adc
fyl2x
inc
mov
adc
dec
(bad)
retf
cmp
cmovo
cmp
popa
lea
jmp
rcr
test
sub
mov
xchg
mov
mov
sbb
fcmovnu
and
aas
jecxz
inc
xor
mov
ja
inc
dec
xchg
jb
push
imul
leave
ror
imul
in
(bad)
(bad)
pop
xchg
jnp
sub
inc
sahf
rcl
xor
xor
gs
stos
clc
cmp
rol
inc
das
fld
ret
inc
pop
in
pop
jmp
push
cwde
int
and
mov
dec
loop
aam
xor
inc
push
mov
pop
out
jge
imul
stos
xor
inc
dec
sbb
push
test
pop
cmp
push
outs
mov
inc
leave
pushf
out
pop
(bad)
xchg
cmp
cmc
loope
movs
mov
jmp
add
cmp
cmp
mov
or
add
pop
js
out
mov
icebp
aas
and
pop
(bad)
pop
inc
out
push
cmp
xor
(bad)
in
inc
clc
test
pop
mov
dec
nop
mov
pop
cmp
inc
lds
aad
cli
add
sbb
mov
mov
push
adc
nop
repz
into
fmul
stc
leave
out
cmp
mov
pop
ins
mov
ret
pop
fnsave
dec
cmp
outs
xchg
add
pop
nop
mov
pop
dec
aam
fcomp
xor
cmp
ins
sahf
enter
cmp
int
out
mov
add
add
xor
inc
inc
loopne
test
hlt
sub
mov
add
(bad)
pop
dec
jmp
mov
ret
and
or
cmp
(bad)
ja
loopne
(bad)
enter
and
es
mov
stc
xor
dec
sub
or
jge
mov
dec
inc
nop
fcomp
in
or
les
push
call
rol
sbb
or
cmps
sub
dec
mov
mov
mov
inc
imul
out
lods
lea
clc
mov
sti
xchg
mov
jb
and
mov
mov
lds
inc
and
mov
into
shr
pop
fcomp
or
jle
(bad)
push
enter
mov
rol
mov
inc
xchg
mov
repnz
inc
pop
test
adc
pushf
ins
xchg
test
inc
addr16
add
mov
jge
cmp
dec
cmp
inc
push
lds
cmp
adc
call
leave
push
inc
and
lods
xchg
jae
cwde
mov
xchg
cmp
xchg
jge
js
loope
inc
cmp
inc
jl
ds
inc
(bad)
sti
push
dec
cmc
out
xchg
ins
cmp
ficom
pop
stos
loopne
cmp
inc
mov
sub
je
pop
mov
cmp
sahf
cmps
pop
clc
mov
pop
sti
inc
sub
in
jp
add
int
xor
add
cmp
jo
jmp
inc
mov
js
mov
add
xchg
inc
push
mov
data16
pop
xor
dec
jp
scas
pop
sub
cmp
call
mov
ds
cmp
inc
xor
xchg
jo
add
ficom
pop
scas
fsubr
std
sub
int
jns
sub
sti
jmp
mov
dec
inc
imul
lock
cwde
inc
sbb
jg
fistp
inc
pop
mov
and
les
pop
sub
mov
addr16
stos
sub
mov
sub
push
int3
adc
loope
cs
cmp
adc
jl
sub
xchg
fsubr
in
push
arpl
daa
popf
outs
sub
mov
inc
sar
xchg
cmp
and
push
adc
cmp
repnz
jp
mov
mov
add
in
cmp
mov
push
add
xchg
dec
sub
add
jl
sbb
and
imul
into
inc
adc
adc
add
xchg
push
cmp
xor
stos
sub
jecxz
push
inc
dec
frstor
push
fnstcw
xchg
inc
inc
push
or
inc
in
sub
xchg
das
loop
inc
push
xor
lahf
jbe
rcr
movs
cmp
jle
xchg
jb
pop
xor
push
pop
pop
inc
in
sub
xchg
sbb
inc
lahf
sub
xor
outs
fbld
retf
mov
sbb
cmp
sub
mov
pop
js
pop
xchg
ds
inc
loop
xor
out
push
add
sub
movs
mov
sub
xchg
push
inc
cmp
btc
iret
cwde
sub
pop
inc
push
jge
cli
fwait
xchg
sub
inc
inc
jbe
xchg
push
cmp
inc
inc
xchg
mov
xor
xor
test
inc
icebp
(bad)
cmp
out
adc
cdq
cmp
ja
cmps
scas
inc
retf
fisubr
xchg
xor
mov
add
aas
fst
push
add
mov
cmp
add
sahf
xchg
cmp
or
push
outs
inc
cmp
xor
inc
(bad)
sub
ret
loopne
inc
jb
xchg
int3
aas
pop
or
(bad)
sub
les
pop
cmp
sahf
jbe
inc
aad
jg
fist
out
xor
scas
inc
or
sub
push
aaa
inc
cli
popf
idiv
inc
jo
cmps
js
xchg
aam
or
imul
aad
inc
pop
out
push
int
leave
pushf
and
stos
mov
ja
inc
xchg
aas
cmp
sqrtps
and
(bad)
xor
cwde
mov
jbe
repnz
push
sub
pop
mov
js
sbb
inc
mov
jmp
sbb
das
mov
mov
call
dec
rcr
jp
cmp
inc
cmp
imul
loope
pop
in
push
sub
inc
pushf
rcl
ficomp
cmp
inc
inc
outs
out
sub
jecxz
push
imul
fxch
leave
and
retf
or
fdivr
addr16
sub
xchg
(bad)
loop
or
inc
ficomp
jge
inc
out
fidivr
push
or
(bad)
cmp
sub
mov
call
xor
fistp
jno
xchg
sub
xchg
cmp
jecxz
sub
xchg
sub
inc
mov
popf
pop
mov
inc
js
xchg
retf
cmp
cld
(bad)
xchg
nop
or
jmp
gs
cmp
aad
add
xchg
out
cmp
paddusb
inc
shl
xor
mov
inc
fist
inc
add
test
push
and
repnz
iret
std
cmp
retf
cli
jae
lock
inc
mov
add
adc
sbb
aaa
lock
out
cmp
test
or
dec
cdq
test
cmp
mov
or
mov
dec
push
mov
stos
xlat
cmc
setne
shl
xor
aam
sti
add
pushf
cmp
or
add
jno
les
mov
inc
mov
shl
cld
push
ins
mov
push
fdivr
jecxz
addr16
jb
(bad)
pmullw
or
std
outs
inc
xchg
push
aaa
jmp
xchg
inc
data16
push
sub
(bad)
push
or
add
cmp
inc
cmp
sub
or
cmps
push
xchg
mov
gs
or
cmp
fcmovnbe
add
add
std
ins
inc
xchg
inc
xor
fisttp
or
out
cwde
inc
fs
bound
jge
into
or
fadd
js
add
inc
ss
sub
or
movs
dec
xchg
mov
arpl
jp
inc
or
xlat
add
or
std
imul
xor
cmp
push
cdq
dec
scas
mov
dec
call
sub
cli
aam
mov
mov
ss
mov
pop
cmp
repz
sbb
inc
push
push
retf
pop
(bad)
test
push
nop
cmp
inc
mov
mov
test
js
outs
enter
inc
jmp
adc
push
mov
mov
add
imul
mov
inc
inc
mov
ror
xor
xchg
push
xchg
loop
inc
sub
add
cmp
adc
sbb
mov
push
push
ds
cmp
or
adc
out
(bad)
mov
inc
fbld
jns
mov
or
and
cmc
rol
add
jecxz
jle
fadd
xor
pop
inc
add
(bad)
dec
aaa
mov
out
scas
in
cmp
mov
add
cmp
jnp
cwde
aad
xor
jge
push
inc
ret
cmp
inc
jmp
mov
pop
std
int3
inc
clc
jl
mov
push
cmps
stc
inc
aas
into
cmp
sub
in
pop
push
inc
sub
push
pushf
data16
push
leave
out
pop
jo
(bad)
cmp
scas
mov
inc
inc
ret
pop
aaa
fisubr
inc
pop
cmp
mov
outs
mov
sub
pop
fiadd
inc
inc
mov
icebp
xor
or
lock
std
cmp
cmp
aaa
mov
cmp
lock
lods
sub
aam
ins
and
and
inc
scas
and
lds
pusha
stos
repnz
adc
cmp
ins
add
inc
outs
pusha
loopne
into
aam
dec
sub
out
sti
imul
dec
or
repnz
xchg
popa
inc
sbb
xchg
shr
pop
xor
in
popaw
test
les
es
sar
repz
push
popf
xor
sub
xor
int
push
adc
add
and
or
dec
in
ins
aad
dec
cmp
ss
es
inc
push
ds
outs
cdq
jecxz
fistp
repnz
inc
xchg
add
scas
outs
dec
cmp
(bad)
push
cmc
inc
push
jne
add
cmp
iret
jge
mov
std
cmp
xchg
bnd
(bad)
jmp
mov
(bad)
or
inc
inc
or
mov
test
rcr
inc
cmp
jo
adc
iret
inc
adc
aas
adc
mov
cmp
mov
(bad)
mov
or
outs
hlt
enter
clc
add
aad
rcl
idiv
inc
mov
rcl
pop
jne
sbb
mov
mov
xor
inc
popa
cmp
call
aas
push
lock
dec
and
mov
div
sbb
mov
inc
xchg
jae
imul
push
jo
fnstsw
cmp
movs
xchg
xor
sbb
inc
lods
call
jle
inc
fsubr
addr16
jne
(bad)
aam
pop
or
mov
lds
in
or
lock
inc
retf
xchg
sbb
xor
mov
jle
mov
or
mov
aas
aam
push
inc
fcmovnbe
mov
aaa
cmp
pop
test
pop
lea
aas
inc
jmp
pop
cmp
(bad)
(bad)
out
or
jno
fistp
mov
dec
jae
xchg
cmp
push
adc
xchg
daa
sbb
cwde
inc
lds
pusha
int3
shl
sub
int
mov
push
sbb
push
push
xchg
in
mov
outs
jo
nop
ss
jl
cmp
clc
mov
call
outs
cld
daa
inc
dec
cmp
pop
into
or
sbb
sub
jnp
jb
loop
pop
push
and
shr
inc
test
pop
test
mov
shl
pop
jbe
mov
cld
xchg
dec
cmp
inc
jmp
sti
aad
ins
ret
imul
stos
cmp
jae
pop
mov
mov
je
push
cmps
imul
(bad)
push
aam
fidiv
mov
mov
inc
xchg
inc
pop
or
sub
inc
ins
mov
cli
dec
cld
sti
inc
je
loopne
dec
add
sub
dec
das
xor
(bad)
pusha
inc
xor
repnz
sbb
and
push
pop
mov
dec
pop
nop
cli
inc
retf
add
inc
adc
adc
cmps
cdq
loope
aam
xchg
call
inc
mov
inc
cmp
xor
gs
mov
dec
inc
std
cmc
in
inc
fsubr
xchg
add
fmul
fwait
js
fcomp
mov
jl
pusha
into
fwait
pop
je
std
mov
int3
and
cmp
cmp
mov
jns
and
adc
adc
add
push
ret
cmp
in
sti
push
and
xchg
das
fistp
jmp
mov
repz
es
cmp
pop
inc
dec
jnp
std
mov
movs
add
leave
stos
dec
shr
jp
int3
jle
std
fadd
inc
in
das
outs
or
mov
(bad)
mov
push
push
ins
inc
xchg
xchg
inc
movs
mov
les
mov
popa
cmp
fisub
adc
shl
jge
inc
mov
and
add
fistp
jg
adc
jp
aam
xor
movs
fcomp
dec
push
add
mov
lock
cmp
mov
xlat
es
cmp
mov
inc
das
pop
cmp
les
pop
addr16
cs
std
jmp
sbb
sub
mov
xchg
cmp
inc
and
jmp
and
pop
xchg
pop
and
or
ficomp
aam
jl
mov
mov
xchg
test
pop
fwait
ret
inc
mov
dec
jae
dec
fsubr
int3
imul
add
movs
jp
xchg
test
inc
hlt
inc
call
jb
inc
aam
in
adc
pcmpgtd
enter
push
cmp
jno
ret
cmp
inc
xchg
addr16
test
aad
ins
je
sbb
(bad)
out
xlat
mov
add
jno
xor
je
inc
inc
cmp
gs
ficom
lods
fisttp
shl
inc
dec
pop
push
test
sub
push
pop
in
add
pushf
cld
inc
addr16
mov
or
les
retf
push
sub
(bad)
mov
cli
inc
(bad)
mov
push
and
mov
std
addr16
sbb
mov
sbb
cmc
cmp
mov
loope
jp
test
sahf
cmp
mov
cmp
xchg
dec
je
(bad)
pop
out
adc
cmp
(bad)
bound
in
aas
or
aam
xor
inc
push
fild
sub
fdivr
je
push
cmps
pop
jl
ins
cld
lods
fiadd
mov
xor
inc
aam
dec
cli
in
add
lods
dec
into
mov
mov
jle
retf
dec
fldpi
add
mov
aas
out
add
(bad)
retf
cdq
fisubr
push
ret
test
cmp
in
dec
cli
(bad)
js
xchg
inc
and
xchg
sbb
mov
jl
loope
and
call
sub
cdq
and
call
inc
adc
sub
out
(bad)
(bad)
push
jmp
dec
mov
mov
int
fild
inc
jae
or
loopne
jmp
inc
les
jl
and
pop
inc
xchg
mov
stos
imul
xchg
repnz
pop
sbb
rcr
test
pop
cwde
inc
in
lods
mov
jge
ss
pop
xor
jnp
imul
jo
int
rcr
xor
lds
inc
daa
sti
fwait
call
mov
popa
and
jnp
iret
sahf
mov
scas
stc
dec
jb
pushf
mov
rcr
lods
add
sbb
xor
js
sar
jbe
test
ret
std
fwait
inc
xor
xchg
addr16
das
adc
ds
jl
int3
je
xor
aaa
cmc
jno
sti
stos
inc
test
push
add
dec
enter
mov
stc
scas
out
mov
ror
inc
bnd
fdivr
cmp
lods
inc
pop
add
or
inc
dec
popf
cli
scas
lock
xlat
dec
out
push
retf
clc
push
addr16
push
lods
or
inc
sub
or
pop
into
sub
add
inc
dec
adc
xchg
inc
inc
out
aaa
loop
push
push
add
popa
jmp
mov
pop
sub
cmps
fistp
xor
aas
inc
lock
inc
sub
gs
inc
outs
cmc
and
loop
mov
retf
cmp
rcr
sbb
loopne
and
add
iret
sbb
inc
or
cdq
je
out
shl
and
out
cmp
dec
std
inc
in
jae
(bad)
ja
jns
inc
xor
jmp
shl
mov
push
inc
inc
pop
push
mov
inc
push
push
out
arpl
aam
ret
loopne
or
xor
sti
sbb
inc
sbb
bound
sub
lock
jnp
jecxz
shr
sub
aas
cld
xchg
sbb
test
js
outs
bt
add
fcom
adc
rol
loope
push
or
sar
sub
mov
add
cmp
inc
sar
sub
pop
enter
dec
xor
out
xor
and
or
jne
add
cmp
cmp
cmps
adc
dec
movs
or
dec
jmp
xor
test
cmp
enter
mov
rcr
dec
loope
inc
lahf
shl
or
ds
hlt
mov
sti
inc
sub
inc
inc
aam
jno
inc
jnp
or
dec
movs
test
and
outs
inc
popf
fcmovne
leave
adc
(bad)
sbb
cdq
sub
leave
sbb
dec
sub
pop
add
sahf
mov
inc
hlt
jmp
sbb
inc
and
fsub
inc
xchg
in
repnz
enter
cmp
xchg
lods
mov
addr16
sub
xchg
mov
out
adc
fwait
xor
pop
dec
pusha
xor
and
test
push
jb
mov
push
inc
js
inc
in
xchg
retf
test
or
push
inc
scas
out
mov
pusha
int3
fisubr
lods
pushf
xor
jmp
cwde
sub
cmp
popa
xor
xchg
xor
pusha
mov
ds
and
jo
imul
fidivr
inc
out
jg
(bad)
and
pop
loopne
imul
xor
inc
inc
les
xchg
cmp
fdivr
mov
pop
dec
inc
shr
retf
mov
aad
and
ins
push
mov
lahf
je
sub
pushw
outs
dec
inc
shl
add
(bad)
in
mov
add
dec
jno
cmc
out
inc
fisub
sahf
stos
sbb
inc
loop
mov
cmp
mov
movs
add
add
lds
dec
nop
and
dec
mov
popa
fild
jo
and
call
std
les
jge
pop
cmp
push
retf
rcr
(bad)
movs
mov
call
gs
push
aaa
mov
mov
and
addr16
inc
arpl
xor
ds
mov
push
out
shl
ror
les
xchg
xor
jge
mov
and
imul
or
push
push
inc
in
jno
jle
xchg
sar
je
cmp
mov
inc
mov
lods
xchg
imul
mov
xor
inc
jns
ins
sti
fld
xchg
sbb
mov
mov
and
test
jmp
mov
outs
repnz
jecxz
hlt
sub
inc
ds
test
sti
fldcw
and
mov
pop
gs
sbb
imul
cwde
loopne
mov
pop
inc
and
cmp
or
pop
mov
sbb
nop
jno
pusha
sbb
js
leave
loope
inc
pop
mov
push
popf
das
fprem1
inc
jns
push
sub
fcmove
inc
xor
jg
add
retf
movs
inc
(bad)
hlt
and
xor
stc
cmp
imul
or
and
jmp
push
in
inc
ds
and
xchg
fild
inc
icebp
cli
and
mov
sub
mov
pop
sub
jae
mov
mov
dec
cmp
mov
pop
push
int
mov
jns
call
xor
ins
fs
mov
adc
jecxz
int
enter
cmp
mov
loopne
(bad)
outs
or
sbb
call
dec
cmp
jb
inc
jae
dec
adc
mov
pop
inc
jl
or
xchg
lods
lds
call
xchg
push
scas
inc
ret
dec
lock
fcom
xchg
and
aam
jge
inc
js
mov
clc
pusha
arpl
adc
dec
inc
stos
aaa
ficomp
arpl
pop
scas
out
mov
sub
adc
xchg
jo
adc
jne
and
leave
mov
imul
mov
xchg
inc
ds
test
(bad)
pop
lods
inc
in
or
test
dec
mov
inc
loop
js
mov
sub
inc
mov
cmp
mov
(bad)
mov
inc
rcr
popf
inc
and
retf
sbb
pop
inc
xchg
jg
adc
int
and
imul
pop
inc
(bad)
rcr
in
ja
jbe
mov
inc
xchg
stos
repz
lock
test
jge
shl
cmp
mov
mov
cmp
or
jp
mov
fst
pop
or
repz
or
and
pop
ficomp
cmp
arpl
out
std
cmc
fnsave
dec
test
add
pop
jmp
aas
daa
into
cmp
mov
lahf
cmps
mov
outs
and
in
jbe
fscale
sbb
or
and
push
cmp
adc
ds
loop
fcomp
cmps
cmp
push
inc
aam
cmp
mov
cmp
pop
push
outs
pop
cmps
inc
in
fstp
xor
push
stos
and
enter
push
adc
sub
add
(bad)
movs
shl
add
inc
call
enter
xor
xchg
push
dec
inc
inc
dec
(bad)
lods
scas
and
movs
xchg
cld
mov
mov
mov
inc
dec
inc
hlt
cmps
jl
push
inc
sar
pop
mov
enter
int3
int
push
shl
mov
bound
pop
std
push
aaa
jl
cmp
imul
popa
mov
into
mov
test
in
dec
mov
mov
mov
or
adc
dec
push
push
mov
call
cwde
imul
fsub
jle
aas
jns
pop
cli
mov
xor
inc
sti
test
inc
movs
das
jns
mov
fnop
inc
add
lods
adc
fwait
sub
dec
xchg
mov
inc
push
inc
in
xchg
and
fnsave
aas
and
inc
aam
call
ret
cmp
sbb
test
adc
movs
adc
or
int3
fcomi
mov
inc
outs
imul
dec
xchg
stos
cmp
cmp
call
sbb
mov
bound
sbb
or
int3
xor
adc
mov
je
sub
jecxz
mov
pop
inc
popf
cmp
push
aad
cld
or
sub
mov
or
in
mov
xor
pop
sahf
add
das
mov
sbb
es
push
adc
mov
jg
(bad)
dec
or
retf
cmp
push
loop
inc
repz
aas
pop
std
sub
sub
retf
cmp
cmc
gs
cli
mov
std
mov
xlat
mov
mov
push
xchg
and
jl
leave
test
inc
stos
aas
stos
jbe
cmp
dec
jge
stos
or
outs
dec
shr
mov
je
cmp
lods
xchg
cmp
xor
adc
jne
aaa
aad
cmp
ret
aas
idiv
push
mov
and
fs
out
xor
in
mov
dec
pop
leave
or
push
xor
mov
repz
or
add
sbb
inc
mov
pop
dec
retf
inc
fwait
je
stos
icebp
mov
xor
pop
in
add
and
not
sub
inc
inc
or
or
rcl
mov
mov
push
jnp
pusha
push
cmp
xchg
jo
inc
adc
daa
ret
ja
lahf
and
movs
cmp
hlt
push
pushf
rcr
cli
inc
xor
stc
sub
mul
jp
xor
push
cmp
popa
pop
fild
dec
out
pop
dec
xlat
cmc
in
or
mov
push
mov
mov
aam
cld
rcr
jo
inc
mov
sub
xor
mov
es
enter
outs
inc
(bad)
ror
and
lds
int
xchg
(bad)
test
mov
cmps
inc
fwait
scas
dec
repz
push
stc
sub
test
out
mov
sbb
std
xor
dec
jns
inc
jmp
sub
mov
addr16
mov
inc
out
cmp
mov
daa
or
cmp
inc
cmovo
sub
lock
xor
loopne
pop
dec
xor
push
pop
data16
jge
aaa
sbb
sti
ret
int
bsf
cmp
mov
mov
sahf
dec
pop
repz
pop
cmps
or
cmps
mov
push
mov
imul
and
fsub
leave
push
mov
lods
mov
jg
repnz
test
fsub
adc
stc
push
or
cmp
mov
fdiv
aas
popa
ds
test
sbb
add
adc
cmp
popa
sti
sar
cmovo
js
sub
and
sar
nop
cmp
push
mov
dec
inc
xchg
xchg
jmp
xchg
mov
xor
inc
mov
scas
in
aas
cmp
pop
push
and
sbb
or
push
minps
mov
sbb
mov
cli
mov
and
mov
xor
pusha
adc
retf
add
test
je
or
cld
fadd
pop
test
pushf
inc
sub
mov
or
enter
shl
dec
inc
sbb
movs
or
push
mov
and
cmp
test
adc
pusha
fucompp
je
loope
(bad)
fwait
and
pop
jg
mov
fidivr
cmp
jnp
imul
outs
ja
mov
cli
inc
sub
std
or
mov
inc
sbb
adc
into
inc
pop
lds
outs
inc
(bad)
in
inc
dec
lahf
mov
xor
mov
mov
inc
dec
inc
retf
outs
xor
shr
dec
ucomiss
lds
pop
les
sbb
in
and
out
cmps
push
bound
inc
mov
adc
xor
mov
and
mov
sbb
mov
lds
or
sbb
mov
mov
nop
inc
(bad)
cmps
int
ins
sbb
dec
mov
sbb
aas
lods
fwait
mov
push
outs
pop
add
sub
(bad)
ror
mov
jns
pop
add
(bad)
xchg
xor
or
push
repnz
nop
jb
iret
mov
jnp
in
cmp
inc
inc
fst
enter
pop
inc
push
jg
adc
iret
mov
cmp
(bad)
sbb
push
les
xchg
and
sbb
mov
(bad)
int
cld
mov
mov
add
push
lahf
repnz
inc
in
mov
jbe
mov
xchg
inc
sbb
in
call
(bad)
mov
inc
adc
add
and
sub
inc
dec
not
icebp
and
into
(bad)
aas
inc
cmp
popf
repz
inc
bound
add
gs
inc
imul
mov
push
mov
pop
jle
dec
lods
fcmovnu
push
(bad)
fcom
cdq
xchg
push
aad
cmp
sub
add
xor
movs
mov
inc
cmp
mov
sbb
xchg
aaa
cmp
push
call
outs
es
inc
adc
and
dec
inc
xor
sub
movs
out
pop
aad
stc
inc
mov
aam
or
(bad)
sti
stos
enter
cmp
xor
xor
cmc
add
pop
mov
dec
and
jge
aam
inc
es
inc
(bad)
mov
mov
pop
sar
xor
mov
inc
inc
sub
(bad)
into
push
dec
shl
aas
and
pop
cmp
mov
mov
sub
mov
fstp
pop
jns
jle
xchg
inc
inc
mov
ins
mov
xlat
out
inc
jno
es
jg
pop
sub
mov
cmp
retf
inc
cld
or
not
enter
ror
sub
xchg
aas
sub
cdq
sub
mov
das
stc
sbb
test
idiv
jo
cdq
xor
inc
call
sar
inc
cmp
ins
xor
dec
jp
inc
fadd
mov
inc
popf
sti
adc
movs
cmp
cmp
pop
sbb
pop
mov
mov
aam
pop
lods
inc
mov
dec
test
mov
push
add
cmps
and
idiv
fdivp
in
js
mov
xor
sub
inc
mov
xchg
xchg
fbstp
inc
inc
call
call
cmp
fisttp
stos
inc
fcomp
mov
cli
pop
rcl
inc
movs
int
ins
adc
inc
cs
les
clc
nop
or
xchg
fmul
test
inc
fstp
dec
mov
cwde
xchg
sub
sub
push
cmp
stos
repz
dec
aam
jmp
clc
jns
inc
push
or
out
das
push
inc
inc
jecxz
data16
inc
icebp
inc
stos
movs
loopne
dec
dec
adc
sub
or
jns
sub
lahf
cmp
sub
xchg
cld
(bad)
or
int3
clc
adc
jg
dec
bound
test
out
mov
or
call
mov
retf
out
push
inc
jp
push
lock
mov
inc
cmps
arpl
cmps
dec
and
rcl
cmp
loop
push
inc
popa
sbb
or
ds
or
mov
stos
movs
test
ss
pop
cmp
inc
jo
and
stos
or
inc
dec
jb
cmp
mov
cmps
mov
hlt
notrack
rcl
lds
mov
pop
cmp
sti
call
fs
push
call
loop
inc
fimul
arpl
inc
out
fs
pop
aas
ja
(bad)
(bad)
mov
cmp
pop
cmp
push
add
cmps
push
cmp
mov
int
push
dec
retf
addr16
inc
(bad)
sub
cmp
nop
or
aad
(bad)
push
mov
ins
inc
imul
leave
sub
pop
xor
cmp
aaa
iret
loop
test
stos
sbb
mov
xor
sbb
leave
sub
and
inc
fs
xchg
sbb
sub
cmp
mov
call
add
inc
mov
js
leave
xor
arpl
lahf
jecxz
fsub
fistp
(bad)
ror
ins
aas
cmp
dec
cdq
mov
cmp
adc
add
mov
inc
shr
mov
pop
mov
cmp
in
mov
fstp
dec
inc
sbb
(bad)
and
js
push
pop
int3
ds
sti
dec
movmskps
ret
mov
cmp
pop
jecxz
pop
inc
ss
xor
arpl
or
rol
inc
sbb
movs
lds
mov
(bad)
jmp
call
out
ret
hlt
test
enter
mov
jle
pop
cmp
cmps
(bad)
inc
mov
pop
inc
out
or
mov
xchg
push
adc
pusha
dec
jmp
out
scas
cmp
mov
inc
and
icebp
xor
(bad)
data16
pop
jne
call
test
inc
cmp
(bad)
aad
mov
mov
or
inc
fdivr
mov
add
inc
frstor
inc
pushf
fs
loopne
or
inc
ds
xor
cmp
dec
hlt
sar
ds
clc
sbb
add
call
mov
test
int3
push
arpl
xor
rcl
cmp
out
dec
cdq
inc
cmp
aam
pop
jge
ins
inc
inc
aaa
fst
jle
repnz
xchg
loop
pop
inc
cmp
sub
inc
jmp
jecxz
sahf
(bad)
rcl
or
inc
jb
loope
leave
xchg
ficom
fstp
jne
out
aas
les
arpl
jl
xor
outs
mov
fstp
inc
cmps
inc
jmp
gs
xchg
jge
cmps
loopne
mov
adc
pop
jmp
pop
inc
(bad)
ins
lea
sbb
imul
popa
jp
xor
shr
pop
and
stc
xchg
and
sub
in
push
inc
inc
inc
addr16
in
inc
or
dec
and
test
(bad)
imul
sar
mov
jl
adc
xlat
out
dec
pop
mov
(bad)
sub
test
adc
xchg
mov
add
inc
fwait
dec
mov
pushf
or
jmp
dec
scas
call
repnz
add
push
dec
inc
sub
div
sub
inc
push
pop
pop
mov
push
inc
push
mov
fsub
inc
ins
xchg
jl
or
scas
enter
mov
ss
sar
pop
nop
inc
inc
scas
fstp
adc
inc
popf
push
cli
data16
retf
aas
xchg
inc
pop
loopne
das
jmp
daa
mov
inc
cmps
inc
mov
inc
jle
inc
call
test
jg
xchg
xor
out
(bad)
lods
inc
sub
stos
jo
adc
ret
jnp
dec
inc
inc
xor
das
jecxz
inc
mov
iret
cmp
nop
loop
sbb
out
and
or
enter
cmp
add
xchg
mov
fs
repz
jb
aaa
mov
and
dec
jg
ins
(bad)
jp
mov
inc
(bad)
(bad)
ror
sbb
outs
push
movs
xor
pop
jbe
mov
cmps
mov
dec
sub
(bad)
int3
or
ror
jp
mov
inc
and
ja
std
mov
call
mov
mov
into
daa
inc
jge
shl
retf
pop
sbb
jnp
rcr
inc
inc
ret
retf
pop
test
iret
lahf
inc
sub
fdivr
mov
clc
enter
dec
retf
mov
cmp
jne
les
icebp
test
ret
gs
add
call
xor
mov
test
lea
stc
inc
out
stos
adc
push
adc
jecxz
cmp
inc
ds
jns
inc
adc
mov
(bad)
loopne
jle
aam
xchg
dec
mov
scas
and
inc
mov
mov
xchg
push
and
lods
xchg
daa
cmp
stos
or
into
jmp
cmp
cdq
mov
dec
out
jl
shl
cmp
call
cmp
in
mov
stos
jae
jge
movs
movs
xor
mov
or
cwde
pop
rol
mov
gs
push
or
aam
xor
or
dec
scas
mov
fs
sub
or
mov
inc
in
aam
arpl
mov
xchg
cld
mov
dec
rcl
sbb
jo
out
popf
dec
aaa
xor
push
mov
sbb
pop
stc
icebp
inc
rcl
mov
fistp
inc
in
cmp
ud1
pop
inc
inc
popa
call
aaa
push
or
mov
inc
test
sbb
hlt
ja
daa
sbb
xchg
cmp
jns
pop
sti
sbb
paddq
int3
inc
mov
sbb
outs
enter
cmp
mov
imul
in
ja
test
outs
repz
add
jns
sub
xor
cmp
mov
pop
mov
cmc
addr16
test
inc
retf
dec
jp
inc
jmp
arpl
jge
mov
cmp
push
das
inc
adc
mov
retf
je
adc
dec
push
ret
push
xchg
ficomp
jnp
and
xor
mov
sub
js
inc
jmp
es
(bad)
mov
je
outs
fucomip
cmc
inc
cmp
jmp
jnp
call
js
xchg
cmp
jle
mov
ss
add
mov
call
mov
shl
mov
or
inc
jmp
addr16
jo
inc
pushf
and
std
sti
inc
into
xor
add
ficomp
loope
fadd
pop
adc
xchg
inc
imul
xchg
fidiv
and
mov
cmp
aad
inc
rcr
pop
jecxz
jne
mov
sub
push
cmp
loop
push
xchg
fild
cmp
mov
mul
inc
lahf
sti
arpl
mov
ss
inc
out
mov
outs
icebp
loopne
retf
sbb
inc
add
add
mov
in
leave
nop
call
mov
jne
sahf
add
dec
or
mov
inc
add
sar
pop
fcom
add
cmp
mov
call
or
cmp
aaa
aad
jmp
sbb
shl
inc
cmp
inc
xor
scas
stc
cmp
adc
sti
dec
js
sub
add
sub
inc
xlat
sub
cmp
mov
lods
mov
daa
inc
cwde
dec
mov
call
pushf
movs
ins
in
iret
lods
es
or
mov
or
xchg
enter
or
int3
inc
out
cmc
pop
push
cmp
pop
inc
push
or
out
and
inc
inc
leave
shl
sbb
arpl
inc
mov
cmps
mov
mov
add
sbb
imul
adc
sbb
xor
and
frstor
jne
mov
push
cmp
mov
jl
push
inc
cmp
xchg
icebp
or
fsubr
sbb
cld
mov
mov
cwde
dec
inc
sub
inc
fcomip
xor
jp
push
cdq
inc
ins
pop
cli
and
mov
in
mov
xor
xchg
cmp
loop
dec
pop
pop
push
sahf
inc
xchg
fdivr
data16
fwait
inc
jo
push
push
xor
inc
inc
pop
cld
sub
cmc
into
ins
pop
mov
fnstcw
push
mov
pop
ds
dec
mov
bound
aam
div
test
int3
jne
popf
sbb
das
(bad)
cmp
xchg
adc
xor
jns
test
inc
push
dec
dec
inc
loope
inc
fwait
add
retf
jp
inc
dec
call
xor
fsub
mov
cmp
dec
mov
xor
xchg
inc
mov
pushf
loope
push
jmp
daa
inc
inc
out
mov
stos
enter
push
(bad)
jge
mov
lods
and
fisttp
pop
inc
mov
dec
adc
retf
into
movs
push
xor
call
fsubp
xchg
std
pop
inc
ss
icebp
mov
and
mov
rcl
cmp
sub
push
adc
and
inc
sub
add
sbb
pop
popf
mov
push
lods
inc
scas
(bad)
(bad)
push
pop
inc
retf
dec
xor
cmp
in
jo
adc
(bad)
inc
mov
std
or
mov
add
int3
or
(bad)
cmps
push
inc
push
xlat
cs
pop
lock
fdiv
sub
mov
inc
xchg
test
inc
(bad)
push
cs
rcr
pmaxsw
fstp
inc
or
and
imul
mov
out
xchg
ja
loop
ins
sbb
stos
inc
(bad)
adc
adc
in
dec
into
inc
xlat
inc
mov
movs
dec
push
ficom
mov
push
ja
xchg
push
xor
jge
adc
push
(bad)
cmp
dec
add
pop
pop
add
jnp
mov
inc
aam
outs
jno
jg
inc
jae
push
fimul
push
aas
mov
mov
cmp
sbb
cmp
adc
stos
mov
out
enter
sub
imul
(bad)
or
icebp
stc
push
popa
shr
cmp
lahf
dec
push
ret
hlt
cmp
push
ins
or
dec
test
inc
xchg
js
call
inc
cmp
xor
cld
dec
inc
ss
mul
shr
cmp
(bad)
push
dec
inc
lds
rcr
jnp
inc
movs
leave
or
push
iret
dec
inc
in
cmc
idiv
jbe
(bad)
aaa
sbb
xor
das
mov
inc
ss
mov
push
aad
add
mov
cmc
fwait
movs
inc
mov
push
cld
inc
mov
pop
dec
inc
inc
inc
cmps
xchg
iret
loop
(bad)
pop
pop
aaa
dec
or
add
test
mov
fld
jbe
pop
xor
fild
add
cmovo
ja
repz
and
addr16
std
sbb
cmp
jne
push
fdivr
outs
ins
sar
dec
mov
adc
leave
repnz
pop
sub
int3
out
mov
dec
rol
arpl
shl
inc
dec
lods
rcr
jle
sbb
pop
mov
iret
mov
cmp
ror
dec
adc
imul
stos
je
cmp
rol
lahf
call
inc
scas
mov
rcl
in
cmp
xchg
imul
(bad)
mov
pop
in
and
sbb
pop
mov
dec
enter
fimul
int3
cwde
sbb
inc
add
aad
inc
dec
mov
mov
pop
jns
add
inc
cld
cwde
(bad)
mov
test
cmp
test
inc
addr16
jmp
adc
push
mov
or
in
enter
and
adc
sbb
xchg
out
dec
int3
cmp
cld
inc
jns
xchg
pop
mov
push
std
enter
xor
cmp
jmp
or
shr
jmp
out
mov
fcmove
or
xchg
ins
stc
sub
pop
inc
lds
xor
mov
xor
add
lods
inc
imul
mov
inc
mov
(bad)
aam
jno
loopne
shl
not
dec
in
fwait
jnp
add
cmp
mov
(bad)
mov
inc
jno
jae
cmp
fild
inc
pushf
pusha
fdivrp
popa
inc
jmp
add
and
xchg
mov
fwait
leave
cmp
into
out
and
iret
add
cmp
inc
es
js
mov
cmp
aaa
popf
loope
scas
int
inc
ds
pop
push
mov
(bad)
sub
adc
mov
jg
xor
add
cmp
(bad)
mov
jle
rol
jge
inc
or
int3
inc
mov
outs
shr
sub
dec
jl
sbb
jmp
pushf
in
add
pop
jg
mov
jno
push
rcl
dec
daa
mov
popf
les
and
popf
out
inc
retf
lahf
jae
(bad)
jns
daa
inc
fsubr
das
mov
sahf
or
out
jno
inc
dec
add
add
inc
movs
jb
repz
adc
sub
loopne
ds
mov
inc
sar
push
call
cwde
and
nop
aam
enter
dec
push
or
retf
sub
cmp
loope
lods
add
xchg
inc
in
push
adc
leave
sbb
inc
call
push
xlat
jae
cmp
push
mov
or
cmp
push
test
mov
ds
xor
sahf
mov
sub
js
jge
jns
sub
cmps
inc
jmp
mov
cmp
pop
inc
sysenter
push
cmp
inc
out
jmp
pop
fild
cmp
retf
sbb
xor
outs
ficom
xchg
jo
cmovo
sbb
mov
or
mov
icebp
loope
loop
inc
jns
stos
scas
(bad)
sbb
dec
cmp
cmp
jle
fmul
push
jp
inc
pop
test
stc
mov
sar
ja
stc
or
repnz
push
mov
mov
shl
(bad)
mov
pop
sahf
ret
or
xchg
les
jle
lods
loopne
mov
aam
or
dec
xchg
sub
inc
xchg
mov
stc
inc
fcomip
in
cmp
or
ins
mov
and
jle
cmp
xchg
daa
call
aam
and
jns
stc
fadd
xor
dec
imul
ror
cli
inc
les
push
jno
push
adc
(bad)
push
inc
xlat
sub
clc
push
cmp
pop
sub
in
dec
in
sub
fwait
das
out
stc
pop
inc
mov
sbb
loop
adc
mov
ss
or
pop
call
cmp
xor
sti
fdiv
add
sbb
out
in
enter
sub
push
mov
inc
pop
inc
mov
in
mov
cmp
fstp
inc
mov
mov
adc
inc
push
stos
inc
mov
and
scas
dec
leave
stos
dec
test
sar
adc
inc
or
jp
fprem
maskmovq
div
outs
dec
call
mov
or
loop
sub
mov
into
mov
push
pop
mov
and
cmp
adc
ror
pop
cmp
push
cmp
pop
lahf
xor
inc
sbb
es
neg
(bad)
movs
mov
inc
add
out
xor
add
add
or
iret
sub
jle
sbb
inc
sub
add
retf
mov
aad
xchg
movs
jg
inc
dec
inc
aam
leave
int
adc
sub
cmc
test
cmp
jbe
leave
cmp
adc
fnsave
mov
shr
and
sbb
stos
xor
inc
scas
pmullw
lods
sub
lahf
mov
inc
add
(bad)
xor
cmp
inc
retf
xchg
mov
popf
outs
sbb
fistp
out
std
and
xor
repz
mov
fld
lea
test
push
aas
inc
mov
test
cmp
retf
stos
push
sub
or
fdiv
cmp
xlat
in
(bad)
jge
and
pop
ss
sti
inc
mov
jmp
ret
sub
in
lahf
inc
cmp
jmp
loop
mov
inc
adc
(bad)
mov
mov
pop
cmp
jnp
cmp
inc
xchg
mov
dec
xor
ror
pop
push
fild
xchg
icebp
or
lea
inc
inc
sub
fisub
inc
jge
mov
sub
(bad)
push
mov
jp
bound
sbb
inc
push
pop
inc
inc
xchg
enter
dec
sub
and
int3
int
out
push
ficom
loopne
xor
loopne
sbb
sbb
aaa
mov
pop
mov
repnz
rcl
pop
inc
jecxz
out
mov
fnstcw
push
inc
mov
bound
mov
fbstp
lods
int3
sar
sbb
or
jg
mov
push
(bad)
or
push
inc
cmp
sbb
xor
test
ins
inc
mov
test
push
nop
or
sar
adc
cmp
add
stc
mov
xor
cmp
mov
inc
and
xchg
clc
dec
cdq
push
inc
add
xor
outs
scas
inc
sbb
mov
int3
loopne
ds
(bad)
(bad)
test
addr16
xlat
jmp
rol
and
cmp
dec
mov
hlt
ret
fild
push
movs
test
sub
push
enter
push
cld
leave
data16
sbb
jnp
inc
mov
shr
fadd
jns
add
inc
hlt
xor
(bad)
jge
das
loope
fidivr
sub
mov
xor
idiv
mov
frstor
dec
adc
mov
fild
mov
loop
js
scas
and
jecxz
xor
leave
add
cmp
sbb
mov
int3
sti
mov
pop
mov
lea
inc
dec
xlat
inc
in
std
lods
mov
inc
mov
(bad)
xor
add
movs
dec
rol
push
inc
bound
int3
test
sahf
xchg
(bad)
lods
mov
jmp
ins
push
mov
xchg
inc
sub
mov
je
mov
neg
gs
xor
inc
stos
ins
(bad)
cmp
(bad)
fistp
loopne
pusha
mov
jmp
sahf
sbb
add
inc
lock
inc
movs
jo
inc
ins
pop
arpl
and
sbb
call
dec
or
inc
xor
push
inc
inc
stos
outs
cmp
fcomp
cld
or
pushf
xor
retf
pop
jmp
sub
fidivr
push
sbb
push
xchg
sbb
ret
scas
mov
leave
aas
inc
into
(bad)
fiadd
inc
and
call
mov
jecxz
mov
push
cmp
sub
inc
push
stc
sbb
js
or
mov
cmp
jg
mov
lds
jmp
loopne
fdiv
nop
sub
sub
fisubr
fild
dec
gs
or
push
inc
pusha
inc
jo
stos
retf
jmp
cmp
retf
pop
pop
enter
mov
cdq
paddb
inc
add
and
in
add
jnp
inc
lock
cmp
lahf
push
push
test
cmp
or
sub
ffree
loopne
mov
sbb
cmp
jle
jo
mov
mov
fs
ds
cdq
push
jno
lea
add
daa
pushf
je
pop
or
hlt
rcl
push
mov
inc
pop
jecxz
push
mov
mov
jb
inc
cmp
adc
xchg
loope
mov
inc
mov
bound
sub
stos
cmp
sub
mov
sbb
inc
out
ror
aaa
fstp
xchg
nop
or
dec
sti
test
push
cmp
fld
adc
sub
inc
pop
pop
cmp
dec
dec
xor
cmp
push
xchg
fsub
jo
cmp
or
push
jmp
sbb
movs
mov
inc
mov
inc
mov
sbb
je
shr
xor
sub
inc
add
push
mov
xchg
jb
dec
enter
leave
and
xlat
sub
aad
in
fcomp
jno
loope
ss
dec
jl
stc
cmp
mov
cmp
les
and
inc
pop
push
pop
inc
or
push
dec
rol
jmp
cmp
xchg
xor
sahf
mov
neg
jle
popa
inc
jbe
icebp
movs
add
dec
inc
add
xor
fwait
scas
cld
cmps
inc
xchg
int
imul
add
loopne
sub
sbb
cmc
jne
loope
cmp
(bad)
mov
lods
test
push
sub
pusha
sbb
mov
mov
xchg
into
mov
xlat
pop
out
inc
push
push
fistp
sbb
fcomp
popa
dec
and
fnsetpm(287
or
scas
sbb
jmp
(bad)
mov
rcr
pop
inc
xor
and
jae
iret
or
into
xor
xor
jb
cli
ret
test
sbb
aad
iret
outs
add
mov
inc
xor
inc
ret
cdq
inc
push
mov
cwde
sbb
mov
fiadd
push
cmp
push
inc
jmp
mov
nop
sub
stos
adc
adc
mov
arpl
inc
loopne
in
add
aaa
mov
cld
or
retf
adc
mov
inc
int3
popa
rol
push
jnp
fs
jmp
mov
outs
inc
cmp
mov
inc
neg
cdq
xor
ins
pop
inc
xor
ffreep
lds
or
cmp
push
mov
xor
ret
pop
inc
daa
jmp
fldenv
push
inc
stos
in
xchg
mov
inc
push
out
scas
push
(bad)
mov
sub
jle
sbb
cmp
movs
inc
and
loopne
ins
ja
dec
enter
and
data16
inc
cs
push
add
jmp
call
stos
and
out
inc
dec
(bad)
or
ss
sub
mov
bound
sub
inc
mov
sub
fadd
sub
loop
rcl
pushf
push
int
lahf
cmp
inc
in
push
sahf
mov
dec
repz
inc
inc
cmp
sbb
mov
sub
int
leave
shr
inc
clc
mov
(bad)
mov
inc
jb
mov
mov
ins
dec
outs
push
cmp
xchg
into
ret
test
xor
vpcmov
ds
adc
loopne
repz
retf
and
fucomi
or
xor
icebp
jg
clc
cld
fmul
test
ins
in
inc
js
outs
mov
addr16
pop
jmp
xor
push
inc
fld
or
cmps
fdiv
push
mov
lock
loop
mov
push
push
inc
xor
mov
popa
lahf
leave
pop
fdivr
(bad)
rcl
lock
es
jae
fiadd
sub
cmp
and
cs
out
or
sub
in
pop
lods
aaa
rcr
(bad)
adc
and
cmp
cmp
jae
dec
fist
inc
xor
imul
inc
mov
shr
lahf
jmp
add
xchg
and
mov
int3
outs
inc
mov
sub
into
cmc
inc
loope
add
inc
sahf
ror
rcr
imul
test
in
in
dec
popa
fs
push
stos
inc
sub
inc
outs
fwait
push
sbb
inc
es
ret
sbb
inc
popa
loopne
sub
or
sub
das
clc
jae
inc
xchg
inc
adc
fwait
cs
or
mov
push
mov
inc
inc
popf
sar
sub
mov
mov
jg
jmp
jge
cmovo
outs
nop
rcl
addr16
imul
or
ror
inc
popa
ins
inc
inc
(bad)
mov
iret
sti
xchg
or
lods
inc
xor
xor
push
inc
jmp
push
xor
sub
idiv
pop
lahf
inc
mov
push
(bad)
sbb
adc
cmp
xchg
nop
inc
jae
sub
movs
or
cld
inc
push
cmps
xor
cmc
iret
fidivr
ds
add
mov
mov
xor
mov
adc
push
outs
mul
mov
xlat
bound
jecxz
inc
jbe
add
mov
or
inc
(bad)
pop
cmp
movs
fdivr
dec
cmp
leave
mov
test
daa
push
popf
sbb
ds
clc
std
mov
pop
adc
inc
mov
in
cmp
xchg
shl
inc
les
sub
dec
jmp
lods
mov
jo
xor
jg
sti
pop
das
mov
xor
rol
jmp
push
mov
jns
fsub
lock
pop
xor
in
push
data16
inc
xchg
inc
shl
push
push
and
or
xor
std
out
out
dec
cmp
jl
aaa
sbb
aas
fld
pop
out
push
cli
ja
inc
test
adc
sub
das
pop
xor
fiadd
pop
adc
popf
enter
xchg
inc
movs
and
jne
inc
push
cwde
inc
push
ja
sub
pushf
or
inc
jmp
retf
xor
out
jno
mov
sub
cmp
out
dec
push
xchg
or
inc
push
mov
repz
(bad)
loopne
cmp
fwait
jmp
mov
inc
xor
push
sti
jb
inc
push
and
pop
cmp
repnz
lods
pusha
adc
or
inc
out
pop
sbb
cmp
out
pop
pop
mov
sub
xchg
loope
push
inc
(bad)
push
xor
cmp
lods
add
jnp
shl
cmp
cdq
add
hlt
sub
fst
and
cmp
xchg
fist
pop
xchg
stc
retf
mov
imul
cmp
or
cmp
into
mov
xchg
ret
outs
xchg
inc
cmps
and
ja
pop
push
xor
add
jb
repnz
popf
dec
fwait
inc
neg
dec
sahf
movs
dec
dec
int3
fild
cmp
dec
mov
lea
inc
repz
add
test
and
sti
inc
fnstsw
pop
data16
xor
or
cmp
inc
out
mov
(bad)
and
adc
push
js
aam
push
inc
sar
inc
(bad)
xor
retf
inc
ret
jns
into
add
mov
pop
pop
inc
outs
cdq
(bad)
popa
sbb
(bad)
sub
mov
test
mov
sbb
jl
jns
cmp
js
xor
int
test
ds
in
fistp
xor
mov
dec
mov
mov
inc
ret
ss
mov
mov
inc
jb
retf
popa
imul
mov
inc
adc
shl
mov
test
mov
pop
dec
rol
sbb
jge
or
addr16
rcl
adc
or
(bad)
movs
inc
ffreep
in
push
fs
and
mov
push
(bad)
clc
cmp
fs
sub
gs
inc
add
imul
mov
or
add
icebp
ror
pop
and
dec
cmp
add
push
mov
out
cmp
gs
inc
(bad)
mov
outs
cmps
inc
jp
cmc
test
aad
and
mov
fidiv
cmc
nop
mov
dec
inc
in
push
ds
movs
sub
mov
inc
fwait
mov
xor
ret
js
daa
mov
dec
xor
int3
int
sbb
or
or
enter
jnp
neg
test
(bad)
stc
(bad)
rcr
sti
movs
js
push
and
shl
int
jae
xlat
adc
inc
mov
pop
xor
pop
mov
inc
lock
popf
jmp
push
mov
xchg
test
adc
daa
out
or
fs
into
arpl
mov
mov
adc
je
xchg
sbb
loope
sbb
or
and
push
rcr
cmp
adc
mov
cmps
std
(bad)
clc
cmp
and
and
sbb
or
xor
in
sub
xor
adc
cmp
sub
mov
push
int
mov
div
retf
fsubr
xor
test
popa
cmps
mov
sbb
es
shr
stos
rcl
call
in
adc
xor
mov
ss
cmp
cmp
(bad)
pop
or
mov
ror
jmp
inc
clc
mov
cld
addr16
retf
cs
div
(bad)
sub
call
inc
and
aas
aas
mov
add
repz
add
push
mov
jne
scas
inc
adc
sub
les
lods
repnz
adc
pop
adc
push
dec
int
pop
fld
add
pop
dec
inc
xor
adc
jns
xchg
lock
enter
or
push
jp
xchg
mov
cmp
rol
jns
mov
jnp
sbb
ror
stos
cmp
and
fld
fild
jp
sbb
stos
fs
cmp
push
outs
inc
cmps
cmps
mov
into
pusha
xchg
sub
pop
(bad)
fdivr
mov
mov
not
cmp
xchg
inc
iret
aas
mov
mov
dec
mov
fwait
dec
ror
dec
cmp
movs
retf
cmp
xlat
cld
adc
dec
(bad)
cs
jnp
jns
mov
jo
cmp
mov
or
mov
je
xor
push
fs
mov
sub
pusha
dec
mov
inc
repz
mov
jnp
xor
cli
inc
adc
pop
pop
dec
inc
inc
inc
movs
cwde
int
sub
inc
pop
xor
mov
inc
cmp
mov
fild
mov
ins
pop
aaa
(bad)
(bad)
inc
dec
inc
push
inc
sub
shr
sahf
xor
xchg
sub
ret
add
inc
jg
ror
cmp
in
mov
xchg
mov
mov
aam
out
std
cmp
pusha
sbb
adc
sub
cmp
push
cmps
mov
jle
and
jmp
out
pop
test
dec
pop
push
ficom
and
inc
and
bound
out
xchg
inc
dec
pop
test
es
(bad)
mov
lods
xchg
icebp
in
mov
cmps
jmp
lea
(bad)
jge
mov
and
or
xchg
cmp
(bad)
cmp
jp
retf
cli
push
inc
dec
out
gs
addr16
inc
mov
fst
cmp
test
xor
cmp
fs
dec
(bad)
inc
popf
adc
in
inc
cmp
or
inc
sbb
xchg
xchg
dec
xor
push
inc
not
add
out
pop
cmp
cmp
out
fstp
rol
pop
outs
push
inc
popf
mov
in
jae
cdq
inc
cld
pop
jg
nop
rcl
mov
popf
cmp
iret
movs
cmp
inc
mov
cmp
mov
and
adc
dec
mov
call
inc
jmp
inc
mov
outs
outs
add
sub
xchg
int3
sub
fadd
pop
js
daa
test
inc
mov
lods
inc
jmp
popa
cmc
pushf
inc
jp
js
push
fisttp
sbb
call
or
and
mov
ss
(bad)
sti
movs
enter
cli
inc
(bad)
push
adc
mov
push
push
cmp
inc
loopne
mov
mov
add
jge
ds
mov
out
mov
les
push
mov
sbb
mov
dec
stc
inc
inc
aas
cmp
(bad)
std
dec
sub
and
sbb
dec
jp
int
into
add
sub
neg
test
cmp
dec
shr
and
(bad)
cdq
xor
or
inc
push
xchg
push
pop
out
cmp
mov
inc
lods
fwait
inc
or
mov
movs
sub
pop
fbstp
dec
mov
pop
inc
xchg
mov
inc
fnop
nop
and
push
mov
out
xor
mov
inc
or
mov
jecxz
mov
int3
xchg
inc
and
or
stos
js
cmc
std
clc
inc
test
inc
aaa
xchg
mov
push
and
pop
inc
pop
arpl
inc
test
mul
cmp
xor
push
ror
cs
fstp
out
inc
inc
dec
push
xor
js
inc
push
addr16
cmp
cmp
iret
inc
scas
sub
cmp
inc
xor
ret
xor
lahf
fstp
arpl
std
bound
(bad)
out
inc
mov
(bad)
pop
(bad)
inc
cwde
data16
aaa
xor
sbb
jno
xchg
ror
dec
inc
or
fcom
mov
cmp
xor
or
pop
inc
xchg
bound
inc
or
ins
push
xchg
push
inc
scas
pop
or
mov
ins
sahf
inc
lock
jns
outs
enter
xor
push
cmp
add
inc
and
pop
stos
(bad)
dec
or
mov
push
out
dec
cmp
mov
jle
inc
push
mov
mov
cs
pusha
inc
add
xchg
mov
in
rcl
sub
xchg
jb
cmps
std
xchg
pop
xchg
dec
push
(bad)
fild
dec
mov
rol
sets
jmp
adc
out
inc
fs
cmp
mov
push
in
pusha
(bad)
shl
pop
or
cmp
inc
sub
enter
jmp
inc
cdq
cs
aaa
inc
and
xlat
data16
xor
mov
fadd
inc
mov
xchg
ins
(bad)
aas
mov
inc
(bad)
stos
out
dec
dec
inc
and
sbb
and
cmc
cmp
xchg
gs
cmp
sahf
push
cmp
fld
adc
std
in
dec
sub
cwde
sub
mov
mov
pop
js
aaa
test
dec
push
pushf
inc
cdq
inc
into
out
retf
mov
jp
daa
test
out
inc
jg
or
ins
cmp
pop
or
mov
int3
clc
(bad)
push
lds
outs
popf
ss
pop
cwde
int
loope
fstp
xchg
cmp
leave
add
inc
push
rcr
ficom
cmp
aas
jp
aaa
mov
fst
lods
inc
out
dec
jecxz
dec
cmp
jb
push
aas
or
mov
jg
mov
inc
jmp
sbb
stos
(bad)
inc
(bad)
fst
inc
out
cs
push
fmul
add
jns
cmp
ins
mov
or
mov
inc
popf
jmp
test
sub
inc
pop
cs
or
adc
pop
sti
or
sub
inc
xchg
cmp
aam
mov
mov
mov
es
retf
or
xchg
push
movs
mov
mov
mov
jno
sub
call
scas
cld
xor
ja
inc
inc
push
sub
inc
inc
xor
dec
inc
mov
xchg
xor
mov
aas
xor
jno
cmp
retf
fwait
neg
outs
pop
jecxz
and
sbb
cs
das
adc
inc
inc
push
mov
sti
pop
pop
adc
fld
inc
repnz
sbb
mov
inc
es
inc
scas
jns
pop
jne
or
in
xor
je
(bad)
cmps
lds
rcr
inc
and
jno
stc
daa
jg
iret
(bad)
je
xor
sbb
sub
repz
cmp
jo
cli
jp
xchg
call
rcl
cmp
loop
mov
mov
inc
imul
push
pop
and
pop
lock
ret
lods
or
cmp
icebp
push
mov
push
jp
and
ins
cli
push
int
cmp
jne
mov
inc
sub
cmp
jne
cmp
cmp
and
mov
xchg
pop
call
lods
nop
lea
ins
movs
pop
or
jle
add
and
mov
inc
add
inc
xor
push
ds
xor
outs
inc
pop
loope
out
scas
lea
cld
or
retf
and
jnp
out
mov
xchg
inc
loop
inc
xlat
pop
jns
sub
es
push
jle
rol
jno
call
cmc
ds
mov
je
shr
addr16
pop
xchg
ficom
xchg
fxch
cmc
loop
mov
inc
adc
mov
sub
cmp
popa
pop
lock
call
fdivr
jb
sti
and
rol
inc
shl
inc
inc
or
ret
scas
push
jae
xor
cli
mov
inc
pop
add
data16
cmp
xor
dec
fdiv
dec
add
xor
in
and
ret
fild
dec
test
repz
inc
out
repz
jne
or
sahf
inc
add
mov
mov
pop
xchg
into
mov
stc
hlt
test
addr16
shl
xbegin
inc
mov
dec
outs
inc
std
das
mov
in
(bad)
call
imul
inc
jno
and
inc
pop
aad
inc
xlat
pop
idiv
dec
inc
mov
cmps
mov
cwde
in
inc
push
movs
jbe
jecxz
push
ror
and
out
sub
inc
sti
or
dec
lds
fisub
repz
loopne
pop
cmps
cmp
aam
and
inc
adc
lahf
or
addr16
inc
adc
mov
rcr
movs
xchg
cmp
retf
daa
dec
and
loop
push
(bad)
sbb
sub
pop
sbb
icebp
sub
inc
inc
xor
js
and
jae
fwait
mov
stos
xchg
sbb
shl
popa
inc
push
cmp
mov
xlat
inc
push
fimul
pop
rol
test
adc
aaa
inc
sbb
dec
loope
in
jmp
inc
mov
jns
fstp
les
fs
mov
ret
mov
push
mov
inc
xor
adc
mov
in
inc
cdq
cli
fisub
xchg
not
fwait
cs
fs
jns
cli
imul
inc
mov
push
and
inc
(bad)
rcl
or
jo
cmp
pop
cdq
pop
inc
push
data16
mov
loope
dec
cld
mov
cwde
mov
cs
xchg
mov
fld
cmp
arpl
(bad)
test
pop
sbb
jmp
(bad)
fisttp
push
sub
bound
(bad)
enter
xchg
mov
xor
daa
lea
dec
rcl
pop
dec
cmp
std
icebp
nop
mov
nop
popa
inc
ins
cld
in
iret
adc
inc
and
push
pop
int3
xlat
inc
fldcw
aad
adc
inc
sbb
mov
dec
mov
mov
pop
push
cmp
test
lahf
das
arpl
out
repnz
adc
adc
mov
inc
inc
jns
inc
adc
pop
adc
inc
cmp
sbb
ficomp
imul
xchg
dec
in
cli
add
fcom
int
rol
ja
xor
add
add
mov
into
(bad)
loope
jo
in
push
inc
push
jns
bound
(bad)
(bad)
dec
inc
test
xor
not
inc
sbb
loope
mov
mov
cmp
pop
cmp
inc
or
xor
shl
cmp
adc
dec
aas
aad
jmp
int3
loopne
xchg
push
jns
scas
inc
inc
(bad)
xor
sub
dec
jmp
imul
adc
mov
shr
scas
xor
(bad)
fadd
xor
dec
mov
xor
inc
xchg
retf
mov
lds
loopne
mov
rcl
lea
movs
sbb
push
add
cmp
jmp
jp
pop
jecxz
frstor
aaa
push
xchg
aad
into
mov
adc
adc
or
(bad)
or
in
jo
in
mov
mov
(bad)
cmp
sub
idiv
fidiv
sub
in
xchg
inc
cmp
push
outs
pop
lock
(bad)
jmp
pop
enter
xchg
inc
xor
mov
push
xchg
js
outs
jp
cld
sti
cmp
and
xor
icebp
inc
or
adc
and
enter
mov
cmps
inc
iret
arpl
call
cmp
jmp
das
or
inc
and
ins
rcl
xor
or
imul
inc
out
inc
push
pop
push
push
sub
int
jg
xchg
inc
cmp
imul
sub
sub
lock
inc
in
icebp
stos
sbb
scas
inc
js
mov
rol
xor
sub
cli
test
xchg
and
mov
jno
bound
retf
mov
cld
and
cmp
add
and
stc
sub
add
sbb
enter
sub
mov
dec
xchg
lods
pop
and
ja
dec
inc
add
fs
mov
dec
mov
popf
xor
dec
cmp
sub
cmp
sub
or
imul
cmp
or
fld
mov
cdq
arpl
leave
jb
push
cmc
inc
pushf
mov
test
inc
hlt
mov
rcl
sbb
jg
sbb
neg
push
mov
sub
idiv
inc
inc
lods
sub
jb
out
shr
dec
xchg
mov
outs
push
mov
push
jno
inc
aad
adc
add
inc
push
imul
inc
push
jmp
xchg
lods
mov
jmp
call
xor
int3
loope
(bad)
or
sbb
lock
aas
push
mov
mov
push
lock
and
shl
retf
cdq
ins
cmp
call
call
daa
int
sbb
xor
adc
push
push
bsf
inc
cmps
stc
ss
inc
rol
sub
test
push
pop
dec
inc
cmp
fnstenv
shl
mov
clc
mov
leave
inc
xchg
push
les
fwait
aas
jge
xchg
aam
je
cmp
leave
arpl
inc
enterw
div
pop
pop
lds
pop
or
inc
dec
add
xor
push
jne
sub
fcom
or
mov
and
in
push
sbb
cmp
mov
jnp
lods
sub
inc
jae
and
das
sti
sbb
mov
mov
stos
jns
inc
sub
mov
xlat
inc
jae
xor
add
inc
pushf
imul
addr16
add
fst
sbb
pop
push
inc
push
and
test
jmp
aas
clc
enter
retf
inc
cmp
push
sub
mov
cmp
aaa
cmp
stc
add
push
push
in
dec
mov
inc
test
push
movs
inc
xchg
jp
out
loopne
adc
inc
scas
inc
and
dec
jne
out
fisubr
cmp
cmp
stos
inc
ret
or
retf
push
dec
sbb
jne
in
data16
inc
inc
sub
popf
fidivr
lds
inc
int3
cmp
xlat
cmc
(bad)
out
inc
pop
or
ja
in
mov
sub
mov
mov
cmova
hlt
mov
cmp
outs
sar
nop
jns
out
leave
mov
(bad)
retf
push
jnp
mov
mov
fstp
movs
and
jbe
cmp
add
jno
dec
jnp
xchg
adc
repnz
mov
sbb
jle
dec
sbb
scas
lea
mov
fstp
jne
sub
jecxz
jmp
popf
pop
add
inc
sub
inc
cmp
andps
inc
xor
jb
test
retf
and
push
mov
jmp
cmp
push
call
or
nop
inc
lock
ret
jmp
xor
nop
in
jg
jns
cmp
push
xor
mov
fiadd
jnp
cmp
mov
xor
mov
xor
test
mov
dec
xor
push
(bad)
into
push
mov
pop
inc
cmps
mov
out
dec
jecxz
fdivr
add
xor
pop
jmp
xor
int3
fdivr
xchg
mov
(bad)
jnp
fxch
aad
sub
cmp
std
mov
cs
xchg
retf
mov
sbb
xchg
push
test
les
inc
mov
mov
fchs
ds
stos
(bad)
aas
jl
inc
dec
fist
cmp
or
mov
iret
pop
(bad)
push
or
mov
inc
add
pop
lods
xor
push
and
rol
jmp
xor
daa
out
push
adc
loopne
call
ds
or
mov
jp
pop
push
retf
les
sub
(bad)
in
scas
dec
mov
ds
and
inc
cld
ins
sbb
inc
cmp
fisttp
out
fnstcw
pop
push
shl
rol
pop
das
mov
aaa
and
clc
mov
inc
adc
enter
mov
pop
jle
mov
cmp
push
retf
mov
pusha
cmp
ficom
push
mov
int
mov
xor
inc
mov
xor
(bad)
fs
jae
xor
fiadd
or
mov
pop
push
inc
retf
pop
cmc
xor
add
cdq
mov
stos
push
iret
out
les
adc
jmp
hlt
inc
push
fwait
cmc
dec
add
mov
imul
inc
fs
bound
xor
ror
lds
push
fcomp
ret
jp
mov
stc
xor
repnz
pop
add
mov
pop
mov
xchg
or
mov
sub
sub
dec
mov
inc
mov
sbb
jecxz
inc
cmp
and
(bad)
xor
inc
loope
inc
mov
mov
stos
push
outs
call
std
jnp
jg
and
inc
cld
mov
stc
fimul
inc
inc
push
in
mov
call
jne
cmc
cmp
jl
jb
inc
aad
adc
mov
xchg
push
iretw
outs
mov
sahf
or
(bad)
mov
inc
dec
cmp
jns
xchg
test
inc
pop
fwait
adc
test
inc
fnstcw
mov
sbb
mov
lods
inc
cdq
inc
rcl
cmp
(bad)
jne
sti
arpl
(bad)
enter
out
les
push
inc
fdiv
pop
add
loopne
inc
add
jge
stos
fst
cmp
fnstcw
pop
lea
jp
sar
pop
mov
std
inc
xor
jmp
leave
cmp
inc
scas
inc
xor
pop
mov
inc
faddp
lahf
iret
mov
(bad)
inc
jecxz
in
and
dec
push
xchg
jb
cmp
xchg
js
imul
scas
cmp
call
idiv
cmp
inc
mov
aas
repnz
inc
adc
fild
push
sti
push
or
ds
(bad)
loopne
inc
(bad)
cmp
jecxz
adc
inc
mov
je
push
jge
jl
les
jg
enter
loope
or
mov
rcl
int3
call
sbb
inc
xchg
(bad)
int
push
ja
xor
dec
adc
mov
xchg
test
loop
inc
cmps
push
popa
pop
retf
sbb
inc
cwde
mov
xor
inc
fsub
mov
mov
pop
mov
aad
inc
inc
ret
scas
pop
shl
cmp
sbb
add
repz
cmp
enter
pushf
mov
mov
mov
add
push
cmp
dec
adc
dec
cld
sub
mov
push
ss
popa
inc
(bad)
xor
or
cmp
or
push
stos
jo
mov
loopne
push
inc
sbb
stc
jb
inc
jmp
sbb
fmul
cs
inc
adc
out
fisubr
in
aad
jmp
inc
dec
inc
pop
(bad)
fwait
mov
std
add
inc
jnp
sub
push
cld
lods
in
cmp
fiadd
push
jl
and
inc
sbb
pop
scas
mov
fld
(bad)
xor
int3
xor
sbb
mov
dec
and
test
inc
(bad)
mov
inc
xor
add
mov
call
inc
cmp
inc
mov
or
sbb
aam
add
sbb
inc
sbb
pop
jmp
cmp
cmp
cmps
dec
test
fsubp
nop
xor
and
adc
inc
or
xor
stc
mov
mov
xor
pop
add
jns
inc
das
inc
cwde
addr16
shl
push
(bad)
inc
les
sar
outs
jno
inc
pop
adc
jg
adc
pop
adc
pop
aaa
push
out
call
xchg
cmp
test
xchg
xor
dec
add
mov
inc
call
std
inc
inc
mov
outs
adc
data16
retf
add
in
inc
cmp
cwde
in
fcomp
pop
cmp
adc
hlt
lea
test
out
(bad)
inc
call
outs
cmp
movs
jmp
pmulhuw
push
out
cmps
clc
retf
bound
pop
mov
iret
mov
cli
xchg
xor
jne
sti
inc
mov
mov
pop
enter
cmp
mov
js
das
xchg
dec
cmp
xor
xchg
out
ret
cmp
adc
loop
aam
out
add
inc
es
jecxz
inc
pop
sub
cmp
push
adc
nop
sbb
icebp
cmp
test
retf
mov
cdq
repz
and
mov
js
or
and
push
inc
push
push
mov
push
and
push
dec
push
popf
push
jne
push
push
adc
push
mov
pop
pop
sbb
xor
movs
or
test
imul
add
pop
dec
pop
in
and
test
inc
js
mov
inc
pusha
call
fbstp
jle
xchg
shr
and
push
call
enter
xor
(bad)
ds
out
xlat
jl
cmp
in
fidiv
push
inc
or
out
cli
out
div
clc
loop
cmp
push
retf
lods
push
inc
mov
out
pop
xchg
js
xlat
pusha
dec
cmp
test
xor
cmp
xor
inc
push
scas
cmc
idiv
xor
inc
hlt
(bad)
jno
cmps
aaa
sbb
dec
fld
movs
cmp
out
or
rol
push
push
fild
lods
xchg
mov
fld
cli
retf
paddq
jnp
inc
std
jmp
inc
pop
or
sar
mov
out
lea
jmp
mov
mov
not
and
in
inc
outs
imul
sub
xchg
cmp
jb
shl
mov
les
inc
pop
inc
cwde
jp
stos
call
jg
push
mov
(bad)
in
js
pop
outs
push
adc
ss
mov
inc
push
xchg
mov
in
cmp
add
loope
pop
mov
sbb
retf
fdivr
and
shl
xor
mov
inc
int3
cmp
leave
gs
xchg
lods
(bad)
rcr
dec
popa
dec
mov
enter
imul
cwde
xchg
rcl
inc
outs
pop
sbb
cmc
xchg
scas
xchg
inc
push
cmp
push
fiadd
xchg
outs
mov
cmc
les
push
sub
jmp
sti
jnp
jge
pusha
pop
jne
ins
fcmovnu
cmp
xchg
dec
inc
mov
push
fcmove
(bad)
sbb
jge
out
push
and
shl
lds
sub
cmp
sbb
mov
jmp
and
js
outs
xchg
idiv
adc
mov
(bad)
jmp
cld
sahf
inc
sbb
and
mov
mov
call
aaa
outs
(bad)
cli
test
push
sbb
inc
sbb
aaa
or
sbb
les
std
outs
call
jnp
mov
mov
leave
dec
fdivr
sub
pop
mov
(bad)
(bad)
repz
mov
clc
pop
(bad)
xor
inc
cs
mov
sar
jl
jp
jbe
jmp
fdiv
test
outs
sahf
jno
and
sar
mov
dec
jns
addr16
cmp
adc
pop
jno
sub
pop
ret
dec
cmps
dec
cmp
mov
test
es
jecxz
std
cmp
sub
add
push
into
mov
adc
push
pop
fist
jns
fnstsw
pop
fdiv
add
and
jns
int3
xchg
pop
cmps
fdivrp
in
add
mov
pusha
cmp
aam
pusha
fs
lods
push
cmp
push
mov
sbb
inc
add
sar
xchg
cmps
add
cmp
je
jb
das
ret
les
cld
sub
test
sbb
jge
cmp
add
jno
outs
mov
sbb
or
jmp
jge
adc
scas
push
icebp
jno
cmp
push
rcr
out
cmp
jle
xchg
cmps
jl
or
mov
sub
xor
adc
mov
cmps
js
cmp
and
out
push
and
dec
int3
xor
inc
sbb
jns
aas
jo
jl
cmp
cwde
jg
and
pusha
jns
add
adc
adc
and
and
popf
add
test
leave
call
mov
jo
shr
rcr
push
add
cld
push
fs
xlat
pop
cmc
mov
inc
scas
(bad)
shl
pop
pop
xchg
mov
push
jno
int3
mov
sub
jmp
mov
fst
cmp
retf
mov
xchg
pop
stc
mov
pusha
not
adc
xchg
fistp
cdq
adc
cmp
mov
fsub
lock
mov
cmp
mov
xor
shl
sbb
jns
add
mov
add
or
or
(bad)
cmp
jge
clc
add
and
sub
mov
cmp
ja
mov
imul
cmp
mov
ret
lds
jnp
push
xor
mov
or
or
mov
loope
bound
pop
je
xchg
mov
mov
stos
scas
inc
popa
push
in
cld
push
add
cmp
pop
jno
dec
mov
rol
mov
lods
mov
cmp
cdq
in
cmp
loopne
mov
jp
cmp
cmp
neg
das
jge
cmp
jno
mov
jle
lods
mov
mov
jns
mov
cmp
jno
jae
push
jns
pop
fidivr
fs
jle
cmp
icebp
mov
pop
pop
xchg
aam
hlt
cmp
or
sbb
fdivrp
xchg
lods
or
adc
add
mov
sbb
add
cmp
clc
sub
mov
ds
stc
or
jno
sbb
clc
or
aaa
jl
xchg
jnp
in
js
sub
and
nop
aam
out
jge
jmp
ret
shl
fadd
aad
std
loopne
sub
scas
push
mov
cmps
pop
mov
mov
pop
fcom
daa
aas
movs
xor
or
data16
push
or
push
loopne
sub
(bad)
mov
inc
jmp
cmp
dec
test
pop
(bad)
sub
jbe
xor
mov
cmp
sub
mov
loop
icebp
imul
jns
pop
xor
adc
rcl
test
je
push
in
dec
mov
mov
cmps
jae
mov
jecxz
and
add
fstp
mov
test
jecxz
xor
je
out
popa
jns
out
jno
sti
int3
js
mov
xor
(bad)
popa
cld
cmp
inc
test
dec
pop
stc
jno
mov
sub
jno
hlt
jg
les
stos
mov
mov
push
push
pop
lods
mov
push
inc
xor
jmp
(bad)
lods
dec
cmps
pop
fadd
cmp
mov
enter
imul
sahf
pop
dec
push
mov
push
fs
pusha
arpl
mov
add
ret
and
ret
sbb
sbb
cmp
leave
dec
dec
(bad)
fdivr
ins
dec
movs
lock
xor
push
nop
inc
xor
leave
sbb
stc
inc
mov
pusha
jb
jl
add
add
jge
pop
pop
out
leave
ss
(bad)
addr16
cmp
es
push
pop
and
pop
and
mov
pop
pusha
and
ds
xlat
dec
dec
sub
add
inc
lock
and
sub
pop
dec
fisttp
mov
shl
jmp
add
adc
jbe
and
icebp
or
adc
(bad)
cmp
xchg
call
icebp
cmps
(bad)
adc
jmp
adc
jl
cmp
ins
xchg
dec
ds
mov
push
sti
test
ss
cwde
cmps
jge
xlat
neg
jno
pop
dec
jbe
and
cld
mov
jo
icebp
mov
fidivr
test
mov
test
retf
sbb
loope
adc
inc
test
sbb
rol
inc
jae
xchg
ret
pop
mov
xchg
jo
or
lds
push
jle
cs
jo
sub
stos
xchg
stos
pop
(bad)
mov
mov
cmp
mov
sahf
sbb
dec
je
dec
rcl
xor
fidivr
fadd
jno
outs
or
push
inc
stos
pusha
push
call
push
je
sub
xlat
lock
add
loope
mov
mov
add
hlt
out
cld
in
cmp
jmp
lock
outs
inc
or
pop
dec
movs
icebp
xor
mov
in
das
add
addr16
in
adc
inc
int
jmp
lds
test
ret
loop
fndisi(8087
inc
mov
inc
aad
inc
fmulp
pop
cmp
sbb
in
in
sbb
cmp
sar
cmc
cmp
fild
cmp
jmp
in
dec
shl
add
lahf
test
enter
sub
ret
sub
xchg
retf
mov
cmp
mov
adc
sbb
int
jl
sar
jno
jl
mov
sub
cmps
les
fld
inc
jmp
cmp
jno
daa
loope
xchg
or
test
pop
in
fild
add
fnstcw
push
xlat
and
shl
div
inc
cmp
pop
mov
mov
dec
aam
inc
mov
xchg
dec
push
test
xor
pop
inc
inc
mov
ins
pop
mov
fisttp
sub
xchg
or
cmp
adc
sub
data16
xor
inc
fucom
jbe
mov
dec
movs
inc
mov
cmp
aas
sub
fimul
movs
add
cmp
daa
rcr
loopne
dec
mov
add
inc
shr
cmp
movs
sub
loop
jb
adc
xor
xchg
inc
mov
jae
push
repz
daa
rcl
inc
sti
scas
fimul
clc
or
iret
sub
ret
pop
cmp
mov
xchg
inc
mov
sbb
sti
inc
push
imul
mov
movs
mov
aaa
add
(bad)
fcom
loope
popf
adc
adc
inc
(bad)
jp
and
cmp
cmp
ja
cmp
popf
xchg
mov
and
stos
sub
mov
cmc
inc
sub
jmp
shl
push
lds
sub
adc
cli
jp
mov
jecxz
fstp
out
ins
dec
stos
aas
loop
inc
and
mov
push
nop
sbb
pop
push
aas
push
cmp
sbb
(bad)
mov
les
add
fs
fwait
jo
pusha
fistp
xchg
xor
mov
dec
ds
aam
repnz
fisubr
ins
into
fmul
mov
ss
mov
mov
sbb
pop
inc
(bad)
mov
xor
rcr
enter
cmp
fmul
ror
dec
xor
xchg
add
aas
cmp
adc
pop
inc
out
sar
stos
jo
inc
xor
and
xor
ds
jl
mov
shl
inc
push
inc
pop
cli
retf
imul
test
inc
mov
xor
out
sub
push
ret
xlat
mov
inc
fwait
int
mov
sbb
inc
aam
ja
jge
enter
add
inc
gs
push
in
ja
ret
sbb
fucom
lods
mov
add
add
jmp
add
nop
xchg
inc
cmp
icebp
mov
popa
push
push
push
sub
push
inc
jmp
repnz
in
jo
mov
in
fiadd
ins
pop
add
push
push
jp
lds
out
inc
adc
inc
cmp
push
cmp
jg
inc
(bad)
je
jno
fstp
pop
(bad)
pop
or
dec
mov
jmp
inc
cmp
dec
pusha
inc
pop
popf
rcl
xlat
aaa
ds
inc
or
xchg
lea
not
movs
sahf
mov
and
cmp
inc
pop
loop
clc
rol
je
jbe
(bad)
movs
and
dec
scas
xchg
cmp
xor
and
inc
jnp
arpl
xchg
mov
out
jae
into
pusha
ss
inc
lds
dec
pop
inc
cmp
jmp
xor
and
jmp
cdq
add
mov
inc
jne
cmp
inc
hlt
sbb
(bad)
imul
mov
out
sbb
inc
mov
(bad)
fucomip
pop
mov
pop
dec
cmp
fadd
mov
dec
je
sahf
scas
loopne
dec
dec
call
cmps
jns
shl
push
or
loopne
retf
jp
fmul
mov
sar
movs
test
or
xchg
xchg
cmp
jg
or
cmc
in
mov
add
add
jnp
aaa
and
popf
add
fs
sub
mov
xor
cli
or
enter
push
(bad)
clc
pop
ja
rol
add
cmp
and
mov
int3
aas
cmp
loope
mov
mov
fsub
inc
aaa
cmps
and
arpl
lods
adc
mov
mov
and
push
xchg
mov
dec
sar
push
jmp
sti
enter
outs
cmp
repnz
js
int3
xor
add
pop
pop
rcr
test
inc
shl
test
inc
dec
jae
or
mov
cli
sbb
ret
cs
inc
rol
jnp
inc
adc
test
jnp
(bad)
or
daa
outs
mov
shl
sub
ss
fisub
mov
inc
mov
and
(bad)
fwait
mov
mov
arpl
ja
repz
xchg
pop
mov
jns
inc
mov
stos
fsub
aas
clc
xlat
dec
nop
jo
pop
dec
imul
mov
inc
xlat
in
and
jl
adc
jno
int
fld
mov
aam
pop
jge
dec
stos
(bad)
and
int
and
cdq
xchg
in
mov
leave
and
stc
aas
jbe
nop
jno
xchg
jp
and
aaa
test
dec
or
push
mov
jl
repnz
and
cmp
std
out
cmp
cmp
mov
mov
jg
cmp
bound
jecxz
es
jecxz
sub
and
jno
mov
fwait
fs
jns
fnstsw
cdq
sbb
or
call
dec
sbb
sub
push
push
adc
(bad)
outs
cs
shl
das
aaa
mov
lea
mov
rcl
popf
xor
add
enter
ret
inc
fs
sbb
fprem
icebp
and
cmp
in
or
jmp
daa
pop
imul
push
aam
call
aas
jns
sbb
xor
sar
test
jnp
jae
mov
or
lock
fnsave
mov
pop
mov
cmps
cld
push
mov
imul
repz
push
lods
adc
popf
inc
jl
test
or
jp
pop
or
xchg
sahf
mov
repnz
dec
pop
fs
or
in
je
push
fs
mov
xor
jno
push
and
cmp
fs
xchg
jp
movs
xor
inc
cwde
sbb
mov
imul
ins
retf
movs
sbb
xchg
cdq
xadd
mov
push
fnsave
xor
mov
scas
jns
arpl
pop
loope
or
lods
into
out
dec
fs
ror
add
and
mov
out
mov
cld
data16
retf
sub
fstp
(bad)
mov
add
jmp
or
xor
inc
push
and
fs
or
sub
add
adc
or
push
int
(bad)
push
mov
cmp
movs
push
mov
mov
arpl
loopne
mov
cmp
fidiv
popa
loopne
mov
stos
push
or
mov
jae
cdq
div
mov
shr
cmps
xchg
stos
ss
mov
jmp
or
jle
add
je
nop
test
je
pop
hlt
ins
addr16
jecxz
es
sub
dec
adc
sub
cmp
xchg
jno
out
mov
or
pop
je
leave
popa
outs
popf
scas
push
sbb
sbb
dec
jno
aaa
retf
in
cmp
js
dec
push
(bad)
dec
rcl
xor
(bad)
aaa
xor
mov
add
retf
jae
xchg
popf
mov
xchg
clc
ds
mov
push
call
add
xchg
out
arpl
enter
inc
inc
mov
fcom
sub
test
lea
inc
mov
push
dec
imul
mov
mov
mov
pop
inc
sub
add
jns
or
(bad)
sbb
mov
cmp
jl
in
dec
cmc
cmp
dec
pusha
call
and
fnstsw
hlt
loop
sti
lods
mov
into
popf
std
inc
dec
mov
fsub
inc
push
sbb
rcr
xlat
aas
retf
mov
pop
mov
call
out
mov
inc
mov
pop
fstp
and
adc
fchs
push
inc
stc
adc
inc
lods
outs
ins
stos
scas
xchg
dec
ins
inc
fdivr
in
mov
inc
xchg
fcom
inc
adc
loopne
dec
mov
push
cmc
xchg
push
aas
out
adc
add
rcl
daa
and
fs
inc
push
jbe
mov
inc
nop
sbb
mov
pop
adc
dec
ss
and
jle
fsub
or
cmp
test
xchg
inc
sub
mov
sub
add
inc
fld
jle
xchg
hlt
jecxz
lahf
mov
xor
jns
sbb
lods
cmp
dec
pop
pusha
sub
mov
fisubr
or
inc
jns
loopne
aas
mov
sbb
sub
popf
cmp
jns
inc
in
jmp
rcl
bound
hlt
lds
sbb
mov
xchg
das
aaa
cmp
aad
mov
sub
jg
lds
push
mov
dec
mov
ins
push
dec
jg
inc
pop
fcom
sar
mov
inc
jno
ins
scas
xor
xor
dec
sbb
out
shl
call
push
stc
in
mov
inc
pop
xchg
(bad)
es
xchg
mov
and
test
cmp
stos
test
pop
inc
cmc
xor
or
add
push
imul
inc
(bad)
ins
xlat
add
dec
(bad)
lock
inc
pop
add
sar
mov
push
mov
cs
ds
(bad)
stos
int3
push
rol
inc
mul
pop
inc
mov
push
enter
mov
or
cmp
xchg
mov
inc
and
xor
jecxz
das
cmp
add
pop
jl
inc
retf
cmp
ja
outs
lods
or
rcl
sahf
xchg
xor
aaa
xor
jns
or
inc
sub
rcl
icebp
mov
or
adc
inc
call
push
ds
cmp
or
adc
(bad)
mov
push
jle
adc
add
inc
mov
xor
jno
imul
fnstsw
or
dec
mov
outs
jae
stc
arpl
lahf
retf
adc
fwait
add
dec
sbb
or
nop
mov
mov
inc
fwait
jns
hlt
lods
jmp
mov
inc
shr
cmp
and
or
data16
dec
and
iret
inc
cmp
cmp
cmps
inc
in
sbb
inc
sub
sbb
sub
xor
cmps
inc
lods
xchg
sbb
ja
and
int3
pop
cmp
(bad)
mov
in
add
outs
push
arpl
ins
dec
pop
fidivr
mov
sar
bound
mov
cmc
cmp
inc
ss
pop
jnp
xchg
imul
xor
nop
pop
out
lea
pop
lods
inc
adc
xchg
leave
lock
cmp
(bad)
repnz
mov
mov
pop
inc
(bad)
sub
pop
inc
pop
inc
push
dec
pop
dec
mov
jmp
loopne
pop
push
mov
mov
ds
and
cmp
push
xor
and
pop
inc
sbb
xor
hlt
fadd
xor
push
push
xchg
inc
and
iret
(bad)
jl
jmp
inc
push
xor
addr16
popf
dec
loopne
push
mov
mov
dec
inc
ffreep
jle
mov
fdiv
leave
xor
cmp
mov
mov
cmp
loopne
dec
fiadd
mov
mov
inc
leave
loopne
sbb
in
rcl
enter
je
xchg
stos
mov
xor
mov
inc
push
leave
xchg
push
or
scas
loop
sub
xor
stos
inc
imul
mov
mov
mov
sub
pop
xor
repz
add
fdivr
stos
cdq
jge
xchg
aas
rcr
mov
xor
lods
inc
dec
mov
ret
stos
mov
test
mov
xor
jae
mov
pop
or
je
cli
pop
pushw
add
xchg
js
or
pop
mov
fstsw
and
ja
(bad)
data16
iret
ja
push
cmp
add
loopne
and
out
xlat
sahf
aas
sub
pushf
call
in
or
shl
ins
mov
sbb
stc
sub
fistp
ds
xchg
jle
fwait
mov
mov
ds
or
in
imul
cmp
nop
sub
xlat
push
push
inc
scas
push
pop
fidiv
fstp
cmc
dec
je
and
dec
jns
cmp
and
sub
cmp
lahf
jns
inc
pop
ret
inc
xor
imul
js
addr16
cmpxchg
idiv
mov
ins
jmp
push
and
(bad)
jmp
xor
jmp
jg
cmp
cmp
mov
outs
pop
adc
(bad)
xor
rcl
lds
ss
loope
cmp
sub
ins
cmp
add
or
jno
push
xor
les
fsub
inc
inc
pop
cmp
(bad)
test
xchg
and
jnp
jo
xor
call
popa
loopne
cmp
scas
mov
xor
test
daa
sbb
jbe
jge
inc
das
jnp
fiadd
pop
dec
inc
stos
fs
ins
jg
mov
imul
neg
hlt
push
jp
mov
pop
fwait
mov
jnp
lds
push
in
dec
mov
(bad)
or
jle
jae
add
pmaxsw
pop
mov
or
out
in
fdivr
lock
jmp
inc
sub
stos
push
fadd
fidiv
ds
enter
xchg
ss
mov
push
xchg
jbe
cmc
cdq
test
inc
mov
and
xchg
stos
xor
xchg
(bad)
fwait
cmp
arpl
pop
jbe
lea
cmp
idiv
mov
inc
jns
mov
in
sbb
or
fwait
inc
push
jnp
pop
pop
sar
cld
rcl
or
dec
adc
and
jle
jecxz
out
arpl
sti
jmp
out
popf
dec
adc
fstp
dec
fwait
inc
shr
mov
in
sbb
sub
xchg
int
push
jo
stc
inc
or
fadd
fst
or
fild
jle
pop
loopne
pop
push
mov
xchg
adc
pushf
stc
cmp
cmp
loope
es
mov
inc
jecxz
and
pop
mov
sar
in
mov
int3
cli
cld
sub
dec
push
int3
dec
pop
jb
mov
neg
push
push
cdq
jns
aam
adc
jg
test
mov
mov
cmp
add
sbb
mov
outs
ffree
mov
pop
aas
mov
ret
fdivr
pop
cmps
int
(bad)
stc
sti
lds
cmp
popa
(bad)
scas
movs
nop
aas
sub
jp
mov
push
xchg
cmp
jmp
jno
xor
dec
ss
stos
xor
and
jmp
lods
pop
sbb
or
das
stc
iret
cs
dec
push
or
xchg
fs
and
mov
ret
jl
movs
cmps
loopne
mov
cmp
jecxz
int
xor
ret
test
shr
ficomp
ja
cmp
xlat
cld
jp
cmp
sbb
fsubr
push
xor
sbb
fs
stc
rol
jp
pusha
cmps
jns
fwait
lods
mov
pop
stc
out
pop
seta
mov
adc
cli
pushf
and
in
dec
xlat
mov
jbe
cmc
jns
jno
inc
cmp
ds
jns
outs
enter
pop
mov
sub
je
not
(bad)
mov
ins
inc
(bad)
mov
adc
xchg
call
fnstcw
dec
lods
mov
jmp
mov
jle
cmp
aad
xchg
sub
cmp
cmp
sbb
and
or
or
aas
in
jp
xchg
das
pop
rcl
addr16
repnz
fisttp
inc
das
push
xchg
repz
sub
sbb
sbb
stos
cmp
cmp
and
in
fadd
std
sbb
(bad)
ins
xor
cmps
idiv
or
jp
adc
(bad)
(bad)
jmp
test
or
jmp
cmp
lods
(bad)
cmp
pop
sub
xchg
rcr
push
mov
xlat
adc
push
adc
dec
cmp
mov
mov
sbb
sbb
and
or
popf
inc
fmulp
jmp
int3
inc
cmp
mov
mov
mov
cdq
mov
(bad)
ss
pop
xchg
xor
sbb
stc
sti
sar
inc
arpl
(bad)
lahf
add
cld
adc
cmc
xor
clc
test
sub
enter
xchg
test
dec
scas
inc
add
out
(bad)
add
out
cmp
cmc
xlat
mov
push
inc
data16
sub
mov
inc
mov
test
sbb
add
movs
xchg
mov
mov
xchg
jbe
fcmovnb
das
out
inc
add
and
mov
cmp
push
mov
push
inc
cmp
sti
dec
fstp
daa
sbb
fwait
xchg
out
jns
mov
stos
push
fdivr
in
inc
jne
pop
les
pop
rcr
rcr
pop
cdq
xchg
cmp
rep
movs
xchg
or
ds
sbb
jns
xchg
ja
out
and
cmp
xchg
jl
call
add
inc
fadd
(bad)
lds
jb
add
or
xchg
and
pop
(bad)
mov
jns
inc
aad
call
xor
imul
cwde
inc
xchg
xchg
cmps
mov
dec
(bad)
mov
push
test
rcl
rol
sbb
or
movs
les
inc
(bad)
mov
hlt
adc
sbb
icebp
inc
(bad)
cmp
movs
inc
jae
or
add
sbb
inc
jge
ror
inc
mov
and
or
inc
lock
ja
jno
jbe
call
push
or
push
inc
lods
aaa
into
and
pop
xor
in
and
mov
jle
pusha
push
lock
test
rcl
push
push
fstp
outs
sub
inc
inc
jne
mov
and
rcr
nop
imul
mov
or
adc
push
sub
sub
int
ds
xchg
sbb
scas
cld
push
jno
sbb
push
xor
jbe
mov
stos
push
cmps
adc
icebp
cli
or
leave
ret
mov
cmp
ss
pop
pop
mov
add
fisttp
aas
popf
jo
xchg
out
jae
jno
into
xchg
retf
push
shr
dec
jmp
out
call
xchg
pusha
call
loopne
jno
pop
xor
idiv
xchg
add
out
ss
dec
test
mov
xchg
or
push
cmp
sbb
aas
mov
mov
jle
cmp
dec
imul
jns
mov
cld
das
push
bnd
sar
repnz
jno
ja
cmp
xchg
ja
shl
shl
cmp
cmp
jno
push
pop
mov
xchg
nop
into
adc
or
add
xor
adc
add
test
jmp
hlt
and
xchg
fnstsw
jne
das
push
and
jns
je
lods
sbb
data16
div
mov
test
xchg
dec
inc
ret
jns
push
outs
ror
pop
lock
xor
sub
or
add
sti
xor
sbb
xor
push
add
sub
fcomp
sbb
(bad)
mov
or
je
fnstcw
stos
mov
mov
pop
rcr
jno
sahf
mov
pop
shr
es
jb
jmp
xor
jbe
mov
not
repnz
int3
rol
repz
fs
pusha
outs
cmps
xor
jns
test
or
add
xor
pop
adc
xor
inc
and
add
mov
sub
dec
dec
and
cmp
fst
cmp
popa
xchg
into
mov
push
mov
je
xchg
cmc
dec
lods
pop
pop
mov
in
mov
arpl
and
jns
mov
mov
aas
ss
shr
jno
add
or
pop
cmp
jmp
(bad)
loope
lods
inc
sahf
jns
adc
dec
jno
jp
mov
cmps
ds
(bad)
jge
dec
mov
sub
rcl
aam
pop
lods
push
mov
sbb
mov
adc
mov
adc
fdiv
in
jne
cmc
(bad)
cmp
out
scas
arpl
pusha
mov
ffree
daa
adc
sub
jl
cmp
cwde
and
js
add
and
jns
psadbw
xor
mov
cmp
cs
and
test
sbb
scas
push
mov
dec
jo
push
cmp
adc
adc
cdq
int
or
loopne
or
mov
sbb
inc
sbb
in
outs
and
ret
mov
push
adc
mov
mov
push
out
mov
push
ds
(bad)
(bad)
jne
jmp
jnp
out
das
daa
jae
sub
push
call
cli
cmp
jmp
fs
fmul
int3
pusha
cmps
(bad)
mov
fild
daa
inc
fimul
mov
xchg
mov
add
sbb
retf
mov
ja
jb
cmp
push
cmp
popf
inc
pop
xor
or
xbegin
inc
fiadd
loopne
fisttp
inc
cmp
call
sub
sbb
hlt
mov
inc
mul
cmc
add
out
cmp
dec
and
cmp
mov
add
into
adc
dec
addr16
mov
dec
cmp
inc
es
out
int3
mov
or
xchg
cmps
loop
add
fist
jae
mov
cmp
sub
(bad)
jecxz
xor
inc
cwde
dec
pop
aas
stc
and
cmp
mov
push
(bad)
or
inc
pop
out
and
(bad)
inc
iret
jg
movs
xor
sub
cmps
call
and
pusha
push
aad
lea
add
dec
push
fdivr
leave
cmp
mov
mov
add
aaa
xor
dec
push
fisub
das
in
fld
pop
adc
mov
dec
inc
dec
cdq
pop
int3
scas
jbe
test
std
fst
imul
jmp
sahf
loope
(bad)
sar
xor
mov
adc
inc
add
push
mov
push
xchg
xchg
inc
add
scas
mov
ss
leave
hlt
(bad)
pop
fmul
ret
(bad)
inc
and
sti
sahf
aaa
popf
es
add
inc
inc
into
sub
adc
sbb
sbb
aas
popf
cmp
into
or
cmp
inc
xor
(bad)
movs
rol
xchg
in
(bad)
jns
(bad)
dec
rcr
orps
rcl
jle
ret
xchg
adc
mov
or
dec
jle
mov
(bad)
icebp
jle
sub
ror
pop
(bad)
mov
mov
sub
dec
push
(bad)
frstor
into
mov
push
in
aas
lock
pop
cmp
push
mov
xchg
loope
mov
jo
js
pop
ds
int3
sbb
stos
mov
mov
mov
jmp
js
je
cmp
mov
pop
out
ja
cmp
sub
mov
pop
into
inc
stos
lea
outs
stos
xor
mov
fisub
jle
aad
add
(bad)
iret
fistp
xor
xlat
mov
cmp
fnsave
not
ret
fdivr
mov
inc
sbb
xchg
jg
movs
mov
or
(bad)
push
je
inc
nop
or
inc
ror
inc
sahf
pop
retf
das
sub
cmp
test
enter
dec
pusha
inc
in
int3
fisttp
adc
test
les
inc
je
call
retf
cld
fstp
aam
inc
add
bound
mov
int
cmp
das
imul
rcl
inc
inc
push
cmp
enter
sbb
mov
cmps
out
(bad)
and
(bad)
cmp
or
fild
inc
push
mov
lods
add
rcr
dec
xor
inc
jmp
pop
and
inc
xchg
dec
mov
lahf
scas
in
das
sub
shl
cmp
or
aas
lods
cmp
and
jecxz
adc
xchg
repnz
out
and
out
sub
in
jnp
xchg
(bad)
sub
aaa
add
push
jns
pop
mov
jmp
push
and
shl
sahf
hlt
lahf
shl
fcom
jle
sti
retf
or
mov
cmp
mov
mov
xor
mov
sub
xchg
push
jno
ins
and
xor
retf
dec
inc
xchg
aaa
cmps
outs
mov
pusha
pop
cmp
cs
mov
dec
sub
sbb
jno
jae
pop
cmps
mov
icebp
lods
add
jns
scas
mov
test
or
pusha
pop
jno
sub
jge
mov
push
lods
xor
fs
(bad)
sub
pushf
mov
ret
mov
pusha
je
mov
popa
mov
mov
pop
mov
cmp
lods
jge
push
out
sbb
pop
js
inc
mov
sbb
jns
in
mov
dec
fist
sub
mov
jl
gs
iret
pushf
loope
jmp
aas
enter
repnz
data16
fisubr
rcr
ss
jns
inc
iret
cmp
in
pop
js
fidivr
repz
jns
mov
stc
xchg
and
lods
jge
or
into
mov
hlt
jl
and
push
inc
std
add
rol
dec
sar
add
xor
cmp
pushf
push
rcr
stos
or
cmp
xor
outs
out
stos
icebp
loopne
inc
ds
dec
ins
nop
mov
ss
sbb
cmps
sub
idiv
pop
push
cmp
out
lods
je
cmp
mov
dec
fadd
sub
mov
cmp
jge
and
jns
scas
jp
cli
inc
pop
xchg
pusha
sbb
jo
jbe
dec
iret
loopne
xor
push
test
aas
jmp
push
cmp
inc
rcl
bnd
lahf
enter
push
fwait
pop
mov
xchg
mov
mov
sub
mov
add
jb
and
test
retf
cmp
hlt
adc
mov
repz
dec
add
sahf
xor
pusha
hlt
pop
add
pusha
cmp
xor
xor
push
aas
dec
rep
add
fbld
cdq
js
push
add
iret
ret
fistp
sbb
xor
add
loopne
mov
and
cmp
(bad)
sub
leave
popf
dec
jg
cwde
add
scas
mov
sbb
jns
mov
mov
out
pop
jnp
dec
mov
scas
int
sbb
xchg
rol
cmps
aas
cli
js
shl
sub
and
inc
and
cld
(bad)
mov
outs
mov
pop
xor
das
shl
sub
xchg
aam
mov
pushf
sub
adc
(bad)
stc
sub
fs
sbb
pop
mov
mov
adc
xchg
cmp
push
xor
xor
jecxz
neg
sahf
dec
repnz
jmp
adc
jno
jnp
dec
(bad)
adc
stos
push
inc
and
push
test
fs
das
pop
cmc
mov
out
ss
and
ins
xor
mov
std
cmp
clc
les
test
inc
mov
(bad)
sub
cmps
mov
xchg
outs
push
cmp
(bad)
cmp
inc
push
cmp
mov
mov
imul
out
cmp
stc
lock
cmp
adc
fldenvw
ret
cmps
cwde
and
enter
xor
js
push
dec
cmp
xchg
xor
mov
and
stos
xchg
rcl
dec
dec
add
or
mov
dec
cmp
inc
test
mov
add
movs
stos
stc
push
sub
sub
mov
fisubr
jecxz
(bad)
leave
xchg
pusha
sbb
inc
(bad)
call
sub
stc
imul
iret
imul
mov
ret
fidivr
fdiv
rcl
pop
fwait
test
jo
(bad)
sbb
retf
or
jnp
pop
push
(bad)
bound
cmps
dec
leave
jmp
out
fstp
sub
push
xor
xor
ss
fnstcw
inc
pusha
mov
mov
shl
ret
stc
mov
sahf
push
inc
mov
inc
adc
add
sub
movs
xchg
fcomp
outs
jnp
clc
pop
inc
push
int
ins
mov
movs
test
ss
inc
cmc
or
loopne
daa
push
aam
xchg
push
leave
inc
inc
cwde
enter
sbb
ss
add
mov
mov
aas
call
nop
gs
cmp
lods
cs
dec
mov
inc
and
test
out
mov
es
add
lods
shl
push
jns
fwait
or
inc
imul
aam
adc
retf
popa
aas
jbe
loope
push
inc
test
repnz
sbb
je
ins
(bad)
cli
mov
xlat
mov
int3
pop
fidivr
dec
jge
sbb
cmp
das
mov
call
xchg
push
cmp
or
out
adc
call
pop
adc
inc
sbb
(bad)
lods
clc
mov
xor
adc
cdq
mov
sti
test
rcl
scas
inc
sbb
mov
cmp
xchg
mov
jle
inc
inc
ss
scas
mov
add
sbb
loope
sti
inc
cmp
mov
xchg
inc
(bad)
jle
push
pop
inc
mov
sub
cmps
out
fucomp
push
xor
cmc
jmp
push
popf
ds
pop
outs
inc
in
inc
fiadd
xchg
mov
mov
sub
cmp
adc
xor
adc
aas
into
inc
inc
jne
xchg
xchg
cwde
or
cld
mov
mov
stc
mov
mov
fdivr
or
xor
add
inc
icebp
mov
mov
es
xchg
or
and
popf
sbb
mov
jge
clc
sbb
ja
ja
dec
loopne
ret
out
std
pop
hlt
test
adc
cmp
cmps
jns
data16
mov
jbe
add
inc
push
adc
cli
pop
fidiv
out
dec
enter
mov
mov
xchg
push
push
addr16
stc
xchg
and
xchg
js
leave
mov
jno
inc
out
sub
jns
mov
popf
lea
fsub
sub
xor
pop
test
and
lea
xor
cmp
mov
mov
push
cmp
fsub
push
rsqrtps
xor
jecxz
outs
nop/reserved
jg
test
add
(bad)
(bad)
mov
push
sti
(bad)
ret
mov
pop
jge
jg
jle
loope
push
out
inc
ja
and
in
inc
imul
pop
sub
mov
cmps
dec
dec
mov
xor
sbb
xchg
aam
mov
sbb
cmps
jns
lock
mov
cmp
sub
cmp
test
or
xor
cmp
iret
and
dec
mov
scas
aam
test
push
jp
dec
inc
push
push
mov
push
push
adc
into
fadd
push
stc
inc
sub
les
inc
sbb
inc
cs
inc
sub
push
out
movs
push
inc
pop
dec
pop
int
(bad)
fsubr
cmc
jae
adc
jnp
mov
call
or
push
add
xor
movlps
out
fwait
rol
iret
fsub
imul
retf
(bad)
es
adc
mov
inc
xor
test
push
mov
out
sub
out
mov
lods
xor
stos
aas
out
scas
cmp
cmp
inc
fcmovnb
mov
xor
xor
test
gs
test
and
js
adc
test
xchg
mov
sar
and
mov
xor
cdq
dec
mov
test
jno
push
xchg
int
iret
mov
outs
xor
pop
repnz
mov
jb
cmp
jl
jae
mov
cmp
loopne
icebp
adc
lods
shl
cld
jbe
cmp
test
jo
pop
dec
or
and
mov
jg
cmp
scas
push
hlt
push
out
inc
outs
pusha
jns
jg
cmp
hlt
mov
dec
and
test
mov
or
in
or
call
or
or
outs
xor
lods
mov
xchg
dec
push
push
lds
jae
inc
outs
mov
xchg
nop
loopne
mov
repz
xchg
push
outs
inc
imul
inc
(bad)
or
xor
int3
ror
ret
ror
ds
pusha
cmp
std
sbb
in
and
enter
inc
add
jno
cmps
sub
test
ins
lods
mov
push
or
inc
cmp
jmp
ins
mov
clc
imul
cmp
xchg
cmp
fs
inc
push
inc
push
out
inc
pop
std
test
push
leave
loope
sbb
add
out
jg
mov
push
and
repnz
or
outs
mov
retf
test
shr
cli
push
dec
mov
push
add
inc
cmp
rcl
jbe
cmp
enter
mov
mov
jae
inc
loopne
cdq
add
ins
icebp
push
cwde
inc
imul
push
inc
das
cmp
xchg
mov
add
(bad)
scas
mov
dec
push
push
aaa
outs
jecxz
loopne
mov
dec
ins
inc
sar
ss
frstor
mov
jg
jmp
xchg
test
inc
addr16
popf
aas
(bad)
data16
inc
jns
or
pop
cmp
popf
mov
mov
in
dec
hlt
sbb
pop
xchg
movs
call
fs
jno
inc
(bad)
inc
retf
icebp
test
xor
push
inc
outs
(bad)
repz
stos
cmp
aaa
jne
mov
xchg
jg
movs
mov
(bad)
daa
inc
add
mov
mov
fsubr
and
inc
or
inc
inc
jle
jl
ret
inc
iret
push
jecxz
push
(bad)
jne
jns
test
sub
mov
push
push
and
pop
mov
jge
xchg
ss
imul
add
inc
mov
movs
push
pop
xchg
sbb
or
jmp
cmp
mov
fs
lock
shl
loopne
inc
scas
fcmove
add
inc
loope
in
xchg
scas
xchg
push
lods
jmp
mov
cmp
add
movs
cmp
stos
or
cmp
xor
mov
mov
in
push
popa
pop
jle
mov
lods
mov
mov
mov
jg
ins
cmp
test
mov
cmp
pop
ins
inc
pop
out
mov
repz
jmp
or
test
jb
dec
jle
mov
bound
inc
xor
test
jo
xchg
inc
lods
push
cmc
pop
in
dec
(bad)
leave
int
adc
sbb
stc
mov
loopne
stc
ds
ret
and
xor
shl
jnp
xor
imul
push
fcomp
sub
inc
popa
test
push
call
and
pop
popf
mov
hlt
in
sti
fild
cmps
push
xchg
fcom
xchg
add
cdq
or
add
fs
cmp
and
jno
(bad)
fdivr
jo
and
icebp
leave
aam
stos
and
and
and
pop
mov
dec
push
data16
xor
in
in
stos
jp
and
jno
push
jns
(bad)
cli
cmp
ret
icebp
test
and
cmp
in
shl
loop
dec
repnz
dec
loope
dec
add
push
sbb
clc
test
aam
ret
inc
sti
sbb
std
inc
clc
adc
inc
movs
and
(bad)
stc
je
retf
mov
pushf
ret
lea
fcmovnb
jns
mov
popa
(bad)
hlt
jecxz
or
call
xlat
les
cmp
repz
and
push
hlt
inc
enter
mov
mov
test
sub
sti
test
das
and
lahf
repnz
mov
inc
shr
popa
imul
or
outs
imul
aam
ficomp
inc
inc
fs
enter
sub
mov
int3
dec
cld
adc
xor
test
xchg
sub
inc
jp
xchg
je
jno
add
cmp
popa
stc
rcr
xchg
sub
mov
aaa
leave
cmp
rol
mov
push
hlt
stos
mov
push
test
dec
sub
jl
imul
out
mov
cmp
jmp
(bad)
aas
enter
push
sbb
sbb
cmp
aaa
inc
in
mov
and
push
stos
inc
div
add
mov
fisttp
sbb
push
arpl
sub
es
pop
push
xchg
lods
enter
sub
retf
mov
pop
fadd
cmp
jne
cmp
pop
xchg
pop
and
inc
pop
fmul
stos
dec
fld
int
leave
adc
jne
or
ins
sbb
dec
xchg
test
stos
cmp
sub
int3
or
test
sbb
dec
mov
sub
scas
add
test
mov
iret
pop
cmp
mov
and
cmc
push
movs
dec
jl
inc
add
pop
rol
push
shr
adc
punpckhdq
jae
xor
inc
inc
int3
fbld
adc
add
loop
inc
movs
cwde
lds
leave
ds
inc
pop
addr16
(bad)
test
mov
clc
popa
or
daa
inc
adc
stos
out
cmp
fisub
inc
cpuid
sub
cmp
ret
or
out
clc
lock
mov
inc
xchg
add
xchg
cwde
push
ss
out
cmp
inc
cmc
sti
int
cmp
xchg
push
jns
sub
cdq
mov
movs
cmp
add
mov
xchg
jb
push
aaa
shl
mov
and
push
mov
inc
int3
test
fidivr
(bad)
or
dec
fmul
test
stos
in
das
mov
mov
and
test
xchg
cmp
inc
xchg
jge
jns
dec
ins
mov
or
mov
xchg
mov
xchg
rcr
mov
(bad)
aad
jge
outs
sub
lods
shl
das
mov
cmp
sbb
dec
sbb
cmp
jno
aas
and
aaa
push
scas
mov
cs
in
xor
outs
shr
popf
scas
inc
dec
(bad)
lods
push
cmp
mov
js
jno
mov
popa
gs
scas
lea
cmp
mov
mov
out
sbb
je
cli
enter
mov
jb
inc
addr16
pop
mov
mov
xor
fisttp
or
mov
fs
int
sar
rcl
in
jecxz
fisttp
fs
sahf
xchg
dec
outs
stos
outs
movq
test
cmp
sar
sar
dec
in
sbb
fxch
out
lock
outs
mov
retf
(bad)
xor
div
sbb
ins
bound
sahf
aad
ds
(bad)
mov
adc
ja
xor
cmp
pusha
jno
fidivr
loope
fisttp
push
cmp
mov
push
cmp
or
mov
scas
push
or
movs
fs
cmp
test
mov
cmp
jmp
and
jns
xlat
xor
in
jg
mov
add
in
dec
loope
mov
(bad)
pop
jns
jge
add
je
arpl
loopne
(bad)
adc
sahf
fmul
add
(bad)
jno
dec
(bad)
sub
dec
dec
js
pop
mov
cmp
repnz
pusha
or
outs
retf
outs
mov
sbb
(bad)
scas
pusha
mov
sbb
mov
fsub
popf
shl
jno
arpl
dec
push
ins
xchg
cli
das
xor
mov
iret
lds
ror
push
inc
inc
fs
push
je
cmp
add
les
cmp
jns
lods
dec
fsub
sbb
sbb
xor
mov
leave
test
loop
and
inc
cmp
cmp
jns
cs
push
push
xchg
sub
or
data16
rol
out
mov
push
lahf
adc
jge
loop
shl
js
push
sub
push
sar
int3
shl
adc
xor
jge
jns
push
mov
xchg
loop
mov
jmp
cwde
sub
call
sbb
aam
xchg
rcr
(bad)
ds
cld
cmp
sar
inc
cmp
hlt
xor
rcl
sbb
popa
mov
les
push
jno
push
pop
sub
jmp
ds
jno
jge
(bad)
pop
dec
cmp
push
mov
cs
inc
xlat
push
call
push
inc
xor
cmp
inc
jge
jbe
fdivr
ss
xor
nop
jno
cmp
cmp
xor
cmp
dec
jmp
lods
call
nop
loope
(bad)
(bad)
mov
cmps
ret
and
sub
xor
inc
cs
inc
sub
push
inc
icebp
les
cmp
cmp
(bad)
mul
popa
fldcw
or
sub
mov
iret
std
arpl
jle
js
inc
cld
mov
add
or
or
cmps
repnz
mov
das
mov
cli
mov
mov
leave
or
fcmovnbe
inc
and
cmp
jecxz
outs
mov
out
fisttp
retf
inc
outs
dec
jge
fsubr
cmp
out
sub
mov
add
std
gs
xor
enter
cmp
jne
(bad)
retf
pop
inc
cdq
mov
bound
int3
pop
jp
mov
inc
js
outs
sbb
lods
outs
dec
cmp
fisttp
ds
rcl
pop
int
scas
call
adc
push
into
pop
enter
inc
inc
dec
bound
popa
cmp
fidivr
and
xchg
mov
aas
das
cmp
xchg
stos
cmp
push
jmp
adc
outs
and
push
xchg
aaa
arpl
ret
(bad)
ret
les
retf
jle
jg
xchg
jg
cmps
test
fst
mov
pop
or
clc
sub
daa
aad
jnp
int3
lahf
enter
ds
stos
mov
dec
inc
test
jae
lock
(bad)
xor
shr
pop
inc
pop
leave
sub
(bad)
and
dec
jno
cld
lahf
inc
pop
sbb
sub
jbe
sub
xor
xchg
fucomip
inc
scas
jo
xchg
movs
xor
enter
cmp
mov
or
ds
push
or
pop
ret
popf
mov
or
aas
xor
ja
in
stos
xchg
cmp
jle
fiadd
push
sbb
movs
pushf
loopne
cs
jns
movs
inc
cdq
jg
pop
inc
fcmovne
pop
inc
cmp
and
call
ins
cld
mov
inc
pushf
pop
cmc
push
nop
and
lea
dec
mov
clc
add
dec
int
sbb
mov
loope
rol
fsubr
test
xchg
jns
inc
pop
adc
mov
add
pop
mov
dec
cmp
repnz
inc
mov
cmp
cmp
pop
jno
jae
scas
jno
pop
jge
stos
add
jns
pop
push
cmp
jg
push
jno
push
cmp
fwait
(bad)
or
je
jge
ja
or
jae
jl
movs
inc
or
outs
xchg
jge
push
stos
push
mov
ret
jns
mov
sahf
arpl
fwait
pop
or
out
mov
or
or
pop
into
or
and
xchg
mov
xchg
movs
fs
mov
push
xchg
sbb
push
das
dec
and
or
daa
shl
xchg
movs
test
xchg
imul
inc
mov
into
adc
clc
iret
imul
push
push
shr
aad
sub
or
jl
cmp
adc
loope
(bad)
scas
inc
push
xchg
pop
jo
ins
test
inc
adc
mov
in
cmp
pop
and
pop
mov
mov
movs
mov
fs
mov
repz
mov
lahf
in
mov
sar
dec
xchg
es
xor
dec
and
adc
dec
out
mov
out
jae
add
ret
cdq
sub
mov
or
iret
sub
fnstcw
cmp
ror
xlat
and
mov
stos
test
jno
clc
sti
fidivr
js
cmp
xchg
xor
sub
fist
leave
retf
ss
cs
push
dec
pop
dec
push
jns
in
sub
(bad)
aas
aam
sbb
mov
inc
pop
sahf
inc
scas
shl
cmp
retf
xor
fsub
iret
sbb
gs
mov
cmp
xor
xor
xchg
mov
mov
aas
adc
dec
mov
mov
jmp
int3
push
(bad)
out
shl
inc
inc
inc
cmps
xchg
add
add
push
mov
call
add
inc
add
jmp
sahf
popa
cmp
(bad)
and
inc
cmps
mov
jle
cmp
jmp
inc
mov
js
ss
cli
enter
idiv
ret
inc
mov
stc
call
or
or
and
push
pop
sbb
shl
in
dec
xchg
scas
inc
retf
cmp
or
inc
lea
dec
or
gs
push
mov
inc
pop
test
jmp
push
popf
es
jmp
out
inc
std
loopne
adc
push
ret
in
in
ss
out
fistp
push
sub
mov
mov
push
add
fistp
mov
cmp
or
int
jo
push
mov
enter
pop
sub
inc
cmp
xlat
sbb
jp
sub
push
pop
outs
fdivr
rol
aas
sbb
xor
and
jmp
inc
jle
jb
sbb
retf
inc
sub
xor
lea
cmp
cmp
sar
(bad)
pusha
mov
mov
loope
mov
cmc
sub
cmp
(bad)
std
call
fdiv
jp
je
jne
loope
fsubr
mov
add
inc
out
(bad)
(bad)
fadd
data16
xchg
mov
mov
sbb
mov
jecxz
test
cmp
ins
stos
repz
movs
sbb
shl
fst
test
mov
adc
pop
pop
(bad)
clc
repnz
and
xor
xor
or
jecxz
fcom
mov
mov
test
pop
lods
mov
jns
sbb
xchg
jno
lods
ds
jns
ins
imul
add
ret
aaa
add
jbe
aas
mov
jns
rcl
sub
out
lahf
adc
jae
mov
pop
cmp
fcmove
mov
or
push
xor
dec
enter
ja
scas
cbw
mov
pop
in
adc
scas
xchg
lock
mov
leave
fcmovbe
push
jmp
xchg
jle
inc
cs
stos
je
sti
in
ss
adc
jns
add
mov
rcl
or
or
cld
test
loope
push
aas
sub
test
loopne
pop
add
adc
out
xor
mov
inc
dec
dec
lea
punpckldq
xor
jp
sbb
inc
js
test
iret
or
mov
cdq
scas
test
mov
adc
stos
mov
shr
inc
cmp
sbb
sub
mov
jns
pop
loopne
imul
lea
popa
mov
xor
inc
retf
jne
mov
pushf
cli
rcl
push
inc
gs
nop
mov
sub
push
dec
pop
xchg
jne
leave
inc
je
imul
addr16
imul
and
xor
mov
stos
sub
into
cdq
iret
pushf
sub
pop
xor
fs
cwde
push
fmul
jmp
mov
mov
rol
cmp
sub
test
or
(bad)
(bad)
push
xchg
movs
inc
cmp
lock
out
sub
lods
outs
pop
movs
repnz
call
in
hlt
ds
mov
aad
pop
inc
popf
mov
mov
inc
jne
pop
cmp
out
ret
mov
test
sub
das
imul
movs
inc
cmp
test
mov
inc
pop
(bad)
pop
leave
clc
sub
dec
daa
xchg
jmp
sub
or
adc
adc
pop
retf
pop
int3
pusha
inc
sub
fmul
sub
mov
jae
out
cmp
xchg
jb
nop
nop
push
cmp
aaa
pop
sub
fwait
cmps
or
ja
jns
movs
and
inc
sbb
sahf
push
fsubr
add
(bad)
mov
or
jnp
aaa
pop
mov
cmp
mov
fcmovnb
and
sbb
jo
pop
adc
mov
mov
push
cmp
cmp
sub
adc
lods
or
pop
add
sbb
adc
lods
inc
push
push
int3
int
or
mov
inc
xor
mov
ins
jle
push
cdq
xor
test
inc
mov
inc
retf
mov
push
in
cld
fsubr
inc
push
pop
outs
mov
sub
sbb
out
mov
and
dec
mov
gs
push
mov
int
call
outs
fsub
sub
xchg
mov
loopne
inc
div
jnp
cmps
out
mov
pop
imul
scas
out
cmp
add
sub
pop
lahf
inc
div
aam
outs
and
repnz
inc
xchg
mov
lds
inc
outs
int3
sub
jecxz
jo
inc
pop
test
add
hlt
cld
inc
call
or
push
cs
mov
ficomp
or
jno
jb
(bad)
push
fistp
cmp
push
mov
xlat
pop
imul
es
fstp
sub
push
xor
inc
push
iret
push
or
aam
mov
jl
cmp
dec
add
stos
xor
and
add
leave
or
cmp
repnz
scas
jo
push
mov
or
out
add
sub
jmp
add
mov
inc
movs
aas
and
add
push
into
jns
out
mov
shl
jbe
jge
data16
popf
inc
lods
xchg
xchg
mov
inc
ret
in
adc
sahf
add
lea
cmp
xchg
cmp
sbb
leave
inc
das
sbb
add
mov
pop
hlt
sub
cli
rol
pushf
stos
popf
lods
mov
in
fdivr
bswap
and
call
fsubp
(bad)
lods
mov
adc
iret
call
outs
out
sbb
jb
nop
ret
outs
cs
jno
mov
daa
pop
das
dec
ret
je
or
fistp
mov
sbb
push
pop
pop
es
mov
pop
lock
ds
xchg
cmp
pusha
jns
mov
xchg
outs
cld
pop
adc
jns
scas
cmp
inc
mov
dec
lahf
jno
(bad)
jl
out
nop
je
(bad)
int3
add
ins
aas
xchg
outs
add
push
fdivr
pusha
sti
inc
ds
(bad)
gs
jge
xor
cmp
inc
xchg
inc
jns
mov
push
loopne
jle
jle
test
mov
xor
mov
cmp
mov
out
cmc
jg
dec
(bad)
adc
mov
mov
and
sbb
repnz
xchg
or
arpl
pop
test
push
pop
xchg
cmp
lods
cmp
dec
fs
pop
sahf
sub
dec
js
push
jnp
gs
dec
cli
jae
test
cmp
inc
fild
in
fstp
in
ins
test
or
inc
popa
pop
push
loopne
sub
inc
xchg
stos
mov
aas
sbb
adc
and
leave
push
adc
pop
sub
cmp
jl
dec
ins
inc
mov
mov
in
jmp
or
dec
cmp
ds
push
sub
(bad)
cli
xor
outs
jne
(bad)
aaa
cmp
push
mov
xchg
scas
cdq
push
ins
and
inc
int
out
pop
pop
popf
inc
inc
push
jnp
mov
cmp
cmp
inc
xchg
pop
pop
arpl
(bad)
fiadd
pop
sub
out
cld
inc
mov
scas
sbb
mov
ja
icebp
pop
mov
lods
loopne
retf
inc
in
xchg
test
sbb
inc
mov
rol
sahf
aaa
outs
test
cmp
mov
fwait
inc
and
fyl2xp1
inc
aas
mov
das
cmp
xor
fldcw
paddsw
mov
dec
mov
int3
cmps
cmp
and
lods
xchg
or
std
aas
(bad)
lea
in
ficomp
cmp
and
repz
stos
dec
jle
sub
jne
fadd
jp
psllq
out
inc
jmp
mov
ss
out
inc
pop
dec
jmp
xlat
inc
aad
add
nop
cli
inc
and
int
xor
pusha
and
add
xor
lock
dec
rol
dec
aad
fdivr
fld
(bad)
clc
mov
das
mov
popa
jmp
mov
in
mov
cld
mov
adc
pop
fdiv
mov
push
fldpi
lods
mov
push
cmp
js
and
mov
cmps
sub
(bad)
mov
js
fucom
jge
adc
test
inc
mov
je
cmp
mov
loopne
cld
inc
sub
dec
inc
push
inc
test
in
fild
sar
inc
movs
jecxz
pop
mov
dec
rcr
pop
or
pusha
mov
inc
pop
xchg
dec
mov
xor
mov
outs
lahf
mov
sub
mov
fmul
sbb
or
adc
xchg
jb
or
xor
(bad)
loop
sahf
cmp
pop
lock
inc
lds
xchg
and
and
xchg
mov
sahf
lods
sub
loopne
and
cli
fdivr
cmp
jns
mov
jb
fld
jle
mov
xchg
jge
cmp
enter
lds
(bad)
cld
mov
and
ficomp
daa
add
xor
jnp
jge
sub
pop
sub
sub
(bad)
jle
adc
mov
inc
pop
inc
jecxz
(bad)
test
inc
inc
(bad)
ins
dec
jne
dec
inc
je
loop
ja
push
lods
inc
mov
inc
jp
(bad)
stos
mov
inc
imul
out
pop
test
pop
movs
int
ja
inc
mov
or
inc
clc
call
or
inc
es
pop
dec
aas
pusha
push
or
hlt
leave
cmp
fwait
lea
inc
and
repnz
push
inc
cmp
jl
js
and
add
aad
in
pusha
cld
inc
sbb
call
shl
aas
jnp
dec
mov
mov
dec
or
jmp
js
outs
mov
xchg
add
inc
je
and
xchg
movs
adc
int3
out
rol
aad
sub
jnp
mov
xor
std
cwde
or
scas
ret
cmp
mov
aam
pop
js
push
xlat
(bad)
jmp
jnp
fisub
adc
adc
sub
call
stos
dec
js
inc
gs
jbe
loopne
xlat
push
dec
ror
cmp
inc
fcomp
pop
popa
mov
ds
add
adc
(bad)
rcl
adc
mov
mov
fwait
adc
cmp
cmp
shl
out
and
jo
or
ret
cmps
sub
jno
daa
xor
or
cmp
jmp
stc
xor
cmp
or
ret
sti
mov
bound
repz
fcmove
fadd
ficomp
pop
aam
into
fadd
repnz
rol
out
cmp
xchg
mov
loope
data16
inc
lock
or
cwde
adc
je
jge
(bad)
mov
sub
call
add
push
sub
and
mov
cld
inc
dec
inc
jle
mov
cs
in
ret
(bad)
out
push
xchg
xchg
or
jge
xor
adc
jns
inc
stc
and
ror
imul
inc
dec
repz
cmps
call
xchg
nop
rcl
xchg
(bad)
std
imul
cld
in
jge
jbe
enter
cmp
mov
sbb
lea
inc
out
out
mov
mov
in
inc
mov
ror
aam
ror
sqrtps
cli
(bad)
pop
or
shl
out
sbb
and
push
movs
adc
sbb
dec
jle
push
adc
std
icebp
xor
push
mov
jo
mov
push
aam
loopne
jg
sub
or
xor
jno
and
sbb
dec
push
and
sub
(bad)
sub
mov
mov
push
inc
cmp
or
in
inc
and
sbb
inc
mov
in
or
and
mov
ds
sub
aas
or
fild
(bad)
aaa
and
enter
and
bound
iret
fsubr
fisub
xor
cmp
mov
jmp
inc
jo
push
xor
(bad)
in
mov
or
mov
inc
(bad)
loope
ss
xchg
push
shl
les
jne
rcl
sbb
pop
xor
fistp
pop
pop
push
ror
nop
cmp
jge
mov
stos
out
sub
and
int3
jb
dec
sub
fs
fdiv
jo
dec
xchg
sub
cmp
push
xchg
mov
mov
sbb
jmp
cld
pop
jo
sub
pop
mov
leave
stc
xchg
jmp
mov
cmc
icebp
ret
jns
loop
outs
jns
sbb
scas
and
xor
adc
jno
icebp
jae
nop
cs
cmp
dec
add
sar
cmp
add
pop
jno
cdq
sbb
cmp
mov
xlat
cmp
pop
xor
pop
xchg
sar
or
sti
jg
ss
pop
je
stc
stc
pop
jns
mov
sbb
push
mov
mov
mov
ror
jae
sar
mov
dec
and
daa
call
mov
cmp
push
popa
cmp
cmp
xor
cmp
in
ret
movs
inc
cmps
inc
das
and
stos
popf
sub
add
mul
mov
sub
mov
lea
stos
or
aaa
inc
mov
mov
ds
lds
sub
mov
mov
das
stc
xor
inc
sub
call
mov
in
(bad)
pop
aas
pop
jle
add
movs
add
xor
inc
jo
jno
xchg
mov
sbb
xor
sbb
push
jno
mov
sahf
leave
xchg
xlat
fld
test
jg
retf
rol
xor
sti
in
inc
clts
dec
xchg
stos
mov
pop
add
sub
push
pop
sti
sub
mov
xor
inc
inc
push
movs
jo
scas
push
(bad)
fdivr
push
pop
fwait
xor
sbb
or
lahf
scas
movs
mov
inc
stc
cmp
jmp
mov
mov
test
or
loope
push
sar
inc
mov
xor
push
inc
cmp
seto
arpl
mov
sbb
fimul
arpl
(bad)
mov
pop
addr16
js
add
adc
cmp
int3
push
jb
mov
add
xor
in
and
(bad)
cdq
test
imul
jecxz
sub
xchg
iret
icebp
(bad)
cmp
test
cli
outs
jo
jmp
cmp
pop
push
aaa
add
inc
xlat
icebp
ret
test
daa
xor
jle
fadd
sar
sub
ja
xor
jmp
xor
aaa
xor
fstp
cmp
and
repz
stos
xchg
sbb
xor
mov
repz
pop
call
cs
lock
je
push
shl
dec
push
mov
das
mov
mov
shl
or
adc
or
push
pusha
enter
rol
sbb
push
sbb
cmp
xor
out
ret
(bad)
push
lahf
sbb
hlt
fiadd
push
jns
pop
cmp
add
fsub
es
push
bswap
xor
neg
sahf
jl
jl
xchg
(bad)
aad
cmc
mov
jno
cmp
push
xchg
aaa
cmps
cld
aam
add
sbb
xor
das
mov
(bad)
fld
pusha
rcl
jl
dec
or
cmp
out
repnz
(bad)
sti
ror
rsqrtps
inc
lock
mov
sbb
into
out
movs
dec
jle
stos
inc
xchg
jp
xor
faddp
or
ss
inc
and
dec
or
sbb
jl
(bad)
shr
fild
stc
pop
or
add
mov
or
or
loop
sar
jb
adc
ss
out
lahf
inc
or
fbld
mov
inc
or
lods
ds
or
ror
inc
sahf
or
in
pop
xor
pusha
jmp
sbb
push
popa
test
imul
scas
fcom
arpl
push
ins
push
cli
stc
inc
xlat
lock
xor
lods
mov
sub
cdq
cmp
inc
jle
(bad)
sti
es
js
pop
fwait
or
lahf
push
cdq
pop
and
xchg
inc
push
das
test
in
dec
inc
fsub
icebp
movs
repz
data16
jnp
arpl
lods
call
fsubr
cmp
push
jg
mov
test
out
movs
js
mov
fs
(bad)
iret
rcl
loopne
sbb
std
pop
ret
push
bound
loope
add
fwait
js
jb
fcomip
or
cmp
jno
aad
xor
fs
mov
dec
in
lahf
cdq
das
dec
xor
jo
sahf
aas
outs
pop
pop
outs
js
out
fmul
retf
jl
jae
xor
jno
bound
inc
je
popa
cld
dec
bound
pop
fucom
cmp
in
clc
sbb
retf
cmp
jmp
fcom
or
jns
inc
ret
ficomp
pop
inc
dec
lods
fwait
popf
mov
rcr
cmp
out
imul
xor
push
cmp
js
adc
or
xchg
mov
push
shl
es
jns
sti
in
inc
fisttp
jne
pop
and
into
(bad)
ins
mov
sbb
inc
out
sub
xchg
sub
mov
mul
or
sbb
sub
inc
test
inc
adc
sbb
jle
mov
ja
mov
jp
or
sbb
fidivr
test
or
test
and
idiv
aaa
or
sub
jge
push
adc
xchg
sub
or
inc
mov
push
sub
lods
mov
outs
test
aad
fwait
add
and
lds
pop
cmp
mov
xor
mov
or
dec
jno
aam
fisttp
inc
ror
les
stos
inc
call
cwde
push
pop
bound
and
sub
xor
mov
mov
push
or
add
pop
std
(bad)
test
mov
inc
sub
sbb
out
test
mov
not
cld
fucomip
iret
sub
mov
pop
lods
imul
mov
nop
cmp
jl
adc
jmp
stc
loopne
enter
sbb
in
ret
jge
xchg
mov
mov
or
(bad)
aad
les
(bad)
test
jne
fiadd
jns
xor
inc
xchg
mov
js
add
adc
mov
mov
push
js
mov
inc
shr
scas
ins
push
jp
daa
sbb
cmp
sti
fadd
sbb
sbb
in
inc
dec
sar
mov
inc
jb
jae
dec
or
cs
pop
cmp
faddp
inc
imul
cli
xchg
popa
push
inc
or
es
test
inc
jns
cwde
ret
cmp
aam
retf
jnp
rcl
sbb
add
lds
retf
cmp
ror
cdq
mov
jno
scas
ret
add
hlt
jmp
mov
lock
sub
lods
cmp
pop
inc
lods
imul
jb
inc
repnz
repz
ds
lds
xor
imul
js
inc
out
or
jle
mov
pop
lds
lods
test
fisttp
sbb
aas
es
cdq
inc
push
sub
xlat
pop
sbb
xor
rcl
push
arpl
mov
movs
cmp
enter
sahf
loopne
sbb
retf
inc
arpl
repnz
jp
or
xchg
std
add
fild
ret
test
ins
cmp
mov
xchg
xchg
(bad)
cmp
out
jg
cmps
mov
inc
out
retf
pmuludq
fisttp
inc
sbb
inc
sbb
xchg
inc
jl
jae
(bad)
jo
test
adc
jbe
xor
jbe
ror
aam
std
ins
out
pop
cmp
(bad)
idiv
and
jns
xchg
sub
into
fld
cmp
aas
pusha
mov
fsub
and
sub
test
or
fnop
push
adc
cmp
adc
add
sbb
call
xor
mov
shl
push
push
inc
outs
jmp
sub
dec
xchg
dec
add
or
hlt
xchg
xlat
xor
or
mov
and
pop
jno
(bad)
mov
mov
dec
inc
cmp
rcl
repz
xlat
jge
movs
pusha
movs
outs
cmp
and
push
leave
in
jns
push
(bad)
js
push
leave
fiadd
mov
fmul
shr
mov
xor
and
imul
popa
(bad)
int
push
add
fdiv
in
pop
pop
out
cs
pop
fstp
fwait
call
fwait
xchg
mov
sti
out
pop
jmp
mov
push
shr
icebp
(bad)
pop
inc
out
fdiv
(bad)
cmp
in
jns
pop
jnp
outs
mov
sahf
in
add
and
mov
and
push
je
das
test
cmp
scas
scas
rcr
daa
retf
lea
mov
sbb
mov
mov
push
pusha
jns
aas
fld
adc
int3
clc
xor
imul
test
jge
push
mov
jne
pusha
jno
(bad)
in
cmp
cmp
pop
das
out
mov
cmp
es
push
fnstenv
jmp
adc
jbe
jg
stos
and
push
in
out
jns
iret
gs
mov
cmp
mov
and
mov
xchg
jle
mov
pop
stos
and
rcr
mov
jae
dec
pop
nop
lods
dec
lock
jge
mov
mov
xlat
ja
dec
fnclex
and
sbb
xor
dec
je
pop
sbb
jmp
or
xchg
xor
pusha
fbstp
adc
jno
fs
or
pusha
ins
fist
scas
call
pusha
js
jmp
mov
out
mov
scas
or
sub
lods
add
adc
sbb
jns
(bad)
mov
aas
popa
and
js
stos
xor
cmp
mov
cmp
jns
pop
jbe
and
aas
sub
rcr
push
jae
fsubr
shl
aad
pop
xchg
out
mov
xchg
ficomp
pop
(bad)
fmul
rcl
xor
push
or
add
cmp
loopne
fs
aaa
fidivr
cmp
sti
test
xchg
cmc
pop
and
out
out
repnz
fcomip
ds
ret
scas
mov
mov
and
in
cmp
adc
dec
clc
(bad)
adc
repnz
add
lock
loop
jmp
or
pop
inc
push
xchg
sub
push
mov
fld
or
cmp
retf
aad
repz
neg
sub
xorps
add
mov
cld
arpl
jb
popa
inc
sti
cmp
mov
and
cmp
xchg
sbb
stc
cmp
pushf
pop
push
or
cmp
inc
sbb
add
jns
xor
push
fsubr
cmp
jo
sti
jo
data16
pop
repnz
inc
scas
jbe
inc
sbb
jl
test
mov
icebp
inc
bnd
push
pop
mov
mov
bound
sub
loop
sar
movs
retf
or
aad
xor
paddb
imul
mov
xor
leave
test
cmp
jge
inc
(bad)
ja
mov
inc
int
and
xchg
lods
popf
and
cmp
ret
mov
cmp
push
rcr
in
lods
(bad)
out
add
ficomp
sub
jns
(bad)
cmps
mov
xchg
mov
sub
inc
arpl
mov
ret
jmp
out
inc
call
push
inc
sub
sub
out
inc
fwait
add
xor
jl
mov
not
mov
mov
jne
(bad)
or
push
dec
shl
mov
icebp
retf
xchg
imul
clc
enter
je
loopne
mov
push
inc
sbb
int3
pop
in
inc
inc
sbb
sahf
mov
(bad)
sub
adc
sub
and
jb
test
test
in
push
xor
out
add
jbe
inc
icebp
popa
sahf
leave
or
adc
mov
mov
enter
pop
loopne
iret
sbb
pop
ret
cmp
jo
jp
js
xchg
add
stos
out
mov
cmps
in
inc
(bad)
lods
in
dec
or
cmps
dec
inc
xor
jns
add
and
push
js
xchg
dec
push
iret
pop
mov
jnp
je
dec
sar
call
jle
fldl2t
adc
(bad)
xor
dec
or
and
iret
jns
dec
add
sahf
sub
fdiv
mov
pop
sbb
jne
pop
neg
pop
mov
cmp
pop
xor
sti
pop
iret
or
repnz
in
call
xor
ret
dec
aam
or
fistp
aaa
outs
xor
xor
push
je
(bad)
cmp
mov
repz
jg
mov
xchg
cmp
xor
outs
mov
mov
(bad)
push
jge
adc
sti
icebp
fs
sar
xor
aaa
aas
xor
sahf
in
cmc
gs
cmp
inc
cmc
xor
mov
cld
pusha
push
retf
test
icebp
or
in
or
cld
mov
popf
and
popf
shr
int
nop
je
sbb
jno
fisub
fcomip
cwde
lds
rol
fadd
in
inc
sbb
dec
or
cli
loope
lock
div
in
inc
stc
lahf
inc
call
push
inc
into
frstor
pop
inc
push
lock
add
jmp
cmp
addr16
mov
push
enter
jnp
test
cmp
sub
mov
and
xchg
mov
sub
das
test
sti
push
data16
aam
add
pop
rol
ins
mov
les
bound
popf
shr
out
xchg
jns
daa
leave
xchg
cmp
dec
inc
gs
adc
fnstcw
inc
imul
mov
imul
(bad)
cmp
cmp
(bad)
xor
call
dec
fmul
out
push
or
dec
jp
fld
push
js
rcr
aas
xchg
xor
test
gs
aam
sbb
mov
stos
or
das
gs
inc
cmp
in
pushf
inc
xor
xchg
xchg
mov
adc
into
inc
push
sbb
xor
push
ja
aam
test
arpl
mov
fmul
cmc
out
stos
mov
mov
cmps
mov
scas
mov
mov
aaa
scas
push
push
push
or
addr16
cmp
(bad)
inc
jnp
rol
faddp
rcl
mov
arpl
cmp
adc
ficomp
call
shr
jmp
or
mov
cmp
stc
add
dec
lock
pop
or
mov
push
js
push
add
dec
cmp
pop
cmp
bound
xor
or
cli
xor
mov
mov
jb
jns
hlt
cmp
adc
dec
pusha
lea
aam
lahf
stos
push
out
in
cmp
xlat
mov
inc
pushf
sbb
mov
(bad)
fisttp
and
addr16
clc
mov
rcr
in
jb
jle
mov
inc
xchg
retf
cli
rcl
leave
add
fistp
nop
int3
iret
xchg
into
pop
xlat
cwde
ret
outs
inc
sbb
imul
imul
hlt
fs
arpl
dec
mov
stos
dec
lods
xchg
pop
xchg
imul
mov
mov
cdq
cmps
inc
mov
jp
mov
jle
push
cmp
dec
push
inc
cmp
dec
push
jns
sub
push
push
nop
lahf
cmp
pop
mov
mov
sub
add
inc
sub
fucomp
movs
sub
vrcpps
mov
outs
mov
imul
ds
mov
out
sbb
fisttp
loopne
je
ds
lds
jb
adc
add
cmp
sti
out
js
mov
mov
mov
dec
inc
push
(bad)
pop
cld
iret
shl
rol
and
jno
adc
cmp
jmp
mov
mov
rol
inc
dec
jnp
mov
or
test
sbb
push
and
dec
adc
cdq
push
xchg
dec
mov
pushf
sahf
inc
pop
or
rol
adc
ins
stos
call
jmp
jns
(bad)
jmp
popf
inc
test
pop
inc
push
ficomp
push
push
sub
cli
fwait
inc
or
jbe
jmp
inc
mov
test
nop
mov
ffreep
(bad)
jg
arpl
mov
and
test
cmp
cwde
rcl
retf
sub
js
out
xor
in
jnp
and
push
ins
jne
and
sbb
mov
dec
or
pop
mov
pop
adc
sub
stc
iret
mov
loope
clc
arpl
jno
mov
jg
inc
cmp
stc
jmp
cmp
inc
mov
lock
cwde
inc
adc
push
cmp
aaa
cmp
pop
arpl
xchg
push
mov
or
pop
adc
jbe
sub
and
call
into
out
add
xor
aam
mov
shl
cli
dec
mov
fld
test
xor
push
inc
stos
cdq
fbld
aaa
inc
sbb
pop
mov
cmp
push
mov
pop
das
pop
add
cmp
loopne
adc
cmp
jge
pop
js
mov
popa
inc
into
stos
push
pop
ins
jl
daa
inc
or
adc
sub
les
jp
cmp
dec
imul
mov
and
pop
mov
sbb
push
aas
fs
and
out
les
fdiv
fnstenv
push
inc
aas
xchg
iret
add
sub
loopne
jmp
sub
jmp
je
dec
pop
jge
dec
stos
jg
add
xor
out
stc
or
inc
jmp
jae
sbb
cmc
popf
icebp
iret
or
sub
mov
rcl
or
inc
jb
stos
rcl
mov
outs
js
cmps
mov
sub
outs
mov
fiadd
scas
js
push
cli
cmp
adc
out
(bad)
xor
jmp
repz
cmp
mov
cmp
xchg
mov
add
add
mov
add
out
push
push
add
repz
cmp
cmp
and
jno
ret
cmp
daa
loopne
mov
pop
lods
or
sub
dec
cmp
stos
rcl
fimul
in
dec
pop
add
in
pop
hlt
cmp
push
push
and
jl
push
push
imul
lds
pushaw
jno
sub
sub
idiv
in
sbb
jl
sbb
(bad)
ja
lea
mov
gs
stos
cmp
xchg
or
jno
dec
out
stos
sar
rcr
je
les
gs
jecxz
pop
jnp
push
aad
xchg
jno
push
es
call
pop
cmp
lods
dec
mov
shl
mov
sbb
jmp
push
mov
or
pop
shl
ret
inc
or
jl
jo
pop
fadd
push
ret
sbb
mov
jns
add
cmp
aas
hlt
jno
cmps
add
cmps
jge
mov
push
shl
stos
bound
icebp
and
jae
out
nop
outs
je
call
cli
hlt
out
fild
push
loop
cmp
adc
and
push
fs
sahf
popa
xor
iret
leave
cmp
dec
out
fs
xlat
in
clc
jmp
std
push
sub
add
xor
cmp
adc
push
xchg
retf
je
repz
ins
jae
inc
cld
and
mov
inc
not
inc
mov
imul
arpl
mov
not
add
fisub
mov
add
mov
sub
out
fisubr
out
cmp
sbb
out
sub
ss
mov
or
xor
dec
cmp
xchg
leave
(bad)
inc
das
inc
push
cs
mov
sbb
out
loopne
jb
in
aas
je
(bad)
cmps
ret
mov
sbb
aam
mov
push
pop
rcl
xchg
aas
rcl
retf
retf
xlat
and
mov
dec
inc
cmp
jmp
jge
fst
aas
xor
xchg
cmp
shr
inc
and
std
inc
lds
dec
scas
aad
pop
xchg
cmp
(bad)
and
inc
and
stc
inc
mov
es
pop
sbb
xor
in
jae
outs
mov
scas
fcom
dec
ins
pop
das
sbb
fadd
pushf
aas
jb
in
push
dec
push
enter
aaa
push
cmp
lods
adc
std
mov
mov
lea
std
or
xor
cmp
sar
call
gs
addr16
inc
repz
pop
ror
dec
dec
cli
sahf
int
je
or
inc
shl
add
xchg
add
inc
mov
xchg
rcl
inc
das
repnz
call
and
adc
cmp
mov
xor
inc
or
fmul
dec
fadd
fisttp
push
fisttp
addr16
test
pusha
ret
jg
scas
pop
adc
cmp
jno
imul
(bad)
(bad)
jns
out
xchg
dec
lahf
outs
movs
enter
inc
cli
movs
js
adc
ret
dec
dec
loopne
or
push
test
shr
(bad)
pop
fwait
pop
sahf
or
mov
imul
mov
cmps
mov
cli
mov
sub
neg
std
pop
add
dec
mov
mov
cmp
sbb
sti
adc
adc
xor
pushf
jge
cmp
js
mov
jno
sar
in
dec
sub
jmp
pop
pop
out
adc
xchg
mov
ficomp
hlt
cmp
mov
ins
inc
test
ret
jp
jge
cmp
xor
sub
scas
push
pop
icebp
shr
into
outs
js
aam
mov
bound
jl
outs
sbb
jns
gs
adc
xchg
or
pusha
loope
pop
stos
addr16
mov
pop
sub
adc
or
div
pusha
daa
or
jno
lea
jge
pusha
jns
push
dec
rol
mov
jle
sbb
inc
sbb
mov
jne
jmp
add
repz
mov
imul
mul
cmp
jle
fld
dec
pop
cmp
sub
and
test
push
and
xlat
xchg
and
or
stc
in
fsub
jl
pop
loopne
lahf
inc
mov
jle
stos
jmp
cdq
dec
push
cmps
(bad)
mov
aam
mov
fyl2xp1
cmp
cwde
ss
mov
mov
aaa
add
xchg
cmp
lahf
cmp
pushf
cmc
and
mov
scas
push
xchg
mov
inc
cmp
or
inc
dec
daa
mov
mov
inc
(bad)
ins
pop
les
(bad)
gs
add
sbb
mov
mov
out
sbb
data16
loopne
ins
cmp
push
lea
rcl
inc
mov
xor
xchg
inc
sbb
xchg
or
pop
push
arpl
mov
or
out
inc
adc
jmp
add
xchg
fist
xor
nop
mov
dec
jae
js
pop
add
mov
inc
dec
out
cmp
je
push
ins
inc
stos
sbb
in
call
xchg
jae
arpl
loopne
xchg
push
ds
enter
leave
pop
iret
int
repnz
(bad)
pusha
sahf
or
dec
xor
push
je
outs
add
pop
cmp
inc
ret
je
mov
aas
inc
sub
scas
mov
jle
and
sbb
jne
int
sub
push
hlt
xchg
mov
stc
sub
jecxz
jnp
jl
ds
and
fstp
jns
jge
inc
jb
push
push
jle
jl
test
loopne
in
inc
not
lock
fld
lods
cwde
jb
lea
arpl
or
push
pop
mov
inc
(bad)
out
ja
fisttp
popf
inc
test
les
sti
sub
in
jne
pop
ins
sbb
neg
call
push
jno
inc
loopne
or
ins
cmp
xchg
adc
(bad)
mov
dec
push
and
lahf
bound
ret
xchg
mov
cmp
mov
push
jbe
das
idiv
push
jns
dec
sub
xor
js
mov
push
pop
cs
dec
popa
pop
add
cmps
pop
push
fcomp
cmp
popf
dec
pop
jo
sub
xor
mov
cmc
mov
cwde
in
push
cli
jmp
test
jne
sbb
sti
cwde
adc
or
push
adc
loop
and
cmp
sbb
sub
stos
jnp
jl
or
push
aad
jmp
aaa
inc
add
rcr
mov
mov
nop
mov
add
inc
jmp
int
xlat
push
fadd
mov
mov
add
in
sti
and
jp
mov
(bad)
mov
mov
lods
mov
mov
sar
sbb
or
jecxz
stos
sar
rol
cmp
out
and
sbb
and
xchg
repz
sbb
jle
aas
inc
or
(bad)
scas
rcr
ins
fxch
loopne
dec
mov
adc
aas
stc
inc
out
xor
jb
les
mov
mov
int3
push
into
frstor
cli
sub
inc
mov
inc
jno
pop
cmp
lods
(bad)
shr
cmp
popf
inc
cmps
cmp
dec
or
test
jb
and
jle
pusha
gs
inc
or
(bad)
jb
enter
(bad)
idiv
cmp
dec
stc
(bad)
xlat
pop
hlt
inc
add
outs
xor
loope
add
lea
mov
mov
fisub
dec
inc
mov
fisub
mov
popf
and
cs
sub
fs
pop
add
sub
pop
dec
push
lea
mov
iret
rol
cld
pop
test
test
push
std
ins
inc
sbb
ins
(bad)
cmp
inc
das
in
cmp
and
outs
mov
hlt
sub
cmp
scas
jb
jl
in
xchg
pop
popa
daa
pop
sbb
mov
adc
inc
popa
pop
ret
jnp
inc
std
retf
add
or
mov
enter
loopne
ds
rol
call
push
nop
ds
das
sbb
inc
sbb
add
mov
or
adc
cdq
push
push
or
in
jne
sub
in
pop
adc
inc
rcr
xchg
xchg
iret
imul
ds
cli
aam
sub
ret
xchg
enter
inc
add
xlat
outs
mov
sub
into
stc
iret
ror
cmp
add
loopne
xor
mov
ss
or
cld
cmp
dec
sub
mov
mov
or
mov
inc
jns
jp
mov
popf
adc
hlt
add
es
jmp
stc
lods
mov
call
inc
and
(bad)
out
inc
std
popa
push
les
jnp
inc
cmp
repz
jne
inc
mov
cmc
xchg
mov
jb
inc
dec
pop
stc
ret
pop
pop
dec
test
sahf
cmps
aaa
or
sbb
pop
inc
shr
stc
int3
lods
outs
mov
jmp
jge
(bad)
mov
or
mov
jnp
cmps
or
int3
dec
mov
ds
xor
sub
and
repnz
push
cli
lea
or
xchg
(bad)
and
scas
cmp
dec
ins
cmp
sbb
jl
shl
cmp
mov
pop
push
(bad)
sbb
dec
aas
jle
loope
and
sahf
fadd
retf
mov
fiadd
mov
sub
inc
jno
jmp
cmp
cmps
setge
inc
and
and
ret
shl
mov
adc
adc
jns
fsubrp
retf
or
mov
dec
xlat
dec
cmp
or
or
cmp
mov
pushf
push
xor
jmp
cmc
ret
sbb
inc
adc
inc
movs
xchg
mov
xchg
and
mov
cdq
sbb
sub
dec
fdivr
and
jg
or
test
iret
cmp
hlt
inc
(bad)
fstp
push
mov
bound
rcr
je
and
imul
sub
or
sbb
sub
adc
aam
mov
call
push
aad
data16
push
inc
inc
sti
fs
cmp
fisub
cmp
push
mov
cwde
scas
inc
sbb
jmp
std
inc
scas
mov
popf
cli
cmp
xlat
mov
inc
mov
and
sub
invd
and
mov
inc
je
sbb
(bad)
pop
mov
stos
mov
ins
push
scas
call
sub
jbe
test
jnp
movs
sbb
icebp
inc
adc
in
mov
out
cmp
pop
mov
inc
xlat
adc
mov
push
addr16
mov
mov
mov
test
xchg
mov
inc
test
jecxz
jl
sti
mov
cs
inc
test
add
lea
pop
mov
cmp
loopne
or
ja
jnp
daa
and
mov
fs
mov
mov
adc
ret
mov
jmp
loope
stc
inc
add
push
mov
sbb
inc
add
sti
fucom
out
not
sbb
mov
inc
bound
mov
push
stc
retf
cmc
sub
lock
xor
cmp
cmps
sbb
cmp
es
pop
retf
add
push
push
jmp
dec
cmp
movs
pusha
inc
mov
mov
pop
sar
xchg
mov
xchg
push
cmp
jle
adc
mov
mov
mov
sub
jge
je
jne
pop
inc
jecxz
out
sub
mov
adc
(bad)
and
stc
jno
xchg
and
fldenv
sahf
ret
fnsave
dec
outs
fcomp
jno
clc
push
fs
test
xchg
fst
ins
inc
mov
cmp
lods
mov
shl
enter
sbb
jl
ds
(bad)
cld
gs
js
pop
adc
jno
xchg
xor
mov
rcl
cs
rol
mov
mov
jmp
test
loopne
or
mov
cmp
fs
clc
sahf
mov
or
push
push
loope
push
sbb
and
je
cdq
loopne
jge
or
repz
shl
xchg
sahf
adc
and
fcom
jns
xchg
pusha
leave
dec
add
dec
xor
sub
sbb
cmp
xor
mul
enter
xor
cmp
(bad)
mov
ror
dec
aas
sub
mov
jg
(bad)
push
cmp
mov
bound
cmc
jg
mov
retf
nop
push
std
jp
in
test
push
pop
dec
fdivr
inc
inc
outs
retf
add
in
lock
adc
retf
lods
jmp
bound
pusha
adc
jge
cs
pop
mov
inc
xor
mov
mov
retf
cld
jae
jge
adc
push
push
(bad)
imul
into
and
jge
sub
push
mov
loop
inc
in
jge
pop
dec
pop
mov
jno
in
rcr
shr
mov
mov
call
pop
xor
sbb
dec
pusha
sub
xor
add
mov
aam
call
inc
cli
sbb
mov
cli
xor
wrmsr
test
out
dec
mov
mov
add
fxch
bound
push
cli
mov
xchg
sbb
les
xor
(bad)
jns
ds
sub
xchg
fidiv
cmp
mov
sti
pop
cmp
push
push
xchg
stos
repnz
cld
xchg
cdq
add
or
xor
outs
inc
push
fucomi
mov
sub
cdq
fcmovb
pop
and
push
cdq
inc
fs
and
lods
add
pop
dec
mov
mov
cli
push
sbb
in
nop
imul
sahf
cmc
and
pusha
jns
push
or
fcom
cmp
and
pop
xor
(bad)
les
sbb
add
repnz
add
stos
push
outs
ds
pop
inc
jo
mov
mov
adc
out
lock
push
sub
inc
xor
mov
(bad)
rol
pop
sahf
mov
jnp
stc
and
cmps
shr
pop
das
dec
lahf
jl
mov
sub
jno
jo
xchg
clc
dec
pop
pop
inc
mov
fdivr
rcl
pop
test
popa
sbb
outs
in
loope
aam
cmp
ret
xchg
lock
dec
mov
pushf
sub
pop
push
out
xchg
repnz
jmp
sub
cmp
mov
das
out
(bad)
shr
into
jno
xor
add
pop
mov
inc
gs
fcmove
adc
gs
shr
cmps
mov
and
sub
imul
jns
push
cmc
jmp
push
ins
mov
bound
pop
nop
mov
imul
pop
test
adc
jns
or
pop
push
sbb
daa
dec
sbb
icebp
push
and
jle
sahf
sti
xchg
sub
adc
dec
mov
add
jnp
jns
jmp
pop
jno
sbb
pusha
scas
jge
nop
inc
and
ror
loope
inc
fs
cmp
and
or
out
loopne
and
mov
push
call
mov
out
mov
movs
cmp
and
clc
call
jp
or
cmp
in
into
or
sbb
(bad)
fcomp
and
fstp
stos
in
push
addr16
into
fld
sub
jmp
push
in
imul
push
jns
inc
mov
xchg
inc
cmps
ss
add
(bad)
mov
pusha
test
jl
rcl
in
xchg
sbb
leave
push
and
cmp
rcr
outs
cmp
sbb
or
pop
cmp
jnp
pop
ret
in
mov
mov
enter
call
push
pop
pop
movs
clc
out
jle
jbe
push
adc
inc
mov
push
shl
xor
out
push
cli
adc
loopne
loope
sub
ror
pop
and
cmp
sbb
inc
mov
repnz
sbb
ja
dec
or
icebp
fs
(bad)
cmp
jb
add
adc
sbb
dec
jle
aam
add
and
les
arpl
inc
jo
mov
push
out
push
inc
enter
bound
sbb
ret
inc
outs
jnp
outs
add
in
mov
cmp
cli
cmp
test
sub
stos
mov
popa
gs
sbb
vpaddw
xchg
push
enter
cmp
push
inc
out
add
(bad)
sbb
mov
and
adc
cmp
cmp
mov
test
pop
lds
rol
or
cmp
inc
es
jnp
shl
cmp
(bad)
clc
ss
mov
(bad)
mov
sub
add
cmp
push
sbb
jnp
fstp
xor
mov
dec
sbb
enter
rcr
mov
mov
mov
out
xchg
mov
pop
mov
mov
mov
and
js
lods
jo
dec
lods
pop
loopne
or
fadd
mov
outs
add
jns
mov
mov
jb
movs
pop
aas
mov
pop
js
sahf
jp
ret
(bad)
cmp
sbb
or
adc
mov
push
fisubr
mov
and
(bad)
adc
xor
lods
mov
data16
scas
cmp
ins
clc
jp
ret
or
aas
cs
aam
int
inc
mov
retf
sub
out
cmp
inc
sbb
push
xlat
inc
aam
test
mov
mov
gs
or
jmp
cmp
in
inc
daa
mov
aas
leave
lahf
popf
xor
mov
sti
fs
xlat
xor
push
or
stc
sub
icebp
and
mov
fs
or
adc
adc
cld
push
inc
adc
lock
and
cmp
imul
fs
int
jge
cdq
mov
jne
cmp
div
inc
leave
push
inc
xchg
lahf
mov
inc
inc
test
int
mov
adc
sbb
cmp
xor
int
adc
jp
xchg
popa
xchg
pop
adc
add
fbstp
test
xchg
cmp
xchg
xor
cwde
cmp
xlat
pop
mov
cmp
scas
mov
jae
inc
sbb
jg
push
inc
mov
aaa
repnz
xor
int
ss
ins
sbb
mov
pop
js
mov
ror
cli
push
dec
nop
inc
lahf
mov
call
inc
cmps
xchg
lock
cli
inc
ins
scas
push
sbb
ret
cmp
and
pop
enter
int
pop
mov
lea
clc
xchg
lds
paddsw
cmp
aam
add
adc
scas
xchg
pop
adc
js
les
ja
pop
xor
int
(bad)
pop
jns
iret
lea
add
fsubr
movq
outs
jge
or
jb
pop
mov
jge
retf
cmp
dec
sbb
shl
xor
sub
cmp
imul
or
mov
or
leave
mov
jns
ds
jp
and
daa
and
push
cmp
and
(bad)
dec
pop
adc
out
imul
sbb
push
in
aas
push
outs
sar
fisttp
cmc
dec
cmp
push
pop
inc
push
lds
int3
pop
test
add
inc
mov
sub
inc
mov
and
pop
xchg
movs
mov
stc
loopne
sbb
push
cmps
cmp
adc
int3
out
(bad)
cmp
sub
sti
mov
(bad)
leave
test
aaa
idiv
lods
sbb
test
inc
sub
mov
ja
xor
adc
test
inc
add
pop
repz
je
mov
imul
inc
ds
jnp
in
cmp
dec
jae
pop
test
ret
or
push
nop
fdiv
loop
mov
jmp
cmp
add
stc
movs
popa
mov
cld
clc
iret
cmp
mov
cmp
mov
adc
rcl
xchg
stos
cmp
icebp
xor
mov
inc
jbe
jp
cmps
cwde
jg
inc
ins
retf
fwait
cmp
jmp
jns
call
sar
adc
lahf
inc
xchg
jbe
add
in
inc
mov
fdivrp
ret
test
or
add
fcmovb
loopne
jmp
cmp
mov
push
dec
cmp
fidivr
push
adc
mov
popa
lds
ins
jb
sbb
inc
lods
push
lock
or
call
mov
cmp
div
in
inc
(bad)
icebp
int
xchg
mov
ins
pop
ficom
rcl
inc
addr16
and
cmps
test
imul
inc
retf
dec
and
xchg
sbb
jbe
ds
xchg
pop
pusha
stc
xlat
fild
cmp
push
loope
xchg
sahf
mov
gs
test
stos
cmp
cli
int
loopne
pop
imul
retf
xor
cmp
jae
sub
xchg
cmps
test
add
pop
das
pop
sub
sbb
xchg
cmp
sbb
int
(bad)
rol
or
popa
jg
in
int
in
dec
ins
push
pop
inc
mov
mov
ror
sbb
ss
cs
jmp
mov
div
fwait
or
shl
xlat
mov
movs
(bad)
sub
pop
jmp
icebp
jnp
push
push
inc
xchg
mov
sbb
lods
aas
fdivr
je
push
ja
rcl
xor
xlat
ret
or
sbb
cli
out
add
ds
inc
ficomp
sub
mov
ds
mov
and
je
inc
call
test
sub
or
and
nop
jmp
mov
mov
int
fisub
ret
and
or
sub
adc
dec
jle
inc
pop
cmp
call
sub
lea
sbb
sti
push
aam
les
adc
xchg
test
inc
or
jge
ins
dec
mov
out
jns
(bad)
xor
sbb
mov
shl
ins
jbe
enter
inc
je
push
mov
ficom
arpl
aas
aam
and
jbe
push
fadd
popf
jns
add
loop
inc
in
pop
clc
movs
xor
dec
nop
mov
ja
xor
lds
pop
loop
inc
xchg
rcl
loopne
fldenv
arpl
push
icebp
inc
ss
xchg
cmc
aaa
in
mov
pop
and
mov
mov
pop
outs
jae
movs
sahf
mov
push
imul
hlt
push
loope
frstor
pop
push
cmp
(bad)
sub
dec
cld
(bad)
add
adc
mov
jge
ds
mov
mov
inc
dec
xchg
ret
sub
idiv
cdq
or
fimul
cli
setge
add
push
jmp
aam
inc
fcom
jns
push
das
ror
push
je
arpl
mov
inc
nop
pop
cmc
or
loop
cmp
xchg
jns
jge
sbb
push
inc
aad
call
or
fiadd
cmp
jmp
stc
push
pop
inc
hlt
loope
(bad)
std
sbb
enter
icebp
cmp
sbb
fadd
pop
call
cmp
test
push
cmp
add
mov
enter
jecxz
push
iret
lds
test
(bad)
sbb
jbe
int3
neg
inc
retf
add
push
add
popa
cli
sub
pop
sbb
inc
add
push
dec
adc
std
inc
xchg
push
and
push
ins
push
cmp
add
hlt
add
pop
dec
pop
retf
das
push
xchg
cmp
cmp
aam
push
xlat
jmp
loopne
int3
out
ds
stc
mov
movs
xor
push
add
pop
hlt
int
(bad)
es
push
add
xchg
inc
lods
cwde
mov
mov
xor
push
retf
or
test
jecxz
rcl
dec
pop
inc
xor
add
cmp
jge
cmps
(bad)
into
jl
mov
pop
iret
test
icebp
push
push
(bad)
jo
jle
bound
dec
fcmovnu
aas
push
loop
retf
nop
sub
movs
cmp
push
lods
mov
dec
add
dec
stos
xchg
out
pop
add
cmp
dec
sub
ss
clc
repz
ins
test
inc
fucomp
ret
stos
fucomip
xor
mov
(bad)
fld
jle
dec
push
test
xor
pop
dec
lds
(bad)
sbb
mov
cmp
xchg
in
inc
and
iret
imul
gs
addr16
shl
and
sub
out
or
stos
(bad)
mov
and
loope
mov
sbb
test
mov
inc
retf
fsubp
movs
pop
inc
adc
jnp
sbb
mov
xchg
lds
(bad)
cli
xchg
(bad)
cld
cmp
lods
out
cmp
inc
add
js
jno
inc
ret
ret
mov
cwde
inc
sti
push
nop
loop
cmp
(bad)
icebp
mov
mov
xchg
sti
xlat
sub
xor
push
xchg
out
pushf
pop
add
pop
mov
or
shl
add
inc
sub
imul
jns
mov
test
sti
xor
pop
sahf
dec
mov
inc
pop
and
int3
enter
fs
sbb
dec
sbb
jmp
mov
into
mov
cmp
sti
in
out
ds
pop
push
(bad)
xor
(bad)
pusha
lods
inc
push
push
sar
aas
or
scas
fdiv
stc
xor
ret
(bad)
fstp
push
jo
or
inc
retf
cli
mov
stos
dec
mov
push
out
stc
je
mov
add
jno
sti
mov
jmp
ror
xor
jle
dec
mov
enter
sub
enter
xor
out
in
data16
xchg
mov
mov
inc
sahf
or
cmp
cmp
jns
cmp
outs
sub
pop
scas
rcr
push
add
aas
xor
push
inc
outs
sti
jl
lahf
ss
xlat
(bad)
fisubr
cli
mov
or
mov
fstp
popf
(bad)
(bad)
cmp
mov
cld
inc
push
and
cmp
dec
cmp
xchg
arpl
mov
add
out
pop
loope
cmp
cmp
sub
mov
jge
sbb
push
push
aam
jl
add
shl
retf
aas
in
mov
test
xor
xchg
out
xor
and
cwde
(bad)
push
pop
cmp
daa
or
or
gs
sbb
lods
mov
adc
in
jmp
xchg
jno
ja
jge
mov
or
jno
retf
push
pop
scas
xor
stos
popf
xchg
(bad)
stc
xchg
(bad)
sub
sbb
inc
add
jmp
jmp
hlt
in
(bad)
cmp
and
stc
je
inc
mov
adc
stc
mov
sub
adc
cdq
pop
js
xchg
daa
fnstenv
jno
test
ret
mov
mov
push
pop
dec
cmp
icebp
ds
fcmove
std
stc
retf
fdivr
ds
into
ins
or
inc
sahf
mov
jns
adc
rcr
jbe
sub
xor
jns
out
adc
sbb
cmps
out
inc
adc
dec
ror
cli
in
jno
mov
test
cmp
jno
xchg
cmps
mov
(bad)
xchg
lahf
mov
jmp
push
sar
xor
mov
mov
inc
jns
mov
xchg
xchg
mov
and
sbb
xchg
jle
add
mov
pop
ins
data16
lods
mov
outs
movs
push
(bad)
js
jbe
rcr
aas
retf
dec
adc
sar
cmc
push
mov
sub
cmp
pop
fs
inc
jbe
jae
or
push
mov
xor
jbe
jecxz
push
xor
inc
sbb
inc
pop
push
mov
inc
mov
call
cmp
les
inc
push
lods
inc
fimul
inc
cmp
inc
scas
jno
nop
mov
push
push
push
loope
mov
cmp
mov
out
push
dec
push
cmp
fidiv
jmp
div
push
ret
hlt
jecxz
jae
mov
jmp
mov
mov
mov
push
bound
cmp
mov
sbb
adc
jb
pop
dec
ss
push
scas
sbb
push
loop
mov
cmp
xlat
or
repnz
sub
bound
retf
cli
imul
sbb
sub
outs
xchg
dec
(bad)
mov
imul
sbb
(bad)
stc
jbe
imul
xchg
sbb
and
cld
int
iret
cmp
clc
in
xchg
cmps
icebp
inc
mov
sub
jmp
in
fstp
inc
sbb
and
jle
je
enter
out
cmp
fisub
push
pop
imul
adc
loope
adc
(bad)
fild
mov
jmp
in
sub
out
dec
adc
pop
mov
mov
inc
push
scas
std
aas
jmp
mov
mov
push
mov
rcr
daa
xor
clc
lds
inc
mov
jns
pop
inc
int
ins
jp
xor
ret
enter
inc
shr
loope
in
cli
retf
pop
jo
inc
inc
push
(bad)
mov
xor
add
pop
inc
cmps
cmp
mov
jecxz
out
out
sub
mov
cmc
bound
cmp
(bad)
inc
inc
xchg
popf
sub
ficomp
or
jo
sahf
sti
push
movs
cld
fucomi
pop
(bad)
mov
pop
pushf
push
test
sub
or
push
jne
sub
xchg
leave
xor
pop
enter
jmp
push
and
or
outs
add
outs
cmp
and
cli
lock
int3
inc
and
sbb
cs
fxch
(bad)
rcr
xor
lds
aad
lock
dec
mov
nop
popf
shl
cmp
das
ja
sbb
mov
xor
sub
mov
cdq
cmp
xlat
leave
loope
bound
popf
pushf
sub
sub
or
inc
mov
rol
cmp
pop
pop
cmp
xchg
addr16
sub
aas
pop
jns
inc
mov
xchg
cwde
add
or
lds
out
rol
dec
add
mov
outs
in
stos
ror
fs
cmp
pop
inc
dec
in
jmp
dec
fimul
or
fcomip
add
(bad)
inc
adc
dec
mov
jmp
mov
inc
dec
xchg
mov
pop
inc
and
bound
es
(bad)
xchg
xchg
sbb
dec
js
lods
xchg
call
sti
das
jmp
xchg
jmp
dec
je
lods
mov
aas
ja
xchg
jae
mov
jl
test
mov
pop
mov
es
fcmovbe
getsec
ror
push
sbb
cmp
jne
mov
shl
mov
add
adc
outs
xchg
js
jmp
fdivr
add
sbb
pop
inc
call
cmc
test
pop
jle
jge
lods
push
sub
push
fdiv
pop
pop
fcmovbe
les
stos
cmp
mov
and
jmp
xchg
xchg
jo
(bad)
jmp
ins
push
ret
and
or
xor
ds
and
and
or
in
jmp
out
jecxz
lock
shl
stc
int
xchg
mov
pop
push
outs
add
dec
adc
mov
cmp
icebp
jno
xlat
dec
fmul
in
imul
gs
cmps
add
mov
jno
(bad)
mov
add
sub
sti
pop
popf
sub
ds
cmc
dec
jmp
mov
and
sbb
(bad)
jl
retf
xor
inc
mov
popf
fs
xchg
mov
inc
pop
dec
cmp
pop
loop
sbb
mov
fwait
jge
inc
sbb
popa
loopne
pop
nop
ds
iret
pop
call
rol
cmp
js
repz
lahf
sub
add
ds
push
xor
sbb
or
adc
xchg
push
stc
pusha
mov
call
mov
(bad)
fld
ffree
dec
pop
aas
iret
test
shr
xor
mov
xchg
mov
xchg
mov
xor
sar
inc
sub
xchg
adc
push
pop
sbb
xchg
ja
ds
sti
jo
inc
mov
pop
into
sub
jle
cwde
or
imul
mov
xchg
hlt
retf
push
push
mov
std
adc
xchg
test
jae
adc
daa
adc
xor
xchg
push
xchg
test
cmp
jmp
dec
pop
stc
lods
setp
fdivr
push
pop
cmp
in
das
hlt
mov
cmps
(bad)
xchg
repnz
jns
jmp
test
ret
push
pop
adc
sbb
jmp
xor
addr16
das
adc
fnstenv
or
mov
cmp
push
test
or
idiv
mov
kmovw
cmp
xor
xchg
cmp
ret
clc
out
jo
jp
or
adc
sub
inc
pop
dec
jb
inc
test
repnz
pusha
jp
mov
xor
(bad)
mov
inc
test
push
dec
cmp
repnz
int3
push
cmp
adc
ds
or
inc
je
jl
sub
retf
push
(bad)
dec
jb
inc
sub
mov
push
sub
je
repz
pop
outs
push
inc
gs
test
repnz
mov
inc
(bad)
loope
shr
ret
stc
xchg
sub
or
(bad)
sub
adc
cmp
dec
push
and
cs
inc
inc
gs
inc
mov
dec
pop
rol
pop
popf
mov
inc
and
ret
push
fs
nop
mov
push
push
pop
push
jno
mov
add
dec
sahf
mov
inc
sbb
neg
nop
dec
mov
js
inc
inc
out
mov
push
test
(bad)
fisubr
push
inc
(bad)
repnz
test
fst
xchg
(bad)
dec
(bad)
shl
outs
test
mov
push
cmp
stc
jb
int
sar
and
dec
nop
sbb
fistp
adc
xchg
dec
into
mov
inc
cs
pushf
dec
rol
sbb
fnsave
adc
sti
sub
jmp
ins
std
in
sub
or
mov
or
mov
sub
imul
ds
adc
xor
mov
mov
ja
jmp
xor
add
(bad)
shr
xchg
cs
jns
pop
mov
(bad)
and
inc
dec
or
idiv
jecxz
push
(bad)
mov
jno
les
push
sub
jns
fld
nop
xchg
mov
push
and
mov
sbb
fwait
jb
jmp
movs
and
rol
outs
xchg
add
stos
adc
push
pusha
out
stc
push
sub
out
push
out
jge
sub
fs
rcl
ins
cmp
inc
jle
aad
sbb
bound
imul
mov
mov
out
fdivr
loope
cmp
adc
dec
push
or
arpl
shl
icebp
aas
inc
or
or
pop
inc
repz
mov
out
inc
jb
xchg
mov
push
jp
pop
outs
fcos
into
sahf
jno
jno
adc
inc
cmp
loope
sub
nop
add
sbb
leave
mov
fadd
push
mov
pop
fcmove
ins
cmc
loop
and
and
test
jne
adc
outs
test
pop
inc
mov
sub
call
ins
pop
inc
push
iret
into
jecxz
cli
push
sbb
(bad)
cmp
cmp
sbb
cmp
or
pop
jne
xor
(bad)
mov
movs
pusha
mov
std
mov
(bad)
aad
mov
push
fdivr
or
test
scas
idiv
mov
cmp
dec
or
mov
sbb
or
jo
add
aas
pop
cld
pushf
or
adc
cmp
nop
int
dec
sbb
adc
(bad)
rcl
and
ds
xchg
inc
addr16
mov
mov
push
outs
(bad)
shl
mov
nop
inc
sahf
mov
pusha
inc
imul
xchg
mov
cmp
cld
loopne
inc
push
or
sbb
dec
adc
push
or
mov
pop
mov
mov
inc
das
stos
jmp
or
adc
sar
xor
std
jmp
pop
inc
push
cmp
in
idiv
popa
rol
dec
cmp
and
dec
pop
enter
or
jns
rol
jg
std
inc
leave
add
xor
and
repz
inc
and
out
sbb
(bad)
rol
xchg
xchg
mov
pop
dec
pop
adc
leave
sar
test
stos
aaa
mov
shl
sub
push
mov
or
das
sbb
push
aas
inc
mov
enter
mov
nop
sub
xchg
mov
add
loopne
cmc
ins
push
mov
iret
cmp
cmp
jno
push
jns
les
jmp
cmp
mov
cmp
clc
test
adc
outs
repnz
sub
push
pop
pop
icebp
sbb
pop
mov
mov
or
xchg
fs
push
lods
lea
jns
ret
push
jns
add
(bad)
xchg
add
stc
add
or
cmp
add
mov
pop
data16
jne
cld
popf
mov
push
fisub
call
cdq
cwde
push
sar
rol
xlat
repz
fnop
xchg
adc
add
push
pop
push
cli
sbb
(bad)
jle
sub
jg
mov
adc
cli
sub
or
and
std
dec
sti
pop
(bad)
call
movs
cmp
test
(bad)
inc
mov
adc
mov
sbb
inc
adc
xchg
cmps
xor
inc
gs
test
pop
jo
jmp
loop
(bad)
or
mov
inc
lahf
gs
push
lods
cwde
inc
inc
push
xor
mov
dec
inc
jg
(bad)
outs
inc
or
div
inc
les
dec
sbb
imul
mov
sahf
or
fs
pop
mov
or
inc
aam
fdiv
xor
push
adc
and
or
sbb
mov
or
dec
sbb
pusha
movs
mov
(bad)
dec
imul
and
jp
mov
icebp
adc
mov
stos
ins
jle
cmp
scas
cwde
sbb
sbb
aad
mov
std
inc
jae
xchg
(bad)
push
(bad)
jecxz
cdq
enter
jge
pusha
inc
int3
or
adc
sbb
lods
test
and
fimul
shl
(bad)
pop
into
inc
ins
outs
sub
lods
nop
imul
inc
inc
jle
or
imul
mov
int3
jg
jmp
mov
test
stc
push
sbb
test
pop
or
out
jp
jns
in
out
out
or
cli
cmp
js
lods
mov
movs
pop
cmp
jno
arpl
mov
adc
test
bound
aaa
pop
retf
jnp
icebp
leave
pop
aas
cmp
fs
mov
sub
test
loope
cmps
outs
addr16
cmp
jno
and
mov
dec
mov
lods
push
sbb
loopne
or
jle
jno
and
mov
mov
outs
xor
adc
adc
pop
jno
sbb
dec
sub
fist
mov
ret
push
xchg
jg
cmp
div
enter
cmps
clc
push
pop
out
rcr
retf
mov
cdq
jmp
add
popf
imul
mov
push
and
mov
or
sbb
xchg
dec
xor
jns
bound
jge
dec
jno
mov
cmp
outs
mov
(bad)
adc
dec
test
in
xchg
inc
push
sub
das
xor
ja
mov
inc
fs
jg
pop
mov
stc
sar
mov
cs
loopne
xor
mov
pop
mov
sbb
add
adc
mov
adc
retf
sahf
jle
outs
sub
(bad)
cmps
mov
mov
sbb
mov
or
pop
pop
dec
mul
dec
sbb
cmp
dec
fsubr
jle
xor
pop
adc
inc
ret
jg
out
test
push
stos
(bad)
fsubr
repnz
inc
lods
pushf
pop
test
jmp
or
ja
push
inc
mov
push
jl
pop
call
out
push
test
jnp
fld
xchg
jae
not
loop
dec
dec
pop
repz
or
inc
pop
inc
ret
shr
in
inc
lock
jne
sub
cs
lods
repnz
dec
aad
fimul
push
loopne
fld
jp
inc
mov
adc
mov
or
mov
(bad)
ds
dec
inc
movs
jl
inc
dec
mov
test
or
jle
jbe
sahf
pop
ret
fidivr
jns
scas
mov
loope
repz
mov
pusha
cmp
xor
dec
addr16
and
mov
push
add
mov
imul
cmp
adc
xchg
je
dec
adc
push
add
mov
pop
cmp
mov
push
leave
fdivr
and
adc
or
sbb
xor
add
sbb
test
(bad)
pop
popa
loope
jge
and
mov
sub
fbstp
xchg
or
adc
mov
daa
sub
jge
sti
cmp
add
adc
mov
loope
and
xor
loopne
xchg
jle
popa
or
mov
push
stc
ss
jns
jg
pop
jmp
mov
push
push
aad
jbe
xchg
jns
out
rol
xchg
jns
xor
jge
jg
nop
mov
xchg
adc
not
and
setle
cli
into
out
cld
(bad)
sti
push
sub
mov
scas
repnz
in
sbb
jl
lea
pushf
aad
pop
out
sub
sub
das
leave
cdq
ds
iret
int3
pop
ss
cmc
push
imul
sbb
shl
dec
mov
in
or
lar
dec
push
inc
xor
push
dec
push
aaa
sub
imul
xchg
push
add
leave
or
loop
and
jecxz
inc
std
rcr
mov
adc
or
lea
mov
movs
add
xlat
cld
or
sti
aas
or
hlt
dec
push
inc
nop
cmps
sahf
lods
(bad)
mov
out
and
stos
inc
jo
stc
or
repnz
jns
das
add
xor
push
xchg
add
inc
sub
cmp
mov
xchg
in
or
mov
mov
imul
(bad)
(bad)
shl
xchg
cmps
les
sub
xchg
icebp
xor
out
fs
cmp
mov
inc
scas
mov
pop
inc
je
shr
xchg
std
cld
xchg
(bad)
fidivr
cdq
inc
inc
mov
ja
cmp
or
sbb
add
mov
or
(bad)
mov
stos
inc
aas
les
ret
xchg
loop
es
lds
jno
movs
mov
je
inc
adc
imul
enter
cmp
pop
out
cmp
inc
clc
xor
call
sti
ins
stos
(bad)
ror
popa
mov
inc
sub
aaa
aad
or
xor
adc
mov
retf
or
adc
aad
mov
mov
das
inc
lods
icebp
mov
cmps
cld
test
stc
or
(bad)
cmp
or
add
pop
dec
stc
adc
aad
nop
mov
cmp
js
mov
imul
and
and
push
bound
cs
fld
mov
mov
enter
cmp
sub
adc
push
xlat
in
or
cli
in
pop
xor
mov
adc
inc
push
xchg
arpl
cmp
push
jge
ds
lea
xlat
call
sti
or
cwde
push
cmp
pop
jne
jns
not
xor
add
inc
jno
cmp
add
sbb
test
push
sti
iret
xor
out
ret
mul
inc
dec
rol
sbb
mov
inc
dec
test
cld
mov
loopne
retf
add
jmp
popf
inc
std
dec
sbb
inc
sub
mov
dec
cmc
jmp
mov
shr
pop
push
inc
add
ret
es
inc
push
xor
and
jo
inc
mov
xchg
rcl
call
pop
mov
ret
popa
or
sti
mov
sar
ret
add
inc
xor
movs
test
pop
rol
mov
out
jecxz
out
xchg
clc
(bad)
cli
jns
adc
gs
sbb
arpl
push
push
xlat
div
shl
add
add
pushf
inc
call
rol
xchg
pop
xchg
push
inc
xchg
mov
aam
fmul
arpl
dec
sahf
leave
pop
mov
sbb
push
inc
jbe
or
xor
adc
loopne
lea
cmp
repz
inc
jle
jne
jp
stc
fld
pusha
dec
pop
enter
comiss
jns
and
je
pop
mov
xchg
inc
sbb
ds
push
xchg
les
shl
sub
pusha
iret
sub
sbb
adc
xchg
aas
dec
push
inc
stos
mov
fxch
pop
nop
dec
cmp
inc
cmp
idiv
cmp
(bad)
xchg
inc
inc
pop
push
stc
and
mov
sub
nop
sbb
cmp
jae
das
rcr
mov
sub
aas
adc
cli
arpl
enter
ror
mov
fistp
dec
inc
mov
xor
push
lds
mov
inc
(bad)
push
mov
sbb
lds
inc
mov
pusha
jbe
(bad)
test
inc
sub
pushf
std
or
and
(bad)
sbb
cmp
ins
lea
sbb
jnp
dec
jg
(bad)
stc
adc
mov
lds
cld
jmp
(bad)
enter
inc
mov
jne
xor
add
repnz
mov
mov
adc
dec
push
adc
popa
test
arpl
jmp
mov
cmp
clc
cmps
cmp
inc
sub
or
dec
or
cmp
icebp
inc
lock
ret
(bad)
in
aaa
pusha
inc
dec
or
fisubr
bswap
(bad)
imul
jo
in
push
aad
in
retf
mov
pop
mov
lods
push
add
cmp
inc
push
jno
in
(bad)
mov
bound
dec
loope
cdq
push
mov
(bad)
lods
xchg
clc
bswap
push
push
lahf
mov
bound
jl
cmp
mov
dec
div
xor
push
cmp
adc
call
push
push
inc
cmp
adc
cmp
pop
push
cmp
shr
ja
xchg
enter
dec
inc
jl
cmp
push
mov
retf
push
inc
push
sbb
imul
cmp
int3
sbb
mov
fmul
add
les
adc
or
and
rol
sub
mov
inc
cmp
jne
pusha
leave
sub
and
ss
es
stos
cmp
add
cmp
cli
icebp
iret
call
add
jb
arpl
out
mov
call
or
cmp
or
jae
sub
int
clc
inc
cmp
pop
dec
dec
pop
stc
cli
(bad)
aam
cdq
pop
jmp
fstp
in
jecxz
inc
inc
fwait
test
movs
mov
mov
mov
mov
call
cmp
sbb
pushf
inc
or
push
addr16
les
jmp
bound
iret
test
ror
outs
cwde
inc
enter
fld
jno
mov
in
add
xchg
sbb
ret
test
inc
mov
fs
aad
jb
mov
nop
out
fstp
inc
(bad)
arpl
cmp
xor
aam
cmp
test
mov
fcomp
sti
enter
popa
cmps
inc
jns
call
int3
outs
jmp
inc
(bad)
jmp
xchg
stos
push
cmp
sti
movs
cmp
dec
mov
test
aad
cmp
call
dec
jl
sub
cmc
in
stos
imul
addr16
pop
mov
pusha
or
and
inc
adc
test
mov
xchg
inc
lods
imul
sar
adc
cmp
sub
test
xchg
stos
retf
xchg
or
cmp
sbb
(bad)
not
popf
loopne
iret
pusha
cmp
call
and
adc
add
add
jp
ret
sub
pop
ret
int
push
iret
sahf
fnsave
mov
retf
xor
arpl
pusha
in
daa
sahf
shl
sub
retf
pop
test
ja
das
pop
or
push
mov
js
push
ss
(bad)
mov
stos
leave
sub
fs
add
jns
mov
(bad)
mov
or
add
ret
jmp
jl
mov
dec
std
ror
das
je
cdq
les
js
inc
mov
in
dec
sub
or
adc
or
mov
inc
pop
xchg
jo
cmp
ret
(bad)
into
sar
inc
push
retf
fadd
and
inc
cmc
jecxz
sub
jl
or
popf
xchg
js
rcr
inc
lahf
iret
out
fdivr
loop
out
xchg
push
movs
(bad)
call
mov
and
jne
aaa
cmc
ret
pop
xchg
outs
push
jb
ss
xlat
loope
adc
dec
jecxz
and
jl
test
inc
ss
aam
(bad)
je
push
cmp
push
data16
cld
repz
fadd
adc
ins
and
ins
xchg
jecxz
add
xchg
adc
mov
xor
pop
sub
and
adc
xchg
mov
ror
mov
lea
sub
movs
pop
jno
nop
jmp
sahf
aad
ss
add
push
push
pusha
cmp
les
scas
mov
adc
pop
jl
retf
les
sbb
jle
les
ins
sub
and
in
mov
wrmsr
inc
shr
sbb
push
jb
lds
jno
push
mov
scas
sub
and
ins
dec
fadd
in
mov
retf
test
je
fidiv
(bad)
fidivr
pop
add
jno
mov
adc
jnp
mov
jmp
jb
push
mov
inc
pop
add
pushf
(bad)
mov
mov
add
and
fdivr
and
mov
aas
jl
sbb
pop
push
jno
push
add
inc
adc
jle
dec
mov
inc
aam
ret
icebp
sub
add
add
mov
jnp
mov
and
out
inc
mov
mov
scas
imul
pop
rcr
stos
jo
inc
inc
push
int3
adc
outs
lods
xor
or
mov
inc
mov
xor
cmp
stc
inc
pop
add
int
push
and
pop
fwait
nop
sub
mov
js
xor
jg
bound
inc
(bad)
push
mov
ficom
inc
inc
jns
stc
int3
(bad)
inc
mov
ret
inc
in
aas
xchg
mov
mov
or
out
(bad)
cli
loope
enter
lock
ja
inc
jle
stos
pop
ret
push
inc
xchg
xchg
(bad)
xchg
daa
div
sti
inc
sbb
arpl
stos
cli
push
gs
ds
fcomp
mov
cmp
cld
jmp
aad
mov
ja
push
add
retf
mov
or
outs
adc
cmp
dec
pop
lahf
inc
mov
pop
add
or
xor
add
pop
jmp
bound
jb
mov
outs
jns
(bad)
jo
pop
jmp
mov
sbb
int
inc
xchg
inc
icebp
adc
push
push
sar
add
push
stos
loope
jae
movs
mov
mov
inc
add
mov
xlat
push
xchg
inc
leave
sub
out
inc
dec
push
inc
pop
imul
sub
push
jmp
test
je
mov
lods
pop
inc
inc
aad
sti
and
int3
inc
pop
std
fbld
cmp
jl
inc
test
or
pop
std
dec
xlat
mov
jae
mov
stc
ret
test
not
imul
pop
mov
adc
(bad)
stc
mov
xchg
jle
sahf
xor
inc
cmp
pop
out
rcl
repnz
call
aas
sbb
mov
cmc
aas
imul
ror
xchg
inc
jmp
push
cmp
push
pop
sbb
stos
stc
fs
adc
stc
cli
sub
dec
movs
ret
mov
cs
xchg
push
sub
iret
pop
jle
aaa
je
mov
in
adc
in
mov
and
and
outs
test
fxch
inc
push
sbb
cmp
aas
or
xor
daa
xor
cmp
pop
inc
jl
jae
mov
(bad)
adc
fldcw
jp
test
cmp
popf
stc
not
in
pop
inc
push
jp
cmps
inc
inc
xor
icebp
dec
pop
sbb
imul
stos
inc
cmp
and
sti
inc
and
fimul
dec
sbb
ds
lahf
add
stc
add
cmps
inc
sub
dec
int
mov
or
mov
push
movs
mov
cli
es
in
mov
jb
jae
adc
mov
inc
int3
cmps
jns
dec
out
dec
jle
jp
movs
xchg
ffreep
inc
(bad)
in
cs
hlt
arpl
mov
inc
xlat
xor
pop
sar
shr
inc
and
mov
or
daa
xchg
jmp
inc
inc
fdivp
ret
jb
push
xor
sub
jmp
xchg
mov
mov
add
adc
cmp
fisttp
popf
sub
inc
cwde
mov
aam
aaa
test
shr
fcom
xchg
fwait
inc
adc
dec
repz
test
inc
add
call
xchg
scas
cmp
cmp
movs
dec
fcmove
xor
inc
mov
lods
cmp
bound
jns
outs
mov
and
jge
mov
inc
cmp
jle
inc
cdq
aas
std
push
int
lds
(bad)
cmp
mov
add
inc
push
jp
or
scas
ins
sub
pop
(bad)
push
leave
mov
dec
jno
and
aaa
scas
mov
inc
add
adc
adc
push
jae
cmp
shr
sub
cmp
psrad
fs
out
cmp
retf
inc
jecxz
mov
xor
mov
ins
jle
inc
cmp
or
or
jo
ds
xchg
or
mov
scas
in
mov
inc
jo
add
xlat
leave
dec
(bad)
rol
mov
cwde
retf
sub
in
and
add
inc
test
mov
hlt
xchg
sbb
mov
push
or
add
test
adc
shl
retf
ds
push
jmp
inc
cmp
pop
or
sub
cmp
sub
or
or
cmp
retf
pop
loope
dec
inc
xchg
sbb
mov
ins
in
sbb
outs
xor
cmp
sub
iret
psubw
outs
inc
xor
inc
add
popa
pop
test
inc
ja
add
stc
or
rol
imul
inc
mov
ins
int3
dec
sbb
cmp
xor
push
cmp
inc
or
dec
pusha
(bad)
(bad)
es
les
add
push
mov
pop
sub
inc
jae
data16
icebp
and
shl
loopne
xor
jne
jmp
pop
in
inc
pop
fcomp
cmp
popa
mov
clc
fisub
mov
jmp
mov
pop
fs
dec
lea
out
rcl
scas
fmul
out
enter
aaa
sahf
inc
lods
stc
stos
sar
pop
cmp
les
inc
cs
inc
stos
inc
push
loopne
daa
or
inc
sbb
lea
add
sbb
or
fwait
push
xchg
cmp
jno
cmp
shr
mov
(bad)
imul
stc
inc
xchg
xor
pop
inc
pop
adc
int
cmp
jno
dec
cmc
(bad)
sbb
inc
cmp
jne
jmp
cmp
jns
retf
sub
jge
pop
cld
aaa
inc
aaa
int
mov
inc
imul
stos
jmp
fistp
jl
pop
pushw
mov
aam
or
cs
jmp
push
or
mov
adc
pop
xor
(bad)
cld
out
hlt
mov
stc
push
sti
mov
pop
mov
push
mov
test
cmp
cwde
jmp
mov
lea
cld
cmp
cs
adc
movlps
mov
idiv
popa
cmp
clc
mov
(bad)
ror
push
int
dec
cmp
sahf
mov
inc
cmp
cmp
pop
ins
fsubr
cmc
inc
mov
jp
sub
je
rcr
jnp
xchg
or
add
sti
stos
cmp
push
add
shl
div
add
into
xchg
mov
inc
pop
enter
les
loope
mov
jnp
lock
fwait
ins
inc
pusha
add
out
lods
pushf
add
cli
jl
(bad)
cld
fwait
inc
pop
sar
or
cmc
jmp
or
dec
xchg
cmp
cmp
sbb
inc
cmp
adc
cmp
mov
pop
push
pop
and
xor
dec
inc
repnz
lock
scas
popf
inc
pop
imul
scas
out
sahf
pusha
and
push
jo
fucom
lods
pop
(bad)
fld
inc
out
(bad)
xchg
push
push
xchg
push
inc
push
aas
lods
cmp
jp
jg
cmps
mov
jmp
inc
repz
fistp
add
or
cmp
pop
and
sbb
push
cmp
xchg
sbb
or
dec
sar
sub
or
inc
cmp
scas
icebp
xchg
inc
pop
ins
or
adc
ds
add
push
xor
or
(bad)
into
jge
cmp
and
cmp
pop
inc
enter
imul
cmp
xor
hlt
repnz
outs
jmp
and
std
imul
add
xor
dec
jae
scas
ror
lahf
bound
stos
pop
enter
jl
add
xor
out
lods
std
popf
fwait
cs
jge
(bad)
ret
dec
cmp
and
pushf
push
cmp
xor
(bad)
std
iret
aaa
aaa
add
pop
inc
sbb
xchg
ins
cmp
push
jns
inc
adc
int3
sar
and
ret
fninit
push
add
jmp
(bad)
fs
cmp
cmp
and
call
or
ins
or
retf
mov
(bad)
jge
jns
push
jl
fld
retf
xor
out
popa
inc
mov
cs
mov
add
mov
fnstsw
shr
leave
inc
rcr
movs
mov
jle
sbb
pop
inc
adc
movs
loopne
and
mov
je
or
adc
push
jl
scas
jo
sub
je
repnz
out
fs
mov
jo
sub
jno
xor
pop
xchg
jmp
pop
mov
mov
(bad)
je
inc
fwait
jo
in
(bad)
fcomp
pop
in
mov
push
popf
xor
aaa
ret
mov
or
scas
and
jne
pop
jno
(bad)
out
or
push
cmp
rol
push
(bad)
sbb
(bad)
pop
iret
mov
dec
push
sar
push
jo
es
fadd
je
mov
retf
push
jno
sbb
cli
mov
nop
call
mov
inc
xor
cmp
fsubr
and
iret
retw
pop
xchg
sbb
sbb
push
out
sbb
xlat
push
mov
icebp
push
rcl
lock
ins
inc
push
jle
js
test
or
inc
adc
stc
mov
xchg
dec
gs
(bad)
jnp
sahf
lock
jge
aas
mov
cdq
cwde
add
jecxz
into
mov
out
shl
adc
xor
cmp
mov
jmp
push
cmp
ret
sti
xor
retf
jmp
(bad)
mov
mov
fbld
push
adc
sub
dec
out
cdq
sbb
lods
sub
enter
(bad)
js
xor
mov
jnp
mov
mov
fnstenv
mov
inc
add
ud0
in
or
out
pop
outs
jle
sbb
loop
dec
shl
adc
out
(bad)
jmp
outs
jle
sbb
daa
and
cli
ret
call
and
mov
iret
mov
sbb
cmp
cmp
call
cs
mov
mov
test
push
inc
or
mov
daa
cld
test
test
nop
mov
mov
mov
xor
sub
cs
cmp
inc
into
out
adc
mov
sbb
rol
push
add
inc
push
xor
leave
push
xchg
sub
xchg
jnp
call
in
imul
jbe
pop
ins
mov
mov
ror
adc
cdq
mov
cmp
ficomp
sub
xchg
and
mov
jl
jno
ja
add
jecxz
cdq
lods
iret
xchg
adc
(bad)
pop
sub
lods
stos
mov
lods
into
pop
or
xchg
in
mov
ins
pusha
jns
mov
cmp
xchg
je
ss
call
push
test
stos
cs
jns
xor
add
retf
dec
nop
xchg
mov
mov
sub
scas
sub
jge
jge
mov
mov
and
fnstsw
stos
sbb
icebp
sbb
inc
xor
adc
scas
xchg
or
(bad)
xchg
div
in
mov
(bad)
dec
jns
loop
and
movs
scas
pop
dec
cmp
test
mov
sub
mov
ret
cmp
mov
stos
dec
xor
aam
push
in
cmp
stos
stos
push
mov
sar
jge
jl
imul
hlt
jnp
cmp
icebp
es
xor
jns
sbb
aaa
cmc
jle
xor
add
lahf
or
cmovnp
add
push
cmp
adc
mov
and
mul
dec
mov
jno
int3
dec
cdq
retf
mov
ss
jns
or
dec
jge
sbb
add
sub
hlt
or
imul
imul
ds
stc
in
cmc
icebp
inc
xlat
stos
push
push
push
jb
imul
xchg
and
or
xor
ds
cs
jmp
cwde
mov
adc
fstp
lea
cmp
jne
sub
inc
test
and
cmp
xlat
jmp
(bad)
cmc
push
mov
bound
daa
sbb
add
mov
xchg
jle
movs
call
pushf
add
(bad)
ja
jbe
mov
idiv
or
xchg
and
dec
call
pop
sar
out
retf
inc
es
stc
iret
addr16
fmul
cmp
jg
dec
pop
xchg
dec
jns
outs
inc
cmp
enter
sti
ins
push
sub
and
jmp
test
in
jmp
sbb
int3
and
scas
leave
pop
mov
arpl
test
and
sahf
(bad)
mov
aas
add
out
jl
cmp
add
fld
sub
mov
jno
mov
and
xor
sar
mov
pusha
push
inc
mov
les
adc
jg
xor
xor
sar
aam
mov
retf
mov
lods
js
pop
mov
inc
test
xor
mov
mov
movs
mov
cmps
addr16
inc
cmp
inc
ins
sub
rol
pop
mov
xchg
xchg
cwde
and
fild
pop
mov
mov
xor
ja
mov
sbb
add
mov
in
inc
xor
mov
loop
cwde
ins
jno
inc
test
cmps
dec
pop
sub
mov
sbb
or
jmp
mov
test
mov
repnz
mov
mov
test
push
xchg
cmp
mov
inc
mov
dec
fmul
and
fbstp
fdiv
cdq
push
push
shr
adc
cld
jo
or
dec
mov
inc
ins
push
add
mov
dec
(bad)
inc
fimul
out
aam
loop
stc
out
pop
jmp
inc
dec
sahf
dec
jl
pusha
inc
sti
jno
sbb
sub
add
xor
sub
mov
cmp
jnp
enter
cld
icebp
shl
mov
mov
xchg
sub
(bad)
icebp
xor
push
mov
rcr
ficomp
nop
jno
pushf
push
jecxz
mov
mov
repnz
lea
fdiv
repnz
je
cmps
sahf
(bad)
or
pop
push
mov
adc
dec
dec
sbb
fimul
xor
mov
test
cmp
sub
mov
cmp
sbb
jge
adc
pop
outs
shl
dec
dec
icebp
sub
stc
cli
leave
test
cld
repnz
jns
mov
out
inc
jbe
stos
xor
dec
into
jns
lods
mov
(bad)
out
xchg
xor
addr16
pusha
mov
and
jno
adc
(bad)
sub
xor
fidivr
arpl
in
xor
es
xor
sub
sbb
clc
inc
sub
stc
adc
inc
int3
inc
push
cmp
dec
xlat
les
cld
sahf
and
add
inc
cmp
mov
imul
mov
push
inc
push
jns
cld
(bad)
(bad)
cmp
mov
jge
inc
inc
mov
sub
outs
push
inc
jp
jb
jmp
push
xchg
enter
shl
ss
mov
inc
sbb
aad
into
ins
mov
cdq
retf
pop
adc
push
into
dec
inc
loope
lock
fxtract
mov
mov
xchg
inc
je
lods
outs
jno
or
mov
xor
loope
jp
or
ja
adc
mov
inc
add
aad
(bad)
div
inc
push
ror
and
mov
push
int3
sbb
inc
push
sub
mov
inc
mov
push
jecxz
pop
add
fsub
neg
mov
sti
push
mov
jno
scas
loopne
xor
fs
pop
mov
mov
sub
int3
dec
dec
hlt
js
repz
sub
imul
pop
and
int3
out
mov
leave
adc
xchg
retf
cmp
stc
out
stc
ds
jae
xor
jb
call
(bad)
in
cs
sbb
sub
(bad)
stc
test
jno
adc
jl
jb
pop
fiadd
dec
sbb
loope
cmp
xchg
sti
jmp
in
push
loope
cmp
jmp
mov
jno
iret
inc
(bad)
pop
out
(bad)
cmps
push
cmp
loope
cmp
mov
xchg
inc
push
push
pop
ror
shl
mov
inc
mov
push
and
out
inc
push
popf
adc
mov
sub
push
xor
(bad)
out
and
loope
mov
stc
bound
sbb
outs
dec
dec
push
cmp
mov
rol
mov
shl
xchg
jne
cli
adc
test
ret
adc
sbb
aad
xchg
mov
sbb
retf
mov
inc
pop
ins
rcl
or
inc
int3
jle
in
inc
bound
stc
inc
cdq
clc
(bad)
and
inc
cmp
mov
sti
inc
popa
fmul
push
pop
aam
add
hlt
push
cmp
shl
sbb
add
in
push
inc
stc
mov
scas
int3
sbb
pop
(bad)
cmp
sbb
inc
xchg
out
pushf
mov
xor
add
imul
ficom
(bad)
aad
pop
idiv
cmp
inc
pop
ins
mov
sub
or
movs
mov
sbb
mov
iret
inc
mov
cmp
icebp
mov
rcr
jg
dec
add
hlt
inc
mov
pop
or
fs
mov
(bad)
std
mov
fcom
js
inc
clc
add
ss
addr16
cwde
inc
mov
test
test
stos
push
add
int3
or
sahf
ds
arpl
out
inc
mov
sub
and
push
into
xchg
mov
xor
inc
aas
inc
jmp
add
imul
mov
ds
inc
imul
in
mov
adc
out
retf
mov
js
cld
xchg
xor
fsub
jmp
or
jnp
sub
inc
cs
mov
mov
mov
cmp
jmp
dec
arpl
retf
in
and
jg
add
adc
xor
pop
dec
push
inc
mov
pop
in
or
sub
sbb
outs
inc
sar
sbb
out
push
push
dec
mov
cmp
cdq
into
(bad)
pop
inc
das
leave
ins
aad
lds
inc
repz
pop
mov
cmp
adc
xor
pusha
adc
inc
ficom
cs
lods
jbe
mov
int3
jb
xchg
cmp
inc
push
lea
rcr
cwde
leave
pop
sub
outs
xlat
inc
inc
(bad)
push
out
cmc
jae
add
xor
imul
mov
std
pop
sub
cmp
gs
jno
sbb
add
cmc
lods
inc
inc
xlat
rcl
pusha
pop
sub
inc
xor
daa
out
mov
pop
cdq
pusha
ss
add
dec
std
pop
mov
push
xchg
rol
data16
sub
jmp
inc
mov
dec
(bad)
(bad)
(bad)
clc
fnsave
int
test
and
cmp
call
inc
das
or
dec
(bad)
inc
cmp
inc
mov
xchg
pop
inc
adc
adc
inc
dec
popa
jns
jmp
pop
enter
inc
mov
mov
push
shl
xchg
ja
ins
inc
mov
outs
cmps
movs
retf
les
lock
xor
fisubr
dec
ds
jle
xchg
push
ret
rol
cmp
into
mov
dec
push
adc
mov
or
dec
dec
dec
ds
imul
cmp
aaa
ficomp
imul
xor
cmp
and
inc
jle
mov
aam
cmp
ror
pop
xor
scas
popf
popa
add
and
test
lods
cli
dec
cmc
push
or
push
movs
xlat
mov
mov
cmp
jns
cdq
push
xchg
leave
cmp
cdq
cli
lds
cmp
gs
in
mov
das
cmp
inc
push
inc
or
(bad)
retf
int3
adc
pop
inc
cmp
mov
pop
hlt
pop
inc
sub
add
cmp
les
xor
cwde
mov
nop
inc
cmps
cmp
out
and
or
repnz
sub
mov
cmps
das
and
jmp
and
fwait
mov
gs
and
xor
rol
cld
mov
test
(bad)
rol
add
push
outs
mov
xor
mov
inc
xor
ins
frstor
or
dec
ds
jb
mov
inc
pop
adc
xchg
jne
inc
or
es
cli
xchg
sar
jle
in
dec
sub
mov
inc
aas
sub
or
daa
dec
dec
test
push
mov
inc
mov
fld
fs
cdq
(bad)
les
jbe
idiv
cmp
mov
rcr
pop
inc
inc
push
ja
dec
or
sbb
ret
stos
adc
sti
or
and
in
pop
dec
sub
ja
popf
cmp
ret
push
xchg
test
adc
jmp
iret
icebp
jae
jp
jno
mov
push
fadd
cmp
lods
test
std
xlat
push
push
pop
dec
inc
in
out
push
je
push
addr16
xlat
push
xchg
idiv
mov
xchg
adc
loop
adc
cmp
out
inc
push
out
mov
cwde
ret
aaa
stos
cmp
js
adc
adc
in
inc
jp
mov
sub
into
in
dec
ss
popa
and
shr
vphaddubw
dec
mov
cwde
in
ret
mov
xor
inc
pop
pop
xlat
dec
cmc
out
inc
shl
int3
rcl
sub
call
nop
pop
jns
cmp
(bad)
mov
sub
xor
dec
sub
popa
lock
in
and
sub
pop
and
cli
loopne
pop
inc
pop
aam
test
inc
fiadd
arpl
ret
and
mov
jp
stc
fisub
call
inc
dec
pop
lahf
jo
xchg
add
inc
fs
fwait
repnz
cmps
aas
pop
inc
retf
out
stc
repz
push
inc
aad
jno
dec
in
xor
adc
xchg
sub
sub
fistp
das
cmp
jb
aaa
leave
mov
js
xor
outs
pusha
push
dec
ss
fcmovnbe
leave
je
inc
jecxz
inc
xor
xchg
cmps
mov
test
inc
into
mov
cmp
movs
or
int
inc
mov
adc
mov
and
add
int
jge
(bad)
mov
ds
inc
sub
sbb
out
vcvttsd2si
rcl
inc
je
movs
inc
xor
and
sub
xor
xor
sar
cmp
inc
xor
(bad)
mov
jns
aaa
inc
test
addr16
aam
bound
mov
push
rol
loop
sti
and
xchg
cmp
movs
call
in
inc
xor
sbb
stos
std
clc
inc
jne
(bad)
mov
inc
out
fmulp
add
push
pop
inc
scas
xor
inc
pop
push
ins
mov
push
jle
push
dec
mov
test
cmp
arpl
inc
jae
jb
pop
and
adc
fmulp
outs
push
mov
pop
sub
ss
int
enter
test
repz
cdq
adc
leave
inc
jns
out
xchg
mov
lods
retf
(bad)
inc
xor
cmps
xchg
inc
fsub
inc
adc
dec
div
mov
mov
cmp
mov
mov
dec
scas
aad
cld
sti
inc
fsub
jle
in
movs
inc
mov
or
inc
loope
mov
mov
jge
dec
rcl
cmp
popa
call
test
pop
pop
and
outs
cmp
mov
or
repz
popa
inc
movs
js
ja
xlat
inc
ffreep
aaa
adc
ret
sbb
mov
xor
test
cmp
ds
push
dec
mov
cmp
ds
into
inc
test
pusha
or
inc
push
ds
or
in
cld
inc
inc
mov
or
and
out
pop
ins
pop
xor
lods
cmp
sbb
inc
dec
mov
inc
sub
std
lods
call
inc
inc
out
call
cmp
(bad)
je
fiadd
push
inc
inc
push
pop
std
cmp
inc
call
(bad)
dec
les
push
mov
stos
inc
and
and
fbstp
xchg
cdq
or
pop
clc
(bad)
pusha
dec
ror
maxps
push
push
mov
xor
sub
scas
jge
popa
dec
repnz
push
retf
mov
cmp
(bad)
mov
pop
pop
push
dec
sub
outs
outs
stc
jl
jns
mov
sub
pop
outs
pop
inc
sbb
loop
xor
stc
(bad)
pushf
or
stos
push
cmp
(bad)
mov
cmp
xor
cmp
pop
out
cmp
mov
cmp
jmp
inc
(bad)
icebp
xchg
dec
rol
je
fcomp
out
or
push
sbb
xchg
xor
fs
add
add
mov
jmp
in
mov
ret
dec
test
jo
imul
mov
lock
xor
mov
fbstp
xchg
addr16
xchg
or
cmp
push
in
out
addr16
ds
mov
jno
cmp
rol
push
call
ret
test
pop
lds
pop
mov
push
jmp
sar
scas
mov
xchg
push
(bad)
pop
dec
inc
je
jne
jbe
jb
popa
mov
mov
inc
dec
jno
popf
arpl
retf
ficom
inc
call
push
test
adc
cmp
jecxz
xor
add
ins
ja
std
add
fimul
sbb
and
loop
dec
mov
sbb
push
and
mov
xor
xchg
jo
inc
fucomip
push
inc
pop
dec
push
inc
fcomp
inc
(bad)
inc
ds
loopne
sub
or
fistp
adc
sbb
out
test
cmp
pop
hlt
inc
or
clc
jno
push
adc
push
add
les
popf
ds
inc
mov
sub
adc
sub
(bad)
mov
int
cmp
mov
and
shl
mov
hlt
mov
clc
inc
sub
cdq
xor
xchg
pop
dec
aad
jg
lea
loopne
inc
mov
pop
mov
scas
inc
push
ins
scas
iret
adc
repnz
mov
jmp
inc
sub
out
shr
push
nop
jp
repnz
out
imul
test
bound
and
push
cmp
inc
(bad)
add
push
cmp
sub
jmp
jge
mov
aad
sub
xchg
test
push
inc
add
out
xchg
inc
xchg
sar
dec
pop
cmp
mov
js
mov
nop
mov
push
dec
loope
and
cdq
inc
loop
pop
sub
pop
dec
inc
arpl
sbb
cwde
outs
cmp
inc
mov
mov
and
jge
xor
push
jle
xor
sar
icebp
retf
lods
retf
imul
dec
mov
(bad)
sbb
scas
jo
xchg
repz
pusha
sbb
push
jl
and
in
test
jmp
in
push
cmps
pop
test
cmp
loope
js
sbb
mov
test
and
ret
add
ja
pop
sbb
pop
jecxz
rcr
stos
dec
icebp
inc
fnstcw
jge
cmp
clc
jns
xor
stc
adc
shr
out
aaa
pop
jnp
(bad)
bound
jne
sahf
pop
cmp
js
fdiv
jle
mov
aaa
cmp
jo
jno
sbb
xor
adc
(bad)
fimul
fidiv
repnz
and
adc
push
add
rcr
push
jo
stos
xchg
mov
loop
mov
mov
cmp
call
jmp
out
mov
adc
(bad)
test
addr16
sbb
mov
or
sub
sbb
scas
rcl
mov
cdq
xchg
mov
sbb
mov
or
mov
or
lds
ret
sbb
je
fdivr
jb
cmp
stos
cli
xchg
xor
test
aas
mov
pusha
jge
outs
push
adc
jge
das
std
shl
stos
pop
push
rol
int3
lods
mov
sahf
xor
ins
lahf
xlat
retf
sub
mov
push
aas
sbb
jle
or
and
jno
out
mov
out
push
scas
rcl
call
cli
push
fsub
jns
rol
cs
pusha
mov
in
mov
pop
add
scas
fdiv
cdq
mov
and
pop
ret
js
stc
pop
ret
mov
or
in
sbb
adc
movs
cmp
ficom
xchg
sub
pushf
stos
xchg
call
add
dec
adc
xor
jno
imul
cmp
cmc
lods
(bad)
fs
jmp
mov
adc
push
dec
arpl
fs
inc
daa
push
ja
push
scas
ror
ret
mov
je
loope
mov
cmp
and
inc
sbb
jno
lock
cmp
js
cmp
ror
pop
mov
push
mov
sub
cmp
jecxz
and
sub
jge
xchg
js
enter
fild
pop
jmp
dec
cdq
fdiv
adc
shl
dec
hlt
inc
inc
mov
cmc
inc
out
in
adc
or
aad
pop
into
inc
test
mov
call
jmp
setne
inc
xor
adc
loopne
aam
cmp
jnp
cmps
lods
mov
jno
(bad)
in
mov
xor
je
xor
cmp
cmp
inc
sub
sti
dec
push
inc
cmp
fmul
cmp
iret
sub
test
cmp
pop
push
jno
or
cmp
push
retf
jbe
movs
loop
inc
mov
dec
js
sbb
mov
inc
sbb
enter
xor
cmp
jno
pop
(bad)
mov
inc
out
inc
xor
add
mov
sbb
add
inc
add
pop
test
inc
and
mov
mov
cmp
iret
clc
ss
enter
sub
imul
mov
ins
cli
push
xor
out
jb
aas
data16
pop
xchg
or
ins
cmp
stos
test
mov
inc
ja
push
in
and
sub
rcl
daa
jecxz
retf
cmp
sbb
fisubr
cmp
cmp
test
les
mov
aad
outs
inc
pop
sahf
lods
mov
inc
mov
mov
daa
or
ds
push
mov
(bad)
mov
shr
mov
retf
movs
test
rol
ins
push
adc
or
repz
in
mov
xor
pushf
in
sbb
(bad)
pop
mov
stos
lahf
push
cs
cmp
and
test
fld
(bad)
mov
push
jno
and
ret
cmp
cmp
leave
dec
jge
jmp
test
jle
cld
ins
mov
dec
imul
and
xchg
adc
mov
cdq
lods
mov
ja
push
jge
mov
dec
dec
cmp
movs
gs
or
mov
or
push
aas
stos
sar
add
mov
jns
inc
mov
shr
mov
stc
cmp
inc
jmp
cdq
adc
and
pop
sub
mov
stc
cmp
test
call
cmp
dec
mov
arpl
addr16
sbb
xchg
push
ds
xlat
add
fcom
fidivr
pusha
(bad)
cmp
mov
inc
inc
sub
call
push
push
add
mov
adc
repz
ja
inc
sub
cwde
popf
sub
jo
jbe
cmp
mov
out
dec
adc
je
test
add
std
(bad)
sbb
pop
push
fs
push
stos
repz
outs
inc
stc
shl
movs
stos
popf
mov
out
std
pop
dec
cmp
sbb
repz
mov
push
xlat
sub
fstp
push
sar
push
dec
retf
sahf
repz
pop
fild
in
xor
sub
mov
xchg
xchg
mov
ret
in
sub
call
add
adc
sub
push
inc
ds
rcr
dec
je
mov
sar
ins
inc
cmp
aas
sti
mov
adc
add
xchg
or
add
xchg
jmp
retf
inc
scas
cmp
lods
aas
fucom
fsub
cmp
add
xchg
sbb
mul
pop
call
dec
enter
inc
push
cmp
push
mov
cli
xchg
fdiv
bound
std
(bad)
aam
cmp
sub
loope
pop
and
sbb
ror
loopne
pushf
std
push
hlt
adc
sar
or
inc
stc
pop
adc
pop
xlat
cmp
fadd
push
jnp
or
lods
inc
test
cmp
xchg
icebp
jg
inc
jge
mov
inc
or
jae
xor
jle
inc
cmp
fadd
test
inc
bound
xchg
xor
jle
ja
inc
clc
xchg
(bad)
popa
fucomp
mov
and
mov
or
nop
imul
in
inc
sar
in
adc
sbb
retf
aaa
daa
into
popf
xor
or
or
mov
add
cli
ret
push
jae
popa
aaa
inc
bound
sbb
cmc
aam
inc
mov
sub
cld
clc
or
jnp
fcom
stc
push
icebp
push
jle
test
push
pop
cmp
aaa
mov
push
in
shl
fst
adc
push
out
sar
dec
inc
cwde
loope
xchg
jmp
cdq
(bad)
push
sub
jae
mov
and
mov
mov
and
std
sub
test
jae
mov
movs
pusha
push
add
enter
(bad)
shl
js
std
dec
adc
pop
pop
aam
inc
aaa
xor
(bad)
mov
fstp
fisubr
mov
inc
sbb
or
les
ss
mov
out
movs
mov
scas
mov
pop
in
or
stos
and
mov
sub
sti
je
sbb
sbb
in
jbe
push
cmp
jmp
adc
push
mov
ja
rol
push
mov
ins
push
sub
fsubr
and
dec
xchg
xchg
mov
sar
inc
add
(bad)
cli
and
in
lea
outs
push
(bad)
in
fsin
xor
or
mov
int3
xchg
popa
cmp
ins
out
je
inc
inc
jmp
retf
inc
jmp
mov
jg
pop
mov
iret
push
inc
aam
sbb
dec
xchg
sub
dec
mov
cmc
mov
rcl
pop
inc
ret
mov
mov
sub
repz
pop
mov
cmps
jecxz
or
les
ins
hlt
ins
imul
out
inc
popa
std
mov
inc
inc
xor
push
dec
(bad)
cmp
push
retf
addr16
mov
mov
sub
fisub
mov
adc
cmp
xor
enter
or
test
jg
inc
mov
cwde
or
jmp
movs
repz
add
cdq
cmps
or
stos
sbb
inc
xor
lock
mov
inc
mov
jo
fucomip
rol
push
arpl
mov
les
inc
out
xchg
jno
sub
dec
enter
dec
test
xor
(bad)
jmp
test
or
push
mov
dec
cmc
retf
jge
and
push
into
ret
sub
lods
mov
inc
mov
xchg
jbe
add
hlt
fidiv
(bad)
xor
out
or
xlat
jbe
inc
and
dec
dec
out
(bad)
mov
int
push
inc
dec
push
(bad)
pop
pop
sbb
mov
mov
jb
out
push
jmp
adc
les
ror
cmp
mov
xor
adc
mov
cmp
sub
faddp
call
adc
jl
cmp
pop
loopne
out
and
push
shr
and
inc
add
scas
(bad)
inc
cmc
sub
jg
mov
mov
jo
add
push
jns
pop
fisubr
pop
push
jl
push
fwait
sbb
xor
fwait
(bad)
nop
cmp
dec
mov
lods
mov
inc
ret
sti
xchg
lea
push
ins
inc
dec
repz
into
(bad)
push
sub
jg
push
lds
or
inc
and
push
daa
arpl
add
jmp
fild
leave
fild
sub
dec
dec
pop
cmp
addr16
inc
cmp
mov
sub
call
push
jl
adc
pop
inc
in
mov
stos
xchg
dec
sub
cld
loopne
xchg
retf
scas
jo
inc
xor
stos
mov
mov
dec
stos
int
out
rol
dec
jno
inc
arpl
add
jns
call
sbb
inc
dec
movs
and
imul
and
popf
pop
mov
out
inc
xor
adc
or
test
sub
(bad)
cmp
add
cld
add
pop
and
enter
int
js
mov
sbb
data16
gs
ret
add
fs
test
ja
mov
mov
lahf
loope
std
ds
jl
inc
movs
pop
out
test
inc
or
xor
aas
enter
inc
adc
pushf
jle
adc
aam
cld
out
adc
jecxz
cwde
shl
(bad)
cmp
mov
scas
pop
sub
gs
inc
bound
or
jl
mov
inc
pop
ret
mov
xor
imul
or
cwde
sbb
icebp
cli
inc
mov
mul
inc
xor
jmp
(bad)
inc
jg
mov
call
retf
sub
and
(bad)
loope
inc
push
push
push
jg
ds
or
push
inc
fcomp
ds
pop
fs
(bad)
and
nop
cmps
pop
loope
push
inc
int
xchg
cmp
mov
ds
mov
popf
add
sbb
lahf
inc
loope
sub
adc
cmp
(bad)
sar
outs
(bad)
clc
out
inc
cwde
mov
inc
int
mov
cmp
popf
dec
xchg
push
mov
imul
push
xor
push
inc
cmc
(bad)
pop
js
push
or
mov
test
enter
aad
inc
mov
push
sbb
aam
into
jb
jno
(bad)
sub
(bad)
adc
xor
dec
jl
xor
or
fisubr
test
js
and
mov
out
inc
sub
sbb
inc
mov
xchg
fs
shr
xor
popa
and
fld
ds
jmp
mov
fstp
mov
add
inc
jae
loop
mov
inc
jns
adc
call
jbe
test
pushf
inc
adc
jecxz
loope
test
cmc
adc
out
retf
or
rol
or
lock
cmp
leave
or
xchg
stc
(bad)
out
push
es
aaa
das
cmp
repz
xor
push
sbb
or
and
jp
sbb
mov
ins
push
out
and
xor
mov
add
stos
mov
mov
jle
push
inc
gs
dec
inc
dec
mov
arpl
aam
stos
sub
add
adc
rol
daa
mov
push
xor
aad
inc
dec
xor
lahf
outs
stos
dec
cli
cwde
fs
and
add
mov
fisttp
cmp
and
or
stc
mov
test
mov
xor
je
mov
cdq
sub
pop
int
and
xchg
jnp
cmp
test
mov
test
sbb
push
rcr
rcr
retf
out
adc
sahf
repz
add
pop
jge
in
pop
fsubr
aaa
xor
je
or
cmps
pop
dec
adc
sub
lds
daa
jmp
jp
fist
ds
call
mov
shl
sbb
pusha
mov
aam
mov
loope
xor
pop
and
mov
jge
and
jo
out
cld
or
sti
sub
and
jle
icebp
pop
fdivr
cmps
lahf
cmp
push
scas
sub
and
cmp
mov
mov
dec
pop
sbb
add
jno
pop
mov
sbb
mov
and
jno
mov
cmps
retf
push
call
jge
inc
dec
inc
repnz
pop
xlat
dec
mov
loope
cmp
dec
aas
adc
addr16
sub
pop
jno
aas
adc
mov
inc
test
popf
jns
fcomip
outs
mov
aaa
test
inc
sub
iret
dec
fld
push
in
stos
adc
cmp
cmp
mov
call
bound
jb
or
push
(bad)
dec
and
loope
imul
cmp
xchg
mov
jns
and
js
jle
out
adc
loop
outs
dec
and
jg
cli
stc
inc
(bad)
fldln2
xor
pusha
shl
xchg
shl
mov
xchg
iret
retf
xchg
or
mov
mov
jno
sti
ins
dec
jns
sbb
push
cld
fbld
xor
loope
(bad)
pop
pop
mov
aas
call
or
(bad)
dec
in
popa
mov
adc
xor
and
sub
sti
es
inc
cmp
xor
lock
adc
or
(bad)
out
cwde
sahf
mov
sub
mov
inc
arpl
jne
nop
dec
or
or
sub
test
sub
out
in
rol
shl
bound
and
(bad)
(bad)
cmc
push
dec
mov
jecxz
dec
mov
ins
dec
lods
mov
pop
cmp
pop
ins
clc
inc
mov
mov
lock
arpl
push
cwde
js
or
loopne
aas
sti
aad
ficomp
shr
cli
(bad)
pop
inc
ins
inc
mov
pop
movs
popf
inc
xchg
stc
cwde
sub
fimul
mov
lock
repz
sbb
sub
rcr
inc
inc
movs
mov
push
mov
mov
enter
mov
inc
or
sbb
mov
sub
inc
mov
jp
pop
dec
cmp
nop
fwait
add
sbb
icebp
ret
cmp
loope
(bad)
adc
jle
sub
jnp
dec
test
mov
cmp
js
rcr
(bad)
sar
fisttp
aam
cmps
pop
xor
ins
pop
mov
pop
cwde
jecxz
imul
mov
dec
xchg
cmp
cmp
and
sub
xchg
xchg
movs
or
sbb
mov
jbe
arpl
enter
ins
jno
inc
sbb
dec
dec
test
leave
jns
out
addr16
into
pop
jno
push
mov
retf
ss
fimul
sub
jmp
out
bnd
jmp
sbb
cdq
stos
push
add
stos
sti
or
rol
mov
bswap
and
test
jno
mov
mov
pop
outs
pop
sbb
xchg
cdq
mov
imul
shr
pop
ds
mov
stos
test
sar
sbb
xchg
inc
jb
sbb
adc
cmp
stc
xchg
or
mov
movaps
loope
or
int3
push
fiadd
xchg
rcr
or
ret
pop
scas
cld
(bad)
out
xor
(bad)
out
jmp
jle
jge
jns
outs
movs
adc
pusha
lds
mov
xor
mov
jns
jb
fdivr
je
dec
inc
aaa
jnp
fnstenv
(bad)
lods
xor
arpl
cmp
adc
jae
int
aam
mov
in
jno
mov
mov
call
pop
imul
jno
in
hlt
(bad)
out
aas
or
inc
sub
add
scas
mov
cmp
cli
jp
or
and
or
push
mov
pop
icebp
retf
cmp
int3
sub
pop
cmp
xchg
call
mov
imul
adc
jecxz
icebp
je
arpl
in
pop
xchg
in
mov
pop
jne
mov
jg
or
ret
std
push
div
push
or
stc
out
dec
(bad)
push
retf
sahf
adc
and
mov
mov
aam
xchg
les
or
and
sub
mov
sar
mov
pop
pop
mov
mov
pop
or
stos
xor
retf
sub
(bad)
mov
xor
and
stos
repnz
jns
pop
xor
dec
sti
dec
xor
sub
add
or
adc
data16
sti
push
inc
cli
fidivr
dec
loopne
cli
pop
inc
inc
dec
mov
inc
xor
push
xchg
xchg
imul
int3
xlat
sub
inc
popa
jb
sub
add
xchg
sar
adc
sub
ins
xor
fstp
sub
stos
popf
cmp
mov
lods
pop
pop
xchg
inc
jp
std
push
push
xchg
mov
mov
clc
add
scas
test
cmp
popa
mov
(bad)
daa
push
inc
sbb
pop
mov
inc
and
mov
dec
push
fcomp
push
(bad)
jmp
and
add
mov
xchg
mov
(bad)
fstp
add
loop
mov
loopne
inc
sub
std
xor
icebp
dec
mov
fbld
or
(bad)
and
movs
mov
jp
idiv
inc
mov
lea
inc
arpl
pop
pminsw
add
mov
hlt
cmps
cmp
lods
xchg
retf
mov
rcl
cmp
xchg
or
fwait
add
adc
inc
out
int3
sbb
mov
das
leave
mul
cmp
push
adc
xchg
cmp
sar
dec
inc
lea
mov
dec
sar
std
push
add
mov
or
cmp
sub
jno
xchg
lods
xor
call
or
cs
cmp
daa
pop
ds
popf
cmp
and
pop
cmp
fdiv
cmp
lea
test
sbb
add
fwait
xor
ror
mov
mov
inc
xor
push
leave
adc
xchg
test
push
dec
fcmove
in
movs
lahf
nop
test
sub
out
rol
test
ds
mov
cmp
inc
int3
shl
inc
call
fisttp
adc
add
outs
push
push
xlat
or
inc
mov
lock
ja
mov
jge
(bad)
test
inc
(bad)
lods
popa
inc
or
ds
repnz
sahf
dec
into
fnstsw
shr
sti
or
xchg
mov
(bad)
jmp
imul
sti
cmp
sbb
jecxz
pop
cmp
loop
cli
cmp
add
mov
cmp
inc
mov
inc
inc
int3
frstor
dec
jle
fadd
pop
ins
mov
pop
popa
xor
ret
jno
rol
dec
fdivrp
int
inc
adc
jbe
test
pop
test
mov
mov
lea
pop
inc
add
call
stc
mov
xor
xor
aad
or
pop
rcl
ror
sar
dec
pop
inc
dec
cmove
stos
add
sti
cmps
and
(bad)
in
pop
inc
lods
test
outs
movs
xor
adc
outs
adc
inc
shl
clc
mov
cmp
push
movs
cmp
mov
cmp
mov
imul
or
inc
movs
ror
call
dec
cmp
popf
enter
cmp
sahf
add
adc
adc
mov
out
jno
sub
xchg
and
pop
inc
cmp
xor
cmp
fimul
aaa
sub
pusha
stc
out
jl
add
sbb
jmp
cmp
inc
adc
push
jns
scas
loope
cmps
pop
pop
cmp
repz
adc
jno
and
repnz
push
xchg
std
arpl
sub
mov
mov
test
xor
outs
ffreep
and
ja
cmp
cli
in
into
jg
and
and
jns
data16
cmp
pop
les
retf
mov
inc
js
adc
pop
sub
jb
gs
pusha
and
shr
dec
xor
xchg
push
sub
inc
mov
xchg
shr
mov
icebp
jmp
out
xchg
(bad)
push
gs
(bad)
sub
mov
jns
mov
adc
jno
mov
lock
pusha
jo
shl
adc
add
and
stc
mov
lods
pop
cwde
fs
aam
jno
cs
jns
mov
jmp
fisub
xlat
cmp
out
or
inc
std
mov
aam
sar
jbe
mov
daa
inc
sbb
sbb
inc
inc
gs
and
sbb
jmp
dec
cmp
xchg
inc
lock
nop
ja
mov
inc
sub
or
pop
cmp
cdq
push
arpl
(bad)
cmp
xor
rol
push
mov
push
mov
pop
fdiv
inc
dec
push
inc
add
mov
add
(bad)
adc
out
int
adc
rcl
cmp
push
dec
pop
jns
push
dec
inc
pop
inc
pusha
aas
lea
mov
(bad)
xbegin
pop
ret
and
idiv
xchg
out
xor
loopne
out
or
xchg
and
ins
repz
push
mov
inc
push
xor
aas
jnp
pop
test
pop
inc
inc
jl
xchg
ja
inc
lods
lock
outs
push
adc
xor
jecxz
cmp
jae
mov
icebp
test
loopne
rol
add
bswap
fsubr
fbld
pop
jle
and
inc
cdq
cmps
movs
cli
hlt
mov
push
inc
int3
je
std
mov
adc
mov
pop
lea
dec
cmp
leave
jle
dec
cmp
in
xor
jecxz
ja
lahf
sub
xchg
cmp
sbb
shr
test
data16
sti
push
retf
shr
pop
xchg
lds
icebp
ror
jge
mov
pop
sbb
cmp
pop
pop
(bad)
adc
test
enter
or
push
dec
call
mov
fst
fidivr
push
aam
es
cmp
jg
clc
xchg
mul
(bad)
jno
into
mov
outs
pop
fyl2x
inc
stc
dec
add
mov
xor
ins
or
pusha
dec
je
scas
mov
leave
out
ja
fld
jno
jmp
cwde
push
cdq
sbb
cmp
mov
jno
outs
js
xchg
xchg
pushf
or
jge
fisttp
cdq
or
iret
and
(bad)
mov
sbb
ja
int3
pop
aas
xchg
xchg
or
jl
dec
mov
mov
fs
js
aam
xor
ins
dec
repz
jns
and
push
xchg
mov
or
(bad)
push
add
push
fist
ins
repnz
add
push
shl
cwde
ja
push
in
cmps
test
push
call
dec
das
push
scas
in
retf
sahf
and
xor
daa
fbld
test
ins
jns
mov
mov
(bad)
xor
(bad)
or
mov
xor
cmp
leave
cmc
sbb
xchg
mov
jp
add
xor
imul
bound
pop
loop
fdivr
cmc
and
adc
jmp
dec
int3
xor
add
call
fistp
add
lds
xchg
or
pop
cmps
dec
jp
push
pop
cmp
sub
sub
sti
icebp
adc
cmp
pop
rol
mov
sbb
repz
dec
mov
test
movs
xchg
sbb
and
ss
(bad)
hlt
imul
js
iret
cld
dec
call
pusha
jmp
adc
icebp
push
inc
mov
pop
or
cmp
loop
cmp
loope
imul
push
sub
jmp
test
xchg
mov
clc
mov
xchg
test
fcom
cmp
push
icebp
and
aad
in
das
mov
int
ss
add
fucomi
sbb
pop
jnp
inc
ficomp
adc
mov
push
pushf
cmp
(bad)
(bad)
inc
mov
mov
fidiv
push
xchg
or
mov
ret
mov
outs
jno
js
adc
dec
jbe
mov
inc
int
popa
push
mul
out
mov
xchg
ret
ja
addr16
pop
mov
imul
mov
push
and
gs
and
iret
icebp
arpl
mov
daa
(bad)
ds
cmp
dec
jge
imul
xchg
leave
or
js
mov
loop
(bad)
adc
loopne
mov
jmp
xlat
popa
mov
mov
sub
add
sub
jno
pusha
inc
inc
xlat
xor
test
mov
aaa
and
cmc
push
out
inc
jp
data16
push
sbb
test
sub
jns
into
scas
je
popa
inc
cdq
sub
cmp
mov
pusha
stos
cmp
fdivr
test
fiadd
addr16
test
fstp
jle
ins
lahf
adc
cmp
fisubr
add
aas
cmp
and
push
hlt
aaa
mov
popa
or
ret
enter
scas
sar
and
test
sbb
inc
les
stc
fcomp
mov
mov
mov
inc
ins
stos
dec
push
scas
(bad)
push
cmps
fdivr
ja
lock
int3
cmp
fwait
mov
and
jb
mov
jo
cdq
inc
retf
ins
mov
adc
push
loopne
mov
or
cmp
sub
sti
mov
jecxz
lock
stos
fdivp
push
aas
shr
retf
jns
jno
test
and
xor
inc
and
mov
shl
(bad)
fnstenv
test
inc
xchg
jle
bound
adc
add
pop
add
lock
lea
fstp
into
xor
fstp
sub
inc
or
dec
(bad)
std
adc
inc
pop
retf
iret
loopne
dec
push
adc
shl
mov
repz
(bad)
out
xor
inc
pop
xor
xchg
hlt
mov
fmulp
cmp
inc
int3
add
xor
sub
cmp
push
fsubr
jmp
inc
jg
sub
lods
inc
mov
mov
add
cmp
fwait
cdq
jbe
fs
fsub
lods
cld
out
cmps
and
adc
add
popf
shl
dec
sub
clc
pop
dec
inc
cmp
int
das
adc
out
or
sub
ja
pop
aad
mov
stc
add
rcr
sbb
aam
cmps
sub
stos
or
push
cwde
stos
and
jnp
xchg
ins
leave
mov
mov
cmp
test
mov
imul
test
(bad)
mov
inc
sub
shr
xchg
icebp
cli
fcmovb
xor
in
cmp
out
test
es
fwait
nop
cmc
(bad)
arpl
mov
retf
sti
cmp
dec
push
cmp
and
test
mov
mov
mov
bound
xchg
add
or
xchg
in
inc
sub
test
xchg
iret
mov
lods
lahf
pop
(bad)
ss
test
dec
arpl
rol
inc
dec
je
test
sbb
inc
cmp
(bad)
repz
push
pop
inc
add
(bad)
sub
mov
inc
lods
mov
mov
or
inc
outs
inc
pop
call
xor
aas
inc
fadd
js
jns
sub
loopne
jne
adc
je
cmp
sbb
jns
add
test
jne
cmp
aas
xor
cmp
sbb
xchg
add
pop
call
mov
and
je
jg
push
cmp
sub
cmp
test
out
stc
test
aas
clc
(bad)
iret
or
or
add
xchg
int3
lea
mov
mov
inc
neg
aas
movs
fisttp
in
inc
adc
or
pop
bound
inc
cmc
xchg
push
mov
inc
jno
cmp
fcmove
sub
mov
jmp
loop
mov
inc
push
into
mov
repz
sti
or
cmp
xor
dec
inc
xor
cmp
lds
or
(bad)
jmp
or
mov
mov
int3
xor
adc
xor
ss
jl
cli
stos
nop
mov
popa
pop
call
add
stc
out
in
inc
push
jmp
sbb
adc
lds
dec
push
fwait
cwde
ret
cmp
mov
and
retf
push
inc
xor
iret
clc
mov
sub
cmp
sbb
inc
mov
inc
shl
jmp
iret
inc
xchg
mov
clc
push
and
hlt
ds
sbb
xchg
sbb
aas
mov
xor
fsubr
jp
std
mov
xchg
adc
scas
fld
mov
mov
pop
dec
jmp
cmp
cmp
mov
mov
adc
shr
inc
ror
stos
test
inc
ja
fs
scas
imul
xor
stc
std
jmp
push
loope
or
jo
cmp
dec
inc
xchg
push
mov
cwde
shl
fimul
jecxz
push
pop
stos
sti
cmp
inc
into
call
inc
cmc
daa
pop
xchg
xchg
push
mov
cmp
sar
cmp
nop
adc
add
pop
push
push
mov
in
cmp
das
inc
dec
jnp
loopne
inc
cmp
je
in
or
stos
jbe
mov
js
lods
call
jmp
add
jnp
(bad)
lods
add
rcl
add
cmp
or
mov
push
xchg
fbld
inc
jno
fidiv
jg
cli
add
ins
pusha
sbb
sub
cmp
and
ins
jmp
mov
inc
inc
shr
jle
scas
int
sub
lock
shr
inc
into
mov
sahf
mov
ja
jmp
sub
mov
mov
sub
add
movs
sub
les
sahf
test
push
mov
ret
fiadd
nop
popw
add
cmp
sub
std
shr
mov
jmp
xor
cmp
sti
jmp
scas
popf
dec
pop
nop
shl
xchg
xor
cdq
or
mov
shr
and
jmp
push
aad
inc
push
es
cmp
add
movs
in
retf
shl
hlt
ins
cmp
xor
add
fnstcw
stc
cmps
enter
or
je
sub
jl
fs
loopne
sub
push
jnp
adc
mov
sbb
and
es
fmul
ins
cdq
test
mov
stos
xchg
xchg
fadd
jge
and
sbb
retf
repnz
cdq
into
push
mov
mov
inc
push
(bad)
addr16
jl
sar
retf
and
and
ror
mov
lahf
test
(bad)
fnstenv
dec
push
xor
cmp
push
std
ss
inc
adc
imul
dec
pusha
jl
dec
mov
sub
(bad)
jno
mov
cs
neg
inc
mov
loop
mov
jno
(bad)
(bad)
or
pusha
pop
loopne
mov
cld
sbb
ins
cmp
jno
dec
add
sbb
jmp
cmp
sub
nop
retf
mov
fstp
mov
leave
mov
fadd
xor
sub
arpl
test
xchg
mov
aaa
fsub
rcr
loopne
fdivr
sub
cld
lods
push
cli
or
inc
inc
jno
scas
test
and
cmp
cmp
adc
add
cmp
pop
xchg
in
sti
dec
je
cmp
sbb
call
dec
ficom
mov
add
xor
sub
aaa
shl
ds
mov
les
(bad)
push
xor
push
sti
jno
mov
or
mov
mov
je
jns
xchg
icebp
mov
shl
mul
stc
je
(bad)
adc
mov
mov
cmp
mov
adc
stos
pop
dec
loope
pop
sbb
icebp
xchg
xchg
sbb
aam
jp
repnz
jmp
xchg
idiv
xor
(bad)
icebp
enter
mov
rcr
cmps
push
fdivr
cmp
push
jecxz
fldenv
xor
xchg
mov
sbb
mov
fstp
stc
push
int
sub
out
mov
jle
adc
pavgw
xor
jo
adc
adc
iret
mov
mov
pop
xor
cmps
pop
outs
mov
popf
ror
jae
sub
mov
push
inc
mov
cld
sti
repnz
xchg
jo
popa
mov
mov
cmp
enter
sbb
fcmovbe
popf
adc
mov
(bad)
sbb
lds
xchg
(bad)
adc
xor
inc
fs
and
sbb
mov
mov
or
cmp
jno
sbb
sub
cmp
je
cmc
stc
xchg
jmp
retf
and
ret
jno
dec
jnp
push
aas
mov
jge
add
pop
aaa
out
sbb
call
call
add
jl
push
mul
loope
mov
inc
push
jmp
mov
leave
push
(bad)
repz
jno
mov
shl
jmp
jge
inc
xchg
jno
lahf
xchg
scas
mov
jg
enter
mov
or
sub
mov
push
cmp
ret
shl
ret
adc
sub
sbb
loope
cmps
icebp
fdivrp
xchg
sbb
jno
sub
lods
jl
out
pusha
pushf
loop
xchg
pop
and
shl
outs
in
hlt
xchg
cmp
sub
inc
outs
inc
leave
mov
jnp
test
pop
xchg
shr
and
icebp
shl
mov
loop
sub
and
mov
retf
or
inc
push
push
les
leave
xchg
adc
adc
je
retf
mov
inc
mov
push
cwde
dec
mov
fimul
js
or
xor
xor
adc
add
das
pop
mov
mov
ret
and
jns
inc
fimul
mov
js
xchg
cs
fnstsw
mov
push
arpl
mov
jb
push
xor
fild
ret
pop
mov
sbb
cmp
cmp
loopne
sub
pop
and
add
inc
pop
dec
add
bound
fdiv
ret
daa
push
xor
mov
adc
sub
aam
lds
or
rcr
jno
jge
xor
ins
int
clc
iret
xor
neg
leave
es
fwait
sbb
cmp
jnp
jmp
sub
pop
xor
lock
loope
jge
loopne
jnp
aam
hlt
mov
and
mov
dec
pop
mov
mov
nop
pop
stc
adc
sbb
sbb
pop
and
mov
jb
loop
jno
sbb
cmp
das
mov
sbb
out
cdq
je
jns
(bad)
in
xchg
sub
aad
inc
lods
pop
lock
push
nop
sbb
loope
dec
mov
nop
(bad)
jnp
aas
dec
cli
fs
cmps
cdq
les
xbegin
or
fdiv
mov
stos
icebp
bound
sbb
ds
and
and
mov
dec
sar
scas
xor
adc
xor
fstp
stos
sbb
cld
mov
lods
nop
mov
retf
mov
cmps
sbb
add
dec
clc
les
ret
xor
mov
shl
lds
jl
mov
cmp
in
fs
inc
leave
inc
xchg
xor
arpl
mov
jl
mov
stc
les
movs
stos
push
mov
popa
popf
inc
add
jle
mov
js
cmp
out
xor
or
mov
lock
or
pop
sub
fucomip
pop
inc
jns
jne
lods
pop
inc
(bad)
ret
hlt
das
ja
ror
pushf
jnp
mov
inc
xchg
inc
adc
jecxz
ja
push
retf
into
push
leave
push
rcr
pop
int
idiv
lods
data16
or
xchg
xchg
cmp
mov
jl
cmps
mov
daa
dec
js
mov
test
jmp
cmp
sbb
aas
push
or
add
hlt
cmp
cmc
inc
rcl
xor
and
add
xchg
push
adc
xchg
or
add
push
ins
xchg
xor
aad
dec
dec
lea
mov
cmp
add
adc
clc
cmp
jne
test
(bad)
stos
aad
add
sbb
or
inc
xor
cmp
hlt
pop
and
inc
mov
dec
jne
mov
sti
jnp
cmp
jnp
jae
jmp
sti
push
push
jns
pop
mov
xor
lock
sbb
adc
ins
or
in
mov
xchg
test
in
fist
dec
pop
cmp
add
das
loopne
xchg
jb
enter
inc
jne
stos
ins
jnp
push
into
inc
inc
jle
cld
mov
adc
inc
or
div
xor
js
pusha
inc
inc
xor
fmulp
inc
push
sub
fimul
in
sub
xchg
jmp
(bad)
aad
fadd
add
add
add
mov
and
mov
in
push
pmaxub
aam
aas
and
jno
pop
mov
mov
xchg
xor
mov
mov
inc
and
mov
mov
mov
(bad)
mov
ror
icebp
adc
push
pop
sub
loope
cmp
sbb
fisub
mov
(bad)
mov
cmp
cmp
jmp
shl
out
jb
mov
mov
sbb
sbb
pop
push
mov
push
xor
jns
and
push
pop
push
sub
jl
aad
je
shl
mov
int
pop
sub
xchg
sub
cmps
imul
cmp
jns
data16
jbe
jg
pop
dec
sub
int3
scas
or
cmp
aas
jns
adc
jno
fcomp
pop
push
or
cmps
or
and
inc
das
mov
or
add
or
scas
fisttp
jmp
jo
cmp
jmp
jns
push
inc
sbb
pop
pop
jno
xor
or
or
cmp
cmp
cmp
mov
sahf
inc
outs
push
outs
mov
cmp
xor
shl
sti
mov
dec
cmp
pop
xor
jnp
(bad)
mov
aaa
cmp
aad
pop
pop
aas
cmps
shl
out
dec
int3
movs
mov
add
fs
cmp
cdq
sub
inc
cmp
jae
in
dec
jo
call
mov
inc
pop
add
push
jmp
push
mov
enter
sbb
cmp
pop
push
adc
cld
inc
cmp
fdivr
cmp
and
outs
jno
cmp
lds
or
sti
add
inc
imul
cmp
repnz
dec
aad
ret
cmp
or
or
mov
xchg
xlat
mov
(bad)
loop
push
rol
mov
jno
sub
cdq
fst
adc
adc
dec
lods
sbb
dec
or
nop
xlat
pop
cmp
jle
cwde
mov
xor
imul
xor
std
and
stc
(bad)
sub
xchg
(bad)
inc
push
jo
sbb
mov
dec
lea
cmps
mov
or
js
jns
(bad)
push
inc
sahf
mov
pop
cmp
daa
sbb
xchg
ja
jns
or
cli
jns
ret
stc
(bad)
xor
rcr
inc
call
jb
aaa
(bad)
sar
xor
stc
mov
aaa
mov
mov
enter
fld
lea
fsub
into
push
adc
inc
xor
out
mov
hlt
icebp
or
xor
dec
imul
push
test
inc
pop
inc
push
jne
scas
ins
inc
mov
jle
inc
call
and
clc
or
jg
sub
(bad)
fxch
adc
pop
cmp
inc
cdq
pop
push
mov
ins
mov
loope
fimul
test
xchg
xlat
popa
inc
fwait
jg
mov
in
shl
xchg
cmp
jmp
gs
or
dec
xchg
fild
in
or
jp
cwde
or
add
test
mov
retf
mov
lock
addr16
mov
add
and
cld
jno
das
out
sub
test
mov
(bad)
fdivr
ret
sub
vcmpss
in
ds
push
lahf
pop
mov
test
aad
xchg
inc
mov
add
sub
or
and
inc
push
cwde
test
jge
mov
das
cmp
sbb
cmp
cs
mov
out
adc
pop
repnz
sti
pushf
inc
cs
and
out
pop
mov
or
cli
and
and
cmp
sbb
ds
out
iret
pop
push
js
inc
add
add
and
test
add
and
add
mov
or
das
or
mov
loop
mov
int
mov
push
jle
sub
fdiv
ins
adc
dec
lods
xchg
cmp
leave
(bad)
out
jecxz
mov
dec
in
xor
inc
call
lea
inc
ret
data16
retf
lds
(bad)
hlt
mov
mov
(bad)
leave
fdivr
out
inc
out
fiadd
xchg
jmp
mov
inc
stc
int
mov
inc
es
in
lock
push
fldln2
or
add
(bad)
(bad)
xor
jo
in
inc
mov
xor
lahf
pop
cli
jg
mov
xor
mov
mov
lods
inc
lods
aaa
test
fsubp
jae
test
dec
jmp
sub
les
mov
sbb
jl
cmp
jns
and
cmp
jno
and
lods
jnp
cmp
adc
lahf
nop
aaa
inc
(bad)
xor
loop
movs
cmp
loopne
mov
and
mov
or
cwde
mov
and
sar
icebp
lods
fild
test
and
arpl
scas
mov
aaa
jl
pop
xchg
or
pop
add
scas
repz
mov
jmp
ds
or
(bad)
mov
push
mov
test
(bad)
out
push
mov
jne
loopne
jns
stos
neg
add
(bad)
jmp
lahf
shl
mov
repz
repz
je
pusha
sub
out
jns
sahf
push
push
fs
aad
mov
and
fdivr
pop
mov
mov
pushf
push
jno
idiv
sar
sub
es
(bad)
pop
and
mov
test
lods
cmp
(bad)
cmp
jno
push
cmp
cdq
stc
ja
sub
sbb
xchg
(bad)
adc
jno
adc
loope
push
aad
test
inc
adc
ret
inc
cmp
and
je
jge
aad
and
in
push
xchg
jge
xor
cwde
mov
jb
adc
push
mov
push
(bad)
jmp
add
mov
aaa
pushf
push
add
xor
add
mov
mov
data16
or
jmp
jp
dec
pop
lock
cmc
sub
loop
xor
(bad)
push
fistp
sbb
mov
xor
mov
xor
ret
fisttp
test
or
shl
jb
push
lock
mov
ret
daa
das
mov
fst
pop
int3
sbb
pusha
not
js
cmp
mov
pusha
adc
sub
mov
dec
mov
imul
cmp
jae
jnp
add
sar
or
pop
mov
push
add
adc
arpl
add
inc
sub
loop
xor
adc
out
ret
inc
into
(bad)
push
lahf
adc
mov
fwait
sar
popf
(bad)
adc
rcr
idiv
cmps
ror
xor
aad
and
adc
sti
fcmovu
ror
retf
and
cmp
std
into
adc
pop
arpl
xchg
xor
cs
or
cmps
pop
cdq
add
sub
dec
mov
jp
scas
xchg
cmp
sub
jmp
xor
pop
dec
cmp
pusha
inc
dec
push
inc
push
dec
push
xchg
mov
inc
pop
dec
mov
mov
pusha
addr16
jns
sub
inc
inc
and
pop
sub
pop
cmp
jns
jno
push
sbb
xchg
sbb
or
adc
dec
mov
mov
out
add
cmp
arpl
test
lods
jns
jl
icebp
adc
xor
mov
inc
sbb
(bad)
or
fimul
mov
add
pushf
pusha
and
cmp
rol
push
dec
mov
cmp
rcr
ret
fxch
iret
cmp
xor
mov
inc
je
ja
inc
mov
mov
imul
idiv
inc
loop
or
pop
dec
inc
push
dec
push
ja
mov
jmp
and
mov
inc
pushf
inc
pop
mov
out
mov
push
push
jmp
and
mov
inc
frstor
mov
or
sbb
(bad)
sti
and
cs
sub
loop
mov
mov
dec
fdivr
lds
leave
inc
int3
cmp
mov
sar
mov
jle
icebp
or
ins
aaa
mov
sti
lock
jbe
addr16
adc
and
mov
sub
jmp
inc
out
xor
add
jecxz
aas
sub
inc
pop
pushf
fistp
cmp
retf
inc
test
dec
out
jmp
sub
(bad)
inc
push
and
and
lock
xor
mov
rol
arpl
sbb
dec
cmc
inc
mov
mov
or
dec
in
outs
pop
popw
adc
es
lods
sahf
jnp
inc
mov
sbb
cmp
call
xchg
es
jmp
xchg
not
cli
cmp
out
sub
sahf
and
aaa
sti
es
jno
dec
mov
cmp
imul
icebp
push
xchg
xchg
pop
popa
pop
pop
(bad)
fnsave
(bad)
rol
or
push
mov
mov
mov
inc
cs
mov
jmp
cmp
push
push
rcl
xlat
dec
inc
cs
dec
pop
out
(bad)
fnsave
sbb
test
cmp
rcl
mov
jae
adc
jl
cmp
inc
clc
repz
imul
mov
mov
sbb
out
xor
push
clc
sub
idiv
ficom
test
or
pop
add
inc
cmp
mov
xchg
fisubr
loopne
cmp
sub
call
inc
je
movs
sbb
jmp
push
inc
addr16
cmp
xor
in
ficomp
push
shr
in
cmp
push
lods
xchg
mov
cmp
iret
inc
int
sbb
inc
cmp
mov
sbb
leave
and
pop
pop
push
(bad)
in
inc
out
cdq
sub
push
cwde
lods
dec
inc
ja
pop
rol
push
mov
inc
pop
xchg
adc
cmp
pop
push
fstp
out
js
adc
jns
adc
adc
mov
(bad)
adc
dec
push
aas
xor
jns
inc
and
pop
inc
jg
hlt
sbb
mul
fidiv
pop
test
sub
retf
outs
out
xchg
adc
pushf
cmp
aad
icebp
or
js
dec
mov
cmp
std
mov
(bad)
mov
adc
adc
mov
outs
jl
sbb
cmps
jno
ss
jae
xor
dec
cmp
or
sub
cmp
arpl
rol
cli
push
mov
out
pop
and
out
cmp
and
lock
dec
mov
jp
out
stc
test
stc
sbb
sub
adc
mov
jmp
mov
mov
sar
outs
mov
inc
dec
sub
dec
mov
inc
ss
push
mov
fcom
push
in
cmp
xor
pop
(bad)
xor
jge
sbb
mov
icebp
outs
mov
imul
cmp
sbb
cmp
(bad)
jmp
add
bound
ja
and
es
xchg
or
add
sbb
mov
js
aas
loope
or
iret
imul
mov
xchg
cdq
sub
jns
sbb
test
jg
fdivp
test
jle
into
leave
pop
imul
out
cmps
cld
jmp
mov
mov
and
movs
dec
inc
jl
aaa
dec
inc
shl
xchg
ins
and
jae
loopne
(bad)
mov
xchg
das
rcl
scas
mov
jg
ja
outs
cld
sbb
cmp
(bad)
push
int
mov
mov
lods
dec
inc
inc
mov
bound
inc
dec
pushf
int
mov
outs
repz
ret
inc
jnp
inc
jg
mov
js
ins
inc
ss
fwait
mov
lods
sub
mov
adc
sub
jno
fdiv
push
mov
xchg
ds
and
push
mul
add
adc
and
push
sub
jae
or
mov
jecxz
in
loope
in
sub
ins
pop
aad
sub
ins
inc
jb
pop
mov
xor
dec
inc
mov
cmp
jecxz
xchg
and
xor
sub
mov
xchg
aad
cmp
fs
enter
cmp
int3
mov
lods
sahf
sub
jecxz
lods
xor
out
sub
dec
inc
mov
mov
inc
dec
pop
mov
sbb
sbb
jl
movs
aaa
inc
loopne
mov
mov
xlat
adc
xor
sub
xchg
aas
xor
or
faddp
add
aas
out
jb
pop
inc
jp
push
inc
and
ror
cmp
ret
xor
mov
cmp
stos
mov
ins
cmp
loop
cmps
out
cli
shl
jne
imul
add
es
int
call
retf
or
mov
movs
jge
xor
pop
cmova
cwde
inc
mov
in
sub
adc
cmp
push
pop
sub
std
int
pop
outs
xchg
retf
fs
cmc
adc
and
out
jns
loopne
push
pop
xor
fsub
jno
(bad)
push
cmp
out
dec
mov
and
outs
icebp
jmp
imul
mov
cs
scas
dec
jno
in
ja
movs
cmps
cmp
xchg
mov
cmps
test
xor
jg
jp
add
lea
ja
xchg
lods
xchg
fsubp
add
popa
aad
mov
cmp
mov
inc
outs
scas
mov
fadd
pop
xchg
out
xchg
(bad)
cmp
cmp
dec
out
adc
xchg
(bad)
push
add
adc
(bad)
loop
scas
cmp
imul
dec
lods
xchg
inc
adc
sbb
outs
mov
or
cmp
mov
ds
mov
cmp
pop
sbb
add
call
mov
xor
shl
in
or
push
mov
loopne
aas
std
out
fbld
ds
inc
add
(bad)
in
imul
dec
pop
mov
mov
in
and
repnz
hlt
pop
sbb
mov
cmps
pop
add
ret
mov
cmp
imul
lds
fimul
dec
(bad)
dec
aad
push
dec
shl
mov
out
imul
(bad)
push
ffree
sti
jbe
mov
push
push
nop
jns
das
(bad)
pop
and
rol
xchg
or
sub
ja
xor
or
cld
les
lds
mov
xor
and
and
add
or
stos
cmp
test
add
and
dec
push
dec
jnp
std
lock
inc
addr16
sbb
adc
movs
(bad)
inc
int3
sub
mov
(bad)
loopne
retf
lahf
inc
pop
outs
stos
out
cmps
push
add
add
fidiv
xor
test
or
adc
ja
cmp
cmp
int
stos
popf
lods
dec
pop
jge
out
sub
(bad)
icebp
inc
xchg
xchg
dec
movs
stos
xchg
jbe
inc
js
popa
sti
add
stos
cli
inc
out
jb
adc
inc
bound
(bad)
jbe
sbb
xchg
jno
or
test
sub
fsub
stc
sahf
out
dec
int3
pop
cmp
sbb
xchg
or
dec
pusha
and
in
mov
add
add
sub
mov
(bad)
dec
lea
movs
enter
sub
sti
sar
jno
call
(bad)
cmp
push
mov
sbb
cmp
xor
addr16
or
fistp
adc
scas
sub
sti
cmp
add
test
or
cmp
inc
sub
mov
push
push
mov
setae
stos
mov
out
pop
dec
fld
ss
jecxz
fs
cmp
test
push
push
outs
mov
cs
cmc
sbb
bnd
enter
call
sub
xchg
pusha
inc
dec
inc
pop
(bad)
mov
scas
sub
xlat
ins
jnp
inc
xchg
adc
leave
fcomp
movq
cmp
add
jmp
mov
aas
or
mov
xchg
or
mov
inc
into
pop
ss
shr
mov
mov
mov
and
rcl
cmp
mov
retf
jmp
push
xchg
cmps
inc
mov
mov
push
sbb
adc
pop
sbb
cs
cmp
dec
sbb
call
in
je
inc
shl
pop
cli
test
inc
cmp
loopne
dec
jl
pop
mov
arpl
sub
dec
inc
push
xchg
ret
push
cmc
test
adc
dec
enter
cmp
imul
and
fnstsw
add
mov
js
iret
sahf
pusha
fnstcw
sub
jmp
dec
sub
mov
push
inc
mov
push
cli
daa
test
add
es
mov
lock
cmp
lods
into
inc
cmp
mov
mov
adc
mov
lea
fcomp
in
pop
aad
rol
cmps
mov
mov
out
cdq
inc
push
gs
jp
adc
mov
mov
mov
xchg
loop
test
out
sub
les
sub
retf
push
jge
into
adc
mov
sar
jmp
mov
xor
shr
out
adc
xchg
jle
xchg
inc
sub
add
mov
cs
pop
loope
inc
ret
xchg
sbb
(bad)
cld
push
mov
add
cmp
push
xchg
cwde
jne
repz
cmp
mov
call
push
jmp
mov
dec
sti
inc
mov
jp
mov
xor
xchg
inc
mov
repz
sub
sub
jmp
or
sub
inc
adc
adc
les
pop
setns
xchg
fnstsw
out
sub
cmovo
pop
retf
pop
retf
fbld
enter
or
or
rcl
mov
mov
xchg
jbe
fsubr
popf
and
push
adc
mov
cmp
out
mov
sbb
fldcw
push
fidiv
jecxz
push
std
fidivr
test
bound
xor
push
cmp
ds
dec
pop
(bad)
jmp
lods
jns
ret
into
cld
mov
aam
fwait
rcr
scas
rcr
or
sbb
je
or
rol
jl
xchg
icebp
in
mov
int3
or
and
mov
stos
xor
push
jns
mov
xor
mov
test
stc
jge
or
cmps
xor
pop
imul
les
or
sbb
enter
int
sahf
adc
jno
repnz
lds
xor
jne
jmp
daa
mov
or
or
mov
lds
jnp
ror
daa
inc
das
je
jge
fsub
hlt
jl
xchg
cmp
inc
sub
cmp
cmps
xchg
in
aam
jg
ins
jns
push
sub
stc
cld
inc
aas
adc
cmps
jnp
mov
cdq
jb
out
jns
cld
rcl
dec
aaa
and
pop
retf
rcr
xchg
add
pushf
mov
bswap
push
cmp
mov
cmp
imul
bound
jge
dec
loope
jb
jno
sti
pop
cmp
sar
and
js
add
jg
arpl
sbb
stc
out
movs
add
ins
(bad)
pop
fisubr
sbb
out
fdiv
fcmovu
and
fdiv
sbb
inc
lds
stos
test
js
or
test
pop
and
fld
mov
mov
dec
lods
xor
enter
jns
jle
(bad)
inc
stc
out
inc
cmp
dec
and
scas
xchg
adc
stc
hlt
inc
mov
jmp
sbb
jmp
mov
xchg
outs
push
mov
jl
mov
sub
or
xor
mov
ds
sahf
mov
or
mov
xchg
cmp
repnz
stos
mov
inc
sbb
xchg
pop
inc
popa
jb
jno
jl
outs
shl
es
(bad)
adc
mov
fdivr
out
cmp
loopne
leave
stc
push
sub
sbb
mov
cmp
sysenter
sub
lods
lahf
cli
in
(bad)
inc
xchg
mov
icebp
mov
dec
push
push
and
out
sbb
inc
inc
cdq
mov
in
jno
movs
xchg
inc
or
fdivr
shl
arpl
adc
jns
popa
sti
pop
inc
movs
push
iret
(bad)
cmc
aaa
xor
mov
push
jle
pop
daa
loope
rcl
pop
lods
cmp
mov
cmp
inc
jo
cdq
sbb
out
xchg
out
cmp
lahf
iret
adc
or
adc
or
std
mov
xchg
ss
adc
mov
mov
cli
sti
fild
scas
lock
push
or
leave
sub
imul
gs
out
inc
sbb
test
pop
pop
or
scas
jne
mov
icebp
jb
inc
sbb
test
inc
(bad)
fdivrp
or
in
mov
dec
sbb
dec
inc
sub
adc
pushf
inc
(bad)
loop
mul
push
xlat
jl
movs
out
inc
leave
xchg
mov
test
fstp
xchg
adc
adc
adc
loopne
ror
inc
test
xchg
(bad)
jae
imul
cdq
mov
inc
inc
data16
mov
adc
add
inc
push
test
push
std
cmp
mov
dec
dec
pop
jmp
inc
adc
sub
stos
adc
push
inc
xor
pop
push
xor
xchg
movs
aam
adc
xlat
xchg
push
aas
add
popf
add
mov
int
jl
adc
dec
stos
sti
rol
lea
pushf
xchg
adc
into
repnz
jmp
movs
inc
call
jmp
sti
ret
not
and
cli
push
or
lods
enter
sbb
test
inc
or
mov
inc
call
stos
pop
test
ds
mov
mov
jno
mov
dec
stos
adc
mov
inc
ds
arpl
mov
jmp
fs
xchg
out
and
repnz
dec
sub
loopne
mov
je
rcl
xor
mov
dec
jl
cmps
sahf
and
mov
sbb
pop
cmp
xor
(bad)
dec
pop
sub
aas
or
ficom
push
popa
cmp
sub
cli
add
pop
adc
icebp
iret
mov
pop
or
pop
je
pusha
jmp
mov
inc
fdivr
pushf
lea
jno
inc
and
mov
test
nop
jns
stos
cmp
dec
pop
call
nop
dec
cmp
push
jle
inc
mov
mov
adc
aam
inc
dec
mov
sub
add
push
in
inc
xor
lods
outs
jns
push
mov
and
cmp
xchg
inc
dec
push
cmp
inc
test
aas
sar
pop
fidivr
(bad)
out
ret
rol
js
lahf
pop
dec
jbe
dec
or
or
mov
dec
stos
inc
mov
out
rcl
mov
xor
inc
popa
push
arpl
int3
jae
ins
jge
fsubp
dec
pop
outs
cs
fwait
cmp
adc
cmp
xchg
cwde
sub
fcom
daa
in
inc
lea
dec
push
int
inc
inc
and
cmp
inc
add
adc
nop
inc
call
dec
aad
sbb
(bad)
loopne
xlat
dec
nop
jne
dec
in
js
mov
cmp
movs
jno
rcl
addr16
outs
stc
dec
pop
jle
sub
adc
jmp
fidiv
xchg
xor
mov
sbb
pop
adc
push
inc
sbb
aad
ficomp
xor
retf
fs
imul
dec
and
sti
jae
pop
xchg
cmp
xchg
test
mov
cs
cmp
sbb
jp
mov
jmp
mov
jg
js
aas
and
adc
cmp
pop
cs
mov
adc
jno
inc
inc
mov
pushaw
cdq
sbb
mov
and
adc
arpl
jmp
pop
lods
mov
nop
mov
inc
(bad)
mov
add
jmp
xchg
cdq
ds
les
ja
mov
lods
mov
mov
dec
or
(bad)
sub
retf
and
(bad)
cmp
iret
aam
(bad)
fisttp
jmp
int
ror
pop
dec
xchg
cmp
pushfw
sbb
test
xchg
jbe
mov
repnz
pop
add
ins
scas
shl
imul
icebp
cmps
inc
mov
cmp
sub
lahf
pop
dec
aas
cmc
mov
inc
inc
enter
dec
retf
in
inc
mov
jns
or
loopne
mov
hlt
adc
mov
or
fidiv
fadd
xlat
das
mov
out
adc
stc
push
inc
push
pop
mov
arpl
sbb
xor
sbb
loopne
mov
ret
int
and
add
mov
out
shl
cmp
cld
push
pop
inc
lods
mov
shl
pop
dec
pop
cmc
inc
sbb
dec
mov
xchg
lods
push
adc
xchg
xchg
dec
ss
mov
fcomp
shl
(bad)
pop
jo
push
xchg
cvtdq2ps
aas
pop
shr
fiadd
push
dec
xchg
jecxz
in
inc
retf
xor
outs
jge
jbe
pop
jb
sub
imul
push
cmp
repnz
adc
lahf
lods
js
jb
ds
pop
inc
lods
push
test
mov
movs
xor
pop
daa
ss
je
(bad)
cmp
cmp
shl
inc
aad
push
(bad)
push
je
or
out
pop
mov
cmps
sub
mov
add
add
sahf
or
push
pop
add
rol
into
or
sub
xor
adc
ss
and
mov
leave
sti
call
sub
xchg
in
out
jns
pop
cmp
into
pop
popa
and
adc
jl
cmp
add
rcl
jns
jno
out
inc
js
nop
into
push
movs
sub
add
cmp
cmp
loopne
mov
in
or
push
(bad)
jge
add
out
cmp
loopne
lods
dec
push
xor
aaa
mov
inc
add
mov
fs
jl
scas
push
pusha
jecxz
pop
pop
mov
aad
ret
dec
fdivr
or
cmp
into
das
cmp
or
nop
or
int3
cmp
lods
sti
pushf
or
pop
jge
outs
stos
jns
sub
add
shl
nop
and
add
(bad)
mov
xchg
fldenv
push
cmps
in
inc
fstp
dec
xchg
inc
add
cmp
pop
test
mov
imul
jae
add
test
or
loope
mov
jl
mov
pushw
jbe
xor
sbb
push
jno
ret
adc
jns
push
add
aam
inc
pop
jno
leave
enter
test
inc
fnsave
jns
pop
xchg
daa
mov
test
ins
cmp
test
pop
ja
icebp
rcr
sub
and
addr16
repz
jae
ins
or
xchg
les
cmp
into
sbb
mov
jo
cmp
jns
outs
add
mov
push
shl
scas
jmp
out
fisttp
cmps
test
cld
ret
ds
aaa
jb
sahf
ret
xchg
jno
cli
mov
cmps
jns
jge
xchg
inc
push
aas
sbb
adc
sub
(bad)
or
ret
xor
mov
push
les
sub
sub
(bad)
xor
sti
sbb
push
rcr
jo
pop
cs
dec
xchg
ss
xor
adc
push
add
ror
cdq
xchg
and
pop
fwait
jle
pop
xchg
scas
(bad)
xchg
push
pop
dec
jns
aad
fisub
cmp
dec
mul
dec
mov
dec
and
cmps
out
rol
lds
out
cmp
cmc
jbe
arpl
fnstcw
imul
ins
inc
xchg
adc
js
cmp
repz
ss
xor
xchg
aaa
sub
pop
sub
xor
cmp
aam
rcr
enter
or
nop
cmp
lock
enter
cmps
xor
pop
mov
ret
add
cmp
in
rol
inc
adc
push
jmp
pop
pop
jno
pushfw
mov
sbb
dec
xor
mov
ja
sbb
inc
sub
cdq
aas
add
jecxz
mov
cmp
into
lahf
je
imul
jb
cld
inc
dec
popa
fldenv
data16
stc
icebp
pop
je
and
push
data16
dec
retf
ret
lea
stos
add
sbb
sub
cmp
lods
adc
pop
in
out
(bad)
arpl
pop
(bad)
xor
add
jbe
xchg
push
stc
xchg
adc
or
pushf
add
(bad)
neg
into
stos
inc
inc
inc
scas
mov
outs
jbe
push
inc
fsubr
push
mov
mov
mov
push
add
imul
int
xchg
fdivr
ret
sbb
fs
jmp
or
or
add
into
adc
dec
popf
in
or
sahf
int3
shl
pop
push
push
in
out
push
pop
xchg
mov
xchg
mov
faddp
xchg
imul
sub
bnd
add
loope
mov
cmp
fistp
cmp
loopne
loopne
pop
mov
shl
jno
shr
jns
in
jg
cmp
dec
ss
hlt
adc
call
std
(bad)
mov
je
fdivr
mov
xchg
ds
mov
leave
inc
mov
push
pop
xchg
outs
int
xor
scas
data16
inc
xchg
add
mov
hlt
xchg
adc
lds
hlt
jno
imul
cmp
xor
dec
pop
sahf
out
fs
in
outs
sub
jns
add
xor
xchg
push
ds
sbb
popa
das
addr16
out
mov
push
out
not
and
sbb
sar
loope
mov
dec
push
dec
cwde
xor
mov
mov
mov
or
sbb
and
movs
fsub
outs
stos
mov
sbb
sub
je
mov
sbb
scas
imul
es
xor
aas
stos
mov
je
xor
cs
jmp
mov
pop
retf
nop
sahf
mov
test
xchg
jmp
iretw
jnp
push
xchg
jg
movs
ffreep
jecxz
xchg
inc
and
xor
cld
mov
pop
xchg
mov
inc
in
(bad)
jge
bound
add
inc
dec
mov
xor
pop
int3
jb
add
sar
ins
cmp
movs
xor
aad
fdivr
test
adc
rcl
pop
cmp
movs
mov
fimul
xchg
out
fdiv
adc
add
jmp
fiadd
iret
cld
sub
out
mov
push
jmp
call
pusha
ror
jle
outs
enter
int3
hlt
movs
adc
push
js
js
aaa
xchg
or
xchg
xor
sar
add
dec
cmp
rol
xchg
and
sub
es
std
mov
shl
push
cmp
mul
es
jae
mov
push
jno
not
sti
aad
inc
bound
inc
(bad)
xor
pop
xchg
push
or
mov
xor
popf
stc
outs
sbb
shl
adc
and
push
call
repz
adc
int3
mov
sbb
lahf
add
jo
inc
enter
vpaddq
or
retf
push
cmp
cdq
nop
inc
fscale
xchg
pop
data16
adc
xchg
dec
stc
out
stc
inc
ins
fidivr
cwde
stos
sub
or
rcr
out
push
mov
dec
and
cmp
mov
cmp
push
mov
fnstenv
test
imul
arpl
sbb
(bad)
dec
mov
ds
test
push
loop
jmp
push
sahf
test
in
scas
idiv
and
fdivp
lds
clc
or
inc
fisttp
dec
ror
fild
dec
ds
mov
jl
xlat
dec
mov
(bad)
dec
stc
inc
xchg
inc
test
(bad)
push
sub
jbe
mov
add
mov
mov
xchg
out
xlat
pop
cli
inc
cwd
adc
out
shl
sbb
gs
or
inc
scas
iret
out
jge
mov
jmp
jno
out
mov
inc
xor
jbe
mov
outs
jg
into
sbb
adc
test
pop
or
cdq
icebp
jns
mov
and
(bad)
push
addr16
jp
je
outs
or
inc
into
adc
or
inc
das
out
aam
dec
sbb
in
cdq
push
lods
mov
pop
mov
into
inc
fucom
mov
cmp
or
inc
aaa
popa
icebp
int
sbb
sbb
add
cmp
cmp
sbb
xor
(bad)
jnp
dec
pushf
cmp
ret
mov
fadd
pop
and
enter
add
aaa
jl
dec
(bad)
xorps
rcr
loop
xchg
call
fist
jle
fisubr
fsubr
cmp
fmul
cmps
(bad)
loop
div
jns
popf
cmp
sub
fcmovnb
rcr
(bad)
inc
(bad)
dec
push
xor
imul
adc
jne
stc
sbb
stos
imul
lods
test
inc
cmp
leave
das
sbb
jge
daa
push
or
mov
xchg
lods
sbb
sub
mov
fsub
mov
ds
and
test
imul
inc
push
xchg
jmp
push
push
daa
out
test
mov
aas
cmp
sbb
adc
mov
dec
ds
cmp
inc
add
fwait
movs
mov
jbe
loopne
sbb
cmp
jge
int
inc
outs
sbb
sti
inc
sub
inc
aas
mov
xor
or
in
arpl
cwde
adc
sar
xor
arpl
jae
sub
cmp
and
mov
js
jae
sbb
cmc
sar
mov
add
pop
das
inc
retf
enter
and
inc
mov
and
ss
jg
add
jo
or
shr
jbe
or
mov
add
stc
jnp
xor
pop
sbb
in
or
add
dec
cmp
out
xchg
pop
arpl
fwait
mov
loopne
sub
gs
pop
stc
or
push
inc
stos
fwait
ins
repnz
pop
in
repnz
adc
pop
ja
inc
ret
jmp
push
bound
jbe
mov
or
or
stc
cmp
sahf
pop
aas
inc
mov
popf
mov
sti
dec
ins
push
mov
sbb
inc
or
imul
lahf
mov
ins
fistp
scas
xchg
and
ds
push
jnp
jl
ds
xor
in
push
jbe
push
mov
jo
(bad)
xor
adc
jno
xchg
es
jae
push
sbb
jns
jl
adc
rcl
jge
xor
test
and
xchg
cld
ret
xchg
mov
jns
adc
inc
inc
ja
mov
jmp
mov
(bad)
iret
pusha
fsub
repz
ins
cmp
mov
sub
jno
(bad)
sbb
ds
into
add
jno
mov
adc
test
pop
xchg
test
outs
or
inc
push
ror
call
bound
xchg
adc
arpl
adc
adc
jns
cmp
dec
dec
(bad)
stc
inc
out
test
sbb
leave
add
nop
test
sub
or
xor
xchg
cmp
or
(bad)
sbb
adc
in
les
ds
xor
push
and
gs
push
xchg
sbb
movs
sahf
or
cmp
icebp
ror
fisubr
xor
jno
adc
(bad)
js
sbb
jp
aas
pop
cmp
out
push
int3
lock
cmp
jge
fdiv
xchg
cs
xchg
retf
sub
adc
pop
pop
or
mov
mov
xlat
and
call
cli
icebp
mov
fisttp
fs
jns
int3
dec
cmp
mov
xor
ins
mov
mov
addr16
xchg
inc
test
jno
adc
add
into
(bad)
and
mov
and
ja
jno
stc
dec
mov
add
inc
outs
jno
mov
jmp
outs
dec
cmp
fs
(bad)
stc
retf
pop
ds
mov
retf
add
in
out
imul
or
movups
out
add
dec
sbb
push
fwait
cmps
pop
cmp
sub
or
js
mov
dec
cdq
mov
xor
mov
add
jne
inc
inc
jnp
sub
dec
jp
ds
ss
sub
add
(bad)
pop
mov
push
ret
sub
cmp
in
fdivr
or
call
xor
adc
and
add
or
dec
or
mov
xor
mov
lods
inc
inc
aas
push
retf
shr
inc
adc
(bad)
inc
f2xm1
je
aad
gs
call
mov
mov
shr
stos
movs
sahf
add
and
leave
add
lods
mov
sub
jmp
dec
sbb
cld
dec
pop
mov
xchg
loopne
imul
inc
sti
ss
xor
hlt
leave
push
pop
idiv
xor
xchg
sar
ficomp
sub
cmps
ret
add
fnstcw
jb
jmp
movs
or
cmc
into
or
idiv
jmp
mov
sbb
call
mov
push
and
inc
movs
data16
jecxz
xchg
es
xchg
push
push
not
pop
sar
jmp
lods
sahf
pop
hlt
jg
add
(bad)
adc
sbb
mov
lea
test
dec
mov
sbb
(bad)
stos
outs
jbe
mov
int
pop
xchg
push
jns
push
mov
sbb
and
aaa
jmp
(bad)
ror
xchg
push
fstp
ret
inc
call
jno
jns
hlt
inc
cmp
in
rcl
scas
iret
mov
pop
and
mov
retf
jmp
int3
lods
fidivr
ds
loopne
test
sar
clc
mov
add
jnp
xchg
adc
mov
pusha
push
jne
fsubr
inc
mov
xchg
and
pop
jge
int
std
xchg
sub
dec
fs
outs
sbb
xchg
push
cmp
je
mov
test
repnz
mov
stos
ret
mov
call
jle
pop
ret
je
sahf
je
sar
cmp
push
pusha
mov
adc
test
outs
xor
push
sar
rol
push
sbb
cmp
sub
es
in
add
cmp
pop
dec
outs
(bad)
pop
arpl
neg
cdq
sub
jmp
push
ins
push
addr16
idiv
inc
sti
pop
inc
sar
das
(bad)
push
data16
dec
aas
repz
xchg
jecxz
iret
jnp
sub
aad
ret
dec
jp
ds
pusha
inc
adc
adc
mov
call
xchg
hlt
or
shr
add
cmp
cmp
inc
arpl
nop
es
leave
scas
push
js
test
jp
pop
loopne
(bad)
jns
or
cmp
add
test
push
imul
out
pop
vmovaps
ja
call
stc
stos
xchg
inc
jno
push
sub
mov
dec
stos
cmp
cmp
icebp
push
enter
sub
xchg
or
out
mov
mov
cmp
cmp
out
pop
nop
xor
jmp
jecxz
jle
imul
add
xor
xchg
sahf
xchg
dec
cmps
loopne
mov
add
gs
add
push
mov
pop
sbb
cmp
lods
inc
mov
jmp
(bad)
inc
inc
stc
mov
inc
mov
outs
mov
out
fmulp
xor
jnp
jecxz
call
jle
jb
cmp
or
inc
stc
inc
icebp
popa
sti
mov
mov
jne
ins
jge
cmp
mov
xchg
cmp
mov
mov
repnz
add
add
mov
adc
dec
bound
lock
inc
repz
sub
mov
inc
add
les
in
dec
arpl
push
inc
sbb
loope
popf
mov
(bad)
out
rcr
pop
cmp
sbb
lock
cmp
movs
in
add
imul
jbe
mov
jmp
push
dec
rol
inc
jl
jbe
jmp
loop
les
jo
inc
loope
fdiv
icebp
xor
cmc
sub
lahf
sar
aaa
xor
inc
iret
sahf
push
mov
mov
scas
cmp
fsubr
cld
call
mov
jmp
mov
inc
dec
ss
sbb
push
inc
loopne
sub
cmps
xchg
test
push
inc
jae
add
pop
xchg
movs
sti
(bad)
cld
les
push
outs
pop
jno
add
aam
jae
mov
inc
stos
push
xor
hlt
xlat
loope
(bad)
mov
push
inc
cmp
xchg
mov
outs
dec
or
in
mov
push
lods
xchg
cmp
call
inc
shl
in
adc
or
sbb
cdq
(bad)
(bad)
ds
cmp
arpl
icebp
loope
mov
push
sbb
pop
mov
out
add
mov
adc
cmp
add
sbb
xor
pop
mov
sbb
jmp
mov
add
fwait
inc
mov
enter
jg
sub
cld
push
or
and
es
xor
cmp
mov
cmp
popf
test
add
inc
inc
dec
enter
bound
psrlq
gs
xchg
mov
cmp
xlat
call
dec
in
ins
sub
pop
lds
push
cmp
push
ror
dec
mov
mov
push
out
icebp
out
and
(bad)
hlt
loop
pop
jae
mov
pop
and
or
mov
loope
stos
mov
push
popa
retf
frndint
pop
dec
sub
mov
les
xor
or
into
pop
add
(bad)
fcmovnbe
pop
fst
mov
push
push
xchg
repnz
and
clc
out
or
arpl
rol
(bad)
sbb
shl
ret
cmp
or
mov
inc
cmps
loope
cmp
sub
mov
call
jnp
inc
xchg
div
or
sub
lock
cld
cs
and
stos
loop
daa
sbb
xor
mov
inc
cli
pushf
mov
mov
loope
mov
retf
cmp
int3
ror
jl
ins
test
cwde
mov
mov
rcl
jg
jp
inc
daa
sar
jmp
and
xchg
idiv
cmps
cmc
div
jp
ret
movs
dec
jg
jmp
push
sub
push
xchg
or
aad
pop
and
cmp
cmp
and
mov
das
jb
iret
mov
nop
push
fsubr
clc
jg
mov
sahf
add
int
mov
aaa
cmc
sub
mov
test
xor
scas
inc
mov
mov
xor
add
call
sub
ret
inc
cmc
add
outs
pusha
out
mov
fld
cs
mov
mov
enter
or
daa
inc
adc
jmp
pop
mov
xor
inc
ret
outs
jl
aad
sub
stos
std
test
mov
jmp
ins
cmp
popf
cmps
mov
aas
std
and
mov
in
popa
inc
add
cli
mov
cdq
mov
clc
retf
xor
inc
neg
inc
cmp
in
mov
(bad)
call
adc
or
sti
in
xor
in
jae
aam
sahf
mov
mov
inc
lods
daa
lds
adc
push
aaa
hlt
mov
fistp
dec
rol
and
mov
loopne
add
inc
test
fisub
mov
xchg
imul
and
mov
mov
cmp
pop
cmp
jns
mov
aas
adc
dec
jno
out
sahf
or
das
ins
pop
cmp
inc
xor
push
nop
sub
sbb
push
push
jl
fld
loopne
dec
loopne
mov
and
inc
and
xor
xor
dec
xchg
mov
inc
mov
mov
inc
movs
xchg
mov
inc
sbb
push
sub
fiadd
fdiv
shl
inc
push
inc
imul
out
iret
loopne
push
test
xor
add
sbb
call
je
lds
push
sub
test
mov
sar
test
mov
scas
jo
inc
std
adc
xor
or
jp
jns
push
loop
in
jb
mov
nop
scas
(bad)
cmc
data16
mov
sar
mov
sar
push
add
adc
pop
fs
mov
mov
sub
xchg
xchg
movs
mov
add
into
add
mov
sbb
inc
in
aas
mov
retf
mov
ror
cmp
mov
xor
push
stc
mov
data16
jecxz
xor
push
push
(bad)
iret
pusha
push
push
jns
out
fild
xchg
mov
test
pop
retf
xchg
dec
(bad)
loopne
sub
fadd
scas
fldcw
(bad)
fstp
inc
jbe
mov
inc
out
adc
leave
or
jbe
ds
les
loopne
shl
stos
inc
arpl
pop
lea
(bad)
mov
adc
addr16
or
cmp
lahf
jb
das
fld
outs
call
inc
ret
repz
mul
stos
mov
mov
pop
popf
inc
adc
mov
les
adc
sub
push
int
fist
pop
ret
push
clc
xor
jnp
mov
vcomiss
cwde
jns
and
fcomi
in
xor
cmp
sbb
cmp
test
dec
cmp
sar
lods
or
sub
inc
pop
push
sub
push
sbb
pop
dec
fst
xor
pusha
jmp
inc
and
mov
inc
(bad)
dec
dec
(bad)
ror
pusha
xor
pop
imul
(bad)
fmul
dec
dec
add
jno
cmp
jae
pop
and
mov
out
or
frstor
aad
sbb
xlat
push
not
cs
out
xchg
mov
inc
call
sub
sbb
aas
fcom
test
cmp
dec
cmp
push
add
mov
test
rcl
pop
xor
fldcw
cmps
sar
or
stos
mov
sub
(bad)
cli
lds
inc
ret
call
aas
inc
jns
lahf
gs
fistp
imul
cmp
mov
add
sub
mov
mov
icebp
push
stc
aaa
fild
popa
mov
sahf
(bad)
mov
fiadd
rcl
adc
inc
add
imul
pop
adc
add
inc
xor
in
mov
inc
lea
sub
add
mov
fist
int
dec
fcom
and
test
jnp
and
cmps
inc
mov
fadd
or
dec
ins
cmp
sbb
inc
mov
cmps
js
pop
dec
inc
cmps
mul
retf
repz
xor
(bad)
xchg
inc
push
pusha
mov
test
adc
fmul
daa
icebp
cmc
test
inc
clc
inc
aam
mov
xchg
out
shr
gs
pop
vpsubusw
pop
pop
cmp
adc
fiadd
nop
push
inc
popa
pop
mov
int3
push
cmp
cmps
cmp
arpl
in
jmp
mov
int
test
xor
fs
mov
xchg
jg
test
rcl
push
sub
sahf
lds
add
cli
pop
ror
mov
xchg
xchg
or
mov
xor
icebp
xchg
cmp
clc
adc
ins
ret
cmc
ret
ficomp
maxps
shr
shl
dec
mov
leave
hlt
add
dec
add
dec
das
jle
jge
(bad)
lahf
add
imul
dec
mov
sbb
cwde
(bad)
movs
mov
movs
sub
jno
mov
repz
pop
repz
call
pop
cmp
jge
mov
jg
cdq
or
scas
xchg
lea
fst
xor
and
bound
mov
sub
mov
jge
inc
xor
cs
xchg
popf
push
pop
fmul
inc
push
cmp
out
cmp
and
adc
fnstenv
pop
mov
mov
mov
push
xor
xor
and
outs
mov
lods
(bad)
loope
mov
(bad)
pop
sub
int
adc
xor
cmp
inc
scas
cli
fidiv
pusha
jns
int
xor
sbb
add
arpl
mov
daa
and
imul
rcl
push
jno
pop
sub
dec
push
dec
pop
sub
xchg
cmp
jbe
dec
jecxz
xor
mov
sbb
cwde
std
cmp
imul
test
xchg
pop
bound
inc
test
or
and
mov
stc
test
inc
retf
sbb
jmp
inc
fwait
mov
sub
mov
ficomp
inc
hlt
adc
cmp
ss
cmp
cmp
sub
into
jno
shl
sbb
jle
inc
test
push
shl
adc
xchg
enter
pop
inc
pop
mov
cmps
cmp
in
inc
push
imul
test
repz
inc
xor
scas
push
inc
inc
ficomp
cmp
cwde
mov
shl
xchg
fdivr
adc
mov
xchg
mov
jo
stos
cdq
retf
out
sub
and
xchg
aam
sar
dec
jne
mov
sahf
or
cwde
or
sar
jecxz
dec
mov
push
push
aaa
sbb
sub
repnz
xchg
mov
ret
mul
xor
sub
popa
xchg
ret
and
sahf
cwde
leave
cli
lds
dec
xor
gs
sub
cmp
or
fcmovnbe
bound
ss
mov
cmp
jno
(bad)
cmp
ja
enter
and
push
pop
packuswb
sub
rcr
add
push
push
movs
mov
push
and
adc
mov
gs
sbb
jmp
(bad)
cmp
stos
jnp
pop
mov
cmp
xchg
out
aas
cdq
js
(bad)
stc
or
mov
jae
aam
mov
or
loop
xor
mov
sar
loope
test
mov
sub
jecxz
push
shr
sar
loope
ds
mov
adc
add
mov
(bad)
mov
mov
arpl
pop
call
mov
jp
push
ins
xor
mov
push
jns
ret
adc
scas
push
inc
movs
push
pop
daa
mov
arpl
in
sub
dec
adc
(bad)
fistp
mov
or
mov
cmp
cmp
ins
sub
outs
js
loope
inc
xor
jg
jns
cmp
cli
xchg
sub
xor
addr16
pop
imul
iret
rcl
popa
cmp
pop
ins
jle
inc
stos
add
or
inc
mov
inc
fiadd
lock
mov
cwde
mov
cmp
int
dec
scas
cdq
mov
add
retf
in
inc
inc
dec
sbb
mov
rcl
ja
xchg
adc
xlat
stc
dec
movs
inc
enter
cs
adc
sub
cmp
imul
mov
inc
test
rcl
xlat
sar
retf
lods
and
mov
xor
out
cmp
jl
adc
jge
xor
mov
push
movs
fist
and
stc
cmp
sbb
mov
and
sbb
dec
pop
push
add
mov
sahf
lea
mov
pusha
mov
nop
mov
cmp
lods
pop
test
inc
ins
push
sbb
mov
outs
lahf
mov
cmp
jmp
data16
outs
dec
or
test
adc
into
dec
cwde
xchg
lods
jno
js
or
sub
std
xchg
mov
scas
cmp
inc
and
xchg
ss
cmp
fld
in
jmp
cmc
dec
jae
add
adc
sub
mov
mov
mov
cmps
add
pop
push
cmp
inc
popa
sbb
mov
pop
inc
push
xchg
mov
jg
or
(bad)
repz
(bad)
adc
mov
push
lods
cmp
scas
inc
fs
adc
sub
enter
ins
cwde
test
fisttp
das
dec
dec
fs
shr
sbb
clc
cmp
sbb
add
xchg
or
adc
out
bound
cmp
pop
push
sbb
jns
test
mov
(bad)
std
sar
sbb
sbb
or
les
mov
iret
inc
rol
aad
fdivr
gs
push
mov
jno
sub
or
xor
push
jmp
inc
cdq
mov
aas
mov
jbe
ret
mov
in
mov
inc
fimul
(bad)
push
or
cmp
cmp
mov
dec
stos
pop
dec
sub
xchg
jmp
jmp
les
and
les
dec
cmp
leave
or
iret
dec
push
out
pop
inc
pop
dec
push
inc
aam
jae
mov
xor
cmp
fld
sti
add
add
test
out
hlt
push
out
jecxz
cmp
rcl
push
and
xor
clc
inc
lock
add
inc
jne
sub
daa
adc
ins
jae
imul
out
push
inc
int
js
das
adc
fxch
jecxz
mov
or
sti
sar
jns
fidivr
test
cmp
mov
mov
pop
inc
jae
cwde
test
retf
or
(bad)
xchg
mov
or
sbb
push
aas
outs
sub
add
adc
addr16
dec
add
dec
dec
inc
mov
pop
mov
inc
es
jg
leave
repz
sub
add
sub
ds
add
lods
inc
in
dec
inc
jae
retf
loopne
stos
xor
inc
mov
or
icebp
repnz
jmp
hlt
retf
inc
out
sbb
mov
loope
(bad)
jmp
imul
arpl
inc
add
es
mov
test
call
xor
aas
daa
repz
in
movs
jp
aas
sub
test
daa
add
sbb
dec
lea
pop
push
sbb
mov
xchg
jae
inc
loopne
sti
rol
dec
in
mov
xchg
inc
or
bound
in
push
xchg
pusha
imul
retf
sbb
out
or
ja
mov
or
stc
addr16
fwait
loopne
mov
and
js
pop
mov
inc
sub
add
push
pop
pop
inc
pop
cmp
lea
xor
mov
inc
inc
xchg
(bad)
cmc
vmovaps
pop
rcr
mov
ret
cmp
push
pop
push
sub
sti
adc
cld
xor
sbb
jno
jns
fbstp
xor
or
(bad)
adc
push
xchg
inc
adc
pop
push
jns
aad
in
lock
mov
(bad)
jge
test
adc
or
rol
into
sbb
push
jl
sbb
inc
push
fnstcw
push
icebp
ins
or
cmp
loop
mov
hlt
mov
mov
jno
test
dec
scas
sbb
aas
daa
sbb
push
(bad)
cmps
jbe
pushf
push
sbb
outs
jle
add
outs
lods
stc
push
(bad)
or
or
int
out
shl
mov
test
idiv
sti
stos
test
cdq
ja
in
imul
test
mov
in
dec
retf
aaa
cmp
mov
mov
mov
mov
cmps
inc
mov
pop
mov
inc
mov
cmc
jmp
or
(bad)
inc
jle
mov
pop
mov
popf
inc
inc
and
jno
jnp
lods
into
inc
or
sub
mov
loope
mov
cmp
cmp
mov
add
add
add
xchg
jno
mov
cmp
mov
inc
adc
mov
push
cmp
sahf
adc
in
rol
movs
addr16
add
jb
fsub
movs
pusha
inc
inc
call
dec
outs
sub
xchg
pop
lahf
mov
sbb
inc
jle
adc
cmps
fstp
gs
jecxz
pop
mov
mov
out
cld
repz
enter
inc
sub
(bad)
push
inc
push
pop
xor
clc
push
push
ret
mov
sbb
sub
xchg
mov
xchg
cmp
pop
movs
inc
adc
popf
icebp
cmp
les
mov
mov
test
dec
dec
int3
cmp
adc
dec
mov
inc
ret
sub
hlt
dec
inc
pop
inc
fisub
mov
or
jo
sub
cmp
push
cmp
outs
fxch
les
push
(bad)
inc
call
daa
sbb
inc
stc
cs
inc
cmp
mov
loop
xchg
ds
or
and
daa
arpl
pop
jne
push
jo
dec
dec
jnp
push
xchg
or
and
in
aam
jnp
mul
mov
lods
cmp
mov
outs
inc
(bad)
loope
dec
mov
test
in
xchg
push
bound
jg
cmps
mov
aam
out
fadd
dec
fimul
push
xchg
aas
sub
adc
js
ret
(bad)
jmp
jge
movs
xchg
leave
or
sbb
cmp
cdq
mov
ja
retf
popf
xor
sbb
mov
or
mov
sub
push
sub
cmp
(bad)
aas
push
and
test
pop
cli
cmp
or
call
mov
cmp
push
jmp
jns
jg
adc
test
stc
(bad)
dec
inc
out
and
aas
mov
out
in
cmps
or
cdq
add
fdivr
fmul
xchg
ja
lea
jno
xchg
push
push
aas
xchg
inc
pop
xor
mov
lods
inc
push
icebp
mov
xor
cld
les
push
inc
mov
dec
jp
fbstp
sahf
sar
out
pushf
pop
outs
and
mov
repnz
(bad)
and
mov
stc
sbb
jnp
and
fstp
stc
xlat
aad
cld
adc
(bad)
out
loope
out
mov
ja
xor
inc
and
dec
sbb
mov
mov
mov
ja
dec
mov
mov
jmp
inc
ja
not
and
mov
adc
mul
rol
sbb
or
movs
inc
xchg
mov
xchg
push
cmp
mov
inc
sub
outs
pop
fwait
jns
inc
jmp
pusha
dec
into
jge
inc
arpl
enter
xchg
inc
div
out
nop
jo
iret
inc
js
or
inc
ret
test
dec
dec
dec
jnp
les
jl
arpl
cmp
add
out
cdq
cmp
in
cmp
sub
out
inc
test
data16
imul
outs
cli
fisttp
cld
or
fwait
and
add
leave
(bad)
cli
add
sbb
call
mov
enter
xor
ficomp
inc
xchg
test
push
sbb
sbb
dec
mov
stos
jp
inc
scas
dec
jns
jb
cmp
push
leave
sar
jle
call
xor
and
mov
xlat
adc
mov
mov
js
test
and
sub
jns
data16
dec
add
mov
sub
sub
shl
popa
mov
dec
xor
jns
pop
mov
ins
mov
mov
mov
inc
test
pop
inc
nop
mov
cmp
ins
mov
std
mov
imul
pusha
sbb
outs
inc
mov
xchg
lods
mov
mov
aaa
push
xchg
jne
mov
sub
push
mov
sbb
mov
mov
mov
inc
sub
or
inc
inc
movs
or
test
jae
cs
sbb
sub
sub
cmp
(bad)
sbb
jno
cmc
(bad)
mov
ss
inc
(bad)
xlat
pop
retf
xor
and
sub
cmp
mov
mov
add
inc
cmp
mov
push
dec
je
ror
cld
and
aas
sbb
xlat
push
fadd
(bad)
cmp
cli
adc
sub
push
sub
inc
shl
cmps
pop
dec
rcl
adc
stos
mov
cwde
jbe
adc
sti
push
push
cmps
repz
sub
xchg
push
enter
ds
fwait
(bad)
lods
cmp
sub
mov
jmp
iret
pop
retf
push
mov
pop
les
add
dec
sub
call
int
test
jmp
xor
adc
arpl
shl
push
cmc
lock
cmp
add
jecxz
dec
movs
mov
jl
retf
stos
retf
adc
cdq
sub
sub
mov
data16
popa
sub
cmp
cmp
push
xchg
fld
sbb
out
stc
mov
xor
add
mov
imul
jno
adc
mov
jno
call
xor
cmc
or
xchg
jle
jl
rcl
rcl
push
jle
mov
lods
mov
int3
push
adc
aam
cmp
jmp
fimul
adc
jmp
daa
shl
sti
not
lock
jns
adc
int
mov
push
loopne
inc
pop
dec
push
inc
ret
xor
mov
sub
xchg
cmp
scas
mov
in
and
sbb
ret
and
push
loop
push
repz
outs
lods
mov
mov
sar
or
jmp
repnz
pop
sbb
adc
retf
inc
scas
ins
lea
sub
mov
pop
stc
inc
mov
inc
push
pop
sbb
lock
ret
hlt
xor
retf
mov
int3
mov
popf
js
sub
and
cmp
popa
add
aam
lds
push
out
popa
inc
push
mov
cwde
xchg
jmp
xor
repz
scas
icebp
lock
xlat
jmp
addr16
gs
cld
enter
mov
mov
mov
inc
xor
leave
jl
ja
jnp
lock
jb
jns
ins
cmp
add
mov
sbb
mov
push
loop
adc
sub
lock
jmp
push
push
or
pop
lds
pop
stc
cmp
(bad)
lock
push
xor
fwait
sub
mov
mov
hlt
jns
out
or
mov
or
aad
pop
mov
ds
dec
std
jmp
or
adc
cmp
dec
inc
arpl
cmp
js
icebp
mov
mov
jmp
sbb
inc
adc
xchg
gs
outs
add
jl
jmp
and
jle
jne
data16
add
(bad)
rol
mov
aam
nop
outs
push
jmp
and
and
mov
xor
push
or
movs
mov
pusha
mov
xor
icebp
xchg
movs
cmp
lds
cmp
enter
inc
aaa
push
gs
inc
xchg
cmp
das
in
(bad)
ret
retf
ror
(bad)
and
outs
inc
push
pop
push
mov
daa
(bad)
test
add
out
push
sub
cmp
fldcw
mov
or
aam
cld
inc
pop
jae
sbb
test
movs
(bad)
mov
loopne
fisttp
dec
push
retf
pusha
cli
cmp
das
jmp
mov
mov
sub
inc
loop
xor
pop
cmp
mov
adc
inc
adc
leave
jae
and
aas
stc
jl
jl
cwde
sti
cmp
inc
dec
or
add
dec
nop
mov
stos
inc
mov
outs
aas
inc
push
pop
dec
leave
lahf
inc
or
jo
pop
inc
mov
jbe
int3
xlat
or
ja
cmp
ret
loopne
ffree
cmp
neg
push
or
jnp
cmp
jno
inc
(bad)
mov
or
cmps
jl
cmp
mov
jno
inc
add
pop
fstp
push
mov
js
clc
ret
inc
not
push
jle
cmps
rcr
loopne
bnd
inc
mov
mov
(bad)
test
nop
xor
and
inc
loop
daa
inc
xchg
cdq
sub
cli
les
ins
stos
popf
pop
bound
push
jle
das
in
or
ss
mov
adc
push
jl
fisttp
loope
ss
dec
jns
push
xor
xor
mov
mov
pop
cwde
add
call
dec
jns
test
pushf
ror
sbb
mov
mov
adc
adc
xor
shr
jno
lahf
jecxz
push
xchg
mov
add
cmp
cmp
xlat
or
sub
call
icebp
jmp
xchg
dec
div
xchg
pop
pop
adc
out
loope
pop
(bad)
repz
add
cmp
jno
stos
cmp
pop
mov
stc
inc
inc
fdiv
cmp
or
push
or
dec
sub
cmps
mov
fst
or
adc
imul
cmp
dec
xor
gs
jae
les
arpl
lock
iret
jnp
fs
in
dec
jo
mov
loop
lea
imul
add
das
pop
fs
ror
xchg
sbb
or
fcmovb
mov
pop
cmp
movs
loop
xor
jns
out
jmp
mov
sbb
inc
mov
or
bnd
cmp
and
popa
stos
add
add
push
jmp
iret
cmp
les
cmp
ds
or
xchg
inc
mov
scas
fdivr
pop
js
mov
bound
aas
icebp
stc
retf
xlat
(bad)
int3
push
loopne
(bad)
pop
jmp
jns
mov
cli
test
in
shr
data16
mov
retf
xchg
fnstcw
xor
mov
sub
test
fdiv
dec
in
out
sbb
cs
aaa
sub
lds
mov
dec
idiv
gs
addr16
xchg
int
dec
fcmove
xor
mov
iret
sbb
inc
mov
call
or
xchg
add
cmp
enter
es
mov
pop
mov
xor
fdivrp
icebp
rol
scas
mov
mov
jl
lods
mov
and
arpl
cmp
mov
iret
cmp
push
out
and
repnz
dec
xor
scas
stc
jno
jge
adc
push
mov
fisttp
inc
mov
pop
es
in
pop
inc
retf
add
adc
shl
pop
test
aas
arpl
add
jp
sub
mov
mov
out
adc
imul
in
lods
ins
xlat
and
jg
shl
add
xor
stos
push
lods
inc
mov
sub
(bad)
mov
sbb
sbb
idiv
mov
xor
jge
fdivr
mov
mov
test
adc
mov
push
sub
mov
sub
jns
xor
scas
aas
fcomi
stc
xchg
pop
cmp
loopne
pop
out
cld
mov
cmp
mov
and
mov
mov
fldcw
test
(bad)
push
jmp
mov
ss
dec
sbb
fwait
call
pop
xchg
cmp
inc
mov
lahf
mov
mov
cmp
enter
gs
das
sbb
dec
push
ja
adc
loope
jb
jp
(bad)
mov
push
mov
and
or
inc
jno
jge
jge
mov
dec
cmc
js
xor
jns
mov
ss
pop
nop
aas
xor
mov
jnp
sub
cmp
mov
retf
outs
sbb
jle
call
psubd
lea
mov
sar
loopne
adc
sub
mov
push
pop
jg
stos
mov
inc
es
jge
dec
pop
std
push
mov
sub
je
pop
inc
test
xchg
dec
sub
mov
pop
mov
jl
xchg
jae
pop
pop
fistp
or
mov
mov
or
(bad)
jle
fidivr
inc
inc
mov
fistp
dec
sbb
jecxz
addr16
(bad)
jmp
aad
or
fist
inc
jb
js
cmp
hlt
add
fwait
test
xor
push
fcmove
fild
pop
xchg
fldenv
in
std
data16
inc
jecxz
aaa
push
outs
scas
and
or
enter
and
inc
std
ret
sbb
and
push
lea
add
idiv
sahf
inc
cmp
xchg
lods
inc
jmp
add
iret
test
sbb
adc
cmps
gs
lds
in
or
jo
mov
and
in
inc
pop
retf
inc
push
ret
pop
ret
push
mov
mov
aas
mov
xor
pop
shl
sti
jg
sub
out
movs
lds
mov
jns
sub
int
dec
repnz
outs
cmp
and
cmps
ds
jecxz
xlat
outs
sahf
ret
xor
scas
fwait
jns
dec
ja
std
out
jecxz
popf
jl
lahf
sbb
or
mov
aas
ss
mov
and
add
popa
xor
sbb
add
sbb
fst
(bad)
lds
test
pop
dec
out
loope
or
dec
sbb
int
pop
xchg
hlt
fbld
rol
sbb
mov
inc
sub
jno
lfs
cmp
in
xchg
mov
mov
jns
inc
jge
add
jmp
cld
jge
jle
js
ins
add
jns
push
push
sahf
out
dec
(bad)
fsubr
sbb
scas
jb
mov
add
xor
into
rcl
js
jge
pop
fs
fnstsw
adc
ror
loope
cmp
xchg
jb
dec
dec
stc
adc
pop
sub
test
dec
leave
jp
outs
cmp
dec
aam
or
fidiv
aas
cmp
out
into
stos
jmp
xor
inc
lds
or
push
fcom
sub
fnstcw
popa
jbe
loop
cmp
inc
pop
(bad)
inc
ds
(bad)
sbb
test
ret
and
xor
icebp
fdiv
sbb
pop
cmp
xchg
and
js
repz
cdq
cmps
fcom
xchg
ud1
cmp
push
out
aam
outs
pushf
in
mov
loope
push
jl
into
inc
pop
sbb
repz
test
mov
jo
jno
or
mov
push
repnz
jecxz
aam
pop
push
loope
add
(bad)
scas
mov
(bad)
out
xchg
cs
sbb
imul
bound
push
inc
sub
leave
cmp
xchg
cmp
int3
popf
cdq
pop
xchg
sbb
stc
data16
sti
movs
xchg
aas
clc
fs
es
cmp
ja
rol
cs
pop
out
or
ret
sahf
inc
pop
outs
mov
rcl
mov
push
inc
xchg
mov
cmp
mov
mov
test
(bad)
sar
mov
loopne
cdq
or
cmp
movs
mov
jg
push
aas
adc
pop
add
or
dec
adc
cmp
sub
jns
pop
sub
ds
sbb
cmp
or
cmp
addr16
imul
cmc
inc
out
daa
push
pop
cwde
popf
mov
cmp
dec
inc
xchg
mov
pushf
test
cmp
cmp
ins
lds
lods
test
sub
cmp
std
jmp
aam
in
call
cld
inc
xchg
je
xchg
push
push
jmp
in
cmp
sub
out
cld
ja
pusha
inc
push
jb
or
(bad)
out
div
inc
cmp
and
push
cld
ja
sub
ret
ds
xchg
jmp
xor
pop
jecxz
ds
xchg
push
pop
cmps
inc
in
mov
mov
imul
(bad)
push
mov
push
ins
fwait
pop
pop
in
call
test
mov
neg
scas
inc
add
sub
das
add
cmp
pinsrw
test
mov
sahf
inc
sub
aas
mov
xor
push
inc
cmp
push
outs
mov
mov
or
in
call
je
das
pop
dec
cmp
inc
inc
ja
mov
mov
mov
and
push
aad
cdq
pop
(bad)
jns
mov
mov
inc
adc
cld
mov
mov
mov
ret
out
dec
jno
mov
in
add
in
inc
jecxz
ins
ss
xchg
cmp
dec
sbb
cmp
jns
ret
push
aas
cmp
aad
mov
popf
inc
jg
out
push
ja
out
(bad)
jmp
fstp
popf
bndstx
inc
and
scas
stos
adc
fst
pusha
xchg
xlat
jmp
je
es
nop
inc
jno
jg
xchg
je
xchg
adc
hlt
or
add
icebp
jbe
jns
inc
fsub
push
test
jae
je
ret
xchg
stc
jns
mov
mov
sub
push
test
fild
jg
cmp
xchg
xor
(bad)
mov
add
int
fstp
js
ror
push
inc
jo
mov
scas
mov
add
pushf
xor
xor
dec
jmp
pop
mov
xchg
mov
cwde
mov
xor
inc
or
cmp
push
dec
fisttp
cmp
ret
dec
mov
cmp
in
inc
fdivr
mov
inc
lahf
lds
scas
(bad)
call
sar
add
push
xchg
add
or
js
inc
sub
jp
mov
adc
xor
div
sbb
outs
clc
in
mov
jns
loope
in
or
sahf
cld
cmp
jecxz
push
cs
les
push
mov
das
lods
mov
lods
adc
mov
shl
mov
aas
jns
sbb
addr16
xchg
pop
sti
rol
fbld
mov
mov
adc
jmp
pop
xchg
fidivr
rcr
adc
pop
mov
sub
std
sbb
(bad)
fs
ret
aad
lods
movs
xor
xor
adc
lds
or
fadd
sbb
ficomp
lds
jge
not
pop
pop
mov
mov
xlat
or
mov
sar
pop
xchg
js
push
fldcw
pop
es
inc
jae
mov
pop
cmp
repz
cmp
sub
getsec
inc
shl
cmp
ja
cmp
cmps
xchg
es
push
mov
push
inc
lahf
cmp
out
xchg
sub
cwde
ja
repz
jbe
daa
sahf
clc
dec
xor
xor
je
(bad)
cmps
push
mov
scas
cmp
xor
addr16
push
cmp
clc
inc
hlt
pop
push
lods
shr
inc
jl
pushw
inc
xchg
mov
jl
lea
int
(bad)
out
das
pop
call
dec
cmp
stc
xor
call
cmps
cmc
ret
nop
adc
pop
enter
mov
ins
mov
pop
sbb
inc
mov
or
outs
out
or
add
js
xchg
sub
verw
pop
shl
jo
xor
adc
jmp
mov
loopne
xchg
ins
jns
sbb
dec
inc
jge
dec
push
in
pop
into
sahf
xor
fdiv
test
sbb
lds
fwait
and
or
neg
mov
aaa
inc
jne
aas
adc
nop
jbe
ss
scas
adc
sbb
mov
hlt
scas
imul
data16
jmp
cwde
or
outs
xchg
(bad)
fild
fidivr
(bad)
test
mov
imul
popf
shl
or
jg
sbb
cmp
test
mov
outs
pop
xor
ds
sahf
pusha
fsubr
push
adc
lock
push
push
or
pushf
cmovo
push
js
fisubr
add
jne
xchg
cmps
ins
sub
outs
sbb
lahf
ds
retf
push
or
mov
sti
mov
jmp
sbb
xor
ss
add
sub
pusha
fld
pop
fcmovne
inc
jl
mov
jns
mov
pop
pop
ror
and
js
aas
idiv
mov
mov
aaa
xchg
mov
push
inc
adc
or
imul
xchg
mov
stos
mov
push
add
mov
ja
push
outs
lods
cmp
sahf
cmp
xlat
adc
push
rcr
mov
(bad)
xor
arpl
mov
inc
push
inc
inc
nop
adc
test
push
push
lds
push
pop
sbb
cmc
es
rcr
inc
mov
dec
sub
cmp
cli
in
outs
fdiv
cdq
pop
pop
xor
nop
cmp
jnp
or
pusha
psrlq
fcmovne
shl
lods
mov
popa
clc
jns
std
cmp
mov
pusha
xchg
jb
jecxz
stos
cdq
mov
sbb
scas
fimul
test
jge
cli
and
jbe
adc
pop
xor
fsubr
inc
clc
pop
jl
ror
inc
shl
and
unpcklps
or
or
or
cmp
aad
mov
mov
adc
cdq
mov
not
xchg
push
push
pop
(bad)
in
mov
xchg
mov
adc
and
pop
mov
push
mov
ret
push
stc
popa
push
(bad)
mul
mov
pop
xor
and
outs
push
inc
jg
mov
and
stc
pop
fisttp
mov
xchg
dec
sub
mov
push
xor
hlt
dec
int
cmc
and
cli
jmp
sub
jecxz
sbb
in
inc
cld
lea
gs
pop
out
std
and
imul
pusha
sub
jecxz
sub
add
xchg
push
dec
cmp
jp
xchg
or
shl
push
inc
popf
mov
xor
rol
mov
inc
cmp
add
icebp
out
mov
sub
pop
loope
(bad)
lahf
adc
or
in
(bad)
ss
nop
aas
rcl
test
adc
retf
pop
push
dec
fstp
mov
sbb
inc
movs
push
imul
jno
xlat
cmp
xor
(bad)
jg
inc
int
jmp
inc
data16
test
loope
shl
scas
jno
mov
and
inc
(bad)
xor
btc
dec
dec
mov
ins
iret
les
(bad)
pop
inc
jl
addr16
retf
int3
test
push
mov
xor
cmps
mov
jb
aaa
push
add
cmp
pop
inc
icebp
xor
out
dec
aam
dec
dec
fimul
dec
dec
ror
jno
push
rol
dec
jge
aaa
pop
xor
adc
imul
and
ds
push
cmp
dec
push
mov
mov
cmp
sar
add
adc
das
test
pushf
pop
pop
inc
cwde
daa
jo
adc
cmp
pop
sbb
or
and
jns
xchg
xchg
adc
pop
dec
mov
mov
adc
call
pusha
(bad)
cdq
scas
sahf
in
pusha
arpl
cmps
xor
loopne
std
push
mov
xchg
mov
mov
aas
fidivr
pop
sar
jg
test
mov
dec
xchg
mov
ror
cmp
and
add
rcl
rep
stos
inc
xchg
out
cmp
(bad)
sub
jae
or
or
xchg
mov
mov
mov
out
jecxz
test
je
mov
ror
inc
stos
call
mov
mov
inc
pushf
push
pushf
dec
mov
xchg
add
xchg
inc
push
sti
scas
inc
retf
daa
mov
cdq
adc
cmp
push
iret
pop
lds
leave
xchg
call
add
pop
jns
das
push
inc
add
and
cmp
aas
or
nop
add
das
dec
xchg
inc
popf
out
mov
pop
dec
(bad)
mov
mov
aad
stc
jge
ins
jno
retf
(bad)
push
inc
push
xor
add
mov
jmp
and
xchg
mov
mov
aas
das
push
xor
not
dec
xchg
fwait
pop
ins
scas
inc
dec
cmp
rcl
inc
and
jp
push
inc
mov
lea
fdiv
test
jne
sbb
xor
movhps
jmp
sub
out
mov
xchg
and
mov
xor
enter
scas
jmp
shl
add
ja
cmp
movs
sahf
js
pop
loope
mov
adc
cs
out
and
and
pop
jmp
xchg
and
lds
jmp
jns
(bad)
or
jmp
dec
pop
cmp
sub
dec
dec
sahf
sti
or
cmp
mov
(bad)
jno
jge
pop
pop
jle
cmp
movs
sub
jge
mov
mov
sub
pop
jno
jns
sbb
cmp
sbb
sbb
scas
cdq
mov
call
ret
into
push
adc
dec
pop
sbb
jno
adc
in
sub
mov
add
movs
add
rol
cmp
xor
icebp
sbb
mov
cmp
adc
jg
sub
push
inc
test
les
sti
mov
fsubr
test
cmp
push
or
mov
push
inc
adc
pop
push
ror
test
cmps
inc
enter
add
add
mov
jecxz
xor
dec
cmp
pop
or
pop
int3
pop
(bad)
mov
push
lods
cmc
xor
aas
loopne
loop
dec
adc
sbb
popf
mov
aaa
repz
out
cmp
push
jbe
cdq
fst
cmp
mov
adc
stos
push
cmp
jb
into
sbb
mov
or
or
inc
add
stos
loopne
fwait
jg
aas
and
hlt
adc
mov
xchg
call
or
and
retf
stc
mov
cmp
mov
(bad)
pop
sbb
out
xchg
es
pop
push
out
push
jmp
test
aad
jne
mov
xchg
sub
jg
dec
fnstsw
inc
push
ret
xchg
std
fcomp
das
pop
add
xchg
aad
and
mov
enter
je
mov
gs
sub
mov
inc
xchg
add
sbb
daa
pop
aad
ror
pop
enter
sub
lock
push
outs
test
sub
loope
test
cmp
jns
push
mov
jg
mov
xor
push
adc
or
adc
or
xchg
add
arpl
test
es
add
arpl
std
push
inc
daa
mov
cmp
icebp
(bad)
dec
pusha
and
mov
aaa
add
aam
inc
cli
out
add
and
ds
jo
enter
mov
mov
nop
test
inc
mov
test
cmp
jg
sbb
loop
pushf
mov
jno
jmp
enter
ds
fdivr
mov
mov
add
xchg
into
push
mov
sbb
rol
inc
pop
cmp
stos
cmp
jnp
rol
ficomp
xor
sbb
xor
cmp
cmp
pop
sahf
xor
int3
add
push
movs
call
arpl
fisubr
add
xchg
pop
mov
imul
xor
sbb
into
or
pop
arpl
jp
and
jne
cdq
jmp
addr16
adc
ret
outs
sbb
hlt
inc
stos
mov
out
dec
and
mov
lock
pop
xor
imul
in
xchg
mov
pop
inc
jp
aad
push
dec
jnp
out
adc
in
mov
sbb
out
and
push
push
rol
dec
push
pop
sbb
jmp
mov
xchg
cmp
push
xor
out
dec
inc
push
nop
into
jns
mov
inc
loop
enter
inc
inc
iret
mov
push
inc
imul
mov
jmp
inc
(bad)
fnstcw
xchg
sub
inc
mov
push
outs
jne
loope
cmp
inc
push
xor
test
inc
add
xor
ret
stc
jecxz
inc
sbb
and
adc
pusha
inc
jnp
ror
loop
adc
xchg
mov
adc
outs
imul
sub
loop
lods
xchg
retf
sub
inc
mov
cdq
movs
ss
inc
daa
push
lock
sbb
xchg
(bad)
cmp
std
cmps
outs
loopne
cs
inc
(bad)
fnstcw
mov
xchg
sub
btr
or
jmp
loopne
pop
push
push
lock
dec
es
inc
and
rol
pop
jecxz
aas
cmp
mov
outs
mov
pushf
mov
mov
cmp
jmp
mov
dec
jp
lock
push
div
push
fcomp
cld
(bad)
sbb
inc
or
popa
jle
aad
retf
retf
xchg
(bad)
in
scas
inc
int3
imul
mov
sub
xchg
cwde
push
push
inc
jg
test
(bad)
or
jmp
pushf
add
pop
or
das
push
sti
stc
push
fdiv
inc
mov
mov
ret
and
mov
push
(bad)
shl
fdiv
stos
jl
pop
daa
cmp
ffree
push
jae
push
cli
loopne
jg
sbb
mov
dec
and
xchg
in
sub
mov
les
or
sar
mov
or
rol
xchg
jge
mov
ret
pop
stos
inc
lea
imul
jb
mov
mov
sbb
retf
jge
outs
dec
int
test
jne
inc
dec
inc
imul
sti
popf
std
inc
push
jno
pop
cmp
out
lods
dec
inc
and
ffreep
push
shr
cmp
push
retf
outs
call
mov
das
mov
jmp
xchg
inc
push
adc
mov
adc
add
cmp
std
sahf
inc
mov
xchg
push
xchg
or
xor
jge
test
xchg
scas
jmp
cmp
fiadd
mov
push
loop
repz
mov
cmps
inc
stc
add
mov
in
data16
fs
or
mov
sub
sar
aad
jnp
retf
mov
sahf
std
cmp
sub
int
xor
neg
fstp
jle
inc
(bad)
pop
(bad)
push
into
out
pop
les
mov
mov
js
jne
ds
fnstenv
lods
jecxz
adc
jo
and
mov
js
jno
mov
xchg
push
call
add
inc
sub
retf
sub
mov
jns
addr16
addr16
mov
scas
gs
out
mov
xchg
rcl
push
xor
les
inc
mov
pop
dec
push
or
inc
push
push
cmp
inc
push
cwde
xor
out
jne
adc
cmp
ja
hlt
and
cmps
adc
sbb
jne
inc
xor
cmc
loop
and
adc
mov
fist
movlhps
push
inc
sub
(bad)
xor
jb
mov
inc
popf
pop
gs
fld
inc
rcr
push
lds
add
fisttp
dec
(bad)
mov
jns
fadd
pop
retf
shl
and
mov
iret
jnp
inc
das
push
or
adc
cmp
mov
es
or
(bad)
pop
cmp
jb
mov
xchg
mov
fadd
push
sar
(bad)
imul
out
(bad)
push
sub
cmp
dec
fwait
ret
pop
ds
sub
ins
dec
mov
scas
sbb
or
inc
mov
ret
out
sub
xor
clc
mov
sub
cmp
inc
movs
mov
jmp
sub
test
(bad)
mov
inc
jns
outs
icebp
inc
add
dec
adc
test
or
lods
push
js
out
dec
inc
xchg
(bad)
in
cs
jo
xor
dec
inc
pop
inc
mov
test
es
pop
jmp
sbb
inc
retf
loopne
cs
or
pop
mov
rol
jecxz
ds
dec
mov
lock
inc
pop
dec
aam
(bad)
(bad)
inc
fstp
xor
xchg
xor
and
mov
pop
ins
push
mov
mov
loope
mov
mov
push
ja
push
cmp
pop
fstp
int
cli
lds
inc
inc
loopne
and
enter
leave
js
fstp
mov
inc
sbb
daa
ins
and
pop
xchg
out
and
mov
imul
and
cwde
lods
inc
add
mov
xor
stc
loopne
jl
cmp
add
call
loopne
retf
jle
ret
inc
jns
cmp
ret
mov
call
hlt
(bad)
ret
mov
inc
cmp
stos
inc
iret
push
mov
imul
fst
xor
retf
and
xchg
movs
test
ins
jnp
addr16
and
xchg
xchg
in
ds
sub
dec
mov
sub
adc
push
aaa
and
stc
popf
or
cmp
add
mov
inc
mov
mov
ror
repnz
jl
fcomp
lods
out
add
imul
std
(bad)
lahf
inc
inc
xchg
inc
sti
aas
clc
out
int3
cmc
mov
nop
push
call
repnz
and
add
xor
jne
inc
fdivr
fs
mov
mov
xor
cmp
xchg
ret
mov
rcr
cs
xchg
ds
ss
nop
jns
iret
stc
inc
fcomp
dec
es
jno
pop
xchg
lahf
mov
push
push
ja
fisubr
bound
sbb
add
xor
or
cmp
das
jmp
jbe
inc
mov
xor
push
jns
mov
fucomip
jb
in
mov
sub
mov
lods
jg
(bad)
or
sahf
js
arpl
pop
push
ret
cmp
aas
sub
fld
icebp
je
fcom
mov
jle
fs
jo
xor
add
dec
push
aas
(bad)
test
mov
(bad)
std
iret
sbb
stc
test
inc
in
cmp
mov
pushf
cmp
cmp
fs
xchg
sar
imul
loopne
loop
add
jge
aas
add
cmps
jno
mov
mov
sti
xchg
mov
stc
ret
popa
adc
sub
pop
push
adc
cmp
mov
jae
jnp
or
xchg
xchg
ins
inc
xor
adc
fst
xor
rcr
mov
and
dec
mov
ud0
mov
mov
xor
pop
mov
repnz
cmp
in
jo
nop
dec
cmps
inc
mov
popf
push
sbb
test
push
mov
aad
inc
pop
inc
adc
shr
ss
stc
sub
std
push
out
lock
xor
jmp
adc
inc
cmps
and
cld
into
sub
loopne
std
jmp
adc
xor
mov
inc
test
fst
out
cli
jl
bswap
stc
in
lds
aas
push
xor
push
imul
cld
ret
scas
test
and
or
mov
stos
fcomp
movs
inc
or
ins
sbb
in
das
retf
pop
popf
fsubr
cld
cmp
inc
mov
sub
ds
leave
ss
xchg
jne
arpl
inc
das
rcr
mov
pushf
push
inc
in
shl
(bad)
hlt
add
and
mov
ins
sti
test
push
(bad)
hlt
movs
mov
push
mov
jne
cmp
pop
or
jmp
int3
jbe
mov
xchg
inc
xor
rcr
push
sub
or
dec
(bad)
pop
and
loopne
pusha
cmp
sub
aad
inc
jb
and
mov
call
ja
or
out
cld
pop
lock
mov
addr16
imul
nop
mov
dec
iret
push
pop
pop
inc
add
sbb
sub
lock
xchg
daa
jecxz
outs
test
sbb
cmps
mov
je
mov
rcl
cmp
pop
fmulp
arpl
push
inc
mov
jmp
out
lods
mov
jns
inc
cmp
test
cmp
imul
popf
pop
retf
add
in
out
out
push
cmp
xchg
or
dec
les
jmp
cmp
or
xchg
imul
imul
in
sbb
inc
dec
push
inc
push
nop
mov
sub
mov
cld
(bad)
call
ja
pusha
sbb
movs
pop
mov
and
ss
inc
add
pop
dec
ficomp
or
int3
cld
push
mov
jae
dec
add
lock
push
mov
inc
out
xor
fsubrp
xchg
dec
inc
cmp
lock
and
jmp
inc
add
dec
mov
inc
clc
das
cmc
jecxz
cmp
pop
mov
mov
jmp
push
mov
int
lods
mov
rcl
stc
jl
cmp
test
or
or
retf
sti
fnstenv
mov
and
ds
dec
sub
jmp
xlat
retf
mov
pop
ins
mov
cmp
cwde
lds
loopne
or
ja
mov
fist
gs
sbb
adc
fst
cmp
sbb
mov
fild
inc
jo
arpl
lea
push
inc
push
repnz
pop
out
sub
jno
idiv
inc
add
sub
jp
or
fcmovne
push
std
outs
pop
icebp
pop
mov
sbb
dec
bound
or
out
pushf
inc
stc
cdq
lods
sbb
retf
in
pop
add
adc
push
or
iret
inc
loopne
lock
pop
inc
std
in
mov
push
or
mov
inc
and
cmp
lock
sahf
inc
imul
inc
push
xor
pop
call
mov
pushf
mov
loope
fistp
es
bound
jb
inc
xchg
push
mov
ds
push
mov
cs
idiv
mov
push
push
sub
pop
mov
sub
jle
(bad)
loopne
add
xor
jp
and
enter
fucomip
jae
jno
mov
dec
and
push
or
mov
inc
sbb
jl
mov
enter
leave
push
dec
dec
inc
ins
jg
add
pushf
sahf
lods
inc
(bad)
jge
out
xlat
adc
sub
and
mov
mov
lods
or
or
and
mov
or
outs
inc
dec
jb
movs
shr
push
rcl
mov
outs
mov
popf
push
cmp
jne
jns
je
and
or
aam
(bad)
jmp
je
cmp
sti
push
dec
or
fistp
cmp
jmp
in
js
test
jecxz
daa
and
jo
loope
and
fst
mov
aas
cmp
jl
shl
ins
fstp
not
or
fisub
ins
fstp
inc
cmp
sub
push
push
or
mov
inc
cmp
or
loop
sbb
xor
sbb
jo
jge
es
pop
xchg
jns
or
addr16
cmp
bound
clc
jno
call
push
retf
stc
in
xchg
push
jmp
cmps
inc
sahf
retf
pop
test
xchg
nop
jmp
int
(bad)
cmp
xor
xor
jns
outs
push
in
jl
test
scas
jns
cmp
test
mov
mov
push
inc
ret
sbb
lea
stos
push
push
cs
sub
add
sub
es
inc
inc
cmp
out
push
and
inc
lds
xchg
mov
adc
inc
(bad)
cli
pushf
jle
jmp
jo
int3
push
mov
cmps
cmp
jecxz
fistp
inc
(bad)
dec
add
js
push
pop
mov
xor
cmp
pop
pusha
loope
lods
sar
pop
mov
call
and
xchg
dec
push
sub
jecxz
dec
push
arpl
adc
mov
rcl
in
add
out
pop
jb
dec
fld
stos
mov
pop
and
mov
pop
sub
push
mov
sub
mov
pusha
(bad)
mov
pop
adc
jns
jmp
sahf
mov
fadd
xor
cdq
jmp
fisubr
and
pusha
stc
fwait
mov
lds
nop
sub
je
cmp
fucomi
jbe
and
sbb
in
push
xchg
cmp
(bad)
xchg
xor
jg
xor
out
data16
or
cmp
push
push
cmp
cld
mov
pop
or
and
iret
inc
mov
retf
cld
or
imul
sub
sahf
scas
jbe
pop
pop
dec
xor
ud2
jbe
int
add
scas
in
and
inc
push
mov
mov
nop
xchg
mov
cmp
shl
les
fcomp
aaa
jmp
icebp
js
inc
xor
inc
gs
jnp
stos
xchg
into
inc
xor
push
(bad)
adc
bound
inc
and
sbb
mov
sub
out
and
ds
les
(bad)
aam
mov
pop
ds
adc
scas
into
fdivr
jge
jns
pop
inc
and
mov
adc
add
fs
rcl
push
retf
add
jge
xor
retf
pop
mov
xchg
jge
ins
sub
push
test
sub
call
mov
shl
jno
inc
cmp
push
xchg
xor
cld
mov
int3
fisttp
cld
loope
fld
lock
jg
inc
call
les
or
xor
mov
jne
jns
push
inc
loope
mov
dec
inc
xchg
not
cmp
leave
out
pushf
pop
ins
repnz
hlt
test
pop
cmp
mov
or
xchg
mov
or
mov
mov
fidiv
or
or
mov
mov
and
xor
sbb
pop
sbb
cmp
inc
rol
fs
call
adc
ds
cwde
test
shr
rol
mov
ret
adc
outs
push
addr16
jp
(bad)
js
xchg
ins
xor
rol
inc
cmp
cli
jnp
and
lea
retf
dec
xor
xchg
push
icebp
mov
mov
sub
sub
push
cmp
lods
fsubr
or
sti
inc
xlat
loopne
scas
lock
dec
cmp
sbb
xchg
xor
push
sub
(bad)
addr16
cmp
stc
fcomp
sub
push
mov
(bad)
(bad)
cmp
(bad)
xchg
push
fs
fdivr
movs
inc
adc
into
jns
(bad)
inc
xor
mov
lds
cmp
jno
adc
cmp
adc
call
repz
add
movs
mov
inc
mov
clc
xor
or
out
pop
adc
dec
pop
inc
jb
clc
push
dec
(bad)
fimul
mov
jae
jg
nop
mov
or
push
les
jecxz
add
mov
loop
jge
push
fcom
adc
dec
xor
or
pop
pop
fild
push
push
lods
sub
jnp
sub
add
es
mov
loopne
add
mov
push
(bad)
aad
push
jae
cmp
scas
rcl
popf
pop
sbb
push
cmp
or
xchg
out
gs
inc
mov
push
xor
jb
jbe
or
inc
scas
mov
pop
cmp
add
dec
push
sbb
cmp
inc
mov
ss
js
fstp
dec
inc
sub
sbb
pop
inc
repz
sub
inc
or
dec
ja
gs
(bad)
and
adc
cmp
aaa
push
jmp
dec
xchg
sub
pop
and
or
mov
enter
pop
xor
int
sbb
cwde
dec
xor
inc
mov
push
mov
mov
inc
ror
repnz
leave
inc
cmp
retf
inc
fdiv
lea
mov
cmp
popf
jl
inc
enter
mov
mov
sub
out
fcomp
xchg
movs
ins
popf
ret
mov
cmp
jno
hlt
arpl
sub
jge
jle
daa
fcom
mov
loopne
and
ds
ficomp
xchg
aam
leave
loopne
arpl
out
jbe
or
cmp
clc
fld
xchg
xchg
push
test
mov
gs
jmp
push
jle
fnstcw
add
push
adc
xchg
jne
fnstsw
pop
cmp
into
repz
jns
leave
jmp
jmp
mov
das
mov
stos
cmp
scas
loope
sbb
mov
cmp
mov
(bad)
sbb
and
inc
ret
fidiv
fdivp
movs
mov
xchg
xchg
jae
push
ds
leave
mov
in
call
pop
xchg
mov
repnz
xchg
sub
add
in
out
test
add
dec
ja
dec
jmp
(bad)
sub
adc
ds
add
bound
sbb
jl
ja
pusha
pop
sub
jno
pop
mov
rcl
(bad)
adc
jo
push
loop
push
cmp
bound
fs
pop
dec
add
lock
mov
das
aas
inc
cdq
ja
fsub
daa
cmp
scas
pushf
gs
cmp
sub
popa
mov
add
jne
xchg
test
cwde
data16
mov
js
(bad)
jp
inc
dec
pop
fiadd
pop
sub
fsub
cmps
xchg
fld
jmp
jecxz
pop
cmp
rcl
inc
jmp
sbb
and
mov
or
add
jle
sub
lods
fwait
outs
aad
loopne
js
and
push
mov
xchg
nop
dec
pop
pop
fbstp
sub
test
(bad)
cmp
adc
xor
inc
fldcw
fsubr
jl
mov
xchg
leave
or
mov
mov
xchg
(bad)
sahf
jmp
xor
cmp
sub
outs
pusha
and
mov
jmp
dec
and
inc
test
stos
sub
mov
lahf
xchg
cmp
fild
ss
jmp
outs
sub
inc
mov
rcr
cmp
xchg
push
push
jns
jbe
enter
push
test
jno
adc
adc
enter
ffree
aad
aaa
movzx
stos
dec
jp
inc
jle
push
xchg
xchg
mov
cwde
inc
adc
dec
mov
mov
dec
mov
cwde
xchg
pop
enter
mov
cmps
sub
cmp
ret
mov
cmp
or
dec
aas
inc
fdivr
movs
xchg
mov
pusha
ss
xchg
push
aaa
out
sahf
jne
int3
arpl
cmp
mov
mov
pop
inc
xchg
in
push
mov
fidivr
mov
and
or
mov
jns
loopne
stos
xor
jns
arpl
cmp
loope
xor
add
sub
xchg
test
sbb
cmp
or
pop
jns
fidivr
add
dec
inc
mov
or
or
mov
retf
sbb
and
push
int3
lods
sbb
cmp
xchg
jno
scas
shl
(bad)
aas
mov
test
add
push
(bad)
mov
adc
jecxz
into
inc
cmp
pop
adc
pop
jae
test
scas
cmp
cmp
out
jae
test
addr16
sbb
ds
fs
xchg
xchg
cmp
mov
inc
mov
and
xchg
cld
pop
xbegin
cmp
xchg
jns
push
xor
jge
in
mov
int
mov
test
pusha
mov
and
sub
call
pusha
jno
pop
pusha
imul
ret
pop
add
imul
cmp
retf
xchg
or
ficomp
inc
mov
loope
in
icebp
outs
stos
mov
or
inc
cmc
and
or
xor
push
add
xor
sub
fld
jmp
mov
xchg
daa
add
clc
inc
aad
lock
xchg
inc
(bad)
fbld
mov
sub
loopne
stos
fmul
pop
inc
mov
mov
call
mov
fs
cmp
mov
push
aam
aaa
cmc
cmp
dec
sti
fucomp
jne
out
bound
mov
call
mov
inc
in
push
in
inc
mov
popa
mov
fisub
out
jmp
leave
icebp
lds
jl
repnz
inc
add
add
int3
xor
pop
lds
or
mov
in
xor
sub
or
xchg
stos
outs
fsubr
pop
and
cmp
mov
js
adc
in
add
pusha
inc
or
aas
data16
push
inc
xchg
jne
or
lahf
scas
sahf
inc
cli
iret
call
adc
jmp
cs
sub
jne
jno
add
in
arpl
add
retf
test
adc
shl
ret
jge
pop
sbb
mov
fsubr
cmp
push
mov
or
(bad)
hlt
cmps
retf
push
js
mov
inc
rcr
sub
hlt
sbb
movs
scas
ins
fadd
dec
lods
out
and
cli
sub
inc
and
test
mov
ss
add
out
mov
inc
cs
adc
pop
jne
dec
push
lods
mov
and
push
cmp
add
mov
and
xchg
mov
inc
clc
stos
iret
(bad)
cmp
jge
sub
mov
(bad)
pushf
adc
cmp
inc
mov
jae
ja
push
inc
hlt
mov
and
pop
jle
or
cmp
or
mov
test
jns
lea
xor
popf
lahf
cmp
and
enter
sbb
mov
mov
sbb
sbb
fs
dec
cmp
fsub
mov
adc
push
inc
or
sub
jo
add
add
add
inc
loope
shr
push
retf
fadd
mov
sub
into
call
and
mov
sub
(bad)
icebp
lahf
test
gs
dec
ja
(bad)
push
add
inc
arpl
mov
cli
cld
rcl
rol
push
outs
fwait
add
adc
adc
or
inc
ins
mov
out
lods
dec
inc
sbb
int3
sub
inc
pusha
sub
add
mov
popa
add
mov
idiv
dec
sbb
push
pop
push
inc
stc
cmp
icebp
mov
add
test
test
inc
mov
mov
push
pusha
inc
pop
push
inc
aad
ret
dec
dec
mov
xlat
lock
paddusw
mov
fwait
mov
mov
inc
cld
cmp
push
xor
jnp
pop
pusha
jae
mov
repnz
or
(bad)
lock
xlat
sbb
cmp
jae
hlt
js
(bad)
sar
movs
inc
mov
mov
outs
aam
or
push
inc
cmps
xchg
or
shl
jge
rdtsc
enter
out
aad
and
cmp
sbb
loopne
mov
inc
or
mov
inc
pop
inc
cmp
push
(bad)
in
cmp
add
fcmovne
pop
inc
jg
mov
inc
sar
sar
fcom
sbb
ret
loopne
call
inc
mov
mov
mov
pop
inc
and
xchg
mov
inc
dec
jne
(bad)
repnz
pop
xor
ret
jno
fild
movs
loopne
sbb
mov
push
and
call
pop
inc
or
outs
sub
fsubr
out
xchg
cmp
sti
jb
and
aam
push
rol
movs
inc
ret
xlat
rcr
sbb
ficomp
inc
xor
push
sbb
psubusb
mov
push
mov
inc
xor
sbb
aam
mov
cmp
inc
jno
inc
sar
test
inc
push
stos
rcl
mov
sbb
cmps
xor
das
or
mov
mov
mov
xchg
fnsave
or
or
fdiv
iret
adc
(bad)
inc
jmp
repnz
cmp
loopne
adc
outs
sbb
cmp
popf
or
xor
inc
jnp
mov
dec
mov
mov
loope
push
mov
or
fadd
push
bound
pop
scas
and
cmp
jnp
sbb
mov
sbb
ins
js
and
test
fst
bound
leave
loop
jmp
outs
lea
nop
test
pop
stc
mov
pop
loopne
lods
cmp
push
xchg
or
sub
cs
(bad)
fsubr
stos
cdq
or
fsubrp
iret
inc
hlt
sbb
shl
jg
fldcw
add
mov
push
cdq
push
inc
jmp
fmul
enter
xchg
cmp
sbb
sar
fucom
cmp
inc
movs
fwait
or
or
cmp
mov
cmp
mov
cli
retf
int3
mov
push
mov
jg
ja
mov
sar
jno
loope
mov
fnstcw
pop
xor
xchg
dec
jmp
lock
push
mov
stos
bnd
jge
stc
cli
lds
ins
mov
fsubr
cmp
je
push
inc
sahf
push
mov
test
adc
ds
stc
or
ss
retf
push
inc
popf
(bad)
cdq
cmp
jno
xor
pop
loopne
call
mov
mov
cmp
adc
ins
fsub
sar
cmp
stc
sbb
jg
adc
fcomp
jns
cmp
lods
lock
enter
and
ret
sub
nop
into
cmp
sbb
mov
push
jle
test
push
xchg
jns
lods
add
sbb
aad
cmp
push
and
ret
fisub
mov
ja
jb
mov
xchg
push
fild
sahf
fs
stos
jne
jns
icebp
sbb
mov
rol
daa
inc
xor
out
mov
nop
mov
xchg
lock
mov
loop
or
fs
sub
jno
mov
adc
aaa
std
fst
pop
(bad)
xor
and
mov
push
xor
test
push
mov
scas
push
imul
test
xchg
jnp
cmp
adc
iret
neg
jge
repz
daa
jp
pop
outs
mov
and
(bad)
dec
cmps
repz
shl
lds
sub
sub
push
jb
fcom
retf
sub
fnstsw
adc
pop
inc
mov
(bad)
mov
add
ret
mov
push
xchg
xor
imul
xor
retf
stc
loope
dec
test
cmp
test
ss
iret
or
ins
pop
and
or
jl
lds
fdivp
add
popa
mov
pop
retf
xchg
mov
fbld
adc
xchg
sar
test
sbb
loope
iret
dec
imul
leave
sub
cli
add
xor
fisttp
sub
gs
stos
adc
jno
inc
cmp
les
inc
cmps
mov
mov
idiv
ins
inc
xchg
fwait
in
push
xchg
cmp
test
xchg
sub
aad
int3
nop
dec
loop
sti
xchg
std
mov
repnz
retf
aaa
sbb
popf
inc
sub
xchg
inc
int3
adc
xchg
movhps
lods
push
add
stc
stos
pop
lahf
mov
pop
fwait
movs
lds
inc
loop
sbb
and
push
test
sar
les
inc
mov
stc
addr16
arpl
dec
push
(bad)
cmp
(bad)
js
das
mov
(bad)
add
arpl
in
pop
cmp
dec
mov
mov
imul
lods
jb
scas
out
iret
dec
out
inc
into
inc
addr16
cwde
cld
jmp
push
das
inc
movs
push
aas
ss
(bad)
int
pop
inc
jns
sbb
dec
push
cmp
cmp
mov
add
sbb
dec
inc
int3
mov
repz
inc
stos
shr
sub
gs
add
inc
mov
xor
inc
or
mov
push
pop
push
push
inc
aas
dec
fs
xchg
les
fwait
and
cmp
inc
dec
dec
ret
mov
mov
ret
stos
jnp
jl
and
bound
xchg
sub
les
sub
leave
je
sti
pop
hlt
fadd
add
xor
and
xchg
cdq
cmp
add
test
cmp
dec
push
enter
inc
repz
icebp
scas
(bad)
loopne
pop
pop
cmp
xor
in
popa
sbb
and
mov
inc
cmp
lods
iret
sar
inc
repnz
idiv
scas
shr
dec
lds
push
in
sub
nop
cmps
jno
sbb
outs
inc
into
rol
dec
icebp
jae
and
inc
scas
xchg
pop
push
dec
std
inc
inc
push
addr16
hlt
jmp
lods
inc
inc
adc
pop
dec
push
int
inc
clc
aam
and
retf
lods
test
dec
fistp
das
xchg
inc
int
mov
enter
jle
mov
inc
dec
pop
repz
in
xchg
lods
stos
pusha
dec
dec
test
inc
dec
inc
call
add
mov
imul
sub
bnd
gs
cli
pop
ret
push
inc
dec
inc
sub
out
lock
mov
cli
mov
dec
loop
inc
cld
dec
cmc
cmp
xchg
test
pop
push
dec
pop
inc
inc
arpl
xchg
xchg
inc
add
xor
jle
or
jo
pop
xor
iret
bound
inc
xchg
and
jmp
lods
test
inc
cmp
dec
(bad)
sar
inc
lods
repz
idiv
scas
mov
call
mov
xchg
adc
in
jbe
push
(bad)
sbb
shl
and
aaa
inc
dec
ins
dec
aad
pop
xchg
sti
sub
mov
cmp
dec
test
add
inc
cmc
pop
push
lods
shr
outs
pop
inc
dec
daa
inc
cwde
stos
jmp
push
dec
movs
repz
pop
sbb
adc
clc
and
adc
lods
dec
lods
inc
pop
loop
cmovo
cmps
xchg
pop
jmp
ds
(bad)
dec
idiv
dec
repz
stos
fldcw
and
(bad)
inc
cmp
jmp
mov
mov
in
mov
repnz
stos
jne
inc
cmp
or
retf
ss
inc
icebp
inc
shr
dec
cmp
arpl
inc
xchg
test
ret
add
adc
retf
sti
dec
inc
hlt
dec
jbe
test
test
dec
or
(bad)
out
outs
mov
test
movs
test
cmp
xchg
dec
leave
rcr
cli
pop
(bad)
sbb
and
hlt
sbb
sub
sub
sbb
xchg
sar
(bad)
outs
(bad)
jns
lods
shl
movs
cmp
jmp
out
out
mov
call
mov
sbb
or
and
aas
rcl
(bad)
fsubr
dec
ss
cmp
int3
jns
jp
xlat
lahf
cdq
andnps
push
aas
sub
xor
and
pop
mov
cwde
lahf
inc
add
push
ret
and
inc
ins
sub
(bad)
and
or
sbb
adc
cmp
push
mov
jge
add
aas
sti
aam
je
jo
or
cmp
in
mov
xor
add
inc
jno
sbb
or
xchg
outs
and
arpl
rol
shl
rcr
inc
push
and
aam
or
aas
arpl
cmp
cmp
jl
loope
sub
xchg
test
xchg
pop
and
retf
mov
out
clc
loopne
sub
fs
cli
cld
stos
dec
cmp
ins
pop
dec
sub
sar
cmps
cmp
out
das
aas
sub
xchg
lea
(bad)
dec
mov
lods
adc
cmp
mov
rcr
dec
jle
movs
inc
hlt
(bad)
std
add
out
and
mov
sbb
dec
and
push
lods
sti
xchg
xor
cmp
ins
fidivr
sub
cmps
ret
mov
cmp
push
js
cmp
jmp
mov
dec
cmp
or
mov
out
cmp
xchg
lods
mov
adc
jmp
in
sub
inc
fdivr
inc
cmp
movs
sbb
inc
add
pop
inc
dec
shl
ja
out
adc
add
in
mov
inc
cmp
cdq
fs
jge
xchg
xor
es
dec
stc
jmp
clc
imul
push
mov
sti
push
xchg
cmps
pusha
cmp
mov
mov
xchg
inc
adc
sbb
test
mov
imul
sbb
data16
pop
sub
sub
jns
(bad)
cmp
fdivr
repnz
cs
adc
adc
lds
mov
jb
push
ret
loope
inc
and
neg
pop
jbe
aas
push
sbb
dec
test
idiv
push
push
dec
fst
mov
and
mov
cmp
pop
cmps
leave
xchg
push
dec
cmp
push
cmp
fwait
pop
leave
div
dec
(bad)
push
ficom
pop
dec
sub
jb
xor
fiadd
push
xor
int
ret
stos
xor
xchg
les
lds
sbb
jns
pop
mov
pop
mov
lock
pop
inc
imul
xchg
xor
stos
add
xchg
je
mov
cmp
mov
mov
dec
ret
test
sbb
cmp
adc
jmp
ss
fisttp
jns
sti
movs
xor
push
sbb
pop
jno
je
popf
out
es
mov
iret
mov
xchg
sbb
jg
sahf
scas
dec
movs
dec
mov
jno
push
xchg
add
mov
sbb
or
pop
push
mov
pusha
adc
sub
scas
jae
and
sti
mov
xchg
push
test
cmp
icebp
inc
js
adc
aam
pop
and
jg
shl
aaa
stos
retf
jno
pop
pusha
mov
push
lds
ret
push
(bad)
cmp
xor
jmp
rcr
push
and
mov
jns
or
cwde
mov
xchg
jge
cmp
jb
xchg
shl
jecxz
js
sub
push
dec
mov
mov
jb
pop
inc
enter
out
and
xor
mov
sbb
nop
add
in
mov
jp
cmp
aas
mov
sbb
cmc
push
push
jecxz
in
dec
into
jns
call
retf
mov
test
je
jns
pushf
in
and
xlat
cmp
movs
push
pop
and
sub
xor
int
xor
ds
sbb
inc
jne
mov
scas
jecxz
mov
mov
sbb
movs
xor
call
fcom
or
cmc
test
or
xchg
(bad)
cmp
test
push
xor
mov
loope
xchg
sar
xor
jb
jmp
cdq
or
addr16
sar
clc
cmp
pop
cmps
jmp
stc
aas
mov
loope
std
inc
in
imul
popf
scas
push
adc
sbb
cmp
add
push
dec
or
aas
mov
cwde
mov
mov
out
sar
cmp
inc
jns
cli
(bad)
adc
(bad)
xchg
fcom
lods
inc
retf
loopne
mov
fadd
adc
hlt
push
cli
fbld
inc
jns
test
jns
aas
inc
fnstsw
add
out
inc
push
movs
fistp
outs
inc
in
(bad)
retf
mov
test
outs
pop
lods
jo
movs
pop
cmc
pop
mov
inc
cld
jmp
sbb
out
cmps
inc
dec
inc
jbe
jae
push
xchg
xchg
xchg
mov
fsub
and
jg
ds
daa
inc
mov
xor
dec
lea
inc
in
fdivr
jg
inc
adc
mov
dec
mov
sbb
addr16
jne
out
test
mov
inc
or
ins
cli
cmp
pop
lds
or
fild
push
push
sub
mov
mov
std
inc
or
fidivr
sub
int3
fadd
sbb
es
inc
jecxz
repz
fld
xor
cs
jae
inc
jl
stc
push
ret
fild
sar
(bad)
xor
out
stos
push
inc
inc
push
scas
ja
inc
jbe
clc
(bad)
sub
ret
cmps
cmp
cmps
repnz
mov
cs
leave
jmp
cmp
movs
cmp
inc
jne
int3
js
mov
jge
ins
nop
mov
mov
dec
test
xchg
adc
aad
mov
mov
or
pop
ss
push
pop
xor
movs
(bad)
mov
add
imul
movs
cwde
mov
stos
cmp
loopne
add
xchg
and
sbb
xor
test
stc
cmp
js
add
sub
cld
mov
test
mov
push
xchg
mov
stc
jmp
test
jne
sbb
popf
lea
xchg
add
out
cmp
rcr
jp
sub
leave
inc
(bad)
retf
inc
loopne
inc
scas
pushf
lods
rep
inc
push
jo
int
leave
(bad)
ret
pop
pop
or
add
jl
cmc
xchg
imul
pop
arpl
or
ror
dec
scas
xchg
cmps
mov
add
stos
scas
outs
adc
inc
retf
std
mov
and
and
fcom
cld
push
nop
mov
sahf
cmp
dec
scas
xchg
fst
lds
inc
inc
sbb
mov
inc
push
sub
(bad)
test
stc
sahf
inc
fcom
xor
es
out
and
add
lahf
lock
ret
bound
sub
scas
mov
dec
popf
rol
xchg
movs
addr16
int
test
repz
adc
or
iret
hlt
jecxz
mov
adc
pop
sub
sub
xor
jbe
fmul
mov
ds
sbb
int
inc
jge
mov
sub
mov
cmp
push
(bad)
repz
aaa
fcomp
push
std
test
arpl
adc
sti
cmp
pop
outs
mov
jmp
jns
mov
hlt
xor
fld
xor
sbb
sti
fistp
cmp
pop
shl
adc
out
sub
inc
inc
mov
loopne
shl
aam
fdivr
or
ins
push
sbb
cmp
test
mov
add
sub
cmc
bound
mov
mov
cs
cli
and
fsub
cmp
pop
movs
cli
lods
data16
add
mov
cmp
fbld
daa
pop
pop
inc
or
js
jge
push
sbb
jns
cmp
pusha
fwait
std
mov
sbb
sti
dec
and
lds
inc
leave
sbb
inc
test
jmp
inc
jecxz
movs
or
adc
pop
out
fnstsw
retf
pop
js
xor
inc
mov
or
cdq
inc
xor
iret
mov
or
(bad)
and
sbb
push
loop
push
es
dec
xchg
test
and
out
jns
inc
rcl
push
xchg
movs
mov
push
push
push
and
jno
fcmovb
aas
pop
outs
imul
inc
mov
jg
pop
xchg
imul
cmp
mov
ss
fdivr
fistp
inc
leave
add
out
in
test
xchg
popf
int
push
fdivr
lds
xlat
daa
jbe
mov
sub
(bad)
adc
mov
call
cmps
mul
callw
popf
push
jl
jge
dec
jmp
and
addr16
pop
outs
mov
xor
ins
mov
sbb
lods
mov
es
jnp
mov
and
stc
sub
cmp
pop
call
xlat
rol
sub
sbb
cmp
jns
sbb
shl
(bad)
adc
push
icebp
stc
movs
lock
sbb
sub
cmp
push
push
mov
adc
cmp
mov
xchg
in
mov
xor
cli
out
icebp
jmp
in
inc
jle
(bad)
test
xchg
push
cmp
into
mov
ret
inc
sbb
in
movs
retf
mov
jns
or
push
and
cmp
or
ficomp
cmp
aas
sar
loop
sbb
adc
fcom
dec
aad
sub
sub
dec
push
jbe
push
push
out
cld
push
mov
inc
mov
cmp
repnz
hlt
jle
jmp
iret
sub
mov
test
or
cmps
inc
inc
jae
movs
mov
xor
loopne
inc
dec
jmp
mov
sub
xor
adc
jno
ja
pop
jnp
mov
loop
mov
sbb
cmp
je
fdivr
jmp
push
out
pop
test
mov
call
jns
sti
out
fs
xor
pusha
into
add
cdq
in
xor
fldcw
cmp
je
cmc
int
jno
mov
inc
dec
leave
inc
mov
aad
pop
pop
(bad)
pop
cmp
shl
cmp
push
fadd
mov
imul
test
ror
jbe
dec
fwait
adc
mov
push
jno
add
icebp
loope
lods
inc
push
sbb
cs
xor
mov
stos
inc
sbb
(bad)
jl
mov
je
dec
addr16
mov
jns
pop
imul
jmp
or
push
inc
jns
cmp
jno
out
sub
scas
ds
out
clc
loopne
jp
out
cmp
int
jo
jecxz
xlat
test
loope
add
pop
bound
jno
xor
sub
push
sahf
daa
retf
fild
in
mov
stos
mov
cmp
and
inc
shl
or
inc
dec
mov
inc
and
movs
test
or
cwd
jle
jecxz
push
lods
push
pop
push
mov
dec
nop
or
and
in
mov
aas
outs
pop
push
inc
retf
loope
aad
dec
fld
cs
gs
lds
lock
dec
sbb
mov
inc
sub
enter
cmp
loopne
arpl
mov
cmc
dec
icebp
pusha
mov
inc
fiadd
ret
push
sub
sbb
dec
jle
arpl
mov
out
and
xchg
sbb
inc
repnz
repz
mov
mov
sbb
cmp
adc
xor
jbe
or
int3
xchg
inc
pop
ds
push
jns
(bad)
inc
xlat
add
sbb
les
dec
imul
add
xchg
inc
or
sub
loopne
dec
inc
ds
fwait
call
and
sbb
outs
cmp
dec
icebp
loope
cmp
in
cmp
inc
push
ins
sub
jmp
cmp
nop
movs
push
aas
adc
xchg
leave
cmp
cld
cmps
mov
inc
js
xlat
and
in
cmp
sub
add
sahf
inc
mov
out
lea
push
adc
mov
shl
js
cs
dec
add
ins
dec
(bad)
add
dec
into
retf
fchs
adc
pop
and
ds
mov
mov
push
xchg
mov
mov
inc
movs
pop
pusha
pop
jne
int3
xor
out
jne
or
aam
ret
mov
pusha
push
dec
inc
cmp
arpl
xchg
aas
scas
mov
mov
shr
inc
mov
fisub
dec
mov
fild
mov
cmp
mov
stc
es
and
loopne
test
pop
sbb
dec
mov
xchg
pop
loope
mov
pop
push
scas
dec
sub
into
dec
pop
mov
push
sub
gs
ins
or
fmul
call
pop
pop
jne
into
pop
push
ds
cmps
add
push
loop
push
inc
jl
jb
add
pop
ffreep
dec
fiadd
scas
cdq
fcom
or
inc
movs
jmp
stos
iret
stos
dec
mov
fldcw
cmp
jno
xor
sub
popa
push
and
xchg
push
jbe
fnsave
lds
into
jns
cmps
xchg
or
loope
cld
cmp
jno
jp
iret
es
and
xchg
cdq
sar
push
adc
or
cmp
popa
cli
jns
inc
cmp
cmps
mov
mov
shl
and
fnstsw
adc
cmp
(bad)
repz
movs
idiv
imul
jae
adc
mov
dec
push
inc
push
inc
pop
dec
mov
inc
mov
(bad)
ds
adc
mov
ins
pop
or
and
cmp
test
mov
mov
dec
fmul
inc
aad
sahf
pop
dec
sbb
mov
inc
xor
mov
push
repz
(bad)
fld
loope
ds
xlat
adc
xchg
and
sbb
in
mov
neg
leave
test
fisub
inc
inc
sbb
cli
and
xchg
jg
dec
cmp
inc
loopne
shr
push
into
(bad)
jb
or
fldcw
fild
dec
ds
movs
and
sub
ret
add
ret
inc
sbb
cmp
xchg
mov
jp
dec
xlat
cmp
jo
fs
mov
fistp
add
add
inc
rcr
aaa
push
je
xchg
xlat
jae
cmp
xor
mov
out
mov
sub
mov
jno
sub
cmp
scas
xor
in
push
stc
push
dec
sar
push
fstp
mov
mov
push
sti
rcl
pop
lds
mov
xor
jns
retf
leave
xchg
mov
mov
data16
jno
push
scas
mov
movs
xor
aad
xchg
mov
ds
mov
push
pushf
jge
cld
pop
out
enter
push
cmp
outs
jb
jbe
fwait
lods
xchg
inc
pop
mov
aad
hlt
rol
cmp
inc
sbb
(bad)
std
fucomip
xor
xor
push
ds
ror
push
sbb
sbb
mov
popa
jnp
jnp
or
retf
dec
cmps
dec
pop
mov
aam
sub
enter
(bad)
jmp
and
add
cld
and
sbb
(bad)
cmp
adc
shl
js
retf
inc
popf
test
inc
sbb
repz
popf
and
mov
(bad)
mov
xchg
xchg
int3
mov
jbe
inc
push
jp
fild
pusha
inc
fidivr
inc
adc
stos
ins
jg
or
pop
cmp
call
xor
dec
(bad)
mov
and
imul
or
retf
mov
fld
jmp
ins
pop
out
leave
std
jp
(bad)
popa
arpl
repnz
xchg
mov
test
lods
lds
or
pusha
pop
test
adc
inc
mov
(bad)
inc
sub
mov
inc
mov
xlat
addr16
push
jno
shl
cmp
mov
popa
jb
icebp
inc
call
xchg
jo
mov
nop
ror
adc
jbe
xchg
add
fstp
mov
jmp
add
push
ds
jge
int
not
pop
dec
xor
xchg
aas
rol
xor
jge
fist
xchg
lods
jle
mov
or
sub
jnp
mov
pushf
sahf
(bad)
bound
add
sar
pop
sbb
dec
fs
inc
add
cmp
lods
adc
dec
dec
inc
in
pop
test
addr16
sub
ins
jl
jne
scas
shl
outs
(bad)
cmp
inc
push
shl
pop
or
mov
cmp
popa
push
outs
dec
push
je
push
xor
jno
inc
mov
or
int3
ret
iret
stos
movs
test
imul
leave
mov
xor
dec
cmc
sbb
addr16
in
imul
out
rep
pusha
je
mov
mov
dec
mov
nop
mov
out
cli
lock
or
ret
in
sbb
fsubr
sahf
sbb
dec
inc
push
ret
adc
add
(bad)
fcomip
push
data16
outs
imul
xor
or
push
dec
movs
xchg
sub
mov
out
call
jns
mov
mov
jbe
mov
jmp
cmp
jmp
dec
or
jg
or
dec
dec
or
and
xchg
cmps
jge
mov
cld
cmp
std
retf
(bad)
rcr
aad
loopne
ds
push
cmp
loope
mov
cmp
out
sub
and
push
jo
addr16
jb
ins
mov
sbb
in
and
sbb
mov
imul
jle
movs
or
aaa
add
in
cli
xor
fsub
scas
(bad)
inc
lods
mov
push
mov
ror
dec
sub
adc
cmp
aam
push
inc
(bad)
aad
pop
inc
pop
pushf
mov
push
xor
pop
and
mov
in
pop
out
inc
jp
scas
loop
and
int3
daa
inc
jge
xor
cmp
and
inc
sti
add
(bad)
retf
inc
ins
out
dec
pop
icebp
mov
enter
xchg
lods
cwde
cmp
sub
lea
cli
pop
ret
in
in
or
mov
loopne
leave
mov
xchg
add
dec
int
push
retf
stc
add
push
cmp
stos
mov
mov
mov
ins
cld
jne
addr16
mov
inc
jae
and
dec
jp
cdq
fadd
call
and
push
or
rcr
jmp
jecxz
push
adc
ror
inc
push
(bad)
sub
arpl
fldenv
push
cmp
sub
xor
cmp
sub
jo
movs
push
loopne
push
inc
cld
and
xchg
mul
cmps
dec
dec
xor
in
(bad)
out
cmp
sub
xchg
test
or
inc
mov
dec
sub
mov
sbb
mov
(bad)
dec
cmp
jmp
and
mov
lea
mov
mov
ret
aaa
mov
dec
lods
mov
and
call
mov
cmps
cmp
cwde
xor
and
xor
clc
in
std
fld
repz
mov
out
mov
cmp
pop
aaa
wbinvd
cmp
shr
cmp
jp
pop
inc
add
pop
xor
mov
rcl
or
aas
ds
sti
lock
sbb
call
not
inc
inc
sub
mov
dec
dec
cmp
mov
movs
inc
pushf
or
stos
pop
gs
cmp
inc
test
inc
fldcw
jae
jl
nop
push
xchg
cmps
inc
ja
pop
dec
mov
(bad)
push
cmp
aam
jp
sbb
sub
mov
stos
mov
rcl
out
add
fsubr
fiadd
out
icebp
xor
clc
cmp
aas
lods
movs
inc
ret
jo
push
out
dec
or
mov
inc
jge
(bad)
je
mov
in
adc
adc
sbb
add
fiadd
jb
ds
pushf
inc
pop
dec
(bad)
outs
psignd
inc
fcomip
jnp
mov
cmp
sti
mov
push
add
dec
push
leave
inc
push
xchg
sub
lods
mov
mov
xor
int3
inc
adc
and
pop
inc
popf
mov
stos
sub
(bad)
adc
jp
add
or
mov
jmp
jle
mov
push
mov
mov
xor
jecxz
lods
mov
mov
cmp
out
inc
mov
push
xor
cmp
popf
(bad)
das
mov
cdq
mov
call
test
mov
push
enter
and
adc
cld
add
(bad)
push
in
sub
sub
mov
mov
sar
push
push
inc
inc
fisub
je
hlt
clc
rol
adc
retf
cmp
xchg
fcom
test
pusha
sub
inc
lea
ret
cmp
sbb
inc
and
scas
inc
jg
in
(bad)
jle
sbb
nop
dec
inc
stos
int
ins
xchg
mov
sub
jnp
dec
adc
cdq
or
push
std
cmp
jns
shr
jmp
xor
bound
fwait
cmc
xor
loope
(bad)
pop
mov
mov
jno
push
lea
out
and
xchg
idiv
ja
sub
sub
push
jp
sub
inc
test
inc
or
inc
add
adc
clc
test
cwde
enter
stos
add
clc
inc
ret
mov
rcr
xor
jno
cmp
test
mov
out
ja
js
jmp
push
shl
inc
cmp
and
adc
fsubrp
adc
jle
ss
test
lds
fisub
loope
(bad)
sbb
fbstp
daa
mov
pop
js
push
int3
ror
cmp
shl
push
lds
mov
pop
and
loopne
push
cmp
cld
(bad)
cmp
loop
test
dec
into
inc
jmp
(bad)
loopne
call
jg
test
add
lahf
pop
dec
inc
mov
daa
jecxz
out
mov
jmp
push
inc
fs
mov
sahf
mov
push
inc
jge
mov
sub
int3
fdivr
movs
xor
inc
pop
shl
add
nop
pop
jp
mov
xchg
xchg
adc
sbb
push
mov
bound
mov
sar
inc
jnp
movs
jmp
inc
sub
xlat
jecxz
aaa
and
fisub
push
aas
cwde
mov
(bad)
jns
cmp
sub
sub
(bad)
test
mov
ja
mov
inc
push
in
jge
adc
fucomp
cs
(bad)
repnz
mov
dec
pop
mov
inc
and
cmp
mov
push
sbb
daa
in
cmp
shl
je
(bad)
cmp
or
cmp
inc
xchg
jge
pusha
mov
jo
ror
jl
inc
ret
fstp
iret
ins
out
inc
mov
in
js
mov
jg
test
lods
int3
sub
sar
(bad)
mov
in
cmp
push
cmp
ja
jp
fisttp
cmp
sub
xor
lahf
loopne
mov
fimul
sub
cli
cmp
xor
inc
pushf
cmp
sub
mov
sar
out
inc
fs
pusha
mov
xor
dec
int3
inc
xchg
dec
addr16
cmp
inc
jnp
mov
mov
cwde
loop
push
icebp
mov
and
pusha
lds
xchg
dec
pop
xchg
pop
pop
inc
inc
pop
or
cmps
mov
pop
into
ror
cs
inc
cdq
outs
fsubrp
sub
and
leave
push
mov
xchg
test
adc
cmp
inc
lds
(bad)
jecxz
out
cmps
xchg
sub
sar
jns
ins
cmp
stc
mov
adc
sbb
test
dec
arpl
repz
jl
pop
sbb
mov
retf
js
mov
adc
xchg
cmps
sub
outs
and
std
or
inc
retf
mov
and
mov
jge
or
mov
mov
dec
jb
ds
mov
jo
cli
cmc
adc
jb
inc
push
or
cmps
jns
mov
mov
sahf
mov
sbb
inc
sub
retf
xchg
sub
(bad)
inc
push
lahf
sbb
pop
inc
jne
leave
jb
addr16
and
inc
or
cmp
add
jns
(bad)
sbb
and
sub
xchg
stc
cmp
sar
test
jle
icebp
push
push
xchg
(bad)
jge
idiv
xchg
mov
ins
dec
cld
mov
jecxz
jmp
cli
pop
cdq
pop
mov
pop
cwde
inc
fidivr
inc
lea
out
cmp
les
mov
out
es
test
cmovnp
cs
pop
sub
push
cld
dec
push
jne
mov
push
cmps
pop
movaps
stos
scas
push
xchg
imul
loopne
mov
fs
arpl
imul
pop
mov
ds
mov
cmp
ins
ja
mov
and
cmp
sub
repz
and
xchg
fiadd
pop
loopne
mov
or
js
mov
dec
xchg
into
in
cmp
cmps
xchg
movs
bound
pop
outs
not
iret
fiadd
sbb
daa
pop
in
sub
jnp
inc
cdq
mov
mov
mov
outs
popa
cmp
mov
shr
mov
mov
es
outs
push
inc
movs
imul
cmp
sub
sub
icebp
mov
dec
nop
cli
aas
pop
in
(bad)
add
cmp
sub
cdq
in
and
xlat
cmp
adc
inc
mov
retf
sbb
mov
fbld
ret
inc
fidiv
mov
stos
sub
jno
mov
fs
dec
cli
pop
test
jae
in
cmp
jnp
cmp
cmp
push
pop
dec
aam
and
xlat
retf
mov
jb
arpl
data16
cmp
fidiv
xchg
cld
enter
cmp
dec
inc
jg
popa
inc
sar
or
dec
pop
adc
cmp
xor
or
into
fld
fild
adc
rol
shl
and
inc
fisub
pusha
dec
inc
cdq
pop
movs
repnz
cmp
mov
add
and
aaa
movs
mov
shr
pop
out
je
sub
test
ror
pop
dec
pop
mov
pushf
(bad)
xchg
mov
mov
xchg
push
pusha
aad
push
pop
adc
sahf
pop
cdq
mov
push
cmp
inc
in
aad
inc
mov
ds
mov
rcl
mov
push
jnp
mov
popa
cmp
(bad)
div
loopne
into
mov
shl
fs
jecxz
jno
and
in
outs
push
fcmovnbe
aam
sti
fcomp
push
ds
dec
(bad)
repnz
ds
or
mov
out
fld
mov
jb
fs
cmp
adc
ins
or
jmp
lea
aam
(bad)
xor
push
ret
and
mov
and
xchg
inc
dec
inc
mov
push
fstp
dec
test
xor
mov
dec
in
clc
loope
adc
ds
not
sub
aas
aam
dec
mov
aas
cmps
mov
cmp
fimul
(bad)
cld
push
mov
xchg
call
mov
mov
jo
xor
xor
or
mov
sbb
mov
sbb
ret
test
adc
dec
je
and
test
jle
(bad)
jno
dec
xor
adc
xor
fdivr
icebp
fs
mul
(bad)
sub
std
xor
sti
dec
cmp
fucom
mov
outs
ret
mov
stos
pop
fwait
cmp
pop
rol
loopne
pop
test
pop
mov
rol
jno
xor
shr
cmp
jge
and
fs
retf
xor
test
popf
pop
retf
add
cmp
inc
sti
stos
add
jns
iret
jmp
psubw
iret
mov
xor
stos
cli
iret
jno
mov
adc
mov
mov
cmp
fs
stc
sub
and
or
and
test
scas
jg
loopne
div
fisubr
loop
es
test
mov
icebp
ja
dec
and
in
xor
fs
aad
div
mov
lods
pop
aam
stos
or
test
adc
outs
pusha
xchg
fld
hlt
mov
or
jge
sub
test
icebp
fwait
and
ret
push
cmp
sbb
sbb
mov
div
stos
jno
sbb
and
add
cmp
cmp
xor
call
rcl
inc
pand
add
mov
dec
int3
imul
push
mov
and
inc
xor
stc
(bad)
fdivp
(bad)
push
ret
adc
xor
mov
pop
outs
push
inc
fsub
or
dec
jno
jg
pop
push
fucomip
out
cmp
dec
repnz
clc
sbb
push
pop
push
push
xor
mov
popf
push
mov
and
cmp
div
repnz
xor
cmp
adc
sub
aaa
in
inc
cmp
jl
jne
mov
add
repnz
jl
adc
cmp
inc
add
push
lods
hlt
inc
outs
or
sbb
jno
(bad)
cli
inc
(bad)
rcl
mov
int
sbb
cmp
in
mov
inc
popf
pop
push
(bad)
cmc
mov
push
and
icebp
lds
mov
inc
fsub
enter
mov
call
add
(bad)
leave
idiv
cld
mov
mov
ffree
lock
push
inc
pushf
sti
cmp
and
inc
test
add
inc
push
push
fcmove
or
mov
mov
sub
cmc
pop
sub
mov
inc
pop
psrad
pusha
sbb
mov
jae
ins
add
xor
add
push
int
cmp
add
pop
xchg
or
jge
inc
rol
das
sub
scas
mov
sbb
sar
jbe
push
hlt
test
(bad)
scas
adc
or
mov
enter
test
iret
lahf
inc
jmp
push
adc
loope
loopne
lock
pop
cmps
xchg
cmps
xchg
mov
div
jge
pop
cmps
mov
mov
mov
test
aam
sub
outs
mov
or
or
xchg
xchg
fisub
sbb
sbb
cmp
or
mov
xchg
cmps
lahf
jmp
mov
or
pop
cmp
push
fcom
enter
cmp
sbb
mov
mov
aam
addr16
jns
dec
dec
adc
fs
dec
fadd
outs
mov
jno
cmp
outs
cdq
(bad)
into
ds
scas
add
xor
pusha
into
sbb
inc
je
mov
loope
in
xchg
adc
mov
or
inc
aaa
scas
cmp
jge
pop
lods
cmps
retf
loopne
sahf
cs
add
push
cmp
loop
mov
jmp
mov
data16
jno
lahf
test
push
(bad)
lock
int
push
pop
data16
movs
jno
data16
leave
and
sub
mov
sbb
rcr
mov
movs
adc
jge
add
cmps
sub
mov
pop
ret
mov
mov
bound
xchg
pop
mov
lods
cmp
fstp
dec
mov
aaa
imul
inc
push
inc
push
inc
and
cmp
mov
cmps
cmp
ror
jo
mov
inc
adc
loope
rcr
enter
aas
arpl
addr16
or
lods
xor
xchg
dec
cmp
daa
mov
mov
ds
popf
outs
adc
dec
and
xor
mov
cmp
mov
inc
inc
arpl
test
leave
and
pop
int
sub
jg
imul
fiadd
and
or
icebp
push
add
pushf
inc
pop
imul
dec
(bad)
pushf
repnz
test
inc
fdivp
dec
jae
mov
movs
out
mov
mov
into
adc
add
mov
popa
(bad)
inc
inc
mov
sbb
inc
std
xchg
push
sub
mov
aas
and
inc
pop
cdq
repnz
and
push
inc
pop
mov
ds
cmp
cmc
scas
mov
(bad)
cmp
jb
push
call
lahf
cli
cmp
inc
movs
inc
jae
daa
push
inc
cs
push
iret
xchg
ds
dec
mov
lock
jge
mov
mov
mov
or
cli
sbb
and
pop
shr
or
cmp
pop
stos
xor
cmp
pop
div
fiadd
inc
or
movs
mov
xchg
cmp
push
in
ret
push
jl
mov
and
mov
xor
mov
inc
cmp
std
push
cwde
sub
pushf
jp
xchg
test
mov
leave
dec
or
aad
mov
cmp
pop
xchg
xchg
and
mov
out
inc
icebp
rcl
test
jae
stos
mov
(bad)
pop
dec
push
mov
cmps
sar
push
test
or
or
lock
int
xor
jnp
inc
sbb
out
std
loop
lahf
pop
fs
ja
push
sar
lds
out
sbb
xchg
cmp
test
cs
out
and
inc
movs
mov
hlt
jle
xchg
sbb
and
cmp
in
(bad)
(bad)
sbb
inc
repnz
int
scas
add
dec
cmp
cmovge
jae
push
dec
adc
lds
ins
mov
xor
sub
dec
jns
test
int3
stc
sbb
mov
mov
xor
xor
mov
popa
pushf
add
xor
iret
dec
mov
dec
inc
sub
push
and
cwde
stos
(bad)
idiv
fadd
dec
jge
fist
aad
sub
fistp
jno
jle
adc
icebp
(bad)
lock
sbb
cli
shl
aad
arpl
jge
rcr
adc
mov
inc
loope
and
jg
popa
mov
mov
jae
sti
(bad)
sar
mov
imul
dec
cmp
sbb
jl
mov
push
cmp
iret
add
test
push
mov
cmps
sbb
ret
xor
icebp
jmp
std
in
ins
mov
adc
jne
cs
push
dec
sub
int
mov
movs
cmp
pop
fistp
mov
cmp
out
test
mov
pop
adc
mov
lods
cmps
mov
and
inc
cmp
xor
cdq
frndint
stc
fs
je
jmp
cmp
xor
and
fnstcw
mov
mov
mov
xor
pusha
setp
mov
sub
push
sar
mov
arpl
and
test
mov
push
enter
cmp
sahf
jmp
mov
fimul
cmp
mov
(bad)
icebp
xchg
xor
pop
clc
cdq
imul
out
test
sub
push
rol
or
mov
jno
push
cmp
ficomp
ficom
mov
mov
mov
ins
sub
mov
outs
xchg
ret
jno
hlt
jecxz
imul
dec
jnp
mov
lods
mov
cld
(bad)
fistp
cdq
or
jle
fstp
add
mov
push
sub
xchg
or
rcr
push
pop
pushf
cmp
mov
cmp
or
(bad)
(bad)
mov
aam
ud0
lods
xor
(bad)
scas
mov
pop
xchg
fist
pop
icebp
xor
mov
or
sbb
fldcw
xchg
xchg
sub
push
cmp
imul
dec
test
cdq
push
jge
enter
xchg
mov
pusha
pop
inc
inc
mov
pop
mov
push
ds
imul
inc
sahf
lahf
push
mov
imul
cmps
inc
sub
jno
sbb
jns
stos
cmp
pushf
pop
lahf
xchg
push
jle
lahf
fbld
mov
(bad)
js
(bad)
sub
mov
je
xchg
clc
loope
jnp
icebp
push
rol
pusha
mov
aad
xor
retf
mov
fs
sub
inc
test
adc
shl
pop
jl
mov
mov
sbb
and
jg
cmps
cmp
cmp
push
loopne
std
mov
jno
and
scas
sub
xchg
pop
push
adc
aaa
(bad)
pop
push
sahf
ret
jns
cmc
sbb
jle
mov
jno
inc
aam
push
and
call
push
mov
mov
mov
mov
dec
addr16
xchg
cmp
mov
xchg
and
ret
pop
inc
test
sub
dec
fcomp
push
inc
push
dec
pop
cmp
ret
inc
cmps
push
sub
adc
inc
je
adc
out
or
lock
out
ds
adc
cmp
cmp
movs
jl
out
pop
aas
push
mov
out
xor
inc
push
pushf
cld
and
fs
pop
sub
mov
cmc
in
or
test
jmp
or
sub
inc
sbb
xchg
xor
in
add
jmp
push
xlat
or
jl
aas
dec
(bad)
cwde
jbe
jl
xor
add
scas
inc
mul
repz
jp
mov
pop
aad
or
jnp
dec
inc
mov
push
mov
inc
and
sub
jnp
ss
mov
stos
inc
cli
mov
add
inc
jnp
mul
jae
dec
xor
inc
(bad)
add
(bad)
and
jnp
(bad)
ret
jmp
inc
jae
gs
mov
cmp
mov
movs
pop
adc
ins
dec
jns
cmc
inc
cmp
aam
add
cmp
out
outs
iret
cmp
adc
out
arpl
or
inc
jae
push
jns
es
in
(bad)
push
xor
and
fstp
sbb
daa
in
adc
cmp
xor
cdq
in
sbb
inc
cmc
and
das
fldpi
test
xchg
test
and
lods
rol
das
test
sahf
or
jg
sbb
stos
ds
test
in
lock
bound
fxch
pop
sti
into
inc
cmp
stos
xchg
push
inc
mov
jp
bnd
das
retf
(bad)
sub
stc
mov
clc
and
jecxz
dec
lock
(bad)
je
jb
mov
mov
(bad)
imul
rcr
cmp
pusha
into
pop
enter
adc
sahf
jns
loopne
fcom
xchg
arpl
or
sub
jns
xor
outs
call
(bad)
and
add
cld
cmp
dec
in
xor
push
dec
push
push
outs
les
cmp
stos
imul
mul
mov
pop
mov
jae
mov
outs
xchg
cs
dec
inc
pop
cmp
data16
test
inc
pop
add
push
xor
cmps
sahf
inc
jno
mov
adc
mov
int3
ror
push
and
dec
ror
sbb
jo
xchg
mov
cmp
and
out
outs
fnstcw
sbb
dec
aad
lods
push
dec
adc
(bad)
jle
data16
js
(bad)
ffree
sub
add
loopne
jg
pop
xchg
and
hlt
mov
jbe
out
cmp
stos
cmp
adc
mov
or
dec
add
mov
loop
(bad)
xchg
in
fcom
cdq
rcr
xchg
les
xchg
mov
imul
push
xchg
js
xchg
mov
cmp
fld
jae
sbb
add
ret
mov
add
out
mov
xor
cmp
pop
xchg
out
mov
xor
push
push
iret
cld
mov
sbb
jl
or
cmps
and
adc
dec
shl
adc
fcmovnu
mov
mov
mov
and
push
(bad)
xor
jns
(bad)
xor
loope
or
sbb
cdq
ja
adc
out
sbb
or
xor
and
pop
and
sbb
and
js
sbb
add
push
js
cwde
add
ins
ins
pop
leave
out
clc
cmovo
add
sbb
inc
outs
cmc
mov
aaa
repz
imul
sahf
iret
inc
loope
xor
mov
jmp
and
inc
cld
clc
adc
popa
pushf
adc
test
aam
arpl
into
or
jle
push
fs
mov
mov
ret
aas
xchg
test
jmp
or
mov
sub
test
sub
add
inc
in
aas
dec
imul
jbe
xchg
(bad)
in
ins
pop
cwde
add
xlat
inc
js
pop
inc
fstp
or
jl
mov
add
pop
lods
jb
enter
dec
adc
aas
pop
xchg
mov
test
xchg
aas
jno
inc
aas
jle
dec
js
pop
test
mov
fcomp
call
aam
lods
push
mov
not
pop
repnz
fcom
outs
enter
ret
mov
ret
stos
mov
loope
cmp
inc
in
mov
iret
push
rcl
mov
add
lea
push
or
fadd
fwait
mov
push
mov
test
fdivr
inc
xor
hlt
sbb
xchg
inc
cld
iret
push
xchg
mov
push
push
sub
xchg
pop
aas
mov
aas
pop
fcomp
pop
fsub
push
icebp
sbb
test
inc
out
dec
daa
sbb
sar
call
mov
sub
fdiv
push
in
xor
aas
test
cmc
cmp
loop
rol
or
cmp
fsubrp
sbb
imul
js
test
add
adc
(bad)
ds
sub
cmp
das
sbb
call
std
pop
clc
push
mov
push
sub
push
aad
arpl
xchg
cmps
xor
cmp
stos
cmp
jns
and
sub
mov
inc
ss
clc
jno
mov
push
mov
test
test
(bad)
cmp
lods
call
lock
pop
ss
pop
lds
stc
jge
mov
rcl
call
pop
and
lods
add
ret
movs
lea
fcmovnbe
cmovo
jns
(bad)
fisubr
cmp
mov
push
fs
jl
xchg
add
mov
dec
cmp
jge
sub
bound
push
fld
pusha
shl
(bad)
jmp
ja
ret
js
addr16
iret
mov
pushf
sti
aaa
jp
dec
loope
and
data16
fild
lods
test
mov
jmp
or
jno
sar
js
xor
pop
in
inc
dec
pop
test
es
(bad)
popa
sub
imul
jne
and
retf
adc
push
xor
stos
rcr
loopne
cmp
arpl
mov
sbb
mov
xlat
inc
add
out
(bad)
sbb
sub
xlat
adc
or
(bad)
imul
stc
cmp
movs
mov
or
clc
push
push
mov
popf
or
clc
call
push
idiv
mov
xor
ror
js
jno
cdq
push
and
pop
in
mov
mov
mov
(bad)
shl
mov
mov
jge
clc
imul
imul
rol
retf
fcmovnbe
fldenv
shl
jl
test
cmp
imul
xor
cld
cmp
add
ret
(bad)
nop
cmps
fidivr
dec
je
fsub
sub
movs
arpl
aam
jne
xor
jno
shl
xor
popf
in
push
mov
lock
inc
rcl
and
xchg
mov
mov
push
inc
in
sbb
fiadd
cdq
das
cmp
xor
push
xchg
scas
retf
or
add
sbb
add
js
dec
adc
jecxz
lock
in
inc
and
addr16
call
mov
push
inc
jae
fcom
inc
fidiv
inc
or
and
retf
pop
fs
adc
mov
inc
mov
sbb
or
dec
mov
in
or
mov
mov
cmp
sbb
(bad)
cmp
cmps
sub
(bad)
lahf
cdq
sub
mov
add
enter
add
cmp
faddp
mov
push
enter
sbb
push
inc
not
jmp
push
dec
dec
pop
ja
xchg
call
test
add
mov
ror
ror
add
stos
jbe
inc
push
xchg
mov
mov
jo
(bad)
leave
inc
sub
xchg
or
repnz
mov
inc
inc
cmp
mov
(bad)
push
inc
std
gs
div
mov
adc
popa
sti
xor
jns
mov
add
or
(bad)
adc
aas
retf
stc
mov
jns
lds
mov
std
push
push
mov
xchg
test
jo
cmp
jmp
sbb
sbb
sub
(bad)
cmp
clc
repnz
xor
and
inc
cmp
push
push
sub
jno
movs
test
jge
test
mov
ds
sub
movs
inc
sbb
(bad)
push
xor
popf
jnp
pop
aaa
popa
imul
addr16
push
mov
pop
dec
data16
pop
jno
repnz
dec
hlt
fistp
adc
ret
push
int
xor
mov
push
lea
fs
jne
movs
inc
movs
jge
inc
rol
pop
stc
ret
les
cmp
in
sbb
sti
jne
shr
xor
fs
fwait
into
cmp
push
xchg
je
scas
xchg
test
xor
fnstcw
sti
pop
test
xlat
cmp
xchg
ds
mov
mov
out
mov
xor
xchg
jno
ds
and
sub
mov
and
mov
sub
cmc
jns
mov
sbb
fsub
or
mov
out
imul
ror
xor
and
push
pop
inc
jne
mov
push
cld
cmp
xchg
inc
adc
pop
xchg
ja
push
inc
fwait
xchg
fild
xor
jns
dec
sub
popa
mov
sub
dec
mov
or
push
mov
adc
aas
pop
add
inc
aaa
fiadd
add
(bad)
mov
sub
sar
cmp
pushf
ins
or
bound
or
dec
jbe
jns
fsubrp
xlat
test
mov
cmp
pop
pop
pushf
dec
fldlg2
push
adc
jp
xchg
dec
or
sub
add
or
and
xchg
call
mov
outs
cwde
in
inc
add
xchg
jns
mov
int3
sub
mov
shl
pop
mov
es
sub
cmp
cmp
dec
and
cmp
inc
pop
dec
mov
shl
pop
inc
clc
std
mov
ss
jmp
fadd
sub
push
hlt
jb
or
aas
out
and
inc
lahf
mov
dec
push
ins
or
ds
jne
out
mov
cmp
xchg
pop
and
ss
fcmovne
je
cmp
sbb
push
cmc
push
xor
sub
push
inc
push
lahf
xchg
repnz
sbb
inc
iret
cld
ret
pop
call
outs
xchg
les
pop
retf
inc
mov
cwde
repz
inc
jge
adc
cmc
xor
movs
rcl
xlat
out
push
mov
inc
dec
pop
ror
in
add
fmul
imul
mov
fdivp
pop
data16
pop
fld
aad
and
retf
mov
push
dec
jnp
stos
mov
dec
pusha
inc
out
jecxz
sbb
dec
push
cmp
lods
sub
outs
inc
gs
mov
mov
into
jo
mov
sub
jnp
xor
sar
mov
dec
inc
sti
pop
sub
inc
or
jne
call
jl
fstp
or
inc
jecxz
das
cmp
mov
and
sbb
inc
leave
inc
iret
push
and
jp
aas
or
rol
push
mov
gs
xchg
cmp
jbe
(bad)
test
jle
leave
jmp
cmp
cld
iret
shr
pop
jecxz
fnstcw
adc
into
not
js
dec
dec
cmp
xchg
js
jno
push
data16
bound
xor
xchg
rcr
outs
cmp
aaa
mov
loopne
int3
clts
and
xor
fisttp
arpl
gs
ja
mov
push
xor
mov
int
inc
pop
fs
jno
gs
ins
inc
dec
je
mov
or
and
outs
xchg
fdivrp
sbb
std
or
mov
(bad)
and
pop
fwait
push
pop
jge
add
shr
aam
push
fild
add
sbb
gs
stos
pop
adc
aad
adc
popf
sub
jns
pop
outs
adc
ret
cmp
mov
sti
(bad)
mov
sub
sbb
jno
call
out
(bad)
jmp
sbb
push
inc
retf
in
cmp
xor
retf
std
sbb
out
jle
js
xchg
call
push
push
idiv
cmp
mov
push
std
test
push
ffree
fcmovne
dec
sar
enter
or
jmp
pop
xchg
stos
cmp
inc
es
sub
clc
pusha
xor
cmp
jmp
daa
and
jne
inc
js
add
fcomi
xlat
inc
(bad)
cmc
retf
or
mov
dec
cmp
hlt
inc
adc
jnp
mov
cmp
add
js
cmp
mov
hlt
int3
push
xor
repnz
jp
jne
inc
fdiv
aas
jl
lds
xchg
and
es
cld
xchg
pop
ret
and
in
cmp
xor
loop
cmp
sbb
(bad)
repz
daa
sbb
dec
fild
aam
test
pushf
mov
adc
pop
adc
les
jno
inc
sahf
mov
inc
adc
mov
jp
repz
mov
add
inc
sbb
cld
cmp
inc
out
int
pop
xchg
ds
cld
mov
jnp
(bad)
ror
cdq
rcl
or
outs
lea
dec
xchg
mov
lock
ss
jl
jg
out
cmp
mov
imul
and
lea
gs
pop
xor
inc
xlat
adc
test
cmp
push
push
ret
add
xor
shl
pop
(bad)
out
cmp
jbe
dec
sub
jp
sti
pop
test
inc
lock
loop
xor
push
xor
iret
fldenv
in
xchg
jne
jmp
sbb
sbb
adc
xor
iret
jb
outs
jnp
mov
ins
xor
mov
sbb
fld
cmps
stos
mov
sub
jmp
add
out
mov
push
push
in
jb
xchg
cmp
loope
add
push
(bad)
lahf
mov
pop
mov
push
dec
and
es
fdivr
xchg
leave
das
cmp
mov
mov
mov
xor
hlt
adc
or
fiadd
fdivr
inc
popf
sbb
out
jns
jle
inc
sbb
xor
lds
inc
adc
or
push
lock
push
mov
push
inc
push
dec
dec
jno
loopne
out
jl
jns
jbe
and
scas
jnp
mov
sub
xchg
cs
and
adc
pop
das
test
out
sub
jge
cmp
icebp
repz
aas
(bad)
aad
les
or
and
repz
outs
fcomi
sbb
lods
clc
lock
js
fs
adc
cmps
sbb
push
sbb
mov
add
sub
dec
jo
fld
cmp
pop
stc
xchg
push
into
xchg
mov
cmp
inc
add
stc
cmp
xchg
mov
cmp
jno
cmova
jns
jne
jmp
sub
jns
mov
fsubrp
outs
out
nop
movs
jl
sahf
jno
clc
xchg
pop
pop
inc
add
rcr
fwait
nop
jmp
sbb
adc
in
int
cmp
test
fdivrp
adc
(bad)
push
or
push
inc
pusha
xchg
or
fs
(bad)
xchg
cmp
or
dec
push
dec
pop
mov
cmp
sar
sub
mov
mov
jecxz
loopne
cld
lock
(bad)
jmp
in
neg
pop
je
and
or
mov
sub
hlt
inc
fs
cmp
ficom
aam
std
push
mov
adc
iret
push
push
jg
ror
jns
ins
fistp
or
mov
inc
cld
retf
nop
fcmovb
add
pop
add
retf
mov
pop
jp
lock
cld
jecxz
jns
push
lahf
inc
push
fwait
or
pop
nop
dec
lods
sub
shl
push
ror
inc
jbe
aam
adc
fadd
rcl
push
cmp
ror
or
mov
mov
jg
pop
loope
fisubr
xchg
out
mov
jmp
mov
cmovo
mov
pop
xor
pop
(bad)
push
pop
lds
cmp
push
push
push
aaa
inc
push
xor
es
jb
enter
sahf
call
out
cmp
inc
push
call
neg
das
cdq
inc
inc
push
adc
in
out
jp
inc
sbb
mov
ja
sbb
dec
mov
shl
sbb
add
jne
dec
jns
inc
js
out
aas
sbb
mov
jne
push
lods
inc
je
sbb
xchg
int3
loopne
test
cli
bound
or
shr
adc
push
or
jae
ret
ds
mov
sub
aas
sub
mov
xor
in
cmp
aam
test
cmp
jmp
dec
inc
mov
adc
hlt
iret
or
inc
cmps
xor
pushf
pop
and
test
sti
mov
sub
ds
inc
mov
push
imul
push
dec
dec
mov
sub
or
inc
das
imul
jo
int
loopne
xchg
sbb
mov
push
iret
aam
sbb
pop
inc
and
jle
inc
test
jb
jo
mov
jae
clc
shl
inc
push
dec
push
dec
shl
or
iret
jnp
test
stc
das
adc
ds
fs
mov
stos
xlat
cmp
inc
ret
loop
ficomp
push
mov
inc
jno
cli
xor
(bad)
mov
fdivr
(bad)
ds
adc
aad
cmp
xor
add
pop
jo
mov
mov
jno
mov
mov
(bad)
sahf
jno
adc
cmp
ins
inc
add
fs
mov
jp
test
sub
inc
push
inc
dec
push
mov
cwde
cmp
and
cli
mov
call
inc
and
add
(bad)
jbe
inc
sub
xor
stos
jo
in
shl
mov
cld
(bad)
cdq
cmp
xchg
enter
mov
dec
mov
js
jg
inc
test
mov
cmps
shr
mov
enter
cmc
pop
pop
(bad)
out
ret
push
lea
popa
jno
sub
sub
xchg
xchg
arpl
cmp
sbb
fldcw
cmc
cmp
bswap
cmp
jne
cmp
add
xchg
mov
ss
adc
outs
fcmovne
fdivr
movs
adc
jp
repnz
sar
iret
pusha
sar
pop
rcl
ds
pop
adc
jns
push
mov
fdivp
pop
cmp
mov
ds
jno
mov
and
shl
push
scas
xchg
das
mov
addr16
daa
sub
mov
shl
imul
adc
mov
rol
pop
aad
(bad)
pop
imul
popa
movs
ror
pop
mov
jns
ret
cmc
imul
movs
je
add
jp
aaa
xchg
sbb
js
mov
jno
inc
pop
pop
nop
popf
das
inc
inc
dec
int3
sti
loope
lock
or
mov
ficomp
xor
arpl
mov
xchg
mov
bound
jo
rcr
and
hlt
fmulp
inc
dec
daa
shl
popf
dec
sahf
test
movs
mov
push
loop
mov
cmp
cmp
fstp
push
pop
shr
ror
pop
ins
cmp
inc
lahf
cmp
mov
arpl
pop
jmp
hlt
cmp
sub
cmp
sbb
pop
mov
fild
xchg
mov
and
push
and
(bad)
xchg
push
add
mov
lock
das
cmp
sub
sub
fidivr
adc
ja
jbe
cmps
out
leave
push
add
inc
sub
and
cdq
mov
xlat
add
stos
add
mov
sti
add
adc
mov
xlat
out
mov
aad
jle
sbb
enter
mov
das
inc
mov
mov
push
test
(bad)
cdq
cmp
sbb
mov
inc
mov
xor
jno
out
sar
cmp
stc
(bad)
das
cmp
retf
inc
sbb
loop
pop
cmp
jno
pop
cmp
cs
sub
mov
or
sub
push
std
cs
dec
shufps
and
lock
jae
call
inc
clc
inc
jns
inc
xchg
mov
adc
shr
lds
jns
in
mov
sbb
mov
loope
sti
mov
fs
(bad)
jno
nop
dec
xor
dec
clc
in
stos
and
into
aam
add
cmp
mov
mov
daa
and
mov
inc
xchg
or
jge
sub
fsub
pop
dec
jmp
adc
push
push
and
icebp
adc
aaa
inc
cmp
aad
stos
stos
fnstcw
femms
xor
out
add
push
movs
jmp
inc
add
cmp
lock
cmp
pop
cmp
gs
xor
hlt
xor
and
retf
je
call
adc
add
xor
xchg
push
jmp
push
in
leave
ret
lods
adc
sbb
xchg
pop
mov
pop
mov
out
push
xor
icebp
push
and
jl
(bad)
idiv
test
sub
xchg
jno
clc
xchg
mov
mov
dec
and
mov
xor
outs
(bad)
pop
je
cmp
push
or
jno
(bad)
or
enter
add
push
cli
sbb
push
add
adc
add
mov
ds
jno
loop
dec
push
mov
pop
push
mov
test
int
jnp
mov
loopne
adc
adc
mov
jl
pushf
mov
pop
xor
mov
cmp
pop
jo
xchg
fisub
or
push
movaps
mov
adc
(bad)
push
inc
pop
push
les
jns
test
stc
ror
xor
retf
clc
mov
mov
mov
icebp
sbb
ins
jnp
dec
xchg
hlt
sti
leave
cmp
jbe
ret
mov
(bad)
cli
mov
xlat
ret
push
xor
mov
ja
mov
pop
and
aas
jmp
jge
loopne
push
ds
push
or
push
push
mov
or
nop
jg
cld
ins
xchg
ds
ret
sti
test
ins
sub
xchg
sbb
inc
pop
cmp
lods
test
retf
jne
inc
inc
arpl
add
mov
cmps
xchg
pop
bound
imul
mov
mov
mov
sub
or
mov
bound
test
mov
inc
cmp
cmc
adc
sub
popa
inc
outs
je
jle
jl
jno
test
mov
inc
int
cmp
dec
std
retf
add
pop
sub
inc
call
ins
out
js
inc
fs
dec
inc
inc
jno
test
inc
fild
sbb
fsubp
repnz
cmp
xor
xchg
jnp
test
mov
push
push
mov
std
cmp
aam
and
cli
mov
in
or
xchg
fisubr
sub
iret
aas
ret
movs
adc
adc
inc
add
(bad)
cmp
mov
sub
mov
dec
mov
jae
jg
add
cmp
int3
(bad)
sbb
mov
rcl
inc
fadd
out
enter
lahf
ret
arpl
sub
loopne
dec
pop
inc
push
dec
cmp
jg
aas
(bad)
mov
out
retf
les
push
xchg
fdivr
bound
pop
call
aaa
pop
sub
sbb
push
sub
arpl
jl
add
lds
sub
out
mov
dec
mov
xlat
popf
in
inc
movs
cli
cmp
mov
mov
jg
dec
jns
mov
out
fist
mov
mov
gs
or
cld
cmp
cmps
popa
test
div
xor
dec
push
inc
xchg
daa
(bad)
push
fwait
pusha
imul
cmp
xchg
sti
cmps
inc
call
or
sar
(bad)
xor
mov
(bad)
inc
inc
inc
mov
lahf
rol
pop
fucomip
scas
sub
retf
sub
jo
push
icebp
xchg
mov
sbb
mov
fld
lahf
cli
mov
cmps
fwait
outs
mov
mov
sbb
mov
inc
sub
mov
aam
push
pop
pusha
fsub
in
sub
imul
jne
lahf
mov
or
aad
popa
je
out
fild
xor
dec
loopne
nop
mov
(bad)
js
jl
push
gs
mov
sar
sbb
push
nop
dec
mov
mov
dec
push
js
imul
mov
sub
mov
jecxz
inc
xor
es
mov
jge
mov
mov
inc
xchg
mov
inc
jge
xor
outs
cmp
loopne
and
inc
sbb
jge
xor
cmp
jns
hlt
(bad)
jl
(bad)
fnstenv
xchg
pusha
retf
leave
adc
mov
dec
xor
jne
ss
adc
retf
inc
scas
movs
popa
ja
out
das
imul
icebp
pop
out
jmp
ret
pop
sub
cli
jge
cld
push
call
cmp
pop
ret
stos
xchg
xchg
mov
add
outs
ins
inc
sahf
retf
sub
dec
or
xchg
fs
cmp
xchg
jns
test
fsub
jge
pop
mov
jmp
sahf
jmp
ds
jno
frstor
fs
inc
es
aam
xchg
aaa
jp
cmp
dec
lods
jp
xor
(bad)
inc
sbb
dec
in
and
out
pusha
jno
stos
mov
out
call
fsub
ja
mov
push
jmp
(bad)
cmp
or
cmps
mov
inc
scas
mov
aad
inc
push
xchg
sbb
(bad)
mov
loopne
fist
inc
aad
mov
rcl
(bad)
adc
bound
push
mov
mov
push
jmp
adc
fsubr
xchg
cmp
xor
xor
cmp
test
loopne
push
inc
push
mov
out
(bad)
stc
lods
inc
imul
jge
add
push
sbb
add
inc
scas
mov
aad
pusha
push
iret
sbb
(bad)
dec
jmp
(bad)
jne
dec
jmp
data16
sbb
out
push
scas
cmps
cmp
das
push
or
loopne
jle
mov
or
scas
outs
push
lds
cmps
sti
fsub
xchg
mov
fcomp
sub
std
loop
jbe
mov
sbb
sbb
pop
enter
movs
inc
xchg
sbb
out
jp
dec
and
adc
fnstsw
pop
or
jnp
pop
dec
inc
fidivr
jb
inc
ret
icebp
add
cli
push
inc
fwait
pop
sbb
jecxz
adc
loopne
cmps
xor
mov
xor
and
cmp
aad
cld
scas
iret
cmp
jno
popf
jge
outs
les
ds
push
hlt
sub
fisub
pop
fdivp
bound
test
test
sub
sbb
dec
outs
loopne
xchg
jmp
inc
cmp
push
mov
into
jp
adc
mov
jmp
and
fs
or
add
add
sub
xor
jp
jne
mov
inc
pop
out
loopne
or
jge
inc
xchg
mov
xlat
add
dec
retf
inc
jge
sub
ins
xor
jg
push
sub
pop
mov
and
pop
popf
leave
inc
sub
cmp
rol
and
push
mov
mov
mov
ins
adc
pop
mov
xor
inc
shl
jae
(bad)
lds
dec
sar
or
inc
hlt
mov
and
add
sbb
cmp
push
xchg
ret
xchg
lods
jo
xor
or
and
inc
stos
cmp
jecxz
mov
loopne
sub
cmp
nop
dec
or
loope
xor
cmp
clc
les
adc
(bad)
js
ficom
dec
xor
inc
sub
mov
scas
pop
cmp
lea
or
cmp
sub
push
cmp
cld
inc
lahf
mov
cmp
cld
cmp
cmp
and
push
test
or
inc
jae
jmp
fwait
pop
add
retf
lock
dec
push
pop
or
out
loope
dec
out
nop
pop
bound
jno
and
sbb
aam
test
out
xor
sbb
jno
add
xchg
jns
out
(bad)
xchg
adc
jl
push
(bad)
repnz
xabort
ds
shr
fadd
les
mov
cmp
outs
ret
jge
dec
fild
mov
cmp
fsub
enter
jle
push
cmp
and
stos
cmp
fs
push
sahf
sbb
arpl
shr
adc
sbb
dec
or
mov
jmp
adc
and
xchg
aaa
pop
cmp
add
dec
das
rdpmc
adc
dec
mov
sbb
jle
mov
mov
cli
fdiv
movs
mov
inc
mov
test
inc
dec
inc
xchg
sbb
cmp
add
in
icebp
int
aas
inc
inc
shl
push
pop
inc
and
jge
adc
pop
popf
sar
and
sub
xlat
aam
shr
gs
scas
pushf
cmp
imul
jmp
pop
add
(bad)
ror
in
or
cmp
cmp
add
jae
and
pop
lahf
push
mov
ja
scas
xchg
xor
stc
aas
sub
outs
repnz
adc
fsubrp
ss
mov
fdivr
sbb
inc
pop
jg
sub
cmp
adc
fist
test
or
xor
or
cli
add
cmp
jecxz
jp
aam
repnz
jns
fwait
xchg
cmp
fimul
cdq
mov
inc
pop
loopne
fistp
icebp
sti
cmp
mov
inc
cmps
mov
test
mov
movs
inc
or
cmp
leave
inc
mov
add
adc
scas
call
sar
push
sbb
mov
outs
jge
daa
xor
repnz
(bad)
push
in
inc
ror
(bad)
pop
adc
mov
out
gs
mov
sahf
loopne
jmp
inc
shl
ret
inc
hlt
rcr
call
inc
bound
sub
loop
mov
xchg
add
push
retf
adc
push
pop
inc
inc
mov
inc
push
fld
fnsetpm(287
nop
inc
movs
push
inc
push
sub
cmp
pop
pop
ins
lods
clc
push
inc
jg
jne
repz
clc
cmp
inc
je
xor
popf
add
cmps
sti
mov
cli
out
hlt
out
jmp
stc
arpl
(bad)
or
inc
mov
mov
inc
jmp
leave
push
dec
dec
hlt
cmps
jecxz
pop
jno
test
xchg
repz
pop
enter
loope
mov
mov
ds
mov
fdivr
movs
mov
pop
(bad)
ins
push
(bad)
sar
lods
outs
call
sbb
mov
inc
and
xor
and
cmp
cmp
jmp
sbb
dec
lds
pusha
mov
inc
inc
jno
jne
in
movs
xor
xor
push
popf
call
inc
fidivr
push
in
dec
cmp
cmp
and
or
pop
(bad)
sbb
fiadd
lods
xlat
xchg
psubw
pushf
inc
sub
mov
retf
mov
add
ins
imul
mov
inc
cmps
mov
cdq
inc
or
dec
add
or
inc
sub
ret
lods
push
mov
std
add
dec
pop
inc
xlat
xchg
jle
repz
mov
fsubr
ds
cli
dec
fprem
inc
retf
or
mov
pop
stos
outs
pop
fcomp
fsub
xor
and
ret
call
sub
hlt
dec
inc
jle
jl
mov
cld
loopne
ins
fimul
test
cli
rcr
sub
mov
pop
arpl
jbe
cmp
aaa
add
ds
(bad)
cdq
test
mov
lods
retf
inc
into
ja
vmovupd
and
das
cmp
inc
(bad)
repz
lock
xor
test
pop
push
stos
int3
inc
and
dec
jne
xchg
inc
inc
aad
pop
dec
pop
xchg
inc
repnz
xchg
push
push
adc
aas
or
test
outs
jns
pop
stc
sub
inc
cwde
test
dec
or
cmp
jmp
push
cs
mov
jb
js
shr
fcom
sti
jecxz
call
inc
jge
aam
adc
push
pop
jmp
jecxz
sub
or
aas
jg
jne
mov
inc
loopne
int
sbb
mov
xchg
loope
jge
add
sti
fstp
dec
jmp
ja
and
push
popf
(bad)
sti
outs
std
xchg
movs
inc
popa
jae
cmp
or
adc
lds
push
das
cmp
aaa
add
sub
out
add
dec
pop
into
inc
cmp
add
in
int
movs
out
enter
inc
inc
jl
movs
xor
jecxz
cmp
cmc
push
inc
les
dec
cmp
es
je
add
out
push
jb
jl
es
jmp
mov
mov
xor
fnsave
jle
jns
mov
push
aas
inc
pop
and
cmp
inc
inc
retf
dec
lock
mov
push
pop
dec
cmp
xchg
mov
jecxz
fs
shl
mov
jl
cmps
jns
jmp
push
xor
lahf
inc
or
stc
push
test
int3
mov
dec
mov
and
dec
jl
pusha
(bad)
fstp
xor
lods
mov
stos
mov
mov
and
clc
push
fld
xchg
(bad)
cmps
pop
mov
jne
jmp
mov
jg
jle
sbb
test
sbb
xor
inc
sub
lahf
adc
scas
xor
(bad)
mov
or
xor
pop
lds
ds
mov
imul
dec
adc
push
cmp
xchg
ds
aas
retf
cmp
aaa
inc
fistp
pop
pusha
jg
(bad)
outs
dec
dec
pop
call
das
fs
xor
jno
dec
icebp
xor
jns
and
push
outs
add
mov
ret
xchg
repnz
add
nop
outs
ret
jns
cmp
pop
xor
fst
push
pop
cmc
jo
jno
jae
sti
pop
dec
xchg
jg
dec
add
outs
sahf
sbb
sub
inc
cwde
in
jp
jno
pop
adc
adc
push
fs
dec
sbb
and
adc
imul
mov
sahf
retf
mov
mov
ins
iret
lock
test
ins
adc
sbb
arpl
in
or
inc
dec
xchg
loope
pop
into
inc
mov
push
rcl
jno
xchg
mov
pop
push
popf
mov
and
jle
pop
inc
or
lahf
jns
call
lock
push
js
ret
ss
adc
test
add
fdivp
mov
movs
or
ret
cmp
or
push
mov
mov
and
int
icebp
fs
push
dec
mov
push
repnz
jg
jbe
loopne
nop
dec
icebp
sbb
mov
popf
mov
(bad)
mov
in
repnz
sub
mov
cmp
push
adc
push
adc
cmp
pop
fidivr
(bad)
in
int
pusha
mov
jb
cmc
daa
movs
push
jl
aam
cmp
jmp
cmp
iret
inc
loop
sbb
leave
pusha
xor
popa
test
pop
pushf
inc
adc
or
in
mov
inc
xor
mov
mov
imul
sar
lods
inc
pop
xchg
movs
cmp
jg
repz
ins
(bad)
cmp
imul
inc
cmp
mov
sub
dec
pop
shr
sub
mov
xor
or
sub
jno
cmc
popa
stc
or
mul
ins
icebp
xor
inc
sbb
jns
test
inc
dec
out
mov
scas
cmp
jge
fcom
aad
rcl
adc
aas
popf
xlat
mov
xlat
mov
sbb
aam
sar
ficomp
inc
jns
push
and
cmp
cmp
sbb
fs
stc
mov
cmc
sub
xchg
jp
cld
and
int3
xchg
repz
add
cdq
call
outs
mov
xor
jo
cmc
lock
xchg
(bad)
je
loopne
sbb
add
cld
and
movs
xchg
outs
sti
and
pop
sub
sbb
and
xchg
outs
pop
loope
sbb
add
mov
stc
mov
scas
inc
mov
mul
or
cs
lods
je
or
jbe
jmp
cmp
push
cmp
jmp
mov
std
movs
mov
xor
cmp
push
jno
mov
mov
(bad)
cmp
cmps
adc
push
or
mov
mov
inc
mov
shl
push
xchg
lea
adc
adc
mov
test
push
imul
stos
xchg
mov
or
jnp
rcr
adc
mov
out
or
adc
sub
cmp
dec
and
adc
js
sub
inc
mov
icebp
mov
jle
xchg
pop
or
cmps
pop
shl
mov
fcomp
jp
ss
pop
cmp
mov
arpl
xor
cmp
mov
add
jnp
(bad)
sbb
call
inc
mov
mov
stos
iret
sub
jo
cmp
jns
sub
mov
test
add
dec
mov
add
inc
shr
arpl
inc
mov
sub
inc
sbb
into
or
stc
pop
mov
push
je
or
mov
cmp
sahf
pop
retf
mov
cmp
les
xor
shl
inc
cmp
sub
jmp
aam
sub
xchg
jae
jno
jg
add
xor
jo
xor
mov
push
and
js
cmps
shl
inc
xchg
pop
aam
rcr
xor
sti
mov
cmp
xchg
mov
les
shr
jb
cmp
mov
cmc
adc
rcr
jb
push
xor
sbb
mov
mov
mov
mov
shl
jnp
add
pop
jmp
iret
fisub
cmps
inc
jge
sti
js
jns
jle
jno
inc
ins
sub
mov
sahf
push
pushf
pop
stos
sub
sbb
mov
mov
sub
xor
xchg
pop
and
xor
or
cld
pusha
je
call
mov
mov
mov
mov
cmp
add
sahf
enter
inc
push
enter
inc
setno
mov
jmp
mov
shl
adc
pop
dec
mov
jns
adc
pop
je
mov
jecxz
imul
xor
jge
dec
(bad)
fild
(bad)
dec
push
mov
ds
mov
mov
jle
mov
jne
adc
fistp
scas
fisttp
cmp
outs
cmp
jg
out
sbb
and
(bad)
int
push
loop
movs
stos
sbb
push
or
mov
mov
mov
fidiv
stos
sbb
cmp
pop
(bad)
dec
jns
ds
outs
lahf
jecxz
icebp
jno
sbb
jmp
out
dec
xor
ret
adc
adc
js
out
addr16
enter
sbb
icebp
pop
inc
and
lahf
je
int
js
scas
sahf
and
xor
xchg
and
fs
mov
mov
ss
push
ror
pop
fcomp
jae
jmp
add
jge
repnz
adc
mov
js
fsubr
fisubr
sti
jnp
mov
sub
std
movs
ror
xchg
add
add
leave
or
sbb
test
jns
dec
outs
jp
and
stos
xchg
in
cmc
ret
ds
sub
loopne
js
lahf
inc
xor
shl
repz
add
call
ins
icebp
test
mov
add
jno
fistp
sub
jmp
mov
leave
call
stc
inc
(bad)
jmp
sub
sar
fcomp
mov
mov
adc
mov
scas
ret
pop
sbb
dec
mov
int3
outs
movs
xor
pop
jnp
jns
pop
cmp
inc
mov
adc
pop
mov
loopne
lds
dec
popa
xor
jnp
(bad)
aas
idiv
ret
ror
(bad)
repnz
rol
dec
lods
cmp
lahf
dec
sbb
or
fldenv
iret
lock
fdivrp
dec
cmp
push
or
lahf
inc
cmp
mov
in
in
(bad)
std
or
mov
popf
rcr
(bad)
pop
jo
inc
adc
push
cmp
and
imul
adc
jbe
cs
arpl
or
sbb
cmp
imul
jg
test
jnp
rol
in
loopne
mov
sahf
retf
mov
sbb
push
push
call
call
jmp
jno
daa
dec
aaa
jmp
add
scas
fistp
test
pop
xor
xor
ds
rol
pop
xor
xchg
call
push
xchg
jmp
shr
inc
ja
stos
div
iret
jb
fistp
mov
jp
adc
mov
push
(bad)
sub
add
call
xor
cmps
ja
leave
imul
and
ror
mov
dec
add
dec
sub
push
push
xor
jle
sub
cld
mov
mov
and
fnstcw
sbb
mov
bound
pop
xchg
ins
fstp
cmp
retf
test
adc
inc
xchg
shl
mov
shl
dec
cld
fwait
test
jge
xor
push
ins
and
out
sbb
inc
and
sub
inc
add
pop
inc
pop
in
pusha
fcomp
and
xchg
xchg
jp
push
nop
mov
out
mov
aam
cmp
aaa
adc
inc
cmp
cmc
pop
cmp
mov
dec
lea
(bad)
loopne
es
push
mov
push
adc
setb
cmp
out
jns
mov
es
sbb
jns
mov
xchg
adc
push
xchg
and
mov
pop
sub
mov
sahf
pusha
imul
es
(bad)
cmp
jecxz
pop
call
lods
dec
mov
shr
mov
enter
pop
jbe
mov
pop
cmp
das
and
stos
cmc
or
sti
mov
les
cdq
ret
push
cld
pop
mov
sti
dec
jno
adc
jmp
fs
fisttp
push
rcl
imul
popa
xchg
fs
cmp
jmp
adc
push
data16
test
out
jge
(bad)
in
and
sub
mov
icebp
retf
cdq
ds
scas
in
or
into
inc
xor
sbb
jecxz
loope
jecxz
mov
push
add
enter
push
fstp
inc
sbb
fucomip
mov
retf
mov
(bad)
sub
dec
jo
pop
push
(bad)
in
ds
cmp
movs
sbb
mov
sbb
pushf
mov
add
out
pop
fwait
push
sar
cmp
cli
dec
idiv
fist
mov
pop
jae
jbe
sbb
jecxz
dec
stc
push
xbegin
test
xchg
jge
scas
imul
add
jne
xchg
sahf
test
call
dec
movs
enter
je
jbe
push
cmp
addr16
pop
adc
dec
jns
fdivr
inc
and
lahf
dec
lods
xchg
fdivr
fidivr
fsub
icebp
shl
xor
push
pusha
aam
xor
and
adc
cmp
retf
rcr
mov
mov
mov
sub
add
lahf
cmp
dec
adc
das
push
loopne
out
cwde
sti
out
mov
add
and
sub
xchg
lds
xor
psubusb
mov
stos
or
dec
mov
int
test
into
fadd
mov
(bad)
(bad)
cdq
cmp
mov
jle
push
sar
xchg
js
mov
adc
pop
or
xor
or
pop
test
je
jb
and
ins
dec
aas
and
ds
(bad)
fwait
popa
jae
pop
jnp
jno
fistp
icebp
pop
jnp
xchg
dec
or
aas
push
jae
xor
in
adc
lock
mov
stos
out
jecxz
inc
ds
pushf
jge
lock
ins
stc
mov
adc
push
call
push
pop
mov
mov
push
ja
je
cmp
das
or
stc
and
push
sbb
pop
or
repnz
inc
mov
jns
or
sub
mul
sbb
xchg
ret
sbb
cmp
ret
cmp
xchg
inc
cmp
or
add
sbb
ds
push
aas
cmp
cmp
inc
fs
pop
xchg
in
push
dec
xor
mov
div
gs
fadd
mov
push
xchg
push
push
xor
fmul
data16
mov
mov
xor
cmp
int3
test
cmp
sbb
sbb
xchg
scas
movnti
test
or
shr
sbb
mov
jno
inc
mov
push
(bad)
sahf
push
rol
das
adc
ja
sar
mov
dec
cmp
(bad)
stc
inc
sbb
scas
jno
mov
sub
xchg
cmps
imul
xchg
test
shl
mov
fs
or
mov
sub
cmp
jge
ins
sti
and
fnsave
(bad)
mov
adc
sub
mov
xchg
test
and
stc
sub
inc
out
cmp
or
dec
jb
xchg
xor
mov
sahf
jge
mov
inc
xchg
xor
xchg
stos
cli
jle
sub
sub
mov
mov
inc
jmp
cli
or
dec
call
dec
ins
xlat
mov
inc
repnz
outs
inc
pusha
fdivr
movs
push
mov
scas
mov
mov
out
add
fs
push
pusha
and
popf
lods
loopne
dec
jo
adc
mov
jno
pop
jge
xchg
xchg
mov
mov
and
fcmovnb
inc
cmp
or
sub
and
retf
jmp
dec
xchg
adc
mov
out
xor
ss
pop
push
aas
jo
or
das
in
(bad)
cmp
xchg
mov
(bad)
ja
sbb
retf
test
gs
dec
cmps
stc
pop
arpl
aad
shl
sbb
xor
lahf
and
push
shr
adc
aaa
jmp
ret
adc
jge
pop
inc
imul
call
sti
imul
test
push
inc
dec
jae
dec
jp
test
inc
pusha
stos
retf
call
sbb
clc
mov
sbb
inc
sub
mov
out
imul
ret
add
sbb
adc
scas
ficomp
sub
inc
and
aaa
cmp
shl
dec
mov
sub
inc
stc
mov
jo
aad
push
iret
xor
push
fwait
iret
jmp
imul
sub
cmp
inc
stos
clc
mov
jle
outs
push
cmp
sub
clc
sbb
into
cmp
jl
cmps
gs
jo
mov
xchg
scas
sbb
add
fcmove
inc
and
je
cdq
jo
mov
cmps
outs
push
lds
cmc
xchg
aaa
inc
push
cwde
xchg
cdq
adc
mov
jle
fld
repz
retf
jge
enter
inc
shl
loope
por
inc
xchg
outs
jns
mov
hlt
retf
pop
retf
pop
rcl
push
into
push
repz
fisubr
inc
(bad)
mov
sub
pop
jle
xor
sub
mov
cmp
jno
jmp
jp
jle
pop
fist
lock
or
clc
push
and
lods
push
inc
rcr
icebp
jbe
lds
mov
js
dec
cli
and
not
icebp
mov
inc
js
pop
cmp
inc
stos
ins
mov
pushf
ja
push
dec
(bad)
xchg
cmp
ret
jns
sub
pop
dec
outs
sti
sbb
mov
ja
inc
unpcklps
inc
jne
mov
inc
(bad)
cmp
mov
loop
shl
add
sar
retf
cdq
(bad)
retf
jnp
sub
loope
mov
mov
inc
das
adc
(bad)
aad
fdiv
inc
les
adc
inc
movs
(bad)
jb
mov
xchg
fdiv
jae
mov
dec
dec
hlt
cmp
pop
sub
cmp
test
adc
mov
sbb
or
inc
scas
jb
mov
add
jnp
cmps
test
add
mov
jbe
sbb
shl
(bad)
ins
inc
cmps
inc
jno
retf
add
inc
in
fisttp
fwait
sbb
inc
mov
rol
dec
inc
hlt
xor
jg
cmp
out
mov
jae
fild
jbe
popf
lea
std
dec
test
cwde
outs
out
sbb
gs
mov
pop
outs
aas
inc
mov
loope
mov
ret
ins
ror
popa
outs
inc
mov
dec
sbb
imul
icebp
jne
lds
pusha
es
push
inc
mov
je
cmps
xchg
sub
lock
mov
jns
xchg
aad
pop
and
ja
shl
inc
xor
out
inc
mov
adc
inc
pop
sbb
xchg
xor
and
push
lods
cmc
push
and
fild
xlat
dec
fiadd
adc
pop
push
xchg
sub
enter
add
mov
(bad)
ins
cdq
xor
push
xchg
arpl
mov
into
aas
test
inc
mov
mov
pop
adc
es
jg
jb
outs
mov
mov
inc
fiadd
mov
ror
iret
stos
cmps
les
int
ror
jmp
push
adc
sbb
retf
push
pop
mov
(bad)
retf
jno
jmp
scas
cmp
mov
rcr
cmps
call
push
dec
lods
lods
fisub
lahf
and
inc
test
xchg
mov
dec
jg
jge
ds
movs
imul
inc
lods
and
cmp
inc
adc
jle
jno
scas
ss
retf
cmp
pop
cmps
dec
dec
dec
jp
inc
imul
xor
cmp
mov
inc
test
test
inc
and
adc
call
jae
movs
arpl
std
mov
dec
ds
fdivr
and
imul
(bad)
retf
jge
imul
inc
cmp
xlat
sbb
push
bound
mov
mov
rcl
or
mov
test
into
je
es
cmp
jno
jecxz
xor
xor
xchg
test
inc
inc
clc
jge
xor
add
data16
test
mov
or
jge
ror
(bad)
(bad)
ror
lods
outs
push
jns
cmp
cmp
movs
pusha
ins
neg
jnp
or
xlat
loope
jp
popa
pop
inc
pop
push
dec
pusha
dec
push
inc
pop
cmp
mov
sub
mov
inc
jb
(bad)
cld
or
push
inc
mov
push
mov
popf
into
repnz
fcomp
les
push
lds
pop
ret
cmp
fs
in
sbb
aad
cmp
sub
sub
pop
mov
mov
xchg
dec
je
jne
iret
loopne
outs
or
and
cmps
ss
push
aas
inc
stos
outs
jle
dec
inc
not
mov
mov
cmp
and
cmps
inc
cmp
sahf
adc
sub
and
retf
aad
(bad)
mov
lahf
sti
popa
inc
cmp
leave
or
mov
in
clc
sti
test
pop
pop
xor
aad
or
ret
cwde
lods
jmp
pop
sub
into
sti
ror
enter
loope
xor
ret
pop
jno
aas
sti
inc
adc
sub
push
fucomip
das
mov
cwde
push
xchg
es
add
retf
call
std
fs
sub
lods
lahf
pop
popa
inc
sbb
retf
sar
xchg
ror
sbb
xchg
mov
sbb
inc
sub
pop
sti
hlt
test
repnz
cmp
outs
xor
out
iret
imul
xor
push
pop
push
pop
mov
sub
fld
jb
shl
out
push
xor
cmp
movs
sub
mov
jmp
jle
cld
pop
mov
sub
jns
adc
cmp
cmp
inc
test
add
push
xchg
inc
xchg
add
movs
bound
dec
pop
lea
dec
loope
inc
cld
into
out
sub
dec
jo
push
inc
push
inc
dec
data16
jp
mov
inc
inc
cs
or
ficomp
cmp
les
pop
mov
into
adc
xor
xor
cdq
inc
movs
ds
ror
scas
fidivr
imul
xor
cmp
out
xor
ror
xor
mov
sub
xchg
push
icebp
add
sub
cmp
and
jns
lods
mov
adc
jmp
je
shl
mov
sub
mov
jbe
push
ret
xor
inc
inc
aam
arpl
fldz
pop
mov
test
cmp
int3
mov
bound
lock
cmp
popf
test
enter
cs
jl
jge
movs
mov
imul
sbb
pop
call
pushf
or
inc
sbb
je
fmul
mov
mov
mov
test
pop
mov
ret
pop
fild
fadd
shl
out
bound
dec
push
sbb
add
repz
sub
dec
xor
sub
cmp
jmp
add
push
inc
shr
add
cdq
mov
mov
and
bound
mov
mov
and
jecxz
jp
ss
push
js
jno
dec
and
in
stc
and
cmp
cli
fist
sbb
pop
dec
mov
adc
mov
mov
jb
mov
push
shr
and
lock
cmp
mov
adc
std
das
or
mov
mov
ss
cwde
push
jg
out
push
push
cmp
ret
mov
mov
add
fstp
outs
jnp
add
sar
push
pop
xchg
cmp
stos
out
push
mov
call
pusha
fdivr
push
jns
addr16
push
dec
adc
cmp
inc
xchg
or
loope
leave
sahf
pop
into
mov
or
les
cwde
or
sbb
jmp
lds
retf
shl
mov
pop
jl
and
in
dec
jae
cwde
pop
push
pop
leave
popf
ds
and
jb
xor
adc
inc
mov
(bad)
sbb
fild
sti
add
mov
or
mov
xchg
lds
sbb
mov
inc
cmp
xchg
and
mov
push
jns
xor
ret
jb
sub
adc
inc
jge
mov
pop
fistp
mov
add
push
ficom
cmps
cmp
cmp
adc
mov
rcr
adc
push
lahf
inc
cmp
mov
icebp
inc
aas
dec
fs
jg
sar
inc
js
jns
push
mov
and
xchg
nop
jns
daa
or
mov
mov
jmp
sbb
fidivr
cs
fcmovnb
fucom
cmp
rol
ror
aad
cmp
mov
sbb
inc
jno
int
push
stos
adc
retf
iret
mov
mov
inc
pop
ror
dec
ja
mov
out
mov
fnstenv
inc
jmp
lods
les
sar
fsub
sbb
mov
cmp
or
inc
cmp
retf
add
or
leave
inc
cmp
test
push
fwait
pop
mov
xor
and
ret
inc
inc
xor
retf
lds
sub
aaa
ds
push
js
jge
lods
dec
shl
aam
sbb
pop
push
sub
mov
mov
test
fsubr
cmp
jge
mov
adc
sbb
xor
sub
shl
mov
inc
and
pop
push
in
push
sub
popf
jle
inc
ja
and
mov
(bad)
call
rcr
hlt
inc
in
adc
popf
mov
push
lea
sti
cmp
ja
inc
inc
jg
outs
push
jne
mul
cmp
dec
stos
mov
gs
lods
shl
popf
iret
jbe
(bad)
in
ss
mov
pop
aas
xchg
mov
cmp
inc
dec
pusha
push
enter
jge
dec
pop
adc
lods
fxch
fld
push
fst
inc
movs
lds
push
aas
cs
test
aaa
adc
outs
cmp
popa
pop
iret
sub
add
(bad)
(bad)
imul
xchg
call
xchg
push
scas
mov
pop
mov
test
fcom
adc
iret
aas
ja
sbb
mov
sahf
and
nop
adc
pop
jp
stos
repnz
ins
nop
arpl
div
cmp
xor
(bad)
ror
pop
shl
adc
sub
pop
pop
pop
call
push
test
cmps
mov
movs
xor
jno
(bad)
loop
mov
dec
dec
xor
push
pop
pop
mov
gs
scas
cmps
les
inc
mov
fucom
jge
cmp
inc
jns
pop
adc
pop
cmp
leave
enter
xor
xchg
mov
fs
pop
stos
pop
and
ja
mov
sub
loop
push
push
mov
fidiv
sub
pop
mov
jno
add
jns
sbb
into
test
push
shl
jno
pushf
xor
inc
pop
fsincos
dec
push
cmp
(bad)
addr16
repz
fild
mov
mov
push
dec
das
dec
aad
test
push
int3
(bad)
retf
xchg
adc
call
cmp
out
mov
xchg
aas
and
jne
and
pushw
loope
imul
jmp
mov
pop
ds
jns
push
les
pop
pop
xchg
jg
dec
fldenv
test
int3
pop
pop
pop
imul
jmp
push
cmp
mov
pop
sbb
and
mov
cmp
pop
dec
mov
gs
inc
test
test
into
mov
cwde
pop
ret
mov
enter
call
and
ja
mov
pop
(bad)
adc
add
jge
mov
int
sbb
dec
fwait
adc
xchg
or
test
rcl
xor
add
fcom
xchg
call
pop
push
mov
jg
or
xor
pop
lods
loop
cmp
(bad)
mov
js
lds
mov
loope
loopne
ins
repnz
scas
out
mov
(bad)
movs
retf
retf
xor
adc
pop
jns
maskmovq
cld
add
jno
mov
jl
je
adc
push
sbb
mov
lahf
cwde
xor
icebp
dec
xchg
mov
xor
xor
inc
pop
aam
or
mov
pop
sub
jnp
add
(bad)
xchg
and
jle
pusha
and
mov
pop
movs
popf
shl
push
or
std
ins
mov
jae
test
pop
popa
cli
push
add
popa
cmp
and
jne
and
cmps
mov
fst
hlt
add
repnz
aas
jns
adc
inc
rcl
mov
dec
call
jne
jl
inc
jae
jbe
jg
inc
stos
ss
out
sti
sub
shl
inc
je
repz
adc
sbb
pop
xchg
popf
bound
stos
jge
push
mov
(bad)
and
mov
stc
push
lods
inc
and
icebp
into
cld
(bad)
or
mov
add
push
xchg
push
adc
inc
movs
addr16
bound
mov
cmp
clc
test
inc
pop
fwait
dec
adc
xor
test
cmp
ins
push
mov
xchg
gs
inc
jb
pop
or
fs
sbb
lods
xor
sbb
aam
pop
push
mov
push
(bad)
out
xchg
test
adc
add
ret
jnp
arpl
outs
(bad)
outs
hlt
ins
add
cli
shl
jo
mov
jmp
sti
les
mov
ret
stos
test
fsubrp
ret
pop
xlat
repz
sbb
sbb
loope
jmp
in
inc
outs
sti
push
pop
(bad)
xchg
out
mov
fcom
xor
jns
inc
lods
xchg
mov
jle
lods
inc
cmp
mov
sub
fwait
aas
lahf
test
rol
(bad)
xchg
adc
mov
and
xbegin
aaa
test
rol
xor
pushf
mov
mov
sub
test
cmp
fst
cli
pop
sub
mov
xor
fiadd
mov
(bad)
(bad)
fabs
adc
mov
jnp
xor
cmp
imul
(bad)
stc
mov
mov
add
jb
cld
sbb
int3
mov
jne
sub
inc
shr
add
and
outs
inc
push
pop
gs
cld
fcom
fiadd
fwait
mov
shl
cmp
add
in
loop
(bad)
popa
imul
jge
aad
cdq
cmp
in
ins
test
les
xchg
outs
dec
jne
in
adc
sbb
inc
lea
lahf
gs
add
mov
jbe
mov
bound
test
mov
mov
ret
ins
mov
cwde
syscall
in
std
(bad)
cli
sub
push
adc
in
or
das
inc
sbb
fcomp
or
push
cmp
jp
inc
inc
mov
into
ins
aad
push
inc
cli
or
sub
push
js
mov
add
shl
xlat
inc
aad
mov
inc
popf
cmp
cmp
fwait
imul
mov
or
imul
sub
inc
push
dec
cmp
add
cmp
inc
cmps
mov
fsub
add
jl
sbb
xor
dec
ficomp
sub
mov
(bad)
mov
jns
mov
lds
jmp
mov
push
xor
push
fs
dec
mov
je
push
aaa
mov
jns
jge
or
cs
mov
adc
ja
lock
push
jle
mov
pop
test
dec
bound
add
mov
dec
cmp
call
call
mov
je
shl
scas
jp
aad
cmp
mov
rol
cmp
fcomp
cdq
idiv
cmp
jl
push
push
pop
stc
cmp
cmps
mov
sti
mov
fcos
jl
inc
xlat
inc
jne
mov
mov
adc
jp
or
or
(bad)
mov
(bad)
sub
mov
jg
cmps
jno
movs
sub
adc
mov
mov
idiv
aam
jno
and
sar
inc
jo
js
or
add
add
jno
pop
ret
xchg
ror
pop
arpl
pop
mov
add
stos
outs
fmul
dec
mov
add
shl
mov
push
shr
pop
scas
ins
xlat
jae
jmp
xchg
(bad)
jmp
xchg
cmp
rol
or
pusha
mov
xlat
outs
loope
ret
jae
repz
and
mov
jge
add
xchg
cmp
jno
shl
popf
shr
cmp
rcr
jns
adc
cmp
repz
stc
out
shr
sbb
jno
(bad)
cmp
jbe
aas
loope
cmp
sbb
mov
mov
and
cmp
rol
sbb
pop
aaa
xor
jnp
jnp
repnz
shr
lods
add
pushf
sbb
sti
outs
jmp
mov
jns
imul
aad
sub
jns
lods
push
cmp
in
data16
pop
dec
cmp
or
xor
cmp
aaa
sub
jns
fild
cmp
mov
cmp
jb
dec
inc
jp
push
jbe
test
fisttp
pop
cmp
(bad)
ds
lock
scas
outs
add
fmul
cmp
test
jmp
sub
sub
das
mov
(bad)
cmp
iret
lods
pusha
js
mov
bound
ror
jl
cmps
dec
nop
test
stos
outs
(bad)
dec
inc
loope
test
xor
(bad)
std
cmp
inc
mov
add
add
(bad)
fnstcw
lods
jmp
sub
sub
and
jns
call
or
call
sub
push
daa
inc
adc
int3
jne
sub
cmc
pusha
xor
and
outs
imul
xchg
jns
push
lahf
(bad)
sahf
add
inc
aaa
dec
dec
sbb
xchg
adc
pop
cmc
jbe
aas
push
jge
dec
push
inc
cli
js
lahf
sub
pop
or
or
pop
lea
jle
in
out
nop
les
popa
mov
stc
jns
cdq
inc
das
imul
push
popa
aas
arpl
push
mov
in
xlat
push
das
xor
out
dec
xchg
jns
mov
mov
push
js
jle
jge
shr
jo
mov
jg
jle
leave
(bad)
xlat
and
pop
lock
and
inc
xchg
sub
adc
cmp
sahf
stc
adc
sbb
mov
cmp
(bad)
sub
mov
clc
(bad)
sbb
sub
retf
out
xchg
pusha
mov
inc
cmps
mov
int
shl
mov
movs
xchg
mov
pop
sbb
je
jns
add
loope
xor
ret
in
aam
sub
outs
retf
xchg
dec
ss
lahf
inc
(bad)
push
cmp
mov
mov
aas
lods
jge
movs
pop
mov
cmps
sub
cmp
ja
(bad)
adc
call
das
sbb
sti
js
pop
enter
ins
popf
pop
mov
(bad)
(bad)
addr16
xor
mov
retf
mov
jbe
jnp
or
mov
xor
aad
add
jmp
jge
sub
sbb
out
jmp
push
xor
mov
je
sbb
cmp
stc
leave
(bad)
push
xor
lea
pushf
mov
dec
ret
pushw
cs
pop
mov
(bad)
mov
adc
and
pop
xchg
clc
lea
loopne
adc
in
pop
mov
test
dec
push
in
arpl
cmps
je
sub
(bad)
xchg
pop
xchg
les
and
dec
xor
rcr
add
pop
cdq
xchg
sub
dec
rcl
pusha
pop
mov
(bad)
stos
pop
pop
ret
jmp
nop
pop
inc
shl
fs
rol
jno
sub
jb
ror
sub
jnp
fs
nop
mov
and
jmp
outs
repz
aad
mov
cmp
cmp
or
inc
push
jno
stos
and
and
xchg
jne
adc
sub
loop
je
fscale
sbb
push
sbb
xor
out
jb
jp
js
or
repz
popa
or
pop
adc
cwde
iret
push
xchg
or
inc
or
cdq
pop
mul
or
mov
inc
jnp
pop
aaa
push
push
cmp
xor
adc
xor
cli
hlt
inc
jbe
jmp
pop
dec
out
push
inc
out
dec
inc
push
mov
xor
dec
ins
test
mov
inc
push
rol
sbb
xor
push
int
inc
jns
aad
jg
movaps
sbb
fidivr
mov
call
cmc
inc
clc
sub
popf
mov
adc
xor
movq
or
das
adc
push
xor
inc
push
mov
pop
and
push
inc
verr
jmp
sahf
ret
fbstp
or
stc
test
cmp
add
sbb
push
jnp
mov
dec
cmc
inc
hlt
xchg
xchg
je
jo
dec
sub
dec
fiadd
add
call
and
sub
sahf
in
xor
addr16
out
jle
aaa
add
fisub
sbb
stos
xchg
inc
icebp
mov
xchg
add
mul
mov
in
mov
jns
pop
xchg
sti
or
and
into
sub
(bad)
xor
jmp
pop
add
mov
or
xor
retf
jge
in
jp
std
aam
aam
jl
cmp
lods
lock
mov
cmps
ds
cld
out
aam
pop
push
or
aas
sub
fyl2x
fcomp
xchg
inc
and
adc
jecxz
jle
mov
jno
xor
mov
popf
sbb
nop
jge
pop
retf
(bad)
push
in
pop
jmp
cli
aad
mov
mov
jns
jno
dec
or
mov
inc
or
(bad)
in
(bad)
mul
push
xor
mov
fcom
jge
jns
push
scas
test
pushf
jns
pushf
pusha
jno
out
(bad)
xor
push
test
jg
sub
fdiv
push
imul
mov
inc
cdq
or
test
cmc
movhps
inc
bound
pop
dec
pop
cmp
fistp
cmp
inc
dec
or
aam
mov
ret
sqrtsd
dec
pop
dec
pusha
dec
pop
dec
push
in
ret
clc
xor
imul
call
add
adc
and
sub
push
out
dec
dec
ins
cmp
jo
push
(bad)
push
into
pusha
retf
loopne
rcr
in
bound
inc
pop
lahf
sub
cmp
sub
xor
daa
int3
and
xor
es
loope
jecxz
int
ret
push
imul
jg
idiv
push
hlt
out
sub
mov
cmp
cwde
add
mov
mov
adc
int3
shr
jecxz
fisttp
mov
shl
xor
aam
jp
adc
sub
inc
sub
lock
inc
sbb
push
or
rol
sbb
push
test
sbb
xchg
int
sbb
inc
shr
inc
jns
sub
mov
adc
gs
jb
repz
inc
cld
lods
push
xor
lods
cmp
dec
sbb
cs
out
push
pop
or
adc
push
scas
xor
inc
xor
push
scas
xlat
in
jno
add
aas
lea
sbb
cmp
cmp
dec
pushf
and
or
xor
cmc
xchg
sbb
mov
jge
inc
or
repz
enter
(bad)
stc
adc
sub
(bad)
cmp
cmp
and
inc
or
and
jp
xchg
dec
pop
sub
jne
(bad)
out
adc
clc
add
pop
mov
mov
jmp
and
or
cmps
xchg
xchg
bound
push
fnstcw
and
in
ds
mov
inc
int3
lahf
push
enter
pusha
mov
icebp
aas
dec
cmp
into
mov
inc
jge
ret
and
arpl
adc
cmps
and
inc
cld
lods
in
(bad)
mov
xchg
or
ret
cmp
xor
pusha
fidiv
leave
movs
mov
(bad)
dec
ss
out
into
fistp
retf
aam
(bad)
leave
mov
sub
mov
stc
or
and
cmp
(bad)
cmp
fsub
add
push
and
jle
cmp
or
jmp
or
inc
xlat
fs
add
lea
xchg
cli
adc
inc
sub
push
xchg
mov
mov
aas
test
jo
mov
jp
mov
add
hlt
ins
dec
scas
aas
fiadd
fsubr
sti
jecxz
out
mul
pop
mov
retf
(bad)
cdq
and
mov
aam
hlt
call
(bad)
dec
fsubr
loop
ror
(bad)
fnstsw
sbb
pushf
lods
xor
out
dec
sahf
jg
push
fadd
mov
xchg
cmp
jnp
push
mov
mov
in
cmps
aas
ja
imul
or
hlt
inc
sbb
mov
into
inc
pushf
int3
push
or
and
cmps
arpl
lods
mov
js
push
adc
pop
lock
psrld
cli
ret
cs
inc
fisttp
out
xchg
test
adc
jle
ret
cmp
aas
inc
add
enter
cmp
mov
inc
in
retf
adc
push
mov
test
push
cmp
cdq
inc
(bad)
push
mov
jl
je
scas
cld
pushf
inc
in
cmc
loope
push
ins
nop
mov
rol
addr16
add
and
xor
mov
sbb
fwait
in
out
and
push
push
inc
mov
pop
jnp
inc
mov
cmp
xor
pop
mov
fld
inc
inc
mov
scas
push
or
jmp
clc
outs
adc
cli
jle
adc
or
mov
or
jecxz
or
push
pop
xchg
stos
dec
inc
add
fsubrp
repz
jae
fsub
dec
mov
loopne
mov
push
push
dec
fs
lahf
jno
xor
mov
mov
mov
push
nop
sub
push
fwait
cmp
fs
mov
js
xchg
pop
loope
test
cld
mov
add
iret
retf
add
les
xchg
daa
adc
(bad)
jl
retf
jp
shl
mov
xor
xchg
inc
cmp
(bad)
test
(bad)
cmps
add
mov
cdq
rcl
jns
inc
addr16
std
and
test
mov
sar
push
in
loopne
xor
ins
xor
stos
mov
xor
stos
loope
pop
xchg
out
xor
fdivr
mov
jno
lods
cmp
int
test
mov
clc
ss
inc
xchg
push
sti
rol
dec
and
out
push
adc
jg
cli
cdq
sbb
mov
daa
dec
inc
xchg
xchg
inc
idiv
cmp
test
cmp
mov
cli
jl
jae
inc
scas
xor
mov
cmp
push
ins
js
xor
outs
je
sub
popf
(bad)
cdq
push
jb
mov
inc
fadd
jmp
inc
xchg
icebp
xchg
cmc
inc
lds
jl
rol
(bad)
inc
dec
cmps
mov
pop
cmovl
lock
js
inc
in
mov
inc
sbb
and
xor
cmc
cdq
inc
(bad)
imul
inc
pop
icebp
test
imul
inc
xchg
sbb
lea
sub
add
and
cmp
addr16
js
cmps
inc
cmp
mov
sub
popa
and
(bad)
inc
mov
jno
test
and
sub
sub
mov
cmp
mov
inc
popa
add
inc
sar
lea
inc
jge
test
add
or
in
arpl
sbb
cli
int3
cmp
jo
mov
push
jmp
(bad)
jnp
adc
ror
xor
mov
mov
lods
mov
jl
xchg
mov
test
mov
dec
xlat
les
mov
pop
popa
cli
dec
inc
xor
adc
mov
sub
or
outs
jecxz
dec
pop
repnz
push
retf
fadd
test
dec
dec
mov
xor
jmp
push
call
cs
js
inc
push
dec
inc
(bad)
pushf
jle
mov
gs
mov
push
std
and
mov
scas
cmp
repnz
sbb
lea
inc
das
je
push
sub
jnp
cli
lahf
dec
test
test
mov
fldenv
push
jb
cmp
retf
mov
(bad)
xor
mov
retf
jno
inc
and
sub
loopne
push
cmp
jns
inc
icebp
sbb
lock
xchg
jb
xchg
out
or
aas
lods
imul
xchg
test
push
sub
cmp
push
ins
lods
pop
or
out
mov
nop
or
inc
aas
shl
cmps
(bad)
xchg
pusha
adc
arpl
(bad)
out
cmp
pushf
sub
and
push
je
sbb
test
js
cmps
std
into
mov
xchg
fnstcw
scas
ret
add
shr
mov
imul
jp
and
test
mov
add
nop
inc
adc
inc
mov
pop
push
mov
popf
mov
inc
pushf
test
dec
inc
add
lds
fmul
fwait
cmp
sbb
ret
push
pusha
js
and
mov
cmp
std
(bad)
cmp
loopne
mov
cmp
cwde
add
xchg
mov
sub
in
pop
mov
xchg
ins
adc
inc
leave
fidivr
cdq
inc
and
add
pop
adc
mov
shl
mov
cmp
cmps
mov
jns
add
shr
ror
cmp
cli
fdiv
popf
sbb
les
daa
call
ds
jae
in
cmp
sub
repnz
hlt
xor
(bad)
inc
mov
mov
cmp
xor
icebp
push
ffreep
ds
xchg
sbb
cdq
add
loopne
and
mov
retf
das
js
cdq
add
sbb
stc
mov
jp
in
jbe
les
mov
sbb
call
retf
xchg
pop
push
xchg
cmp
aad
fst
mov
cmp
dec
or
hlt
test
(bad)
shr
jge
cmp
retf
stos
jmp
out
jmp
fsubr
lods
add
inc
or
into
lock
inc
dec
mov
shl
push
sub
aas
inc
xor
add
inc
pop
cmps
into
lds
jbe
inc
and
mov
jecxz
add
cmps
stc
mov
add
in
sti
jmp
pushf
leave
or
into
sbb
shl
xchg
sbb
xchg
leave
add
jno
out
cmp
push
jns
pop
sbb
ret
jge
mov
stc
je
push
sub
add
push
sbb
jg
inc
in
mov
mov
fdiv
in
xchg
jle
mov
pop
(bad)
or
jbe
iret
mov
jns
add
pop
bound
inc
sti
test
std
inc
imul
in
mov
je
cmps
and
inc
jmp
into
jno
loop
xchg
push
call
cmp
or
scas
mov
push
cwde
setno
fisubr
lock
jecxz
jo
pop
adc
or
push
(bad)
fsubp
push
xor
push
les
jnp
fdivr
push
mov
jmp
jp
loopne
clc
fdiv
mov
mov
jnp
xor
je
repnz
jmp
or
pop
adc
add
arpl
shl
clc
pop
in
xor
ins
aas
aaa
fadd
cmp
mov
inc
cld
or
inc
push
xor
cwde
jnp
mov
or
dec
imul
pusha
cmp
inc
jo
jno
or
or
fsubr
inc
mov
les
xchg
and
xchg
in
and
or
repnz
push
inc
lahf
cmp
mov
loopne
fdiv
loop
xchg
jmp
test
cmp
mov
jle
imul
stc
sahf
ins
xchg
fild
xchg
add
sahf
push
inc
pop
xor
sbb
data16
push
push
sbb
sub
sbb
mov
inc
inc
dec
inc
sti
jno
sar
retf
adc
pop
push
cli
fidiv
icebp
fwait
push
or
cwde
mov
and
fsubr
aaa
(bad)
arpl
int
(bad)
icebp
push
cmp
mov
out
push
cmp
push
xor
adc
js
jno
inc
pop
popf
ja
into
aas
cmc
in
cld
mov
pop
call
in
inc
in
mov
sbb
add
adc
inc
cmps
pusha
fdiv
mov
das
or
sbb
loopne
adc
cmp
in
cld
push
fisttp
inc
mov
in
jge
inc
adc
add
add
and
adc
mov
mov
dec
cmps
cmp
push
cmp
int3
inc
add
xchg
pop
aad
loop
pop
imul
in
lods
jne
jle
mov
xchg
mov
dec
mov
aam
sbb
popf
pusha
adc
dec
and
inc
mov
aas
xchg
xor
add
pop
icebp
inc
xchg
jb
jmp
sahf
jae
jo
test
ret
retf
stc
mov
(bad)
fxch
in
loopne
faddp
mov
(bad)
mov
adc
or
jns
mov
cli
lahf
jge
inc
dec
call
jae
imul
sbb
shl
or
imul
aam
imul
inc
stos
cmp
and
cmp
lock
std
add
inc
sbb
idiv
push
and
je
js
movs
ret
rcl
fild
inc
and
sbb
int3
xor
sub
inc
mov
ret
sub
out
mov
adc
xchg
cdq
scas
and
or
adc
sbb
test
inc
ja
fsubr
cmp
sbb
cmp
sub
push
xchg
mov
cmp
jg
or
mov
aas
jmp
setne
lea
and
out
in
cmp
xchg
imul
and
push
adc
sbb
pop
shl
or
shl
and
inc
scas
pop
(bad)
mov
aas
dec
inc
stos
cwde
addr16
out
rcr
inc
xchg
retf
jnp
mov
push
gs
lahf
inc
(bad)
sar
jmp
fcom
cmp
mov
mov
inc
pop
jmp
sub
mov
sub
das
aam
cmp
xchg
dec
out
cmp
lahf
fsub
adc
enter
pop
add
movs
inc
test
aam
popf
inc
mov
mov
jp
addr16
pop
or
cmp
sub
call
int3
stc
mov
cmp
add
lock
test
pop
mov
and
jmp
scas
lods
sbb
jecxz
sbb
loopne
mov
std
sub
mov
fstp
mov
sub
mov
jb
dec
cmp
cdq
scas
add
stos
xchg
mov
mov
mov
mov
sbb
mov
in
aaa
mov
ja
ror
in
push
test
adc
ficom
xor
stc
dec
das
or
ins
xchg
add
mov
mov
test
sbb
test
sbb
xor
sub
fnstenv
xor
int
sar
fs
dec
nop
(bad)
pop
(bad)
and
jp
jle
(bad)
sti
sub
fld
or
xor
dec
jmp
shr
call
xchg
jno
div
(bad)
fisttp
dec
pop
mov
sbb
popa
pop
or
aam
or
stc
data16
mov
addr16
and
sbb
sahf
jmp
jecxz
xchg
into
sbb
call
iret
(bad)
pushf
add
bound
push
and
cmp
jnp
jns
inc
fwait
std
or
fcom
movs
stos
adc
xchg
cs
je
cmc
shr
jno
lds
sti
add
mov
(bad)
cmp
pusha
inc
mov
div
shr
ds
(bad)
jp
xor
(bad)
sbb
loope
and
leave
inc
stos
xchg
adc
xchg
add
or
sub
leave
movs
sbb
ret
add
daa
push
dec
mov
test
cmp
test
scas
aas
fucom
sti
gs
mov
in
(bad)
enter
loop
nop
imul
sub
adc
add
inc
mov
or
std
push
pop
push
adc
in
sub
inc
jp
mov
cmp
int
xchg
cmps
repz
mov
push
xor
cmp
lahf
and
inc
mov
jecxz
xchg
xchg
mov
mov
or
jecxz
icebp
mov
dec
inc
cmp
mov
cmc
cmp
pop
adc
and
inc
and
xchg
push
fisub
retf
div
inc
pusha
dec
xchg
mov
dec
pop
pop
mov
jmp
mov
lds
movs
inc
ja
popa
sti
sbb
cmp
dec
enter
inc
les
ins
cmp
cmp
loope
mov
aam
xor
jne
lds
xor
mov
pop
movs
cmp
(bad)
aad
and
cmp
push
xor
(bad)
in
inc
dec
popa
test
sub
jno
test
sub
sar
xchg
stos
mov
inc
imul
dec
loopne
and
(bad)
in
dec
imul
fs
jl
cld
sbb
into
dec
and
and
loope
rcr
enter
aam
sub
adc
(bad)
add
or
iret
(bad)
pop
inc
repnz
sbb
sahf
and
inc
mov
mov
xlat
cs
movs
inc
ret
out
cmp
mov
shl
sub
rcr
lods
inc
(bad)
jmp
xor
les
sbb
xchg
dec
add
jmp
rol
bound
inc
pop
sub
call
fnsave
cwde
inc
shr
mov
xor
cmp
in
adc
sar
ds
sub
cdq
aad
cmp
jg
lds
pop
push
call
nop
jge
cmp
nop
or
(bad)
aas
clc
fdiv
or
loope
cmp
out
jb
jbe
mov
test
ror
cmp
jp
ins
mov
mov
jae
mov
mov
dec
in
sub
dec
jle
push
xlat
cld
jle
loopne
fs
lea
int
add
push
les
imul
cmp
sar
or
stc
mov
cmp
in
retf
and
(bad)
das
int
(bad)
fmulp
shl
(bad)
daa
in
push
or
add
ds
and
pop
popf
cmps
into
sub
mov
imul
inc
test
ins
or
pop
cmp
(bad)
aam
stc
(bad)
jle
call
cmc
xor
scas
add
popa
inc
mov
add
mov
mov
imul
mov
pop
loopne
rol
jmp
xor
jp
dec
test
xchg
adc
sbb
cld
pop
ins
push
adc
dec
jmp
sar
pop
sub
jno
and
push
cmp
sub
iretw
pop
mov
test
(bad)
adc
pop
inc
pop
stos
mov
push
inc
call
sub
inc
je
in
dec
bound
push
arpl
test
inc
jnp
xchg
and
scas
inc
mov
movs
sub
ds
in
bound
xchg
mov
push
inc
adc
in
jae
lea
xchg
xor
adc
sub
out
cs
inc
xor
ja
inc
jno
out
hlt
and
inc
rcl
adc
enter
sub
xor
or
mov
mov
inc
mov
sbb
jae
mov
out
jle
adc
add
sbb
sub
cmp
mov
jp
or
pop
pushf
or
mov
xchg
bound
and
scas
sub
loopne
ror
gs
out
cld
dec
mov
xor
mov
inc
ds
pop
mov
call
int3
aaa
int
sar
jmp
ins
outs
cmp
add
enter
xchg
ins
out
mov
shl
jb
test
inc
cmc
int
xchg
jmp
out
leave
cmp
test
call
out
xchg
retf
sub
mov
inc
adc
imul
pop
daa
add
movs
out
dec
inc
sbb
test
inc
jle
dec
test
inc
test
fs
sbb
in
push
ja
(bad)
lods
rol
mov
inc
shl
mov
or
inc
repz
div
jle
pop
inc
sub
xchg
push
mov
or
stos
outs
mov
cmp
nop
ret
or
cmp
(bad)
push
enter
inc
mov
adc
ret
mov
xchg
or
fisttp
push
je
(bad)
das
sbb
leave
push
js
aam
cmp
jl
cld
into
cmp
xchg
outs
lods
or
or
or
js
das
or
push
loop
sbb
aad
xchg
fcomp
jbe
dec
xor
inc
dec
xchg
fdiv
aaa
test
dec
push
inc
js
sub
push
mov
inc
imul
pop
fwait
mov
adc
xchg
push
je
xor
out
mov
pop
loope
and
cmp
lock
mov
cmp
outs
je
daa
mov
popa
mov
stos
push
jmp
inc
cli
and
inc
sub
and
fstp
push
outs
xlat
ja
inc
frstor
add
in
lods
pop
xchg
jle
adc
pusha
inc
ret
dec
or
imul
das
clc
loope
adc
or
sub
ret
sbb
and
call
mov
in
xor
jno
test
ins
mov
inc
(bad)
inc
out
mov
push
cmp
sti
ret
add
aas
inc
push
and
cmp
sti
jmp
je
dec
inc
push
xor
add
push
inc
gs
sub
sti
(bad)
xlat
sar
mov
mov
xor
inc
mov
or
sub
xor
xchg
cli
cmp
inc
iret
mov
xchg
sti
ficomp
shr
ja
mov
or
push
mov
mov
pusha
or
enter
popa
mov
ss
lods
pop
mov
add
inc
sbb
mov
mul
jmp
cmp
and
xlat
mov
pop
lea
(bad)
out
sub
inc
push
mov
xchg
sub
jno
iret
jmp
xor
(bad)
cmp
dec
inc
cmp
faddp
fcomp
inc
dec
ds
cmp
call
push
sub
pop
mov
xor
jge
in
scas
or
(bad)
or
fimul
sti
retf
hlt
clc
pop
inc
push
dec
cmp
in
add
jmp
mov
push
and
cmp
loop
sbb
call
and
test
inc
jbe
mov
in
jo
and
shl
xor
repnz
push
mov
sahf
sbb
jmp
cmp
aas
xchg
popa
lock
dec
enter
inc
mov
adc
sbb
pusha
rcr
ror
inc
(bad)
push
push
add
cmp
jbe
pop
retf
and
out
stc
test
sar
icebp
sub
push
jns
and
in
pop
push
inc
aas
out
shl
xor
push
into
sbb
sub
jecxz
(bad)
xor
sbb
inc
adc
loopne
cmp
push
inc
dec
maskmovq
aaa
(bad)
xor
imul
les
pop
inc
int
inc
sub
mov
or
rcr
cmp
loopne
pop
sub
mov
inc
push
push
cmp
jle
bound
xchg
cdq
sbb
inc
shr
lods
jnp
dec
pop
daa
mov
mov
cmp
inc
jmp
xor
jo
idiv
mov
in
out
inc
jnp
add
inc
test
mov
mov
or
mov
xor
aad
cmp
and
clc
jmp
inc
in
push
push
adc
sbb
test
mov
ins
push
mov
mov
cmp
in
test
pop
fucomp
mov
add
mov
inc
dec
rep
xor
lock
mul
jns
mov
imul
sti
xor
popf
out
ret
hlt
lods
inc
cld
mov
sahf
pop
cmp
pop
cli
mov
imul
dec
loope
and
ds
pop
int
cmp
int3
lahf
mov
stos
inc
aaa
js
nop
imul
and
cmc
inc
ins
imul
or
and
xchg
mov
jp
ror
cld
add
in
add
sub
iret
dec
mov
inc
cmp
inc
xchg
xor
rol
shl
fidiv
mov
inc
and
jns
push
jbe
test
ds
jae
inc
mov
inc
mov
and
jne
jmp
int3
lea
je
neg
sub
cmp
lahf
data16
mov
inc
sub
sub
jns
xchg
pop
add
and
gs
adc
pushf
mov
sbb
mov
lods
xor
pop
jns
fnstsw
add
pop
mov
push
mov
sbb
mov
xchg
mov
jne
je
adc
fnstsw
jmp
pop
dec
in
data16
test
pop
cmp
adc
std
mov
daa
jle
(bad)
adc
(bad)
fsub
dec
out
mov
shr
ds
sbb
cld
inc
enter
sbb
es
jecxz
and
add
mov
push
xchg
push
sub
scas
sub
dec
ds
out
nop
inc
pop
pushf
mov
or
and
jns
adc
call
mov
jno
sti
cmps
(bad)
icebp
(bad)
nop
jl
loope
xor
test
test
push
fwait
outs
jmp
pop
jns
(bad)
pop
outs
mov
jl
dec
cmp
push
or
cmp
or
jb
jno
outs
mov
mov
fst
jo
imul
or
and
pop
stc
mov
jg
outs
cdq
mov
test
sub
sub
fadd
mov
outs
inc
sbb
mov
inc
mov
in
inc
scas
ins
pushf
add
movs
test
inc
daa
mov
cwde
data16
jne
test
inc
test
dec
pop
inc
fcom
pop
cmp
nop
shl
inc
mov
push
or
xor
or
aad
mov
aaa
mov
adc
aas
fldl2e
scas
jo
pop
sahf
add
mov
nop
mov
mov
outs
sub
cli
fwait
jg
sub
inc
mov
(bad)
pop
inc
jle
pop
shl
in
retf
outs
pop
dec
shl
outs
leave
push
mov
add
cmp
and
mov
fbld
stos
mov
jb
(bad)
fsubr
xchg
cmp
jmp
and
nop
mov
cs
and
jae
cmp
inc
aas
cmp
cmp
inc
test
jno
ja
scas
inc
push
or
mov
sub
out
sti
ins
stc
jns
xchg
nop
(bad)
inc
mov
test
icebp
hlt
pop
sub
adc
dec
fcomp
inc
ficom
inc
into
inc
loopne
mov
js
and
(bad)
jg
imul
xor
mov
jns
and
pop
or
js
cmps
fstp
leave
(bad)
leave
jl
mov
xor
js
and
xor
repz
stc
mov
cmp
jle
push
ficomp
imul
push
jns
inc
jns
push
sub
aad
faddp
test
ret
sbb
in
push
xor
xor
outs
mov
mov
icebp
call
dec
xor
xchg
mov
jno
mov
push
loope
and
push
rcl
cmp
or
js
hlt
pop
imul
dec
cs
cmp
and
pop
cmp
sub
push
dec
je
loope
add
ret
leave
mov
ret
gs
xchg
mov
stos
and
mov
pushf
outs
mov
mov
cmp
jne
add
or
aaa
rsm
and
test
int
sub
cmp
in
cmp
add
pop
popf
dec
in
cmp
jg
das
cmp
fdiv
jns
jbe
imul
mov
push
dec
cmc
cmp
xchg
push
(bad)
jecxz
sub
xor
lahf
cmps
nop
cli
inc
add
cmp
or
movs
retf
pop
cmp
(bad)
loopne
cmps
mov
xchg
sbb
cli
push
pop
cmp
mov
fldl2t
jp
and
sub
jno
fild
fild
inc
aad
rol
xchg
imul
adc
jle
cmp
arpl
mov
repnz
fistp
adc
mov
sbb
and
sbb
leave
stos
jl
xchg
mov
sub
or
pushf
jle
lea
sbb
lods
mov
inc
mov
sbb
jns
and
xor
xchg
push
lods
out
bndldx
mov
dec
jp
push
aaa
cmp
test
cli
jmp
inc
(bad)
pop
daa
inc
sub
sub
push
aaa
scas
test
(bad)
div
xor
sahf
mov
sub
aas
cmp
dec
mov
and
es
push
mov
dec
push
xchg
pop
pop
inc
adc
xchg
or
scas
inc
mov
pop
inc
add
or
cmps
test
cdq
mov
(bad)
mov
test
pop
stc
add
(bad)
in
cmp
cmp
aas
sti
mov
test
mov
mov
repz
int3
sahf
cld
inc
jmp
xor
jg
dec
cmp
mov
nop
mov
or
cmc
jae
dec
inc
loopne
xchg
inc
stos
ins
jp
push
dec
mov
xchg
bound
outs
das
sbb
sbb
mov
lock
mov
xchg
inc
test
not
cmc
inc
cmps
clc
or
xor
mov
xor
stos
mov
sbb
jae
out
push
enter
push
aas
add
imul
sub
lea
or
inc
inc
pusha
ret
(bad)
daa
out
aam
jl
mov
std
div
hlt
repz
cmp
add
daa
gs
fnstenv
xchg
jno
add
xor
add
dec
or
add
imul
adc
and
pop
addr16
gs
dec
sti
inc
loop
add
lahf
test
sbb
jle
loope
dec
ret
mov
xchg
lahf
mov
push
inc
pop
and
and
hlt
xor
mov
movs
add
jno
lock
mov
jge
cmovo
pop
inc
dec
mov
lods
fdiv
ds
ret
pusha
lds
push
add
push
inc
jnp
call
lods
loopne
pop
inc
sbb
xor
pop
lea
mov
fcmovb
push
pop
(bad)
test
shl
pop
iret
cmp
push
hlt
(bad)
not
jmp
jb
das
adc
mov
aad
pop
dec
cmp
add
add
cmp
mov
or
add
jmp
or
xchg
fdiv
mov
and
retf
cmp
pop
fld
(bad)
jge
xor
or
sbb
dec
mov
lods
inc
ret
pop
xor
cmc
les
jge
test
dec
lods
jns
cli
sbb
sahf
jo
add
jge
pop
stc
popa
and
repz
mov
out
sub
pop
sub
cmp
cli
and
test
stos
imul
xchg
fdivr
mov
sti
(bad)
xchg
xor
loopne
jae
jmp
loope
aam
mov
dec
add
and
cmp
inc
mov
aad
cmp
or
adc
mov
push
icebp
dec
div
add
test
cld
cmp
jge
pop
inc
xor
fs
cmp
loop
out
sbb
mov
or
mov
fscale
js
ret
mov
aad
add
mov
xchg
fdiv
dec
aaa
lock
call
shl
sbb
imul
jmp
and
pop
mov
iret
(bad)
loopne
into
(bad)
adc
retf
ror
jle
pop
test
dec
push
cmp
mov
idiv
or
cli
cmps
dec
push
jg
xor
jne
loope
outs
fld
mov
sub
sub
les
jmp
(bad)
stc
int3
pop
cmp
jb
loopne
inc
jge
mov
and
inc
xchg
test
stos
inc
jo
lods
xor
xor
inc
mov
mov
ret
sub
jns
jne
ror
aas
pop
or
pop
sar
pop
cs
xchg
mov
pop
ficom
adc
mov
mov
push
(bad)
iret
push
je
push
(bad)
cmp
loopne
jno
or
sub
clc
adc
int3
cmp
push
shr
inc
outs
call
push
es
ret
jl
rol
mov
xchg
lea
cwde
or
push
popa
mov
ins
cdq
sti
inc
mov
sub
shr
cmc
call
mov
xchg
lock
mov
loop
push
popf
sar
inc
pop
mov
sub
inc
xor
stos
test
ja
aam
push
xchg
hlt
sub
(bad)
jns
leave
pop
inc
sub
pop
lahf
cmps
aaa
mov
dec
movs
cmc
aad
cmc
dec
push
les
push
jo
ds
push
dec
inc
jg
outs
stos
(bad)
jmp
cdq
sub
iret
mov
jmp
dec
add
push
int
dec
mov
fwait
or
pop
sub
enter
and
jl
jle
(bad)
cmp
sar
mov
mov
nop
mov
adc
xchg
inc
push
(bad)
and
pop
stos
cli
sbb
inc
and
fisub
jnp
fmul
inc
push
leave
pop
int3
pop
int
mov
mov
cli
iret
lock
sub
xor
rcl
xchg
push
push
out
dec
xor
rcl
aaa
adc
in
pop
addr16
int
pop
xchg
fstp
mov
inc
cmc
mov
addr16
pop
jp
xchg
add
cdq
inc
or
data16
leave
js
stos
adc
int
fnstenv
fsubr
dec
mov
jmp
mov
add
arpl
add
mov
push
adc
sub
jno
push
ins
push
mov
dec
outs
inc
inc
mov
imul
lea
pop
int3
or
test
mov
leave
adc
add
pop
inc
fild
xor
jge
dec
add
sbb
fstp
or
sub
mov
mov
ins
inc
jb
jns
hlt
cmovns
push
sub
xchg
mov
dec
cli
loopne
enter
outs
mov
test
pushf
mov
mov
jb
aas
fild
mov
in
sub
xor
push
sbb
lahf
repz
imul
xchg
out
or
stc
pop
add
and
mov
mov
adc
lahf
mov
pop
test
inc
push
add
inc
scas
retf
or
fs
xor
mov
cmp
cdq
cmp
popf
sbb
sbb
(bad)
sbb
sub
scas
push
repnz
cli
pop
push
jnp
add
test
dec
sub
xor
and
cs
mov
mov
ret
jae
outs
stos
inc
inc
mov
adc
mov
cmp
xor
jae
xchg
xor
cmp
pop
sbb
adc
mov
cmpxchg
inc
push
retf
div
or
adc
or
fwait
inc
add
imul
cmp
mov
sbb
xlat
repz
bound
mov
das
mov
add
cwde
xchg
and
inc
jo
push
mov
enter
push
add
movs
dec
inc
ins
test
xchg
jbe
stc
jmp
jo
mov
cli
and
dec
mov
inc
xchg
outs
fld
and
popf
out
cmp
lock
mov
cmps
push
or
movs
xchg
add
icebp
mov
mov
aas
cmovns
lods
jmp
int3
cld
and
pop
push
aas
and
in
out
and
movs
loopne
cmp
adc
retf
xchg
cmp
mov
inc
xlat
jns
inc
xchg
mov
dec
out
and
iret
pop
mov
push
repnz
ins
pop
loop
add
jbe
push
push
xchg
pop
push
xchg
inc
mov
cmp
inc
sbb
es
pushf
scas
int
fmul
xchg
cmp
in
lock
or
or
fcmovnb
push
xchg
inc
pop
pop
mov
iret
sbb
adc
xchg
mov
(bad)
fs
pop
ret
and
inc
add
repz
outs
add
add
push
ret
repnz
lods
push
bndldx
mov
lea
mov
inc
adc
(bad)
popa
or
mov
adc
imul
mov
cmp
div
xchg
lea
adc
lahf
xchg
ret
xchg
sbb
mov
ss
ins
and
stos
mov
pop
jae
adc
cmc
pop
out
sbb
hlt
cmc
inc
loope
sbb
cmp
xchg
int
jbe
mov
dec
cmc
call
loopne
xor
mov
sub
jmp
xchg
cmc
bound
fwait
aas
dec
or
leave
pop
stos
jp
adc
xor
sbb
mov
stc
sbb
arpl
add
(bad)
add
pop
inc
aaa
sbb
in
cmp
inc
loop
adc
rcr
adc
repnz
call
repz
cmp
je
or
outs
sub
dec
pop
sahf
adc
rcr
(bad)
sbb
icebp
sub
stos
arpl
jns
cmp
xor
mov
sbb
jae
mov
lds
add
jle
or
sbb
repz
sbb
sahf
shl
daa
in
iret
push
inc
cmp
ins
jmp
mov
add
jns
jg
mov
lods
sub
sub
(bad)
faddp
dec
add
neg
les
and
sbb
ret
push
add
jno
or
jge
imul
pop
aad
leave
and
(bad)
mov
adc
aad
ss
jecxz
mov
xor
sti
jnp
or
pop
xchg
pop
outs
and
call
aas
jmp
mov
addr16
cld
xchg
add
fdivr
cmps
mov
jecxz
add
cmp
not
jecxz
ret
std
fwait
xchg
jns
xchg
lahf
cmp
pop
pop
popf
pop
dec
adc
push
adc
add
and
xchg
sub
mov
push
fcmovne
jns
dec
sbb
je
scas
adc
jle
mov
inc
test
jge
mul
mov
enter
push
add
(bad)
xor
or
jae
cs
mov
leave
inc
or
push
test
dec
pop
dec
into
stos
push
cmp
mov
and
outs
inc
fs
sbb
movs
inc
lahf
aad
and
dec
jle
pusha
cli
add
jge
jle
fld
mov
xchg
or
push
cs
leave
jnp
cmp
or
imul
inc
push
cmp
fimul
jnp
test
movs
push
ficom
in
inc
fistp
je
sub
hlt
add
pop
pop
dec
popa
sbb
ret
jno
xchg
outs
xchg
add
cmp
addr16
in
jns
adc
or
jb
mov
lea
ret
addr16
test
sub
add
push
xchg
inc
inc
popa
inc
jge
fadd
cmp
jmp
call
inc
cs
out
xchg
dec
pop
test
sub
leave
ud0
fistp
mov
rol
add
mov
add
and
dec
nop
and
ret
(bad)
and
and
cmp
mov
jns
push
inc
popf
lods
repz
aam
pop
inc
dec
mov
ins
pop
jg
or
loop
inc
mov
mov
xlat
cmp
or
ins
xchg
test
dec
sar
mov
sbb
call
or
mov
or
mov
mov
jl
inc
xor
rol
fadd
call
cmp
loop
jne
loope
jae
jg
xor
mov
div
packuswb
jp
scas
sbb
dec
rol
jge
aaa
jnp
hlt
inc
push
cmp
call
sub
mov
and
mov
pop
lahf
loopne
pop
inc
push
xchg
mov
add
sub
sub
xor
xchg
test
test
mov
adc
call
push
xor
dec
jge
aaa
fnstsw
cmc
xor
shr
mul
les
clc
in
inc
xchg
stc
pop
cwde
lods
movs
inc
mov
or
cmp
rcl
arpl
clc
cmp
or
pop
push
in
xor
inc
loopne
dec
xlat
dec
(bad)
dec
fld
push
add
mov
nop
jge
jmp
(bad)
jecxz
scas
mov
inc
adc
pop
push
mov
xor
mov
std
ror
mov
fsubr
jecxz
mov
test
cmp
mov
push
or
nop
jns
outs
inc
repnz
fmul
mov
cmp
inc
xchg
cmp
or
mov
cmc
stc
mov
loope
xchg
popf
adc
fmul
lahf
sub
das
stos
add
aad
sti
ds
in
aam
out
mov
test
ret
mov
cmps
leave
in
cdq
jecxz
aaa
dec
js
in
cmp
jns
xchg
mov
inc
dec
aaa
xchg
test
leave
cmp
mov
xor
cmp
jmp
mov
cli
add
fucompp
rol
(bad)
adc
call
jmp
xchg
mov
mov
or
pop
jno
or
or
outs
jnp
sbb
(bad)
jmp
inc
outs
xchg
cld
or
fist
xlat
xchg
(bad)
cmp
loope
jg
sar
jge
xor
mov
adc
aaa
inc
fbstp
cmps
cwde
or
iret
sub
fstp
dec
xor
jno
and
movs
mov
jbe
cmp
punpckhbw
sti
and
jge
nop
cmp
mov
mov
mov
loopne
test
or
sub
mov
jns
test
mov
je
sub
gs
out
loopne
mov
or
mov
and
cli
cmp
mov
lea
ins
lock
call
ret
shr
xchg
xchg
ror
je
sahf
imul
add
add
cmp
icebp
lock
leave
es
jb
movs
js
out
(bad)
mov
and
pushf
mov
fist
xchg
cmp
sub
push
out
cdq
retf
cmp
jmp
shl
outs
daa
xchg
push
outs
js
jne
and
repnz
or
xchg
adc
ds
jns
pop
xor
arpl
cmp
out
xor
(bad)
inc
cmps
(bad)
fwait
push
loope
mov
xchg
gs
jno
jo
pop
loope
dec
jns
mov
imul
sbb
stos
mov
movs
stc
jmp
mov
sbb
dec
mov
loope
into
sub
test
jl
ja
mov
jae
out
nop
(bad)
fist
mov
adc
leave
cmp
sahf
je
loope
mov
xchg
jnp
repnz
iret
mov
jno
cmc
fs
mov
pusha
mov
mov
js
jno
or
mov
xchg
cli
sbb
cmp
mov
fistp
push
adc
xchg
inc
mov
mov
xchg
mov
and
ffree
dec
es
jbe
add
sub
xchg
add
(bad)
shl
retf
cmp
stos
jmp
sub
cmp
movs
pop
rol
test
cmp
pop
fcomi
pop
outs
cmp
mov
imul
mov
cmp
mov
lock
movsx
jbe
mov
data16
out
icebp
jno
and
popf
repz
and
sbb
jno
dec
fstp
push
jbe
mov
xchg
jo
or
sub
scas
adc
push
jo
jb
inc
mov
mov
fsub
or
cmp
fbstp
inc
xchg
addr16
jge
jle
mov
mov
sahf
pop
pop
cmps
mov
cmp
pop
sbb
sbb
iret
nop
cmps
pop
pop
rcl
xchg
push
inc
push
(bad)
cmp
(bad)
mov
es
sbb
std
sbb
adc
popf
fdiv
cmp
xor
cmp
and
int
cmp
ror
test
sbb
imul
add
out
mov
mov
scas
inc
fimul
int
ret
cmps
mov
push
push
mov
inc
cmp
ret
add
inc
(bad)
jno
adc
pop
ins
pop
jp
test
int3
xor
or
push
push
mov
inc
int
push
in
dec
lahf
int3
(bad)
sub
xor
jnp
adc
cmp
pop
ins
sti
outs
stos
mov
and
jnp
jmp
inc
push
ret
sub
fadd
stos
jge
dec
ins
mov
pop
inc
jnp
dec
jecxz
mov
mov
jo
test
mov
fidivr
cmp
jno
xchg
fcomp
sbb
pop
lahf
jl
mov
dec
ret
sbb
adc
cwde
sbb
fs
push
cmp
cmps
sti
stc
inc
xchg
popf
fstp
cmp
call
(bad)
addr16
push
cmps
xchg
xchg
cmp
out
(bad)
pusha
and
sbb
add
cmp
jp
jge
dec
pop
pop
inc
test
addr16
jbe
pusha
test
xchg
pop
sub
(bad)
das
xchg
mov
leave
fsub
xchg
popa
jle
(bad)
js
adc
in
pop
cmp
jmp
test
jno
js
sub
cmp
(bad)
sbb
cmp
dec
add
fbld
ret
cli
cwde
jl
xchg
bound
mov
push
mov
sub
jno
(bad)
out
cmp
and
sbb
shl
or
push
adc
scas
xchg
retf
xchg
jle
sar
or
nop
fs
adc
sub
aas
aad
and
jns
jg
mov
add
xor
pop
aas
std
(bad)
xor
jmp
es
ret
adc
(bad)
mov
pop
out
inc
(bad)
aam
pop
cmps
push
inc
and
and
ret
xchg
pop
pop
(bad)
sahf
mov
inc
and
xor
mov
jb
cmp
retf
adc
inc
adc
cmp
and
mov
mov
xor
xlat
inc
(bad)
rol
inc
fxch
pop
int3
aaa
cmp
mov
call
cmp
inc
mov
call
in
pop
inc
xor
and
inc
cmp
sub
mov
into
inc
mov
out
dec
out
mov
add
dec
mov
dec
les
cmp
stos
xchg
and
out
sbb
mov
jge
push
add
dec
test
push
inc
movs
inc
out
adc
sar
int
fild
dec
fld
(bad)
or
inc
cmp
push
add
fidivr
(bad)
vmovaps
adc
in
dec
js
mov
cmp
pop
bound
imul
ds
mov
add
pusha
ret
aaa
inc
popa
stc
cmp
cmp
repnz
in
aam
sub
mov
(bad)
stc
mov
adc
(bad)
fst
sub
jbe
mov
into
mov
xchg
call
xor
cmp
(bad)
sbb
inc
push
arpl
inc
add
out
je
and
and
mov
mov
cmp
jle
fucomi
ror
cmp
inc
push
arpl
(bad)
movs
inc
scas
xchg
or
inc
xor
iret
pop
jbe
adc
mov
out
mov
jnp
dec
popa
int3
pop
mov
or
cmp
mov
sar
pop
mov
scas
sti
inc
sbb
outs
scas
cmp
ret
mov
push
outs
or
scas
popa
fwait
cmp
mov
dec
xchg
cmp
pop
and
ret
aaa
bswap
inc
fidivr
mov
cld
shr
inc
push
mov
jmp
shl
inc
adc
ins
sbb
dec
test
dec
scas
xchg
aam
push
cmp
rol
adc
hlt
fisttp
jge
jp
fucomip
es
push
cmp
mov
idiv
sub
pusha
ficom
add
ins
cmp
cmp
sti
not
mov
fcom
mov
js
jne
daa
inc
or
(bad)
lods
sub
aaa
cmc
adc
jp
xlat
scas
iret
fistp
push
outs
ins
mov
jp
jae
jp
ja
fs
and
sub
loope
and
mov
mov
pop
inc
xor
push
pop
adc
int
(bad)
leave
or
rcr
fcom
cs
je
dec
into
loopne
xor
mov
jmp
push
xchg
add
mov
test
pop
mov
sub
int3
fbld
xor
rcl
inc
scas
pushf
jecxz
call
or
rol
ja
rcr
in
int3
xchg
dec
pop
rol
mov
xor
and
inc
out
std
xchg
add
inc
or
in
jge
jnp
test
inc
adc
sub
stos
sar
inc
test
out
sbb
or
(bad)
idiv
sbb
jle
mov
out
inc
mov
ret
push
mov
sahf
fild
lods
int
stc
sbb
cmp
inc
xchg
xchg
adc
pop
pusha
cmp
cld
int3
out
movs
(bad)
push
stos
fisub
pop
into
mov
push
adc
popa
inc
push
out
mov
mov
pop
test
ja
loop
adc
int3
pop
stc
outs
(bad)
jge
mov
(bad)
cmp
sti
fs
and
xchg
cmp
pop
or
das
aaa
push
jo
inc
aam
sub
je
xor
dec
sar
ret
inc
into
mov
nop
push
rcr
sbb
xor
test
pop
and
mov
add
cmp
mov
mov
sbb
sub
or
adc
ds
cdq
aas
bound
jl
add
mov
rol
iret
mov
repnz
dec
movs
inc
sbb
(bad)
cmp
test
les
hlt
cmps
stos
sub
sub
and
iret
ds
sub
fnsave
sub
sub
gs
inc
xchg
mov
dec
or
lods
mov
sub
loope
adc
aas
fs
sub
push
nop
and
pop
enter
hlt
imul
movs
mov
daa
pop
jg
inc
not
cld
push
sub
adc
push
pop
mov
inc
sub
stc
loop
adc
sub
mov
stos
pop
push
push
inc
in
pop
sar
imul
mov
add
out
cdq
and
int
inc
dec
movs
lea
mov
sub
test
out
sub
cli
inc
inc
push
dec
push
ss
not
cld
scas
pop
ds
inc
jl
mov
nop
inc
sbb
aad
or
ins
rol
mov
loopne
int3
icebp
fmul
and
xchg
cmp
jae
aad
jl
outs
fild
nop
pop
shr
lea
ins
shr
dec
inc
jl
aaa
dec
outs
fiadd
push
hlt
int3
add
sub
sbb
sub
cmp
ss
jg
shl
mov
ret
sti
retf
sbb
ins
jmp
cli
ds
cmp
xor
mov
add
inc
or
inc
mov
loope
or
sbb
adc
add
mov
or
push
sbb
push
pop
mov
push
jns
xchg
or
hlt
inc
xchg
cmps
outs
inc
sbb
scas
cmovo
out
push
jo
aas
sti
xor
mov
ret
imul
(bad)
ds
in
xor
aad
jp
or
mov
xlat
adc
inc
loop
jcxz
into
in
push
dec
imul
ss
inc
mov
xchg
iret
mov
cmp
cmp
inc
bound
inc
adc
in
scas
jo
mov
rcr
xor
cmp
mov
call
cdq
fimul
cmp
test
out
dec
jl
inc
jns
rcr
mov
enter
cmp
jo
push
out
icebp
aad
jns
jle
out
ja
js
cmp
xor
loopne
cmp
sbb
inc
push
mov
jecxz
sti
repnz
xchg
jmp
mov
mov
jle
fnsave
sub
or
pop
ja
clc
sub
aas
cs
and
loopne
cmp
inc
dec
push
adc
fwait
popa
add
push
outs
cmp
cdq
fisttp
jbe
retf
leave
jo
rcl
stc
jnp
inc
cwde
xchg
xchg
retf
mov
fld
movs
iret
sbb
ins
dec
adc
inc
xor
or
sbb
or
push
jno
mov
mov
test
sbb
sti
mov
mov
push
xchg
iret
xchg
jmp
sbb
pop
and
mov
movs
ins
retf
outs
push
int
push
jo
cmp
push
fbld
jb
mov
inc
jns
jp
jle
jb
push
ins
ja
(bad)
in
mov
xchg
ret
aas
sub
dec
adc
jae
push
fnstsw
jmp
xor
push
push
aas
sub
daa
ss
mov
sbb
pop
or
mov
jmp
mov
push
jmp
inc
addr16
mov
imul
jl
push
dec
sbb
cmp
clc
jmp
movs
mov
dec
mov
sbb
and
push
nop
push
pop
aam
inc
paddusw
stos
push
dec
mov
inc
and
jno
cs
pop
inc
(bad)
cwde
and
xchg
(bad)
pusha
dec
loop
fstp
ins
out
call
inc
test
jne
int
repnz
add
mov
rol
inc
lgs
in
ja
push
push
out
out
jnp
cmp
xchg
pmulhw
fcmovbe
jmp
rol
jbe
ds
(bad)
dec
push
bndldx
cmp
mov
repnz
xor
in
cmp
test
std
cmp
jo
nop
dec
imul
sbb
(bad)
or
inc
sbb
jle
scas
pop
mov
push
cwde
test
pop
or
fisubr
add
xchg
pop
(bad)
mov
sbb
and
rcr
inc
jbe
sub
push
inc
pop
or
push
and
repnz
inc
(bad)
shl
rol
pop
daa
sbb
loopne
jp
ss
movs
push
push
fs
sbb
jbe
push
(bad)
ds
cmp
jecxz
cmp
cmp
inc
and
fcomp
mov
sub
sbb
pop
inc
cmp
fdivr
push
ds
das
push
ror
xor
out
stos
imul
dec
aad
dec
fild
inc
ss
jge
ret
cmc
add
mov
jmp
jp
xchg
cmp
jo
xor
dec
int3
xor
mov
cmp
sbb
mov
test
sub
dec
cld
cmp
icebp
js
mov
xchg
lea
call
je
adc
pushf
xchg
test
add
or
imul
(bad)
loope
fadd
in
stc
add
out
jl
sub
push
leave
(bad)
cmp
nop
xor
mov
ss
mov
add
sbb
test
cmp
push
fiadd
rcl
push
mov
mov
ins
pop
mov
pop
adc
push
cmp
test
sub
in
mov
cmp
jb
sahf
mov
addr16
retf
inc
and
fsubr
arpl
and
aaa
cmp
mov
pop
cmp
or
fadd
movs
sbb
js
cmp
inc
mov
ja
inc
inc
mov
pop
test
xor
(bad)
jae
push
mov
mov
call
imul
cmp
or
jbe
inc
sahf
mov
inc
mov
pop
ins
or
cmp
cmps
pop
mov
mov
xor
and
lahf
std
mov
sub
loopne
or
fnstsw
xchg
scas
xor
cmp
push
pop
rcr
mov
jmp
imul
cmp
adc
imul
movs
cmp
pop
cwde
imul
mov
add
mov
jge
popa
jno
pusha
xchg
in
sti
cmp
jl
add
aam
int
mov
scas
(bad)
ss
add
or
mov
inc
cmp
lds
in
aaa
data16
into
rol
sar
(bad)
cdq
pop
dec
loope
mov
fucomi
xor
mov
inc
icebp
inc
leave
loopne
dec
cmps
js
sub
(bad)
mov
mov
sbb
pop
xchg
pop
adc
fwait
mov
add
jns
dec
sbb
cmp
std
pop
or
inc
inc
dec
popf
sbb
xchg
cmp
sub
or
or
xlat
hlt
(bad)
cmps
push
je
in
inc
adc
jne
aas
sub
popa
shl
or
jae
hlt
mov
mov
and
shl
xchg
add
cmp
inc
pop
xchg
xor
inc
mov
fwait
pusha
imul
(bad)
sbb
rol
dec
pop
wrmsr
int
pop
inc
test
adc
lea
inc
jge
sub
mov
dec
pop
inc
sbb
ins
jno
mov
call
xor
retf
fdivr
jp
cmp
sbb
repnz
imul
xchg
jnp
pop
inc
call
psubq
jmp
mov
sbb
inc
jb
(bad)
in
xor
retf
inc
std
ret
shr
xor
pop
sub
ror
inc
cli
cmp
mul
or
cmp
lea
sbb
push
cmps
inc
loopne
or
sahf
in
mov
(bad)
push
push
fs
shl
mov
pop
add
jmp
mov
in
inc
in
not
retf
inc
push
dec
cwde
push
xchg
test
inc
or
xchg
inc
dec
mov
xlat
(bad)
fnstcw
stc
imul
push
cdq
ficomp
and
push
mov
mov
and
addr16
int3
daa
sar
stos
xchg
jae
dec
std
movs
adc
push
mov
outs
movs
(bad)
mov
sbb
sub
pop
(bad)
cmp
inc
je
test
mov
mov
jecxz
sbb
mov
inc
jl
lods
jmp
inc
adc
test
cld
out
dec
push
inc
and
cmps
xor
or
idiv
inc
mov
(bad)
cmp
jae
test
enter
idiv
cmp
jns
fild
push
cmps
inc
jno
aas
add
fimul
lods
push
push
dec
loopne
fld
dec
or
xor
sbb
adc
sbb
mov
sar
popf
lock
jmp
push
mov
pop
lods
cmp
sub
test
ins
jne
and
retf
jmp
jecxz
pusha
xchg
cmp
jno
xor
mov
and
mov
cmp
jge
xchg
push
cmp
out
xchg
fcomi
or
outs
push
retf
pushf
fcmovb
push
mov
lock
jo
sbb
call
pusha
pop
sub
jb
leave
data16
scas
out
mov
mov
pushf
test
fwait
daa
std
cmp
aas
mov
inc
sub
ds
xor
frstor
mov
cmp
cmp
test
fstp
stos
test
jns
sub
xchg
shl
push
mov
sar
js
loop
mov
jb
dec
push
mov
out
popa
mov
sub
fs
into
aaa
cmp
into
inc
arpl
cmp
scas
jg
shl
mov
mov
dec
mov
nop
fnstcw
lock
cmp
push
sub
(bad)
lea
es
xchg
sbb
out
sub
cmp
xchg
xchg
jecxz
sar
std
js
adc
test
ror
data16
xor
icebp
outs
(bad)
inc
or
mov
pusha
xchg
push
(bad)
mov
stc
leave
jb
(bad)
jbe
xchg
fstp
sbb
mov
jg
fst
xchg
xchg
mov
sub
call
mov
out
sub
ret
xor
dec
jns
dec
and
jae
add
js
aad
ja
out
pop
imul
pop
ret
jno
dec
icebp
ret
push
xor
out
lea
ins
push
pusha
aaa
and
je
xchg
or
mov
hlt
sbb
loope
inc
push
das
movs
shl
or
jno
loop
mov
xlat
ret
mov
cmp
enter
nop
neg
jno
cmp
cmp
rcl
fadd
into
lahf
cmp
ins
pop
add
mov
jno
push
(bad)
ss
iret
pop
xor
sub
inc
sar
(bad)
cmps
jmp
in
in
lea
xchg
ror
xchg
jno
leave
mov
shl
sub
cli
or
mov
push
test
push
or
movs
xchg
cld
in
mov
sbb
dec
mov
adc
aas
pop
jge
adc
jb
into
xor
cmp
mov
jno
cmc
sbb
pop
lods
dec
add
lds
stos
jno
(bad)
sbb
inc
adc
hlt
mov
cmp
retf
mov
dec
pop
dec
popf
push
rcl
dec
mov
mov
inc
jge
lods
arpl
mov
movs
mov
xchg
(bad)
cs
imul
jmp
inc
fadd
cmp
inc
out
hlt
out
inc
fsubr
loopne
dec
or
or
in
inc
sub
cmps
mov
inc
xchg
pop
cdq
fs
and
sar
or
in
inc
bnd
cld
in
pop
pusha
inc
inc
shl
retf
xchg
dec
dec
and
clc
jge
in
fnstsw
(bad)
mov
mov
lock
loop
or
iret
push
inc
aaa
popf
test
mov
sbb
clc
or
loop
jle
lea
adc
or
xor
pop
cmp
pop
loop
fidivr
add
rol
mov
jb
into
xchg
popa
sub
or
inc
test
adc
ret
pop
inc
fs
jmp
and
mov
pusha
xor
inc
test
jne
in
dec
cdq
xchg
cmp
aaa
pop
shl
and
(bad)
scas
loope
xchg
ret
push
jmp
sahf
pop
adc
loop
js
jo
pop
out
mov
inc
push
div
pop
loopne
inc
or
inc
add
or
inc
out
or
xor
iret
lods
aam
inc
sti
add
inc
(bad)
jmp
inc
pop
mov
test
sub
push
xchg
lods
mov
loopne
add
xchg
aas
cld
in
hlt
or
cld
push
inc
add
push
jge
or
shr
inc
(bad)
std
imul
and
pop
repnz
fstp
jge
mov
das
adc
je
add
imul
outs
stc
jns
dec
xor
add
je
mov
cmp
push
mov
xchg
pop
daa
lahf
leave
jo
cli
cmp
mov
adc
repz
mov
xor
gs
das
repz
jl
sar
in
jbe
push
in
jge
int
aam
ins
sub
and
ret
xchg
dec
xor
push
lods
lahf
mov
mov
fidivr
in
cmp
xor
mov
cmp
(bad)
iret
mov
ror
cmp
pusha
lahf
jns
or
mov
fdivr
mov
xchg
inc
adc
lea
std
or
mov
stos
outs
sar
mov
lock
out
(bad)
call
bnd
aam
dec
inc
add
jge
sti
ret
lds
and
cld
xor
xor
rcl
sbb
lods
fdiv
cmp
sub
leave
add
cmp
inc
pop
push
test
cmp
push
inc
jnp
aad
sbb
test
or
int
mov
mov
(bad)
or
hlt
mov
cmp
retf
push
stos
sti
aas
cli
dec
add
cmovno
lea
pushf
cmp
pop
push
iret
clc
add
jno
and
inc
jns
jbe
jle
xor
mov
pop
jns
fidivr
inc
xor
out
jl
adc
into
stos
int3
pop
test
out
xor
popa
cmp
jge
inc
inc
sub
icebp
ja
cmps
adc
stos
and
pushf
pop
les
pop
cmps
push
cmp
call
outs
lods
adc
mov
sub
inc
mov
dec
xchg
retf
dec
adc
or
ds
mov
xor
mov
lods
mov
je
and
mov
retf
inc
or
jb
dec
xlat
inc
iret
idiv
aad
fisubr
test
jb
retf
pop
and
inc
cmp
outs
sbb
idiv
jbe
test
pop
inc
ret
loop
shl
cmp
push
or
jle
inc
add
add
sub
sub
leave
(bad)
rol
ins
sbb
jne
cmps
(bad)
aam
loope
cwde
hlt
jle
or
sbb
test
inc
sbb
out
jmp
inc
scas
push
inc
(bad)
mov
mov
and
out
imul
and
push
retf
sub
adc
cmp
cmp
leave
push
or
loop
bound
pop
push
fmul
sub
jb
add
fnclex
add
and
xlat
and
movs
jo
jmp
dec
(bad)
mov
push
xor
xor
lock
add
jns
rcl
sbb
loope
jo
jnp
xchg
mov
cmp
aad
lods
pop
ret
dec
jg
xor
js
ss
xchg
fs
inc
fimul
inc
into
lods
outs
mov
jp
cmp
sub
mov
movlps
cld
adc
and
push
xor
mov
cmp
inc
mov
adc
fistp
mov
cwde
les
mov
daa
xor
mov
sbb
jns
inc
dec
pop
or
test
push
pop
bound
cmp
imul
or
lahf
sub
int
inc
xlat
sbb
bswap
mov
stos
rol
cwde
and
in
mov
add
cmp
inc
leave
add
fsub
out
fidivr
fs
or
push
(bad)
fild
aaa
retf
and
imul
loopne
inc
inc
push
jl
leave
cli
sub
out
sti
inc
push
aaa
dec
fld
in
sub
sbb
pusha
(bad)
sbb
xor
mov
sar
inc
sti
ret
mov
rcl
push
rcl
aam
inc
mov
fistp
enter
out
cld
or
fucomi
js
lods
jb
sbb
lahf
mov
xor
mov
and
rcr
jmp
int
int3
out
fnstsw
push
add
popf
xor
gs
inc
rol
cli
adc
dec
outs
push
dec
cmp
inc
rcr
pop
dec
cmp
dec
and
xlat
xchg
movs
pop
pop
movs
neg
fstp
inc
dec
test
fidiv
inc
jecxz
movs
leave
sub
fisttp
mov
inc
jl
sbb
xor
imul
xlat
xor
mov
push
enter
push
push
inc
mov
ja
mov
fld
loopne
fmul
inc
fdivr
fisttp
aad
call
fld
add
cmps
retf
cmp
sub
cmp
jns
popf
test
pop
fcom
inc
in
in
jno
jge
mov
scas
cdq
nop
mov
cdq
xor
rcr
call
rcr
icebp
enter
lds
jmp
jbe
push
mov
arpl
adc
mov
sbb
arpl
add
jno
out
mov
leave
sbb
push
sar
js
inc
adc
(bad)
(bad)
jns
push
xor
sub
rol
stos
pop
dec
add
stc
dec
dec
pop
inc
bound
push
out
dec
xchg
jle
mov
sahf
or
(bad)
jbe
sbb
repz
xlat
inc
add
cmp
jno
cmp
into
cmps
cmp
and
sub
stos
cwde
scas
(bad)
pop
gs
push
mov
ds
out
xor
push
push
inc
(bad)
cmp
xchg
das
mov
into
push
fnstsw
mov
icebp
adc
or
sti
adc
dec
cmp
out
fdivrp
out
(bad)
popa
sbb
dec
pop
sahf
imul
imul
sub
js
fs
mov
jge
mov
mov
fnstenv
jno
cmp
cmp
cmp
fs
inc
fld
push
arpl
xor
stc
cmp
(bad)
mov
ins
mov
sbb
cmps
arpl
cmp
jmp
popa
add
ret
mov
add
out
ins
push
out
jge
ror
(bad)
mov
cmp
jge
lock
std
je
lahf
sahf
cmp
loope
dec
ins
and
push
fst
nop
mov
push
(bad)
adc
jns
int3
pop
mov
xor
je
enter
jno
sub
fst
neg
ds
cmp
into
mov
imul
xchg
mov
jns
in
(bad)
call
pop
xchg
cmps
aad
cmp
push
mov
xchg
sbb
and
cmp
mov
fdiv
mov
and
inc
jle
loop
or
xor
jge
test
jo
pop
dec
xor
push
mov
cmp
jl
lahf
pop
popf
adc
and
test
inc
les
and
cmp
ftst
jg
push
push
or
inc
adc
dec
sar
in
popa
pop
retf
mov
push
enter
inc
mov
outs
xchg
popa
cmp
push
aam
test
les
imul
clc
lock
sbb
pop
(bad)
in
mov
add
clc
pop
dec
in
push
ds
cmp
sub
or
or
out
push
and
leave
inc
inc
xchg
jo
inc
xor
sub
int
test
es
fiadd
push
scas
adc
gs
fwait
or
inc
mov
dec
into
push
dec
xor
inc
or
div
imul
push
popa
movs
and
pop
inc
(bad)
aas
int
test
cmp
jno
inc
int3
sahf
inc
add
pop
hlt
or
(bad)
fnstcw
enter
and
bound
(bad)
jo
or
xlat
fwait
cmp
push
inc
pusha
fisub
push
mov
jp
lods
ja
inc
inc
fstp
dec
rcr
and
mov
stos
sbb
push
inc
fwait
mov
adc
sub
addr16
shl
fadd
jmp
adc
into
adc
mov
inc
je
or
jmp
lods
fidivr
sti
jmp
cmps
jns
cmp
cmp
xor
cmc
dec
aad
ret
dec
inc
add
and
gs
imul
popa
jne
repnz
stos
sub
sbb
repz
inc
and
push
cwde
cmps
mov
loope
inc
shr
push
or
das
jle
mov
inc
cmc
aad
movs
bound
jecxz
mov
pusha
stos
lea
adc
push
xchg
mov
jb
mov
test
xchg
xchg
sbb
dec
xor
jae
fnstenv
inc
aad
cmc
xor
cld
out
in
sti
xchg
bound
jg
pop
push
xchg
(bad)
mov
shl
dec
adc
sbb
inc
adc
aad
leave
inc
stos
dec
outs
push
cmps
xchg
repnz
stc
xchg
mov
mov
inc
(bad)
mov
sahf
jp
(bad)
fdivr
mov
loopne
add
or
ror
cmp
nop
shl
pop
ds
pop
and
mov
stos
jle
call
push
xor
xor
add
sub
sub
stc
outs
mov
adc
stos
mov
mov
in
inc
jno
or
jbe
sub
sub
cmp
inc
and
pusha
sbb
inc
retf
push
out
dec
popf
nop
pop
mov
inc
push
mov
pop
sti
pusha
addr16
imul
mov
out
and
inc
std
popf
add
mov
cwde
xchg
sub
aad
sub
cld
xchg
cmc
in
fnstenv
(bad)
mov
adc
ror
jmp
xor
daa
mov
mov
inc
(bad)
out
cmps
and
call
pop
xchg
pop
cmp
adc
pop
push
inc
sbb
dec
jp
iret
out
mov
inc
(bad)
aas
ficom
(bad)
in
pop
inc
fistp
out
adc
inc
mov
push
inc
xchg
inc
and
lods
mov
push
and
dec
daa
pop
jnp
sti
sbb
mov
sub
xchg
movs
xor
out
icebp
outs
stos
arpl
inc
ss
int3
lock
jecxz
xor
adc
test
push
cmp
or
mov
inc
(bad)
out
or
or
(bad)
int
push
daa
sbb
add
mov
fmul
push
lods
fwait
js
cmps
bound
pop
jns
in
lods
sub
ror
retf
add
mov
mov
pop
outs
mov
mov
loopne
or
(bad)
mov
out
mov
push
les
pop
int
stos
xchg
cmp
es
idiv
sbb
jae
cmc
hlt
lods
push
or
jns
test
lock
mov
jmp
sbb
js
fnsave
sbb
inc
xor
out
icebp
test
je
jns
dec
pop
and
xchg
rcr
add
jae
nop
mov
into
jb
in
push
add
shl
adc
outs
(bad)
cld
pop
out
inc
push
in
movs
aaa
and
jmp
mov
test
xchg
popa
sbb
pushf
add
outs
sub
sti
cmps
mov
cmp
out
and
adc
jns
push
cwde
cmp
sub
cmps
retf
cmp
jecxz
scas
dec
jle
and
fcomip
xchg
jns
jno
sub
ds
cmp
or
push
sbb
xor
dec
xchg
iret
add
es
or
cmps
add
cmp
xor
fwait
ret
in
xor
shr
mov
xchg
aad
pop
xor
ret
iret
cld
add
jno
jl
pop
sti
or
js
popf
pusha
mov
add
mov
adc
fxch
shl
int
fcmovnbe
fmul
xlat
retf
pop
iret
lds
push
xchg
sub
jno
or
sub
inc
js
add
mov
mov
test
add
shr
inc
loope
(bad)
ror
shl
enter
cmp
fidivr
xor
ss
imul
and
and
sbb
fistp
cli
jo
push
xchg
cmp
or
mov
sbb
mov
sbb
test
push
aas
xor
mov
(bad)
sbb
pop
add
inc
sub
xchg
or
cmp
es
push
xchg
sbb
push
dec
xor
pop
rol
inc
cmp
mov
mov
push
fsub
add
pop
push
push
mov
data16
xor
stos
xchg
adc
cmp
and
repnz
test
inc
xchg
(bad)
fstp
mov
loopne
mov
add
in
stos
cmp
es
loope
cs
jl
test
retf
shl
imul
adc
xor
sub
and
sub
add
outs
xor
loopne
adc
jecxz
add
and
sti
outs
cld
add
jge
push
bswap
in
fimul
ds
leave
iret
cmp
loopne
pop
mov
sahf
or
in
xchg
movs
inc
loop
fimul
jmp
push
call
jecxz
imul
push
xor
lds
and
inc
xor
push
push
sbb
jne
fcmovne
add
pushf
test
inc
or
xchg
sbb
xchg
or
or
loopne
xchg
push
cmp
push
mov
mov
inc
cmps
sbb
ins
sub
push
and
call
mov
es
xchg
cwde
sar
sub
cli
mov
jnp
cmp
xchg
push
(bad)
and
jae
outs
sar
pushf
add
in
mov
inc
cmps
fs
stos
push
icebp
ret
enter
or
repz
mov
jge
pop
and
cmps
out
xor
aad
std
data16
push
cmc
out
push
dec
mov
inc
test
lea
ds
mov
(bad)
cmc
cmp
cwde
jns
pop
ds
js
dec
inc
or
int
jo
cmp
push
aam
sti
push
into
lea
cmp
cwde
inc
push
push
mov
movs
inc
retf
std
outs
adc
dec
jp
inc
sti
pop
daa
popa
mov
clc
mov
inc
addr16
push
jge
jbe
xchg
xor
ret
jecxz
adc
jb
data16
dec
inc
mov
or
jne
inc
xor
add
movs
xchg
jp
xchg
neg
jo
pop
push
loopne
sub
fwait
or
into
(bad)
cmp
iret
push
and
xor
push
mov
inc
stos
imul
dec
enter
inc
xor
dec
cli
ds
cmp
arpl
push
mov
into
cmps
cmp
inc
pop
inc
or
call
test
inc
(bad)
fs
daa
dec
or
push
mov
ds
das
inc
cmps
pop
sub
and
add
push
inc
in
pop
movs
(bad)
cmp
mov
int3
mov
cli
repnz
inc
cdq
jnp
mov
jmp
mov
into
or
mov
add
xchg
cld
loope
ja
pop
sub
test
mov
jmp
ss
cmp
arpl
not
cmp
dec
jl
mov
inc
jne
dec
repnz
sbb
inc
ds
xlat
retf
and
sub
inc
(bad)
cmp
sbb
inc
xor
dec
mov
imul
mov
cmp
cmp
test
cmp
and
and
mov
mov
mov
xor
cmp
and
xor
movs
jl
cdq
aad
nop
inc
(bad)
stc
jecxz
and
and
cmp
mov
jns
cld
cmp
clc
pop
test
not
sbb
pop
retf
lods
out
mov
fld
test
fnsave
sbb
pushf
cmp
mov
mov
xchg
or
mov
outs
mov
cli
retf
inc
cmp
mov
icebp
push
cmp
push
mov
jg
dec
pop
xchg
outs
cmp
out
jmp
sub
sub
sub
and
daa
xor
es
call
push
mov
cmp
or
mov
fs
add
lds
sti
cdq
inc
adc
int
mov
jmp
sbb
mov
pop
retf
sub
mov
ja
dec
movs
inc
sbb
xchg
mov
dec
jb
sub
retf
sub
aas
inc
cmps
popa
pop
fwait
jnp
neg
inc
ins
pop
mov
inc
lds
jp
popf
jnp
jb
shl
jle
cs
xlat
inc
les
aaa
inc
loopne
inc
and
mov
jp
cmp
pop
fdivr
xchg
mov
loope
cmp
imul
cmp
jno
fmul
leave
scas
mov
add
mov
push
pop
xor
adc
dec
ds
jge
aas
push
mov
sar
mov
push
xor
imul
dec
mov
mov
mov
inc
jae
pop
add
mov
call
add
inc
inc
loopne
inc
ficomp
movs
xchg
add
xlat
mov
les
cmp
frstor
mov
xchg
dec
add
retf
pop
loopne
out
cmp
call
inc
fmul
pop
mov
ffreep
call
inc
outs
lods
cwde
fisttp
fiadd
xor
fiadd
mov
ror
aam
push
idiv
push
xor
pop
mov
or
enter
xchg
movs
pop
nop
adc
adc
sub
inc
mov
sub
adc
es
(bad)
push
add
jl
nop
xchg
bound
inc
inc
fnsave
sar
or
out
cmp
pop
mov
inc
cmp
inc
outs
inc
cmp
jbe
inc
mov
jmp
(bad)
fld
inc
and
out
aam
aad
inc
inc
jns
js
inc
cmp
retf
(bad)
sub
repnz
cmp
dec
and
imul
gs
inc
mov
cmc
out
inc
data16
dec
lods
xchg
push
push
inc
dec
mov
inc
jmp
scas
mov
mov
out
mov
or
cld
xor
pop
test
arpl
stos
out
cmp
enter
pop
mov
sub
jge
(bad)
mov
cmp
fisttp
mov
fwait
lock
scas
lods
retf
cli
ret
cwde
xchg
and
loope
into
std
dec
cmps
loope
jno
or
into
fsubrp
push
retf
inc
clc
mov
xchg
sbb
cmp
mov
pmaxub
inc
sahf
cmp
(bad)
aas
mov
mov
dec
pop
dec
test
popa
es
inc
test
lods
repnz
ss
inc
rol
sub
aaa
sbb
ret
and
fsub
nop
inc
pop
and
jae
cwde
mov
dec
ins
push
adc
fimul
cmp
lds
sbb
dec
out
jmp
sub
iret
jl
dec
or
xor
leave
dec
adc
push
mov
pop
inc
mov
xor
loope
iret
push
jno
inc
pop
lock
pop
lahf
and
cmp
popf
mov
(bad)
mov
push
and
cmp
loope
cdq
cmp
pop
or
mov
cli
cmp
cs
(bad)
mov
(bad)
sub
mov
cmp
adc
jae
retf
inc
push
inc
scas
clc
mov
inc
test
xchg
aam
inc
sbb
add
out
xchg
sub
inc
mov
push
mov
test
pop
cwde
lods
int3
or
iret
ret
aaa
cmp
out
imul
test
adc
ins
stos
dec
iret
xchg
jl
stos
retf
loope
mov
inc
pop
dec
test
adc
inc
and
lock
dec
inc
sub
and
ins
inc
icebp
(bad)
sbb
scas
add
or
imul
pop
fisubr
cmp
test
aas
daa
aaa
inc
push
ja
mov
add
arpl
fadd
fwait
adc
fucomp
sub
inc
lods
or
cmps
cmps
lahf
mov
stos
retf
jbe
mov
js
in
out
cmp
pusha
cmp
mov
lea
pop
inc
ja
jno
xchg
xlat
mov
nop
dec
dec
int3
cmc
mov
inc
test
(bad)
int
xor
inc
test
adc
or
aam
inc
movs
into
inc
pop
mov
ins
repz
loop
adc
aas
sbb
inc
mov
xlat
test
add
or
sbb
cs
jae
stos
into
inc
retf
mov
outs
aad
sbb
sar
test
jo
inc
hlt
cli
dec
stc
adc
imul
jmp
cld
fnsave
inc
xor
retf
clc
fistp
sub
(bad)
and
movs
call
pop
rcl
imul
inc
jnp
std
pop
in
in
ja
dec
xor
int3
pop
or
inc
arpl
inc
or
cld
inc
popf
(bad)
sahf
inc
leave
std
popa
xchg
mov
aaa
xor
ins
sub
sbb
xor
mov
sub
mov
add
push
inc
ds
imul
cmp
iret
mov
sub
pop
mov
cmp
mov
int
(bad)
dec
fisubr
mov
pop
sbb
lock
inc
movs
cmp
iret
sbb
inc
aas
ror
dec
and
push
dec
push
jmpw
ret
cmp
xor
mov
fadd
add
xchg
inc
mov
and
add
call
ss
ins
stc
cmp
stos
in
xor
and
rcl
stos
dec
push
cmp
sbb
fsub
add
push
fldenv
mov
(bad)
xchg
inc
popf
inc
jb
xchg
sar
test
pop
add
inc
sub
mov
lahf
mov
ja
scas
xor
imul
sbb
ds
(bad)
dec
nop
jl
movs
push
xchg
sar
or
jno
fld
aad
in
xor
jne
jmp
test
sub
fcom
in
call
sub
push
in
popa
mov
enter
or
inc
movs
sahf
or
add
neg
sbb
push
pop
xor
shr
aad
inc
cmp
outs
cmp
push
lods
or
xor
push
mov
inc
mov
sub
inc
cld
inc
adc
cmp
dec
sbb
std
inc
stc
inc
lahf
mov
loopne
cmp
out
and
cmc
test
aas
fnclex
cmps
push
rcl
sub
xor
loopne
test
sbb
mov
les
rcl
xchg
stc
cdq
in
pop
sub
aad
arpl
and
jno
xor
in
pop
dec
ss
(bad)
dec
inc
jg
add
pop
push
cmp
add
mov
popa
scas
cld
push
int3
into
lds
jmp
pop
jno
into
sub
leave
dec
stos
pop
add
dec
jle
jne
repnz
xchg
push
mov
sbb
test
push
movs
cdq
pop
inc
mov
inc
loopne
add
pop
add
or
aam
dec
call
retf
dec
inc
popa
push
xchg
xchg
retf
cli
in
push
or
enter
stos
dec
pop
inc
mov
xor
icebp
adc
mov
test
call
mov
mov
cmp
fnstenv
stc
cli
push
mov
lahf
stc
ror
cmps
adc
arpl
mov
sbb
fadd
and
cmp
pop
cmps
cmp
jmp
lds
inc
inc
mov
cld
into
inc
test
jne
sbb
mov
out
das
cmp
mov
sub
jmp
xchg
jl
sub
ins
and
jnp
inc
mov
ss
cmp
pop
sbb
leave
sub
or
mov
jp
jmp
int
test
out
enter
xchg
jo
in
dec
aad
lds
add
cmp
outs
js
movs
in
cli
or
add
cli
lahf
pop
popa
push
push
rcr
mov
xchg
inc
or
ficomp
and
or
sahf
xchg
sbb
push
push
jno
jo
pop
cmp
cmp
int3
inc
aas
or
shl
lds
lods
xor
mov
and
mov
xor
pop
lock
cld
dec
sub
sub
xchg
lods
xchg
cmps
hlt
xchg
sbb
mov
inc
xor
adc
push
jo
mov
jl
pop
sbb
inc
mov
xlat
in
dec
inc
iret
pop
mov
test
push
add
ja
jmp
cdq
je
inc
pop
cmc
aaa
cmp
ins
sbb
dec
leave
(bad)
fsubr
inc
sub
shl
(bad)
rol
sbb
push
inc
pop
dec
fwait
cmp
and
in
ficomp
das
cmp
int3
mov
cmp
out
test
movs
xchg
sbb
push
xor
jp
jecxz
pop
inc
mov
or
cmp
jmp
aas
sub
shl
mov
push
bound
enter
aad
rcr
pause
inc
jns
cmp
adc
mov
jno
ja
retf
pop
jl
ins
and
add
xor
adc
mov
mov
jns
(bad)
sub
pop
jno
out
adc
jge
push
inc
push
xchg
ins
ret
xchg
int
cmp
mov
ins
fidiv
(bad)
cli
xchg
xchg
xchg
mov
iret
out
lds
lea
cmp
mov
mov
cmp
lock
idiv
mov
mov
arpl
stc
hlt
pop
sahf
mov
sbb
adc
rol
loopne
mov
dec
xchg
rcl
push
mov
xchg
out
dec
sbb
jmp
in
cmps
js
stc
rcl
sub
test
les
inc
mov
pop
adc
mov
(bad)
jmp
repnz
sub
dec
sub
mov
retf
xlat
(bad)
fmul
xor
fwait
cdq
xchg
xchg
pop
icebp
fs
inc
add
sbb
ret
fist
ss
int3
and
popf
pop
inc
fcmovb
pop
xor
xor
mov
add
test
pop
lea
and
bound
in
loop
and
sbb
xor
movs
xchg
mov
daa
(bad)
cmp
inc
mov
cwde
paddsb
sub
cld
jge
jle
add
sub
(bad)
pop
or
das
ret
lea
sbb
adc
jno
or
(bad)
popa
inc
cmp
fs
(bad)
mul
push
dec
pop
ds
ret
ds
gs
outs
xchg
xor
getsec
pop
xchg
mov
inc
jp
sbb
mov
imul
jne
mov
sar
call
ds
cld
cmp
xlat
dec
push
retf
push
lods
inc
icebp
xor
ret
loopne
data16
sub
inc
sbb
adc
lods
add
fsub
sbb
std
dec
(bad)
cdq
cmp
or
fdivr
add
push
cmp
and
pop
gs
mov
push
daa
push
dec
in
aas
sar
mov
test
fs
adc
lds
xor
add
test
mov
int3
es
jle
xchg
cmp
dec
out
stos
sub
push
not
repz
sti
push
lods
inc
nop
pusha
jp
inc
mov
into
inc
jmp
cld
cmp
retf
(bad)
daa
test
inc
stos
push
jl
and
imul
cmp
adc
int3
sar
mov
stos
jmp
mov
xchg
add
fiadd
and
mov
scas
sti
pushf
hlt
inc
sub
pop
mov
test
lds
bound
xchg
xchg
jo
add
shr
fld1
inc
mov
pop
neg
aad
out
push
dec
inc
jl
popa
add
sub
lods
cmps
aad
cmp
stc
mov
cmps
push
rol
dec
push
xchg
ss
lahf
sub
xor
inc
pushf
into
pop
add
inc
cmc
and
movs
inc
push
jnp
and
xor
mov
pop
movs
repnz
aas
mov
call
clc
sub
retf
lods
mov
inc
inc
addr16
jmp
ds
dec
inc
stos
cld
lods
ret
and
adc
xchg
cs
mov
inc
(bad)
cwde
mov
ss
stos
cmp
jae
push
push
or
adc
cmp
dec
jb
inc
movs
cld
fprem1
addr16
pop
test
jecxz
enter
out
mov
cmp
mov
mov
inc
cmp
in
xchg
cwde
inc
out
fld
leave
test
adc
inc
dec
cmp
retf
repz
inc
test
pop
cs
dec
aam
ins
popa
retf
inc
in
ror
cmps
push
cmp
ror
int
inc
js
scas
fsubr
dec
xor
loope
mov
inc
sbb
ds
loope
ja
inc
lods
scas
jbe
xor
dec
cmp
imul
mov
xchg
stos
cmp
clc
ins
add
xchg
or
xchg
xchg
pop
cmps
add
lds
in
mov
dec
push
repz
mov
lahf
xchg
mov
mov
adc
pop
retf
push
sbb
jno
aam
jno
jns
aad
arpl
inc
push
nop
cs
sub
test
and
jns
inc
fucom
daa
pop
adc
outs
sub
gs
sbb
mov
fld
or
arpl
xchg
sbb
jo
sar
or
fstp
es
mov
ret
jg
sub
fdiv
imul
nop
lods
xchg
jb
test
lods
out
or
lahf
inc
jns
sbb
push
jmp
push
shl
push
loopne
mov
sub
mov
mov
popa
in
xchg
dec
push
int3
fldenv
inc
dec
jno
jbe
jp
jns
mov
iret
or
loopne
lds
jl
inc
pop
inc
pusha
dec
pop
dec
aas
stos
jo
or
arpl
and
idiv
jne
dec
inc
aas
or
fmul
cmp
cs
popf
inc
shr
fld
jp
(bad)
jmp
pop
inc
fwait
push
ret
dec
outs
ss
imul
pop
sub
and
mov
lea
fdivr
mov
jge
xlat
xor
cmp
fldcw
sbb
mov
add
add
xchg
imul
movs
push
popa
and
cmp
lds
loope
mov
xor
cmp
out
pop
pop
ror
call
cli
pop
sub
fadd
mov
xchg
cld
test
mov
out
push
jg
mov
stos
mov
lods
cmp
cmp
xor
xor
iret
inc
pop
les
cmp
add
xchg
mov
cmp
scas
stos
int
mov
pop
daa
cmp
jge
lods
add
sub
adc
sbb
or
rol
and
jno
mov
or
xor
ja
arpl
mov
push
pusha
popa
(bad)
test
and
fld
xchg
idiv
mov
inc
std
mov
(bad)
jge
mov
sub
mov
or
outs
xchg
out
mov
mov
stos
stc
jns
mov
cmp
sub
and
cmp
adc
sahf
fldenv
test
in
dec
test
pop
hlt
movs
retf
mov
jecxz
mov
pop
sub
jmp
test
pop
jge
inc
xor
xchg
or
(bad)
jge
scas
dec
je
fs
cs
xor
sahf
jno
hlt
mov
cmp
cld
je
ja
mov
xchg
fsub
leave
sub
popa
cmp
cmp
fs
ret
aas
bound
push
cdq
ret
dec
pop
pop
dec
jns
out
fld
stos
add
xor
xchg
aad
xor
cmp
cmp
sar
jns
and
jne
sbb
(bad)
or
add
leave
aam
mov
mov
data16
lahf
ror
pop
xchg
ret
jge
aaa
pop
jo
jns
adc
xor
enter
hlt
int3
in
fisttp
fxch
(bad)
(bad)
fmul
in
adc
sahf
add
xchg
iret
mov
aad
out
nop
dec
test
dec
pop
cmp
sbb
push
cmp
xor
fnstsw
into
fistp
pop
or
add
sub
imul
add
mov
inc
movs
inc
inc
and
fdivr
push
stos
sar
out
dec
fbld
popf
mov
pop
jnp
psllq
jl
mov
mov
jmp
pop
(bad)
jmp
push
dec
push
les
add
sbb
pop
fucomp
inc
into
aaa
outs
repnz
sbb
fmul
cmp
cmps
cmp
mov
mov
int
pushf
mov
pop
sti
cmp
xchg
mov
push
mov
mov
or
cmp
add
lods
dec
(bad)
in
rol
dec
ret
sbb
imul
in
js
(bad)
mov
cmp
out
idiv
test
jno
das
popf
sbb
xchg
and
or
xor
or
sbb
js
sub
retf
bound
mov
lea
dec
fcom
in
dec
and
not
cmp
js
mov
add
sbb
xor
inc
add
shl
jae
sar
jns
push
and
cmp
pop
not
xchg
adc
mov
loope
jp
xchg
pop
push
push
pop
jge
jbe
pop
mov
shr
mov
xor
shl
addr16
mov
xor
lahf
ret
sub
add
pop
pop
cld
jge
aas
jno
mov
or
aad
sbb
js
lds
jmp
add
sar
int3
bound
add
sub
pop
loop
pop
dec
adc
daa
mov
mov
sbb
test
jmp
xchg
hlt
jmp
ret
or
adc
mov
xchg
imul
mov
cmp
cmp
dec
stos
sub
cld
jae
jmp
dec
sub
push
test
sub
sub
xchg
fistp
sub
jge
pop
inc
and
hlt
fnsave
in
inc
or
mov
dec
jge
fimul
repz
push
sbb
jno
push
mov
mov
dec
out
icebp
push
pop
push
inc
je
(bad)
inc
es
pop
call
cwde
fs
add
stos
dec
inc
cmps
inc
sbb
enter
imul
out
mov
add
sbb
or
fs
jns
movs
sub
xchg
push
push
jnp
std
sti
inc
push
gs
imul
out
adc
ins
cmp
das
pop
repz
rcl
sub
into
repnz
mov
dec
push
cmp
jmp
iret
call
mov
pusha
inc
mov
cmp
cmc
ins
cld
lods
inc
movs
inc
js
loop
sbb
ret
jns
test
jbe
into
inc
(bad)
fsubr
loop
inc
ins
sti
push
inc
inc
pop
(bad)
cli
call
cmp
cmp
movs
xor
test
outs
rcl
fiadd
mov
mov
mov
(bad)
jp
loope
dec
jmp
aam
mov
and
fild
ret
loop
cmp
adc
das
adc
cmp
mov
dec
xor
popa
sub
cld
js
pop
les
inc
out
add
lock
pop
jns
call
adc
(bad)
icebp
std
movsx
adc
cmp
push
mov
push
cld
ja
rcl
add
jno
mov
retf
or
lods
pop
daa
push
adc
ret
pop
js
jnp
sbb
leave
jb
or
div
fs
loopne
adc
outs
je
and
lods
imul
rol
add
sbb
jbe
mov
push
add
jb
jg
pop
stos
leave
sub
jge
mov
jecxz
mov
pop
pushf
imul
mov
scas
sti
jnp
fistp
push
inc
iret
(bad)
mov
jg
mov
jl
xchg
inc
jg
inc
pop
mov
test
jns
dec
adc
sbb
fdivr
stos
or
fisub
shl
into
xchg
outs
jae
(bad)
shl
jge
popf
out
sbb
loope
sbb
sub
outs
test
xchg
fimul
das
iret
cwde
and
(bad)
data16
mov
aas
sbb
pop
or
push
and
jecxz
rcr
lock
out
pop
std
pop
(bad)
cmp
loopne
xchg
mov
jmp
xchg
jmp
jne
pop
shr
lods
iret
fidivr
cmp
add
ret
mov
scas
fwait
or
jmp
data16
or
les
retf
jmp
xchg
outs
mov
retf
icebp
xchg
mov
push
sar
popf
sub
cld
sbb
xor
mov
pop
add
out
jg
xchg
or
pop
adc
xchg
call
adc
cmp
pop
out
pop
loope
xchg
pop
icebp
xor
inc
mov
popf
inc
mov
cmp
ror
inc
xchg
push
pop
(bad)
xor
inc
xor
mov
inc
rol
(bad)
pop
cli
and
std
push
inc
cmps
or
mov
dec
aad
inc
repz
xor
inc
jo
cli
test
sbb
fcmovu
fadd
shl
inc
sbb
jnp
mov
out
jb
dec
fdiv
xor
push
push
mov
ins
call
pop
or
push
std
(bad)
mov
sub
cmp
xchg
ins
int
add
sti
push
inc
outs
gs
jnp
ret
and
ds
fwait
addr16
cmp
rcl
mov
aad
dec
fdiv
adc
xchg
scas
test
mov
jp
(bad)
mov
inc
push
adc
stc
cld
jl
lds
fnstcw
xchg
cmc
cwde
jne
outs
int
inc
fild
add
jns
mov
dec
lss
xlat
loop
cmps
lods
sahf
or
leave
push
or
outs
cmp
add
mov
add
test
jnp
not
or
shr
push
jnp
lods
pop
inc
adc
xchg
test
inc
inc
mov
inc
xor
inc
adc
inc
fbld
xor
mov
mov
mov
mov
mov
retf
xchg
xchg
inc
pop
pop
and
inc
push
dec
push
mov
jo
(bad)
xchg
xor
inc
pushf
mov
sar
loopne
and
sub
inc
mov
and
pop
rcl
jp
pop
mov
sbb
and
mov
dec
xor
pop
enter
push
dec
mov
dec
test
fiadd
bnd
pusha
jbe
mov
paddb
mov
jmp
(bad)
inc
and
out
fisttp
aaa
rcl
ficomp
rcl
sub
sbb
popf
test
call
stc
sbb
out
lods
cmp
enter
in
sub
ins
jmp
lods
add
icebp
add
out
pushf
inc
add
push
or
out
sub
ds
xor
retf
push
test
das
hlt
cmps
in
mov
cmp
out
call
or
pusha
popa
in
ret
mov
mov
fmulp
ror
jmp
retf
mov
out
cmp
mov
sbb
stc
mov
pop
adc
cmp
ret
inc
inc
xlat
push
leave
ins
jp
test
arpl
(bad)
fwait
inc
icebp
mov
sbb
fisub
cmp
std
pop
mov
fistp
out
fcomp
or
pop
and
mov
stos
enter
cmp
outs
jns
fnstsw
arpl
fwait
leave
adc
test
jle
inc
push
cmp
mov
aam
mov
inc
shl
sbb
jnp
xlat
sbb
movs
and
inc
adc
or
out
stc
pop
es
js
xor
retf
pusha
es
pop
add
ret
cmp
lock
ins
aas
cdq
pop
test
mov
cmps
cmp
icebp
mov
hlt
aad
jle
xor
inc
sbb
adc
mov
shl
outs
loopne
mov
cmc
inc
cmp
rol
or
test
retf
mov
inc
add
cmps
inc
push
leave
inc
stc
inc
lds
call
into
js
arpl
push
sub
push
pop
sub
xchg
ja
cli
cmp
in
inc
inc
jp
inc
repz
push
enter
aas
xor
sub
inc
fdivr
clc
(bad)
inc
or
test
mov
pop
pop
mov
sbb
mov
push
and
test
(bad)
inc
sub
xlat
xor
inc
(bad)
jg
out
ret
inc
gs
pop
mov
inc
push
imul
push
mov
inc
lods
inc
sub
scas
inc
movs
fwait
mov
xor
mov
inc
ja
mov
add
mov
inc
xlat
pop
gs
push
sub
in
pop
jge
fnstsw
mov
les
sbb
call
(bad)
cli
cs
pusha
mov
sub
dec
and
out
cmp
mov
lods
inc
cmc
xor
movs
inc
inc
or
jp
or
or
(bad)
popf
mov
stos
jl
dec
jo
dec
wrmsr
aas
jge
jmp
retf
vpacksswb
jmp
pop
retf
daa
fadd
and
(bad)
hlt
out
sub
in
inc
mov
jb
std
inc
outs
or
adc
push
sbb
scas
inc
add
jg
in
rol
iret
push
(bad)
push
xor
pop
rcl
pusha
ss
mov
xlat
js
mov
mov
std
jl
ds
add
pop
call
xchg
mov
mov
dec
test
mov
(bad)
je
cs
add
jns
dec
not
(bad)
fild
mov
iret
lods
adc
jns
xor
cli
mov
ror
les
cmp
mov
cmp
fucomip
je
inc
fimul
pop
push
loopne
or
sbb
add
leave
inc
hlt
sbb
int
test
retf
jge
scas
pop
imul
les
iret
mov
cmp
loopne
cmc
es
push
xchg
xor
stc
sbb
enter
(bad)
fsub
cmp
stos
(bad)
mov
or
push
(bad)
repnz
xor
mov
push
lock
xor
push
mov
mov
sbb
jmp
call
inc
push
mov
mov
enter
call
cmp
retf
gs
pop
and
enter
ss
push
movs
add
inc
mov
inc
push
dec
adc
fwait
cmp
es
in
xor
adc
mov
or
push
push
cmp
push
or
inc
rcr
dec
imul
mov
xlat
(bad)
(bad)
push
test
fcmovnbe
inc
add
cmps
pop
movaps
adc
leave
(bad)
dec
inc
je
push
test
inc
mov
aad
fmul
inc
jo
cmps
pushf
or
jae
ja
jns
sar
jle
sub
adc
adc
or
scas
inc
inc
or
mov
sub
repnz
inc
mov
out
xchg
cmp
and
cld
push
adc
cmp
ins
mov
nop
push
xor
inc
aad
adc
(bad)
pop
xchg
or
ret
mov
enter
add
lds
inc
addr16
push
inc
ret
inc
mov
imul
js
mov
add
retf
dec
xchg
push
mov
jmp
sub
mov
out
cmps
inc
stos
dec
jp
fstp
or
movs
call
xor
push
pop
fbld
scas
icebp
enter
pop
inc
nop
inc
loopne
retf
in
inc
aam
rol
adc
ret
dec
xchg
push
(bad)
xor
ins
scas
ror
imul
and
push
pop
int
push
jge
jg
int
add
and
jmp
mov
or
fistp
enter
inc
xchg
push
mov
daa
inc
fdiv
inc
inc
and
mov
dec
jbe
mov
sbb
nop
push
out
inc
push
xchg
push
and
hlt
mov
pop
mov
push
dec
jo
inc
jmp
adc
ss
je
jns
jbe
jbe
push
inc
cmp
mov
jle
add
and
mov
call
pop
dec
pop
ficom
cmp
or
fcomp
out
sbb
lods
mov
daa
lods
stc
sub
add
adc
je
scas
call
les
push
mov
retf
mov
jbe
cmp
(bad)
mov
mov
mov
xor
mov
jne
jle
ds
xchg
cmp
jmp
push
stc
or
sbb
adc
jns
(bad)
xor
aaa
pop
add
je
xchg
sbb
and
fld
retf
mov
xchg
xor
xor
jmp
jns
and
dec
jo
pop
rol
ins
mov
mov
xor
lods
push
xor
xchg
xchg
cmp
inc
gs
pop
out
inc
mov
pop
push
sub
bound
push
jp
mov
push
cmp
loop
jne
mov
inc
or
mov
loopne
retf
push
cwde
sub
iret
dec
loopne
add
pop
lahf
jp
inc
aad
js
sti
add
dec
sti
xchg
loopne
or
xor
das
or
mov
and
mov
add
imul
ret
mov
popf
shr
cmp
cmps
call
xor
add
pusha
cmps
xchg
std
inc
cmp
pop
sahf
lods
cmp
hlt
jp
das
push
out
ffreep
pop
pop
xor
ret
repnz
mov
push
call
in
mov
add
mov
repnz
xor
pop
xor
jmp
jo
pop
loope
mov
int
inc
push
test
cmps
test
or
sahf
or
jnp
mov
es
loopne
or
fld
dec
cdq
inc
xor
jno
imul
loopne
mov
lock
les
fadd
sbb
sti
jns
xor
outs
jge
xchg
xor
scas
mov
pop
mov
arpl
iret
ret
cmps
sub
test
adc
jbe
retf
adc
es
cmp
cmp
xor
or
int
jmp
mov
repnz
ins
xor
cmp
xchg
sahf
scas
test
arpl
pop
not
dec
xor
mov
sub
add
jmp
inc
pop
cmps
lods
xchg
ds
xor
hlt
arpl
ja
mov
dec
js
mov
sub
or
push
in
aad
in
inc
jo
stos
sbb
adc
mov
pop
mov
fidivr
jo
fsubr
das
cmp
adc
or
shr
sub
test
add
mov
inc
push
rcr
call
sub
ror
ja
inc
cmp
jnp
ret
pushf
cmp
xchg
pop
xor
pop
lock
adc
or
inc
popa
(bad)
mov
and
loop
add
pop
inc
gs
xor
std
ss
mov
xor
xchg
sub
dec
iret
add
scas
inc
sbb
pop
sbb
mov
adc
push
sti
ret
push
js
jo
push
dec
and
nop
out
fst
mov
in
sbb
shl
(bad)
retf
inc
dec
push
and
push
mov
call
inc
jno
and
int3
(bad)
into
xchg
ins
cld
out
add
popa
gs
inc
xlat
inc
cs
int3
mov
(bad)
in
inc
dec
mov
xchg
je
inc
pop
adc
jne
test
mov
inc
cmp
shr
shl
lods
fist
daa
gs
inc
sub
aam
adc
or
add
mov
outs
mov
(bad)
loope
fild
xchg
test
and
outs
sti
sub
loope
(bad)
shr
mov
rcr
stos
dec
aaa
hlt
xor
inc
inc
xlat
lods
dec
mov
mov
test
and
jmp
cmp
enter
mov
pop
or
mov
xor
pusha
mov
imul
dec
add
mov
iret
cmp
fimul
xchg
inc
push
retf
das
cmps
jnp
mov
pop
lea
mov
in
icebp
leave
mov
popa
add
jns
xchg
sahf
pop
out
imul
(bad)
mov
cwde
cmp
jge
mov
jmp
xchg
stc
adc
test
icebp
jmp
dec
and
cmp
repnz
pop
inc
not
std
push
mov
mov
mov
or
inc
scas
hlt
out
cmc
loop
in
inc
out
in
jge
loopne
push
and
sbb
les
inc
jmp
movs
rcl
and
call
rol
daa
cmp
mov
inc
xor
inc
sub
popa
in
int
cli
add
aad
and
mov
sub
mov
inc
rdpmc
repz
imul
pop
inc
xchg
mov
lahf
cmps
xchg
mov
inc
push
cli
(bad)
jmp
dec
mov
rcr
mov
jmp
ins
push
cmp
popf
dec
inc
jo
pop
pushf
(bad)
je
jns
sbb
pop
enter
inc
jmp
scas
mov
aaa
cmp
sub
js
ins
cmp
in
out
inc
and
add
sub
stc
push
and
leave
clc
or
mov
stos
adc
add
sub
mov
inc
je
xor
int
jl
lock
sub
xlat
ss
(bad)
pop
nop
imul
adc
add
push
pop
popf
lahf
nop
or
mov
daa
cmp
mov
mov
or
adc
mov
test
sti
inc
add
jmp
xchg
push
mov
mov
int
xor
ror
fs
push
cmp
xchg
mov
sub
call
push
mov
retf
xchg
pop
dec
jnp
mov
push
nop
cmovo
mov
adc
fdiv
mov
mov
loopne
mov
js
xchg
xchg
cmp
loopne
sbb
dec
xlat
adc
xchg
cdq
inc
push
outs
push
mov
mov
call
xor
mov
mov
rol
push
add
retf
dec
and
mov
xchg
and
adc
add
inc
sub
inc
fadd
(bad)
call
into
stc
dec
inc
jb
inc
cs
ja
and
mov
push
out
xor
(bad)
mov
push
sbb
fild
sub
sti
cmp
dec
lea
push
outs
jne
outs
jg
inc
sub
xchg
xlat
loopne
dec
(bad)
cmp
push
fsub
push
pop
sbb
and
dec
rcl
mov
and
and
mov
test
movs
cs
cmp
mov
xor
mov
fld
mov
xor
psubusw
xor
popa
cmp
push
and
hlt
cmp
dec
imul
retf
push
inc
pop
loopne
retf
push
jns
out
lds
mov
cmp
xchg
(bad)
(bad)
xor
dec
mov
fs
ds
lea
adc
dec
mov
ss
aam
icebp
je
mov
jno
cwde
ja
or
lds
xor
div
ror
push
lock
outs
loope
pop
xlat
add
jae
clc
cmp
add
aas
lds
rcl
pop
mov
add
fidivr
xchg
or
pushf
pop
out
mov
sub
sub
fstp
push
jnp
mov
jno
cwde
(bad)
cmp
or
(bad)
je
jo
push
push
jecxz
mov
enter
cmps
pop
test
push
ret
jecxz
pop
jge
jbe
sub
fisubr
mov
mov
repz
xor
xchg
out
movs
adc
xor
leave
jl
arpl
clc
scas
cmp
inc
push
sbb
in
lock
iret
adc
push
add
mov
into
ja
jmp
cs
icebp
out
inc
or
or
fnstcw
push
adc
fmul
stos
add
jl
jns
popf
or
nop
jmp
mov
je
bound
mov
pushf
jmp
les
repz
add
fldlg2
pop
sbb
or
xor
sbb
rol
ror
adc
mov
ds
pop
adc
shl
outs
xchg
cmps
rol
add
cmp
ss
push
xor
push
mov
cmp
jae
pusha
fcom
mov
bound
mov
and
jno
scas
lods
sub
aad
cmp
int
mov
iret
push
idiv
repz
jle
mov
sub
mov
jl
sub
adc
sbb
xor
sbb
cmp
imul
xor
fwait
gs
jge
dec
or
mov
fld
inc
lods
rcl
fsub
rcr
dec
nop
jns
test
rol
adc
je
cmp
popf
cmp
call
fs
inc
js
or
daa
xor
test
mov
lods
dec
dec
cmp
push
push
lock
addr16
jl
out
bound
hlt
mov
or
movs
or
xchg
dec
movs
loopne
in
and
pusha
in
inc
pop
outs
mov
mov
mov
jns
aaa
jnp
dec
jge
mov
inc
aas
(bad)
jbe
call
jge
adc
push
je
sbb
fcomp
cmps
jle
pop
push
lea
add
pop
jb
cdq
fnstcw
jmp
pop
jmp
inc
stc
xchg
cmp
or
popa
pop
(bad)
mov
je
mov
cmp
sub
hlt
and
or
test
cmp
retf
inc
rcr
add
adc
xor
jle
pop
mov
out
sub
scas
sub
rcl
mov
mov
jno
inc
dec
cdq
(bad)
xchg
fadd
jg
jne
and
xor
int
es
jno
mov
mov
nop
add
retf
push
sub
and
in
sub
mov
js
jl
fld
push
in
cmp
cmp
jns
mov
(bad)
jno
jmp
sahf
inc
push
mov
jb
and
jb
inc
inc
repz
mov
(bad)
mov
ja
(bad)
push
stos
(bad)
mov
fadd
stos
xchg
js
jns
or
out
retf
adc
pop
cwde
pop
scas
shl
xchg
jae
xchg
test
cs
xor
push
fwait
push
mov
jno
sti
aas
jle
out
mov
push
fidivr
mov
pushf
sub
ds
jge
int
xchg
mov
sbb
sbb
push
fadd
mov
xor
mov
out
mov
inc
cmp
loope
out
test
test
jno
scas
(bad)
inc
pop
cwde
xor
cmp
mov
inc
push
push
inc
leave
lods
dec
or
movs
or
fxch
outs
cli
aas
push
push
cmp
mov
cli
cmps
add
pop
clc
adc
mov
rcl
push
aas
arpl
add
cld
cmp
sub
push
out
lock
and
jbe
push
iret
push
cmp
mov
adc
cmp
jp
fmul
inc
xor
pop
inc
shl
adc
cmp
aad
cmp
or
lahf
cli
push
inc
mov
fldenv
push
or
mov
adc
cmp
mov
push
jnp
outs
pop
push
dec
sbb
inc
mov
xchg
inc
xchg
je
clc
add
mov
sbb
mov
mov
das
push
mov
int
xchg
lock
sbb
cmp
mov
mov
sub
sub
push
in
aaa
je
inc
rol
jge
out
out
cmp
jns
sbb
xor
xchg
das
les
push
add
jo
das
xchg
fld1
jbe
mov
inc
cmp
xor
xchg
jle
lea
out
xchg
inc
(bad)
ffree
aad
je
rol
and
repnz
loopne
inc
jg
and
pop
das
movs
add
inc
add
imul
int
jmp
popf
(bad)
push
push
shr
inc
sbb
push
sub
xchg
xchg
inc
aas
or
enter
int
add
inc
cld
mov
inc
sbb
fistp
pop
dec
out
imul
sub
and
fsub
adc
sub
inc
xchg
inc
mov
ins
and
dec
mov
push
movaps
dec
imul
sti
and
jno
jns
stos
xchg
sub
movs
pushf
std
jl
aam
sub
fcomp
pop
cmps
xor
arpl
(bad)
cmp
lods
cwde
iret
aas
mov
and
xlat
or
push
push
sar
dec
lock
mov
mov
outs
mov
cld
sbb
cmp
mov
or
mov
in
add
fild
lahf
jo
jno
inc
cwde
mov
push
mov
and
and
movs
(bad)
(bad)
arpl
sbb
add
adc
retf
mov
(bad)
stos
(bad)
stc
imul
imul
test
pop
jmp
inc
pushf
mov
js
icebp
inc
xor
test
xlat
inc
ror
mov
xchg
push
push
ins
inc
pop
adc
pop
inc
xor
mov
bound
aas
push
cmp
push
or
or
outs
test
out
in
inc
mov
int3
clc
inc
test
dec
pop
xor
xor
inc
cmp
inc
inc
fidiv
outs
or
push
test
mov
call
cld
aaa
ss
xchg
mov
inc
jb
fs
fld
adc
push
ja
jae
idiv
or
je
jno
mov
push
lods
rcr
out
mov
inc
cmp
popf
jnp
jno
out
xlat
jl
pop
popf
jns
cmc
jo
xor
mov
int
sbb
add
arpl
add
and
mov
cmp
sub
stos
(bad)
cs
push
shl
das
icebp
cld
stos
in
aad
pop
sub
mov
cmp
jns
test
outs
inc
fsub
xor
mov
cmps
and
dec
sti
xchg
jmp
aad
dec
mov
data16
je
es
stc
push
(bad)
js
xor
out
cmp
push
pop
jne
dec
sbb
mov
pusha
dec
mov
fdivr
mov
xor
scas
sbb
push
cmp
mov
dec
and
adc
mov
xchg
shr
das
aas
or
or
inc
xor
push
dec
scas
in
loop
fnstcw
scas
bound
cmp
jno
pop
xor
xchg
pop
push
retf
jmp
jne
(bad)
pushf
sahf
mov
mov
outs
into
dec
pop
retf
js
aas
(bad)
iret
loop
cmp
scas
icebp
xchg
inc
addr16
rol
mov
mov
jo
mov
out
cmp
retf
mov
pop
leave
push
xor
fisubr
fld
ds
inc
stc
stos
mov
popa
mov
and
sub
dec
xor
aas
dec
pusha
jnp
mov
xchg
cmps
adc
ss
dec
jo
xchg
push
pop
outs
(bad)
cmc
dec
mov
aas
fdivr
xlat
ficomp
add
mov
inc
mov
icebp
ret
stc
call
mov
ins
mov
push
xchg
jmp
cmp
mov
xor
in
cli
jmp
xchg
hlt
ret
add
es
xor
mov
js
jo
mov
(bad)
and
xor
push
rcl
sbb
fnstcw
cld
sub
ret
in
and
daa
push
pop
inc
pushf
lods
xchg
iretw
mov
les
aad
out
push
in
adc
into
fnsave
(bad)
aam
test
inc
sbb
in
dec
popa
push
(bad)
lahf
movs
cmp
xchg
gs
cmps
and
test
mov
dec
ja
dec
cwde
mov
(bad)
cmc
shl
adc
aaa
adc
dec
mov
les
js
fcmove
ror
or
enter
cmp
mov
cmps
xchg
jne
jo
inc
pop
or
mov
test
fsubr
(bad)
clc
cmp
sbb
or
inc
mov
faddp
mov
adc
aam
inc
cmp
fisttp
fdivrp
(bad)
jge
outs
push
cmp
push
(bad)
hlt
or
mov
aam
dec
repnz
inc
test
int3
fucomip
sbb
scas
xchg
push
cmp
iret
jnp
out
mov
repnz
cmp
out
dec
xor
lgs
jnp
sbb
test
add
sbb
fcom
mov
mov
pusha
xchg
pop
xchg
rcl
rol
movs
jge
(bad)
shl
sar
or
inc
stc
add
lods
out
lock
or
cmp
add
in
fwait
jns
ret
push
sbb
inc
push
enter
aad
cmc
loope
call
push
les
adc
into
jge
out
ficomp
lea
addr16
or
inc
sahf
nop
jle
out
ins
lock
xchg
rol
arpl
scas
mov
xchg
and
movs
inc
js
xlat
shl
or
cs
aam
push
aaa
fld
daa
cmc
bound
ror
mov
inc
xlat
test
lds
fidiv
pop
cmp
and
push
sbb
push
test
and
fwait
inc
sbb
inc
jb
and
rcr
fadd
push
leave
cli
pop
push
inc
fucomp
inc
pop
je
fnstsw
dec
inc
dec
fistp
in
outs
cmp
push
mov
or
jge
dec
adc
fld
retf
jns
jle
repnz
and
ins
sub
push
sbb
rcl
ss
dec
adc
(bad)
ins
mov
imul
and
and
shr
data16
xor
iret
rcl
push
(bad)
mov
into
sub
popa
xchg
sar
ds
jl
outs
push
mov
mov
inc
cmp
les
stc
(bad)
aad
dec
xor
xchg
jmp
add
aas
test
jno
push
cdq
rcr
cmp
stc
sti
fbstp
ds
add
and
xchg
lock
test
lea
shr
cmp
mov
lock
xchg
xor
iret
inc
js
sbb
xor
ds
pop
xchg
out
test
cmp
jb
mov
inc
aaa
pop
fst
rcl
mov
outs
mov
(bad)
xchg
jg
les
add
stc
rol
outs
xor
mov
adc
cmp
dec
push
ret
out
or
nop
shr
mov
daa
pop
imul
jecxz
fadd
push
fild
dec
mov
mov
cs
jae
jge
loop
shl
dec
dec
mov
inc
lods
or
hlt
dec
lahf
outs
xchg
and
xor
xor
or
jno
cwde
pusha
out
cmp
mov
cmp
jmp
jbe
pop
pop
ror
movs
repz
jmp
xchg
mov
jno
in
aad
jmp
mov
push
adc
cdq
ret
sar
loopne
mov
sahf
lods
test
bound
sub
mov
cmp
je
in
cwde
out
jmp
ret
fbld
inc
cmps
pop
stc
mov
jl
jns
(bad)
sbb
fadd
in
loop
sahf
sub
repz
fs
or
fs
mov
push
icebp
inc
stos
scas
je
(bad)
out
cmp
fdivr
dec
inc
add
sar
cmp
mov
fld
enter
inc
fstp
and
data16
mov
test
pusha
fadd
aam
fld
fmulp
out
loopne
into
rcl
sbb
in
sbb
cwde
je
bswap
imul
inc
jae
fsub
cmp
sar
(bad)
jbe
addr16
jmp
stos
mov
jmp
js
xchg
push
and
mov
aas
mov
adc
call
pop
mov
xor
clc
mov
mov
adc
mov
rol
push
js
xor
popf
push
test
mov
enter
sub
test
push
rcr
fst
add
jg
xor
aas
imul
jge
cmc
pusha
dec
fdivr
es
mov
or
leave
cmp
and
not
jl
leave
xor
or
xchg
out
jge
fild
fcmovbe
(bad)
push
add
mov
lahf
pusha
cli
sub
stos
test
icebp
cmp
js
sbb
xor
cmp
pop
jp
neg
push
inc
gs
and
shr
ins
cmp
(bad)
push
out
test
xlat
call
movs
sbb
and
cmp
push
push
bound
sbb
cmp
retf
stos
xchg
push
mov
or
xor
stos
cwde
inc
cmp
inc
sub
or
loope
ss
dec
inc
pop
adc
add
fiadd
jbe
inc
mov
sti
sahf
fdivr
lock
cmp
mov
cwde
stos
push
inc
pop
mov
add
out
jle
pop
xor
mov
mov
addr16
pop
dec
jp
push
xchg
mov
dec
xor
jb
test
clc
lock
jae
xchg
adc
cs
ficomp
and
ror
xchg
mov
or
jge
stos
inc
mov
xor
sbb
mov
aam
jno
aaa
movs
sar
cmps
cmp
jns
inc
xchg
inc
mov
add
pop
imul
mov
inc
adc
(bad)
shl
push
xor
xor
nop
pop
ds
mov
addr16
jno
jns
ret
aam
iret
sbb
push
call
into
stc
sbb
mov
mov
test
bswap
in
mov
sbb
and
pop
push
push
enter
rol
pop
xor
mov
mov
xchg
cmp
or
push
mov
fadd
or
jno
or
cmps
dec
mov
inc
mov
cld
out
pop
aas
pop
add
gs
jno
jne
push
lock
or
jecxz
jbe
jle
cmp
dec
test
adc
jmp
push
add
jecxz
loope
(bad)
fucomp
test
cmp
cmps
sar
xor
mov
xchg
cli
cmp
xor
adc
jns
mov
sbb
cmp
xchg
xor
xchg
sbb
es
stos
adc
aam
fwait
sub
adc
cmp
xor
mov
sbb
leave
or
ins
inc
pop
mov
mov
cmp
mov
pop
scas
mov
test
dec
push
adc
cmp
(bad)
push
mov
dec
into
push
inc
clc
mov
in
les
inc
movs
xchg
cmps
mov
sub
adc
cld
add
push
pop
scas
shr
mov
fld
and
mov
lods
inc
cmp
loope
inc
sub
fnstenv
(bad)
not
and
mov
inc
xchg
inc
mov
and
xchg
mov
sbb
or
sub
or
mov
ja
test
pop
inc
mov
lea
mov
std
idiv
(bad)
fld
inc
test
adc
in
inc
stos
inc
test
inc
(bad)
cmp
cmp
dec
(bad)
and
inc
cmp
in
pop
sbb
cmp
mov
pop
int
call
sub
movs
nop
and
gs
call
(bad)
clc
fsub
enter
lods
out
arpl
cmp
sbb
mov
dec
xor
stos
stos
ret
xor
lea
xchg
mov
cmovo
out
sti
leave
jns
stos
inc
dec
jle
and
inc
jmp
push
rcl
stc
sub
leave
ficom
jl
mov
sub
aas
push
xchg
scas
cmp
aam
mov
mov
cmp
in
icebp
push
sub
outs
fsubr
cmp
mov
inc
aaa
cmp
addr16
mov
push
sbb
loopne
out
out
jb
jno
jnp
ja
and
jmp
int3
nop
pop
xchg
rcl
retf
(bad)
aad
popa
inc
stos
and
cmp
and
jno
arpl
out
call
mul
xchg
(bad)
xchg
ds
ss
in
cmp
cmps
aam
out
pop
push
ins
jp
mov
xchg
in
pop
pop
(bad)
cmps
les
mov
pop
sti
sbb
cmps
lods
dec
lds
jne
jmp
xor
movs
push
aad
sub
inc
xor
cmp
ins
inc
xor
lods
sub
ret
dec
fst
inc
and
loop
mov
test
inc
dec
scas
push
jmp
mov
ins
stos
mov
jl
bound
fimul
dec
xor
enter
int3
cmp
cli
mov
repnz
dec
popa
inc
stos
sub
push
es
mov
sub
lock
add
mov
iret
retf
cld
jns
ja
lds
xchg
xor
cmp
xlat
out
movs
cmp
mov
add
mov
pop
clc
outs
js
in
jge
cmp
mov
bound
pop
mov
test
push
inc
jno
scas
add
cli
mov
sar
mov
pop
ror
(bad)
fidivr
mov
sub
cmps
cdq
cmp
jl
cmp
scas
sub
jnp
dec
and
or
in
cmp
inc
inc
cmps
mov
add
inc
add
stos
fdivr
mov
dec
addr16
movs
sbb
cmp
mov
inc
dec
add
inc
jmp
cmp
in
inc
into
push
lods
packuswb
inc
and
shl
leave
push
cmp
pop
es
push
push
fisubr
(bad)
sub
fcomip
xchg
js
lods
test
or
rcl
in
cmp
rol
cmp
inc
std
adc
arpl
(bad)
mov
in
lock
iret
cmp
sub
push
cmp
ror
and
(bad)
aas
mov
jp
popf
inc
dec
jb
mov
sub
jecxz
out
pop
xor
push
dec
sti
add
and
cmp
sub
(bad)
jo
and
out
ret
test
pusha
fimul
inc
adc
cli
sar
div
pop
fwait
inc
inc
push
cmp
inc
in
sar
cmps
sbb
mov
adc
neg
lahf
mov
out
addr16
fild
mov
das
repz
adc
in
cmps
retf
or
std
adc
pop
ror
imul
scas
xlat
cmp
sub
inc
inc
ja
cwde
movs
cmp
daa
dec
push
scas
jmp
pop
push
sub
dec
jbe
(bad)
pushw
or
aas
movs
push
movs
fild
test
xchg
(bad)
repz
out
aam
lahf
dec
cmc
inc
xchg
cmps
loope
inc
inc
add
dec
(bad)
push
retf
inc
leave
and
aad
and
mov
push
jno
inc
inc
shl
cli
lock
arpl
xor
js
test
cmp
pushf
sub
dec
inc
sub
arpl
pop
mov
inc
fadd
mov
and
xor
data16
bound
(bad)
xor
sahf
ds
or
nop
ins
cmp
test
dec
cmp
popa
or
and
cmps
mov
dec
cmps
inc
stc
and
sub
sahf
dec
es
test
in
lds
je
retf
dec
or
push
cmc
imul
jl
addr16
or
jae
and
nop
inc
dec
push
add
lea
push
sbb
dec
cmps
adc
data16
jmp
in
or
call
stos
scas
daa
dec
shl
pusha
lods
sahf
push
and
dec
pop
aas
push
gs
jns
jmp
out
sub
cmp
shr
xlat
sub
or
stc
lock
ja
inc
clc
fld
jg
ins
cld
cmp
popf
jecxz
mov
dec
cli
sbb
arpl
mov
xor
mov
or
in
sar
sti
mov
mov
test
dec
sub
and
inc
mov
adc
dec
mov
pop
adc
and
and
dec
push
cmp
popa
loope
jnp
and
jo
fnsave
mov
stc
or
inc
loopne
inc
jmp
ret
cmp
fldenv
jns
xor
in
xor
dec
adc
adc
div
cmp
mov
inc
mov
test
inc
repnz
daa
dec
call
pop
dec
in
idiv
aas
repz
imul
retf
jae
(bad)
cmp
dec
loope
clc
in
cld
in
fdiv
and
mov
lods
sbb
xchg
xor
ja
cli
mul
in
aas
in
mov
sub
ins
mov
mov
inc
pop
in
push
shr
cmp
daa
jo
loopne
xor
inc
outs
in
mov
add
or
fld
fnstenv
shl
inc
inc
arpl
daa
aaa
idiv
jg
cmp
jmp
scas
hlt
inc
js
arpl
dec
std
dec
or
adc
test
sar
test
inc
ds
cmp
scas
cmc
jno
fs
clc
dec
cmp
dec
out
ins
adc
inc
inc
and
xor
cmp
stos
clc
je
jne
inc
repz
stc
cmp
push
jo
pop
imul
hlt
fsub
mov
stos
icebp
jne
push
cli
dec
loop
imul
icebp
std
aaa
cmc
frstor
inc
mov
lods
bnd
ja
inc
cmc
cmp
push
jecxz
push
pop
pusha
dec
lock
aas
neg
cmps
sub
mov
and
ret
inc
repz
cld
dec
add
fsubrp
mov
dec
aas
inc
push
fwait
mov
jg
and
ror
repnz
sti
dec
pop
call
test
and
dec
jl
imul
leave
adc
pop
inc
sub
aad
icebp
inc
cli
dec
(bad)
push
cmps
fsubr
cmps
out
dec
pop
inc
push
aas
dec
jo
cdq
mov
xlat
pop
inc
es
mov
stc
dec
std
mov
cmps
in
call
outs
pop
mov
inc
xchg
mov
shl
inc
add
push
movs
fcomp
movs
in
push
pop
inc
dec
rol
lahf
mov
sar
(bad)
test
sti
or
fldenv
sbb
xor
or
rcr
sub
ret
js
cmc
inc
(bad)
cmp
push
mov
loopne
dec
dec
ds
ins
adc
mov
pop
int3
or
mov
inc
es
ret
ret
inc
inc
std
dec
stc
push
mov
loopne
inc
dec
ds
imul
(bad)
out
retf
or
mov
out
pop
jo
lods
jecxz
jne
inc
sahf
mov
mov
ins
inc
cmp
pop
pushf
inc
sbb
lock
inc
jno
inc
sub
scas
in
inc
(bad)
stos
xchg
inc
and
test
or
adc
js
stos
pop
push
inc
lds
sahf
mov
movs
out
in
inc
leave
pushf
inc
jnp
pop
mov
xchg
inc
shl
mov
push
mov
inc
jnp
pop
lods
pop
xchg
inc
shl
mov
gs
jmp
stos
loope
inc
sbb
out
ja
inc
jno
inc
sub
scas
pop
cmps
inc
(bad)
stos
xchg
inc
inc
push
inc
sar
xchg
loopne
mov
jbe
add
stc
dec
push
inc
push
push
sub
hlt
inc
inc
ffree
aam
inc
jecxz
mov
xlat
pop
loope
in
inc
mov
sbb
addr16
scas
les
add
add
mov
mov
bound
mov
dec
bound
xchg
aas
and
shl
lods
add
aas
mov
pop
mov
dec
outs
mov
aaa
arpl
hlt
retf
aaa
push
pop
inc
test
cmp
inc
leave
mov
mov
mov
adc
stc
dec
ds
push
scas
xchg
push
and
inc
inc
mov
mov
inc
rcl
jp
xor
push
aas
sbb
inc
into
pop
mov
mov
mov
push
cmp
mov
mov
jbe
inc
dec
imul
inc
inc
cs
inc
aas
retf
aas
dec
neg
pop
loop
push
int
inc
jnp
push
mov
pop
pop
out
sub
sar
cmp
(bad)
push
in
and
fmulp
sub
addr16
iret
imul
fsubr
push
push
ds
lock
push
retf
dec
das
std
inc
mov
sbb
inc
push
xor
dec
loopne
or
sub
retf
push
aas
shl
dec
aas
inc
scas
pop
fnsave
sbb
jl
fnstsw
dec
push
xchg
cmp
adc
icebp
dec
push
test
das
inc
addr16
ins
adc
dec
stc
inc
jmp
xchg
aas
jmp
mov
popf
xchg
or
fcmovnb
and
cs
aaa
xchg
fidivr
pop
mov
mov
aas
inc
hlt
push
rcl
inc
mov
lea
movs
jecxz
dec
sbb
inc
repnz
stos
loopne
loop
ds
sbb
ds
add
inc
call
sub
es
aaa
mov
inc
das
(bad)
mov
sbb
xor
sbb
jbe
inc
inc
out
inc
shl
dec
test
sbb
out
and
ja
or
sti
in
jl
fstp
ret
sar
xor
enter
dec
clc
aad
push
dec
shl
xor
iret
mov
inc
rcr
cli
inc
cs
out
and
inc
rcl
into
fadd
pop
stc
inc
(bad)
movs
inc
pushf
inc
jle
pop
dec
inc
and
movs
scas
int
inc
clc
dec
cmp
(bad)
lods
inc
dec
inc
mov
add
(bad)
or
lods
das
inc
rcl
push
dec
int3
or
jne
inc
push
aaa
fs
les
pop
int
inc
fstp
sbb
sbb
rol
aaa
sbb
inc
movs
clc
cmp
gs
mov
or
hlt
je
neg
mov
movs
rol
dec
retf
retf
inc
div
inc
sub
push
push
shl
pushf
dec
adc
and
cmp
inc
mov
fadd
push
dec
xor
ja
mov
inc
mov
pop
cmp
cs
inc
not
ins
inc
inc
pop
leave
hlt
rcl
inc
test
hlt
inc
pop
std
pop
or
dec
addr16
mov
xchg
xor
iret
inc
jns
mov
or
pop
add
sbb
jb
outs
out
stos
jecxz
pop
jmp
shl
cmp
sbb
fcomp
clc
xchg
ror
sub
js
inc
movs
inc
arpl
stos
push
inc
push
inc
or
retf
inc
icebp
xchg
fild
hlt
rol
inc
mov
int
inc
pop
inc
push
out
push
jmp
and
fcom
shl
out
pop
or
outs
fpatan
cld
inc
and
out
push
hlt
cmps
inc
sub
and
push
push
pop
push
lods
xchg
push
and
sbb
into
int
clc
inc
cmps
movs
inc
inc
pushf
ss
into
add
xchg
and
aas
adc
leave
inc
push
fcmovbe
pushf
repnz
neg
dec
icebp
std
fistp
aaa
std
jmp
scas
add
add
pop
mov
xchg
adc
loope
mov
add
inc
rcl
or
fist
in
lock
es
inc
push
mov
push
xor
pop
out
or
imul
out
out
(bad)
aaa
mov
in
sub
xchg
sbb
sbb
pop
mov
sub
aas
inc
ds
(bad)
(bad)
sub
inc
in
lea
jns
mov
inc
aaa
shr
mov
adc
es
mov
hlt
add
lods
test
dec
dec
push
cmp
arpl
cmp
add
ret
fst
ror
cdq
add
jge
xchg
sbb
lds
pop
dec
imul
iret
ds
sub
(bad)
loopne
les
in
jmp
jl
repnz
rcr
ret
xlat
inc
call
xor
(bad)
mov
xchg
sahf
cmp
aas
cmp
mov
inc
outs
adc
inc
mov
gs
inc
hlt
inc
shl
fcomi
pop
inc
jb
mov
jg
aam
jo
inc
inc
stos
shr
push
inc
aaa
xchg
jl
push
pop
inc
jl
div
pop
stos
fsubr
mov
mov
inc
cmp
dec
cmc
dec
js
push
test
js
dec
scas
sti
cs
dec
retf
aad
hlt
mov
push
xor
jge
iret
fnstenv
out
jne
(bad)
in
add
and
aad
ds
push
jbe
daa
ss
sbb
mov
pop
pop
int
xor
pop
data16
inc
pop
dec
inc
xchg
mov
in
inc
aaa
iret
rol
cs
lods
jl
in
enter
jg
movs
dec
rcr
jl
mov
into
pop
(bad)
mov
mov
sbb
into
add
les
inc
repz
xchg
mov
push
cwde
jnp
outs
lods
inc
add
inc
rol
inc
popf
shl
sub
mov
xor
dec
mov
pop
push
dec
inc
js
jb
inc
fadd
aas
(bad)
fs
mov
mov
sbb
inc
inc
push
pop
inc
div
inc
cli
sbb
pop
pop
pop
inc
jb
js
mov
jl
inc
push
stos
aaa
inc
dec
push
inc
test
inc
inc
push
test
test
cmp
dec
push
repz
xchg
jecxz
ins
imul
dec
jbe
neg
inc
or
xchg
bound
cmc
inc
outs
inc
fdivp
inc
into
and
cmp
cmps
ds
lock
aas
inc
xchg
das
lock
cs
cmp
icebp
repnz
inc
out
ds
popf
mov
lods
aaa
sahf
rol
mov
inc
jno
inc
pop
das
push
mov
aas
and
inc
(bad)
test
(bad)
or
dec
fs
js
fldcw
lds
mov
rol
fsub
inc
outs
lock
inc
inc
das
inc
stc
das
stos
loope
or
and
xlat
sti
lock
inc
data16
inc
bound
inc
imul
fs
icebp
scas
and
sahf
mov
jl
test
sub
dec
cmp
call
dec
outs
cmovo
nop
xchg
test
or
dec
leave
and
pop
inc
xor
hlt
xchg
inc
test
jb
stos
inc
das
pop
or
in
enter
lods
inc
mov
lods
shl
and
inc
pop
inc
sub
inc
dec
inc
and
xchg
pop
inc
movs
sbb
int
inc
mov
sbb
inc
pcmpgtw
add
js
inc
ds
std
xor
fsubr
inc
inc
retf
xor
push
xchg
dec
rol
(bad)
cmp
jae
sub
add
pop
inc
cmp
mov
out
into
mov
adc
inc
push
out
cmps
iret
cs
daa
dec
mov
xor
rol
cmp
pusha
adc
das
hlt
lahf
xor
fstp
out
rcl
xor
push
xchg
mov
lea
fcomp
pop
popf
inc
inc
mov
int3
dec
inc
jl
into
into
mov
inc
aaa
stos
rol
mov
inc
jne
ret
sub
cmp
ds
xor
push
cwde
sub
int3
ds
cmp
cs
and
mov
adc
mov
repnz
dec
das
inc
jns
add
in
movs
push
sbb
outs
inc
pop
out
xchg
push
jecxz
jmp
neg
xor
jne
in
mov
inc
push
xor
jl
push
sbb
iret
pushf
das
outs
or
std
and
jmp
sub
xor
cmps
sbb
pop
mov
mov
cmp
and
cmp
bnd
fnstsw
sbb
inc
adc
xchg
add
loopne
(bad)
mov
xchg
leave
adc
imul
cs
imul
adc
call
cs
loope
mov
lea
pop
inc
inc
xchg
inc
mov
inc
dec
jl
sbb
push
inc
sbb
icebp
inc
lods
stos
inc
shr
das
dec
sbb
xchg
sti
inc
inc
icebp
out
aaa
inc
push
dec
shl
xor
mov
(bad)
ins
into
inc
bound
xor
pop
inc
adc
inc
sbb
inc
scas
inc
fnstsw
pop
push
dec
sbb
xchg
add
pop
pop
inc
aam
inc
inc
out
inc
dec
test
aam
inc
aaa
(bad)
fcom
outs
pop
popa
dec
inc
pop
das
or
adc
pop
test
daa
je
xchg
jo
xor
cdq
fwait
mov
mov
xchg
cld
sub
xor
push
sahf
inc
push
mov
xor
pop
inc
test
inc
(bad)
stos
inc
into
inc
mov
jg
rcr
sub
xchg
fs
repz
gs
or
push
int3
mov
stos
push
test
push
lock
aas
pop
xor
ret
retf
icebp
adc
sbb
dec
mov
inc
and
dec
sbb
sbb
xchg
mov
xchg
mov
lea
rcl
mov
pop
in
inc
iret
pop
push
and
in
aas
int
cmp
inc
inc
ins
cmps
mov
repnz
sbb
mov
fsubrp
test
inc
pop
adc
jbe
inc
mov
cs
dec
xor
or
sbb
adc
or
mov
inc
push
inc
dec
fistp
dec
enter
aas
scas
aam
popf
hlt
loopne
adc
inc
loopne
push
std
jg
imul
mul
pop
push
push
pop
jmp
sti
mov
mov
inc
or
stos
inc
push
sbb
inc
inc
dec
sbb
(bad)
cmp
rcl
inc
and
jnp
fs
xchg
sbb
jnp
cmp
dec
mov
and
add
mov
sub
pop
loopne
push
in
fmul
inc
rcr
inc
sub
inc
push
push
inc
cmovo
imul
les
inc
jle
inc
sub
hlt
dec
fiadd
dec
iret
push
lar
cmp
fisttp
inc
(bad)
inc
mov
push
inc
sub
inc
jle
in
push
inc
test
sub
sub
cmps
leave
inc
mov
push
inc
dec
in
mov
mov
push
xchg
dec
ret
mov
and
add
mov
je
inc
rol
pop
sbb
cmc
inc
push
les
retf
inc
fidivr
cld
mov
xor
stos
pop
inc
mov
inc
arpl
inc
pop
cwde
and
es
inc
lods
inc
hlt
xor
lods
fiadd
outs
push
xchg
mov
aas
ds
ror
inc
cs
mov
pop
jl
sbb
scas
inc
int3
imul
inc
dec
inc
les
inc
ror
inc
add
pop
jno
stos
sbb
inc
repnz
outs
fxtract
ror
fisub
inc
test
sbb
inc
ds
aad
xchg
out
xchg
cs
xchg
mov
or
loop
into
mov
pop
push
dec
lds
cmp
dec
cmp
cmps
sub
ins
mov
xchg
test
adc
xlat
and
enter
inc
aaa
(bad)
lds
mov
mov
push
inc
sbb
sbb
pop
dec
popf
inc
(bad)
mov
and
cmp
dec
repz
pop
inc
aad
and
sub
inc
aas
inc
into
fnsave
push
clc
stos
call
cs
ins
inc
lds
inc
push
xchg
inc
inc
add
inc
mov
sub
shr
cli
daa
pop
gs
sub
inc
shl
out
inc
fist
inc
sbb
rcl
idiv
xchg
cdq
div
cmc
sti
inc
add
mov
stos
sbb
xor
xchg
xchg
inc
mov
or
aaa
fs
inc
xchg
test
jmp
inc
stc
into
inc
cmp
neg
sbb
adc
rol
cmp
repnz
neg
scas
aam
loope
or
sbb
adc
inc
leave
loopne
call
fimul
mov
sar
loop
dec
cmp
inc
mov
mov
pop
dec
jnp
adc
xchg
fnstcw
(bad)
ds
cwde
xchg
std
inc
pop
scas
sbb
(bad)
enter
cs
in
dec
mov
push
inc
shl
test
ds
cmp
cmc
dec
inc
icebp
pusha
test
push
jmp
cmp
cmp
popf
or
(bad)
jo
idiv
add
aam
inc
shl
popa
push
push
in
out
cmp
dec
mov
(bad)
mov
xchg
fs
repz
jmp
xchg
inc
or
arpl
xchg
sahf
mov
cmps
cmp
loopne
cmp
or
pop
cld
ss
in
ror
jne
int
inc
clc
pop
mov
scas
call
inc
push
fidiv
sub
loopne
add
adc
inc
hlt
clc
add
cmp
fisttp
inc
in
pop
lock
rcl
cli
pop
js
push
cmp
xchg
cmp
inc
push
push
mov
stc
movs
adc
pop
int3
ins
sti
in
loopne
or
fidiv
cmp
lahf
cmc
mov
pop
mov
cmp
idiv
inc
repz
stos
shr
iret
inc
iret
jp
inc
retf
mov
sbb
xchg
sbb
icebp
aam
inc
sar
neg
pusha
into
scas
je
cmp
js
bound
xchg
(bad)
xor
pop
(bad)
ja
cmp
jo
inc
pop
xchg
inc
xor
or
mov
sub
(bad)
sbb
(bad)
and
mov
cmp
dec
test
stos
fcom
loop
inc
stc
pop
sbb
add
pop
adc
inc
loope
pandn
cmp
mov
test
sbb
nop
mov
aaa
repz
dec
inc
cmp
inc
(bad)
xor
xlat
pusha
xor
inc
movs
inc
int3
pop
sar
icebp
inc
cmc
sbb
mov
push
inc
xor
shl
fidiv
cmc
neg
or
xchg
mov
xlat
das
lods
(bad)
inc
inc
dec
retf
add
imul
lock
mov
sar
sub
pop
lds
dec
ret
mov
sar
sbb
or
mov
xor
xchg
xchg
pop
lods
shr
fs
shr
inc
push
mov
push
(bad)
aad
(bad)
stc
clc
hlt
ror
inc
sub
cmp
cmp
int
sub
outs
repnz
xchg
sbb
ret
xchg
push
xchg
fadd
shr
dec
push
mov
js
push
cmps
xchg
ror
inc
and
pop
dec
and
push
inc
ins
adc
push
lods
cmp
call
inc
cmp
lea
push
xlat
rol
adc
and
inc
inc
loope
(bad)
fistp
mov
xchg
gs
out
push
pop
sbb
sti
mov
aam
add
push
pop
sbb
push
rcr
sbb
push
es
inc
ins
fistp
pop
push
in
cmp
test
xchg
int3
inc
inc
mov
aam
push
fucomip
leave
inc
(bad)
dec
clc
sar
xchg
bound
mov
mov
and
pop
push
cmp
inc
and
mov
inc
mov
pop
rol
pop
xchg
inc
ds
into
inc
ins
push
fist
xor
pusha
push
dec
gs
inc
xor
ror
(bad)
iret
fild
inc
imul
mov
loope
fild
and
call
mov
inc
shl
inc
mov
mov
inc
push
loopne
fild
or
pusha
mov
inc
push
push
inc
xor
inc
or
mov
scas
stc
gs
mov
cmp
enter
(bad)
cs
sar
inc
outs
stc
inc
lods
pop
and
xchg
pop
mov
mov
xchg
xchg
cmp
and
dec
mov
inc
cmp
and
xchg
shl
xor
sub
jl
rol
int3
inc
es
mov
xor
push
iret
xchg
inc
(bad)
mov
movs
jno
xor
jae
int
retf
xchg
jmp
jnp
add
ror
enter
aaa
mov
adc
jne
jno
rcl
sub
add
jne
or
leave
pop
das
cmp
sub
pop
in
mov
data16
aas
dec
aas
push
nop
mov
enter
push
punpckhdq
retf
mov
cmp
inc
pop
js
mov
mov
inc
loop
jp
sbb
pusha
inc
push
pop
add
and
sub
dec
cmp
dec
mov
dec
inc
fisub
pop
inc
push
stos
(bad)
mov
cmp
xchg
repz
inc
push
inc
push
or
adc
cmp
inc
pop
orps
cmp
push
xor
sar
shr
iret
push
pop
xor
mov
imul
cmp
xchg
xchg
test
xchg
pop
adc
push
xchg
push
dec
inc
inc
add
mov
test
inc
add
icebp
push
xchg
push
or
sub
inc
not
xchg
push
out
mov
mov
lahf
cli
jmp
(bad)
repz
imul
adc
push
sbb
cmp
mov
cmp
jb
div
inc
daa
push
std
pop
cmp
jmp
push
sub
jnp
out
adc
push
xor
inc
mov
mov
cmp
scas
inc
lods
aam
test
pop
inc
inc
push
cmp
pushf
jns
jmp
sub
in
ins
iret
mov
stc
inc
mov
fidivr
inc
push
repnz
loopne
test
shr
int3
cmp
lods
sbb
inc
cmps
jbe
fisttp
inc
ret
aas
dec
push
inc
outs
sar
call
and
dec
push
popa
repz
mov
ret
enter
iret
loopne
inc
dec
(bad)
jecxz
aad
mov
cmp
sbb
dec
ja
pop
adc
inc
(bad)
inc
repz
cmp
mov
pop
fild
push
inc
mov
or
nop
(bad)
adc
shl
push
inc
add
mov
xchg
cmp
sbb
in
pushf
adc
inc
fscale
inc
mov
shr
sub
out
push
inc
jmp
xchg
rol
cmp
fsubr
inc
aad
push
cld
jmp
std
pop
in
rol
cli
sar
xor
sbb
pushf
adc
adc
or
test
sub
call
scas
adc
and
loopne
cmp
leave
mov
mov
sub
jo
mov
mov
jg
push
jle
adc
mov
mov
or
lea
sub
(bad)
mov
data16
jmp
aam
fcomp
jmp
es
ss
and
leave
aad
in
lds
sub
enter
add
(bad)
shl
pop
xchg
push
outs
jbe
mov
lock
imul
add
xchg
shl
popa
mov
xchg
mov
xor
jo
dec
cs
cmp
mov
lods
sbb
push
in
xor
cmp
dec
inc
mov
aad
push
inc
mov
out
sub
jl
out
addr16
gs
add
cmp
ss
addr16
inc
pop
jns
pop
in
mov
push
jecxz
imul
rcl
mov
pop
inc
dec
pop
jg
js
je
add
cmp
jmp
or
rcr
push
cmp
mov
inc
(bad)
jno
cld
test
into
sar
mov
jmp
mov
and
mov
in
rcr
dec
xor
cli
sub
sub
cdq
cmp
cmp
addr16
(bad)
adc
adc
in
cmc
lea
adc
pop
stc
xchg
scas
hlt
js
sbb
sub
mov
fsubr
mov
and
sub
cmp
mov
xchg
inc
and
imul
jns
inc
inc
jo
dec
dec
dec
pop
out
pusha
std
xor
jl
jns
pop
test
mov
mov
test
mov
inc
sub
fwait
pop
inc
aas
cmp
hlt
inc
cmp
cmp
or
pop
repnz
in
test
mov
sar
pop
not
out
push
inc
outs
jo
mov
cmps
jns
fwait
imul
lahf
push
test
loopne
inc
inc
test
fxam
add
int
mov
cmp
push
inc
out
inc
loop
aam
xchg
or
and
ret
ds
sub
int
inc
retf
sub
jnp
ficomp
xchg
ds
dec
popf
ins
push
imul
iret
rcl
inc
jp
xor
cdq
popf
inc
sbb
(bad)
call
sar
or
inc
and
(bad)
sbb
aas
sub
call
inc
hlt
pop
cwde
adc
js
inc
arpl
cli
loop
or
inc
enter
arpl
cmp
and
and
loope
inc
retf
shr
call
add
jl
aas
pop
retf
mov
inc
xchg
jb
inc
inc
and
push
xor
imul
fsubrp
rcr
movs
push
push
je
fld
adc
pop
je
jnp
sahf
pop
mov
adc
and
dec
mov
lock
addr16
inc
mov
repnz
sbb
jae
jae
scas
aad
push
stos
xor
cmp
das
addr16
ret
js
mov
inc
xchg
nop
cmp
jbe
inc
cmc
in
push
cmp
retf
jmp
sahf
cmp
call
sbb
xchg
sar
aam
and
sar
ror
inc
jmp
jo
inc
xchg
sub
add
inc
pushf
inc
inc
or
into
xchg
mov
or
jmp
jne
les
leave
xchg
mov
inc
test
inc
inc
out
retf
adc
pop
inc
or
push
mov
jecxz
cwde
in
not
inc
xchg
fisubr
jne
pusha
cmp
mov
cmp
cmp
push
inc
adc
mov
pop
jmp
and
cmp
inc
div
iret
or
(bad)
xchg
inc
aad
ror
adc
rcr
xchg
mov
int
inc
popa
outs
cmp
jg
sub
std
cmp
dec
in
mov
xor
xchg
sbb
push
mov
in
inc
daa
xchg
jp
jle
es
xchg
mov
or
dec
mov
sub
jl
mov
(bad)
int3
inc
sub
(bad)
jb
sub
jbe
add
xor
cmp
push
mov
add
ins
add
pop
repnz
mov
inc
cmp
sub
or
cmp
(bad)
inc
data16
cmps
or
mov
inc
xchg
mov
inc
inc
xor
xor
sbb
cmc
inc
lea
sub
mov
pop
xchg
jl
(bad)
stc
inc
shr
xchg
dec
cdq
pop
xchg
mov
sbb
xor
lea
inc
mov
sbb
pop
and
jg
dec
jae
adc
jle
lock
cld
jmp
arpl
inc
call
pushf
jge
inc
test
js
aam
ret
push
or
inc
push
jp
dec
cmp
(bad)
popf
int
dec
mov
sbb
ret
fbstp
push
xchg
sar
inc
xchg
push
add
aas
cmp
push
jle
and
(bad)
int
inc
jmp
xor
pop
pop
add
pop
jmp
xor
inc
mov
jl
pop
xor
neg
jp
inc
repnz
sub
(bad)
pop
inc
call
mov
je
(bad)
push
shl
lea
fld
cmp
cdq
bound
inc
add
inc
mov
sbb
add
in
(bad)
inc
cmp
dec
xor
jp
add
jo
sar
cmp
fs
(bad)
cdq
mov
cmp
ss
and
xchg
inc
retf
xchg
pop
sub
(bad)
call
ins
dec
adc
cmp
pushf
ffree
loopne
loop
pop
inc
xor
cs
pop
mov
adc
mov
inc
jne
inc
xchg
adc
jo
cwde
push
enter
xor
fld
inc
icebp
inc
out
or
scas
cmp
xchg
xor
ficom
cmp
push
dec
cs
xor
out
bound
adc
inc
and
ja
pop
movs
add
xchg
sahf
into
(bad)
out
ss
xchg
push
das
adc
mov
sub
sbb
and
mov
mul
sub
leave
and
addr16
imul
inc
sbb
add
fild
into
push
adc
push
jae
mov
inc
daa
sub
mov
lods
mov
push
dec
or
push
gs
push
outs
lds
inc
test
pop
push
and
cmp
add
nop
inc
cli
ret
push
cmp
inc
mov
push
jecxz
stc
sub
cmp
jge
outs
sub
pop
ret
out
nop
or
inc
mov
fs
adc
jp
hlt
pop
jnp
xchg
aas
mov
inc
aad
sub
nop
inc
mov
push
hlt
addr16
shr
and
(bad)
repnz
out
stc
inc
dec
pop
scas
or
jne
std
out
inc
repz
sbb
mov
or
mov
push
cwde
pop
fistp
dec
pop
aaa
call
sahf
cwde
inc
inc
dec
inc
xchg
inc
lods
sbb
add
jno
jge
ror
and
ja
jmp
lods
add
je
inc
sub
(bad)
pop
pop
jb
js
(bad)
xchg
imul
push
sbb
pop
cmp
std
mov
sar
(bad)
cmp
les
stc
xor
popa
pop
ret
cdq
xchg
dec
pop
dec
push
jb
sub
rol
xor
xchg
mov
push
sub
pop
scas
sar
inc
mov
mov
inc
fstp
fst
cwde
das
call
cmp
popf
or
in
cmps
inc
cmp
sub
add
loopne
test
cli
inc
in
je
mov
outs
(bad)
ficomp
dec
ss
inc
bound
out
addr16
adc
jbe
inc
jge
jns
aas
movsx
push
test
sar
lods
(bad)
pop
sub
test
aam
mov
or
and
cmp
int3
into
les
gs
xchg
cmovp
jmp
rol
retf
xor
fnstcw
mov
inc
push
enter
call
dec
fild
rol
push
jb
jns
inc
jge
test
pop
repz
inc
jbe
fwait
add
xor
cld
ja
jnp
cmp
dec
cmp
or
test
mov
cmp
mov
cmps
mov
adc
cmp
push
jb
stc
xor
inc
ins
(bad)
pop
xchg
inc
popa
xchg
std
push
sub
mov
or
inc
inc
scas
jne
xor
mov
cwde
inc
aad
xchg
mov
inc
sub
dec
clc
inc
hlt
pop
dec
cmp
adc
cmp
adc
xor
inc
ins
xchg
and
xchg
inc
cs
sub
inc
aad
cwde
pushf
int3
xchg
mov
enter
mov
(bad)
clc
push
loope
shr
cmp
stos
and
jg
gs
imul
add
scas
mov
inc
and
sub
or
jb
nop
fimul
inc
mov
(bad)
pop
das
aad
(bad)
int
mov
push
inc
(bad)
ja
inc
push
mov
sti
test
cmp
xor
sbb
(bad)
sub
cmp
or
sbb
xchg
mov
fs
movs
leave
loop
inc
push
mov
arpl
cld
sub
adc
cmc
lea
rcr
mov
mov
mov
add
sbb
xor
pop
retf
dec
lods
imul
pop
ret
in
inc
sub
lds
adc
fst
inc
fnsave
js
jmp
inc
ror
mov
add
sahf
out
ficom
leave
shl
ins
imul
ret
or
jge
sti
cmp
mov
inc
cmp
pop
and
xchg
into
inc
jns
adc
ds
ins
pop
cmps
or
sbb
lock
pop
into
loopne
inc
dec
icebp
inc
sbb
adc
push
xchg
repnz
dec
jle
push
pop
jo
add
adc
aam
or
(bad)
ret
lahf
sbb
mov
inc
adc
inc
mov
fsubr
sub
scas
sub
iret
outs
mov
lock
aas
sub
inc
rcl
call
mov
xor
gs
xchg
and
mov
cmps
js
inc
inc
les
mov
pop
and
sahf
ds
jl
loop
inc
cs
adc
cmp
push
sub
in
aas
inc
jnp
add
in
jge
mov
cmp
adc
mov
jb
jp
aam
lods
movs
hlt
mov
fst
nop
in
xchg
adc
inc
inc
and
jnp
fbstp
std
inc
rol
rol
or
lds
mov
fidiv
push
inc
add
or
inc
aas
adc
xchg
inc
mov
sbb
loop
sub
shl
ins
outs
je
sti
out
aaa
int
into
aam
pop
jb
mov
jle
cdq
inc
mov
add
xlat
xchg
mov
outs
inc
popa
or
pop
jge
mov
jmp
fscale
mov
mov
sub
dec
push
inc
shl
inc
and
add
or
push
jecxz
adc
mov
cmp
jae
xlat
mov
inc
(bad)
mov
inc
push
sub
pop
ret
inc
inc
gs
fild
jp
push
xlat
and
jnp
enter
xor
dec
push
lods
sbb
inc
cmp
js
jae
jle
inc
inc
iret
push
cmp
dec
push
mov
mov
mov
inc
jae
jl
das
test
mov
jb
inc
jmp
mov
jne
pop
mov
xor
cmps
(bad)
test
iret
call
dec
xor
popa
push
cmp
push
iret
inc
lahf
fisttp
jp
jnp
mov
test
out
ja
inc
fidiv
cmp
add
jne
sbb
jmp
xchg
sbb
mov
mov
lods
push
js
adc
retf
jae
(bad)
in
jnp
aad
xor
xor
push
mov
sub
jl
ja
mov
cmp
leave
aad
mov
std
mov
inc
add
jcxz
stc
(bad)
xor
lods
fld
mov
loopne
jmp
ss
xor
jle
lds
push
cmp
dec
and
cmps
sbb
pusha
and
cmps
dec
mov
test
in
dec
dec
sub
nop
xor
xchg
cli
inc
loopne
and
arpl
loope
aas
jmp
cwde
ja
jg
cdq
je
mov
jmp
or
inc
inc
pop
inc
(bad)
imul
loopne
daa
pop
scas
jo
mov
inc
jmp
cmp
stos
cmp
pop
pusha
not
add
pushf
and
pop
je
inc
xchg
dec
mov
or
rcl
inc
daa
or
retf
jbe
aam
ins
rcr
cmp
enter
and
mov
cmp
xchg
mov
inc
push
mov
mov
jns
pop
out
dec
lahf
inc
jle
jnp
pop
push
test
sub
and
mov
push
inc
int3
loope
fadd
out
test
lahf
or
je
jae
ret
je
aam
inc
inc
xchg
ret
pusha
jp
jmp
xor
sbb
inc
cmp
dec
mov
jle
fcomp
into
aam
test
inc
out
pop
push
ins
sahf
push
inc
leave
pop
jae
ret
jle
jp
add
js
dec
ret
inc
hlt
xor
add
dec
fld
jp
dec
retf
inc
lds
fcmovnu
cmc
fild
dec
xor
sar
aad
rol
(bad)
inc
scas
adc
dec
pop
add
jmp
mov
icebp
inc
dec
mov
jg
fisubr
ins
xor
inc
aas
inc
cmp
xchg
popa
loopne
retf
(bad)
(bad)
fidivr
rcr
sub
add
mov
lods
pop
es
adc
inc
movs
dec
xlat
jbe
xor
dec
inc
adc
pavgb
fwait
pop
les
inc
fstp
leave
jle
jbe
inc
xchg
jecxz
cmp
mov
dec
xor
xor
cmp
fwait
pop
rol
xlat
jo
loopne
rcl
imul
pop
int
dec
in
jnp
xchg
sub
lods
inc
xchg
push
adc
push
inc
or
cmp
inc
xchg
sahf
rcl
ret
adc
leave
movs
inc
mov
jecxz
push
add
xchg
xlat
lods
loope
imul
ss
sar
jnp
inc
xor
cmp
xor
sub
(bad)
das
into
out
cmp
inc
or
scas
mov
dec
cmp
out
test
mov
sub
jl
xchg
in
cmp
sbb
clc
adc
adc
push
xor
cmp
pop
jb
and
leave
jl
jmp
gs
mov
lds
out
imul
jg
iret
aad
sub
inc
stc
or
pop
xor
adc
iret
aaa
mov
int3
jge
and
aam
ret
lahf
lea
cmp
loopne
push
inc
inc
inc
push
xlat
(bad)
imul
jge
add
dec
pushf
xchg
add
enter
push
mov
fadd
inc
pop
les
jns
data16
inc
popa
cmp
loope
adc
test
imul
jmp
push
push
add
xor
mov
movs
call
pop
adc
inc
mov
cmp
xor
add
stos
pop
pop
fdivr
xor
add
xor
ret
push
xor
push
fist
jp
icebp
mov
test
jge
jns
or
mov
sub
sar
adc
jg
movs
(bad)
xlat
push
push
fld
ins
fisubr
stos
cmp
push
ficom
int3
inc
(bad)
in
xchg
xchg
push
mov
sub
adc
lds
inc
adc
xchg
sub
mov
cmp
lds
leave
cmp
jbe
xlat
sub
fmulp
cmp
inc
mov
int3
sbb
scas
js
rcr
(bad)
cmp
lock
add
add
dec
pop
jo
lds
push
dec
jnp
dec
idiv
jmp
out
cmp
iret
cmps
xor
xor
jmp
enter
mov
xchg
and
inc
mov
inc
or
movs
mov
xchg
jmp
inc
push
cmps
xlat
pop
test
lea
xchg
cdq
and
xchg
rcr
enter
loope
sahf
stc
inc
inc
push
fmul
add
fsubr
call
jl
int3
rcr
or
mov
inc
cmps
pop
push
cmp
inc
inc
std
lds
mov
or
inc
xchg
out
aas
dec
pusha
xor
fild
inc
sbb
test
cmp
inc
mov
stos
mov
mov
ins
lods
push
sub
mov
inc
pop
push
jne
xchg
popf
push
mov
and
cmp
cmp
jle
xor
stos
icebp
jne
bound
mul
test
adc
xor
mov
dec
xchg
xchg
inc
shl
dec
mov
rol
(bad)
mov
test
xchg
lahf
sbb
pop
inc
pop
lds
ficom
jge
inc
cmp
pusha
inc
frstor
sar
ror
push
cmp
lock
inc
pop
inc
sar
cmps
nop
int
pop
mov
cmp
rcl
repz
mov
inc
mov
inc
inc
iret
sub
pop
enter
inc
nop
ja
add
mov
imul
jbe
jne
inc
ficom
nop
mov
movs
pop
xlat
jl
inc
mov
xor
cmp
pop
and
rol
dec
in
(bad)
xor
inc
sar
aad
add
imul
dec
dec
lahf
push
sbb
es
xchg
nop
xchg
sub
inc
adc
pop
jbe
mov
cmp
push
fucom
scas
add
pop
adc
jl
xchg
jmp
fs
inc
lea
ret
fbld
sahf
adc
xchg
psraw
retf
cmp
jmp
push
rep
pop
mov
nop
lods
add
and
popf
inc
jne
das
xor
cmp
inc
inc
and
rcl
mov
inc
retf
inc
into
xchg
ret
inc
inc
shr
(bad)
iret
shr
push
or
sbb
push
xor
cmp
(bad)
outs
dec
push
sbb
mov
adc
inc
xchg
mov
(bad)
xor
pop
dec
lods
mov
mov
jne
or
xor
sub
stc
jmp
lods
out
in
inc
pop
cmp
jno
stc
enter
sbb
das
dec
hlt
inc
push
clc
pop
mov
lds
push
shl
add
push
push
cmp
out
cmp
cs
mov
mov
(bad)
cmp
sar
sbb
dec
pop
pop
xor
lea
jle
(bad)
iret
xchg
inc
into
inc
push
add
jg
repz
fsub
icebp
cmp
fcmovnu
push
mov
xor
inc
cmp
scas
clc
int
adc
inc
in
bound
(bad)
out
push
sbb
push
add
mov
ds
(bad)
arpl
push
fdivr
pop
pop
je
inc
mov
mov
sub
pop
stos
les
inc
push
arpl
stos
mov
ret
les
cmc
push
cmp
in
inc
inc
mov
sahf
mov
loope
js
inc
sub
xchg
mov
aaa
scas
push
imul
inc
pusha
dec
enter
push
pop
inc
retf
fld
into
xchg
ret
cli
adc
shl
test
fisub
pop
or
xor
add
sbb
jmp
pop
xor
add
rol
cli
sub
inc
jge
jns
aaa
jle
ret
mov
scas
xor
push
or
test
jnp
sahf
fs
xlat
xchg
inc
in
inc
and
rol
push
lock
push
and
js
lahf
cmp
push
push
sub
inc
addr16
mov
xadd
xchg
(bad)
xchg
jb
push
mov
inc
popf
(bad)
jne
cmp
or
int
inc
(bad)
dec
cs
cmp
(bad)
clc
les
mov
push
inc
adc
mov
test
jl
pusha
(bad)
outs
fimul
add
gs
mov
out
xor
sbb
add
inc
inc
or
xor
add
add
push
sbb
(bad)
inc
movs
adc
add
out
mov
stos
push
push
mov
lds
xchg
jmp
clc
mov
(bad)
mov
add
mov
ds
or
stos
cmovo
repz
aad
xchg
inc
loope
rcl
and
mov
(bad)
test
inc
stc
push
sbb
movs
inc
sub
(bad)
mov
dec
adc
sti
mov
inc
idiv
dec
shl
pop
cli
in
fucomp
iret
lahf
inc
cmp
xchg
enter
nop
inc
jmp
mov
test
push
sbb
mov
cmps
stos
cmp
repnz
push
sub
push
js
ficomp
mov
leave
int3
add
cmp
mov
xchg
inc
or
mov
dec
test
in
add
popf
dec
leave
jo
inc
movs
xor
mov
fld
out
xchg
ds
aas
jno
adc
out
mov
int
mov
loopne
(bad)
movs
inc
aas
sub
add
into
inc
inc
shr
icebp
bsf
push
aam
xor
inc
imul
xchg
test
fwait
movs
fsub
int
cmp
aam
in
out
mov
sbb
xchg
add
cli
cwde
push
inc
xchg
sub
lock
test
adc
and
inc
xchg
rcl
inc
inc
retf
push
jl
push
test
pop
fdivp
(bad)
cmp
iret
ficom
inc
popa
js
add
or
aaa
and
or
dec
int
pop
inc
dec
dec
xlat
xor
inc
imul
xchg
sahf
gs
inc
xor
popa
dec
cmps
retf
js
dec
mov
addr16
gs
leave
ds
fadd
pop
cmp
jbe
inc
inc
xchg
call
jmp
fisttp
jnp
add
mov
dec
xor
xor
mov
pop
jp
and
cmc
cs
aas
imul
jne
das
sub
inc
cmp
clc
loop
sub
push
(bad)
sahf
popf
add
lds
imul
mov
out
mov
and
xor
xchg
cmp
xor
aaa
outs
inc
push
push
loope
jne
jnp
mov
aam
fistp
aas
leave
(bad)
jmp
dec
rcl
inc
fldz
inc
add
test
pop
xchg
std
xchg
jb
or
xor
inc
outs
sti
or
inc
push
icebp
lds
push
fsubp
out
cmc
imul
retf
inc
push
push
dec
lock
call
setl
inc
dec
jl
aas
inc
jb
je
inc
(bad)
cli
push
pop
(bad)
fcmovnbe
and
push
mov
sbb
cmovo
pop
xor
ja
fcomp
cmps
or
xor
sbb
inc
test
pop
mov
xor
cmps
and
push
sar
xor
sbb
inc
adc
mov
mov
popf
iret
dec
fnstsw
cmp
pop
jne
inc
daa
popa
loopne
mov
mov
arpl
icebp
cli
push
mov
ret
out
mov
cmp
sub
push
cmps
retf
and
dec
ds
mov
inc
or
test
inc
mov
cmp
aam
aaa
jmp
pop
pop
inc
add
loop
push
xchg
jo
or
inc
push
(bad)
lea
cmp
inc
inc
mov
push
xor
(bad)
dec
hlt
add
bound
(bad)
stos
lock
xchg
shl
inc
jbe
les
xor
outs
sbb
leave
and
dec
repz
mov
jecxz
test
leave
ret
xor
cmp
enter
rol
cmps
fcomi
test
cmp
repnz
inc
add
dec
hlt
mov
jb
imul
and
f2xm1
xchg
sub
or
xchg
add
add
inc
sar
dec
push
cdq
inc
shr
int
pop
inc
das
repz
inc
and
mov
fdivr
or
int
ss
inc
sbb
push
jae
pop
inc
inc
aaa
out
in
inc
jg
add
xor
inc
push
cmp
stos
xchg
and
sbb
cmp
(bad)
das
adc
je
mov
shr
xor
cs
push
add
cmp
stos
and
push
add
pop
daa
mov
loop
inc
dec
outs
out
and
jg
comiss
xor
jb
movs
jge
aaa
pop
rcr
js
sub
and
es
mov
loop
push
jno
shl
int
pop
ja
fisub
push
inc
sar
xor
adc
xor
dec
rcr
inc
add
jg
movs
aas
iret
sub
daa
sbb
stc
xchg
cli
push
dec
stc
js
dec
aas
adc
pusha
dec
mov
xor
sbb
pop
inc
pop
aaa
in
sbb
arpl
inc
retf
ds
imul
and
jle
inc
cmp
sbb
push
arpl
push
push
cmc
jb
xchg
add
in
fwait
aam
cmp
movs
jns
mov
pop
pop
xchg
std
xchg
je
jp
ss
sbb
jno
scas
stos
inc
pop
fs
retf
add
cmc
stc
ret
mov
push
or
lds
jne
loopne
inc
mov
mov
xchg
mov
jg
inc
dec
cmp
arpl
dec
push
cdq
inc
rcr
pop
sbb
test
mov
dec
fcom
sbb
inc
mov
stos
add
pushf
iret
dec
imul
ins
bound
add
dec
jmp
cmp
add
rol
jns
repz
(bad)
cld
sub
and
inc
aaa
inc
clts
ds
aam
mov
mov
aaa
jne
loop
scas
dec
jl
adc
lock
jo
es
jmp
enter
inc
icebp
dec
dec
xchg
pop
inc
shr
adc
mov
imul
je
push
ds
mov
mov
fbstp
sti
or
pop
and
inc
fcmove
inc
mov
push
inc
inc
fmul
jg
dec
and
mov
ret
xchg
sub
pop
mov
xor
icebp
sub
int3
sub
mov
inc
dec
xchg
retf
pop
inc
aad
dec
or
dec
scas
xlat
or
adc
cmc
lahf
mov
data16
inc
into
cmp
jmp
inc
repz
das
inc
xchg
fcomp
sbb
les
mov
cmp
loope
out
dec
inc
jne
jmp
push
std
aad
jl
xor
mov
jp
test
bound
rol
push
jmp
inc
(bad)
mov
rcl
inc
inc
out
nop
sbb
push
cmp
mov
inc
data16
imul
inc
stos
xor
enter
cmp
std
test
push
dec
mov
dec
cmp
call
inc
add
jb
lock
fwait
retf
cli
inc
shr
test
fild
or
cmps
jo
adc
pop
fisub
cmp
gs
jbe
inc
inc
inc
dec
jns
popa
dec
push
inc
cdq
xor
mov
test
out
push
adc
out
xchg
xor
outs
sbb
xor
sbb
shr
ret
xchg
hlt
(bad)
cmp
mov
pop
pop
mov
push
inc
stos
sub
lock
inc
push
int3
xchg
or
lea
cwde
pop
and
xor
inc
cmp
jge
fisttp
jns
dec
inc
mov
push
pop
dec
idiv
adc
scas
cmp
aas
lahf
outs
add
adc
adc
test
adc
ins
push
jle
sbb
stos
and
push
std
pusha
jg
xor
dec
fld
mov
fs
jge
cmp
dec
inc
mov
dec
inc
cmp
(bad)
lea
inc
or
xor
aam
dec
hlt
add
add
sti
xchg
int3
stc
ret
rol
inc
sub
in
inc
aad
xlat
div
rol
inc
std
sbb
pop
mov
retf
pop
cmp
sahf
inc
fisubr
add
sbb
pushf
rcl
xor
scas
inc
sbb
test
cmps
pop
mov
inc
daa
lea
cmp
xor
cmp
out
mov
jno
jmp
fadd
lds
popa
mov
outs
icebp
sbb
lods
inc
inc
rsqrtps
lahf
dec
clc
inc
dec
outs
cmc
sub
mov
sbb
and
repnz
and
dec
sti
idiv
cmp
icebp
inc
arpl
dec
mov
push
jns
pop
aad
inc
sbb
dec
test
and
cmps
dec
inc
mov
shl
clc
xchg
cmp
jns
dec
rcr
xor
iret
ins
fucom
xlat
xor
inc
inc
lock
and
jnp
out
sbb
dec
mov
or
dec
or
daa
sar
inc
cwde
mov
into
or
stc
or
pop
mov
(bad)
dec
fadd
ss
push
(bad)
jmp
adc
push
jmp
mov
outs
and
out
invd
mov
fadd
icebp
sub
std
jmp
in
sbb
(bad)
push
jnp
fsubr
cli
cmp
push
push
inc
test
inc
fcomip
ret
(bad)
cli
sbb
rcl
and
stos
cmps
pop
int
inc
(bad)
push
out
pop
sahf
imul
dec
arpl
std
xchg
cmp
ret
push
bound
xlat
inc
cmp
fadd
add
enter
cmp
inc
dec
into
sbb
pop
add
ror
pop
cmp
out
or
push
ja
jno
jmp
mov
aaa
shl
xchg
xor
mov
in
cmp
and
xchg
aas
dec
retf
cs
lods
aad
stc
mul
push
sbb
cmp
adc
out
pop
pop
inc
loop
sti
es
test
xchg
lods
aad
inc
mov
sub
inc
jle
dec
push
inc
sbb
test
inc
and
pop
mov
icebp
inc
jmp
add
cdq
inc
ficom
addr16
stc
adc
cmp
dec
out
fcomip
sar
dec
mov
sahf
rol
pusha
stc
(bad)
cmp
dec
jp
xor
push
out
ds
xchg
aas
or
rcl
xor
pop
pop
scas
cmc
rcr
repnz
cmp
sub
mov
inc
or
outs
lea
and
call
gs
add
inc
push
jecxz
inc
xchg
mov
inc
out
or
mov
sub
cmp
sbb
push
inc
retf
ss
lds
test
sub
inc
aam
fstp
shr
fs
les
mov
push
dec
cmp
dec
inc
pop
push
sub
ja
cmp
mov
loope
inc
sbb
popf
inc
sbb
std
outs
(bad)
sub
xor
cmp
fidivr
inc
in
push
js
add
cli
cmp
fadd
ret
in
int
inc
xor
test
inc
iret
out
or
xor
xchg
(bad)
fcomp
sahf
aas
aas
lahf
cmp
jnp
cmp
dec
stos
mov
inc
popa
neg
and
loopne
inc
(bad)
ret
outs
inc
sbb
popf
mov
dec
mov
adc
sbb
or
mov
sahf
push
fiadd
mov
cld
sbb
dec
nop
fldcw
rcl
xor
dec
sbb
movs
inc
adc
push
aaa
stc
inc
inc
cmp
xor
cmps
cwde
sub
inc
mov
test
aaa
sub
cmp
xor
inc
enter
push
(bad)
fild
retf
ret
push
inc
js
push
and
and
ss
cs
into
inc
(bad)
fiadd
jmp
cmp
inc
mov
in
push
pop
inc
inc
or
inc
icebp
test
lea
movs
fst
sub
adc
sub
(bad)
test
adc
pop
or
std
and
pop
stc
inc
inc
repnz
jmp
inc
dec
pop
cwde
inc
into
inc
adc
add
mov
pop
pusha
push
(bad)
cmp
sbb
pop
mov
pusha
outs
sbb
neg
xchg
fiadd
inc
loop
adc
std
loopne
xchg
sub
cmp
retf
dec
cmovo
mov
add
dec
push
aas
push
cmps
(bad)
mov
jecxz
hlt
stc
loope
jno
pop
pop
repz
dec
mov
jno
dec
cmp
nop
inc
and
inc
push
inc
lds
fs
sub
sahf
push
test
hlt
sub
aam
not
pop
inc
add
jnp
cmp
int
sti
dec
sub
mov
mov
push
retf
sbb
dec
fisub
repnz
mov
pusha
loope
xchg
cmp
lods
inc
aad
inc
stos
mov
sbb
mov
test
pop
adc
daa
call
aas
cmp
cmp
inc
scas
hlt
inc
adc
inc
lea
sti
xor
push
pop
pop
cs
sub
lods
repz
dec
inc
xchg
imul
repz
push
movs
aad
inc
mov
data16
sub
push
xchg
cmp
adc
imul
mov
inc
in
mov
inc
cmps
xchg
push
adc
imul
sub
mov
dec
sub
pop
dec
inc
mov
push
xor
inc
inc
and
dec
idiv
loop
push
push
inc
scas
fwait
inc
test
dec
retf
jmp
sbb
mov
pop
cmp
cmp
adc
retf
jge
push
push
inc
sbb
outs
inc
jae
outs
imul
mov
inc
loopne
cli
dec
xchg
cmp
scas
aad
scas
enter
adc
hlt
cmp
movs
stc
out
sbb
in
imul
cli
(bad)
dec
int
cs
push
adc
add
cwde
sub
(bad)
sar
inc
inc
aas
sbb
inc
out
or
das
js
fsub
lods
inc
inc
fcmovnb
mov
inc
add
(bad)
cmp
(bad)
fnstcw
cmp
js
adc
xchg
mov
inc
mov
dec
sub
xchg
mov
aaa
cmp
pop
movs
inc
dec
lahf
dec
inc
and
inc
mov
xchg
cmp
retf
fisttp
addr16
rol
inc
pop
out
cmp
inc
jmp
test
out
mov
push
push
lods
cmp
sub
sub
sar
sbb
(bad)
lea
cmp
cmps
mov
shl
aam
(bad)
out
mov
xchg
inc
push
adc
xchg
mov
dec
lea
loope
cmp
pop
inc
pop
push
ds
ds
sub
mov
popf
inc
pop
inc
mov
loope
hlt
and
shl
jmp
std
(bad)
dec
inc
iret
sahf
aaa
jmp
aad
hlt
or
cmp
addr16
add
mov
hlt
xchg
(bad)
mul
test
pusha
xchg
push
jmp
repnz
aas
call
or
pushf
cmp
inc
push
test
scas
jbe
mov
arpl
repnz
les
push
ja
jp
out
add
and
retf
or
fist
xchg
or
hlt
cmp
add
xchg
mov
sar
inc
or
test
pop
dec
xchg
call
lods
js
cmp
jne
mov
pop
cmc
(bad)
and
cld
inc
ficomp
fmul
ret
into
mov
dec
sub
jl
scas
inc
mov
jbe
inc
add
(bad)
mov
lods
hlt
in
movs
inc
loopne
mov
jne
out
sub
je
test
std
inc
das
dec
fcmovne
ins
hlt
and
data16
jmp
dec
fadd
cmp
mov
jle
cmp
aaa
cld
mov
cld
xchg
adc
inc
pop
aad
hlt
sbb
ins
mov
inc
inc
cmp
int
or
ds
pop
cmp
fst
nop
in
and
and
adc
sub
not
inc
dec
outs
and
lds
xchg
ss
inc
or
mov
push
jns
in
dec
in
xor
jb
jmp
sahf
mov
jp
fcomi
int3
ss
pop
inc
cmp
repz
fnstenv
ss
cwde
adc
dec
js
xchg
es
inc
lods
shr
ret
stos
cmp
neg
sti
(bad)
cwde
mov
push
or
and
cmp
ins
inc
(bad)
jbe
inc
test
sbb
pop
inc
cmp
pop
lods
dec
push
pop
lds
hlt
dec
inc
xor
ficomp
mov
lock
mov
pop
jp
dec
psrlw
inc
mov
sub
xchg
popf
mov
push
jg
add
in
(bad)
fild
ins
inc
fsubr
xchg
push
sbb
pop
in
cmp
popf
adc
sub
and
and
xlat
loopne
fisubr
jge
ret
mov
inc
scas
mov
(bad)
retf
adc
cmp
fadd
leave
push
add
and
sbb
imul
pop
inc
sar
in
and
inc
and
sub
inc
and
sub
fcmovu
inc
adc
xor
cmp
xchg
(bad)
in
mov
(bad)
adc
xchg
addr16
daa
aam
stos
sub
pop
jecxz
xlat
push
or
mov
scas
ss
inc
cmp
inc
dec
sbb
les
arpl
inc
dec
push
inc
dec
inc
(bad)
jle
cs
mov
inc
lods
inc
xor
jmp
iret
xchg
xchg
push
pop
bound
inc
cmp
add
mov
inc
retf
and
mov
mov
lds
hlt
test
ret
or
cmp
adc
lods
inc
std
cmp
je
sbb
scas
aaa
pop
pop
xor
inc
loopne
ins
mov
cmp
cmps
sbb
push
jne
mov
ret
pop
sub
xor
aas
or
cwde
sub
inc
xor
test
jl
pop
inc
lahf
shl
mov
test
mov
jp
cmp
aaa
pop
xor
adc
push
adc
or
cmp
loopne
out
jo
xchg
inc
adc
sbb
sbb
inc
(bad)
frstor
cmp
dec
cmp
loopne
inc
sub
xchg
addr16
fld
sbb
movs
inc
sub
adc
sub
mov
lahf
cmp
and
test
in
adc
inc
dec
inc
sub
inc
and
std
mov
icebp
pop
cwde
call
ins
jmp
inc
cld
in
xor
popa
inc
dec
shl
test
push
sub
xchg
inc
test
add
add
aaa
jge
dec
aaa
inc
jno
aaa
xchg
cdq
movs
mov
inc
inc
loopne
pusha
mul
ror
jg
jp
dec
mov
jmp
dec
xor
add
les
into
cwde
adc
pop
and
aas
inc
(bad)
mov
push
pop
lods
push
cmp
movs
dec
jo
retf
xchg
hlt
push
inc
or
sahf
and
cmp
xchg
and
je
lahf
cwde
inc
movs
xchg
fs
pop
push
inc
std
imul
inc
mov
dec
xor
mov
mov
fisubr
les
arpl
mov
or
pushf
inc
std
in
pop
jmp
rol
es
sbb
inc
inc
dec
fild
inc
scas
jge
inc
je
pushf
sbb
inc
scas
neg
rcr
sub
mov
popf
pop
jns
das
push
inc
cmps
sbb
xchg
push
fiadd
jmp
mov
sbb
mov
pop
pop
lods
inc
cmp
pushf
xchg
xor
mov
push
inc
ds
jno
mov
outs
jmp
mov
xchg
mov
cmp
mov
(bad)
mov
lods
pop
xchg
shr
inc
jne
scas
int3
mov
cmp
inc
pop
aam
push
inc
dec
cmp
sbb
cdq
or
xor
mov
stc
call
inc
fidivr
inc
sti
ror
jg
push
mov
mov
adc
inc
lods
cmp
cmp
xchg
and
push
clc
sub
inc
pop
in
loopne
js
das
mov
xchg
not
mov
xchg
ins
jl
inc
sbb
dec
sar
std
inc
mov
adc
sbb
xchg
jbe
jne
shl
lahf
xchg
into
cmp
cmp
push
pop
in
gs
imul
out
sub
neg
inc
retf
(bad)
and
or
mov
cmc
jge
ror
inc
xchg
jl
inc
xor
pop
arpl
inc
out
cmps
mov
leave
movs
out
and
pushf
sar
(bad)
cmp
sub
mov
cmp
loopne
sub
pushf
mov
mov
jne
mov
sahf
xchg
xor
outs
arpl
or
outs
ret
cwde
inc
mov
sub
inc
sub
mov
dec
add
and
jl
xor
retf
mov
pop
dec
inc
js
shl
inc
adc
cs
int
inc
cli
jmp
adc
outs
mov
repnz
sub
dec
fst
jmp
adc
cmps
(bad)
aaa
pop
sbb
and
lahf
jae
rol
imul
adc
sbb
inc
cmp
repnz
inc
cmp
rcr
dec
ret
or
mov
inc
sub
xchg
cmp
push
jmp
cld
clc
mov
inc
inc
jp
ret
aaa
push
in
imul
popf
inc
push
or
inc
or
mov
push
inc
inc
jb
lods
stos
mov
daa
das
jmp
sub
xchg
not
pop
inc
xor
sbb
or
les
pop
rol
and
inc
xchg
sub
sbb
add
mov
xor
cmp
and
je
fadd
jbe
mov
stos
inc
adc
mov
daa
add
inc
push
and
stos
fbld
inc
adc
and
cmc
and
inc
cmp
repnz
inc
push
inc
add
std
fild
out
sahf
or
fcomp
or
mov
popa
fistp
inc
stc
in
inc
xchg
cmc
ficomp
pop
rol
inc
int3
and
imul
jp
jne
icebp
nop
fistp
(bad)
sbb
cmp
mov
adc
mov
mov
outs
popf
ficomp
cmp
xchg
cmp
ins
sub
jae
aas
shl
mov
cli
xor
xor
or
pop
daa
popf
sub
sub
cmp
pusha
dec
adc
mov
mov
push
sbb
lahf
div
ds
and
mov
mov
arpl
test
adc
inc
push
mov
fadd
inc
add
aad
test
inc
jne
inc
data16
inc
fmul
out
inc
adc
stc
in
repnz
cmp
fcomp
adc
icebp
repnz
fwait
aaa
add
fwait
inc
inc
and
jbe
adc
addr16
push
cli
sub
rol
leave
or
fwait
xor
sub
out
cmp
ret
and
test
cmc
jecxz
inc
xor
aaa
inc
cmp
mov
ins
xchg
cmp
aad
mov
sbb
call
test
mov
jb
cmc
rol
mov
inc
test
movs
test
icebp
or
ds
sub
sbb
ins
mov
and
sbb
or
mov
or
mov
sbb
cmp
adc
push
pop
daa
mov
sbb
dec
add
adc
inc
retf
into
pop
inc
jne
or
test
les
repz
test
and
(bad)
sbb
inc
adc
mov
cwde
hlt
xchg
cdq
xchg
lods
dec
mov
(bad)
out
cmp
es
scas
(bad)
cmp
ds
sar
cmps
pop
pop
jnp
out
inc
xor
push
cmp
xchg
inc
push
stc
dec
(bad)
loopne
sbb
adc
fldcw
dec
lock
mov
mov
inc
inc
cmp
imul
xchg
push
cmp
mov
call
jl
cmp
and
das
inc
inc
clc
(bad)
loope
in
mov
(bad)
adc
test
mov
inc
lds
pop
and
sub
jl
(bad)
fcmove
imul
mov
(bad)
inc
lock
dec
mov
in
xor
retf
int3
pop
in
lahf
mov
sub
mov
inc
pop
mov
sbb
jge
inc
push
inc
inc
fxsave
xlat
pop
loopne
inc
jno
inc
nop
imul
inc
mov
add
loopne
js
xor
push
int3
inc
rol
cmc
je
add
js
fucomip
inc
sbb
xchg
rcr
movs
push
inc
sub
mov
jl
inc
cmp
mov
ret
inc
cmp
shr
cmps
stos
add
push
ins
pop
sub
dec
pop
into
inc
push
xor
xchg
and
pop
loope
dec
sub
cmp
scas
add
mov
cmps
inc
inc
aas
test
shl
inc
inc
iretw
pop
in
push
(bad)
repnz
cli
das
stos
lods
cmp
rol
outs
es
out
mov
sahf
mov
inc
push
xchg
fstp
str
push
mov
ds
scas
dec
lods
stos
sti
inc
lahf
push
cwde
pop
out
pop
jno
inc
je
mov
add
scas
shl
movs
mov
popf
test
in
clc
add
fcmovne
inc
sbb
sti
inc
xor
inc
test
inc
sahf
pop
inc
cld
out
aaa
inc
movs
inc
push
xor
aam
adc
xlat
pop
sub
inc
mov
dec
mov
(bad)
test
cmp
leave
xor
push
loopne
stos
idiv
pop
dec
and
pop
adc
mov
mov
mov
inc
popf
stc
ds
pushf
sbb
shl
mov
lods
movs
imul
xchg
cmps
inc
push
inc
cmp
ds
mov
out
mov
jl
sub
fnstsw
xchg
mov
cmp
sub
std
push
inc
sub
inc
test
in
jge
push
out
xchg
iret
push
inc
add
fsubr
sbb
daa
comiss
aas
cmp
fcmovnu
xchg
jle
and
dec
jne
push
sub
fld
sbb
xchg
mov
sub
repnz
xor
je
dec
inc
pop
add
inc
push
dec
fild
cld
inc
pop
xchg
enter
xor
inc
loope
inc
sub
and
test
and
inc
sub
scas
outs
add
gs
inc
sbb
xchg
(bad)
pushf
cmp
cmp
push
jecxz
ss
dec
adc
xlat
sub
inc
loope
inc
and
push
out
cmp
cmc
shr
push
fidivr
push
enter
xchg
ret
and
pop
jae
in
or
enter
shl
cmp
out
jg
mov
inc
(bad)
ret
shl
pop
inc
cmp
iret
daa
push
push
std
jmp
add
cmp
jle
inc
cmp
adc
jg
pop
mov
(bad)
fcmove
cmp
adc
sbb
inc
js
inc
mov
(bad)
ins
and
dec
cdq
leave
inc
ja
adc
pop
lods
lods
pop
mov
ins
jp
popf
mov
cmc
retf
pop
inc
mov
sub
inc
data16
mov
lahf
xchg
inc
cdq
cmp
call
dec
jmp
inc
cmp
lds
xchg
pop
dec
arpl
inc
call
inc
cmp
repnz
lahf
inc
mov
cmps
mov
mov
sar
inc
xor
mov
fmul
mov
and
fsubrp
hlt
sub
nop
jp
test
inc
pop
xchg
sub
data16
mov
addr16
aad
push
jb
jns
movs
push
mov
ja
inc
fdivr
inc
sbb
cmps
mov
out
mov
mov
adc
cmp
fld
pop
in
cmps
and
dec
out
pop
xchg
adc
cmp
xchg
sub
lods
das
inc
in
inc
and
push
jp
xchg
xor
pop
mov
sub
push
xchg
inc
repnz
retf
jno
inc
adc
mov
xor
mov
mov
inc
mov
lods
jmp
test
test
pop
nop
dec
add
mov
jno
inc
inc
sbb
movs
inc
mov
fwait
inc
std
and
sbb
stc
(bad)
xchg
inc
jl
loop
dec
sbb
(bad)
xchg
out
rcl
sbb
popa
pop
hlt
inc
cmp
loope
mov
dec
cmps
push
mov
inc
mov
stos
rol
jno
jmp
push
sub
(bad)
jle
out
aad
cmp
jecxz
inc
dec
push
jo
push
lock
pop
xor
fimul
mov
xchg
and
jns
shl
add
sub
dec
aam
inc
jbe
pop
js
pop
jge
sub
inc
test
sbb
out
dec
push
pop
mov
adc
and
xor
lods
mov
pop
and
jae
mov
adc
popf
sbb
mov
outs
(bad)
leave
rcl
inc
js
lods
push
and
fdiv
mov
mov
pop
dec
int
and
repnz
or
out
sbb
aam
inc
lods
mov
ret
cmp
(bad)
fadd
cmp
mov
xchg
jecxz
xchg
test
mov
add
or
dec
movs
cmp
mov
aas
js
nop
xchg
push
pop
repnz
add
out
addr16
setns
sbb
aas
cmp
inc
daa
jmp
inc
dec
pop
int
push
jl
lea
sahf
clc
fcomp
mov
mov
rcl
icebp
in
in
retf
jmp
or
adc
cmps
cmp
ret
jecxz
jb
xor
mov
sbb
and
ss
mov
cmp
arpl
test
leave
aam
cmp
sub
xor
push
lock
push
jns
inc
stc
icebp
rol
push
jl
sbb
dec
xchg
int3
fs
cmp
stos
mov
out
pop
inc
retf
sbb
jg
inc
cmp
add
inc
(bad)
sbb
jns
(bad)
push
dec
inc
cmp
pop
inc
mov
fadd
pop
out
dec
bound
inc
sbb
nop
bound
js
dec
movs
xor
inc
pop
inc
ret
mov
lock
xchg
aam
and
push
fsubr
inc
sub
mov
jmp
push
into
xor
fs
fistp
aad
ror
lock
xchg
or
inc
fisub
xchg
push
mov
cmp
cs
xchg
idiv
jo
push
movaps
cmp
pop
sub
inc
out
add
sub
enter
sub
daa
sbb
inc
add
js
fstp
cmp
inc
fs
cmp
push
pusha
and
push
cmp
aaa
sbb
imul
and
jns
mov
popf
mov
inc
pop
(bad)
mov
cs
test
loopne
bound
pusha
into
loop
inc
xor
stos
rcl
cwde
inc
sub
push
xchg
sub
pop
shl
lock
xchg
xchg
fadd
ret
inc
cmp
retf
push
add
adc
scas
icebp
inc
stos
clc
inc
xchg
mov
nop
outs
mov
lods
nop
shl
inc
jbe
jb
jnp
inc
aad
dec
(bad)
shr
arpl
lock
pop
addr16
inc
bound
jle
es
pusha
and
push
out
or
jge
mov
xor
popa
ds
rol
int3
pop
es
je
inc
inc
fstp
mov
in
mov
push
data16
leave
jp
ins
ds
sti
iret
test
and
aaa
cmc
push
mov
mov
push
sbb
jns
hlt
sub
rcl
xchg
mov
or
mov
rcl
inc
cmp
xor
jg
dec
xor
cmp
inc
xchg
fsub
stos
inc
scas
cmc
inc
cs
fld
aaa
mul
xor
add
out
push
inc
ss
pop
retf
scas
inc
mov
add
inc
fs
rol
in
mov
out
jmp
mov
push
je
lods
sar
or
out
in
inc
adc
xchg
cld
push
xchg
push
fnstcw
(bad)
xor
cmp
rcr
sbb
out
sub
adc
mov
inc
sub
sub
inc
lods
fs
inc
repnz
retf
cmp
xor
in
adc
add
(bad)
dec
pop
cmps
xchg
mov
sub
mov
out
dec
cmc
popf
enter
cmp
push
fs
and
xlat
inc
vpackssdw
xchg
test
pop
dec
mov
inc
addr16
xor
push
iret
push
xchg
test
cmp
jo
inc
je
mov
inc
mov
inc
cmp
test
sub
sbb
out
ja
adc
mov
stos
scas
inc
test
inc
add
cmp
cmp
aad
inc
add
jge
fst
inc
pop
inc
mov
mov
scas
cs
sahf
cmps
lods
sbb
cwde
dec
adc
hlt
jnp
rol
xchg
pop
xor
inc
popf
ret
inc
inc
retf
idiv
mov
aam
mov
dec
jg
inc
aas
pop
in
dec
mov
push
inc
outs
mov
xor
stos
add
shl
leave
inc
ds
cmps
ja
pusha
add
jnp
cmp
leave
push
jmp
aaa
sbb
xor
les
adc
jne
dec
and
repnz
push
jnp
es
test
cmp
mov
push
adc
sbb
inc
dec
xor
es
test
and
icebp
inc
sub
pop
jge
int3
or
iret
inc
adc
xor
inc
pop
je
sub
fwait
shl
in
scas
dec
in
inc
adc
push
pop
inc
cmps
fadd
jmp
repnz
jb
and
out
fld
xchg
inc
sbb
xor
cli
jmp
and
xlat
jns
cld
jmp
add
and
inc
adc
mov
sub
or
mov
mov
js
xor
arpl
outs
adc
and
sub
inc
cwde
inc
inc
mov
push
loop
dec
jne
inc
jns
pop
rcl
and
call
and
jae
jmp
mov
mov
xchg
xchg
jnp
hlt
mov
pop
inc
test
into
sbb
or
sub
sub
lods
aam
out
daa
and
jecxz
mov
push
fucomip
add
jnp
fsubr
aam
mov
and
inc
mov
sti
hlt
inc
adc
xor
ins
int
inc
push
inc
inc
xchg
test
jmp
test
pop
inc
mov
shl
cmp
ret
jg
repz
push
aas
and
lock
push
add
push
mov
(bad)
cmp
mov
aaa
xchg
xchg
push
inc
icebp
pusha
mov
and
lods
add
pop
mov
sar
(bad)
dec
sbb
imul
loope
addr16
sbb
pop
or
rcl
(bad)
out
sub
int3
(bad)
aas
mov
and
cmp
add
xchg
cmp
cmp
xchg
xor
ret
mov
push
jmp
or
into
jnp
mov
sbb
inc
imul
lahf
cmp
es
sub
xor
mov
cmp
and
inc
xchg
sbb
inc
sbb
inc
rcr
icebp
fld
js
in
mov
jmp
xor
movs
pop
call
pop
cs
mov
popf
mov
fwait
inc
and
xor
and
ja
lock
ds
aaa
cmc
inc
cmp
dec
adc
loopne
(bad)
or
lahf
xor
push
gs
sbb
nop
retf
cmc
inc
inc
pop
pop
test
mov
(bad)
bound
cmp
dec
mov
pop
retf
or
aad
shl
or
push
pop
addr16
inc
int
in
cmp
inc
loope
sbb
js
pop
jmp
mov
push
(bad)
nop
or
xor
mov
sub
cmp
cmc
stos
ret
mov
cdq
cmp
or
dec
(bad)
jno
inc
add
stos
call
xchg
sub
cmp
cmp
sti
xchg
das
jp
fistp
mov
stos
dec
ins
inc
stc
jns
push
inc
test
cmps
inc
scas
xchg
fs
mov
cmp
xchg
add
mov
scas
xchg
inc
inc
fidiv
call
dec
inc
cmp
jle
rol
out
les
mov
popf
lea
inc
fbld
int3
mov
cmp
adc
ja
inc
aad
xor
push
push
jge
cmps
int
inc
sub
lods
pop
call
rol
ror
imul
es
pop
cmp
and
rdpmc
jbe
inc
or
outs
xchg
xchg
jmp
xchg
rol
xor
pop
retf
ret
jp
into
inc
(bad)
mov
push
cmps
dec
mov
mov
mov
call
push
and
cdq
inc
inc
push
jae
into
shl
mov
jl
sbb
add
push
jge
inc
or
iret
dec
aam
mov
and
movs
sbb
scas
inc
cdq
ss
out
inc
retf
pop
jnp
inc
je
retf
push
dec
stos
inc
xor
sbb
inc
inc
sbb
outs
jecxz
inc
into
dec
inc
aaa
add
movs
mov
ret
inc
push
push
cmp
pop
in
push
sbb
add
pop
fisubr
sub
add
lock
rcl
inc
in
and
mov
repnz
loope
cmp
inc
fxam
fmul
fist
cmc
or
inc
jo
xchg
ins
inc
retf
xor
push
inc
cmp
cs
rol
movs
ja
dec
add
cmp
push
mov
cwde
inc
fdivr
jp
add
and
cmp
pop
lds
and
jns
cmp
xlat
jecxz
call
and
and
ret
fistp
dec
repnz
cli
inc
xchg
jge
fidivr
jmp
sbb
cmp
rol
lds
ret
(bad)
adc
lock
(bad)
out
inc
mov
adc
push
mov
pop
jmp
inc
cmps
mov
xchg
ret
sub
mov
movs
mov
mov
inc
cli
(bad)
add
cwde
nop
push
mov
scas
stos
dec
cli
out
xchg
inc
xchg
jle
mov
jecxz
iret
dec
bound
xchg
cmp
or
test
inc
out
cmp
out
shl
shr
inc
loopne
add
dec
jg
lods
sti
call
(bad)
mov
pop
jo
das
inc
cmp
inc
sbb
or
inc
jbe
jge
jns
cdq
ja
inc
inc
jnp
pop
addr16
xchg
std
push
inc
arpl
nop
mov
loope
cmp
inc
shl
leave
lods
sbb
mov
mov
pop
rol
inc
test
icebp
mov
mov
iret
bound
xor
rol
mov
loopne
sub
inc
and
inc
inc
cs
jae
inc
rcr
addr16
inc
inc
pop
inc
cmp
out
out
add
ds
rol
in
push
mov
out
sbb
pop
xchg
mov
cld
push
cmp
sub
lds
movs
mov
push
inc
or
imul
push
bound
adc
outs
ja
inc
gs
sub
mul
fld
xchg
jl
ror
mov
adc
icebp
inc
inc
cmp
sub
repnz
lds
push
jns
inc
retf
pop
loop
add
mov
sub
fcom
test
rol
gs
in
inc
out
jp
cmp
cmp
fwait
xchg
in
fs
xchg
pop
aaa
sbb
hlt
xchg
mov
xor
sub
or
inc
fs
inc
and
jmp
inc
cmp
cli
gs
int3
inc
(bad)
inc
nop
es
ds
inc
xchg
xchg
fadd
inc
hlt
inc
rol
lds
inc
je
pop
aas
pop
cwde
inc
sbb
popa
inc
enter
mov
shl
aas
dec
addr16
inc
inc
shr
mov
pop
int3
pop
push
call
jge
xor
adc
(bad)
fimul
xchg
inc
into
fdivr
push
inc
pop
xchg
pop
inc
or
cmp
sbb
das
stos
scas
ret
out
cmp
cmp
inc
inc
add
push
jns
mov
cmp
loope
fld
lods
imul
pop
stc
mov
rcl
inc
inc
jecxz
out
lods
mov
mov
sub
call
das
inc
and
jbe
push
cmp
sbb
inc
pop
(bad)
add
pop
adc
das
pop
hlt
xchg
or
xor
outs
inc
xchg
nop
jle
inc
test
inc
fs
aas
movs
js
pop
retf
int3
cmp
mov
cmp
xchg
inc
shr
popf
outs
add
pusha
or
push
cdq
pusha
mov
inc
pop
je
adc
stos
(bad)
repnz
inc
jecxz
out
mov
xor
xchg
test
inc
add
sub
in
imul
inc
push
sbb
movs
inc
ds
lock
(bad)
pop
push
sti
cmp
adc
in
add
shr
out
pop
jg
ror
cmps
and
or
or
fldcw
cmp
je
pusha
push
dec
or
call
mov
stos
inc
pushf
mov
retf
arpl
push
dec
inc
inc
repnz
ja
ds
pop
pop
out
clc
fcom
or
inc
fld
iret
rol
nop
or
test
push
cmp
cdq
jmp
pop
xchg
pop
xchg
mul
icebp
inc
in
sbb
push
or
imul
imul
arpl
push
movs
inc
push
xchg
bound
pop
imul
cmp
scas
sub
mov
scas
cmp
movs
xor
cmp
cbw
mov
shl
inc
cmp
mov
push
test
mov
xor
loop
cmp
pop
enter
retf
cdq
and
xor
lods
or
xchg
stc
cmp
sti
jecxz
push
ja
push
call
inc
mov
mov
icebp
sub
into
iret
pop
int3
lods
dec
inc
js
imul
mov
sbb
inc
xor
jns
outs
sub
cmp
inc
ds
mov
imul
cmp
movs
and
js
inc
jmp
push
add
inc
popa
pop
ins
vpavgb
stc
cmp
shr
inc
sub
adc
test
mov
adc
xor
inc
std
push
inc
hlt
inc
sub
setb
inc
(bad)
fsubp
leave
aad
fcom
loopne
mov
jo
dec
inc
jno
pop
inc
inc
pop
in
dec
in
push
imul
gs
ret
(bad)
cdq
pop
inc
sub
clc
test
jae
in
inc
out
cmp
retf
push
jmp
cdq
je
and
cmp
jg
loope
xchg
aad
inc
loopne
gs
add
push
sub
sar
test
sub
add
sbb
mov
or
xor
push
inc
cld
push
inc
and
pop
cmp
movs
pop
sub
stos
inc
inc
mov
test
std
inc
dec
les
sbb
pop
inc
sub
mov
sub
inc
pop
push
sar
sbb
ror
push
and
xchg
arpl
inc
mov
adc
stos
inc
sub
push
ins
fld
push
addr16
cmp
and
inc
pop
addr16
inc
inc
inc
inc
mov
inc
xor
dec
pop
mov
test
xchg
ja
inc
pop
in
xor
adc
inc
sbb
sar
push
fwait
loopne
cmp
lock
dec
inc
pop
inc
sub
add
js
mov
jmp
repnz
mov
jecxz
test
inc
jl
jmp
xchg
push
push
not
fld
inc
cmp
popa
xchg
enter
cmp
retf
ja
(bad)
ficomp
sbb
push
(bad)
cmp
pop
push
cmp
ja
jmp
cmp
xchg
inc
pop
loope
cmp
js
cmp
(bad)
sub
push
jbe
inc
sub
sub
add
aas
xchg
fild
mov
and
int3
popa
loope
mov
mov
inc
mov
jg
fadd
cli
xchg
inc
pop
push
inc
inc
fisubr
cmp
mov
inc
pop
and
movs
js
push
xor
es
jo
inc
mov
push
push
repnz
pop
xor
fidivr
pusha
pop
inc
pop
inc
and
mov
loopne
retf
sub
xor
dec
sbb
jo
call
xchg
js
xlat
fld
rol
mov
mov
jnp
inc
pop
int
in
xor
stos
inc
cmp
push
gs
inc
and
jns
inc
add
cmp
inc
push
sar
mov
ds
(bad)
adc
lods
ret
cwde
inc
mov
inc
pop
xchg
inc
mov
push
outs
jg
dec
inc
hlt
add
retf
outs
pop
inc
dec
xor
sbb
xor
add
xchg
fild
mov
fadd
rcr
daa
push
mov
cmp
movs
arpl
mov
push
je
mov
push
vmread
sbb
lock
rcr
outs
inc
lods
dec
test
and
loope
cmps
sbb
std
out
imul
sbb
repnz
inc
movs
test
mov
sub
shl
pop
jae
pop
sub
inc
cmp
inc
push
out
or
mov
mov
ja
lds
adc
(bad)
in
rcl
adc
inc
aad
js
pop
jecxz
ds
inc
inc
push
mov
push
out
or
rcr
outs
loop
xor
and
cmp
inc
xchg
or
inc
into
pop
pop
scas
push
inc
je
xor
inc
pop
les
inc
xor
pop
inc
fiadd
cmp
sti
or
jns
icebp
inc
mov
and
dec
mov
in
jmp
adc
cmp
push
not
out
mov
mov
shl
inc
mov
repz
inc
test
in
mov
inc
xchg
xlat
les
pop
pop
ja
xor
jp
(bad)
addr16
or
push
sub
mov
cmp
adc
add
dec
xchg
sti
ror
cmps
xchg
leave
sbb
sub
inc
cmp
ret
into
cmp
jns
ret
pop
inc
sub
and
push
inc
inc
cld
js
out
cmp
jg
call
mov
inc
pop
mov
adc
imul
out
inc
jmp
mov
and
inc
push
sub
pop
inc
jbe
and
dec
iret
inc
cmp
stc
xchg
aam
inc
xchg
ss
aam
loop
push
loope
dec
sar
push
test
adc
setp
xchg
jecxz
jae
adc
inc
iret
mov
inc
sub
xchg
cwde
stc
sbb
out
jbe
cmp
fisubr
cli
add
xor
cmp
mov
inc
xchg
test
pop
dec
js
sub
mov
adc
mov
sbb
repnz
cmp
int3
fs
jmp
push
sbb
outs
pop
inc
add
pop
sub
div
loopne
test
inc
dec
scas
mov
jae
ret
test
dec
(bad)
cmp
push
daa
adc
and
sub
das
jmp
jl
cmp
push
inc
sub
inc
je
not
dec
adc
sub
rcl
jae
xchg
fld
cs
inc
ret
call
and
cmp
ins
dec
sti
xor
clc
mov
call
adc
push
inc
pop
jno
mov
adc
movs
test
fdiv
inc
pushf
inc
popa
repnz
lea
lds
push
xchg
push
ret
jb
mov
les
imul
pop
inc
cmp
sub
aaa
aas
(bad)
out
inc
add
(bad)
ror
enter
cs
daa
cwde
ret
daa
inc
lods
xor
cmp
xchg
cmp
test
fstp
aas
in
dec
arpl
cmp
inc
add
repnz
sbb
pop
bound
and
inc
icebp
xor
inc
adc
inc
and
mov
inc
lods
push
fadd
adc
inc
or
clc
inc
(bad)
mov
push
inc
cmp
inc
and
add
mov
dec
int3
dec
test
scas
push
push
inc
cmp
ficomp
fiadd
int
fbstp
mov
cmp
fwait
inc
inc
add
mov
xchg
dec
inc
ss
retf
movs
inc
mov
cmp
cmp
sbb
lea
mov
ret
add
scas
mov
into
(bad)
push
add
pop
jbe
inc
inc
xchg
rcl
div
sbb
push
inc
std
into
loopne
fcomp
xor
xchg
mov
idiv
inc
sbb
sub
push
lahf
js
push
enter
jbe
inc
repz
inc
pop
inc
ror
sbb
cmp
sub
mov
movs
xor
rcr
movs
dec
andps
inc
mov
add
pop
int3
or
test
cmp
xchg
and
pusha
mov
push
adc
inc
mov
clc
sub
sbb
popa
mov
adc
jmp
stos
sbb
fsubp
(bad)
mov
test
mov
jno
and
inc
dec
sbb
push
dec
dec
cmp
div
adc
mov
push
jbe
aas
adc
test
inc
test
lods
je
and
imul
or
push
mov
mov
das
js
in
inc
sbb
imul
test
mov
xchg
mov
push
leave
les
in
(bad)
mov
jecxz
inc
fcomp
inc
or
ucomiss
sbb
cmp
dec
push
rol
cmp
pop
cs
cmp
popf
mov
and
xchg
fs
push
nop
pop
or
xor
push
cmp
cmc
and
pop
and
inc
addr16
jmp
bound
sti
cli
out
in
cmp
rol
scas
(bad)
loopne
dec
inc
test
movs
add
mov
xor
movs
inc
pusha
xor
in
test
cld
(bad)
mov
dec
ror
mov
mov
inc
mov
or
repnz
aam
inc
lods
mov
xchg
inc
dec
or
jb
popf
sahf
mov
inc
sub
dec
mov
jp
rol
push
cmp
ds
std
lods
inc
lds
cli
pop
pushf
fwait
cmp
test
mov
inc
cmp
pop
outs
(bad)
or
inc
push
xor
cmp
fcomp
dec
xchg
fdivr
rcl
inc
push
dec
jno
clc
loop
jbe
xchg
push
mov
popf
sbb
xchg
mov
cmp
pop
ss
ins
inc
pop
dec
in
and
cmp
mov
lahf
ficomp
dec
pop
test
pop
sti
popa
mov
push
aaa
aas
adc
mov
mov
pop
inc
add
push
jge
ds
cmp
in
and
pop
inc
sbb
loop
mov
and
adc
mov
inc
sbb
or
inc
dec
sar
call
xor
movs
mov
(bad)
jo
sbb
repnz
pop
cmp
inc
xchg
in
(bad)
add
sahf
ja
mov
inc
cmps
scas
dec
std
inc
nop
(bad)
into
out
push
inc
hlt
cmp
inc
scas
and
pusha
or
add
js
daa
inc
rcl
and
aas
jl
idiv
fld
ds
cmps
cmp
sub
jnp
cmp
mov
mov
ins
pop
(bad)
pop
push
stc
cld
lock
sbb
pusha
cmp
pushf
add
popf
retf
cmp
loop
out
ret
idiv
(bad)
pusha
stc
inc
inc
xchg
jae
cmp
jp
mov
inc
pop
mov
jg
dec
xor
dec
pop
fimul
lds
pop
jne
mov
and
xchg
stos
(bad)
rol
push
call
(bad)
lahf
pop
shr
dec
es
cmp
sbb
ja
(bad)
mov
and
out
popa
stc
jle
test
call
stc
ds
lods
iret
scas
stc
call
shl
sbb
inc
retf
mov
sub
dec
or
pop
add
je
mov
inc
lods
inc
aad
pop
and
cmc
fidiv
inc
mov
jmp
loopne
iret
xor
fcmovnbe
cdq
adc
out
int
jns
in
lods
outs
jp
iret
ucomiss
sar
cmp
jmp
push
sub
adc
test
loopne
dec
aam
inc
sbb
ficomp
dec
in
inc
mov
pop
outs
out
pop
cld
js
pushf
jg
sub
sar
dec
inc
mov
sub
sbb
pop
push
call
cmp
test
mov
arpl
push
adc
jno
xor
mov
fiadd
shl
fmul
les
xchg
jb
lock
rcr
cmp
add
fistp
fadd
inc
pop
neg
movs
popf
add
out
je
inc
cmp
xor
jmp
cmp
jns
xchg
cwde
push
inc
adc
repz
inc
xchg
mov
sbb
outs
ud1
into
mov
inc
out
int
in
xchg
jg
stc
inc
int3
push
aad
or
pop
clc
test
add
loopne
add
fild
jmp
ret
cmps
mov
(bad)
dec
retf
aas
mov
pop
adc
inc
dec
inc
bound
inc
les
jo
aas
repz
mov
sub
push
rcl
mov
dec
repnz
pop
jl
inc
dec
sub
xor
lock
add
pop
push
cmp
mov
inc
xchg
int3
hlt
mov
cmp
jns
sub
stc
mov
inc
add
xchg
inc
arpl
iret
jl
push
fucom
aad
push
ds
mov
or
cs
fcomp
sub
gs
xor
inc
pop
fcom
cld
or
inc
inc
(bad)
push
pop
icebp
mov
adc
cmp
xor
mov
leave
dec
or
push
shl
(bad)
sub
cmp
pop
mov
xchg
mov
in
int
js
push
jnp
inc
push
adc
and
pop
mov
jl
nop
jno
cdq
addr16
outs
test
mov
adc
div
xchg
and
and
in
inc
dec
sti
jle
cmp
add
dec
fmul
xchg
rol
xchg
dec
inc
aas
and
dec
add
jmp
dec
nop
std
push
repz
mov
fsub
out
js
gs
sub
jo
test
fdivrp
cld
jae
rcr
arpl
inc
test
mov
push
adc
ins
inc
mov
test
inc
popa
nop
or
test
adc
mov
inc
pop
outs
out
push
std
xor
jl
jmp
mov
jp
ficom
dec
fsub
fwait
imul
push
ins
dec
mov
int
pop
fild
bound
aaa
sahf
popf
cmp
rcr
repz
addr16
jo
inc
mov
jmp
cdq
and
inc
jle
fiadd
aad
mov
pop
push
int
jmp
test
or
ja
dec
push
xor
fadd
rcl
js
pop
loopne
sbb
push
cmp
int
dec
cmp
inc
mov
or
mov
xlat
jno
and
(bad)
pop
inc
lds
sub
xor
adc
aam
inc
std
add
jp
enter
and
inc
aaa
out
cmc
neg
xor
adc
xor
mov
test
xor
ins
xor
push
push
fdiv
sti
cli
push
rcl
adc
sub
test
lods
xor
inc
pop
daa
inc
xor
xchg
stos
out
inc
(bad)
inc
(bad)
mov
inc
sub
fmul
inc
iret
aas
ficom
movs
mov
sbb
cmp
xchg
jle
cdq
rcl
jbe
ficom
jae
cmp
inc
mov
stos
and
cmps
aad
mov
inc
(bad)
aam
(bad)
inc
sbb
fs
inc
inc
lock
dec
cwde
rep
or
inc
dec
aaa
or
loopne
fild
dec
bound
jp
and
inc
mov
pop
nop
fisub
mov
mov
xchg
cmp
sbb
jmp
jae
out
ds
les
fiadd
add
push
inc
inc
idiv
aaa
mov
inc
inc
jp
adc
mov
mov
xchg
dec
inc
daa
rol
test
mov
pop
pop
lock
out
and
xchg
cmp
xor
jmp
in
or
jle
inc
cmc
mov
fld
ror
or
mov
mov
cmp
in
and
mov
inc
dec
dec
mov
jge
add
inc
inc
sbb
popf
xchg
jae
mov
pop
(bad)
sub
push
cmp
call
inc
retf
jg
fwait
sub
stc
push
dec
sbb
mov
scas
mov
mov
inc
push
add
mov
inc
retf
mov
push
fiadd
mov
cmps
adc
inc
mov
lock
push
xor
inc
cmp
shr
out
arpl
cmp
mov
fist
inc
inc
ds
or
jg
add
mov
inc
cdq
ror
mov
add
loopne
adc
adc
aam
int3
scas
ds
repz
sbb
xor
inc
or
cmps
mov
jle
sbb
inc
test
inc
lods
movs
arpl
loope
cmp
cmp
js
inc
in
inc
pop
xchg
std
inc
mov
dec
xor
ret
shr
xor
adc
in
addr16
and
ret
mov
adc
lea
mov
cmps
cmp
xchg
jne
je
popa
mov
cmp
pop
fs
push
nop
fst
int3
jmp
pop
dec
pop
jl
mov
cld
lea
sbb
adc
push
and
fdivrp
inc
sub
and
inc
hlt
pop
retf
push
(bad)
outs
push
xchg
or
inc
inc
das
(bad)
xchg
sti
inc
pusha
mov
and
test
stos
daa
inc
cmp
add
inc
test
loopne
mov
pop
mov
push
lods
sub
ds
cmp
inc
jno
push
and
inc
cmovo
iret
imul
test
xchg
dec
inc
xor
outs
popa
mov
mov
(bad)
or
and
repz
sub
jmp
jno
pop
add
dec
out
mov
hlt
jmp
mov
inc
add
jmp
lock
pop
js
mov
mov
push
and
cmc
or
or
mov
inc
inc
dec
pop
sar
sub
inc
das
xor
clc
and
sub
push
jb
sub
xchg
adc
inc
pop
bound
fdivr
clc
cdq
cmp
sub
fcmovnu
pusha
inc
inc
push
div
enter
inc
arpl
push
imul
mov
outs
add
push
fnsave
sub
aaa
or
mov
scas
adc
inc
add
outs
das
cdq
imul
inc
cld
inc
xor
xlat
jbe
cs
sub
jo
(bad)
aam
(bad)
sbb
loopne
add
cmp
xchg
loope
nop
push
test
push
mov
cld
ss
aas
hlt
inc
jmp
push
jp
mov
mov
dec
leave
test
test
repz
jo
repnz
lods
and
(bad)
cld
inc
inc
repz
cs
inc
ds
lods
sar
add
aas
inc
(bad)
stos
nop
shr
xor
inc
xchg
add
ret
rol
aas
(bad)
dec
(bad)
imul
and
push
fiadd
fsub
cmp
mov
push
jmp
dec
or
sbb
(bad)
sub
inc
iret
in
fld
fimul
pop
rcr
jne
xlat
aam
fadd
or
xchg
enter
inc
mov
retf
cmp
fistp
clc
cmp
mov
out
mov
cwde
movs
mov
sub
dec
and
add
inc
pop
pop
pop
or
xchg
out
jnp
dec
mov
inc
inc
pop
(bad)
inc
inc
or
ret
mov
dec
mov
add
inc
add
push
push
inc
fnstenv
pop
and
inc
das
add
sub
sbb
jnp
inc
rol
aad
rol
arpl
mov
daa
cmp
out
sbb
sti
dec
xor
int3
inc
test
mov
enter
add
cmc
inc
pop
inc
cmp
in
inc
fmul
nop
or
outs
xor
bound
mov
mov
mov
clc
lea
mov
xchg
fst
mov
iret
shr
icebp
sub
jg
inc
jnp
mov
movs
inc
pop
mov
pop
xchg
or
xchg
jmp
mov
inc
fisttp
pop
push
mov
push
mov
test
push
cmp
loope
add
inc
mov
sar
add
cmc
cld
call
push
sar
mov
xchg
mov
pop
out
inc
arpl
xor
vpaddusw
lea
and
mov
mov
jnp
leave
sub
fdivr
inc
inc
inc
aas
loop
sbb
xor
dec
into
lods
pop
inc
test
cs
pushf
dec
xor
sub
movs
lea
inc
test
jg
jecxz
in
gs
mov
inc
fadd
mov
inc
test
stos
fisubr
inc
das
mov
pop
pop
jecxz
inc
sahf
loopne
int3
fadd
loopne
push
push
cmp
leave
sbb
sub
lea
(bad)
cmp
jb
or
imul
jg
aam
adc
pop
or
sub
outs
int3
mov
je
fist
pop
div
mov
cwde
pop
xor
pop
pusha
push
dec
or
iret
cdq
inc
dec
dec
or
cmp
mov
js
shl
in
in
or
xchg
pop
mov
in
les
cmp
es
dec
dec
push
jl
popa
rcr
loop
mov
xor
cmc
out
cmp
(bad)
mov
test
hlt
inc
sub
imul
pop
add
xlat
xchg
or
iret
sub
push
in
rcr
sar
idiv
lea
aam
cmp
jno
and
out
add
xchg
push
xor
sbb
inc
stos
mov
fild
in
mov
out
inc
retf
mov
inc
xor
inc
ss
xor
ja
xor
lods
cmp
adc
inc
or
fcom
mov
inc
enter
jae
jle
inc
fisubr
pop
ret
ins
aam
jbe
mov
call
(bad)
pop
loopne
arpl
outs
lds
inc
sbb
(bad)
fiadd
popa
xchg
(bad)
stos
jge
jmp
sbb
lds
mov
fnstcw
in
push
sbb
test
out
jmp
retf
jmp
ja
scas
xchg
out
bound
pop
mov
aad
movs
dec
cmp
inc
int
ficomp
push
pop
repnz
mov
xchg
jmp
rcr
fnstcw
loopne
sbb
cmp
popf
adc
les
retf
das
mov
pop
sub
cmp
mov
pop
adc
xchg
das
inc
cmp
and
inc
test
fld
pop
push
add
pop
sbb
aas
icebp
test
inc
push
cmp
sbb
adc
or
ins
inc
cmp
int
les
cmp
cmps
push
sar
test
cmp
xor
sbb
sub
jae
jbe
or
in
lds
pop
out
push
adc
mov
adc
cmp
ins
(bad)
push
mov
shr
fstp
dec
mov
inc
sbb
out
xchg
popf
mov
cdq
addr16
pop
in
cld
pushw
push
fldcw
pop
inc
inc
jno
test
jp
mov
xor
or
retf
das
shl
jbe
or
push
mov
mov
adc
pop
movs
xchg
mov
pushf
mov
test
inc
pop
icebp
popf
jmp
pusha
outs
jns
pop
mov
jecxz
cmps
or
xchg
hlt
or
imul
loope
cli
aas
and
cmp
(bad)
jb
xlat
add
dec
inc
and
sar
mov
hlt
push
arpl
push
shl
cmp
cmp
or
js
(bad)
aam
cmp
push
jmp
and
loop
inc
add
das
sbb
xor
mov
std
inc
fisub
cmp
fiadd
lea
mov
push
adc
ins
retf
inc
pop
pop
jl
clc
xor
lods
add
scas
mov
js
dec
xor
ss
cs
(bad)
fsubp
mov
push
and
out
(bad)
push
cmp
xorps
scas
ror
adc
push
inc
xor
pop
pusha
push
sub
ss
jno
fdiv
mov
inc
inc
sub
out
sbb
ds
shl
add
push
add
cmp
pop
mov
jmp
inc
jo
dec
data16
ror
mov
xor
inc
mov
mov
push
sbb
cmc
cmp
retf
mov
or
inc
es
push
ins
xchg
sahf
inc
lds
cmp
test
(bad)
xor
cmp
add
fmul
pop
sbb
xor
scas
aam
retf
mov
pop
rcr
adc
outs
mov
inc
retf
cmc
out
(bad)
inc
rcl
les
xchg
mov
jle
push
dec
fwait
lds
inc
bound
inc
inc
or
pop
cmc
lods
dec
inc
dec
xor
or
cmp
call
sti
pop
repnz
test
shr
jmp
mov
cmp
xor
(bad)
out
inc
into
cmps
push
inc
sub
aad
test
cmp
fisttp
test
adc
mov
gs
ins
mov
mov
inc
(bad)
xor
loop
push
(bad)
fadd
addr16
aas
cmp
iret
vminps
dec
mov
push
pop
inc
cmc
ror
inc
cmp
mov
(bad)
(bad)
xchg
mov
jmp
pop
cmps
retf
jb
sbb
or
lods
or
imul
fs
adc
inc
js
inc
scas
in
je
jbe
mov
pop
clc
add
sub
sub
jmp
xchg
jmp
fdivr
cmp
adc
xchg
aad
cmp
cld
cmc
hlt
cmp
mov
xchg
cmp
imul
and
inc
push
inc
push
sub
add
cwde
inc
dec
leave
ds
dec
adc
in
xchg
(bad)
push
xor
sbb
out
inc
ror
inc
mov
jmp
sar
sbb
sub
xor
jb
cmp
je
inc
scas
outs
mov
or
fnsave
repz
inc
cmp
xor
dec
push
(bad)
(bad)
mov
cmp
movs
ret
cmp
xor
mov
jae
ins
pop
loop
fmul
push
mov
les
push
jg
inc
xchg
sbb
push
adc
push
sub
jl
mov
inc
(bad)
fsub
sar
js
cmp
xchg
inc
sti
push
retf
out
cmp
hlt
das
cs
push
xchg
sub
jl
mov
inc
arpl
push
xchg
cmc
jno
pushf
adc
sbb
sti
sti
push
push
adc
cmp
in
mov
cmp
adc
in
push
rcl
pop
popa
movs
aad
inc
cdq
inc
je
ret
inc
hlt
call
fsubr
push
loop
(bad)
test
push
daa
retf
aad
test
adc
jmp
arpl
xor
das
aas
pusha
pop
(bad)
cmp
inc
and
(bad)
jo
jge
(bad)
and
jmp
mov
mov
and
ss
ds
aaa
ja
cmp
inc
dec
inc
icebp
dec
rol
test
mov
mov
xor
inc
sub
pop
ret
adc
cmp
xor
fisub
or
cmp
lahf
fbstp
add
and
out
cmp
pop
dec
fcmovbe
in
xor
push
into
movs
mov
dec
xlat
and
sbb
sub
inc
das
out
inc
rcr
retf
lods
fisubr
mov
pusha
in
lods
inc
ja
add
das
call
cmp
enter
and
ds
test
cmovo
das
fneni(8087
sub
mov
sti
aam
cmp
cmp
sbb
test
cmc
inc
ror
inc
shl
xchg
cmp
push
mov
and
pop
ss
inc
xor
(bad)
call
lods
inc
ds
jmp
test
cmc
test
ds
(bad)
lock
inc
xchg
iret
arpl
jl
aas
out
popf
jmp
arpl
stc
loope
adc
xor
dec
pop
(bad)
xor
inc
xor
push
in
jp
adc
aaa
mov
xor
jnp
fst
jge
retf
cmp
adc
push
ins
pop
arpl
addr16
push
aas
inc
shl
fld
fld
mov
xor
push
fdivr
or
(bad)
sbb
ror
popaw
enter
mov
mov
mov
cmp
or
mov
inc
lods
adc
or
inc
mov
mov
sbb
aaa
jg
push
mov
loop
or
sub
sub
adc
cmp
add
sbb
les
dec
arpl
inc
fild
cmp
loopne
xor
cmp
cmps
xchg
cld
cmp
mov
iret
pop
push
push
and
arpl
add
aas
xchg
stos
js
data16
rol
cmp
mov
js
cmp
cdq
cmp
outs
(bad)
dec
idiv
add
std
rcr
loopne
sub
out
xchg
cmp
js
retf
cs
push
shl
xchg
cmp
gs
test
ds
push
retf
fisubr
and
add
jno
cmp
mov
or
cdq
sub
cmp
(bad)
jmp
scas
pop
and
pop
mov
inc
js
sub
mov
inc
mov
add
or
stos
pusha
es
xor
inc
rcr
xor
push
xchg
adc
test
sub
and
push
shl
addr16
sbb
nop
lds
lea
mov
mov
mov
test
mov
xlat
retf
dec
cmp
clc
shl
ds
out
cmp
fadd
mov
adc
sub
cli
(bad)
inc
sahf
imul
shl
(bad)
(bad)
fnstcw
ret
popa
aad
dec
dec
xor
inc
repz
hlt
int
sub
repnz
mov
or
cmp
out
out
xchg
pop
inc
mov
shl
idiv
mov
push
cmp
push
mov
and
inc
mov
mov
add
cmp
gs
cmps
retf
ret
leave
inc
fild
mov
pop
retf
mov
div
pop
shl
int3
retf
push
mov
cs
sub
in
inc
stc
gs
inc
sti
xchg
inc
mov
aaa
icebp
popf
inc
mov
adc
arpl
mov
pop
mov
mov
icebp
pop
add
adc
push
or
aaa
xchg
xor
inc
xor
mov
inc
jg
inc
push
bound
clc
in
out
inc
frstor
fild
data16
inc
inc
sbb
mov
lods
pop
and
or
inc
jbe
pop
mov
(bad)
(bad)
cmp
sahf
mov
sub
pop
cmps
push
retf
adc
inc
rcr
cmc
mov
movs
add
fst
shr
mov
stos
pop
and
push
aam
add
inc
adc
retf
stos
inc
cmp
inc
sub
inc
loopne
mov
inc
test
inc
inc
mov
push
or
xor
and
push
cs
retf
sti
scas
sbb
sbb
sbb
push
xchg
inc
dec
mov
pop
and
cld
cmps
in
clc
sbb
cmp
call
mov
mov
sub
mov
add
or
pop
dec
rcr
mov
inc
iret
mov
push
pusha
add
adc
push
pop
xor
inc
jbe
inc
inc
sub
ins
ds
iret
repz
fcmovb
mov
xchg
inc
cmp
lock
icebp
jl
add
push
movs
leave
adc
mov
scas
cmp
adc
mov
xchg
jmp
mov
outs
cmp
retf
push
lea
jo
cwde
loop
xchg
cmp
popf
fisub
cmps
loope
mov
jp
fisub
push
(bad)
icebp
fadd
mov
xor
pop
fistp
mov
push
test
jp
clc
or
sar
in
sbb
sbb
push
push
inc
stc
xchg
jae
jnp
push
ins
inc
movs
dec
xor
push
enter
inc
dec
sbb
mov
xchg
pop
scas
pop
and
or
mov
js
xchg
mov
add
(bad)
inc
mov
push
out
sbb
or
scas
adc
jns
shl
cmp
and
das
or
push
inc
lods
pop
mov
lea
cmp
imul
cmp
xchg
inc
dec
push
mov
pop
xor
push
(bad)
mov
adc
dec
cmp
ins
lods
(bad)
jmp
inc
dec
pop
pusha
imul
(bad)
retfw
sti
inc
inc
dec
mov
add
pop
xchg
out
inc
sub
aaa
lods
and
ins
sbb
retf
mov
adc
mov
movs
fld
nop
clc
(bad)
xor
xor
mov
cmp
cli
shl
cmc
inc
mov
pop
adc
rol
fnstsw
and
add
movs
cmp
adc
inc
out
addr16
popa
inc
outs
add
mov
sbb
popa
aas
cld
mov
jg
push
stos
fcomi
aas
test
sbb
(bad)
imul
iret
test
mov
int
dec
push
push
pop
inc
shr
aas
add
and
adc
add
inc
sub
push
lock
cmp
mov
mov
pushf
and
adc
inc
adc
push
sahf
mov
push
xchg
repnz
or
add
push
inc
retf
push
add
mov
add
scas
sbb
xchg
ficom
retf
test
mov
nop
dec
jl
inc
inc
test
jmp
sbb
addr16
inc
lods
jl
add
adc
xor
out
out
sahf
movs
adc
mov
fdivr
aad
loop
xlat
fs
test
je
push
lds
inc
jo
les
dec
inc
repz
in
push
icebp
fcmovnb
fucomip
pop
sub
aas
or
jle
ins
jb
push
repz
shl
inc
cmp
sbb
or
pop
test
sub
data16
jnp
cmp
jmp
ds
dec
and
ficom
push
jmp
inc
cmp
retf
add
inc
cmps
adc
adc
jle
das
pop
cmp
mov
call
ror
pop
js
dec
xlat
push
stos
inc
inc
test
xor
dec
retf
movsx
inc
test
mov
jno
cmp
and
gs
xor
or
es
jge
sbb
loope
inc
inc
cmp
lea
sub
out
repz
push
sahf
int
cmp
and
dec
rcpps
push
scas
out
xchg
retf
out
inc
addr16
imul
ds
sar
in
adc
icebp
iret
(bad)
cmp
push
(bad)
stos
pop
dec
outs
popf
inc
sub
ret
jnp
xlat
inc
inc
(bad)
mov
push
fnstenv
push
lods
adc
retf
in
addr16
enter
inc
mov
mov
jmp
sar
xchg
mov
aas
call
sbb
cli
xchg
ds
imul
xor
push
pusha
jns
push
repz
std
inc
xor
stc
mov
cmp
sbb
out
mov
mov
push
pop
or
inc
jbe
ja
xchg
xor
(bad)
push
inc
fild
jnp
sbb
jo
mov
inc
or
sub
mov
dec
enter
xchg
out
fidiv
shl
push
cmp
inc
jbe
loopne
movs
mov
cmp
or
mov
std
test
mov
stc
in
lahf
int
loopne
sahf
repz
int3
mov
pop
inc
aam
fs
cmps
stos
scas
cmp
jne
mov
mov
test
jo
out
lds
inc
dec
aad
inc
sub
or
imul
dec
cdq
rcl
pop
mov
test
inc
vmread
xchg
inc
cwde
jmp
dec
fnstenv
inc
scas
shl
jbe
xchg
push
jg
into
xlat
inc
sbb
mov
adc
push
mov
add
or
pop
loopne
sbb
cwde
dec
rol
xchg
lock
dec
xor
or
inc
outs
push
(bad)
and
pop
jnp
mov
jmp
aad
mov
idiv
xor
jne
mov
stos
pop
in
sbb
dec
mov
xor
ret
fdivr
js
dec
cdq
ret
movs
and
scas
sbb
inc
cmp
inc
lock
jmp
ds
std
cmps
or
and
push
mov
test
xor
cdq
or
fistp
adc
and
lds
and
inc
arpl
rcl
inc
pop
iret
idiv
aam
pop
imul
cmp
fld
pop
inc
icebp
mov
bound
push
shl
sahf
shl
fucomi
call
or
cmc
out
stos
ss
bnd
cmp
test
retf
adc
or
imul
imul
mov
adc
xor
push
lods
cmp
cmp
mov
test
mov
retf
test
lods
(bad)
sbb
pop
mov
leave
inc
dec
cmps
push
fwait
cmp
sbb
cld
dec
imul
stos
imul
inc
inc
aas
pop
sbb
fisub
dec
cmp
aas
scas
or
pop
or
scas
ins
dec
dec
adc
sub
call
cmp
(bad)
fcomp
mov
rol
inc
pop
mov
inc
mov
aad
or
xor
inc
pop
retf
arpl
inc
jl
adc
icebp
jl
mov
outs
sar
inc
daa
jecxz
inc
mov
xchg
add
adc
dec
std
push
cmp
cmp
pop
inc
xlat
dec
dec
xchg
sbb
pop
cmp
adc
mov
mov
lods
mov
movs
pop
fmul
clc
nop
adc
test
mov
test
dec
push
cmp
call
xchg
push
cdq
sub
pop
and
and
cwde
cmp
outs
fisubr
pop
jge
add
(bad)
sbb
aad
test
jecxz
cmps
enter
inc
fadd
hlt
cmps
loop
mov
fld
retf
ins
aas
inc
fdivr
rol
jecxz
int3
cmp
push
and
fcomp
inc
mov
sbb
jmp
cmp
test
fst
(bad)
cmp
inc
aas
loop
dec
jnp
mov
dec
adc
nop
cs
addr16
dec
call
popf
fmul
cmp
(bad)
scas
mov
ficom
dec
mov
test
and
pop
inc
cmovbe
jns
jge
pop
mov
xor
inc
inc
aaa
inc
es
mov
push
leave
cmp
inc
cmp
test
dec
sub
add
mov
push
add
pusha
dec
inc
mov
mov
dec
repz
in
inc
fs
call
std
mov
jp
inc
inc
shl
movs
ror
inc
test
mov
adc
xchg
add
cmp
xchg
inc
jmp
das
into
or
inc
inc
pop
fyl2x
dec
dec
dec
add
rol
cmp
sahf
and
pop
aad
inc
jp
bound
sub
xor
inc
xchg
and
mov
sbb
cmovo
ss
cmp
sbb
mul
inc
inc
cmp
stos
push
mov
jns
outs
cmp
call
and
sub
fs
mov
popf
xor
jle
inc
lock
sbb
test
(bad)
std
inc
inc
or
jmp
inc
xchg
popa
cwde
xchg
pop
test
mov
jmp
bound
sub
test
test
hlt
das
push
(bad)
out
dec
inc
jecxz
inc
stos
pop
mov
mov
cmp
mov
inc
lock
sbb
add
test
add
inc
or
ror
push
xor
jg
cmps
inc
fwait
sub
outs
sub
sub
inc
idiv
popa
inc
add
jp
out
(bad)
mov
sbb
cmp
sub
jmp
inc
lahf
out
inc
jbe
fcom
loopne
sbb
xchg
int
or
dec
add
jecxz
arpl
in
xchg
fimul
mov
inc
retf
pop
test
and
cmp
xor
pop
adc
sbb
jmp
sbb
dec
push
pop
imul
inc
iret
dec
adc
lods
scas
inc
dec
mov
jmp
dec
sub
inc
inc
gs
movs
and
ds
mov
daa
jmp
inc
inc
adc
icebp
or
mov
mov
dec
xor
cmp
cmp
std
fimul
iret
jae
inc
mov
lods
ins
xlat
arpl
cs
cmp
sub
idiv
jg
aaa
int
inc
jmp
and
add
jo
test
sbb
jns
dec
(bad)
and
and
mov
fcomp
mov
ret
(bad)
xor
or
pop
aad
sar
outs
add
pop
add
push
mov
cmp
or
mov
cmp
sar
mov
mov
jmp
xchg
inc
mov
and
mov
pushf
aas
fs
leave
cwde
mov
mov
dec
cmc
dec
and
xchg
and
cmp
sub
out
ret
sub
push
(bad)
in
xlat
int
inc
jmp
and
add
rcr
or
adc
sub
es
imul
arpl
rcl
xchg
out
(bad)
push
cmp
stc
dec
leave
pusha
dec
lock
inc
gs
cmp
mov
out
stos
mov
dec
push
inc
add
push
xchg
push
cld
inc
cmp
inc
addr16
fdiv
in
push
and
cmp
sbb
imul
cmp
lahf
cli
call
(bad)
int
mov
mov
ins
or
in
adc
stc
inc
jmp
adc
rcr
adc
dec
inc
jg
aad
push
cdq
cmp
scas
rcr
(bad)
mov
or
loopne
sub
hlt
push
add
xor
ds
arpl
gs
add
mov
scas
push
lock
add
test
(bad)
pop
inc
jp
sti
daa
in
dec
je
jp
cmp
push
gs
sar
mov
push
sub
mov
jp
std
inc
out
adc
and
xchg
loopne
jo
out
jbe
mov
inc
arpl
mov
pop
pop
add
loopne
push
jb
inc
sbb
sub
cmp
push
repz
and
ja
cli
adc
ret
cmp
gs
and
repz
arpl
inc
cmp
cmps
pop
cwde
sbb
mov
cmp
aaa
rol
cmp
inc
jne
cld
out
and
jo
or
jno
push
rol
pop
inc
popa
cmp
add
mov
js
imul
retf
fld
fmulp
sub
or
fcmovbe
inc
inc
pop
jle
ja
dec
jno
out
loope
sbb
inc
cs
mov
std
inc
or
cmps
fild
push
popf
inc
cmp
lea
cmp
inc
call
mov
push
test
fs
pop
jmp
scas
mov
test
popa
fadd
add
rcr
into
and
inc
jnp
je
inc
lods
pop
lea
movs
mov
clc
inc
aaa
mov
push
dec
cli
in
shl
lds
xchg
inc
imul
push
daa
jl
ret
fld
fidivr
sub
stos
push
mov
add
inc
cs
sub
imul
mov
inc
push
push
sbb
arpl
popf
inc
ss
fsub
stc
inc
inc
std
cmp
jbe
mov
or
out
mov
ja
test
push
inc
aas
inc
retf
fidiv
and
pop
inc
cmp
lods
jg
jnp
les
imul
cmp
mov
inc
add
dec
sbb
xchg
jno
jo
(bad)
out
retf
jl
mov
dec
inc
arpl
mov
ret
fld
aad
or
xor
rol
jbe
dec
call
mov
dec
inc
std
add
inc
mov
sbb
jecxz
repnz
xchg
mov
pop
cdq
cmp
cmp
div
pop
sub
cmc
inc
inc
or
mov
jmp
sub
add
add
aam
cmp
inc
pop
adc
ret
outs
push
or
or
xchg
xor
ins
int
inc
jmp
add
stos
or
test
lea
aaa
inc
dec
ret
rcr
mov
push
cmp
inc
inc
rep
addr16
ds
test
add
sub
cmp
adc
inc
xchg
sar
inc
push
arpl
fnstcw
or
lods
out
test
aas
mov
ins
mov
sar
outs
iret
cdq
jecxz
rol
jnp
jl
pop
mov
push
mov
cwde
inc
cli
imul
push
mov
inc
inc
fs
dec
jecxz
inc
mov
and
scas
inc
out
test
push
(bad)
fld
test
(bad)
ficomp
dec
imul
aad
rcl
xchg
cmp
popa
je
xor
add
arpl
std
mov
sar
mov
inc
jo
xchg
out
push
mov
xor
inc
and
mov
into
jbe
inc
jl
mov
add
xlat
inc
loopne
jmp
clc
ss
(bad)
mov
push
mov
popf
dec
mov
and
jl
test
xchg
aam
inc
sub
push
loope
jnp
(bad)
pushf
inc
fsub
fcomp
shr
push
inc
add
aam
dec
mov
into
inc
sbb
hlt
fabs
inc
inc
mov
lods
pop
sub
scas
xor
jno
jmp
inc
cmc
stc
fs
rcr
js
stos
cmp
push
ret
mov
fwait
(bad)
outs
inc
js
xchg
in
mov
inc
add
dec
clc
shl
jg
cmp
pusha
adc
dec
arpl
arpl
jne
mov
pop
xchg
aas
inc
pop
jae
mov
push
mov
popf
mov
jno
inc
jne
inc
leave
(bad)
push
fdiv
clc
cmp
pop
stos
jl
xchg
movs
ss
out
cwde
aas
call
rcl
mov
iret
push
mov
in
add
(bad)
cli
les
jne
enter
cmp
mov
mov
test
(bad)
cmp
pop
push
pop
mov
out
inc
xchg
aam
loopne
out
jb
jp
mov
xchg
test
cmp
enter
pop
inc
call
mov
dec
stos
jg
push
aad
sub
adc
jmp
popf
jg
xchg
inc
inc
(bad)
and
jae
dec
inc
and
dec
mov
push
iret
cmp
inc
jp
sub
retf
mov
popa
stos
jmp
xchg
out
jle
cs
fcmovu
movs
xchg
sub
and
push
or
inc
jle
je
ins
lahf
loope
inc
push
jne
inc
mov
aad
dec
inc
icebp
fdiv
int
jge
mov
daa
dec
pop
inc
jmp
cmp
inc
(bad)
iret
cmp
and
pop
push
mov
cmps
in
fwait
enter
sub
cmp
rcl
push
cmps
mov
ret
jg
dec
sub
mov
cmp
jb
pop
pop
cmp
xchg
ds
sub
lods
inc
jno
mov
jnp
xor
stc
jmp
inc
and
pop
push
retf
inc
sahf
add
movs
je
jl
add
mov
inc
xchg
clc
jmp
pusha
mov
inc
leave
loop
cli
sub
cmp
iret
stos
ret
mov
je
jmp
inc
imul
mov
mov
sub
sbb
pusha
cmp
cmp
movs
jle
jnp
inc
in
xor
loopne
stos
js
mov
inc
rol
ret
fldcw
inc
xchg
lods
lds
and
inc
push
dec
mov
sbb
adc
outs
inc
fadd
inc
xor
dec
inc
mov
inc
jmp
xchg
arpl
iret
push
inc
xchg
or
sub
cs
rcr
dec
cmp
xchg
test
and
pop
retf
lock
inc
cmp
cmp
dec
sub
shr
push
call
push
aas
jg
iret
addr16
cmp
pop
ins
sub
push
sbb
push
xor
inc
mov
mov
inc
pop
cs
imul
std
fdiv
sahf
sar
dec
mov
mov
or
cmp
cmps
mov
(bad)
cmc
aad
xchg
imul
inc
pop
(bad)
and
and
repnz
lods
enter
cmp
inc
inc
xor
movs
sbb
mov
mov
add
inc
inc
adc
dec
ror
jg
dec
xchg
mov
(bad)
cmp
mov
fstp
int3
aad
sbb
cmp
jnp
loopne
xor
aad
inc
or
inc
and
in
adc
ret
pop
inc
jge
xor
leave
cmp
xchg
push
xchg
jmp
lock
inc
push
shl
sub
cli
ins
ja
jnp
ret
or
cs
neg
ins
pop
retf
jae
xchg
xchg
test
cmp
mov
push
mov
ss
add
cmp
test
shr
shr
mov
cmp
cmc
cdq
mov
adc
and
mov
ja
cmps
jg
xor
add
xor
jle
imul
in
pushf
inc
push
cdq
inc
cmp
jb
sub
cmp
mov
inc
hlt
pop
jb
inc
xchg
xor
in
sub
sub
repz
cld
mov
test
inc
popa
sub
jmp
inc
dec
push
pop
pop
push
dec
mov
dec
adc
rcl
xchg
jmp
inc
aam
cmp
add
dec
dec
rol
push
popf
or
gs
jne
mov
out
jmp
push
or
mov
cwde
mov
sub
add
in
cdq
xchg
inc
dec
fdiv
xor
out
les
or
inc
push
rcr
js
inc
sub
das
call
inc
std
pushf
mov
pop
and
stos
inc
inc
cmp
ror
daa
fwait
inc
pop
inc
pop
rcl
cli
and
ffreep
pop
dec
cmp
pop
sti
mov
or
ds
test
lods
cmp
add
clc
ds
xchg
xor
shl
and
xor
cli
inc
sub
xchg
push
scas
xor
stos
xchg
mov
ja
adc
dec
jg
jecxz
aas
and
push
sub
or
inc
inc
sub
stc
adc
out
and
out
call
outs
xchg
adc
and
cmp
xor
xlat
mov
cmp
sub
mov
add
mov
mov
dec
in
cmp
jmp
leave
mov
push
inc
cmp
jne
add
aam
ins
into
xchg
stos
push
inc
ret
push
dec
cli
in
mov
add
add
inc
adc
and
sti
into
inc
inc
jno
and
cmp
add
cmp
lock
or
es
fwait
rcl
jnp
(bad)
(bad)
add
mov
inc
fdiv
dec
add
pusha
pop
or
cmp
and
sbb
or
das
inc
xchg
inc
sbb
mov
xchg
mov
es
jne
and
cmp
sbb
or
lods
mov
or
mov
push
enter
es
(bad)
and
or
cmp
out
xor
outs
arpl
imul
pop
push
push
(bad)
cmp
call
jo
cmp
push
adc
inc
icebp
les
jmp
or
test
inc
cld
dec
and
adc
sbb
fnsave
inc
retf
mov
mov
xlat
sub
(bad)
push
mov
jb
fdivr
rcl
call
push
(bad)
pop
xchg
sbb
push
(bad)
gs
loope
push
retf
jl
nop
rcl
cmp
div
aad
and
inc
pop
mov
add
inc
pop
ds
mov
sbb
inc
sar
js
cmps
jp
call
xor
lds
push
icebp
cld
jns
push
fwait
iret
sbb
jnp
cmp
sub
fcmove
movs
mov
std
sub
call
ror
push
into
addr16
js
xor
cmps
enter
cmp
js
push
cld
xchg
test
jns
loopne
int3
das
ds
adc
mov
and
inc
inc
push
jnp
sbb
inc
sbb
gs
jp
mov
movs
test
adc
cmp
pop
sar
imul
inc
xor
out
mov
inc
out
add
mov
ins
cmp
sub
mov
mov
test
imul
out
out
and
inc
cdq
mov
cmp
cmp
fwait
pop
xchg
sub
xor
inc
inc
leave
inc
and
je
sbb
dec
sub
or
imul
lea
cmp
call
xor
stos
sbb
mov
inc
cs
outs
cmp
ret
inc
inc
popa
cwde
jmp
inc
push
into
push
fcmovne
mov
lock
add
(bad)
cmp
jg
daa
and
dec
call
cmp
ds
xchg
test
sub
mov
mov
scas
sub
mov
js
call
xor
aad
inc
xchg
hlt
fdiv
cmp
fwait
inc
push
inc
lea
inc
xchg
popa
sub
arpl
inc
jnp
aad
cmp
fwait
ins
inc
add
or
mov
inc
mov
mov
push
or
or
cld
mov
mov
jp
movs
leave
mov
js
in
xchg
mov
cli
sub
inc
sar
jno
xchg
mov
and
pop
(bad)
fbld
push
sar
push
cmps
icebp
repnz
mov
mov
mov
cmc
inc
dec
outs
add
cdq
loopne
cmp
xor
js
jle
leave
data16
adc
sbb
mov
inc
pop
das
push
loopne
mov
jmp
and
mov
jle
dec
int
out
jmp
push
push
retf
fs
leave
cmp
popf
loope
cmp
inc
out
and
ds
lods
(bad)
mov
inc
push
sar
ins
mov
clc
xchg
cmp
jae
cmp
mov
inc
cli
sub
lahf
xchg
mov
xor
xchg
pop
loope
mov
or
inc
pop
add
or
test
inc
sub
movs
xchg
mov
inc
pop
mov
stos
pushw
retf
fs
leave
adc
daa
stc
inc
inc
mov
fwait
xchg
repz
js
pop
mov
lock
sub
mov
sahf
cld
xchg
adc
and
mov
pop
inc
fadd
dec
mov
stos
test
aad
movs
pop
dec
gs
xchg
add
adc
cmp
ja
addr16
sub
dec
pop
push
or
add
push
inc
(bad)
ror
pop
pop
mov
stc
les
inc
int
pusha
jg
dec
stos
sbb
add
mov
sub
dec
data16
retf
fs
sar
xchg
adc
addr16
or
aam
pop
mov
inc
and
arpl
test
inc
data16
inc
pop
push
popf
inc
sti
js
jle
pop
jae
or
mov
xchg
mov
inc
mov
sbb
cdq
jg
pop
fs
loope
push
adc
loop
xchg
aas
adc
cmp
mov
add
push
loop
test
pop
jecxz
ret
shl
ds
xchg
add
inc
inc
inc
mov
and
outs
cli
test
div
cmp
std
rol
mov
int
mov
cwde
inc
push
dec
(bad)
movs
pusha
mov
jmp
xchg
dec
xchg
ja
inc
cmp
add
or
sar
lea
xor
jne
add
push
into
retf
retf
fdiv
mov
xor
movs
(bad)
inc
jo
test
fmul
jns
jecxz
loopne
pop
pop
shr
inc
jmp
retf
and
gs
sub
xor
repnz
adc
adc
inc
and
into
mov
js
out
addr16
cmp
xor
mov
add
inc
sub
mov
mov
xchg
inc
lods
adc
xchg
inc
xchg
sbb
arpl
inc
fistp
ja
push
jecxz
or
inc
sub
cmp
cmp
mov
retf
inc
push
pop
add
cmp
xchg
pop
or
out
fsubrp
dec
inc
inc
and
inc
orps
inc
xchg
dec
pop
sbb
cmp
(bad)
jmp
add
repnz
mov
inc
or
sub
fsub
in
(bad)
jb
in
fsub
cmp
dec
fcom
jne
adc
cmp
cmc
loope
jno
mov
cmp
imul
adc
sbb
inc
inc
daa
pop
xchg
cli
(bad)
int
sub
or
retf
inc
xor
cli
dec
ins
mov
pop
cmps
cmp
iret
mov
jmp
xlat
jno
pop
test
sub
cmp
pop
inc
in
xchg
sub
stos
jnp
add
div
js
cwde
xor
pop
inc
add
mov
fs
lock
loop
mov
xchg
mov
jb
jp
imul
pop
sbb
xchg
xchg
pop
inc
sub
scas
mov
inc
cmp
cmps
mov
mov
push
push
cld
mov
pop
cmp
pop
lock
inc
mov
and
adc
pop
or
add
inc
push
fmul
cmps
imul
inc
fist
push
ret
inc
lahf
int3
leave
pop
rcr
jb
cmp
jmp
pop
(bad)
cdq
inc
xchg
mov
jnp
inc
jns
loopne
rcr
(bad)
stc
push
loopne
pop
jp
mov
and
aad
xor
push
add
jbe
sub
pop
cmp
int3
std
xchg
out
xchg
test
ret
and
rcr
cli
hlt
and
xchg
mov
mov
cmp
mov
push
imul
jno
xchg
sbb
inc
gs
cmp
fwait
cmc
mov
and
inc
dec
jge
jecxz
inc
imul
ins
jno
jl
in
add
sbb
clc
dec
sbb
test
and
push
retf
lods
loope
sar
fldcw
shl
cmp
fcos
sub
add
jmp
push
rcl
repz
lock
sar
(bad)
movs
add
xchg
inc
jecxz
inc
jl
lock
inc
push
(bad)
or
adc
fldcw
std
iret
test
fadd
and
aad
push
add
pop
jge
inc
mov
mov
call
jne
or
(bad)
cmps
pop
jecxz
or
into
xor
inc
sar
add
mov
jae
jle
inc
mov
cmp
lea
or
sahf
mov
gs
test
fadd
dec
sub
enter
push
int
lea
ret
mov
and
daa
push
stc
adc
ret
inc
pushw
test
fsubr
xor
push
inc
cmp
fstp
push
inc
push
pop
and
fadd
or
in
sub
cmp
mov
cmp
mov
enter
es
icebp
inc
int
popf
mov
xor
inc
mov
stos
jnp
mov
test
inc
jmp
imul
inc
repnz
addr16
adc
mov
sahf
inc
fisub
out
jmp
jns
shl
and
jle
push
add
jne
dec
sub
sub
mov
enter
jmp
(bad)
and
cmp
add
inc
js
hlt
fwait
xchg
inc
xor
mov
pop
cmp
(bad)
test
mov
popa
mov
mov
dec
inc
cmc
daa
scas
sti
xchg
rcr
dec
rol
xchg
push
inc
ret
xor
(bad)
jno
fist
aas
leave
inc
inc
mov
jecxz
xchg
cmps
inc
lods
test
inc
mov
inc
mov
fld
out
inc
in
into
inc
outs
inc
mov
popf
xchg
adc
addr16
xchg
inc
aad
fwait
iret
dec
inc
inc
repz
inc
popa
stos
iret
inc
mov
ds
call
jmp
adc
dec
adc
push
pop
cld
inc
mov
xor
iret
dec
inc
inc
repz
inc
retf
lods
or
iret
sbb
inc
aas
rcr
add
jbe
inc
inc
sbb
pop
inc
imul
inc
pusha
fnstcw
lods
jmp
inc
lods
ins
sbb
mov
dec
(bad)
stos
inc
mov
xchg
pop
inc
aaa
inc
jbe
aaa
inc
mov
dec
std
scas
inc
scas
inc
jbe
aas
dec
sbb
inc
sbb
adc
inc
outs
inc
movs
inc
sbb
xchg
mov
bswap
cmp
packsswb
adc
add
cdq
fwait
les
inc
ret
aas
sti
rcl
inc
idiv
call
xor
cmps
sahf
inc
jle
jp
shl
xchg
clc
jle
mov
dec
imul
inc
pop
inc
jb
inc
lds
inc
inc
das
push
lods
or
outs
push
ficomp
lds
test
pusha
mov
inc
ss
cmp
mov
mov
cwde
xchg
test
out
mov
mov
jl
mov
je
cmp
mov
xchg
shl
ds
sub
inc
cmp
sub
inc
stc
cmp
mov
cmp
inc
or
clc
inc
inc
xor
cmp
test
push
out
mov
xor
popf
inc
inc
hlt
inc
mov
pushf
cmp
adc
inc
sbb
inc
dec
cli
adc
inc
rcl
and
inc
cmp
inc
iret
push
(bad)
stc
or
jne
push
les
sbb
adc
inc
int3
fld
jp
xlat
add
dec
jmp
sub
inc
mov
fadd
rcr
push
inc
test
lods
push
das
ss
shl
repz
mov
mov
int
sub
cmp
pop
inc
mov
inc
sbb
sbb
cmp
cmc
dec
je
mov
shr
pushf
(bad)
inc
test
ret
repz
das
test
inc
push
pop
jle
shl
das
fwait
mov
push
scas
mov
xchg
and
or
aaa
cmc
mov
sbb
loopne
retf
inc
jno
inc
mov
dec
inc
push
push
inc
mov
outs
leave
js
pop
and
sbb
inc
ja
cmovo
inc
dec
test
push
inc
das
lods
inc
inc
dec
icebp
dec
cmc
push
lods
fld
aas
outs
pop
mov
ins
cs
sbb
scas
shl
push
xchg
jle
add
int
inc
sub
push
pop
inc
fsubp
inc
scas
inc
test
dec
add
repnz
mov
out
adc
dec
sbb
leave
fidiv
or
xchg
add
sub
inc
cdq
ret
mov
fwait
inc
test
inc
fild
out
pusha
lock
outs
inc
inc
pop
xchg
inc
mov
sbb
inc
sub
push
rcl
jle
pop
add
xchg
xchg
xchg
mov
clc
mov
add
or
rol
cmp
sub
in
icebp
inc
rcr
pop
inc
jl
into
mov
dec
jl
ins
inc
pop
inc
jnp
push
stos
jmp
mov
lods
aaa
arpl
mov
pop
jle
dec
(bad)
dec
inc
cmp
adc
sub
fbld
enter
dec
mov
cmp
sti
push
fisttp
add
test
inc
jmp
in
inc
imul
inc
cmps
inc
mov
dec
jp
mov
pop
inc
test
cmp
cmc
mov
mov
mov
pushf
mov
aad
mov
inc
sbb
jp
mov
retf
fdiv
push
bound
leave
fs
mov
lds
inc
xchg
jne
inc
sub
(bad)
pop
sub
bound
inc
dec
adc
repnz
out
repz
jecxz
sub
popf
ret
mov
les
sahf
and
ds
and
add
lahf
cmp
std
or
jmp
daa
dec
inc
inc
inc
repz
inc
cmp
pop
inc
jb
fwait
pop
clc
mov
add
dec
sbb
add
(bad)
stc
mov
sbb
pop
pop
mov
inc
(bad)
call
jge
mov
aas
hlt
aas
mov
cli
adc
js
jne
cmp
mov
arpl
mov
jle
cmp
inc
xchg
add
fmul
mov
inc
cdq
and
or
cld
cmp
fisub
sbb
pusha
fdivr
push
cmp
push
inc
out
mov
cdq
inc
std
out
jecxz
xchg
xchg
and
push
or
mov
inc
inc
pop
movs
in
xchg
cs
stc
fidivr
sbb
or
dec
xor
pop
daa
inc
add
pop
adc
test
mov
mov
or
mov
cmovo
adc
and
push
cmc
cmp
and
adc
(bad)
sbb
adc
inc
mov
pop
adc
adc
out
push
cmp
dec
ficomp
inc
sub
sbb
cmp
je
inc
dec
inc
dec
pop
adc
inc
push
test
inc
mov
mov
inc
pop
clc
int
fiadd
dec
movs
dec
inc
pusha
push
rcl
jle
pop
inc
fcomp
mov
test
icebp
int3
jbe
fld
mov
pop
fcom
mov
sbb
xchg
mov
retf
xchg
loopne
dec
inc
lods
inc
test
loope
push
push
pop
inc
sbb
push
int3
cmp
mov
pop
pop
sbb
popf
mov
sub
cdq
mov
pusha
cwde
std
cmp
sub
push
sbb
cmp
or
cmp
loope
add
retf
pop
pop
ds
std
jge
jno
shl
dec
mov
cli
(bad)
fdiv
inc
xchg
hlt
pop
add
jmp
pusha
or
fistp
ds
aaa
jae
push
cmp
adc
jno
inc
stc
xchg
sar
dec
shr
fsub
jns
dec
(bad)
jno
leave
pop
fidivr
ror
pop
add
pop
pop
sbb
loope
jge
cdq
iret
pop
fnsave
in
adc
je
imul
mov
and
jns
retf
int
sub
mov
pop
ins
jns
jp
js
sahf
pop
xchg
mov
sbb
fsub
(bad)
dec
inc
push
jp
sbb
mov
dec
loopne
push
adc
cmp
mov
add
sbb
dec
xor
hlt
jg
ret
test
fst
sbb
mov
push
leave
mov
or
shl
sub
popf
es
xor
or
add
pushf
test
fisttp
retf
cmp
cdq
or
pusha
and
sahf
inc
pop
enter
cmp
jbe
jno
jge
imul
cwde
ret
add
imul
mov
loop
inc
mov
add
in
leave
repz
and
cmp
mov
mov
ja
cmp
test
in
fild
inc
adc
aad
pandn
arpl
fdiv
scas
push
xchg
nop
adc
cmp
ja
inc
mov
inc
dec
test
sub
and
aaa
mov
sub
into
adc
clc
call
inc
repz
push
jno
dec
inc
jnp
push
cmp
inc
xor
test
xor
dec
sub
(bad)
xlat
push
push
repz
rol
pop
jno
retf
fmul
inc
test
daa
sar
sub
jecxz
aas
adc
pop
mov
mov
(bad)
in
repz
inc
jae
or
cmc
cmp
cld
inc
stos
mov
mov
pop
(bad)
leave
mov
mov
bound
mov
cmp
retf
cld
dec
mov
mov
shl
add
pop
test
fisubr
test
cmp
out
jge
stc
mov
outs
in
dec
mov
sar
sbb
cli
jae
cmp
aas
pop
rcl
clc
int3
inc
cmp
and
mov
xchg
or
repnz
jbe
enter
mov
ret
and
inc
imul
and
sti
and
test
test
mov
mov
inc
clc
stos
inc
out
fst
jp
fadd
cli
jmp
pop
inc
dec
aas
dec
out
(bad)
test
stos
inc
xchg
mov
push
mov
add
inc
bound
inc
aam
jno
lods
enter
test
jg
xchg
cs
aad
and
retf
and
adc
mov
sbb
retf
les
inc
ret
mov
pop
fistp
sub
daa
add
or
(bad)
push
sbb
fbstp
push
fcomp
pop
fs
icebp
int
mov
bound
out
jno
sbb
fdivr
js
mov
xchg
je
mov
xor
mov
push
pop
and
and
inc
rcr
stc
icebp
out
aas
test
js
mov
push
jb
mov
je
test
mov
sub
mov
js
mov
xchg
mov
sub
sbb
mov
loop
(bad)
lahf
sub
push
inc
loopne
nop
(bad)
mov
clc
aad
enter
add
fcmovne
test
add
or
sahf
cld
sub
jb
sub
ret
clc
popa
and
cmp
sub
fwait
shr
lock
jl
or
mov
sbb
xor
xor
shr
mov
ja
leave
xor
sbb
dec
push
mov
ja
cmp
jno
pusha
inc
xor
stos
call
jecxz
jp
jno
or
cmp
(bad)
jge
and
cmp
add
sub
scas
sbb
cmc
and
rcl
mov
push
mov
icebp
push
mov
mov
push
sahf
mov
fs
repz
dec
mov
dec
mov
pusha
dec
inc
hlt
inc
lock
idiv
scas
jle
adc
pop
hlt
in
daa
jb
and
pusha
jle
xor
sub
mov
call
jl
mov
sar
dec
sub
mov
jno
test
ss
push
push
sbb
or
cs
fs
mov
(bad)
dec
mov
in
jmp
fistp
mov
fdiv
sub
or
sahf
sub
loop
les
sbb
sub
mov
xchg
jnp
jl
jbe
cmp
fsubp
inc
pusha
jns
dec
or
ins
sub
mov
in
cmc
xor
jmp
cmp
push
je
jbe
cmp
cmp
xchg
stc
fmul
punpckhwd
arpl
mov
movs
mov
test
(bad)
aam
inc
iret
lds
sub
cld
mov
add
icebp
leave
pusha
inc
ret
push
mov
popf
jns
pop
lods
dec
inc
into
or
es
push
mov
pop
out
lea
inc
mov
or
repnz
cld
sbb
test
xor
(bad)
in
shr
mov
xchg
push
jnp
push
or
jne
ror
fwait
rol
xchg
or
cmp
into
push
cmp
add
je
(bad)
or
pop
jl
mov
sbb
sub
pop
(bad)
sbb
mov
mov
nop
sbb
jno
sbb
dec
fdivr
push
xchg
mov
sub
sbb
ds
adc
lea
mov
sar
pop
retf
cs
mov
and
mov
test
test
pop
data16
cmp
jg
ja
add
pop
mov
mov
mov
cmp
cmps
mov
pushf
stos
ret
or
bound
pop
pop
aas
into
mov
pusha
lea
daa
lea
push
lods
push
and
rol
mov
push
ds
dec
xchg
sbb
ss
push
lods
mov
cld
jge
cmp
mov
js
fstp
pop
inc
mov
pop
cmp
dec
fldenv
mov
sub
jne
and
cmp
xor
jmp
ds
sub
push
inc
ret
div
jo
or
sub
shl
xor
nop
test
jnp
fsubr
inc
push
mov
scas
out
in
jmp
fild
ds
cmp
jno
mov
retf
sbb
jnp
xor
jg
(bad)
lock
cmp
std
pushf
and
in
hlt
iret
cmp
mov
dec
repnz
adc
mov
out
and
rol
sub
mov
dec
jge
jmp
aas
cmp
aas
pop
jl
push
xor
lahf
int3
sbb
(bad)
sbb
les
push
test
dec
mov
call
pusha
jno
cdq
add
hlt
xor
xchg
mov
cmp
enter
dec
in
xchg
fdivr
jle
cmp
and
sti
pop
(bad)
rcr
cmp
jg
rcr
fsub
inc
jno
and
call
pop
in
mov
inc
cmp
cmp
push
cs
(bad)
mov
push
jp
inc
js
jmp
push
xchg
cmps
mov
arpl
movs
inc
into
fnsave
xchg
ss
stc
or
inc
mul
sbb
sub
in
xchg
dec
mov
cmp
idiv
ds
popa
adc
xlat
xor
or
nop
cmp
lock
dec
or
ins
mov
enter
aam
pop
inc
(bad)
sbb
loope
popf
ror
(bad)
mov
jo
pop
inc
fucomp
sub
mov
je
mov
sbb
inc
jg
enter
daa
push
mov
xor
out
pop
sub
repnz
loope
mov
ficomp
or
fadd
movs
add
sub
inc
mov
enter
mov
aas
por
rcl
inc
and
fdiv
cmp
cdq
shl
(bad)
cmp
icebp
movs
mov
inc
mov
sub
jns
shl
xor
hlt
ins
(bad)
jbe
inc
push
cmp
mov
or
iret
cmp
loop
push
mov
mov
mov
iret
add
cmp
mov
test
dec
pop
sub
xchg
sub
push
aad
sbb
push
dec
push
in
dec
or
fstp
pop
jns
sbb
packsswb
and
in
jb
jle
ror
sub
iret
pop
pushf
sbb
loopne
pop
add
jecxz
dec
xor
sbb
ds
cli
inc
push
fsubrp
jmp
hlt
mov
fnstsw
cmp
sbb
(bad)
je
mov
and
pusha
sub
dec
cmp
pop
dec
ins
cmp
xchg
mov
and
xlat
add
das
mov
push
cmp
mov
xchg
sahf
sub
scas
lods
jb
mov
js
aaa
and
add
js
(bad)
lods
add
xor
out
inc
(bad)
repnz
int3
sti
in
inc
jle
sub
loopne
addr16
mov
lods
push
imul
ss
inc
pop
call
fwait
test
or
add
jg
mov
lea
dec
call
mov
aad
inc
mov
shl
sbb
mov
inc
inc
test
mov
mov
xor
adc
neg
push
xor
mov
(bad)
adc
retf
mov
push
mov
jecxz
not
pop
mov
test
icebp
fisttp
inc
aam
jl
scas
jno
dec
inc
jmp
and
mov
mov
inc
push
iret
jbe
test
shl
mov
xor
lods
adc
xlat
scas
cmp
test
jne
mov
sti
xlat
fadd
jecxz
inc
aam
lds
mov
cmp
in
ficomp
adc
xlat
push
nop
xchg
inc
sub
repz
pop
jb
xlat
sub
loope
or
div
fiadd
add
inc
mov
cmp
and
add
std
enter
cmp
jl
adc
pop
mov
jp
ficom
and
mov
outs
jo
xchg
xchg
pop
out
out
pop
fwait
inc
rcr
inc
mov
add
in
xchg
(bad)
cmp
mov
cmp
mov
lea
div
fld
ret
(bad)
enter
neg
mov
imul
pop
xor
imul
in
(bad)
arpl
inc
jno
rcl
jmp
imul
sahf
movs
pop
inc
jl
imul
call
add
dec
sbb
add
cmp
jecxz
and
dec
pop
fs
cmc
mov
test
cld
jnp
dec
dec
sbb
and
xchg
sub
sbb
mov
fbstp
fcmovnbe
sub
mov
mov
dec
push
shr
ds
aad
loop
fdivr
jl
mov
push
loopne
mov
xchg
jmp
push
shl
sub
pop
sub
mov
sbb
mov
mov
nop
jns
js
jg
lahf
jl
test
add
or
dec
xchg
int3
xchg
adc
and
es
loopne
jno
or
jecxz
mov
or
push
mov
mov
xor
xor
jno
mov
and
xchg
fdiv
cmp
ja
fs
pop
sbb
out
pusha
cld
xor
lods
mov
cmp
ret
stos
mov
cmp
mov
xchg
out
add
jmp
push
sub
repz
jecxz
mov
or
xor
sub
mov
push
and
mov
mov
jns
in
cmp
push
dec
outs
loope
pop
mov
or
fs
lahf
idiv
lods
ja
fs
and
inc
fidiv
fwait
pop
sub
jno
cwde
jp
fs
cdq
mov
aas
sbb
aad
inc
mov
push
add
sub
sahf
inc
daa
pusha
jns
addr16
fbld
jno
out
jge
xor
ret
and
aam
ret
scas
enter
xlat
jle
ss
and
stc
rcl
cmp
inc
jno
jecxz
mov
pop
push
adc
rcl
enter
std
xor
dec
dec
inc
ja
cli
jno
lods
and
add
sub
xlat
jge
fs
xchg
mov
loopne
sub
jge
(bad)
daa
sub
push
jno
repnz
jns
jb
jnp
fisttp
das
dec
and
or
aas
repz
jle
xor
cmp
loopne
out
fdiv
mov
sub
cmp
cmp
lahf
xor
js
mov
fistp
rcr
fs
dec
dec
cmp
lea
sbb
loop
add
push
outs
fdiv
dec
inc
sbb
mov
mov
pop
mov
test
jmp
jno
jg
stc
cld
xchg
mov
add
mov
jg
jecxz
mov
xor
mov
mov
sub
xor
xchg
jl
icebp
mov
retf
imul
(bad)
sbb
pop
inc
dec
mov
inc
popf
sbb
mov
ds
mov
pop
fistp
sbb
sub
fdiv
fild
arpl
pushf
push
mov
js
push
enter
movs
lock
sbb
inc
stos
outs
or
pop
or
(bad)
cmp
fsub
loope
clc
mov
jns
inc
add
lock
mov
jmp
pop
and
cmp
xor
sub
xchg
aas
pushf
fisttp
push
cmp
loopne
out
sub
stos
push
(bad)
sti
mov
push
test
out
out
aas
push
push
outs
call
(bad)
or
std
add
sbb
cmp
ss
in
aam
adc
adc
icebp
xchg
push
push
mov
push
ds
mov
call
mov
lahf
xor
dec
call
shl
mov
mov
sub
mov
jns
(bad)
int3
hlt
bound
inc
pop
fisttp
dec
pop
dec
mov
fwait
lahf
dec
fmul
inc
push
es
or
(bad)
inc
push
enter
push
add
idiv
test
fsubr
outs
imul
add
lahf
jge
cmps
loop
inc
sub
adc
mov
cmp
es
inc
aaa
inc
test
in
int3
jne
das
cmp
pop
out
pop
dec
pop
leave
sub
into
mov
popf
inc
xchg
xchg
push
sar
push
nop
mov
or
adc
aas
scas
(bad)
fnstcw
inc
cld
in
mov
call
cmp
loop
sub
mov
xchg
retf
push
sub
pop
pop
cmp
mov
inc
loop
pusha
and
xchg
and
enter
cmp
and
sbb
in
(bad)
popa
inc
push
mov
shl
mov
add
inc
lds
rol
sub
iret
shl
and
test
aam
lods
mov
fsubr
push
cmp
cwde
or
dec
inc
fiadd
pop
cmps
pusha
in
into
aad
les
retf
fisttp
pop
add
add
push
mov
jg
repz
lods
sub
mov
xor
xlat
iret
and
int
inc
cmp
icebp
test
jp
dec
aaa
mov
xchg
sar
inc
ret
pop
jmp
mov
inc
iret
and
lahf
in
pushf
inc
ins
jmp
pop
dec
cmp
imul
ss
dec
fild
int
or
mov
push
outs
xchg
iret
sub
cdq
ret
and
fstp
inc
pusha
ret
pop
sub
rcl
into
mov
div
add
vpaddw
jge
mov
in
imul
aam
mov
imul
movs
nop
cmp
mov
inc
sbb
cmc
mov
or
mov
pusha
adc
push
sub
jg
rcl
jae
mov
mov
jno
mov
push
jp
push
mov
mov
gs
inc
dec
mov
mov
mov
dec
fdivr
(bad)
jp
not
std
out
outs
or
mov
push
inc
xor
and
dec
mov
xchg
inc
xchg
inc
pop
cwde
push
push
mov
inc
mov
mov
fnstsw
add
mov
leave
stos
jo
out
imul
stc
cmp
push
sub
inc
cmps
cmp
stos
xor
xor
dec
test
inc
dec
xor
push
push
jmp
cmp
and
dec
ror
jns
repnz
mov
jecxz
fdivp
pop
scas
push
push
mov
js
cdq
ins
rcl
or
pop
into
data16
inc
push
xchg
clc
mov
sahf
mov
xor
pop
ja
xor
or
aam
xor
mov
cmp
mov
jns
or
inc
mov
out
push
pop
mov
mov
shr
and
call
mov
sub
push
jno
je
idiv
xor
pop
push
(bad)
xor
ret
repnz
jl
mov
fstp
in
icebp
pop
fsub
mov
jl
adc
cmp
retf
ins
sbb
add
xor
je
stc
je
mov
push
repz
std
pop
add
mov
ret
(bad)
(bad)
out
ds
aaa
xor
mov
adc
mov
scas
dec
adc
mov
les
or
pop
fdivr
cmp
lds
xchg
cmp
(bad)
adc
movs
dec
pushf
cmps
cmp
(bad)
cmp
sbb
mov
sub
pop
and
lds
lods
test
adc
and
cmp
ror
and
dec
fdivr
pusha
push
dec
pop
aad
mov
inc
sub
repz
ss
xchg
pop
cmp
jno
iret
or
cmp
sbb
cmp
aas
inc
stos
mov
and
sbb
xor
loope
add
jge
sbb
outs
popf
fadd
out
in
jl
mov
(bad)
fadd
cmp
fnstcw
push
leave
in
pop
cwde
push
jo
adc
jp
pop
push
outs
lahf
sub
int3
mov
out
xor
jns
dec
or
mov
sbb
outs
lods
jae
xchg
cmp
ds
lds
push
and
ret
xor
jg
mov
mov
js
popf
jl
leave
ss
in
mov
jp
sub
jecxz
xor
push
je
push
cli
lahf
pop
push
dec
ds
rcl
fstp
es
mov
ds
and
sub
cmps
cmp
cmp
and
mov
fwait
pop
fld
jne
loopne
push
lods
test
shr
jb
pop
sar
or
test
sub
pop
mov
leave
jmp
or
jecxz
cld
or
mov
pop
fist
mov
test
mov
enter
adc
mov
pop
inc
inc
bound
cmp
and
or
out
cmp
push
retf
das
out
xchg
pop
(bad)
inc
sahf
cmp
adc
push
pusha
sar
jle
popa
push
mov
loope
out
fbstp
mov
xor
stos
retf
dec
and
fidiv
rcr
cmp
push
inc
mov
iret
push
in
cmp
push
dec
inc
ficomp
in
or
imul
add
mov
xor
xchg
xchg
test
jl
mov
cmp
push
into
hlt
xor
test
mov
adc
lds
inc
add
add
shl
call
mov
mov
xchg
in
iret
sub
mov
call
in
mov
aam
sbb
es
adc
xor
dec
or
mov
sub
lods
imul
and
call
call
outs
jl
je
inc
js
cmc
data16
enter
pop
(bad)
push
es
jbe
bound
inc
test
mov
push
push
sbb
adc
test
inc
sbb
cmps
xchg
repz
js
les
cmc
jnp
dec
in
push
xchg
xchg
add
repz
test
or
sub
mov
int
push
cmp
or
dec
leave
jg
aam
js
mov
and
mov
int3
fnstcw
pop
pop
mov
xchg
xor
aas
lahf
xlat
ja
sub
inc
in
inc
pop
fwait
nop
jbe
inc
pop
and
add
outs
jae
inc
lock
cmp
inc
rcl
neg
mov
adc
or
xor
cmp
xor
pop
jp
je
stc
les
inc
test
scas
push
mov
xor
pop
test
adc
jg
js
in
inc
(bad)
neg
lahf
sbb
dec
mov
mov
fcom
das
mov
push
loopne
fs
mov
bound
inc
jle
fstp
pop
lahf
mov
jg
out
xor
(bad)
and
mov
paddq
test
pop
push
pop
inc
test
and
xchg
jmp
fsub
xor
ror
lods
pop
inc
cmps
cdq
js
push
add
pop
cmp
or
inc
retf
xchg
inc
jo
cmp
mov
sbb
xor
sub
mov
mov
add
sub
cmp
stos
aas
mov
inc
sub
push
clc
retf
(bad)
and
jb
sti
imul
cli
fs
cdq
or
cmps
mov
sub
pop
je
aaa
mov
mov
add
mov
cmp
pop
imul
pop
adc
add
std
inc
jge
inc
adc
mov
fisttp
aad
dec
fs
jge
push
jb
jg
inc
mov
pop
xor
jnp
pusha
pop
mov
int
xor
pop
mov
push
jl
mov
inc
dec
adc
pop
or
add
jmp
lods
stc
cmp
fisubr
dec
dec
mov
mov
lods
repnz
js
jecxz
jge
addr16
test
mov
mov
(bad)
pop
fild
push
sti
inc
in
cs
fld
js
shl
mov
xlat
(bad)
adc
daa
xor
imul
xor
sub
add
xor
and
cmp
pop
jge
jge
mov
and
jo
ds
cld
aam
pop
shr
jno
jbe
mov
jb
cmp
pop
lock
jp
daa
cwde
(bad)
xchg
sub
adc
retf
(bad)
sub
fld
(bad)
sti
push
dec
mov
mov
jo
jp
ins
add
xchg
pop
call
cmp
cmp
fcomp
pop
movs
mov
in
cmp
out
data16
dec
jo
adc
xchg
and
das
fnstenv
pusha
pop
inc
xchg
aam
or
dec
push
cmp
mov
mov
jp
cmp
jo
inc
xchg
shr
adc
jo
(bad)
xor
mov
lods
icebp
mov
fstp
outs
push
les
add
sub
fsubr
fdiv
les
repz
arpl
mov
cmp
sub
jo
aaa
xlat
pusha
push
adc
xor
loopne
sbb
sbb
or
mov
jge
outs
fnstcw
cmp
adc
jbe
push
(bad)
neg
icebp
push
std
inc
and
push
je
cmp
jl
ret
cmp
pop
ins
fisubr
pop
xor
add
cmp
fdivr
pop
pushf
sbb
fstp
sahf
aas
mov
jge
pusha
cmp
test
ds
dec
scas
sahf
in
jge
jle
div
les
out
in
adc
mov
sub
aaa
mov
ror
sbb
ret
imul
mov
mov
outs
aaa
stos
bound
inc
push
dec
pop
in
push
div
sbb
(bad)
movs
and
pusha
cmps
xchg
js
in
add
jmp
mov
add
and
mov
pop
pop
sbb
shl
stc
lods
sub
jl
mov
data16
and
cmp
in
imul
in
shr
mov
jbe
les
enter
cdq
cmp
lods
inc
imul
movs
cmp
jne
in
jb
aas
std
fs
xchg
cmp
pop
enter
cmp
cmps
and
sbb
sbb
(bad)
xlat
xor
retf
pop
mov
rcl
dec
pusha
jmp
adc
std
sbb
mov
jns
clc
mov
adc
ret
jle
push
cmc
mov
push
dec
xor
mov
xor
jo
cld
cld
fdiv
sbb
jns
enter
rcr
and
sbb
sti
mov
jge
rcr
lahf
jp
dec
push
je
retf
pop
mov
adc
jge
pop
xchg
sbb
sar
clc
pushf
rol
aas
les
js
mov
push
push
fist
mov
fs
fldcw
rol
movs
ror
jle
adc
mov
fsub
hlt
out
mov
push
jne
ror
xor
pop
or
cmp
call
fiadd
push
inc
pop
inc
push
ds
add
repz
ret
fs
popf
cmp
sbb
retf
nop
dec
jge
jl
jns
lea
popa
repz
push
mov
xor
mov
pop
pop
int
inc
lods
xor
in
lods
fbld
jo
frstor
sti
in
jl
fld
add
push
mov
push
xchg
pop
inc
mov
cmp
add
push
sbb
sbb
sbb
cmp
je
les
fsub
add
inc
jmp
sub
out
cmp
fs
add
adc
(bad)
push
js
sbb
enter
fsubr
push
inc
movs
movs
mov
sub
test
in
cmp
bound
cmp
inc
test
test
jns
cmp
push
or
pusha
inc
sbb
inc
cwde
mov
repz
ja
cdq
push
ret
mov
push
and
(bad)
(bad)
fild
outs
xchg
ret
inc
sub
cmp
mov
inc
xchg
test
cli
mov
hlt
ret
inc
aad
push
in
xchg
retf
or
inc
in
or
stos
sbb
mov
scas
test
push
jb
repnz
xchg
call
add
shl
sub
cmp
mov
test
mov
adc
or
mov
and
cmp
xchg
push
enter
dec
xchg
rol
adc
inc
jmp
push
int3
sub
test
xchg
mov
mov
xchg
cmp
push
push
and
std
retf
inc
xlat
ret
and
or
ins
push
iret
jmp
daa
fadd
inc
jle
fcomi
add
cmp
push
pop
adc
or
mov
mov
cmp
es
popf
bound
push
sub
dec
jno
in
cli
cmp
or
xchg
mov
and
mov
mov
jae
test
cmp
add
cmp
mov
or
inc
(bad)
ret
int3
pop
into
movaps
neg
add
loopne
dec
fdiv
adc
jp
aad
leave
loopne
ffreep
ds
xor
mov
movs
sub
jle
push
mov
jge
mov
test
fadd
xor
dec
mov
outs
or
cmp
push
sub
std
out
inc
cmps
jl
jno
mov
sub
int3
xlat
loope
mov
not
sahf
(bad)
cmp
or
or
adc
jbe
in
in
jl
jmp
jecxz
ds
mov
inc
test
push
add
push
loopne
add
xor
cmp
sbb
xor
in
(bad)
or
je
lahf
or
jge
mov
data16
mov
(bad)
pop
pop
mov
xchg
xor
sbb
(bad)
mov
adc
icebp
cmp
and
cmc
rol
inc
push
jae
stc
sti
cmp
jge
mov
mov
cmp
nop
mov
(bad)
fst
ds
lock
xchg
mov
cli
iret
(bad)
lahf
pop
into
aas
cmps
pop
scas
jge
shl
sub
or
dec
fdivr
xchg
jno
or
sbb
inc
dec
sar
xchg
mov
(bad)
mov
je
addr16
lods
(bad)
xor
jno
push
mov
repz
popa
jge
(bad)
cmp
push
shl
mov
fst
jo
or
in
es
push
mov
mov
sbb
mov
cmp
movs
cmp
push
arpl
xor
mov
hlt
ss
fs
aas
xor
into
dec
xor
sbb
dec
mov
add
sub
cmp
push
inc
xchg
pop
add
mov
shr
mov
mov
das
lahf
xor
mov
xchg
test
xchg
inc
lahf
nop
and
nop
and
lods
xor
je
jns
ds
mov
arpl
push
pop
or
mov
sbb
aad
and
ja
xor
xchg
mul
sub
out
fmul
fdivr
ficomp
inc
loop
ins
scas
adc
bswap
add
adc
sub
pop
int
call
xchg
(bad)
loop
call
js
jp
jbe
loop
xchg
adc
inc
or
mov
loope
mov
retf
loopne
mov
in
mov
or
inc
mov
adc
pop
inc
pop
dec
lock
into
(bad)
jl
mov
jge
mov
jmp
ja
loopne
jg
iret
mov
std
cwde
adc
(bad)
les
mov
cmps
popa
add
sub
push
std
cmp
sub
aas
add
and
movs
inc
out
fld
popf
jnp
test
in
inc
pop
(bad)
scas
xor
bound
xchg
mov
push
add
imul
or
cmps
xchg
outs
jnp
cmp
inc
enter
sbb
and
data16
movs
dec
or
loopne
(bad)
cmp
mov
in
jle
add
bound
sub
add
das
adc
mov
jp
pop
inc
ja
mov
in
sti
cmp
and
add
cli
sbb
sub
push
xor
xor
out
sub
pop
scas
mov
fucom
push
fbstp
cli
add
loop
(bad)
shl
inc
cmp
cmps
hlt
pop
aas
and
xor
and
dec
out
cmp
shr
pop
ss
faddp
inc
inc
inc
adc
jecxz
cwde
push
push
rcr
enter
clc
imul
add
lahf
fld
test
sbb
ret
or
adc
stos
mov
cmp
hlt
stc
jge
adc
add
in
repnz
xchg
fidivr
shr
xor
dec
xlat
inc
dec
and
push
out
fdivr
pop
and
lock
(bad)
add
ret
repz
gs
mov
inc
jns
stos
fwait
popf
mov
adc
aad
sub
sbb
loop
inc
and
dec
xchg
sbb
sti
(bad)
cmp
imul
fsubr
int3
sub
out
mov
xor
dec
inc
push
mov
xchg
in
cmp
push
inc
fsubp
push
inc
pop
les
or
pusha
cwde
mov
push
call
inc
jne
cdq
inc
fstp
or
adc
mov
mov
repnz
fabs
add
and
or
xchg
inc
adc
lods
sahf
mov
pop
xor
push
repz
pusha
cmp
cdq
cmp
nop
jecxz
cwde
push
arpl
inc
jg
pop
push
mov
inc
cmp
mov
cld
sbb
mov
inc
out
cli
xlat
push
ss
mov
mov
inc
hlt
sar
inc
out
dec
cmp
in
inc
jns
mov
fsub
push
inc
jno
test
cdq
jns
dec
setle
xchg
dec
lods
add
and
mov
rcr
shl
js
xor
cmp
add
add
lahf
mov
push
mov
push
xor
and
jns
jmp
cmc
sub
mov
ror
fst
adc
mov
sbb
outs
in
fild
mov
sbb
outs
xor
je
jns
cmp
fs
lds
adc
out
cmp
sbb
cmp
cmp
pop
gs
jno
jl
ds
sbb
loope
cdq
or
(bad)
sub
mov
outs
mov
int
xor
push
sub
sbb
aas
loop
ins
jmp
jns
jne
sub
add
call
cmps
retf
in
dec
pusha
cmp
jl
int3
jae
push
cmp
xchg
adc
jns
inc
sub
jge
push
lods
fstp
dec
call
pop
mov
dec
pop
dec
jo
sub
jg
mov
or
mov
adc
xor
les
sub
and
aaa
scas
dec
push
shr
pop
(bad)
jns
inc
iret
cmc
or
xor
xor
(bad)
jmp
pop
imul
scas
fwait
xchg
or
cmp
enter
rcr
inc
arpl
outs
mov
adc
(bad)
aam
lea
cmp
and
inc
outs
cmp
inc
pop
pushf
xor
xor
aas
sbb
cmps
ret
in
pusha
cdq
into
sbb
mov
cmp
sbb
call
out
lock
outs
sub
(bad)
adc
cdq
inc
movs
adc
test
dec
ins
push
fdiv
enter
sub
jno
pop
cmp
ss
or
inc
xchg
push
jbe
dec
stc
out
lods
pop
cmp
test
cmp
sbb
sbb
and
dec
push
scas
aas
aas
jp
cs
push
fild
nop
imul
sub
loope
stc
jmp
ror
sbb
mov
mov
test
inc
test
pop
cmps
out
rol
jp
(bad)
aam
jle
inc
fs
jecxz
cli
cmp
cmp
hlt
xchg
cmp
out
out
bnd
out
cmp
loope
inc
xlat
mov
outs
aas
pop
iret
sub
scas
mov
inc
adc
inc
or
loope
movs
in
pushw
mov
nop
mov
test
xor
xchg
(bad)
shr
xchg
cmp
xchg
test
xchg
cmc
mov
mov
stc
ret
cli
or
inc
bound
lock
add
sub
inc
dec
adc
mov
sti
mov
(bad)
and
daa
xchg
mov
enter
jb
rcl
xor
mov
out
xor
dec
cmp
mov
bound
cwde
jns
sub
mov
dec
(bad)
lock
jo
ins
push
inc
push
dec
std
aas
sub
fstp
(bad)
hlt
add
jmp
fisub
adc
push
jmp
cmp
aaa
ss
inc
in
inc
cs
pop
mov
dec
fdivr
add
or
fwait
xor
aas
push
clc
jl
out
cmp
pusha
sar
ret
shl
jmp
shl
or
fadd
es
ja
pop
nop
xchg
dec
js
fild
mov
cmp
test
jae
jl
sbb
fld
ret
mov
(bad)
loop
sub
in
fdivr
js
int
push
shl
or
pop
in
ds
and
xlat
mov
fs
cmp
jns
fdiv
ds
adc
cmp
test
mov
rcr
xchg
shl
or
in
dec
retf
stc
xchg
inc
je
pop
fmul
js
maxps
jmp
inc
jge
sbb
cmp
ret
call
call
mov
out
(bad)
fnstenv
pop
mov
pop
jo
into
gs
idiv
sbb
add
jae
nop
mov
xor
je
gs
pusha
and
pop
and
jo
jns
lods
ins
js
or
mov
push
lods
dec
cmp
fistp
in
xlat
jbe
sbb
repz
jno
mov
pop
xchg
push
push
daa
inc
(bad)
aas
cli
or
fwait
ds
je
adc
add
mov
pop
pop
loopne
add
fisub
push
add
or
mov
psllw
xchg
out
fmul
mov
mov
inc
xor
fld
test
pop
xor
xchg
dec
sar
pop
and
leave
sbb
std
pop
pop
add
(bad)
inc
xchg
xchg
inc
inc
je
xchg
imul
jno
ficom
sub
and
sub
mov
xchg
xor
mov
cli
mov
fidivr
cmp
sbb
add
mov
icebp
dec
sahf
lods
and
mov
clc
add
fidiv
and
iret
cmp
andnps
fdivr
adc
les
cmp
(bad)
repnz
cmp
sahf
xor
loope
and
leave
inc
jno
outs
mov
or
adc
fmul
xor
in
adc
pop
mov
call
mov
fiadd
je
pop
mov
and
adc
sbb
and
xchg
pop
cmp
mov
inc
push
cli
push
inc
mov
stos
cmps
sub
cmp
inc
and
xchg
arpl
adc
ja
inc
fadd
pop
jmp
cld
xchg
mov
rcl
inc
xlat
popa
das
js
mov
mov
aad
lea
mov
pop
daa
mov
pop
pop
xor
mov
fimul
cmp
ret
shl
add
std
add
or
xchg
cmp
inc
xor
pop
sub
std
pop
int
jb
sub
push
inc
leave
pusha
call
in
inc
push
or
movs
jmp
mov
gs
inc
sbb
xor
xchg
pop
jge
inc
pop
cmc
mov
xchg
lea
loop
dec
inc
test
and
mov
sub
ds
stos
mov
dec
and
fistp
xlat
fbld
xor
push
mov
mov
push
int
loop
cmp
adc
test
mov
mov
pushf
jmp
inc
(bad)
popf
xchg
movs
sub
rol
int3
push
imul
in
stos
inc
mov
sti
mov
mov
dec
popa
movs
outs
std
mov
call
mov
jge
push
aas
sub
pop
loopne
jl
mov
pop
dec
sub
adc
sbb
retf
inc
je
mov
mov
(bad)
xchg
inc
pop
and
mov
enter
call
mov
lods
jns
cmp
add
leave
enter
xlat
xor
std
add
sub
inc
push
mov
mov
add
jae
cld
ror
and
adc
movs
es
fld
in
inc
mov
mov
jecxz
and
enter
cwde
mov
mov
jb
dec
mov
sbb
(bad)
jecxz
test
jne
mov
mov
(bad)
cli
mov
inc
(bad)
lods
pop
xchg
shl
xchg
cmp
xlat
mov
scas
lds
sar
pop
push
push
movs
mov
sbb
pop
or
(bad)
sbb
mov
or
xlat
enter
inc
mov
loope
hlt
test
sbb
enter
cmp
pop
sar
pop
cmp
push
icebp
inc
xchg
fwait
call
fucomi
mov
inc
aaa
ficom
bound
sbb
loop
jno
mov
(bad)
out
pop
sub
adc
dec
jo
sbb
sub
rol
fcomp
shr
inc
sub
js
(bad)
fistp
pop
int3
jg
inc
dec
sbb
push
in
adc
pop
rol
mov
cmp
int
add
out
push
stos
mov
aad
ret
mov
inc
jl
and
cmps
push
je
inc
into
mov
cli
cdq
pusha
dec
adc
inc
fdiv
xchg
out
aas
push
cmp
stc
fdivr
cwde
and
adc
add
push
inc
inc
adc
push
jle
xor
xchg
sbb
adc
dec
dec
cmc
add
lods
fcmovbe
les
mov
mov
adc
mov
fld
cmps
fdivr
push
mov
cmp
mov
in
mov
inc
add
mov
and
or
outs
mov
rol
pop
repnz
xchg
pusha
jge
inc
jae
imul
in
aas
cmp
adc
mov
fisub
arpl
sub
dec
inc
and
ins
mov
xchg
inc
inc
sahf
push
into
in
and
dec
inc
mov
mov
repnz
add
ds
and
mov
sub
(bad)
les
xchg
or
loop
shl
retf
(bad)
cmp
outs
jne
(bad)
push
xlat
popf
or
adc
ror
(bad)
sub
mov
mov
inc
inc
push
(bad)
data16
mov
dec
cld
sub
or
outs
and
inc
mov
inc
fdivr
aaa
(bad)
(bad)
sub
inc
repnz
cmc
sar
cmp
lds
inc
cmps
dec
add
adc
mov
and
pusha
adc
inc
and
mov
(bad)
inc
dec
test
out
sbb
pop
inc
inc
dec
pop
sti
(bad)
pusha
push
inc
les
scas
into
mov
push
int3
ds
inc
fwait
inc
lock
iret
les
call
scas
jecxz
(bad)
bt
lea
cmp
add
aad
fneni(8087
ja
inc
adc
out
imul
pop
mov
call
cdq
add
adc
mov
aam
ds
cmp
ins
adc
cmp
inc
les
stc
and
xchg
enter
inc
dec
xchg
icebp
adc
push
or
jmp
rol
cmps
sbb
xchg
xchg
inc
mov
sub
and
inc
pop
call
test
adc
cmp
fbstp
cmp
inc
sub
pop
stos
and
sub
aad
and
mov
inc
data16
sub
call
sub
fwait
cdq
pop
cmp
mov
and
ins
mov
je
pop
bound
mov
jne
pop
jo
js
lods
add
fsubr
jno
pusha
icebp
rol
jge
fwait
push
repnz
aas
test
and
retf
iret
inc
enter
adc
mov
sub
inc
jge
in
jle
pop
arpl
int
(bad)
test
scas
jns
cs
test
cmp
mov
cmp
retf
popa
cmp
les
jns
cmp
mov
rol
pushw
in
loopne
test
add
cmps
(bad)
jge
mov
mov
les
popf
mov
int3
inc
cmp
jge
pop
sbb
pop
jb
in
fidivr
jmp
sti
push
jge
dec
mov
fdivr
sbb
xchg
sub
push
popf
pop
ds
(bad)
sub
int3
jns
xchg
push
add
xchg
cmp
xor
adc
cmp
mov
std
fnsave
scas
shl
fcomp
sbb
push
xchg
dec
adc
arpl
fs
les
aas
mov
imul
ss
movs
pop
mov
(bad)
mov
push
cmp
addr16
jno
xor
push
adc
dec
jp
pushf
sbb
in
enter
dec
jge
jno
into
cdq
dec
xor
jns
dec
outs
call
sub
into
retf
cmp
(bad)
jns
jmp
sub
pop
push
mov
mov
pop
(bad)
and
test
push
push
mov
es
icebp
cmp
mov
xchg
sub
xor
jo
push
call
cmp
pop
sub
data16
fld
pusha
push
out
pop
pop
mov
leave
mov
pop
jecxz
cmp
inc
add
int
add
arpl
ret
in
nop
and
jge
mov
call
mov
inc
jb
loop
in
stc
aad
jp
mov
pop
dec
mov
mov
sub
movs
cmps
and
or
scas
in
push
sbb
ret
int3
nop
dec
adc
rol
pop
jbe
mov
fisttp
into
scas
bound
mov
inc
loopne
aad
fiadd
dec
inc
fild
adc
mov
cmp
adc
call
xor
cmp
sub
cmp
(bad)
hlt
fisub
xchg
sbb
iret
inc
dec
sbb
dec
xor
rol
call
fdiv
cmp
sub
aaa
inc
shr
cmp
inc
and
pop
xchg
loop
rol
loope
mov
mov
xor
cmp
sar
sti
xchg
add
xchg
test
xchg
cmp
mov
mov
mov
sar
inc
bound
xchg
and
jl
fdivr
xchg
sbb
inc
mov
cli
xlat
and
out
(bad)
dec
push
ins
stc
ds
sahf
jae
pop
inc
xchg
jp
add
cmps
or
and
fnstsw
inc
adc
(bad)
fcmovb
push
dec
fcom
mov
scas
(bad)
cmp
fild
jg
adc
add
test
fdiv
mov
inc
inc
(bad)
push
xor
aad
ja
adc
mov
nop
and
test
fiadd
inc
jle
pop
and
nop
fs
jge
pop
(bad)
and
dec
jle
sbb
sti
retf
call
aas
or
push
or
jl
sub
adc
dec
cmp
in
and
call
pop
jb
gs
mov
sub
stc
xor
into
mov
stos
mov
jge
adc
xor
cmc
jo
cmp
pop
inc
push
into
iret
cmps
cmps
xor
in
mov
js
jno
adc
jge
mov
mov
scas
adc
stos
imul
add
push
gs
call
(bad)
dec
cmp
stos
ins
test
xor
div
lea
mov
mov
sub
xlat
adc
cmp
ins
dec
pop
xor
inc
or
fcomp
imul
ja
jmp
lods
aas
fild
sti
data16
shr
fiadd
inc
(bad)
pop
aad
popf
popa
xor
inc
inc
sub
sbb
lods
mov
icebp
cmc
xchg
inc
xor
retf
aad
push
push
fidivr
push
inc
outs
repz
mov
or
or
int
xchg
inc
or
sbb
push
pushf
dec
push
push
pop
aam
lods
cmp
xchg
jb
mov
lock
les
mov
sbb
inc
mov
imul
cmp
push
xchg
pop
jecxz
mov
test
jp
pushf
adc
(bad)
mov
push
mov
inc
sbb
sbb
xchg
cdq
inc
loope
retf
xchg
or
stos
inc
inc
or
(bad)
test
and
mov
ror
add
scas
add
pop
fs
into
sub
sbb
push
stos
movs
aas
inc
adc
js
push
outs
inc
mov
or
dec
adc
pop
test
inc
std
stos
sti
push
xor
aam
inc
jg
ds
ins
jae
jb
add
mov
fidivr
push
int
in
loopne
push
pop
shl
stos
inc
mov
cmps
cwde
adc
inc
ficomp
xor
cmc
shr
sti
push
xchg
or
sub
adc
inc
ja
cmp
fwait
mov
push
scas
stc
push
inc
jne
pop
inc
fldenv
or
mov
mov
pusha
sub
rcl
(bad)
sbb
cli
arpl
inc
gs
lods
sti
out
cld
jmp
stc
in
(bad)
call
int
xchg
out
adc
inc
add
cld
cmps
mov
cmp
xchg
lods
sbb
ja
mov
pop
xchg
sbb
leave
cmp
fidiv
cmp
addr16
dec
not
and
or
mov
inc
mov
mov
push
mov
pop
ret
mov
push
sbb
stos
pop
out
(bad)
das
in
inc
(bad)
pop
jmp
jecxz
ror
cdq
mov
cmp
mov
ret
stc
dec
sbb
jbe
sub
aaa
push
cwde
dec
pop
or
sahf
std
cmp
jmp
add
jbe
mov
mov
(bad)
dec
cmps
lods
xchg
push
dec
icebp
ss
retf
cli
fisubr
xor
sbb
test
pop
cdq
cmp
jb
hlt
sbb
outs
inc
int
push
cmp
adc
push
push
cmps
mov
inc
or
sti
cmp
test
cmp
mov
rcr
enter
pop
iret
sbb
cmp
into
rol
inc
jns
pop
dec
lods
ficomp
inc
fimul
sub
sbb
push
scas
or
jb
jp
sbb
add
or
cmc
arpl
(bad)
push
call
(bad)
(bad)
test
outs
ret
stc
add
fwait
mov
xchg
jo
dec
mov
std
inc
cmp
adc
and
push
dec
movs
inc
mov
(bad)
cmp
or
inc
iret
dec
jl
push
mov
sbb
push
pop
inc
cmp
(bad)
in
icebp
push
fdiv
imul
pop
in
sub
cld
lods
inc
adc
js
in
inc
gs
(bad)
mov
data16
lods
add
lock
cld
cmp
std
jecxz
fs
inc
jne
(bad)
and
sub
addr16
mov
jmp
(bad)
out
cmp
or
rol
outs
imul
out
xchg
sbb
add
mov
movq
jmp
jb
mov
fnstcw
push
adc
iret
fisubr
test
retf
fcom
es
mov
inc
(bad)
in
test
inc
push
xor
cmp
and
rol
(bad)
in
enter
dec
dec
pusha
ds
clc
jbe
dec
js
push
iret
and
fld
enter
sub
scas
inc
outs
jns
push
fisttp
add
inc
popa
push
jmp
mov
cmp
sub
nop
dec
dec
fwait
mov
loope
inc
jmp
test
cmp
sbb
add
mov
dec
pop
sar
pop
ret
jmp
xchg
xchg
(bad)
mov
jmp
imul
clc
mov
inc
das
data16
inc
cmp
cld
dec
(bad)
sbb
into
inc
pop
cmp
inc
loope
push
dec
inc
xlat
jmp
inc
push
ret
idiv
dec
(bad)
and
daa
pop
jae
mov
cmp
mov
lea
pop
test
add
cmp
mov
shr
jl
and
retf
inc
mov
mov
mov
push
cmp
mov
cld
xchg
jge
mov
sar
mov
adc
sbb
and
cmp
push
jns
test
add
add
cmp
sahf
mov
loopne
sahf
push
sbb
jo
jbe
sub
movs
xor
xor
or
cmp
jno
inc
fist
out
jns
dec
mov
sub
ins
mov
adc
xor
cmp
cmp
lahf
aad
mov
mov
lods
imul
jge
mov
mov
cli
inc
addr16
call
imul
arpl
cmp
cmp
imul
jns
xchg
inc
sbb
fbstp
adc
arpl
push
nop
push
jns
ret
je
nop
mov
or
jns
or
adc
in
inc
inc
js
je
jge
jmp
mov
jmp
je
pop
test
pop
mov
iret
mov
call
cdq
call
dec
ss
sbb
dec
jl
sar
xor
mov
or
jnp
dec
pop
pop
mov
je
fucom
fmul
pop
out
icebp
bt
js
jno
ins
retf
and
jge
inc
push
jle
jns
jmp
push
mov
dec
lahf
pop
pop
xchg
lock
xchg
jg
and
xchg
xor
test
cli
push
inc
cmp
dec
push
dec
push
dec
pop
int3
xchg
inc
and
es
(bad)
cmp
out
iret
popf
inc
cmp
add
dec
mov
cmp
mov
inc
cs
and
les
inc
daa
cmps
movs
out
js
cmp
rep
rol
addr16
iret
inc
or
cli
mov
pusha
outs
gs
sub
push
shr
(bad)
cmps
cli
mov
add
mov
out
jns
cmp
jmp
popa
movs
nop
sbb
push
inc
push
imul
and
fldcw
arpl
jecxz
sub
in
out
jae
inc
jge
sub
int3
fidivr
pop
je
xor
push
cmp
js
out
sub
mov
pop
and
sub
retf
imul
(bad)
pop
jns
out
leave
mov
dec
stos
xchg
jns
mov
pop
ja
iret
(bad)
leave
adc
inc
das
cmp
jmp
lea
mov
mov
les
aam
cmp
push
mov
in
pop
mov
push
and
stos
js
sub
pop
je
or
dec
retf
cmp
mov
loopne
inc
sbb
mov
xchg
jle
mov
mov
lods
jl
mov
mov
dec
cmp
test
push
mov
shl
push
jno
pop
fwait
icebp
arpl
mov
test
adc
clc
jb
or
xchg
cld
stc
and
mov
mov
mov
pop
leave
xor
cwde
shl
sti
mov
mov
xchg
in
aaa
xor
shl
mov
out
inc
xor
inc
cmp
or
or
jg
mov
repz
xor
lds
fsub
and
test
jl
rol
sbb
aas
je
adc
adc
pop
out
mov
mov
pop
sub
mov
(bad)
test
jno
adc
push
dec
int3
sbb
popa
aaa
sub
cli
add
popf
pop
call
(bad)
mov
rcr
ins
(bad)
stos
xor
cmp
in
dec
js
cmp
bound
test
jno
vpsubd
inc
fsub
jbe
mov
repnz
fisubr
xor
mov
xchg
or
and
enter
push
jg
adc
xchg
dec
jbe
sub
leave
ror
int3
add
jno
or
test
add
adc
fsubr
cmp
dec
fs
add
mul
jge
mov
test
xor
mov
mov
ds
nop
test
cdq
push
sysexit
pop
or
sbb
cmc
mov
iret
inc
shl
jns
sub
fisttp
mov
test
dec
jl
sbb
call
sar
xchg
mov
ins
cs
out
inc
inc
cmps
mov
sub
jnp
jno
mov
mov
(bad)
repz
in
cmp
or
jae
mov
push
inc
xorps
dec
inc
cmp
lock
ds
xchg
inc
(bad)
pop
ret
mov
inc
jmp
cmp
cmp
add
inc
jne
jbe
mov
and
adc
jecxz
shl
mov
inc
(bad)
arpl
mov
or
inc
pop
nop
pushf
fdivr
add
inc
pop
imul
dec
mov
mov
mov
and
pushf
inc
scas
jmp
push
fldlg2
dec
je
imul
sub
mov
xchg
not
in
movs
pop
cmp
test
ss
cs
cmc
adc
scas
sbb
mov
jo
mov
ret
test
test
inc
add
mov
retf
(bad)
(bad)
mov
add
dec
cld
retf
mov
sbb
es
fs
xlat
pop
or
adc
sub
inc
cmps
into
ins
sub
cmp
add
inc
and
movs
sbb
sub
sub
inc
push
cmp
gs
or
mov
cmp
xlat
mov
icebp
inc
mov
out
cli
adc
popa
ja
iret
fistp
xchg
sti
jmp
adc
sub
loope
shr
push
jae
inc
cmps
popf
and
and
dec
mov
xor
sahf
test
ins
jle
cdq
sbb
mov
(bad)
cmp
inc
pop
test
out
or
or
xor
xor
xchg
cmc
dec
dec
out
inc
imul
cli
ins
fstp
arpl
sbb
cwde
es
ret
and
bound
loop
mov
pop
xor
out
xchg
fbstp
bound
loop
xor
test
cmp
cs
jns
xchg
mov
jle
sahf
(bad)
xor
push
fdiv
mov
rol
fs
mov
ds
mov
sbb
dec
adc
pop
mov
xchg
or
sbb
ret
pop
jle
inc
sbb
sub
pop
mov
mov
xchg
jae
out
cmp
or
pop
mov
mov
and
icebp
stc
mov
mov
xlat
and
push
aaa
shl
xor
xor
les
sub
fcom
cmp
cmps
test
cmp
popa
mov
ret
jne
push
int
mov
jbe
loopne
outs
sbb
(bad)
repz
jns
mov
cmp
mov
fwait
stos
jbe
push
jo
dec
sti
fiadd
xor
jge
and
mov
mov
xor
fsubr
icebp
add
call
cmp
iret
aam
jp
(bad)
mov
cmp
push
loopne
std
maxps
ds
(bad)
clc
and
in
imul
adc
movs
mov
popf
aam
retf
jecxz
jp
test
jno
clc
or
jns
and
out
stos
jbe
int
pop
add
call
mov
fs
jne
out
cmps
push
cmp
cmp
fadd
sbb
loope
cmp
or
inc
adc
mov
mov
int3
test
jge
clc
mov
hlt
jmp
jge
xchg
xor
ret
shl
push
mov
adc
xor
mov
xor
xchg
gs
mov
cmp
xor
sbb
xchg
(bad)
cmp
cwde
sbb
cdq
leave
jle
jb
js
popf
lock
xor
inc
jns
adc
out
cmp
or
dec
and
popf
inc
push
sub
das
sub
(bad)
mov
daa
cmp
xor
call
pop
fsub
add
fdiv
call
aas
xchg
add
pusha
ds
pop
or
fimul
les
push
push
inc
popa
mov
fsubrp
inc
jg
ins
stos
dec
imul
out
cmp
fistp
test
inc
sbb
loop
pop
aas
fldcw
dec
call
fld
fimul
inc
fdivr
fisttp
cmp
out
(bad)
lods
or
dec
jns
or
cmp
xchg
mov
(bad)
inc
js
xor
jmp
fdivr
cld
inc
out
xchg
xlat
fisttp
sbb
jge
or
cmp
dec
and
inc
pop
retf
je
mov
add
mov
pop
cmp
jmp
(bad)
jbe
push
test
int3
push
lea
shl
push
sub
mov
repz
je
xchg
pop
fs
out
push
dec
retf
xchg
cwde
push
push
mov
mov
mov
in
ins
shl
push
cmp
push
jno
xor
aam
aad
cs
das
push
sbb
fdivr
or
push
cld
call
jg
adc
fadd
mov
pop
sbb
and
lea
aaa
stos
sub
fsubr
(bad)
mov
sbb
or
dec
arpl
jns
lds
fnsave
jmp
sbb
pushf
add
mov
and
mov
(bad)
arpl
outs
loopne
jae
xor
in
mov
jmp
cmp
popf
je
cmp
and
or
or
push
cmp
in
das
not
js
pop
imul
push
push
inc
mov
(bad)
jecxz
(bad)
fadd
aaa
dec
test
adc
inc
cmp
xchg
add
add
inc
fs
bound
xchg
inc
inc
xbegin
jg
out
pop
movs
cmp
mov
dec
xchg
mov
pusha
imul
inc
(bad)
loopne
sub
inc
jmp
gs
cmp
ret
loopne
fisttp
fisttp
loopne
inc
mov
iret
sub
xchg
jmp
and
push
(bad)
cmp
bnd
arpl
xchg
adc
push
jnp
inc
sahf
sbb
lods
push
inc
sub
jns
pushf
adc
dec
push
loop
dec
and
jno
add
adc
ins
sbb
call
mov
xor
push
jns
pop
into
mov
sbb
mov
cmp
js
repz
add
repnz
repz
push
xor
and
jne
pop
aaa
stos
push
gs
pop
sub
popa
mov
jns
jl
xchg
sar
and
sar
pop
xchg
inc
jmp
jno
out
les
shl
cmp
pusha
sbb
and
jns
dec
popa
cmps
stos
jno
jle
adc
xor
pusha
and
ret
push
pop
add
cmps
push
mov
repnz
dec
adc
or
jno
stos
inc
stc
jno
cmp
into
(bad)
cli
adc
push
jo
addr16
mov
sbb
out
aas
fst
add
pop
into
imul
jmp
push
mov
jnp
adc
inc
pop
jecxz
test
cmp
addr16
aas
jns
mov
inc
jno
cmps
js
inc
mov
or
pop
pop
mov
pushf
iret
aam
mov
jbe
(bad)
cli
hlt
fs
cmp
jns
mov
jo
mov
push
push
mov
and
sbb
pop
jge
loop
cmp
fadd
data16
sahf
sbb
icebp
imul
jge
inc
mov
push
jns
aad
lods
pop
inc
and
out
and
and
lods
dec
jl
lds
lea
jno
scas
out
fldcw
mul
jge
les
jns
repz
mov
adc
cmp
(bad)
imul
scas
or
and
lahf
inc
jge
loope
addr16
mov
jno
dec
jno
cmc
cwde
cmp
and
push
mov
fwait
ss
jno
ins
icebp
lods
popa
sahf
loopne
test
push
movs
ins
js
or
mov
pushf
test
add
sbb
jne
stos
cli
xor
lock
je
jno
jmp
sub
cmp
mov
test
adc
sahf
inc
dec
add
inc
mov
ss
retf
add
cmp
out
xchg
inc
inc
xchg
cmp
push
pop
push
mov
jnp
fiadd
out
jb
cmp
or
rcl
xor
ret
and
cmp
inc
dec
xchg
mov
(bad)
(bad)
inc
imul
mov
inc
or
mov
loopne
imul
jl
shr
les
push
dec
cmp
sub
cwde
jle
out
dec
scas
and
imul
pop
inc
cmp
sbb
les
xor
xchg
cmp
xor
mov
dec
cmovg
xlat
jg
js
jg
test
mov
mov
retf
shr
stos
inc
imul
bound
ficomp
pop
mov
test
dec
jmp
or
jp
loop
inc
clc
inc
push
add
dec
mov
icebp
ficom
fs
ja
test
movaps
pop
sbb
mov
fcomip
jp
shl
enter
not
dec
dec
jbe
mov
aas
fucomp
dec
sysret
xor
aas
sub
pop
and
std
sahf
fild
(bad)
cwde
icebp
inc
enter
sub
aas
jnp
mov
sbb
int3
(bad)
mov
pop
repz
inc
mov
add
pop
cdq
xor
and
or
scas
test
scas
fmul
push
inc
and
pop
inc
mov
xor
sbb
shr
fs
cli
cmp
ret
push
out
inc
stos
jo
mov
dec
mov
push
xor
mov
rcl
aam
pop
call
or
xor
xor
cwde
inc
cs
test
shl
mov
out
call
shl
loope
push
gs
or
pop
cmp
nop
stos
xchg
or
pop
mov
into
xchg
cmp
dec
sti
jmp
or
add
push
inc
sub
pop
shl
cmovo
repz
inc
xor
lock
inc
fcomp
sub
cmp
mov
gs
mov
lods
cmp
push
pop
test
push
inc
mov
sar
and
in
jb
cmc
jnp
aad
leave
mov
movs
jle
push
inc
add
or
nop
mov
mov
test
rcr
mov
xchg
jno
jbe
mov
nop
pop
int
cmp
adc
std
addr16
in
inc
inc
cmc
pop
das
leave
icebp
dec
bound
push
je
push
outs
fwait
add
xchg
sbb
push
mov
jp
push
sub
movs
sbb
retf
push
inc
call
test
in
in
ds
inc
ds
sbb
sbb
ret
fisttp
xchg
mov
in
xor
pop
outs
jmp
std
movs
mov
fsubr
pusha
int
movs
popf
inc
aas
call
cdq
jle
xor
daa
or
dec
jmp
dec
out
cmp
xor
(bad)
inc
fs
shl
js
mov
mov
js
sub
(bad)
dec
sar
mov
sbb
es
cmp
mov
jle
pop
sbb
mov
lahf
mov
call
in
adc
movs
mov
pop
dec
rcl
xor
daa
mov
push
mov
inc
sti
sbb
ja
push
lds
push
pusha
pop
xor
mov
call
or
adc
pop
dec
stos
cli
out
sub
jmp
cli
in
inc
mov
push
add
xor
outs
pop
dec
mov
xor
mov
mov
adc
jle
push
xor
and
imul
and
icebp
and
imul
jns
dec
push
rcl
fisubr
cmp
sbb
inc
in
cmp
rcl
pop
add
mov
pushf
repnz
aad
pushf
leave
mov
mov
sti
lods
dec
mov
mov
popa
(bad)
mov
call
add
mov
js
leave
cmps
add
sbb
cmc
int
ss
popf
(bad)
imul
dec
fs
std
in
adc
stc
or
movs
xor
pop
or
lods
jmp
lods
adc
ja
push
jl
inc
mov
jno
mov
add
fmulp
(bad)
jns
push
adc
jno
inc
sub
shr
push
mov
jl
and
mov
call
cmp
fcom
inc
mov
ins
and
cmp
leave
stos
xchg
test
mov
or
jae
or
loopne
(bad)
sub
clc
repz
inc
push
fcom
rcpps
test
jp
dec
movs
cmp
push
nop
out
sub
je
mov
std
dec
inc
popf
cs
movs
sbb
push
jmp
leave
xor
or
xchg
or
hlt
stc
push
in
test
loope
sbb
jmp
fcmovbe
out
out
mov
out
inc
cli
imul
scas
cmp
fstp
inc
loop
into
loopne
aad
and
adc
shl
lahf
aam
inc
gs
jge
rol
call
dec
pop
les
inc
adc
add
inc
push
inc
xchg
sub
push
out
or
inc
mov
dec
lea
or
mov
or
adc
mov
jne
and
in
test
xor
cwde
jp
ins
adc
inc
fucom
jne
outs
mov
cmps
jl
lahf
xlat
aam
js
jmp
cs
ds
fninit
ror
and
inc
fwait
test
mov
mov
inc
and
push
lock
pop
or
mov
mov
push
cmp
mov
xchg
xchg
or
mov
test
push
mov
add
dec
push
push
out
mov
stos
fwait
inc
pop
ret
xor
add
sub
inc
movs
in
push
inc
popa
pop
adc
jle
sub
cmp
cmps
outs
adc
fwait
mov
fnsave
(bad)
mov
jg
pop
sbb
dec
mov
jp
cmp
mov
imul
mov
or
adc
push
fbld
sbb
fld
and
inc
data16
mov
dec
mov
add
push
dec
cmp
(bad)
adc
mov
mov
popf
mov
dec
push
mov
fsubr
or
cmps
inc
jno
mov
aas
mov
mov
std
mov
inc
daa
cli
in
push
fucomp
pusha
mov
test
stc
inc
inc
cdq
and
jno
das
pop
clc
inc
push
int
adc
cmps
ror
mov
mov
mov
mov
jae
sub
imul
ror
mov
lds
cmp
sti
mov
out
cs
jl
stc
fistp
loopne
fcom
pop
push
test
cmp
in
in
add
mov
cmp
push
mov
add
and
sar
or
cmp
fld
test
dec
or
cmp
and
sti
jle
ja
pop
xchg
stc
dec
pop
add
test
neg
mov
mov
pop
movs
lea
mov
ficom
icebp
aam
xor
(bad)
mov
xlat
es
jno
sbb
pop
or
jbe
cmp
jo
(bad)
jg
dec
fisttp
rcr
add
adc
xchg
xchg
inc
(bad)
cmc
outs
and
xor
xchg
or
int3
pop
push
loopne
jl
inc
cmp
push
out
je
inc
xor
adc
fs
pusha
cmp
jl
jle
cmp
mov
stc
pop
mov
iret
scas
in
daa
pusha
repnz
cmp
jo
push
push
mov
ret
push
pop
cdq
inc
fdivr
popf
mov
aas
outs
cmp
add
(bad)
xchg
(bad)
sub
jg
outs
mov
sahf
inc
xchg
(bad)
jl
dec
les
fs
sub
(bad)
xor
into
shl
mov
stos
dec
xor
icebp
mov
xor
jno
dec
jae
in
sub
cmp
mov
sub
push
std
fisttp
aam
mov
lahf
jno
sub
and
fwait
lahf
cmp
push
pop
lahf
fadd
ss
loopne
and
out
js
fadd
xor
cmp
push
jl
pop
sub
inc
aaa
add
lock
cmp
push
sbb
or
mov
in
add
inc
sub
or
jg
lds
push
inc
pop
ss
xchg
shr
pop
aaa
dec
add
ror
lahf
add
test
call
xor
clc
jp
xchg
js
cmp
add
xor
test
sbb
inc
pop
inc
aad
or
(bad)
inc
mov
mov
gs
xchg
or
je
mov
mov
les
sbb
(bad)
gs
mov
xor
xchg
cmp
pusha
inc
inc
cmc
add
nop
and
inc
mov
cmp
and
xchg
mov
pop
bound
out
push
test
test
in
jecxz
mov
mov
cmp
(bad)
push
or
(bad)
iret
xchg
popf
mov
inc
push
lock
arpl
cdq
out
pop
test
ins
out
sbb
inc
cmp
cmp
ins
and
(bad)
popa
inc
clc
push
jbe
inc
inc
bound
jae
xchg
movs
adc
ret
push
ins
sub
mov
mov
adc
sub
int3
or
cmp
jecxz
repnz
dec
aam
inc
mov
sbb
xabort
dec
bound
mov
test
push
pop
inc
rcl
scas
push
jae
push
cmp
push
lahf
and
or
add
mov
movs
inc
inc
(bad)
xor
dec
mov
sti
lock
mov
mov
cmps
cmp
mov
push
aaa
movs
cmp
xor
cmp
mov
pop
movs
je
inc
push
stos
lods
stc
cmc
jne
(bad)
pop
in
jmp
jno
xchg
push
cmp
xchg
jp
ja
cmp
xchg
retf
into
fdiv
ins
xor
into
sar
jns
jge
inc
in
mov
and
and
xchg
mov
enter
or
or
xor
test
stc
sub
les
aam
jg
sbb
inc
inc
cs
sub
inc
push
out
movs
push
pop
dec
pop
add
fdivr
int3
inc
outs
data16
cld
je
scas
ret
adc
xlat
int3
mov
repz
jne
shr
call
xchg
cmps
call
je
stos
pop
stos
test
add
ds
ins
xor
add
mov
sub
cmc
cld
dec
les
stos
test
dec
xor
arpl
xchg
test
aas
xor
imul
or
xor
add
test
sbb
xor
cli
inc
push
repz
jno
loopne
inc
inc
pop
jle
inc
inc
inc
popa
inc
sbb
and
jae
iret
cwde
enter
cmp
sub
and
sub
cmp
dec
jb
into
sub
xor
inc
cmps
push
(bad)
scas
out
inc
pop
push
dec
es
push
outs
push
cwde
fsubr
out
cmp
lea
int
(bad)
ds
ins
hlt
pop
inc
lods
fwait
lods
jns
push
dec
dec
or
data16
xchg
xchg
jmp
fmul
int3
inc
(bad)
cmp
std
stos
lods
sub
inc
pusha
repnz
or
gs
inc
xchg
(bad)
jmp
ins
inc
cmp
aam
xor
dec
repnz
stos
popf
stos
jae
repz
inc
inc
cmp
and
retf
cld
popa
cmc
inc
icebp
push
test
pop
push
dec
rol
inc
arpl
add
sub
leave
jl
sti
bound
loopne
enter
lds
pop
sbb
icebp
sbb
add
retf
enter
cmp
shr
(bad)
dec
ins
inc
cmp
mov
xor
sub
bnd
not
scas
dec
das
cmp
dec
dec
dec
dec
inc
cmp
in
gs
loopne
cmps
rol
mov
cmc
icebp
or
sti
lods
xchg
scas
mov
out
push
addr16
cwde
pushf
jmp
fiadd
cmps
movs
retf
dec
mov
inc
jp
ss
inc
hlt
cld
lods
mov
lods
leave
ds
aas
inc
fbld
inc
xchg
mov
movs
pop
inc
ds
into
int3
imul
das
not
inc
jl
jmp
sub
xchg
sahf
jmp
aas
pop
push
mov
pop
inc
xchg
xchg
loopne
and
pop
cmp
aaa
mov
cld
inc
cs
outs
test
dec
inc
arpl
add
mov
inc
mov
dec
push
leave
scas
loopne
fld
pop
mov
sub
and
bound
rol
pop
das
cmp
fld
jno
pop
jbe
cld
inc
xor
inc
mov
lds
dec
lods
iret
fdivrp
stc
repnz
test
inc
dec
pop
pop
dec
and
jne
mov
fld
into
jmp
arpl
(bad)
cmc
pop
lods
call
inc
inc
push
addr16
adc
jmp
inc
mov
inc
(bad)
out
clc
dec
outs
das
mov
cs
call
jmp
xchg
int3
jae
cmp
and
mov
gs
mov
scas
jmp
adc
jge
es
xchg
stos
xlat
stos
aaa
pop
and
mov
xchg
scas
lock
stos
sbb
rcl
sub
les
inc
ret
iret
shr
push
pop
inc
into
dec
cmp
cmps
inc
leave
cmps
sti
(bad)
jo
clc
pop
mov
lods
cmp
inc
dec
bound
retf
inc
js
cmp
mov
test
fincstp
push
retf
jbe
inc
xor
int3
or
sti
inc
repnz
neg
scas
push
scas
jno
cmp
js
loope
fadd
fwait
or
idiv
retf
add
inc
xor
addr16
js
imul
shr
leave
mul
js
push
shr
jge
pop
mov
sub
imul
aad
lods
inc
cmp
jl
sub
or
cmp
mov
jns
lods
mov
aam
and
pusha
inc
push
dec
outs
pop
inc
test
pop
lods
pop
xor
jb
sbb
pop
cdq
jg
inc
fsubr
jns
imul
inc
inc
mov
xchg
adc
cmp
not
out
pop
sbb
and
ss
xchg
jle
pushf
mov
cdq
cli
fdivr
add
lock
inc
lods
inc
jecxz
aas
mov
outs
xchg
into
dec
ror
inc
rcl
add
aas
xchg
cmp
xor
mov
sub
sub
xchg
or
xchg
into
or
jns
cmp
aam
xor
xor
pop
xchg
mov
push
jns
test
fadd
mov
add
cmp
jb
(bad)
mov
mov
scas
aaa
addr16
and
(bad)
stc
inc
mov
mov
adc
ficomp
retf
loope
les
dec
xor
sub
inc
(bad)
or
and
mov
mov
mov
xchg
call
jb
aas
nop
jno
mov
repz
push
jl
push
fdivr
jmp
push
je
daa
mov
add
cmp
xor
inc
test
add
add
inc
or
pop
je
push
fidivr
ja
or
and
and
push
jns
or
xchg
push
xchg
jge
mov
add
sub
push
adc
mov
inc
xchg
fmul
mov
cmp
or
push
ds
fadd
inc
dec
hlt
mov
mov
(bad)
xchg
or
push
mov
aad
inc
jno
mov
dec
push
and
(bad)
pop
ins
inc
cmps
pop
and
popa
ficom
inc
cwde
or
aam
xor
leave
pop
sub
and
or
packssdw
mov
jp
jo
mov
pop
popa
iret
fdivrp
imul
inc
sub
lods
xor
mov
cmp
inc
xchg
clc
addr16
js
or
and
pop
push
aad
inc
jne
mov
pop
and
inc
add
aaa
cwde
stc
inc
mov
daa
push
mov
sub
fwait
push
mov
jmp
jbe
xor
aas
outs
jl
mov
push
or
push
add
ds
cmp
enter
mov
push
add
push
aad
clc
cmp
cld
dec
pop
in
pop
ja
mov
and
fiadd
dec
inc
popf
sub
push
and
mov
inc
fstp
stc
call
cwde
dec
dec
or
sub
cmp
push
jb
sar
push
ds
cmp
mov
lods
inc
cmp
inc
fst
js
repnz
outs
jbe
pop
sub
add
mov
mov
sub
mov
dec
cli
sub
les
mov
cmp
imul
fiadd
mov
inc
dec
xor
scas
ds
mov
test
inc
mov
std
push
(bad)
retf
and
pop
aas
adc
sub
stos
vxorps
fnstsw
adc
pop
call
inc
jns
das
cwde
jge
push
xchg
cwde
xor
iret
or
mov
xchg
int
cmp
jp
xor
outs
aas
jl
jge
fwait
shr
mov
pop
push
inc
aad
push
gs
cmp
mov
sahf
lea
mov
aad
mov
jae
pop
icebp
outs
sub
cmp
les
or
mov
outs
in
call
inc
nop
and
inc
dec
add
sti
js
jg
cmp
add
cli
xor
ret
sti
imul
lods
xchg
and
push
ja
mov
dec
or
pop
mov
dec
inc
pop
pop
cmp
xchg
adc
stos
ds
mov
sti
inc
stos
jp
xchg
xor
push
inc
fisubr
and
push
nop
inc
push
ror
(bad)
movs
push
ins
test
mov
sub
or
jmp
dec
inc
push
pop
or
push
mov
(bad)
pop
push
and
hlt
xor
jg
aas
repz
pop
push
pushf
dec
jns
jns
or
outs
xlat
les
int
sub
js
sahf
push
or
mov
xchg
test
inc
sti
cli
add
mov
lods
xor
shr
inc
inc
mov
mov
push
xchg
dec
xlat
repnz
pushf
sbb
lods
mov
add
ss
ret
jge
mov
call
pop
movs
pop
into
clc
movs
push
inc
dec
adc
in
mov
mov
add
test
scas
mov
loopne
stc
aad
into
pop
sub
mov
mov
gs
lahf
add
inc
cmp
cli
xchg
inc
sbb
cmp
call
push
mov
aad
dec
jnp
dec
es
mov
fwait
arpl
addr16
frstor
push
(bad)
loopne
xor
pusha
push
ror
jnp
pop
jge
inc
or
xor
out
enter
inc
data16
xor
mov
cld
std
xor
mov
sbb
loop
inc
mov
fld
cmp
imul
jnp
ins
dec
pop
inc
add
sub
cmp
dec
mov
inc
stos
or
xchg
inc
cmp
xor
sub
xor
retf
add
adc
pop
push
or
xor
stos
mov
call
ja
inc
cmp
push
(bad)
inc
dec
sahf
fist
popf
mov
add
sbb
ds
movs
sahf
inc
mov
cmp
nop
or
ja
adc
and
sub
stos
xor
adc
sub
not
cmp
je
stos
cmp
mov
gs
xor
inc
sbb
scas
cmp
xor
fmul
aaa
push
pop
xchg
inc
jecxz
jge
stos
lock
xchg
add
xchg
repnz
shr
sar
pop
(bad)
mov
mov
jb
pusha
push
sbb
enter
in
sub
sbb
xchg
(bad)
inc
push
add
out
je
xor
cdq
mov
std
sub
lock
rcl
adc
mov
mov
ficomp
inc
push
pop
or
fmul
test
cmp
mov
out
mov
inc
jg
in
cs
gs
dec
rcr
xlat
popa
jecxz
adc
jmp
int3
ds
cmp
jmp
cmp
test
scas
aaa
pop
inc
in
cmp
pusha
and
retf
cmp
fadd
scas
mov
fwait
mov
fs
fisttp
test
push
and
call
jecxz
mov
or
fisubr
xor
imul
cmp
jb
xor
je
push
jmp
ds
pop
sbb
mov
jnp
inc
mov
lods
or
jns
or
fimul
cmp
and
or
mov
and
aad
sbb
ins
or
dec
loopne
mov
inc
test
dec
stos
scas
inc
jecxz
xchg
pop
mov
mov
inc
add
ins
dec
xchg
xor
(bad)
sahf
lds
das
dec
pushf
push
xor
sub
adc
push
test
stos
out
fiadd
cmp
sbb
(bad)
push
adc
enter
sbb
outs
xchg
xor
sar
das
int3
popf
jns
mov
cmp
mov
out
inc
pop
(bad)
ss
xchg
adc
jb
and
mov
cmp
adc
xchg
inc
mov
push
mov
cmp
adc
fdivr
rsqrtps
sub
cs
retf
add
es
jecxz
add
inc
or
jns
adc
clc
inc
(bad)
jl
gs
pop
scas
in
or
mov
outs
adc
dec
push
int
cmp
out
cld
mov
cmp
mov
mov
inc
repz
or
out
push
add
inc
ss
sub
sub
retf
fild
aaa
sahf
inc
call
mov
fcmovu
cmp
inc
sbb
jecxz
cmp
xchg
movs
loopne
jl
stc
inc
adc
jo
mov
pusha
cmp
cmps
stos
mov
ds
test
out
or
mov
mov
sub
dec
mov
(bad)
xlat
inc
jecxz
jo
sbb
sbb
push
inc
dec
mov
adc
sbb
inc
adc
add
mov
fimul
ret
cmp
cmp
sub
sbb
dec
inc
ror
push
adc
lar
(bad)
aaa
push
or
dec
mov
call
inc
shr
mov
stos
ret
mov
jle
inc
ror
inc
adc
add
(bad)
mov
mov
inc
jne
sub
xor
or
hlt
jo
add
popf
mov
outs
sbb
xor
sub
pop
clc
cli
fst
mov
mov
or
out
sbb
sbb
fcomp
mov
cmp
sahf
mov
pop
inc
outs
inc
pop
repz
ins
nop
inc
push
or
imul
adc
and
sub
jp
nop
dec
fdiv
inc
gs
pushf
mov
enter
sub
(bad)
cmp
imul
pop
add
loop
icebp
xchg
bound
inc
pop
adc
in
jne
inc
or
pshufw
enter
mov
cmp
cdq
jecxz
xchg
inc
push
mov
xor
ret
jge
out
mov
pop
and
cmp
test
adc
and
cmp
xor
cmp
clc
rcl
add
cmp
loopne
aaa
shl
xchg
ffreep
push
les
les
lods
(bad)
ffree
ins
(bad)
fadd
xchg
les
les
add
push
add
jge
popf
add
ins
add
xor
scas
xor
cmp
mov
ds
in
or
mov
fmul
add
stos
int
int
loopne
lahf
xchg
sub
and
jecxz
sbb
jb
mov
bnd
jns
xchg
pop
std
(bad)
in
push
fld
int
int
int
int
int
int
int
int
int
int
loopne
inc
aam
fcomp
les
les
mov
pop
les
les
les
idiv
add
sub
jp
mov
out
daa
jb
mov
cli
sti
out
call
loopne
xlat
out
aam
fcomp
pop
iret
push
daa
jg
and
sbb
jl
dec
jae
and
lods
lahf
popf
dec
lea
aam
enter
add
push
inc
xchg
aam
fcom
add
xchg
add
outs
out
jb
loopne
lods
pop
popf
or
push
jbe
add
iret
in
shl
mov
pop
(bad)
sub
pop
and
cmp
jp
repnz
gs
call
lea
std
mov
neg
aam
fsubr
imul
push
mov
popf
adc
jnp
(bad)
clc
mov
cld
jge
mov
mov
loopne
stos
scas
jmp
pop
inc
push
ins
add
repz
add
clc
pop
ss
inc
add
es
mov
repnz
fs
mov
popf
xor
pop
inc
ror
shl
dec
enter
les
jle
adc
add
in
je
sbb
stos
xor
jno
mov
stc
nop
fild
into
std
test
arpl
mov
dec
aam
fcomp
sti
loopne
(bad)
aam
fmul
in
aad
lds
in
popa
mov
cmp
pop
mov
call
mov
mov
fnstenv
rcr
div
mov
in
mov
(bad)
jns
pop
pop
and
xor
mov
stos
mov
add
push
dec
and
out
ins
jmp
enter
ds
fnstsw
jo
lahf
xlat
pushf
pop
sbb
iret
dec
mov
sbb
adc
dec
and
lods
jl
int3
(bad)
sti
std
inc
loopne
cmps
fidivr
xchg
jle
aaa
(bad)
cmp
out
push
sbb
cmp
xlat
mov
(bad)
sbb
rcl
xlat
pop
mov
test
mov
or
pop
push
push
dec
add
sub
scas
lods
leave
inc
lahf
sbb
cmc
jbe
into
jns
pop
or
push
in
sbb
jmp
xor
repnz
xor
jno
mov
icebp
mov
(bad)
lods
das
popf
pop
(bad)
(bad)
std
or
int
int
int
int
int
int
int
int
int
int
int
sahf
add
pop
int
int
int
int
pop
sub
mov
pop
and
mov
ins
xor
inc
icebp
call
fistp
mov
out
loop
sar
iret
lods
call
std
ins
in
sub
adc
call
jle
add
jne
mov
push
mov
jb
xchg
fidivr
pop
movs
sbb
jb
ret
not
or
push
js
push
jns
pop
fdivp
not
out
je
cmp
add
fistp
(bad)
jns
pop
adc
jg
push
jns
pop
inc
mov
inc
loopne
fild
iret
lock
rol
jb
mov
repnz
lods
sbb
jnp
and
mov
cld
scas
jecxz
test
pop
dec
push
dec
xor
test
not
or
ds
xor
lods
add
add
jmp
ss
lea
sbb
push
popf
sub
sub
xchg
push
jmp
js
test
dec
sbb
dec
jne
pop
inc
imul
iret
inc
mov
jne
cmps
mov
mov
sbb
int
sbb
imul
(bad)
js
lahf
jmp
loopne
fisub
sub
(bad)
jmp
hlt
out
or
or
pop
pop
pop
push
cmp
ins
add
sbb
mov
aaa
test
adc
popf
in
lea
mul
int3
inc
shl
int
int
(bad)
add
mov
mov
(bad)
arpl
inc
(bad)
mov
(bad)
neg
pushf
fistp
adc
mov
cmp
test
test
fistp
mov
lds
movs
scas
punpckhbw
push
aas
dec
out
fild
sub
mov
mov
pop
out
xor
aam
cmp
pavgb
cmps
fdivr
add
mov
lahf
cmps
jmp
(bad)
in
push
fstp
(bad)
mov
(bad)
adc
pop
(bad)
mov
jns
mov
(bad)
cmp
and
cmp
sar
jg
pop
(bad)
jg
out
out
cmp
(bad)
out
lods
add
std
jmp
sub
stos
push
pop
rcr
jge
jecxz
mov
cmp
aaa
aam
fdiv
(bad)
stc
or
push
es
fadd
or
mov
xchg
ja
inc
or
cmp
repnz
or
mov
repnz
cmp
lods
dec
(bad)
cwde
mov
pop
(bad)
int
int
int
int
imul
cs
fnstcw
fxtract
fld
fldenv
mov
les
repnz
retf
les
add
xchg
mov
cs
mov
out
dec
jle
inc
mov
xchg
pop
ror
in
mov
cmp
jnp
push
fldenv
pushw
mov
jb
pop
lea
js
dec
jns
pop
aas
mov
shl
mov
adc
test
icebp
movs
icebp
hlt
icebp
adc
imul
mov
lods
scas
int
int
int
int
les
pop
xor
aaa
fnstenv
mov
icebp
out
icebp
push
icebp
data16
mov
(bad)
icebp
sub
icebp
cmc
xchg
pop
mov
sbb
out
pop
inc
lods
(bad)
lods
int
int
int
int
int
loopne
xlat
int
push
nop
movs
es
pop
iret
test
jb
imul
push
shl
mov
cmp
sub
loopne
daa
and
aas
mov
cmp
jl
movs
int
int
int
int
dec
repnz
sbb
stc
inc
shl
fdiv
loop
or
xchg
pushf
(bad)
pushf
les
enter
les
test
nop
movs
aas
and
stos
fs
mov
aam
and
add
(bad)
ja
dec
and
push
div
jns
enter
in
add
push
pop
add
ret
add
add
call
mov
icebp
test
nop
or
mov
push
sub
mov
mov
(bad)
repz
dec
call
(bad)
mov
out
out
test
add
pop
les
add
fild
pop
cli
push
mov
add
addr16
push
add
dec
adc
aam
fsub
pop
rcl
pushf
mov
dec
mov
retf
jns
pop
call
and
ss
or
inc
cdq
sub
mov
jb
or
jb
loopne
lahf
add
adc
mov
xor
push
jns
pop
in
outs
loopne
xchg
fcomp
mul
mov
dec
jmp
sbb
xor
and
and
cmp
(bad)
jns
mov
mov
adc
cld
sbb
cld
sub
fild
cmp
mov
icebp
mov
jmp
cdq
sub
sub
stos
test
or
enter
jns
jmp
xlat
adc
mov
nop
fsubrp
(bad)
rol
das
pop
setle
mul
sub
inc
and
dec
lds
inc
fwait
inc
repz
jmp
xorpd
retf
adc
add
add
xor
xchg
pop
sub
xchg
imul
(bad)
push
iret
dec
sub
int3
adc
repnz
mov
mov
dec
dec
jne
in
jmp
and
push
xchg
or
or
out
pop
(bad)
aaa
outs
xlat
js
add
fidivr
pop
mov
xchg
fnstenv
fcomp
xchg
int3
xor
aaa
das
cmps
dec
jb
mov
repnz
cmp
xchg
loop
and
mov
and
in
and
xor
shl
rol
xor
and
pop
xor
(bad)
fistp
aas
dec
sbb
pusha
xchg
xchg
cmp
fidivr
aam
mov
clc
outs
fistp
aas
xchg
cmp
xchg
jle
sub
daa
out
or
cdq
out
mov
sbb
rcl
inc
jmp
js
cmp
sbb
jp
cli
pop
push
mul
(bad)
int
pushf
enter
cmp
outs
lahf
ret
sbb
in
push
std
(bad)
in
inc
frstor
out
scas
xchg
lods
popf
ret
std
add
popa
(bad)
inc
sub
adc
es
xor
inc
sbb
leave
(bad)
fldenv
xor
dec
cmps
xor
fdiv
xor
mov
lods
cmps
sbb
call
neg
dec
or
adc
pop
jns
pop
mov
stc
int3
fldenv
add
stos
fstp
inc
(bad)
and
inc
jmp
idiv
fisttp
js
xlat
jno
fild
jl
pop
lock
cmp
push
popa
add
jecxz
jns
repnz
xor
and
(bad)
jle
jmp
outs
cwde
jo
cs
int3
push
sbb
out
cmps
mov
pushf
sbb
cs
sbb
cld
(bad)
lods
ds
mov
inc
cld
aas
cmp
jp
pushf
and
scas
aaa
cmps
out
xor
movs
or
hlt
add
leave
lahf
add
popw
in
fnstcw
and
test
and
dec
mov
test
arpl
inc
adc
clc
push
inc
and
and
fisub
adc
and
push
add
fistp
or
push
pop
jle
(bad)
mov
stc
fstp
add
sub
sub
sbb
or
js
pop
mov
fst
xor
pushf
mov
out
pop
mov
popf
fwait
mov
cdq
mov
add
jmp
je
ss
(bad)
inc
and
fld
add
push
adc
mov
std
ins
int
int
int
push
adc
jbe
adc
xor
call
lods
jmp
sahf
out
fild
pop
pop
stc
lods
add
scas
push
and
stos
push
(bad)
mov
adc
ins
shl
popf
sbb
loopne
adc
out
cmp
or
sbb
sub
(bad)
dec
icebp
scas
fmul
cmp
test
test
out
or
leave
and
pop
jb
popf
mov
sbb
cli
ds
sahf
mov
xchg
jle
fisttp
push
and
inc
bound
xor
sbb
dec
cmp
out
jno
loopne
xlat
inc
aam
fmul
xchg
rcl
popf
enter
jle
dec
call
inc
pop
adc
ins
add
xchg
pop
cdq
or
cmc
div
mov
int
pop
js
jo
fsubr
movs
icebp
mov
icebp
call
mov
xchg
pop
mov
mov
pop
xor
sbb
pop
jp
or
pusha
out
fist
(bad)
sbb
sub
mov
mov
movs
fnstcw
fsubr
les
fld
mov
inc
or
dec
pop
cmps
pop
xor
mov
xchg
in
add
in
pop
mov
aaa
imul
dec
in
inc
jmp
bound
or
jne
popf
fstp
and
mov
fldcw
cs
ffreep
xlat
xchg
iret
add
xchg
push
test
mov
je
and
iret
xchg
lods
push
mov
arpl
push
jno
in
mov
pop
sbb
push
cmps
cld
dec
test
xchg
out
shl
or
ret
and
mov
push
cmp
sub
jg
fisttp
jmp
stos
push
xcrypt-ctr
cmps
fisttp
jnp
lahf
adc
pop
popf
std
lea
loopne
pop
test
pop
mov
pop
xchg
push
sbb
sbb
push
idiv
mov
(bad)
sbb
mul
adc
fild
test
dec
fist
mov
and
sbb
pop
and
scas
cmps
lods
call
in
repz
jle
inc
mov
arpl
bound
xor
bswap
inc
mov
retf
and
bound
clc
pop
sbb
in
data16
xor
jmp
mov
jns
add
add
inc
adc
pop
ja
scas
xchg
out
push
out
pop
sbb
sbb
cmps
retf
cmp
or
lahf
or
(bad)
xlat
xor
pop
pop
dec
nop
test
aas
and
mov
and
stos
lods
jle
popa
test
mov
mov
fist
out
xor
xlat
sbb
call
cmp
mov
out
fcom
fcom
xchg
cwde
or
cmp
scas
lods
dec
popf
push
mov
cmps
icebp
and
test
mov
imul
lock
js
pop
mov
adc
sahf
pop
pop
push
xchg
stc
or
xchg
fstp
mov
shl
mov
and
mov
repnz
dec
pop
mov
fisub
retf
jnp
ret
sbb
and
je
xchg
sbb
retf
pop
leave
mov
outs
pop
fscale
xlat
in
mov
sub
leave
repz
xor
sbb
pop
jno
push
(bad)
mov
std
jb
repnz
push
nop
add
ss
dec
js
mov
fcom
neg
pop
inc
in
out
cmps
xor
mov
ret
cmp
iret
dec
and
stos
and
stos
mov
pop
data16
cmps
mov
push
adc
mov
loopne
(bad)
jnp
stos
add
arpl
ror
out
mov
jp
das
fbld
cmp
nop
pop
jmp
xchg
inc
aas
xlat
cmps
jo
lods
mov
test
(bad)
(bad)
call
jo
movs
sahf
cmp
xlat
inc
jp
mov
scas
daa
cmps
mov
leave
adc
lods
int
and
mov
or
sbb
into
aam
fcomp
jecxz
test
dec
js
add
int
push
push
dec
iret
dec
dec
push
dec
push
inc
fs
and
mov
lods
mov
das
pop
mov
sub
xor
or
cmp
iret
lods
mov
lods
(bad)
popf
jecxz
mov
jge
sub
cmp
mov
lods
jo
sub
xchg
add
add
mov
fmulp
mov
data16
sub
(bad)
fidivr
xchg
jecxz
jle
call
stos
cmp
sub
aad
sub
mov
pop
jl
mov
ds
test
test
pop
pop
fstp
retf
das
call
je
mov
mov
or
aaa
and
ss
fcomip
xlat
cmc
iret
cmp
cmp
dec
jb
mov
cld
add
jae
btc
out
popf
rcl
pop
test
ficom
adc
jl
pop
test
data16
minps
add
jecxz
fnstcw
neg
jmp
xor
out
sti
aaa
pop
push
xchg
fild
imul
mov
pushf
sbb
sbb
sar
mov
out
push
cmp
loopne
scas
mov
rcl
dec
sbb
test
(bad)
fild
adc
lock
sbb
(bad)
into
sub
sub
sbb
je
frstor
inc
test
inc
mov
jbe
(bad)
call
mov
std
or
mov
pop
not
mov
repnz
xchg
fdivr
out
pop
or
push
mov
fist
mov
sub
loop
pop
mov
push
not
or
sbb
add
mov
jmp
shl
idiv
pop
icebp
jg
pop
xor
jle
cmp
icebp
pop
icebp
mov
(bad)
pop
pop
mov
fadd
pop
jb
mov
pusha
cmp
xor
in
mov
int
lahf
add
fistp
ds
fist
pop
or
push
sbb
sbb
pop
add
pusha
sbb
in
pop
push
lahf
pop
(bad)
push
pop
pop
jo
fisubr
or
jmp
fnstsw
fistp
test
sbb
pop
add
pop
les
stos
ficomp
sbb
test
pop
loopne
pop
xor
lahf
mov
pop
(bad)
sahf
(bad)
faddp
sbb
ret
fst
add
pushf
sbb
cmp
sbb
sbb
pop
les
les
cdq
(bad)
fld
xlat
pusha
pop
mov
loopne
xor
cli
stos
imul
lock
cdq
sbb
mov
cmp
pusha
add
imul
ss
pop
icebp
jg
mov
mov
sbb
ds
enter
lods
(bad)
mov
(bad)
mov
mov
xor
mov
icebp
push
icebp
pop
icebp
sahf
icebp
fdivp
sbb
nop
fld
inc
pop
inc
pushf
inc
fdiv
mov
pusha
pop
xchg
or
pop
jns
(bad)
fst
out
pusha
dec
mov
pop
jno
call
or
iret
popf
(bad)
fstp
pop
fstp
das
out
leave
fs
sub
jno
mov
pop
add
mov
icebp
pop
pop
lock
fadd
sbb
pop
(bad)
fwait
(bad)
fist
and
sbb
sbb
iret
lods
pusha
popf
mov
in
pop
ficomp
pop
pop
sahf
add
sbb
(bad)
pushf
mov
sub
fcmovne
sbb
pop
dec
stos
fisub
sbb
inc
fldenv
dec
pusha
lods
mov
mov
cmp
pop
int
(bad)
fisubr
pop
(bad)
popf
inc
fld
fdivr
mov
add
sbb
jle
fimul
dec
pop
sbb
ds
mov
push
pusha
pop
mov
out
xor
xchg
ds
jle
js
(bad)
xor
icebp
std
(bad)
in
pop
jl
mov
mov
sahf
pop
enter
les
les
mov
sbb
jns
mov
shl
test
mov
cs
cmp
jl
mov
fnstcw
mov
les
sbb
cmp
in
xor
mov
mov
mov
pop
pushf
(bad)
std
(bad)
cmp
jl
cld
mov
sti
inc
jl
inc
mov
int
int
outs
stc
sub
cmp
data16
jg
mov
les
mov
les
mov
data16
pop
mov
inc
mov
int
int
int
cmp
lea
std
aas
inc
jg
mov
mov
mov
test
icebp
cmp
jl
call
sbb
mov
fsqrt
retf
cdq
enter
(bad)
stc
sti
loopne
adc
fadd
int3
aas
sar
mov
jle
xor
inc
cmp
sub
cmp
pusha
enter
and
jnp
mov
les
mov
jns
outs
enter
pop
int3
aas
sar
mov
jle
mov
les
mov
jl
mov
sbb
jg
sti
(bad)
cmp
jp
mov
or
retf
rcl
mov
jp
loopne
sbb
rol
mov
jb
ds
stos
(bad)
idiv
pop
mov
fnstsw
int
lods
cmp
jb
cld
sbb
idiv
pop
mov
pop
cmp
dec
jp
mov
sbb
idiv
pop
mov
fcomp
pop
sub
xor
add
pop
jg
mov
pop
lods
dec
jle
mov
stos
fwait
idiv
mov
fstp
retf
jl
cmp
idiv
or
jp
mov
pop
cmp
sbb
idiv
mov
cli
les
xchg
xor
out
sub
pop
std
jg
popf
dec
std
and
cmp
sbb
pop
mov
jmp
sbb
mov
inc
sbb
stc
push
dec
mov
cmp
jge
jns
pop
dec
outs
fs
mov
sbb
idiv
cli
pop
cmp
mov
fidivr
cmp
jb
jns
sbb
jns
mov
pop
test
pop
add
jg
cdq
mov
jle
stc
mov
fnstcw
inc
dec
mov
and
adc
mov
pusha
cmp
push
(bad)
jnp
dec
mov
mov
stos
add
loopne
jmp
(bad)
jns
pop
mov
jle
mov
jmp
(bad)
(bad)
nop
dec
cmp
lock
sar
aas
jl
das
and
(bad)
(bad)
push
fwait
cmp
sbb
test
loopne
add
add
cdq
jns
pop
and
scas
mov
(bad)
push
out
sub
mov
mov
fstp
cmp
xchg
jp
push
sahf
inc
pop
scas
mov
add
mov
sahf
pop
pop
pop
lods
push
jb
fcomp
neg
pop
sbb
mov
mov
neg
pop
push
sti
mov
mov
stos
sbb
fistp
neg
pop
and
loopne
or
xor
sbb
int3
pop
pushf
fmul
cld
fisubr
adc
jb
pop
sbb
neg
jl
pushf
or
pop
mov
imul
mov
sbb
pop
add
jnp
pop
call
fmul
test
sub
mov
js
lahf
movs
fisubr
mov
frstor
sbb
pop
les
fstp
sub
sbb
fidivr
(bad)
pop
(bad)
cdq
push
fnstenv
ins
pusha
fisttp
pop
jbe
fbstp
scas
pop
ins
dec
jl
jb
add
popf
sbb
pop
cmp
pop
in
jb
sbb
mov
test
jnp
fdivr
stos
cld
idiv
pop
cli
mov
stc
pop
jl
lods
sbb
jb
jg
fnstsw
sbb
idiv
mov
mov
out
mov
scas
cld
mov
lods
sbb
and
mov
jb
mov
jge
mov
cmp
mov
sbb
jnp
mov
jp
mov
adc
sahf
inc
stc
adc
cmp
(bad)
cmp
sbb
sub
fistp
stos
(bad)
pop
fimul
lock
ja
js
adc
sub
pop
aas
stos
psadbw
pop
mov
pop
ds
dec
jle
mov
sbb
idiv
pop
mov
fistp
iret
jl
ds
push
cmp
(bad)
sti
pop
outs
cmp
sbb
idiv
sahf
pop
jns
mov
out
push
lods
into
shl
sbb
idiv
pop
mov
ins
ds
pop
jle
dec
mov
lods
xor
jge
in
mov
data16
adc
stos
sbb
jno
cmp
(bad)
mov
test
mov
lods
mov
mov
popf
cld
jns
in
push
mov
xor
xor
popf
cmp
push
jge
std
das
jl
cld
jnp
sti
mov
pop
cli
jle
mov
scas
sti
jno
pop
pushf
jg
mov
mov
adc
mov
popf
dec
ds
push
fsubr
add
movs
ins
fwait
test
mov
jl
loopne
mov
cmp
icebp
pop
dec
mov
fcomp
cmp
add
call
jg
pop
xor
mov
mov
or
pop
das
fucom
sbb
cmp
imul
add
adc
push
xor
stos
fdecstp
push
leave
pop
fcompp
les
jmp
cmps
jmp
fstp
jb
pusha
addr16
mov
jge
mov
jl
jnp
mov
call
jns
stos
jns
mov
in
idiv
pop
ficomp
les
sub
pop
fidivr
lods
cli
call
stos
stos
popf
loopne
pop
mov
ins
xor
popf
(bad)
mov
or
sbb
cmp
icebp
(bad)
js
pop
xor
inc
std
ds
xor
fdivp
popf
std
pop
pop
mov
fwait
cmp
fcmovnu
jg
cmp
test
sub
or
push
js
cmp
cmp
pop
or
mov
call
neg
jb
sub
dec
or
mov
enter
sub
mov
sub
cli
popf
fwait
test
sbb
pop
call
cli
out
out
and
mov
mov
pop
loopne
adc
stos
outs
(bad)
xlat
ds
(bad)
(bad)
and
jl
sbb
pop
sbb
mov
xchg
jbe
inc
mov
fwait
dec
pop
sbb
push
dec
mov
mov
sub
(bad)
sahf
jge
ins
or
inc
cmp
in
jle
fisub
lods
minps
int
int
fidivr
cdq
shl
jg
mov
movs
mov
sahf
data16
mov
mov
pop
push
retf
fnstsw
call
fwait
mov
pop
xchg
pop
mov
stos
cld
out
jbe
and
jnp
pop
push
jg
(bad)
out
out
lods
pop
jl
les
pop
sub
fwait
mov
pop
sbb
iret
pop
pushf
jg
mulps
cmp
cmp
pop
imul
fistp
pop
cmp
popf
sub
fnsave
fdivr
scas
pop
sti
and
cmp
fcomp
pop
mov
fistp
mov
(bad)
sbb
jp
pop
out
cmps
loopne
nop
mov
mov
mov
sbb
cmp
inc
cli
stos
shl
leave
cdq
sbb
and
pusha
pop
lock
(bad)
aas
pop
pop
cmps
mov
mov
sub
jge
jns
pushf
mov
(bad)
mov
stos
jle
mov
mov
cld
std
sti
fwait
mov
(bad)
cmp
cmp
pop
add
out
stos
cld
jne
cmp
int
jbe
test
mov
fistp
sbb
fwait
lock
pop
dec
jnp
jp
sbb
jbe
jp
lahf
sbb
jge
mov
bound
aas
sbb
dec
dec
int3
mov
sub
pushf
jbe
sbb
dec
mov
pop
mov
aam
lods
inc
(bad)
pop
hlt
sti
sbb
pop
popf
jmp
fstp
je
pop
sub
jmp
inc
add
pop
mov
data16
pop
adc
test
mov
jmp
fstp
sahf
sub
dec
fwait
popf
dec
fcmove
or
pusha
nop
int
pop
pop
xor
popf
pop
pop
jmp
int
push
sbb
inc
pop
adc
fsub
jno
sbb
sub
dec
nop
pop
push
pop
inc
mov
push
inc
pop
sbb
cld
shr
cs
movs
imul
push
cmp
fwait
mov
pop
or
pop
mov
fisttp
pushf
les
stc
fld
test
fwait
pop
test
stos
outs
cld
sub
pop
icebp
pusha
push
mov
aas
fidivr
mov
jge
cld
fsincos
fisttp
loopne
sub
dec
std
daa
jmp
scas
mov
xor
sahf
mov
lahf
dec
cmp
dec
int
into
(bad)
cmp
aas
hlt
jle
jge
out
sbb
sbb
sti
icebp
mov
(bad)
retf
std
mov
ror
je
pop
lahf
pop
aas
jl
les
fwait
scas
pop
jns
fld
std
cmp
sbb
loopne
pop
cli
jg
cmp
cmp
sahf
test
sbb
iret
fwait
sbb
mov
test
data16
sbb
pop
jg
fimul
int
adc
sahf
sbb
jl
lods
outs
jbe
add
jg
push
stos
mov
int
push
(bad)
(bad)
fist
mov
pop
jmp
ror
jle
adc
das
mov
popf
mov
dec
sub
ds
cmp
je
mov
enter
cmp
jle
cld
mov
sub
cmp
jle
jnp
jl
popf
sub
mov
mov
iret
mov
mov
sub
push
cld
and
cli
push
ror
loopne
cdq
lods
stc
sub
dec
jg
mov
call
cld
loope
icebp
or
pop
sub
mov
fsincos
or
jns
pop
jbe
call
mov
or
jb
jmp
neg
popf
fisttp
mov
sub
in
push
std
adc
sti
mov
mov
pop
shl
sub
mov
cmp
cmp
loopne
pop
pop
outs
sub
fild
mov
dec
in
jle
sbb
nop
and
xor
mov
or
xchg
mov
int3
fisub
and
cmp
pusha
cs
neg
mov
mov
test
aas
mov
cmp
xlat
or
or
push
fidivr
push
mov
lds
dec
fistp
push
mul
sti
shl
cmp
js
nop
jb
sbb
fwait
je
mov
or
mov
mov
cmp
xor
sub
div
ds
pop
bound
sub
push
movs
pop
div
mov
out
pop
retf
(bad)
or
sbb
cmp
jno
les
adc
or
cld
dec
xchg
iret
stos
(bad)
sbb
pop
loopne
sbb
mov
or
cmps
jne
(bad)
int3
sbb
movs
int3
sub
xchg
(bad)
dec
dec
pop
fs
mov
xchg
and
repnz
sbb
sub
js
mov
pop
sub
inc
rcr
and
cmp
add
popf
or
or
test
jmp
stos
mov
mov
sub
pop
jbe
fwait
icebp
sti
and
jne
dec
clc
sbb
(bad)
das
sub
jno
scas
repnz
dec
cmp
and
(bad)
mov
mov
mov
pop
stos
xor
xor
jo
cwde
jb
out
inc
mov
mov
fs
pop
push
sub
jp
rcr
inc
(bad)
or
int3
sbb
fbld
adc
and
test
js
rcr
ja
jo
out
pop
xor
and
retf
(bad)
sbb
push
setae
les
xor
dec
ds
outs
std
das
jle
dec
push
pop
lods
test
jnp
pop
and
add
test
idiv
std
jbe
(bad)
sub
jecxz
pusha
addr16
sbb
lods
arpl
dec
repnz
mov
mov
neg
mov
not
(bad)
pop
or
cmc
adc
mov
int3
mov
xor
jmp
retf
and
movs
and
dec
js
xchg
js
sbb
stos
(bad)
(bad)
and
outs
and
test
fld
cmp
outs
xchg
ds
mov
dec
xor
cmps
dec
xor
mov
xor
out
daa
popf
lea
js
sbb
iret
adc
faddp
mov
mov
iret
stos
pop
jbe
test
mov
push
dec
push
push
dec
dec
imul
scas
out
xchg
dec
(bad)
push
and
mov
push
and
neg
pop
and
loopne
(bad)
mov
(bad)
sbb
(bad)
out
dec
sbb
lods
into
stos
enter
(bad)
imul
out
sbb
in
jne
xchg
nop
xor
push
aas
inc
jno
aaa
in
addr16
sub
xchg
add
jnp
(bad)
pop
mov
push
push
sub
or
push
xchg
ret
dec
das
add
sahf
jmp
sti
pop
mov
imul
or
ins
add
dec
add
sub
(bad)
test
hlt
jb
popf
sbb
ss
xor
dec
jl
fsub
adc
mov
clc
gs
outs
stc
into
inc
jge
mov
arpl
xor
sbb
scas
jp
sub
jb
mov
repnz
lds
jp
les
les
inc
inc
jnp
jb
mov
lods
pop
jl
and
pop
or
das
mov
or
js
jae
dec
jns
sti
mov
ss
push
mov
inc
and
movs
cmp
cmps
mov
cmp
push
cdq
stos
stc
sub
mov
or
xchg
push
push
icebp
fistp
std
data16
fcomp
test
jns
pushf
jne
iret
repnz
nop
xor
pop
int
pop
mov
mov
push
sub
ja
xchg
lods
ss
out
fisttp
(bad)
ss
imul
das
lds
cmp
mov
and
xchg
jns
mul
push
ffreep
xlat
mov
and
lock
inc
mov
test
fst
ss
outs
pop
fild
mov
pusha
mov
cs
into
std
sub
jge
pop
dec
or
jb
xor
sub
dec
pusha
std
mov
push
pushf
iret
test
mov
xchg
mov
jmp
idiv
xchg
outs
ins
sbb
mov
imul
dec
mov
sbb
jb
ins
and
add
out
or
fild
enter
inc
cmps
cmp
mov
lock
cmp
(bad)
aas
imul
mov
push
test
(bad)
xor
shl
and
mov
add
sbb
jns
xchg
xor
imul
jg
dec
(bad)
jns
test
mov
das
shr
jno
(bad)
ins
retf
mov
push
xor
aad
int
add
sbb
jmp
or
fdiv
pusha
xor
lahf
jp
jmp
int
sbb
pop
mov
pop
pusha
je
add
pop
mov
push
dec
xor
sbb
call
pop
fs
lods
(bad)
cmp
test
pusha
stos
shl
nop
loopne
test
pop
mov
std
inc
(bad)
push
inc
jle
dec
sahf
dec
push
sbb
jmp
stos
sbb
into
mov
or
inc
fwait
sbb
(bad)
jmp
test
mov
nop
fbld
inc
stos
xchg
sti
int3
mov
jle
sub
or
fild
sbb
xchg
outs
xchg
pop
shl
cmc
retf
dec
or
sbb
mov
test
fidivr
sbb
sub
sbb
rol
sahf
int
nop
fisubr
(bad)
sub
cld
test
jb
mov
pop
std
xor
std
jns
cmp
jl
jge
out
jle
jge
jl
jnp
sbb
cmp
jg
jle
jge
mov
sbb
call
cdq
shr
fwait
sub
push
fsubr
dec
mov
adc
jno
popf
das
nop
pop
sub
fdivrp
mov
pop
call
(bad)
mov
inc
paddw
cmc
mov
shr
sbb
inc
aam
pop
jb
mov
out
inc
sbb
and
fchs
adc
cmp
test
jns
aam
xchg
cmovle
and
cld
cmps
les
pushf
jp
mov
loopne
test
mov
dec
mov
jnp
or
(bad)
cmp
out
inc
mov
fwait
xchg
(bad)
(bad)
sar
mov
retf
pop
mov
mov
lahf
push
pop
cmp
aas
pop
je
stc
ja
outs
mov
imul
push
data16
das
cmp
mov
push
scas
push
fbld
jmp
data16
jno
cmp
cmp
pop
mov
xlat
retf
sbb
iret
repnz
mov
mov
sbb
add
pop
das
loopne
jnp
mov
loopne
xchg
ror
cld
xlat
lods
add
in
faddp
or
adc
xchg
sbb
adc
aas
sbb
xlat
popf
cmp
xor
out
fist
pop
dec
nop
xbegin
pop
outs
fisttp
dec
cmps
xchg
cmp
nop
sti
push
adc
dec
stc
dec
fild
fist
ficom
pop
xlat
ja
cmp
jecxz
mov
sahf
mov
nop
ja
dec
stos
jle
cmp
pop
pushw
mov
inc
push
dec
loop
(bad)
lahf
test
test
xor
rcr
adc
cmps
movs
mov
not
jp
out
lods
dec
cmp
sbb
cmps
mov
scas
lods
sbb
sbb
ficomp
sbb
dec
leave
cmp
or
inc
popa
cli
mov
lahf
or
jne
sbb
icebp
xor
mov
mov
cmp
inc
mov
scas
inc
cmps
mov
out
sbb
cmp
mov
cmp
(bad)
mov
mov
xchg
mov
sti
and
dec
loopne
out
movs
leave
stc
fcomi
adc
jo
push
fbstp
stc
mov
das
inc
movs
mov
shl
jmp
ins
pop
retf
mov
adc
mov
call
jo
scas
cmp
jnp
into
aas
push
leave
jecxz
adc
xchg
push
jge
or
fisub
aas
ds
cmp
inc
les
ins
xchg
adc
mov
(bad)
inc
cmc
sub
sahf
pushf
cmp
inc
out
jb
mov
(bad)
sbb
iret
cmp
rol
inc
std
mov
xchg
sti
inc
(bad)
fld
or
out
jg
fwait
scas
cmp
iret
cmps
inc
jns
mov
call
in
pop
mov
mov
mov
xchg
clc
cmp
or
and
mov
sub
add
fstp
or
scas
xor
mov
scas
pop
and
shl
cmp
push
mov
xlat
dec
leave
js
js
add
mov
adc
das
std
dec
mov
lea
mov
cmps
mov
fs
ja
mov
mov
xchg
data16
jl
push
mov
iret
test
add
cmp
std
jg
pushf
lahf
outs
sahf
cdq
mov
lahf
jge
add
mov
ins
sub
xlat
stc
pusha
popf
shl
icebp
jo
pusha
pop
dec
outs
hlt
data16
xchg
retf
jp
out
lods
shl
sub
add
popf
pop
or
adc
aam
jmp
lea
loop
sbb
cmp
push
jbe
retf
retf
mov
cmps
xlat
lahf
lea
xor
fild
pop
sbb
mov
ds
jns
adc
jb
stc
scas
cmp
pop
aaa
cmp
mov
sbb
cmp
mov
out
jp
fistp
pop
inc
adc
mov
sub
mov
sti
js
dec
mov
mov
pop
scas
cmc
mov
cmps
fcomp
mov
mov
cmp
mov
and
xchg
pop
out
pop
rcr
cmp
data16
test
ins
or
inc
jnp
xchg
push
out
xlat
out
dec
sbb
push
cld
sbb
neg
inc
dec
lahf
mov
add
aaa
xchg
fbstp
cmp
mov
scas
cmps
dec
retf
inc
dec
jo
iret
popa
(bad)
push
jnp
xor
js
(bad)
sar
out
(bad)
xchg
push
adc
mov
jg
sti
ds
xlat
sub
loop
cmp
push
out
and
inc
jne
cld
cmps
inc
xchg
rol
mov
or
mov
mov
out
retf
test
xlat
push
cmp
cmp
aas
mov
cmp
xchg
push
add
(bad)
xchg
sbb
mov
lahf
sbb
pop
push
lods
pop
cmp
xlat
sub
shr
adc
cmp
mov
imul
pusha
add
cmps
outs
out
and
jle
xor
imul
ja
and
cmps
sbb
(bad)
dec
out
iret
xlat
out
or
jge
inc
dec
mov
leave
inc
out
jae
sbb
sbb
push
mov
pop
push
push
xor
mov
iret
cmp
(bad)
neg
fmul
outs
retf
dec
pop
cli
mov
pusha
mov
sar
popf
push
mov
lahf
imul
loope
push
pop
add
xchg
into
push
xor
sbb
cmc
sbb
rcr
inc
nop
xchg
mov
aam
fdiv
aas
mov
popa
lahf
cmp
imul
ja
mov
fld
cmps
mov
ins
ins
daa
ds
pop
adc
pushf
pop
test
fldcw
in
or
sar
test
scas
scas
fisubr
jo
cmp
das
jb
stos
cmp
rcr
aam
lock
cli
adc
mov
rcr
fdivr
sub
pushf
pop
cmp
je
mov
js
scas
stos
xlat
inc
sbb
mov
sbb
xchg
mov
jo
cmp
sub
sbb
test
scas
and
xor
cmps
ss
movs
xchg
xor
push
xchg
dec
sub
mov
mov
mov
js
(bad)
retf
cmp
fistp
int3
mov
mov
cmp
nop
lock
call
retf
rcl
shrd
add
add
outs
ds
pop
mov
push
outs
scas
into
es
sar
fwait
sub
daa
sbb
je
fisubr
pushf
jb
std
stc
mov
lahf
in
dec
fst
int
nop
and
jg
dec
mov
test
xchg
jg
ficom
ss
and
inc
lock
div
stc
jg
xor
inc
sub
dec
out
fbld
fild
fld
jge
stos
mov
scas
add
pop
inc
push
mov
iret
rcr
scas
cmp
out
and
dec
lods
aas
mov
bound
pop
push
sbb
pop
stc
lahf
nop
push
test
cmp
mov
lahf
sbb
lods
mov
sti
fsubr
fbstp
pusha
movs
mov
js
cmp
mov
(bad)
aam
test
sar
jle
jg
xchg
(bad)
sbb
jmp
fidivr
lahf
mov
scas
pop
xchg
mov
mov
dec
idiv
fisttp
cmps
push
aaa
sub
icebp
jp
out
nop
aas
out
sub
sbb
cld
inc
dec
cmp
push
xchg
cli
fisubr
ds
sar
push
jo
mov
pop
(bad)
sbb
push
aaa
add
dec
mov
scas
in
jp
cmps
jns
test
out
stos
pop
mov
rcr
push
xchg
ja
add
sar
in
cmp
and
lahf
mov
and
(bad)
fdiv
aas
xchg
inc
dec
and
push
imul
push
sar
mov
mov
xor
mov
scas
jmp
mov
mov
scas
sbb
cdq
out
mov
mov
sbb
inc
pop
cmp
and
mov
pop
lahf
jnp
cli
arpl
fidiv
out
out
xchg
iret
shr
xchg
mov
mov
in
jmp
fcmovnu
mov
xlat
test
scas
push
sar
ins
stos
xchg
test
fs
(bad)
out
out
or
jno
daa
ret
ss
fisttp
push
nop
imul
dec
or
loopne
mov
jmp
aaa
cmp
fmul
nop
adc
sub
out
iret
or
mov
out
aad
test
push
sub
(bad)
fdiv
push
mov
daa
fistp
mov
mov
mov
add
jg
mov
cmc
mov
inc
int
loopne
test
das
pushf
ds
mov
jo
enter
push
nop
cmp
sub
and
lahf
lea
mov
add
idiv
mov
mov
scas
sar
jae
outs
(bad)
push
fistp
repz
sub
(bad)
sbb
dec
scas
mov
cdq
mov
mov
jle
mov
sub
pushf
fisubr
sub
daa
sub
xchg
adc
(bad)
call
ja
cmp
retf
daa
mov
cmps
mov
ss
stc
push
pop
aas
pop
push
mov
aam
lea
cmp
xor
outs
call
inc
cs
fistp
jg
retf
ja
adc
scas
mov
dec
pop
add
bound
push
out
scas
int
push
and
mov
add
lods
push
out
cmp
pop
idiv
pop
aas
das
fild
xor
cmps
mov
sbb
outs
xor
dec
adc
cmp
aaa
jp
sbb
pop
jo
mov
sti
ficom
xlat
aam
cmp
sub
pop
xor
test
add
pusha
repnz
call
xor
push
mov
push
call
xor
sbb
mov
test
clc
clc
sub
pusha
cmc
cmc
test
push
pop
stc
call
es
sub
int3
cs
scas
inc
call
repz
xchg
call
cmp
push
sub
inc
push
fdivrp
and
sub
into
sub
fucomip
ret
test
dec
xchg
sbb
mov
je
inc
mov
lods
pop
sbb
in
jmp
test
mov
xor
or
xor
shl
stos
repz
and
inc
int
not
and
mov
outs
cli
and
imul
dec
xchg
xchg
cmp
cli
mov
ss
push
sbb
add
xor
pusha
mov
xor
add
mov
mov
and
popf
jg
add
clc
mov
clc
cmc
cmp
stc
test
pusha
pushf
push
lea
je
bt
clc
pusha
sub
call
mov
sbb
push
push
mov
jno
jno
ror
les
mov
and
add
inc
iret
rol
cmc
xchg
push
mov
mov
les
out
xchg
mov
cli
or
cwde
cmps
inc
mov
push
loop
cmps
xchg
pop
jno
adc
xor
jp
ret
stc
sbb
dec
fsub
das
jae
ds
test
and
xor
popf
mov
rcl
adc
mov
rol
lock
xchg
sub
pusha
mov
fsub
je
add
ja
add
pushf
jmp
mov
pushf
mov
lea
jne
aad
sub
movzx
mov
test
call
and
retf
(bad)
sbb
xchg
xchg
push
je
mov
ja
or
sub
mov
and
fisub
retf
call
mov
sbb
push
push
xor
fst
fs
jae
jne
sar
mov
arpl
and
imul
lods
dec
add
add
out
cmp
scas
xchg
retf
aaa
xor
rcl
sahf
inc
mov
add
mul
std
hlt
xor
cmp
addr16
xchg
inc
aam
adc
push
rol
xchg
jmp
xor
and
call
sbb
(bad)
(bad)
cmps
adc
aaa
fldenv
lods
xchg
cmp
sbb
stc
pop
cwde
sbb
(bad)
sti
sbb
iret
ins
add
pop
arpl
arpl
aaa
test
mov
push
je
mov
ror
cmp
ins
xchg
jg
cmps
pusha
add
or
ds
iret
or
add
shl
hlt
fadd
mov
call
fcomip
mov
dec
jge
adc
and
ins
mov
repz
jg
lea
sub
stos
fild
loopne
out
dec
stos
and
or
pop
dec
retf
aam
nop
push
popa
arpl
mov
push
adc
rcr
jmp
std
inc
mov
pop
popf
into
pushf
(bad)
pushf
push
jge
jge
popf
push
xchg
jmp
ja
mov
and
call
call
scas
jbe
into
(bad)
sbb
pop
pop
jle
lahf
popf
jg
test
into
dec
fadd
mov
aas
cmp
cmp
ror
jmp
and
xor
enter
pusha
sbb
cmc
in
mov
cmp
mov
dec
rol
loop
xor
sahf
in
mov
add
mov
sbb
(bad)
xor
not
loopne
test
sub
hlt
mul
movs
xchg
inc
pop
(bad)
xlat
movs
cld
adc
movs
mov
les
(bad)
sbb
push
adc
push
xchg
xor
inc
adc
mov
push
icebp
xchg
call
jmp
push
repz
push
icebp
lods
xor
cmp
mov
sbb
xor
out
push
out
test
rol
ja
inc
or
and
sbb
push
aaa
rcr
mov
jb
ins
add
fiadd
loope
jbe
cli
pushw
dec
daa
(bad)
loope
mov
adc
cli
imul
retf
dec
sub
xlat
dec
test
jae
mov
pop
in
add
inc
xlat
add
or
test
dec
test
shl
adc
lock
xchg
mov
icebp
imul
cmp
mov
pop
int
les
xor
dec
adc
add
(bad)
sub
add
and
stc
jecxz
jae
ins
iret
mov
into
cmp
sbb
sbb
test
cld
push
mov
lahf
jae
inc
adc
mov
sbb
inc
pushf
jo
inc
cmps
jo
repnz
loop
int
mov
add
push
push
pusha
mov
pusha
pushf
pushf
pushf
lea
jmp
pusha
lea
jae
call
test
mov
pushf
lea
jne
pushf
call
inc
sbb
iret
(bad)
sbb
adc
jno
fiadd
cwde
shl
aam
(bad)
div
aam
push
stos
and
popa
jecxz
sbb
pop
leave
dec
retf
pop
mov
das
out
adc
clc
pop
ja
push
adc
out
nop
aaa
inc
test
retf
mov
iret
push
cmc
xchg
iret
sbb
aam
inc
mov
pushf
rol
pop
fdivr
mov
pop
mov
rcr
pop
jns
mov
sti
mov
xor
jo
rol
sbb
or
aas
inc
daa
dec
lea
jne
push
push
mov
pusha
lea
jmp
jmp
pusha
lea
jae
cmp
cmp
jmp
cdq
shr
not
mov
aad
mov
mov
repnz
mov
xchg
mov
std
fst
and
xor
fwait
ins
mov
dec
ins
out
in
pop
int3
stos
jmp
lods
in
mov
int
pusha
test
call
mov
dec
call
call
sbb
jne
pop
stc
pop
fdiv
cmp
inc
jp
add
movs
and
(bad)
mov
inc
js
std
mov
popa
rcl
int
push
inc
pop
add
out
bound
xchg
shl
lahf
or
sar
sbb
sub
sub
jmp
fcmovnu
das
mov
lods
mov
loop
or
add
out
sahf
(bad)
out
sub
xchg
mov
xlat
xlat
xlat
outs
neg
dec
mov
test
outs
arpl
ss
pop
ins
fild
pop
jbe
shl
cdq
jg
lods
lea
lods
pop
ret
inc
pop
js
push
ja
push
ins
adc
retf
xchg
repz
lahf
fldcw
je
and
jmp
lods
pop
xchg
sahf
inc
in
sbb
dec
in
sub
arpl
lock
sbb
shr
pushf
sbb
cmp
cdq
stos
cwde
or
or
or
ss
jne
sar
sbb
clc
cmp
cwde
jnp
jl
js
cmp
test
mov
and
adc
mov
and
gs
bts
cwde
mov
and
mov
loop
in
or
push
push
fld
cmp
loop
fst
(bad)
out
(bad)
and
adc
aam
mov
fmul
or
cmp
dec
cmp
dec
mov
stos
shl
rcl
xchg
cmps
adc
xchg
aam
sub
push
std
sbb
aaa
pop
sar
sbb
xchg
inc
out
sub
sbb
xor
fisub
paddusb
iret
xchg
xor
addr16
push
int3
iret
retf
lods
outs
dec
scas
ins
mov
or
mov
gs
(bad)
imul
mov
push
out
(bad)
cmp
or
imul
int
bound
mov
leave
cs
mov
scas
mov
inc
fldenv
retf
dec
add
je
mov
mov
outs
sbb
inc
call
pushf
dec
xlat
rcl
inc
inc
xchg
mov
stc
mov
rcl
and
bsr
clc
mov
btc
sets
shr
mov
call
cmp
pushf
mov
cmp
mov
mov
lea
ja
stc
pusha
push
imul
add
pusha
mov
add
pusha
pushf
mov
mov
lea
jmp
sti
daa
iret
sar
sbb
outs
mov
or
dec
lods
outs
in
(bad)
cld
movs
and
push
mov
inc
sbb
loope
test
jne
add
add
inc
jp
and
and
pusha
mov
retf
fwait
in
xlat
ins
pop
cmp
mov
xor
bound
mov
cmc
lock
idiv
mov
sti
sub
call
nop
enter
push
or
std
ss
adc
scas
jge
cld
scas
(bad)
das
jl
mov
pop
mov
fld
iret
test
or
retf
test
adc
adc
aam
jb
jbe
push
bts
mov
or
fistp
aaa
icebp
jb
std
(bad)
leave
jo
js
sub
mov
pusha
sub
fadd
pop
les
clc
clc
mov
jb
inc
and
xor
sbb
lock
leave
ret
(bad)
aam
pop
xchg
mov
sar
sbb
fstp
mov
and
adc
push
and
out
push
lahf
(bad)
sbb
cmp
sub
in
mov
cdq
and
dec
mov
and
outs
dec
(bad)
mov
(bad)
sbb
call
cmp
jecxz
push
aaa
inc
loope
call
jecxz
pop
rcl
sub
push
mov
arpl
(bad)
sub
mov
sub
xchg
mov
into
cmps
outs
xchg
cmp
outs
lods
mov
adc
mov
hlt
inc
adc
pop
lahf
pop
mov
xchg
adc
add
pop
add
ja
dec
xchg
leave
fsubr
(bad)
ds
daa
je
mov
aam
hlt
(bad)
mov
(bad)
xchg
leave
(bad)
lods
jnp
sbb
mov
aam
sbb
mov
mov
fld
xor
jp
mov
inc
stos
(bad)
xchg
pop
cmp
clc
mov
or
dec
lock
jbe
pop
call
and
jo
loope
stos
stos
xor
ins
retf
dec
movs
pop
push
test
xlat
add
movs
ja
fldz
iret
iret
cmps
cmp
ror
pushf
cmp
pusha
lea
mov
lahf
cwde
mov
mov
pushf
lea
ja
js
jmp
repnz
aad
sbb
xor
jb
xor
icebp
and
(bad)
ficom
fcomp
pop
(bad)
in
sub
mov
push
scas
push
outs
mov
sub
jns
iret
inc
cmp
ja
in
out
cmp
scas
icebp
dec
jp
inc
test
imul
stc
sub
sub
mov
leave
xchg
push
jb
dec
push
push
xlat
adc
leave
add
mov
xchg
nop
sbb
shl
sub
fs
jbe
pusha
lea
call
call
jbe
pop
aad
sbb
fs
addr16
cmps
in
push
movs
pop
jo
mov
cli
mov
mov
das
xchg
push
xchg
icebp
push
adc
rcr
push
(bad)
aas
int3
(bad)
data16
dec
icebp
cli
cmps
add
xor
pop
add
jnp
sbb
dec
mov
xchg
imul
push
mov
jo
fimul
jmp
aas
mov
add
sub
inc
xchg
shl
shl
rcl
cwde
push
loope
adc
inc
add
xor
add
retf
fidiv
fisttp
mov
ret
(bad)
sti
jno
rcl
jae
push
popa
repz
adc
pop
adc
jo
add
pop
push
lock
(bad)
sbb
cvtps2pi
or
(bad)
lea
or
pusha
sbb
adc
mov
arpl
movs
stc
mov
xchg
cmp
mov
retf
fisub
stc
sbb
movs
fimul
and
xchg
xor
pop
xor
cmp
and
fdiv
lea
das
mov
fwait
cli
mov
leave
loop
fcmovnb
pop
les
mov
aam
xchg
js
xchg
pop
cmp
lods
pop
mov
in
fmulp
jg
adc
mov
pop
pop
jg
sahf
mov
(bad)
sbb
mov
fstp
cmp
add
out
and
pop
jle
fnstenv
xor
mov
add
retf
shr
outs
pop
push
sbb
pop
in
fiadd
xchg
mov
mov
sbb
std
sub
call
xchg
fwait
dec
dec
mov
mov
pop
push
adc
scas
jae
gs
sbb
mov
adc
xchg
popa
shl
push
and
stos
mov
mov
sahf
lea
ret
sbb
fdivr
sbb
jns
fdivr
cdq
cmp
cmp
int3
adc
inc
xor
dec
push
or
pop
fs
or
cld
(bad)
push
aad
retf
cmp
xchg
adc
fwait
sbb
cmp
rcr
push
mov
sbb
loopne
mov
push
mov
scas
cwde
aaa
pop
mov
dec
lea
push
test
(bad)
test
pop
lea
pop
pop
pop
(bad)
mov
loope
jbe
push
test
and
push
push
loope
inc
push
mov
lock
lea
pushf
pushf
adc
push
pushf
pushf
push
ret
cmc
lods
pop
fdivr
sbb
mov
and
mov
xor
xor
jns
std
into
xchg
xor
adc
add
in
outs
jo
inc
inc
repz
scas
not
ret
mov
or
mov
jne
mov
xor
jecxz
xor
arpl
call
mov
add
mov
icebp
repz
xchg
into
call
pop
xchg
aad
jge
imul
cmc
mov
push
cs
jmp
fwait
add
fsin
sbb
lock
jle
loope
stos
in
cmc
xchg
clc
clc
test
(bad)
cmc
mov
xor
jo
push
repz
rol
nop
sbb
mov
test
jl
xchg
movs
cmp
mov
retf
add
aad
sbb
jg
aam
mov
imul
sbb
fldcw
mov
retf
test
fsin
sbb
adc
nop
adc
out
push
lods
push
sahf
in
ds
xchg
cmp
sub
sub
jmp
add
sub
jne
pop
test
cdq
imul
pop
or
push
add
sub
scas
pop
lods
pop
mov
jmp
cdq
cmp
push
dec
push
push
and
fisttp
cmp
enter
fnstcw
push
inc
icebp
psubd
push
out
and
mov
hlt
push
xchg
addr16
adc
mov
test
pop
test
cmp
jmp
sbb
mov
(bad)
sbb
out
sub
or
in
out
ins
fild
cwde
js
lea
mov
imul
call
dec
jp
cmp
fwait
enter
test
cli
jp
test
push
scas
or
jmp
pop
or
or
outs
ins
lea
pop
ins
jg
mov
push
outs
movs
inc
sub
push
mov
das
pcmpeqd
fmul
xchg
dec
mov
aas
addr16
mov
fnstcw
add
shl
xor
jbe
jmp
sahf
cmp
mov
pushf
xchg
gs
popa
dec
shl
inc
test
xor
mov
add
mov
pushf
push
mov
pusha
jmp
jmp
btr
clc
add
cmc
pusha
shr
jmp
jmp
mov
pusha
not
mov
mov
mov
jmp
add
dec
outs
arpl
inc
jb
add
fnstsw
cmp
add
sbb
(bad)
sbb
sub
or
leave
mov
dec
mov
mov
test
cmp
sbb
mov
stos
xchg
test
inc
in
or
cwde
sbb
out
sbb
adc
xor
cdq
xchg
popa
cmp
retf
or
stc
cmp
shl
xchg
aam
adc
outs
lea
xchg
ror
mov
mov
inc
inc
or
xor
fistp
mov
pop
adc
dec
les
sbb
xor
lods
push
inc
scas
jge
test
ja
jg
lahf
pusha
call
mov
cmc
test
push
jnp
mov
cli
movs
aam
inc
xchg
jmp
mov
xor
es
adc
adc
out
jns
cmp
pusha
mov
lea
ja
call
mov
pushf
mov
pushf
push
mov
push
ret
lea
je
test
pusha
sub
call
mov
leave
das
dec
into
mov
or
dec
outs
mov
jle
call
repnz
out
inc
jg
(bad)
cld
lds
std
jle
inc
not
pop
sub
and
push
inc
mov
xchg
xor
(bad)
rcl
jg
scas
cld
mov
popf
das
sbb
(bad)
jl
jne
cmp
in
mov
fld
lea
mov
(bad)
add
and
int
movsx
setb
mov
pusha
call
mov
push
pusha
pushf
push
push
ret
add
add
call
btc
cmc
mov
movzx
mov
rcr
mov
rol
mov
push
pushf
mov
mov
mov
rol
bt
xor
mov
call
ins
cmc
and
(bad)
sbb
inc
(bad)
shl
loope
add
movs
arpl
sub
retf
sub
jmp
aaa
je
lock
inc
sbb
shl
jecxz
pushf
fiadd
mov
aaa
lods
sub
(bad)
jg
fwait
mov
in
or
mov
fist
sbb
retf
lea
jne
shl
jl
push
ja
ror
sub
into
push
out
lock
iret
mov
dec
push
int3
aam
mov
mov
add
jno
iret
pop
push
add
shl
cmps
call
sub
int3
stos
popa
bound
or
mov
test
sar
clc
retf
cmp
pop
dec
js
mov
inc
cwde
or
xor
push
pushf
lea
jae
bt
jmp
pusha
pusha
test
mov
cmp
jmp
inc
not
mov
jmp
les
movs
fdivrp
sbb
das
int3
push
sub
(bad)
into
int
int3
scas
lods
xor
sbb
add
dec
fistp
dec
mov
seto
cli
inc
inc
rcl
mov
jmp
xor
pusha
adc
fsub
movs
dec
ret
xor
cmps
adc
push
push
jno
pop
sbb
sbb
dec
add
jl
pop
fprem1
daa
(bad)
std
sbb
lahf
sbb
popf
inc
out
mov
in
dec
loopne
sbb
stc
jnp
pop
ficomp
xor
ss
and
out
ins
dec
xlat
jmp
pop
or
repz
inc
cmp
or
xchg
lds
aaa
cmp
push
fisttp
popa
std
jg
das
jle
add
mov
mov
test
jmp
in
xor
adc
mov
dec
fwait
std
aaa
loopne
out
jl
in
es
add
data16
je
(bad)
push
sbb
mov
mov
pop
xchg
push
je
xor
aam
push
xchg
(bad)
sbb
(bad)
dec
adc
(bad)
sbb
ret
and
and
and
and
push
mov
sub
not
sbb
adc
loopne
adc
push
out
mov
jge
loop
and
lds
mov
stos
mov
lods
cmc
repnz
push
cli
pushf
pushf
mov
(bad)
jge
les
pop
fwait
arpl
pop
cmc
inc
xchg
(bad)
xchg
cmps
pop
aaa
dec
cdq
in
leave
add
dec
aad
mov
sbb
sub
loope
enter
ret
int
es
jle
fidiv
retf
mov
add
inc
and
pop
xor
mov
push
mov
mov
lea
jmp
in
mov
loopne
sbb
jns
stc
fwait
sbb
mov
jp
add
xchg
or
or
movs
cld
or
pop
outs
dec
retf
leave
inc
pop
movs
loopne
loope
ins
mov
mov
inc
mov
push
or
or
out
cmc
ins
not
jle
push
or
sub
sub
imul
neg
(bad)
stos
sahf
imul
push
test
fistp
inc
dec
mov
out
in
inc
pop
int
jle
ud2
jl
sbb
jne
and
jae
cdq
add
add
repz
movs
inc
addr16
jmp
inc
pusha
jb
cmps
aaa
sub
(bad)
sbb
xor
shl
adc
push
adc
mov
pop
jl
xor
xor
pop
(bad)
jns
js
loopne
icebp
cld
cmp
add
(bad)
fdiv
push
js
adc
mov
adc
push
(bad)
mov
fucomip
jae
fs
push
call
cld
dec
sahf
pop
dec
call
xchg
dec
and
xor
or
les
jno
pushf
jmp
mov
mov
lea
je
test
add
push
cmp
pushf
lea
jb
call
arpl
arpl
and
and
ins
outs
les
push
lock
cmp
fwait
pop
adc
test
fisttp
and
test
loop
fwait
push
dec
les
ss
or
retf
pop
or
test
push
lahf
out
daa
push
ror
add
inc
cmc
lds
or
in
adc
cmp
xchg
mov
add
mov
mov
sbb
push
push
mov
fwait
js
xor
push
dec
repnz
add
and
pop
dec
cmp
fs
mov
dec
js
daa
repz
lods
pop
loop
sbb
and
and
and
shl
test
adc
mov
repz
jo
cmc
mov
fcomp
(bad)
mov
imul
cmc
cmp
(bad)
adc
ror
and
aaa
stos
inc
adc
dec
pop
jmp
hlt
fcom
cmp
lahf
sbb
pop
mov
pop
adc
xchg
sub
in
outs
dec
sti
xchg
adc
push
xchg
sahf
ins
test
in
inc
mov
ja
xchg
punpcklbw
dec
and
nop
sub
mov
clc
fstp
add
pop
pop
lods
add
loopne
mov
jecxz
scas
and
loopne
inc
and
push
add
lahf
fmul
mov
stc
cmp
repnz
call
jge
(bad)
jecxz
sbb
lods
push
or
scas
lods
dec
in
outs
dec
lahf
and
cmps
push
or
jne
test
pop
and
ret
add
mov
xchg
mov
dec
cmps
inc
fucomip
adc
aas
add
sbb
les
out
push
mov
add
imul
xchg
pop
inc
ins
dec
nop
or
daa
out
lahf
cwde
sbb
enter
aam
xlat
adc
inc
or
jbe
shl
outs
sti
mov
pop
sub
jae
(bad)
cld
gs
aas
pop
loope
add
cmp
dec
retf
sub
cmp
adc
repnz
mov
pop
mov
imul
pop
outs
lock
leave
(bad)
add
fwait
ret
aas
cmp
mov
aaa
sub
xor
je
sub
fdivrp
out
fmul
outs
sbb
cld
dec
fsubr
dec
div
push
repz
imul
and
ja
js
pusha
push
imul
push
mov
lea
jmp
rep
shl
(bad)
sbb
call
or
dec
imul
sub
push
rcl
jmp
push
iret
imul
sub
aam
stos
ins
or
repnz
inc
push
scas
and
sub
dec
jno
push
push
lds
pop
adc
pop
fsub
and
add
test
jo
jmp
add
inc
inc
iret
push
es
int3
sub
lea
lea
mov
mov
push
pusha
lea
ja
pusha
push
mov
pusha
lea
jb
cmc
bt
cmp
test
cmp
call
xor
add
clc
not
mov
bt
call
xchg
xchg
jl
(bad)
sbb
arpl
mov
push
push
adc
mov
repnz
xor
sbb
out
lds
outs
jg
cs
in
or
and
and
pop
inc
push
mov
icebp
stos
ffreep
adc
pop
in
in
cdq
in
sbb
cmps
inc
add
mov
inc
add
bound
lds
aad
push
(bad)
fistp
shr
pop
stc
es
xchg
or
mov
sar
aas
and
pop
pop
mov
pusha
or
js
pop
mov
cmc
ins
xor
fisttp
mov
ins
xor
fimul
mov
jp
fbld
fcomp
mov
enter
pop
dec
test
dec
mov
inc
and
fild
add
idiv
dec
mov
add
add
push
pushf
lea
jmp
jg
mov
(bad)
sbb
rcl
xchg
push
or
fnstenv
and
cmp
and
xor
xchg
sbb
out
cmps
xchg
data16
fsub
mov
push
movs
cs
fld
fstp
jno
jne
sbb
pusha
fbstp
inc
push
test
test
(bad)
les
add
ror
and
lock
stc
stc
not
stc
rol
mov
not
jmp
ror
aaa
out
sbb
lahf
cmp
mov
mov
mov
rcl
sbb
adc
out
mov
or
test
mov
sbb
xchg
mov
adc
sbb
out
fcomp
imul
je
push
sub
or
mov
jns
addr16
fcom
push
xor
jae
pop
ret
les
and
xor
hlt
cmps
je
add
cmp
movs
push
sbb
add
aam
mov
push
mov
xchg
cmc
ss
push
es
push
xor
cwde
mov
sub
aaa
stos
or
iret
dec
adc
xchg
xor
popa
(bad)
sub
ss
and
lahf
in
adc
stos
das
mov
clc
add
test
outs
enter
shl
imul
jge
adc
retf
loop
cmp
cmp
cdq
stos
(bad)
cdq
jmp
stos
fmul
adc
dec
xor
mov
jmp
(bad)
mov
inc
inc
loope
loopne
sub
ins
in
push
test
xor
outs
imul
test
mov
cmps
xor
call
pop
mov
inc
movs
fs
int
js
(bad)
movs
mul
xlat
mul
aaa
and
mov
daa
push
arpl
add
adc
repz
add
sbb
int3
seto
in
pop
aad
sahf
fdivr
int3
rcr
mov
add
sub
mov
inc
ret
add
add
or
lahf
mov
mov
cdq
fwait
jle
mov
xchg
dec
inc
push
in
cmp
push
stos
mov
mov
mov
out
frndint
dec
mov
out
scas
int
inc
ds
and
add
fdivr
sbb
and
cmp
or
pop
into
pop
rcl
mov
sub
pop
push
sbb
inc
dec
pop
inc
jle
retf
cwde
xor
(bad)
pushf
cmc
test
mov
mov
clc
push
clc
cmp
test
call
pushf
les
jmp
jmp
sub
or
shl
loop
dec
and
mov
dec
sbb
addr16
push
aaa
xchg
inc
ret
aaa
ds
xlat
xlat
cmp
xchg
arpl
frstor
fild
xor
clc
pop
add
nop
into
call
lock
aad
inc
lock
sbb
cmp
fcomp
jle
fmul
mov
inc
push
stc
push
or
iret
lds
mov
jmp
retf
cmp
pop
rcl
sti
dec
xchg
test
call
push
mov
(bad)
sbb
cmps
add
pop
movs
inc
inc
es
xor
mov
sub
popf
lock
mov
lock
xchg
push
push
aam
std
and
movups
xor
jecxz
mov
stos
retf
xchg
xor
aas
inc
scas
fcomp
adc
push
cmp
xchg
test
in
test
les
in
lds
xchg
push
lods
mov
rcl
inc
and
and
fcomp
mov
xchg
in
in
arpl
int
xor
xlat
xchg
ss
push
push
gs
scas
or
push
push
xor
adc
(bad)
mov
push
out
lea
jne
lahf
setne
sub
bswap
call
mov
or
add
shrd
movzx
mov
rcr
jmp
adc
pushf
push
call
dec
neg
jmp
jg
aas
fnstsw
mov
outs
xchg
xor
lods
rcr
jl
jns
push
out
retf
mov
dec
xor
push
add
or
dec
mov
xor
push
sub
mov
jge
mov
and
push
or
xchg
mov
rcr
sahf
pop
push
dec
push
inc
int
std
cmp
and
sub
jp
jno
clc
adc
mov
xor
or
push
xchg
imul
pushf
cs
dec
pop
cs
scas
mov
sub
mov
shl
ret
shl
mov
loope
adc
je
sbb
jb
mov
adc
inc
fdivr
aad
jg
inc
xor
cli
and
mov
dec
pop
mov
and
daa
mov
jmp
add
or
push
xchg
add
movs
into
lea
dec
dec
or
(bad)
jmp
repnz
pushf
not
stc
call
pushf
shld
mov
mov
not
sub
shld
add
movsx
movsx
pusha
mov
mov
mov
setne
pushf
lods
call
sahf
push
lock
(bad)
sbb
mov
in
scas
sub
xchg
ja
es
mov
ins
mov
ds
cmp
xchg
fdivr
in
jne
inc
cs
test
stos
pop
or
clc
dec
clc
or
ja
stos
fisttp
call
jns
(bad)
push
or
adc
rcl
mov
xchg
mov
out
es
pop
lahf
lahf
lahf
sub
adc
imul
jne
hlt
or
into
xchg
popf
pop
add
pop
inc
arpl
popf
xor
xchg
fcmovu
hlt
lea
loope
aad
push
jg
lock
push
inc
ficom
inc
dec
add
sbb
jno
outs
inc
scas
(bad)
aaa
push
lahf
out
call
in
cs
dec
std
out
fmul
cmp
popf
outs
cmp
mov
call
pop
shr
div
jae
mov
ss
xor
in
pop
mov
popf
mov
xor
mov
cdq
and
nop
shl
mov
scas
adc
sbb
jmp
push
jle
out
xor
push
cmp
or
leave
jnp
mov
xchg
mov
pop
pop
daa
ss
test
call
xchg
or
sbb
jns
jne
push
hlt
add
lods
mov
and
and
and
stos
lock
dec
jg
(bad)
sbb
add
aaa
in
icebp
test
rcl
nop
adc
and
mov
scas
cmp
out
imul
dec
jmp
lea
mov
push
or
(bad)
test
icebp
or
pop
idiv
aam
mov
hlt
mul
dec
adc
stos
jg
inc
or
jae
jge
inc
push
rcl
mov
add
mov
or
push
xchg
test
mov
xchg
movs
dec
mov
(bad)
(bad)
clc
pop
call
pop
and
and
sbb
retf
mov
xchg
cmps
push
in
retf
adc
arpl
imul
ja
outs
in
push
pop
dec
mov
mov
in
imul
or
add
xor
retf
fdivr
enter
in
cmps
shl
hlt
ficomp
fdivr
inc
and
out
add
jmp
and
aas
leave
dec
out
loope
lea
fwait
mov
stos
mov
js
dec
idiv
sbb
addr16
xchg
sub
pop
sbb
test
inc
and
adc
mov
mov
nop
mov
mov
adc
mov
mov
fdivr
std
adc
fldenv
jno
pop
push
clc
or
mov
or
pusha
adc
shl
mov
mov
mov
scas
imul
inc
add
xchg
inc
add
inc
push
mov
push
(bad)
in
push
mov
jb
mov
rol
lock
ds
add
enter
push
jmp
rol
mov
das
and
rcl
or
lahf
xchg
jne
mov
stc
cmp
push
adc
hlt
add
jl
stc
hlt
inc
test
xchg
lods
or
mov
add
jno
mov
fidivr
xor
shl
mov
(bad)
shl
and
loopne
add
pusha
js
ror
outs
imul
jae
(bad)
sbb
test
jmp
stos
dec
mov
fcomp
mov
sbb
adc
in
mov
pushf
imul
cmp
mov
inc
push
xor
lahf
mov
(bad)
aad
and
mov
rcr
dec
mov
fstp
ret
mov
adc
mov
mov
icebp
xchg
add
dec
add
retf
xchg
sti
lock
sbb
mov
fidivr
sti
jns
mov
xchg
in
pushf
rol
repz
dec
sub
ja
arpl
(bad)
out
cld
inc
call
dec
scas
loop
daa
scas
sub
mov
xchg
dec
icebp
(bad)
push
imul
push
cmc
aaa
add
add
in
xchg
fdivr
test
idiv
mov
std
sub
add
pop
data16
out
cld
mov
fidivr
(bad)
stc
gs
adc
mov
cmp
test
stos
cld
cld
mov
push
mov
xlat
xor
and
xor
les
addr16
sbb
push
lea
jnp
xor
les
test
inc
ja
push
test
loopne
stos
out
retf
push
push
inc
sar
sbb
icebp
(bad)
sbb
push
xchg
xchg
aad
aad
push
push
jne
cmc
xchg
iret
mov
mov
xchg
aas
in
sahf
arpl
(bad)
mov
test
movs
stc
pop
pop
adc
cmp
or
add
(bad)
in
mov
push
mov
push
les
push
movs
pop
in
scas
or
ror
into
cdq
and
adc
pop
cli
or
leave
xchg
jae
(bad)
sub
push
imul
repnz
ret
dec
fwait
ret
xchg
add
(bad)
mul
dec
jmp
repnz
sbb
div
div
mov
aam
inc
mov
mov
xchg
and
add
mov
je
jns
add
xchg
mov
dec
rcl
loopne
add
push
int
cwde
jecxz
movs
add
push
xor
xchg
addr16
hlt
xchg
aad
das
adc
xchg
mov
add
add
lock
xor
pop
rol
test
imul
aad
adc
add
and
(bad)
sbb
hlt
jbe
div
push
aam
aad
je
sub
push
push
mov
pop
fild
(bad)
les
mov
imul
or
and
and
mov
iret
ins
int3
sub
mov
js
mov
lods
push
jl
ret
jmp
xor
xchg
mov
out
popf
out
(bad)
mov
cli
jp
lea
add
xchg
rcl
xor
rcl
lods
je
aas
xchg
adc
pop
mov
out
push
cmp
cld
mov
sub
ins
mov
xchg
xor
or
mov
jbe
fmul
stc
imul
stc
retf
sbb
js
mov
and
add
cmp
pushf
bt
movzx
sar
mov
test
jmp
inc
cld
jmp
xor
mov
rcl
xor
jmp
adc
mov
shr
ins
out
pop
cdq
aas
cmc
in
dec
push
aam
outs
in
jmp
xor
push
clc
xchg
push
xchg
dec
xchg
into
push
pop
call
daa
fmul
pop
cmp
ja
push
mov
repnz
cwde
jle
jo
gs
xor
popf
mov
xor
adc
xchg
and
loopne
ucomiss
fist
push
dec
mov
cmps
movs
push
fs
(bad)
out
mov
xchg
ins
in
(bad)
call
or
test
adc
shl
lea
jae
scas
imul
pop
(bad)
or
push
add
sub
into
idiv
jg
ret
das
ror
cmp
ins
jmp
ret
or
xor
adc
cmp
add
cmp
dec
shl
mov
pop
loope
(bad)
mov
fcmovne
pop
test
cmp
shl
inc
mov
pushf
dec
rcl
mov
rol
rol
pushf
bt
xor
xor
setne
mov
not
stc
cmc
rol
push
sete
pushf
not
jmp
sub
clc
push
bt
cmp
call
mov
xchg
hlt
(bad)
sbb
in
gs
pop
add
test
lods
cmp
push
fs
jns
dec
(bad)
pusha
mul
dec
test
dec
test
and
jae
in
sahf
popf
outs
aad
aas
and
cwde
and
adc
pop
xchg
cmps
and
pop
mov
jp
outs
(bad)
push
adc
xchg
loopne
loopne
loope
xor
mov
mov
pop
fs
mov
retf
mov
add
fidivr
jge
sbb
mov
add
add
ja
in
lahf
lods
shr
jne
add
pushf
pusha
lea
jae
setl
shr
shrd
mov
bsr
rcr
shrd
adc
mov
movzx
btc
mov
clc
cmp
push
jmp
inc
fild
(bad)
sbb
loop
inc
and
jecxz
mov
(bad)
xchg
fst
mov
inc
(bad)
pop
xor
aaa
mov
mov
je
jmp
mov
cmp
adc
cmp
stc
loope
mov
cmp
inc
ror
scas
inc
sbb
popa
mov
sub
push
jne
dec
idiv
lds
mov
shl
fcmovnbe
xchg
sbb
xchg
rcr
push
sbb
fisttp
outs
fsubr
sti
pop
loope
ret
movs
pop
add
mov
add
add
add
add
and
inc
and
rcl
add
add
add
add
and
leave
push
and
mov
and
rcl
adc
and
pop
and
fst
sub
and
pusha
and
loope
and
sub
and
push
pusha
mov
pushf
jmp
push
sbb
fdivr
std
(bad)
jg
fistp
cld
clc
pop
loop
(bad)
jne
pop
fstp
popf
lds
xchg
mov
movs
cwde
jle
fadd
adc
xchg
push
jg
add
add
leave
add
sbb
jg
add
(bad)
jns
ins
xchg
push
test
push
push
aad
shl
inc
mov
xchg
jmp
das
jmp
loop
push
daa
mov
xchg
push
hlt
push
and
(bad)
jmp
pushf
call
lea
je
bt
call
iret
xlat
aas
clc
(bad)
sbb
inc
lds
and
adc
xor
push
inc
ins
push
inc
jge
push
cmps
or
adc
pop
mov
cdq
ficomp
lods
lea
xchg
pusha
cld
sbb
les
mov
loop
add
mov
mov
mov
ret
lahf
add
sub
aaa
pop
adc
int3
add
cmp
jbe
out
xor
mov
push
in
mov
inc
sbb
mov
mov
pop
out
jge
popf
iret
mov
outs
aaa
dec
push
pop
(bad)
dec
test
enter
dec
outs
arpl
inc
ins
ins
outs
arpl
mov
adc
and
test
test
xchg
cmps
loop
daa
aam
push
aas
mov
sbb
jmp
jecxz
dec
add
add
and
lods
js
dec
or
inc
add
mov
jnp
and
sbb
ror
push
mov
push
fisubr
(bad)
pop
shr
xor
arpl
loop
lods
arpl
xlat
(bad)
jmp
(bad)
or
inc
fnstcw
jne
lds
push
into
test
leave
(bad)
in
data16
(bad)
xlat
(bad)
xchg
test
dec
retf
dec
jl
daa
mov
sbb
dec
sub
or
imul
dec
dec
retf
sub
sub
fstp
(bad)
xchg
mov
dec
cmps
and
jl
imul
mov
add
aas
ror
stc
in
inc
pop
fld
cli
mov
test
adc
cwde
jl
rcl
add
scas
pop
into
cmp
inc
push
call
bound
cmp
ret
cld
not
jmp
add
inc
gs
je
imul
push
add
(bad)
(bad)
call
sbb
int3
push
mov
dec
cmp
jnp
sub
repz
adc
pop
xor
mov
push
repz
pop
push
shl
popf
lds
ss
adc
xlat
pushf
mov
mov
jmp
adc
cld
ror
dec
cmp
dec
adc
and
pushf
and
inc
pop
in
test
inc
aaa
fs
inc
ja
sbb
push
adc
xor
sbb
adc
aaa
push
not
adc
push
pushf
scas
jge
test
(bad)
rol
xchg
fistp
sbb
mov
sub
es
add
ins
aaa
xor
sub
je
jae
adc
jmp
xchg
push
xchg
sub
mov
cmp
psrlw
test
ja
xchg
je
xor
dec
hlt
sahf
cld
push
cmp
mov
scas
cmp
vmread
cmc
mov
dec
pushf
and
sbb
adc
lea
jne
bt
mov
test
push
test
bt
add
mov
push
movzx
add
dec
mov
call
aad
(bad)
cli
(bad)
sbb
push
pop
out
cdq
adc
in
pop
xor
push
xor
inc
and
pushf
gs
pop
rcr
out
cwde
jbe
aam
and
mov
or
xor
adc
adc
call
pusha
or
push
ret
and
and
icebp
jne
pop
xchg
data16
dec
pop
ins
js
pop
xchg
jg
pushf
mov
sub
and
inc
xchg
mov
mov
pop
xchg
or
add
pop
stos
repnz
cmp
mov
imul
mov
mov
mov
push
mov
add
mul
cwde
stos
cwde
addr16
pop
jb
xchg
mov
sahf
cmps
ja
xlat
sbb
xchg
push
pop
dec
mov
sub
push
movs
sbb
les
xchg
neg
rol
push
sbb
adc
lea
add
pop
popa
mov
and
shr
repnz
ins
xchg
cmp
mov
pop
mov
mov
dec
in
outs
mov
add
and
int3
adc
shr
(bad)
and
test
push
fs
test
adc
xchg
out
pop
pushf
sbb
sub
add
call
mov
lahf
lea
call
jmp
jmp
lea
call
pusha
call
ss
fdivr
(bad)
sbb
mov
pop
pop
sbb
add
test
into
ins
push
inc
vfmsubadd213ps
xchg
lahf
push
out
aaa
push
stos
aaa
mov
and
in
xor
sbb
ror
lds
sbb
push
pusha
push
fld
je
inc
mov
dec
sbb
cmp
cmp
(bad)
outs
test
mov
dec
shld
shrd
dec
clc
mov
cmc
pusha
push
bt
add
test
clc
pushf
push
mov
call
jmp
sub
mov
cwde
cmp
fwait
sbb
fidivr
clc
jp
cmp
dec
jmp
inc
ret
lods
xor
mov
dec
cmp
sub
movs
or
lahf
lods
div
ja
lock
pop
rcl
out
add
add
loop
fsub
ins
lods
lock
nop
enter
in
aas
cdq
sar
sbb
cmp
scas
push
mov
loope
loope
rcl
repnz
mov
push
cmp
loopne
and
push
mov
jb
pop
lods
aas
xchg
mov
lods
push
stc
clc
not
clc
mov
push
stc
rol
mov
mov
pushf
inc
stc
stc
test
lea
jnp
xor
push
call
btc
rcl
btr
mov
call
add
test
mov
stc
test
mov
jmp
cmp
std
(bad)
sbb
ins
out
int
in
iret
sub
mov
test
test
(bad)
mov
xor
sbb
xor
pop
mov
pushw
loopne
pop
push
retf
inc
jmp
ficomp
outs
lods
in
push
cmp
clc
xor
pop
lea
iret
cmp
cld
out
pop
outs
std
scas
mov
push
jno
sbb
cli
xor
sbb
jecxz
cmps
enter
adc
mov
fbld
scas
pop
sub
xchg
mov
jl
inc
cdq
xor
pop
jnp
and
cmp
sub
stc
sub
add
mov
retf
rol
shl
mov
jmp
dec
adc
(bad)
(bad)
sbb
jp
fwait
cmp
sbb
sbb
ret
dec
mov
repnz
call
xchg
call
shl
repz
cmp
xlat
movs
dec
xchg
sub
cli
sub
pop
nop
fistp
icebp
sbb
push
or
add
dec
imul
and
repnz
or
dec
mov
sub
xchg
pop
popf
call
sahf
or
sbb
stos
or
outs
pushf
add
sbb
xchg
in
mov
in
sahf
movs
cwde
inc
add
sbb
xchg
aad
hlt
jbe
not
dec
test
sub
xlat
in
stc
lahf
push
movs
arpl
adc
(bad)
icebp
mov
fldenv
and
sti
pop
push
movs
jecxz
fisttp
jb
sahf
xchg
out
push
scas
dec
adc
push
cld
cdq
clc
lahf
sub
lods
cli
push
scas
add
cmps
hlt
xor
mov
dec
ins
shr
std
push
aad
rol
push
xchg
sbb
repnz
fnstsw
pop
lods
pop
sub
mov
mov
jne
bt
cmp
jmp
mov
mov
pushf
mov
mov
pusha
mov
push
push
ret
push
xchg
(bad)
(bad)
sbb
xor
push
hlt
push
push
(bad)
fist
mov
mov
mov
ss
stc
jmp
dec
sbb
mov
pop
int3
adc
jl
adc
cmps
arpl
xor
pop
fld
repnz
adc
add
and
mov
bts
(bad)
cmp
mov
pop
js
xchg
or
ret
cld
(bad)
jne
mov
xchg
(bad)
xor
addr16
mov
cmps
inc
jb
sahf
pop
movs
adc
call
scas
cs
sub
sub
sub
jae
adc
aaa
adc
popa
jns
mov
ss
pop
adc
(bad)
test
rcl
adc
pop
inc
imul
mov
gs
test
call
mov
daa
and
in
xchg
scas
mov
push
cdq
inc
cli
loop
jb
and
xchg
adc
and
shl
and
mov
ret
in
popf
sbb
add
seto
jmp
push
or
add
sbb
test
les
inc
lds
xchg
dec
aas
out
mov
in
push
inc
in
dec
adc
das
fstp
push
jo
mov
jnp
(bad)
mov
and
mov
jmp
aas
sar
add
out
iret
mov
add
xchg
fs
xlat
xor
xchg
add
mov
mov
mov
mov
cmc
dec
iret
push
repnz
mov
js
inc
jmp
push
fisubr
push
mov
movs
cmp
add
sbb
jo
nop
adc
je
push
push
push
repnz
and
cmps
xor
iret
sub
pop
stos
push
mov
aam
pop
imul
lods
outs
lods
iret
outs
repnz
out
xchg
cmp
ins
paddd
mov
xchg
fsub
jnp
scas
or
ret
jge
jne
and
fcomi
cs
jbe
cmp
aam
cmovne
popa
jo
jmp
scas
and
fwait
pop
mov
adc
repnz
push
sub
mov
scas
add
stc
dec
cwde
mov
sub
sbb
mov
retf
stos
test
ret
cld
in
mov
outs
push
shl
hlt
or
add
cs
test
int
sub
push
rcl
mov
dec
dec
inc
fwait
mov
xchg
inc
inc
jl
pop
add
jg
dec
mov
test
mov
enter
lods
pop
jp
push
js
pusha
in
sbb
push
call
push
jno
mov
test
mov
jns
dec
dec
popf
scas
cmp
mov
popf
iret
repnz
cmp
mov
mov
cmp
pusha
cmp
shr
bt
test
push
sub
jb
cmp
push
mov
jmp
pushf
pushf
adc
mov
lea
jae
jmp
jno
push
add
sbb
cmps
inc
mov
xchg
int
add
in
jne
pop
jo
jmp
pusha
push
int3
adc
pop
jns
call
movs
(bad)
aas
jmp
adc
and
mov
dec
inc
xchg
dec
xor
inc
fwait
and
outs
in
inc
in
push
dec
test
pop
push
in
dec
repz
mul
test
lds
movs
xchg
(bad)
lods
imul
jb
mov
cmovs
neg
(bad)
cmp
add
sbb
xchg
xor
jbe
push
(bad)
mov
dec
clc
icebp
fwait
sti
je
(bad)
or
addr16
xor
xchg
jb
mov
ja
ficomp
jne
ret
lock
inc
fucom
xor
int3
jg
stos
dec
test
push
push
push
data16
ss
lds
idiv
push
int3
(bad)
bound
push
(bad)
jge
iret
push
pop
ds
xor
jnp
lahf
daa
add
mov
xchg
(bad)
ret
jno
mov
shl
mov
lock
test
sub
push
outs
ror
test
add
shl
rol
shl
bts
mov
btc
sub
bsf
mov
push
test
sub
cmp
mov
test
cmc
push
pop
test
cmp
pushf
lea
ja
cmp
add
sbb
sub
inc
bsf
lea
add
btc
mov
test
sets
xor
stc
mov
call
bt
not
call
call
push
pusha
lea
je
pusha
pushf
stc
push
cmp
push
push
push
lea
je
bt
test
jmp
call
movs
cld
sub
call
xchg
jo
adc
push
repnz
adc
mov
in
loopne
mov
jmp
push
or
lods
jo
dec
cwde
cmp
aad
push
les
imul
jp
push
dec
dec
mov
fs
cwde
or
sahf
dec
mov
mov
add
push
xlat
add
or
shr
sar
std
and
int3
push
mov
adc
sub
dec
cmp
fwait
sub
xchg
jp
sub
cmp
sti
add
add
add
ret
and
cwde
cmp
pop
xchg
fmul
mov
addr16
daa
jecxz
push
je
gs
jle
(bad)
jmp
sub
jo
bound
mov
jae
push
cmp
jg
bound
xchg
arpl
repz
popa
movs
in
fst
dec
test
add
dec
(bad)
push
fisttp
pop
outs
pop
(bad)
pop
popa
ss
stos
jae
cld
sbb
pop
and
mov
je
xchg
shl
jecxz
push
gs
sub
cmp
pop
les
add
dec
add
mov
test
retf
test
inc
inc
jb
pop
xchg
test
or
adc
mov
xchg
jb
cdq
inc
cli
push
xchg
and
sub
(bad)
mov
cmp
xchg
cli
rol
push
arpl
test
call
dec
das
ja
dec
int
pop
sub
mov
or
mov
movs
dec
nop
nop
cmp
pop
xor
inc
adc
and
xor
or
int
adc
xchg
test
in
in
test
sbb
pop
adc
stc
inc
popf
mov
call
outs
or
sub
mov
dec
push
mov
inc
and
pop
dec
xchg
pop
(bad)
mov
push
mov
xor
shl
jo
icebp
into
sbb
cmp
xor
or
into
jl
scas
fistp
xchg
je
movs
mov
mov
jo
shl
adc
xor
test
fidiv
mov
daa
mov
xor
xchg
repz
cli
jp
jmp
call
not
repz
mov
psubsb
sub
mov
xchg
daa
movs
inc
mov
pop
mov
mov
cld
push
stos
push
dec
mov
ds
jno
mov
mov
cmps
(bad)
(bad)
mov
gs
sub
pusha
out
imul
call
xor
and
lock
adc
sub
jmp
jbe
sub
rcr
in
ror
leave
mov
mov
cmc
dec
fs
xchg
sbb
push
nop
clc
ror
retf
ds
retf
xchg
ror
int3
retf
or
sbb
mov
pop
sbb
mov
jae
rcl
imul
cdq
stos
fmul
pop
dec
mov
sbb
inc
shl
shl
cmp
push
bsr
shrd
mov
cmc
push
inc
add
cmp
movsx
push
bsr
rol
setbe
shl
push
cmp
inc
lea
dec
push
call
ret
pop
inc
or
sbb
and
rol
and
inc
xor
pushf
adc
jge
pop
jmp
and
fadd
fsubr
int
arpl
mov
sbb
fdiv
cmp
imul
dec
imul
leave
mov
jbe
pop
and
cdq
add
or
pop
and
inc
(bad)
cmp
xor
xchg
adc
stos
repnz
retf
lods
mov
sub
(bad)
xchg
adc
movs
push
pusha
mov
mul
xor
je
in
mov
dec
cmc
stos
arpl
sub
ins
pop
mov
and
(bad)
mov
jae
push
inc
outs
ss
rcl
hlt
ds
es
mov
jne
xchg
push
in
push
sub
xchg
leave
and
mov
into
xchg
jnp
outs
test
and
or
push
(bad)
cli
jns
cmp
mov
or
dec
stc
mov
sub
fsubr
push
mov
mov
pushf
jmp
test
adc
mov
call
xor
aam
cwde
shl
mov
call
pop
(bad)
mov
call
or
in
into
dec
dec
int3
out
stos
int3
(bad)
ins
dec
dec
aad
sbb
fwait
pop
cmp
dec
mov
in
mov
mov
shl
adc
push
or
outs
lahf
or
fcom
lds
inc
jns
loop
fadd
and
jecxz
iret
sbb
inc
mov
push
mov
popf
mov
jnp
ret
clc
retf
jns
fmul
cmp
sbb
pop
mov
sbb
(bad)
xlat
pusha
lea
jne
bswap
call
outs
mul
jle
pop
sbb
jl
mov
popf
outs
ss
pop
jl
fwait
jns
mov
mov
jp
jecxz
mov
jns
mov
(bad)
lahf
mov
icebp
xor
mov
js
scas
mov
outs
mov
mov
(bad)
sbb
or
add
fsubr
popa
and
dec
lods
push
jae
ins
jmp
cld
jecxz
in
adc
add
inc
pushf
jae
jnp
dec
mov
sub
push
pushf
lea
jbe
stc
jmp
sti
mov
mov
or
imul
cli
(bad)
ror
push
mov
pusha
xor
outs
repz
test
jge
ror
mov
mov
stc
(bad)
rcl
aaa
jbe
enter
rcr
into
clc
mov
out
(bad)
and
repz
mov
iret
out
pop
mov
(bad)
rcr
shl
and
jmp
jle
imul
sub
dec
sub
inc
push
jg
pushf
mov
sti
js
sub
icebp
jecxz
xor
ds
fldl2e
mov
sub
mov
mov
arpl
setne
push
mov
mov
movsx
pushf
mov
not
xchg
pop
pop
mov
pusha
pop
bswap
mov
pushf
pushf
pushf
push
push
ret
and
mov
push
cmp
pushf
mov
lea
jne
jmp
clc
clc
jmp
daa
cmp
call
pop
pop
cmp
cdq
mov
jns
stc
fwait
test
xchg
pop
ds
into
xchg
xor
ret
dec
mov
xor
repz
push
dec
lods
iret
leave
dec
lea
rcl
fwait
shl
les
inc
ficomp
jo
xor
mov
or
lock
pop
xchg
mov
xchg
cdq
dec
mov
push
mov
ja
js
jbe
addr16
push
shr
jne
imul
iret
xor
hlt
ds
adc
jp
outs
lea
aas
mov
in
ds
push
(bad)
fs
mov
(bad)
xchg
mov
lods
cli
es
mov
pop
push
pushf
lea
jne
daa
sbb
pushf
rcl
xor
movsx
bts
aad
ror
mov
not
setle
bt
add
call
clc
mov
add
jo
test
push
pushf
jmp
add
or
into
ins
sub
sub
loopne
sbb
mov
lock
xor
cmp
sub
sbb
aas
(bad)
fst
pusha
scas
ror
xchg
mov
repnz
mov
(bad)
sbb
cli
add
movs
push
xchg
jp
pop
mov
adc
(bad)
adc
xor
jg
adc
fnstcw
add
mov
test
in
add
adc
scas
mov
test
add
pusha
pusha
stos
pushf
mov
lea
jmp
push
(bad)
ror
fistp
cmp
outs
shr
mov
xor
xchg
mov
push
ins
xor
rol
lods
cmpps
pusha
inc
xor
or
je
pop
pushf
les
lahf
xchg
les
dec
dec
stos
xor
out
pop
test
(bad)
loope
jb
dec
and
aad
mov
iret
inc
xchg
mov
inc
addr16
jne
jns
sbb
pop
jg
add
mov
(bad)
dec
jns
cmp
clc
and
sub
lea
jb
push
push
dec
mov
jmp
movsx
movzx
movzx
call
outs
neg
xchg
and
in
test
and
push
cmp
inc
icebp
mov
and
cmc
push
mov
jecxz
aas
popf
cmp
je
loopne
inc
leave
sub
call
push
icebp
addr16
imul
adc
shl
add
mov
fst
sbb
cmp
stos
xor
aaa
stos
mov
sbb
dec
cwde
movs
inc
popf
adc
add
in
adc
scas
test
sub
xchg
mov
sub
call
mov
jo
call
or
cmp
cmps
ins
dec
out
xor
xor
sbb
jp
or
in
out
add
or
dec
out
pop
and
mov
xlat
fs
dec
and
mov
shr
push
pusha
mov
call
call
sbb
mov
call
sub
mov
leave
fcomi
scas
push
hlt
hlt
icebp
mov
lds
xchg
test
mov
lahf
jnp
inc
into
and
mov
jb
cwde
xchg
es
repz
jp
out
or
mov
clc
inc
or
fsubr
aam
aad
cmc
nop
call
mov
rcr
ret
popf
jbe
jno
retf
or
loope
sets
push
sbb
inc
in
mov
inc
dec
mov
leave
mov
push
add
add
or
adc
fist
and
pushf
aas
or
pop
pop
xchg
leave
xchg
fistp
fdivr
movs
and
add
mov
cwde
outs
std
into
out
push
call
call
and
fs
lds
fs
push
inc
daa
les
xor
mov
cmp
cmc
jg
ficomp
retf
movs
pop
ret
inc
sahf
sahf
sub
(bad)
mov
push
retf
retf
push
mov
inc
and
inc
push
adc
icebp
arpl
or
int
mov
dec
bound
fcomp
mov
and
pop
mov
es
mov
xchg
cwde
scas
cmp
test
adc
gs
dec
xchg
scas
call
pop
dec
mov
call
add
push
and
movs
mov
mov
mov
daa
mov
les
loopne
fild
fstp
pop
lds
sub
cmp
ss
out
and
leave
test
mov
cwde
mov
xchg
sbb
jp
pop
inc
mov
pusha
jnp
lea
retf
push
mov
fld
add
int
push
pop
es
xchg
inc
xchg
mov
adc
push
ret
fnstsw
cs
ror
sar
push
inc
es
mov
sub
aas
jg
ja
sub
outs
bound
pop
xor
pop
sar
jne
dec
dec
in
movs
mov
jns
xchg
dec
push
test
popf
add
leave
ds
jbe
jle
cmps
dec
push
push
(bad)
jmp
pushf
push
dec
xchg
jge
dec
or
jecxz
clc
inc
push
scas
cmp
xchg
cld
sub
pop
rcr
aas
sbb
mov
mov
cmp
popf
add
dec
pop
and
mov
mov
ja
cmp
sbb
pusha
mov
shl
and
sub
cdq
cmps
sbb
pop
fnsave
cmp
sbb
xor
fild
pop
mov
sbb
cmp
cmp
xchg
js
cmp
(bad)
mov
enter
sub
sub
leave
pop
aas
sub
sub
rcr
repz
add
sub
pop
aaa
mov
or
jle
xor
adc
xor
cmp
aas
ds
or
jnp
xor
jmp
mov
pop
adc
mov
lods
sbb
jns
out
jo
xor
mov
js
lods
into
dec
cmp
inc
ins
sub
cmp
adc
(bad)
mov
clc
aas
lock
(bad)
ds
adc
ins
gs
inc
push
dec
inc
mov
xor
in
dec
mov
cs
push
push
push
jle
inc
outs
pop
push
dec
inc
mov
cmp
out
sub
xchg
scas
push
clc
(bad)
pop
push
cmp
sti
dec
push
mul
cmp
(bad)
mov
sti
pop
je
and
out
mov
jne
and
mul
pop
adc
jge
mov
popf
popf
(bad)
movs
or
adc
adc
sub
jne
mov
and
jns
mov
adc
inc
xor
(bad)
cmc
ror
test
aaa
sbb
cmp
and
inc
dec
das
and
or
xchg
leave
add
xor
aas
jg
jno
sub
movs
cld
pop
(bad)
scas
cld
stos
jns
jb
dec
aaa
pop
sub
dec
cdq
sbb
popf
mov
jbe
or
lea
cmp
jns
popf
lds
adc
jae
fidivr
popf
lods
sbb
mov
jo
mov
dec
cmp
pop
pop
add
and
sbb
mov
mov
shl
scas
scas
cld
lock
sbb
scas
clc
sbb
movs
sub
and
xchg
aad
jle
rol
push
movs
aas
sbb
add
stos
jg
retf
(bad)
adc
sbb
sti
cmp
mov
jle
sbb
pop
fnstsw
mov
outs
xchg
shl
call
ins
das
mov
in
lahf
push
inc
stos
inc
imul
into
add
clc
lahf
clc
push
mov
imul
test
add
sahf
rcr
in
dec
(bad)
ror
cs
jmp
push
add
icebp
icebp
and
push
sub
dec
cmp
(bad)
movs
retf
imul
(bad)
(bad)
aas
xor
stos
inc
scas
xor
jle
jmp
push
enter
cmc
or
ins
sbb
in
outs
jne
sar
adc
cmp
dec
inc
sbb
cmp
add
aas
sub
stos
push
enter
inc
adc
or
repz
dec
fwait
xor
inc
pop
push
jns
cmps
cmp
cmc
adc
cmp
cmps
sti
xchg
xor
dec
icebp
mov
mov
cmc
je
adc
ds
je
xchg
mov
inc
fnstcw
call
clc
(bad)
push
(bad)
adc
push
push
fdiv
shl
les
pop
and
popf
(bad)
hlt
sbb
jnp
mov
ds
lea
xchg
push
mov
push
iret
(bad)
jle
xchg
scas
adc
or
jmp
ds
jbe
xchg
call
mov
hlt
sub
cmp
mov
ins
adc
jbe
push
push
es
test
pushf
pushf
repz
aas
jbe
(bad)
addr16
jle
xchg
push
pop
mov
(bad)
movs
xchg
aaa
mov
fwait
jns
js
popf
cs
call
(bad)
jne
mov
jmp
aaa
popf
or
hlt
dec
in
jl
adc
test
pusha
test
push
pusha
lea
je
stc
clc
add
test
cmp
call
out
adc
mov
pop
sbb
js
fistp
xor
mov
retf
pop
add
pop
into
push
mov
mov
add
jecxz
dec
lea
adc
pop
fucomp
sbb
mov
in
(bad)
mov
int
jg
js
(bad)
push
sbb
daa
pop
cdq
add
sbb
xchg
xchg
in
ja
das
test
jbe
ja
pop
in
test
inc
pop
cdq
pop
dec
out
sub
aaa
xchg
or
sbb
icebp
adc
icebp
xchg
adc
rcl
adc
stos
outs
pop
jg
cmps
cmp
popf
adc
mov
jo
add
add
xor
add
fsub
adc
sub
mov
xchg
fwait
or
mov
cmp
mov
dec
mov
inc
loopne
pop
fisttp
cmp
push
and
aas
out
sahf
ins
sahf
jns
add
jnp
jmp
lea
call
clc
push
cmp
mov
jmp
xchg
push
cmp
popf
(bad)
sbb
popf
sahf
cmp
and
cmp
pushf
mov
dec
jne
(bad)
push
jbe
sbb
(bad)
out
fld
es
shl
ret
mov
sub
fisttp
lods
jne
dec
push
pop
test
sbb
inc
std
das
jns
pusha
stos
or
leave
sti
test
mov
cmp
sbb
cmp
xchg
push
ret
sti
repnz
mov
dec
(bad)
(bad)
into
and
sub
inc
fwait
add
sbb
sbb
push
push
adc
xor
xchg
adc
xor
shl
cmps
mov
mov
xor
retf
sahf
add
or
es
cmps
(bad)
cld
bound
xchg
adc
daa
(bad)
loope
loope
lods
enter
pop
jae
imul
dec
adc
call
and
(bad)
pusha
sar
mov
xlat
xor
aam
push
inc
xor
data16
loop
clc
push
and
sbb
sbb
fdivr
pop
mov
cwde
sbb
add
xchg
(bad)
cmp
nop
adc
push
sbb
ret
push
push
xchg
jecxz
(bad)
cmps
fwait
das
sub
push
pop
inc
mov
inc
cdq
(bad)
fnstcw
cmp
or
mov
push
or
loop
jae
or
xchg
pop
out
call
mov
lods
ins
es
pop
ja
pop
test
(bad)
cmc
gs
stos
enter
cmps
lea
ja
or
sets
rcr
sub
lea
cmc
add
bt
sbb
and
setle
mov
pushf
mov
mov
jmp
lea
ja
jmp
stos
setp
mov
jmp
cmc
shr
sub
and
btr
pushf
mov
cmc
or
pushf
pushf
jmp
mov
out
loop
add
mov
add
repz
cli
jns
jns
adc
leave
div
push
pop
sbb
adc
aad
paddq
pop
nop
cmp
pop
xor
iret
pushf
cmp
dec
inc
jle
cmps
or
pop
jp
fld
xchg
pusha
jne
icebp
and
fs
ds
out
mov
jg
push
jae
dec
xlat
mov
je
adc
push
or
ins
arpl
or
jne
add
ds
jmp
call
lea
imul
sub
sub
icebp
add
xlat
xor
xbegin
iret
in
dec
adc
fadd
out
mov
mov
xchg
ins
dec
adc
pop
cwde
imul
sbb
or
or
cli
lods
push
in
or
lahf
push
adc
sahf
js
rol
in
sbb
jbe
repnz
addr16
jns
add
inc
fadd
and
add
add
pop
ins
and
add
add
out
push
add
add
add
and
add
add
sbb
add
push
adc
frstor
or
and
inc
adc
and
hlt
ja
add
add
add
ret
call
xchg
xor
rcl
push
jno
jg
rcl
stos
cmc
cmc
sahf
push
sbb
fisub
icebp
call
imul
dec
or
fsub
mov
gs
fistp
add
ret
(bad)
(bad)
sbb
inc
ficom
psraw
sub
inc
jmp
hlt
push
(bad)
aaa
inc
push
lds
movs
xchg
test
or
dec
lahf
mov
call
sti
sbb
(bad)
sbb
cld
adc
jecxz
mov
jmp
test
and
and
mov
sti
and
inc
mov
cli
inc
dec
ss
repnz
add
dec
mov
je
cwde
jmp
or
sbb
inc
mov
jp
retf
clc
mov
enter
xor
call
in
pusha
inc
add
shl
xor
js
mov
sbb
inc
popa
xchg
cdq
cmp
sbb
sbb
lahf
mov
outs
sbb
sbb
cmps
push
movs
or
push
shl
pop
in
push
rol
and
ret
mov
lahf
mov
es
hlt
sbb
or
pop
test
add
ins
and
pop
mov
cmp
add
mov
hlt
and
cmp
repz
les
mov
cmp
xor
sbb
add
stos
add
adc
test
adc
adc
jnp
(bad)
fist
jmp
cmps
shl
xor
push
stos
ja
push
cwde
shl
cwde
ds
imul
add
aas
hlt
xchg
push
xchg
or
lods
outs
sbb
rcr
out
mov
outs
std
cmp
push
shr
movs
(bad)
add
movs
xchg
add
les
data16
jb
or
mov
fs
jne
jmp
lea
je
test
pusha
add
stc
cmp
pushf
lea
jb
push
cmc
cmp
call
call
ror
sbb
xor
push
jle
add
mov
in
jno
movs
push
push
and
cmp
div
mov
imul
dec
scas
mov
fldenv
pop
mov
adc
stos
pop
jmp
push
sub
imul
ret
add
std
jmp
add
shr
xor
out
(bad)
adc
lods
ret
jp
cmp
sbb
and
(bad)
xlat
push
std
and
(bad)
jmp
add
shr
push
cli
fstp
fimul
ss
ja
sub
cld
stos
ja
and
adc
inc
mov
inc
test
ficom
mov
in
ja
xor
(bad)
sar
rol
cmp
sar
jecxz
int
pop
mov
jo
(bad)
xlat
xor
pop
xchg
sub
mov
retf
mov
adc
int3
dec
jg
aas
lea
in
mov
sti
ret
sub
lods
lds
mov
add
mov
popa
add
movs
add
jae
lods
push
daa
call
mov
dec
test
fidiv
xor
push
pushf
(bad)
pop
and
mov
push
popf
dec
mov
or
push
aad
xchg
(bad)
hlt
xchg
adc
fcom
loop
mov
xor
and
cmps
aas
dec
fdivp
sub
arpl
int3
cld
fldln2
pop
mov
or
adc
pop
xchg
fild
movs
data16
jo
jo
shl
dec
stc
call
call
jmp
mov
pusha
push
push
push
ret
mov
sbb
push
xchg
pop
mov
xchg
xchg
cmc
push
adc
cmp
into
mov
mov
mov
rcl
out
div
mov
stos
mov
je
movs
push
test
jmp
pop
mov
sub
mov
mov
inc
stc
adc
add
ja
pop
out
mov
cmp
pop
(bad)
pop
(bad)
leave
xor
push
adc
jbe
test
sub
in
ds
in
adc
fs
sub
mov
nop
loopne
loop
jmp
inc
mov
lahf
add
inc
jb
and
mov
mov
push
add
push
add
dec
bound
dec
mov
out
(bad)
inc
lahf
pop
and
sbb
xlat
cmc
div
jne
adc
add
gs
pop
call
fwait
pop
(bad)
data16
fisubr
mov
lea
xor
sub
xor
jmp
push
in
daa
(bad)
fild
jmp
mov
pop
sar
sub
xor
xor
repz
and
cmp
scas
fistp
fmul
dec
jle
fs
pusha
dec
mov
jmp
cmp
mov
movzx
push
mov
test
test
pusha
pusha
lea
je
push
mov
shld
add
sub
not
clc
bsf
mov
jmp
fld
dec
retf
mov
jmp
sbb
xlat
jno
mov
cmps
push
dec
in
mov
popa
jns
or
pop
inc
mov
xor
(bad)
xor
add
fnstcw
mov
xor
dec
dec
imul
test
jp
int3
jle
mov
shl
ja
not
or
dec
dec
jo
pop
repnz
lds
movs
pop
mov
movs
inc
movs
arpl
ss
mov
cwde
xchg
lahf
or
pop
out
sbb
dec
dec
les
daa
test
ja
push
test
in
inc
test
cli
jp
or
cld
movs
shl
call
leave
dec
sub
test
outs
xchg
push
dec
dec
lods
fiadd
enter
stos
mov
xor
shl
rol
fild
les
fdiv
test
(bad)
pop
lea
aam
scas
jbe
sub
sub
jecxz
dec
test
xlat
sub
dec
mov
sbb
mov
jbe
sub
ins
push
(bad)
adc
xor
(bad)
jle
fwait
pop
and
fstp
fwait
or
adc
ja
jl
or
mov
data16
dec
pop
int3
push
lods
fild
ds
push
(bad)
cdq
mov
xchg
je
and
call
mov
lea
jae
not
push
mov
mov
inc
lea
jno
inc
jbe
not
mov
pushf
mov
lea
jmp
repnz
aam
call
retf
jmp
jmp
mov
mov
in
mov
fsub
ret
ds
cmp
outs
test
(bad)
adc
mov
and
adc
xlat
mov
ror
jl
pop
call
adc
lea
jb
ss
loop
xchg
cmp
call
pop
cdq
sub
inc
xchg
scas
(bad)
xor
test
pop
xchg
mov
mov
xor
xchg
add
mov
iret
enter
inc
fmulp
and
sbb
ja
xchg
push
aaa
push
push
push
div
add
cdq
retf
jno
rcl
out
sbb
mov
and
xlat
pop
jmp
mov
add
fadd
pop
nop
hlt
jle
fs
mov
jno
pop
cmp
push
outs
inc
inc
cmps
adc
mov
dec
mov
push
jmp
pop
movs
jecxz
mov
xor
aas
mov
jo
ja
outs
test
adc
pop
or
(bad)
mov
mov
adc
jo
dec
ja
sti
fld
clc
mov
add
pusha
jmp
aam
inc
add
sbb
ins
inc
add
pop
popa
add
add
add
add
lea
je
call
inc
pop
enter
mov
lods
push
or
scas
jmp
dec
int3
push
xchg
xchg
pushf
ins
js
sbb
pop
add
leave
lds
cmc
leave
outs
lods
daa
aas
push
dec
and
ror
mov
test
(bad)
mov
jno
fild
sbb
inc
mov
scas
mov
icebp
xchg
ss
sti
js
iret
stos
dec
mov
cmp
mov
in
mov
mov
inc
mov
lods
dec
leave
sti
dec
fucompp
fwait
shl
popf
mov
mov
nop
ins
inc
pop
stos
mov
push
or
mov
push
dec
bt
pusha
push
jmp
mov
push
dec
clc
push
mov
rol
bt
cmp
sub
jbe
xor
jp
push
mov
mov
not
cmc
push
rol
cmc
bt
test
not
cmp
push
popfw
mov
pushf
pushf
inc
mov
adc
lea
pushf
jmp
push
push
clc
and
and
test
test
daa
cwde
jae
loop
fiadd
rcr
sbb
sub
les
cwde
xchg
enter
sub
sbb
loop
cmp
ret
dec
jbe
arpl
fisttp
sar
jp
mov
shl
movs
and
fstp
cmp
cmp
mov
out
add
sar
xchg
scas
cmp
cli
mov
hlt
ror
and
and
xor
cmps
inc
and
nop
ins
stos
jmp
cmp
mov
mov
clc
inc
dec
mov
mov
lods
pop
sbb
das
xchg
jmp
or
mov
mov
xchg
(bad)
cmc
loope
cli
cld
pusha
daa
gs
jne
test
xor
mov
retf
hlt
jle
rol
bound
and
adc
fisubr
adc
cmc
pushf
stos
pushf
lea
jmp
fld
xchg
aam
xor
xchg
jnp
movs
or
sub
mov
outs
cmps
push
jmp
(bad)
popa
jns
or
adc
xchg
dec
jo
lea
fstp
sbb
fwait
les
outs
push
vpsubw
and
pushf
lahf
mov
icebp
mov
into
inc
xor
xchg
lock
jmp
cld
inc
or
dec
pop
sti
mov
out
loope
xor
cld
outs
sbb
jge
fsubr
cmp
popf
cs
mov
fsub
or
mov
stc
push
jmp
mov
sbb
and
and
lahf
add
mov
add
sbb
stc
imul
cmps
inc
xor
jg
xchg
mov
loope
xor
xor
nop
inc
icebp
loop
inc
xor
xor
adc
imul
sub
dec
call
dec
mov
jno
fbstp
xchg
dec
outs
jae
repz
retf
or
or
aas
cmp
cli
push
popf
and
mov
pop
imul
cmc
cmc
ja
sbb
js
rol
bound
fstp
cmp
jmp
xlat
jae
push
jp
cmp
test
sar
popf
scas
add
lahf
mov
stos
lock
jbe
data16
pop
mov
push
pop
es
xchg
ret
lock
ret
rol
jno
fisubr
xlat
test
mov
fs
jne
cwde
not
movzx
mov
jnp
lahf
push
call
aas
addr16
sbb
or
mov
adc
test
std
pop
pop
cld
pop
pushf
pop
std
(bad)
cmp
cmp
ret
data16
pop
clc
outs
push
jge
dec
rcl
clc
repz
mov
mov
stos
mov
(bad)
xlat
mov
inc
test
push
xor
or
test
aas
(bad)
cli
jp
aad
and
test
call
cmp
cmp
lds
stos
(bad)
inc
inc
mov
xchg
adc
inc
mov
jmp
stos
test
mov
loope
mov
mov
cdq
adc
(bad)
push
retf
in
out
pusha
rcl
push
or
mov
cmps
popf
jns
mov
mov
sub
jp
xor
cmp
inc
or
pop
aam
cmovl
inc
out
fsub
loope
xchg
cs
lds
mov
in
adc
ins
pop
sahf
cmc
dec
dec
out
add
xchg
(bad)
push
sub
(bad)
shl
je
add
mov
movs
add
xor
sti
dec
stc
jae
ss
add
xchg
inc
push
and
loope
popa
cmp
(bad)
fsubr
test
test
sub
sbb
add
add
ficomp
mov
push
movs
test
fs
test
aam
sub
jle
imul
loop
push
pop
mov
(bad)
dec
ins
arpl
cmp
pop
outs
cld
paddb
les
rcl
call
adc
sub
les
pop
xchg
fisttp
and
sub
sbb
cmp
fdivr
jl
pushf
fcomp
xchg
sbb
in
inc
imul
add
push
dec
in
push
std
rcl
sub
sbb
stc
into
loop
fcomp
cld
xchg
in
fs
add
int3
jle
pop
sub
jg
pop
or
pop
(bad)
cmp
iret
out
push
aad
or
fld
push
icebp
lods
mov
cmp
push
fadd
popf
idiv
(bad)
xor
cmc
cmc
imul
pusha
pushf
pushf
lea
jmp
cmc
mov
inc
jp
add
bt
xor
shld
sbb
shr
sar
mov
dec
sub
dec
add
not
mov
call
cmp
cmp
pusha
pusha
lea
jne
rcl
shl
test
sar
mov
stc
cmc
pusha
add
cmp
call
cmps
aas
addr16
sbb
xor
(bad)
xchg
xchg
jbe
mov
cmps
call
dec
sbb
rcl
loope
pop
pop
xchg
ret
add
cmp
mov
icebp
inc
adc
add
sbb
mov
push
out
pop
sub
pop
aam
data16
push
data16
fsub
lock
pusha
pop
mov
fs
mov
push
movs
aaa
inc
aaa
inc
pop
punpcklbw
arpl
pop
xchg
pushf
jns
popf
xchg
in
pop
lahf
mov
test
sub
xlat
fs
(bad)
lea
jae
setno
mov
dec
rcr
mov
mov
push
dec
shl
mov
pusha
mov
xor
cmp
test
stc
repnz
jmp
pop
add
shl
lock
lock
(bad)
mov
lock
xchg
popa
cmp
jo
rcr
bound
and
xchg
repnz
adc
xchg
mov
or
clc
pop
adc
inc
lods
xor
js
dec
movs
jne
cmp
cmp
pop
xor
dec
cmp
pop
push
mov
clc
js
iret
out
jg
mov
aas
int3
jle
fisttp
sahf
pop
xor
adc
call
jmp
into
mov
scas
lea
scas
frstor
sbb
scas
ins
std
sbb
push
js
(bad)
and
xchg
xlat
test
sub
movs
pop
adc
mov
mov
test
mov
jl
and
ins
pop
shr
ins
lahf
(bad)
cld
das
and
push
inc
push
inc
adc
xchg
arpl
loopne
dec
(bad)
lahf
retf
cwde
test
mov
aad
test
xor
das
jmp
mov
add
and
ja
movsx
bswap
call
mov
mov
push
push
push
lea
jmp
lahf
pop
out
sub
sbb
mov
xor
push
not
xor
jb
inc
inc
jo
cmp
retf
pop
jp
jmp
stos
popa
jns
xor
jmp
fs
js
jmp
popf
xchg
test
aaa
or
gs
jecxz
push
ret
repnz
shl
imul
jbe
gs
ror
ins
mov
in
pop
mov
cmp
in
mov
clc
fbld
mov
leave
sub
dec
or
or
dec
fs
mov
aad
(bad)
xchg
xchg
or
sahf
cmp
jmp
iret
in
mov
sbb
pop
in
xlat
xchg
add
inc
sbb
jbe
ret
dec
sbb
cli
jmp
xor
iret
sbb
call
icebp
icebp
push
adc
xlat
je
adc
adc
sub
jl
aaa
cmp
jecxz
xor
xchg
xchg
mul
jle
mov
mov
adc
add
test
mov
and
sahf
inc
inc
icebp
push
add
sub
pop
dec
in
push
repnz
adc
or
ss
sar
inc
sub
mov
mov
fwait
ja
xchg
pop
inc
repz
dec
xor
mov
inc
mov
mov
test
mov
inc
xchg
xor
cmps
sti
fmul
cmp
or
call
mov
icebp
repnz
adc
jno
mov
cld
push
shl
aam
outs
or
adc
inc
and
jmp
out
and
fs
sbb
hlt
or
js
mov
or
mov
mov
sbb
loope
lock
jo
push
mov
aad
leave
ins
xor
loope
popf
movs
out
ja
hlt
aas
jno
and
fist
dec
mov
cmp
mov
jmp
push
pusha
mov
push
ret
sahf
(bad)
mov
call
push
jbe
mov
(bad)
mov
jne
je
adc
les
mov
mov
test
repz
jmp
xchg
cmp
in
adc
sub
dec
jnp
dec
fcomp
add
jmp
mov
cmp
push
adc
sbb
jge
nop
ins
push
cmp
pop
clc
mov
adc
add
mov
movs
shl
push
cmc
mov
inc
pop
outs
sub
push
mov
jmp
out
inc
mov
sbb
fild
push
aad
ds
pop
xchg
out
sbb
sub
aad
icebp
test
aam
mov
pop
je
(bad)
(bad)
xchg
fs
sub
sar
dec
popa
movs
ret
jne
out
icebp
test
std
and
popf
mov
dec
lods
jno
cmc
mov
inc
xchg
pop
mov
jmp
xchg
repnz
imul
scas
jge
sbb
fisttp
scas
outs
add
adc
xlat
shl
sar
je
dec
jo
outs
push
gs
gs
inc
add
mov
xor
sbb
adc
xchg
lock
mov
push
add
mov
xchg
sti
adc
xor
js
sbb
clc
fnstcw
imul
(bad)
cmp
push
dec
mov
hlt
mov
adc
(bad)
xchg
imul
leave
mov
mov
das
popa
stos
scas
xchg
int3
gs
push
and
sub
xor
in
or
arpl
jp
cmp
shl
test
cmp
lahf
mov
or
ds
shl
fisttp
sbb
sbb
cli
fstp
pop
pop
call
icebp
xlat
push
cmps
aam
pop
aaa
jo
rcr
test
sub
aas
das
adc
in
xchg
sub
and
ss
es
pop
dec
add
out
cmp
repnz
int
jl
fisttp
push
cs
sahf
jo
mov
inc
pop
push
inc
push
sub
push
idiv
pop
mov
data16
rol
inc
xor
lods
lds
(bad)
test
je
stc
cmc
cmc
pusha
add
push
bt
cmp
pusha
lea
jb
stc
cmp
call
mov
pushf
push
lea
jmp
xor
clc
xor
sbb
(bad)
in
inc
mov
das
movs
xchg
(bad)
not
out
pushf
shr
sbb
repnz
add
retf
jmp
imul
dec
mov
push
or
xlat
push
lds
or
sbb
push
or
and
aaa
retf
push
ins
jns
xchg
sbb
xor
push
mov
cmps
hlt
addr16
out
xchg
sub
and
sbb
rol
call
test
xor
sbb
jo
nop
repz
push
mov
repnz
mov
pop
jg
mov
les
adc
cmps
out
arpl
icebp
shl
jno
jl
and
shl
mov
mov
(bad)
lea
mov
sbb
jle
test
jbe
jmp
pop
sbb
mov
repz
or
pop
jge
test
aas
loopne
cmp
sub
imul
cmp
bound
xchg
jecxz
loop
inc
adc
xor
mov
pop
lds
into
sub
mov
movsx
pop
jmp
inc
bt
xor
cmc
cmc
bt
cmc
ror
cmp
call
call
sbb
in
test
lds
es
aad
imul
push
push
mov
lock
test
xor
shl
xchg
jo
xor
call
xchg
adc
and
ret
add
adc
push
outs
pop
push
popa
cmps
jg
popa
push
cmps
sbb
test
adc
xchg
loop
int
loopne
jp
mov
xor
sbb
mov
adc
sbb
push
sub
cmps
dec
outs
(bad)
jo
nop
shl
imul
outs
arpl
scas
addr16
mov
int3
and
fdivr
(bad)
rcr
(bad)
call
(bad)
and
add
push
push
xlat
push
jmp
idiv
imul
jecxz
rcl
fsub
ret
mov
xchg
jmp
push
add
jo
adc
xchg
inc
lock
mov
jmp
sbb
call
cs
sub
mov
and
sub
jne
mov
cli
fadd
jnp
add
ror
rcl
sbb
jge
mov
ins
mov
es
and
arpl
(bad)
in
ret
gs
cmp
aam
hlt
adc
(bad)
hlt
data16
pop
jae
pop
push
push
dec
push
and
shr
add
push
dec
lahf
jle
mov
out
xor
cld
pop
jmp
enter
push
adc
inc
pop
jae
adc
sub
(bad)
bt
sub
push
rep
movzx
mov
mov
push
mov
lea
jmp
xchg
push
cmp
call
fcomp
jp
cmp
jmp
jo
pop
add
mov
aam
xchg
push
dec
cmp
test
and
add
xor
sbb
(bad)
int3
aam
repnz
xor
mov
jmp
inc
xlat
jns
mov
arpl
cld
dec
pop
das
sti
or
mov
adc
pop
add
xor
mov
xor
and
pop
test
and
imul
push
inc
(bad)
xor
mov
cmp
sub
pop
adc
xchg
push
pop
mov
cmp
loope
addr16
dec
movs
pop
add
sub
lahf
pop
pop
sub
pop
mov
pop
mov
test
jmp
mov
es
rcl
call
and
cmps
gs
test
movs
jno
outs
inc
loope
loop
push
add
std
(bad)
inc
in
test
in
mov
xchg
iret
add
nop
mov
fldcw
sub
lods
pusha
xchg
outs
out
test
mov
mov
mov
sbb
sbb
sbb
(bad)
fnstsw
cld
xchg
hlt
es
cmc
pop
jne
xchg
addr16
(bad)
cdq
pop
mov
mov
pushf
lea
je
sbb
adc
test
inc
add
movsx
jmp
mov
mov
pusha
jmp
xor
call
add
and
popa
mov
test
sbb
aad
fs
or
or
out
imul
jbe
cmp
jb
add
inc
and
inc
pop
(bad)
(bad)
sbb
add
mov
stos
ins
xchg
lods
fild
outs
outs
stos
push
or
jmp
mov
out
(bad)
cli
fcom
and
cld
les
and
push
jmp
and
mov
bts
neg
cmp
mov
pusha
push
pusha
sub
pushf
mov
mov
rep
lea
lea
movsx
mov
mov
push
mov
mov
lea
jmp
fcomp
jo
adc
push
mov
mov
xchg
lock
retf
test
cmps
xchg
ds
dec
push
or
push
xchg
div
gs
push
pop
mov
inc
bound
inc
dec
or
pop
jns
pop
jmp
or
sbb
mov
mov
xor
mov
pop
mov
sbb
add
lea
fldenv
gs
mul
fs
mov
push
add
stc
push
mov
lea
je
pusha
pusha
pushf
lea
jmp
adc
push
pushf
push
ret
mov
lea
jb
call
lock
mov
and
inc
movs
push
test
and
xchg
pop
js
mov
xchg
out
lahf
lods
xchg
cwde
not
xor
adc
out
cmp
jg
adc
ja
add
cmps
iret
push
sub
les
adc
idiv
(bad)
js
mov
adc
jns
jle
in
jo
cmp
jbe
mov
(bad)
loope
rol
xor
xor
jns
enter
adc
fstp
or
lea
jne
push
lea
call
pusha
push
pusha
push
lea
jmp
pusha
push
mov
mov
mov
push
lea
jmp
call
sbb
pop
fcomp
fcomp
jg
aas
sub
test
push
movs
jbe
dec
imul
dec
fcom
jg
popf
jg
test
sbb
pop
jnp
es
ds
inc
inc
dec
and
mov
mov
or
(bad)
enter
cmp
icebp
hlt
(bad)
mov
mov
dec
dec
daa
movs
push
scas
das
mov
imul
mov
cmp
xchg
jnp
mov
das
mov
mov
mul
push
add
cs
(bad)
dec
dec
sub
cmp
xchg
xchg
je
adc
mov
ss
cmps
sub
inc
(bad)
jp
outs
int
in
ds
in
pop
or
sub
data16
mov
mov
dec
je
pusha
add
cmc
cmp
pusha
lea
jb
jmp
pop
xchg
call
dec
dec
ins
into
or
or
mov
sbb
cmp
push
loopne
adc
call
xchg
mov
mov
test
sbb
sbb
in
imul
je
add
mov
fild
or
mov
adc
clc
jg
jg
data16
mov
loopne
stc
sti
xor
popf
(bad)
scas
scas
lds
push
inc
mov
sbb
cmps
popa
jb
popa
push
push
aad
sahf
cwd
ins
pusha
out
adc
push
outs
std
push
std
scas
fmul
iret
sbb
fmul
dec
jp
dec
cmp
add
cmp
sbb
retf
mov
dec
dec
call
sbb
cmp
gs
pop
loope
add
stos
pop
xchg
jecxz
nop
push
jnp
mov
mov
xchg
bound
aad
mov
and
ret
cli
inc
in
cwde
xchg
aas
popa
stos
scas
imul
rol
jnp
inc
jo
xchg
jno
mov
push
add
xchg
aas
std
(bad)
mov
push
jge
mov
xlat
push
rep
sub
gs
sbb
xchg
je
sbb
jbe
ret
adc
or
lds
aam
cdq
dec
scas
dec
das
dec
dec
or
in
push
adc
movs
xlat
inc
push
inc
push
movs
xchg
xlat
and
cmp
sbb
ins
push
lods
iret
sub
das
dec
iret
dec
fcomp
pop
js
fcomp
cli
xor
jmp
sbb
icebp
cmps
mov
add
add
and
ror
mov
(bad)
ja
xchg
fwait
add
ror
cmp
mov
inc
lock
not
in
faddp
int3
xor
scas
add
mov
jbe
popf
movs
mov
ins
mov
sub
xchg
sub
in
pop
or
aas
lods
mov
jmp
ins
popf
rcl
inc
sub
sbb
push
jno
inc
and
push
lods
xchg
jl
js
(bad)
xor
out
retf
push
call
push
push
div
rcr
fs
(bad)
jle
mov
scas
sbb
scas
cld
das
std
scas
aaa
dec
ins
xchg
jp
out
sub
sub
hlt
call
cli
jge
std
pop
pop
mov
jl
sbb
ja
add
int3
xchg
mov
lds
rcl
lahf
cwde
stc
add
ret
dec
lahf
push
lock
aam
pop
clc
mov
cmps
popa
(bad)
push
cdq
sbb
push
movs
pop
xchg
inc
fmul
pusha
(bad)
cmp
pop
or
rcr
and
fimul
jle
jg
lahf
sub
mov
cmps
jne
jne
gs
xor
fs
ins
add
push
ja
xlat
xor
div
xchg
(bad)
outs
cmp
pusha
mov
repnz
shl
mov
push
cmp
jae
sbb
mov
sti
and
cwde
fsub
mov
(bad)
(bad)
movs
loop
xchg
inc
xchg
mov
xchg
and
loope
ss
cmps
fwait
dec
test
stc
xchg
fnstenv
retf
jge
mov
call
push
jbe
out
lock
xor
stc
sub
and
mov
and
mov
jmp
sbb
aam
jo
add
lods
(bad)
sahf
mov
sbb
adc
rcl
scas
mov
dec
sub
or
mov
pop
jmp
lds
and
call
jmp
(bad)
mov
gs
scas
cmp
push
xchg
push
push
cmp
fucomip
sahf
int
ins
fimul
sub
inc
pop
mov
cmps
adc
cli
(bad)
(bad)
call
push
mov
mov
push
pushf
pushf
mov
push
ret
pushf
imul
bt
pusha
bt
add
mov
mov
push
lea
jmp
inc
lea
and
bt
inc
rcr
xchg
inc
movzx
mov
shl
xor
shl
mov
cmp
bt
call
pusha
pushf
stos
push
mov
lea
jmp
add
inc
js
je
jb
arpl
jae
pushf
xor
bt
pushf
pushf
ror
test
bt
cmp
jmp
seto
movzx
sub
adc
shl
cmc
shr
shld
mov
not
add
cmc
cmc
sbb
add
bsf
stc
call
retf
call
pushf
mov
pop
cli
push
dec
sub
gs
loopne
jg
sbb
outs
sub
or
addr16
mov
ret
mov
mov
outs
dec
icebp
ja
out
addr16
daa
hlt
es
xchg
addr16
ins
add
cmp
iret
cmp
push
jmp
push
enter
sbb
pushf
aas
jnp
dec
pop
movs
arpl
mov
icebp
push
stos
cli
cmp
jae
out
data16
inc
xchg
push
gs
pop
jmp
mov
mov
push
mov
xchg
out
xchg
outs
aas
int
and
push
dec
iret
sub
cmp
lods
fsubrp
jle
jg
mov
pop
lahf
jo
or
stos
cwde
mov
call
call
lea
je
cmp
test
pushf
test
cmp
pushf
pushf
jmp
push
pop
enter
lock
xchg
push
je
repz
xor
int
pop
sbb
inc
inc
mov
ins
cdq
sbb
les
sub
push
in
or
jmp
cmp
enter
sub
cmp
push
scas
gs
aad
cmc
(bad)
adc
out
lods
ret
scas
cmc
test
adc
push
sbb
rol
push
or
pushf
push
mov
push
pusha
push
lea
jmp
cld
in
inc
call
mov
test
imul
mov
xchg
inc
arpl
mov
xchg
push
add
adc
(bad)
mov
fisttp
xchg
dec
mov
add
out
fcomp
pushf
jbe
xchg
out
sbb
stc
push
lock
sbb
lock
call
pop
(bad)
dec
jae
inc
lea
cmp
mov
mov
dec
mov
dec
out
clc
pop
in
lahf
loopne
mov
add
pusha
pusha
mov
lea
call
call
cmc
clc
sub
pushf
jmp
mov
inc
call
and
pop
and
icebp
imul
ins
push
xchg
fwait
jp
mov
sahf
pop
pop
cmp
std
(bad)
cmp
out
adc
xchg
jecxz
mov
push
mov
addr16
cmp
inc
aas
shl
mov
jp
add
xor
cli
jp
lahf
sbb
mov
inc
call
mov
dec
out
add
(bad)
outs
inc
shl
and
xchg
and
add
cmp
cmp
mov
dec
xor
sub
add
test
fwait
or
adc
(bad)
movs
dec
adc
imul
in
xchg
iret
xchg
inc
jne
inc
or
lock
fnstcw
inc
and
popa
xor
lods
hlt
mov
outs
(bad)
call
aaa
lods
or
test
movs
aaa
add
das
inc
xor
adc
mov
mov
movsx
bswap
mov
pusha
pushf
mov
pusha
mov
mov
pusha
push
ret
xchg
sub
cmp
fnstsw
mov
pop
(bad)
fsub
popa
lods
out
and
es
sub
leave
mov
test
xor
cmp
dec
int
jp
jns
std
ret
or
loope
int3
retf
iret
out
or
xor
leave
push
mov
mov
iret
cld
add
push
fstp
push
jg
pop
cli
mov
mov
jp
lds
popa
mov
repz
cli
cmp
pop
repz
mov
mov
push
in
pop
clc
pop
pop
inc
inc
call
jge
jns
clc
cli
fsqrt
jns
cwde
jp
jnp
sub
and
fwait
cld
ds
addr16
stc
cmp
sbb
rcl
ret
(bad)
cld
loope
push
div
dec
rol
jge
call
dec
adc
aad
shl
mov
add
inc
xchg
(bad)
xlat
or
shl
pop
lock
test
push
or
push
dec
dec
lods
or
dec
xchg
mov
add
or
addr16
les
les
mov
popf
repnz
adc
pop
sub
jmp
push
sbb
inc
add
add
inc
cmps
add
jnp
sbb
pop
jge
adc
push
jmp
adc
mov
xchg
xchg
xchg
pop
xor
cmp
rcr
xor
je
inc
aaa
(bad)
pop
cmc
outs
arpl
jno
int
fistp
cmps
sar
(bad)
xor
push
push
fidiv
repz
pop
ret
inc
call
std
mov
cmp
add
mov
outs
call
fist
sub
push
fisubr
(bad)
mov
sub
psraw
std
movs
pop
sahf
xchg
pusha
repnz
rol
cs
mov
jae
xchg
lahf
ret
les
aad
in
dec
pop
adc
test
xchg
popf
fistp
scas
popf
out
push
nop
sub
dec
or
adc
sti
add
xor
dec
cmp
fmul
fsubr
stc
jmp
sub
popa
div
aas
xchg
xchg
xor
push
lea
call
clc
call
xchg
emms
inc
call
inc
lds
in
gs
test
inc
out
stos
adc
jno
lds
and
mov
jle
ss
push
cwde
pop
dec
adc
mov
int3
cs
xchg
xor
xchg
xchg
dec
daa
cmp
adc
loope
xchg
sti
or
pop
arpl
aas
pop
push
int3
(bad)
call
add
pop
xchg
jne
mov
aam
xor
addr16
add
sahf
popf
pop
ins
mov
adc
test
cwde
(bad)
push
sub
bt
cmp
call
jmp
sbb
out
pop
in
and
inc
cmps
(bad)
mov
out
push
xchg
push
adc
scas
bound
jae
test
in
xor
ficom
push
jbe
sbb
add
fstp
jns
sub
mov
add
shl
push
xchg
fdiv
add
mov
lahf
push
lods
jmp
mov
jmp
call
ret
test
mov
(bad)
dec
jmp
and
push
ret
lea
je
test
cmp
cmp
sub
call
mov
pop
inc
call
add
addr16
inc
cmps
and
lahf
mov
or
imul
pop
mov
mov
scas
imul
and
pop
and
test
push
repz
outs
out
adc
imul
out
jle
scas
fs
scas
sub
xchg
add
clc
fs
xchg
pusha
cdq
scas
jp
ss
icebp
xchg
test
in
les
lds
push
movs
lds
sub
sbb
sbb
add
ret
inc
mov
jecxz
xchg
push
mov
sbb
ja
lods
subps
sti
pop
push
aam
(bad)
lods
push
cmps
cmps
call
dec
jno
ss
icebp
lods
or
pushf
mov
push
push
and
mov
jae
sbb
pop
cmp
dec
iret
sbb
jno
and
rol
pusha
js
mov
mov
jno
xor
ins
mov
xchg
or
sbb
mov
sbb
mov
(bad)
aam
push
adc
out
mov
mov
jge
dec
sub
adc
sbb
add
movs
dec
movs
lods
push
gs
jmp
and
mov
sbb
sub
mov
cli
or
sbb
jnp
xor
daa
pop
daa
push
stos
cmp
sbb
push
rcl
jno
shl
push
push
jo
rcl
wbinvd
aad
shl
fnstenv
(bad)
ins
sbb
sub
push
ret
stos
rcl
int
out
xchg
mov
or
mov
lahf
pop
(bad)
lock
fsub
mov
xor
push
loop
mov
or
mov
mov
push
scas
push
jne
out
mov
movs
(bad)
sbb
nop
sahf
out
ret
add
inc
mov
imul
test
imul
cdq
fdiv
xchg
adc
jmp
mov
gs
inc
inc
es
xor
inc
data16
jns
rcl
icebp
cmp
int
imul
inc
inc
and
sub
mov
mov
add
pop
pusha
push
ret
push
dec
mov
call
sub
retf
dec
jmp
push
fs
iret
or
pop
or
mov
mov
scas
or
stos
lahf
ficom
rcl
adc
pop
jg
pop
(bad)
xchg
out
mov
xor
pop
ins
fisttp
mov
fcmovu
dec
ins
sbb
cdq
jnp
fprem1
push
and
push
push
add
ret
mov
mov
pop
stos
imul
cmps
ins
xchg
xchg
hlt
ret
xor
loopne
lods
or
mov
inc
pop
enter
call
add
je
outs
fs
gs
imul
add
sbb
popa
jecxz
inc
inc
shl
and
pop
fistp
sbb
xor
inc
sbb
push
ret
adc
mov
xor
xchg
or
or
sbb
xchg
(bad)
aas
js
test
int3
(bad)
sbb
mov
in
pop
adc
lea
inc
mov
pop
(bad)
jl
cli
dec
fisubr
les
jo
add
pusha
rol
adc
push
(bad)
loope
les
(bad)
adc
cs
int3
cmp
sbb
loope
add
data16
(bad)
repnz
mov
inc
fidivr
mov
ja
fld
jb
or
mov
test
jae
pop
add
mov
push
out
inc
outs
gs
xrelease
fidiv
jle
push
xchg
jnp
arpl
ss
push
out
sub
dec
call
adc
outs
cwde
cwde
pop
sti
xor
retf
rol
hlt
xchg
or
add
shr
sbb
outs
dec
dec
int
sub
dec
cs
in
mov
inc
push
inc
repnz
add
mov
ins
mov
dec
fadd
xlat
sbb
xor
mov
in
sub
cmp
or
hlt
push
push
lds
enter
pop
mov
(bad)
ror
(bad)
jo
mov
dec
clc
or
cwde
push
sub
inc
fdivr
mov
adc
jmp
hlt
rol
xor
mov
pushf
lea
ja
clc
pushf
imul
pusha
pusha
pushf
lea
jmp
loopne
es
call
xchg
jne
cmc
mov
nop
ja
jbe
mov
mov
jge
inc
bound
div
sti
push
adc
and
jl
cmp
pop
mov
cmp
(bad)
popa
cmc
add
xchg
movs
add
test
mov
add
sub
dec
mov
dec
pop
mov
add
push
nop
sbb
sahf
retf
inc
sar
popf
ja
ins
cmp
lods
(bad)
aaa
xor
outs
pop
xchg
xchg
loopne
hlt
in
or
inc
sbb
xchg
nop
inc
mov
test
call
add
test
or
mov
sbb
mov
push
leave
call
xor
mov
lea
jo
pusha
inc
pushf
jmp
lea
ja
push
clc
mov
imul
mov
lea
jmp
enter
call
jp
aas
cld
pop
popf
jle
(bad)
fdivr
pop
push
je
sub
mov
mov
push
or
(bad)
cld
and
lahf
jl
scas
mov
icebp
out
jae
les
addr16
mov
add
mov
sar
mov
ins
push
sahf
push
retf
sbb
dec
push
ins
mov
lea
adc
pop
add
ret
pop
inc
sub
and
xor
in
pop
pop
imul
je
dec
pop
dec
dec
rcr
jbe
cwde
lahf
lods
mov
dec
call
dec
das
sub
dec
scas
int3
out
dec
scas
sub
dec
ficomp
out
dec
fisubr
push
inc
inc
test
imul
hlt
xchg
sub
mov
mov
mov
in
les
cmps
mov
in
je
nop
lahf
push
popa
sbb
and
fisubr
dec
ja
mov
jno
out
mov
out
loop
push
adc
jno
in
mov
cli
(bad)
mov
call
cmc
addr16
xchg
outs
sub
mov
mov
xchg
je
jl
frstor
mov
fistp
sbb
nop
call
std
add
jmp
dec
adc
daa
mov
cmp
mov
inc
lea
outs
(bad)
pop
into
mov
mov
imul
jl
mov
sub
iret
sub
into
int
or
add
xlat
adc
or
dec
jl
jg
lock
mov
cmp
mov
mov
dec
dec
xor
push
mov
pop
clc
pusha
fist
mov
(bad)
jno
add
push
and
retf
(bad)
ret
ror
push
loope
push
(bad)
popf
scas
or
add
stc
or
xchg
mov
mov
jmp
xor
mov
bt
cmp
mov
cwde
lahf
lea
lea
not
pop
mov
call
pusha
mov
push
push
pushf
lea
jmp
call
jmp
pop
pop
outs
dec
call
outs
ins
scas
sub
outs
lea
int3
cs
into
into
in
call
xlat
lahf
ret
les
mov
fdiv
xor
jns
fsubr
ins
jae
pop
(bad)
adc
test
xchg
rol
lods
je
das
ja
in
icebp
and
xor
mov
rcl
sub
cmp
sbb
bound
outs
std
scas
jmp
outs
mov
fucomip
rol
mov
ja
(bad)
jne
adc
pop
xchg
daa
jg
adc
adc
fdivrp
or
inc
push
cmp
or
call
push
call
push
mov
jmp
mov
adc
push
xor
rcl
jl
inc
scas
test
dec
mov
shl
push
mov
(bad)
xor
gs
in
scas
or
int3
out
in
je
imul
adc
mov
call
ret
push
lock
and
call
pop
adc
adc
popf
ret
popf
test
mov
in
mov
repnz
imul
ja
aas
sub
inc
mov
inc
jmp
xchg
leave
iret
or
outs
in
out
inc
xchg
cmps
aad
ins
and
cmp
test
fs
clc
pop
stos
lahf
popa
inc
test
mov
add
icebp
iret
dec
mov
mov
(bad)
mov
out
xor
dec
sbb
sbb
enter
mov
shl
rcl
into
xchg
xor
sub
jns
out
xlat
and
sub
sbb
pop
dec
sbb
adc
call
lea
call
push
pushf
lea
jmp
pushf
lea
jne
movzx
lahf
pushf
mov
call
(bad)
sti
jecxz
call
fnstsw
pop
jp
mov
add
fucomp
dec
sub
sub
fidivr
pop
fidivr
mov
pop
and
retf
lods
aas
ins
adc
div
fadd
hlt
pop
movs
dec
adc
sbb
and
pop
lods
pop
dec
mov
push
ja
in
addr16
jnp
test
les
inc
dec
test
mov
add
aaa
aaa
cmp
pop
mov
(bad)
jecxz
pop
cwde
ins
push
fcomp
test
mov
push
cmp
cmp
or
lea
mov
bswap
lea
xchg
mov
not
mov
pop
push
mov
mov
mov
movzx
call
pop
inc
scas
dec
call
push
aaa
adc
ss
xchg
hlt
mov
lods
dec
jno
cmps
pop
fcmovu
jmp
xchg
and
popa
add
aas
mov
repnz
mov
lahf
jmp
sub
jnp
xchg
aam
adc
movs
das
mov
dec
imul
scas
in
or
push
mov
dec
adc
jle
jno
sbb
int
in
push
sub
lahf
pop
cld
pop
push
iret
dec
(bad)
dec
pop
xchg
nop
movs
ins
or
push
push
jmp
xchg
mov
cli
pop
cmp
pop
jns
dec
jmp
fbld
dec
mov
cmp
ret
adc
push
cmp
add
stc
fldcw
sbb
mov
mov
fstp
je
xchg
add
and
(bad)
dec
xchg
fcom
xor
ss
loop
add
and
loop
iret
iret
mov
call
add
movs
daa
mov
movs
mov
in
into
inc
clc
mov
jg
xor
rcl
push
mov
lds
in
push
xchg
addr16
fsub
cs
xchg
enter
(bad)
stc
bnd
mov
xor
push
stc
repz
pop
xchg
in
pop
call
ss
xlat
fs
les
push
xchg
lea
dec
lahf
push
sub
out
jmp
inc
jp
mov
loopne
fstp
adc
cmp
xchg
push
div
jecxz
cwde
es
push
mov
mov
push
push
div
not
push
or
loopne
nop
lock
leave
imul
es
pop
sub
mov
sub
mov
lds
idiv
sub
push
jecxz
cmp
mov
or
inc
adc
or
push
xchg
inc
loope
mov
sbb
xchg
leave
adc
gs
mov
xor
and
inc
mov
cmp
adc
repnz
jae
mov
mov
pusha
lea
call
pushf
adc
mov
mov
jmp
call
cld
and
push
call
xchg
adc
aaa
jo
jo
jno
mov
loope
in
aam
mov
ja
(bad)
pop
or
or
ins
lahf
lods
adc
jae
rcr
outs
sbb
in
add
push
mov
jbe
fwait
call
sub
shl
cld
or
dec
popa
sahf
aad
gs
mov
jbe
xlat
movs
lds
and
fdivr
mov
(bad)
(bad)
push
repnz
push
mov
push
pushf
lea
jne
not
neg
xchg
neg
mov
btc
rol
push
not
sub
add
push
lea
clc
sub
test
pushf
clc
push
pop
cmc
stc
stc
cmp
pusha
mov
lea
ja
or
shl
add
jmp
test
inc
push
call
daa
mov
and
mov
fld
sub
scas
cmp
imul
iret
int3
mov
adc
dec
cwde
mov
dec
ret
pop
cmp
test
push
addr16
xchg
push
sub
dec
popf
and
out
out
pop
lea
bound
add
sub
je
jo
enter
in
adc
pushf
inc
daa
in
aas
or
push
xchg
adc
stos
adc
jmp
popa
arpl
and
and
ins
outs
jnp
inc
not
mov
xor
ss
test
sub
(bad)
pop
mov
add
js
jae
sub
mov
jecxz
and
add
inc
test
mov
aas
cmp
pop
mov
test
mov
inc
push
or
dec
adc
xchg
sbb
iret
sub
loopne
cmp
pop
or
inc
adc
push
or
dec
stos
push
test
xor
jp
call
mov
mov
ror
mov
and
push
cli
inc
pop
push
repz
xor
fwait
sbb
in
bt
repnz
push
lea
jne
pushf
mov
call
lea
je
pusha
cmp
call
bsr
clc
not
cmc
push
inc
mov
lea
push
not
xor
sub
movzx
shl
rcl
push
cmc
push
aaa
jmp
inc
mov
cmc
test
cmp
call
cld
adc
sbb
or
mov
scas
dec
movs
cld
call
sbb
mov
mov
add
gs
iret
rol
jns
sbb
es
cwde
fs
(bad)
jb
nop
inc
pop
inc
and
xchg
stos
in
call
mul
and
je
mov
pushf
sbb
jae
mov
test
icebp
cmc
mov
ins
inc
ret
xchg
dec
out
test
add
cmp
jp
mov
imul
loopne
das
neg
cmp
xchg
mov
mov
ja
ss
rcr
out
fistp
sub
push
push
test
cmp
lea
pop
mov
vpmacsdqh
inc
xor
xor
sbb
mov
aas
xchg
inc
pop
scas
pop
mov
dec
xchg
pop
pop
adc
mov
pop
popa
sbb
pop
jno
mov
mov
jae
aad
(bad)
jecxz
adc
daa
jae
adc
mov
or
mov
push
mov
pop
push
push
dec
test
loop
push
add
pop
pop
mov
loopne
push
stc
mov
in
call
stc
mov
pop
cmp
push
les
sub
je
mov
cld
fld
or
jns
jmp
daa
arpl
mov
scas
stos
push
imul
push
jl
movq
stc
pop
xchg
(bad)
loop
inc
fcomp
lahf
pusha
push
xor
test
call
je
mov
dec
retf
sub
fdiv
pop
inc
jecxz
not
jmp
adc
xchg
cmc
test
gs
cmp
in
out
in
pop
xchg
repz
movs
repz
or
or
add
push
repz
xchg
adc
arpl
mov
xchg
movs
das
add
jno
xchg
sbb
jl
push
jno
movs
movs
push
inc
int3
addr16
pop
jle
ret
xchg
(bad)
sbb
add
stc
and
jbe
cld
jmp
stc
mov
mov
cld
mov
adc
cli
add
pop
(bad)
int
jge
je
data16
pop
ret
fistp
dec
dec
jmp
add
jns
dec
in
scas
idiv
(bad)
push
adc
not
adc
xchg
mov
lods
div
jne
dec
popf
pop
fwait
hlt
(bad)
pop
div
inc
xor
fld
out
retf
outs
xor
pushf
rcr
lock
push
imul
push
ins
cmp
xor
sbb
dec
fs
sub
or
rcr
push
add
icebp
xor
or
sbb
mov
mov
ss
and
cld
push
fcomp
lods
push
cmps
mov
jl
dec
aas
addr16
mov
push
add
gs
test
mul
out
mov
in
retf
mov
leave
js
cmp
shr
stc
add
clc
clc
mov
rol
clc
clc
cmp
xor
jmp
jmp
cmp
xchg
xor
hlt
pop
aad
adc
mov
aaa
aam
movs
std
push
or
and
sub
pop
pop
add
jp
sub
movs
inc
adc
jae
xor
je
je
mul
and
xor
int
add
mov
fwait
mov
(bad)
mov
add
jnp
mov
retf
out
inc
test
dec
inc
mov
(bad)
out
mov
popf
add
out
jns
movs
(bad)
test
xchg
(bad)
mul
test
fs
adc
inc
xor
dec
(bad)
call
shl
call
push
dec
dec
dec
dec
inc
push
cs
ins
add
sbb
or
push
retf
or
ror
test
xchg
inc
fnstcw
jmp
sti
cmp
mov
mov
popf
add
adc
bound
xchg
(bad)
push
in
fnstenv
test
mov
sbb
retf
mov
inc
in
xlat
(bad)
aas
addr16
xor
nop
inc
ret
pop
sbb
pop
push
inc
xlat
jnp
inc
mov
loope
push
leave
add
mov
xchg
mov
ror
mov
stos
aam
mov
sbb
sub
leave
mov
sub
push
(bad)
jno
int3
retf
and
fild
sbb
mov
push
pop
mov
sub
mov
jmp
ret
call
xchg
arpl
imul
ret
ror
in
inc
sbb
jecxz
aas
pop
rcl
pop
aad
inc
sti
mov
cmps
movs
push
inc
mul
fsub
or
(bad)
ret
cmp
cdq
sbb
std
fnstcw
addr16
adc
and
pop
ret
inc
mov
outs
not
call
mov
mov
cmp
pushf
mov
pusha
lea
jae
pusha
cmp
call
mov
sbb
dec
sub
dec
imul
cmc
test
cmc
push
adc
sti
lea
add
jae
push
aas
sub
fiadd
cmps
lods
test
jle
call
stc
ficom
pop
pusha
pop
repnz
add
gs
jp
call
mov
into
mov
stc
outs
in
cmp
push
push
out
mov
cmp
xor
out
push
retf
sbb
lahf
pushf
std
fwait
inc
or
in
inc
push
(bad)
xor
gs
aad
xchg
pop
mov
mov
xchg
cmps
shr
adc
bt
call
sub
pop
call
cmp
fstp
cmp
pop
mov
scas
std
inc
in
xchg
lea
mov
mov
sub
fldcw
jae
not
std
movs
pop
sahf
and
(bad)
(bad)
sahf
movs
or
adc
add
out
out
out
es
daa
(bad)
icebp
inc
hlt
push
cmps
jle
fcomp
jl
rol
aas
(bad)
(bad)
and
jl
sub
pop
fcom
xchg
mov
inc
lea
pusha
mov
mov
lea
call
jmp
or
pop
call
and
add
ret
and
loope
inc
and
imul
sbb
and
call
data16
iret
jmp
cld
push
hlt
outs
mov
jnp
fs
pop
mov
dec
and
and
push
xor
mov
and
xchg
stc
jl
or
stc
cli
in
outs
and
(bad)
aas
xchg
hlt
push
xlat
mov
push
mov
ret
inc
repz
jbe
and
and
xchg
int
imul
addr16
cwde
inc
inc
fld
push
jg
test
dec
sbb
sbb
jge
(bad)
test
pop
mov
xor
repnz
call
mov
xor
xchg
push
adc
lock
xchg
mov
iret
xchg
pop
and
mov
inc
add
loop
bound
xchg
mov
push
lds
in
lods
jle
mov
or
cmp
test
xlat
(bad)
or
mov
outs
repnz
ror
outs
fucomi
pop
lock
setge
enter
ret
gs
fstp
mov
inc
mov
daa
xchg
inc
int
sub
cmp
cmp
jmp
cld
fs
scas
lods
add
mov
sub
dec
push
inc
fs
in
add
and
pop
and
adc
jo
retf
fnsetpm(287
(bad)
jo
or
sahf
or
jp
repnz
and
sbb
sub
imul
in
(bad)
mov
in
je
ss
inc
cmp
cmp
cmp
ins
or
cdq
mov
outs
or
mov
mov
pop
sub
pop
hlt
mov
and
in
xor
push
or
scas
sub
pop
adc
inc
xchg
aas
sub
xchg
push
pop
loope
inc
out
sub
cmps
dec
adc
daa
cmc
lea
mov
fadd
fisub
or
imul
pop
jle
popf
fs
loope
lea
add
push
leave
add
and
xchg
mov
shl
aam
adc
pop
out
(bad)
xchg
lds
and
les
movs
cmp
movs
js
dec
jle
pushf
pusha
lea
call
call
shr
not
push
rcl
call
sub
sbb
stc
pop
jns
sbb
stc
ficomp
jns
cmp
mov
sbb
xchg
xchg
call
sub
add
and
cwde
jbe
fldcw
xchg
fs
push
in
inc
push
shr
das
fwait
ja
xchg
push
xchg
cmc
sub
mov
and
jmp
push
jnp
nop
sub
cld
cld
cmp
mov
fnstenv
scas
stos
pusha
ror
push
dec
cmps
shl
in
fbld
scas
sbb
sbb
cwde
mov
fidiv
(bad)
xor
and
test
jmp
mov
push
mov
movsx
lea
lahf
pop
push
not
push
mov
lea
pusha
push
pushf
jmp
adc
adc
pop
(bad)
sbb
mov
aas
xchg
cdq
mov
xchg
xchg
call
ja
lods
or
inc
pop
shr
bswap
sub
dec
in
rcl
or
retf
loope
lds
dec
sar
jne
hlt
es
xchg
xchg
push
mov
mov
sbb
enter
cmc
clc
not
test
mov
test
mov
pushf
pushf
add
clc
clc
call
lahf
sub
call
aad
rcl
icebp
push
nop
adc
popf
dec
sub
(bad)
cwde
fidiv
mov
int3
fdivr
add
fs
dec
dec
mov
push
outs
xor
mov
push
or
cdq
push
push
pop
cdq
jle
lock
into
push
retf
(bad)
sub
aam
jb
maskmovq
idiv
ret
or
xor
rcr
sub
mov
mov
aaa
inc
push
inc
mov
push
inc
mul
cmp
dec
and
lock
jns
call
inc
loope
loope
add
and
popa
add
mov
inc
dec
push
icebp
repnz
adc
fdivr
cmp
(bad)
or
mov
loopne
mov
arpl
ss
retf
out
loopne
leave
xor
jmp
or
cdq
(bad)
in
aam
out
pop
gs
mov
mov
inc
sub
xor
loope
jmp
jle
scas
push
xor
loope
mov
and
inc
mov
xchg
xor
mov
sbb
inc
mov
movsx
mov
inc
mov
cmp
test
xor
cmp
call
mov
lea
call
pusha
pushf
lea
jb
push
pushf
mov
push
ret
xor
call
fdivr
fstp
pop
cli
cmp
cdq
cmp
icebp
dec
cld
loop
mov
and
jmp
fwait
and
cmp
pop
stos
and
and
ss
icebp
ins
int
clc
scas
inc
jmp
or
xor
shr
dec
ror
adc
or
inc
adc
mov
push
inc
icebp
ret
pop
sub
xlat
cmc
xchg
xchg
inc
neg
out
jecxz
clc
pusha
jmp
pusha
pusha
push
lea
ja
test
stc
setl
sub
sub
bt
clc
add
shr
btr
mov
push
mov
push
pusha
jmp
pop
xchg
call
adc
cmc
mov
aaa
push
ss
push
aad
xor
mov
mov
xor
outs
fs
data16
xor
cmp
lods
scas
inc
xchg
mov
and
idiv
mov
xchg
dec
pop
repnz
push
loope
or
adc
xor
push
cmp
arpl
es
repz
jmp
mov
stos
cmp
test
lods
jmp
lea
jne
shr
mov
pushf
jmp
xchg
adc
mov
call
jmp
call
pushf
lea
call
call
pushf
inc
cs
sbb
sub
outs
in
(bad)
sahf
(bad)
out
fsubr
outs
sbb
pop
retf
test
cli
mov
jecxz
jg
jnp
(bad)
pusha
mov
jne
dec
sbb
pop
cmp
jl
(bad)
and
fsub
movs
push
jmp
xor
or
mov
or
(bad)
jns
mov
add
in
mov
dec
xor
popa
jb
adc
push
or
movs
cwde
inc
call
sub
sub
out
or
lods
into
jl
imul
pushf
sbb
repz
rcl
scas
add
scas
inc
ins
lock
mov
fsub
or
mov
out
cmc
add
call
jmp
(bad)
pop
jmp
and
jnp
in
push
out
repnz
adc
cmps
ds
inc
jecxz
pop
(bad)
sub
dec
lahf
mov
or
xchg
imul
nop
in
mov
shr
loope
add
cmp
add
inc
inc
inc
out
inc
and
test
cmp
push
rcl
adc
add
daa
sar
xor
cli
add
jp
dec
enter
adc
into
cmp
sbb
mov
inc
sbb
jl
int3
sub
push
ficomp
jle
or
sub
pop
xchg
loope
xchg
test
ins
stos
jb
mov
pop
loopne
enter
test
jp
sti
push
lea
or
jecxz
inc
les
movs
xchg
inc
and
xchg
or
or
mov
and
int
cmp
movs
mov
mov
call
icebp
xchg
cli
jmp
dec
(bad)
fcom
stos
mov
fcomip
or
adc
and
push
dec
dec
rol
push
aas
pop
mov
aas
push
rol
jae
add
mov
xchg
mov
sbb
sub
adc
rol
das
xor
test
popf
shl
setnp
mov
pushf
push
lea
call
pushf
call
pop
mov
stos
lods
test
out
lea
out
stos
cmp
jl
mov
mov
mov
inc
int
mov
iret
cs
and
or
sub
call
out
call
in
nop
and
xchg
aaa
clc
std
test
add
loope
cmps
inc
loope
xor
sub
jne
xchg
retf
fild
(bad)
dec
lea
add
shl
outs
inc
mov
mov
shr
mov
lea
cli
in
call
(bad)
pop
call
dec
cmps
jg
fs
retf
fistp
xchg
add
cmp
jbe
inc
mov
push
xchg
dec
adc
lods
push
jo
(bad)
dec
and
sub
stos
ins
stc
dec
out
lds
fsubr
ficomp
dec
xor
push
mov
addr16
pushf
inc
out
addr16
inc
pop
sub
fwait
push
mov
cli
dec
aaa
mov
add
cmc
pop
push
xchg
xor
fidivr
or
ret
fiadd
dec
mov
scas
ins
das
stos
lods
das
lea
cmps
in
sbb
mov
jbe
outs
or
ss
xor
in
and
outs
sub
fmul
call
jp
and
mov
inc
popa
stos
jns
adc
dec
xchg
cmp
xchg
jecxz
enter
int3
out
push
add
les
les
imul
mov
(bad)
call
push
push
aam
mov
push
adc
push
xchg
cmc
jbe
inc
sti
mov
in
mov
or
adc
add
adc
leave
fld
xchg
popa
mov
mov
in
xor
out
push
ins
mov
stos
in
repz
mov
pop
cmp
pop
outs
inc
imul
sbb
mov
dec
add
daa
rcl
(bad)
sahf
movs
pop
and
mov
and
dec
sub
mov
bound
bound
mov
push
add
ins
push
sub
ds
cmp
cmp
pusha
push
lea
ja
inc
inc
mov
jmp
jmp
sub
pusha
push
pop
bt
cmp
push
pushf
mov
lea
ja
rol
pushf
push
sub
rcr
jmp
int
shl
xchg
(bad)
ret
add
loop
and
push
mov
imul
dec
mov
dec
retf
(bad)
stos
retf
fstp
push
xchg
sub
mov
mov
add
cmps
les
or
xchg
ins
out
cmc
add
add
in
sahf
add
mov
push
mov
mov
int
mov
leave
sbb
xor
jecxz
call
lds
xor
pop
inc
out
mov
jle
(bad)
sub
ins
lahf
in
push
inc
cdq
icebp
inc
add
cwde
sti
dec
(bad)
call
iret
enter
enter
push
aad
ret
push
inc
jmp
xchg
adc
and
repnz
jae
xor
gs
(bad)
je
mov
test
adc
mov
push
or
cmp
sbb
stos
cmp
frstor
inc
or
aaa
adc
jmp
inc
ficomp
out
into
pop
mov
outs
sbb
out
push
jnp
ret
repnz
mov
push
mov
xor
jp
inc
push
mov
scas
fsubr
sbb
sbb
repz
and
push
mov
mov
cs
outs
or
dec
das
imul
and
aas
add
aaa
imul
lahf
and
imul
arpl
sub
add
sbb
sub
push
ja
push
dec
pop
xchg
js
cs
cmp
jge
or
mov
mov
fild
inc
jo
imul
push
push
popa
pop
sti
jp
mov
add
jnp
push
sbb
call
lds
in
mov
fistp
inc
jo
test
xor
sbb
sbb
fwait
cmp
jge
jae
or
in
push
dec
shl
inc
adc
fdiv
sub
repnz
add
mov
ins
daa
lods
inc
leave
scas
cld
out
push
jp
imul
cmp
sar
sbb
ja
inc
icebp
and
popf
lds
cmps
jecxz
pop
(bad)
mov
or
sbb
jecxz
xchg
in
movs
(bad)
and
jp
inc
xchg
push
imul
xchg
push
adc
dec
push
jmp
stc
xor
scas
or
or
adc
ret
popa
ret
pop
iret
push
sub
push
enter
aam
mov
xor
push
aas
mov
jle
adc
and
push
xchg
pusha
mov
inc
mov
(bad)
sbb
imul
aas
clc
xchg
(bad)
pop
fstp
pop
out
add
sbb
push
icebp
imul
add
mov
and
push
mov
jg
pop
lods
fimul
sbb
(bad)
jae
shr
mov
push
sbb
call
pop
clc
cli
fcomp
mov
xchg
push
mul
jns
push
jno
dec
ss
sbb
dec
cld
adc
sar
cmp
mov
mov
ins
cmp
stos
jg
mov
imul
in
cmp
push
mov
mov
xor
loopne
fwait
imul
xchg
xchg
add
add
ret
rol
ds
fstp
push
clc
retf
mov
imul
out
mov
mov
mov
push
jmp
(bad)
push
jnp
push
push
ss
(bad)
sahf
cmp
sbb
mov
jne
or
es
mov
das
mov
push
mul
add
out
xchg
xlat
retf
iret
push
add
add
(bad)
(bad)
pop
pop
leave
and
cli
popf
push
jge
(bad)
outs
mov
pop
nop
mov
rcr
mov
mov
cwde
pop
adc
or
outs
popf
lds
xor
sti
cmp
fucom
shl
add
add
fst
popa
push
es
add
add
mov
and
and
cli
sldt
add
pushf
jg
or
add
add
add
mov
jns
into
add
add
or
xor
and
add
add
add
fs
popa
adc
add
add
add
jo
into
sar
(bad)
or
add
in
jg
adc
add
add
add
xchg
out
popa
mov
add
dec
jne
pushf
loope
jnp
add
add
sahf
pushf
add
add
or
add
test
sub
sbb
add
jae
pop
add
es
add
cmp
sub
add
std
movs
fistp
call
add
mov
inc
movs
jae
cmp
add
lods
cwde
sub
jae
or
add
std
enter
test
add
add
add
montmul
cmps
add
add
push
add
add
mov
add
leave
pop
out
xchg
popa
sub
add
add
add
js
repnz
add
add
(bad)
add
add
add
dec
repnz
pop
add
rcl
dec
inc
mov
add
movs
push
repz
jo
add
or
add
inc
mov
push
add
add
xchg
(bad)
loope
and
add
add
mov
popa
adc
out
push
add
dec
sysret
je
sti
xor
adc
add
push
loop
sbb
add
push
add
mov
sbb
add
sldt
rcr
test
add
add
add
add
xchg
jae
jb
add
sub
rcr
and
add
loopne
js
popa
or
add
add
add
cmp
(bad)
es
add
add
pop
pop
loope
ins
add
sldt
(bad)
jp
cmp
xor
add
add
inc
(bad)
xor
iret
mov
add
inc
jo
or
add
add
add
(bad)
(bad)
call
xor
adc
or
sub
jl
(bad)
popa
inc
push
fcmovnu
fstp
mov
aad
int
jbe
push
push
push
mov
xchg
add
pusha
mov
cmc
jmp
call
mov
adc
repz
xor
aaa
(bad)
shl
ins
data16
pop
or
add
and
jecxz
mov
xchg
inc
jmp
or
fdiv
mov
repnz
fs
add
call
inc
hlt
push
adc
aad
cmc
inc
jne
xchg
imul
js
pop
xor
pop
in
(bad)
(bad)
jmp
or
sbb
add
and
(bad)
inc
and
sbb
sbb
rcr
mov
aas
pop
movhps
xchg
aaa
stos
xchg
push
icebp
push
sbb
in
mov
pop
call
ficomp
mov
jbe
ja
(bad)
jmp
or
push
jge
test
or
adc
test
sub
loope
outs
jmp
mov
inc
call
inc
push
mov
call
cmp
mov
cmp
popf
fdivr
in
inc
adc
lock
dec
jmp
arpl
(bad)
xlat
test
jecxz
popa
sbb
xor
cwde
and
shr
icebp
test
sbb
js
retf
call
popf
add
add
push
cld
pop
ins
daa
mov
mov
stc
mov
aas
cmc
xchg
cmp
adc
shl
adc
dec
mov
bound
jge
cli
mov
neg
cmp
addr16
xor
icebp
jnp
rcl
vmovaps
enter
(bad)
aad
shl
mov
sub
xchg
das
mov
sar
das
or
cs
jl
cmp
sub
dec
cmp
into
cmps
loop
adc
pop
rcl
add
mov
pop
add
cli
(bad)
jge
cmps
nop
or
rcl
movs
rol
fsqrt
lods
fdivr
sar
add
fs
or
xor
aad
jecxz
cmp
popa
(bad)
call
mov
fstp
add
stc
popf
sbb
jge
adc
div
mov
jmp
(bad)
adc
pusha
and
jg
shl
aas
jno
clc
and
mov
pusha
mov
std
add
xor
xchg
pop
sub
scas
pop
cmp
popf
and
push
mov
xchg
sar
pusha
rol
fs
mov
(bad)
xor
int
stc
sbb
adc
dec
jle
(bad)
and
cmps
mov
cmp
xchg
add
cmps
cmp
and
test
mov
xor
add
dec
iret
inc
push
dec
cmp
sar
daa
xor
and
push
ss
fisttp
rol
inc
jle
and
cmp
fldenv
mov
mov
pushf
mov
out
test
mov
cld
cs
cmp
test
jle
lahf
inc
movs
pusha
xor
stc
and
lea
cmp
lods
ins
cmc
sbb
add
popa
inc
dec
mov
xchg
int3
mov
stc
mov
and
ror
js
cmp
into
shr
and
int
loope
pop
sbb
mov
popf
enter
outs
jns
mov
adc
or
(bad)
aas
daa
ins
sar
add
sbb
pop
pop
add
(bad)
cmps
std
adc
mov
and
fnstenv
and
popf
sbb
mov
add
je
fs
scas
adc
mov
in
das
dec
gs
and
sar
and
fs
cmp
int3
cmps
shl
pusha
ror
xchg
mul
jp
(bad)
icebp
shr
and
jl
sbb
or
add
stos
popa
xor
or
mov
mov
je
adc
outs
mov
aas
or
jp
pop
dec
dec
retf
cmp
jno
cmp
rol
in
pop
inc
rcr
mov
popa
or
data16
cmp
(bad)
cmp
xchg
mov
rcr
add
pop
pop
pop
aaa
push
xor
xchg
mov
push
daa
mov
jo
add
push
out
sub
ins
hlt
pop
sbb
cmps
push
out
retf
call
pop
jl
jmp
jle
sub
cmp
loopne
xlat
pop
popa
push
xchg
fcom
dec
jge
mov
jns
push
enter
stc
jp
mov
dec
or
les
jle
add
sar
loop
jg
lock
cdq
out
or
lea
mov
cmp
dec
pop
mov
fs
jns
aam
iret
rcr
retf
rcl
stc
or
into
les
sub
cmp
loop
cmps
add
mov
jbe
ss
lods
leave
daa
pop
pushf
loop
ficom
cmp
mov
stos
pop
xchg
dec
add
add
mov
pop
ror
sbb
popa
dec
in
out
mov
in
or
cmp
rol
ins
pushf
addr16
cld
xchg
dec
sub
outs
push
or
stos
mov
shl
dec
loopne
mov
rsm
adc
das
pop
pop
icebp
mov
inc
mov
cmp
push
movs
test
loope
shl
mov
mov
mov
(bad)
push
xchg
ret
mov
nop
push
jns
ds
cmps
loop
rcl
ins
mov
xchg
mov
push
mov
cs
mov
pusha
sbb
(bad)
pop
mov
pusha
and
cmps
pop
mov
push
sbb
mov
vmwrite
push
jp
(bad)
and
imul
clc
jb
popa
lock
cmp
cmp
aaa
and
(bad)
mov
jp
cmc
or
fiadd
or
cmp
fadd
fistp
dec
enter
jg
out
adc
adc
sar
and
and
sub
mov
adc
sti
das
pop
cmp
pop
dec
hlt
sbb
out
xor
call
cmp
xlat
cmp
imul
pushf
jg
jns
mov
loopne
loope
or
or
jg
movs
mov
repz
add
lods
int3
xchg
sub
icebp
push
sub
inc
neg
lock
cmp
mov
(bad)
pop
loopne
daa
adc
xor
mov
cwde
retf
ins
mov
stos
leave
jg
ins
add
mov
mov
jno
or
cmp
nop
push
jge
mov
xchg
test
fisttp
das
leave
das
adc
mov
das
or
pop
dec
sbb
sahf
fsub
jae
into
imul
jl
repnz
les
pop
pop
ins
jg
das
hlt
and
cmp
cmp
je
aad
ds
test
jae
and
adc
sbb
pop
pop
xor
pusha
add
nop
pop
daa
je
jb
mov
sub
or
and
enter
icebp
je
dec
add
mov
add
pop
push
mov
mov
inc
call
popf
pop
leave
out
fidivr
or
ss
and
pusha
(bad)
retf
adc
fidiv
inc
and
mov
test
adc
jo
std
sar
sbb
scas
lahf
mov
dec
mov
div
cmps
xchg
mov
data16
adc
aas
pop
xor
jle
push
gs
lods
fldcw
push
repnz
mov
adc
loop
aaa
mov
mov
ffreep
test
idiv
(bad)
lods
mov
ds
imul
mov
sbb
shl
rol
pop
retf
sbb
push
push
jg
push
push
mov
lea
xor
sub
mov
cwde
adc
pop
mov
idiv
iret
call
push
mov
out
popf
and
or
push
xchg
(bad)
loopne
dec
pop
sbb
out
(bad)
push
lock
mov
pop
out
dec
and
mov
cmp
mov
sub
mov
popa
fild
push
ins
mov
ficomp
push
or
push
mov
js
or
xor
mov
push
fld
cdq
or
sbb
mov
and
sbb
add
push
sbb
cwde
sar
xchg
pop
dec
push
jle
pop
nop
lods
test
pop
push
pop
and
ss
mov
sub
sbb
icebp
popa
mov
xlat
push
bound
out
jo
fistp
aas
ja
mov
pop
popf
aas
push
mov
test
adc
aaa
js
add
xchg
push
dec
cmp
stos
pop
xchg
out
iret
inc
aas
xor
test
add
adc
mov
out
sti
bound
lock
loop
je
cdq
xor
rcl
retf
sbb
(bad)
mov
retf
dec
adc
hlt
xchg
mov
push
test
add
cmp
js
push
cmp
adc
push
shl
fild
xchg
sti
inc
cld
mov
out
lea
(bad)
and
push
pop
push
dec
xor
in
sahf
rcr
dec
ffree
ins
inc
cs
and
cmp
enter
ret
mov
sar
mov
mov
mov
push
and
sar
xchg
mov
rcl
cli
out
sub
pop
dec
pop
test
mov
mov
jg
mov
pop
cdq
cwde
push
jge
jns
dec
out
(bad)
and
xor
test
rol
popa
mov
mov
fidiv
ins
popa
push
scas
fwait
aaa
std
dec
mov
xchg
mov
sub
loope
repz
cmps
dec
popa
adc
and
or
pusha
xchg
push
pop
xor
pop
inc
cmp
popa
lock
push
mov
mov
dec
clc
sbb
xchg
pop
std
(bad)
sahf
cmp
and
pop
adc
mov
inc
inc
xor
and
(bad)
bound
and
push
jns
pop
in
popf
xor
sub
fdivr
push
mov
outs
jl
sub
and
nop
and
pop
jnp
shl
adc
dec
sbb
cmp
pop
mov
(bad)
pop
ds
ins
and
add
ins
hlt
lock
pop
mov
jp
jmp
sub
mov
hlt
xor
ficomp
mov
cmp
pusha
aam
ss
sbb
push
mov
inc
adc
ins
loopne
jl
(bad)
fsub
xchg
xor
and
cli
xchg
js
mov
jg
aad
mov
adc
pop
add
fsqrt
and
jmp
and
test
les
stc
sbb
ret
daa
clc
sbb
lahf
test
ss
icebp
jecxz
or
ins
xchg
into
add
cmc
xor
sbb
mov
xlat
add
movs
xor
ins
lock
push
pushf
enter
cmp
cmp
sub
ret
in
push
xor
enter
scas
ret
push
xor
sahf
adc
mov
popa
into
and
das
jmp
sar
sub
popa
out
mov
or
push
dec
jo
jg
lods
test
push
and
shr
in
push
jo
gs
jo
rcl
scas
jl
cmp
ret
adc
xchg
mov
adc
inc
jbe
loopne
add
sbb
xor
leave
xor
jns
xchg
xchg
neg
sti
rol
outs
mov
add
pop
mov
dec
out
jmp
push
sbb
push
jnp
sub
sbb
sbb
cmc
adc
or
push
jbe
or
ins
mov
mov
(bad)
clc
jge
ss
cmps
js
add
pop
fnstcw
xor
push
jo
(bad)
jg
adc
lods
int3
pop
mov
inc
cld
adc
mov
mov
sbb
data16
mov
hlt
cwde
pop
mov
xor
jp
add
mov
dec
repz
nop
and
(bad)
jl
dec
sbb
sbb
mov
pop
xor
loope
ret
mov
out
push
or
test
pop
pop
jecxz
pusha
mov
in
test
inc
cld
test
cmp
idiv
push
js
adc
dec
jg
add
push
cs
test
repnz
cwde
cmp
dec
sbb
call
pop
int3
ins
mov
les
shl
inc
adc
inc
inc
or
push
jg
dec
mov
and
push
or
jbe
add
pusha
add
mov
js
jge
push
jo
mov
popf
ss
jle
adc
out
pop
inc
shl
jbe
dec
inc
jno
jo
jmp
jg
mov
jno
push
aas
div
jle
jns
movs
sbb
pop
(bad)
jno
in
mov
scas
mov
sbb
xchg
or
aas
cmps
je
jl
test
ja
add
shl
sbb
(bad)
pushf
stos
aas
jle
and
fistp
out
sar
test
cmps
jl
mov
mov
fstp
xchg
popa
pop
or
jmp
push
cmp
push
sub
(bad)
js
pusha
pop
jge
jo
mov
cmp
shr
call
jnp
retf
pop
mov
or
test
inc
sub
popf
test
pop
sub
dec
pop
test
pusha
sbb
push
mov
rol
xor
rcl
push
movs
sbb
jne
scas
gs
outs
pop
lods
fsub
addr16
mov
dec
xor
sbb
or
jae
inc
push
pop
xor
xchg
mov
cmp
push
aas
je
and
jmp
push
jl
retf
mov
aaa
mov
pop
jno
pop
add
push
dec
repz
cld
sub
add
xchg
pop
add
repnz
xchg
movs
inc
(bad)
mov
sub
jmp
mov
enter
mov
jl
or
mov
push
sub
push
out
add
sub
sub
push
enter
adc
ss
pushf
xor
leave
jp
int
lods
repnz
jno
ss
(bad)
stos
stc
in
or
pop
shr
or
movs
popf
jnp
aas
test
inc
fist
sbb
cmp
(bad)
jg
mov
popf
xchg
jle
mov
shr
cmp
mov
cwde
cdq
movs
idiv
mov
mov
pushf
lds
lea
lahf
pop
sbb
fnsave
stos
les
add
popa
enter
xchg
dec
(bad)
jl
icebp
test
repz
cmps
mov
ins
popa
adc
lods
push
mov
bound
outs
xor
test
outs
jno
xchg
push
(bad)
dec
adc
push
cmps
sti
cmp
lock
pushaw
xchg
and
xor
xchg
mov
cmp
cmp
pusha
test
cmp
or
sbb
mov
xor
popf
clc
push
adc
cmp
sub
inc
out
and
(bad)
mov
fidivr
clc
mov
jl
ds
mov
push
sub
gs
push
shr
pop
xchg
mov
mov
mov
outs
sub
fiadd
push
clc
das
retf
aas
pop
das
fcomp
int3
ins
xor
and
adc
xor
pop
pop
not
mov
jge
cmps
jno
scas
jo
sbb
shr
mov
cdq
daa
xor
sbb
enter
and
jns
push
in
(bad)
and
sbb
ins
add
imul
mov
(bad)
pop
ja
js
jge
jno
outs
adc
retf
rcl
push
push
adc
enter
das
sbb
cmp
popa
push
sbb
aaa
xor
jns
mov
retf
clc
xor
dec
mov
arpl
aam
mov
push
inc
cmp
jle
dec
adc
or
ss
xchg
(bad)
cs
xor
movlhps
dec
stos
adc
or
pop
mov
leave
fcomp
xlat
stc
mov
es
sbb
fnstcw
pop
jno
sbb
mov
pusha
clc
xchg
(bad)
(bad)
lods
mov
popf
or
or
enter
inc
cmp
push
dec
jns
mov
loope
inc
or
add
jno
cmps
shl
mov
int3
push
cld
xor
pop
retf
fdiv
xor
fwait
loope
push
or
dec
add
mov
ins
sahf
sti
cdq
lods
arpl
out
jmp
sti
shl
add
cmps
out
fwait
or
adc
dec
(bad)
sbb
pusha
mov
lahf
shr
lea
movs
jge
xor
xor
add
ins
popf
or
imul
cmp
mov
leave
sbb
outs
icebp
jge
idiv
adc
es
sti
lods
xchg
xor
push
jo
lods
je
or
popa
repnz
clc
and
or
or
add
lods
sbb
scas
mov
mov
and
sub
outs
mov
cmp
mov
xchg
call
or
popf
fadd
out
push
(bad)
push
mov
or
stc
jns
cwde
shr
inc
sti
ins
stc
cmps
jmp
rdtsc
cs
sbb
retf
inc
pop
or
retf
add
dec
adc
fbstp
pop
xchg
xchg
call
shl
ins
scas
and
push
mov
push
sbb
sbb
push
cmps
mov
fild
das
test
push
inc
dec
lea
loop
mov
ds
xchg
sub
out
pusha
and
mov
(bad)
fst
call
div
inc
pusha
sar
jge
push
cmp
retf
data16
push
sbb
ud1
and
rol
and
adc
mov
into
ins
xor
ins
(bad)
clc
(bad)
pusha
add
and
jp
xor
aas
out
popf
add
mov
mov
xor
mov
ins
add
ror
cmp
fwait
aaa
mov
scas
test
mov
cwde
test
jnp
cmp
jb
jmp
leave
pop
in
sbb
test
ds
ins
dec
lods
cmp
sahf
xor
sbb
test
repz
rcl
ror
push
jne
aas
imul
pop
das
outs
fisubr
das
aad
ret
xchg
sbb
outs
rcr
mov
mov
into
mov
sbb
retf
sti
mov
cmp
pop
mov
outs
inc
mov
pop
jge
or
mov
jmp
mov
sar
jns
xchg
std
aaa
div
fs
jo
es
push
popa
cmc
cli
sbb
mov
enter
mov
shr
jo
imul
imul
xchg
cmp
fs
lods
daa
daa
(bad)
(bad)
or
add
adc
rcr
clc
push
mov
or
shr
rcl
push
push
movntps
stos
mov
dec
push
dec
push
popf
xchg
pop
jmp
xor
addr16
jmp
dec
enter
out
dec
sbb
hlt
mov
nop
push
inc
cmp
sbb
popa
movntps
(bad)
jmp
and
mov
push
inc
fbstp
mov
jg
ins
jp
retf
jo
pusha
stc
fldcw
jmp
rcl
cmps
jb
jmp
pop
retf
shl
inc
inc
xchg
lods
mov
xor
in
inc
in
mov
(bad)
xor
inc
je
push
pop
adc
out
stc
adc
pusha
icebp
data16
pop
jno
pusha
(bad)
pop
pusha
jns
xchg
inc
repnz
mov
stos
lods
cmp
inc
push
fnstcw
stc
mov
push
mov
call
push
pusha
cmp
jo
movs
mov
cmp
sbb
icebp
mov
jns
xchg
pop
into
add
xchg
mov
sar
xor
cmp
(bad)
sbb
dec
setl
mov
and
xor
add
sub
fs
out
sbb
loop
mov
shr
jo
test
scas
jl
cld
out
mov
inc
test
shr
inc
jge
jns
into
adc
movs
cmps
sub
retf
pop
jno
xor
jns
sub
lock
outs
js
mov
push
xchg
fstp
push
and
jbe
push
pop
imul
mov
or
sbb
cmp
jb
sbb
mov
push
xor
mov
cmps
scas
out
push
add
push
ror
mov
cmps
addr16
cs
add
push
imul
sub
sbb
je
movs
call
lods
ss
bound
jl
loopne
or
jns
pop
popa
shl
xor
ja
dec
adc
test
cld
pop
aad
sub
int
test
and
jo
and
retf
inc
cmps
and
xor
mov
push
adc
out
ins
stc
jmp
jecxz
mov
(bad)
jae
repnz
test
inc
test
out
test
jo
retf
jo
je
cld
add
mov
sub
jns
mov
rol
into
popa
ja
cmps
xchg
mov
imul
jge
xor
(bad)
pop
(bad)
sti
ror
movs
mov
adc
pop
pop
push
add
mov
out
cmps
pop
jmp
imul
pop
mov
xchg
fnstenvw
repz
mov
mov
jge
scas
and
mov
xor
dec
pushf
xchg
movs
inc
or
mov
iret
test
mov
lock
jo
adc
mov
cmp
push
nop
xchg
sbb
cdq
popa
dec
repnz
lock
xor
jecxz
js
lods
and
shr
push
leave
adc
adc
xchg
push
push
push
push
daa
ror
in
dec
sub
iret
adc
iret
mov
mov
mov
rol
jmp
outs
pop
das
shrd
shr
int
aaa
jno
mov
jl
cmp
call
sbb
push
cmps
jl
push
pusha
push
sbb
mov
sbb
ss
loop
das
jg
sub
ficom
or
mov
add
fist
ins
push
sar
jb
mov
xchg
call
pop
(bad)
in
mov
fs
cmp
std
pop
xchg
pop
popa
stos
sbb
test
cs
mov
or
nop
fwait
jg
xchg
test
mov
jns
ss
xor
shr
test
outs
mov
mov
js
je
cmp
inc
jle
paddsw
aas
sbb
push
(bad)
mul
retf
mov
jmp
and
repz
fist
jmp
popa
add
imul
dec
les
jg
outs
cmps
cld
test
outs
inc
mov
cmp
shr
xor
std
xor
into
outs
stos
into
vmread
outs
cmp
test
mov
mov
loope
daa
ficomp
scas
mov
pop
(bad)
pop
test
mov
mov
xor
add
jg
sbb
leave
popa
and
mov
cli
aaa
push
mov
mov
jge
dec
push
lds
lds
mov
sub
mov
lahf
outs
pusha
test
(bad)
jbe
mul
push
add
je
call
xchg
ss
jns
ja
push
and
xchg
mov
xor
aad
and
jns
mov
outs
cmps
stos
pop
sub
lods
outs
xor
rcr
aas
mov
ds
ret
mov
xchg
fiadd
popa
lock
inc
(bad)
push
out
je
push
jae
xor
push
cmp
mov
addr16
sahf
xor
repnz
out
and
cmps
xchg
ss
cmp
int3
xchg
ss
test
es
jbe
jns
stc
push
(bad)
pop
test
xchg
jns
repnz
je
pop
call
imul
jae
inc
sbb
mov
mov
fistp
adc
xchg
fisub
ja
stc
dec
jg
enter
cwde
call
(bad)
test
cs
aas
stos
xchg
or
add
cwde
adc
add
aas
adc
or
sub
xchg
sbb
push
movs
mov
test
inc
popf
aas
push
mov
or
ficom
sbb
repnz
push
mov
xchg
rcl
and
sbb
aas
adc
mov
shl
xchg
cld
mov
and
mov
mov
rol
pop
jge
das
out
ret
cmc
inc
push
xchg
shl
push
dec
and
loopne
push
in
jns
jno
xlat
mov
popa
js
add
(bad)
bound
das
stos
int
ja
test
test
sti
outs
(bad)
sti
push
push
mov
jg
mul
bound
lods
add
fs
ret
adc
rcl
ins
aad
es
mov
shr
out
pop
cmps
mov
fistp
(bad)
das
mul
or
xor
push
push
mov
jb
loop
jmp
repnz
mov
iret
mov
fidiv
pushf
dec
and
inc
addr16
xor
pop
es
mov
ss
mov
cmp
daa
or
inc
push
(bad)
fisubr
mov
fidiv
mov
fisub
xor
js
jge
jle
mov
stos
jle
sbb
or
repz
xchg
jns
sbb
push
icebp
mov
jge
pop
push
je
into
sbb
leave
outs
jp
stc
sbb
inc
push
std
push
shl
and
inc
popf
(bad)
rcl
sar
fcomi
loope
popf
pop
mov
out
data16
sub
shr
xchg
push
add
lds
js
or
xchg
ss
xor
and
push
clc
mov
push
mov
xor
and
mov
in
jne
dec
fnstcw
lods
popf
and
shr
cmp
pop
mov
idiv
sar
sar
enter
cmps
ss
jle
sar
mov
push
jne
xor
ss
mov
dec
fwait
aad
pop
fnsave
xchg
mov
cld
push
cmps
or
mov
nop
loopne
std
or
ins
gs
ds
out
jns
mov
rol
sub
sub
xor
sti
scas
fwait
lds
loopne
adc
and
xchg
mov
outs
out
nop
mov
xchg
pop
mov
mov
and
sbb
and
loopne
push
leave
add
push
je
js
mov
push
push
xor
shl
das
jge
std
jg
out
pushf
sbb
outs
sar
sub
dec
cmps
sbb
pop
in
lods
xchg
lock
(bad)
xor
cmps
ins
ins
nop
fsubr
jno
js
out
jno
xchg
ins
dec
mov
sbb
dec
stos
mov
mov
out
sbb
xchg
outs
outs
mov
cmp
xlat
int
iret
popf
iret
lds
mov
shl
adc
stc
or
mov
sar
ficomp
adc
cmp
sbb
push
push
cmp
fwait
mov
dec
mov
ja
push
lock
arpl
pop
mov
jmp
and
fistp
pushf
jg
inc
mov
sbb
mov
pusha
aam
int
sar
in
into
and
in
dec
pop
xor
cwde
scas
xor
or
mov
je
jmp
xor
mov
lock
das
movq
pop
mov
and
xchg
inc
stos
mov
sbb
push
rcl
test
into
pop
ret
sbb
push
adc
test
and
or
jp
xlat
sahf
mov
sbb
and
cmp
or
je
xor
rcl
mov
in
pop
mov
clc
(bad)
js
ds
cmp
rcr
enter
add
popa
pop
fwait
inc
call
in
adc
cmp
xchg
push
add
xchg
xchg
add
out
jg
mov
bound
or
mov
ja
jo
ins
xchg
xor
pushf
jle
jle
ss
mov
out
aad
popa
jg
out
outs
or
scas
stc
loopne
mov
out
cmp
dec
test
xchg
jbe
mov
retf
imul
push
shr
mov
mov
cmp
push
inc
jns
scas
sub
(bad)
mov
sub
icebp
pop
int
(bad)
popa
sub
test
and
div
(bad)
xchg
mov
(bad)
xor
push
es
and
mov
ror
jo
repnz
mov
sbb
fsubr
sbb
dec
fld
je
fs
mov
push
lds
mov
shl
inc
jns
cdq
int
push
aaa
mov
sbb
sbb
xor
repnz
and
into
(bad)
sub
mul
pusha
mov
sub
mov
inc
add
xor
gs
addr16
pop
sbb
mov
jecxz
mov
repz
shl
xor
adc
mov
sub
mov
cld
cmps
xor
jp
dec
daa
cs
pop
lods
dec
into
fs
dec
xchg
fdivr
sub
and
adc
cmps
adc
mov
push
adc
dec
fsub
jg
aas
aas
cmp
cmp
and
and
push
and
cmp
imul
in
popf
(bad)
les
mov
mov
test
push
sbb
inc
jge
jns
mov
add
inc
mul
sbb
cld
clc
add
aas
fimul
imul
mov
loop
cmps
push
arpl
into
and
pusha
pusha
sub
outs
ret
enter
mov
aas
pusha
pop
pop
jg
pusha
pop
mov
push
xchg
call
ret
mov
mov
pushf
neg
pop
mov
adc
mov
fisub
rcl
fwait
stc
pop
jno
mov
pop
std
popf
fdivr
(bad)
shl
xor
and
ret
das
ds
imul
js
mov
xor
xor
mov
mov
sub
je
pop
ror
lods
nop
xor
rol
inc
stc
jle
ins
repz
push
xor
dec
fmul
mov
ss
mov
out
push
sbb
xchg
iret
cmp
pop
xor
cdq
cmp
ds
adc
and
imul
out
sahf
lahf
push
mov
(bad)
rcr
sub
push
and
bound
fcomip
sub
sahf
or
lock
fstp
(bad)
mov
xor
inc
xchg
fstp
inc
sbb
ins
adc
shl
popa
setge
dec
xchg
sub
mov
xchg
jns
repnz
retf
push
loope
jg
out
in
mov
jl
popa
inc
and
and
push
jns
in
stos
(bad)
cmp
cdq
jne
call
lock
adc
push
fs
popf
pop
push
pop
pop
jle
mov
mov
movs
mov
jbe
jmp
push
push
fwait
out
out
test
in
out
fistp
inc
dec
mov
and
es
mov
jns
sar
repz
xor
out
mov
mov
adc
fstp
ret
and
and
rcr
es
lahf
mov
mov
stos
fldenv
sbb
sar
mov
stc
add
pop
pop
je
stos
clc
popf
retf
inc
xor
pop
out
iret
scas
and
sub
int
sbb
popa
jno
cmps
push
std
mov
das
loop
fmulp
and
add
jo
add
addr16
jnp
enter
in
dec
push
stc
xor
fdiv
sub
or
push
icebp
lods
inc
js
jno
cmp
jmp
mov
sahf
daa
mov
ja
outs
call
push
dec
xor
push
add
nop
out
enter
sahf
xor
xor
ja
sbb
arpl
(bad)
stos
or
cld
cmp
(bad)
(bad)
lods
arpl
or
mov
test
enter
mov
sbb
add
std
adc
out
and
dec
cmp
push
sahf
stc
je
ret
sub
mov
imul
repz
(bad)
cmp
cdq
xchg
sbb
push
aaa
mov
gs
loopne
xor
xchg
jno
sub
daa
mov
jns
add
dec
inc
push
push
pop
ficomp
xor
ret
jge
aam
loopne
xlat
mov
mov
pop
lahf
popf
into
push
jl
(bad)
sub
adc
sub
and
aas
sti
mov
scas
out
dec
ja
mov
pop
dec
jne
sub
jo
imul
xor
movs
add
jns
cli
push
dec
sbb
es
js
jno
cli
add
into
mov
push
les
pop
push
inc
jg
add
outs
das
add
fidivr
xor
imul
mov
mov
icebp
inc
cmp
js
je
pusha
pop
inc
pusha
shl
sub
outs
cli
cdq
or
add
adc
mov
adc
mov
cmp
xchg
daa
daa
dec
pop
dec
jge
addr16
std
ins
or
xchg
cwde
into
popa
cwde
or
lahf
push
xchg
add
push
sti
outs
add
hlt
mov
jecxz
push
mov
pushf
fdivr
retf
and
pop
fild
and
mov
outs
jbe
not
add
mov
adc
jle
stos
neg
mov
and
(bad)
xor
jg
sbb
sbb
xchg
pop
xor
sbb
mov
shl
jp
lea
and
mov
mov
shl
jae
jmp
xor
popa
adc
pop
popf
enter
ja
mov
xchg
sbb
jle
sbb
cmps
pop
mov
jns
cmp
fdiv
idiv
ret
ror
pop
outs
pop
call
mov
jns
sahf
mov
push
sub
outs
test
jnp
ret
ja
add
jns
pop
stos
mov
add
call
jge
sti
dec
dec
xchg
jns
push
inc
sar
stc
call
mov
mov
cmps
and
test
sbb
xor
push
lock
in
xchg
sub
pop
dec
fcomp
mov
mov
and
sbb
mov
popf
sar
aad
ds
cmps
push
adc
aaa
scas
pop
xor
fs
mov
imul
out
sub
xor
pop
mov
call
ds
sub
stc
lods
fwait
int3
jns
xchg
pop
into
js
data16
and
push
mov
cld
retf
rcr
sub
shl
lea
xor
mov
into
test
ror
cwde
cmps
push
out
dec
hlt
aam
jb
gs
jnp
stos
xchg
in
and
stc
and
popf
mov
outs
add
cmp
cmps
jns
and
or
pop
push
mov
cdq
jl
and
xchg
jmp
popf
das
shl
cmp
clc
mov
jg
pusha
push
jle
fneni(8087
dec
js
mov
mov
xchg
into
cld
fsubrp
xor
or
sbb
push
sti
fldcw
xchg
rol
js
push
cld
mov
mov
pop
jge
xchg
mov
xchg
sub
cmp
dec
mov
(bad)
adc
popf
mov
js
into
xor
sar
mov
aad
stos
(bad)
or
js
mov
and
jb
xchg
cld
or
shr
fist
sub
je
mov
cmps
aas
add
cld
leave
jae
jge
add
jns
mov
push
push
adc
les
push
mov
push
sbb
add
and
(bad)
addr16
cmp
or
jl
pop
call
lahf
adc
popf
lock
daa
xor
xor
xchg
inc
pushf
sbb
jl
inc
sahf
cld
mov
je
and
cdq
pop
sbb
xchg
adc
pop
mov
push
or
arpl
cmp
cmp
and
jo
dec
push
xor
cmp
jnp
xchg
fdivrp
loope
inc
and
xor
(bad)
cwde
nop
cmp
cmp
and
enter
mov
enter
aam
enter
jl
cmp
sbb
rcr
xlat
stc
cmp
jge
inc
xchg
popa
cs
xchg
mov
add
pop
jge
neg
xchg
adc
aad
xor
mov
add
pusha
repnz
fs
aam
lods
mov
fmul
pop
loopne
add
xor
sbb
das
inc
mov
aas
(bad)
fwait
push
and
push
or
aaa
add
sub
loope
cmp
sub
xor
adc
scas
arpl
outs
lods
je
xor
and
cmp
pop
sub
xor
fiadd
ret
mov
test
sbb
dec
ds
int3
mov
push
or
outs
shl
mov
mov
sbb
sbb
jl
pushf
pusha
pop
sahf
jg
jne
test
lea
jae
mov
mov
in
out
jle
jg
daa
iret
outs
ficom
push
cmp
fidivr
xor
xchg
jae
stos
call
or
sbb
aam
scas
mov
xchg
shl
pop
imul
jge
jecxz
push
mul
jp
sbb
mov
add
out
jmp
ja
sbb
dec
or
jne
sar
cmps
fist
pop
mov
hlt
arpl
(bad)
inc
retf
les
ret
adc
daa
in
jo
mov
fisub
outs
xor
mov
cs
dec
bound
sbb
cmp
icebp
lods
sbb
scas
loopne
aaa
or
je
lods
retf
cmp
sub
mov
jp
lea
iret
jl
mov
add
js
daa
mov
inc
jp
fmul
mov
sub
mov
push
jb
loopne
inc
xor
lods
lahf
in
mov
jl
sbb
retf
mov
sub
lock
nop
popf
add
jl
jge
pop
or
or
sbb
retf
nop
add
out
test
test
cmp
cmps
mov
mov
loop
cmp
mov
div
rol
adc
push
mov
retf
jo
lea
ins
rcr
pop
(bad)
adc
out
xchg
and
dec
dec
popa
sub
outs
int3
and
sbb
cs
xchg
loop
sbb
int
(bad)
into
sub
aam
ins
sbb
ins
pop
sti
push
jb
adc
lds
sbb
fcom
sbb
mov
cwde
jl
pop
retf
inc
pop
cmp
rcr
push
dec
imul
mov
pop
dec
jg
pop
adc
mov
cmp
imul
stos
repnz
stos
cmp
and
stc
stc
sar
xchg
mov
outs
cmp
ins
xor
jns
sub
repnz
js
ret
jb
mov
test
or
shl
out
hlt
push
pextrw
mov
mov
mov
lods
fcom
inc
sub
cmp
cmp
mov
sbb
fnstsw
pop
pushf
sbb
jnp
or
ds
aas
fdiv
inc
cmp
jmp
(bad)
out
mov
jns
dec
sbb
into
aaa
sub
mov
icebp
xor
sti
pop
aas
mov
and
popf
fdiv
sbb
pusha
int3
nop
push
adc
adc
sti
sbb
popa
mov
dec
pop
inc
adc
push
rcl
pop
pop
adc
push
je
rol
iret
js
addr16
das
push
push
lds
mov
push
lods
out
test
into
adc
sbb
sbb
fstp
stc
pop
fstp
fcmovnbe
int
cmc
mov
icebp
mov
xor
sub
cmps
jl
loope
ds
je
imul
pushf
arpl
adc
pusha
mov
sbb
fistp
mov
mov
(bad)
sbb
call
pop
bound
adc
mov
imul
(bad)
or
out
push
cmc
xchg
ja
cdq
adc
dec
sbb
mov
out
cmp
and
jo
pop
sub
int
cmp
popf
scas
sub
xchg
inc
jns
cmps
test
or
push
jmp
cs
xchg
and
out
and
outs
pop
or
sbb
push
fs
add
retf
cs
data16
adc
or
in
mov
not
aad
popa
pop
sahf
mov
push
cmp
lea
mov
cmp
iret
mov
jge
sbb
sti
sub
ret
out
xchg
loop
mov
jecxz
in
fadd
sbb
sub
mov
mov
je
inc
mov
jae
sbb
sbb
mov
out
jmp
pop
sar
sahf
shr
push
mov
(bad)
das
pop
inc
mov
adc
jmp
lds
or
jl
mov
mov
add
sbb
pusha
scas
shr
repz
adc
pushf
mov
sub
pop
in
mov
nop
xchg
jmp
dec
fmulp
or
(bad)
pop
inc
add
hlt
test
sub
pop
nop
xor
lea
fiadd
xchg
inc
arpl
lods
movs
cmp
cmp
pusha
cmp
cwde
inc
mov
clc
shl
jl
dec
enter
adc
cli
mov
inc
jo
sbb
cmp
scas
pop
inc
sub
aas
lods
or
outs
cmps
rol
and
push
mov
mov
outs
push
push
push
jg
dec
xchg
xor
xor
sbb
or
lea
sub
xchg
in
add
ins
dec
popf
or
push
out
and
(bad)
aas
jl
dec
test
xor
adc
mov
pop
mov
sbb
mov
or
sbb
sub
gs
rcl
std
or
sbb
or
mov
adc
and
pop
jo
sbb
(bad)
cli
clc
adc
mov
push
jg
sbb
fidivr
xor
xor
adc
into
jno
cmp
imul
dec
jp
mov
mov
or
add
fs
xchg
lea
les
push
lock
js
(bad)
ss
sbb
mov
jmp
ret
cvtps2pd
adc
js
or
pop
mov
or
add
adc
js
sti
ins
das
xor
xor
je
test
mov
ins
or
pop
mov
push
xchg
in
mov
outs
push
xor
fs
push
and
ficom
cli
sub
daa
fs
jbe
out
pop
mov
ins
xor
xor
fld
mov
stos
and
test
stos
into
cld
pop
into
pop
jns
mov
cmp
push
jg
(bad)
xor
xchg
mov
fist
sbb
(bad)
fcomp
push
cmp
icebp
imul
in
dec
add
cdq
js
in
ins
sub
jns
mov
push
je
jne
or
fidiv
aas
push
dec
lds
and
dec
push
sub
push
xchg
fs
fcom
inc
out
das
icebp
out
(bad)
push
cld
test
inc
push
loope
jns
int
(bad)
ins
in
(bad)
bound
mov
cmp
or
mov
sub
mov
popa
fucomp
push
(bad)
imul
fidivr
ds
call
pop
jp
lods
sub
jo
xchg
aas
repz
mov
test
out
adc
shl
nop
dec
fisttp
push
jg
jo
jmp
sahf
mov
push
mov
pop
ror
icebp
or
lock
sbb
or
sahf
jge
cmp
and
sahf
aam
shl
xor
test
lock
add
(bad)
mov
mov
and
sub
cmps
clc
iret
addr16
mov
call
xchg
sar
inc
push
cmps
out
pop
sbb
retf
jns
cmp
pop
push
sbb
or
add
mov
ins
xor
jmp
inc
das
lods
(bad)
and
mov
push
xlat
mov
sbb
stc
data16
push
enter
push
sub
mov
jl
hlt
inc
add
shr
mov
sbb
popa
jle
and
(bad)
mov
inc
out
cmp
loopne
int
mov
lods
inc
jmp
push
xchg
aad
in
xchg
pop
cmc
js
nop
popf
es
shl
mov
pop
mov
jle
push
inc
sti
call
stc
jbe
xor
test
mov
leave
jmp
mov
ins
nop
dec
outs
sub
dec
shr
xchg
stc
in
push
daa
jle
imul
xchg
cli
cmp
popa
mov
out
loop
dec
test
mov
jl
xchg
sub
test
cmps
cli
(bad)
sti
scas
jno
aaa
test
xor
jb
stc
and
jl
into
aam
aam
fldcw
test
mov
mov
daa
push
jbe
je
pop
or
jge
inc
jp
sub
xor
and
mov
out
dec
cdq
enter
sbb
mov
pop
adc
xchg
aaa
int3
mov
gs
sub
mov
inc
jl
push
inc
jne
inc
fbstp
cmc
sbb
pop
jle
add
and
adc
fadd
hlt
and
sbb
mov
and
xchg
call
or
ja
mov
fiadd
sti
push
dec
jle
add
push
sbb
js
sbb
das
pusha
and
xor
bound
jo
rcl
fnstsw
mov
pop
add
jl
jmp
js
inc
add
das
mov
cmp
ja
fwait
ret
gs
xchg
mov
and
movs
ffree
cmp
mov
inc
pop
imul
jns
cmps
js
idiv
scas
fstp
test
push
mov
cld
sbb
cwde
fidivr
push
sbb
fld
pop
call
xchg
outs
ja
fs
clc
leave
movs
sub
std
cld
ins
cmp
adc
into
leave
mov
push
test
mov
shl
mov
fs
or
and
sti
scas
jo
pushf
data16
xchg
lods
add
sbb
fld
fs
sub
hlt
inc
(bad)
test
data16
adc
push
inc
popa
jge
xor
mov
lock
push
inc
fisub
call
neg
and
ret
inc
popf
push
cmp
mov
mov
cmp
dec
dec
fisub
push
clc
lea
push
test
enter
pop
add
dec
nop
icebp
cli
jo
fwait
jns
mov
ret
fwait
xchg
mov
jl
sar
fwait
add
aaa
push
stos
(bad)
push
and
cmps
cmp
in
xchg
lahf
sub
(bad)
ror
jge
pop
xchg
adc
push
mov
neg
sbb
retf
fstp
sahf
loopne
aas
or
pop
jns
(bad)
mov
push
cmp
ret
sbb
adc
push
cmp
mov
push
jle
push
sbb
jl
sub
push
and
bound
mov
arpl
out
add
jns
cdq
push
hlt
daa
retf
lahf
(bad)
ss
mov
popa
aaa
push
jle
pop
add
or
hlt
jp
cmps
pop
(bad)
sbb
scas
bound
loop
adc
mov
sti
ins
xchg
jg
or
into
aad
inc
dec
in
xchg
mov
ins
sbb
scas
pop
das
jns
arpl
pop
nop
mov
sbb
rcr
push
inc
push
pop
mov
ja
stos
or
jno
test
mov
and
pop
add
add
cmps
jns
aam
repnz
xchg
push
adc
jae
sub
and
jg
shl
sahf
dec
jmp
je
push
in
sub
inc
cmp
jl
push
mov
aam
(bad)
pop
stc
dec
cmp
add
adc
xor
clc
pop
or
mov
das
loop
repnz
jno
mov
inc
jge
sbb
test
mov
sub
jns
aaa
in
xchg
and
das
mov
push
imul
pusha
fild
add
loopne
cmp
or
pop
xchg
add
cmp
xchg
dec
mov
mov
ror
xchg
dec
js
ins
cmp
push
mov
into
sub
(bad)
dec
fdiv
stos
or
cdq
jle
mov
mov
xlat
xor
push
(bad)
js
pop
clc
fnstenv
int
fldenv
int3
inc
xchg
jae
dec
jbe
out
sub
das
adc
out
nop
sbb
dec
repz
out
and
ja
inc
sbb
mov
in
fimul
sub
nop
popa
adc
mov
and
jnp
jmp
mov
adc
push
data16
jnp
fild
sub
imul
mov
lods
and
jae
daa
icebp
jle
inc
fwait
push
out
ss
pandn
mov
rdpmc
add
cs
xor
lea
add
push
push
inc
ret
aaa
adc
inc
or
mov
cmp
lods
dec
xchg
xor
je
xor
js
jae
loopne
loop
mov
repnz
push
push
lahf
ds
sbb
retf
je
dec
mov
inc
and
push
lock
and
or
jp
js
xchg
sub
loopne
cmpxchg
sbb
sbb
fcom
rcr
pop
fwait
es
dec
adc
pop
mov
and
in
(bad)
call
push
call
lock
and
out
pusha
inc
sub
pop
cmp
cli
jns
sub
ins
adc
call
and
or
jb
out
leave
pop
test
mov
and
inc
ins
cmps
pusha
mov
lds
xor
adc
sbb
or
sar
cs
stc
mov
mov
push
pop
in
pop
cdq
das
mov
and
das
sub
cmp
hlt
imul
inc
add
adc
pop
cmp
push
outs
ficomp
xor
dec
dec
loope
mov
jno
jbe
ss
aad
cmp
mov
pop
and
push
jmp
mov
xchg
or
cmps
loop
xor
ins
pop
push
cli
lahf
cmp
hlt
and
mov
sub
jno
jle
dec
inc
push
mov
repnz
jecxz
stc
out
cmp
push
jns
jle
rcl
and
xor
pop
dec
lock
mov
mov
xchg
das
mov
mov
cwde
xor
mov
es
xor
pop
or
jle
fs
xor
aaa
ficom
xor
leave
clc
aas
stos
mov
push
movs
add
popf
sbb
pop
or
or
scas
mov
cld
movs
cmp
(bad)
mov
psubq
pop
rcr
or
shl
mov
data16
iret
daa
xlat
xchg
icebp
sbb
push
lods
xchg
aas
add
fcomi
cmps
es
outs
cmp
(bad)
(bad)
aad
sub
cmp
jns
dec
movs
or
test
aaa
nop
ds
rcl
lahf
cwde
mov
jmp
xchg
or
fdiv
mov
jge
mov
cld
pop
div
sbb
mov
and
and
fdiv
and
push
and
sbb
in
loopne
test
loope
push
sbb
jmp
cmc
iret
rcr
xlat
ja
dec
pop
retf
mov
iret
mov
pop
sbb
lock
add
dec
ins
xlat
cmc
into
jne
test
mov
dec
retf
pop
or
pushaw
adc
dec
popa
and
sub
mov
pop
pushf
(bad)
outs
mov
stos
jecxz
mov
inc
scas
das
or
test
mov
sub
aas
lock
aas
pop
adc
sbb
jo
cmp
scas
push
aaa
sbb
push
jl
mov
jns
(bad)
fild
(bad)
sahf
mov
jge
test
vmwrite
sbb
mul
outs
cld
pop
mov
pop
int
xlat
shr
mov
mov
shl
push
push
mov
mov
dec
or
push
mov
push
fsub
jns
jae
(bad)
fs
cmp
cld
les
ja
iret
nop
rol
iret
fbld
leave
jo
mov
test
cmp
ss
test
sub
fwait
mov
scas
cld
pop
ror
jnp
outs
scas
lock
test
mov
sbb
push
out
sub
test
mov
cmp
jne
mov
ret
sbb
jle
adc
mov
jns
xchg
push
jl
and
jp
nop
imul
sbb
jge
dec
popa
lahf
in
clc
jnp
sub
jl
out
cmp
and
hlt
popf
inc
xchg
movs
dec
(bad)
out
cmc
outs
push
inc
sbb
dec
sub
pop
push
sub
iret
popa
mov
dec
lahf
in
and
mov
and
jle
inc
es
iret
jb
or
enter
mov
mov
mov
js
pop
mov
mov
loope
jb
pop
int3
outs
push
lock
add
mov
jge
aad
mov
cli
and
push
mov
icebp
in
das
retf
lods
mov
call
ins
push
fsubr
je
mov
inc
push
int
pop
push
push
push
mov
add
push
cmps
adc
sub
mov
jg
pop
and
(bad)
lods
mov
mov
mov
push
dec
movs
add
sahf
aaa
mov
sbb
nop
int3
(bad)
xor
(bad)
test
pop
xor
and
repnz
mov
jge
jg
mov
cmp
cmp
loopne
test
(bad)
(bad)
pusha
neg
push
sbb
jns
adc
push
not
cmp
dec
adc
mov
clc
aam
sbb
or
mov
das
cmp
mov
pop
fwait
imul
popf
sar
push
jmp
not
jge
aad
mov
out
sbb
jae
fidivr
push
sti
outs
out
ss
cwde
jns
jmp
cmp
aas
cmp
and
aam
cld
xor
stos
mov
ss
into
popa
das
push
scas
mov
sub
das
jp
sbb
xor
fcomp
jl
mov
adc
xchg
out
scas
out
stc
mov
sahf
dec
sub
imul
rcr
mov
fmul
mov
daa
push
dec
sahf
ret
out
js
popa
dec
mov
leave
mov
mov
pop
in
and
ror
fs
in
(bad)
das
push
adc
sub
xchg
add
sub
adc
jg
sbb
adc
mov
add
cmps
sbb
xor
xchg
ja
(bad)
popf
cmp
jp
push
pop
daa
outs
xchg
xchg
neg
addr16
out
xchg
cmp
cmp
inc
xchg
ja
mov
inc
test
rcr
push
mov
sub
shr
sbb
fwait
outs
push
fiadd
repz
adc
outs
fisubr
mov
add
xchg
cld
pop
jle
and
pop
jecxz
cmp
sbb
adc
jo
or
push
inc
and
scas
dec
mov
sbb
mov
call
sbb
push
adc
mov
aaa
ja
pop
dec
mov
fsub
ja
adc
mov
jge
xchg
or
push
and
push
mov
pusha
cmp
sti
jp
popf
xchg
mov
jecxz
retf
scas
pop
mov
lahf
xor
ins
mov
scas
jge
inc
ret
sub
mov
xchg
xchg
mov
test
xor
xchg
cmps
fstp
cmp
inc
pushf
mov
jge
and
mov
or
repz
mov
push
jmp
push
scas
outs
xchg
push
mov
jmp
inc
adc
stc
xchg
xor
mov
cdq
jl
xor
xchg
adc
mov
psubb
sbb
jmp
lock
out
mov
add
out
or
jle
dec
mov
add
call
sar
fimul
mov
gs
pop
imul
call
loope
mov
pop
sar
and
push
pop
retf
loopne
jns
scas
adc
and
and
jmp
mov
mov
adc
das
jge
mov
sbb
mov
jge
es
sbb
mov
pop
rcr
cmp
lods
sbb
jg
sbb
popa
add
pop
mov
mov
pop
cmp
cdq
test
stos
stc
je
shr
push
call
out
add
mov
pop
dec
adc
imul
mov
and
fst
(bad)
mov
mov
mov
mov
mov
or
and
cmp
out
xchg
xchg
addr16
mov
push
and
jle
clc
into
mov
jp
ins
xor
pop
sub
mov
sbb
ficomp
ins
sub
enter
mov
popf
push
movs
jmp
mov
cmps
jno
xchg
loopne
jns
or
mov
xchg
jb
ins
pusha
test
je
jmp
iret
cmp
sub
xchg
pop
mov
or
fbstp
xchg
xor
sbb
or
addr16
add
fwait
or
sub
xlat
cmc
into
(bad)
cmp
dec
scas
mov
mov
push
xchg
cmp
pop
xchg
mov
popf
sbb
shl
mov
ds
push
push
stc
les
leave
sbb
out
xchg
ins
mov
dec
xor
clc
xor
les
pop
out
cwde
(bad)
sbb
rcl
push
bound
pop
shl
aaa
scas
pop
mov
jbe
sahf
fld
add
add
(bad)
int
shl
(bad)
(bad)
aaa
mov
(bad)
adc
imul
push
in
ret
jb
sub
clc
jns
in
push
int
dec
nop
sub
mov
pop
jl
shl
icebp
mov
or
les
popf
scas
bound
idiv
inc
fld
rcl
sbb
std
push
stc
inc
pop
ficomp
mov
inc
pusha
xor
push
cs
popa
push
adc
not
mov
bound
cwde
push
das
inc
fcom
(bad)
dec
pop
mov
jecxz
(bad)
in
pop
nop
cmp
sbb
mov
lea
(bad)
in
jns
cmps
xchg
sub
fadd
dec
daa
jmp
jp
jle
pop
into
sub
cmp
sub
shl
gs
pusha
sub
je
jl
out
pop
loopne
pusha
xor
xor
loopne
xor
mov
ds
(bad)
dec
jmp
xchg
js
cmp
loop
fmul
pop
cmc
inc
xor
sub
popf
or
jmp
pop
adc
addr16
inc
call
mov
xlat
mul
fincstp
jp
popf
pusha
lods
mov
xor
mov
xor
stc
xor
jge
lds
push
out
cmp
fsubr
lock
cmp
ret
jnp
stc
ins
mov
jl
jbe
fscale
shr
addr16
pop
dec
jnp
clc
and
xchg
jns
pushf
test
lock
xchg
hlt
and
mov
out
and
pop
test
fadd
ds
push
mov
cmp
lock
ins
push
inc
jns
je
sar
sbb
jbe
adc
lods
push
lahf
jno
dec
retf
ins
jmp
sub
pmaxsw
mov
xchg
pop
sbb
jecxz
pushf
or
(bad)
in
bound
into
sbb
xchg
push
ss
or
adc
and
inc
mov
add
aaa
mov
push
add
ds
shl
fnstsw
les
cld
fbld
fstp
mov
sub
rdmsr
mov
aad
call
jmp
push
jb
aaa
and
or
pop
pop
mov
sub
xchg
mov
in
ins
ins
jg
and
test
test
sti
or
xchg
adc
ss
ret
push
pop
cmp
cwde
and
test
mov
cld
mov
xor
mov
xchg
add
je
scas
push
scas
out
sti
pop
stos
test
xor
hlt
repz
xor
sub
add
sti
lea
pop
jb
shr
sub
fst
cmp
sub
pusha
jp
not
mov
cmp
mov
sub
(bad)
adc
ja
inc
xchg
jno
sahf
arpl
enter
lea
sbb
fs
out
stc
push
mov
push
loopne
loope
mov
push
scas
inc
outs
ins
cld
daa
pop
(bad)
jb
lock
jns
add
jno
sub
sbb
push
fcomi
pop
std
inc
mov
pop
jns
adc
pop
aas
jl
fnstcw
mov
mov
ja
jl
and
xchg
inc
lds
(bad)
cmp
in
mul
cmp
jg
(bad)
iret
xor
sahf
adc
dec
sbb
jecxz
sti
pop
xor
mov
push
adc
xor
pop
int3
test
xor
pushf
nop
fild
or
cmp
out
hlt
out
dec
inc
xor
pop
frstor
pop
mul
jg
(bad)
addr16
pusha
sub
xlat
loopne
cmp
hlt
xor
sti
pushf
or
mov
push
jo
addr16
dec
out
shr
push
mov
xor
fstp
and
cmovge
lds
gs
push
pop
aad
push
jp
jb
sbb
mov
adc
adc
hlt
imul
es
jo
pop
add
or
jae
pop
adc
stos
aas
jmp
push
mov
push
fisubr
aas
push
(bad)
rol
adc
sub
add
push
repz
xlat
and
xlat
jbe
test
jbe
nop
cs
aaa
es
and
jmp
cdq
add
mov
or
cmp
(bad)
jp
loop
ja
mov
sub
xchg
add
call
test
push
dec
jb
or
and
mov
jmp
pop
lds
mov
add
call
push
mov
std
xor
mov
mov
mov
mov
jg
jle
mov
add
mov
mov
popa
lahf
mov
fisttp
cmp
stos
(bad)
das
out
add
div
ss
fwait
jo
js
adc
ja
push
or
inc
xabort
mov
sti
cs
pop
mov
sbb
lea
push
adc
das
lahf
fstp
jmp
call
or
cmp
enter
xchg
xor
std
mov
stos
mov
push
jmp
fdiv
retf
iret
loope
sub
das
fnstsw
xlat
add
aas
mov
mov
push
fcmovu
pop
fwait
sahf
mov
jp
mov
mov
repnz
and
stc
movs
nop
jbe
add
das
lahf
scas
xor
shl
cmp
jmp
js
popa
xor
aas
mov
mul
push
xor
adc
out
movs
and
movd
add
lahf
pop
div
jl
arpl
ror
inc
cli
js
and
nop
xchg
mov
nop
clc
js
push
(bad)
jg
xchg
je
push
jnp
sti
mov
into
jmp
cmp
sub
pusha
mov
loopne
mov
sahf
inc
ins
jg
inc
retf
jae
pop
lock
es
in
pop
loopne
mov
addr16
clc
xor
rcl
or
mov
jbe
ret
pop
jae
add
sub
bound
cs
jge
push
sar
sbb
push
sbb
sar
mov
dec
mov
mov
aas
adc
out
mov
adc
jg
mov
add
movs
adc
sub
std
loopne
mov
adc
cmps
push
into
movs
in
mov
push
jl
and
xlat
(bad)
lods
dec
call
xchg
mov
pushf
les
loopne
pop
jno
ret
loope
fidiv
mov
jmp
neg
(bad)
mov
das
jns
fcmovb
dec
ins
jg
lods
mov
enter
sbb
dec
mov
jns
xor
cmp
cli
pushf
add
(bad)
mov
fs
sbb
xlat
push
cli
sti
adc
mov
daa
addr16
sbb
enter
dec
sbb
sbb
adc
push
nop
pop
sar
mov
cli
mov
push
into
pop
add
mov
push
aas
mov
iret
mov
fisub
nop
push
pop
push
aad
jo
sub
test
mov
pusha
xchg
push
sub
xchg
sar
(bad)
cmp
mov
push
sti
pop
xor
mov
mov
adc
adc
pop
stos
out
sub
mov
jnp
sub
mov
inc
lods
imul
xchg
ss
mov
pusha
call
outs
loopne
ret
cmp
dec
pop
test
add
cs
mov
or
aad
xchg
aas
or
mov
inc
jns
test
inc
mov
mov
aam
mov
cmps
loope
jo
sbb
loopne
xor
and
out
xchg
pusha
outs
mov
pop
xor
dec
lds
rcl
push
pop
xor
outs
rol
pop
fst
jle
dec
test
stos
bound
addr16
push
dec
aaa
sbb
xchg
mov
xor
rcr
fdivr
test
hlt
mov
stos
fnstsw
sbb
xchg
outs
movs
jae
mov
mov
push
jns
gs
js
adc
cmp
ficom
test
cdq
jle
push
pop
cs
std
sbb
aaa
(bad)
fs
pop
cmp
dec
pusha
xor
popf
pop
and
das
inc
leave
cmp
ret
mov
ret
add
sub
outs
js
mov
stos
sti
ins
popa
push
jno
mov
rol
ss
ins
adc
jns
mov
sub
loopne
das
mov
data16
inc
mov
scas
or
xchg
jno
pop
mov
outs
pop
mov
out
jbe
pop
ja
daa
loopne
dec
pop
jo
pop
into
fstp
jmp
push
stos
push
js
fbstp
pop
and
mov
and
push
mov
call
sar
or
cli
sub
sbb
aaa
outs
mov
in
int
(bad)
cmc
jg
not
pusha
inc
push
xchg
lahf
sbb
push
cs
lahf
add
cld
scas
xlat
imul
mov
cmp
je
and
jns
icebp
std
jbe
stos
pop
jge
or
outs
push
test
in
sub
adc
iret
fcmovbe
adc
call
inc
jl
mov
jp
cmps
push
loopne
mov
lahf
es
adc
dec
dec
shr
push
push
add
xchg
add
add
jle
cmp
dec
sub
jmp
ror
mov
sub
cli
int
nop
sub
arpl
xor
or
lds
repnz
adc
scas
inc
mov
push
sub
cmc
xchg
or
jns
adc
ds
div
cmp
mov
cmps
(bad)
sub
ss
(bad)
mov
popf
mov
int
rcl
call
inc
lods
rol
mov
adc
sbb
cmps
ins
push
popf
jmp
or
into
out
(bad)
sti
mov
pop
push
and
popf
das
sbb
aad
xor
mov
cmps
loop
pusha
popa
sbb
fldcw
int
sahf
inc
lea
xchg
adc
dec
cmps
div
(bad)
dec
fstp
stc
popa
and
das
mov
pop
int3
daa
mov
pop
dec
xor
nop
aas
inc
scas
mov
sbb
sub
mov
in
shl
fcomp
ins
test
sti
leave
mov
or
arpl
jmp
clc
sti
adc
aas
add
fcmovnbe
or
pusha
or
popa
sbb
add
cmp
xchg
adc
xlat
or
sbb
stos
scas
icebp
mov
into
aas
retf
scas
pop
scas
cmp
div
hlt
sub
aaa
test
mov
cld
xor
pusha
inc
pusha
mov
in
inc
pop
nop
xor
pusha
xchg
cmp
cli
inc
lahf
pop
push
jle
adc
retf
addr16
cld
test
and
mov
shl
push
or
pop
cld
mov
dec
add
jne
int3
movs
data16
stos
cmp
sbb
jnp
dec
js
jl
out
retf
inc
test
pop
inc
pop
sbb
or
sub
std
int3
add
cmp
int
inc
int
imul
dec
push
jg
dec
adc
xchg
dec
jmp
mov
retf
xchg
mov
pop
js
dec
cs
mov
sbb
xor
add
dec
mov
mov
pop
push
pop
jle
nop
loopne
sbb
mov
xor
inc
push
xor
shl
ret
push
dec
aas
mov
jae
bound
out
sbb
sbb
aaa
in
pushf
sub
dec
daa
push
jle
xor
sbb
jb
mov
jmp
dec
push
sbb
jmp
aas
je
mov
mov
pop
mov
mov
mov
sub
ins
adc
mov
(bad)
push
push
xor
push
loopne
jg
dec
sahf
dec
sbb
fbstp
gs
xor
(bad)
pusha
push
mov
or
shl
ss
cli
mov
test
ficom
pop
ss
out
jae
sbb
popa
arpl
cs
jge
and
sbb
loopne
pop
or
mov
push
sbb
push
push
sahf
es
pop
mov
adc
lahf
push
test
imul
jp
mov
mov
cmp
xor
sbb
jle
dec
mov
push
out
xor
popa
push
add
mov
adc
pop
cmp
and
sahf
add
lahf
shl
movs
fnstsw
clc
shl
xor
dec
sub
movs
aad
jbe
sbb
outs
inc
outs
mov
std
jmp
fstp
aas
adc
aaa
in
push
(bad)
daa
jg
aaa
gs
sahf
mov
dec
sub
pop
mov
pop
aaa
mov
jae
or
ret
mov
mov
jo
std
jnp
pop
push
(bad)
jp
frstor
add
sbb
push
mov
mov
dec
cmc
and
adc
outs
pop
jl
sub
call
sub
bound
test
jno
sbb
(bad)
pop
mov
mov
jns
loopne
retf
sub
fs
push
sub
clc
or
aad
pushf
cld
push
retf
adc
loopne
sub
add
in
data16
push
and
lds
push
fstp
cmp
add
xchg
jns
sbb
jo
cmp
cmp
stc
mov
popf
movd
(bad)
inc
popf
and
jo
sbb
mov
cmp
push
mov
fcom
jns
mov
(bad)
(bad)
add
xor
jnp
add
sub
lods
xchg
xor
pop
out
pushf
outs
cmps
xor
jns
scas
mov
mov
dec
xor
add
mov
neg
fst
sub
xchg
pop
cwde
jle
data16
cld
jo
or
push
sbb
mov
xor
(bad)
mov
test
retf
int
iret
jmp
mov
retf
jg
cmps
into
cmp
into
and
jg
xor
popa
hlt
and
add
push
xchg
mov
stc
pop
or
adc
fsub
dec
inc
shl
jp
sub
jl
xchg
cmp
addr16
mov
pop
mov
call
xchg
ins
inc
cmp
adc
add
cdq
out
pop
movs
xchg
xor
bound
dec
xchg
inc
pop
mov
inc
lahf
sti
push
jle
pop
je
shl
push
cs
add
frstor
imul
test
mov
dec
push
dec
mov
or
pusha
aam
stc
lods
sub
mov
lock
lea
cmp
test
push
or
out
lods
dec
xor
(bad)
das
jl
mov
ret
sub
xlat
vpextrw
lds
dec
addr16
out
jns
fnstsw
pmuludq
ss
jno
addr16
(bad)
pop
push
pop
scas
in
jecxz
ins
mov
sub
shr
stos
xchg
mov
cld
ins
sbb
aas
je
sub
enter
push
jbe
pusha
xchg
pop
dec
xchg
jns
cld
(bad)
arpl
sbb
inc
dec
retf
sub
xor
push
rcl
inc
jmp
cli
and
ret
push
inc
sub
cs
xchg
jo
and
cmps
cmp
mov
xchg
(bad)
xchg
or
out
nop
retf
clc
ret
div
stc
mov
xchg
scas
cmp
and
mov
dec
out
mov
jne
pop
cmp
adc
mov
in
(bad)
stc
not
pop
aaa
cdq
sbb
in
loope
aaa
lahf
mov
sti
je
adc
rcr
pop
nop
sub
push
jo
xor
mov
popa
or
cwde
xchg
cs
ss
xor
aam
inc
jl
hlt
push
stc
js
mov
sbb
das
mov
mov
or
mov
jns
test
out
jb
jecxz
cdq
(bad)
outs
and
mov
mov
aas
xor
and
jg
mov
inc
sbb
and
fs
dec
outs
xor
pusha
and
push
pop
pop
test
xor
popa
xor
or
add
pop
push
stc
dec
in
push
icebp
popa
xor
mov
pop
add
jp
cmp
and
rcl
or
mov
mov
mov
push
mov
mov
mov
cdq
and
shl
paddd
and
lahf
repnz
cwde
sar
div
ss
and
and
mov
jbe
xchg
pop
cmp
inc
mov
sbb
sti
xor
jp
inc
mov
push
jb
push
and
mov
xor
cmp
int
sub
jnp
adc
test
or
dec
pop
sbb
stos
sub
or
(bad)
pop
sbb
mul
push
fidiv
jns
test
das
test
mov
int
(bad)
jb
pop
or
mov
repnz
xlat
cmps
mov
adc
inc
xchg
fisubr
test
sbb
mov
stos
or
sbb
pop
sub
cli
es
inc
pop
lods
sbb
sbb
adc
or
ja
sub
arpl
mov
xchg
ins
mov
out
or
fwait
add
fist
mov
shl
push
stc
in
push
fwait
push
lods
and
jmp
dec
into
(bad)
(bad)
jbe
test
jo
pop
call
ror
sub
or
mov
mov
outs
das
ins
and
mov
sbb
adc
in
out
sub
pushf
mov
test
sub
ret
pushf
in
ins
and
icebp
test
inc
mov
push
sar
js
or
fidiv
push
push
or
inc
cdq
xor
fs
pop
xchg
scas
xor
das
cwde
stos
mov
cli
xchg
ins
lods
or
xchg
push
pop
fild
clc
scas
adc
hlt
leave
lods
sahf
popa
mov
jle
jno
push
jo
cmp
cmp
sbb
inc
fsubr
cdq
ds
jns
jmp
(bad)
jecxz
xor
(bad)
call
mov
add
sub
mov
mov
pushf
jno
shr
xchg
mov
cmps
push
fcmovnbe
retf
je
dec
xchg
rcr
nop
inc
pop
call
xchg
shr
neg
jmp
xor
pop
data16
into
shr
push
inc
lods
mov
mov
retf
dec
(bad)
pop
xchg
add
jbe
bound
outs
jbe
pop
push
in
jbe
jb
dec
popf
popf
sbb
(bad)
ficom
jge
jle
mov
cmps
xor
loopne
repnz
lods
add
add
jl
fs
pop
jge
fnstsw
inc
xchg
xchg
sub
pop
xchg
xchg
lahf
pop
aaa
mov
(bad)
shr
mov
sub
movs
push
inc
or
and
dec
aas
push
push
push
aas
xchg
mov
adc
cmp
cld
rcr
xchg
sbb
adc
cmp
dec
push
pop
ds
fwait
xor
jge
adc
out
outs
push
mov
lods
jbe
leave
jl
sub
mov
ficomp
repnz
test
pop
sbb
das
scas
enter
test
pop
jne
lods
js
pop
cmp
out
sub
push
push
add
mov
add
fst
aam
sub
sti
js
shl
push
fisttp
mul
dec
test
sub
add
jns
sub
dec
cmp
ror
je
mov
pop
mov
mov
xor
mov
scas
push
mov
into
(bad)
sbb
mov
pushw
xor
xchg
aas
dec
je
imul
int3
sub
xor
addr16
push
(bad)
sbb
and
mov
xlat
pusha
xor
xor
xor
out
mov
mov
push
mov
xor
mov
mov
daa
mov
ds
ss
xchg
mov
inc
pop
icebp
bndstx
sub
sti
sbb
daa
aas
jmp
sub
imul
pcmpgtb
repnz
shr
rcr
(bad)
push
cmps
push
neg
cmp
jns
out
and
jnp
fbld
mov
loope
fwait
mov
ins
adc
lds
int
fs
xor
cmp
lds
pop
stos
popf
xchg
daa
sti
mov
retf
out
or
aas
adc
fwait
dec
das
cli
ins
xchg
sub
sub
js
adc
pop
and
dec
or
or
and
pop
dec
mov
(bad)
push
or
shl
(bad)
test
and
aas
inc
mov
sub
fisubr
mov
inc
lea
aas
setle
xor
(bad)
daa
push
or
movs
push
mov
sub
mov
pushf
pop
idiv
sti
popa
das
push
out
lods
scas
(bad)
(bad)
pop
and
call
add
mov
mov
jmp
les
ins
mov
pushf
das
and
mov
shl
or
cmp
mov
or
and
or
pop
mov
mov
mov
addr16
add
aam
aas
cmc
mov
cmp
pop
loopne
sbb
dec
jns
cmp
xor
sub
movs
jmp
xor
clc
cmp
ins
inc
cmp
cmp
xor
mov
jb
jl
push
sub
push
cld
enter
add
(bad)
xchg
cli
sub
movs
fsub
pop
nop
fld
loopne
ins
sub
sbb
sbb
mov
daa
sub
jmp
sub
push
cwde
jg
xor
push
jb
xor
gs
cmp
dec
dec
dec
enter
inc
add
mov
retf
data16
loopne
push
sti
pop
fwait
adc
push
mov
(bad)
sbb
(bad)
xlat
sub
sub
stos
mov
xor
fidiv
mov
shr
and
xor
aas
fwait
cmp
cmp
cmp
inc
mov
jo
cmp
test
gs
xchg
in
mov
ins
jp
jb
scas
jl
cmp
push
(bad)
(bad)
cmp
cs
cs
aaa
cli
(bad)
aaa
and
es
pop
retf
jns
add
std
pop
push
mov
je
mov
mov
jl
sbb
jmp
cli
test
sub
ins
sbb
movs
das
cmps
fwait
mov
xor
fwait
pop
das
jmp
xchg
pop
outs
jmp
cmps
pop
pop
jge
fucomi
repnz
pop
jge
sbb
fnstenv
icebp
sahf
or
dec
push
sub
or
imul
cmp
jle
neg
int3
ret
sub
outs
pop
cld
pusha
pop
or
jne
nop
cmp
jge
addr16
xor
(bad)
mov
outs
mov
js
jl
and
xor
popf
dec
xor
(bad)
stc
dec
push
ins
ss
imul
or
xchg
fiadd
cmps
or
sahf
aas
pusha
neg
call
scas
dec
xor
push
jp
iret
stos
movs
pop
sbb
mov
cs
or
and
clc
mov
call
push
adc
pusha
cmp
mov
lfs
out
out
test
(bad)
test
push
sahf
lds
jns
pop
cwde
ds
outs
ins
sub
mov
or
fisttp
and
jp
mov
mov
fistp
add
mov
inc
je
pop
nop
and
mov
sub
and
clc
mov
aas
pop
ds
mov
add
repz
push
and
sahf
addr16
xchg
jno
call
test
or
inc
cli
repz
xchg
out
xor
cs
lea
ins
and
fwait
jl
push
ds
pop
in
nop
mov
mov
add
add
sub
sar
jns
(bad)
mov
sar
in
xchg
lea
mov
shl
sahf
and
mov
movs
fs
jge
iret
mov
xor
pop
(bad)
sti
pop
mov
inc
mov
ret
cmps
jb
je
adc
loopne
rcl
xchg
addr16
(bad)
leave
jb
xor
test
bnd
push
mov
sbb
dec
cmps
mov
dec
xchg
xor
in
out
jmp
retf
jns
jl
lahf
das
pop
sub
cmps
pop
test
mov
es
aaa
(bad)
(bad)
addr16
lahf
stc
bound
rol
(bad)
push
inc
mov
sub
sbb
in
mov
mov
scas
out
aaa
fsub
js
pusha
mov
xchg
adc
jbe
loopne
hlt
jge
mov
test
push
pushf
aam
mov
or
rol
pop
xchg
cmps
stos
test
out
push
sub
clc
test
cmp
jbe
dec
ret
out
or
xor
popa
jo
and
jl
mov
shl
fnsave
sub
and
repz
(bad)
xlat
test
pusha
std
pushf
nop
jns
in
sti
dec
cld
stc
xchg
bound
jle
fucomi
cwde
and
lock
xchg
cs
out
push
mov
(bad)
out
int
out
cmp
inc
sbb
retf
pop
je
sub
jns
mov
movs
aam
pop
ins
jge
shl
rcr
ins
lods
pushf
sbb
xchg
call
(bad)
mov
sub
cs
sar
mov
push
inc
pop
out
fst
cld
ins
inc
cwde
pusha
inc
and
push
adc
call
js
lea
sub
fcmovu
dec
retf
and
jp
push
or
retf
int
cmp
test
xchg
jno
mov
fnstcw
xchg
jmp
cmc
ror
arpl
ss
ins
push
idiv
and
xor
jl
jnp
or
in
imul
nop
lds
test
(bad)
(bad)
inc
fwait
jle
arpl
bound
repz
inc
cld
(bad)
mov
sbb
es
daa
mov
jns
(bad)
outs
sbb
ja
shl
mov
add
js
popa
jle
xor
sbb
into
mov
pop
or
sbb
dec
jg
sub
xchg
sbb
push
add
sub
xor
sub
dec
sbb
pop
icebp
les
imul
mov
jne
cmp
retf
imul
add
cmp
fdivr
push
mov
push
mov
mov
dec
test
push
push
mov
sub
dec
xchg
mov
aam
jne
clc
mov
shr
test
retf
jae
stos
sbb
lahf
add
sbb
js
ss
int
mov
sbb
(bad)
je
and
push
scas
ss
mov
hlt
fld
inc
sub
xchg
push
popf
outs
pop
push
scas
cmc
sub
data16
test
adc
jp
or
rol
aad
mov
jns
sbb
mov
stc
js
outs
test
mov
mov
push
fistp
fst
mov
push
(bad)
fisttp
add
adc
pop
push
sub
cmps
push
push
dec
ret
pop
pusha
rcl
mov
cmp
inc
mov
pop
jge
mov
sti
lahf
add
fldcw
xor
call
adc
sub
mov
cmp
and
hlt
mov
dec
sbb
xchg
jbe
xchg
outs
dec
popa
push
inc
xchg
inc
jmp
sbb
pusha
popf
int
(bad)
dec
ds
inc
btr
ret
jb
add
cwde
cld
lahf
push
sbb
jns
mov
ds
mov
out
sbb
lahf
pop
inc
pusha
fcom
cmp
sbb
outs
jns
out
popf
mov
sub
mov
or
scas
popa
and
jl
mov
ds
and
inc
adc
mov
popf
push
fiadd
mov
jmp
jns
adc
fwait
dec
xor
sbb
push
in
cmc
adc
inc
xor
mov
and
aad
or
cmps
cmp
jecxz
mov
fwait
xor
cdq
xor
adc
cmp
mov
xchg
pop
pushf
popf
xor
push
xchg
sub
outs
test
out
sub
dec
aaa
leave
jbe
sub
jle
add
mov
popf
daa
stc
mov
les
sbb
sar
cld
mov
add
pop
inc
int
test
cli
daa
cmp
fs
into
fnstenv
out
hlt
arpl
xor
ret
scas
sub
lock
cwde
fs
mov
pushf
notrack
or
loope
sbb
xchg
loope
mov
add
je
in
mov
mov
pop
fild
mov
daa
jmp
adc
push
add
or
mov
mov
xchg
sbb
inc
adc
and
int3
add
pop
mov
lahf
das
fadd
cmc
icebp
stc
in
or
ds
loop
lods
xchg
inc
jmp
adc
xchg
jns
sub
mov
ins
ss
(bad)
mov
sbb
jns
test
mov
sbb
adc
ret
dec
stos
or
and
stos
mov
sbb
mov
stos
es
xor
add
test
adc
in
int3
mov
cmp
popa
sbb
sub
pop
int
movs
add
mov
mov
(bad)
push
jo
xor
(bad)
push
shr
adc
and
add
adc
popa
out
cmp
fnstcw
jns
loope
(bad)
lahf
cwde
ja
fistp
sar
inc
mov
xor
inc
xor
pop
scas
jg
mov
ins
mov
mov
int
mov
lods
scas
aas
stos
cmp
ds
mov
out
test
xor
mov
into
pop
js
mov
aas
pusha
loopne
fiadd
stc
int
(bad)
adc
rcl
mov
add
or
test
dec
cwde
pop
mov
inc
mov
xchg
fiadd
ret
mov
push
mov
mov
in
mov
dec
test
out
test
shl
pop
jp
cs
mov
(bad)
ss
mov
mov
dec
mov
retf
push
dec
dec
lahf
mul
in
push
and
lahf
pop
pop
ja
cmc
sar
and
xor
pop
jns
cs
add
mov
xchg
mov
loope
mov
hlt
(bad)
lds
fmul
or
or
outs
ror
imul
push
cld
mov
ret
xchg
or
jo
aas
adc
push
push
jb
fnstenv
inc
iret
or
cwde
cmp
jg
nop
cmps
ror
int3
push
clc
int
adc
adc
mov
sub
popa
adc
xor
push
movs
xchg
into
mov
fsubr
xchg
sub
pusha
add
jns
call
popf
rcl
add
sub
pop
jns
(bad)
mov
js
sub
and
sbb
aam
mov
ret
aad
jmp
imul
mov
pop
imul
inc
(bad)
xchg
test
mov
ja
add
fcmovu
in
in
outs
outs
inc
or
popf
(bad)
push
cmc
sub
jp
int
sub
mov
or
outs
adc
xchg
adc
(bad)
jmp
jecxz
sub
jmp
out
inc
lea
fild
sbb
jl
mov
loope
jbe
mov
dec
xchg
jle
sbb
rcr
pusha
cmp
jns
mov
lock
aad
jno
loop
shr
out
in
rol
and
sbb
test
lahf
data16
cwde
and
adc
and
mov
arpl
pop
jns
cwde
pop
in
and
xchg
nop
mov
pop
mov
and
int3
(bad)
rcr
push
add
icebp
inc
sub
push
loopne
mov
icebp
push
js
and
xor
sub
cmps
test
push
scas
mov
jo
cmps
cmp
sahf
fidivr
jns
or
lea
sbb
cli
and
mov
btr
(bad)
scas
or
mov
sbb
popf
jno
ins
push
mov
popf
ret
dec
fsubrp
sbb
mov
dec
sbb
movs
data16
call
add
cmp
pop
mov
and
xor
adc
pop
mov
jbe
std
pop
jb
popa
push
sub
scas
test
aas
js
pop
popa
lahf
sub
fwait
push
mov
xchg
icebp
sub
je
mov
pop
shl
inc
shr
data16
mov
add
mov
clc
cdq
(bad)
int
outs
ficom
shl
dec
push
dec
shr
cdq
sbb
stc
js
out
adc
rcr
sbb
ds
pop
data16
(bad)
in
sysexit
data16
xor
out
mov
ret
pop
inc
rol
sar
adc
fnsave
cwde
popa
sub
sbb
js
sub
int
das
lods
xor
stc
ins
and
xchg
shr
mov
ror
xchg
xor
fbld
cmc
cmp
inc
sub
mov
mov
jns
sbb
sbb
mov
scas
aas
jns
in
test
lds
mov
mov
mov
fist
psubusb
xor
xor
mov
sbb
jo
mov
sbb
(bad)
push
out
mov
cmp
out
dec
adc
outs
jae
out
cmp
call
jno
dec
cwde
jmp
loopne
scas
movs
cmp
sub
mov
(bad)
jnp
mov
into
jmp
(bad)
pop
rcl
cmp
jo
lock
imul
jno
es
mov
arpl
ss
clc
mov
lock
pop
add
mov
mov
xor
je
pop
jbe
mov
xchg
call
je
xchg
fwait
repz
or
pop
or
js
cmp
mov
push
sahf
cmp
into
dec
fcomp
or
xchg
scas
xchg
mov
sti
sti
or
or
popf
scas
inc
add
loopne
mov
pop
es
mov
rcl
lds
push
out
lds
pop
dec
mov
cmps
cdq
(bad)
adc
test
aaa
and
mov
mov
sbb
ins
jbe
add
adc
mov
cmp
(bad)
push
xor
push
sub
test
je
jo
push
mov
clc
or
aaa
push
mov
or
jecxz
(bad)
push
or
jecxz
cwde
push
cmp
call
fimul
not
mov
mul
int
int3
aas
sub
out
xor
jecxz
out
(bad)
jg
add
cmp
imul
jbe
or
(bad)
faddp
in
div
pop
repnz
pop
dec
loope
imul
or
jbe
add
enter
add
ds
addr16
lea
shr
test
fld
add
cmp
cmps
mov
mov
mov
push
adc
addr16
push
dec
test
fwait
jmp
mov
mov
mov
mov
scas
pop
sub
sub
and
or
mov
mov
out
lea
lock
std
mov
push
mov
je
push
and
movs
cmps
leave
and
lea
sub
sbb
push
or
ds
and
out
push
xor
mul
retf
(bad)
jl
out
or
loope
push
jno
inc
mov
mov
mov
push
cmp
clc
xchg
xor
mov
addr16
ins
adc
jl
mov
and
cmp
jmp
cmp
sbb
mov
adc
pusha
rcl
icebp
outs
jae
movs
push
xchg
mov
out
pusha
lea
xchg
in
or
jns
mul
sbb
ror
movs
xchg
lea
push
shl
xor
lods
jmp
cmp
mov
mov
rcr
dec
(bad)
adc
stc
shl
repnz
cmp
xor
mov
push
cwde
mov
sbb
ins
cmp
je
sbb
pop
ror
aam
idiv
xchg
lock
aad
jmp
aas
cmp
and
and
or
dec
lahf
mov
inc
out
iret
jns
and
push
and
push
jbe
dec
jb
sahf
and
shl
pop
into
test
test
and
or
scas
fs
aaa
(bad)
xchg
mov
(bad)
popf
cmp
jp
or
adc
arpl
ss
lods
xor
xchg
pop
cmps
scas
popa
hlt
in
pop
cmp
jbe
popf
in
jg
adc
mov
or
popa
sub
push
and
jb
fadd
add
call
push
xor
cdq
out
imul
call
push
push
push
call
int
(bad)
lock
dec
push
clc
int3
fnstsw
shl
mov
icebp
jo
shl
cmp
jns
jno
xchg
mov
div
sbb
into
(bad)
jmp
or
shl
ins
mov
sub
stc
repnz
and
in
(bad)
sub
(bad)
sub
mov
repnz
cli
stos
cli
pusha
xchg
call
pop
stc
xor
adc
mov
pop
mov
jmp
rcr
stc
jns
(bad)
hlt
test
daa
push
stc
sbb
push
pushf
add
jle
xor
loope
sbb
fcomi
(bad)
out
ret
jns
outs
out
push
fidivr
sub
popa
jmp
mov
sub
cli
sub
pop
fwait
stos
add
push
xchg
out
sbb
pusha
push
add
outs
fs
and
or
push
xor
or
mov
or
out
pop
ret
mov
adc
scas
cmps
jmp
xor
test
adc
inc
mov
push
cmp
or
mov
jb
jne
out
mov
sub
outs
adc
call
lea
nop
and
pop
loope
sub
sti
push
pop
cmc
setns
sbb
cmp
sub
ror
sbb
aad
inc
(bad)
arpl
push
sbb
sub
je
adc
cwde
push
into
sub
repnz
jns
mov
adc
clc
out
repnz
jnp
mov
enter
addr16
dec
sbb
dec
out
movs
loopne
out
mov
mov
inc
inc
popa
(bad)
call
(bad)
fnstcw
enter
inc
jnp
jmp
aaa
push
stos
fldenvw
popf
jns
sub
cld
jmp
addr16
xor
xor
iret
add
adc
int
adc
push
and
push
pop
popf
js
enter
cmp
pusha
add
call
popa
pop
mov
adc
cmp
int3
scas
pop
jns
dec
inc
push
fs
fiadd
jecxz
lea
stos
push
pop
pop
adc
jns
(bad)
push
mov
dec
inc
leave
mov
test
in
je
outs
jnp
pop
jo
jnp
and
(bad)
jl
pop
push
leave
xor
in
push
cmps
lds
and
push
test
push
mov
lds
fst
int
jle
sub
lds
cmp
pop
std
mov
push
and
push
xchg
arpl
leave
pushf
jl
sub
fwait
adc
cmp
push
pop
cmp
adc
jb
ds
add
mov
jecxz
xchg
cmp
das
jmp
fist
es
mov
popa
aaa
sar
jo
sub
jae
mov
push
mov
lock
xor
popa
sahf
popf
(bad)
and
popf
sub
std
loope
(bad)
mov
popa
(bad)
scas
jb
out
movs
mov
xchg
cmp
cs
aaa
out
daa
arpl
jg
nop
nop
sub
clc
out
xor
adc
pop
outs
(bad)
cmp
daa
sub
dec
jp
pop
out
sub
cmp
jo
pop
jo
mov
or
jno
add
ins
jmp
push
out
and
mov
sub
loopne
sub
imul
out
xchg
push
stos
pop
fistp
xchg
sar
dec
sbb
cmp
adc
jns
scas
cmp
xchg
push
cwde
pop
or
ds
mov
loop
dec
sub
dec
aad
ds
bnd
and
jl
bound
jo
pop
push
js
cdq
sbb
call
adc
scas
loop
fisttp
(bad)
cli
dec
pop
jno
mov
inc
xor
or
add
shl
sub
test
jle
push
push
jns
(bad)
(bad)
sub
and
mov
test
pop
mov
cmp
cmp
push
adc
xchg
adc
ss
pop
iret
jle
cld
mov
cmp
sub
pusha
scas
out
push
push
into
or
scas
dec
movs
cmp
jne
pop
push
cmp
jae
pop
add
mov
test
popf
jbe
cmc
out
mov
lahf
popa
mov
popf
jge
pop
mov
xor
enter
jae
jne
shr
mov
jo
ds
cli
aas
je
mov
mov
das
sub
sbb
outs
jp
jnp
mov
mov
out
adc
pop
outs
cmps
mov
fcomi
or
outs
mov
push
fcmovu
aas
cmp
pop
sbb
rol
and
aaa
das
sbb
pushf
adc
aas
cdq
stc
add
jno
aam
popf
jne
mov
add
pushf
mov
mov
je
cmp
push
(bad)
cmp
ins
pusha
pop
jno
(bad)
clc
mov
sub
push
pop
stos
jle
hlt
daa
mov
pop
and
dec
aas
push
jp
retf
mov
clc
test
push
fwait
mov
dec
xchg
cmp
mov
and
push
pusha
push
test
je
xor
mov
aaa
sub
and
pusha
pop
adc
jp
and
sbb
into
jnp
pop
dec
jns
out
jmp
ins
pop
mov
lock
(bad)
jl
test
and
and
adc
and
add
fldenv
mov
push
aas
mov
add
leave
lahf
mov
mov
jmp
push
xchg
or
dec
xor
(bad)
fist
fdivr
mov
push
jl
jbe
je
add
into
pop
ins
(bad)
loopne
mov
push
dec
out
sar
out
xchg
or
ins
lds
add
cmps
les
push
cmp
mov
lods
es
lea
dec
pusha
test
mov
loopne
push
push
in
and
and
and
adc
inc
xchg
iret
popf
data16
scas
cwde
xchg
popf
popa
and
and
pusha
in
in
sub
mov
xor
xchg
mov
fisttp
repnz
nop
(bad)
icebp
imul
out
ja
(bad)
jno
inc
mov
add
mov
scas
scas
jbe
mov
mov
repnz
fisub
scas
in
sbb
out
cli
xchg
data16
jecxz
ins
sbb
adc
es
sub
clc
ins
push
sahf
retf
pop
xor
ror
sub
rcl
inc
xor
popa
pop
or
xchg
cs
mov
ss
dec
dec
ins
push
pop
cld
icebp
cmps
je
aam
retf
jne
ja
in
imul
mov
outs
pop
fwait
cs
lea
out
fsub
cs
pusha
sub
pop
push
fistp
and
xchg
sbb
test
pop
lods
mov
dec
bound
popf
loopne
xor
or
lods
sbb
add
sub
cmps
inc
mov
popa
mov
fs
xchg
adc
test
fidivr
clc
js
push
xor
adc
bound
or
je
lods
jns
xor
xor
xchg
and
and
ret
ror
dec
int3
cdq
and
aaa
fild
cmp
(bad)
mov
jns
fiadd
js
movs
xor
repz
cmp
std
outs
les
inc
fistp
and
jnp
cli
sub
and
sbb
icebp
outs
xchg
ret
mov
gs
fisub
cmp
push
sub
jne
cdq
mov
leave
nop
aaa
or
daa
mov
inc
xor
xchg
sub
mov
neg
add
outs
cmp
aam
mov
add
leave
imul
inc
mov
cmp
push
pop
dec
imul
sbb
enter
test
je
jp
js
and
es
or
push
mov
and
ror
pop
data16
enter
push
cs
xchg
push
data16
ins
cmp
jns
or
adc
mov
movs
inc
xchg
pop
xor
mov
fnstsw
in
and
retf
shl
or
xchg
adc
inc
mov
mov
sub
int
push
outs
fnstcw
adc
adc
(bad)
adc
mov
jns
push
mov
inc
mov
pop
gs
mov
mov
and
sbb
das
mov
jl
pop
sub
sub
xchg
cli
das
sub
loopne
int
in
in
xchg
pop
or
retf
(bad)
mov
fild
cmp
xchg
sub
jno
(bad)
aaa
jle
sar
mov
adc
mov
pop
cmp
dec
outs
shr
ss
fstp
aam
push
repz
cdq
popa
fstp
pop
push
hlt
push
dec
pop
cmp
imul
das
out
pushf
sbb
pusha
pusha
je
and
sbb
inc
jbe
cmp
inc
popa
js
enter
jl
sti
inc
adc
dec
popa
adc
out
and
and
mov
ret
fimul
stos
sbb
in
mov
jp
xor
sub
in
mov
jp
dec
jge
mov
js
test
ret
test
mov
scas
push
add
inc
xchg
mov
fidiv
add
and
pop
mov
in
add
push
pop
push
es
pusha
sub
(bad)
dec
inc
mov
mov
dec
fld
movs
popa
mov
mov
and
mov
daa
cmp
sub
xchg
in
imul
int3
lahf
cwde
(bad)
rcr
sub
scas
jmp
ss
xchg
cmc
imul
sbb
sub
rcr
out
jb
popf
movs
(bad)
or
xor
mov
push
fucomp
rcl
mov
inc
fs
mov
data16
mov
shr
lods
outs
nop
or
cmp
xchg
lods
or
aas
pop
cmp
sub
xchg
js
add
jo
mov
inc
(bad)
jecxz
mov
lea
fwait
into
int
mov
out
sbb
ss
adc
push
aas
xchg
and
fisttp
xchg
outs
mov
or
jecxz
sbb
repnz
inc
xor
cmp
sbb
test
cli
movs
jns
scas
leave
jae
out
cmp
pop
lds
jle
cmp
into
pop
cmp
sbb
fwait
jns
scas
jp
rcl
addr16
call
shl
add
mov
xchg
stos
push
es
mov
inc
out
push
pop
jns
rcl
mov
mov
into
fwait
cld
(bad)
sbb
aam
lds
jnp
inc
test
jg
adc
mov
cmp
je
leave
mov
mov
imul
jno
xchg
cmps
xchg
add
leave
das
mov
mov
into
sbb
push
fistp
loope
sbb
scas
add
not
mov
loope
adc
cdq
arpl
push
pop
idiv
pop
add
push
sub
js
push
jb
dec
inc
mov
aad
mov
test
pushf
mov
fwait
xchg
jns
lock
pop
xchg
add
cmps
xchg
dec
fnsave
movs
jns
mov
int3
cmp
out
imul
jp
pop
mov
ds
popa
xchg
mov
and
add
jl
pop
sbb
mov
fcom
xchg
ins
ret
aas
outs
bound
mov
scas
test
inc
mov
mov
xor
xchg
push
std
mov
sahf
cmp
pop
sub
pop
lods
cmps
sti
adc
fisubr
pop
or
pop
and
popa
and
push
mov
out
movlps
retf
jno
enter
sub
pop
mov
stc
sti
int
fwait
xchg
out
jl
test
or
inc
mov
inc
mov
push
inc
pusha
mov
jp
ss
jg
nop
mov
jns
xchg
hlt
cmp
xchg
inc
shl
outs
ds
and
test
fstp
xchg
inc
adc
mov
cli
ins
pop
or
jb
add
cmps
mov
test
lds
mov
stc
or
pop
jmp
adc
xor
mov
mov
sub
add
les
lahf
gs
mov
pop
test
std
xchg
add
(bad)
retf
push
stc
ins
lods
jecxz
mov
sbb
xor
mov
pop
movs
inc
xchg
std
sub
mov
sbb
das
out
fldenv
pop
adc
cmp
pop
push
or
jle
sbb
arpl
mov
das
aam
loope
or
xchg
pop
ja
cli
jg
popa
xor
mov
jnp
push
lock
(bad)
adc
ds
pop
cld
test
xor
ja
cmps
jo
outs
popf
cmp
gs
dec
mov
mov
pusha
test
and
lahf
cmps
jecxz
sbb
jo
hlt
pop
fs
popa
ins
mov
mov
jg
in
xchg
ds
lods
out
push
jnp
idiv
int
xchg
sub
inc
mov
popf
(bad)
out
push
or
jo
fdivr
push
shr
je
pop
mov
xchg
mov
js
popa
sbb
add
inc
stos
add
cmp
stc
cwde
ret
jmp
out
fwait
cwde
gs
dec
ficomp
movs
mov
fsub
fwait
outs
ins
call
jp
js
repz
test
sbb
push
mov
lahf
or
cmp
or
ss
pop
(bad)
mov
adc
ss
jle
add
cmps
je
ins
adc
push
pop
(bad)
push
xchg
mov
int
into
xor
(bad)
popf
and
mov
sbb
lock
loopne
pop
aas
call
mov
jmp
inc
mov
sahf
or
or
adc
shr
xchg
outs
inc
aas
adc
shr
int
pop
out
and
sar
fnsave
jo
xchg
dec
pusha
into
pop
pop
mov
push
mov
sar
lea
xchg
jnp
mov
jmp
pop
(bad)
std
idiv
xor
ss
pop
sbb
pop
cmp
xor
inc
mov
fst
test
sbb
jp
fmul
inc
fs
add
ficomp
adc
adc
sti
adc
mov
push
mov
mov
addr16
adc
nop
aad
lock
add
inc
mov
in
dec
fiadd
cli
jae
pop
jbe
mov
push
out
sub
stos
sub
ret
sbb
push
cmps
dec
in
enter
sub
add
mov
in
ret
add
data16
ds
add
push
stos
mov
dec
push
jmp
pop
ins
cmps
jge
inc
ja
xchg
sub
jb
loope
imul
popf
test
mov
cmp
push
out
cld
sbb
jp
ret
dec
dec
bound
arpl
outs
xor
ja
lds
loopne
cmp
sub
push
(bad)
pop
mov
mov
mov
fist
sub
dec
movs
dec
je
aaa
hlt
outs
add
mov
push
pop
or
aas
icebp
ret
pop
movs
jae
lahf
daa
in
hlt
sbb
sahf
ror
ss
jbe
sub
inc
sub
out
inc
pop
out
outs
sbb
stc
out
mov
loopne
push
ret
stos
sub
imul
das
sub
sbb
xchg
mov
scas
test
cdq
jge
mul
push
dec
(bad)
dec
fidivr
jb
mov
push
mov
jl
jo
pusha
clc
mov
dec
push
cwde
add
aad
mov
popa
data16
push
into
or
add
movs
push
test
call
xor
(bad)
imul
pop
pop
cmps
mov
pop
stos
shl
sub
pusha
mov
pop
clc
mov
into
sub
nop
mov
sbb
jae
js
int
jb
in
mov
jnp
mov
rol
xchg
enter
push
cmps
adc
icebp
jmp
push
cmps
ins
mov
sti
div
cmp
das
xchg
ins
jnp
test
xchg
cmp
inc
push
pop
or
jp
mov
outs
(bad)
mov
or
clc
aad
mov
lock
or
lock
jns
mov
fwait
sub
or
mov
jns
xlat
cmp
hlt
fisubr
jl
test
ss
add
fwait
pop
jo
mov
in
push
mov
adc
push
fwait
nop
jl
dec
push
jo
adc
jns
dec
and
jg
(bad)
mov
cmp
xchg
push
test
sbb
pop
jae
lods
fdivr
jnp
popa
sbb
sbb
bound
xchg
xchg
mov
loopne
call
adc
sub
das
out
xchg
cmp
jecxz
push
mov
pop
cmp
imul
hlt
int3
aaa
inc
ins
sub
mov
inc
scas
cld
cmp
mov
cmp
test
inc
pusha
ins
sar
jmp
retf
adc
xchg
pop
ins
cmp
in
xor
push
cmp
mov
fs
iret
fidiv
jns
rcr
inc
push
push
mov
jno
push
mov
jb
and
pop
and
(bad)
rol
icebp
xor
cmc
(bad)
mov
xchg
int
dec
int
aam
ins
enter
out
cld
in
and
nop
ins
sbb
push
pop
(bad)
jno
imul
retf
daa
aad
cmp
cmp
lahf
ins
cli
jle
sbb
sbb
fild
mov
mov
push
jg
mov
push
mov
inc
mul
xchg
or
ja
js
ja
pop
into
push
mov
cmp
cwde
mov
scas
out
std
and
ss
lock
mov
fwait
or
(bad)
or
and
cmp
bound
ja
clc
xchg
(bad)
push
push
popa
mov
retf
xor
stos
inc
add
pop
sub
push
mov
jo
jnp
rol
mov
call
stos
scas
mov
jle
sbb
inc
gs
ss
(bad)
cmp
or
call
jno
xor
adc
mov
stos
jp
ins
xor
out
jg
xchg
ds
pop
fmul
add
pop
lock
mov
fdiv
xchg
xchg
cwde
dec
adc
and
js
pop
lahf
sub
rcl
sub
mov
std
mov
cmp
in
leave
fcmovbe
xor
mov
adc
js
jns
es
pop
jne
push
mov
sti
loope
test
jmp
(bad)
ss
adc
cs
adc
sub
aad
test
xlat
stos
jne
push
inc
xchg
jmp
pop
dec
mov
jbe
mov
sub
rcl
stos
mov
cmp
scas
jne
mov
stc
fistp
pop
fwait
add
in
jg
push
mov
or
mov
addr16
push
arpl
sub
jo
movs
and
icebp
fnstenv
dec
ins
mov
(bad)
cld
or
cmovno
lods
(bad)
sub
push
ins
fld
mov
fisttp
adc
jmp
xchg
fs
or
pop
popa
scas
xor
or
mov
jecxz
test
(bad)
popa
sahf
inc
jecxz
jmp
add
test
xor
dec
bound
jge
xor
popa
dec
imul
lock
(bad)
bound
stos
test
adc
out
jecxz
dec
mov
stos
push
nop
mov
call
xchg
setbe
popa
idiv
mov
lea
jg
shl
mov
fld
sbb
fs
mov
addr16
mov
(bad)
push
fwait
hlt
ficom
das
data16
mov
push
lods
add
mov
aam
sub
lds
test
cmp
xor
popf
aad
(bad)
push
sub
xchg
mov
pop
add
cmp
jo
popa
movs
mov
pop
pop
push
nop
and
popa
test
fst
aas
lea
daa
pop
ss
mov
cli
popf
into
mov
imul
sub
push
aaa
dec
jl
icebp
inc
je
mov
push
(bad)
lahf
(bad)
test
jmp
dec
jns
(bad)
push
das
rcl
sub
nop
in
dec
leave
popf
mov
sub
or
hlt
mov
pop
in
pop
dec
xor
rol
cmp
pop
inc
mov
aaa
(bad)
pop
xchg
mov
add
push
adc
and
out
cmp
push
popw
cmps
popa
push
mov
sub
jns
xchg
sbb
add
pushf
jne
nop
mov
mov
jge
je
int
mov
fadd
mov
(bad)
hlt
mov
jb
ds
in
out
call
jl
fistp
cs
pusha
and
jle
push
icebp
test
sub
call
inc
outs
mov
adc
sbb
add
loop
jmp
cmp
jmp
cmp
fwait
pop
jns
(bad)
jecxz
mov
add
mov
and
fs
into
push
cmp
jmp
aad
ja
ret
push
mov
dec
add
or
xchg
ss
sbb
call
mov
sahf
and
clc
push
outs
xor
xlat
outs
cmps
push
rol
sbb
rcl
or
adc
popf
cld
sar
retf
ja
ss
iret
mov
push
jle
adc
add
adc
loope
aad
cmp
dec
push
out
and
mov
push
nop
mov
sbb
repnz
or
mov
daa
sub
js
cdq
outs
sub
popf
jle
mov
xchg
sbb
popf
stc
push
pop
adc
popa
outs
xor
xchg
push
sub
ror
out
dec
inc
(bad)
cmps
test
or
sbb
sbb
lock
push
xchg
test
jmp
xchg
ss
adc
jne
mov
popf
jo
lock
pop
dec
pop
mov
mov
shl
jo
and
mov
sbb
test
into
in
jno
out
popf
out
ds
add
mov
sub
mov
(bad)
sbb
adc
je
stc
or
test
dec
lods
das
mov
lods
leave
xchg
fistp
mov
mov
cmp
das
popf
outs
xchg
je
rcr
lahf
inc
pop
jno
mov
shl
push
pop
into
dec
lds
sbb
sbb
into
pop
repz
sub
cmp
and
jge
xchg
(bad)
lods
cmp
sbb
mov
fadd
clc
sar
and
daa
ins
cli
xchg
dec
lock
and
das
and
pushf
pop
call
mov
xchg
pop
mov
into
aas
jmp
dec
test
sbb
push
ins
push
mov
dec
mov
push
sahf
inc
push
rol
lods
test
sub
aaa
ja
retf
stos
shr
cs
std
jbe
std
fs
jae
cmp
dec
enter
cmp
xor
push
push
mov
pop
popa
(bad)
loopne
or
sub
lahf
and
or
outs
mov
sub
mov
mov
sub
pushf
hlt
iret
fild
cdq
push
inc
cmp
sbb
jp
ds
daa
push
mov
jecxz
popa
(bad)
imul
ss
inc
mov
or
cmp
mov
xchg
sub
fdivr
mov
push
popa
jmp
lea
shufps
sbb
into
pusha
cdq
push
pop
mov
xor
shl
test
fisub
push
pop
mov
mov
push
jle
jns
adc
and
push
mov
js
nop
cmps
stos
cmps
fwait
data16
and
pop
xchg
cmps
sbb
pop
fadd
pop
adc
sub
sbb
add
or
mov
xor
inc
jg
data16
(bad)
shl
add
cmp
pop
pop
xchg
sbb
scas
call
xchg
call
pushf
pop
sbb
cmp
xchg
push
jmp
arpl
jle
(bad)
sub
sub
jno
out
add
mov
arpl
bnd
outs
inc
ret
adc
fdiv
pusha
add
jnp
(bad)
sub
loopne
mov
(bad)
sti
dec
dec
lea
repnz
cmp
js
sbb
inc
mov
out
jle
inc
xor
push
xor
mov
xor
les
mov
bound
add
les
pop
adc
imul
mov
jo
les
js
cdq
mov
pop
mov
ds
shl
stc
push
xchg
push
mov
mov
loop
add
dec
mov
ss
std
outs
clc
popf
fadd
aaa
aas
mov
push
push
lahf
and
add
adc
shr
xchg
addr16
add
or
xchg
repnz
or
lds
daa
inc
cli
mov
jg
sub
xor
dec
mov
pop
jbe
leave
xchg
push
ja
mov
aad
cdq
push
in
pop
outs
and
shl
shr
or
mov
shr
jbe
sahf
ds
fwait
cmp
stos
lea
mov
in
jmp
into
jns
push
jecxz
clc
cmc
adc
in
(bad)
jns
outs
ret
inc
pop
repnz
and
retf
and
add
or
inc
cmc
jle
dec
ins
pusha
mov
mov
addr16
rcl
fistp
test
mov
xchg
jp
ret
mov
mov
mov
mov
outs
ror
inc
mov
push
adc
mov
shl
cmc
fadd
ins
fidivr
ror
pop
out
xchg
enter
adc
iret
aam
js
xchg
mov
out
xchg
sub
mov
mov
mov
clc
dec
mov
sbb
jo
test
pop
movs
(bad)
stos
xchg
(bad)
push
push
jae
scas
jno
lahf
jns
ja
sbb
out
jo
cmp
dec
xor
out
mov
push
das
pop
ficomp
fld
dec
xor
popa
cwde
in
lods
(bad)
inc
pop
loop
fiadd
ret
lods
cmp
xor
push
pusha
mov
pop
jo
pop
xchg
lods
pusha
pop
sbb
add
popf
popf
pop
jnp
lea
call
adc
adc
loope
mov
xchg
dec
data16
xchg
xchg
js
mov
gs
mov
xchg
(bad)
adc
sub
aad
daa
call
shl
loopne
(bad)
xchg
push
aaa
jl
(bad)
push
xchg
test
mov
sar
or
mov
and
jl
push
xor
mov
frstor
fbstp
mov
and
loope
fstp
nop
adc
adc
scas
lods
nop
aam
in
movs
nop
cmps
jns
adc
mov
rcl
dec
lahf
arpl
push
mov
es
test
xor
lds
addr16
cmp
jns
adc
js
neg
aaa
xchg
clc
xor
std
cdq
pushf
aas
inc
outs
(bad)
retf
fimul
xchg
jge
es
loope
adc
imul
cmp
stc
punpckhbw
fadd
and
mov
jo
or
aam
sub
lods
cli
pop
push
mov
inc
enter
mov
(bad)
cmp
les
ror
cmp
pop
mov
cs
mov
dec
mov
into
and
pop
xor
int3
push
adc
movs
or
mov
iret
hlt
inc
mov
jns
xchg
jno
mov
ret
call
fild
mov
outs
pop
inc
aas
loopne
pop
psubusw
fidiv
pop
aam
not
pop
add
popf
and
mov
hlt
ret
test
cmps
fisub
aaa
mov
add
(bad)
int
fcomp
or
and
inc
(bad)
dec
mov
cli
(bad)
out
or
outs
test
dec
test
(bad)
into
and
mov
sub
pop
jb
or
mov
enter
xor
mov
adc
jno
xchg
outs
sub
pushf
push
inc
fsub
dec
ins
push
test
xlat
or
out
dec
aam
repnz
sti
dec
sub
sub
aam
xlat
mov
call
sub
push
and
adc
xchg
loop
sub
(bad)
leave
icebp
dec
mov
xchg
mov
cmp
jns
pop
pop
cmp
aam
jmp
dec
or
jb
sbb
and
popa
sbb
outs
jnp
mov
mov
jl
outs
test
xchg
fistp
and
mov
jnp
push
cmp
sbb
push
mov
nop
and
sbb
pop
fwait
addr16
jbe
adc
and
jmp
sub
mov
mov
or
pop
stos
les
sar
pop
cdq
(bad)
lock
push
inc
push
xchg
popa
outs
mov
cwde
out
(bad)
mov
pop
popa
mov
cld
adc
into
dec
xchg
mov
jno
jns
and
shr
popf
mov
jle
ds
inc
cmps
leave
dec
xchg
and
int
and
mov
cmp
inc
lds
cmp
mov
mov
and
jnp
enter
out
sbb
ss
popa
push
cmp
aam
add
xor
int
or
mov
mov
mov
fstp
add
scas
adc
ins
sub
cmp
stos
sbb
call
ins
jbe
test
inc
test
jns
cmp
push
mov
addr16
neg
enter
cmp
cmps
xchg
dec
xchg
jp
jmp
cdq
sub
test
loopne
sti
xchg
jecxz
fmul
and
sub
(bad)
mov
mov
es
add
loop
jmp
lods
test
sub
hlt
push
mov
dec
cmps
add
sub
fdivrp
lahf
enter
and
cdq
test
iret
push
fdivr
xchg
in
call
push
pop
inc
sub
aad
lods
or
jmp
pusha
test
push
or
pop
mov
cmp
cmp
sti
das
stc
cwde
pop
mov
mov
jp
and
stos
dec
xchg
adc
push
stos
pop
jp
sub
push
pop
dec
test
mov
lock
pop
mov
mov
pop
test
pop
(bad)
and
push
test
sub
inc
scas
fbld
or
adc
aaa
lahf
leave
jg
fiadd
sbb
cmps
jp
mov
ss
rol
aam
movs
jmp
in
test
scas
push
pushf
ins
mov
jl
out
sub
out
or
or
cmp
cmp
jbe
jno
pushf
mov
lods
ins
popf
shr
mov
data16
mov
in
jl
das
jle
mov
clc
cld
push
fisubr
mov
inc
cdq
in
cmps
add
test
sahf
push
fcomp
xchg
ficomp
xchg
fisubr
enter
retf
cdq
outs
sbb
das
push
xchg
(bad)
outs
push
dec
and
test
mov
push
xor
pop
and
(bad)
dec
mov
cmps
rcr
je
out
shl
cmp
xor
sti
jp
gs
and
daa
or
pop
clc
std
add
pop
aaa
adc
jge
cli
sub
clc
jnp
jg
pop
daa
fstp
fs
push
adc
pop
mov
pop
in
jle
mov
das
inc
push
mov
je
mov
pop
stos
jle
mov
dec
xchg
int3
jecxz
loope
adc
mov
inc
mov
mov
fmul
sub
clc
aas
aaa
sbb
mov
fdivr
shl
test
das
(bad)
mov
dec
pop
push
add
(bad)
fcomp
movs
rcl
inc
mov
imul
lock
and
popa
pop
leave
adc
jp
(bad)
adc
push
mov
xor
mov
pop
test
push
mov
call
popa
ss
pop
cmp
jge
pop
pop
test
aas
cmp
add
ror
fwait
std
stc
aam
dec
mov
test
icebp
data16
xchg
sbb
mov
mov
cmps
cmp
div
leave
mov
cmp
jg
je
adc
or
jns
jmp
sbb
cmp
sbb
mov
scas
mov
cmc
sbb
frstor
ret
jmp
pop
mov
jo
test
loope
and
mov
adc
sahf
stos
lods
jge
jle
popa
data16
mov
fbstp
jo
fild
pusha
cmp
jl
xor
mov
retw
push
fisubr
lods
imul
test
or
xor
mov
stc
inc
sub
push
dec
or
mov
xor
mov
and
jno
mov
jl
add
fs
fs
fnstcw
adc
mov
dec
sub
leave
sub
test
stos
and
outs
aas
pop
les
xor
popf
iret
mov
cmp
jns
retf
mov
cmp
(bad)
and
xor
sub
jmp
sub
je
test
mov
cmc
sbb
(bad)
xchg
lahf
dec
outs
mov
push
ret
pop
cmp
cmp
mov
(bad)
adc
mov
jbe
fs
jbe
jmp
and
rcr
(bad)
test
cmp
cmp
push
mov
ins
xlat
shr
and
add
fwait
inc
sbb
inc
jge
pop
mov
add
(bad)
ins
jns
movs
adc
xlat
stc
cwde
(bad)
stos
das
and
(bad)
mov
add
iret
das
(bad)
shl
idiv
inc
test
push
clc
cmps
dec
aaa
jle
daa
outs
jnp
(bad)
(bad)
mov
popa
inc
add
and
ror
daa
int
xor
div
ja
add
mov
sub
jp
sbb
inc
out
add
mov
and
rcl
scas
cli
retf
and
pop
sbb
mov
pop
lods
and
or
outs
push
jle
cld
jbe
jns
push
dec
mov
inc
aaa
push
jg
jl
xchg
xor
std
es
fidiv
sbb
adc
(bad)
cmp
fsubr
loopne
leave
ds
sbb
cmp
pusha
sbb
int3
add
ret
mov
mov
js
mov
inc
repnz
push
mov
mov
or
ror
pop
(bad)
aad
mov
jno
or
add
mov
shl
pop
stos
pop
jg
in
fs
mov
repnz
lock
mul
retf
call
mov
das
jl
leave
jl
xor
adc
sbb
lds
xor
sar
mov
jp
jne
adc
and
mov
clc
cld
xchg
mov
jne
es
cmp
sbb
dec
and
jg
add
pop
fdivr
mov
cwde
rcr
stc
retf
dec
jb
iret
xor
sar
les
scas
cmc
popf
cmps
je
aas
int
jecxz
pop
mov
and
not
fistp
cmp
add
xchg
out
sti
add
aas
and
mov
ins
xor
dec
cmp
jns
adc
es
fwait
pushf
das
pop
pop
xchg
shl
xor
jns
add
sti
fiadd
mov
pusha
jns
jo
and
cmp
hlt
push
pusha
pushf
movs
jo
shr
lahf
neg
xchg
add
mov
jo
jns
push
mov
pop
popf
sar
pop
adc
push
test
aas
div
dec
pop
out
jl
out
test
cmp
jno
mov
test
adc
push
mov
sbb
(bad)
loopne
test
pusha
mov
xchg
shr
pop
xor
sub
aas
out
pop
std
xchg
xchg
dec
and
out
ds
cwde
xchg
nop
ret
ror
jns
cli
movs
ins
cmp
xor
fldenv
ror
push
leave
cmp
popa
jo
add
add
shr
lods
or
xor
stc
cmp
mov
xchg
fstp
dec
or
and
and
(bad)
cmps
or
pop
pop
scas
lea
push
icebp
xor
sub
cmps
bound
jns
inc
je
rcl
or
jle
stos
add
ret
cdq
pop
pusha
fisubr
call
scas
dec
cmp
aad
xor
pusha
xor
out
sbb
add
fcomp
or
dec
aam
pop
add
mov
lahf
jge
sahf
movs
(bad)
fistp
push
loopne
mov
mov
nop
into
hlt
sti
test
sbb
and
mov
loop
xchg
pop
idiv
nop
xor
add
test
retf
hlt
mov
cmp
pushf
jb
push
sub
mov
jb
pop
jbe
dec
pop
jmp
out
pusha
adc
dec
pop
cmp
(bad)
daa
mov
push
out
xor
xchg
add
loop
inc
jp
push
pop
add
lock
movs
push
jns
jno
dec
mul
mov
xchg
sbb
pop
xchg
fmul
pop
popa
adc
cmp
scas
pop
aas
or
inc
dec
out
out
dec
stos
(bad)
call
jp
sub
xor
cmp
sbb
loopne
stos
push
push
mov
adc
pop
add
stc
mov
fs
pusha
xchg
mov
xor
or
and
popf
inc
pop
stc
sbb
lahf
stos
cmp
sbb
jmp
mov
adc
js
sub
js
js
sbb
add
push
ins
jmp
inc
xor
pop
loopne
cmps
and
(bad)
sbb
adc
mov
and
xchg
add
inc
cmp
test
adc
imul
test
mov
out
(bad)
gs
daa
push
mov
into
pop
dec
lock
pop
xor
into
add
xchg
(bad)
pusha
xor
test
pop
add
out
xor
(bad)
rol
comiss
mov
push
aam
call
jecxz
jnp
jmp
dec
or
test
scas
xchg
push
push
in
jl
inc
pop
cmp
lock
cmp
das
in
and
loope
fimul
addr16
jg
add
retf
adc
mov
fbld
jbe
and
scas
shr
or
movs
sbb
data16
ss
(bad)
pop
mov
rol
mov
jp
mov
mov
scas
mov
clc
cmp
sub
mov
sbb
sbb
xor
mov
cmp
pusha
jmp
fwait
or
cmp
stos
mov
sbb
es
out
ja
and
adc
faddp
pop
jp
lods
xchg
jo
in
mov
and
add
das
cmp
jns
sbb
jmp
inc
mov
xchg
mov
inc
sbb
adc
or
mov
ja
adc
add
mov
jo
iret
dec
sbb
dec
sbb
cld
cs
mov
mov
fadd
out
scas
cmp
sub
mov
aaa
fnstcw
sbb
xchg
mov
dec
dec
mov
mov
aas
aaa
pop
js
xchg
adc
adc
mov
clc
mov
hlt
push
push
fidiv
fwait
add
xchg
fisttp
sbb
jae
fistp
js
cmp
push
mov
sbb
mov
jg
or
sbb
iret
es
jp
addr16
es
mov
mov
pop
push
xlat
mov
xor
push
push
pop
xchg
jle
das
cli
mov
xor
mov
xor
outs
or
mov
arpl
jno
adc
pushf
mov
sub
inc
hlt
mov
jns
inc
ja
out
rcl
inc
jns
repz
jp
sahf
mov
dec
push
and
test
pop
push
out
clc
out
adc
(bad)
mov
sub
sbb
pop
enter
xchg
ror
cmp
and
dec
mov
mov
xchg
retf
enter
fisttp
stos
pop
jge
jle
push
sbb
(bad)
out
ins
sub
scas
xchg
rcr
sbb
xchg
xchg
pop
mov
add
and
cmp
popf
cli
ins
pop
jns
ror
popf
addr16
dec
dec
sar
movs
dec
loopne
dec
pop
cmps
dec
dec
mov
loopne
sub
ds
push
push
shr
add
jmp
mov
out
sub
or
retf
or
call
lods
mov
lea
xor
mov
and
mov
je
out
ins
je
jbe
jmp
pop
test
jp
hlt
mov
or
outs
das
xchg
sbb
xor
data16
fisub
and
adc
int
pop
sbb
cwde
sub
stc
popa
mov
mov
test
fstp
dec
dec
sub
ja
jno
xchg
fcom
ds
pop
ds
and
xor
xchg
mov
xor
lods
fwait
pusha
and
popf
xchg
cmps
push
scas
add
ret
dec
stc
pop
jns
sub
stos
jecxz
sti
call
or
or
je
jp
cmp
add
jmp
jo
popa
ret
xchg
(bad)
jp
mov
cs
mov
je
shl
data16
adc
shl
pop
lods
cmp
js
cli
test
lds
jp
cli
sbb
(bad)
push
js
fbstp
cmp
sbb
stos
das
add
push
mov
mov
jb
adc
jle
sbb
and
rcr
sbb
jnp
push
jecxz
pop
push
fwait
cmp
xchg
stc
scas
pop
pop
cmp
or
cmps
movs
mov
sub
jns
push
add
movs
mov
cs
mov
shl
mov
cld
daa
lahf
mov
fist
jecxz
imul
fdivr
test
xchg
or
jns
sub
sar
lock
jns
sahf
push
cwde
mul
mov
sub
mov
xor
lods
cmp
cmps
sub
aas
xor
hlt
addr16
leave
ins
xchg
rcr
daa
arpl
adc
aad
popf
test
sbb
mov
or
out
ss
or
dec
xchg
loopne
fwait
or
std
mov
ror
xor
out
gs
ficom
test
scas
or
xchg
call
test
leave
mov
dec
jp
fdiv
loopne
mov
fs
rcl
add
js
adc
ss
mov
mov
sbb
jmp
mov
dec
rcl
adc
out
out
cmp
dec
and
or
ror
clc
jne
daa
and
test
mov
popa
push
dec
mov
sbb
clc
xlat
ds
jp
sub
(bad)
addr16
loopne
out
aas
mov
jae
jnp
test
jb
dec
and
mov
scas
push
sbb
jge
dec
shr
mov
sub
xchg
dec
adc
push
xchg
popf
outs
jle
or
push
mov
into
nop
aaa
cmp
jns
mov
mov
lds
clc
jns
sbb
cmp
(bad)
jl
into
shr
dec
sub
mov
ret
popf
xchg
inc
and
fisub
sub
ds
pop
mov
add
test
stos
and
sub
xchg
out
push
jbe
mov
and
lods
dec
and
pushf
pop
mov
xor
push
xor
int
cld
and
shl
aas
fwait
jmp
pop
pop
mov
pop
sbb
ss
push
or
cmc
das
ret
add
rcl
sub
ss
scas
stos
lds
or
mov
ins
lods
clc
test
jo
popa
dec
out
push
lods
cmp
push
aam
outs
jno
sbb
lods
add
dec
rcr
xchg
pop
neg
cmp
js
adc
les
ja
dec
push
push
sub
jns
adc
sahf
arpl
in
adc
jbe
mov
adc
jmp
cmp
mov
aaa
or
jge
daa
inc
xchg
das
icebp
stos
ins
icebp
jno
(bad)
cmp
aas
xchg
popa
test
and
(bad)
pushf
cmp
push
jns
mov
push
adc
sbb
dec
mov
jno
or
sbb
and
enter
mul
shr
inc
scas
js
fidivr
mov
call
pop
mov
mov
mov
outs
pop
lods
jo
test
jg
scas
xchg
imul
pusha
sub
ds
ins
inc
sbb
add
mov
pop
jne
mov
mov
(bad)
xchg
std
pop
int
jmp
enter
or
cmp
dec
mov
daa
mov
inc
pop
mov
cmp
pop
jo
outs
or
popa
jno
lods
fcomp
arpl
repnz
jl
lods
outs
push
jbe
sbb
cmc
mov
ret
ds
das
jge
jne
cmp
retf
mov
fstp
mov
stos
popa
data16
push
xchg
pop
cdq
xchg
pushf
ret
dec
cmps
pop
fiadd
scas
pop
lods
mov
dec
xchg
pop
and
adc
mov
(bad)
sbb
rol
jbe
adc
pop
jnp
mov
ret
add
push
out
mov
imul
fwait
jmp
xor
cmp
push
cmp
pop
repz
add
iret
mov
loopne
adc
mov
jns
fs
xchg
sar
maskmovq
mov
mov
js
pushf
fisubr
pushf
ja
jns
cmp
cdq
dec
out
push
or
mov
xchg
js
movs
repz
push
mov
scas
dec
adc
mov
test
mov
cmc
in
fld
es
dec
icebp
jl
mov
dec
shl
stos
sbb
cmp
mov
aas
adc
mov
jle
jno
imul
lock
inc
outs
sbb
xchg
pop
or
sti
je
jno
mov
pop
stos
push
scas
fs
pop
push
add
ror
add
jecxz
mov
cmp
stos
pop
shr
jns
mov
push
xlat
mov
jl
mov
jns
lods
adc
lock
ds
push
jns
jmp
jge
inc
jp
mov
repnz
pusha
sbb
rcr
retf
sbb
inc
push
xchg
dec
xor
cwde
jne
ja
arpl
popf
push
das
out
popa
loopne
mov
jle
add
xchg
mov
fimul
xchg
arpl
test
mov
(bad)
sbb
outs
sbb
pop
jb
cmp
sub
aas
pop
test
clc
sub
fcmovb
add
cmps
imul
adc
lock
lea
push
sbb
jo
and
sub
retf
(bad)
addr16
ret
mov
xchg
and
dec
das
sbb
loop
aaa
mov
adc
mov
mov
sbb
xor
(bad)
nop
mov
xor
loop
(bad)
add
inc
int
mov
fidiv
push
push
jle
or
out
popf
push
adc
je
add
jo
ret
cwde
add
add
les
jno
test
mov
aam
jns
add
ins
repnz
xchg
icebp
scas
ja
and
pop
inc
sbb
iret
popf
lock
ret
test
aaa
loopne
ins
xor
(bad)
ss
sub
data16
ja
inc
jns
lock
xor
dec
retf
inc
ror
out
fldcw
repz
repz
loop
pusha
mov
test
mov
shl
adc
xor
xlat
test
sub
aas
iret
les
pop
or
inc
mov
ret
es
jnp
adc
or
cmp
aas
xor
mov
icebp
ds
mov
mov
push
push
stc
fcom
jns
sub
cmp
jb
mov
aam
aas
enter
cmp
mov
fs
out
ds
shl
push
pop
lahf
fwait
stc
cli
push
xchg
adc
enter
cmp
mov
pop
pop
sbb
call
jno
lods
fisttp
or
(bad)
mov
mov
jp
pusha
mov
xor
pusha
ins
cli
rol
mov
jo
xor
mov
cmp
sub
add
xchg
or
stos
xor
hlt
fidivr
lods
jno
loop
imul
cdq
and
mov
lods
push
out
mov
or
test
pop
out
call
nop
mov
jle
ds
stos
or
sar
stc
jg
xor
out
js
es
mov
pop
push
fidiv
mov
cmp
sbb
cmp
not
ja
shl
pop
pusha
cmp
cwde
sbb
and
cmp
xlat
fnstcw
ins
or
jge
aaa
pop
loopne
fdivr
cwde
ins
sbb
sub
inc
sbb
stos
push
loopne
jo
mov
add
xor
rcl
cmp
cmp
xor
fsub
loopne
fdivr
mov
mov
aas
jo
(bad)
pusha
cmp
cmp
pop
xor
fs
je
pop
sbb
aaa
xor
je
loopne
popw
sbb
mov
(bad)
sbb
dec
jp
sub
scas
cdq
imul
mov
mov
inc
push
fidiv
sbb
adc
fild
sub
cmp
and
pop
out
movs
rcr
out
arpl
mov
lock
cmp
xchg
sbb
aam
cmp
xchg
fstp
std
mov
or
push
cld
sbb
popf
mov
mov
mov
adc
sub
jp
pushf
pushf
push
js
cmp
fs
push
scas
mov
jnp
ins
not
test
add
rcl
fidiv
sub
inc
xor
sub
loope
nop
mov
into
js
fimul
sar
pushf
inc
cwde
adc
mov
loopne
cmp
adc
jecxz
sbb
mov
xchg
pop
and
shr
enter
xlat
aas
or
movs
clc
popf
call
loopne
sbb
pop
hlt
cmp
adc
jns
inc
cs
pop
pop
stc
adc
clc
ucomiss
jl
idiv
mov
stc
inc
mov
sar
loopne
mov
out
jle
cmp
es
fdivr
je
cmp
jp
lods
add
mov
dec
out
pop
call
leave
jg
lahf
inc
push
aad
cmps
dec
sub
out
or
and
loopne
mov
sub
push
adc
jns
jne
scas
jbe
jae
sbb
int3
popf
stos
pop
neg
fdivr
jle
push
(bad)
(bad)
fidiv
repz
rol
scas
movs
pop
xchg
mov
push
cmp
mov
adc
popf
daa
sar
icebp
mov
fldcw
xor
icebp
cmp
push
xchg
mov
pushf
and
inc
cmp
popa
adc
xor
ins
jno
push
and
fsub
and
daa
daa
push
test
push
(bad)
mov
jle
popf
pop
movs
inc
nop
and
call
mov
sbb
push
sbb
dec
cmp
mov
and
adc
xchg
scas
std
cs
xor
fnstcw
add
sub
and
ss
mov
retf
cmp
gs
shl
mov
test
cmp
popf
retf
pop
adc
jmp
ficomp
das
sbb
push
mov
data16
mov
js
adc
cmp
ins
and
or
cmp
inc
xor
jne
scas
pop
mov
stos
outs
arpl
lds
xor
jle
jge
inc
ret
dec
or
jecxz
mov
sub
adc
xor
mov
popa
dec
jns
jns
jp
adc
or
inc
push
dec
popa
push
adc
xor
je
xor
xor
je
jne
xor
imul
cdq
xor
ror
xchg
xchg
stos
dec
pop
pop
add
dec
ret
loop
(bad)
xchg
ds
pop
sti
inc
jle
ret
mov
jmp
and
dec
das
push
xor
ins
imul
ds
sti
xchg
xchg
(bad)
adc
pusha
retf
jp
shl
sbb
mov
fs
mov
mov
and
je
lods
imul
xor
arpl
sbb
add
inc
add
out
test
imul
pushf
and
and
sub
push
xchg
add
adc
into
(bad)
sbb
pop
pop
adc
imul
xchg
imul
jmp
sbb
ss
sahf
inc
data16
stos
mov
call
xchg
sbb
lods
push
adc
mov
adc
cmps
xor
and
rcl
xchg
mov
fidiv
pushf
xchg
popa
fst
push
adc
pop
jnp
dec
add
jp
mov
mov
pop
or
xor
fisttp
aas
pusha
cmp
sbb
movs
add
push
adc
cmp
cmp
mov
jns
mov
fcmove
(bad)
cwde
ins
adc
xchg
mov
div
cmp
mov
sbb
or
add
add
repz
inc
pop
and
push
(bad)
cli
cmp
adc
std
(bad)
gs
mov
addr16
or
iret
rol
mov
cmc
retf
mov
enter
cwde
int
xlat
aaa
imul
(bad)
pop
cmc
stos
inc
int3
ss
test
jo
out
xchg
and
adc
adc
mov
fsubr
or
adc
add
xchg
icebp
or
hlt
xchg
xchg
js
mov
lods
test
das
cmps
xor
jl
fwait
lods
add
adc
mov
ret
jmp
fsubr
xor
out
js
stc
loope
mov
xchg
add
cmps
dec
jns
dec
popa
data16
pusha
aam
jg
dec
shr
sbb
aas
or
pop
lods
xchg
adc
test
inc
xlat
jle
pop
dec
out
mov
lods
sbb
out
jp
jg
(bad)
imul
jb
cmp
jns
dec
xchg
idiv
dec
pop
push
fcomip
pop
out
mov
and
jg
jmp
fstp
mov
jns
outs
popa
fldenv
retf
popf
mov
leave
pop
lods
dec
push
rcr
(bad)
mov
jae
mov
push
pop
adc
push
shr
int3
ror
fisubr
push
arpl
loopne
jle
pop
and
lods
jne
ror
fst
sbb
int3
push
push
call
iret
stc
pop
movs
ins
jns
mov
pop
xor
daa
pop
fisttp
dec
cld
add
out
lea
dec
stc
dec
add
xor
stos
and
scas
shr
movs
test
jmp
jne
cmp
cmp
movs
js
sbb
fwait
push
into
(bad)
and
add
and
xchg
pop
and
xchg
add
aam
or
pop
ss
add
movs
pop
ins
cmp
jno
and
add
inc
lds
pop
sub
int
outs
or
or
popa
das
pop
or
sub
jnp
clc
pop
scas
inc
dec
cdq
cs
into
rcr
mov
push
mov
shl
pusha
pusha
scas
(bad)
cmp
ror
das
pop
test
aas
pop
or
jno
or
ss
fcom
jbe
fdivp
sub
inc
(bad)
or
outs
popa
mov
rcr
adc
inc
(bad)
or
mov
ins
mov
lods
push
(bad)
je
jns
pop
xor
xor
cvtpi2ps
cs
jae
test
dec
or
jbe
or
xchg
out
test
xchg
push
sub
dec
xor
xor
mov
rcr
xchg
dec
mov
add
loopne
lods
pop
mov
xor
cmp
jnp
mov
add
pop
push
neg
lea
mov
sbb
cmps
pop
std
aas
sahf
xor
popf
shl
dec
inc
aad
xor
cmps
sar
sbb
loopne
call
mov
push
pop
fwait
pop
xchg
sub
cld
test
cmp
jl
call
shr
int
inc
adc
dec
shr
jl
mov
dec
mov
int
cmp
or
inc
inc
adc
mov
jle
inc
inc
jns
ret
loope
mov
xor
mov
and
jge
ins
stc
clc
aas
mov
rcr
popf
cwde
outs
call
das
pop
outs
xor
jb
jp
cmp
punpckldq
or
sub
outs
dec
repz
into
call
cmp
popf
or
jmp
xchg
lock
push
pop
cld
or
retf
xchg
push
(bad)
mov
xor
or
pushf
ret
adc
xchg
and
lods
(bad)
push
loop
sbb
test
push
jmp
cld
ja
lods
cs
int3
fsubrp
adc
popf
mov
or
mov
daa
stos
pop
xor
sub
jbe
and
rcl
jmp
dec
addr16
mov
sub
jl
pusha
xor
call
div
addr16
xor
sbb
sub
imul
es
out
mov
jl
mov
cdq
jb
outs
js
in
mov
repnz
aaa
test
mov
xchg
scas
fs
movs
nop
data16
test
fiadd
shl
mov
or
cmps
cmp
xchg
pusha
adc
push
add
cmp
xchg
adc
adc
cmc
loopne
pop
mov
jmp
adc
push
sti
push
cmp
mov
fwait
mov
pop
retf
mov
cs
or
xchg
xchg
(bad)
lahf
pop
jecxz
xlat
cmp
mov
sub
mov
fwait
mov
leave
dec
sbb
pop
into
(bad)
add
daa
cmp
inc
addr16
mov
aaa
jns
mov
and
add
jno
cmp
std
xor
aad
fwait
mov
sahf
cmp
pop
es
sbb
sub
pop
push
push
fs
ret
jle
pushf
pop
xchg
pop
jle
pop
sub
ret
inc
leave
enter
imul
sar
jae
retf
rol
aaa
xchg
push
xor
sub
test
popa
scas
push
cmp
ss
imul
sti
sar
sub
test
hlt
or
mov
add
cmps
fidiv
mov
aam
gs
bndldx
sub
xor
xchg
lods
sbb
adc
lods
jno
pushf
fidiv
lods
or
pop
add
(bad)
rcl
cmp
and
jns
or
addr16
sti
add
jb
pop
xor
movs
mov
cmp
cli
cmp
inc
mov
sub
stos
cmps
fwait
sub
ss
out
inc
out
and
and
and
out
push
inc
cs
xor
fs
jmp
xchg
dec
mov
iret
push
stos
inc
adc
js
mov
std
mov
mov
mov
or
xor
sbb
jl
pop
xor
sub
pop
mov
jl
jmp
mov
jle
add
push
mov
fsubr
jmp
jg
loop
xchg
and
add
cmp
hlt
jg
scas
xchg
jmp
cmps
pop
and
cmp
dec
cs
mov
xor
adc
cmps
stos
jo
mov
mov
clc
xchg
inc
std
lea
mov
cmps
(bad)
fisttp
mov
bound
bound
xor
mov
jge
cmp
mov
xchg
sbb
or
dec
mov
popf
cwde
and
outs
mov
popa
mov
mov
push
xor
add
or
dec
cmp
sub
push
fnstenv
mov
mov
jl
pusha
call
jb
xor
stc
xchg
pop
int3
loop
rdmsr
loop
add
push
rcl
xor
out
jo
in
jecxz
push
and
mov
mov
cs
sub
sub
jo
dec
cmp
push
fs
sbb
and
loope
and
rol
(bad)
and
sar
ds
jge
or
adc
(bad)
and
sub
and
add
inc
push
loopne
xor
loopne
in
and
cmp
out
(bad)
daa
pop
popa
sub
mov
pusha
xor
rcr
jo
jge
shr
fnstcw
xlat
mov
dec
cmp
ins
pop
mov
mov
and
repz
push
cmp
mov
shl
stos
sbb
je
sub
mov
inc
xchg
jne
mov
xor
push
sub
jmp
loop
(bad)
xor
add
and
imul
pop
neg
mov
popf
mov
mov
cmp
jbe
add
icebp
or
dec
pop
pop
inc
adc
xlat
and
and
fst
push
popf
(bad)
jns
fild
and
jg
stc
sub
xor
sbb
mov
and
mov
fs
movs
pop
aaa
or
(bad)
in
int
retfw
sahf
iret
inc
xchg
push
aad
mov
mov
sub
mov
shl
push
push
dec
dec
aas
repnz
sub
add
or
scas
aad
push
pusha
or
cdq
fucom
aam
add
adc
sti
icebp
aas
lock
cmp
mov
push
cli
lahf
cmps
or
push
ins
adc
pop
js
(bad)
pop
ins
mov
test
cmp
stc
js
lahf
and
xchg
cdq
fnstcw
scas
call
and
fbld
xor
dec
sub
aam
mov
dec
sub
cmp
and
or
inc
sub
inc
push
mov
mov
int
adc
or
test
pop
jnp
jo
mov
jbe
and
rcl
mov
movs
iret
dec
popf
mov
mov
lea
ret
(bad)
mov
movs
pop
cld
pop
enter
jo
(bad)
cmp
jns
pop
jmp
sbb
push
dec
pop
push
lds
push
pusha
xchg
test
sub
in
add
sub
stc
mov
xchg
cmp
adc
and
xchg
mov
or
mov
aas
xchg
sbb
adc
sub
ds
mov
pusha
pop
test
arpl
dec
loope
jl
and
push
or
pop
mov
adc
addr16
xor
add
xor
push
ret
out
xchg
outs
ror
push
fbstp
fs
aas
shr
dec
sub
int
hlt
(bad)
not
and
(bad)
aas
pop
cmc
or
push
int
je
popf
movs
or
mov
test
adc
sbb
stos
xchg
mov
popf
push
sub
jmp
jno
jp
jmp
stos
push
or
pusha
dec
mov
jmp
stos
push
dec
mov
dec
dec
mov
xor
and
jb
and
or
push
mov
popf
push
sbb
sbb
ins
push
(bad)
daa
not
mov
push
add
jno
inc
mov
gs
lock
jp
jmp
sub
clc
loopne
jmp
jno
jp
jmp
stos
enter
xchg
ss
mov
mov
out
dec
mov
int
jg
mov
popf
add
(bad)
pop
aam
pop
ss
sbb
mov
xchg
les
mov
adc
push
sbb
ja
sbb
jns
pushf
add
lock
jmp
stos
imul
dec
fild
cs
pop
add
push
sbb
dec
mov
push
inc
stos
xchg
call
les
div
test
popf
push
sub
popf
(bad)
cmc
xchg
ret
jl
xchg
mov
push
mov
push
inc
mov
dec
add
push
icebp
stos
xchg
mov
popf
push
sbb
add
add
mov
shl
das
leave
jno
retf
lock
xchg
pop
sbb
(bad)
jno
pusha
das
push
and
add
neg
mov
inc
jge
jbe
mov
and
loopne
inc
mov
jns
mov
(bad)
mov
mov
leave
movs
add
loopne
inc
mov
pop
mov
mov
gs
and
iret
push
stos
mov
in
add
mov
aas
mov
sbb
push
xchg
jp
jbe
xchg
xchg
add
xchg
jp
neg
(bad)
retf
lock
jmp
sub
or
mov
fst
js
(bad)
stos
push
addr16
dec
adc
mov
outs
xor
pop
imul
fdiv
xchg
mov
mov
imul
imul
or
cmps
sbb
add
pop
add
mov
sbb
mov
popa
mov
mov
gs
dec
jmp
les
test
stos
(bad)
xor
mov
or
test
adc
fisttp
daa
add
cmp
sbb
mov
xchg
mov
mov
inc
xlat
stos
xchg
jl
inc
aas
jl
dec
push
add
add
jmp
sbb
loope
mov
fist
push
inc
push
mov
or
je
int
sbb
fdiv
pop
bound
jp
retf
lock
sub
sbb
mov
in
daa
in
mov
movs
adc
push
xchg
mov
stos
fild
jge
jbe
sbb
jno
sub
daa
out
loop
neg
add
repnz
add
jp
das
push
push
mov
fisttp
js
(bad)
sbb
add
ss
mov
mul
fcomp
and
fild
repnz
jl
repz
pop
(bad)
fistp
add
mov
mov
mov
jge
call
scas
aas
icebp
add
push
gs
fist
add
sbb
arpl
pop
mov
mov
jo
jo
je
or
xchg
pop
mov
aam
cmps
aas
adc
push
and
xchg
and
dec
sahf
cmp
aam
mov
stos
adc
xor
mov
jl
jmp
sub
jbe
lods
jnp
fistp
xor
es
cdq
das
xchg
xchg
js
mov
dec
scas
fwait
push
or
add
sub
sar
popa
xchg
outs
test
dec
(bad)
movs
test
mov
arpl
adc
je
(bad)
call
test
data16
aaa
aaa
jl
push
sbb
sub
xor
mov
out
mov
add
cmp
jbe
mov
and
das
and
repnz
aas
les
adc
repz
je
mov
(bad)
sar
jno
das
aaa
enter
sahf
rcl
mov
popf
push
cmp
inc
aam
xor
gs
or
cmps
and
imul
add
dec
mov
xchg
xchg
ins
or
push
test
or
ja
sub
cmps
mov
mov
sbb
adc
std
mov
jo
retf
rol
nop
ret
or
sti
dec
int
sbb
cwde
and
fwait
mov
add
or
or
sbb
daa
shr
test
sar
mov
out
xchg
and
out
adc
jbe
aad
jp
loope
dec
xor
loope
or
mov
inc
xor
call
sub
clc
xor
mov
jb
cmp
mov
rol
add
xchg
in
jo
aas
sub
jnp
sbb
(bad)
cmps
xchg
test
inc
shr
dec
ss
jns
jp
ja
into
sbb
dec
fstp
outs
out
cs
(bad)
sbb
push
pop
mov
push
popa
adc
pusha
sbb
scas
popf
mov
cmp
xor
leave
jo
dec
mov
cs
jl
jle
pushf
std
out
sub
sti
mov
outs
xlat
aaa
mov
cmp
pop
cs
xlat
and
jg
scas
xchg
jo
add
retf
scas
dec
mov
jns
js
into
xchg
pop
pop
pop
jmp
pop
lods
mov
clc
pop
sti
fld
mov
or
out
call
pop
sub
and
je
push
ds
push
mov
and
adc
pop
mov
sbb
shl
push
fld
lahf
xchg
cvttps2pi
or
xor
and
xchg
cmp
ror
mov
fisttp
adc
sub
popa
push
mov
jns
pop
neg
mov
xor
leave
(bad)
xor
ins
inc
xor
xchg
mov
adc
leave
pop
ss
and
inc
nop
xor
jns
retf
ja
xchg
adc
jno
retf
ror
jb
ins
pop
cld
or
mov
cmp
cmp
adc
fdiv
push
cmps
dec
mov
(bad)
stc
iret
sub
mov
dec
xchg
or
pop
pop
or
call
stos
aad
or
inc
sbb
sub
sar
push
xor
xchg
and
push
out
add
(bad)
adc
mov
jl
sar
std
or
call
stos
sti
cmp
jge
cmp
jnp
arpl
mov
call
jo
das
jecxz
fild
pop
shl
ds
pop
popa
scas
(bad)
ins
mov
sub
retf
aaa
jno
lahf
rcr
das
jg
pop
int3
xchg
and
fimul
aaa
jge
popa
pop
cdq
jmp
mov
das
movs
stos
mov
inc
sbb
xor
jns
sub
imul
into
pusha
push
inc
and
push
leave
push
mov
jbe
sbb
pop
dec
pusha
pop
out
xchg
or
cld
ins
shr
mov
out
push
mov
jb
cmp
pop
pop
dec
sbb
call
(bad)
movmskps
or
daa
cmp
jl
jnp
mov
test
sti
and
sbb
pop
adc
mov
sub
bound
jns
ret
push
fst
cld
xchg
mov
aas
xor
ins
sar
dec
std
fld
popa
mov
stos
mov
and
ja
mov
cs
mov
adc
sub
ds
repnz
test
or
in
xchg
push
push
lods
adc
xchg
jo
sbb
in
mov
adc
jg
cmp
mov
ss
jg
and
fisttp
or
jge
cmp
ror
fisubr
xchg
pop
popa
adc
xor
ja
and
das
ds
mov
in
jne
and
mov
push
mov
pop
pop
push
adc
dec
shr
jae
mov
adc
rcl
cli
ja
popa
xor
icebp
imul
sbb
xor
mov
pop
fnstcw
mul
jb
pusha
(bad)
icebp
push
xor
inc
leave
mov
mov
push
fwait
sbb
push
mov
and
mov
lock
leave
aam
xchg
jge
iret
mov
mov
lahf
push
sbb
aaa
loope
(bad)
cmp
rol
retf
and
mov
cmps
rcl
sub
sub
std
rcl
test
out
test
jns
aam
mov
aas
dec
stos
(bad)
lods
and
pop
pop
pop
in
inc
mov
jno
sub
inc
icebp
fdivr
pushf
push
and
inc
aas
test
ds
xor
and
push
lds
dec
retf
es
popa
sub
sbb
mov
shr
cli
cmp
outs
pusha
(bad)
out
gs
(bad)
(bad)
push
movs
and
(bad)
int
ins
pusha
push
add
nop
xor
jmp
xor
and
xchg
out
lods
or
pop
aam
shl
jge
das
stc
les
push
push
cmp
push
jb
push
inc
jnp
inc
cwde
call
ds
neg
hlt
mov
jg
sahf
mov
cmp
xor
(bad)
xor
lds
xchg
mov
and
aad
in
test
popf
pop
popf
or
icebp
call
mov
xor
call
das
cs
xchg
jg
or
and
loopne
scas
fdivr
mov
inc
pop
add
sub
fs
xlat
jmp
je
push
addr16
iret
faddp
sbb
adc
adc
mov
xor
jns
xchg
mov
cmp
add
imul
sub
jg
push
outs
dec
shr
pop
aaa
shl
shl
pop
inc
into
scas
jb
adc
or
inc
(bad)
(bad)
loop
sbb
mov
dec
jns
loope
or
mov
iret
push
pop
neg
xchg
mov
add
cli
adc
cs
push
pop
mov
stc
jnp
pop
pop
jo
jmp
stos
test
and
jbe
fst
aam
push
int
add
add
add
iret
xor
test
test
mov
or
inc
(bad)
stc
lods
call
or
cli
cmp
nop
cdq
out
and
mov
aaa
mov
js
xchg
push
sbb
sbb
jo
lods
mov
popf
or
ds
and
aad
aad
sub
jl
or
inc
aad
test
inc
test
enter
inc
and
out
mov
loope
adc
fwait
mov
es
rcl
icebp
cmp
xchg
arpl
popa
outs
adc
cmp
test
pop
cmp
sub
das
and
cmp
das
or
pusha
push
push
call
aam
aad
or
(bad)
test
out
call
pop
bound
cmp
jp
jle
div
int
mov
cdq
mov
das
test
mov
xor
inc
sub
push
loopne
jle
adc
sbb
js
adc
adc
jb
test
ror
fnstsw
adc
push
inc
addr16
(bad)
and
pop
mov
cli
test
mov
sub
cdq
mov
sbb
std
mov
jp
mov
push
cdq
imul
(bad)
fst
nop
inc
jge
cmp
cs
xchg
retf
jnp
push
fisubr
push
ss
loop
aad
dec
sbb
cmp
mov
mov
cmc
ds
or
push
enter
dec
lods
xchg
pusha
pop
stos
cmp
mov
aas
and
mov
dec
mov
pop
mov
dec
mov
mov
in
mov
fs
mov
(bad)
xchg
cmp
into
and
sbb
sbb
mov
sub
jecxz
mov
pop
sub
mov
mov
or
repnz
sbb
aaa
inc
inc
pop
(bad)
xor
icebp
inc
jge
lahf
push
aam
nop
pop
test
pop
sub
mov
pusha
enter
sub
daa
inc
pop
adc
cwde
aad
(bad)
imul
mov
sub
std
(bad)
xor
outs
fwait
adc
mov
jecxz
idiv
cmp
aam
scas
sub
mul
or
mov
in
sbb
ins
xchg
pop
and
mov
mov
dec
sub
mov
push
cmc
ficom
inc
in
pusha
push
cdq
frstor
das
jle
or
and
cmp
sbb
or
ret
cmp
mov
nop
fidiv
fcmovnbe
cmp
in
mov
es
mov
mov
je
jns
pop
push
scas
dec
cdq
and
retf
sub
rol
or
sbb
(bad)
push
ficom
mov
mov
sub
jo
mov
cmp
mov
sbb
or
xchg
jno
inc
shl
xchg
pop
and
cmp
pop
cmp
pop
mov
jle
push
pop
clc
aad
mov
and
nop
(bad)
cli
push
pop
pop
lds
call
inc
aas
push
sub
fst
ins
or
mov
out
xor
test
lds
call
mul
out
cmp
mov
enter
sub
test
push
js
mov
cmps
lods
jne
xchg
pminub
push
xor
aas
adc
pandn
in
xor
sub
jge
out
in
pop
popa
xor
fistp
inc
stos
ds
sar
in
pop
(bad)
xor
sar
mov
aam
push
push
jo
pop
test
jp
stos
xchg
jmp
push
test
outs
std
sbb
sub
aad
sbb
cmc
pop
les
enter
push
push
call
jns
jmp
mov
adc
retf
dec
fld
mov
out
pop
mov
fmul
test
push
cmp
cmp
nop
xchg
push
jge
push
test
loopne
pop
xor
test
int3
mov
pop
push
xor
jbe
jae
pop
movd
test
mov
sub
xor
sbb
(bad)
or
mov
ret
out
xchg
and
cwde
sbb
jmp
pop
jno
test
and
dec
jp
mov
pop
pop
xor
mov
ja
jne
mov
sbb
sub
push
bound
out
cmc
ficom
imul
xor
xchg
and
xchg
cmp
and
pop
aad
push
in
das
jge
sub
jmp
pop
jns
retf
data16
jbe
pop
fist
pop
sbb
enter
popa
sbb
jns
mov
sbb
jbe
add
cmp
push
(bad)
cmc
mov
pushf
mov
xchg
lods
sbb
push
ret
cmp
mov
jecxz
enter
jl
mov
xchg
sub
out
out
fld
imul
out
lods
jo
ss
imul
and
loop
mov
xchg
and
mov
fstp
popa
(bad)
shl
push
cs
fwait
mov
jo
and
(bad)
pop
inc
xchg
mul
cmps
pop
mov
cs
sahf
jbe
pop
rcl
mov
jnp
cmp
mov
cmp
dec
pop
fidiv
outs
or
jno
mov
dec
jbe
cs
fs
(bad)
stc
mov
icebp
out
push
dec
mov
mov
xor
jmp
mov
clc
out
mov
loop
cdq
mul
cmp
stos
ins
movs
cmp
jb
sahf
cmp
push
add
add
sbb
in
aas
loope
cmp
pop
jo
pop
mov
xchg
gs
dec
cmc
xor
mov
mov
enter
pop
add
(bad)
cmp
sbb
lea
push
inc
mov
rcl
out
mov
sbb
xchg
sbb
lock
cmp
repnz
dec
mov
sub
cwde
lahf
sbb
neg
cmp
add
adc
test
loop
mov
push
or
xor
sti
int
aas
mov
aas
gs
jle
push
push
jl
movs
sub
jecxz
pop
rol
pop
sbb
inc
mov
adc
popa
(bad)
lods
stos
into
dec
das
mov
xor
pop
cmp
xchg
(bad)
scas
aam
mov
mov
gs
xor
mov
(bad)
pop
cmps
clc
mov
cmp
add
jmp
test
or
xor
jle
ffreep
xor
or
mov
lock
mov
dec
icebp
and
and
mov
cmps
xor
aaa
pusha
sub
fwait
sbb
jge
add
adc
sub
pop
aas
add
sub
gs
pop
mov
or
arpl
ja
mov
mov
jns
xchg
imul
dec
jl
loop
stos
dec
movs
add
jbe
mov
xor
arpl
jb
es
or
sbb
scas
jge
jle
ja
mov
jns
push
js
(bad)
jnp
repnz
cli
scas
mov
cmp
cmp
clc
gs
pop
aas
mov
push
aad
lock
aad
out
xchg
sub
js
(bad)
loope
jae
mov
daa
fdiv
mov
sub
mov
pop
(bad)
repnz
ret
xchg
mov
jle
push
jae
jnp
js
sbb
js
add
fwait
out
sub
in
out
lea
add
pusha
mov
jp
(bad)
push
push
loopne
ja
mov
mov
retf
mov
xchg
mov
cmc
and
cmp
scas
or
pop
or
sti
cmps
stc
jecxz
jnp
popa
push
adc
lods
outs
(bad)
fsub
and
gs
mov
(bad)
test
arpl
mov
ret
rcl
sbb
add
sahf
sbb
push
mov
daa
mov
xchg
enter
and
imul
(bad)
and
pop
pop
xor
sub
lds
jae
(bad)
cmps
cwde
das
aaa
pop
mov
fld
push
popf
(bad)
lahf
lock
xchg
push
js
je
inc
push
lods
rcr
and
aaa
and
es
inc
(bad)
sbb
sbb
ins
js
stos
stc
cs
nop
xor
jecxz
lds
sub
mov
adc
enter
pusha
cwde
ror
inc
call
scas
dec
mov
push
adc
in
div
cmp
jb
je
into
mov
(bad)
fisttp
(bad)
mov
cmp
rcl
push
jg
pop
add
cmp
jno
pop
jmp
pusha
pop
sbb
xchg
jae
(bad)
cmp
fsub
xlat
push
push
loopne
jl
push
mov
je
popa
inc
push
mov
sub
cvtdq2ps
movs
(bad)
jecxz
repnz
sbb
repnz
popa
adc
or
jecxz
cmp
sbb
xchg
jns
hlt
jns
rcr
stc
lods
mov
ror
sbb
out
cwde
push
das
xchg
call
xchg
cmp
cdq
rol
stos
and
data16
stc
or
test
aad
fadd
jmp
xchg
movs
sbb
call
mov
jle
mov
cmp
mov
(bad)
das
push
adc
shl
pop
xchg
pop
adc
pop
mov
into
into
sub
sbb
je
(bad)
repnz
cs
ins
sar
xchg
mov
cmc
xchg
adc
xor
pop
in
jl
mov
cmps
ins
sbb
xchg
test
dec
cmp
jno
mov
lahf
popa
or
xchg
dec
or
jl
loope
jns
mov
inc
and
ins
pop
xor
sub
xchg
fs
xor
xor
(bad)
xor
addr16
jo
iret
gs
sub
jbe
outs
sbb
jg
jne
cs
dec
and
dec
and
scas
cdq
sar
mov
or
in
cmp
mov
std
ret
push
loope
mov
popa
mov
ds
mov
jo
push
popa
lds
jmp
stc
push
sbb
mov
js
xchg
cmp
pushf
sub
pop
sub
pop
mov
xor
(bad)
dec
mov
ss
cmp
ror
aad
popf
popa
popf
fs
retf
es
push
js
or
shl
jl
pop
cmp
adc
jns
mov
mov
jo
rcl
mov
out
sub
mov
in
fidivr
sbb
pop
mov
and
loope
jle
cmp
les
or
iret
pop
push
das
scas
xor
sbb
sub
mov
xor
popf
mov
pop
jo
sbb
mov
sbb
sti
sahf
in
dec
or
jo
cmp
mov
adc
cmp
mov
mov
inc
pop
bound
jo
aas
gs
cld
fsqrt
test
loope
xor
lds
stc
pop
push
jecxz
pop
call
fstp
loop
pushf
add
push
shl
push
ins
jge
loope
lea
xchg
jle
sbb
push
dec
xchg
cmp
jmp
(bad)
scas
inc
jmp
stos
xchg
enter
bswap
mov
sbb
retf
jns
mov
sub
sub
adc
sbb
adc
cld
call
js
mov
scas
aad
inc
ret
bound
je
jb
jmp
push
pop
xor
xor
addr16
dec
test
(bad)
add
xchg
call
jno
cmps
shr
shl
inc
popf
popf
ins
and
out
xor
pop
loope
je
das
sar
mov
mov
sub
icebp
sub
ret
fisubr
mov
inc
and
add
int3
rcr
ds
rcr
ins
mov
xchg
push
not
out
js
(bad)
mov
pusha
push
outs
int
call
and
push
scas
jg
push
jbe
and
push
je
pop
sar
jle
adc
test
push
cs
mov
nop
loopne
mov
or
jg
mov
xor
mov
sbb
and
cmp
std
xchg
std
dec
(bad)
jns
dec
pop
leave
popf
mov
dec
mov
clc
mov
adc
nop
sub
out
jns
cmp
and
cmp
iret
ja
mov
xor
out
dec
pop
xchg
cwde
rol
clc
xor
ret
mov
xchg
test
push
mov
test
popf
sbb
data16
clc
(bad)
mov
push
call
scas
(bad)
cs
and
and
dec
mov
dec
fistp
mov
aad
loope
dec
das
add
sar
out
aam
ss
loop
call
dec
fisubr
push
aaa
xor
out
push
test
je
lock
clc
fisttp
or
push
jecxz
cdq
clc
xor
mov
not
imul
pop
iret
lock
mov
cli
xchg
cmp
repnz
ret
pusha
add
cmps
call
xchg
sub
and
ds
push
and
push
pusha
pop
or
jo
dec
sub
mov
movs
sti
scas
inc
mov
jo
or
(bad)
pop
mov
jmp
mov
lahf
out
pop
test
divps
mov
mov
mov
rol
lods
dec
xor
int
into
jnp
xchg
pop
add
je
push
loop
inc
fst
mov
adc
out
jp
or
adc
mov
cmp
popa
pusha
cmp
sahf
popf
mov
fmul
stc
retf
outs
(bad)
fcomp
jo
stc
rcr
jg
sbb
xchg
lods
adc
pop
aaa
dec
push
out
div
scas
mov
and
cwde
cdq
pusha
jb
cdq
mov
xor
cmp
xlat
enter
popf
je
bound
mov
test
into
imul
aas
mov
sar
mov
xchg
xor
xor
les
cmps
stos
ins
ds
and
pop
jl
xor
ret
int3
fdivr
add
jge
xchg
out
(bad)
outs
test
xor
popf
out
inc
cmp
aad
pop
push
and
fld
and
jns
sbb
xor
imul
out
gs
mov
push
xchg
popw
pop
ins
jle
xor
jnp
xor
(bad)
shl
out
mov
and
(bad)
ds
push
mov
stos
sbb
jmp
xor
shl
add
jns
daa
add
mov
adc
ret
or
or
sbb
push
ins
(bad)
sti
mov
ret
and
jge
lahf
pcmpeqw
xor
cmp
sbb
xchg
arpl
jns
jns
xor
fs
pusha
push
bound
popa
dec
clc
fstp
mov
jo
xchg
sbb
rcr
mov
fdiv
push
call
stc
dec
cmp
and
test
push
fnstsw
jns
or
scas
sub
arpl
cmps
inc
cwde
fs
adc
cwde
movs
push
bound
mov
fidiv
test
mov
cmp
js
loope
mov
jne
mov
sar
js
pop
sbb
ins
jbe
(bad)
pop
sbb
cmp
add
add
adc
fidiv
shl
sar
cmp
rcr
mov
pop
aas
lods
test
fdiv
(bad)
out
pop
push
mov
pop
cmp
push
xor
int
mov
ins
leave
xchg
jg
sahf
xor
jl
jae
push
ds
inc
dec
ds
daa
loope
jle
mov
nop
jp
std
outs
test
neg
mov
mov
dec
pop
mov
addr16
sti
out
data16
dec
rcl
dec
jmp
inc
inc
(bad)
xchg
or
sub
push
sar
mov
sbb
popf
rol
sbb
xor
cmp
mov
imul
gs
jg
push
or
sbb
jl
add
add
jecxz
leave
xchg
and
inc
imul
fisub
repz
loopne
stos
xor
outs
neg
pop
pushf
clc
ror
and
mov
cmps
mov
push
out
popa
inc
repnz
cdq
popa
test
(bad)
cmp
xor
cmp
adc
mov
mov
test
mov
push
jae
cmc
xor
sahf
inc
mov
xchg
pop
add
add
dec
mov
or
mov
sti
lods
iret
aad
and
not
imul
fsub
adc
cdq
sub
mov
mov
xor
imul
push
xor
mov
push
cli
mov
rcl
mov
sahf
mov
stc
stos
push
push
fnstenv
loope
fild
dec
test
inc
push
jmp
sub
push
lods
push
dec
xor
pop
push
sub
pop
scas
imul
mov
push
jnp
cmp
xbegin
jnp
cmc
xor
bound
jle
lahf
adc
add
repnz
sub
add
mov
mov
jb
pop
leave
and
xchg
sbb
fcomp
mov
jno
rcl
push
pop
and
icebp
js
jbe
cmp
mov
aam
add
in
out
sbb
cmp
sub
scas
je
jbe
xor
fs
mov
icebp
sahf
adc
and
movs
push
nop
je
rcr
nop
ds
sub
popa
mov
adc
mov
push
lds
dec
lock
cli
pop
outs
mov
pop
jp
jns
rol
pop
xchg
sbb
xchg
sti
test
outs
mov
add
cmp
sub
fs
(bad)
xor
pop
dec
out
sbb
je
jl
push
imul
mov
xor
js
adc
push
pop
sbb
fnstenv
mov
ss
cmc
push
cs
push
loopne
cmp
sub
cmp
je
rcr
jmp
rol
or
lea
pusha
adc
xor
pop
cwde
fistp
icebp
mov
mov
xchg
mov
test
call
pop
xor
ins
pop
inc
fld
mov
xor
mov
repz
ds
in
xor
out
test
xor
pop
cwde
or
call
sub
mov
or
xchg
data16
fcom
sbb
call
ss
dec
inc
movs
pop
sbb
add
lahf
xor
fdivr
pushf
push
cmps
aam
jae
or
jmp
jno
xchg
dec
push
mov
nop
addr16
push
repnz
jle
pushf
jecxz
push
fwait
xchg
sbb
pop
inc
push
dec
jns
fs
ret
xchg
ret
dec
mov
pop
dec
mov
cmps
jno
cmp
xor
out
(bad)
repnz
fstp
cmp
hlt
mov
cs
movs
frstor
int
sbb
push
pop
dec
pop
lods
xor
aas
jmp
pop
mov
pop
cdq
test
mov
rcl
sbb
imul
fcompp
sub
adc
icebp
or
sub
dec
xchg
jg
mov
sbb
cmps
(bad)
sbb
cwde
or
aas
clc
pop
push
fld
cs
jno
xchg
xchg
jl
xor
aad
js
movs
popf
out
jmp
ds
pop
mov
jg
push
mov
sub
xor
adc
cdq
jg
leave
scas
cmp
nop
ds
adc
pusha
xchg
cmp
das
jmp
push
push
cmp
int3
pop
dec
je
test
push
popa
sahf
jp
sti
je
daa
outs
lea
stc
inc
inc
les
fsub
cmp
mov
sbb
pop
pand
mov
test
and
sub
in
sti
mov
fist
pop
pop
repz
dec
(bad)
mov
pop
jl
popa
cmc
jmp
jno
int3
inc
dec
inc
inc
jb
push
leave
js
cli
ret
scas
dec
(bad)
mov
test
adc
mov
fisub
arpl
mov
mov
jb
sbb
rcr
mov
pushf
fldenv
inc
outs
lods
sub
jg
jo
repz
mov
sti
loop
repz
mov
mov
mov
adc
xor
pushf
adc
stos
push
and
scas
adc
jno
mov
and
push
sub
stc
adc
test
shl
popf
fimul
or
add
(bad)
xlat
iret
leave
adc
push
popa
stos
mov
nop
add
loop
jno
scas
cmc
jecxz
dec
and
fucomi
mov
jle
jb
lahf
or
push
inc
adc
xor
pop
pusha
pop
nop
pop
(bad)
jp
(bad)
jo
dec
lahf
(bad)
leave
and
loope
sti
pushf
xchg
fnstenv
pop
jb
dec
and
mov
mov
aas
pop
sbb
pop
and
jl
sar
sbb
mov
or
pop
fs
femms
mov
movs
popf
cmps
out
ja
daa
push
mov
push
ret
sub
adc
lea
es
jmp
inc
jnp
fnstcw
mov
push
sub
dec
clc
outs
mov
test
adc
imul
imul
sbb
sub
inc
retf
sti
mov
push
cmps
call
scas
sbb
adc
mov
imul
cmps
sbb
push
sub
scas
jl
mov
mov
getsec
inc
push
repz
pop
mov
jno
xor
cmps
sub
fist
xor
push
mov
cmp
mov
popa
sbb
lds
mov
pop
clc
push
popf
lahf
jno
jbe
cld
fisubr
mov
push
jge
mov
push
jnp
jg
int3
push
dec
and
jno
mov
push
sbb
gs
sub
popa
and
fnstenv
mov
jl
je
call
pushf
pop
jbe
and
mov
ror
adc
sbb
cs
sbb
mov
and
push
or
or
fiadd
inc
and
sar
clc
mov
cmc
and
jle
pop
add
jb
mov
(bad)
mov
jmp
daa
mov
cmp
pop
jecxz
arpl
sbb
or
sub
test
ss
bound
mov
aam
add
push
push
test
out
mov
lods
call
jb
pop
dec
into
jmp
mov
fsqrt
push
sub
loopne
cli
mov
push
dec
stos
aam
pop
xchg
xor
aaa
add
icebp
jp
lods
pop
push
icebp
inc
js
inc
cwde
pop
push
lahf
and
mov
jmp
jno
mov
push
sbb
cwde
pop
mov
mov
mov
push
sbb
jmp
pop
jmp
sbb
dec
mov
ficom
lock
pop
xchg
sbb
call
pushf
pop
cmc
mul
push
lods
sub
sti
outs
push
add
aaa
pop
sar
cmc
popa
fs
lods
jp
rol
jp
sbb
out
pop
or
or
les
mov
js
pusha
xchg
jmp
add
scas
cli
mov
sbb
scas
fwait
imul
lock
imul
inc
daa
inc
sub
stc
sbb
dec
mov
fadd
jg
adc
inc
fidiv
sbb
add
xlat
mov
cwde
clc
out
rcr
xchg
aas
aad
popf
in
pushf
das
dec
sbb
das
inc
cdq
ja
nop
jg
sbb
in
sbb
iret
xlat
fcomp
xor
in
das
mov
xor
fninit
mov
sbb
mov
mov
jbe
jns
cmp
pusha
ficom
mov
sub
xchg
jl
dec
xchg
sbb
(bad)
stos
cs
sub
fs
fcompp
outs
sar
push
fmulp
call
adc
stos
retf
test
sub
pop
mov
mov
call
(bad)
fs
cld
sbb
xchg
ja
mov
jbe
unpcklps
pop
jbe
in
add
fimul
in
push
push
dec
mov
xchg
fisttp
mov
fcompp
pop
xchg
jno
mov
ds
js
mov
scas
push
das
fcom
pop
lea
mov
sbb
iret
sub
push
sub
jl
push
cmp
push
or
sbb
out
mov
out
xor
ja
xchg
xor
jae
aam
mov
push
adc
jo
fs
jns
dec
das
pop
(bad)
neg
scas
es
mov
jb
stos
call
jge
jmp
mov
cmp
into
loope
cmp
je
fs
call
sub
das
shr
ds
fidiv
aam
das
xchg
push
call
aas
and
xchg
cmp
xor
test
mov
push
sbb
fild
cs
xchg
cmp
cs
xchg
sti
mov
out
pop
push
jno
leave
lahf
lods
dec
dec
ins
sub
sahf
inc
xchg
out
jmp
sub
mov
lahf
xor
xchg
fistp
cld
jmp
jnp
xor
ja
scas
test
sub
cli
adc
aas
out
add
movs
push
inc
out
adc
cmps
movs
mov
mov
fld
movs
xchg
std
mov
push
les
sbb
sbb
shl
arpl
mov
cmp
out
inc
pop
xor
mov
popa
scas
add
or
mov
fld
aaa
add
sub
jno
mov
loop
cmp
popa
aas
retf
add
movs
or
pusha
jbe
stos
sbb
mov
mov
sub
mov
ins
sub
mov
sub
idiv
and
dec
or
jnp
jle
adc
js
dec
sbb
dec
outs
repnz
std
pop
test
ds
int3
jns
push
xor
dec
in
jle
fimul
fwait
push
cmp
pop
(bad)
addr16
sbb
mov
jnp
cmp
jl
and
xor
add
xchg
aas
out
push
sbb
iret
lods
sbb
jns
sbb
pop
fs
sub
sub
ret
repz
aas
repnz
sar
xor
mov
sbb
mov
xor
imul
xor
daa
jmp
jp
fbld
sahf
jge
pop
and
jbe
or
mov
push
repnz
stos
hlt
icebp
dec
adc
outs
xchg
cmp
pop
dec
arpl
arpl
cmp
and
pop
pop
out
cmp
stos
lahf
pop
sti
movs
pop
jmp
pop
jmp
mov
dec
es
jmp
xor
cs
push
cli
xchg
add
mov
into
in
pop
sub
lock
clc
fs
test
imul
loop
fs
call
arpl
cmps
mov
test
sub
retf
and
scas
ja
push
jl
ds
ja
push
sub
cli
push
sbb
mov
fimul
popf
push
pusha
popa
into
scas
xchg
outs
push
mov
lahf
movs
stc
dec
push
movs
mov
aas
inc
xor
sti
mov
nop
pop
sbb
rcr
jl
inc
mov
pop
test
mov
jle
mov
lods
loopne
mov
cmp
mov
int
(bad)
xor
lea
jne
cmp
sub
or
in
or
test
daa
and
mov
sub
ds
and
sti
test
out
push
out
lods
mov
push
cmp
dec
jbe
xor
xchg
lahf
aaa
sub
pushf
ins
jo
adc
test
xor
push
test
outs
mov
or
leave
popa
adc
pop
inc
in
mov
movs
ret
mov
sub
mov
std
shl
mov
jns
sub
cmp
mov
sbb
les
pop
adc
xor
mov
lods
cdq
call
inc
dec
xor
fidiv
div
fadd
mov
ret
aaa
push
jp
repz
add
xchg
test
lods
xchg
and
adc
and
xor
cmp
push
popa
mov
add
xchg
mov
add
rcl
jne
mov
sar
xchg
pop
rcl
jns
jbe
outs
mov
sub
or
outs
sub
pop
js
or
sti
xchg
outs
shr
fisubr
lods
xchg
mov
into
mov
push
push
push
mov
dec
jge
jo
mov
mov
imul
cmp
cli
and
icebp
xchg
dec
cld
mov
dec
mov
push
bound
cmp
jbe
fadd
into
(bad)
pop
fwait
xor
jbe
mov
test
add
and
sub
pusha
(bad)
jns
cmc
dec
and
add
out
(bad)
out
call
outs
(bad)
stos
push
popf
sti
call
mov
add
xchg
daa
lds
sub
push
ds
jns
lahf
mov
jo
mov
push
lods
or
add
(bad)
(bad)
(bad)
mov
shl
or
sbb
(bad)
into
sbb
cli
xchg
dec
mov
int3
aas
pop
movs
sub
jnp
mov
mov
xor
mov
fnstenv
xor
jg
add
into
ss
out
test
sub
stos
push
cmp
(bad)
sub
xor
add
add
adc
jle
rcl
push
in
push
repz
or
das
mov
cs
push
pop
push
jnp
push
or
sti
push
or
xor
out
mov
xchg
pop
aas
stc
repz
enter
jp
sbb
aas
test
push
sbb
fidiv
test
pop
ja
movs
shr
xchg
jg
adc
mov
jg
lods
cli
lahf
fmul
stc
push
fistp
xor
shl
jns
dec
jl
pop
dec
sahf
add
clc
pusha
mov
mov
add
sar
xor
jle
mov
test
sti
cmc
(bad)
push
push
and
fcmovbe
stos
mov
stos
mov
adc
pop
call
pop
iret
sub
mov
jnp
jns
call
test
xchg
stc
call
sub
dec
inc
jp
call
adc
jns
sbb
out
jecxz
popa
jmp
ins
cs
icebp
shl
dec
mov
lea
inc
inc
and
jae
cli
ja
jns
sub
mov
(bad)
out
dec
push
gs
test
dec
jbe
sahf
cs
sub
lock
xor
arpl
ss
jge
and
cli
test
aad
pop
and
xchg
inc
lahf
fs
and
(bad)
ret
push
jae
je
add
fwait
cmp
jp
lds
retf
jbe
and
or
cdq
cdq
xchg
add
in
adc
push
add
inc
and
leave
jo
out
movs
hlt
dec
add
retf
sbb
and
jle
in
mov
push
(bad)
fistp
mov
mov
xchg
mov
clc
xchg
mov
jmp
sub
and
mov
ror
test
dec
bound
sbb
test
movs
mov
movs
jbe
jle
cmp
xchg
sti
out
or
sbb
and
aad
and
or
nop
mov
shl
jle
sti
outs
stos
icebp
inc
fwait
test
dec
adc
js
cdq
cs
sub
ja
push
popa
adc
cmp
adc
clc
and
lods
test
mov
(bad)
fiadd
dec
mov
outs
outs
sub
xchg
call
dec
add
idiv
aaa
mov
sar
popf
pop
mov
in
or
in
outs
push
cdq
in
cdq
les
pop
es
jl
jno
cli
(bad)
xchg
test
(bad)
clc
push
out
cmps
jmp
sub
inc
xor
mov
jb
dec
inc
xor
popa
pusha
jns
jle
cmp
stc
das
or
cmp
int
push
mov
cmp
jno
jge
or
sbb
adc
mov
pop
loopne
leave
jge
jp
cmp
(bad)
pop
or
mov
jl
repnz
sub
and
loop
mov
pop
outs
ss
add
nop
fwait
gs
movs
push
push
icebp
addr16
pop
push
cdq
repnz
test
jl
xor
sbb
ret
xlat
sub
in
scas
mov
xor
xchg
add
ds
sbb
cwde
adc
out
fld
loopne
pop
jo
or
xchg
sar
sub
and
xor
mov
aam
adc
xchg
cld
cld
inc
std
jl
fdivr
aas
jo
cmp
lds
call
je
add
sar
mov
push
sub
sbb
pop
shl
mov
outs
scas
ins
xor
inc
or
and
mov
cmp
xchg
sbb
(bad)
mov
addr16
pop
outs
xchg
pusha
or
sti
sbb
cs
cmp
push
jl
ins
aaa
add
pop
test
dec
sbb
movs
cmps
cmp
dec
pop
fild
leave
into
jl
enter
fcomp
sub
mov
inc
fnsave
stc
sub
or
adc
iret
lods
adc
lods
pop
ret
mov
pop
(bad)
push
std
dec
jnp
out
jb
push
mov
fstp
test
sub
adc
cmp
sub
leave
adc
jns
xlat
popa
mov
popa
push
rcl
push
into
mov
sbb
xchg
adc
loope
shr
push
lea
add
leave
(bad)
icebp
dec
xor
fistp
popa
cmps
cmps
loop
mov
les
jle
scas
xor
ss
mov
add
mov
std
xlat
xchg
mov
stos
mov
jns
add
je
mov
test
inc
repnz
loope
mov
sbb
sar
aas
inc
adc
shr
fbld
mov
popa
xor
(bad)
mov
mov
pop
retf
jae
mov
aaa
enter
add
dec
ja
add
push
dec
ds
or
jns
jge
(bad)
or
add
lahf
aas
dec
jg
jb
push
and
mov
pusha
jbe
sub
retf
pop
(bad)
and
test
cmp
leave
jp
cmp
xor
mov
sti
jmp
adc
ds
jmp
xchg
repnz
push
stos
inc
mov
pusha
jle
sub
ret
pop
adc
cmp
cmp
fidivr
or
(bad)
fldenv
icebp
daa
mov
push
repz
pop
jns
jl
mov
int
js
(bad)
ja
cmp
pusha
jns
cwde
in
loopne
(bad)
cmp
push
sub
sar
int
ret
xchg
xor
cmp
lds
call
jl
fistp
xor
adc
fcom
sub
jns
sub
jle
mov
shl
outs
fcom
scas
inc
dec
les
inc
imul
loop
aaa
data16
std
sub
jl
or
movs
enter
add
xchg
dec
shl
outs
inc
adc
mov
jecxz
lea
sar
or
das
bswap
jae
xor
std
ja
sbb
outs
dec
jns
lds
je
shl
(bad)
adc
daa
dec
dec
daa
adc
inc
loopne
xchg
push
cs
xchg
dec
push
xor
mov
jo
arpl
mov
test
adc
out
mov
jl
adc
xchg
sbb
jns
dec
or
cmps
retf
pop
scas
arpl
test
push
dec
popf
dec
jmp
adc
sbb
test
xchg
int
ret
int
jg
js
adc
cmp
mov
inc
jmp
ds
xor
cs
mov
stos
jnp
fwait
cmp
out
test
and
mov
les
adc
sbb
aas
pop
pop
xor
imul
push
cmp
cmp
scas
js
mov
sbb
ds
adc
sbb
sbb
add
fcom
mov
sub
or
xchg
ins
push
add
std
cld
or
popa
push
push
shl
xor
scas
pop
pop
push
(bad)
jo
jb
cmp
enter
cmp
jle
jge
mov
pop
je
jo
mov
sbb
lods
or
popf
ds
pop
fs
enter
jle
sub
rcl
sbb
and
mov
pop
adc
das
imul
aaa
add
and
je
call
loopne
or
add
pop
scas
inc
shl
sbb
mov
dec
js
int
ss
xchg
into
sbb
jmp
or
test
mov
jns
lahf
cwde
popa
dec
push
and
lahf
cs
inc
aas
arpl
xlat
sbb
pop
pop
test
push
push
mov
fmul
and
mov
and
mov
ss
mov
and
or
add
adc
verr
mov
arpl
mov
hlt
call
pop
cs
mov
das
not
dec
sub
cmp
sbb
add
rcr
aaa
ret
sbb
cdq
daa
jnp
jl
jo
das
sub
sbb
and
push
and
inc
mov
addr16
test
xchg
js
push
xchg
into
je
mov
pop
xchg
xchg
jg
jmp
push
xchg
nop
mov
push
aad
out
(bad)
aaa
loop
fsubr
daa
mov
sub
cmp
cmp
sub
idiv
je
js
popf
aad
or
fs
pushf
jle
or
fprem
popf
push
jo
xchg
das
and
sbb
mov
jbe
and
pop
and
pop
add
loopne
jns
pop
lods
add
push
xlat
jecxz
fmul
mov
pop
enter
jnp
add
jle
xor
and
pop
inc
and
push
outs
pusha
fldenv
neg
push
and
cmp
rcr
jg
sbb
mov
sti
ror
(bad)
js
mov
pop
jno
jb
dec
and
cmp
int
popa
(bad)
loop
xor
mov
(bad)
lods
mov
push
adc
mov
sub
jg
jg
out
sbb
pop
and
mov
sbb
jge
xchg
fnsave
dec
scas
iret
ins
ds
fisttp
test
mov
ss
and
adc
xor
sbb
jno
xor
fisttp
sysenter
fild
out
daa
sub
mov
jns
jmp
les
cmp
xchg
mov
inc
push
xchg
shr
popf
inc
jo
imul
sar
pop
popa
mov
inc
sar
xchg
xchg
ds
pop
cmp
sub
int
xor
ja
rcr
sbb
mov
push
xor
cmps
sub
scas
mov
pushf
xlat
jo
jp
and
(bad)
xchg
cwde
out
lahf
daa
dec
mov
fistp
jne
xor
pusha
mov
and
(bad)
(bad)
(bad)
das
jbe
scas
popa
sahf
test
mov
popf
outs
shl
cmp
in
test
push
in
scas
xchg
xchg
adc
jl
mov
xor
and
jp
sub
sahf
daa
test
mov
mov
push
(bad)
cmps
loop
es
pop
pop
lahf
xor
inc
push
jno
nop
dec
iret
popf
xchg
rcr
inc
ss
int
inc
push
dec
dec
sahf
cmp
cmps
sub
inc
jmp
in
jno
out
cmps
ins
mov
popf
cwde
jo
xchg
mov
mov
ja
adc
stos
test
and
jb
adc
push
scas
add
repnz
add
mov
sub
inc
fsub
aas
shl
or
mov
iret
stos
xchg
xor
add
mov
mov
jno
pop
sbb
xor
popf
or
xor
jg
mov
(bad)
cmp
or
int
ss
sub
fistp
and
jns
and
mov
pusha
scas
ja
jns
les
mov
scas
push
dec
add
lahf
xchg
or
ficom
js
jo
arpl
mov
push
hlt
sub
or
xlat
fnstcw
adc
mov
and
enter
fisub
(bad)
cmp
mov
pusha
xchg
nop
repz
cmps
mov
xor
shr
mov
fs
sti
mov
jo
xor
aas
fxch
add
cmp
xor
call
icebp
aas
test
mov
pop
sub
sub
fsub
push
aas
das
or
stos
mov
push
push
inc
popf
aaa
arpl
fisub
jmp
xchg
sbb
daa
push
and
and
jl
adc
mov
loopne
scas
or
dec
mov
pop
cmp
enter
or
or
jne
xor
push
shl
outs
fistp
jne
xchg
cdq
fld
imul
idiv
js
fnsave
test
add
sbb
push
sar
std
imul
(bad)
jmp
call
dec
mov
lods
adc
push
(bad)
cmp
popa
mov
test
push
add
lahf
fidivr
inc
push
lods
mov
js
out
push
fwait
dec
sbb
fbld
pop
sbb
js
sbb
test
sbb
mov
add
or
cmp
inc
pop
cmps
jecxz
call
and
test
pusha
loopne
popa
sub
popf
and
in
push
cmp
test
dec
lahf
imul
sub
stc
shr
adc
xchg
push
loope
pop
sub
ret
sbb
or
and
mov
inc
fdivr
pusha
leave
cmps
cdq
add
aas
dec
test
jbe
out
popa
loop
ret
pop
xor
enter
push
and
mov
sbb
mov
call
sahf
mov
and
xor
jne
add
jbe
dec
dec
cld
pop
sbb
cmp
jo
les
push
icebp
addr16
sub
je
(bad)
mov
fild
aaa
lds
addr16
pop
jbe
cli
push
or
pop
into
daa
jns
mov
dec
jl
inc
and
out
jb
mov
daa
jle
jb
inc
push
mov
in
jl
pop
retf
fiadd
push
mov
aaa
movs
jns
rol
sub
jno
aas
std
sbb
xlat
jo
sbb
jns
jg
dec
sbb
mov
sub
cmp
imul
jnp
lds
jle
push
sbb
mov
mov
xchg
popa
(bad)
(bad)
mov
adc
ja
aaa
push
out
call
repnz
mov
hlt
mov
int
outs
add
cmp
adc
rol
test
jecxz
jb
pop
xor
jmp
jmp
popa
mov
sbb
int
sbb
mov
and
lea
dec
loope
jb
scas
jbe
or
sub
push
sbb
or
or
js
xor
add
les
or
ret
scas
mov
sbb
inc
jno
iret
test
retf
cmc
pop
js
(bad)
(bad)
push
rcr
push
dec
cs
loope
adc
addr16
cmp
and
hlt
ror
xchg
mov
jno
test
ins
sar
scas
cmp
loopne
aas
mov
movs
xor
push
lods
xchg
je
adc
cmp
jns
leave
jmp
cdq
cmp
sar
inc
cmps
mov
jmp
mov
add
dec
(bad)
fst
lods
and
enter
jno
cmp
es
aam
lock
lahf
sbb
data16
jp
jns
mov
inc
jle
sbb
outs
les
jo
aaa
jb
imul
pop
sub
iret
shr
push
div
adc
clc
pop
mov
mov
clc
lods
sahf
movs
dec
nop
div
pusha
cdq
idiv
xchg
out
mov
jmp
scas
push
jl
and
rcl
arpl
push
inc
cmp
and
mov
or
std
ja
mov
mov
enter
(bad)
gs
lahf
adc
mov
push
cmp
sub
lock
jnp
test
xchg
ds
mov
stos
fnstcw
sub
shl
das
lods
ins
and
pop
xor
mov
mov
pop
cli
lahf
mov
ret
mov
call
fstp
ds
xor
ins
shr
icebp
add
cmp
gs
add
loopne
and
rol
adc
xor
cmp
fild
dec
sub
cmps
loop
adc
xor
std
test
outs
ret
das
push
pop
maskmovq
neg
aas
popf
aaa
or
shr
icebp
inc
es
call
jns
add
dec
mov
daa
mov
fild
push
sub
js
lea
sub
and
cmc
adc
(bad)
fild
call
jno
das
stos
push
mov
jbe
dec
cdq
clc
shr
dec
loope
addr16
pop
add
mov
xchg
cmc
jp
scas
jb
sar
test
mov
shl
adc
pop
ds
jb
mov
out
mov
xchg
call
jb
push
test
sbb
dec
jmp
mov
retf
sub
std
mov
je
inc
into
push
addr16
ins
(bad)
mov
mov
fst
push
ds
ss
(bad)
pusha
or
lock
stc
add
retf
sbb
scas
xor
out
loopne
(bad)
pushf
pushf
ss
dec
movs
mov
jmp
or
jmp
fsub
add
pop
jl
add
(bad)
stos
xor
pop
das
push
popa
dec
add
mov
ds
cli
xor
xor
and
fwait
outs
call
scas
out
mov
out
test
jp
sub
pop
sbb
sbb
imul
mov
aas
fwait
pop
inc
sub
cmp
aad
jl
test
out
pop
sub
scas
bound
xor
out
into
js
mov
imul
into
mov
sbb
pop
int
sub
aas
push
xchg
adc
(bad)
imul
ins
sub
cli
jns
xchg
push
leave
xchg
leave
or
mov
add
lea
out
test
jmp
into
(bad)
fnstcw
add
into
into
sub
xchg
jo
jne
cmp
jns
jp
mov
cdq
push
add
push
xor
jo
in
mov
sub
ins
and
das
cmp
jae
test
ss
dec
jb
shl
xlat
ins
xchg
push
popa
push
je
pop
mov
sbb
mov
mov
aas
cli
enter
shr
mov
or
cmps
stos
dec
xchg
and
mov
push
jl
mov
call
loop
aaa
jl
xor
cmovb
push
imul
mov
lea
test
push
cmp
push
popa
adc
inc
add
lods
nop
cdq
(bad)
dec
cld
xor
stc
jns
rol
test
loop
jg
ss
enter
cmps
mov
mov
enter
sahf
cmp
fdiv
jle
mov
cmp
repnz
movs
js
js
test
or
sbb
into
pop
dec
sbb
leave
shl
repz
scas
lock
enter
loopne
dec
rcr
outs
mov
cs
inc
out
jne
stc
xor
int
sbb
mov
pusha
dec
dec
cmp
mov
xchg
clc
inc
add
(bad)
cmp
and
adc
push
mov
clc
aad
xchg
(bad)
je
(bad)
jo
mov
stc
jle
mov
inc
mov
loop
out
mov
test
out
(bad)
pop
clc
movs
push
imul
sub
aaa
and
fs
adc
(bad)
ss
jo
inc
pop
pop
push
sbb
jno
and
mov
enter
cmp
dec
int
inc
fild
js
or
mov
and
jo
sub
cmp
daa
daa
test
or
(bad)
sbb
push
push
pusha
aaa
mov
pusha
mov
lock
push
enter
cdq
das
daa
or
inc
xlat
sub
mov
mov
sbb
mov
mov
fld
inc
clc
popa
gs
shl
stos
fsub
cli
outs
test
outs
or
mul
lods
dec
pop
loopne
sbb
outs
test
sub
xchg
mov
dec
add
cmp
js
aas
push
les
adc
pop
test
push
inc
mov
fild
or
mov
jo
lods
sbb
add
aad
jb
js
mov
push
cmp
ret
cld
gs
mov
mov
inc
jno
sbb
cmc
push
enter
js
mov
stc
mov
stc
pop
(bad)
jno
mov
test
aaa
inc
clc
and
adc
cdq
sbb
pop
xor
add
sbb
adc
mov
lods
mov
jne
rol
push
ffreep
cmp
adc
mov
push
(bad)
ja
repz
jg
addr16
outs
shl
pop
stc
enter
in
out
div
jg
repz
mov
popf
js
jns
out
jae
ins
dec
sub
cmp
sti
lea
jge
sar
pop
jge
pop
aaa
pop
imul
and
cs
sbb
cmp
xchg
cli
rcl
sbb
xchg
mov
or
or
aam
or
adc
jl
cmp
inc
adc
aam
aaa
sbb
cdq
or
mov
push
jnp
cld
gs
xchg
lock
fdivr
sub
loopne
mov
push
or
pop
sub
pop
test
xor
dec
sub
push
div
fld
(bad)
adc
dec
nop
lock
es
xor
jns
mov
mov
dec
lea
xchg
fs
mov
add
fs
popa
stos
push
int
mov
mov
stos
add
ret
xchg
stos
push
jl
cmp
pop
cmc
mov
ret
jns
stos
lea
jl
cmp
lods
cmc
rcr
es
or
cmp
ins
mov
fld
mov
retf
mov
add
shl
jns
rol
popa
fnstenv
ret
push
sbb
(bad)
lahf
xor
jno
test
daa
mov
add
es
xor
and
xchg
pop
or
cmp
xchg
(bad)
mov
lds
gs
push
(bad)
jne
add
rcl
jecxz
fld
into
popf
rol
push
das
pop
popa
adc
mov
and
inc
cmp
dec
aas
cmp
dec
push
adc
je
ja
jns
bts
(bad)
(bad)
hlt
cmps
call
push
adc
mov
sbb
cmp
lahf
sti
ins
inc
inc
cmp
gs
ret
cs
dec
ret
mov
push
js
out
leave
pop
ja
mov
(bad)
push
xor
std
mov
push
xchg
inc
fisttp
adc
gs
cmp
je
mov
and
or
sbb
lahf
adc
sub
or
mov
mov
loopne
mov
xchg
inc
cmp
pusha
xchg
cli
shl
lahf
pop
mov
push
mov
sar
ja
mov
js
stos
push
lahf
jl
(bad)
aas
pushf
les
repnz
mov
fbld
movs
push
xchg
jnp
das
push
popf
retf
call
mov
pop
jns
test
sub
xchg
popf
scas
xchg
daa
ror
not
div
and
out
fisttp
pop
sar
jb
(bad)
stos
mov
mov
in
and
jbe
int3
mov
xor
pop
js
adc
inc
push
xor
xor
ins
nop
into
je
imul
sbb
lds
jne
or
pop
fs
sub
std
cwde
jns
pop
or
xor
(bad)
movs
xor
sub
imul
int
pop
sub
or
ss
test
cmc
sbb
addr16
inc
out
pop
or
mov
movs
sbb
das
adc
rcl
sahf
ja
cmp
mov
daa
gs
data16
mov
jbe
popa
dec
pop
sbb
das
xchg
push
fnsave
mov
add
mov
xchg
test
jl
ja
nop
or
sahf
fiadd
jb
inc
idiv
icebp
lds
adc
cmp
out
scas
cli
nop
mov
mov
mov
cmps
jg
nop
xor
lds
(bad)
xor
jp
mov
mov
cmp
jle
mov
or
cmp
push
add
cmc
data16
cwde
pusha
cmp
push
js
mov
cmp
pop
sbb
popf
add
jo
leave
and
sbb
jo
xlat
jmp
and
sub
hlt
(bad)
sbb
mov
fldcw
xor
push
inc
mov
pusha
jae
and
pop
pop
ds
xchg
sub
mov
mov
xchg
or
(bad)
sub
mov
cmp
not
xor
test
add
call
ja
jmp
leave
pop
out
push
mov
mov
test
xchg
and
gs
jne
shl
xor
push
ffree
mov
out
hlt
pop
cli
enter
sub
jns
dec
arpl
shl
popa
or
leave
pop
sbb
jmp
(bad)
out
sbb
pop
push
inc
jns
sbb
cmp
aaa
scas
mov
aad
sar
aas
sub
xchg
mov
jb
loope
xchg
adc
retf
and
cli
imul
dec
or
sub
jns
cmp
sub
popf
mov
dec
popa
in
mov
lahf
fbstp
js
dec
popa
add
sub
dec
in
shl
sub
and
test
ja
adc
hlt
scas
scas
mov
imul
mov
mov
data16
pop
clc
in
or
mov
mov
jo
fldcw
addr16
fst
jecxz
push
cli
and
adc
sbb
popa
mov
test
outs
jecxz
fsub
or
cs
push
jg
ss
ins
sbb
cmps
add
cmp
sub
es
addr16
push
in
pushf
mov
cmc
push
fwait
ror
pop
sub
test
ins
xor
cmp
dec
arpl
pop
popa
mov
push
inc
call
cmp
call
movs
dec
int
sub
nop
aas
into
jb
in
jle
dec
inc
sub
jle
mov
shr
popa
outs
or
adc
sti
loop
sub
dec
lds
or
pop
jle
xor
push
ret
adc
call
mov
into
test
mov
sbb
mov
sub
xchg
mov
int
cmp
pop
in
mov
xchg
sbb
dec
pop
cmp
fmul
mov
cmp
jg
inc
out
jmp
inc
jmp
rol
test
popa
cdq
fs
and
ins
mov
push
aad
arpl
jl
xor
inc
mov
(bad)
mov
pop
or
pop
adc
sub
cld
div
sbb
add
test
stos
ror
mov
pusha
or
dec
jnp
lods
nop
dec
or
sub
lea
shl
retf
push
sti
cdq
sub
dec
xor
jle
xor
loopne
jns
test
push
into
(bad)
cwde
retf
gs
sbb
in
jo
mov
inc
cli
xor
ficomp
xor
mov
xchg
arpl
int
inc
into
mov
mov
mov
sbb
push
pop
icebp
add
cmp
je
push
push
push
sub
addr16
push
xor
popa
rcr
movs
pop
ret
and
stc
stos
fs
(bad)
mov
es
in
das
out
adc
mov
jns
push
imul
mov
mov
test
(bad)
sub
or
stos
pop
aaa
repz
pusha
and
push
frstor
cs
xchg
addr16
test
pushf
aad
imul
jmp
mov
cdq
add
xchg
xchg
out
xchg
(bad)
sbb
pop
jmp
movs
xor
ja
scas
int
adc
or
addr16
stc
sbb
leave
and
(bad)
ffree
sub
out
nop
cdq
lods
xchg
adc
sbb
lods
jbe
fstp
mov
out
sub
test
test
inc
ins
jno
nop
(bad)
dec
cmp
or
xor
ja
scas
mov
push
gs
out
jnp
mov
push
ss
jmp
pop
out
dec
pop
loopne
sbb
mov
jl
pop
mov
sbb
mov
xchg
sti
pop
jno
push
ins
call
addr16
jne
mov
mov
out
(bad)
push
sbb
jmp
lock
dec
inc
sub
scas
push
jno
adc
add
jecxz
icebp
inc
xchg
(bad)
jl
mov
and
int3
sbb
push
xchg
adc
shr
sar
jg
jo
jmp
xchg
push
xchg
fadd
inc
jge
adc
mov
sub
mov
es
jl
cmc
dec
aaa
test
sbb
push
xchg
ins
jns
ja
dec
outs
mov
jle
jae
adc
mov
les
and
and
cdq
fisubr
and
inc
mov
mov
ret
cli
test
and
sbb
test
icebp
je
int
dec
data16
jecxz
cmp
mov
and
pusha
js
pop
xor
jmp
push
sbb
sub
cmp
(bad)
xor
push
fsub
in
dec
pop
aad
mov
sbb
test
mov
xor
ja
adc
jle
cmp
push
addr16
jl
nop
arpl
loop
xchg
gs
sub
lea
adc
sbb
stc
sbb
cmps
xlat
mov
mov
push
call
scas
sbb
mov
push
ror
mov
ss
and
sbb
repz
lds
aaa
push
cmp
sbb
inc
xor
call
dec
popf
cvttps2pi
cmp
mov
popa
or
out
mov
out
inc
int
lea
shr
sbb
dec
pop
xchg
outs
mov
jp
push
(bad)
cwde
das
fwait
xchg
ret
cmp
push
sub
push
or
cmp
test
jno
push
test
(bad)
jae
(bad)
clc
push
inc
shl
nop
pop
mov
out
inc
xor
loopne
push
jmp
pop
(bad)
test
sbb
fadd
(bad)
mov
dec
jmp
or
ins
enter
pop
cmp
sbb
sar
jle
aad
sbb
das
jbe
mov
sahf
scas
or
pop
push
mov
mov
das
pushf
push
ret
cmp
add
mov
push
mov
mov
or
adc
or
mov
cmp
or
daa
and
jmp
xchg
mov
es
aas
pop
es
push
call
mov
fst
in
xchg
data16
mov
dec
loopne
jl
xchg
fdiv
and
stos
arpl
sar
inc
mov
jge
adc
lahf
mov
pusha
push
gs
rcl
sub
sbb
div
cmp
shl
sbb
shl
test
xor
push
mov
add
jns
(bad)
hlt
test
clc
div
add
ins
push
lock
dec
adc
jg
(bad)
jmp
stc
adc
clc
cmp
fcmovb
pop
sbb
adc
bound
idiv
mov
push
sbb
mov
movs
and
idiv
loop
popf
es
jge
out
punpcklbw
ret
dec
out
lahf
sub
xchg
xchg
int3
jo
test
dec
cmp
xchg
sub
shl
js
scas
cs
das
daa
js
dec
popa
loopne
jmp
loope
inc
and
cmp
dec
cmp
loopne
jl
ja
sbb
fwait
cmps
mul
ins
pop
push
adc
sbb
push
test
es
call
adc
outs
cmps
lods
xchg
inc
aaa
outs
enter
(bad)
aam
rcr
jo
xor
jns
push
(bad)
sbb
mov
mov
pop
cli
mov
es
out
hlt
bound
shl
add
data16
push
popa
mov
sub
lods
mov
clc
dec
mov
mov
mov
stos
test
sub
jns
and
and
mov
mov
fild
hlt
and
sahf
adc
or
shl
cld
ret
nop
xor
sbb
int3
aad
fmulp
mov
loopne
fwait
test
aaa
or
lahf
(bad)
push
push
call
ins
cmp
xlat
out
test
lahf
adc
mov
mov
mov
jp
mov
jno
cwde
pop
ins
cmp
mov
outs
xor
repnz
pop
sub
xor
jmp
adc
(bad)
mul
repnz
std
xchg
xchg
(bad)
fidivr
mov
xchg
and
dec
cmp
icebp
cmp
fst
inc
jmp
movs
add
das
jo
cmp
popa
pop
popf
pop
sbb
push
jl
not
xor
scas
lahf
xchg
jp
and
jno
push
jl
lea
xor
mov
mov
mov
call
imul
jno
jl
jb
inc
idiv
hlt
and
dec
sub
emms
iret
ret
out
(bad)
lods
sub
mov
repz
jge
push
add
aas
mov
icebp
or
out
pusha
adc
lea
popf
pop
ds
mov
ss
rol
cdq
daa
call
push
xchg
mov
sbb
pop
pop
and
mov
sub
add
je
inc
add
mov
loopne
test
xchg
and
sti
jae
push
shl
mov
sbb
push
pusha
jecxz
mov
dec
dec
mov
ins
sub
sbb
mov
stos
mov
push
xchg
movs
cdq
mov
dec
mov
clc
sub
sbb
into
movs
bound
and
jns
xchg
fwait
push
sbb
pop
(bad)
cmp
or
cmp
lods
push
cdq
push
in
ins
popf
push
(bad)
or
sub
and
sbb
inc
rcl
xchg
push
xor
sub
mov
adc
icebp
xor
leave
cmp
ret
addr16
xor
div
cmps
xchg
jns
xor
mul
nop
repnz
div
loopne
sti
jl
sub
push
shl
or
ds
jns
or
(bad)
pop
mov
scas
test
dec
xchg
push
jl
popa
sar
cwde
hlt
mov
xchg
shl
xor
mov
jns
(bad)
jecxz
cmp
or
scas
xchg
movs
xor
enter
out
mov
retf
int3
ins
pop
rol
and
cmp
stc
xlat
arpl
(bad)
jo
js
fistp
or
and
cmp
test
adc
and
scas
aam
xor
jno
nop
sbb
mov
push
sahf
fwait
andnps
pop
or
mov
jp
or
in
ds
jle
ss
sbb
ja
fwait
xlat
mov
pushf
icebp
jo
jmp
jl
hlt
xacquire
nop
xchg
shr
cmp
xor
adc
scas
cmp
mov
inc
ret
data16
iret
xor
sti
das
sbb
push
nop
pop
cmp
js
jmp
inc
jno
mov
fdivr
mov
out
sbb
cld
lahf
add
ret
sbb
mov
cdq
adc
fnstcw
or
cld
push
(bad)
sar
and
add
xchg
mov
push
sbb
pop
xor
mov
xor
jo
xlat
push
es
mov
mov
popf
fs
mov
xchg
mov
in
mov
sub
idiv
xor
popf
mov
mov
es
pop
mov
movs
adc
in
shl
das
addr16
ins
cmp
or
sar
push
scas
or
xor
add
imul
adc
mov
pop
jp
pop
pop
jno
fs
retf
sub
shl
loopne
jg
test
leave
xchg
aam
mov
ins
sar
fwait
add
cmp
fldcw
cmp
mov
pop
pop
sbb
ins
leave
xor
or
jecxz
sbb
xchg
(bad)
jmp
mov
repz
cmp
sub
cdq
xchg
out
movs
xchg
xor
push
fild
mov
sti
sbb
sti
lock
(bad)
or
add
stc
sub
inc
jmp
cli
adc
icebp
popa
dec
or
loope
ins
or
in
adc
imul
and
stc
test
cmps
cmp
xchg
rcl
or
xor
clc
loope
stc
jg
add
popf
xor
cmp
rcr
inc
int
lock
loop
push
lock
mov
push
xor
mov
dec
js
addr16
pop
cdq
mov
ja
cmp
adc
rcl
arpl
cmp
jno
add
fs
or
pop
or
mov
out
xchg
mov
mov
aas
add
cmps
popf
pop
inc
lds
or
xchg
mov
pushf
mov
mov
int3
shl
mov
pusha
outs
pop
add
sub
mov
jmp
test
mov
dec
cdq
addr16
jmp
xor
push
es
xor
icebp
xor
test
sti
aaa
xor
iret
xor
xor
loopne
bound
imul
xchg
(bad)
fs
add
add
(bad)
std
cmc
outs
push
retf
lods
push
repz
mul
retf
je
fisubr
mov
lods
push
aad
pop
add
and
mov
leave
or
xor
je
ins
cmps
rdpmc
(bad)
push
leave
adc
xor
dec
scas
retf
xchg
sub
xor
loope
clc
test
cdq
cld
sahf
(bad)
pusha
bound
xor
jns
stc
sbb
add
pop
push
mov
shl
stc
push
xchg
mov
or
mov
scas
mov
scas
into
jbe
mov
sbb
xchg
push
int
jge
mov
push
mov
imul
enter
push
icebp
xor
sub
cmp
jg
pusha
cld
mov
mov
jmp
sbb
jne
ds
mov
add
or
add
mov
das
jmp
sub
int
addr16
inc
mov
mov
mov
lahf
in
fsubrp
sbb
pop
add
jns
addr16
out
idiv
sahf
out
cli
clc
fadd
push
xchg
dec
aam
xor
enter
rcr
pop
xor
inc
pop
push
mov
clc
cs
sbb
nop
scas
pop
cmps
cmp
xlat
pop
xchg
out
and
or
pusha
mov
into
daa
fmul
je
and
pop
mov
adc
repz
mov
lea
mov
cmc
jb
xor
cs
scas
mov
(bad)
xchg
and
mov
sti
and
test
popf
push
xor
push
clc
xor
das
rol
mov
push
or
scas
popa
or
mov
mov
data16
mov
push
jp
sub
pop
das
jle
push
clc
jle
push
sar
or
adc
jno
inc
in
movs
inc
adc
div
outs
mov
and
mov
(bad)
stos
adc
jp
(bad)
out
adc
shl
push
xchg
leave
inc
int3
pushf
sbb
sbb
cmp
in
cmp
jbe
dec
xchg
mov
push
fbstp
cmp
inc
das
sbb
ds
fcmovu
jne
adc
fmul
or
xchg
arpl
pop
push
leave
pop
sahf
neg
retf
fsubr
push
mov
ror
jo
jnp
stc
sbb
clc
jns
je
mov
jge
das
pop
imul
pop
mov
stc
sahf
xor
jl
or
scas
sbb
(bad)
mov
nop
inc
scas
pop
(bad)
jmp
dec
jno
aad
mov
xchg
out
and
test
jg
cwde
bound
push
mov
ret
clc
jns
int3
xor
jns
rcl
cmp
jg
cmp
test
push
mov
ins
neg
jnp
mov
(bad)
sbb
inc
mov
xor
sbb
mov
add
xchg
loop
stc
cmp
sti
jns
sub
sub
std
(bad)
in
xor
in
jmp
daa
mov
pop
xor
stc
jns
lods
mov
cld
xchg
jl
into
and
aad
xchg
pop
push
mov
aas
mov
mov
inc
sbb
addr16
and
and
ret
retf
cmp
mov
out
xchg
pop
ficom
arpl
push
and
imul
pop
xchg
mov
pop
pop
ds
loop
jg
pop
jge
dec
sar
inc
scas
cmp
xor
mov
nop
mov
and
dec
sub
outs
xor
pop
xchg
adc
jns
retf
cmp
xchg
les
cs
je
mov
pop
pop
std
popf
mov
cmp
xor
sbb
mov
sub
(bad)
in
jge
clc
xor
js
pop
out
pop
xor
nop
jmp
pop
mov
lods
or
inc
mov
les
and
ss
adc
popa
outs
xchg
imul
mov
je
push
or
jns
pop
sti
in
dec
sub
add
ss
xchg
sub
add
cs
push
push
sub
cli
scas
mov
je
dec
push
jo
scas
pop
(bad)
int3
scas
mov
mov
add
rcl
push
aad
ss
out
rcr
scas
jb
daa
inc
cmp
das
xchg
pop
sbb
mov
and
in
sub
sub
leave
pop
dec
retf
sbb
clc
jge
pusha
enterw
out
add
ror
sbb
xchg
fistp
add
mov
push
push
push
sbb
or
mov
push
popa
mov
sahf
adc
and
lock
or
push
xor
popf
icebp
sbb
div
dec
popf
dec
push
dec
or
test
popa
push
rcr
jns
jle
icebp
and
or
push
imul
sub
cmp
aad
jo
icebp
mov
jb
mov
sub
idiv
jmp
inc
dec
mov
pop
inc
sub
aaa
jo
jne
loopne
bound
xor
sub
fcmovnbe
test
cmp
push
add
inc
sar
xor
leave
jg
test
pop
clc
mov
mov
aas
xor
cmp
xchg
into
adc
dec
or
mov
dec
sbb
mov
xor
and
pop
pop
lahf
lock
cwde
(bad)
out
sbb
es
push
adc
dec
xor
and
push
or
popf
test
mov
mov
or
lods
xchg
stc
pop
je
xchg
ss
repz
and
jl
jae
(bad)
inc
sub
jg
push
or
jnp
sub
repnz
sub
dec
cmp
sahf
push
mov
cmc
fwait
sbb
sbb
jbe
or
mov
(bad)
xsave
push
xchg
pop
nop
cmp
xlat
imul
(bad)
loope
push
sub
cld
call
ss
daa
cmp
call
mov
xor
int
mov
ficomp
loop
push
sbb
into
mov
popf
and
test
mov
xchg
adc
or
pusha
pop
(bad)
frstor
pop
or
push
mov
scas
movs
sbb
adc
out
sahf
mov
sub
popa
mov
sub
xchg
movs
and
ins
das
push
pop
cdq
xchg
(bad)
ja
pop
adc
jg
sub
addr16
pop
inc
lahf
test
ret
bound
ror
aaa
test
push
pop
sub
dec
pop
push
shl
popa
out
mov
xchg
xchg
and
test
and
push
mov
pop
aaa
mov
test
sbb
mov
ins
fild
loopne
pop
(bad)
int
and
aaa
push
ss
pop
jns
lea
fistp
pop
das
add
test
and
and
xor
sbb
cmp
ja
sbb
mov
popf
mov
add
fstp
xor
addr16
jg
xchg
fcom
add
hlt
xor
jmp
adc
jne
shr
jae
dec
lds
add
out
sbb
add
push
xchg
mov
fdiv
mov
leave
mov
and
shl
out
dec
jmp
out
movups
pop
lods
jg
mov
sub
cld
rol
lods
cmp
rol
jnp
test
rol
pop
jge
sbb
out
push
sbb
sub
cmps
push
push
movs
sub
out
mov
inc
out
cdq
xchg
push
aas
cmp
cdq
and
outs
popa
dec
xor
popf
pop
fst
dec
test
mov
jno
add
retf
je
arpl
test
iret
sbb
jbe
add
mov
fnstsw
scas
cmp
adc
cmps
cli
adc
mov
(bad)
out
inc
sti
mov
mov
shl
inc
push
fistp
aas
(bad)
push
lods
fdiv
pushfw
mov
imul
cmp
out
gs
aas
cs
stos
clc
fs
add
fs
cwde
lahf
repz
inc
fsin
jmp
leave
dec
add
sub
jns
push
sub
outs
sub
es
ds
push
jbe
jae
std
call
inc
das
mov
aas
cmps
mov
outs
push
push
push
pushf
cmp
add
imul
sub
(bad)
dec
clc
inc
nop
inc
jp
jns
into
cmps
leave
ja
outs
sub
and
sub
ret
push
push
inc
cs
jg
mov
sbb
mov
out
stc
cwde
pusha
xor
adc
jge
mov
scas
(bad)
xor
jp
and
pop
pop
mov
adc
retf
cmc
loope
sub
push
xchg
cmps
mov
and
jmp
xor
cs
push
mov
fs
mov
jns
test
fwait
ret
pop
out
pop
xor
sbb
inc
mov
xchg
call
sub
sub
pop
data16
xchg
cmc
pop
sbb
add
jge
nop
jp
ja
je
rcl
lds
fadd
xchg
mov
mov
push
jle
mov
add
gs
push
(bad)
fisub
pushf
stc
ins
movs
pop
or
mov
mov
cmp
rol
mov
and
movs
push
jne
fsubr
call
(bad)
lods
fnstsw
and
(bad)
(bad)
addr16
test
pop
gs
arpl
pop
lods
mov
not
inc
call
cli
popf
pop
loopne
popaw
into
and
and
(bad)
sub
push
jns
mov
inc
call
dec
xchg
mov
pop
cmp
adc
ss
ja
adc
lock
inc
mov
mov
inc
or
(bad)
mov
pop
popf
sbb
xor
stc
stos
xlat
xchg
into
pushf
hlt
daa
push
cmp
loopne
cmp
in
mov
push
repz
add
aam
mov
stc
(bad)
lods
mov
lahf
shl
ins
hlt
nop
jg
fidivr
jp
xor
dec
sub
or
shl
je
pop
xor
icebp
add
leave
cs
cmp
jl
fs
int3
or
shl
dec
(bad)
mov
pop
lds
(bad)
in
lods
sti
cmps
ds
loop
das
ds
loope
xor
stos
sub
lds
sar
pop
pop
mov
jbe
scas
mov
mov
repz
popa
cmp
pusha
fmul
(bad)
jbe
std
cs
adc
and
call
ja
sahf
sbb
rcl
sbb
mov
xor
inc
ret
std
push
ds
xchg
inc
sahf
dec
hlt
pop
test
outs
pop
jp
xor
push
jmp
in
mov
mov
dec
jecxz
xchg
fisubr
rcl
xchg
pop
inc
and
rcl
call
jbe
pop
jl
fsub
or
lahf
or
test
js
dec
sbb
cdq
push
push
push
or
dec
(bad)
jmp
push
icebp
xchg
dec
cmp
sbb
in
leave
dec
xchg
lods
lods
movs
sub
addr16
(bad)
adc
adc
(bad)
mov
sub
xor
pop
and
add
add
movs
jl
sub
xchg
mov
pop
outs
jge
gs
xor
jo
mov
in
ss
cli
mov
aas
or
adc
cmp
mov
sub
push
les
and
add
add
inc
push
and
cmp
(bad)
pushf
std
inc
and
and
clc
(bad)
ds
call
cmp
jno
stos
jae
aaa
and
cmc
pop
pop
lock
ds
jle
jl
cs
mov
fwait
scas
imul
mov
inc
shl
aam
add
pusha
ins
adc
clc
mov
sbb
cmc
and
pop
stos
xor
stos
(bad)
xor
rcl
mov
test
popa
inc
imul
pop
fist
sbb
loop
xor
dec
mov
ja
aaa
sbb
adc
pop
xchg
pop
xchg
bound
(bad)
mov
aad
sub
outs
xlat
pop
call
or
push
sub
sub
push
xor
push
popf
pop
ins
dec
mov
scas
ror
lods
xchg
(bad)
or
xor
xor
fnstcw
pop
pop
jns
out
push
cwde
in
jae
push
pusha
push
retf
clc
fwait
jecxz
jg
ins
pop
out
cmp
xchg
xor
cmp
popf
cmc
mov
xchg
imul
jge
jo
popf
and
ds
(bad)
and
scas
and
rcr
pop
jmp
mov
ja
xchg
daa
hlt
push
iret
cli
lods
jmp
xor
jle
movsx
fsub
xor
jmp
loopne
aad
push
mov
jmp
mov
pop
dec
inc
sub
xor
int
mov
imul
(bad)
mov
mov
jo
xor
arpl
pop
pusha
out
and
out
mov
xor
retf
pop
das
push
outs
pusha
je
out
mov
mov
aaa
xchg
and
pusha
mov
int
or
pushf
inc
xor
add
add
and
(bad)
rcr
stos
cwde
sti
xchg
mov
pop
mov
or
jge
(bad)
jg
mov
pop
aas
sbb
jl
rcr
cmp
movs
jbe
add
ss
punpcklbw
loopne
jns
bound
mov
iret
es
lahf
stos
mov
pop
fs
dec
ss
in
iret
jbe
shl
sbb
cmps
sbb
out
push
xchg
pushf
mov
out
jg
das
test
leave
cmps
stos
push
inc
(bad)
cmp
sub
icebp
mov
xor
cmp
loope
les
(bad)
mov
push
mov
stos
mov
ins
(bad)
loop
pop
movs
imul
push
jl
pop
sub
leave
ror
jg
dec
repz
ins
mov
hlt
test
push
aam
cs
cmps
xor
or
dec
pop
sbb
dec
inc
arpl
sub
xchg
lods
bound
pop
lods
sbb
dec
dec
inc
mov
je
shl
test
fdivp
call
dec
pop
cmps
mov
pop
retf
inc
ins
mov
sub
adc
pop
inc
lock
sbb
xor
jl
(bad)
outs
mov
nop
ins
daa
(bad)
xor
sub
push
aaa
or
dec
sbb
jge
repnz
je
and
sbb
sub
sti
int
xchg
xor
jnp
das
(bad)
jle
rcr
js
icebp
movs
das
sub
sbb
frstor
push
jle
sbb
push
ja
mov
sub
mov
cmps
cld
(bad)
pop
push
adc
imul
shr
cmp
mov
or
(bad)
jg
cmps
adc
sbb
fldcw
pop
mov
fimul
adc
inc
pop
and
ror
add
mov
mov
inc
outs
xor
out
push
mov
jg
lahf
dec
ss
stc
mov
adc
cmp
sbb
loop
pop
cmp
adc
push
fild
add
cmp
test
fisub
lods
(bad)
jne
jb
pop
sub
les
mov
mov
pusha
pusha
rcr
and
call
lahf
push
jecxz
mov
push
jge
adc
ds
xchg
pop
idiv
test
sar
in
pop
mov
cmps
jae
push
push
mov
jge
pop
ret
adc
(bad)
call
jns
jbe
sti
imul
(bad)
add
jge
push
add
push
pop
mov
jge
das
cmp
push
jle
scas
cmp
stos
push
(bad)
mov
(bad)
lock
push
stc
xchg
jg
movs
daa
mov
cmp
adc
pusha
cmc
lahf
enter
imul
xchg
sub
sahf
pop
xor
mov
arpl
xchg
xor
push
shl
inc
mov
jns
and
and
cmps
les
aas
mov
jns
cmp
test
cs
fcomp
scas
jp
loopne
dec
sub
popa
push
in
je
sbb
outs
mov
sub
enter
inc
arpl
(bad)
jns
dec
xor
(bad)
aam
jg
aad
movs
sub
and
out
call
ds
in
stos
push
lahf
push
shr
push
idiv
jg
gs
push
add
pop
inc
jae
push
jae
int
es
mov
and
(bad)
data16
add
sub
xchg
and
mov
pop
or
pop
xor
out
(bad)
jmp
rcr
jecxz
test
sbb
test
dec
loopne
(bad)
push
icebp
push
mov
and
loope
or
sbb
ss
pushf
cs
or
daa
cmp
xchg
push
xor
push
sbb
cdq
mov
sbb
jnp
push
and
(bad)
xlat
adc
pop
sub
dec
lahf
data16
addr16
cmp
sbb
js
adc
mov
cmc
not
adc
or
mov
sbb
pushf
pushf
jbe
enter
not
jg
sbb
stc
pop
repnz
inc
mov
push
xchg
xchg
add
xor
sbb
inc
mov
cs
mov
jnp
cmp
jecxz
xchg
iret
inc
jmp
dec
push
sub
adc
or
(bad)
jne
pop
outs
xor
retf
(bad)
jo
jbe
int3
mov
es
popa
pop
push
mov
retf
es
push
dec
sbb
add
dec
dec
into
sub
cmps
nop
and
(bad)
sbb
dec
ja
push
push
ja
mov
sub
xor
pop
adc
aam
rol
jns
and
sbb
ds
je
mov
push
push
jbe
cwde
jl
mov
ficomp
movs
xor
or
xchg
inc
mul
sub
fcomp
add
mov
iret
sar
test
retf
cld
xor
mov
outs
push
push
out
mov
rcl
in
push
sbb
mul
push
pop
xchg
adc
mov
pushf
adc
mov
iret
int3
leave
aam
mov
cmp
pop
les
mov
pop
sbb
inc
xor
jmp
fstp
fs
movs
or
cmps
ret
mov
je
and
xchg
clc
pop
mov
mov
dec
fs
das
pushf
je
(bad)
popa
lock
sahf
fs
stc
xchg
cmps
mul
aaa
sbb
and
xor
hlt
xor
push
pop
repnz
push
jl
je
mov
cmp
stos
xchg
mov
out
popf
into
xchg
enter
xlat
aam
enter
rcl
push
outs
shl
push
mov
mov
jmp
daa
mov
mov
push
fcomp
popf
sbb
(bad)
cs
jge
ins
inc
out
mov
xchg
dec
jnp
mov
sub
cld
jmp
push
xchg
pop
jbe
fcomp
adc
div
repz
xor
inc
mov
cmp
lods
push
jge
xlat
add
pusha
push
jns
popa
mov
in
sahf
adc
scas
sub
jmp
sub
stc
xor
loope
and
ins
push
lock
sbb
shl
mov
and
repnz
call
push
fs
lds
pop
push
jb
mov
pop
pop
mov
sub
sub
adc
addr16
in
pop
jno
cwde
xor
icebp
xchg
inc
popa
js
mov
cmps
xor
neg
jns
dec
adc
sbb
cmp
cwde
xchg
lea
mov
push
adc
call
add
cmp
jno
add
pop
ins
sar
cwde
mov
lock
and
bound
jmp
pop
fs
sti
stos
xchg
movs
arpl
sub
or
fwait
jae
fnstcw
imul
mov
fdivr
xchg
out
push
ja
(bad)
jns
jbe
mov
adc
pop
mov
mov
xor
dec
dec
es
mov
pop
ins
pop
inc
xor
mov
jns
push
xor
inc
leave
pop
mov
xor
jle
cwde
dec
mov
mov
xchg
leave
lods
jbe
shl
std
outs
add
js
jmp
in
cmps
sub
popf
js
sbb
cmc
xchg
xor
test
add
xchg
mov
(bad)
and
cmp
xor
or
pop
sti
stos
xor
jb
sub
hlt
push
mov
jo
aas
test
push
aad
xlat
pusha
push
(bad)
mov
int
shl
add
lea
sar
mov
jmp
mov
push
fdivrp
adc
sbb
sub
out
cmp
jne
mov
xor
sar
leave
fild
pusha
daa
xor
(bad)
aaa
ins
mov
inc
adc
neg
in
ja
jle
loope
es
push
sbb
lds
loope
mov
popf
dec
ins
repz
stos
push
jg
adc
rol
or
cmp
or
sti
xor
inc
mov
aas
xor
lahf
and
and
xor
jge
xor
mov
repnz
leave
mov
pop
dec
(bad)
cdq
cmp
jg
cmp
inc
shr
cli
shr
mov
or
pop
push
mov
out
in
scas
xchg
adc
rcr
push
xchg
jge
jmp
movs
sbb
sti
rcr
cdq
pop
imul
sbb
mov
sbb
pop
inc
jo
stc
out
ror
push
jae
call
mov
stos
mov
js
jb
mov
sar
test
add
lods
and
jl
pop
xchg
push
aad
aas
adc
ds
xor
xor
cmp
jns
mov
mov
lds
push
xchg
mov
test
add
adc
or
daa
into
popf
push
fstp
loope
push
aaa
cmp
fs
shr
leave
mov
icebp
(bad)
cmp
mov
push
lock
push
inc
jmp
loope
cld
push
movs
jle
jae
jp
cmp
pop
iret
call
inc
cmp
call
loopne
lods
dec
mov
sub
sbb
pusha
daa
xor
push
pop
loopne
xchg
stos
ds
mov
sbb
test
mov
aas
sbb
icebp
outs
aad
push
fiadd
push
mov
push
pop
jb
mov
pushf
sub
aad
fild
mov
dec
adc
mov
xor
lds
pop
cmp
test
aad
or
ds
xor
mov
les
mov
mov
jle
push
movs
out
pushf
cmc
jmp
icebp
lea
xchg
dec
jge
pusha
es
xor
mov
or
jle
pop
sti
inc
add
fsubrp
mov
cdq
pusha
popf
js
mov
mov
and
or
outs
sbb
and
fisub
mov
js
dec
jo
pop
pop
mov
rcl
add
sbb
sub
xchg
adc
repnz
mov
loopne
rcr
xor
ins
fldcw
mov
sub
rcr
test
popf
fst
push
mov
mov
inc
sbb
scas
loopne
(bad)
pop
sti
outs
mov
aad
ret
sub
xchg
popf
out
adc
(bad)
mov
jns
xor
into
jl
push
or
xchg
or
mov
mov
jne
daa
inc
psadbw
pusha
in
nop
adc
scas
and
mov
inc
jg
mov
pop
push
pshufw
xor
push
push
fwait
shl
xor
push
mov
in
xor
leave
mov
jo
int
adc
jg
lea
cwde
jl
xor
mov
out
sub
loopne
xlat
push
cmp
pop
and
pusha
xchg
lds
movs
outs
or
test
mov
pop
into
imul
in
pop
shr
cmp
mov
cmp
sti
bound
out
mov
das
ret
inc
mov
jbe
jge
cmp
call
test
js
inc
scas
jb
ror
inc
add
sub
inc
adc
sub
test
arpl
call
sub
movs
out
pop
push
mov
xchg
dec
cmp
pop
pop
cwde
loop
sub
cs
push
adc
ins
ins
bound
push
addr16
mov
dec
push
sbb
adc
out
jo
fldenv
mov
popf
aas
sub
xadd
shr
and
push
(bad)
mov
or
mov
push
ins
push
mov
xchg
sub
fcmovb
out
adc
(bad)
mov
(bad)
aas
sahf
dec
adc
sahf
dec
push
mov
popa
xchg
sbb
push
sti
mul
mov
sbb
cmps
dec
jg
cmps
xor
test
mov
fst
bound
mov
out
icebp
mov
xchg
mov
mov
sti
jnp
sub
test
jmp
push
out
cmp
sbb
mov
cmp
ds
jge
popf
or
pop
out
sub
mov
dec
pop
cmp
js
pusha
dec
or
cmps
int
mov
bswap
cmp
cld
fs
mov
push
mov
aas
cmp
push
push
pushf
xor
out
mov
sub
jno
popa
rol
(bad)
in
sub
mov
add
mov
xchg
outs
mov
out
dec
js
and
cli
jg
popa
in
push
aas
sti
xchg
lea
jnp
push
inc
and
add
retw
mov
jecxz
clc
xchg
(bad)
dec
aas
mov
(bad)
mov
xchg
into
retf
outs
das
outs
xor
stc
pusha
pop
adc
or
aam
pop
adc
addr16
ins
test
stc
aam
popa
dec
sbb
test
sar
and
fcom
out
sbb
out
pop
les
lahf
sub
cli
popa
int3
sub
addr16
and
xchg
shr
ins
daa
es
mov
push
out
(bad)
mov
adc
cmp
or
fwait
stos
mov
pusha
xor
daa
jns
int3
mov
fsubr
xor
xor
in
mov
mov
mov
shl
mov
pusha
sub
pop
leave
rcr
js
stc
js
ins
cmp
daa
dec
mov
retf
mov
loope
jns
repnz
outs
ds
cmp
loope
jp
mov
shr
cmc
xor
jg
mov
jns
(bad)
mov
scas
or
test
jno
inc
inc
(bad)
jae
push
stos
or
sar
mov
xlat
sbb
mov
dec
xor
je
rcr
fs
stc
sub
pusha
retf
sbb
sub
aas
je
dec
clc
mov
(bad)
aas
mov
cmp
cmp
add
xor
loope
outs
xchg
pop
clc
ret
push
add
xor
or
push
push
mov
ins
mov
xor
pop
inc
cmp
and
(bad)
cmp
cdq
cmc
lahf
and
mov
cmps
(bad)
xchg
enter
fisubr
xor
pop
jns
mov
cdq
popa
pop
jne
leave
add
aam
movs
dec
test
push
jns
popf
int
cmp
ret
call
mov
test
out
add
or
dec
not
repz
cmp
dec
(bad)
cmps
or
push
cmp
cmps
lods
test
scas
and
fcmovu
push
mov
pop
lods
sbb
jb
sub
ds
mov
shl
inc
test
int3
mov
out
jl
stc
fbstp
jno
fxch
pop
arpl
push
das
outs
adc
ja
js
push
shl
std
jb
or
bound
jle
pop
add
sbb
push
jns
fld
lods
push
ror
or
out
dec
js
js
xor
dec
sub
rcl
rol
shl
sub
push
stos
pop
mov
mov
adc
shr
mov
stos
and
outs
mov
jg
sbb
call
and
lods
js
push
cmp
addr16
popa
push
mov
push
out
fst
xchg
push
inc
int
push
fnsave
cmc
out
out
pop
lods
nop
rcl
mov
mov
fs
pop
cli
data16
sbb
sbb
lea
push
sub
iret
aaa
jo
push
cmp
xchg
xor
shr
pop
sbb
scas
mov
in
(bad)
sti
xor
arpl
adc
cmp
(bad)
xchg
hlt
jbe
jb
cs
xchg
sbb
mov
push
dec
repnz
mov
mov
jb
ins
xor
and
mov
jmp
ss
or
loopne
cmp
jnp
jl
jg
(bad)
jns
mov
xchg
mov
je
(bad)
int
movs
retf
xor
sub
mov
shr
shl
ds
pop
lods
lods
mov
lock
sub
stc
xor
icebp
jl
dec
mov
pop
fst
repz
jne
jns
push
loopne
push
adc
sub
jno
ins
xlat
push
aam
cdq
pusha
mov
cs
test
test
pop
xchg
ins
and
jge
lds
sbb
jle
push
pusha
out
dec
inc
lea
call
nop
mov
or
mov
or
inc
in
cmp
cmp
adc
cmp
mov
sbb
dec
hlt
inc
rcl
pusha
mov
(bad)
aad
add
cld
inc
retf
dec
dec
ret
xor
mov
mov
jno
leave
adc
or
jle
cmp
cmc
jmp
add
push
mov
ror
fcmovnbe
jne
cmp
out
add
pop
pop
mov
mov
xor
sbb
cmc
scas
or
std
dec
lods
cmp
jns
bound
call
(bad)
dec
cmp
or
xor
sbb
xor
shr
sti
lds
push
xor
adc
xor
push
cld
ja
sub
call
push
fist
outs
cli
bound
das
mov
ja
lods
cmp
adc
xchg
fdiv
sbb
loopne
fild
cmps
call
fild
adc
mov
(bad)
pusha
ficom
jle
jbe
jp
js
clc
sub
sbb
mov
mov
scas
inc
pop
xchg
(bad)
mov
sub
(bad)
fidiv
or
ds
repnz
and
or
adc
mov
loopne
jno
(bad)
rcl
fstp
jae
aad
cld
jae
clc
push
mov
adc
push
out
movs
dec
popf
lods
sub
(bad)
fisubr
pusha
sbb
loop
or
xor
int
xor
fisub
bound
jnp
shl
stc
int
nop
sbb
add
xor
ss
pusha
call
outs
adc
pop
lds
das
pop
loopne
xchg
jae
dec
je
pop
push
and
pusha
sbb
mov
fs
adc
dec
add
add
test
adc
and
out
cmp
ss
inc
hlt
ss
pop
dec
or
mov
retf
stos
dec
sbb
rcr
mov
nop
xor
in
push
push
sbb
ss
jne
adc
popa
aaa
(bad)
cmp
mov
adc
push
and
loopne
pusha
leave
ss
test
push
mov
push
js
add
pusha
mov
das
xchg
and
inc
push
scas
das
scas
mov
into
shl
mov
jge
jo
xor
stc
xchg
mov
mov
sahf
xlat
shr
sub
popf
sbb
sub
(bad)
jecxz
scas
sbb
jo
aad
cmp
pop
mov
or
scas
lahf
mov
movs
cs
out
sar
clc
paddd
fnstenv
cwde
nop
sbb
mov
popa
lock
mov
sub
sbb
pop
out
cwde
out
pop
popf
loope
dec
sub
pop
or
sbb
inc
out
xor
rsm
outs
ins
xor
pop
scas
push
push
adc
mov
inc
and
stc
addps
adc
test
mov
push
shl
inc
repnz
xor
in
fst
cmp
out
out
mov
popa
outs
pop
sbb
mov
cmp
and
pusha
push
dec
jecxz
std
popa
jp
xchg
mov
mov
pop
les
jge
jns
imul
or
or
scas
shr
push
push
mov
jmp
jge
lahf
push
add
pop
(bad)
out
and
inc
pop
ret
push
imul
js
pushf
add
jp
mov
sti
(bad)
mov
aaa
or
inc
pop
xor
mov
(bad)
jp
mov
mov
in
in
pop
xchg
mov
sahf
sbb
cmp
and
jb
sbb
pusha
add
aas
lea
jno
icebp
int
pop
xor
outs
lock
jb
and
aad
inc
jo
sub
ins
test
jecxz
lahf
jo
idiv
js
xchg
cdq
mov
lods
add
repz
or
ret
push
cs
add
stos
jg
push
jno
es
out
xchg
push
adc
add
ds
sub
mov
and
add
jns
pop
or
cmp
jg
popa
in
pop
or
or
jns
popf
dec
sbb
dec
popa
adc
xchg
lahf
ret
(bad)
repnz
push
sub
pop
sbb
or
mov
js
push
das
and
pop
sahf
xor
es
scas
clc
ds
ja
sub
test
jmp
rol
jbe
adc
add
jl
test
jecxz
fcmovne
lahf
xchg
cwde
mov
stc
mov
mov
mov
sar
add
je
ret
dec
adc
cdq
jge
test
clc
mov
fistp
aam
fisttp
and
xchg
call
(bad)
pushf
push
inc
add
and
out
jmp
jl
sub
ins
loop
sbb
xchg
jmp
ins
mov
mov
leave
call
mov
sbb
daa
das
test
and
mov
das
cs
push
mov
ins
pop
add
addr16
jp
xor
push
cmp
sub
(bad)
jge
mov
sbb
(bad)
and
mov
push
pop
pop
outs
push
push
aad
xchg
retf
sub
jb
jne
mov
and
popa
and
cmp
into
sbb
inc
fcompp
push
mov
pop
lahf
ja
call
and
jnp
movs
sbb
scas
push
inc
or
add
popa
repz
mov
sub
add
out
mov
push
dec
cli
lods
inc
ret
ficomp
push
xor
xchg
sub
mov
js
pop
(bad)
mov
inc
pop
xchg
or
push
mov
pusha
and
stos
push
mov
xchg
(bad)
call
ret
test
push
leave
cdq
outs
(bad)
jns
fcomi
dec
shl
pop
push
jg
pop
inc
mov
addr16
loopne
clc
mov
in
stc
inc
pop
xor
pop
mov
cmp
pop
sub
and
cld
fstp
jo
xor
cmp
stos
imul
test
popf
dec
fnstcw
repnz
jge
dec
mov
sar
aas
add
inc
xrelease
nop
shl
int3
xchg
and
rcl
and
aad
leave
repz
sbb
mov
je
sbb
fs
xchg
mov
cmps
pusha
mov
stos
add
dec
lods
add
mov
pop
mov
jl
mov
nop
push
mov
push
mov
fabs
int3
fs
xor
sub
push
(bad)
pop
aaa
jns
jb
enter
mov
mov
inc
loopne
jbe
adc
pop
sbb
inc
ficom
loopne
adc
cmp
cs
jl
sbb
inc
aaa
sahf
das
out
jo
mov
(bad)
call
sub
xor
mov
add
dec
mov
pop
fisubr
std
aaa
mov
mov
cwde
ret
jge
inc
fwait
rcr
mov
daa
inc
mov
ins
add
xor
mov
sub
jo
or
jle
push
mov
pop
adc
pop
jl
push
fadd
jnp
mov
jmp
mov
cmp
sub
ror
adc
jp
nop
ja
mov
add
xchg
pop
jo
cmp
inc
or
jl
cmp
sti
test
jnp
add
icebp
inc
rcl
js
sub
mov
push
fimul
lea
mov
xchg
add
pop
in
icebp
mov
in
fs
test
out
fidiv
popa
sahf
mov
fstp
add
lods
pop
retf
sbb
shl
jmp
pop
ss
cli
aaa
pop
std
adc
dec
shl
jns
and
les
jecxz
cmc
adc
mov
sub
int
xor
dec
sbb
movs
(bad)
sub
xchg
or
jl
test
sub
xchg
sbb
popf
out
pop
rcr
mov
mov
call
fs
mov
push
sbb
int
dec
js
sub
jg
inc
ins
daa
push
and
cmp
adc
xor
add
pop
jmp
mov
jo
nop
sub
xor
movs
dec
data16
jnp
outs
mov
xchg
xchg
je
and
je
mov
sub
mov
dec
xchg
mov
cmp
(bad)
mov
leave
mov
inc
or
jg
aaa
sub
(bad)
rol
mov
ret
sub
pusha
mul
mov
outs
rcr
sbb
nop
rol
daa
cld
push
fldcw
int3
jb
int
jbe
call
mov
test
out
sbb
jnp
rcr
pop
fst
push
xor
gs
mov
push
aad
sub
loopne
mov
neg
inc
sbb
fsubr
mov
idiv
std
pop
and
scas
push
dec
fbld
xchg
sub
out
btc
xchg
sar
mov
adc
mov
or
mov
jbe
fs
jecxz
pop
pushf
jg
add
js
je
lds
xchg
sbb
ret
leave
icebp
sub
and
jbe
xor
cmps
out
inc
cmps
mov
iret
xchg
and
mov
mov
into
js
adc
xchg
dec
or
test
das
and
pop
dec
out
mov
mov
push
outs
je
gs
mov
adc
mov
mov
loopne
xor
pusha
add
movs
cmps
jmp
push
lods
test
rcl
pop
cmp
movs
pusha
and
rcl
dec
mov
stos
add
push
mov
xchg
lahf
fcom
push
test
outs
jecxz
sbb
inc
mov
push
test
lock
data16
aas
inc
call
and
jo
jecxz
xchg
out
and
popa
test
cdq
jnp
in
mov
(bad)
mov
or
test
lahf
xchg
lods
push
je
js
(bad)
call
popa
stos
gs
stos
imul
out
jno
popf
popf
xchg
sti
mov
div
cdq
fs
loope
xor
test
mov
xor
or
dec
cmp
xor
mov
jl
cmp
add
push
jns
mov
push
sub
repz
je
leave
lea
jl
shr
adc
mov
cdq
push
rcl
imul
shl
aas
in
mov
add
sbb
es
cs
inc
hlt
lahf
jo
xchg
jno
jo
cwde
hlt
jo
pop
xchg
test
ror
and
shl
xor
cmp
int3
jno
lods
dec
cmps
add
xchg
into
scas
jne
mov
jno
outs
aad
sub
pop
cmps
sbb
stos
cmp
sub
push
sahf
sbb
addr16
fmul
sahf
cmps
gs
xchg
ds
jp
in
pop
popa
(bad)
shl
adc
aaa
pusha
jno
test
aaa
shl
adc
in
add
jp
xchg
fst
push
lahf
push
lods
mov
mov
popf
xchg
sbb
push
add
mov
sbb
mov
mov
retf
test
sbb
add
ins
mov
ret
jmp
xlat
xchg
lods
push
cmp
jge
jnp
hlt
and
push
jne
and
fdiv
(bad)
adc
jns
enter
xor
das
in
stc
ins
push
enter
add
push
sar
movs
nop
jno
aaa
cs
out
jg
mov
lods
addr16
leave
in
inc
pop
mov
addr16
js
addr16
or
jge
stos
dec
rcr
imul
sbb
ds
shl
xchg
retf
jae
popf
iret
and
push
push
cdq
jae
pop
je
in
adc
or
repnz
das
push
sbb
or
imul
fnstcw
jnp
ds
xchg
jp
and
mov
call
sbb
adc
and
fcomp
mov
jno
aas
inc
sub
jmp
loopne
test
xchg
sub
stc
rcl
xor
stos
das
sub
push
adc
leave
enter
xor
xchg
icebp
idiv
hlt
retf
rcr
jno
leave
jmp
xor
push
xchg
lahf
xchg
mov
push
out
inc
mov
sahf
pushf
mov
xor
jmp
jp
mov
outs
add
jns
xor
mov
mov
pop
pop
mov
arpl
call
shr
sar
std
xchg
pop
xchg
inc
popa
cmps
adc
std
xchg
xchg
aam
movs
movs
inc
sub
daa
fwait
sbb
test
arpl
scas
mov
inc
mov
xor
jb
mov
out
mov
test
out
aam
loopne
js
movs
fist
int3
loopne
ds
cli
outs
nop
and
and
jge
or
inc
cmp
jp
jl
jle
sbb
mov
mov
inc
sub
ja
ret
push
or
jg
imul
pop
pop
inc
xor
inc
mov
dec
stos
dec
adc
inc
mov
push
(bad)
ins
sub
stos
imul
in
div
sti
aad
je
jo
cli
mov
repz
jmp
loop
lds
pop
pop
mov
sub
sub
ret
mov
jo
hlt
cmp
push
mov
aaa
mov
dec
in
xchg
out
movs
adc
stc
sbb
and
jp
addr16
xchg
hlt
mov
fnstsw
inc
xchg
punpcklwd
mov
and
or
rcl
or
loope
pop
inc
jle
push
sbb
cmp
data16
cmp
jb
std
pop
idiv
(bad)
call
icebp
(bad)
pop
push
stos
cmp
div
adc
call
popa
dec
(bad)
out
out
sbb
out
inc
sbb
lahf
pushf
inc
adc
dec
enter
popf
inc
lods
mov
jp
scas
mov
mov
ja
clc
fist
xor
int3
mov
mov
into
rcr
push
(bad)
xlat
jno
xchg
jp
mov
outs
mov
sub
mov
cmps
aad
rcr
dec
mov
fld
inc
push
ss
inc
out
jno
pop
push
(bad)
xor
les
hlt
push
lock
repnz
or
fidivr
cmp
dec
sbb
lds
and
adc
stc
cmp
xchg
adc
sub
push
test
mov
cld
sti
imul
neg
shr
xchg
xchg
inc
test
sbb
xchg
adc
sub
fimul
push
out
inc
jl
lds
repz
mov
aas
mov
out
frndint
xchg
sub
mov
xor
add
pop
and
enter
dec
adc
popf
adc
stc
aad
add
adc
fs
stc
sahf
bound
addr16
sub
test
push
retf
sti
add
or
fcomp
jo
and
shr
push
idiv
stos
and
outs
ret
jmp
adc
inc
stos
inc
and
test
mov
lahf
leave
adc
push
xchg
popfw
jge
pop
js
cmps
out
jns
xchg
cdq
xor
jb
push
and
pop
out
sahf
mov
rcr
add
mov
enter
sbb
loope
sar
movs
test
mov
das
jnp
mov
aam
xor
jo
in
pop
fild
mov
stos
sub
rcr
xchg
lock
out
movs
jmp
int
mov
iret
jp
add
sub
jo
retf
popa
and
(bad)
fcmovne
mov
rol
ffreep
mov
mov
mov
test
jno
popa
sbb
mov
inc
add
sbb
ss
mov
retf
cli
mov
push
and
sbb
pop
inc
mov
xor
out
ja
fnsave
cmp
inc
sbb
sub
sbb
mov
retf
and
xor
jg
outs
popf
mov
pop
dec
data16
cld
call
ret
rol
xor
cmp
fcom
sbb
sbb
adc
popa
loopne
stos
int
cmps
mov
jmp
jge
mov
inc
rcr
(bad)
and
popf
and
rol
pop
cs
push
dec
je
cmp
inc
pop
cmp
pop
ret
inc
(bad)
fild
mov
jmp
out
add
mov
dec
sbb
(bad)
pop
jecxz
clc
and
mul
retf
mov
xchg
fnstenv
jnp
mov
and
jp
mov
cmp
mov
shl
mov
out
jmp
call
pop
cmp
inc
lods
xor
fisttp
xchg
popa
mov
rcr
pop
sub
das
pop
pop
push
test
ror
outs
imul
mov
jmp
add
call
sub
nop
ficom
leave
pop
mov
imul
in
aas
push
loopne
jle
js
mov
push
mov
pop
into
inc
imul
cdq
imul
xchg
pop
shl
lods
fldenv
popf
jl
repnz
xchg
scas
fcom
iret
xchg
mov
mov
push
mov
(bad)
pop
xchg
mov
and
test
inc
sbb
out
push
adc
mov
js
mov
or
nop
scas
push
ror
std
sbb
pop
or
daa
xchg
mov
jns
sub
jno
push
jge
xor
nop
mov
or
jnp
lahf
in
mov
sbb
daa
push
fnsave
xchg
(bad)
push
lock
jo
sub
inc
(bad)
ret
sbb
or
int
sti
in
popa
xchg
rcr
ja
scas
nop
sub
shl
sbb
xor
js
xor
dec
clc
and
leave
jno
sbb
and
das
xor
push
test
and
sub
push
dec
leave
mov
out
in
inc
shl
dec
ins
fsub
jb
stos
sahf
xor
mov
mov
mov
pusha
aad
or
push
popa
xchg
neg
repnz
ds
xor
sub
xchg
cmp
mov
ror
push
ins
mov
mov
or
push
mov
lock
das
sbb
cmp
cwde
mov
cdq
xchg
daa
loop
rcl
out
jl
cmp
add
hlt
dec
push
or
sar
daa
fnsave
retf
cwde
mov
xor
jns
jle
inc
test
aad
cmp
adc
pop
(bad)
retf
lods
xor
je
(bad)
cmc
mov
mov
xchg
jae
cmp
loopne
fld
adc
mov
cli
pushf
mov
cmps
js
(bad)
and
xor
and
ins
stos
das
cmp
push
daa
dec
fbstp
test
jns
inc
mov
cmp
fwait
inc
bndldx
mov
scas
jl
mov
and
ja
sub
addr16
and
stc
sahf
mov
ret
push
inc
or
mul
pusha
ret
sbb
mov
push
mov
aaa
pusha
mov
lea
and
scas
in
rcl
pusha
mov
inc
cdq
sub
aaa
pop
repz
fbstp
mov
dec
shr
ins
mov
push
shr
aas
cmps
xor
aaa
das
xor
and
test
in
pop
ror
mov
popa
xor
cmp
add
mov
test
aaa
aad
ins
pop
xor
cmp
add
data16
inc
scas
sar
cmc
(bad)
fs
popa
out
xor
ss
mov
mov
jne
aam
sbb
jo
push
shl
sbb
in
gs
retf
xlat
sub
xchg
and
leave
aad
sbb
loope
sbb
xor
sbb
ret
pop
shl
ficom
pop
jl
jg
xor
mov
aas
xchg
nop
adc
shl
mov
adc
push
and
lock
aaa
nop
pop
mov
push
clc
das
js
xchg
lock
daa
sub
out
call
pop
mov
sub
call
push
aad
mov
add
leave
xor
hlt
out
xchg
push
das
retf
push
imul
sbb
scas
aas
arpl
test
mov
es
cmp
mov
cld
(bad)
lock
adc
cdq
call
rol
mov
addr16
data16
mov
xchg
aas
ret
or
jnp
push
cdq
retf
das
rcr
addr16
xor
sub
in
mov
in
sbb
leave
mov
pop
rcl
into
addr16
call
xchg
mov
mul
not
mov
data16
adc
xchg
xor
shr
mov
or
gs
rol
push
mov
dec
ret
pop
scas
fist
iret
push
shr
mov
dec
pop
stos
cmc
outs
fild
inc
add
jns
add
inc
arpl
rol
lods
js
icebp
lahf
iret
pushf
push
aaa
inc
movs
(bad)
pop
mov
shl
adc
sar
jle
sar
pushf
cmp
and
add
into
adc
retf
sahf
notrack
(bad)
stos
jno
mov
mov
jecxz
sbb
cwde
and
iret
mov
sub
outs
daa
jo
loop
xchg
push
mov
cwde
xor
fsubrp
scas
aaa
sbb
jmp
push
mov
inc
push
retf
mov
icebp
xlat
jo
jmp
mov
push
outs
pusha
rol
mov
push
cmps
into
sub
mov
loop
shl
xchg
pop
inc
pusha
xor
aas
stc
ss
and
stos
cmp
dec
dec
nop
pop
ins
mov
sti
popaw
jp
popf
sbb
sub
mov
pop
mov
pop
mov
loop
ret
je
xor
sub
push
sub
outs
dec
dec
shl
repnz
mov
push
xor
mov
retf
loopne
repnz
jno
popa
test
imul
js
loop
cli
and
pushf
je
rcr
aaa
mov
sahf
fstp
jbe
push
mov
retf
js
mov
jns
retf
xchg
fadd
test
popa
sar
add
in
push
pop
call
(bad)
sbb
cmp
push
shr
jne
push
ret
js
cmp
jo
shr
sbb
push
das
jo
jmp
dec
and
xchg
sbb
cmp
lock
add
sbb
mov
jno
test
adc
enter
and
fisttp
adc
inc
not
add
(bad)
pop
push
ins
xor
das
and
lods
mov
mov
lea
push
pop
and
sti
pop
stos
dec
jne
pushf
test
xor
loopne
cmp
cmp
adc
jl
(bad)
iret
es
fmul
mov
jmp
ret
jo
daa
xor
test
push
popa
shr
ds
int
jb
and
sbb
(bad)
mov
sub
dec
pop
sub
jno
enter
inc
ins
pop
idiv
push
ret
xor
adc
test
xchg
ins
mov
cwde
ins
jo
repnz
jnp
jns
or
jnp
sbb
mov
fyl2xp1
cmps
push
into
sahf
int3
xor
pop
out
or
popf
mov
xchg
nop
push
xor
mov
jno
sub
out
(bad)
movs
cmps
imul
scas
nop
idiv
mov
jno
ja
pop
je
test
(bad)
daa
jl
add
add
sbb
jmp
pop
inc
into
lods
cmp
jmp
out
or
retf
mov
or
adc
pop
jge
mov
in
outs
adc
popf
jae
push
popa
mov
dec
je
xchg
mov
mov
add
aaa
jmp
leave
cmp
mov
icebp
push
sar
call
jle
fstp
repz
outs
jg
fwait
lods
cmp
mov
in
sub
or
sub
pop
cmp
mov
or
je
mov
inc
xor
push
sub
movs
rol
pop
aam
vmwrite
xor
cs
cmp
jmp
mov
sub
adc
mov
ins
push
loopne
xor
sbb
mov
out
mov
clc
jno
push
sub
mov
jl
xchg
mov
xchg
mov
add
and
loop
jg
pop
test
jmp
in
aaa
in
mov
sub
mov
rcr
js
or
cmp
mov
(bad)
xor
retf
test
lods
mov
lock
mov
mov
dec
push
xchg
xor
sti
push
test
jne
pop
cmp
mov
(bad)
daa
mov
es
mov
jmp
pop
cmps
mov
loope
popf
xchg
pop
xchg
aas
out
movs
loopne
adc
clc
xchg
nop
out
sub
sub
stos
xor
push
das
mov
popa
lock
xor
lods
pop
xor
or
jge
jmp
test
add
mov
jno
mov
push
lock
mov
mov
xor
loope
hlt
scas
sub
aam
and
cmp
push
jne
or
xor
cmp
add
fisttp
mov
pop
sbb
call
sbb
mov
cmc
inc
hlt
in
push
call
ja
cmp
test
ja
inc
int
shl
jl
cmc
cld
jp
sbb
jg
xchg
cmps
aaa
push
jno
sub
mov
out
movs
mov
and
pop
cmp
pop
jo
imul
pusha
jns
pop
push
xor
(bad)
pop
jo
fsub
shl
int
mov
cs
aaa
cwde
pmaxsw
out
pop
push
mov
cwde
inc
sbb
mov
inc
jmp
xchg
ja
scas
pop
dec
pop
cmps
cmp
cmp
call
mov
or
jno
and
xchg
pop
adc
sbb
jg
jns
dec
dec
dec
aaa
mov
int3
pop
cli
std
nop
jno
sub
xor
mov
imul
cmp
add
les
shr
rcr
push
call
aam
push
mov
jno
mov
push
lea
jbe
inc
scas
icebp
mov
mov
fimul
out
out
iret
pop
adc
mov
cmps
loopne
loope
lds
sbb
fistp
ins
push
fdivp
outs
jl
leave
cmp
jo
nop
sti
sbb
shl
push
test
or
add
out
xchg
cmp
shl
pushf
dec
mov
lods
or
outs
outs
jo
pop
jmp
ins
xor
(bad)
leave
fucomip
jo
inc
lods
sub
inc
jns
mov
inc
out
xor
xchg
iret
int3
push
push
pop
das
ja
pop
daa
sub
pop
jo
shr
cmc
pop
pushf
mov
(bad)
push
mov
(bad)
aam
jbe
out
jle
push
inc
mov
mov
ins
mov
mov
push
(bad)
stc
push
cmp
std
xchg
enter
inc
(bad)
imul
adc
outs
and
cwde
and
jno
xchg
sbb
fild
mov
sub
outs
mov
in
ins
xchg
out
bound
inc
test
jle
xchg
add
xor
je
js
inc
mov
dec
adc
lds
mov
iret
cli
sti
inc
fisub
loopne
pop
pop
popa
mov
pop
ror
sub
and
mov
dec
sub
(bad)
mov
jno
sub
adc
out
push
daa
xlat
pop
mov
lea
or
pop
hlt
stos
adc
not
mov
pusha
mov
outs
cmp
sbb
sub
and
movs
pop
sbb
adc
push
push
fidivr
sbb
jb
js
and
push
not
lods
sub
retf
shl
in
mov
xor
hlt
out
mov
int3
pop
mov
retf
cmps
mov
push
out
shl
jg
popw
mov
push
daa
jl
leave
movs
pop
mov
inc
leave
dec
xchg
rcl
cmp
fidiv
(bad)
popa
sbb
(bad)
cli
aad
ins
ds
sub
lods
xchg
sub
ins
aas
jecxz
mov
xor
inc
mov
xchg
pop
inc
lahf
js
sub
lock
xor
shl
mov
mov
popa
shl
xor
hlt
push
pop
push
bnd
pop
or
xor
gs
cld
dec
addr16
stos
movs
(bad)
adc
xor
pop
enter
jg
or
shr
stos
jnp
rcr
fild
out
jns
and
mov
out
mov
cmp
popf
lahf
push
fimul
sar
jp
xchg
bnd
ins
xchg
pusha
jmp
test
adc
(bad)
jns
add
pop
cli
ds
mov
mov
dec
movs
ds
in
jo
xor
hlt
daa
xchg
pop
idiv
or
fdivr
fiadd
retf
add
pop
into
mov
arpl
mov
shl
push
sbb
mov
xor
jns
lods
jecxz
cli
push
jmp
mov
enter
mov
imul
test
add
jno
fidiv
add
sbb
pop
out
ss
lock
pop
mov
cwde
imul
jns
sub
pop
mov
dec
or
xchg
xchg
cs
fwait
movs
aam
mov
and
and
(bad)
ror
xor
mov
mov
push
or
cmp
lods
popa
repz
cmps
xor
push
test
cmp
aaa
repnz
cmp
pusha
jns
(bad)
popa
out
adc
mov
mov
push
std
je
rcl
sbb
gs
fmul
adc
jno
pusha
mov
add
es
jg
cmp
add
lods
xor
pop
push
xor
and
bound
(bad)
mov
aas
add
repnz
pop
test
scas
cld
push
jno
div
daa
push
loopne
adc
test
popf
jb
push
repnz
jp
adc
cmp
jl
aaa
push
mov
test
and
pop
adc
jno
mov
push
mov
xchg
mov
mov
sahf
stos
jo
cmp
dec
push
add
and
push
retf
aad
mov
pop
and
push
pop
pop
jg
push
and
mov
cmp
call
outs
mov
hlt
mov
fdivr
test
daa
ja
dec
push
imul
jns
mov
lahf
dec
push
mov
pop
ja
mov
das
inc
sub
or
leave
and
inc
sar
stc
push
mov
xchg
call
adc
call
ds
pop
ins
test
or
xchg
fbstp
ret
dec
jge
fs
hlt
cli
(bad)
and
dec
add
cli
mov
push
pop
popf
jbe
pop
ror
test
daa
(bad)
jmp
ins
stos
jb
loopne
out
mov
fdivr
lods
push
fwait
xchg
out
push
mov
or
pop
jns
test
sub
movs
les
dec
cmp
mov
cmc
cmps
mov
js
fstp
pusha
pop
adc
popf
repz
call
fild
leave
cli
test
push
lahf
(bad)
dec
cmp
(bad)
shl
pop
add
push
lds
fcomp
mov
mov
and
fldcw
jmp
repnz
btr
xchg
std
retf
sub
push
nop
icebp
rol
dec
in
(bad)
scas
jg
pop
push
sub
xor
cli
call
repz
mov
jecxz
mov
or
mov
xor
jg
dec
cmc
ret
test
ja
out
jecxz
dec
lock
cmp
outs
pop
xchg
stc
test
call
test
test
jmp
adc
int
mov
outs
add
lds
arpl
xlat
add
dec
adc
jmp
xchg
loopne
popa
push
mov
inc
mov
cmp
jg
push
pop
mov
xchg
inc
jle
(bad)
popa
sub
xor
or
pop
pop
shl
or
popa
and
and
fstp
pop
jno
adc
lods
jmp
lds
xchg
mov
mov
not
add
xlat
aas
mov
jns
jnp
popa
bound
cdq
mov
mov
jae
(bad)
adc
mov
fs
jo
out
lea
pusha
aad
mov
sahf
outs
and
mul
popa
cwde
xchg
mov
mov
ins
xchg
add
call
lds
push
xlat
movs
sahf
pop
inc
push
aam
push
ror
jae
xor
inc
aam
gs
jns
nop
mov
xor
imul
lods
lahf
push
pop
dec
sbb
out
add
fsubr
and
mov
sbb
pop
cmp
aam
retf
cwde
and
lea
pop
xchg
and
adc
pop
pop
in
mov
push
retf
test
mov
addr16
es
jp
mov
shr
jo
pop
jb
shl
out
pop
jmp
jns
fnsave
sbb
fcom
add
pushf
aaa
xor
ins
ins
rcr
jns
out
jb
stc
paddsb
jp
push
test
ins
test
ins
dec
repnz
mov
ret
out
xchg
xchg
cmp
icebp
sbb
sub
(bad)
arpl
mov
dec
mov
mov
inc
mov
mov
mov
jl
mov
aaa
sbb
fcom
pusha
push
sbb
int
shl
cdq
xor
neg
cmps
pop
or
xlat
out
push
fst
(bad)
or
loope
pop
sub
jns
push
jns
and
mov
xor
dec
or
cmc
aaa
std
test
push
aaa
nop
xchg
inc
in
mov
xchg
mov
xor
push
out
and
sbb
mov
jns
lds
sub
clc
call
fwait
leave
movs
(bad)
jne
aad
call
xchg
mov
jl
in
je
test
(bad)
aad
xor
mov
scas
mov
mov
shl
(bad)
nop
gs
jl
jns
nop
rol
ds
jns
ins
int
cmp
ds
xchg
push
clc
xchg
lock
xchg
test
test
jge
dec
loopne
cmc
add
sub
jmp
jo
hlt
test
dec
mov
test
mov
and
jo
call
(bad)
in
pop
push
push
addr16
movs
icebp
pop
add
sbb
cmc
dec
inc
sub
ret
push
push
repz
push
imul
xor
push
aad
sub
jl
gs
inc
aas
pop
xor
jp
xor
idiv
jno
cdq
dec
test
in
add
shl
repz
adc
les
xor
pop
fistp
inc
aaa
cmp
jbe
sub
pop
jge
rcr
xor
aaa
push
pop
outs
leave
push
ds
out
lds
dec
outs
(bad)
imul
iret
popa
mov
ret
xchg
jo
stos
int
cmp
or
and
and
inc
(bad)
add
out
cmps
push
sbb
sub
outs
bound
mov
push
adc
jl
or
inc
fld
lods
and
mov
push
gs
pop
into
rol
sub
cdq
or
or
push
shl
test
fisub
xchg
jp
add
lock
jne
test
movs
add
jl
dec
je
mov
inc
xor
sbb
xchg
daa
outs
fs
dec
out
mov
mov
arpl
push
in
pop
push
(bad)
mov
pop
cmps
das
mov
sbb
daa
and
pop
sub
jg
push
cmp
sbb
sub
cdq
adc
mov
dec
jg
mov
sub
les
push
retf
stos
addr16
fcmovbe
jecxz
push
sub
outs
xchg
(bad)
mov
cmp
and
adc
and
and
cwde
xor
mov
mov
jecxz
fiadd
aam
aam
in
sar
daa
sub
adc
stc
jnp
sti
and
and
cs
pop
sbb
xchg
and
stos
or
cmp
jb
xor
pop
push
adc
cmps
ror
fmulp
inc
(bad)
sbb
call
push
xor
ds
jne
popf
out
in
pusha
sbb
stc
push
jge
push
pusha
scas
dec
or
pop
ins
pusha
jo
push
in
mov
xchg
fnsave
icebp
shl
sbb
or
push
inc
cmp
or
and
xlat
js
pusha
dec
mov
sahf
stc
test
movs
mov
cmp
mov
mov
pop
sub
aas
jnp
std
pop
leave
sar
jo
adc
sbb
xchg
pop
js
sub
nop
jg
mov
ds
jbe
pop
packuswb
cmp
push
enter
loop
in
repnz
vmovapd
push
dec
push
loope
cmp
sub
mov
(bad)
pop
cmp
ret
pcmpeqb
mov
shl
sbb
adc
mov
les
xchg
inc
sbb
(bad)
mov
mov
and
sbb
push
cmp
sub
ficom
adc
push
sahf
and
cmps
push
cli
push
xor
js
or
or
or
add
pusha
inc
xor
pop
pop
mov
fdivr
pop
adc
call
clc
jae
fldcw
xor
xchg
ror
out
push
mov
jmp
cmp
out
les
push
ficom
xor
fimul
push
cmps
jb
pop
lock
bnd
mov
jmp
mov
mov
in
cdq
js
xor
lods
js
cs
cwde
mov
pop
adc
mov
ja
ds
pop
or
mov
aaa
sub
add
xchg
adc
push
or
dec
inc
dec
aam
pop
cmp
cld
and
cmp
xor
ret
fdiv
or
pop
test
and
sar
jl
cld
mov
pop
xor
ds
(bad)
sbb
lods
das
or
jmp
and
sbb
mov
jb
sahf
or
pop
jbe
mov
jb
sbb
xlat
ds
mov
mov
ret
xchg
cmp
cmps
mov
or
scas
mov
pop
push
dec
or
sbb
rcl
js
adc
sar
int
mov
or
sbb
mov
pop
push
test
sub
ss
sbb
inc
sub
cld
and
mov
push
dec
mov
jmp
or
mov
sbb
and
aaa
pop
setg
and
pop
mov
dec
adc
into
xor
ins
enter
mov
pop
push
pop
fistp
pop
jo
push
outs
repz
call
and
adc
inc
jno
and
dec
call
adc
int
shr
fs
jne
xlat
daa
sbb
mov
retf
inc
pushf
xchg
push
jno
push
sahf
imul
lahf
mov
xchg
mov
aaa
xchg
call
repz
jo
mov
xor
iret
sbb
fsubrp
test
cmp
ret
xchg
xor
out
rcl
mov
xor
jns
sbb
ret
sub
adc
and
push
sub
jnp
mov
cdq
test
(bad)
repnz
jle
xlat
xor
jbe
bound
sbb
xor
aad
mov
and
dec
mov
xchg
adc
out
repnz
cs
fisub
arpl
xor
pusha
sbb
addr16
ds
enter
mov
jne
sbb
test
in
dec
sub
int3
adc
mov
stos
pop
xor
mov
ror
(bad)
leave
outs
sub
pop
sbb
stc
xor
loopne
push
jno
inc
das
sub
sbb
xchg
aas
test
sub
or
(bad)
mov
xor
xchg
sub
jns
xchg
sub
div
daa
inc
jp
sbb
sub
pop
into
mov
xor
ss
push
sbb
xor
sub
mov
icebp
cwde
add
outs
or
div
leave
sbb
shr
lock
add
adc
cmps
fbstp
adc
xchg
mov
sbb
je
mov
sub
js
das
push
add
imul
aas
in
jp
shl
(bad)
int
jg
and
mov
xor
adc
and
lea
ja
ret
inc
pop
popa
movsx
jb
mov
sbb
and
gs
fs
dec
sub
aad
pushf
dec
test
xchg
or
xchg
mov
sub
jle
sti
popw
out
icebp
sbb
push
xor
jp
sbb
jb
mov
or
cmp
adc
sub
pop
xor
sub
sub
pop
leave
cmp
dec
into
and
js
pop
sbb
mov
movs
not
add
lods
cmc
pop
jmp
scas
mov
mov
push
adc
or
and
cdq
inc
jle
je
adc
mov
scas
push
mov
scas
lods
in
jg
cwde
push
idiv
add
inc
jmp
sahf
mov
int
or
sbb
ret
aaa
sub
aas
xor
pop
data16
push
out
mov
nop
sub
call
pop
pop
mov
fsub
adc
xchg
mov
mov
cmp
jo
xchg
out
lods
jb
mov
pop
mov
imul
add
fisttp
mov
call
ds
xor
sar
sub
jns
adc
dec
pop
cmp
dec
mov
inc
int
push
jne
jae
(bad)
sbb
aas
mov
xor
push
jbe
in
xchg
cmp
ss
stos
cs
in
das
and
jb
cmps
sub
pop
popa
xor
dec
adc
out
test
out
hlt
addr16
mov
push
mov
push
sbb
xor
push
mov
sub
test
jg
xor
and
sahf
scas
dec
imul
cmp
sub
mov
inc
mul
mov
xchg
jmp
shr
cwde
cli
xor
sub
fsqrt
(bad)
mov
add
add
pop
jne
in
adc
popf
pop
xchg
jmp
gs
xor
mov
xchg
adc
sahf
test
adc
xchg
in
jp
mov
adc
popf
les
mov
ds
push
sbb
xchg
mov
inc
xor
inc
xor
pop
popa
es
jecxz
test
je
into
mov
push
xor
jecxz
jl
jl
je
iret
adc
sub
push
aaa
mov
xor
test
cmp
fs
shl
imul
inc
cmps
outs
das
push
cmc
lods
adc
mov
sbb
sbb
jns
sbb
add
ret
cwde
popa
jle
xchg
lods
sbb
das
or
xchg
je
jns
loop
dec
sub
jg
push
jne
addr16
xor
dec
jl
fnstenv
push
mov
loopne
cmps
or
pop
cs
test
cmp
cmp
fdiv
lds
pop
fcomp
(bad)
mov
aaa
retf
lock
sbb
inc
cld
pusha
cdq
popa
xchg
inc
xor
rcr
pusha
sub
(bad)
stc
and
mov
popf
out
je
(bad)
cmp
or
(bad)
out
push
jae
mov
jecxz
xor
mov
pop
xchg
ror
addr16
push
dec
or
pop
test
and
pop
jp
in
pop
sub
mov
ja
sub
pop
shl
push
mov
jns
fnstsw
rol
push
dec
(bad)
enter
sbb
xor
add
aaa
cdq
popf
pusha
pop
loop
jo
sbb
call
pop
sbb
arpl
ss
in
out
out
lock
cli
add
jae
pop
stos
cwde
push
aaa
js
sti
add
ins
outs
sbb
adc
xchg
mov
mov
pop
addr16
idiv
add
jmp
outs
fs
dec
push
adc
push
jb
scas
(bad)
(bad)
and
fcomp
aaa
cmc
int3
sti
and
add
pop
daa
scas
popa
ret
scas
popf
iret
cs
cmp
sbb
mov
add
ds
xchg
outs
dec
test
xchg
mov
addr16
cld
ins
ss
stc
daa
shl
aaa
push
scas
lock
and
sahf
sbb
je
sub
and
xchg
out
xor
(bad)
js
mov
pop
popf
dec
jmp
sbb
test
mov
pushf
ret
or
rcl
push
fistp
int3
lahf
scas
out
jnp
sub
pusha
xchg
dec
push
sub
sub
dec
sbb
mov
pushf
mov
xor
sub
fisubr
neg
cmps
xchg
out
lods
(bad)
mov
fbld
frstor
ds
cmps
test
test
mov
xor
and
jo
push
enter
andnps
mov
out
outs
lock
sub
mov
add
mov
ficomp
imul
ss
cld
out
addr16
out
(bad)
cmp
out
lods
pop
je
and
das
mov
mov
adc
or
sbb
xchg
mov
mov
out
ins
xor
mov
les
jns
aam
aam
clc
clc
or
push
sub
jns
fsub
push
dec
jmp
les
cdq
xchg
jns
xor
retf
cmps
xor
sub
stc
jno
adc
inc
jae
sub
out
psubw
jae
cmps
bound
sub
mov
jmp
xor
push
int3
(bad)
stc
sub
sbb
pop
addr16
mov
out
and
stos
push
xchg
xor
add
sub
aad
xor
add
test
sbb
xchg
mov
sbb
lds
cmp
in
repz
outs
das
cmp
ins
cmp
mov
mov
sar
add
call
retf
fisttp
jmp
dec
mov
fisubr
outs
or
or
js
sbb
lods
test
mov
jnp
push
aad
nop
or
inc
shl
pop
js
popa
push
mov
icebp
out
rcl
aas
(bad)
inc
push
jns
adc
or
inc
mov
leave
jns
xchg
shl
add
add
push
mov
popa
dec
adc
cmps
outs
jns
mov
inc
stos
into
mov
cmp
in
cmp
add
or
xor
cmp
je
cdq
call
aas
lods
mov
jns
xchg
cdq
movs
movs
(bad)
push
into
inc
es
(bad)
pop
repnz
and
dec
or
cmp
sbb
(bad)
inc
out
sub
pop
add
mov
sbb
mov
loope
popf
dec
mov
jae
stc
push
pop
xchg
inc
test
push
xor
mov
test
push
dec
xchg
jbe
into
mov
sar
ss
and
mov
lods
add
imul
dec
and
and
xchg
mov
clc
mov
ins
pusha
nop
(bad)
popa
test
outs
inc
and
sbb
mov
pop
jo
jns
test
ret
iret
jb
cmps
xchg
dec
test
push
loopne
in
fsubrp
cmps
jno
clc
ins
data16
jbe
lods
push
lahf
mov
mov
push
xor
and
mov
sub
sti
xchg
jb
clc
mov
mov
out
mov
movs
xchg
sbb
jp
bound
dec
jmp
push
sbb
mov
inc
cs
in
shl
jo
js
xchg
ins
sbb
mov
pop
xlat
jge
rcr
fwait
repnz
mov
stos
and
in
mov
mov
in
lea
mov
and
adc
mov
sub
xor
sar
call
jle
xor
xor
je
mov
jns
dec
xchg
add
mov
cmp
mov
imul
test
stos
lods
jo
sub
sub
mov
sub
pop
lods
push
mov
xor
stc
mov
in
jge
popf
cmp
xor
loope
pop
ins
pushf
ret
jle
pop
or
xchg
nop
xchg
push
les
loopne
test
mov
jl
adc
fld
pop
xor
adc
aas
outs
mov
push
dec
pop
add
adc
inc
gs
jge
xor
mov
and
and
(bad)
aad
imul
fld
push
je
rcr
mov
addr16
xor
xor
or
mov
loopne
push
mov
adc
adc
scas
into
popa
inc
(bad)
adc
repnz
fmul
inc
cmps
mov
aas
xchg
out
fld
(bad)
jno
loope
adc
nop
ret
adc
loope
ds
fidiv
(bad)
aad
jle
std
and
xor
das
shr
push
xor
dec
les
(bad)
das
enter
mov
or
mov
mov
inc
repz
mul
mov
test
sbb
mov
mov
sbb
stos
test
mov
mov
xor
cmps
xchg
and
lahf
xor
sar
push
sbb
xchg
sbb
loopne
pop
mov
jl
dec
jnp
or
sbb
cmp
(bad)
jnp
ss
stos
inc
outs
pop
sbb
xor
mov
sbb
dec
imul
xchg
mov
sar
lock
jge
xor
iret
sti
cdq
ja
lock
adc
xchg
icebp
mov
add
mov
je
push
stos
jo
repz
mov
ja
inc
push
in
arpl
ret
mov
cmp
ins
and
mov
mov
mov
idiv
and
ins
aad
pusha
pop
xchg
cmp
stos
xchg
sbb
imul
fbld
mov
mov
cs
lods
mov
mov
cmp
dec
(bad)
push
lock
or
mov
popa
enter
cmp
popf
movs
scas
or
aas
into
sub
shl
jge
cmps
sbb
rcl
outs
push
mov
call
jecxz
adc
sub
inc
and
jo
dec
inc
lahf
sub
pop
sbb
sbb
add
cmp
cmp
pop
sub
cmp
popf
cwde
mov
aas
jge
or
inc
add
or
inc
lods
xor
div
les
scas
mov
cmp
and
mov
inc
jo
jo
ins
push
ss
test
rol
adc
cmp
jmp
cmp
xor
push
cld
out
jmp
out
mov
leave
imul
pop
mov
push
test
ror
jle
out
sbb
cmps
mov
pushf
hlt
dec
xchg
sti
bound
sbb
repz
mov
sub
dec
xchg
and
jb
(bad)
ror
mov
out
xchg
fcom
fcmovu
add
ret
sbb
mov
pushf
xor
jnp
arpl
lods
push
cmp
xchg
cwde
call
popf
aam
movs
jb
push
pop
or
mov
mov
jo
int3
push
ret
mov
cmp
and
and
mov
cmp
lea
sbb
cld
iret
shl
dec
sar
mov
fidiv
outs
or
mov
jp
add
xor
jo
movs
stc
dec
outs
pop
add
pop
mov
fidiv
sub
fcomp
add
mov
out
cmp
dec
lods
dec
adc
leave
sbb
das
or
jg
push
inc
fs
(bad)
gs
adc
xchg
sbb
popa
cmp
xchg
jmp
cmp
(bad)
pop
aas
scas
mov
adc
les
leave
push
sbb
lock
cmp
mov
iret
(bad)
fistp
sbb
cld
cmp
or
cmp
cmp
out
sbb
dec
(bad)
icebp
add
jno
fstp
jns
sbb
test
jle
push
mov
push
adc
add
push
pop
sub
pop
push
(bad)
sbb
retf
jl
es
(bad)
jns
mov
inc
dec
popf
xchg
and
cmp
lock
and
mov
and
push
mov
xor
call
popa
sub
fiadd
jecxz
or
cmp
sub
fwait
ret
fimul
not
cdq
jbe
pop
mov
mov
jno
inc
mov
les
gs
sbb
out
and
push
cmp
mov
loope
mov
ins
ss
dec
addr16
mov
xor
mov
ins
add
inc
sbb
pop
cs
lea
push
adc
dec
fs
xchg
mov
cmp
and
xchg
and
mov
fs
dec
pusha
ins
adc
sbb
loope
dec
je
cmp
jbe
and
sbb
mov
daa
mov
(bad)
sbb
stos
sub
cmp
aaa
int
test
push
mov
inc
(bad)
aas
dec
nop
push
mov
test
into
pop
push
mov
mov
fcmovne
cmp
out
pop
shl
mov
add
outs
jnp
retf
loope
and
lods
les
inc
lahf
xor
shl
(bad)
ficom
loopne
adc
adc
xchg
ins
dec
dec
pusha
fld
adc
imul
push
nop
das
mov
int
sbb
or
jne
popf
pop
push
fst
mov
ins
xlat
(bad)
mov
cmps
or
inc
aas
mov
outs
pop
cmp
seto
pushf
(bad)
mov
cmps
clc
clc
mov
lahf
ins
bndldx
aas
sbb
cdq
aaa
dec
ins
ds
xchg
pop
addr16
jns
shl
xchg
mov
and
cld
and
jns
into
jle
xor
xchg
gs
xor
push
aaa
(bad)
xchg
pop
scas
ja
clc
pop
xor
es
test
lahf
scas
and
inc
xor
mov
shl
sar
and
inc
inc
xchg
stos
ret
xchg
aas
mov
xlat
popa
(bad)
and
jno
mov
lds
xor
jne
rcr
jecxz
popa
mov
lods
jb
cmp
ret
mov
push
jge
ss
cmp
inc
xchg
test
sub
loop
mov
imul
mov
enter
xor
sahf
sub
loopne
stc
sub
sbb
dec
sbb
sbb
sub
add
mov
rol
cwde
mov
es
push
mov
jae
push
cdq
sbb
movs
adc
scas
xchg
mov
push
cmps
cmp
jns
ds
adc
aam
test
add
dec
push
adc
and
outs
or
cld
and
inc
les
retf
sub
or
push
fst
scas
and
pop
out
(bad)
retf
jge
jmp
mov
and
je
aad
push
or
mov
sub
jns
mov
fnstcw
xchg
stos
ror
xchg
int
add
(bad)
mov
jo
cmc
je
pop
adc
sub
xlat
popf
lock
int
stc
mov
repnz
les
popa
test
shr
adc
addr16
sub
aad
sub
movs
dec
jns
xchg
aam
cmp
push
rcr
stc
xchg
jp
dec
inc
mov
arpl
dec
data16
sbb
rol
xchg
sub
push
mov
aaa
pop
shl
cwde
sahf
jae
mov
fldcw
into
popa
enter
or
dec
push
dec
ja
mov
and
xor
xor
test
pop
test
int
je
test
pop
mov
and
push
xor
scas
cmp
(bad)
call
dec
jns
icebp
mov
cmps
popf
daa
add
sbb
stos
in
push
push
push
jle
mov
sub
jns
dec
jl
test
mov
mov
push
sbb
push
pop
(bad)
repz
popf
rol
icebp
(bad)
mov
outs
test
xor
xchg
mov
call
sahf
popf
int3
sub
test
xor
dec
jmp
pop
test
shr
sbb
jmp
pop
nop
push
jo
xchg
movs
outs
add
stos
dec
retf
jp
aas
lock
cli
push
lods
or
in
sti
add
ss
xchg
addr16
xor
or
add
jno
jne
cwde
mov
outs
pop
mul
jns
lods
pusha
ds
mov
mov
ret
scas
fisub
cmp
jle
push
add
jbe
push
dec
xchg
test
iret
cmps
ins
jns
jp
pusha
pop
xor
dec
xchg
stc
(bad)
je
aam
mov
add
cli
dec
out
jo
or
cmp
into
retf
or
and
out
cmps
retf
pop
cmps
push
mov
adc
mov
mov
mov
add
imul
aaa
cmp
inc
repz
push
fld
rol
mov
js
cmp
and
push
and
mov
sub
sti
aam
js
sub
enter
addr16
mov
xchg
and
sbb
leave
call
cwde
jl
pop
jnp
and
jg
and
fs
jmp
jmpw
jp
mov
jge
pop
mov
out
add
dec
mov
loope
aam
mov
cmp
call
es
push
ins
(bad)
outs
adc
sti
movs
das
mov
fstp
jo
jle
fwait
pusha
cdq
popa
xor
sub
scas
js
retf
xchg
mov
lahf
fnstenv
cwde
popa
dec
nop
jns
inc
mov
push
inc
sti
movs
aas
lods
push
into
rcr
cdq
loope
inc
sti
inc
dec
xchg
push
inc
iret
test
stos
push
lds
dec
pop
call
push
outs
shl
push
shr
fstp
test
repz
je
xor
xor
adc
xchg
cdq
ins
push
mov
or
jg
xchg
add
or
cli
mov
and
pop
lods
arpl
mov
(bad)
mov
popf
cmp
lock
jo
add
popf
mov
xlat
fs
inc
cmp
mov
cli
aas
add
xor
push
lahf
sub
mov
cmp
pusha
scas
xlat
jle
inc
jno
push
pop
sub
pop
xor
jp
pop
jb
dec
push
(bad)
leave
sbb
sar
rol
mov
add
std
out
xlat
jns
jge
sub
addr16
xchg
sbb
sbb
out
push
sbb
cs
pop
test
inc
add
push
out
cli
nop
inc
icebp
repz
fisttp
std
pop
out
or
enter
dec
rcl
jmp
out
pop
rcl
in
jns
scas
mov
icebp
pop
mov
mov
pop
pushf
mov
imul
rcr
dec
push
stos
aas
mov
rol
dec
push
dec
aas
loopne
sbb
ffree
aas
daa
jnp
ins
jl
mov
inc
fistp
cmp
add
rcr
cmp
xor
rcl
push
xor
mov
inc
jns
mul
pop
adc
sar
outs
stc
retf
jl
clc
jno
sub
ins
outs
sti
iret
test
call
adc
in
int3
ja
mov
cmp
pop
and
stc
je
sub
out
shr
inc
mov
popa
mov
xor
pop
adc
cdq
rcl
mov
dec
inc
shl
sahf
out
sbb
pop
cwde
xchg
(bad)
fwait
out
add
and
jnp
and
shr
ins
mov
xchg
xchg
sub
pop
mov
hlt
jg
add
jo
sub
pop
ja
adc
add
adc
push
scas
dec
mov
mov
xchg
ds
or
xor
int3
sub
jg
adc
cs
sub
mov
xchg
mov
ror
push
xor
jl
shr
inc
cmps
adc
cmc
sub
push
adc
dec
sub
mov
je
mov
mov
pop
jge
mov
add
jle
data16
cmc
pop
pop
dec
add
jno
xor
mov
lds
push
ds
pushf
mov
xchg
mov
cdq
push
push
ins
push
imul
inc
popa
dec
ins
xor
mov
rol
pusha
pop
enter
cmp
js
ins
das
xor
into
test
(bad)
out
das
add
fstp
mov
dec
jne
sbb
scas
mov
xor
js
xchg
ds
es
aas
add
aas
mov
add
ret
jb
sbb
adc
fstp
cwde
jnp
lahf
mov
movs
fnstsw
lahf
xlat
iret
es
sub
inc
out
xchg
daa
test
into
push
in
mov
add
scas
inc
and
pop
mov
outs
scas
mov
and
sti
div
add
sbb
pop
mov
cwde
lods
das
push
xor
cmps
sub
stc
pop
outs
das
sub
push
aaa
mov
adc
xchg
or
rcr
int
(bad)
jb
or
adc
inc
and
(bad)
fisub
mov
fcomp
mov
je
mul
mov
xor
(bad)
test
pop
fs
adc
(bad)
enter
dec
sbb
xlat
pop
cdq
cmp
test
mov
sbb
ret
jmp
push
ret
jg
sbb
into
(bad)
mov
push
cdq
push
cld
sbb
jbe
int
mov
dec
hlt
in
jae
push
popa
dec
fsubr
mov
loopne
test
cmp
mov
jbe
test
xor
repz
cs
lods
leave
xchg
cwde
clc
adc
xor
adc
test
sar
clc
mov
inc
jno
out
push
xchg
cmps
inc
pop
xor
mov
jp
xor
out
xchg
xor
adc
mov
dec
mov
mov
jmp
popf
dec
push
xchg
cmp
jns
sbb
cmps
loop
mov
xor
cmp
or
xchg
pop
popa
dec
sbb
mov
stos
aad
sbb
cmp
jecxz
shr
push
push
or
(bad)
jb
loopne
(bad)
push
xor
in
not
xchg
push
cmc
(bad)
iret
push
sbb
(bad)
mov
pop
sbb
pop
sbb
into
lahf
pushf
and
fist
dec
adc
shl
ins
dec
(bad)
or
(bad)
fnstcw
outs
pushf
or
or
ror
mov
pushf
jo
sub
sbb
pop
ja
fld
stc
call
mov
and
ins
push
xor
cld
sbb
jg
test
pop
mov
ja
mov
cmps
ja
cmc
mov
es
ja
sub
cmp
enter
sbb
aas
jo
mov
jnp
jge
rol
sbb
jo
cmp
jecxz
adc
pop
lds
and
aaa
lahf
(bad)
cmp
push
mov
mov
fisubr
adc
data16
aam
or
in
ds
mov
cmp
push
push
loopne
push
daa
push
aaa
add
jge
iret
aas
fxch
mov
push
jp
push
adc
into
fwait
mov
into
push
mov
sub
push
mov
mov
enter
push
and
pop
sbb
cdq
jle
jge
inc
ins
punpckhbw
das
rcr
out
into
jns
mov
ret
jbe
mov
mov
jg
sbb
sti
ss
cmp
push
jne
ret
test
cmps
pusha
jecxz
xchg
scas
adc
aam
add
cmps
fsqrt
ins
sbb
pusha
push
sub
push
push
sub
mov
nop
mov
mov
sub
(bad)
mov
shr
mov
and
or
mov
xchg
inc
mov
sar
addr16
mov
stc
in
loop
cmps
jb
std
out
xchg
mov
dec
adc
int
mov
out
adc
mov
retf
jmp
frstor
jle
ss
data16
sbb
pop
pop
push
cmp
pop
mov
gs
jle
out
xor
stc
dec
rol
pop
js
mov
and
xchg
cmc
nop
jo
fld
sub
rcr
cmps
call
into
repz
and
or
and
pop
xlat
jl
adc
mov
iret
pop
dec
imul
sbb
mov
in
out
cmp
cli
outs
mov
das
push
clc
jmp
cs
and
xchg
sbb
lea
(bad)
mov
xor
lea
out
jb
pop
cmp
push
int3
sbb
xor
int
jg
lds
jp
mov
movs
out
arpl
pop
xchg
lods
lds
nop
jg
scas
jle
mov
loopne
and
xchg
mov
sbb
mov
add
aas
stos
nop
xor
mov
push
les
js
aam
out
push
xchg
out
mov
rdmsr
aas
xor
sahf
outs
sbb
push
sub
(bad)
sub
mov
loop
sti
jae
imul
push
jle
inc
scas
jecxz
ss
js
pop
jne
lahf
loope
jl
loope
fucomp
mov
test
pop
pop
adc
sbb
je
stc
les
shl
stos
fisub
mov
in
out
jmp
pop
push
push
pop
mov
dec
in
pusha
das
pusha
inc
adc
call
pop
push
xchg
shr
sbb
jl
popf
(bad)
cmp
cli
xor
mov
push
jge
inc
xchg
cmps
call
sub
jo
push
jmp
mov
mov
xor
mov
mov
sahf
pop
es
xchg
mov
dec
mov
lods
repnz
test
fild
into
xchg
mov
push
add
shl
xor
ret
aam
mov
in
mov
ffreep
imul
ja
adc
ins
xor
jb
cli
push
fist
add
push
sbb
xchg
mov
add
test
pushf
and
outs
enter
xchg
ss
out
fxch
into
popa
js
jo
jmp
mov
pusha
cmps
push
retf
cmp
nop
fsubr
xor
jmp
jmp
sub
jmp
js
lods
cmp
mov
sbb
xchg
sub
jno
push
out
arpl
iret
pop
hlt
jo
mov
lea
das
das
mov
les
loope
je
mov
or
loopne
xcrypt-ofb
cmps
stos
mov
mov
dec
xor
adc
lea
clc
test
cs
sub
stos
push
jl
mov
jns
out
jb
inc
mov
mov
push
sbb
xchg
mov
dec
pop
in
aad
jmp
ds
stos
mov
jns
xchg
xchg
aas
outs
aam
leave
xchg
in
mov
xor
or
pop
xor
sbb
jp
mov
aaa
into
(bad)
jno
inc
stc
stc
sub
push
test
out
xor
(bad)
and
xor
cmc
rcr
xchg
dec
mov
dec
xlat
popf
jne
mov
(bad)
xor
popf
inc
jmp
stos
(bad)
adc
shl
nop
icebp
(bad)
into
out
popa
and
xor
mov
inc
cmp
jno
xor
loopne
je
sbb
stos
adc
cmp
shr
push
dec
jle
sbb
popf
mov
loop
call
loope
xor
mov
enter
mov
mov
movs
dec
mov
jmp
jb
hlt
not
mov
bound
jp
movs
clc
cmp
dec
jmp
pop
fwait
mov
clc
shr
(bad)
mov
fiadd
fwait
js
xor
or
fs
mov
data16
and
mov
adc
mov
mov
les
stc
ficomp
xchg
ss
sbb
mov
xor
dec
sub
test
adc
sub
outs
sbb
or
inc
ret
out
inc
or
jbe
imul
jle
sbb
scas
cmp
adc
popa
mov
pushf
xor
sbb
mov
arpl
scas
pop
jb
add
xor
push
mov
adc
pop
and
mov
(bad)
cmp
je
xchg
sbb
mov
ds
and
mov
in
mov
mov
retf
popa
enter
je
cmp
jle
jl
dec
mov
(bad)
mov
(bad)
and
push
jg
xchg
js
or
mov
mov
leave
je
aaa
outs
nop
dec
addr16
es
add
pop
(bad)
mov
or
xchg
lods
mov
(bad)
dec
ja
ins
push
mov
int3
cdq
or
ret
loop
lods
push
popa
outs
es
xchg
into
ja
std
dec
cmps
cmp
sub
mov
jnp
add
je
rcr
cwde
mov
pop
scas
mov
xchg
in
(bad)
(bad)
adc
out
je
popa
jo
sbb
ret
in
out
mov
sbb
inc
jnp
sbb
fsubr
les
fwait
stc
pop
push
mov
or
outs
xchg
mov
inc
inc
shl
jne
mov
pushf
nop
mov
jg
mov
inc
dec
cli
lods
adc
xchg
mov
outs
icebp
jnp
adc
sar
dec
imul
xchg
scas
mov
push
jge
lods
jp
mov
adc
scas
stc
pop
dec
pusha
imul
sub
enter
and
sahf
pop
ds
ror
cmp
leave
test
mov
add
pop
es
or
push
shr
inc
(bad)
cs
xchg
imul
les
cmp
in
sub
xchg
cdq
mov
jbe
push
cld
js
mov
sbb
(bad)
std
cmp
xchg
jbe
mov
ins
pop
cld
pop
push
cmps
jae
dec
sub
(bad)
and
jg
and
ins
(bad)
nop
sahf
push
(bad)
push
nop
int3
lds
pop
jmp
mov
test
ins
jo
aam
aas
push
and
out
rol
inc
leave
mov
mov
xchg
gs
and
xor
mov
sbb
push
inc
sbb
xchg
jno
jns
push
mov
cmps
repz
movs
sahf
jns
push
dec
mov
outs
jmp
js
dec
cmp
adc
sbb
(bad)
mov
loop
jbe
xchg
jp
pop
mov
sahf
add
cld
xchg
ins
ret
stos
adc
jge
and
cs
shl
or
jle
or
mov
js
dec
mov
dec
mov
scas
sahf
mov
cmp
dec
pop
adc
and
push
mov
pop
push
adc
jp
jns
aaa
fcmovnb
sub
xchg
popf
ja
in
dec
pop
adc
mov
adc
mov
das
push
xchg
sbb
fild
popf
aaa
dec
gs
xor
xchg
xor
xor
movs
jb
call
sub
cmp
sar
add
push
fimul
dec
push
sbb
(bad)
pop
fidivr
push
xor
ja
aas
(bad)
popa
sbb
xchg
sub
popf
cs
scas
dec
adc
ja
mov
mov
adc
dec
inc
fidivr
enter
mov
mov
cmp
or
and
jle
mov
jl
sahf
sbb
add
shl
or
and
inc
xchg
aas
jge
mov
cmp
lock
out
and
cld
outs
ficomp
rcr
jmp
push
cwde
pop
retf
inc
lock
jns
sub
test
and
js
adc
popf
xchg
xor
or
enter
cmps
aaa
cmp
sbb
leave
xchg
sub
push
pop
pop
int
int
aam
xor
adc
(bad)
adc
data16
jb
pop
mov
mov
xchg
stc
pop
popa
daa
leave
xlat
mov
pushf
push
stos
or
xchg
jo
shr
cmp
daa
dec
js
sub
jo
fimul
neg
sbb
mov
pop
xor
aas
repnz
rcl
icebp
stos
out
jb
add
mov
call
pop
fdivp
jne
sbb
int3
sub
aas
test
movs
gs
ja
sub
pop
inc
xchg
cmps
dec
jb
fcom
jns
loopne
popa
jecxz
iret
fisttp
cs
out
mov
sbb
xor
int
lods
inc
(bad)
sbb
gs
xor
cwde
stc
jge
jle
leave
xor
sub
xchg
sbb
cmp
dec
add
adc
out
fstp
das
pop
test
nop
dec
pop
adc
cmp
mov
mov
jmp
inc
stos
xor
or
push
mov
inc
in
jle
stc
shl
fwait
(bad)
mov
jg
int3
rol
retf
scas
frstor
add
mov
shl
and
sti
xlat
jl
data16
xor
sbb
dec
pusha
aad
loopne
xor
pop
gs
mov
je
sub
cmp
lods
pop
sar
dec
in
ins
inc
enter
xor
lods
cs
xchg
pop
(bad)
lahf
fs
data16
sub
mov
dec
mov
pop
jmp
addr16
push
mov
out
push
pop
xor
xchg
mov
or
aaa
cmp
mov
jle
dec
jl
sbb
aaa
pusha
mov
and
add
movs
push
mov
jecxz
outs
loopne
sub
fisttp
stos
cwde
pop
aam
xor
fisttp
push
mov
fist
call
shl
hlt
sub
icebp
or
push
(bad)
fisub
inc
jno
dec
mov
lock
out
add
das
imul
fwait
add
xor
and
cmp
pushf
ins
std
cmp
js
dec
adc
sbb
clc
and
mov
stc
jns
inc
(bad)
das
mov
pop
sbb
das
mov
cmp
mov
daa
stc
mov
sbb
sti
sub
pop
mov
clc
mov
push
and
mov
sar
ror
daa
push
lds
stos
push
out
xor
mov
and
add
xchg
test
mov
test
movs
aas
and
and
(bad)
daa
push
xor
jb
xchg
cmp
adc
pop
or
adc
xor
push
cdq
outs
sub
jmp
mov
mov
fmul
mov
out
mov
push
mov
push
or
rol
sbb
daa
cmp
dec
or
cmp
mov
ss
clc
jb
retf
add
push
xor
jg
xlat
and
push
mov
lea
jo
lods
dec
(bad)
mov
ror
iret
stc
mov
(bad)
or
shr
pop
cmp
stos
push
xchg
shl
mov
stos
and
adc
es
int
loop
test
xchg
and
sysenter
jmp
mov
out
js
mov
push
and
fild
rcr
xchg
push
out
pop
push
lock
pop
dec
ja
or
clc
adc
mov
add
(bad)
out
sub
scas
(bad)
adc
xchg
jmp
and
pop
movs
mov
es
daa
dec
out
int
sar
jmp
fs
lds
outs
cmps
icebp
mov
loopne
dec
enter
ror
mov
das
jmp
clc
rcr
mov
fild
jp
jbe
lahf
mov
enter
sar
pop
xchg
adc
jle
retf
out
call
sbb
xor
xor
cmps
aas
sti
sbb
nop
dec
imul
sti
sbb
and
and
push
cmp
push
jge
push
sub
ins
push
ins
loopne
adc
dec
add
aad
lods
mov
in
and
xchg
cmp
push
xchg
mov
loope
jp
or
ror
popf
inc
frstor
or
sub
jp
cmp
dec
cmps
pop
or
xor
shl
dec
cmc
lods
or
idiv
scas
jle
xor
rcl
aas
lea
fchs
retf
fisttp
sub
aam
xchg
dec
fdiv
sbb
pusha
daa
add
jne
push
(bad)
push
adc
adc
out
and
hlt
xor
jns
cdq
xor
jns
jg
call
jno
out
and
xchg
inc
sbb
and
repnz
sar
adc
pop
inc
sub
cmp
and
sub
out
mov
sbb
pusha
add
sbb
sbb
pextrw
push
push
mov
mov
(bad)
xchg
pusha
fstp
sub
mov
neg
out
mov
sbb
inc
push
and
bound
adc
mov
out
lods
and
shr
out
mov
fisttp
jns
push
adc
jp
inc
in
imul
push
inc
jae
cmps
into
jl
js
xor
push
add
cmp
(bad)
retf
cmp
pop
aam
sbb
jns
out
mov
aam
cmp
xor
mov
mov
(bad)
mov
das
pop
aaa
pop
out
rcr
xchg
das
enter
push
test
sbb
cmp
jno
mov
and
jns
sub
shl
add
neg
adc
imul
ins
jg
ins
std
push
mov
pop
adc
xchg
aas
(bad)
jns
dec
rcr
xchg
cld
daa
mov
adc
adc
mov
jno
jae
retw
xor
adc
js
scas
stos
retf
aas
shr
mov
test
imul
cli
test
leave
movs
jp
pop
ret
sub
sbb
push
mov
pop
adc
out
push
jns
out
into
jno
je
test
inc
movs
mov
pushf
outs
xlat
mov
je
out
call
out
lods
jl
rcr
retf
stc
xor
push
sub
and
xor
add
ficomp
out
dec
adc
jns
sbb
out
adc
(bad)
imul
push
jae
pop
mov
xlat
add
sbb
xor
ds
mov
mov
lods
fmul
jle
rcr
aaa
jnp
and
xchg
shl
in
mov
stc
sbb
pop
add
jecxz
mov
and
jno
sub
mul
mov
and
ss
xlat
xor
sar
jnp
jl
push
test
scas
xchg
in
addr16
cmps
je
and
push
push
jmp
cmp
inc
sub
ds
ret
lahf
cmp
imul
call
add
or
rcr
scas
jbe
inc
dec
mov
sbb
jo
sbb
popa
inc
adc
(bad)
mov
js
rol
stos
cmp
dec
mov
xchg
mov
sub
and
loopne
imul
ins
jae
lds
sbb
mov
sbb
(bad)
ss
pop
pushf
push
(bad)
dec
dec
outs
xchg
mov
sub
fsubrp
xor
sub
ds
cmp
mov
fwait
push
clc
cmps
push
xor
movs
jns
dec
shl
add
mov
cmp
pop
sbb
std
cmp
add
movs
dec
daa
fwait
pusha
pusha
mov
sbb
dec
add
add
call
rcl
mov
(bad)
jle
jno
and
jle
dec
adc
test
loopne
ss
pop
in
pop
lahf
sbb
(bad)
cwde
in
pushf
sbb
push
push
pop
cmp
cmps
lods
xor
jno
out
out
xchg
xor
enter
fcomip
test
jp
loopne
das
ds
cwde
pop
inc
add
xor
ret
popf
sbb
push
mov
mov
out
pop
adc
inc
arpl
(bad)
js
lods
lock
lods
jo
mov
xchg
int
outs
aad
xchg
cmp
and
and
int
or
shl
not
pop
push
xchg
aaa
leave
adc
pop
push
inc
addr16
push
jnp
icebp
scas
pop
outs
in
jg
sub
or
xor
outs
fs
outs
cmp
xchg
ja
push
push
cmp
iret
mov
test
jge
cmp
mov
jne
sbb
sub
loope
icebp
jo
in
movs
mov
fs
jmp
push
pop
sub
inc
xor
pop
daa
mov
sub
nop
xchg
ror
lods
push
dec
out
int
sbb
jns
xchg
aaa
movs
imul
mov
push
inc
push
and
fs
js
mov
in
es
fmulp
clc
pop
inc
push
mov
dec
jmp
inc
add
fsincos
popa
fbstp
xor
movs
fmulp
stc
adc
fsubr
jl
xchg
xchg
inc
dec
or
stc
stc
add
mov
rcr
rcr
sbb
ja
pop
ins
(bad)
popf
loop
sbb
fiadd
mov
xchg
pop
xchg
or
push
mov
test
leave
sub
dec
sub
test
cdq
aad
and
jno
xor
imul
js
shl
xchg
fs
dec
cmps
shl
daa
inc
cmp
icebp
adc
mov
sub
mov
pop
xchg
jmp
sahf
sub
add
lea
sahf
adc
xchg
rol
imul
add
mov
shl
inc
mov
or
jmp
(bad)
popf
adc
jg
test
pop
popa
daa
data16
xor
ins
push
xchg
dec
push
inc
jne
js
lahf
xchg
adc
in
and
pusha
jbe
movs
imul
scas
clc
int3
sahf
(bad)
aad
push
mov
push
and
push
dec
retf
(bad)
mov
inc
jno
pop
jmp
xor
imul
retf
pushf
ss
sti
mov
xchg
stc
rcr
add
hlt
xor
fidiv
ret
sti
mov
shl
or
out
out
cmp
movs
nop
fwait
add
mov
xlat
fucomi
adc
dec
ins
out
ficom
cdq
dec
stos
scas
outs
push
ficom
adc
aad
or
lea
pop
sbb
and
fs
mov
dec
nop
pusha
sub
xchg
frndint
cmc
dec
cmp
inc
add
(bad)
cmp
fmul
mov
dec
dec
rcl
xor
xchg
das
mov
test
xor
movs
in
sub
xchg
jne
pushf
leave
jne
ja
mov
push
jp
fild
inc
ss
cwde
aas
inc
movs
xchg
ror
pushw
je
in
(bad)
mov
es
mov
jp
leave
push
fwait
xor
lea
fwait
cli
loopne
add
sbb
movs
xchg
fdiv
mov
sub
nop
dec
jno
mov
es
aaa
push
retf
rcr
movs
imul
ret
addr16
push
les
stc
dec
inc
hlt
loopne
sub
cmp
clc
ins
int
(bad)
mov
sub
sbb
aam
mov
clc
jae
stos
rcl
sbb
scas
ret
push
ins
add
sub
push
mov
mov
push
aaa
sbb
sbb
mov
sbb
jns
push
cmp
mov
mov
stc
mov
fstp
pop
dec
addr16
fwait
push
jne
cli
ins
jmp
ins
sub
cs
ds
mov
cmps
cmc
push
xchg
idiv
lds
mov
test
lds
mov
dec
je
fist
push
(bad)
fisttp
pop
mov
jne
xchg
rcr
shl
jbe
in
(bad)
cwde
mov
jmp
cmc
lea
fadd
sbb
cld
ins
jo
out
sub
mov
xor
jmp
scas
cs
xchg
adc
inc
pop
daa
psllw
(bad)
push
icebp
push
ja
inc
pop
mov
jns
inc
push
mul
mov
out
aaa
mov
jp
push
pop
test
add
or
xchg
ins
ja
mov
mov
dec
xor
dec
repz
mov
aad
pushf
cmp
aad
fidiv
cs
fcompp
rcr
popa
lock
fidiv
test
mov
sbb
cld
jp
scas
mov
cld
jnp
jo
xacquire
fstp
js
cli
inc
stc
adc
sbb
mov
xchg
dec
mov
jmp
out
retf
cwde
fs
outs
rol
clc
shl
imul
dec
fild
pop
jmp
xchg
frstor
push
push
or
pop
call
push
adc
sub
jl
xchg
lods
dec
jns
cmp
cmc
popf
popf
div
or
clc
inc
push
mov
or
mov
cmp
add
std
or
pusha
mov
sub
fucom
cmps
jns
ss
loop
and
cmp
popf
dec
test
outs
mov
enter
aam
lds
mov
nop
aad
ror
add
mov
out
shl
jns
(bad)
push
sub
leave
das
popa
cmps
aad
inc
push
and
sub
ins
leave
in
push
pop
jmp
inc
xchg
jmp
ss
hlt
(bad)
movs
int3
lea
ds
nop
data16
stos
and
jns
cmp
dec
retf
or
icebp
mov
ins
enter
test
fisub
sbb
stos
mov
fidivr
pop
adc
ins
popa
stos
lock
inc
jg
cwde
dec
mov
mov
popf
fwait
int
adc
add
cmps
stos
xor
ror
jp
sub
imul
mov
idiv
enter
push
int3
inc
push
jmp
xor
push
call
ss
mov
inc
imul
push
(bad)
pop
mov
mov
push
daa
pop
retf
mov
addr16
dec
dec
add
push
mov
fadd
cmp
cmps
js
out
aas
lods
and
xchg
jmp
pushf
inc
js
and
adc
jo
xchg
nop
outs
arpl
fldcw
es
shr
popf
xor
xor
cmps
mov
sub
jecxz
add
cwde
retf
into
les
imul
rcl
jnp
outs
jnp
xchg
and
mov
(bad)
mov
inc
shl
outs
pop
sbb
xchg
pop
mov
dec
out
dec
add
mov
pop
stc
int
push
dec
adc
icebp
sub
(bad)
xchg
stc
jb
lahf
push
jnp
sbb
ins
out
sbb
jmp
push
mov
inc
or
and
fnstenv
stos
call
shr
cmp
(bad)
adc
push
jo
push
test
inc
popa
adc
xchg
cmp
mov
dec
inc
scas
sub
mov
repz
cmps
xchg
fldenv
jno
jl
adc
test
lds
adc
fs
mov
jno
test
sbb
xor
adc
int
and
iret
adc
ss
cmp
cwde
(bad)
retf
dec
pop
cmps
adc
sbb
cmps
sbb
outs
imul
sub
ja
stos
pop
xchg
or
dec
aas
push
std
rcl
das
movs
movs
js
sbb
add
je
sahf
lds
pop
jbe
(bad)
jmp
push
test
mov
div
rol
and
ds
fs
cmp
jle
dec
sbb
(bad)
outs
bound
inc
inc
cmps
fmulp
cli
adc
adc
push
inc
fild
aas
imul
push
jb
aad
stc
not
test
xchg
dec
jle
fyl2xp1
leave
test
mov
shl
outs
push
aaa
je
(bad)
sbb
sete
int
mov
add
aad
and
mov
fidiv
jg
inc
xor
dec
or
rol
adc
ret
or
xor
icebp
dec
and
jns
ins
inc
xchg
faddp
cld
jns
call
xchg
rol
sar
int3
ss
cmp
loope
das
push
movs
mov
in
xchg
sub
jb
in
and
sub
aad
out
or
cmp
cmp
cwde
sbb
mov
add
xchg
popf
pop
xor
jb
aad
dec
ins
sbb
push
fnstcw
jg
pop
xchg
jae
jne
mov
ins
sbb
je
imul
xchg
push
dec
lods
arpl
push
mov
add
pop
idiv
lods
or
adc
jge
retf
mov
out
cmc
jnp
push
fnstcw
cld
mov
cmp
lods
out
ror
adc
ret
cs
lods
call
sub
pusha
push
mov
xor
cmp
add
je
popa
xor
mov
jo
pop
ret
xchg
sbb
mov
icebp
add
into
cdq
adc
(bad)
mov
mov
out
movs
(bad)
shr
jbe
rcl
daa
xchg
jae
fisubr
xor
sbb
cwde
pop
out
stos
mov
sbb
add
xor
lods
bound
dec
or
jle
nop
repz
pop
xchg
or
sub
cmp
loopne
es
fistp
dec
push
fnstenv
push
xlat
lock
sbb
cmp
popf
mov
lods
imul
shl
mov
push
xchg
xchg
lea
into
mov
sub
mov
and
add
cli
adc
retf
adc
out
cli
movs
shr
fistp
ror
leave
or
xor
mov
lods
retf
daa
addr16
rcl
jmp
ja
mov
(bad)
pop
out
and
or
aaa
cli
add
pop
push
retf
lods
jle
data16
inc
sub
ret
xchg
jge
daa
call
nop
adc
scas
xchg
retf
push
sar
sub
pop
and
inc
sbb
mov
jmp
adc
and
leave
jle
xchg
dec
jns
inc
aad
dec
mov
inc
jns
cmp
xor
jge
sbb
add
pop
cmps
cmps
loop
cmc
jl
rcl
inc
pop
mov
(bad)
cmp
pop
mov
sar
shl
mov
pop
adc
fnstcw
fnstcw
stc
shl
test
pop
pop
fiadd
sub
loop
ins
jge
cli
mov
mov
push
test
movs
out
loope
(bad)
icebp
sub
cmp
out
jmp
xchg
pop
inc
sahf
jbe
pop
jmp
or
dec
addr16
xor
int3
sub
shr
mov
sub
adc
fs
xchg
add
bound
mov
sar
movs
mov
dec
ror
inc
call
test
push
das
push
push
xchg
outs
add
jl
mov
mov
ins
dec
nop
popf
jne
add
in
pop
xchg
nop
in
push
std
pushf
mov
pop
std
loope
sbb
mov
mov
pop
push
movsx
pop
pop
bound
sub
sbb
mov
test
dec
inc
ins
sub
push
scas
es
pop
push
mov
cmp
mov
push
call
ja
loope
hlt
lahf
jo
adc
sbb
or
sahf
mov
mov
jo
mov
dec
push
mov
mov
ss
neg
xor
leave
bound
lahf
add
in
push
push
jg
ror
fsubr
cmps
mov
popa
or
outs
sbb
(bad)
sti
mov
dec
push
dec
retf
sti
sti
icebp
sub
call
adc
xlat
mov
loope
popa
xor
mov
sub
jmp
in
add
pop
aas
adc
shl
xchg
stos
mov
xchg
sbb
out
pusha
and
clc
pop
fst
aad
adc
xor
push
cmps
and
pop
ins
sbb
into
pop
xchg
and
fstp
popa
sub
inc
fnstenv
sbb
mov
scas
jle
out
fpatan
js
(bad)
lock
sbb
jns
jle
loopne
sbb
(bad)
dec
sbb
sub
xor
out
out
mov
pop
mov
pop
pop
cwde
jmp
or
mov
leave
add
lea
ins
ss
out
into
and
dec
pop
pop
and
or
popf
and
movs
retf
sbb
addr16
ret
xchg
mov
xchg
inc
idiv
cmps
cli
cmp
mov
dec
pop
jb
lock
mov
jno
loop
pusha
mov
pop
jns
aas
hlt
leave
inc
push
mov
mov
addr16
out
jg
cmc
out
sub
jb
add
push
cmp
pop
popa
imul
or
or
das
ror
mov
(bad)
jecxz
mov
and
inc
and
movs
out
addr16
arpl
into
xor
into
pusha
pop
pop
cmp
ret
sar
mov
and
xlat
addr16
sub
mov
jae
into
jmp
xchg
cmp
lea
jno
pop
outs
pop
rcl
fldcw
jmp
retf
lea
call
xor
fldcw
das
or
inc
sub
and
xor
jb
push
lock
lods
xor
out
mov
pop
jg
sub
pop
push
jg
les
add
retf
pop
arpl
sub
pop
sub
addr16
cmp
jno
mov
adc
push
xor
out
sub
xchg
bnd
mov
and
xchg
or
push
sbb
xchg
cmp
dec
lea
gs
jmp
mov
and
clc
and
mov
loope
mov
retf
scas
fldenv
mov
enter
lods
es
dec
popf
xchg
jne
and
or
cld
into
mov
sub
sar
sahf
aas
clc
push
sbb
xchg
add
jg
test
(bad)
xor
mov
push
pop
pusha
add
adc
ins
popf
retf
loopne
ficomp
mov
mov
pop
or
push
fild
xor
adc
sbb
sbb
adc
sbb
jae
jp
sub
iret
xchg
add
mov
sbb
iret
outs
mov
sub
popf
cwde
sbb
cmps
loop
adc
jl
jnp
sub
out
lock
jno
mov
push
ds
test
loope
rcl
cmp
cmp
xchg
outs
pop
enter
dec
mov
aaa
or
xlat
pusha
cld
jle
ffree
push
pop
fcomp
pop
fdiv
xor
nop
dec
sbb
or
test
push
adc
nop
push
jno
ss
pop
fstp
cmp
fild
push
pusha
ds
pop
sub
cdq
jecxz
xlat
daa
sub
bound
popf
push
sub
mov
int
in
mov
jo
pop
push
jo
sbb
mov
ins
xor
lea
inc
fst
ins
cmps
nop
push
mov
adc
xor
sub
jle
in
ins
sbb
movs
mov
inc
cmp
mov
sub
mov
sub
sar
xlat
inc
jecxz
adc
shr
test
xlat
leave
mov
shl
adc
(bad)
xlat
rcl
dec
jl
aam
cmp
mov
add
mov
sbb
rol
mov
jo
mov
mov
jg
xchg
sbb
popa
mov
xor
test
or
ret
outs
and
xchg
pop
xchg
mov
leave
cld
or
out
(bad)
jecxz
adc
enter
adc
movs
push
sub
frstor
mov
xchg
adc
jmp
ret
jg
dec
repz
das
cmp
lds
aaa
pop
sub
sbb
mov
sub
enter
adc
and
dec
inc
mul
jg
sub
clc
or
or
scas
jg
push
loope
cmp
popf
mov
mov
or
cmp
sbb
dec
sbb
push
xchg
xchg
not
cwde
icebp
cmp
daa
sbb
popa
outs
sti
fadd
and
mov
or
pop
inc
das
fistp
mov
jo
add
pop
dec
iret
cmps
cmp
jae
mov
add
popf
iret
js
pop
pop
pop
pop
dec
ds
push
daa
fadd
icebp
push
push
rcl
mov
mov
cmps
sar
sbb
cmc
sub
jmp
mov
adc
lds
lods
test
sub
ret
mov
cmp
popf
inc
movs
repz
pslld
xor
pop
adc
cmp
or
push
cmp
bound
dec
mov
dec
mov
aam
hlt
and
pusha
add
js
sbb
push
xor
sub
lock
(bad)
or
sbb
mov
leave
out
sahf
dec
sbb
mov
lahf
(bad)
push
ins
jnp
jle
in
fdivr
dec
cmc
stc
aad
adc
out
ret
sti
mov
aam
test
jbe
daa
fisttp
mov
xchg
xchg
dec
inc
cmp
jecxz
and
rcr
mov
mov
jnp
xchg
das
sub
shl
bswap
(bad)
mov
add
jge
popa
arpl
pop
loopne
fcomi
sbb
clc
sbb
aad
dec
sub
adc
or
xchg
cmp
fucomp
test
aas
xchg
arpl
jle
sbb
sbb
pop
out
sub
pop
inc
retf
fistp
inc
jmp
adc
jb
xor
pop
pusha
stos
push
leave
add
jns
xchg
push
(bad)
(bad)
clc
rol
hlt
mov
test
jno
xchg
and
test
xchg
xor
mov
add
push
sbb
push
bound
test
ds
push
pop
addr16
sbb
xchg
and
test
jge
push
iret
adc
test
enter
in
xor
jg
enter
xchg
cmp
pushf
bound
into
jge
ret
xchg
xchg
sbb
aam
inc
push
add
xor
pusha
mov
sub
aas
sbb
in
jl
(bad)
cmp
inc
ins
xchg
jle
push
sub
sbb
retf
lds
sti
repz
mov
rol
cld
mov
jg
fmul
or
mov
mov
pop
sbb
dec
enter
fadd
test
js
out
push
xchg
jno
sbb
retf
stos
cmp
push
mov
dec
aas
mov
pop
imul
lock
cmp
jle
mov
fadd
aas
pop
(bad)
aas
mov
cmp
mov
xchg
(bad)
jg
aas
(bad)
sbb
or
retf
jmp
std
mov
scas
mov
sbb
fldenv
push
add
shr
push
je
xor
xlat
pop
vpsubsw
jmp
jns
sub
mov
jbe
test
lock
pop
pop
mov
and
mov
outs
sahf
repnz
fcmovnu
out
dec
scas
jmp
mov
cmp
add
fs
xor
push
adc
(bad)
mov
aaa
pop
dec
jle
sbb
popa
jno
xchg
hlt
jge
mov
stc
leave
cld
xor
sub
jbe
mov
pop
cdq
popa
(bad)
cwde
sar
pop
pop
loopne
or
pop
(bad)
fstp
out
sub
sub
(bad)
popa
add
mov
xchg
push
cli
popa
test
mov
popf
nop
sub
lods
fwait
cmp
xchg
sbb
retf
jns
inc
loope
sub
popa
call
jbe
test
dec
inc
aaa
mov
add
push
pop
mov
dec
data16
std
gs
jo
sbb
jp
in
cmps
cmp
pop
adc
mov
mul
rcr
sti
cmps
shl
pusha
jae
sbb
rcl
pop
hlt
adc
jb
or
sub
movs
or
jno
aaa
cmp
leave
and
ficomp
cmp
sub
adc
add
cld
test
repnz
dec
popf
add
es
call
fdivr
and
jo
(bad)
pop
and
sbb
es
add
test
push
icebp
jmp
adc
fs
call
mov
sbb
pop
sub
adc
ret
scas
scas
pop
xchg
sbb
push
mov
rol
ror
jne
movs
mov
pop
outs
scas
test
es
xchg
xor
push
(bad)
mov
mov
jmp
lahf
cwde
jnp
xchg
lods
enter
jmp
mov
jo
mov
data16
mov
jns
dec
movs
pop
adc
fs
add
sar
nop
and
fdivr
popa
mov
mov
ror
mov
sub
mov
dec
add
sub
shl
and
mov
cli
into
ja
test
pop
stc
and
xor
retf
loope
clc
outs
sub
into
stc
into
or
fstp
stc
jecxz
out
sub
jb
or
dec
jns
test
mov
daa
pop
hlt
cmp
inc
mov
sbb
clc
pop
pusha
xor
jb
add
sub
js
enter
pop
sub
out
push
and
js
pop
rol
adc
outs
lods
dec
cli
leave
and
nop
adc
loopne
(bad)
fnstenv
outs
scas
sub
pop
in
(bad)
sbb
pusha
pop
and
fld
out
xchg
inc
cmp
pusha
out
repnz
mov
leave
test
mov
mov
xchg
add
in
cmp
leave
add
sub
xor
leave
in
into
loope
jle
adc
and
jnp
mov
cmps
jl
js
fisttp
fstp
cmps
addr16
cli
rcr
mov
push
jg
out
push
inc
pop
sub
js
popf
jb
adc
xor
ds
sahf
or
js
sbb
addr16
(bad)
cmp
ret
loopne
(bad)
jl
xchg
pusha
cld
jmp
pop
xor
mov
mov
and
jb
pop
test
xor
mov
fiadd
pop
sbb
ficom
add
mov
mov
aam
add
cmps
cmp
je
add
xor
cmp
add
add
cmp
xor
mov
cmp
sub
cmps
mov
ds
rcl
pop
or
pop
daa
stos
jns
outs
xchg
pusha
push
push
out
and
inc
fwait
sub
mov
into
out
cs
jo
jns
jg
fs
cs
iret
jb
mov
mov
retf
xchg
test
xchg
ss
pop
cmps
push
lahf
xchg
loopne
mov
fisub
mov
in
out
test
sub
inc
scas
shl
mov
fnsave
sbb
packuswb
xor
jle
xor
enter
je
xlat
out
lods
into
jo
jns
mov
cmps
fs
pop
xchg
mov
cmp
in
ror
cmp
mov
sub
jno
push
movs
scas
aam
lock
xchg
lods
inc
repnz
and
inc
jp
mov
(bad)
dec
pcmpgtd
mov
fst
addr16
ds
xor
test
je
sub
(bad)
sbb
sahf
mov
hlt
inc
and
test
inc
jbe
sub
ins
sar
neg
fwait
sub
in
out
movs
in
cwde
scas
and
addr16
lods
sbb
sbb
sti
popa
sbb
jo
nop
fs
dec
jecxz
pusha
dec
mov
jnp
xor
imul
ins
sbb
push
jae
mov
push
jle
aas
into
dec
jb
in
(bad)
pop
mov
int
popa
sbb
jp
cmps
repnz
(bad)
or
mov
imul
sbb
int
jl
and
xchg
stc
pop
in
mov
jbe
mov
dec
mov
std
push
into
clc
stc
inc
data16
xor
dec
fistp
(bad)
sub
lods
aad
sbb
stc
aaa
div
fs
jno
mov
mov
pop
add
adc
jp
daa
test
push
or
ins
test
sti
rcl
mul
outs
or
outs
cli
inc
jl
popa
sahf
jge
out
or
mov
outs
popa
push
fwait
les
aaa
mov
ror
mov
lahf
stc
xchg
fist
test
jbe
xchg
call
retf
sbb
mov
outs
dec
fdivr
pushf
pop
add
add
hlt
packuswb
sub
xor
leave
jge
mov
cmp
mov
add
sbb
out
es
fnstenv
pop
test
xor
xchg
js
push
adc
mov
es
cmp
out
shr
movs
and
mov
outs
sbb
dec
cmp
push
pusha
(bad)
ret
arpl
out
jmp
pusha
mov
loopne
adc
adc
daa
test
pop
fdivrp
push
add
(bad)
push
outs
and
ja
mov
test
stc
imul
lea
mov
aaa
xor
push
pop
or
pop
mov
mov
sbb
adc
push
loopne
icebp
mov
fcom
sbb
and
mov
jl
mov
cmp
adc
push
mov
or
out
sti
lahf
(bad)
cmps
out
loopne
out
inc
rcr
add
rcl
jbe
inc
lahf
and
sub
ja
dec
push
stc
rcr
mov
mov
pop
add
repnz
stos
jecxz
cmp
cli
xchg
jno
repz
pop
adc
(bad)
shl
fstp
push
sahf
fucomp
push
or
scas
in
scas
popf
pop
aam
xchg
mov
cmp
repnz
(bad)
jl
xchg
shl
mov
pop
(bad)
je
(bad)
mov
push
pop
lahf
mov
call
outs
mov
cdq
pop
jmp
sbb
and
pop
push
stc
nop
pop
and
mov
leave
vdivss
sbb
arpl
push
pop
jp
mov
out
loopne
aaa
test
mov
sub
int
xchg
ss
mov
aas
js
add
cmp
sbb
mov
or
push
frstor
repnz
pusha
sub
leave
nop
pop
mov
mov
dec
shl
jmp
sub
addr16
mov
pop
sbb
fidiv
sub
mov
xchg
cli
clc
sub
adc
sub
scas
mov
mov
add
addr16
sub
cmp
test
inc
cld
pop
push
fimul
sub
imul
pop
outs
jo
mov
retf
dec
mov
add
aad
sub
jns
jne
outs
pop
fisubr
adc
jne
fwait
or
pop
push
jl
pusha
xor
aas
out
sti
fmul
jo
and
popf
pop
mov
cs
out
add
test
into
or
sbb
cmp
mov
mov
nop
popf
js
sbb
lods
repz
cmp
out
(bad)
jb
fild
xchg
loope
sbb
dec
mov
(bad)
mov
sbb
int
mov
test
jg
jg
push
push
ss
jp
addr16
mov
(bad)
dec
jl
div
inc
or
cwde
mov
popa
jp
adc
adc
leave
test
rol
leave
retf
or
cld
push
stos
mov
xor
rcr
neg
stos
add
mov
fild
xor
xchg
cmp
cmp
popf
jbe
sbb
(bad)
inc
pushf
sub
lock
in
sti
out
(bad)
mov
mov
cld
mov
loopne
(bad)
in
add
adc
sbb
retf
add
add
and
ret
stos
out
mov
or
xchg
push
fisub
add
sbb
inc
sar
test
ret
enter
mov
or
xchg
sbb
jmp
adc
lods
(bad)
int
and
jns
jmp
jb
ret
test
mov
mov
jae
leave
xchg
js
lds
aaa
push
(bad)
out
pop
pop
pusha
jp
call
dec
pop
cmp
lods
jbe
add
mov
pop
(bad)
aas
out
js
clc
xor
pop
push
cwde
aas
test
popa
mov
mov
stos
fucom
scas
fstp
jecxz
jae
test
inc
enter
loop
add
jnp
out
fdivr
sub
inc
cmp
rcr
mov
mov
leave
pop
and
sbb
jle
sub
sbb
sahf
adc
cmp
xor
icebp
jecxz
push
cmp
mov
stos
shl
lods
xor
adc
jp
mov
jae
xchg
pop
cmps
xor
cld
add
(bad)
fmul
sub
loopne
mov
inc
leave
jl
(bad)
clc
cmp
jo
ds
mov
pop
mov
mov
sbb
dec
daa
aas
aam
das
popa
mov
add
shl
(bad)
mov
js
repz
stc
shr
call
pop
lods
stc
xor
adc
and
cmp
cmps
fisub
dec
add
imul
in
cmp
das
int3
ins
imul
aam
dec
jmp
jl
jns
shl
cmp
sbb
imul
jnp
je
cmps
cmps
int
call
popa
sub
xor
and
xchg
pop
pusha
cmps
sbb
adc
mov
mov
mov
lock
mov
mov
pusha
aas
add
push
movs
xor
jmp
les
call
jns
jl
movs
xchg
sbb
pop
mov
cmp
add
mov
cmp
mov
in
add
or
jnp
sti
cmp
retf
aas
fimul
cmps
neg
sub
(bad)
sbb
push
stc
or
xor
in
in
sti
and
icebp
gs
mov
les
push
outs
mov
mov
jo
repz
mov
mov
mov
pop
cmp
pusha
idiv
js
xchg
push
mov
retf
pop
push
sbb
aas
add
in
add
push
dec
ins
fcos
scas
mov
mov
cmp
mov
ror
test
xchg
xor
daa
mov
ret
jb
dec
icebp
mov
jg
or
sub
hlt
adc
sbb
pop
leave
mov
mov
jne
imul
pop
jecxz
lahf
mov
jno
call
push
outs
outs
into
or
pop
sbb
retf
lahf
sar
(bad)
icebp
xor
jmp
jge
mov
xor
mov
addr16
jmp
dec
xchg
aad
jmp
sub
outs
loopne
pop
inc
aad
retf
pop
mov
bnd
or
pop
pop
mov
int3
jns
push
cmp
inc
mov
push
fs
fistp
jne
xchg
xor
xlat
lds
dec
retfw
cmp
jns
fdivr
jle
push
dec
test
mov
and
push
mov
push
(bad)
jns
cld
mov
stc
stos
jbe
jmp
xor
or
mov
repnz
jns
jns
jae
stc
mov
leave
cmp
jno
xor
movs
jno
inc
inc
je
mov
xor
ins
sub
jge
aam
scas
mov
cmp
jbe
and
xchg
dec
mov
sahf
adc
and
mov
add
pop
mov
inc
and
sub
std
clc
mov
xchg
add
(bad)
jne
mov
js
sub
adc
sbb
inc
out
jg
mov
int3
inc
stc
ins
leave
call
jnp
mov
xor
pop
mov
jg
and
adc
mov
call
ror
mov
jp
inc
jno
sahf
scas
cld
push
adc
mov
mov
out
fs
pop
test
jns
jecxz
dec
jmp
or
pop
sub
adc
mov
inc
leave
stos
imul
test
ins
shr
jae
rcl
test
cmps
mov
fcmovne
pushf
clc
cli
mov
not
mov
or
rol
cmp
mov
ins
pop
jmp
clc
pusha
mov
inc
clc
mov
les
hlt
sbb
sub
popa
or
mov
mov
mov
jb
mov
cli
cli
push
and
or
lods
push
out
test
cmp
xor
lea
addr16
cmps
call
loop
and
sub
xor
push
mov
into
sub
icebp
movs
cwde
jo
aas
xor
dec
adc
mov
enter
in
sub
aas
xor
mov
xor
jns
dec
lods
test
inc
out
mov
js
cmp
xor
jp
dec
jle
rcl
jo
xor
sbb
mov
(bad)
push
jno
das
pusha
pop
cmp
pushf
pop
push
push
cmp
cwde
push
push
aam
out
mov
pop
xchg
test
out
push
test
aam
sub
mov
add
aaa
xchg
cli
outs
aas
sahf
and
lods
das
jle
in
loop
mov
loopne
add
dec
push
shr
es
sar
cmc
or
mov
das
ins
into
rcr
push
retf
lock
jle
cwde
mov
aaa
or
in
lock
out
cmp
mov
sti
test
xchg
repz
jl
dec
ds
jb
and
xchg
scas
icebp
(bad)
outs
(bad)
fidivr
popf
outs
mov
mov
aas
cmp
sub
fstp
ret
sbb
jno
push
mov
repnz
fs
pop
xor
dec
inc
cmp
xor
mov
mov
sub
popa
pop
in
sar
and
sbb
sub
nop
xchg
sti
repnz
jnp
sub
loope
jb
sti
pop
sub
and
pop
xor
rol
adc
jmp
nop
inc
repz
es
inc
aam
movs
sub
addr16
ds
mov
ds
add
inc
sub
jp
sbb
shl
sub
xchg
sub
push
mov
std
popa
cmp
cli
mov
xor
xor
(bad)
out
pop
pop
push
sub
fstp
mov
mov
gs
sbb
mov
push
ja
push
cwde
jo
popa
movs
in
xor
out
and
pop
rol
push
and
jmp
pushf
mov
mov
stos
clc
sub
stc
cdq
jmp
push
ds
sti
or
pop
fcmovnu
and
sub
push
cmps
push
lods
dec
cmp
add
push
pusha
rcr
add
dec
test
fld
add
imul
cmp
pusha
fisttp
dec
adc
mov
stos
movs
xor
jp
push
fild
sar
dec
jb
xchg
jp
pop
xchg
add
push
inc
pop
mov
jns
jl
sar
push
sbb
mov
mov
or
mov
jp
sub
and
ja
xchg
arpl
clc
push
cs
outs
cmp
jp
pop
aaa
push
mov
and
test
outs
push
jns
lods
outs
push
pusha
or
mov
push
push
(bad)
adc
cmps
test
sub
jmp
jo
add
sbb
jge
pop
repz
pop
rcr
inc
jl
(bad)
aam
add
inc
sub
lods
add
push
xor
fwait
aaa
push
das
dec
das
mov
push
stos
jl
mov
jle
cs
mov
jns
(bad)
outs
push
lahf
das
sbb
pop
aaa
shl
mov
std
adc
jns
movs
test
cmp
pop
je
cs
cmc
mov
pushf
arpl
pop
int3
cld
cmp
cli
sub
mov
ja
aas
pushf
data16
mov
cmps
mul
lods
movs
cmp
iret
xchg
es
lahf
aad
mov
repnz
fadd
inc
pop
jno
ja
pop
clc
rcr
bnd
js
mov
outs
pop
dec
add
daa
sub
jl
call
mov
pop
add
jl
lds
ins
inc
(bad)
fld
adc
cs
loope
hlt
cmp
or
xchg
cmp
mov
pop
fistp
outs
dec
mov
cdq
cmp
fsubr
loopne
push
push
fild
scas
cld
xor
push
cmp
and
push
xor
das
fadd
cmp
aam
scas
sbb
aas
ret
sub
jl
enter
add
rol
call
pop
int3
xor
leave
fwait
push
jg
xchg
sbb
sbb
call
jge
pop
fisub
lahf
sub
js
sbb
out
cld
mov
pop
sub
fistp
pusha
xchg
in
push
fmul
dec
push
(bad)
std
jo
xor
pop
js
ja
ds
push
xor
adc
shl
movs
lods
xchg
mov
and
pusha
sub
mov
loopne
in
pop
fwait
mov
sbb
cmp
sub
and
int3
mov
mov
add
daa
pop
ret
aaa
pop
arpl
pop
jl
int3
ror
sbb
sbb
ja
aas
cmp
pop
jl
retf
mov
cmp
pop
adc
push
rcr
mov
mov
pop
test
fcom
pop
mov
div
xor
mov
addr16
cmps
in
mov
scas
lahf
fwait
sub
dec
mov
aas
mov
pop
push
cwde
out
push
inc
outs
or
add
xor
scas
dec
cmp
push
cmp
push
daa
push
xor
out
jg
push
cmp
push
sbb
jl
jmp
aaa
sbb
loopne
loopne
mov
rcr
jp
mul
cld
sbb
sub
outs
sub
popf
rcl
sbb
sbb
rol
sub
add
push
xchg
aas
mov
add
div
dec
fistp
fistp
movs
cmc
outs
ds
je
jo
push
les
mov
push
js
int3
jbe
ja
inc
ss
adc
leave
clc
mov
cld
aaa
push
sar
call
push
ja
cmp
add
jg
mov
fistp
mov
xchg
jg
data16
into
jge
push
sahf
inc
adc
xlat
cmp
inc
stos
in
loop
jg
lahf
das
jg
es
dec
push
test
lahf
sbb
lea
sahf
aaa
pop
lock
push
jl
lods
or
and
aas
mov
mov
outs
jge
jo
mov
and
jl
out
sahf
das
mov
or
fdiv
in
les
and
stos
pop
and
ja
cmp
add
pop
aaa
push
push
cmp
cmp
pushf
(bad)
mov
and
mov
pop
sbb
ffreep
das
push
jmp
cs
shl
call
movs
rcr
mov
out
push
loopne
movs
pusha
call
xchg
cmp
mov
test
adc
mov
imul
clc
cmc
mov
adc
ds
fldcw
repz
pop
push
mov
inc
lea
mov
sbb
mov
fs
xchg
xor
push
dec
jle
mov
sub
sub
int
pop
adc
pcmpgtb
loopne
and
int3
jb
ror
jp
inc
jns
in
jl
cmps
xchg
add
stos
mov
out
cmp
xchg
sub
fistp
lods
cmp
push
cmp
sbb
sti
lods
test
in
or
fild
pop
aaa
sar
sub
xor
cmp
pop
repnz
in
xor
sub
fistp
js
pop
sub
push
mov
cli
and
sbb
test
mov
jl
leave
(bad)
pop
rcr
psadbw
push
cld
sub
pop
mov
sub
jmp
out
jl
stos
adc
aaa
dec
pop
pop
push
cmp
inc
mov
lods
sub
cmps
sbb
fisttp
test
popf
(bad)
jne
and
cmp
adc
nop
outs
iret
mov
push
scas
sub
push
cmp
aas
add
sbb
mov
jp
push
jl
cdq
rcr
pop
pop
and
mov
or
fwait
icebp
ja
dec
cmps
sub
sub
jge
je
mov
call
pushf
xor
test
mov
fild
pop
pop
in
sub
add
xor
je
aas
mov
mov
cs
pop
sub
adc
mov
cmp
jp
sbb
jle
push
les
out
mov
das
sti
push
and
fwait
push
jne
(bad)
pop
addr16
test
mov
fcomp
xchg
xchg
pop
ins
dec
xchg
cmp
pop
inc
fisub
lods
mov
daa
fisubr
cmp
(bad)
mov
jp
xchg
jge
jp
push
jl
call
xchg
mov
sbb
fidiv
sbb
les
enter
mov
std
aaa
mov
lock
cmp
sub
mov
jg
xchg
aaa
(bad)
aam
mov
jae
in
jmp
jge
jmp
xchg
ja
sbb
jbe
aaa
mov
pop
sub
lahf
mov
cmp
aas
inc
cli
in
mov
retf
retf
mov
ficom
jmp
mov
lahf
jle
(bad)
jnp
cmps
pop
push
jl
jl
shl
ja
or
pop
pop
or
fistp
mov
push
and
jg
call
mov
pop
jns
nop
lahf
outs
inc
ds
mov
inc
sub
mov
mov
jp
sub
push
sbb
(bad)
sbb
hlt
pop
sbb
retf
or
cld
push
add
div
fisubr
mov
sahf
(bad)
enter
stos
fldenv
aas
push
rcr
xchg
into
add
pusha
mov
inc
jmp
or
lds
sbb
xchg
mov
jmp
xor
(bad)
(bad)
push
retf
cmp
push
(bad)
push
sbb
sbb
cld
mov
adc
scas
fistp
push
movs
das
cmp
xchg
sbb
stc
das
outs
call
pop
pop
mov
mov
into
sahf
or
rcr
aam
pusha
mov
pop
fld
inc
sub
and
repnz
and
je
push
daa
cdq
push
jle
aam
jg
ficomp
mov
cmp
add
pushf
leave
jmp
jnp
lahf
outs
gs
std
pop
pop
push
stos
daa
mov
in
adc
pop
sub
dec
iret
mov
cs
pop
popf
dec
rcl
adc
fld
fcom
jg
dec
dec
ins
shr
xlat
aaa
mov
nop
(bad)
cmp
push
mov
mov
mov
(bad)
inc
mov
fsubr
daa
popa
fnstenv
test
or
dec
retf
retf
call
jbe
test
(bad)
(bad)
jl
daa
sub
das
leave
push
pop
push
dec
ins
les
sub
addr16
(bad)
sbb
mov
call
mov
sub
xor
call
sub
mov
xor
jp
test
jno
call
sub
retf
stc
adc
fwait
jl
push
outs
mov
sbb
cmp
daa
das
pop
scas
or
lods
daa
sbb
cmp
sbb
pop
mov
ss
dec
or
cmp
mov
ret
pop
push
xchg
push
pusha
into
xchg
shl
sbb
loope
xchg
or
push
jl
call
pop
test
out
pop
sub
add
cs
aaa
mov
jg
jl
and
jl
sbb
ss
out
jle
push
aam
xor
cmp
cmp
and
sbb
sub
ret
sbb
adc
push
or
and
fcmovnu
jae
in
dec
sub
mov
in
mov
imul
scas
loopne
xchg
adc
sbb
jecxz
jnp
mov
or
jp
cwde
call
(bad)
cs
cs
jp
sti
pop
push
xchg
std
and
sbb
cmp
popf
pop
jl
jp
ficomp
and
pushf
hlt
push
data16
(bad)
cmps
and
push
push
jg
loope
loopne
mov
retf
mov
enter
pop
jne
push
int
xchg
ret
ja
xor
jne
int3
(bad)
dec
or
test
ds
jmp
fisttp
lds
add
jne
hlt
xchg
cld
pusha
push
pushf
lea
jne
daa
sub
pusha
aam
bsr
aaa
mov
call
mov
lea
call
cmc
test
call
mov
pushf
pushf
push
ret
inc
sbb
and
sbb
call
mov
leave
or
leave
stos
js
pop
movsx
leave
outs
ins
push
jecxz
pop
sub
hlt
retf
popf
rol
push
and
rcr
nop
cli
xchg
stos
test
test
push
mov
sbb
out
imul
repz
jmp
ja
retf
jne
sbb
js
xchg
push
xlat
leave
loope
lds
retf
sub
js
push
sar
gs
mov
xchg
popa
repz
pusha
xor
jmp
pushf
mov
lea
jae
shld
lea
mov
bsf
btc
mov
bswap
btr
mov
jmp
jmp
pop
mov
cwde
lea
jmp
push
jmp
push
sbb
cmp
pop
pop
pushf
(bad)
mov
clc
jno
inc
shl
add
stos
test
push
(bad)
inc
jne
test
hlt
push
retf
and
cmp
pop
into
mov
mov
sbb
jle
ficom
mov
xor
mov
xchg
loopne
outs
inc
jnp
icebp
test
xchg
mov
dec
dec
sbb
mov
mov
xor
call
xlat
xor
(bad)
imul
and
not
lods
push
mov
dec
cmc
bt
rol
bt
stc
xor
jmp
jmp
shl
shld
mov
shr
add
bt
mov
bt
cmp
jmp
pusha
clc
es
adc
mov
push
hlt
addr16
mov
popa
es
jecxz
movs
pop
movs
enter
aam
retf
movs
inc
scas
ja
lds
(bad)
aam
adc
xor
lea
fwait
sbb
and
cdq
inc
(bad)
imul
ret
or
push
and
and
sbb
sub
fbld
icebp
and
arpl
xor
add
mov
les
xchg
in
jmp
add
jns
xchg
add
add
jno
or
popa
add
add
add
add
test
add
add
jns
mov
add
add
add
jns
sbb
or
mov
add
add
jno
add
mov
add
add
add
add
or
imul
add
popa
add
jno
pop
add
add
dec
add
add
add
add
add
add
sti
jecxz
add
js
cmp
sbb
cmp
jnp
xor
pop
enter
adc
shl
and
icebp
popf
pop
stc
not
mov
cmp
jmp
and
xchg
leave
jb
ror
jae
inc
pop
xchg
mov
shr
ret
push
lahf
dec
(bad)
pop
jmp
ss
loope
dec
or
xchg
jne
xchg
das
stos
out
(bad)
pop
ror
inc
fild
add
fisubr
cli
test
inc
aas
ret
mov
adc
adc
inc
add
add
add
bound
inc
and
cmp
sub
and
jnp
arpl
jge
ins
(bad)
xchg
or
mov
je
add
icebp
stc
xchg
cmc
and
or
push
int
out
jmp
inc
pop
jl
clc
sub
xor
sbb
test
inc
push
mov
xchg
fldenv
repz
popa
xchg
mov
mov
sbb
or
test
out
stc
dec
shl
cwde
cs
loop
bt
sub
clc
pusha
repnz
pusha
mov
mov
push
lea
jne
xadd
not
btr
mov
movsx
sub
bsf
mov
bt
cmc
pusha
call
test
cmp
call
xchg
push
inc
sub
sbb
sbb
sbb
mov
call
stos
mov
xchg
push
fnstcw
and
inc
xchg
mov
dec
inc
hlt
lods
xor
(bad)
stos
dec
mov
cli
and
pop
loope
pop
cli
shr
adc
test
mov
jle
mov
xchg
inc
fidivr
mov
fisttp
jns
mov
stos
pop
dec
sbb
loopne
outs
jmp
push
aas
sub
sbb
inc
inc
in
and
daa
and
movs
cmp
mov
sub
fadd
bswap
repz
in
jle
sbb
mov
mov
bound
jmp
cmp
shl
cwde
jmp
dec
les
fmul
jae
dec
adc
das
push
rol
mov
mov
imul
rcl
and
shr
mov
test
dec
inc
rcl
fisttp
fisttp
dec
fwait
adc
inc
and
add
movs
cmp
jp
cli
pop
pop
mov
jp
sti
js
mov
pusha
in
dec
ins
xchg
cdq
sbb
stos
lods
das
stos
lea
sar
cmp
(bad)
xor
pop
ror
hlt
sbb
scas
pop
add
push
imul
popf
scas
pop
cs
(bad)
cmp
pop
iret
pop
outs
not
or
xchg
pop
fs
repz
loopne
aad
pop
ror
sub
sub
std
clc
xor
aas
xlat
mov
fistp
pop
das
mov
or
ins
cld
xchg
mov
popf
loop
push
inc
push
xor
cs
ins
add
inc
(bad)
(bad)
(bad)
cmp
dec
sub
sbb
mov
jne
xchg
push
adc
ss
lahf
mov
jg
bound
push
or
sbb
sbb
xchg
leave
sbb
mov
das
jge
adc
(bad)
out
jno
fimul
mov
adc
(bad)
fisub
pop
cmp
ror
rcl
aam
pop
(bad)
xor
add
sbb
sbb
inc
xor
mov
retf
clc
retf
sbb
sbb
(bad)
scas
inc
dec
movs
cwde
(bad)
sahf
pusha
pushf
call
cmc
pushf
not
mov
pushf
bt
rol
mov
jmp
outs
ja
sub
sbb
pop
fnstsw
jg
sahf
pushf
(bad)
(bad)
pop
mov
cs
imul
out
sbb
dec
in
sub
mov
xlat
inc
push
add
sbb
xchg
mov
pop
dec
js
in
(bad)
movs
ss
movs
push
sbb
mov
std
pop
jmp
xchg
sub
es
and
or
loope
and
pop
scas
fisttp
mov
(bad)
or
sbb
outs
cld
push
mov
call
add
dec
outs
popa
fs
imul
add
fstp
mov
std
call
add
lods
lea
jne
call
sub
pop
sub
sbb
and
fs
in
adc
fidivr
repz
ror
pop
stc
pop
ins
(bad)
cmp
lock
pop
test
mov
jmp
sbb
pop
and
rol
or
or
js
cs
lods
or
xor
mov
loopne
mov
icebp
pop
xlat
push
hlt
or
inc
cs
jno
loope
xor
repnz
adc
pusha
inc
mov
dec
xchg
retf
add
jmp
mov
mov
ins
aam
push
jmp
xor
test
push
mov
dec
enter
inc
daa
mov
push
push
or
pop
mov
hlt
pop
stos
and
ins
sub
push
push
cwde
dec
cdq
retf
mov
mov
dec
sbb
mov
ins
movs
setno
pop
push
movs
add
xor
xchg
xor
outs
dec
xor
or
adc
mov
fs
jne
pushf
call
dec
inc
push
dec
inc
dec
xor
cs
ins
add
lea
(bad)
dec
xchg
rol
call
mul
mov
stc
test
sbb
mov
mov
rcr
and
mov
cmc
push
cmc
clc
repnz
mov
push
jmp
cmp
in
add
adc
push
adc
push
push
mov
fs
sub
jae
sub
scas
ins
das
mov
xchg
xor
cmp
aad
sti
jae
call
pop
cmps
lods
sbb
addr16
mov
ins
dec
or
mov
push
and
jmp
jnp
mov
or
mov
jo
aas
js
stc
(bad)
jo
xchg
sub
sbb
daa
movs
and
gs
add
imul
pop
cmp
mov
ret
inc
push
pop
and
arpl
add
test
test
adc
mov
push
or
aad
imul
or
sub
jmp
mov
xchg
or
push
push
mov
lock
jle
or
mov
in
dec
mov
dec
rcr
call
sbb
cli
cdq
fnstsw
fcmove
push
enter
iret
enter
sub
xlat
out
mov
shr
in
sub
leave
pop
jbe
push
je
imul
mov
dec
fs
xor
je
add
mov
rcl
xor
push
enter
pop
(bad)
scas
(bad)
push
inc
sar
xchg
(bad)
repnz
jne
mov
into
call
std
mov
push
or
or
sub
aaa
adc
adc
inc
add
push
(bad)
jmp
pop
(bad)
add
out
in
mov
(bad)
mov
in
out
in
dec
int
pop
(bad)
or
pop
add
in
cmp
inc
inc
add
sti
js
xor
ret
fidivr
repz
movs
cld
cld
push
mov
paddsb
fwait
mov
push
movs
push
cmps
mov
sar
jbe
cmps
fscale
push
sahf
and
loope
sar
jne
xor
repz
into
scas
mov
movs
(bad)
in
pop
mov
int3
mov
mov
daa
loop
in
(bad)
sub
push
sub
mov
push
mov
pushf
rep
pushf
lea
movsx
movsx
mov
pushf
lea
jmp
mov
pusha
pusha
pushf
lea
jmp
jo
xchg
add
in
in
adc
movs
fstp
ficom
mov
sbb
or
rcr
mov
cmp
mov
add
cmp
sub
xor
xchg
xchg
lods
fbstp
jmp
rcr
dec
ss
jmp
push
dec
push
dec
jmp
xor
mov
dec
or
inc
cmps
stc
cmc
push
adc
or
push
movs
std
add
out
movs
sbb
and
and
mov
(bad)
inc
(bad)
in
add
fnsave
mov
xchg
xchg
jg
add
jg
(bad)
std
push
mov
cmp
mov
lods
outs
sbb
mov
test
mov
mov
mov
mov
fisttp
out
retf
mov
dec
mov
pop
ret
and
push
div
jbe
nop
push
jae
or
pop
in
mov
push
pop
test
int
sbb
fst
outs
fsubr
mov
scas
(bad)
xchg
push
arpl
mov
xor
sbb
xchg
hlt
mov
mov
push
ss
mov
cmc
inc
pop
shl
imul
cdq
pop
imul
mov
xchg
test
mov
cld
jmp
(bad)
pop
mov
scas
push
push
xchg
std
xchg
jne
mov
cmp
(bad)
jae
sub
and
xlat
and
rol
dec
sbb
add
sbb
pop
or
enter
xchg
sub
pop
js
int
cmps
jp
mov
adc
adc
jp
adc
mov
add
shl
sets
shr
mov
push
test
push
lea
jnp
je
stc
bt
sub
cmc
clc
cmp
bt
cmp
call
add
inc
jb
jo
dec
popa
jae
inc
popa
je
add
inc
sub
add
retf
jmp
test
sbb
add
outs
aas
jb
push
mov
jo
jo
push
rcl
add
test
popf
xor
js
jle
dec
scas
mov
out
xchg
and
lods
in
inc
push
add
mov
mov
mov
cmp
jae
or
sbb
loope
bound
mul
sbb
lock
jne
iret
and
inc
jmp
push
icebp
cmp
xchg
out
jecxz
jae
push
xor
sub
inc
das
mov
xchg
mov
mov
lock
aam
inc
sub
es
ret
add
(bad)
xor
mov
dec
cwde
pusha
out
push
sub
loope
ret
add
cmp
cmc
cmps
jne
xchg
es
out
addr16
mov
jns
cmp
cmps
push
push
das
add
bsf
neg
bt
mov
adc
cmp
shl
cmp
mov
stc
cmp
pusha
cmp
jmp
das
ja
xor
sbb
sahf
jge
fnstsw
std
(bad)
pop
fistp
mov
retf
dec
mov
add
ror
imul
adc
inc
mov
xchg
sbb
inc
mov
cdq
call
and
jnp
int3
(bad)
dec
add
adc
(bad)
in
sbb
cmp
stos
sbb
pop
sub
mov
xchg
pop
adc
xor
(bad)
fadd
xor
sbb
xchg
jbe
xchg
push
push
mov
adc
adc
popa
cmps
pop
std
cmp
push
lea
(bad)
jecxz
call
in
imul
mov
mov
test
out
jp
arpl
add
mov
xor
sbb
or
mov
mov
and
jae
xor
jp
xor
pop
dec
mov
test
outs
rep
jbe
sbb
ss
mov
add
fnstcw
(bad)
jl
cmp
add
jecxz
mov
dec
lea
jae
cmp
push
test
push
cmp
jmp
add
ja
jo
imul
lea
jae
or
jmp
sti
mov
lods
retf
sub
or
stos
or
push
cld
push
test
inc
shr
mov
popf
dec
test
in
(bad)
call
cwde
jne
fmul
and
or
ret
mov
or
cmp
out
dec
(bad)
pop
lahf
stc
pop
outs
stos
or
fsubp
and
push
in
jl
in
addr16
cmp
or
dec
call
pusha
out
dec
lods
mov
lods
retf
shl
sar
mov
pusha
push
jmp
xchg
or
(bad)
mov
inc
and
and
in
rol
jmp
stos
cmp
dec
add
fadd
in
call
jmp
jle
mov
inc
adc
push
ret
xor
jno
nop
ret
fld
pop
mov
out
cmp
jbe
mov
lahf
pop
lea
mov
jmp
lea
je
push
adc
pushf
lea
jmp
pusha
lea
jne
pushf
setp
pusha
pushfw
pop
dec
inc
pushf
jmp
loope
sub
pause
xchg
xchg
shl
iret
pop
lods
inc
fimul
dec
imul
fisub
mov
shr
out
int
ins
das
mov
mov
in
ja
test
out
push
test
ss
inc
out
fld
mov
fcomp
fstp
sub
mov
push
xor
jle
les
adc
ss
ins
xor
in
adc
push
in
movs
push
and
mov
sbb
dec
in
push
ins
ror
and
xor
jbe
push
stos
repnz
sbb
iret
sbb
jne
movs
repnz
movs
and
gs
add
mov
ss
xchg
and
loop
jp
xchg
ret
adc
xor
fimul
lods
(bad)
mov
sub
dec
dec
jmp
popa
jns
xor
push
ins
out
lea
into
int3
scas
in
das
sub
ins
hlt
loopne
dec
cmc
rol
xor
fidivr
xchg
adc
adc
dec
lea
mov
imul
std
seta
jns
xchg
(bad)
push
mov
mov
mov
(bad)
mov
into
xchg
push
mov
or
inc
jle
stos
pop
jmp
out
(bad)
xchg
xor
add
int3
jle
xchg
mov
pop
sbb
cmp
retf
leave
bound
shr
sahf
inc
lds
or
clc
jmp
(bad)
js
cs
gs
ss
iret
sub
dec
xor
add
fs
mov
push
test
outs
and
popa
and
dec
mov
int
inc
pop
(bad)
push
xor
mov
(bad)
fcomp
sbb
pmaxsw
cmp
les
cld
pop
iret
and
and
ja
and
stc
pop
imul
or
iret
jo
push
jne
adc
imul
or
sbb
and
fisttp
jnp
js
ins
cmps
add
aaa
add
(bad)
test
pop
or
or
clc
test
jmp
add
and
pop
lds
stos
dec
dec
iret
sub
dec
sub
enter
add
fwait
sbb
pop
es
int
sahf
sbb
(bad)
push
push
cmc
or
test
mov
outs
clc
retf
sahf
dec
test
jb
jg
rcl
(bad)
pop
jecxz
ficom
dec
ror
xor
sub
xor
xchg
jecxz
inc
jno
xor
xchg
leave
push
iret
in
push
outs
pushf
lea
jae
jmp
xor
mov
push
mov
pushf
lea
call
call
push
lock
std
std
mov
xchg
mov
ret
jbe
xchg
repnz
ror
cs
icebp
pushf
mov
pop
or
xor
xchg
jl
in
dec
dec
dec
cmc
and
aam
push
mov
fild
adc
test
mov
cdq
rol
test
add
in
xchg
push
inc
scas
and
fistp
mov
jmp
pop
fadd
xchg
pusha
mov
call
dec
pop
jg
add
pop
cld
jg
lahf
jl
std
jns
cmp
popa
in
sbb
dec
in
movs
nop
jnp
xor
and
sahf
push
adc
retf
fst
test
ret
xchg
out
dec
jg
cmp
fs
fnstenv
in
mov
mov
mov
repz
sbb
cmp
fisttp
adc
daa
shl
and
xor
in
sub
xrelease
adc
push
jecxz
inc
jo
(bad)
cmc
in
pop
xchg
or
retf
cmp
sbb
xor
jo
icebp
xchg
(bad)
mov
rcl
push
and
or
adc
imul
call
xchg
xchg
inc
xchg
cmp
and
stos
pop
repz
and
xchg
into
push
(bad)
cwde
stos
fsub
pop
and
ffreep
test
shl
aad
adc
cdq
or
jmp
ss
in
xlat
or
or
aaa
inc
bound
call
jnp
std
or
sahf
xor
ror
xor
lods
sahf
fwait
mov
xor
cmp
pop
lock
pushf
pushf
adc
pushf
pushf
mov
push
ret
call
es
pop
jne
adc
xchg
adc
jbe
xchg
clc
shr
dec
(bad)
dec
lods
paddusb
data16
sub
push
push
jo
sbb
cmp
jb
inc
stc
xchg
or
(bad)
pop
xchg
ss
mov
call
data16
mov
dec
fucom
loopne
inc
cmps
es
xchg
into
xor
fcomp
mov
jmp
adc
adc
lock
cli
push
call
mov
call
sti
(bad)
lock
sbb
push
ins
outs
dec
outs
in
imul
or
xchg
dec
sub
clc
dec
jns
sub
and
inc
mov
in
mov
aad
test
jbe
std
mov
lods
cmc
not
jg
stos
xor
sub
stos
dec
arpl
cli
or
dec
imul
jle
fisubr
lods
fisttp
inc
and
imul
ret
add
xchg
xchg
and
test
(bad)
bound
aam
mov
fstp
mov
and
imul
inc
les
jp
sbb
add
les
(bad)
daa
inc
out
cmps
(bad)
cmc
jmp
push
mov
out
xchg
repz
mov
push
cmps
(bad)
cmp
mov
mov
stos
fadd
addr16
jge
or
pop
inc
lahf
movs
inc
es
jb
in
cmps
inc
pop
loop
gs
push
nop
xchg
loop
and
inc
rol
xchg
add
jp
dec
dec
in
jg
pop
outs
pushf
jnp
xlat
(bad)
cmp
sbb
sahf
jl
cld
(bad)
lahf
mov
or
mov
pop
(bad)
sti
fadd
pusha
in
mov
jne
sub
inc
xchg
sub
popa
data16
sub
(bad)
cld
test
dec
mov
scas
push
loopne
test
pushf
les
jmp
xchg
int3
dec
jns
fdivr
adc
aaa
nop
ins
sahf
hlt
jmp
cwde
mov
jb
mov
mov
and
fnsave
outs
int3
in
jo
movs
pop
cli
movs
outs
jle
and
addr16
aaa
sar
xor
jecxz
mov
lods
cmp
mov
lods
fmulp
jle
mov
leave
xor
jmp
and
fwait
xlat
ins
and
xlat
(bad)
loopne
cld
jp
aaa
lock
add
mov
outs
test
push
jmp
arpl
cmp
ds
sbb
sbb
or
mov
jne
mov
dec
xlat
cmp
(bad)
and
dec
inc
xor
dec
mov
outs
in
call
cdq
mov
xchg
push
adc
repnz
mov
mov
stc
push
in
adc
mov
mov
sti
push
scas
in
sbb
test
mov
test
push
out
movs
jge
xchg
jno
lods
push
test
fbld
les
clc
mov
xchg
xchg
ds
stc
xor
xor
mov
xor
pop
inc
sub
xchg
or
out
out
ja
test
rcl
fwait
pushf
cmp
push
mov
mov
cwde
stos
jns
stc
sub
dec
shl
mov
inc
gs
outs
fs
gs
imul
add
aad
add
in
and
inc
add
add
test
movs
inc
xor
xchg
push
je
mov
neg
inc
and
cmp
in
sub
clc
pop
jbe
jb
sbb
sub
or
xchg
mov
xchg
je
xor
mov
std
into
mov
mov
dec
and
and
arpl
das
cmc
and
sub
aas
fsub
in
push
stc
jnp
sbb
fwait
dec
fwait
or
sti
push
inc
dec
adc
push
call
pusha
pushf
push
lea
call
push
lea
jmp
pushf
add
bt
push
movzx
shr
test
shl
mov
bt
stc
add
mov
cmp
jmp
inc
jmp
cmp
xchg
(bad)
push
push
ja
mov
pop
cmc
push
mov
inc
jle
push
mov
retf
enter
cs
dec
sbb
mov
add
cmp
fdiv
bnd
ja
pop
cmp
cli
pop
mov
call
mov
rcr
lods
aam
dec
dec
ret
push
add
xchg
xchg
in
or
in
add
retf
daa
imul
rcr
push
lock
popa
stos
mov
mov
and
(bad)
mov
jecxz
sub
jmp
pushf
or
jmp
or
add
les
pop
add
inc
les
lods
pop
in
pop
shl
push
xchg
arpl
hlt
div
adc
push
mov
pop
jno
and
in
mov
mov
mov
nop
pandn
icebp
sbb
dec
sub
(bad)
inc
cmp
ret
inc
(bad)
inc
mov
jne
mov
ret
cmp
push
xchg
int
mov
mov
cmp
loope
clc
jmp
cmp
and
loopne
fwait
mov
fadd
push
mov
add
scas
lea
pushf
xor
push
cmp
in
nop
add
movs
cmp
mov
cwde
fdivr
jns
mov
sub
mov
adc
jp
imul
ja
or
add
push
sub
mov
and
rol
(bad)
or
xchg
push
std
jge
adc
and
(bad)
cmp
and
stc
cmp
pop
pop
aas
mov
and
mov
cld
out
pop
nop
scas
lds
mov
mov
ror
cmp
adc
mov
imul
imul
dec
outs
push
outs
imul
je
inc
xchg
cld
mov
mov
mov
or
jle
or
lock
fcomp
xchg
es
sbb
xchg
imul
shl
push
and
stos
scas
dec
jmp
imul
ss
sub
dec
pop
outs
nop
cmps
pusha
xor
js
test
mov
inc
add
dec
lds
fistp
cdq
jae
sub
push
loop
dec
mov
jne
mul
or
inc
call
retf
lahf
sbb
mov
pop
jno
iret
and
inc
pop
ins
fnstsw
or
inc
je
sub
inc
mov
fisubr
mov
call
jle
sbb
fnstenv
jmp
bsf
mov
and
cmp
mov
pusha
jmp
js
dec
inc
add
in
iret
dec
outs
ins
dec
dec
into
lods
outs
push
out
mov
aad
add
add
outs
or
iret
cmp
(bad)
jle
jae
mov
push
int
jmp
mov
pop
inc
mov
test
xchg
(bad)
fsubr
mov
cmps
test
stos
les
fldenv
xor
cs
idiv
mov
scas
cmp
jae
(bad)
cwde
cmps
mov
fnstsw
leave
stos
bnd
ss
and
inc
mov
push
loope
cmp
scas
jl
inc
fs
inc
add
dec
or
stos
or
clc
mov
add
out
adc
fs
jmp
cld
pop
add
ret
jl
inc
jge
out
addr16
cwde
mov
push
push
fnstsw
loopne
xor
js
inc
push
hlt
mov
mov
or
jmp
addr16
call
fwait
and
lods
inc
ret
sub
sbb
ror
dec
aam
mov
jo
sbb
mov
out
outs
test
jmp
(bad)
pop
mov
shr
add
out
or
out
lods
out
lea
in
(bad)
mov
call
mov
leave
pop
test
int
fistp
cmp
cli
icebp
shl
pop
cmp
shr
xchg
or
cmp
adc
cmps
adc
sub
xchg
xor
sub
loop
(bad)
fsub
sbb
fwait
adc
mov
out
fldcw
xchg
movntq
out
sbb
psubsw
inc
lods
imul
repnz
and
cmp
(bad)
call
jge
lea
jae
bswap
jmp
push
clc
shl
call
sbb
sbb
xchg
xchg
mov
adc
not
mov
in
sub
sub
fild
fucom
sub
jb
cmp
push
inc
fdivr
in
sbb
sub
jle
inc
mov
cld
addr16
hlt
int
scas
jbe
retf
outs
push
push
jns
push
xchg
mov
and
sar
xchg
dec
int3
or
das
or
iret
mov
dec
(bad)
movs
mov
jbe
xlat
add
test
shr
test
bound
inc
add
not
xchg
mov
push
push
aam
jne
add
(bad)
popa
cmps
repz
xor
(bad)
call
add
xor
cmp
and
fldl2t
movs
cmp
push
ins
add
mov
inc
in
adc
jns
dec
mov
mov
leave
sub
or
pop
pop
and
and
shl
xor
rep
cmp
loopne
into
adc
and
ret
inc
add
jp
ficomp
js
pop
call
jmp
jbe
xchg
clc
push
sub
push
pop
cli
cmp
imul
mov
idiv
hlt
xchg
pop
sbb
std
stos
inc
in
mov
push
jmp
ficom
inc
sbb
aad
mov
mov
outs
adc
js
jno
outs
lods
lahf
int
or
dec
jns
mov
in
jg
add
fiadd
enter
int
ins
mov
dec
sub
pop
mov
xchg
push
jmp
sub
stc
fild
adc
cmc
mov
xchg
or
adc
mov
push
stc
mov
icebp
sti
ins
out
das
mov
or
fwait
mov
sbb
repz
call
and
inc
and
out
es
inc
mov
das
fnsave
or
std
dec
fild
add
lds
popa
out
jbe
fstp
pusha
push
mov
je
push
test
(bad)
in
lods
sahf
jb
push
push
mov
pop
sti
push
(bad)
mov
xlat
and
stc
sbb
jnp
aas
shr
mov
push
int
bound
icebp
sub
dec
(bad)
push
mov
test
or
ds
mov
sar
adc
(bad)
xor
lods
mov
and
(bad)
inc
fild
push
int3
sbb
int3
cmp
retf
sahf
dec
imul
xchg
sub
inc
stos
adc
clc
dec
ins
mov
mov
mov
mul
jbe
ja
sub
dec
ror
and
mov
lea
jae
pushf
pushf
lea
jne
pusha
mov
jmp
dec
add
dec
add
add
dec
add
add
add
add
add
sub
xchg
add
add
add
add
add
clc
xor
pushf
stc
jmp
hlt
hlt
mov
sbb
jns
imul
mov
mov
sahf
mov
and
sub
pop
sbb
sbb
jne
xchg
retf
in
test
clc
adc
xor
adc
retf
ins
xor
jecxz
xchg
sub
cmp
mov
scas
pop
mov
mov
dec
xchg
mov
dec
movs
cld
add
adc
add
xchg
mov
cmp
fild
test
xchg
ror
mov
gs
pop
cmpxchg
scas
mov
aad
or
fwait
sub
jl
mov
push
mov
mov
ss
in
jmp
mov
pop
cmp
movs
ss
pop
jne
or
push
aaa
enter
cmp
jmp
mov
sbb
push
repnz
shl
aam
xchg
retf
(bad)
inc
sub
je
in
add
xor
and
pop
(bad)
jne
pusha
or
sub
pop
push
or
(bad)
aaa
pop
iret
xchg
mov
cs
repz
lock
rcl
sbb
and
pop
aam
aad
mov
xchg
push
sub
fisttp
add
sbb
or
sub
outs
dec
pop
lahf
pop
int3
loope
cmps
daa
daa
nop
enter
scas
xchg
wrmsr
(bad)
shl
out
repnz
xchg
cmp
ret
sub
pop
out
int3
cwde
imul
and
inc
cmps
inc
push
hlt
jns
xor
inc
mov
pop
test
xchg
call
icebp
and
xchg
mov
je
dec
xchg
mov
shr
scas
push
xchg
mov
adc
shl
and
shl
dec
daa
lds
fstp
mov
jae
ror
mov
test
(bad)
push
pushf
pop
setb
pusha
jmp
repnz
mov
pusha
lea
jne
rol
bsr
movzx
mov
mov
bsr
bsr
mov
rcr
sub
jmp
setb
lods
pushf
pusha
push
push
dec
jmp
mov
bt
bt
clc
clc
and
cmp
add
cmc
test
add
push
lea
jge
dec
push
pushf
pushf
pushf
lea
jne
rcl
bswap
btr
mov
jmp
pushf
pusha
dec
pushf
push
pushf
pushf
lea
jne
stc
pushf
mov
mov
test
cmp
pushf
mov
push
call
call
mov
lea
jb
cmc
cmp
pushf
call
movzx
mov
push
push
mov
and
pushf
test
add
mov
push
lea
jmp
test
cmp
mov
pusha
jmp
add
inc
xor
add
add
add
and
add
add
out
push
add
add
add
and
add
add
sbb
add
push
adc
frstor
or
and
inc
adc
and
hlt
ja
add
add
add
cmps
mov
fdivr
jp
cli
pop
mov
(bad)
dec
push
inc
into
cli
pushf
xor
cld
pop
adc
xchg
mov
sub
sbb
femms
jge
in
push
inc
xchg
inc
(bad)
imul
cmc
fild
add
ret
jmp
clc
push
fbld
out
rol
inc
fwait
loopne
mov
cmp
xchg
loope
inc
repz
jb
push
and
repz
outs
movs
pusha
(bad)
xor
fimul
test
std
dec
rdtsc
rcr
fs
pusha
neg
rcr
add
xor
cmc
not
ror
mov
lea
pusha
cmp
test
push
jmp
jmp
aaa
outs
pop
dec
add
pop
jge
mov
jns
cmp
sbb
xchg
retf
inc
leave
push
xchg
lock
in
push
cmps
xor
sbb
sbb
test
xor
jp
fidivr
pop
pusha
push
pop
(bad)
mov
pop
out
mov
movs
mov
scas
sub
scas
xlat
repnz
and
loope
call
in
out
cmp
push
lock
mov
loope
test
sub
or
call
sbb
push
add
add
stc
pushf
push
not
clc
std
push
popfw
pushf
pushf
inc
push
adc
push
mov
push
push
ret
setg
stc
add
ror
inc
dec
mov
call
add
aaa
icebp
xchg
adc
mov
lahf
(bad)
loopne
or
dec
or
xor
mov
pop
xchg
sub
and
loope
rol
xchg
sub
sahf
leave
cmps
into
fsubr
out
pop
data16
jb
cmps
pop
jae
in
mov
dec
cmp
scas
ss
test
sti
push
dec
add
mov
cmp
sahf
fdivr
mov
push
push
div
xor
mov
or
test
sbb
mov
mov
push
fcmovb
xchg
or
popa
popa
inc
xchg
sub
cmps
lahf
sbb
out
xchg
fbstp
call
imul
movs
jle
(bad)
out
repnz
pop
inc
mov
push
test
call
popf
pop
lds
push
scas
movs
(bad)
push
(bad)
cmc
out
addr16
addr16
out
dec
mov
or
or
repnz
pusha
push
lea
jne
bswap
lea
mov
mov
push
jmp
lea
ja
stc
call
pop
add
sbb
jmp
stos
call
push
sub
(bad)
fnstcw
(bad)
dec
imul
out
push
sub
pop
pushf
push
into
push
mov
test
hlt
addr16
add
mov
cmp
aaa
fild
push
mov
and
xchg
sub
xchg
loope
add
jbe
out
(bad)
data16
(bad)
mov
aas
cmp
sti
add
call
xor
imul
sbb
cmp
xor
leave
push
retf
sub
jecxz
sldt
jmp
outs
scas
pop
dec
add
jg
push
fstp
cmp
mov
xchg
fs
cwde
les
adc
jno
add
dec
push
loopne
sbb
inc
js
sbb
(bad)
jl
dec
push
outs
mov
stc
adc
leave
xor
test
dec
inc
scas
rcr
stos
(bad)
fisttp
lahf
mov
push
mov
addps
sti
icebp
and
ret
or
xchg
sub
jle
fucomip
lahf
int3
jle
push
push
icebp
out
inc
aam
inc
push
dec
call
sbb
dec
ins
dec
dec
cs
(bad)
sub
int
jl
jmp
out
xchg
sub
pop
add
jno
xor
xor
xchg
retf
or
ja
pop
fcom
or
mov
fs
out
pop
in
sbb
xchg
lods
icebp
push
sbb
ss
pop
sbb
shl
xchg
lods
push
test
in
movs
push
les
or
xor
or
sub
jns
or
cmc
xchg
xchg
xlat
hlt
ss
mov
int
daa
mov
mov
push
xchg
jge
es
pop
ja
call
(bad)
adc
mov
xchg
cmp
xchg
jmp
lods
mov
jb
mov
cld
inc
cmp
inc
cwde
je
popa
push
ins
ds
shr
sbb
and
hlt
cwde
pop
mov
push
retf
sub
adc
jnp
movs
outs
adc
and
loopne
inc
repz
mov
pop
jb
out
jmp
and
rcl
push
mov
jmp
jp
and
add
fdivr
stc
cmp
cmp
sub
mov
dec
stos
pop
shl
retf
scas
jmp
mov
xor
or
lds
adc
aad
test
inc
sub
or
inc
fistp
test
mov
cld
loop
fsubr
jmp
dec
dec
lock
sub
mov
push
cmp
rol
adc
push
bsr
bswap
xadd
push
not
shrd
sbb
bsf
push
rcl
bswap
shld
mov
shld
add
mov
setge
mov
shl
sar
ror
sub
pusha
call
arpl
jecxz
add
pop
jns
jns
cmp
xor
imul
div
inc
push
cmp
xor
and
dec
dec
int
inc
pop
sti
ins
pushf
jecxz
arpl
mov
and
sar
adc
pop
je
fwait
pusha
and
push
adc
(bad)
add
add
sbb
outs
sbb
mov
imul
fwait
or
call
dec
jb
cdq
cli
enter
push
inc
push
add
call
mov
jnp
ss
sbb
jge
inc
mov
loope
pop
mov
xor
test
cwde
out
hlt
adc
cwde
ds
pusha
adc
push
arpl
push
out
cmp
bound
or
adc
rcr
inc
(bad)
dec
mov
loope
sbb
aam
mov
xchg
xchg
out
pop
adc
jecxz
into
dec
add
pop
adc
(bad)
push
add
mov
mov
std
ds
shl
fild
cli
sbb
fcomp
loope
imul
les
ficomp
mov
mov
adc
shr
das
ret
sub
inc
imul
loopne
xor
xchg
mov
pop
imul
jecxz
iret
lods
or
lahf
cmp
inc
cld
pusha
addr16
pop
popa
test
cmps
ins
xchg
push
dec
sub
sti
test
call
xchg
jl
aas
cdq
mov
inc
dec
push
rol
jmp
addr16
push
add
push
xor
xchg
div
jne
xchg
hlt
xchg
adc
dec
mov
sbb
mov
pop
cmps
mov
shl
out
dec
push
out
rcr
bound
xchg
push
mov
cmp
fild
lock
(bad)
push
or
adc
lods
out
cmp
fst
inc
mov
inc
cmps
push
popa
stos
adc
in
jne
rcr
outs
mov
pop
sub
dec
aas
or
int
(bad)
cdq
dec
mov
or
mov
lea
call
add
xchg
push
mov
xor
mov
xchg
not
xchg
adc
hlt
in
fdivr
sbb
mov
mov
mov
fcomp
sbb
and
shr
sbb
mov
shr
movs
xor
xchg
push
add
lock
repz
or
and
xchg
pop
ss
and
xchg
clc
inc
pop
test
gs
inc
test
adc
sbb
xchg
out
std
add
add
sub
dec
push
imul
iret
sub
xor
repnz
dec
aad
mov
xchg
xchg
mov
ins
das
cmp
xlat
jno
mov
and
pop
fcom
jp
cmp
mov
cmp
xchg
cmp
jmp
mov
inc
jge
loope
jns
nop
push
ror
imul
fld
imul
mov
loopne
and
stos
cwde
je
shr
and
dec
ins
mov
inc
mov
in
mov
jg
daa
mov
leave
fstp
pop
inc
cld
push
cld
inc
cwde
lahf
adc
mov
in
int
pop
lea
mov
jbe
test
aad
nop
imul
jns
mov
or
dec
cmp
lahf
mov
dec
mov
cmp
push
mov
or
jmp
dec
adc
je
pop
push
in
sahf
neg
sbb
int
out
lods
mov
das
int3
(bad)
mov
mov
cmps
cld
xor
adc
in
(bad)
or
xor
sbb
scas
adc
mov
shl
and
push
frstor
ss
push
lahf
xchg
add
inc
in
daa
sub
mov
movs
jecxz
xor
(bad)
jno
(bad)
pusha
ret
sbb
lods
stos
jmp
sub
mov
rol
pushf
movs
cs
inc
inc
push
inc
outs
gs
adc
je
test
lahf
icebp
dec
jmp
fstp
jbe
push
hlt
lods
jbe
mov
fcom
mov
in
dec
cmp
out
jge
fmul
shr
dec
pushf
push
daa
add
pushf
mov
push
lea
jmp
fiadd
push
add
mov
jmp
call
jmp
mov
fld
loope
jecxz
dec
jno
add
(bad)
push
pop
pushw
push
sub
jle
mov
pop
push
je
mov
inc
cld
cmp
out
push
cmp
loop
sub
bound
pop
cmps
sar
mov
ja
(bad)
test
and
jl
and
movs
stc
fiadd
cmp
sbb
cdq
jmp
ins
jbe
inc
mov
jmp
mov
add
add
mov
imul
rol
and
adc
leave
repnz
mov
lea
jne
push
bts
shl
test
mov
shr
pop
shrd
sub
cmp
dec
pusha
lea
clc
sub
bt
stc
push
pop
test
cmp
clc
test
cmp
call
mov
lea
jae
pusha
xor
push
mov
pushf
mov
lea
call
pushf
lea
jae
pusha
jmp
gs
sub
sbb
or
mov
stos
imul
cwde
jb
mov
clc
stos
push
(bad)
mov
mov
pop
(bad)
jmp
in
cmp
das
neg
lea
pop
adc
dec
xlat
repz
pop
cmc
(bad)
xor
not
jae
daa
mov
rol
cmp
fsub
xchg
scas
and
ins
dec
xor
inc
add
mov
ins
pop
lods
pop
dec
jle
adc
fcom
ret
movs
sbb
push
mov
les
movs
xchg
test
push
sub
jbe
pop
sar
imul
cmp
movs
je
cld
xchg
add
cmp
mov
dec
add
jo
mov
out
or
leave
fs
mov
es
adc
enter
ins
adc
lahf
(bad)
pop
sbb
sub
jne
ja
inc
or
fadd
aaa
cld
inc
dec
jmp
dec
sbb
clc
retf
mov
add
mov
inc
and
pusha
cwde
xor
and
mov
pushf
mov
lea
jmp
scas
outs
sbb
sbb
(bad)
cmp
jg
pop
in
push
cmps
mov
pop
(bad)
jno
fistp
push
or
xchg
cs
or
cmp
daa
mov
push
xchg
aad
pop
fwait
and
add
add
sbb
ins
dec
pushf
cmpxchg
repnz
inc
inc
into
cmp
or
jo
xlat
test
xchg
loopne
ficom
jnp
aam
lahf
fldenv
mov
adc
and
cli
shl
out
add
gs
sahf
pop
pop
push
sbb
push
and
icebp
scas
je
sbb
ins
xchg
dec
mov
mov
fwait
ret
sahf
push
and
mov
xor
cli
stos
dec
jns
clc
push
scas
prefetcht0
daa
in
xor
call
jbe
addr16
dec
addr16
ret
add
jnp
mov
ret
out
adc
int
jnp
dec
or
aad
into
retf
xchg
retf
sub
pop
inc
pop
inc
pop
sbb
ss
jp
mov
stos
jmp
dec
pop
ins
pop
or
fxch
cmp
dec
sti
xchg
stos
xor
push
add
mov
mov
shl
push
retf
jmp
fdivr
mov
dec
mov
das
in
repz
push
mov
ds
pusha
fist
mov
les
jmp
bound
shr
(bad)
mov
in
mov
into
xchg
fistp
jge
inc
aad
mov
and
cmp
jns
fs
push
inc
jbe
mov
test
scas
es
sub
add
dec
cs
scas
ins
out
fdiv
push
jmp
adc
pop
and
movs
push
and
push
popa
sub
dec
lahf
xor
xor
aam
loope
bound
addr16
add
mov
xchg
add
in
inc
(bad)
and
and
es
int3
pop
int3
in
fcmovnb
pop
add
pop
js
(bad)
sbb
cmp
lods
add
pop
ins
cmc
aad
cld
aas
stos
js
daa
addr16
(bad)
fstp
mov
nop
sbb
mov
out
mov
or
sbb
xor
mov
xor
jbe
sbb
pop
fdivr
imul
push
out
dec
jmp
mov
or
imul
pop
dec
fsubr
mov
dec
or
pop
test
cmp
mov
jmp
pusha
lea
je
pushf
sub
stc
mov
cmp
pushf
mov
call
jmp
mov
push
push
mov
push
mov
call
add
pushf
push
jmp
jmp
setns
bsf
mov
pusha
test
bsf
mov
pusha
not
stc
test
call
lea
jg
rep
shrd
bsr
std
pop
cmc
btr
pop
cld
cmp
cmp
popf
pushf
mov
lea
jmp
pushf
mov
mov
lea
jmp
not
stc
cmp
and
mov
pushf
pushf
push
mov
jmp
rep
dec
bt
rol
mov
test
bts
dec
inc
mov
bt
cmp
jmp
push
pop
mov
mov
pushf
push
lea
jmp
jmp
mov
shld
mov
shld
sub
pusha
pushf
mov
inc
inc
jmp
mov
xor
add
jmp
call
clc
cmp
jmp
mov
jmp
clc
add
call
mov
mov
pushf
pushf
pop
jmp
push
pushf
pushf
sub
jmp
push
pop
push
pusha
lea
jmp
neg
clc
cmp
clc
add
test
test
mov
mov
sub
pushf
sub
test
push
jmp
pusha
add
call
call
pusha
clc
sub
cmc
pusha
add
cmc
clc
stc
neg
call
shr
xor
mov
cmp
sub
mov
clc
shr
pushf
mov
mov
push
mov
pushf
pop
mov
call
mov
shl
mov
bsr
das
bswap
mov
cmp
call
shl
shr
mov
mov
jmp
pushf
repz
pop
mov
lea
jmp
mov
pusha
jmp
jmp
call
call
not
cmc
rdtsc
cmc
sub
pushf
push
mov
pusha
jmp
pusha
call
lahf
mov
call
call
inc
ror
rcl
mov
shr
neg
mov
pushf
clc
push
mov
sub
pusha
call
mov
mov
sub
lea
jbe
pushf
push
push
mov
mov
lea
jmp
mov
call
cmp
push
bt
clc
add
push
mov
push
lea
jmp
mov
mov
call
cwde
stc
pusha
cmc
sub
push
jmp
rdtsc
push
lea
lea
mov
push
pop
push
mov
call
mov
jmp
push
mov
cmc
sub
call
jmp
add
cmc
sub
stc
sub
mov
mov
test
pushf
sub
jmp
not
mov
call
jmp
aas
cwde
dec
cdq
mov
btc
jb
neg
mov
stc
mov
cmc
add
stc
shrd
js
pusha
pushf
mov
mov
jmp
jmp
jmp
mov
mov
lea
jmp
mov
mov
pushf
mov
push
pushf
push
jmp
call
push
mov
pushf
mov
push
pushf
lea
jmp
clc
sub
call
mov
pushf
mov
push
push
push
ret
pushf
mov
push
mov
call
call
push
jmp
bt
pusha
add
add
jg
cmc
sub
pushf
cbw
call
mov
pushf
call
push
mov
mov
push
lea
jmp
push
pushf
lea
jle
pusha
push
pop
mov
lea
jmp
xor
bt
mov
pusha
sub
pushf
mov
mov
mov
push
lea
jmp
pushf
call
mov
mov
jmp
pushf
jmp
rcl
mov
aad
mov
pushf
rcr
mov
cmp
pusha
mov
cmc
sub
push
push
push
call
and
and
mov
mov
cmp
rol
btr
lea
pushf
and
xor
bts
bsr
bt
sub
push
rcr
call
dec
mov
dec
stc
sub
seto
mov
pushf
jmp
pusha
mov
pusha
mov
jmp
call
pop
pusha
pusha
mov
mov
lea
jmp
sub
cmc
pusha
imul
mov
pushf
pushf
mov
jmp
mov
mov
push
repz
pop
pusha
lea
jmp
push
mov
mov
push
pushf
lea
jmp
pusha
add
bsr
neg
or
rcr
add
add
setg
bswap
neg
shl
sub
and
cmc
movzx
test
stc
mov
cmp
mov
cmc
cmp
stc
or
pushf
push
jmp
pusha
mov
push
push
call
neg
cmp
call
mov
pushf
push
mov
push
lea
jmp
pushf
mov
jmp
pushf
pop
jmp
mov
pushf
mov
pushf
pushf
pushf
pushf
lea
jmp
not
cmp
cmp
not
call
mov
mov
mov
lea
jmp
jmp
call
idiv
push
jmp
jmp
jmp
push
pop
mov
push
push
lea
jmp
test
jmp
mov
mov
call
mov
push
pushf
pop
pushf
push
pop
mov
pushf
pusha
push
lea
jmp
div
mov
push
mov
jmp
movsx
rol
mov
rcr
stc
mov
cmp
sub
pushf
cmc
clc
shr
lea
jns
push
pusha
mov
push
pushf
pop
call
jmp
push
mov
jmp
jmp
mov
call
jmp
rcl
rol
bsr
cmc
neg
sar
xor
cmc
clc
ror
mov
cmc
mov
mov
add
pushf
pusha
mov
mov
push
lea
jmp
mov
call
push
mov
mov
jmp
and
call
jmp
call
sbb
mov
pusha
add
pushf
jmp
mov
cmc
add
pusha
mov
push
lea
jmp
call
mov
push
pop
push
push
mov
pushf
lea
jmp
jmp
test
cmp
pusha
shl
push
pushf
bt
bt
shr
push
bt
or
cmp
xor
jmp
mov
push
push
pushf
pop
call
mov
mov
pushf
pop
jmp
pushf
mov
jmp
mov
call
call
lea
jne
or
ror
bswap
xor
lea
lea
pop
pushf
push
pushf
mov
lea
jmp
mov
call
call
mov
ror
cmc
cmp
add
mov
lea
jge
push
mov
mov
pusha
mov
mov
mov
push
ret
mov
mov
pushf
jmp
mov
xchg
setne
push
pusha
xchg
setl
not
movzx
repz
pop
lea
btr
push
shld
rcr
bswap
push
xor
neg
push
seto
movzx
push
mov
bt
movzx
neg
push
bts
xor
add
clc
bsf
sub
movzx
or
lea
sbb
sub
inc
movzx
mov
bt
mov
bswap
pushf
mov
shld
rcr
bts
add
add
dec
adc
btr
jmp
call
mov
jmp
jmp
call
div
jmp
movsx
dec
shl
clc
push
dec
xor
lea
js
dec
push
inc
ror
cmp
mov
push
add
lea
ja
mov
push
pushf
pushf
lea
jmp
mov
mov
jmp
mov
jmp
mov
push
push
mov
lea
jmp
mov
mov
mov
pushf
mov
lea
jmp
jmp
test
stc
push
cmp
jmp
and
jmp
mov
call
sbb
add
push
setb
mov
mov
jmp
pusha
lea
js
pushf
mov
pushf
lea
jmp
push
push
pusha
pushf
pop
pushf
call
cmp
shl
mov
pushf
pushf
pushf
mov
pushf
lea
jl
pusha
pusha
pushf
pop
jmp
mov
push
call
add
cmc
pusha
test
call
call
jmp
pushf
push
pop
pushf
pushf
lea
jmp
pushf
mov
mov
push
jmp
mov
pushf
mov
mov
push
mov
push
call
mov
jmp
jmp
neg
stc
push
sub
push
cmp
call
jmp
rcl
test
mov
movzx
cwde
or
pop
dec
xadd
pop
adc
shr
pop
add
neg
btr
popf
pushf
lea
bswap
mov
push
bswap
mov
movsx
lahf
mov
xchg
not
lahf
pushf
mov
not
setnp
mov
movsx
pushf
mov
lea
mov
push
push
ret
pusha
mov
call
push
mov
cmc
push
mov
sub
pusha
call
jmp
mov
pushf
pusha
push
lea
jmp
mov
push
lea
jmp
call
push
xor
test
cmc
cmp
pusha
sub
clc
rol
pushf
mov
inc
bt
neg
pushf
call
clc
pushf
xor
call
sub
mov
cbw
cmc
stc
cwde
push
bt
bt
sub
push
mov
push
mov
lea
jmp
sub
bt
call
push
inc
push
push
push
dec
mov
pushf
lea
jne
jmp
lea
jns
rol
jmp
pushf
pop
jmp
mov
call
pushf
call
push
call
push
pop
mov
lea
jmp
add
test
pusha
call
push
clc
add
pushf
jmp
dec
movsx
xchg
shl
mov
inc
mov
clc
jmp
imul
mov
pushf
jmp
call
pusha
jmp
pusha
push
mov
mov
mov
mov
pusha
mov
jmp
pushf
mov
mov
pushf
push
repz
pop
pushf
lea
jmp
mov
pusha
mov
mov
call
mov
mov
push
repz
pop
pushf
pushf
lea
jmp
inc
cmp
push
neg
sub
jg
stc
xor
call
cmp
cbw
cmp
test
cwde
pusha
sub
push
pushf
mov
pushf
push
lea
jmp
jmp
mov
pushf
push
mov
mov
jmp
push
jmp
pushf
pusha
pushf
pop
call
call
aam
sar
or
mov
lea
pusha
mov
call
mov
push
mov
push
lea
jmp
bt
jmp
mov
pushf
mov
not
mov
not
mov
push
not
push
call
pusha
push
mov
push
call
bt
neg
lea
cmp
cmp
jmp
call
add
jne
pushf
pusha
and
mov
call
shl
mov
call
push
call
mov
mov
push
jmp
clc
test
pushf
jmp
repz
pop
mov
pushf
lea
jmp
sar
shl
xor
mov
pushf
cmc
mov
sub
bt
jmp
pushf
push
pop
mov
lea
jmp
mov
pusha
pushf
call
and
rcr
pusha
mov
inc
mov
stc
stc
test
sub
bt
shr
push
mov
mov
pushf
call
mov
mov
lea
jne
sar
bswap
mov
push
bt
stc
clc
and
jmp
mov
mov
mov
jmp
call
pushf
pop
pushf
push
call
mov
mov
lea
jmp
mov
pushf
mov
jmp
mov
call
mov
pushf
lea
jp
pushf
pusha
mov
jmp
jg
pushf
mov
pusha
mov
push
repz
pop
push
pushf
pushf
mov
lea
jmp
jmp
call
pushf
push
mov
mov
mov
mov
mov
jmp
pushf
mov
push
pushf
mov
push
repz
pop
push
mov
mov
lea
jmp
repz
pop
push
lea
jmp
mov
push
push
pop
push
mov
push
mov
lea
jmp
test
mov
lea
shrd
clc
mov
cmc
jmp
mov
push
mov
repz
pop
push
pushf
pushf
pushf
lea
jmp
mov
jmp
pushf
jmp
pushf
mov
jmp
not
add
jae
bt
cmc
test
sub
cmc
cmp
test
push
sub
pusha
jmp
jmp
pushf
pop
call
sbb
mov
xor
test
add
mov
pushf
seto
jmp
call
push
push
mov
pusha
lea
jmp
mov
pushf
lea
jne
btr
mov
mov
push
test
mov
cmp
and
pusha
cmp
pusha
lea
jne
movsx
stc
add
shld
xor
push
push
mov
pusha
lea
jmp
pusha
jmp
jmp
cmp
rcr
mov
call
mov
pushf
push
push
push
lea
jmp
not
mov
cmp
cmc
sub
cmc
pushf
pushf
lea
pushf
xor
clc
ror
jmp
call
pushf
mov
pushf
pop
jmp
call
pushf
pusha
mov
mov
lea
jle
push
pushf
call
pushf
pushf
pop
mov
jmp
push
pushf
pop
jmp
mov
jmp
jmp
pusha
cmp
sub
pusha
mul
mov
mov
mov
push
pushf
mov
lea
jns
pushf
jmp
mov
call
bt
bt
bt
cmp
call
pushf
mov
mov
jmp
push
pushf
mov
push
pushf
pushf
call
mov
mov
pushf
lea
jmp
lea
shl
add
or
mov
rcr
add
pushf
or
mov
call
call
push
mov
mov
pusha
push
call
cmc
clc
add
call
xor
call
push
pop
pusha
pushf
push
lea
jmp
shrd
or
test
xchg
mov
not
dec
add
setg
sar
ror
xor
sub
setnp
cmc
mov
call
mov
aaa
rcr
mov
push
sub
clc
xor
jmp
mov
mov
jmp
inc
stc
push
call
push
pop
mov
pushf
lea
jmp
pusha
lea
call
cmc
neg
push
sub
clc
test
sub
pusha
pushf
mov
push
mov
push
lea
jmp
pushf
mov
pusha
mov
pushf
pop
jmp
xor
not
cmc
btr
movsx
neg
add
shr
sub
pushf
shl
bsf
xor
lea
neg
setno
clc
xor
clc
adc
xor
mov
rcr
pusha
ror
movzx
push
setge
rcl
mov
bt
stc
call
lea
jne
shl
call
jmp
call
jmp
add
add
push
pusha
mov
push
push
mov
jmp
inc
mov
push
stc
neg
stc
bt
add
call
push
pop
push
pushf
mov
lea
jmp
push
jmp
pushf
mov
mov
push
pusha
jmp
call
call
mov
jmp
call
push
pushf
mov
call
mov
call
pushf
mov
mov
mov
pusha
pushf
push
lea
jmp
call
pusha
pushf
mov
pushf
push
pushf
mov
pushf
push
lea
jmp
movsx
xchg
mov
lahf
aam
mov
cmp
test
sub
push
clc
call
shl
adc
aad
lea
bsr
cmc
and
rcr
rcl
sub
pusha
not
lea
movzx
mov
bswap
bswap
pushf
lea
pusha
xchg
call
call
ror
jmp
mov
jmp
sar
mov
test
js
xor
pushf
pushf
test
stc
sub
call
push
mov
mov
pushf
mov
call
call
pusha
mov
mov
mov
pushf
jmp
pushf
pusha
call
push
pop
mov
mov
push
mov
lea
jmp
jmp
push
mov
call
pusha
stc
push
neg
pushf
push
cmc
mov
xor
jmp
add
pushf
call
push
mov
mov
mov
mov
call
test
das
bswap
mov
cmp
test
add
push
mov
jmp
lea
jne
cmc
pusha
inc
not
xor
pushf
mov
push
mov
lea
jmp
pushf
dec
stc
push
clc
xor
test
mov
cmp
push
sub
stc
cmp
sub
mov
jmp
mov
mov
mov
pushf
mov
lea
jmp
repz
pop
pushf
lea
jmp
call
call
cmc
sub
cmc
rol
pusha
pushf
push
call
repz
pop
push
lea
jmp
shl
neg
mov
clc
clc
stc
jmp
mov
call
push
pop
pushf
lea
jmp
test
call
mov
call
push
pop
pushf
push
lea
jmp
repz
pop
mov
lea
jmp
mov
jmp
mov
call
mov
pushf
push
lea
je
pushf
call
cmp
sub
test
test
xchg
test
jmp
push
pusha
mov
pushf
push
ret
push
bt
jmp
mov
jmp
pusha
mov
pushf
pushf
lea
jmp
lea
jge
push
push
pop
pusha
pushf
pushf
mov
lea
jmp
stc
jmp
pushf
jmp
mov
push
mov
mov
pushf
mov
mov
call
push
mov
pushf
pushf
lea
jmp
pushf
mov
call
push
call
mov
call
push
call
pusha
call
repz
pop
push
pushf
lea
jmp
mov
push
cld
call
movzx
push
bswap
lea
mov
pushf
lea
ja
pusha
mov
lea
js
cpuid
test
bt
bt
pusha
sub
call
mov
mov
jmp
clc
bt
mov
jp
add
jmp
rol
pusha
jmp
pusha
pushf
pushf
pushf
pop
push
push
call
push
pushf
mov
pushf
mov
pushf
pushf
mov
call
mov
push
mov
push
jmp
pushf
mov
mov
mov
mov
mov
mov
mov
call
lahf
pushf
rdtsc
cdq
mov
mov
call
ja
cmc
mov
sbb
cwde
lea
daa
bswap
bsf
sub
jmp
pushf
mov
pusha
call
mov
mov
call
pusha
pusha
mov
push
push
jmp
pusha
pushf
pushf
mov
pushf
call
mov
call
pusha
jmp
movsx
btr
pusha
not
rol
adc
pop
neg
bswap
rcr
ror
bts
shl
and
and
sub
and
mov
pushf
sub
mov
call
mov
jmp
call
mov
jbe
cmc
pushf
add
push
mov
mov
mov
pusha
lea
jmp
test
push
jmp
or
or
rcl
movzx
js
push
sub
cmp
clc
cmp
add
pushf
inc
bt
call
movsx
mov
pusha
cmp
add
push
jmp
push
pushf
push
pop
pushf
pushf
lea
jmp
shrd
mov
ror
mov
call
inc
jmp
jnp
push
pushf
pushf
mov
mov
mov
pushf
pusha
mov
pushf
mov
pushf
mov
pushf
jmp
pushf
mov
pushf
pusha
mov
mov
pushf
pushf
pop
push
pushf
pushf
pushf
push
pop
pushf
lea
jmp
jmp
mov
call
mov
pushf
pushf
call
pushf
pushf
push
pop
pusha
push
pushf
lea
jmp
daa
jmp
pushf
mov
jmp
mov
push
mov
pushf
pop
jmp
mov
sub
pushf
push
mov
pushf
push
pushf
lea
jmp
sub
call
rcr
push
movzx
clc
stc
mov
xor
cmc
jmp
push
cmp
jmp
call
push
pop
mov
mov
pushf
push
lea
jmp
mov
pusha
mov
lea
je
push
pushf
pusha
pusha
mov
jmp
mov
jmp
pusha
pushf
pusha
push
pop
push
mov
push
mov
lea
jmp
add
xadd
mov
movzx
jmp
jmp
push
mov
pusha
mov
pushf
call
mov
mov
jmp
sub
call
mov
push
pop
mov
mov
mov
mov
lea
jmp
call
jmp
adc
dec
movzx
jo
sub
call
push
mov
pushf
push
push
pusha
lea
jmp
call
mov
jmp
mov
pusha
push
push
lea
jmp
mov
jmp
mov
call
pusha
cmc
clc
sub
cmc
clc
mul
push
pushf
call
push
push
pop
pushf
mov
pusha
lea
jmp
push
pop
mov
lea
jmp
add
call
or
popa
ja
add
jb
add
jbe
inc
popa
ja
inc
xchg
jb
pusha
(bad)
or
fbstp
loopne
jbe
pusha
fdiv
sar
or
icebp
je
adc
or
mov
jb
and
or
mov
jne
add
or
fbstp
pusha
(bad)
or
jnp
or
shl
loopne
je
sub
or
cs
inc
pusha
je
and
jbe
pusha
(bad)
or
fdiv
sub
or
std
jae
pusha
dec
ja
inc
popa
ja
inc
popa
ja
add
or
cld
jne
sub
or
xchg
je
pusha
ja
or
inc
jne
inc
cmp
or
cld
jne
sbb
loopne
jbe
mov
xchg
ja
add
or
lds
add
or
fbstp
and
or
aam
or
inc
je
adc
or
repz
cmp
or
loop
or
(bad)
or
dec
ja
mov
push
jne
inc
popa
ja
inc
popa
ja
mov
fbstp
loopne
jb
inc
jae
or
shl
fbstp
(bad)
or
pushf
jne
shl
or
mov
or
aam
or
mov
jne
add
or
lds
inc
pusha
je
adc
or
mov
jb
loopne
jb
sar
or
xchg
jb
and
jbe
adc
or
mov
jae
inc
jae
or
popa
ja
inc
popa
ja
add
jb
loopne
jne
inc
xchg
jb
sub
or
inc
je
mov
mov
or
and
xchg
jb
sar
or
ret
je
sbb
or
stos
je
add
or
lds
and
or
fdiv
sar
or
cmp
or
shl
push
jne
mov
mov
je
inc
cmp
or
mov
je
inc
popa
ja
inc
popa
ja
loopne
jbe
inc
mov
ja
sub
or
cmps
jne
add
or
xchg
ja
adc
or
shl
shl
or
jnp
or
cs
add
or
lds
add
jbe
sbb
or
xchg
ja
loopne
je
inc
cmp
or
ja
or
cld
jne
sar
or
repz
pusha
mov
jne
add
jbe
inc
popa
ja
inc
popa
ja
pusha
dec
ja
mov
mov
jne
inc
pusha
je
sub
or
loop
or
ja
or
inc
jne
pusha
dec
ja
and
or
repz
and
or
lds
add
or
adc
ja
sbb
pusha
shl
sar
or
mov
jb
sub
or
sbb
add
jb
shl
loopne
jne
inc
popa
ja
inc
popa
ja
and
jbe
mov
pusha
je
loopne
jbe
sub
or
jae
or
and
jnp
or
push
jne
inc
in
jae
pusha
fdiv
loopne
je
or
or
pushf
jne
add
or
lds
inc
in
jae
pusha
inc
je
mov
inc
jne
add
or
push
jbe
sub
or
stos
je
rcr
or
xchg
jb
pusha
mov
je
inc
xchg
jb
loopne
jb
inc
popa
ja
inc
popa
ja
inc
cmp
or
mov
or
dec
ja
pusha
fdiv
pusha
jne
or
loop
or
inc
jne
pusha
dec
ja
inc
in
jae
pusha
fdiv
sar
or
aam
or
mov
or
pushf
jne
add
or
lds
add
or
mov
or
jno
or
js
or
shl
and
jbe
adc
or
mov
ja
shl
push
mov
rcr
shr
or
shl
mov
stc
sub
cmp
jmp
mov
jmp
cwde
jg
movsx
lea
mov
pushf
pusha
mov
jmp
mov
bt
mov
sub
pusha
stc
mov
jmp
jmp
repz
pop
push
pushf
mov
push
lea
jmp
bswap
mov
xor
mov
pushf
add
pusha
pusha
push
mov
mov
pushf
pushf
lea
jmp
cmp
sub
mov
jmp
pushf
mov
jmp
sub
jmp
pushf
push
pop
push
lea
jmp
mov
jmp
push
jmp
mov
mov
pushf
push
lea
jmp
push
pop
test
pushf
add
std
pushf
pushf
push
popf
pusha
mov
lea
jmp
jmp
push
mov
push
push
push
mov
push
mov
call
bt
clc
add
pushf
pusha
mov
push
push
lea
jmp
mov
pusha
mov
push
jmp
jmp
call
call
jmp
push
mov
jmp
call
pushf
mov
jmp
setns
cwde
jmp
mov
push
mov
mov
mov
call
pusha
mov
push
push
lea
jmp
jmp
push
mov
pushf
pop
jmp
call
pushf
mov
call
mov
mov
call
movsx
ror
aaa
aaa
mov
bt
clc
jmp
mov
jmp
push
call
stc
cwde
pushf
sub
call
mov
mov
mov
pushf
mov
lea
jmp
mov
pushf
mov
call
call
movzx
setle
setnp
inc
shrd
bts
mov
test
cmc
cmp
add
call
pushf
jmp
mov
call
mov
call
mov
pushf
jmp
push
popf
mov
push
pusha
lea
jmp
mov
mov
call
call
shld
mov
mov
mov
jmp
pusha
lea
cpuid
clc
bt
clc
bt
sub
bt
push
cmp
push
call
pusha
mov
pushf
mov
mov
jmp
jmp
mov
pusha
pusha
mov
push
mov
mov
lea
jmp
call
movzx
lea
setle
mov
push
lea
pusha
push
mov
pushf
lea
jmp
repz
pop
pushf
lea
jmp
pushf
pushf
call
pushf
pushf
lea
je
push
jmp
sbb
mov
shl
pusha
mov
call
mov
mov
mov
mov
repz
pop
push
pushf
mov
lea
jmp
cmp
call
jmp
cmc
xor
mov
pushf
cmp
bt
sub
call
mov
pusha
call
push
pop
push
pushf
mov
lea
jmp
call
shrd
mov
cmp
cmp
bt
test
add
pushf
mov
pushf
lea
jmp
jmp
mov
mov
call
sub
pusha
pusha
mov
call
mov
push
pop
pushf
push
push
lea
jmp
jmp
jmp
shl
push
pushf
call
repz
pop
push
pushf
mov
lea
jmp
push
mov
pusha
mov
mov
pushf
mov
pusha
call
add
cmp
movzx
adc
xor
dec
shrd
xor
movzx
sbb
movsx
add
bswap
xor
mov
jmp
jl
pushf
pushf
mov
pushf
jmp
mov
call
mov
mov
pushf
pushf
mov
push
call
cmp
sub
jmp
setbe
mov
mov
mov
mov
call
mov
push
pushf
call
call
call
cmc
mov
call
stc
rol
movzx
neg
ror
pusha
push
ror
inc
shld
add
and
xor
movzx
mov
bt
add
pusha
mov
push
pushf
pushf
lea
jmp
jmp
pusha
push
push
mov
pushf
mov
mov
lea
jl
push
mov
call
push
mov
mov
mov
pushf
jmp
pushf
jmp
pushf
jmp
mov
cmc
call
shrd
cmp
sub
sar
mov
push
test
sub
jmp
mov
mov
repz
pop
push
lea
jmp
bt
cwde
lahf
rol
mov
add
call
mov
call
mov
mov
push
push
lea
jmp
add
pusha
pushf
pop
pushf
pusha
push
push
pop
pushf
lea
jmp
lea
jne
push
stc
cmp
sub
push
xchg
pusha
pushf
call
repz
pop
mov
lea
jmp
mov
jmp
mov
jmp
call
sub
jg
cmp
add
cmc
shld
jmp
pushf
mov
call
push
mov
call
shr
sub
cmp
mov
call
call
call
mov
mov
mov
mov
mov
pushf
pop
call
mov
mov
repz
pop
pushf
push
pushf
lea
jmp
bsf
mov
setbe
rcl
sub
mov
clc
pusha
clc
add
cmp
cmp
cmp
shrd
pushf
lea
je
push
push
mov
push
pushf
pop
push
pushf
jmp
push
pushf
push
mov
pusha
pushf
pop
jmp
bt
stc
jmp
repz
pop
mov
mov
pushf
pushf
lea
jmp
pushf
push
push
mov
pusha
jmp
mov
pushf
pushf
jmp
mov
mov
pushf
pop
jmp
and
jmp
not
bswap
mov
pusha
mov
push
mov
push
pushf
pushf
pushf
lea
jmp
cmc
not
movzx
call
push
lea
je
cmp
pushf
jmp
push
pushf
jmp
mov
push
mov
lea
mov
pushf
lea
jmp
pushf
pop
lea
jl
pushf
push
push
pop
push
mov
lea
jmp
push
lea
cpuid
pushf
call
push
pop
mov
mov
lea
jmp
call
mov
push
jmp
shld
shr
cmc
mov
stc
cmp
cmp
add
pusha
pushf
pusha
mov
lea
jmp
call
jmp
pushf
pop
pushf
pushf
jmp
pusha
call
xor
mov
mov
dec
shl
mov
cmp
call
mov
pushf
mov
pushf
repz
pop
mov
mov
mov
lea
jmp
movsx
mov
ror
adc
mov
bt
pusha
mov
sub
pushf
call
mov
pop
lea
push
pusha
pushf
pushf
mov
pushf
jmp
repz
pop
pusha
pushf
mov
push
lea
jmp
push
call
call
jmp
mov
push
pop
pushf
pushf
pushf
lea
jmp
add
add
add
add
add
arpl
add
add
and
add
add
or
add
test
add
mov
popa
add
shl
add
add
add
add
aas
add
add
add
jne
add
test
add
add
add
add
add
add
add
mov
add
add
add
add
add
dec
add
add
add
sahf
add
add
add
add
add
add
inc
add
add
lds
add
sub
add
push
push
add
add
add
push
add
cld
push
add
popf
pop
add
int
add
bound
add
stos
or
add
or
add
add
inc
or
add
or
add
or
add
or
add
or
add
or
add
add
cmp
add
loop
add
adc
push
add
lea
add
mov
push
add
dec
add
sub
add
dec
lsl
or
add
lsl
sub
add
ins
adc
add
adc
add
add
aas
adc
add
add
test
add
test
add
loope
add
add
add
xor
add
jo
add
mov
adc
add
adc
add
adc
add
add
jbe
add
mov
add
in
add
adc
add
adc
add
add
movs
adc
add
adc
add
adc
add
adc
add
pop
adc
add
(bad)
adc
add
clc
adc
add
dec
push
add
arpl
add
