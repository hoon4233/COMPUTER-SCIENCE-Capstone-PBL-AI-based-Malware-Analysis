(bad)
data16
mov
or
push
push
dec
add
pop
add
or
cmps
mov
sub
dec
gs
dec
add
cmp
gs
or
leave
or
gs
and
cmp
jns
out
not
xlat
jge
inc
cwde
adc
(bad)
addr16
add
inc
sub
nop
mov
fnstenv
pop
add
mov
xchg
gs
or
out
add
jae
or
xor
popa
mov
lods
or
adc
loope
pop
in
or
mov
scas
mov
in
movs
mov
pop
jo
mov
dec
cs
pusha
mov
mov
scas
or
and
in
push
mov
in
test
and
cdq
xchg
daa
in
test
gs
(bad)
lahf
add
fcomp
in
or
jmp
stos
push
cld
and
or
daa
in
xor
or
out
scas
or
xor
or
call
in
adc
pop
dec
es
dec
test
pop
pop
dec
es
sar
jns
adc
popa
mov
lods
cmp
add
adc
jno
out
xchg
add
(bad)
neg
call
jo
add
fcomp
popa
add
lods
es
jb
in
pop
ins
popa
add
iret
pop
adc
fst
push
xor
movlps
lock
(bad)
sub
ss
or
outs
add
pop
gs
mov
ins
in
push
inc
xchg
loope
cld
mov
es
into
or
or
out
add
movs
cdq
push
sahf
fs
or
mov
mov
call
xchg
daa
in
loope
sbb
or
jne
dec
es
enter
outs
int
fucomp
or
gs
js
gs
cmps
outs
xor
aad
or
adc
mov
gs
or
lea
xchg
daa
in
arpl
fs
or
mov
ins
xchg
or
xor
dec
call
mov
add
es
or
xor
into
xor
ins
add
or
int
paddsb
or
test
push
aad
or
and
and
inc
pop
dec
es
add
dec
lea
ds
and
loope
push
in
or
cmps
mov
in
mov
inc
daa
gs
push
gs
pop
jo
push
mov
ss
sbb
or
fldlg2
sub
paddsb
paddsb
or
test
mov
in
loope
sbb
push
xor
gs
inc
in
imul
loope
pop
not
(bad)
int
xchg
stos
loopne
mov
cs
or
call
es
aam
gs
pop
into
pusha
fwait
or
push
sbb
or
popa
lea
popf
pop
neg
xor
in
mov
imul
jge
push
sub
int
outs
iret
aaa
fld
push
es
scas
loopne
mov
sbb
call
jge
das
pop
scas
cmp
adc
leave
add
icebp
jbe
test
popa
sbb
or
or
jl
call
es
sub
es
sbb
push
sub
sbb
clc
not
xchg
fst
cld
not
add
pop
gs
and
cdq
cmc
into
cld
xchg
or
ins
sbb
push
sub
xor
xchg
icebp
daa
adc
mov
gs
or
ins
ins
into
ins
cmp
lods
push
js
das
pop
scas
sub
xor
jno
push
vprotd
and
into
stos
and
pop
dec
jl
or
paddsb
push
imul
jo
gs
das
xchg
cwde
or
fst
hlt
not
adc
in
not
adc
lods
jo
gs
fst
adc
cmp
or
xchg
cwde
or
pop
movs
lods
loop
in
adc
shr
std
scas
mov
mov
sbb
mov
dec
ficom
test
retf
scas
xor
and
pop
dec
es
std
es
cmc
mov
icebp
scas
cmps
in
retf
scas
xor
and
pop
dec
es
adc
(bad)
out
test
pop
cs
or
sbb
daa
es
movs
lods
adc
pop
in
or
aad
push
jne
dec
shr
test
jl
out
test
xor
in
inc
gs
(bad)
in
test
mov
call
fistp
mov
in
out
and
in
or
adc
mov
adc
sahf
call
out
cmps
mov
or
gs
push
gs
pop
jo
addr16
out
mov
loope
adc
fcomp
addr16
call
scas
lock
fcomp
scas
or
out
mul
ror
adc
iret
mov
gs
inc
scas
xchg
pop
sbb
xor
xor
fs
and
fldenv
aad
pop
(bad)
addr16
call
fcomp
adc
rol
adc
fcomp
adc
scas
loopne
neg
call
and
fldenv
mov
gs
jns
mov
in
gs
movs
mov
pop
jo
addr16
sub
nop
push
sahf
mov
or
xchg
mov
scas
and
arpl
add
pop
gs
sbb
fisubr
cld
pop
scas
movs
sbb
out
jmp
fistp
ret
scas
mov
and
cs
pop
mov
in
and
and
dec
shr
test
and
dec
fidivr
mov
out
cmps
mov
pop
jo
addr16
sub
adc
and
and
xor
dec
inc
add
push
gs
sbb
fisubr
cld
pop
scas
movs
sbb
out
jmp
fistp
ret
scas
mov
and
cs
pop
mov
fimul
es
mov
scas
and
arpl
scas
or
jge
push
js
and
pop
jne
mov
push
xor
sbb
and
and
xor
or
shr
adc
cwde
popa
aam
fmul
imul
xor
push
pusha
(bad)
mov
dec
pop
mov
adc
popa
gs
cmp
cmp
add
mov
jl
fidivr
aas
mov
gs
pop
popf
gs
fldenv
mov
sub
mov
imul
imul
cmp
call
jne
add
fistp
pop
add
and
loope
mov
out
cmps
mov
pop
jo
addr16
sub
fs
jb
push
or
shr
cmc
scas
mov
sar
gs
dec
xchg
dec
call
push
ins
xchg
dec
gs
push
gs
mov
ins
in
or
and
in
sub
and
adc
mov
out
cmps
mov
pop
jno
cdq
add
in
nop
jl
in
mov
stc
dec
dec
es
add
xor
in
pusha
popa
adc
out
hlt
div
psubusw
adc
ss
ficom
gs
into
mov
mov
out
cmps
mov
adc
push
ins
push
dec
sbb
int
fimul
loope
retf
add
or
stos
push
gs
test
mov
or
in
pushf
or
in
das
sbb
adc
loope
sub
std
push
leave
scas
and
add
adc
dec
psubsb
call
mov
retf
in
sub
sub
arpl
gs
movs
movs
call
dec
es
jmp
jo
or
gs
movs
inc
es
das
mov
test
or
movs
lods
loop
in
adc
fsubrp
sub
pusha
adc
fnstcw
shl
gs
sahf
dec
in
or
lea
es
jnp
dec
ror
mov
nop
mov
es
push
movs
inc
xchg
mov
pop
shr
push
mov
out
test
dec
es
mov
gs
mov
stc
dec
dec
es
adc
xor
in
int
mov
xchg
test
in
or
adc
es
adc
adc
loope
pop
in
or
cli
(bad)
daa
in
test
xor
adc
fldenv
jl
out
xchg
test
in
or
cmp
or
in
cld
cs
mov
jno
or
call
test
pop
lods
pop
adc
in
test
or
loope
or
outs
je
gs
pcmpgtb
or
pop
nop
mov
es
and
scas
loopne
neg
call
fs
rcr
xchg
daa
in
jg
out
jne
daa
in
or
in
test
es
into
cwde
lahf
or
cmp
rcl
mov
test
dec
fsubrp
test
dec
es
cdq
jmp
rcr
or
gs
lods
lods
sbb
sbb
sbb
mov
cmp
jo
fldlg2
das
mov
in
jl
or
test
(bad)
daa
in
and
sbb
clc
xor
gs
or
adc
cmp
xor
in
imul
xchg
dec
dec
es
js
es
fisubr
xor
in
neg
gs
and
mov
call
cmps
dec
in
or
gs
jge
les
fs
add
and
arpl
outs
and
call
es
dec
sub
in
imul
in
mov
out
cmps
mov
sbb
mov
cmp
gs
scas
xchg
ins
inc
in
or
and
mov
push
call
or
ins
aaa
jl
mov
in
or
and
in
sub
pop
in
sbb
(bad)
sub
mov
arpl
dec
and
ins
sar
popa
outs
ins
fisub
dec
cs
test
cmp
in
or
xchg
or
loopne
dec
stos
fs
loope
xchg
adc
das
movs
cwde
or
movs
sbb
or
dec
pop
xchg
in
stos
inc
shr
icebp
daa
popf
gs
movs
add
or
mov
gs
fsubrp
sub
cmp
and
and
inc
push
pop
aad
and
je
out
cmc
es
adc
fsubrp
sub
and
mov
push
in
push
mov
out
cmc
es
cmc
es
not
test
mov
or
or
pop
ins
into
mov
in
or
or
or
or
lods
popa
es
lods
or
inc
or
in
test
or
loope
or
or
out
mul
ror
adc
test
mov
not
add
dec
gs
arpl
call
out
popa
(bad)
test
loope
or
or
and
arpl
adc
fmul
in
or
mov
in
gs
sahf
int
or
(bad)
enter
mov
jo
jp
mov
(bad)
mov
in
das
push
sub
in
iret
mov
gs
(bad)
daa
in
loope
or
or
call
jbe
pushf
repnz
push
cmp
xor
in
in
loope
adc
or
or
(bad)
adc
in
pop
(bad)
adc
xor
adc
mov
adc
mov
popa
in
or
xchg
xchg
call
(bad)
call
fs
inc
scas
and
add
adc
(bad)
xchg
jo
fldlg2
das
test
xor
in
and
addr16
jno
or
gs
and
leave
sub
fild
es
retf
in
or
call
jbe
aam
jno
gs
fisubr
mov
or
adc
pushf
adc
add
popf
adc
fldz
imul
jb
scas
or
cmps
popa
mov
les
fs
jne
and
add
push
mov
gs
outs
movs
fcom
fcomp
out
or
in
hlt
fstp
jno
es
dec
cmp
hlt
fstp
sbb
(bad)
sub
fwait
ret
adc
ftst
das
mov
dec
neg
call
mov
push
mov
xor
adc
jbe
mov
repnz
gs
mov
imul
neg
mov
lods
or
out
mov
movs
pop
cmp
cmps
in
or
in
fld
gs
arpl
or
test
and
loope
xchg
adc
movs
mov
in
or
xchg
dec
stos
or
es
adc
push
sub
es
into
mov
fs
or
paddsw
test
dec
lea
fstp
adc
es
cs
test
fwait
cwde
adc
fnstenv
add
rcr
shl
fldenv
jge
mov
adc
es
arpl
or
test
and
loope
nop
adc
movs
mov
in
or
xchg
dec
fmul
es
adc
in
sbb
(bad)
sub
es
into
mov
fs
or
paddsw
test
dec
lea
int
pop
adc
es
cs
test
fwait
cwde
adc
fnstenv
add
rcr
shl
fldenv
jge
mov
adc
es
cmp
jo
fldlg2
das
arpl
or
test
and
loope
nop
adc
movs
mov
in
or
sub
gs
or
mov
daa
in
popa
jbe
lods
or
xchg
sbb
(bad)
sub
es
into
mov
fs
or
paddsw
test
dec
lea
std
fstp
adc
es
dec
dec
test
fwait
cwde
adc
fnstenv
add
rcr
shl
fldenv
jl
paddsw
test
neg
call
movs
mov
in
or
sub
gs
or
outs
mov
call
and
popa
mov
call
fstp
jmp
or
(bad)
mov
pop
mov
adc
fcomp
in
or
gs
mov
call
fstp
adc
in
test
mov
popa
in
or
call
fnstenv
int3
and
shl
mov
adc
sub
sub
repnz
outs
gs
mov
outs
mov
call
es
mov
dec
xchg
or
add
mov
sub
gs
or
call
fnstenv
adc
jbe
fdiv
jo
gs
xchg
mov
cmps
popa
mov
call
fs
div
aam
xor
or
gs
fisubr
mov
call
adc
loopne
neg
call
es
and
shl
mov
adc
sub
in
or
into
call
fstp
adc
in
test
mov
data16
or
gs
es
loopne
neg
call
fnstenv
aam
arpl
in
inc
in
imul
es
leave
and
adc
mov
call
jno
gs
(bad)
xor
(bad)
in
das
mov
in
push
mov
in
js
gs
mov
adc
xor
imul
into
push
or
out
add
fcomp
in
or
loop
gs
mov
lods
test
in
fwait
adc
xor
in
test
xor
in
mov
jno
ror
mov
imul
fstp
adc
fld1
imul
fcomp
or
aad
popa
mov
movs
mov
add
call
lods
lods
fadd
fcomp
mov
add
push
data16
in
mov
gs
retf
in
or
call
lods
loopne
neg
call
es
or
push
es
in
mov
sub
test
lods
loopne
neg
call
scas
and
add
push
mul
gs
mov
gs
arpl
lea
arpl
gs
(bad)
push
xor
in
sub
mov
imul
call
jbe
pop
jns
fwait
adc
lahf
popa
in
or
xchg
dec
test
out
sbb
gs
cli
sub
lods
fstp
adc
in
test
or
xchg
jo
fldlg2
das
mov
in
push
mov
out
(bad)
fstp
push
popa
push
test
neg
call
es
or
push
pop
daa
gs
mov
gs
das
fs
or
call
fstp
adc
fnstenv
int3
and
ror
mov
adc
sub
aaa
or
mov
fldcw
mov
gs
or
call
es
adc
rol
aad
adc
popa
in
push
push
fstp
out
es
push
fstp
arpl
es
gs
or
mov
stos
loopne
neg
call
stos
loopne
neg
call
movs
mov
adc
(bad)
and
in
or
adc
neg
in
adc
xchg
cmp
imul
adc
fcomp
adc
fnstenv
in
mov
imul
popa
jle
scas
or
call
movs
mov
test
(bad)
fstp
mov
div
fdiv
jo
gs
xchg
jle
adc
scas
cmps
adc
loopne
neg
call
sub
loope
fstp
adc
jbe
fdiv
jo
mov
div
fdiv
jo
adc
loopne
neg
call
sub
add
fstp
adc
es
iret
mov
gs
sub
gs
inc
in
imul
fstp
adc
out
(bad)
fwait
adc
push
imul
jbe
fdiv
jo
outs
mov
call
mov
xor
in
mov
xor
in
mov
xor
in
(bad)
push
xor
in
imul
lods
push
adc
mov
(bad)
fstp
das
pop
scas
add
es
mov
jbe
gs
gs
or
xor
into
mov
jbe
cmps
or
cmps
push
in
into
arpl
ins
dec
ret
or
or
add
dec
gs
mov
popa
add
rcr
pop
dec
es
xlat
int
sub
adc
(bad)
in
or
gs
(bad)
cmps
ins
into
mov
adc
lods
sbb
sbb
adc
loope
adc
fstp
jge
arpl
in
or
xor
ja
push
pop
inc
inc
mov
and
into
dec
in
dec
paddsb
or
xchg
dec
gs
inc
gs
and
add
inc
gs
push
out
cmps
mov
sbb
fist
stc
daa
xchg
gs
fldenv
mov
movs
inc
call
adc
sbb
loopne
leave
adc
inc
aam
addr16
mov
ins
jl
es
clc
lods
or
gs
or
pusha
test
addr16
shl
stos
data16
lods
or
shr
dec
mov
push
ja
gs
xor
gs
or
jmp
mov
in
adc
add
jmp
cmp
in
sub
lock
movs
test
dec
scas
and
and
dec
es
or
gs
add
cli
lods
or
in
xor
loopne
or
sbb
cld
lods
or
adc
test
clc
lods
or
pusha
aam
addr16
psubusw
xchg
addr16
rol
sub
and
or
pusha
aam
addr16
mul
adc
es
jmp
sbb
(bad)
iret
dec
out
or
in
mul
gs
mov
jge
dec
es
dec
mov
cmc
lods
or
push
adc
fst
in
or
iret
out
or
in
dec
ss
mov
jge
dec
es
add
jmp
jge
dec
es
cwde
push
pop
movs
add
mov
add
or
in
adc
and
lods
test
fcomp
jae
es
push
pop
movs
add
adc
sbb
loopne
loope
mov
pusha
add
gs
jmp
jge
dec
es
push
pop
movs
add
mov
ins
jecxz
es
adc
pusha
test
addr16
or
gs
mul
adc
es
(bad)
fs
loopne
loope
mov
popa
in
or
les
xchg
addr16
or
cli
lods
or
xchg
or
cmps
push
lods
loopne
gs
or
out
or
pusha
aam
addr16
test
cld
lods
or
pusha
in
gs
gs
test
clc
lods
or
pusha
aam
addr16
mul
adc
es
xor
stc
in
or
in
sbb
(bad)
in
sub
es
gs
cmp
mov
or
gs
add
cli
lods
or
in
inc
sub
sub
or
pop
or
lds
pop
movs
popf
out
and
scas
or
in
or
sbb
or
adc
es
adc
push
adc
shr
in
and
or
pop
jae
es
mul
pop
jae
es
sbb
(bad)
in
sub
es
add
mov
int
or
call
and
dec
es
in
or
(bad)
pushf
test
gs
setne
sub
jmp
sub
gs
or
pusha
pushf
test
outs
jmp
sub
test
or
push
and
in
mov
lods
jl
call
enter
es
dec
fstp
or
gs
add
fs
mov
and
es
sbb
sbb
or
ins
je
arpl
cdq
data16
loop
in
repz
enter
jae
es
stc
daa
xchg
gs
scas
lods
lods
and
or
xor
scas
and
mov
jmp
repnz
mov
ins
jl
es
gs
setne
movs
inc
loopne
data16
loop
in
and
lods
jo
cdq
data16
and
mul
imul
gs
sub
lods
or
out
inc
in
or
gs
loop
in
and
lods
jo
cdq
data16
daa
in
mul
imul
gs
sub
lods
or
or
shr
rol
push
sub
js
and
pop
jbe
mov
sbb
xchg
or
fldenv
mov
pushf
daa
in
loope
cmp
or
daa
in
pop
into
in
or
(bad)
mov
fs
pushf
daa
in
pop
into
adc
or
(bad)
cld
xchg
addr16
dec
sub
in
test
xor
daa
in
pop
into
xor
xchg
test
daa
in
pop
into
and
xchg
test
daa
in
pop
into
push
mov
es
mov
fs
out
cmps
mov
jns
xor
ja
mov
adc
shr
dec
es
stc
push
xchg
in
into
arpl
shl
mov
add
stos
and
xchg
sub
in
or
in
mov
gs
mov
in
mov
in
mul
adc
es
fldenv
in
xor
(bad)
in
das
mov
in
into
arpl
sub
in
or
fisttp
jmp
jmp
and
or
shr
or
gs
mov
cmp
gs
mov
das
into
arpl
in
or
outs
ins
sahf
gs
je
call
in
or
xchg
dec
test
mov
or
jo
xchg
gs
mov
jo
dec
gs
dec
xor
or
ret
push
xchg
test
loope
add
or
pusha
cwde
mov
fst
dec
arpl
paddsb
pminsw
push
add
in
and
gs
mov
das
not
add
jnp
in
mul
adc
es
cdq
mov
fnstenv
xchg
addr16
ret
mov
ror
cmp
add
add
and
mov
dec
ret
jmp
arpl
test
sub
inc
fsubp
mov
es
xor
dec
into
psubsb
paddsw
lea
stos
and
pop
dec
call
mov
xchg
pop
push
cmps
or
sbb
in
shl
gs
ja
push
push
inc
jge
sbb
adc
loope
jmp
not
xchg
fnstenv
xchg
addr16
out
pop
gs
inc
in
test
shl
gs
movs
mov
pop
jo
addr16
out
mov
fldenv
mov
sub
call
or
adc
push
nop
and
or
call
nop
and
or
call
nop
and
or
call
nop
and
or
es
add
popa
dec
and
in
clc
xor
and
or
shr
or
fldcw
aaa
pop
cmps
jecxz
mov
in
or
jno
xor
push
and
out
or
sar
pop
pop
cmps
cdq
jb
lahf
outs
jecxz
push
sbb
dec
in
adc
into
popa
jecxz
and
loope
gs
jl
push
dec
(bad)
sub
stos
popa
jmp
pop
into
cmp
or
push
pop
(bad)
ds
call
push
es
fsubp
and
lods
xor
test
jmp
or
fsubp
add
scas
and
and
dec
and
(bad)
call
sbb
es
push
nop
and
(bad)
out
ins
xor
es
push
cmps
and
or
push
adc
fstp
in
mov
pop
call
inc
cmps
pop
jmp
(bad)
out
mov
arpl
jl
in
adc
into
data16
xor
scas
popf
outs
loope
push
or
xor
push
or
gs
add
in
lar
cli
cmp
test
or
(bad)
bound
xor
es
aaa
and
mov
and
push
scas
popf
outs
loope
in
(bad)
adc
or
and
movs
(bad)
call
xor
gs
or
shl
es
jl
out
imul
jbe
or
out
or
movs
(bad)
call
dec
ss
adc
into
popa
addr16
fsubrp
clc
or
gs
or
aaa
gs
outs
in
(bad)
adc
or
pop
gs
movs
(bad)
out
mov
arpl
jl
in
adc
into
popa
jecxz
and
xor
imul
es
jge
pop
adc
es
adc
int3
mov
es
mov
or
lahf
outs
jecxz
in
call
or
adc
and
push
movs
rcl
neg
cmp
add
add
and
pop
dec
es
cdq
add
jns
test
ins
xor
popa
in
loope
gs
jg
in
loope
gs
jp
and
sub
or
gs
push
mov
in
mov
outs
adc
shr
sbb
xchg
sbb
int3
cwde
data16
scas
popf
in
shl
push
mul
adc
es
or
es
sbb
mov
in
loop
in
xor
arpl
clc
psubusw
adc
pop
and
jnp
mov
and
fs
daa
out
in
and
sti
daa
mov
in
shl
mov
dec
shr
test
daa
out
mov
adc
cmc
lods
or
out
imul
mov
repz
mov
call
or
cmp
fsubrp
cld
mul
adc
es
test
popa
pop
cmp
fldenv
popf
sub
iret
in
call
or
jecxz
jae
sub
sbb
fldcw
neg
out
add
in
gs
sahf
cmp
or
lea
push
es
lock
adc
lea
ror
es
jp
mov
adc
loopne
pop
out
call
bound
mov
std
push
nop
loopne
out
call
es
adc
call
aad
adc
cmps
pop
jmp
or
pop
push
sub
jns
leave
call
(bad)
es
stos
imul
pop
into
int3
mov
es
jns
clc
call
gs
mov
add
(bad)
es
stos
imul
pop
out
out
xor
fcomp
cld
lods
or
xor
call
data16
mov
mov
mul
push
mov
mov
test
mov
pusha
xor
mov
mov
adc
sub
jns
leave
call
xor
dec
es
mov
sar
leave
call
xor
jns
stc
call
es
jmp
jnp
es
fistp
xor
fstp
in
xor
aas
enter
jmp
lods
or
call
ss
pop
into
enter
in
sub
and
pop
mov
mov
mul
das
or
gs
xor
adc
test
xor
in
mul
adc
es
in
call
es
adc
shl
fstp
adc
fisubr
inc
out
mov
call
fstp
gs
(bad)
out
enter
pop
(bad)
fdiv
xchg
fcom
fstp
adc
and
jnp
in
mul
in
xor
es
or
call
es
repnz
in
or
adc
out
fstp
add
fldenv
or
out
imul
pop
loopne
out
call
fldenv
mov
(bad)
mov
mov
or
gs
mov
add
fldenv
sub
xchg
add
(bad)
dec
std
leave
call
fstp
xor
call
lods
imul
(bad)
fstp
adc
out
out
cmp
add
or
in
ret
cmps
outs
out
mul
in
std
leave
call
xchg
call
fwait
xchg
neg
gs
push
dec
cmp
lea
gs
cmps
out
sbb
es
jns
clc
call
scas
loopne
xlat
fstp
adc
lods
lock
fstp
out
and
imul
fldenv
and
imul
fldlg2
imul
cmp
imul
fstp
in
and
imul
stc
call
fldenv
stc
call
fldenv
retf
in
clts
paddsb
fldenv
mov
call
sub
or
lock
(bad)
fstp
cwde
mov
mov
add
fldenv
(bad)
fstp
adc
scas
imul
push
nop
lock
out
call
push
hlt
lods
or
call
into
pop
mov
mov
out
imul
ins
in
push
mov
out
imul
nop
gs
es
jge
in
add
push
xor
cmp
loopne
out
call
es
imul
loopne
(bad)
fstp
adc
es
in
stc
call
fstp
aam
push
dec
gs
movs
(bad)
out
mov
gs
pop
scas
xchg
outs
loope
in
or
gs
movs
(bad)
call
add
in
or
mov
jge
daa
in
push
nop
lock
xlat
fstp
pop
sbb
mov
dec
xlat
fstp
shl
es
jl
out
call
or
push
call
neg
mov
ror
add
fldenv
(bad)
out
sti
xor
mov
ins
movs
test
pop
pushf
test
out
sbb
sub
es
xor
gs
or
adc
mov
pop
out
or
gs
jl
in
xor
gs
or
adc
mov
pop
call
jl
in
xor
gs
or
adc
dec
int
jecxz
mov
ins
sub
and
add
adc
push
nop
loopne
out
call
fstp
adc
push
pushf
adc
movs
mov
xor
fldenv
dec
movs
rcr
fstp
add
fldenv
loopne
movs
or
and
gs
leave
call
fldenv
or
pop
cmp
and
pop
dec
es
cmc
fstp
adc
daa
push
mov
mov
test
mov
pusha
xor
mov
cmp
add
add
jnp
sub
fsubrp
pop
in
icebp
xor
in
or
and
or
adc
es
or
gs
lods
lods
and
arpl
mov
scas
and
and
je
call
in
mov
gs
or
shl
call
in
mov
gs
or
shr
js
or
in
outs
push
push
mov
in
and
retf
daa
cmps
gs
fisub
cli
and
test
rcl
mov
call
mul
in
div
pop
or
arpl
in
or
(bad)
dec
xor
in
or
gs
mov
in
push
nop
es
xor
gs
or
jecxz
gs
leave
es
mov
and
adc
sub
scas
or
out
or
and
in
fisub
adc
sub
scas
or
es
leave
push
imul
push
popa
ins
dec
fldenv
dec
fsubrp
cs
in
mov
or
movs
in
or
pop
ins
or
gs
or
sub
out
xor
gs
or
sbb
pop
cdq
or
cmps
and
or
out
neg
call
lods
data16
jae
(bad)
dec
xor
or
outs
ins
dec
fisub
fisub
in
cmps
or
arpl
push
nop
ror
and
test
dec
fnstcw
mov
out
cmps
mov
pop
lods
adc
mov
je
inc
cmps
mov
mul
gs
pop
dec
gs
je
in
adc
and
in
or
adc
mov
pop
mov
and
pop
punpckhwd
adc
pop
mov
pop
mov
mov
in
gs
sahf
popa
int3
or
(bad)
int3
pop
es
push
paddsb
shr
cmc
stc
call
loope
cdq
add
stos
loopne
jmp
xor
in
or
call
movs
mov
adc
loope
sbb
lods
das
pop
scas
cmp
cmps
mov
es
dec
adc
in
loope
ss
or
das
pop
scas
sub
ss
push
xor
sbb
gs
arpl
or
xchg
dec
xchg
dec
gs
or
js
or
in
sub
movs
sbb
or
addr16
sub
int3
or
and
and
sub
je
in
pop
into
pusha
mov
mov
jne
arpl
sub
gs
(bad)
add
out
add
arpl
dec
ror
gs
rcr
cdq
cmc
jo
and
es
or
in
adc
fsubrp
sub
ds
pop
jne
mov
and
mov
in
or
psubsb
paddsb
gs
leave
fst
in
pop
xor
or
imul
movs
fwait
adc
sub
ja
out
arpl
paddsb
in
or
out
test
rcr
ins
xor
scas
cmps
xchg
stos
xor
pop
jne
cdq
add
es
stos
and
pop
dec
addr16
(bad)
daa
in
pop
into
fdivr
ror
gs
pop
into
xor
or
fucomp
or
gs
jge
das
pop
scas
sub
xor
sbb
es
or
dec
test
and
in
arpl
or
adc
or
es
scas
popf
sbb
scas
and
and
adc
push
popa
(bad)
int
xchg
dec
xchg
jo
or
xchg
stos
and
pop
fst
cld
not
mov
or
mov
in
or
movs
lods
push
js
das
pop
scas
cmp
mov
dec
cmps
or
xchg
gs
cmp
in
xor
and
or
sbb
adc
lods
jmp
jne
in
mov
inc
dec
es
(bad)
daa
in
loope
ss
or
mov
push
nop
popa
repnz
dec
push
or
lea
int
xlat
push
sub
add
(bad)
in
jl
mov
xlat
je
sbb
dec
dec
or
es
rcr
outs
int
out
test
retf
scas
xor
push
js
and
pop
jne
mov
jl
mov
sub
int
gs
popa
sbb
nop
mov
test
jecxz
and
popa
adc
mov
add
sbb
or
add
je
in
push
lods
and
and
xor
push
jge
das
pop
scas
sub
ss
xor
in
xor
(bad)
in
das
outs
loope
push
or
out
in
out
loope
out
in
es
ja
fs
or
gs
cli
sbb
imul
and
and
xchg
sbb
adc
outs
loope
push
adc
out
test
or
fld
imul
sbb
scas
and
in
pop
dec
fldcw
dec
and
in
sbb
or
outs
fs
loop
push
in
or
sbb
or
addr16
sub
dec
and
test
loop
imul
sub
test
or
out
pop
daa
and
pop
fwait
out
jl
out
loope
in
mul
in
mul
adc
cmp
jo
lods
and
push
xchg
gs
cs
sbb
mov
leave
dec
fs
or
sar
or
shl
mov
add
out
dec
test
jmp
test
repnz
push
xchg
and
jecxz
je
vmovapd
mov
or
addr16
sub
dec
cs
mov
add
mov
dec
ret
in
int
shl
mov
mov
in
jl
mov
jl
es
or
gs
pop
jp
push
mov
sub
mov
jl
or
jl
mov
in
mov
jl
mov
jl
mov
jl
mov
jl
mov
jl
mov
jl
mov
jl
(bad)
cmc
jl
mov
ss
mov
jl
es
or
gs
popa
imul
mov
sub
mov
jl
cmp
jl
mov
in
mov
jl
out
jl
mov
xor
mov
jl
retf
cdq
mov
jl
mov
jl
iret
in
std
hlt
fldenv
jl
inc
(bad)
in
or
gs
mov
jl
and
ror
cmc
shr
and
jl
mov
addr16
and
jl
lods
xor
fstp
mov
jl
movs
cmps
call
ret
jl
pop
mov
cmc
outs
leave
sub
jl
movs
pop
in
cdq
mov
cdq
shl
jl
mov
mov
xchg
je
mul
jne
or
jp
push
es
or
test
dec
in
jl
mov
jl
es
or
cmc
jl
mov
jl
mov
adc
mov
jl
je
jl
mov
push
cmp
jl
mov
sub
cmp
cmc
jl
mov
jl
mov
jl
out
cmc
jl
mov
sbb
mov
jl
mov
jl
mov
jl
pop
jp
push
mov
fcomp
fdivp
jl
mov
push
cdq
mov
jl
es
or
cmc
jl
je
jl
mov
cmp
fs
push
jl
mov
sub
cmp
cmc
jl
mov
jl
mov
jl
out
cmc
jl
mov
sbb
mov
jl
mov
jl
mov
jl
popa
imul
mov
fcomp
fdivp
jl
mov
push
cdq
mov
jl
mov
jl
mov
add
retf
gs
movs
mov
pop
jo
addr16
cs
test
add
pusha
pop
lea
daa
cmps
gs
ficom
loope
sbb
mov
or
gs
xchg
mov
idiv
xor
cdq
pavgb
push
or
dec
add
imul
neg
in
mov
gs
or
sar
fdivr
out
test
and
mov
or
xchg
mov
scas
and
arpl
pushf
jnp
pop
xchg
jle
in
xor
(bad)
and
pop
inc
fmul
ss
or
es
sbb
push
sbb
shl
sbb
gs
arpl
or
popa
dec
aam
add
push
and
pop
scas
mov
test
repz
mov
loope
sub
or
dec
aam
shl
xchg
mov
or
arpl
ficom
or
add
dec
(bad)
push
dec
sub
hlt
neg
call
scas
sub
ss
fidivr
gs
loope
sub
or
gs
ret
out
loope
fistp
ret
scas
mov
and
mov
mov
gs
jl
push
sub
bound
or
adc
loope
popf
adc
movs
mov
sub
mov
push
je
movs
or
lods
jno
movs
fwait
daa
in
and
pop
inc
mov
gs
xchg
loope
push
je
movs
or
fst
mov
shl
int
daa
in
pop
into
movs
mov
arpl
in
sbb
and
test
inc
es
int
les
fs
fimul
lahf
or
in
sbb
arpl
scas
or
jne
dec
fisub
rcr
push
dec
es
test
fstp
popf
pop
adc
call
arpl
out
dec
fsubrp
stc
aad
daa
in
cmp
out
icebp
and
cmp
fsubr
jnp
lea
dec
cli
lea
je
push
imul
movs
push
sbb
mov
xor
fsubr
ds
imul
arpl
in
sbb
mov
xchg
mov
jmp
ins
cmp
shrd
scas
or
fsubr
inc
es
int
les
fs
ror
fimul
es
sbb
arpl
scas
or
jne
dec
shl
rcr
push
dec
es
test
fstp
xchg
pop
sbb
out
stc
aad
daa
in
cmp
out
stc
and
cmp
fsubr
jnp
in
sbb
sbb
pop
pop
leave
mov
xor
or
fs
fsubr
adc
ror
fwait
daa
in
push
nop
xor
fadd
out
clc
pushf
ret
or
gs
sub
mov
in
jl
out
loope
push
dec
into
xor
sub
cdq
adc
movs
mov
in
arpl
in
arpl
or
adc
in
es
ret
jno
gs
arpl
call
cdq
jmp
into
sbb
in
into
jl
or
xor
outs
gs
cmp
and
ror
es
jo
jns
mov
in
gs
cmps
mov
or
gs
cmp
push
push
mov
gs
inc
in
imul
loopne
jmp
mov
cmp
sbb
(bad)
in
sub
cwde
cs
or
gs
repz
fnstcw
sub
scas
lock
fstp
pop
daa
into
hlt
cmps
or
push
je
fistp
inc
inc
jne
and
push
enter
lock
idiv
xor
fs
fstp
jg
mov
adc
into
xor
jmp
fs
pop
loopne
jmp
iret
mov
push
ins
(bad)
cmp
or
call
dec
nop
xor
call
adc
push
cmps
or
paddsb
pmaxsw
paddsb
gs
dec
stos
loopne
hlt
fstp
in
or
call
fs
or
mov
cwde
adc
jbe
in
adc
gs
fwait
daa
in
not
(bad)
fadd
gs
daa
xchg
gs
fnop
sbb
fstp
in
mul
adc
es
stc
daa
in
test
xor
in
test
xor
in
test
xor
ins
loope
gs
or
xchg
or
fldlg2
sub
and
pop
dec
es
test
stc
daa
in
test
xor
ins
loope
gs
or
adc
test
in
popa
and
in
mov
imul
es
pop
cmps
xchg
mov
es
jge
das
pop
scas
sub
ss
mov
sbb
and
scas
mov
scas
or
and
and
mov
es
test
popa
sbb
or
or
jl
call
es
sbb
mov
fs
jl
in
test
pop
dec
xchg
fst
cld
not
add
outs
gs
mov
pop
aad
es
cmp
add
push
xchg
or
je
or
call
paddsw
adc
not
adc
cdq
add
push
in
or
out
adc
das
pop
scas
cmp
or
adc
shr
cmc
scas
mov
popa
dec
xor
cdq
add
and
or
cmps
mov
pop
cdq
fnstsw
cmp
in
sub
cdq
mov
or
xchg
fst
loopne
push
ins
add
outs
gs
add
adc
cmp
mov
not
adc
cdq
adc
ss
es
sub
sub
movs
or
push
sub
aaa
in
adc
fsubrp
sub
push
cdq
add
outs
gs
cmp
and
gs
movs
mov
pop
jno
cdq
sbb
scas
and
mov
cs
dec
es
es
adc
fsubrp
sub
gs
or
jl
call
es
sub
and
sbb
test
or
jl
call
es
sub
sub
stos
or
push
sub
cmp
cdq
cmc
into
shr
dec
ds
mov
jb
or
and
in
sub
lods
das
pop
scas
cmp
inc
add
mov
and
cmc
repz
in
or
add
bound
pop
into
les
icebp
scas
popf
(bad)
scas
mov
in
xor
cdq
es
movs
lods
loop
paddsb
gs
or
or
push
jl
in
or
in
sbb
gs
add
adc
cmp
mov
not
cdq
cmp
lea
fimul
test
cmp
jle
ja
ror
gs
or
fs
cmps
mov
pop
jno
cdq
add
cdq
mov
scas
push
addr16
(bad)
cs
in
mov
cmp
pop
rol
dec
gs
bsr
fst
cld
loope
and
or
dec
xor
jae
sub
movs
movs
out
loop
in
cmc
bnd
or
shl
adc
add
adc
mov
pop
in
jl
in
adc
cmps
pop
jmp
mov
adc
and
in
shl
dec
dec
es
cmps
and
mov
in
add
adc
adc
xor
fst
cld
loope
daa
in
or
dec
xor
shl
popf
pop
or
movs
mov
jge
das
pop
scas
sub
ss
into
arpl
ins
jl
inc
fisttp
es
bound
and
into
test
scas
or
in
test
pop
sub
call
add
adc
push
nop
popa
fisttp
adc
pop
or
es
arpl
jecxz
pop
fwait
jecxz
sbb
icebp
lahf
jg
or
cld
sbb
scas
mov
iret
inc
xor
lahf
jg
or
fbld
jmp
(bad)
out
xor
fisub
sbb
pop
dec
aas
xor
xor
pusha
gs
mov
jno
mul
jecxz
arpl
inc
and
push
jge
das
pop
scas
adc
in
loope
and
or
mov
xor
sub
adc
lods
retf
mul
call
adc
adc
loope
xchg
adc
movs
mov
sbb
(bad)
in
sub
std
adc
cmp
mov
add
outs
mov
call
into
int3
scas
or
push
sub
xor
in
or
adc
loope
es
or
call
sbb
fstp
cwde
adc
(bad)
push
rcr
cwde
adc
lods
lock
fistp
call
dec
into
xor
cmc
fstp
cdq
or
call
lea
gs
setne
lods
and
and
sub
mov
fs
jl
in
sub
out
jns
fstp
add
jmp
adc
stc
daa
in
not
add
arpl
mov
ins
test
daa
in
not
lea
cs
aam
es
add
gs
nop
rcr
popa
(bad)
test
neg
call
loop
gs
pop
xchg
gs
into
push
out
es
(bad)
push
or
inc
add
bound
mov
gs
or
fcom
neg
call
jno
adc
es
int
lea
es
nop
rcr
popa
(bad)
test
neg
call
loop
test
stc
daa
in
not
lea
dec
es
int
lea
gs
add
gs
nop
rcr
popa
(bad)
test
neg
call
loop
add
bound
mov
gs
or
pusha
xchg
sub
or
or
fmul
(bad)
fbstp
addr16
call
fs
or
inc
test
stc
daa
in
and
test
stc
daa
in
pop
into
sub
or
out
sbb
es
bound
mov
gs
or
pusha
xchg
sbb
or
es
fs
or
mov
adc
fcomp
in
mov
ins
add
gs
mov
gs
or
pusha
xchg
sbb
or
es
sub
in
or
mov
adc
fcomp
in
mov
ins
add
gs
mov
gs
or
pusha
xchg
sub
les
or
gs
fbstp
addr16
call
fs
or
or
or
and
call
gs
mov
data16
or
cwde
xor
call
adc
or
xlat
fstp
cld
and
test
clc
daa
in
pop
into
xor
or
out
sub
push
scas
or
fsub
or
gs
(bad)
push
or
inc
add
gs
mov
gs
or
fcom
neg
call
jno
lock
es
int
in
sbb
shr
rcr
adc
es
add
gs
nop
rcr
popa
(bad)
test
neg
call
loop
add
fs
mov
gs
or
pusha
xchg
sbb
xor
call
int3
daa
in
or
daa
in
or
cld
sbb
movs
lahf
jmp
jmp
ficomp
scas
or
out
add
mov
in
not
addr16
call
fs
or
daa
in
or
cld
sbb
movs
lahf
jmp
xlat
fs
sbb
add
pop
scas
or
fsub
or
gs
(bad)
push
or
jbe
stc
(bad)
daa
in
not
lea
cs
clc
dec
es
add
gs
nop
rcr
loope
daa
in
or
cld
sbb
je
push
cmc
fstp
xor
xor
addr16
mov
jne
je
gs
mov
shr
fistp
in
or
loopne
or
call
es
leave
fstp
addr16
call
fistp
adc
push
push
addr16
call
fistp
gs
lahf
jg
or
cld
sbb
movs
cmps
lea
popf
push
adc
gs
mov
mov
inc
rol
jns
fstp
sub
call
adc
aas
xor
call
adc
or
or
out
sbb
es
or
fldlg2
sub
mov
in
leave
fstp
in
push
movs
adc
neg
call
push
jge
mov
gs
jbe
imul
dec
add
dec
es
in
mov
jge
mul
in
mov
gs
or
pusha
xchg
sbb
xor
call
cmp
or
and
in
or
cld
sbb
movs
lahf
jmp
xlat
fs
pushf
lods
or
out
add
mov
in
mov
gs
or
pusha
xchg
sbb
or
es
call
mov
adc
fxam
in
or
call
mov
pop
imul
movs
cli
adc
fldlg2
imul
(bad)
xchg
or
fldlg2
sub
pop
fs
or
popf
adc
(bad)
mov
gs
es
xor
(bad)
push
sbb
loopne
test
or
pop
imul
movs
and
or
out
imul
mov
call
es
adc
jl
or
out
add
fistp
ins
xor
scas
mov
adc
fldlg2
sbb
(bad)
in
sub
xor
adc
fld1
push
div
enter
popa
mov
call
fstp
imul
xchg
xchg
adc
fstp
sbb
fistp
adc
jbe
mov
fs
or
pop
in
or
cld
sbb
movs
lahf
jmp
xlat
fs
rcl
es
add
mov
in
mov
gs
or
pusha
xchg
sbb
xor
call
pop
pop
in
or
pop
in
or
cld
sbb
movs
lahf
jmp
jmp
ficomp
ror
es
add
rcr
fistp
in
mov
and
or
call
mov
xor
adc
jne
(bad)
(bad)
fstp
imul
out
imul
fnop
adc
fcomp
in
mov
ins
add
sbb
mov
gs
or
pusha
xchg
sbb
xor
call
les
or
pop
in
or
cld
sbb
movs
lahf
jmp
xlat
fs
fcom
or
out
add
loopne
neg
call
es
or
gs
(bad)
push
or
jbe
stc
(bad)
daa
in
not
lea
es
int
or
adc
sbb
or
out
add
push
ror
es
or
gs
(bad)
push
or
inc
add
sbb
mov
gs
or
fcom
neg
call
jno
int3
aaa
es
int
(bad)
in
aaa
es
add
gs
nop
rcr
popa
jnp
scas
or
rcl
neg
call
loop
ins
(bad)
cmp
mov
or
fsub
or
gs
(bad)
push
or
jbe
ret
in
not
lea
xor
outs
int
lea
gs
add
gs
nop
rcr
popa
(bad)
test
neg
call
loop
add
sbb
mov
gs
or
pusha
xchg
sub
sbb
or
fmul
(bad)
fbstp
addr16
call
fs
or
mov
adc
fcomp
in
mov
ins
gs
setne
into
pop
ror
es
or
gs
(bad)
push
or
jbe
stc
(bad)
daa
in
not
lea
int
or
adc
sub
or
out
add
pusha
ror
es
or
gs
(bad)
push
or
jbe
stc
(bad)
daa
in
not
(bad)
enter
outs
int
or
adc
je
or
out
add
gs
sbb
mov
gs
or
pusha
xchg
sbb
or
es
rcr
movs
mov
adc
fnstenv
adc
jbe
out
xlat
fs
or
pop
in
or
cld
sbb
movs
lahf
jmp
jmp
ficomp
ror
es
add
xor
call
mov
in
or
pop
in
or
cld
sbb
movs
lahf
jmp
jmp
ficomp
ror
es
add
xchg
or
fldlg2
sub
cmp
in
or
cld
sbb
scas
mov
into
ss
in
or
push
cmc
fstp
xor
xor
sbb
mov
jne
out
gs
mov
gs
or
pusha
xchg
sbb
or
es
sub
or
mov
adc
fcomp
in
mov
ins
add
sbb
gs
or
pusha
xchg
sbb
or
es
lock
in
or
push
test
xor
gs
add
gs
nop
rcr
loope
pop
in
or
cld
sbb
je
push
cmc
fstp
xor
xor
sbb
jne
fsincos
daa
in
not
lea
outs
int
paddsb
pmaxsw
paddsb
gs
dec
fst
in
and
in
or
call
fnop
adc
fcomp
in
arpl
call
adc
call
xchg
lea
hlt
(bad)
adc
pushf
fimul
es
test
or
mov
in
or
call
scas
sub
fs
or
movs
or
outs
gs
rol
adc
scas
mov
pop
xor
shr
aam
gs
mov
fwait
adc
jbe
pop
xor
gs
pop
popf
gs
dec
test
mov
xor
ins
loope
xchg
adc
movs
mov
in
and
or
fild
dec
es
test
es
loope
xchg
adc
dec
mov
dec
es
test
cli
daa
in
popa
and
in
sbb
(bad)
sub
cmps
mov
shl
gs
cmps
mov
es
add
pop
popf
gs
movs
shl
call
daa
push
leave
movs
test
and
test
or
gs
and
adc
fsubrp
sub
std
out
test
iret
and
add
adc
xor
pop
and
scas
xor
add
adc
and
pop
test
add
or
sbb
neg
call
mov
pushf
mov
popf
in
icebp
scas
mov
in
or
call
into
xchg
fimul
es
imul
std
adc
(bad)
addr16
cs
popa
jno
call
stos
adc
neg
call
mov
pushf
scas
cwde
adc
cmps
xchg
mov
es
lock
in
loope
push
in
or
call
dec
jne
or
call
into
xor
or
xor
in
popa
and
stos
loopne
hlt
fstp
scas
or
xor
or
add
(bad)
call
push
push
in
or
movs
add
loope
fwait
adc
dec
popa
in
or
call
adc
loopne
hlt
fstp
in
or
sar
fstp
adc
fnop
pusha
hlt
fstp
adc
fnop
je
fstp
adc
jo
imul
(bad)
sub
scas
loopne
hlt
fstp
mov
or
movs
add
popa
xchg
adc
fstp
in
or
mov
adc
jbe
imul
into
hlt
aam
lea
mov
and
neg
call
movs
mov
adc
loope
imul
mov
fs
or
add
mov
fwait
adc
es
mov
cwde
adc
es
outs
loope
add
fstp
repz
es
mov
(bad)
(bad)
stc
fstp
adc
fnstenv
adc
jbe
in
arpl
bswap
arpl
paddsb
call
adc
gs
adc
add
push
shl
gs
not
lea
gs
setge
fnop
js
fstp
in
popa
pop
mov
adc
fstp
in
or
push
adc
fldenv
daa
cmps
xchg
out
es
mov
fwait
adc
jbe
cdq
aad
gs
adc
and
sub
cmp
gs
adc
mov
data16
adc
sbb
shr
cwde
pop
dec
gs
or
lea
mov
cwde
adc
es
popa
es
in
or
pop
fmul
es
popa
mov
fwait
adc
jbe
add
adc
arpl
or
popa
mov
fwait
adc
jbe
test
fstp
adc
es
sub
shl
call
fistp
rep
es
add
shl
call
es
adc
cmp
or
fnstsw
es
scas
loopne
hlt
fstp
pushf
cmp
xchg
fnop
dec
hlt
fstp
in
not
lea
es
test
push
push
sub
in
inc
in
imul
cmp
or
or
jno
mov
cdq
jecxz
or
adc
fsubrp
sub
push
ins
add
adc
add
fsubr
adc
fsubrp
sub
push
imul
in
gs
ficomp
fisttp
es
outs
scas
xor
pop
into
(bad)
fisttp
es
outs
scas
xor
push
xchg
and
push
xchg
xor
or
push
pop
shl
xchg
xor
test
les
gs
adc
in
and
add
gs
cmp
out
adc
scas
and
and
call
adc
mov
or
ins
gs
movs
movs
jmp
or
call
stos
and
or
xor
in
sbb
adc
loope
cdq
sbb
shr
or
sar
or
in
es
test
jmp
or
push
pop
shr
test
and
gs
test
mov
jmp
in
loope
push
in
or
inc
in
or
loope
push
in
or
(bad)
fdivr
es
or
ds
mov
jp
or
in
or
ss
mov
and
outs
scas
popf
(bad)
mov
in
inc
in
imul
(bad)
call
mov
xor
adc
jbe
mov
fs
or
and
sub
mov
in
dec
xor
pop
fnop
sub
fstp
in
mov
ins
in
push
jp
mov
fst
loopne
or
or
loopne
jmp
pop
movs
lods
loop
mov
adc
gs
test
xor
adc
jbe
add
or
add
adc
sbb
adc
loope
adc
push
fmul
es
add
movs
cdq
adc
shl
fstp
cmp
es
mov
mov
pop
movs
or
mov
out
mov
out
cmps
mov
sub
gs
or
pop
jo
addr16
fild
sar
or
mov
in
or
cmp
or
in
xor
mov
fs
jl
in
sub
in
ss
aaa
add
call
pop
stc
daa
in
pop
into
and
or
out
add
gs
setne
dec
sub
dec
es
adc
fmul
es
add
test
or
fsub
or
gs
(bad)
push
or
jno
stc
(bad)
daa
in
test
xor
in
mov
ins
add
adc
gs
or
pusha
xchg
and
int3
fisttp
fmul
(bad)
fbstp
popa
mov
test
div
mov
fs
mov
test
div
dec
cmp
outs
int
lea
gs
add
gs
nop
rcr
popa
(bad)
test
jmp
mov
mov
sbb
loopne
fcmovnbe
fs
mov
test
div
push
int
lea
es
nop
rcr
popa
(bad)
test
jmp
js
in
or
push
in
or
cld
sbb
movs
lahf
jmp
cmp
gs
push
gs
nop
rcr
neg
xor
fwait
gs
fnstenv
add
adc
in
mov
jne
jl
or
popa
mov
test
div
int
fs
mov
test
div
xor
es
int
in
sbb
shr
std
stc
call
es
add
gs
nop
rcr
popa
(bad)
test
jmp
call
mov
scas
or
call
movs
mov
in
or
cld
sbb
movs
lahf
jmp
jmp
test
div
js
es
int
or
popa
mov
test
div
ins
cmp
outs
int
in
sbb
shr
stc
stc
call
es
add
gs
nop
rcr
loope
push
in
or
cld
sbb
je
push
or
call
es
adc
jo
or
out
sbb
xor
call
adc
inc
fimul
es
add
test
or
fsub
or
gs
(bad)
push
or
jno
stc
(bad)
daa
in
test
xor
in
mov
ins
test
daa
in
test
xor
in
mov
ins
gs
pop
xchg
gs
into
(bad)
fisttp
es
or
gs
(bad)
push
or
jno
stc
(bad)
daa
in
test
xor
in
mov
ins
test
clc
daa
in
test
xor
in
mov
ins
add
pop
gs
mov
gs
or
pusha
xchg
sbb
es
adc
loopne
or
out
add
adc
imul
dec
dec
xor
call
adc
pop
fisttp
es
sbb
js
or
fsub
or
gs
(bad)
push
or
jno
stc
(bad)
daa
in
test
xor
in
mov
ins
test
clc
daa
in
test
xor
in
mov
ins
add
push
gs
mov
gs
or
pusha
xchg
sbb
es
adc
fisttp
es
add
xchg
or
fldlg2
sub
mov
or
cld
sbb
scas
mov
into
ss
in
or
push
or
call
es
adc
clc
fmul
es
sbb
sbb
or
fsub
or
gs
(bad)
push
or
jno
stc
(bad)
daa
in
test
xor
in
mov
ins
test
sti
daa
in
test
xor
in
mov
ins
ins
out
and
or
pop
fmul
es
or
gs
(bad)
push
or
jno
stc
(bad)
daa
in
test
xor
in
mov
ins
add
push
gs
mov
gs
or
pusha
xchg
and
pusha
fmul
fmul
(bad)
fbstp
popa
mov
test
div
mov
fs
mov
test
div
adc
es
int
or
popa
mov
test
div
loopne
es
int
paddsb
pmaxsw
paddsb
gs
dec
jne
fs
fidivr
and
mov
test
div
loopne
es
stos
fcom
fstp
in
jmp
xchg
cdq
xor
(bad)
adc
sbb
or
push
sub
int
gs
setne
jns
mov
in
gs
cmps
mov
es
ins
fisttp
gs
rol
adc
scas
mov
adc
es
sbb
es
mov
jne
dec
and
cs
jns
fistp
or
fldlg2
sub
ins
dec
in
or
fsub
es
rcr
(bad)
es
add
or
lds
neg
paddb
call
adc
movs
ret
or
popa
mov
or
test
and
in
mov
test
neg
out
sub
mov
or
in
or
call
adc
loopne
hlt
fstp
in
or
mov
adc
jne
imul
(bad)
sub
push
addr16
or
xor
call
adc
int3
ret
call
adc
loopne
neg
call
into
xchg
or
fldlg2
imul
loope
test
es
adc
jo
or
out
adc
es
gs
or
loopne
neg
call
mov
adc
outs
loope
add
fstp
cdq
arpl
gs
mov
(bad)
imul
fstp
adc
fnstenv
adc
jbe
in
arpl
bswap
arpl
paddsb
call
adc
gs
or
in
add
push
mov
gs
not
lea
es
daa
popf
gs
fnop
dec
hlt
fstp
in
popa
pop
mov
adc
fstp
in
or
sbb
neg
gs
daa
cmps
mov
popa
mov
fwait
adc
jbe
cdq
aad
gs
or
ins
sub
cmp
gs
or
in
mov
data16
adc
sbb
shr
jecxz
das
fs
or
sbb
lea
setge
dec
popa
in
or
call
adc
lea
es
dec
wrmsr
dec
es
adc
xor
(bad)
sub
es
iret
es
test
xor
adc
movs
mov
push
arpl
call
mov
xor
in
mov
sbb
xchg
fistp
js
fstp
adc
fistp
in
or
xor
(bad)
lock
gs
or
adc
es
int
ins
sub
prefetch
or
add
pcmpgtw
cmp
pop
xor
das
or
adc
push
xor
(bad)
sub
mov
(bad)
fistp
call
cmp
mov
xchg
xor
pcmpgtw
into
mov
fs
or
call
adc
lods
lds
es
adc
fsubrp
sub
call
sbb
fnop
dec
hlt
fstp
in
and
jmp
cmp
or
or
jno
mov
cdq
xchg
mov
inc
in
div
in
pop
into
xor
or
in
test
loope
dec
in
or
addr16
pop
dec
and
in
and
mov
or
xchg
or
jne
int3
and
adc
mov
push
add
pop
into
cmp
or
call
in
pop
dec
retf
paddsb
(bad)
cld
and
gs
dec
call
scas
popf
sbb
scas
and
loope
test
dec
add
pop
into
or
or
out
test
shl
gs
sahf
gs
or
lea
es
jg
in
add
gs
arpl
call
es
sub
loope
sbb
sub
gs
popa
mov
xchg
adc
jbe
add
push
gs
arpl
call
fstp
adc
movs
mov
in
or
gs
int
ins
(bad)
cmp
in
or
loope
dec
in
or
cmp
mov
imul
jb
gs
arpl
jecxz
arpl
scas
or
mov
or
in
daa
jg
in
test
mov
or
adc
les
or
push
dec
fsub
sub
jbe
adc
fs
dec
shl
in
mov
jge
dec
shl
in
or
call
fmul
or
test
mul
cmp
mov
imul
add
gs
scas
and
and
in
arpl
in
arpl
psubsw
paddsb
paddsb
fs
or
or
sbb
pop
lds
es
sub
rol
sub
xor
test
gs
push
gs
arpl
xor
xchg
addr16
push
gs
arpl
xor
test
gs
push
gs
arpl
xor
xchg
addr16
push
gs
arpl
xor
pushf
data16
push
gs
mov
sti
mov
pop
dec
push
adc
cli
lods
or
pop
les
paddsw
push
adc
cli
lods
or
dec
les
paddsw
push
adc
(bad)
scas
or
jl
or
paddsw
push
adc
les
or
in
sbb
(bad)
in
sub
xor
nop
addr16
add
arpl
xor
xchg
addr16
add
arpl
xor
stos
fs
add
arpl
xor
stos
fs
add
mov
dec
in
or
and
in
sub
lods
das
pop
cdq
cmps
repnz
pop
in
pop
sub
in
arpl
call
pusha
inc
in
or
or
xchg
fst
xchg
addr16
add
arpl
call
add
in
or
or
xchg
fst
test
gs
add
mov
daa
in
es
adc
dec
lea
es
sub
ss
or
cmp
cli
lods
or
mov
or
movups
adc
dec
lea
das
es
or
loop
or
cmp
lock
or
lods
retf
movups
adc
dec
lea
gs
jno
daa
in
popa
ss
or
cmp
cli
lods
or
ror
es
adc
dec
lea
es
and
ss
or
cmp
cli
lods
or
in
or
in
adc
fsubrp
sub
call
inc
inc
in
or
or
xchg
fst
test
gs
add
push
in
gs
movs
mov
pop
jno
sbb
js
out
inc
in
or
aaa
dec
es
fldlg2
sub
mov
outs
cmc
fstp
in
xchg
jbe
xchg
das
es
(bad)
bound
or
lea
or
push
fcom
jo
test
pop
lods
and
arpl
in
popa
es
pop
dec
mov
or
or
in
or
paddsb
adc
dec
paddsb
pop
addr16
fimul
stc
movs
lea
sbb
jbe
sub
fs
std
daa
in
arpl
(bad)
in
es
or
fimul
loope
in
not
push
jae
es
adc
dec
dec
es
addr16
fimul
stc
movs
lea
sbb
jbe
xor
fs
std
daa
in
arpl
lea
sub
gs
imul
paddsb
paddsw
paddsb
or
xchg
dec
xchg
dec
jno
push
add
and
in
pop
dec
push
adc
cli
lods
or
add
or
paddsb
adc
dec
es
adc
dec
dec
paddb
addr16
or
and
in
or
adc
gs
std
daa
in
arpl
lea
xchg
in
mov
push
cdq
or
paddsb
adc
dec
es
adc
dec
dec
paddb
addr16
or
and
in
or
hlt
shl
sar
daa
in
arpl
(bad)
lock
gs
test
es
es
ss
test
push
or
test
cld
daa
in
popa
cld
mov
add
add
stos
sub
lods
or
cmp
cli
lods
or
cmp
lds
jno
gs
popa
cwde
gs
or
or
gs
or
aaa
dec
es
mov
or
paddsb
adc
dec
es
adc
mov
or
xchg
jbe
xor
fs
lea
loope
and
mov
out
enter
xchg
shl
or
in
or
xor
in
popa
push
mov
test
gs
not
lea
es
lock
fst
xchg
xchg
fst
test
daa
gs
arpl
xchg
data16
mov
xor
fs
(bad)
loopne
es
mov
cmp
not
push
jae
es
adc
ror
xchg
es
test
es
popa
cli
mov
ss
es
in
inc
in
or
(bad)
(bad)
repz
fcom
fst
test
dec
pop
test
es
popa
dec
fs
or
in
or
xchg
fs
std
daa
in
arpl
lea
es
cdq
test
in
sbb
or
dec
adc
cli
lods
or
cmp
lds
mov
gs
popa
fldenv
or
in
or
or
test
daa
in
popa
cld
mov
add
add
les
cmp
cli
lods
or
cmp
lds
outs
dec
jge
or
or
test
es
or
aaa
dec
es
sub
or
paddsb
adc
dec
es
adc
dec
dec
paddb
gs
or
in
or
js
pop
dec
jbe
dec
es
xchg
into
mov
or
(bad)
sbb
xchg
fst
xchg
xchg
fst
test
dec
xor
xchg
or
in
or
jmp
daa
in
arpl
lea
es
popf
test
in
arpl
call
es
ds
test
xor
test
stc
daa
in
popa
daa
mov
out
or
lea
xchg
in
arpl
call
es
ds
test
es
arpl
or
test
daa
mov
out
or
(bad)
enter
dec
adc
fimul
loope
in
not
push
jae
es
adc
hlt
arpl
or
xchg
jbe
xor
fs
cld
daa
in
popa
es
or
or
es
xchg
fst
xchg
xchg
fst
test
dec
add
xor
test
stc
daa
in
popa
daa
mov
out
or
lea
es
sub
call
es
xor
test
cmp
test
jmp
in
popa
fdivr
jp
gs
stos
mov
ds
fldlg2
adc
fsubrp
sub
mov
cmp
mov
jge
pop
cdq
push
xchg
cmp
adc
fsubrp
sub
mov
in
setb
imul
daa
in
pop
into
jns
neg
out
sbb
in
adc
fsubrp
sub
call
and
stos
and
jo
in
sub
xchg
fst
xchg
xchg
jo
test
pop
lods
and
arpl
in
popa
es
pop
dec
mov
or
or
in
or
paddsb
adc
dec
paddsb
pop
addr16
fimul
stc
movs
lea
sbb
jbe
and
sar
daa
in
arpl
lea
es
or
leave
or
not
push
jae
es
adc
dec
dec
es
addr16
fimul
stc
movs
lea
sbb
jbe
xor
fs
std
daa
in
arpl
lea
xchg
in
arpl
pmaxsw
paddsb
paddsw
paddsb
or
xchg
dec
xchg
dec
jno
xchg
push
gs
and
in
pop
dec
push
adc
cli
lods
or
pushf
repz
paddsb
adc
dec
es
adc
mov
psubb
or
test
stc
daa
in
popa
mov
gs
cmp
stos
into
clc
lods
or
test
daa
in
arpl
or
mov
or
ss
paddsb
fs
or
push
add
addr16
cmp
mov
cmc
dec
dec
es
cdq
pop
dec
xchg
dec
sub
or
call
pop
jp
or
jno
or
inc
daa
gs
not
lea
lea
or
push
fcom
fst
test
daa
gs
arpl
clc
arpl
or
daa
in
popa
mov
gs
cmp
stos
cmps
les
icebp
scas
mov
fcom
fst
test
daa
gs
arpl
psubb
gs
or
in
mov
xor
fs
(bad)
hlt
push
es
and
pop
nop
adc
dec
adc
cli
lods
or
cmp
lds
mov
gs
arpl
clc
or
test
es
or
aaa
dec
es
cld
jnp
or
paddsb
adc
dec
es
adc
dec
dec
paddb
or
test
es
popa
es
pop
dec
daa
ss
es
xchg
into
(bad)
repnz
(bad)
fcom
adc
in
inc
in
test
or
push
fcom
fst
test
dec
cwde
in
or
or
xchg
gs
or
call
fs
std
daa
in
arpl
lea
stc
mov
call
es
bt
in
or
in
or
or
test
cld
daa
in
popa
cld
mov
add
cmp
stos
mov
scas
or
cmp
cli
lods
or
cmp
lds
in
daa
gs
popa
shl
dec
jnp
or
gs
or
aaa
dec
es
int3
js
or
paddsb
adc
dec
es
adc
dec
dec
paddb
gs
or
in
or
pslld
gs
pop
dec
xor
shl
or
aam
or
(bad)
dec
stos
fs
fst
xchg
xchg
fst
test
dec
out
or
xadd
or
test
daa
mov
out
or
lea
mov
in
mov
out
or
paddsb
adc
dec
es
adc
hlt
arpl
rsm
arpl
or
test
stc
daa
in
popa
daa
mov
out
or
(bad)
rcl
gs
and
call
es
ds
popa
es
pop
dec
mov
in
shl
or
in
or
paddsb
adc
dec
es
adc
dec
dec
psubq
gs
or
in
or
pslld
gs
pop
dec
xchg
shl
or
test
or
(bad)
je
fs
aad
adc
rol
sub
std
xchg
adc
jns
and
mov
jge
pop
jno
into
aas
lahf
imul
retf
arpl
or
xchg
dec
xchg
dec
gs
or
clc
test
in
sub
mov
in
or
loope
jl
or
jl
or
and
or
ficom
gs
stos
and
stos
and
pop
stos
and
pop
fst
cld
popa
sbb
scas
or
in
or
call
push
and
popa
je
scas
or
xor
add
cli
adc
movs
mov
in
push
inc
xchg
fidiv
sar
es
loope
(bad)
adc
movs
mov
adc
loope
mov
out
cmps
mov
add
gs
pop
jo
pop
daa
cmp
gs
daa
xchg
gs
cmps
mov
es
mov
xor
in
loope
jns
or
cld
sbb
scas
mov
push
fxam
xchg
mul
adc
popa
fwait
aad
or
call
scas
xchg
(bad)
mov
cdq
sbb
pop
dec
es
adc
jl
or
in
mul
aad
or
call
cmps
sbb
or
xchg
daa
in
test
xor
in
adc
sbb
loopne
xchg
mul
adc
popa
push
aam
or
call
cmps
sbb
rcpps
xchg
daa
in
test
xor
in
mov
jmp
aaa
or
popa
mov
call
es
je
ins
cdq
sbb
pop
dec
es
adc
in
sti
or
in
sbb
(bad)
in
sub
aaa
or
popa
mov
call
es
je
outs
cdq
sbb
pop
dec
es
adc
xor
or
in
imul
xlat
scas
or
call
cmps
sbb
add
xchg
daa
in
test
xor
in
mov
loope
aaa
or
popa
mov
call
es
rol
adc
scas
mov
cdq
sbb
pop
dec
es
adc
mov
or
paddsb
or
test
daa
in
test
xor
in
loope
adc
dec
es
test
and
loope
cwde
adc
dec
movs
retf
add
lea
es
int
in
sbb
shr
icebp
fcomp
retf
call
jae
or
xor
fimul
or
setge
scas
xchg
mov
or
ss
leave
call
push
ins
xchg
jno
mov
push
jge
cs
cmps
mov
add
gs
xor
ins
call
in
or
test
daa
in
test
xor
in
loope
jg
or
cld
sbb
scas
lock
icebp
fstp
adc
daa
adc
popa
mov
scas
or
call
cmps
fcomp
icebp
fstp
sub
retf
xchg
adc
jbe
or
gs
mov
popf
adc
and
xlat
scas
or
call
sahf
sar
es
or
fldlg2
sub
fldenv
sbb
pop
dec
es
adc
(bad)
stc
or
in
cli
ficomp
test
xchg
daa
in
test
xor
in
mov
arpl
dec
es
adc
or
or
in
cli
ficomp
test
daa
in
test
xor
in
adc
sbb
loopne
push
cli
ficomp
test
daa
in
test
xor
in
mov
ins
cdq
sbb
pop
dec
es
adc
jl
or
in
cli
ficomp
test
mov
xor
in
mov
outs
cdq
sbb
pop
dec
es
adc
cmp
es
sbb
shr
jmp
loopne
push
cli
ficomp
test
xchg
daa
in
test
xor
in
mov
push
pop
dec
es
adc
sar
es
cli
ficomp
test
xchg
daa
in
test
xor
in
popa
push
lds
(bad)
fstp
adc
scas
xchg
sbb
scas
loopne
(bad)
fstp
dec
dec
es
add
retf
mov
jne
mov
xchg
adc
cmps
fcomp
icebp
fstp
push
loope
call
es
out
outs
in
or
loopne
(bad)
fstp
gs
pop
mov
dec
dec
lea
int
in
imul
out
imul
daa
data16
or
call
es
cmc
ficomp
xlat
or
gs
mov
cdq
adc
sbb
imul
mov
gs
inc
adc
inc
in
imul
loopne
imul
dec
push
xor
cmc
ficomp
hlt
or
out
add
fstp
lods
adc
gs
retf
mov
movs
sbb
out
jmp
fistp
ret
scas
mov
and
xlat
mov
popf
adc
sub
mov
xor
clc
lods
or
(bad)
les
dec
es
adc
jo
or
in
sbb
(bad)
in
sub
les
dec
es
adc
pushf
sti
or
out
adc
sub
mov
xor
in
mov
cmp
or
and
xchg
adc
scas
mov
adc
jbe
cld
shl
mov
fwait
adc
jbe
push
push
es
jmp
in
test
xor
in
mov
jno
mov
fwait
adc
jbe
clc
sbb
gs
mov
cdq
adc
movs
movs
call
icebp
fstp
scas
or
call
movs
mov
imul
into
sar
paddsw
mov
adc
fstp
adc
movs
mov
imul
cdq
adc
(bad)
sub
jbe
xor
es
mov
in
sbb
shr
(bad)
call
ficomp
fmul
es
cmc
dec
dec
es
popa
mov
popf
adc
jbe
in
push
es
int
or
popa
mov
fwait
adc
jbe
fcomp
es
mov
fwait
adc
jbe
fcomp
repnz
adc
int
addr16
xchg
adc
cmps
fldl2t
cmc
fcomp
addr16
xchg
adc
loopne
jmp
or
push
test
xchg
adc
movs
fdivr
(bad)
fstp
sbb
shr
(bad)
adc
ficomp
adc
fnstenv
in
test
xor
in
mov
jne
mov
popf
adc
jbe
sub
es
xchg
adc
stos
fcom
neg
call
lods
fsub
fstp
mov
sbb
gs
popf
adc
cmps
xchg
inc
sbb
gs
mov
popf
adc
jbe
pop
std
ficomp
in
or
call
stos
fcom
neg
call
fld1
nop
push
daa
xor
aaa
gs
test
xor
sbb
fstp
in
arpl
paddsb
jl
in
or
cmp
es
mov
cdq
adc
jbe
adc
pushf
and
(bad)
sub
sub
out
fstp
adc
into
cmp
or
in
imul
or
push
stc
or
cmp
movs
fcomp
and
add
mov
es
ss
pop
jo
push
stos
push
cwde
retf
push
xor
in
js
fs
dec
fs
push
es
int3
sbb
gs
movs
cwde
sbb
es
into
ins
stc
or
cmp
loop
pop
in
or
cli
lods
or
pusha
mov
or
gs
xchg
xchg
mov
imul
and
loope
je
or
in
or
or
add
aaa
gs
loope
je
or
int3
sbb
gs
loop
inc
in
or
in
or
call
adc
adc
loope
jne
or
cdq
xchg
in
test
xor
adc
fldenv
push
mov
out
jge
daa
in
add
inc
cwde
mov
push
shr
adc
gs
xor
mov
sub
dec
movs
push
push
out
repz
in
cmp
scas
mov
push
xor
call
xor
push
nop
fcomp
fstp
cld
pop
scas
movs
sbb
out
jmp
fistp
ret
scas
mov
and
sub
xchg
fs
sbb
add
fxam
imul
fstp
ins
retf
in
or
loopne
in
call
scas
cmps
sbb
daa
adc
iret
mov
push
sub
call
adc
cmc
dec
dec
es
popa
mov
(bad)
loopne
es
cli
pusha
ja
or
mov
call
adc
sub
or
call
adc
and
neg
call
adc
lods
sub
(bad)
sub
dec
gs
mov
(bad)
call
or
push
jecxz
es
inc
gs
popa
fwait
mov
dec
dec
es
test
and
loope
jbe
or
call
lahf
inc
in
or
xchg
mov
or
test
(bad)
daa
in
popa
push
lds
or
in
xor
(bad)
in
das
test
call
in
mov
gs
or
add
lea
dec
dec
es
test
mov
in
loope
jbe
or
call
lahf
inc
in
or
xchg
mov
or
test
(bad)
daa
in
popa
es
lods
or
jo
or
out
dec
stos
fcom
fstp
scas
or
xchg
dec
cmp
xor
in
in
arpl
psubsb
paddsb
gs
dec
dec
gs
lea
gs
xchg
pmaxsw
paddsb
enter
mov
in
or
loopne
out
call
stos
call
outs
rcr
ins
xor
dec
gs
jl
xor
fnstenv
adc
xor
es
stos
and
addr16
(bad)
daa
in
not
add
sub
mov
jnp
or
mov
in
or
loopne
out
call
stos
call
outs
rcr
ins
xor
dec
gs
jl
xor
fnstenv
adc
push
or
addr16
(bad)
daa
in
not
add
sub
not
add
sub
mov
adc
or
xchg
xchg
mov
imul
call
fs
mov
xchg
addr16
jmp
and
or
in
arpl
lea
es
repnz
xchg
into
fsub
or
in
test
or
sub
in
or
paddsb
mov
in
or
(bad)
or
gs
mov
sub
es
into
arpl
popa
dec
call
arpl
call
paddsb
paddsb
paddsb
gs
aaa
dec
es
xchg
into
pusha
cld
or
(bad)
in
xchg
test
in
arpl
paddsb
fs
dec
gs
xchg
call
sub
xor
gs
mov
pushf
(bad)
daa
in
loope
push
xor
es
in
and
pop
scas
xor
loope
imul
div
mov
adc
dec
in
imul
fstp
scas
or
xor
es
test
es
loope
repz
movs
mov
jmp
add
pop
dec
es
shr
or
icebp
inc
neg
in
xor
(bad)
in
das
test
xor
test
push
and
in
loope
imul
jbe
fs
mov
in
arpl
or
xchg
dec
gs
sub
pop
into
or
or
paddsb
fs
or
cmp
cli
lods
or
cmp
or
mov
test
mov
or
gs
dec
ret
mov
paddsb
call
mov
leave
push
mov
push
jge
sbb
xor
cmps
mov
or
gs
xor
inc
data16
or
jne
lea
imul
push
ins
daa
gs
loopne
ins
in
or
je
or
push
jnp
gs
xor
fs
or
rcr
daa
gs
push
stos
enter
pop
aam
es
pop
fs
or
clc
in
es
popa
xchg
daa
in
or
loope
or
gs
std
daa
in
not
or
shr
fstp
adc
scas
popf
in
icebp
scas
mov
in
not
(bad)
iret
in
fstp
imul
mov
xor
adc
into
je
or
ins
sub
mov
call
adc
push
test
addr16
sub
add
adc
neg
dec
imul
into
popa
addr16
neg
and
fstp
addr16
cwde
adc
or
call
fistp
adc
fstp
pop
paddsw
(bad)
aad
call
fstp
adc
jbe
in
arpl
call
mov
or
outs
xor
shr
leave
and
test
shr
dec
es
cmp
add
es
xor
shr
pop
into
call
push
shr
test
gs
not
or
xchg
out
fstp
in
or
mov
in
xor
jecxz
inc
(bad)
in
or
push
sub
loopne
(bad)
in
or
pop
test
jl
(bad)
clc
add
gs
adc
gs
inc
in
imul
loope
(bad)
es
xor
imul
ror
jmp
jge
pop
jmp
jge
pop
jmp
jge
pop
jmp
jge
pop
jmp
jge
pop
jmp
jge
pop
jmp
jge
pop
jmp
jge
pop
jmp
push
mov
paddsb
push
jne
jmp
adc
fstp
jne
daa
in
jge
pop
jmp
jge
pop
jmp
jl
or
adc
push
add
fstp
add
sub
mov
dec
in
or
and
cwde
adc
scas
mov
adc
es
jmp
stos
loopne
hlt
fstp
in
or
call
iret
cmp
or
in
adc
fsubrp
sub
gs
or
call
lea
add
gs
mov
call
paddsb
mov
add
sub
lea
es
call
jmp
gs
sbb
adc
loope
imul
mov
mov
adc
cmps
pop
pushf
mov
mov
or
popa
mov
call
xchg
in
loope
outs
in
or
call
daa
gs
lock
popf
jmp
popa
js
scas
or
call
movs
mov
in
or
xchg
dec
test
(bad)
daa
in
arpl
lea
es
les
or
mov
(bad)
sbb
inc
in
imul
loope
imul
stos
loopne
hlt
fstp
scas
or
call
movs
mov
in
or
call
lea
add
gs
mov
call
paddsb
mov
add
sub
in
not
jns
dec
es
call
jmp
gs
test
out
mul
ror
adc
sub
or
cmp
paddsb
add
in
or
push
lock
data16
das
gs
loopne
popa
in
or
loopne
neg
call
es
fstp
call
arpl
paddsb
mov
or
jmp
jns
lea
gs
mov
data16
call
scas
popf
(bad)
mov
adc
jbe
imul
dec
dec
xor
es
adc
lock
es
sbb
in
or
call
adc
push
ins
test
gs
cs
mov
gs
sub
or
cmp
paddsb
dec
ins
in
or
push
ins
test
gs
das
gs
loopne
popa
in
or
gs
mov
call
fistp
xor
es
adc
dec
out
es
sbb
in
or
call
adc
push
rcl
gs
mov
gs
sub
or
cmp
paddsb
and
in
or
push
rcl
gs
loopne
data16
or
mov
adc
jbe
imul
dec
(bad)
cmp
call
adc
mov
sub
dec
call
fstp
les
cs
mov
gs
sub
or
cmp
paddsb
mov
push
les
cs
loopne
data16
or
call
daa
gs
lock
popf
out
jge
paddsb
or
xchg
into
add
or
call
xor
in
or
popa
out
or
mov
adc
int
jecxz
mov
out
push
neg
push
nop
or
dec
xchg
dec
dec
cmp
paddsb
add
or
push
les
and
loopne
addr16
or
call
fstp
jnp
in
adc
fsubrp
sub
xor
adc
jbe
rcl
gs
mov
cwde
adc
jbe
xor
es
int
or
popa
mov
call
mov
(bad)
in
or
call
es
xchg
into
enter
call
jl
in
or
sub
or
mov
adc
int
jecxz
mov
out
push
neg
push
nop
or
dec
xchg
dec
mov
dec
es
dec
(bad)
in
or
push
int3
xchg
addr16
and
loopne
addr16
or
call
(bad)
and
in
or
adc
neg
call
pop
popf
gs
stos
loopne
neg
call
fnstenv
in
test
xor
in
mov
jne
mov
gs
inc
in
imul
mov
in
sub
paddsb
paddsb
or
test
and
loope
pusha
in
or
call
fnop
sbb
fstp
in
mov
adc
cdq
dec
stos
push
outs
rcr
ins
xor
scas
cmps
xchg
stos
lock
fstp
jne
es
cld
pusha
in
or
mov
cwde
adc
jbe
out
popa
(bad)
test
neg
call
stos
nop
adc
(bad)
and
in
or
adc
stc
fistp
jno
fistp
sbb
fstp
in
arpl
call
adc
addr16
(bad)
daa
in
not
lea
rcr
call
dec
xchg
loope
arpl
or
or
or
or
lods
popa
push
cmc
lods
or
fsubr
or
in
imul
ficom
adc
fldz
imul
loope
out
arpl
paddsb
xchg
xchg
adc
(bad)
popa
add
(bad)
scas
or
pop
in
or
gs
popa
pushf
(bad)
cwde
adc
je
test
xchg
xchg
adc
(bad)
xchg
stos
loopne
hlt
fstp
add
fs
mov
pop
std
fcomp
in
or
pusha
cmp
gs
setge
dec
popa
xchg
es
test
daa
in
popa
daa
gs
mov
jecxz
neg
out
adc
cmp
cli
lods
or
mov
or
fld
gs
scas
loopne
hlt
fstp
adc
cdq
sbb
adc
not
add
and
push
js
and
add
add
jne
mov
push
fisub
loope
test
or
push
fsub
gs
mov
in
mov
pop
(bad)
sub
and
loope
popa
in
or
and
loope
fabs
mov
call
movs
popa
in
or
gs
add
push
rcl
gs
xor
dec
jae
es
not
jns
dec
lea
icebp
rol
sub
adc
dec
es
not
dec
jae
lea
push
cli
lods
or
adc
cli
lods
or
dec
call
sub
in
jns
daa
in
or
adc
clc
lods
or
je
or
pop
fldcw
mov
in
jns
daa
in
or
adc
les
or
mov
sbb
or
pop
mov
lods
or
addr16
lock
or
gs
shrd
xchg
xlat
cmp
cli
lods
or
addr16
cli
lods
or
xlat
cmp
lock
or
addr16
cmc
lods
or
gs
shrd
test
xlat
cmp
cli
lods
or
addr16
cld
lods
or
gs
shrd
xchg
addr16
push
ja
jl
call
jne
cwde
or
cmps
mov
mov
jge
sbb
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
gs
loope
gs
or
adc
arpl
adc
jbe
mov
int
in
test
and
and
adc
loop
and
mov
ins
sub
and
adc
push
xchg
pop
or
push
push
das
movs
cwde
or
popf
int3
jge
paddsb
loopne
in
or
arpl
xor
adc
cmps
mov
retf
or
dec
in
sbb
imul
pop
imul
add
leave
lahf
call
mov
addr16
add
sbb
cli
xor
fisubr
ins
in
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
adc
xchg
scas
or
gs
