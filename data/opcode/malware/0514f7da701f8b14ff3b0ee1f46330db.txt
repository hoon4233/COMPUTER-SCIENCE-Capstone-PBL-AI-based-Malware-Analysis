loopne
add
add
add
dec
add
add
add
add
jge
add
add
add
add
push
sbb
add
mov
add
add
add
add
add
sub
add
add
add
sub
or
jae
add
or
jae
add
or
jae
add
or
sub
add
xor
add
add
add
add
adc
add
add
or
add
sub
adc
add
or
add
add
add
jle
add
add
or
add
sub
adc
add
or
add
add
add
jle
add
add
or
add
sub
adc
add
or
add
add
add
jle
add
add
or
add
xor
add
add
adc
add
adc
add
sub
add
or
add
add
xor
add
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
adc
add
adc
add
sub
adc
add
pop
add
add
add
adc
sub
add
xor
add
add
add
add
adc
mov
add
sbb
add
sub
sub
xor
add
add
add
add
adc
adc
(bad)
adc
push
add
push
add
pop
add
or
adc
add
sbb
add
or
add
jle
add
or
or
add
add
sbb
add
jle
add
or
push
add
pop
add
or
push
add
pop
add
or
sbb
or
into
push
add
or
add
jae
add
or
push
jb
add
jo
push
add
or
jb
add
jo
push
add
or
jb
add
jo
push
add
or
jb
add
jo
push
add
or
jb
add
jo
push
add
or
jb
add
jo
push
add
or
jb
add
jo
push
add
or
jb
add
add
or
jb
push
add
push
add
or
jb
pop
add
push
add
or
jb
or
jo
push
add
or
jb
or
jo
push
add
or
jb
or
jo
push
add
or
jb
or
jo
push
add
or
jb
or
jo
push
add
or
jb
or
jo
push
add
or
jb
or
add
or
jb
push
add
push
add
or
jb
(bad)
jo
push
add
or
jb
adc
jo
push
add
or
jb
adc
jo
push
add
or
jb
adc
jo
push
add
or
jb
adc
jo
push
add
or
jb
adc
jo
push
add
or
jb
adc
jo
push
add
or
jb
adc
add
or
jb
push
add
push
add
or
jb
pop
add
push
add
or
jb
sbb
jo
push
add
or
jb
sbb
jo
push
add
or
jb
sbb
jo
push
add
or
jb
sbb
jo
push
add
or
jb
sbb
jo
push
add
or
jb
sbb
jo
push
add
or
jb
sbb
add
or
jb
push
add
push
add
or
jb
pop
add
push
add
or
jb
pop
add
push
add
or
jb
and
jo
push
add
or
jb
and
jo
push
add
or
jb
and
jo
push
add
or
jb
and
jo
push
add
or
jb
and
jo
push
add
or
jb
and
jo
push
add
or
jb
and
add
or
jb
add
push
add
or
jb
add
push
add
or
jb
daa
add
push
add
or
jb
sub
jo
push
add
or
jb
sub
jo
push
add
or
jb
sub
jo
push
add
or
jb
sub
jo
push
add
or
jb
sub
jo
push
add
or
jb
sub
jo
push
add
or
jb
sub
add
or
jb
add
push
add
or
jb
add
push
add
or
jb
das
add
push
add
or
jb
xor
jo
push
add
or
jb
xor
jo
push
add
or
jb
xor
jo
push
add
or
jb
xor
jo
push
add
or
jb
xor
jo
push
add
or
jb
xor
jo
push
add
or
jb
xor
jo
push
add
or
jb
xor
add
or
jb
add
push
add
or
jb
aaa
add
push
add
or
jb
cmp
jo
push
add
or
jb
cmp
jo
push
add
or
jb
cmp
jo
push
add
or
jb
cmp
jo
push
add
or
jb
cmp
jo
push
add
or
jb
cmp
jo
push
add
or
jb
cmp
add
or
jb
add
push
add
or
jb
aas
add
push
add
or
jb
aas
add
push
add
or
jb
inc
add
push
add
or
jb
inc
add
push
add
or
jb
inc
add
push
add
or
jb
inc
add
push
add
or
jb
inc
add
push
add
or
jb
inc
add
push
add
or
jb
inc
add
push
add
or
jb
inc
add
push
add
or
jb
dec
add
push
add
or
jb
dec
add
push
add
or
jb
dec
add
push
add
or
jb
dec
add
push
add
or
jb
dec
add
push
add
or
jb
dec
add
push
add
or
jb
dec
add
push
add
or
jb
dec
add
push
add
or
jb
dec
add
push
add
or
jb
dec
add
push
add
or
jb
dec
add
push
add
or
jb
push
add
push
add
or
jb
push
add
push
add
or
jb
push
add
push
add
or
jb
push
add
push
add
or
jb
push
add
push
add
or
jb
push
add
push
add
or
jb
push
add
push
add
or
jb
push
add
push
add
or
jb
push
add
push
add
or
jb
push
add
push
add
or
jb
pop
add
push
add
or
jb
pop
add
push
add
or
jb
pop
add
push
add
or
jb
pop
add
push
add
or
jb
pop
add
push
add
or
jb
pop
add
push
add
or
jb
pop
add
push
add
or
jb
pop
add
push
add
or
jb
pop
add
push
add
or
jb
pusha
add
push
add
or
jb
pusha
add
push
add
or
jb
popa
add
push
add
or
jb
bound
jo
push
add
or
jb
bound
jo
push
add
or
jb
arpl
jo
push
add
or
jb
add
push
add
or
jb
add
push
add
or
jb
add
push
add
or
jb
add
push
add
or
jb
add
push
add
or
jb
add
push
add
or
jb
push
add
or
jb
imul
add
jb
imul
add
or
and
add
sub
add
or
adc
add
or
jb
imul
add
sub
add
or
imul
add
pop
lea
add
add
add
sub
add
mov
adc
and
add
je
add
add
imul
add
pop
lea
add
add
push
adc
push
pop
sub
add
or
adc
and
add
sub
add
or
sub
add
or
outs
imul
add
pop
lea
add
add
push
adc
push
jb
imul
adc
adc
and
add
sub
add
or
imul
add
sub
add
or
imul
add
pop
lea
add
add
push
adc
push
jb
imul
add
mov
adc
and
add
je
add
add
imul
add
pop
lea
add
add
add
sub
add
or
adc
and
add
fimul
and
or
add
and
add
add
inc
sbb
add
add
add
add
add
add
add
xor
add
add
adc
outs
add
or
add
jo
add
or
add
outs
daa
add
or
ficom
(bad)
lea
add
add
daa
add
or
ficom
outs
daa
add
or
ficom
popf
push
or
add
add
or
ficom
or
pop
sub
pop
add
add
or
fisubr
cmp
adc
mov
add
or
add
or
add
xchg
adc
adc
push
ficom
or
adc
or
pop
adc
sub
add
or
add
or
and
add
pop
(bad)
or
pop
pop
(bad)
adc
adc
adc
xor
or
pop
sub
add
or
add
add
or
add
add
xor
lea
add
push
add
adc
add
or
jae
add
or
pop
jae
add
or
add
or
adc
cmp
add
lea
add
add
push
adc
push
pop
sub
add
or
mov
add
add
adc
inc
imul
push
lea
add
add
adc
and
add
sub
add
or
adc
adc
sbb
adc
adc
push
pop
pushf
adc
pop
push
pushf
adc
sbb
pushf
adc
sub
add
or
or
nop
sub
adc
push
call
adc
sbb
adc
inc
imul
pop
lea
add
add
or
or
adc
sbb
or
pop
push
sub
adc
add
adc
add
mov
add
add
sub
add
or
or
push
imul
sbb
adc
adc
push
pop
sub
add
or
mov
add
add
add
adc
add
mov
adc
adc
sbb
adc
adc
push
pop
pushf
adc
pop
push
pushf
adc
sbb
pushf
adc
pop
sub
add
or
adc
push
nop
sub
adc
push
call
adc
sbb
sbb
or
add
(bad)
(bad)
(bad)
dec
adc
pusha
imul
push
lea
add
add
adc
sub
add
or
or
ins
imul
push
lea
add
add
adc
and
add
je
add
sbb
pushf
inc
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
mov
pop
out
add
add
xor
xor
add
outs
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
les
add
mov
inc
or
add
or
add
add
or
add
add
jmp
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
jmp
js
in
mov
aam
jp
(bad)
sti
cmp
mov
(bad)
sti
dec
mov
and
popf
xchg
into
dec
push
push
rcr
xchg
push
in
mov
push
(bad)
add
idiv
cmp
cwde
mov
cmp
scas
mov
cmp
out
jo
rep
push
inc
inc
jle
popf
lahf
mov
nop
pusha
mov
xor
test
push
and
call
iret
loope
dec
dec
xchg
dec
dec
push
popa
clc
stos
imul
call
ss
rcr
aam
push
in
push
aam
ins
outs
clc
dec
fcomi
test
jmp
(bad)
inc
mov
xchg
pop
out
pop
jae
dec
stc
loop
xor
jge
aas
sub
or
cmps
mov
mov
scas
push
std
retf
(bad)
and
(bad)
mov
or
and
or
mov
pushf
fs
mov
(bad)
fbld
(bad)
jmp
xchg
mov
mov
repz
stos
daa
sub
sub
fcom
jmp
jmp
add
test
dec
shl
inc
test
in
cmps
shl
call
cmp
xchg
mov
push
and
xor
aas
xchg
mov
cmps
mov
xchg
(bad)
sbb
and
shl
cmps
mov
jo
push
aad
adc
push
cmps
xlat
sub
xchg
sub
nop
inc
nop
add
adc
fisttp
ja
xor
sar
push
sbb
dec
test
or
sbb
pop
inc
out
int3
lds
jne
cmp
xlat
add
in
into
aad
adc
mov
ret
popf
mov
inc
add
pop
adc
ss
shr
xor
cli
push
stc
push
call
lds
mov
leave
or
jp
pop
dec
outs
jp
and
dec
fidivr
mov
sbb
jnp
into
mov
sti
cwde
(bad)
xor
mov
es
mul
lahf
stos
mov
jp
inc
sub
and
iret
mov
mov
mov
xchg
add
cmc
add
xchg
or
push
jge
fs
clc
xor
jmp
clc
jmp
loope
out
lock
(bad)
push
dec
popa
out
xchg
sar
mov
push
jge
mov
mov
pop
add
cmps
push
scas
cmp
aaa
or
mov
jmp
jle
fisubr
jle
sub
adc
mov
dec
mov
mov
xchg
adc
xchg
dec
push
add
xchg
mov
retf
pop
push
ficom
push
pusha
std
cmp
adc
push
push
loop
ja
cmp
daa
les
mov
lods
cli
(bad)
aas
fidiv
pop
nop
das
inc
pop
inc
loopne
stos
(bad)
pop
xchg
arpl
mov
xchg
inc
or
cmp
dec
adc
stc
addr16
jns
jl
or
dec
ds
out
push
sbb
pop
push
mov
pop
jecxz
mov
pop
push
and
push
les
or
cmp
jns
mov
jmp
fidiv
add
mov
data16
ret
leave
das
popf
jno
push
gs
shl
cmps
imul
pop
xor
cmps
pusha
inc
add
(bad)
paddd
dec
jmp
aad
es
pusha
and
and
sub
cmp
pop
mov
xor
ficomp
jne
inc
sub
cmp
stos
leave
push
inc
enter
push
dec
inc
dec
jne
stc
pusha
sbb
test
aas
ds
test
jne
icebp
cmps
je
cmp
mov
ror
std
push
inc
fsubr
push
jge
clc
sub
push
(bad)
repnz
add
aas
add
mov
retf
jbe
xor
dec
cdq
push
adc
push
out
add
cs
lahf
repnz
ret
mov
aad
cmps
outs
add
pop
sub
sbb
or
dec
push
jnp
cmp
out
jb
add
(bad)
aaa
rol
lods
or
std
jmp
xor
xor
out
(bad)
jmp
push
dec
mov
mov
mov
jmp
dec
pusha
push
cmp
test
pop
dec
ins
push
add
loope
(bad)
xchg
iret
nop
xlat
ds
lea
cmp
sahf
repz
retf
push
sbb
shl
jae
dec
jmp
inc
push
cwde
push
imul
add
xor
call
(bad)
scas
push
xchg
lods
call
add
and
lds
mov
push
movs
arpl
(bad)
fisubr
into
mov
int
les
inc
pop
lods
mov
dec
or
int
adc
repnz
xchg
adc
in
call
or
or
inc
xchg
sahf
(bad)
das
popa
and
cli
(bad)
test
in
loope
push
push
fisub
sub
addr16
mov
dec
mov
dec
test
dec
mov
xchg
iret
repnz
ss
xlat
push
and
mov
fxch
ret
mov
outs
pop
push
xor
mov
xor
mov
lods
shr
cmp
inc
mov
adc
cwde
push
sub
pop
push
adc
cmps
jl
stos
mov
(bad)
scas
stc
mov
pushf
(bad)
mov
jns
and
or
les
push
call
push
(bad)
xchg
inc
mov
mov
fst
cmps
shr
sbb
movs
sar
iret
les
jp
cs
push
jo
sub
cs
retf
outs
or
mov
imul
or
(bad)
stc
pop
pop
mov
std
cmp
imul
xor
bound
jae
cld
cmc
adc
xchg
xor
cmc
call
xchg
adc
(bad)
adc
sub
xchg
sbb
push
cmp
jmp
test
mov
and
sbb
or
out
jb
dec
loope
sbb
or
or
out
ror
inc
repz
jg
xor
mov
pop
ds
(bad)
loop
shl
push
mov
xchg
cld
push
fldcw
ret
cmps
out
sbb
cli
sub
and
ror
jb
jmp
shl
push
mov
in
jae
lods
out
push
push
fcomi
add
push
mov
rcl
in
dec
les
push
push
nop
adc
sahf
rol
lods
add
add
imul
push
cmp
pop
aas
loopne
sbb
cwde
xchg
lods
fs
push
test
add
and
add
dec
or
mov
rol
scas
xchg
adc
adc
es
push
push
mov
add
scas
stos
sub
xchg
jge
jle
jae
xchg
inc
fs
sub
dec
or
or
sub
inc
or
stc
enter
pusha
lahf
jecxz
push
adc
(bad)
cmp
cmps
add
mov
loope
sub
jmp
mov
ret
add
setno
cwde
fcomp
cwde
sbb
xchg
mov
xchg
lock
pop
and
jnp
outs
mov
retf
mov
xchg
sti
lock
pop
sbb
adc
and
jmp
data16
mov
in
sbb
bound
xchg
pop
push
xor
adc
test
mov
and
int
sar
mov
cmp
jne
mov
cdq
fs
or
sub
jmp
ds
mov
shl
inc
push
xchg
aas
dec
lods
sub
jge
ss
add
and
cmc
dec
xor
aaa
lea
cmp
mov
movs
(bad)
ror
js
lods
sbb
sbb
jl
push
jno
or
(bad)
neg
xor
jge
push
and
aas
sbb
sbb
mov
cmp
outs
pop
xor
popf
pop
or
adc
imul
(bad)
aas
je
mov
test
imul
pop
jg
mov
inc
fadd
and
jb
jmp
cdq
jae
cmp
push
sub
adc
pop
cmp
call
scas
sub
cmp
sbb
scas
shl
or
and
jle
mov
out
scas
mov
push
aad
mov
add
and
sub
or
dec
cmp
xor
dec
sbb
in
mov
and
xor
fwait
retf
(bad)
pushf
ret
push
pop
sbb
pop
jl
push
dec
jmp
jle
jns
dec
call
pop
or
jmp
inc
dec
jbe
dec
inc
push
sbb
sbb
rol
cmp
hlt
sbb
imul
mov
inc
xor
push
and
push
mov
cmp
cmp
clc
adc
cmc
ror
gs
imul
cmc
imul
outs
inc
bound
ret
repnz
or
add
pop
mov
or
jge
cmps
inc
adc
inc
call
adc
cmp
test
mov
cli
test
jmp
cmc
and
mov
jmp
ins
push
push
jecxz
dec
clc
je
and
pop
arpl
ret
dec
mov
ret
mov
dec
and
adc
and
xor
mov
repnz
adc
inc
mov
lods
mov
aam
push
retf
pop
dec
fdivr
pop
inc
pushf
add
jb
mov
push
sbb
stos
je
sub
fsub
cli
popa
sbb
cli
xor
jmp
inc
out
shr
loopne
(bad)
sti
push
push
mov
sub
movs
push
std
out
add
pop
mov
jg
push
div
clc
fiadd
je
cmp
icebp
jbe
and
jae
cmp
fld
xor
push
jg
jge
push
enter
es
enter
mov
cdq
pop
clc
lock
xor
sbb
xchg
mov
daa
xchg
dec
sbb
xlat
imul
or
data16
dec
pop
push
adc
inc
sub
shl
cmp
scas
mov
mov
adc
xchg
sbb
or
jno
sbb
adc
mov
clc
xchg
rcr
dec
stc
xchg
or
cs
mov
arpl
sub
xor
lahf
scas
mov
test
sbb
cmps
adc
inc
mov
in
push
out
cmp
xor
test
jle
jnp
or
lahf
dec
stos
pop
push
jl
adc
mov
push
adc
scas
scas
jne
ins
sar
pop
mov
and
mov
addr16
je
into
cmovo
mov
mov
je
in
imul
in
pop
movs
jge
cmp
retf
jmp
les
mov
xchg
mov
dec
mov
sahf
enter
inc
xlat
arpl
out
cwde
cmp
je
inc
mov
push
push
repnz
hlt
mov
jns
jle
add
add
mov
add
mov
mov
mov
imul
pop
ins
add
dec
xor
jb
jp
rcl
scas
sbb
jg
loopne
jmp
jb
cmc
push
add
enter
jle
movs
and
mov
mov
lods
dec
cmp
(bad)
push
push
aam
inc
cmp
or
call
scas
push
mov
or
mov
fstp
cmp
inc
sti
daa
push
add
into
daa
imul
mov
iret
stos
loopne
jno
movs
idiv
out
push
sub
push
loopne
loope
dec
xchg
mov
outs
adc
add
push
adc
das
xchg
popf
rcr
xchg
pop
pop
jg
adc
cmp
cmp
and
push
ins
and
inc
xchg
loope
iret
jmp
pop
dec
and
xchg
lea
add
add
popf
cmps
jecxz
loop
pushf
enter
mov
mov
sbb
arpl
xchg
ficom
addr16
push
xchg
rcr
or
into
cmps
das
aas
xchg
fwait
push
jns
push
js
cmp
bound
sbb
aad
jne
mov
xor
jle
and
mov
or
sbb
add
das
ss
lds
jnp
add
mov
repz
and
call
xchg
and
mov
xor
(bad)
and
jo
sub
lods
xor
or
xchg
fimul
sub
or
cmp
jg
(bad)
sbb
adc
fst
xchg
aad
in
mov
xchg
cmp
test
dec
mov
mov
aaa
sbb
push
xchg
movs
aas
popf
push
and
rcr
std
div
bound
fisttp
xor
xor
jecxz
stos
mov
jmp
in
hlt
mov
(bad)
xchg
out
dec
dec
push
dec
push
push
sar
add
in
loope
jge
out
sub
int
or
mov
push
into
xor
js
into
pop
bound
repnz
lods
test
fsub
jmp
xchg
mov
movs
popa
and
jge
cmp
shl
movs
or
enter
pushf
cmps
cmp
fdivr
addr16
xor
cmp
mov
pop
movs
es
adc
arpl
pop
xchg
and
xchg
cmp
fldenv
add
mov
sbb
jmp
jae
fadd
das
aam
(bad)
cli
fwait
xor
outs
arpl
mov
daa
cmp
sbb
sbb
cld
push
lds
sub
sbb
mov
(bad)
jg
sbb
js
push
adc
jo
xor
cmp
fwait
shl
pop
mov
mov
int
pushf
xchg
mov
add
xor
test
arpl
jo
fs
jecxz
outs
or
dec
stos
scas
or
test
lock
ins
push
addr16
out
movs
loope
test
jg
xchg
mov
jp
ret
mov
ret
pop
(bad)
adc
cmp
test
sbb
ror
xor
cmps
pop
ss
mov
xchg
rcl
sub
(bad)
xchg
or
inc
push
jge
xchg
push
aas
mov
sar
jle
call
sar
std
enter
push
pushf
and
push
jle
cmps
xor
stos
dec
sbb
sbb
pop
or
pop
jo
jo
jbe
call
int3
aaa
cs
cmp
and
test
mov
mov
(bad)
push
inc
adc
fidiv
gs
sbb
and
(bad)
enter
fadd
add
inc
hlt
sub
aam
xor
mov
mov
test
push
or
test
stos
pop
(bad)
mul
icebp
xchg
or
aas
mov
mov
push
inc
retf
mov
pop
ja
and
cmps
imul
adc
add
add
pop
iret
or
jo
add
cs
and
adc
loope
sub
sbb
pop
dec
dec
cld
mov
adc
pop
or
adc
aas
or
jb
sti
out
add
test
repnz
add
mov
pop
daa
push
ja
iret
ror
mov
mov
pop
jmp
xchg
cmp
lahf
lea
pop
call
xor
scas
and
nop
add
nop
movs
sbb
(bad)
inc
inc
sbb
cmp
push
call
xchg
pop
(bad)
stos
mov
pop
cli
mov
loope
push
mov
add
cli
pop
mov
xchg
bound
fisttp
retf
dec
cdq
cmp
mov
mov
sti
jmp
inc
js
mov
mov
test
aas
repnz
daa
dec
imul
dec
xchg
xchg
xlat
bound
mov
mov
xchg
popw
leave
enter
sub
test
gs
push
cmps
fcmovb
in
cmps
dec
jnp
xchg
call
xlat
inc
jecxz
in
fidiv
daa
or
in
or
cmp
imul
std
je
or
inc
or
std
fist
fistp
sub
add
jmp
xor
f2xm1
push
xor
aad
add
add
push
push
adc
or
out
nop
mov
cs
or
scas
iret
hlt
mov
pop
fisubr
xchg
xchg
mov
xor
add
bound
mov
jge
jmp
dec
jge
push
(bad)
and
es
in
rol
mov
lods
out
into
in
and
or
dec
icebp
jnp
xor
add
mov
loope
repz
adc
inc
pushf
push
cmp
sub
out
cli
mov
jne
mov
inc
xor
mov
inc
dec
aad
shr
mov
pop
push
mov
shl
dec
scas
and
push
fldenv
cmp
cli
js
pop
out
and
les
scas
aad
cmp
loopne
call
mov
sub
js
jae
xchg
shl
sub
stos
out
mov
not
cmp
aas
dec
cmp
mov
cli
(bad)
fist
mov
iret
stc
retf
mul
cli
popa
add
ins
out
(bad)
aaa
xor
out
xor
ins
mov
mov
stos
mov
clc
jle
adc
ins
fcmovnb
fstp
mov
xchg
adc
adc
xlat
xor
sub
jno
rol
imul
test
jb
adc
scas
mov
retf
mov
ret
mov
js
sub
aam
mov
fmul
cmp
sbb
mov
repnz
pop
push
les
push
rcl
xor
mov
dec
push
inc
repz
inc
or
inc
stos
bound
ror
loop
bound
repz
fisttp
dec
jg
loopne
xchg
into
std
push
ror
mov
push
xlat
add
lock
adc
inc
sahf
or
xchg
in
fs
aam
imul
pusha
jl
aam
pop
cwde
jb
shl
or
pusha
inc
sahf
test
or
pop
fs
shl
mov
hlt
hlt
ret
push
adc
adc
ss
ss
push
fld
(bad)
fld
push
imul
shr
jno
aaa
call
pop
(bad)
inc
cmps
(bad)
jmp
xlat
sub
(bad)
sub
pop
sti
aam
gs
sti
add
cmp
lea
inc
dec
lahf
stc
jb
push
leave
dec
add
inc
dec
lock
sbb
stc
aam
inc
sahf
mov
lahf
push
jne
dec
leave
xchg
xchg
lock
add
aad
lods
dec
push
mov
sahf
adc
xchg
cmp
xor
push
mov
test
scas
sub
shl
pop
test
not
pop
dec
sub
movs
dec
es
jae
into
sub
mov
out
not
pop
and
pusha
xchg
mov
stos
jmp
add
fstp
add
aas
int
scas
je
neg
add
aad
pop
cwde
sbb
stos
xor
adc
dec
and
xchg
je
dec
push
out
add
std
sub
gs
or
je
mov
scas
je
out
mov
dec
loopne
mov
pop
xchg
xchg
sti
dec
call
push
adc
dec
dec
mov
jmp
inc
lods
inc
cld
xchg
xchg
ficom
(bad)
fstp
and
retf
addr16
call
repz
out
scas
pop
sbb
sbb
sub
shl
xchg
stos
xor
mov
sub
clc
lods
jp
jno
xchg
sbb
loopne
fdivr
cld
and
mov
jecxz
shr
lds
jo
pop
mov
sub
mov
jmp
sbb
jns
bound
(bad)
or
and
ss
adc
(bad)
dec
cmp
jns
push
outs
aas
jmp
push
and
call
adc
loop
sbb
int3
mov
sbb
xlat
xchg
adc
push
ret
(bad)
in
popf
je
pop
test
mov
push
ins
mov
adc
call
jg
push
gs
mov
iret
mov
js
dec
xchg
ror
repnz
hlt
fisttp
pop
icebp
dec
push
add
jecxz
dec
xchg
dec
cmp
into
lods
xchg
daa
stos
leave
(bad)
aaa
outs
mov
inc
popa
jns
jmp
(bad)
adc
popa
loope
lods
test
pop
dec
cmp
xchg
inc
outs
mov
shl
dec
out
dec
cmp
into
ins
idiv
and
loopne
outs
adc
popa
test
lea
(bad)
mov
adc
shr
pop
and
xchg
push
cmps
sbb
push
ss
cmp
fs
xchg
mov
inc
mul
test
cld
out
lds
icebp
into
mov
test
ja
mov
adc
push
jno
test
fisubr
retf
arpl
pop
mov
push
pop
inc
fnsetpm(287
adc
xchg
(bad)
stos
pop
out
jmp
or
xor
cmp
mov
sub
aas
std
inc
sub
xchg
popa
lock
iret
call
ja
popf
jb
add
(bad)
leave
test
cwde
xchg
jl
jecxz
stos
cmc
ret
cmp
sar
mov
adc
or
daa
call
push
les
sbb
push
xchg
pop
jl
ror
sub
mov
or
enter
jb
cmc
(bad)
cdq
inc
xchg
pop
or
inc
addr16
xchg
adc
xchg
cdq
lahf
cmp
popf
xlat
xchg
or
jae
mov
retf
mov
mov
cwde
inc
fmul
sub
jle
sub
mov
movs
rcl
add
inc
xor
sub
mov
mov
mov
dec
dec
lahf
int3
add
mov
sub
sbb
push
inc
cmp
cmps
shl
rcr
(bad)
cwde
and
xor
fcomi
mov
pop
sbb
fldlg2
xor
cli
movs
mov
cmp
(bad)
in
adc
(bad)
and
(bad)
and
cmp
mov
push
pusha
and
mov
shr
xor
stos
popa
fsubr
pop
pusha
(bad)
inc
inc
neg
popa
into
call
(bad)
hlt
ret
pop
xchg
mov
jecxz
adc
adc
popf
xor
movs
retf
adc
inc
movs
ja
fs
mov
pop
xor
in
cs
jmp
push
mov
les
cmps
adc
gs
dec
aam
adc
cmp
jae
shl
in
or
lods
cdq
repnz
push
or
call
push
gs
loopne
cmp
mov
cmp
neg
sub
pop
ja
and
or
shr
repnz
push
and
ja
jb
enter
inc
adc
retf
xchg
in
sbb
pop
clc
popf
fs
lock
sub
mov
mov
nop
adc
pop
out
mov
fldcw
mov
push
icebp
sbb
icebp
mov
sbb
stos
es
sar
mov
ins
cld
or
xchg
mov
btc
iret
inc
xchg
add
enter
xchg
test
mov
mov
out
xor
add
mov
out
xchg
push
xor
jb
jle
sbb
stos
(bad)
stos
(bad)
call
repnz
cwde
ja
pop
inc
push
pop
jecxz
ret
dec
inc
(bad)
(bad)
mov
or
pop
push
ret
popf
jne
dec
pop
mov
rol
div
aam
out
jg
repz
pop
pop
(bad)
repnz
jnp
or
mov
add
jmp
mov
test
jmp
mov
add
mov
cld
sub
pop
lods
retf
cld
fwait
loope
push
mov
cdq
enter
lock
daa
sbb
sub
lock
lahf
shr
mov
popf
out
add
sbb
cdq
div
pushf
imul
mov
call
push
jne
mov
fwait
push
pop
dec
dec
jb
popf
jge
pop
xchg
mov
jg
ins
ficom
and
retf
push
sub
into
xchg
push
(bad)
test
les
jnp
dec
(bad)
xchg
push
mov
pop
xor
std
in
pop
idiv
mov
jae
lods
jo
arpl
dec
dec
loop
lods
xor
dec
cmp
sub
in
sbb
aam
dec
hlt
jnp
stc
pop
arpl
les
mov
dec
ins
iret
mov
dec
xchg
sar
inc
cdq
mov
mov
push
test
mov
jae
add
ins
bound
in
aas
outs
gs
dec
iret
cs
mov
out
data16
fwait
stos
pop
ja
sahf
dec
cmp
retf
xchg
out
push
aad
add
rcl
out
pushf
call
add
lahf
mov
repnz
xor
push
mov
loope
(bad)
sbb
cmp
mov
lods
pop
pop
outs
fisttp
adc
loop
push
int3
in
pop
mov
inc
shl
stos
and
lds
hlt
and
pushf
jmp
add
scas
fisttp
dec
popa
je
dec
(bad)
loop
and
sbb
mov
inc
addr16
push
cmps
pop
cmp
lds
and
cmp
inc
mov
cdq
mov
aad
pop
mov
(bad)
jle
je
jae
popa
mov
or
call
mov
and
mov
push
dec
popa
fstp
out
aaa
sub
jge
xor
pop
inc
jb
add
add
ror
pop
aaa
xchg
jae
sbb
inc
jmp
loope
fnstcw
pop
sub
xor
enter
cmc
sub
mov
jmp
shl
lock
daa
or
loop
dec
jb
out
jge
lahf
pop
xor
sbb
add
pushw
mov
sub
cmc
jno
jl
jb
inc
sub
push
mov
jl
repz
mov
inc
mov
sbb
jmp
popf
test
sub
sti
in
das
mov
je
mov
outs
mov
std
xchg
push
popf
sub
mov
and
repnz
and
add
xchg
push
cwde
test
enter
(bad)
pop
xor
imul
pop
aad
sub
xchg
enter
xchg
fldenv
nop
dec
stc
lock
pop
mov
outs
jmp
dec
push
movs
add
add
test
xlat
sub
jo
or
enter
fcmove
pop
jmp
(bad)
add
bound
pop
mov
jns
imul
lds
aas
test
out
lods
cmp
leave
push
xchg
mov
jno
jae
in
jae
imul
push
inc
fiadd
sub
dec
add
add
push
loope
xchg
dec
and
xchg
loope
in
sub
cli
sbb
pop
add
mov
dec
push
sbb
xchg
ss
or
and
outs
jae
and
sub
out
add
or
xchg
in
jae
jmp
jmp
pop
rdmsr
int3
ins
fwait
test
mov
xor
lods
jo
mov
pushf
jp
jo
rol
fs
push
loope
jmp
ss
xchg
std
ins
ret
push
dec
imul
mov
ret
bound
les
out
jg
shl
idiv
mul
std
sbb
mov
jbe
mov
clc
and
mov
jns
jmp
cs
jmp
bound
sbb
pusha
das
mov
ins
ud1
cmp
adc
sbb
mov
(bad)
sbb
ret
fistp
sbb
inc
hlt
jns
cli
loop
ds
mov
sub
push
fcom
dec
ficom
test
imul
fisttp
mov
loopne
out
(bad)
(bad)
mov
sub
in
fdiv
pop
pop
lock
pop
scas
or
int3
push
pusha
sbb
jb
fimul
fidiv
loopne
push
mov
cmps
jecxz
pop
ror
loope
shl
adc
aad
cmp
in
or
(bad)
gs
adc
sbb
cmp
jbe
and
mov
call
es
ror
mov
xor
popa
add
iret
test
add
iret
mov
pop
inc
dec
(bad)
in
daa
test
sub
or
mov
bound
inc
aad
in
in
jno
sti
test
pop
in
mov
scas
dec
add
cmp
cmp
popf
mov
push
bound
push
fdiv
daa
jnp
mov
(bad)
enter
and
push
out
test
je
test
pop
bound
in
mov
dec
aam
es
jmp
mov
push
xchg
mov
inc
scas
mov
ret
mov
pop
sub
jmp
out
bound
xchg
arpl
inc
inc
mov
cld
mov
ret
lods
mov
aad
inc
and
iret
xor
out
pop
pushf
inc
test
pusha
mov
cmps
hlt
xor
fucompp
sub
lea
les
add
mov
out
in
je
lea
cdq
scas
xor
xor
dec
pop
std
test
loope
mov
xchg
rcl
es
cld
rcl
push
push
mov
add
scas
sbb
call
and
fstp
mov
mov
test
mov
in
mov
xchg
and
xchg
int
cmps
(bad)
test
in
leave
daa
adc
adc
sahf
cmps
and
mov
(bad)
and
(bad)
cmps
mov
cli
push
add
fistp
int
jmp
aam
fimul
adc
rol
scas
test
das
sub
mov
xchg
imul
clc
adc
je
xor
(bad)
adc
nop
adc
push
adc
push
popa
fdivr
aad
and
and
popf
sbb
sbb
retf
ins
out
repnz
out
(bad)
je
xor
mov
mov
daa
jg
jno
in
test
sub
sahf
sbb
xchg
and
sub
popw
sbb
xchg
sub
cmp
fsubr
pop
mov
clc
jmp
int3
aas
ss
add
dec
ror
scas
loopne
dec
adc
mov
rcr
fsubrp
out
ficomp
fmul
or
and
and
xor
outs
or
in
clc
and
mov
aaa
or
xchg
jl
sub
gs
popf
cs
cmp
bound
jno
xor
or
push
retf
xor
out
outs
retf
shr
fs
inc
(bad)
jge
enter
dec
adc
xor
pop
daa
sub
inc
adc
and
cs
imul
push
cmp
xor
daa
leave
mov
ins
cmps
sbb
jo
cdq
out
jmp
lds
leave
cmp
and
sbb
and
and
push
adc
xchg
sub
adc
adc
movs
dec
xchg
sub
pop
sbb
mov
and
xlat
jl
adc
dec
xor
push
hlt
jno
pop
shl
cmp
xchg
aas
dec
and
mov
(bad)
sbb
sub
or
and
sub
out
imul
test
and
pop
pop
pop
push
imul
int
loop
dec
cmc
pop
retf
out
jge
mov
push
test
or
ins
mov
pop
xchg
or
in
fs
inc
add
and
loop
out
jbe
or
dec
fs
outs
dec
add
jmp
lods
sub
dec
mov
sbb
cs
dec
mov
js
test
js
pusha
inc
pushf
adc
jb
push
xchg
jmp
xchg
not
inc
lock
(bad)
movs
push
or
inc
pusha
test
adc
(bad)
sbb
scas
rol
sub
outs
xor
mov
push
jmp
push
dec
pop
sbb
pop
ss
retf
mul
xchg
sbb
in
(bad)
jmp
mov
and
mov
mov
shl
nop
xor
xor
out
imul
inc
pop
adc
gs
in
inc
cs
fbld
pushf
xchg
iret
xchg
and
add
push
rol
xchg
cmp
sbb
add
shr
stos
sub
sbb
fs
andps
jns
adc
shl
shl
fwait
mov
ins
and
dec
xchg
retf
jl
dec
adc
leave
jecxz
setbe
push
pop
shl
mov
mov
add
jb
jecxz
fcmovne
sub
xchg
add
sub
dec
dec
lock
inc
cmp
fild
xor
sbb
cmps
fidiv
mov
mov
add
xlat
mov
stos
test
test
lds
xchg
mov
cmp
cmp
push
and
inc
jns
pop
and
ret
sar
nop
mov
leave
dec
les
aam
js
fisttp
sub
retf
in
cmp
fild
xor
xchg
call
mov
jae
cs
xor
pop
retf
push
or
push
and
pop
nop
jae
push
or
inc
xor
cmp
inc
nop
xor
popf
cmps
sbb
aaa
inc
mov
ins
and
add
add
das
pop
imul
ins
push
push
mov
jo
fst
dec
enter
sbb
enter
leave
sbb
dec
ja
push
cli
mov
(bad)
leave
std
pop
sub
(bad)
aam
into
mov
test
mov
stc
mov
mov
test
xchg
mov
inc
cwde
test
adc
clc
push
lea
jae
inc
das
pop
les
inc
aaa
out
(bad)
shl
pop
es
iret
out
stc
mov
inc
repz
stc
jb
add
cmp
jb
(bad)
(bad)
or
jg
mov
add
arpl
std
ins
cmps
sub
sahf
fcom
sahf
push
mov
popa
jb
pop
inc
jp
outs
fdiv
ins
pusha
shl
xchg
xor
mov
lea
xor
jp
iret
push
push
jns
pop
and
mov
ins
inc
out
les
lea
push
dec
jl
or
rcr
mov
xor
fadd
adc
pop
(bad)
cmp
movs
mov
and
adc
xor
(bad)
je
xchg
fs
dec
add
inc
add
in
inc
lock
(bad)
mov
rol
out
into
mov
iret
stc
mov
add
mov
cmp
ins
pusha
aaa
loopne
imul
push
add
mov
sbb
(bad)
stos
mov
cmp
das
int
pop
in
sbb
ds
fldcw
push
(bad)
cmp
dec
or
sbb
sbb
or
add
and
or
nop
jno
hlt
aas
ficomp
xchg
ficom
jbe
movs
mov
sub
jmp
pop
push
lea
cmp
mov
fs
push
pop
(bad)
fist
in
addr16
addr16
xchg
jae
mov
mov
mov
sbb
xchg
xlat
push
adc
outs
loope
not
jns
cmp
cmp
xor
mov
push
and
xor
add
mov
es
sahf
xchg
call
lods
jo
imul
test
out
push
push
and
fadd
sub
outs
rol
test
or
imul
movs
sbb
imul
mov
adc
xchg
mov
repz
sbb
sub
fstp
and
inc
and
ins
mov
shl
xchg
lods
(bad)
sbb
xchg
mov
jmp
fcmovnu
popa
pushf
or
outs
mov
push
fcomp
(bad)
jno
cmp
repz
int
popf
cdq
jge
iret
pop
scas
out
xchg
push
mov
push
add
mov
test
cmc
ret
jmp
cmps
or
cmps
push
sbb
fcmovu
xchg
jmp
cmp
fsub
ret
lea
stos
loope
inc
adc
ret
int3
ss
push
mov
and
and
xchg
jle
and
add
ins
addr16
test
and
retf
mov
xchg
fbld
shl
ret
test
popa
dec
cmp
sbb
sub
not
xor
xor
test
into
xchg
xchg
mov
push
jp
repnz
cmp
sub
and
loope
test
test
repnz
sub
retf
sub
pop
and
adc
loope
fwait
jle
sahf
fild
mov
jo
mov
rcl
std
sub
sbb
cmp
jnp
and
cmps
scas
pop
fwait
in
sar
pop
dec
push
enter
push
pop
jbe
fisubr
in
out
sbb
or
aam
ret
mov
in
repnz
jbe
test
sub
sbb
icebp
mov
call
fsubr
dec
out
das
cmp
add
mov
fiadd
ins
fidiv
cmp
(bad)
push
cwde
sub
dec
aaa
cdq
mov
pop
rcl
mov
ins
stos
pop
pop
jp
adc
adc
int
hlt
cmps
arpl
cmp
cmps
fsub
sbb
jecxz
repnz
jmp
and
cmp
push
xor
pop
test
push
test
push
xor
inc
mov
test
add
loop
fucomip
push
mov
xchg
in
stos
mov
xchg
mov
imul
jno
mov
cmp
mov
dec
fdivr
fstp
scas
out
pop
sbb
sbb
nop
out
pop
ins
scas
addr16
cwde
push
mov
mov
stc
pop
imul
enter
xor
sbb
into
iret
test
jecxz
dec
fistp
fidivr
cmp
fist
repz
mov
das
lahf
cmp
xchg
test
rol
addr16
gs
pop
nop
bound
test
cmp
in
addr16
mov
inc
pop
ss
mov
jnp
nop
xor
test
fnstcw
outs
fmulp
bound
xchg
cli
xor
jbe
push
inc
mov
mov
push
pop
sti
clc
mov
loopne
pop
jmp
adc
sub
push
add
fidivr
pushf
add
leave
or
mov
lock
xor
push
sbb
mov
or
mov
or
jne
sbb
dec
mul
out
rcr
dec
jb
and
jmp
rol
mov
bound
dec
push
cwde
push
loope
loope
jb
fwait
shl
dec
ret
dec
jnp
sbb
jle
push
sub
clc
push
lods
nop
imul
out
cmp
(bad)
test
and
lea
movs
jno
outs
xor
enter
lods
or
div
repnz
js
ds
js
push
xor
dec
cmc
test
dec
int3
adc
pop
pusha
xchg
inc
cmps
loopne
sbb
inc
jno
ror
pop
adc
dec
and
jbe
xchg
call
jo
add
imul
mov
xchg
adc
push
cmps
into
mov
pop
lahf
test
jb
jno
or
rcl
jo
adc
jo
pop
aas
cmp
and
add
mov
sbb
and
cmp
inc
leave
cmp
jmp
push
jb
pop
sub
adc
inc
pcmpeqd
adc
adc
out
in
mov
jecxz
mov
sbb
js
mov
std
pop
retf
add
mov
out
or
add
mov
int
mov
les
sub
out
test
inc
jne
and
cwde
int3
cmp
test
lods
inc
mov
sub
cwde
jge
ret
sub
xor
mov
jmp
das
dec
nop
or
fwait
dec
arpl
fld
mov
sub
mov
mov
pop
mov
in
retf
jno
lahf
cmps
je
inc
push
cmp
adc
ffreep
jne
imul
enterw
add
push
jno
jo
xchg
cli
in
rcr
cmp
xchg
aam
in
jmp
xchg
loopne
pop
jle
and
xor
not
dec
mov
dec
adc
jl
add
cmp
lods
rol
xor
arpl
push
lods
cmp
loop
mov
or
ss
hlt
nop
div
and
js
iret
pop
xlat
mov
sar
pushf
ds
pop
xchg
mov
fiadd
xchg
push
ficomp
sbb
inc
jmp
push
add
jne
(bad)
and
mov
push
and
fldcw
sbb
ins
cmp
jbe
pop
mov
cs
and
sbb
push
(bad)
ss
aad
neg
inc
cmp
cmp
or
or
mov
add
jl
mov
push
jge
stc
ret
xchg
daa
and
mov
test
inc
mov
mov
in
push
cmp
add
push
xchg
mov
imul
jg
and
cmps
mov
mov
hlt
pop
ss
jl
sub
sbb
push
scas
sub
jecxz
pop
push
jge
outs
ficomp
sbb
(bad)
mov
jo
sti
cmps
push
inc
iret
jb
inc
mov
unpckhps
ret
or
call
lods
add
pusha
push
mov
push
into
fld
fs
mov
repnz
adc
enter
jmp
aaa
sbb
mov
inc
sub
or
movs
xchg
fisub
(bad)
cmps
jmp
mov
(bad)
(bad)
bnd
push
mov
imul
fidivr
sub
xchg
add
mov
(bad)
jmp
xchg
popa
inc
xchg
enter
cld
js
adc
push
or
mov
mov
mov
punpcklbw
pop
lods
out
adc
jns
xchg
jb
push
push
sub
fld
add
into
xchg
aas
push
daa
add
xor
sub
popa
fild
retf
cld
cmps
sub
cmp
in
loopne
pop
in
inc
xchg
inc
sti
in
pop
xor
pop
mov
out
jmp
mov
sbb
pop
nop
ret
adc
sbb
add
push
mov
in
push
(bad)
and
inc
adc
imul
imul
js
das
xchg
loop
cmps
dec
mov
repnz
and
add
loop
call
push
mov
ins
adc
imul
repz
stc
aam
adc
data16
ret
jno
adc
sub
mov
retf
cmp
adc
mov
pop
movs
xchg
mov
xchg
xchg
add
mov
mov
rcr
and
or
pop
sub
retf
mov
pusha
out
xor
shl
mov
push
sbb
xlat
lds
fidivr
mov
sahf
std
and
xor
scas
mov
push
mov
movs
repnz
adc
add
mov
jmp
out
vmovntdq
push
pop
inc
loop
bound
pushf
es
lds
push
sub
adc
jmp
mov
sbb
shl
call
test
fcmovb
mov
out
rcl
push
jl
push
ja
rcl
pop
repz
jno
out
aaa
dec
pop
scas
mov
push
cdq
fidiv
test
mov
dec
and
xlat
pusha
xor
addr16
push
mov
mov
adc
mov
cmc
gs
ret
call
movs
ja
dec
and
test
pop
mov
pop
cmp
dec
ds
sbb
outs
fadd
jge
dec
jbe
outs
pop
push
imul
xor
in
pop
int3
retf
jnp
mov
add
xor
adc
add
ficom
jmp
mov
mov
ins
mov
pusha
cdq
repz
scas
aam
outs
repz
dec
dec
es
mov
or
pop
leave
test
mov
repnz
in
or
xchg
stos
les
cmps
sar
xor
retf
sub
push
add
fs
xchg
hlt
test
std
mov
fbstp
mov
jmp
clc
imul
jp
and
xor
pop
xor
loope
and
out
fwait
push
mov
push
or
lea
xor
stos
sahf
(bad)
rol
or
sub
jle
jnp
sub
mov
aaa
push
pop
imul
push
jmp
mov
gs
xor
(bad)
sahf
mov
push
scas
or
in
rcr
mov
and
movs
sbb
mov
mov
aaa
jle
movs
in
cli
and
fisubr
pop
push
neg
jo
rol
ror
loope
fnstsw
mov
fdiv
stos
sub
xor
shr
cmps
xor
sub
mov
loope
iret
clc
sti
xchg
stos
jae
not
xor
cld
mov
adc
cmp
mov
in
xor
xor
or
mov
sti
dec
pop
inc
xchg
pop
je
adc
cli
xchg
fs
imul
test
inc
pop
cmp
repz
xchg
fmul
jb
mov
adc
inc
jmp
mov
test
dec
shr
popf
into
xor
nop
jae
jns
sahf
adc
ret
addr16
xor
mov
push
or
repnz
mov
movs
jmp
push
mov
mov
mov
inc
(bad)
cwde
hlt
cli
mov
mov
xor
or
lods
cmps
add
mov
std
adc
lahf
out
dec
push
sbb
fnstsw
xlat
sub
sbb
xor
ror
sub
repnz
mov
js
pop
adc
aaa
and
pop
mov
push
(bad)
fiadd
adc
arpl
mov
pop
(bad)
test
out
fstp
adc
pop
sbb
cmp
imul
inc
inc
ret
lock
sbb
lods
out
adc
mov
into
mov
aam
lds
ror
arpl
pop
adc
add
pusha
fisttp
xor
push
rol
aam
call
call
cmps
sbb
daa
dec
and
adc
test
add
cmp
sbb
rcl
loopne
or
and
push
cmps
jmp
pusha
sbb
ror
rcl
push
mov
scas
pop
test
add
xor
icebp
sub
cmps
int3
push
and
call
inc
jecxz
lds
int3
(bad)
popf
scas
mov
aas
xor
sahf
inc
and
mov
mov
pop
lahf
cmp
mov
sbb
push
dec
xor
sti
cli
lods
scas
add
mov
outs
mov
push
(bad)
jns
jbe
inc
out
outs
fimul
test
fadd
mov
xlat
aaa
xchg
shl
sbb
cmps
mov
cmp
mov
ficom
cmp
outs
jne
jl
ins
xor
mov
mov
popa
and
jne
shl
add
mov
jg
xchg
ret
pop
dec
sub
xchg
dec
sub
ror
imul
xor
test
xor
add
stos
fwait
ror
popa
pop
sub
sub
add
int
rol
(bad)
icebp
(bad)
imul
inc
cmp
xchg
dec
sub
jmp
or
sbb
jae
movs
inc
ins
shl
jl
adc
test
add
out
push
sahf
leave
xchg
xchg
cli
xchg
loope
fucom
sbb
mov
or
loopne
stc
mov
xchg
sub
stos
fs
xchg
pop
mov
adc
jmp
dec
jae
mov
ret
xor
pushf
lahf
add
mov
cmp
add
dec
pop
or
fisttp
rcr
bound
cmp
scas
cmp
jne
cmp
push
or
mov
ss
jl
dec
dec
and
daa
or
inc
hlt
pop
push
cmps
dec
xlat
jmp
or
pop
add
sub
jmp
outs
mov
jg
fs
loop
loopne
(bad)
xchg
test
xor
fisttp
int
mov
fs
iret
sub
fwait
mov
mov
sbb
bound
stos
fistp
imul
lods
xchg
mov
cmp
neg
push
fild
push
cmps
arpl
cs
push
cmp
cmps
inc
scas
mov
lds
loop
sbb
mov
xchg
push
add
jno
cmp
in
sub
pop
push
aad
xor
cs
leave
ret
adc
jg
(bad)
or
or
pop
mov
aam
jo
add
xchg
ror
dec
push
cdq
push
aad
cmps
rcr
bndstx
push
movs
xor
inc
movs
push
xor
lds
lds
and
test
mov
mov
or
push
mov
iret
adc
out
mov
pop
pop
xor
ret
icebp
mov
jae
clc
jge
add
inc
stc
imul
sbb
mov
dec
cmp
fdiv
or
ins
mov
sbb
or
lods
cs
and
shl
std
dec
pop
movs
sbb
into
mov
lods
mov
xchg
sahf
outs
shr
aad
je
mov
inc
mov
std
sub
xchg
xor
add
fisttp
call
imul
mov
or
call
adc
push
cmc
in
adc
cmp
or
test
mov
rol
inc
add
push
ret
dec
jecxz
mov
add
xchg
aas
jne
aaa
push
sub
ins
jbe
clc
dec
cmp
(bad)
mov
push
inc
sub
add
add
rol
test
ins
pop
pop
mov
sar
lods
popf
aam
inc
(bad)
mov
imul
push
xor
rcr
or
je
nop
cmp
cmp
xchg
pop
ja
mov
sahf
jb
retf
test
mov
sub
pop
pop
rol
dec
push
daa
inc
jecxz
sub
test
mov
mov
sti
mov
daa
pushf
mov
inc
xlat
div
clc
out
and
sub
js
imul
sub
mov
jle
and
jnp
pushf
mov
mov
push
jmp
push
dec
add
pop
in
stos
mov
fist
inc
dec
cli
pop
mov
adc
add
call
mov
test
adc
pop
sub
hlt
adc
imul
loope
jns
jl
inc
stc
and
loope
and
jp
ins
push
dec
scas
fbld
test
ret
adc
or
jle
aas
push
pop
in
or
rcl
xchg
adc
xor
addr16
mov
xor
test
out
add
stos
je
jnp
dec
mov
and
rol
cmps
fisttp
mov
pop
lock
push
test
(bad)
jmp
iret
aam
and
ror
(bad)
je
and
lock
push
mov
mov
shl
fs
mov
(bad)
leave
(bad)
mul
test
in
cmps
and
push
mov
lea
xor
imul
test
bound
shr
je
jge
adc
out
jo
aas
jo
jg
mov
movs
cdq
xlat
ror
cmp
rcl
in
xlat
dec
jb
lods
out
into
dec
add
retf
scas
push
out
frstpm(287
pop
gs
iret
push
sbb
sub
int
dec
data16
mov
pop
push
cmps
xchg
fs
cmp
scas
xlat
jo
and
jbe
fisttp
int
pop
or
shr
jecxz
loop
ds
mov
xchg
in
xchg
jno
push
cmps
lds
out
retf
cmps
mov
(bad)
jmp
imul
adc
repnz
dec
ins
dec
std
ret
pushf
arpl
mov
jbe
and
cdq
repnz
lods
sub
aas
jmp
sub
dec
push
inc
mov
jno
ja
xor
xchg
call
push
les
cmc
shr
xlat
repz
sub
(bad)
ja
and
mov
push
xor
push
jmp
fild
lods
neg
lea
jae
xchg
and
rcr
ret
mov
push
mov
cmp
push
push
sahf
jb
push
popf
inc
cmp
popa
daa
mov
push
call
push
lea
nop
sub
or
mov
lea
in
sub
inc
pop
sub
ss
mov
push
and
mov
pop
mov
sbb
or
fcomp
jmp
mov
xor
pop
xchg
pop
sbb
adc
sub
lds
jecxz
push
sbb
(bad)
into
xor
jmp
nop
stc
sbb
jmp
pop
cmp
ins
sbb
and
cli
pop
ins
loop
mov
pop
fisub
rcl
in
xor
xchg
ret
cmp
add
imul
mov
fimul
mov
push
lock
pop
stos
inc
in
lods
cmps
leave
ja
sub
jae
call
pop
inc
and
loope
mov
shl
sub
lods
test
mov
mov
retf
movs
or
dec
push
and
ds
aad
and
not
inc
jmp
aas
call
int
pop
mov
cmps
not
sub
dec
call
inc
jmp
mov
movs
or
retf
adc
outs
ret
pop
mov
mov
cmp
dec
adc
pusha
pusha
jecxz
pop
into
jae
shl
mov
push
jns
cmp
cmc
repz
aaa
mov
mov
xor
cwde
ja
mov
or
and
int
out
cmp
stos
dec
scas
es
sub
scas
sbb
retf
stos
rcr
mov
mov
shl
adc
jmp
cmp
jle
jl
into
xchg
push
scas
xchg
and
out
pushf
outs
adc
mov
sbb
jle
(bad)
out
adc
lods
xchg
push
push
mov
push
inc
or
inc
test
push
and
dec
rol
dec
dec
in
push
and
sub
(bad)
in
call
xor
int
les
dec
shl
cs
mov
add
retf
push
mov
add
imul
mov
pop
pop
das
mov
cld
sti
mov
in
mov
push
popa
jle
cmp
adc
mov
jmp
imul
es
cmp
cmp
jno
ins
icebp
push
ins
dec
shl
sar
mov
xlat
sar
pop
(bad)
ss
bound
add
mov
pop
push
inc
sub
inc
iret
retf
imul
pop
out
mov
mov
xchg
mov
(bad)
cld
xchg
mov
sbb
les
inc
adc
out
sbb
cld
and
stos
pop
imul
loopne
cmc
jl
enter
dec
sbb
fidiv
jge
mov
repnz
push
xchg
scas
pop
scas
lds
mov
in
pop
ret
mov
in
jno
add
dec
movs
(bad)
xchg
dec
mov
stos
(bad)
cwde
cmps
data16
gs
retf
cmp
ss
inc
mov
jnp
fistp
das
inc
and
push
and
lock
xor
add
dec
inc
jnp
sti
cmps
mov
xlat
inc
in
ficomp
or
test
push
sub
cs
inc
iret
jmp
mov
(bad)
mov
es
mov
fild
iret
int
mov
jle
add
in
and
xchg
ret
outs
popa
mov
sbb
out
xlat
lock
mov
cmps
jo
and
adc
out
jb
dec
in
mov
jae
jb
sub
(bad)
das
xor
pop
ss
mov
add
retf
xchg
sub
add
outs
inc
mov
imul
fmul
push
push
out
retf
sub
sbb
push
fld
hlt
jp
sti
mov
and
retf
and
imul
push
sub
arpl
push
ret
je
ja
jno
jecxz
or
mov
and
shr
add
fmul
sbb
ret
inc
sbb
add
cmp
xchg
cs
add
pop
push
mov
and
jmp
mov
and
xchg
or
xor
enter
aaa
out
or
sbb
adc
scas
fdiv
mov
(bad)
ins
jmp
adc
stos
popf
es
jecxz
inc
loop
in
sub
inc
mov
mov
(bad)
jge
loop
push
cmp
dec
popa
and
pusha
or
xchg
mov
xor
inc
pop
fild
and
mov
jae
inc
cli
arpl
popa
aam
or
add
sbb
jne
(bad)
scas
ins
mov
push
or
jbe
mov
(bad)
sar
call
pop
jge
loop
int
outs
push
loope
mov
popf
xor
iret
and
adc
and
bound
clc
dec
cld
cwde
cmc
sbb
push
cmp
(bad)
cmp
add
or
push
and
stos
fld
ins
jg
aaa
xchg
jno
test
pop
sbb
icebp
xchg
fstp
cwde
push
cmc
cmp
nop
xchg
std
ret
mov
inc
sub
ret
adc
or
pop
nop
popa
jmp
retf
in
push
mov
test
mov
and
add
mov
out
ds
jmp
fwait
or
cmp
adc
xchg
dec
cmp
loopne
and
push
pop
call
pop
call
adc
jno
mov
idiv
mov
push
push
sahf
xor
(bad)
jno
cs
or
je
leave
fwait
jg
gs
mov
push
scas
ss
cmc
inc
les
dec
xor
mov
(bad)
lods
inc
jb
or
dec
xor
clc
add
mov
push
mov
daa
mov
push
call
xlat
adc
ret
mov
adc
jle
push
mov
movs
jae
test
sbb
mov
pop
inc
movs
call
fld
sar
dec
pop
mov
lock
mov
dec
and
push
push
jge
loop
cld
mov
cmp
imul
aaa
adc
test
movs
xchg
lea
cld
ret
ins
mov
pop
aaa
and
add
or
cmp
call
mov
push
cmps
push
jns
lods
pop
je
push
aaa
sub
outs
and
aaa
test
jns
int3
dec
in
fist
fist
jno
imul
or
into
leave
dec
jns
sub
call
mov
push
ds
ror
cmps
jb
add
not
fild
aas
sbb
cmp
adc
sbb
scas
xor
and
in
jp
adc
cmps
xchg
pop
cmc
sub
xlat
jae
push
and
mov
sub
inc
mov
pop
ja
push
xchg
xor
pop
ss
sub
jnp
inc
iret
call
xor
push
sbb
lahf
pop
jle
rcl
(bad)
inc
jae
call
jle
inc
mov
int3
test
fmul
cmps
icebp
and
scas
and
sub
mov
jae
dec
cld
push
dec
mov
sbb
(bad)
jbe
mov
repz
jmp
sub
push
jnp
mov
xchg
pusha
mov
dec
mov
jecxz
dec
mov
std
scas
ds
xchg
jle
cmp
mov
sub
nop
xchg
push
pop
xor
pusha
mov
scas
imul
outs
in
aam
xor
fwait
jne
into
add
leave
mov
(bad)
(bad)
pop
popa
out
mov
inc
out
ret
div
fadd
mov
inc
scas
std
push
repnz
shl
inc
movs
mov
movzx
inc
jns
pop
je
test
outs
mov
pop
mov
aam
in
adc
pop
adc
arpl
jns
mov
je
xchg
jo
popa
movs
es
push
mov
gs
and
mov
lahf
pushf
xchg
lods
sbb
sbb
retf
dec
pusha
cmp
popf
daa
sub
pop
fnsave
out
loope
(bad)
mov
fs
les
cmc
fwait
jmp
fadd
mov
dec
push
test
jge
dec
add
dec
fsubrp
imul
mov
mov
outs
cmp
mov
and
out
hlt
sahf
and
test
mov
adc
jecxz
loope
loop
test
mov
movs
dec
stos
inc
sbb
pop
mov
mov
xchg
add
mov
aad
stos
je
iret
xchg
test
mov
shl
mov
pop
jecxz
fst
clc
mov
xchg
mov
mov
push
pusha
add
int
jnp
xor
lahf
enter
cmps
clc
sbb
enter
mov
mov
xor
hlt
add
inc
mov
movs
inc
cmp
mov
push
outs
mov
adc
jge
mov
fdivr
add
jge
pop
pop
popa
aas
sbb
mov
outs
ror
sub
lods
stos
fwait
jge
sub
push
stc
jb
(bad)
mov
push
jnp
xchg
add
mov
int3
jne
or
jno
jo
dec
scas
jmp
test
sbb
inc
inc
inc
xor
inc
fst
jl
ret
add
xchg
fdiv
fcomp
adc
pop
xchg
stos
xor
jge
push
xor
or
jmp
jge
mov
and
jp
or
cmp
out
ret
sub
push
adc
mov
adc
in
out
es
mov
push
mov
rcr
mov
push
sub
into
adc
and
add
push
cmps
push
xchg
cmps
mov
jg
pop
and
daa
sbb
pop
add
or
mov
fistp
mov
clc
sub
and
push
sbb
or
cli
sbb
aam
clc
int
pop
add
icebp
fdivr
ficom
dec
dec
cwde
ret
cmp
cmp
pop
mov
mov
mov
mov
into
out
pop
nop
das
movs
dec
retf
push
pop
int3
fs
xchg
addr16
cmp
cld
cmps
cmps
and
or
sbb
les
cs
push
mov
lods
outs
mov
inc
icebp
jecxz
cmp
push
xchg
mov
repnz
out
pop
sub
mov
lods
into
rcl
call
outs
xchg
div
mov
hlt
dec
jecxz
mov
or
pop
leave
stc
dec
addr16
push
xor
pop
addr16
xor
and
ret
mov
lock
lock
lahf
sbb
push
add
add
outs
cmp
add
cmp
xchg
lds
les
(bad)
iret
aad
mov
xor
jge
jp
inc
ror
jmp
test
xchg
inc
pop
fldcw
call
imul
mov
retf
xchg
add
in
sub
push
mov
or
(bad)
fsubr
xor
(bad)
stos
dec
sub
xchg
out
xor
fdiv
dec
sub
les
or
lahf
mov
imul
not
stos
clc
jle
add
in
adc
push
pop
lock
cmps
out
xlat
xor
xchg
dec
lahf
jg
xchg
inc
pop
mov
icebp
mov
imul
stc
imul
int3
leave
add
and
xchg
jbe
inc
addr16
cmp
adc
mov
dec
pop
fsub
xor
je
std
ffree
inc
and
or
ret
aaa
inc
test
das
out
(bad)
fs
pop
cs
icebp
jmp
cwde
pop
sbb
pusha
call
imul
rol
dec
xchg
cmp
inc
sbb
rol
movd
jb
mov
shl
or
jl
rcl
inc
adc
(bad)
popa
ficomp
lea
mov
jle
mov
shr
or
add
push
mov
sbb
pop
and
cli
sub
(bad)
mov
(bad)
add
js
cmp
lods
mov
cmp
pusha
fxtract
dec
outs
and
icebp
mov
movs
dec
jbe
jb
in
cmp
xor
call
jno
hlt
aaa
push
das
bound
mov
fs
outs
mov
or
das
jns
pop
out
xor
fldenv
xor
sbb
lock
mov
sub
fidiv
lock
jl
xchg
repz
add
or
cld
int3
fwait
gs
rcl
int3
xlat
cmps
cli
mov
mov
fmul
lods
cmp
in
jecxz
push
inc
jl
jmp
(bad)
jp
cmp
jg
sub
or
pop
push
ret
mov
fmul
jo
mov
stos
inc
arpl
push
cmps
fwait
jne
or
xor
dec
lods
mov
or
sbb
ret
daa
sub
sub
or
xchg
enter
mov
les
inc
or
xor
test
mov
aam
jno
fcom
into
loopne
loop
pop
xor
test
imul
and
das
adc
mov
xchg
fcomip
mov
cs
fisttp
std
sub
mov
scas
mov
jg
xchg
lds
das
push
jo
pop
fidivr
pop
inc
ret
add
addr16
adc
or
push
push
clc
push
xlat
mov
arpl
arpl
mov
sar
(bad)
in
sub
movs
push
and
jg
fistp
ret
aam
mov
pop
fsubr
jb
push
daa
fmul
nop
dec
adc
and
sub
adc
adc
fst
enter
cs
and
and
xlat
mov
sub
ss
cmc
pop
add
ja
xchg
inc
mov
push
loopne
add
xchg
scas
and
pop
cmps
mov
mov
sub
and
jmp
push
lods
std
jae
inc
sti
icebp
aas
lea
jne
add
adc
out
int3
mov
in
or
shr
xor
mov
aam
mov
xor
(bad)
push
mov
sahf
outs
mov
or
pop
leave
rcr
cmp
cmp
push
mov
in
jecxz
lea
mov
popa
gs
call
(bad)
sahf
rol
nop
fmul
xchg
aas
or
inc
adc
test
hlt
or
jo
out
xchg
cdq
and
cwde
jns
mov
repz
dec
pop
lods
sbb
or
call
lods
popa
into
mov
cmc
mov
scas
mov
lea
adc
add
out
mov
dec
lahf
fisttp
add
icebp
sub
in
daa
add
inc
mov
cmp
in
add
and
mov
outs
dec
push
ret
and
sub
mov
stos
jle
xor
aam
xchg
(bad)
out
pop
sbb
popf
inc
outs
movd
jbe
enter
rcl
test
push
dec
add
hlt
xchg
or
inc
xor
or
push
mov
div
push
mov
mov
inc
push
lods
repz
mov
mov
xor
ins
push
push
inc
cmps
mov
scas
sahf
push
out
(bad)
outs
lea
stos
cld
mov
push
add
xor
sahf
bound
mov
dec
inc
cld
bound
pop
sub
adc
and
xor
inc
push
inc
loopne
(bad)
jmp
pushf
xchg
nop
jmp
adc
jnp
add
popf
pop
sub
sti
adc
fs
pop
stos
pushf
popf
inc
dec
es
daa
shl
hlt
fsubr
(bad)
addr16
mov
add
sub
scas
pop
cmps
mov
adc
scas
add
into
cmps
pop
xor
or
cmp
dec
lods
sti
inc
push
(bad)
jl
test
cmc
std
add
adc
mov
or
ja
test
mul
sbb
clc
stos
test
mov
clc
stos
ss
and
sub
in
retf
push
loope
hlt
or
mov
inc
out
rcl
aam
inc
xchg
xor
mov
add
push
push
xchg
jns
xor
call
mov
cmps
loop
stc
jecxz
sbb
ret
mov
pop
rol
dec
popa
cmps
les
out
popa
xor
xchg
add
adc
jns
mov
aad
cdq
xlat
sahf
les
jp
jg
fwait
pusha
adc
sti
dec
jmp
pop
arpl
or
call
cs
mov
push
data16
pop
enter
sbb
lods
sub
mov
dec
ja
test
xchg
js
sub
popa
and
fbld
push
ja
aas
ins
aam
xchg
test
mov
sbb
jnp
add
and
mov
out
mov
test
aas
fidivr
push
sub
retf
push
sub
inc
sbb
outs
dec
sub
dec
(bad)
aad
(bad)
imul
jns
xor
jp
outs
push
xchg
inc
stc
jbe
jb
adc
cwde
pop
mov
hlt
inc
pop
lds
daa
pop
(bad)
inc
jae
test
mov
std
lock
aad
mov
push
pop
xchg
or
std
outs
(bad)
and
or
call
fs
aaa
add
pop
adc
shr
cmp
sbb
in
sbb
dec
shl
cs
aad
dec
mov
mov
or
or
ret
sbb
mov
pop
inc
int3
stos
repnz
adc
jbe
pusha
pop
lock
adc
(bad)
ja
dec
cmp
push
pop
neg
cmp
mov
stos
mov
xchg
loopne
arpl
stos
retf
stos
xchg
xor
nop
in
fimul
arpl
retf
dec
les
(bad)
les
push
jne
mul
test
add
lock
xchg
out
iret
xlat
xor
adc
sbb
rcr
sahf
rcl
int
or
adc
jae
aam
mov
pop
lods
cmps
popa
pavgb
test
jmp
fld
out
mov
loope
call
in
sbb
in
inc
lods
cli
data16
pop
mov
hlt
add
mov
and
loopne
retf
js
cmp
shl
fist
out
jge
std
pop
push
xchg
push
in
xchg
xor
mov
xor
jb
jnp
addr16
sahf
out
not
pop
adc
call
mov
addr16
pop
outs
into
call
add
lock
jge
fldenv
sbb
pop
fmul
scas
xchg
repz
cmc
repz
mov
js
or
ret
fist
pop
mov
push
dec
popa
jp
outs
pop
jecxz
cmp
jnp
cmc
sub
addr16
loopne
xchg
in
fcom
jge
jl
xor
jbe
movs
lock
jo
int3
mov
xchg
jo
xchg
mov
adc
movs
clc
xor
jg
stos
sbb
or
mov
mov
fdivr
inc
repz
mov
movs
push
mov
fst
xchg
arpl
mov
pop
lods
lods
sar
fwait
sbb
pop
(bad)
fmul
xor
fisubr
pusha
jg
jmp
(bad)
test
imul
mov
dec
jae
neg
push
jl
add
cmps
cmp
in
cdq
nop
xchg
or
les
retf
movs
lods
call
jbe
adc
xor
inc
popf
and
dec
lods
into
out
cmp
cmp
cdq
retf
adc
ret
xchg
xchg
pushf
call
cmp
xor
xchg
in
dec
xor
je
popf
ins
inc
rcr
adc
sbb
lock
and
in
es
lock
inc
cs
xchg
aas
inc
push
sahf
clc
call
cs
inc
(bad)
aad
pop
xchg
cmp
pop
fisub
loopne
push
leave
jne
std
jns
rol
mov
aaa
xor
data16
xor
pop
xor
jp
and
(bad)
out
inc
cmp
in
mov
data16
xlat
mov
idiv
jo
lock
pop
fsub
std
out
ret
out
add
mov
out
scas
shr
mov
stos
and
add
aam
and
jo
jp
rcl
pop
mov
mov
retf
jnp
stc
icebp
ret
idiv
mov
or
sub
bound
imul
dec
fist
icebp
out
dec
push
mov
xor
mov
das
ret
neg
test
mov
mov
mov
(bad)
xor
mov
dec
popa
cmp
test
xor
adc
inc
sbb
lock
jae
add
sub
inc
jle
dec
jno
inc
int3
and
test
out
fwait
in
outs
push
rcl
loope
push
mov
jge
xor
mov
sti
xor
clc
cdq
dec
mov
loop
aaa
jle
loop
dec
in
sar
adc
cs
(bad)
push
push
adc
adc
inc
mov
pop
(bad)
adc
xlat
mov
aad
or
pop
js
pushf
ins
cmp
or
mov
fidiv
bound
push
rol
out
ror
sub
sbb
and
fs
mov
sahf
retf
lods
jge
sub
cmp
popf
in
into
sbb
imul
ins
adc
mov
int3
fwait
inc
in
sahf
mov
push
push
mov
pop
daa
aad
mov
jmp
pop
les
xchg
mov
mov
lds
lods
rol
cmp
inc
daa
inc
push
hlt
lahf
ret
idiv
repz
lods
js
mov
pop
sbb
jne
jmp
or
xabort
sub
jno
xor
or
dec
sbb
jmp
adc
pop
icebp
outs
xchg
dec
push
lea
add
sbb
repz
pusha
pushf
jle
push
cwde
fild
div
jbe
imul
mov
xchg
mov
in
(bad)
mov
xor
loope
or
and
int
push
push
dec
mov
mov
fisubr
das
aaa
jo
push
sub
pop
pop
cmp
(bad)
xchg
iret
xchg
scas
cmp
test
mov
cs
repz
or
retf
mov
mov
sbb
inc
push
inc
pusha
arpl
inc
je
call
cld
std
shl
loop
aad
dec
lea
mov
(bad)
(bad)
push
out
repz
add
stc
aad
leave
push
pop
jns
cs
and
call
bound
fidiv
sbb
dec
rol
sar
lods
jge
push
mov
fstp
sub
shl
cmps
mov
mov
jo
xchg
test
inc
shr
aaa
(bad)
fwait
sbb
mov
dec
scas
pushw
in
and
inc
mov
and
jbe
call
push
out
cs
jl
(bad)
sbb
cmps
and
into
ds
out
xor
add
scas
xchg
js
push
inc
int
sbb
sti
push
aam
imul
out
mov
lock
fmul
ret
jae
cs
mov
xchg
inc
inc
pop
jmp
jmp
push
int3
fmul
icebp
into
call
mov
mov
mov
stos
cs
loop
sub
jmp
in
out
or
sar
(bad)
add
mov
fisub
jle
aas
jg
test
jae
mov
push
and
pop
mov
push
aaa
inc
push
call
push
cmp
(bad)
push
in
cmp
or
inc
fdiv
add
mov
rol
and
ja
std
icebp
or
xchg
(bad)
jmp
push
push
cmp
ror
dec
or
jecxz
lock
jp
cmp
push
in
jl
jp
pop
inc
aas
les
add
repnz
in
push
test
pop
pop
jl
add
test
outs
dec
(bad)
inc
jle
dec
retf
add
outs
lds
lods
or
popa
adc
push
in
jp
cmps
push
jbe
mov
xor
push
xlat
sub
mov
mov
xchg
sbb
push
mov
mov
xor
mov
adc
jmp
jno
sub
fldcw
adc
test
pop
pop
pop
xchg
sbb
cmps
add
and
popa
push
adc
rol
je
aaa
sar
mov
mov
push
sbb
leave
ss
mov
mov
mov
inc
int3
aaa
rol
cmp
dec
mov
lds
icebp
cmp
clc
sbb
push
data16
test
add
inc
jge
mov
mov
not
out
jg
add
je
mov
push
and
push
xlat
push
push
xchg
clc
ds
ret
mov
jns
xlat
adc
pop
in
push
jne
and
xor
jnp
(bad)
repz
loopne
push
push
cdq
ja
call
repz
std
popa
or
fstp
jns
xlat
xor
shr
ins
cmps
jae
dec
aaa
mov
xor
push
mov
hlt
std
pop
loopne
mov
sub
jbe
out
cs
cmp
pop
mov
(bad)
fdivr
add
or
ins
push
mov
sub
retf
pop
and
push
add
cli
push
ins
jno
test
ja
shl
add
pop
xor
dec
cmc
int
inc
and
jnp
mov
stos
push
xor
push
(bad)
imul
push
sbb
pop
retf
jecxz
out
push
mov
arpl
dec
or
inc
adc
push
es
push
repz
rol
adc
enter
les
outs
(bad)
fcmovb
mov
inc
and
pusha
cmp
enter
sbb
in
sub
movs
mov
mov
imul
lods
fs
ds
mov
aam
fidivr
sbb
jno
mov
push
ret
out
or
(bad)
sub
ss
in
pop
cmp
(bad)
mov
lea
(bad)
rol
mov
mov
and
cld
test
and
arpl
xchg
mov
and
daa
das
mov
mov
sbb
sbb
inc
mov
adc
mov
bound
xchg
mov
jne
cmc
dec
idiv
mov
or
loope
ja
jbe
inc
jle
push
hlt
add
enter
xchg
mov
sbb
call
or
rcr
and
(bad)
(bad)
and
xor
cmp
es
mov
dec
push
xor
fsubr
and
inc
sub
cmp
xchg
jnp
pop
cmp
cmps
jmp
mov
dec
pop
bound
test
(bad)
ret
cmps
dec
fsubr
cli
aaa
test
aad
adc
xor
inc
jbe
ja
cmp
rcl
mov
xchg
cmc
pushf
xchg
inc
xor
jo
imul
(bad)
dec
iret
daa
in
les
cli
shl
stos
or
cmp
and
push
aam
jg
xchg
retf
xor
cmp
cmp
jnp
sbb
and
cmp
ins
fwait
lds
imul
mov
mov
dec
movs
or
in
or
mov
push
(bad)
mov
jle
and
fcmovb
(bad)
mov
ret
dec
cmc
push
dec
es
movs
test
sar
sub
jno
xor
inc
inc
ins
push
xchg
(bad)
cmp
and
ror
dec
sti
xor
sbb
cmp
(bad)
adc
call
pop
pop
mov
add
jle
sar
sub
mov
shl
or
mov
or
mov
clc
gs
loop
mov
in
scas
icebp
xchg
sub
add
inc
mov
mov
rol
add
or
test
sbb
icebp
adc
in
lock
mov
sub
les
xchg
cmp
push
jbe
mov
jbe
adc
mov
aad
jge
cdq
sub
inc
xor
sub
xchg
inc
sbb
repz
xchg
mov
data16
jnp
ins
dec
dec
pop
or
shl
xlat
pop
rcr
ja
mov
pop
in
outs
aas
mov
out
ins
fisttp
fdiv
cmps
jmp
(bad)
cdq
fadd
aas
jae
xchg
or
jmp
xchg
aam
and
sub
call
and
jne
push
popf
inc
add
xlat
test
mov
xchg
pop
sub
aam
mov
adc
mov
mov
fwait
call
fwait
ret
ffree
cmp
ins
dec
es
and
add
push
stos
mov
sbb
ins
stos
loop
sbb
pop
push
push
retf
pop
mov
lods
inc
push
arpl
sahf
popa
stos
sbb
loop
xor
cdq
into
jae
ror
jle
adc
or
arpl
lahf
inc
loope
scas
or
not
jbe
sbb
push
push
dec
cmps
call
xor
mov
aam
imul
rcl
or
inc
dec
out
loope
mov
pusha
cmp
fst
in
or
bound
outs
add
loope
sbb
out
(bad)
popf
inc
arpl
push
mov
cdq
stos
mov
(bad)
ret
add
repnz
repz
sub
and
pop
stc
jmp
xor
mov
and
push
mov
jo
lods
pop
popa
fld
test
mov
gs
lock
pop
imul
fwait
mov
sbb
dec
pop
js
stos
mov
push
std
jp
std
int
scas
(bad)
into
dec
(bad)
push
dec
mov
aam
rcl
mov
xchg
add
out
jmp
out
into
xchg
mov
rol
test
add
mov
add
jae
push
(bad)
cmp
popf
jl
push
mov
push
shl
lods
pop
mov
(bad)
cwde
dec
int
pop
out
mov
cmp
and
icebp
inc
movs
push
fcomp
imul
sti
lahf
dec
mov
ins
movs
(bad)
hlt
jno
fwait
outs
mov
xor
jne
adc
pop
mov
push
cmp
psubsw
leave
jp
fwait
movs
jp
sti
sub
push
mov
call
movs
dec
cmc
movs
push
xor
popf
retf
and
fwait
and
jg
imul
push
les
push
shl
jmp
jns
jnp
mov
aas
sub
xor
arpl
jmp
loope
add
xor
shl
add
xchg
add
add
sbb
xchg
cdq
in
push
cwde
in
push
adc
(bad)
lds
push
ins
inc
inc
inc
ror
dec
leave
mov
lea
jo
or
cmp
in
adc
cmp
retf
or
in
pop
std
inc
movs
scas
jmp
pop
in
lods
inc
in
sub
pusha
pop
xchg
push
fbstp
cld
fsubr
pop
cmps
inc
cwde
mov
jnp
mov
sub
(bad)
stos
xchg
sub
ins
push
leave
adc
(bad)
and
frstor
jnp
and
xchg
jl
imul
outs
jae
jle
(bad)
push
shl
dec
out
(bad)
imul
xchg
sub
jb
addr16
loope
or
mov
cmp
nop
sbb
push
add
cmps
jge
ds
add
inc
(bad)
test
xor
cmp
or
jle
inc
cmp
cmp
adc
xchg
int3
or
dec
sti
push
xchg
push
fist
cmp
jge
xchg
jecxz
int
stos
xchg
adc
nop
je
inc
xor
sub
mov
lods
pop
or
xlat
test
stos
cmps
push
xchg
rcr
xor
call
push
int
mov
sub
pop
jo
ret
sbb
int
(bad)
sub
nop
or
mov
pop
mov
out
data16
add
pop
pop
adc
jb
not
xchg
imul
mov
inc
imul
dec
mov
cmp
mov
out
out
mov
sbb
add
mov
dec
mov
inc
into
(bad)
loopne
push
xchg
movs
inc
or
pop
rcl
mov
jae
sar
movs
dec
call
daa
int3
dec
sbb
dec
fucom
in
icebp
adc
sbb
xor
fwait
int
or
dec
bound
dec
pushf
pop
psllw
(bad)
cmp
cmp
loope
sbb
pop
js
push
ins
out
mov
xchg
add
sbb
jo
jle
addr16
jmp
mov
xor
bound
cdq
shl
clc
or
add
push
mov
mov
dec
ret
add
dec
jns
jp
call
push
fist
jne
jae
and
in
adc
dec
int
jo
xchg
jnp
mov
aas
ror
add
call
test
sub
aas
jl
les
test
in
push
jle
outs
xor
popf
dec
push
outs
into
add
jbe
push
retf
sub
ret
mov
sbb
aad
add
push
sub
push
add
ins
ja
stc
pop
dec
iret
push
movs
push
popf
adc
das
xor
in
pop
rol
outs
jno
push
scas
pop
cmps
xor
dec
mov
ffreep
adc
ins
enter
dec
jo
pop
fsub
jp
dec
jle
jl
dec
je
pusha
dec
lds
jbe
ins
vmptrst
xor
movs
movs
and
test
scas
shl
mov
sub
pushf
popa
es
add
dec
cld
pop
dec
fstp
popf
and
xor
inc
pop
icebp
icebp
icebp
xchg
sar
mov
dec
jl
push
add
int
pop
cwde
pop
enter
ss
mov
add
mov
cmp
fwait
test
cdq
or
pusha
fcmovbe
call
pop
inc
popf
push
ins
adc
mov
mov
sub
pop
out
nop
push
inc
stos
and
or
dec
xchg
fldcw
cli
push
(bad)
int
call
test
arpl
ret
push
mov
das
aas
loopne
xor
lea
sbb
mov
push
movs
push
imul
pusha
pop
cmp
jg
cmps
add
movs
int3
and
xor
jnp
cld
mov
aam
pop
cmp
ins
mov
xchg
push
es
das
(bad)
cmp
cld
cmp
sahf
test
(bad)
out
mov
sahf
sub
test
mov
or
outs
mov
bound
dec
into
call
adc
leave
gs
es
adc
fdivr
xchg
push
sbb
xchg
mov
sbb
ret
sub
arpl
sahf
stos
rcl
adc
arpl
in
dec
lea
les
jl
inc
fs
push
popa
sbb
sbb
cmp
cmp
push
or
and
adc
daa
xchg
fcmovu
or
pop
jp
repz
sbb
in
(bad)
in
outs
push
sahf
adc
pop
add
(bad)
jge
or
push
adc
push
inc
inc
jp
retf
sbb
enter
mov
and
push
mov
(bad)
lock
iret
pop
mov
dec
mov
fsub
ins
dec
(bad)
lds
aad
lods
fwait
(bad)
pop
(bad)
pop
imul
mov
bound
jnp
sbb
mov
pusha
adc
(bad)
jns
pop
mov
sbb
aam
aaa
pop
dec
mov
adc
popf
inc
jg
push
cmp
push
mov
stos
das
mov
sub
pop
inc
cli
add
jbe
(bad)
out
adc
inc
fcmovnbe
rcr
sub
(bad)
pop
test
loop
repnz
cdq
push
push
sub
cmp
mov
dec
mov
nop
sahf
stos
xor
neg
outs
out
aas
jmp
test
aam
cmp
inc
and
in
xor
imul
mov
sahf
into
mov
(bad)
lds
and
and
test
inc
mov
aas
jg
mov
test
lods
push
add
inc
lods
ins
cmp
pushf
mov
dec
push
cld
push
stos
inc
inc
test
adc
sbb
dec
stos
mov
in
mov
lds
std
aas
hlt
repz
sbb
adc
xlat
xor
pop
js
sbb
das
pushf
popa
xor
ins
xchg
call
add
and
cdq
iret
adc
lea
adc
fidivr
mov
jecxz
pop
xchg
scas
(bad)
mov
lahf
xor
test
fisubr
adc
les
sbb
push
loopne
sub
xchg
dec
sar
dec
outs
push
add
mov
mov
dec
add
xchg
ret
iret
add
repz
hlt
pop
fisubr
ret
lds
(bad)
xor
leave
adc
add
lds
loope
pop
rcl
or
sahf
xor
push
pop
dec
sbb
cli
mov
sub
adc
add
(bad)
cmc
jno
add
push
push
ja
std
or
call
out
popa
int3
xor
mov
add
sar
into
idiv
cmp
push
movs
(bad)
aad
cmp
push
sbb
add
inc
out
sbb
xchg
inc
mov
jecxz
test
sahf
adc
int3
adc
ror
sub
and
repz
adc
xor
jmp
mov
ja
pushf
ins
mov
imul
jno
cmp
repnz
and
cmp
aad
retf
in
add
dec
repz
hlt
aad
or
fldcw
shl
jp
maxps
ds
(bad)
je
(bad)
mov
(bad)
push
fbstp
sub
mov
stos
add
std
jp
leave
dec
jo
mov
adc
jmp
xchg
lahf
cmp
jne
adc
push
sahf
lds
movzx
call
jbe
sbb
loop
ffree
push
jle
push
jecxz
add
hlt
rcl
(bad)
movs
inc
bound
shr
daa
les
mov
sub
push
inc
fucomip
into
int
and
xchg
in
int
xchg
jo
fidiv
sti
add
div
sar
pop
es
sahf
mov
shl
mov
add
add
adc
adc
fistp
cmp
dec
cmp
loop
push
mov
mov
sahf
fadd
jp
aas
cmps
int3
jnp
(bad)
cmp
jle
iret
inc
pusha
add
push
dec
ret
retf
jne
push
ror
pop
pop
mov
pusha
pop
jmp
pop
pop
daa
out
std
cs
(bad)
pop
pop
ins
dec
js
mov
daa
into
adc
lahf
xchg
lods
mov
sti
stos
mov
sbb
sbb
dec
hlt
into
test
mov
xor
mov
adc
inc
cmp
push
xchg
push
loop
enter
icebp
scas
cmp
sub
clc
stos
out
mov
push
int
test
out
fsub
dec
cmp
inc
jno
mov
loope
pop
or
cdq
add
jg
stos
mov
(bad)
out
inc
sbb
pop
xchg
dec
push
rol
stos
repz
jne
icebp
add
out
xchg
ret
fadd
jl
push
jge
add
imul
mov
test
add
push
out
sub
sbb
xlat
ins
xlat
test
arpl
cmp
sub
addr16
mov
je
fmul
aaa
xchg
xchg
gs
shr
scas
sub
mov
xor
icebp
test
cmp
jnp
dec
test
pop
ins
jo
jg
int
aam
push
test
out
or
add
pushf
enter
stos
mov
cmp
cmp
cmp
(bad)
push
fnstenv
cmp
pop
inc
sub
pop
test
aaa
jae
shl
outs
popf
js
bswap
and
push
ret
fild
arpl
dec
lock
xchg
fs
jmp
jb
stos
push
dec
jb
movs
icebp
sbb
and
fisubr
xor
dec
push
aas
and
cmc
shr
adc
mov
(bad)
cld
scas
(bad)
mov
movs
int
jmp
pop
scas
les
add
add
js
retf
add
rcr
ficom
popa
mov
je
inc
stos
adc
mov
cmp
test
adc
mov
sub
mov
cld
add
setae
popf
mov
shr
js
shl
outs
mov
pop
jl
mov
das
push
popf
or
repnz
test
shr
nop
test
inc
jmp
inc
pop
(bad)
mov
mov
mov
dec
stos
mov
inc
pushf
les
mov
mov
sub
das
out
mov
shl
jg
mov
in
or
xchg
pop
cld
mov
std
sahf
cmp
xor
imul
sar
mov
sub
std
pop
push
dec
dec
and
pop
pop
cld
fdivr
dec
repnz
scas
cmp
aad
sbb
mov
push
stc
mov
cli
je
bound
loop
aas
ins
dec
sub
push
retf
fistp
dec
fisub
sub
(bad)
mov
xchg
repnz
xchg
out
fisub
inc
cmc
jle
std
jmp
mov
cmp
push
daa
rcl
xchg
ss
fmul
jns
jbe
cmp
cmp
pop
sub
xchg
jle
imul
in
jbe
in
std
add
mov
pop
stos
and
sub
push
pop
push
mov
or
dec
aad
mov
bswap
test
in
arpl
enter
rol
cwde
xor
cmp
sub
sbb
jecxz
dec
mov
mov
sbb
add
sbb
mov
mov
out
mov
test
ja
jbe
jg
inc
pop
imul
les
dec
fwait
fwait
nop
xchg
and
jle
sbb
xchg
xor
adc
fsub
pop
mov
jmp
mov
pusha
sti
and
mov
sub
pop
imul
inc
add
jnp
sti
push
xlat
mov
pop
hlt
sbb
push
mov
push
shl
movs
xchg
scas
fcom
cli
and
popf
push
sub
fdiv
xchg
push
xchg
push
stos
pop
mov
pop
fbld
ret
lock
pop
or
das
dec
mov
fdivp
sbb
jecxz
and
ja
inc
or
out
or
lods
imul
mov
ja
dec
(bad)
xchg
into
pusha
cli
fidivr
inc
(bad)
loopne
add
arpl
sub
pop
cvtdq2ps
cmp
out
dec
imul
xor
(bad)
shl
or
(bad)
bound
pop
imul
sbb
push
out
popa
repz
into
pop
mov
xchg
in
add
setnp
xchg
retf
mov
adc
test
push
push
and
pop
das
xchg
mov
jl
call
cmp
call
mov
ret
test
dec
bound
sahf
hlt
dec
fs
out
adc
fldenv
sbb
call
shl
imul
test
jnp
sub
xor
jge
loop
test
ror
cmp
sub
mov
jo
sub
jbe
fiadd
dec
mov
(bad)
mov
mov
adc
jecxz
and
dec
push
lahf
cmc
cs
push
in
xor
xor
or
ja
and
cdq
ror
test
gs
test
jg
bnd
dec
ret
imul
inc
lods
inc
mov
add
pop
mov
ja
adc
call
push
bound
shl
jo
sbb
(bad)
cmp
add
inc
mov
cmp
(bad)
mov
dec
xor
and
pop
sub
jmp
mov
jecxz
mov
pop
add
or
sub
rcr
xchg
adc
enter
inc
jo
inc
sbb
frstor
test
or
shr
rcl
xor
pop
jbe
dec
pop
out
popa
mov
movs
cmp
mov
xchg
(bad)
fcomp
sbb
push
rol
pop
sbb
mov
inc
push
mov
popa
in
xor
add
jns
push
rcl
test
jb
fdiv
rcl
lods
or
cmps
push
mov
jb
cmp
arpl
mov
sub
into
add
loop
xor
or
mov
adc
sbb
sahf
cmps
xchg
add
out
shr
das
and
mov
mov
xchg
pop
(bad)
pop
bound
or
jp
popa
gs
jg
paddusb
mov
xchg
jmp
js
outs
lahf
(bad)
or
ds
or
pop
in
sti
dec
out
mov
jg
or
movs
pop
enter
retf
ds
xchg
adc
ss
xor
mov
ins
jge
jnp
adc
out
daa
aam
cmps
inc
dec
xor
je
pop
hlt
frstor
and
or
mov
xor
out
xchg
cwde
xchg
mov
shr
add
loopne
xor
sub
fstp
icebp
daa
inc
mov
and
dec
mov
int3
fldenv
aaa
xchg
pop
(bad)
pop
cmp
stos
dec
pop
addr16
xor
cld
repz
jle
outs
fs
cmp
xor
mov
sbb
jno
loope
idiv
imul
retf
mov
aad
xchg
sbb
sbb
clc
fs
mov
sar
pop
cmc
aad
into
cmp
int
or
inc
add
test
rcl
out
or
test
test
shr
mov
mov
add
jae
icebp
loopne
mov
or
sbb
shr
adc
mov
mul
fld
(bad)
clc
daa
pop
test
jae
out
stos
fnstsw
arpl
ja
xchg
popa
mov
sub
dec
hlt
adc
push
cmps
aas
sbb
loope
sub
ret
je
fild
imul
arpl
gs
aas
xor
sub
xor
test
into
cli
ins
sub
pop
mov
cs
lods
add
repnz
xor
dec
movs
les
and
(bad)
mov
sar
sub
jbe
shl
lods
mov
cmp
cld
jge
jae
or
dec
fld
mov
add
sbb
xor
retf
pushf
sbb
pusha
imul
push
bound
or
dec
mov
mov
pop
(bad)
mov
inc
in
adc
int
icebp
pop
retf
leave
vcmppd
sbb
mov
test
movs
and
mov
enter
iret
aam
ins
pop
(bad)
test
je
test
in
sub
(bad)
mov
outs
pop
cmps
mov
repnz
bnd
add
cld
adc
mov
repnz
adc
pushf
mov
mov
imul
popa
ds
adc
imul
mov
icebp
fdivr
push
stos
mov
imul
rcl
icebp
sti
jbe
dec
mov
pusha
xor
xchg
and
push
sbb
cwde
sti
and
sbb
in
xor
and
fidiv
mov
dec
ins
inc
imul
jbe
jle
sbb
push
int
(bad)
sar
or
mov
arpl
rcr
pushf
add
fs
inc
gs
cli
cmps
call
imul
bound
test
mov
and
xchg
xor
in
xor
pop
lock
out
inc
inc
(bad)
push
imul
test
gs
xchg
jge
into
pop
pop
bound
pop
cmps
fidiv
cmps
int3
jo
call
add
repz
jb
pop
iret
int3
xchg
inc
cmp
out
xlat
pusha
xchg
push
ds
(bad)
pop
stos
gs
mov
inc
or
dec
add
add
push
and
popa
iret
adc
test
movs
movs
loop
mov
sbb
mov
int
std
jp
cli
fsubr
sub
mov
sbb
jmp
ror
pop
pop
fcmovb
mov
out
add
dec
fld
mov
dec
push
cld
aam
or
xor
cli
mov
dec
mov
in
jne
clc
in
cmp
or
pop
push
cmp
out
inc
(bad)
xor
inc
(bad)
xchg
rol
mov
test
shr
or
xor
gs
or
scas
mov
jl
scas
popf
(bad)
mov
fsubr
icebp
or
cdq
dec
mov
clc
(bad)
push
mov
adc
push
mov
out
lods
sbb
pop
cmp
aad
rcl
pop
add
(bad)
gs
int3
adc
leave
loope
scas
push
push
mov
test
loopne
xchg
add
das
shr
lds
das
mov
mov
rcr
lods
mov
sbb
cmp
mov
xchg
call
movs
test
jno
gs
or
xchg
xor
cli
fimul
ror
dec
pop
ret
pop
mov
js
addr16
call
pushf
and
push
les
adc
cdq
jae
xchg
addr16
xchg
jae
shl
dec
inc
add
jl
cmp
jbe
retf
out
mov
jg
xchg
push
enter
dec
mov
hlt
mov
movs
fist
aam
adc
lds
movs
mov
scas
add
scas
xor
jnp
xor
loop
push
mov
mov
or
ret
pushf
jb
xlat
aas
add
rcr
jg
and
cmp
scas
push
push
sub
pop
out
cmp
pop
pop
imul
stos
cld
pop
jne
cmp
dec
ficomp
pop
lds
inc
scas
add
lock
mov
imul
add
iret
and
jno
movs
aam
fnstcw
pushf
scas
int
ds
rcl
nop
popf
shl
cmp
gs
fcmovnb
les
lods
push
inc
pop
lods
nop
pop
xlat
mov
jge
arpl
cld
scas
(bad)
(bad)
stc
jbe
cld
addr16
(bad)
jo
adc
jp
mov
je
test
push
dec
clc
push
mov
cli
pop
cmp
or
dec
jmp
aaa
add
inc
dec
ds
adc
mov
mov
dec
pop
jge
push
mov
ds
or
cmp
not
sub
outs
cmp
cmp
inc
or
lds
scas
test
nop
pop
nop
loope
push
loope
test
and
and
stos
call
(bad)
leave
inc
nop
push
mov
push
stos
lock
cmp
inc
pop
cmps
cli
int3
add
push
lods
js
icebp
outs
push
imul
xor
cmp
lds
es
retf
dec
jmp
fnsave
adc
aam
jmp
sbb
out
jno
jae
mov
test
mov
xor
outs
push
icebp
pop
sbb
xor
push
pop
cld
ins
mov
xor
xor
lods
push
xor
push
adc
repnz
imul
lods
push
ja
popf
dec
jno
sbb
(bad)
call
scas
push
jmp
jno
movs
imul
mov
xor
movs
jnp
pop
mov
(bad)
in
pusha
add
mov
pop
in
push
xor
pop
adc
test
pop
loopne
scas
adc
inc
lds
jbe
cmps
pop
mov
fcomp
mov
cmp
retf
cld
fadd
mov
adc
and
jp
inc
push
movs
or
mov
xlat
call
ds
pop
or
aad
pop
ins
or
fidiv
in
(bad)
pop
loop
in
ins
test
dec
mov
ins
lods
test
add
cmps
fimul
push
inc
mov
out
loopne
es
mov
push
retf
icebp
popa
adc
pop
fldenv
add
sbb
add
lods
sbb
out
les
or
jmp
movs
push
pop
jmp
push
sbb
popf
les
mov
add
adc
test
popf
cmps
das
xchg
lods
lock
inc
cmp
push
retf
inc
sub
sbb
sahf
lock
mov
ret
mov
sbb
loope
(bad)
movs
mov
dec
adc
jmp
outs
xchg
sbb
daa
mov
cwde
into
bound
push
mov
cmp
add
out
imul
rcl
cmps
fild
loopne
out
das
jbe
es
pop
retf
cld
dec
pop
lea
aad
xchg
and
pushf
into
push
icebp
sbb
int3
xor
cmp
test
rcr
aas
dec
jne
mov
push
fild
xlat
cld
fwait
push
pushf
aam
xchg
mov
popa
push
xlat
fist
or
mov
push
xlat
xchg
mov
sbb
xchg
mov
xchg
sub
lds
in
in
mov
out
cs
cmps
jmp
mov
gs
ret
stos
nop
xchg
cmp
add
aaa
div
sbb
hlt
jo
in
hlt
jae
cmc
ss
sbb
pop
xchg
cmp
mov
cmps
out
push
jbe
je
ins
jge
jae
cmp
ja
dec
data16
jns
xchg
jne
cmc
sub
jge
push
add
push
pop
adc
lock
xchg
test
js
push
addr16
mov
data16
xor
call
adc
js
ja
mov
push
inc
(bad)
pop
std
mov
jbe
mov
mov
push
sbb
(bad)
sbb
fmul
ja
gs
mov
mov
das
jmp
ja
hlt
mov
stc
stos
add
mov
and
cmc
fcmovnu
js
(bad)
repz
xor
fidiv
loopne
clc
test
(bad)
mov
stc
ss
test
dec
jle
sbb
add
push
sbb
sbb
(bad)
enter
jb
icebp
add
fs
mov
lock
cmp
call
pop
bound
icebp
in
pop
sysret
aaa
(bad)
pop
mov
cmp
int3
call
lods
loope
ret
inc
inc
and
loope
bound
mov
out
push
inc
push
(bad)
or
hlt
cwde
mov
sub
mov
xchg
lock
rcl
clc
out
(bad)
pop
iret
enter
imul
leave
dec
mov
and
fidiv
cmps
inc
es
in
dec
push
sbb
out
pop
xchg
jno
out
jne
ret
fld
adc
cmp
add
add
test
xchg
fwait
jecxz
lods
jmp
sti
jno
je
or
bound
push
mov
pop
inc
aas
out
je
lahf
xchg
sbb
adc
add
mov
fwait
popf
sti
ds
mov
and
ins
and
mov
inc
ja
mov
pop
and
out
and
mov
dec
je
or
mov
test
and
leave
(bad)
pop
push
or
mov
sbb
popf
repz
ret
cwde
add
imul
mov
jmp
cli
mov
jb
jb
or
movs
jle
out
je
into
fimul
pusha
mov
xlat
int
mov
adc
ja
mov
(bad)
jmp
outs
mov
and
sbb
outs
rol
mov
and
mov
jbe
jbe
cwde
sub
shr
push
stc
and
in
es
and
xor
dec
iret
cs
jne
adc
cli
jno
mov
jbe
add
retf
sub
cmp
or
mov
mov
repz
cmp
add
pushf
lahf
out
or
adc
push
or
repz
out
in
jne
repz
leave
cmp
sub
loopne
rcl
imul
ja
sub
adc
popa
arpl
out
repz
addr16
mov
rcl
mul
adc
sbb
jnp
and
xchg
les
out
ja
cs
add
int3
sahf
mov
test
xchg
cdq
and
xchg
test
fs
(bad)
aad
daa
mov
mov
daa
sar
mov
repz
inc
arpl
nop
or
call
dec
das
adc
and
cmp
mov
mov
xor
push
movs
bnd
cwde
sahf
jnp
repz
pop
stc
pushf
stos
mov
jmp
sbb
call
jb
loope
sbb
inc
int3
imul
mov
push
cmp
mov
dec
inc
pop
data16
aam
jb
jne
iret
imul
pop
fs
(bad)
pusha
ins
or
push
sub
jg
arpl
loopne
repnz
xchg
aaa
test
in
cdq
in
mov
push
adc
ss
xchg
cmp
inc
adc
mov
jb
push
sbb
arpl
or
push
fmul
out
mov
test
lea
push
cmp
icebp
ja
sub
xor
or
mov
inc
jb
fadd
xor
adc
mov
lods
or
mov
jbe
xchg
loope
sahf
pusha
lahf
mov
cld
mov
out
sti
cmp
pushf
and
inc
dec
(bad)
dec
mov
inc
(bad)
ds
or
mov
jle
inc
jp
mov
mov
test
(bad)
mov
mov
outs
mov
mov
nop
ret
cld
test
mov
cmp
inc
or
cmp
mov
test
aaa
jg
mov
shl
mov
fist
mov
ss
mov
jae
(bad)
jb
cmp
mov
aaa
test
aam
bound
jmp
std
stos
jg
(bad)
pop
test
sbb
sbb
int
jmp
aad
or
fidivr
adc
stc
push
mov
fld
ds
jecxz
cmp
ficomp
jnp
xor
mov
mov
xor
mov
mov
mov
test
sub
mov
xor
lods
cli
push
pop
jnp
xor
jo
fistp
mov
push
bound
mov
fild
mov
cmp
jg
push
jmp
add
loopne
xchg
push
push
ja
xor
hlt
vxorps
or
aas
jle
dec
ins
dec
add
jnp
in
push
mov
xchg
mov
inc
mov
dec
push
loop
or
inc
jmp
jl
pop
mov
mov
xlat
stc
fnclex
mov
dec
fwait
jmp
mul
pop
sub
ror
shr
(bad)
pushf
in
and
xor
test
mov
jmp
fmul
xchg
mov
shl
loope
dec
xor
dec
mov
push
jle
xchg
aas
out
test
push
adc
sbb
imul
fidiv
jle
inc
test
jo
sub
or
dec
pop
add
or
mov
add
inc
mov
jle
adc
cli
adc
stc
mov
fistp
or
in
nop
movs
ja
dec
retf
test
dec
adc
mov
rol
or
dec
xchg
in
sar
mov
jnp
inc
call
fisub
int
jge
shr
pop
scas
out
arpl
pop
ins
xor
xor
or
out
pop
cli
jl
inc
inc
iret
adc
cmps
test
movs
in
jnp
push
ret
shr
adc
mov
add
loope
in
adc
jbe
dec
ret
xor
shl
jnp
rcl
xchg
mov
movs
(bad)
cs
sub
mov
push
cmc
mov
mov
enter
push
(bad)
das
pop
(bad)
jge
not
push
or
pop
jns
pusha
sub
mov
pop
fdivp
aam
outs
ja
xchg
add
popf
mov
dec
mov
sub
popa
and
inc
enter
jo
mov
fimul
out
xchg
pop
cmc
shl
push
sub
stc
dec
cmp
ins
aas
xchg
cmps
pop
adc
das
ja
push
xor
je
jecxz
int
fistp
pop
int3
ret
fnstcw
cmp
pop
loop
mov
or
jmp
sbb
(bad)
frstor
mov
sbb
lods
xchg
movs
pop
add
inc
jle
mov
shl
pushf
out
lock
les
and
jmp
cwde
mov
jp
sub
pusha
dec
icebp
mov
dec
push
adc
pop
retf
ror
(bad)
(bad)
in
jb
sbb
jns
add
loop
fwait
pop
add
icebp
and
leave
sub
mov
jno
add
cwde
mov
adc
pop
jmp
jle
xchg
mov
sbb
xchg
jg
sti
clc
and
ret
ret
and
xchg
inc
je
mov
adc
add
inc
addr16
ja
push
pop
std
pminsw
shl
pop
jbe
push
outs
mov
adc
fld
stos
lods
and
jmp
gs
(bad)
sahf
sub
and
add
xchg
mov
retf
test
sti
or
push
lock
pop
cmc
xor
shr
jb
sar
xchg
std
cmps
fldcw
cmp
aaa
cmp
and
pop
mov
call
inc
enter
repnz
lock
cmps
mov
scas
shl
xchg
mov
xor
xchg
add
adc
xchg
inc
add
add
aam
jmp
adc
cmp
cmp
addr16
in
mov
and
sub
clc
mov
shr
pop
pop
pop
sub
cmp
hlt
test
sbb
in
mov
dec
lea
aaa
dec
and
push
inc
jo
repnz
sbb
fisttp
cmp
pop
xor
je
repnz
inc
xor
fucom
scas
fimul
sar
retf
fistp
mov
mov
ficom
ss
outs
imul
mov
mov
jp
fsub
cmps
sbb
sub
retf
and
mov
cmp
loopne
ja
pop
fnsave
mov
push
outs
gs
jae
adc
push
or
xchg
mov
cli
xchg
mov
mov
xchg
sahf
call
test
inc
jg
cmp
and
mov
xor
cmp
cmp
inc
loope
pop
xchg
pop
xor
lahf
dec
fs
nop
inc
mov
scas
dec
cli
sub
mov
movs
shl
jle
mov
dec
ss
stos
fwait
pop
int3
jle
das
mov
adc
(bad)
sub
pushf
dec
test
loop
add
jmp
or
shl
adc
inc
cmc
retf
sub
sbb
add
scas
xlat
adc
push
sar
cli
mov
push
cs
test
add
xchg
mov
retf
xchg
mov
aas
or
adc
mov
pop
push
sbb
gs
repz
adc
dec
sub
dec
dec
jnp
pushf
(bad)
rcl
inc
sbb
dec
push
callw
jmp
ror
and
mov
add
sti
pop
inc
jmp
test
rep
pop
fcomip
adc
xchg
mov
int
es
jmp
xor
(bad)
dec
add
cmp
mov
xchg
xchg
sbb
dec
stos
inc
sbb
cld
jmp
inc
popa
fcomp
mov
out
sbb
pop
cmp
in
in
ret
xor
stc
xor
sbb
push
add
pop
lahf
aad
cwde
inc
shr
mov
icebp
dec
lahf
pop
fxtract
mov
test
xchg
and
xor
(bad)
dec
(bad)
frstor
(bad)
adc
inc
in
lock
rol
mov
xchg
xor
lea
or
sbb
fadd
(bad)
push
repz
pop
mov
imul
dec
addr16
arpl
pop
outs
push
jl
in
inc
(bad)
sbb
push
pop
rcr
adc
cli
outs
inc
xlat
or
clc
ficomp
mov
outs
sbb
dec
aaa
scas
jnp
xor
jns
fiadd
sub
jecxz
pop
pusha
and
xor
mov
pop
adc
pop
mov
sub
cli
sub
aad
dec
push
sbb
(bad)
dec
mov
sbb
inc
push
pop
psrad
js
(bad)
sbb
or
mov
jbe
jno
das
inc
adc
push
ret
(bad)
jmp
arpl
and
or
xchg
jmp
movs
sbb
cs
mov
fstp
xchg
sbb
adc
test
push
jb
or
mov
dec
cmps
fs
pop
mov
pop
jmp
neg
or
(bad)
xor
fcomp
movs
in
jmp
movs
pusha
(bad)
jle
jb
jp
fs
pop
add
repz
fdiv
int3
ja
inc
fidiv
into
mov
cmp
cmp
out
push
retf
xor
add
mov
pop
jae
cmp
xchg
call
jae
popf
push
ins
lds
cmp
in
add
imul
cli
in
jbe
mov
cmp
push
dec
and
movs
pushf
sub
xchg
sbb
bound
push
data16
in
lock
dec
mov
dec
(bad)
in
ins
aas
ins
dec
jmp
sbb
ficom
push
fist
jns
or
cdq
push
fild
(bad)
fstp
fisubr
movs
dec
add
ja
pop
xor
imul
adc
xor
inc
ins
out
mov
adc
mov
mov
out
lock
(bad)
fisub
daa
imul
mov
fisttp
mov
sbb
cmp
lahf
add
loopne
sbb
dec
xchg
test
adc
sub
dec
cmp
xchg
mul
enter
lea
xor
xor
fadd
and
outs
mov
movs
mov
inc
stc
fnsetpm(287
xchg
lea
popa
out
sbb
leave
add
mov
(bad)
mov
dec
aas
cwde
(bad)
arpl
and
jae
popa
mov
jmp
xchg
in
test
jnp
outs
xchg
mov
jb
imul
xchg
push
pop
adc
es
and
scas
add
jle
sbb
rcl
ja
popf
arpl
sbb
mov
jp
pop
dec
outs
pop
cld
mov
inc
jge
imul
test
das
jo
fadd
sub
cmp
or
and
and
sbb
and
pop
adc
out
mov
jge
sbb
cdq
aas
mov
sub
mov
jmp
cmp
add
or
and
lods
pop
mov
adc
and
(bad)
(bad)
pop
push
pop
jge
pop
pop
inc
aad
fdiv
cmps
scas
mov
in
pop
loop
fdivr
lods
dec
sbb
inc
mov
cmc
dec
in
adc
inc
lods
scas
dec
jl
jecxz
enter
push
pop
xchg
inc
mov
pop
mov
xchg
mov
sub
(bad)
outs
and
lahf
fst
leave
(bad)
in
xchg
test
sbb
xchg
rol
jb
into
jb
sbb
inc
scas
nop
sub
mov
xor
push
add
ins
cli
push
jb
or
xchg
adc
xchg
sti
lock
and
cdq
xlat
xor
neg
xor
cwde
or
dec
xchg
inc
jno
mov
dec
cmp
fcom
sbb
(bad)
or
test
cld
sub
call
aaa
cmp
xchg
in
push
adc
dec
adc
outs
mov
jb
ror
icebp
or
mov
push
xchg
test
jns
call
out
dec
mov
sub
sbb
fwait
out
and
das
mov
adc
add
jae
in
in
sti
movs
sbb
mov
push
xchg
xchg
in
sub
add
xlat
mov
and
rcr
pop
mov
aas
cmc
sti
iret
scas
in
mov
(bad)
jg
loopne
cmc
jne
dec
les
xchg
xor
ds
adc
adc
mov
lods
pop
test
movs
inc
jne
sbb
(bad)
or
sbb
mov
xchg
adc
mov
in
hlt
adc
jnp
cmp
mov
jnp
sbb
adc
addr16
ret
mov
mov
push
(bad)
ds
test
in
xchg
(bad)
push
pop
cmps
nop
stos
push
inc
imul
inc
int3
or
sub
sbb
into
adc
and
stos
inc
mov
push
sar
xchg
aad
(bad)
jmp
pop
xchg
lock
in
jno
push
out
lahf
jmp
jle
push
cld
inc
outs
pop
xlat
push
fst
add
out
sahf
sbb
pop
ficomp
mov
pop
pop
out
jmp
aad
mov
aad
out
jnp
jbe
cli
jl
xor
xchg
mov
loope
(bad)
fild
lds
mov
dec
into
call
jle
mov
ins
or
test
xchg
pop
add
inc
xchg
xor
loope
aam
test
adc
fild
push
and
enter
jmp
das
ficom
lds
in
adc
adc
ja
or
mov
xor
fild
out
sar
jmp
mov
mov
inc
pop
(bad)
aad
out
xchg
jbe
(bad)
movs
mov
scas
std
out
cmps
shl
or
test
cmps
fisubr
out
jns
jo
(bad)
mov
in
bound
add
es
(bad)
sahf
push
in
xchg
sti
es
aas
jns
cli
pop
inc
adc
pop
into
lods
or
sub
in
test
adc
mov
cmp
movs
sub
les
or
xchg
fidivr
inc
stos
aad
dec
in
adc
in
stos
jmp
iret
ins
mov
sbb
sahf
cmp
cmp
scas
rol
add
scas
add
mov
dec
or
pop
outs
lods
cli
sbb
fsubrp
xor
stos
cmp
xchg
mov
sub
fnstcw
inc
pop
mov
mov
js
xlat
mov
adc
nop
push
sub
in
jmp
and
adc
mov
in
scas
jmp
sub
out
call
jmp
test
mov
shl
jp
mov
push
icebp
scas
dec
das
mov
push
fwait
inc
mov
mov
movs
cmp
push
xor
xor
in
and
sbb
les
jmp
inc
pushf
lods
inc
lahf
xor
cdq
pop
lods
push
je
into
xchg
sbb
push
pop
dec
stos
fld
lods
fldenv
jmp
inc
pop
cwde
stc
dec
and
stc
repnz
sbb
ja
and
in
adc
lock
loopne
inc
jg
stc
mov
adc
leave
dec
mov
jb
lahf
setb
ja
mov
cmp
sbb
lock
not
mov
sub
xchg
mov
cwde
fdiv
outs
add
test
inc
daa
mov
ja
cmp
jbe
jmp
fwait
dec
cmp
mov
stc
std
es
lds
sbb
iret
sub
mov
or
sub
into
pop
mov
xchg
out
dec
push
aam
mov
xchg
dec
sahf
test
mov
or
or
(bad)
xchg
or
cmp
fild
loopne
daa
int3
inc
rcr
outs
inc
lods
lock
sub
ror
push
ror
in
rcr
(bad)
mov
int3
sub
xchg
or
mov
imul
repnz
xlat
jnp
not
outs
loopne
adc
cmp
out
outs
adc
mov
xor
xchg
nop
xchg
dec
(bad)
lods
out
(bad)
mov
nop
cmp
adc
xor
cdq
cdq
imul
add
in
nop
sar
retf
and
mov
hlt
inc
push
cmp
sahf
test
out
out
aaa
mov
mov
mov
or
outs
ja
sahf
pop
cmp
or
dec
cmps
fcom
or
imul
pop
retf
pop
inc
pop
push
mov
jge
loopne
adc
mov
mov
xor
ja
pop
cmp
and
lods
mov
mov
or
rcl
cmps
jae
jbe
xor
ret
aam
cmc
xchg
(bad)
ss
out
cmps
or
or
mov
not
and
mov
les
inc
pop
movs
test
nop
popa
bound
and
jno
sbb
mov
adc
test
(bad)
outs
push
rcr
mov
hlt
sbb
outs
pop
cmps
stos
scas
push
mov
or
sub
daa
push
jno
mov
or
sub
jns
sti
(bad)
or
out
adc
aam
into
push
movs
rcr
loopne
fwait
inc
xchg
and
push
cwde
cmp
add
dec
gs
popa
ret
push
scas
das
cmps
jnp
mov
mov
or
sti
(bad)
daa
retf
dec
fiadd
inc
cmp
enter
jle
mov
inc
inc
out
mov
adc
push
pop
adc
inc
dec
test
bound
gs
punpckhdq
test
mov
cmp
mov
std
inc
(bad)
les
rcr
loope
mov
cs
or
rcr
call
call
jae
(bad)
sbb
aad
jge
xchg
call
ins
mov
inc
test
mov
and
jmp
stc
push
sahf
movs
enter
sbb
sbb
push
jmp
jns
cmp
fwait
xor
adc
or
cmp
out
jmp
pop
mov
jl
lock
into
push
out
not
pop
popf
test
loope
stc
call
xor
sbb
push
push
push
aaa
push
pop
sti
xchg
mov
dec
lea
sti
(bad)
adc
fldenv
push
push
cmp
les
retf
fimul
and
ret
xlat
fwait
cmp
stc
add
out
iret
jno
aam
mov
out
dec
jle
mov
inc
sub
iret
jmp
ret
sbb
dec
into
sar
inc
bnd
push
adc
sub
push
sbb
add
ret
and
test
aaa
add
xchg
adc
and
mov
neg
cwde
scas
fst
aam
jg
pop
inc
or
mov
sub
pop
les
into
int
dec
ret
sub
(bad)
jns
mov
xor
sbb
push
in
sbb
dec
pop
imul
xor
mov
jg
aad
dec
add
mov
add
in
mov
jne
fdivr
jp
dec
pop
adc
clc
popf
loope
idiv
popf
not
push
frstor
fldenv
in
dec
push
push
mov
(bad)
ret
out
aam
sti
scas
fadd
ds
sti
ins
adc
cld
gs
frstor
jl
inc
call
jae
jl
fxam
push
ja
rcr
dec
test
xchg
xchg
out
adc
sub
icebp
jnp
fnsave
mov
adc
mov
pop
aaa
xor
cmps
in
dec
xchg
sub
push
add
sbb
int
push
aaa
fld
in
test
jp
iret
or
fimul
stc
cmp
clc
fdiv
test
push
aaa
xchg
sub
sti
add
call
test
sbb
(bad)
in
pop
call
pop
cmp
gs
jle
lods
sub
(bad)
lods
sub
(bad)
aas
cmps
cdq
rsqrtps
xchg
sbb
test
aad
stc
mov
aaa
adc
int3
jnp
jg
xchg
imul
or
dec
fs
stc
dec
xor
jnp
cli
xchg
les
nop
stc
mov
pop
ins
sti
cmovl
iret
std
add
sub
in
or
inc
popa
xchg
add
dec
xchg
in
push
fstp
es
sub
sti
in
xchg
sbb
lods
dec
es
leave
js
stc
mov
sbb
xor
cli
ins
xchg
outs
xor
sar
push
adc
stc
and
mov
jmp
sbb
je
outs
iret
mov
lds
dec
jns
xchg
outs
cmp
ds
pop
pop
mov
shr
jl
pop
(bad)
mov
mov
aad
sub
scas
cmovae
ret
sub
ja
fistp
loopne
test
popf
call
test
ret
mov
int
ins
jp
push
adc
cli
pop
xlat
lods
dec
sbb
retf
arpl
iret
cmp
in
xor
iret
mov
adc
xor
sti
enter
jge
iret
jle
xchg
data16
pop
mov
in
aas
test
jg
fwait
in
adc
bound
jns
retf
dec
push
mov
stos
inc
loopne
jno
dec
or
stos
sub
outs
call
push
cmc
call
loopne
push
movs
push
inc
ins
lods
or
call
hlt
in
jne
fsubr
dec
push
(bad)
sbb
cmp
cmc
iret
js
stos
sub
shl
andnps
inc
mov
idiv
xor
cmc
mov
(bad)
in
cmps
rcr
ret
in
push
xchg
push
mov
add
cmp
mov
cmps
push
cwde
fwait
add
in
adc
gs
mov
shl
add
mov
mov
push
retf
mov
cld
push
clc
aaa
lock
and
pusha
xchg
and
cwde
je
lds
push
dec
shr
outs
in
fdivr
pop
xchg
add
in
mov
pop
in
adc
cmc
inc
mov
inc
inc
stos
loop
mov
jo
pop
jg
outs
push
mov
aam
call
shr
mov
repz
in
pop
out
out
or
stc
dec
inc
icebp
adc
je
scas
sbb
nop
or
dec
imul
add
xchg
mov
rcr
or
xchg
mov
pop
sti
mov
std
sti
jo
stos
add
add
or
ficom
dec
sub
adc
das
push
dec
sbb
jnp
inc
mov
call
fnstsw
outs
cmp
lock
pushf
(bad)
inc
popf
jns
xchg
jb
adc
scas
(bad)
or
or
nop
ret
retf
push
ror
cli
xchg
vmptrld
xchg
push
mov
inc
je
cmp
fchs
jge
mov
push
pop
call
pop
mov
inc
jl
out
push
addr16
mov
mov
into
mov
mov
inc
mov
dec
sub
cmp
xor
mov
jge
rcr
sahf
mov
mov
aad
ret
cdq
(bad)
lods
jp
or
rcl
sahf
adc
mov
scas
pop
mov
test
adc
stc
ret
or
jmp
and
lahf
addr16
in
movs
(bad)
mov
aam
(bad)
pop
das
jl
or
cwde
jne
in
pop
inc
gs
and
into
pop
jae
fst
lea
jge
adc
inc
xchg
inc
mov
jecxz
hlt
call
(bad)
dec
mov
pop
pop
xchg
aas
mov
(bad)
mov
or
aas
aas
adc
inc
jg
push
mov
mov
aam
sbb
push
shl
jge
xchg
mov
dec
out
xchg
jns
push
mov
or
test
sti
inc
sar
cmp
imul
(bad)
out
inc
cmps
mov
push
add
fld
fimul
and
lahf
in
mov
in
sub
(bad)
xchg
(bad)
out
pop
dec
test
jge
aam
xchg
pushf
in
pop
jg
into
fst
scas
aad
add
mov
in
push
cmp
jmp
dec
sbb
push
and
mov
enter
inc
das
cmp
mov
mov
jns
scas
jnp
stc
fadd
sub
fxch
xchg
inc
xchg
adc
fisub
into
sbb
rcr
aad
xor
retf
aas
icebp
sub
fidiv
add
retf
shl
retf
xchg
xchg
outs
sbb
fcom
popf
mov
aam
cmp
outs
adc
add
pushf
jecxz
push
fild
sbb
fild
int3
mov
mov
inc
inc
sbb
test
cdq
mov
ins
stos
push
mov
push
xchg
mov
sbb
xchg
out
xchg
xchg
or
cmp
xchg
mov
adc
jle
mov
into
pushf
mov
push
dec
pop
js
sbb
jno
enter
push
inc
nop
xchg
test
push
sbb
dec
sti
fbstp
mov
call
inc
cdq
out
cli
add
bound
pop
rol
jp
or
mov
imul
ret
dec
cmps
xchg
(bad)
in
setg
sbb
retf
fmul
xchg
pop
inc
pop
ret
jbe
ja
push
mov
mov
in
jg
jae
add
mov
push
sar
or
fwait
sub
mov
ret
aad
xchg
jle
or
test
cmps
push
pop
xchg
mov
mov
test
inc
jns
dec
adc
cmps
add
movs
int3
stos
imul
push
dec
imul
scas
(bad)
mov
mov
in
out
shl
xlat
mov
neg
repz
fdivr
dec
push
sbb
jne
sahf
mov
pop
(bad)
into
stos
cmp
std
test
mov
ins
repnz
(bad)
pop
ins
jl
pop
fs
sbb
imul
mov
xchg
jne
cmp
jge
push
stc
stc
sbb
adc
sti
popa
call
jmp
jmp
retf
call
mov
or
jb
test
inc
lock
pop
pop
dec
fst
push
js
lods
inc
xor
cli
push
ins
add
outs
leave
jmp
(bad)
fdiv
not
int
jmp
xlat
out
add
out
cld
push
adc
push
sub
sub
pop
jecxz
inc
push
adc
add
stos
shl
mov
lods
inc
scas
icebp
add
ss
jp
retf
movs
loope
jns
hlt
pop
add
icebp
xchg
loop
mov
shr
ds
jmp
mov
cmps
(bad)
(bad)
sub
outs
sbb
es
ror
jecxz
(bad)
stc
dec
xchg
mov
sub
inc
(bad)
adc
push
mov
jo
sub
scas
jae
or
sbb
jg
inc
inc
add
shr
push
into
aad
push
pop
push
mov
fcomp
shl
pop
mov
jns
push
push
icebp
cmp
sar
dec
ds
cmp
jecxz
scas
xchg
fidivr
ret
dec
pusha
mov
inc
int3
fstp
sti
jb
cmp
movs
xor
shl
mov
stos
jmp
push
dec
sub
movs
mov
push
mov
sbb
cdq
and
push
xor
and
mov
mov
jle
or
adc
mov
and
mov
adc
lods
fnstcw
ins
aam
leave
jle
nop
sbb
pop
movs
dec
fild
adc
fwait
ins
cmp
sbb
ficom
mov
jne
and
mov
cld
retf
or
mov
pop
sub
outs
rcr
pop
frstpm(287
ss
sar
ret
mov
add
jmp
inc
pusha
fisub
add
inc
fisubr
stos
(bad)
sub
fst
add
in
lahf
jmp
(bad)
fwait
mov
dec
add
xor
mov
xor
sub
jae
xor
mov
cmc
and
sub
adc
inc
or
mov
test
cmp
mov
iret
inc
hlt
loopne
inc
sub
iret
add
inc
shl
std
xor
or
cmps
int
ret
jmp
imul
fsubr
inc
iret
jmp
xor
dec
cmp
dec
les
jg
mov
ja
jmp
or
in
retf
(bad)
mov
and
pop
jl
not
jo
mov
les
popf
cli
mov
sbb
lds
frstor
mov
retf
cwde
ror
fwait
push
adc
out
xor
cmps
push
push
mov
push
mov
(bad)
lea
pop
cli
jl
cmc
xchg
(bad)
in
mov
jg
push
out
ficomp
gs
into
stc
pop
pop
movs
mov
aas
std
int
in
mov
dec
xchg
or
mov
jns
lahf
mov
sub
sbb
mov
add
cdq
push
dec
fdivr
test
mov
(bad)
leave
push
lods
adc
(bad)
jne
std
sbb
add
mov
or
mov
or
(bad)
dec
push
jg
xlat
loope
fcom
push
sub
xchg
xlat
out
inc
sbb
retf
xchg
mov
cmc
aaa
add
in
ins
jg
cmp
pop
in
jmp
mov
mov
or
retf
adc
inc
and
stos
pushf
add
imul
push
sub
push
(bad)
fcom
pop
adc
and
shl
aas
movs
pushf
pushf
inc
(bad)
test
inc
fnstcw
xor
mov
add
outs
sbb
scas
or
outs
int
mov
mov
inc
inc
or
cmp
(bad)
out
jecxz
ins
in
in
mov
mov
retf
out
inc
ds
outs
inc
(bad)
in
loopne
hlt
iret
stos
aad
or
dec
or
shl
movs
ja
dec
mov
jle
or
ins
lock
out
loopne
sbb
dec
js
test
push
mov
jg
aaa
and
mov
jp
popa
mov
in
mov
add
inc
out
pushf
mov
xor
add
cs
mov
test
add
loop
push
push
shl
inc
out
mov
je
retf
jg
in
inc
leave
pop
leave
jmp
out
js
cwde
iret
inc
retf
or
pop
sbb
rol
lahf
jl
fnstcw
jnp
xchg
inc
popa
xor
js
ins
and
cwde
movs
push
inc
(bad)
sti
cdq
mov
das
out
push
fdivr
cld
jge
hlt
jb
xchg
mov
fwait
inc
test
jmp
ins
adc
pushf
in
xor
movs
enter
xor
fdiv
add
jmp
cmp
dec
cld
xchg
mov
or
pop
cld
mov
outs
push
fcom
cmp
cmps
int
push
push
mov
out
xor
xor
cmps
push
into
rep
sahf
cdq
fstp
and
stos
push
aas
push
in
cld
lds
mov
xor
cdq
inc
dec
sti
pop
stc
pop
xchg
mov
lods
dec
add
dec
or
pop
clc
sahf
xchg
jl
rcl
ret
sbb
jp
sub
xchg
aad
add
mov
add
lds
pop
push
sub
ds
push
mov
pop
(bad)
adc
ficom
inc
push
std
add
movs
inc
dec
gs
lods
mul
sar
loope
mov
rcl
lods
push
push
inc
imul
mov
ins
aam
ins
jns
mov
mov
ret
mov
out
retf
cmps
mov
jp
add
nop
inc
lea
stc
rol
xchg
imul
cmp
pop
scas
nop
jg
rcr
fwait
nop
add
stos
dec
aas
ja
cmp
clc
adc
mov
cmp
sbb
ja
xchg
sbb
(bad)
ret
into
push
ins
xchg
fld
xchg
push
adc
mov
test
push
nop
mov
mov
add
pushf
sub
dec
mov
add
loope
jno
(bad)
mov
js
add
xlat
xchg
or
xor
aam
lahf
test
retf
jmp
pop
sbb
out
cli
test
sub
(bad)
sti
(bad)
jo
ret
xchg
jno
jo
pop
js
cwde
shl
ret
mov
enter
test
loope
es
cli
or
test
push
push
xchg
xchg
stos
sbb
adc
call
push
sahf
jne
retf
inc
lea
xor
outs
mov
test
sub
pop
test
mov
pop
and
mov
mov
test
dec
fnstsw
test
inc
test
sub
xor
cmp
cmps
cmp
push
test
xor
mov
xor
mov
ja
mov
ss
pop
sahf
inc
mov
push
add
sbb
imul
(bad)
sbb
xchg
xor
fwait
ins
fisubr
pop
loopne
in
xchg
das
push
mov
jbe
jmp
dec
inc
add
xor
add
pop
adc
sbb
popa
jp
sbb
jmp
jb
pop
pushw
(bad)
popa
push
mov
pop
ret
push
sub
sub
(bad)
ja
jmp
std
cmp
loop
add
cmc
mov
std
dec
cmp
jmp
fbstp
or
sub
inc
jne
nop
sub
sub
or
push
mov
xchg
inc
dec
popa
aam
cmc
adc
dec
aaa
mov
jo
iret
pusha
cmp
mov
mov
jns
popa
cli
mov
adc
inc
test
mov
in
cmp
out
lds
mov
mov
sbb
call
mov
push
add
arpl
inc
adc
xchg
in
(bad)
dec
and
cmp
cli
dec
int3
mov
or
cli
dec
push
or
cli
jb
inc
loop
push
push
xchg
xchg
fsubrp
and
fisubr
shr
xchg
cmp
mov
xchg
cmp
mov
cmp
(bad)
ins
jb
mov
call
das
not
frstor
sahf
je
xor
inc
pop
mov
test
push
mov
inc
sahf
fmul
call
dec
fnsave
aam
xor
or
int3
add
pop
adc
test
stc
inc
dec
jnp
cmp
mov
xor
jbe
inc
mov
adc
mov
loope
sbb
fild
adc
push
lea
popa
inc
fwait
adc
or
scas
mov
and
and
and
fild
lock
dec
jp
push
test
jecxz
pusha
adc
xchg
lds
or
iret
mov
mov
lock
retf
xor
cdq
out
inc
push
fcomp
mov
enter
fidiv
mov
lods
adc
test
mov
jb
mov
(bad)
jecxz
fist
les
out
xchg
lds
into
adc
adc
out
fidivr
dec
icebp
bound
mov
loop
sub
inc
ffree
js
idiv
les
shr
inc
mov
jecxz
push
lods
rcl
in
rep
inc
pop
mov
gs
or
pop
rcl
outs
jae
scas
or
push
fst
push
ins
fisttp
fistp
sub
pop
out
rcl
or
jl
cmp
loope
xor
and
mov
stc
push
(bad)
adc
xchg
dec
test
pop
inc
stc
or
adc
mov
dec
push
outs
popa
sbb
inc
and
int3
inc
(bad)
ins
cmp
or
push
stc
ret
loop
mov
lods
rol
in
fistp
lods
pop
pop
pusha
aam
aam
sahf
adc
arpl
test
fwait
push
into
mov
jb
pop
push
inc
dec
mov
hlt
loopne
or
retf
mov
stos
xchg
cmp
scas
xchg
or
mov
inc
jmp
cmp
xlat
icebp
shl
pop
inc
push
out
outs
fwait
gs
dec
pop
adc
cld
push
mov
push
ficom
mov
adc
ins
out
push
inc
fwait
popf
in
out
mov
lods
stos
out
call
out
mov
scas
pop
call
or
cwde
sub
aam
iret
ja
cmps
inc
sbb
(bad)
(bad)
xchg
jp
call
mov
xchg
jmp
nop
push
inc
test
fist
inc
test
pop
loope
cmp
mul
add
loope
sub
jno
add
mov
push
sub
mov
outs
xlat
not
jg
cld
or
ja
xchg
push
push
pop
lea
call
fisttp
fstp
xlat
inc
(bad)
xchg
loop
jno
fist
mov
xor
(bad)
in
mov
imul
(bad)
jb
sub
mov
and
mov
retf
inc
push
in
xchg
jmp
cmovge
mov
dec
mov
jo
mov
mov
xor
outs
(bad)
test
xor
mul
in
pop
push
push
or
(bad)
loop
jp
ins
stc
mov
sbb
sti
mov
push
pop
cmc
dec
mov
hlt
adc
or
shl
jb
gs
adc
scas
mov
jno
add
mul
jno
xor
out
arpl
fimul
ins
dec
xchg
leave
cmp
lods
pmullw
add
inc
cld
retf
pop
test
mov
ficomp
jne
dec
(bad)
arpl
or
data16
shl
dec
push
jge
enter
and
pop
(bad)
ror
pop
pop
jl
and
inc
lea
push
(bad)
mov
ror
into
rcl
sub
call
ficom
sti
faddp
mov
inc
test
cmp
inc
add
call
add
or
pop
ds
fucom
cld
mov
mov
cmp
lea
js
in
(bad)
pop
dec
fxch
push
pop
mov
add
(bad)
shr
jne
push
cmp
int3
pop
clc
push
mov
scas
fild
push
nop
ret
in
inc
loope
dec
sbb
xchg
inc
cli
fstp
sbb
cmp
rol
mov
in
cwde
mov
push
aas
cmp
movs
dec
inc
push
sub
sar
and
sar
sar
xchg
inc
cdq
cmp
jo
add
and
mov
data16
mov
dec
cdq
sub
das
push
hlt
add
jno
movs
mov
jo
int
int3
(bad)
ja
and
push
dec
inc
outs
ds
dec
push
loop
xor
bound
fs
aas
ficom
into
addr16
cmps
call
or
sar
adc
dec
inc
push
movs
cmp
out
cmp
inc
xchg
sbb
imul
dec
xchg
imul
pop
lahf
movs
xchg
dec
xchg
xchg
add
mov
push
pop
jbe
enter
dec
clc
enter
jno
into
mov
ret
(bad)
pop
ins
mov
push
mov
and
add
hlt
dec
push
jg
xor
js
sar
sbb
into
movs
mul
push
dec
out
sbb
in
lds
(bad)
mov
cmp
cmp
adc
aad
lock
pop
xor
push
jp
mov
imul
push
pop
pop
loopne
ja
mov
dec
aad
repnz
inc
(bad)
jmp
inc
mov
imul
setbe
pop
js
mov
ins
out
rcl
mov
xlat
call
or
ds
sub
mov
push
popf
lods
stos
(bad)
xlat
xchg
popa
fwait
mov
js
mov
(bad)
cmps
sbb
push
xchg
cmps
clc
jnp
in
or
ds
ror
bound
js
xor
jp
loope
(bad)
and
sar
xlat
iret
push
pop
mov
inc
pop
xchg
fisub
cmp
fcom
out
out
lods
inc
add
pop
call
jge
movs
mov
mov
(bad)
test
(bad)
arpl
fdivr
push
aas
outs
out
lods
push
inc
lock
sub
pop
inc
push
ins
jle
jmp
sub
int
cld
mov
in
pop
cmp
popa
ins
repnz
cwde
movs
(bad)
ins
in
inc
mov
in
fwait
sbb
in
cmc
aas
sbb
sar
inc
nop
inc
mov
dec
pop
loop
mov
repz
(bad)
or
jns
push
std
mov
push
ins
jmp
or
sub
jp
adc
or
int
popa
in
shl
pop
xchg
xchg
lock
mov
enter
dec
call
inc
sahf
fdivr
dec
xor
stos
cli
add
push
scas
stos
add
gs
sub
sub
jecxz
in
test
scas
or
sub
lods
or
push
je
rol
das
cmp
or
cmp
adc
pop
sar
(bad)
and
stc
sub
pop
jge
xchg
daa
pushf
mov
sar
scas
rcr
xchg
cmp
dec
xor
push
push
sbb
sub
js
pushf
mov
inc
or
adc
mov
push
mov
jmp
xor
jnp
jno
jo
sub
mov
inc
pop
and
add
stos
outs
cmc
aaa
xor
and
(bad)
pop
imul
mov
xchg
add
pop
push
movs
push
push
shl
lock
sahf
imul
xchg
lods
xor
sbb
es
add
lock
push
out
into
or
in
aam
add
scas
push
mov
pop
push
pop
dec
arpl
(bad)
in
out
xchg
and
fidiv
jg
aas
jmp
loopne
add
cmp
mov
in
mov
cmp
mov
fwait
add
int3
mov
mov
or
out
cmps
int3
lea
pop
sti
fwait
das
push
inc
push
in
rsqrtps
scas
bnd
ret
shr
pop
daa
movs
loop
sbb
inc
mov
arpl
sub
sub
test
and
scas
sbb
sub
ror
push
push
or
pop
pop
lock
fs
test
mov
dec
adc
push
fs
xor
stos
cmp
lea
mov
jae
adc
xchg
push
pop
mov
dec
rcl
popa
xchg
lods
jecxz
sub
and
mov
cli
pop
lea
aas
(bad)
dec
mov
add
jmp
add
daa
pop
loope
xor
push
ins
adc
adc
rol
cwde
je
ins
and
mov
pop
or
in
cmp
fnsave
inc
sbb
jecxz
xor
or
pop
jb
mov
xchg
or
std
jg
jo
inc
pop
jg
xor
mov
(bad)
mov
sbb
test
adc
ret
jns
pavgb
out
sar
mov
pop
pop
(bad)
cmp
inc
pop
scas
jmp
mov
ss
xchg
or
xchg
inc
xor
das
stos
pop
(bad)
into
adc
(bad)
scas
xor
mov
scas
or
jge
sahf
push
stos
add
int
es
es
int3
or
call
xor
aaa
or
sub
iret
xor
push
or
adc
std
jb
inc
mov
mov
adc
mov
xchg
test
retf
mov
fnstenv
lock
hlt
xchg
gs
clc
adc
bound
fbstp
test
jo
add
fmul
std
(bad)
div
retf
rcr
fstp
fsubrp
fcomp
inc
pop
fadd
(bad)
shl
rol
fstp
lds
jne
fidivr
pop
mov
call
movs
sti
sbb
sbb
fisubr
rcl
ficomp
sahf
cmc
test
mov
mov
mov
ins
xchg
jge
(bad)
shl
adc
add
xor
jp
mov
retf
sbb
and
cld
ja
inc
clc
fs
sub
fs
test
std
xchg
std
repnz
rcl
fstp
sbb
scas
in
out
call
jmp
jl
ja
pop
mov
pop
rcl
jge
sub
cmps
inc
int
adc
arpl
xchg
shr
loope
lea
inc
jne
mov
inc
mov
pop
pop
mov
jnp
jno
popf
std
sbb
fistp
jle
xchg
fcmovbe
ret
push
jns
bound
inc
loope
adc
xchg
(bad)
movs
sar
imul
aas
lods
cs
add
jno
adc
arpl
sahf
pop
push
cmp
push
xchg
and
rol
inc
popa
xchg
mov
fistp
adc
push
dec
out
bound
icebp
inc
sub
sub
stos
xchg
pop
retf
into
mov
mov
jle
movs
imul
(bad)
dec
xlat
leave
pop
mov
mov
mov
fistp
pop
(bad)
je
jecxz
pop
pop
adc
dec
dec
out
retf
or
adc
mov
jl
push
cwde
in
mov
test
xor
(bad)
rol
pop
fwait
aad
push
dec
daa
xchg
push
repz
xor
loopne
dec
or
mov
mov
xor
test
mov
bound
dec
adc
mov
and
jge
rcr
sub
ficom
cld
adc
lods
(bad)
hlt
rol
cli
loop
pop
pop
(bad)
fbld
xor
sbb
xchg
clc
cmp
movs
ins
das
inc
push
mov
js
adc
mov
pop
sub
pop
push
(bad)
cmc
(bad)
rcl
retf
std
sar
inc
sbb
frndint
and
icebp
sbb
movs
mov
lea
fcomp
fmul
mov
and
shl
xchg
cmp
leave
aas
xchg
out
in
int3
movs
int
mov
xchg
fdivrp
out
cmp
fld
sahf
pop
cs
scas
test
pop
add
jmp
push
push
push
push
add
push
or
cs
mov
das
push
add
sub
(bad)
not
fdivr
dec
xchg
or
les
sbb
in
int3
int3
std
jle
int
(bad)
push
cmc
jg
jp
sub
pop
ret
aam
or
xchg
jne
add
out
in
cmp
or
into
sbb
retf
lahf
test
rcl
rcl
mov
arpl
cmp
cmp
jge
jae
int3
pop
sahf
ret
les
jl
mov
dec
pop
xlat
fcomi
jmp
(bad)
rcl
pop
enter
lods
leave
(bad)
call
lods
rcr
sbb
xchg
dec
sbb
mov
cmp
in
ins
sbb
fwait
jmp
cmc
fsubr
pop
xchg
pop
popa
cld
repz
inc
clc
pop
shr
push
mov
push
mov
cmp
popa
ret
xlat
mov
ins
dec
inc
fstp
dec
xchg
pushf
jns
xor
and
js
inc
lahf
jbe
in
test
fist
retf
(bad)
(bad)
(bad)
fild
(bad)
add
mov
adc
jbe
sub
pop
pop
retf
ss
hlt
mov
sbb
cld
sbb
jnp
hlt
(bad)
(bad)
aaa
inc
dec
push
inc
ja
adc
or
or
stc
clc
xchg
and
js
xchg
(bad)
adc
fimul
sub
icebp
call
xchg
push
jb
push
bnd
imul
shr
aaa
std
pop
mov
lea
xchg
xor
(bad)
sbb
mov
lods
(bad)
mov
test
call
mov
sahf
fsubr
aaa
retf
std
popf
cs
push
lahf
fxch
les
loope
and
or
mov
rcl
aas
sub
fidiv
addr16
popa
leave
loope
into
imul
shl
add
xor
jmp
adc
(bad)
fld
out
fldl2t
dec
xor
cdq
push
ins
jmp
int
(bad)
cs
pop
ins
icebp
adc
or
lds
mov
popf
dec
icebp
mov
sub
sbb
shl
adc
push
sub
jno
enter
cmc
jbe
pop
sub
rcr
popf
les
pop
adc
out
push
inc
test
mov
cmp
(bad)
into
cmp
scas
sbb
xor
out
adc
jecxz
mov
sub
nop
xlat
out
sub
xlat
push
shr
and
mov
and
push
lods
mov
push
shr
(bad)
adc
mov
pusha
cmc
lods
ror
jo
sub
sub
push
jmp
pop
add
xor
jns
out
ins
xlat
mov
call
lock
in
dec
ret
add
loop
imul
and
popf
dec
cwde
add
inc
cmc
int
mov
adc
rol
call
jmp
xchg
cmp
lock
jle
xchg
ins
jmp
inc
jno
dec
cmc
retf
gs
sbb
cmp
int3
sbb
pop
lock
mov
mov
arpl
pop
movs
mov
(bad)
mov
push
pop
push
lods
int3
fcomi
neg
adc
xlat
loop
xor
into
dec
icebp
sub
clc
add
and
jmp
pop
or
lock
ja
and
xchg
das
adc
pop
test
lods
and
pushf
int3
(bad)
jp
mov
mov
pop
fs
movs
mov
mov
cmc
pushf
cmp
xor
sbb
jns
dec
pusha
adc
pop
inc
fnstenv
mov
sbb
pop
je
pop
inc
push
cwde
popa
sub
pop
adc
shl
test
inc
pop
iret
and
dec
cwde
and
ja
mov
inc
ja
mov
lds
icebp
cmp
arpl
dec
pop
mov
push
(bad)
cld
xchg
cwde
imul
adc
nop
fptan
push
loopne
(bad)
clc
push
and
imul
or
or
(bad)
imul
js
pop
or
add
cmp
movs
je
and
lock
outs
pop
jmp
or
and
sub
xchg
das
mov
imul
adc
and
test
ja
dec
pop
clc
and
jnp
fldenv
mov
arpl
popa
repnz
mov
mov
push
lods
mov
pop
mov
jmp
xchg
mov
add
loop
hlt
jns
jae
xchg
cmp
into
push
stos
push
out
nop
fimul
adc
popa
jmp
xchg
cwde
sbb
and
outs
leave
fistp
sub
adc
mov
pop
fbstp
mov
ret
shr
dec
retf
rol
daa
outs
push
not
hlt
xchg
rcl
lea
mov
pop
mov
enter
ins
(bad)
sbb
mov
or
test
inc
shl
sbb
loope
pop
movs
enter
js
out
iret
ds
inc
fdiv
sbb
fsubr
fs
in
(bad)
mov
ss
xor
pop
mov
cwde
and
xor
loopne
scas
je
leave
mov
mov
dec
sbb
test
dec
pop
dec
jb
fwait
ja
and
push
dec
pop
shl
xchg
loopne
inc
les
movs
cmc
jp
ret
fdiv
and
mov
sub
mov
test
push
test
and
add
ret
mov
or
and
pop
mov
mov
or
mov
mov
ja
xchg
mov
leave
retf
xchg
inc
sub
xchg
fisubr
pop
jg
sahf
jb
cmps
or
inc
repz
das
cmp
cmp
test
or
cmp
push
adc
adc
(bad)
ds
pop
cmc
pusha
(bad)
ins
js
dec
mov
inc
sub
outs
or
retf
loopne
adc
rcr
and
es
test
pushf
xor
es
sub
pop
mov
popw
out
imul
out
ins
inc
dec
stos
jg
mov
aam
test
mov
and
(bad)
test
cwde
in
outs
test
std
cmp
mov
out
pop
push
mul
sub
lds
jnp
jno
test
ret
jo
dec
scas
std
add
xchg
adc
mov
imul
dec
(bad)
dec
pop
retf
adc
jg
jno
sahf
dec
dec
xor
or
jmp
jg
int
mov
mov
cwde
fs
(bad)
lahf
or
jne
cmp
xor
or
adc
mov
cdq
inc
jl
sbb
pop
pop
pushf
daa
cmp
and
(bad)
xchg
loop
jmp
and
cs
pop
xchg
push
xchg
add
sbb
in
scas
xchg
data16
movs
sti
jecxz
pop
jecxz
inc
cmp
cmp
cmp
fldl2t
cmp
xchg
mov
sub
dec
add
shl
aas
jle
mov
std
push
or
jecxz
inc
add
dec
pop
mov
mov
ja
fucomi
sbb
ror
mov
fdivrp
ds
shr
imul
das
dec
shl
imul
add
and
mov
rcr
mov
out
out
push
adc
mov
sbb
faddp
mov
lods
retf
cmp
js
ror
adc
pop
ret
ins
xchg
jmp
scas
cli
(bad)
pop
mov
sub
jns
jle
or
add
xchg
cmp
sar
jns
cmp
sti
sub
sub
pop
push
jl
and
mov
inc
mov
ret
aaa
or
add
fs
lods
(bad)
loop
mov
mov
icebp
mov
enter
cmps
sbb
in
(bad)
leave
mov
jo
dec
sub
sub
pop
sbb
pop
ja
lahf
das
movs
rcr
add
sbb
pop
jmp
adc
mov
and
push
popa
inc
in
sub
push
push
push
and
sub
xchg
ror
mov
out
jae
bnd
arpl
cmp
test
cmp
push
add
movs
inc
add
in
push
mov
pop
sar
call
xchg
popa
add
(bad)
xchg
jns
inc
test
mov
data16
xchg
add
dec
seta
icebp
sbb
mov
push
repnz
jns
add
imul
mov
jne
aas
sti
or
or
js
mov
jmp
xchg
adc
sti
call
test
and
je
and
in
dec
xchg
loope
jbe
jo
lea
mov
jmp
not
pop
in
scas
mov
test
out
add
(bad)
pop
cli
push
mov
jl
sbb
sbb
push
add
out
mov
sahf
sub
jge
mov
or
mov
pop
jns
test
mov
mov
faddp
loope
aam
mov
mov
xchg
jbe
in
sub
leave
pop
mov
add
and
imul
aaa
adc
cmp
or
cmp
repz
cdq
inc
mov
pop
adc
fnstenv
mov
mov
xchg
fsubr
and
rol
push
rol
fstp
ja
mov
dec
pop
dec
cmp
mov
xor
or
fcomp
rcl
ja
push
dec
mov
int3
popf
test
cmc
or
ret
push
fwait
xchg
imul
dec
push
dec
into
jnp
dec
mov
mov
xchg
in
sbb
jo
aam
push
mov
pop
dec
xchg
dec
xor
mov
inc
(bad)
mov
mov
xchg
test
fwait
test
in
push
cdq
mov
xchg
xor
add
add
jo
push
adc
mov
mul
out
xchg
je
push
pop
push
xchg
xor
fwait
add
arpl
dec
mov
ret
xchg
add
xchg
mov
int
sbb
xor
(bad)
iret
aas
adc
icebp
cmp
in
mov
popa
add
and
xchg
clc
xchg
stos
dec
jo
push
and
in
fs
cs
not
xchg
ja
pop
mov
mov
and
scas
jnp
inc
addr16
jo
int
mov
mov
and
mov
xchg
dec
stc
jmp
ret
adc
inc
add
pushf
pop
loop
dec
shl
leave
pop
out
sahf
mov
add
and
mov
adc
xchg
ror
mov
into
js
mov
push
inc
into
cwde
cld
mov
mov
ror
xchg
int
jbe
add
sahf
pop
outs
fcom
dec
fwait
push
pop
stos
rcl
dec
cmp
mov
sub
sbb
retf
nop
ret
loop
add
sub
stos
cmp
sbb
(bad)
in
in
cmp
into
popa
or
cmp
mov
std
push
lea
and
fadd
fimul
mov
leave
dec
sbb
or
cmp
mov
aas
jo
loope
int3
les
cs
mov
xchg
popf
inc
lods
xchg
dec
pushf
loop
call
les
aas
ds
mov
ins
add
arpl
sbb
ror
shl
pusha
inc
or
fistp
push
jl
das
iret
movs
inc
hlt
movs
inc
scas
in
adc
xlat
in
fwait
adc
inc
add
push
mov
cmp
iret
cmc
movs
or
fs
ror
xchg
adc
dec
mov
jb
or
sbb
mov
mov
inc
dec
add
jo
xchg
(bad)
call
xor
inc
xor
adc
aad
cmp
cmp
pop
ds
fldenv
faddp
sub
push
loope
pop
push
pop
pop
arpl
ins
add
lea
sbb
dec
mov
inc
mov
push
out
in
fnstenv
mov
lods
fwait
sahf
loope
and
into
jmp
mov
inc
xchg
jbe
adc
fwait
out
jl
sub
dec
fmul
mov
push
push
mov
xchg
xchg
mov
repz
aad
mov
ss
dec
adc
nop
jmp
mov
mov
pop
xchg
fimul
xor
fidivr
cmp
ja
out
test
lods
int
shl
psllw
fwait
inc
std
cmc
push
ss
xor
adc
inc
mov
inc
dec
mul
lock
push
push
mov
mov
outs
ror
ins
xor
jecxz
cmp
loop
mov
xor
mov
mov
mov
jno
(bad)
push
movs
inc
sub
push
mov
adc
lods
(bad)
fidivr
dec
adc
mov
add
mov
(bad)
je
mov
cmp
in
fwait
stc
sbb
call
movzx
push
retf
rol
int3
dec
retf
inc
mov
scas
adc
push
push
stos
push
xchg
inc
sub
mov
cmps
cmps
loopne
int3
cwde
push
jb
movs
push
popa
leave
(bad)
shl
stc
shr
push
inc
sahf
add
aaa
repnz
mov
bound
or
shr
push
retf
mov
popf
aam
push
jns
das
aad
shl
fxch
in
aas
sbb
in
movs
les
movs
repz
iret
test
aaa
mov
add
out
dec
push
stc
mov
std
xor
loop
jb
neg
imul
or
or
bound
jecxz
icebp
iret
jns
shl
sub
pop
dec
and
pop
rol
ror
mov
in
xchg
add
das
inc
nop
sub
in
mov
adc
dec
push
inc
mov
popf
ja
lock
pop
ds
inc
xor
push
popf
sbb
mov
neg
pushf
jl
jp
and
mov
mov
and
leave
aas
pushf
dec
adc
mov
push
jno
mov
out
(bad)
daa
cmp
inc
push
jp
nop
arpl
cmp
or
or
cmps
xor
out
xor
jns
push
sbb
ja
dec
pop
mov
pop
iret
push
jns
clc
enter
mov
cmc
xchg
mov
data16
fs
inc
inc
repnz
outs
xor
cmps
icebp
out
cld
(bad)
pop
xor
push
fucomp
add
pop
mov
mov
cdq
or
mov
mul
sub
xchg
xor
adc
cmp
repnz
add
and
xchg
jmp
mov
cmp
cmc
push
jbe
sub
arpl
jb
mov
dec
test
sbb
fs
xchg
imul
lods
lds
pushf
xor
mov
fcmovnu
or
das
sbb
(bad)
or
add
clc
ret
shl
(bad)
call
adc
xor
in
outs
lds
in
add
adc
pop
push
rol
sbb
dec
push
ss
mov
mov
pop
pusha
push
push
out
lahf
jp
(bad)
xor
push
leave
jmp
push
loopne
mov
push
leave
pop
add
inc
push
push
xlat
ret
mov
mov
mov
lea
cli
mov
stos
fisub
mov
xor
cmps
int3
dec
nop
test
imul
aas
stc
dec
xchg
dec
or
cwde
cmp
fwait
int3
xor
sti
retf
sar
int
mov
sbb
ret
mov
xor
add
lods
aas
imul
mov
push
clc
jo
stos
into
aaa
lea
lahf
lahf
jb
mov
(bad)
mov
pop
test
es
or
xlat
ficomp
xlat
jb
add
mov
push
aaa
ss
ret
(bad)
pushf
(bad)
cdq
outs
int3
adc
sbb
std
push
lahf
aad
push
cmp
aaa
jp
fs
pop
pop
xchg
add
adc
cwde
retf
jg
sbb
push
std
inc
mov
clc
loopne
fcmovnu
adc
call
mov
ret
lock
clc
and
push
mov
test
fcom
sub
push
aas
stos
sahf
jmp
pusha
leave
test
out
jle
das
xor
cdq
jb
and
mov
(bad)
push
adc
push
push
mov
add
cmp
mov
add
rcr
push
into
mov
mov
fmul
in
(bad)
add
stc
mov
mov
fs
movs
mov
pushf
mov
sub
xchg
add
ds
mov
pusha
push
sbb
in
out
aad
jnp
in
jo
xor
sbb
cdq
loope
punpcklwd
push
pop
pop
sbb
test
and
fist
int3
loope
mov
lea
loop
or
out
fs
jp
into
mov
out
mul
jmp
clc
xor
sar
iret
and
test
pop
pop
add
cli
pusha
movs
into
push
jnp
lods
les
(bad)
daa
push
inc
mov
and
(bad)
icebp
pop
xchg
ja
out
icebp
mov
xchg
mov
xchg
cmc
outs
lods
(bad)
xchg
repnz
ja
mov
dec
xchg
dec
imul
mov
(bad)
in
mov
push
inc
je
(bad)
push
inc
add
ret
(bad)
cdq
push
ret
int3
mov
push
popf
mov
push
mov
retf
(bad)
ror
outs
cmp
test
(bad)
jmp
xchg
sbb
call
dec
dec
jle
sbb
xor
pushf
imul
test
addr16
xor
push
adc
add
into
jno
fisttp
jb
xchg
mov
sti
inc
out
add
jae
into
xor
out
pop
push
xor
jbe
(bad)
add
daa
imul
stc
or
add
cmp
jmp
call
fdivr
jmp
mov
jo
xchg
add
jecxz
rcl
dec
stc
jecxz
push
jb
mov
in
shl
(bad)
sbb
adc
test
leave
mov
cdq
add
setne
push
pop
jae
sbb
cmp
dec
adc
gs
lock
dec
push
cmc
fwait
add
cwde
mov
inc
sti
daa
push
les
stos
pop
mov
xchg
mov
leave
cdq
leave
jns
jmp
push
mov
inc
aas
dec
scas
fwait
loope
outs
mov
and
adc
mov
push
cmps
fimul
aad
sahf
pop
sub
imul
pushf
mov
dec
pushf
push
sti
bound
ret
in
mov
pop
jp
dec
out
cwde
out
imul
retf
pop
jb
mov
inc
and
cmp
int
push
rcl
shr
imul
add
add
adc
ficomp
movs
into
push
inc
adc
sub
in
pop
or
adc
sub
xchg
pushf
pusha
ret
ds
cs
mov
inc
adc
mov
jno
out
or
add
mov
inc
imul
ja
loopne
adc
into
inc
sub
fimul
out
mov
dec
retw
out
mov
xlat
fistp
out
inc
sti
addr16
out
mov
adc
(bad)
or
repnz
rol
add
adc
xchg
sub
movs
xor
js
sbb
(bad)
pop
adc
push
dec
adc
or
xor
inc
adc
or
out
enter
pushf
outs
sbb
clc
mov
ds
dec
cmps
jl
mov
test
sub
sbb
call
leave
imul
leave
rcr
stos
loope
mov
dec
pop
push
stos
mov
test
xor
cmp
jo
je
push
xchg
mov
inc
jae
and
popf
and
iret
pop
push
ja
neg
das
movhlps
xor
xchg
and
pop
fwait
xchg
pop
inc
out
add
in
leave
sbb
jmp
scas
jb
and
push
or
lea
ins
mov
sub
mov
stc
rol
stos
cmp
enter
(bad)
outs
inc
ins
push
fs
stos
xchg
mov
sub
in
xor
rcl
pop
cwde
icebp
mov
xchg
(bad)
(bad)
nop
adc
push
xchg
sub
add
xor
sahf
daa
mov
inc
sbb
adc
inc
les
mov
xor
xor
mov
inc
arpl
adc
jbe
add
adc
out
mov
and
in
pop
add
jnp
mov
add
mov
cmp
enter
ret
add
test
sub
js
dec
jnp
sbb
call
into
lahf
xchg
xchg
jmp
movs
mov
pop
lds
pop
dec
xchg
stos
sbb
xchg
int
clc
jbe
adc
js
outs
or
add
(bad)
scas
cmps
adc
add
cwde
int
cdq
pusha
mov
inc
cmp
ja
dec
cmp
jle
push
inc
std
dec
pusha
std
out
sub
ja
mov
mov
mov
int
loope
fwait
or
sti
addr16
stos
push
xchg
xor
cmp
aas
dec
test
dec
js
cmp
mov
jno
jne
inc
pop
mov
adc
xchg
ins
ror
data16
jnp
fstp
xchg
cli
jnp
add
int
stos
xor
dec
out
add
cmc
movs
div
xor
mov
popa
in
pop
cmp
cmps
pop
shr
mov
(bad)
jb
ds
xor
inc
je
jae
outs
pop
sbb
push
mov
add
jp
test
int3
sar
jnp
div
dec
sub
stos
(bad)
mov
xlat
cmps
jge
loopne
sub
in
ds
stos
lahf
push
rcl
sub
inc
das
test
in
dec
inc
pushf
retf
aad
bound
push
add
adc
push
std
cmc
pop
xor
jb
leave
cld
repz
pop
mov
mov
ror
push
dec
stc
nop
xchg
jb
int
retf
or
(bad)
ja
enter
aaa
add
scas
sub
push
pop
jp
sti
mov
les
leave
loop
xor
xor
mov
lock
test
mov
xchg
sub
loopne
mov
and
jl
sahf
or
sbb
lods
jmp
mov
mov
movs
jne
push
sbb
lea
jl
push
pop
cmp
jle
adc
mov
(bad)
inc
loopne
jmp
fist
in
test
mov
repz
cmp
nop
div
(bad)
adc
(bad)
push
out
js
push
or
fucomip
les
aaa
xchg
fs
cwde
addr16
fsub
icebp
mov
popf
cdq
movs
mov
and
jp
sbb
mov
lds
and
je
mov
mov
je
inc
xchg
mov
xchg
push
ret
sub
adc
pusha
cmc
jg
lods
sub
iret
lahf
or
in
or
pop
stc
push
sbb
lahf
mov
pop
ins
and
movs
fstp
out
icebp
or
fst
dec
xchg
pop
push
nop
push
(bad)
aaa
dec
mov
or
loopne
std
push
mov
adc
adc
call
aad
push
cmp
or
jge
movs
adc
mov
sub
jecxz
out
mov
xchg
inc
dec
in
sub
pushf
aad
call
fsubrp
lock
(bad)
loop
ja
adc
push
jg
adc
rol
fs
push
mov
push
mov
repnz
xor
or
and
dec
push
pop
pop
mov
sub
or
(bad)
and
adc
fsubr
jmp
dec
and
mov
inc
jge
das
push
mov
mov
mov
ja
mov
popa
ja
sti
jno
xchg
in
arpl
mov
prefetch
repz
add
fwait
dec
add
and
mov
sbb
jp
dec
xor
mov
cwde
iret
cmps
dec
dec
add
cmp
inc
inc
push
jb
add
retf
mov
scas
xor
lahf
mov
jno
repz
clc
pop
mov
push
imul
(bad)
push
ins
cmp
fidivr
and
mov
cmp
sbb
and
mov
dec
mov
sar
pop
dec
and
jo
or
icebp
adc
xlat
outs
and
pop
adc
xchg
push
pusha
cmc
mov
fmul
mov
add
sub
sub
aam
test
cli
mov
inc
je
cmp
push
dec
xor
cld
fadd
dec
xor
js
and
cmps
cmp
mov
jno
lods
jle
int3
das
test
call
aam
adc
loopne
sub
bound
test
lods
cmc
sbb
(bad)
popf
adc
sub
pop
push
jo
loopne
gs
(bad)
dec
clc
sbb
mov
fadd
dec
and
or
loopne
fidivr
hlt
call
ja
pop
sub
jne
or
sub
sbb
or
or
test
cmovge
cmp
dec
movs
mov
jge
pop
push
ja
xor
sar
pushf
push
xlat
cmc
inc
mov
cld
push
popa
nop
cli
or
jle
test
xor
movs
mov
dec
push
mov
enter
inc
add
ins
ins
ret
lods
dec
inc
(bad)
in
xor
(bad)
xor
push
jo
mov
jg
adc
into
mov
call
dec
sub
pop
jl
hlt
pop
xor
jno
rcl
sub
imul
std
aad
stc
dec
push
es
add
pop
push
jg
xchg
fwait
lods
push
pop
in
xlat
out
push
jle
push
jae
fst
stc
in
out
aaa
std
or
out
sbb
xlat
xchg
call
adc
call
xor
xchg
jecxz
add
(bad)
cli
ss
push
neg
xor
mov
mov
iret
inc
xor
out
pop
sbb
or
ror
dec
call
mov
loopne
test
lea
add
repz
fmul
out
int3
adc
das
add
lods
or
fiadd
or
adc
cs
movs
dec
mov
test
jmp
popf
jne
jge
lea
adc
rcl
mov
sub
in
test
cmc
scas
xchg
ds
push
sbb
neg
pop
xchg
dec
scas
dec
loop
in
sbb
pusha
adc
adc
push
xor
imul
retf
loopne
aaa
dec
inc
cmc
xchg
xchg
inc
sub
jle
add
or
mov
mov
out
jg
shr
sbb
xchg
mov
mov
jmp
ins
xchg
xchg
lock
int3
(bad)
hlt
mov
sbb
sbb
jnp
mov
push
pop
or
stos
or
mov
adc
pushf
repnz
or
cmp
or
cmc
mov
lahf
and
mov
lods
xchg
jp
sahf
jmp
data16
push
xchg
or
iret
jl
and
fisub
cmp
mov
mov
push
mov
and
dec
outs
test
out
int
inc
inc
jns
test
scas
sub
push
fdivrp
or
xor
cmp
mov
sub
dec
div
mov
das
addr16
movs
je
xlat
rcl
and
sahf
int
xchg
(bad)
je
scas
fs
inc
jbe
mov
pop
std
(bad)
add
fsubr
xchg
pop
mov
xlat
cmp
xor
sbb
dec
pmullw
xchg
cmp
cmp
pushf
js
ins
aas
pop
outs
int
arpl
mov
jle
call
mov
mov
aad
lds
inc
pop
stos
xlat
xor
leave
sbb
retf
xchg
dec
cli
sub
push
or
out
add
mov
stc
xchg
and
mov
into
inc
rcr
or
hlt
nop
stos
add
adc
xor
or
(bad)
sub
(bad)
push
xor
scas
not
pop
ins
mov
fst
pop
xchg
fbld
fiadd
inc
or
aaa
jo
dec
stos
xchg
jns
sbb
jo
stos
dec
dec
pushf
rcl
hlt
mov
push
add
jo
in
ds
and
push
cmp
rol
sbb
jecxz
mov
cwde
(bad)
xchg
pop
int3
ja
pop
out
int3
addr16
xor
imul
out
div
jle
fadd
ror
jge
fwait
push
pop
retf
or
lods
dec
pop
pop
pushf
xlat
(bad)
sti
pop
aam
call
fidivr
jle
into
int3
dec
mov
test
xchg
push
xchg
les
clc
xchg
gs
xchg
(bad)
fidiv
jmp
mov
into
jecxz
shr
mov
daa
adc
test
push
les
repz
push
mov
mov
data16
adc
stc
nop
xor
rcr
inc
(bad)
fwait
imul
mov
dec
jo
cdq
dec
fcom
cmp
jge
popf
adc
mov
popf
or
jg
into
adc
push
push
fimul
arpl
loop
jle
aas
dec
push
or
pop
jle
xchg
outs
dec
sti
mov
stc
popa
jl
xchg
mov
sub
add
push
mov
imul
cli
xchg
jbe
and
sti
cmc
aad
pop
popf
dec
out
ret
dec
cld
fcomp
jbe
adc
test
push
mov
xchg
cmp
jmp
mov
cld
jle
outs
jl
cmp
add
jmp
xor
push
dec
push
addr16
or
int
mov
jmp
fbld
sti
aas
pop
call
xor
adc
je
push
sbb
mov
aad
adc
test
dec
mov
jae
int3
sbb
sbb
std
nop
mov
sbb
jg
push
adc
push
ficomp
popf
cmps
inc
je
ss
pushf
pop
imul
(bad)
jne
mov
sbb
dec
test
or
cld
sbb
xchg
inc
inc
pop
pop
adc
push
sbb
mov
repnz
jbe
jg
add
dec
jecxz
add
xor
inc
mov
dec
inc
and
mov
mov
ret
(bad)
cmp
jmp
xchg
inc
sbb
pop
imul
push
push
fs
fcomp
mov
in
hlt
mov
repz
loope
int3
mov
push
lahf
push
shr
outs
out
or
sbb
or
add
sub
test
rcr
ja
in
sahf
inc
dec
push
repz
dec
adc
pop
cli
pop
jecxz
push
xor
inc
add
loopne
dec
hlt
in
test
jge
(bad)
repz
cwde
inc
data16
jg
push
or
add
retf
push
adc
and
push
jge
add
ds
jno
jmp
adc
aas
jp
sahf
xchg
adc
xchg
movs
lahf
add
pushf
cmp
test
addr16
inc
(bad)
jmp
cmc
stos
cmp
xchg
push
out
sub
adc
neg
je
inc
int
cmp
aad
vmread
mov
not
(bad)
gs
xchg
mov
sbb
pop
xor
mov
sub
retf
leave
std
pop
lods
fld
cmc
shl
sbb
call
pop
xor
xchg
outs
cmp
add
popf
cmc
lods
stc
lahf
dec
add
cmp
inc
dec
jecxz
push
leave
lock
jae
pop
mov
adc
clc
lea
mov
in
jle
jnp
add
inc
or
(bad)
pop
push
outs
push
movs
sub
popf
cmovs
out
jp
adc
cmc
xchg
retf
inc
mov
retf
mov
sbb
cmc
jo
and
inc
inc
mov
add
or
mov
cmc
mov
scas
sub
or
leave
fst
xor
jns
jl
pop
mov
(bad)
es
inc
push
out
cld
or
add
fwait
mov
and
sbb
ja
aaa
or
retf
push
call
mov
cmc
and
outs
out
add
dec
xor
nop
inc
jge
push
jae
sbb
ins
dec
add
and
vshufps
aaa
mov
je
mov
data16
dec
fild
icebp
add
movs
jmp
test
jnp
cwde
jne
xor
pop
dec
mul
jl
fisub
mov
adc
retf
xor
add
mov
ret
aas
inc
fucomip
fcmovnbe
ret
cmp
pushf
sbb
pop
push
(bad)
shr
jl
test
jae
test
inc
scas
inc
or
call
loope
ret
jge
in
mov
jne
inc
(bad)
daa
lods
ret
imul
lahf
div
popf
jno
in
hlt
dec
mov
pop
jo
push
sub
popa
cwde
add
aam
dec
jne
outs
pop
cld
xor
dec
sub
jns
lea
jg
mov
mul
jbe
jmp
mov
jmp
sub
ss
mov
int3
push
outs
int
mov
fs
hlt
nop
adc
lahf
in
and
adc
dec
fwait
hlt
jle
mov
jecxz
adc
std
retf
je
cli
inc
and
lock
ja
inc
rcr
mov
dec
mov
lock
lock
cmp
jbe
(bad)
mov
sub
pop
dec
pop
and
outs
dec
or
xor
push
push
loop
out
ja
jb
std
jecxz
sbb
ins
inc
fidivr
std
es
pop
scas
dec
int
ds
leave
dec
mov
jmp
cmp
(bad)
mov
xchg
cdq
and
pop
jecxz
std
loope
in
push
dec
clc
xchg
push
nop
xchg
outs
fcomp
aad
icebp
dec
mov
aaa
or
stc
out
adc
lods
jns
and
or
sar
js
paddsw
or
neg
cmps
fdiv
push
hlt
sbb
sti
push
push
pop
std
fcomp
adc
ja
in
sbb
movs
and
pop
xchg
jmp
jnp
ja
daa
mov
xor
dec
mov
push
icebp
xor
mov
jg
ss
imul
enter
call
adc
push
add
ret
pop
(bad)
scas
xor
lds
cmc
adc
xlat
lds
aaa
lods
shl
adc
sub
js
add
mov
outs
pop
push
(bad)
cmp
or
js
scas
mov
and
fstp
lods
add
xchg
or
cwde
dec
dec
loopne
cmp
leave
mov
sbb
mov
pusha
test
(bad)
dec
into
imul
scas
ja
out
enter
jb
ret
pop
ficom
pop
sub
or
mov
scas
loopne
pop
inc
dec
xor
mov
es
xchg
retf
addr16
mov
jl
cmc
dec
fs
les
out
mov
jg
not
popf
jns
jecxz
daa
inc
mov
(bad)
(bad)
adc
gs
setle
xchg
arpl
xchg
ins
xor
sub
jmp
cmp
(bad)
jo
cmp
mov
clc
push
outs
je
je
sti
ja
dec
test
mov
cmp
cwde
inc
es
adc
jmp
mov
sub
stc
push
xchg
xor
dec
cmp
jp
pop
lea
ss
lea
jg
in
clc
les
retf
xor
inc
push
xor
mov
sbb
cmps
mov
push
outs
push
(bad)
bound
int3
les
mov
or
neg
leave
xor
push
mov
adc
in
popf
xor
and
pop
xor
adc
mov
mov
pop
mov
retf
fistp
in
mov
rcl
and
les
shl
mov
jp
mov
sub
std
adc
std
cmps
stc
(bad)
aam
loopne
mov
mov
in
scas
push
fnstenv
or
aad
enter
dec
jp
jmp
xchg
jmp
je
mov
dec
dec
xchg
xlat
dec
jl
lock
pop
sub
and
dec
(bad)
nop
sti
mov
loop
stos
pop
or
mov
push
mov
xchg
cmp
adc
clc
outs
jmp
aas
pushf
dec
pop
lahf
jne
inc
test
pop
cli
(bad)
jmp
lock
xchg
push
adc
std
push
xchg
into
test
dec
xchg
mov
pop
into
jmp
pop
xor
xchg
pop
lock
lahf
jne
shl
mov
cmps
js
mov
xchg
repz
loope
jbe
cmp
lea
or
test
xchg
xchg
test
popf
in
add
push
inc
stc
scas
retf
shl
ror
sar
dec
push
xlat
aad
mov
hlt
pop
push
fwait
jnp
ret
mov
out
inc
nop
arpl
ds
xor
mov
scas
or
push
sub
fs
mov
add
push
jb
xchg
adc
adc
xchg
test
xchg
inc
pop
dec
add
cmp
repz
clc
adc
xor
fcmovb
out
push
popa
hlt
or
js
or
imul
inc
pop
fadd
es
pop
inc
add
leave
outs
sahf
out
stos
aaa
je
mov
rep
cmc
fisttp
(bad)
add
hlt
ror
dec
pop
dec
mov
fwait
iret
aam
push
and
jnp
frstor
repz
int
mov
pop
rcr
mov
jmp
mov
sar
push
sbb
unpckhps
sbb
int3
mov
xchg
lock
pop
sbb
jmp
lea
dec
pop
sti
sub
mov
mov
jbe
or
jbe
pop
mov
dec
cmp
ja
push
icebp
scas
dec
xchg
add
push
inc
and
into
mov
inc
jmp
xchg
adc
imul
shl
div
inc
jg
cld
jo
push
aas
ret
popf
(bad)
ficom
call
adc
scas
adc
push
nop
jnp
xor
test
(bad)
stos
outs
mov
adc
pop
in
push
push
fcom
(bad)
leave
ret
call
xor
test
out
popa
je
out
addr16
mov
xlat
outs
adc
xor
mov
mov
mov
outs
pop
xchg
neg
iret
cdq
adc
fld
imul
jnp
xor
aaa
dec
jmp
ins
adc
sbb
jecxz
mov
jmp
repz
push
inc
xchg
test
add
pop
(bad)
outs
sti
push
je
(bad)
cwde
pop
or
mov
or
adc
pop
sbb
sub
pop
pop
cmp
stos
scas
enter
out
jbe
push
jns
ins
stos
xchg
add
dec
sti
add
dec
sar
sub
outs
mov
test
or
xor
mov
add
ss
mov
lea
pause
cmp
data16
push
in
rcr
xor
jg
xchg
scas
inc
xchg
retf
ret
js
sub
and
loopne
call
mov
add
loope
test
jle
shl
mov
mov
mov
xor
rcr
push
dec
movs
out
push
jp
not
in
sbb
jb
popa
lds
ret
dec
add
jns
add
dec
pop
mov
fnstcw
das
retf
add
popa
jg
fwait
imul
cmp
(bad)
stos
dec
cmc
int
xor
(bad)
movs
ins
add
lds
xor
(bad)
(bad)
pop
cmc
outs
sbb
fst
or
sar
adc
xor
push
test
pop
mov
dec
inc
cmps
mov
xchg
adc
adc
push
inc
jb
movs
or
adc
adc
cmps
fst
xchg
add
xchg
in
xor
rcl
cmp
int
jnp
cdq
pop
mov
arpl
stos
xor
(bad)
dec
cmps
dec
pop
push
addr16
cmp
jns
mov
scas
jg
push
add
mov
pushf
sahf
push
mov
mov
or
jns
(bad)
cmc
and
push
(bad)
adc
(bad)
movs
pop
inc
pop
gs
out
mov
mov
ins
aas
popf
mov
in
int3
push
scas
adc
dec
std
adc
lea
sub
mov
(bad)
jnp
inc
and
popf
sbb
jae
in
jl
mov
jo
mov
mov
mov
mov
cmc
mov
add
push
aad
hlt
push
aas
push
scas
ret
enter
sahf
or
jne
aad
imul
lods
push
outs
pslld
pop
mov
xchg
dec
mov
mov
ret
pop
stos
into
mov
call
dec
push
std
std
dec
dec
dec
push
fwait
adc
cdq
(bad)
dec
mov
lock
mov
cmp
int3
stc
ins
popf
dec
iret
or
aaa
cmp
xchg
(bad)
dec
nop
out
in
push
xchg
and
add
mov
icebp
xchg
sbb
push
test
pop
test
xchg
jmp
push
sub
sbb
or
dec
pusha
jp
and
scas
dec
movq
jmp
or
add
mov
rcr
xor
cmp
xchg
hlt
popa
or
push
xchg
dec
jns
sub
inc
sub
mov
jl
pop
jle
sub
pushf
pop
in
sbb
out
out
pop
shr
loop
mov
call
mov
fidiv
adc
mov
dec
dec
imul
fwait
pop
pushf
sub
addr16
xchg
stc
mov
push
adc
aaa
in
xor
inc
test
or
jns
pop
shl
xchg
adc
nop
mov
cmps
das
(bad)
icebp
dec
fs
dec
mov
mov
pop
(bad)
mov
xor
stos
cdq
setb
leave
jg
xor
test
push
xchg
cmp
or
sar
mov
lods
fldln2
lods
mov
outs
xchg
test
inc
int
push
retf
mov
sub
outs
mov
add
mov
bound
ficomp
mov
sub
adc
pop
jno
xchg
cwde
xchg
std
ficomp
jge
mov
imul
xchg
xor
xchg
cmp
arpl
std
cmc
enter
mov
outs
out
sbb
inc
das
jae
shl
push
popf
mov
dec
or
(bad)
lahf
pop
cmp
mov
lods
(bad)
in
jmp
or
and
mov
jo
xchg
push
sahf
mov
rcr
(bad)
mov
mov
fisubr
pop
test
jnp
xchg
add
dec
fs
xor
imul
ret
cmp
sbb
outs
outs
adc
aad
js
adc
dec
mov
cli
xchg
je
mov
fldenv
rcl
fstp
sbb
mov
push
adc
sahf
adc
fadd
dec
lds
faddp
pop
push
pop
pop
push
pop
mov
push
int3
cmp
int
mov
cmp
push
sbb
rol
retf
into
shl
retf
dec
(bad)
repz
jno
ja
add
in
jne
xlat
enter
aaa
icebp
movs
sti
dec
mov
dec
call
test
mov
pop
adc
rol
loop
mov
(bad)
test
cmp
mov
aam
int
jno
popa
jno
adc
out
int3
dec
xchg
add
out
xchg
adc
add
test
stos
in
mov
pop
xlat
rcr
or
cmp
pop
add
sbb
(bad)
adc
adc
mov
cld
outs
(bad)
into
ret
xor
cwde
xchg
pusha
test
and
lock
mov
xchg
or
or
sbb
or
ret
xchg
push
inc
inc
cmp
test
jnp
jne
imul
mov
add
jecxz
xlat
mov
jns
dec
jp
xor
dec
mov
clc
jg
push
inc
cmp
je
dec
test
push
cli
nop
inc
dec
lds
js
fs
mov
dec
or
lds
lods
mov
stc
loop
out
sbb
scas
add
or
mov
jle
jo
mov
add
leave
nop
(bad)
fisub
test
les
mov
int3
mov
popa
in
enter
in
push
test
sub
test
mov
cmps
inc
pop
adc
add
jo
int3
(bad)
add
pusha
pop
add
mov
ins
(bad)
gs
mov
ret
idiv
mov
or
xchg
jmp
adc
test
pop
mov
and
lds
push
push
(bad)
bound
mov
sti
jae
aam
(bad)
push
js
in
ret
push
jmp
jmp
fstp
sbb
aas
or
cmc
inc
mov
dec
fwait
int
or
push
mov
(bad)
daa
jno
ins
test
sbb
cmp
aas
mov
ret
add
scas
sub
sbb
repz
cmp
call
loope
fnstenv
pop
push
nop
adc
adc
jae
inc
cld
test
xchg
pop
adc
push
(bad)
(bad)
mov
(bad)
mov
or
in
cmp
lods
inc
cmp
sbb
sbb
std
sbb
jbe
pop
fst
loope
mov
movs
cdq
shl
in
movs
cmp
lods
gs
ja
dec
push
push
into
(bad)
ret
repz
pop
sbb
xor
inc
cmp
aas
mov
push
and
ror
loope
aad
int
push
(bad)
fcom
ret
retf
movs
repz
mov
movs
and
loope
fbld
in
sub
shr
pop
inc
adc
mov
ins
in
aam
aam
sbb
sub
sub
fs
in
push
sbb
inc
and
sbb
cmps
sti
cld
jmp
jbe
icebp
sub
pop
pop
xchg
xchg
stc
icebp
retf
inc
sbb
clc
sbb
sbb
out
mov
clc
fist
dec
dec
mov
retf
in
into
outs
inc
outs
in
sbb
cwde
mov
sub
sub
sub
push
in
adc
ja
pop
push
sar
repz
retf
int3
int
loope
enter
mov
sub
into
dec
and
daa
pop
scas
jge
and
shl
adc
test
mov
xor
xor
sub
cmp
repz
add
push
ud0
aad
aam
jb
jo
dec
jg
test
fs
imul
movs
pop
sbb
and
enter
pop
mov
mov
test
test
pushf
xchg
lods
retf
test
mov
lock
lds
shl
lock
gs
das
retf
add
jmp
push
cli
test
xlat
mov
mov
int
cwde
(bad)
mov
test
movs
mov
mov
or
mov
inc
popa
aaa
xchg
mov
sub
mov
pop
dec
pop
or
and
mov
(bad)
std
enter
aam
dec
fcompp
or
fst
cwde
je
retf
mov
int3
mov
jmp
int3
enter
jne
fldcw
(bad)
mov
addr16
dec
lods
sub
gs
inc
push
fdiv
mov
in
xchg
fstp
add
mul
aaa
lods
shl
jno
cmps
fs
and
(bad)
int
shl
(bad)
sub
mov
popf
test
int3
mov
pop
xor
das
popf
test
sbb
in
sar
popf
iret
or
push
ins
fst
mov
mov
jge
dec
(bad)
xor
jle
or
rcl
add
or
inc
jne
imul
push
mov
xchg
xor
mov
call
movs
fisttp
push
jno
push
out
enter
int3
retf
sahf
inc
(bad)
jb
(bad)
call
mov
add
aas
xchg
(bad)
mov
lock
cmps
fs
jle
rcr
fs
scas
mov
push
mov
(bad)
dec
mov
rol
dec
stos
mov
inc
push
add
mov
push
outs
xchg
cli
or
jne
cmp
repz
add
repz
inc
fmul
push
mov
xchg
cmp
add
(bad)
pushf
jae
jge
idiv
test
test
mov
push
arpl
jmp
inc
jecxz
cmp
cld
addr16
fadd
outs
mov
and
popf
scas
xchg
pop
push
pop
mov
cmps
fsubr
lds
repz
cs
(bad)
jecxz
mov
add
fwait
test
popf
mov
adc
dec
pop
fxtract
jmp
mov
retfw
int
mov
push
push
pop
ror
sahf
add
clc
inc
jmp
dec
cmp
jae
cwde
inc
inc
mov
adc
imul
enter
lds
mov
in
mov
cmps
cmp
cmc
or
pop
mov
ja
(bad)
add
jo
or
ja
cmp
ror
lock
(bad)
dec
int3
pusha
bound
lea
movs
outs
mov
in
movs
addr16
or
outs
cmp
mov
ret
push
shr
not
mov
dec
scas
mov
dec
pusha
ja
lods
jmp
pop
movs
mov
xchg
xchg
iret
xor
(bad)
or
fcomi
adc
shl
cs
fwait
mov
movs
jecxz
inc
push
inc
enter
mov
mov
add
mov
(bad)
pop
inc
icebp
loop
sub
inc
mov
mov
inc
sbb
jns
jo
retf
xchg
sbb
(bad)
pop
out
idiv
cmp
push
sbb
mov
cmp
xchg
and
lock
loop
jnp
cmp
ret
push
popa
push
mov
cmps
scas
push
outs
mov
loopne
xchg
repz
lahf
jno
cmp
fadd
loope
fdivr
cwde
or
pop
add
jg
mov
push
push
xchg
test
xor
push
gs
fst
push
pop
fs
lods
or
lahf
call
stos
pop
cld
or
sti
xor
into
xor
cld
mov
sub
(bad)
or
pop
imul
(bad)
bnd
out
fisttp
dec
repz
test
loop
mov
outs
sub
in
repnz
cmp
lock
cmp
pop
jmp
mov
push
sub
mov
xchg
cmp
mov
sub
cmp
pop
movs
mov
pop
fwait
add
scas
retf
adc
cmp
push
repz
jne
mov
inc
push
push
xlat
cmps
and
inc
inc
xchg
mov
mov
mov
out
cmp
adc
ins
sbb
lods
fcomi
aad
mov
cmp
rcr
add
pop
adc
xor
sbb
rol
push
fdiv
icebp
push
mov
je
mov
movs
inc
cmp
mov
and
out
mov
jne
pop
popa
adc
cwde
test
cmp
retf
fbstp
inc
pusha
inc
cmp
sahf
mov
pop
es
out
dec
sbb
out
add
and
push
pop
mov
fwait
test
fcomp
mov
pop
sbb
cdq
pop
dec
out
cmp
mov
dec
ror
out
xchg
addr16
or
clc
lea
xchg
push
fcomp
div
add
sbb
arpl
aad
pop
lahf
cmp
and
ds
xchg
and
mov
cld
pop
mov
les
lds
jns
add
ds
sbb
xlat
retf
push
in
fcmovbe
xor
pop
test
test
inc
jnp
xchg
into
adc
stos
add
enter
sbb
pop
lahf
outs
or
call
in
call
stos
pop
shl
xchg
sahf
in
mov
or
and
dec
jno
movs
xchg
xchg
dec
xchg
push
loopne
push
arpl
mov
retf
fwait
or
cmp
xor
xchg
pop
pop
(bad)
mov
push
push
movs
in
inc
adc
cmp
jmp
cmps
aaa
daa
test
imul
mov
mov
ftst
mov
push
inc
out
sbb
mov
dec
pusha
cmc
add
inc
out
outs
imul
sbb
xlat
test
mov
mov
fbld
outs
loop
arpl
push
sahf
or
pop
xchg
jge
cmp
adc
xor
pop
ud0
xchg
mov
fwait
ins
mov
popf
repz
mov
cmp
mov
iret
xlat
pop
mov
(bad)
push
pusha
pop
ins
inc
jecxz
jmp
mov
sti
and
(bad)
test
ja
xor
clc
lods
retf
dec
mov
fs
call
sbb
lods
cmp
lds
test
pop
sub
xchg
hlt
loope
ins
iret
add
cmp
adc
call
inc
out
mov
mov
daa
xor
cwde
shr
dec
sub
mov
sub
mov
jecxz
pop
mov
dec
sbb
xchg
mov
test
mov
add
sub
(bad)
data16
cdq
ins
push
xchg
xchg
mov
mov
neg
lods
es
jo
dec
inc
xchg
mov
into
popa
rcr
dec
pop
mov
or
call
popa
jle
aaa
or
push
aad
test
jmp
test
jbe
ds
sbb
daa
push
and
cdq
push
mov
aas
sub
lods
popa
int3
test
inc
mov
std
loope
fs
add
inc
mov
inc
push
dec
mov
bound
add
inc
push
and
or
loop
test
adc
rcl
(bad)
in
call
xchg
pop
mov
pop
shl
nop
xchg
xchg
pop
fs
cs
dec
lods
out
fistp
or
sbb
fdiv
mov
jo
leave
or
adc
jae
bound
mov
sbb
arpl
jns
enter
sub
(bad)
leave
outs
loop
pushf
pusha
scas
cwde
or
cmp
push
xlat
add
sbb
(bad)
adc
test
jmp
and
sar
dec
dec
fisttp
dec
cmp
adc
ret
push
jae
or
mov
dec
or
addr16
cmps
into
lods
ds
push
retf
pusha
inc
cmp
jg
fnstcw
leave
retf
xchg
adc
ror
lds
lahf
stc
retf
out
mov
in
stc
dec
rcr
jb
cld
xor
mov
mov
popa
test
ret
sar
sub
inc
int3
or
pushf
nop
call
xor
inc
sar
cmps
push
fistp
int3
jge
fnstsw
mov
mov
call
cmc
and
mov
push
add
call
sbb
idiv
jecxz
enter
leave
mov
lea
sub
pusha
loopne
sub
sbb
into
jno
push
sbb
add
sahf
xchg
movs
pop
les
aas
cmp
mov
icebp
sbb
in
and
xchg
cmp
shr
sub
out
in
or
scas
lods
add
pusha
and
sahf
ds
cmp
mov
ret
ds
cli
xchg
retf
push
mov
into
jecxz
int
dec
stos
dec
ret
jecxz
repz
in
ret
imul
loop
ret
call
mov
arpl
pop
sbb
cli
pop
or
pop
neg
jge
mov
retf
push
cs
or
add
retf
aad
push
in
cmps
fild
cs
retf
mov
inc
push
sub
fs
loop
mov
mov
inc
push
jg
push
gs
mov
jae
out
jecxz
sub
mov
cmc
out
gs
push
inc
or
call
les
lds
add
inc
cmps
aas
mov
sbb
xchg
cs
icebp
ror
jns
xchg
in
and
lods
in
add
out
shr
nop
fnstsw
pop
inc
fstp
xor
dec
cli
xchg
pop
jge
ficomp
dec
fidiv
jns
movs
retf
aam
mov
popf
adc
scas
fdivr
fst
cmp
fcom
fisttp
icebp
and
mov
mov
fild
cmp
pop
add
cld
fidiv
retf
xchg
cmc
(bad)
lahf
push
retf
(bad)
in
push
or
cmc
pop
xchg
(bad)
xor
outs
inc
push
add
jg
cdq
pop
test
fsub
cmps
(bad)
enter
pop
add
fnstcw
loop
sbb
sub
mov
mov
leave
das
lahf
jno
jle
pop
repnz
jno
gs
sub
fcomp
push
dec
lods
sbb
iret
icebp
sub
popa
pop
push
addr16
jo
(bad)
(bad)
fcmovbe
js
or
fistp
cvttps2pi
jg
push
(bad)
cld
fwait
test
xor
xchg
dec
jecxz
cmp
gs
inc
lods
retf
push
add
pop
sbb
gs
test
loop
leave
into
jmp
push
inc
and
ins
jecxz
bound
leave
fdivr
mov
in
fcom
stc
push
test
cs
xor
loopne
jge
xchg
mov
jle
cmc
jbe
fisubr
or
and
movs
fs
loope
mov
mov
(bad)
sbb
jmp
mov
into
(bad)
sbb
cs
pop
inc
cmps
shr
movs
adc
sub
mov
jecxz
aaa
pop
in
add
aad
inc
sub
dec
ret
dec
mov
mov
cmp
inc
shl
cli
and
sbb
out
popf
and
lock
push
hlt
mov
sbb
dec
or
and
(bad)
icebp
or
loop
cmp
int
fdivr
adc
(bad)
mov
inc
add
pushf
mov
test
jle
popa
(bad)
shr
push
mov
dec
shl
mov
and
aam
outs
mov
popf
and
pusha
mov
or
scas
mov
adc
ret
mov
pop
adc
fcomp
int3
(bad)
scas
cpuid
xchg
ret
cmp
pop
mov
sti
clc
cmps
jge
xchg
cmps
fcom
dec
dec
inc
hlt
push
in
jecxz
(bad)
cld
jl
cmc
lods
ret
inc
ds
push
fistp
add
scas
sub
(bad)
call
scas
jg
in
xor
and
int3
xor
cmp
xor
add
ins
add
cmps
into
enter
loope
pop
retf
xor
das
fsin
xchg
push
mov
mov
mov
dec
pop
out
push
stos
sub
or
xchg
ja
inc
scas
shr
les
push
push
dec
jmp
repnz
dec
cmp
jl
ret
leave
jp
(bad)
scas
(bad)
jno
in
inc
lods
dec
pop
jno
out
aas
cmps
(bad)
fbstp
push
adc
std
aad
clc
pop
cmps
mov
mov
fs
popf
mov
add
bound
or
add
mov
jp
sub
jb
aam
hlt
and
es
mov
and
ins
lods
or
daa
fmulp
inc
aad
(bad)
arpl
cmc
bnd
sub
inc
mov
aad
(bad)
outs
hlt
sbb
clc
xchg
pusha
or
inc
popf
mov
xchg
test
sbb
outs
sbb
fldcw
daa
ds
ins
mov
add
ficom
sub
pushf
imul
ins
(bad)
mov
adc
rcl
imul
pop
and
add
cwde
jmp
call
push
dec
jnp
ficom
shl
pop
int3
rcl
jg
stc
les
add
ror
dec
pop
lahf
and
xor
retf
cmp
fwait
gs
fnsave
fld
inc
aad
mov
cmp
int
adc
aad
add
inc
jl
push
addr16
loop
iret
sahf
arpl
pop
cwde
sbb
(bad)
fucom
out
(bad)
cmc
lock
jmp
jno
rcr
push
jl
jbe
gs
or
mov
mov
ffree
lds
in
out
push
add
xchg
and
or
jmp
inc
fldenv
int3
icebp
(bad)
(bad)
pop
pop
inc
lods
(bad)
out
pop
xor
dec
arpl
cdq
xchg
dec
in
sub
push
jmp
add
scas
test
xchg
lods
cwde
call
inc
movs
leave
loop
pop
mov
mov
int3
fst
inc
mov
sub
cld
int3
fsubr
sti
enter
bswap
add
mov
(bad)
popf
je
dec
sub
push
retf
sbb
pop
fidiv
and
mov
pushf
ret
popf
xor
neg
adc
pop
mov
dec
push
mov
ins
sub
add
lds
sub
xor
sbb
cmp
dec
pushf
sbb
push
sub
jmp
inc
inc
pusha
ss
and
pop
push
sbb
push
cli
in
stos
(bad)
push
repz
daa
push
fdivr
mov
daa
push
data16
gs
(bad)
(bad)
jg
mov
cmp
retf
popa
aad
jne
add
mov
mov
data16
sbb
mov
clc
sub
mov
call
ins
sar
pop
adc
inc
push
xchg
dec
pop
mov
jae
xor
mov
sahf
pop
mul
into
pop
inc
push
lods
rcl
and
and
ja
(bad)
fisub
in
iret
or
imul
and
es
sahf
hlt
and
jmp
jg
repnz
or
std
outs
ins
std
js
push
mov
lahf
aam
rcr
cwde
cld
test
iret
cmp
jle
adc
xchg
cli
jecxz
loopne
mov
aad
sub
pop
jmp
sub
push
mov
sahf
or
out
das
call
and
aas
cmp
mov
pop
jb
sbb
div
jle
scas
shr
mov
push
adc
mov
xchg
adc
jp
adc
ja
cmps
pop
mov
sub
sub
push
sub
aaa
neg
sti
cmp
sbb
push
(bad)
loop
fwait
jecxz
mov
jne
push
test
mov
sub
inc
lahf
test
push
and
pop
xor
mov
ret
stos
jecxz
sbb
sub
dec
mov
inc
xchg
xor
push
and
xchg
xchg
jle
mov
das
fwait
push
and
sbb
popa
push
lea
fstp
rcr
pusha
scas
rcl
icebp
jo
ja
retf
adc
ins
jp
push
mov
lea
mov
mov
iret
cmp
daa
ins
in
pop
sbb
imul
xor
mov
arpl
push
ret
nop
aas
xor
and
mov
jne
inc
and
ror
cmp
xor
movs
dec
push
ret
ins
out
mov
fwait
popa
lahf
fldcw
and
xor
add
push
mov
gs
cmp
mov
(bad)
in
mov
(bad)
out
std
pop
xor
dec
mov
xor
xor
inc
ror
inc
aas
les
xchg
push
sar
jecxz
mov
sbb
test
mov
mov
pop
cmp
mov
add
cmp
push
mov
sbb
sub
push
movs
cmps
pop
es
sbb
cmps
inc
sbb
arpl
movs
fnstsw
icebp
add
sbb
out
and
sar
mov
pusha
ins
sbb
test
xchg
jb
pop
or
xor
push
push
mov
in
mov
aaa
fdiv
jp
into
mov
dec
enter
xchg
fs
pop
cmps
ror
pop
sub
ins
push
int3
jecxz
sbb
lea
ds
jl
pop
sub
dec
jecxz
repnz
sub
add
sub
or
loop
cwde
add
cmp
mov
mov
mov
nop
jmp
loop
add
mov
sub
mov
mov
xor
(bad)
push
ror
mov
in
dec
aas
mov
cli
add
xchg
popa
xlat
add
(bad)
mov
fwait
push
es
mov
dec
jnp
mov
adc
lods
nop
pop
cmps
loopne
or
aad
std
xor
sub
sub
adc
sub
ins
addr16
adc
sub
or
int3
jbe
loop
adc
add
cmp
add
test
xor
mov
mov
gs
push
add
xor
outs
hlt
push
fst
(bad)
in
xlat
pop
(bad)
lock
inc
cmc
jo
pop
mov
jge
jge
jl
fcom
or
cdq
lods
cmps
xlat
aaa
icebp
mov
sbb
cmp
ror
in
or
sub
popa
mov
sub
pop
jb
push
pop
test
idiv
xchg
mov
and
sbb
inc
psrad
fisubr
pop
and
jbe
mov
call
pushf
mov
lods
push
xor
arpl
adc
mov
fdivr
call
daa
xchg
out
mov
(bad)
or
lds
out
fisubr
clc
jne
idiv
pop
inc
jmp
fild
xor
(bad)
neg
dec
aam
nop
aad
xchg
sbb
movs
jg
repnz
stc
cmp
sub
popa
push
call
pop
test
pop
sbb
dec
in
movs
dec
cwde
movs
retf
pop
sbb
in
int3
popa
rol
inc
cmp
cmp
jmp
pop
(bad)
lahf
inc
aad
xchg
push
add
daa
cdq
pop
(bad)
aaa
sub
fsubr
fisub
call
mov
ss
sub
push
jp
mov
mov
call
inc
in
es
sbb
outs
in
stos
and
cmps
sbb
pusha
mov
fst
inc
aaa
dec
push
movs
cmp
mov
out
cs
sbb
popf
jb
fs
xchg
inc
and
dec
mov
mov
xlat
mov
or
jmp
dec
(bad)
aad
jnp
int3
add
mov
sar
nop
and
xchg
mov
std
lds
(bad)
jmp
sub
repnz
dec
sub
cmp
mov
pop
and
lock
loop
push
pop
ins
mov
mov
and
aam
inc
sahf
mov
jmp
mov
xor
or
xchg
sbb
cmp
add
xor
ins
ds
frstor
es
jg
fisttp
or
sahf
loope
pop
test
inc
mov
xchg
ds
cmp
and
test
out
stos
repnz
lock
fisub
retf
fwait
sub
loope
sub
cmp
shl
out
inc
xchg
enter
inc
cmps
jmp
out
int3
(bad)
mov
dec
iret
sti
jno
xor
fidivr
and
aas
jmp
xor
in
dec
add
adc
int3
gs
data16
pop
ins
inc
push
sbb
cmp
outs
add
jle
xor
cld
cmps
outs
aas
jbe
sub
mov
ret
pop
mov
mov
mov
lea
stc
jp
sbb
bound
push
dec
jg
sbb
arpl
inc
jns
push
sub
push
push
into
mov
call
nop
inc
cmp
inc
sub
call
cli
xor
shr
mov
movs
xchg
jecxz
adc
jno
xchg
(bad)
sub
les
hlt
push
sub
inc
pop
pop
cwde
cmps
call
adc
jmp
and
xor
push
pop
mov
(bad)
fnsave
jo
and
mov
(bad)
ret
loope
inc
(bad)
jae
xor
push
pusha
js
mov
adc
adc
bound
sub
ins
ja
sub
and
gs
inc
add
into
mov
lods
ret
lds
inc
inc
and
sbb
push
pop
loop
in
scas
fadd
data16
pop
(bad)
loope
jbe
out
int
lds
call
push
push
scas
xchg
leave
(bad)
mov
dec
bound
sub
pop
inc
pop
in
sub
inc
mov
popfw
movs
leave
loope
(bad)
and
add
stos
das
sbb
xlat
cmp
push
inc
mul
and
mov
mov
call
inc
lods
add
and
fistp
fs
and
outs
add
aam
pop
(bad)
push
push
test
push
imul
sub
es
add
call
cli
fsub
popf
sbb
bound
sbb
std
loope
add
shl
sub
nop
bswap
sbb
gs
adc
add
xchg
test
(bad)
add
loop
xlat
fs
sub
ret
sub
sub
movs
shr
adc
jns
imul
ss
ja
mov
test
cmps
clc
shr
out
xor
jbe
loope
mov
mov
in
lods
mov
dec
inc
xchg
in
adc
dec
fndisi(8087
push
fisttp
cmc
scas
inc
cmp
pop
jne
repz
cmp
aas
icebp
and
in
xor
int3
retf
jecxz
add
fwait
mov
shr
sbb
retf
inc
mov
popf
mov
hlt
xchg
test
mov
dec
dec
sub
xchg
xchg
mov
int
cmc
push
test
sbb
add
inc
frstor
dec
xchg
mov
xchg
adc
mov
mov
add
cmp
push
loopne
ficom
lods
xor
cmps
dec
inc
loope
mov
das
retf
cld
mov
or
push
and
inc
push
(bad)
(bad)
outs
aam
fsubr
and
sbb
inc
je
push
mov
dec
pushf
mov
pop
(bad)
xchg
retf
mov
cmps
xchg
loop
repnz
loope
loope
jne
faddp
pop
ds
iret
pushf
sub
inc
loope
sbb
out
mov
stos
ficom
pop
sub
ffreep
ret
xlat
and
xchg
sahf
fldcw
cwde
callw
inc
push
push
lods
xor
sbb
mov
pop
push
sbb
fsubrp
xchg
and
cmp
les
jmp
sub
arpl
inc
pop
cmp
cmp
stc
bound
mov
sbb
push
sbb
leave
repz
leave
sahf
pop
outs
leave
add
cs
xor
test
jp
je
inc
xchg
adc
sbb
jo
or
jbe
add
inc
ins
jmp
xor
test
sbb
xchg
sub
out
dec
sbb
in
movs
sbb
xor
popf
movs
jo
ret
ret
adc
mov
and
push
sbb
xchg
jae
add
test
das
mov
cmps
dec
call
clc
inc
or
jmp
cmp
mov
outs
gs
xor
jle
add
sbb
arpl
push
dec
inc
ds
xchg
(bad)
push
jge
push
into
cwde
xor
push
cmps
test
iret
jp
pop
sub
pop
sub
mov
div
test
pop
sti
ja
push
ins
loop
lods
mov
xchg
sub
or
and
inc
and
xchg
cld
push
cli
loop
jns
repnz
add
adc
sbb
mov
inc
stos
jp
popa
sbb
xor
frstor
sub
ja
mov
fsub
cmp
sub
sub
rcl
loop
cmp
and
dec
pop
in
mov
jne
push
and
test
out
mov
inc
sub
mov
sub
mov
mov
shl
sbb
sbb
inc
mov
add
fisttp
adc
xchg
mov
mov
adc
cs
and
repz
sbb
loopne
adc
jb
addr16
push
stc
fmul
(bad)
sub
mov
push
sub
ret
sub
in
and
test
fistp
jne
add
sbb
cmc
and
jp
xchg
cmp
rol
or
and
xor
sub
pop
(bad)
inc
(bad)
popa
mov
sub
jmp
mov
dec
rcr
cmp
out
push
hlt
sub
jne
push
and
mov
add
adc
and
cmp
push
in
(bad)
xchg
mov
daa
jnp
and
ficom
pop
bswap
inc
(bad)
push
push
sbb
jle
gs
xor
shr
cmp
repz
lock
inc
add
mov
push
mov
mov
repnz
jne
sbb
add
mov
cmps
adc
or
push
shld
popf
add
mov
adc
adc
cmp
mov
js
(bad)
push
fwait
inc
call
ret
xor
adc
adc
mov
inc
mov
and
aas
jmp
mul
xchg
(bad)
xor
dec
push
sar
clc
sub
sub
loopne
cmp
les
lea
xchg
sbb
cmc
push
inc
jmp
dec
int
fs
and
cmp
and
rcr
and
xchg
jmp
jecxz
xor
jmp
shr
mov
es
mov
xor
(bad)
out
sub
mov
dec
mov
js
in
mov
mov
add
pop
movs
call
fldenv
je
sbb
mov
test
adc
imul
mov
mov
xor
loopne
imul
in
mov
xor
dec
inc
(bad)
fstp
cmp
gs
arpl
and
int
add
inc
test
inc
inc
push
rcl
nop
inc
sti
pushf
imul
push
mov
xor
test
jno
cmps
mov
cdq
xchg
test
xor
inc
jnp
mov
pop
mov
clc
sti
xor
sbb
cdq
fsub
add
mov
pop
mov
cwde
push
and
(bad)
fsubr
cmp
mov
mov
mov
repz
mov
dec
sub
xor
bound
daa
hlt
int
int
mov
xlat
in
stos
nop
sub
int
and
data16
ret
xchg
cmp
sbb
mov
inc
push
jb
fisub
or
sbb
cmp
sub
fnstenv
loope
xchg
xlat
inc
out
dec
mov
ret
add
mov
jl
cmp
jmp
jns
xor
xor
out
loopne
push
pusha
sub
je
push
dec
sub
fst
aam
jecxz
sub
sub
cmp
mov
sahf
fmul
fsubp
cmp
loop
fstp
adc
cmp
into
sbb
mov
jnp
cdq
and
push
bound
pop
daa
add
aad
call
cmp
pushf
movs
in
sahf
mov
cmp
xchg
or
add
popa
pop
test
iret
test
xchg
mov
cmp
cmp
test
aas
loope
retf
(bad)
ret
aaa
cmc
sub
sbb
shl
(bad)
movs
enter
xor
sbb
sbb
int3
or
or
aad
movs
xchg
jecxz
fisub
jl
mov
test
sub
mov
cwde
rol
push
push
cmp
fwait
cmp
jecxz
lods
jb
inc
loopne
xor
or
inc
fs
(bad)
sub
pop
mov
cmp
and
cmp
fisttp
fwait
aad
mov
ret
ret
push
ja
push
xchg
std
rcr
das
lds
push
pop
jns
mov
leave
std
jle
sbb
std
(bad)
cmp
and
add
jmp
call
int
adc
or
adc
ficomp
add
xor
xchg
das
sub
dec
es
pop
hlt
ds
test
mov
push
adc
mov
jg
sbb
mov
sar
bound
fidivr
jae
enter
pop
xor
test
dec
test
frstor
retf
adc
mov
lods
inc
jns
push
cdq
or
dec
inc
jecxz
rcl
fadd
xor
into
aam
loop
mov
and
jmp
(bad)
jnp
ret
cmps
out
add
xor
xchg
pop
push
sahf
sub
leave
loope
pusha
cmp
movs
xchg
std
(bad)
icebp
cld
(bad)
inc
lock
cmp
sub
push
dec
and
push
fist
stc
sub
pusha
and
dec
jmp
mov
xor
cdq
jmp
jmp
inc
cdq
inc
nop
out
out
push
loopne
ins
je
mov
cli
arpl
dec
mov
(bad)
mov
mov
loopne
xor
scas
out
xchg
xor
and
xlat
jecxz
mov
or
push
popf
sbb
movs
das
mov
lods
aam
cmp
sbb
sbb
pop
shl
cmovb
adc
sub
sahf
lods
and
inc
add
test
gs
call
pop
adc
inc
lods
data16
bound
pop
sub
xor
jp
add
loopne
lods
inc
mov
out
xor
add
mov
xchg
imul
inc
movs
loop
stc
popa
mov
loope
pop
mov
lods
test
jmp
(bad)
cli
jp
mul
cmp
mov
test
ret
mov
and
fdivr
fist
cmp
add
mov
xchg
shl
hlt
xlat
sub
lds
add
arpl
fucomi
cmps
inc
push
call
cmp
jo
mov
mov
jmp
out
xlat
lea
mov
inc
daa
lods
dec
hlt
repnz
loopne
jae
outs
jge
jbe
outs
sbb
enter
push
jno
aas
sti
dec
repz
aaa
jo
xor
cwde
jmp
xor
dec
dec
fimul
sbb
movs
or
jae
out
xchg
xor
cmp
fwait
cmps
or
inc
hlt
add
test
push
test
sub
mov
iret
sbb
dec
aaa
(bad)
add
retf
movs
jae
mov
call
mov
push
ja
mov
mov
adc
retf
or
(bad)
movs
pop
aaa
ins
mov
jle
rol
loopne
inc
mov
outs
dec
ret
pop
jmp
sub
add
lock
in
cmps
out
pushf
xor
cmps
in
or
jns
add
jp
inc
mov
pop
mov
mov
push
sbb
movs
and
out
out
sub
inc
cmps
(bad)
push
and
(bad)
mov
xor
or
jae
and
imul
xchg
cwde
bound
loop
dec
mov
jle
and
out
(bad)
jo
(bad)
jmp
jae
inc
jl
shl
cmps
(bad)
xchg
daa
sub
sub
push
aaa
and
jl
mov
pop
sbb
rcr
xchg
mov
arpl
sbb
js
and
xchg
mov
(bad)
loop
mov
or
mov
das
fbstp
fdiv
and
mov
sbb
popa
pop
nop
sub
mov
push
popa
jbe
sahf
cdq
cmp
in
in
lock
and
mov
inc
ins
and
loopne
imul
and
mov
add
xor
je
lods
pop
xor
out
jo
add
xor
inc
addr16
xchg
xor
inc
jmp
dec
bnd
jo
mov
dec
mov
pop
and
es
cld
out
out
loope
jbe
sbb
fidiv
jns
xor
test
out
cmp
ret
rol
sub
jno
sub
movs
cmp
rcl
jge
adc
add
(bad)
add
pop
fsubr
or
aaa
loopne
adc
scas
stc
ret
pop
rcl
mov
fs
sbb
push
lock
fsub
push
fwait
cmp
jno
fdiv
lds
outs
inc
scas
xchg
mov
and
mov
mov
fldcw
scas
sub
repnz
fst
mov
push
mov
sbb
aaa
sub
push
push
retf
leave
inc
pop
pop
add
sbb
dec
jo
daa
test
add
and
test
pop
mov
jg
ss
cmp
or
add
mov
adc
sub
inc
scas
or
ret
loope
mov
dec
test
xor
mov
popf
imul
pop
sub
xchg
xchg
sbb
and
xchg
xor
test
rcr
mov
pusha
fstp
cmps
jp
mov
jo
and
mov
in
ja
pop
push
cwde
(bad)
push
push
and
es
sbb
out
xor
inc
js
inc
int
pop
inc
ret
mov
test
cmp
(bad)
mov
jb
or
mov
mov
and
xor
fwait
and
jo
dec
xor
cmp
jmp
imul
mov
les
fsubp
mov
icebp
popf
pop
sub
add
cmp
mov
adc
js
sbb
sub
xor
dec
daa
mov
fwait
or
enter
call
jno
inc
push
mov
cmp
and
push
or
xor
inc
mov
sbb
fwait
xchg
addr16
mov
xchg
inc
(bad)
dec
sub
add
in
out
out
jmp
xor
dec
mov
push
push
mov
sahf
nop
outs
cmp
in
scas
cmps
pop
gs
lea
cmps
push
push
icebp
lods
daa
cmp
push
dec
sbb
fmul
cs
shl
fwait
push
lods
mov
in
mov
push
and
push
inc
dec
and
mov
imul
sti
pop
push
in
adc
test
xchg
jp
mov
and
push
loope
dec
dec
or
scas
cmps
sub
ja
into
dec
popf
fs
pmullw
pop
(bad)
loope
cwde
inc
mov
jmp
addr16
in
pusha
test
jecxz
add
push
inc
xchg
jecxz
jb
pop
pusha
adc
pusha
nop
inc
retf
out
adc
push
aas
jae
es
push
push
in
in
mov
pop
nop
cmps
scas
out
iret
mov
mov
jb
ss
jmp
cmps
(bad)
dec
test
push
scas
sbb
pop
mov
(bad)
push
cmp
ror
loope
and
inc
mov
shl
and
and
mov
addr16
out
push
jns
out
pusha
repnz
adc
mov
movnti
inc
and
sub
scas
(bad)
in
sahf
add
daa
popa
es
les
aaa
push
mov
dec
jne
push
mov
push
movs
sbb
adc
pusha
adc
test
out
push
(bad)
jmp
in
cmp
jae
and
nop
or
xor
(bad)
cs
pop
ss
aaa
mov
cmp
dec
dec
std
jae
jne
mov
jl
test
idiv
and
inc
adc
lahf
mov
xor
sahf
sub
test
movs
mov
aas
adc
mov
enter
push
outs
imul
pusha
pop
ss
(bad)
sbb
fisttp
dec
scas
mov
pop
jecxz
loop
fs
mov
test
dec
lahf
into
sub
or
mov
mov
leave
(bad)
or
cdq
mov
mov
xor
pop
mov
imul
xor
mov
fnstcw
jmp
mov
mov
aam
add
enter
(bad)
or
dec
cmp
mov
shl
sub
(bad)
stos
mov
les
sbb
xor
cmps
lahf
cmp
inc
in
sub
popa
gs
pop
pop
shr
mov
xchg
mov
ds
add
mov
and
mov
dec
retf
push
out
mov
sbb
or
dec
aaa
test
out
int3
daa
mov
dec
scas
jns
nop
inc
pop
sub
imul
push
jg
cli
mov
or
jle
dec
loop
sbb
fcomp
add
test
into
or
mov
jmp
jge
sub
adc
(bad)
xor
int3
ret
adc
mov
push
out
retf
ds
add
dec
movs
aas
inc
dec
pop
xchg
aad
pop
mov
mov
data16
loope
ret
push
and
or
fwait
push
mov
imul
adc
mov
or
cmp
jae
std
jnp
call
test
fcomp
mov
cmp
pop
in
cmp
cmp
test
ds
mov
jae
xchg
push
sbb
cmp
inc
leave
shl
xchg
cs
sbb
fidiv
data16
ds
les
test
addr16
mov
sbb
push
mov
adc
movntq
ret
(bad)
loop
cli
mov
mov
mov
lods
xchg
xchg
push
or
mov
push
push
sti
out
mov
cdq
cmp
stos
(bad)
xchg
sbb
sbb
rcl
cmp
sub
mov
mov
sbb
mov
jnp
jbe
call
call
retf
or
sub
imul
add
mov
rcl
sbb
clc
test
push
jmp
push
clc
dec
mov
sahf
sub
sub
xchg
cmp
xchg
and
inc
sub
ss
mov
rol
aaa
out
inc
popf
dec
sbb
or
shr
push
(bad)
into
sbb
jne
fdiv
cld
xor
test
mov
push
out
xchg
loope
js
mov
pop
jle
ror
mov
inc
push
jo
bound
mov
mov
(bad)
(bad)
cmp
xor
push
das
xchg
dec
mov
inc
xor
jp
add
xchg
pop
ss
add
mov
xor
add
lods
lahf
fmul
push
test
aad
push
push
mov
and
mov
add
repz
cmp
push
pop
js
out
xchg
mov
sbb
push
lock
adc
aaa
jbe
icebp
sbb
imul
mov
test
stos
xor
shl
inc
xchg
cli
loopne
cmps
jmp
or
dec
mov
fs
mov
mov
or
int3
adc
dec
cmp
nop
pop
call
pop
cmc
adc
and
sub
call
scas
dec
jnp
cdq
sbb
mov
lea
sbb
jl
outs
sbb
mov
cmp
mov
mov
aas
mov
push
mov
push
loope
inc
not
rcl
in
xchg
outs
pop
ja
sub
pop
daa
dec
scas
adc
push
cs
push
loopne
inc
xor
xchg
pop
or
adc
iret
hlt
mov
out
call
jne
lods
mov
add
inc
or
inc
jmp
dec
jg
dec
daa
jo
push
imul
sbb
nop
or
inc
fwait
hlt
xchg
(bad)
cmps
or
lods
test
fwait
xchg
idiv
idiv
or
xor
fs
mov
pop
mov
xor
push
(bad)
pop
xchg
dec
inc
dec
xor
jmp
retf
fwait
push
or
pop
scas
jno
lahf
and
data16
inc
jno
loope
scas
jae
jmp
jne
in
mov
xor
aad
cmp
es
sub
adc
adc
dec
sub
inc
jno
sbb
mov
sub
das
stos
xor
push
mov
icebp
dec
mov
pop
push
data16
jp
or
and
mov
pop
mov
(bad)
xchg
std
jmp
mov
push
cmp
(bad)
pop
cs
sbb
push
push
mov
sub
and
xchg
jo
push
mov
add
(bad)
leave
adc
sbb
mov
jnp
in
cs
fdiv
push
cmp
dec
mov
jmp
ror
cmp
fild
or
rcl
mov
mul
mov
or
imul
out
mov
imul
jae
inc
xor
mov
dec
push
ins
lahf
adc
(bad)
pusha
mov
mov
xchg
xor
int
loop
pop
(bad)
(bad)
shl
dec
mov
fmul
ret
es
and
arpl
es
imul
mov
mov
fistp
adc
and
jmp
jb
je
fwait
pop
ret
in
and
mov
cmp
pop
sahf
and
retf
dec
call
cmp
shl
mov
mov
imul
adc
sub
pop
sbb
xor
adc
fcom
mov
aam
xor
or
or
test
add
mov
mov
cwde
ret
push
rcl
sahf
push
mov
sub
add
movs
ret
sbb
out
or
cmc
es
sbb
out
add
pop
test
push
adc
ja
mov
jmp
lods
pop
test
mov
mov
xchg
jb
dec
cmp
xor
mov
data16
ficomp
aad
push
jmp
xor
inc
ret
les
ja
in
call
cmp
sub
push
xlat
xor
pop
loop
sub
ficomp
and
test
js
bound
in
out
mov
lahf
cmp
mov
cmp
cs
jae
jns
popa
inc
lock
(bad)
in
mov
push
outs
dec
push
aaa
mov
push
push
add
ins
cmp
mov
fisubr
and
mov
adc
add
xor
mov
cmp
add
and
add
or
(bad)
lea
inc
test
cld
xchg
es
(bad)
mov
pop
ja
movs
out
push
jno
and
pop
fistp
mov
popa
cli
test
in
inc
mov
cmps
fcmovb
mov
pushf
loope
sbb
jae
and
lods
jecxz
pop
stc
add
mov
inc
int3
test
repnz
lods
fisubr
mov
or
out
xchg
out
jo
add
xor
in
icebp
sbb
outs
add
pop
hlt
repz
gs
ds
es
mov
sub
mov
dec
repnz
fdivr
push
lods
shr
push
test
loope
mov
daa
movs
jmp
mov
or
pop
call
arpl
inc
jo
adc
into
jns
xor
and
pop
push
in
es
popa
push
scas
inc
lods
mov
call
push
dec
test
mov
jbe
pop
jns
mov
push
adc
ret
cmps
add
mov
pop
aas
ja
mov
jno
dec
inc
mov
lods
mov
pop
gs
(bad)
hlt
sbb
fst
sti
pop
aas
hlt
adc
cmc
cwde
cmps
shl
or
push
or
sar
in
push
and
addr16
push
or
nop
rcr
jns
fs
pop
imul
mov
mov
adc
push
call
sar
enter
cmps
stos
mov
xchg
cmp
ret
mov
aad
sbb
and
je
add
mov
inc
and
out
iret
push
cdq
mov
les
mov
movs
adc
stos
addr16
mov
jo
jae
test
sub
push
add
add
in
push
jmp
call
push
xchg
sub
dec
pop
push
dec
ret
inc
loope
repnz
call
out
jo
mov
or
aam
mov
mov
jmp
xor
bound
retf
pop
daa
jg
xor
inc
push
js
test
jns
inc
pop
js
gs
inc
aas
and
sbb
fldcw
test
int3
dec
shl
mov
mov
dec
mov
or
aas
and
push
mov
cmp
jo
xchg
loop
popa
in
cmp
sahf
es
inc
cmp
xchg
std
cmp
adc
xchg
fsubr
sbb
pushf
cmps
addr16
scas
push
into
mov
(bad)
xor
pop
and
ins
jns
scas
popa
ja
sahf
outs
xor
xchg
xchg
mov
push
sbb
(bad)
sub
mov
lds
cs
cli
aaa
test
sbb
mov
test
sti
mov
pop
pop
int3
mov
cmc
sbb
inc
push
enter
adc
sbb
pop
mov
xchg
and
cmp
je
sbb
mov
je
xor
dec
and
sar
xchg
or
xor
jb
mov
shr
cmc
cmp
(bad)
mov
in
add
outs
sbb
mov
cli
mov
mov
push
sahf
repnz
pop
pop
lods
stos
lahf
sub
aas
fldenv
aas
adc
xchg
pop
lods
fnstsw
adc
xchg
(bad)
mov
data16
jo
dec
and
jnp
jmp
mov
mov
sub
xor
ficomp
(bad)
fnstcw
mov
ds
nop
cmps
shl
and
adc
ficom
cs
xchg
sub
mov
inc
inc
jp
or
call
(bad)
mov
loope
and
add
scas
pop
sbb
stc
jp
and
jge
jae
scas
aad
sub
aad
ret
mov
sbb
add
jmp
lock
into
shl
sub
arpl
fwait
and
cmp
popa
cdq
mov
jnp
dec
jnp
push
pop
scas
adc
jmp
cmp
cs
packuswb
rol
mov
ret
push
adc
or
sar
addr16
call
inc
mov
add
xor
adc
in
ins
adc
sar
repnz
pop
lahf
add
dec
mov
out
test
jg
aaa
call
cmp
scas
jmp
inc
cli
(bad)
into
outs
jns
loope
mov
sbb
jle
shl
daa
jb
push
sub
rol
xchg
jnp
pop
adc
test
bound
mov
add
fs
mov
push
lods
lea
mov
addr16
cdq
cmp
daa
pusha
add
inc
pop
sbb
sbb
inc
lods
add
pop
das
mov
mov
shr
jbe
jno
and
pop
cmps
jecxz
jnp
rcl
not
imul
jl
repz
data16
mov
es
sbb
sub
imul
out
push
and
imul
cmp
mov
pop
ins
push
inc
arpl
mov
scas
call
adc
sbb
adc
jo
inc
mov
pop
pop
enter
enter
sbb
hlt
cmp
repnz
or
ret
inc
hlt
aaa
test
imul
movs
push
and
xor
inc
mov
mov
mov
mov
(bad)
xchg
repnz
sbb
mov
daa
movs
scas
mov
jg
int3
mov
in
inc
cmp
mov
inc
jg
not
mov
push
jbe
pop
mov
out
sbb
xchg
in
in
mov
enter
sbb
retf
xchg
jmp
es
pop
test
cli
jo
dec
not
icebp
jo
les
jno
xor
jo
inc
mov
stos
dec
and
popa
pusha
cwde
push
adc
jbe
inc
mov
xor
cmps
stos
jns
jae
hlt
outs
lahf
sar
fsqrt
bound
inc
sbb
ret
rcl
mov
mov
lods
jg
in
ret
mov
sub
fisubr
retf
arpl
add
add
aam
scas
xchg
mov
(bad)
into
imul
cmps
dec
adc
cmp
imul
cwde
sbb
mov
mov
ficomp
push
xchg
jno
push
mov
ja
xor
push
or
sbb
lods
not
inc
test
stos
cmp
loope
jns
loopne
fwait
cmp
cwde
pop
mov
stc
out
adc
mov
je
shr
jne
inc
outs
xlat
cmp
pop
and
pop
lods
or
jmp
jmp
or
icebp
iret
push
adc
push
pusha
jno
pusha
jb
mov
pushf
(bad)
pop
xchg
lods
mov
into
mov
mov
sbb
dec
jg
cmp
in
inc
mov
(bad)
cli
pop
xchg
fisubr
fimul
aaa
jg
js
leave
repnz
test
push
mov
mov
sahf
push
loope
xchg
ds
push
mov
addr16
mov
outs
jns
(bad)
xlat
add
pop
mov
sbb
fnsave
dec
cmp
aam
inc
inc
jmp
les
and
fwait
inc
scas
pushf
aas
loop
xchg
jecxz
stc
out
in
sub
mov
test
cmp
cmps
es
ss
xchg
test
mov
jae
and
movs
pop
add
dec
aam
cs
sahf
rcr
push
xchg
mov
sar
xchg
sti
or
scas
mov
push
test
aad
loop
shr
arpl
pop
dec
popa
push
aaa
dec
stos
cmp
fidiv
out
loopne
sub
je
cmp
pushf
dec
push
add
jae
xor
dec
pop
xor
pop
add
pop
ret
push
paddq
hlt
inc
and
jle
sub
add
test
push
xlat
add
cwde
push
hlt
cli
cmp
retf
or
in
(bad)
jmp
call
shr
pusha
hlt
pop
and
push
dec
xchg
mov
sbb
gs
mov
mov
mov
sbb
push
xor
ds
mov
xchg
data16
int3
cli
mov
leave
cmp
mov
and
mov
outs
cmc
inc
mov
xor
and
packsswb
inc
shl
push
sub
mov
push
cmp
rol
push
mov
xchg
or
inc
retf
cs
sub
es
inc
or
add
inc
inc
fist
shl
pop
push
cmp
pusha
push
rol
inc
(bad)
sbb
xchg
jbe
mov
jae
int3
xchg
jo
and
sbb
test
in
sbb
data16
shr
in
cs
sub
push
and
setl
(bad)
sbb
xor
inc
cmp
add
xchg
scas
jge
stos
mov
and
xor
pop
and
inc
nop
iret
cmps
shl
(bad)
stc
addr16
sub
or
outs
xchg
and
movs
inc
and
movs
jg
sbb
retf
cmp
adc
cli
aaa
mov
pop
push
aaa
into
mov
pop
pushf
rcr
push
imul
call
arpl
dec
sub
test
pop
mov
xor
xchg
sub
sbb
add
sub
es
pop
mov
fld
jb
je
outs
or
inc
test
movs
ins
xchg
pop
xchg
push
xchg
dec
xchg
jb
and
in
mov
nop
push
pop
mov
arpl
ret
loop
test
add
std
dec
cmps
pushf
je
adc
rcl
lods
aam
xchg
in
rcr
lods
or
mov
add
data16
iret
sbb
jmp
and
and
fsubr
xchg
lods
or
cmp
mov
pop
cdq
test
jae
dec
leave
inc
cwde
inc
cld
mov
and
add
imul
xor
mov
push
into
in
(bad)
repnz
jae
icebp
daa
scas
mov
sbb
pusha
test
in
jmp
inc
mov
int3
xor
sbb
xor
adc
outs
cwde
outs
cmp
pop
sbb
out
sbb
(bad)
icebp
cwde
adc
mov
addr16
mov
pop
retf
xor
mov
sbb
xor
inc
mov
retf
adc
fsub
cli
mov
pop
daa
jecxz
cmp
shr
nop
in
mov
mov
inc
inc
pop
mov
retf
and
cmp
push
sub
(bad)
loopne
cmp
mov
jecxz
lods
jmp
les
mov
xor
jns
imul
aad
inc
and
ds
aas
add
pop
out
int
xchg
fdivr
imul
fisub
push
into
sahf
push
ficomp
into
pop
push
in
ret
es
jecxz
lods
(bad)
imul
(bad)
pop
lods
adc
mov
cmp
add
and
ins
xchg
and
mov
outs
int
sti
das
cmc
(bad)
mov
sub
ss
rcl
stos
out
inc
(bad)
xchg
lods
adc
jg
sub
cs
pop
ins
loopne
or
sbb
sbb
push
gs
add
push
test
mov
aas
jecxz
ja
fwait
(bad)
cmp
mov
mov
ss
xor
push
adc
jo
jo
add
push
dec
imul
pop
sub
dec
jg
xor
sub
push
xadd
aad
push
push
cmps
mov
sahf
dec
int3
push
jle
mov
add
inc
mov
ins
sbb
inc
inc
call
push
dec
cli
out
jmp
das
fs
sahf
and
sub
aaa
aaa
mov
mov
lock
mov
sbb
jmp
mov
aad
scas
loop
xchg
ds
repnz
aas
and
add
sbb
xor
scas
outs
pop
sbb
add
int
rcr
adc
mov
out
pop
mov
nop
lds
sar
loope
cld
sub
xor
or
test
cwde
iret
sub
ficom
push
mov
out
pop
mov
and
sahf
popa
inc
mov
dec
sub
push
inc
movs
add
xchg
ror
dec
mov
xchg
xlat
jbe
xchg
in
pop
sbb
jae
ss
add
mov
aaa
push
sbb
add
loope
dec
rol
rcr
sbb
les
mov
jno
ja
sub
push
es
inc
fwait
mov
inc
bound
dec
lock
test
adc
fcomp
fstp
dec
lea
bound
lea
adc
jp
add
mov
mov
call
pop
test
pop
adc
pop
les
aad
sahf
mov
pop
iret
and
xchg
test
ds
cmps
arpl
in
pop
xchg
mov
mov
mov
loope
data16
test
shl
inc
retf
call
mov
fwait
icebp
inc
adc
add
fbld
test
fdivrp
sar
jl
pushf
inc
xchg
test
xchg
push
sub
les
stc
shl
or
(bad)
js
sar
jns
and
add
jmp
(bad)
sbb
jmp
push
xchg
add
loop
push
inc
lods
and
arpl
stos
push
or
mov
inc
pop
out
pop
sahf
jmp
push
sub
arpl
mov
data16
cmp
push
fiadd
iret
push
lock
jmp
popa
inc
or
or
mov
push
sbb
sbb
stos
inc
pop
int3
loop
call
(bad)
aam
in
inc
mov
mov
push
movs
add
iret
push
test
dec
and
test
mov
pop
and
aad
shl
mov
pop
add
js
xor
push
and
xchg
adc
and
(bad)
out
rcr
sbb
jmp
cs
mov
dec
mov
and
fidiv
add
(bad)
mov
push
lods
sahf
movs
push
push
push
sbb
test
adc
and
sub
cmp
fiadd
mov
sbb
loop
mov
jg
outs
lods
out
add
xchg
in
push
(bad)
mov
mov
inc
sub
into
mov
sbb
sub
cs
fbstp
pop
add
dec
sub
ins
mov
mov
or
imul
push
(bad)
adc
cmp
pop
ss
push
test
jecxz
in
or
arpl
cmps
mov
ds
cld
aas
mov
in
repz
pop
imul
out
or
repnz
fiadd
mov
or
lods
xor
push
or
xchg
ror
pop
call
ins
cld
es
aas
inc
sahf
enter
hlt
imul
repnz
xor
push
pop
daa
inc
adc
mov
and
icebp
cmp
push
xor
jmp
inc
in
sub
cmp
ds
add
xor
pop
sti
test
cmp
stc
lea
ror
jnp
push
shr
pop
push
and
and
cs
push
imul
rcr
push
fwait
add
ins
jecxz
imul
mov
push
movs
inc
jmp
xchg
test
push
and
xchg
or
mov
adc
loopne
ds
dec
and
sbb
sbb
push
das
pop
jae
fisubr
adc
fisttp
ja
adc
push
bound
adc
dec
scas
fidiv
sbb
or
add
daa
mov
sbb
lahf
cmps
sahf
mov
fcmovb
sbb
or
outs
and
loope
add
pop
shr
xchg
push
cmps
sub
cmp
dec
bound
inc
push
push
and
push
jnp
std
into
push
cmps
inc
call
in
ss
imul
ins
jecxz
scas
xor
movs
jg
outs
mov
loop
cmp
out
pop
lods
sub
jns
xchg
sub
icebp
inc
xor
inc
mov
cld
mov
and
aaa
or
ds
xchg
movs
jno
das
arpl
pop
inc
sub
mov
out
shl
dec
sub
and
pop
and
add
aaa
in
jp
adc
out
mov
retf
adc
out
aas
jmp
sti
adc
(bad)
lods
xchg
idiv
in
sbb
je
stos
loopne
add
scas
mov
push
test
jecxz
fwait
mov
mov
push
daa
sbb
ins
cmp
xchg
out
mov
or
cwde
mov
and
aam
inc
repnz
inc
mov
jecxz
in
xlat
fsqrt
or
adc
xchg
stc
inc
mov
into
jns
cmp
sbb
mov
rcl
scas
test
aaa
mov
stc
cli
inc
sub
pushf
and
push
xor
push
cs
aaa
xchg
xchg
pop
pusha
iret
sahf
pop
loop
mov
scas
adc
and
out
add
pop
xor
push
push
shr
push
dec
outs
xlat
cmp
cdq
loop
pop
sbb
sub
cmps
outs
(bad)
cmps
add
imul
add
xchg
fimul
xchg
sar
movs
retf
push
and
mov
push
rcr
movs
les
mov
xor
add
jmp
pop
es
pop
or
xlat
cli
xor
inc
cmp
scas
mov
push
mov
pop
test
popa
mov
cmp
cmp
icebp
lods
dec
les
mov
aam
into
xchg
test
mov
dec
cmps
add
sub
lods
ss
mov
sti
in
aas
xor
and
ss
add
loope
mov
cmp
inc
push
mov
out
std
mov
push
ss
jno
(bad)
mov
cmps
mov
int
(bad)
cld
in
adc
xor
addr16
nop
mov
imul
mov
clc
mov
shl
pushf
rcl
shr
inc
sub
xchg
out
mov
push
jmp
shr
mov
or
sahf
xlat
mov
push
in
pop
sub
ret
(bad)
in
mov
push
add
ins
test
mov
sbb
pop
scas
push
lds
xchg
inc
inc
popa
sub
jmp
lock
jp
cmp
sbb
sub
inc
out
into
mov
jo
daa
(bad)
xchg
pop
dec
adc
and
iret
mov
in
dec
ret
mov
sub
mov
ds
pop
cmp
cmc
aad
mov
mov
push
sub
imul
mov
call
shl
pop
xlat
sbb
sar
mov
cmp
adc
push
ficom
pop
push
cmp
jecxz
push
jmp
test
mov
mov
dec
xor
dec
jmp
ret
cmp
mov
int
loopne
cmps
out
test
adc
ret
pop
stos
and
sar
test
xor
out
(bad)
out
push
les
retf
in
jae
mov
retf
fisubr
cld
sar
adc
push
cmp
and
sbb
mov
fild
adc
(bad)
and
pop
popf
add
fwait
and
sbb
xchg
fsub
test
mov
cmp
inc
sub
inc
es
cs
cmp
loope
xor
idiv
pop
dec
jle
xchg
sub
imul
cmps
or
lds
sub
adc
ret
scas
pop
nop
inc
sbb
and
out
mov
cld
inc
jo
xor
cvtdq2ps
stos
je
mov
push
test
pop
cmp
arpl
pop
ret
dec
aas
or
xor
push
sub
pop
test
icebp
jp
aam
imul
mov
inc
inc
out
xlat
(bad)
add
xchg
xor
ss
push
mov
pop
stc
sbb
mov
lods
mov
jae
ror
xchg
push
cs
xor
sub
cli
(bad)
adc
fbstp
xchg
in
mov
data16
adc
scas
or
sub
pop
aad
cmp
ja
mov
mov
inc
inc
sub
leave
cs
add
jne
nop
ins
lods
jo
outs
push
dec
xor
inc
dec
mov
adc
retf
mov
cmps
ins
loopne
mov
jl
loope
mov
or
xor
adc
cmp
cmp
adc
cli
stc
mov
cmp
jmp
ficomp
xor
push
call
inc
jno
xor
mov
fisubr
xchg
xchg
and
bound
iret
mov
sbb
outs
dec
xor
int3
shr
fist
ret
(bad)
xchg
das
or
push
movs
loop
pop
cmp
inc
(bad)
cmp
or
repz
pop
lods
xchg
xor
retf
mov
jae
mov
loop
cdq
outs
fmul
stos
(bad)
das
iret
or
jmp
mov
cmp
sub
jb
iret
(bad)
loop
test
(bad)
add
ret
call
push
push
stos
mov
pop
xor
pop
lods
mov
xor
dec
adc
repz
mov
xchg
outs
test
test
xchg
ins
out
in
cmp
daa
dec
dec
mov
push
stos
in
mov
pop
push
sar
std
sub
mov
mov
push
icebp
mov
push
out
xor
scas
pop
pop
jmp
pop
sub
xlat
sub
jo
inc
or
push
ds
mov
popa
mov
lock
mov
xor
mov
mov
cmp
mov
push
daa
jmp
jge
adc
ror
lds
or
xchg
push
out
lods
jns
pusha
mov
or
movs
jae
cmp
adc
inc
loop
push
sti
cmp
arpl
cs
aad
sub
jae
test
outs
test
cmps
call
movs
sar
dec
pusha
add
pop
lds
fs
rol
mov
push
jnp
push
mov
jmp
dec
push
sub
adc
rcl
hlt
jg
fldz
jecxz
int3
loop
jp
jge
pop
mov
out
arpl
push
test
adc
pop
and
xor
in
in
cmc
jae
adc
test
cmc
xchg
enter
mov
xchg
scas
cmps
mov
or
(bad)
push
cmc
cld
and
out
xor
dec
test
sbb
push
dec
dec
out
push
lods
leave
scas
mov
mov
push
push
xchg
adc
in
outs
shl
(bad)
in
dec
inc
test
inc
pop
jmp
push
call
or
mov
mov
adc
lods
sub
(bad)
in
fs
cdq
outs
add
fucomp
les
xor
ret
inc
fwait
out
xor
sub
or
ds
(bad)
mov
xchg
stc
bound
cmc
adc
das
daa
ss
add
cli
add
jg
jb
lods
arpl
ss
jmp
pop
pusha
sbb
test
add
sub
bound
pop
je
sbb
or
xor
mov
rcr
pop
arpl
inc
std
and
add
iret
das
sar
(bad)
out
mov
sub
pop
xchg
xor
test
sub
pop
push
lock
inc
dec
loope
mov
(bad)
sbb
pop
out
mov
push
mov
into
int3
out
cmps
mov
or
inc
inc
adc
out
add
out
out
fs
or
cmp
jb
push
ret
nop
push
(bad)
push
arpl
sub
pop
jne
push
jnp
bound
xchg
jne
add
mov
dec
in
je
xor
outs
sbb
sbb
and
lods
inc
ins
xor
xchg
imul
loop
hlt
xlat
in
test
test
movs
retf
adc
out
pop
setp
cmp
inc
fsubr
xchg
xchg
lods
ret
movs
pop
mov
(bad)
repz
xor
xlat
mov
push
test
mov
or
stos
test
popa
ret
mov
jp
int3
push
(bad)
out
add
stos
popf
les
or
popf
loopne
pop
gs
in
fld
mov
xchg
pop
lock
adc
cmp
test
xor
mov
cmps
ret
adc
xchg
mov
xchg
cmps
inc
imul
loope
fcmovnbe
xor
ins
sub
ret
sub
loop
pop
cli
test
loope
mov
or
adc
xchg
les
retf
into
mov
adc
cmc
dec
scas
mov
mov
hlt
and
sub
sub
pushf
cmp
lock
jmp
push
test
or
shr
lahf
jl
pop
es
out
jle
pop
push
and
pop
and
dec
rcr
movs
das
mov
push
scas
pop
test
retf
xlat
jbe
jp
adc
dec
int3
mov
push
inc
push
cmps
pusha
fisttp
or
stos
dec
test
mov
xor
pop
out
gs
inc
nop
sbb
mov
push
sbb
(bad)
test
mov
in
movs
and
cmp
mov
mov
cmp
cmp
cdq
ds
pop
push
and
and
cmps
xchg
jne
out
in
sbb
jge
cmp
mov
jmp
arpl
add
pusha
out
jmp
sub
inc
inc
mov
std
push
test
sbb
lods
paddusw
xlat
cdq
sbb
(bad)
jg
loop
xchg
inc
inc
test
ins
inc
push
sbb
lods
loop
es
and
xor
fldcw
hlt
inc
(bad)
in
jle
xchg
in
add
cmc
mov
pop
mov
in
dec
cmps
std
sbb
sbb
mov
mov
and
js
xchg
js
sub
and
inc
aaa
(bad)
out
sti
adc
jg
pop
push
ds
jp
push
push
mov
pop
xchg
jl
in
inc
add
fs
mov
movs
es
sub
adc
xchg
ret
add
xor
jp
sub
leave
out
int3
ds
push
and
ret
xchg
xor
dec
movs
add
cmp
int3
jno
xor
pop
call
fldenv
aas
jmp
or
jae
mov
xor
test
xchg
xor
adc
pop
sub
mov
xlat
ins
sub
paddsw
cmp
fwait
sub
fist
in
enter
push
jne
mov
jle
ja
jns
mov
push
out
mov
lea
pop
les
dec
sbb
adc
jge
loopne
xor
rol
out
mov
fwait
les
xor
mov
(bad)
std
aas
jbe
jl
into
dec
aas
jle
sbb
pushf
les
enter
dec
jnp
sar
jo
xchg
jl
pop
(bad)
loopne
dec
test
mov
dec
fwait
xor
enter
(bad)
mov
out
mov
mov
xchg
sbb
mov
cdq
cmc
mov
jne
pushf
repz
inc
in
(bad)
jl
push
retf
cmp
dec
pushf
lock
clc
sti
pop
pop
leave
lahf
pop
inc
cld
mov
dec
jecxz
cmc
mov
retf
mov
mov
ins
pushf
adc
push
add
jo
push
pop
je
mov
xchg
bound
call
pminub
idiv
mov
push
out
mov
cmp
xor
adc
cli
sti
leave
cmp
shl
mov
dec
leave
add
xor
or
div
test
in
adc
inc
test
sbb
xchg
neg
sbb
cmp
and
and
pop
pop
int
frstor
push
pop
sbb
shl
into
call
fstp
jbe
cmc
mov
jmp
xchg
or
arpl
mov
cmp
or
jae
mov
sub
ss
push
test
repz
mov
push
ss
sub
jae
xcrypt-ecb
cmps
or
int
sbb
les
mov
or
and
and
mov
xlat
and
mov
push
push
shl
jne
lock
jge
add
psubb
cmp
loope
shl
rcr
fsubr
out
push
xchg
iret
inc
xchg
popf
and
iret
(bad)
pushf
bound
sbb
and
jg
dec
stc
aam
xchg
ret
dec
(bad)
test
adc
pop
aas
enter
mov
pop
inc
cld
enter
jg
ficomp
cmp
inc
or
jb
cld
int
into
pop
pop
pusha
or
and
fidivr
sub
cmp
fstp
ret
addr16
sbb
cs
pop
aas
dec
pushf
pop
push
jne
clc
out
sub
clc
inc
dec
out
adc
jb
push
retf
fdivp
fisubr
call
out
lea
aad
arpl
std
xchg
(bad)
push
lock
and
fld
sub
adc
pushf
in
pop
inc
cmp
fstp
daa
cld
pop
jge
mov
xchg
xchg
fwait
pop
inc
(bad)
fmul
fdivr
fld
mov
xor
(bad)
bound
(bad)
loopne
(bad)
cwde
call
popa
iret
sbb
jg
clc
fstp
pop
repz
out
xor
jl
fcmovnu
fadd
xchg
inc
or
fstp
rcr
adc
bound
in
cmp
cs
stos
jo
cwde
in
ror
dec
push
clc
aad
mov
in
pop
jecxz
dec
lods
dec
jecxz
fimul
enter
mov
ffree
inc
leave
ret
and
sub
cmc
pop
aas
jae
xor
push
mov
fisubr
(bad)
jmp
fstp
daa
sbb
jmp
pop
js
inc
out
dec
div
mov
cdq
pushf
std
aam
inc
js
pop
repnz
sub
mov
sbb
sbb
rcr
fucomi
and
fiadd
std
enter
lods
add
out
shr
jmp
pop
loopne
mov
inc
ins
fimul
ret
pop
(bad)
dec
fnstsw
shr
dec
fistp
dec
mov
pop
(bad)
dec
(bad)
rcr
mov
dec
fisttp
pop
rol
fidiv
lock
cli
sar
sub
cwde
xor
jecxz
movs
sub
mov
iret
sbb
sub
jns
outs
lods
jge
xchg
or
mov
stc
xor
ror
jecxz
les
int
les
xor
mov
push
cmp
pop
cmp
and
jge
inc
cdq
les
mov
(bad)
or
sbb
sub
not
mov
mov
mov
in
mov
jle
jle
push
ret
fmul
(bad)
pop
fiadd
mov
sub
fiadd
int
rcr
jecxz
push
fcmovu
les
mov
sbb
retf
ret
cmp
inc
sbb
fist
sub
(bad)
cli
jecxz
sti
aad
in
test
(bad)
pushf
xor
aad
and
mov
fist
fucomi
pop
xchg
stc
pop
mov
leave
(bad)
in
inc
rol
cmp
(bad)
rcl
mov
popf
jmp
xchg
push
out
adc
jecxz
icebp
lea
call
pushf
adc
adc
dec
dec
int3
frstor
sbb
mov
ficom
in
push
(bad)
dec
mov
pop
fst
mov
jl
adc
mov
jo
loop
adc
xor
pushf
ins
mov
aad
dec
hlt
cmp
push
xor
mov
lods
clc
and
arpl
(bad)
fadd
fst
out
cmp
fcom
cmp
pushf
(bad)
das
popf
clc
and
in
icebp
or
ret
mov
jmp
ret
sbb
stc
movs
scas
sti
int3
mov
rcl
mov
dec
mov
fisttp
aas
sar
mov
or
inc
adc
add
shr
or
jl
not
in
stos
cmp
dec
jmp
pop
clc
leave
jecxz
(bad)
dec
in
int
stc
shl
(bad)
adc
retf
mov
outs
xor
repz
mov
fbld
stc
inc
pushf
dec
sub
js
dec
xchg
jne
ffree
sbb
xor
adc
mov
loopne
retf
push
sti
inc
and
cmps
dec
and
and
fwait
ins
push
push
and
xchg
dec
aam
sub
push
cdq
pop
xlat
rcl
aad
fadd
sbb
aam
mov
les
fistp
out
repz
or
(bad)
pop
push
icebp
les
pop
leave
jno
lea
sub
xchg
mov
lahf
inc
popf
push
and
jnp
sbb
sbb
dec
push
rcl
lock
pop
mov
cmp
lahf
inc
jmp
cdq
and
pushf
js
fldenv
fs
inc
icebp
pop
es
pop
xchg
(bad)
xor
jne
dec
lea
inc
(bad)
sti
jg
ja
add
les
popf
popf
repnz
aam
js
stc
or
(bad)
cmp
mov
arpl
scas
in
mov
push
mov
test
dec
push
mov
push
push
pushf
dec
xchg
dec
ret
fs
dec
rcl
les
ret
ja
pop
test
std
sub
xchg
and
aam
sub
lds
call
push
inc
movs
dec
icebp
pop
ficomp
jecxz
std
pop
fnstsw
adc
lea
popf
dec
adc
or
(bad)
cmps
jecxz
jb
pop
mov
cwde
or
mov
loop
aam
imul
mov
mov
and
jnp
or
fistp
xchg
sub
fbld
(bad)
push
les
fisubr
in
jae
push
inc
pop
or
xchg
lock
cld
imul
imul
mov
je
mov
ja
jle
iret
repz
scas
jp
or
push
bound
in
ffree
jp
inc
hlt
push
push
sbb
fidivr
shr
shl
pop
inc
push
adc
jae
icebp
xchg
pop
fimul
out
rcl
cld
(bad)
loope
sub
xlat
das
jnp
dec
imul
mov
aad
int3
dec
in
adc
cmc
dec
sahf
add
repz
fs
out
dec
push
dec
mov
cs
and
aad
cmp
ret
out
xor
leave
in
call
dec
repz
push
lahf
out
dec
clc
ficomp
mov
sub
test
sbb
fild
pop
(bad)
fstp
out
push
push
lods
jnp
adc
push
cmc
dec
lahf
nop
pop
jnp
add
sbb
xchg
adc
fsubr
inc
lods
push
aad
sbb
push
mov
dec
lods
popf
repz
fdivr
dec
adc
test
retf
pusha
in
mov
icebp
inc
sbb
cmc
pop
cmp
in
lods
in
jg
call
dec
test
inc
sub
mov
pop
fstp
sbb
jb
pushf
pop
fst
adc
cmp
and
inc
les
cmc
inc
popa
cmp
jmp
inc
loopne
push
jecxz
ret
adc
cmps
pop
dec
push
add
retf
repnz
jp
cmps
add
or
shr
sbb
dec
les
cdq
add
mov
out
jecxz
popf
out
mov
clc
data16
fucomp
push
leave
pop
(bad)
aad
xchg
cld
adc
cmp
rol
int3
fnsave
pushf
pop
shl
rcl
dec
adc
ss
xchg
inc
cld
pop
cmc
test
(bad)
outs
mov
mov
std
jge
jl
out
sti
mov
pop
ins
rol
xchg
push
mov
fiadd
pop
(bad)
mov
adc
pop
aam
jnp
mov
into
cmps
fstp
movs
push
cmp
sbb
(bad)
xchg
fist
stc
int3
in
call
xor
xchg
retf
mov
xchg
sqrtps
lds
lea
repz
push
pop
jle
loopne
inc
fisub
ins
(bad)
mov
pop
imul
xchg
sub
or
bound
or
das
or
out
mov
mov
push
nop
punpckhwd
push
scas
cs
pop
push
popf
cmp
fidivr
cmp
fst
getsec
test
in
sub
out
shld
xor
mov
and
xchg
dec
mov
or
les
sub
aad
movs
sbb
xor
and
out
stos
sahf
and
adc
fistp
mov
retf
ins
std
sbb
add
push
xlat
aas
push
aad
inc
test
push
loope
into
cmp
popf
pop
in
std
movs
scas
mov
mov
jge
out
jb
lods
and
ins
sub
fistp
es
addr16
pop
(bad)
sbb
mov
out
xchg
fimul
mov
pop
jge
fcmovnu
xor
(bad)
or
lods
sbb
sub
fld
and
cmp
test
sbb
push
loope
int
daa
hlt
sbb
mov
stos
out
dec
mov
loope
idiv
cs
mov
cmp
inc
hlt
out
js
xchg
mov
repnz
movs
sbb
sbb
xchg
imul
mov
jno
(bad)
mov
sti
cdq
scas
inc
xor
or
shl
and
xchg
bound
mov
out
pop
popf
clc
mov
push
leave
fisttp
in
xchg
fdiv
cmp
call
xchg
inc
mov
dec
rcl
mov
out
fidiv
and
shl
retf
pop
addr16
cdq
sub
int
aas
dec
xor
xlat
push
sbb
push
fld
icebp
out
fcmovne
imul
sbb
adc
int
fist
xor
mov
and
movs
cmps
cmc
pop
or
cli
addr16
pop
and
daa
mov
icebp
mul
retf
mov
lock
shr
pop
mov
pop
adc
pop
retf
xchg
std
fnstcw
je
adc
clc
jmp
jg
lea
jmp
in
std
iret
push
cdq
stc
sub
out
call
(bad)
fmul
fwait
inc
(bad)
mov
push
pop
out
pop
fidivr
cld
fimul
and
in
pop
push
outs
mov
mov
mov
cwde
repnz
add
pop
imul
arpl
mov
aam
dec
inc
cmp
lea
cmps
lods
pop
pop
fsub
imul
dec
fcomp
fwait
xor
ror
scas
adc
pusha
xor
pop
std
dec
inc
pusha
xor
aad
imul
dec
xchg
mov
inc
stos
lock
mov
add
pop
ins
or
outs
push
mov
or
sbb
add
fs
dec
lock
mov
pop
fcomi
popf
sahf
leave
fs
stc
mov
mov
fs
movs
mov
pop
jbe
jle
in
push
cmp
push
fnstsw
xchg
jne
fsub
cwde
sub
fisub
mov
repz
pop
test
ret
rcr
sub
mov
jns
cmp
(bad)
repnz
in
shr
or
jmp
repz
popf
fld
pusha
mov
aam
popf
sbb
fnsave
lea
es
in
pop
setg
lahf
mov
mov
xchg
cmps
jp
dec
jge
inc
into
sti
int3
js
adc
call
in
sbb
fcom
mov
xlat
cmp
rcl
dec
pushf
and
mov
jns
jno
(bad)
ja
add
cwde
sbb
cmp
nop
(bad)
xor
sti
jmp
pop
hlt
hlt
and
add
mov
dec
mov
push
cmp
sbb
xlat
imul
jecxz
pop
sbb
pop
xchg
cmc
std
pop
xchg
popa
(bad)
mov
mov
push
adc
push
cdq
sbb
and
fisttp
adc
and
in
mov
hlt
(bad)
bound
xchg
leave
popf
fucom
fwait
leave
(bad)
inc
dec
cmp
aam
jge
rcr
ret
add
pop
fdiv
shl
in
mov
cmp
loop
fwait
std
xor
adc
scas
cld
loopne
hlt
ins
retf
sbb
sbb
inc
pop
xchg
sti
icebp
sub
fwait
jmp
mov
inc
adc
pop
pop
cmp
out
add
scas
cmp
cmc
adc
xchg
adc
fild
fidiv
jb
jp
add
outs
fcmovne
add
cdq
(bad)
fstp
fnstsw
xchg
int
inc
les
clc
popf
fisttp
inc
int3
pusha
arpl
aad
stc
imul
cmp
or
or
jno
sbb
add
in
pop
cmc
jle
hlt
pop
mov
add
fwait
in
enter
cmp
in
jns
jno
out
es
in
cli
test
rcl
scas
jecxz
jnp
adc
mov
(bad)
mov
dec
cmp
mov
jo
mov
rol
jo
lods
nop
lods
pop
mov
cmp
lahf
mov
mov
pop
mov
mov
in
adc
shr
sbb
ins
in
mov
inc
(bad)
sub
dec
push
mov
movs
jmp
add
xor
mov
in
imul
inc
in
xor
enter
lods
pop
sbb
mov
hlt
cmp
shl
mov
jp
ret
or
jne
inc
or
lods
pop
cli
cmc
fimul
(bad)
adc
add
lahf
pop
dec
(bad)
pop
push
fisub
(bad)
cmp
rcr
cld
stc
or
into
mov
fwait
jno
idiv
mov
stc
jne
imul
retf
fsubr
std
inc
stc
mov
sbb
shr
add
lahf
mov
or
mov
pop
dec
or
push
aam
inc
(bad)
push
or
sbb
jle
xor
aam
(bad)
or
fstp
adc
sbb
mov
dec
jmp
sahf
mov
mov
cmp
(bad)
fcomp
movs
add
xor
mov
lock
in
(bad)
mov
cmps
jbe
push
fmul
popf
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
push
add
and
add
add
movs
pop
add
and
jb
outs
addr16
add
add
push
add
jl
add
and
add
add
adc
add
and
dec
inc
add
add
add
js
add
and
outs
bound
add
add
add
add
add
push
adc
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
push
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
pop
add
add
add
xchg
add
cmps
add
lods
add
mov
jmp
add
add
add
xor
xchg
add
add
xchg
add
add
add
add
add
push
outs
push
push
add
push
outs
push
push
add
push
outs
push
push
add
pop
outs
push
push
add
outs
push
push
add
outs
push
push
add
outs
push
add
add
add
add
add
add
add
add
add
sub
aaa
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
jg
or
add
add
and
xor
xor
add
cmp
xor
jl
inc
add
add
add
add
add
sbb
add
add
add
push
sbb
add
add
add
adc
clc
add
add
add
adc
inc
sbb
add
movs
and
add
add
or
add
adc
dec
add
and
add
add
or
add
add
and
add
add
mov
arpl
add
or
add
add
inc
add
add
add
add
add
add
add
add
add
inc
add
add
add
dec
and
add
add
add
add
add
and
add
add
add
add
and
add
add
sbb
add
add
or
add
and
add
add
sbb
add
add
sbb
add
and
add
add
add
add
add
mov
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
sbb
mov
arpl
sbb
mov
add
add
sbb
aam
jno
jns
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
and
xor
ds
dec
add
mov
add
add
add
add
add
add
repz
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cs
add
cs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
stos
add
sub
rol
inc
add
add
add
add
add
sbb
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
stos
add
sub
rol
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
imul
add
cmc
add
bound
mov
add
add
push
add
add
add
call
add
add
cmps
add
add
xor
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jne
mov
xlat
add
add
add
add
add
add
add
or
or
push
add
add
add
add
add
add
add
add
or
add
add
or
add
or
adc
add
add
add
add
add
jmp
add
add
add
add
push
add
add
add
add
adc
or
lock
add
add
add
add
add
add
add
add
add
add
add
cmp
outs
fs
gs
arpl
ins
imul
outs
jae
data16
push
imul
jae
arpl
dec
jns
jo
ins
imul
add
add
inc
outs
ins
jo
je
jb
dec
jns
jb
push
arpl
jns
bound
jb
imul
jb
popa
fs
popa
gs
bound
arpl
outs
jbe
fs
xor
jecxz
xchg
adc
jb
jae
data16
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
jo
imul
inc
popa
jae
add
arpl
add
arpl
jae
data16
push
imul
jae
arpl
inc
gs
arpl
add
ins
jo
je
jb
push
jns
je
ins
add
push
arpl
arpl
outs
jb
addr16
inc
outs
ins
jo
je
jb
ins
pop
inc
outs
ins
jo
je
jb
bound
arpl
outs
jbe
fs
addr16
inc
jo
ins
imul
add
inc
jo
dec
bound
arpl
outs
jbe
fs
push
jae
jb
addr16
push
jae
jb
ins
pop
push
jae
jb
bound
arpl
outs
jbe
fs
addr16
push
bound
jb
imul
dec
jns
bound
jb
imul
arpl
outs
jbe
fs
inc
jo
ins
imul
add
bound
jb
imul
jne
ins
jae
outs
add
je
popa
jae
inc
outs
fs
add
je
jns
add
je
imul
popa
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
outs
jae
popa
outs
arpl
inc
imul
pop
dec
outs
jae
popa
outs
arpl
pop
add
je
inc
gs
outs
jae
popa
outs
arpl
ins
pop
push
push
push
je
je
arpl
ins
jne
add
je
outs
jae
popa
outs
arpl
dec
popa
imul
sub
mov
jecxz
mov
or
xchg
and
sbb
inc
outs
ins
jo
outs
outs
je
outs
fs
add
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
imul
jb
bound
add
arpl
jae
data16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
ins
jo
gs
outs
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
gs
jo
jb
add
je
bound
arpl
ins
jne
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
jbe
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
dec
jns
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
gs
fs
je
je
arpl
je
imul
outs
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
imul
js
gs
imul
add
jb
popa
jns
push
je
imul
outs
add
outs
jbe
jb
add
outs
ins
inc
popa
jae
ss
je
imul
dec
popa
je
inc
imul
dec
popa
je
inc
gs
push
jb
push
arpl
je
add
je
jb
push
arpl
jb
jb
inc
ins
gs
jb
jb
push
arpl
jb
jb
push
outs
inc
push
jb
jns
addr16
dec
outs
addr16
add
popa
jb
push
outs
inc
push
jns
je
ins
cs
dec
add
ins
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
ins
popa
je
push
je
gs
ins
add
jb
popa
ins
add
ins
jo
gs
imul
add
je
add
je
xor
inc
outs
outs
ins
gs
outs
add
gs
gs
outs
ins
jo
gs
dec
jo
jb
je
jb
add
outs
imul
outs
ins
jo
jb
dec
bound
arpl
gs
je
jb
dec
popa
je
inc
popa
ins
ins
add
inc
push
push
inc
je
jb
bound
gs
or
xchg
in
mov
push
gs
jne
arpl
cs
jae
jne
arpl
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
imul
jne
add
jae
ins
bound
jne
je
jb
inc
je
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
imul
outs
arpl
dec
dec
xor
xor
xor
xor
add
pop
push
dec
dec
xor
xor
xor
xor
cs
add
add
add
dec
add
inc
add
push
add
add
sub
pop
add
add
add
xor
add
dec
add
add
push
add
data16
add
xor
push
add
jae
add
pop
add
xor
popa
add
jno
jns
add
dec
add
push
add
push
add
ins
add
bound
push
add
add
dec
add
dec
add
dec
add
inc
add
push
add
push
add
ins
add
push
add
jbe
push
add
add
inc
add
ins
add
jo
add
imul
push
add
add
inc
add
add
inc
add
push
add
jo
inc
add
push
add
push
add
push
add
jbe
inc
add
dec
add
push
add
xor
inc
add
add
add
add
outs
add
dec
add
jo
dec
add
das
add
cmp
das
add
cmp
add
add
add
dec
add
jp
ins
add
add
add
add
add
add
add
cmp
ja
imul
add
add
add
add
inc
add
inc
add
inc
add
arpl
data16
add
push
add
dec
add
dec
add
add
outs
add
das
add
dec
add
inc
add
arpl
das
add
jb
add
data16
push
add
add
dec
add
aaa
add
add
outs
add
jbe
push
add
push
add
add
jne
bound
jp
add
xor
cmp
dec
add
dec
add
push
add
add
js
add
inc
add
add
js
data16
inc
add
add
add
add
sub
je
arpl
xor
js
xor
bound
xor
push
add
add
push
add
add
add
add
push
add
add
dec
add
outs
add
imul
data16
jbe
js
js
push
add
add
add
add
xor
imul
js
inc
add
inc
add
imul
push
add
add
add
add
inc
add
add
push
add
push
add
add
push
add
outs
add
aaa
add
push
add
add
bound
add
outs
add
popa
add
ins
add
add
add
cmp
add
dec
add
add
ja
add
js
jns
add
ins
add
add
outs
add
jbe
jno
xor
push
add
jbe
je
pop
add
dec
add
inc
add
add
imul
add
sub
arpl
ja
inc
add
add
inc
add
add
xor
dec
add
imul
xor
add
jo
add
push
add
add
dec
add
jae
je
add
add
xor
inc
add
dec
add
add
add
push
jae
jne
dec
add
push
add
add
xor
inc
add
xor
jae
sub
ins
add
add
add
add
add
dec
add
push
add
add
add
add
add
add
xor
outs
add
cmp
jb
xor
inc
add
ins
add
inc
add
pop
add
jp
ins
add
dec
add
add
jbe
sub
pop
add
jb
dec
add
push
add
add
jp
arpl
bound
data16
das
add
pop
add
dec
add
pop
add
add
add
je
dec
add
push
add
add
ja
push
add
je
inc
add
add
xor
ja
inc
add
add
and
add
ja
outs
add
add
add
inc
add
dec
add
cmp
imul
add
add
dec
add
inc
add
outs
add
dec
add
add
add
ins
add
push
add
push
add
push
add
inc
add
add
add
dec
add
add
jns
add
je
inc
add
dec
add
add
inc
add
add
push
inc
add
xor
push
add
add
xor
jns
dec
add
push
add
add
imul
add
add
xor
je
dec
add
push
add
dec
add
add
push
add
js
dec
add
ins
add
add
imul
add
jbe
dec
add
push
add
add
inc
add
outs
add
jp
dec
add
sbb
add
push
add
dec
add
add
add
popa
add
inc
add
add
outs
add
add
add
inc
add
js
push
add
add
inc
add
push
add
inc
add
dec
add
xor
outs
add
inc
add
xor
push
add
jne
js
je
inc
add
add
arpl
inc
add
inc
add
dec
add
add
jb
inc
add
add
add
xor
data16
add
push
add
add
inc
add
add
add
jno
push
add
push
add
xor
inc
add
ja
aaa
add
ins
add
inc
add
add
add
jp
jne
cmp
inc
add
inc
add
push
add
inc
add
add
add
add
cmp
dec
add
pop
add
add
pop
add
cmp
push
add
jp
push
add
inc
add
ja
jo
bound
outs
add
outs
add
add
xor
add
add
add
add
push
xor
inc
add
dec
add
outs
add
dec
add
outs
add
add
add
dec
add
add
bound
outs
add
add
dec
add
add
jne
imul
bound
jae
jp
push
add
dec
add
jno
dec
add
add
dec
add
add
push
add
inc
add
add
inc
add
je
js
dec
add
inc
add
and
add
inc
add
add
dec
add
add
jne
imul
inc
add
push
add
popa
add
push
add
arpl
inc
add
imul
add
add
imul
outs
add
push
add
pop
add
add
pop
add
push
add
xor
push
add
xor
push
add
aaa
add
jo
inc
add
add
add
dec
add
bound
add
inc
add
add
add
jns
push
add
add
jae
dec
add
add
inc
add
push
add
push
add
xor
push
inc
add
jno
inc
add
push
add
outs
add
dec
add
add
dec
add
add
push
add
popa
add
push
add
add
aaa
add
push
add
add
jp
push
add
inc
add
add
push
add
add
dec
add
push
jne
popa
add
add
add
inc
add
pop
add
add
dec
add
add
push
add
inc
add
add
add
ja
push
add
js
inc
add
add
add
inc
add
inc
add
dec
add
dec
add
add
push
add
push
add
bound
jo
pop
add
add
add
add
jp
add
add
add
dec
add
push
add
bound
jo
pop
add
add
jne
ins
add
add
xor
push
add
ins
add
add
add
push
add
inc
add
cmp
pop
add
add
push
add
aaa
add
add
push
add
ja
pop
add
add
add
add
add
jp
inc
add
inc
add
jb
add
jp
jns
inc
add
add
xor
add
add
push
add
je
ins
add
add
sub
push
add
push
add
xor
xor
dec
add
push
add
je
push
add
jbe
dec
add
push
add
dec
add
jae
sub
ins
add
jns
ins
add
push
add
add
inc
add
push
add
add
add
add
add
add
pop
add
xor
jb
dec
add
push
add
add
inc
add
dec
add
popa
add
dec
add
add
xor
ins
add
push
add
popa
add
dec
add
jne
data16
inc
add
jno
inc
add
and
add
add
dec
add
add
pop
add
cmp
ins
add
ja
inc
add
add
jb
dec
add
xor
push
add
outs
add
pop
add
add
add
dec
add
xor
pop
add
push
add
ja
dec
add
push
add
xor
popa
add
xor
jo
dec
add
jns
xor
inc
add
add
xor
add
add
add
add
jo
ins
add
xor
add
add
outs
add
add
dec
add
outs
add
jae
sub
outs
add
add
add
push
add
dec
add
inc
add
add
add
jp
push
add
add
add
push
add
jb
data16
xor
ins
add
push
jae
pop
add
imul
dec
add
adc
add
add
imul
add
add
add
add
xor
dec
add
jae
dec
add
aaa
add
jo
add
xor
cmp
imul
jb
jno
xor
dec
add
arpl
xor
add
popa
add
push
add
js
bound
outs
add
imul
add
xor
dec
add
push
add
xor
inc
add
add
aaa
add
xor
xor
add
jno
jno
inc
add
cmp
imul
add
add
add
outs
add
push
add
dec
add
push
jae
ins
add
inc
add
add
das
add
imul
add
add
dec
add
jns
arpl
dec
add
push
inc
add
add
dec
add
add
add
dec
add
add
dec
add
add
dec
add
je
jae
pop
add
add
dec
add
outs
add
add
dec
add
xor
popa
add
je
dec
add
dec
add
arpl
push
add
push
add
imul
add
push
add
js
cmp
ins
add
imul
add
outs
add
dec
add
add
inc
add
ja
cmp
ins
add
dec
add
outs
add
dec
add
outs
add
add
add
add
popa
add
dec
add
add
add
dec
add
add
inc
add
xor
add
add
popa
add
add
je
ins
add
push
add
push
add
bound
outs
add
jo
inc
add
inc
add
add
dec
add
dec
add
jp
add
bound
push
add
add
xor
dec
add
inc
add
dec
add
add
push
add
inc
add
outs
add
push
add
dec
add
imul
add
xor
add
js
add
jne
push
add
jae
xor
push
add
xor
push
add
dec
add
ins
add
add
imul
add
push
add
pop
add
jno
push
add
add
pop
add
ins
add
dec
add
xor
add
jp
ins
add
imul
jb
inc
add
push
add
jp
jo
dec
add
pop
add
add
dec
add
add
imul
add
push
add
outs
add
add
dec
add
add
sub
ins
add
pop
add
jb
aaa
add
ja
dec
add
imul
add
add
xor
add
push
add
inc
add
push
add
push
add
imul
add
add
add
inc
add
add
jne
dec
add
inc
add
xor
je
xor
xor
push
add
add
add
add
add
push
add
ins
add
add
add
add
jno
jns
jp
add
add
push
add
dec
add
xor
dec
add
jns
popa
add
add
add
bound
imul
add
push
jne
add
add
add
ins
add
add
add
add
xor
inc
add
add
jo
inc
add
add
sbb
dec
add
cmp
add
cmp
push
add
push
popa
add
xor
ja
add
add
imul
add
bound
inc
add
add
add
push
add
jne
inc
add
jp
pop
add
dec
add
add
dec
add
push
add
add
je
arpl
push
add
add
add
cmp
push
add
inc
add
add
add
jno
xor
ins
add
outs
add
push
add
push
add
add
sub
cmp
das
add
add
pop
add
add
inc
add
add
add
popa
add
dec
add
bound
push
add
xor
inc
add
xor
dec
add
push
xor
add
xor
inc
add
inc
add
jb
popa
add
je
push
add
jne
xor
dec
add
ins
add
add
inc
add
jae
js
xor
add
add
cmp
cmp
push
ins
add
xor
add
dec
add
jbe
inc
add
add
js
pop
add
inc
add
add
jae
arpl
xor
add
js
add
cmp
pop
add
jae
jae
pop
add
aaa
add
add
add
add
push
add
add
ja
sub
dec
add
add
add
imul
add
data16
dec
add
sub
imul
push
add
add
push
add
js
jbe
cmp
inc
add
push
add
imul
add
cmp
add
ja
add
jb
add
sub
inc
add
inc
add
cmp
add
arpl
inc
add
add
jbe
jne
jo
push
add
add
add
add
add
dec
add
dec
add
push
add
xor
arpl
ins
add
jne
imul
add
cmp
add
add
jb
pop
add
dec
add
add
pop
add
push
add
add
pop
add
dec
add
inc
add
dec
add
arpl
xor
push
add
add
xor
jne
dec
add
add
dec
add
add
add
add
dec
add
jne
xor
dec
add
add
dec
add
aaa
add
inc
add
dec
add
ins
add
add
bound
imul
add
pop
add
jbe
inc
add
add
dec
add
inc
add
add
add
add
push
add
dec
add
dec
add
add
imul
add
add
jno
ins
add
push
add
add
add
popa
add
jno
xor
outs
add
push
add
add
inc
add
pop
add
js
push
add
jns
imul
add
ja
sub
inc
add
add
add
push
add
inc
add
push
add
add
add
add
add
add
add
add
cmp
data16
inc
add
push
add
add
add
ja
jb
outs
add
dec
add
xor
add
jns
jb
inc
add
bound
push
add
push
add
outs
inc
add
add
add
dec
add
add
outs
add
xor
push
add
add
push
add
xor
ja
outs
add
inc
add
push
add
ja
pop
add
push
add
arpl
jbe
xor
dec
add
inc
add
pop
add
jns
pop
add
push
add
outs
add
add
inc
add
push
add
cmp
add
push
add
inc
add
add
add
push
add
push
add
add
jb
outs
add
jne
push
add
xor
dec
add
add
add
xor
add
inc
add
dec
add
pop
add
cmp
pop
add
push
add
add
ja
dec
add
bound
add
push
add
add
add
add
dec
add
imul
add
dec
add
inc
add
outs
add
push
add
add
push
add
add
dec
add
dec
add
xor
pop
add
add
outs
add
pop
add
add
inc
add
add
add
pop
add
aaa
add
jae
jbe
cmp
imul
add
jb
jbe
dec
add
outs
add
imul
push
add
das
add
pop
add
inc
add
xor
jae
dec
add
xor
add
outs
add
add
cmp
add
push
add
push
add
add
xor
add
dec
add
inc
add
inc
add
jp
add
inc
add
imul
push
dec
add
push
add
inc
add
add
add
dec
add
xor
ja
pop
add
dec
add
add
add
add
xor
ins
add
dec
add
outs
add
dec
add
pop
add
add
cmp
cmp
xor
imul
add
add
jb
xor
data16
add
add
js
jae
inc
add
sub
inc
add
dec
add
cmp
push
add
jno
dec
add
add
add
push
add
push
add
add
outs
add
add
add
aaa
add
jo
xor
dec
add
push
add
dec
add
add
cmp
add
xor
add
add
je
dec
add
js
outs
add
jo
add
add
dec
add
add
cmp
das
add
outs
add
dec
add
cmp
push
add
imul
add
add
outs
add
jbe
inc
add
dec
add
outs
add
add
inc
add
inc
add
dec
add
push
add
ins
add
dec
add
je
push
add
dec
add
js
jo
jp
dec
add
popa
add
add
jp
ins
add
outs
add
jbe
inc
add
dec
add
add
dec
add
dec
add
bound
add
add
js
jbe
inc
add
inc
add
inc
add
add
ja
jbe
dec
add
cmp
xor
add
aaa
add
data16
add
add
arpl
xor
pop
add
add
push
add
jae
add
add
add
jp
push
add
push
add
add
inc
add
xor
add
popa
add
add
add
add
dec
add
add
arpl
dec
add
add
add
popa
add
add
outs
add
dec
add
add
bound
add
inc
add
cmp
push
add
inc
add
add
jne
xor
push
add
das
add
dec
add
add
js
jp
inc
add
inc
add
dec
add
push
add
dec
add
ins
add
sub
add
add
js
jp
xor
add
arpl
cmp
je
inc
add
ja
jns
arpl
push
add
jno
das
add
dec
add
dec
add
add
add
sbb
add
add
push
add
push
add
push
add
jp
pop
add
je
je
push
add
outs
add
xor
add
jo
xor
dec
add
add
ins
add
outs
add
outs
add
push
add
push
add
add
data16
bound
ins
add
xor
jae
je
dec
add
ins
add
add
data16
ins
add
jo
arpl
cmp
jbe
outs
add
arpl
inc
add
arpl
pop
add
add
dec
add
xor
add
add
add
add
add
add
xor
bound
xor
ins
add
das
add
imul
bound
popa
add
ja
jno
dec
add
aaa
add
inc
add
add
outs
add
push
add
push
add
add
push
cmp
ins
add
xor
push
add
imul
cmp
push
add
jae
jb
das
add
aaa
add
add
jp
inc
add
ins
add
dec
add
cmp
push
add
add
xor
dec
add
push
add
jno
bound
pop
add
ins
add
push
inc
add
jae
imul
add
xor
js
xor
add
push
add
js
inc
add
add
push
add
jo
push
jb
cmp
ins
add
push
add
add
push
add
dec
add
push
add
bound
push
add
arpl
jo
inc
add
pop
add
das
add
add
add
add
push
add
add
imul
jno
push
add
add
imul
jae
je
push
add
js
dec
add
add
add
arpl
add
arpl
jae
push
add
xor
dec
add
inc
add
add
add
dec
add
pop
add
inc
add
add
dec
add
ins
add
ins
add
ins
add
aaa
add
outs
add
ins
add
je
inc
add
add
add
push
add
push
add
inc
add
jbe
xor
push
add
add
add
outs
add
add
push
add
add
add
add
add
pop
add
add
cmp
add
add
push
add
add
jns
xor
inc
add
jne
add
xor
ja
push
jne
imul
add
arpl
outs
add
outs
add
pop
add
add
push
add
push
add
add
add
dec
add
add
imul
add
imul
push
add
jne
jp
inc
add
xor
sub
popa
add
add
add
add
add
pop
add
das
add
xor
inc
add
aaa
add
xor
add
sub
push
add
dec
add
add
data16
xor
push
add
arpl
jb
data16
add
add
add
inc
add
add
add
inc
add
das
add
add
jb
pop
add
push
add
add
add
imul
jno
dec
add
inc
add
adc
add
add
inc
add
add
add
dec
add
dec
add
outs
add
push
add
add
inc
add
add
js
inc
add
aaa
add
xor
jns
popa
add
push
push
add
jae
push
cmp
jp
popa
add
add
outs
add
add
push
add
jbe
jno
push
add
xor
add
popa
add
xor
jno
push
add
push
add
push
add
popa
add
sub
push
add
add
add
push
add
add
add
add
ins
add
push
add
add
pop
add
add
pop
add
add
add
push
add
dec
add
push
add
add
add
add
das
add
add
push
add
ins
add
ins
add
push
add
jo
push
add
jno
das
add
data16
data16
xor
push
add
add
push
add
imul
add
jb
xor
inc
add
cmp
aaa
add
cmp
push
add
add
dec
add
add
outs
add
dec
add
dec
add
data16
dec
add
inc
add
add
bound
inc
add
popa
add
add
push
add
add
add
jae
pop
add
add
cmp
imul
add
sub
xor
add
add
add
add
ja
jne
xor
add
add
add
pop
add
dec
add
add
add
add
je
inc
add
js
cmp
aaa
add
add
push
push
add
add
jno
pop
add
cmp
popa
add
add
add
add
js
outs
add
cmp
push
add
push
jbe
jp
pop
add
add
push
add
add
add
pop
add
imul
add
add
inc
add
imul
add
pop
add
add
das
add
dec
add
push
add
add
outs
add
outs
add
jb
push
add
sub
bound
pop
add
jne
js
sub
bound
add
add
pop
add
js
xor
dec
add
push
add
add
sub
pop
add
dec
add
inc
add
add
jne
aaa
add
inc
add
jp
inc
add
add
push
add
pop
add
imul
add
jp
add
dec
add
js
inc
add
aaa
add
inc
add
add
dec
add
add
outs
add
dec
add
add
pop
add
cmp
dec
add
dec
add
add
imul
outs
add
cmp
data16
pop
add
dec
add
popa
add
add
add
push
add
arpl
dec
add
add
push
add
xor
push
add
inc
add
arpl
push
add
add
je
ins
add
add
add
add
ins
add
add
jae
xor
jbe
inc
add
popa
add
add
imul
add
xor
je
dec
add
add
push
add
add
add
and
add
sub
xor
xor
push
add
xor
jno
inc
add
add
xor
inc
add
outs
add
add
inc
add
dec
add
add
push
add
sub
add
xor
add
add
dec
add
dec
add
add
push
add
das
add
push
add
jb
das
add
add
jno
jae
cmp
dec
add
dec
add
dec
add
jne
pop
add
pop
add
dec
add
add
outs
add
pop
add
add
push
add
jne
outs
add
add
xor
add
add
push
add
jne
pop
add
add
dec
add
push
add
add
add
jb
add
inc
add
dec
add
add
push
add
add
ins
add
add
dec
add
add
xor
cmp
inc
add
jo
dec
add
xor
jno
jb
popa
add
xor
push
add
add
outs
add
add
xor
add
add
add
jo
xor
jne
jb
popa
add
dec
add
jne
jbe
outs
add
xor
jb
jb
popa
add
dec
add
imul
push
add
dec
add
jno
js
jbe
dec
add
jb
dec
add
add
jae
push
add
add
jb
dec
add
push
add
dec
add
cmp
bound
outs
add
inc
add
data16
xor
add
add
dec
add
xor
pop
add
add
dec
add
pop
add
add
inc
add
push
add
add
jp
inc
add
add
inc
add
xor
jne
sub
pop
add
imul
push
push
add
add
push
add
add
ja
pop
add
pop
add
jbe
cmp
push
add
dec
add
outs
add
dec
add
jp
jo
push
add
add
add
ja
data16
imul
add
xor
pop
add
push
add
outs
add
add
add
jno
dec
add
add
xor
add
ins
add
push
add
add
dec
add
cmp
inc
add
add
inc
add
push
add
add
xor
add
add
add
add
add
add
add
pop
add
js
pop
add
add
push
add
dec
add
add
pop
add
das
add
arpl
jno
dec
add
dec
add
push
add
jbe
aaa
add
push
add
push
add
xor
dec
add
pop
add
add
jae
ins
add
inc
add
jo
aaa
add
add
add
jno
dec
add
jne
xor
add
inc
add
outs
add
push
add
inc
add
sub
bound
add
xor
jne
inc
add
add
xor
popa
add
push
xor
cmp
arpl
pop
add
sub
push
add
outs
add
xor
inc
add
inc
add
xor
add
data16
xor
dec
add
inc
add
xor
sub
inc
add
push
add
add
add
imul
add
push
add
push
add
add
ins
add
add
push
add
xor
add
add
add
push
add
sub
data16
pop
add
xor
add
ins
add
bound
xor
push
add
add
cmp
jno
ins
add
xor
jae
dec
add
add
xor
ins
add
arpl
xor
inc
add
add
dec
add
outs
add
add
push
add
add
add
add
imul
js
dec
add
push
add
add
add
add
xor
inc
add
jne
outs
add
add
inc
add
arpl
push
add
inc
add
je
pop
add
add
cmp
je
push
add
dec
add
add
jb
jo
xor
push
add
add
bound
jno
push
add
add
xor
xor
inc
add
imul
add
add
imul
push
add
xor
add
jb
xor
push
add
dec
add
jo
dec
add
add
js
dec
add
add
jp
jno
jne
jno
jns
inc
add
imul
ja
add
dec
add
add
xor
jno
arpl
add
push
add
add
push
add
add
dec
add
add
outs
add
add
outs
add
add
inc
add
add
inc
add
xor
add
inc
add
ins
add
cmp
push
add
cmp
add
push
add
je
xor
add
add
popa
add
add
dec
add
xor
jae
add
add
add
aaa
add
push
das
add
inc
add
dec
add
add
pop
add
popa
add
jno
inc
add
add
outs
add
push
add
add
xor
inc
add
inc
add
bound
bound
outs
add
data16
add
add
ins
add
add
add
add
add
dec
add
ins
add
add
add
xor
dec
add
inc
add
xor
inc
add
push
add
inc
add
jns
pop
add
push
add
push
add
jb
jo
dec
add
jp
xor
cmp
outs
add
pop
add
push
add
add
jno
xor
pop
add
add
push
add
add
pop
add
cmp
push
add
add
aaa
add
add
add
add
outs
add
xor
push
add
data16
push
add
push
add
je
inc
add
add
add
xor
add
jns
pop
add
imul
mov
add
dec
add
sub
jns
xor
jp
push
add
add
jp
inc
add
push
add
add
push
add
inc
add
xor
dec
add
push
add
jbe
jo
dec
add
js
bound
pop
add
add
xor
ins
add
inc
add
inc
add
add
pop
add
imul
push
add
dec
add
inc
add
dec
add
jo
dec
add
xor
add
xor
add
xor
jp
jo
ins
add
je
pop
add
add
xor
push
add
add
add
jae
outs
add
inc
add
js
add
add
add
push
add
add
add
xor
popa
add
inc
add
pop
add
push
add
jae
add
aaa
add
dec
add
inc
add
pop
add
ja
xor
xor
add
add
imul
jae
xor
push
add
bound
inc
add
xor
dec
add
add
xor
aaa
add
add
jae
xor
dec
add
add
add
add
outs
add
add
jae
imul
dec
add
pop
add
dec
add
add
dec
add
je
outs
add
pop
add
add
xor
inc
add
inc
add
bound
xor
jno
bound
dec
add
add
add
add
jp
jbe
outs
add
add
or
inc
add
aaa
add
push
add
dec
add
xor
dec
add
pop
add
add
jbe
dec
add
add
js
dec
add
dec
add
inc
add
cmp
dec
add
je
dec
add
popa
add
data16
dec
add
add
xor
je
je
dec
add
add
jns
jns
dec
add
pop
add
ins
add
inc
add
outs
add
add
pop
add
add
dec
add
aaa
add
popa
add
push
add
pop
add
jns
dec
add
bound
bound
inc
add
jbe
js
ja
add
popa
add
add
add
push
add
add
dec
add
je
js
add
push
add
add
inc
add
xor
push
add
push
add
dec
add
bound
inc
add
add
push
add
das
add
add
add
js
xor
pop
add
add
pop
add
cmp
add
add
jp
push
add
xor
add
add
add
cmp
dec
add
add
inc
add
push
add
arpl
dec
add
push
add
add
push
add
cmp
ins
add
jb
inc
add
add
add
dec
add
cmp
js
push
add
imul
push
add
add
jb
imul
add
add
add
add
das
add
push
add
push
add
js
das
add
cmp
je
xor
dec
add
push
add
add
add
dec
add
add
add
xor
outs
add
imul
add
js
cmp
push
add
inc
add
push
add
add
xor
push
add
ja
push
add
ins
add
add
add
xor
aaa
add
inc
add
add
sub
ja
jbe
inc
add
pop
add
jne
add
add
dec
add
push
add
add
add
add
jbe
inc
add
add
dec
add
cmp
push
add
dec
add
add
add
imul
pop
add
inc
add
add
add
pop
add
push
add
add
data16
add
add
cmp
cmp
jns
push
add
add
add
add
jne
push
add
add
add
add
outs
add
add
xor
dec
add
xor
xor
ins
add
outs
add
add
add
dec
add
add
das
add
cmp
push
add
cmp
inc
add
add
dec
add
pop
add
data16
inc
add
jbe
pop
add
pop
add
sub
imul
cmp
pop
add
add
add
js
ins
add
ins
add
push
dec
add
je
add
jo
add
ins
add
arpl
jno
inc
add
push
add
add
dec
add
xor
add
add
xor
outs
add
xor
jo
add
xor
dec
add
cmp
jb
jbe
jb
inc
add
arpl
jne
outs
add
push
add
add
add
add
add
add
cmp
ins
add
inc
add
aaa
add
arpl
outs
add
pop
add
jp
outs
add
imul
add
dec
add
add
jbe
sub
xor
xor
jns
ins
add
pop
add
add
add
dec
add
inc
add
add
imul
add
push
add
dec
add
inc
add
dec
add
dec
add
je
xor
jns
add
add
or
add
ja
inc
add
add
add
add
cmp
xor
push
add
das
add
add
jno
cmp
add
dec
add
push
add
jb
dec
add
add
add
dec
add
jo
inc
add
inc
add
xor
jb
jne
dec
add
add
imul
das
add
das
add
inc
add
push
add
add
xor
inc
add
add
pop
add
add
bound
jb
jo
sub
inc
add
sub
das
add
add
sub
inc
add
add
add
push
add
add
push
add
dec
add
dec
add
add
pop
add
add
dec
add
inc
add
add
add
add
add
add
inc
add
add
jno
push
add
add
add
popa
add
push
add
add
inc
add
add
dec
add
add
jne
xor
add
add
push
add
add
inc
add
push
add
data16
das
add
sub
popa
add
dec
add
dec
add
add
add
add
add
jo
push
add
add
add
dec
add
jo
xor
jo
jo
dec
add
add
imul
add
aaa
add
add
imul
ins
add
add
push
jae
dec
add
push
add
add
dec
add
add
xor
add
add
add
dec
add
add
add
dec
add
add
dec
add
jne
ins
add
add
jp
imul
sub
push
add
inc
add
data16
jns
push
push
sub
dec
add
add
jb
add
sub
xor
xor
sub
jne
xor
add
dec
add
data16
inc
add
js
sub
js
dec
add
add
add
xor
bound
dec
add
jne
pop
add
add
inc
add
add
xor
data16
jne
jo
cmp
xor
das
add
xor
add
pop
add
pop
add
inc
add
dec
add
cmp
add
push
add
das
add
xor
dec
add
add
jp
dec
add
add
arpl
push
add
add
dec
add
popa
add
imul
add
push
add
add
jo
push
add
pop
add
xor
inc
add
dec
add
jne
arpl
jns
jbe
dec
add
push
add
data16
das
add
jno
push
add
add
jb
jo
dec
add
jns
xor
outs
add
xor
add
dec
add
xor
add
outs
add
imul
data16
ins
add
ins
add
add
imul
dec
add
inc
add
add
inc
add
add
add
ins
add
add
pop
add
add
add
inc
add
add
inc
add
dec
add
jp
xor
imul
add
add
push
add
or
dec
add
inc
add
xor
add
outs
add
popa
add
dec
add
data16
dec
add
push
add
ins
add
dec
add
pop
add
cmp
dec
add
xor
outs
add
add
push
add
je
push
dec
add
add
pop
add
outs
add
dec
add
dec
add
add
bound
sub
xor
arpl
inc
add
dec
add
popa
add
add
xor
inc
add
add
cmp
dec
add
inc
add
push
data16
inc
add
push
add
popa
add
imul
push
add
inc
add
jbe
pop
add
xor
dec
add
push
add
ja
add
dec
add
add
inc
add
jb
push
add
add
add
inc
add
dec
add
dec
add
add
dec
add
dec
add
add
xor
inc
add
dec
add
dec
add
pop
add
add
add
dec
add
push
add
push
add
add
add
add
pop
add
push
add
add
add
xor
add
push
add
ja
inc
add
add
jbe
inc
add
xor
inc
add
add
jne
push
add
push
dec
add
jb
add
add
inc
add
add
add
sub
dec
add
add
add
add
add
inc
add
pop
add
push
add
xor
arpl
dec
add
xor
imul
add
xor
cmp
xor
xor
dec
add
add
add
inc
add
add
js
add
pop
add
add
dec
add
pop
add
bound
add
add
jb
xor
push
add
dec
add
jp
jno
jb
inc
add
inc
add
dec
add
inc
add
push
add
arpl
pop
add
jp
outs
add
push
add
pop
add
add
add
add
das
add
add
inc
add
add
pop
add
dec
add
add
arpl
inc
add
dec
add
add
add
add
xor
add
add
jae
ins
add
jo
bound
aaa
add
pop
add
outs
add
dec
add
jbe
add
push
add
inc
add
push
pop
add
add
xor
push
add
ja
dec
add
dec
add
imul
dec
add
inc
add
dec
add
popa
add
inc
add
add
add
push
add
ins
add
dec
add
add
add
inc
add
add
push
add
xor
push
add
data16
add
push
add
ja
pop
add
inc
add
add
dec
add
dec
add
add
add
xor
cmp
dec
add
xor
inc
add
ins
add
imul
jae
ins
add
dec
add
add
push
add
dec
add
popa
add
data16
push
add
dec
add
add
sbb
add
add
add
ins
add
add
push
add
add
add
outs
add
inc
add
bound
jbe
imul
add
outs
add
push
imul
aaa
add
outs
add
jbe
arpl
dec
add
das
add
imul
add
imul
pop
add
push
add
push
add
add
add
add
add
data16
imul
jo
add
jae
pop
add
push
add
xor
inc
add
pop
add
inc
add
push
add
outs
add
inc
add
cmp
data16
jns
push
add
add
add
push
add
aaa
add
inc
add
aaa
add
add
popa
add
add
jo
add
add
add
xor
ins
add
push
add
jno
dec
add
jb
push
dec
add
add
das
add
inc
add
add
xor
jb
push
add
add
das
add
add
dec
add
inc
add
add
add
add
add
add
push
add
dec
add
ja
push
add
inc
add
push
add
add
je
imul
push
add
add
push
add
xor
bound
dec
add
pop
add
jo
inc
add
jg
add
dec
add
jo
ja
dec
add
push
add
add
imul
add
js
inc
add
xor
add
outs
add
arpl
add
push
add
pop
add
jns
dec
add
jo
imul
imul
add
add
dec
add
xor
push
add
xor
imul
add
add
add
jno
jne
popa
add
jno
jne
push
add
push
add
sub
add
jns
pop
add
pop
add
pop
add
add
dec
add
add
push
add
xor
push
add
pop
add
bound
jno
sub
push
add
add
push
add
pop
add
pop
add
push
add
bound
add
add
sub
push
add
jns
push
bound
jno
jne
push
add
add
jb
ins
add
ins
add
xor
push
add
jne
arpl
jb
jne
jns
jb
imul
add
add
jno
pop
add
add
add
arpl
xor
add
push
add
add
ins
add
jb
xor
add
outs
add
cmp
ins
add
add
inc
add
add
xor
dec
add
push
add
jns
inc
add
jbe
imul
add
add
jb
pop
add
aaa
add
inc
add
add
add
jns
dec
add
ins
add
inc
add
imul
add
add
jb
xor
add
imul
add
add
bound
jo
inc
add
add
data16
push
add
jbe
imul
add
add
add
imul
arpl
xor
pop
add
add
add
je
push
add
push
add
jb
push
add
xor
add
add
add
inc
add
data16
pop
add
add
add
dec
add
cmp
das
add
add
jb
imul
data16
add
add
push
add
bound
ins
add
xor
aaa
add
xor
ins
add
xor
arpl
push
add
ja
xor
add
bound
xor
push
add
add
add
data16
add
cmp
inc
add
add
add
push
add
push
add
xor
dec
add
dec
add
data16
add
dec
add
das
add
jbe
pop
add
add
dec
add
add
add
imul
add
outs
add
outs
add
xor
xor
imul
xor
add
push
pop
add
add
add
dec
add
inc
add
pop
add
ins
add
dec
add
jae
xor
xor
add
das
add
pop
add
push
add
add
push
bound
jae
jp
pop
add
add
aaa
add
add
outs
add
add
cmp
push
outs
add
add
add
add
je
inc
add
push
add
inc
add
jo
xor
jne
inc
add
add
jno
inc
add
bound
popa
add
jbe
je
jo
inc
add
add
add
data16
add
jb
push
add
add
je
jbe
xor
xor
jp
je
pop
add
outs
add
sub
pop
add
xor
jb
jns
add
add
push
add
push
add
aaa
add
add
add
bound
push
add
data16
add
add
dec
add
jb
dec
add
je
cmp
push
add
xor
add
add
push
add
dec
add
add
xor
add
jp
inc
add
add
xor
aaa
add
add
aaa
add
jns
aaa
add
push
add
xor
add
outs
add
add
add
add
das
add
push
add
dec
add
add
ins
add
add
add
add
add
pop
add
add
push
add
and
add
add
add
add
add
xor
add
add
push
add
add
data16
add
ins
add
add
das
add
xor
dec
add
dec
add
add
jp
jb
jbe
je
dec
add
push
jbe
pop
add
add
arpl
xor
data16
add
add
js
push
add
cmp
sub
add
push
jno
xor
add
inc
add
xor
add
cmp
dec
add
popa
add
jns
push
add
add
add
push
add
dec
add
imul
push
add
jno
push
inc
add
add
inc
add
add
xor
add
add
add
jne
push
add
imul
push
add
inc
add
add
push
xor
dec
add
push
add
push
add
inc
add
data16
jns
arpl
popa
add
jp
data16
push
add
xor
dec
add
ins
add
add
xor
add
xor
imul
add
dec
add
dec
add
cmp
cmp
outs
add
js
inc
add
add
das
add
push
add
add
add
add
sub
push
add
xor
push
add
add
bound
je
inc
add
add
add
bound
pop
add
dec
add
add
inc
add
add
xor
add
add
add
add
add
das
add
xor
add
add
sub
inc
add
pop
add
sub
dec
add
arpl
pop
add
jb
add
push
add
add
add
inc
add
add
imul
dec
add
add
dec
add
push
add
push
add
push
add
add
jae
jb
ja
imul
ins
add
add
xor
push
add
arpl
jae
push
add
add
push
add
outs
add
data16
xor
ins
add
add
push
add
add
aaa
add
das
add
add
add
push
add
imul
add
inc
add
add
outs
add
jno
xor
add
add
xor
push
add
add
jno
push
add
xor
jae
cmp
inc
add
dec
add
add
add
dec
add
add
add
push
add
inc
add
pop
add
add
js
inc
add
add
jns
push
add
add
xor
popa
add
cmp
xor
das
add
jbe
outs
add
jp
je
add
data16
push
add
add
data16
outs
add
push
cmp
inc
add
jne
push
add
push
add
arpl
push
add
cmp
add
das
add
xor
dec
add
inc
add
inc
add
aaa
add
push
add
add
jbe
add
jae
push
add
add
xor
add
add
push
add
xor
push
add
add
pop
add
data16
add
xor
add
add
add
jb
add
jns
dec
add
outs
add
add
push
add
add
add
bound
jb
jno
arpl
jb
xor
add
add
xor
xor
add
dec
add
jae
xor
xor
add
add
add
jbe
push
add
cmp
inc
add
add
jo
xor
dec
add
imul
data16
ins
add
add
aaa
add
imul
inc
add
add
add
add
add
push
add
add
add
cmp
inc
add
add
cmp
inc
add
aaa
add
xor
jb
inc
add
push
cmp
cmp
cmp
popa
add
add
add
data16
add
inc
add
add
bound
data16
push
add
xor
add
add
je
jp
jb
push
add
add
aaa
add
push
add
ins
add
xor
push
add
add
add
js
dec
add
dec
add
dec
add
add
cmp
outs
add
dec
add
add
add
bound
dec
add
push
add
add
add
cmp
jbe
ins
add
push
push
add
add
cmp
push
add
sbb
add
add
cmp
push
add
das
add
add
add
add
add
add
add
add
ins
add
cmp
outs
add
add
inc
add
push
add
data16
pop
add
jb
bound
outs
add
xor
add
js
push
add
push
push
add
push
add
dec
add
ins
add
das
add
xor
je
xor
popa
add
das
add
add
jae
bound
das
add
dec
add
jbe
dec
add
adc
add
add
add
xor
add
add
cmp
add
arpl
ins
add
dec
add
pop
add
add
das
add
add
jae
push
add
add
add
add
add
jae
jb
xor
jae
add
xor
data16
push
add
add
dec
add
push
add
inc
add
data16
jbe
inc
add
add
add
add
pop
add
jae
data16
add
add
add
add
sub
inc
add
pop
add
push
add
pop
add
add
jbe
jae
push
ja
inc
add
pop
add
dec
add
js
bound
add
aaa
add
add
push
add
ins
add
add
push
add
add
imul
add
push
ins
add
dec
add
inc
add
cmp
jp
jbe
dec
add
push
add
push
add
inc
add
push
add
xor
ins
add
jns
jbe
inc
add
add
add
inc
add
ja
jns
xor
add
dec
add
add
das
add
dec
add
dec
add
pop
add
imul
js
push
add
xor
add
add
push
add
jae
outs
add
jb
dec
add
add
jp
dec
add
push
add
je
pop
add
pop
add
add
ins
add
add
xor
imul
jp
pop
add
data16
add
push
add
xor
pop
add
add
cmp
push
add
jne
data16
add
add
push
add
push
add
sub
cmp
outs
add
outs
add
xor
add
jb
pop
add
add
inc
add
add
add
dec
add
inc
add
imul
add
and
inc
add
inc
add
add
dec
add
arpl
pop
add
inc
add
inc
add
add
add
jne
dec
add
add
ins
add
je
push
add
cmp
dec
add
popa
add
push
add
jns
aaa
add
add
add
add
push
add
cmp
push
add
xor
dec
add
dec
add
inc
add
add
aaa
add
xor
dec
add
js
outs
add
cmp
push
add
add
push
add
add
add
push
add
xor
push
add
add
xor
xor
add
je
imul
imul
add
add
add
add
xor
je
jno
je
je
add
add
outs
add
xor
inc
add
add
je
jb
dec
add
add
add
dec
add
jp
popa
add
cmp
push
add
js
inc
add
ins
add
aaa
add
push
add
add
push
add
push
add
dec
add
add
add
push
add
data16
push
add
inc
add
outs
add
xor
push
add
add
imul
add
aaa
add
das
add
add
add
outs
add
dec
add
add
add
add
jp
xor
push
add
add
inc
add
arpl
xor
popa
add
add
outs
add
add
das
add
inc
add
inc
add
add
dec
add
cmp
cmp
cmp
inc
add
add
cmp
inc
add
dec
add
aaa
add
dec
add
popa
add
jns
xor
inc
add
add
jo
imul
inc
add
aaa
add
inc
add
jp
jae
jne
inc
add
add
xor
arpl
pop
add
add
add
cmp
add
jne
push
add
ja
pop
add
dec
add
xor
dec
add
ja
add
add
inc
add
add
outs
add
arpl
dec
add
js
push
add
dec
add
add
add
add
das
add
jne
cmp
inc
add
jns
das
add
add
add
push
add
add
xor
dec
add
cmp
inc
add
imul
add
pop
add
cmp
xor
xor
push
add
push
add
add
xor
data16
push
add
add
add
dec
add
aaa
add
sub
add
jne
dec
add
add
add
popa
add
add
add
add
add
add
arpl
jbe
cmp
inc
add
add
jno
xor
add
add
add
add
add
popa
add
xor
jbe
dec
add
add
add
push
add
push
add
jbe
push
add
add
jb
xor
pop
add
inc
add
add
add
add
jbe
jno
pop
add
je
push
xor
add
js
ins
add
jo
dec
add
add
cmp
pop
add
bound
push
add
ins
add
add
imul
add
add
add
inc
add
je
cmp
ins
add
add
inc
add
add
add
push
dec
add
aaa
add
jne
jb
xor
cmp
dec
add
add
bound
push
add
add
inc
add
xor
dec
add
add
aaa
add
add
xor
jo
add
imul
jae
sub
ins
add
jp
jb
push
add
xor
add
add
xor
add
add
add
add
sub
popa
add
add
add
add
pop
add
push
add
pop
add
dec
add
add
jbe
add
add
push
add
add
xor
add
jp
push
cmp
jns
jae
jbe
das
add
jns
dec
add
add
push
add
cmp
imul
add
outs
add
dec
add
add
inc
add
add
dec
add
add
inc
add
add
je
sub
cmp
bound
xor
push
add
inc
add
add
outs
add
add
pop
add
jb
ins
add
push
add
add
add
jb
jne
jns
pop
add
cmp
add
inc
add
add
adc
cmp
bound
dec
add
add
add
dec
add
inc
add
add
popa
add
push
add
jns
sub
xor
add
add
add
add
add
add
jo
ja
inc
add
das
add
jns
dec
add
ins
add
xor
bound
xor
push
add
push
add
jae
push
cmp
dec
add
ins
add
inc
add
add
data16
add
jp
dec
add
add
add
add
push
add
arpl
pop
add
pop
add
add
add
add
add
add
outs
add
add
add
das
add
add
cmp
sub
arpl
inc
add
add
ja
xor
pop
add
ins
add
outs
add
ins
add
dec
add
jb
bound
add
xor
add
jbe
push
dec
add
add
jno
push
xor
push
add
add
dec
add
pop
add
push
add
imul
add
add
add
xor
jno
arpl
push
add
push
add
jo
push
add
jp
je
jp
push
add
aaa
add
inc
add
dec
add
add
xor
jbe
inc
add
jp
arpl
inc
add
inc
add
push
add
add
jp
jbe
push
add
jo
jno
jo
xor
add
add
bound
inc
add
popa
add
imul
add
inc
add
inc
add
cmp
jbe
jns
push
add
inc
add
jae
jb
inc
add
add
add
add
inc
add
xor
inc
add
push
add
push
add
add
add
jns
xor
add
js
push
add
add
push
add
xor
popa
add
add
bound
dec
add
pop
add
xor
add
popa
add
dec
add
jo
inc
add
add
inc
add
pop
add
add
push
add
add
jbe
push
add
add
push
add
xor
dec
add
push
add
add
bound
xor
push
add
ins
add
xor
xor
jb
jae
js
imul
inc
add
inc
add
arpl
aaa
add
xor
jp
add
add
add
inc
add
xor
push
add
jae
ins
add
inc
add
xor
push
add
xor
xor
dec
add
ins
add
add
add
inc
add
add
add
add
add
inc
add
push
add
add
xor
jns
dec
add
add
add
outs
add
add
inc
add
ja
bound
xor
jns
xor
ins
add
add
add
jne
outs
add
and
push
jbe
dec
add
add
add
push
add
xor
jo
bound
dec
add
dec
add
cmp
sub
ins
add
inc
add
push
add
pop
add
imul
add
add
add
add
inc
add
cmp
das
add
xor
push
add
dec
add
add
add
ja
arpl
xor
add
add
ins
add
jno
push
add
push
add
xor
jne
arpl
cmp
pop
add
add
push
cmp
cmp
inc
add
add
add
push
add
xor
sub
sub
push
add
add
push
add
add
inc
add
pop
add
add
dec
add
outs
add
push
add
add
dec
add
jp
dec
add
add
cmp
jno
outs
add
push
add
add
inc
add
push
add
jae
push
dec
add
push
add
push
add
xor
inc
add
inc
add
ins
add
jne
push
sub
je
xor
sbb
add
add
inc
add
add
ja
jae
jb
push
dec
add
push
add
inc
add
outs
add
add
xor
dec
add
jae
xor
ins
add
add
add
xor
xor
xor
push
add
push
add
add
push
add
inc
add
outs
add
inc
add
dec
add
jns
dec
add
add
inc
add
add
dec
add
jne
xor
inc
add
pop
add
cmp
js
add
dec
add
add
add
add
add
add
add
outs
add
inc
add
inc
add
add
cmp
jbe
push
add
ins
add
js
push
sub
jae
push
add
ins
add
inc
add
add
dec
add
add
add
jns
jne
inc
add
xor
inc
add
push
add
jbe
ins
add
js
dec
add
jno
js
push
add
inc
add
add
push
add
push
arpl
inc
add
inc
add
ins
add
dec
add
jb
js
imul
push
add
dec
add
ja
imul
dec
add
bound
data16
data16
dec
add
add
dec
add
je
jbe
add
add
inc
add
jns
add
je
dec
add
jo
outs
add
xor
add
add
add
add
cmp
outs
add
xor
pop
add
add
add
add
adc
jae
arpl
push
add
push
add
jb
cmp
push
add
inc
add
add
jne
xor
imul
ins
add
aaa
add
add
jno
push
add
dec
add
xor
pop
add
jae
jb
add
xor
jo
inc
add
sub
inc
add
push
add
data16
xor
jo
bound
inc
add
imul
add
jb
push
add
add
xor
imul
jns
inc
add
jne
sub
dec
add
jo
arpl
add
jae
dec
add
add
jp
push
add
inc
add
add
dec
add
bound
je
jns
ja
inc
add
add
push
add
push
add
jae
jns
jns
data16
add
push
add
push
add
add
jbe
dec
add
add
add
push
add
add
add
pop
add
add
add
add
add
push
add
pop
add
push
add
add
push
add
ja
add
dec
add
add
bound
add
inc
add
add
add
inc
add
jp
add
push
add
add
inc
add
add
inc
add
ins
add
add
push
add
jbe
data16
add
add
add
inc
add
dec
add
outs
add
cmp
add
data16
push
add
outs
add
push
add
add
add
dec
add
add
add
pop
add
push
add
js
ins
add
push
add
xor
push
add
push
add
jne
push
add
jno
xor
xor
das
add
dec
add
add
add
xor
imul
push
add
add
push
add
add
dec
add
jo
pop
add
add
add
dec
add
add
outs
add
pop
add
add
je
ins
add
jb
xor
ins
add
add
add
add
push
add
add
add
dec
add
dec
add
add
add
add
add
dec
add
inc
add
jbe
ins
add
push
add
add
outs
add
pop
add
inc
add
push
add
add
push
inc
add
add
push
add
add
jbe
dec
add
popa
add
add
add
xor
add
jne
imul
add
imul
add
cmp
jae
xor
dec
add
add
add
add
add
push
xor
add
aaa
add
inc
add
popa
add
das
add
xor
add
push
add
push
add
dec
add
add
js
inc
add
data16
add
imul
cmp
jno
push
add
jae
push
add
add
js
inc
add
jb
ins
add
ins
add
pop
add
dec
add
add
add
push
jb
add
jo
xor
add
add
pop
add
pop
add
add
jo
aaa
add
jo
push
add
push
add
dec
add
jae
ja
jns
ja
ins
add
add
push
add
add
sbb
add
cmp
add
ja
je
ja
data16
add
add
xor
cmp
jno
jbe
jns
dec
add
add
add
add
push
add
add
add
inc
add
add
popa
add
add
jns
data16
ins
add
add
jp
ja
imul
add
push
add
dec
add
push
add
ins
add
inc
add
add
add
inc
add
add
dec
add
add
inc
add
je
push
add
add
jno
xor
dec
add
add
jb
xor
add
push
add
add
add
add
imul
xor
push
add
push
add
add
push
add
add
imul
pop
add
imul
add
pop
add
dec
add
jo
jo
ins
add
jns
xor
dec
add
push
add
pop
add
push
add
dec
add
add
sub
ins
add
add
add
xor
add
xor
push
add
add
xor
ja
add
add
push
add
dec
add
push
add
push
add
add
add
jbe
popa
add
jno
push
add
push
add
imul
add
ins
add
add
push
add
arpl
jns
push
add
xor
push
jno
inc
add
push
add
add
add
js
add
inc
add
js
pop
add
sub
ins
add
sub
push
add
dec
add
popa
add
xor
push
add
xor
xor
add
xor
xor
push
add
inc
add
add
add
sbb
add
jp
jno
ja
push
add
push
pop
add
add
jb
dec
add
push
add
push
add
imul
push
add
add
cmp
jns
jns
imul
add
xor
data16
add
outs
add
add
inc
add
popa
add
add
aaa
add
js
xor
add
add
add
add
pop
add
cmp
dec
add
add
add
dec
add
add
add
push
add
aaa
add
inc
add
add
add
jo
pop
add
add
add
popa
add
popa
add
dec
add
xor
add
jne
ins
add
ins
add
inc
add
push
add
xor
jo
ins
add
jo
bound
dec
add
dec
add
add
jbe
dec
add
add
add
data16
dec
add
push
inc
add
outs
add
push
add
add
add
add
add
jbe
inc
add
add
inc
add
inc
add
jns
inc
add
add
bound
push
add
jp
push
add
aaa
add
jae
js
dec
add
popa
add
add
add
add
dec
add
jae
pop
add
add
pop
add
jo
push
add
imul
data16
inc
add
pop
add
xor
add
ins
add
outs
add
cmp
imul
add
ins
add
pop
add
push
add
add
xor
dec
add
jns
dec
add
add
outs
add
dec
add
outs
add
add
data16
dec
add
inc
add
add
jp
js
dec
add
jno
pop
add
add
bound
jb
dec
add
add
jb
popa
add
dec
add
jns
jne
dec
add
push
add
add
js
inc
add
dec
add
arpl
bound
imul
jo
jo
jne
push
jo
dec
add
push
add
add
ja
inc
add
sub
imul
dec
add
ins
add
add
add
dec
add
add
jb
dec
add
xor
dec
add
outs
add
imul
add
add
dec
add
add
add
jno
push
add
add
bound
add
jo
dec
add
dec
add
push
add
add
dec
add
add
imul
push
add
push
add
ja
inc
add
dec
add
inc
add
aaa
add
inc
add
dec
add
xor
js
dec
add
xor
ins
add
add
xor
inc
add
add
add
inc
add
imul
add
xor
jp
jo
push
add
xor
xor
dec
add
bound
outs
add
add
add
push
add
add
inc
add
dec
add
add
push
add
xor
outs
add
add
dec
add
jns
xor
inc
add
inc
add
add
add
pop
add
xor
jo
push
add
add
add
xor
dec
add
pop
add
xor
xor
jno
aaa
add
push
add
jo
dec
add
add
add
push
add
dec
add
arpl
xor
add
xor
imul
add
dec
add
je
imul
add
das
add
je
push
add
cmp
add
push
add
cmp
jno
dec
add
inc
add
push
add
xor
push
add
add
push
add
add
jo
pop
add
inc
add
xor
add
add
add
jno
push
add
ja
dec
add
push
add
xor
add
inc
add
pop
add
add
add
dec
add
dec
add
add
pop
add
push
add
aaa
add
add
add
cmp
dec
add
xor
inc
add
dec
add
add
xor
add
inc
add
xor
push
add
push
add
imul
lea
inc
add
pop
add
bound
je
pop
add
push
add
add
dec
add
dec
add
inc
add
dec
add
dec
add
ins
add
push
add
push
add
dec
add
xor
js
bound
jp
push
add
xor
add
add
dec
add
add
xor
outs
add
xor
push
add
add
inc
add
pop
add
push
add
add
imul
jae
dec
add
add
jp
jns
ja
popa
add
or
add
dec
add
add
add
aaa
add
inc
add
add
xor
dec
add
imul
add
ins
add
dec
add
add
dec
add
dec
add
inc
add
jne
dec
add
aaa
add
add
aaa
add
add
add
add
xor
inc
add
imul
push
add
jae
push
add
add
dec
add
je
add
inc
add
add
add
je
dec
add
dec
add
aaa
add
add
add
xor
js
outs
add
inc
add
dec
add
jae
ja
jb
imul
add
js
popa
add
add
push
add
push
add
add
add
pop
add
data16
inc
add
aaa
add
xor
add
jo
dec
add
cmp
xor
jp
ins
add
outs
add
add
add
add
sub
push
add
push
add
xor
popa
add
push
add
pop
add
add
add
add
xor
dec
add
dec
add
jbe
bound
inc
add
dec
add
add
ja
jns
push
add
push
add
dec
add
outs
add
dec
add
xor
add
add
ins
add
jno
xor
push
add
add
add
add
inc
add
add
cmp
jae
jp
sub
jne
pop
add
js
jo
jns
push
add
ins
add
dec
add
push
add
jb
ins
add
xor
pop
add
add
push
add
pop
add
add
add
dec
add
xor
add
add
pop
add
inc
add
pop
add
popa
add
dec
add
cmp
push
add
add
push
pop
add
jne
push
add
ins
add
imul
add
add
inc
add
push
add
xor
bound
jbe
xor
arpl
aaa
add
add
add
add
xor
pop
add
cmp
add
arpl
push
add
jno
bound
jp
jae
jno
dec
add
push
add
push
add
add
bound
aaa
add
outs
add
add
push
add
inc
add
add
push
add
imul
dec
add
sub
add
inc
add
dec
add
outs
add
xor
add
dec
add
add
dec
add
arpl
xor
pop
add
aaa
add
add
add
ins
add
pop
add
add
add
inc
add
add
inc
add
inc
add
add
dec
add
add
imul
outs
add
outs
add
add
push
add
add
add
pop
add
add
xor
pop
add
push
add
add
push
add
imul
add
je
inc
add
add
outs
add
add
add
push
xor
ins
add
add
add
jae
push
add
add
inc
add
xor
add
add
inc
add
imul
sub
pop
add
jne
add
push
add
add
add
add
jne
add
sub
inc
add
add
jns
das
add
das
add
add
dec
add
push
add
add
push
add
inc
add
inc
add
js
xor
dec
add
add
add
add
add
pop
add
inc
add
add
push
add
add
dec
add
xor
sub
inc
add
je
imul
dec
add
add
js
inc
add
push
add
add
add
dec
add
dec
add
add
add
add
dec
add
inc
add
jae
push
add
add
inc
add
push
add
add
imul
add
pop
add
add
ins
add
ins
add
push
add
add
add
ins
add
add
xor
push
add
add
inc
add
push
add
inc
add
add
add
dec
add
ins
add
add
dec
add
push
xor
dec
add
add
dec
add
push
add
jbe
dec
add
jo
add
sub
xor
ins
add
add
add
imul
add
push
add
popa
add
inc
add
add
add
das
add
jae
push
add
add
cmp
inc
add
data16
add
sub
imul
add
xor
jae
pop
add
add
add
add
inc
add
xor
dec
add
dec
add
add
add
imul
pop
add
je
imul
push
add
sub
inc
add
imul
bound
push
add
xor
add
add
add
inc
add
add
cmp
add
cmp
outs
add
xor
dec
add
inc
add
jns
pop
add
push
add
add
xor
add
add
add
add
xor
xor
push
add
push
add
add
inc
add
data16
dec
add
add
add
add
inc
add
cmp
ins
add
push
add
das
add
pop
add
inc
add
xor
data16
je
inc
add
add
pop
add
push
add
add
pop
add
xor
jae
jb
sub
push
add
push
add
add
jne
inc
add
add
data16
push
add
push
jae
dec
add
add
bound
inc
add
add
je
inc
add
add
add
jp
dec
add
pop
add
dec
add
push
add
dec
add
add
dec
add
add
add
add
jo
push
add
add
add
xor
pop
add
inc
add
add
add
outs
add
dec
add
dec
add
push
add
inc
add
ins
add
jp
push
add
data16
ins
add
inc
add
outs
add
add
inc
add
add
add
inc
add
xor
add
jo
outs
add
arpl
popa
add
je
dec
add
jns
xor
xor
inc
add
xor
das
add
inc
add
add
add
push
add
xor
outs
add
js
jbe
jae
pop
add
add
inc
add
add
jns
imul
add
adc
push
add
inc
add
popa
add
push
add
jp
xor
push
add
push
add
push
add
dec
add
inc
add
jbe
jae
push
add
dec
add
add
sub
xor
jb
inc
add
add
add
add
jne
jns
inc
add
add
add
dec
add
outs
add
push
add
add
arpl
xor
add
xor
je
dec
add
add
add
xor
outs
add
ja
imul
add
xor
jo
xor
add
push
add
add
je
push
add
push
add
add
add
cmp
pop
add
dec
add
jbe
inc
add
xor
push
push
add
dec
add
inc
add
add
imul
inc
add
add
add
dec
add
push
add
dec
add
push
add
ins
add
add
push
add
xor
add
xor
inc
add
dec
add
push
add
cmp
inc
add
add
add
push
add
jno
inc
add
push
add
xor
dec
add
add
push
add
add
add
add
push
add
add
imul
add
inc
add
add
xor
add
push
add
add
aaa
add
js
dec
add
push
add
pop
add
add
add
jo
jae
data16
jae
xor
xor
push
add
push
jo
dec
add
add
pop
add
cmp
dec
add
js
dec
add
cmp
push
add
add
add
xor
js
add
dec
add
dec
add
add
push
add
push
add
add
cmp
ins
add
xor
ins
add
dec
add
ins
add
add
jno
inc
add
add
add
arpl
popa
add
cmp
add
dec
add
add
add
add
push
add
add
pop
add
add
inc
add
push
add
xor
ins
add
jb
outs
add
das
add
je
je
pop
add
xor
add
imul
add
outs
add
jb
dec
add
add
add
push
add
jae
pop
add
add
add
sbb
inc
add
imul
add
ins
add
jno
dec
add
pop
add
add
imul
jbe
data16
dec
add
inc
add
add
xor
add
pop
add
add
add
inc
add
push
add
push
add
xor
add
add
imul
add
ja
dec
add
dec
add
xor
add
imul
pop
add
add
inc
add
add
add
add
add
xor
outs
add
dec
add
jae
jp
ins
add
add
inc
add
dec
add
inc
add
inc
add
ins
add
add
xor
add
add
bound
push
add
add
jno
imul
imul
add
arpl
bound
push
add
jns
popa
add
sub
outs
add
add
inc
add
add
push
add
add
push
add
add
ins
add
add
add
or
add
jns
sub
cmp
push
add
cmp
dec
add
add
jno
add
push
add
jne
xor
pop
add
push
add
jne
inc
add
outs
add
ja
inc
add
dec
add
dec
add
add
xor
inc
add
ins
add
pop
add
push
add
add
add
push
add
dec
add
bound
dec
add
outs
add
inc
add
dec
add
add
dec
add
add
add
push
add
pop
add
push
add
outs
add
add
add
add
push
add
inc
add
inc
add
jb
jbe
push
add
outs
add
dec
add
ja
add
inc
add
cmp
add
ins
add
push
add
ins
add
push
js
popa
add
outs
add
dec
add
dec
add
xor
inc
add
add
add
pop
add
inc
add
jne
je
xor
inc
add
add
push
add
add
inc
add
add
inc
add
js
dec
add
add
add
add
add
inc
add
dec
add
add
add
outs
add
jbe
inc
add
push
add
add
jno
ins
add
dec
add
je
xor
add
push
add
push
add
xor
jae
jns
popa
add
ins
add
pop
add
jo
add
add
je
xor
add
cmp
imul
dec
add
inc
add
pop
add
add
inc
add
inc
add
inc
add
pop
add
dec
add
add
add
inc
add
pop
add
inc
add
ja
dec
add
dec
add
add
inc
add
bound
push
add
bound
xor
add
add
jns
imul
cmp
dec
add
xor
jne
add
add
add
add
inc
add
jno
inc
add
push
add
push
add
imul
add
das
add
inc
add
inc
add
xor
add
add
add
arpl
pop
add
cmp
xor
jbe
inc
add
add
add
xor
add
pop
add
push
add
xor
dec
add
add
add
add
add
cmp
je
xor
jae
outs
add
jno
inc
add
add
inc
add
push
add
ja
inc
add
push
add
jne
outs
add
add
popa
add
arpl
push
add
add
pop
add
add
dec
add
inc
add
add
jo
bound
push
add
dec
add
jp
pop
add
xor
add
add
push
add
je
je
jae
push
add
cmp
xor
jno
outs
add
add
dec
add
dec
add
ja
inc
add
add
add
add
ja
dec
add
add
jns
arpl
cmp
inc
add
dec
add
inc
add
add
jno
inc
add
add
add
push
add
add
ins
add
jne
inc
add
add
inc
add
dec
add
imul
xor
sub
xor
ja
dec
add
outs
add
xor
add
add
dec
add
add
outs
add
jo
push
add
dec
add
add
imul
add
cmp
xor
add
inc
add
add
jg
add
dec
add
xor
add
jne
je
dec
add
pop
add
pop
add
dec
add
imul
xor
push
inc
add
add
xor
ja
ins
add
add
popa
add
add
dec
add
push
add
imul
inc
add
inc
add
dec
add
push
add
add
add
add
push
pop
add
xor
add
xor
add
inc
add
data16
arpl
inc
add
pop
add
inc
add
xor
inc
add
xor
outs
add
inc
add
add
add
add
ja
xor
sub
push
inc
add
add
dec
add
inc
add
inc
add
add
push
add
push
add
add
xor
arpl
ja
outs
add
jo
aaa
add
push
add
xor
push
add
ins
add
inc
add
popa
add
add
jbe
push
add
add
jp
dec
add
xor
xor
inc
add
je
ins
add
jne
inc
add
adc
add
push
add
push
add
dec
add
js
das
add
push
add
pop
add
data16
add
inc
add
xor
ja
inc
add
inc
add
je
dec
add
add
add
push
add
jp
cmp
push
add
ja
pop
add
pop
add
imul
push
add
popa
add
inc
add
inc
add
pop
add
add
popa
add
dec
add
inc
add
dec
add
add
xor
add
inc
add
jns
jno
xor
add
xor
dec
add
push
add
inc
add
push
add
cmp
add
add
imul
ins
add
add
add
add
add
xor
add
dec
add
add
ins
add
inc
add
add
pop
add
dec
add
add
add
push
add
inc
add
push
add
add
add
pop
add
inc
add
push
inc
add
pop
add
js
push
add
xor
jo
push
add
inc
add
add
inc
add
ins
add
inc
add
dec
add
aaa
add
push
add
add
push
add
add
bound
imul
add
inc
add
add
outs
add
imul
add
inc
add
add
inc
add
outs
add
sbb
add
add
aaa
add
dec
add
xor
add
add
xor
xor
dec
add
inc
add
dec
add
dec
add
imul
jb
je
push
inc
add
push
add
pop
add
add
dec
add
imul
jo
xor
jo
xor
inc
add
imul
inc
add
imul
dec
add
sub
outs
add
cmp
xor
push
add
push
add
xor
push
add
outs
add
pop
add
add
adc
add
dec
add
add
add
inc
add
data16
add
add
jae
sub
push
add
add
xor
inc
add
add
sub
add
inc
add
dec
add
inc
add
add
bound
add
push
add
add
add
imul
dec
add
add
jno
dec
add
push
add
xor
inc
add
jne
add
add
add
jne
je
dec
add
cmp
xor
imul
add
outs
add
push
add
add
add
dec
add
ins
add
cmp
add
add
ins
add
js
push
add
xor
add
dec
add
add
popa
add
add
ja
push
jb
add
xor
xor
das
add
dec
add
jne
dec
add
push
add
push
add
pop
add
push
add
add
dec
add
pop
add
add
ins
add
ins
add
add
je
pop
add
das
add
sub
xor
outs
add
add
jno
push
add
add
bound
ins
add
push
xor
add
inc
add
outs
add
add
xor
popa
add
ins
add
sbb
add
xor
sub
popa
add
push
add
dec
add
jno
aaa
add
dec
add
add
add
add
add
add
data16
add
push
add
add
push
add
add
outs
add
add
js
inc
add
add
add
add
das
add
outs
add
inc
add
jne
jns
jb
sub
popa
add
add
add
pop
add
das
add
inc
add
push
add
add
inc
add
dec
add
push
pop
add
add
adc
add
dec
add
arpl
inc
add
inc
add
aaa
add
aaa
add
add
dec
add
pop
add
add
add
push
add
add
data16
add
add
add
dec
add
inc
add
xor
cmp
cmp
dec
add
jae
jne
dec
add
add
add
jb
pop
add
add
outs
add
push
add
add
push
add
cmp
popa
add
inc
add
cmp
ins
add
inc
add
jne
dec
add
add
dec
add
sbb
ins
add
jbe
imul
jae
push
add
dec
add
push
add
inc
add
outs
add
add
add
add
je
xor
outs
add
das
add
xor
aaa
add
je
inc
add
js
je
push
add
push
add
xor
jbe
cmp
jb
data16
inc
add
push
add
add
inc
add
js
imul
add
add
push
add
push
add
add
outs
add
inc
add
add
add
add
dec
add
add
dec
add
js
pop
add
xor
dec
add
dec
add
ins
add
inc
add
add
dec
add
add
jp
inc
add
dec
add
push
add
inc
add
add
jae
push
xor
jne
push
add
push
add
add
add
dec
add
dec
add
xor
add
push
add
inc
add
outs
add
jns
dec
add
add
add
add
or
add
jae
xor
add
push
add
dec
add
add
push
add
dec
add
add
dec
add
outs
add
popa
add
cmp
sub
dec
add
jns
arpl
xor
inc
add
jo
ja
dec
add
add
imul
add
inc
add
add
arpl
add
jbe
inc
add
outs
add
ins
add
xor
outs
add
data16
add
add
inc
add
jb
add
xor
push
jb
aaa
add
add
add
pop
add
add
dec
add
jns
push
add
das
add
add
aaa
add
inc
add
add
push
add
push
add
push
add
inc
add
dec
add
add
add
cmp
inc
add
add
inc
add
dec
add
xor
push
add
push
add
add
add
push
outs
add
dec
add
dec
add
add
add
pop
add
xor
xor
add
jns
push
add
push
add
add
outs
add
inc
add
aaa
add
imul
add
add
add
add
add
add
jbe
inc
add
add
cmp
xor
data16
xor
bound
cmp
pop
add
push
ins
add
add
add
arpl
push
add
pop
add
jae
add
add
xor
das
add
add
dec
add
pop
add
add
outs
add
add
xor
imul
add
dec
add
inc
add
das
add
sub
push
add
pop
add
dec
add
add
pop
add
add
push
add
add
jne
imul
add
jp
arpl
jbe
dec
add
dec
add
add
dec
add
add
add
add
add
jp
xor
add
add
imul
add
add
push
jbe
add
cmp
data16
add
add
arpl
cmp
sbb
mov
jno
mov
xor
xor
xor
sahf
xor
xor
xor
xor
xor
xor
xor
xor
outs
xor
movs
xor
xor
xor
xor
xor
xor
pusha
aam
lods
add
or
cmps
xor
xchg
xor
xor
push
xor
xor
push
xor
xor
xor
xor
xor
ins
xor
xor
stos
xor
xor
xor
xor
xor
xor
xor
sbb
push
dec
xor
imul
xor
mov
inc
xor
js
xor
data16
jle
inc
xor
scas
data16
xor
xor
dec
xor
dec
xor
dec
xor
imul
xor
xor
outs
xor
jb
push
dec
xor
pop
xor
jnp
in
push
xor
dec
xor
xor
xor
xor
xor
dec
dec
xor
dec
push
xor
inc
xor
dec
xor
dec
xor
mov
dec
xor
xor
xor
dec
xor
push
xor
imul
xor
mov
xor
mov
push
xor
xor
mov
xor
xor
mov
inc
xor
test
push
ret
pop
dec
xor
xor
xor
xor
mov
push
xor
add
push
add
popa
add
or
outs
add
je
push
add
imul
add
inc
add
add
add
andps
outs
add
jb
jb
popa
add
add
push
mov
stos
jno
scas
aas
arpl
add
mov
pop
push
sbb
mov
mov
pop
jg
aad
cmp
and
add
add
add
add
or
push
adc
or
add
adc
pop
push
adc
or
add
adc
push
adc
adc
add
adc
push
adc
adc
or
adc
or
adc
add
add
adc
add
adc
and
add
and
or
add
adc
add
add
adc
add
add
add
xor
add
adc
add
adc
add
add
add
push
adc
add
add
add
add
push
push
add
sbb
and
add
sbb
add
add
add
push
pop
add
or
push
gs
jo
popa
je
pop
cmp
xor
xor
xor
add
add
add
adc
or
adc
or
adc
adc
adc
adc
pop
add
or
pop
add
or
add
adc
add
adc
and
add
adc
add
dec
jns
push
bound
jb
imul
add
push
dec
jns
inc
jo
ins
imul
add
adc
add
dec
jns
inc
outs
ins
jo
je
jb
add
add
dec
jns
push
jae
jb
add
add
add
add
add
add
push
add
adc
add
adc
add
add
add
add
add
add
and
push
push
push
push
popa
add
xor
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
adc
add
add
add
add
add
add
add
add
push
add
add
add
add
push
push
sbb
sbb
add
adc
sbb
adc
push
sbb
add
push
adc
pop
adc
sbb
sbb
push
sbb
and
sbb
add
add
add
pop
or
push
or
add
or
or
or
add
adc
jns
adc
or
sbb
adc
push
sbb
push
add
add
add
add
sbb
adc
push
sbb
add
sbb
sbb
sbb
sbb
add
add
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
xor
xor
xor
xor
add
add
and
xor
xor
cmp
sub
sub
sub
sub
xor
xor
add
and
add
inc
outs
jo
jb
addr16
and
arpl
jae
data16
xor
xor
add
or
add
jb
add
add
or
arpl
jae
data16
add
add
or
outs
ins
gs
inc
arpl
jb
add
add
int3
jmp
add
jmp
add
and
add
jmp
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
