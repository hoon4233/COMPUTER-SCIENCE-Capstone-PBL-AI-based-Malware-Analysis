sub
call
jmp
ret
call
jmp
ret
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
in
jo
and
add
in
bound
(bad)
addr16
sbb
xchg
push
mov
dec
xadd
cwde
ficom
mov
(bad)
arpl
in
jg
popf
fisttp
fld
popf
pop
xchg
cmp
imul
mov
pop
jo
push
gs
daa
int3
lahf
mov
mov
inc
sub
and
loop
popa
mov
bound
mov
arpl
out
data16
fcom
bound
fidiv
(bad)
movs
data16
in
bound
mov
out
clc
and
fisubr
int3
lahf
fst
and
fnstcw
add
mov
pushf
ficomp
adc
mov
call
mov
pushf
popf
sahf
out
arpl
fcom
and
mov
arpl
shl
lahf
mov
push
fstp
pop
loope
popa
ins
out
pop
fwait
pushf
popf
ficom
test
xchg
adc
bound
and
inc
cdq
mov
loop
addr16
pusha
ins
out
sub
pushf
popf
mov
fld
jne
arpl
sahf
fwait
pushf
popf
mov
popf
sahf
and
fdivr
shl
sti
loop
pop
pop
pop
(bad)
loopne
inc
jmp
call
fcmovbe
xlat
mov
sub
xchg
mov
sub
mov
sar
dec
std
mov
stos
xchg
cmp
(bad)
xchg
lock
sub
jns
(bad)
std
fisttp
hlt
sar
rol
cmp
cmp
mov
xchg
cmp
jns
cmp
(bad)
cmp
jns
cmp
loope
js
cmp
rdtsc
sbb
imul
js
mov
lock
mov
cmc
mov
shr
cmp
cmp
into
cmp
js
cmp
xor
inc
and
cwde
xchg
and
and
cmp
mov
enter
call
ror
and
and
cmp
pop
and
cmp
js
jl
add
mov
js
or
int
test
rcl
aaa
(bad)
xor
jns
jp
outs
popf
sahf
hlt
repz
outs
arpl
pop
sub
add
jo
inc
dec
cmp
wbinvd
and
sub
jp
arpl
jae
jecxz
int3
jne
popa
sar
popa
imul
pusha
arpl
popa
fild
xchg
cmps
sbb
popf
loopne
ins
fnstsw
mov
popa
fs
xchg
jbe
(bad)
cwde
(bad)
pusha
push
push
cwde
pop
loop
jb
outs
loope
arpl
mov
popa
arpl
call
sbb
rcr
bound
sbb
movs
arpl
cmc
ror
push
fdiv
mov
fldcw
movs
or
arpl
mov
push
cwde
loop
addr16
push
cmps
pushf
mov
arpl
lds
rcr
lahf
push
xchg
popa
(bad)
bound
(bad)
xor
arpl
sbb
cdq
mov
pushf
popf
sahf
fprem1
das
movs
fwait
mov
(bad)
call
pusha
adc
mov
push
pushf
popf
sahf
push
fldcw
das
loopne
fbld
xchg
arpl
pusha
sbb
data16
popw
inc
(bad)
mov
and
jnp
popa
fbstp
js
fs
push
jno
ror
push
fnstcw
enter
mov
jecxz
ficomp
add
adc
arpl
mov
popf
jecxz
jnp
jns
fimul
inc
pushf
inc
xor
lahf
loopne
dec
pop
clc
mov
in
xor
fnstsw
lock
or
loope
xor
sti
sub
js
std
cmp
lahf
loopne
outs
push
(bad)
jae
fcmovnbe
psubq
out
inc
push
xor
stc
shl
cwde
fisttp
add
leave
mov
lock
shl
aad
mov
out
(bad)
cmc
inc
enter
xor
jg
fisttp
xchg
sbb
cmps
loopne
xchg
pusha
sub
adc
pop
imul
fs
js
dec
ja
popa
out
push
fs
cmps
pusha
movs
and
arpl
mov
push
cmps
push
mov
bound
nop
and
cmps
arpl
fs
stos
outs
lods
lock
stos
jecxz
ins
scas
jecxz
ins
scas
and
loopne
xchg
pusha
sub
adc
sub
mov
out
inc
push
popa
out
movs
nop
pusha
cmp
popa
arpl
sub
push
popa
pop
js
popa
cs
mov
mov
pop
mov
sbb
ss
sbb
xchg
dec
pop
mov
sub
fs
ret
lahf
cs
sbb
int3
jmp
ror
ret
push
dec
mov
push
mov
retf
inc
add
and
retf
neg
pusha
ins
rcr
inc
sbb
fsub
aaa
js
cmp
mov
mov
test
xor
cld
pop
mov
dec
imul
xor
ins
ss
gs
and
ins
ret
push
xor
jo
retf
cmc
inc
movs
xchg
sti
xchg
ret
jb
sub
lock
popa
int3
inc
sub
ins
outs
jo
enter
leave
sbb
mov
xchg
and
add
out
sbb
test
adc
shr
mov
ss
mov
(bad)
shl
adc
and
mov
sub
sub
lea
ss
aam
push
sahf
and
add
scas
sbb
jno
pop
push
out
(bad)
data16
(bad)
push
sbb
(bad)
sti
jne
(bad)
jnp
and
mov
mov
push
jle
fyl2x
sub
and
(bad)
retf
rcr
cli
cwde
and
scas
and
ja
inc
sub
mov
(bad)
sti
popa
sar
or
ss
test
push
sahf
and
or
xor
mov
xchg
cmp
shr
add
rcl
cwde
out
sbb
or
adc
add
adc
cmp
push
add
adc
add
adc
add
adc
add
push
add
lahf
push
das
cmp
add
and
add
push
mov
sub
xchg
inc
int3
and
or
das
hlt
or
mov
inc
hlt
int
arpl
xchg
xor
mov
xchg
fdiv
push
pop
dec
adc
test
sar
or
and
daa
das
jp
ss
repnz
es
push
adc
fisttp
sar
or
adc
daa
das
jp
ss
repnz
push
pop
push
adc
lds
rcr
addr16
mov
or
sbb
jp
ss
cdq
push
or
xor
xchg
hlt
xchg
add
fisub
shr
add
sti
cld
cmp
push
add
push
xchg
add
or
mov
imul
leave
add
xchg
sub
or
xor
pop
das
push
push
es
cmp
rcr
movs
int
adc
scas
push
xlat
aam
push
xchg
(bad)
push
sub
lahf
or
mov
(bad)
mov
xchg
push
jmp
sub
mov
add
inc
mov
mov
psubd
push
paddusb
ss
mov
push
add
scas
add
imul
scas
cmp
rcr
or
cli
adc
lods
or
test
xor
sbb
sbb
stc
push
add
add
clc
pop
ret
cli
push
add
mov
test
add
shl
cld
or
push
mov
xor
lds
test
mov
jno
cs
jbe
enter
sbb
jb
scas
sub
in
out
fild
shl
adc
scas
imul
dec
inc
out
sar
xchg
ficom
call
sub
repnz
clc
lock
mov
(bad)
rcr
outs
pushf
(bad)
ss
das
jl
jb
and
into
es
shl
loop
(bad)
and
mov
ret
popa
repz
xchg
jp
js
dec
lahf
xor
dec
inc
cs
add
cmp
jno
xchg
loop
lds
jg
inc
and
addr16
fwait
loope
adc
data16
fs
out
xor
shr
bound
xchg
sub
sti
jne
and
sahf
xor
icebp
push
enter
(bad)
into
leave
jecxz
shr
fdiv
push
ficom
and
mov
call
sbb
push
lods
gs
in
xor
lea
lahf
xor
pusha
adc
(bad)
mov
mov
sar
sub
adc
cmp
mov
xchg
add
mov
xor
sbb
sbb
push
idiv
push
push
mov
mov
fcomip
imul
jae
xchg
idiv
out
lea
cli
mov
xchg
(bad)
pushf
js
(bad)
in
in
sti
push
inc
sbb
jno
add
imul
(bad)
sbb
sbb
push
aam
popf
mov
jmp
nop
push
imul
fstp
push
fsubr
pop
sub
push
mov
bnd
push
and
add
xchg
and
jb
sbb
pop
jge
psadbw
or
xchg
inc
clc
ds
and
mov
sahf
test
pushf
sbb
js
pop
movs
jle
jmp
mov
cmc
ins
add
jle
pop
test
jecxz
or
jl
push
(bad)
push
sbb
jg
and
jo
pop
xor
imul
push
jl
jp
sbb
push
jl
cmp
sbb
or
jge
cmp
idiv
jmp
nop
push
imul
jg
jl
fidiv
jl
retf
cmp
jae
push
sbb
or
jnp
jg
in
sub
seto
shl
jmp
jns
pop
jl
in
jne
call
pop
lods
sub
or
fisubr
and
sbb
popf
push
cmp
pop
leave
sbb
xchg
leave
sti
test
loopne
imul
ret
test
lock
(bad)
ss
leave
(bad)
jno
cs
push
sub
retf
retf
jae
test
jb
addr16
(bad)
bound
jno
out
sub
sub
lock
das
call
pop
lods
cs
mov
xor
fidivr
fcomi
fmul
fidiv
jb
fs
ret
popa
into
sub
(bad)
mov
jae
ret
cld
lock
jle
fnstenv
or
ja
or
inc
ds
shl
(bad)
sub
(bad)
(bad)
shr
mov
mov
mov
inc
ins
push
sahf
add
xchg
shl
sub
sub
ss
das
fcomp
and
mov
cmp
sbb
out
lea
and
pop
adc
rcl
loope
repz
or
sbb
add
mov
rcl
xchg
iret
das
arpl
add
repnz
shl
push
mov
loopne
into
leave
dec
jne
daa
clc
mov
cli
cmp
cwde
rol
lock
xor
xchg
es
dec
and
in
or
pop
and
into
xor
or
(bad)
cli
outs
pop
and
shr
or
daa
mov
cs
sbb
jb
retf
sbb
dec
pop
ins
or
xchg
or
leave
fwait
into
mov
push
jecxz
ins
mov
xlat
outs
xor
aad
push
cwde
push
xchg
int3
mov
(bad)
cdq
loope
mov
jo
dec
clc
push
retf
rol
jmp
mov
xchg
xlat
adc
sbb
repz
mov
in
or
jno
ds
dec
or
test
push
xchg
jns
sub
push
and
test
dec
das
outs
popf
jmp
mov
mov
nop
clc
and
mov
xlat
sub
(bad)
push
pop
cdq
adc
cdq
fmul
sub
rcl
jg
fisttp
out
shr
iret
mov
outs
arpl
adc
push
fwait
dec
fisub
push
dec
mov
(bad)
xchg
repz
sub
imul
out
xor
inc
rol
and
push
arpl
dec
mov
(bad)
sbb
mov
xor
push
je
jns
iret
xor
ss
rcl
push
xchg
jae
arpl
xor
xchg
dec
push
mov
xchg
repz
sbb
retf
jo
mov
cwde
fst
sub
aas
imul
out
jns
mov
xchg
int3
add
shr
push
push
sub
mul
movs
sub
(bad)
cs
cmp
push
js
imul
sbb
hlt
das
rcr
sbb
gs
sbb
ins
push
dec
rcr
fwait
mov
test
leave
dec
aam
shr
adc
mov
imul
data16
push
mov
das
rcr
sbb
gs
dec
cli
pop
lock
mov
test
leave
dec
icebp
sbb
jbe
xchg
adc
test
repnz
push
js
dec
iret
mov
ror
jnp
mov
sbb
dec
push
js
ins
les
shr
add
les
push
cmc
push
add
les
rcr
add
rol
xchg
jae
adc
sub
in
leave
(bad)
bnd
nop
retf
mov
sub
mov
scas
xchg
push
shr
jns
xlat
dec
(bad)
xchg
sub
retf
xchg
push
fucomi
sbb
cld
popf
or
cmc
xlat
sub
jo
and
and
push
repz
and
sub
icebp
ins
mov
das
cs
push
xchg
js
sub
retf
lods
dec
ds
mov
and
adc
adc
gs
xor
not
inc
jecxz
xchg
adc
push
mov
pop
movs
sub
mov
or
push
xlat
mov
ja
cmps
sub
arpl
lea
lods
clc
jbe
push
rcl
xchg
jae
sub
dec
ds
sub
scas
retf
mov
ja
in
adc
cli
sbb
and
sub
push
and
xchg
lds
sbb
sbb
xchg
xlat
xchg
lock
mov
xchg
push
imul
xchg
jae
jp
or
push
mov
lods
xchg
xchg
jns
je
in
xor
lahf
xchg
ins
js
test
jo
add
jns
sub
push
imul
repnz
retf
imul
(bad)
stos
icebp
xor
shl
enter
push
push
xor
sub
shl
sub
int
enter
push
push
movs
push
sub
rol
aad
cmp
mov
or
shl
aam
movs
mov
sub
shl
sub
shl
sub
shl
sub
clc
mov
or
shl
sub
hlt
mov
or
cli
mov
or
loope
sub
icebp
xor
sub
movs
shl
sub
ret
xor
push
ret
nop
xor
mov
sub
stos
das
push
rol
shl
push
add
mov
test
mov
add
mov
push
ret
mov
and
xor
push
popa
push
dec
xchg
ret
nop
sub
aam
stos
arpl
mov
adc
push
sub
push
jne
ss
nop
cmp
iret
sbb
ss
xchg
adc
les
push
shl
pop
les
sub
push
sub
push
sub
in
shl
dec
push
cmp
mov
iret
ficomp
ss
inc
pop
adc
xor
sub
or
adc
sub
rol
aad
arpl
mov
or
lahf
mov
das
push
rol
shl
fcomip
retf
cmp
sub
push
les
shl
jmp
mov
das
push
rol
pop
adc
mov
pop
cwde
xor
sbb
xor
push
rol
shl
test
mov
fld
aad
mov
fst
inc
sub
and
das
xchg
mov
or
xchg
stos
and
push
push
lds
iret
pop
mov
xor
mov
pop
push
adc
mov
pop
xor
xchg
icebp
xor
jmp
pop
and
cwde
xor
nop
test
in
dec
sub
(bad)
jnp
mov
cmp
rcl
loop
mov
jmp
xchg
jae
adc
ins
mov
fwait
xlat
ins
rol
xlat
ins
xchg
xchg
ins
ret
xchg
xlat
ins
rol
xlat
ins
rol
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
jge
or
mov
dec
cmp
jns
or
lahf
adc
das
mov
xchg
xlat
fsubr
xchg
mov
ja
pop
jne
dec
sub
pop
call
sub
mov
ins
mov
call
push
xchg
adc
enter
aaa
out
dec
inc
push
sub
jmp
and
bound
cwde
mov
dec
sub
dec
imul
add
dec
xchg
mov
lods
lock
push
icebp
rcl
popf
icebp
cs
or
cwde
dec
mov
or
xchg
mov
cwde
cli
sti
sub
push
xlat
mov
jae
imul
jecxz
ins
push
xor
icebp
mov
add
adc
sub
push
cwde
mov
jae
or
jp
pop
add
nop
xchg
mov
sbb
xchg
mov
push
or
mov
ja
mov
xor
in
dec
xchg
xlat
xor
aad
clc
xor
xchg
jae
sub
mov
test
jns
iret
xor
dec
mov
stc
mov
push
mov
fbstp
mov
mov
adc
push
push
inc
xchg
push
retfw
nop
pushf
ins
push
mov
jecxz
xchg
outs
mov
rcr
xchg
mov
xchg
dec
imul
(bad)
ins
dec
std
(bad)
sbb
scas
sub
push
scas
sub
icebp
inc
sub
xor
ins
test
mov
into
(bad)
add
push
cmp
out
mov
jge
add
push
leave
das
xchg
push
int3
xchg
gs
sub
jne
sub
aam
push
adc
jne
stos
sbb
xchg
mul
sbb
mov
jo
add
fimul
cmp
jmp
xor
loope
mov
fwait
add
xchg
add
jg
xchg
inc
jae
fwait
add
xchg
add
jg
xchg
push
imul
ficom
sub
jg
xchg
in
push
xchg
sub
imul
xchg
add
jg
xchg
add
sbb
std
xchg
add
jg
xchg
add
popa
sti
sti
xor
gs
mov
into
add
pop
arpl
push
fdiv
pop
arpl
xor
test
xor
jg
into
add
pop
arpl
scas
xor
jo
fcom
fisub
push
dec
js
add
mov
inc
mov
cmp
cmp
mov
mov
or
rol
add
xor
add
xchg
jo
mov
pop
out
push
rcr
and
cmps
xor
inc
out
mov
xor
mov
inc
in
ficomp
lods
xchg
xchg
push
dec
mov
ret
in
int3
or
xchg
sbb
int3
sub
xchg
or
xchg
int3
sub
rcr
jmp
mov
mov
and
ret
test
xor
in
adc
cld
(bad)
jp
adc
in
rcl
shl
out
dec
rcl
push
lods
clc
cmc
push
js
adc
cwde
cmp
enter
sub
out
aam
dec
in
mov
mov
xchg
xlat
xchg
adc
adc
push
nop
stc
mov
jmp
sub
leave
daa
into
lea
xlat
xchg
jns
sub
adc
add
adc
call
pop
out
cwde
movs
mov
push
sub
arpl
out
jns
mov
xor
test
adc
scas
fcomip
push
xor
imul
xor
arpl
xchg
outs
and
js
xchg
test
std
push
movs
(bad)
push
mov
mov
jae
imul
int
repz
push
stos
in
addr16
xor
test
push
and
ins
mov
in
test
or
dec
imul
xchg
shr
xchg
rcr
fst
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
pop
jl
push
pop
std
in
mov
push
repnz
jl
repnz
pop
(bad)
arpl
fs
out
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
adc
cld
adc
adc
into
xchg
push
cli
enter
enter
(bad)
xchg
pop
cli
int3
xchg
pop
cli
retf
xchg
fs
lds
inc
jp
adc
into
xchg
push
cli
enter
enter
(bad)
xchg
pop
cli
int3
adc
into
adc
lds
push
cli
fcom
push
cli
retf
jp
xchg
pop
cli
lds
push
jp
adc
into
adc
lds
inc
jp
adc
into
xchg
push
cli
enter
enter
(bad)
xchg
push
cli
int3
xchg
pop
cli
retf
xchg
fs
lds
pop
cli
retf
xchg
pop
cli
into
adc
in
adc
lds
pop
jp
xchg
fs
xchg
push
cli
fcom
push
cli
retf
jp
xchg
pop
cli
lds
push
jp
adc
(bad)
adc
lds
inc
jp
adc
int3
xchg
pop
jp
adc
int
pop
jp
xchg
pop
jp
xchg
pop
cli
into
xchg
fs
adc
(bad)
adc
adc
lds
pop
cli
retf
adc
adc
xchg
pop
jp
xchg
push
cli
int3
adc
retf
xchg
fs
xchg
push
cli
fcom
push
cli
retf
jp
xchg
pop
cli
lds
push
jp
xchg
pop
jp
adc
lds
dec
jp
adc
lds
push
jp
adc
retf
cli
iret
xchg
pop
cli
into
xchg
push
cli
int3
xchg
je
into
xchg
push
cli
int3
xchg
push
jp
xchg
push
jp
xchg
pop
cli
int3
xchg
fs
into
adc
adc
into
xchg
push
cli
enter
enter
(bad)
xchg
pop
cli
int3
xchg
pop
cli
retf
xchg
pop
cli
into
xchg
fs
adc
aad
push
jp
xchg
push
jp
adc
lds
push
cli
iret
adc
lds
push
jp
xchg
push
cli
retf
adc
into
xchg
push
cli
into
adc
lds
push
cli
enter
into
xchg
fs
lds
dec
jp
adc
(bad)
adc
retf
cli
lds
push
jp
xchg
pop
cli
(bad)
xchg
je
lds
push
cli
into
xchg
pop
jp
adc
retf
adc
(bad)
xchg
pop
cli
enter
cld
xchg
push
jp
xchg
push
jp
adc
into
adc
(bad)
adc
retf
jp
adc
xchg
pop
jp
xchg
push
cli
retf
xchg
pop
cli
int3
xchg
fs
adc
(bad)
adc
enter
leave
xchg
pop
cli
rcl
jp
xchg
fs
xchg
fs
xchg
dec
jp
adc
into
xchg
pop
cli
retf
xchg
je
into
adc
ficom
push
cli
lds
push
jp
xchg
je
les
pop
cli
(bad)
xchg
pop
cli
into
xchg
fs
lds
dec
jp
adc
lds
pop
jp
xchg
fs
xchg
pop
cli
(bad)
xchg
push
cli
enter
enter
int3
adc
into
adc
lds
pop
cli
(bad)
adc
adc
lds
pop
cli
retf
xchg
fs
adc
fst
pop
jp
xchg
pop
jp
xchg
pop
cli
into
xchg
fs
adc
aad
push
cli
retf
jp
adc
into
adc
lds
push
jp
xchg
push
jp
xchg
push
cli
into
xchg
pop
cli
(bad)
adc
rcl
jp
adc
lds
push
cli
enter
lds
push
jp
adc
in
adc
lds
push
jp
adc
(bad)
adc
lds
push
jp
adc
retf
jp
xchg
fs
xchg
pop
cli
(bad)
xchg
push
cli
into
adc
(bad)
xchg
push
jp
adc
into
xchg
pop
cli
leave
xchg
pop
cli
retf
xchg
pop
jp
adc
into
xchg
pop
cli
retf
xchg
fs
retf
adc
cld
xchg
pop
jp
xchg
pop
cli
into
adc
retf
xchg
push
jp
xchg
pop
cli
(bad)
adc
xchg
push
cli
(bad)
adc
adc
into
xchg
push
cli
into
adc
lds
push
cli
enter
into
xchg
fs
xchg
push
cli
fcom
push
jp
xchg
pop
cli
int3
xchg
je
into
xchg
pop
cli
int3
xchg
push
jp
xchg
push
jp
xchg
pop
jp
adc
lds
push
jp
xchg
push
jp
xchg
pop
cli
retf
xchg
fs
adc
xchg
pop
jp
xchg
push
jp
adc
adc
lds
pop
jp
adc
(bad)
xchg
pop
cli
into
xchg
je
into
xchg
push
cli
int3
xchg
inc
jp
adc
leave
xchg
push
jp
adc
lds
push
jp
adc
(bad)
adc
int
push
jp
xchg
fs
xchg
pop
jp
adc
(bad)
xchg
pop
cli
into
xchg
fs
into
adc
cld
xchg
push
cli
into
adc
lds
push
cli
enter
into
xchg
fs
lds
inc
jp
xchg
push
jp
adc
(bad)
xchg
pop
jp
adc
xchg
je
retf
xchg
push
cli
leave
xchg
pop
cli
rcl
jp
xchg
fs
adc
cld
adc
mov
push
jp
xchg
pop
jp
xchg
fs
xchg
pop
cli
(bad)
xchg
push
cli
enter
enter
int3
adc
into
adc
lds
je
(bad)
adc
fst
push
jp
adc
int3
xchg
adc
in
xchg
push
jp
adc
enter
(bad)
adc
retf
xchg
fs
into
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
xchg
fs
adc
cld
xchg
dec
cli
into
adc
into
xchg
pop
cli
retf
adc
into
xchg
pop
jp
xchg
pop
cli
into
adc
int3
adc
(bad)
adc
(bad)
adc
ficom
push
cli
iret
xchg
dec
jp
adc
enter
enter
cld
xchg
fs
xchg
fs
xchg
fs
xchg
pop
cli
retf
adc
enter
rcl
push
jp
adc
lds
push
cli
(bad)
xchg
push
jp
adc
loope
push
jp
adc
retf
xchg
pop
cli
leave
adc
int
fs
xchg
push
cli
(bad)
adc
retf
cli
int
push
jp
xchg
fs
cmps
jb
dec
and
adc
sbb
push
cli
repnz
jle
jb
jl
pop
jl
in
jmp
cdq
jle
fs
jl
data16
mov
or
jl
repnz
cld
xchg
clc
xchg
and
jp
outs
outs
dec
jl
in
dec
adc
cmp
sub
dec
and
fwait
ins
fsub
shl
in
fs
mov
and
shr
fs
jmp
pop
jl
and
sti
xchg
sar
adc
cmp
rol
cld
adc
xor
mov
outs
arpl
and
push
arpl
sbb
add
std
cdq
jle
gs
cld
nop
fs
cld
adc
jp
and
lock
leave
jge
sub
mov
and
int
aas
add
sbb
test
adc
arpl
xchg
cmp
xchg
fs
(bad)
jge
sub
xchg
push
js
sbb
add
mov
fdiv
fs
cld
adc
jp
and
lock
sar
sub
xchg
push
js
sbb
add
mov
fdiv
fs
cld
adc
jp
and
lock
das
jb
sub
xchg
push
js
sbb
add
mov
fdiv
fs
cld
adc
jp
and
lock
push
jb
sub
mov
mov
(bad)
push
repnz
jle
pop
cld
push
data16
mov
mov
push
jb
dec
outs
jle
jl
in
jmp
cli
add
fwait
ins
fadd
sbb
daa
shl
adc
cli
pop
xchg
in
fcom
pop
js
xchg
clc
cmp
sub
cmp
inc
into
cmp
es
add
in
jmp
pop
jl
in
jmp
popa
dec
push
iretw
jl
in
jmp
loopne
adc
jp
daa
shl
adc
jp
xchg
clc
xor
test
fs
cld
pop
rol
jl
in
jmp
pop
jl
in
jmp
pop
jl
in
jmp
pop
jl
in
jmp
pop
cld
xchg
push
js
sbb
add
mov
fdiv
repnz
jl
jecxz
jecxz
in
xor
pop
cli
cmp
std
mov
cld
adc
test
xchg
dec
arpl
mov
or
add
retf
int3
fcom
jecxz
adc
cli
cmp
xor
jge
push
jle
jl
in
in
iret
jecxz
and
aad
xchg
clc
cmp
and
pop
xchg
in
fcom
and
xchg
clc
xor
and
adc
loopne
push
jb
dec
outs
jle
jl
in
jmp
test
aam
jl
mov
jbe
pop
repnz
jl
sbb
sub
dec
sti
or
shr
in
xlat
jbe
test
rcr
(bad)
std
jp
out
jg
jl
std
test
outs
pop
jl
in
dec
and
sbb
sbb
add
and
fmul
dec
cli
mov
scas
data16
or
loopne
rcr
shr
cmc
clc
push
fs
mov
mov
fwait
sbb
(bad)
pop
repnz
jl
in
in
in
cld
inc
sbb
test
ja
add
aam
fmul
or
cmp
mov
test
pop
bnd
and
pop
cld
adc
lock
in
fsub
inc
test
fs
jl
in
dec
repnz
mov
adc
sbb
loop
mov
adc
fsubr
mov
dec
mov
inc
in
rol
jl
mov
test
mov
sti
mov
test
mov
mov
jbe
(bad)
pop
jl
in
jmp
pop
cld
adc
cld
mov
ds
les
pop
adc
fcom
inc
movs
or
cli
cmp
cmp
xchg
fs
outs
mov
loopne
mov
cmp
and
sbb
and
push
jns
inc
into
mov
movs
fs
cld
sar
test
fs
cld
inc
rol
cld
adc
ins
fmul
pusha
jp
mov
in
in
inc
into
xchg
jp
outs
jle
jl
in
in
outs
dec
jl
in
dec
ins
fs
mov
adc
adc
cld
repnz
jle
jb
jl
pop
jl
in
jmp
cdq
jle
fs
jl
out
jl
in
jmp
ins
fsub
test
mov
xchg
push
jp
xchg
fs
sar
test
outs
pop
jl
in
dec
or
cmp
and
mov
in
xchg
data16
mov
(bad)
test
adc
sbb
sub
movs
jp
fs
mov
mov
stos
mov
inc
es
jl
xor
imul
in
repnz
jle
jge
jl
pop
jl
in
jmp
cdq
jle
fs
jl
data16
mov
shr
adc
sar
xchg
dec
ins
fsub
test
out
jl
in
in
in
cld
mov
jmp
cld
adc
loopne
adc
jp
daa
shl
adc
cli
pop
adc
arpl
out
rol
in
inc
into
sub
jp
mov
cmp
outs
outs
dec
jl
in
dec
jg
mov
jl
fidivr
jecxz
in
int3
mov
adc
dec
outs
outs
dec
jl
in
dec
repnz
mov
adc
sbb
icebp
cdq
dec
push
pop
cld
push
cld
jne
popa
icebp
loop
or
jl
in
jmp
sub
outs
xor
out
jmp
movs
ins
jmp
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
leave
mov
mov
push
ret
push
ins
or
xlat
out
jecxz
mov
cli
xlat
ins
rol
data16
scas
sbb
xchg
xlat
out
lock
inc
or
pop
adc
jle
repnz
sbb
jae
iret
sub
mov
inc
xor
xor
and
adc
cdq
pop
test
rcl
xlat
ins
or
xchg
inc
mov
mov
stc
push
xor
nop
clc
pushf
mov
(bad)
xlat
jo
dec
mov
repz
or
gs
int
rcl
mov
sbb
push
outs
push
push
mov
ins
or
xchg
cwde
call
xlat
mov
or
repz
and
rcl
jmp
xor
xchg
dec
sub
push
jle
dec
shr
dec
imul
nop
js
sbb
imul
mov
js
sbb
xchg
adc
sbb
or
retf
retf
xor
jb
adc
sub
xor
mov
and
xchg
xor
xchg
or
repz
and
inc
imul
or
cwde
sub
or
xchg
jae
js
push
imul
retf
mov
imul
pop
outs
icebp
xchg
and
xchg
int3
sub
dec
outs
or
mov
out
push
inc
inc
out
sbb
sbb
pop
cmc
test
jge
jbe
bnd
sub
hlt
cmp
lods
jae
shr
(bad)
pop
outs
cmp
dec
call
inc
add
jecxz
dec
or
loopne
add
add
add
add
pop
push
cld
in
add
cwde
jle
outs
xchg
pop
inc
outs
inc
push
cmp
adc
rol
cwde
(bad)
popa
outs
xchg
pop
pop
push
jno
add
jecxz
add
xor
ret
jle
dec
xchg
aad
stos
cwde
inc
cmp
cdq
add
mov
and
sti
cmp
jae
inc
retf
mov
je
jp
add
cmp
popa
outs
or
data16
inc
xor
mov
out
icebp
repz
ins
mov
xlat
adc
repz
push
mov
ins
or
xlat
test
jne
push
lahf
ja
or
ds
sub
jno
lock
dec
xchg
cmp
mov
xchg
int3
mov
call
retf
sub
jno
imul
or
push
xchg
clc
js
ins
mov
xlat
out
push
xlat
mov
mov
stos
out
push
push
mov
mov
push
lods
clc
or
and
adc
into
lock
and
clc
xchg
xlat
ins
mov
xlat
inc
ss
cmps
add
push
jne
mov
mov
dec
and
and
retf
rcl
and
loopne
into
sub
cli
sar
push
cmp
adc
sub
clc
cmc
push
rol
xchg
mov
pop
(bad)
sub
rcl
xor
sub
fst
stos
push
dec
add
pop
fsubr
xchg
or
push
xor
adc
jae
sub
sub
mov
or
xchg
jae
outs
into
add
mov
inc
and
ins
es
push
out
jns
iret
ret
xchg
fisttp
xor
add
jne
inc
jecxz
xchg
dec
addr16
aas
(bad)
adc
push
rcl
sub
mov
push
syscall
xlat
popf
xor
loop
syscall
retf
or
(bad)
push
push
das
xor
movs
cmp
push
scas
out
test
and
retf
clc
in
sub
int3
pop
xlat
sub
test
das
test
sub
mov
test
imul
mov
dec
sub
test
sub
push
fisttp
mov
inc
dec
sub
mov
pusha
or
jbe
or
xchg
sbb
mov
shl
pop
push
sub
ja
xchg
ins
mov
adc
push
xchg
xchg
rcl
push
xlat
jo
sbb
retf
adc
add
jmp
cmp
bound
cwde
mov
repz
jns
xchg
lods
js
ss
xchg
mov
clc
mov
ins
mov
xlat
xchg
repz
sub
pop
jmp
sub
or
ins
or
pushf
push
out
or
push
sub
jo
xchg
ins
or
xchg
out
int
into
cwde
xchg
cmc
push
mov
test
ins
mov
xlat
cdq
jnp
(bad)
xchg
push
imul
lods
jo
jb
push
push
jmp
sub
arpl
mov
pushf
ret
retf
(bad)
imul
dec
sbb
test
push
push
pop
push
mov
jecxz
dec
mov
pusha
or
jbe
push
jecxz
in
clc
mov
xchg
repz
xor
jecxz
in
rcl
pusha
jne
jecxz
jo
retf
daa
cmp
imul
cdq
call
pop
jb
lods
daa
les
sbb
jmp
sub
jae
pop
bound
(bad)
scas
mov
sub
cmp
fld
ds
mov
fisubr
stc
add
or
cwde
stc
add
cwde
jo
jmp
xor
jmp
jno
jg
std
mov
mov
add
call
jge
sti
or
sar
or
jecxz
addr16
std
imul
cwde
jg
out
std
fsincos
in
jg
jns
loopne
out
std
mov
test
add
in
loopne
xchg
repz
pop
jb
or
cmp
push
shr
jns
xlat
fmulp
xchg
or
in
mov
ds
sbb
push
cmc
pop
or
pop
ins
mov
mov
push
or
jno
mov
add
scas
lods
jne
sub
pop
or
das
arpl
stc
jp
sbb
or
sbb
inc
in
rcl
mov
or
or
stc
ss
out
push
push
iret
jge
int3
push
out
js
mov
or
xlat
dec
lods
dec
stos
or
sub
fidiv
xlat
in
rcl
mov
sub
or
leave
js
push
ins
or
xlat
push
dec
ins
into
sbb
test
dec
jae
pusha
out
xor
dec
jle
mov
scas
pop
sub
pushf
retf
cmp
jecxz
dec
(bad)
je
jmp
jns
sub
dec
or
push
ins
shl
and
jecxz
ficomp
push
mov
xor
call
push
xchg
jae
sub
arpl
iret
jb
mov
xchg
retf
mov
sbb
imul
xor
add
cld
inc
out
sub
mov
inc
test
int3
movs
pop
leave
push
imul
arpl
cmp
(bad)
mov
stc
jmp
dec
xchg
and
(bad)
stc
jmp
dec
(bad)
pop
inc
(bad)
cmp
inc
fidivr
call
jecxz
mov
std
stc
jle
sbb
cmp
loopne
xlat
arpl
inc
std
(bad)
jl
pop
inc
(bad)
cmp
retf
les
jle
fstp
mov
out
fisub
mov
jmp
sbb
mov
cld
sti
mov
ficomp
std
popa
(bad)
mov
sub
les
pop
add
arpl
and
jp
jge
dec
xlat
mov
push
lock
sub
adc
xlat
ret
mov
push
or
pusha
lods
test
dec
sub
adc
retf
pop
mov
mov
(bad)
test
jae
scas
lods
cmc
(bad)
sub
in
pop
daa
mov
mov
jge
jae
stos
and
clc
xchg
pop
ins
or
xlat
jp
dec
sti
hlt
int
and
call
push
daa
ins
mov
xlat
out
jns
mov
in
stc
repz
mov
push
xor
sub
stc
jmp
xor
ss
push
je
ins
mov
leave
xor
jecxz
ins
rcl
xchg
leave
jns
dec
outs
scas
cli
iret
mov
jecxz
xchg
xchg
ins
and
pop
xchg
push
outs
push
push
mov
out
xor
mov
aaa
mov
push
lock
sub
repz
and
dec
loopne
lods
dec
jecxz
repz
or
jns
in
jg
sbb
lods
js
or
rcr
push
pop
cmps
dec
mov
adc
adc
sub
dec
push
xchg
jae
jnp
cmp
or
jno
std
and
dec
lods
sub
popw
pop
mov
loop
pop
daa
cmps
pusha
pop
cmps
xlat
jge
cmps
sar
sar
sar
lahf
pop
outs
scas
sbb
les
sahf
call
mov
fidivr
adc
(bad)
stc
iret
push
cmp
fisub
nop
jb
mov
pop
addr16
mov
rcl
push
jns
das
xchg
jge
aas
jns
pop
(bad)
stc
dec
test
outs
and
or
cs
pop
(bad)
movs
sahf
rol
popf
cli
std
mov
(bad)
ja
scas
pushf
pusha
les
sbb
mov
mov
pop
addr16
mov
pop
or
lock
xchg
lahf
pop
fs
cld
jge
xchg
jp
es
idiv
movs
adc
jbe
lods
adc
stc
jge
adc
pop
cmps
stc
iret
scas
sahf
js
cs
inc
in
cmp
stc
jge
adc
(bad)
mov
rol
push
jns
pop
xchg
jb
lods
adc
stc
std
cs
jge
and
adc
inc
(bad)
mov
daa
fsub
(bad)
ftst
es
jns
xchg
xor
pop
outs
mov
daa
jb
cmps
xchg
repnz
pop
test
sahf
ror
adc
int3
movs
nop
idiv
pop
test
adc
cld
jge
mov
inc
retf
mov
xchg
inc
retf
and
xchg
inc
inc
sub
jb
and
hlt
into
(bad)
mov
pop
in
mov
ror
cmps
jb
scas
adc
jns
daa
sahf
ror
cmps
jbe
push
cmp
(bad)
cmps
xchg
jae
pop
adc
dec
mov
sbb
jns
(bad)
ja
mov
push
repnz
lods
adc
stc
jge
push
ja
mov
daa
jae
cmps
xchg
jns
xchg
sahf
stc
inc
cmps
adc
stc
jge
push
jno
mov
xchg
idiv
adc
mov
nop
stc
jge
sbb
movs
nop
inc
into
and
push
icebp
leave
and
push
lock
xchg
adc
mov
cmps
test
xchg
jbe
movs
sahf
ror
pop
jns
scas
sahf
inc
int
xchg
je
or
jge
sahf
clc
lds
nop
ror
daa
je
cmps
adc
jns
push
ds
mov
pop
stc
leave
cmps
xchg
inc
retf
and
push
stc
(bad)
scas
push
jnp
and
jnp
and
jnp
and
je
and
jo
mov
aas
jb
movsx
cmps
push
fscale
movs
fwait
hlt
retf
or
shl
(bad)
xchg
je
cmps
adc
std
movs
pop
lock
scas
xchg
inc
dec
and
xchg
jno
pop
adc
dec
and
push
ja
scas
sbb
jp
stos
sbb
mov
daa
test
cmps
jb
mov
adc
inc
sub
adc
inc
mov
popf
stc
std
and
sahf
inc
int3
sub
pop
bnd
push
cld
retf
lods
xchg
ror
daa
jne
cs
hlt
dec
(bad)
pop
in
adc
xchg
adc
dec
sub
aas
jb
mov
fscale
and
xchg
inc
dec
and
sbb
hlt
dec
mov
pop
jb
scas
adc
inc
pop
push
jno
mov
xchg
stc
dec
mov
fwait
test
adc
jge
adc
iret
cs
inc
int
cmps
jae
daa
push
stc
lds
adc
cmps
pop
cld
std
scas
adc
and
je
daa
popf
inc
retf
sub
jae
xchg
adc
dec
lods
xchg
jbe
sub
xchg
jno
xchg
adc
inc
lods
pop
jp
mov
adc
scas
popf
idiv
xchg
stc
inc
cmps
nop
inc
les
nop
rol
repnz
inc
int
daa
jo
movs
xchg
jp
xchg
xchg
jns
movs
pop
test
es
jns
mov
sbb
daa
pushf
inc
retf
mov
adc
std
mov
sahf
ror
daa
jno
cs
jne
xchg
aas
hlt
dec
mov
pop
in
adc
lock
inc
retf
pop
adc
mov
xchg
inc
les
pop
lock
xchg
test
mov
xchg
jns
and
nop
hlt
std
scas
sbb
mov
daa
jbe
daa
sbb
repnz
cmps
xchg
inc
leave
and
jbe
mov
adc
inc
movs
sbb
(bad)
pop
adc
jo
cmps
adc
std
mov
pop
stc
std
movs
push
repz
mov
adc
mov
adc
jge
daa
jo
es
std
rcl
icebp
dec
cmps
sahf
jbe
daa
adc
std
movs
xchg
repnz
xchg
jns
mov
daa
repz
cs
je
scas
adc
inc
retf
scas
pop
je
mov
cmps
js
and
ja
movs
adc
bnd
cmps
jp
and
ja
and
ja
sub
cld
jge
daa
jbe
cmps
fwait
clc
retf
pop
adc
inc
(bad)
cmp
int3
xchg
pushf
pop
gs
push
hlt
shr
ja
mov
sahf
stc
retf
sub
daa
je
lods
adc
stc
retf
ror
xchg
jb
mov
push
bnd
sbb
dec
and
cmps
ja
mov
cmps
jne
mov
xchg
ja
cs
repnz
and
pop
stc
std
and
xchg
inc
retf
cmps
jbe
es
jns
xchg
adc
test
movs
adc
stc
jge
adc
dec
cs
idiv
and
nop
ror
cmps
jb
and
inc
shl
lock
daa
xchg
jb
xchg
xchg
jbe
mov
sahf
ror
cmps
jp
movs
xchg
jp
mov
xchg
jns
daa
nop
rol
push
jae
mov
adc
daa
nop
inc
into
and
(bad)
cmps
jp
and
jno
cs
hlt
(bad)
cs
jno
xchg
adc
jb
scas
xchg
bnd
push
hlt
iret
scas
adc
jge
xchg
stc
dec
cmps
adc
dec
cs
cld
std
mov
nop
ror
retf
and
jno
movs
sbb
dec
and
ja
mov
push
stc
(bad)
and
jb
and
sbb
ror
xchg
je
mov
aas
bnd
mov
ror
cmps
ja
cmps
sbb
retf
xchg
aas
repnz
(bad)
aas
pop
in
daa
pop
in
xchg
jns
xchg
push
repnz
scas
adc
cld
jge
fwait
jb
and
pop
in
xchg
inc
int
xchg
repz
xchg
test
nop
stc
dec
pop
call
xchg
nop
ja
lods
xchg
jbe
daa
sahf
stc
std
mov
nop
idiv
and
xchg
rol
xchg
jp
mov
std
mov
out
adc
std
and
jae
cs
jne
pop
adc
lock
and
ja
stos
push
icebp
les
cmps
jp
and
repnz
sub
daa
jb
mov
xchg
ja
and
cli
jge
push
jno
and
test
adc
std
mov
xchg
rol
ja
mov
cmps
jns
adc
mov
nop
jb
lods
xchg
idiv
and
inc
int3
cmps
jbe
and
repnz
adc
xchg
push
je
cs
jp
and
jno
and
jo
and
adc
mov
xchg
ja
lods
adc
stc
jge
push
ja
mov
daa
repnz
and
dec
cmps
popf
ror
cmps
jns
cmps
xchg
jns
pop
sbb
hlt
dec
pop
popf
ja
mov
xchg
idiv
sahf
test
scas
adc
inc
and
idiv
push
ja
and
repnz
scas
xchg
inc
dec
pop
adc
dec
mov
sbb
repz
sub
cmps
cli
retf
das
adc
pop
adc
lock
test
sahf
jns
mov
fwait
rol
daa
test
scas
xchg
idiv
scas
pop
repnz
and
stc
(bad)
and
cmps
jno
daa
adc
pop
lahf
jp
mov
nop
jns
stos
adc
pop
xchg
jns
movs
adc
les
push
stc
lds
mov
fsub
fnstcw
sahf
jnp
daa
nop
inc
les
cmps
repnz
sbb
repnz
and
jo
and
jno
pop
adc
jns
lods
popf
stc
jge
push
jno
and
cmps
js
cmps
xchg
jae
and
hlt
retf
js
pop
adc
sbb
daa
fwait
inc
retf
and
jnp
mov
movs
xchg
ror
popf
stc
std
and
inc
into
cs
test
lods
xchg
ror
adc
dec
push
mov
fldenv
stc
leave
daa
xchg
je
cmps
xchg
ror
daa
jp
mov
adc
dec
and
xchg
je
pop
adc
scas
sbb
inc
and
stc
std
mov
pushf
ror
push
repnz
daa
adc
lock
mov
out
fwait
rol
cld
inc
mov
nop
cli
leave
mov
cmps
jp
and
hlt
iret
or
fsub
xchg
ror
xchg
je
scas
adc
jge
sbb
repnz
and
je
sub
xchg
jbe
lods
adc
lods
nop
stc
jge
sbb
inc
les
popf
inc
inc
and
push
jnp
cs
je
cmps
xchg
js
cmps
je
cs
jae
das
lahf
inc
dec
cmps
jbe
and
xchg
jp
cmps
xchg
inc
retf
pop
push
je
movs
sbb
dec
cmps
xchg
rol
pushf
test
and
stc
std
and
mov
pop
addr16
xchg
jb
stos
xchg
jbe
es
stc
jge
push
lock
mov
aas
cmc
jge
aas
fsub
pop
cmps
pop
jno
mov
pushf
rol
daa
je
and
je
cs
jp
and
hlt
retf
jno
or
fsub
and
jbe
xchg
push
repnz
lods
adc
dec
lods
nop
idiv
adc
iret
mov
std
and
jbe
mov
xchg
cld
jge
xchg
jns
and
idiv
push
stc
(bad)
daa
xchg
inc
(bad)
cmps
jp
daa
pushf
jno
pop
sbb
inc
cmps
adc
rcl
repnz
and
sahf
rol
xchg
ja
mov
sbb
stc
dec
xchg
push
fsub
jno
pop
push
je
cs
jb
das
adc
inc
mov
xchg
ja
xchg
push
lock
das
pop
jne
scas
sbb
std
movs
fwait
repnz
inc
les
sahf
cli
inc
(bad)
repnz
scas
adc
jge
daa
jnp
daa
pushf
cli
les
adc
inc
cs
idiv
pop
push
lock
lods
adc
stc
jge
push
jno
and
stc
jge
push
jl
mov
call
mov
pop
lods
xchg
inc
inc
xchg
sahf
jnp
cs
jno
and
je
cmps
xchg
jns
daa
daa
jno
movs
xchg
jb
pop
adc
adc
mov
cmps
pop
mov
push
jb
stos
xchg
jbe
cmps
xchg
stc
jge
sahf
test
cli
dec
cmps
xchg
stc
jge
xchg
jp
cmps
adc
jge
xchg
stc
iret
lea
pop
out
xchg
js
pop
sbb
test
and
xchg
inc
int
xchg
jae
lods
xchg
repz
cmps
js
mov
ds
push
cmps
fldenv
jno
pop
cmp
fisub
adc
inc
pop
push
cli
inc
sub
lock
and
(bad)
and
pop
hlt
dec
and
lock
and
jnp
mov
xchg
ror
push
repnz
das
adc
jge
adc
dec
movs
pop
idiv
sahf
jnp
and
ja
movs
sbb
stc
inc
mov
nop
inc
int3
es
idiv
daa
je
daa
popf
clc
retf
lods
adc
retf
ror
push
bnd
adc
retf
ror
ja
and
jo
scas
adc
movs
xchg
ror
ds
lahf
inc
int3
cmps
js
and
cld
std
mov
xchg
cli
std
mov
pushf
test
hlt
dec
cmps
sbb
test
pop
repnz
and
popf
inc
inc
daa
xchg
cli
std
cs
jno
or
out
adc
std
and
sahf
ror
mov
fscale
cmps
js
and
jb
xchg
pop
jb
scas
adc
xchg
push
jno
and
cld
std
(bad)
pop
in
sahf
jne
pop
adc
adc
ror
repnz
mov
pop
mov
xchg
jnp
mov
cmps
je
cs
je
xchg
sbb
inc
lods
xchg
je
scas
nop
ror
int3
sub
cmps
jae
scas
sahf
ja
xchg
cmp
dec
mov
pop
loope
adc
std
and
ja
sub
xchg
idiv
mov
xchg
test
xchg
idiv
xchg
pop
hlt
inc
mov
xchg
idiv
cmps
push
hlt
iret
lods
xchg
inc
lds
adc
(bad)
mov
fscale
and
repnz
mov
nop
stc
jge
xchg
jbe
and
je
movs
xchg
idiv
push
jno
pop
push
repnz
mov
daa
jbe
and
dec
lods
xchg
inc
les
sbb
je
xchg
adc
and
hlt
retf
test
xchg
jns
and
jb
daa
xchg
je
and
daa
jb
mov
daa
jne
daa
push
stc
leave
pop
push
test
adc
cld
(bad)
scas
xchg
inc
dec
scas
sbb
and
sbb
jb
scas
xchg
ror
jo
movs
pushf
jns
movs
push
hlt
retf
shl
fdivr
xchg
test
movs
xchg
je
mov
adc
retf
ror
xchg
je
or
shl
ds
sub
sbb
cld
jge
fwait
ja
mov
adc
(bad)
daa
sahf
inc
int3
daa
nop
jp
lods
xchg
inc
inc
daa
cmps
test
ds
in
adc
and
jp
cs
jb
mov
fsub
xchg
sahf
jno
and
sbb
repz
mov
cmps
cli
(bad)
and
hlt
dec
mov
xchg
inc
enter
inc
cs
jb
mov
adc
dec
lods
pop
hlt
inc
pop
pushf
ja
scas
adc
pop
lahf
jns
sub
ja
sub
js
and
jne
lods
xchg
jbe
pop
sbb
jb
xchg
sahf
pop
fs
ja
and
lock
adc
and
daa
je
cmps
adc
pop
adc
inc
and
push
jae
pop
push
test
adc
inc
lods
pop
lock
xchg
push
jns
lods
adc
dec
cmps
pop
icebp
std
mov
sahf
inc
retf
cs
jno
and
nop
jns
cmps
push
lock
pop
mov
fsub
nop
fdivr
and
xchg
inc
dec
and
sahf
je
xchg
adc
dec
movs
push
repnz
je
stos
xchg
jbe
and
xchg
jns
xchg
push
ja
mov
adc
lods
adc
stc
std
and
hlt
inc
movs
xchg
jno
and
ja
scas
adc
pop
adc
dec
lods
adc
jae
and
stc
retf
and
ror
mov
pop
in
push
jne
mov
mov
jnp
mov
cmps
js
lods
xchg
repnz
daa
jbe
mov
push
repnz
and
jb
and
nop
inc
retf
mov
xchg
inc
int
sbb
jns
mov
pop
cld
std
cmps
adc
stc
std
mov
xchg
ja
daa
popf
jns
and
xchg
je
xchg
push
ja
and
test
and
jo
mov
daa
jno
cmps
xchg
jns
movs
adc
std
and
nop
inc
les
cmps
cli
(bad)
es
repnz
es
dec
pop
adc
inc
and
jbe
mov
adc
lods
xchg
inc
inc
and
sahf
ror
daa
jns
mov
sahf
rol
push
jns
daa
sahf
ror
push
cmc
retf
stc
std
pop
sbb
je
pop
push
repnz
cmps
adc
xchg
pop
jb
movs
adc
dec
and
js
pop
xchg
jbe
and
pop
lock
sahf
ja
mov
sbb
cld
std
mov
nop
idiv
cmps
test
cmps
jbe
and
mov
(bad)
sbb
inc
inc
sub
jbe
pop
adc
adc
(bad)
cmps
adc
jo
and
jno
mov
cmps
clc
retf
mov
shl
fisub
xchg
jno
pop
adc
jb
pop
xchg
ja
mov
pop
repnz
and
jnp
cmps
ja
stos
xchg
jbe
xchg
xchg
stc
dec
daa
adc
retf
xchg
push
je
scas
adc
dec
xchg
xchg
ja
mov
xchg
idiv
nop
test
daa
push
ja
lods
xchg
repnz
cmps
jp
and
rol
ds
lods
adc
ror
adc
stc
std
cmps
xchg
jp
sub
cld
inc
daa
popf
jbe
cmps
je
cs
jno
and
aas
fsub
xchg
sbb
mov
popf
inc
dec
mov
sahf
ror
xchg
bnd
nop
ja
scas
popf
cli
jge
aas
jns
and
jbe
cmps
xchg
ror
sahf
jns
cs
repnz
mov
xchg
inc
int
sahf
jp
mov
daa
jns
movs
xchg
jno
pop
pop
repnz
daa
adc
je
scas
sbb
mov
nop
rol
sahf
clc
std
sub
lock
idiv
adc
lods
xchg
idiv
pop
jae
and
lock
and
jae
and
jbe
movs
adc
jns
scas
xchg
inc
dec
cmps
adc
std
daa
push
jp
mov
xchg
jns
mov
xchg
ja
cmps
pop
lock
pop
mov
fldenv
xchg
fdivr
sbb
and
jns
stos
xchg
jns
and
pop
je
and
je
cmps
xchg
rol
cmps
jb
mov
pop
jns
and
jb
lea
ror
adc
jge
adc
ror
xchg
repz
and
ror
daa
repnz
scas
push
jbe
and
ror
fwait
repz
sahf
std
in
xchg
cld
std
mov
xchg
ja
mov
cmps
jbe
and
cld
std
mov
xchg
jns
mov
adc
std
sub
ja
cmps
jbe
sub
fwait
cli
retf
ror
daa
jns
cmps
xchg
jns
movs
pop
stc
jge
cmps
repnz
cs
jns
sub
daa
jp
and
jb
pop
pop
jb
scas
adc
pop
adc
dec
mov
xchg
stc
jge
sahf
jb
cmps
xchg
rol
fwait
je
scas
xchg
ror
ja
movs
xchg
rol
daa
jae
lods
adc
dec
daa
adc
std
daa
cmps
clc
leave
and
jns
and
jns
cmps
adc
pop
pop
jbe
scas
adc
inc
daa
daa
jno
mov
fsub
pop
popf
pop
mov
sahf
rol
daa
lock
and
jns
movs
adc
inc
scas
xchg
ror
jb
scas
xchg
stc
jge
xchg
repnz
push
hlt
(bad)
daa
popf
ror
adc
inc
inc
sub
jb
pop
lahf
jp
mov
nop
inc
(bad)
cs
jne
cmps
fwait
jno
adc
mov
cmps
je
and
ja
and
stc
lds
pop
hlt
inc
lods
adc
jns
cs
test
pop
stc
jge
xchg
jp
mov
fwait
test
and
test
push
stc
inc
cmps
xchg
jns
and
adc
daa
sahf
inc
retf
sub
pop
gs
xchg
pop
gs
jbe
daa
fwait
inc
retf
lods
push
je
and
jno
das
adc
inc
es
bnd
adc
cld
jge
adc
mov
adc
and
jb
mov
adc
lds
xchg
repz
pop
lahf
test
je
and
jb
stos
sahf
inc
les
cmps
jp
es
jno
es
std
lods
adc
dec
cmps
nop
idiv
adc
inc
dec
pop
adc
mov
adc
std
scas
adc
inc
dec
mov
xchg
rol
sbb
inc
daa
sahf
inc
retf
movs
push
hlt
retf
inc
les
sbb
cld
jge
cmps
stc
(bad)
mov
sbb
inc
movs
push
hlt
dec
cs
lock
and
ror
cmps
jb
scas
nop
jnp
cmps
xchg
ja
lods
xchg
ror
daa
jne
es
fsub
cmps
xchg
inc
dec
movs
xchg
jb
scas
nop
inc
dec
daa
nop
ja
scas
xchg
ror
repnz
stc
std
sub
sbb
dec
and
repnz
adc
stc
jge
adc
retf
stc
jge
push
stc
(bad)
mov
sahf
icebp
int3
scas
popf
inc
les
sahf
jno
xchg
adc
dec
mov
xchg
cli
jge
adc
inc
pop
adc
repnz
mov
sahf
jns
mov
cld
std
pop
adc
ja
es
idiv
adc
ror
daa
jbe
scas
xchg
jns
pop
adc
dec
and
xchg
repnz
and
jbe
mov
sahf
inc
retf
movs
sahf
cli
les
push
stc
jge
xchg
icebp
dec
cmps
xchg
ror
pop
repnz
mov
cmps
jno
and
sbb
inc
inc
xchg
sahf
jp
and
stc
std
sub
push
je
scas
xchg
jp
and
xchg
jno
and
popf
icebp
les
xchg
rol
cmps
jno
mov
adc
dec
lods
xchg
ror
adc
jge
adc
lods
xchg
inc
lds
nop
inc
les
nop
cli
retf
cmps
xchg
bnd
cmps
jno
cs
jb
pop
push
jb
cs
repnz
and
lock
mov
nop
inc
int3
pop
xchg
jb
lods
adc
dec
xchg
sahf
ja
cs
jae
mov
adc
dec
lods
xchg
jbe
es
jge
aas
hlt
retf
fsub
fsub
push
jns
and
cli
retf
lock
pop
push
je
cmps
pop
cli
dec
lods
adc
jge
nop
jns
xchg
sbb
dec
scas
xchg
je
and
adc
les
push
stc
lds
pop
jo
xchg
adc
jns
mov
popf
jno
daa
push
cld
std
and
hlt
shl
jns
es
ror
popf
js
mov
sahf
clc
lds
sahf
inc
dec
sub
xchg
jns
movs
xchg
jp
daa
xchg
ror
xchg
jbe
scas
sbb
inc
movs
pop
fdivr
scas
xchg
jbe
or
cmps
fisub
jnp
xchg
sbb
inc
scas
adc
idiv
push
jae
sub
xchg
test
adc
std
scas
adc
scas
adc
jge
adc
lds
daa
test
jb
cmps
adc
lds
xchg
stc
dec
mov
xchg
inc
int
push
repnz
mov
popf
rol
push
lock
ror
adc
inc
xchg
adc
dec
scas
adc
shl
fsub
movs
xchg
repnz
daa
jbe
mov
cmps
test
and
jno
pop
pop
je
adc
mov
adc
movs
pop
stc
std
mov
popf
idiv
nop
stc
(bad)
mov
xchg
jnp
scas
adc
jge
xchg
test
and
inc
iret
pop
adc
mov
adc
jge
xchg
jbe
lods
xchg
inc
int3
mov
popf
inc
retf
and
xchg
idiv
xchg
ja
daa
sahf
idiv
and
inc
dec
and
inc
inc
scas
xchg
jb
scas
pop
lock
nop
cli
les
sbb
bnd
sahf
jnp
lods
xchg
inc
iret
and
adc
xchg
xchg
jns
movs
adc
inc
and
icebp
les
cmps
repnz
mov
push
jae
movs
xchg
je
scas
sbb
std
xchg
adc
inc
mov
cmp
ftst
and
jbe
scas
xchg
cli
jge
adc
rol
icebp
dec
cmps
push
jo
and
jo
and
icebp
leave
cmps
js
cmps
adc
les
adc
inc
movs
sbb
retf
ror
daa
jne
sub
sti
leave
pop
adc
inc
cmps
adc
pop
adc
dec
daa
daa
je
cmps
adc
iret
daa
fwait
ror
cmps
jp
cmps
adc
retf
bnd
adc
dec
(bad)
cmp
int3
and
pop
js
xchg
pop
js
das
adc
inc
and
popf
icebp
les
cmps
ja
daa
adc
(bad)
xchg
push
test
xchg
inc
inc
cs
inc
les
xchg
inc
les
push
hlt
dec
pop
push
lock
and
xchg
inc
les
adc
std
daa
push
hlt
rcl
pop
fs
push
jp
cmps
pushf
ror
xchg
jns
lods
adc
std
scas
xchg
test
jno
lods
adc
stc
inc
mov
pop
lock
scas
adc
and
jno
stos
xchg
jns
and
xchg
jno
xchg
pop
jo
scas
sahf
jbe
lods
adc
jge
aas
jae
mov
adc
mov
daa
jno
and
cld
std
and
sbb
leave
pop
push
repnz
lods
adc
inc
(bad)
mov
pop
popa
mov
sbb
hlt
retf
jo
and
repnz
mov
popf
cld
std
cs
lock
cmp
fisub
popf
jns
xchg
push
repnz
cs
js
mov
cmps
stc
les
push
je
scas
push
je
cs
test
and
hlt
retf
jns
and
test
cmps
hlt
(bad)
and
jns
mov
lahf
je
mov
xchg
stc
dec
scas
nop
jbe
scas
xchg
idiv
xchg
stc
into
cs
cli
std
and
adc
inc
xchg
sahf
ja
mov
cmps
jnp
cs
dec
and
mov
pop
addr16
push
jns
scas
nop
ror
leave
daa
popf
inc
enter
dec
mov
xchg
idiv
mov
xchg
inc
les
push
jae
movs
nop
inc
into
mov
lahf
rol
daa
jb
sub
pop
ja
lods
sbb
inc
and
push
jo
mov
xchg
cli
std
and
hlt
retf
cmps
popf
rol
cmps
jns
and
dec
pop
pop
jb
sub
daa
repnz
sbb
ror
jnp
and
je
scas
adc
inc
pop
adc
daa
adc
lds
pushf
ror
adc
inc
cmps
adc
stc
retf
lods
xchg
inc
inc
sub
jno
scas
adc
pop
sahf
ja
scas
adc
lods
pop
lock
xchg
stc
leave
pop
xchg
jbe
mov
nop
stc
std
mov
sahf
rol
sahf
cli
(bad)
cmps
xchg
cli
std
and
fscale
movs
xchg
test
xchg
ja
sub
pop
bnd
adc
mov
daa
repnz
mov
adc
jge
push
jae
mov
aas
repnz
mov
fscale
cmps
mov
rol
test
mov
sbb
and
bnd
sbb
cmps
xchg
rol
pop
je
movs
nop
idiv
sahf
jb
scas
sbb
jge
xchg
jns
mov
adc
leave
lods
adc
jae
and
jne
stos
adc
xchg
xchg
jp
scas
adc
inc
enter
retf
je
movs
push
cli
retf
and
adc
scas
adc
js
and
jns
mov
sahf
inc
dec
and
cmp
(bad)
pop
daa
fsub
mov
fnstcw
sbb
gs
sbb
hlt
retf
repnz
lods
sbb
inc
push
daa
fsub
scas
xchg
jp
(bad)
repnz
cmps
push
fscale
and
repnz
and
repz
popf
test
cs
jl
lods
xchg
clc
jge
push
stc
(bad)
lods
pop
fdivr
pop
je
(bad)
mov
fdivr
daa
daa
jo
mov
mov
fdivr
cs
jge
push
daa
fsub
or
fsub
push
ds
cmps
adc
jge
adc
and
je
mov
ja
lods
xchg
inc
lds
daa
fsub
or
fsub
ds
scas
sbb
out
aas
repnz
lea
pop
cs
inc
int
daa
jo
push
cmp
(bad)
cs
inc
int
mov
fidivr
xchg
jbe
(bad)
pushf
inc
lds
sahf
pop
iret
and
je
movs
adc
std
mov
xchg
ror
daa
fsub
and
lahf
repz
pop
cld
std
and
daa
jbe
and
sti
leave
mov
mov
pop
gs
std
or
daa
(bad)
daa
sbb
sub
jl
cmps
sahf
rol
push
jns
mov
inc
gs
xchg
stc
dec
push
cmp
fisub
xchg
test
(bad)
aas
pop
in
aas
pop
in
push
pop
cmps
nop
je
lods
xchg
jbe
daa
call
xchg
xchg
jb
movs
adc
into
xchg
pop
ja
scas
aas
jnp
or
sbb
retf
xchg
aas
jb
lods
xchg
pop
lds
daa
stc
inc
movs
aas
jo
pop
fwait
pop
cmps
xchg
jp
sub
xchg
jp
pop
lahf
jbe
scas
aas
jo
or
adc
dec
scas
xchg
ja
es
jge
aas
ja
xchg
xchg
pop
fs
xchg
jbe
and
sahf
ror
adc
pop
xchg
ja
mov
xchg
cli
int3
scas
nop
idiv
sbb
lock
lea
pop
dec
daa
adc
(bad)
cmps
xchg
jbe
mov
fsub
pop
xchg
pop
mov
mov
(bad)
(bad)
ftst
and
je
mov
pop
jo
movs
pop
idiv
cmps
jge
scas
popf
ja
pop
xchg
jp
cmps
adc
inc
scas
sbb
std
lods
sbb
inc
push
cmp
fisub
adc
jae
(bad)
pushf
inc
lds
cmps
pop
iret
mov
aas
ja
xchg
xchg
pop
fs
jno
and
jb
movs
pop
js
xchg
push
stc
dec
scas
pop
jo
daa
push
idiv
and
pop
repz
mov
cmps
clc
(bad)
movs
xchg
jbe
es
jp
daa
nop
inc
retf
movs
push
icebp
leave
cmps
jp
push
aas
fsub
aas
fldenv
cmp
pop
int
xchg
jne
daa
adc
hlt
jge
adc
leave
mov
xchg
jbe
and
xchg
jp
xchg
aas
repnz
mov
fstp
adc
dec
xchg
aas
lock
scas
pushf
pop
in
adc
inc
dec
(bad)
je
or
fscale
or
(bad)
mov
(bad)
lea
fldenv
xchg
pop
mov
fwait
idiv
lods
xchg
jbe
movsx
in
cmp
out
daa
fndisi(8087
and
jne
and
xchg
ror
adc
(bad)
pop
ds
dec
lea
(bad)
or
fwait
clc
retf
and
inc
lds
popf
fscale
scas
sahf
js
cmps
jp
mov
adc
inc
in
aas
pop
addr16
ftst
scas
adc
dec
mov
xchg
idiv
mov
pop
jb
cmps
push
jnp
stos
xchg
repnz
mov
pop
gs
std
daa
push
(bad)
xchg
push
icebp
dec
and
pop
cld
jge
popf
test
mov
pop
popa
push
cmp
fidivr
aas
jns
sub
xchg
js
mov
nop
jnp
pop
mov
fsub
cmps
fsub
cmp
out
cmp
in
adc
jge
nop
jnp
lods
adc
jge
sahf
ja
and
inc
dec
(bad)
hlt
retf
fnstcw
adc
setbe
push
xchg
pop
int3
mov
push
icebp
les
push
jns
daa
daa
lock
lea
jnp
cmps
sahf
rol
ds
mov
pop
addr16
xchg
pop
mov
sbb
cld
jge
xchg
ja
and
adc
repnz
sub
mov
fstp
push
jbe
and
push
js
and
mov
fnsetpm(287
scas
xchg
ror
repnz
das
cmps
je
adc
xchg
sbb
jl
mov
lds
sahf
jp
(bad)
lahf
std
std
mov
fcmovb
cmps
xchg
inc
dec
push
cmp
fisub
adc
xchg
adc
jbe
sub
xchg
inc
dec
mov
cmp
std
mov
pop
loope
daa
pop
loope
adc
leave
or
lahf
pop
popa
scas
sbb
iret
lods
adc
rol
jl
cmps
sbb
stc
inc
daa
cmps
jbe
lods
xchg
jne
lods
sahf
test
and
hlt
into
daa
cmps
ja
movs
pop
js
xchg
pop
jnp
mov
popf
idiv
adc
jns
mov
pop
data16
xchg
inc
dec
push
cmp
fidivr
adc
push
cmps
stc
dec
and
jbe
movsx
gs
gs
cmps
pop
jns
mov
sahf
idiv
adc
xchg
aas
jp
lea
pop
cs
fdivr
movs
adc
jno
mov
push
jne
mov
daa
fsub
and
inc
lods
xchg
jbe
mov
adc
scas
pop
hlt
jge
adc
movsx
iret
and
jbe
scas
popf
clc
std
and
jl
daa
nop
ror
adc
pop
xchg
jns
and
push
icebp
dec
sub
adc
jge
xchg
ja
(bad)
idiv
mov
pop
and
into
cs
je
daa
xchg
icebp
retf
pop
popf
jbe
mov
nop
ja
mov
adc
and
test
sub
jns
scas
sbb
inc
scas
xchg
inc
leave
and
lock
mov
fimul
push
jo
scas
xchg
cld
jge
nop
ja
cmps
ja
scas
push
jbe
pop
adc
dec
mov
xchg
clc
std
mov
aas
jne
mov
fsub
fldenv
xchg
jb
scas
xchg
jb
cmps
fwait
inc
les
lock
icebp
leave
sub
adc
jns
mov
nop
cli
jge
ds
xchg
aas
fldenv
mov
fscale
mov
(bad)
mov
cmps
je
daa
push
icebp
leave
movs
mov
inc
int3
sub
aas
repnz
lea
pop
data16
repnz
fsub
movs
xchg
jp
xchg
xchg
jp
movs
push
lock
hlt
jge
xchg
hlt
retf
ja
mov
push
jb
das
lahf
je
and
hlt
retf
lock
xchg
push
jl
mov
lahf
inc
retf
scas
sbb
les
sahf
icebp
retf
and
adc
test
nop
mov
adc
and
jo
scas
nop
repnz
sub
daa
hlt
retf
pop
addr16
xchg
pop
popa
lods
adc
cmc
std
and
lock
lods
adc
dec
sub
ja
scas
push
jnp
and
jns
sub
ds
and
adc
(bad)
fsub
lods
sbb
retf
jo
daa
sahf
ror
nop
jns
and
xchg
ror
daa
jne
cs
js
daa
call
mov
fldenv
pop
cli
les
daa
jbe
and
dec
and
repnz
adc
std
movs
sbb
(bad)
xchg
adc
movs
adc
retf
test
sub
fwait
jbe
and
jno
(bad)
aas
pop
in
daa
pop
in
mov
pop
fs
xchg
jns
sub
jnp
mov
mov
pop
movs
popf
fnstcw
adc
pop
pop
cli
lods
adc
stc
std
and
daa
hlt
retf
ftst
pop
nop
pop
and
lock
sub
jo
and
je
pop
push
test
xchg
hlt
jge
nop
test
daa
xchg
test
scas
xchg
je
lods
pop
lock
adc
mov
xchg
inc
int
cmps
pop
int3
and
jae
cs
inc
int
xchg
repz
retf
stos
aas
jne
mov
adc
and
fdivr
sbb
cli
dec
and
retf
and
mov
fldenv
inc
inc
lods
pop
repnz
cs
jne
and
pop
cld
int3
scas
xchg
stc
std
and
cld
retf
lea
pop
or
popa
pop
xchg
fsub
adc
dec
push
cmp
inc
into
mov
mov
pop
in
adc
std
scas
xchg
jb
daa
popf
jns
and
jo
and
push
js
and
xchg
inc
dec
and
cld
jge
nop
test
mov
daa
jbe
das
lahf
je
movs
push
hlt
retf
stc
std
and
daa
je
stos
pop
js
xchg
push
lock
and
daa
hlt
(bad)
movs
adc
jbe
daa
pushf
inc
les
sahf
hlt
jge
adc
xchg
ds
lea
(bad)
movs
sbb
jb
mov
cmps
js
and
jns
lods
sbb
lds
ds
gs
popf
inc
int
sbb
stc
std
movs
xchg
test
push
mov
pop
out
xchg
inc
dec
cmps
jp
mov
push
lock
ds
or
aas
fndisi(8087
mov
adc
jno
and
je
movs
adc
std
mov
adc
dec
cmps
xchg
jns
movs
adc
repnz
xchg
test
lods
adc
(bad)
mov
rol
pop
je
lods
adc
cs
test
movs
sahf
cli
retf
movs
sahf
ror
pop
jns
scas
sbb
std
lods
sbb
inc
scas
pop
cli
jge
xchg
jnp
xchg
adc
dec
daa
adc
retf
je
and
fldenv
mov
fsub
aas
test
mov
pop
in
adc
cli
leave
xchg
xchg
stc
inc
mov
pop
stc
ror
pop
iret
or
nop
ja
cmps
jbe
mov
adc
mov
xchg
jnp
cmps
adc
retf
repnz
lods
xchg
repz
xchg
mov
pop
out
daa
pop
out
xchg
ja
xchg
adc
sub
daa
jb
and
cmc
leave
mov
popf
cli
std
mov
cmps
ja
daa
push
stc
(bad)
daa
adc
les
pop
out
cmp
mov
pop
loope
daa
pop
loope
sbb
retf
movs
push
repnz
inc
mov
addr16
fdivr
xchg
fnstcw
push
icebp
(bad)
sub
push
je
and
lahf
js
xchg
adc
inc
and
lock
daa
hlt
retf
js
das
adc
inc
daa
adc
std
daa
adc
shl
repnz
sbb
ror
pop
lock
daa
sahf
inc
retf
lods
adc
pop
xchg
ja
movs
adc
stc
std
lea
pop
loope
mov
pop
scas
sbb
std
lods
adc
and
repnz
sub
daa
jo
sub
adc
inc
cmps
adc
test
xchg
js
scas
xchg
jbe
lods
xchg
inc
lds
cmps
pop
fs
je
mov
nop
test
stos
xchg
repnz
and
jnp
scas
xchg
inc
int
daa
jns
scas
adc
dec
and
stc
(bad)
mov
pop
out
xchg
inc
retf
mov
daa
jno
and
jno
scas
sbb
js
(bad)
lock
jb
movs
push
test
adc
sahf
clc
leave
and
je
movs
nop
jbe
cmps
jbe
scas
sahf
clc
out
adc
ror
xchg
jbe
cs
inc
int
mov
ror
xchg
jbe
lods
xchg
inc
les
adc
std
movs
adc
(bad)
mov
xchg
inc
int
daa
je
and
hlt
lds
xchg
jns
xchg
push
ja
cmps
pop
cli
lds
xchg
jbe
pop
lahf
test
aas
lock
cmps
fsub
xchg
repnz
xchg
test
je
and
xchg
jbe
movs
xchg
jbe
mov
daa
icebp
leave
mov
pop
addr16
jne
and
shl
cmps
pop
addr16
mov
inc
or
pop
data16
aas
stc
inc
mov
fdivr
aas
jns
xchg
popf
pop
lods
xchg
ja
daa
xchg
jns
and
jbe
xchg
pop
test
daa
fsub
daa
sbb
daa
sbb
xchg
sahf
jge
daa
adc
(bad)
or
(bad)
xchg
jae
lods
aas
jl
mov
pop
addr16
xchg
pop
cmps
adc
stc
jge
mov
inc
enter
dec
movs
adc
jbe
cmps
adc
jns
and
cmps
js
and
retf
repnz
popf
inc
enter
shr
hlt
retf
repnz
movs
adc
shr
daa
repz
inc
pop
pop
stc
dec
movs
adc
dec
xchg
pushf
jns
mov
adc
jge
sbb
inc
dec
sub
adc
(bad)
lock
fsub
pop
adc
sub
dec
pop
push
test
adc
jge
mov
fstp
xchg
jbe
mov
xchg
jns
and
je
xchg
sahf
jp
movs
xchg
jp
xchg
mov
pop
fs
cmp
fidivr
mov
ror
nop
ja
es
std
cs
jns
daa
daa
hlt
retf
jo
movs
pop
repnz
das
push
idiv
push
jo
daa
xchg
hlt
std
mov
nop
sti
jge
xchg
jns
xchg
push
test
pushf
ja
sub
adc
cmps
adc
xchg
adc
dec
lods
xchg
jbe
and
adc
sbb
pop
jo
sub
jnp
das
push
jno
and
je
scas
xchg
idiv
and
xchg
ror
jae
sub
repnz
sbb
jns
and
xchg
jge
xchg
push
jb
sub
push
jo
scas
sahf
jbe
(bad)
repnz
and
lock
daa
xchg
inc
retf
and
xchg
jb
pop
adc
dec
and
test
sub
cmps
jb
sub
sbb
clc
std
daa
popf
repnz
cmps
je
cs
je
cmps
xchg
jns
xchg
sbb
test
daa
lock
cs
je
scas
adc
jns
xchg
push
lock
das
adc
inc
and
fwait
ja
pop
adc
dec
and
adc
adc
mov
adc
inc
into
xchg
adc
dec
movs
xchg
jbe
and
lock
movs
xchg
rol
adc
lods
push
jb
push
daa
fsub
scas
adc
dec
mov
adc
std
movs
push
hlt
retf
lods
xchg
inc
inc
daa
sahf
jns
xchg
pop
jns
mov
lahf
ja
and
je
xchg
cmp
mov
pop
fs
sahf
fdivr
sbb
inc
cmps
xchg
ror
adc
int3
and
adc
and
std
std
mov
cmps
ja
adc
mov
xchg
inc
dec
and
cld
std
mov
daa
repnz
cs
repnz
push
cli
int3
es
cli
jge
adc
dec
xchg
mov
pop
cmps
xchg
pop
dec
daa
popf
inc
(bad)
mov
cmps
jbe
lods
adc
movs
sbb
retf
inc
dec
stos
nop
jnp
pop
adc
mov
mov
(bad)
or
adc
mov
adc
repnz
adc
inc
retf
das
mov
fsub
mov
pop
loope
cmp
push
pop
popa
mov
sbb
inc
daa
nop
inc
les
xchg
jp
mov
nop
cli
jge
ds
mov
test
pop
repnz
movsx
std
cmps
adc
jmp
stc
rcl
jb
lods
adc
lods
adc
jge
aas
test
pop
gs
pushf
pop
in
ss
mov
adc
lods
adc
jns
mov
(bad)
and
test
lea
rol
nop
cli
les
xchg
ja
push
mov
pop
mov
movs
aas
js
xchg
xchg
pop
and
test
fdivr
xchg
jns
xchg
lahf
test
fsub
xchg
pop
fisub
ds
mov
pop
ins
daa
nop
rol
adc
jge
ds
or
daa
ftst
mov
mov
fscale
mov
cmps
pop
in
push
test
mov
jno
xchg
sahf
pop
lods
adc
jbe
and
jns
and
inc
dec
(bad)
hlt
retf
push
dec
cmps
xchg
ror
xchg
jb
xchg
aas
ja
lea
out
outs
mov
xchg
ja
xchg
pop
hlt
dec
movsx
xchg
pop
fldenv
nop
jb
mov
fsub
xchg
xchg
pusha
ins
mov
fmul
(bad)
pop
(bad)
mov
lock
xchg
push
stc
inc
cmps
adc
daa
fsub
cs
and
jb
sub
cmps
jbe
cmps
aas
hlt
iret
pop
lahf
pop
fs
pushf
pusha
les
nop
rol
xchg
jp
and
fsub
pop
sahf
pusha
ins
sub
daa
jo
daa
sbb
or
adc
or
cli
in
sahf
push
dec
lods
xchg
ror
pop
jnp
push
daa
fsub
cmps
aas
lock
pop
cmps
pop
in
xor
rcl
xchg
je
movs
aas
jb
xchg
mov
pop
in
adc
inc
lods
adc
hlt
std
mov
xchg
in
std
push
xchg
pop
les
ds
stos
aaa
jnp
pop
fwait
pusha
ins
and
je
xchg
xchg
nop
jb
push
cmp
fisub
xchg
jbe
mov
rcr
cs
dec
xchg
ds
(bad)
cmp
fdivr
aas
jns
(bad)
stc
iret
es
std
shl
pusha
ins
xchg
nop
out
outs
(bad)
xor
xor
adc
iret
xchg
lahf
jb
(bad)
ds
lea
popa
add
fsub
xchg
jb
sub
nop
jl
and
fnstcw
push
js
xchg
aaa
sti
fs
daa
js
mov
adc
xchg
push
jbe
cs
je
mov
pushf
ror
popf
jns
cmps
lahf
rol
xchg
jl
sub
jb
aas
xchg
jge
aas
jns
movsx
iret
pop
push
fldenv
adc
cmc
jge
daa
test
or
pop
loope
daa
jno
aaa
or
mov
sub
daa
fsub
sub
jno
das
mov
jnp
sub
adc
jge
mov
ins
cmp
dec
(bad)
hlt
retf
(bad)
sub
fstp
xor
rcl
popf
jns
push
cmp
fisub
xor
rcl
adc
dec
scas
popf
idiv
cs
js
adc
dec
scas
nop
idiv
xor
xchg
shr
pushf
loopne
and
popf
jns
xcrypt-ctr
in
sbb
movs
push
pop
dec
movs
xchg
inc
dec
pop
pop
hlt
retf
shr
(bad)
lahf
sar
mov
pop
jmp
movsx
mov
repnz
sbb
addr16
dec
and
cli
inc
and
fsub
push
mov
rol
ja
cmps
pop
fscale
mov
daa
lock
mov
daa
cld
inc
mov
rcl
jns
pop
sahf
jb
lods
aas
ja
lea
pop
movs
xchg
inc
dec
mov
popf
cli
les
adc
inc
movs
sbb
stos
mov
inc
xor
rol
mov
pop
addr16
dec
and
cmc
into
lods
xchg
lds
sahf
out
outs
cs
jp
push
daa
fsub
setge
cmps
xchg
inc
dec
mov
fsub
xchg
xchg
pusha
ins
and
fsub
xchg
pop
fisub
nop
test
adc
jbe
xchg
xchg
movs
aas
stc
dec
mov
pop
out
adc
jge
aas
test
xchg
pop
sub
es
inc
mov
jbe
cmp
dec
movsx
frstor
adc
std
mov
sahf
pop
lods
aaa
ja
add
fwait
jge
es
repnz
(bad)
cmp
fdivr
mov
pop
ins
and
sahf
js
cs
pop
in
nop
rol
mov
(bad)
movs
adc
jbe
or
xor
outs
mov
pusha
dec
scas
xchg
inc
dec
movs
aas
icebp
retf
mov
mov
ins
cmp
pop
mov
fidivr
push
jae
mov
rcl
jns
mov
jb
daa
xchg
sar
and
jbe
push
daa
fsub
cmps
pushf
fs
mov
jb
xchg
xchg
pop
and
hlt
retf
loopne
and
shr
xchg
out
and
lock
aaa
cmps
imul
adc
iret
mov
inc
in
sahf
std
in
mov
(bad)
cmps
sahf
rcl
push
jns
xchg
xchg
jb
and
fsub
or
(bad)
and
xor
rcl
cmp
shl
pop
sti
leave
xchg
push
jbe
mov
pop
jb
push
daa
fsub
mov
or
out
pop
xchg
std
add
mov
push
(bad)
hlt
retf
(bad)
push
xor
(bad)
cmps
sahf
rol
push
jns
mov
ror
xchg
ja
mov
jo
or
pop
addr16
js
cs
jp
pop
push
cli
outs
lods
aas
ja
lea
pop
data16
aaa
jnp
test
out
outs
lods
adc
jns
scas
lahf
inc
lds
daa
fsub
mov
mov
(bad)
or
fsub
stos
sahf
inc
les
xchg
idiv
and
jbe
push
mov
fst
pop
shr
sbb
les
adc
jge
ds
mov
xchg
ja
daa
adc
jbe
lea
pop
ins
lods
push
lock
fsub
scas
sahf
js
cs
rcr
push
cmp
(bad)
test
out
outs
lea
pop
data16
sahf
rol
push
jns
mov
(bad)
cmps
adc
retf
jb
add
pushf
sar
add
bound
jnp
mov
jl
mov
jb
xchg
mov
pop
fs
ds
mov
fdivr
lea
fldenv
mov
ins
xchg
nop
out
outs
mov
aas
cmc
jge
mov
fscale
mov
jno
cs
(bad)
and
ja
mov
mov
ins
push
daa
fsub
mov
nop
test
cmp
imul
jp
and
jno
or
fsub
xchg
aaa
pop
ins
test
inc
dec
(bad)
hlt
retf
(bad)
das
xchg
and
mov
xchg
push
cld
outs
push
cmp
fisub
pushf
pusha
les
call
lods
xchg
jb
mov
cmps
jno
mov
cmp
cld
dec
(bad)
mov
fsub
xchg
aas
fsub
pop
pop
gs
xchg
sar
cmps
xchg
jae
daa
call
sub
cmps
jb
cmps
aas
lock
lea
pop
lods
adc
fsub
and
pop
jae
mov
fld
pop
inc
daa
sbb
movs
push
pop
dec
and
fcmovb
daa
xchg
rol
daa
jbe
xchg
rcr
xchg
xchg
pop
mov
aas
jbe
stos
aaa
js
cmp
push
iret
or
rol
push
jns
movsx
xchg
loopne
xchg
bound
hlt
leave
xchg
adc
cmps
adc
retf
repnz
mov
fidivr
nop
ja
mov
push
outs
mov
loopne
es
cli
std
cmps
aas
hlt
retf
pop
and
fsub
or
(bad)
cmps
adc
std
cmps
xchg
test
daa
nop
jnp
pop
add
inc
or
sahf
fmul
(bad)
nop
repnz
neg
add
rcl
aas
jo
lea
rol
push
jns
movsx
jmp
test
mov
pushf
fscale
mov
jb
or
pop
addr16
iret
mov
ja
daa
sahf
inc
retf
xchg
cmp
test
(bad)
push
in
cmp
ficom
sahf
push
imul
ds
jbe
pop
cmps
pop
in
sahf
js
cs
pop
gs
cmp
addr16
pop
pop
data16
jnp
cs
pop
and
pop
maskmovq
test
aas
test
hlt
inc
scas
mov
icebp
les
xchg
jl
sub
jb
and
stc
int3
stos
xchg
test
movs
mov
pop
fs
xchg
jbe
mov
bnd
adc
push
daa
fsub
mov
fsub
scas
pushf
pop
in
adc
std
shl
icebp
retf
js
cs
fsub
or
(bad)
scas
adc
jge
ds
scas
sbb
shl
pop
xchg
xchg
pop
fs
cmp
(bad)
scas
mov
pop
in
ds
(bad)
pop
lds
xchg
test
mov
fsub
xchg
aaa
pop
gs
pushf
pusha
in
cs
inc
ins
cmp
std
cs
jge
push
cmp
shr
pusha
ins
mov
adc
shl
in
xchg
jge
aas
pop
out
lahf
stc
dec
lods
adc
dec
pop
sbb
daa
adc
cli
jge
ds
mov
sahf
jb
cs
je
pop
sbb
movsx
xchg
inc
lds
mov
ins
es
sar
lods
adc
shl
cmps
pop
stos
sbb
dec
(bad)
stc
shl
inc
in
mov
frstor
sbb
jo
push
daa
fsub
es
iret
xcrypt-ctr
cmps
pop
mov
fsub
pop
pop
jnp
cmps
sahf
rol
daa
jns
push
cmp
(bad)
and
jno
and
mov
ins
xchg
mov
pop
fs
aaa
jnp
add
pop
hlt
iret
(bad)
js
or
mov
push
cmps
xchg
inc
int
daa
fsub
movsx
loope
cmp
out
mov
aad
push
imul
mov
fcmovb
mov
pop
leave
xchg
(bad)
fadd
or
in
jge
adc
mov
stc
dec
mov
xchg
ja
cmps
xchg
inc
int
mov
fisub
sahf
fscale
scas
xchg
jp
xchg
aas
jns
add
fisub
mov
test
jnp
cs
lock
push
adc
and
repnz
scas
sahf
js
cs
fsub
or
(bad)
sub
aaa
repnz
test
pop
pushw
mov
pop
fs
in
adc
cli
jmp
shr
mov
repnz
lahf
loop
scas
sbb
les
mov
pop
and
cli
inc
scas
sbb
les
mov
(bad)
mov
sahf
rol
push
jns
or
inc
in
aas
fsub
pop
popa
scas
sbb
les
cmp
pop
cmps
sahf
rcl
push
jns
mov
(bad)
mov
daa
fsub
(bad)
aas
fsub
pop
loope
mov
(bad)
mov
fndisi(8087
setb
daa
daa
js
mov
inc
or
xor
inc
inc
sub
aas
pop
gs
sahf
fldenv
aas
ja
daa
cmps
pop
in
sbb
dec
(bad)
stc
ror
inc
in
mov
fscale
and
cli
std
cmps
pop
(bad)
xchg
adc
scas
xchg
js
scas
mov
pop
mov
mov
popa
sub
js
sub
jnp
mov
inc
or
sbb
inc
mov
pop
inc
cmps
xchg
inc
dec
mov
pop
lea
xchg
xchg
and
je
and
lock
mov
inc
pop
xor
bound
adc
iret
mov
sahf
cli
std
lods
xchg
jb
adc
shl
cmps
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
inc
sahf
pop
daa
sar
push
addr16
loopne
test
fistp
test
(bad)
cmp
cli
add
dec
cli
jns
fsub
pop
call
daa
iret
retf
xchg
sbb
inc
cmp
daa
xor
mov
mul
jge
mov
add
sbb
lods
mov
imul
cmps
mov
jl
xchg
loope
aaa
cmps
scas
pop
xchg
pop
aas
inc
mov
cmps
inc
cmp
inc
cli
stc
popa
cmps
inc
or
mov
std
xchg
push
sbb
xchg
popf
add
daa
inc
mov
pop
cmps
arpl
xchg
mov
sbb
xchg
inc
mov
daa
mov
cmp
sbb
test
add
dec
cli
jnp
fsub
pop
call
daa
iret
retf
xchg
sbb
inc
cmp
daa
xor
cmp
jo
aaa
daa
jae
nop
pop
inc
aas
mov
adc
dec
enter
into
movs
(bad)
sar
sar
mov
loopne
adc
aaa
daa
jne
adc
(bad)
sar
xchg
inc
mov
movs
jecxz
jl
cmps
inc
cmp
daa
loope
rcr
mov
cld
js
(bad)
dec
call
test
adc
cmp
xchg
push
sbb
add
mov
(bad)
pop
daa
loop
hlt
movs
sar
daa
sbb
daa
out
ror
daa
cmp
pop
pop
dec
cmps
fistp
xor
out
aas
lods
xor
loopne
adc
pop
sub
pop
adc
push
and
sbb
push
leave
and
dec
cmps
push
ins
mov
xlat
jle
jecxz
lods
cmc
retf
icebp
mov
cs
jl
nop
push
pop
scas
mov
mov
scas
sbb
inc
stos
in
int3
xchg
xlat
fwait
mov
push
nop
dec
add
mov
outs
mov
jmp
xchg
hlt
inc
movs
loope
ja
inc
adc
in
ss
sub
xor
stos
cwde
dec
mov
sub
xchg
xlat
mov
mov
sar
mov
cwde
stc
xchg
push
outs
push
push
mov
out
xor
jge
cmp
xchg
xor
and
inc
cmps
xlat
adc
or
dec
sub
mov
scas
repnz
cmp
(bad)
adc
test
or
pop
je
jecxz
out
jns
mov
dec
fs
jge
push
mov
push
iret
ja
cwde
mov
cmp
outs
mov
xchg
or
retf
aas
mov
jmp
mov
mov
xchg
xlat
nop
int
cmp
add
push
sub
in
push
or
push
imul
leave
jns
add
in
ss
repz
and
push
leave
push
pushf
repnz
sbb
data16
push
mov
test
es
push
or
imul
dec
dec
mov
mov
dec
inc
fistp
call
jge
dec
inc
xlat
jle
lods
mov
mov
fimul
(bad)
jbe
cmp
dec
pop
mov
add
xor
cmp
in
and
and
xor
call
pop
dec
mul
call
ficomp
imul
ret
dec
push
leave
pop
mov
fst
mov
bound
push
mov
rcl
pusha
jnp
sub
sub
sbb
xchg
xlat
sti
or
push
add
sub
dec
sub
xchg
ins
call
sub
or
in
jae
mov
push
imul
stos
fs
rcr
mov
add
retf
rcl
push
push
lods
cmp
inc
icebp
int
mov
mov
push
push
sbb
(bad)
fldcw
loop
mov
mov
stc
and
out
or
sub
mov
test
mov
mov
push
jecxz
dec
mov
xchg
and
call
into
adc
sub
ss
mov
cmp
test
lods
js
pop
xchg
mov
cwde
or
dec
sub
leave
nop
and
retf
(bad)
xor
repz
xchg
jae
pusha
xchg
dec
jmp
push
xchg
jns
cmc
push
push
dec
xchg
sbb
jecxz
xchg
jns
sub
sbb
or
cmp
push
xchg
adc
sub
mov
or
sbb
inc
sub
mov
imul
dec
mov
xor
stos
inc
cmp
sar
in
xchg
test
jl
mov
in
loopne
arpl
clc
pop
jne
sbb
test
xor
push
pop
jnp
dec
jne
add
and
(bad)
jl
cmp
cli
push
packsswb
clc
fcomp
fiadd
pop
inc
arpl
push
pop
arpl
lea
loop
rcr
push
bound
sahf
mov
jecxz
pop
inc
push
movs
fistp
bound
push
and
pop
call
and
frstor
and
and
pop
out
jno
pop
(bad)
xlat
and
jp
jge
or
mov
dec
mov
xchg
add
xchg
sbb
sbb
mov
ret
adc
(bad)
cmc
jae
sub
loop
fucom
push
mov
int3
js
sub
in
repz
into
cwde
sub
jo
pop
sar
imul
test
out
jns
mov
xor
mov
sbb
xchg
add
bnd
pop
jecxz
in
jns
idiv
mov
push
in
rcl
sub
outs
arpl
mov
jne
jecxz
jmp
mov
nop
int
cmc
push
adc
push
mov
arpl
pop
or
sbb
jns
mov
sbb
xchg
push
sub
retf
je
stc
imul
ins
rcl
mul
jae
mov
cwde
repz
ds
cmp
sub
dec
xor
adc
retf
jo
int
mov
mov
dec
adc
repz
xor
ret
sbb
out
shr
shl
ret
ja
retf
jg
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
arpl
or
inc
jae
jmp
or
xor
push
pushf
mov
test
or
jmp
sub
(bad)
push
sub
xchg
or
xlat
push
and
inc
jae
jmp
and
and
xor
ror
sbb
mov
dec
(bad)
sub
cmps
add
push
popa
jae
leave
pop
mov
outs
dec
xor
mov
ror
sbb
scas
je
arpl
es
push
jb
icebp
or
jmp
and
arpl
or
pushf
stc
sub
mov
jmp
mov
pusha
loop
dec
add
mov
xor
sub
mov
test
cld
pop
sbb
xor
retf
shl
pop
sub
mov
imul
sbb
arpl
cdq
mov
mov
pushf
or
sbb
xor
mov
popf
sti
mov
popf
pushf
or
adc
inc
je
xor
sub
inc
jae
jmp
das
sub
mov
hlt
sti
jno
xor
shr
mov
icebp
sub
inc
repz
sahf
mov
movs
xor
stc
xchg
scas
sub
lahf
mov
not
sub
mov
xlat
pop
dec
push
leave
enter
push
xchg
push
ins
or
xlat
and
jecxz
xor
bnd
lock
cwde
pop
retf
add
sub
sbb
xlat
in
int3
xchg
xlat
clc
in
out
push
xchg
(bad)
push
xchg
adc
fwait
in
int3
icebp
mov
ret
add
jns
sub
push
push
push
sub
mov
xor
dec
cmp
sub
jecxz
mov
or
or
lahf
pop
mov
push
out
push
push
mov
xor
arpl
mov
xlat
mov
dec
scas
jmp
push
and
jne
ret
cmp
or
xor
push
mov
add
jns
or
int
iret
xor
cmc
push
xchg
jns
into
adc
dec
push
mov
test
xchg
stc
cdq
leave
aad
adc
js
retf
(bad)
movs
in
imul
or
nop
push
mov
or
and
sub
dec
imul
imul
shr
int
mov
xchg
jae
sub
push
arpl
lea
out
repz
sub
inc
imul
xchg
dec
imul
nop
dec
mov
stos
dec
(bad)
cs
lock
cli
add
pop
stos
xchg
ins
cmps
outs
jns
cmps
or
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
loope
jb
pusha
add
arpl
dec
adc
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fisttp
jns
fistp
stc
mov
fstp
jns
pop
cmp
mov
(bad)
jns
pop
cmp
pop
aas
jns
pop
xor
mov
fstp
jns
pop
cmp
mov
(bad)
jns
pop
cmp
mov
(bad)
jns
fisttp
jns
pop
sub
lods
pop
ds
lods
fstp
jns
pop
xor
test
fstp
stc
stos
(bad)
jns
pop
xor
mov
fstp
jns
pop
cmp
mov
(bad)
jns
pop
cmp
pop
aas
jns
pop
xor
fisttp
stc
mov
pop
cmp
mov
sbb
stos
pop
xor
mov
fisttp
jns
pop
sub
lods
pop
ds
lods
fstp
jns
pop
xor
test
(bad)
stc
stos
(bad)
jns
fstp
jns
fisttp
stc
mov
(bad)
stc
stos
fstp
stc
mov
(bad)
jns
pop
cmp
fisttp
stc
mov
pop
xor
lods
(bad)
stc
mov
fistp
stc
test
fstp
jns
pop
cmp
mov
fisttp
jns
pop
sub
lods
pop
ds
lods
fstp
jns
pop
xor
test
(bad)
stc
stos
(bad)
jns
(bad)
jns
fisttp
stc
lods
(bad)
stc
lods
(bad)
stc
stos
fstp
stc
lods
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
(bad)
jns
fstp
jns
pop
cmp
pop
cmp
mov
fstp
jns
pop
cmp
mov
(bad)
jns
pop
cmp
pop
aas
jns
pop
cmp
fisttp
stc
mov
(bad)
jns
(bad)
stc
mov
pop
cmp
stos
(bad)
jns
fisttp
stc
scas
fld
stos
pop
aas
stc
stos
fstp
jns
pop
cmp
mov
pop
cmp
mov
pop
xor
mov
or
lods
(bad)
stc
lods
fstp
stc
test
(bad)
jns
pop
xor
pop
xor
pop
cmp
test
cmp
fistp
stc
mov
(bad)
jns
pop
cmp
cdq
fisttp
jns
fld
stc
mov
(bad)
stc
scas
fstp
jns
fstp
test
fstp
jns
pop
aas
jns
pop
cmp
fisttp
stc
stos
(bad)
stc
scas
fstp
jmp
cmp
jns
(bad)
jns
fstp
jns
fisttp
jns
fisttp
pop
cdq
cmp
fxch
aam
jl
pop
and
xchg
idiv
fwait
or
sbb
pop
and
shl
dec
int3
cmp
pop
into
std
pop
push
sub
fistp
es
pop
dec
ret
xchg
les
pop
sbb
dec
push
lods
outs
mov
(bad)
pop
idiv
sub
sti
pop
call
cli
popa
mov
sbb
dec
cmp
out
psllq
ins
sub
cdq
fisttp
xchg
outs
mov
jns
fstp
cdq
fisttp
int3
sub
test
dec
jns
fisttp
xchg
outs
mov
jns
fstp
cdq
fisttp
int3
sub
test
dec
jns
fisttp
xchg
outs
mov
jns
fstp
cdq
fisttp
int3
sub
test
dec
cmp
pop
sbb
fisttp
sti
mov
jns
sahf
sub
(bad)
or
pop
pop
int
(bad)
stc
out
sub
inc
sbb
fstp
sbb
dec
je
and
dec
cdq
sti
or
and
dec
sbb
or
or
(bad)
or
(bad)
int3
out
and
sbb
or
xchg
pop
idiv
sahf
sub
hlt
pop
idiv
pop
ins
sub
cmp
or
sbb
xchg
mov
fmul
rcr
(bad)
or
ror
test
cmp
call
dec
jns
fisttp
outs
pop
sbb
or
into
dec
push
mov
or
out
sub
inc
adc
pop
ja
sbb
test
jmp
push
cmp
ins
das
and
mov
sbb
dec
ror
fwait
xchg
inc
add
sti
add
xchg
(bad)
sbb
dec
push
mov
es
popa
add
xchg
cmp
inc
adc
test
stc
lds
or
sbb
dec
jmp
mov
test
or
mov
pop
cmp
cmp
ins
(bad)
jns
fisttp
js
call
fcomp
or
sahf
in
jns
sbb
(bad)
fistp
jns
pop
or
push
(bad)
jns
fisttp
cld
pop
call
cwde
pop
push
add
fisttp
stc
fcomp
cmc
jns
pop
push
add
fisttp
retf
or
fdiv
js
cmp
call
cmp
cmp
test
pop
pop
sub
sti
mov
lahf
sub
cli
dec
cmp
cwde
fstp
sbb
dec
xchg
push
mov
pop
fcomp
int
sti
or
sahf
sub
clc
dec
xchg
les
xchg
out
mov
push
mov
pop
fcomp
int
sti
or
sahf
sub
clc
dec
xchg
(bad)
dec
xchg
push
mov
jns
sti
mov
cmp
or
sahf
sub
dec
cdq
out
lock
pop
idiv
sahf
sub
int3
pop
idiv
jp
sub
cmp
xchg
pop
neg
movs
mov
jns
sahf
sub
daa
or
and
dec
cdq
sti
or
dec
jns
(bad)
sub
jmp
cmp
in
fild
sbb
jnp
pop
nop
stc
sbb
cld
test
and
jns
lahf
sub
(bad)
ficomp
outs
or
mov
or
xlat
ins
mov
xlat
ins
mov
jge
dec
xlat
mov
es
push
scas
stos
push
shr
jns
xlat
jp
adc
adc
push
pop
xchg
rol
popf
aam
sbb
bound
scas
sub
repz
ins
mov
mov
sti
xchg
mov
rcr
inc
adc
dec
push
or
daa
das
outs
adc
js
sub
enter
ja
mov
dec
test
ins
or
xlat
mov
arpl
xchg
jns
sub
les
nop
stc
int3
pop
pop
or
mov
nop
jns
jmp
cs
out
push
push
mov
ins
or
lahf
mov
xchg
mov
dec
sbb
or
push
imul
push
dec
push
adc
mov
or
or
jecxz
ds
retf
jecxz
fcmove
adc
xor
aad
push
fdivp
mov
inc
cmp
jo
add
jns
ins
outs
push
js
push
mov
sbb
adc
xchg
cmp
xchg
mov
stc
sub
fnstcw
jb
mov
in
push
ins
rcl
dec
xchg
jae
ins
imul
push
je
dec
or
lahf
push
mov
pushf
(bad)
jno
fidiv
and
adc
dec
lock
std
jae
mov
mov
xchg
xchg
dec
imul
and
jne
sub
mul
(bad)
retf
(bad)
cmc
pop
in
mov
mov
rcr
mov
sar
add
pop
dec
sub
pop
repz
scas
ss
mov
rcr
xlat
xchg
sub
out
idiv
mov
repz
or
xchg
mov
shl
and
ss
aad
(bad)
int3
pop
scas
xchg
adc
pop
or
push
aad
pop
popf
ss
rcr
adc
mov
xchg
xchg
popa
xor
adc
lods
cmp
ss
add
mov
fwait
cs
push
add
ss
(bad)
leave
bound
jmp
les
sub
jp
jge
dec
xlat
mov
and
push
shr
jns
xlat
or
xchg
rcl
ins
mov
int3
loope
ss
scas
cdq
aad
test
lods
ja
adc
jae
cs
shr
xchg
(bad)
pushf
pop
repnz
dec
adc
push
ror
pop
ins
rcl
mov
xchg
repz
sub
mov
ja
sub
and
xchg
pushf
xchg
or
adc
xor
aad
jns
not
bound
jne
dec
push
mov
mov
arpl
or
sahf
inc
mov
cdq
add
retf
imul
and
fisttp
call
jo
jnp
jns
jmp
or
sub
lahf
jo
movs
mov
jecxz
adc
sar
xchg
adc
xchg
out
retf
push
mov
or
or
mov
test
push
js
ins
mov
xlat
(bad)
pop
retf
mov
repz
lods
adc
mov
cdq
and
sub
retf
xchg
xchg
or
mov
imul
inc
and
or
jae
xor
push
shr
or
loope
(bad)
dec
movs
shl
lods
das
outs
add
loop
es
in
ss
mov
stos
or
nop
(bad)
frstor
adc
test
test
xchg
nop
xchg
test
cmp
mov
mov
mov
out
pop
inc
addr16
fbld
aas
xchg
daa
push
(bad)
in
lea
xchg
mov
ins
aas
xor
xor
xor
out
and
inc
xor
out
xchg
cmps
pop
and
ins
push
and
aaa
mov
mov
and
leave
push
dec
jno
mov
push
das
sub
ins
mov
ins
mov
hlt
in
out
xchg
xlat
ins
mov
push
ins
mov
in
stc
xchg
xlat
push
adc
adc
pop
in
mov
xlat
cdq
xor
mov
not
cdq
and
mov
jbe
push
dec
hlt
call
push
cmc
loopne
adc
aad
scas
xchg
push
ins
mov
mov
mov
aam
out
xchg
push
lods
lock
ja
mov
cmp
outs
or
mov
js
xchg
ins
mov
adc
xchg
fdivp
dec
or
jmp
xlat
ffree
cmps
jecxz
repz
ins
or
xlat
test
mov
call
ins
mov
push
xchg
xchg
dec
and
mov
aad
scas
xchg
addr16
xchg
gs
es
mov
push
sub
xchg
sbb
in
mov
arpl
retf
test
ins
or
xlat
jle
mov
sub
xchg
push
dec
mov
ins
mov
hlt
in
out
xchg
xlat
ins
mov
push
ins
mov
mov
or
stos
jmp
sub
or
xchg
push
(bad)
leave
xchg
push
lds
xchg
xlat
daa
lods
mov
gs
mov
adc
repz
xlat
pop
or
rcl
or
fs
aaa
xlat
stos
ins
and
loop
aas
imul
or
in
mov
in
int
xlat
(bad)
hlt
push
stos
mov
xlat
(bad)
cmp
mov
mov
or
push
stc
sub
push
jge
cmp
mov
xchg
xchg
xchg
gs
mov
adc
repz
xlat
fisubr
sbb
dec
repnz
adc
bound
lock
adc
js
in
xchg
repz
js
in
xchg
jae
sub
js
in
xchg
repz
mov
not
fdivp
jb
jb
test
sub
out
leave
push
sub
xchg
mov
scas
xchg
push
dec
mov
adc
dec
shl
sub
mov
dec
test
adc
jns
hlt
push
adc
adc
pop
in
mov
xlat
sub
test
in
mov
in
int
xlat
(bad)
hlt
push
stos
mov
xlat
dec
mov
or
cli
push
jge
or
jmp
cdq
xchg
nop
xlat
ins
mov
imul
or
lahf
sub
rdpmc
out
push
in
dec
mov
hlt
sub
mov
dec
test
adc
jns
hlt
push
test
xchg
adc
pop
in
mov
xlat
cdq
or
in
mov
not
cdq
jnp
mov
cmp
pop
test
mov
not
fdivp
out
ss
inc
mov
retf
push
das
sub
ins
mov
ins
mov
hlt
in
out
xchg
xlat
ins
mov
mov
in
or
xlat
mov
or
push
stc
sub
push
jge
mov
xchg
xchg
fs
push
dec
hlt
call
xlat
enter
xchg
sub
mov
dec
mov
jmp
das
mov
jmp
adc
in
or
xlat
cmp
stc
sub
push
jge
js
mov
out
es
dec
and
push
dec
or
lahf
jno
rdpmc
jno
lods
inc
dec
adc
test
mov
xchg
outs
push
cmc
ins
mov
push
ins
mov
mov
mov
aam
mov
mov
or
stos
push
ins
xchg
push
jmp
cmps
mov
inc
lock
and
sbb
imul
xchg
call
push
add
leave
xchg
xlat
and
leave
push
dec
jno
mov
test
lods
push
inc
mov
jmp
mov
mov
pop
push
stos
push
std
xchg
push
aaa
or
mov
outs
or
mov
dec
cmp
(bad)
loopne
jle
or
mov
lods
push
out
leave
es
inc
movs
mov
pop
jae
mov
in
ss
xlat
dec
jb
xor
mov
push
ins
mov
cwde
mov
addr16
ss
sub
mov
not
stos
push
shl
dec
or
(bad)
lock
imul
fisubr
sbb
cwde
mov
addr16
ss
sub
fs
out
push
sub
and
sub
pop
jmp
sub
jae
loop
sub
(bad)
push
mov
sub
into
ins
mov
push
xlat
jbe
aaa
fisttp
mov
sub
into
ins
mov
push
(bad)
dec
es
push
leave
mov
dec
les
or
xlat
mov
jne
push
(bad)
neg
dec
rcl
dec
shl
imul
jne
sub
mov
mov
(bad)
xchg
mov
icebp
and
xor
jg
sub
mov
and
jae
mov
mov
jecxz
adc
sub
mov
ja
adc
sub
xchg
and
or
loope
sub
xchg
mov
leave
jns
sub
mov
push
xor
test
cdq
int
and
push
sahf
cmp
push
push
mov
arpl
mov
aas
or
push
ins
mov
(bad)
icebp
int
and
inc
jmp
int
movs
push
mov
gs
retf
ja
in
push
and
mov
push
push
out
dec
push
mov
sbb
retf
mov
xchg
repz
xor
hlt
nop
push
int3
popa
ins
or
xlat
xchg
jae
pusha
sbb
imul
pop
inc
call
push
xchg
cwde
dec
cmp
dec
jmp
imul
fdiv
sbb
lods
cmc
out
iret
icebp
and
out
shr
dec
xor
int
mov
lea
cmp
push
leave
sar
sti
js
movs
sti
js
movs
iret
xor
stos
and
clc
push
push
sti
ret
shl
movs
neg
sbb
mov
pop
mov
jno
or
pop
mov
or
mov
jp
sti
scas
mov
pusha
mov
or
mov
test
push
pop
mov
pop
push
popa
add
test
ins
push
and
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
push
sbb
push
cmc
pop
mov
imul
push
sub
frstor
call
nop
xor
or
imul
dec
xlat
lahf
mov
div
inc
imul
dec
or
outs
adc
xor
or
div
inc
imul
dec
or
fs
adc
xor
or
test
xchg
sub
jge
jae
in
fisubr
sbb
or
push
stc
sub
push
jge
outs
xlat
mov
ins
mov
adc
sub
pop
push
mov
push
jmp
pop
in
and
pop
ins
mov
mov
ins
mov
aam
test
push
call
add
outs
adc
imul
leave
xchg
xlat
cmp
mov
in
dec
fcomi
cmp
mov
in
dec
fcomi
cmp
mov
in
dec
fcomi
and
push
xchg
xchg
xchg
jg
mov
call
mov
in
leave
xchg
xlat
or
fs
sub
push
jge
outs
xlat
mov
test
xchg
push
xchg
mov
xchg
mov
lods
ret
xchg
xlat
pop
dec
mov
ins
cmp
loop
clc
xchg
bound
repz
lahf
and
in
clc
not
ins
mov
xlat
in
xlat
stos
repz
mov
ins
or
imul
mov
call
(bad)
(bad)
pop
mov
xlat
pop
(bad)
mov
pop
push
jae
and
mov
retf
stc
push
and
adc
jns
xchg
ins
and
dec
push
pushf
xchg
push
ins
mov
bound
xchg
loop
jae
and
dec
imul
sbb
jecxz
in
stc
adc
xchg
push
adc
outs
or
mov
mov
xlat
adc
in
xchg
jae
sub
push
and
jae
pusha
push
ins
or
not
mov
call
mov
dec
mov
call
xchg
loop
mov
sub
mov
xlat
xchg
int
sub
sub
dec
push
mov
int
xchg
gs
dec
cmp
fldcw
fdiv
out
sub
dec
or
bound
sub
push
adc
pop
dec
or
fs
repz
sub
mov
adc
xchg
bound
xchg
loop
repz
and
imul
dec
or
and
ja
mov
xchg
xchg
push
lods
pop
dec
or
fs
mov
imul
and
loop
mov
xchg
and
imul
ins
clc
xchg
loop
jae
sub
jae
adc
xlat
stos
out
pop
sub
and
push
lahf
and
ins
mov
xchg
loop
mov
xchg
and
jae
test
inc
imul
dec
or
fs
std
mov
sub
fs
sub
push
jge
ins
adc
jo
ds
leave
xchg
ins
xchg
jne
push
inc
ins
shl
ins
mov
sbb
adc
mov
fincstp
cmp
sub
in
mov
test
xchg
push
in
dec
xlat
ss
leave
repz
icebp
push
mov
dec
mov
xor
mov
xlat
sub
jge
or
mov
jmp
icebp
mov
adc
push
je
(bad)
ss
or
aad
int
sub
jmp
out
dec
repnz
xlat
mov
push
and
dec
mov
ins
or
xlat
inc
in
xchg
push
(bad)
leave
xchg
push
dec
mov
ins
or
xlat
inc
in
xchg
push
(bad)
leave
xchg
push
sbb
jne
in
mov
adc
adc
jb
ins
mov
dec
xchg
enter
xchg
adc
into
ins
or
xlat
test
ins
mov
shl
or
adc
xlat
inc
ins
push
and
in
jae
xlat
fild
sbb
dec
lock
sub
or
sub
xchg
xlat
or
fs
ins
mov
xlat
sub
push
jge
jae
mov
dec
repnz
adc
bound
dec
lock
adc
or
cmc
ins
clc
xchg
xlat
imul
shr
retf
mov
not
hlt
push
dec
xlat
out
into
push
xchg
stc
lods
imul
push
push
stos
push
cli
xchg
push
pop
add
pop
call
fild
sbb
imul
and
dec
test
dec
push
in
lfs
int
rdpmc
push
jno
pop
jmp
lfs
mov
lods
nop
in
leave
xchg
xlat
or
fs
sub
push
jge
jae
mov
dec
lock
adc
dec
and
push
dec
xchg
mov
push
dec
repnz
imul
xlat
test
aad
outs
or
mov
dec
cmp
jmp
cmc
test
mov
xchg
sbb
lods
push
xchg
jae
in
sbb
shr
int
xlat
push
(bad)
jmp
sub
shr
int
xlat
push
out
push
jmp
imul
in
int
xlat
push
out
jmp
sbb
shr
int
xlat
push
xlat
jmp
add
shr
int
xlat
push
fucomip
push
ins
mov
lahf
mov
neg
lods
xor
and
mov
xlat
or
push
stc
push
mov
adc
dec
push
cmc
test
adc
xlat
sub
cs
jge
aaa
push
mov
jmp
push
cmc
imul
xchg
xlat
imul
in
ins
mov
mov
xchg
push
(bad)
leave
xchg
push
push
mov
ins
or
aam
in
xchg
push
(bad)
leave
xchg
push
sbb
leave
rol
mov
mov
pop
xor
aad
mov
push
push
shr
inc
adc
icebp
cld
push
dec
lods
adc
push
adc
push
(bad)
ins
mov
stos
xchg
in
pop
xchg
dec
inc
sub
jbe
push
ins
xchg
jae
ins
je
arpl
or
mov
mov
imul
push
pop
loopne
xor
mov
in
clc
outs
mov
mov
xlat
repnz
dec
adc
mov
cdq
fcom
xlat
mov
loop
xchg
dec
das
leave
jmp
xlat
or
jecxz
fpatan
std
test
dec
sub
push
push
imul
jne
rol
mov
in
rcl
xchg
xor
jmp
ins
mov
xlat
out
jns
mov
popa
and
jno
push
mov
mov
sub
mov
or
stc
call
stc
xchg
push
je
mov
arpl
xlat
pop
push
sahf
or
pop
scas
int
and
dec
jmp
or
add
push
or
push
push
mov
dec
dec
mov
call
push
xchg
jns
sub
push
sub
int3
cmc
push
and
or
int3
call
loopne
or
icebp
int
test
jns
nop
dec
or
sub
rol
pslld
adc
daa
jb
or
mov
cmps
mov
dec
or
div
mov
mov
pop
shl
push
lea
mov
scas
xor
lea
shl
or
push
mov
icebp
dec
push
jb
mov
shr
mov
xor
xor
fwait
mov
neg
dec
neg
dec
not
cmp
div
test
jae
out
mov
sub
int
jmp
into
mov
sbb
mov
dec
or
test
mov
dec
or
test
aaa
ret
shl
or
xor
dec
push
mov
icebp
dec
push
jbe
or
test
cmpxchg
test
out
cmp
mov
mov
dec
repz
or
repnz
add
mov
add
mov
add
mov
(bad)
mov
mov
test
in
mov
aaa
cmc
xor
div
mov
dec
or
xor
lea
dec
enter
mov
fst
xor
mov
mov
adc
adc
xchg
(bad)
(bad)
mov
or
adc
imul
xchg
fcomp
and
ins
push
and
(bad)
leave
xchg
push
sbb
pusha
xchg
ins
mov
xchg
bound
xchg
aas
sbb
outs
sub
stos
mov
dec
mov
(bad)
into
or
adc
daa
mov
sub
add
dec
xchg
mov
push
lods
clc
or
adc
mov
popf
sub
js
fisubr
enter
push
scas
lods
jne
sub
jbe
scas
jae
loope
test
cmp
in
push
imul
fistp
loop
adc
fldcw
cwde
xlat
clc
dec
retf
mov
push
mov
inc
dec
or
test
push
dec
or
in
imul
or
fisubr
mov
mov
in
rol
idiv
loop
sbb
bound
mov
pop
jne
cmc
mov
and
dec
lea
in
adc
sub
retf
xor
shr
iret
shl
dec
mov
arpl
stc
in
sbb
dec
push
lods
jo
push
adc
sbb
retf
in
in
or
mov
loope
push
out
push
xlat
mov
jae
lahf
dec
push
arpl
mov
in
xor
sbb
cmp
imul
pop
mov
popa
sub
push
imul
push
sahf
dec
fdiv
jae
and
adc
xchg
js
sub
inc
(bad)
cs
jno
add
fist
xor
mov
(bad)
pusha
ror
int3
cmps
push
sar
mov
lods
mov
mov
sbb
mov
mov
sub
les
push
pop
add
test
add
mov
sar
inc
dec
adc
dec
push
push
add
mov
mov
xor
push
ror
mov
les
mov
mov
imul
sub
and
jg
ror
inc
ror
shl
mov
xor
outs
sub
ds
mov
sbb
jnp
add
xlat
in
daa
iret
sti
xor
repnz
(bad)
mov
mov
je
out
mov
xor
rol
mov
xor
push
sub
ds
mov
ds
shr
in
fdiv
ret
int3
out
fwait
out
push
mov
jne
pop
dec
cmp
cmp
mov
cmp
cmp
sub
int
ffree
in
iret
push
add
xor
fmul
pop
mov
les
mov
mov
ds
mov
je
pop
test
dec
sub
ror
inc
inc
mov
icebp
inc
push
stc
ror
retf
xor
add
xor
lea
rol
mov
ror
jmp
jne
rol
shl
mov
add
test
sub
in
push
ror
rcl
inc
sar
mov
or
xor
jle
dec
push
pop
sub
les
or
mov
inc
mov
inc
and
cmps
mov
mov
inc
xor
ins
ins
xor
cmp
cmp
cmp
dec
loop
imul
sub
jge
push
xor
int3
rol
adc
cmp
int3
cdq
inc
jno
adc
cmp
dec
jge
sar
jno
mov
jno
xor
ins
inc
mov
inc
xor
ins
inc
cld
ret
inc
imul
sub
ror
inc
jno
adc
cmp
cmp
cmp
dec
sub
imul
sub
dec
dec
push
xor
inc
xor
cmp
cmp
cmp
dec
add
xor
push
add
sub
ds
mov
ror
inc
xor
sbb
sub
jnp
rol
daa
sub
gs
ds
retw
ds
mov
pop
data16
xor
(bad)
xlat
inc
xor
mov
hlt
int3
shl
out
imul
push
imul
mov
fwait
outs
sub
mov
int3
ret
push
inc
or
icebp
xor
in
ds
mov
mov
sub
inc
(bad)
aad
xor
(bad)
shr
addr16
shl
mov
inc
or
(bad)
mov
push
push
imul
inc
clc
ret
jno
lds
cmp
outs
sub
ds
mov
inc
mov
inc
(bad)
pop
add
mov
ror
inc
fsub
push
iret
aas
mov
inc
dec
sub
mov
in
addr16
(bad)
mov
mov
outs
sub
mov
scas
ins
inc
jl
inc
inc
or
mov
ror
inc
lahf
xor
dec
sub
inc
mov
pop
add
into
xlat
test
rol
xchg
es
inc
(bad)
(bad)
push
xor
dec
adc
sub
add
fs
sbb
or
lahf
outs
and
cmc
int3
push
inc
fwait
out
push
mov
jae
pop
aaa
sti
mov
mov
fwait
outs
sub
mov
xor
rcr
inc
xchg
mov
inc
inc
push
cdq
(bad)
inc
pop
into
repz
push
out
push
dec
(bad)
mov
repz
ds
iret
push
xor
dec
and
sti
xchg
mov
ins
clc
mov
sub
xchg
xchg
gs
jae
in
and
in
int3
not
cmp
sbb
in
xchg
jnp
mov
xchg
xlat
daa
hlt
xchg
adc
rcl
stos
xchg
push
and
imul
scas
xor
stos
adc
fwait
mov
mov
xor
or
xchg
int3
nop
and
punpckhbw
idiv
pop
mov
sbb
sub
xchg
xlat
mov
jecxz
xchg
push
imul
fsubr
retf
imul
or
xlat
out
xor
and
cdq
inc
xor
in
in
xchg
xlat
sbb
dec
pop
pop
mov
sbb
mov
sbb
push
sub
xchg
push
or
pop
retf
mov
mov
stc
loope
adc
dec
sub
int
xlat
xor
aad
jns
test
push
daa
push
lods
jo
push
movs
in
adc
jne
arpl
jg
dec
jp
mov
mov
push
mov
js
pop
ficom
inc
sub
push
imul
xchg
jae
jnp
js
mov
xchg
jae
imul
imul
xchg
jae
sub
or
xchg
jae
ins
pop
inc
imul
sub
sub
or
mov
or
or
retf
push
(bad)
out
adc
out
xchg
mov
repnz
xchg
movs
inc
(bad)
scas
xor
test
loope
call
arpl
push
retf
pop
push
cld
adc
sub
inc
push
retf
fiadd
pusha
out
arpl
push
retf
fiadd
fisttp
cld
cmp
pop
clc
int3
cli
(bad)
call
cmps
jl
(bad)
in
fstp
inc
jl
les
mov
jle
sbb
dec
adc
add
jecxz
pop
test
retf
test
inc
cmp
cld
dec
fcmovb
(bad)
xchg
fwait
cmp
int3
inc
adc
idiv
les
fcmovb
mov
mov
xchg
cmp
pop
pop
fmul
inc
pop
test
cld
pop
fiadd
into
pop
test
cld
nop
inc
mov
fiadd
mov
fsub
test
and
jl
fidiv
test
mov
in
cmps
imul
test
or
mov
in
cdq
xchg
xlat
in
adc
xlat
in
inc
xchg
xlat
ins
out
xlat
ins
scas
xchg
xlat
in
js
xlat
in
ret
xchg
xlat
ins
xor
xlat
in
int3
xchg
xlat
in
bound
aad
ins
xchg
xlat
ins
mov
xlat
in
int3
nop
xlat
cmp
int3
xchg
xchg
aas
scas
xchg
push
shr
jns
xlat
xchg
loopne
popa
adc
push
pop
xchg
int3
stc
dec
adc
out
movs
xchg
push
imul
xchg
push
imul
adc
scas
sub
jno
out
call
pop
xchg
int3
rcr
cmp
lds
jmp
bound
loop
cdq
loope
ss
rcl
sbb
je
int
xlat
jmp
xlat
push
pop
ja
cwde
adc
pop
xchg
mov
addr16
out
jns
mov
fidiv
push
into
stc
mov
push
push
cmp
mov
xor
arpl
push
dec
icebp
or
stc
xchg
xlat
mov
or
xlat
out
adc
fistp
mov
push
xor
int
mov
mov
pop
push
xor
in
imul
popf
into
xchg
jae
sub
jae
mov
arpl
adc
in
xor
mov
pop
mov
stos
dec
imul
dec
push
mov
arpl
jno
leave
cli
mov
(bad)
aam
js
stos
xchg
jae
sub
lods
dec
push
pushf
rcl
and
repnz
test
retf
and
mov
or
inc
or
test
retf
inc
inc
add
sub
ret
push
xor
(bad)
retf
jmp
jmp
pop
push
(bad)
or
mov
push
inc
stos
imul
cmp
jg
xchg
jne
xor
sub
leave
pop
sbb
push
cmc
ins
mov
adc
cmc
xlat
push
lods
xchg
push
ins
mov
ins
mov
imul
out
xchg
xlat
xchg
jae
and
imul
sub
mov
lds
ins
test
mov
dec
hlt
adc
jmp
imul
test
scas
loope
ins
mov
push
adc
sub
cmp
sub
mov
std
dec
jmp
sub
retf
inc
cmp
xchg
jae
in
fld
sbb
xchg
repz
xchg
cwde
xchg
xchg
mov
push
ret
(bad)
call
push
in
repz
mov
dec
imul
sub
push
jge
or
mov
in
repz
mov
ret
adc
dec
imul
ins
mov
cmc
(bad)
leave
push
xchg
xchg
jae
test
jns
rcl
xchg
jae
test
adc
xlat
xchg
jae
stos
ins
or
xlat
das
not
adc
movs
imul
adc
xchg
inc
cmp
out
push
sub
int
repz
mov
bound
xchg
xchg
imul
sbb
xchg
ins
or
test
into
xchg
push
xchg
repz
push
mov
xchg
ja
movs
adc
lods
push
mov
xchg
repz
push
mov
imul
repz
mov
xchg
push
xchg
repz
cwde
or
pop
jmp
push
cmc
xchg
repz
sub
cmps
not
sub
mov
jmp
push
cmc
xchg
repz
sub
jmp
push
xchg
repz
sub
jae
xchg
ins
or
test
scas
xchg
push
in
leave
adc
xchg
in
imul
xchg
jae
push
das
jb
sub
jae
lods
ins
or
xlat
das
lock
xor
mov
in
retf
xchg
jae
lods
pop
or
jmp
repz
loop
sub
xchg
repz
xchg
cdq
fld
in
sbb
scas
dec
add
dec
mov
jns
repz
ins
mov
xchg
inc
cmp
outs
sub
in
dec
push
cmc
xchg
xchg
popa
sbb
mov
xor
xchg
jecxz
xchg
sbb
mov
or
xchg
repz
jle
cmp
loop
mov
jmp
xchg
popa
adc
xlat
sub
leave
pop
and
or
push
xchg
jae
sub
push
and
sbb
xchg
xlat
xchg
jae
mov
std
lahf
xchg
mov
push
mov
in
push
icebp
xchg
jae
mov
cdq
(bad)
xchg
xlat
in
sbb
sub
out
xchg
xlat
xchg
jae
stos
ins
or
xlat
dec
mov
adc
ins
rcl
jae
xchg
lea
scas
cwde
pop
xchg
xchg
repz
xchg
mov
sub
mov
xchg
ins
or
test
into
xchg
push
xchg
repz
sub
mov
adc
movs
imul
dec
or
popa
xchg
or
sub
push
call
imul
xchg
jae
mov
int
movs
aad
or
push
out
ds
shl
rep
mov
mov
imul
xchg
jae
mov
xchg
xchg
imul
in
push
stc
xchg
jae
mov
jmp
push
cmc
xchg
jae
mov
ins
movs
adc
sub
mov
sti
or
ins
xchg
jae
mov
in
jae
xlat
fild
sbb
test
push
addr16
repz
in
or
xchg
repz
push
dec
add
ins
or
push
cwde
mov
cmc
xchg
repz
sub
cmps
neg
pop
or
mov
test
lods
push
ins
movs
adc
sub
mov
call
or
pop
ins
or
xlat
test
arpl
repz
xchg
and
in
cmps
neg
pop
or
imul
push
mov
sub
cmp
inc
ins
mov
(bad)
leave
xchg
push
sbb
mov
jg
or
arpl
add
cmc
in
retf
lds
test
xchg
push
lods
push
dec
or
popa
xchg
dec
push
cmc
test
ins
push
and
sbb
or
repz
sub
and
xchg
repz
jae
push
leave
rol
mov
push
repz
ins
mov
xlat
or
jecxz
sub
lock
mov
xor
test
js
sub
xlat
icebp
inc
dec
lock
ins
pop
xchg
push
jp
inc
jo
loope
or
cs
xchg
jns
sub
push
add
ins
xchg
test
(bad)
xchg
mov
xor
push
mov
sbb
dec
mov
push
imul
(bad)
xor
icebp
in
ror
test
xchg
adc
ds
adc
sub
ss
sub
outs
or
xor
fsubr
and
(bad)
jle
rcl
mov
je
jecxz
out
jns
mov
push
jb
jmp
and
sub
inc
xchg
or
push
mov
sub
xchg
repz
ins
or
mov
rcl
mov
cwde
loope
lods
sbb
imul
jae
jge
jae
mov
add
imul
das
push
sbb
ins
ds
scas
sub
test
xchg
push
pop
jp
jb
add
jge
test
mov
xor
mov
ret
cmp
or
pushf
stc
mov
lods
or
inc
jns
les
jle
xor
lahf
mov
mov
mov
push
aas
mov
add
cdq
push
mov
inc
in
icebp
cmp
fs
xchg
sahf
mov
and
pop
in
imul
stc
dec
add
ins
jb
sar
aas
stc
fisub
xchg
mov
push
out
bound
in
dec
and
sub
mov
jmp
or
test
test
imul
add
mov
xor
repz
loop
push
lods
daa
dec
or
popa
popf
jae
in
fld
sbb
dec
mov
mov
pop
mov
push
dec
or
gs
and
cmc
xchg
mov
push
out
jl
ins
mov
push
stc
inc
mov
adc
dec
sar
inc
cmp
add
imul
fisubr
sbb
push
repnz
push
scas
mov
imul
push
cmp
xchg
ss
out
bound
in
dec
and
or
fs
ins
mov
jge
xlat
stos
neg
or
ins
mov
xchg
(bad)
fisubr
sbb
adc
shl
jecxz
sub
out
and
sub
xlat
dec
test
adc
repz
stc
repz
pop
ins
mov
imul
or
ins
mov
iret
push
mov
hlt
jae
adc
pop
(bad)
scas
lods
cmc
daa
sub
or
sub
jmp
test
cwde
lock
jae
mov
xchg
or
or
mov
xor
jae
pop
test
aad
js
mov
or
xlat
out
js
mov
xchg
repz
sub
dec
imul
repnz
sub
cmp
dec
mov
xchg
xlat
aaa
sub
test
xlat
movs
xchg
mov
test
xor
ins
or
xlat
mov
jecxz
in
jns
div
jns
in
push
in
fs
data16
arpl
cmps
rcl
ins
or
xlat
in
retf
push
sbb
dec
jb
push
push
es
hlt
or
arpl
lock
xchg
push
imul
mov
jecxz
in
stc
add
xchg
mov
xor
sub
nop
push
pop
test
inc
call
and
push
push
pop
xchg
add
dec
int
repz
lods
jo
sub
test
scas
ins
push
in
mov
in
push
lods
leave
lock
push
mov
nop
(bad)
sub
dec
jmp
pop
jecxz
xchg
dec
ror
out
inc
arpl
or
repnz
or
mov
push
ucomiss
mov
jmp
jb
call
or
sub
push
int3
dec
push
xchg
sbb
pop
and
mov
sti
sbb
dec
dec
xchg
or
out
out
cmp
sbb
outs
cwde
rcr
ins
popa
adc
xor
(bad)
or
nop
xchg
jmp
std
add
sub
(bad)
fisub
xchg
mov
xchg
and
in
cmps
neg
inc
daa
shl
dec
or
jmp
jne
jne
push
or
sti
div
mov
mov
stc
jo
xor
data16
push
shl
test
sti
pop
lods
out
push
pop
adc
xchg
mov
sub
mov
test
out
rol
push
dec
ret
clc
imul
xchg
lea
into
hlt
push
(bad)
mov
out
neg
je
mov
xchg
dec
mov
aam
retf
je
adc
inc
ins
mov
push
repz
in
pop
int
in
or
hlt
ins
mov
rcl
mov
and
outs
mov
push
push
adc
dec
js
jno
repnz
mov
sbb
push
mov
dec
shl
in
pop
test
into
test
addr16
sub
arpl
xchg
xlat
ins
mov
xlat
out
ja
rcl
push
ins
or
pushf
xchg
mov
push
xor
push
in
stc
add
and
in
jne
sub
push
sub
push
retf
retf
shr
retf
add
ins
push
out
and
jmp
jne
in
sub
mov
xlat
out
push
mov
cmp
push
mov
xchg
cwde
sub
xor
ror
xchg
jae
sub
in
jns
into
ja
stc
and
jns
in
jae
mov
xor
xchg
mov
clc
xlat
xchg
repz
xor
mov
xchg
jae
xor
imul
ins
or
test
dec
xor
loop
xchg
dec
imul
out
stc
imul
dec
jno
repnz
push
outs
mov
ins
(bad)
jmp
or
das
mov
sub
add
sub
fs
je
sub
cmc
aam
fs
in
call
or
repnz
jae
xor
ficomp
(bad)
leave
xchg
push
dec
mov
imul
jne
dec
or
adc
xlat
daa
outs
mov
out
ins
mov
mov
imul
or
or
fs
rep
push
pop
in
jge
imul
mov
ins
mov
jbe
into
push
mov
jg
out
(bad)
adc
imul
imul
xchg
xchg
int3
shl
outs
les
mov
mov
xchg
int3
inc
jne
in
jle
cwde
jmp
repz
sub
jae
mov
nop
push
retf
sbb
or
xchg
xor
mov
xor
(bad)
xchg
js
out
mov
xlat
outs
push
xlat
mov
lock
jle
jns
mov
mov
mov
adc
sub
jno
mov
jecxz
aaa
jp
fild
mov
xchg
out
push
push
mov
mov
jecxz
xchg
outs
add
xor
ja
fcom
cmps
test
or
cmps
xchg
push
out
xor
fnstcw
mov
(bad)
popa
dec
dec
aas
mov
xor
leave
sub
mov
push
xor
mov
jge
jmp
pop
(bad)
push
xor
mov
adc
dec
lahf
leave
jae
and
adc
sbb
push
cdq
or
shr
stc
xchg
xlat
ret
and
imul
ins
or
sbb
outs
push
sbb
push
and
pusha
imul
mov
imul
clc
xlat
out
movs
call
js
ss
dec
mov
shl
xor
and
push
lods
push
jg
mov
push
call
inc
jmp
fldcw
dec
jp
cmp
fldenv
iret
je
scas
(bad)
icebp
fsubr
push
pop
movs
call
pop
aad
pop
jl
and
out
je
fidiv
xor
push
pop
fsub
retf
xor
pop
dec
ds
bound
enter
fdivp
fsubr
dec
cld
fbld
out
sub
cli
pop
lods
shl
mov
shl
mov
dec
push
movs
inc
jg
movs
ret
out
es
js
or
jle
call
in
fiadd
outs
jp
fidiv
xor
push
pop
fsub
retf
mov
pop
dec
ds
outs
inc
cmp
imul
int3
cs
cld
fbld
out
sub
cli
pop
lods
shl
mov
shl
mov
int3
loopne
and
shl
mov
pop
pop
aad
into
(bad)
fidivr
call
push
jle
fistp
cmp
addr16
pop
out
popa
int3
mov
fdivr
iret
enter
sti
retf
dec
pop
push
js
pop
and
jge
pop
pop
adc
pop
adc
cmp
pop
jg
fcom
pusha
adc
retf
pop
dec
sbb
or
into
push
pop
cdq
push
ss
call
not
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
xor
test
not
shr
jns
xlat
push
(bad)
adc
iret
mov
mov
icebp
nop
movs
mov
retf
imul
adc
cli
add
out
push
dec
push
cs
push
das
push
bnd
lods
push
push
repz
sub
jae
pusha
in
outs
imul
jge
xchg
and
nop
xchg
xlat
xchg
js
sub
push
mov
xor
arpl
jns
imul
or
aad
outs
jecxz
nop
xchg
inc
jle
int
mov
xchg
dec
fmul
xor
loop
nop
stc
call
mov
mov
shl
retf
xchg
loop
ins
and
jmp
jns
ins
sbb
out
mov
mov
adc
pop
cmp
dec
jecxz
push
push
push
push
xchg
retf
mov
ss
js
mov
repz
lods
js
or
int
mov
sbb
retf
imul
mov
sbb
jecxz
mov
push
mov
xchg
push
nop
stc
data16
xchg
xchg
int3
mov
fcmovnbe
test
and
mov
clc
mov
add
lea
adc
outs
leave
adc
js
sub
js
adc
inc
dec
lea
adc
jns
adc
inc
leave
adc
ret
aas
loopne
stos
or
dec
dec
and
js
adc
js
adc
push
adc
push
fisttp
lahf
jecxz
adc
fisttp
(bad)
clc
aad
lea
adc
js
adc
jb
xchg
lods
clc
or
adc
lds
jmp
out
clc
ss
cwde
retf
ss
in
int
xchg
lea
es
dec
leave
adc
sbb
or
clc
loop
mov
dec
rcl
lea
adc
cld
xchg
test
fcomp
aas
lods
dec
leave
daa
lea
or
leave
daa
aas
fadd
mov
pop
jmp
adc
jns
es
retf
pop
leave
in
xchg
lea
xor
cmp
adc
sbb
or
clc
ror
std
push
cmps
daa
dec
ret
jmp
sbb
leave
in
test
in
xor
hlt
dec
or
sbb
xchg
adc
xlat
or
fmul
jl
cmp
push
cmp
cmp
or
js
adc
jns
shl
in
jecxz
clc
sub
jbe
xchg
lods
clc
and
popa
mov
jne
dec
push
pop
aam
imul
or
xchg
lods
clc
les
leave
adc
xchg
adc
mov
clc
int
or
repz
dec
loop
rep
clc
fmul
loop
sar
jnp
data16
leave
adc
fcom
adc
xlat
or
js
adc
mov
lods
clc
ror
dec
mov
sbb
adc
fcom
out
jns
ror
jnp
mov
icebp
cld
imul
(bad)
retf
retf
leave
sub
outs
pop
leave
mov
mov
sub
scas
jl
icebp
lea
adc
dec
leave
adc
inc
dec
aam
push
scas
ss
cmp
push
or
dec
mov
lea
lods
clc
ror
imul
xor
retf
jb
in
xchg
test
cmps
or
clc
mov
dec
dec
in
or
fcom
adc
xlat
lea
xor
mov
ret
int3
inc
frstor
mov
jp
or
push
retf
outs
sti
jae
lea
adc
sbb
adc
fbld
ds
(bad)
mov
int3
sbb
mov
pushf
clc
stos
adc
mov
lea
lea
adc
cld
xchg
test
dec
loope
lea
leave
adc
pop
jmp
pop
fwait
daa
dec
ret
mov
pop
jge
xchg
or
or
fst
ss
adc
or
bound
push
jb
loop
test
cmps
mov
jmp
mov
dec
(bad)
leave
in
test
cmps
or
sar
xchg
or
push
sbb
or
fcom
outs
jnp
mov
jae
dec
cmp
adc
or
jle
xchg
lods
js
push
mov
cmp
adc
inc
dec
aam
push
scas
ss
cmp
push
aas
jb
dec
mov
rcr
sbb
clc
ror
hlt
or
jmp
xor
hlt
dec
or
sbb
xchg
xchg
push
dec
xchg
lea
xor
sub
jnp
rcr
push
add
and
or
hlt
dec
or
sbb
adc
xchg
mov
dec
test
mov
test
mov
inc
rcl
test
or
dec
sub
jns
push
xchg
js
push
pop
leave
repz
lea
xor
dec
in
(bad)
int3
jp
lods
clc
xlat
dec
rcr
xor
daa
dec
ret
jmp
es
sahf
seto
fmul
pop
push
leave
mov
rcr
sbb
jb
leave
mov
jb
cld
mov
cmps
mov
jmp
mov
test
xchg
or
xchg
repz
push
nop
adc
clc
sbb
push
nop
stc
jae
adc
xor
lods
clc
mov
aaa
movs
ins
jmp
leave
pop
fnsave
push
ins
mov
xlat
dec
jp
push
mov
in
xchg
dec
jo
pop
add
or
mov
push
(bad)
mov
icebp
cmp
cld
adc
push
xchg
xchg
dec
movs
adc
out
jmp
xchg
adc
add
adc
aaa
ins
jne
pop
fnsave
xlat
xchg
jns
inc
push
ins
mov
xlat
xchg
jns
sub
lock
mov
sub
imul
clc
xchg
push
ins
out
xchg
mov
test
push
jmp
push
cwde
jmp
mov
jp
xchg
push
inc
xor
cmp
lea
dec
mov
lods
jo
push
dec
push
adc
div
fdivr
sub
jecxz
fwait
int
mov
(bad)
jle
leave
sbb
bound
xor
imul
xchg
repnz
test
sar
xchg
dec
les
push
sbb
retf
xor
push
push
sbb
and
mov
shr
pop
lock
push
jne
mov
push
mov
xchg
ins
pop
cwde
call
push
mov
out
or
xchg
jae
dec
or
cdq
and
sub
cld
cmc
push
mov
jne
sub
or
addr16
push
scas
xor
xchg
push
arpl
jo
mov
xchg
sbb
push
retf
cmp
retf
xlat
pop
jle
pop
mov
cld
retf
cs
int
pop
mov
loop
xchg
enter
aad
loopne
(bad)
fild
call
in
enter
jb
into
fsubr
mov
dec
loope
inc
jp
mov
jno
xor
outs
fdivr
test
dec
jb
cmp
fadd
push
dec
xchg
dec
jns
xor
dec
stc
fadd
push
dec
xchg
cli
into
dec
cdq
retf
xor
and
shl
xchg
cld
retf
fadd
dec
fiadd
cld
dec
fiadd
cld
dec
fiadd
cld
dec
fiadd
jnp
fiadd
jl
fiadd
add
push
mov
arpl
rcr
mov
clc
fisttp
bound
xchg
push
cld
push
call
arpl
xor
dec
scas
mov
or
(bad)
mov
out
and
jg
add
dec
call
retf
mov
sbb
cld
dec
ficomp
dec
cmp
pusha
mov
pop
push
leave
imul
in
out
add
dec
fidiv
popf
stc
and
cmp
sbb
dec
fisubr
jle
repnz
add
fiadd
call
les
and
dec
fiadd
cmp
mov
pop
repz
pop
lahf
dec
sub
add
das
mov
dec
pop
sar
inc
in
dec
fnstenv
or
ror
jns
clc
fst
std
cli
cmp
pop
push
pop
xor
icebp
cmp
fisttp
loop
dec
fiadd
enter
cld
jle
add
pop
(bad)
cld
arpl
sbb
fiadd
mov
inc
pop
stos
fmul
xchg
mov
jmp
dec
cld
jg
xor
retf
ret
pop
outs
cmp
and
push
pop
(bad)
jl
push
dec
jbe
pop
(bad)
jl
push
dec
pop
dec
fidiv
pop
dec
(bad)
push
pop
(bad)
cld
js
and
lahf
add
clc
fwait
bound
push
pop
dec
lods
mov
sub
sbb
sub
or
clc
and
add
add
inc
fisubr
sahf
jmp
dec
pop
dec
pop
scas
fmul
arpl
dec
fiadd
loopne
imul
dec
mov
retf
fiadd
lods
test
cli
add
dec
fidiv
(bad)
sbb
cld
dec
mov
add
or
mov
push
(bad)
sahf
jmp
push
cld
dec
pop
add
hlt
sahf
jmp
push
(bad)
dec
pop
and
enter
dec
imul
dec
mov
js
cmp
retf
cmp
std
clc
sbb
retf
cmp
jge
sbb
retf
fld
loop
fidiv
cld
pop
test
cld
dec
fiadd
cld
jg
xor
dec
fiadd
cmp
sbb
jne
(bad)
cld
arpl
sub
fisubr
cmc
clc
and
add
clc
and
sbb
retf
cld
ja
leave
pop
cdq
fmul
pop
pusha
inc
stos
inc
add
sbb
xor
in
mov
cli
add
inc
imul
xchg
pop
ss
mov
mov
mov
xlat
test
sbb
mov
cs
repnz
and
cmc
xchg
push
inc
mov
and
es
scas
xor
lea
cmp
inc
xor
dec
imul
ins
or
xlat
out
dec
xlat
mov
or
aad
clc
pop
test
fst
iret
ins
dec
jg
or
mov
nop
xchg
push
mov
dec
cmp
int3
push
xchg
int
mov
add
push
xchg
or
push
sbb
addr16
ss
sub
xor
sbb
or
push
cwde
out
push
sbb
push
out
push
push
mov
xor
pop
nop
stc
pop
cmc
sub
xlat
xchg
rcr
mov
mov
xor
pushf
xor
xor
sub
outs
ins
mov
push
mov
xor
mov
xchg
push
sub
dec
in
dec
push
push
push
pop
retf
jmp
clc
imul
adc
push
mov
daa
retf
test
jae
or
js
adc
(bad)
lods
cmc
ret
jo
hlt
shl
xor
cs
mov
in
or
clc
ret
cmp
inc
mov
adc
sbb
mov
pop
lods
xor
ret
lock
imul
push
in
mov
dec
mov
jbe
pop
pop
fstp
and
arpl
das
dec
mov
ret
imul
mov
push
(bad)
dec
imul
fmul
aad
clc
mov
xchg
jae
xor
int3
jno
or
dec
mov
xchg
(bad)
das
nop
push
shr
jns
xlat
mov
push
xchg
nop
int3
test
mov
out
mov
pop
sub
mov
push
not
sub
push
daa
cmps
out
jae
and
pop
(bad)
scas
xor
aam
xchg
adc
inc
popf
cmp
adc
mov
rcl
mov
pop
movs
retf
data16
push
push
xchg
stc
xor
xchg
jecxz
mov
and
dec
or
mov
mov
push
cli
in
imul
or
nop
xor
xchg
sub
jns
in
xchg
mov
dec
out
jns
mov
or
push
xor
sub
xchg
rol
sub
stc
xchg
xlat
outs
scas
mov
ror
adc
test
mov
xchg
or
push
ja
out
push
push
mov
lods
js
push
mov
adc
lods
lock
icebp
stc
adc
dec
rcr
f2xm1
fcmovnbe
mov
jecxz
nop
shl
xlat
push
mov
js
in
push
dec
mov
mov
sub
repz
and
adc
adc
sub
mov
push
jae
mov
push
nop
adc
push
adc
push
mov
or
sahf
aaa
dec
mov
test
mov
pop
jb
mov
rcl
add
and
nop
aaa
xchg
shl
xor
bound
xchg
push
pop
mov
push
nop
aaa
xchg
shl
xor
push
adc
xor
bound
xchg
(bad)
sbb
xor
shl
xor
bound
xchg
push
push
mov
push
nop
aaa
xchg
shl
xor
bound
mov
nop
push
adc
push
mov
push
nop
xor
pop
bound
adc
adc
call
mov
rcl
mov
push
nop
mov
shl
mov
rcl
push
xchg
aam
mov
push
nop
xor
bound
mov
nop
push
xchg
rcr
mov
push
nop
xor
bound
adc
mov
push
nop
mov
shl
xor
bound
adc
mov
push
nop
mov
shl
xor
bound
mov
nop
xchg
loop
xchg
loop
xchg
loop
xchg
loop
xchg
and
and
xor
(bad)
les
inc
loop
jecxz
pusha
inc
je
les
inc
loop
xchg
loop
inc
cmps
cmps
leave
cmps
mov
retf
(bad)
jns
pop
ret
rcl
xchg
loop
xchg
loop
add
add
mov
loop
push
pop
xchg
xor
data16
pusha
inc
xchg
loop
test
bound
mov
add
das
std
int3
fld
xchg
retf
psubw
loop
repnz
fcomp
popa
pop
fdivr
(bad)
test
xchg
push
push
loop
xchg
jne
add
add
mov
loop
xor
xlat
xor
jns
fcomp
mov
cmps
mov
cmps
hlt
and
out
push
ret
xchg
xchg
loop
push
xor
pusha
idiv
bound
mov
loop
cmps
mov
retf
sbb
xchg
sbb
push
popa
push
add
cdq
(bad)
pop
push
loopne
mov
adc
push
rol
xchg
sbb
cmps
sbb
out
mov
fdiv
cmps
mov
or
and
mov
xchg
or
and
pop
xchg
daa
xchg
loop
jns
xlat
cmps
mov
xchg
es
repnz
pop
stc
xchg
push
fcomp
(bad)
fadd
fild
fisttp
push
add
and
and
daa
bound
mov
(bad)
fist
xchg
aas
daa
scas
pop
loop
push
call
inc
ds
cmps
mov
xchg
std
sti
and
fisub
loop
jecxz
jl
dec
and
(bad)
pop
loop
push
cld
arpl
fcmovb
and
bnd
loope
daa
mov
mov
(bad)
pop
xchg
mov
jnp
ds
cmps
mov
xchg
xchg
sti
and
fisub
loop
jecxz
jl
and
(bad)
cmps
push
cld
popa
sbb
cmc
lds
repnz
cmps
push
loope
daa
mov
mov
(bad)
pop
xchg
mov
jnp
ds
cmps
mov
xchg
mov
fisub
loop
jecxz
jl
std
and
(bad)
pop
loop
push
cld
addr16
pextrw
and
repnz
ret
popa
loop
mov
mov
(bad)
pop
xchg
mov
jnp
ds
cmps
mov
xchg
jnp
daa
bound
movs
fsubr
jecxz
jl
xlat
and
(bad)
pop
loop
push
cld
gs
sbb
and
bnd
popa
loop
cmp
lahf
scas
xchg
(bad)
pop
jnp
pop
data16
loop
jecxz
jl
xor
push
cmp
lahf
scas
xchg
(bad)
pop
jnp
dec
data16
loop
jecxz
jl
and
es
lods
xchg
(bad)
pop
jnp
js
fisub
loop
jecxz
jl
pop
popa
bound
es
lods
xchg
(bad)
pop
jnp
push
fisub
loop
jecxz
jl
push
cmp
lods
gs
cmps
cmps
mov
loop
daa
loope
and
bound
fcomp
not
push
mov
pop
cs
lds
lods
(bad)
push
ret
daa
cmp
and
sbb
sbb
pop
mov
ss
xchg
in
xchg
(bad)
out
mov
pop
mov
xchg
xchg
fistp
js
out
mov
pop
mov
xchg
fwait
daa
xchg
(bad)
out
mov
pop
mov
xchg
xchg
(bad)
sbb
out
mov
pop
mov
xchg
fldenv
xchg
(bad)
out
mov
pop
mov
xchg
int
xchg
(bad)
out
mov
pop
mov
xchg
xchg
fwait
sbb
out
movs
xchg
mov
ss
xchg
xchg
xchg
sbb
out
movs
xchg
mov
ss
xchg
repnz
xchg
(bad)
out
movs
xchg
mov
ss
xchg
xchg
mov
push
movs
xchg
mov
ss
xchg
xchg
stos
sbb
out
cmps
xchg
mov
ss
xchg
in
xchg
(bad)
out
cmps
xchg
mov
ss
xchg
xchg
push
sbb
out
cmps
xchg
mov
ss
xchg
xchg
dec
sbb
out
cmps
xchg
mov
ss
xchg
mov
xchg
(bad)
out
test
pop
mov
ss
xchg
shl
mov
(bad)
out
test
pop
mov
ss
xchg
xchg
arpl
js
out
test
fsub
xchg
pop
sahf
cmps
mov
imul
and
inc
sub
push
jecxz
jl
mov
lds
movs
fisub
ret
add
cmps
pop
lds
mov
add
les
mov
loop
sbb
out
stos
xchg
mov
ss
xchg
fbld
inc
mov
cmp
ret
imul
add
push
jecxz
pusha
xrelease
loop
pop
push
bound
pop
(bad)
rcr
mov
loop
mov
imul
and
daa
add
mov
daa
adc
push
xchg
loop
add
loope
mov
leave
jb
sbb
fsub
mov
mov
sbb
jns
xlat
cmps
or
push
fadd
pop
push
add
stos
fcomp
loope
fsub
cmp
loop
xchg
add
test
xchg
sbb
and
cld
movs
lds
jecxz
lock
cmps
mov
es
daa
xchg
jns
mov
movs
jp
ret
mov
jp
push
and
cmps
cmps
mov
jp
jb
ret
icebp
sbb
cmps
and
mov
cmp
lahf
mov
xchg
mov
ins
js
(bad)
xchg
jae
xor
or
xchg
jg
or
gs
jae
pushf
ins
or
xlat
sub
push
jge
daa
xlat
mov
dec
mov
mov
lds
xchg
sbb
(bad)
dec
adc
imul
ins
mov
adc
push
pop
xchg
push
xor
jno
pop
mov
inc
and
adc
rcl
jno
inc
and
(bad)
das
ss
xchg
js
sub
(bad)
cdq
or
xchg
xlat
and
in
ins
or
jmp
xchg
push
dec
push
push
in
jecxz
enter
bound
xor
imul
cdq
(bad)
fist
int
xlat
xor
push
nop
int
fst
jg
push
ins
or
nop
xchg
mov
push
mov
sub
xchg
jns
ins
out
dec
dec
iret
cwde
pushf
cmc
push
add
push
jne
popa
test
sub
mov
mov
xor
sub
xchg
jns
lock
pusha
push
xor
mov
js
not
jg
scas
outs
fild
in
jecxz
imul
(bad)
xchg
xlat
jno
dec
mov
jae
mov
xchg
push
adc
out
jns
mov
mov
mov
nop
clc
jge
xchg
jae
sub
js
mov
jae
sub
inc
jbe
cmp
test
cdq
mov
sub
push
imul
push
imul
xchg
rcl
ja
inc
push
cs
bound
and
jns
call
inc
fdivr
sti
pop
cmp
sar
inc
jge
jge
sbb
std
std
test
cmp
jne
jge
(bad)
test
xchg
inc
jl
pop
hlt
pop
lea
pop
mov
mov
aad
popf
(bad)
(bad)
jge
sbb
jl
push
sbb
jmp
inc
jne
stc
aas
call
jmp
mov
jge
and
aam
je
aam
fs
shr
push
aam
stc
pop
popa
inc
or
movs
jns
add
cmp
sahf
xchg
pop
cmp
sahf
xchg
push
mov
aam
jne
iret
fs
pop
mov
jl
jp
and
mov
xchg
sbb
cmp
cmp
adc
cwde
jge
pop
mov
jge
and
mov
mov
ret
fistp
cmp
xchg
test
int
jle
inc
out
mov
cmp
jns
add
cmp
sbb
mov
pop
mov
call
sub
add
mov
xchg
cld
outs
jb
jge
and
mov
mov
mov
cmp
pop
push
cmp
sub
cmp
ret
pop
inc
cwde
rol
(bad)
mov
adc
inc
pop
inc
xor
xchg
rep
mov
shl
sub
cmps
not
sub
shl
(bad)
movs
cwde
jl
push
leave
push
mov
push
push
cli
push
ins
mov
xlat
xchg
pop
jecxz
xor
xchg
xlat
xchg
dec
adc
or
xchg
xchg
int3
jnp
cmp
or
mov
lock
ret
call
test
call
dec
jmp
jbe
inc
jecxz
xchg
push
inc
jg
mov
xlat
xchg
fimul
push
push
ins
and
lock
js
aam
or
xlat
sbb
ja
loopne
dec
shl
push
push
in
outs
xor
loopne
mov
cdq
add
test
stc
xchg
xlat
outs
push
push
into
out
gs
outs
push
xlat
mov
jno
mov
pop
arpl
rcl
or
dec
jecxz
nop
push
cwde
shr
pop
xlat
xchg
push
dec
(bad)
mov
jo
and
jns
jmp
mov
cmc
push
nop
int
xchg
sbb
push
push
lods
leave
ret
xchg
repz
or
sbb
test
stc
inc
pop
mov
(bad)
jmp
xchg
jae
popa
xchg
or
push
xor
xchg
in
rol
popf
retf
jg
test
mov
xchg
mov
sbb
sub
adc
sub
dec
loop
xchg
dec
arpl
xchg
jae
sub
pop
retf
iret
sub
mov
mov
arpl
nop
dec
lds
adc
push
xchg
sar
fidiv
jp
fnstenv
mov
jmp
mov
jae
sbb
xor
mov
ins
mov
sub
jg
or
fdivr
repz
outs
pop
xor
icebp
pop
int3
lahf
mov
pop
test
jne
stos
jnp
sub
inc
xor
and
mov
sub
xchg
ja
pop
sub
push
in
aaa
scas
or
xor
outs
int
cdq
xchg
pop
mov
push
fmul
and
pop
mov
(bad)
repz
outs
pop
xor
xor
addr16
pop
popf
xor
mov
daa
cmovns
xchg
pop
fst
mov
pop
mov
mov
jnp
jmp
cwde
test
cmc
daa
imul
xchg
nop
jne
cwde
lods
repz
daa
imul
fwait
adc
sbb
icebp
xor
mov
fs
mov
fsubr
leave
icebp
add
mov
retf
pop
mov
jb
stos
xor
cmp
pushf
stos
xlat
dec
sbb
mov
and
xor
inc
ss
sub
or
xor
enter
dec
and
sbb
sub
push
stos
retf
pop
pop
or
fsubr
repnz
mov
rcr
sub
ret
xchg
inc
push
mov
test
rcr
xor
mov
sub
sbb
nop
lock
shl
ret
xor
xor
lahf
rcl
or
outs
mov
sub
cmp
shl
xor
sti
mov
out
xchg
xchg
jae
or
mov
push
and
sbb
cmp
mov
push
jp
movs
push
shr
jns
xlat
mov
adc
adc
push
xchg
xchg
dec
inc
inc
dec
mov
push
mov
or
pop
ins
mov
inc
jmp
mov
jb
ins
(bad)
lods
cmc
pop
sub
lock
mov
mov
or
xchg
mov
push
mov
test
nop
clc
das
jg
mov
xlat
sub
(bad)
push
cmp
xlat
nop
shl
ins
mov
pop
xor
out
xchg
push
sbb
loop
pop
(bad)
push
or
or
mov
daa
xlat
dec
scas
js
push
fs
jecxz
jbe
dec
call
mov
int
and
jmp
fbstp
or
push
imul
mov
jecxz
ins
push
cli
test
sub
xor
sub
push
push
cwde
arpl
ins
or
mov
aaa
cmps
xchg
or
das
imul
lods
js
sub
sar
popf
cmc
retf
repnz
addr16
movs
fmul
hlt
(bad)
int
mov
ins
shl
dec
or
mov
mov
push
and
cmp
jge
cs
sub
repz
scas
cs
pop
xchg
test
and
ds
rcr
lea
das
add
add
sub
fadd
sub
cli
mov
mov
jne
pushf
mov
jae
(bad)
and
loop
or
sbb
and
movs
daa
or
lahf
add
add
movs
dec
cdq
leave
cmps
inc
push
push
pop
lahf
add
jmp
mov
lahf
mov
not
out
leave
mov
jmp
repz
test
retf
ins
out
mov
arpl
xchg
mov
mov
fld
mov
adc
imul
push
mov
jo
cwde
shl
into
push
in
jmp
shl
xchg
retf
sub
ret
mov
xchg
not
inc
in
idiv
leave
xchg
push
inc
repnz
jmp
sub
aaa
test
outs
add
inc
and
add
ins
mov
xlat
ins
mov
xlat
cmc
popa
push
leave
pop
hlt
mov
push
mov
mov
xlat
bound
aad
cmc
(bad)
push
gs
mov
dec
mov
jbe
or
jno
ins
mov
mov
sub
jno
mov
ds
and
ins
ins
pop
in
dec
add
in
out
mov
popa
push
jmp
dec
mov
pop
sbb
xor
arpl
adc
test
into
push
out
stos
lods
icebp
stos
inc
mov
arpl
mov
mov
fist
call
push
nop
jns
cmp
and
lods
clc
xchg
push
(bad)
int
and
adc
xor
cmp
in
push
push
push
stos
dec
dec
ror
mov
nop
dec
outs
cmp
jmp
jns
sub
out
xlat
xchg
jns
mov
push
lods
adc
xor
jecxz
xchg
clc
pop
stos
xchg
repz
sub
lods
leave
call
sbb
arpl
int
retf
cdq
arpl
int3
sub
rcl
push
xor
mov
(bad)
adc
sub
cmp
xchg
ins
imul
out
dec
imul
lahf
cmc
push
xchg
clc
(bad)
jae
sub
mov
xchg
dec
dec
push
xor
out
out
pop
push
push
jg
push
push
xchg
sub
push
fist
mov
push
xchg
xchg
mov
pop
xchg
or
aaa
enter
out
test
in
test
aaa
xchg
test
mov
xlat
cmp
into
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
cmps
addr16
(bad)
jb
adc
mov
sub
pop
pop
or
pop
sahf
stos
adc
lea
(bad)
adc
cmps
dec
pushf
or
test
mov
out
test
aaa
(bad)
test
pop
cmps
int
in
jp
in
jp
call
repz
repz
xchg
jp
gs
repz
xchg
jp
out
test
mov
test
mov
mov
mov
test
xchg
outs
inc
push
mov
test
mov
test
daa
jmp
mov
mov
stos
cmp
out
test
mov
test
mov
mov
cmp
out
mov
cmp
in
test
mov
test
mov
test
mov
mov
mov
stos
cmp
out
test
mov
test
mov
mov
xor
out
cmp
mov
cmp
out
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
mov
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
adc
mov
test
mov
stos
cmp
out
stos
cmp
out
test
mov
test
mov
test
xchg
test
xchg
xchg
mov
xor
cmp
out
test
cmp
out
test
mov
test
xchg
stc
test
or
out
test
mov
stos
cmp
out
stos
cmp
out
test
mov
test
mov
test
xlat
stc
test
add
adc
mov
cdq
cmp
out
mov
mov
test
cmp
out
test
mov
test
xchg
out
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
stos
leave
cmp
out
dec
pop
mov
(bad)
leave
cmp
stos
fidivr
and
xchg
sub
mov
in
add
jl
adc
adc
cwde
movs
ins
in
sbb
das
inc
cmp
jae
stos
sbb
or
mov
clc
add
test
repz
pop
inc
aam
clc
dec
int3
sub
pop
imul
neg
jle
dec
fidivr
rep
mov
mov
imul
dec
stos
cmp
and
add
mov
test
mov
bts
pushf
fidiv
mov
fidiv
mov
mov
repz
sub
lods
jl
jle
ins
add
mov
test
mov
bts
pushf
fidiv
mov
fidiv
mov
mov
repnz
xchg
pop
imul
xchg
jl
jg
scas
sub
cmp
aam
xor
aam
call
sub
pop
sub
scas
xor
pop
add
push
cwde
aaa
cwde
test
cwde
and
sbb
das
pop
cmp
outs
ror
xchg
add
push
inc
dec
inc
aam
clc
dec
int3
sub
pop
imul
neg
jle
sub
dec
xor
pop
add
push
cwde
aaa
cwde
test
cwde
and
sbb
push
pop
clc
dec
int3
sub
pop
imul
sub
cmp
cmp
add
ins
push
adc
outs
retf
cmp
sbb
scas
jne
fnsave
aam
or
rcr
mov
das
sbb
scas
lea
int3
adc
outs
retf
cmp
sbb
scas
repz
dec
sahf
(bad)
enter
ror
xchg
add
push
inc
dec
inc
aam
clc
dec
int3
sub
pop
imul
neg
jle
sub
dec
xor
pop
add
push
cwde
aaa
cwde
test
cwde
and
sbb
push
pop
clc
dec
int3
sub
pop
imul
sub
cmp
cmp
add
ins
push
adc
outs
retf
cmp
sbb
scas
jne
fnsave
aam
or
rcr
mov
das
sbb
scas
lea
int3
adc
outs
retf
cmp
sbb
scas
xor
(bad)
movs
ins
mov
inc
adc
lds
mov
dec
xor
pop
add
push
cwde
aaa
cwde
test
cmp
stos
cmp
sbb
push
or
rcl
clc
aaa
cwde
lods
mov
adc
sti
cmp
sub
ror
(bad)
out
pop
push
(bad)
test
repnz
xchg
repnz
int3
mov
mov
outs
scas
js
mov
js
xchg
cmp
inc
mov
test
mov
mov
inc
push
mov
stos
scas
in
fdivr
neg
in
fild
sub
scas
in
adc
mov
xlat
cmp
sbb
(bad)
outs
jne
push
mov
stos
scas
in
fdivr
daa
(bad)
ja
dec
push
sub
aaa
(bad)
test
ret
push
pop
js
mov
aam
sub
outs
jne
push
mov
stos
scas
in
fdivr
daa
(bad)
ja
dec
push
sub
aaa
(bad)
test
ret
push
pop
js
mov
mov
xlat
cmp
sbb
(bad)
sub
rcl
mov
mov
inc
push
mov
stos
scas
in
fdivr
cwde
inc
rcl
mov
test
(bad)
into
pop
repnz
xchg
repnz
mov
fnstsw
cmp
ins
mov
mov
test
or
test
jg
out
cmp
inc
add
aam
cmp
lods
mov
or
cmp
lods
mov
push
mov
cmp
sub
ds
and
sbb
mov
enter
adc
mov
and
sbb
xlat
out
pop
sti
mov
enter
stos
cdq
enter
mov
jb
push
dec
sub
xchg
cld
push
das
sbb
and
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
xchg
outs
inc
push
mov
test
aaa
out
mov
cmp
in
test
mov
test
mov
mov
cmp
mov
cmp
out
mov
cmp
scas
mov
cmp
mov
mov
cmp
fisubr
or
fsubr
adc
scas
dec
sbb
aaa
inc
mov
or
cdq
or
ficomp
or
jbe
sets
mov
sbb
sahf
xchg
pop
sbb
xchg
hlt
adc
adc
pop
jbe
sets
mov
sbb
sahf
xchg
pop
lahf
sbb
sbb
out
mov
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
xor
jnp
add
pmuludq
cmovae
jp
clc
ja
or
loope
aam
sub
jnp
shl
mov
loope
in
push
bound
out
pop
es
retf
into
add
out
push
mov
fwait
ret
(bad)
pop
aam
or
push
mov
sar
sbb
mov
dec
or
fistp
cmp
stos
sar
fst
mov
adc
sub
pop
cmp
nop
ret
pop
push
in
repnz
xchg
test
arpl
dec
dec
out
pop
aam
cs
push
adc
inc
scas
push
loop
shl
test
shl
push
push
call
loopne
mov
loop
jmp
jp
mov
mov
mov
outs
sub
push
lea
mov
es
es
push
mov
adc
sti
sti
mov
ror
popa
push
xor
repnz
js
pop
in
mov
dec
cmp
loop
ds
mov
mov
xor
sahf
mov
xchg
push
or
add
mov
test
add
cmp
push
jp
jbe
sar
int
dec
mov
mov
shl
in
sub
pop
mov
push
retf
rcl
push
add
lahf
test
pop
into
xor
add
loop
gs
dec
push
(bad)
rcl
xchg
adc
dec
les
pop
xlat
hlt
or
inc
es
f2xm1
push
mov
movs
data16
push
cld
mov
mov
push
or
shr
pop
or
jg
(bad)
out
mov
push
push
in
rcr
cs
jae
pusha
ins
mov
sahf
shl
out
push
fabs
or
cmp
push
jns
xchg
shl
out
aam
sub
mov
jno
or
jmp
cmovne
iret
cmp
xor
addr16
hlt
pop
stc
mov
add
leave
mov
ja
sbb
cmp
sub
enter
repz
cmp
push
add
or
out
dec
fbld
test
xchg
stc
push
out
popa
shr
xchg
push
aad
pop
sbb
add
loopne
xor
loopne
movs
mov
pop
(bad)
xchg
mov
arpl
inc
or
shr
lea
jno
jmp
cmc
inc
lea
movs
(bad)
push
outs
xchg
cmp
xor
mov
popf
mov
mov
out
daa
sub
loopne
mov
push
push
ins
sub
shl
loopne
push
call
mov
mov
stc
(bad)
cmp
jns
sub
inc
lods
mov
push
sbb
mov
cmp
mov
cmp
popa
jle
out
push
inc
mov
ror
jle
push
mov
inc
xlat
hlt
iret
inc
push
iret
xchg
fnop
sbb
cmp
jmp
in
sahf
cmp
push
xchg
loop
sbb
test
enter
test
cmp
adc
mov
dec
pop
dec
push
(bad)
mov
cdq
fnstcw
fadd
inc
mov
sub
mov
pop
enter
add
mov
sbb
xchg
push
sub
(bad)
arpl
addr16
iret
jecxz
pusha
push
pusha
jmp
test
sahf
cmp
stc
pusha
push
mov
push
cli
sub
sbb
jns
(bad)
out
mov
mov
out
or
mov
jne
or
push
jecxz
mov
mov
call
test
mov
mov
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
aaa
scas
test
fimul
mov
sub
sbb
out
test
dec
in
mov
fimul
mov
sub
mov
(bad)
sbb
test
xor
mov
cmp
push
and
mov
dec
aas
pop
lds
add
mov
idiv
mov
das
in
mov
mov
jmp
cmp
pop
lds
repz
fwait
dec
cmp
lods
xchg
loopne
dec
mov
mov
loop
xchg
adc
outs
mov
cmp
or
scas
lods
jne
sub
lea
sub
imul
mov
scas
push
or
repnz
jmp
jge
rcl
call
sub
jno
movs
pop
sbb
adc
in
or
ins
or
xor
dec
push
mov
sub
arpl
mov
iret
sub
js
sub
mov
adc
mov
cmp
ins
rcl
pop
mov
arpl
in
jns
imul
stc
pop
iret
xor
jb
xchg
jns
jmp
cmp
clc
mov
sub
arpl
rcl
xchg
jae
sub
sub
loope
stc
push
xor
jae
clc
bound
xchg
repz
in
ss
sub
or
lds
fwait
shr
ins
mov
cmp
int
mov
in
stc
out
not
stos
fimul
jne
pop
test
cwde
rcl
not
imul
or
and
lods
das
sbb
pop
inc
dec
lods
xor
dec
lods
xor
push
pop
inc
dec
lods
xor
dec
sub
loope
(bad)
loopne
imul
xchg
xchg
fcmovu
dec
push
jl
xchg
in
loopne
pop
dec
xor
dec
sub
pop
push
call
sub
loopne
mov
and
jmp
fcmovu
rcr
loopne
pop
xor
add
sub
pop
adc
imul
sahf
aam
sar
jmp
mov
sbb
scas
xchg
mov
or
cmp
pop
ret
imul
sahf
ret
sar
popa
in
stos
mov
popf
(bad)
sub
sahf
lahf
adc
(bad)
xchg
dec
pop
in
sbb
lahf
out
scas
popf
repnz
jns
mov
jmp
xor
xchg
sbb
loopne
push
push
push
or
and
dec
push
cmc
or
fs
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
repz
pop
ins
or
pop
test
aam
out
mov
mov
lock
outs
fisub
imul
arpl
addr16
jo
(bad)
mov
mov
and
sar
mov
jmp
mov
xchg
adc
cdq
pop
pop
adc
in
rcl
mov
jnp
push
xchg
dec
aas
adc
stc
mov
mov
stc
gs
xor
xor
xchg
jns
sbb
push
or
sbb
outs
shr
iret
sti
jb
aaa
ins
or
lahf
mov
push
ss
jns
or
cmc
mov
cwde
(bad)
aam
stc
sub
mov
xchg
push
xchg
dec
pop
shl
inc
loop
xchg
jns
out
xchg
repz
or
bound
outs
push
push
mov
out
or
xchg
jae
push
dec
imul
xor
arpl
xchg
jns
pusha
(bad)
shr
sbb
sub
test
test
adc
lods
lock
sub
clc
adc
xchg
jae
sub
shl
xchg
jns
sub
rcl
mov
xchg
jae
jnp
jns
je
mov
xchg
dec
nop
dec
ror
push
xchg
repz
sar
add
repz
data16
push
or
frstor
sub
ja
call
imul
ret
mov
push
mov
in
int3
jmp
(bad)
jle
mov
je
xchg
dec
jecxz
xchg
inc
outs
sbb
fbstp
fbld
(bad)
shl
popf
rcr
adc
push
imul
rcr
adc
push
ja
push
ins
imul
sbb
call
jmp
sbb
call
addr16
dec
jmp
fistp
mov
inc
jns
xchg
push
icebp
js
fild
ins
outs
in
pop
ja
call
addr16
rcr
adc
inc
ja
test
in
xchg
dec
jmp
fstp
mov
out
cmp
loopne
or
in
in
cmp
pop
fisub
in
jge
(bad)
out
ficomp
in
ror
je
fdiv
cmp
(bad)
cmp
fcmovu
cmp
daa
mov
ds
fdivr
cmp
movs
pop
xor
(bad)
(bad)
add
mov
mov
hlt
add
loope
mov
fsub
std
popa
outs
or
out
sub
out
in
jge
fimul
std
popa
in
dec
in
jmp
push
ins
out
ins
mov
in
fisttp
fcomp
bound
jae
push
sub
pop
(bad)
out
sbb
fistp
loope
sub
xor
out
sbb
jne
call
sub
mov
jle
mov
call
(bad)
(bad)
ins
retf
jl
in
fidivr
jle
pop
ins
pop
retf
stc
je
std
test
mov
or
fidivr
fcomp
cmp
rcr
xor
jecxz
fisub
fcom
cmp
out
pop
pop
aas
in
repnz
xchg
cld
lock
dec
(bad)
cmp
pop
fnsave
in
(bad)
xor
rcr
cmp
push
popf
cmp
clc
fbstp
add
fsubr
sbb
fcomp
cmp
fdiv
mov
in
rcr
cld
fcom
stos
sub
sbb
fstp
aam
(bad)
out
in
(bad)
out
push
jne
inc
aad
icebp
in
cmp
lock
sbb
fcomp
xor
retf
fisub
in
out
aas
in
fcomp
xor
ins
stc
fistp
fdivr
inc
jmp
fidivr
shl
mov
fcomp
popf
outs
dec
int
mov
jmp
sub
aad
ins
ret
not
jmp
fdiv
ss
pop
pop
mov
sub
cmp
fcmove
int3
in
rcl
pop
mov
xchg
mov
out
fimul
out
(bad)
push
outs
call
ins
daa
aam
in
cs
cdq
mov
cmp
retf
fdivrp
dec
cs
popf
fsub
ins
pushf
pop
cmp
in
ficomp
cmp
popf
out
dec
mov
fidivr
push
fwait
mov
hlt
cli
int3
fsubr
mov
pop
lods
(bad)
fdivr
fcomp
in
adc
pop
ret
jl
fidivr
(bad)
lea
aad
xlat
fsin
sbb
push
fwait
jl
fidivr
cmp
fdiv
(bad)
pop
aas
js
retf
mov
add
fwait
ret
xlat
pop
sbb
ret
mov
jmp
fcomp
les
mov
stos
cmp
pop
sar
(bad)
cmp
std
sub
mov
ret
cmp
test
cmp
inc
fidivr
js
js
sbb
xchg
popa
pushf
call
fcomp
cmp
jmp
lods
int
scas
sbb
test
in
push
ficom
pop
pushf
dec
out
enter
sub
jmp
or
mov
outs
popf
clc
push
ins
sbb
imul
mov
jecxz
fcom
out
add
and
hlt
fisub
outs
out
mov
mov
int3
jmp
push
sub
in
leave
fmul
and
pop
mov
ins
sub
add
fcom
pop
jmp
mov
repnz
(bad)
jae
cmp
inc
sbb
or
pop
aaa
dec
loop
cs
cld
fst
jl
outs
mov
in
push
(bad)
(bad)
pop
fwait
xchg
das
popf
and
in
mov
stos
jns
lods
dec
aaa
in
sub
daa
sbb
aas
ds
loop
inc
dec
rcl
dec
aam
cmp
push
outs
call
xlat
mov
ss
mov
pop
ja
imul
outs
jmp
cmp
mov
fidivr
fistp
pop
pop
sub
jae
std
xchg
fwait
pop
dec
sbb
dec
cmp
mov
fldenv
pop
fst
adc
test
ins
fild
and
ins
add
mov
jnp
sbb
jg
mov
stos
sub
adc
and
cwde
pusha
ins
popf
and
pop
retf
mov
jle
fdivr
popf
fidiv
out
pop
pop
mov
cmps
cs
jle
fnstcw
inc
bound
ret
nop
or
jae
imul
inc
in
mov
out
jo
out
pop
fnstcw
jae
in
jmp
push
dec
mov
jle
popf
xor
mov
jae
sub
pop
xchg
mov
dec
jle
ret
repz
cmps
sub
xchg
cmp
jb
xchg
jecxz
ja
bound
js
je
cmp
retf
sbb
cmp
fdiv
hlt
retf
ins
daa
pushf
mov
sub
mov
push
(bad)
ss
pushf
fiadd
(bad)
cmp
ret
test
sbb
sub
fs
ret
sti
fsub
pop
jge
cwde
cli
dec
sbb
fstp
stc
dec
fs
xchg
fcomp
retf
test
out
stos
cmps
sahf
pushf
dec
mov
mov
sub
addr16
cli
int3
cmp
push
lock
or
dec
in
ds
ds
fcomp
cmp
pop
mov
outs
pushf
pushf
cmp
fcmovu
xchg
test
ja
out
mov
xchg
(bad)
fcomp
jns
sbb
cwde
mov
psllq
jge
in
dec
sbb
js
retf
cld
retf
test
fidivr
sbb
fidivr
inc
aas
cmp
pop
fisubr
ins
(bad)
(bad)
ficomp
ins
daa
and
das
(bad)
aad
test
rcr
pop
not
mov
(bad)
xchg
fnstcw
adc
ds
jae
cmp
jae
ffree
jle
(bad)
lock
dec
fnstcw
cli
ficomp
inc
push
dec
adc
dec
call
retf
jmp
call
pop
fwait
mov
cwde
fcom
call
mov
into
not
ret
fwait
in
push
call
bound
cmp
ficomp
loope
call
cwde
fidiv
inc
fwait
adc
and
cmp
call
pop
rep
fsubr
ins
popf
cld
js
fdiv
dec
fwait
sbb
push
clc
cmp
pushf
ficomp
dec
pop
iret
push
cs
popf
hlt
sub
cmc
pop
jnp
call
idiv
icebp
fdivr
mov
out
fcomp
mov
imul
in
xor
into
pop
fldenv
inc
(bad)
inc
mov
mov
jae
fucomp
(bad)
fdivr
cmp
js
retf
ret
fcomp
ret
retf
ret
jns
dec
ja
sub
stos
js
push
or
push
pushf
inc
sahf
das
sbb
ficomp
jg
fwait
sbb
push
fwait
cmp
ins
jo
pop
jmp
lahf
arpl
xor
retf
in
mov
xlat
pop
inc
xchg
jo
arpl
cwde
pop
mov
leave
or
and
in
jb
xchg
xor
outs
fwait
cmp
rcr
adc
fcomp
or
jecxz
lods
mov
pop
sahf
sbb
dec
jl
mov
adc
xchg
mov
cmp
das
retf
int
in
mov
(bad)
mov
adc
pop
mov
loope
pushf
pop
cmc
fcom
aad
shr
cmp
fidiv
stos
fcomp
cmp
adc
and
jmp
mov
shl
sbb
jp
sub
rep
daa
stos
fsubr
in
push
fidivr
sub
pop
enter
(bad)
sbb
adc
test
adc
jmp
arpl
mov
pop
pusha
cli
cwde
add
pop
pushf
adc
fdiv
aas
ins
push
fistp
fadd
in
ror
dec
popf
mov
in
pop
pushf
mov
cdq
push
fwait
int3
sbb
enter
fnstsw
enter
mov
inc
loop
mov
sbb
aaa
inc
clc
jp
jmp
popf
mov
cmp
xchg
sbb
loop
mov
cmp
enter
jmp
sub
pop
fld
jae
sbb
fidiv
rcr
xor
aam
cmp
aam
xor
push
out
in
push
xchg
xor
push
test
in
shl
xor
aam
xor
aam
xor
aam
hlt
add
aam
lods
fisub
xchg
pop
outs
pop
mov
jb
daa
and
or
retf
lods
sbb
movs
(bad)
jno
pop
sbb
mov
in
les
add
int3
repz
jbe
mov
ror
repz
ins
outs
fmul
push
sbb
(bad)
mov
out
adc
js
cmp
mov
jg
xor
jmp
out
fst
xor
xor
xchg
rcl
retf
xor
dec
fisttp
dec
into
sub
rcl
ins
enter
dec
pop
std
call
cs
fisttp
aad
mov
imul
pop
sbb
push
mov
fistp
loope
jge
popa
call
sub
mov
in
cdq
cmp
add
fucomp
xor
jo
mov
enter
sub
rcr
loop
jae
gs
faddp
loope
push
aas
loopne
(bad)
xor
fcom
in
fcom
in
sar
lahf
sar
sub
mov
loopne
push
fwait
loopne
push
jg
fcom
aaa
push
popf
ficomp
pushf
(bad)
push
cmc
cmc
cld
rol
mov
dec
and
stc
xchg
fcomp
lods
pop
mov
sbb
sub
jb
adc
sbb
stc
mul
push
and
ja
pop
mov
mov
push
dec
fwait
movs
mov
jne
inc
repz
jg
cwde
mov
in
cli
int3
(bad)
push
dec
jl
test
or
mov
push
call
mov
test
dec
sub
jp
xor
std
retf
mov
fimul
fild
test
mov
mov
fidivr
(bad)
fist
mov
sub
fcomp
mov
pop
lahf
cs
ficom
iret
jae
jb
retf
je
in
in
mov
mov
jns
bound
mov
fcomp
(bad)
bound
js
mov
fcomp
fidivr
dec
je
out
into
ret
imul
jge
mov
call
cmps
fidivr
sbb
push
ds
dec
mov
sbb
push
sub
mov
rol
pushf
ds
stos
or
pop
fwait
shr
pop
dec
out
stc
test
data16
in
fdiv
pusha
cwde
cmp
jge
cmps
mov
aas
dec
and
lods
fcomp
add
jo
enter
in
xlat
lods
fiadd
lods
sub
retf
ins
pop
mov
ss
out
add
sub
fidivr
lock
test
test
cmp
sbb
test
popf
imul
sti
loope
sub
ret
jg
fwait
(bad)
not
push
mov
in
pop
fisubr
out
sbb
jge
jae
cmp
nop
enter
cmps
rcl
xor
dec
mov
jmp
sahf
test
in
mov
call
sahf
mov
lds
scas
stos
push
xlat
jge
add
cmp
js
out
test
daa
ds
sahf
hlt
push
call
mov
in
pushf
mov
loopne
sub
fstp
pop
jl
outs
sbb
cdq
(bad)
mov
iret
push
mov
mov
ins
mov
(bad)
cmc
imul
jmp
imul
add
mov
int3
(bad)
scas
push
pop
cli
aaa
fidiv
stos
fsubr
sub
adc
shl
jecxz
add
in
lods
fistp
mov
fisttp
in
fdivrp
push
fnstcw
mov
fnstcw
xor
repnz
fsubr
pop
pop
fs
cmp
je
imul
pop
inc
fidiv
fdivp
int3
add
fcmovnu
fwait
mov
ret
fild
sub
pop
or
cmp
mov
sbb
jno
xchg
je
jno
xchg
cmp
xlat
mov
sub
fimul
xlat
push
fwait
cmp
mov
sbb
pop
fisttp
sar
mov
fdivr
xchg
das
sbb
in
sub
jo
mov
outs
xor
cmp
fs
xor
jne
in
call
xchg
cs
push
ins
cwde
test
aad
ss
cli
jbe
test
ja
popa
cli
fidivr
cdq
sub
jg
call
pop
lahf
jecxz
loop
ds
sahf
(bad)
xor
sub
pushf
sub
movs
mov
cld
inc
in
xor
push
call
push
xlat
push
pushf
push
call
mov
add
jae
scas
jecxz
stos
sar
call
bound
xor
stos
fcomp
in
retf
iret
pop
jbe
mov
int3
les
cdq
mov
icebp
cli
int3
mov
cli
int3
fs
imul
jp
popf
and
vshufps
shr
call
stos
out
into
jmp
call
fild
dec
push
dec
pop
(bad)
xor
fmul
cs
cld
adc
popf
add
(bad)
stc
cmp
cwde
enter
adc
icebp
stos
mov
jg
fwait
jp
fidiv
inc
rcr
lahf
xor
stos
cmp
popa
pushf
loopne
mov
div
stc
or
dec
lods
mov
jg
imul
scas
dec
stos
pop
fsubr
sahf
int3
mov
in
loope
mov
inc
jbe
mov
sub
cmp
cld
stc
xlat
fdiv
iret
sar
iret
retf
(bad)
push
mov
push
popf
in
add
(bad)
xor
and
aam
ret
xchg
and
div
in
inc
(bad)
mov
ins
sbb
fild
ins
sbb
cs
sahf
xchg
cmp
(bad)
dec
std
fdiv
loopne
fdiv
jp
pop
ja
jmp
cmp
stc
add
pop
jne
mov
sub
dec
fcomp
in
push
lahf
xchg
ins
int
mov
in
xchg
int3
pop
(bad)
fcomp
in
lods
into
cs
fsub
cs
popf
cld
jp
repz
cdq
retf
in
fidivr
repnz
adc
ins
sahf
clc
adc
fld
and
sbb
mov
jbe
jae
cmp
sahf
fistp
icebp
ja
in
retf
neg
cwde
cmp
fcomp
ret
adc
das
cdq
mov
mov
ins
pushf
or
add
enter
sub
jg
mov
sbb
xchg
xchg
cmp
fimul
jp
fadd
cli
in
cwde
fidivr
test
(bad)
es
mov
loope
scas
mov
push
sahf
sahf
pop
mov
push
call
cmp
enter
fistp
(bad)
aad
(bad)
dec
hlt
aam
(bad)
out
jns
jbe
pop
mov
jno
shr
xchg
sub
int3
inc
mov
pop
scas
mov
jno
lods
(bad)
fadd
inc
mov
stos
pusha
ins
fcomp
jge
pop
sub
push
ret
pop
jns
cdq
pop
loop
(bad)
xchg
test
sbb
icebp
jbe
jg
hlt
enter
inc
shl
lods
test
sub
in
adc
jb
jno
push
sbb
mov
sbb
sub
mov
mov
int3
push
dec
xchg
ret
stc
cli
int3
xchg
fimul
in
or
add
leave
ficom
cdq
iret
xor
mov
pop
adc
call
stos
cmp
pop
jg
repz
fs
xchg
(bad)
fdivrp
push
(bad)
retf
xchg
and
out
sbb
cli
outs
arpl
jecxz
hlt
jb
jno
cmp
(bad)
mov
jmp
cmp
mov
popf
mov
mov
ins
test
ret
int3
fistp
mov
cs
aas
in
daa
in
call
xchg
sub
ret
test
adc
or
fcmove
jl
in
pop
fisubr
out
cmp
pop
add
mov
and
sbb
dec
aaa
sar
aam
(bad)
dec
sahf
xor
ror
in
retf
jmp
sbb
(bad)
pop
fstp
pop
add
aam
jne
ror
pop
xor
retf
sub
mov
jmp
cwde
outs
in
inc
daa
sbb
sbb
adc
mov
mov
fcmovnu
cld
xchg
xchg
cmp
daa
fs
dec
add
jmp
adc
fnstenv
mov
jmp
mov
fidivr
in
int3
add
fcomp
ins
rcr
(bad)
push
pushf
mov
test
int3
xchg
cs
mov
dec
mov
dec
sbb
mov
jmp
sbb
sub
int3
mov
int3
loopne
test
(bad)
push
pop
or
xor
shr
mov
lds
call
sahf
idiv
mov
int3
aas
mov
pop
out
xchg
mov
mov
(bad)
dec
mov
cwde
js
xlat
pop
pushf
pop
push
fs
fsubr
bound
out
pop
call
cld
pop
and
cld
pop
xchg
retf
ins
popf
cdq
sub
mov
sub
into
xor
lahf
enter
fidiv
sub
stos
stc
xor
jp
ins
lods
(bad)
mov
jg
fwait
dec
jmp
pushf
repnz
cld
ficomp
imul
jp
test
cld
pop
fcomp
pop
icebp
adc
fstp
push
push
in
call
mov
(bad)
fdivrp
dec
cli
pop
xchg
test
not
dec
loop
lods
fs
dec
(bad)
xlat
pop
pushf
adc
aad
xor
fisttp
sub
mov
mov
sbb
push
ss
inc
cwde
ret
xchg
sub
sub
(bad)
fwait
pop
cmp
fadd
scas
pop
in
das
cmps
in
scas
cmp
cmps
fs
jmp
ins
pop
fldenv
jecxz
fidivr
pop
push
cmp
fst
popa
dec
lods
(bad)
leave
imul
and
cmp
xchg
in
ins
sbb
sahf
jmp
retf
cmp
(bad)
push
inc
dec
outs
enter
xor
ror
enter
sub
call
pop
jp
mov
sbb
jno
inc
add
shr
fwait
pop
adc
inc
out
je
add
ins
pushf
dec
mov
enter
pushf
icebp
js
test
ret
repz
retf
aam
ds
pop
js
ss
stc
jae
shl
in
pop
fiadd
pop
mov
dec
cmp
mov
pop
rcl
in
mov
sub
mov
pop
inc
fcomi
loopne
retf
fidiv
pop
movs
in
cdq
pusha
ja
mov
fdivr
into
mov
ret
out
jbe
jmp
sbb
pop
cwde
cwde
sub
cmp
xchg
fsubp
iret
jo
mov
fdiv
jnp
lock
push
inc
sahf
stc
das
sbb
and
(bad)
mov
xchg
xchg
cmp
lahf
pop
pop
mov
sti
jp
jg
ds
inc
fnstenv
adc
outs
push
cmps
mov
out
sbb
in
jae
lds
movs
adc
daa
fidivr
xor
jae
cld
xor
mov
push
(bad)
xor
fiadd
push
mov
mov
fdivr
dec
test
cmc
hlt
xchg
fnstenv
cmp
mov
mov
xchg
ds
jne
stos
pop
fwait
xchg
je
fdivr
sub
std
cmps
pop
(bad)
fcom
xlat
pop
sbb
xchg
int3
stos
pop
ss
mov
fwait
inc
test
int3
pop
popf
fiadd
in
sbb
inc
test
jle
aam
pop
loopne
mov
pusha
xchg
fistp
pushf
cmp
int
mov
dec
sub
fidiv
push
sar
(bad)
cli
(bad)
nop
pop
fidiv
lods
fisub
popa
pop
mov
cmps
fdivr
cmp
cmp
pop
cmp
(bad)
cmp
cmp
mov
ins
push
(bad)
call
ret
enter
repnz
cmp
repnz
test
int3
mov
imul
int
jecxz
mov
scas
test
dec
sub
fisttp
fcomp
pop
jmp
stc
repnz
pop
pop
sub
mov
jle
in
loop
cs
lock
loop
dec
cld
lods
sahf
and
js
sub
mov
ss
rcr
and
push
jbe
push
xlat
retf
ret
addr16
dec
pop
js
fsub
pop
dec
and
in
ficomp
out
dec
es
lds
xlat
clc
ret
mov
jne
fisub
(bad)
rcr
mov
(bad)
in
and
cmps
ficomp
pop
mov
fcom
enter
cwde
cmp
mov
mov
scas
xor
push
in
sbb
ins
jmp
mov
aad
mov
xor
mov
ins
(bad)
(bad)
jmp
mov
jl
imul
call
mov
jno
push
clc
xchg
pop
push
pop
push
mov
fcmovne
fs
xlat
jo
sub
leave
imul
lea
sbb
inc
push
pop
sbb
pop
xchg
stos
add
cmp
mov
leave
loop
xchg
test
pop
call
icebp
test
sbb
gs
cmp
xor
sbb
pushf
adc
out
cld
pop
or
jbe
push
outs
push
fdivr
scas
std
push
pop
push
addr16
pop
xor
mov
push
ficomp
xor
call
sbb
stos
aam
mov
cs
lods
loop
pop
xor
jmp
cli
(bad)
fdiv
xchg
fisubr
cmp
mov
ret
adc
popf
fscale
repnz
jg
and
xor
enter
enter
enter
retf
or
(bad)
fstp
sbb
push
repnz
repz
mov
fwait
mov
push
sbb
xchg
fsubr
xor
jbe
inc
sbb
stos
popf
add
inc
add
repnz
sbb
and
dec
scas
sub
jb
inc
xchg
dec
ds
fcomp
cmp
dec
pop
mov
sbb
(bad)
in
fsubr
dec
xchg
into
mov
nop
sbb
push
mov
mov
retf
addr16
or
ficomp
ds
call
sbb
test
ficomp
lahf
cld
fsubr
ja
xchg
push
clc
cmps
call
and
cmp
and
jb
push
call
sub
iret
jl
sahf
faddp
sub
sbb
enter
adc
jb
dec
sbb
fidivr
cmp
rcr
jbe
jne
cmp
mov
pop
sbb
(bad)
mov
iret
lea
test
sahf
push
push
imul
mov
cmp
(bad)
test
movs
aas
xchg
cmp
xchg
pop
jle
mov
fimul
jnp
fidivr
(bad)
cmp
xchg
fsub
mov
jmp
mov
(bad)
jle
push
cmp
lods
icebp
pop
jle
dec
cmp
sahf
das
mov
or
or
xor
shr
lds
xchg
int3
mov
mov
cmps
clc
das
fwait
jnp
inc
fidivr
test
push
js
lock
sub
cwde
ins
fistp
jae
sbb
clc
and
fadd
test
xchg
pop
push
sub
cmp
push
(bad)
cmp
(bad)
cmp
cmp
ficomp
xchg
mov
fs
mov
mov
pop
fnstenv
sub
mov
sub
sbb
jne
sbb
mov
aaa
fiadd
popf
push
sbb
in
sbb
and
pop
sub
repnz
adc
and
pop
jb
inc
cmp
mov
inc
pop
out
mov
and
outs
jne
inc
lods
jl
inc
sub
fidivr
test
adc
sti
popa
fild
mov
jmp
xchg
lds
lahf
jecxz
add
sbb
sti
and
pushf
cmp
pop
push
cmp
or
mov
sub
push
sub
push
mov
mov
jp
mov
fwait
jbe
test
mov
scas
out
clc
mov
shl
jbe
stc
sbb
in
cmp
fiadd
mov
fimul
sub
stc
jp
push
sbb
pop
xchg
(bad)
movs
sub
shr
or
pushf
stc
dec
loop
mov
(bad)
fidiv
int
sbb
(bad)
mov
sbb
jmp
std
jle
dec
sbb
test
hlt
out
inc
pop
mov
adc
ds
pop
cmp
(bad)
lods
cmp
jns
push
sahf
inc
imul
ds
fisub
mov
call
mov
sbb
cmp
neg
mov
sbb
clc
inc
test
push
sbb
fcomp
clc
iret
add
and
cli
lods
mov
test
jbe
clc
inc
(bad)
ins
cmp
clc
lea
add
ret
into
sbb
hlt
(bad)
mulps
fbld
and
sbb
sahf
mov
lods
ja
addr16
daa
ficom
dec
imul
aas
out
inc
pop
sahf
or
xchg
mov
cmp
in
sub
push
popf
fdiv
inc
sub
sbb
pop
mov
sub
js
jle
inc
lds
lods
fstp
jge
fs
call
jns
push
fwait
mov
imul
sbb
retf
push
jns
lds
jmp
cwde
ja
cmc
inc
aas
(bad)
sub
add
mov
jl
not
(bad)
fadd
iret
sub
mov
add
pushf
int
lock
fnstcw
ins
iret
cmp
enter
jo
adc
fdiv
jl
fdivr
sub
jno
mov
ret
lds
and
lock
retf
lods
mov
lds
leave
ins
ja
jg
cmp
popf
es
lods
dec
fs
or
scas
fnstenv
dec
xchg
out
fwait
scas
cmp
mov
retf
shl
or
std
mov
daa
rol
xlat
adc
stc
scas
movs
dec
mov
sbb
stc
scas
loop
call
inc
cld
push
add
sub
and
mov
dec
inc
loop
push
inc
icebp
rcr
ficom
movs
sub
outs
fwait
js
sbb
inc
xchg
push
fs
mov
ins
mov
adc
xor
fs
pushf
mov
dec
nop
cdq
fidiv
xchg
mov
add
sahf
test
jp
fstp
xchg
(bad)
dec
iret
lods
movs
pop
jge
fistp
lods
pushf
stc
cmp
xchg
pop
xlat
fdiv
test
jmp
dec
mov
sub
and
lock
push
xlat
mov
cmc
ds
mov
xor
push
jmp
sbb
mov
fisub
in
jp
or
retf
das
inc
sub
cmp
push
xchg
clc
mov
fiadd
lds
repz
push
adc
adc
mov
pop
mov
and
mov
cmp
cmp
xchg
scas
clc
adc
cmps
in
sub
ficomp
pushf
inc
aaa
dec
imul
pusha
div
lds
ins
out
rcl
push
jmp
xchg
aad
mov
dec
fcmovu
dec
cdq
(bad)
call
loope
aad
cdq
mov
and
jmp
adc
dec
pop
les
pop
pop
xchg
xlat
leave
not
ins
shr
ss
inc
mov
sub
mov
pop
fidivr
jmp
ss
jo
aad
xchg
push
lods
jmp
push
in
jae
xchg
inc
mov
jmp
jb
ds
out
pop
ds
push
je
sbb
sbb
sub
pop
stc
dec
adc
mov
call
cmp
mov
imul
gs
jl
test
pop
sbb
hlt
or
push
inc
dec
fwait
ret
mov
sub
(bad)
pop
(bad)
out
pusha
ins
lock
mov
in
jle
addr16
push
fnstcw
test
je
xchg
sub
shl
fs
fisubr
imul
cmp
out
jl
cs
clc
ds
pushf
jp
sub
(bad)
aas
jmp
neg
cmp
test
fwait
jle
cwde
inc
push
fstp
mov
cmp
jae
jle
mov
hlt
sub
idiv
jl
mov
sub
pop
xlat
rol
push
cld
imul
fild
sbb
push
aas
vsubps
mov
pusha
outs
mov
call
mov
cmp
mov
fstp
repz
in
fdivr
aas
ret
cmp
and
mov
pop
dec
stos
pop
fldenv
lds
jbe
popa
dec
mov
cmp
daa
test
mov
cmp
fdivr
fwait
mov
sub
xchg
test
dec
jl
xchg
jge
int
mov
out
dec
pop
cmp
out
xchg
mov
cmp
pop
push
ja
jo
(bad)
mov
xchg
into
jnp
fild
pushf
cs
sahf
idiv
call
mov
pop
scas
cli
pop
mov
sbb
jne
out
fisub
ins
cdq
add
das
pop
movs
mov
pushf
pop
mov
xchg
cmc
mov
out
xchg
jmp
dec
fwait
xchg
sub
pop
xchg
sub
mov
lods
jno
jge
cmp
fsub
scas
scas
jnp
cmp
cmp
fs
fcomp
mov
jecxz
lods
mov
xchg
enter
fcom
ja
inc
inc
daa
and
fcomp
stc
xchg
inc
pop
cmp
add
mov
pushf
retf
mov
cmp
ds
pop
idiv
(bad)
cmp
inc
test
cli
dec
aas
and
pop
mov
nop
loope
cmp
jns
cmp
and
retf
fldcw
sub
cli
iret
pop
jno
jbe
push
push
rcr
mov
push
pop
mov
sbb
and
pushf
xchg
sub
fst
cdq
cmps
ja
mov
push
mov
in
dec
and
sbb
js
in
test
xchg
push
cmps
sub
fisubr
addr16
jmp
ja
xchg
test
adc
dec
sbb
mov
cmps
movs
mov
loop
mov
gs
cmc
mov
in
fidiv
imul
sub
push
into
jle
xchg
add
cmps
and
popf
sbb
push
cmps
sbb
out
pop
cwde
push
and
mov
scas
fs
in
xchg
pop
adc
adc
adc
in
sub
or
jp
imul
nop
cld
dec
das
fstp
js
push
fdivr
pop
lock
repnz
js
cmp
ret
cli
mov
sub
xchg
test
fidivr
and
fcom
xor
shl
ss
sub
aas
jge
xor
or
mov
ins
out
leave
popa
repnz
xchg
fdiv
outs
bound
dec
(bad)
xchg
test
pop
xor
clc
fdivr
jmp
add
fild
(bad)
jns
pop
repz
pop
jle
xlat
(bad)
in
fcomp
cmp
lds
test
ds
cdq
(bad)
and
call
das
lods
(bad)
ds
test
mov
iret
int
cmp
fcom
mov
jmp
sbb
sub
mov
pop
stos
popa
mov
retf
pop
cdq
jl
stos
cmc
cs
cld
xchg
(bad)
lods
shl
mov
push
xor
and
iret
or
clc
mov
std
test
ins
out
jle
out
jmp
out
lahf
add
aam
stc
sti
pop
dec
sub
mov
jo
inc
retf
mov
iret
scas
mov
jno
test
hlt
outs
xchg
inc
cdq
pop
sbb
mov
sbb
mov
dec
mov
imul
push
cs
cld
ins
call
adc
(bad)
repz
test
bound
sbb
mov
xchg
int3
pop
mov
jecxz
stos
sti
sti
sbb
(bad)
mov
mov
les
loop
test
scas
cmps
sub
mov
inc
not
cs
clc
inc
jecxz
rol
add
icebp
push
mov
push
cmp
dec
loope
push
pop
jo
out
push
cs
fnstsw
mov
mov
xchg
stos
pop
mov
fadd
fsubr
addr16
in
imul
stc
push
and
lods
pop
sbb
les
cmp
sbb
or
inc
xor
repz
ins
movs
stos
mov
in
mov
out
add
out
add
pop
pop
aaa
imul
or
and
scas
inc
fwait
xor
and
cli
dec
and
adc
lahf
mov
fs
(bad)
sbb
imul
mov
in
cs
jb
fidivr
inc
fild
jns
cmps
mov
dec
cdq
mov
scas
daa
fistp
js
push
clc
or
sbb
fisubr
sub
movs
popa
enter
cmp
dec
xor
neg
pushf
pop
push
retf
inc
sub
sar
pop
js
sbb
push
cmp
ins
fild
and
(bad)
retf
pop
loopne
fsub
sub
(bad)
jae
lahf
jmp
cli
(bad)
inc
fist
or
jbe
mov
or
loop
cmp
loopne
xchg
movs
pop
outs
jae
cli
push
popf
cmp
fcomp
jle
pop
(bad)
test
sbb
cmp
loopne
push
imul
adc
xor
sbb
aas
xchg
mov
inc
popf
inc
pop
fistp
out
jle
mov
shr
pop
sbb
int
cmp
movs
add
stc
inc
cli
dec
pop
(bad)
jne
stos
fsub
adc
(bad)
push
sbb
pop
ds
dec
push
out
inc
sbb
scas
call
popf
fcmovb
js
fs
mov
jle
pushf
inc
sar
shl
jle
mov
xor
addr16
fst
pop
xlat
dec
pushf
jp
push
sbb
cmps
pop
dec
adc
cld
lods
or
das
popf
pop
mov
cmps
fnsave
imul
jl
pop
imul
jo
pop
int
xchg
sub
std
gs
sbb
xor
and
xor
jns
shr
sub
xchg
mov
pop
adc
sub
sbb
push
lock
sbb
cdq
mov
repz
pusha
sbb
pop
sbb
movs
jo
popa
test
dec
mov
pop
scas
mov
xlat
mov
add
pop
sub
cdq
mov
dec
pop
lods
fdivr
push
sbb
xchg
sub
pop
(bad)
loope
dec
push
mov
xor
lods
(bad)
jbe
sub
mov
inc
inc
jle
or
and
(bad)
jecxz
(bad)
ss
pop
lahf
stc
dec
test
inc
inc
icebp
clc
fld
push
in
push
mov
pop
sbb
lods
fidivr
fld
mov
jnp
cs
mov
sbb
sub
pop
jl
lock
dec
repnz
adc
fdiv
mov
or
fstp
fidivr
push
jae
cmp
f2xm1
sahf
cmps
jno
cdq
push
dec
adc
sub
out
mov
push
js
mov
ror
xchg
push
(bad)
jo
and
push
sbb
sub
mov
outs
jl
add
test
sbb
jg
push
adc
jae
stc
retf
lahf
pop
jns
dec
sbb
iret
xchg
imul
xchg
pop
fsubrp
fdiv
js
fcomp
fisubr
jle
push
or
sbb
cmps
fisubr
lea
xchg
inc
add
dec
(bad)
mov
fyl2xp1
dec
mov
sub
retf
jmp
std
pop
fcomp
ss
clc
mov
jmp
mov
jle
fild
bound
(bad)
stc
xor
sbb
sti
scas
test
push
daa
push
dec
cmps
xchg
stc
into
les
push
push
dec
imul
mov
sub
bound
das
xchg
fwait
(bad)
fsub
sbb
jl
or
adc
out
fdivr
jge
sbb
movs
inc
jmp
push
cmp
pop
inc
ds
test
popf
lahf
fldenv
jle
cmp
ret
fistp
dec
jo
inc
int3
xor
pop
lods
jbe
ds
mov
fwait
clc
outs
add
fsub
inc
cmp
pushf
fidivr
retf
or
cmp
push
lahf
in
jg
ret
cmp
adc
pop
call
test
inc
daa
stos
cmp
ret
jno
test
pop
mov
mov
in
cmp
dec
cwde
mov
enter
cmp
ins
lds
cwde
and
std
xchg
pop
imul
or
sbb
movs
(bad)
dec
and
fdivr
ror
push
mov
frstor
fdivr
sbb
ins
cmp
ret
xchg
pop
gs
fldenv
inc
(bad)
pop
inc
pop
mov
pop
cmp
cmp
(bad)
(bad)
or
pop
sbb
sub
ficomp
inc
daa
and
retf
ins
sahf
dec
mov
adc
and
je
cmp
fdivr
push
dec
pushf
call
(bad)
xlat
movs
mov
call
sub
xchg
pop
and
test
pop
sub
je
dec
fsub
in
hlt
pop
stc
mov
jp
sbb
push
or
adc
test
mov
fdivr
inc
iret
test
xor
mov
icebp
sub
add
call
jns
(bad)
dec
bound
leave
pop
fwait
scas
and
(bad)
fdivrp
push
bound
in
sub
(bad)
(bad)
pop
fwait
(bad)
jmp
pop
sbb
ins
add
sub
(bad)
pushf
xor
out
jne
dec
pop
jbe
mov
sub
stos
in
shr
lahf
sti
clc
sbb
pop
sub
jg
loopne
repz
in
das
fmul
js
cs
(bad)
cmp
sbb
leave
retf
sbb
fist
sub
xchg
loopne
fwait
pop
fldcw
mov
lds
sbb
je
movs
cmps
cwde
mov
adc
(bad)
xchg
daa
and
popf
cmp
jbe
push
jp
popf
es
neg
push
nop
cmp
in
mov
mov
and
mov
rcl
nop
inc
xor
mov
xchg
inc
pushf
xlat
and
ret
xchg
fsub
and
sbb
in
push
pop
in
inc
mov
inc
inc
icebp
daa
and
xchg
int3
cs
shl
mov
(bad)
frstor
cmp
pop
sub
and
ins
mov
dec
mov
cli
int3
dec
sub
pop
jns
pop
add
cmp
fwait
jbe
and
and
and
repz
shl
rcr
cdq
jb
mov
js
dec
fnstsw
dec
stos
xlat
inc
nop
fistp
iret
div
mov
and
cld
shl
pop
mov
push
movs
lods
xchg
pop
xchg
jl
daa
and
scas
frstor
xlat
(bad)
and
popf
xchg
lock
xchg
test
imul
fimul
hlt
lods
jmp
imul
sar
imul
and
hlt
mov
rol
test
out
dec
ds
imul
pop
gs
cmc
jb
pop
stos
loop
in
inc
(bad)
mov
lahf
pop
mov
fimul
inc
fcomp
outs
out
sbb
jae
enter
sub
xchg
sub
sahf
pushf
test
repnz
mov
jns
hlt
cs
clc
jp
jno
or
retf
mov
jl
jle
cs
clc
jp
pop
cmp
jle
sub
push
mov
pop
fild
cmp
test
adc
cmp
(bad)
cs
dec
sub
aad
pop
jge
fistp
(bad)
cld
shr
lods
cli
add
(bad)
xchg
cs
fsubr
push
ins
jae
inc
test
mov
mov
push
xor
sahf
je
adc
retf
ds
aad
dec
out
jae
pop
loope
and
shl
in
xlat
addr16
mov
js
cmc
push
in
and
fadd
test
out
adc
out
adc
push
jno
in
iret
pop
cs
popf
clc
dec
ins
sar
retf
jl
jp
retf
lods
fadd
add
gs
inc
mov
push
mov
lahf
jle
loope
jns
(bad)
lds
adc
push
sub
fsub
mov
push
pop
push
inc
ins
pop
lahf
ss
arpl
xlat
cmp
jle
jne
jg
cmc
test
int3
ss
(bad)
xlat
ss
fmul
dec
jmp
stc
stos
inc
shl
pop
ret
add
mov
lods
lods
jns
pop
dec
xchg
ret
cmp
xchg
inc
out
fnstcw
(bad)
dec
outs
cdq
scas
mov
adc
mov
lds
or
inc
jo
les
fwait
mov
fidiv
daa
push
lahf
sbb
aam
mov
xor
mov
sbb
scas
xlat
stos
nop
ins
ficomp
enter
dec
into
int3
fidivr
ret
es
dec
jno
imul
pop
xor
cli
int3
mov
(bad)
js
in
inc
xchg
sbb
xchg
pop
pop
popa
in
sbb
push
jg
pop
pop
lahf
ja
sbb
jecxz
daa
(bad)
pusha
mul
test
aad
call
ins
jo
stc
adc
push
jns
popf
pop
cmp
push
sbb
addr16
inc
add
jecxz
mov
sbb
stos
leave
xor
push
mov
xlat
sbb
pushf
adc
daa
fbld
jnp
(bad)
sbb
sub
xchg
cld
xor
fld
mov
mov
push
sub
(bad)
cmp
pop
outs
in
addr16
fstp
or
inc
mov
ss
inc
out
pop
ss
pop
sbb
mov
icebp
fidivr
in
xor
sbb
imul
fdivr
mov
sbb
shr
out
fiadd
gs
dec
and
jge
dec
sbb
test
sbb
pop
mov
push
clc
pop
cdq
jae
sub
iret
mov
inc
sbb
sbb
sar
stc
popf
jp
stc
mov
xor
jmp
sbb
(bad)
fcom
push
idiv
icebp
stos
pop
sbb
fcmovb
xchg
retf
xchg
mov
push
jno
adc
sub
lock
sbb
or
shl
xor
(bad)
mov
xor
lock
icebp
fidivr
push
sbb
push
cmp
fcomp
mov
lock
icebp
fidiv
icebp
aam
in
shr
cmp
rcr
ins
pop
fstp
out
fcomp
fistp
ins
pop
fild
std
sub
aas
mov
in
jmp
fisub
jae
jge
inc
jns
(bad)
pop
and
xor
cld
mov
ja
(bad)
(bad)
fist
stc
push
dec
pop
mov
mov
call
popf
not
add
dec
cmp
rcl
rcl
sbb
rcl
pop
sbb
xor
mov
pop
pop
and
stos
idiv
cmp
fidiv
icebp
fidiv
icebp
fidivr
out
fcomp
ds
fcomp
ds
fcmovu
cld
or
fisub
in
cwde
jecxz
mov
ins
cwde
lods
std
inc
mov
arpl
sub
mov
(bad)
cmp
enter
cmp
lods
(bad)
sub
ds
test
cmc
in
mov
adc
mov
or
clc
and
popf
mul
pop
pop
fild
mov
adc
adc
movs
push
fdiv
icebp
fidiv
icebp
fidiv
test
cmp
cdq
fdivr
jbe
and
sar
inc
mov
lock
mov
dec
mov
loop
fs
in
imul
jo
(bad)
enter
daa
neg
shr
jge
(bad)
pop
mov
sub
jno
cmp
fs
add
fld
movs
pushf
xor
(bad)
mov
iret
out
and
in
call
outs
mul
cmps
push
xor
xor
loope
cld
push
dec
aam
xor
retf
std
mov
pop
dec
aam
xor
retf
stc
mov
in
xlat
retf
cmp
pop
dec
and
sub
scas
mov
in
rcl
ins
dec
push
add
mov
notrack
(bad)
push
icebp
shr
movs
std
sbb
jbe
mov
out
rol
loop
rol
loop
dec
mov
rcl
sub
jnp
xchg
cmp
xchg
rcr
adc
in
ror
cmp
(bad)
mov
lods
fmul
les
and
int
ins
or
pop
push
in
pop
and
pop
in
ror
nop
call
pop
aam
popf
push
sar
or
dec
int
sub
icebp
jne
(bad)
dec
retf
arpl
ss
sbb
sahf
cmp
fcomp
(bad)
rcr
sbb
fidivr
in
mov
and
call
fcom
mov
test
fwait
mov
or
movs
pop
mov
lods
imul
or
loop
jbe
jg
mov
(bad)
cli
fiadd
push
jbe
xchg
retf
test
dec
push
jle
xor
fcomp
jge
dec
pop
pop
rcr
jbe
inc
fisubr
cli
int3
and
ficom
sub
scas
xchg
xlat
into
jbe
es
jns
sub
mov
sar
sti
xchg
ins
cmp
out
dec
into
cmp
sbb
jns
addr16
jp
int
ins
xchg
loope
pop
jl
jno
sahf
push
out
ficomp
popa
cmps
cld
leave
outs
lods
pop
jp
push
jle
ins
pop
ret
into
icebp
fsub
xlat
repnz
sbb
jp
push
xlat
push
and
cld
lea
cdq
cmp
cmc
imul
lahf
clc
mov
lock
cmps
aaa
les
popf
hlt
mov
mov
dec
inc
int
ret
inc
push
jns
dec
(bad)
call
sub
int3
push
(bad)
cmp
enter
push
jecxz
in
imul
jp
fadd
mov
lock
je
and
hlt
and
scas
mov
loope
adc
hlt
and
fcom
cmp
dec
sub
mov
mov
sub
xchg
xchg
cmp
lea
imul
loopne
inc
adc
add
inc
and
xor
out
cwde
mov
ret
ror
fldcw
adc
pop
mov
jno
test
mov
fsub
push
jae
stos
sub
or
sub
dec
cmp
das
mov
in
push
and
mov
test
rcl
or
pop
push
(bad)
pop
inc
fcomp
jns
jbe
clc
out
fdivr
in
popf
pop
out
pop
fstp
(bad)
(bad)
fild
(bad)
in
and
in
sub
scas
das
enter
cmp
or
in
cmps
pop
sar
aas
inc
cmp
or
cmp
lods
fcomi
mul
sub
or
jmp
ins
push
jne
nop
pop
and
adc
xchg
(bad)
out
into
(bad)
sub
mov
jnp
mov
scas
pop
jae
ins
daa
popa
push
rcr
jnp
push
fwait
push
sbb
js
adc
fnstcw
ret
out
jbe
cdq
push
pop
stc
xchg
mov
adc
sbb
pop
cmp
jmp
cld
gs
(bad)
mov
cs
lods
test
fsubr
xchg
pop
pop
test
inc
mov
pop
daa
jne
pushf
jge
data16
fadd
enter
lods
pop
lahf
jb
loopne
jns
retf
fxch
ficom
inc
(bad)
ins
test
add
stc
(bad)
fxch
retf
inc
xchg
out
int3
jl
mov
pop
jecxz
cwde
xchg
mov
add
jl
xchg
ss
xchg
sub
imul
in
mov
shl
sub
xchg
adc
or
gs
sub
adc
popf
cmp
(bad)
pop
(bad)
mov
sar
jo
stos
cmp
jecxz
jo
cmps
lock
in
std
jne
jle
shr
clc
pop
ss
int3
cli
dec
pop
jbe
pop
cmps
idiv
hlt
sahf
ret
cmp
and
sub
ret
clc
jp
out
aas
inc
dec
mov
mov
in
outs
popf
dec
sub
mov
push
outs
fcom
push
mov
sbb
push
jnp
jge
icebp
jno
jno
cmp
or
hlt
xor
fcomp
fidivr
pop
jbe
push
sub
or
add
push
push
fistp
in
in
sbb
and
mov
loop
mov
jg
fwait
mov
ins
int3
sbb
loop
mov
cdq
stc
retf
or
xlat
fcmovu
pop
xlat
push
sbb
dec
push
push
xchg
enter
sbb
mov
sbb
fild
mov
ins
fwait
daa
ret
sbb
jp
fmul
call
call
enter
xchg
mov
retf
jno
(bad)
fst
popa
stos
sub
cmp
loop
stc
aaa
push
ds
sbb
lods
cmp
rcl
jnp
jle
clc
cmp
ret
test
aad
scas
rcl
cmp
clc
ins
mov
mov
jmp
call
in
(bad)
mov
sub
fldcw
sbb
sbb
pushf
sub
jbe
cld
cld
jne
jae
stos
xor
(bad)
jp
push
int3
and
bound
inc
jg
into
loop
jno
call
sbb
xchg
inc
dec
ret
jnp
call
ficomp
ds
mov
jmp
out
out
daa
sub
push
addr16
into
and
test
or
fiadd
sub
cmp
jp
cmp
inc
push
repz
add
sahf
je
in
xchg
xor
mov
test
(bad)
pop
ins
inc
cmps
rcr
xor
fistp
push
icebp
cmp
(bad)
in
fcomp
mov
or
pop
inc
sbb
cdq
pop
jle
sbb
out
sbb
sub
mov
jmp
sbb
pop
mov
ss
cmp
(bad)
jl
rcr
xchg
pop
cmp
fnstsw
mov
sub
cmp
dec
adc
enter
sbb
jp
sub
clc
sub
inc
jle
stc
cmp
retf
mov
ds
pop
sbb
xchg
jmp
out
stc
mov
ja
sbb
fidivr
data16
cmp
mov
sar
loop
mov
push
pop
mov
xchg
test
jbe
sbb
cmps
cmp
add
ficomp
and
ins
fbld
pushf
cmp
xlat
xlat
pushf
imul
fbld
add
mov
jmp
jp
rcr
sahf
stos
popf
outs
pop
xlat
retf
sbb
adc
fucomip
jp
fst
inc
jp
dec
aam
loopne
cmp
out
aaa
mov
in
sub
into
cmc
iret
out
scas
pop
sbb
in
pop
jns
mov
pushf
sahf
test
stos
jle
sbb
cli
or
inc
sub
retf
pop
jle
pop
fnstcw
xchg
imul
push
sbb
jmp
pop
movs
push
and
dec
(bad)
repz
push
xlat
pop
mov
lock
mov
lds
dec
fstp
sbb
and
pusha
fbld
loopne
push
mov
jns
push
jmp
push
ficom
xor
jno
adc
scas
mov
cwde
pop
xlat
das
xor
lahf
mov
pop
cmc
bound
fisubr
jg
cld
pop
mov
ret
fcom
in
fidivr
cmp
cmp
jge
mov
inc
fcom
aad
fcom
ins
cli
jp
mov
pop
pop
add
push
mov
pop
pop
outs
sbb
stc
jne
cmps
stos
add
xchg
and
fcom
cmp
addr16
clc
mov
fidivr
in
fcomp
pop
dec
(bad)
fnstsw
(bad)
cwde
out
ficomp
jecxz
fistp
mov
test
jno
jns
and
add
jge
into
jns
call
sbb
push
clc
and
xor
mov
ja
test
inc
js
sbb
xor
mov
jno
fwait
and
out
fdiv
ins
sbb
jle
loop
xchg
push
cmp
pop
pop
push
(bad)
jl
mov
out
cwde
mov
popa
mov
cmp
imul
pop
pop
sbb
fisubr
jmp
pushf
stos
push
pop
mov
sub
xor
scas
(bad)
and
mov
adc
cwde
pop
ss
rcr
add
fcomp
fstp
sahf
dec
or
dec
in
nop
pusha
enter
loop
ret
jle
push
pop
icebp
xor
cld
cs
cld
stc
mov
dec
cs
in
clc
lods
jae
jb
hlt
dec
dec
cmp
sbb
std
xchg
loopne
mov
dec
lock
mov
sub
clc
(bad)
stos
iret
clc
fimul
push
cmc
psrlq
ss
push
mov
mov
retf
enter
lds
dec
adc
mov
ds
xchg
enter
mov
sbb
inc
or
jle
or
cmp
cmc
pop
jmp
shl
cwde
(bad)
pop
fisubr
cmp
ss
(bad)
imul
idiv
iret
(bad)
dec
aad
out
or
call
fidiv
in
sub
shr
pop
stc
or
pop
pop
sbb
mov
ret
test
jg
iret
jp
xor
pop
cdq
ds
xor
rol
imul
je
pop
dec
jecxz
aad
test
dec
mov
dec
sbb
add
jl
daa
clc
shr
sbb
arpl
sub
(bad)
push
push
repz
xchg
ficom
lods
mov
test
mov
push
bound
scas
and
neg
ins
das
lock
test
(bad)
out
sub
sbb
cmp
std
add
sub
stos
sub
pusha
jbe
cli
xchg
gs
test
sbb
push
test
jae
jmp
inc
(bad)
jns
popf
es
iret
imul
in
mov
loop
sbb
mov
cmp
lea
ja
fistp
jmp
inc
enter
mov
gs
sbb
cmp
or
enter
enter
sub
gs
jbe
fild
int3
out
pop
daa
loopne
enter
es
fistp
imul
sub
or
(bad)
shl
push
popf
shl
retf
adc
mov
add
in
xchg
sub
pop
js
lahf
xchg
sub
(bad)
adc
test
lock
xor
arpl
scas
dec
ds
popf
mov
mov
test
jns
jmp
fwait
inc
icebp
cli
fidivr
inc
xor
test
popa
push
iret
xchg
imul
test
js
lds
push
jecxz
push
mov
and
cld
xor
call
hlt
ds
mov
jbe
push
(bad)
sub
in
or
jp
cwde
dec
xchg
test
inc
jge
mov
pop
out
pop
sbb
(bad)
cmc
dec
cdq
(bad)
enter
pop
jle
hlt
pop
jle
clc
xor
mov
or
popf
clc
stc
(bad)
pushf
fst
mov
call
jg
out
out
fldenv
xchg
ds
sbb
call
pop
sbb
sub
sbb
ins
(bad)
iret
sub
fcomp
mov
in
sub
xchg
out
pop
sbb
inc
push
ror
loope
jno
test
aaa
inc
sahf
fsubr
lods
retf
cs
jmp
lahf
cs
cdq
loopne
xlat
fdivr
xchg
outs
dec
cwde
jns
sbb
mov
cs
push
mov
add
jl
clc
and
xlat
sub
or
ror
(bad)
cwde
lds
in
pop
sbb
inc
jo
pop
call
mov
push
addr16
dec
fwait
push
fcomp
jecxz
(bad)
fdiv
stos
retf
mov
push
stc
sub
movs
sub
pop
outs
repz
test
fwait
ja
mov
popf
push
sti
rcr
out
jo
test
mov
sar
addr16
pop
pop
pop
test
out
xchg
mov
jl
and
mov
fisubr
fst
xchg
xchg
stos
and
mov
jno
je
test
test
pop
jae
add
sbb
xor
sbb
outs
ja
xor
gs
rcr
cmp
repnz
cmp
sti
loop
aas
fiadd
enter
xor
sub
sahf
iret
push
std
mov
push
mov
(bad)
dec
xlat
jae
sbb
ror
data16
pusha
jg
icebp
lahf
fstp
sahf
and
push
in
in
sub
mov
bound
mov
test
mov
cwde
dec
int
dec
or
jnp
cmps
imul
popf
mov
pop
stos
dec
std
sbb
cld
repz
sbb
cmps
mov
outs
aaa
mov
hlt
ror
mov
adc
adc
cwde
add
lea
mov
outs
jb
shr
ins
pop
leave
dec
pop
mov
and
pop
imul
jns
sti
(bad)
pop
push
jns
loop
mov
out
pop
mov
push
push
cld
and
ret
push
mov
test
stos
mov
inc
mov
aam
in
fidivr
ins
pop
stc
push
sbb
mov
test
int3
pop
in
xor
mov
(bad)
mov
sbb
pop
sbb
lea
stc
mov
stos
pop
jmp
sbb
test
neg
(bad)
fsub
jo
inc
push
sub
popf
popf
cmp
mov
fwait
jp
lock
dec
inc
fxch
fcmovbe
stos
cmp
(bad)
fcomip
add
aad
cmp
cmp
xchg
or
mov
imul
and
daa
mov
fist
fnstsw
popf
pop
xchg
xchg
inc
pop
xchg
je
jo
jmp
sub
push
(bad)
cmp
push
rcr
in
add
xor
(bad)
addr16
mov
mov
pop
pop
test
stos
jae
icebp
sbb
xor
xchg
imul
or
stos
cmps
jmp
inc
repz
ds
and
fist
cmps
push
clc
dec
jnp
cs
fwait
loopne
jg
cmp
xchg
and
fdivr
sub
lods
test
fcomp
jns
cdq
sbb
dec
jmp
sbb
ds
mov
cli
dec
mov
enter
mov
nop
call
ins
outs
test
jmp
out
in
mov
jl
lock
and
jmp
js
ret
loop
xchg
cdq
nop
dec
ret
xchg
test
mov
outs
cs
mov
outs
pop
call
int3
dec
cmp
dec
ins
(bad)
fsubr
xchg
rcr
pop
pop
jmp
jmp
cmp
or
mov
dec
pushf
in
repz
pusha
mov
ins
pop
call
inc
sahf
mov
cmp
xor
xor
pop
pop
ja
rol
sub
shl
ins
pop
cmp
dec
ret
mov
push
retf
pop
fiadd
cmp
lds
sbb
js
test
mov
bound
adc
xchg
sbb
daa
fidivr
mov
jecxz
sub
pop
sti
stc
inc
pop
in
outs
sbb
cmp
inc
pushf
std
js
jbe
imul
mov
bound
out
adc
adc
test
icebp
add
sahf
mov
outs
popf
and
ins
mov
jl
(bad)
dec
pop
sbb
sbb
aam
hlt
jmp
xor
es
or
cmp
cdq
add
sbb
sub
mov
repz
popf
fild
pop
ret
shr
jl
inc
fdiv
enter
mov
cld
ficomp
xchg
fs
dec
shl
loop
cmc
and
aas
xchg
sahf
lds
fst
cmp
inc
hlt
repz
(bad)
xchg
repnz
cmp
pop
xor
push
in
ficomp
lods
xchg
xor
loop
xor
pushf
sbb
mov
out
push
icebp
in
jmp
aad
outs
mov
and
sbb
sub
jae
addr16
std
nop
and
repnz
fidiv
into
xchg
in
addr16
stc
jp
ins
push
or
retf
(bad)
out
mov
jmp
popf
in
fcomp
xor
ficomp
(bad)
das
in
fisub
popf
out
pop
call
es
ja
rcr
mov
es
fmul
sub
pop
les
stc
fmul
pop
jo
adc
ds
jae
fwait
movs
in
(bad)
lock
(bad)
fadd
rcr
loope
fistp
xlat
sbb
add
or
fstp
push
popf
sti
ds
sbb
(bad)
push
pop
icebp
out
ja
std
sub
neg
inc
(bad)
pop
sub
xlat
push
sbb
(bad)
fadd
nop
mov
push
je
pop
add
scas
shl
pop
clc
shl
shl
in
jmp
ja
out
cmp
jp
cld
pusha
cmp
jge
cwde
pusha
mov
jg
movs
fidivr
xor
rcr
stc
and
ja
ins
fwait
jne
pop
in
(bad)
sub
pop
sbb
sbb
adc
xchg
jmp
sbb
(bad)
xor
xor
stos
fiadd
sbb
push
addr16
sar
fdivr
in
fidiv
into
sti
push
cli
int
jne
mov
pop
repz
cmp
call
fdiv
sbb
jl
dec
inc
cli
mov
push
cmc
sub
outs
lods
adc
enter
adc
test
aad
hlt
mov
xlat
stc
iret
pop
inc
mov
inc
push
cmp
push
fidivr
cdq
pop
(bad)
cmp
pop
push
in
cmc
jbe
hlt
mov
and
(bad)
sbb
movs
cli
mov
xor
inc
test
sar
pop
mov
jb
popf
cld
ss
out
sbb
xor
mov
sub
fisub
hlt
fdivr
cmp
hlt
jge
popf
add
ficomp
mov
ins
pop
lahf
sub
call
inc
(bad)
fcmovu
lods
pop
inc
and
in
ret
add
inc
pop
daa
jp
ficomp
xor
pop
inc
mov
outs
mov
jg
adc
sahf
push
pop
daa
repz
sub
(bad)
cs
hlt
pop
inc
pop
adc
outs
idiv
dec
dec
cmp
fldlg2
mov
jns
fdiv
sub
popf
cmp
ins
mov
sbb
cmp
popf
fidivr
push
jle
in
mov
add
fldcw
imul
xor
test
pop
repnz
mov
push
xchg
lods
test
mov
out
fadd
fldcw
inc
popf
retf
pushf
call
adc
jno
addr16
cmp
imul
paddusb
fnstenv
ret
in
aam
push
popa
ins
ret
push
dec
scas
lods
jl
sub
or
stc
mov
sbb
cdq
imul
rcr
lods
cmps
fdivr
jl
(bad)
inc
in
fcomp
clc
dec
(bad)
fbld
pop
sbb
pop
jns
std
dec
pop
sub
sbb
xchg
dec
cld
mov
jo
retf
mov
inc
mov
xor
cmp
ror
sub
fucomip
sbb
cdq
mov
sub
mov
cmp
pop
stos
(bad)
jo
pop
pusha
ror
mov
xchg
dec
fcmovu
clc
push
sbb
retf
aas
pop
sub
pop
cld
cmp
xchg
xchg
push
test
sbb
cld
ss
dec
test
fdiv
mov
outs
lds
js
fldenv
jg
sbb
cmp
pop
idiv
das
jecxz
lahf
test
push
xor
xchg
sbb
fnstsw
retf
and
ret
or
jmp
add
sub
jmp
sbb
push
or
(bad)
jge
pop
or
daa
daa
push
in
sub
daa
fdivrp
or
mov
out
or
shr
adc
lahf
xchg
sub
icebp
jg
mov
cmp
inc
dec
imul
leave
(bad)
pop
sbb
jecxz
mov
jle
test
(bad)
jo
test
pop
fstp
ins
pop
and
mov
pop
test
sbb
ss
test
clc
shl
mov
cmp
lahf
pop
sub
(bad)
scas
jg
cmp
jmp
sahf
outs
fild
cmp
pop
mov
mov
js
repz
push
xor
cmp
lock
nop
fsubr
mov
sub
xor
push
fcmovnbe
clc
or
pop
ins
xor
mov
push
pop
stc
dec
cmp
jmp
jb
fldenv
adc
fld
and
pop
mov
lods
fcomp
test
dec
fldenv
inc
in
ret
popf
push
in
adc
sbb
fcomp
js
(bad)
(bad)
and
mov
xor
cdq
add
adc
ficom
push
div
fwait
sbb
xor
jp
jns
sahf
mov
imul
addr16
(bad)
cs
xor
or
call
(bad)
fisubr
cld
push
sbb
pop
add
inc
mov
jle
dec
pop
stc
mov
pop
cdq
push
int
rcr
cmp
imul
jle
fiadd
test
mov
ins
fsubr
pop
add
fsubr
xor
pop
xor
pop
(bad)
adc
test
dec
pushf
mov
xabort
sub
cmp
imul
idiv
dec
(bad)
jns
jb
add
jae
ins
jg
add
xchg
imul
and
(bad)
sti
sub
dec
jmp
pop
pop
and
sub
mov
xchg
call
stos
inc
int
and
cmc
sahf
ins
lods
(bad)
ffree
adc
fistp
cdq
push
sar
pop
lods
test
adc
mov
pop
jmp
lahf
cmp
pop
hlt
sub
stc
fisubr
loopne
cld
pop
cmp
retf
xor
fcomp
inc
cmp
in
and
repnz
lds
sar
sbb
pop
daa
dec
mul
jo
sbb
and
pop
popf
and
sbb
iret
fdivr
(bad)
fcomp
mov
sbb
jae
rol
and
js
sbb
aam
pop
pop
mov
jne
test
and
cmps
sbb
mov
dec
ins
jno
test
xchg
pop
and
jns
cld
stos
sub
jmp
dec
enter
outs
ret
sub
mov
enter
into
dec
ret
out
adc
pop
jge
scas
es
push
lods
push
inc
cld
(bad)
leave
or
lods
add
xchg
jge
push
jno
and
jp
mov
mov
xchg
(bad)
jns
and
xchg
retf
imul
enter
push
test
push
xchg
push
(bad)
addr16
rcl
pop
push
sbb
inc
das
pop
mov
bound
pusha
fsub
(bad)
jp
pop
jge
push
fisub
xlat
xchg
sub
xlat
jb
sbb
in
call
(bad)
jo
enter
mov
pop
aas
fwait
and
shr
(bad)
mov
js
loope
dec
xlat
pop
cld
stc
bnd
mov
aaa
lods
pop
stos
xchg
pop
or
push
fistp
pop
psubusb
icebp
fimul
popf
mov
fst
pop
inc
(bad)
mov
push
push
inc
fsub
pusha
out
popa
fadd
sahf
sbb
mov
push
aad
lock
and
sbb
movs
popa
inc
imul
jb
mov
jbe
mov
xchg
test
std
nop
add
out
dec
in
test
jp
loop
shr
sahf
fprem
and
out
xor
mov
mov
addr16
nop
dec
fsub
outs
mov
leave
outs
sar
mov
retf
cwde
mov
sahf
jne
mov
outs
push
add
push
mov
lods
fnstcw
xchg
sub
fbld
fild
push
loopne
fidivr
in
fbld
mov
jns
xchg
pop
inc
cs
fwait
jae
popa
fisttp
popf
test
call
in
clc
(bad)
jecxz
mov
jmp
jmp
cmp
lds
ins
mov
jo
cld
int
fld
dec
pushf
hlt
and
sub
and
fcomp
dec
loop
daa
(bad)
pop
mov
sbb
cmp
jp
retf
jecxz
cli
xlat
mul
mov
sub
ret
out
hlt
push
sub
sbb
stos
aam
call
or
lds
mov
inc
cdq
mov
inc
xchg
sub
mov
movs
outs
dec
leave
loop
pusha
movs
(bad)
ins
and
and
(bad)
xchg
fcom
shl
scas
into
mov
sub
lds
test
sbb
cmp
(bad)
xor
pop
fidivr
cmp
or
repz
mov
and
movs
mov
retf
inc
pop
cli
in
test
fwait
sbb
add
xchg
pop
clc
fisub
outs
jne
repnz
arpl
lds
dec
jns
push
inc
mov
push
into
inc
cmp
call
cmc
pop
add
sbb
int3
pop
jne
in
pop
and
dec
mov
cmp
pushf
fdivp
call
jnp
sti
jg
fwait
jge
sbb
loopne
cmp
mov
test
cmps
jle
test
mov
adc
clc
neg
pop
add
cwde
xor
fmul
xchg
pop
add
daa
call
add
cli
cli
cli
ja
vsubpd
(bad)
sub
cmps
adc
or
mov
or
inc
call
dec
pop
popf
mov
xchg
lods
test
ins
daa
adc
xlat
cmc
dec
push
sbb
div
lea
pop
fwait
sbb
mov
stc
movs
mov
mov
lock
adc
cli
fdiv
ins
rcr
cmps
pop
sbb
jge
movs
icebp
std
sahf
push
repz
cmps
mov
inc
dec
cmovno
or
mov
mov
sahf
sub
int
dec
push
in
sub
adc
xlat
mov
ins
sbb
fisub
sub
sub
cmp
in
mov
or
hlt
and
pusha
jb
ret
fmul
popa
jb
inc
scas
sub
or
sahf
fisubr
mov
daa
and
adc
cmc
xchg
cmp
add
sbb
inc
call
jbe
call
int3
mov
imul
or
sub
jo
mov
call
and
scas
xchg
push
movs
mov
xchg
mov
sub
repnz
cmc
xchg
dec
sahf
stc
mov
sbb
rcl
and
popf
movs
mov
mov
mov
jns
std
fmul
in
adc
jmp
cmp
dec
pop
sbb
fidivr
sub
int
ins
add
std
aad
mov
in
cli
sahf
jl
(bad)
aam
xlat
fldenv
jecxz
and
ret
push
xor
sbb
mov
mov
das
jmp
scas
mov
lods
(bad)
cmp
cmp
shl
pop
xor
test
dec
dec
fisubr
adc
inc
pop
pop
mov
sub
rcr
add
cmp
bound
(bad)
pop
or
mov
cmp
gs
cwde
jmp
add
enter
inc
outs
add
sub
mov
mov
(bad)
in
retf
imul
or
pop
pushf
pop
cdq
mov
cld
enter
mov
dec
cmp
hlt
pop
and
add
xlat
sbb
jae
xor
out
retf
je
(bad)
stos
sub
pop
imul
dec
mov
xor
dec
ret
xchg
cmp
mov
jmp
sbb
pop
(bad)
pop
ss
test
pop
jge
xchg
sub
mov
push
cmp
cli
sbb
pop
call
cld
push
js
aam
cmp
push
pop
ds
sahf
jmp
in
sub
mov
push
add
call
js
sub
jp
sbb
add
jb
sub
pop
pop
out
pop
mov
ficomp
js
popf
mov
(bad)
gs
test
test
mov
test
repnz
scas
sar
stc
cmovno
mov
xchg
sub
adc
jno
adc
and
inc
xchg
in
inc
cmp
sub
lods
leave
test
add
jge
es
push
cli
xchg
pop
jne
or
sbb
js
lds
scas
retf
inc
repnz
add
pushf
outs
fistp
jmp
xchg
push
add
std
or
ins
cmp
lds
test
ins
popf
xor
icebp
mov
xchg
jmp
xor
das
in
(bad)
fdivr
(bad)
fldcw
mov
test
in
ins
fwait
push
stc
es
popa
stc
cs
jbe
vdivps
push
push
inc
push
retf
adc
fmul
cmp
jne
imul
push
hlt
pop
xor
add
xchg
jne
lock
inc
cmp
retf
and
out
shr
loop
dec
aad
stos
enter
pop
xlat
loopne
push
add
cdq
cmps
add
shr
mov
ins
sub
sti
xchg
pop
sbb
fisub
in
fstp
in
or
push
pusha
sbb
mov
lds
inc
and
or
out
in
cmps
sub
cmc
das
fst
dec
stos
pop
sar
xor
push
in
mov
aas
aad
std
mov
mov
or
fmul
jle
test
cli
(bad)
loop
and
lock
push
cs
mov
jns
out
scas
int
sti
das
inc
sub
in
xchg
or
mov
enter
not
movs
cmp
in
fistp
push
inc
push
push
mov
sbb
mov
pop
addr16
out
dec
aaa
aam
mov
(bad)
call
xchg
stos
fidiv
hlt
rcl
pop
icebp
icebp
stos
lea
pusha
inc
mov
jnp
sub
imul
(bad)
movs
inc
sahf
pop
xchg
in
lods
push
lea
cld
or
shr
in
mov
test
lds
repz
retf
push
stc
retf
hlt
neg
sbb
test
push
(bad)
xchg
out
repz
jg
mov
call
fstp
int
imul
retf
stos
dec
loop
or
xor
lock
mov
lods
fstp
cdq
lds
and
adc
and
adc
stos
dec
(bad)
cli
fiadd
jne
dec
shl
mul
xchg
retf
push
mov
mov
call
fistp
retf
ret
sub
test
cmp
mov
xchg
jb
loop
mov
pop
std
fs
sub
in
sbb
dec
cli
sar
loope
pushf
adc
icebp
sub
sbb
jns
sub
enter
cmp
add
pop
stc
or
add
push
int3
ins
test
jp
scas
cli
push
dec
xchg
ficom
mov
xchg
enter
dec
pop
out
cmc
adc
or
fimul
imul
jp
popf
ss
in
retf
jecxz
clc
jae
mov
cmc
dec
(bad)
adc
fnstcw
add
sub
aad
xchg
sbb
cmp
stos
mov
xor
(bad)
(bad)
data16
stos
lahf
xlat
adc
lock
xchg
mov
adc
sbb
into
ret
adc
lods
in
lock
cld
xchg
retf
nop
ror
pop
and
retf
mov
pop
inc
or
bound
lods
fadd
mov
lods
dec
fstp
test
cs
cmp
rcr
cmp
pushf
jb
ins
sahf
js
hlt
shl
in
cmp
mov
pushf
fidiv
les
xor
stc
pop
xor
in
rcr
pushf
ins
pop
popf
ret
xor
sbb
loop
sbb
call
scas
pop
mov
ins
ret
and
std
pop
into
inc
ins
fstp
in
aam
push
ins
xchg
dec
sbb
add
fwait
mov
(bad)
cli
jge
push
ret
jg
mov
jg
cmps
call
xlat
pop
inc
fmul
(bad)
cmp
pop
test
out
mov
jle
and
bound
mov
jl
cmp
xor
cmp
mov
mov
jp
test
cli
ins
xchg
mov
or
mov
add
push
sahf
fiadd
or
aaa
lea
shl
js
scas
stos
enter
aam
mov
add
test
lods
lahf
faddp
in
in
mov
fldenv
push
fild
and
xor
cmp
fst
out
nop
jecxz
xchg
push
lahf
jle
popa
sti
inc
fs
js
fiadd
sbb
adc
pop
out
pop
pushf
jmp
repz
cmp
pushf
ins
test
xlat
ss
sahf
mov
xchg
(bad)
jbe
fdivr
ss
imul
pushf
dec
mov
(bad)
sar
rcl
pushf
scas
jbe
shl
xlat
rcr
hlt
mov
fnstcw
push
xchg
cmp
sbb
jle
xchg
push
call
pop
xchg
and
fidiv
ja
in
cmc
fdivr
mov
mov
out
push
cmc
mov
cwde
pop
fidiv
outs
mov
addr16
sbb
xor
outs
jecxz
cmp
jmp
ret
ret
pop
popf
std
fadd
outs
enter
jmp
mov
ins
pop
repz
test
(bad)
bound
nop
sbb
push
pop
xor
push
scas
cmp
outs
pop
ret
ss
sbb
imul
in
fadd
ins
js
pop
pop
jmp
dec
fistp
int3
fdivr
call
push
fnstsw
cs
cmp
fcomp
sbb
fcom
cmp
pop
fwait
scas
cmp
hlt
dec
mov
out
out
xor
stc
fdivrp
test
fidivr
out
retf
jmp
mov
ins
ret
and
std
pop
into
inc
ins
fstp
in
push
xchg
stc
fcmovu
adc
dec
fnstsw
fsub
cmp
sbb
sub
mov
stc
stc
pop
sbb
popf
ficomp
cli
aad
cmps
dec
(bad)
xor
jno
fidivr
ss
int3
pop
imul
or
icebp
pop
test
jmp
data16
ins
stc
fisubr
(bad)
mov
sti
pop
rcr
xor
pop
pop
push
leave
fcomp
mov
add
popf
fidivr
in
cmp
dec
ins
push
mov
fstp
gs
fisttp
pop
push
cmp
mov
fcomp
mov
sahf
ficomp
push
add
pushf
mov
push
jmp
pop
push
xor
fsubr
stc
adc
cmp
sti
mov
sahf
fidiv
pop
push
mov
cdq
fnstsw
pop
lds
jge
fistp
stc
repz
ins
call
push
pop
inc
ins
fstp
out
mov
repz
fcom
mov
push
fnstcw
in
cmp
xor
pop
dec
popf
imul
xor
out
xchg
stc
adc
les
cmp
xor
pop
xchg
test
inc
fistp
js
ficomp
out
rcr
cmp
call
test
cmp
pop
sub
adc
call
das
pop
inc
aas
int
sar
test
dec
scas
push
(bad)
fucompp
inc
cmps
fisub
in
jae
(bad)
lock
cmc
add
xor
lds
or
inc
mov
jns
add
add
les
or
xor
sub
pop
fs
jae
mov
pop
fs
sbb
pop
(bad)
pop
pushf
test
lods
cmp
xor
inc
mov
sbb
fwait
mov
mov
out
addr16
dec
test
ins
lea
mov
dec
mov
test
cli
stc
lea
xabort
pushf
pop
or
or
in
jecxz
lahf
jp
add
bound
push
outs
ret
sub
mov
jge
sbb
out
fidiv
cmp
(bad)
inc
(bad)
add
jns
jae
imul
hlt
pushf
sub
inc
enter
jmp
rcl
aaa
(bad)
repz
mov
cmps
cmp
aam
mov
frstor
dec
lods
xchg
sub
or
sbb
sbb
cmp
lock
mov
or
addr16
sahf
dec
lds
aas
ror
inc
cld
mov
jmp
fstp
sub
scas
push
(bad)
push
test
sbb
cwde
sbb
mov
ror
cdq
mov
jmp
fild
jmp
jno
push
jecxz
(bad)
div
adc
pop
inc
lock
inc
fisub
je
cmp
das
pushf
and
call
mov
je
lock
sub
(bad)
cmp
retf
test
pop
add
pop
ins
push
pop
cmp
push
sbb
lods
cmps
div
dec
mov
cmp
push
and
add
(bad)
aam
ret
mov
push
sti
sbb
shr
jmp
sub
(bad)
fdiv
in
fstp
add
ficomp
push
call
push
push
jg
xchg
push
pop
jg
mov
pop
sahf
push
dec
repnz
mov
stos
xchg
cmps
cmp
inc
std
imul
or
js
jbe
pop
mov
stos
sub
test
pusha
sahf
fisubr
mov
xor
dec
ja
loopne
sub
das
das
fnstsw
test
lds
cmp
cwde
in
dec
push
sbb
add
lea
je
into
call
(bad)
jbe
leave
ret
(bad)
jp
pop
fwait
movs
xor
hlt
dec
push
jecxz
iret
xlat
mov
mov
sub
xlat
xor
retf
js
xchg
lods
mov
jge
xchg
pop
sub
dec
into
enter
lods
ins
pop
mov
cmc
imul
test
(bad)
fdivr
mov
mov
push
leave
lods
test
cli
mov
call
sub
movs
test
je
pop
das
js
dec
mov
sar
lahf
mov
popa
push
test
hlt
pop
fiadd
mov
enter
ins
js
int
inc
mov
les
repnz
push
iret
cwde
or
shl
push
shl
shl
sbb
pushf
stos
pusha
data16
cmp
push
loopne
dec
loopne
sub
dec
js
fild
addr16
jo
xchg
test
ja
idiv
fdivr
adc
iret
jbe
daa
fwait
rol
bound
jle
(bad)
loope
retf
(bad)
shl
retf
inc
out
repnz
mov
sti
fisttp
test
lods
jp
push
xchg
movs
or
adc
sbb
jb
sbb
sbb
arpl
inc
retf
jl
ins
fstp
and
jp
int
cmp
push
ret
ret
adc
mov
cmps
leave
pop
ret
lds
and
ins
sahf
pop
test
lea
jbe
outs
ret
add
mov
cs
sbb
(bad)
test
hlt
(bad)
outs
jp
xlat
jmp
jl
xchg
(bad)
das
ins
xchg
pop
(bad)
xor
pop
retf
rol
push
lods
outs
loop
jle
add
sub
cwde
mov
pop
stc
xchg
jmp
jmp
cs
clc
js
lods
jb
das
add
or
xor
gs
(bad)
jmp
pop
in
pop
pop
sub
pop
mov
ror
mov
(bad)
cmps
mov
out
adc
fistp
mov
imul
dec
int
mov
jmp
xchg
aad
sbb
psubusw
pop
inc
pushf
addr16
in
imul
jmp
cmp
lods
wbinvd
frstor
data16
repz
and
lea
aam
pop
test
inc
into
and
pop
cdq
pop
test
xchg
aad
rol
sahf
int3
enter
outs
xlat
lds
jbe
xchg
dec
loop
fistp
cwde
cmp
das
neg
pop
xor
inc
in
sub
pop
push
(bad)
pop
div
ret
pop
cs
xlat
xchg
scas
arpl
sahf
mov
ss
repz
sub
das
jmp
jbe
in
cdq
or
bound
movs
sbb
adc
sub
cmp
call
cli
int
xchg
test
sbb
lods
add
push
sub
jbe
add
jbe
sub
and
push
mov
dec
cdq
xrelease
sbb
test
and
mov
in
mov
les
ficom
jno
stc
ins
repz
repz
mov
ret
xchg
pop
push
push
jg
mov
cmps
rcr
ret
xlat
stos
mov
aam
push
fwait
jns
xor
jmp
aam
(bad)
mov
outs
stc
ins
sbb
movs
iret
(bad)
popa
inc
pop
add
loopne
xor
cli
ds
jecxz
lock
add
pushf
fs
popf
sub
add
xor
(bad)
jmp
cs
hlt
push
sub
fcom
scas
add
sub
jmp
scas
push
dec
iret
popf
in
cmps
dec
test
cli
out
dec
push
add
cs
daa
add
mov
stc
fdivr
lods
xchg
lock
std
imul
sub
mov
pop
sbb
xchg
ds
push
in
std
cmp
mov
dec
sti
mov
outs
ins
out
in
or
lods
push
lods
lds
fdivr
popa
lds
ror
popf
aam
inc
retf
nop
into
xor
fldenv
test
test
pop
xchg
mov
aaa
pop
mov
in
or
pop
pop
sbb
sahf
xchg
dec
sbb
shl
sub
mov
stc
sbb
retf
xor
mov
cmc
xchg
jmp
popa
aam
fldcw
cmp
fs
(bad)
setle
jno
pusha
mov
data16
or
and
xlat
pop
int
fistp
fcmovu
mov
sub
cli
lds
inc
sbb
xchg
pushf
adc
xchg
cmp
(bad)
jmp
cmps
fs
addr16
aam
adc
iret
push
xchg
stc
cmps
jae
stc
outs
fisub
jno
shl
pop
xchg
mov
dec
sahf
dec
ds
addr16
sbb
fild
add
iret
arpl
push
jl
fmulp
xchg
sbb
sahf
mov
popa
ds
retf
push
ret
ficomp
push
sub
xlat
dec
sub
pop
add
adc
ftst
cmp
fldl2e
and
shr
scas
popa
mov
into
cmp
add
sahf
fcom
mov
push
test
cdq
mov
aas
call
clc
cmp
push
ret
push
push
mov
sti
sbb
loope
pushf
test
sub
sti
ja
cmps
mov
mov
pop
mov
inc
sbb
stos
xchg
imul
les
rol
pop
not
jmp
cwde
dec
xchg
(bad)
idiv
adc
mov
lods
retf
push
jne
jbe
mov
pop
loop
or
ficomp
adc
cmp
sbb
sbb
xor
sub
push
movs
push
push
dec
jb
daa
pop
xchg
icebp
cs
fsub
cs
pushf
in
push
pushf
in
pop
pushf
in
aaa
pushf
jbe
cmp
xor
js
mov
sbb
das
call
add
cmps
sbb
repnz
sub
sbb
(bad)
(bad)
imul
ror
sbb
stc
out
bound
popf
cmp
stos
sahf
ja
daa
jecxz
push
lods
xor
jnp
add
ins
sbb
test
out
cmp
xchg
sti
rol
inc
int
jae
outs
popf
outs
leave
ins
popf
mov
das
xor
xchg
repz
cld
sar
test
jp
rol
(bad)
pop
div
std
or
mov
mov
in
lods
jle
jno
mov
pop
sbb
fwait
mov
test
mov
sub
cmp
sub
cwde
push
stos
xor
pop
add
xlat
xchg
aam
in
mov
and
and
enter
cmp
inc
fidiv
mov
ret
cmp
sahf
in
push
call
sbb
aam
(bad)
or
add
jle
rcr
fldenv
lock
mov
mov
and
pop
popf
sbb
or
loop
fld
stos
ror
je
ficomp
cmp
or
mov
in
sub
aad
inc
in
pop
in
(bad)
jns
pop
jbe
retf
je
jns
jno
jns
fidiv
test
fmulp
(bad)
sub
loop
ins
das
(bad)
jp
sub
retf
ins
xor
jns
pop
cmp
dec
sub
pop
sub
mov
jne
in
sub
pop
mov
push
aam
pop
pop
enter
retf
in
sub
ficom
or
enter
push
mov
movs
cdq
fsubr
movs
sbb
sub
pop
sub
cli
push
cwde
cmp
das
pushf
fmul
push
ds
ficom
lea
fstp
stos
hlt
dec
cmp
or
pop
mov
repnz
ficom
jns
fwait
sub
pop
xlat
stos
stos
or
mov
adc
jp
imul
mov
cmp
jl
lods
hlt
inc
data16
cwde
ret
adc
jae
ins
popf
repnz
xchg
leave
cmp
jbe
adc
fwait
sub
and
ins
outs
jbe
jp
cmc
push
fisttp
test
and
hlt
test
sub
loop
mov
outs
cmp
dec
into
push
ins
cld
out
sar
pop
inc
shr
xor
push
cs
(bad)
lea
pop
movs
add
xor
(bad)
gs
sar
jmp
pop
ss
add
mov
rol
pop
in
test
hlt
and
adc
xor
lock
lds
pop
addr16
adc
pop
mov
jecxz
leave
cmps
stos
pop
repz
lods
cli
fistp
cmc
jp
cmp
xor
loop
push
cwde
aad
cmp
adc
outs
cmp
sahf
sbb
add
xlat
out
adc
cmp
inc
mov
mov
shl
adc
aam
int
jl
outs
sahf
sbb
sub
inc
lods
adc
dec
adc
jp
cmc
dec
mov
rcr
gs
lock
fnstcw
sub
dec
or
int3
call
outs
mov
mov
jl
pop
push
pop
or
sbb
jns
rol
jl
adc
ins
mov
xor
sub
out
icebp
add
adc
cmp
stc
nop
in
push
sub
sbb
frndint
ret
(bad)
or
shr
inc
cmp
in
mov
sahf
add
adc
pop
movs
ins
sbb
xor
jb
das
cwde
popa
xchg
push
pop
stc
pop
inc
sub
rol
fcom
test
push
cmp
test
(bad)
cli
jns
cwde
jno
mov
daa
pop
jmp
cmp
adc
mov
pop
es
mov
movs
sbb
pop
in
ds
lea
enter
mov
out
pushf
fdivr
add
xor
push
inc
aaa
(bad)
mov
mov
mov
ss
lock
xor
mov
dec
out
jae
jbe
cmp
push
jmp
call
scas
jmp
and
mov
fstp
mov
mov
les
sub
outs
loop
jp
idiv
or
cmp
pop
(bad)
push
scas
(bad)
cmp
xchg
xor
push
ss
mov
repz
push
dec
fmul
pop
fist
loope
jo
and
test
jmp
pop
cmps
sub
repz
(bad)
and
daa
cmc
push
mov
inc
neg
fmul
sbb
dec
adc
or
dec
sahf
inc
and
into
and
cmc
dec
popf
ins
iret
push
mov
clc
js
cmp
(bad)
adc
fistp
sub
sbb
out
addr16
stos
cmp
es
or
inc
cmp
jne
stos
xor
mov
test
xor
fadd
cs
push
adc
fwait
jns
pop
xor
(bad)
test
cld
jbe
out
repnz
shl
inc
ja
adc
call
hlt
xchg
shr
fwait
mov
inc
mov
mov
clc
sar
aaa
out
inc
and
std
xchg
iret
cmp
or
fsubr
cmp
popf
(bad)
push
cdq
mov
mov
dec
daa
and
int
cwde
mov
cwde
cmp
pop
jmp
cmp
rcl
pop
sbb
add
icebp
xor
out
pop
cmp
iret
cmp
cld
xchg
rcr
lods
pop
fwait
pop
clc
movs
ret
add
jp
cmp
das
(bad)
rcr
leave
das
mov
loope
mov
inc
fisttp
jno
pop
sub
dec
fidivr
repz
ins
cmp
mov
cmp
cmp
fcomp
js
popf
cmp
aas
in
jle
sbb
pop
fwait
mov
(bad)
repz
rcr
pushf
enter
mov
stos
int
mov
imul
push
gs
mov
and
mov
pop
cli
aad
jne
jo
(bad)
mov
ins
loopne
and
movs
sahf
fsubr
add
movs
lock
xor
sub
mov
into
test
dec
fnstsw
leave
ins
bound
fdiv
add
pop
or
cmp
sub
fisubr
fxch
mov
test
(bad)
sbb
faddp
cmp
pushf
cs
sbb
shr
pop
dec
sahf
fdivp
push
inc
in
inc
scas
xchg
loopne
shr
adc
fnstenv
data16
test
std
add
sub
out
ret
push
push
sbb
ins
sar
mul
mov
arpl
xchg
lds
inc
sahf
push
adc
imul
push
jne
pop
test
mov
out
inc
cmp
push
(bad)
mov
sbb
jg
inc
movs
fs
and
icebp
test
(bad)
pop
inc
enter
pop
jecxz
(bad)
(bad)
stos
sub
fcomp
in
addr16
inc
sbb
mov
lock
call
push
push
xchg
inc
out
mov
adc
pusha
mov
imul
pop
push
push
sbb
rcr
repz
call
ud1
into
jle
int3
popf
push
ins
cmp
popf
aad
arpl
fnstcw
scas
js
(bad)
sub
clc
iret
push
jae
lea
test
fstp
xchg
(bad)
push
in
xor
inc
jle
sbb
sahf
jp
les
and
push
imul
push
fisub
es
sub
cmp
out
mov
sbb
sbb
dec
cli
xor
popa
jnp
xor
(bad)
ror
(bad)
neg
popa
mov
test
shl
cmp
sbb
and
pop
lods
fcomp
inc
fldenv
test
jne
cld
mov
sbb
stc
xchg
pop
jne
mov
dec
xor
dec
cmp
pushf
les
jnp
and
cmp
pop
call
les
push
pop
fs
call
outs
pop
fnstenv
les
mov
inc
mov
iret
jp
sub
adc
outs
push
clc
pop
cdq
pop
sbb
jge
fimul
sbb
push
mov
(bad)
push
fs
push
mov
fs
jne
dec
push
leave
jns
shr
xchg
push
mov
stc
push
(bad)
jmp
mul
loopne
ja
loopne
xor
js
mov
mov
movs
or
mov
ror
lahf
lock
inc
mov
mov
adc
sub
mov
int3
pop
(bad)
mov
push
mov
cld
mov
fnstcw
scas
neg
retf
cs
(bad)
inc
loop
test
out
or
xchg
pop
cmp
call
test
fcmovnu
mov
jb
xchg
rcl
cmp
ins
fistp
sub
mov
pop
pop
sbb
mov
les
pop
std
cwde
enter
cmps
jmp
cs
clc
jb
xchg
jno
clc
movs
popa
inc
in
xchg
or
or
stc
hlt
ficomp
js
test
jmp
fst
xor
in
mov
and
(bad)
pop
fisttp
sbb
sbb
mov
dec
enter
cmp
cli
push
add
xlat
sub
(bad)
sbb
bswap
add
fisubr
mov
dec
xchg
(bad)
aam
test
dec
mov
int3
icebp
aam
and
ins
pushf
popf
fsubr
dec
(bad)
in
loop
push
ds
pushf
xchg
movs
add
ja
push
pushf
sar
std
pop
call
imul
fldcw
mov
daa
xchg
jno
jmp
retf
js
mov
sub
lock
fdivr
pushf
popf
bndldx
jg
dec
call
or
lock
pushf
popf
cmps
out
xchg
or
ret
clc
not
push
call
test
xchg
push
mov
and
jg
push
fsubr
and
cmp
mov
ret
xchg
ret
(bad)
(bad)
outs
pushf
sbb
dec
sbb
pop
into
fmul
xchg
stos
mov
add
jno
add
push
div
pop
jmp
sub
(bad)
mov
js
sub
popf
pop
and
repz
dec
and
mov
pushf
xchg
(bad)
xchg
sub
int3
xchg
ret
icebp
div
and
call
pop
stc
daa
inc
pushf
adc
test
repz
repz
out
mov
fnstcw
sub
movs
test
xchg
sbb
pushf
das
jae
inc
call
lods
pop
or
pop
add
xor
xor
jnp
je
jg
repz
pusha
jo
aas
jl
cmp
xlat
addr16
pop
in
shl
adc
dec
aaa
mov
(bad)
pop
pop
sbb
push
pop
sbb
inc
cmp
ins
xor
xchg
xchg
jne
ins
cdq
loope
dec
bound
mov
or
jns
aaa
pop
cdq
jae
mov
push
loop
fsub
inc
pop
add
add
push
dec
adc
out
out
leave
pop
cmp
pop
pusha
inc
dec
shl
mov
push
clc
jle
js
stc
cli
(bad)
aad
mov
test
add
push
sub
mov
fimul
ds
add
push
cli
dec
mov
pop
or
test
retf
jnp
xchg
shr
and
mov
ins
fsub
fsubr
xor
add
pop
sub
add
jnp
pop
cdq
pop
(bad)
dec
cs
jle
test
mov
xchg
les
call
jmp
stc
jbe
(bad)
fsub
test
fwait
ins
popf
cdq
pop
in
call
fcomp
cmp
pop
sbb
lods
clc
stos
mov
imul
ins
cmp
inc
cmp
sub
stc
jns
cli
pop
push
xchg
dec
mov
sub
(bad)
stc
ret
xchg
(bad)
sbb
mov
int
fnstenv
retf
retf
push
inc
iret
ss
in
dec
out
cs
out
xchg
jo
sub
clc
fdiv
test
inc
sahf
and
rcl
imul
stos
xor
cmps
pop
iret
sbb
mov
(bad)
adc
sbb
and
or
js
in
pop
les
lods
cli
test
and
or
jmp
mov
sar
dec
sbb
inc
ja
cmps
lock
fiadd
movs
jno
mov
mov
leave
dec
call
or
fdivr
sbb
ins
cmp
cwde
das
xchg
jp
xlat
cmp
mov
in
dec
call
js
fcom
int3
pop
call
retf
retf
sub
repz
dec
cld
mov
jg
jns
or
xchg
call
arpl
inc
sbb
jmp
es
sbb
loope
fcomp
in
out
inc
pop
jge
add
dec
dec
sbb
jge
cmc
mov
inc
adc
hlt
sub
pop
popf
pop
inc
mov
ins
or
inc
ret
(bad)
repz
test
imul
mov
sar
(bad)
cli
cmp
mov
xor
sbb
jmp
dec
push
mov
retf
arpl
aaa
out
cwde
inc
pop
ins
push
xchg
jg
mov
(bad)
mov
cmp
int3
sbb
retf
cwde
enter
fidivr
shl
(bad)
(bad)
aas
stc
repnz
jmp
movs
xlat
cwde
mov
sub
(bad)
ror
(bad)
add
xchg
xor
outs
inc
aaa
jns
out
push
retf
clc
pop
stc
scas
retf
in
dec
(bad)
adc
jae
jbe
jge
jmp
fdivr
pop
cmp
dec
mov
bound
fstp
cs
lock
pushf
lock
movs
retf
pushf
or
ret
pop
or
stos
cld
fs
dec
xor
loop
(bad)
lods
cmp
fwait
std
xchg
call
push
adc
retf
icebp
inc
xchg
push
mov
outs
shl
loop
rol
ins
push
(bad)
push
dec
mov
shl
imul
inc
test
je
xchg
inc
cdq
es
or
das
rcl
arpl
jp
mov
ds
fs
scas
(bad)
imul
mov
jmp
inc
cmc
fistp
sub
(bad)
xchg
jle
ja
sbb
push
sbb
mov
retf
inc
retf
jns
push
cwde
clc
in
pop
jne
dec
fistp
aas
int
push
jl
sbb
(bad)
loope
pop
mov
pop
stc
ss
inc
idiv
and
xor
aam
pop
repz
hlt
sub
(bad)
jl
sub
ins
cs
fdiv
xchg
jmp
pop
sti
retf
adc
retf
pop
pop
mov
sub
sar
cli
int3
scas
loop
lock
vmovd
loopne
cld
or
or
and
cli
int3
xchg
sub
sub
lds
in
int
push
test
test
fwait
sbb
fwait
sti
sub
test
test
out
and
ds
sub
jmp
scas
in
loopne
xlat
fsub
repnz
mov
push
push
sbb
cmp
fcomp
push
in
sbb
(bad)
xchg
pop
mov
ins
dec
ja
(bad)
(bad)
sub
int
mov
xlat
fcomp
jmp
ins
mov
test
fdiv
inc
fisub
pop
or
push
jge
loop
outs
lods
iret
add
(bad)
movs
clc
iret
(bad)
dec
into
popf
dec
sub
cmp
inc
loop
outs
jnp
movs
sbb
out
addr16
inc
push
bound
fs
mov
call
add
push
int
sbb
adc
pop
(bad)
sbb
stc
imul
cmp
jmp
push
cmp
inc
sbb
inc
adc
(bad)
(bad)
xor
pop
sbb
fcomp
xchg
rcr
dec
push
loope
sbb
push
(bad)
push
ja
add
xchg
jo
and
jb
cwde
dec
aam
test
pop
push
inc
sub
(bad)
movs
mov
jae
xchg
retf
hlt
mov
adc
sbb
call
into
fiadd
push
cwde
mov
cld
lea
cmp
dec
and
(bad)
sar
(bad)
les
dec
pop
adc
push
lods
pop
movs
add
lea
enter
int
xor
out
jecxz
push
pop
pop
int
xchg
push
sar
add
and
push
outs
into
pusha
sar
cli
ret
out
jle
outs
push
sub
test
and
ins
ficomp
addr16
fwait
addr16
iret
xchg
mov
enter
jg
push
dec
(bad)
stc
jo
sub
jns
popf
fst
push
jmp
(bad)
enter
call
pushf
out
call
and
fsub
xchg
xor
inc
ficomp
out
dec
fwait
inc
push
sti
sahf
mov
pop
std
retf
xor
mov
mov
icebp
jbe
vpsubusb
mov
cmp
dec
mov
into
cmp
dec
sar
jbe
ds
jbe
ins
out
mov
dec
rcl
js
retf
mov
dec
shl
out
pushf
cld
fs
cdq
cmp
sub
popa
push
xchg
in
lahf
enter
std
cld
or
jbe
pop
pop
pop
push
call
out
mov
es
pushf
retf
push
mov
cmp
xchg
dec
sub
pop
push
mov
cli
mov
fdivr
retf
rcr
jmp
fcomp
mov
clc
jmp
push
jmp
rcl
mov
cmc
(bad)
cmp
fwait
aaa
jmp
cwde
retf
pop
sar
jmp
adc
xor
sbb
inc
or
fnstenv
daa
sbb
mov
and
out
mov
call
je
mov
in
pop
sbb
jo
mov
lods
rol
imul
ins
or
add
adc
ins
(bad)
nop
cmp
pop
mov
loope
sbb
adc
cmps
pop
out
and
pop
enter
data16
ds
sbb
std
push
out
xchg
enter
fdivr
in
pop
sbb
sub
mov
dec
mov
imul
std
inc
sbb
iret
or
adc
add
push
pop
test
sbb
and
sbb
push
cld
test
pop
cld
sahf
ins
cli
dec
push
jmp
test
pop
loopne
outs
out
frstor
je
cmc
int3
stos
mov
sti
inc
pop
cmp
sbb
mov
mov
les
add
dec
pop
and
loopne
or
cmp
sar
push
icebp
loopne
es
clc
mov
ins
mov
inc
add
inc
pop
mov
dec
pop
pushf
in
nop
loope
sub
sar
ds
lds
daa
repz
mov
leave
js
xchg
rcr
fs
(bad)
faddp
fild
jo
adc
cld
fidiv
mov
cmp
(bad)
repnz
pop
pop
adc
sbb
nop
int3
loop
mov
(bad)
mov
stc
retf
lock
push
lds
dec
rcr
js
and
rcr
pop
add
jle
nop
sbb
rcl
adc
cmp
nop
jge
(bad)
je
int
adc
dec
out
pop
out
and
xor
(bad)
out
jg
sar
aad
jne
rcl
cld
jge
(bad)
xchg
lock
(bad)
test
pop
leave
rcr
sahf
add
push
ret
and
arpl
push
bound
xlat
rcr
add
pop
sbb
xlat
ins
ret
jl
out
jg
outs
loop
mov
retf
push
inc
lds
cmp
aad
mov
clc
in
cmp
(bad)
inc
loop
adc
push
ret
stc
inc
loop
adc
pop
ret
push
loop
pop
mov
out
pop
mov
out
jo
stc
imul
fidivr
retf
movs
ins
mov
cmps
movs
ja
jne
adc
int3
ins
shl
pop
imul
das
inc
sar
jno
loopne
aas
push
xlat
jmp
fidiv
in
sbb
pop
stos
xor
pop
mov
mov
fidivr
sub
fwait
cmp
cmp
clc
gs
pop
cli
enter
xchg
and
mov
ins
mov
mov
ins
fild
out
xor
adc
xchg
mov
fisub
in
popf
je
push
stc
movs
in
and
fild
shr
jne
jge
movs
in
popf
je
ins
js
push
push
mov
jmp
jp
fldenv
popa
jmp
rcr
and
cwde
pusha
xchg
std
dec
ficom
out
sbb
xlat
clc
pop
cmp
cwde
ss
jo
js
push
idiv
in
mov
cmp
mov
adc
in
and
movs
jne
test
test
mov
dec
loop
dec
out
mov
dec
pushf
sbb
pop
fadd
out
aam
jecxz
or
(bad)
sbb
icebp
cmp
popf
cmp
inc
mov
outs
repnz
mov
(bad)
into
std
adc
icebp
xchg
pop
test
adc
sbb
dec
fwait
pop
mov
test
retf
push
ins
jno
cs
mov
lods
mov
inc
popf
loopne
dec
sbb
inc
mov
adc
pop
sbb
retf
leave
jbe
jmp
or
lea
sub
push
rcl
cmp
mov
shr
pusha
add
dec
adc
sar
mov
not
cdq
into
mov
out
fistp
std
pop
cmc
lock
jno
inc
sub
dec
stc
fwait
out
pop
into
ror
adc
adc
or
clc
dec
dec
popf
mov
and
pop
xchg
retf
or
ins
pop
popa
(bad)
sub
cmp
rcr
push
in
mov
cmp
jo
jne
sbb
mov
sbb
push
fcomp
aas
sahf
aam
push
rcr
out
pop
sbb
add
sbb
jns
data16
das
jbe
loop
out
cmp
pop
pop
fwait
dec
pop
pop
cmc
pop
sub
shr
mov
push
xor
sbb
(bad)
fidivr
imul
xchg
jno
pop
push
dec
dec
inc
xlat
inc
jg
int
lods
sbb
rcr
add
hlt
loopne
int3
int3
int3
ds
pushf
fidiv
or
cli
jge
ins
je
ret
test
repz
xchg
sub
cmp
repnz
bound
sbb
add
mov
or
push
push
adc
push
sbb
aaa
lods
lods
cld
ffree
inc
sub
pushf
xchg
ficomp
test
push
rcr
add
dec
adc
jp
sub
add
es
stos
loop
inc
std
inc
mov
jecxz
mov
cmp
cdq
test
dec
ret
adc
sbb
sub
push
fidiv
ror
mov
cdq
loop
test
hlt
in
xlat
fdiv
in
push
lahf
jp
loop
mov
cwde
jmp
or
bnd
pop
and
(bad)
xor
fistp
(bad)
out
push
into
sbb
and
jl
in
imul
sub
jbe
aas
aad
int
popfw
fsub
fst
jl
jno
les
add
icebp
in
mov
push
jmp
jp
enter
iret
cs
lock
idiv
inc
into
pop
les
(bad)
mov
std
adc
(bad)
pop
fmul
mov
ficom
xchg
fcomp
(bad)
cli
int3
push
xchg
dec
adc
idiv
xchg
fidivr
retf
cli
dec
cwde
mov
jg
jno
ret
push
mov
movs
mov
sub
mov
jo
outs
ds
test
inc
(bad)
stos
int
xchg
loope
lods
jno
cmp
repnz
lea
dec
cwde
dec
in
int3
(bad)
xor
xchg
retf
repnz
pop
idiv
shr
dec
std
fdivr
jo
pop
mov
(bad)
repnz
loopne
maskmovq
div
mov
aas
or
sub
ret
jmp
(bad)
ds
out
call
scas
xchg
jle
test
inc
push
mov
pop
inc
cvtps2pd
les
inc
repz
repnz
adc
in
call
xlat
ins
ss
jge
cmps
stos
ficomp
push
in
popfw
mov
bound
cli
int3
push
jmp
mov
xchg
pop
cmps
scas
push
mov
loopne
mov
ins
into
pop
daa
cmp
aad
daa
ror
push
sbb
repnz
adc
xchg
and
sbb
add
mov
add
jno
mov
in
stos
and
jmp
xor
inc
fchs
dec
jl
mov
popa
addr16
cmp
(bad)
fiadd
xchg
lods
sbb
iret
sbb
xchg
adc
enter
cdq
enter
clc
adc
dec
sbb
or
cdq
inc
pop
iret
pushf
sub
xchg
pop
jle
add
inc
shrd
jp
in
ret
(bad)
int
adc
loopne
call
shl
or
mov
jo
fild
fdiv
std
jns
out
cwde
popa
adc
(bad)
cmp
icebp
sub
sbb
mov
jnp
sbb
pop
cmp
shl
inc
push
rol
repz
lods
or
cmp
xchg
test
hlt
cmp
lock
jp
push
cmp
aad
inc
and
jl
sti
div
push
xor
in
inc
xchg
outs
xor
(bad)
jmp
mov
sub
sub
fwait
(bad)
iret
pop
nop
dec
dec
inc
ins
sti
pop
(bad)
enter
mov
fidivr
push
scas
aam
push
js
out
es
not
mov
mov
test
fild
gs
cmp
xlat
das
sbb
ror
dec
xlat
dec
sbb
fcom
fiadd
call
hlt
inc
cli
fcomp
jge
out
lea
in
jmpw
push
dec
mov
lods
out
xchg
leave
cmp
rcr
xlat
sbb
sub
and
fcom
pop
push
and
outs
into
ficomp
cwde
mov
cmp
enter
clc
sahf
xor
pusha
mov
(bad)
ins
lods
ins
fwait
cmp
dec
ds
jmp
and
(bad)
push
stc
(bad)
pop
test
adc
leave
mov
dec
push
(bad)
mov
mov
xchg
jbe
loope
jle
push
daa
mov
jmp
jns
sub
out
jmp
pushf
jmp
sub
das
sbb
jbe
sti
fsub
cmp
inc
aas
dec
mov
jle
and
(bad)
xchg
lock
ror
jns
aaa
jge
pop
movs
and
sahf
das
fbstp
push
(bad)
fadd
aad
push
inc
imul
repz
rcr
and
stos
pop
sbb
test
jle
push
(bad)
pop
mov
in
xor
mov
mov
in
sub
(bad)
fisub
repnz
mov
jbe
(bad)
das
pop
retf
sti
push
xor
scas
jecxz
pop
fnstenv
xchg
push
mov
fcomp
movs
lods
dec
lahf
into
mov
ds
inc
xor
xchg
mov
cdq
mov
jns
sbb
adc
repnz
cdq
out
ja
sbb
lahf
sub
pop
jns
and
mov
mov
sub
cwde
jmp
idiv
repnz
pop
aam
lahf
pusha
inc
and
lods
xchg
mov
in
jns
loop
mov
push
sbb
retf
pop
jne
leave
pop
fwait
movs
mov
adc
jnp
jne
jne
cmps
loope
or
jnp
mov
push
add
fwait
cmps
mov
push
imul
pop
pusha
call
mov
inc
pop
pushf
stc
bound
jmp
or
jmp
and
js
aad
adc
retf
imul
mov
retf
popf
push
push
mov
xor
mov
cld
fdivr
or
mov
inc
sbb
mov
inc
push
mov
and
cmp
(bad)
shr
in
out
mov
fmulp
xor
retf
pop
stos
and
lock
add
add
test
and
maxps
cs
pop
test
inc
add
int
xor
cmp
das
mov
ficom
ja
xchg
jo
mov
shr
das
out
fnstcw
push
mov
jnp
int3
xchg
push
inc
outs
aas
pop
sub
fwait
adc
mov
xchg
(bad)
pop
jns
int
cmps
lock
cmp
test
sti
add
mov
cli
mov
mov
mov
ret
sub
jg
ret
(bad)
in
xlat
test
icebp
aam
lods
call
shl
cs
fsub
test
test
enter
mov
lock
sti
fcomp
out
dec
sub
aam
cmp
sbb
cld
addr16
xor
inc
mov
inc
out
test
retf
add
xor
fsubr
push
cmps
hlt
sahf
xchg
adc
adc
cwde
sti
xchg
fcom
inc
retf
fimul
in
retf
lods
test
push
(bad)
fdivr
and
inc
and
sub
leave
xor
sub
cs
ficom
sbb
mov
fcomp
fcomp
int3
sti
mov
cwde
add
cmp
jns
(bad)
cli
pop
daa
fnstcw
sbb
(bad)
dec
xor
loop
dec
loop
sbb
xchg
fucom
gs
xor
fist
int
into
call
outs
sbb
aad
push
pusha
nop
jmp
xchg
in
retf
les
sub
out
sbb
scas
sub
into
sub
mov
push
dec
xchg
dec
and
push
xchg
sub
out
dec
jne
fwait
test
pushf
test
test
test
inc
scas
push
in
cmps
sub
fmul
fidivr
or
add
fwait
mov
iret
int3
mov
pop
cmp
ss
cwde
enter
mov
stc
mov
mov
inc
push
fmul
ins
sub
ret
sub
pusha
jbe
adc
movs
ins
xchg
or
cmc
mov
inc
dec
hlt
retf
xchg
cmp
stc
mov
stc
mov
xor
mov
cmp
jne
movs
sbb
xor
cmp
jno
sub
cs
mov
cli
dec
push
(bad)
sti
dec
scas
pushf
gs
add
ins
mov
iret
and
rcr
mov
repnz
push
in
data16
test
mov
pop
scas
cmp
fwait
mov
cli
fmul
sbb
lds
pop
cmc
inc
pop
out
jmp
lds
mov
and
lds
inc
sub
mov
ins
aam
dec
sbb
cmp
lods
test
into
mov
int3
jbe
jecxz
jl
mov
mov
int3
push
jle
xor
int
mov
mov
cli
mov
test
movs
enter
ror
imul
sar
stos
cmp
ror
sahf
cdq
and
sbb
je
and
jns
(bad)
adc
int3
sahf
jp
int3
sbb
adc
sbb
or
fld
pop
sub
mov
dec
sub
test
mov
in
pop
bound
int3
xchg
les
pop
xor
inc
mov
out
fsubr
dec
stc
cmp
xchg
in
jno
(bad)
pusha
aas
jmp
(bad)
jne
leave
jp
sub
cmp
scas
shl
push
dec
and
mov
cwde
and
pop
dec
pop
jns
pop
aad
cdq
inc
fidivr
es
aam
push
xchg
add
stos
fisubr
ins
frstor
jp
mov
fisubr
inc
imul
das
dec
stc
pop
bound
lea
cmp
push
loop
lods
pop
jo
sbb
(bad)
ret
jl
adc
addr16
lods
fcmovb
and
scas
gs
fnstsw
or
mov
sbb
fisubr
inc
(bad)
repz
in
adc
xor
mov
rol
ror
jb
test
mov
loope
arpl
mov
jl
inc
jge
pop
sahf
rol
mov
adc
mov
loop
push
enter
rcr
int
push
in
repnz
inc
dec
popf
mov
and
call
cwde
or
in
pop
sbb
sub
sbb
lds
(bad)
cld
pop
sbb
enter
jmp
mov
test
sbb
adc
xor
xchg
jbe
das
lahf
sbb
mov
cmp
fistp
and
mov
ja
push
movs
iret
je
xor
loop
mov
mov
in
mov
(bad)
sub
or
inc
clc
sub
push
pop
adc
clc
das
cmp
push
js
lock
sub
xchg
xor
clc
xor
cmp
jbe
sbb
pop
lods
test
sbb
sub
sub
loop
mov
push
in
adc
bound
dec
and
inc
stos
jmp
loope
outs
fdecstp
int
test
push
mov
xchg
cmp
xchg
lahf
cmp
fwait
jge
std
jle
mov
and
xor
iret
leave
hlt
imul
call
jge
sub
cs
test
pop
push
ja
jmp
in
pop
retf
retf
loop
ret
jnp
xchg
jnp
pop
loope
mov
addr16
xor
jo
sbb
nop
ins
(bad)
cmp
sbb
mov
fucomp
lods
popa
xchg
mov
(bad)
loopne
cdq
ds
cmc
movs
jbe
sbb
sbb
jnp
sahf
cmps
xor
pop
sub
rcr
cmp
fucomp
push
daa
sbb
xor
jge
lea
jp
push
fwait
jbe
fcom
in
scas
cmp
xchg
scas
cmp
cdq
scas
cwde
push
mov
(bad)
iret
dec
popa
in
ror
jge
hlt
pop
xor
stc
icebp
fwait
ds
cwde
inc
scas
das
pop
dec
sbb
stc
push
fucomip
pop
pop
outs
dec
sbb
push
bound
xor
loop
rol
test
sbb
leave
rcl
call
mov
cwde
fistp
cmp
cwde
push
pop
push
ins
pop
das
or
dec
cwde
sub
and
jns
pop
xchg
clc
int
cmps
xlat
stc
retf
mov
ret
rcr
dec
imul
jl
cli
popf
push
jmp
and
push
call
sbb
ds
movs
or
pop
adc
or
dec
dec
inc
inc
loope
ficomp
dec
add
jne
(bad)
cmp
inc
inc
sti
fistp
dec
repnz
and
jge
dec
push
cmp
sti
fadd
jmp
popf
pop
cmp
mov
loop
fistp
fidivr
add
cmp
push
dec
pop
fistp
mov
outs
pop
push
cmp
push
push
sbb
sbb
cld
lahf
cmp
addr16
jg
addr16
enter
push
mov
lock
int3
and
sbb
stos
sbb
pop
push
jl
push
adc
faddp
cmp
and
dec
push
xor
lods
push
outs
push
sbb
mov
cdq
test
test
mov
stc
mov
jne
inc
cli
and
dec
test
mov
xchg
fldcw
or
jmp
stos
pop
dec
jle
mov
push
mov
mov
xchg
mov
jns
sub
test
dec
clc
mov
fmul
(bad)
aas
jbe
inc
mov
das
mov
cdq
sar
fild
or
push
ja
pop
push
aas
adc
loope
scas
dec
mov
test
lock
pop
dec
cld
call
push
imul
sar
jecxz
mov
mov
or
icebp
ror
loope
cdq
ds
pop
pop
sbb
and
lods
test
(bad)
dec
dec
pop
push
stc
xchg
pop
pop
ret
idiv
sub
je
movs
dec
out
jo
sbb
ret
pop
je
sbb
loop
ror
outs
(bad)
fistp
mov
cs
mov
mov
xchg
(bad)
jl
(bad)
(bad)
inc
sahf
pop
rol
mov
xor
xor
lods
cmp
sub
jle
clc
stos
dec
(bad)
cmc
xlat
cwde
ja
cmps
cmp
ds
dec
rcr
jp
das
pop
and
dec
pop
(bad)
ins
add
das
push
mov
ins
bound
fwait
sub
rcl
dec
dec
adc
addr16
sbb
dec
rcr
test
pop
fld
cmp
dec
cmp
dec
inc
pop
dec
fistp
jg
sub
fidivr
xlat
sub
gs
(bad)
xchg
bnd
sub
push
sahf
pop
frstor
adc
stos
add
inc
bound
sub
imul
icebp
lock
pop
cmp
push
xchg
repnz
push
loopne
aaa
int3
cmc
aaa
push
sub
ret
outs
sbb
pop
sbb
lahf
fcom
lahf
fcom
lahf
fcom
in
fidivr
jmp
mov
lahf
fcom
sahf
fcom
sahf
fcom
cmp
fcom
mov
int
pop
mov
out
fdivr
call
fcomp
out
(bad)
pop
inc
jo
ds
lock
movs
sub
jp
pop
aam
sub
xor
sub
sar
ins
xchg
iret
out
push
int
xor
jnp
mov
shl
addr16
mov
inc
je
pop
(bad)
pop
cdq
icebp
jbe
ja
cmps
jns
fcomp
jmp
pop
into
out
adc
retf
data16
cwde
loope
jne
sbb
(bad)
fisub
scas
fdiv
aas
int
scas
ds
cmps
js
rcr
mov
add
jns
scas
mov
sub
movs
xor
xor
push
jo
push
fst
pop
inc
fwait
repz
cs
push
inc
retf
dec
jle
add
stc
retf
addr16
in
push
sbb
push
loope
sub
pop
mov
add
xchg
fs
cmps
cmp
or
cwde
inc
cmp
dec
call
hlt
pop
(bad)
mov
push
inc
xchg
pop
call
mov
pop
call
loop
mov
inc
jp
ret
fmul
sub
jl
mov
sbb
cmovae
xchg
(bad)
fdivr
(bad)
jmp
add
mov
(bad)
pop
inc
cmp
scas
or
pop
sbb
mov
jne
sbb
pop
nop
fadd
inc
das
adc
enter
add
lock
mov
clc
fld
loope
fidivr
dec
inc
sbb
adc
fucom
jbe
push
fwait
adc
pop
push
cmps
clc
icebp
sub
mov
mov
iret
fdiv
retf
pop
jbe
(bad)
shl
(bad)
ds
popf
stc
xchg
sub
fcom
(bad)
push
enter
dec
arpl
aaa
mov
hlt
in
jmp
pusha
sub
pusha
jo
shl
xor
repnz
cli
add
mov
xor
in
mov
and
retf
inc
stos
test
fdivr
sbb
push
sbb
icebp
push
push
daa
mov
or
adc
fs
or
sub
mov
test
in
lods
sti
cmps
aam
(bad)
jecxz
repz
and
aad
fs
out
cwde
cld
sahf
lods
jecxz
cmp
pop
push
popf
into
cwde
pop
in
fmul
or
push
jns
fidiv
xchg
fadd
adc
mov
xor
jns
push
jne
sbb
xor
movs
test
(bad)
and
fwait
mov
sbb
and
push
sbb
inc
inc
and
sub
sbb
lods
pop
inc
mov
stc
pop
(bad)
mov
mov
push
jmp
pop
push
sbb
add
cmp
in
cmp
xchg
test
mov
mov
icebp
push
jne
or
and
shl
jo
push
out
cmp
xor
fstp
sahf
jns
mov
and
inc
mov
pop
xchg
sbb
pop
mov
mov
rcl
out
cmp
aad
mov
mov
rcr
retf
cmp
jbe
and
xor
test
sbb
pop
movs
lods
adc
addr16
cmp
and
push
pop
js
adc
and
dec
push
and
enter
sbb
jge
dec
push
inc
icebp
pop
lahf
mov
fistp
xchg
sub
aaa
mov
repnz
jp
sub
fidivr
adc
es
fcomp
jle
cmp
cs
pushf
pushf
cmp
fcomp
dec
loopne
pop
aad
push
(bad)
cmp
movs
rcr
sub
cdq
sub
sar
test
ret
mov
inc
loopne
js
ret
cmc
(bad)
lods
loopne
shr
dec
repnz
mov
xor
es
or
shl
aad
push
xchg
psubusb
mov
jbe
mov
cmp
(bad)
(bad)
cmp
push
fcomp
call
cmp
rcr
mov
ins
in
cmp
fcomp
call
fild
add
rcr
imul
sub
xchg
ins
sahf
aam
test
(bad)
sub
test
push
nop
shr
movs
fistp
mov
push
mov
je
lock
hlt
ret
inc
sbb
adc
(bad)
(bad)
je
inc
into
je
jo
hlt
inc
shr
gs
hlt
jge
fild
pushf
jbe
cmc
nop
not
out
in
jp
cmp
test
push
call
push
call
(bad)
in
push
(bad)
ins
fcomp
enter
cmp
mov
push
jg
fidivr
fild
jns
fstp
mov
push
dec
jmp
pop
and
nop
add
ja
xchg
int3
mov
jmp
mov
mov
xor
sub
fcomp
pop
sbb
pop
fstp
popf
fcomp
fsubr
cli
mov
jge
mov
ret
adc
fsubr
(bad)
(bad)
(bad)
fcom
xchg
xlat
push
adc
cmp
sbb
fwait
jmp
pushf
sar
lock
popf
hlt
js
fcomp
in
pop
mov
adc
fsubr
ss
adc
sahf
or
sar
stos
pop
sahf
mov
imul
pop
xchg
sub
sbb
fwait
std
lea
mov
xlat
push
(bad)
(bad)
fisttp
mov
(bad)
jns
mov
stos
jns
sub
vdivps
sub
mov
stc
push
mov
jmp
fcomp
jge
fst
das
inc
(bad)
cmp
outs
sbb
inc
cmp
dec
mov
jae
shl
xor
add
frstor
and
ss
lods
fsub
das
das
pop
sbb
and
mov
cli
int3
xchg
inc
sbb
xchg
or
push
cmp
mov
test
ins
popf
es
or
fiadd
test
mov
aaa
in
pop
pop
sbb
xor
fmul
popf
cmp
push
fsubr
dec
cmp
frndint
js
retf
mov
fadd
and
adc
fcmovnu
faddp
stos
daa
and
pop
jbe
in
retf
push
dec
(bad)
(bad)
test
daa
and
fcomp
cs
clc
adc
in
clc
mov
sahf
retf
dec
cwde
les
fidivr
pop
or
int3
mov
sbb
addr16
mov
rcr
dec
sbb
jge
fidiv
in
pop
mov
pop
jno
fcomp
pop
xor
xlat
fcomp
push
fs
mov
push
cmp
sbb
cmp
push
cli
fucomip
pop
sbb
in
cmp
jns
loop
jns
inc
pop
mov
jbe
pop
aas
jne
test
pop
fnstcw
jg
movs
(bad)
repz
pop
fstp
mov
pop
movs
retf
addr16
pop
fst
ins
fild
addr16
fwait
outs
fild
test
fsub
inc
mov
sbb
sbb
jge
mov
sbb
ret
adc
and
ins
jmp
sub
push
call
pushf
add
sbb
and
jne
lods
pushf
lea
fimul
cs
xchg
cmp
sbb
mov
stc
or
pop
sbb
lahf
push
repnz
pop
in
cmp
test
cmp
push
stc
pop
cmp
pop
lahf
jge
mov
(bad)
pop
out
push
call
jns
nop
lea
jo
jmp
jae
mov
(bad)
fbld
cli
int3
fisub
xchg
pop
mov
fcomp
ss
pop
and
mov
inc
mov
mov
sbb
fadd
jmp
inc
test
test
ins
int
clc
push
pushf
inc
push
sti
pop
cmp
cs
in
jp
movs
sub
adc
pop
stc
xchg
loop
cmp
lods
push
inc
cdq
pop
sbb
rcr
xchg
inc
cmp
inc
sbb
sbb
test
cmp
call
xchg
inc
push
jl
sub
dec
sbb
out
in
test
push
call
scas
pop
fisub
mov
xlat
stc
adc
dec
mov
in
mov
dec
xor
xchg
fidivr
rcr
mul
les
out
rol
inc
sbb
cdq
in
sub
loopne
cmp
(bad)
jmp
(bad)
mov
outs
or
hlt
push
loop
mov
xlat
leave
rcr
mov
ss
ins
test
mov
cwde
sti
inc
lahf
popf
pop
mov
fisubr
mov
ficomp
sar
ret
pop
fwait
cmp
fcomp
(bad)
xlat
fcomp
cmp
push
sbb
sbb
xchg
loop
stc
scas
sti
fsub
jmp
(bad)
mov
les
aas
mov
clc
fcomp
sub
fwait
mov
xchg
sub
dec
arpl
sar
shr
dec
xchg
hlt
movs
fimul
out
and
cmp
lds
push
inc
lds
jp
pushf
inc
cs
fisubr
popa
pushf
in
arpl
call
inc
fidivr
pop
lods
cli
cs
(bad)
in
dec
fistp
in
test
test
fmulp
mov
cli
int3
mov
ret
cmps
test
icebp
xchg
lods
ja
fstp
mov
fistp
cmp
sub
call
pop
iret
retf
jmp
out
(bad)
and
cmc
and
pop
pushf
mov
cdq
repnz
cmp
ja
jns
fcomp
ret
retf
(bad)
rcr
mov
fcomp
ret
cmp
cdq
stos
sbb
daa
loope
jmp
call
fiadd
stc
mov
jmp
xchg
retf
adc
pop
xchg
adc
cwde
je
mov
lahf
stos
aam
sub
push
retf
pushf
push
sbb
ror
sbb
mov
ret
adc
and
mov
rcl
imul
retf
pusha
mov
mov
faddp
lock
xchg
test
fs
outs
pop
ret
data16
pop
pushf
pop
imul
je
stc
fdiv
fidiv
popf
push
dec
movs
clc
fisub
lock
pop
loopne
and
idiv
pop
push
stc
out
out
stc
dec
pushf
pop
cmp
pop
call
imul
out
and
add
fcomp
jno
aam
retf
pop
in
pop
pop
cmp
inc
xchg
push
outs
call
jmp
call
sub
out
pushf
loope
cwde
pop
loopne
ret
fdivr
loope
cmps
xchg
pop
sar
hlt
pop
lahf
sbb
scas
(bad)
shl
jae
cmp
sub
and
jns
cld
ret
xchg
lods
push
push
jg
fwait
stos
test
ficom
and
pusha
fisubr
fild
idiv
ror
mov
loope
inc
cs
lock
push
mov
test
xlat
test
ins
dec
cwde
mov
loop
pop
sbb
sbb
popf
xor
jecxz
faddp
xchg
sub
fld
sbb
push
fs
retf
std
sub
mov
push
pop
and
lods
jmp
mov
xchg
xor
mov
sbb
sub
loop
sub
enter
mov
(bad)
cld
fidivr
push
pop
xor
cmp
push
jb
jge
sbb
cdq
pop
fwait
ds
cmc
mov
stos
mov
int3
test
fs
cmc
in
mov
outs
cmp
mov
outs
xor
jl
jle
pushf
lods
fcomp
enter
mov
pusha
cmp
cdq
ret
push
fwait
mov
test
lahf
inc
in
fcomp
cwde
sub
fcom
pop
sbb
in
and
call
push
adc
fcomp
inc
jb
mov
sub
fwait
clc
fldlg2
pop
or
pop
fwait
mov
fldlg2
pop
mov
out
push
call
ja
cmp
ins
nop
push
jo
push
(bad)
pop
ja
outs
jae
iret
mov
aaa
shr
dec
sbb
fcomp
xchg
es
js
cmp
cmp
retf
out
fs
aam
popf
rcr
test
into
cld
fcomp
outs
xor
mov
jmp
popf
sub
sbb
mov
call
pop
inc
and
pop
inc
rcl
mov
int
fwait
cmp
dec
mov
retf
pusha
cmp
inc
retf
sub
pop
add
fisttp
cmp
rcr
ins
push
pop
add
xor
dec
popf
std
popa
repz
mov
pop
jecxz
push
clc
stc
stc
outs
mov
sbb
fwait
mov
sbb
and
xchg
lds
sub
call
test
xor
fcomp
ss
cmp
sbb
test
fistp
cmp
mov
sub
pop
imul
std
jge
fadd
stos
fidivr
loopne
(bad)
call
test
sub
pop
mov
popa
sub
sbb
loope
outs
rcr
cdq
rcr
push
fwait
jnp
dec
push
cld
adc
call
and
xchg
sub
jne
mov
fwait
xchg
jno
dec
stc
cmp
fidivr
arpl
out
in
popa
add
or
fidivr
popf
cmp
jle
fsubr
pop
imul
outs
fcomp
das
fstp
daa
loope
jmp
fwait
jnp
iret
sub
repnz
xchg
test
jne
lock
cmp
(bad)
dec
jle
pop
pop
mov
mov
pop
repnz
inc
mov
cdq
rcl
das
fidivr
push
ins
adc
xor
fld
imul
xor
bound
ja
sbb
ficomp
mov
pushf
cmp
loopne
fdivr
inc
sub
call
fimul
call
xchg
cwde
shl
pushf
ret
cs
clc
jns
sbb
stos
int3
sub
mov
add
pop
jno
pop
mov
pop
adc
das
int
fidivr
lds
gs
cld
jle
out
sub
loop
jns
popf
pop
mov
pop
call
push
jae
imul
(bad)
sahf
ss
popf
cmps
mov
sbb
cs
dec
fdivr
bound
inc
popf
pop
jp
pop
jne
xchg
cdq
and
stos
jl
inc
shl
sbb
dec
cmp
popf
ret
std
sbb
dec
out
pop
lahf
mov
imul
inc
fistp
mov
pop
jns
sar
sub
push
shl
or
daa
inc
cli
dec
bound
cmps
cmps
cdq
scas
or
mov
mov
das
or
inc
lods
sub
test
mov
cmps
inc
mov
fdiv
test
dec
enter
ret
jmp
and
sbb
push
sbb
fmul
(bad)
dec
sub
in
lods
mov
iret
sbb
(bad)
retf
jns
clc
je
fsub
fwait
xchg
icebp
sub
scas
inc
sbb
fdiv
pop
cmp
or
(bad)
mov
sub
jecxz
dec
sbb
js
xchg
mov
jb
sub
ror
and
mov
cdq
fcomp
in
push
(bad)
std
jb
ds
ins
repz
arpl
jbe
leave
scas
(bad)
cmp
clc
(bad)
cs
clc
hlt
xchg
(bad)
(bad)
ror
repnz
retf
ins
cmc
out
push
lahf
pop
shl
xlat
mov
lods
lods
adc
in
test
xlat
pop
sbb
test
popa
(bad)
in
cld
fsubr
fsub
adc
fdivp
pop
(bad)
sub
fs
repnz
call
and
lahf
or
scas
outs
push
push
xchg
ficom
rol
pop
pop
imul
xlat
mov
(bad)
stos
nop
outs
or
int3
inc
leave
enter
fcomp
and
dec
jp
loopne
sbb
retf
shr
out
push
mov
test
jnp
popf
cmps
sub
addr16
mov
xchg
sub
pop
mov
mov
mov
jnp
pop
add
(bad)
push
call
inc
cdq
inc
sbb
rcl
or
out
dec
out
jle
cdq
fcom
loopne
dec
pop
fld
fidivr
stos
rcr
mov
and
pop
pop
sbb
jmp
lds
or
jmp
cs
cld
jns
out
inc
in
retf
xlat
push
add
cs
vxorps
(bad)
fnstcw
in
lods
mov
inc
jns
lock
push
in
pop
inc
jg
and
jo
fsubr
push
inc
test
sahf
xor
dec
cld
jmp
adc
ins
rcr
cs
hlt
pop
cdq
jno
jl
std
fadd
xchg
call
int
fimul
fdivr
int3
pop
gs
sbb
dec
mov
jge
fnstcw
popa
movs
or
and
sub
into
cmp
cli
mov
std
loop
xor
cmp
jecxz
(bad)
scas
test
in
mov
cli
push
cli
stos
jb
sar
rcr
cmps
dec
stos
adc
cwde
es
pop
aam
(bad)
sbb
ins
sahf
je
test
into
adc
and
xchg
icebp
cwde
shl
sbb
push
sahf
jp
in
lods
xor
sbb
loop
imul
push
dec
dec
mov
out
enter
out
fdivr
test
out
cmp
loop
cs
popf
cld
call
mov
js
daa
and
xchg
(bad)
test
stos
ss
sbb
stos
fidivr
jmp
shr
pop
xchg
enter
mov
mov
retf
sahf
and
fistp
jno
fdivr
stos
dec
fldcw
(bad)
jge
push
jp
stos
jo
jp
push
jbe
in
retf
cdq
fcomp
retf
lock
mov
cmp
ins
sbb
clc
loope
push
pop
pop
sbb
ret
push
arpl
enter
and
cmp
scas
test
pop
cld
mov
pushf
jo
(bad)
xlat
push
sub
dec
dec
imul
cmps
bound
cld
or
hlt
test
int3
(bad)
test
out
int3
xor
adc
enter
loopne
das
inc
and
sahf
pushf
jns
in
pop
inc
lock
aaa
ret
mov
shr
int3
mov
neg
or
dec
fwait
imul
fs
cdq
stc
cwde
retf
jg
xchg
stc
pop
cmp
cmps
fisubr
jne
cld
mov
scas
retf
dec
cmc
(bad)
inc
iret
icebp
ins
xchg
sub
sbb
jmp
repnz
jg
clc
push
data16
sbb
in
(bad)
movs
push
(bad)
xor
lods
shr
pop
rol
popf
clc
(bad)
ins
fcomp
mov
shr
int3
push
(bad)
jns
mov
out
push
or
sbb
cmp
rol
les
push
mov
cmp
adc
dec
jmp
push
retf
leave
into
cs
hlt
out
pop
dec
sbb
aam
mov
adc
pushf
push
xchg
jnp
jnp
jo
pusha
add
mov
xchg
jbe
sub
inc
pop
mov
add
mov
or
test
cmp
inc
or
loop
je
mov
outs
or
fist
sbb
rcl
out
mov
and
popf
sub
fild
lds
jne
dec
adc
pop
icebp
js
push
xor
sar
jl
dec
stos
outs
idiv
and
mov
outs
mov
int3
sub
(bad)
sbb
push
scas
sub
cmp
(bad)
aaa
or
or
and
xchg
push
dec
ret
xor
and
fisubr
mov
retf
jb
dec
shl
sbb
daa
fs
jl
jns
into
jb
stos
fadd
ret
inc
fsubr
ja
cmp
mov
leave
jns
popf
adc
add
cmps
aam
out
(bad)
mov
dec
dec
and
cmps
fwait
movs
(bad)
stc
add
dec
dec
jbe
mov
cmp
popf
sbb
cwde
aaa
retf
and
add
adc
dec
sahf
test
cmp
fdivr
cmp
(bad)
cmp
sub
ins
lods
lods
(bad)
enter
pop
jecxz
dec
retf
mov
adc
cmp
popf
ficomp
inc
ret
aas
mov
push
cmp
cdq
mov
jns
clc
pop
xchg
hlt
pop
ja
sub
cwde
ret
faddp
scas
repnz
mov
mov
retf
push
in
push
sbb
xchg
test
(bad)
fmul
std
retf
pusha
stc
or
ja
sub
sub
mov
cmp
cli
fsubr
(bad)
mov
in
cmp
mov
sbb
adc
out
fistp
arpl
sub
ds
ins
cdq
mov
aas
inc
fsub
jp
and
adc
push
ficomp
jmp
fwait
and
aaa
push
(bad)
fidivr
outs
pusha
bound
stc
fiadd
push
popf
cli
cmp
xchg
jle
ins
popf
idiv
push
cmp
stos
sub
fidivr
iret
jne
je
fdivrp
add
jne
(bad)
in
pop
mov
retf
bound
call
inc
inc
pushf
dec
xchg
sub
cmp
out
dec
push
dec
js
retf
movs
retf
in
push
int3
dec
inc
mov
mov
lahf
sub
lahf
fsub
(bad)
adc
in
loop
cs
loopne
xchg
sub
mov
xor
pop
sahf
aam
popf
leave
add
add
mov
test
int3
cmp
out
fimul
jmp
fwait
js
pushf
pop
pop
jmp
pushf
popa
movs
sbb
arpl
stc
or
push
mov
stos
dec
fistp
out
lock
movs
fwait
xchg
mov
dec
bound
or
out
rcr
jns
sbb
mov
cmp
and
inc
fwait
mov
xchg
bound
xchg
lods
cmp
and
push
xlat
sbb
sbb
add
cmp
xchg
cmp
cld
mov
ret
cdq
dec
retf
int3
cdq
mov
add
jb
cdq
into
out
ficomp
daa
and
popf
mov
js
and
cli
int3
mov
mov
sub
outs
out
fisttp
popf
and
stos
fisubr
popa
sahf
clc
cs
pushf
call
stc
lea
scas
xlat
lods
lds
cmp
fwait
dec
hlt
jns
lahf
push
test
jmp
pop
sbb
les
xor
inc
xor
jge
(bad)
mov
cli
in
adc
iret
pop
push
inc
mov
std
(bad)
sub
mov
ins
ret
in
ror
push
or
hlt
mov
xchg
adc
out
adc
dec
cli
enter
faddp
test
out
int3
mov
cdq
jle
call
dec
cmp
fsubr
xchg
(bad)
popf
ins
int
jge
rcr
mov
lods
int3
xor
cmps
call
jmp
iret
in
jb
(bad)
retf
xchg
in
out
xor
cwde
daa
fsubr
dec
stos
in
enter
retf
ror
mov
xor
and
in
dec
jle
pop
fwait
cmp
popf
cwde
shl
inc
mov
ins
cmp
mov
mov
int3
cmp
pop
adc
jl
push
sbb
call
mov
iret
inc
xor
aad
clc
vdivps
call
cdq
les
cmp
loop
cmp
lods
cld
xchg
in
sub
dec
hlt
fsubr
cli
inc
lods
mov
fld1
fisubr
xchg
push
sub
lods
ds
in
and
mov
test
fwait
(bad)
jmp
pop
dec
out
jae
dec
pop
sbb
sub
fidivr
pop
ja
dec
cwde
and
pop
je
xchg
fcomp
je
push
jg
call
dec
fwait
aam
pop
fwait
push
sbb
push
jge
pop
ds
outs
fcomp
sub
stos
jns
cs
cmp
fs
mov
jmp
fwait
cmp
jbe
xchg
rol
fprem
pop
fcom
lahf
mov
(bad)
mov
stc
pop
leave
iret
fsub
aam
(bad)
dec
nop
sub
mov
in
pop
cmp
in
pop
mov
mov
js
sbb
stos
pop
out
push
hlt
stc
push
jbe
mov
mov
shl
pop
sti
fdivr
or
xor
fld
xor
ins
xchg
push
cmp
cmp
ins
sbb
es
pop
inc
js
out
push
(bad)
fisubr
cld
adc
inc
shr
out
lahf
test
inc
mov
sbb
ficom
call
mov
jmp
pop
mov
hlt
les
out
cmp
push
xor
fdivrp
adc
push
pop
out
pop
pop
pusha
imul
jl
popf
aas
cmp
add
mov
mov
push
adc
mov
pushf
mov
and
adc
ins
popf
aam
lods
cmp
cmp
dec
les
retf
cs
retf
outs
sbb
add
pop
test
je
and
loope
xchg
test
pop
test
out
and
stc
outs
sbb
jle
sbb
clc
dec
dec
sub
scas
daa
icebp
test
dec
sbb
inc
xor
retf
inc
inc
fdivr
jle
retf
mov
dec
cld
add
test
js
mov
mov
cwde
mov
bound
inc
cmp
ins
int
mov
js
sbb
fwait
sbb
rcl
sbb
sub
lahf
(bad)
xchg
xchg
sub
pop
cmp
jecxz
sub
add
sbb
dec
(bad)
sub
xchg
mov
stc
test
pop
dec
push
sbb
cld
js
fstp
xchg
sbb
fsubr
or
ja
aad
sbb
ja
pop
in
js
cmp
sbb
mov
xor
scas
jae
pop
push
mov
sbb
push
sbb
setge
pop
ins
(bad)
fmulp
in
ss
lock
sub
in
cmp
repnz
pop
fmul
xor
xlat
pop
pushf
mov
in
jo
mov
cdq
(bad)
fnop
rcl
lods
mov
rcr
sub
pop
jl
pop
rol
call
sub
in
out
faddp
and
data16
ins
jne
mov
in
push
lahf
add
rcr
mov
mov
jge
clc
pop
lea
cwde
inc
cmp
inc
xchg
out
sahf
jb
lock
jb
cmp
xchg
cmps
inc
xchg
mov
jns
and
jp
cdq
and
adc
pop
mov
adc
and
sub
xor
ins
addr16
adc
push
xor
cmp
repz
inc
ins
fiadd
js
add
or
retf
xor
cmp
xor
cmp
pop
xchg
pop
cs
clc
cmp
pushf
ret
dec
fwait
add
call
out
inc
ins
es
mov
shl
int3
fisttp
test
ds
sahf
in
sub
push
cmp
(bad)
out
xchg
(bad)
cmp
(bad)
ins
outs
inc
pop
jmp
inc
mov
aas
in
es
pop
gs
or
mov
cmp
sub
dec
push
in
or
jmp
fadd
popf
(bad)
jle
pop
pop
shr
lods
jg
lock
fdiv
pop
rcr
sbb
pop
dec
les
cmp
in
dec
call
ins
and
sete
scas
in
neg
jbe
add
pop
mov
test
jnp
jge
pop
or
in
push
pop
dec
outs
bound
lods
test
pop
mov
mov
ret
sbb
sub
cmp
cld
ficomp
cli
int3
retf
das
fcomp
mov
mov
test
(bad)
xor
mov
sbb
jne
mov
jp
fcomp
popf
rcr
pop
fild
and
lods
push
add
mov
jmp
fucomip
sub
mov
ds
ja
sbb
dec
cwde
shl
and
or
imul
(bad)
jmp
add
dec
dec
fcom
cmps
pop
push
adc
fst
test
and
push
fisubr
xchg
dec
fwait
add
pop
push
add
sar
lea
pop
or
mov
retf
cdq
rcl
lods
lock
int3
mov
and
and
popf
fidiv
mov
dec
js
neg
mov
push
retf
xlat
pop
fdiv
inc
fwait
ss
out
fisub
dec
mov
rcr
jle
jo
cmp
lock
stc
push
cmp
mul
in
pop
into
mov
cdq
mov
enter
ret
test
and
in
sahf
int3
xchg
test
pop
xor
sahf
int3
push
push
out
sub
lock
(bad)
aaa
and
(bad)
fcmovu
ds
stos
fsubr
dec
sahf
lock
sbb
repnz
sub
and
and
ja
call
mov
gs
mov
xchg
inc
pop
cmp
lods
ds
(bad)
fisubr
sub
inc
popf
cmps
push
loopne
ss
xchg
jo
movs
shl
int3
mov
adc
pop
jl
data16
and
adc
retf
sub
push
ins
xor
stos
test
inc
sbb
fcomp
inc
popf
hlt
and
ds
jmp
les
jp
and
clc
(bad)
adc
loope
ins
not
jg
cwde
pop
(bad)
div
(bad)
sbb
xor
rcl
fidiv
repz
gs
mov
dec
fist
clc
dec
leave
cmp
mov
cwde
repnz
cmp
icebp
idiv
mov
mov
xchg
out
mov
in
sbb
outs
shl
(bad)
js
or
inc
fwait
mov
lods
test
in
out
int3
jge
bound
dec
daa
fldenv
call
stc
inc
xchg
push
and
ficomp
cmp
int3
in
fcomp
cs
pushf
in
inc
sbb
push
or
jns
fld
dec
int3
jmp
cli
dec
rcl
inc
inc
ret
scas
push
inc
sti
and
int3
dec
pop
scas
repnz
into
sub
push
adc
sub
fimul
mov
fidivr
daa
pop
push
cmp
ds
push
(bad)
out
sub
inc
sbb
sbb
fmul
jmp
inc
adc
js
lods
stos
fwait
cmps
fiadd
cs
mov
xchg
gs
je
lock
xlat
sbb
jg
lods
sub
retf
inc
jo
test
sub
stos
or
ins
(bad)
retf
lds
adc
cmp
fadd
scas
in
sti
push
(bad)
pop
cmp
retf
out
movs
jecxz
lock
ds
pop
sub
sbb
cld
lods
lock
dec
mov
lods
xor
fld
fwait
dec
cwde
fcom
mov
(bad)
shl
std
retf
(bad)
jno
push
call
pop
(bad)
dec
(bad)
enter
push
pop
arpl
idiv
or
and
cdq
fs
mov
retf
scas
jle
pop
pop
loop
sti
push
fimul
ret
jmp
mov
hlt
xlat
jmp
adc
popf
call
xchg
jns
xchg
fsubr
inc
fistp
(bad)
in
ficomp
inc
mov
jg
js
cdq
retf
xor
mov
dec
jg
cmp
inc
and
in
inc
out
push
adc
icebp
std
pusha
dec
outs
jns
bound
fwait
adc
xchg
cmps
sub
in
cmp
ret
mov
test
int3
clc
outs
neg
sub
jl
repz
jge
in
push
shl
xlat
fsub
shl
push
call
cmp
enter
cli
int3
sbb
das
fwait
ret
lock
inc
mov
mov
sbb
push
enter
nop
aad
retf
aad
ret
adc
fs
aas
test
pushf
pop
push
add
shl
fcmovnb
push
gs
inc
sbb
test
int3
jo
gs
sbb
ins
ss
sub
in
push
out
push
in
jb
sub
hlt
xchg
sub
les
(bad)
and
(bad)
and
pop
cmp
nop
iret
ds
pusha
(bad)
cld
jg
fdivrp
dec
sti
pop
pop
in
pop
mov
clc
or
adc
xlat
cmc
jns
add
daa
cdq
retf
outs
test
in
dec
rcr
ret
je
and
xor
mov
mov
in
loop
jns
cmps
ss
hlt
adc
lods
fdivr
mov
xchg
add
sbb
icebp
js
les
ret
push
cmc
xor
gs
repnz
cmp
add
scas
dec
jp
fcomp
or
js
out
mov
dec
out
jge
clc
push
pop
rcr
in
sbb
push
aas
jnp
xchg
cli
jge
popf
daa
mov
pop
fwait
add
or
shr
jnp
push
inc
pushf
cmp
ret
or
jo
pop
in
sub
dec
mov
pop
outs
inc
push
std
call
mov
xchg
add
fadd
cmp
pop
fnstenv
dec
scas
push
add
pop
(bad)
mov
mov
pop
pop
lods
pop
ret
jns
data16
sbb
cmp
cmp
dec
cmp
aaa
aad
push
icebp
mov
mov
mov
ins
push
pop
push
fs
mov
fadd
and
addr16
sub
fidivr
out
and
jl
mov
sub
int
ins
push
sbb
lods
js
mov
inc
mov
xchg
and
es
lods
pop
xor
scas
sub
dec
push
(bad)
pop
sbb
mov
aaa
or
inc
sub
xor
xchg
mov
out
push
ret
cmp
xor
aad
retf
pusha
jns
popf
cmp
enter
in
test
mov
sub
int
dec
out
lahf
clc
push
int3
sahf
mov
test
add
jb
rcr
enter
sbb
inc
sbb
pop
cmp
pop
icebp
stc
lahf
fcomp
inc
jbe
sbb
adc
push
xchg
lds
add
pop
aam
(bad)
adc
stos
mov
call
pop
sbb
sub
in
sub
pop
in
cli
(bad)
imul
call
and
add
mov
xor
fldenv
inc
lock
in
lods
imul
xor
push
fbld
push
jns
aad
jnp
mov
mov
push
mov
(bad)
lods
push
cmp
fdivrp
stc
adc
mov
cmps
test
pop
clc
je
mov
push
out
xchg
in
sbb
gs
pop
pop
popf
js
cmp
jno
pop
test
push
mov
test
ffreep
push
inc
sbb
ins
pop
call
pop
fwait
(bad)
movs
or
pop
and
addr16
sbb
pop
sbb
inc
sbb
dec
or
adc
cwde
fisub
js
pop
ss
cwde
and
imul
stc
jo
inc
ret
dec
js
fst
sar
rcr
adc
fstp
dec
inc
dec
dec
outs
mov
mov
cmps
fs
sbb
sbb
xchg
or
clc
cmp
push
jl
test
mov
ins
cli
pop
xchg
test
pop
js
neg
(bad)
retf
inc
inc
push
jae
inc
sbb
(bad)
stc
sub
add
push
sbb
ficomp
sub
(bad)
mov
in
mov
sub
retf
ins
sbb
(bad)
adc
icebp
jbe
test
add
test
out
(bad)
ficomp
pop
pop
mov
mov
fidivr
push
pop
mov
loop
daa
cmps
jmp
and
mov
rcl
aaa
pop
retf
jo
dec
sbb
dec
fdivr
loop
dec
dec
sbb
(bad)
test
sbb
aas
sbb
xchg
jno
enter
add
outs
daa
dec
inc
lds
fisubr
neg
and
sbb
cs
in
lds
mov
lods
(bad)
stc
(bad)
enter
int
push
jmp
mov
sbb
pop
fwait
xor
fidiv
mov
sti
lods
call
xchg
dec
mov
addr16
aaa
shld
nop
mov
repnz
cli
mov
cmp
add
pop
out
push
ja
and
lds
scas
sub
sbb
test
push
xchg
sub
cmp
mov
int
pop
(bad)
sub
dec
retf
mov
cs
cld
push
jns
mov
scas
inc
mov
sbb
lods
retf
scas
loop
call
sbb
sub
jne
jle
pop
dec
jp
push
jbe
retf
retf
sbb
cs
lods
jmp
cwde
jo
sbb
popf
mov
(bad)
adc
push
push
add
dec
xor
jp
js
repz
(bad)
xchg
lods
ret
pop
dec
daa
pushf
out
iret
jl
mov
dec
mov
or
adc
mov
and
sub
stc
or
pop
xor
sub
push
cld
xor
inc
jne
pop
test
or
sbb
std
mov
test
rol
loop
outs
lock
jbe
jecxz
iret
stc
outs
repnz
imul
pop
cmp
lds
mov
stos
fistp
shl
xor
and
add
data16
pop
sti
xor
push
push
(bad)
pop
cmp
test
lods
test
mov
lods
xor
and
pop
jns
out
stc
stos
out
cmps
lods
pop
jl
outs
inc
xor
or
mov
in
pop
cwde
cs
cld
jl
fild
cmc
cmp
das
sbb
stc
cmp
push
push
icebp
shr
pop
xlat
push
ret
xchg
jmp
out
cmp
pop
shr
loopne
cdq
xor
sahf
xor
and
es
imul
aad
sbb
(bad)
test
xchg
dec
stos
jp
fistp
aad
aam
adc
push
aas
cmp
inc
clc
mov
hlt
stc
fisub
inc
aam
jp
sbb
pop
pushf
aaa
mov
dec
stc
xchg
out
cmp
cwde
and
or
imul
cdq
mov
clc
retf
pop
cmp
dec
mov
or
in
fmul
or
test
pushf
and
pop
fucompp
mov
push
in
lods
ret
dec
cmp
dec
popf
pop
js
pop
ja
dec
sbb
dec
mov
out
sbb
in
inc
and
aas
mov
(bad)
loopne
pop
jecxz
shr
inc
in
lea
fucomip
ror
dec
mov
jns
popf
pop
mov
repz
fucomip
pop
icebp
mov
mov
repz
out
scas
push
sub
or
mov
ins
daa
inc
mov
mov
fild
push
sbb
add
sub
jmp
ret
out
push
and
mov
mov
sub
mov
fiadd
iret
lods
sub
jmp
add
(bad)
adc
in
inc
sbb
xlat
test
jns
retf
dec
sar
dec
daa
inc
cmp
mov
loopne
imul
cmp
sahf
enter
cwde
cli
push
int
push
push
pop
ret
xlat
clc
pop
fmul
fisub
test
pop
xchg
jne
jmp
test
pop
das
in
out
mov
or
pop
or
cmps
cmp
jo
mov
fsubr
jne
ins
imul
jg
call
(bad)
mov
retf
pop
in
dec
push
fld
test
sub
ficomp
mov
cmc
sub
stc
mov
jno
xchg
inc
fnstenv
call
daa
(bad)
fiadd
mov
mov
push
inc
stc
dec
rcr
jmp
sbb
dec
fnstcw
rcr
aam
repz
sbb
pop
rcr
or
push
cs
jns
pop
or
cmp
sbb
stc
retf
addr16
ret
dec
mov
fdivrp
iret
fdivr
rcr
dec
jl
(bad)
fisttp
pop
or
jae
xchg
and
out
push
sbb
adc
push
cmp
emms
das
mov
xchg
and
pushf
sub
or
pop
jl
out
cli
int3
test
sub
fdiv
pop
pop
aas
repz
dec
jns
outs
mov
push
ret
fidiv
mov
dec
fiadd
jl
xlat
ins
mov
fisub
adc
or
stc
lahf
popa
mov
(bad)
sbb
push
test
fiadd
fistp
fwait
mov
mov
sbb
js
pop
cmp
mov
add
inc
popf
xor
in
addr16
cmp
inc
scas
pop
int
retf
out
dec
mov
(bad)
jmp
ss
cli
xor
stos
and
mov
ror
(bad)
jp
or
cld
sub
es
jo
pop
ins
cmp
sub
fwait
sbb
pushf
leave
pop
shl
push
(bad)
cmp
daa
daa
aad
push
sbb
jge
outs
and
and
nop
sbb
fisub
cli
int3
cmp
pop
ja
inc
fld
stos
inc
pop
mov
pop
jp
je
aaa
cmps
leave
into
jle
test
and
jno
pavgw
test
or
sub
xchg
fimul
xor
sub
scas
mov
dec
push
sub
and
sub
imul
ds
adc
sbb
into
repnz
ds
jp
mov
push
ds
sbb
ins
push
push
adc
pop
jb
retf
scas
jl
sub
(bad)
cmp
and
sti
push
stc
cmps
xchg
out
pusha
xor
cmp
iret
cmp
xor
pop
(bad)
pop
fsub
fsubr
ss
pop
push
in
pop
xor
dec
outs
jmp
mov
add
fisttp
mov
call
lods
fadd
mov
popa
cdq
call
lods
jmp
in
adc
int
stos
mov
ret
pushf
cmp
sbb
dec
out
gs
adc
in
sub
fwait
jns
add
imul
pop
cs
hlt
mov
test
in
mov
test
pop
dec
out
push
outs
mov
fcomp
inc
dec
cdq
sub
pop
movs
pop
xchg
inc
xchg
cli
jns
out
cs
fcomp
cs
popf
hlt
jns
popf
pop
add
ins
ds
push
xchg
test
fild
adc
pop
pop
(bad)
inc
cli
rcr
mov
popa
push
movs
and
hlt
push
push
add
pop
pushf
push
inc
mov
imul
cld
sub
cs
mov
dec
cmps
shr
fwait
sbb
call
ins
push
push
cmp
sbb
in
sbb
ja
sbb
sub
mov
mov
popf
je
lods
retf
sub
aad
pop
(bad)
dec
addr16
xchg
push
hlt
data16
in
push
les
dec
iret
jmp
fsubr
out
dec
mov
lock
fist
xchg
pop
call
sbb
fld
jle
ret
retf
scas
retf
push
sti
pop
push
and
inc
in
sbb
das
cdq
stos
lds
cmp
mov
jg
fcmove
mov
popa
sbb
inc
add
inc
sbb
fcomp
ror
inc
sbb
pop
sbb
jl
fisub
push
push
pop
dec
lahf
retf
jae
fcom
mov
cmp
sbb
mov
jl
add
and
mov
cmps
popw
sahf
inc
adc
shr
jno
lods
add
cmp
retfw
add
fidiv
(bad)
stc
push
cld
pop
inc
jmp
inc
jns
push
push
int3
out
mov
adc
xor
fsub
pop
sbb
push
das
imul
sub
cmps
add
cs
sbb
sub
into
sbb
jge
neg
(bad)
pusha
popa
ins
enter
inc
arpl
cmp
sub
fwait
loop
mov
adc
stos
xor
pushf
in
in
in
pop
push
push
daa
aaa
or
ret
mov
mov
(bad)
clc
add
ficomp
push
sbb
clc
jo
cmp
js
xor
retf
test
inc
arpl
sbb
pop
pusha
push
fdiv
push
(bad)
pop
sbb
inc
jg
mov
lods
bound
push
inc
pop
inc
fdivr
mov
mov
fnstcw
dec
sub
mov
jne
enter
sbb
ins
out
fcomp
pop
cwde
inc
xor
pop
pusha
dec
in
pop
inc
test
retf
mov
push
add
retf
out
lods
push
(bad)
inc
add
xor
leave
bound
cmc
pop
mov
enter
movs
jl
mov
jl
jge
fstp
push
mov
hlt
sbb
ins
mov
xor
imul
xchg
inc
popf
(bad)
jle
sbb
jae
mov
mov
aad
in
sub
(bad)
retf
(bad)
neg
lock
in
mov
cs
stos
ins
cli
dec
cmp
nop
inc
pop
das
sub
stos
lock
push
adc
enter
sar
pop
cdq
cdq
imul
sbb
sub
(bad)
sbb
pop
adc
pop
cwde
mov
mov
stos
dec
xor
pushf
(bad)
dec
stos
test
mov
jb
arpl
or
or
daa
xor
inc
push
fadd
push
mov
cmp
popf
sub
seto
jae
add
mov
xchg
jl
icebp
sub
mov
mov
push
ret
mov
(bad)
fidivr
xchg
aas
cs
popf
hlt
push
retf
cwde
xchg
xchg
(bad)
retf
jae
(bad)
ds
mov
dec
mov
das
addr16
and
dec
movs
jae
(bad)
add
mov
xor
dec
cmp
xor
sub
fsubr
inc
cdq
daa
pop
cmp
and
push
xor
jno
je
sbb
icebp
xor
imul
inc
cmps
retf
test
icebp
mov
cdq
stos
in
out
int3
xchg
lahf
pop
ret
push
and
call
mov
inc
mov
call
pop
add
cmp
dec
ret
xlat
inc
sbb
push
jb
jns
pop
jg
cmp
mov
stos
pop
adc
cli
push
jp
bound
adc
(bad)
cli
sub
pop
xor
cld
push
cdq
and
loop
sbb
(bad)
or
mov
fldenv
xchg
lea
call
sub
lds
retf
push
(bad)
fmul
(bad)
jmp
stos
call
xor
sub
leave
hlt
add
ret
jp
dec
fld
call
push
jg
ret
push
(bad)
xchg
je
fiadd
cmp
xor
(bad)
sar
aad
and
out
inc
les
loop
cmps
ins
ret
mov
push
mov
ins
or
inc
jge
call
jl
sbb
call
sbb
and
and
gs
inc
shr
push
pop
adc
mov
arpl
out
loope
inc
push
les
push
jae
gs
repz
shl
call
imul
ja
sahf
inc
mov
int
fs
leave
repz
stos
lods
or
mov
sti
jmp
repnz
retf
pop
fld
xor
pop
(bad)
retf
test
fild
test
inc
mov
dec
mov
sbb
mov
pop
inc
mov
(bad)
and
mov
loopne
push
fmul
cs
pushf
loopne
dec
int
ins
es
mov
(bad)
sbb
mov
mov
mov
jp
add
mov
dec
xchg
test
aam
das
out
cs
push
cmps
fs
leave
imul
push
jne
cmp
rol
out
jae
dec
lahf
xchg
push
cs
cdq
test
bound
adc
and
daa
popf
test
add
cmp
inc
jge
and
push
fxch
into
retf
add
xor
pop
sbb
pop
sbb
jmp
arpl
stos
call
sbb
adc
lock
jmp
(bad)
ins
cli
mov
ret
adc
jge
mov
xor
pop
gs
stos
imul
shl
cld
pop
fwait
js
out
pop
les
loopne
or
push
(bad)
jbe
hlt
iret
jae
rol
push
lock
fld
imul
mov
xchg
sub
dec
jge
mov
xchg
xor
sub
and
mov
mov
xor
xor
cmp
shl
fcmovnbe
xchg
push
ins
not
push
or
bound
inc
push
jge
mov
sub
cmp
xlat
(bad)
mov
cmps
push
fwait
mov
pop
loop
jns
outs
sbb
pop
pop
aas
fs
loopne
pop
jle
mov
outs
ret
scas
pop
and
in
ja
push
shl
sbb
into
retf
mov
ss
add
inc
ss
outs
jo
adc
arpl
jle
mov
xchg
vsubpd
in
sub
icebp
push
(bad)
pop
mov
mov
xor
push
test
out
(bad)
xchg
push
pop
dec
push
loop
enter
xchg
clc
dec
push
retf
push
popf
mov
mov
out
mov
fadd
jecxz
test
inc
jno
push
cdq
push
fistp
imul
push
or
hlt
dec
aas
pop
(bad)
jns
mov
sbb
movs
fcomp
scas
inc
add
cmp
stc
push
je
push
sahf
je
jo
repz
mov
mov
(bad)
mov
dec
xor
or
mov
ins
sahf
pusha
cwde
and
pop
es
std
pop
or
mov
jmp
jnp
dec
add
mov
fs
and
jp
sar
mov
sti
mov
jge
scas
sbb
ret
jne
jae
inc
stos
jbe
xor
(bad)
js
repz
dec
inc
inc
leave
or
rol
sbb
and
scas
sbb
and
dec
cmp
(bad)
jmp
push
cmps
cmps
jns
pushf
outs
push
sub
dec
mov
in
mov
bnd
cld
bound
sar
sub
xchg
gs
xor
mov
int3
mov
mov
ret
push
or
jl
pushf
test
fs
push
popf
dec
mov
stos
jle
and
jbe
jl
add
cwde
leave
push
jmp
sbb
fdivr
clc
dec
sub
sub
sahf
enter
lods
clc
test
iret
sbb
imul
dec
mov
sub
cmp
xchg
push
add
sbb
push
pop
and
lds
pop
jl
add
cmp
add
(bad)
mov
cmp
push
inc
jl
xor
push
fwait
and
push
cmp
adc
je
stc
sub
int
mov
(bad)
mov
(bad)
mov
jl
cmp
pop
cmp
test
pop
cwde
jns
addr16
hlt
test
iret
inc
imul
sub
popf
cmp
dec
lahf
shr
rcl
pop
cmp
inc
sub
rcl
xor
(bad)
adc
and
or
int3
ficom
ins
jae
dec
test
rcl
inc
mov
movs
mov
mov
mov
cld
mov
fild
cmp
sbb
xor
outs
mov
sbb
outs
xlat
call
inc
cmp
xor
cmp
popf
pop
mov
jae
stc
xchg
fcom
cwde
ins
fild
pusha
or
not
fbld
and
push
fist
dec
test
xor
pushf
lock
jns
ins
pop
adc
jns
xor
mov
in
pushf
lock
test
repnz
jnp
jle
retf
inc
bound
adc
jl
mov
in
sbb
fcomp
mov
lods
mov
push
out
fidivr
ficomp
lods
fldenv
and
mov
inc
outs
ins
lahf
inc
jg
ins
mov
mov
fidivr
jp
jmp
ins
das
mov
(bad)
test
push
hlt
hlt
in
test
add
mov
mov
lock
sbb
pop
cmp
sbb
adc
fidiv
outs
icebp
bound
fcom
xor
push
(bad)
xor
cmp
in
cmp
cdq
test
add
xchg
ins
sahf
popf
xchg
stos
fcomp
add
aam
mov
jmp
inc
out
(bad)
mov
pop
sbb
mov
in
dec
and
cmp
movs
jle
out
(bad)
fimul
sub
jp
lock
daa
and
sub
aaa
clc
inc
(bad)
jns
dec
outs
out
fdivr
mov
sbb
add
jns
(bad)
call
cld
ja
jbe
sbb
mov
push
adc
(bad)
popa
push
cld
nop
fmul
cdq
frstpm(287
mov
stc
mov
dec
shr
lds
in
ficom
dec
jne
xchg
inc
sub
pop
push
fst
inc
sbb
ins
popa
push
fstp
mov
addr16
pop
enter
mov
retf
stc
push
aam
cmp
dec
mov
mov
neg
mov
pusha
push
data16
pop
mov
cmp
(bad)
cmp
(bad)
cmp
les
mov
inc
das
in
fst
jns
lock
(bad)
mov
xchg
ins
inc
mov
mov
int3
push
cwde
adc
leave
call
cli
cld
cmp
sbb
mov
inc
sahf
cdq
sub
stc
mov
int3
lea
enter
(bad)
lahf
adc
hlt
adc
mov
ror
jns
icebp
adc
rcr
xor
jns
in
repz
in
fdivr
inc
inc
cmp
ja
cmp
sbb
repnz
fcomip
jb
(bad)
jns
mov
into
xchg
int
cld
scas
sub
adc
push
cdq
mov
sbb
dec
pushf
xchg
sub
push
mov
mov
ds
fstp
jmp
xchg
mov
neg
in
sbb
in
dec
sbb
sar
in
jle
int
pop
cmps
inc
fcom
xor
(bad)
sar
dec
cmp
outs
mov
or
sub
sbb
jp
fcom
in
xor
mov
dec
jbe
fcmovne
push
pop
xor
pcmpgtw
ja
mov
xor
push
sahf
adc
ins
into
pop
sti
int
cwde
inc
rcl
mov
mov
xchg
jle
sub
js
mov
mov
ins
dec
jo
jg
outs
pop
rcl
xor
gs
popf
dec
push
jle
repnz
cmp
in
jp
repnz
mov
bnd
cmp
test
sbb
inc
retf
xchg
sub
push
cdq
fist
hlt
fist
pushf
in
adc
pushf
in
push
push
lods
out
push
xor
and
je
arpl
mov
js
daa
and
jmp
call
inc
call
cld
js
shr
loopne
lods
(bad)
jecxz
fdivr
jne
jne
sbb
in
in
lahf
pop
cli
push
daa
and
out
call
stos
sbb
sbb
and
arpl
cld
out
out
push
(bad)
out
enter
shr
enter
mov
cmp
shr
sbb
fldcw
loope
idiv
in
(bad)
cmp
cmp
in
sbb
jge
bound
into
fnstenv
push
fsubr
dec
jmp
mov
ret
mov
in
sub
stos
les
enter
jge
mov
add
in
cwde
inc
push
out
les
in
mov
ret
jb
mov
je
xchg
aam
(bad)
jno
enter
xchg
dec
xchg
cmc
das
scas
ja
cmp
xchg
fidivr
adc
mov
in
in
and
jl
inc
mov
stc
xchg
loop
jp
popf
jne
jo
std
mov
repnz
cmps
dec
nop
fcom
cmp
push
inc
(bad)
lock
cmp
data16
cmps
ficom
push
cmp
scas
fcomp
les
in
inc
ja
or
pushf
fstp
in
pop
mov
je
push
fsubr
dec
pushf
call
fwait
lds
leave
add
icebp
mov
test
test
loop
(bad)
jno
popf
and
mov
push
sbb
xchg
test
xchg
daa
fistp
fstp
scas
ftst
mov
mov
fisub
push
iret
pop
mov
ret
or
jg
fwait
cld
(bad)
neg
jp
lock
test
mov
icebp
stos
or
cli
(bad)
and
inc
mov
add
fiadd
sbb
push
pop
imul
and
into
fs
inc
jo
stos
jns
iret
pop
xor
retf
inc
or
adc
push
cmc
cs
loopne
sub
push
call
pusha
stos
sbb
sbb
cli
into
inc
jbe
xabort
push
in
mov
test
inc
in
mov
loop
and
cmp
mov
push
jne
test
sbb
pop
xor
xor
dec
stc
and
iret
jmp
imul
jg
stos
push
push
outs
sub
fistp
pop
sub
sahf
mov
or
fadd
push
(bad)
pop
sub
jmp
sub
(bad)
js
shl
fwait
sub
(bad)
in
add
push
nop
xor
int
mov
push
loope
xchg
sub
cmps
dec
cmps
push
pop
lods
sbb
fucomip
inc
in
xchg
test
les
ds
xchg
fidivr
sbb
stc
(bad)
stc
pop
call
fsub
call
sub
fdivr
ins
mov
fdiv
sub
ds
ins
mov
fild
and
xchg
ret
fdivr
and
cdq
mov
pop
fcomp
idiv
sbb
lods
and
xlat
push
pushf
mov
sub
inc
xor
enter
jle
sti
push
add
lods
pop
mov
lds
int
loop
fist
les
xor
repz
stos
and
int
into
clc
jmp
test
lods
test
mov
shl
sub
mov
popa
pop
inc
and
jp
mov
jmp
cmp
fisubr
adc
and
xor
call
fdivr
pop
cmp
xchg
lds
cld
jl
test
stos
(bad)
(bad)
stc
or
test
lods
mov
pop
cmp
cmc
pop
outs
cmps
idiv
std
fmul
jp
dec
and
inc
rcr
xchg
lock
cmp
mov
xchg
add
(bad)
fucomi
jp
lock
retf
push
popa
jb
push
ins
(bad)
sar
inc
adc
and
cmp
mov
mov
iret
jmp
ins
mov
pop
dec
imul
fcmovbe
addr16
inc
mov
pop
dec
jg
adc
jge
mov
pop
int
pop
shr
mov
jns
pushf
fidivr
aad
pop
jl
jmp
rol
mov
(bad)
ret
stos
test
test
inc
test
in
inc
call
test
sub
fcom
int
sbb
add
pop
adc
je
cmp
pushf
lock
ret
adc
jl
adc
push
lock
ret
adc
jo
adc
ins
sbb
pop
pushf
lock
pop
sbb
daa
test
push
pushf
(bad)
and
lock
in
sbb
dec
ja
pop
in
dec
sbb
inc
dec
ret
add
push
clc
jl
jbe
rcr
adc
retf
xchg
retf
(bad)
cmp
mov
push
pop
ins
sbb
sub
ins
das
ds
hlt
bound
ins
aaa
lods
fisub
mov
cmp
fcomp
das
pop
mov
ins
das
pop
mov
fwait
cmp
clc
inc
pop
xor
push
clc
sbb
cld
dec
mov
fldz
push
ds
inc
stos
pop
mov
in
push
pop
cmp
es
dec
sbb
sbb
pop
out
stos
mov
call
cmp
mov
fcomp
cmp
sbb
shr
adc
movs
aam
pop
icebp
stc
push
not
out
mov
shr
das
bound
gs
sbb
fadd
mov
sbb
cs
call
mov
fdiv
ret
adc
push
ror
push
mov
out
fdivr
test
inc
mov
in
das
iret
adc
fwait
retf
in
push
(bad)
popa
xor
pop
mov
(bad)
add
repz
mov
ror
mov
pop
pop
data16
dec
inc
fcomp
cwde
retf
sbb
call
in
dec
sbb
(bad)
leave
call
pop
pop
fisubr
das
pop
ror
cmp
mov
and
idiv
fisub
jmp
bound
cmp
fst
test
fistp
and
add
(bad)
mov
jns
call
cs
shl
push
dec
xor
xchg
sub
add
pop
jns
jmp
movs
cwde
sbb
leave
sub
dec
pop
and
aam
pop
imul
cdq
fst
jo
lahf
cs
loopne
jp
loopne
add
push
dec
loope
push
mov
jg
loopne
fs
mov
cmp
mov
outs
int
(bad)
(bad)
adc
push
(bad)
shr
es
loopne
adc
jge
sub
sub
sub
in
fcom
xchg
in
out
aas
ins
xchg
mov
inc
add
pop
ficom
scas
retf
imul
or
and
sub
jmp
mov
push
(bad)
in
daa
pop
pop
shl
cmps
push
add
shl
pop
scas
test
test
hlt
test
leave
mov
popa
mov
jne
xchg
push
test
mov
test
or
out
enter
and
call
outs
jg
mov
xor
jno
cs
lock
rcr
gs
ficomp
add
xor
mov
ret
repnz
mov
out
lahf
ins
neg
mov
sub
hlt
fadd
push
jg
(bad)
lods
ins
clc
faddp
ins
aaa
pop
ret
push
xor
scas
hlt
aaa
out
cld
mov
fs
pushf
pop
aam
pop
cmp
sub
xor
retf
sbb
mov
sar
(bad)
jg
outs
aas
mov
inc
movs
fst
scas
pop
pop
inc
sub
push
cs
ja
pop
das
stos
fisttp
fidivr
leave
cld
sub
fwait
in
sar
out
fisubr
arpl
call
lods
ins
sbb
movs
xor
pusha
adc
leave
jmp
mov
call
mov
pop
neg
neg
mov
pop
test
jl
sti
jl
jno
cld
pop
mov
je
jnp
cwde
cmp
sbb
int3
in
fisub
fcomp
add
inc
add
push
mov
adc
pop
cmp
fadd
js
loopne
lods
xor
leave
movs
jle
mov
sub
xchg
daa
dec
mov
sub
xchg
nop
push
(bad)
(bad)
mov
inc
jmp
push
fwait
jp
ficomp
out
js
test
cmp
std
inc
ret
addr16
adc
ds
ins
std
pop
jp
fcomp
stos
fdiv
inc
loope
aam
pop
inc
cmp
pop
mov
ret
in
rcr
adc
in
or
ds
pop
jo
dec
lods
fdiv
jae
popf
into
mov
cmp
xor
int
mov
icebp
sub
test
outs
sub
fld
pop
jns
pop
mov
inc
stc
pop
les
pop
ds
sahf
pop
xor
idiv
int3
mov
call
pop
ja
faddp
stos
cmp
rcr
mov
sbb
sub
xor
(bad)
push
mov
enter
loopne
fistp
loope
sbb
jge
test
imul
test
std
into
cmp
dec
test
std
dec
jns
inc
pop
pop
ins
and
cmp
jmp
adc
sub
push
dec
adc
int3
sbb
inc
test
pop
cmp
leave
(bad)
jp
cmps
lods
outs
idiv
scas
push
mov
lods
pop
(bad)
sbb
out
es
in
retf
out
jb
mov
ss
retf
(bad)
cmp
mov
rol
xor
aam
add
fdivr
mov
test
cmp
cmp
(bad)
jns
push
push
leave
fdiv
mov
aam
add
fisub
pop
pop
push
retf
retf
in
retf
mov
pop
cs
xor
fist
push
ret
push
call
fnstsw
or
cmp
addr16
pop
cmp
ins
daa
and
in
cmp
xor
pop
sbb
aas
jl
nop
(bad)
pushf
fistp
push
lahf
mov
jae
dec
in
hlt
clc
lods
loop
jge
fistp
rcr
sar
push
hlt
mov
ins
or
dec
adc
in
cmovae
sub
retf
push
push
sub
xor
leave
jmp
dec
sbb
jmp
cdq
xor
cdq
mov
sbb
cmp
adc
push
dec
pop
aaa
xchg
xor
les
ins
xor
test
sti
fidiv
sub
(bad)
mov
mov
mov
js
dec
repnz
ins
jecxz
(bad)
clc
retf
leave
push
inc
pop
sbb
and
test
pop
lds
sar
into
jb
mov
xchg
repz
sub
stos
out
out
stos
shr
xchg
outs
fmul
fsub
sub
jb
rol
cmps
xor
inc
and
shl
mov
sar
iret
movs
or
out
sub
mov
out
mov
jno
test
hlt
shr
jns
retf
gs
scas
out
shr
cdq
push
pop
ret
pusha
ret
retf
inc
popf
clc
sbb
sub
lock
xchg
iret
mov
pop
dec
or
jl
mov
adc
mov
(bad)
sahf
xchg
out
stos
inc
lods
adc
ret
and
test
gs
mov
pushf
xor
les
or
pushf
ja
pushf
sbb
push
pushf
scas
adc
in
scas
repnz
fwait
add
jae
add
fwait
stc
sbb
sub
movs
xor
inc
pop
fistp
pop
sub
sub
lahf
jns
in
push
rcl
lock
cmps
jge
xor
mov
mov
xor
push
pop
or
dec
xchg
call
stc
and
jge
in
push
inc
popf
(bad)
(bad)
jp
mov
mov
mov
rcl
retf
adc
stc
fidivr
jge
sbb
or
mov
sub
ins
rol
rcr
jp
pop
sub
mov
push
mov
add
sub
cmp
sahf
adc
or
imul
sahf
pop
mov
push
leave
cld
push
mov
hlt
mov
fsubr
ds
fsqrt
adc
shr
stos
jle
test
mov
pop
xlat
lea
cmp
hlt
dec
sbb
jge
iret
xor
inc
jp
fldcw
lahf
or
cmp
retf
test
inc
clc
jle
mov
mov
fld1
shl
leave
out
sbb
ins
sbb
enter
xchg
sub
jge
jl
mov
xor
cwde
mov
popf
mov
aad
and
mov
ins
and
mov
inc
ds
sar
stc
xchg
rcr
inc
and
or
fmul
(bad)
mov
pop
int
outs
mov
and
js
sahf
jns
mov
and
retf
lea
cmp
stos
push
lahf
cmp
push
ret
adc
push
mov
out
push
movs
sbb
push
mov
in
bound
lea
mov
cmp
add
aaa
fwait
and
hlt
dec
inc
sub
aad
push
jno
pop
(bad)
lods
test
int3
inc
in
cmp
(bad)
imul
sub
push
fst
fsub
shl
sbb
cmp
sub
dec
mov
ret
ins
mov
call
adc
pop
jmp
jmp
sbb
add
(bad)
mov
fcomp
adc
ins
in
or
xchg
rol
jno
fwait
ins
and
loop
popa
xchg
shl
ins
cdq
inc
lods
lods
push
lahf
adc
push
(bad)
lods
ret
lds
mov
fisub
loope
(bad)
lods
hlt
loopne
stos
iret
out
mov
adc
inc
lahf
adc
push
ret
push
pop
or
fsubp
adc
add
push
prefetch
or
dec
clc
inc
imul
mov
int
repnz
jge
mov
jle
add
push
(bad)
cs
loopne
int
fistp
ret
inc
ds
and
mov
sbb
xchg
adc
into
inc
fisub
(bad)
ret
clc
cli
sbb
not
jnp
(bad)
in
cwde
ret
pop
dec
cdq
mov
add
push
pop
int
pop
or
jecxz
mov
jge
dec
clc
js
dec
popf
jg
dec
or
xor
(bad)
cdq
fnstcw
cli
jg
rcl
retf
jo
lods
dec
fcos
inc
leave
sbb
push
inc
mov
sbb
repnz
pushf
call
sbb
lea
cmp
pop
stos
mov
jg
(bad)
retf
hlt
jb
push
nop
test
dec
jl
loop
in
js
cs
mov
cs
shl
aam
(bad)
adc
or
fs
xlat
lock
inc
pusha
cdq
and
pop
nop
repnz
pushf
mov
jl
(bad)
mov
call
sub
shr
cmp
push
mov
adc
cmp
mov
stc
call
jne
iret
ds
mov
pop
lods
push
test
dec
inc
xor
dec
push
jle
push
fwait
xchg
(bad)
es
int3
and
test
dec
push
(bad)
cmp
sub
jne
leave
mov
jmp
mov
rcr
int3
ret
movs
pop
fwait
push
sub
in
out
inc
(bad)
mov
push
jns
popf
sub
retf
jge
fs
push
in
push
js
and
fs
mov
shr
loope
jge
mov
(bad)
cmp
pop
into
or
cli
inc
cmp
push
inc
push
loope
lahf
shr
jp
and
loop
ins
cmc
or
sbb
dec
push
xor
js
pushf
dec
push
mov
push
lds
push
or
sbb
sahf
fld
dec
inc
outs
cld
lods
jp
jmp
imul
dec
in
xchg
cmp
frstor
add
fistp
ins
mov
cwde
mov
mov
pop
and
lahf
js
xchg
mov
call
das
iret
lods
jl
fmulp
in
daa
pop
call
xlat
or
clc
jo
sbb
jg
fisubr
das
pop
or
faddp
call
das
fild
in
in
jno
and
sub
fcom
jb
mov
(bad)
push
lods
mov
sub
mov
ins
scas
nop
jb
movs
stc
lock
call
xor
(bad)
std
adc
retf
shl
loope
xchg
int3
je
pop
sub
dec
xor
cld
adc
call
pushf
or
cdq
xchg
test
mov
pop
sahf
add
mov
aam
lods
call
mov
sub
cmc
into
xor
pushf
mov
sti
fucomp
push
mov
(bad)
lods
inc
or
out
(bad)
mov
xlat
fwait
dec
mov
arpl
test
iret
adc
jbe
fs
dec
and
cwde
jle
jnp
rcr
bnd
push
pop
pop
push
sbb
js
ror
xor
cdq
scas
push
jmp
cmp
dec
cs
jae
test
xchg
(bad)
scas
aad
out
ja
cmp
(bad)
mov
xchg
xchg
sbb
scas
sbb
cli
sbb
inc
cwde
sbb
test
adc
sbb
ror
pop
pushf
dec
sar
inc
(bad)
dec
mov
lock
pop
ret
cld
xchg
mov
stos
in
xchg
repnz
popf
mov
sub
jns
outs
movs
jbe
int3
in
add
sbb
sahf
and
or
fs
sub
fidiv
mov
sbb
retf
sbb
iret
aam
outs
inc
inc
les
sub
and
lock
test
mov
jl
movs
adc
pop
sub
cmp
or
icebp
imul
mov
rcr
aam
cld
jl
pop
imul
dec
dec
jp
(bad)
fmul
add
ror
mov
or
sbb
js
call
out
mov
adc
icebp
js
stc
sbb
mov
sub
fs
sbb
inc
dec
push
jnp
shl
pushf
lea
jl
sar
cld
dec
mov
xor
push
(bad)
retf
and
jl
or
aad
int3
jns
add
pop
xor
mov
push
(bad)
sub
adc
(bad)
sbb
rcl
cmp
int
and
aam
sub
add
(bad)
repnz
ins
jo
jle
popa
ror
push
(bad)
clc
adc
les
lods
loope
int3
push
mov
cmps
xchg
xchg
mov
repz
pop
sbb
cwde
lahf
and
(bad)
mov
jmp
mov
sbb
std
mov
ficom
pusha
sub
aam
repz
pop
sub
inc
fild
(bad)
pop
jns
shr
dec
cdq
std
jge
mov
mov
jle
stc
(bad)
pop
jmp
lahf
js
popa
jge
dec
sbb
jle
sub
cld
cmp
fadd
sbb
stc
mov
pop
lea
or
or
sub
fstp
leave
mov
jbe
in
fcomp
rcl
(bad)
inc
mov
scas
cli
je
js
inc
sahf
xchg
hlt
mov
in
ret
(bad)
mov
inc
mov
xlat
mov
or
out
dec
cmp
ss
cmps
mov
sub
int3
cdq
sub
cmp
jns
mov
dec
sar
sti
stos
test
je
(bad)
push
lahf
jle
inc
(bad)
push
mov
and
mov
ret
cmc
repnz
pop
cwde
sbb
xor
leave
je
fiadd
ins
sahf
sbb
retf
cwde
int3
jns
pop
sub
test
cld
not
aad
push
fcmovnb
jb
nop
sub
push
inc
pushf
out
ins
pushf
jmp
jbe
adc
xchg
test
and
xor
push
xlat
pop
sbb
clc
data16
push
xchg
das
loop
(bad)
out
cmp
sub
ficom
and
sbb
test
push
jns
call
sahf
aam
stos
pop
je
(bad)
out
or
es
fdivr
cmps
fcmovu
adc
fidiv
int
cmp
mov
out
pop
push
ins
mov
sub
nop
sub
pop
ret
lods
and
popf
fnstsw
mov
data16
mov
add
out
pop
call
pop
and
icebp
pop
sbb
out
sahf
mov
into
jae
vmovq
pusha
idiv
or
(bad)
sti
jbe
mov
fist
lds
call
pushf
cmc
xchg
test
push
pop
inc
ins
call
pop
fwait
clc
enter
(bad)
pop
fwait
mov
imul
xchg
sub
push
pop
daa
ja
lahf
inc
xlat
rcr
bound
push
inc
mov
aaa
cmps
cmp
sub
sub
retf
jns
ficom
out
and
cld
pushf
mov
and
das
mov
hlt
ss
pop
mov
out
pop
call
sub
in
push
mov
int
daa
jl
push
shl
int
sbb
mov
sub
xchg
and
retf
idiv
dec
and
stos
pop
mov
inc
iret
cmp
(bad)
sbb
cwde
mov
js
call
sbb
fs
pushf
adc
push
sub
sub
int
push
(bad)
mov
cmps
xchg
shl
pop
push
addr16
xor
mov
sbb
call
sar
movs
xchg
arpl
cwde
sbb
sub
mov
popf
mov
fldenv
sbb
arpl
inc
stos
ins
scas
cmp
imul
test
sbb
and
fucomi
add
mov
imul
es
popa
push
mov
mov
outs
rcr
xchg
outs
fld
push
es
fsubr
scas
pop
sub
jg
call
clc
and
in
inc
pop
sbb
pop
xlat
je
mov
mov
cmp
ins
mov
fistp
sbb
shr
push
(bad)
repz
mov
ins
popf
cwde
jmp
inc
dec
outs
and
cmp
mov
xor
cs
in
ins
rcl
(bad)
retf
lods
retf
sub
stos
(bad)
sbb
push
clc
jns
fcomp
aas
popf
sub
sbb
push
fwait
cmp
das
fisub
or
inc
fisttp
fcomp
pop
mov
fild
movs
mov
push
dec
cmp
and
fcomp
pop
pop
sahf
hlt
out
int3
push
mov
cmp
sbb
rcl
movs
jns
inc
cmp
push
inc
cmp
add
enter
adc
fisub
in
fistp
rcl
in
xor
jmp
aas
push
int3
mov
stos
fcmovbe
into
push
push
aam
jo
xchg
mov
cmp
sbb
push
mov
fcomp
mov
push
and
push
cmp
push
fwait
dec
in
xor
shl
or
or
and
cdq
mov
(bad)
ins
jg
push
xchg
dec
pop
mov
mov
dec
(bad)
sar
xor
or
jmp
cmp
dec
iret
shr
cmp
shl
jg
fiadd
push
xchg
lods
nop
fbstp
in
out
push
jmp
fwait
test
dec
shr
and
mov
in
sub
mov
test
pop
enter
dec
jmp
fstp
push
push
fcmovnu
outs
fisttp
and
dec
popf
pushf
movs
xchg
adc
adc
add
in
and
fisttp
repnz
pop
outs
fisttp
fcomp
inc
and
in
pop
inc
(bad)
lds
push
(bad)
in
es
xchg
int3
fsub
mov
sub
retf
sub
neg
ret
leave
pop
cs
pushf
hlt
cs
pushf
clc
cmp
push
mov
fcomp
push
mov
mov
mov
retf
sahf
or
push
push
inc
in
inc
inc
fcomp
mov
mov
add
fmul
js
and
je
test
js
fwait
jns
mov
and
ret
retf
fcmovne
inc
mov
ins
jge
ret
push
cmps
mov
mov
in
fstp
ins
cmp
mov
fnstcw
cs
clc
cs
pushf
clc
mov
xchg
sbb
dec
jge
adc
shl
ins
and
retf
ds
and
je
push
mov
movs
adc
sub
sbb
pop
mov
adc
jbe
popa
fcomp
pop
popf
sub
test
je
sub
lods
add
into
stos
lods
sub
mov
push
sar
jg
call
call
mov
shl
cs
sar
xor
sub
add
retf
pop
ret
retf
and
rcl
(bad)
cmp
cmc
sbb
push
pop
js
retf
iret
movs
sub
adc
js
loope
mov
call
repnz
pop
sbb
inc
cli
icebp
push
inc
sub
jae
inc
pop
jl
enter
jl
sbb
inc
cmp
call
xlat
xchg
repnz
leave
into
clc
xchg
add
or
fsubr
mov
pusha
mov
inc
aam
xor
fwait
shr
(bad)
push
clc
dec
jmp
sub
shl
push
cmp
(bad)
jp
popa
rol
mov
jb
sbb
xor
leave
ins
xor
push
(bad)
js
sahf
out
shr
arpl
sbb
stc
or
cwde
xchg
cmp
retf
jl
ret
push
shr
or
in
xchg
pop
push
and
gs
clc
cmc
sbb
ins
sbb
cld
pop
clc
mov
bound
pop
sub
mov
pop
cld
scas
in
(bad)
retf
not
lods
cld
fcmovb
cmp
into
cmp
into
xchg
(bad)
js
shl
xchg
in
loop
(bad)
std
aad
lock
cs
mov
rol
mov
push
sbb
sbb
mov
lea
js
push
movs
cld
ficom
nop
aam
iret
jp
sub
ret
rol
sub
sub
sbb
pop
inc
je
das
dec
enter
cli
aam
out
icebp
add
dec
bnd
push
fwait
in
xchg
jbe
bswap
mov
jae
cld
add
rcl
mov
sub
cld
mov
or
add
cli
rcr
js
xchg
mov
aam
xor
ror
cmps
pusha
jmp
mov
enter
dec
jg
ret
movs
jne
es
into
(bad)
hlt
cld
dec
mov
dec
inc
dec
inc
pop
mov
retf
iret
xor
test
enter
mov
jne
(bad)
mov
js
sbb
(bad)
shl
rcl
and
fldenv
sub
adc
dec
les
test
(bad)
(bad)
sbb
(bad)
bound
(bad)
pusha
cdq
(bad)
sbb
jb
jecxz
cmp
dec
je
sub
sar
inc
cld
pusha
js
daa
pusha
and
mov
adc
rcl
cld
loopne
loop
adc
test
icebp
aad
xor
icebp
sar
inc
cmp
arpl
aam
jecxz
js
lds
lock
mov
push
pusha
push
add
int
fwait
movs
in
int3
sbb
dec
mov
int3
ds
cmps
dec
push
jecxz
int3
inc
out
and
inc
iret
and
test
leave
xor
enter
xchg
enter
ins
(bad)
mov
cs
popf
cwde
scas
cmp
xchg
sub
dec
call
(bad)
scas
repnz
xchg
jae
sbb
pop
xchg
mov
mov
pop
sub
jmp
cli
dec
adc
sbb
call
fisttp
push
test
push
and
mov
and
fstp
stc
std
inc
adc
mov
int
jmp
clc
add
dec
shl
lds
xchg
popf
dec
and
bound
call
dec
sbb
dec
(bad)
aas
cmp
call
out
int3
cmps
cld
repnz
jns
mov
std
popf
fwait
pop
jg
(bad)
xor
sbb
nop
call
das
jb
scas
cld
jmp
push
rol
ret
jl
das
mov
in
int3
mov
repnz
dec
dec
mov
dec
adc
mov
sbb
inc
sbb
js
data16
das
dec
test
jge
inc
mov
mov
shl
lods
jo
sbb
nop
mov
arpl
sub
cdq
in
in
xchg
push
xchg
call
xor
sub
cdq
into
ins
stos
cdq
enter
retf
mov
bound
call
inc
mov
call
out
ffreep
dec
shr
and
cmp
ror
leave
in
mov
sbb
mov
lods
mov
fidivr
das
push
movs
push
cli
inc
fst
dec
not
pop
inc
aaa
pop
in
enter
enter
mov
mov
dec
popa
pop
mov
mov
inc
aas
lock
xor
das
mov
les
inc
stc
dec
cmps
mov
mov
repnz
push
jns
call
xor
jbe
or
mov
repz
repnz
sbb
(bad)
xor
std
int
sub
and
mov
sub
leave
jmp
push
sar
add
cli
jmp
push
cmc
push
addr16
shr
ror
cmc
dec
gs
cld
jns
fisttp
js
retf
stos
je
sub
hlt
add
xor
cli
int3
(bad)
sbb
adc
mov
and
cld
shl
cmc
push
in
call
repnz
ss
jo
push
(bad)
pop
int
mov
daa
pushf
or
xchg
test
or
jne
call
ins
leave
cmp
sbb
jno
mov
scas
rcr
movs
mov
adc
loopne
or
push
add
rcl
inc
hlt
push
sbb
xor
jge
inc
push
sub
push
adc
js
or
sub
push
cli
dec
fwait
pop
cli
push
xchg
fisubr
repz
mov
in
ror
and
leave
sub
int3
or
pop
call
ror
ins
jne
lea
push
xchg
stc
push
cli
popf
pop
sub
sub
call
into
sbb
mov
dec
or
test
xchg
out
(bad)
movs
xlat
in
in
sub
(bad)
sti
sbb
imul
stos
dec
mov
daa
add
jg
dec
stos
or
out
sub
jge
stc
test
jge
js
ror
jmp
inc
mov
cmc
xchg
js
lahf
xchg
and
mov
ss
gs
jns
rol
jecxz
jb
scas
stos
xchg
ret
mov
ret
rol
arpl
ret
mov
mov
inc
fdivp
daa
and
cmp
mov
clc
enter
jns
adc
ret
dec
sbb
mov
ret
mov
cmp
add
mov
pushf
xchg
pop
pop
sbb
lds
xchg
adc
pop
and
mov
sub
fwait
sbb
enter
nop
mov
or
inc
mov
sar
sbb
stos
dec
iret
xor
out
movs
dec
sbb
xchg
xchg
dec
aam
imul
or
sub
mov
xor
jb
adc
xchg
add
xchg
ja
scas
sbb
xor
hlt
cld
hlt
das
arpl
mov
frndint
(bad)
aam
rol
pushf
in
or
xlat
test
push
call
push
jmp
arpl
scas
mov
jo
cli
inc
xor
je
or
push
mov
sub
cmp
sbb
ret
dec
cmps
adc
mov
fidiv
test
dec
fwait
inc
aam
movs
ret
rol
sbb
sub
dec
xchg
xchg
out
mov
stos
(bad)
retf
je
push
xor
cmps
ins
sub
(bad)
cmps
or
aaa
mov
stc
cli
push
std
mov
sub
popf
pushf
pop
lods
into
xchg
pop
fisttp
call
dec
dec
js
popf
jl
inc
out
push
stos
ficom
aam
sub
sub
mov
aam
inc
sbb
or
add
jns
call
pop
mov
aaa
rol
mov
(bad)
cmp
dec
push
xor
movs
jp
call
lahf
cmps
adc
fisttp
test
ss
or
pop
into
and
stos
dec
push
mov
mov
stc
adc
xor
leave
mov
lods
test
push
xchg
mov
push
xlat
xor
xor
out
imul
faddp
sub
and
mov
int3
ficom
scas
stc
pop
xor
int
cmp
retf
jg
sbb
(bad)
mov
call
gs
cwde
sti
dec
ficomp
jns
adc
mov
sub
shr
shl
cld
fwait
pop
jno
push
mov
test
dec
push
ficomp
ret
adc
jp
jl
sar
repnz
dec
ret
in
push
xchg
inc
jae
(bad)
pop
jb
fldenv
adc
pop
mov
lock
outs
sub
or
dec
es
pop
dec
push
cmps
cmc
adc
xor
shl
xchg
sbb
sub
loop
mov
mov
imul
imul
mov
add
aas
(bad)
mov
fnstsw
adc
cmp
js
psubq
push
fwait
mov
xchg
lods
push
ret
les
pop
lahf
lea
inc
sub
inc
xchg
in
data16
inc
push
dec
push
repz
inc
std
fwait
data16
or
int
jne
lea
ret
test
and
stc
(bad)
aad
pop
loope
inc
sbb
bound
add
bound
sar
scas
ror
(bad)
adc
and
or
shl
mov
pop
shr
jae
rol
pop
mov
inc
push
std
inc
ins
pushf
popf
pop
enter
das
sub
sub
leave
daa
out
push
mov
nop
loope
jmp
in
sbb
xor
adc
xchg
sub
xor
inc
popf
stc
mov
ret
test
fidiv
popf
pop
xor
and
mov
cli
fdivr
jmp
daa
push
mov
call
test
ss
push
fsubr
test
(bad)
cmp
push
sbb
outs
push
fwait
and
inc
rcr
push
bound
rcr
jmp
inc
add
cmp
js
cli
pop
pop
cmc
dec
cwde
inc
jge
neg
jb
test
ds
popf
push
cld
popf
pop
pop
int
je
fabs
push
(bad)
out
pop
fnstenv
in
xor
je
mov
je
(bad)
sbb
popf
idiv
mov
sub
pop
fwait
js
inc
ss
pop
call
pop
(bad)
mov
sti
in
aam
mov
push
cmps
fimul
(bad)
out
push
dec
cmp
ins
adc
jnp
cmp
fisub
xchg
xor
aam
xor
leave
lock
test
cld
and
push
test
pop
mov
pop
pushf
cmp
push
scas
sbb
cmps
or
add
or
add
pushf
stc
je
sti
retf
cld
and
out
rcr
xor
cdq
mov
mov
shl
cdq
sti
and
xor
dec
jle
gs
sbb
out
jmp
cmp
xchg
push
cmp
mov
es
mov
push
cmp
pop
pushf
fsubr
out
fsubr
fild
cmp
mov
pop
in
loop
push
cmp
fcomp
test
call
test
call
js
sar
jecxz
call
xchg
fadd
test
cld
pop
dec
in
sahf
adc
fwait
cmp
lock
test
sbb
push
jle
pop
cmp
popf
xchg
aad
xor
push
push
daa
fistp
es
cmp
pop
cwde
stc
xchg
sti
pop
shr
jmp
and
clc
rcr
adc
pushf
jmp
popf
push
stc
pop
pushf
dec
mov
pop
sbb
hlt
pop
adc
pop
sbb
xchg
mov
dec
in
pop
add
imul
sbb
pcmpeqw
push
into
mov
fwait
stc
or
ror
cmp
test
les
pop
ins
push
add
out
dec
shr
mov
push
mov
pop
mov
push
test
mov
fcmovne
jne
(bad)
pop
aam
adc
mov
vcvtss2sd
push
lds
sbb
js
leave
fidivr
cwde
mov
les
jo
add
cmp
stos
adc
out
pop
sar
jnp
mov
call
cmp
xchg
pop
call
fwait
mov
mov
in
jno
adc
out
je
mov
adc
fwait
dec
xchg
sub
push
js
fwait
dec
pop
pop
xlat
add
movs
(bad)
xor
mov
sub
cmp
adc
xchg
pusha
jnp
iret
or
rol
js
test
(bad)
mov
sbb
fldenv
ins
sbb
sbb
(bad)
shr
mov
sahf
mov
or
ds
cmovge
test
pop
fsubr
cmp
inc
in
sub
jns
jmp
inc
push
fdivp
push
sbb
cmps
pop
retf
hlt
pop
sbb
fdiv
fwait
add
repz
push
cmp
push
push
mov
pop
cwde
fnstcw
ret
inc
stc
mov
das
ins
std
push
cmp
inc
sub
rcr
ficomp
dec
push
sbb
inc
cs
dec
mov
pop
pop
out
xor
and
rol
sub
into
cmp
call
inc
jo
cs
ror
xor
rol
popa
dec
ds
dec
mov
push
pop
cs
hlt
cmp
pop
repz
cwde
out
fmul
push
mov
mov
dec
push
bound
sub
pop
inc
mov
(bad)
sti
fidivr
push
push
pop
xchg
dec
mov
fistp
pop
shl
jbe
lds
inc
test
call
push
fstp
mul
adc
mov
scas
jae
cmc
cli
or
sbb
jmp
inc
gs
fldcw
enter
(bad)
pushf
cmp
inc
in
ret
jmp
out
imul
enter
hlt
loop
pop
cdq
out
jne
or
fs
mov
mov
push
and
(bad)
icebp
stos
test
dec
ficom
ins
xor
pop
dec
mov
jmp
fisub
xchg
stc
and
cdq
mov
pop
stc
ror
adc
inc
xor
cmps
scas
jp
mov
jge
not
dec
sbb
jns
jae
iret
ds
je
jg
fstp
mov
jbe
arpl
push
fwait
mov
xchg
out
shl
cmp
jp
out
push
(bad)
dec
xor
stc
(bad)
in
pop
hlt
jge
jmp
push
push
es
push
sar
retf
aas
mov
cld
sahf
in
rol
jge
ins
mov
sub
mov
xor
sub
xor
shr
dec
rol
jg
loop
stos
push
dec
fild
ret
fs
cmc
sti
sbb
icebp
ins
shl
(bad)
test
addr16
xor
jmp
mov
inc
cmp
xchg
test
scas
jl
xchg
cli
mov
mov
cmp
cmp
jmp
sbb
push
es
cmp
pop
jmp
sar
(bad)
in
add
xadd
sbb
call
sub
dec
outs
sbb
pop
lods
push
jno
pop
(bad)
js
cmp
inc
pushf
(bad)
jg
adc
ficom
out
aam
jns
inc
or
bound
cmps
or
mov
xor
sub
stc
mov
loopne
ror
aad
test
jb
inc
mov
movs
call
shl
mov
mov
adc
push
cld
push
rcr
xor
dec
fdivr
ss
pop
mov
jge
ffreep
jo
jge
in
jb
jb
into
cmps
mov
inc
les
fnstcw
test
clc
pop
fcomp
fnstcw
mov
(bad)
scas
sub
in
sbb
pop
push
jmp
dec
cmp
cmp
cmp
jmp
dec
jmp
inc
jb
xor
rol
or
call
pushf
mov
movs
dec
push
scas
cli
add
scas
repnz
jl
push
pop
lahf
mov
mov
shl
mov
xor
in
sbb
adc
fcomip
sbb
dec
std
fwait
add
push
and
ds
in
(bad)
cmc
dec
sbb
popf
sbb
mov
jmp
adc
fnstenv
(bad)
loop
dec
imul
fwait
scas
jle
js
xchg
xchg
mov
lock
(bad)
stc
mov
push
jne
mov
jnp
aas
fidiv
dec
(bad)
lea
in
aad
(bad)
loope
lock
arpl
push
mov
sbb
mov
std
repnz
jle
add
stos
clc
push
fwait
cmp
mov
push
sar
in
movs
sbb
scas
mov
cwde
sub
imul
dec
or
das
cmc
push
xchg
sub
push
mov
outs
pop
xchg
jl
mov
hlt
mov
push
push
cmps
jne
fcomip
xor
outs
pop
and
pop
pushf
or
jo
cmp
inc
gs
dec
pop
xor
dec
scas
cmp
loope
mov
push
jg
jae
jno
mov
movs
jo
or
sub
mov
fcmovnu
movs
test
(bad)
xchg
scas
ds
jnp
mov
sub
mov
adc
fild
dec
sar
rcl
lods
cmps
adc
idiv
jg
out
or
int3
je
sub
mov
call
test
fnstenv
call
cmp
adc
push
fcomp
add
pop
(bad)
stc
push
push
xor
add
mov
lods
fcmovb
jns
mov
push
call
push
push
and
fcomp
jne
cmc
stc
into
repz
pop
jmp
sbb
(bad)
stc
sbb
stc
dec
nop
cmp
add
push
in
pop
ss
test
fild
and
add
out
pop
fnstcw
jo
sbb
hlt
push
outs
xor
enter
push
push
dec
and
clc
int3
movs
pop
ds
pop
lahf
std
mov
pop
mov
mov
jbe
jge
sub
in
ja
pop
mov
sbb
and
sbb
iret
cli
mov
jne
stos
cmp
jns
lods
pop
lods
test
xchg
cmp
stc
inc
test
lock
lar
fadd
mov
outs
popf
cmp
test
cmp
in
mov
shl
fcomp
in
fldcw
dec
(bad)
pop
test
wrmsr
cli
(bad)
xor
addr16
(bad)
xchg
xor
sar
ud0
push
sub
popf
data16
clc
dec
repz
jle
pop
pop
repnz
shr
jg
jo
test
std
push
mov
das
sar
dec
push
push
(bad)
repz
mov
sbb
push
fidivr
sbb
fdivr
lock
add
sbb
push
sbb
jle
arpl
fwait
adc
clc
rol
out
jbe
cli
pop
pop
push
in
xchg
leave
aaa
fsubr
leave
ret
out
ja
in
cs
fcomp
push
pop
out
dec
lahf
pop
cdq
jo
enter
or
mov
inc
out
jbe
int
push
jns
sub
loope
jbe
dec
popf
cmp
retf
lods
fmul
xchg
hlt
mov
mov
inc
repz
out
sub
xor
add
and
xchg
les
js
fsub
mov
pop
in
sbb
fadd
lds
lea
sahf
cmp
(bad)
cmp
sbb
inc
in
es
xchg
fild
mov
mov
fcom
and
jns
and
jne
popf
repz
mov
sub
jns
js
xchg
ins
pop
fidivr
sbb
ins
pushf
inc
jmp
pop
mov
mov
fcomp
lods
fcomp
in
cli
fdivr
inc
mov
mov
adc
xor
pop
repnz
cwde
stc
shl
call
rol
jl
cwde
push
cs
jns
mov
sar
jne
into
fidivr
test
jne
sub
leave
jl
cdq
cmc
rcl
daa
mov
popf
jae
mov
xchg
jo
call
int
xor
test
repz
push
cdq
in
out
pop
inc
sub
push
add
bound
js
daa
mov
cdq
jo
call
fwait
out
inc
stos
sar
icebp
(bad)
outs
adc
mov
mov
stos
and
and
stos
jp
or
ret
fcomp
xor
or
cmp
or
out
in
push
mov
in
push
mov
in
shl
in
rcl
scas
fcomp
mov
or
xor
or
mov
or
cmp
or
out
in
shr
in
push
sbb
in
push
cmp
in
shl
mov
(bad)
xor
or
cmp
fnstcw
ficomp
in
(bad)
ds
cmp
pop
fnstsw
fistp
in
fstp
jmp
pop
jmp
out
pop
pop
bound
pop
popf
or
sub
cwde
pop
ins
fcom
adc
js
sbb
jmp
fisubr
in
ror
(bad)
rcr
xor
aam
adc
cld
fistp
push
mov
stc
out
pop
cmp
icebp
leave
enter
fsubr
shr
cmps
dec
sbb
ret
aam
ss
dec
cwde
lds
rcl
ds
lea
ins
or
cmp
adc
in
fcom
ds
jnp
inc
sahf
cmp
cwde
inc
cmp
mov
inc
popf
fiadd
pop
test
pop
sbb
sub
adc
cmp
in
pop
adc
fdiv
jbe
push
cmp
ret
lock
push
sahf
add
push
repz
and
push
fdivr
xchg
xlat
push
fidivr
push
sbb
fldcw
ret
xchg
cmps
pop
sti
aad
sbb
push
sbb
retfw
pop
cmp
dec
cld
jmp
retf
cmp
xor
cdq
mov
mov
sub
adc
int
fwait
lods
cmp
mov
cld
and
js
stos
addr16
jl
adc
push
stc
push
daa
add
stos
pop
cmps
sbb
adc
es
mov
cmp
retf
adc
nop
jg
test
xor
sub
sbb
jae
cli
scas
or
(bad)
test
loope
adc
enter
xlat
cld
sbb
movs
int
aad
pop
fcom
je
arpl
pop
cmc
cmp
mov
ds
or
pusha
jns
aam
out
lods
adc
and
cli
push
dec
outs
jmp
mov
push
fdivr
or
adc
ins
bound
out
fidivr
(bad)
fidiv
push
mov
sbb
lods
sub
sub
push
mov
int3
das
push
sbb
mov
std
lahf
fistp
rcl
fnstcw
mov
xchg
pop
imul
sbb
in
call
adc
sub
add
imul
cdq
(bad)
aad
adc
addr16
fwait
push
pusha
mov
in
dec
fistp
in
call
sub
pop
sbb
dec
mov
and
dec
xor
push
(bad)
pusha
push
mov
(bad)
in
pop
aad
outs
fild
outs
fistp
adc
ins
fisttp
stos
push
pop
mov
xlat
or
hlt
and
ins
cli
test
jmp
sbb
imul
push
push
rcr
popf
mov
sbb
add
sti
dec
sar
sub
popf
pop
daa
sbb
pop
hlt
repnz
inc
mov
push
cld
hlt
pop
and
in
mov
push
cli
sub
pop
loopne
fcmovbe
movs
or
xor
aam
push
jbe
dec
mov
sub
dec
or
dec
cmp
(bad)
adc
cmp
sub
sub
mov
fs
clc
fcmove
and
or
popf
jg
outs
sbb
outs
jmp
mov
(bad)
es
jg
fild
dec
jae
push
icebp
test
cmc
mov
sahf
pop
or
mov
xor
fidivr
stos
out
jle
stos
pop
shl
jnp
sub
pop
and
jmp
lock
ficom
sbb
jns
pop
sbb
pop
cmp
mov
xchg
ins
push
pop
leave
sub
pop
xchg
cld
fmul
or
test
cmp
pop
test
jno
cwde
pop
push
sbb
loope
inc
cdq
mov
or
out
cmp
gs
mov
sbb
add
out
(bad)
fsubr
jp
mov
pop
lahf
(bad)
sub
or
xchg
cmp
cmp
push
int
jbe
and
or
js
adc
mov
and
cmp
sbb
out
hlt
pop
daa
jmp
jo
mov
inc
test
sub
lds
sbb
xchg
lods
retf
call
or
and
stos
xor
sbb
test
out
loop
jp
cmps
add
and
cmp
adc
mov
push
fld
push
call
jle
arpl
stc
movs
rol
sbb
xor
mov
rol
add
out
jp
and
popf
dec
cwde
hlt
adc
jmp
pop
mov
test
aad
mov
mov
je
fsubr
jb
daa
cwde
pop
cdq
mov
push
mov
mov
mul
out
scas
sub
mov
or
int3
jbe
push
leave
sub
int3
jp
adc
scas
inc
icebp
pop
xor
cmps
add
dec
lds
enter
cs
cld
mov
imul
sbb
or
jge
retf
out
pop
fstp
sub
enter
mov
pop
pop
mov
dec
rcr
fidivr
or
and
mul
aam
outs
dec
rcr
sub
mov
add
and
sar
push
sbb
ficomp
mov
xchg
stc
cmp
je
(bad)
fcomp
pop
sbb
(bad)
int
xchg
dec
jb
cmp
cmp
xchg
inc
sar
es
push
in
mov
jl
jo
idiv
outs
pop
ds
mov
and
cmp
or
jne
inc
cdq
mov
jle
push
cwde
bound
popf
jl
pusha
push
sub
test
jge
sahf
and
pushf
xchg
xchg
(bad)
jmp
retf
lahf
jb
test
dec
mov
xor
mov
arpl
test
das
iret
sub
scas
inc
int3
cli
or
jg
call
daa
and
lea
xchg
dec
inc
jl
scas
cdq
retf
dec
and
push
out
add
mov
(bad)
cmp
pushf
jle
imul
cwde
cmp
cwde
xor
jb
or
mov
gs
cmp
dec
cwde
sub
repnz
mov
ins
push
cmp
and
cwde
xor
xchg
retf
sbb
lds
out
lods
(bad)
and
jp
bound
add
stos
leave
mov
push
inc
aam
jp
sbb
hlt
cs
add
mov
sub
aad
mov
mov
pop
mov
jmp
add
dec
call
setp
test
dec
test
sahf
int3
ins
into
xchg
fdivr
in
jp
das
call
jno
cmp
pop
imul
xor
popf
sub
xor
ins
cdq
mov
sbb
fcomp
push
dec
std
mov
lods
push
pop
jnp
and
cli
sub
dec
imul
dec
mov
jl
xor
xor
fistp
jl
cmp
sub
pop
ds
retf
or
enter
jns
leave
call
pusha
in
fcomp
mov
push
mov
xchg
mov
and
adc
dec
sti
jns
mov
popf
cli
cmp
lock
addr16
xchg
sub
xchg
test
into
xchg
test
pop
add
fcomp
mov
push
fnstcw
fsubr
dec
ds
fnstcw
xlat
je
inc
xlat
ins
xor
xchg
f2xm1
ds
jmp
pop
call
popf
daa
add
cmps
mov
jns
loopne
ds
mov
pop
pop
call
inc
and
stos
dec
fisub
and
fwait
pop
push
popf
xor
xchg
jle
gs
and
pop
push
popf
cmp
outs
inc
mov
add
pop
ret
mov
fsubr
(bad)
aad
xor
or
pop
mov
fcmovnu
movs
adc
daa
cld
mov
fcomp
movs
(bad)
loop
mov
sub
mov
fcomi
cmp
fild
jo
mov
shl
ffreep
in
daa
inc
popa
jge
push
mov
call
sti
and
xor
scas
sub
popf
jns
loopne
mov
call
hlt
test
fmul
pop
fistp
je
inc
mov
lea
cmp
mov
movs
adc
daa
push
dec
(bad)
int3
sub
mov
jb
adc
nop
fnstenv
fldcw
hlt
jo
mov
pop
xchg
cld
cmp
adc
shl
inc
nop
repnz
fild
lahf
add
lds
xor
movs
push
leave
xor
xchg
movs
ins
xchg
repnz
gs
mov
mov
cld
xor
ins
xor
mov
je
(bad)
sti
fisub
cwde
mov
jmp
and
int3
popaw
imul
outs
dec
ds
hlt
pop
sbb
and
jle
pop
and
sub
pop
std
pop
call
sbb
(bad)
fcomi
cdq
loope
fimul
jp
lock
cld
inc
xchg
fucomp
dec
mov
into
hlt
mov
iret
adc
sbb
fisttp
in
push
sub
cmps
jl
and
pop
daa
leave
daa
mov
ror
push
push
xor
mov
mov
ss
add
ins
pushf
call
pop
and
outs
in
cmc
lods
pop
test
retf
cmp
mov
in
pop
in
lock
jecxz
out
cmp
jg
clc
sbb
inc
fild
test
cwde
imul
(bad)
fcom
sub
jg
neg
jbe
jns
test
cmp
jnp
pop
mov
(bad)
inc
out
lock
add
repz
dec
xchg
dec
stos
ret
stos
mov
push
(bad)
out
sub
cli
xchg
sbb
aad
cli
js
and
pop
iret
ins
out
std
mov
ins
jns
mov
cs
fnstsw
jge
cwde
push
popf
cli
out
cmp
dec
call
dec
fild
jge
leave
sub
rcl
stos
in
dec
mov
push
nop
fdivr
jbe
push
(bad)
xchg
dec
jne
scas
ins
sbb
stos
sub
into
inc
hlt
pop
mov
push
xor
imul
mov
loop
cs
inc
dec
sub
ror
xor
inc
pushf
sub
leave
sub
(bad)
(bad)
sub
push
test
pop
xchg
dec
fild
sub
pop
and
scas
add
mov
das
xlat
retf
out
push
lahf
dec
sbb
dec
and
retf
cmp
and
push
xchg
retf
lahf
outs
sub
test
cmp
out
rol
je
mov
pop
sub
cmp
mov
pusha
inc
inc
int3
stc
mov
les
movs
mov
js
int3
jae
fst
inc
xor
dec
mov
dec
cmp
sbb
sti
lock
xchg
dec
lock
mov
retf
mov
cmps
and
add
movs
cdq
mov
pop
xchg
mov
xchg
cmc
shl
and
dec
mov
and
cmps
test
js
inc
inc
pop
and
jne
xchg
dec
inc
ror
pop
shl
mov
div
pop
or
sub
and
inc
push
lahf
pop
or
inc
fnstenv
in
inc
adc
cdq
das
jnp
xor
test
dec
iret
ret
jns
dec
mov
call
daa
icebp
nop
push
enter
iret
leave
dec
and
mov
adc
into
dec
scas
mov
jp
(bad)
lock
lods
push
xchg
stos
or
dec
push
lahf
and
xchg
ins
movs
shl
jne
out
dec
retf
cld
inc
dec
cmps
and
repz
enter
scas
stos
jno
push
push
pop
loope
cs
dec
mov
ins
mov
mov
push
test
push
mov
inc
das
addr16
and
pop
cmps
and
jp
shr
dec
dec
mov
lahf
out
shr
or
pop
stos
test
je
test
push
cmp
lahf
pop
pop
out
push
sub
mul
leave
loope
mov
test
fstp
xchg
mov
sbb
xchg
loope
loop
jle
call
je
mov
enter
cld
pushf
inc
add
inc
mov
ficomp
push
cwde
jecxz
and
addr16
shl
(bad)
or
aam
shr
xchg
pop
addr16
pop
ins
in
into
aam
retf
into
push
jbe
retf
std
sub
jno
jbe
mov
retf
sti
aam
jp
(bad)
or
cmp
push
mov
(bad)
shl
gs
xchg
popf
sti
mov
push
add
xor
cmp
push
lahf
cmp
in
push
cmp
enter
xchg
test
scas
sub
frstor
daa
enter
sub
dec
add
ins
fsubrp
fs
fwait
sub
dec
push
lods
test
scas
into
call
outs
dec
fs
aad
sub
stos
sahf
fs
or
sub
int
mov
scas
test
dec
mov
xor
mov
aas
dec
adc
not
mov
shl
add
ss
and
sbb
clc
jl
jmp
cmps
and
rcl
loope
shl
(bad)
jnp
cli
xchg
and
enter
pop
rcl
xor
and
call
enter
jge
mov
mov
call
push
adc
and
in
sub
dec
leave
movs
mov
rol
xchg
xchg
pop
in
cmc
sbb
sub
dec
inc
and
pop
popa
div
and
cdq
jne
sbb
call
mov
ror
xchg
sbb
mov
ror
jle
fxam
jp
pop
and
push
jg
ror
popf
rcl
mov
out
push
adc
leave
cli
mov
xchg
out
cs
dec
enter
jle
leave
(bad)
jp
cs
mov
push
sub
jae
stos
xchg
dec
daa
and
mov
pop
fst
dec
xchg
xlat
jmp
dec
fs
push
retf
mov
inc
dec
das
shr
dec
scas
scas
ds
mov
pop
das
div
sahf
sbb
das
xchg
mov
jb
loope
das
(bad)
stos
gs
cmp
push
das
and
adc
xchg
test
leave
xchg
fsubr
sub
xchg
mov
mov
sub
aam
jmp
aad
hlt
std
push
sbb
(bad)
lock
mov
outs
in
dec
cdq
dec
sti
add
arpl
adc
push
xchg
push
cmps
push
sbb
pop
sub
popf
jp
xlat
sub
ja
stos
pop
(bad)
loopne
sbb
mov
test
int3
inc
movs
push
ds
inc
pushf
sub
xchg
fisub
call
dec
das
les
dec
dec
rol
dec
scas
call
cmp
xlat
mov
int3
das
mov
dec
dec
dec
mov
lods
pop
mov
mov
sub
shl
stos
shr
fiadd
es
rcr
dec
dec
dec
(bad)
mov
cmp
fcomp
xchg
pop
hlt
add
pop
popa
mov
dec
(bad)
out
cs
fcomp
cs
addr16
clc
cs
clc
cmp
pop
mov
sub
cmp
jecxz
fisubr
popa
pushf
clc
cs
clc
mov
ins
xor
mov
repnz
mov
dec
adc
xor
arpl
push
fmul
pop
fild
xlat
push
cmp
(bad)
pop
mov
pushf
cmc
mov
dec
jl
mov
int3
sub
push
mov
and
ret
retf
xbegin
pop
cmp
mov
in
adc
es
jmp
fisubr
popa
ftst
mov
hlt
daa
inc
cmp
and
(bad)
jmp
fchs
pop
mov
pop
shl
pop
fwait
shr
js
hlt
dec
cmp
retf
arpl
lock
push
popf
cmp
sub
cli
ss
loop
sub
cmp
stc
push
mov
mov
push
mov
or
xor
add
cdq
in
push
jecxz
pop
std
retf
je
cmp
in
(bad)
mov
inc
cmp
mov
ins
cmp
shl
aaa
inc
shr
fcomp
ret
hlt
hlt
fmul
(bad)
hlt
mov
aad
xor
(bad)
lock
stos
mov
lds
(bad)
(bad)
and
in
rcl
je
cwde
cmp
cmp
fwait
mov
or
(bad)
cmp
lea
mov
scas
fcom
dec
fistp
pop
and
sti
fcomp
mov
dec
mov
pop
cmp
dec
mov
inc
fild
(bad)
aas
fwait
sbb
dec
call
push
fistp
out
call
push
pop
push
(bad)
cmp
fstp
jmp
fidivr
sub
daa
xchg
ret
loopne
pushf
ins
pushf
bnd
pop
jae
in
dec
mov
imul
jp
fcomp
in
retf
repnz
ins
inc
xor
sbb
cwde
cmp
inc
jb
mov
lods
inc
fwait
pop
jmp
fisubr
push
cdq
mov
cmp
mov
jns
daa
and
int
cwde
mov
xchg
cmp
pop
imul
(bad)
sbb
xchg
inc
bound
fstp
push
push
call
mov
test
int3
jns
fdiv
stos
retf
in
ficom
fcomp
xchg
jno
cmp
sar
mov
sub
mov
sar
movs
(bad)
push
inc
cmp
fcomp
and
bound
into
fild
ins
retf
fidivr
mov
fs
adc
and
out
aas
cmp
pop
cli
and
ins
inc
jl
mov
mov
ja
rcl
and
aas
mov
fidivr
in
(bad)
popa
jmp
(bad)
frstor
mov
rol
fld
jns
test
cmp
jl
jns
enter
mov
adc
and
aam
and
stos
sub
xchg
aas
and
xchg
jb
fcomp
or
aas
fist
inc
cmp
jp
adc
stc
or
fcomp
jge
mov
fwait
cmp
popf
idiv
dec
ja
fld
or
inc
call
fcomp
js
loopne
jns
retf
inc
cmp
inc
fwait
cld
(bad)
in
jle
dec
jle
add
fwait
lods
jno
jmp
push
cmp
leave
or
test
dec
jl
mov
js
jno
test
(bad)
movs
ins
push
ds
cld
enter
loop
cmc
sub
pop
push
inc
cmp
inc
iret
cmps
jno
cli
jns
lock
cmp
retf
jno
lds
lock
cs
jmp
jmp
cmp
ins
pop
test
or
scas
push
xlat
sub
jmp
aaa
pop
jns
fcomp
sub
jmp
and
ins
mov
mov
jns
shl
sub
fldl2e
fcomp
adc
cmp
das
pop
aas
ins
sbb
or
ins
cmp
cmp
mov
cmp
retf
stc
pop
fistp
gs
test
xor
jmp
and
test
push
jmp
and
mov
mov
mov
jns
inc
and
cmp
pop
test
or
lods
push
jle
pop
or
ret
mov
mov
jnp
clc
jns
fcomp
in
(bad)
sbb
xor
stc
out
cmps
call
shr
sbb
popf
cli
fcomp
pop
pop
movs
adc
sub
sbb
cmp
(bad)
cs
lock
cmp
mov
pop
popf
lock
test
bound
fcomi
int3
mov
jg
call
fnstcw
cdq
push
pop
xor
inc
in
mov
mov
jae
fwait
mov
jmp
xchg
mov
cs
pushf
lock
jno
xor
jmp
pop
jne
(bad)
cmp
call
stc
sbb
mov
cmp
in
inc
mov
fmul
popf
sub
call
in
dec
call
pushf
jmp
pop
int3
mov
inc
popf
sub
pop
ds
pop
pop
cmp
in
int
mov
fadd
pop
gs
mov
mov
in
fisubr
ja
in
sbb
sub
xor
mov
or
pop
call
fistp
ret
push
pop
mov
pushf
cli
and
cdq
mov
pop
push
jae
cmp
pop
fwait
add
inc
fwait
and
sub
mov
mov
jb
fcmovnbe
(bad)
fcomp
test
repnz
aaa
sbb
dec
(bad)
stc
inc
hlt
push
test
hlt
push
adc
xor
repnz
aaa
sbb
(bad)
xbegin
test
clc
pusha
mov
lods
cmp
mov
dec
push
sbb
pop
sbb
inc
clc
jl
jmp
sbb
vdivps
sbb
clc
inc
lock
cmp
je
clc
inc
lock
adc
jbe
mov
sbb
clc
and
fcomp
arpl
fcomp
mov
jo
mov
retf
ins
daa
lahf
adc
and
shr
fwait
stc
inc
call
pop
sbb
(bad)
add
scas
adc
call
cmp
sbb
scas
fs
(bad)
mov
in
(bad)
fmul
call
rol
fild
ins
fcmovnb
and
adc
das
and
sub
sbb
call
sbb
sub
test
cmp
xor
int
xor
js
pushf
pop
stos
test
inc
inc
mov
jns
mov
rcl
lahf
push
pop
das
pop
mov
popf
std
jns
sti
dec
sbb
push
(bad)
jns
fcomp
stc
push
(bad)
mov
popf
std
jns
sti
dec
cmp
sar
out
inc
fwait
cmps
sub
cmc
and
sti
pop
sbb
inc
fwait
and
fcomp
test
fwait
js
into
pop
cmp
jp
js
repz
pop
jmp
pushf
stc
js
dec
test
fidivr
repz
pop
sti
jle
mov
pushf
stc
cmp
call
xchg
sub
pop
out
fwait
xchg
sub
mov
popf
cmc
jns
sti
jb
in
inc
call
push
call
sti
pusha
mov
(bad)
pop
int
mov
pushf
popf
pop
sbb
ret
adc
and
sub
ds
in
(bad)
pop
in
mov
shr
and
stc
mov
bound
iret
fmul
js
repnz
rcr
xchg
or
test
pop
cmp
push
inc
std
or
sbb
pop
test
ins
popf
cmc
sbb
sbb
(bad)
jmp
aaa
xchg
rep
and
xchg
jb
sbb
sbb
cmc
ret
aam
(bad)
jo
test
std
mov
and
das
sbb
cmp
lahf
fidivr
fcomp
iret
retf
iret
retf
iret
retf
in
retf
sbb
and
cdq
repz
mov
pop
mov
mov
push
sahf
sub
std
cmp
out
out
dec
gs
ds
sbb
inc
pop
retf
fcomp
mov
mov
jp
dec
cmp
and
cdq
neg
shr
mov
cmp
dec
fld
and
inc
sub
fwait
and
lods
fcomp
js
das
fiadd
inc
sar
ins
jbe
mov
cdq
mov
mov
enter
fnstcw
mov
(bad)
jae
jns
retf
(bad)
fsubr
adc
add
xor
ret
test
mov
test
cli
int3
mov
sbb
cmp
cli
int3
adc
inc
fwait
cs
clc
jns
inc
push
inc
xchg
pop
lahf
xchg
cwde
iret
inc
xchg
jbe
cmp
loop
pop
jp
cmps
xchg
sahf
les
pop
call
ficomp
in
ins
fidivr
cdq
push
fcomp
cdq
rcr
cmp
(bad)
fmul
ins
(bad)
mov
cdq
mov
(bad)
int
push
pusha
in
(bad)
xchg
pop
int
imul
stos
ret
xchg
fcomp
popa
jb
mov
aad
push
pop
in
shr
mov
gs
hlt
js
push
es
popf
js
stc
retf
adc
out
push
loopne
ss
int3
sub
call
hlt
leave
je
fdiv
fcomp
aad
xor
inc
adc
jae
ins
jbe
stc
adc
sbb
ins
mov
je
(bad)
iret
inc
daa
mov
cmp
repz
(bad)
jmp
arpl
adc
fcomp
ret
pop
push
cmp
push
jg
mov
or
and
(bad)
pop
sbb
cdq
test
sub
pop
xchg
sub
aam
jne
pop
xchg
test
pop
sahf
xchg
fstp
cmp
sub
mov
mov
pop
mov
jmp
pop
mov
lock
mov
out
shl
mov
cdq
fcomp
sub
clc
dec
cmc
pop
push
loope
sbb
ins
sbb
inc
xchg
cs
dec
out
loop
lahf
sub
xchg
mov
fcomp
ja
popf
clc
ja
sahf
cld
les
sbb
cmp
pop
call
loop
ret
xchg
lods
pop
sahf
adc
pop
mov
adc
jge
popf
xor
in
daa
adc
in
lods
pop
ficom
or
sub
ins
cmp
leave
mov
push
sub
inc
outs
xor
sub
and
pop
xor
(bad)
fisttp
mov
xlat
mov
test
fs
(bad)
(bad)
xchg
xchg
ins
pop
jge
push
push
sbb
pop
sbb
mov
daa
and
inc
cli
push
mov
fisub
repnz
test
enter
xchg
outs
push
fwait
js
(bad)
and
and
inc
mov
and
das
icebp
pop
sbb
xchg
inc
(bad)
pop
enter
je
daa
mov
dec
jns
sahf
cmp
call
clc
jmp
push
sbb
jle
mov
int
pop
mov
in
int3
ss
sbb
icebp
neg
out
rcl
cmc
ret
in
pop
enter
int3
fst
sbb
cli
pop
aas
out
fdivr
cs
mov
jmp
mov
dec
adc
fild
and
in
fcomp
fcomp
ins
mov
cmp
push
mov
ds
push
fidivr
(bad)
cmp
push
adc
cmp
daa
mov
inc
fsub
and
call
int3
in
rcr
je
shr
ret
fcom
lods
int3
(bad)
jnp
and
daa
aam
in
push
mov
mov
cmp
stc
mov
fwait
or
pop
mov
xchg
mov
sub
popf
cmps
inc
pop
sbb
push
mov
cwde
loope
pop
jp
fwait
outs
jmp
xor
cmp
mov
mov
adc
and
pop
popf
es
retf
xchg
fcom
push
call
mov
lock
(bad)
cli
int3
sub
jns
in
retf
addr16
sub
xor
(bad)
retf
or
inc
adc
mov
test
sbb
in
xor
idiv
push
sbb
ficomp
lds
(bad)
cmp
pushf
pop
cmp
std
fidivr
inc
in
pop
nop
ret
lock
outs
je
mov
test
aas
cmp
(bad)
ficom
in
add
mov
(bad)
loop
stc
dec
jbe
mov
inc
cmp
aad
das
(bad)
ds
(bad)
cli
jns
xchg
aas
pop
neg
sbb
fcomp
mov
inc
clc
push
add
pop
add
push
imul
add
sbb
aam
pop
adc
fwait
mov
lods
loope
fsubr
mov
mov
or
jae
in
in
fidiv
in
in
add
shr
cmp
fadd
ret
adc
pop
push
je
mov
push
cli
pop
dec
movs
lock
mov
jg
fwait
mov
mov
lahf
(bad)
pop
push
dec
std
es
sub
(bad)
repz
inc
cmp
fcmovu
fsubr
fist
bound
mov
cmp
add
push
outs
popf
cld
pop
and
pop
pop
and
int3
in
js
pop
gs
adc
jl
xor
push
sub
icebp
jne
iret
pop
jb
lds
inc
enter
stc
dec
loop
ret
repnz
cld
mov
cmps
cmps
mov
push
inc
pop
sbb
pop
xchg
cdq
pop
jb
dec
jo
push
out
and
loop
cmp
fsubr
cmp
shl
pmaxub
fst
retf
adc
addr16
movs
into
mov
mov
mov
add
aas
mov
sbb
enter
and
ins
cmp
sbb
cmp
ret
jmp
rcr
pop
(bad)
sbb
dec
jno
add
push
aaa
sub
inc
add
mov
sub
int3
mov
cmp
xor
cmp
push
fnstsw
mov
push
mov
stc
add
es
sub
xor
test
rcl
and
arpl
rol
imul
ficomp
retf
cs
pop
xchg
ret
and
mov
fidivr
in
call
sar
(bad)
fistp
(bad)
fistp
aad
xor
fcomp
in
fdiv
in
fadd
in
fmul
in
fcom
cmp
aad
cmp
aad
cmp
in
fdivrp
in
fcomp
cld
fcmovu
fidivr
fcomp
inc
pusha
loop
mov
in
(bad)
cmp
in
stos
sar
in
mov
cmc
loopne
fdivp
loopne
fsubrp
loopne
fsubp
loopne
ficom
in
(bad)
cmp
in
(bad)
rcr
add
jno
fdiv
jl
mov
sahf
cmp
lods
cwde
popf
mov
das
jp
(bad)
out
fcomp
cmc
fcomp
jl
cwde
idiv
fcomp
cmp
retf
ret
jo
daa
jne
pop
adc
shl
std
fcomp
sub
pushf
sahf
or
call
fiadd
aad
fld
(bad)
cmp
(bad)
aas
jmp
jmp
ins
icebp
test
fcmove
ins
mov
out
in
mov
add
inc
jmp
scas
call
jmp
enter
into
fidivr
inc
or
sar
xchg
retf
sub
(bad)
imul
mov
daa
xlat
xor
fcomp
(bad)
mov
and
nop
idiv
pop
mov
push
imul
popa
dec
retf
dec
fsub
xor
pop
push
(bad)
xchg
pop
mov
cld
jge
pop
nop
cmp
xlat
(bad)
clc
cs
shl
retf
cwde
movs
and
or
into
fcomp
xchg
pop
fucomi
cmp
in
cmp
add
sahf
xor
or
cmps
mov
lea
repz
xchg
aas
ret
push
cmp
test
and
pop
sbb
retf
int
int
lds
ins
inc
rol
fcomp
or
stc
es
lock
mov
lock
sub
and
es
pusha
out
les
mov
imul
mov
ja
ins
adc
pop
inc
dec
iret
jb
cmp
movs
mov
xchg
adc
jno
pop
test
in
lds
cwde
push
push
(bad)
test
sub
mov
fiadd
jmp
rcl
cmp
(bad)
in
cli
into
enter
shl
xor
rcl
out
jmp
ins
mov
cmc
movs
mov
in
arpl
mov
push
add
adc
push
sub
stos
jp
pop
jle
ja
xchg
inc
push
and
test
fmulp
lea
sub
call
mov
retf
bound
cmc
test
ins
cmp
and
cmps
mov
sbb
fcomp
cdq
mov
xchg
add
xor
jmp
fwait
push
and
and
js
hlt
fcomp
das
shr
dec
sbb
adc
fwait
cmp
and
cmp
adc
popa
adc
mov
shl
fcomp
dec
cmp
dec
(bad)
jnp
cmp
(bad)
cmp
or
sbb
mov
sbb
jb
xchg
repnz
push
adc
icebp
fcomp
mov
xor
es
mov
outs
cmp
add
sar
loop
sub
imul
lahf
push
and
add
and
imul
cmp
(bad)
xor
or
test
xor
jno
test
fisub
psrlq
mov
or
add
jnp
push
mov
jo
loope
pop
not
ins
pop
loope
lock
call
rcr
and
jns
cmp
mov
iret
jmp
sub
out
imul
sbb
sub
das
mov
ss
(bad)
aam
ds
adc
fcomp
add
aad
sbb
sub
and
inc
cmp
xlat
fistp
and
jp
jmp
fisttp
(bad)
fcomp
dec
ret
retf
mov
add
ins
xor
or
icebp
or
div
or
lahf
fcomp
shr
aaa
movs
push
in
sbb
in
cmp
daa
pop
je
or
add
in
push
sbb
mov
xor
retf
int3
mov
or
inc
(bad)
out
mov
in
repz
adc
movs
leave
or
stos
push
or
ins
add
fcomp
jmp
fcom
rol
cmps
cs
outs
dec
sub
loope
xor
retf
inc
mov
pop
adc
add
cdq
cmp
cmp
mov
cdq
xchg
in
jb
push
sbb
ss
fnsave
add
test
fidivr
sbb
fstp
in
(bad)
loopne
aad
add
mov
cli
cmp
xchg
fcomp
jmp
xchg
ja
aas
cmp
ret
cmp
jmp
popf
fsub
fcomp
and
inc
mov
adc
xor
adc
sar
fcomp
cmps
pop
pop
out
adc
sub
in
xlat
sar
adc
fld
cld
mov
add
fcomp
add
push
fistp
sbb
cmp
pop
jecxz
xor
lods
pop
int3
fcomp
pusha
fyl2xp1
pushf
(bad)
in
ss
clc
lahf
cmp
adc
sub
dec
cmp
pop
in
mov
hlt
xlat
mov
fisub
add
(bad)
dec
add
cmp
and
(bad)
sub
ret
jmp
daa
xlat
xor
mov
fcomp
(bad)
aaa
push
and
nop
hlt
mov
in
pop
(bad)
cmp
xchg
push
dec
retf
iret
loope
and
xor
pop
push
(bad)
lods
pop
mov
cld
cmp
push
nop
js
cmp
shr
loopne
out
and
sbb
into
fcomp
xchg
pop
mov
push
pop
clc
test
ins
add
xchg
xchg
mov
push
sbb
or
xchg
mov
lea
jae
adc
aas
cmp
test
and
adc
sbb
retf
int
rol
or
(bad)
xchg
fcomp
or
stc
out
mov
lock
push
ja
sub
imul
out
aam
xor
imul
mov
pop
cmp
xchg
neg
inc
cmp
and
aam
cmps
mov
fcomp
mov
dec
add
in
fidivr
cwde
push
shl
test
sub
mov
fiadd
jmp
push
push
cmp
(bad)
xchg
adc
into
enter
shl
mov
jmp
ins
mov
jne
mov
in
arpl
out
mov
add
add
xchg
push
dec
retf
sub
stos
cli
fcomp
scas
ja
xchg
inc
push
adc
cmp
test
retf
sub
call
das
fadd
loop
pop
cmc
add
fldcw
sti
and
daa
std
sti
cmp
mov
push
sar
enter
sbb
xor
retf
(bad)
fcomp
retf
rcr
and
ins
cmp
xlat
je
adc
dec
sbb
fist
cli
sbb
cdq
fcomp
out
rcr
add
cwde
idiv
(bad)
loop
cmp
int3
int
or
lds
paddsw
fcomp
lods
cmps
(bad)
sti
out
cmp
cmc
repnz
xchg
cmp
push
nop
bound
into
cwde
xchg
(bad)
out
xor
cmps
push
mov
outs
out
fcomp
sar
mov
dec
xor
jmp
mov
cmp
mov
sbb
sahf
cmp
fcomp
xor
or
test
xor
cmp
sub
(bad)
cli
call
cmp
out
(bad)
fcomp
xchg
mov
inc
push
or
in
cmp
push
lock
popa
test
push
aam
jbe
loope
in
lods
call
pop
sbb
mov
sub
in
jmp
add
adc
into
sbb
pop
call
loopne
int3
xor
mov
sar
in
int
test
and
sub
and
xlat
repz
cmp
(bad)
fistp
movs
push
jp
ins
mov
cmp
fcmovnu
or
retf
mov
adc
fcomp
int3
out
mov
icebp
or
cmp
or
outs
pop
adc
cmps
shr
aaa
stc
push
in
and
test
fisub
pop
jns
or
je
cli
ins
add
cmp
push
mov
dec
xor
dec
pop
or
data16
out
mov
mov
movs
movs
leave
or
stos
push
or
cmp
(bad)
jecxz
mov
(bad)
xor
add
fisubr
enter
inc
out
leave
xor
loope
cmp
retf
mov
jne
mov
addr16
cmp
sar
out
xor
push
push
sbb
dec
jnp
ins
ss
push
out
jg
sbb
pop
je
loopne
and
fcomp
out
jns
jnp
(bad)
cli
cmp
xor
ds
fstp
jmp
in
ja
aas
es
pop
pop
cmp
loopne
and
jmp
mov
cmp
adc
das
and
inc
loopne
pop
dec
and
sub
lock
xchg
xor
add
add
push
ins
add
mov
pop
pop
out
mov
adc
fdivrp
out
sbb
fld
jl
inc
jns
or
sub
mov
mov
fcomp
jmp
sbb
pop
push
add
sub
loopne
in
mov
and
pop
lock
fcomp
rol
cmp
pop
in
rol
ret
mov
add
enter
or
scas
fcomp
retf
mov
arpl
ret
imul
cmp
and
mov
xor
mov
nop
je
in
call
(bad)
cmp
xchg
push
imul
popa
int
cmp
daa
mov
cmp
sub
pop
sub
cld
mov
fcomp
int
cmp
cs
retf
addr16
cmp
and
sub
xchg
pop
cmp
cmp
sub
(bad)
pop
xchg
xchg
mov
push
cwde
or
lods
xor
mov
jno
add
ss
aas
dec
jecxz
pop
and
es
sbb
int
ror
cmp
inc
shl
mov
stc
cmps
mov
fcomp
ja
sub
imul
out
ins
loopne
shl
out
out
ja
out
dec
inc
mov
(bad)
fcomp
pop
cmp
jb
dec
aas
and
mov
xchg
imul
mov
mov
dec
test
in
pop
cs
fidiv
repz
das
pop
(bad)
sub
cmp
sub
push
push
addr16
mov
mov
cdq
enter
shl
ins
aad
or
mov
adc
jne
xchg
lock
out
lds
xchg
push
add
cmp
dec
scas
int
mov
sub
push
xchg
xchg
test
and
fstp
push
pop
jnp
and
fcomp
ret
shl
inc
in
adc
add
cmp
mov
jp
ins
cmp
enter
add
sti
sbb
fcomp
sbb
xchg
mov
mov
jnp
ins
add
sub
out
and
(bad)
call
hlt
adc
je
dec
rcl
in
sbb
and
outs
movs
ffreep
lods
pop
loope
adc
fcomp
mov
cmp
add
inc
jge
cmp
or
jl
mov
ds
sbb
mov
enter
loopne
inc
xor
mov
lea
xor
jne
(bad)
mov
fcomp
ret
adc
push
inc
add
pop
aad
pop
call
xor
fsubr
jp
sub
popf
cs
xchg
cmps
fcomp
dec
ret
out
mov
cmp
adc
push
xchg
cmp
or
(bad)
in
mov
fcomp
xchg
loope
sub
add
in
mov
push
repz
push
push
fidiv
fisubr
movs
repnz
sub
js
pop
lahf
cmp
sahf
mov
mov
aam
rcl
xor
fcomp
xchg
call
push
push
push
sbb
xor
mov
loop
fcomi
sbb
out
fcomp
(bad)
(bad)
cs
cld
call
cmp
pop
lock
fidivr
aaa
popf
sbb
out
and
fcomp
pop
ror
xor
sbb
(bad)
stc
dec
stos
cmp
ss
call
cli
xchg
pop
push
dec
sub
mov
pop
cld
cs
mov
push
out
cmc
(bad)
and
jmp
in
push
rcr
pop
add
jnp
cmp
outs
mov
test
fs
adc
and
iret
shl
mov
jae
pushw
popa
mov
cmp
cmp
xor
mov
mov
add
cdq
mov
pop
loop
call
sbb
cmp
test
add
loopne
add
inc
add
cmp
cli
cwde
in
fcomp
cmp
push
fidivr
in
cmp
jmp
inc
cmc
or
test
fsub
jb
mov
dec
cmp
and
hlt
adc
aad
push
jmp
mov
daa
pop
call
into
test
jl
shl
movs
push
sbb
dec
cmp
(bad)
fcomp
push
stc
or
loop
sub
cdq
adc
or
mov
sbb
push
add
arpl
xor
sbb
int
cmp
adc
gs
fld
(bad)
fcomp
xchg
mov
mov
aaa
mov
ret
cmp
or
jle
jmp
sub
push
jecxz
cmp
fimul
add
imul
jb
cmp
lock
mov
pop
fdivr
cmp
xor
dec
sub
xlat
retf
imul
cmp
cli
mov
pushf
mov
call
sub
fcomp
adc
sub
jge
dec
frstor
sysret
push
pop
inc
mov
or
arpl
cmovg
(bad)
fcomp
outs
pop
mov
out
push
cmc
mov
mov
add
or
clc
adc
retf
call
mov
lods
pop
and
cmp
test
mov
or
cmc
push
mov
pop
push
pop
loope
and
jno
imul
xchg
mov
mov
xchg
or
nop
sub
(bad)
mov
fcomp
ja
mov
jno
adc
fs
jno
push
push
and
mov
scas
push
ins
dec
sbb
fs
push
(bad)
sub
rol
jnp
repnz
into
les
sbb
or
scas
rep
aas
movs
mov
icebp
gs
inc
add
cmp
pop
dec
ret
stos
fs
dec
jle
xchg
pushf
pop
imul
mov
daa
mov
lods
pushf
call
mov
adc
cs
fcomp
ficomp
xor
addr16
les
mov
clc
nop
scas
lods
repnz
fcomp
call
mov
or
popf
sbb
pop
xor
gs
jle
adc
iret
fcomp
adc
aas
ins
movs
fdivr
rcr
and
mov
shl
add
mov
vdivps
cmp
lock
dec
mov
cmp
pop
shl
mov
mov
fcomp
push
mov
pop
pop
mov
gs
add
(bad)
std
mov
cmp
enter
rcl
xchg
push
and
mov
daa
aad
out
mov
mov
fidiv
imul
sub
push
aas
cmp
scas
adc
cli
mov
push
pop
(bad)
fcomp
mov
mov
cmp
(bad)
mov
adc
xor
dec
push
add
fstp
fdivp
lods
push
adc
add
cmp
mov
sub
lock
hlt
push
cdq
call
jnp
push
mov
imul
test
cmp
push
lea
in
adc
test
pop
rol
fcomp
hlt
test
sbb
shl
call
fst
aas
leave
fstp
cs
int3
xchg
mov
fcomp
test
or
jg
fmul
ret
or
test
add
bound
or
sbb
pop
ret
xor
push
sbb
push
fwait
leave
mov
push
fcmovnu
fiadd
out
mov
xchg
jae
cs
and
cmp
lods
mov
or
lods
mov
mov
pop
js
test
add
in
iret
ret
retf
push
mov
test
or
mov
add
stos
lods
loop
inc
cmp
xlat
xchg
cdq
pop
ss
jmp
add
jmp
je
fcomp
sbb
mov
out
pop
cmp
out
mov
mov
arpl
movs
cmp
pop
xchg
ja
imul
ret
xor
cmp
add
jmp
nop
popf
pop
lock
mov
dec
push
repz
xor
mov
xchg
dec
cmp
shl
shr
pusha
xor
je
cdq
idiv
xchg
out
fcomp
sub
scas
push
aam
sbb
mov
pop
cmp
mov
test
in
shr
xor
fcomp
mov
or
mov
pushf
push
cmp
pop
in
jecxz
xor
lods
sbb
lods
test
(bad)
fcomp
and
xchg
jae
push
push
cmp
pop
jecxz
cmp
hlt
popa
sti
xor
mov
(bad)
(bad)
pop
add
loopne
(bad)
adc
ins
in
(bad)
cmps
mov
imul
cmp
cmc
fcomp
mov
pop
pop
ins
test
ins
int
ret
xchg
xor
pop
mov
in
mov
fidivr
mov
cmp
ins
out
rol
mov
pop
adc
mov
pop
push
pop
mov
mov
(bad)
nop
jb
xchg
nop
outs
aam
mov
mov
mov
ret
and
and
pop
das
jle
int
in
retf
inc
cmps
bnd
lds
ins
and
out
mov
or
lahf
fcomp
adc
pusha
push
xor
outs
push
aam
mov
pop
lods
jl
cmp
fisttp
aas
xor
aam
ja
xchg
xchg
cmp
pop
fdiv
pop
fdivr
fs
fnstsw
xlat
jl
fcomp
dec
pushf
test
sub
in
add
std
sub
pop
sub
lahf
sub
fcomp
xor
aad
mov
push
push
or
out
jmp
ins
mov
mov
push
push
inc
ret
push
xchg
fsubp
xor
pop
test
dec
dec
int
sub
cmp
leave
jle
dec
leave
xchg
les
ja
fadd
jge
sub
enter
cmps
mov
xchg
inc
add
pop
cmc
jmp
mov
pop
mov
pop
jecxz
xchg
sbb
std
sti
cmp
(bad)
clc
adc
(bad)
repnz
mov
sub
fcomp
nop
lea
popf
dec
jns
cmp
jle
movs
je
inc
(bad)
das
inc
sbb
dec
sbb
jp
inc
in
fcomp
rcr
fild
inc
addr16
adc
lock
inc
adc
xchg
mov
jo
ins
int
pop
pushf
stos
clc
(bad)
jnp
pop
sbb
mov
push
nop
and
ret
inc
and
xor
test
fcomp
sar
mov
sub
dec
dec
mov
rcl
cmp
daa
mov
push
add
mov
mov
cmp
imul
xor
ret
xchg
es
cmp
adc
mov
jp
pop
psrlq
rcr
pop
xor
loope
pop
inc
inc
mov
jmp
popa
jbe
test
or
loope
cld
lods
push
pop
sbb
jg
push
cld
mov
sub
in
int
je
int
js
nop
call
sti
test
pusha
out
xor
rcl
push
ret
cmp
div
mov
add
dec
sbb
test
and
call
fstp
sbb
jp
in
fcmovnu
cs
fcmovne
adc
retf
mov
mov
push
mov
mov
hlt
daa
adc
cmp
adc
shr
(bad)
iret
push
fs
fdiv
fcomp
cmps
pop
inc
inc
mov
outs
push
cmp
xor
mov
mov
pop
(bad)
out
cmc
pop
xchg
fcomp
inc
cwde
mov
stos
push
push
push
cmp
in
imul
fisub
fadd
cmp
fisubr
jp
dec
sub
iret
leave
xor
mov
pop
mov
stos
rol
fcomp
loop
in
dec
push
push
cdq
xor
cmp
push
cmp
push
sbb
popf
fwait
add
popf
out
repnz
mov
pop
add
leave
jmp
cwde
in
cld
cli
cmp
pop
fild
fldenv
mov
pop
outs
cmps
ja
inc
cmps
(bad)
fcomp
xor
pusha
cs
dec
cmp
jae
(bad)
xchg
int3
popf
pop
cs
adc
fdivp
in
xchg
mov
push
push
mov
ins
push
ins
xor
jnp
mov
jbe
lahf
xchg
icebp
mov
xchg
shl
sbb
sbb
fcmovnb
mov
hlt
sub
retf
dec
xor
mov
in
mov
fcomp
imul
xor
arpl
pop
add
stos
dec
fyl2xp1
jmp
js
lock
fcomp
push
dec
cmp
add
mov
add
test
outs
xchg
shl
dec
jo
or
mov
adc
jp
adc
push
mov
jne
hlt
or
enter
fcomp
jmp
mov
fwait
push
xor
ins
mov
sahf
ins
fmul
xchg
xor
aaa
ins
mov
fild
adc
mov
dec
cmp
mov
xadd
cmp
jb
pop
xchg
mov
fcomp
and
jnp
ja
add
cmp
cld
cld
js
lahf
imul
loop
(bad)
fcomp
fdivp
add
das
ss
add
data16
cmp
mov
and
mov
shl
jmp
pop
test
mul
ins
cmp
por
sub
cmps
adc
dec
movs
bnd
push
sti
scas
fcomp
mov
mov
cld
and
imul
sti
sti
loop
jne
inc
test
fstp
mov
fild
mov
gs
and
fwait
retf
or
jge
f2xm1
mov
cs
out
popf
xchg
outs
xchg
fcomp
mov
sub
mov
pop
fmul
ds
adc
xchg
ret
hlt
fcomp
mov
jno
movs
cmp
scas
out
repz
pop
xor
ja
stc
jge
mov
ja
fcomp
push
dec
fiadd
aaa
xchg
cmp
idiv
lds
inc
mov
push
adc
clc
push
stc
jle
mov
xor
stos
cmp
sbb
inc
dec
or
mov
push
fs
cmp
or
pushf
cld
imul
(bad)
sbb
rcl
mov
jmp
push
mov
jbe
inc
cmp
push
sub
fcomp
(bad)
imul
jp
xchg
in
ret
dec
cmp
fstp
xchg
and
sub
icebp
loopne
push
pop
sub
fcomp
mov
outs
aaa
pusha
jecxz
cmp
xchg
scas
ins
or
stc
scas
xor
cmp
pop
jmp
daa
fdivr
xlat
push
cmp
and
xchg
add
outs
mov
xchg
fcomp
fdivp
loope
es
cld
xchg
repz
jns
lods
mov
and
imul
sbb
jmp
xlat
add
mov
pushf
popa
test
inc
cmp
inc
test
outs
push
repz
inc
cmc
fcomp
les
fmul
data16
cmp
add
test
adc
mul
movs
cli
enter
inc
mov
fcomp
push
sti
mov
jne
dec
ror
jl
mov
stos
cmps
(bad)
push
mov
aas
push
sub
gs
xor
sar
xchg
adc
cmp
(bad)
jmp
push
dec
mov
ficom
cmp
dec
arpl
jbe
aam
xchg
(bad)
pop
or
scas
or
xchg
out
rcr
pop
mov
aam
xor
dec
mov
jno
pop
test
push
jmp
or
into
shl
push
sub
mov
pop
in
mov
out
jne
xchg
(bad)
retf
pop
pop
mov
cmp
jmp
jge
mov
out
je
xor
sbb
cmp
cs
sub
ds
jp
adc
ins
(bad)
in
dec
inc
imul
sub
test
in
clc
add
ds
std
cmp
ja
cli
ins
jbe
jg
loope
mov
mov
push
adc
inc
mov
mov
push
sub
fnsave
call
in
mul
pop
rol
aam
sbb
cmps
mov
pop
retf
add
nop
add
arpl
inc
out
popa
in
fist
mov
fcomp
pop
es
inc
inc
mov
xchg
cli
bound
(bad)
mov
ins
or
jle
out
aas
mov
leave
test
dec
test
and
aaa
xchg
xchg
lods
pop
fist
mov
add
fcomp
push
ret
inc
mov
(bad)
out
cli
outs
xchg
test
cmp
lock
or
and
ins
or
adc
mov
jne
xchg
cmp
dec
hlt
push
out
gs
movs
jecxz
(bad)
(bad)
(bad)
pop
sbb
xor
clc
fcomp
ja
mov
fmul
push
xchg
xor
aaa
cli
scas
pop
aad
push
mov
mov
dec
inc
retf
fcomp
ja
cwde
push
rol
xchg
sub
cmp
mov
xchg
pop
jecxz
gs
(bad)
jnp
sub
je
fmul
jl
js
lahf
jl
ins
loop
inc
push
in
lock
jb
add
arpl
jg
push
fcomp
std
and
and
mov
test
rcl
inc
jbe
dec
mul
jecxz
jmp
fcomp
in
sub
cmps
push
or
xchg
cmp
loopne
sti
popa
es
scas
out
mov
mov
jecxz
jl
addr16
loop
das
jmp
cwde
jmp
cmp
add
stos
in
cmp
and
aad
pop
inc
and
fwait
retf
fcomp
ins
leave
xchg
fld
cmp
sbb
bound
and
mov
mov
fimul
ds
adc
in
inc
nop
ins
cmp
test
out
push
lods
movs
mov
fstp
pop
repz
or
neg
stc
jge
idiv
pop
mov
cmp
inc
sbb
sub
adc
pusha
fdiv
lds
inc
mov
aam
xlat
es
js
stc
jle
(bad)
pop
xor
mov
stos
stc
test
fistp
dec
or
mov
ins
or
sbb
inc
mov
pushf
cmp
cmps
popf
std
fwait
sbb
push
int
push
rcl
fwait
xchg
cmc
call
(bad)
push
inc
jmp
jae
sub
push
inc
cmp
dec
mov
ds
sub
imul
jp
adc
jmp
ficom
aaa
fist
cmp
pop
mov
in
enter
pusha
jecxz
aaa
mov
shl
fcomp
(bad)
(bad)
sub
fs
cmp
push
fdivr
cmp
dec
fsub
xlat
aam
(bad)
fcomp
cmp
pop
jo
jle
cmp
repz
pop
and
pop
shr
jl
jns
repz
test
pop
lods
mov
cmp
dec
mov
cmps
cmp
jmp
mov
jl
call
mov
fisub
inc
inc
mov
push
push
cmp
outs
leave
sbb
pop
push
inc
les
fcom
in
clc
fcomp
mov
xchg
cli
enter
cmp
leave
cwde
fdivp
cmps
mov
sti
mov
cmc
dec
dec
ror
fcomp
add
mov
sub
fstp
mov
mov
and
shl
fcomp
add
stos
xchg
adc
cmp
inc
xchg
std
cmp
imul
enter
xchg
cmp
leave
inc
sub
fcomp
fld
xchg
(bad)
fisub
scas
or
mov
(bad)
push
mov
inc
xor
pop
fcom
fwait
and
cmp
mov
push
push
xchg
sub
cmp
push
test
or
inc
jae
aas
pop
in
mov
cmp
mov
jmp
or
daa
(bad)
dec
and
mov
sbb
fcomp
jge
ret
mov
out
hlt
xor
ins
rcl
inc
lds
jle
push
ds
push
adc
(bad)
fcomp
dec
sahf
push
imul
repnz
mov
mov
in
js
lds
add
jmp
in
pop
les
mul
popa
jle
in
dec
rcl
add
xchg
into
push
sub
mov
sahf
pop
rol
aam
cwde
lahf
inc
cmp
sbb
retf
or
retf
mov
mov
je
ss
(bad)
mov
cmp
pop
mov
xchg
pop
es
add
call
pop
mov
cwde
mov
ins
mov
jle
ins
ja
test
aad
leave
test
dec
pushf
ins
pop
and
icebp
fcomp
cmp
xchg
mov
pop
fist
mov
or
cmp
mov
(bad)
out
cli
sbb
vdivps
or
aad
cmps
or
cmp
ja
mov
inc
cmp
adc
nop
pushf
push
mov
(bad)
fcomp
push
movs
gs
and
jecxz
cmp
jle
push
js
and
ja
xor
in
xor
fcomp
scas
fdivp
add
and
sub
in
cmp
push
dec
mov
xlat
test
cmp
mov
not
jecxz
push
push
cmp
hlt
cmp
je
mov
jl
pop
mov
pop
inc
push
pushf
cdq
lock
in
scas
add
ins
pusha
scas
sbb
and
or
or
lods
std
push
ja
inc
jbe
dec
inc
idiv
sub
sub
cmps
shr
dec
movs
adc
rcr
sti
loope
jl
cmps
mov
mov
jecxz
in
and
aad
or
scas
sti
inc
sub
cwde
jmp
in
fcomp
stos
in
dec
add
mov
gs
cmp
fmul
push
leave
pop
or
fld
stc
clc
fcomp
outs
movs
push
bound
add
mov
test
mov
or
cli
mov
fisubr
jno
ds
sbb
push
test
cmp
sub
ret
clc
or
neg
jge
mul
repz
inc
sbb
sub
jp
adc
outs
pusha
pop
push
lds
mov
fcomp
es
jle
push
jns
cmp
xchg
stos
popf
test
fistp
adc
stos
inc
dec
push
fs
dec
rcr
cdq
(bad)
ror
pushf
cld
xchg
xlat
fidivr
sbb
sbb
(bad)
push
rcl
cmp
cmc
call
(bad)
push
and
repz
push
xor
icebp
fcomp
add
fld
imul
inc
jne
cmp
ret
int3
cmp
(bad)
and
ins
dec
aaa
pop
lods
icebp
loopne
adc
fwait
(bad)
mov
out
mov
jae
in
rcl
jne
rcl
(bad)
fld
xor
mov
fcomp
imul
jmp
dec
cmp
xlat
aam
(bad)
cmp
xchg
sbb
call
inc
fstp
pop
jae
pop
and
fdivp
jmp
cmp
and
popa
lods
mov
dec
mov
cmp
lea
inc
mov
das
jmp
xlat
cmp
mov
(bad)
popa
add
dec
inc
mov
rol
mov
pop
push
inc
cmc
xor
cmp
cmp
in
xor
test
adc
enter
sub
stos
cmps
mov
jnp
cmc
cmp
ror
cs
push
mov
sub
mov
mov
fcomp
fld
mov
sub
shl
or
adc
pop
add
mov
frstor
dec
mov
xchg
xchg
push
(bad)
leave
cmp
mov
or
fld
pop
scas
or
gs
pop
mov
rcl
push
mov
xchg
stos
cmp
inc
mov
or
adc
bound
mov
add
push
pop
xchg
sub
mov
ins
push
test
or
adc
mov
ficom
fcomp
imul
and
mov
sbb
mov
xor
out
hlt
xor
sbb
cmps
inc
sub
cmp
loope
ins
adc
sbb
and
imul
jb
push
out
fcomp
aaa
mov
xor
dec
mov
xchg
and
cli
in
fisubr
mov
int
ficom
add
xchg
and
in
xor
push
and
in
neg
outs
rol
fdiv
repz
jle
mov
retf
cs
sti
jecxz
mov
je
ss
inc
out
push
in
jecxz
fcomp
or
not
cmp
jno
pop
inc
mov
in
cli
loop
mov
xor
icebp
(bad)
mov
adc
fcomp
or
aad
jmp
dec
cmp
pop
mov
cmp
fisub
aaa
xchg
fist
fimul
cmp
mov
ret
out
cli
cmp
test
add
or
(bad)
and
fcomp
mov
inc
cmp
nop
push
mov
pop
scas
push
movs
inc
clc
and
jecxz
sbb
fcomp
xlat
pop
jmp
pop
js
xor
cmp
add
scas
fidiv
push
and
add
xchg
fcomp
xchg
pop
inc
dec
cwde
xlat
ja
push
(bad)
ins
in
mov
mov
ja
jecxz
xchg
pop
jbe
gs
jge
xor
xlat
je
or
lahf
cld
push
fdivr
inc
push
pushf
mov
scas
add
test
xchg
push
mov
test
lods
jge
ja
rcl
inc
test
sub
pop
test
ins
movs
xchg
add
int
sti
loope
jp
cs
xchg
mov
mov
rcr
(bad)
push
or
scas
sti
bound
jne
in
jmp
in
or
sub
cmp
neg
fidivr
shl
xor
pop
mov
fld
stc
clc
cdq
aad
movs
push
cmp
add
mov
fcomp
inc
add
jecxz
pop
mov
ja
sar
cmps
lea
icebp
leave
ds
daa
out
push
test
dec
xchg
fcomp
sub
ret
clc
or
aad
pop
cmp
push
mul
repz
xor
dec
fiadd
sahf
fcomp
inc
adc
punpcklbw
pop
jmp
xor
jbe
movs
xchg
js
sub
(bad)
push
stc
jle
sbb
cmp
fistp
xchg
popa
stos
inc
ds
fs
into
scas
cmp
or
inc
loope
pop
jge
pop
pop
cmp
cwde
(bad)
sub
jl
xor
mov
xchg
jmp
mov
icebp
fcomp
mov
sbb
scas
icebp
pop
add
fstp
enter
mov
daa
jmp
leave
mov
sahf
fcomp
es
movs
das
rcr
in
cmp
push
ror
xor
(bad)
fld
dec
clc
fcomp
popf
mov
out
push
mov
ins
fsub
addr16
cmp
les
sbb
out
fcomp
loope
loop
inc
pop
adc
jae
addr16
add
inc
cmp
shr
dec
push
mov
fimul
adc
test
sub
cmp
sar
in
sbb
scas
clc
dec
fild
out
shl
fidiv
test
mov
dec
push
cmp
xchg
mov
imul
fdivr
xor
in
out
push
lock
pop
inc
leave
pusha
(bad)
sub
sub
inc
(bad)
push
rol
mov
movs
cs
push
cwde
add
pop
inc
mov
mov
or
add
retf
sbb
or
and
sub
jno
in
or
in
movs
cmp
sahf
xchg
push
cli
lods
and
ja
frstor
and
xchg
fld
fsubrp
sti
xor
xor
mov
in
mov
xor
or
repnz
or
das
pop
fsub
inc
loope
fidivr
adc
sub
ret
std
out
loop
pop
mov
dec
dec
xor
pop
neg
(bad)
imul
retf
add
in
mov
and
inc
dec
out
test
in
sbb
ret
sub
fisub
scas
adc
cmps
cmp
pop
dec
push
mov
jbe
push
iret
and
sbb
scas
mov
int
xchg
adc
aad
sub
add
mov
addr16
in
fisubr
add
dec
sbb
cmp
jmp
rcr
shl
and
xlat
neg
outs
add
fcomp
jnp
or
js
and
retf
jle
mov
mov
lods
pop
mov
je
mov
mov
addr16
or
idiv
cmc
or
rcl
push
mov
mov
xor
daa
and
in
ret
retf
or
aad
ins
(bad)
or
int3
mov
jno
adc
imul
jb
fidiv
or
jae
xor
cmp
test
test
lock
jns
cwde
into
xor
in
sbb
add
push
cdq
cdq
popf
retf
xchg
xor
inc
jmp
jl
add
push
stos
je
inc
pop
lds
ret
mov
aaa
push
and
movs
(bad)
out
ds
sbb
in
xor
fnstenv
sti
dec
jns
ins
push
push
pop
push
in
sub
ret
fcomi
loop
mov
jo
sbb
iret
cmps
mov
inc
xor
xchg
or
fwait
out
gs
dec
mov
aaa
push
rol
setno
jae
inc
addr16
lods
mov
or
jb
sbb
iret
cmps
mov
sbb
add
fwait
sti
loop
ss
sti
inc
stc
cld
cmp
push
aas
push
cdq
push
sub
ret
xchg
in
jl
inc
pop
push
add
sub
adc
test
pop
jo
fdivr
mov
pop
dec
cdq
mov
mov
fmul
and
mov
dec
mov
mov
stos
mov
and
mov
jo
sbb
into
and
in
jle
sub
xor
cdq
lods
xchg
xor
inc
leave
cld
sub
add
push
(bad)
je
ins
gs
add
fstp
push
sub
sub
sub
lahf
jo
dec
enter
mov
cmp
sub
jb
sbb
sbb
push
in
adc
and
and
fiadd
xlat
loop
inc
pop
push
sub
sub
sbb
movs
bound
mov
xchg
mov
(bad)
shl
cmp
inc
scas
cmp
ins
add
push
mov
sub
rcr
add
jge
aaa
inc
or
sub
rol
das
enter
mov
ins
paddw
mov
enter
mov
push
sbb
xor
cdq
leave
xchg
and
rcr
jnp
aad
cmp
add
push
mov
sub
xchg
je
jmp
fdivr
pop
inc
and
and
xchg
movs
xor
lds
dec
sar
sub
or
push
and
sub
push
rol
pop
fcom
cmps
push
or
jb
sbb
pop
outs
hlt
sub
shl
loope
ins
jge
aaa
inc
and
dec
pop
xchg
movs
movs
lahf
jo
fadd
mov
mov
pop
adc
mov
jne
mov
vmwrite
sbb
mov
rcr
add
pusha
and
data16
jno
inc
and
call
inc
inc
ins
daa
and
fcomp
outs
fstp
fistp
push
pop
sbb
(bad)
xor
popa
rcl
adc
loopne
fidiv
cld
dec
into
scas
dec
cmp
dec
retf
dec
retf
movs
cmc
dec
leave
sbb
inc
inc
push
dec
stc
jl
leave
fcomp
dec
cld
jnp
inc
(bad)
jns
inc
lock
ins
repnz
adc
jb
pop
call
ins
or
imul
fstp
push
out
pushw
push
loope
add
bound
lods
fst
dec
dec
ret
adc
sub
(bad)
sub
in
dec
mov
int3
adc
retf
jl
ins
cmps
push
nop
jl
sbb
fist
cmp
aaa
add
xchg
jno
mov
les
push
mov
adc
fidiv
inc
out
xor
ins
pop
(bad)
aas
adc
dec
retf
jecxz
fcomp
dec
aaa
ror
push
daa
xor
test
in
arpl
(bad)
lock
adc
jg
push
outs
out
fcomp
(bad)
ss
xchg
adc
xchg
jno
cmp
jno
dec
jecxz
sbb
cli
sub
mov
mov
cmp
mov
fimul
dec
repnz
outs
pop
cdq
lods
push
enter
mov
and
mov
xor
push
lahf
jmp
in
jmp
and
rol
and
out
cmp
fdivr
fcomp
dec
push
xchg
push
scas
add
sub
in
or
dec
push
and
mov
pop
jnp
cmp
(bad)
pop
add
mov
pop
ret
aam
in
mov
out
call
cli
inc
dec
pop
inc
scas
retf
ret
(bad)
mov
js
imul
rcr
inc
idiv
jb
pop
repz
or
fcmovne
into
stos
or
idiv
push
jle
cdq
push
mov
loope
cmp
mov
sub
cmp
in
inc
add
fcomp
and
std
mov
xor
outs
mov
cmc
add
push
or
retf
(bad)
int
(bad)
neg
pop
loopne
fbld
test
(bad)
cmp
mov
out
loope
mov
daa
loop
push
call
int
xor
inc
cmp
cmp
mov
sbb
push
retf
lea
das
sbb
push
jae
fiadd
jmp
scas
pop
mov
push
outs
les
fcomp
retf
pushf
cmp
jmp
ins
imul
jge
sub
adc
lods
call
(bad)
mov
movs
add
popa
scas
repnz
loopne
cmp
retf
stos
das
mov
mov
int3
mov
xlat
rcr
fiadd
retf
loope
data16
cmp
shl
inc
out
or
xchg
or
mov
pop
mov
inc
push
cmps
call
pusha
sar
and
dec
xchg
dec
pop
je
mov
out
add
mov
ficomp
(bad)
nop
addr16
push
(bad)
cmp
inc
mov
push
xchg
int
add
dec
push
lock
mov
aaa
inc
cmp
sti
lods
movs
cli
call
or
imul
retf
cdq
into
push
sbb
test
jp
jl
jle
int3
cwde
bound
lods
data16
mov
push
fldcw
pop
pop
inc
dec
pop
and
sbb
sahf
xchg
ja
add
dec
adc
push
xor
fnsave
mov
test
inc
add
icebp
or
cmc
stos
icebp
jnp
daa
sbb
popa
mov
dec
dec
mov
cld
(bad)
in
aad
test
ins
push
xlat
and
fbld
dec
dec
and
(bad)
(bad)
fcomp
cmp
xlat
aad
jg
inc
mov
in
(bad)
aam
in
ficomp
fcmovu
mov
popa
push
push
xor
fcomp
loope
push
cmp
push
push
xlat
xor
(bad)
xor
push
pop
sub
pop
stos
jbe
dec
xor
fcomp
sub
inc
dec
das
icebp
dec
inc
sub
dec
(bad)
sar
dec
pop
or
into
pop
adc
ss
popf
xor
dec
xchg
es
shr
fisubr
js
xor
fidivr
ficomp
cld
ficomp
enter
push
(bad)
cmp
fcmovu
sub
out
(bad)
mov
pusha
dec
xchg
pop
pop
pop
test
hlt
call
int3
pop
repz
jnp
mov
push
shr
xchg
pop
xor
ficomp
ret
mov
rcr
shr
(bad)
jp
cmp
pop
sti
sub
pop
repz
std
in
xlat
mov
sbb
sub
enter
rcr
mov
jle
(bad)
into
cld
in
cmp
stc
into
mov
cld
les
lods
pop
inc
xor
mov
ins
enter
dec
out
ins
popa
dec
inc
cmp
scas
test
sbb
mov
addr16
pop
cmp
mov
enterw
jnp
cmp
fcomp
xor
(bad)
cmp
fcomp
cmp
jmp
(bad)
xor
jle
cmp
jne
mov
jmp
vhsubps
fnstcw
(bad)
mov
pop
xor
mov
jle
cmp
cs
fbld
fcomp
in
outs
sub
outs
push
xor
jmp
rcr
jl
sar
into
mov
jg
xchg
jl
cwde
fidivr
jmp
pop
push
scas
loop
push
lods
(bad)
fstp
int3
pop
leave
mov
dec
mov
clc
arpl
call
pop
std
xor
push
xor
jp
pop
lods
out
mov
mov
loopne
push
test
jne
sub
gs
cmp
mov
sub
rcr
jmp
fstp
fstp
xor
mov
jl
sti
mov
sar
(bad)
mov
push
xlat
jg
dec
inc
dec
mov
fcomp
call
pushf
jmp
addr16
aad
push
jge
cmp
push
mov
push
cmp
and
(bad)
jle
dec
cmc
adc
push
sbb
enter
jmp
ror
dec
(bad)
(bad)
mov
fnstsw
enter
retf
clc
push
mov
enter
sar
ss
dec
rcr
push
fstp
retf
stos
je
jmp
pop
jg
gs
scas
fidivr
gs
fs
sub
dec
jg
gs
sbb
imul
jl
push
mov
ins
ror
out
fmul
(bad)
fcmovu
mov
in
(bad)
aaa
std
fcomp
jl
(bad)
cmp
fcomp
or
fisubr
in
inc
popf
or
dec
pop
ins
pop
fistp
enter
inc
push
mov
ins
int
xor
pop
fst
aam
push
mov
push
jg
and
jbe
das
jge
mov
mov
sbb
aad
mov
pop
or
pop
fbstp
fsubr
mov
int3
push
push
pop
in
jns
pop
in
fcmovbe
ds
aad
cmp
fcom
pusha
mov
mov
addr16
fcomp
iret
(bad)
clc
mov
dec
cmc
sub
popa
pop
scas
push
push
jg
das
push
(bad)
mov
inc
(bad)
xchg
pop
inc
or
mov
cmp
and
pop
cmp
pop
fwait
sub
imul
ins
fcomp
in
push
fcomp
ins
push
nop
push
(bad)
cmp
pop
fcomp
scas
int
mov
lods
xor
in
dec
fistp
push
pop
sub
pop
pop
mov
call
shl
lds
pop
or
fwait
jnp
pusha
xor
dec
loope
fimul
(bad)
cmp
(bad)
cmp
in
sar
in
shl
fidivr
(bad)
add
(bad)
or
(bad)
cmp
(bad)
cmp
in
sar
in
shl
fistp
or
(bad)
in
or
ins
jmp
(bad)
fimul
in
or
push
iret
or
cwde
iret
fcomp
xchg
dec
into
ja
inc
dec
jle
sti
inc
les
cli
es
inc
mov
fcomp
jno
retf
mov
dec
xlat
ja
dec
fst
cmp
jb
shl
jl
dec
lea
sahf
ja
clc
xchg
enter
jns
jg
(bad)
sar
pop
pop
movs
jmp
jg
int3
fcomp
cmps
rcl
cmp
fcmovnbe
and
jg
ins
iret
js
ins
dec
jns
push
dec
addr16
fcomp
fucomi
jns
repz
sbb
outs
out
sbb
in
push
xchg
dec
popa
pop
sahf
repz
int3
sbb
dec
sti
es
into
js
cmp
fcomp
lahf
dec
jnp
cmp
jmp
jle
ins
cmp
pop
(bad)
jb
je
(bad)
pop
pop
mov
int
ficomp
out
pop
(bad)
cmp
retf
fsubp
loope
(bad)
sbb
fst
ins
cdq
mov
in
pop
lock
pop
fstp
pop
(bad)
add
(bad)
or
loope
in
fdivr
mov
cli
xor
int3
in
fcom
cmp
fsub
xor
int3
in
fdivr
cmp
pop
retf
test
ror
dec
mov
fsubr
or
fnclex
leave
or
cli
fidivr
push
push
leave
jmp
jmp
test
push
pop
push
mov
jmp
push
out
fcomp
mov
fstp
fsubr
push
cmp
popa
in
cmp
(bad)
push
cmp
pop
enter
je
pop
outs
jmp
outs
outs
add
into
pop
or
(bad)
addr16
out
ficom
fcmovb
pop
or
ins
out
cmp
outs
in
sbb
cld
xchg
out
pop
out
jmp
cmp
ficom
pop
cmp
loop
adc
je
js
(bad)
pop
pop
xchg
push
push
pop
add
ins
imul
mov
pop
fisub
outs
gs
ins
imul
fbld
cmp
ret
les
fdiv
(bad)
in
add
pop
out
mov
fimul
in
outs
ins
pop
aam
rol
in
outs
outs
data16
fcomp
or
imul
ins
in
in
pop
ins
outs
lea
jno
cmp
fstp
push
mov
scas
pop
cld
arpl
aad
fild
fld
cmc
outs
in
cmp
mov
add
addr16
aad
jle
pop
(bad)
jmp
js
cmp
(bad)
cmc
xchg
pop
cmp
mov
fnstenv
ins
push
fimul
inc
jnp
mov
jmp
push
(bad)
dec
fstp
int3
cli
pop
sbb
mov
in
fs
(bad)
xchg
outs
imul
sar
fldenv
cmp
(bad)
fistp
(bad)
fbld
mov
jbe
nop
dec
fcomp
cmp
and
cmp
test
cmp
or
mov
push
rcr
mov
ins
sbb
cmp
in
or
cmp
push
rcr
jecxz
pop
shl
(bad)
leave
jecxz
faddp
jecxz
pop
cmp
ins
(bad)
cmp
ins
xlat
shl
rcl
(bad)
sbb
xchg
fidivr
ins
(bad)
aas
ins
fcmovu
cmp
fidivr
ins
mov
in
fstp
fstp
ficom
inc
outs
sbb
ret
ds
cs
outs
ins
push
fbld
(bad)
shl
aaa
fld
fimul
ret
(bad)
fidiv
imul
push
test
mov
int3
ins
jecxz
test
push
in
hlt
loop
movs
inc
fmul
fistp
jno
call
mov
mov
jle
push
(bad)
fdiv
ins
sub
in
clc
mov
cmp
cmps
fisubr
cmps
mov
adc
xor
cmp
gs
cmp
(bad)
fdivr
shr
cmp
cs
fsubr
xchg
fcomp
push
jbe
fs
cmp
xchg
xchg
sub
pop
fstp
out
pop
push
cmp
pop
mov
pop
or
test
dec
aad
sbb
fcomp
data16
adc
bswap
or
jbe
xor
dec
lods
leave
sub
push
test
fcomp
adc
mov
sub
sbb
ret
leave
or
fld
loop
popf
js
cli
cdq
fcomp
pop
mov
cmp
xchg
or
ins
inc
cwde
dec
push
mov
add
nop
aaa
and
inc
lods
loope
mov
stos
sub
cwde
int
in
push
aad
in
mov
outs
xchg
leave
sbb
fcomp
sahf
pop
adc
je
ds
cmp
sub
jl
pop
fs
dec
loop
sbb
movs
fcomp
xor
retf
add
xchg
jae
sub
ins
cmp
jae
inc
fwait
adc
and
mov
es
xchg
test
and
cmp
xchg
mov
push
lods
cmp
fsub
xchg
into
adc
nop
cmp
mov
aad
aad
and
xor
fwait
sub
ja
fcomp
repnz
pop
stos
pop
cmp
cmp
add
lahf
pusha
leave
sbb
ds
or
das
shl
fcomp
mov
jb
sbb
cmp
lods
arpl
mov
fst
sub
or
cmps
cmp
cmp
into
repnz
xchg
sbb
(bad)
mov
cmp
xchg
mov
arpl
mov
shl
fcomp
jb
mov
mov
ins
push
inc
xor
loopne
sbb
stos
stos
fcomp
scas
fild
out
cdq
dec
inc
cmp
inc
mov
cmp
sub
mov
mov
repnz
or
xchg
je
jae
push
cmp
nop
mov
and
dec
jg
test
mov
ja
fcomp
lock
and
jmp
push
xchg
pop
ret
aas
ss
jg
add
movs
aad
inc
xor
mov
jno
xchg
arpl
repz
cmp
lahf
dec
pop
add
les
push
nop
ss
jl
sti
fcomp
into
jnp
cli
fwait
(bad)
dec
repnz
sbb
inc
cdq
cmp
sahf
mov
jae
mov
fisubr
fdivr
sti
cmp
pop
cmp
jnp
(bad)
pop
test
xchg
push
mov
mov
cmp
ins
mov
fidivr
pop
ret
pop
mov
mov
repz
cmp
fcomp
cld
fdiv
sar
fsubr
inc
lods
into
pusha
cmp
cmp
std
inc
add
je
enter
fcomp
mov
je
retf
jmp
mov
mov
jge
rcr
in
push
xchg
push
out
fild
mov
fisub
jle
jns
xor
out
cmp
pop
rcl
fisttp
xchg
mov
cwde
jecxz
lock
adc
pop
sbb
and
cmp
mov
cmc
push
add
inc
adc
leave
mov
push
mov
push
ret
(bad)
lods
scas
pop
xor
cdq
fistp
fadd
cmc
fiadd
cmc
aam
das
cmc
fcomp
and
into
inc
sbb
cmc
icebp
(bad)
cmp
pop
(bad)
sbb
adc
repz
or
jmp
inc
add
fcomp
jp
cwde
inc
pop
hlt
mov
repnz
test
cmp
aaa
(bad)
pop
mul
inc
ins
neg
(bad)
into
ja
(bad)
(bad)
neg
fidiv
jbe
lds
in
jl
xchg
icebp
jle
nop
icebp
jb
mov
jbe
mov
push
mov
fcomp
mov
ret
ins
ret
xchg
pusha
ret
cmp
fs
cld
lock
clc
lock
hlt
lock
ret
in
lock
lock
jo
inc
(bad)
ret
int3
lock
cmp
sub
(bad)
jo
ret
ss
ret
mov
pop
inc
stos
jae
inc
xchg
repz
fdiv
inc
sub
inc
sbb
inc
cmp
test
ins
jb
inc
repnz
inc
jb
inc
lods
repnz
popf
jb
rcl
jne
xor
repnz
jecxz
add
push
mov
sub
shl
inc
push
ja
(bad)
push
idiv
les
imul
inc
mov
in
pop
ret
dec
inc
(bad)
jno
inc
retf
inc
sub
lock
jnp
hlt
inc
(bad)
lock
inc
push
jo
inc
cmp
stos
ret
mov
movs
ret
stos
jo
ret
mov
ret
icebp
jo
ret
out
fcomp
repnz
sbb
inc
icebp
jb
inc
cmp
push
ror
cmp
(bad)
cmp
xchg
fisubr
cmc
fcmovnb
sbb
fcomp
inc
ja
inc
mov
not
cmp
jne
add
lds
lds
mov
mov
neg
fimul
jbe
inc
retf
jbe
lds
into
ret
mov
mov
pop
inc
xor
inc
icebp
icebp
fcomp
jno
inc
leave
jno
inc
cmp
and
ins
ret
jo
inc
pop
jo
inc
or
jae
ret
ss
xor
aam
cs
stc
sar
rcr
cmp
aam
shr
faddp
jl
fcomp
repnz
inc
std
jb
shr
adc
cmp
mov
inc
xchg
inc
(bad)
int3
jne
(bad)
jle
inc
inc
pop
neg
fidiv
imul
jne
call
test
adc
jb
push
jb
ret
fcomp
or
fcomp
nop
cmc
fcomp
add
cmp
out
jle
cwde
(bad)
jp
pushf
(bad)
jbe
nop
(bad)
jb
xchg
(bad)
ins
hlt
fcomp
push
hlt
mov
mov
hlt
js
cmp
jl
test
jle
(bad)
hlt
gs
shl
xor
into
hlt
sub
(bad)
pop
and
into
lds
test
sbb
mov
in
cli
(bad)
add
repnz
repz
mul
push
mov
(bad)
mov
cmc
pop
(bad)
jmp
pop
xor
add
stc
inc
cmp
add
imul
lds
mov
div
jae
cmp
fcomp
ss
fcomp
aaa
neg
pop
outs
not
ret
and
inc
cmp
fsub
mov
jmp
mov
out
les
push
inc
adc
lock
pop
lock
inc
mov
in
dec
ret
popf
jo
inc
mov
jge
(bad)
lock
in
sbb
pop
fidiv
ret
leave
lock
jae
ret
cmp
rol
sub
xlat
rcl
rol
repz
shl
fcomp
xor
aam
push
repnz
shl
mov
pushf
int
shl
sub
lock
xchg
(bad)
in
cmc
push
(bad)
adc
repnz
xchg
hlt
je
mov
fcomp
xor
rol
mov
(bad)
(bad)
(bad)
test
push
div
les
test
repnz
inc
repz
(bad)
push
cmps
or
pop
cmps
test
pop
daa
ins
ret
das
fs
fcomp
cmp
fmul
cmp
fsubr
daa
sub
cmps
or
adc
pop
inc
std
and
les
add
jmp
inc
jmp
add
movs
sahf
fcomp
and
shl
test
cmp
inc
(bad)
movs
fadd
movs
rol
and
push
inc
stos
cmps
cmc
fcomp
cmps
cmp
inc
es
add
int
les
inc
pushf
daa
test
cmps
sahf
inc
mov
out
ret
sub
iret
fcomp
adc
mov
mov
ins
inc
jne
es
sub
add
cmp
repz
fnop
mov
push
shr
shl
pop
movs
mov
inc
jp
jg
sar
(bad)
aam
mov
ret
and
inc
test
cmp
fsubr
add
in
pop
cmc
mov
(bad)
xor
mov
sub
fcomp
je
mov
mov
lds
lds
mov
cmp
shr
mov
fadd
mov
movs
fcomp
and
inc
sub
cmp
mov
ffree
clc
and
xchg
sbb
mov
into
inc
shl
in
inc
cdq
and
inc
sub
adc
cwde
or
and
fcomp
and
inc
hlt
movs
rol
and
inc
xchg
cmp
inc
xchg
inc
and
inc
outs
add
es
or
cmps
dec
ret
fs
mov
cmp
(bad)
ficomp
hlt
fcomp
je
inc
shl
lds
jle
ret
popf
ins
xchg
inc
cmp
fdivr
cmp
pop
out
and
inc
in
lahf
inc
mov
retf
inc
inc
movs
ds
pop
and
fcomp
test
jmp
mov
test
in
inc
clc
mov
loope
and
les
cmp
pop
mov
lds
mov
mov
imul
dec
and
sbb
movs
mov
pop
and
aaa
ret
or
ss
inc
lods
cmps
test
sbb
mov
fadd
pusha
(bad)
fisub
cld
fcomp
mov
(bad)
mov
ins
(bad)
mov
sbb
js
fisub
cmp
adc
inc
shl
mov
ret
in
inc
shl
inc
adc
and
inc
or
and
(bad)
adc
add
adc
(bad)
pop
and
pop
and
mov
pop
leave
pop
and
xor
js
aaa
cmc
fdivr
adc
inc
adc
repnz
jne
test
fcomp
aam
ds
shl
xor
cli
je
(bad)
cmp
xchg
ret
xchg
inc
adc
inc
mov
inc
xadd
fdivr
enter
pop
shl
fstp
jb
lds
sub
popa
adc
cli
sar
fisub
mov
test
fmul
pop
cmc
mov
(bad)
cmp
scas
les
icebp
push
lds
repz
repz
jb
rcl
fcomp
movs
in
fcomp
cli
inc
int
fld
out
and
les
and
(bad)
mov
cmp
fcomp
movs
int3
fcomp
and
shl
mov
mov
ror
dec
ror
inc
js
xor
sar
neg
pop
movs
mov
icebp
movs
mov
test
shl
inc
jno
jne
into
es
es
es
in
cmps
movs
inc
loopne
in
ret
mov
mov
test
es
inc
mov
in
mov
cmps
jne
dec
es
ret
pop
inc
je
ins
inc
in
sub
pop
cmps
cmp
adc
jge
push
daa
icebp
fcomp
inc
ret
jg
pop
ret
jo
sub
fs
ret
xchg
cmps
cmp
cmps
add
xor
pop
ret
sub
neg
fisub
rol
inc
jmp
mov
inc
mov
mov
mov
mov
jns
push
and
fcomp
inc
les
push
inc
push
and
ins
les
and
inc
cmp
adc
and
enter
fisub
xlat
inc
out
mov
mov
xchg
inc
movs
mov
dec
inc
inc
mov
movs
fcomp
mov
xchg
mov
in
(bad)
mov
mov
inc
(bad)
jnp
sub
and
(bad)
or
mov
in
(bad)
aam
hlt
inc
retf
(bad)
stc
and
inc
in
mov
mov
inc
mov
add
nop
(bad)
test
in
inc
fsub
jb
inc
and
js
sub
push
mov
add
(bad)
cs
ins
(bad)
fidiv
rcr
and
retf
cmc
icebp
mov
loope
push
xchg
mov
pop
sahf
je
(bad)
sub
outs
inc
jge
ret
les
not
lds
not
lds
test
jl
int3
lds
push
fidiv
ins
inc
lahf
daa
ds
adc
xor
cmps
push
ret
cmp
pop
inc
cs
xchg
fcomp
ins
ret
and
jmp
(bad)
fdivr
inc
cli
mov
xchg
inc
stos
mov
(bad)
fcomp
sbb
dec
and
les
and
ror
in
fcomp
jb
pop
mov
and
inc
mov
aam
arpl
cmp
fcomp
push
test
mov
inc
je
pushf
ret
mov
cmps
icebp
dec
ret
inc
ret
jnp
xchg
jno
ret
fcomp
icebp
ins
inc
xor
inc
cli
jno
inc
cmp
adc
jmp
jno
inc
fdiv
ret
xor
icebp
fcomp
(bad)
icebp
cs
push
lock
in
mov
inc
sub
jae
rcl
rcl
iret
mov
cmc
nop
(bad)
cmp
lods
into
pop
daa
push
ret
bound
ins
ret
sahf
daa
sub
sbb
and
ret
adc
imul
test
(bad)
or
and
xor
inc
dec
inc
jae
xlat
fcomp
in
in
(bad)
cmp
rcr
in
fcomp
ret
out
pop
sbb
ins
inc
dec
or
test
daa
and
in
xor
mov
daa
mov
inc
dec
inc
jae
rcr
sub
ret
mov
dec
ret
ficomp
mov
(bad)
cmps
out
xchg
adc
clc
fiadd
call
lods
mov
pop
and
jnp
leave
and
jmp
pop
mov
adc
fsub
shl
dec
pushf
clc
faddp
mov
sub
movs
ins
jmp
xlat
ins
mov
(bad)
jne
mov
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
dec
pushf
mov
jne
mov
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
mov
push
leave
arpl
mov
push
in
ins
or
xlat
fdiv
jecxz
lods
cmc
cmc
push
test
arpl
sub
jb
fdivr
dec
pop
aaa
or
and
rep
jp
sbb
xlat
cmp
push
stos
nop
shl
xchg
imul
imul
cmp
push
xchg
clc
je
ins
mov
xlat
mov
ja
xchg
shl
inc
ins
or
xlat
push
jns
mov
cwde
xor
inc
lods
leave
mov
out
push
lods
jo
dec
dec
push
adc
loopne
push
call
mov
and
xchg
push
sbb
dec
mov
mov
loop
in
stc
mov
mov
jns
pop
xchg
mov
push
xor
lods
rcl
xlat
pusha
or
in
enter
xor
imul
mov
mov
mov
mov
ins
or
div
push
and
outs
(bad)
push
in
int
mov
in
dec
int3
mov
xchg
pop
dec
mov
jae
and
mov
or
pop
add
mov
xchg
jae
je
or
push
xor
fwait
xchg
clc
repz
repz
cmps
popa
(bad)
cs
mov
pop
and
retf
jbe
sub
adc
push
cwde
sub
push
test
pop
push
test
inc
fisubr
cwde
inc
lock
lods
gs
sub
push
and
gs
cmp
jl
add
and
ret
cmp
and
ins
ja
adc
cs
inc
jne
xchg
arpl
or
mov
call
sbb
cmp
push
hlt
or
(bad)
mov
test
sbb
std
test
push
out
(bad)
mov
pop
xor
out
xlat
das
xchg
(bad)
pop
retf
push
(bad)
loop
mov
out
push
stos
sbb
cmc
cmp
shr
sbb
test
shl
sbb
lods
test
lods
repnz
cwde
lods
repnz
cwde
lods
repnz
cwde
lods
repnz
cwde
lods
repnz
cwde
lods
repnz
cwde
lods
repnz
cwde
lods
repnz
cwde
lods
repnz
cwde
lods
repnz
cwde
lods
repnz
cwde
lods
repnz
cwde
lods
repnz
cwde
lods
repnz
cwde
lods
repnz
sub
jne
cwde
inc
jae
call
and
dec
jnp
(bad)
push
data16
push
fs
xor
pop
outs
xor
pop
ins
xor
add
jmp
je
or
jg
xchg
call
fstp
push
jb
or
into
fsub
pop
push
hlt
xor
dec
in
sub
call
pop
mov
lds
push
ja
lods
into
inc
cwde
lods
repnz
call
data16
repnz
mov
lock
movs
into
jb
add
jo
call
data16
lock
jle
repnz
pop
or
xchg
jae
or
ficomp
in
cmps
xchg
xlat
sub
shl
repz
adc
ins
movs
mov
mov
mov
popa
out
xlat
push
mov
jnp
mov
scas
lods
jne
sub
mov
xor
bound
xchg
int3
sbb
cmp
cdq
push
sub
daa
out
in
sub
dec
xor
jae
aaa
sub
jecxz
nop
xchg
xchg
or
xchg
or
xor
xlat
rcl
and
pop
mov
xchg
xlat
mov
push
ja
xor
sub
xchg
clc
or
xlat
pop
daa
jne
inc
loop
xlat
xor
sbb
or
xlat
ins
or
cmc
inc
(bad)
xchg
mov
or
mov
scas
xchg
mov
shl
xlat
ins
or
xchg
xchg
repz
or
inc
imul
xor
aam
clc
call
sub
retf
or
mov
push
xor
jg
stc
push
fnstenv
repnz
mov
stc
jge
xor
push
jae
dec
pop
inc
rcl
push
xchg
jae
pusha
cmc
dec
imul
fsub
sahf
mov
push
xlat
mov
mov
inc
mov
jecxz
in
sar
mov
cdq
imul
aas
out
adc
test
lods
js
add
repz
mov
imul
cdq
sub
xchg
dec
imul
adc
imul
cmps
ja
(bad)
sti
imul
stos
imul
rcr
bound
stos
test
inc
or
gs
mov
scas
dec
rcl
sub
es
adc
out
mov
inc
pop
push
test
xor
inc
pop
mov
in
jo
test
pop
xchg
scas
int
adc
inc
push
pushf
sub
jo
scas
int
cwde
scas
dec
jge
daa
dec
aam
test
dec
rcr
mov
ret
pop
sbb
dec
rcr
(bad)
push
call
mov
or
adc
inc
rcl
add
popf
cmps
bound
sub
push
sbb
inc
dec
xchg
cwde
jo
mov
inc
sbb
and
stc
mov
xchg
pop
call
jae
sub
sar
loop
sbb
sub
leave
cmp
bound
mov
aam
sub
hlt
mov
out
mov
repz
cwde
test
dec
jae
test
inc
in
cwde
jo
sub
cmc
push
xchg
arpl
mov
shl
sahf
in
loope
stos
cmc
arpl
rcl
xchg
push
push
push
movs
xlat
sub
cmc
iret
mov
arpl
ror
mov
jecxz
mov
iret
or
sar
push
xor
mov
jecxz
xchg
cmc
and
sub
adc
nop
pop
adc
sbb
xor
out
mov
pusha
or
test
pop
xor
outs
mov
iret
mov
test
push
xchg
ret
pop
mov
or
xor
jne
sub
mov
iret
mov
in
push
xor
mov
iret
mov
pop
ret
(bad)
xchg
xlat
add
aam
sub
fistp
jecxz
popf
stos
jge
arpl
cmc
rcl
xor
sub
or
sub
enter
xchg
inc
push
cs
push
jb
mov
loope
push
ins
arpl
sbb
popa
push
sahf
xor
jae
sub
lock
and
sbb
push
leave
dec
mov
cdq
push
ins
or
xlat
or
mov
push
or
shr
aam
imul
rcl
in
jle
leave
jecxz
call
sub
jb
pusha
in
outs
imul
aas
mov
mov
out
push
xlat
mov
jno
imul
push
jmp
or
arpl
repz
cs
retf
loope
imul
clc
cs
ins
or
xlat
std
ret
dec
ret
adc
imul
and
push
push
xor
sub
nop
jns
scas
sbb
das
push
sub
push
mov
test
xchg
stc
ret
and
or
loopne
xlat
xchg
jns
mov
jns
iret
sbb
mov
xchg
stc
and
xor
jae
stc
aaa
xor
dec
shl
push
mov
sbb
imul
ss
xchg
jns
sub
mov
(bad)
dec
push
sbb
dec
enter
and
add
or
repz
sub
jae
mov
xchg
rol
xchg
js
in
sbb
mov
mov
gs
aaa
xchg
xor
gs
fwait
push
sti
call
push
fidiv
mov
jp
mov
add
fwait
push
mov
fld
push
(bad)
sub
in
xor
dec
fild
out
cmc
sbb
in
fwait
push
call
cmp
les
pop
js
mov
dec
sbb
fs
inc
jle
das
and
outs
(bad)
mov
mov
lock
div
mul
shl
mov
les
lds
test
jp
mov
cmc
inc
xor
and
inc
lds
dec
add
aaa
adc
aam
(bad)
mov
inc
adc
gs
aaa
cmc
cwde
jg
dec
fiadd
int3
aaa
movs
shl
push
aaa
add
jo
cld
sbb
lods
pop
jp
aaa
add
adc
adc
mov
and
jnp
jae
popf
push
xor
cmp
mov
add
xchg
aaa
repnz
sbb
jl
mov
jle
mov
ror
xchg
ffreep
sbb
jle
inc
inc
sub
pop
adc
add
stc
ins
mov
jge
dec
xlat
mov
xchg
jmp
push
shr
jns
xlat
test
adc
xchg
rcl
pop
xchg
dec
call
(bad)
push
adc
(bad)
ins
mov
xlat
call
mov
int3
loopne
push
icebp
out
in
xchg
leave
jmp
or
jns
das
out
cmp
in
pop
mov
mov
mov
xlat
ins
or
mov
xchg
or
lds
pop
cmps
mov
push
sub
jo
sub
fbstp
imul
and
push
push
mov
sub
xor
popf
(bad)
or
int
xlat
xlat
adc
push
test
dec
pop
mov
imul
stc
add
xor
fsubr
stc
fnstcw
xor
cmc
aad
stc
(bad)
fsub
test
sbb
mov
jge
retf
sub
jmp
pop
arpl
int
xlat
xor
aad
js
inc
xchg
jae
sub
dec
push
mov
mov
retf
ins
repz
mov
in
stc
xchg
xlat
mov
div
xchg
sub
imul
mov
iret
add
sbb
sub
mov
imul
adc
push
pop
xchg
int3
jge
sbb
ins
cmp
shl
push
repnz
push
div
jge
inc
xchg
leave
(bad)
out
leave
lock
mov
push
ja
jns
cld
pop
sti
shl
pop
jns
rcl
clc
dec
out
mov
jg
push
fisub
ds
pop
pop
adc
repnz
push
jno
cld
push
push
push
jge
jb
jle
jl
int3
mul
jo
jg
jnp
repnz
jge
push
push
fdivp
hlt
mov
jg
repz
mul
push
inc
push
paddsw
pop
mov
loop
cld
adc
dec
aad
outs
(bad)
fdivr
arpl
adc
jo
xor
xor
ja
jle
jb
repz
xchg
push
fdivp
adc
popa
inc
mov
dec
lds
lds
dec
lds
lds
dec
lds
lds
dec
lds
lds
dec
lds
lds
dec
lds
lds
dec
lds
lds
dec
loopne
addr16
out
xchg
jno
jl
lds
dec
out
cmps
jl
popa
sub
loopne
sbb
xchg
mov
mov
mov
mov
mov
mov
mov
in
jae
int3
es
sbb
dec
out
push
dec
push
xchg
xchg
in
push
dec
fld
jae
lds
bound
es
out
mov
fs
or
cmp
sar
or
sbb
inc
(bad)
out
push
push
cmp
cmps
dec
dec
mov
xor
mov
fsub
ins
mov
push
push
cwde
fild
dec
in
jns
mov
pop
mov
and
dec
pusha
test
dec
sti
ret
inc
gs
fbld
data16
mov
sub
mov
lds
mov
jmp
sbb
cmp
cmps
pop
sbb
popa
test
aad
jle
xor
js
test
cmps
ficomp
inc
loope
cmp
inc
fcmove
and
arpl
xor
cmp
mov
jmp
mov
dec
dec
fs
or
lds
cmps
mov
jl
jno
ret
mov
lds
pusha
in
out
jo
movs
push
add
ds
mov
sub
mov
lds
cmp
out
mov
xchg
leave
lds
xchg
aas
sti
leave
mov
and
out
pop
sbb
lds
push
cmps
xchg
jns
and
addr16
xchg
push
add
mov
cmp
je
push
adc
mov
add
or
test
add
pushf
xor
(bad)
mov
out
xchg
push
jle
pushf
iret
addr16
sti
dec
sahf
in
mov
inc
push
ds
cmps
dec
sbb
or
mov
lds
jg
push
cwde
pop
fucom
inc
lds
out
inc
pop
mov
mov
inc
mov
leave
out
mov
(bad)
pushf
cmp
mov
lds
imul
lahf
push
inc
lds
data16
sti
mov
mov
lds
pusha
outs
out
out
out
mov
inc
lds
pusha
gs
out
out
fs
sub
test
dec
out
mov
mov
inc
lds
pusha
jecxz
out
rcr
dec
mul
sub
(bad)
dec
popa
test
dec
jg
out
pusha
test
mov
ja
lds
inc
add
inc
lds
pop
fs
(bad)
les
adc
lods
cmps
leave
jp
pop
mov
inc
inc
data16
lds
dec
lock
enter
sbb
lds
leave
inc
inc
(bad)
jg
xlat
out
xchg
std
jbe
mov
add
push
cwde
pop
test
cmc
xor
dec
out
cmps
dec
cwde
pop
test
cmc
inc
out
cwde
add
cwde
pop
test
cmc
xor
dec
out
cmps
dec
push
inc
test
pop
ins
pusha
imul
rcr
inc
(bad)
cmps
jg
xlat
in
xchg
mov
sub
in
es
out
mov
ret
gs
ds
fisttp
and
shl
mov
mov
mul
repz
cmps
mov
ret
ins
push
and
ins
mov
xchg
lods
xchg
loopne
dec
mov
out
mov
xchg
sbb
push
xchg
xchg
imul
dec
or
xchg
jmp
add
jmp
push
mov
push
cmps
pusha
jp
icebp
in
je
scas
sub
jo
rol
cli
xor
xchg
clc
dec
sub
rcl
ins
or
pop
mov
mov
sahf
xchg
xlat
xchg
js
or
(bad)
sub
ret
in
jns
fst
push
outs
push
sbb
sub
or
cli
dec
rcl
mov
or
push
pop
icebp
jmp
ins
or
cdq
push
mov
xchg
mov
imul
int
cli
jmp
xlat
sbb
imul
cmp
push
addr16
ja
xor
loop
xchg
jns
sub
fnstenv
fst
clc
cli
mov
arpl
mov
out
mov
jecxz
repz
sub
push
imul
jl
dec
jecxz
repz
mov
imul
xlat
add
retf
push
xor
mov
loopne
dec
idiv
push
adc
lods
into
ror
mov
arpl
lods
clc
mov
pop
fst
sbb
imul
xor
mov
cmp
xchg
jae
sub
(bad)
scas
lods
cmc
shr
repz
push
sub
repz
(bad)
sub
sbb
sbb
mov
cdq
jo
sbb
pop
jnp
lods
repz
lods
(bad)
sar
mov
jp
push
call
cdq
pop
stc
cmp
mov
in
mov
cdq
(bad)
cmp
sbb
jo
call
or
ja
adc
js
pop
cdq
popa
mov
cwde
test
cmp
and
xchg
jo
sbb
ja
mov
and
call
or
and
xchg
fsubr
pop
cdq
cmc
mov
cmp
sub
pop
lods
sbb
jae
xor
loopne
test
jae
sub
cs
add
call
rol
xadd
sub
push
rcr
cs
or
sbb
shr
sar
cs
or
xchg
sub
rcl
rcr
cs
xadd
sub
ror
or
sub
ror
cs
cmp
or
rcr
sar
sub
inc
adc
cs
or
popf
sub
cs
xadd
sub
cs
pop
inc
popf
sub
cs
push
inc
adc
ror
sar
push
repz
(bad)
pop
pusha
pusha
sbb
mov
sbb
cmp
push
(bad)
pop
pop
dec
sbb
and
sbb
sar
scas
pushf
cmp
aaa
inc
jge
popf
and
cmps
mov
jnp
mov
inc
sbb
out
and
stos
ins
cmp
sub
mov
ss
test
jmp
cmp
mov
mov
ins
int
mov
lods
xchg
add
aas
inc
js
xchg
fsub
dec
sub
xlat
out
add
mov
adc
and
into
mov
(bad)
sub
pop
inc
fld
scas
and
lods
dec
sar
scas
jecxz
into
or
mov
cvtps2pd
sub
adc
js
scas
inc
jp
adc
mov
sbb
mov
push
push
scas
sub
in
nop
sti
mov
aad
add
lods
xchg
add
push
inc
stc
scas
imul
mov
inc
pop
sub
call
pop
aaa
cdq
daa
cmp
jl
lods
test
aas
lods
add
out
inc
add
stos
fisubr
cmp
add
fcom
inc
fwait
lods
outs
and
scas
jmp
ins
mov
mov
sub
mov
rcl
pop
fucomip
add
sub
mov
sub
push
fidivr
add
push
sbb
(bad)
add
sub
mov
sub
mov
rcl
pop
fucomp
add
cmp
test
add
xor
test
push
xor
test
push
cs
cli
jmp
xor
mov
ins
or
pop
pop
sub
jge
imul
cmp
xchg
xchg
mov
sub
(bad)
shr
into
in
test
inc
cmp
mov
push
lods
fcom
iret
aam
mov
rol
sub
mov
fcom
call
aaa
das
jns
sub
mov
xor
inc
jns
mov
dec
popf
fcom
nop
add
pop
(bad)
pop
cli
xchg
or
sahf
xchg
mov
jmp
(bad)
lods
out
sti
sbb
das
ret
stos
jmp
(bad)
lods
out
sti
sbb
mov
(bad)
mov
sub
lods
out
sti
sbb
cs
stos
jmp
or
pop
(bad)
pop
xor
lods
dec
jne
sbb
ret
test
mov
inc
mov
scas
adc
lods
mov
sbb
pop
fs
ror
lahf
ds
sub
jae
jge
(bad)
ficomp
ins
or
mov
mov
xlat
ins
mov
push
sbb
push
leave
dec
ret
push
jmp
ins
mov
push
sub
icebp
mov
scas
lods
cmc
mov
xchg
sub
dec
jl
xchg
xlat
adc
data16
rcr
sub
jmp
add
movs
sub
jmp
je
imul
jp
push
and
cmp
dec
ret
mov
jmp
adc
arpl
ins
or
xlat
cdq
push
jecxz
in
stc
xchg
xlat
mov
and
xchg
rcl
(bad)
sub
jecxz
sbb
jecxz
xor
adc
fcomi
jmp
stc
retf
xor
lods
jo
sub
push
ins
sub
packsswb
xor
dec
dec
mov
jmp
ror
iret
pusha
icebp
pop
and
jecxz
ja
xchg
mov
lods
dec
ins
lds
stos
push
xchg
push
imul
lods
js
unpckhps
xchg
mov
and
lods
in
stc
mov
jae
int
rcpps
push
xchg
jae
dec
sbb
imul
mov
loop
xchg
clc
and
xchg
repz
pusha
xchg
mov
jge
inc
ins
outs
sti
mov
push
ret
test
call
sbb
mov
test
call
cmp
(bad)
sbb
mov
stos
dec
shr
push
sub
mov
and
outs
lahf
lods
enter
out
sub
xchg
loop
imul
or
sub
loopne
sbb
fld
pop
and
sub
hlt
rcl
xor
arpl
jb
fisttp
push
imul
repnz
int
sub
mov
mov
je
xor
xor
xor
sbb
mov
retf
mov
sbb
test
mov
rcr
or
test
mov
out
fild
shr
call
mov
lock
repnz
or
sbb
arpl
shr
sub
stos
call
cli
or
test
cmp
cld
imul
mov
mov
inc
push
cmc
outs
cli
or
xchg
sbb
jb
cli
mov
sub
sub
and
repnz
test
aaa
or
or
sub
test
call
out
loop
imul
jle
xchg
push
xchg
inc
imul
or
sub
leave
xor
pop
(bad)
jb
fisttp
shr
sahf
repnz
xor
or
sub
outs
xchg
inc
mov
sub
mov
stos
inc
imul
inc
xchg
sub
mov
test
cs
sbb
mov
fwait
sahf
stos
jae
mov
mov
sbb
aaa
xchg
jo
sub
jb
loopne
sbb
int
sub
leave
repnz
mov
and
mov
movs
daa
dec
imul
mov
sub
mov
fdiv
mov
bound
cli
or
mov
lock
repnz
stos
enter
cld
cmp
push
xlat
sbb
enter
lock
rcl
dec
inc
xchg
and
mov
cli
or
sub
xor
push
pop
dec
test
ret
repnz
rcl
push
pop
dec
push
push
loope
inc
mov
mov
pop
cmp
pop
sub
test
mov
xlat
pop
retf
and
jb
fisttp
in
or
repnz
jb
out
mov
mov
repnz
pop
leave
push
imul
jns
mov
sub
mov
popf
movs
cld
addr16
or
sub
or
pop
(bad)
icebp
sub
mov
add
cld
push
test
or
mov
fistp
repnz
mov
call
test
mov
sub
jl
push
pop
ja
pop
imul
scas
push
hlt
lock
inc
adc
out
test
jo
pop
adc
fsubr
test
(bad)
mov
jl
inc
imul
sbb
xchg
xlat
pop
sub
push
aas
das
lods
push
shr
jns
xlat
imul
adc
xor
xchg
mov
shr
cs
jae
ins
xchg
aaa
push
scas
sbb
stos
in
int3
xchg
xlat
sbb
out
xchg
lods
ret
xor
sub
out
jmp
xchg
xchg
jmp
pop
adc
in
or
ins
or
xchg
inc
rcl
mov
test
sbb
xlat
mov
mov
xlat
fs
iret
pusha
mov
mov
xchg
jns
les
mov
dec
or
loope
or
cmp
dec
push
push
pop
jns
or
sub
or
stc
push
iret
sbb
dec
mov
out
inc
sub
xchg
xlat
and
sbb
push
in
push
xchg
xlat
shl
ins
jb
push
jecxz
and
and
ins
adc
call
jmp
in
jo
lods
xchg
mov
repz
sub
jns
into
sbb
(bad)
je
jns
mov
mov
imul
cwde
inc
cmps
sub
js
mov
out
xor
add
push
mov
dec
imul
(bad)
adc
lods
jne
sub
test
dec
adc
push
outs
call
mov
es
in
mov
sti
int3
(bad)
fs
adc
fldenv
in
les
in
jle
pusha
into
add
in
call
pushf
add
cld
in
inc
enter
cmps
jl
add
sbb
add
and
enter
adc
(bad)
adc
cmps
pop
jmp
(bad)
(bad)
adc
scas
stos
fdiv
cld
in
jmp
adc
xor
and
nop
add
inc
add
push
adc
dec
cmps
ins
xchg
int3
and
test
add
mov
(bad)
mov
or
mov
hlt
fldcw
sub
adc
loopne
and
nop
add
inc
and
jmp
sub
fs
adc
in
ins
(bad)
fyl2x
adc
jl
jmp
adc
es
jo
inc
scas
inc
pop
jl
ret
jmp
adc
fcos
pop
fstp
pop
sti
int3
call
pushf
mov
sti
int3
call
cmp
xchg
test
pop
enter
fnstcw
push
or
cmps
add
(bad)
cld
sub
adc
fisub
imul
sub
loopne
fcos
pop
rcr
lods
mov
and
neg
and
adc
es
popf
cmp
(bad)
call
or
sti
int3
xchg
add
ja
inc
into
add
jg
jl
add
push
scas
inc
pop
jl
(bad)
jb
imul
sub
cmps
cmp
pop
jl
(bad)
jl
adc
fldln2
adc
pop
jl
inc
fisub
jmp
cmps
sub
pop
rol
mov
adc
mov
push
call
mov
or
ins
lds
or
mov
mov
bound
xchg
xchg
data16
xchg
mov
jp
adc
jae
cmps
mov
and
sahf
or
idiv
pushf
ret
jae
mov
addr16
arpl
sub
or
ja
inc
inc
jl
jg
jl
dec
and
sbb
xchg
add
fstp
adc
pop
and
inc
adc
fs
xchg
call
bound
cdq
add
inc
out
inc
les
fadd
adc
int
es
mov
sub
es
in
pop
enter
cmps
jl
(bad)
cld
mov
adc
pop
jl
(bad)
cld
mov
adc
pop
jl
sar
ins
(bad)
fpatan
adc
pop
fstp
addr16
int3
add
fcos
sub
adc
clc
pop
(bad)
pop
jl
mov
or
in
add
adc
xor
test
add
ret
popa
imul
add
sub
rcl
pusha
outs
fs
out
push
adc
out
cwde
movs
mov
fist
sbb
test
adc
cmps
ins
fidivr
dec
jmp
mov
or
cdq
test
imul
ins
mov
xlat
in
rep
xlat
ins
or
test
mov
push
ins
mov
push
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
xchg
repz
push
ins
or
test
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
sub
jmp
xlat
ins
mov
xlat
ins
mov
xlat
xchg
repz
sub
jmp
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
jge
xchg
(bad)
jge
xchg
jge
xchg
jge
xchg
jge
xchg
jge
xchg
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
mov
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
sub
shl
repz
or
ins
xor
adc
ins
mov
dec
out
mov
mov
sub
xchg
dec
popf
jmp
push
scas
ins
or
xlat
sbb
enter
int3
inc
sar
outs
or
hlt
push
push
xchg
or
jb
cld
stc
dec
imul
jmp
xlat
ins
or
popf
sbb
push
ss
rcl
and
dec
ror
push
and
adc
jmp
xchg
out
cmp
sub
dec
test
xor
sub
sbb
sub
out
push
xlat
mov
jb
(bad)
out
jns
mov
xor
xchg
xlat
xchg
js
in
or
xlat
mov
arpl
xchg
jns
sub
fst
jae
int
inc
push
sub
je
arpl
fs
hlt
mov
imul
jne
push
xor
push
in
rcl
xlat
out
push
push
mov
lods
jo
adc
js
ins
xchg
jae
sub
xchg
and
jecxz
out
push
xlat
mov
icebp
test
xchg
jae
dec
popa
pop
imul
push
and
or
xor
mov
sbb
xchg
dec
adc
sbb
scas
imul
push
push
fisttp
repnz
lods
xchg
mov
dec
rcr
aaa
jmp
push
push
fisub
pushf
cmc
jb
xchg
aaa
lock
jle
js
mov
shl
aaa
jo
push
and
int3
jmp
inc
push
jmp
retf
loop
jne
adc
lahf
mov
not
ins
es
xlat
ins
in
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
in
int3
xchg
xlat
push
sub
xchg
push
das
lods
push
shr
jns
xlat
rcr
xchg
mov
jae
and
(bad)
lds
int3
(bad)
mov
or
push
push
jno
xor
add
jmp
jo
mov
mov
stc
inc
sub
xchg
or
or
in
xor
mov
mov
mov
scas
xchg
xlat
push
ror
xlat
ret
mov
sub
pop
sub
int
and
and
push
mov
dec
and
mov
lods
clc
xchg
push
xchg
mov
xor
nop
jns
add
xchg
ss
jns
jmp
inc
mov
lods
in
jns
test
add
sbb
cmc
mov
push
in
add
mov
xchg
jns
mov
jns
add
push
or
mov
arpl
popf
xchg
mov
pop
arpl
adc
mov
hlt
jl
or
lods
mov
outs
arpl
push
adc
xor
repz
sub
push
push
jmp
mov
and
jo
shl
or
test
mov
das
sub
retf
scas
xchg
leave
push
mov
mov
bound
imul
adc
imul
pcmpeqw
mov
push
in
mov
cld
pop
lahf
cmp
mov
dec
or
out
push
call
jl
div
fs
mov
out
jl
mov
stc
push
sub
pop
inc
xor
push
mov
push
loop
sbb
(bad)
sbb
call
cmp
(bad)
jmp
shl
loopne
push
mov
dec
pop
test
repnz
cmp
ja
popa
repz
leavew
in
loope
(bad)
fstp
pop
xchg
das
xlat
push
inc
int3
dec
std
xchg
add
test
dec
into
pop
push
push
(bad)
sbb
pop
ja
dec
add
neg
mov
ins
dec
jp
inc
pop
fist
(bad)
lock
push
icebp
push
nop
jne
arpl
push
js
add
ret
lock
enter
jge
mov
ins
fistp
dec
push
out
retf
mov
pop
sti
xchg
rcl
rcl
xchg
dec
dec
jg
push
jb
mov
lock
push
sahf
in
jp
mov
(bad)
mov
push
ds
push
mov
jmp
push
outs
icebp
lock
push
jle
dec
shl
int
dec
retf
xchg
retf
adc
push
mov
shl
popa
jl
daa
repz
push
add
jp
mov
popa
call
in
ja
(bad)
enter
je
mov
bound
mov
out
out
in
push
jne
push
sar
xchg
dec
pop
out
jge
ror
inc
icebp
push
cmp
pop
iret
mov
push
jp
mov
neg
jbe
std
xchg
mov
daa
nop
retf
popa
shl
xchg
push
dec
neg
in
push
(bad)
es
clc
les
dec
clc
mov
and
push
jg
int
jno
dec
push
jo
dec
leave
(bad)
nop
push
sar
retf
xchg
addr16
pop
push
xor
pop
mov
out
js
xor
std
xlat
mov
loopne
pop
ds
push
mov
out
retf
stos
call
loop
dec
scas
jbe
push
xor
jmp
ds
fimul
data16
sbb
mov
loope
fnstsw
je
aam
data16
cmp
addr16
jg
jle
iret
arpl
(bad)
call
sbb
out
jg
cli
lods
inc
push
pop
mov
loope
std
adc
dec
push
mov
cmp
ins
pop
pop
mov
dec
cmp
jle
xlat
sar
push
iret
sar
int
dec
dec
sar
into
rcr
adc
stos
pop
call
jbe
retf
cmp
sub
and
int
adc
cld
nop
dec
enter
jb
cmp
push
sub
js
mov
in
repnz
loope
neg
dec
pop
push
sub
jnp
dec
stos
out
dec
push
call
sar
dec
enter
aam
xchg
inc
push
jg
dec
out
xchg
fidivr
nop
sti
jmp
out
stc
sar
dec
dec
push
jg
dec
ror
or
push
sti
xchg
dec
ds
mov
jp
cmp
cld
push
mov
dec
loope
fs
shl
cmp
idiv
xor
call
mov
jg
dec
dec
ja
xchg
cli
fsub
loop
repnz
jg
mov
or
add
int
ds
xlat
mov
lock
mov
dec
(bad)
xchg
int3
(bad)
cld
dec
sar
dec
or
adc
ja
fs
push
retf
ins
or
pop
fadd
xchg
dec
pop
icebp
popf
push
retf
mov
push
out
retf
or
push
jo
fwait
push
rcl
into
dec
push
jge
jp
mov
out
cmp
adc
push
sti
adc
sar
nop
retf
adc
sbb
add
mov
push
lock
pop
jg
shl
(bad)
fsub
outs
repnz
or
sar
loop
rcr
out
cmp
dec
inc
sar
dec
inc
fadd
xchg
dec
jmp
push
mov
popa
jle
cmp
call
sub
sti
mov
loop
or
xchg
out
(bad)
or
aad
into
jp
mov
hlt
cmc
sbb
push
jge
dec
push
bound
(bad)
sar
adc
cmc
xchg
neg
adc
jp
fs
(bad)
data16
xor
pop
jns
pop
out
gs
ror
loop
push
mov
hlt
xlat
xor
repnz
mov
push
push
sti
adc
rcr
out
arpl
(bad)
sar
dec
into
jnp
bound
nop
into
dec
add
shl
inc
xchg
sub
push
shl
jns
mov
pop
sbb
push
inc
iret
or
adc
jl
inc
sar
adc
sbb
push
stos
loope
sar
or
jmp
push
cmps
push
ja
pop
adc
pop
inc
(bad)
cmp
xchg
adc
sti
xchg
(bad)
nop
sti
enter
jg
cmp
jp
in
out
fst
loope
fmul
js
cdq
std
(bad)
aas
and
rol
fcom
jg
fmul
cld
movs
into
shl
jl
dec
shr
jp
ds
inc
mov
loope
(bad)
aas
(bad)
repnz
out
cld
push
mov
out
jno
cli
(bad)
mov
push
not
out
jge
and
jge
test
dec
dec
neg
loop
shr
stos
call
arpl
imul
outs
push
cmps
push
dec
sar
or
pop
jnp
iret
push
cld
push
iret
pop
jg
dec
jg
adc
in
jle
push
shl
adc
call
inc
dec
imul
loopne
push
pop
outs
enter
sti
aad
shl
xor
daa
ds
js
rcr
out
bnd
push
push
xor
out
and
ror
out
ins
and
or
rcr
popa
push
inc
shr
jge
lahf
loop
jne
dec
jns
es
sti
push
retf
adc
push
cld
sti
addr16
(bad)
xchg
int3
pop
push
xchg
add
push
scas
repz
popa
js
xchg
xchg
(bad)
cdq
repnz
cmps
jmp
jecxz
shl
enter
pop
inc
adc
bound
cmp
je
out
rcl
dec
pop
not
dec
call
cld
nop
int3
ret
cld
mov
sar
sahf
dec
push
out
dec
push
(bad)
gs
sti
sahf
dec
push
scas
adc
imul
or
inc
out
pusha
out
xlat
pop
cmp
pop
aas
out
or
push
icebp
aad
loope
jmp
bound
cdq
loopne
pop
and
jno
mov
adc
loopne
(bad)
jmp
jno
pop
sar
into
lds
push
inc
sbb
xchg
int
ja
pop
fisub
add
out
mov
push
ror
inc
jno
ds
inc
imul
push
ret
loope
pop
mov
arpl
and
dec
inc
test
dec
jmp
cli
loop
jo
push
retf
jl
sar
iret
push
lock
cld
adc
sar
dec
inc
mov
jg
xor
fist
cmp
pop
push
jge
fs
cmp
push
popf
jl
rcr
div
aad
ins
clc
in
(bad)
jp
mov
ja
loope
pop
mov
xlat
dec
daa
sbb
push
jge
dec
jmp
xchg
(bad)
jp
mov
xor
jle
repnz
push
xchg
into
dec
repnz
add
xchg
fsincos
sbb
fsub
sbb
push
lock
pop
aam
adc
adc
xor
xchg
xchg
adc
ds
rcl
pop
fucomi
ror
popa
pop
inc
mov
dec
dec
mov
ja
pop
mov
pop
addr16
push
jle
dec
push
ficom
movs
dec
inc
(bad)
jbe
pop
cmp
ret
sbb
rcl
adc
adc
mov
or
leave
cld
push
adc
cwde
dec
mov
hlt
push
push
cld
xchg
dec
pop
repnz
push
cli
dec
push
gs
(bad)
mov
fidivr
pop
pop
sar
push
cld
rcr
bound
mov
jp
cmp
mov
mov
(bad)
dec
not
ins
arpl
sahf
repz
xchg
sti
jecxz
daa
add
push
sar
dec
dec
repz
in
sar
dec
aas
call
shl
test
mov
std
adc
cld
call
or
rcr
idiv
mov
mov
stos
outs
dec
push
inc
dec
sar
or
mov
nop
xor
mov
push
xchg
nop
inc
sar
mov
adc
adc
push
cld
jmp
dec
pshufw
dec
adc
(bad)
not
stc
jae
out
icebp
push
and
jle
loop
inc
mov
cmp
pop
push
sti
mov
out
rcl
in
icebp
jae
fmul
push
mov
pop
push
jmp
adc
cdq
cmc
mov
xlat
add
out
std
ins
xor
cld
xor
xchg
into
inc
jecxz
dec
push
lock
call
int3
cmp
or
lock
outs
mov
push
fdivr
jo
dec
dec
pop
cmp
repnz
mov
in
js
xchg
mov
jb
inc
out
push
mov
rcl
ds
mov
or
icebp
push
das
dec
inc
ds
icebp
fisub
loope
addr16
mov
pop
mov
mul
add
jae
(bad)
push
ja
dec
dec
ja
(bad)
call
and
fnstsw
inc
cmps
jbe
in
jle
div
loop
cmp
pop
cmps
dec
ror
and
ror
idiv
mov
sar
push
dec
push
inc
adc
div
repnz
jge
dec
test
aam
pop
pop
out
lods
ficomp
push
dec
jecxz
js
addr16
and
xchg
js
stos
out
jl
mov
xchg
pop
xor
iret
xchg
in
inc
adc
adc
inc
std
and
mov
inc
fadd
int3
pop
push
jl
int
xchg
xchg
dec
push
neg
dec
dec
inc
scas
mov
jns
mov
in
cli
lock
in
aad
cmps
sti
jno
popa
je
mov
loope
icebp
or
sar
out
popa
mov
(bad)
mov
push
stc
shl
loop
dec
mov
dec
push
jge
into
jnp
adc
js
fwait
in
js
test
pop
inc
xchg
add
cmc
rol
pop
inc
dec
sti
adc
dec
adc
xor
(bad)
fstp
fs
enter
lds
inc
push
adc
into
sub
fsubr
fisub
icebp
(bad)
(bad)
mov
scas
repnz
cmps
sar
dec
sub
sti
adc
std
xchg
leave
push
adc
pop
pop
movs
adc
icebp
idiv
in
push
cs
pop
push
jecxz
ror
std
dec
idiv
ss
xor
jmp
and
aad
inc
lock
in
fimul
mov
sar
pushf
dec
adc
xchg
into
jb
shr
jb
cmp
inc
sub
or
sti
push
dec
fs
jmp
or
push
out
dec
or
push
mov
cld
ja
in
lea
out
icebp
xlat
mov
icebp
cmp
mov
push
icebp
jno
in
push
mov
loop
fsubr
in
repnz
or
out
pusha
jl
int
sti
push
xor
mov
(bad)
pop
dec
aad
je
fiadd
fisub
mov
neg
or
pop
ds
inc
ds
jmp
imul
hlt
pop
xchg
dec
pop
cld
add
scas
rcr
test
push
jg
inc
cdq
fwait
adc
rcr
stos
push
popf
jb
push
pop
dec
dec
std
inc
ins
fcmovbe
mov
pusha
(bad)
fistp
mov
inc
jl
mov
outs
(bad)
push
(bad)
addr16
or
dec
sar
adc
sub
xchg
dec
push
cld
nop
dec
mov
(bad)
xor
mov
jmp
ins
fadd
mov
sti
push
aas
out
fstp
lock
push
mov
(bad)
out
cmp
jbe
(bad)
dec
pop
xchg
fadd
fdiv
push
ss
popa
pop
jle
icebp
pushf
pause
in
pop
mov
xchg
fs
sbb
push
jle
inc
push
std
adc
pusha
jg
cli
push
sti
xchg
rcl
dec
pop
pusha
pop
loopne
out
repz
mov
mov
loopne
xchg
cmp
in
adc
loop
adc
jle
xchg
mov
imul
and
and
jno
dec
fs
call
xchg
int3
popa
ror
out
cmp
push
push
les
xlat
and
ins
shr
jp
(bad)
mov
js
mov
jl
xor
xchg
xor
aam
nop
retf
mov
jge
inc
mov
jb
dec
jns
push
rcl
clc
mov
out
jns
(bad)
fnstsw
push
jmp
push
mov
loop
nop
ja
call
sub
push
dec
jge
inc
mov
retf
outs
popa
cli
aad
in
cmc
cdq
jb
repz
xlat
(bad)
mov
dec
cdq
nop
dec
icebp
push
daa
ins
popa
fnstsw
jnp
std
sbb
push
jg
xor
nop
dec
icebp
pop
ds
inc
std
mov
sar
xchg
rol
adc
fdivp
jl
cmovns
adc
ret
jl
push
mov
addr16
icebp
lock
retf
cmp
repnz
popa
out
or
jb
cmp
push
cmp
aaa
xor
stc
jl
aas
stc
xor
cmps
jle
jne
out
dec
pop
data16
clc
push
out
push
mov
popa
je
in
sbb
movs
pop
dec
iret
inc
(bad)
xchg
hlt
dec
jle
jo
not
int3
jb
xchg
dec
cmp
cmp
mov
mov
push
std
in
inc
pop
mov
pop
adc
rcl
xchg
dec
ror
int
jge
inc
push
(bad)
nop
into
(bad)
inc
dec
mov
call
push
stos
inc
icebp
jae
in
aad
sar
cmp
push
(bad)
pop
mov
cli
mov
adc
push
lahf
in
or
(bad)
enter
jp
mov
push
pop
aas
loop
ins
mov
or
inc
xor
(bad)
adc
in
push
mov
fadd
xor
pop
jb
inc
sub
push
cld
sbb
movs
adc
movs
outs
(bad)
imul
les
(bad)
int3
jmp
sbb
in
ins
add
inc
imul
out
cwde
jmp
fprem
sbb
lock
aam
adc
push
(bad)
adc
dec
add
jge
movs
pop
mov
rcl
scas
lea
pusha
(bad)
retf
js
out
jnp
icebp
enter
js
xor
test
movq
bound
jle
fs
and
aam
addr16
(bad)
jl
or
stc
xchg
retf
cs
out
xor
push
ss
rcl
iret
sub
jle
aas
dec
inc
jne
ss
aad
jl
daa
test
repz
scas
rcr
or
push
test
rcl
sti
push
rcl
or
xchg
inc
xor
mov
outs
fs
jp
mov
js
sub
js
cdq
cmc
jecxz
mov
loop
dec
xor
js
push
(bad)
adc
dec
call
cmc
pop
clc
cmp
sti
adc
jnp
jge
dec
adc
push
xchg
jp
mov
lock
jo
fcom
sbb
xor
mov
xchg
mov
std
sti
aad
out
rcr
call
cld
cmps
push
(bad)
lahf
nop
retf
nop
out
sbb
or
and
popa
das
in
out
pop
mov
std
jns
mov
dec
adc
xor
or
mov
das
lahf
cdq
lds
out
mov
ja
or
push
enter
loope
mov
cld
inc
mov
inc
xlat
fisttp
vshufps
mov
adc
inc
push
mov
js
dec
outs
pop
les
push
push
jg
dec
dec
dec
adc
lock
dec
sar
repnz
xchg
popf
int
fbstp
(bad)
frstor
dec
aam
inc
stc
xor
fisub
es
ror
loopne
push
xor
push
mov
ins
daa
mov
out
jle
xor
jp
cdq
cwde
xchg
out
push
in
ret
sbb
xor
jg
into
jl
cdq
imul
test
retf
push
inc
jmp
sub
retf
sub
push
and
dec
push
shl
dec
sar
push
leave
mov
sahf
inc
cmps
clc
adc
adc
xchg
cs
addr16
arpl
jns
and
retf
ffree
out
xlat
leave
ins
lods
hlt
ret
jge
jbe
inc
xchg
into
repz
popa
jno
or
mov
popa
pop
ja
dec
fadd
sar
add
mov
xor
call
push
std
adc
jnp
rcl
xchg
dec
sbb
mov
push
std
push
iret
push
pop
xchg
int3
hlt
aad
mov
fistp
out
add
inc
jns
xor
(bad)
xlat
mov
pop
loopne
loopne
out
dec
push
cmc
xchg
in
jp
call
out
out
cli
(bad)
mov
clc
shl
enter
dec
push
push
mov
push
addr16
xor
int3
pop
dec
adc
scas
cmp
pop
imul
mov
enter
icebp
pop
sub
clc
mov
out
loopne
sub
lock
fistp
nop
dec
inc
inc
lock
cld
pop
push
ins
rcr
pop
pop
adc
pop
mov
retf
inc
daa
ret
cld
in
cwd
stc
pop
push
out
int
jl
dec
sar
sahf
int
sti
adc
fld
ins
cmp
push
mov
mov
int
es
push
fucom
clc
shl
in
push
mov
shr
mov
cdq
push
fs
loop
pop
jg
lahf
in
push
lahf
ins
dec
(bad)
xor
jle
into
push
icebp
xchg
inc
push
call
into
inc
jnp
mov
pop
xchg
inc
push
fdivr
shl
imul
xor
xchg
int3
fadd
sbb
jg
mov
sti
fst
and
stos
mov
fwait
cld
dec
jo
and
cli
out
xchg
mov
call
cmc
push
sti
sahf
retf
nop
int
cld
adc
retf
lock
pop
jno
push
mov
js
aas
in
pop
mov
sar
rcl
sahf
dec
enter
push
mov
popa
cmps
out
lods
xchg
xchg
jmp
les
icebp
or
push
mov
(bad)
mov
push
std
add
pop
jg
cdq
icebp
imul
and
jle
iret
jmp
scas
and
int3
push
jle
and
mov
lea
into
and
and
dec
cmp
dec
aam
pushf
push
jle
dec
jle
xchg
dec
pop
cld
or
jg
int
pop
xchg
in
leave
repz
mov
push
shl
push
sti
or
sar
xchg
dec
push
into
adc
std
xchg
mov
call
xlat
(bad)
std
test
mov
push
jle
pop
call
jle
mov
adc
dec
xchg
int3
push
icebp
retf
jge
retf
popf
dec
push
jnp
bound
adc
leave
jle
pop
aad
xchg
leave
mov
pop
ds
icebp
aam
data16
xor
pop
sahf
out
repz
pop
test
sahf
sub
sahf
(bad)
(bad)
xlat
pop
stc
jb
xor
js
cmp
push
push
mov
loopne
pop
mov
cli
fstp
jecxz
(bad)
mov
arpl
push
popa
sbb
add
out
jecxz
fidiv
push
inc
call
inc
fdiv
sbb
call
fisubr
inc
mov
(bad)
push
mov
bound
dec
mov
in
inc
xor
cld
xlat
retf
adc
jo
cwde
sar
dec
punpcklbw
or
cmp
lock
cli
les
add
jg
retf
xchg
int3
sar
mov
fist
dec
rcl
es
js
dec
loope
(bad)
cdq
jp
inc
push
inc
dec
pop
push
retf
mov
and
lock
out
or
push
inc
rcr
adc
dec
out
ficomp
jb
sub
xchg
into
and
out
dec
(bad)
fnstsw
dec
neg
(bad)
out
sbb
jae
mov
sar
popa
pusha
int3
cdq
in
in
inc
sar
dec
jnp
dec
aam
xchg
inc
push
sti
xchg
dec
mov
push
lods
popa
dec
push
mov
out
pop
sub
push
fistp
out
leave
inc
(bad)
(bad)
fild
(bad)
mov
xchg
mov
sbb
push
mov
gs
mov
enter
push
cld
scas
inc
(bad)
adc
mov
dec
loope
cdq
pop
mov
inc
pop
push
retf
fucomi
jmp
(bad)
aam
add
pop
test
pop
jl
int3
rcl
inc
push
out
aad
inc
cli
das
mov
loope
ror
inc
jg
test
sub
sub
loopne
pop
cmp
(bad)
loope
or
fcos
sbb
dec
jns
rol
mov
jl
inc
push
retf
fdiv
nop
imul
frstor
inc
fsub
fucomi
adc
call
add
ins
cdq
nop
mov
mov
mov
loop
out
push
pop
rol
pusha
jno
sbb
adc
jg
dec
shl
mov
or
xchg
iret
es
aaa
out
enter
jl
mov
loope
push
mov
ins
add
pop
lahf
iret
call
in
pop
mov
cmps
bound
push
mov
repz
jno
in
mov
cmps
push
mov
in
push
lods
cld
dec
inc
lods
mov
repz
idiv
repz
add
push
adc
dec
push
adc
jle
clc
add
mov
mov
mov
leave
push
out
(bad)
mov
int3
inc
sar
fdivrp
sti
nop
jmp
mov
rcl
add
dec
mov
in
jle
sub
jmp
xchg
retf
mov
outs
ficom
aas
mov
mov
fiadd
movs
scas
out
push
sbb
jge
cmc
inc
(bad)
jecxz
sub
add
retf
aad
pushf
jp
cmp
fdivr
xor
mov
dec
dec
shl
(bad)
jge
shl
addr16
sub
and
bound
push
sar
ficomp
out
jb
or
push
lahf
(bad)
fadd
push
mov
push
out
inc
adc
jecxz
mov
pop
je
cli
cmp
call
dec
adc
shr
mov
push
in
adc
push
loopne
or
mov
sar
nop
rcl
mov
jge
inc
aam
xchg
dec
push
shl
dec
push
cmp
outs
mov
xlat
mov
icebp
push
mov
gs
xchg
pop
ja
add
xor
fstp
cwde
(bad)
int3
mov
rol
xor
ja
xor
cmp
push
test
dec
enter
sar
rcl
out
(bad)
mov
test
mov
mov
mul
icebp
ret
cli
pop
xchg
call
nop
adc
shl
jg
ret
fidivr
sbb
sti
mov
or
scas
enter
icebp
push
ds
ficomp
out
inc
mov
mov
xchg
fimul
out
pop
xor
loopne
xor
mov
jne
(bad)
xchg
iret
or
lods
cs
ficomp
into
out
jno
imul
jle
test
(bad)
(bad)
(bad)
push
iret
ror
outs
das
inc
push
out
mov
lods
dec
adc
std
adc
int
call
adc
cwde
xchg
iret
dec
push
cmp
in
push
mov
clc
aad
in
cdq
cmp
adc
push
mov
pop
pusha
js
ds
nop
sbb
pop
mov
test
dec
cwde
inc
sti
push
cmp
xor
mov
jmp
fucomip
(bad)
es
pop
sub
loopne
fidivr
mov
mov
push
iret
mov
inc
adc
adc
jl
jns
or
aam
shr
int
cld
or
adc
push
(bad)
adc
xor
fisub
cmc
in
ror
jbe
faddp
cld
pop
(bad)
xor
push
mov
pop
pop
xlat
push
pop
jge
jno
not
retf
lods
cmc
ror
cmps
les
imul
in
pop
and
pop
jnp
mov
push
sti
or
nop
cld
adc
cmp
mov
mov
fstp
jp
mov
aaa
(bad)
xchg
(bad)
repnz
mov
popa
enter
jmp
loop
out
stc
int
xchg
dec
push
adc
pop
les
in
icebp
(bad)
retf
sbb
call
hlt
das
ficom
dec
out
loope
adc
inc
imul
sub
stos
add
xchg
or
push
lock
retf
mov
ror
xchg
rcl
pushf
jle
(bad)
mov
jb
dec
out
push
push
adc
xor
jns
xor
jp
pop
push
jg
test
pop
ror
sub
stos
xor
dec
mov
pop
adc
ins
adc
imul
push
jg
test
jmp
loop
ror
mov
std
pop
iret
scas
fcom
(bad)
sub
mov
out
ret
lahf
(bad)
aam
cdq
dec
outs
iret
xor
jmp
cdq
cmc
mov
ds
cli
(bad)
inc
cdq
inc
jge
lds
lock
into
sbb
xchg
in
jl
adc
stc
push
dec
shl
cmp
adc
aas
loop
rcr
cmps
cwde
arpl
(bad)
stos
jp
lock
data16
rcl
(bad)
hlt
pop
and
jge
mov
add
or
lds
mov
sub
mov
or
or
push
sti
pop
or
icebp
xchg
rcl
enter
pusha
jnp
cmp
ja
cmps
outs
bound
call
push
mov
arpl
sbb
mov
push
dec
ins
das
icebp
inc
lds
loopne
mov
or
mov
pop
push
out
rcr
test
daa
push
gs
pop
fdivr
enter
push
jg
rcl
xchg
dec
idiv
push
push
sti
xchg
shl
adc
xor
in
ins
adc
lahf
and
mov
lds
out
jo
pop
push
(bad)
std
pop
out
dec
nop
inc
out
xlat
mov
adc
bound
mov
es
push
push
pushf
mov
add
shl
fimul
mov
sahf
pop
add
fnstenv
enter
jl
cmp
pop
aas
popa
inc
(bad)
mov
pop
push
call
iret
xchg
xchg
sar
xchg
inc
sar
xchg
int
ins
das
fyl2x
push
jns
(bad)
aad
jmp
mov
shl
(bad)
aad
sar
xor
pop
jl
out
sar
into
clc
rcr
rol
mov
(bad)
addr16
sar
add
cmps
mov
mov
sbb
fcmovne
retf
mov
mov
xchg
and
out
jnp
add
lods
sbb
fisub
push
fwait
adc
jo
and
adc
pop
push
jnp
retf
sub
mov
push
int3
mov
repnz
aam
imul
test
dec
mov
(bad)
mov
sbb
fs
pop
and
pop
xor
jno
cmp
data16
adc
sub
pop
jge
sbb
xchg
dec
popa
ins
popf
(bad)
xor
repnz
iret
and
ret
fs
jnp
jge
out
ret
sti
push
rcl
inc
(bad)
push
stc
div
sbb
loope
jle
jmp
dec
dec
push
jge
dec
sar
fidiv
xchg
dec
fs
jge
mov
pcmpgtd
mov
lock
xor
inc
add
dec
inc
mov
loop
test
push
sti
sbb
lds
jmp
jge
aas
(bad)
dec
ret
out
(bad)
lahf
inc
dec
(bad)
cdq
mov
jb
int3
dec
cmc
stc
iret
push
or
sbb
dec
sub
push
push
lock
sar
into
cmps
mov
es
test
imul
mov
loope
retf
dec
jns
push
out
out
cmp
addr16
mov
push
test
nop
jbe
jecxz
pop
aas
ror
inc
shr
ror
inc
loop
int3
jp
lea
mov
lds
dec
inc
mov
leave
rcl
out
inc
mov
out
shl
ret
dec
xlat
push
pop
outs
lds
dec
push
call
rcl
xor
std
adc
sti
sub
sub
dec
sub
xchg
dec
test
xor
repnz
pop
add
push
pop
jae
in
aad
in
aad
out
mov
and
mov
leave
fcomp
pop
fidivr
out
retf
data16
push
xor
clc
jno
sar
jle
push
pop
cwde
push
ror
bound
jg
cmps
ds
jb
outs
outs
adc
js
jl
jmp
jnp
ds
add
and
pop
gs
push
lock
push
jg
dec
sbb
gs
jle
dec
rcr
dec
pop
ds
push
jno
cmp
bnd
outs
fist
xchg
pop
and
cmp
mov
xchg
dec
mov
add
cs
inc
sub
fimul
idiv
cmp
(bad)
data16
ffree
scas
xchg
sar
pop
retf
int3
pop
cld
sbb
jno
pop
pop
inc
lods
inc
in
jge
inc
xor
popf
cmp
into
inc
jb
push
or
jb
call
popa
or
jge
int3
dec
xor
xor
(bad)
adc
test
xchg
push
stc
aad
out
sar
loope
push
mov
clc
pop
mov
loop
int
pusha
sub
adc
push
sub
outs
jo
mov
xchg
hlt
(bad)
lds
bound
(bad)
daa
dec
inc
jge
xor
lods
cli
inc
jl
cld
(bad)
sahf
adc
ror
popa
pop
test
dec
and
jmp
inc
retf
movs
test
ins
mov
fstp
sbb
test
xchg
inc
bound
dec
(bad)
(bad)
std
mov
push
lock
dec
sar
nop
int3
sar
dec
push
call
into
call
lock
add
push
jb
adc
hlt
hlt
mov
bound
inc
jo
or
data16
inc
int3
fadd
mov
aas
pusha
pop
inc
retf
ret
mov
shr
mov
inc
iret
sbb
sub
push
retf
adc
jge
dec
ret
call
dec
inc
hlt
push
rcr
in
jae
adc
addr16
mov
outs
jae
dec
lahf
dec
push
cmp
call
jmp
pop
adc
push
cmps
out
out
mov
rcl
out
fnstsw
in
lock
mov
lahf
dec
neg
(bad)
enter
dec
inc
pop
les
das
xlat
and
push
dec
lock
cmp
clc
and
repz
ror
cld
add
pop
aas
mov
movs
mov
lea
inc
xchg
push
std
adc
xchg
jg
mov
std
xchg
dec
sar
int
retf
arpl
lods
cli
push
or
fist
out
int3
enter
jecxz
loopne
pop
es
sub
push
and
out
dec
jnp
popa
fbstp
arpl
repz
icebp
rcr
not
sar
(bad)
out
rcr
int
adc
pop
fadd
pushf
retf
pusha
in
into
adc
push
cld
sub
xchg
int
jge
into
push
call
dec
mov
outs
pop
inc
mov
or
pop
mov
vmovsd
call
retf
int3
andnps
aam
arpl
ret
inc
hlt
cdq
add
mov
dec
icebp
aad
jne
add
leave
pop
xor
mov
out
sti
adc
and
mov
(bad)
dec
jg
push
push
jle
inc
pop
push
sahf
in
push
cmp
add
cmp
add
pop
and
js
mov
shl
xor
mov
dec
sar
iret
adc
fisub
jmp
repnz
cdq
push
or
ret
call
add
(bad)
leave
inc
xchg
jnp
inc
dec
mov
stos
inc
addr16
pusha
mov
shl
pop
std
fisttp
nop
into
jmp
retf
outs
push
sar
ins
addr16
jnp
mov
ja
push
lahf
out
dec
xor
popa
dec
pop
mov
icebp
mov
data16
movs
dec
jae
retf
xchg
(bad)
leave
shl
arpl
in
ds
leave
loop
adc
xor
pop
mov
outs
std
lock
lahf
enter
pop
jge
dec
aam
adc
inc
adc
jge
dec
jmp
loopne
pop
sahf
loope
push
or
addr16
jle
fnstsw
mov
jg
ds
xor
loop
xchg
pop
out
fsub
jle
adc
push
mov
mov
aad
loop
ret
cdq
clc
(bad)
add
pop
jecxz
push
js
xor
push
leave
ja
cli
imul
and
aad
(bad)
neg
ds
lea
jp
test
pop
cmc
leave
outs
sub
inc
push
mov
adc
adc
push
pop
push
jl
test
mov
pop
out
inc
nop
inc
pop
bound
sti
jb
mov
div
(bad)
(bad)
(bad)
icebp
or
int
in
icebp
call
(bad)
repnz
ss
push
dec
sar
dec
push
(bad)
adc
inc
test
shl
loope
int3
aas
push
in
or
mov
inc
adc
pop
pop
mov
fisttp
sar
(bad)
push
push
repz
shr
(bad)
fisub
jbe
ret
xor
cld
xlat
dec
aas
fst
sahf
mov
repz
movs
(bad)
movs
cmps
or
add
enter
aam
lahf
int3
push
add
int3
or
jge
jns
icebp
adc
les
test
sar
sbb
push
mov
jno
xor
jmp
popf
inc
mul
(bad)
(bad)
jg
xlat
ror
adc
shr
sub
mov
ss
mov
push
jle
rcl
xchg
dec
push
jnp
mov
cdq
and
adc
add
gs
mov
pop
or
cmp
(bad)
push
cmp
enter
push
mov
ja
push
or
(bad)
fist
dec
repz
pop
sub
lock
cmp
lds
ja
fdivr
dec
std
xchg
dec
shl
sbb
xchg
out
push
jg
dec
add
in
push
jo
fcmovne
rcr
push
loope
xor
jnp
cmp
inc
hlt
xor
pop
jo
xchg
inc
jnp
xor
jg
sub
jle
int
jo
int
imul
push
sti
sbb
in
mov
fadd
dec
pop
idiv
out
sahf
sub
lahf
inc
repz
mov
sub
fisttp
fadd
cdq
inc
enter
repz
mov
loop
jge
inc
mov
int
fnstenv
js
push
cmp
mov
xchg
popf
adc
pop
ss
dec
push
jg
dec
aam
adc
jb
add
xor
enter
call
inc
sti
push
cmp
sar
data16
pop
mov
pop
xchg
xor
jb
cmp
ror
pushf
cs
clc
xchg
add
inc
scas
jp
dec
add
adc
cmc
test
int
mov
ss
(bad)
sahf
out
mov
and
mov
adc
test
lea
sti
dec
mov
movs
cmp
push
(bad)
pop
sub
inc
mov
push
mov
arpl
aad
sbb
mov
retf
push
stos
(bad)
jmp
aas
popa
outs
inc
sbb
mov
dec
adc
cdq
es
int
dec
outs
inc
mov
push
(bad)
cdq
int3
cmp
aas
add
(bad)
mov
inc
inc
inc
sar
jno
inc
fdivr
jo
rol
mov
fs
sar
movs
inc
sub
div
je
pop
cmp
sti
dec
inc
(bad)
xchg
movs
imul
mov
push
fcmovb
int
add
and
js
outs
shl
addr16
(bad)
sbb
dec
movs
test
dec
sar
dec
xchg
push
and
mov
jg
das
fs
mov
loope
int3
xor
jae
fs
cld
fcom
std
(bad)
pop
dec
adc
mov
lea
cwde
cmps
pop
ja
dec
or
jl
mov
int3
pop
and
arpl
and
sahf
jmp
(bad)
jecxz
push
into
ja
int
fmul
jl
push
sar
adc
aam
es
jns
push
cld
aaa
int
ss
dec
mov
out
aad
adc
ror
shl
leave
outs
cs
jno
(bad)
movups
test
adc
push
sub
pop
ret
cmp
mov
icebp
aas
out
ins
neg
icebp
bound
cwde
mov
loopne
xor
push
cld
adc
stos
jnp
(bad)
aam
xchg
shl
nop
into
popa
mov
push
arpl
ret
add
shl
mov
push
cmp
push
(bad)
(bad)
int
sub
ret
sub
nop
and
adc
ret
adc
or
jmp
icebp
jne
push
(bad)
loop
ins
mov
data16
jge
push
shl
dec
in
xlat
jmp
ins
jp
mov
pop
icebp
daa
pop
popa
neg
jno
jl
mov
xchg
adc
cld
in
pop
sbb
ficomp
add
and
mov
adc
jb
ret
cdq
clc
lock
gs
push
push
sar
rcl
adc
pop
adc
int
dec
cmps
add
cmp
int3
pop
push
cmp
jns
push
mov
sar
out
data16
jl
sbb
popa
push
jo
mov
gs
fcomp
push
mov
adc
pop
mov
inc
(bad)
jl
push
fmul
xchg
dec
pop
jg
outs
cmp
sahf
in
movs
(bad)
aas
stc
ds
outs
adc
and
xchg
adc
std
fwait
and
inc
lock
mov
inc
std
inc
mov
cmc
sub
dec
jecxz
and
popa
mov
push
cmp
and
xchg
mov
jge
push
clc
shr
call
mov
and
push
mov
jae
mov
iret
dec
ja
push
in
aad
(bad)
hlt
ret
mov
rol
sbb
int3
fdiv
gs
(bad)
aad
(bad)
(bad)
fild
pop
pop
dec
ja
jno
xor
(bad)
cdq
pop
jle
xor
not
jno
pop
test
push
imul
pusha
icebp
fiadd
or
adc
ror
(bad)
xor
xchg
imul
stc
in
push
jb
sub
imul
popa
jmp
sub
or
inc
jge
push
movaps
rol
mov
pop
dec
lahf
inc
ror
test
dec
jns
out
jge
ins
clc
adc
xchg
mov
shl
lock
dec
dec
std
xchg
push
sti
adc
or
dec
push
cld
mov
push
aad
dec
aad
mov
pop
sahf
in
mov
fmul
adc
repnz
sub
push
jne
pop
test
push
lds
jb
mov
jbe
pop
sbb
stos
(bad)
cwde
(bad)
cmps
pop
inc
mov
(bad)
dec
mov
dec
pop
xor
pop
sar
fs
xchg
inc
sar
inc
bound
lahf
dec
push
rcr
enter
push
std
push
retf
nop
dec
push
cli
ficomp
aad
push
std
addr16
pushf
clc
push
inc
mov
int
test
jno
jecxz
(bad)
dec
xchg
mov
push
pop
dec
mov
jmp
mov
leave
ja
jmp
fdivr
jmp
imul
test
pop
cmp
std
ds
(bad)
retf
lahf
inc
aam
sbb
loope
cld
push
lock
nop
iret
xchg
adc
push
cmc
adc
rol
sbb
xchg
pop
popf
mov
pop
ds
mov
mov
data16
cmp
enter
retf
movs
jmp
adc
stos
sbb
jp
mov
leave
in
in
push
push
fadd
adc
clc
ins
jmp
xchg
adc
sti
loope
retf
xchg
adc
xlat
scas
stc
adc
movs
fnsave
or
jmp
test
xchg
push
push
jl
int
(bad)
xchg
dec
shl
fild
rol
loopne
jne
push
inc
and
scas
popa
pop
pop
mov
outs
ja
out
cld
push
lahf
bound
xchg
or
push
cli
mov
les
cli
push
cld
or
adc
std
mov
sar
nop
into
es
cmp
xchg
mov
inc
les
xchg
jnp
xchg
iret
aam
adc
repnz
pop
push
push
push
rcr
fsub
or
icebp
or
pop
push
mov
addr16
jno
out
jnp
nop
mov
out
in
mov
and
in
test
loope
inc
adc
scas
cdq
inc
test
pop
xchg
xchg
jno
cmp
icebp
or
push
call
into
jmp
xchg
(bad)
js
mov
sti
mov
enter
into
jmp
push
stos
gs
out
jmp
push
jle
movs
xlat
and
add
call
jl
mov
and
sti
xchg
or
ins
adc
dec
aam
xchg
int3
in
adc
inc
push
fsubr
cld
clc
inc
mov
data16
mov
repnz
lds
xor
std
mov
push
ja
iret
cli
push
sub
mov
jno
ins
(bad)
fcomip
sbb
rcl
pop
int3
jns
inc
mov
xchg
les
das
inc
loopne
jbe
outs
inc
cdq
mov
mov
ret
push
stc
pop
inc
(bad)
or
pop
sti
mov
addr16
push
cld
push
movs
sar
sahf
retf
nop
into
pushf
sub
pop
hlt
add
stos
icebp
js
cld
icebp
pop
adc
push
dec
int3
mov
leave
cmc
push
jb
into
div
aad
ja
pop
mov
cli
aad
hlt
push
mov
jle
aas
in
(bad)
sbb
push
jg
dec
out
dec
xchg
stos
or
test
lods
adc
sar
mov
rcl
dec
into
out
jae
cld
data16
int
xlat
cmp
daa
xor
(bad)
pop
adc
bound
cld
loopne
inc
in
test
ins
mov
xlat
nop
cmps
adc
pop
cmp
repz
push
cmp
out
cmp
or
stos
ficomp
pop
xchg
dec
push
add
int
cs
sahf
mov
mov
xlat
lock
aad
mov
bound
dec
cli
loop
hlt
push
(bad)
fstp
add
(bad)
rol
lea
iret
lds
outs
into
out
rol
dec
loopne
fcmovnb
add
xchg
pop
pushf
jg
hlt
sar
jle
(bad)
sahf
dec
arpl
sbb
inc
jo
call
leave
jne
add
cmp
pushf
pushf
xor
(bad)
and
mov
cwde
por
cld
rcr
aam
call
pop
movs
loope
push
cmp
call
mov
in
fwait
aad
push
cdq
xor
jbe
pop
inc
(bad)
lahf
cdq
jl
mov
inc
fld
lea
icebp
push
aas
add
inc
pop
mov
cmp
rcr
adc
mov
(bad)
adc
fs
aam
fprem
sar
push
iret
lods
ins
xchg
iret
ins
pop
mov
jns
mov
jl
aad
fxch
cmp
faddp
push
popf
(bad)
and
mov
push
mov
loope
mov
cmp
sar
out
sar
call
push
(bad)
xchg
cld
fdivr
popa
pop
mov
fisttp
xchg
(bad)
int
xlat
rcr
mov
(bad)
rol
int
ins
ss
inc
jb
scas
pop
jg
sub
mov
ss
ins
pop
sti
movs
jl
jmp
dec
xor
jb
lods
pop
cmp
jmp
aad
push
cmps
jg
nop
retf
jo
and
jge
push
clc
fidivr
out
enter
or
inc
stc
push
imul
js
pop
xlat
jg
pop
out
mov
into
or
int3
adc
cmp
je
inc
popa
fst
mov
sbb
(bad)
out
sar
icebp
data16
js
int
and
popa
xlat
jmp
fmul
inc
dec
aam
cmp
jl
(bad)
lahf
inc
sar
cdq
dec
pop
mov
pop
lea
test
ror
or
adc
sti
xchg
int3
sbb
jge
dec
push
dec
sub
cld
(bad)
ror
jecxz
xor
mov
and
xlat
jb
mov
xchg
pop
(bad)
aas
in
leave
inc
mov
fcomp
mov
(bad)
imul
out
fnstcw
mov
pop
arpl
mov
pushf
cdq
into
and
or
cmc
dec
test
ret
adc
xchg
dec
mov
gs
aaa
in
sub
dec
in
jl
mov
or
cmp
in
cld
xor
popa
pop
or
sti
push
mov
repz
mov
jmp
stos
inc
(bad)
adc
dec
jno
dec
pop
ja
inc
fdivr
jbe
enter
dec
sar
pop
in
or
cli
arpl
sar
iret
outs
push
aam
int
mov
jae
jo
dec
stc
cld
and
scas
jge
out
jo
into
(bad)
pop
cmp
lds
sub
fadd
pop
or
inc
mov
(bad)
in
mov
enter
outs
jmp
pop
mov
std
dec
sbb
repz
mov
in
dec
sub
stos
out
sar
ja
repz
mov
ds
call
mov
ret
push
dec
xchg
dec
in
mov
mov
jg
dec
fld
shr
les
jg
xchg
jge
adc
pop
out
push
out
in
(bad)
aad
bound
mov
inc
outs
cmp
and
ror
loop
or
mov
mov
shr
push
aam
push
shr
add
dec
pop
fdiv
mov
sti
lds
and
mov
in
imul
push
icebp
dec
sbb
or
or
inc
sbb
icebp
data16
mov
mov
pop
jae
enter
sahf
into
repz
ds
fxch
dec
fidiv
xor
daa
call
push
xor
enter
push
not
dec
clc
pop
stos
loopne
les
loope
ja
mov
std
in
aam
rcl
cdq
retf
fsubr
leave
jl
push
popa
std
cmps
fcomp
test
std
enter
std
mov
(bad)
int
mov
mov
fld
fsubr
clc
psubw
jne
(bad)
out
mov
lock
push
(bad)
xchg
dec
aad
xchg
cs
adc
retf
adc
icebp
adc
movs
push
(bad)
sar
loopne
dec
or
push
or
cli
xlat
data16
push
dec
or
aas
in
popf
int3
sbb
scas
sti
push
sub
cs
daa
or
jg
xlat
aam
adc
ror
dec
int3
shr
push
dec
dec
pop
ja
dec
dec
inc
sub
int
jl
cld
cdq
into
inc
lods
add
sar
inc
shl
int3
sar
jno
push
sti
xchg
inc
push
jl
iret
sbb
(bad)
clc
aam
std
or
inc
jmp
fsubr
ror
cmps
out
lock
mov
sahf
cdq
push
pop
adc
push
mov
cli
(bad)
inc
enter
icebp
push
mov
pop
jnp
loopne
jae
fwait
lahf
pop
stos
in
xchg
rcl
outs
push
mov
dec
pop
scas
addr16
repz
into
shl
pop
inc
in
std
adc
dec
aam
jl
ror
repz
add
out
pop
in
test
fld
lds
jmp
call
and
arpl
not
jge
mov
shl
into
push
ficom
int
addr16
mov
fimul
loopne
push
mov
lea
enter
jecxz
xor
inc
leave
shr
in
ins
les
mov
xchg
dec
push
push
nop
inc
push
jle
dec
push
call
into
sbb
shl
xchg
(bad)
and
loopne
ror
leave
out
jl
ja
jbe
out
xchg
shr
jns
iret
push
jle
sub
adc
pop
jp
sub
push
add
xlat
cdq
inc
stc
cdq
cmp
pop
ins
and
int
shl
sti
push
mov
in
lock
pushf
cs
aam
adc
push
in
das
inc
lods
mov
cmc
sub
xor
dec
mov
fstp
and
hlt
call
cmp
mov
(bad)
movs
fdivr
outs
sbb
call
inc
pusha
call
jmp
std
(bad)
arpl
inc
sahf
push
test
leave
inc
nop
retf
xchg
pop
aam
adc
in
shl
rcr
ret
jle
jecxz
jl
dec
and
sti
rcr
adc
xor
(bad)
sub
or
outs
pop
cmp
out
pop
das
out
fidiv
fnstsw
push
mov
cmp
jl
pop
ja
clc
add
dec
inc
push
dec
adc
dec
jp
mov
mov
ins
mul
dec
loope
adc
shr
cmp
dec
test
rcl
pop
jo
out
dec
mov
sbb
out
out
jmp
out
(bad)
jl
dec
loopne
nop
int3
inc
dec
cmp
push
cld
retf
dec
sub
shr
icebp
stos
pop
push
icebp
xchg
jo
iret
repnz
js
jg
jb
pop
pop
ins
int
test
loopne
in
jmp
rcr
dec
mov
sbb
ror
lahf
(bad)
jecxz
add
push
das
pop
xchg
mov
xchg
inc
dec
ja
pushf
imul
int3
jo
nop
repnz
fwait
dec
jo
leave
push
std
adc
push
adc
dec
outs
jge
mov
jb
and
dec
mov
or
xlat
mov
sar
dec
push
mov
inc
in
popf
push
ds
stc
push
lahf
out
bnd
pop
(bad)
add
jae
inc
jmp
pop
xor
sbb
fsub
ja
push
xor
or
sbb
or
mov
nop
mov
mov
ret
imul
(bad)
fnsave
movs
call
ret
jne
push
test
repz
ds
sbb
xchg
xor
dec
icebp
jnp
not
dec
or
jecxz
xchg
xchg
push
imul
lock
pushf
rol
cmp
mov
addr16
dec
std
icebp
enter
int
bound
(bad)
aad
sub
push
inc
repz
ins
popa
mov
and
fcom
fstp
push
jmp
in
imul
movs
(bad)
adc
mov
pop
sar
adc
aad
test
cmp
mov
out
xlat
sbb
sar
out
dec
cwde
sub
mov
fdivr
out
in
cmp
xchg
jecxz
xchg
inc
fist
sub
mov
dec
test
jns
dec
mul
ficom
ja
mov
int
jno
outs
sar
stos
cmc
inc
ret
dec
push
jo
sar
loope
cdq
std
mov
cmp
dec
jno
call
and
adc
dec
fidivr
xchg
mov
jnp
sub
(bad)
std
fcmovbe
std
xchg
iret
push
dec
xchg
iret
sar
mov
sar
dec
sub
jne
or
rcr
data16
ror
jge
mov
mov
repz
xor
mov
push
sbb
inc
jp
cli
adc
cmp
jae
xlat
sub
pop
mov
in
dec
push
xlat
push
dec
push
(bad)
cmps
sar
ins
das
pop
or
lock
int
pop
call
iret
out
jmp
push
jne
inc
jle
ds
jle
add
and
fstp
icebp
int
dec
inc
adc
jmp
push
(bad)
into
sbb
div
int3
(bad)
nop
inc
in
mov
mov
inc
mov
shl
dec
dec
std
movs
in
std
xchg
dec
mov
or
push
sar
jmp
push
imul
outs
jp
push
test
out
fs
xchg
js
xchg
add
mov
call
ja
movs
push
dec
sub
mov
dec
jo
es
push
imul
xor
(bad)
xor
pushf
aaa
mov
int3
and
sar
add
sub
jno
or
dec
push
push
mov
jl
(bad)
pop
mov
pop
xor
out
pop
add
mov
int3
and
(bad)
cld
ror
push
pop
outs
cmps
lds
dec
aam
pop
int3
out
push
xchg
inc
and
int
mov
jno
pop
xchg
push
daa
hlt
arpl
stos
push
call
or
or
cmps
adc
pop
cld
inc
shl
adc
stc
rcr
test
rcr
push
sub
xor
enter
mov
dec
or
xchg
call
(bad)
and
sbb
xchg
retf
das
out
adc
push
imul
cmps
imul
adc
loopne
push
sar
adc
nop
dec
adc
push
xchg
cmps
shr
call
dec
test
xlat
adc
jmp
jge
pop
cld
int3
fadd
sar
or
rcl
imul
fisubr
fist
mov
out
sbb
(bad)
fmul
jp
cdq
(bad)
pop
xchg
cmp
addr16
shl
sti
cmps
ret
adc
(bad)
sbb
das
and
cmp
jnp
xchg
fs
lock
js
xor
sti
xlat
xor
je
es
mov
addr16
je
out
push
retf
xchg
push
push
pop
push
loop
(bad)
out
sar
inc
inc
pop
mov
rcl
(bad)
ja
adc
mov
rol
arpl
inc
cmovs
push
push
push
sbb
clc
sub
stos
adc
push
or
mov
push
fnstsw
lods
aaa
or
inc
pop
call
dec
mov
std
adc
push
(bad)
adc
xchg
pop
dec
adc
push
bnd
icebp
pop
inc
xchg
cld
rcl
jg
ja
(bad)
jno
test
mov
test
nop
call
adc
add
loop
dec
adc
xchg
pop
cmps
clc
pop
jle
push
aaa
les
int3
jnp
cmp
dec
add
out
aam
or
dec
xor
adc
xor
xchg
mov
test
cli
xlat
mov
call
out
(bad)
dec
retf
and
retf
jb
daa
pop
push
std
jne
add
jnp
dec
cmc
push
adc
adc
out
cmp
cli
pop
(bad)
loope
dec
lahf
add
ds
std
mov
mov
xchg
dec
push
cli
push
lahf
out
cli
dec
mov
clc
dec
out
add
xlat
repz
push
cmp
ins
jp
pushf
(bad)
data16
adc
xlat
aam
sbb
sbb
movs
iret
pop
in
lahf
std
ins
cs
mov
cdq
xor
add
cld
adc
jle
inc
mov
lds
retf
dec
cmps
mov
fs
je
or
ds
ins
inc
ficom
or
fcomp
loop
ins
and
repnz
xchg
cdq
iret
out
das
stc
mov
ds
add
fmul
adc
push
(bad)
repz
arpl
xchg
repnz
stc
fisttp
mov
xor
sar
nop
into
pop
test
jl
dec
sar
sbb
cmp
cs
(bad)
in
(bad)
push
aam
in
pop
dec
push
cli
push
test
cld
fstp
icebp
xor
xchg
jecxz
sbb
loope
shl
jp
cmc
cmps
inc
dec
fdivr
jae
aad
into
das
pop
arpl
sub
ror
xor
add
jl
adc
icebp
xchg
iret
test
in
jbe
xchg
jnp
in
jle
mov
jo
aam
fidiv
(bad)
adc
or
sbb
sbb
jmp
xor
lahf
push
push
jle
iret
fmul
sbb
and
add
pop
jnp
xchg
ror
(bad)
mov
lock
inc
fdivr
jnp
add
push
jns
(bad)
adc
ins
mov
sar
int
lods
adc
retf
loope
jb
cmp
enter
cmp
(bad)
(bad)
xchg
xchg
xor
mov
fnstsw
mov
add
inc
adc
pop
std
pop
int
cwde
adc
jp
in
pop
stc
pusha
inc
pop
outs
(bad)
mov
push
jo
dec
fidivr
xchg
and
adc
rcr
call
lock
pusha
(bad)
adc
out
in
(bad)
pushf
xor
push
cld
(bad)
mov
repz
cmp
pop
icebp
call
mov
cmps
cmp
pop
or
and
inc
mov
push
out
fucom
inc
clc
cmp
loop
xchg
add
mov
data16
xlat
adc
(bad)
xor
jo
rcl
lahf
inc
popa
(bad)
test
inc
imul
repnz
clc
inc
xor
std
add
dec
jb
retf
ins
pop
pop
ficom
cld
rol
addr16
inc
jnp
in
inc
adc
push
(bad)
imul
(bad)
mov
cli
(bad)
or
icebp
repnz
rcr
loopne
(bad)
dec
movs
in
mov
pop
dec
retf
loop
dec
dec
aam
xchg
dec
and
adc
imul
mov
mov
xor
dec
jmp
imul
jp
mov
jg
sbb
loope
dec
ficom
retf
xchg
mov
dec
xchg
inc
aam
jb
outs
hlt
push
adc
retf
dec
cdq
push
popa
icebp
push
or
push
jnp
dec
ins
std
xor
jl
int3
stc
int3
adc
mov
dec
in
ss
push
pushf
mov
aaa
pop
scas
dec
out
scas
dec
(bad)
or
inc
lahf
adc
push
std
dec
int
into
nop
retf
rsqrtps
shr
jmp
test
cmp
ror
outs
dec
popa
push
mov
fld
cmp
fstp
aas
popa
mov
jg
push
jl
jg
jo
dec
nop
int
addr16
pop
imul
jl
(bad)
cs
jge
jb
mov
xchg
adc
adc
icebp
jmp
int
sub
add
cli
push
mov
sbb
mov
clc
data16
cmp
ds
ret
fmulp
(bad)
inc
jp
cdq
icebp
sbb
lods
outs
jb
test
test
jno
sbb
rol
in
xchg
or
push
(bad)
lods
inc
outs
adc
ins
mov
(bad)
xchg
xchg
int3
(bad)
sti
and
(bad)
sub
popf
jg
xlat
jo
out
jno
jge
pop
xor
in
cmp
bound
(bad)
pusha
jae
pop
out
outs
cs
stc
icebp
add
test
pop
inc
aam
mov
adc
adc
rol
test
fs
addr16
jne
idiv
data16
sub
mov
test
je
rol
or
pop
lahf
xlat
jmp
ds
test
mov
jae
cdq
cmp
in
inc
(bad)
lahf
inc
outs
rcr
jecxz
or
mov
cmp
imul
cmp
adc
(bad)
mov
push
leave
ret
ret
cmp
test
shl
adc
mov
hlt
ss
jo
pusha
add
hlt
stos
push
jl
dec
data16
je
ins
es
call
(bad)
in
mov
clc
popf
hlt
outs
shl
mov
(bad)
in
push
mul
mov
ds
or
outs
pop
neg
adc
xor
in
fdivr
mov
ret
adc
pop
mov
pusha
push
pop
mov
dec
call
dec
shl
adc
dec
push
xchg
iret
xor
inc
ins
xchg
dec
push
jp
inc
call
dec
out
es
jmp
adc
cmp
adc
ficomp
int
push
jns
dec
(bad)
mov
sar
jae
addr16
jecxz
aam
jns
daa
jge
icebp
push
ficom
sar
(bad)
lock
jl
dec
ret
cli
inc
out
out
fisttp
jg
xor
push
mov
jg
push
stos
shl
inc
jp
sbb
inc
push
push
pop
inc
push
addr16
ficomp
in
cmp
int3
push
xchg
pusha
retf
add
ins
aas
jg
fcmovbe
jl
arpl
xchg
xchg
sar
retf
inc
ins
mov
iret
retf
adc
pushf
pop
icebp
sub
gs
mov
data16
and
(bad)
fsubrp
mov
adc
fld
add
xchg
pop
int
ja
xchg
test
cmps
jp
sub
lods
xor
xor
cli
jo
pop
jb
jo
in
inc
iret
cdq
inc
fadd
mov
mov
aas
jns
iret
cli
cmps
int3
mov
in
fcom
rol
aam
push
sbb
jl
data16
cmp
mov
add
dec
sar
mov
adc
dec
stos
mov
mov
push
outs
and
repnz
(bad)
ins
jmp
ins
push
jb
or
das
stos
sub
and
inc
jnp
out
pop
push
adc
mul
data16
pusha
and
arpl
fistp
cmp
jge
jbe
xlat
sahf
dec
mov
cld
push
and
and
leave
shl
shl
in
sar
les
mov
inc
mov
sub
sbb
jne
dec
fadd
xlat
js
test
xchg
mov
outs
push
fisttp
out
fimul
jg
cmp
iret
inc
adc
into
scas
inc
fsubr
fmul
push
or
popa
jg
pusha
ins
jp
pop
icebp
int3
inc
adc
into
inc
jnp
inc
bound
xchg
iret
push
ror
cld
push
xchg
in
(bad)
adc
inc
dec
push
stos
(bad)
rcr
cmp
ret
xor
dec
test
sub
xor
push
es
cwde
pop
jge
sbb
jmp
inc
addr16
push
inc
jl
dec
popa
cld
xchg
(bad)
js
mov
js
mov
xchg
fimul
jge
jp
add
outs
pusha
pop
ins
addr16
sti
call
out
dec
pop
cmp
loopne
std
xchg
inc
jae
mov
jl
sbb
icebp
xlat
mov
adc
mov
sbb
push
std
add
or
sar
dec
sar
jne
push
mov
cmp
call
ror
ds
mov
jge
dec
(bad)
in
in
(bad)
jp
and
out
shl
push
pop
dec
mov
data16
cmp
pop
dec
ret
jnp
enter
test
lahf
ret
in
sbb
out
cwde
fcomi
fimul
out
pop
adc
jp
into
mov
push
data16
push
stos
into
jmp
fcom
pusha
imul
adc
out
jp
in
mov
not
push
fmul
and
mov
out
fistp
into
sbb
cld
nop
mov
inc
cmp
jle
fst
loopne
fdivr
sub
cmp
xor
out
daa
mov
retf
retf
imul
call
cmp
mov
adc
push
std
jns
test
pop
cmp
mov
shr
clc
das
mov
sub
sti
idiv
jle
out
push
mov
mov
in
xchg
(bad)
popf
out
retf
in
int
add
lods
xchg
push
in
gs
push
lds
mov
mul
pushf
fst
test
hlt
hlt
daa
sub
jb
xchg
hlt
xor
cmp
push
cli
aam
adc
dec
inc
fst
mov
sub
fcomi
sbb
ss
in
(bad)
sbb
xchg
jg
(bad)
xor
sbb
adc
mov
scas
mov
int3
cmp
int3
aaa
pop
push
jecxz
xchg
out
push
ror
dec
xchg
int3
es
iret
add
(bad)
cdq
or
lds
push
xor
xchg
sub
jg
repnz
mov
cld
xchg
sbb
jno
or
push
loopne
push
xlat
adc
pop
aam
xchg
dec
test
pop
ret
sar
dec
in
sti
mov
loopne
lahf
mov
sar
adc
iret
(bad)
mov
ret
inc
push
out
jl
jmp
pop
push
lock
stos
mov
dec
sar
(bad)
xor
int3
outs
ds
adc
fbstp
retf
mov
pop
mov
ins
int3
rol
dec
ins
out
fs
test
cmp
cld
shl
outs
dec
out
mov
inc
outs
test
into
cmp
pop
je
cmp
push
cmp
fstp
mov
int3
popa
imul
mov
mov
imul
dec
jmp
inc
sbb
jecxz
enter
sar
cmp
std
adc
outs
aas
ds
jno
push
sbb
pop
repz
repz
jo
(bad)
stc
sbb
fiadd
xchg
fs
(bad)
jno
jmp
sub
mov
jmp
pop
into
dec
addr16
cld
push
fwait
(bad)
jp
mov
(bad)
xlat
and
cmp
int3
cs
jle
jl
dec
movs
std
mov
jmp
jmp
adc
imul
jb
ins
enter
retf
das
cmp
jnp
dec
shr
xchg
enter
iret
mov
ja
mov
inc
js
pop
fld
dec
pop
cmp
jle
sbb
icebp
pop
cmp
int
push
mov
jge
dec
sub
jl
pop
lea
or
popaw
int
iret
jns
stc
push
xor
mov
(bad)
popf
fsubr
cmp
sbb
or
sub
test
and
sub
int
pop
aad
adc
fs
jge
and
inc
mov
mov
dec
jl
jo
fistp
pusha
and
nop
push
fdivr
nop
jb
pusha
sub
and
out
je
stos
pushf
jns
cmc
cmp
rcl
(bad)
into
out
addr16
sbb
nop
ins
rcr
jl
cmp
mov
xor
repnz
(bad)
mov
outs
jmp
out
pop
push
(bad)
push
fstp
adc
cmp
xor
pop
lods
inc
pusha
ja
dec
dec
or
dec
fmul
dec
imul
in
lock
xor
loope
popf
leave
sbb
pop
fdivr
sar
or
adc
dec
test
adc
lods
icebp
mov
mov
sar
imul
es
jmp
adc
sar
loope
icebp
mov
mov
(bad)
nop
jp
mul
jns
jle
iret
dec
cs
stos
ss
int3
pop
adc
ffreep
aad
xchg
add
or
sbb
mov
add
dec
dec
rol
mov
and
rcr
(bad)
mov
pop
jns
jl
(bad)
imul
mov
outs
xchg
add
push
cmp
test
in
shl
lds
rcl
xchg
iret
jmp
inc
(bad)
sbb
jmp
add
dec
in
aad
add
enter
jnp
dec
out
xchg
int3
mov
add
or
pop
addr16
(bad)
(bad)
push
mov
mul
pop
out
inc
dec
push
push
arpl
call
lea
mov
mov
jp
add
xor
loopne
ret
out
rol
fnsave
dec
cmp
imul
mov
std
adc
dec
pop
sti
jle
mov
mov
outs
loope
ds
imul
shr
fild
mov
jmp
out
je
inc
pop
(bad)
nop
jae
mov
pushf
jnp
sub
int3
inc
(bad)
mov
fwait
adc
jae
push
jo
into
inc
jle
jge
cmc
adc
std
cli
inc
xor
sti
ror
pop
cli
push
cmp
push
xor
sbb
in
mov
fistp
or
jge
inc
mov
sar
scas
out
aad
add
fldlg2
jle
inc
in
and
sbb
fistp
sti
shr
pop
fmul
sti
jge
daa
push
aad
fs
and
cli
(bad)
push
mov
sar
xchg
cdq
in
imul
loop
cmp
ret
mov
cld
mov
or
call
call
cli
test
rol
test
stc
adc
repz
cmp
gs
dec
scas
lods
and
xchg
in
aaa
push
cld
addr16
push
imul
jae
adc
loopne
add
fmul
retf
enter
push
add
(bad)
dec
adc
push
mov
(bad)
sar
int3
mov
data16
(bad)
(bad)
mov
jmp
mov
(bad)
lahf
inc
clc
sar
cmp
jo
(bad)
out
test
neg
(bad)
add
pop
inc
xchg
ins
popf
xchg
aam
xchg
inc
xchg
or
add
fstp
push
mov
lahf
adc
jg
adc
or
loope
dec
jecxz
jb
lahf
in
sbb
push
daa
cmp
ficom
in
in
int
stos
jns
ds
dec
dec
mov
loop
ja
ins
xchg
stc
and
gs
xchg
daa
mov
sub
leave
add
cmp
pushf
movs
add
adc
push
ja
xchg
jb
and
push
(bad)
ss
sti
std
adc
call
sbb
push
push
dec
(bad)
les
dec
movs
jae
in
mov
mov
pop
pushw
gs
inc
fisubr
ret
add
push
mov
jg
popf
lods
std
cwde
sbb
test
inc
or
dec
lahf
shl
cmp
mov
enter
js
mov
in
jo
lods
inc
sar
pop
pusha
ficom
loope
push
add
std
test
dec
ret
fdivr
xchg
jg
mov
xchg
push
ror
ds
mov
lods
mov
add
retf
adc
dec
push
or
jae
and
and
pop
jns
dec
aas
inc
iret
jnp
cld
pop
mov
in
pop
out
loop
push
or
aad
out
sbb
fdiv
rcr
(bad)
fadd
dec
jp
xor
not
cmp
sub
mov
test
jge
push
mov
adc
or
push
sub
sar
out
syscall
sub
jl
int
call
push
jge
in
jl
(bad)
hlt
std
cmp
dec
je
mov
and
rcr
aam
push
inc
shl
js
idiv
xor
pop
sbb
dec
push
mov
xlat
add
jnp
(bad)
xor
push
loop
dec
push
jno
dec
sar
cdq
dec
jnp
adc
(bad)
jns
jecxz
sub
push
add
fst
fdivr
jnp
repz
sbb
in
dec
pop
push
xchg
fisttp
sar
fstp
sbb
pop
not
cs
cld
cmp
lea
add
call
cmp
xor
push
jmp
loope
mov
clc
rcr
and
jb
inc
ins
invd
call
fidivr
sbb
into
icebp
sub
jae
call
(bad)
jbe
repz
adc
fs
jo
or
add
and
ret
loopne
mov
out
imul
push
cs
sar
xchg
inc
push
jge
dec
and
fdivr
ficomp
scas
fcmove
mov
add
xchg
sub
xchg
mov
cld
sbb
sar
sbb
rcr
rcl
dec
loope
mov
push
(bad)
scas
(bad)
xchg
cmps
lahf
add
adc
dec
mov
scas
mov
xchg
xchg
cld
addr16
mov
bound
aaa
pop
jecxz
js
push
popf
sbb
hlt
repnz
or
adc
out
mul
adc
fadd
add
push
mov
dec
pop
ja
jbe
ja
jo
std
xchg
dec
into
nop
xor
je
fldpi
xor
mov
loopne
mov
mov
xor
inc
jne
dec
inc
mov
inc
loop
mov
jo
rcl
push
(bad)
inc
sbb
jno
inc
dec
ja
push
jmp
(bad)
push
xlat
sar
inc
hlt
sub
into
ror
scas
adc
retf
mov
cmp
push
pop
mov
iret
cmp
rol
jae
or
pop
loopne
adc
daa
lahf
addr16
jl
mov
adc
in
jo
mov
outs
lds
jbe
shl
outs
jmp
shl
adc
fsin
mov
adc
mov
inc
sub
shr
xchg
sbb
fcom
stc
jae
mov
inc
pusha
int3
fnsave
shr
into
sar
mov
(bad)
adc
(bad)
mov
pop
fnstsw
push
repnz
out
inc
repz
xor
out
rcr
addr16
sub
xchg
mov
xor
out
mov
push
pop
sub
jecxz
push
cmp
dec
stc
push
test
fdiv
dec
dec
cld
cdq
por
xchg
(bad)
jae
mov
call
fnstsw
adc
rol
mov
test
fmulp
jle
outs
sti
and
test
push
mov
or
mov
leave
xlat
mul
icebp
add
mov
leave
jno
neg
nop
dec
(bad)
adc
push
sar
int3
push
jg
retf
adc
iret
pop
(bad)
jns
jge
icebp
in
mov
jmp
aam
xchg
dec
shl
int
jno
xchg
lahf
lods
sbb
sbb
mov
lods
fimul
sahf
mov
mov
pusha
push
cmps
dec
jo
dec
jmp
inc
mov
ficom
mov
sub
xchg
into
std
xor
int
icebp
mov
pusha
mov
sti
add
and
lea
pop
push
test
jge
aaa
mov
sub
push
mov
iret
stc
dec
push
dec
add
or
std
jns
jne
jmp
pusha
dec
pop
mov
mov
ds
fptan
daa
je
stc
push
mov
loopne
or
pusha
or
les
adc
cld
inc
mov
fiadd
js
push
outs
loop
scas
push
fwait
or
das
xchg
push
inc
pop
push
(bad)
jge
pusha
dec
not
jne
push
das
out
push
xor
sbb
not
popa
shl
pop
and
imul
and
jmp
outs
mov
mov
fs
sbb
fs
and
push
jle
dec
fs
bound
lds
dec
cmps
vmovntps
fstp
sti
mov
sar
int3
shl
dec
sar
into
xchg
icebp
test
js
test
(bad)
lock
dec
pop
das
jle
rcr
out
aaa
imul
fsubr
adc
pop
push
pop
les
sar
dec
dec
lds
gs
push
mov
popa
sbb
fldcw
jg
mov
aam
cmp
pop
and
jg
push
(bad)
std
stc
outs
pusha
cmp
int3
xchg
mov
out
adc
arpl
adc
aaa
push
xchg
iret
push
std
xchg
(bad)
dec
jo
in
(bad)
xchg
dec
push
pop
jl
jg
xor
push
xchg
ins
push
cld
xchg
dec
push
xor
mov
or
push
stos
dec
cmp
fsubr
aas
sub
lock
neg
inc
sub
mov
mov
fs
leave
jb
test
repnz
fld
jmp
fst
jnp
loop
ins
pop
rcl
repnz
(bad)
jae
adc
not
adc
int
mov
loop
fidivr
bound
(bad)
mov
(bad)
rcl
nop
push
jne
mov
popa
(bad)
(bad)
popa
and
sar
shl
push
push
jg
iret
dec
(bad)
cdq
inc
(bad)
fidiv
ins
fs
ins
push
mov
or
fdiv
(bad)
xchg
dec
shr
xchg
retf
aam
push
sti
in
icebp
xchg
test
int
jg
fcom
adc
dec
shr
icebp
and
std
or
ins
jmp
and
fistp
cmc
inc
dec
jnp
push
sbb
shl
push
fnstcw
or
ins
nop
and
and
mov
neg
sar
inc
push
daa
xchg
dec
push
jge
call
push
iret
sbb
adc
loop
cmp
dec
repnz
out
js
xor
hlt
push
mov
push
repnz
jg
sar
int
dec
jecxz
jnp
push
inc
sti
cld
mov
into
push
jle
dec
aam
adc
jle
out
pop
adc
jle
das
fs
ja
add
pop
mov
jmp
mov
fst
and
popf
sub
leave
fucom
or
pop
jge
js
call
fwait
pusha
or
inc
call
cdq
cmc
stc
iret
xor
jb
jle
and
dec
lods
fld
test
test
sub
cmps
jle
add
inc
jge
ds
aam
int
in
pop
pop
cli
cmps
or
fst
cmps
clc
jnp
iret
cmps
add
pusha
rcl
xor
mov
stc
rcl
loop
jae
jecxz
xor
dec
in
fst
addr16
mov
sbb
in
adc
icebp
push
jmp
dec
imul
aam
loope
aam
adc
emms
int3
stos
sar
retf
adc
sub
xlat
retf
sti
adc
in
pop
js
iret
jge
dec
in
rcl
test
icebp
mov
stc
icebp
xor
xchg
dec
add
push
pop
js
or
xor
sub
xchg
div
xchg
pop
push
dec
jne
gs
not
popa
xchg
mov
in
xor
sbb
fldenv
fsubr
pop
xor
fcom
fnstenv
stos
int3
push
sub
jle
dec
fdivr
sbb
cmc
push
sar
inc
cld
push
sahf
ins
addr16
popa
loop
imul
push
mov
shr
cmp
call
adc
push
mov
xlat
dec
mov
(bad)
mov
ror
jle
jge
ja
das
cmps
or
pavgw
ins
pop
sar
shr
(bad)
dec
jo
je
retf
stos
jb
and
shl
outs
jno
and
xchg
pop
jmp
xor
mov
aad
int3
jl
mov
jmp
js
sub
call
push
xchg
inc
jp
nop
mov
mov
pop
adc
int3
fucompp
fs
outs
ds
dec
xchg
hlt
fdivr
les
mov
mov
jle
mov
add
mov
jp
bound
push
jnp
out
mov
repz
and
add
pop
push
jge
movs
xlat
ja
into
mov
push
mov
and
icebp
pop
mov
fcom
xchg
call
xchg
(bad)
cmp
xchg
out
call
fdiv
push
mov
call
pop
adc
cld
ror
ret
fnstenv
inc
lds
mov
xchg
shl
cli
jb
add
push
jg
jecxz
mov
(bad)
retf
mov
repz
ret
stos
hlt
add
call
int
repz
out
mov
jg
daa
loop
mov
inc
loope
(bad)
int
iret
cmp
aad
adc
icebp
adc
data16
ins
push
jmp
inc
pop
imul
ins
sbb
sub
lahf
mov
pop
repz
jae
inc
push
xchg
xchg
(bad)
adc
ret
push
xor
arpl
fadd
lods
sahf
call
dec
int3
mov
pusha
(bad)
pop
sbb
mov
call
dec
sar
rcl
xchg
shr
xor
and
(bad)
clc
imul
stc
pop
sahf
xor
pusha
pushf
add
xchg
je
pusha
xor
ret
ret
rol
mov
xchg
xlat
push
and
clc
pop
(bad)
hlt
fld
ins
push
daa
gs
sti
inc
dec
push
jle
int3
int3
jle
add
adc
and
pop
mov
sbb
jb
ficom
ins
jo
fs
addr16
data16
pop
ja
out
push
or
add
mov
rol
test
push
faddp
push
call
push
xor
sfence
mov
adc
lods
cmp
inc
or
dec
neg
xor
fwait
cli
daa
jmp
jbe
jl
xchg
(bad)
pushf
push
stos
in
sbb
sbb
jne
jle
into
mov
adc
int
pop
aas
lahf
iret
das
hlt
retf
dec
cmps
fst
or
pop
popf
mov
ret
push
and
je
jne
mov
stc
loop
les
int3
jne
adc
push
pop
idiv
(bad)
or
cli
mov
fs
sar
ss
jno
adc
(bad)
or
ja
jge
add
cld
inc
jne
ret
dec
adc
xlat
int3
test
add
retf
or
dec
cmp
cmp
call
dec
adc
stc
or
rol
adc
dec
push
sbb
into
ror
pop
or
push
stos
cmps
jg
mov
mov
jnp
out
popf
lods
nop
(bad)
push
call
dec
push
jle
dec
ds
test
xchg
ins
(bad)
(bad)
clc
fsubr
pop
jg
test
pusha
(bad)
pop
cld
inc
jle
push
or
js
inc
leave
push
sub
shl
push
jb
push
push
aad
out
push
movs
dec
add
cmps
inc
jo
out
jae
shr
in
test
or
loop
aaa
loopne
cld
inc
dec
imul
dec
pop
lea
daa
xor
push
mov
adc
jb
(bad)
jge
push
popa
rcl
adc
mov
test
loop
into
aaa
inc
mov
fcmovne
imul
adc
xchg
rcr
test
inc
js
jle
xchg
test
inc
push
or
jle
stc
inc
sub
js
imul
sti
jb
out
push
loop
pop
fld
jnp
rcl
fchs
pop
in
in
enter
sar
shr
dec
mov
pop
in
push
push
mov
ss
pop
fs
pop
mov
jmp
mov
in
in
inc
dec
repz
rcr
adc
push
movs
fwait
iret
jp
mov
sub
cmc
dec
sar
jo
jecxz
cld
jg
in
neg
xor
fnstenv
dec
lahf
dec
sar
push
cli
int3
push
pop
lods
(bad)
push
mov
cmc
push
cmp
jg
jmp
repnz
xor
dec
mov
sbb
push
xchg
cli
sbb
cmps
dec
and
jo
call
xor
pop
pop
stos
adc
xlat
repz
jecxz
ror
(bad)
mov
jmp
jmp
sbb
dec
xchg
int3
push
jo
inc
(bad)
rcr
jl
data16
mov
sar
(bad)
xor
cmp
xchg
scas
push
push
push
call
int
cld
xchg
dec
push
add
repnz
loope
test
cwde
sub
sub
jl
add
pop
arpl
ficomp
push
pop
pop
or
lahf
dec
fimul
clc
aam
loop
fnstsw
inc
adc
add
shr
shr
inc
imul
int3
mov
mov
fadd
push
out
outs
lahf
int3
in
add
daa
cmps
dec
shl
push
dec
out
and
xchg
pushf
xor
ds
int
pop
ss
inc
mov
imul
mov
cmp
mov
xchg
mov
pop
push
xchg
int3
inc
daa
fstp
push
inc
inc
popa
mov
sbb
cli
cli
sbb
xor
imul
out
sar
rol
jl
jmp
ret
dec
push
jl
dec
pop
cmps
add
enter
repnz
rcl
add
push
pop
push
data16
adc
data16
fidivr
test
or
inc
cmp
xor
sub
loope
adc
push
loope
ins
fsubp
shl
inc
retf
push
push
inc
ret
mov
dec
xchg
shl
inc
ja
push
rol
ja
retf
cdq
dec
pop
jno
pop
(bad)
push
in
cmp
out
mov
ficom
movs
out
jmp
fwait
and
not
out
xchg
fwait
(bad)
out
stos
add
(bad)
pop
clc
shl
call
aad
dec
jp
shl
shl
pop
xor
loop
ss
sub
mov
push
dec
add
in
outs
dec
pop
sbb
lock
push
ds
fmul
jg
push
fcomp
ins
or
(bad)
in
outs
test
bnd
dec
push
retf
pop
xor
or
stos
dec
fidivr
fcmovu
and
adc
cs
push
loop
(bad)
xchg
cli
stc
dec
mov
jecxz
xchg
dec
jl
adc
retf
inc
mov
loope
add
inc
fs
shl
push
or
repnz
xlat
rcl
fnstcw
enter
xchg
sbb
pop
fadd
dec
dec
push
lds
pushf
neg
mov
inc
in
aas
fdiv
push
jmp
loop
pop
jmp
mov
mov
scas
jne
leave
mov
jnp
dec
sub
or
shl
dec
shl
fnstsw
mov
fcmove
fidiv
in
jns
mov
cmp
pop
inc
popa
cli
xlat
or
scas
inc
xor
mov
in
aas
fld
jg
xchg
fild
sub
arpl
mov
mov
lods
rcr
cdq
lea
popa
mov
in
sbb
(bad)
ficomp
sbb
sbb
out
push
shr
xlat
(bad)
pop
pushf
dec
sti
dec
ins
clc
jmp
out
dec
(bad)
sbb
arpl
nop
test
mov
(bad)
xor
mov
add
pop
inc
push
push
test
inc
leave
int
loopne
out
arpl
ds
jo
int3
sar
dec
push
call
int3
fdivp
mov
(bad)
xchg
rcl
into
dec
rcl
ins
fcomip
mov
jae
xor
jl
cmp
icebp
sar
in
(bad)
test
loopne
outs
mov
pusha
cld
push
cmp
sar
in
pop
cmp
push
pop
out
aad
push
repnz
bound
mov
popa
dec
loope
outs
jl
lahf
out
push
sbb
ror
mov
pop
mov
fs
mov
pusha
ins
ja
jg
pop
sub
dec
dec
mov
inc
pop
xlat
and
ror
js
sar
outs
shl
(bad)
jp
xor
out
rcr
push
icebp
push
ds
ja
out
dec
(bad)
cmp
(bad)
push
or
push
mov
jl
xor
jg
cmp
je
ja
out
addr16
pop
icebp
or
in
(bad)
sbb
jl
sbb
jg
cmp
push
jg
ds
call
out
in
inc
pop
cmp
popa
imul
inc
fdivr
push
not
or
push
push
call
out
push
jg
dec
push
fistp
dec
inc
setb
aam
movs
dec
push
inc
adc
(bad)
push
sbb
js
cmp
jl
mov
sar
stc
shl
into
pop
addr16
jno
xor
call
out
sbb
shr
shr
jno
cmp
test
popa
cli
fcomp
std
(bad)
and
mov
xchg
pop
clc
(bad)
mov
ret
lahf
inc
icebp
aad
loope
pop
mov
jo
mov
repnz
mov
loop
fstp
imul
out
ins
call
cdq
(bad)
out
into
cmp
adc
cs
fmul
andps
popa
mov
inc
std
and
or
push
jle
dec
sti
dec
adc
jle
ja
aam
push
jp
mov
data16
cdq
lock
out
dec
popa
rcl
out
std
addr16
(bad)
cld
pop
cmp
mov
data16
jno
out
not
in
je
xchg
dec
xchg
dec
push
dec
push
push
addr16
dec
dec
dec
xchg
dec
jno
xchg
(bad)
dec
addr16
inc
jp
fucomi
jb
mov
fs
xor
fisttp
aad
sahf
xor
cmp
(bad)
js
mov
(bad)
cmp
stc
xlat
aas
popa
fmul
mov
push
test
aas
repnz
out
or
data16
aad
addr16
mov
jp
ja
fmul
fist
aad
popa
pop
out
inc
jno
add
mov
push
shl
push
pop
movs
mov
push
neg
dec
jno
sub
addr16
pusha
js
sbb
arpl
mov
(bad)
icebp
aad
ins
enter
imul
(bad)
jmp
fucomip
int
dec
call
dec
push
jg
inc
push
jg
push
pop
scas
xchg
inc
sar
int3
and
dec
dec
neg
dec
call
pop
push
leave
std
ds
jnp
inc
sar
(bad)
push
jg
iret
push
lock
inc
sar
nop
int3
imul
arpl
test
push
aam
loopne
aam
(bad)
repnz
cmp
fbstp
xlat
xlat
mov
ins
(bad)
push
cmp
in
sti
aad
fdiv
test
sti
pop
into
dec
addr16
pop
aam
pop
into
push
sti
xchg
dec
aam
nop
dec
push
jnp
dec
push
dec
dec
bnd
outs
sar
dec
out
int
jl
int
jl
retf
adc
nop
add
mov
xor
int
rcl
(bad)
pop
mov
not
xchg
inc
sahf
push
mov
into
sti
dec
push
dec
int
rcr
jno
xlat
daa
aad
adc
pop
cmp
(bad)
(bad)
jl
dec
fucom
and
push
cld
xchg
dec
cli
jae
jnp
pop
pop
xor
(bad)
xor
addr16
jp
aas
in
pop
mov
sbb
pop
into
popa
shl
cmps
or
gs
cmp
push
mov
addr16
(bad)
mov
jg
sbb
leave
push
out
dec
jmp
pop
inc
mov
aam
(bad)
js
mov
div
xor
pusha
icebp
mov
(bad)
fstp
(bad)
fmul
mov
push
rol
out
sbb
icebp
sub
fistp
dec
push
jge
dec
dec
out
dec
fdivrp
xchg
rcl
dec
sar
dec
inc
fimul
(bad)
jl
xor
int
pop
jle
(bad)
mov
test
push
dec
sar
xchg
int
std
xchg
dec
push
(bad)
adc
push
outs
addr16
jl
mov
jg
aas
data16
lds
sub
push
mov
retf
jbe
fistp
loopne
fst
(bad)
(bad)
push
cmp
fsub
push
push
jge
and
dec
addr16
data16
fs
call
into
outs
icebp
movs
xchg
jecxz
push
clc
push
dec
loopne
mov
data16
mov
jp
mov
inc
jb
mov
icebp
aad
in
adc
adc
push
not
inc
dec
out
inc
sar
retf
xchg
retf
lahf
dec
sar
adc
fmul
xchg
inc
cld
push
test
jb
cmp
push
mov
in
pop
cmp
movs
in
mov
pusha
jp
mov
call
bound
bnd
sub
mov
dec
shl
push
(bad)
int
and
mov
dec
addr16
call
jecxz
push
mov
in
pop
jg
inc
sar
push
push
outs
out
dec
leave
out
rcl
nop
dec
sti
ror
inc
stc
fnsave
(bad)
jp
popf
out
icebp
xlat
sbb
enter
fdivr
inc
test
sbb
(bad)
ja
pusha
mov
xchg
outs
call
std
adc
ret
dec
sar
iret
push
ins
int
cwde
ins
xchg
push
cld
xlat
xor
push
add
repnz
push
(bad)
mov
pusha
std
xlat
ror
outs
std
aad
out
push
xor
jp
xor
call
push
cmp
sbb
jb
sub
aam
out
fs
into
xlat
leave
(bad)
pop
cmp
jno
push
repz
pop
sub
ja
loopne
push
sub
pop
dec
ds
mov
jl
jg
rcl
(bad)
stos
push
dec
jge
into
sbb
xchg
(bad)
fbstp
retf
jb
cmp
mov
push
mov
push
jmp
rcr
ins
mov
and
(bad)
push
xor
xor
lods
dec
pop
mov
lods
sti
push
(bad)
dec
jno
iret
lods
(bad)
nop
retf
adc
lods
ror
leave
in
mov
sti
out
sbb
stc
sbb
fs
mov
test
ror
icebp
push
cmp
push
push
jno
(bad)
movs
nop
popf
push
push
(bad)
adc
inc
daa
xchg
iret
push
jnp
int3
rcr
xor
adc
inc
jg
call
ins
enter
loope
loop
fidivr
xchg
lock
arpl
xchg
jg
cmp
sti
adc
cld
dec
sar
rcl
dec
stos
sar
int
cmp
sti
sar
int
or
rcr
cmp
jecxz
xlat
mov
fidivr
out
sar
dec
lock
adc
jbe
out
pop
addr16
scas
cld
push
pop
out
jg
xor
ficom
icebp
aad
push
lock
mov
out
ret
cmp
ficom
aam
out
popa
repnz
mov
pop
inc
mov
in
fadd
mov
mov
push
pop
cmp
push
and
hlt
xor
stos
stc
xchg
cdq
dec
cmp
out
pop
fsub
jg
sbb
lods
(bad)
cld
(bad)
rcr
nop
dec
push
jg
int3
push
call
sar
or
jl
aas
std
fsubr
jo
shr
or
mov
into
in
fidiv
inc
popa
fs
outs
out
mov
dec
push
std
test
int
inc
mov
cli
pop
xchg
dec
loope
sub
stc
pop
outs
inc
and
sbb
shl
xchg
int3
and
fild
and
into
lods
(bad)
das
inc
cli
cvtps2pi
icebp
icebp
rcl
pop
aas
data16
cmp
jb
adc
jno
loope
icebp
aas
loope
daa
cmp
mov
imul
xor
cmp
in
fisttp
repnz
hlt
repz
cwde
outs
jp
stos
out
jge
xor
fmul
sub
clc
fistp
sar
(bad)
out
jmp
pop
jp
adc
jg
add
mov
inc
sar
lock
rcl
ret
in
addr16
sti
and
imul
and
pop
popa
ins
icebp
shl
out
ror
jae
push
cmp
pop
fimul
leave
dec
or
dec
(bad)
jns
or
jnp
shl
out
jb
hlt
loopne
xchg
shl
cdq
jbe
push
cmp
jge
inc
push
jno
dec
icebp
rcr
int3
outs
not
leave
daa
xchg
dec
jg
(bad)
out
xor
retf
ficom
std
adc
pop
jle
dec
push
jge
shl
adc
xor
ror
fs
xchg
and
jp
pop
fisttp
cmp
mov
int3
pop
enter
js
mov
mov
cmp
inc
xabort
adc
les
in
fidivr
test
scas
mov
into
fs
icebp
in
cwde
xchg
mov
aam
sahf
int3
aam
adc
sar
xchg
inc
push
std
push
int
std
test
dec
je
push
sar
mov
repnz
xor
xor
cmp
xor
shl
out
xlat
xor
xor
(bad)
push
js
xor
icebp
rcr
jecxz
addr16
cld
pop
xor
addr16
cli
loope
call
push
jle
dec
(bad)
inc
or
dec
mov
retf
xor
js
jmp
repnz
jb
add
int3
sbb
loopne
neg
push
push
jo
into
pop
lock
jns
out
cmp
pop
int
push
jno
xor
push
jnp
dec
jp
push
std
or
mov
loop
inc
push
dec
imul
repz
push
push
sti
nop
rcl
iret
inc
addr16
into
push
lock
iret
push
jle
iret
push
adc
push
icebp
push
jl
push
pop
sub
jg
(bad)
(bad)
lock
xor
sar
push
shl
add
stos
addr16
loop
imul
dec
mov
sahf
iret
shl
mov
dec
shl
push
lock
fs
pop
jle
dec
push
call
nop
fild
cdq
push
out
aad
push
jp
mov
dec
test
outs
stc
(bad)
inc
imul
outs
daa
idiv
xlat
and
dec
addr16
and
push
and
ja
lahf
clc
shl
mov
pop
into
adc
dec
addr16
loope
pop
cmp
std
cdq
iret
icebp
call
js
imul
out
icebp
in
xlat
loopne
adc
jg
mov
xchg
jae
(bad)
pop
xchg
dec
xor
aad
loope
(bad)
xor
push
(bad)
push
iret
push
jle
int
icebp
out
aam
xchg
inc
sub
adc
mov
outs
mov
jmp
ret
sub
mov
ret
into
push
mov
jle
mov
adc
mov
repz
and
push
sub
inc
dec
lea
shr
jne
dec
ins
adc
cmp
dec
shr
(bad)
sahf
pop
aam
ins
rcl
adc
jge
rcl
jne
retf
leave
psubd
fs
or
dec
(bad)
xor
ror
sar
loopne
(bad)
xor
enter
shl
xchg
pusha
addr16
mov
ins
repz
cmps
in
hlt
dec
xor
addr16
clc
out
xor
fiadd
in
jne
xlat
out
sub
dec
das
add
push
xor
js
mov
idiv
aad
std
in
ror
jecxz
div
data16
pop
and
out
sar
cdq
cld
fadd
cdq
inc
sti
push
mov
mov
cli
push
cmp
cmp
or
cwde
push
test
mov
(bad)
sar
loop
out
inc
jb
cdq
out
ficomp
in
sar
fs
cmp
jno
mov
fist
adc
inc
xchg
into
dec
dec
xchg
and
cmp
loopne
lock
adc
icebp
ds
fisttp
loope
icebp
xor
jg
xor
cmp
out
fdiv
out
outs
out
jb
daa
inc
out
fwait
jmp
(bad)
jno
sub
addr16
aad
pop
jno
dec
push
xchg
adc
dec
rol
sub
pop
out
inc
sar
adc
dec
sti
adc
push
jne
adc
add
daa
xchg
in
xlat
xor
jns
popa
clc
(bad)
mov
push
(bad)
xchg
into
sar
cmc
(bad)
push
sti
xchg
int3
jmp
jbe
aad
popa
(bad)
fdivp
push
cmp
out
shr
push
sti
push
mov
hlt
jns
pop
dec
addr16
jge
and
push
cmp
push
icebp
cdq
int3
aam
cdq
dec
push
ja
shr
repnz
inc
dec
and
inc
pop
push
cmp
cmp
pop
mov
ret
and
dec
aaa
adc
dec
sar
adc
jmp
stc
add
pop
push
dec
dec
sar
into
rcl
mov
jmp
in
push
pop
sbb
outs
mov
addr16
in
xlat
test
outs
jp
mov
sti
or
add
int
sti
jmp
dec
mov
icebp
adc
sub
dec
sti
shr
and
mov
mov
mov
xor
retf
adc
aas
(bad)
dec
ja
pusha
mov
fidiv
mov
pop
fmul
sub
cmp
jnp
stc
pop
dec
addr16
out
xlat
or
jb
xor
ja
dec
iret
in
dec
fadd
mov
mov
xor
adc
mov
nop
dec
sar
sub
push
sbb
cmp
(bad)
fist
retf
ds
icebp
enter
pop
xor
jns
cmp
out
mov
dec
out
cmp
outs
repz
in
pop
cmp
popa
fdiv
out
jge
xor
cli
sbb
fadd
aad
ss
rcr
in
out
dec
pop
not
data16
xchg
iret
gs
cdq
jle
repz
mov
jmp
push
not
rcr
ds
out
dec
sar
adc
jl
dec
bound
iret
push
jge
into
inc
cmc
push
push
repnz
bound
mov
push
push
cld
adc
sar
xchg
dec
aam
mov
jnp
dec
shl
dec
jg
mov
cld
dec
ds
in
push
xchg
push
sti
pop
jecxz
(bad)
sub
inc
inc
(bad)
sbb
jl
test
jp
sbb
cli
pop
mov
inc
leave
jbe
out
fisubr
loop
inc
sub
neg
push
js
adc
cdq
je
push
mov
pop
loopne
cdq
ret
or
jp
mov
cli
jae
outs
dec
mov
cmp
gs
jl
(bad)
cmp
push
push
and
or
retf
sbb
int
pop
jg
or
std
cmps
into
shl
xlat
sar
xchg
int
and
sahf
je
mov
sahf
push
push
xor
or
mov
into
jno
nop
dec
mov
sbb
push
mov
hlt
jno
in
jle
cmp
inc
(bad)
or
out
push
cld
(bad)
imul
hlt
stc
push
mov
mov
icebp
aad
popa
jb
outs
push
std
mov
pop
inc
es
in
scas
add
inc
mov
ret
stos
xchg
xchg
in
sbb
dec
aam
sub
jge
pop
sar
pop
push
mov
dec
popf
push
sub
xchg
mov
(bad)
lock
popa
cli
fnstsw
loop
xor
push
lahf
push
(bad)
clc
aam
out
push
xor
xchg
mov
icebp
cmp
popa
loop
div
inc
pop
icebp
in
inc
test
mov
mov
int
fld
inc
test
bound
xchg
leave
sub
cld
push
sbb
jmp
(bad)
repnz
xor
jnp
xor
call
jl
iret
in
mov
call
mov
sar
div
mov
adc
test
xchg
int3
jle
adc
mov
stos
data16
push
cs
jg
mov
push
ds
icebp
push
cli
ja
addr16
jl
mov
bound
aas
loop
addr16
pop
cld
aad
in
jg
xor
aas
in
jle
push
pop
jge
inc
push
ja
iret
pop
mov
jp
lds
jle
ja
fcom
mov
rcr
dec
cli
retw
dec
sub
xchg
dec
shl
xchg
dec
mov
push
sbb
(bad)
push
xor
fs
inc
mov
mov
sahf
out
icebp
not
jb
aas
out
push
int3
shl
ds
jbe
xor
jno
data16
xor
(bad)
mov
(bad)
in
ror
gs
or
aam
push
rcr
(bad)
popa
and
aad
mov
icebp
push
pop
add
mov
mov
xor
call
not
pop
aam
stos
dec
hlt
stc
add
rcr
in
rcr
push
push
cdq
nop
rcl
ins
rcl
stc
(bad)
dec
dec
inc
jmp
sti
push
push
dec
stc
push
cmp
mov
dec
popa
addr16
iret
sar
adc
int3
or
xor
out
ficom
push
inc
shl
adc
(bad)
dec
inc
sar
adc
aam
xchg
dec
pop
out
rcl
jg
call
dec
push
(bad)
(bad)
aam
xchg
dec
push
inc
mov
jg
mov
pusha
and
sbb
rol
repz
icebp
mov
push
div
out
iret
ds
jge
mov
push
in
xor
pusha
in
inc
repnz
push
data16
mov
push
cld
stc
mov
jnp
cmp
(bad)
aad
pushf
mov
int3
sar
adc
inc
adc
repz
cli
bound
imul
pop
ins
rol
call
rcr
dec
jl
push
data16
sar
out
push
mov
mov
jg
xlat
push
jl
inc
fmul
mov
sar
int3
push
jle
dec
dec
addr16
xlat
xor
loopne
mov
dec
stos
sbb
stc
rol
cmps
into
sub
xchg
je
arpl
in
shl
inc
pop
icebp
mov
aam
sbb
in
dec
je
cdq
loopne
mov
int3
jecxz
xchg
lods
in
lahf
xor
(bad)
xor
(bad)
mov
popa
hlt
adc
inc
xchg
dec
pop
movs
push
mov
lock
in
retf
inc
jle
push
pop
ja
ja
dec
sub
dec
inc
xor
pop
dec
aas
or
inc
xor
aam
je
shl
out
cmp
int3
and
(bad)
jnp
sbb
or
popa
and
(bad)
adc
xchg
int3
inc
cld
dec
fwait
or
repnz
jp
call
(bad)
pusha
pop
pop
xchg
jmp
dec
lock
icebp
mov
dec
call
push
enter
ret
(bad)
push
ds
outs
dec
or
into
dec
dec
loope
xchg
dec
in
add
push
shl
clc
push
popf
sbb
jle
(bad)
xlat
push
aam
retf
pop
push
jge
dec
inc
cmps
mov
outs
mov
sbb
and
call
mov
inc
icebp
mov
icebp
aad
jle
push
xor
fnstsw
push
pop
jl
inc
pop
rcl
mov
or
mov
ds
ret
pushf
ins
push
int
jnp
sub
call
enter
pop
rol
mov
jg
lahf
loop
addr16
call
mov
xor
pop
jle
loope
cld
adc
shl
or
shl
into
loop
adc
and
jl
out
rcr
xchg
jmp
cmp
xor
ins
jbe
dec
mov
jnp
jbe
cmp
jae
dec
push
jle
(bad)
repnz
std
popa
jge
loope
shl
(bad)
pop
dec
xor
push
ds
sar
daa
gs
dec
sar
dec
div
adc
jle
adc
add
(bad)
repnz
mov
stos
adc
shl
xor
mov
dec
(bad)
in
fisubr
mov
inc
in
push
retf
mov
mov
push
inc
xchg
pop
inc
mov
jmp
sbb
into
call
jle
dec
push
jnp
iret
jmp
xor
cmp
(bad)
mov
pop
dec
int
not
inc
push
push
mov
ins
(bad)
retf
mov
push
cmp
mov
icebp
push
aaa
inc
pop
push
mov
(bad)
cld
shl
inc
ficom
out
bnd
outs
mov
xor
push
aad
or
cli
push
cdq
loope
mov
hlt
fsubr
sub
jmp
cmp
mov
in
aaa
pop
dec
mov
mov
stc
std
cmp
add
jle
dec
sar
rcl
adc
(bad)
test
shl
dec
dec
mov
mov
xlat
xchg
sbb
ja
push
iret
(bad)
scas
cli
cli
xlat
mov
cli
pop
mov
icebp
je
dec
cmc
(bad)
mov
in
mov
pop
not
dec
lods
pop
xchg
add
and
pop
mov
icebp
rcr
jne
addr16
push
jg
dec
(bad)
rcr
jne
cmp
addr16
xchg
icebp
inc
movs
outs
es
test
sub
jl
test
int
cld
push
inc
sar
into
push
jle
dec
(bad)
leave
cmp
rcl
lods
push
jp
mov
iret
or
mov
pop
cmp
jl
cmps
loopne
enter
push
mov
jmp
sub
mov
mov
adc
jae
clc
sbb
lock
mov
pop
or
push
xchg
inc
(bad)
aad
gs
jno
(bad)
push
cwde
add
pop
xor
push
ja
push
setae
(bad)
out
out
inc
aam
sar
stos
inc
aad
(bad)
not
jnp
inc
sar
adc
jg
push
aam
nop
inc
sbb
int3
dec
aaa
mov
(bad)
(bad)
aad
loop
push
cwde
mov
push
sahf
addr16
push
cmp
(bad)
sar
fs
fstp
popa
and
or
jge
mov
lahf
mov
leave
push
stc
shr
out
cli
dec
cmp
jmp
mov
das
cmps
adc
push
jge
dec
or
pop
sub
jno
mov
jmp
adc
test
xchg
dec
xlat
jb
push
jo
mov
ror
xchg
dec
frstor
int
sti
adc
dec
outs
ins
push
js
mov
(bad)
push
mov
(bad)
out
aas
out
cmps
dec
jne
jg
dec
mov
jnp
dec
enter
repnz
loopne
inc
pop
jb
cld
test
in
xchg
dec
push
out
push
push
ja
int
push
sub
std
push
adc
push
cmp
outs
scas
mov
mov
adc
push
inc
mov
jne
movs
adc
sub
jl
jnp
jb
cmp
daa
jns
push
jg
int3
aam
nop
dec
push
jle
dec
rcl
cs
test
ds
xchg
stc
dec
push
inc
xchg
mov
mov
push
popf
(bad)
call
std
inc
mov
lea
cli
xor
loope
mov
shl
push
xlat
inc
dec
mov
inc
ds
dec
daa
xor
jg
aas
popa
jno
and
jno
cmp
stos
rcr
push
addr16
inc
inc
rol
int
jl
xlat
push
(bad)
adc
bound
push
fdivr
or
rcl
shl
ins
cld
(bad)
aad
aam
mov
outs
repz
sbb
xor
fprem
repnz
cmp
aad
jle
in
cdq
lock
lds
push
push
jge
dec
icebp
(bad)
sbb
mov
inc
std
xchg
iret
mul
xchg
(bad)
stc
shr
in
mov
sti
cdq
iret
rol
xchg
int
sti
sub
popa
adc
int3
xchg
cmp
iret
mov
xlat
sub
pop
adc
pop
mov
jg
cmp
arpl
mov
pop
dec
fwait
adc
dec
sbb
cld
push
ds
rcl
sub
(bad)
cdq
pop
push
ja
iret
jle
and
ret
(bad)
mov
push
sbb
push
std
adc
dec
push
jl
fsubp
inc
adc
data16
push
jns
and
stc
in
(bad)
hlt
aad
bound
jo
push
(bad)
cmp
push
ja
(bad)
jno
ds
imul
mov
push
push
ja
dec
call
sub
mov
in
ins
rcl
sub
stos
addr16
iret
push
inc
adc
push
jmp
mov
fcomip
sbb
fadd
ds
retf
imul
loope
jmp
inc
dec
(bad)
bound
adc
shl
xchg
dec
push
mov
xchg
cli
jl
dec
lock
dec
imul
dec
cli
movs
xchg
(bad)
(bad)
adc
or
push
cmp
popf
xor
pop
jb
pop
das
jo
fnstenv
pop
dec
out
popa
cli
jno
out
sar
fs
ds
push
aam
(bad)
xor
dec
push
outs
stc
pop
cmp
jecxz
add
pop
hlt
push
adc
loopne
fstp
ja
les
push
push
ja
int3
cld
push
das
popa
jp
aas
loopne
dec
inc
push
jb
mov
rcl
xchg
ins
aam
fcmovu
loope
adc
pop
ss
cmp
call
mov
sar
retf
(bad)
jecxz
int3
lods
int3
ret
pop
pop
out
test
cli
icebp
mov
jle
leave
pop
cli
fidivr
dec
addr16
std
scas
neg
dec
xchg
repz
mov
jb
cmp
or
mov
jp
adc
pop
(bad)
pop
pop
sar
push
mov
push
fistp
aam
(bad)
xor
adc
ja
int
(bad)
loope
dec
fist
ja
out
les
cdq
leave
in
retf
fs
pusha
adc
xchg
pop
(bad)
stc
nop
retf
or
sar
out
mov
adc
jl
dec
mov
inc
jle
pop
dec
daa
ds
clc
pop
adc
sar
loop
xor
push
js
mov
cli
mov
neg
xchg
(bad)
(bad)
ins
imul
inc
dec
addr16
pop
mov
(bad)
stc
push
cmp
xor
int
xchg
sub
mov
addr16
jp
mov
push
pop
mov
pop
mov
dec
push
call
dec
scas
mov
mov
inc
lods
xor
and
repz
(bad)
dec
aaa
xor
jl
push
jle
iret
jb
nop
xchg
aam
adc
out
inc
sar
into
push
jnp
int3
pop
cld
adc
dec
or
xchg
into
dec
loope
dec
shl
xchg
dec
sar
sbb
pop
sti
mov
fst
sar
mov
pop
addr16
and
or
pusha
xchg
cli
push
cs
inc
jmp
bound
adc
mov
ret
jnp
or
(bad)
dec
lock
sbb
dec
inc
fidivr
mul
xchg
dec
pop
jmp
rol
push
out
cld
push
es
add
movs
imul
jge
ret
pop
adc
mul
rcr
imul
test
pop
out
iret
aam
xchg
ror
into
sar
cwde
rcl
inc
sar
dec
ret
mov
inc
sub
xor
lock
push
mov
xor
addr16
push
out
mov
pop
daa
sub
pop
rcl
dec
addr16
inc
cld
push
mov
cld
xlat
ds
psubb
movs
jns
mov
jne
xchg
or
mov
adc
sahf
movs
add
cmp
adc
movs
in
pop
fst
int3
cmps
bound
popa
clc
pop
pop
in
cmc
outs
lahf
(bad)
pop
mov
(bad)
jno
pop
bound
in
fisttp
out
push
xor
stc
xlat
jne
fsub
ja
push
cmp
fcomp
inc
arpl
sbb
add
idiv
fs
(bad)
xor
fidiv
xor
out
addr16
inc
pop
lds
popa
loope
mov
cld
aam
out
(bad)
mov
ja
in
in
loope
std
sahf
(bad)
fld
adc
bswap
int
or
cwde
sbb
call
dec
push
jo
fld
jl
mov
or
mov
gs
std
or
push
jge
retf
xchg
dec
lds
push
lods
xchg
dec
push
cld
mov
push
std
nop
dec
push
call
push
jnp
iret
xlat
les
jne
into
xchg
dec
test
xor
push
ret
addr16
jg
sub
ja
in
push
sub
loopne
(bad)
pushf
pop
ja
adc
addr16
xor
(bad)
adc
shr
sbb
xlat
daa
fsub
test
out
test
mov
out
fmul
add
dec
xchg
loope
jge
into
jg
fistp
pusha
lock
idiv
shl
adc
jo
xchg
xor
cmp
jo
in
jnp
imul
sub
jmp
lahf
ja
icebp
mov
cld
adc
jnp
retf
adc
jbe
lds
ja
inc
sub
imul
mov
jl
and
jg
sbb
jbe
sbb
imul
inc
or
loope
push
cmp
idiv
je
rcl
dec
push
jo
ret
pop
inc
xchg
int3
(bad)
adc
ins
dec
outs
sub
pop
stos
fs
jg
(bad)
push
and
mov
pusha
(bad)
xchg
(bad)
hlt
imul
and
je
aam
jle
ja
icebp
cmps
(bad)
mov
inc
movs
pop
fadd
jg
jg
iret
sbb
nop
dec
push
cwde
xchg
adc
push
pop
jne
sub
rol
loope
je
mov
or
aad
dec
icebp
mov
inc
rcr
push
pop
(bad)
cmp
arpl
jg
retf
xor
sahf
iret
push
sti
xchg
into
push
pop
adc
sar
(bad)
xchg
into
int3
mov
sub
sbb
out
cs
lock
xor
jp
popf
repnz
in
jmp
mov
push
shl
popa
adc
pop
lock
jb
(bad)
push
jp
mov
popa
mov
push
lods
pop
sub
adc
jg
xchg
call
xchg
cld
loop
adc
rcr
fst
push
dec
jnp
fcomp
into
sahf
ret
gs
inc
adc
shl
mov
outs
popf
shl
sti
shr
sub
dec
ror
rcl
dec
call
(bad)
xchg
cmp
popa
push
xor
out
mov
pop
ret
xchg
dec
call
jne
cmp
fcom
pushf
arpl
in
sti
xor
popf
or
or
in
out
call
cmps
push
cld
rcr
(bad)
push
inc
jne
jp
xchg
les
add
mov
adc
add
adc
or
into
lods
push
xchg
hlt
mov
mov
pop
icebp
shl
fs
mov
int
enter
aad
out
jle
int
gs
into
aam
adc
enter
jl
xchg
lds
xchg
push
enter
js
lods
in
call
xchg
cld
push
test
dec
shl
data16
xor
div
out
jo
inc
jle
add
mov
inc
dec
jg
push
dec
jbe
inc
sub
and
repz
xchg
inc
lahf
jecxz
loopne
jle
inc
sbb
dec
push
shl
xchg
int3
jmp
cdq
ret
sub
icebp
xor
and
cmp
addr16
sbb
xor
dec
push
adc
push
gs
retf
adc
repz
fcom
sbb
loop
test
bound
and
js
(bad)
xlat
jl
mov
fcomi
xlat
adc
mov
loopne
addr16
sar
pop
in
push
ds
pop
out
fs
pop
xchg
(bad)
push
xor
ins
clc
ja
lock
shl
add
cli
or
pop
mov
(bad)
pop
imul
jge
shr
(bad)
clc
rcr
lds
push
sar
mov
cld
ins
adc
cli
sbb
inc
pop
ja
inc
rcl
xor
dec
in
(bad)
pop
ins
std
mov
cld
nop
retf
adc
sti
xchg
inc
sar
aam
push
xchg
int3
cmps
in
xor
addr16
daa
iret
mov
out
js
push
rol
pop
ret
cmps
jno
sub
icebp
sub
mov
jae
in
rol
or
sbb
sar
push
dec
out
sahf
int3
rcr
fs
push
(bad)
adc
ficomp
ds
adc
xor
jo
inc
jp
gs
dec
pop
ret
mov
sbb
(bad)
lock
mov
cs
sub
cld
push
(bad)
(bad)
jg
cmp
inc
pop
mov
jne
(bad)
mov
cld
pop
imul
(bad)
aas
inc
(bad)
adc
inc
or
jle
dec
ss
add
shl
fcom
add
sub
cli
pusha
int3
bound
and
push
imul
push
push
(bad)
sahf
dec
rcl
iret
dec
fstp
xchg
aas
jecxz
imul
push
gs
stc
xor
push
std
xchg
dec
push
inc
loope
sahf
shl
ror
ds
cli
push
mov
jg
cmp
jl
sub
sbb
lods
bound
xor
cmc
inc
int3
mov
jmp
mov
push
jb
mov
inc
push
dec
(bad)
inc
xchg
(bad)
jmp
adc
sahf
xchg
dec
mov
loop
mov
sbb
dec
pop
adc
pop
div
adc
std
pop
pop
nop
stos
adc
xchg
push
push
push
ds
add
cmps
cmp
sub
xor
into
loopne
mul
popa
and
cdq
out
(bad)
movs
inc
jb
mov
cld
push
mov
(bad)
jp
cmp
xor
sub
(bad)
push
jge
ficomp
cs
test
jns
fcom
dec
ror
fs
sar
xchg
int
jle
(bad)
mov
pop
mov
xchg
push
test
push
bound
sar
mov
mov
jb
jl
jo
retf
jmp
out
ror
inc
js
sbb
jg
cmp
inc
pop
std
lods
mov
dec
out
out
jg
mov
jb
das
out
push
mov
nop
lods
push
xchg
int
out
and
push
ins
movs
stc
push
push
mov
push
adc
repnz
mov
js
sub
sar
mov
push
cld
pushf
push
push
cld
nop
iret
push
sti
xchg
dec
dec
sar
stc
(bad)
aad
(bad)
jb
or
bound
sar
les
aas
data16
jge
(bad)
mov
mov
test
pop
sbb
cmp
dec
frstor
push
mul
fcomip
daa
adc
pop
lods
push
dec
fdivr
addr16
out
not
out
dec
aam
int
aam
xchg
shl
sbb
popf
inc
dec
xchg
aas
bound
xchg
in
outs
ja
jo
ror
popa
icebp
jae
in
push
data16
push
std
xchg
inc
inc
cmps
xchg
iret
sar
std
rcl
sahf
iret
jb
adc
jo
or
pushf
dec
sbb
mov
leave
inc
lods
(bad)
movs
xchg
xor
cmp
and
push
xchg
jp
aad
outs
push
out
push
(bad)
push
sub
mov
mov
jecxz
in
out
loopne
push
rcl
jge
jl
inc
shl
arpl
popa
xchg
cwde
push
call
inc
dec
jle
xchg
cmovle
sub
push
jg
dec
jne
sub
bound
mov
jns
mov
imul
in
pop
addr16
ins
push
jl
int
xchg
xchg
dec
and
stc
mov
scas
dec
test
mov
cld
aad
ret
mov
jmp
jb
fldcw
call
sub
inc
pop
cmp
sar
push
dec
adc
jecxz
rcl
pop
push
jg
mov
icebp
push
mov
(bad)
sub
retf
outs
add
push
adc
sub
aam
xchg
inc
dec
mov
dec
push
sti
fadd
add
mov
push
std
push
int
push
aas
out
xchg
xor
jl
test
addr16
sub
cld
paddsb
mov
sti
jg
scas
loope
ja
in
xchg
mov
fisub
ror
out
into
loop
and
dec
mov
pop
icebp
adc
xlat
lods
pushf
ficomp
sub
(bad)
loope
jle
scas
rol
sar
stc
jmp
rcr
cmp
pop
lea
jb
sub
dec
out
(bad)
std
push
ds
rcr
idiv
cmp
ret
cdq
and
inc
inc
adc
repnz
outs
icebp
shr
ret
jecxz
jl
inc
push
test
rcl
mov
rcl
xchg
and
push
arpl
cmp
jo
push
push
call
dec
lods
(bad)
adc
not
test
outs
and
(bad)
sub
jp
cmp
pusha
push
mov
icebp
aad
inc
xchg
jbe
in
jb
shl
aaa
inc
sbb
add
jmp
addr16
(bad)
sar
in
out
xor
clc
out
cdq
loope
test
iret
pop
das
adc
imul
out
adc
push
and
repz
jae
fcom
ret
cli
push
pusha
push
idiv
les
mov
fist
xchg
int
std
xchg
retf
sahf
dec
add
popa
jo
xchg
addr16
sub
fistp
mov
loopne
pop
lods
jp
(bad)
fcmove
pop
repz
dec
jge
add
aad
js
mov
mov
es
leave
inc
jg
cmp
in
xlat
fistp
int
out
and
jmp
scas
xlat
jg
lahf
bnd
xor
xor
inc
push
xchg
mov
dec
call
mov
shl
into
fsub
mov
cmc
test
sbb
loopne
mov
push
jle
aas
or
aaa
les
outs
jmp
inc
ret
jecxz
nop
stos
push
sar
dec
mov
adc
retf
add
mov
mov
in
sar
fwait
sar
test
sub
retf
call
and
bound
repnz
push
pop
fild
data16
shl
loop
xor
inc
int3
aaa
into
shl
dec
mov
scas
pushw
push
jnp
inc
stc
in
or
push
lea
dec
ret
mov
imul
test
icebp
lock
sar
int3
enter
sar
iret
enter
loope
pop
aam
cs
push
repz
shl
inc
mov
inc
clc
fistp
loop
ja
in
loope
mov
pop
out
inc
icebp
shl
sub
jg
dec
movs
aad
mov
movs
(bad)
std
shl
scas
outs
jle
frstor
in
(bad)
and
inc
cmp
push
adc
lds
dec
jb
adc
jnp
mov
loop
jns
gs
jle
sti
xlat
sahf
xlat
cli
jno
loope
push
adc
shl
in
repz
in
dec
int
push
call
dec
push
cld
xchg
into
pop
sbb
add
and
out
fyl2xp1
push
cmp
jle
aad
inc
fs
push
xchg
repnz
rcl
mov
out
cmp
xor
js
add
pop
shr
mov
sbb
inc
xor
mov
sub
neg
popa
dec
imul
lods
xor
or
cld
popa
cmp
jp
mov
ins
jmp
in
(bad)
cmp
push
ret
loopne
ret
fisttp
out
jo
mov
push
jl
int
pop
adc
push
jnp
dec
add
xlat
or
fcomip
mov
(bad)
push
cld
xchg
into
xor
jle
fmul
adc
lock
xor
fdivr
outs
and
jmp
out
cmps
dec
out
adc
aad
outs
js
cdq
loopne
pop
ss
jo
mov
dec
imul
jmp
sbb
xchg
inc
jmp
xchg
jmp
int3
add
jmp
add
in
xchg
xchg
mov
ret
or
ins
push
fcmovnb
fs
mov
fisubr
mov
cdq
jg
shl
sub
add
xchg
dec
sar
ins
sbb
sti
xchg
dec
int3
data16
popa
(bad)
outs
test
push
mov
mov
div
pop
push
cmp
ror
stos
mov
in
scas
push
jmp
jmp
push
add
mov
leave
cmp
nop
(bad)
repz
jmp
aad
ins
dec
cmp
in
jl
mov
aam
mov
fadd
in
icebp
retf
call
(bad)
int
(bad)
int
fucomip
mov
stc
pop
ret
pop
and
push
jmp
jnp
cld
mov
shl
dec
aam
repnz
setb
push
repz
push
jmp
mov
arpl
inc
pop
ret
and
jg
mov
xlat
arpl
xchg
jo
stos
push
jne
mov
inc
outs
mov
sar
sti
or
in
jl
int
ficomp
jmp
shr
lahf
inc
std
out
pop
push
lock
push
cld
xchg
iret
ret
mov
ss
mov
dec
cmps
ret
repnz
sub
inc
mov
out
inc
push
pusha
push
push
js
and
jb
xor
ficom
(bad)
pop
addr16
dec
fadd
inc
push
jmp
dec
cli
xlat
sbb
daa
mov
xchg
gs
inc
lea
call
dec
mov
dec
push
jo
int3
push
jnp
dec
push
(bad)
sbb
inc
cmp
dec
(bad)
push
jmp
out
mov
in
bnd
fs
mov
push
cld
adc
(bad)
adc
jl
dec
add
dec
shr
adc
inc
mov
daa
leave
sti
push
sub
adc
and
inc
jecxz
and
push
loop
add
xor
ret
fwait
jl
mov
test
(bad)
sti
mov
les
or
pop
mov
add
call
sar
and
push
sar
cld
dec
mov
iret
fistp
dec
push
call
iret
cli
cmp
or
call
iret
jno
push
test
es
repnz
(bad)
jmp
push
push
ror
bound
data16
out
mov
bound
cmps
push
fsubr
xlat
aaa
dec
jp
xor
jg
stc
iret
outs
inc
aaa
lock
fistp
pop
repz
fild
push
or
js
sbb
dec
jmp
(bad)
inc
sub
push
push
lahf
iret
dec
pop
icebp
ja
fsubr
lahf
inc
call
data16
(bad)
mov
mov
jl
mov
popa
jecxz
adc
inc
and
mov
push
jg
retf
lea
sub
je
inc
jno
or
sti
push
mov
bound
mov
cmp
add
mov
sar
or
rol
cmp
cmp
rcr
inc
leave
loope
loope
loope
jecxz
cwde
popf
lock
xor
fmulp
imul
sub
and
pop
test
out
sar
push
lock
pop
adc
clc
call
cmovno
mov
cli
push
ds
movs
push
inc
push
cmp
icebp
push
mov
aam
leave
ds
pop
fs
out
out
jp
cmp
out
jno
out
fild
push
out
js
add
bound
cdq
neg
mov
arpl
frstor
(bad)
fidiv
fs
xlat
xlat
int3
popf
push
jae
sbb
lock
repnz
add
(bad)
xlat
cmp
xlat
mov
shl
push
jno
inc
(bad)
(bad)
sbb
aad
dec
sbb
(bad)
jg
sub
xchg
(bad)
push
call
pop
std
(bad)
dec
push
xchg
adc
xor
adc
rcr
daa
inc
pop
push
cmp
cld
push
mov
and
ds
fstp
inc
jg
mov
leave
pminub
(bad)
cmp
xchg
iret
mov
imul
in
jns
es
or
cmp
add
les
cmp
push
loop
dec
fdivrp
xor
aam
sahf
dec
push
jmp
adc
and
sar
jne
push
lock
sti
jl
out
push
leave
pushf
cmc
iret
ins
adc
ror
cdq
adc
popa
outs
sar
inc
stc
shr
loopne
sar
fs
jge
inc
xor
addr16
xlat
pushf
les
mov
cs
mov
popa
aam
mov
push
fild
inc
jle
mov
sar
sbb
adc
out
xchg
int3
ret
push
inc
xchg
je
xor
cmc
xlat
or
or
xchg
into
(bad)
icebp
cwde
mov
xor
ins
push
sbb
push
fsub
adc
enter
pop
mul
loope
push
cmps
(bad)
loope
xor
jb
and
push
inc
bound
mov
cmps
(bad)
fstp
out
sar
sbb
fdiv
xor
imul
inc
test
sub
jmp
cdq
pop
and
cli
push
cmp
rcl
jmp
dec
xchg
jae
inc
sub
push
mov
mov
push
cdq
mov
jge
push
mov
scas
jle
sbb
icebp
pop
cmp
(bad)
cmp
scas
dec
addr16
pop
inc
jge
movs
ins
ficom
rcl
xor
std
iret
(bad)
fisubr
jg
(bad)
sbb
out
fstp
lods
push
sti
mov
jecxz
sbb
and
repnz
jp
std
aaa
jns
dec
jp
ficom
dec
sar
outs
dec
(bad)
push
adc
jmp
fidiv
in
sahf
cmps
sub
adc
jecxz
popa
popa
sar
and
mov
leave
mov
cmps
leave
ins
(bad)
cmp
test
out
jo
jg
les
js
dec
cmp
pop
test
xlat
in
mov
mov
cmp
sahf
out
jns
aas
rcr
fnstsw
inc
inc
xor
push
sbb
push
sbb
je
ss
or
leave
bound
fs
out
repnz
xor
imul
movs
clc
pop
mov
push
push
icebp
adc
icebp
sbb
push
or
push
popa
aam
das
hlt
enter
pop
ja
sar
out
out
pop
lods
and
(bad)
add
sti
sahf
into
mov
jo
mov
inc
(bad)
cmp
ins
push
addr16
pop
enter
hlt
push
das
fs
cmp
neg
sbb
imul
mov
dec
out
xor
cld
push
ds
outs
xor
push
out
cdq
(bad)
jp
xchg
pop
addr16
div
xor
loopne
cwde
retf
push
sbb
aad
adc
fistp
in
inc
in
push
jg
int3
dec
out
into
push
jno
dec
push
jo
retf
xchg
dec
stos
xor
mov
pop
mov
fs
jle
dec
sar
adc
jge
int3
pop
fcom
dec
loopne
je
jp
test
adc
rol
xlat
inc
int
arpl
js
add
inc
jp
jecxz
push
arpl
mov
push
movs
cmps
pop
dec
mov
es
mov
push
(bad)
adc
arpl
retf
xchg
inc
cmp
mov
push
jp
xor
repnz
pusha
xor
jge
sar
retf
adc
jle
aaa
shl
sahf
or
gs
dec
popf
sahf
repnz
mov
mov
lods
cld
fadd
inc
fsub
movs
icebp
inc
sbb
cmps
jge
test
lock
jne
not
in
js
sub
jno
sbb
pop
mov
dec
xor
les
shl
inc
xor
xchg
adc
dec
sahf
dec
inc
lds
scas
jl
mov
xchg
repz
lock
and
ror
loopne
adc
pop
mov
adc
sar
xchg
loop
(bad)
movs
test
inc
outs
ret
ins
jg
mov
rcr
mov
inc
not
out
add
(bad)
into
in
int3
pop
std
sub
std
add
lods
sbb
int3
mov
inc
jb
dec
mov
cmp
push
push
rcr
or
or
(bad)
scas
jecxz
into
mov
push
in
fnsave
pop
jp
cmp
cmc
jno
aaa
test
sti
xor
addr16
ret
bound
push
cmp
push
not
test
bnd
xor
lock
jo
shr
lahf
inc
fld
ds
mov
imul
js
retf
(bad)
pop
mov
add
into
test
hlt
adc
sar
dec
popa
ds
enter
jg
mov
pop
aam
iret
imul
pop
pop
xor
dec
aaa
bound
inc
inc
imul
mov
mov
mov
lods
add
dec
fdiv
stos
inc
push
hlt
nop
push
fnstcw
bound
icebp
jae
xchg
xor
and
or
icebp
sar
iret
jmp
popa
fnstsw
sub
jg
pop
ins
jg
xchg
addr16
sar
into
push
(bad)
xchg
int
cld
adc
std
xor
repz
fmul
xor
int
(bad)
icebp
shl
in
xchg
mov
jg
add
cmp
aas
loop
sbb
jae
imul
adc
cmp
adc
movs
push
leave
xchg
dec
jno
push
pop
xor
cmp
out
sahf
cwde
test
sbb
jno
xchg
jge
xchg
ds
push
das
popa
jge
movs
(bad)
jno
xor
cmp
adc
mov
stc
mov
and
(bad)
push
retf
xor
and
and
(bad)
inc
sub
jp
je
(bad)
sar
dec
push
addr16
int
jmp
push
js
mov
js
inc
jmp
out
push
cmp
add
div
aas
out
(bad)
dec
mov
(bad)
clc
push
mov
inc
mov
mov
clc
fcomp
repz
cmp
outs
fild
seto
jno
lds
shl
test
lahf
(bad)
repz
pop
jno
mov
(bad)
cli
rcr
sbb
jne
lahf
mov
out
rcr
push
out
dec
fdivr
fcom
xchg
rol
dec
sar
jno
nop
sti
lahf
test
mov
fcmovne
dec
retf
mov
mov
test
fdivr
pop
push
retf
ror
jno
jmp
push
ret
and
(bad)
loope
dec
int3
mov
mov
mov
clc
outs
fwait
push
fdivr
nop
jne
jge
int3
xor
sbb
inc
mov
ins
std
pop
ds
sub
push
or
(bad)
jae
jecxz
xlat
pop
jl
dec
repz
adc
cli
adc
pop
leave
inc
jl
or
enter
push
jg
int3
push
out
dec
sar
adc
sbb
xchg
int
in
xchg
iret
rcl
rcr
inc
cmp
mov
call
es
dec
pop
shl
shl
xchg
fucom
xor
icebp
ds
nop
cdq
(bad)
aas
inc
scas
jbe
ja
jne
xor
icebp
xchg
call
dec
aas
jp
retf
dec
ficomp
int3
clc
pop
scas
loopne
cmc
mov
mov
(bad)
sahf
dec
aaa
ficom
or
fcmovbe
retf
(bad)
xchg
dec
xor
mov
dec
xchg
sbb
jmp
adc
cmps
fist
mov
repz
sub
xor
js
mov
mov
test
push
jmp
dec
push
ja
(bad)
jno
cs
push
cmp
in
ret
outs
sbb
push
xrelease
dec
ror
dec
or
xchg
call
xchg
pop
(bad)
mov
xor
jg
xchg
aam
adc
fist
(bad)
cli
push
mov
lock
loopne
into
lea
cmps
xchg
in
aad
adc
ja
fs
mov
scas
mov
push
dec
imul
mov
push
icebp
(bad)
fadd
mov
push
mov
loopne
imul
popf
inc
adc
daa
int
into
addr16
(bad)
jecxz
fisubr
pop
jno
out
test
cmp
xchg
dec
push
jle
rcl
xlat
aam
adc
sbb
push
jecxz
xor
leave
pop
mov
ficomp
mov
icebp
pop
jmp
stc
inc
addr16
push
sar
sbb
cmp
sbb
in
push
mov
mov
cdq
jno
dec
fsubp
sub
or
pop
jne
inc
push
in
adc
jge
xchg
icebp
mov
not
xchg
xchg
cmp
pop
loopne
jb
idiv
cmp
mov
inc
mov
jo
xlat
(bad)
outs
add
call
push
xchg
inc
ds
in
(bad)
ds
jmp
in
sbb
imul
push
fidivr
ror
pusha
push
fst
dec
(bad)
nop
push
fist
sbb
dec
pop
jnp
in
jl
dec
ss
mov
test
xchg
popa
rcl
inc
js
pop
in
ja
ins
xor
shl
xchg
leave
les
maxps
adc
dec
ss
sub
stc
sbb
cmp
cmp
inc
jbe
lahf
ror
push
mov
fs
aad
data16
xchg
not
dec
sar
dec
dec
not
inc
icebp
ins
out
fidivr
std
dec
mov
popa
xlat
stos
pop
pop
in
push
dec
cmp
(bad)
dec
ja
pop
pop
ja
outs
cli
push
mov
ret
enter
stc
xlat
dec
inc
cli
out
in
dec
push
jge
cmovo
push
cld
dec
repz
jo
imul
sti
nop
dec
push
mov
mov
push
aam
xchg
into
sar
nop
int3
push
outs
adc
sbb
icebp
ret
mov
jp
shl
addr16
cmp
jmp
ss
push
imul
pop
adc
push
or
std
out
loop
xor
lock
add
xchg
sub
popa
push
jno
mov
xor
imul
icebp
repz
pop
cmp
lahf
fs
inc
mov
sti
cwde
imul
xchg
inc
push
leave
xchg
retf
push
mov
imul
mov
dec
push
jle
dec
or
and
ror
dec
jb
mov
in
int
mov
sub
add
arpl
cmp
in
jne
inc
mov
push
jp
repnz
rol
ret
cmc
outs
(bad)
cmp
sbb
and
(bad)
sub
lock
ror
push
(bad)
xchg
dec
aam
xchg
retf
mov
rcl
adc
xchg
pop
mov
cmp
pop
cmp
mov
xor
stc
push
addr16
int3
jbe
addr16
retf
(bad)
out
mov
jns
out
into
leave
pop
sbb
in
fimul
xlat
jp
xor
dec
int
and
mov
xor
pop
icebp
xor
pop
adc
push
test
shl
(bad)
bound
imul
pop
dec
lea
push
pop
cli
int
and
push
cld
nop
inc
mov
xchg
dec
dec
sub
lods
push
std
js
ror
sbb
and
sub
or
add
fnstsw
fs
jecxz
lock
test
mov
cmp
mov
cld
xor
daa
jl
cmp
jae
sahf
ins
jb
arpl
data16
outs
(bad)
push
mov
inc
(bad)
outs
jmp
adc
push
xchg
fmulp
mov
push
sbb
hlt
sti
push
mov
in
fdiv
pop
push
(bad)
jl
pop
mul
ins
cmp
xchg
mov
pop
push
and
rol
outs
call
out
and
mov
xlat
and
fmul
sub
int
sbb
jle
dec
or
xor
adc
(bad)
jnp
adc
stos
xchg
jecxz
loop
idiv
rol
(bad)
(bad)
cli
cmp
dec
inc
xchg
(bad)
ins
sbb
sbb
ja
aam
loop
(bad)
or
std
aad
in
ds
(bad)
std
inc
iret
out
in
xor
out
mov
test
inc
imul
in
jne
sbb
jle
iret
data16
or
fadd
mov
ficom
mov
gs
daa
test
sbb
push
jnp
inc
out
adc
adc
adc
dec
pop
daa
jl
push
fisttp
loopne
aad
in
hlt
fisubr
addr16
pop
aas
jns
cmp
jb
cmp
loop
push
es
js
cmps
in
pop
pop
rol
sub
mov
jae
sar
(bad)
ins
inc
inc
loop
or
jge
out
sahf
icebp
push
test
jg
aas
sbb
sbb
test
or
(bad)
mov
cmp
fisub
add
jp
movs
repnz
add
enter
mov
enter
(bad)
push
sbb
addr16
jg
mov
add
xchg
fst
add
cmp
inc
loope
(bad)
mov
loope
sahf
xchg
and
or
repnz
inc
push
jle
retf
inc
add
jl
push
push
dec
mov
clc
leave
sub
inc
mov
repnz
cmc
mov
xlat
fldln2
nop
mov
daa
mov
dec
push
(bad)
outs
out
out
loopne
sahf
inc
cld
aad
out
jo
mov
in
inc
test
jb
xor
inc
repnz
pop
push
scas
push
(bad)
aas
sbb
lahf
iret
push
call
int3
dec
jae
cmps
push
jo
outs
xchg
xchg
xor
jle
mov
fcomp
retf
mov
test
lds
pop
outs
jecxz
pop
nop
and
push
mov
out
shr
cmp
ror
in
jb
inc
clc
aad
rol
(bad)
pop
idiv
int
out
test
push
bound
dec
pop
call
ret
push
jg
int
in
mov
icebp
xlat
mov
js
mov
inc
call
loope
gs
cld
aad
out
cmp
and
push
sti
jo
loope
data16
hlt
fidivr
out
adc
repz
pop
daa
adc
mov
idiv
aam
data16
xor
(bad)
ins
xchg
outs
icebp
aad
dec
int3
je
sbb
int
sub
jbe
in
call
mul
data16
xlat
jle
jnp
xor
ror
js
mov
jmp
cmp
add
jle
mov
push
out
jb
cld
adc
test
int
inc
sub
mov
popa
lock
pop
outs
icebp
pop
fs
call
or
rcr
cld
push
or
in
loopne
shl
ss
mov
xchg
jb
add
ja
fs
out
(bad)
fmulp
sub
(bad)
mov
push
arpl
rcr
dec
inc
ret
mov
push
call
outs
jne
xor
je
call
(bad)
lea
push
sti
sahf
int3
xor
sbb
call
push
xor
(bad)
add
mov
out
call
jne
(bad)
shl
sbb
dec
test
inc
out
inc
(bad)
fidiv
mov
popa
ja
(bad)
jle
and
jl
hlt
daa
fdiv
push
fmul
call
jae
add
in
xor
mov
imul
fbstp
paddusw
push
pushf
dec
pop
dec
push
(bad)
push
dec
push
std
adc
xchg
dec
mov
shl
sub
in
or
cmc
sbb
lahf
push
dec
mov
lea
and
or
(bad)
pop
push
aad
idiv
push
mov
xchg
sub
icebp
push
aaa
fild
daa
mov
fadd
add
idiv
mov
xchg
stos
(bad)
in
cmps
push
repnz
mov
pop
cld
xor
mov
sbb
pop
shl
jp
mov
and
fdivr
ins
sbb
mov
dec
sbb
dec
xchg
dec
dec
ds
pop
cld
aad
rcr
push
inc
jns
jge
leave
ins
adc
cld
fnstsw
in
xor
xchg
aad
in
mov
push
adc
inc
cmps
jo
inc
sar
div
retf
daa
dec
lods
loopne
adc
push
(bad)
jmp
push
dec
loop
mov
pop
add
loop
push
jo
fidivr
jle
lds
jge
push
sar
xchg
dec
jne
adc
ret
mov
hlt
mov
jg
push
lods
rol
xor
shl
adc
fmul
js
sti
or
test
add
loope
and
aam
ja
js
mov
outs
test
jecxz
dec
fcom
leave
cmp
fstp
popa
cmp
aas
popa
nop
fimul
outs
arpl
repz
sub
add
out
jge
cmps
out
mov
push
inc
xchg
iret
xor
dec
aas
sub
shl
xor
pop
fsub
lock
outs
stc
repnz
cmps
jecxz
dec
mov
fidivr
stc
bound
push
rcl
jmp
cld
fisubr
loope
pop
lahf
cmps
cli
pop
mov
sbb
inc
aam
pop
out
scas
jns
cdq
(bad)
pop
push
xor
jmp
push
xchg
cmps
popf
lock
cmp
sub
(bad)
push
cmp
div
cmp
mov
jo
jne
ret
je
fistp
std
xor
add
push
and
cmc
sti
inc
stos
inc
push
stos
addr16
data16
pop
push
pop
loopne
dec
addr16
sar
in
icebp
push
cmp
shl
push
jl
dec
call
icebp
mov
ins
push
sub
dec
out
popa
(bad)
sar
ficom
in
fnstsw
out
pop
das
aad
loop
bound
iret
pop
push
fidivr
pop
retf
inc
mov
data16
cmp
pop
test
fs
pop
loope
jle
ja
dec
xchg
(bad)
jmp
and
sub
test
adc
and
jnp
mov
adc
pop
jle
dec
sar
push
dec
push
mov
add
in
pop
or
loope
lods
icebp
push
ja
loopne
pop
lods
pop
addr16
push
push
push
ss
inc
mov
xchg
jg
and
xlat
pop
repz
jg
cmp
mov
out
dec
push
jo
ja
jns
dec
(bad)
xlat
pop
into
or
dec
jecxz
inc
cld
push
mov
cs
ja
(bad)
data16
in
dec
das
fisub
cmp
push
test
mov
(bad)
pop
jg
int3
leave
out
into
loop
scas
xchg
pop
jle
xlat
in
clc
retf
js
icebp
jmp
out
pop
rcr
dec
ret
cmp
fmul
sar
cmps
push
mov
cli
shl
sti
jno
sub
add
cmc
imul
mov
out
js
sub
push
mov
ja
outs
push
nop
iret
out
addr16
jmp
sar
out
addr16
sar
and
adc
ds
clc
add
cmp
dec
mov
adc
jg
int
fwait
adc
jns
push
data16
mov
jns
lock
cli
pop
push
out
mov
push
mov
out
(bad)
cmc
ficomp
cmp
bnd
push
stc
aad
in
(bad)
cmp
les
sub
aam
(bad)
or
pop
cmp
(bad)
enter
leave
push
cmp
xlat
mov
loop
mov
js
pop
sub
(bad)
push
inc
sbb
mov
jge
in
pop
pusha
inc
call
neg
inc
pushf
xlat
fs
cmp
js
jle
jge
mov
cmps
pop
and
or
jle
pop
call
cmovnp
popa
jp
pop
sti
jmp
dec
inc
sbb
into
push
jle
sbb
aad
bound
aad
das
mov
jb
mov
leave
popa
mov
adc
lds
cli
fstp
jecxz
pop
loopne
push
sti
stc
cmp
or
sbb
pop
cmp
outs
xchg
xchg
dec
sub
adc
les
sar
out
cmps
out
sahf
iret
rol
adc
mov
in
cwde
loop
inc
inc
jl
iret
sar
(bad)
sar
dec
push
(bad)
xchg
dec
pop
pusha
mov
jl
xchg
xor
pop
stos
out
shl
jge
jnp
cmp
push
imul
mov
jle
cmp
(bad)
jp
ins
leave
nop
stos
adc
push
mov
dec
jecxz
dec
dec
movs
inc
mov
inc
add
cmps
push
jo
int3
aaa
cwde
xchg
faddp
stos
xchg
mov
and
push
and
pop
mov
addr16
push
cmp
repnz
jmp
out
(bad)
mov
out
aas
in
fnstsw
jns
(bad)
ds
jo
outs
mov
cmp
mov
(bad)
jge
xor
jg
repnz
stc
push
xchg
(bad)
mov
call
push
xor
push
jp
and
mov
mov
out
xor
popf
dec
(bad)
jge
int3
push
test
mov
mov
push
cld
push
dec
shl
adc
push
lock
addr16
jnp
dec
mul
adc
loop
imul
push
aas
fs
inc
cmp
push
std
adc
movs
adc
adc
pop
into
add
cmp
push
hlt
ja
shl
loop
je
or
dec
mov
push
cmp
or
xor
pop
pop
not
pop
xor
cld
popf
std
sti
sar
or
inc
fidivr
aam
xchg
xor
push
(bad)
mov
mov
dec
push
and
and
shr
ret
mov
rcl
sahf
cmp
ret
stos
xor
out
cld
sbb
fwait
mov
push
mov
fsub
add
mov
les
test
es
(bad)
fmulp
lahf
stc
sar
popa
xor
cmp
call
ins
sub
rol
fwait
retf
fwait
stos
xchg
sbb
mov
cwde
aad
cmp
into
in
pop
push
mov
ror
nop
dec
dec
aad
clc
enter
(bad)
in
data16
scas
mov
push
inc
out
out
shr
jne
mov
jo
rol
loopne
and
fisttp
sub
push
sub
cld
cmp
loopne
inc
icebp
fwait
ret
ins
sub
loop
loopne
push
repnz
sub
fstp
sub
shl
push
icebp
shl
out
xor
repz
fsubp
xchg
inc
out
fs
xor
jae
sub
fdivr
mov
jae
sbb
push
lods
dec
loopne
push
adc
cmp
aas
cmp
dec
and
icebp
cmp
mov
mov
pop
sbb
push
pop
cmp
clc
xchg
pop
ficom
or
pop
pop
rcl
or
push
and
retf
cmp
bound
ins
cmp
or
xchg
fbld
push
repz
(bad)
pop
icebp
pushf
cmps
mov
sbb
dec
in
jmp
rcl
dec
inc
loop
bound
dec
das
mov
push
data16
into
jno
xor
ds
out
dec
sub
sub
push
xor
addr16
xlat
clc
push
mov
xchg
sbb
out
int
push
lock
cmp
inc
pcmpeqw
cmp
pop
out
sub
inc
cld
cmp
or
adc
cs
fmul
dec
mov
push
in
(bad)
shr
dec
addr16
shl
popf
dec
sar
cdq
iret
push
jnp
ror
adc
je
pop
in
(bad)
into
adc
push
dec
test
sub
mov
fldenv
neg
cld
clc
pop
dec
mov
jp
sar
into
lods
outs
shl
dec
test
lahf
in
out
in
jb
and
jno
outs
aaa
stc
cmp
dec
add
popa
jb
sbb
xor
out
addr16
push
call
cmps
fcom
xlat
jp
gs
cwde
dec
mov
in
jg
mov
add
mov
adc
sbb
and
in
pop
out
imul
add
aam
jmp
push
cmp
pop
iret
dec
push
div
sar
ret
mov
daa
xor
dec
iret
inc
adc
shl
inc
inc
pop
jg
xchg
popf
adc
pop
sahf
cmps
in
mov
jl
mov
inc
dec
sar
xchg
dec
dec
jnp
xor
js
cwde
push
jge
cdq
enter
pop
jle
rcl
push
jl
dec
jge
adc
std
xchg
dec
push
je
bound
mov
xlat
add
inc
movs
std
shl
mov
cli
push
xchg
push
or
adc
push
pop
jle
adc
test
push
daa
mov
in
cld
fcomp
jae
ins
cdq
and
es
sti
loopne
movs
dec
push
dec
imul
jg
out
add
mov
mov
dec
fcom
jno
int3
xor
xchg
sub
mov
push
in
ja
out
fwait
leave
ret
sti
pop
mov
cmps
int3
xor
pop
(bad)
mov
cld
push
cmp
pusha
(bad)
(bad)
sub
outs
mov
rol
shl
outs
addr16
rcl
dec
jge
sbb
out
mov
outs
xor
xor
mov
fld1
test
pop
sti
xchg
dec
sar
adc
cld
mov
loop
xchg
jmp
mov
mov
xchg
dec
popa
xor
mov
(bad)
push
jnp
inc
shl
adc
(bad)
mov
xor
repnz
or
jp
fadd
outs
dec
jo
outs
jg
jnp
call
hlt
jl
fcom
loope
cmp
inc
addr16
cmps
inc
dec
aam
repnz
mov
pop
ret
aam
mov
dec
push
push
jo
dec
sar
dec
inc
inc
xchg
out
jo
dec
push
and
or
push
cmps
push
(bad)
cld
ds
(bad)
push
rcr
pusha
repnz
out
lock
movs
repz
ror
ret
stc
fnsave
inc
xchg
and
bound
or
aam
ins
lahf
push
mov
push
cld
push
mov
dec
cmp
jo
ror
fs
lea
pop
std
push
mov
shl
mov
dec
jne
mov
jmp
and
lods
mov
jge
mov
jnp
pop
(bad)
pop
pop
out
cmp
repz
add
jnp
dec
out
popf
dec
lods
add
inc
jmp
fadd
push
cli
pop
cmp
jmp
jg
ds
xor
push
push
leave
inc
sbb
js
xor
movs
ret
loope
and
jp
mov
push
stc
push
mov
jp
mov
sbb
push
push
lds
xor
mov
js
and
inc
pusha
cmp
icebp
xchg
inc
int
sbb
pop
retf
xor
inc
xor
(bad)
inc
sar
dec
and
xor
jns
nop
(bad)
addr16
outs
jns
cmp
inc
repz
mov
shl
out
leave
idiv
jmp
jmp
cmps
leave
dec
xchg
push
jb
mov
jge
shl
imul
mov
xor
pop
scas
push
js
cmp
icebp
stos
cdq
cld
jae
xor
mov
inc
call
inc
mov
xor
sbb
faddp
lods
xchg
call
iret
div
or
add
pop
xor
adc
sub
neg
lea
add
imul
out
(bad)
mov
inc
mov
jecxz
jns
pop
inc
push
neg
sar
clc
xor
movs
ss
call
pop
dec
loopne
pop
lds
dec
in
inc
ficom
add
jae
pop
clc
fmulp
mov
dec
mov
push
mov
fcmovbe
(bad)
mov
into
cmp
mov
xlat
jbe
imul
popa
and
fs
dec
sbb
or
aad
addr16
rcr
xlat
push
cwde
(bad)
cli
jns
bound
nop
(bad)
cwde
add
jl
into
mov
push
aad
xchg
in
call
push
sub
xor
pop
or
push
mov
shl
fwait
mov
icebp
aad
out
gs
out
lahf
mov
dec
and
mov
pop
ja
cmp
mov
mov
rcl
pop
xor
sub
(bad)
xor
mov
push
pop
push
gs
push
std
fimul
in
add
stc
inc
jge
aad
inc
cmp
xchg
cmps
xor
xchg
dec
sar
adc
dec
sar
int3
lods
xor
iret
stos
mov
dec
sar
mov
adc
loope
or
jl
mov
sbb
out
xlat
mov
(bad)
mov
loop
(bad)
mov
fs
add
call
push
int
mov
or
out
jbe
sar
jmp
dec
add
in
cmp
aad
jnp
ret
jg
das
fidivr
push
push
push
mov
lahf
in
pop
or
jg
mov
lds
sbb
adc
dec
cs
cmc
in
in
mov
push
std
adc
push
std
adc
je
dec
inc
pop
or
jle
cmp
ret
out
push
mov
ret
leave
repnz
(bad)
cli
push
mov
loop
aas
jne
pop
adc
nop
cli
or
sub
push
cmp
aad
(bad)
pop
std
aas
popa
inc
call
je
icebp
pop
dec
push
cdq
adc
jl
jmp
adc
lock
cli
imul
retf
push
int
jnp
inc
mov
popf
adc
push
add
es
adc
xor
mov
jnp
jg
arpl
xchg
into
(bad)
xlat
mov
sub
out
(bad)
dec
dec
in
(bad)
(bad)
sar
es
add
jns
push
scas
call
mov
ins
jb
xor
es
test
dec
mov
xor
ja
call
nop
into
loope
nop
inc
shl
xor
dec
test
sar
lahf
inc
icebp
push
xchg
(bad)
jp
aas
out
mov
cdq
lock
add
xor
add
in
dec
mov
push
or
dec
mov
add
rol
xor
adc
test
inc
out
fidiv
jle
xchg
out
xor
popf
push
repz
push
mov
pushf
pop
xchg
push
push
xchg
int3
sbb
jns
leave
inc
into
stc
sar
out
cmps
jp
or
mov
and
imul
(bad)
outs
aad
fs
mov
jl
icebp
xlat
xlat
push
cmp
mov
cmc
std
pop
ins
je
or
fisubr
mov
pop
xchg
sbb
mov
clc
rcl
push
out
int
push
sbb
call
in
icebp
push
add
cmp
cmps
mov
stc
push
or
jnp
stc
dec
out
dec
dec
addr16
push
repz
ret
mov
jno
jbe
lds
push
in
inc
stos
pop
int3
ret
push
push
mov
stos
push
outs
arpl
jb
push
sub
rol
or
pop
mov
mov
xchg
in
pop
stos
push
outs
arpl
shr
jecxz
out
pop
movs
shr
ret
cmp
(bad)
(bad)
jns
movs
es
icebp
movs
push
dec
dec
mov
retf
add
popf
je
jge
out
jbe
inc
retf
push
outs
inc
call
dec
call
jbe
push
dec
and
ret
in
pop
outs
in
jo
nop
in
push
ret
in
pop
pop
ins
(bad)
aad
in
push
ret
lods
pop
and
data16
in
aad
in
pop
jne
arpl
in
push
ret
in
pop
push
ins
xor
lods
in
push
ret
ficomp
in
sub
loop
add
in
pop
dec
ins
ds
(bad)
in
aad
fs
ds
jno
cmps
in
aad
fs
pop
dec
in
dec
aad
in
aad
in
pop
adc
xchg
in
aad
fs
pop
lods
outs
imul
dec
add
out
out
add
mov
loopne
jp
xor
imul
pop
out
jo
rol
loop
in
popa
mov
cld
aad
ins
mov
inc
or
outs
sub
xlat
fldenv
icebp
rol
ins
mov
inc
(bad)
fcmovb
pop
cs
pop
leave
in
and
ret
mov
repz
mov
out
loop
(bad)
data16
or
ret
push
mov
mov
mov
inc
jbe
push
jnp
test
lds
ja
arpl
rcl
or
out
inc
jbe
pushf
icebp
ror
gs
pop
ds
inc
ret
or
fstp
js
mov
push
(bad)
rol
gs
cmp
or
stc
xchg
jbe
push
adc
jns
push
outs
jg
xchg
sar
inc
sbb
out
xchg
and
lahf
inc
imul
mov
mov
lahf
pop
push
push
(bad)
jnp
cmp
outs
cld
cli
sub
(bad)
pop
sub
icebp
inc
adc
ret
cdq
mov
jno
idiv
push
xlat
test
jg
sub
lods
xchg
inc
fcomp
sbb
xchg
(bad)
push
ret
push
out
ret
std
(bad)
ffree
std
lds
lods
mov
jp
pop
int
mov
(bad)
sbb
pop
out
fldcw
xchg
inc
(bad)
xchg
repnz
lods
and
jg
not
xor
pop
ja
outs
fsub
iret
outs
xchg
jae
fild
lds
shr
ins
pop
idiv
ins
xor
adc
push
jl
xchg
jbe
out
xchg
pop
imul
outs
cmovo
call
fcom
inc
dec
das
das
ins
jp
sub
bound
cmp
idiv
push
mov
adc
jmp
mov
arpl
sbb
fild
cli
xlat
mov
push
xchg
test
ins
fcom
sub
mov
ds
je
pop
xor
pushf
lods
lods
repz
xchg
stos
fbld
push
hlt
pop
das
out
inc
ds
outs
xchg
loopne
and
xor
data16
cmps
cli
push
xor
pop
ja
inc
mov
les
adc
fsub
loop
mov
movs
imul
sbb
leave
adc
loope
fsubr
je
ss
dec
cwde
pusha
scas
xchg
cwde
pop
ret
cwde
and
retf
inc
push
inc
add
icebp
xchg
inc
enter
leave
inc
adc
xor
and
mov
les
lock
(bad)
stos
inc
movs
popf
dec
stos
cmps
and
mov
loope
xchg
fdivr
and
data16
push
mov
jge
xor
mov
pusha
mov
int3
mov
stc
in
cmp
test
stc
shl
ror
rol
pop
fnsave
fs
clc
xchg
aaa
jmp
sbb
test
in
nop
xchg
jp
sub
mov
mov
cld
or
push
test
lods
out
inc
loope
mov
dec
adc
jns
sbb
push
and
or
adc
inc
add
or
sti
scas
hlt
imul
icebp
mov
or
(bad)
enter
call
outs
cmp
out
xor
add
xchg
and
test
test
(bad)
mov
push
stos
in
icebp
and
jno
push
stc
inc
or
icebp
push
mov
jmp
mov
test
mov
lds
jbe
inc
jno
mov
icebp
sbb
je
hlt
pop
push
and
data16
push
sub
pop
daa
mov
mov
out
int3
mov
rol
or
jp
outs
xor
or
test
scas
sbb
popa
push
lock
push
cld
sar
out
inc
ds
mov
push
div
xlat
sbb
xor
or
jecxz
je
pop
call
sbb
sbb
mov
in
cmp
cmp
dec
outs
adc
pop
inc
data16
into
sbb
cld
rcr
imul
push
cwde
push
cmp
push
and
js
aam
xchg
les
popf
fimul
in
clc
pop
not
pop
leave
xor
mov
stc
rcr
leave
ins
repz
jg
jns
jg
out
push
xchg
(bad)
call
nop
jns
and
inc
xchg
fld
xchg
pop
loopne
cmp
jg
shl
bound
dec
mov
out
push
jno
sub
jg
retf
scas
push
jns
cmp
jno
push
jb
sub
cmp
js
add
(bad)
xchg
cmp
ins
outs
sbb
lds
cld
(bad)
ds
enter
jb
sub
loopne
loope
shr
je
out
dec
lea
das
fs
je
enter
jle
cs
pop
mov
dec
js
xchg
mov
rcr
mov
mov
into
mov
xlat
mov
fidiv
mov
das
inc
lds
in
dec
adc
(bad)
sti
push
cmp
fsub
sub
fldcw
xchg
dec
aas
fld
rol
cmps
test
pop
bound
adc
inc
je
clc
pop
xchg
mov
or
xor
cmc
retf
fs
or
mov
xor
push
dec
jbe
adc
push
sahf
mov
lahf
inc
xor
and
shr
mov
hlt
xchg
repnz
pop
inc
mov
in
inc
pop
out
xchg
add
test
xor
and
mov
test
mov
ins
jmp
sub
pop
addr16
fldenv
dec
outs
sub
push
outs
or
pop
jge
mov
popa
sub
mov
outs
stc
stc
shl
pop
maskmovq
in
pop
ret
fistp
fcomp
add
xor
xchg
jnp
mov
(bad)
int
pusha
cwde
jl
aad
(bad)
mul
loop
fdivr
and
jno
ss
pushf
push
cmp
xchg
push
imul
or
push
imul
push
ja
or
jmp
(bad)
in
int3
mov
or
gs
or
mov
add
je
and
mov
xchg
jp
mov
scas
ror
ss
or
lods
dec
push
or
inc
add
addr16
cld
repnz
add
test
(bad)
pavgb
jmp
mov
inc
xchg
mov
(bad)
pop
xor
mov
sub
xor
(bad)
js
ror
inc
out
iret
test
mov
sub
fbld
mov
in
dec
and
pop
addr16
inc
ror
mov
jne
dec
dec
or
push
dec
out
push
fs
and
jae
movntq
out
shl
js
add
xchg
and
enter
dec
test
popa
cmp
sub
(bad)
es
inc
cmp
push
faddp
pusha
mov
fmul
push
ja
pop
push
push
dec
mov
jle
mov
mov
or
and
push
dec
cwde
(bad)
adc
rcr
out
cmp
adc
sbb
out
push
sub
rcr
jmp
in
(bad)
or
mov
or
mov
out
push
enter
fld
cmp
movs
mov
dec
addr16
nop
cdq
jge
push
out
dec
dec
out
push
enter
cli
inc
add
repnz
imul
daa
dec
test
sub
mov
xchg
jle
push
cmp
pusha
lods
mov
mov
in
inc
pop
in
ror
dec
jae
pop
clc
pop
out
or
mov
pusha
push
jb
ret
test
imul
jbe
mov
push
imul
je
pushf
or
addr16
jle
push
jbe
cdq
push
lods
(bad)
enter
fld
cmp
xchg
or
enter
fld
es
mov
cli
pop
jbe
cmp
jb
enter
(bad)
rcl
or
ja
pop
push
xchg
dec
out
ja
jge
aad
addr16
ins
neg
or
or
leave
jnp
or
out
mov
psubsb
dec
aam
test
xchg
dec
out
push
(bad)
xchg
or
mov
mov
imul
(bad)
imul
ins
jae
or
iret
cmps
or
jb
mov
hlt
pop
jbe
cmp
pop
push
dec
out
push
mov
mov
imul
in
mov
es
pop
es
mov
dec
out
inc
(bad)
out
mov
dec
adc
push
dec
out
inc
int3
out
mov
dec
xchg
mov
not
out
push
xor
mov
dec
adc
push
dec
out
(bad)
cmp
mov
dec
xchg
mov
addr16
dec
out
jbe
out
mov
dec
adc
push
mov
enter
retf
xchg
dec
gs
mov
iret
imul
ins
dec
out
push
dec
out
sbb
cmps
or
jb
mov
dec
out
inc
or
mov
dec
xchg
mov
addr16
fisub
not
pop
es
(bad)
jae
pop
cli
(bad)
cmps
or
fld
es
(bad)
jae
pop
clc
iret
cmps
or
fld
es
xlat
jae
pop
out
cmc
or
mov
aam
cmps
jbe
jmp
inc
or
(bad)
xchg
or
ins
sbb
xchg
mov
test
pop
test
push
fsub
jmp
out
lock
ja
imul
push
sub
sub
and
iret
repnz
push
dec
(bad)
dec
jmp
mov
mov
mov
xor
pop
jno
enter
call
call
jae
or
sar
or
jae
mov
enter
je
or
push
ret
cdq
or
dec
adc
sbb
shl
lods
xchg
xchg
addr16
mov
push
cmc
jg
or
xchg
sbb
cmp
ficom
scas
sub
jae
aas
aam
dec
cmp
push
sbb
xchg
xlat
mov
add
mov
xor
push
ds
sbb
cdq
ret
in
in
xchg
xlat
jne
dec
xchg
push
mov
xchg
push
nop
jns
mov
mov
rcl
mov
mov
mov
xchg
jns
aas
jno
xchg
mov
sub
fmulp
std
push
mov
mov
arpl
adc
sub
cmp
sub
iret
dec
sub
stc
xchg
xlat
and
push
outs
inc
test
adc
or
or
sub
lods
leave
mov
sbb
nop
sub
push
jmp
xchg
jae
outs
sbb
imul
sub
fmul
xchg
sbb
push
and
xlat
cdq
sbb
xlat
ins
rcl
dec
sub
arpl
mov
xchg
jae
jge
or
mov
adc
sbb
les
ins
or
std
sbb
dec
add
jae
and
imul
lods
jne
sbb
icebp
rol
adc
cmps
nop
sub
mov
retf
fs
pop
push
bound
push
nop
into
sahf
dec
add
rol
push
jmp
dec
outs
cmp
lods
xchg
push
test
js
cmp
mov
xchg
and
jecxz
rol
mov
movs
cmp
lahf
xchg
dec
push
cmc
test
mov
mov
dec
cmp
lods
xchg
loopne
dec
mov
dec
mov
adc
pop
mov
xchg
adc
dec
push
lods
hlt
xchg
mov
lock
es
mov
xchg
imul
das
std
gs
out
retf
imul
dec
setae
mov
xchg
repz
or
jns
jbe
or
push
cmp
xchg
mov
xchg
push
xchg
jns
rcr
daa
ss
scas
xchg
xlat
push
dec
cmp
push
daa
push
fsubr
retf
cmp
sub
mov
arpl
xchg
or
push
sbb
lods
push
sbb
jo
push
in
adc
mov
inc
arpl
in
rcl
xlat
xor
arpl
xchg
cmp
jmp
inc
sub
adc
sbb
push
sub
imul
push
xchg
xchg
mov
xchg
lods
js
push
daa
clc
adc
ins
or
xlat
jl
dec
mov
hlt
ja
aaa
ins
or
mov
mov
adc
adc
mov
clc
and
xchg
jae
sub
clc
jecxz
xchg
jae
sub
cmp
push
and
int3
push
xor
pop
push
sub
xor
jno
in
push
dec
stc
mov
mov
sti
jns
outs
retf
(bad)
clc
frstor
shr
xchg
popa
mov
jnp
mov
dec
push
outs
ror
sar
mov
arpl
push
shl
dec
jnp
fisttp
jp
dec
dec
int3
arpl
ror
lods
out
addr16
jmp
sti
mov
shl
push
dec
daa
sti
fnsave
leave
cmps
arpl
icebp
jle
jnp
loop
push
(bad)
test
mov
shl
sub
(bad)
test
push
retf
sub
(bad)
test
aad
push
into
xchg
push
bound
xchg
xor
(bad)
icebp
scas
push
dec
add
sbb
(bad)
retf
push
or
popa
retf
dec
(bad)
fcom
repnz
test
dec
cmps
(bad)
mov
add
fdiv
pop
adc
and
dec
push
cmc
or
fs
imul
stos
dec
xor
xlat
ins
or
xlat
sub
push
jge
dec
xlat
mov
xor
push
mov
in
jns
xlat
mov
retf
xor
fcmovbe
xchg
dec
jmp
shl
mov
mov
(bad)
not
out
add
scas
mov
xor
in
xchg
stc
mov
jno
adc
xchg
or
push
xor
adc
movs
xchg
push
out
push
push
mov
hlt
lods
dec
pop
shr
mov
xchg
mov
and
adc
ins
mov
loopne
mov
and
scas
xchg
push
cwde
adc
push
sbb
push
sbb
loopne
hlt
lods
leave
cli
push
mov
or
jns
sub
adc
jecxz
lods
js
or
jp
jb
xor
xor
mov
mov
sub
fiadd
sub
enter
or
or
lea
aam
xrelease
push
jecxz
mov
mov
call
mov
xchg
jae
pushw
push
imul
jne
xchg
push
je
jecxz
stc
push
retf
xchg
push
xchg
push
mov
into
clc
jmp
xchg
repz
sub
jns
mov
add
or
repnz
mov
(bad)
cs
pop
sub
sahf
out
inc
jp
imul
cmps
cmp
add
shl
sbb
mov
mov
push
(bad)
sti
mov
dec
jle
jg
cmp
add
(bad)
sti
dec
xchg
mov
add
jbe
rol
push
inc
add
popf
add
push
dec
xlat
mov
cmp
mov
dec
(bad)
fdivr
mov
adc
fnsave
gs
stos
sub
cmps
add
jge
fnsave
dec
neg
inc
ins
push
and
repz
pusha
pop
ins
push
psadbw
mov
ins
mov
xchg
push
mov
mov
jecxz
sub
aam
dec
ins
xchg
xchg
dec
pop
imul
push
push
mov
xlat
adc
sbb
fdivp
cmc
out
retf
(bad)
repz
imul
pop
jb
cld
fmul
mov
out
push
push
mov
out
xor
je
mov
sbb
dec
sub
sub
shl
sub
xlat
mov
mov
push
ins
rcl
ja
push
jecxz
push
xchg
jle
mov
xchg
hlt
nop
jns
jo
push
or
out
xor
adc
cmc
or
je
imul
push
xor
push
psadbw
rol
xor
arpl
jae
ss
cmp
or
in
leave
dec
jecxz
push
pop
push
mov
arpl
push
pop
push
mov
cmp
xchg
mov
lods
dec
in
repz
or
sub
xchg
clc
inc
cmp
lods
leave
scas
mov
sbb
push
outs
push
retf
shr
push
sbb
xchg
push
ins
or
(bad)
sbb
jecxz
push
jb
pusha
xlat
push
retf
jmp
push
in
or
lock
iret
mov
xlat
or
addr16
jns
sti
or
mov
mov
adc
mov
push
stc
imul
into
lods
ret
aam
ins
int3
enter
jbe
push
int3
xlat
sbb
outs
add
into
jae
or
mov
outs
xchg
jae
jb
in
ficomp
inc
in
xchg
push
(bad)
leave
xchg
push
repz
or
in
mov
ins
mov
adc
ins
push
cmc
lds
mov
cs
dec
sub
out
ficomp
or
and
popf
xchg
xlat
xchg
int3
into
data16
outs
dec
scas
(bad)
imul
adc
outs
das
push
imul
out
out
dec
adc
push
cmp
pop
out
mov
or
ins
clc
jns
ins
mov
call
dec
sub
dec
ins
and
push
xor
dec
or
mov
lods
js
jne
out
mov
fimul
ins
ror
and
dec
arpl
xchg
or
push
or
sub
aad
add
sub
arpl
mov
xor
adc
movs
jo
div
das
pop
cmps
jne
arpl
mov
push
(bad)
or
jecxz
(bad)
repz
imul
push
or
adc
stos
xchg
jae
jge
aaa
jmp
sub
imul
mov
jecxz
xchg
push
outs
jno
mov
xlat
jne
dec
push
out
retf
mov
xor
mov
arpl
xchg
jae
sub
pop
dec
sub
call
ss
cs
hlt
xlat
hlt
mov
fcom
mov
aad
scas
mov
in
xchg
and
jp
mov
test
out
mov
push
sub
adc
xchg
and
ss
sub
cmp
cwde
xlat
mov
push
gs
or
adc
stos
inc
pop
sub
dec
pop
call
and
cmps
jmp
mov
xor
icebp
mov
call
pop
add
xchg
push
push
inc
lock
in
ficomp
inc
in
nop
push
(bad)
leave
nop
push
sbb
jne
ins
mov
mov
(bad)
bound
imul
in
mov
mov
mov
mov
mov
outs
sbb
imul
jne
lods
adc
mov
jmp
loop
adc
push
pop
adc
data16
icebp
imul
push
js
test
adc
xchg
push
push
cmp
sti
xchg
xlat
xchg
jns
jns
iret
movs
or
jns
not
and
mov
pusha
sub
stc
xchg
xlat
push
mov
ins
or
xchg
out
mov
or
mov
xchg
xlat
xor
push
ins
rcl
fwait
cdq
pop
arpl
rcl
dec
lods
js
ss
adc
mov
loop
xchg
jns
push
mov
mov
nop
jns
jp
clc
xchg
sbb
sub
or
xchg
repz
mov
imul
out
push
adc
and
mov
mov
arpl
push
mov
(bad)
movs
mov
cdq
sub
dec
imul
xchg
int
adc
jmp
nop
mov
imul
rcl
pop
jo
pop
fbstp
mov
xchg
int3
bound
fstp
xchg
mov
lock
inc
dec
inc
mov
cmps
cmp
xlat
pop
les
xchg
fidiv
(bad)
rol
in
xchg
(bad)
xor
adc
mov
(bad)
test
jo
inc
xchg
inc
mov
adc
pop
outs
cmps
mov
inc
adc
mov
fs
mov
push
data16
nop
test
adc
add
inc
mov
(bad)
sub
fs
or
into
out
cmps
fs
lock
adc
and
fs
inc
fs
xchg
stos
dec
mov
outs
fs
into
xchg
std
nop
test
adc
movs
xor
out
mov
sbb
out
in
sbb
mov
out
lds
cmp
js
nop
ficomp
xchg
jae
js
dec
push
cmc
or
fs
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
(bad)
leave
mov
sbb
pusha
xchg
ins
mov
xchg
(bad)
sbb
cmp
sti
sub
not
not
rcl
clc
cmp
xchg
repz
sub
xlat
stos
ins
clc
fwait
loop
repz
ret
push
in
jae
loop
sub
lahf
mov
not
push
sub
ins
mov
and
push
xlat
adc
imul
lods
and
inc
mov
push
in
ins
mov
fcomip
loop
cdq
or
xchg
xlat
fild
sbb
movs
int3
push
and
sub
push
movs
das
scas
push
shr
jns
xlat
scas
rcl
in
push
xchg
xchg
shl
dec
xor
inc
popa
loop
or
lods
cmc
iret
push
pusha
lock
or
xchg
mov
rcr
sub
movs
push
add
dec
push
arpl
jb
cmp
loop
(bad)
mov
mov
stc
(bad)
outs
xor
and
nop
jns
aam
push
and
push
mov
std
xchg
push
xchg
jns
push
push
jp
mov
sub
shr
dec
or
dec
xchg
repz
sub
outs
imul
imul
imul
xor
mov
sar
lea
test
jecxz
sbb
arpl
scas
xchg
xchg
or
push
jecxz
dec
lock
sbb
mov
xor
xchg
cmp
(bad)
push
sub
push
retf
add
xor
cmc
aad
dec
mov
push
retf
mov
call
inc
div
xor
sub
mov
nop
xchg
jae
dec
xchg
or
push
xor
test
push
push
loop
push
mov
ja
inc
jecxz
in
dec
repnz
sub
adc
cmps
les
or
inc
mov
sar
or
sub
and
out
jnp
in
add
sub
inc
pop
add
xchg
gs
mov
fwait
mov
arpl
lea
jmp
cmp
push
sbb
mov
pop
push
lahf
add
push
or
fwait
add
jecxz
or
rcl
test
imul
test
sar
or
sub
test
out
or
pop
(bad)
ror
mov
and
mov
loopne
test
push
aas
sahf
test
(bad)
jmp
pop
push
pop
imul
(bad)
test
mov
or
test
and
test
adc
xor
movs
mov
inc
and
and
movs
mov
pop
cmps
push
xor
mov
call
mov
test
cmp
ds
sahf
sub
pop
repnz
pop
sahf
test
cmps
inc
daa
sub
inc
sahf
sub
loop
xor
nop
retf
je
rcl
dec
sub
mov
push
xchg
or
sub
sub
ins
js
xlat
xchg
jae
ins
or
and
or
gs
jae
mov
add
pop
ins
daa
or
in
mov
pop
outs
into
push
mov
push
lock
sub
retf
std
les
ins
or
ror
test
int3
xchg
xlat
pop
mov
call
sub
or
push
xchg
jns
sub
fdivr
ins
push
inc
(bad)
cmp
jnp
or
cwde
outs
rcl
iret
push
repz
lods
js
inc
mov
lock
sub
mov
xlat
rep
dec
sbb
push
mov
sub
arpl
int
and
dec
push
ins
mov
xlat
xlat
(bad)
xor
ss
jns
shr
test
xor
daa
or
ins
clc
sbb
sub
shr
xchg
jae
sub
push
jecxz
xchg
xchg
add
mov
iret
sub
mov
mov
jne
jno
jge
popf
xor
adc
rol
mov
(bad)
pop
retf
push
das
push
push
dec
cwde
dec
arpl
sbb
push
stos
sub
or
adc
sub
or
jecxz
xor
mov
push
cs
repnz
outs
adc
dec
push
push
loope
test
adc
cmp
adc
xchg
icebp
bound
icebp
shl
inc
adc
leave
icebp
shl
outs
rcr
jno
out
adc
mov
push
or
push
sahf
test
loope
xor
mov
push
sti
test
loope
retf
icebp
aam
jnp
aaa
hlt
icebp
movs
movs
sub
das
jecxz
xor
loope
retf
icebp
loope
icebp
shl
mov
jmp
inc
or
arpl
and
inc
retf
pop
test
icebp
movs
adc
leave
ins
das
push
sub
scas
pop
cwde
icebp
push
loope
aaa
ror
rcl
sti
test
loope
retf
icebp
push
sub
push
push
mov
clc
sahf
add
inc
or
retf
rcl
cmc
jb
loope
retf
icebp
cmp
jo
out
rcl
mov
enter
je
add
scas
pop
jecxz
push
push
xor
into
popa
mov
sar
push
push
loope
sahf
repz
mov
jmp
loopne
xor
pop
jb
push
loop
inc
int3
out
jo
add
or
fninit
rcl
xor
push
inc
mov
cmp
enter
mov
pop
sub
in
cld
jno
pusha
mov
push
js
cmp
stos
icebp
fsub
or
repz
sub
shl
icebp
hlt
loope
mov
push
cwde
dec
loop
cmp
in
scas
popa
jae
mov
pusha
or
push
pusha
mov
loopne
jo
pusha
mov
jecxz
repz
arpl
jb
addr16
aad
or
not
imul
je
push
push
jnp
ins
add
push
gs
pop
loope
jno
arpl
jae
out
cmc
pop
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
idiv
fisubr
nop
push
popa
xchg
add
loope
jo
push
push
push
loope
icebp
fsubp
or
shl
jno
popa
mov
shl
icebp
shl
jno
jecxz
repz
popa
push
mov
popa
or
popa
mov
shl
icebp
shl
mov
push
loop
jae
push
in
push
loopne
icebp
push
jmp
mov
shr
loopne
dec
jmp
push
(bad)
or
shl
mov
sar
xchg
cld
cmp
pop
loopne
ss
mov
mov
rol
cmp
jl
dec
mov
cs
icebp
push
loope
loope
into
inc
cmps
mov
mov
add
(bad)
int
dec
add
outs
dec
dec
retf
mov
push
jmp
and
or
xchg
push
cmp
test
jno
jecxz
nop
sbb
push
inc
mov
inc
fsub
test
rol
ja
xchg
pop
out
ja
adc
bound
or
clc
repnz
call
enter
clc
outs
es
push
xchg
push
out
test
movs
shl
inc
push
mov
test
xchg
movs
es
push
out
inc
inc
add
jno
sbb
fst
std
lea
jmp
push
mov
cmp
sti
test
out
test
ss
shl
out
mov
cmp
xor
sub
push
sub
xor
jo
lea
jmp
fbld
test
in
adc
mov
cmc
daa
icebp
int
jb
mov
nop
jmp
sbb
mov
jp
int3
out
pushf
pushf
inc
xchg
mov
(bad)
cli
(bad)
fld
gs
and
mov
mov
push
mov
outs
(bad)
lock
cmp
or
nop
and
fwait
jbe
xchg
xor
xchg
dec
test
fidivr
cld
pop
mov
dec
add
imul
push
sbb
movs
push
mov
stos
aaa
mov
loop
clts
xor
xor
cmc
das
jns
push
retf
test
fwait
cld
int3
pusha
cmp
pop
pop
push
pop
jecxz
outs
cmp
arpl
sub
xlat
mov
stos
js
lods
xor
xor
(bad)
stc
test
and
xor
xchg
and
int3
mov
inc
xchg
addr16
mov
xchg
cmc
adc
sub
inc
mov
pop
add
mov
or
mov
fdivr
test
and
cdq
es
stc
int3
jnp
mov
mov
fnstenv
mov
inc
test
jl
sub
lea
or
push
fwait
hlt
loopne
es
push
xchg
add
inc
aaa
xor
fsub
or
fidivr
je
push
call
mov
xlat
fimul
rol
and
mov
adc
ret
ret
ret
pop
push
push
inc
(bad)
fisub
jae
(bad)
test
mov
aam
lock
pop
pushf
xchg
mov
mov
mov
mov
push
shl
gs
adc
and
or
gs
dec
pop
jmp
push
jp
test
sub
fst
xchg
stos
push
in
sbb
cmps
in
sbb
jns
dec
or
pop
cld
into
mov
jmp
call
out
test
iret
out
(bad)
shl
push
cmp
callw
sbb
and
ja
mov
pop
mov
adc
xchg
and
hlt
nop
xor
fistp
xchg
mov
or
and
iret
jne
aas
pusha
mov
jns
das
in
mov
mov
mov
imul
push
or
lahf
test
push
(bad)
sub
fld
mov
cmp
mov
pop
ins
fidiv
jecxz
stos
ror
xchg
pop
ror
in
fistp
lds
mov
fwait
in
mov
jno
jno
repz
shr
pop
les
inc
add
sub
(bad)
imul
add
or
add
gs
movs
icebp
push
(bad)
mov
call
pushf
scas
fwait
stc
mov
cmp
mov
pop
mov
fcom
gs
dec
fnstenv
in
icebp
shl
mov
pop
jge
or
pop
xchg
out
test
jmp
fcomip
call
rcr
sub
nop
push
sbb
rcl
pop
cmps
fdivr
mov
pop
bound
add
pop
cld
or
sbb
popa
mov
shl
call
lods
popa
xchg
add
jo
loope
in
arpl
jo
popa
mov
shl
mov
shl
jae
bound
imul
cmp
rcl
mov
or
repz
or
sub
imul
sub
xlat
mov
(bad)
jns
dec
cmp
pop
xchg
cld
cld
popf
into
sub
push
mul
mov
stos
(bad)
fs
out
cmps
arpl
movs
fs
jmp
xor
ins
call
add
inc
or
bound
dec
cmp
pop
xchg
push
pop
call
mov
mov
push
out
in
cdq
movs
imul
movs
sbb
xor
push
mov
xor
mov
push
in
out
inc
retf
je
mov
movs
pop
cmp
into
jmp
and
mov
imul
pop
sub
in
sbb
xchg
sub
jle
inc
push
je
out
fistp
mov
call
rcl
xor
lahf
or
mov
push
hlt
out
ret
xchg
sub
loope
mov
or
fidivr
pop
clc
mov
in
jne
xchg
mov
mov
lods
fldenv
loop
aaa
or
cmp
mov
out
fbld
inc
jl
pop
loop
mov
popf
dec
(bad)
js
sbb
inc
adc
mov
jl
rcl
add
loop
pop
fcomp
ror
pushf
mov
ucomiss
in
add
mov
xor
mov
aad
ja
mov
fwait
jno
pop
jl
jo
and
cmp
mov
(bad)
je
push
cmc
push
mov
sbb
xchg
jnp
ins
ins
inc
scas
sub
lods
sub
(bad)
cmp
cld
push
dec
cdq
push
(bad)
xchg
add
fisttp
call
clc
and
sbb
jne
stos
mov
mov
jo
pop
cmp
mov
jecxz
mov
xchg
popa
inc
lds
lea
mov
cmp
push
mov
push
pop
je
mov
call
test
(bad)
aaa
jae
out
push
stos
jg
ins
or
popa
push
mov
mov
bound
icebp
shl
mov
arpl
stc
dec
icebp
nop
clc
inc
mov
test
rol
pop
or
add
cdq
sbb
jno
in
add
mov
push
dec
jno
and
pushf
mov
push
enter
(bad)
mov
inc
adc
sbb
xchg
xor
test
push
or
dec
retf
fnstcw
int3
stos
adc
(bad)
je
(bad)
sbb
adc
fdivr
out
das
leave
clc
pop
cs
inc
out
lds
inc
fistp
cmps
and
push
mov
push
shl
je
push
adc
xchg
pop
repnz
adc
push
rcl
lods
daa
add
dec
in
lods
shl
fild
xchg
mov
jno
xchg
xchg
hlt
(bad)
mov
jg
int
icebp
retf
lea
xchg
outs
(bad)
aam
adc
and
cli
push
(bad)
mov
sbb
outs
leave
popa
pop
fstp
inc
test
ss
and
and
mov
add
retf
fs
lahf
push
push
mov
mov
jo
push
shr
pop
or
pushf
dec
mov
adc
push
xchg
jnp
or
xchg
push
jle
cmp
xchg
aas
call
cmc
jne
test
loop
jb
cld
mov
inc
fsubr
loopne
in
pusha
pop
imul
xchg
jp
in
mov
out
fst
mov
sbb
(bad)
cmps
test
inc
mov
push
ret
lea
adc
xchg
add
fstp
dec
xchg
les
dec
aaa
mov
add
jle
test
cs
in
outs
lds
shl
ds
push
sub
pop
jg
pop
shl
bound
inc
dec
data16
sbb
ds
sub
out
jne
sbb
fild
adc
jmp
push
jmp
sub
pop
dec
cmp
adc
cmp
imul
jbe
out
pop
out
in
cmp
sti
inc
lds
xlat
push
mov
xchg
aas
retf
jmp
push
sbb
outs
arpl
nop
ss
cmp
xor
ret
pop
pop
sar
dec
dec
dec
sbb
mov
push
retf
xchg
out
inc
loopne
movs
call
jge
loope
or
inc
cmp
pop
jnp
jmp
daa
inc
aas
inc
aad
mov
fsubr
xchg
jno
pushf
aas
fistp
xor
mov
arpl
(bad)
aas
std
mov
sbb
mov
xchg
cmp
test
mov
mov
std
add
ret
inc
ss
mov
pop
or
pop
push
pop
mov
push
xor
rol
dec
outs
(bad)
xor
push
mov
mov
gs
pop
test
adc
lock
addr16
jbe
pop
mov
cmp
es
mov
loope
jne
sub
jbe
pop
outs
mov
or
stc
and
push
cmps
data16
adc
adc
xor
lea
jecxz
and
fnsave
xchg
mov
fistp
jp
jmp
dec
xor
sbb
ins
pop
jp
add
jp
cmc
add
retf
(bad)
sub
sbb
or
lds
xchg
sbb
loopne
and
adc
adc
fadd
lods
repz
xlat
fst
xchg
add
jle
loope
(bad)
fsub
lock
jo
popa
mov
shl
icebp
push
jecxz
lock
jmp
dec
shr
rcr
rcr
icebp
push
dec
jno
jo
call
mov
sub
dec
pusha
push
dec
inc
icebp
dec
jno
mov
pop
adc
cmp
inc
data16
cmps
jp
inc
test
(bad)
pinsrw
div
push
jbe
(bad)
pop
fld
cld
adc
add
dec
push
xor
movs
push
sbb
xor
push
xchg
adc
mov
outs
(bad)
add
push
adc
in
not
bound
and
lock
xor
retf
cmp
xchg
sbb
sti
sti
ret
retf
pop
leave
imul
and
in
xor
(bad)
out
sar
pop
stos
sub
push
repnz
shl
icebp
ret
fsub
jmp
adc
mov
test
sub
sub
push
pop
test
test
pop
stc
xor
jecxz
cmp
enter
cwde
jb
push
imul
push
push
xor
mov
int3
cmp
stc
es
lods
imul
xor
sbb
adc
pop
out
xchg
loop
or
outs
loopne
arpl
mov
movs
iret
jae
push
aam
in
add
push
sti
add
rol
enter
or
xchg
xchg
in
mov
out
mov
ins
stc
sub
xchg
or
cli
sub
das
mov
pop
xlat
test
cmp
mov
and
mov
sub
and
cdq
scas
dec
mov
mov
gs
sbb
mov
jo
iret
(bad)
gs
lock
push
int3
dec
jg
ret
or
add
outs
scas
loope
out
fsub
lock
mov
shl
icebp
shl
mov
shl
add
sar
js
stc
sub
inc
fmul
imul
add
mov
loopne
imul
push
enter
cdq
xchg
inc
loope
in
sbb
mov
push
jle
icebp
push
(bad)
sete
inc
ins
bound
or
fwait
xchg
cli
sub
or
dec
add
pop
or
pop
dec
fistp
mov
jg
rcl
add
sub
lods
(bad)
cmp
add
adc
stos
pop
xor
cdq
cmp
iret
or
data16
mov
ret
stc
std
add
js
lock
test
mov
xor
mov
call
add
dec
inc
outs
lods
inc
ffree
push
movs
mov
push
pop
test
cmovo
in
jmp
fcom
jle
(bad)
fistp
cwde
xor
das
cmp
rcr
cmc
cmp
hlt
repnz
sbb
inc
test
cmc
push
fdiv
lock
ret
xchg
in
push
add
dec
pop
(bad)
loop
mov
jnp
adc
out
add
out
add
loopne
sti
test
jo
imul
inc
cmps
int3
dec
sbb
ins
jmp
fcomp
sbb
adc
xchg
std
fcmovu
in
js
and
sbb
jne
jecxz
pop
into
and
dec
sbb
cmc
inc
dec
test
jl
rcl
jmp
jmp
xchg
cmp
stos
sahf
or
test
daa
cmp
stos
cmps
sti
stc
sub
gs
push
mov
jb
push
cmp
test
(bad)
adc
adc
iret
and
test
je
mov
pop
adc
mov
sbb
lahf
push
cdq
xchg
mov
pop
cmc
cli
fwait
icebp
aam
(bad)
ficom
movs
mov
jmp
push
call
(bad)
push
fld
in
sub
popf
sar
mov
jge
inc
adc
jge
or
cmps
fsub
mov
ret
add
dec
push
sub
mov
mov
nop
or
sahf
mov
in
ins
pop
mov
adc
fidivr
adc
jmp
push
jo
add
sti
xor
leave
sub
xchg
data16
xchg
dec
arpl
pop
mov
out
loop
aas
push
iret
add
shl
lods
xchg
pop
bound
call
dec
and
ins
jae
xor
test
call
mov
dec
jnp
inc
mov
push
sub
(bad)
mov
jge
and
jne
jb
js
xchg
sbb
cmps
sar
sub
pop
jmp
les
es
loopne
push
retf
mov
mov
jnp
jmp
sti
(bad)
and
mov
imul
inc
mov
outs
movs
sbb
pop
pop
push
leave
sbb
test
fld
mov
test
xchg
mov
mov
inc
jmp
push
test
xchg
inc
aaa
mov
(bad)
jmp
push
xor
ins
arpl
lock
and
ds
adc
inc
shl
cmps
retf
adc
retf
push
mov
jb
pop
or
ins
fstp
push
fistp
ss
sahf
addr16
and
dec
mov
sahf
xor
dec
or
lahf
mov
pop
fnsave
mov
daa
nop
jmp
and
adc
jle
dec
rcr
xor
push
imul
add
jecxz
icebp
push
loopne
repz
popa
or
shl
xor
stc
nop
jno
sbb
push
clc
fxch
popa
pusha
cmp
cmp
xchg
jo
cmp
mov
xchg
js
inc
loope
dec
scas
out
jmp
stos
in
int
mov
ja
sub
mov
movs
mov
(bad)
push
mov
adc
sbb
mov
les
(bad)
cmovg
out
out
jb
inc
daa
ja
fiadd
pop
rcr
push
repnz
out
jbe
(bad)
call
jmp
test
push
jbe
in
mov
out
stos
pop
xchg
mov
es
ds
sub
js
call
arpl
rcl
jmp
jecxz
sub
adc
(bad)
push
outs
int
add
push
cli
xchg
out
xchg
xor
(bad)
lock
(bad)
lock
jecxz
iret
mov
push
push
sub
mov
mov
arpl
mov
xor
mov
mov
inc
test
and
jnp
stc
dec
loop
pop
mov
arpl
xor
test
int
add
test
cmp
jb
adc
pop
mov
jl
adc
cli
pop
add
mov
cmps
fst
xchg
inc
push
xor
gs
aas
push
jne
jecxz
mov
sbb
hlt
mov
cdq
out
pop
jmp
mov
cmps
xchg
inc
mov
jp
scas
into
jne
fldenv
sti
(bad)
jmp
sub
nop
jo
sub
or
shl
in
aam
call
gs
mov
out
jmp
js
(bad)
(bad)
ins
lahf
lea
cwde
(bad)
(bad)
aad
push
or
add
xor
iret
mov
add
gs
push
inc
adc
push
cdq
mov
xchg
mov
call
cmps
outs
or
add
xchg
jo
add
jnp
push
or
sub
clc
fnsave
fimul
(bad)
in
or
mov
pop
push
xchg
dec
les
dec
fld
jl
xchg
mov
je
out
enter
fmul
inc
sub
xor
mov
inc
retf
jmp
adc
ror
das
ret
add
pushf
into
and
and
rcr
dec
jle
sbb
xchg
imul
daa
xor
inc
lock
test
lahf
das
push
sti
pop
push
jp
mov
stos
xor
stc
mov
(bad)
cmp
jp
xor
or
adc
enter
aaa
inc
ds
dec
inc
out
jmp
mov
xchg
mov
sub
popf
inc
das
or
cmp
sahf
in
cmp
push
icebp
dec
sub
out
adc
or
shr
dec
inc
in
mov
jle
popa
mov
pusha
mov
push
imul
(bad)
mov
ror
icebp
aad
mov
popa
enter
enter
mov
rcl
mov
repz
or
call
icebp
push
(bad)
aam
std
xchg
popa
mov
mov
cmp
push
popa
cmp
bound
sub
stos
movs
rcr
jae
scas
pop
loopne
push
and
lahf
dec
shl
xor
lea
call
sub
cmp
jmp
out
cmp
jl
add
(bad)
rcl
clc
mov
inc
ret
or
and
or
test
and
push
adc
mov
mov
ror
sar
push
ret
xor
and
xor
loope
ins
mov
sub
jecxz
cld
icebp
shl
(bad)
sar
mov
shl
mov
stos
(bad)
inc
or
fwait
dec
mov
aam
mov
aam
loope
icebp
shl
mov
sub
ret
mov
rcr
repnz
mov
loop
lock
jno
popa
mov
shr
jno
shl
dec
stc
xor
rcr
and
push
sbb
loope
icebp
push
jle
jno
in
push
add
mov
push
popa
jnp
or
imul
push
push
xchg
call
xchg
cmp
je
imul
and
jl
push
outs
xchg
sbb
add
jmp
mov
cmp
jg
aas
mov
cmps
pop
cdq
xor
mov
xchg
cli
movs
ss
pop
das
popf
stos
pop
jae
fdiv
imul
ret
cmp
inc
das
push
sub
gs
cmps
xor
loope
sbb
xor
and
xor
(bad)
stc
stos
jl
pushf
push
lahf
loope
js
loopne
rcl
mov
test
fsubr
sar
push
repz
mov
fst
mov
cli
and
jge
push
out
out
test
dec
or
ins
xor
mov
dec
adc
arpl
jg
out
xor
iret
push
push
pop
ficomp
jmp
cmp
arpl
sbb
das
xlat
test
jnp
cmps
shl
out
xor
or
pusha
mov
iret
pusha
sbb
dec
or
mov
pushf
jle
adc
(bad)
int3
inc
(bad)
sub
ins
xchg
and
sub
fs
(bad)
ds
dec
fs
or
addr16
retf
fwait
sbb
jbe
pop
dec
cmp
jg
fucomip
jg
ret
sbb
push
imul
movs
shl
call
pusha
mov
xchg
cmp
push
fcmovb
mov
mov
ret
imul
dec
test
sub
pcmpgtb
mov
mov
xor
add
or
stc
das
jns
push
clc
cmp
jge
jae
add
mov
bound
fild
movs
hlt
xchg
jge
mov
ja
dec
pop
and
mov
push
pop
enter
cmp
rcl
and
dec
cmc
jmp
iret
xchg
(bad)
ins
pop
daa
inc
push
mov
int
pop
cld
and
or
add
jle
aaa
mov
lods
out
push
cdq
jl
or
sbb
xor
mov
stos
sub
data16
mov
jecxz
mov
out
pop
cmp
jecxz
and
out
ret
(bad)
cmp
stc
adc
pop
clc
adc
dec
push
outs
mov
out
xor
add
add
inc
xor
pop
(bad)
mov
das
sub
jmp
aaa
mov
imul
std
pop
das
jmp
cli
and
lahf
cmp
push
cmp
dec
push
(bad)
dec
mov
sbb
call
jmp
xchg
xchg
mov
fsubr
mov
loopne
ins
cmp
fs
pop
mov
add
inc
inc
lahf
outs
test
test
(bad)
sbb
jl
outs
ins
movs
pop
ins
xchg
aaa
jbe
xchg
dec
xor
ror
iret
push
aad
ret
ds
mov
daa
dec
popa
call
push
cdq
or
fs
fwait
icebp
out
aaa
rcr
jg
push
xor
mov
pusha
mov
loopne
repnz
icebp
shl
mov
sar
cwde
jno
cmp
popa
jo
sub
push
or
or
jmp
fs
out
inc
inc
push
dec
mov
add
push
sub
ins
loop
jmp
bound
inc
dec
ror
and
and
out
and
data16
cmp
call
or
pop
addr16
pushf
mov
fmul
and
mov
out
out
int
xchg
bound
lods
imul
dec
jae
pop
loop
xchg
push
fsubr
or
imul
ja
fdiv
popa
fbld
mov
jl
mov
dec
retf
sar
sbb
cmp
test
loope
test
mov
push
and
(bad)
sub
lods
enter
cdq
in
enter
cli
je
(bad)
jecxz
fadd
nop
cmp
push
inc
mov
mov
xor
cmp
and
mov
mov
or
aas
inc
sbb
sar
cwde
push
rcr
mov
add
movs
outs
xchg
cld
inc
loope
lods
das
push
mov
sub
mov
nop
fwait
push
sbb
loope
dec
xor
mov
jne
push
stos
cli
inc
mov
sti
lock
add
mov
stos
fwait
das
pop
push
scas
sub
(bad)
in
jle
imul
retf
outs
mov
stc
iret
fsub
dec
addr16
inc
inc
mov
ja
xlat
out
pop
mov
add
fld
mov
loope
xchg
mov
vucomisd
and
stos
sbb
xor
xor
xor
mov
cmps
in
clc
xor
or
and
lea
jo
mov
test
les
lods
call
mov
out
inc
pop
adc
fnstsw
adc
retf
pop
sub
adc
fstp
mov
ror
hlt
js
fild
es
xchg
(bad)
test
shl
repz
jo
popa
mov
shr
sbb
push
shl
adc
shr
ja
add
mov
mov
fcomip
in
add
shl
test
push
fistp
int3
stc
xchg
fs
dec
push
fsubp
int
push
lock
call
sbb
lds
push
(bad)
or
push
mov
xchg
jne
aaa
or
jmp
mov
cmp
cwde
in
mov
xor
int
push
not
xor
out
je
add
xchg
push
icebp
inc
es
mov
ins
or
retf
xor
test
adc
mov
dec
lds
jbe
push
sub
dec
mov
mov
dec
xchg
cwde
cwde
(bad)
fdivr
(bad)
rol
in
sub
cmp
inc
into
retf
mov
and
pop
pop
pop
xchg
hlt
inc
fsub
cmp
fucomi
sbb
shl
dec
jecxz
mov
(bad)
pushf
cwde
icebp
stc
add
xchg
push
jo
and
aad
adc
test
sbb
lahf
fldcw
test
push
mov
adc
pop
or
inc
aad
dec
or
test
add
es
gs
or
imul
ret
inc
pusha
addr16
sbb
mov
xor
sbb
xchg
xor
aam
call
adc
cwde
push
or
shl
cmps
les
mov
aam
les
mov
mov
test
dec
or
mov
sub
sbb
sahf
ins
add
fld
or
pusha
push
sbb
mov
xchg
jo
xor
mov
jae
xchg
sub
loopne
add
push
repnz
xchg
mov
pop
leave
sub
shl
xchg
sahf
push
inc
rcr
je
dec
mov
movs
jle
pop
dec
scas
xchg
jecxz
jns
es
mov
mov
sub
outs
ss
cmps
popa
and
pop
inc
loope
adc
stc
adc
sub
(bad)
idiv
add
rcl
dec
pusha
or
clc
pop
jecxz
and
in
stos
mov
push
mov
push
lods
mov
loopne
push
imul
inc
mov
in
inc
neg
add
jns
sub
sar
and
jg
fmul
xor
push
icebp
fdivr
adc
cmc
icebp
call
mov
pop
push
adc
stc
xchg
(bad)
sbb
xchg
int3
dec
mov
push
jno
inc
and
rcr
les
loope
push
mov
cs
mov
daa
inc
addr16
push
xlat
or
shl
sti
cwde
(bad)
repnz
push
fld
mov
push
mov
cmp
(bad)
xchg
sbb
in
ret
stc
adc
cld
xlat
mov
pop
cmp
add
jmp
dec
lds
cli
(bad)
jmp
jmp
jge
inc
inc
or
mov
call
ret
out
test
js
lahf
arpl
pop
mov
xchg
int3
cmc
in
call
aam
push
ret
cmp
cld
xchg
loopne
jmp
enter
shr
addr16
adc
xor
mov
sahf
std
inc
sub
cmp
jp
mov
sbb
pop
pop
sbb
in
lahf
pop
cmp
mov
xor
push
lock
loope
mov
xchg
jae
sub
mov
mov
cmps
mov
lods
inc
xchg
cld
fistp
mov
mov
cmp
rcr
clc
int
scas
cmp
push
cli
jp
stos
and
mov
sti
pop
xlat
mov
call
sysexit
pop
mov
jle
(bad)
fdivr
sub
mov
enter
mov
sbb
jmp
rcr
inc
js
(bad)
aaa
mov
xchg
push
sub
test
jns
rol
dec
fstp
call
pop
pop
and
aad
cmps
jne
int3
inc
sub
adc
cwde
fidiv
or
into
xchg
push
loope
adc
fdivr
loope
hlt
test
pop
jp
adc
not
xchg
fst
jnp
(bad)
jmp
sbb
cmc
loope
rcl
or
shl
not
rol
pushf
push
loopne
lock
mov
push
jecxz
jo
arpl
push
arpl
jae
loop
repz
addr16
repnz
(bad)
not
pcmpeqb
(bad)
clc
pop
in
stc
push
jmp
add
pop
out
sti
push
imul
loope
push
mov
jecxz
repz
add
add
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fiadd
mov
popa
pop
stc
aam
mov
loopne
stc
shr
or
popa
push
mov
popa
or
popa
mov
shl
icebp
shl
icebp
push
arpl
push
popa
mov
loope
jo
popa
or
shl
icebp
shl
icebp
shl
jae
loop
icebp
push
out
pushf
shl
icebp
shl
lock
add
movs
mov
lahf
xchg
push
cmps
es
push
push
fisttp
jns
mov
call
cmp
xchg
repz
call
xor
call
jle
pop
std
jnp
xchg
ds
mov
nop
or
stos
xor
retf
sub
xchg
mov
imul
adc
stos
cmp
pop
imul
lods
sahf
jmp
sti
sbb
pop
jmp
mov
loope
mov
jp
mov
xchg
xchg
jl
mov
xor
push
inc
daa
inc
loop
pop
or
xchg
das
movs
mov
ins
popa
mov
inc
out
arpl
sub
xchg
mov
inc
mov
pop
mov
xchg
xchg
in
scas
ret
mov
pop
fnstcw
mov
sar
inc
or
std
(bad)
add
mov
pushf
sti
call
gs
lds
jle
mov
imul
movs
pop
int3
cmp
test
shl
outs
inc
xchg
add
call
xchg
mov
xchg
cmp
sar
dec
mov
jnp
sub
jne
pusha
and
mov
sub
adc
pop
xchg
push
arpl
in
sub
pop
hlt
dec
fcmovbe
or
push
rol
add
cmc
cmp
adc
mov
mov
das
or
mov
hlt
jno
ficomp
out
stos
mov
fsub
leave
mov
inc
jecxz
adc
pop
push
das
mov
pop
call
fisubr
xor
or
repz
push
in
cld
sbb
push
inc
jno
cwde
xchg
lds
mov
in
int3
in
jg
popf
xchg
mov
push
xchg
sub
mov
mov
pop
pop
das
jnp
cmp
inc
pop
shr
loop
xchg
in
add
or
repnz
ss
retf
cli
int3
or
adc
aam
sbb
xchg
dec
push
add
mov
jnp
int
or
add
call
jns
in
in
scas
je
dec
cdq
cmps
(bad)
and
or
das
popf
mov
aad
mov
inc
cdq
lods
fiadd
xchg
jg
movs
push
mov
jle
icebp
cmp
ins
inc
shl
cld
out
adc
cmp
sbb
mov
popa
mov
call
jns
into
jp
dec
les
sar
sub
adc
es
mov
mov
fimul
push
or
jg
xor
fisttp
xchg
mov
ret
and
inc
pop
jl
cmp
inc
sub
in
(bad)
sti
fwait
js
pop
add
pop
fiadd
lea
pusha
cmp
xchg
pop
mov
push
aaa
fcmovnbe
iret
xchg
pop
jbe
in
or
mov
sbb
sbb
lahf
jns
fstp
push
cs
and
sbb
ins
adc
clc
lods
pop
add
jo
mov
sbb
popf
dec
aaa
cwde
xor
cmp
addr16
jg
test
prefetchwt1
or
(bad)
hlt
jne
retf
in
js
jne
mov
jnp
jo
cvtdq2ps
int
mov
xlat
jle
or
or
or
jne
(bad)
xor
mov
pop
jns
cmp
sti
cli
cmc
push
ins
dec
push
and
inc
pop
mov
dec
imul
add
movs
(bad)
ins
data16
dec
cmp
mov
or
dec
adc
inc
dec
sti
mov
mov
sub
addr16
push
mov
dec
cmp
inc
add
sbb
add
adc
dec
(bad)
add
sbb
(bad)
nop
mov
push
fdiv
or
pop
jp
xor
fidivr
adc
lds
repnz
std
mov
push
neg
jg
test
imul
not
js
ins
mov
retf
addr16
add
jge
out
and
sti
mov
and
fsubr
not
xor
loopne
push
nop
inc
jecxz
push
dec
add
jg
push
mov
mov
imul
and
mov
xor
sbb
popa
ins
xchg
jle
ret
je
out
mov
arpl
rol
idiv
shl
push
pusha
mov
shl
or
popa
or
popa
mov
shl
or
shl
add
shr
cmp
inc
rcr
mov
sbb
repz
out
out
xchg
jnp
movs
mov
mov
mov
icebp
push
xor
cmps
and
sub
je
adc
mov
(bad)
stc
mov
cmps
(bad)
and
cmp
push
sub
jmp
cmp
scas
cmp
lahf
pop
mov
lock
add
adc
cmp
add
or
out
stos
call
jl
pop
jmp
fstp
shl
inc
xor
es
sbb
(bad)
btr
cmp
inc
shl
inc
dec
pop
jmp
jle
sbb
cmp
sar
in
call
es
pop
add
push
mov
test
test
lea
mov
arpl
imul
addr16
cmp
pop
push
nop
fld
retf
sbb
push
je
in
ja
push
inc
push
fild
add
jmp
xor
jp
mov
mov
cmp
movs
mov
out
adc
adc
retf
sbb
loope
out
mov
test
jbe
xchg
or
popf
mov
mov
xchg
fimul
jbe
add
cwde
shr
jle
cmps
cmps
(bad)
movs
pop
xor
stos
fisttp
jle
pop
sar
ins
cmp
nop
fild
and
ins
mov
add
inc
inc
in
add
dec
addr16
jg
aas
in
jbe
mov
pop
int3
fsub
in
(bad)
mov
or
call
mov
aad
push
bound
fisubr
cwde
cmp
inc
pop
sti
mov
loop
mov
xor
jbe
jbe
ins
nop
pop
adc
sbb
les
popf
or
and
pop
test
jmp
dec
inc
jl
rcl
cli
mov
call
(bad)
dec
push
xor
jno
test
retf
or
xchg
aaa
rcl
jecxz
loop
push
pop
lds
inc
mov
mov
(bad)
stc
mov
mov
hlt
into
retf
outs
rol
or
or
push
arpl
loop
imul
xchg
shl
jnp
lahf
repz
xor
inc
retf
ss
retf
loop
(bad)
in
imul
mov
test
mov
and
pop
enter
fs
xor
xor
xor
mov
(bad)
dec
fisttp
mov
aas
and
dec
cmp
jbe
dec
inc
mov
cmp
ins
jp
jp
inc
ror
adc
int3
sub
arpl
mov
dec
fidivr
and
repz
test
dec
nop
and
enter
mov
or
loopne
inc
jle
out
(bad)
sub
jnp
imul
call
je
jne
adc
or
cmp
(bad)
xchg
pop
adc
repnz
sbb
cmps
inc
aad
sub
xchg
or
loop
xchg
inc
retf
div
jo
jb
fwait
sub
fs
int3
retf
test
mov
mov
push
aam
aaa
pop
pusha
call
out
call
sub
movs
call
xchg
imul
cmp
bound
call
jl
xor
les
and
movs
ins
jbe
mov
hlt
pop
lahf
fwait
les
dec
dec
mov
mov
aaa
xchg
mov
lods
inc
push
pop
mov
push
inc
pop
sub
pop
dec
fwait
rep
and
xlat
pop
int3
repnz
or
add
jmp
imul
push
xchg
stos
shl
xlat
sub
mov
inc
pop
inc
xchg
pushf
push
jnp
bound
and
or
stos
enter
pop
sub
mov
and
outs
jl
push
repz
arpl
adc
movs
mov
movs
pop
repnz
mov
rol
stos
mov
sti
jge
jge
push
sub
enter
js
cmps
cmp
pop
mov
scas
stos
call
xor
aas
retf
stos
test
xor
mov
jmp
dec
jg
add
and
cli
sahf
sub
fld
adc
mov
xchg
inc
sub
scas
lahf
call
lods
adc
adc
push
sbb
push
aaa
out
fnstsw
out
rcr
adc
mov
push
stos
cs
mov
or
sub
pop
mov
and
inc
mov
adc
fdiv
pop
daa
mov
jne
movs
mov
cmps
mov
enter
retf
sbb
daa
sar
push
outs
adc
es
les
sbb
push
inc
sub
(bad)
jg
jnp
dec
push
jmp
inc
lea
jno
cld
add
xlat
inc
push
add
jno
inc
cs
cmp
dec
dec
fldln2
(bad)
aam
nop
pop
imul
leave
(bad)
in
addr16
or
add
push
fistp
in
shr
xor
psubw
icebp
shl
or
shl
mov
popa
mov
shl
or
shr
sbb
shl
js
imul
js
lock
push
gs
cmp
mov
push
dec
jno
xlat
xor
push
add
mov
call
loopne
mov
outs
cmp
pushf
leave
mov
xor
mov
cs
pop
jge
out
(bad)
mov
xchg
pop
loope
cmc
mov
adc
adc
dec
cmp
loop
dec
pusha
pop
sub
dec
sar
imul
loopne
inc
dec
lahf
add
push
jmp
bound
icebp
retf
push
dec
sahf
hlt
add
mov
cmp
mov
cmc
mov
stos
fwait
pop
xchg
jo
out
cmp
add
(bad)
lods
and
jbe
jb
bound
mov
sub
mov
repz
aam
ret
sbb
repz
pop
inc
xor
cmp
mov
inc
add
mov
lds
xlat
fninit
leave
mov
push
cmp
dec
push
sbb
jb
test
push
and
or
pop
stc
outs
mov
fisub
xchg
cmp
(bad)
xchg
ror
push
fcom
cmp
push
mov
shr
(bad)
neg
mov
in
les
addr16
fsubr
jmp
or
fcom
mov
cli
pop
es
mov
out
add
pop
daa
or
shr
or
nop
mov
icebp
imul
call
sbb
lods
call
dec
out
movs
in
mov
xchg
add
push
in
dec
lds
add
outs
out
or
push
cmps
jmp
outs
sub
dec
data16
popf
cmp
and
pop
popf
xor
(bad)
push
test
mov
gs
iret
out
add
or
add
and
je
push
pop
xor
ss
cmp
sbb
sahf
dec
adc
popf
rcr
dec
or
xlat
fwait
rol
rol
cmp
push
loope
stc
jl
and
stc
movs
or
lods
push
sahf
sub
pop
mov
mov
mov
retf
mov
pusha
mov
stos
into
test
sub
retf
movs
push
mov
mov
jnp
iret
ffreep
div
pop
push
sub
xchg
shl
push
dec
in
pop
pop
push
gs
push
loope
rcr
or
into
pop
ret
enter
shr
sub
test
pop
xchg
mov
daa
movs
fmul
inc
pop
push
lods
push
enter
and
movhps
icebp
sub
jp
mov
lds
xor
es
mov
loopne
fwait
clc
mov
aam
data16
lds
(bad)
lods
dec
test
imul
pop
cdq
xchg
(bad)
fxam
push
inc
and
mov
mov
push
fdiv
loop
(bad)
jno
sub
call
popa
sti
icebp
ja
inc
inc
dec
push
mov
in
aas
and
mov
(bad)
loopne
mov
mov
in
adc
leave
(bad)
nop
fcmove
call
and
std
jl
movs
and
popf
push
and
pop
push
mov
in
dec
cmp
inc
pmulhw
imul
and
fisttp
pop
cmp
pop
inc
inc
mov
cmp
movs
xchg
gs
add
xchg
aam
mov
icebp
fld1
cld
mov
movs
rcl
push
and
jns
dec
adc
stos
in
ins
pop
and
push
or
xor
idiv
cmp
ds
pop
jae
popf
pop
arpl
adc
ja
push
push
mov
ficom
xor
xchg
(bad)
das
ret
pusha
mov
aad
pop
inc
cmp
or
cmp
push
push
sbb
add
mov
daa
pop
xor
jp
dec
daa
aaa
cmp
cmps
and
je
lods
inc
je
push
jb
mov
xor
iret
xchg
adc
cli
xor
in
dec
gs
sar
in
and
ins
mov
ins
fistp
add
push
xlat
stc
push
push
dec
cs
(bad)
imul
retf
mov
mov
retf
ss
push
cmp
cmps
mov
pop
lock
icebp
mov
ins
nop
pop
sub
xor
test
jns
in
shl
fdivr
retf
int
pop
xchg
cdq
(bad)
add
push
test
clc
mov
dec
cmp
inc
and
mov
fdiv
lods
fwait
inc
push
xchg
addr16
imul
movs
ds
sub
fs
pop
mov
(bad)
adc
push
sbb
pushf
call
inc
sub
sub
repz
cmp
sub
inc
jg
xor
add
cmp
addr16
je
lods
push
cwde
ud2
jge
ss
out
loop
inc
pop
pop
sbb
xchg
xor
mov
inc
pop
sub
ins
xchg
adc
or
mov
sub
pushf
push
call
mov
repnz
push
cmp
adc
popa
(bad)
stc
cs
adc
dec
aad
xchg
cwde
adc
cmp
adc
cmp
dec
xchg
add
and
imul
mov
or
push
pusha
or
loopne
jae
popa
or
shl
jno
jmp
nop
js
clc
test
ror
sti
inc
jns
jb
repz
fiadd
call
add
icebp
push
dec
jno
clc
add
ds
fiadd
xchg
std
retf
push
stc
scas
push
xchg
xor
mov
arpl
lods
sahf
cmp
xchg
mov
sub
fisubr
adc
das
fwait
(bad)
mov
fdivr
xor
adc
shl
mov
jae
pusha
pop
mov
push
rcr
and
pop
inc
jmp
in
test
fistp
dec
sbb
repz
jecxz
fxch
mov
xor
mov
scas
imul
aaa
adc
nop
ret
sub
out
xchg
aas
mov
fwait
add
sti
push
mov
mov
lea
(bad)
faddp
jno
ins
ret
inc
adc
and
cmps
xor
aam
xchg
mov
jge
outs
jmp
mov
stos
cmps
mov
mov
call
je
jge
or
test
inc
int3
inc
jl
jle
jl
or
dec
jb
xchg
dec
sbb
pop
jnp
mov
push
sbb
retf
mov
adc
or
mov
xchg
je
jl
test
pop
call
xor
stos
dec
daa
sbb
mov
sti
sahf
inc
outs
nop
mov
jle
add
jle
ins
pop
aas
cmp
add
repnz
dec
out
sahf
add
inc
sbb
mov
sbb
lahf
jno
add
xor
outs
(bad)
(bad)
(bad)
xor
xor
pop
add
test
cmp
retf
cli
(bad)
aad
sub
pop
sub
in
lock
xor
mov
loopne
popa
ffreep
shl
push
lahf
rol
mov
jbe
mov
mov
shl
adc
mov
xor
in
cmps
sub
(bad)
jns
ds
ucomiss
or
sub
mov
dec
or
xchg
adc
(bad)
loop
and
push
cmp
xlat
(bad)
fild
daa
add
data16
push
or
pop
ret
in
sbb
scas
push
arpl
cmp
in
retf
popa
push
push
pop
bound
test
test
jns
mov
dec
jbe
pop
lahf
and
into
outs
mov
bound
push
xor
mov
in
in
mov
xchg
pop
je
sbb
les
sub
mov
or
jnp
aad
push
je
test
loop
or
cmp
js
mov
retf
mov
dec
shl
or
mov
fs
fcom
ret
test
in
ftst
and
push
mov
movs
(bad)
outs
outs
jmp
xor
push
sbb
add
mov
pop
scas
xchg
add
adc
sub
ins
pop
arpl
add
ja
inc
dec
outs
jnp
lock
fcmovu
pop
stos
jae
fisttp
ror
sar
mov
in
pop
daa
out
iret
sbb
imul
movs
(bad)
out
jne
arpl
cmp
in
sub
mov
mov
cmp
mov
mov
mov
data16
mov
jbe
mov
cwde
push
jmp
adc
(bad)
icebp
jp
adc
ins
(bad)
add
int
mov
leave
leave
inc
xor
fnstenv
add
test
scas
jl
lea
push
popf
adc
push
es
and
out
je
xor
mov
loope
pop
cmp
into
sub
inc
and
data16
mov
icebp
push
push
jge
daa
stos
push
cwde
data16
push
xor
pop
fwait
cmc
pop
stos
retf
imul
aam
cmp
dec
ja
or
ds
std
adc
inc
jnp
xchg
ss
xchg
add
mov
xor
dec
add
pop
loopne
ror
test
rcr
pushf
mov
es
pop
daa
popf
push
mov
mov
xor
push
xor
mov
jb
mov
inc
popa
pop
scas
jp
fwait
out
and
cmp
retf
cmps
inc
in
or
cmp
xor
cmc
shl
mov
test
xchg
mov
mov
cmp
mov
mov
mov
push
cli
or
inc
in
adc
push
add
jmp
movs
fwait
mov
(bad)
das
xchg
out
mov
in
scas
mov
pop
add
push
cdq
add
ja
add
dec
loop
lds
lock
sbb
adc
mov
clc
ja
mov
int3
jno
stos
ret
adc
jle
push
js
pushw
pop
popa
mov
loope
popa
add
add
sbb
mov
icebp
(bad)
mov
test
cmps
pop
xchg
popa
arpl
in
mov
adc
pop
(bad)
and
pop
bound
cmp
mov
inc
test
adc
fadd
mov
jns
xor
push
or
daa
lods
xor
lds
les
xor
jecxz
push
enter
mov
pop
cmp
icebp
scas
cwde
(bad)
jge
mov
ds
pop
xor
mov
cwde
xchg
cld
loopne
lock
inc
mov
ror
(bad)
jp
loope
cmp
or
into
out
into
call
popf
xchg
and
inc
cs
ins
inc
int3
bound
inc
xchg
stc
mov
cwde
mov
outs
outs
inc
xchg
inc
in
xor
lahf
fistp
fndisi(8087
retf
(bad)
mov
sub
xor
jecxz
imul
std
jp
sti
cdq
adc
sub
push
xchg
pop
fs
gs
iret
test
inc
stc
adc
mov
dec
jae
test
fiadd
rcl
push
inc
mov
sbb
lock
xchg
xlat
mov
dec
xchg
ins
aaa
mov
jp
mov
mov
fidivr
mov
fwait
je
cld
mov
pop
mov
sub
data16
mov
setno
in
and
add
mov
pop
sbb
fsubr
jmp
xor
mov
push
movs
inc
pusha
ins
les
mov
dec
hlt
sub
and
not
call
cdq
cwde
mov
mov
nop
inc
in
popa
push
cmp
xor
mov
jae
pop
movs
and
xor
and
pop
cmc
clc
mov
sub
and
movs
sbb
movs
pop
into
es
pop
or
mov
in
inc
in
test
push
xor
inc
lea
and
lahf
add
pop
xor
test
(bad)
loop
fisttp
(bad)
call
pop
es
fcmovu
fisubr
int
sub
icebp
adc
sbb
add
and
popa
or
bound
jb
popa
mov
push
jecxz
lock
cwde
js
jo
jmp
js
dec
loopne
js
cmp
pusha
and
stc
test
shr
jo
xchg
push
mov
retf
sbb
loope
icebp
push
jle
icebp
push
repz
hlt
inc
test
adc
pop
sbb
cwde
mov
daa
pusha
scas
push
push
je
jne
rcr
je
add
sub
cli
mov
and
mov
adc
or
sbb
dec
cs
call
jge
add
mov
ins
ret
cdq
mov
dec
popa
jge
jecxz
mov
cmp
out
push
mov
repnz
scas
sub
shl
push
mov
dec
inc
cmps
retf
neg
jmp
add
test
sbb
mov
xchg
xchg
pop
imul
fisttp
cmp
mov
xor
push
mov
loope
mov
(bad)
dec
push
xchg
inc
xor
xchg
stc
clc
(bad)
lock
cli
inc
jae
add
(bad)
(bad)
push
ror
and
push
sub
sahf
shl
xor
push
fs
or
xchg
lds
sbb
jge
(bad)
leave
push
out
cmp
sbb
dec
push
lea
in
nop
pop
mov
jbe
das
mov
scas
sbb
add
add
idiv
(bad)
xor
(bad)
adc
stc
or
xchg
or
add
and
push
mov
jne
ret
pop
cdq
sub
scas
(bad)
movs
mov
imul
cld
push
mov
push
mov
lock
ins
dec
in
fdiv
pop
xchg
(bad)
mov
hlt
sbb
dec
test
inc
sbb
icebp
wrmsr
call
rcl
out
shl
inc
cwde
pop
jle
repnz
cmp
pop
add
push
or
mov
mov
jg
sahf
adc
sub
outs
pop
sub
mov
and
xlat
pop
ins
mov
cmps
cmps
jns
scas
cdq
mul
out
mov
or
sbb
sbb
fld
call
imul
push
add
jne
(bad)
and
xchg
dec
aam
mov
mov
mov
cmp
xchg
push
jmp
add
dec
mov
sub
arpl
jbe
mov
add
sbb
and
pop
dec
lods
cmp
xchg
into
mov
inc
mov
add
rcr
cmp
mov
adc
ss
(bad)
out
adc
adc
cwde
xor
mov
lds
fwait
mov
lds
dec
dec
sbb
mov
std
jno
pop
sub
push
cmp
push
xchg
xor
lea
jl
sar
cdq
xor
sub
int
retf
ret
(bad)
fidivr
add
sti
push
mov
cld
outs
mov
sbb
mov
dec
call
mov
inc
push
pop
pop
pop
idiv
loop
fwait
test
std
push
ins
xchg
mov
imul
inc
mov
pop
stc
xlat
jae
sbb
outs
out
cld
int
jne
out
mov
jge
lahf
add
pop
jo
fistp
xchg
movs
jmp
repz
xchg
stc
mov
popa
bound
rol
pop
xor
dec
in
sub
aam
scas
retf
mov
and
and
(bad)
pop
fisttp
je
xchg
jbe
test
or
outs
inc
jo
test
es
push
cmp
out
and
outs
lods
fdivr
inc
in
data16
jo
loopne
repz
ret
imul
add
cmps
mov
cmps
out
pop
cmp
xchg
nop
adc
adc
cmp
push
fsincos
imul
mov
and
into
jle
lods
or
lahf
addr16
pushf
mov
xchg
mov
fiadd
fnsave
and
fs
ret
jle
in
(bad)
aad
inc
push
add
add
ss
inc
in
adc
add
not
xchg
mov
loope
cmp
jae
pop
lods
mov
mov
add
test
pop
scas
aad
xor
add
mov
ror
retf
jle
(bad)
or
test
iret
out
dec
jp
clc
and
xchg
rcr
mov
mov
adc
or
sbb
sbb
lahf
dec
pop
cli
mov
test
and
mov
xchg
jmp
imul
xor
adc
dec
fs
sub
jp
xor
jmp
sub
ret
nop
mov
pop
sub
loope
outs
scas
push
add
gs
fdiv
mov
sbb
call
test
fincstp
inc
adc
pushf
jl
dec
outs
test
push
add
out
rol
xor
je
jl
push
mov
cmps
lea
movs
inc
xor
sar
inc
cmps
or
jmp
fistp
pop
imul
repnz
(bad)
clc
and
cwde
or
xchg
imul
add
sub
out
and
inc
mov
cmp
sub
adc
cld
mov
loopne
cmp
test
xchg
in
int3
add
and
or
mov
sahf
adc
lods
xchg
dec
mov
test
data16
test
inc
leave
hlt
out
retf
mov
pop
jb
loop
xor
jmp
and
cmps
int3
in
sub
retf
jbe
jbe
out
xchg
test
fimul
mov
arpl
mov
pop
movs
jne
adc
and
add
movs
lods
mov
sub
fst
mov
sar
cmp
push
call
pop
sub
je
icebp
and
loopne
outs
enter
mov
xchg
jp
jmp
aad
dec
xchg
lds
xchg
popa
push
dec
sbb
je
xor
bound
fs
inc
(bad)
loope
cmc
movs
loopne
cmp
sub
sub
aas
mov
cmp
xor
ss
pushf
adc
rol
ret
sub
and
cmp
(bad)
push
mov
pop
xchg
or
fisubr
pop
push
xlat
lahf
nop
scas
in
(bad)
adc
popf
cmp
stc
sub
or
xchg
aam
and
out
(bad)
rcl
inc
mov
jp
or
or
add
jl
scas
enter
and
mov
call
or
mov
mov
std
cmps
mov
in
and
or
inc
dec
dec
inc
xsavec
sub
mov
ret
in
and
inc
push
popf
sbb
repz
int
(bad)
mov
sbb
fisubr
xchg
cmp
stos
ins
fmul
mov
rcr
out
dec
ret
or
ins
int
fistp
addr16
ins
daa
push
loopne
aad
add
mov
cdq
pop
test
mov
and
daa
in
icebp
add
(bad)
and
xchg
xchg
sahf
mov
dec
add
mov
cwde
or
dec
pop
sub
clc
mov
xor
xchg
pop
es
lahf
mov
pushf
cmp
cli
pop
cmp
cmp
push
daa
mov
sbb
in
push
in
or
fiadd
(bad)
sub
push
stos
push
and
out
dec
cwde
jecxz
mov
pop
pop
mov
es
push
jge
xchg
movs
movs
ret
mov
not
fld
mov
and
rcl
push
test
sbb
xchg
inc
push
jmp
fwait
daa
cmps
int
cmps
mov
arpl
push
clc
pop
mov
test
sub
push
loopne
inc
neg
addr16
push
ja
mov
cli
dec
retf
pop
or
jle
dec
sub
sub
fstp
scas
ror
xchg
clc
jle
into
jl
loope
xchg
and
cmp
scas
xor
or
retf
mov
stos
icebp
retf
mov
add
add
das
lds
pop
leave
out
inc
mov
add
xor
lahf
leave
les
sub
repz
arpl
into
sbb
jl
pop
movs
stos
jmp
lds
mov
in
fstp
inc
push
dec
push
push
popf
and
mov
popa
mov
pop
dec
fidivr
aad
cdq
je
and
pop
pop
xchg
cmp
int3
aaa
mov
push
in
ins
pop
push
ins
iret
enter
push
out
fwait
mov
out
fwait
dec
mov
and
cmp
fiadd
retf
mov
xor
adc
(bad)
pusha
add
cmp
fwait
aam
fstp
mov
popf
mov
add
outs
popa
ffree
sbb
jmp
and
in
xchg
adc
lods
shr
fucomi
mov
and
data16
ins
daa
cmp
jno
xchg
mov
lahf
arpl
sbb
enter
(bad)
and
(bad)
mov
lahf
popf
shl
adc
mov
mov
mov
pusha
inc
inc
out
mov
jp
sahf
jle
jmp
(bad)
xchg
xor
xchg
outs
pop
sbb
cmc
mov
popa
pop
xchg
inc
int
xchg
adc
leave
call
inc
ret
inc
jno
(bad)
sti
push
jns
mov
jo
add
arpl
add
and
and
mov
sbb
push
push
jle
add
xor
mov
jmp
sub
daa
dec
(bad)
ds
movs
fdivr
sbb
aaa
sub
mov
fwait
in
popa
cli
pushf
iret
pop
rol
int3
shr
mov
je
ds
or
adc
push
sbb
sbb
outs
mov
fsubr
mov
pop
fwait
cmc
sbb
outs
mov
retf
mov
retf
mov
pop
xchg
lahf
and
pop
mov
clc
push
in
clc
sbb
jp
fucomip
jb
dec
test
out
mov
stos
jns
push
sub
sti
adc
ss
push
test
add
lock
stos
in
lods
ret
or
ret
cmps
push
movs
cmc
and
mov
push
or
inc
xlat
pop
aas
or
pop
inc
addr16
lods
push
push
dec
addr16
jle
mov
adc
pop
jb
test
xor
and
sub
pop
add
jmp
fld
xchg
pop
pop
push
stos
(bad)
sbb
pop
ror
mov
ret
ds
mov
pop
jmp
push
pop
inc
push
inc
add
and
pop
xchg
or
and
add
and
jp
pop
sub
ret
clc
cmp
loopne
jecxz
push
(bad)
dec
add
pop
int
neg
ins
push
loopne
stc
cli
dec
pop
and
fsubr
push
(bad)
xchg
sub
js
fmul
fst
jbe
mov
cmp
movs
fcom
inc
es
mov
xor
jns
or
xor
test
xchg
or
fsubr
fild
inc
inc
push
push
in
int3
pop
mov
cmp
in
dec
jne
out
mov
inc
cmp
cli
inc
rol
movs
ds
mov
test
and
pop
imul
iret
nop
and
aaa
ss
sbb
dec
cmp
fisubr
adc
jbe
bound
scas
int
fs
and
add
outs
leave
xchg
push
sbb
dec
and
mov
cmp
mov
push
xchg
outs
sub
nop
mov
xchg
fld
add
mov
jno
xor
cli
lods
arpl
adc
push
sti
loope
aad
xor
jo
sub
jae
sub
push
or
fimul
loopne
and
jae
out
inc
mov
add
cmp
xor
iret
popa
inc
daa
mov
ins
cmp
out
add
add
pushf
hlt
mov
(bad)
sbb
es
add
push
(bad)
rep
lock
not
mov
add
ja
inc
push
cmc
loopne
add
cdq
rol
sahf
ror
int
mov
mov
jle
mov
adc
stc
xchg
scas
or
rol
inc
sbb
push
leave
dec
inc
cmps
ins
call
mov
pop
out
movs
sub
dec
and
(bad)
and
or
jg
cmc
adc
mov
ficom
sbb
xor
inc
jge
xor
ins
(bad)
call
loop
movs
adc
mov
stos
push
je
cdq
js
xor
pop
push
out
frstor
sbb
push
(bad)
mov
jae
int3
mov
mov
dec
(bad)
jecxz
test
cmp
das
cmps
aam
sbb
jmp
dec
dec
and
jl
dec
aas
fwait
lar
or
rol
xchg
(bad)
aas
dec
xor
xlat
push
sbb
pop
mov
es
fucomip
mov
popf
pop
xor
or
bound
push
dec
mov
int3
scas
(bad)
repz
dec
fbstp
push
sub
and
ss
xlat
pop
pop
aad
fwait
rcr
pop
in
ja
jae
scas
lds
cld
inc
push
lods
nop
xlat
push
pop
ds
xchg
xchg
retf
jno
inc
fsubr
xor
mov
jae
mov
mov
je
pop
into
and
inc
dec
pop
jnp
imul
ins
pop
or
push
jnp
mov
cmp
dec
icebp
mov
inc
sub
aad
aas
add
jae
test
addr16
push
daa
aas
push
mov
(bad)
xchg
sub
pop
rcl
jnp
or
stc
bswap
inc
outs
jmp
jae
ds
mov
int
xchg
jmp
mov
icebp
test
jns
test
jo
jmp
adc
jle
out
fild
(bad)
imul
in
adc
mov
xchg
mov
jmp
jne
mov
mov
cwde
je
out
add
and
mov
sub
sub
xor
ror
and
cmp
push
aad
jbe
imul
lock
add
xchg
daa
xchg
ror
(bad)
mov
jl
stos
jg
pop
and
jmp
shl
icebp
push
pusha
or
popa
or
popa
mov
shl
sbb
leave
cmp
jmp
push
or
or
imul
test
inc
adc
pop
pop
test
mov
lods
loopne
sbb
ja
aas
xlat
out
push
push
or
popa
ss
loope
aas
add
ins
inc
movs
sub
sbb
mov
std
xor
mov
call
mov
cmp
mov
(bad)
in
iret
out
sti
addr16
push
into
inc
mov
pop
mov
clc
test
clc
dec
jo
movs
movs
into
fst
in
(bad)
xchg
add
test
jl
xchg
xor
adc
ror
cmp
add
jne
pop
inc
xchg
sbb
cmc
retf
out
ins
sbb
es
sbb
and
xchg
ins
or
stos
mov
fxch
pop
ret
cmps
mov
inc
fdiv
lock
ja
cmp
scas
jl
push
or
lock
sbb
mov
inc
shl
dec
cs
mov
cs
std
xchg
movs
push
mov
mov
into
in
inc
jbe
xchg
test
std
or
jp
aaa
mov
mov
sar
add
fdivr
adc
hlt
fucom
xchg
fld
push
mov
mov
or
inc
nop
and
or
cmp
sbb
clc
test
xchg
fwait
jo
add
xchg
mov
xchg
push
ds
add
inc
jp
xor
div
or
push
icebp
push
sub
xchg
in
adc
add
fs
mov
mov
repnz
sub
cmc
xchg
hlt
dec
push
cld
mov
aad
and
mov
test
and
cmp
stos
std
push
mov
shl
mov
dec
adc
jbe
shl
lock
stos
sti
adc
imul
data16
jbe
xchg
jo
mov
mov
sub
xchg
pop
jb
gs
es
mov
adc
or
pop
xor
stc
test
jecxz
outs
cmps
pop
js
pop
add
cmp
not
retf
cmp
lods
pop
jmp
ror
cmp
push
jge
fild
mov
jmp
or
pop
jmp
leave
inc
sbb
push
cmp
dec
cmp
mov
push
or
mov
sub
(bad)
mov
cmp
mov
jb
ins
pop
cmp
mov
pop
ret
ins
std
adc
lea
out
rcr
je
push
dec
sar
jmp
lods
and
jns
push
cwde
imul
push
pop
and
adc
pop
push
and
add
lods
div
mov
lods
xor
sub
jns
and
push
sbb
inc
(bad)
add
jbe
std
shl
add
push
jg
loop
ins
or
cmc
cmp
jno
xor
mov
mov
pop
xchg
fnop
sbb
cmp
mov
dec
stos
xor
adc
aad
lods
lods
sbb
adc
xchg
jns
out
imul
js
cdq
cmp
jo
push
daa
pop
or
and
mov
add
push
xor
jmp
int3
aad
sub
xlat
ret
pop
jl
outs
mov
xor
push
(bad)
loopne
in
inc
ds
mov
mov
mov
or
add
outs
inc
mov
jle
test
imul
mov
cwde
add
jmp
inc
dec
lea
shl
aad
outs
mov
mov
movs
fnstenv
out
mov
rol
adc
ins
cli
xor
mov
mov
inc
adc
mov
mov
sbb
xchg
add
cdq
push
scas
leave
mov
jbe
std
into
rcr
or
neg
enter
jge
out
sar
pushf
rcl
int
mov
sub
loop
pop
cmp
push
popf
cmps
dec
(bad)
rcr
setl
xor
jbe
xchg
sub
or
push
jle
jecxz
inc
mov
fld
inc
das
jecxz
(bad)
pop
loope
jnp
and
pop
jmp
shl
cmps
jns
cmp
fcomp
ins
cmp
fstp
addr16
popa
lods
push
push
mov
inc
mov
adc
or
jbe
leave
stos
push
xchg
jb
(bad)
cli
(bad)
push
cmc
(bad)
repz
(bad)
adc
popa
call
(bad)
mov
inc
addr16
push
dec
sbb
retf
push
ins
inc
push
repz
ss
push
adc
div
stc
aaa
xchg
mov
ret
test
std
push
mov
push
fld
push
sar
fidiv
add
jne
lods
mov
sub
daa
test
sbb
pusha
and
mov
ret
cmp
xchg
sbb
add
add
ins
test
pop
xchg
leave
bound
push
inc
in
jne
shl
ins
jecxz
cmp
mov
push
dec
jge
and
pop
add
mov
adc
repnz
and
jp
pop
mov
loop
cmp
out
adc
pop
(bad)
fdiv
repz
mov
jbe
mov
aad
pop
test
lock
xor
test
xor
push
adc
pop
mov
mov
mov
inc
aam
sar
push
pusha
add
add
mov
jl
scas
jbe
mov
sub
jnp
(bad)
mov
push
ret
daa
hlt
pop
cmps
loop
mov
outs
cwde
in
in
cwde
jae
sub
leave
pop
adc
dec
lock
jae
mov
pusha
retf
repz
rcr
pop
test
jno
pop
sbb
and
sbb
aas
fst
fdivr
and
push
lea
lds
dec
cmp
inc
loope
aaa
dec
jno
stos
test
pop
pushf
xor
mov
dec
int
fmul
shl
dec
mov
fsub
xor
sub
xlat
jae
and
sahf
addr16
xor
dec
sub
pop
jae
push
sub
add
les
mov
and
(bad)
fmul
div
push
xor
adc
outs
test
sub
or
aad
mov
inc
ret
inc
pop
mov
mov
call
xchg
dec
aaa
xchg
mov
dec
jg
loopne
fwait
in
mov
gs
mov
scas
cli
mov
std
sahf
xlat
ds
ret
int3
mov
pop
jle
int
outs
xchg
(bad)
sbb
xchg
cmp
push
bound
loope
xor
push
cmp
retf
cmp
fs
add
rcl
in
retf
jae
int3
fld
inc
in
out
jle
push
pop
fcmove
stos
retf
jecxz
push
(bad)
ficom
pushf
xchg
adc
jbe
out
test
syscall
bound
call
dec
mov
aam
xor
daa
inc
jl
(bad)
cmp
fstp
mov
add
prefetchwt1
fstp
pushf
xchg
push
ja
jecxz
cdq
add
dec
dec
loop
jecxz
lods
cmp
mov
mov
inc
xor
push
sub
int
fs
lods
xchg
pop
jmp
pop
xchg
icebp
dec
adc
bound
fwait
or
rcl
mov
xchg
dec
out
ins
pop
mov
push
xchg
mov
repz
pop
sub
(bad)
xchg
int3
test
pop
mov
iret
ja
sub
mov
and
repnz
xchg
test
rcr
ins
mov
push
add
or
push
push
sub
fild
xchg
mov
mov
cdq
scas
jmp
jns
mov
(bad)
and
mov
dec
clc
movs
cmps
hlt
loopne
or
mov
aad
js
dec
gs
jge
mov
sub
dec
call
ins
inc
iret
pop
and
mov
ret
das
rol
out
or
retf
(bad)
loope
bound
adc
dec
jns
or
cs
mov
(bad)
(bad)
cli
out
cmp
cwde
repz
outs
inc
lds
loop
dec
mov
ins
ds
je
mov
(bad)
ins
mov
adc
scas
jg
mov
add
repnz
mov
stos
and
mov
lods
add
fs
std
push
or
call
pop
mov
jg
inc
lahf
sub
push
push
add
pop
xabort
adc
push
inc
add
or
xor
pop
mov
mov
xlat
push
sbb
(bad)
fdiv
inc
fst
xor
idiv
add
lods
shl
loope
pop
mov
adc
retf
mov
(bad)
loopne
test
xor
ficom
inc
idiv
push
push
fdiv
or
push
std
adc
and
xor
mov
inc
add
icebp
mov
or
sub
(bad)
jge
lock
je
xchg
mov
cld
pop
jle
sbb
test
data16
pop
jp
add
add
pop
xlat
repz
dec
(bad)
xor
ins
mov
es
sbb
xchg
test
jnp
repz
(bad)
imul
dec
mov
xchg
outs
sbb
jb
jmp
lahf
or
mov
cld
shl
dec
fucomp
bound
adc
sub
jno
xchg
and
es
dec
sbb
xor
stos
push
stos
repnz
sub
pop
or
xor
add
mov
or
ja
mov
jnp
fldenv
pop
movs
xchg
out
sub
scas
popa
mov
pusha
mov
push
imul
aad
inc
loope
sbb
and
jns
cmp
sub
jno
sub
aam
adc
and
mov
sbb
push
ins
loop
jne
inc
loop
scas
pusha
cmp
jne
jg
scas
mov
fstp
movs
aam
dec
sti
imul
adc
int
jmp
sub
(bad)
ss
inc
sbb
cs
cmp
in
int
clc
or
jmp
sbb
ja
pop
rcr
in
cmp
push
lock
xor
enter
dec
icebp
sbb
inc
push
hlt
cmp
xor
jecxz
cmp
test
push
inc
jmp
mov
shl
lock
lock
mov
shl
nop
jno
leave
cmp
pop
fxch
loope
or
add
mov
cs
jmp
xchg
sbb
ss
popa
inc
mov
or
stos
cmp
repnz
retf
sub
addr16
pusha
add
adc
inc
js
test
cmc
clc
dec
(bad)
int3
jo
xor
sub
int
jb
not
jnp
loopne
sub
xor
jmp
pop
in
jl
push
dec
cmp
rcl
test
sub
and
(bad)
andps
stc
popa
cmp
lea
push
push
sub
jecxz
add
sub
out
sbb
fbstp
retf
xor
in
mov
adc
int
(bad)
sub
outs
in
movs
inc
jecxz
adc
ror
arpl
test
std
fisub
or
dec
gs
mov
in
scas
rcr
and
jb
jbe
out
pusha
xor
add
cmp
(bad)
push
or
sbb
xchg
shl
mov
lods
out
add
js
outs
cmp
sti
(bad)
mov
pop
int3
jnp
jp
movs
movs
gs
jae
or
mov
js
cs
xchg
je
retf
mov
gs
enter
mov
xchg
mov
xchg
clc
adc
push
fcomi
inc
xchg
cld
pusha
jl
push
pop
mov
movs
dec
in
xchg
aaa
iret
clc
fdivr
sbb
dec
jb
add
pop
adc
imul
mov
hlt
mov
sub
pop
test
neg
xor
(bad)
cdq
adc
and
mov
mov
sti
mov
loope
adc
fmul
idiv
outs
and
loope
and
dec
lea
add
xchg
fdiv
xlat
xor
pop
popa
add
ins
inc
daa
clc
xor
ins
cmps
ds
xor
push
dec
out
aas
test
cld
adc
xlat
std
inc
dec
sbb
loop
imul
pop
push
fs
nop
jae
mov
jmp
inc
aad
repnz
test
es
add
shl
shl
shl
lea
test
inc
push
pop
iret
lahf
in
dec
dec
dec
jnp
cs
cmp
into
adc
and
nop
add
and
in
into
push
cmp
test
inc
cwde
sti
fwait
pop
jmp
mov
pop
dec
in
loopne
in
movs
add
imul
xchg
and
pop
sub
not
ret
mov
add
pop
cs
mov
call
es
lods
mov
mov
fisttp
sbb
and
xor
js
jl
push
inc
xchg
push
xor
(bad)
xchg
inc
mov
lahf
js
popa
push
scas
aaa
mov
jo
js
or
popa
jge
push
(bad)
inc
(bad)
jno
es
hlt
dec
jns
push
mov
inc
call
aas
popf
dec
repz
sbb
leave
fiadd
pop
rcl
ficom
sub
imul
shr
sub
jae
xor
xchg
call
mov
sar
test
mov
push
ins
aas
and
mov
rcl
dec
bswap
cs
lds
ror
cmp
push
test
push
cmp
xchg
pop
dec
mov
mov
inc
push
or
inc
mov
inc
jno
fstp
imul
dec
retf
stos
and
dec
jmp
xor
cmp
inc
rol
mov
add
fst
stos
arpl
mov
imul
shl
icebp
shl
jno
popa
or
popa
mov
shr
sbb
push
leave
cmp
sbb
leave
fdiv
jo
dec
or
add
jmp
ret
dec
and
mov
test
jg
push
push
mov
ret
inc
bound
mov
addr16
mov
daa
fpatan
data16
cmp
mov
sub
mov
and
push
xchg
and
sub
stos
xchg
add
hlt
jge
imul
mov
mov
stc
pop
imul
inc
test
out
(bad)
ins
sti
movs
repz
ds
mov
lods
xchg
jns
mov
ja
adc
push
push
sub
test
xor
xchg
jo
jmp
(bad)
hlt
inc
dec
push
cwde
or
inc
mov
xor
stc
lods
sbb
lods
xor
pop
popa
outs
clc
mov
push
ds
or
pushf
hlt
inc
inc
sub
clc
cmp
and
stos
fild
and
add
mov
mov
scas
scas
jne
push
mov
cmps
in
cli
and
cmps
push
add
xor
js
push
mov
sub
and
jbe
pop
fdivr
or
push
les
retf
js
js
add
xchg
pop
bound
xchg
out
les
movs
sbb
scas
ret
fs
loope
jge
adc
and
js
jl
and
popf
dec
out
and
jnp
loopne
pop
or
pop
push
and
cmp
xchg
and
sub
sbb
aas
fld
xchg
jbe
movs
cmp
and
inc
mov
sub
and
inc
stos
jae
dec
pusha
test
sub
or
jne
shr
(bad)
and
inc
fsub
jecxz
sub
add
mov
xor
jmp
jecxz
inc
mov
mov
ret
xchg
xlat
lahf
inc
cmp
stos
push
loopne
jb
cmp
int
adc
pop
fidivr
push
jg
mov
es
xchg
(bad)
jne
or
mov
push
push
adc
dec
adc
xor
add
gs
mov
fild
cmp
je
loope
push
pushf
cmp
add
shr
fucomi
push
push
cmp
adc
(bad)
mov
ja
sti
jmp
mov
xor
leave
loope
movs
mov
push
inc
daa
daa
mov
adc
ins
imul
mov
loope
inc
scas
cmp
gs
sbb
lods
(bad)
jge
inc
cmp
jno
pop
and
cdq
mov
ins
jne
(bad)
scas
cmp
xor
and
mov
lea
leave
add
sar
aam
pop
nop
imul
mov
arpl
pop
mov
sti
popa
mov
scas
dec
xchg
jge
xchg
dec
sbb
xor
dec
or
sub
jge
mov
fs
mov
into
fs
dec
sub
cmp
and
pop
cwde
test
jno
call
cmps
mov
or
in
xchg
les
ror
out
int
xor
sbb
push
ficomp
test
ins
fdivr
ins
pop
mov
iret
and
cwde
add
fs
repz
inc
cmp
push
cmp
fist
and
xchg
out
cld
sub
lods
xor
sbb
add
cld
(bad)
sbb
push
sub
or
nop
cli
dec
sub
scas
xchg
mov
add
fdiv
add
es
adc
into
hlt
fsubr
mov
pop
pop
or
iret
mov
hlt
fsub
popf
ins
imul
cmp
pop
inc
xchg
arpl
call
jb
test
jp
sub
mov
xor
dec
ds
dec
mov
inc
add
or
xor
jno
jo
dec
inc
sub
aam
mov
push
or
movhps
sub
inc
mulps
movs
mov
push
or
mov
mov
pop
xor
das
inc
outs
mov
jnp
and
popa
(bad)
nop
push
cmp
neg
fcom
(bad)
xor
pop
icebp
rcl
adc
sub
mov
pop
mov
jo
data16
fisttp
out
push
popa
dec
mov
inc
or
pushf
jmp
and
lds
ins
movs
sahf
jg
mov
jp
and
test
sbb
mov
mov
or
add
mov
mov
inc
dec
sub
or
nop
mov
in
fdivr
lds
adc
cdq
(bad)
sbb
idiv
xchg
cmp
into
mov
mov
arpl
les
mov
jno
mov
stc
mov
mov
es
pop
div
add
outs
scas
loope
in
popa
mov
popa
mov
push
popa
mov
loope
icebp
push
stc
test
inc
(bad)
pusha
test
push
sbb
in
pushf
shl
pop
icebp
push
retf
pop
adc
mov
sar
or
pop
fnstenv
or
shl
add
enter
in
sub
cwde
jp
rcr
test
fdiv
out
(bad)
cld
push
sbb
test
push
sti
int
lock
xchg
movs
icebp
rcr
int3
sub
sbb
cmps
sub
inc
popf
xchg
jb
movs
push
stos
sub
fidiv
and
addr16
ss
repnz
jecxz
sub
xchg
int
lahf
leave
add
leave
out
sbb
pusha
dec
repz
lds
pop
push
xor
jge
clc
sub
sub
sub
cmp
arpl
out
fiadd
test
js
frstpm(287
sbb
int3
lods
fstp
add
mov
xor
jmp
je
pop
dec
mov
js
and
jl
push
adc
cmp
shl
mov
ret
or
and
add
lds
test
pop
aad
cmp
add
push
imul
mov
mov
jb
mul
jbe
cmp
cmp
outs
or
cld
mov
movs
dec
std
jae
jle
fwait
push
shr
adc
push
lea
retf
leave
mov
pop
jmp
sahf
and
(bad)
and
adc
ror
mov
push
inc
jb
xor
mov
in
push
das
rcr
in
shl
mov
and
push
xchg
adc
in
jne
ins
popa
pushf
xor
mov
push
test
mov
int3
pop
sub
in
fiadd
add
mov
lock
mov
jnp
fist
js
fld
add
xor
jbe
mov
inc
jge
imul
daa
(bad)
push
push
fisubr
imul
jae
push
mov
and
mov
fisttp
repz
mov
inc
jmp
add
mov
loop
mov
(bad)
add
push
inc
test
addr16
inc
sub
sti
scas
push
in
(bad)
lods
push
imul
cmps
push
ss
mov
and
loopne
ror
cmp
xchg
leave
push
pop
mov
fist
mov
cmps
cs
cmp
dec
call
mov
or
cmps
neg
cmp
mov
fdiv
push
dec
gs
cmp
pop
and
inc
sar
xor
(bad)
mov
movs
inc
(bad)
cmp
jmp
pushf
mov
dec
ficom
aaa
fst
outs
inc
ins
(bad)
xor
sahf
test
enter
ins
mov
jle
adc
pop
pop
jmp
or
cdq
push
mov
mov
movs
(bad)
sub
(bad)
cmps
add
lock
push
out
push
cmp
ins
fisub
into
shl
call
sbb
mov
addr16
repnz
mov
cmp
mov
popa
add
scas
iret
pushf
into
rol
in
sbb
mov
out
xchg
inc
or
hlt
div
jmp
add
add
into
lahf
in
aaa
repnz
or
adc
outs
movs
xchg
mov
nop
or
mov
das
mov
(bad)
call
xchg
xor
inc
mov
out
cmps
rol
dec
clc
arpl
dec
outs
and
rcl
or
(bad)
in
dec
xor
nop
and
bnd
and
in
das
fidiv
jne
jecxz
lods
fild
in
dec
xor
push
xchg
ja
and
jno
or
pextrw
sbb
bswap
(bad)
stc
xchg
cli
sbb
dec
cdq
jne
lock
(bad)
jge
gs
out
(bad)
cmp
int
ja
adc
(bad)
xchg
dec
sub
rcl
aas
jecxz
sbb
mov
stos
cli
out
cmp
and
fisubr
dec
mov
mov
(bad)
cmc
ins
(bad)
sub
push
mov
push
inc
cmps
ret
and
sbb
sbb
dec
adc
aad
mov
fistp
cli
ret
sbb
mov
sub
and
inc
dec
sub
mov
and
push
out
jmp
and
xchg
pop
test
das
xchg
push
or
push
cwde
sbb
dec
data16
jge
mov
pop
andps
popf
or
xchg
jo
xor
ror
jno
rcr
ret
jl
jae
fiadd
div
in
push
fnsave
xor
fldcw
add
mov
call
out
and
pop
push
outs
sub
cmp
mov
sub
push
sti
inc
aad
gs
movs
retf
cli
cmp
movs
jp
(bad)
je
shr
repnz
jo
in
sbb
inc
jl
jbe
test
sbb
sub
prefetcht1
inc
xor
sbb
(bad)
adc
(bad)
push
scas
leave
or
stc
dec
add
jns
daa
fdivr
add
(bad)
xchg
jp
inc
sub
sub
es
push
outs
pop
frstor
cmp
inc
and
sbb
and
adc
cld
mov
ret
pop
push
mov
and
cld
pop
pop
and
jo
in
das
outs
(bad)
adc
(bad)
stc
jmp
call
iret
movs
enter
retf
or
push
xor
dec
mov
jmp
push
xchg
mov
inc
dec
xor
adc
adc
nop
xor
ret
or
mov
imul
mov
mov
inc
xchg
ja
cwde
xor
mov
enter
mov
xchg
pop
inc
push
add
add
cmp
pop
arpl
sub
mov
and
jmp
dec
loop
push
sti
sti
leave
cmp
movs
cmp
jne
adc
cmc
imul
sbb
ror
lea
mov
mov
cmps
inc
push
repz
rcr
inc
lods
adc
test
xchg
jmp
repnz
or
jno
(bad)
xchg
das
scas
xchg
lahf
sbb
icebp
stc
movs
sub
test
mov
dec
es
mov
push
add
jg
push
(bad)
repnz
in
hlt
or
cmp
imul
int
lahf
push
movs
mov
jl
add
(bad)
shr
(bad)
aam
jl
xor
cdq
pop
cmps
and
add
mov
jg
out
(bad)
jbe
add
call
jo
fcmovbe
cmp
jmp
jecxz
loopne
push
ins
dec
lods
cdq
icebp
out
hlt
dec
(bad)
(bad)
jmp
aad
jg
popa
pop
mov
pusha
movs
xchg
xchg
xlat
inc
cmp
add
scas
push
pusha
push
push
xlat
jb
fstp
scas
lahf
dec
scas
or
sub
retf
mov
pop
imul
ret
add
aaa
lahf
es
sbb
bnd
jne
mov
rcr
adc
adc
int3
(bad)
pop
fisubr
cmp
dec
cmc
fld
push
jmp
in
test
imul
mov
cmp
lods
pop
xor
loopne
ins
sub
adc
loopne
and
adc
push
mov
imul
inc
test
aas
icebp
bswap
or
(bad)
lock
loopne
xchg
rcl
fld
jbe
ret
cld
scas
inc
jg
xchg
(bad)
(bad)
enter
call
outs
in
mov
xor
push
pop
out
adc
shl
push
and
into
or
and
and
(bad)
std
dec
mov
inc
jne
ja
dec
adc
popf
sbb
sbb
bound
or
stos
loopne
aas
xor
jge
push
dec
xchg
push
nop
pop
(bad)
cld
mov
sbb
cmp
std
mov
pusha
sub
leave
hlt
jno
clc
push
sbb
jb
lea
js
neg
and
imul
cmps
or
loope
xchg
and
sub
mov
and
loope
add
sub
cdq
cmps
(bad)
popf
cmp
daa
inc
add
shl
mov
push
xchg
dec
pop
das
jge
loopne
mov
or
inc
cdq
jp
mov
and
and
mov
inc
add
jmp
mov
out
xchg
(bad)
fs
xchg
jle
mov
jmp
in
or
(bad)
enter
add
jp
jne
mov
dec
lock
mov
std
dec
push
inc
push
(bad)
jmp
pop
std
out
jg
into
pop
jg
xor
dec
inc
pop
fldcw
mov
xlat
int
pop
jmp
xor
loopne
adc
or
add
gs
aad
dec
enter
ja
mov
push
or
addr16
inc
dec
and
stc
aaa
aad
mov
mov
mov
cmc
out
xor
jle
jae
xor
mov
dec
ja
nop
mov
and
adc
outs
sub
shl
sahf
stc
dec
lock
push
repz
cmp
out
mov
dec
clc
jmp
pop
mov
fild
shl
pusha
mov
vucomisd
dec
dec
add
push
cmp
loopne
xchg
jp
sub
or
add
cmp
push
mov
sub
pop
xchg
xor
stos
not
popa
cdq
out
into
lock
jp
and
cld
adc
imul
imul
jnp
fadd
sub
clc
lds
sbb
and
jmp
dec
and
idiv
movs
fistp
mov
xchg
xor
push
mov
inc
js
push
xchg
repnz
sub
xchg
jecxz
push
mov
shl
aad
sbb
jmp
popf
call
mov
aaa
jne
jns
push
dec
inc
inc
mov
pop
and
ret
inc
loope
or
in
sub
mul
int3
fild
js
cmp
or
and
xchg
jo
cld
out
add
out
lahf
or
in
int
push
mov
adc
cmp
cmp
lods
lock
dec
fs
inc
nop
push
mov
mov
les
jmp
sti
mov
mov
imul
or
push
stos
adc
fs
dec
nop
int
or
add
in
loope
rcr
fs
imul
out
dec
jg
daa
sbb
xor
sbb
retf
mov
pop
test
or
push
pop
xor
(bad)
fwait
or
ds
add
ins
rcr
pop
cmp
popf
rol
mov
or
cmc
pop
jmp
xchg
sar
(bad)
mov
out
adc
loop
pusha
sub
xor
sbb
mov
xchg
cwde
push
adc
shr
push
aaa
dec
mov
xor
sti
mov
repnz
and
outs
aam
les
jge
add
sub
push
cli
mov
sbb
cdq
scas
pop
aam
mov
enter
mov
xchg
(bad)
bnd
add
dec
xchg
jne
sbb
gs
xchg
adc
call
jmp
mov
cmps
mov
cmps
mov
sub
outs
and
or
int3
cmp
push
and
xchg
dec
add
inc
loopne
pusha
sub
jge
(bad)
mov
cli
inc
add
daa
loop
push
jo
xchg
add
ret
sbb
retf
sahf
push
mov
adc
stos
mov
push
and
and
xor
xchg
test
ffree
jnp
sbb
jmp
cmp
popf
mov
adc
rcr
add
jle
icebp
xor
icebp
pop
(bad)
pop
or
dec
jbe
rcl
ret
(bad)
xor
push
inc
jnp
cmp
dec
cmp
fbld
jbe
xchg
sub
jmp
or
push
mov
out
or
fnstenv
in
into
dec
imul
xchg
xlat
in
xor
fisubr
xchg
mov
and
faddp
stos
fmul
cmps
retf
jno
clc
nop
jno
cld
inc
fldcw
shr
(bad)
or
imul
mov
cmp
mov
cdq
mov
pop
addr16
and
enter
(bad)
push
lea
jp
xor
loope
xor
jbe
mov
outs
push
repnz
mov
add
test
push
stc
pop
jae
sbb
imul
add
adc
sbb
or
ss
mov
fcom
and
sbb
add
clc
jns
fld
dec
mov
iret
enter
ins
js
fcomp
push
ss
or
mov
lea
das
adc
stc
cmc
loope
rcl
or
shl
not
rol
pushf
push
loopne
lock
mov
push
jecxz
jo
arpl
push
arpl
jae
loop
repz
addr16
repnz
(bad)
not
pcmpeqb
(bad)
clc
pop
in
stc
push
jmp
add
pop
out
sti
push
imul
loope
push
mov
jecxz
repz
add
add
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fiadd
mov
popa
pop
stc
aam
mov
loopne
stc
shr
or
loope
mov
loope
jno
popa
mov
shl
icebp
shl
icebp
shl
or
in
jo
in
mov
push
popa
or
popa
mov
shl
icebp
shl
jno
loop
jae
popa
push
mov
imul
stc
ror
lock
inc
pop
and
retf
lds
xor
mov
jo
mov
aam
shl
mov
into
adc
cmp
mov
mov
retf
pop
adc
dec
mov
pushf
ror
rcl
inc
in
xchg
jo
jg
in
add
jle
push
mov
aam
dec
in
in
(bad)
call
sbb
sbb
add
test
mov
out
movs
dec
mov
jmp
jecxz
mov
sbb
xor
dec
fnstenv
sahf
cld
and
jl
and
adc
xor
sbb
aad
into
fidiv
xchg
inc
mov
(bad)
sub
jnp
or
mov
fadd
out
or
fmul
mov
addr16
xchg
rcl
jmp
xchg
add
popf
adc
popa
xor
sub
aas
xor
xchg
adc
cmc
xor
pop
push
xchg
test
xchg
pushf
mov
xor
jno
loope
(bad)
jmp
mov
js
in
cmp
fiadd
adc
lds
xor
mov
stos
and
xor
inc
outs
cs
retf
fcom
jbe
call
(bad)
mov
mov
or
add
stos
retf
aaa
int
pop
mov
pop
sbb
(bad)
cmp
xchg
adc
dec
test
imul
(bad)
xor
int
add
pop
in
addr16
jnp
rcl
inc
add
in
mov
pop
sub
sub
sbb
mov
in
mov
out
je
xchg
jno
fwait
lea
and
das
xchg
je
inc
sub
jmp
dec
lds
xor
jb
mov
jl
outs
je
jmp
push
mov
imul
lock
xchg
sub
hlt
push
sbb
in
xor
and
or
xchg
mov
xor
aas
cmp
cmc
mov
lahf
add
sbb
js
sub
dec
retf
out
jl
in
pop
and
enter
lods
pop
inc
lahf
adc
stos
out
(bad)
frstor
mov
adc
daa
push
xchg
(bad)
int
and
dec
adc
xchg
in
pop
rol
sbb
fisttp
mov
(bad)
add
push
mov
pop
cdq
pop
and
inc
clc
jp
popf
stos
cmps
pushf
or
adc
mov
pop
aas
xor
ror
inc
arpl
shl
call
test
pop
in
push
pop
push
or
out
xchg
bound
sar
test
xchg
pop
push
jae
inc
pop
pop
jg
sub
mov
ja
outs
popa
xchg
jo
aaa
mov
adc
sub
mov
cmp
cmp
sbb
dec
dec
push
sbb
mov
sbb
adc
xor
pop
das
test
popa
add
fistp
call
jle
test
dec
popa
out
mov
fsubr
and
pop
out
xor
xor
pusha
mov
jns
push
sbb
jmp
(bad)
sahf
mov
jo
xor
test
inc
aaa
and
dec
or
pop
mov
mov
sub
mul
fcomp
pop
jl
aad
aas
repz
imul
aaa
cmps
xor
add
stos
(bad)
adc
jbe
call
cmps
dec
aad
repnz
stc
cmp
repz
pop
not
test
jb
fst
out
jno
ret
lock
inc
jmp
inc
xchg
adc
mov
pop
(bad)
cmc
fsubr
sub
mul
addr16
arpl
ror
cmps
imul
aam
mov
inc
jecxz
iret
adc
repnz
imul
push
nop
add
jle
popa
or
fsub
lock
loopne
lock
popa
or
shl
icebp
push
popa
mov
jmp
cwde
sti
pop
jmp
dec
loope
icebp
push
arpl
(bad)
xchg
xor
mov
aas
and
es
ss
int
ror
cs
fadd
mov
dec
push
pop
fwait
sub
or
in
mov
jge
xchg
imul
mov
jo
dec
adc
test
mov
mov
push
push
mov
xor
bound
mov
in
mov
and
pop
jno
inc
xchg
in
addr16
mov
mov
mov
mov
retf
adc
in
mov
or
out
sub
es
xchg
mov
adc
dec
dec
sbb
mov
idiv
cld
inc
ins
sbb
fbld
mov
pop
pop
sbb
and
retf
jecxz
je
or
mov
ss
xor
xor
call
cwde
push
pop
(bad)
(bad)
mov
jp
ret
xlat
aam
cmp
or
sbb
and
push
daa
stc
and
lock
je
sub
xchg
jge
jb
rol
cmp
mov
dec
dec
loope
lods
sub
sub
ror
ins
add
adc
std
jmp
xor
push
test
xor
pop
xor
or
mov
mov
test
xor
(bad)
push
mov
mov
loope
mov
dec
rol
ins
rol
sub
sbb
out
cmp
fiadd
xchg
outs
mov
mov
jmp
xor
push
mov
sti
icebp
mov
shl
dec
mov
gs
or
mov
cmp
es
mov
sbb
and
or
and
xchg
or
jns
xlat
popa
les
jp
popf
dec
mov
dec
and
pop
mov
jno
jmp
inc
inc
in
cmp
and
sub
(bad)
pop
xor
adc
pop
mov
enter
fwait
adc
ins
aas
out
(bad)
pop
jno
sub
out
xchg
cmps
mov
aaa
jecxz
in
ins
fimul
pop
hlt
fld
push
jmp
jg
rol
aam
test
in
scas
push
mov
fs
push
mov
mov
xor
outs
fmul
pop
pop
fwait
dec
sbb
mov
pop
dec
jge
aaa
imul
sbb
jp
mov
call
jno
jb
cs
mov
lods
test
test
jmp
daa
in
cmp
add
mov
sub
lahf
push
dec
adc
popf
cs
fsubr
jl
push
in
cmp
leave
adc
in
das
inc
movs
or
sbb
mov
jg
sahf
test
cmc
add
and
dec
hlt
lock
loop
arpl
mov
and
cmp
in
aas
add
(bad)
jmp
lods
loop
xor
jb
push
pop
inc
ss
jae
cmc
push
jg
sub
clc
jmp
shr
in
adc
pop
add
js
out
sti
scas
fwait
mov
xor
lea
adc
mov
dec
jp
mov
icebp
repz
aam
movs
dec
bound
data16
cmps
loop
mov
aam
pushf
xchg
stos
jb
enter
pop
dec
push
jo
in
mov
mov
aaa
nop
fld
inc
mov
(bad)
loope
cmps
and
sub
pop
add
shl
inc
or
mov
sbb
rcr
pop
add
cmp
push
xlat
jne
mov
sti
add
dec
cmp
inc
dec
jmp
xchg
push
aam
pop
mov
stc
xor
nop
lahf
mov
mov
sahf
lea
cli
xlat
mov
dec
mov
and
xchg
xchg
mov
jne
ss
xchg
add
sbb
pop
push
mov
movs
cmp
stos
jb
xchg
jnp
xchg
or
xor
ja
add
jno
aas
or
cmp
sahf
stc
jne
push
out
xchg
fsubr
pushf
leave
adc
cdq
push
or
dec
mov
pop
(bad)
fstp
popf
rcr
mov
call
js
dec
inc
jecxz
iret
pop
dec
adc
or
push
es
or
jmp
jo
(bad)
and
jp
jns
fwait
(bad)
shr
xchg
mov
js
xor
cs
call
mov
jge
aad
daa
fs
mov
pop
sbb
in
ficom
int3
push
fst
bound
ins
sbb
pop
ins
push
test
lock
stos
mov
cmps
dec
mov
jp
jecxz
inc
inc
cmp
cmp
or
icebp
cdq
fistp
repz
cdq
lahf
push
xlat
mov
dec
adc
pusha
adc
xor
inc
jmp
pop
ret
push
push
loop
push
mov
jbe
dec
cmp
cmps
jae
mov
xor
mov
mov
adc
inc
sbb
mov
test
push
rcr
cmp
stc
dec
ret
out
int
out
mov
inc
int3
sbb
pop
stos
movs
push
int3
push
mov
cmps
dec
or
fistp
inc
inc
int
dec
cs
test
inc
ins
ja
shl
sbb
cmp
stos
rcl
dec
rcr
pushf
adc
test
xchg
sahf
stc
rcr
in
shl
dec
ins
mov
jmp
mov
test
shl
mov
push
arpl
lock
pusha
mov
push
popa
mov
shl
or
shl
jns
ror
pop
jo
clc
shr
imul
ror
or
sub
loope
jno
xlat
or
inc
aas
dec
cmp
inc
std
and
int3
sbb
mov
pop
xchg
push
mov
jp
(bad)
int3
mov
test
mov
jg
test
cwde
xchg
sub
xchg
sbb
cdq
js
push
in
(bad)
call
and
enter
mov
mov
add
add
mov
test
mov
ret
das
push
test
(bad)
rol
add
call
aam
popa
inc
cs
jae
and
pop
mov
xchg
xor
shl
push
cmp
repnz
fadd
int3
jae
repnz
dec
inc
or
std
das
(bad)
(bad)
popf
stos
lods
and
(bad)
mov
push
gs
adc
icebp
pop
daa
cs
rcr
movs
push
sbb
cmc
jbe
movs
dec
adc
arpl
arpl
cmp
int
jno
movs
stc
ins
cmp
pop
icebp
push
jbe
or
jge
mov
inc
leave
cmp
in
inc
call
icebp
add
leave
repz
adc
imul
mov
pop
or
ins
daa
xchg
test
sub
jns
dec
xchg
xchg
in
dec
push
not
mov
nop
dec
loop
inc
mov
in
xchg
mov
fcomp
inc
mov
push
pop
arpl
outs
out
nop
adc
hlt
xchg
fwait
mov
imul
(bad)
clc
jp
mov
cld
arpl
in
push
sbb
in
(bad)
nop
pop
mov
push
adc
jmp
xchg
not
sub
sub
stc
lock
gs
mul
dec
inc
loopne
movs
nop
out
push
adc
fist
aad
ja
xchg
call
scas
cmp
fistp
icebp
jno
push
clc
pop
mov
movs
ja
push
ds
pop
mov
add
jae
jle
loop
ret
stc
pop
jge
movs
in
(bad)
push
jecxz
jae
push
imul
(bad)
push
test
clc
adc
cmps
inc
frstor
mov
outs
stc
or
dec
repnz
pop
push
retf
sub
xchg
cmp
in
mov
std
sbb
cwde
sub
adc
mov
xor
outs
sub
nop
movs
push
add
mov
sar
out
jnp
cmp
ds
icebp
push
xchg
add
movs
lods
sub
and
dec
lods
jne
dec
repnz
xor
pop
sub
push
leave
mov
in
xor
and
aad
fwait
call
and
test
jg
into
mul
es
mov
cmp
cmp
add
and
mov
retf
into
movs
retf
inc
pop
pop
shr
cs
pop
call
jno
xlat
fsubr
adc
adc
pusha
cmp
retf
jl
enter
mov
mov
dec
ret
fimul
ror
inc
daa
and
movs
movs
fwait
dec
aad
pushf
ins
inc
push
sti
push
loope
lock
push
inc
dec
and
loop
jmp
push
push
inc
ficomp
sti
pop
int3
inc
pop
jns
movntq
out
(bad)
pop
push
mov
pop
sub
scas
cmp
mov
(bad)
mov
scas
add
sub
aam
in
jnp
mov
jnp
jp
scas
adc
push
aaa
adc
enter
loope
jns
pop
or
ret
(bad)
mov
arpl
ds
popa
and
add
cmp
xor
les
pushf
adc
jns
xchg
cmp
jo
sbb
sub
inc
in
call
clc
lea
test
nop
out
movs
fild
popf
pop
lahf
lahf
push
push
pushf
jb
or
mov
out
fistp
in
(bad)
pop
xor
or
sub
shl
pop
popa
leave
ds
cs
jl
jmp
(bad)
sub
xor
outs
mov
mov
or
sbb
push
mov
and
mov
jmp
xchg
je
mov
or
imul
lock
jae
loope
icebp
shl
xor
jns
js
push
and
leave
jmp
inc
sar
imul
or
mov
fwait
adc
sti
shl
rcl
iret
inc
outs
les
shr
pop
arpl
test
sub
daa
sbb
push
adc
cmp
retf
and
out
xchg
xchg
mov
or
push
es
xor
push
inc
sbb
cmp
jle
push
push
jnp
and
ja
mov
shr
loop
pop
in
pop
ds
push
out
sub
loop
sub
xor
cmp
jbe
pop
popw
jb
pop
cmp
stos
dec
push
mov
pop
push
pop
or
push
mov
and
test
int3
fadd
scas
lods
xchg
outs
push
shl
cmps
pop
push
cmps
(bad)
bound
or
fyl2xp1
(bad)
jns
jmp
mov
sar
jmp
sbb
inc
fcomp
sub
pop
mov
aam
sub
int
adc
cmp
xor
mov
popa
gs
mov
mov
(bad)
jp
jb
mov
popf
ret
imul
pop
push
dec
jne
mov
xor
pop
sbb
out
sub
jmp
into
dec
push
imul
sub
add
push
mov
sub
fwait
repz
lea
das
clc
push
sbb
retf
or
test
les
jnp
sbb
inc
adc
jl
out
repnz
add
push
cmp
sar
lods
inc
(bad)
jo
sti
fsub
fild
mov
pop
xchg
stos
mov
js
or
pop
push
jecxz
rol
jbe
cmps
rol
pop
push
cmps
jmp
retf
(bad)
in
ret
retf
(bad)
ins
xor
push
das
cs
retf
adc
jb
mov
iret
pushf
outs
fs
(bad)
ret
stos
add
sbb
push
xlat
fwait
out
adc
jo
xchg
adc
shl
sbb
adc
mov
lds
jbe
xchg
xlat
jne
int
dec
xor
mov
and
inc
xchg
leave
outs
pop
pop
jle
xor
sub
sub
jns
movs
sbb
lods
out
dec
adc
std
(bad)
popa
cwde
push
fisubr
sbb
mov
xchg
fnsave
pop
mov
lods
iret
fst
mov
pop
std
pop
add
sbb
add
les
rcl
or
inc
shl
mov
outs
movs
movs
sub
push
and
retf
sbb
jns
das
inc
(bad)
in
or
add
jns
retf
and
or
xchg
jne
adc
mov
mov
mov
cmp
outs
mov
push
xor
aaa
outs
jno
add
icebp
add
enter
test
push
ins
adc
xchg
loope
sub
jge
leave
pusha
shl
lods
xchg
add
popa
pop
dec
fild
nop
inc
rol
fdiv
push
pop
or
jle
cmc
push
xchg
cwde
and
inc
shl
mov
mov
mov
std
fwait
scas
xchg
push
cli
add
scas
and
test
push
and
cmps
pop
sub
fdiv
jmp
mov
imul
push
fist
add
pop
adc
add
add
dec
mov
cld
pushf
(bad)
and
dec
jmp
inc
jnp
pusha
push
add
jl
jmp
repnz
imul
sub
add
xchg
jne
push
adc
imul
push
pushf
sbb
cmp
and
and
or
mov
mov
rcl
mov
stos
mov
mov
movs
jge
test
xor
sub
sbb
ret
sub
adc
arpl
mov
mov
mov
mov
icebp
xchg
or
add
fimul
gs
pop
or
fstp
(bad)
call
jecxz
mov
adc
out
mov
mov
stos
aam
jecxz
fsubp
add
mov
std
in
aas
(bad)
push
mov
add
push
sti
jg
or
iret
cmp
add
fstp
aam
les
clc
iret
cmp
ins
xchg
shl
fcmovne
sbb
stos
icebp
mov
or
jnp
sbb
cmp
cmp
mov
push
rcl
xor
pop
clc
shr
movs
jnp
inc
es
add
or
cmps
push
sub
add
(bad)
scas
daa
jb
ins
sub
loopne
mov
cmp
scas
aas
add
xchg
xchg
(bad)
jp
xor
inc
mov
neg
inc
adc
pusha
or
push
jecxz
jae
popa
or
shl
icebp
push
call
adc
shl
push
js
enter
mov
cmp
fcomp
jmp
xor
clc
imul
cmp
push
in
sub
mov
push
jle
icebp
push
mov
call
jl
mov
out
xchg
pushf
or
mov
sub
in
in
xor
ss
js
jo
fs
imul
pusha
idiv
hlt
sti
loopne
stc
dec
mov
ds
fcmovnu
xchg
inc
and
pop
inc
sar
mov
ss
push
mov
lea
mov
xchg
and
and
test
mov
xchg
cld
in
add
rcr
repnz
mov
pop
mov
mov
fcomp
push
retf
add
in
sar
ins
sub
xchg
pop
je
test
cmp
dec
fld
or
sub
test
xchg
arpl
pushf
xor
hlt
pop
ds
mov
scas
sbb
das
mov
aad
inc
cmp
fidiv
sbb
outs
xchg
out
mov
and
cmp
fldenv
adc
int
outs
adc
adc
and
xor
push
push
or
dec
push
or
int
xor
sub
and
push
or
and
jmp
inc
lea
jns
adc
mov
mov
adc
stos
cld
mov
pop
jbe
(bad)
push
or
mov
or
jg
lea
cdq
cld
repnz
and
dec
push
adc
pop
imul
push
outs
cdq
cmp
mov
lea
push
into
bound
ja
std
sbb
test
outs
mov
xchg
sti
mov
in
pushf
jnp
add
stc
or
outs
jo
and
je
jo
inc
dec
push
xor
js
cli
and
fs
cmps
sub
mov
fisttp
sbb
aad
int3
imul
xlat
or
(bad)
lds
jmp
jne
ror
pop
(bad)
fdivp
sbb
sbb
pop
inc
push
pushf
or
(bad)
pop
push
fmul
lods
fisub
xor
xchg
mov
mov
cmc
sbb
xor
xor
lahf
sbb
in
and
dec
and
retf
xchg
mov
inc
es
adc
retf
inc
in
lods
lea
dec
sub
clc
push
mov
mov
shl
(bad)
dec
pop
or
or
xchg
fnsave
cmp
xor
out
jbe
xchg
push
aam
push
pop
enter
inc
pop
cmp
sub
cld
and
out
iret
movs
or
int
mov
jg
cmc
pop
adc
inc
or
sti
sbb
jnp
fisubr
xor
cwde
in
out
jno
xor
jg
pop
or
adc
jmp
loop
push
mov
aam
push
fwait
outs
sbb
sbb
stc
call
test
sbb
or
call
jmp
mov
mov
outs
xchg
sahf
bound
ins
int3
aad
mov
(bad)
(bad)
push
test
jae
icebp
adc
aaa
dec
jle
scas
fmul
fs
pop
or
mov
sbb
loope
jbe
push
sbb
je
sti
shl
loop
test
add
ins
mov
pop
fs
push
push
pop
test
push
mov
dec
(bad)
ja
nop
dec
and
mov
imul
inc
adc
push
push
fcmovnu
push
ins
retf
aam
pusha
out
addr16
lahf
les
mov
out
mov
push
lds
push
mov
dec
sbb
cmp
mov
rol
mov
push
sub
test
push
stos
mov
arpl
sbb
nop
mov
cmp
pop
xor
call
ficom
jle
push
cmp
xor
fwait
dec
rcr
in
add
xchg
movs
outs
popf
mov
fs
je
outs
pop
cmc
dec
mov
or
mov
xor
inc
fidivr
aam
mov
mov
jg
adc
push
sbb
mov
sbb
add
inc
ins
fisttp
adc
and
arpl
cmps
xchg
out
sub
fsubr
mov
sbb
push
hlt
scas
sbb
leave
push
jmp
fst
jno
in
push
mov
sub
adc
repnz
add
imul
dec
fimul
mov
movs
ficomp
neg
push
fimul
mov
sbb
and
rcr
push
ins
daa
fst
jno
mov
hlt
loop
xchg
inc
mov
aaa
lods
xchg
add
pushf
mov
jnp
lods
ficom
add
imul
sti
into
jbe
dec
(bad)
aad
sbb
scas
shr
sbb
mov
jae
mov
jecxz
jg
mov
popa
pop
and
cmp
popf
or
inc
popf
nop
cmp
sub
data16
jb
call
mov
ret
add
test
fidivr
and
cmp
mov
xchg
mov
jecxz
and
pop
mov
xchg
jno
mov
fstp
or
cmp
clc
dec
sbb
mov
xor
push
mov
test
jo
sbb
mov
outs
push
gs
retf
or
(bad)
int3
mov
fisubr
pusha
ins
retf
dec
test
xchg
jns
dec
push
mov
jo
ins
aam
mov
nop
mov
and
xchg
arpl
xlat
push
aas
iret
data16
jbe
call
fwait
out
xor
and
test
gs
inc
call
imul
leave
retf
outs
call
call
lods
outs
xor
neg
movs
jnp
icebp
ja
jmp
aaa
add
jl
pop
xor
add
sub
fs
mov
xchg
cmps
jo
mov
pop
cmps
inc
push
inc
sub
sbb
(bad)
in
inc
cld
ss
call
mov
lods
mov
xchg
jge
add
sbb
sub
retf
fisub
popf
dec
std
and
repnz
enter
outs
test
repnz
mov
mov
inc
fsubr
daa
inc
add
or
ins
out
push
xor
lock
shr
inc
inc
repnz
xor
push
jmp
and
aas
adc
inc
mov
add
or
or
movs
out
mov
arpl
cld
sbb
sbb
mov
push
cs
xchg
ins
cmp
xchg
sti
movs
stos
sbb
jns
fcomp
pop
jge
inc
test
dec
pop
(bad)
gs
add
mov
inc
stc
mov
xchg
cld
imul
(bad)
sbb
int
adc
pop
inc
dec
xlat
stos
adc
add
jmp
push
xchg
pop
in
push
sbb
fwait
outs
cmp
or
xchg
sub
mov
cld
in
pminsw
mov
mov
cmp
push
jae
sbb
(bad)
and
push
retf
fwait
xor
unpckhps
gs
scas
sahf
call
cmp
fistp
xor
mov
mov
and
data16
lods
pop
dec
xor
rcr
in
rcl
jg
xor
mov
fucom
push
test
adc
mov
add
inc
sbb
mov
mov
xor
or
imul
popa
out
xor
retf
mov
push
mov
mov
sbb
nop
and
sub
cmp
(bad)
mov
pop
popa
adc
mov
clc
mov
mov
sub
scas
adc
push
dec
mov
retf
stc
je
scas
adc
or
adc
mov
(bad)
xlat
mov
imul
and
aaa
fmulp
and
mov
dec
dec
repz
jno
jp
cmp
add
das
gs
neg
jns
mov
not
shld
mov
data16
ret
adc
and
das
mov
mov
dec
xchg
sbb
cwde
scas
mov
pop
sbb
cmc
inc
rcr
jp
lahf
aad
stos
sbb
xchg
in
test
dec
jno
inc
(bad)
pop
mov
jle
retf
loopne
sub
pop
cmps
(bad)
scas
xor
or
adc
push
ret
ss
retf
sbb
jbe
mov
jmp
fnstenv
xor
adc
push
out
loope
leave
xor
add
es
sti
push
jno
outs
push
add
mov
inc
mov
inc
cmc
xchg
inc
not
jo
jmp
movs
and
xlat
pop
xor
jbe
popf
push
cmps
cmps
stc
xchg
adc
add
retf
retf
nop
sbb
xchg
sbb
(bad)
jns
adc
iret
(bad)
sbb
lods
push
jg
pop
mov
sub
loope
rcl
xchg
push
sbb
test
jbe
or
push
pop
mov
les
jne
jmp
jno
cmp
and
leave
pop
repz
sub
jne
jge
mov
rcl
jp
add
mov
rol
lds
loope
jno
movs
cdq
scas
sub
out
and
loopne
ins
rol
xchg
sti
out
jmp
mov
loopne
stos
push
inc
retf
pop
hlt
inc
mov
dec
push
pusha
sti
mov
scas
xchg
sti
lock
rol
dec
push
mov
push
stos
sbb
repz
mov
or
sar
aam
in
mov
xlat
(bad)
les
mov
mov
jecxz
fwait
adc
cdq
push
outs
or
dec
imul
mov
xchg
pop
sub
or
mov
and
sub
lock
add
das
loope
ins
mov
into
bound
pop
jmp
adc
cmc
rcl
and
ins
sub
mov
xor
pop
sub
shl
gs
clc
aas
jecxz
inc
into
xchg
nop
iret
add
lahf
rcr
add
mov
fbstp
inc
cs
sbb
xchg
or
hlt
aaa
fsub
jo
jb
call
pop
or
mov
fs
(bad)
and
pushf
shl
mov
xor
ret
jbe
cli
dec
js
mov
xchg
mov
dec
les
sub
in
cmp
mov
add
or
xor
or
push
or
inc
sbb
test
jp
xor
int
popa
adc
out
fstp
pusha
pop
mov
fisttp
ror
out
retf
xchg
push
xchg
into
retf
push
cld
(bad)
pop
fnstsw
(bad)
jg
adc
jne
cmp
jecxz
mov
mov
and
mov
sub
xchg
push
dec
xor
ss
ins
sahf
add
stos
mov
arpl
shr
in
int
sbb
addr16
mov
bswap
add
retw
les
stos
mov
mov
std
out
jmp
pop
mov
icebp
std
ss
call
loop
push
les
xchg
push
cmp
imul
push
fdivr
inc
xchg
dec
(bad)
mov
addr16
inc
retf
mov
jns
iret
(bad)
lock
add
pop
xor
and
ds
jbe
xor
cmps
jmp
stos
add
fisttp
adc
sbb
test
lods
push
pushf
aad
jns
out
or
dec
ret
fidiv
push
push
or
add
ror
jp
outs
xor
(bad)
xor
retf
int3
rcr
psraw
or
repnz
adc
fidiv
shr
mov
adc
retf
dec
adc
xor
cmp
push
jmp
sub
mov
inc
nop
ins
adc
mov
sub
addr16
cmp
push
mov
out
out
xor
loopne
(bad)
into
add
sub
push
pop
pop
aas
daa
xor
inc
jo
xor
movs
mov
and
inc
enter
push
aam
cwde
or
gs
add
sbb
xlat
mov
push
jnp
sti
push
imul
inc
jmp
(bad)
cmp
xchg
inc
sub
jno
pusha
test
xchg
jg
inc
add
pop
and
call
je
mov
std
pop
xchg
and
sar
mov
rcl
inc
sub
daa
sub
aam
pop
push
ret
cmp
cli
or
aad
je
mov
or
test
shl
not
pop
and
mov
push
adc
push
jb
nop
not
push
in
test
mov
and
pop
adc
adc
sbb
or
nop
xchg
(bad)
int3
aaa
rcl
add
shl
push
jne
mov
dec
pop
pushf
pop
(bad)
xchg
xchg
cdq
fadd
dec
dec
sbb
push
xchg
mov
sub
movs
sbb
es
out
xor
dec
jmp
clc
or
sbb
sbb
xchg
imul
push
out
push
cdq
lods
push
adc
fcom
inc
pop
mov
jge
inc
push
push
mov
in
iret
push
sbb
popa
or
mov
sar
into
or
iret
add
in
dec
(bad)
repnz
and
xor
lea
jb
cmp
pop
imul
jg
in
cs
inc
pop
pop
jl
and
out
or
sub
push
jmp
gs
lods
aas
ins
sti
sub
sub
out
sbb
js
xchg
fbstp
js
int3
out
ds
xchg
dec
sbb
call
ins
adc
std
or
xlat
push
les
cmps
sbb
mov
out
ficomp
movs
mul
fs
jno
mov
push
mov
dec
sub
sub
popa
ret
out
aaa
out
inc
push
jbe
cdq
in
inc
mov
(bad)
xchg
mov
adc
dec
(bad)
jo
pminub
sahf
test
(bad)
sti
add
push
sbb
inc
sbb
ss
fisttp
sahf
cmp
xchg
lock
or
mov
cmc
xor
repz
je
popf
mov
and
test
test
push
retf
popa
mov
inc
enter
mov
push
lea
dec
add
out
daa
imul
mov
test
in
test
jnp
(bad)
loop
push
or
int3
js
or
xchg
das
add
int
int
xchg
lds
mov
fmul
mov
mov
fst
sbb
mov
push
cmp
js
stos
sub
jl
add
cs
popa
mov
pop
pusha
or
loopne
icebp
push
popa
mov
shl
xor
stc
test
inc
(bad)
pusha
cmp
cmp
sbb
adc
in
pushf
shl
pop
icebp
push
inc
sub
scas
push
inc
jl
mov
shr
inc
inc
cmp
ins
jne
repz
xchg
ret
pop
xchg
bound
mov
shl
adc
push
out
cmc
adc
in
push
cld
xchg
rcl
das
xlat
rol
retf
ds
retf
test
push
cwde
mov
fcom
fsubr
pop
arpl
dec
cmps
sbb
inc
outs
mov
lock
mov
inc
push
mov
sub
xchg
enter
(bad)
jb
mov
xor
add
push
mov
aaa
sbb
dec
or
imul
jecxz
enter
ficomp
pop
clc
int
fwait
pop
sti
jecxz
adc
ins
(bad)
leave
pop
mov
aam
cmp
jle
mov
adc
add
movs
jecxz
call
(bad)
je
and
fcom
xor
xor
xor
test
mov
add
cld
in
mov
pushf
jo
xchg
lods
add
test
mov
fnstsw
sbb
addr16
mulps
lods
inc
dec
aad
icebp
pop
mov
jecxz
jl
adc
push
xchg
jnp
ret
dec
jp
jbe
sbb
cwde
cmps
lods
sbb
xchg
adc
aas
pop
xchg
pop
adc
les
in
push
adc
or
mov
inc
or
(bad)
push
rcl
jne
push
mov
dec
jae
or
loop
xchg
daa
push
jnp
fucomi
dec
inc
test
sub
inc
aaa
xchg
or
stc
fadd
or
rcr
jge
outs
mov
xchg
xor
push
xchg
mov
pop
inc
inc
repnz
pusha
ds
cdq
jnp
dec
cmp
loopne
or
inc
jg
sbb
add
sub
movs
retf
popa
ds
mov
nop
xor
cmp
test
test
aam
sbb
in
adc
outs
add
xor
xor
mov
mov
ret
cmps
xor
adc
push
shr
or
addr16
int
inc
and
push
bound
or
mov
cmps
mov
sbb
mov
push
cmp
ss
pusha
and
(bad)
push
retf
add
xlat
add
test
ret
push
jmp
inc
pop
imul
lods
imul
mov
sti
mov
fwait
add
js
sbb
test
lock
pop
ss
dec
jo
ficom
lods
cmp
inc
inc
shl
inc
cld
push
sub
dec
adc
mov
jmp
dec
popa
rol
out
cli
fiadd
lods
add
and
retf
push
lahf
mov
mov
cwde
fmulp
test
cwde
jg
push
inc
dec
cmp
cdq
inc
and
repz
pushw
add
dec
adc
mov
push
cmps
je
mov
or
cmp
in
inc
cmp
jb
bound
cmp
mov
fistp
sbb
xor
sbb
push
mov
mov
in
jecxz
add
loop
xchg
push
mov
fisttp
in
mov
bound
daa
xor
(bad)
aam
outs
push
mov
xchg
in
call
inc
inc
xchg
movs
lahf
test
xchg
push
jns
sbb
fs
jmp
sub
in
xchg
rcr
frstor
inc
sub
icebp
es
lahf
and
cwde
das
dec
adc
or
and
mov
call
xchg
xor
sub
dec
and
cli
mov
sub
mov
jp
out
mov
mov
xchg
cmp
in
or
cbw
and
aad
sbb
cmp
outs
push
jmp
dec
xchg
push
dec
lahf
movs
lea
sbb
dec
cmps
frstor
sti
mov
dec
add
movs
ror
inc
xchg
int3
das
xor
pop
pusha
mov
and
nop
add
fdivrp
test
popf
icebp
dec
mov
xor
jne
lds
and
cmc
push
sbb
sbb
fwait
(bad)
xor
dec
fcmove
mov
addr16
int
inc
or
into
pop
jo
mov
rcr
ret
add
and
xchg
enter
lds
test
push
push
repnz
mov
idiv
mov
add
push
sbb
or
adc
mov
xchg
and
xchg
or
mov
out
add
cmps
jo
add
test
jmp
out
lea
mov
nop
fistp
jns
inc
bnd
ret
daa
pop
mov
pop
clc
lahf
sbb
cmc
shl
mov
push
test
push
cli
adc
mov
or
movs
popa
aam
call
push
sub
fisttp
jp
jecxz
js
jecxz
mov
in
jb
inc
xchg
sbb
movs
jle
in
ror
sbb
adc
ins
mov
aad
ret
xor
(bad)
rcl
ds
jmp
or
cmps
sar
not
int
dec
jb
stos
cld
sub
push
bound
mov
and
aas
mov
rol
es
jmp
ss
cli
jmp
mov
das
sti
jbe
push
mov
ja
jecxz
stc
mov
jno
leave
dec
push
pop
fsubrp
pop
rcl
xchg
push
enter
movs
xchg
and
shr
mov
mov
dec
popa
or
cwde
arpl
jno
xchg
inc
cmps
imul
add
mov
aad
mov
inc
sub
and
mov
shl
inc
xor
popf
int
dec
jo
in
mov
add
imul
inc
addr16
xchg
rcr
ret
stc
sbb
sbb
pushf
and
sbb
pop
idiv
mov
repz
sbb
mov
push
sbb
stc
mov
hlt
sub
add
adc
(bad)
pop
add
lock
out
hlt
dec
imul
in
daa
mov
sub
push
mov
push
xor
mov
and
sbb
arpl
pop
retf
jl
fild
xor
or
test
ins
xor
ror
pop
aad
mov
das
(bad)
scas
and
js
dec
jmp
xlat
xchg
or
pop
add
ja
fmul
cwde
scas
and
pop
dec
fucomip
arpl
hlt
jno
in
and
les
mov
movs
sahf
inc
xchg
xchg
or
pop
xchg
fiadd
jbe
aaa
or
es
adc
push
(bad)
cmp
sahf
add
jge
pop
imul
test
sbb
fisttp
and
add
jl
imul
sub
pop
inc
or
and
sahf
and
mov
pushf
sahf
cmp
xchg
dec
mov
jo
adc
movs
sbb
mov
(bad)
jnp
push
in
xchg
or
sub
shl
test
and
ja
mov
jae
push
popf
fdiv
out
cld
out
arpl
ficom
int3
(bad)
mov
mov
adc
(bad)
lods
pop
jmp
push
mov
cli
(bad)
sbb
xor
xchg
cmps
mov
mov
dec
pop
xchg
test
add
pop
loope
ins
aas
popa
mov
mov
add
mov
jmp
or
lods
jg
bound
sub
cdq
and
imul
(bad)
ror
leave
arpl
dec
stos
push
push
popa
cmp
lds
loope
xchg
mov
(bad)
aad
ins
or
mov
les
mov
fwait
hlt
xchg
pop
xor
adc
adc
pop
mov
mov
repnz
xor
int3
pop
int
or
xor
(bad)
(bad)
cld
enter
movs
stc
push
jne
scas
push
pop
call
std
mov
push
add
or
jecxz
cmps
in
pop
jl
sub
fimul
pop
js
idiv
mov
leave
int
stos
pop
ret
and
fs
mov
sbb
cdq
imul
pop
mov
jno
ins
scas
inc
fwait
xchg
ret
sub
push
mov
out
gs
mov
ret
dec
cmp
sub
movs
add
and
fnstsw
cmp
pop
idiv
shl
push
stc
(bad)
call
lock
in
(bad)
jb
cmp
jo
mov
rcl
cmp
dec
(bad)
int3
cmp
nop
pop
xchg
lahf
addr16
scas
inc
lock
jmp
arpl
test
jnp
fidivr
mov
ret
leave
arpl
sahf
(bad)
js
jnp
push
dec
push
adc
enter
xlat
loope
fstp
ror
mov
mov
mov
in
and
add
xlat
mov
mov
and
dec
out
cmc
push
mov
into
(bad)
push
push
cld
and
sti
or
test
shl
cli
inc
mov
xor
js
xchg
xor
push
sahf
push
sub
cmp
pop
and
loopne
sub
loope
xchg
jne
sub
xor
or
popa
mov
scas
lock
repz
jecxz
shl
fstp
ins
inc
stc
push
lods
stos
or
cwde
inc
ret
fld
sub
mov
mov
add
(bad)
pop
or
lock
mov
inc
scas
or
popa
pop
xchg
mov
scas
aad
mov
outs
loopne
icebp
push
loope
icebp
shl
icebp
shl
call
mov
sbb
jge
pop
cmp
inc
add
cmp
mov
or
mov
not
(bad)
lock
test
or
mov
jecxz
or
(bad)
push
test
loop
fwait
test
push
jns
xor
ss
cld
and
dec
or
push
mov
or
mov
jg
fs
mov
add
inc
inc
shl
or
cmp
mov
or
dec
clc
arpl
movs
pop
aad
aas
add
repz
hlt
int3
lods
and
shr
push
push
inc
jmp
mov
shl
mov
push
popa
or
shl
mov
shl
nop
jno
push
add
mov
ror
cmp
mov
push
jle
jno
(bad)
or
gs
test
into
es
mov
sete
lods
pusha
mov
out
shl
loope
gs
nop
mov
nop
cli
pop
xchg
push
pop
aaa
push
call
mov
and
call
and
ror
and
and
sub
xchg
add
sbb
les
imul
movs
enter
mov
push
in
test
fsub
adc
jp
je
sub
aad
adc
push
pop
inc
push
and
lock
cmps
xor
xchg
cwde
cmps
and
sbb
jmp
or
mov
repnz
and
inc
lea
hlt
repz
retf
xchg
out
jae
dec
shl
add
sub
ret
daa
daa
ja
xor
(bad)
imul
cdq
out
adc
jge
inc
adc
pop
jo
pop
sbb
inc
aas
jbe
imul
xchg
push
test
jb
fcom
enter
shr
imul
and
imul
pop
hlt
xlat
enter
(bad)
test
cmp
adc
inc
leave
sub
xor
xor
mov
sbb
fdiv
dec
ficom
lock
test
inc
js
push
fs
(bad)
jmp
push
pushf
jns
int
pop
cmps
out
in
sbb
ficom
dec
int3
lods
lods
pop
xor
inc
ins
cld
fsubr
fs
fwait
xchg
push
retf
or
(bad)
fcomp
imul
jecxz
pop
fiadd
inc
push
push
dec
(bad)
(bad)
pushf
add
xor
pusha
mov
addr16
add
jb
adc
cmp
pop
sub
daa
into
fsubr
or
jecxz
imul
adc
push
or
dec
push
mov
add
out
fs
movs
xchg
adc
ins
jmp
jo
inc
iret
jo
mov
das
inc
cmc
pop
jbe
pusha
inc
mov
xchg
mov
and
pop
cmp
push
pop
adc
cld
int
xchg
ja
adc
push
(bad)
in
dec
(bad)
pop
rcr
pushf
mov
cld
jmp
or
mov
jp
bound
xor
lock
mov
jle
call
loope
mov
jb
call
adc
jne
idiv
(bad)
gs
icebp
cld
inc
sub
call
sub
fist
(bad)
cwde
jle
jg
div
sbb
inc
push
pop
mov
xor
shr
and
mov
imul
cmps
sbb
add
add
sbb
sub
cmps
add
lods
gs
test
sbb
xor
pop
jmp
gs
popa
test
push
or
test
fdiv
or
addr16
dec
adc
pop
sub
push
or
sbb
cmp
xabort
add
push
adc
xor
sbb
fiadd
mov
in
sub
hlt
(bad)
jle
dec
imul
pop
daa
push
pop
push
sahf
pop
add
jp
sbb
test
xor
cli
out
xchg
inc
jno
leave
std
jmp
shl
jns
mov
cmp
xor
stos
bswap
leave
call
ins
(bad)
adc
retf
add
fs
add
cmp
inc
push
sahf
pop
dec
stos
xor
rcr
cmps
lds
mov
sub
mov
xor
out
fdiv
nop
jno
ss
popa
inc
in
movs
inc
scas
fisubr
jne
loopne
jne
xor
dec
ror
xor
add
inc
jnp
xchg
dec
cli
jae
jno
scas
pusha
push
and
les
fwait
sub
and
sbb
cmp
jecxz
add
outs
scas
popa
mov
loopne
lock
mov
push
popa
or
shl
icebp
push
stc
sub
jmp
fsub
dec
test
test
shl
xchg
jo
and
stc
sub
jge
out
or
loope
inc
cmp
lods
sbb
aaa
adc
repnz
aas
in
fwait
shl
fbstp
mov
cwde
fimul
fstp
ret
push
add
or
inc
and
popf
cmp
pop
cs
mov
fwait
icebp
mov
aam
pop
push
call
mov
movs
fild
out
pop
push
neg
repnz
sub
dec
mov
push
jmp
push
adc
cmp
fcom
adc
mov
fwait
or
xor
repnz
xor
jns
(bad)
jnp
mov
dec
and
push
ins
je
xor
ret
xor
mov
push
adc
aad
sahf
xchg
shl
jecxz
loop
dec
les
xor
ds
cmp
fistp
(bad)
cmp
mov
add
std
hlt
stos
xor
xor
div
mov
(bad)
adc
pop
xlat
shl
shl
sbb
mov
lahf
add
fist
cmove
repz
cwde
jb
out
xchg
pop
into
mov
daa
sub
retf
mov
mov
test
dec
aam
jmp
add
test
repz
or
retf
les
call
cld
arpl
lods
fdivr
mov
dec
xor
push
jecxz
mov
pop
aaa
imul
jmp
xchg
inc
aam
mov
add
cmp
add
jle
shl
cmp
xchg
fmul
retf
jle
cmp
jno
stc
mov
shr
cld
(bad)
frstor
imul
outs
fist
and
sub
mov
mov
out
sub
int3
jae
movs
imul
(bad)
call
test
inc
xchg
addr16
lods
dec
out
push
inc
ja
add
add
aam
jno
enter
in
sub
mov
mov
jno
nop
inc
rcr
in
fs
rcl
lahf
jbe
mov
jnp
sbb
xor
cmp
push
add
inc
retf
mov
and
dec
outs
cmp
ins
dec
pop
stc
jmp
xchg
mov
leave
clc
adc
imul
xor
mov
mov
pushf
push
sbb
and
mov
in
lock
rcr
dec
push
repz
std
push
pop
mov
lods
add
stc
mov
mov
adc
icebp
sub
push
mov
inc
xchg
imul
cli
or
sti
fcmovbe
call
daa
xor
mov
lods
sahf
mov
pop
mov
or
adc
sbb
inc
lock
push
mov
sbb
nop
mov
push
fs
pushf
add
(bad)
push
jl
or
in
cmc
inc
xor
push
and
ins
ja
mov
test
mov
pop
stos
cld
dec
add
xor
dec
xor
aas
sbb
movs
dec
imul
dec
xchg
pop
jnp
mov
mov
dec
loop
cwde
pushf
sub
pop
mov
je
fdivr
lahf
adc
mov
and
xchg
mov
out
cmps
or
or
dec
dec
and
sub
lds
mov
mov
pop
xor
repz
fmul
int3
push
and
pop
mov
sub
popa
jb
aad
sbb
popf
popf
and
xchg
in
dec
jnp
mov
or
loopne
(bad)
sbb
test
mov
or
jnp
lahf
lods
mov
shl
push
jp
push
stc
mov
mov
and
jns
in
fs
icebp
xchg
js
pop
enter
jmp
sub
test
push
adc
adc
lahf
inc
add
jmp
lods
jl
scas
rcl
call
add
les
xor
jmp
mov
cmp
xchg
jae
sbb
push
inc
jmp
or
push
loope
jo
popa
mov
loope
icebp
shl
adc
push
shl
push
js
sbb
cwde
mov
imul
popa
mov
imul
inc
in
pop
mov
jl
add
sti
sbb
(bad)
iret
adc
sub
movs
add
add
addr16
or
aam
sbb
sub
add
or
push
fiadd
sub
lods
mov
lea
xor
arpl
add
aaa
stos
daa
sar
fisub
ret
cmps
mov
int3
mov
fcmovnu
(bad)
enter
xor
aas
out
mov
inc
aaa
es
shl
mov
(bad)
test
repz
pop
sbb
mov
(bad)
xor
cdq
lock
test
int
dec
mov
xor
in
mov
in
adc
clc
xor
inc
cwde
pop
mov
test
int3
sub
add
pop
(bad)
js
inc
js
push
pop
xchg
test
repz
lds
frstor
mov
imul
ds
mov
push
lods
das
cmc
cmp
or
stos
mov
in
lea
pop
aam
imul
addr16
adc
dec
test
mov
sub
xchg
or
or
ret
adc
push
stos
loope
popf
out
pop
mov
bound
inc
leave
cmc
adc
cmp
xchg
sbb
mov
inc
adc
imul
cmp
push
jmp
push
fnstcw
or
mov
not
icebp
jge
aam
mov
test
inc
aam
cwde
jl
or
mov
iret
mov
mov
int
dec
retf
(bad)
addr16
push
xchg
sbb
add
jbe
test
bound
out
adc
fs
pop
inc
pop
pop
dec
jne
and
iret
fstp
adc
push
or
mov
jne
and
xchg
jns
daa
jle
cs
das
jmp
rcl
ror
adc
xchg
pusha
stos
icebp
mov
cli
cmp
cmp
outs
je
(bad)
retf
and
sbb
loope
and
mov
xchg
cmp
push
xchg
popa
mov
pop
test
leave
sub
jecxz
push
push
sar
pop
cmp
mov
xchg
cmp
outs
outs
out
jmp
mov
add
add
shr
mov
push
dec
dec
inc
jbe
mov
imul
xchg
xchg
stc
add
ror
js
icebp
push
adc
mul
xchg
inc
int3
(bad)
add
mov
jg
test
xor
adc
test
xchg
adc
xchg
jae
mov
or
xor
fxch
test
(bad)
rcl
mov
shl
push
add
arpl
icebp
stos
ja
imul
jns
stos
mov
xchg
mov
jbe
xor
aas
jno
adc
ins
mov
and
bnd
std
scas
sub
pop
scas
mov
movs
cdq
ficomp
icebp
sub
not
xchg
jecxz
icebp
xchg
inc
test
test
push
mov
movs
call
adc
ror
xor
push
loop
xor
inc
inc
dec
xor
scas
pop
sbb
sar
leave
sahf
dec
fsub
arpl
fst
adc
xchg
leave
fsubrp
push
sub
test
cmps
mov
mov
or
es
std
ins
out
inc
cmc
add
inc
push
int3
rcl
cs
add
test
sub
inc
or
adc
lahf
jo
pop
sub
add
int
mov
test
jl
pop
xchg
fmulp
mov
pop
xor
scas
(bad)
dec
mov
icebp
pop
cmp
and
and
sub
mov
inc
jnp
push
dec
mov
adc
int3
cmp
pop
jmp
push
xchg
dec
test
add
push
cmc
ret
pop
inc
int3
and
mov
jne
dec
jo
addr16
inc
out
gs
dec
pop
xchg
xor
xchg
xor
imul
in
push
xchg
push
std
inc
test
cli
cmc
div
mov
cmp
(bad)
mov
pop
sbb
or
popf
or
pop
cmp
dec
out
inc
or
les
inc
hlt
push
outs
lea
xchg
mov
dec
cwde
dec
cmp
aad
or
inc
and
cmc
jmp
push
clc
ins
ficomp
fidivr
sbb
test
out
mov
pop
or
mov
je
cmp
jno
hlt
cmp
cmp
mov
xchg
pusha
pop
jl
xchg
mov
dec
sar
bound
shr
repnz
into
iret
stos
lock
into
into
mov
adc
inc
jb
mov
(bad)
retf
pop
int3
fimul
loope
cmp
add
mov
lods
mov
or
jmp
jp
push
repz
in
leave
jmp
cmp
retf
adc
pop
shl
std
adc
jle
lock
dec
bswap
dec
inc
mov
or
or
jne
or
fdiv
pushf
ret
pop
sub
jg
test
shl
mov
inc
or
and
addr16
inc
add
sar
mov
hlt
lahf
das
xor
xchg
sahf
(bad)
dec
mov
jle
pop
in
les
jae
clc
xchg
repz
and
fsubr
xor
(bad)
jmp
ror
shl
add
sti
fsubr
and
icebp
frstor
nop
movs
fbld
hlt
out
stc
push
shr
ret
pop
jnp
xchg
xor
mov
xchg
shl
fwait
outs
inc
stc
jmp
out
test
inc
fld
mov
adc
loopne
lods
sub
leave
out
mov
pushf
jecxz
or
seta
jne
ret
mov
dec
pop
retf
mov
xchg
add
mov
sar
stos
mov
leave
cmp
pop
sub
xchg
inc
pop
fnsave
jl
push
test
cmp
fist
xchg
add
enter
ins
mov
(bad)
jns
jb
repz
cwde
push
aam
dec
dec
xor
test
jg
cli
test
and
movs
add
push
push
inc
xor
mov
jle
xchg
dec
inc
jb
cmp
ror
pop
lock
test
lock
or
sbb
dec
lea
pop
mov
mov
loop
fldenv
gs
and
inc
xchg
cmp
xor
pushf
jb
hlt
adc
xlat
fisttp
dec
aaa
bnd
xchg
outs
add
xchg
push
jnp
sbb
clc
add
pop
gs
es
pop
inc
scas
fwait
cmp
pop
test
div
inc
add
loopne
test
or
aaa
(bad)
sbb
in
pushf
test
inc
dec
imul
or
pop
mov
inc
ret
sbb
push
popf
add
je
shr
adc
or
ins
or
sti
or
xor
test
ja
nop
push
into
in
lea
mov
shr
xor
dec
hlt
pop
test
sub
dec
push
add
push
jns
mov
push
push
mov
push
jns
push
ror
bound
fld
jae
mov
mov
pop
sbb
mov
movs
mov
cdq
test
xor
inc
pop
ja
lock
mov
aad
pop
pop
push
ins
test
or
les
xchg
or
(bad)
and
in
jg
cmp
mov
adc
shr
pop
loop
mov
retf
(bad)
push
hlt
pusha
or
sbb
sub
mov
frstpm(287
jmp
or
and
movs
pusha
not
in
sub
mov
retf
push
shl
pop
addr16
inc
loop
scas
mov
imul
or
out
cmp
inc
push
xor
fldenv
js
sbb
icebp
jle
(bad)
clc
mov
clc
rol
lock
pop
arpl
mov
dec
dec
jmp
pop
jge
sbb
adc
sbb
add
or
pop
pop
fldenv
jle
push
jns
shl
movs
adc
stos
dec
lods
aas
mov
lods
dec
movs
inc
stc
in
lock
stos
es
pop
mov
call
cdq
imul
nop
adc
in
mov
loope
fidivr
fidivr
sbb
popa
jbe
clc
(bad)
into
enter
rcr
addr16
pop
mov
push
(bad)
or
dec
adc
and
push
jl
push
xor
ja
jmp
mov
jbe
push
or
sbb
fwait
push
or
mov
fs
jmp
loope
lock
test
xchg
pop
jge
rcl
shl
loope
mov
mov
or
data16
pop
in
mov
mov
loop
pop
fnstenv
and
bound
jnp
or
pushf
jb
add
stos
push
push
add
sete
test
imul
pusha
adc
fidiv
sbb
cli
mov
cmp
dec
jl
mov
sti
cdq
mov
pushf
bswap
ror
popa
dec
test
and
mov
inc
fst
daa
push
cdq
inc
movs
mov
sbb
dec
xchg
ffreep
mov
mov
(bad)
jl
jecxz
in
gs
jns
outs
jg
jnp
mov
jae
(bad)
adc
popa
push
mov
or
aam
inc
and
push
cmp
mov
imul
loopne
dec
dec
dec
das
adc
in
rcr
(bad)
in
cmps
sbb
cmc
(bad)
sub
and
arpl
mov
popa
dec
js
jg
cld
push
cmp
out
mov
sahf
sbb
mov
out
xor
pop
sti
cmps
mov
and
adc
or
fsub
sub
in
cmp
pusha
inc
jge
in
adc
sub
ret
adc
ja
and
add
repnz
inc
cmp
adc
adc
add
inc
push
ror
push
in
mov
stos
mov
add
pop
inc
dec
jnp
mov
idiv
iret
repnz
aas
mov
mov
loopne
out
add
retf
xchg
loop
rcl
push
mov
data16
mov
pause
sbb
mov
icebp
cmp
or
mov
mov
cli
push
cli
and
push
dec
dec
movs
mov
cmp
jmp
movs
cwde
pop
pop
mov
repnz
cdq
or
mov
jae
jge
and
jne
lods
jmp
stos
cmp
jecxz
jnp
jbe
push
add
push
sub
imul
icebp
repz
std
xchg
mov
xor
push
mov
icebp
pop
enter
into
imul
inc
fst
push
push
(bad)
mul
addr16
xor
add
add
inc
push
mov
xor
mov
cmps
inc
std
test
pop
push
imul
les
add
test
inc
ins
cwde
nop
repnz
scas
add
cmc
jno
jge
mov
pop
add
pop
jge
inc
push
call
cmp
cs
lea
inc
cli
(bad)
fisttp
cwde
xor
jmp
mov
lahf
jg
lds
lods
in
pop
test
sbb
dec
jmp
xchg
fs
fsub
lods
(bad)
cmp
xchg
xor
and
cmc
mov
jg
xor
cmps
xchg
out
and
inc
scas
mov
mov
add
jne
xchg
mov
jno
inc
or
and
hlt
mov
pop
and
mov
test
loope
loopne
loopne
push
sti
je
push
sub
ins
push
xchg
arpl
sub
and
sub
jno
push
dec
cmp
and
loope
ja
das
jle
(bad)
popf
imul
jmp
pop
(bad)
jl
iret
sbb
jge
add
mov
test
repnz
dec
push
xor
xor
pop
adc
in
lahf
push
mov
leave
pushf
rcl
aas
int3
cmc
arpl
fdiv
or
mov
(bad)
pushf
inc
pop
repnz
adc
mov
jno
bound
lods
jnp
fadd
popf
xor
cmps
(bad)
pop
jno
repnz
out
xor
xor
push
add
jb
into
call
xchg
push
jnp
cmp
cmp
add
mul
or
mov
cli
js
xchg
arpl
and
jecxz
and
xlat
arpl
inc
imul
jnp
(bad)
fdiv
mov
push
out
push
sbb
iret
cmovno
leave
cld
aam
mov
rcr
push
mov
push
shl
cdq
inc
lea
scas
imul
jno
inc
mov
ror
jno
pusha
or
push
pusha
mov
loopne
jo
pusha
mov
jecxz
repz
arpl
jb
addr16
aad
or
not
imul
je
push
push
jnp
ins
add
push
gs
pop
loope
jno
arpl
jae
out
cmc
pop
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
idiv
fisubr
nop
push
loope
icebp
test
jo
loope
jo
push
push
push
popa
mov
fsubp
or
popa
or
shl
icebp
shl
icebp
shl
mov
popa
or
push
popa
add
icebp
shl
jno
popa
mov
shl
icebp
shl
icebp
shl
jo
popa
push
mov
imul
stc
shl
cdq
sahf
jmp
inc
sbb
into
sub
inc
bound
mov
add
rcr
aas
dec
scas
repz
adc
push
cld
push
adc
outs
push
sahf
ret
fisub
lods
pusha
cmp
push
stos
mov
or
es
mov
push
xchg
xchg
mov
add
push
sub
xchg
bound
mov
xor
stc
or
jp
sub
lds
sbb
ret
aam
(bad)
loopne
adc
sbb
lods
pop
mov
cmp
in
cmc
xchg
in
popf
and
dec
loopne
pop
xchg
pop
add
jg
rcl
inc
shl
stos
mov
mov
add
test
fsubr
(bad)
fidiv
out
in
sar
cwde
cwde
ds
outs
sub
mov
arpl
dec
hlt
jge
push
sub
enter
addr16
xor
sbb
scas
data16
shl
adc
(bad)
push
inc
(bad)
jno
fwait
test
outs
xchg
lahf
adc
in
mov
mov
out
push
jge
dec
xor
xchg
push
cmp
(bad)
push
and
dec
pop
or
cmps
movs
js
rcl
jmp
fisub
jle
(bad)
(bad)
xchg
sbb
fnop
jge
pop
xchg
ret
cs
pop
int3
push
inc
dec
retf
mov
mov
imul
clc
or
and
sub
movs
sbb
sub
aam
fwait
adc
cmp
dec
push
mov
and
pusha
jnp
jl
sub
out
ss
jle
out
leave
loop
mov
pop
bound
mov
push
cld
and
mov
mov
fwait
test
test
sbb
in
mov
in
sbb
jae
pop
push
stos
aas
push
jbe
jmp
out
lds
ficom
rcr
loopne
push
(bad)
repnz
xchg
and
sbb
mov
mov
xchg
xor
fidivr
aam
jp
sar
jp
fimul
jle
inc
fstp
mov
mov
push
xchg
leave
mov
push
jmp
aas
jmp
add
push
push
inc
pop
ss
add
nop
jmp
js
mov
enter
mov
mov
div
rol
(bad)
mov
mov
mov
hlt
dec
mov
dec
push
movs
loop
push
and
dec
inc
leave
lods
ror
out
int3
div
pushf
(bad)
fbld
bswap
es
dec
je
gs
retf
jo
xchg
push
test
jno
cmc
fsub
mov
ror
shl
rol
mov
popa
or
fsub
lock
jno
popa
or
shl
mov
shl
icebp
push
push
cwde
jns
imul
push
stc
nop
jecxz
inc
test
mov
pushf
addr16
jbe
aad
xor
inc
xor
sub
mov
mul
shr
jge
xchg
add
in
xchg
(bad)
mov
fs
repnz
loopne
ret
je
mov
mov
aaa
call
push
xchg
(bad)
add
les
xchg
je
mov
mov
push
popa
loop
dec
push
cmps
and
inc
jecxz
loop
xor
popa
ficom
scas
cmp
movs
jbe
sbb
das
pushf
add
pop
adc
add
adc
loopne
mov
or
(bad)
(bad)
jb
loope
and
stc
adc
(bad)
js
mov
mov
(bad)
cmp
inc
jb
inc
mov
loop
les
cmp
shr
jle
cmc
out
(bad)
lds
inc
push
push
and
push
xor
sub
add
scas
mov
lods
sbb
jg
and
sti
lahf
aam
leave
push
movs
addr16
or
jnp
cs
iret
mov
pusha
mov
bound
je
test
inc
inc
mov
mov
mov
and
(bad)
and
pop
jge
sbb
iret
jne
or
lods
(bad)
pop
jbe
cld
jle
shl
loope
call
dec
out
iret
scas
mov
mov
mov
adc
(bad)
mov
data16
sub
and
nop
jge
lock
addr16
add
adc
mov
retf
outs
mov
or
in
es
mov
mov
sbb
dec
push
cmovno
retf
outs
adc
outs
jle
dec
ret
outs
popf
rcl
sbb
cmps
call
fist
fsubr
inc
mov
retf
sbb
not
test
sub
(bad)
cmp
(bad)
outs
dec
add
jno
mov
int3
lds
outs
sbb
inc
fcmovnb
dec
jle
dec
int3
or
and
shl
popf
cmp
dec
pusha
fcom
outs
add
xchg
jae
jle
push
jp
jb
push
repz
push
xchg
int
adc
xchg
push
dec
out
mov
mov
test
dec
and
xchg
pop
xor
and
repz
dec
fsubr
mov
ins
push
fisttp
lods
mov
popf
ds
stc
cmp
ror
(bad)
fistp
xlat
sub
mov
call
mov
pop
aad
pop
or
pop
test
out
xchg
out
aad
jmp
popa
xor
pop
fcmovne
and
bound
push
lods
imul
out
push
and
inc
jmp
mov
jp
icebp
(bad)
pop
das
in
push
sub
sbb
aam
xchg
and
pop
pop
sbb
(bad)
test
clc
(bad)
(bad)
retf
shl
mov
xchg
fidiv
push
jno
stos
pop
pop
(bad)
in
pop
mov
nop
bnd
mov
mov
jmp
mov
xor
push
idiv
xor
dec
nop
add
xor
cs
fdivp
aas
pop
add
outs
scas
nop
push
retf
shl
inc
push
sbb
ficom
cmp
cli
and
iret
sbb
jbe
xor
lods
xor
std
push
pop
and
mov
cmp
dec
mov
or
call
xor
aad
pop
sbb
cmp
push
jmp
loopne
jo
pusha
or
shl
lock
mov
shl
xor
icebp
nop
clc
push
inc
cmp
cdq
loope
dec
test
enter
push
dec
jno
test
push
pusha
sbb
cdq
js
sti
mov
dec
jne
loope
push
jge
js
ja
lock
shr
xor
mov
push
es
sub
aam
(bad)
cmc
xchg
mov
imul
dec
pop
inc
adc
ins
leave
cmp
xor
lds
xor
cwde
and
out
dec
jno
inc
shr
inc
cmc
and
call
xor
push
mov
sar
fsubr
or
imul
pushf
in
popf
jle
int3
mov
shl
nop
xchg
mov
nop
cli
push
test
(bad)
call
pop
pop
xor
and
push
dec
xchg
add
jno
ins
push
cmp
dec
sub
imul
imul
sub
sbb
jns
(bad)
gs
or
cdq
and
mov
(bad)
bound
inc
fwait
or
push
or
int3
imul
repz
jo
cmp
dec
jns
or
out
nop
adc
cs
(bad)
enter
xor
enter
jmp
fsub
lock
and
inc
movs
inc
movs
shr
stc
push
jg
pop
mov
dec
call
loopne
or
adc
sbb
cmp
pusha
stc
dec
rcl
jle
sbb
mov
jmp
inc
out
sub
lock
xor
clc
stos
xor
outs
bound
dec
int
xchg
shl
int
or
sbb
mov
fild
call
in
enter
scas
sbb
mov
leave
and
fcom
and
lods
mov
fwait
push
sahf
or
cmc
(bad)
iret
cdq
pop
adc
fcomp
push
jno
cs
sar
cdq
pop
mov
add
sar
pusha
lds
xchg
repz
call
(bad)
jns
add
popf
xor
dec
mov
xchg
jp
cmp
or
xor
inc
pusha
daa
jb
loope
jmp
test
xchg
stc
pop
jmp
pop
xchg
xor
stos
add
loop
pop
inc
loop
out
ficom
bound
jle
repz
aam
xchg
push
xlat
and
sbb
ret
std
test
jae
popf
adc
and
xchg
fcmovbe
cli
shl
enter
cli
dec
push
inc
shl
mov
mov
push
popa
ins
adc
pop
mov
sub
cmp
imul
pop
leave
daa
test
iret
dec
and
and
imul
sub
aaa
sub
or
aaa
ficom
add
loopne
icebp
shl
mov
loopne
jo
popa
mov
shl
or
shr
cwde
jae
arpl
imul
test
inc
ror
call
scas
loopne
jne
loope
jno
aam
sub
fdivr
loop
xlat
icebp
iret
xchg
div
cmp
xor
mov
retf
neg
mov
adc
mov
cmp
dec
out
and
jb
div
pop
xchg
mov
cld
retf
arpl
lea
out
(bad)
jp
movs
dec
inc
push
mov
inc
jae
cli
mov
sbb
adc
scas
cdq
fcomp
push
cwde
loope
xchg
mov
pop
fbld
xlat
and
les
movs
test
dec
push
(bad)
and
dec
(bad)
retf
xchg
cmp
cmp
ins
pop
ret
push
xlat
std
fs
movs
cmp
sbb
add
push
int3
inc
in
mov
fs
out
xor
mov
out
xchg
in
mov
std
adc
(bad)
retf
aaa
int3
retf
lods
cmps
xchg
cs
jp
fwait
mov
in
mov
inc
scas
adc
gs
addr16
sbb
pop
sahf
mov
das
adc
retf
mov
or
dec
(bad)
cli
push
jmp
push
mov
clc
aaa
fst
mov
dec
mov
or
test
push
cwde
mov
lahf
sub
pop
inc
ins
ret
fs
sbb
div
push
sub
dec
inc
push
jl
mov
push
xchg
cmps
xor
mov
aam
mov
ret
enter
cwde
lahf
jmp
test
xor
out
mov
fimul
mov
pop
mov
imul
lea
movs
and
ins
out
xlat
dec
imul
(bad)
in
mov
stc
ror
pusha
mov
push
cmps
fadd
out
mov
inc
outs
xlat
sub
pop
into
pop
add
sub
je
nop
sbb
mov
push
sbb
sti
inc
jmp
movs
iret
mov
mov
dec
xchg
inc
and
push
and
add
pop
pop
cs
call
aas
push
jmp
xchg
or
rcr
pop
into
(bad)
mov
mov
ja
mov
xor
pop
xchg
xchg
xchg
cmc
jecxz
les
imul
jb
arpl
js
lock
dec
je
and
cmp
push
jne
xchg
pop
nop
cwde
pop
int
cs
mov
mov
adc
cmp
sub
retf
mov
mov
lahf
sub
add
adc
ret
or
ret
(bad)
repnz
adc
mov
mov
pop
inc
pusha
ins
adc
call
fs
inc
lahf
(bad)
shl
sub
inc
stos
test
test
adc
nop
js
add
adc
mov
jb
push
sub
aaa
and
cld
cmp
adc
arpl
sbb
xchg
test
pop
mov
pop
adc
cld
cmps
xchg
push
in
test
push
and
pop
gs
outs
pop
repz
mov
mov
cmp
jbe
xchg
push
jne
xchg
outs
mov
cmps
xchg
adc
and
out
sbb
sub
mov
(bad)
mov
shl
mov
mov
test
mov
mov
enter
das
leave
addr16
repz
push
push
mov
cs
mov
aas
stos
and
cmp
pop
add
jae
frstor
or
push
(bad)
call
mov
xor
scas
scas
mov
ja
sub
jno
push
or
enter
lea
or
ds
mov
(bad)
enter
add
push
sub
lods
jmp
adc
fisttp
popa
stos
out
mov
das
inc
adc
arpl
repnz
popa
mov
shl
icebp
push
call
sub
inc
fld
pusha
jo
repz
mov
adc
mov
sub
shl
pop
pop
leave
imul
and
in
pushf
shl
pop
icebp
rcl
xchg
lock
xor
and
cmps
pusha
pop
xor
leave
jecxz
sbb
mov
sbb
das
aas
cmps
fbld
jnp
pop
mov
cmc
mov
xchg
popa
ret
dec
sti
jecxz
out
jae
call
and
mov
test
and
dec
or
jae
xchg
mov
or
daa
jbe
inc
inc
dec
push
in
std
sar
sahf
test
inc
add
(bad)
jb
test
inc
(bad)
xor
aam
imul
lds
ret
add
pushf
clc
cwde
retf
push
push
lods
sti
movs
mov
out
bound
sub
xchg
movs
aas
add
retf
mov
inc
clc
leave
daa
mov
shr
jecxz
sbb
dec
fld
scas
inc
mul
jns
cli
push
cmps
stos
imul
inc
mov
cwde
fcmovu
stos
xchg
scas
loope
and
push
xchg
fist
push
loop
shl
and
leave
mov
and
dec
sub
dec
jl
mov
gs
sub
push
inc
into
out
dec
jb
pop
cmc
pop
(bad)
(bad)
push
cmp
popf
(bad)
(bad)
ins
sti
inc
imul
push
retf
mov
sub
push
dec
sahf
sub
in
mov
push
mov
clc
(bad)
xor
push
aaa
pop
jge
xor
xchg
jo
arpl
jle
mov
mov
add
inc
cmp
ja
test
cld
cwde
test
into
fild
retf
cmp
cwde
retf
dec
out
or
clc
and
stc
sbb
enter
in
mov
cmovnp
popa
ins
aas
add
les
sbb
pushf
pushf
imul
sbb
push
jmp
fdiv
dec
xchg
outs
ins
xchg
call
xchg
or
push
cmp
loope
scas
inc
mov
sbb
jp
pop
dec
xchg
jp
cmps
mov
or
mov
movs
mov
mov
cmps
cmp
pop
push
and
mov
pop
ror
inc
adc
jle
mov
sub
int3
pop
and
xchg
(bad)
mov
arpl
outs
fldenv
dec
ret
in
idiv
ret
adc
and
outs
sub
pop
sbb
push
shl
inc
push
ss
push
out
out
inc
popf
imul
fst
ret
movs
(bad)
popf
push
popa
daa
pop
mov
lea
lods
cmp
adc
pop
into
xor
lock
repnz
mov
and
mov
mov
pop
addr16
stc
inc
test
imul
pop
mov
fidiv
adc
push
push
xor
xchg
mov
mov
dec
or
ins
test
daa
sbb
cmp
inc
mov
adc
or
daa
push
inc
cmp
dec
iret
lds
int3
fsubr
cli
bound
daa
stos
in
fs
jae
inc
ins
jbe
jle
adc
outs
pop
cmp
cmc
add
(bad)
adc
adc
call
retf
mov
xchg
test
mov
retf
or
loopne
push
(bad)
pop
idiv
mov
(bad)
push
push
jge
(bad)
mov
in
sahf
aam
test
or
mov
mov
mov
dec
cmp
hlt
das
push
in
dec
test
mov
aaa
(bad)
pusha
pop
ss
aam
push
sbb
mov
xlat
mov
shl
mov
in
jne
mov
sar
cmps
add
(bad)
push
cmp
fist
inc
xor
dec
sbb
jns
dec
or
inc
stos
adc
fist
ror
sbb
mov
cmp
(bad)
paddd
sahf
and
mov
test
mov
jl
ins
fbstp
mov
rcl
mov
xor
sub
pop
sbb
in
pop
je
push
xor
or
call
and
(bad)
retf
data16
les
and
repz
retf
cmp
(bad)
hlt
jl
fldl2t
sub
fwait
shl
int
pop
jmp
inc
add
mov
outs
jns
mov
dec
pop
ficom
sub
xor
inc
dec
nop
aad
push
and
shr
mov
dec
inc
xor
mov
cmovs
icebp
and
fmul
xchg
mov
adc
scas
cmp
dec
repnz
sub
repnz
addr16
mov
add
stc
shl
mov
jne
into
push
pop
mov
sti
fsub
pop
aaa
lahf
fldenv
xchg
inc
cmp
cmps
add
add
jp
rol
stos
stos
pop
mov
cmp
sbb
xchg
div
inc
(bad)
add
xchg
or
out
mov
out
push
retf
adc
or
(bad)
mov
pop
jg
call
xchg
(bad)
sbb
popa
jle
sbb
inc
mov
aaa
or
pop
outs
xchg
mov
adc
repnz
mov
xlat
ror
or
adc
push
test
(bad)
xor
enter
ds
dec
cmp
mov
loopne
loope
daa
dec
sbb
inc
and
push
add
mov
out
mov
push
sbb
mov
mov
push
inc
test
fild
sar
call
or
sahf
mov
fwait
xlat
sahf
fwait
ins
outs
fxch
sbb
cli
inc
(bad)
fisub
dec
xchg
iret
inc
mov
shl
xchg
pushf
dec
pop
push
aam
sbb
add
add
jmp
xor
dec
in
inc
fcomp
adc
inc
sbb
nop
pop
jg
add
push
cmp
cmp
inc
sahf
xor
std
add
push
adc
loope
leave
stos
add
xor
(bad)
jmp
(bad)
stc
div
mov
cwde
fadd
test
dec
pop
and
mov
push
mov
mov
push
mov
pop
add
(bad)
jge
cld
inc
push
sbb
sbb
in
fiadd
mov
jmp
and
(bad)
inc
fxtract
fsubr
jg
(bad)
rcl
jle
inc
sub
es
pop
scas
sbb
pop
cmp
movs
sub
call
mov
jb
in
out
ret
mov
mov
sahf
jae
jns
aaa
xor
int
(bad)
and
sbb
jnp
xor
icebp
fiadd
rcl
mov
ret
popf
and
cdq
sub
repz
jmp
push
pushf
and
cmp
pop
sub
enter
adc
pushf
lods
int3
hlt
pop
lea
pop
and
(bad)
inc
movs
pop
mov
test
dec
(bad)
int
xor
adc
xchg
fs
mov
xchg
fdivp
dec
mov
stos
iret
repnz
hlt
in
or
inc
pop
push
and
gs
test
sbb
(bad)
xor
mul
inc
fsubr
shld
mov
fdiv
mov
cs
xchg
adc
es
inc
inc
lods
or
sbb
pop
lds
inc
push
cmp
mov
fucomp
fwait
loope
cmps
mov
jmp
in
call
mov
xchg
mov
fistp
cmp
inc
push
enter
and
xchg
into
stos
add
call
cmp
lock
ins
ins
rcl
mov
pop
and
int3
lds
inc
xchg
lods
xchg
loopne
push
lods
(bad)
adc
xchg
cld
mov
sub
or
and
das
fisttp
add
dec
sar
pop
mov
mov
mov
daa
inc
in
aam
mov
rol
and
push
push
int
or
shl
fbld
test
jne
cmp
xlat
xchg
jb
rcr
adc
fnstsw
inc
xor
pop
adc
sar
loope
sub
test
aam
sbb
jmp
dec
push
mov
inc
repz
add
retf
mov
aam
iret
test
jg
jbe
xchg
(bad)
push
mul
daa
sub
imul
cdq
(bad)
stos
cli
into
mov
aaa
push
and
out
sahf
mov
xchg
and
and
sbb
mov
popf
(bad)
repz
inc
xchg
pop
cmc
outs
lds
mov
icebp
stos
scas
iret
hlt
mov
adc
or
(bad)
ja
mov
and
nop
cli
add
pop
out
mov
jmp
push
sbb
jecxz
jno
loopne
lock
jno
loope
icebp
shl
adc
push
shl
push
js
push
xor
add
sbb
or
push
scas
popa
mov
jno
jno
scas
mov
dec
xchg
jge
fs
sub
sub
aaa
add
pop
shl
mov
ret
and
es
fidivr
xor
add
hlt
call
xor
inc
add
mov
mov
push
pop
in
adc
and
push
fwait
sbb
pop
repnz
ret
lds
and
leave
imul
pop
daa
blsic
xchg
movs
dec
movs
rcr
aam
cmps
call
test
push
out
jmp
rcr
push
in
mov
cmc
adc
out
fdiv
mov
sub
jno
std
adc
or
push
sub
push
add
add
stos
call
xchg
enter
stos
in
mov
shl
std
push
call
das
jg
lock
mov
jno
imul
and
or
mov
xchg
popa
aas
adc
cmovle
cmp
in
mov
clc
sbb
into
mov
lods
jmp
dec
or
in
lea
and
and
inc
sbb
xor
mov
std
daa
dec
imul
pop
lods
mov
xchg
imul
arpl
xrelease
jb
mov
outs
push
aam
(bad)
ret
mov
and
push
sbb
jecxz
add
and
adc
dec
scas
jmp
sbb
dec
lods
ret
out
popf
pop
pop
inc
outs
cmp
cli
sub
loope
scas
shr
xchg
imul
mov
adc
out
leave
push
loope
cmps
sbb
push
fwait
ins
inc
(bad)
xchg
jbe
aad
push
pop
push
xchg
cmc
sub
retf
mov
in
push
xchg
inc
(bad)
sahf
jbe
jmp
jnp
fimul
sub
popf
ret
and
inc
or
add
sub
fadd
xchg
addr16
pusha
(bad)
repnz
lock
icebp
cmp
sar
pop
inc
out
xor
and
in
popf
fisttp
sub
ds
pop
retf
(bad)
dec
in
retf
xor
mov
adc
cmc
in
and
(bad)
in
das
cmp
pop
stos
adc
mov
cwde
add
mov
jno
jns
(bad)
nop
adc
outs
cli
jmp
je
aad
daa
retf
sub
dec
mov
cs
dec
jle
movs
lods
push
mov
xor
ret
sbb
cmp
and
js
imul
pop
test
call
pop
jmp
cmp
sub
pop
enter
xlat
out
mov
rcr
xchg
js
(bad)
mov
jne
mov
jne
(bad)
rol
cmp
xor
adc
data16
xchg
xor
dec
pusha
dec
sub
jbe
pop
aad
(bad)
xor
out
xor
das
out
loope
mov
jp
fdiv
mov
sbb
jge
fsub
neg
and
movs
mov
mov
in
mov
mov
pop
pop
test
outs
retf
mov
call
loop
fwait
aaa
stc
mov
xchg
fdiv
push
test
mov
sub
fstp
mov
xchg
push
push
dec
xchg
push
stc
pusha
vphadduwd
sti
mov
pushf
cmp
mov
or
mov
scas
loopne
or
jle
in
and
jmp
iret
add
repz
mov
fild
jge
push
nop
les
int
sub
cmp
add
sub
pop
(bad)
out
fwait
cmp
mov
inc
lods
xor
imul
into
lods
sub
scas
xlat
loope
jns
push
sub
cdq
mov
out
je
mov
fmul
add
mov
in
es
stc
inc
cmp
out
les
test
bound
icebp
in
jnp
jge
shl
jbe
out
add
int3
hlt
mov
sbb
dec
div
mov
mov
or
retf
shl
test
and
jb
scas
jae
ds
xor
sbb
in
imul
cmp
mov
jbe
sbb
lods
pop
adc
adc
inc
xlat
inc
aaa
into
pop
int
sti
cmp
adc
cwde
call
cld
or
mov
lea
push
mov
lahf
lock
push
pusha
outs
int
lods
jg
enter
xchg
cwde
pop
sbb
or
nop
mov
jg
es
in
xchg
in
sub
jnp
add
lds
cmp
aad
int
ds
mov
or
sbb
scas
repz
idiv
repz
cmp
or
(bad)
test
mov
jmp
out
clc
pop
pmulhuw
js
sahf
adc
xor
jb
lods
les
(bad)
ds
xchg
ss
(bad)
gs
mov
stc
add
xchg
dec
xchg
xchg
add
sti
or
adc
lahf
add
mov
push
ret
or
retf
dec
repz
pop
jge
sti
dec
and
mov
xchg
idiv
outs
adc
xchg
shl
fdiv
add
pushf
(bad)
ret
add
mov
mov
mov
fistp
push
pop
nop
scas
mov
lock
gs
(bad)
xor
sbb
xor
out
cmp
data16
aaa
xchg
(bad)
mul
icebp
cmp
jne
lods
loope
mov
mov
xor
imul
push
and
dec
fdiv
sbb
aam
sbb
mov
shr
int
fldcw
jl
dec
dec
sbb
adc
cmps
in
jecxz
mov
xchg
(bad)
gs
ret
ret
push
jnp
sub
push
loop
mov
jno
mov
add
cs
cmp
cli
pop
and
pop
arpl
or
pop
add
(bad)
jecxz
push
sbb
cli
xchg
and
mov
hlt
hlt
or
mov
mov
fsub
shl
shl
pop
lds
popf
cdq
clc
jge
imul
int
mov
add
jmp
jmp
pop
sbb
xor
or
push
lahf
xchg
ins
xor
jnp
push
and
ss
mov
dec
stos
cmp
inc
ror
sbb
rcl
push
retf
pop
inc
bound
mov
jbe
mov
dec
fld
lahf
sti
lea
lea
adc
call
clc
aad
add
or
rol
xchg
in
out
stos
sbb
aad
and
shl
popa
sahf
rcr
push
jnp
leave
adc
cli
in
test
into
scas
jb
or
daa
(bad)
int
and
inc
in
sub
or
or
cmp
popa
mov
pusha
mov
push
imul
jno
(bad)
fisttp
or
gs
adc
dec
bnd
fisttp
mov
or
dec
(bad)
(bad)
xor
pop
retf
sbb
jo
hlt
inc
test
adc
jl
cli
scas
out
inc
pop
mov
push
adc
ret
cld
mov
cmp
pop
push
in
lea
neg
jno
jmp
mov
shl
div
push
repz
pusha
mov
shl
jo
popa
mov
shr
sbb
push
dec
add
fld
inc
rcl
or
or
jmp
les
popa
xchg
popf
leave
xor
xor
xor
loop
aad
movs
das
mov
pop
cmp
xor
pop
xor
inc
imul
aad
xor
inc
ins
sub
out
mov
jae
call
leave
add
or
mov
and
mov
xchg
mov
mov
loop
cmp
fs
and
cmp
inc
cmp
call
cmp
loopne
push
pusha
repz
imul
add
std
jne
dec
stos
push
mov
mov
pop
ficom
(bad)
aam
pop
mov
iret
imul
fld
adc
inc
ja
ds
jmp
jo
addr16
mov
xor
add
jle
fdiv
and
mov
or
ret
cli
xchg
xor
daa
mov
popf
enter
mov
xchg
mov
in
mov
sub
test
test
dec
jmp
push
xor
into
pop
out
sub
cmp
in
push
mov
push
lods
cli
dec
paddsb
shl
f2xm1
lods
retf
pushf
dec
and
push
jmp
dec
fidiv
test
fsubr
cs
mov
mov
cmp
mov
jmp
mov
jmp
mov
gs
pushf
in
add
adc
fwait
dec
or
outs
cwde
pop
sbb
sub
ss
test
test
shl
push
add
lods
lock
into
out
xchg
adc
and
pop
push
das
imul
jge
or
cmps
in
addr16
dec
mov
jns
jb
ret
fisttp
pop
icebp
loop
fcmovu
adc
sbb
adc
mov
jnp
jmp
stos
not
push
stc
dec
sar
ror
or
sar
pop
nop
imul
push
dec
sbb
test
mov
(bad)
xor
xchg
jo
dec
repnz
(bad)
icebp
push
push
adc
dec
icebp
(bad)
outs
pop
loopne
imul
push
jns
adc
mov
call
div
sar
std
adc
jae
mov
jge
push
pop
inc
loope
mov
pusha
mov
loopne
icebp
push
popa
mov
shl
xor
and
jmp
sbb
or
sub
cdq
not
in
pushf
shl
xchg
jo
out
jns
std
add
bound
jl
cld
push
lods
mov
push
aas
loopne
push
(bad)
hlt
push
mov
mov
ret
addr16
sbb
push
xchg
sbb
xor
shl
xor
adc
jb
inc
add
cmp
rol
mov
mov
xor
push
push
out
lock
mov
outs
sbb
ret
pop
sub
ret
or
pushf
js
sub
fidivr
mov
mov
inc
in
les
cmc
and
xchg
(bad)
aaa
sbb
mov
push
pop
sub
shl
mov
ja
fs
movs
push
push
in
xlat
or
or
mov
call
sbb
dec
fs
loopne
ins
test
dec
and
ja
jecxz
enter
mov
test
jle
dec
jecxz
cld
jb
(bad)
push
idiv
and
jae
add
add
mov
xchg
mov
or
iret
add
out
xor
or
stc
adc
jbe
ins
out
xchg
(bad)
adc
cmp
mov
shr
out
mov
pop
scas
ds
movs
lea
push
sub
mov
cmp
jecxz
call
ds
js
pop
xor
cli
ja
mov
jnp
xchg
cmova
jmp
jmp
stos
rep
push
or
jne
push
aam
aaa
fwait
nop
mov
inc
les
jmp
sbb
mov
sbb
push
clc
mov
mov
mov
pop
dec
jnp
push
mov
imul
(bad)
push
out
cmp
mov
pushf
add
fcomp
pop
mov
clc
sbb
push
inc
fcomp
mov
call
or
mov
and
push
jnp
pop
jno
clc
jae
push
xchg
xchg
sbb
pop
jecxz
call
fcmovne
and
imul
dec
jmp
push
pop
mov
fcom
mov
adc
(bad)
out
sbb
mov
inc
cmp
out
xor
in
pushf
popa
dec
dec
ret
fcom
scas
and
or
bound
pop
es
sbb
cmp
(bad)
loopne
jg
jmp
sahf
mov
test
rol
mov
les
in
int3
sbb
hlt
or
ins
in
loopne
stc
pop
adc
sbb
add
push
inc
or
dec
adc
in
jnp
or
lea
jae
xchg
sbb
jbe
sbb
cmp
jg
out
jb
(bad)
call
push
cmp
fstp
sahf
repnz
(bad)
dec
lahf
imul
dec
lods
xchg
stos
mov
scas
test
pop
jno
xchg
pop
out
jns
adc
adc
je
xor
popa
cmp
(bad)
sbb
leave
mov
lds
mov
mov
xor
xlat
xor
loope
mov
pusha
mov
shl
or
push
popa
or
shr
jno
shl
dec
mov
call
popa
mov
popa
mov
jmp
inc
push
sti
ins
ins
sbb
jmp
fdiv
dec
pop
cmp
pop
(bad)
adc
mov
mov
xchg
mov
rcl
mul
retf
pusha
push
pop
jmp
clc
xchg
add
sbb
ins
stc
inc
(bad)
xlat
or
test
daa
jne
enter
int3
cwde
pop
xor
shld
fwait
dec
lods
ins
push
mov
fwait
clc
out
movs
cmp
loope
cmp
std
aas
and
loopne
and
xchg
sub
pusha
fucomp
push
stos
push
cmp
mov
pop
xchg
ret
cli
xchg
dec
push
outs
cli
test
ja
clc
outs
inc
popf
mov
in
xchg
xchg
sbb
sub
test
aas
mov
inc
jge
dec
fwait
enter
cli
out
push
add
jl
add
popf
ss
mov
fidiv
sbb
icebp
pop
cmp
aas
lock
out
bound
out
gs
(bad)
lods
push
(bad)
in
inc
mov
or
fild
dec
test
ds
or
mov
out
aam
leave
xchg
adc
inc
cmp
rcr
or
iret
mov
out
lds
adc
stc
cmp
ja
fnstenv
std
sbb
push
or
push
mov
test
sbb
repz
and
movs
das
mov
ret
push
and
mov
jle
das
xchg
push
pop
lods
jle
adc
ds
or
and
hlt
cmps
and
stos
jl
aam
mov
ss
cmp
pop
or
jo
mov
sub
test
and
cmp
mov
(bad)
fnstcw
fdivr
out
mov
mov
xchg
shufps
mov
(bad)
shl
les
fmul
int
mov
inc
and
mov
push
and
push
in
ret
repnz
into
dec
test
adc
aas
sub
iret
mov
stos
shl
and
rcr
clc
pop
call
mov
sbb
push
inc
pop
inc
jns
ins
stos
or
rcr
std
les
pop
fist
pop
stos
mov
jno
loope
(bad)
repnz
ror
pop
(bad)
mov
cmp
mov
adc
push
jecxz
ins
(bad)
dec
or
pop
inc
test
jo
sbb
mov
mov
xor
fisubr
fsubr
xor
add
sbb
cmp
loopne
add
out
and
pop
aas
jmp
in
aaa
mov
pop
stos
mov
mov
mov
xchg
adc
sub
add
in
mov
loope
push
shr
ins
les
stc
fbld
mov
fs
icebp
icebp
aad
std
cmc
xchg
dec
(bad)
stos
pusha
mov
jl
push
jnp
stos
mov
and
dec
ins
push
(bad)
mov
je
mov
sbb
mov
cli
lea
fwait
push
aas
push
xchg
lods
call
pop
iret
add
push
(bad)
push
pop
inc
jne
call
aas
push
jnp
and
inc
cmp
cmps
daa
push
xchg
rcl
popa
or
dec
imul
lods
addr16
or
xchg
loope
jle
mov
and
imul
std
aam
mov
stc
pop
xor
pusha
hlt
retf
loope
pop
sbb
and
push
loop
or
cmp
clc
test
jbe
popa
mov
outs
icebp
in
daa
mov
lds
out
sub
sub
ja
mov
xor
xchg
jge
adc
in
or
and
xchg
pop
or
dec
pop
xchg
pop
cmp
aas
or
push
int3
xor
icebp
mov
jle
add
adc
stc
dec
pop
lahf
rcl
mov
scas
jnp
push
adc
scas
mov
loope
(bad)
aas
sbb
pusha
inc
frstor
add
pop
fsub
clc
adc
push
pop
jbe
bound
sub
out
scas
jecxz
add
mov
in
mov
jo
adc
outs
adc
push
xchg
mov
or
dec
ret
les
(bad)
shl
cmp
or
and
xor
xchg
fistp
xchg
push
ffreep
mov
xlat
leave
outs
sub
sbb
or
loope
or
and
xor
dec
cmc
sub
mov
aas
pop
mov
sti
je
inc
jl
dec
stos
rcl
fstp
push
mov
add
jmp
adc
push
fucomi
sub
addr16
adc
jne
sbb
test
out
aad
dec
stos
mov
jnp
lds
mov
push
jno
jns
(bad)
icebp
out
adc
sub
test
enter
or
retf
jae
sbb
add
int3
enter
adc
xchg
sub
mov
xor
gs
or
push
movs
sbb
vmovntps
cwde
pushf
xchg
stos
int
out
popa
in
int
add
cld
dec
js
scas
pushf
jl
xor
xchg
mov
hlt
aam
(bad)
arpl
jo
jno
fdivr
dec
jle
dec
ret
(bad)
pop
mov
fdivr
pusha
int
xchg
push
inc
fmul
or
and
dec
rol
jno
scas
xlat
push
pop
inc
fistp
push
mov
push
lods
loop
das
ficomp
hlt
enter
fidivr
mov
outs
mov
ins
(bad)
data16
or
test
mov
sub
xchg
in
rcl
and
add
dec
ins
inc
xchg
fwait
cld
sbb
popa
xchg
pop
or
inc
dec
cmps
mov
test
add
mov
and
mov
dec
icebp
sbb
sar
fistp
std
out
jae
jno
in
sar
and
call
sbb
cmp
leave
jnp
pop
sbb
xchg
add
dec
jnp
movs
pusha
and
sbb
addr16
mov
add
in
(bad)
mov
mov
add
jmp
xchg
(bad)
in
inc
jg
enter
add
xor
nop
gs
inc
push
mov
repz
pop
pop
out
and
aad
ror
xor
add
adc
mov
icebp
cli
mov
push
push
out
leave
mov
ins
or
dec
inc
sub
(bad)
sbb
call
test
fcmovbe
or
test
xor
lods
add
std
pop
cs
cmc
adc
sub
or
ror
addr16
sub
iret
xchg
xchg
push
imul
rol
xchg
fdivr
or
in
in
dec
push
addr16
cmp
(bad)
jp
jae
add
adc
je
out
lock
or
call
test
push
mov
mov
aas
cmps
fs
enter
imul
neg
aas
test
xchg
adc
and
movs
fisubr
dec
jmp
mov
out
pop
in
xchg
cld
xor
enter
dec
fwait
sub
aam
mov
rcl
push
xchg
sar
dec
outs
sub
or
fdivr
and
pusha
inc
loop
and
jecxz
aam
cmp
mov
add
aad
repz
mov
call
jne
shl
and
imul
push
and
aas
xor
imul
push
or
sub
or
mov
jne
mov
push
scas
xchg
or
dec
ja
shl
mov
shl
jge
inc
rcl
ss
and
aam
in
enter
imul
popa
enter
shl
fnop
jnp
dec
or
scas
aaa
stos
lea
inc
jp
fsincos
jns
(bad)
push
std
iret
dec
out
cmps
sbb
fcomi
inc
push
jmp
sub
inc
inc
mov
(bad)
(bad)
ret
mov
xchg
movs
inc
jmp
shl
dec
xlat
push
pop
xor
inc
outs
(bad)
and
je
stos
cmc
into
mov
(bad)
into
dec
jae
inc
jl
imul
(bad)
cmp
enter
fisub
mov
pop
outs
adc
loope
loope
inc
mov
enter
cwde
pop
sub
jl
mov
inc
or
jno
outs
push
retf
and
sar
into
bnd
inc
aas
xchg
addr16
cmp
jns
out
push
or
aam
cmps
inc
mov
jb
add
rcr
shl
jge
fucom
and
inc
data16
cli
add
mov
xor
out
jb
xchg
pop
cmc
cmp
icebp
ins
xor
xchg
mov
jns
sar
xchg
test
in
or
div
fld
cmp
int3
push
mov
mov
jmp
jl
(bad)
push
jnp
inc
adc
aaa
jmp
xchg
and
lods
out
mov
jp
jbe
xor
add
mov
lock
popf
mov
push
xor
mov
mov
and
fucomi
fist
xor
lea
scas
imul
jno
inc
mov
rcr
mov
fdivr
js
push
cmp
push
mov
imul
lds
xlat
js
mov
pusha
mov
push
loopne
jo
loopne
lock
in
jae
jecxz
repz
je
fs
(bad)
in
ja
add
cmp
xor
cmp
pop
push
ja
ins
cmp
fcmovb
or
in
jae
jmp
jae
imul
(bad)
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
add
push
loope
jb
jmp
ja
pop
outs
mov
push
popa
or
popa
mov
shl
icebp
shl
or
aam
mov
push
add
jno
loope
jnp
popa
mov
shl
icebp
shl
icebp
shl
mov
shl
mov
imul
repz
dec
or
lods
cmovo
test
gs
stc
push
data16
pop
js
stc
xchg
inc
fmulp
dec
xor
mov
inc
lea
dec
sub
jno
stc
adc
jne
inc
adc
aam
loope
mov
adc
xchg
or
add
push
push
rcl
push
int3
fnstenv
xchg
inc
jmp
fs
cmp
out
in
out
pushf
lods
or
sbb
int3
call
in
cmps
std
mov
stos
and
jns
stc
xchg
jmp
iret
scas
out
push
sbb
sbb
and
fld
xor
jl
jg
shl
mov
arpl
sbb
loope
add
xchg
or
jmp
outs
lea
xor
test
jbe
mov
inc
shl
adc
sbb
ror
sub
pusha
or
js
dec
(bad)
stc
adc
dec
sahf
out
mov
ins
rcr
xchg
mov
mov
dec
imul
and
ret
mov
jae
xchg
jle
cld
shl
push
out
lds
jmp
or
js
or
(bad)
fild
mov
and
xor
loop
jmp
dec
push
add
jnp
and
cmp
aaa
mov
(bad)
xor
jb
popa
mov
fsub
lock
mov
shl
icebp
shl
mov
shl
lock
push
cmp
and
or
pusha
scas
popa
mov
pusha
jnp
sar
pushf
cmp
sbb
out
lock
lods
mov
push
repz
enter
mov
fcmovnu
mov
mov
arpl
outs
sub
pushf
push
mov
jp
ret
push
xor
call
xor
mov
in
stc
xlat
jge
sub
movs
lock
lock
cli
cdq
jo
add
jp
lea
pop
loope
aaa
adc
mov
out
pop
cmp
xor
dec
mov
arpl
pop
dec
inc
ror
aaa
push
scas
out
loopne
mov
mov
inc
inc
mov
mov
ror
xor
loop
aaa
(bad)
jmp
leave
pusha
sbb
mov
push
lods
rcr
mov
fwait
add
and
xchg
jnp
popa
push
inc
iret
ss
or
jl
iret
push
test
push
or
adc
sbb
stc
push
inc
pop
mov
lds
popa
pop
mov
mov
lea
mov
or
mov
mov
js
jp
mov
adc
sbb
push
sub
add
stos
jp
pop
pop
pop
cmp
sub
mov
scas
xchg
loope
cmps
test
aaa
in
inc
shl
xchg
aaa
fdiv
xchg
add
sub
xor
sbb
adc
imul
loopne
sbb
std
jecxz
pusha
cmp
int
mov
xchg
ret
xchg
lock
shl
xor
cmps
push
mov
inc
jp
mov
sbb
(bad)
adc
out
sub
pop
mov
sbb
jae
iret
imul
xchg
arpl
push
repnz
aaa
retf
imul
cmp
xchg
jns
shl
or
sub
fwait
inc
je
mov
iret
jnp
adc
pop
adc
sbb
int
es
cmps
cmp
mov
std
pop
rol
inc
mov
inc
out
push
scas
rol
dec
or
add
and
cmp
(bad)
nop
push
cmp
jno
aaa
xor
mov
(bad)
push
dec
clc
ins
add
pusha
or
or
out
dec
mov
cmc
pop
shr
or
mov
cmp
sub
cmp
imul
stc
mov
cmp
pop
mov
jno
dec
pop
and
fld
mov
dec
jecxz
mov
ds
out
fwait
les
out
jle
cmp
sub
cdq
xor
popf
fcom
leave
popf
push
int3
std
add
imul
inc
jmp
push
jmp
das
cmp
aas
pop
sbb
fild
call
enter
movhps
or
fld
(bad)
xor
sbb
pop
aam
out
fs
lea
mov
lods
jmp
std
mov
push
xor
mov
sbb
inc
xor
and
inc
stc
mov
outs
pop
ds
aaa
mov
popa
or
popa
mov
shl
icebp
shl
icebp
rcr
in
adc
mov
push
dec
jno
loope
jnp
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
xor
popa
add
push
push
push
imul
jae
popa
mov
loope
icebp
shl
jo
call
and
imul
mov
enter
sbb
add
loopne
stc
clc
add
xchg
jns
or
shl
cmp
or
add
pusha
leave
jb
in
js
sbb
push
mov
adc
pop
retf
add
lods
sub
sti
add
aam
test
inc
xchg
jg
or
shr
sbb
mov
lods
jnp
adc
push
add
or
mov
fwait
dec
xlat
add
loope
imul
mov
xchg
sbb
cli
cs
(bad)
or
ins
psrld
pop
rcl
data16
fdiv
test
loopne
push
hlt
mov
div
out
(bad)
or
cs
add
mov
sub
add
jge
aaa
or
setnp
sbb
lods
fnsave
data16
xor
loopne
sub
sub
scas
xchg
dec
jg
pop
push
pop
jo
cmps
push
sub
sub
xor
stos
(bad)
fstp
and
push
(bad)
js
and
popa
jl
mov
or
jle
das
jmp
test
sti
ds
cmp
imul
adc
cmp
stos
out
(bad)
nop
sub
jns
inc
mov
lods
sbb
xor
jb
pop
dec
iret
push
push
jg
mov
lods
sub
mov
les
pushf
je
sbb
xchg
mov
es
cmps
sbb
scas
xor
and
pop
das
mov
and
mov
leave
jmp
gs
jne
jno
xlat
out
or
sbb
jne
cmp
arpl
cmp
cmps
pop
push
sti
ss
scas
repnz
shr
ins
push
jmp
sbb
in
jmp
test
mov
xor
mov
outs
fild
inc
ret
xchg
arpl
rol
repnz
call
mov
test
popa
inc
ds
mov
icebp
ds
scas
mov
add
popf
(bad)
or
enter
sbb
cmp
pop
int3
mov
push
adc
mov
push
ret
xchg
mov
xor
inc
or
pop
test
test
push
adc
or
aam
cwde
pop
or
fdivr
daa
jecxz
pop
leave
lods
daa
jg
push
shr
daa
pusha
sub
fild
sub
xlat
inc
pusha
aam
inc
or
xchg
dec
xchg
shl
hlt
mov
sub
imul
jo
add
in
mov
and
xor
xchg
adc
mov
push
hlt
test
sub
into
or
push
pop
push
fs
test
(bad)
clc
lock
ins
inc
movs
xchg
inc
mov
add
push
or
imul
dec
dec
dec
pop
or
xor
cld
jmp
iret
xchg
test
jle
pop
rcr
pop
or
clc
xchg
jae
cdq
dec
dec
in
mov
mov
rcl
push
xor
mov
mov
mov
sti
xchg
lds
add
aad
test
call
leave
mov
push
adc
(bad)
fcomp
pop
js
(bad)
jnp
and
jmp
jns
mov
sub
int3
inc
(bad)
pop
leave
test
push
addr16
jae
inc
xchg
pop
xor
imul
jl
and
mov
cld
sti
adc
clc
adc
mov
sti
adc
gs
jp
(bad)
mov
cmp
xchg
sub
jg
mov
dec
scas
ja
mov
mov
mov
movs
stos
lods
imul
pop
cmc
add
xor
mov
pop
js
mov
scas
mov
jbe
pop
jno
or
adc
test
pop
jmp
inc
rol
jge
add
mov
push
add
rcr
dec
push
(bad)
mov
stos
push
mov
sar
or
dec
pop
adc
sti
cmps
xlat
sub
xchg
jae
jl
dec
push
pop
jl
push
mov
lock
xchg
ficom
es
sub
inc
xchg
sub
div
xchg
cmp
stos
cld
inc
cmp
adc
pop
pop
gs
mov
add
or
xor
add
mov
shl
das
or
aaa
lea
and
push
mov
jge
cmp
cmovo
lds
mov
adc
out
mov
into
mov
stc
mov
fcmovnbe
jge
add
fucom
mov
and
xchg
jg
loope
xchg
mov
ret
inc
sahf
mov
xor
fistp
add
sub
cmp
in
jge
or
out
push
movs
or
dec
cmps
fsub
lea
into
xchg
jge
xor
add
sbb
sub
mov
in
pop
lods
mov
xor
call
clc
pop
retf
sbb
pop
arpl
mov
mov
mov
rcr
ins
addr16
fisttp
mov
and
test
into
mov
pushf
jne
and
fnstenv
add
jne
sbb
and
push
jle
js
jne
jns
rol
mov
and
scas
ror
repnz
rcl
mov
ret
jp
dec
mov
daa
gs
mov
shl
mov
xlat
lock
push
dec
xlat
sub
jg
mov
add
mov
movs
ret
dec
jmp
out
aas
cmp
xchg
stos
test
scas
cmp
stos
mov
sbb
pushf
stc
fisttp
or
mov
cmps
sti
int
dec
push
adc
pushf
push
nop
cwde
xor
fbld
inc
(bad)
stc
lock
push
sbb
or
push
lods
sbb
aad
xchg
adc
mov
xchg
mov
jecxz
inc
sub
xchg
inc
arpl
inc
dec
mov
idiv
test
cmp
xchg
test
sti
stos
jae
xchg
rcr
mov
cmp
jl
mov
pop
ins
xor
(bad)
bound
mov
aaa
aaa
and
sbb
popf
pop
jo
std
dec
and
jge
rol
inc
inc
adc
nop
push
and
sbb
call
add
scas
popa
mov
pop
pusha
or
loopne
lock
popa
or
shl
xor
stc
test
inc
shl
fstp
push
xor
icebp
pusha
xchg
test
ja
dec
in
pushf
shl
pop
icebp
push
xlat
sbb
add
sahf
stc
sahf
stos
mov
dec
sub
jge
lds
cmp
mov
ins
adc
mov
lods
jnp
cmps
popa
jnp
lds
sub
and
push
or
or
and
sbb
(bad)
jp
bound
cmp
imul
push
fdivr
or
repz
fs
adc
ffree
call
mov
ret
into
add
and
out
dec
mov
jl
mov
in
movs
fsub
rcl
rcl
sub
xor
loop
adc
jmp
ret
int
fistp
mov
mov
mov
jnp
adc
pop
xor
jne
adc
out
imul
mov
jae
pop
int3
and
dec
(bad)
rcl
enter
and
fwait
ret
or
cmp
repnz
mov
push
cwde
mov
mov
push
push
ror
push
sub
jne
push
ja
sti
add
imul
js
mov
lods
pop
jae
mov
ja
adc
(bad)
(bad)
mov
ret
gs
ja
pop
dec
adc
movs
fistp
nop
data16
icebp
imul
adc
pop
ror
sub
mov
mov
xor
sete
shr
jg
push
les
cmc
dec
pop
sub
push
nop
sub
mov
push
out
inc
inc
dec
mov
sbb
or
mov
scas
into
jl
push
jne
retf
in
in
cmps
xlat
inc
xchg
aaa
xor
std
push
mov
sbb
jae
stos
outs
lods
fisub
cmps
and
retf
jo
out
or
icebp
fisttp
mov
dec
dec
mov
addr16
mov
out
mov
xchg
sub
das
adc
add
mov
sbb
aad
ds
cli
cmps
jb
rcl
inc
mov
lods
(bad)
sbb
inc
pop
int
call
push
(bad)
mov
push
bound
jns
sbb
jecxz
sbb
hlt
lods
test
dec
sub
mov
sub
jl
movs
mov
mov
inc
rol
cwde
sub
mov
addr16
out
test
dec
inc
nop
imul
inc
pop
iret
fstp
xor
inc
and
add
cwde
imul
xchg
sti
push
mov
(bad)
imul
je
in
aas
not
loope
loopne
cmp
fdiv
mov
jp
shl
pop
sub
mov
rcl
dec
xchg
push
cli
cmp
mov
push
and
mov
inc
call
push
xor
enter
mov
cmp
jg
vcvttss2si
xchg
stos
add
xchg
push
xchg
mov
pop
out
stos
or
shl
inc
push
mov
mov
sub
and
stc
sti
mov
adc
(bad)
or
popa
in
not
xchg
popa
cmp
and
xchg
aaa
xor
aaa
mov
pop
adc
push
fdivrp
in
lds
ds
inc
add
out
sbb
lods
iret
call
leave
pop
arpl
loope
adc
pop
es
popf
sub
cmps
jno
push
push
push
je
jae
xchg
mov
popa
mov
cmp
sbb
js
mov
jecxz
je
or
loopne
and
inc
loopne
cmc
mov
push
jg
jg
repz
cmova
jecxz
in
xchg
(bad)
in
sbb
mov
jl
int3
bound
aaa
in
lea
les
shl
mov
fisub
ja
mov
push
adc
(bad)
fistp
jl
std
daa
movs
inc
int3
jns
push
mov
push
inc
outs
adc
fiadd
xor
mov
adc
(bad)
or
inc
mov
loop
in
movs
inc
outs
push
and
lea
mov
mov
mov
add
sahf
test
or
jo
add
add
sbb
add
out
and
cs
push
cmc
and
mov
or
in
ror
pop
pmaddwd
mov
popf
pop
js
pop
add
lods
push
lahf
shl
add
jmp
jmp
mov
or
rcr
dec
ds
adc
sar
scas
mov
xchg
test
adc
cmp
(bad)
xchg
add
mov
cmp
sub
xchg
cmp
sbb
sbb
and
in
inc
xor
leave
dec
dec
nop
mov
inc
cmps
loope
xchg
outs
mov
cmp
enter
mov
xchg
or
scas
jb
les
aas
cmp
inc
or
out
pushf
shl
icebp
shl
lock
stc
sbb
cmp
test
aad
gs
sub
aad
inc
mov
sbb
mov
call
mov
fldenv
jno
and
pop
arpl
mov
rol
icebp
shl
js
call
test
adc
mov
rol
loope
popa
leave
clc
shl
or
rol
loope
jno
jo
and
icebp
rol
rol
or
loope
jp
popa
mov
shl
icebp
shl
icebp
shl
icebp
push
or
dec
scas
loopne
jne
jmp
jmp
popa
or
popa
mov
shl
icebp
shl
xor
push
in
push
jle
jno
cmps
ja
sbb
xchg
push
popa
or
loopne
lock
or
push
popa
mov
shl
sbb
ror
jo
add
add
or
nop
popa
cmp
mov
add
pop
pusha
pop
mov
iret
stos
sar
pop
jae
adc
std
push
cmp
dec
outs
jg
jmp
jmp
bound
sub
icebp
or
aas
outs
and
xor
xor
and
outs
dec
(bad)
fsubrp
shl
sahf
loop
dec
shl
or
aas
jg
in
jge
bound
jb
popa
xchg
dec
scas
fisubr
fsubr
retf
adc
ins
sti
sub
out
cmp
cmps
fs
xchg
jns
xor
sub
pop
cmps
repz
aam
test
fs
js
mov
and
mov
cs
xchg
pop
dec
fdiv
adc
fcmovbe
jo
aas
in
push
dec
jae
dec
test
push
loopne
scas
test
pop
cmp
shl
and
ror
pop
daa
pop
and
mov
ror
clc
xchg
mov
add
mov
addr16
in
xchg
and
cmp
pop
jno
inc
pause
and
sbb
mov
retf
nop
js
xor
push
movs
pop
jno
scas
clc
and
dec
mov
xor
clc
ret
aam
shl
mov
xchg
mov
(bad)
stc
or
iret
and
rcr
ficomp
or
xor
je
enter
shl
pop
fidiv
push
or
jmp
dec
nop
aad
rol
clc
loop
mov
dec
ins
leave
push
aam
enter
sar
jno
jle
mov
stos
sbb
xchg
(bad)
xchg
inc
jg
jae
or
mov
mov
nop
fwait
ja
es
outs
mov
popa
cmps
ins
scas
iret
das
ja
jno
stos
pop
ins
fiadd
mov
stc
mov
int3
pop
inc
dec
xchg
mov
jae
mov
xchg
push
fnstenv
jb
jne
pushf
push
inc
jl
cmp
es
mov
rcl
fwait
sub
dec
jmp
out
shr
icebp
push
xchg
imul
int
je
push
dec
cdq
imul
pop
dec
sti
sub
adc
adc
push
bound
cs
fistp
push
jns
push
or
popa
mov
inc
(bad)
mov
sbb
ror
push
hlt
dec
outs
sub
(bad)
in
jge
sub
leave
and
fwait
test
shr
jae
daa
or
sub
sub
aam
jb
sbb
xchg
adc
movs
dec
mov
shl
mov
aas
adc
sbb
js
stc
fldenv
or
sti
or
push
inc
cmp
lock
sub
cmp
mov
rcr
icebp
and
clc
ss
push
mov
sub
test
xor
enter
ss
fist
ret
jmp
hlt
sbb
adc
dec
or
xchg
imul
out
sbb
and
or
pop
mov
popf
sub
sbb
cmp
jmp
test
or
dec
adc
or
nop
xchg
add
and
fcmovu
in
push
(bad)
neg
call
imul
xchg
sbb
pop
fmul
sbb
ret
and
dec
stos
int
lds
test
das
push
adc
push
cmps
push
or
(bad)
ja
mov
dec
push
mov
sbb
in
jle
pop
jno
mov
dec
adc
cdq
(bad)
lea
jmp
jmp
mov
arpl
lock
xor
bound
sub
retf
in
sub
cmps
inc
or
in
aaa
jp
icebp
xor
jle
movs
aad
int3
(bad)
mov
call
adc
aas
das
sub
lahf
(bad)
sti
xor
xchg
jmp
ror
int
outs
xchg
jo
cs
xor
js
xchg
out
push
ret
loopne
push
mov
xor
lods
push
pop
adc
out
mov
retf
push
inc
mov
(bad)
rcr
popf
scas
pop
dec
ss
in
mov
mov
jo
and
cli
push
call
sub
adc
xchg
fs
and
(bad)
push
fiadd
push
mov
jo
and
imul
jno
scas
mov
dec
in
rcr
aaa
inc
int
push
frstor
xchg
push
dec
rcl
mov
jb
fild
dec
int
push
div
sub
fidivr
xor
xor
adc
or
lods
popa
mov
adc
daa
(bad)
xlat
jbe
fwait
pop
push
mov
loopne
and
cwde
ins
xchg
or
out
jmp
pushf
jo
and
rcr
lods
fld
cmc
xchg
repnz
mov
and
xor
sub
inc
xlat
scas
out
push
in
cmp
cwde
sbb
push
inc
sbb
clc
int
(bad)
adc
mov
enter
push
adc
push
push
xor
outs
rcl
hlt
jbe
iret
jno
add
stos
enter
mov
loope
xor
add
add
lods
pop
adc
fisttp
push
icebp
cli
test
mov
rcr
or
stc
ss
outs
pop
fdiv
xor
push
jg
mov
push
pop
xor
mov
mov
add
mov
ins
jne
bound
xchg
shl
mov
inc
sar
ins
pop
inc
mov
mov
sbb
imul
cli
(bad)
push
nop
push
repz
adc
aam
mov
ins
aad
inc
mov
add
adc
jo
jecxz
push
add
rcl
int
xchg
xlat
and
pop
or
movs
push
mov
imul
inc
popf
cmpxchg
jbe
aad
aam
and
cmps
sbb
sbb
ret
dec
adc
sbb
jp
pop
add
sub
aaa
jecxz
(bad)
mov
scas
jbe
(bad)
adc
dec
sub
xchg
xchg
ins
mov
sti
mov
inc
xor
popa
push
xor
comiss
jne
jne
test
rol
in
(bad)
jmp
mov
push
fucomi
or
xlat
cdq
pushf
lods
xor
inc
and
xchg
jo
mov
dec
test
jge
data16
in
dec
inc
dec
cdq
cwde
mov
nop
jo
aam
pop
enter
dec
xchg
bound
xchg
xor
or
les
lahf
cmp
push
inc
js
xlat
sub
and
dec
in
pop
mov
push
call
clc
cld
into
iret
adc
cmp
inc
inc
in
adc
stos
ja
and
retf
push
xchg
sub
test
(bad)
and
mov
data16
test
test
mov
pop
jne
(bad)
fmul
mov
in
cmp
xor
mov
fucomp
add
xor
inc
sahf
jbe
push
push
inc
mov
fs
cmp
add
jae
mov
popa
lods
icebp
hlt
sahf
in
push
loope
jno
pusha
mov
push
loopne
jo
loopne
lock
in
jae
jecxz
repz
je
fs
(bad)
in
ja
add
cmp
xor
cmp
pop
push
ja
ins
cmp
fcmovb
or
in
jae
jmp
jae
imul
(bad)
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
add
shl
sbb
mov
push
loope
jo
push
xchg
shl
jno
popa
mov
shl
icebp
shl
icebp
shl
div
jmp
push
popa
mov
shl
icebp
shl
icebp
shl
jno
popa
push
mov
imul
mov
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
cmps
icebp
push
push
ins
fstp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
rcr
and
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
retf
das
jbe
and
mov
and
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
sar
push
mov
loopne
icebp
shl
icebp
shl
icebp
shl
xor
or
push
in
pusha
loope
icebp
push
arpl
jnp
rol
add
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
rol
inc
popf
sti
pushf
inc
popf
add
push
inc
fsub
adc
or
sub
lods
sub
loop
push
mov
popa
mov
addr16
(bad)
cmp
push
mov
sbb
add
test
(bad)
cli
jl
hlt
icebp
in
mov
push
loope
sbb
push
test
and
cld
push
mov
out
lods
sub
loop
push
mov
popa
mov
addr16
(bad)
cmp
push
mov
sbb
add
test
(bad)
cli
jl
hlt
icebp
in
mov
push
loope
sbb
push
test
and
cld
push
mov
out
lods
sub
loop
push
mov
popa
mov
addr16
(bad)
cmp
aaa
ror
out
ja
and
adc
popa
mov
popa
mov
shl
icebp
shr
icebp
shl
sbb
push
in
pusha
loope
icebp
push
dec
jno
cwde
loopne
jl
dec
repz
cli
aam
test
rcl
adc
imul
xor
push
hlt
adc
out
pop
leave
sub
shl
xor
jno
stc
(bad)
mov
dec
repz
cli
aam
test
rcl
adc
imul
xor
push
hlt
adc
out
pop
leave
sub
shl
xor
jno
stc
(bad)
mov
dec
repz
cli
aam
test
rcl
adc
cwde
lock
pop
push
sub
sti
test
add
mov
retf
shr
hlt
cld
mov
cmp
aad
rcl
xchg
fs
cmc
sub
sub
inc
or
(bad)
mov
sti
or
lods
addr16
dec
jmp
mov
inc
dec
and
aad
rcl
xchg
fs
cmc
sub
sub
inc
or
(bad)
mov
sti
or
lods
addr16
dec
jmp
aaa
mov
imul
jno
popa
mov
shl
mov
shr
lock
pusha
or
stc
shl
call
loope
jo
int
jno
dec
jecxz
xlat
aaa
cld
dec
loop
inc
adc
idiv
sub
push
into
sar
in
cmp
in
leave
xchg
ins
ret
xchg
sub
inc
cmps
rcr
mov
adc
call
and
pop
cdq
sbb
jcxz
(bad)
xchg
push
jl
jge
push
ficomp
xor
dec
outs
ret
test
or
(bad)
int
cld
dec
loop
inc
adc
idiv
sub
push
into
sar
in
cmp
in
leave
xchg
ins
ret
xchg
sub
inc
cmps
rcr
mov
adc
call
and
pop
cdq
sbb
jcxz
(bad)
xchg
push
jl
jge
push
ficomp
xor
dec
outs
ret
test
or
(bad)
int
cld
dec
loop
inc
adc
idiv
sub
push
into
sar
in
cmp
in
leave
sub
popf
cmps
cmc
loope
push
or
outs
mov
std
pop
addr16
mov
xlat
outs
into
iret
xor
jp
(bad)
aad
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
mov
mov
loopne
repz
jae
popa
mov
shl
icebp
shr
sbb
push
xor
fstp
in
push
jle
icebp
push
imul
outs
ss
mov
mov
mov
cli
es
mov
cmps
and
jl
(bad)
dec
sub
addr16
xchg
jmp
sub
lahf
pop
cmps
push
sub
push
in
ja
pop
inc
(bad)
and
mov
loope
jge
shr
pop
into
cmp
lock
sub
and
xor
je
ret
pandn
sbb
or
sbb
xchg
add
xor
ret
lea
mov
cwde
mov
cmps
and
jl
(bad)
dec
sub
addr16
xchg
jmp
sub
lahf
pop
cmps
push
sub
push
in
ja
pop
inc
(bad)
and
mov
loope
jge
shr
pop
into
cmp
lock
sub
and
xor
je
ret
pandn
sbb
or
sbb
xchg
add
xor
ret
lea
mov
cwde
mov
cmps
and
jl
(bad)
dec
sub
addr16
xchg
jmp
retf
rcr
inc
push
and
repnz
outs
fwait
ja
cmp
icebp
dec
xchg
cmc
or
clc
jl
pop
adc
push
pop
jmp
iret
outs
call
popa
jb
and
fnsave
push
jle
shr
loope
dec
scas
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fidiv
out
fnstenv
mov
push
adc
add
and
out
out
push
jmp
loope
jo
popa
or
popa
mov
shl
icebp
shl
add
clc
popa
or
mov
or
rol
retf
sbb
fpatan
rcl
shr
pusha
cld
mov
cmp
inc
inc
rcl
cwde
lock
inc
cmc
sub
sub
sbb
fpatan
rcl
shr
pusha
cld
mov
cmp
inc
inc
rcl
cwde
lock
inc
cmc
sub
sub
sbb
fpatan
rcl
imul
out
fdiv
int
jno
cli
fadd
jb
push
cwde
sti
jmp
mov
inc
test
(bad)
shr
data16
inc
cmp
pop
popf
shr
mov
fs
arpl
xchg
inc
cmp
pop
popf
shr
mov
fs
arpl
jmp
test
pusha
or
shl
lock
idiv
loope
jno
loope
jno
loope
jno
loope
jno
loope
jno
loope
jno
loope
jno
loope
jno
loope
jno
loope
jno
loope
jno
loope
jno
loope
jno
jae
jno
test
aad
inc
call
test
aad
inc
call
test
aad
inc
call
test
aad
inc
call
test
aad
jae
arpl
inc
call
test
aad
inc
call
push
push
push
imul
jo
popa
mov
shl
icebp
shr
sbb
jo
ja
loopne
mov
pop
xchg
jns
jg
mov
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
jg
out
inc
call
out
inc
sbb
cli
ret
ja
ret
(bad)
int
add
(bad)
js
push
lock
ins
scas
cdq
sbb
inc
int
mov
pusha
in
pop
popa
aas
inc
lock
push
scas
cdq
sbb
inc
int
mov
pusha
in
pop
popa
aas
inc
lock
push
scas
cdq
sbb
inc
int
mov
pusha
in
pop
popa
aas
inc
lock
push
scas
cdq
sbb
inc
int
mov
pusha
in
pop
popa
aas
inc
lock
push
scas
cdq
sbb
inc
int
mov
pusha
in
pop
popa
aas
inc
lock
push
scas
cdq
sbb
inc
int
mov
pusha
in
pop
popa
aas
inc
lock
push
scas
cdq
sbb
inc
int
mov
pusha
in
pop
popa
aas
inc
lock
push
scas
cdq
sbb
inc
int
mov
pusha
in
pop
popa
aas
inc
lock
push
scas
cdq
sbb
inc
int
mov
pusha
in
pop
popa
aas
inc
lock
push
(bad)
jp
dec
(bad)
ja
ins
out
adc
popa
or
popa
mov
shl
icebp
rcr
cmp
fnstenv
or
mov
jecxz
stc
loopne
jmp
lar
ret
mov
jmp
jle
cmps
pop
loop
cmp
mov
jmp
jle
cmps
pop
loop
cmp
mov
jmp
jle
cmps
pop
loop
cmp
mov
jmp
jle
cmps
pop
loop
cmp
mov
jmp
jle
cmps
pop
loop
cmp
mov
jmp
jle
cmps
pop
loop
cmp
mov
jmp
jle
cmps
pop
loop
cmp
mov
jmp
jle
cmps
pop
loop
cmp
mov
jmp
jle
fild
mov
pop
jmp
fistp
sbb
cwde
ins
and
popf
pop
jg
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
lds
out
(bad)
add
ja
cs
adc
popa
or
popa
mov
shl
icebp
shl
sub
fincstp
rcl
mov
nop
fdivr
ret
and
jmp
dec
xchg
cmps
jg
pop
or
ss
add
fwait
jge
ins
into
push
sbb
aas
xor
or
ss
add
fwait
jge
ins
into
push
sbb
mov
sahf
xor
test
stc
repnz
or
inc
or
mov
adc
ret
dec
and
pop
add
jbe
adc
xchg
ins
lods
imul
ret
dec
and
pop
add
jbe
adc
xchg
ins
lods
imul
sbb
fs
aam
lea
das
adc
stc
cmc
loope
rcl
or
shl
not
shr
test
dec
(bad)
xor
loop
sbb
jmp
push
mov
loopne
lock
jo
jecxz
jo
arpl
jae
gs
repnz
(bad)
hlt
(bad)
in
je
jmp
lea
push
hlt
fsubr
add
out
jnp
push
cli
fsubr
cmp
or
jnp
pusha
or
jecxz
jae
jecxz
jne
in
jnp
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
ficomp
jmp
jno
loope
icebp
push
popa
or
loopne
jns
add
jno
popa
mov
push
popa
mov
shl
icebp
shl
icebp
shl
div
shr
mov
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
pusha
xor
popa
mov
ds
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
loope
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
icebp
push
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
gs
outs
loopne
icebp
push
loope
icebp
shl
icebp
rol
or
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
jmp
fs
cmp
add
jae
mov
popa
lods
icebp
hlt
sahf
in
push
loope
jno
pusha
mov
push
loopne
jo
loopne
lock
in
jae
jecxz
repz
je
fs
(bad)
in
ja
add
cmp
xor
cmp
pop
push
ja
ins
cmp
fcmovb
or
in
jae
jmp
jae
imul
(bad)
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
add
push
loope
pusha
push
jmp
ja
pop
ins
mov
push
popa
or
shl
icebp
shl
icebp
shl
repz
in
repnz
mov
push
popa
or
popa
mov
shl
icebp
shl
lock
loop
icebp
push
out
pushf
shl
icebp
shl
lock
push
jno
shl
ja
sbb
dec
jp
aas
add
daa
or
push
popa
xchg
pop
iret
adc
inc
mov
shl
lock
dec
stos
pop
int3
sub
mov
js
mov
push
fidivr
push
lods
outs
test
jg
pusha
loope
mov
pusha
or
push
popa
mov
shl
icebp
shl
jno
popa
or
jmp
js
or
imul
gs
inc
test
push
cmp
(bad)
cs
dec
rcl
push
pop
nop
push
mov
pushf
mov
mov
shufps
jecxz
mov
fsubr
xchg
xor
cwde
push
iret
ss
mov
mov
mov
or
ror
push
movs
pop
or
ss
mov
cmp
imul
lock
popa
mov
shl
mov
shl
xor
test
pop
imul
pusha
shr
xor
or
scas
loopne
jne
loope
jno
pop
shl
inc
addr16
inc
cmp
adc
xchg
sbb
icebp
inc
pop
call
popa
repz
push
xor
call
iret
sub
sub
mov
mov
mov
mov
(bad)
stos
and
mov
jmp
outs
(bad)
aam
or
std
lds
mov
js
cmp
sbb
outs
rcl
aad
cmps
(bad)
xchg
ins
daa
sub
loopne
mov
mov
mov
neg
sbb
jo
mov
mov
jne
fld
mov
loope
mov
arpl
jae
popa
mov
shl
mov
jecxz
stc
sar
cmp
dec
and
clc
mov
jnp
or
and
popa
push
dec
cmps
push
xchg
cmp
jp
jae
mov
and
xor
inc
aas
sub
jecxz
xchg
icebp
lahf
push
sbb
shl
push
(bad)
out
fisub
adc
sub
push
daa
mov
inc
cmp
add
loop
lahf
addr16
push
es
push
hlt
dec
ss
lds
sar
test
dec
rcl
add
push
dec
jmp
mov
repz
fwait
cs
xor
sub
pop
push
lahf
loope
lock
int3
sub
rcl
bound
dec
in
cs
mov
push
aam
sbb
les
mov
and
leave
shl
or
hlt
icebp
in
dec
mov
(bad)
xchg
out
sub
sti
pushf
lea
cmp
bswap
mov
in
cmp
ja
lea
fwait
pop
push
cdq
push
add
jle
sbb
or
test
sub
adc
mov
enter
bound
xor
popf
jmp
pushf
xchg
cmp
and
sub
mov
cmc
dec
test
mov
jne
shr
sub
mov
mov
mov
sub
bound
jb
(bad)
push
out
call
sbb
lahf
pusha
loope
mov
imul
mov
mov
jns
xchg
shl
mov
push
jecxz
jno
popa
or
shl
icebp
shl
icebp
push
call
and
pop
shl
pop
enter
shr
arpl
or
add
loopne
jb
dec
fidivr
ss
sbb
xor
and
cmp
push
add
or
test
mov
popa
sub
push
mov
cmps
jo
pop
mov
and
inc
sub
and
inc
sub
pushf
gs
jp
xlat
add
cs
push
(bad)
sbb
xor
enter
sub
pushf
adc
enter
lods
push
call
mov
ret
test
ror
stos
outs
les
push
lahf
mov
cs
mov
jmp
push
jae
fldcw
xor
adc
in
loop
pop
out
shr
repz
pop
mov
lea
or
mov
frstor
(bad)
loop
or
(bad)
ds
fcomp
pop
jae
jecxz
das
sahf
iret
sbb
adc
scas
cmc
adc
in
inc
jo
arpl
aam
out
add
xor
push
mov
mov
mov
in
scas
(bad)
std
aaa
fs
outs
adc
mov
loope
jo
arpl
icebp
shr
jno
shl
dec
jmp
ja
cmp
mov
cmp
popa
jecxz
mov
arpl
mov
push
test
mov
in
jg
lods
push
push
mov
inc
lock
sbb
loope
cmps
cmps
jecxz
add
cmps
push
nop
push
int3
mov
mov
aas
(bad)
out
mov
pushf
or
pushf
jmp
scas
ins
hlt
pushf
dec
pusha
fldenv
adc
mov
out
push
popf
pop
mov
pop
cdq
cmp
jecxz
aaa
xchg
pusha
jg
scas
sub
mov
mov
adc
push
dec
cmps
mov
xlat
push
hlt
inc
bound
mov
imul
mov
fmul
cs
pusha
test
dec
and
retf
fmul
sbb
test
cmp
mov
ja
dec
sbb
jl
js
test
pusha
or
shl
lock
stc
jge
push
xchg
aaa
push
cmc
ins
xor
or
scas
popa
or
pusha
mov
shl
jo
popa
mov
shl
xor
stc
sub
push
fld
pusha
cdq
dec
and
loope
jno
gs
out
fmul
mov
call
hlt
push
test
(bad)
cwde
fiadd
fdiv
push
mov
and
bound
movs
dec
mov
inc
arpl
add
(bad)
mov
hlt
lahf
fs
mov
lock
aam
mov
test
adc
dec
retf
icebp
jb
adc
gs
mov
mov
inc
pushf
rol
stc
push
adc
(bad)
xor
dec
loop
test
add
leave
mov
adc
call
xchg
ret
sbb
sub
call
mov
mov
jne
je
loopne
mov
cmc
pusha
add
leave
push
jmp
loopne
icebp
shl
mov
popa
mov
shl
mov
shl
adc
push
mov
push
add
jmp
sub
retf
add
test
inc
sti
jno
mov
pusha
test
add
outs
popa
in
mov
dec
xchg
retf
ror
ret
adc
jnp
clc
out
je
jns
sbb
xchg
(bad)
aam
sub
aaa
pop
add
ins
adc
mov
fwait
icebp
outs
rcl
mov
cmp
inc
test
sbb
xor
adc
lock
jo
fst
push
mov
clc
mov
inc
test
dec
sub
or
add
xchg
leave
dec
push
shr
ret
jle
addr16
js
mov
sbb
xlat
jg
mov
(bad)
shl
and
mov
jg
sbb
push
scas
(bad)
aas
cmp
sbb
cmps
je
ja
inc
mov
dec
jmp
sub
(bad)
in
and
mov
pusha
or
push
popa
mov
popa
mov
shr
cwde
jno
shl
sbb
and
loope
icebp
push
jle
jno
mov
xchg
xchg
xchg
aaa
lds
fsubr
int
push
fwait
mov
test
inc
ud0
fldenv
inc
outs
and
or
cmp
lock
inc
or
cmp
mov
mov
fwait
(bad)
jo
loope
les
xor
push
pusha
(bad)
icebp
out
in
lods
xor
test
adc
rol
push
cmp
pushf
stc
(bad)
hlt
das
mov
ds
out
leave
in
int3
mov
add
sbb
cwde
mov
into
(bad)
fs
sahf
push
push
adc
sub
mov
sbb
jbe
adc
xor
jmp
push
inc
lods
ins
fidivr
sbb
push
inc
imul
pop
aaa
add
and
shr
ret
ret
repnz
dec
inc
xchg
push
out
push
push
fs
cmp
add
jae
mov
popa
lods
icebp
hlt
push
div
push
inc
mov
pop
fstp
inc
loopne
mov
retf
in
ja
test
push
loopne
lock
mov
push
jecxz
jo
arpl
push
arpl
jae
loop
repz
addr16
repnz
(bad)
not
pcmpeqb
(bad)
clc
pop
in
stc
push
jmp
add
pop
out
sti
push
imul
loope
push
mov
jecxz
repz
add
add
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fiadd
mov
loope
stc
aam
mov
loopne
stc
shr
or
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
imul
mov
popa
mov
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
arpl
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
push
outs
jmp
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
loopne
jb
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
(bad)
cwde
jno
or
dec
scas
popa
mov
pusha
mov
push
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
jno
add
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
lea
scas
imul
jno
inc
mov
ror
jno
pusha
or
push
pusha
mov
loopne
jo
pusha
mov
jecxz
repz
arpl
jb
addr16
aad
or
not
imul
je
push
push
jnp
ins
add
push
gs
pop
loope
jno
arpl
jae
out
cmc
pop
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
idiv
fisubr
nop
push
popa
xchg
imul
jo
push
push
push
loope
icebp
fsubp
mov
push
popa
or
popa
mov
shl
mov
shl
jno
pusha
mov
push
popa
push
mov
loope
jo
popa
mov
shl
icebp
shl
mov
push
bound
lock
gs
loopne
icebp
push
jmp
mov
rcr
mov
hlt
push
aaa
idiv
scas
pop
pop
or
xchg
fsubr
xor
mov
stos
mov
fistp
neg
dec
push
ss
popa
cmp
mov
arpl
icebp
sar
push
icebp
sar
cmp
jl
add
aas
sbb
pop
inc
(bad)
mov
xor
mov
ja
cmp
inc
lods
cmp
xchg
dec
and
sbb
add
loope
pop
and
icebp
push
jle
pop
xchg
ror
xchg
lds
mov
fldcw
pop
leave
stos
fcom
nop
cmp
pop
out
sub
mov
cs
pop
sqrtps
dec
imul
push
aas
inc
jo
xchg
mov
push
ret
fsub
in
mov
mov
dec
imul
loope
(bad)
pop
pop
mov
inc
pop
or
push
fnstsw
test
out
(bad)
shl
jo
xchg
xchg
sub
cmp
sbb
out
out
rcr
dec
loop
mov
adc
shl
lahf
add
sub
mov
shl
inc
or
cld
icebp
icebp
lock
dec
add
adc
cmp
pop
dec
popa
cmps
push
dec
jmp
pop
(bad)
into
out
jmp
push
(bad)
in
mov
xlat
fsubp
inc
mov
ret
icebp
push
sbb
mov
nop
jno
imul
pop
jp
dec
popa
jno
(bad)
cmps
cmps
movs
jns
xchg
mov
test
mov
out
lods
or
xlat
sub
add
mov
aaa
or
int3
fcom
jle
not
popa
mov
inc
cmp
dec
sub
adc
dec
jp
sub
or
cmp
outs
dec
push
(bad)
js
pop
jo
mov
cs
sub
enter
push
xor
scas
test
stc
xor
mov
adc
xor
imul
movs
xor
xchg
ret
cmp
fnstsw
dec
inc
loopne
stos
les
sbb
movs
mov
push
sbb
xchg
adc
int
inc
jno
popa
mov
mov
fild
test
push
leave
sub
ja
popf
and
or
jo
pop
mov
repz
add
or
ret
jo
jo
jno
and
icebp
lock
loope
xchg
pop
cwde
cs
sub
out
jmp
cmc
icebp
nop
jae
(bad)
out
jo
icebp
shr
push
aam
xchg
loope
rcl
mov
rol
ret
daa
loope
mov
bound
adc
sub
dec
shl
loopne
popa
test
shl
test
shl
popf
cwde
sbb
bnd
out
cmp
scas
push
xchg
cmp
adc
popa
test
shl
(bad)
icebp
push
popa
inc
mov
sbb
push
dec
inc
inc
sbb
adc
stos
mov
inc
test
shr
cmc
fsubr
daa
jbe
push
or
jmp
jno
jecxz
aad
test
inc
cmp
jmp
pop
cld
pop
or
popa
mov
nop
popa
jb
pop
push
das
mov
mov
cmp
shl
xchg
nop
fbstp
ins
add
iret
in
push
js
and
mov
ret
lock
sub
xchg
in
and
mov
shr
or
mov
jno
jecxz
popa
sbb
enter
repnz
mov
aam
cwde
push
dec
popa
mov
fsub
fst
int3
rcl
popa
mov
popa
or
rol
or
scas
loope
out
pusha
or
loopne
repz
popa
mov
shl
mov
push
loope
repz
jo
sti
and
jp
clc
fstp
jnp
js
js
popa
or
mov
ret
pusha
repz
mov
mov
cmp
lock
jne
stos
mov
push
into
test
arpl
dec
xor
js
and
aam
pop
xor
hlt
sub
int3
fild
and
jecxz
mov
loop
push
sub
les
adc
or
mov
int
lods
mov
sub
or
stc
mov
test
popw
mov
jo
lds
dec
and
xor
fiadd
dec
pop
inc
jns
call
mov
movs
jnp
fst
(bad)
cmp
movs
mov
test
xchg
pop
sti
aam
and
pop
gs
ficomp
and
popa
std
into
adc
in
movs
inc
jmp
enter
xchg
nop
mov
aaa
mov
add
lahf
mov
adc
push
mov
idiv
fcomp
dec
sbb
ins
cmp
sbb
mov
mov
push
push
shl
sbb
rol
call
inc
ficom
mov
call
mov
ror
and
jo
mov
cmp
mov
push
inc
scas
push
sub
push
sbb
(bad)
lods
inc
push
leave
pusha
cli
add
leave
ds
fst
test
outs
dec
push
mov
xchg
es
mov
mov
push
inc
inc
sub
leave
sar
fist
les
shl
inc
mov
push
add
push
push
leave
retf
mov
retf
mov
call
lds
sar
sbb
neg
retf
mov
(bad)
scas
add
jo
and
clc
mov
mov
sub
cwde
js
repz
lahf
(bad)
(bad)
adc
stc
out
add
lock
jecxz
adc
add
fs
popa
mov
mov
mov
inc
mov
xchg
es
jl
mov
mov
mov
div
push
jmp
ss
mov
jmp
aam
dec
cmps
dec
sar
test
fidiv
adc
xlat
mov
seta
and
das
mov
in
add
(bad)
jg
mov
(bad)
mov
ins
pop
xchg
push
aad
data16
sbb
add
or
or
aam
sub
stos
jle
mov
sub
test
lea
sub
jecxz
mov
xchg
popf
std
cmps
(bad)
punpckhdq
xchg
cmp
popa
leave
fs
rcr
jg
data16
fnsave
rcl
mov
leave
mov
inc
icebp
dec
xchg
lods
add
test
in
js
adc
xor
(bad)
mov
(bad)
ja
and
adc
fs
push
popa
mov
popa
mov
shl
jo
jecxz
jae
jmp
push
enter
sbb
cdq
mov
xchg
cdq
push
xor
(bad)
or
sub
popa
xor
mov
lea
jne
jge
lea
mov
cmc
and
neg
fsubr
les
inc
pop
pop
push
jmp
cdq
test
dec
aam
push
lahf
sar
inc
movs
ds
or
fld
xor
push
ds
cs
loopne
(bad)
mov
sahf
out
dec
lods
shr
xchg
shl
aad
enter
mov
pushf
fist
bound
jge
lea
mov
cmc
and
neg
fsubr
les
inc
pop
pop
push
jmp
sbb
cld
push
lahf
sar
inc
movs
ds
or
fld
xor
push
ds
les
inc
clc
dec
sub
les
and
sbb
sub
xor
test
inc
int
icebp
and
and
jp
jb
lahf
sbb
mov
sbb
cmps
in
in
cmp
sahf
pop
sti
sbb
adc
adc
bound
xchg
or
sub
rcr
sub
mov
mov
or
cmp
lahf
(bad)
mov
mov
aad
loope
mov
cmps
xlat
outs
or
das
popf
sbb
iret
jne
jno
or
xchg
fst
call
xor
xor
add
cld
jns
fs
adc
pop
popf
in
pushf
xlat
mov
std
xchg
mov
je
sub
or
cmp
inc
xchg
pop
adc
shl
adc
cmp
mov
and
call
jnp
jge
test
cmp
leave
push
mov
mov
sub
jg
(bad)
jmp
jl
fist
leave
dec
enter
mov
nop
int3
sbb
aam
push
push
(bad)
ins
jecxz
jae
push
cld
bound
push
ins
imul
dec
outs
mov
inc
or
fucomp
or
inc
sub
test
scas
in
cmps
xchg
xor
mov
jmp
repnz
sbb
pop
gs
sbb
ret
ror
or
scas
lds
pop
jns
adc
int
inc
into
adc
sbb
push
fcom
ret
test
sbb
mov
sub
sbb
dec
test
std
mov
adc
inc
jl
loop
aam
xor
add
push
push
xchg
push
stos
pop
std
outs
inc
jmp
xor
or
xchg
cmc
sub
cwde
retf
daa
enter
jb
push
or
adc
repnz
jns
push
fadd
call
and
and
dec
xor
cli
enter
outs
neg
outs
inc
hlt
or
mov
jns
inc
and
(bad)
and
sub
sbb
lods
jns
sbb
xor
(bad)
mov
imul
mov
adc
test
mov
adc
bound
mov
pop
sbb
mov
int
imul
stos
into
xor
sub
sub
jb
adc
jne
dec
iret
cmp
xor
(bad)
inc
jp
out
sbb
and
cmp
stc
cld
icebp
xchg
jp
loope
jne
push
xor
clc
xchg
shl
and
mov
xor
imul
dec
add
push
lods
cmp
popf
sbb
cmp
movs
adc
loopne
and
es
aam
sbb
cwd
jmp
fwait
lds
inc
sbb
nop
xor
repnz
pop
sbb
cmp
lods
jg
or
jb
das
and
cmp
bound
leave
shr
hlt
ins
mov
jle
je
fwait
shr
add
les
enter
push
mov
cwde
sbb
cwde
repnz
jno
ror
push
xchg
retf
mul
adc
sbb
or
sahf
xchg
pop
int
xchg
mov
pop
lods
sbb
inc
movs
jne
aam
cli
daa
xor
clc
loop
add
mov
and
loope
cmp
cmp
js
jne
div
mov
jmp
pusha
or
loopne
jo
popa
or
shl
mov
shl
icebp
push
call
sub
jno
stc
ficom
imul
mov
cmp
popa
mov
push
dec
jno
(bad)
leave
xchg
mov
fs
popf
cmp
adc
push
jmp
or
repnz
xor
mov
pop
jb
pop
ret
pop
dec
cmp
mov
jb
pop
sub
mov
dec
adc
mov
sub
xchg
xchg
(bad)
iret
xchg
out
xor
adc
mov
stc
outs
sahf
xchg
pop
and
jmp
(bad)
fnstenv
cwde
mov
idiv
add
mov
add
ds
mov
nop
xchg
jmp
stc
dec
push
mov
fldenv
jae
xchg
pop
jnp
mov
(bad)
popa
mov
pop
je
int
add
jbe
lods
scas
movs
sbb
rep
pop
ja
jb
xchg
mov
pop
(bad)
mov
addr16
xor
jb
xor
mov
dec
in
pop
add
(bad)
jo
dec
std
cmc
sub
imul
mov
push
scas
pop
or
mov
and
or
xchg
inc
xlat
jle
pop
jae
je
cmp
adc
push
jbe
pop
jecxz
sbb
cmp
push
mov
xchg
pop
imul
mov
mov
out
fnstsw
out
adc
xchg
movs
outs
movs
mov
cmp
outs
enter
(bad)
mov
push
dec
call
push
bound
push
dec
retf
sahf
push
enter
cmc
sbb
rcr
xor
mov
dec
xlat
(bad)
xchg
jmp
fidivr
inc
movs
dec
jbe
or
data16
mov
cmp
gs
mov
addr16
xor
aad
scas
ret
cmp
pop
out
les
adc
push
jecxz
cmp
popa
retf
sub
and
leave
popf
jg
fiadd
int3
in
jl
pop
cmp
sub
inc
jb
xchg
std
mov
mov
inc
jnp
sub
or
add
sub
mov
jg
dec
and
pop
arpl
call
mov
stc
gs
jnp
enter
push
push
in
and
mov
ret
fnstsw
test
pop
into
xchg
mov
pop
outs
xchg
loope
ret
fs
mov
cs
neg
jmp
lods
sbb
in
fwait
in
pop
sbb
test
mov
loop
aam
(bad)
and
cli
test
push
jo
adc
imul
xor
icebp
xor
mov
push
gs
mov
js
mov
hlt
sbb
jae
std
std
or
lock
mov
mov
mov
mov
sbb
add
mov
aam
mov
stos
std
push
pop
cdq
rcl
jl
xchg
jns
mov
dec
jl
leave
mov
adc
(bad)
(bad)
mov
(bad)
imul
cmp
sub
dec
mov
popf
xchg
je
pop
inc
popf
retf
sub
jmp
popa
or
in
repnz
pusha
mov
push
loope
icebp
shl
jo
jecxz
stc
pop
stc
test
inc
js
leave
rcl
push
js
add
or
mov
shr
xor
inc
test
sar
cdq
adc
mov
xor
loope
or
mov
out
out
shl
frstor
mov
aad
dec
fcmovnu
or
lds
arpl
ror
shl
mov
pop
movs
mov
jae
into
mov
pop
pop
pop
shl
cli
mov
jmp
ret
ret
mov
pop
cdq
cs
pop
inc
xor
sub
sbb
xchg
or
les
ins
loope
mov
sbb
inc
lods
xor
jns
and
dec
scas
and
aaa
pop
fwait
pop
pop
mov
mov
dec
lds
arpl
ror
shl
mov
pop
movs
mov
mov
pop
pop
mov
mov
jmp
pusha
mov
imul
sub
jp
push
arpl
mov
iret
cmp
(bad)
in
retf
retf
out
popa
sbb
sahf
adc
pop
sbb
jns
mov
(bad)
adc
mov
in
xor
adc
xchg
mov
imul
nop
cmp
popf
imul
hlt
hlt
or
movs
sub
sbb
lods
add
and
mov
lods
mov
sbb
push
cdq
xchg
mov
lahf
mov
stos
or
sti
pop
gs
cmp
movs
loope
jge
xor
xor
sbb
and
clc
push
repnz
jg
xchg
push
mov
add
fwait
enter
call
or
leave
jne
addr16
or
lea
mov
aam
xlat
adc
or
mov
inc
lods
sub
stos
mov
jo
ds
(bad)
mov
mov
xor
jne
xor
out
xor
test
mov
xchg
and
mov
jecxz
and
out
(bad)
mov
mov
xor
je
xor
out
xor
test
mov
xchg
and
mov
cmp
in
sbb
js
add
xor
and
in
sbb
xor
aam
mov
mov
outs
fisubr
ins
out
mov
sub
aas
icebp
or
mov
es
sbb
outs
cmps
xchg
add
retf
imul
scas
jae
jmp
sti
jmp
ds
add
inc
mov
sahf
leave
cmp
pop
imul
adc
ds
mov
cmp
dec
scas
aaa
sahf
repnz
(bad)
call
repnz
lds
data16
daa
push
mov
dec
xchg
push
and
aas
data16
in
das
sub
stc
sbb
movs
popf
call
jne
iret
(bad)
lea
dec
inc
mov
push
loop
jae
or
movs
jg
push
int
mov
in
add
outs
xchg
pop
fsub
cdq
mov
mov
daa
xor
(bad)
es
xchg
push
pop
inc
xlat
cmp
xchg
sub
(bad)
lods
sbb
jae
mov
jbe
mov
cmp
stos
inc
aad
enter
rcl
pop
xchg
xor
cmp
xor
sbb
add
rol
dec
pop
or
enter
data16
sbb
add
add
push
or
ret
mov
outs
inc
shr
gs
xchg
xchg
mov
or
ins
mov
cld
dec
jo
mov
imul
sahf
fwait
(bad)
jecxz
xor
out
push
lods
scas
imul
stos
repz
outs
add
jle
arpl
nop
loope
pop
scas
cld
xor
and
mov
sub
xor
fwait
mov
(bad)
push
pop
xchg
mov
shr
addr16
or
or
lock
cmp
movs
mov
data16
fmul
imul
sub
inc
cwde
cmps
and
push
cs
jmp
cmps
fiadd
arpl
xchg
fsubp
hlt
popf
sti
xchg
cwde
mov
ret
push
repnz
jp
std
hlt
das
sbb
and
rol
ins
jmp
cmp
xor
mov
jno
mov
jb
jmp
xor
or
lahf
mov
dec
sub
xor
test
jecxz
jo
(bad)
in
pop
cmp
(bad)
push
jmp
in
push
data16
dec
xchg
std
inc
data16
and
push
loop
aas
push
mov
cmp
setle
rcr
das
mov
fist
add
and
mov
jbe
mov
outs
xor
mov
jne
inc
in
jge
test
inc
mov
add
sub
hlt
jmp
pop
sar
push
rcr
jl
dec
inc
add
fdiv
(bad)
mov
push
adc
dec
inc
pop
dec
inc
mov
test
mov
fucom
aad
lock
mov
movs
aad
scas
xchg
not
or
cmps
sub
addr16
in
les
out
lahf
xchg
loope
or
inc
fwait
mov
or
popa
push
add
fisub
jle
and
xchg
mov
jbe
sahf
mul
stc
pop
mov
rep
scas
in
scas
fs
mov
pop
push
test
sub
cld
les
mov
add
mov
mov
(bad)
and
call
jb
std
scas
daa
loopne
in
xchg
popf
outs
pop
xchg
stos
hlt
inc
mov
pop
retf
iret
xor
(bad)
mov
sahf
loope
xchg
or
mov
pusha
leave
mov
hlt
popa
or
outs
push
fsubp
repnz
jnp
lea
shr
shr
(bad)
sbb
outs
retf
dec
jb
push
jmp
sbb
jecxz
jmp
mov
icebp
sbb
adc
outs
sbb
mov
loop
mov
push
or
sub
add
mov
jp
(bad)
out
sub
shl
xchg
push
aaa
sub
icebp
sbb
mov
push
push
mov
test
ret
jbe
dec
ja
xchg
std
mov
in
pusha
call
(bad)
int
int
ins
push
lea
pusha
enter
mov
mov
mov
dec
mov
xchg
mov
shl
and
addr16
mov
(bad)
popa
xchg
sub
test
inc
cmps
or
idiv
cmp
push
push
mov
push
loope
xor
loope
jns
pusha
or
loopne
lock
popa
mov
shr
jno
shl
dec
sbb
inc
call
cmp
sbb
xor
scas
popa
mov
icebp
inc
jno
xchg
adc
inc
push
xchg
push
and
push
push
shr
dec
sahf
call
aas
push
sbb
jmp
xor
inc
dec
push
push
jp
cmp
or
dec
iret
pop
or
cli
mov
and
or
xor
jb
sub
and
imul
dec
fwait
call
bound
xchg
shl
jb
inc
aaa
xor
outs
mov
bswap
lds
pop
adc
dec
enter
dec
imul
pop
stos
pop
call
mov
sar
into
sbb
fisubr
cs
mov
jge
or
push
pop
shr
pop
cmp
mov
in
pop
mov
sbb
int3
int3
push
sbb
cwde
je
scas
and
push
out
cmps
fldenv
pop
xor
or
mov
mov
add
jbe
sub
xchg
xchg
jg
dec
jecxz
mov
in
pop
mov
int3
vmread
data16
cmc
jmp
and
sbb
pop
add
in
cmp
imul
sub
mov
out
into
cmp
not
push
jge
pop
retf
outs
lahf
loope
out
xlat
imul
out
cmc
push
imul
sub
add
jge
adc
push
fsubrp
fistp
cmp
mov
mov
mov
fwait
ins
sub
ja
jno
and
xchg
mov
pop
sbb
inc
adc
not
push
or
xchg
cmps
test
cmc
cs
shr
jbe
inc
shl
push
sub
je
dec
xor
mov
inc
dec
ds
xchg
out
repnz
or
loopne
adc
cmc
jno
out
stc
clc
leave
repz
sub
sbb
xchg
repz
inc
mov
mov
pop
clc
mov
lods
jmp
loopne
or
rol
jmp
in
mov
ss
and
xchg
pop
dec
les
mov
lahf
ins
xchg
xchg
sub
fwait
adc
and
imul
adc
gs
sub
inc
mov
loope
adc
aas
xlat
jnp
dec
push
shl
test
and
or
xor
pop
ja
inc
cdq
out
mov
xchg
jnp
(bad)
mov
sbb
ins
pop
or
or
mov
inc
jne
retf
pop
add
push
jbe
cdq
repz
xchg
aad
dec
push
add
rcl
or
popa
shr
sbb
int3
bound
mov
lahf
(bad)
pop
repnz
xor
and
xchg
cmp
scas
cmps
dec
push
pop
pop
and
xchg
push
in
leave
xchg
fisub
push
ret
xor
push
sub
loope
cs
mul
imul
or
fmul
sub
push
push
inc
mov
js
mov
and
leave
call
push
dec
jnp
mov
aam
loopne
dec
in
fiadd
sbb
ins
test
data16
bound
in
xor
into
icebp
rcl
lea
sub
leave
jnp
aas
test
(bad)
jmp
ficom
dec
aas
dec
js
loopne
sub
test
and
outs
popf
fild
(bad)
xchg
in
push
out
imul
rol
in
rcr
inc
xor
jecxz
mov
cli
jbe
push
push
into
sar
add
in
and
adc
push
adc
pusha
mov
out
fmul
js
out
in
imul
mov
cmp
push
push
mov
cmp
xchg
loope
mov
pop
mov
mov
inc
pop
pusha
and
cmc
ret
xor
out
call
sub
fisub
movs
les
pop
pusha
lahf
and
or
out
sbb
cdq
stc
je
sbb
(bad)
lock
dec
in
inc
sahf
or
(bad)
in
push
lock
and
mov
leave
(bad)
loope
rol
xchg
mov
and
cmp
clc
jb
lea
pop
cdq
jbe
test
sar
mov
std
sbb
pop
cmp
pop
cmp
sahf
xor
cmp
mov
xchg
leave
jne
sbb
xchg
add
aad
retf
nop
jle
bnd
dec
pop
(bad)
mov
jmp
out
aad
pop
xchg
push
cmps
pop
out
pop
mov
mov
jns
(bad)
cmp
xchg
adc
and
mov
aad
cmp
icebp
(bad)
pop
xchg
adc
sub
and
sbb
xchg
cmp
test
(bad)
in
ret
jg
adc
mov
mov
loopne
icebp
push
loope
icebp
shl
icebp
rcr
pop
sbb
cmps
into
jmp
push
mov
mov
loope
pop
scas
mov
mov
std
pop
push
or
call
adc
sar
mov
gs
mov
or
xor
aaa
scas
fild
mov
dec
addr16
cmp
enter
ja
cmp
imul
scas
popa
sub
scas
adc
mov
out
bts
stos
push
cmc
xor
mov
(bad)
cwde
xchg
into
sub
in
icebp
stos
bound
sar
pop
sub
js
data16
jo
sahf
gs
cmp
stos
push
sti
push
sub
or
xor
(bad)
rol
mul
jmp
pusha
and
nop
cmp
pop
mov
aad
cmps
out
jno
sahf
gs
out
ins
(bad)
out
cli
div
mov
mov
popa
or
or
push
loope
jb
popa
mov
shl
xor
stc
test
inc
shl
fstp
sbb
mov
leave
push
and
add
call
adc
cmp
call
scas
or
pop
loope
xchg
jnp
test
test
sbb
hlt
retf
arpl
pop
dec
ins
xor
adc
add
std
ins
and
and
xchg
adc
ins
mov
call
push
cmp
mov
jmp
mov
test
mov
pop
outs
sub
lods
mov
inc
in
lods
add
jl
aad
(bad)
pop
xor
xor
fnstenv
stc
jp
int3
add
mov
stc
mov
jecxz
mov
sub
sub
jae
push
fild
test
cld
push
mov
ja
or
mov
dec
in
packssdw
xor
imul
sub
(bad)
in
faddp
or
leave
inc
retf
call
leave
mov
sub
pop
ja
test
outs
test
arpl
push
das
jge
xchg
jmp
adc
out
(bad)
int
in
je
xchg
and
lods
xchg
sub
mov
movs
pop
and
popa
mov
adc
push
loop
adc
pop
test
mov
std
lods
movs
dec
lods
and
call
push
test
xchg
xchg
xor
pop
out
add
push
cmp
daa
pop
outs
jmp
fisttp
jnp
int3
add
jmp
push
loopne
cmp
daa
out
xor
lods
xor
xor
add
adc
inc
mov
mov
loope
ja
aad
dec
sbb
add
pop
fnstenv
add
aam
jae
imul
scas
stc
leave
enter
popf
mov
add
dec
fisub
pop
or
movs
dec
push
in
int3
pop
ficom
sub
cmc
cwde
mov
xchg
test
pop
mov
leave
push
and
stos
mov
loopne
add
movs
add
ret
ror
push
in
inc
into
dec
cmp
mov
push
aad
das
mov
call
out
sbb
or
les
repnz
nop
xchg
fidivr
adc
push
cmp
inc
neg
xor
push
push
cmps
push
mov
sub
(bad)
out
adc
inc
(bad)
sbb
mov
into
int
push
mov
add
dec
inc
xchg
stos
inc
sub
test
sub
mov
mov
out
or
jne
push
ds
aad
mov
mov
pop
add
and
lahf
aas
jge
sbb
retf
mov
neg
mov
xchg
push
pop
jg
lods
push
push
push
(bad)
cwde
into
loope
mov
cmp
sbb
gs
pop
jo
pushf
push
cdq
mov
push
fldcw
sti
stos
aas
outs
(bad)
pop
xor
in
into
xchg
push
and
mov
shr
xchg
clc
and
inc
or
stos
xchg
outs
mov
nop
push
ins
sub
jne
aam
ins
cmps
jns
sbb
push
lds
and
adc
cs
lods
aaa
push
mov
in
inc
mov
sub
sub
shl
mov
mov
loopne
icebp
push
loopne
repz
popa
or
shl
mov
shl
nop
jno
leave
xor
mov
xor
mov
imul
cdq
neg
pusha
in
pushf
shl
xchg
jo
aad
stc
pop
pop
cmp
outs
fmul
inc
lock
mov
inc
ins
mov
xchg
iret
fcomp
dec
stc
xchg
or
jp
mov
clc
mov
data16
xchg
mov
movs
into
fwait
pop
aad
nop
pop
pop
cmp
outs
fmul
inc
lock
mov
inc
ins
mov
xchg
retf
std
leave
in
mov
clc
sti
ret
xor
pop
mov
sbb
pop
iret
(bad)
inc
pop
inc
(bad)
movs
and
cmc
adc
mov
sub
mov
mov
stos
pushf
xchg
and
jns
and
xchg
sbb
fiadd
loopne
jecxz
nop
aas
loopne
shr
jecxz
(bad)
das
pop
pop
movs
cmp
popf
mov
ja
mov
add
gs
mov
sbb
into
pop
lods
dec
and
inc
and
movs
scas
pop
pop
je
repz
mov
outs
mov
adc
mov
out
xor
jmp
fidiv
or
inc
mov
lea
mov
cli
pop
scas
fisttp
cmp
or
and
sub
mov
pushf
mov
jmp
jb
adc
pusha
sbb
mov
stc
imul
loopne
loopne
push
loopne
xchg
rol
push
loop
add
rol
mov
addr16
stos
push
inc
xor
das
or
stos
mov
lods
pop
jp
bound
inc
push
loop
sahf
gs
imul
scas
adc
aas
sbb
outs
jecxz
push
dec
mov
push
repnz
adc
mov
test
dec
ficom
icebp
(bad)
and
(bad)
jb
adc
(bad)
sahf
inc
aaa
push
mov
push
mov
xchg
iret
fcomp
in
adc
in
or
mov
adc
mov
sub
xchg
pop
xchg
in
cld
cdq
dec
outs
movs
adc
loop
in
pop
sub
in
or
aaa
sahf
dec
push
sbb
icebp
sbb
int
dec
imul
xor
xchg
sar
test
add
sub
mov
and
enter
jmp
jmp
(bad)
cmp
push
(bad)
hlt
fwait
das
mov
data16
inc
lds
xchg
mov
pusha
mov
push
std
sub
shl
mov
xor
out
aaa
sub
jmp
push
mov
test
fdiv
fbstp
sub
fwait
leave
jecxz
outs
mov
cld
and
mov
cmp
mov
(bad)
in
xchg
xchg
(bad)
arpl
bswap
and
in
mov
out
call
stos
push
idiv
or
sbb
and
cmps
(bad)
aam
cmp
int3
movs
into
fcmovnbe
nop
aaa
and
ret
or
cs
cmp
dec
mov
into
lock
js
outs
or
sbb
fiadd
dec
rcr
mov
hlt
ds
jne
out
jle
cmc
ja
shl
daa
daa
call
mov
push
mov
add
jo
sbb
js
xchg
sar
cld
jmp
adc
stos
retf
test
aas
arpl
in
ret
popa
cli
inc
ins
xchg
cwde
pop
push
(bad)
sbb
shl
mov
shl
or
push
popa
mov
shl
xor
sub
pop
cdq
jo
call
or
adc
jmp
mov
cld
fcom
xor
mov
ins
push
pop
push
popa
shr
out
ror
dec
cdq
in
inc
sar
mov
push
sub
sti
div
or
jno
pcmpeqw
outs
inc
mov
(bad)
xor
adc
inc
push
mov
jg
rol
mov
out
mov
fs
clc
daa
dec
(bad)
jmp
outs
aad
js
and
adc
xchg
shr
mov
je
adc
icebp
sbb
ja
pop
mov
push
or
sbb
sbb
scas
mov
or
iret
in
movs
(bad)
mov
fwait
cdq
cli
(bad)
leave
xchg
pop
push
lahf
out
xchg
or
dec
push
add
movs
and
ret
pop
cmp
loop
mov
stos
pop
mov
retf
or
dec
cmp
out
dec
inc
test
jbe
into
movs
ror
cmps
inc
push
mov
imul
rcr
fidivr
jne
add
mov
sbb
and
(bad)
std
xor
stc
add
nop
iret
sbb
outs
xchg
push
mov
sub
mov
inc
jecxz
aam
aaa
in
xor
sbb
mov
test
int3
test
pop
jmp
enter
xor
sub
xchg
mov
mov
sub
mov
out
lds
sub
fdivr
xchg
lea
pop
pop
pop
loope
jnp
in
iret
inc
repz
or
mov
inc
dec
mov
loope
mov
scas
fxch
mov
and
add
dec
mov
dec
ret
stos
xchg
push
test
enter
(bad)
pop
in
ror
mov
sub
sbb
hlt
popa
ficom
(bad)
int3
js
xor
fwait
pop
add
jns
mov
outs
fdivr
sbb
push
out
jno
test
mov
mov
outs
enter
dec
dec
scas
cmps
jns
fbstp
sbb
pop
jmp
test
jno
jb
lea
xor
popa
loope
inc
stc
clc
leave
push
(bad)
jl
push
ins
imul
arpl
xchg
jbe
addr16
icebp
mov
pop
ins
es
xor
out
ins
jo
fbld
shr
sti
mov
rcr
shr
inc
scas
sbb
cmc
test
inc
iret
mov
inc
iret
adc
leave
cwde
or
fiadd
das
std
lock
xchg
rcl
imul
icebp
iret
cmc
clc
adc
and
pop
inc
mov
mov
fiadd
or
jmp
inc
add
(bad)
sub
jecxz
pop
mov
inc
pop
mov
xor
test
ins
cmp
fistp
pop
in
pop
call
push
mov
cmp
call
xchg
add
adc
cmp
sbb
aad
rcr
(bad)
shr
fmul
pop
ret
in
push
(bad)
les
cmp
jb
pop
jo
dec
adc
not
cmps
xlat
lods
add
mov
fs
inc
leave
mov
pop
loope
ds
jmp
mov
xor
jl
inc
adc
sahf
xchg
(bad)
push
cmp
iret
sub
imul
fnsave
out
(bad)
mov
and
sar
stc
push
addr16
cli
sub
ja
jp
out
mov
in
push
in
add
jno
and
dec
movs
lods
pop
popa
mov
imul
dec
add
xor
mov
imul
xchg
cmp
cmp
sbb
dec
cmp
pop
fdivr
jmp
sbb
stos
call
sbb
sbb
adc
or
jp
(bad)
movs
jp
jg
xor
mov
retf
push
sbb
in
pop
adc
fidiv
loope
(bad)
clc
fnstsw
sub
mov
xchg
push
loope
jmp
sub
loop
xchg
ror
call
sub
and
sub
mov
dec
rcr
xchg
mov
fnsetpm(287
inc
shr
xor
imul
jge
mov
mov
repnz
lods
jo
pop
pop
and
jnp
sbb
adc
or
fdiv
int
jmp
ficom
xchg
mov
mov
push
inc
push
jae
call
ror
fs
add
mov
push
idiv
jge
into
xchg
fmul
push
movs
(bad)
mov
pop
dec
adc
test
jmp
adc
ins
imul
dec
dec
jmp
push
push
test
mov
aas
(bad)
push
call
fild
nop
lods
test
mov
mov
adc
call
and
lock
sbb
ins
cmp
or
jge
mov
mov
xor
mov
outs
ss
mov
jns
leave
mov
fistp
sbb
xor
push
cmps
cmp
stc
clc
std
push
add
enter
fmul
out
hlt
jp
xlat
push
add
bnd
int
sbb
sti
pop
cs
push
(bad)
out
das
jmp
push
call
in
ins
xchg
clc
adc
push
ss
aas
icebp
int
retf
ins
ret
js
dec
repnz
in
clc
cmp
movs
jl
xor
aaa
in
fcmovnbe
cmp
add
hlt
jmp
clc
inc
mov
mov
xor
movs
outs
call
ins
imul
js
and
sub
jae
mov
out
mov
push
adc
(bad)
xor
lods
cmp
sub
fst
mov
loope
popf
test
push
add
inc
cmps
mov
nop
fsub
sti
rcl
cdq
(bad)
mov
leave
mov
jp
sbb
jmp
hlt
inc
adc
movs
jle
out
gs
dec
ror
mov
dec
rcr
(bad)
xchg
sbb
imul
dec
test
out
pop
stc
clc
cmc
xor
mov
mov
jge
aad
inc
inc
mov
popa
and
stos
cs
icebp
lahf
rcr
cmp
adc
fcom
jmp
loope
add
push
xchg
clc
adc
jmp
loope
imul
fsub
(bad)
jge
add
or
dec
jmp
into
push
fs
cmp
add
jae
mov
popa
lods
icebp
hlt
push
div
push
inc
mov
pop
fstp
inc
loopne
mov
retf
in
ja
test
push
loopne
lock
mov
push
jecxz
jo
arpl
push
arpl
jae
loop
repz
addr16
repnz
(bad)
not
pcmpeqb
(bad)
clc
pop
in
stc
push
jmp
add
pop
out
sti
push
imul
loope
push
mov
jecxz
repz
add
add
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fiadd
mov
loope
stc
aam
mov
loopne
stc
shr
or
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
imul
mov
popa
mov
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
arpl
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
push
outs
jmp
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
loopne
jb
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
(bad)
cwde
jno
or
dec
scas
popa
mov
pusha
mov
push
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
jno
add
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
lea
scas
imul
jno
inc
mov
rcr
mov
fdivr
js
push
cmp
push
mov
imul
lds
xlat
js
mov
pusha
mov
push
loopne
jo
loopne
lock
in
jae
jecxz
repz
je
fs
(bad)
in
ja
add
cmp
xor
cmp
pop
push
ja
ins
cmp
fcmovb
or
in
jae
jmp
jae
imul
(bad)
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
add
push
loope
jno
jmp
ja
pop
imul
shl
icebp
shl
icebp
shl
icebp
rol
mov
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
popa
or
fsubr
adc
popa
mov
shl
icebp
shl
icebp
ror
jno
popa
mov
loopne
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
dec
jno
add
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
push
outs
jmp
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
icebp
aaa
jno
popa
push
mov
popa
mov
scas
div
pop
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
popa
mov
push
jle
jno
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
sahf
in
outs
push
js
cmp
stos
icebp
fsub
or
repz
sub
shl
icebp
hlt
loope
push
mov
loopne
lock
jo
jecxz
jo
arpl
jae
gs
repnz
(bad)
hlt
(bad)
in
je
jmp
lea
push
hlt
fsubr
add
out
jnp
push
cli
fsubr
cmp
or
jnp
pusha
or
jecxz
jae
jecxz
jne
in
jnp
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
ficomp
jmp
jno
out
or
shl
jno
loopne
jns
add
jno
loope
call
mov
shl
icebp
shl
icebp
shl
mov
shl
mov
push
mov
loope
mov
popa
mov
popa
mov
shl
icebp
shl
mov
shl
mov
or
jo
popa
mov
pusha
xor
popa
div
push
mov
adc
test
xchg
mov
ret
bnd
pusha
jmp
test
mov
lahf
ins
repnz
inc
add
dec
hlt
ds
stc
jno
inc
jge
retf
sbb
(bad)
movs
sub
dec
fdivrp
mov
cmp
jp
xchg
(bad)
push
mov
ds
lock
xchg
or
fsub
(bad)
mov
cmp
pop
test
mov
ds
(bad)
mov
or
xchg
loop
ret
push
adc
lods
mov
dec
inc
jmp
in
loopne
and
mov
add
(bad)
jmp
cmc
mov
mov
mov
sub
dec
xchg
mov
jnp
push
sbb
xchg
push
mov
dec
loop
sbb
xchg
fld
xor
xor
mov
ret
into
mov
fiadd
mov
pop
outs
das
call
mov
fimul
sti
mov
mov
in
push
push
mov
dec
mov
lods
retf
dec
dec
out
push
dec
test
sub
sub
daa
jp
sbb
mov
es
mov
push
jae
dec
aad
push
sub
ret
movs
inc
inc
loope
out
shl
scas
pop
(bad)
jmp
popa
inc
or
inc
or
push
loopne
jle
xchg
sbb
push
mov
adc
jne
push
outs
sti
stos
push
pop
sbb
retf
push
in
sbb
cmp
arpl
mov
aad
dec
cmps
sub
xor
push
(bad)
mov
xchg
mov
and
inc
icebp
xor
int3
ficom
pop
test
add
mov
or
cmp
dec
aas
pop
aad
pusha
je
inc
xchg
add
xchg
xor
push
loop
out
iret
push
xchg
add
jno
jecxz
sbb
dec
lds
mov
add
or
jmp
icebp
push
inc
mov
cmp
pop
test
pop
or
mov
mov
push
popa
or
shr
xchg
or
sbb
popa
mov
sar
jno
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
mov
mov
stos
cmp
loope
bound
rcl
jno
popa
mov
nop
sbb
or
pop
pop
lea
jae
inc
adc
mov
dec
or
xchg
jle
xor
loope
mov
pop
js
lea
jno
in
inc
cmp
mov
xlat
dec
test
mov
add
cs
mov
fidivr
jmp
push
pop
call
iret
mov
mov
fstp
jo
outs
adc
or
add
bswap
jo
out
outs
mov
lea
hlt
jmp
cmps
cli
scas
mov
js
mov
nop
(bad)
or
jb
pop
push
or
dec
push
retf
(bad)
xchg
retf
inc
arpl
pop
inc
outs
je
lea
aas
jmp
cmp
popf
dec
add
mov
fsub
dec
jle
mov
(bad)
cmps
dec
push
clc
push
xchg
ja
pushf
int
icebp
retf
loopne
inc
enter
sub
iret
adc
jo
push
ficom
js
adc
xor
int
inc
jl
adc
aas
jg
test
(bad)
fild
sub
call
les
xchg
in
hlt
cmp
jge
jb
cmp
std
pop
inc
push
inc
and
inc
sbb
or
scas
cmp
fisubr
push
sub
pop
lock
add
mov
jne
or
int
iret
jl
xchg
loopne
test
dec
xchg
jle
mov
loopne
push
jbe
add
dec
sti
shl
in
add
loope
sub
stc
sbb
sub
xchg
mov
sub
popa
pop
out
cmp
adc
add
jg
(bad)
pop
es
out
cwde
xchg
cmp
xor
es
lods
add
mov
mov
xor
mov
sub
retf
sbb
xor
inc
cmps
lea
jecxz
movs
enter
in
jne
int
or
clc
test
inc
sbb
mov
enter
movs
ss
xchg
pusha
push
arpl
out
cmp
popa
(bad)
cdq
sar
jl
add
jp
nop
loop
por
jge
stc
mov
rcl
out
push
sahf
dec
sti
mov
int
mov
sbb
jmp
pusha
or
pusha
or
shl
lock
mov
shl
mov
shl
mov
pop
icebp
xchg
stc
(bad)
sub
imul
mov
out
repz
loop
pusha
rol
jne
jbe
test
cmp
ja
dec
hlt
sub
adc
push
adc
jp
mov
mov
sti
push
mov
adc
retf
jbe
pop
mov
mov
xchg
sbb
int
xchg
fisubr
adc
dec
dec
aas
or
and
fcomip
and
xor
jmp
pop
xor
xor
xor
xor
mov
test
punpcklbw
cwde
leave
sbb
lds
fs
mov
lock
add
push
add
in
jnp
pop
and
fidiv
cld
mov
or
retf
and
call
and
in
sbb
adc
leave
shr
mov
pop
mov
or
sub
test
mov
mov
sar
shl
or
ficom
push
fidivr
and
push
sbb
loop
sbb
push
(bad)
repnz
jb
xor
sub
and
in
sub
xor
or
test
idiv
in
gs
arpl
sub
retf
push
mov
inc
stc
in
cmp
(bad)
sub
xor
sbb
or
add
mov
cmp
push
jp
and
push
sbb
ds
int3
test
shl
pushw
mov
jecxz
mov
leave
rol
xor
in
xchg
out
push
fistp
add
dec
addr16
leave
pushf
pop
stos
jecxz
sbb
mov
add
mov
sti
xor
mov
inc
daa
and
jl
int
imul
leave
les
xchg
neg
in
jbe
cmp
jl
sub
add
(bad)
jmp
(bad)
and
mov
and
(bad)
jmp
(bad)
and
cmps
push
fs
and
pop
mov
int
add
sub
inc
xchg
xchg
and
and
add
in
cmps
pushf
sub
inc
xchg
xchg
inc
add
loopne
mov
sar
repnz
dec
add
shl
inc
loopne
mov
sar
repnz
dec
and
inc
add
out
add
shl
inc
loopne
mov
sar
repnz
dec
add
shl
inc
loopne
mov
sar
repnz
or
dec
data16
arpl
imul
dec
ds
xor
mov
mov
mov
ret
call
cld
fimul
jns
cmp
in
ds
(bad)
and
data16
cmp
iret
gs
or
push
sbb
sti
mov
gs
mov
gs
jae
add
sbb
int
or
shr
push
dec
xchg
xor
movs
daa
and
mov
stos
jecxz
call
inc
jmp
sbb
std
dec
scas
loope
lods
pop
mov
movs
mov
scas
jle
movs
lods
jbe
add
lods
mov
int3
xchg
dec
gs
hlt
adc
inc
cmp
xchg
shr
aaa
ret
(bad)
jo
clc
mov
ja
mov
pusha
adc
sub
inc
mov
cmp
jp
and
adc
xor
adc
scas
mov
sub
mov
and
fmul
mov
(bad)
int3
adc
mov
xor
les
fistp
int
xchg
fisubr
test
dec
leave
jmp
nop
inc
(bad)
pop
mov
pusha
jb
test
mov
jns
cli
mov
xchg
xor
pusha
shl
inc
pop
in
in
pop
jb
mov
sbb
push
jmp
scas
dec
imul
adc
repz
adc
sbb
or
or
icebp
into
adc
bound
imul
push
adc
adc
push
or
pop
into
out
inc
ds
daa
jae
push
pop
test
push
jecxz
mov
neg
pop
dec
test
cmps
int
xchg
fisubr
adc
dec
imul
ret
rcr
sbb
xchg
xor
jno
mov
fninit
sbb
test
ss
mov
dec
cmp
xchg
or
in
out
cwde
imul
mov
ficom
(bad)
lock
jmp
sbb
sub
imul
jb
popa
or
popa
mov
shl
icebp
push
jmp
add
leave
shl
sub
mov
js
clc
dec
adc
inc
scas
loopne
jne
loope
jno
sub
and
mov
js
cld
in
jmp
xchg
out
test
mov
stc
or
mov
movs
jl
ins
sar
or
mov
xchg
mov
jg
popa
xchg
xlat
mov
jae
mov
add
cmps
mov
sub
add
aam
loope
mov
push
clc
in
mov
js
mov
cdq
out
jne
xor
cmp
fisttp
ret
push
dec
push
cmp
push
cmp
xchg
jns
xchg
aad
cmp
or
shl
push
mov
mul
sar
cmp
iret
sar
push
inc
mov
mov
(bad)
pop
movs
in
sbb
sub
or
outs
push
and
push
push
pop
adc
mov
sub
xor
shr
repz
push
mov
out
sub
test
mov
scas
push
xor
and
pop
inc
push
cmp
mov
jp
in
repz
mov
and
test
ja
aam
pop
add
or
mov
cmc
dec
hlt
push
cmp
popa
xchg
mov
rcl
jmp
(bad)
aam
loope
mov
push
clc
in
mov
js
mov
cdq
out
jne
add
loopne
ins
pop
out
xlat
and
setge
push
pop
and
fldenv
cli
adc
mov
js
daa
pop
inc
pusha
adc
add
std
dec
fs
loope
inc
cmc
jmp
xor
cs
mov
addr16
or
sub
mov
push
mov
push
gs
push
xor
hlt
sahf
jae
xor
sbb
or
scas
shl
out
test
test
adc
adc
mov
or
mov
and
xor
sub
mov
pop
dec
(bad)
aas
cmp
sub
ficomp
push
fnstcw
pop
inc
pop
std
jbe
cdq
xchg
clc
mov
sub
cdq
int3
pop
clc
adc
fs
mov
inc
mov
sahf
sub
outs
dec
push
or
jl
rcr
add
test
inc
fwait
iret
pop
fadd
jne
inc
daa
ret
shl
daa
fadd
imul
out
stc
outs
ins
stos
add
test
push
add
sub
sub
dec
imul
scas
loope
and
aad
(bad)
cmp
(bad)
fild
mov
test
(bad)
sbb
jl
push
clc
mov
jle
fsubr
bound
not
xchg
xchg
addr16
xchg
add
test
jb
cs
dec
es
hlt
pop
jg
stos
(bad)
or
rcl
cwde
icebp
xor
jbe
nop
mov
es
fs
cmp
add
imul
in
sub
call
pop
imul
iret
dec
mov
cmc
push
sbb
jmp
fld
mov
pop
push
sub
pop
int
out
pop
rcl
cwde
icebp
xor
jbe
nop
mov
es
fs
cmp
add
imul
in
sub
call
pop
imul
iret
dec
mov
cmc
push
sbb
jmp
fistp
mov
and
xor
adc
cld
or
ds
in
pop
mov
fcom
outs
mov
lahf
fld
int
retf
in
(bad)
adc
xor
push
not
test
test
push
mov
xchg
smsw
arpl
leave
and
retf
(bad)
adc
xor
push
not
test
test
push
mov
xchg
lmsw
jge
jbe
xchg
adc
cld
or
ds
in
pop
mov
fcom
outs
mov
lahf
fld
int
retf
in
aad
addr16
inc
loope
std
mov
and
xor
lahf
fwait
lea
and
fimul
or
das
dec
(bad)
add
jmp
xchg
dec
or
push
sar
in
popa
fs
bound
mov
stos
lea
mov
xchg
sub
cmp
mov
icebp
fcmovb
aaa
push
mov
jae
popa
inc
cwde
into
adc
xlat
xchg
dec
stos
xchg
popf
sub
test
mov
adc
add
dec
adc
ins
xor
pop
test
adc
mov
xor
mov
loope
pop
dec
popf
and
pop
sbb
push
idiv
dec
pop
pop
call
and
stos
or
scas
mov
inc
cmps
mov
push
cmps
xchg
sbb
and
jle
mov
addr16
(bad)
sbb
call
inc
push
sbb
(bad)
(bad)
xlat
and
setge
push
int3
adc
pop
pop
pop
scas
inc
ficom
pop
jp
dec
or
cmp
cwde
mov
cwde
lds
cdq
add
cmp
cmp
pop
sbb
xlat
cmc
jg
enter
js
fst
inc
cmp
pop
xlat
xchg
mov
retf
jnp
in
leave
or
shl
xchg
push
popa
dec
fidivr
test
and
pop
sbb
jae
xchg
cs
dec
es
call
jmp
cli
inc
scas
(bad)
push
cmps
pop
hlt
retf
and
jne
or
popf
sub
xchg
fstp
mov
imul
dec
in
aaa
std
xor
retf
int
inc
out
push
loope
fstp
je
xlat
sbb
mul
rcr
fst
inc
int
mov
sbb
pop
mov
inc
dec
jmp
push
jge
mov
(bad)
es
inc
fdivp
xor
cs
sub
mov
mov
dec
push
fldcw
or
cmp
pop
xchg
sbb
retf
rol
cmps
iret
mov
xchg
scas
mov
je
gs
sbb
test
mov
(bad)
adc
(bad)
les
jl
xchg
sbb
cs
popf
and
push
add
xor
and
pop
not
daa
mov
jecxz
xchg
ins
xchg
shl
dec
cmps
mov
mov
or
mov
fld
les
mov
pop
mov
sahf
ja
adc
mov
sbb
inc
int3
fmul
jb
mov
dec
ret
jmp
out
xor
ret
xchg
inc
into
in
adc
int
aam
pop
lahf
jg
in
call
xor
scas
imul
mov
out
out
ficomp
cmp
or
stc
push
xchg
pop
pop
addr16
into
add
jge
shl
int
test
repz
or
popa
mov
shl
mov
push
jmp
or
js
stc
pop
stc
sub
rol
nop
or
inc
scas
loopne
jne
loope
jno
(bad)
fwait
mov
mov
aaa
fidiv
mov
out
push
sbb
adc
dec
sbb
or
sti
iret
fcom
push
or
imul
adc
je
retf
inc
clc
fdiv
pop
(bad)
pop
lea
xor
ds
std
jbe
push
popf
add
stos
cs
loop
mov
and
ds
jns
stos
dec
mov
call
jl
ror
test
jns
cli
push
jle
stc
or
ss
add
(bad)
xor
jnp
aaa
cmp
dec
pop
out
xor
sub
pop
or
cmp
in
dec
es
scas
int
shr
dec
enter
dec
rcl
push
mov
mov
jno
and
xor
inc
mov
ret
jmp
ror
out
pop
cmc
mov
(bad)
sub
enter
hlt
enter
and
mov
pop
stos
dec
mov
call
das
rcl
push
sub
sbb
call
addr16
pop
pop
add
mov
mov
out
dec
lock
cmp
mov
dec
jmp
xchg
stos
or
outs
sub
jmp
jle
out
gs
push
jle
xor
dec
jae
in
and
cwde
xchg
mov
bound
fnsetpm(287
sar
sti
cmp
dec
xor
retf
inc
xchg
or
push
out
pop
ins
fisttp
fwait
stos
xor
cmps
mov
rcl
sbb
sbb
shr
fwait
xchg
into
adc
adc
mov
ror
(bad)
mov
int3
fdiv
push
push
mov
and
mov
aas
retf
shl
mov
scas
adc
or
scas
aad
enter
mov
xor
int
cmp
sbb
xor
jmp
dec
jl
retf
cmp
sbb
xor
jmp
in
or
std
push
mov
vpshld
enter
movs
adc
test
out
push
mov
vpshld
enter
movs
push
or
ja
lods
inc
sahf
das
inc
popf
(bad)
or
fs
sahf
das
inc
popf
(bad)
or
dec
mov
iret
sub
(bad)
push
inc
pop
inc
repnz
mov
cdq
sub
(bad)
push
inc
pop
inc
repnz
mov
cdq
adc
jae
push
clc
pop
push
jecxz
fidivr
mov
mov
cmps
xchg
data16
outs
xchg
pusha
push
sbb
jbe
or
lahf
test
cdq
popf
lock
jo
sar
pusha
mov
imul
test
sub
push
xor
or
adc
xchg
xchg
mov
jno
into
in
cld
push
dec
aas
add
add
pop
xchg
jecxz
mov
imul
bound
pop
sbb
fwait
cmp
xchg
fnstcw
aam
lods
dec
cld
mov
sub
cld
lea
pop
lods
jl
mov
xchg
jno
add
adc
sub
or
xor
sbb
js
ins
dec
jge
shr
iret
pushf
int
loope
retf
clc
adc
neg
retf
out
lods
push
mov
lock
add
dec
add
mov
add
jo
mov
sbb
in
js
xchg
std
stos
xchg
(bad)
cs
xlat
dec
sub
or
pop
xor
(bad)
adc
out
push
daa
jmp
xor
in
pusha
call
xor
push
rcl
or
div
outs
lahf
(bad)
out
pop
repnz
cmp
jno
jp
push
dec
jno
dec
jae
sub
jbe
addr16
mul
or
mov
push
(bad)
into
mov
jg
dec
sub
(bad)
xor
jns
jge
test
das
sbb
xlat
movs
bound
and
inc
ja
cmc
ret
movs
dec
sbb
mov
scas
ja
push
mov
imul
push
xchg
call
xchg
and
jp
(bad)
stos
outs
scas
(bad)
fisttp
pop
fcom
mov
(bad)
jo
cmp
ja
push
dec
enter
push
dec
enter
vpunpckldq
leave
gs
cmp
ins
mov
lahf
mov
into
test
iret
sti
(bad)
rcr
and
sbb
test
add
pop
scas
loope
rcr
loopne
lock
bound
jo
popa
mov
push
jecxz
lock
popa
jo
nop
js
sub
dec
nop
jnp
call
clc
mov
enter
test
push
mov
cmp
and
adc
popa
or
inc
xor
shl
mov
push
dec
xchg
(bad)
dec
pop
lea
jp
jne
cmp
inc
push
aam
xchg
mov
fdiv
(bad)
xor
out
repz
sub
clc
and
movs
dec
out
jne
dec
scas
ret
sbb
arpl
mov
lahf
lock
dec
mov
dec
jmp
test
mov
mov
test
aaa
cmp
inc
stc
inc
adc
ret
xlat
push
or
dec
stos
ret
xor
dec
and
and
test
mov
xor
pusha
nop
in
cld
xchg
mov
rcr
xor
push
sbb
pusha
sbb
dec
dec
or
pop
(bad)
jnp
jg
cmps
sti
and
(bad)
or
cmp
int3
xchg
cs
fst
xor
fcmovnbe
push
out
push
push
retf
xor
and
cli
xchg
ficom
mov
ret
xchg
mov
retf
cwde
aaa
(bad)
cld
nop
out
into
div
fcmovnb
cmps
pop
ja
and
add
je
pushf
add
xor
cmp
mov
mov
int3
imul
add
jno
mov
call
inc
jmp
sti
jle
mov
out
movs
clc
lods
fdiv
push
aam
xchg
ror
xor
cli
xchg
cli
outs
xchg
adc
fwait
jne
ins
(bad)
sbb
sbb
sbb
xchg
sbb
sahf
enter
(bad)
ja
inc
and
dec
daa
jae
or
jbe
shr
push
mov
pusha
loope
add
in
mov
push
loopne
fistp
loope
dec
scas
mov
xchg
pop
cli
mov
push
pop
test
fsubr
icebp
jno
mov
outs
ss
xchg
ficom
sub
cmps
(bad)
jns
mov
inc
or
cdq
sub
imul
outs
jns
jne
lahf
movs
(bad)
mov
push
push
fistp
sub
and
xor
push
lock
inc
xchg
arpl
cli
not
ja
stos
adc
adc
jo
inc
mov
aam
in
and
pop
xor
sub
clc
and
movs
dec
pop
jne
xor
out
retf
mov
ss
mov
popa
jmp
ret
jno
data16
(bad)
hlt
cmp
fidiv
mov
ins
mov
in
(bad)
leave
jecxz
add
xor
cdq
mov
push
sar
mov
ret
and
je
jo
mov
jnp
(bad)
pop
mov
jne
dec
ja
push
or
icebp
push
mov
movs
fwait
imul
mov
jecxz
push
inc
lods
xor
mov
fild
stos
call
add
popf
pop
xor
pop
pushf
dec
or
aaa
test
sbb
or
call
gs
imul
push
push
dec
popa
xchg
call
mov
aaa
cmp
adc
push
mov
or
xor
push
pusha
jg
ins
pop
test
dec
ffreep
jo
mov
or
ret
jp
xor
in
xor
out
adc
push
mov
cli
shl
in
mov
mov
push
pop
cmp
xchg
in
xchg
test
jbe
jno
(bad)
or
imul
pop
adc
pop
fldenv
xor
sti
xchg
cmp
fnstenv
rcr
test
mov
add
popa
ja
inc
cmp
mov
or
sub
icebp
fcom
test
test
ins
push
in
bound
xor
in
loope
sbb
inc
xor
scas
into
jbe
dec
out
ds
xchg
inc
and
cmp
std
jmp
call
out
sbb
rol
adc
mov
push
(bad)
pop
cmp
xchg
in
xchg
test
sub
jl
cli
das
push
aas
cmc
or
jg
xor
push
sti
and
jns
jg
jb
rcl
inc
popf
xchg
add
enter
jecxz
add
lods
stc
push
out
push
jne
mov
out
mov
and
in
enter
xor
scas
inc
mov
(bad)
(bad)
pushf
mov
leave
sbb
inc
retf
sub
adc
add
ret
scas
inc
mov
or
sbb
cmp
mov
jmp
retf
or
nop
jmp
pop
push
mov
xchg
fsub
into
cmp
pop
daa
fwait
sub
pop
retf
push
mov
cmp
xchg
mov
xchg
xor
adc
into
inc
or
push
adc
xchg
push
push
adc
dec
imul
push
out
mov
scas
mov
mov
sbb
xchg
nop
mov
jae
adc
lds
mov
add
ss
adc
into
inc
or
push
adc
xchg
push
push
adc
dec
imul
push
out
mov
scas
mov
mov
push
sub
(bad)
into
mov
rcl
or
cmp
cmps
imul
int
xor
mov
jp
int3
jno
or
pushf
dec
dec
sub
ds
mov
dec
adc
push
retf
jmp
dec
or
shr
pop
cmp
push
stos
pop
dec
inc
mov
push
cmp
push
ss
out
add
in
mov
icebp
pop
cmp
sbb
or
dec
or
imul
addr16
xor
xchg
jb
js
lods
stc
jae
(bad)
or
sbb
and
push
hlt
sahf
int
in
mov
js
stos
stc
sub
lods
sbb
retf
and
adc
push
(bad)
test
mov
sbb
fiadd
push
or
jmp
mov
fsubr
mov
sbb
dec
xchg
sub
leave
mov
add
sbb
hlt
mov
int3
in
sets
cmps
outs
ss
push
mov
mov
mov
sbb
rcr
fbld
sbb
int
or
in
inc
mov
sbb
xchg
retf
ret
test
pop
movs
int
retf
shr
iret
sub
cli
jno
dec
cmp
push
pop
sbb
in
push
mov
sub
push
mov
faddp
ds
ret
cmp
inc
pop
aam
dec
add
and
xchg
movs
xlat
pop
cmp
ss
out
mov
gs
xor
and
mov
fisubr
imul
les
test
shl
inc
pop
mov
jl
and
lock
pop
add
push
fdivr
dec
cmp
rcl
xchg
jnp
mov
mov
imul
stc
jae
sub
outs
jae
daa
inc
mov
dec
fs
push
sti
sbb
out
mov
and
or
hlt
or
adc
push
ficom
test
dec
push
out
cmp
sbb
inc
sub
pop
retf
push
out
jmp
pop
loope
cs
test
pop
inc
mov
xchg
dec
loop
cdq
mov
xchg
sbb
std
test
repz
(bad)
rcl
out
cmc
ss
into
sub
jnp
or
push
call
and
and
retf
dec
mov
jmp
fistp
call
pop
jg
enter
stos
aam
xor
mov
and
pop
rcr
sub
in
(bad)
lods
outs
call
mov
mov
rcr
ret
lods
test
add
loope
jl
sub
aad
test
sbb
aaa
fs
out
mov
in
xor
and
cmp
and
mov
or
(bad)
out
int
ret
and
sahf
icebp
inc
xchg
movs
sub
xor
out
mov
daa
or
dec
adc
icebp
in
fdiv
sbb
ret
mov
inc
pusha
sar
cli
inc
sbb
fsub
push
cmc
and
push
mov
ffree
lock
inc
and
sub
jg
stos
push
dec
adc
jge
ja
push
or
pop
fiadd
inc
jno
out
adc
and
mov
xlat
test
dec
sahf
shl
xor
xor
retf
iret
jg
aaa
xchg
add
outs
fisub
rol
mov
jb
jns
mov
mov
add
cmp
in
(bad)
cwde
loop
call
in
imul
and
adc
jns
popf
lds
sub
inc
adc
pop
ret
xor
fdivrp
das
cmc
mov
jmp
scas
jb
shl
je
push
and
mov
in
int3
bound
fstp
inc
cmp
outs
scas
mov
inc
jmp
icebp
jnp
xchg
or
scas
loope
in
loopne
jo
popa
or
popa
or
shl
icebp
push
stc
and
ror
fstp
pop
jno
sub
popa
or
mov
xor
sar
test
cld
addr16
outs
xor
push
out
xor
mov
dec
mov
cmps
pop
jmp
jge
xor
pop
loope
gs
rcl
xchg
(bad)
adc
dec
fcmovnu
cmps
pop
lds
mov
out
pusha
sahf
cmc
mov
(bad)
mov
not
xchg
adc
mov
xor
rcl
mov
jne
sti
pop
mov
and
rcr
das
cwde
rol
cmp
out
xchg
js
jl
add
mov
xchg
adc
xor
jle
movs
fld
xchg
mov
mov
loop
jae
enter
or
into
shr
mov
int3
jo
sbb
shl
outs
mov
out
xchg
aaa
mov
xchg
or
jecxz
cdq
out
leave
inc
lahf
fs
repnz
retf
sbb
cdq
jmp
ja
mov
ds
jg
or
push
ds
pop
lahf
cwde
loope
xchg
jl
imul
sar
ret
inc
sbb
out
mov
xchg
xchg
jmp
pop
mov
xchg
mov
(bad)
mov
popa
add
(bad)
jmp
push
and
push
fwait
xchg
and
jo
fwait
stos
inc
fwait
jnp
inc
imul
or
popa
addr16
aaa
sbb
fdiv
xlat
fprem
cmp
arpl
repnz
adc
dec
jmp
xchg
jp
push
add
push
pop
fsub
mov
popf
sbb
scas
sar
sub
adc
fcmovnbe
ret
(bad)
rcl
or
and
mov
popa
rcr
scas
xchg
cmp
shr
push
cmp
cmp
or
jno
ret
mov
pushf
mov
outs
movs
mov
adc
cld
jmp
in
cmc
add
aas
stc
xchg
imul
repz
data16
mov
cmp
jns
into
mov
add
inc
out
shr
pop
and
sbb
cmp
mov
cmp
inc
jne
fld
in
cmps
les
jb
pop
cmp
ja
jge
sbb
xchg
add
jbe
in
fdivp
dec
inc
ret
repz
cmc
outs
shl
jno
cs
xor
push
stos
jmp
adc
scas
hlt
ret
enter
imul
scas
or
sbb
iret
jns
cmp
repnz
fldenv
jnp
sti
popa
sbb
mov
xlat
dec
inc
xchg
imul
jmp
mov
add
xchg
or
sti
popa
sbb
mov
xlat
dec
xchg
fimul
add
and
mov
dec
xchg
push
dec
nop
xor
push
std
pushw
(bad)
aaa
mov
leave
test
ds
aad
pop
xchg
jnp
mov
aas
jl
mov
test
sahf
cmp
fld
mov
mov
mov
fiadd
add
enter
daa
jmp
and
into
push
out
ret
pushf
loope
jae
daa
sub
jae
and
or
into
inc
push
adc
push
xchg
clc
cmc
xchg
jmp
jmp
mov
xchg
iret
jle
add
push
sub
and
imul
jne
pop
rcl
jp
lahf
xchg
push
mov
jbe
xchg
test
not
cmp
pushf
call
sub
jl
push
test
cmp
ins
sbb
inc
or
pop
sub
cs
add
mov
sahf
icebp
and
cmp
xchg
mov
adc
in
jb
pop
mov
mov
cmp
jns
or
outs
push
mov
bound
inc
pushf
loop
sbb
xchg
dec
mov
inc
jl
(bad)
dec
push
add
push
jbe
cdq
jge
pusha
cwde
icebp
adc
cmp
pop
js
dec
cmp
dec
retf
out
(bad)
mov
push
icebp
nop
and
movs
mov
lock
push
fild
mov
stos
fistp
xlat
ror
jns
or
and
loopne
jg
add
mov
cs
mov
xchg
pop
scas
jmp
repnz
stos
fcomp
or
mov
fnstcw
sar
mov
mov
(bad)
fcomp
dec
push
lods
cmp
loopne
std
cmps
retf
std
cmp
in
fcomip
or
push
lds
jno
xor
xchg
mov
sbb
retf
bound
mov
retf
add
dec
fdivrp
loope
loope
jge
and
(bad)
mov
cmp
add
(bad)
outs
mov
push
or
jns
ins
sub
xlat
xchg
retf
jge
push
in
movs
jmp
sbb
rcl
jg
cmp
pop
std
add
in
mov
fisub
and
lds
mov
dec
sbb
fadd
inc
or
mov
pusha
fidiv
nop
or
xchg
mov
rol
cli
push
adc
pop
sub
or
jmp
nop
inc
test
ds
add
cdq
xchg
cmp
call
out
dec
out
mov
cli
and
enter
xchg
std
nop
retf
cmp
out
mov
imul
out
adc
(bad)
pop
outs
loope
adc
jae
push
mov
mov
jb
jno
loopne
fadd
cmp
rol
xor
and
and
inc
push
fbstp
call
mov
push
nop
bound
lea
nop
test
mov
div
jg
pop
xor
xchg
xor
xchg
xchg
stos
add
sbb
rcr
out
outs
xor
stc
movs
pushw
push
push
cmp
push
mov
popa
or
popa
mov
jmp
ja
scas
mov
mov
push
mov
fisubr
push
or
inc
popa
mov
test
mov
div
mov
and
xor
cmc
push
sbb
cli
pop
fs
sub
scas
cmps
stos
pushf
mov
leave
sub
stos
and
mov
hlt
mov
sbb
mov
ja
or
push
push
or
inc
push
or
push
test
mov
inc
call
test
aad
inc
call
test
aad
test
jecxz
inc
icebp
jecxz
jae
dec
hlt
lods
ds
repz
lods
test
xlat
ror
ret
scas
mov
popa
mov
mov
mov
push
or
or
out
stos
enter
xchg
cmp
lods
push
mov
push
ja
inc
mov
sub
popa
bnd
push
mov
inc
cmps
jp
shl
or
or
push
loope
push
scas
jge
icebp
cmps
loope
mov
jecxz
jae
popa
or
popa
mov
shl
xor
cmp
fxch
jns
mov
or
mov
imul
pusha
in
pushf
shl
pop
jo
push
cdq
mov
retf
dec
sub
outs
fidiv
adc
mov
fs
and
sbb
in
mov
pop
cwde
jo
xor
imul
(bad)
int3
call
jg
cmp
or
mov
cmp
pop
mov
mov
lahf
(bad)
jecxz
adc
push
enter
movs
out
add
add
sub
adc
test
sar
mov
(bad)
aaa
xor
fs
pushf
fisubr
jnp
inc
mov
aas
xchg
dec
or
fcomp
cwde
nop
push
les
pop
loop
(bad)
cmp
ss
repz
rcr
ficomp
shr
imul
mov
call
cmc
inc
loopne
xor
call
(bad)
xchg
mov
xor
mov
inc
call
or
imul
sbb
rcr
jae
pop
mov
sbb
fmul
clc
test
adc
shl
sbb
fyl2x
jmp
jmp
ficomp
cmp
cmp
rcl
jl
loope
or
or
jl
mov
dec
test
cmp
enter
xchg
stos
in
add
xchg
xchg
and
icebp
js
mov
fmul
push
stos
push
xchg
dec
jo
ffree
pop
adc
and
mov
or
outs
xor
xor
fcmovnbe
sahf
jl
xchg
sbb
xchg
mov
stc
pop
in
cmp
(bad)
add
sub
shl
rol
shl
cmp
mov
mov
push
xor
ins
leave
(bad)
daa
jmp
xchg
pop
leave
push
loop
lods
dec
loop
aad
add
in
mov
cmp
adc
and
es
arpl
mov
les
push
loopne
jmp
sbb
fyl2x
jmp
push
and
pop
sbb
sbb
pop
loop
pop
movs
xchg
pop
mov
clc
call
push
es
std
mov
int3
(bad)
mov
std
push
iret
add
shl
scas
mov
and
aas
clc
sbb
fmul
inc
sbb
jnp
iret
sbb
pop
or
iret
test
rcl
xor
jle
mov
pop
sub
or
fs
pop
repnz
aam
test
jg
xchg
scas
js
fcmovb
mov
push
push
mov
mov
inc
out
pop
xor
int3
xchg
in
or
mov
sbb
scas
(bad)
(bad)
call
in
in
test
and
mov
cwde
push
push
(bad)
inc
out
pop
xor
int3
xchg
in
or
mov
sbb
scas
(bad)
(bad)
call
in
in
test
and
xor
mov
xor
repnz
fwait
enter
mov
pop
xor
nop
and
jp
repnz
fwait
enter
mov
jmp
ror
shl
jp
repnz
fwait
enter
mov
pop
xor
nop
and
jp
repnz
fwait
enter
mov
pop
xor
nop
mov
sti
sub
jmp
dec
repz
dec
shl
adc
pushf
test
fistp
jb
movs
fmul
ror
rcr
or
sub
cli
push
stc
add
fsub
jae
fcomi
nop
push
sbb
sub
or
scas
js
test
push
call
xchg
ins
fimul
sub
push
adc
mov
jbe
mov
jno
rcr
jo
xchg
fnstenv
stos
mov
dec
or
ds
mov
sub
or
loopne
adc
add
test
xchg
mov
mov
inc
in
ja
or
int3
out
adc
iret
into
adc
add
bound
cdq
push
jp
ss
mov
(bad)
sar
pushf
or
fild
adc
lods
ds
push
ficomp
js
xchg
jbe
cld
xchg
sub
push
fs
push
inc
enter
(bad)
fstp
adc
idiv
pop
loopne
push
xchg
outs
xor
fucom
ret
add
dec
or
inc
xor
repz
inc
sbb
dec
mov
mov
mov
cmc
out
out
call
shl
std
enter
jl
mov
out
aam
stos
sar
test
xchg
xor
ret
(bad)
(bad)
adc
xor
mov
ror
mov
push
imul
mov
pusha
and
leave
mov
inc
(bad)
bnd
cmp
pop
push
mov
or
and
mov
push
dec
mov
or
pushf
shl
cmps
movs
jmp
mov
cli
or
scas
pop
aaa
setns
sub
jmp
cdq
push
ss
rcr
and
ret
call
loope
xchg
add
adc
repnz
and
xor
adc
loop
cmps
add
or
repnz
pop
xchg
cmc
cmp
dec
inc
and
jp
fsub
rcl
jp
push
lods
jmp
(bad)
mov
or
lock
jg
bound
xor
mov
repnz
sti
cld
xchg
sub
cdq
loopne
(bad)
clc
call
int
inc
sub
(bad)
jl
leave
jge
and
ffree
dec
std
add
add
jge
cmp
cld
pop
or
push
push
popa
add
dec
test
and
iret
mov
movs
xor
sar
adc
scas
jmp
xor
or
adc
sbb
xor
push
aad
inc
xor
lods
repz
jno
jmp
jecxz
icebp
shl
mov
popa
or
loope
icebp
shl
nop
jno
jmp
sub
add
sbb
mov
push
mov
mov
push
jle
jno
and
xor
ss
js
fadd
les
shr
add
ss
aad
outs
cmc
outs
mov
aas
jb
fild
fwait
pop
dec
sbb
or
adc
int3
aad
inc
test
xor
or
mov
xchg
sbb
into
mov
jne
pop
pop
inc
inc
jo
dec
or
or
dec
push
aad
(bad)
movs
and
xchg
cli
ja
popa
aam
sbb
fdiv
(bad)
outs
cmp
mov
dec
pushf
xchg
mov
jl
push
adc
fbld
mov
outs
jmp
in
rcr
jae
sbb
dec
test
dec
xchg
dec
cmp
(bad)
push
cmp
fxch
ret
mov
jl
enter
pop
arpl
add
cmp
out
out
mov
imul
fucomip
inc
sbb
rol
or
push
outs
sub
(bad)
push
int
cdq
jno
xchg
mov
fld
xchg
rol
mov
push
call
popf
push
xchg
repnz
and
lahf
push
inc
mov
push
movs
(bad)
xor
sub
lock
mov
pop
imul
xor
mov
loope
(bad)
pop
cli
push
ss
imul
or
repnz
sbb
call
jp
(bad)
ficomp
int3
xchg
inc
mov
in
shl
add
add
add
sbb
cmp
pop
mov
cmp
lods
and
test
push
add
xlat
hlt
repz
fst
add
add
jo
xlat
data16
shr
jl
inc
xor
mov
aad
inc
mov
mov
data16
adc
ss
or
fsub
out
js
das
jbe
sbb
call
and
add
mov
(bad)
lods
and
or
dec
adc
frstor
and
push
mov
stos
sti
dec
mov
daa
jp
ds
mov
mov
ds
or
cmp
retf
cmp
retf
cmp
inc
push
fnclex
call
adc
repnz
ins
addr16
sbb
mov
xor
not
xor
movs
xchg
movs
xchg
movs
xchg
call
push
pop
outs
in
dec
cld
jae
lahf
push
sub
xchg
call
js
cli
dec
mov
in
fstp
rcl
push
pusha
pop
imul
imul
sbb
cli
test
movs
sti
push
js
pop
cmp
mov
jge
mov
mov
in
jp
sbb
add
jne
out
mov
adc
std
sahf
shl
adc
adc
out
and
shr
xchg
(bad)
adc
out
lock
rcr
xlat
adc
enter
fstp
mov
inc
ins
sub
push
cli
shr
push
rcr
sbb
mov
sbb
inc
jo
add
lods
jae
(bad)
mov
and
sbb
imul
int
jg
loope
pop
scas
jns
sub
push
sub
inc
jb
sbb
and
test
jns
pop
inc
ja
adc
retf
pop
inc
jbe
fisub
ror
in
xchg
inc
sar
push
call
lahf
jo
outs
or
or
dec
stos
fnstenv
les
pusha
dec
arpl
xor
pop
popa
test
add
js
pop
pop
ds
test
dec
push
dec
loopne
jbe
push
mov
xor
jbe
add
jmp
(bad)
jg
mov
int
mov
xor
cmp
mov
push
jbe
std
and
mov
mov
pop
or
test
jae
inc
xchg
(bad)
ja
push
xor
pop
(bad)
ins
pop
jae
rcl
retf
jle
outs
push
sub
add
ds
popa
mov
pop
pusha
or
loope
jo
popa
or
loope
icebp
push
stc
test
inc
mov
xor
dec
cdq
ja
pusha
in
pushf
shl
pop
icebp
push
outs
fdivr
lods
cmp
sub
pusha
push
icebp
xor
push
hlt
ret
sub
daa
add
movhps
mov
adc
stos
dec
lea
xor
shr
cmp
ss
and
dec
mov
scas
cmp
mov
fild
inc
pushf
out
out
(bad)
fcom
mov
out
mov
cmp
sti
pop
add
sar
fdiv
pop
dec
cdq
in
fucompp
add
aad
into
mov
ss
into
dec
dec
sbb
(bad)
inc
push
push
or
popf
mov
es
inc
call
sbb
sub
adc
and
mov
and
fsubr
or
inc
sub
ret
push
push
and
pop
or
push
mov
inc
icebp
adc
or
dec
mov
jno
and
ret
outs
mov
and
test
fidiv
or
sti
loope
lds
ret
sub
mov
call
in
fimul
scas
xor
cmps
gs
movs
mov
inc
sbb
jns
fistp
cmp
ins
loop
cld
enter
pop
sbb
aas
les
inc
adc
push
mov
xor
and
sbb
cmp
mov
into
mov
iret
push
inc
loop
cwde
aad
pusha
jge
ficomp
cmp
stc
xchg
mov
cmp
pop
and
out
jecxz
gs
aaa
dec
sahf
call
data16
leave
daa
div
enter
mov
daa
jge
jmp
int
stos
and
cmp
mov
inc
mov
adc
jecxz
cmovno
pop
leave
jbe
cmps
(bad)
jo
xchg
push
jg
lods
mov
outs
jecxz
lock
cmp
xor
mov
stc
or
add
in
inc
popf
and
sbb
jecxz
add
(bad)
xor
and
rcr
and
iret
push
or
movs
xchg
fdiv
sub
punpcklbw
sbb
adc
push
inc
inc
pop
pop
adc
and
jbe
nop
in
mov
mov
mov
or
pop
std
loope
xacquire
sahf
and
pusha
adc
mov
(bad)
enter
dec
cmp
cmps
jmp
mov
shl
loope
adc
pop
push
pushf
jmp
xchg
loope
cwde
cs
sbb
jo
ret
(bad)
scas
fsubr
lahf
mov
jmp
mov
mov
xor
xchg
js
in
imul
addr16
sub
outs
push
push
sbb
mov
jb
push
hlt
push
pop
and
or
pop
pop
jbe
jmp
in
ss
mov
movs
mov
cmp
push
mov
ror
int
fsub
popf
mov
leave
push
fld
pop
cmc
mov
mov
sub
rol
or
in
mov
jmp
fdivrp
push
stos
cdq
xor
neg
sub
pop
inc
les
std
fadd
dec
test
or
sti
cmps
jae
clc
jb
inc
jno
in
sbb
pop
lods
lods
mov
xchg
cli
int3
outs
dec
clc
adc
(bad)
call
imul
push
push
mov
jae
rcl
pop
jbe
jmp
in
mov
test
mov
push
stc
es
jb
retf
dec
xor
mov
cmp
int3
adc
dec
xchg
jmp
mov
sub
adc
pop
pop
call
pop
dec
dec
ret
xchg
adc
xchg
mov
aas
mov
das
cmp
daa
cmps
jae
add
xchg
ins
jnp
or
(bad)
push
gs
pop
jecxz
cmp
inc
mov
mov
push
ret
xchg
adc
xchg
mov
aas
mov
das
cmp
daa
cmps
jae
add
xchg
ins
jnp
or
sahf
push
outs
shr
mov
fs
arpl
mov
stc
dec
popa
lods
das
ds
ja
jp
pop
popf
shr
mov
fs
jecxz
sub
fprem1
mov
sbb
push
adc
out
cmp
pushf
dec
stos
fdiv
nop
and
or
pop
neg
inc
or
jno
xchg
call
(bad)
fucom
fsub
mov
xchg
ret
dec
mov
inc
stc
clc
ret
retf
fwait
sub
fld
mov
mov
sti
ror
lods
sbb
idiv
outs
or
neg
mov
ror
(bad)
ins
inc
out
repz
lds
cmp
fcmovne
xchg
or
and
hlt
loop
inc
aam
cld
mov
rcl
ss
cmps
inc
or
pop
push
nop
inc
cmp
mov
inc
aam
gs
jg
mov
scas
hlt
aas
retf
fidiv
je
imul
sbb
lea
adc
sahf
fstp
xchg
add
xor
mov
lock
pop
xchg
mov
call
add
cld
and
push
data16
mov
mov
cmp
dec
mov
test
jmp
movs
cmp
mov
fwait
push
(bad)
retf
std
fnsave
mov
push
mov
loopne
sub
addr16
adc
div
mov
cmp
mov
ins
out
je
mov
mov
mov
add
adc
int
imul
xchg
jecxz
xchg
xchg
dec
aad
sti
mov
pop
jl
jae
jl
test
ror
arpl
dec
sahf
sbb
(bad)
sub
bound
push
in
enter
sahf
dec
lods
pusha
xchg
lea
xor
lods
mov
or
xor
jno
xor
sti
mov
mov
js
sub
and
gs
mov
aad
hlt
push
dec
stos
sbb
not
sbb
sbb
inc
cmp
sub
xor
nop
and
rcl
cmp
out
inc
dec
or
mov
shl
mov
into
cmp
call
loop
retf
cld
and
retf
rol
adc
out
mov
push
loopne
mov
outs
mov
arpl
push
jg
out
add
loop
jl
int3
adc
dec
je
enter
frstor
loopne
inc
inc
fadd
pop
xor
loopne
jne
test
cdq
addr16
movs
dec
mov
loopne
dec
lahf
loope
xchg
dec
dec
fild
movs
sub
lahf
mov
xor
cmp
enter
loop
mov
cdq
sbb
adc
mov
call
retf
popf
xchg
stos
adc
or
rol
pop
sub
std
fxch
pop
loope
and
adc
leave
outs
movsx
(bad)
xor
mov
add
push
sti
sbb
sub
mov
pop
lock
(bad)
fnstenv
inc
sbb
cli
repz
pop
cmp
mov
movs
hlt
or
fwait
inc
inc
test
hlt
call
cdq
mov
and
out
loope
jp
xchg
push
lahf
cmp
rcl
dec
cmp
cdq
sbb
shl
(bad)
ret
cli
call
inc
adc
lock
fimul
in
xor
cmps
mov
test
rol
sahf
jp
ja
or
pop
test
cmp
mov
cwde
and
pop
ds
aad
mov
or
or
out
mov
loope
or
shl
push
dec
lahf
cmp
xor
adc
mov
loopne
pusha
clc
fstp
gs
loope
pop
fbld
cmps
repz
sbb
push
enter
adc
dec
push
mov
das
dec
lea
scas
imul
jno
dec
or
push
push
mov
fdivr
js
push
cmp
push
mov
imul
lds
xlat
js
mov
pusha
mov
push
loopne
jo
loopne
lock
in
jae
jecxz
repz
je
fs
(bad)
in
ja
add
cmp
xor
cmp
pop
push
ja
ins
cmp
fcmovb
or
in
jae
jmp
jae
imul
(bad)
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
add
shl
cmp
jmp
ja
pop
ins
mov
shl
jno
popa
mov
shl
icebp
shl
mov
pusha
or
push
popa
add
jno
popa
or
popa
mov
shl
icebp
shl
mov
push
bound
mov
imul
icebp
adc
icebp
adc
icebp
push
retf
in
or
outs
gs
stos
in
add
cmp
jge
pop
sub
call
add
and
daa
clc
imul
dec
xor
outs
loope
xor
js
mov
xchg
xchg
fidivr
inc
pop
jnp
or
inc
push
mov
inc
aaa
fst
shl
mov
shl
sbb
shl
mov
push
popa
mov
shl
icebp
shl
mov
push
loopne
jb
jns
jns
icebp
sbb
fisttp
bound
pusha
je
shl
daa
enter
push
fs
pop
inc
push
jl
mov
sbb
outs
imul
pop
imul
xor
retf
inc
repz
test
pop
push
popa
sahf
in
movs
(bad)
mov
ret
cwde
fcom
lds
das
test
pushf
adc
movs
int3
mov
adc
pop
out
jo
enter
mov
inc
cmp
or
add
outs
xchg
mov
dec
jo
dec
lahf
(bad)
sbb
mov
push
inc
sahf
or
pushf
aam
in
pop
sub
push
lea
jnp
inc
icebp
jmp
nop
es
sub
stos
cmp
cmp
daa
inc
sahf
sub
in
add
dec
scas
loope
addr16
mov
shl
jb
popa
mov
shl
icebp
shl
add
jns
js
arpl
popa
push
leave
cmp
jno
lock
adc
mov
sbb
rcl
std
dec
push
movs
adc
adc
imul
jmp
(bad)
scas
sbb
add
mov
sub
in
sbb
adc
shl
ror
ds
pop
inc
pop
and
lods
test
cmps
movs
in
fs
xchg
pop
into
mov
fdiv
dec
cmc
jecxz
and
js
and
adc
retf
inc
rcr
repz
sub
sub
popf
xor
fisttp
add
rcl
sub
lods
xor
inc
xchg
jmp
xchg
cmp
adc
dec
push
pop
pop
js
in
mov
fst
adc
cmp
lea
mov
cmps
inc
repnz
push
sar
fs
mov
call
fwait
int3
rol
mov
pop
loop
dec
shl
pop
test
stos
pop
xchg
jb
add
sbb
popa
mov
shl
icebp
shl
icebp
rcl
div
shl
mov
push
push
inc
imul
jno
popa
or
shl
mov
shl
jo
jmp
sbb
cmp
push
js
xchg
jns
sar
lock
inc
push
or
mov
scas
popa
mov
pusha
bnd
xchg
lahf
push
icebp
rcr
test
sub
xor
std
adc
enter
stos
sub
mov
repz
add
popa
jnp
data16
popa
dec
dec
scas
int
sbb
pop
jmp
push
pop
push
(bad)
sti
jno
test
mov
dec
add
pop
add
dec
add
sbb
arpl
xchg
push
xchg
cmp
sub
push
mov
adc
stos
jle
add
inc
cmp
adc
fisttp
inc
jmp
pop
jl
mov
sbb
ds
fwait
mov
stos
lds
cmp
mov
mov
setb
cmp
ret
jbe
repz
data16
or
mov
sub
div
in
movs
mov
mov
fimul
mov
stos
(bad)
pop
movs
adc
jle
xor
mov
push
aad
xchg
xchg
inc
test
fxam
cmc
movs
pop
pop
push
mov
jl
loop
pop
add
in
fisttp
inc
outs
(bad)
cdq
cli
les
and
xchg
inc
or
stos
lods
sahf
lahf
xchg
rcl
push
lods
scas
mov
jb
std
inc
cmp
stos
cmp
xchg
sbb
rcr
or
loopne
sbb
xor
sub
imul
push
leave
loop
fimul
aas
movs
cmps
imul
test
outs
test
int
mov
mov
lds
aam
loopne
pop
and
cmp
ja
inc
fucom
dec
test
test
jmp
shl
or
push
loopne
repz
repz
icebp
shl
sbb
leave
cmp
mov
dec
adc
mov
cdq
ja
xor
mov
icebp
adc
scas
cmps
pop
out
cwde
int
or
inc
cli
cmp
sub
test
sbb
xchg
push
pusha
push
test
jnp
aas
fcmove
pop
cwde
cmps
ret
bnd
xchg
xlat
xlat
pop
adc
inc
mov
adc
or
add
xor
pop
dec
jno
pusha
pop
mov
mov
dec
mov
rcr
aas
repnz
mov
push
lods
sbb
mov
sahf
pusha
xchg
xchg
scas
call
adc
cmc
jg
popa
and
stos
je
mov
push
les
lock
test
mov
(bad)
(bad)
(bad)
movs
sbb
fld
cmps
jmp
fwait
scas
and
or
cmp
add
outs
push
sub
mov
sbb
call
xchg
dec
xchg
loop
xchg
mul
sub
scas
test
fs
pushf
inc
pop
or
addr16
adc
nop
jo
or
cmp
(bad)
jmp
push
xchg
in
or
and
fs
dec
test
mov
add
push
cmp
mov
push
loope
icebp
shl
icebp
shl
mov
ror
outs
or
add
icebp
rcr
jmp
loopne
jno
loopne
lock
popa
mov
shl
mov
shl
adc
push
shl
push
js
inc
test
mov
loope
icebp
push
jle
jno
cwde
(bad)
movnti
sbb
mov
xor
pop
ret
aaa
jns
repnz
out
test
push
cmp
call
ffreep
pop
push
mov
dec
jmp
xchg
repz
std
scas
jecxz
mov
jecxz
sub
div
aas
stc
jge
and
jo
dec
loope
push
add
jge
pop
movs
loopne
sahf
jae
popf
push
scas
int3
dec
repz
xlat
sbb
cmps
inc
int
into
mov
les
push
mov
icebp
fstp
or
add
add
out
in
(bad)
out
mov
ret
jo
int3
jnp
imul
and
mov
push
push
pop
in
xchg
dec
cmps
aad
adc
push
dec
test
mov
dec
icebp
es
mov
stos
outs
dec
scas
inc
push
mov
retf
mov
outs
sub
xchg
adc
fld
add
push
loopne
icebp
push
popa
mov
popa
mov
shl
icebp
shr
xor
sub
push
gs
push
jle
jno
daa
js
fistp
loopne
pop
jge
mov
js
sub
adc
mov
dec
scas
loope
loopne
popa
or
pusha
mov
push
popa
or
shl
xor
stc
test
inc
pop
add
test
or
scas
popa
mov
imul
lock
jae
jmp
fbstp
ss
movs
adc
test
(bad)
rcl
inc
retf
and
jns
inc
mov
fwait
retf
inc
loopne
cmp
loope
lods
dec
add
xchg
int3
dec
out
and
dec
stc
jge
xor
ret
ror
das
jb
mov
dec
(bad)
mov
fstp
nop
scas
sbb
xchg
(bad)
push
loope
out
dec
jno
in
push
add
out
inc
ins
ror
add
xchg
jecxz
mov
mov
ror
adc
sbb
mov
(bad)
outs
push
or
jle
and
cmps
in
gs
or
jnp
adc
jb
sub
mov
js
fld
cmp
cmps
nop
and
xchg
adc
mov
(bad)
jp
ins
dec
or
repnz
js
xor
retf
cmps
or
repz
push
jae
mov
pop
cmp
mov
jns
push
ror
mul
fsub
imul
pop
in
addr16
imul
jmp
dec
stc
pop
xor
cld
into
xchg
cld
loope
and
fwait
adc
mov
xchg
xor
test
das
push
idiv
jp
or
ins
das
and
sbb
(bad)
xor
popa
pop
and
cs
xor
imul
popa
sbb
(bad)
retf
add
push
js
cmp
stos
icebp
fsub
or
repz
sub
shl
icebp
hlt
loope
mov
push
cwde
dec
loop
cmp
in
scas
popa
jae
mov
pusha
or
push
pusha
mov
loopne
jo
pusha
mov
jecxz
repz
arpl
jb
addr16
aad
or
not
imul
je
push
push
jnp
ins
add
push
gs
pop
loope
jno
arpl
jae
out
cmc
pop
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
idiv
fisubr
nop
push
loope
jno
imul
jo
push
push
push
loope
icebp
fisub
icebp
shl
icebp
shl
icebp
shl
icebp
shl
mov
popa
mov
shl
icebp
shl
icebp
rcr
in
push
loopne
icebp
push
jmp
mov
rcr
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
loope
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
popa
mov
push
dec
jno
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
inc
out
pushf
shl
icebp
shl
lock
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
jno
lea
das
adc
stc
cmc
loope
rcl
or
shl
not
shr
test
dec
(bad)
xor
loop
sbb
jmp
push
mov
loopne
lock
jo
jecxz
jo
arpl
jae
gs
repnz
(bad)
hlt
(bad)
in
je
jmp
lea
push
hlt
fsubr
add
out
jnp
push
cli
fsubr
cmp
or
jnp
pusha
or
jecxz
jae
jecxz
jne
in
jnp
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
ficomp
jmp
jno
loope
icebp
push
popa
or
loopne
jns
add
jno
popa
mov
push
popa
mov
shl
icebp
shl
icebp
shl
div
shr
mov
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
pusha
xor
popa
mov
ds
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
loope
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
icebp
push
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
gs
outs
loopne
icebp
push
loope
icebp
shl
icebp
rol
or
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
jmp
fs
cmp
add
jae
mov
popa
lods
icebp
hlt
push
div
push
inc
mov
pop
fstp
inc
loopne
mov
retf
in
ja
test
push
loopne
lock
mov
push
jecxz
jo
arpl
push
arpl
jae
loop
repz
addr16
repnz
(bad)
not
pcmpeqb
(bad)
clc
pop
in
stc
push
jmp
add
pop
out
sti
push
imul
loope
push
mov
jecxz
repz
add
add
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fiadd
mov
loope
stc
aam
mov
loopne
stc
shr
or
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
imul
mov
popa
mov
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
arpl
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
push
outs
jmp
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
loopne
jb
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
(bad)
cwde
jno
or
dec
scas
popa
mov
pusha
mov
push
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
jno
add
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
lea
scas
imul
jno
inc
mov
rcr
mov
fdivr
js
push
cmp
push
mov
imul
lds
xlat
js
mov
pusha
mov
push
loopne
jo
loopne
lock
in
jae
jecxz
repz
je
fs
(bad)
in
ja
add
cmp
xor
cmp
pop
push
ja
ins
cmp
fcmovb
or
in
jae
jmp
jae
imul
(bad)
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
add
push
loope
jno
jmp
ja
pop
imul
shl
icebp
shl
icebp
shl
icebp
rol
mov
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
popa
or
fsubr
adc
popa
mov
shl
icebp
shl
icebp
ror
jno
popa
mov
loopne
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
dec
jno
add
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
push
outs
jmp
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
icebp
aaa
jno
popa
push
mov
popa
mov
scas
div
pop
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
popa
mov
push
jle
jno
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
sahf
in
outs
push
js
cmp
stos
icebp
fsub
or
repz
sub
shl
icebp
hlt
loope
mov
push
cwde
dec
loop
cmp
in
scas
popa
jae
mov
pusha
or
push
pusha
mov
loopne
jo
pusha
mov
jecxz
repz
arpl
jb
addr16
aad
or
not
imul
je
push
push
jnp
ins
add
push
gs
pop
loope
jno
arpl
jae
out
cmc
pop
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
idiv
fisubr
nop
push
loope
jno
imul
jo
push
push
push
loope
icebp
fisub
icebp
shl
icebp
shl
icebp
shl
icebp
shl
mov
popa
mov
shl
icebp
shl
icebp
rcr
in
push
loopne
icebp
push
jmp
mov
rcr
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
loope
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
popa
mov
push
dec
jno
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
inc
out
pushf
shl
icebp
shl
lock
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
jno
lea
das
adc
stc
cmc
loope
rcl
or
shl
not
shr
test
dec
(bad)
xor
loop
sbb
jmp
push
mov
loopne
lock
jo
jecxz
jo
arpl
jae
gs
repnz
(bad)
hlt
(bad)
in
je
jmp
lea
push
hlt
fsubr
add
out
jnp
push
cli
fsubr
cmp
or
jnp
pusha
or
jecxz
jae
jecxz
jne
in
jnp
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
ficomp
jmp
jno
loope
icebp
push
popa
or
loopne
jns
add
jno
popa
mov
push
popa
mov
shl
icebp
shl
icebp
shl
div
shr
mov
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
pusha
xor
popa
mov
ds
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
loope
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
icebp
push
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
gs
outs
loopne
icebp
push
loope
icebp
shl
icebp
rol
or
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
jmp
fs
cmp
add
jae
mov
popa
lods
icebp
hlt
push
div
push
inc
mov
pop
fstp
inc
loopne
mov
retf
in
ja
test
push
loopne
lock
mov
push
jecxz
jo
arpl
push
arpl
jae
loop
repz
addr16
repnz
(bad)
not
pcmpeqb
(bad)
clc
pop
in
stc
push
jmp
add
pop
out
sti
push
imul
loope
push
mov
jecxz
repz
add
add
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fiadd
mov
loope
stc
aam
mov
loopne
stc
shr
or
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
imul
mov
popa
mov
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
arpl
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
push
outs
jmp
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
loopne
jb
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
(bad)
cwde
jno
or
dec
scas
popa
mov
pusha
mov
push
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
jno
add
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
lea
scas
imul
jno
inc
mov
rcr
mov
fdivr
js
push
cmp
push
mov
imul
lds
xlat
js
mov
pusha
mov
push
loopne
jo
loopne
lock
in
jae
jecxz
repz
je
fs
(bad)
in
ja
add
cmp
xor
cmp
pop
push
ja
ins
cmp
fcmovb
or
in
jae
jmp
jae
imul
(bad)
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
add
push
loope
jno
jmp
ja
pop
imul
shl
icebp
shl
icebp
shl
icebp
rol
mov
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
popa
or
fsubr
adc
popa
mov
shl
icebp
shl
icebp
ror
jno
popa
mov
loopne
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
dec
jno
add
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
push
outs
jmp
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
icebp
aaa
jno
popa
push
mov
popa
mov
scas
div
pop
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
popa
mov
push
jle
jno
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
sahf
in
outs
push
js
cmp
stos
icebp
fsub
or
repz
sub
shl
icebp
hlt
loope
mov
push
cwde
dec
loop
cmp
in
scas
popa
jae
mov
pusha
or
push
pusha
mov
loopne
jo
pusha
mov
jecxz
repz
arpl
jb
addr16
aad
or
not
imul
je
push
push
jnp
ins
add
push
gs
pop
loope
jno
arpl
jae
out
cmc
pop
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
idiv
fisubr
nop
push
loope
jno
imul
jo
push
push
push
loope
icebp
fisub
icebp
shl
icebp
shl
icebp
shl
icebp
shl
mov
popa
mov
shl
icebp
shl
icebp
rcr
in
push
loopne
icebp
push
jmp
mov
rcr
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
loope
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
popa
mov
push
dec
jno
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
inc
out
pushf
shl
icebp
shl
lock
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
jno
lea
das
adc
stc
cmc
loope
rcl
or
shl
not
shr
test
dec
(bad)
xor
loop
sbb
jmp
push
mov
loopne
lock
jo
jecxz
jo
arpl
jae
gs
repnz
(bad)
hlt
(bad)
in
je
jmp
lea
push
hlt
fsubr
add
out
jnp
push
cli
fsubr
cmp
or
jnp
pusha
or
jecxz
jae
jecxz
jne
in
jnp
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
ficomp
jmp
jno
loope
icebp
push
popa
or
loopne
jns
add
jno
popa
mov
push
popa
mov
shl
icebp
shl
icebp
shl
div
shr
mov
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
pusha
xor
popa
mov
ds
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
loope
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
icebp
push
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
gs
outs
loopne
icebp
push
loope
icebp
shl
icebp
rol
or
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
jmp
fs
cmp
add
jae
mov
popa
lods
icebp
hlt
push
div
push
inc
mov
pop
fstp
inc
loopne
mov
retf
in
ja
test
push
loopne
lock
mov
push
jecxz
jo
arpl
push
arpl
jae
loop
repz
addr16
repnz
(bad)
not
pcmpeqb
(bad)
clc
pop
in
stc
push
jmp
add
pop
out
sti
push
imul
loope
push
mov
jecxz
repz
add
add
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fiadd
mov
loope
stc
aam
mov
loopne
stc
shr
or
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
imul
mov
popa
mov
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
arpl
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
push
outs
jmp
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
loopne
jb
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
(bad)
cwde
jno
or
dec
scas
popa
mov
pusha
mov
push
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
jno
add
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
lea
scas
imul
jno
inc
mov
rcr
mov
fdivr
js
push
cmp
push
mov
imul
lds
xlat
js
mov
pusha
mov
push
loopne
jo
loopne
lock
in
jae
jecxz
repz
je
fs
(bad)
in
ja
add
cmp
xor
cmp
pop
push
ja
ins
cmp
fcmovb
or
in
jae
jmp
jae
imul
(bad)
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
add
push
loope
jno
jmp
ja
pop
imul
shl
icebp
shl
icebp
shl
icebp
rol
mov
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
popa
or
fsubr
adc
popa
mov
shl
icebp
shl
icebp
ror
jno
popa
mov
loopne
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
dec
jno
add
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
push
outs
jmp
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
icebp
aaa
jno
popa
push
mov
popa
mov
scas
div
pop
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
popa
mov
push
jle
jno
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
sahf
in
outs
push
js
cmp
stos
icebp
fsub
or
repz
sub
shl
icebp
hlt
loope
mov
push
cwde
dec
loop
cmp
in
scas
popa
jae
mov
pusha
or
push
pusha
mov
loopne
jo
pusha
mov
jecxz
repz
arpl
jb
addr16
aad
or
not
imul
je
push
push
jnp
ins
add
push
gs
pop
loope
jno
arpl
jae
out
cmc
pop
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
idiv
fisubr
nop
push
loope
jno
imul
jo
push
push
push
loope
icebp
fisub
icebp
shl
icebp
shl
icebp
shl
icebp
shl
mov
popa
mov
shl
icebp
shl
icebp
rcr
in
push
loopne
icebp
push
jmp
mov
rcr
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
loope
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
popa
mov
push
dec
jno
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
inc
out
pushf
shl
icebp
shl
lock
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
jno
lea
das
adc
stc
cmc
loope
rcl
or
shl
not
shr
test
dec
(bad)
xor
loop
sbb
jmp
push
mov
loopne
lock
jo
jecxz
jo
arpl
jae
gs
repnz
(bad)
hlt
(bad)
in
je
jmp
lea
push
hlt
fsubr
add
out
jnp
push
cli
fsubr
cmp
or
jnp
pusha
or
jecxz
jae
jecxz
jne
in
jnp
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
ficomp
jmp
jno
loope
icebp
push
popa
or
loopne
jns
add
jno
popa
mov
push
popa
mov
shl
icebp
shl
icebp
shl
div
shr
mov
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
pusha
xor
popa
mov
ds
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
loope
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
icebp
push
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
gs
outs
loopne
icebp
push
loope
icebp
shl
icebp
rol
or
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
jmp
fs
cmp
add
jae
mov
popa
lods
icebp
hlt
push
div
push
inc
mov
pop
fstp
inc
loopne
mov
retf
in
ja
test
push
loopne
lock
mov
push
jecxz
jo
arpl
push
arpl
jae
loop
repz
addr16
repnz
(bad)
not
pcmpeqb
(bad)
clc
pop
in
stc
push
jmp
add
pop
out
sti
push
imul
loope
push
mov
jecxz
repz
add
add
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fiadd
mov
loope
stc
aam
mov
loopne
stc
shr
or
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
imul
mov
popa
mov
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
arpl
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
push
outs
jmp
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
loopne
jb
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
(bad)
cwde
jno
or
dec
scas
popa
mov
pusha
mov
push
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
jno
add
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
lea
scas
imul
jno
inc
mov
rcr
mov
fdivr
js
push
cmp
push
mov
imul
lds
xlat
js
mov
pusha
mov
push
loopne
jo
loopne
lock
in
jae
jecxz
repz
je
fs
(bad)
in
ja
add
cmp
xor
cmp
pop
push
ja
ins
cmp
fcmovb
or
in
jae
jmp
jae
imul
(bad)
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
add
push
loope
jno
jmp
ja
pop
imul
shl
icebp
shl
icebp
shl
icebp
rol
mov
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
popa
or
fsubr
adc
popa
mov
shl
icebp
shl
icebp
ror
jno
popa
mov
loopne
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
dec
jno
add
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
push
outs
jmp
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
icebp
aaa
jno
popa
push
mov
popa
mov
scas
div
pop
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
popa
mov
push
jle
jno
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
sahf
in
outs
push
js
cmp
stos
icebp
fsub
or
repz
sub
shl
icebp
hlt
loope
mov
push
cwde
dec
loop
cmp
in
scas
popa
jae
mov
pusha
or
push
pusha
mov
loopne
jo
pusha
mov
jecxz
repz
arpl
jb
addr16
aad
or
not
imul
je
push
push
jnp
ins
add
push
gs
pop
loope
jno
arpl
jae
out
cmc
pop
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
idiv
fisubr
nop
push
loope
jno
imul
jo
push
push
push
loope
icebp
fisub
icebp
shl
icebp
shl
icebp
shl
icebp
shl
mov
popa
mov
shl
icebp
shl
icebp
rcr
in
push
loopne
icebp
push
jmp
mov
rcr
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
loope
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
popa
mov
push
dec
jno
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
inc
out
pushf
shl
icebp
shl
lock
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
jno
lea
das
adc
stc
cmc
loope
rcl
or
shl
not
shr
test
dec
(bad)
xor
loop
sbb
jmp
push
mov
loopne
lock
jo
jecxz
jo
arpl
jae
gs
repnz
(bad)
hlt
(bad)
in
je
jmp
lea
push
hlt
fsubr
add
out
jnp
push
cli
fsubr
cmp
or
jnp
pusha
or
jecxz
jae
jecxz
jne
in
jnp
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
ficomp
jmp
jno
loope
icebp
push
popa
or
loopne
jns
add
jno
popa
mov
push
popa
mov
shl
icebp
shl
icebp
shl
div
shr
mov
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
pusha
xor
popa
mov
ds
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
loope
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
icebp
push
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
gs
outs
loopne
icebp
push
loope
icebp
shl
icebp
rol
or
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
jmp
fs
cmp
add
jae
mov
popa
lods
icebp
hlt
push
div
push
inc
mov
pop
fstp
inc
loopne
mov
retf
in
ja
test
push
loopne
lock
mov
push
jecxz
jo
arpl
push
arpl
jae
loop
repz
addr16
repnz
(bad)
not
pcmpeqb
(bad)
clc
pop
in
stc
push
jmp
add
pop
out
sti
push
imul
loope
push
mov
jecxz
repz
add
add
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fiadd
mov
loope
stc
aam
mov
loopne
stc
shr
or
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
imul
mov
popa
mov
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
arpl
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
push
outs
jmp
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
loopne
jb
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
(bad)
cwde
jno
or
dec
scas
popa
mov
pusha
mov
push
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
jno
add
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
lea
scas
imul
jno
inc
mov
rcr
mov
fdivr
js
push
cmp
push
mov
imul
lds
xlat
js
mov
pusha
mov
push
loopne
jo
loopne
lock
in
jae
jecxz
repz
je
fs
(bad)
in
ja
add
cmp
xor
cmp
pop
push
ja
ins
cmp
fcmovb
or
in
jae
jmp
jae
imul
(bad)
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
add
push
loope
jno
jmp
ja
pop
imul
shl
icebp
shl
icebp
shl
icebp
rol
mov
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
popa
or
fsubr
adc
popa
mov
shl
icebp
shl
icebp
ror
jno
popa
mov
loopne
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
dec
jno
add
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
push
outs
jmp
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
icebp
aaa
jno
popa
push
mov
popa
mov
scas
div
pop
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
popa
mov
push
jle
jno
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
sahf
in
outs
push
js
cmp
stos
icebp
fsub
or
repz
sub
shl
icebp
hlt
loope
mov
push
cwde
dec
loop
cmp
in
scas
popa
jae
mov
pusha
or
push
pusha
mov
loopne
jo
pusha
mov
jecxz
repz
arpl
jb
addr16
aad
or
not
imul
je
push
push
jnp
ins
add
push
gs
pop
loope
jno
arpl
jae
out
cmc
pop
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
idiv
fisubr
nop
push
loope
jno
imul
jo
push
push
push
loope
icebp
fisub
icebp
shl
icebp
shl
icebp
shl
icebp
shl
mov
popa
mov
shl
icebp
shl
icebp
rcr
in
push
loopne
icebp
push
jmp
mov
rcr
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
loope
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
popa
mov
push
dec
jno
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
inc
out
pushf
shl
icebp
shl
lock
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
jno
lea
das
adc
stc
cmc
loope
rcl
or
shl
not
shr
test
dec
(bad)
xor
loop
sbb
jmp
push
mov
loopne
lock
jo
jecxz
jo
arpl
jae
gs
repnz
(bad)
hlt
(bad)
in
je
jmp
lea
push
hlt
fsubr
add
out
jnp
push
cli
fsubr
cmp
or
jnp
pusha
or
jecxz
jae
jecxz
jne
in
jnp
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
ficomp
jmp
jno
loope
icebp
push
popa
or
loopne
jns
add
jno
popa
mov
push
popa
mov
shl
icebp
shl
icebp
shl
div
shr
mov
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
pusha
xor
popa
mov
ds
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
loope
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
icebp
push
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
gs
outs
loopne
icebp
push
loope
icebp
shl
icebp
rol
or
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
jmp
fs
cmp
add
jae
mov
popa
lods
icebp
hlt
push
div
push
inc
mov
pop
fstp
inc
loopne
mov
retf
in
ja
test
push
loopne
lock
mov
push
jecxz
jo
arpl
push
arpl
jae
loop
repz
addr16
repnz
(bad)
not
pcmpeqb
(bad)
clc
pop
in
stc
push
jmp
add
pop
out
sti
push
imul
loope
push
mov
jecxz
repz
add
add
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fiadd
mov
loope
stc
aam
mov
loopne
stc
shr
or
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
imul
mov
popa
mov
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
arpl
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
push
outs
jmp
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
loopne
jb
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
(bad)
cwde
jno
or
dec
scas
popa
mov
pusha
mov
push
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
jno
add
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
lea
scas
imul
jno
inc
mov
rcr
mov
fdivr
js
push
cmp
push
mov
imul
lds
xlat
js
mov
pusha
mov
push
loopne
jo
loopne
lock
in
jae
jecxz
repz
je
fs
(bad)
in
ja
add
cmp
xor
cmp
pop
push
ja
ins
cmp
fcmovb
or
in
jae
jmp
jae
imul
(bad)
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
add
push
loope
jno
jmp
ja
pop
imul
shl
icebp
shl
icebp
shl
icebp
rol
mov
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
popa
or
fsubr
adc
popa
mov
shl
icebp
shl
icebp
ror
jno
popa
mov
loopne
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
dec
jno
add
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
push
outs
jmp
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
icebp
aaa
jno
popa
push
mov
popa
mov
scas
div
pop
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
popa
mov
push
jle
jno
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
sahf
in
outs
push
js
cmp
stos
icebp
fsub
or
repz
sub
shl
icebp
hlt
loope
mov
push
cwde
dec
loop
cmp
in
scas
popa
jae
mov
pusha
or
push
pusha
mov
loopne
jo
pusha
mov
jecxz
repz
arpl
jb
addr16
aad
or
not
imul
je
push
push
jnp
ins
add
push
gs
pop
loope
jno
arpl
jae
out
cmc
pop
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
idiv
fisubr
nop
push
loope
jno
imul
jo
push
push
push
loope
icebp
fisub
icebp
shl
icebp
shl
icebp
shl
icebp
shl
mov
popa
mov
shl
icebp
shl
icebp
rcr
in
push
loopne
icebp
push
jmp
mov
rcr
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
loope
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
popa
mov
push
dec
jno
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
inc
out
pushf
shl
icebp
shl
lock
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
jno
lea
das
adc
stc
cmc
loope
rcl
or
shl
not
shr
mov
inc
mov
popa
mov
shl
mov
push
arpl
icebp
push
ror
cld
push
popa
mov
push
aam
icebp
shl
in
popa
mov
push
loope
lock
out
push
pusha
mov
rcr
mov
shl
out
push
bound
icebp
shl
(bad)
mov
push
ds
icebp
aam
mov
push
addr16
aam
mov
shl
jno
inc
mov
shl
icebp
push
inc
mov
shl
icebp
push
jae
icebp
ins
xor
icebp
xchg
and
icebp
xchg
push
mov
xor
icebp
xchg
adc
or
xchg
jns
jno
xor
icebp
xchg
push
mov
movs
xor
icebp
xchg
sub
or
xchg
push
mov
xor
icebp
xchg
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
repz
popa
or
sar
nop
repz
and
sar
repz
popa
mov
add
lock
or
outs
mov
movs
popa
or
shl
not
popa
mov
fisub
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
mov
shl
lock
popa
mov
push
loope
repnz
cld
push
popa
mov
push
(bad)
mov
arpl
cld
push
popa
mov
push
retf
fsub
in
popa
mov
push
popa
mov
shl
icebp
shl
icebp
push
dec
mov
arpl
icebp
push
js
jno
popa
mov
shl
icebp
push
gs
shl
icebp
push
in
icebp
rcl
mov
cmc
loope
rcl
mov
push
loope
icebp
rol
pushf
push
loop
cmc
shl
mov
in
jb
addr16
in
not
xor
outs
add
(bad)
fidiv
retw
outs
xchg
jne
gs
jnp
imul
js
out
int3
jnp
leavew
loope
push
mov
test
ins
adc
jno
loope
js
call
leave
js
call
leave
js
call
leave
js
call
leave
js
call
leave
js
call
leave
add
stc
aam
mov
loopne
loopne
jmp
pop
mov
loope
jno
popa
or
popa
mov
shl
icebp
push
arpl
lock
gs
je
popa
or
push
jecxz
jae
popa
mov
shl
jno
jecxz
lock
adc
pop
call
xor
mov
sub
xor
adc
jmp
jae
std
pop
jne
loop
cli
xchg
imul
test
push
repnz
pop
cli
int3
mov
inc
loop
mov
in
mov
jmp
xor
sub
sbb
fisub
xor
push
stos
or
jmp
mov
loope
mov
arpl
cmp
jp
and
jl
and
jno
and
sbb
pop
mov
loope
jno
loope
jno
popa
mov
shl
icebp
push
arpl
lock
gs
je
popa
or
fsub
icebp
shl
or
push
loope
repz
mov
imul
js
push
sub
rcl
lock
push
imul
mov
in
add
(bad)
cld
inc
jnp
in
jge
jmp
sub
fdivr
and
shl
ret
xor
push
xor
xor
sub
mov
sub
mov
mov
xor
test
push
test
cmp
jmp
or
xchg
cmp
fs
cmp
sti
add
sbb
sub
push
mov
imul
out
push
and
in
and
xlat
push
pop
pop
imul
rcr
cwde
outs
sub
adc
inc
seto
hlt
jmp
cs
mov
pop
jo
mov
mov
aam
mov
retf
sahf
push
mov
neg
(bad)
scas
cmp
pop
fistp
add
pop
sbb
and
push
jmp
cdq
nop
aad
inc
sbb
ds
inc
xlat
jmp
mov
(bad)
xchg
mov
fs
sbb
sub
pop
fdiv
cli
nop
inc
or
mov
fisubr
data16
out
push
bound
dec
cmp
pop
push
push
(bad)
or
or
push
aad
fisubr
into
fs
out
inc
jno
xor
aas
mov
es
cli
mov
pop
mov
(bad)
gs
adc
xchg
adc
retf
gs
outs
rcl
mov
fnsave
loop
outs
pusha
sub
stos
ja
pushf
in
enter
loope
stos
xchg
pop
mov
popa
mov
lea
(bad)
jne
gs
xor
(bad)
mov
adc
lahf
lahf
js
data16
add
jne
jp
in
sbb
dec
call
jno
inc
mov
push
repnz
sub
adc
stos
sti
push
leave
stos
sti
push
leave
scas
sti
push
dec
outs
retf
sbb
mov
loope
imul
imul
das
fldl2t
sbb
aaa
into
mov
into
scas
cmp
pop
rcl
push
push
in
xchg
and
adc
xlat
jmp
lock
dec
aas
sbb
cmc
(bad)
sahf
and
xchg
mov
call
sti
ins
lods
mov
sbb
popf
mov
cmp
fst
iret
adc
cmp
mov
sbb
nop
xchg
(bad)
xor
add
jp
mov
fmul
(bad)
aas
sar
ins
cmovl
add
mov
mul
std
cwde
popf
stos
(bad)
push
into
dec
cmp
mov
ficom
jecxz
in
icebp
cmp
pop
outs
dec
xor
push
xchg
into
sub
adc
cmp
loop
fisubr
sub
dec
dec
mov
lock
push
jae
xlat
add
pop
ds
ins
sbb
mov
test
push
icebp
mov
iret
ins
push
fs
dec
adc
sub
jle
pop
sbb
sub
fimul
(bad)
int
js
in
ror
jo
out
gs
mov
xor
aaa
fdiv
adc
cs
out
mov
dec
fisub
arpl
xchg
dec
dec
dec
mov
mov
jb
push
test
rol
and
mov
cwde
or
mov
xor
popa
jge
cld
retf
pop
sub
push
inc
sbb
mov
icebp
scas
or
mov
jmp
shr
aam
mov
adc
jmp
and
jae
mov
dec
pop
pushf
fsubr
(bad)
or
bound
sbb
fild
cld
retf
aaa
nop
xchg
xchg
call
or
mov
sbb
push
mov
push
loope
or
pop
xlat
push
pop
xor
jmp
ror
sub
sbb
shl
jge
lods
ret
(bad)
sbb
pop
dec
(bad)
retf
leave
xor
cmp
mov
fstp
mov
dec
ror
xor
dec
repnz
sbb
scas
movs
cmp
inc
pushf
imul
shr
mov
mov
ret
and
jmp
push
jne
sbb
(bad)
push
mov
rcl
jg
and
movs
stc
ins
mov
cli
movzx
mov
stos
mov
inc
sbb
jns
cmp
dec
push
and
mov
lock
push
mov
pushf
cs
and
pop
mov
loop
push
xor
test
push
mov
xchg
test
scas
lds
or
jle
mov
shr
push
pop
sbb
xchg
inc
cmp
mov
mov
lds
push
idiv
pop
jae
shl
sbb
fmul
cld
xor
pop
jp
add
rol
sub
xor
sbb
or
int3
(bad)
mov
cmps
in
int3
push
fadd
shr
mov
sub
aas
sbb
sub
inc
and
sbb
cmp
imul
sti
mov
sub
imul
inc
or
inc
or
in
push
loope
mov
dec
or
sbb
inc
test
mov
sbb
mov
test
aas
(bad)
fdivr
test
xchg
mov
mov
(bad)
push
test
mov
jle
dec
adc
sub
imul
xchg
(bad)
and
pusha
xlat
lahf
scas
je
retf
aad
add
(bad)
sbb
mov
push
push
push
fist
daa
cli
add
inc
loope
sbb
and
ss
sbb
xchg
mov
sbb
fwait
retf
inc
sbb
adc
icebp
jle
push
push
fwait
adc
mov
and
jmp
movs
mov
jmp
leave
mov
push
add
dec
movs
xor
fmul
scas
add
jo
aad
(bad)
lock
icebp
in
fild
push
arpl
into
cmp
pop
mov
xchg
daa
fwait
icebp
push
fisub
imul
mov
and
xlat
pop
adc
in
iret
jg
movs
add
inc
inc
cmps
inc
pop
mov
stos
das
jbe
add
sbb
iret
jg
movs
popa
ins
and
inc
shl
neg
std
outs
mov
fs
cmps
push
push
fnsave
fistp
dec
retf
sub
loope
lods
mov
std
cs
sbb
sti
loopne
fst
sub
sti
xor
xchg
cmp
fmul
sub
mov
pop
mov
jp
(bad)
pop
sub
mov
sub
and
xor
punpcklbw
fnsave
lods
int3
ins
and
inc
or
push
clc
aaa
ss
add
lock
fistp
rcr
movs
pop
mov
jl
adc
or
xor
imul
and
mov
in
fcomp
leave
cdq
cmp
pop
daa
cmc
idiv
in
inc
mov
add
sub
lds
aam
add
mov
or
inc
cli
pop
aad
mov
ret
push
xchg
or
xchg
mov
stc
adc
pop
ss
int
inc
sub
and
jp
cmp
cmc
stos
clc
repnz
ss
data16
sub
and
int3
inc
(bad)
push
sbb
pop
push
shl
mov
xor
dec
mov
leave
jle
jg
(bad)
imul
mov
xchg
mov
sahf
sub
add
lea
xor
mov
mov
scas
jge
add
push
dec
and
push
lods
outs
push
mov
push
(bad)
cmp
push
mov
hlt
push
xorps
dec
cwde
mov
ror
pop
lds
cmp
pop
iret
sti
(bad)
js
aam
and
inc
cmp
push
push
daa
and
sbb
or
arpl
push
aas
pop
in
fs
xlat
inc
clc
cmc
mov
adc
sbb
cmps
test
pushf
jl
je
lods
sbb
jne
arpl
pop
test
aam
(bad)
adc
std
test
inc
inc
mov
pop
call
das
jmp
loop
and
push
out
adc
mov
(bad)
aas
loop
mov
fwait
ins
mov
outs
add
pop
add
inc
push
inc
rcl
imul
push
xchg
inc
mov
pop
add
jno
addr16
iret
out
ds
cwde
jle
adc
pushf
jle
cli
or
scas
push
cmp
das
es
aas
dec
adc
or
lods
xor
fs
mov
bound
push
inc
push
mov
jmp
je
dec
sar
adc
xor
or
sbb
push
pop
xchg
test
scas
nop
jecxz
sbb
mov
push
pusha
daa
xlat
xor
add
jl
mov
push
jno
lods
call
inc
mov
inc
ret
int
dec
adc
push
push
mov
and
imul
fwait
dec
movs
mov
sbb
cmps
xor
mov
cs
dec
je
mov
mov
and
pop
out
cwde
pushf
sbb
sbb
push
int3
cmp
mov
inc
mov
adc
mov
push
inc
repz
shl
aad
repz
xor
xchg
mov
imul
(bad)
(bad)
xchg
dec
shl
and
imul
mov
mov
scas
aam
mov
mov
pop
cmc
(bad)
clc
jle
jbe
outs
imul
fcmovnbe
cmp
cs
aam
jge
sbb
enter
adc
xor
cli
mov
test
xor
ss
ficomp
jmp
xor
call
xchg
outs
jno
cmp
jp
mov
jg
out
push
out
lods
xor
dec
jne
cs
xchg
fstp
or
out
imul
mov
mov
sar
push
pop
adc
add
(bad)
fdivr
sbb
int3
sub
loopne
aad
into
sub
xchg
cmp
adc
mov
jl
lods
pop
jbe
push
dec
mul
(bad)
repz
loope
adc
mov
dec
jb
mov
fwait
lods
jbe
fiadd
mov
adc
cmc
bound
cmp
(bad)
push
pop
cmp
test
mov
pop
sbb
jns
push
dec
push
mov
mov
mov
adc
popa
jg
inc
xor
pusha
adc
fbld
movs
out
mov
mov
inc
rol
scas
dec
push
cmp
pop
bound
add
and
pop
pop
sub
ss
jmp
(bad)
and
dec
mov
bnd
xor
ret
jo
in
hlt
dec
xor
nop
aad
retf
and
push
mov
mov
jnp
push
stc
adc
push
mov
sub
mov
mov
push
mov
iret
dec
and
mov
call
jge
cmp
mov
pop
mov
daa
out
loopne
imul
xchg
xchg
and
xchg
cmps
sbb
sbb
pop
xor
inc
xchg
push
and
xor
rcr
fisttp
into
pop
mov
mov
xchg
mov
lods
in
mov
xchg
mov
mov
repnz
imul
out
push
push
cmp
scas
and
(bad)
dec
cmp
rcr
clc
xor
fcmovnb
sbb
pop
jae
cmp
mov
imul
arpl
scas
jmp
pop
cmp
cdq
pop
aas
loope
xor
int3
or
jg
dec
cmp
stos
retf
clc
mov
aam
cmp
and
mov
rol
and
cmp
adc
fsub
xor
and
adc
pop
xchg
push
fwait
push
mov
sbb
movs
xor
mov
into
cmp
jns
rol
rcr
das
pop
dec
int3
movs
int
dec
push
popa
pop
sub
pop
je
sub
adc
cmp
and
aas
xchg
mov
lea
popf
cmp
daa
push
nop
std
out
dec
arpl
loope
dec
scas
loop
loope
ret
and
jb
jecxz
add
out
std
test
mov
je
cwde
add
out
out
and
pop
fadd
sar
xchg
mov
dec
and
jno
neg
fidivr
mov
movs
xor
and
test
pop
jnp
jns
cmps
fsubr
lahf
jg
mov
add
or
ret
ret
dec
enter
adc
sub
shl
(bad)
arpl
push
xchg
dec
loope
ins
scas
sub
mov
jge
dec
outs
popf
addr16
fsub
xchg
aas
push
pop
(bad)
cmps
and
or
in
cdq
xchg
std
jg
aaa
popa
mov
or
adc
and
iret
jns
mov
cli
test
mov
pop
xchg
dec
ja
or
sub
in
les
add
pop
jae
in
icebp
xor
es
lock
add
or
test
mov
stos
test
js
in
mov
int3
out
mov
mov
les
add
fist
mov
fist
sub
xor
and
mov
mov
stos
mov
test
mov
(bad)
out
test
xchg
xchg
mov
push
ds
mov
mov
(bad)
ss
inc
shr
je
cmp
or
lods
dec
mov
ds
add
pop
cmp
adc
lods
mov
lea
adc
fnstcw
test
xor
mov
iret
(bad)
and
loopne
retf
das
dec
inc
stos
lahf
(bad)
int
les
add
jno
or
call
add
mov
xor
mov
add
retf
or
es
stos
fwait
jl
out
lock
push
inc
and
lds
add
(bad)
stc
pop
loope
std
jg
(bad)
mov
mov
pop
jg
imul
das
inc
(bad)
pushf
jno
jle
cmps
push
sahf
xor
jl
pop
pushf
cdq
retf
ins
lods
dec
loopne
cld
xchg
(bad)
shr
cmps
sbb
nop
lods
pop
(bad)
xor
sbb
gs
inc
mov
mov
xor
sbb
cli
mov
je
cs
mov
xchg
(bad)
jmp
add
mov
cmps
jg
inc
push
xor
ds
mov
in
in
mov
cmp
mov
outs
xchg
dec
mov
adc
ins
or
jnp
mov
das
or
(bad)
movs
sbb
sbb
iret
imul
dec
pop
adc
sbb
sbb
xchg
inc
or
push
mov
jb
jle
fucomip
cld
mov
dec
ins
je
jge
lahf
xchg
test
or
cld
add
in
fwait
inc
mov
dec
jne
in
xor
or
pop
addr16
dec
inc
xchg
sbb
stos
sbb
ficom
out
in
push
xor
cmp
add
xor
cmp
cmps
push
call
sbb
js
push
pop
push
out
dec
xchg
xor
xor
push
test
fild
stos
pop
jmp
sub
mov
jnp
mov
or
lea
jge
inc
popf
jns
jmp
cmp
ret
retf
ins
dec
xor
adc
cmp
(bad)
sbb
pop
jecxz
add
dec
mov
retf
dec
out
sbb
iret
fldcw
into
daa
aaa
pop
call
dec
push
mov
bound
jle
mov
xchg
push
pop
pushf
nop
mov
rcr
inc
ds
ins
xchg
cli
sti
jo
mov
fucomp
push
sbb
ins
and
pop
les
mov
xchg
mov
enter
or
or
sahf
dec
push
(bad)
mov
inc
adc
adc
mov
in
fidiv
leave
cli
jl
or
retf
sub
sbb
bound
iret
jne
js
add
and
and
pop
xor
out
mov
fcomp
pop
xor
movs
lahf
or
xchg
out
sti
fisttp
(bad)
xor
aam
int3
movs
push
pushf
lods
daa
pop
dec
into
cmp
ins
or
movs
mov
mov
and
cdq
sub
das
pop
adc
cmp
fs
shl
cdq
das
xchg
xor
call
xor
ds
inc
xchg
push
popa
mov
pop
xchg
cmps
lock
mov
ss
mov
mov
mov
lock
xor
mov
jge
lahf
sub
push
pop
sbb
ret
adc
xor
and
test
jno
cmps
not
mov
inc
cmp
pop
jb
mov
push
mov
out
test
out
outs
aam
push
call
in
adc
lods
jl
(bad)
cld
jns
sti
lahf
mov
lock
mov
adc
xor
and
push
mov
pushf
xchg
pop
jg
jne
mov
(bad)
not
repz
pusha
mov
ret
scas
jne
xchg
ss
fwait
jp
(bad)
push
mov
(bad)
(bad)
mov
ds
mov
mov
sbb
xchg
push
mov
mov
fwait
adc
inc
outs
ret
add
push
jle
pop
fwait
sbb
pop
pop
cmp
fwait
push
jno
inc
call
xchg
cld
mov
jl
stc
call
xor
pop
jl
mov
gs
sbb
out
lods
call
xchg
sbb
lods
shl
fld
arpl
inc
jl
add
or
jge
ror
jbe
jp
push
enter
movs
icebp
stos
dec
retf
jno
push
(bad)
mov
(bad)
fdiv
es
pop
or
fld
out
cdq
outs
out
jne
mov
lock
lahf
sbb
dec
arpl
add
push
ret
stos
cmp
or
aam
sbb
sti
jo
and
jg
scas
cmp
outs
cmps
add
dec
in
out
adc
clc
cmps
fimul
jp
or
int3
cmp
mov
and
and
arpl
dec
out
dec
mov
ins
sub
dec
loope
mov
in
jmp
fbstp
mov
js
xor
(bad)
push
xchg
xchg
sub
pop
or
dec
push
push
push
dec
je
outs
add
cmp
dec
addr16
bsr
pop
mov
test
sbb
ins
xor
jo
shl
and
(bad)
jmp
addr16
dec
ins
aas
pushf
xor
jne
cwde
dec
into
cmp
adc
inc
add
les
retf
push
fbld
or
mov
cmps
pop
stos
mov
and
fisubr
lahf
xchg
cmp
pop
inc
sbb
dec
movs
imul
outs
or
(bad)
int3
pop
stc
jae
es
xor
push
test
mov
cmp
sbb
add
push
or
dec
and
mov
xchg
div
(bad)
adc
sub
jl
sar
dec
fmul
nop
mov
push
or
inc
jmp
sub
or
ds
cmp
adc
jo
je
repz
push
xor
mov
xchg
outs
les
je
cdq
pushf
xchg
imul
into
in
sub
icebp
test
xor
push
mov
sbb
inc
or
mov
ins
cmp
and
mov
es
sbb
sub
and
xor
add
sub
dec
mov
hlt
dec
sub
ja
outs
mov
dec
mov
push
aad
mov
mov
jo
mov
ret
out
(bad)
lahf
cmp
mov
stc
pop
sub
lods
sub
xor
frstor
jb
sub
cs
jl
mov
jns
aas
retf
sar
and
pop
mov
jmp
adc
push
fistp
or
sti
fist
xchg
pop
mul
pop
push
jno
adc
jo
ins
xchg
or
daa
adc
mov
pushf
dec
mov
mov
not
mov
and
xor
out
dec
adc
push
mov
mov
adc
xor
imul
and
push
out
loop
sub
movs
stos
imul
pop
aas
push
sub
jns
add
ja
sub
push
outs
sbb
daa
sahf
or
mov
ret
pop
xchg
mov
nop
and
dec
dec
rcl
outs
fwait
sbb
cmp
sahf
jecxz
push
sub
xchg
cmps
out
inc
test
pop
call
push
xor
mov
sbb
adc
rcr
sbb
mov
cld
push
sub
call
mov
pop
mov
push
mov
aam
or
push
pop
pop
pop
sahf
retf
outs
xor
fimul
push
inc
pop
in
and
lahf
cli
pop
and
mov
jmp
push
ds
sub
pusha
inc
and
cs
dec
enter
rcl
in
jno
push
or
fbld
and
dec
out
mov
cmp
inc
add
cmc
out
in
mov
sbb
xchg
push
les
mov
stos
int
dec
dec
in
jmp
das
sub
push
xor
loopne
sbb
std
fwait
not
pop
mov
cmps
xchg
hlt
ret
or
mov
mov
test
cmp
gs
dec
dec
scas
xor
sahf
shl
and
mov
call
jne
dec
dec
jmp
adc
and
mov
xchg
cmps
pop
and
mov
fxch
popa
pop
or
gs
cdq
ror
dec
mov
mov
jbe
cmp
cmp
test
outs
or
dec
movs
adc
(bad)
icebp
push
dec
call
rcl
js
dec
les
sub
mov
cmp
add
stos
and
imul
pop
in
push
xor
shl
std
pop
dec
adc
mov
xor
ficom
and
inc
test
mov
pop
pusha
icebp
inc
add
imul
into
shl
jecxz
push
xchg
pop
jmp
cmps
and
jno
repnz
jmp
mov
fucomi
mov
cmp
(bad)
addr16
mov
clc
ret
ds
pop
outs
iret
and
sub
lahf
jmp
inc
add
rep
movs
add
es
xor
hlt
ins
je
pop
(bad)
jmp
lahf
daa
pushf
mov
ss
adc
sbb
ret
push
shl
mov
dec
mov
fisubr
mov
mov
movs
(bad)
and
adc
rcl
xor
lds
sub
add
lahf
jecxz
shl
test
sub
into
(bad)
int
pop
push
xor
push
adc
test
cmp
loopne
out
sbb
ins
(bad)
pop
mov
iret
mov
ins
lock
cdq
inc
pop
ja
mov
and
pop
dec
mov
retf
cwde
popf
push
rcl
mov
push
or
mov
mov
imul
xchg
ss
and
push
mov
dec
xor
or
gs
sbb
out
mov
mov
cdq
pop
sbb
or
out
cmp
lods
loop
sti
pop
dec
mov
(bad)
inc
dec
inc
sub
mov
ret
xchg
into
hlt
sbb
lahf
cmps
mov
aas
mov
sbb
push
cs
jle
jge
leave
mov
(bad)
pop
ret
imul
inc
cmp
xor
xor
pop
jg
movs
mov
cwde
retf
mov
and
push
add
dec
mov
lods
sbb
les
je
imul
xchg
pop
lds
in
dec
fnstsw
pushf
mov
mov
dec
mov
add
and
adc
sub
fadd
pop
jbe
mov
test
sti
movs
mov
stos
and
out
cmps
das
inc
and
sub
sti
dec
and
add
cwde
push
add
aad
in
mov
ins
xchg
inc
pop
mov
cmp
or
mov
ins
add
inc
inc
dec
pop
out
xchg
outs
popf
mov
out
sbb
clc
jmp
scas
test
pushf
and
jp
sbb
or
retf
iret
call
mov
in
fsub
push
scas
sub
inc
lea
xchg
mov
mov
imul
xor
enter
push
sbb
xor
jle
jmp
inc
dec
iret
dec
sbb
dec
inc
in
cmp
jecxz
div
mov
fcomip
sub
push
add
jmp
mov
sbb
or
sub
cli
fisub
or
dec
xor
dec
cmp
std
jl
mov
push
fisttp
and
adc
outs
mov
cmp
dec
adc
xor
in
(bad)
repnz
mov
sbb
cmp
jb
cmps
sbb
scas
data16
jecxz
push
mov
and
or
cdq
sbb
jg
sbb
test
cmp
sub
mov
cmps
out
aad
inc
mov
ds
dec
adc
mov
or
lock
loopne
jl
mov
mov
push
xchg
addr16
pop
enter
lds
jmp
adc
pushf
aaa
add
scas
push
test
ja
inc
sbb
out
cs
pop
arpl
cmp
cmp
pop
outs
fwait
out
(bad)
or
ins
rcr
in
inc
pushf
mov
xor
mov
in
out
or
or
inc
or
adc
add
fcomp
in
push
cld
sbb
test
pop
fiadd
retf
sbb
mov
call
std
push
pop
push
ins
add
jg
cmp
pop
mov
mov
jmp
sub
test
aas
sub
pop
add
jo
into
sbb
jge
test
fistp
cmp
out
sbb
adc
(bad)
out
adc
dec
mov
xchg
or
xchg
leave
pop
ror
adc
or
and
pop
add
and
mov
or
mov
pop
mov
das
ret
cs
(bad)
adc
mov
xor
fsubr
retf
xchg
jmp
and
xchg
add
sub
cmp
mov
mov
xchg
cmp
mov
xor
fs
cld
jno
retf
fld
leave
mov
jp
loope
fs
jp
dec
sahf
add
add
adc
mov
mov
cld
popf
dec
nop
cwde
hlt
ins
(bad)
fdivrp
pop
(bad)
dec
imul
xchg
inc
add
inc
adc
movs
dec
xor
cmp
and
ins
inc
fisttp
mul
rcl
(bad)
mov
mov
xchg
dec
xchg
lods
xor
ins
jle
jmp
ret
shr
ror
and
sti
adc
lea
pop
mov
cmps
cdq
pop
inc
scas
mov
dec
mov
xchg
stos
cmp
mov
out
jg
addr16
inc
retf
mov
lods
imul
scas
pop
xchg
outs
pop
es
icebp
or
and
mov
add
and
and
call
mov
lds
and
hlt
pop
mov
dec
aam
sub
dec
sub
jge
sbb
cdq
xor
xorps
fnsave
push
rcl
out
mov
jle
xchg
cmp
loop
dec
sbb
add
xchg
cli
pmaddwd
adc
mov
jb
scas
mov
adc
adc
or
sub
out
xor
iret
inc
fiadd
enter
ret
adc
add
and
aas
test
lds
jg
aad
mov
mov
fwait
adc
mov
pop
movs
movs
std
ins
push
hlt
fidiv
push
inc
dec
outs
sbb
xor
sbb
jmp
fcmove
movs
shl
loope
dec
inc
xchg
xchg
stos
call
adc
sub
push
add
je
addr16
repnz
mov
loopne
cwde
mov
xchg
aas
jnp
popf
das
add
scas
sub
xchg
mov
lahf
and
jl
repz
cmp
jb
pop
and
cmp
xor
adc
pop
jno
ds
inc
arpl
fstp
stos
sbb
lods
pop
stos
fwait
loopne
push
in
mov
xor
fild
xor
xor
(bad)
mov
sti
xchg
sbb
movs
cwde
mov
inc
inc
push
xchg
cs
mov
movs
mov
gs
adc
out
sub
addr16
mov
inc
push
sahf
leave
or
fdivr
jge
mov
cmc
xor
mov
ret
sbb
mov
cmp
pop
ins
jmp
fsub
inc
sub
dec
pop
std
sbb
pop
jg
push
movs
cmp
fwait
push
mov
adc
sub
mov
dec
pop
out
and
loop
add
sar
and
cmp
call
push
pop
lods
and
mov
adc
sbb
stc
mov
pusha
dec
xchg
pop
or
fnstsw
dec
xlat
popf
pop
jns
call
std
out
movs
adc
adc
ss
pop
in
add
sub
cli
add
popa
push
xor
cld
or
pop
mov
and
in
pop
cli
sbb
adc
cmp
test
jo
sbb
fmul
std
jbe
fld
out
pop
sub
mov
(bad)
dec
lock
iret
pop
xor
jmp
in
adc
add
nop
adc
loope
xor
out
(bad)
inc
xor
inc
imul
std
fstp
lea
inc
cld
xor
outs
int3
pop
jb
xor
mov
loopne
inc
and
or
ins
sti
imul
push
jp
out
mov
mov
xchg
jl
xchg
ins
sti
popa
int3
neg
xor
mov
inc
test
movs
lods
push
pop
xchg
sbb
(bad)
lock
(bad)
sbb
pusha
aad
repz
pop
cmps
push
adc
std
dec
cli
mov
pop
dec
sub
push
mov
repz
outs
mov
ror
dec
mov
cdq
scas
inc
adc
inc
jl
iret
jno
(bad)
out
mov
cmp
fnstenv
push
imul
dec
mov
iret
add
and
dec
sbb
js
pop
in
dec
mov
sbb
and
test
inc
push
dec
mov
ins
inc
jmp
jecxz
jb
push
popa
je
xor
jmp
std
sub
jge
jae
xchg
mov
sbb
dec
retf
xor
jecxz
test
arpl
dec
jle
push
cdq
imul
fdiv
xchg
jle
aad
mov
cmp
iret
inc
inc
xor
pop
rol
mov
ja
sar
jle
iret
push
outs
jmp
jae
xlat
cmp
loope
pop
scas
mov
gs
out
sbb
dec
aaa
(bad)
iret
fist
inc
je
mov
and
call
jge
or
fwait
add
push
scas
mov
sub
pushf
scas
and
dec
daa
out
jmp
popf
mov
push
rcl
mov
pop
push
jne
in
or
ja
push
dec
ins
mov
inc
sub
push
sub
sub
in
shr
cmp
or
or
daa
cmps
cmp
out
bound
jle
ror
aaa
cmc
xor
push
fwait
jne
adc
xor
dec
push
pop
test
and
inc
aam
cmp
arpl
dec
call
add
fld
jae
pop
je
lods
xchg
inc
xor
or
jo
pop
cs
call
daa
ds
dec
and
fdivrp
jmp
loopne
dec
js
nop
out
fcom
dec
and
ret
lock
into
inc
popf
and
outs
cs
retf
push
mov
repz
cwde
push
clc
mov
inc
sbb
jo
gs
push
mov
lahf
sbb
repz
scas
pop
adc
pop
stos
je
outs
pop
xchg
push
and
pop
cmp
jmp
icebp
dec
popf
cdq
mov
inc
mov
cmp
out
inc
mov
xchg
jae
mov
outs
mov
cmp
arpl
call
inc
inc
cmc
popf
jecxz
es
(bad)
push
mov
dec
adc
rcr
mov
pop
inc
inc
(bad)
lock
pop
sbb
sahf
aaa
add
out
cmp
cmp
pop
or
aam
repnz
cli
inc
xor
scas
mov
ror
and
dec
sub
(bad)
jne
xchg
outs
add
inc
push
inc
retf
sub
pop
push
inc
stos
xchg
or
bound
mov
sbb
xchg
jne
(bad)
mov
dec
sti
sbb
imul
pusha
xchg
pop
adc
out
jb
jns
jp
mov
sub
mov
aas
mov
(bad)
sub
inc
push
jecxz
pop
pop
mov
movups
mov
cli
(bad)
or
jp
ror
push
popa
xchg
enter
out
mov
sbb
or
shr
aas
push
enter
test
xor
jle
daa
data16
scas
mov
push
xchg
popf
push
mov
or
ins
mov
loop
ffreep
sbb
dec
mov
mov
xchg
jae
loope
or
adc
push
dec
push
fist
retf
push
mov
mov
les
jmp
jae
rol
fisubr
mov
push
aas
(bad)
sbb
jmp
and
imul
adc
data16
push
or
out
or
dec
xor
sub
inc
ret
outs
mov
xor
aad
cmps
inc
sahf
or
mov
ret
or
push
add
(bad)
movs
sahf
test
jb
ror
pop
nop
(bad)
dec
iret
mov
add
adc
and
imul
or
inc
sbb
dec
jns
dec
test
scas
dec
sahf
fist
inc
push
cmps
push
pop
popf
cld
scas
sbb
jl
xchg
imul
repnz
repnz
repnz
repnz
into
jb
lahf
adc
sub
arpl
ret
div
es
mov
call
ror
movs
les
push
outs
cmps
int3
in
pop
repz
int3
data16
or
inc
int
daa
and
and
sbb
xchg
inc
aaa
addr16
cld
xchg
push
or
shl
dec
cmp
aaa
int
call
out
pop
xor
out
lahf
xor
mov
in
pop
and
(bad)
jo
les
xchg
sub
fisubr
push
inc
clc
je
mov
add
(bad)
xchg
inc
xor
in
div
ss
and
sti
rcr
in
push
jle
push
mov
(bad)
sub
pusha
outs
hlt
pusha
outs
lea
mov
xor
adc
stos
jg
ret
mov
cli
(bad)
mov
sti
dec
test
movs
push
fistp
xor
in
neg
fsubr
push
jl
mov
data16
call
clc
mov
xchg
lock
fsub
add
pop
cwde
sbb
mov
mov
inc
repz
cmp
ret
frstor
xchg
lock
jl
rcl
and
jmp
je
pop
push
sub
add
into
sub
mov
xchg
sahf
js
cmp
xor
popf
cld
lahf
retf
call
push
cmp
(bad)
sar
ret
inc
fnstsw
inc
(bad)
jns
dec
inc
popa
xchg
imul
push
xor
sar
lds
sbb
or
sti
bound
test
ret
shl
int3
not
xchg
dec
gs
inc
inc
pop
xchg
hlt
into
fnstcw
ret
push
mov
enter
(bad)
loopne
mov
enter
dec
pusha
jg
out
aad
mov
shl
(bad)
xor
out
mov
outs
ret
cld
lahf
retf
call
js
imul
(bad)
imul
pop
out
ja
call
arpl
cmp
out
mov
(bad)
jle
pusha
ret
jg
hlt
sar
push
xor
fstp
out
xor
out
mov
dec
addr16
mov
(bad)
push
xor
in
lahf
leave
dec
idiv
inc
loope
xor
(bad)
mov
out
not
out
jno
hlt
rcl
fs
cmp
aad
retf
clc
jl
dec
out
aas
shr
ret
cmp
fdivr
ret
adc
pop
loopne
lea
jmp
inc
loope
xor
push
mov
fs
(bad)
mov
out
enter
fs
cmp
aad
retf
clc
jl
dec
out
aas
shr
ret
mov
ret
cmp
loope
mov
(bad)
iret
pop
mov
ret
cmp
loope
mov
mov
xchg
(bad)
fst
pop
xor
in
lahf
leave
dec
idiv
inc
out
mov
out
jbe
enterw
ret
jg
loope
jl
(bad)
call
jns
ret
xor
ins
push
mov
jns
pop
lds
xchg
hlt
rcr
out
mov
inc
jecxz
mov
leave
int
mov
out
aad
cmp
jmp
push
xor
imul
out
aad
mov
in
jb
xor
imul
loope
cld
mov
dec
in
xor
in
lahf
leave
dec
idiv
inc
out
mov
data16
lahf
inc
inc
jb
imul
cmp
ins
enter
xlat
xor
push
mov
outs
retf
fnstsw
loop
mov
inc
imul
cwde
(bad)
iret
push
mov
dec
cld
and
jecxz
mov
inc
jmp
call
in
xor
jns
xor
push
pop
inc
out
xchg
hlt
rcl
ins
shl
(bad)
data16
and
pop
xchg
inc
in
cmp
addr16
mov
inc
jl
vorps
inc
imul
mov
retf
iret
push
mov
dec
cld
and
jecxz
mov
pop
addr16
retf
iret
js
push
(bad)
js
leavew
call
ins
int3
push
cmp
ins
aad
ins
sti
leave
mov
(bad)
xchg
hlt
rcl
ins
fdivr
loopne
aas
shl
fstp
loopne
cmp
in
adc
clc
xchg
out
ja
ins
int3
clc
xchg
jmp
dec
not
jmp
sar
enter
(bad)
jnp
dec
ja
jmp
(bad)
jge
ins
dec
fnstsw
loop
mov
int
xor
push
xor
push
xor
push
xor
pop
pop
inc
bound
hlt
rcl
ins
push
mov
inc
in
xchg
out
leave
shl
(bad)
cmp
out
mov
ret
sar
dec
loopne
cmp
ins
push
mov
inc
in
cwde
out
aad
mov
ret
cmp
call
inc
mov
push
repz
xor
fdivr
imul
cmp
ins
(bad)
mov
leave
imul
out
aad
mov
ret
ds
imul
lahf
(bad)
iret
idiv
jmp
in
mov
jns
xor
push
pop
inc
out
xchg
hlt
rcl
ins
enter
xlat
xor
push
mov
out
enter
inc
cld
and
jecxz
mov
inc
jmp
loope
push
xchg
dec
in
mov
inc
jmp
vandnps
data16
mov
dec
out
mov
(bad)
cwde
out
aad
mov
ret
cmp
jecxz
mov
(bad)
dec
jno
(bad)
cmp
imul
enterw
ins
fnstsw
jnp
aas
dec
fs
out
aad
mov
ret
and
retf
in
aad
dec
imul
inc
jmp
fdivr
imul
lahf
out
push
cmp
ins
xlat
mov
enter
int
push
aas
dec
fs
out
aad
mov
ret
mov
dec
pusha
(bad)
mov
shl
dec
loopne
mov
dec
in
aas
push
out
mov
inc
loop
mov
dec
in
mov
lds
nop
call
popa
icebp
xor
push
mov
lds
mov
(bad)
idiv
ror
dec
in
mov
lds
lahf
hlt
rcl
loop
mov
dec
in
pop
inc
out
lahf
hlt
aad
xchg
enter
fdiv
jbe
hlt
dec
push
mov
ins
fstp
inc
loop
xchg
out
aad
mov
inc
loop
push
ret
out
pop
loop
push
stc
out
push
lds
push
inc
(bad)
jae
or
push
lods
icebp
rcl
mov
lock
(bad)
out
cwde
pop
repz
cwde
pop
cld
popa
or
mov
mov
popa
mov
pop
xor
inc
and
popa
mov
rol
push
jb
sub
jns
mov
shl
icebp
shl
icebp
rcr
jecxz
shl
jno
mov
aad
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
xor
pop
xor
call
loope
icebp
rcr
mov
icebp
push
popa
mov
retf
lock
push
popa
xor
pop
mov
in
mov
shl
icebp
ror
enter
icebp
shl
icebp
ror
ret
sahf
icebp
shl
icebp
ror
sar
shl
icebp
rcl
inc
out
mov
icebp
rcl
inc
out
jmp
push
mov
icebp
push
popa
retf
icebp
rcl
mov
fs
loop
push
popa
call
pusha
hlt
icebp
push
popa
xor
shl
inc
bound
icebp
shl
icebp
rcl
dec
bound
icebp
shl
icebp
ror
test
icebp
shl
icebp
ror
sub
cli
arpl
icebp
ror
test
icebp
shl
icebp
rcr
dec
loop
mov
rcr
xor
out
mov
retf
sar
in
jno
in
int3
xlat
cmp
ja
retf
push
cmp
icebp
test
inc
out
mov
fdivr
icebp
shl
icebp
rol
enter
popa
je
xchg
push
js
push
popa
or
shl
icebp
shl
icebp
ror
stos
js
lds
ror
xchg
jmp
mov
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
cld
popa
mov
rcr
mov
push
jno
dec
cwde
pop
cld
popa
mov
shl
icebp
shl
icebp
shl
icebp
ror
cld
popa
mov
rcl
icebp
push
std
repnz
shl
icebp
push
dec
cwde
pop
cld
popa
mov
rcl
(bad)
icebp
sar
in
ror
cld
popa
mov
shl
icebp
shl
icebp
push
mov
mov
icebp
shl
icebp
rol
push
jb
mov
jmp
dec
jmp
cmp
popa
mov
shl
icebp
shl
icebp
rol
test
loope
neg
dec
imul
bound
shl
mov
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
rcr
mov
icebp
shl
icebp
rol
push
jb
xchg
push
js
push
ret
cmp
rcr
pusha
enter
sar
inc
fnstcw
icebp
push
inc
loop
stos
popa
jmp
popa
mov
shl
icebp
rol
test
loope
ja
jmp
xor
arpl
(bad)
jmp
(bad)
pop
mov
inc
push
sbb
pop
and
inc
popa
or
icebp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
icebp
rcr
mov
icebp
shl
icebp
rcl
mov
dec
loop
cmp
rcl
imul
ret
mov
bound
inc
out
sub
out
adc
cli
push
in
retf
jns
call
shl
icebp
shl
icebp
rcl
ret
arpl
cmp
addr16
loope
(bad)
cmp
push
mov
inc
in
cmp
out
stos
mov
ror
xchg
jmp
mov
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
rcl
mov
fs
mov
shl
div
dec
lahf
icebp
pop
push
xor
pop
out
jno
call
(bad)
jno
loope
icebp
ror
cld
popa
mov
shl
icebp
jbe
mov
clc
out
sti
jno
shl
inc
bound
icebp
shl
mov
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
iret
icebp
shl
icebp
rcl
dec
fs
mov
ror
sar
pop
xor
popa
mov
shl
icebp
shl
mov
shl
(bad)
icebp
aad
test
(bad)
cdq
icebp
(bad)
sahf
icebp
(bad)
leave
popa
test
int
lods
jno
popa
mov
jno
popa
mov
jno
popa
mov
jmp
retf
jno
popa
shl
lds
popa
fidiv
popa
fbstp
loope
icebp
mov
call
icebp
mov
loop
mov
loope
jno
popa
repz
test
mov
loope
jno
loope
jno
loope
jno
popa
adc
popa
pop
icebp
dec
popa
cs
loope
icebp
jns
cmp
pusha
loope
icebp
addr16
icebp
outs
popa
inc
jno
loope
icebp
sbb
loope
jno
loope
jno
loope
jno
popa
jno
and
or
lods
pusha
xor
pusha
fwait
jo
pusha
xchg
jo
loopne
jo
loopne
lock
loopne
jo
pusha
retf
pusha
(bad)
lock
pusha
fdivp
and
loop
mov
std
lock
pusha
add
loopne
jo
loopne
lock
pusha
and
lock
lock
pusha
pop
lock
lock
loopne
jo
pusha
jle
and
jo
arpl
jae
jecxz
repz
jecxz
jae
arpl
repz
arpl
repz
arpl
repz
clc
jae
arpl
repz
push
jae
arpl
jae
jecxz
jae
arpl
adc
push
repz
bound
arpl
and
repnz
xchg
jb
loop
repnz
loop
repnz
(bad)
repnz
(bad)
call
jb
loop
jb
loop
jb
loop
jb
bound
jb
loop
repnz
push
repnz
loop
repnz
or
jne
movs
cmc
repz
cmc
out
(bad)
fwait
gs
(bad)
in
jne
in
cmc
pop
in
cmc
dec
in
cmc
bound
jne
in
cmc
or
in
je
mov
hlt
in
fcomip
pushf
fs
mov
lea
adc
inc
in
je
fs
hlt
adc
or
je
and
neg
cmps
ja
addr16
ja
addr16
ja
sbb
addr16
imul
imul
data16
jbe
mov
out
jbe
data16
mov
mov
daa
out
jbe
xor
out
neg
data16
aaa
imul
stc
out
jmp
cmp
imul
add
call
retf
call
mov
call
dec
js
call
or
jmp
jnp
jmp
sti
in
out
jnp
imul
dec
jmp
sti
ins
imul
push
jp
push
jp
push
jp
push
cli
mov
jmp
pop
in
add
std
lock
(bad)
xchg
ins
cmc
jge
in
sub
inc
in
inc
jge
in
data16
ins
popf
cld
shr
mov
clc
in
jmp
in
cmp
push
cld
adc
outs
mov
jg
out
repnz
out
inc
jmp
jle
xor
(bad)
fld
(bad)
in
cld
dec
outs
inc
jle
outs
jge
psllw
loope
jno
loope
jno
loope
icebp
pop
popa
push
jne
aaa
lock
loopne
jo
pusha
ds
loopne
jo
loopne
repz
loopne
jae
arpl
jae
arpl
repz
jecxz
repz
xor
mov
bound
jb
bound
bound
jne
gs
cmc
cmp
gs
hlt
xchg
in
hlt
(bad)
je
fs
hlt
cmp
dec
hlt
pusha
fs
not
out
mov
ja
addr16
js
add
not
out
jbe
out
test
jbe
xor
imul
jns
jmp
adc
jmp
loope
mov
cmp
aaa
call
or
mov
jmp
sti
imul
imul
adc
jp
jmp
inc
jmp
into
in
clc
std
mov
xor
aaa
in
jno
je
push
jl
in
retf
cld
(bad)
in
mov
cmp
in
add
(bad)
stc
out
cmp
out
inc
jg
outs
add
out
sar
cmp
outs
inc
jle
out
add
push
rol
rol
inc
jg
push
inc
mov
enter
mov
ror
or
mov
int
repz
adc
jp
sbb
mov
ret
sub
push
ins
lds
push
cwde
lds
push
pop
inc
jo
add
mov
retf
inc
mov
xor
jns
sbb
xlat
jmp
inc
push
sbb
push
ret
push
or
inc
push
je
sbb
leave
aad
call
dec
jnp
sbb
enter
dec
pop
pop
jg
sub
stos
retf
in
xchg
retf
xor
inc
retf
mov
(bad)
dec
pop
sub
ficomp
int
pop
(bad)
dec
test
dec
push
pop
fs
mov
fadd
iret
adc
jecxz
xchg
dec
xor
inc
dec
add
fsubp
into
cmp
ror
pop
mov
inc
sti
shr
rol
mov
test
inc
sbb
ret
lock
ret
sbb
inc
into
rcl
inc
sbb
inc
iret
aad
lds
aad
lds
aam
inc
sub
ja
add
fild
push
cmp
push
push
add
push
jmp
fstp
leave
xchg
fld
dec
fsubr
enter
dec
jle
mov
ficomp
retf
fstp
adc
(bad)
pop
mov
dec
mov
int
fisttp
pop
sub
pop
mov
imul
test
and
or
pop
jmp
dec
inc
mov
lea
gs
mov
mov
push
mov
mov
pop
xor
mov
xlat
mov
or
lahf
and
inc
xor
scas
and
mov
and
mov
daa
in
aaa
loope
inc
aaa
dec
cmp
scas
es
mov
sub
mov
sub
mov
dec
sub
cmp
sub
mov
xchg
stos
ins
cmp
(bad)
mov
push
sub
call
lods
loop
in
pop
mov
fisubr
mov
mov
pop
cs
adc
xor
jae
ret
mov
push
xor
mov
xor
add
and
xor
pop
and
fidiv
and
aaa
stos
cmps
cmp
and
cmp
es
cmp
sub
cmp
pusha
cmp
sub
cmp
dec
cmp
sub
cmp
pop
mov
mov
stos
mov
mov
lahf
sub
mov
sub
ds
scas
xchg
mov
(bad)
xchg
call
and
inc
bound
clc
add
sub
repz
add
push
xchg
dec
test
xchg
int3
add
xchg
dec
xchg
pop
retf
pop
dec
push
rcl
dec
or
sbb
or
dec
mov
sbb
or
jb
in
sbb
mov
ja
in
cli
or
jle
cld
popf
loop
jo
mov
pushf
jmp
or
push
push
lahf
fwait
mov
xchg
stos
add
nop
and
cmp
adc
sub
ret
add
xchg
pop
add
(bad)
test
adc
cli
add
xchg
jne
push
push
sbb
sahf
push
test
or
and
mov
mov
and
dec
or
sbb
mov
sbb
js
cmc
or
popf
add
xchg
sbb
and
and
les
rcr
push
cmove
out
cmc
sahf
ja
data16
push
mov
loopne
lock
jo
jecxz
jo
arpl
jae
gs
repnz
(bad)
hlt
(bad)
in
je
jmp
lea
push
hlt
fsubr
add
out
jnp
push
cli
fsubr
cmp
or
jnp
pusha
or
jecxz
jae
jecxz
jne
in
jnp
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
ficomp
jmp
jno
mov
cmps
shl
jno
loopne
jns
add
jno
popa
mov
shl
or
push
popa
mov
shl
icebp
shl
icebp
shl
jae
loope
lock
in
mov
push
popa
or
shl
icebp
shl
icebp
shl
icebp
push
loope
repz
popa
push
mov
imul
icebp
shr
inc
repnz
jge
inc
sub
aad
jo
push
xor
popa
or
shl
mov
rcl
pop
dec
fdivr
pushf
(bad)
lods
fs
push
cs
sbb
inc
shl
shl
icebp
sar
fisub
sahf
mov
or
mov
sbb
mov
add
adc
ja
dec
inc
popa
mov
fild
sbb
ret
js
xor
cli
test
into
xchg
mov
das
mov
adc
out
dec
lds
jmp
icebp
rcl
xor
pop
(bad)
cmp
mov
ret
loop
xor
cmp
dec
sbb
push
jge
add
pop
jle
(bad)
es
pop
or
pop
mov
sbb
ins
cmp
movs
iret
mov
iret
iret
pop
aad
xor
in
(bad)
int
(bad)
cwde
(bad)
cmp
fidivr
mov
movs
add
cmp
cmps
jg
(bad)
stos
mov
cmp
cdq
sub
sti
or
xor
mov
imul
cmp
(bad)
mov
adc
mov
cmp
pop
xchg
and
xchg
xchg
fwait
mov
pop
test
adc
push
pushf
mov
pop
jb
mov
xbegin
cmp
outs
dec
in
mov
pop
icebp
retf
out
stos
ds
and
(bad)
adc
dec
add
lahf
pop
pop
aas
sub
mov
and
mov
inc
xor
inc
loope
sbb
hlt
xchg
dec
iret
mov
stos
ins
pop
inc
je
add
retf
imul
jns
mov
xchg
xchg
pop
adc
scas
retf
mov
sub
mov
add
fwait
fs
imul
fs
inc
fbld
sbb
mov
dec
int
outs
fld
jl
jge
pop
cwde
dec
lahf
call
dec
jb
xchg
pop
imul
xchg
push
js
mov
jp
out
jp
cdq
arpl
pop
jno
xchg
icebp
shl
mov
popa
xchg
iret
sar
cmps
ins
jnp
sahf
sahf
retf
dec
jb
jmp
out
xor
fwait
lahf
mov
les
test
ror
xlat
and
jno
movs
cmp
iret
mov
mov
xchg
lahf
xchg
es
movs
add
fcom
jg
sbb
int3
sub
inc
stos
movs
jns
cmp
jge
adc
inc
cmp
mov
xchg
cmps
imul
loop
adc
push
test
pop
or
or
or
out
inc
addr16
les
test
cmp
pop
sub
pop
xor
jno
jbe
jne
xchg
std
outs
loopne
and
mov
cs
dec
pushf
sub
outs
or
xchg
retfw
and
test
jl
cli
push
xchg
mov
inc
cmp
sbb
cmp
inc
out
pop
pop
fstp
rol
loope
xor
xchg
das
cmp
pop
sbb
jg
mov
or
iret
fwait
imul
dec
sbb
arpl
push
out
lods
cli
sub
jb
and
dec
repnz
and
and
or
push
in
mov
pop
cli
ss
rcr
mov
lea
sub
sub
lods
je
cdq
in
jge
aaa
call
xor
in
cmps
or
add
add
pop
cmp
mov
call
pop
pop
repnz
ss
cwde
cs
push
xor
push
addr16
clc
cmp
and
ins
lods
xor
popf
test
xchg
dec
push
popa
mov
fnstcw
xchg
or
pop
sahf
or
pop
sbb
mov
and
inc
adc
inc
jecxz
and
popa
mov
rcl
mov
ret
in
mov
cld
inc
cld
pop
mov
pushf
cmp
mov
shr
mov
popf
popa
mov
shl
icebp
sar
xchg
adc
data16
test
popa
mov
stc
loope
icebp
shl
mov
loopne
jo
loopne
repz
icebp
shl
icebp
push
bound
jo
push
jb
jmp
and
jnp
arpl
or
mov
pop
add
push
movs
jle
add
xchg
jmp
add
in
and
cmp
adc
ret
(bad)
mov
cwde
inc
stos
pop
dec
and
in
sub
sub
js
hlt
enter
fwait
push
add
mov
dec
daa
nop
es
jno
mov
je
cs
out
ins
dec
rol
movs
jle
aas
mov
retf
jno
jmp
jp
cmp
mov
wbinvd
inc
mov
loop
sub
cmc
dec
jo
jne
int3
dec
loop
xchg
test
in
adc
push
test
mov
(bad)
fisub
lock
aaa
stc
sbb
jle
stc
inc
ss
mov
pop
mov
jb
mov
call
dec
mov
ror
pop
add
aam
pop
add
mov
in
jmp
ror
(bad)
imul
(bad)
je
nop
(bad)
popf
std
js
daa
arpl
jp
movs
pop
ss
sar
push
repnz
add
xchg
mov
ins
inc
gs
mov
aaa
xchg
mov
stos
cli
test
xor
hlt
fcmovnb
mov
ret
lock
sub
mov
(bad)
cwde
push
jl
mov
cdq
popf
xchg
not
push
(bad)
push
xor
push
ds
push
mov
mov
push
sub
mov
push
xor
ss
push
cmp
jb
mov
pop
fnstenv
outs
pushf
cmp
adc
dec
outs
xlat
cmp
cmps
add
push
in
mov
cld
mov
mov
xchg
sub
or
test
aas
xor
sub
cmp
push
adc
inc
out
xchg
inc
xor
push
ss
jb
and
out
pusha
(bad)
mov
and
test
cmp
jnp
cli
dec
stc
dec
(bad)
in
loopne
jl
scas
les
dec
popf
fisttp
jmp
in
shr
outs
and
inc
in
pop
cmp
cdq
jnp
dec
mov
cld
(bad)
mov
pusha
repnz
test
mov
cmp
xchg
cmp
(bad)
fimul
out
(bad)
cmc
cmp
repz
or
pop
xor
mov
mov
out
in
cmc
xchg
pushf
xchg
jl
sub
out
xor
das
push
jecxz
add
call
(bad)
dec
ja
jmp
outs
mov
enter
repnz
push
ins
cmp
mov
fdivr
bound
in
push
scas
mov
loopne
rcl
mov
sahf
and
(bad)
sub
and
cmp
scas
add
hlt
inc
xor
push
fwait
rcl
mov
dec
fdivr
movs
add
mov
inc
cmp
xchg
ret
ja
mov
mov
int3
add
add
out
dec
and
jnp
push
xchg
pcmpeqd
dec
and
jnp
push
xchg
pcmpeqd
dec
and
jnp
push
xchg
pcmpeqd
in
and
stos
call
(bad)
repz
repz
adc
mov
mov
and
jmp
popf
hlt
movs
add
add
sub
in
arpl
pushf
push
and
ja
jle
cli
movs
xchg
addr16
mov
xor
test
sbb
call
add
and
out
stos
ins
fucom
lahf
ror
sar
inc
lea
addr16
mov
xor
aam
pop
push
retf
jne
movs
dec
test
mov
sbb
call
ss
retf
icebp
mov
push
in
stc
xor
push
xchg
rol
ins
push
dec
push
ins
jne
adc
inc
neg
xlat
mov
stc
dec
push
repnz
adc
cmp
fisub
xlat
(bad)
jae
jb
xor
sbb
out
sbb
mov
sub
gs
mov
inc
leave
addr16
call
pop
das
fisttp
rcl
out
bound
outs
sub
ret
xor
and
cmp
mov
bound
fcomp
mov
xchg
mov
retf
aaa
or
push
rcl
daa
or
scas
cld
lock
inc
retf
fdivrp
pop
mov
shl
adc
mov
bound
cmp
pop
test
stos
xchg
and
jo
and
movs
les
inc
pop
movs
xor
mov
lock
(bad)
and
cmp
mov
or
mov
(bad)
inc
push
sahf
xchg
ror
outs
(bad)
retf
jns
cmps
xchg
je
in
mul
test
mov
inc
std
(bad)
adc
movs
repz
add
js
jnp
push
mov
xchg
mov
cdq
push
cld
data16
stc
stos
mov
xor
xchg
fisttp
mov
add
and
dec
aaa
fstp
jecxz
je
imul
push
mov
xor
cmp
retf
xor
xrelease
hlt
pop
pop
imul
pop
mov
jl
fwait
mov
call
sbb
clc
dec
push
es
push
pop
addr16
clc
xchg
xor
fnsave
inc
push
jne
push
add
outs
scas
loope
ins
fsub
lock
loop
repnz
popa
mov
popa
mov
push
jecxz
jo
stc
cmp
clc
enter
cmp
add
cdq
inc
xchg
lock
cmp
shl
mov
pop
or
mov
xchg
pop
xchg
xor
inc
adc
fs
mov
repnz
or
add
jmp
mov
pop
push
add
inc
(bad)
push
or
jne
add
lods
pop
mov
xchg
or
inc
les
call
push
inc
cwde
xor
sub
inc
add
nop
fmul
mov
stos
pop
fisub
ja
mov
push
xor
jno
mov
xor
movs
push
in
std
mov
mov
shl
out
or
cld
int3
into
test
imul
push
rol
jmp
sbb
imul
loope
add
loope
out
mov
sti
mov
int3
xchg
dec
imul
pop
jb
or
sub
leave
das
(bad)
rcl
in
dec
int
push
xchg
xchg
adc
pop
add
xor
iret
int3
jmp
sub
or
and
rol
shl
adc
ins
mov
pop
cmp
pop
(bad)
push
in
push
adc
fxch
adc
pusha
je
loopne
sub
cwde
mov
cmp
jo
jecxz
pop
push
nop
call
add
mov
mov
popf
cli
pop
mov
aam
sbb
imul
mov
and
sub
(bad)
fld
dec
cmps
outs
(bad)
dec
jbe
sbb
inc
and
fbld
fs
mul
retf
int
sti
push
test
mov
xchg
push
gs
fdiv
retf
push
sub
cmp
sub
push
mov
sbb
in
fs
retf
fwait
dec
dec
mov
xchg
call
(bad)
cli
dec
pop
rcr
lods
call
out
jg
mov
dec
ins
and
pop
movs
dec
je
push
out
movs
movs
and
sub
dec
dec
xlat
dec
movs
fwait
ins
test
mov
icebp
pop
int
xchg
push
dec
movlps
sub
or
aas
pop
sbb
popf
gs
or
fmul
(bad)
sbb
(bad)
retf
mov
sub
xchg
popa
mov
fidiv
cmp
leave
xchg
fnstcw
retf
xchg
xchg
mov
mov
test
(bad)
sti
test
lahf
jl
repz
xchg
(bad)
push
and
lds
pop
push
fmul
inc
les
leave
in
add
cdq
gs
inc
inc
imul
jnp
int3
das
bound
test
outs
fdivr
int
mov
adc
outs
mov
fmul
dec
cmp
cmp
das
addr16
mov
(bad)
mov
xlat
shr
fwait
pop
add
aas
retf
mov
dec
addr16
jmp
outs
pop
pushf
js
cld
fdivr
out
cwde
call
into
fild
and
mov
add
xchg
lahf
and
iret
inc
adc
xchg
push
and
pop
mov
dec
sbb
sbb
arpl
cmps
into
neg
jle
jge
mov
mov
pop
inc
xor
xchg
fistp
shr
xor
cmc
or
and
or
inc
in
fdivr
ja
inc
out
adc
jbe
push
int
push
cmps
push
mov
inc
mov
gs
retf
mov
mov
fwait
clc
mov
test
idiv
inc
adc
push
test
add
push
inc
adc
inc
js
mov
or
xchg
popa
fild
movs
or
and
clc
pextrw
sub
xor
outs
adc
ror
lods
movs
sbb
adc
ret
mov
inc
cmp
add
lahf
jge
fdivr
jno
cmp
jne
pop
rcr
inc
test
pusha
push
mov
push
imul
push
neg
cmp
sbb
or
ror
loope
add
cmp
mov
jp
jmp
bound
adc
sbb
sub
mov
add
in
jg
adc
sti
cmp
dec
cmps
mov
es
enter
into
not
pushf
leave
dec
cmps
sbb
and
mov
enter
inc
pop
xor
xor
and
jo
pop
push
out
int3
cdq
sti
xlat
into
scas
lock
add
inc
popa
jae
mov
xchg
mov
xchg
scas
ror
push
adc
inc
add
cmp
mov
and
fs
sub
push
aaa
add
mov
call
push
in
test
(bad)
fidivr
or
cli
outs
mov
retf
push
jb
push
xor
stos
mov
repnz
mov
push
js
mov
mov
sub
pop
add
jns
(bad)
fldcw
retf
es
ins
ins
mov
(bad)
sbb
lea
adc
or
adc
add
push
(bad)
outs
out
and
ds
hlt
xor
and
bnd
jle
xor
sub
xchg
add
inc
addr16
enter
sbb
mov
out
enter
ret
enter
and
(bad)
push
out
xchg
pop
jmp
lock
ds
xor
dec
push
fsubr
cmp
pop
mov
mov
lds
sbb
jle
mov
retf
loopne
or
push
cmp
pop
xlat
ins
sub
shl
sbb
dec
(bad)
arpl
xor
xchg
xor
sub
xor
aas
and
xchg
dec
push
adc
pop
pop
sub
mov
out
out
icebp
pop
test
jno
sahf
xchg
inc
stc
mov
ds
into
hlt
aam
sub
jnp
stos
fild
(bad)
test
not
xchg
aaa
or
cli
pop
mov
(bad)
lock
add
mov
imul
dec
stc
pop
sbb
push
xlat
jo
aas
adc
inc
jo
loope
imul
xor
jns
lds
dec
adc
xchg
or
or
cmp
stc
pop
out
mov
cmp
mov
imul
inc
push
mov
sub
repnz
stc
arpl
and
add
aaa
adc
cmps
in
call
adc
xchg
fadd
adc
arpl
cdq
outs
sbb
adc
addr16
jo
xor
outs
gs
pop
test
ja
int3
outs
jne
hlt
dec
clc
dec
push
mov
cwde
movs
aad
xchg
jno
shr
xor
pop
in
fisttp
test
ror
ins
adc
mov
sbb
outs
int3
push
loope
mov
sbb
inc
mov
scas
push
xchg
mul
and
cmps
jne
mov
adc
cmp
int3
adc
mov
idiv
push
imul
or
out
and
out
lea
adc
fsincos
or
and
mov
inc
inc
xor
cmp
loope
xor
shl
and
mov
fst
mov
xchg
fist
ficomp
jl
fwait
pop
xor
test
loopne
sti
or
ss
outs
sub
mov
das
sub
dec
shr
jno
jg
xchg
fnstcw
mov
mov
or
sahf
mov
or
loope
push
fsub
mov
loop
cmc
push
popa
or
popa
mov
push
jecxz
lock
add
pop
shl
call
sbb
and
pop
inc
call
and
jmp
cwde
retf
cli
inc
or
inc
scas
loopne
jne
popa
jne
dec
mov
dec
adc
das
dec
jmp
retf
sar
and
ret
(bad)
xor
or
movs
cs
movs
mov
mov
mov
pop
xchg
stos
rcr
and
push
cmp
into
push
mov
ret
inc
adc
repz
fs
out
in
repz
(bad)
mov
iret
sub
mov
cdq
dec
dec
add
cmps
enter
repnz
repz
bound
stc
imul
imul
xor
dec
xchg
es
sbb
mov
scas
aaa
fidiv
inc
sub
in
call
pusha
mov
idiv
aas
jmp
or
jge
(bad)
jl
punpckhbw
mov
pushf
cmp
nop
ss
imul
popa
sbb
bound
add
movs
mov
mov
push
ret
cmp
out
and
mov
stos
dec
movs
cmc
sub
or
inc
mov
add
mov
fwait
aaa
iret
jp
daa
xchg
addr16
stc
(bad)
gs
and
xchg
popf
push
(bad)
loop
test
xchg
lahf
xor
dec
mov
dec
retf
inc
sbb
hlt
pushf
call
clc
cmp
and
mov
xor
push
or
pop
lods
fs
inc
retf
push
lahf
dec
adc
fcomp
sub
mov
mov
std
mov
fiadd
arpl
(bad)
cmp
iret
mov
push
add
test
fstp
cld
mov
out
jmp
xchg
add
jge
lods
xor
add
pushf
mov
adc
jne
xor
imul
xor
xchg
push
pop
movs
loopne
retf
and
test
(bad)
sbb
jmp
sti
gs
dec
fucomi
pop
bound
sub
push
mov
gs
pushf
mov
pop
sbb
nop
in
ja
inc
or
xchg
mov
(bad)
cwde
sub
mov
(bad)
movs
xor
mov
or
sbb
(bad)
sbb
xchg
ret
mov
lods
xchg
shl
xlat
dec
xchg
cdq
pop
(bad)
loopne
ret
ins
cdq
and
inc
dec
pop
mov
shl
bswap
push
lock
ins
pop
sub
pop
into
dec
and
loopne
mov
jle
(bad)
mov
int
jmp
retf
dec
xchg
jle
adc
jnp
mov
mov
cmps
retf
adc
xchg
(bad)
scas
sbb
out
js
(bad)
test
pop
mov
shl
aam
mov
lea
push
(bad)
push
cmc
repz
xchg
add
mov
out
aas
adc
pop
(bad)
pop
inc
repnz
test
xchg
adc
loop
mov
fs
jle
ret
scas
mov
push
lods
pusha
outs
fld
cmp
repnz
cmp
add
jns
inc
mov
(bad)
push
daa
cmps
lds
loop
cmp
mov
sbb
cmps
cmps
pop
dec
adc
ds
mov
xchg
dec
mov
pop
xchg
inc
adc
inc
sbb
sbb
mov
out
cmp
icebp
sbb
cs
jge
mov
xchg
mov
popa
mov
(bad)
cmp
dec
out
aad
pop
mov
je
pop
mov
fucomp
pop
xor
push
dec
pop
inc
xchg
cmp
pushf
push
sub
inc
loope
in
pusha
(bad)
ror
sbb
cs
in
shl
stc
mov
inc
stos
fbstp
or
cli
ins
mov
xor
out
aas
scas
mov
xlat
sbb
xchg
cmps
xlat
xchg
push
aam
int
push
leave
fs
loop
and
fiadd
jnp
cmp
mov
(bad)
mov
addr16
retf
cmp
push
mov
xlat
inc
sub
loope
popf
jge
add
xchg
int3
sub
push
ins
push
or
(bad)
rcl
iret
(bad)
jecxz
cmp
lods
xor
fwait
mov
push
dec
pushfw
xor
popa
jae
mov
jmp
ds
retf
cmp
dec
fisttp
bound
jge
fwait
cli
mov
mov
test
iret
sbb
dec
mov
ret
in
lods
stos
ror
pop
jno
cmp
add
and
mov
xchg
out
loop
std
mov
sbb
aad
inc
daa
cmp
add
js
pop
(bad)
in
ja
gs
add
loop
scas
adc
push
gs
cmc
fmulp
jle
cmp
mov
xor
sub
test
cmp
push
mov
sub
adc
(bad)
cmp
int3
add
mov
ins
jle
push
nop
sbb
ret
jne
bound
jmp
cmp
leave
loope
push
cmp
loop
and
imul
mov
mov
(bad)
mov
cli
aaa
ret
adc
lahf
stos
movs
lods
cmp
cmp
mov
idiv
pop
rcl
gs
cmp
enter
add
nop
mov
xchg
jp
xor
and
mov
pop
and
dec
scas
and
cmp
rcr
jge
xchg
aam
in
push
inc
jl
test
mov
das
cmp
cmp
jge
call
and
scas
sbb
mov
loope
jne
aaa
cld
inc
sub
cmp
dec
xor
pop
push
xchg
sar
shl
push
jl
ficom
fcom
xchg
pop
dec
xchg
in
fnstenv
sbb
inc
leave
fcom
pop
push
or
mov
cmp
push
xor
jnp
retf
jle
bound
sar
sbb
call
push
out
(bad)
xchg
cli
cmp
and
sub
mov
call
dec
aaa
cmp
push
push
inc
add
xlat
out
test
shr
int3
pushf
dec
mov
stos
pop
pop
mov
mov
add
add
jp
inc
movs
rol
push
jne
js
adc
into
in
rol
out
dec
es
inc
shl
sahf
mov
fdiv
out
dec
adc
iret
aaa
cmp
push
dec
push
fstp
in
mov
mov
outs
popa
sar
jne
jnp
jmp
out
pop
fmul
mov
movs
fs
stc
pop
push
cmp
push
sub
shr
movs
fdivr
sti
retf
xor
and
dec
xchg
cmp
aaa
clc
pop
call
lahf
cld
push
sub
fcmovb
int
neg
fcos
ret
mov
inc
dec
cs
in
cmps
xlat
xchg
retf
mov
stos
ret
in
jae
add
mov
dec
pop
inc
add
xchg
lods
dec
test
mov
xchg
sub
data16
adc
inc
xchg
cmps
mov
dec
mov
js
mov
jns
lods
test
mov
sub
clc
sbb
js
pushf
sti
fwait
or
xchg
mov
mov
stos
xor
mov
idiv
pop
jnp
outs
mov
mov
xchg
sbb
cmp
push
lods
test
mov
add
sbb
lds
push
mov
or
mov
icebp
icebp
sbb
js
xchg
push
sbb
jnp
sbb
dec
jne
fdivr
shl
cmp
lods
stos
cmp
call
out
repz
(bad)
popf
sub
imul
mov
fimul
test
mov
lock
pop
lea
or
hlt
retf
and
push
icebp
mov
pushf
call
pushf
gs
jp
ficomp
push
pop
aas
shr
fld
jmp
test
mov
popf
mov
test
xor
sub
fsubr
inc
div
adc
mov
inc
sbb
adc
and
outs
out
(bad)
repnz
sar
or
test
jbe
dec
sub
loop
popa
fcomp
ja
add
lahf
and
pop
or
xchg
outs
and
pop
jmp
push
pushf
dec
or
lea
inc
mov
fcomp
outs
pusha
pop
jle
push
jae
clc
mov
cli
cli
push
shr
inc
xor
xor
or
addr16
mov
add
addr16
xchg
push
addr16
inc
inc
xlat
sub
hlt
retf
aas
int
int3
cmp
dec
xchg
adc
xor
sub
leave
scas
in
pop
movs
(bad)
push
cmp
add
out
or
inc
mov
daa
leave
add
cli
sbb
(bad)
mov
or
sub
sbb
dec
ret
repz
cmps
xlat
pop
in
sti
fnsave
and
fcom
jle
or
stos
add
mov
pop
sub
stos
dec
jns
mov
lods
push
sbb
ror
in
popf
call
and
test
pusha
xchg
adc
sbb
cmp
(bad)
popa
mov
mov
jp
fmul
push
cld
sub
mov
and
mov
aad
repnz
push
cmp
cmp
mov
pop
xchg
sti
pop
mov
ret
loope
inc
push
aaa
and
dec
jle
sbb
ins
jmpw
cmc
sbb
sbb
lds
(bad)
sbb
test
or
ret
jge
jb
call
scas
daa
mov
adc
inc
fs
test
cwde
or
add
loope
adc
jecxz
jmp
jge
aad
mov
in
xor
jo
mov
jecxz
push
cmc
repz
out
mov
sub
pop
pushf
(bad)
out
and
cdq
arpl
cli
lea
imul
xor
dec
pop
cmp
fdivr
retf
pop
loop
into
push
mov
jo
add
cmp
sbb
popa
jb
adc
inc
aas
adc
or
sub
cmps
mov
add
sbb
or
enter
cmp
pop
cmp
push
cmp
mov
popf
mov
mov
mov
stos
idiv
mov
loop
daa
loope
add
cmp
fimul
in
gs
je
and
rcl
mov
dec
and
adc
aad
and
mul
dec
sti
aas
or
cmp
call
adc
stos
push
cmp
repnz
add
inc
aam
inc
call
push
std
jne
xchg
push
jae
shr
and
cmp
mul
scas
outs
pop
sbb
pop
aas
sbb
adc
adc
add
scas
out
jb
sti
sti
aaa
dec
xchg
daa
pop
jne
add
sbb
xor
in
retf
lahf
pop
or
pusha
inc
ins
fs
sub
and
sahf
dec
cmp
mov
add
in
xor
jge
xor
inc
sbb
push
sub
xor
xor
cmp
pop
repnz
retf
inc
sub
fild
fs
out
rcr
cmc
jge
out
(bad)
clc
sbb
pop
sub
int3
sbb
mov
sub
mov
movs
jmp
add
sub
loop
aas
mov
sub
push
mov
mov
fs
xor
adc
jp
fisubr
jge
js
das
in
popa
adc
in
mov
or
mov
lahf
jmp
test
sti
retf
clc
rcl
jmp
test
popf
fldlg2
aas
xchg
mov
cli
jmp
rol
call
push
lods
shl
neg
adc
imul
xchg
dec
in
ret
call
sti
jmp
mov
shl
mov
loop
repnz
popa
or
loopne
jno
popa
xor
jo
rcr
jo
pop
pusha
test
and
or
or
push
mov
leave
dec
leave
imul
mov
cmp
mov
add
jo
cdq
(bad)
sar
sub
popa
call
mul
fisttp
or
sbb
minps
bound
outs
push
jno
add
pop
add
rcl
data16
imul
je
jl
into
repz
pop
cmps
add
dec
cs
push
mov
dec
dec
lock
fidivr
imul
leave
cmp
mov
adc
xchg
imul
push
xor
adc
and
rol
mov
jge
mov
in
inc
std
sub
push
and
xchg
jmp
inc
mov
mov
add
mov
data16
jecxz
ja
std
mov
jae
(bad)
in
adc
sbb
test
push
pop
sti
sbb
cmps
push
arpl
xchg
aam
push
jecxz
hlt
push
and
sar
mov
push
mov
add
data16
sbb
mov
mov
inc
and
call
lea
dec
push
pop
xor
cs
not
sete
sub
cmp
cs
fmul
test
add
cmp
inc
adc
das
jb
xchg
mov
les
cmovl
inc
scas
inc
cmps
xcrypt-cfb
cmps
mov
stos
fisttp
sub
cs
test
inc
cmp
inc
or
inc
in
push
mov
rcl
call
mov
jnp
out
mov
sahf
in
aam
jmp
and
retf
pop
call
icebp
sub
out
adc
mov
mov
inc
int3
mov
inc
cmp
pop
xor
mov
lds
push
adc
add
mov
adc
pop
into
aam
scas
jb
push
gs
dec
iret
mov
sar
cwde
mov
aam
add
add
call
mov
out
xor
xchg
xor
aaa
stos
aad
pop
mov
adc
es
pop
jmp
call
pop
pop
aam
push
xchg
dec
jp
dec
inc
cmp
lods
xchg
mov
data16
xchg
test
neg
mov
ja
lea
jno
add
sub
rcl
pop
or
loopne
(bad)
test
daa
test
mov
jnp
cmp
dec
aaa
xor
std
inc
(bad)
out
inc
and
aad
(bad)
hlt
nop
bound
cmp
ficom
pop
fwait
out
or
cwde
fidivr
fnstcw
into
rcr
rep
test
out
push
dec
cmp
xor
into
sbb
mov
and
lock
cmp
add
les
cmps
xchg
pop
dec
inc
mov
sbb
icebp
pop
mov
push
inc
inc
pop
add
xor
in
push
xchg
stos
and
int
(bad)
or
ss
xchg
jle
outs
lods
cdq
jmp
sbb
fsubr
outs
fwait
dec
jno
mov
rol
mov
stos
icebp
add
mov
inc
inc
(bad)
lods
push
adc
inc
sar
rcl
xor
jmp
jp
push
test
sbb
out
(bad)
and
push
loope
aad
jmp
int
dec
sub
adc
mov
mov
xchg
ja
add
inc
xchg
imul
dec
xor
push
or
test
mov
sub
les
test
push
(bad)
mov
mov
scas
xor
ret
jbe
lock
mov
jnp
push
(bad)
jno
inc
mov
(bad)
icebp
sub
test
in
lods
pop
mov
lahf
xlat
xchg
sub
xor
sahf
and
mov
add
pop
repz
(bad)
outs
(bad)
stc
mov
and
retf
pop
scas
xchg
inc
sub
and
cmps
inc
add
mov
ret
lods
and
mov
xlat
push
call
cs
or
add
inc
inc
sub
sub
adc
rcl
aam
ret
push
xor
outs
(bad)
push
and
pop
push
dec
mov
sub
xor
adc
mov
add
scas
mov
hlt
lods
xlat
sbb
jbe
dec
test
cmp
add
fidiv
mov
aad
aas
cmp
xor
inc
jbe
lods
test
shr
shl
or
ret
test
stos
push
movs
daa
jae
loopne
push
sti
xchg
push
and
inc
(bad)
repnz
mov
and
test
les
adc
push
jae
push
push
adc
jns
sar
scas
cmp
js
ins
add
stos
sub
or
dec
mov
xor
xchg
fisttp
xor
sbb
call
popf
or
jp
loop
test
xchg
into
bound
stos
sbb
ret
or
scas
inc
pop
dec
pop
xchg
adc
rol
outs
test
es
ins
pminsw
sbb
imul
mov
mov
setle
jo
jns
xchg
rcr
retf
xchg
xlat
xchg
jae
lea
cmps
cmp
add
jp
add
(bad)
retf
nop
nop
xor
imul
inc
and
call
mov
adc
jmp
and
xor
retf
in
idiv
and
cs
aaa
pop
fidiv
lods
pop
sbb
(bad)
sub
sbb
and
sub
cmps
cmp
sbb
jle
aad
test
shl
jb
retf
movs
jmp
jg
xor
(bad)
jbe
imul
mov
add
psllw
inc
and
test
ds
cmp
out
out
arpl
sbb
mov
add
ret
mov
out
mov
inc
rcl
xchg
je
popf
test
adc
mov
xlat
rol
mov
and
mov
movs
sti
(bad)
cmp
pop
loope
arpl
mov
test
stos
cdq
sub
(bad)
ss
and
adc
xor
arpl
(bad)
es
jmp
test
add
iret
push
xchg
div
cli
mov
rcl
(bad)
shl
loope
in
jns
add
xchg
std
scas
sbb
jns
data16
(bad)
xchg
clc
xchg
xchg
mov
jns
adc
pop
inc
sar
pop
neg
outs
sbb
je
lahf
dec
ds
inc
cmp
mov
xor
or
dec
cdq
call
mov
imul
hlt
sbb
popf
dec
scas
dec
xor
call
dec
jle
push
cmp
lods
jg
cmps
push
pop
xor
outs
cmp
addr16
mov
cs
imul
push
rcl
leave
psubsb
xchg
mov
adc
xchg
mov
sub
cdq
jmp
pop
sbb
pop
sub
int
in
mov
cdq
mov
dec
ss
int3
sub
daa
dec
out
push
fs
and
cmp
cmp
retf
fnsave
inc
mov
jp
cs
pop
push
fs
retf
retf
aad
mov
aad
ins
mov
(bad)
(bad)
mov
fsub
inc
inc
fs
daa
inc
sbb
cwde
push
ins
xor
adc
adc
lods
or
sub
sti
shl
mov
loope
and
push
cmp
mov
call
fldenv
nop
and
mov
movs
jl
movs
jnp
test
inc
xor
pop
sti
outs
xor
mov
adc
push
leave
(bad)
adc
daa
xor
cwde
push
jge
retf
inc
pop
mov
mul
outs
test
ret
je
into
neg
adc
fwait
push
inc
adc
jns
mov
aam
loope
add
dec
xchg
pop
push
sbb
lea
fisttp
lods
mov
xchg
push
fst
lock
mov
sbb
mov
pop
adc
(bad)
sbb
xchg
jmp
push
mov
clc
and
or
ds
sbb
mov
inc
(bad)
and
clc
dec
mov
jae
adc
(bad)
dec
cs
movs
popf
stos
sar
loope
sub
cmp
xchg
js
xchg
aad
dec
pushf
cmc
mov
pop
mov
pop
inc
aad
pusha
(bad)
jecxz
loope
add
mov
sub
fld
jo
sub
es
pop
and
(bad)
dec
ficom
push
mov
and
je
out
xor
xchg
scas
movs
jbe
sub
jnp
sub
jo
sub
es
pop
and
(bad)
dec
ficom
mov
inc
mov
mov
dec
cdq
repz
test
fld
sbb
inc
mov
sub
or
adc
cmp
inc
pop
ins
out
cmp
and
ins
cmc
imul
pop
push
jle
outs
loope
(bad)
jecxz
mov
push
(bad)
retf
mov
add
and
mov
fimul
dec
jg
loope
pop
imul
cmp
sti
push
aad
lea
mov
mov
jg
cwde
std
add
add
sbb
cld
pop
leave
loope
cmp
mov
jb
mov
std
jge
out
mov
int
add
ja
in
fdiv
aaa
mov
add
mov
and
imul
stos
mov
repnz
test
dec
pop
pop
in
add
sahf
les
outs
adc
stos
sub
xchg
ret
adc
fiadd
shl
xchg
adc
shr
ds
mul
mov
add
js
pop
into
jp
movs
sbb
addr16
add
setno
cwde
adc
out
adc
stos
movs
ret
jbe
push
enter
sahf
movs
(bad)
lods
pop
or
dec
push
fdiv
adc
mov
jns
outs
dec
repnz
popf
mov
mov
jmp
jno
mov
outs
shl
scas
xor
shl
inc
not
sub
mov
(bad)
pop
cmp
push
xor
adc
ret
fwait
std
inc
jns
hlt
inc
data16
outs
xchg
in
and
dec
push
or
mov
(bad)
mov
adc
push
adc
into
mov
mov
xor
enter
loopne
xor
fisubr
jp
(bad)
mov
(bad)
neg
es
icebp
xor
cvtps2pd
jne
cmps
inc
dec
or
imul
sbb
fdivr
retf
in
mov
das
iret
push
jns
aam
stos
xor
add
or
push
mov
xchg
jno
or
(bad)
inc
dec
mov
inc
mov
xor
cmp
enter
ds
push
dec
mov
push
dec
pop
cmp
shr
movs
pop
retf
aad
mov
lods
jnp
mov
pop
in
jl
and
add
push
nop
adc
stos
sbb
push
rol
add
mov
mov
fimul
pop
xor
daa
aaa
or
lods
lea
mov
bound
add
ror
nop
push
cmps
add
push
iret
popf
mov
cli
movs
mov
jge
iret
jp
pop
stos
clc
call
aas
retf
jge
cmp
out
sbb
js
push
mov
cmps
outs
mov
sub
pop
iret
inc
jl
sbb
adc
je
cmp
push
icebp
lds
aam
mov
(bad)
int3
stc
outs
xchg
(bad)
dec
sub
ss
mov
push
je
bound
mov
push
mul
pop
shl
(bad)
std
jnp
sbb
xor
std
pop
sti
mov
cdq
jns
sub
or
xor
xor
mov
dec
lahf
jle
jbe
fmul
fild
(bad)
shl
fild
adc
mov
sub
fwait
retf
stos
pop
mov
test
ss
fnstsw
cli
mov
inc
jmp
mov
pusha
loope
cmps
sbb
inc
pushf
xor
and
xchg
mov
popf
sbb
ins
sbb
rcl
in
lahf
(bad)
pop
pusha
mov
adc
rcr
sbb
ins
rol
jae
jg
lahf
(bad)
fwait
inc
test
out
out
push
mov
mov
push
mov
(bad)
std
inc
jo
sbb
or
mov
mov
pop
push
pop
pop
je
add
adc
add
add
push
scas
jmp
adc
cmp
mov
mov
pop
nop
aas
pop
test
cmps
rol
ins
mov
mov
push
push
in
jmp
aaa
shr
mov
mov
mov
popa
inc
cmp
push
icebp
(bad)
sbb
icebp
sbb
(bad)
je
pop
mov
bound
(bad)
sbb
add
add
adc
scas
stc
inc
inc
in
scas
push
mov
pop
div
cld
mov
mov
add
shl
in
hlt
xchg
(bad)
mov
mov
push
pop
inc
mov
movs
inc
cs
mov
dec
cmp
push
lea
addr16
nop
into
ss
inc
aaa
add
push
ror
retf
retf
cmp
dec
adc
pop
jne
ins
icebp
mul
and
mov
addr16
iret
ins
std
in
imul
scas
mov
popf
cs
inc
test
cmp
xor
lds
into
pop
push
daa
es
adc
cwde
mov
daa
adc
add
mov
xlat
mov
jle
xor
rcl
aas
imul
xchg
stc
out
pusha
adc
stc
cmc
adc
push
jle
jg
bound
jl
out
or
jmp
sub
xchg
pop
out
sub
jecxz
xor
add
or
jecxz
hlt
mov
push
ss
test
iret
dec
cmc
shl
test
in
rol
and
cmps
fsub
scas
or
je
or
fdivr
js
rcr
push
or
int3
js
idiv
push
shr
scas
mov
call
cmps
push
mov
or
nop
js
jae
pop
test
or
cdq
aaa
std
mov
aas
ins
inc
jp
cmp
jg
(bad)
jno
jmp
jecxz
adc
stc
ins
add
cdq
js
in
mov
cmp
dec
pop
push
call
mov
jae
loopne
sar
dec
sub
es
or
push
les
popf
call
xchg
call
push
or
sar
popf
sbb
aam
mov
dec
(bad)
xor
retf
(bad)
hlt
adc
push
ret
xor
xchg
adc
shr
mov
je
repz
movs
inc
aas
jmp
push
movs
inc
dec
push
(bad)
and
inc
pop
addr16
inc
aaa
fistp
int
jnp
bound
mov
add
icebp
pop
neg
clc
add
and
inc
scas
ds
dec
in
mov
dec
stos
push
inc
(bad)
jo
jne
pusha
fsubr
pop
add
popa
push
sbb
repz
sbb
adc
jmp
clc
popf
imul
add
adc
call
retf
or
jns
retf
push
sub
inc
retf
cmp
cmp
mov
or
in
loope
ret
jmp
call
push
fldcw
mov
call
xor
sbb
adc
daa
dec
mov
cmps
in
mov
in
(bad)
in
add
xchg
sti
das
inc
or
cdq
jmp
loopne
inc
jge
pop
fimul
mov
adc
popa
sub
clc
mov
scas
arpl
push
mov
mov
dec
add
pop
inc
lock
cmps
pop
outs
pop
push
push
pop
jmp
mov
shl
or
push
popa
or
loope
icebp
shl
adc
shl
push
js
add
sbb
clc
or
popa
or
mov
pop
xor
cmps
fcom
(bad)
jns
cmps
cli
outs
inc
or
xchg
xor
xchg
cli
add
sub
scas
push
inc
push
inc
cmps
loope
cmp
push
out
mov
or
cmps
jns
dec
aaa
pop
ror
mov
lods
and
inc
sub
ret
xchg
rcr
call
test
retf
bound
fisub
mov
repnz
aas
inc
inc
xchg
jecxz
mov
es
ins
rcr
sub
fwait
mov
push
in
mov
push
jg
not
rcl
dec
ret
out
mov
mov
push
mov
or
iret
and
push
pop
adc
dec
rcr
jb
pop
loopne
mov
popf
push
loope
adc
sahf
clc
test
dec
sar
jl
shl
lahf
pushf
adc
rol
das
sahf
mov
repz
mov
popa
pop
pop
ins
and
cmps
sahf
test
mov
jno
cs
inc
ins
xchg
std
xor
jmp
add
js
outs
sahf
int3
push
fidivr
jnp
rcr
mov
push
shl
nop
dec
lods
hlt
cmps
and
fisttp
cmp
mov
mov
and
ficomp
dec
aaa
and
mov
cmps
push
sbb
sub
sub
imul
dec
shl
or
cmp
mov
test
sbb
test
xchg
dec
mov
inc
std
sub
mov
cmp
repnz
call
fcom
leave
push
ror
push
jl
sub
adc
pushf
sbb
mov
mov
aaa
mov
shr
sub
(bad)
out
fld
sar
push
je
(bad)
in
jmp
es
out
cmps
add
cmps
and
sbb
call
jb
sub
and
retf
mov
sub
push
push
mov
xchg
call
cdq
pop
jg
sbb
jge
iret
xor
sub
jne
cmp
cmps
(bad)
inc
gs
xor
shl
popf
inc
inc
fld
jb
xchg
cs
xlat
xor
and
and
adc
inc
push
cld
fbstp
loopne
mov
sahf
inc
loope
pop
add
inc
cs
add
shl
sub
test
shr
xchg
ins
or
imul
in
jmpw
popa
push
pop
or
rol
les
mov
sbb
lock
data16
jnp
les
fs
ds
push
lea
pop
mov
jmp
jl
xor
ficom
jmp
je
mov
mov
xchg
(bad)
inc
les
arpl
mov
sbb
hlt
shl
mov
jb
test
shl
fbld
adc
inc
dec
hlt
cli
jne
data16
mov
std
xlat
dec
ffree
scas
cmp
dec
jmp
sub
inc
mov
mov
add
enter
mov
mov
dec
add
test
pop
jb
sti
mov
lea
test
div
ret
shl
cmp
out
jne
cmp
mov
mov
sub
outs
push
fwait
push
inc
je
repz
dec
ds
ins
and
mov
inc
lods
dec
loopne
jg
scas
sbb
in
mov
hlt
xchg
sub
fsubp
sub
pop
ret
jge
ss
inc
loopne
outs
or
lock
les
sub
in
dec
(bad)
pop
inc
xchg
and
pop
mov
inc
repz
pop
add
mov
adc
enter
stc
js
cdq
movs
jmp
jae
in
pop
addr16
pop
pop
xor
jg
mov
pop
xor
sbb
jle
mov
adc
enter
in
inc
sub
jae
mov
cmp
xor
push
or
xchg
test
je
xor
add
and
int3
jns
rcl
lds
cmp
jne
sti
xchg
mov
or
into
out
xchg
fiadd
adc
lds
iret
jb
push
push
jns
push
cwde
mov
repnz
jne
and
bound
jne
scas
loop
mov
mov
sub
hlt
ins
(bad)
cmps
js
xchg
adc
push
dec
push
push
retf
pop
mov
les
xchg
adc
popf
pop
jge
mov
push
loope
pop
ret
loopne
sub
xchg
rol
or
data16
and
mov
jo
mul
mov
hlt
loope
inc
cwde
aaa
imul
popf
dec
int3
mov
out
inc
rcr
xchg
pop
outs
cmp
fcmove
mul
add
adc
mov
xchg
xchg
xlat
jne
inc
nop
in
jg
push
retf
mov
leave
addr16
data16
mov
in
fwait
test
sbb
aad
mov
fcmovnu
div
lods
test
cmp
sti
sbb
fs
cmp
pop
jmp
add
imul
into
in
xor
add
xchg
neg
pushf
outs
jae
ds
mov
mov
jae
into
xlat
clc
sbb
call
add
ds
sub
imul
ja
pop
cli
push
(bad)
jo
and
mov
rcr
push
add
mul
lods
xchg
inc
xchg
sub
fsubr
and
inc
outs
mov
pop
sub
popf
jns
repz
and
cmp
pop
and
in
mov
xchg
sahf
push
inc
retf
fadd
and
sbb
adc
sti
mov
mov
ins
add
or
lock
xor
push
xchg
adc
cmp
jecxz
and
xchg
ds
ret
fsubr
cmp
imul
in
sbb
enter
scas
stc
ins
xchg
pop
sbb
xchg
and
or
rol
xlat
sub
or
push
push
and
mov
pop
inc
inc
mov
ffreep
adc
add
(bad)
shl
mov
iret
rcl
cdq
test
mov
xchg
sub
mov
jb
xlat
ret
sub
jle
sub
jb
das
push
fisttp
jmp
sar
inc
imul
repz
jo
push
in
aas
adc
pop
and
add
inc
inc
scas
rcr
imul
xor
xlat
xchg
push
aad
push
adc
outs
pusha
and
pop
xchg
add
addr16
xchg
mov
dec
popa
jo
sbb
test
fisub
pop
mov
or
add
sub
and
and
cmp
retf
mov
mov
fisub
mov
push
push
mov
stos
inc
adc
mov
push
into
std
dec
cmps
scas
out
lea
xrelease
in
mov
xchg
ror
es
repz
push
inc
dec
jae
imul
inc
call
xchg
stos
sbb
sar
push
in
(bad)
(bad)
fadd
and
not
jecxz
les
jg
xchg
pushf
cmps
adc
mov
cwde
lods
ja
popf
dec
retf
add
mov
adc
pop
enter
jb
loopne
inc
paddsb
(bad)
pushf
push
add
push
or
stos
test
stc
add
or
pop
out
movs
or
cmp
dec
retf
(bad)
shl
mov
cmp
xor
(bad)
jmp
test
and
cmps
in
icebp
adc
adc
xor
or
mov
repnz
adc
inc
pop
(bad)
repz
test
stos
adc
mov
xchg
and
sbb
mov
loopne
ror
jae
popa
cmps
call
pop
int3
stos
xchg
cmps
dec
pop
mov
jle
inc
and
int
ucomiss
mov
mov
or
ret
dec
inc
xchg
inc
shr
jmp
aaa
mov
inc
push
xchg
sbb
jbe
xchg
mov
and
repz
add
inc
movs
sahf
mov
test
xor
gs
jp
pop
mov
inc
mov
fcomp
jbe
out
nop
or
push
inc
adc
out
xchg
add
div
scas
lea
lods
cdq
test
and
xchg
xchg
sti
jp
adc
pop
xchg
sbb
outs
fs
jbe
inc
arpl
std
popa
ret
cmps
dec
xchg
sub
inc
shl
add
iret
jae
imul
push
push
or
imul
sub
jecxz
lods
adc
aaa
jp
sbb
adc
dec
pushaw
jl
add
movs
xlat
movs
outs
(bad)
cmp
dec
les
mov
call
push
enter
or
fstp
jl
adc
and
and
push
loope
push
push
stos
ds
int
and
mov
push
and
pop
test
mov
bound
xchg
jecxz
add
jae
mov
pop
adc
xor
lods
push
in
je
xchg
or
loope
jge
daa
or
and
cmp
cmp
ins
mov
rcr
in
adc
mov
in
and
cmps
ds
jp
xchg
mov
sbb
adc
cmp
les
xchg
js
enter
add
pop
mov
sti
or
fdiv
pop
lock
inc
sar
imul
scas
pop
iret
fldenv
lods
lods
mov
push
sub
sub
mov
or
in
mov
xor
mov
push
jecxz
or
in
ret
out
or
sub
adc
jnp
mov
sub
cmps
rol
call
out
mov
xor
mov
imul
out
pushf
shl
icebp
shl
lock
stc
sbb
rol
inc
cmp
repz
xor
int3
sbb
outs
icebp
inc
mov
outs
ins
jae
imul
cwde
jle
out
add
lea
mov
nop
push
loope
stc
jns
sub
adc
jae
pusha
jecxz
and
xlat
mov
inc
in
jg
imul
jae
stos
int
pusha
jl
push
jae
sbb
pop
fbld
jns
dec
lods
es
push
mov
and
ret
sbb
cmp
ffree
stos
sahf
ins
test
shl
push
(bad)
mul
sbb
adc
arpl
jo
popa
or
popa
mov
shl
sbb
leave
cmp
test
add
mov
or
imul
inc
ror
jg
mov
mov
pop
or
repz
add
movs
cmp
or
sbb
pushf
scas
pushf
fidivr
aas
loope
xchg
xor
sbb
leave
pop
clc
fdivr
add
adc
rcr
mov
adc
out
movs
dec
and
js
ds
jmp
ss
cmp
xor
cmps
outs
pop
mov
inc
xchg
pop
call
into
mov
mov
add
lds
imul
int
cld
mov
sub
icebp
ds
add
hlt
repz
call
push
call
test
jb
push
and
jne
pop
and
hlt
xchg
int
popa
mov
adc
xor
enter
mov
fmul
add
pop
mov
rol
jmp
icebp
in
jb
cmp
addr16
shr
leave
cs
xor
cmp
adc
jl
loop
rol
stc
adc
xor
mov
mov
aad
push
(bad)
pop
rol
fstp
out
xchg
into
fwait
adc
loop
xor
retf
outs
lock
push
sub
std
pop
cs
mov
(bad)
mov
sub
fnsave
push
cmp
fmul
(bad)
xchg
out
jmp
ret
jne
es
xchg
inc
push
idiv
ins
rcl
push
add
popf
cmps
xchg
les
imul
jno
xchg
stc
cmp
jmp
les
movs
sbb
retf
leave
fadd
jno
push
mov
out
add
out
icebp
outs
les
inc
xchg
stc
into
dec
mov
mov
jle
push
sub
cmp
sbb
movs
push
das
in
iret
jno
add
call
mov
mov
or
xchg
(bad)
push
mov
int
mov
mov
and
cs
mov
ret
cmps
cmp
mov
or
push
xchg
cmp
mov
(bad)
mov
fistp
mov
out
pop
cmp
in
add
pop
test
or
adc
pop
adc
jmp
shr
cmp
mov
xchg
jae
push
out
xchg
sbb
lds
(bad)
clc
jb
pop
mov
push
stc
cmp
push
pop
jge
sbb
inc
or
cmp
push
inc
ins
iret
cmc
inc
scas
(bad)
jp
push
cmp
jns
sbb
push
test
je
pop
test
xor
jl
mov
pop
adc
stc
daa
call
pop
xor
add
icebp
lods
call
push
jl
mov
xor
mov
(bad)
fdiv
jmp
dec
mov
idiv
popa
xchg
(bad)
fucomi
cld
pop
imul
pop
daa
aad
xchg
fnstsw
and
jmp
ret
addr16
hlt
xchg
adc
lahf
inc
ret
into
add
jb
stos
sub
cmp
sbb
lods
pop
aam
call
ds
push
xchg
(bad)
sub
in
pusha
aas
gs
inc
scas
stos
and
adc
push
cli
pop
mov
retf
mov
fldl2e
and
pop
push
cmp
mov
push
test
cli
xchg
pop
dec
aas
xor
jae
in
mov
push
stc
mov
push
fmul
nop
lahf
test
jl
(bad)
loop
repz
out
fild
js
fisubr
in
jmp
scas
ja
sub
jno
shr
add
repnz
sub
test
call
mov
mov
and
ss
mov
xchg
add
adc
lea
mov
cmp
cmps
add
inc
push
xchg
and
jle
xor
or
and
sub
jns
sub
pop
iret
sub
jle
fsub
pop
inc
retf
imul
pop
retf
jmp
shl
test
les
bound
mov
out
add
mov
adc
movs
(bad)
f2xm1
dec
fnstcw
adc
(bad)
or
nop
push
cmp
shl
scas
dec
inc
adc
loopne
adc
fwait
aas
mov
cmps
dec
sar
pop
pop
inc
in
aad
dec
push
sar
jmp
mov
cmp
inc
rol
add
pop
cmp
dec
retf
shl
clc
repnz
ins
push
inc
sub
out
cmps
fiadd
push
or
jecxz
push
cwde
xchg
out
lss
loop
jmp
arpl
mov
rcl
loopne
sub
mov
dec
mov
rcr
cmc
or
add
loopne
scas
into
mov
stos
or
xor
aad
sub
repz
cld
jb
cmp
ss
or
mov
mov
push
dec
push
(bad)
repnz
or
mov
rol
(bad)
jns
sti
ins
adc
out
cld
sub
data16
movs
daa
add
cmc
mov
sub
cmp
cmc
mov
pop
add
mov
adc
addr16
(bad)
add
cli
adc
sahf
push
(bad)
test
pop
jne
pop
jecxz
mov
jns
or
lock
push
stc
in
fnstenv
pusha
mov
data16
or
add
sub
lods
inc
jno
ss
pop
pop
hlt
mov
hlt
ficomp
call
call
lahf
push
ja
inc
cmp
fisttp
popa
sti
push
adc
test
leave
cli
fimul
jmp
mov
add
pop
xchg
dec
ins
out
leave
mov
inc
add
test
nop
xor
jmp
test
xor
pop
out
scas
sahf
or
leave
pop
inc
push
cmps
jg
push
adc
shr
repnz
jmp
jb
mov
pop
or
gs
ss
mov
shr
imul
(bad)
pop
fcomp
sbb
lods
cli
popf
push
cwde
mov
ret
push
jp
mov
test
mov
push
xor
add
jmp
(bad)
ins
fcmovnbe
sbb
or
push
pop
mov
xchg
and
xor
mov
in
movs
sub
sub
out
in
pop
aad
fcom
(bad)
fisttp
dec
popf
jmp
cmp
lods
adc
imul
sub
jge
mov
mov
frstor
clc
cmp
mov
mov
dec
xchg
mov
jp
test
pop
jl
mov
add
imul
pop
sub
dec
dec
and
test
sub
sbb
jns
daa
jno
in
sub
mov
in
sub
(bad)
sbb
mov
xchg
fsub
pusha
xchg
in
retf
in
lea
xchg
or
retf
into
out
fs
sbb
call
mov
into
xor
out
or
leave
(bad)
adc
and
mov
je
push
xchg
and
ret
and
dec
mov
mov
mov
repnz
and
loopne
in
popa
out
push
pop
cmp
lock
retf
cmp
call
pop
mov
sub
popa
push
mov
sub
lods
dec
xchg
cmc
out
inc
outs
fist
clc
inc
cmp
in
inc
cs
leave
adc
jbe
fwait
dec
aaa
out
pop
mov
jmp
xchg
int
fadd
repnz
dec
stc
cmp
mov
shl
jmp
mov
shl
or
popa
or
loope
icebp
shl
adc
shl
push
js
push
xor
sbb
adc
popa
or
mov
push
jo
fadd
scas
cmp
ror
sbb
sub
jge
loope
in
stc
pusha
cwde
sbb
jo
inc
xchg
jns
mov
cmp
mov
and
push
sbb
out
iret
dec
mov
fnsave
fidiv
inc
fnstenv
cmp
or
mov
iret
sub
jmp
(bad)
out
sub
jmp
jb
fs
(bad)
sub
pusha
push
unpckhps
pop
jge
jl
jne
mov
adc
or
mov
mov
test
call
mov
inc
and
pop
xor
cwde
pop
enter
cmp
fadd
push
add
or
adc
dec
xchg
ja
aas
pop
push
aas
inc
inc
or
es
cmps
retf
pop
xor
sub
pusha
in
xchg
push
lods
imul
inc
imul
or
push
jl
and
mov
sub
mov
scas
and
sub
enter
mov
jp
outs
ror
mov
inc
inc
call
movs
loopne
addr16
idiv
retf
and
pop
pop
add
jb
cmps
stos
sbb
clc
mov
clc
dec
inc
sub
cdq
inc
mov
mov
imul
popa
adc
dec
adc
push
div
inc
mov
ds
push
test
aam
scas
shl
retf
cmp
sub
xor
cmp
add
add
inc
jl
mov
mov
ror
aaa
iret
mov
mov
mov
ins
inc
cmp
mov
inc
jnp
cmp
xchg
or
mov
xchg
cli
push
mov
inc
int
and
fs
mov
fwait
fs
xchg
sbb
hlt
repnz
leave
or
push
and
add
pusha
inc
adc
dec
aas
pusha
add
loope
dec
or
mov
xchg
xchg
adc
fld
sub
or
mov
mov
cmps
movs
(bad)
and
jno
scas
addr16
jns
test
dec
rcl
mov
test
xor
cmp
in
or
xchg
xor
sbb
jno
sub
jge
mov
lahf
xchg
loop
xchg
mov
push
jns
jno
xor
pusha
nop
push
mov
xchg
push
ins
xchg
(bad)
ja
or
or
nop
sbb
sar
(bad)
and
cld
int
cwde
(bad)
in
loope
pop
daa
mov
hlt
inc
mov
cdq
retf
push
shr
jp
ret
outs
in
stos
test
add
xor
movs
fnstenv
mov
cmps
adc
mov
pusha
ins
(bad)
popa
ret
or
aad
mov
fisttp
lahf
scas
pop
popa
fild
xor
adc
xchg
rcr
fbld
inc
(bad)
enter
fwait
dec
pop
test
(bad)
xchg
addr16
jnp
cmp
sar
pop
pop
jo
or
stc
mov
adc
mov
adc
xor
add
add
(bad)
mov
and
mov
mov
or
mov
loop
push
sbb
lahf
push
cmp
jns
dec
test
jo
xchg
in
mov
sub
xchg
jge
xor
add
push
fnstcw
nop
in
adc
imul
mov
mov
jo
cld
sbb
std
pop
cmp
mov
sahf
ret
sbb
shr
and
sbb
fdiv
retf
jmp
clc
add
xor
repz
push
stc
cdq
outs
lods
into
jmp
jmp
xchg
inc
nop
div
and
sbb
cs
xchg
jle
sub
in
inc
add
mov
or
push
(bad)
cld
fcmovb
ror
dec
popa
and
adc
pop
add
xor
fisttp
jne
clc
adc
es
push
jl
arpl
or
mov
imul
js
int3
mov
not
lock
push
ret
neg
xchg
push
push
pop
repz
jmp
test
mov
popa
xor
test
cmp
mov
push
push
mov
fwait
out
call
mov
movs
repnz
mov
icebp
inc
mov
test
push
and
mov
into
mov
inc
inc
aaa
shl
xor
add
adc
mov
and
add
xor
or
icebp
ficom
xchg
mov
dec
and
lahf
jo
add
popa
sbb
mov
xor
inc
mov
mov
out
in
add
sar
add
mov
and
dec
rol
call
les
sub
mov
dec
(bad)
xchg
iret
shl
enter
(bad)
inc
and
fsubr
mov
jmp
add
xchg
sub
in
pop
adc
pop
loope
aad
enter
sub
mov
idiv
jecxz
xchg
scas
ret
ret
jl
push
enter
sbb
dec
adc
pop
in
sub
cs
mulps
dec
stos
and
sti
int3
scas
mov
imul
jmp
les
cmp
push
hlt
mov
or
adc
je
xor
retf
(bad)
in
test
pop
and
test
call
ret
movs
jo
jle
jmp
std
aaa
fstp
stos
or
shl
fdivr
mov
or
adc
popf
jmp
sbb
sub
push
cmc
sbb
mov
sub
ins
or
jp
dec
add
nop
call
es
sub
outs
mov
and
(bad)
(bad)
mov
leave
cs
sar
or
sbb
not
mov
jmp
retf
jl
pop
nop
pop
test
mov
in
mov
xchg
mov
ins
pop
cli
inc
xchg
xchg
hlt
test
sub
adc
jo
xor
mov
pop
sub
jbe
mov
call
pusha
bound
jge
stos
xchg
aam
sub
and
lock
push
xchg
push
sbb
movs
xchg
or
mov
mov
aas
add
pushf
(bad)
stc
test
loope
cs
or
push
pop
test
aam
retf
add
imul
(bad)
call
scas
outs
rcr
dec
push
or
mov
push
xor
dec
jge
mov
adc
or
jb
js
loopne
fadd
pop
xor
out
jmp
cli
aad
or
ror
pusha
ins
cmps
jb
leave
ror
cmp
mov
jno
push
push
gs
xor
popa
push
sub
sub
dec
add
dec
cdq
xchg
jno
std
fs
test
xchg
gs
rol
mov
jecxz
dec
pusha
shl
jl
test
sub
loop
test
movd
loopne
and
rcr
fs
nop
hlt
jl
or
dec
mov
xchg
in
add
cmc
push
pusha
push
cmp
icebp
jns
xlat
shr
dec
dec
es
lods
pop
out
shl
cmp
rcr
call
and
xchg
shl
pop
mov
ins
and
sub
mov
ins
and
shr
adc
popa
xchg
retf
xor
cmps
stc
pop
dec
mov
xchg
pop
fidiv
cli
jp
add
scas
sub
mov
dec
sbb
std
add
mov
xor
lods
ficomp
mov
sbb
mov
cli
pop
cli
xchg
popf
jnp
jae
cmp
cmps
cmc
ficomp
xchg
and
sub
lock
sub
sbb
(bad)
xchg
imul
mov
cmps
mov
push
icebp
scas
ja
mov
pop
scas
and
shl
xchg
test
dec
mov
call
dec
fdivr
shl
fstp
xlat
and
mov
pop
mov
mov
xlat
lea
hlt
mov
xchg
pop
jbe
ins
jnp
mov
mov
hlt
sub
fs
cmp
fcom
test
jns
retf
mov
jno
jecxz
cld
popa
cmps
inc
(bad)
fcom
cwde
mov
push
cmp
lods
adc
aad
cli
fsubr
jb
pop
mov
shr
lods
popa
aam
xchg
xor
arpl
hlt
jmp
adc
daa
inc
shl
ret
cmp
xchg
jl
dec
mov
repz
jbe
push
sub
dec
rol
mov
fst
push
xor
and
cmps
ror
mov
jae
xchg
mov
jae
pushf
push
fld
pop
dec
std
icebp
popf
xor
mov
call
out
je
stos
mov
xchg
dec
popa
and
scas
outs
add
(bad)
jo
xlat
(bad)
gs
rol
xor
push
push
mov
movs
gs
popf
(bad)
sbb
in
jae
cli
cwde
shr
adc
ret
hlt
jno
cmp
pop
sub
rcr
and
aas
nop
jbe
retf
push
jns
lock
cmp
xor
retf
lea
jno
xchg
pop
ins
repz
mov
push
or
scas
call
mov
xchg
cs
xor
mov
adc
adc
imul
fwait
inc
ins
fistp
stc
xor
dec
push
popa
popa
inc
or
ja
je
dec
push
push
inc
and
test
cdq
div
push
mov
iret
ret
adc
icebp
icebp
jge
ja
mov
ins
sub
mov
inc
movs
(bad)
adc
test
neg
push
inc
retf
jg
jne
push
std
adc
dec
mov
div
xchg
mov
rcl
imul
mov
mov
(bad)
in
adc
ins
test
outs
adc
in
xlat
adc
mov
jmp
loope
loop
pusha
mov
shl
or
popa
or
shl
xor
stc
test
inc
and
pop
pusha
jno
dec
cwde
xchg
push
sbb
jmp
push
dec
mov
cmps
std
bound
loope
dec
scas
dec
ficom
ja
not
xor
xor
ins
or
dec
test
div
sbb
push
cmp
xchg
sti
sub
sub
pop
xor
xchg
test
push
mov
sti
lea
add
icebp
push
sbb
test
test
mov
loop
aaa
jbe
sub
out
jnp
mov
push
mov
aad
arpl
mov
(bad)
jge
mov
test
dec
sub
push
and
fs
cmp
jle
aaa
inc
call
lods
sbb
cwde
add
in
adc
popf
stos
fdiv
and
xchg
jge
out
add
jg
fisubr
(bad)
xor
pop
mov
sub
mov
push
dec
xchg
aaa
xchg
sti
enter
popa
push
shr
pushf
and
mov
or
ins
in
push
push
mov
sbb
xor
out
pop
aaa
pop
dec
sub
push
lahf
xchg
pop
in
push
hlt
push
sbb
mov
nop
jp
fisub
mov
cmp
mov
test
leave
cmp
in
in
out
mov
rcr
jp
sbb
mov
xchg
adc
test
push
dec
lds
sub
fsub
inc
xchg
xchg
mov
pop
inc
test
rcr
jg
adc
inc
xchg
popa
nop
mov
sahf
hlt
pop
inc
in
push
push
mov
add
movs
hlt
loope
pop
sub
cmp
jmp
fisubr
mov
push
cmp
in
and
call
adc
clc
add
pop
cmp
movs
ror
dec
mov
sub
sbb
loope
sahf
sbb
ds
mov
cmps
pop
out
xor
xchg
dec
jmp
jnp
and
clc
stos
dec
xchg
icebp
mov
test
out
mov
jle
jns
rol
jl
mov
add
cmps
inc
stos
loopne
in
mov
push
dec
push
push
movs
stos
gs
sahf
ror
and
addr16
or
aam
cmp
jb
loop
shl
xchg
mov
(bad)
and
cld
clc
lods
stc
test
repnz
mov
(bad)
jns
pop
push
je
ds
push
add
loope
adc
or
xchg
fild
push
xchg
mov
and
inc
rcr
xor
pop
in
movs
inc
jmp
ins
outs
sub
ret
mov
or
fcom
fcmovu
and
std
xor
and
inc
icebp
cmp
data16
cld
stc
push
hlt
push
mov
std
ins
(bad)
ror
lods
arpl
je
xchg
jae
mov
or
outs
in
nop
cmp
push
cwde
loope
mov
test
int3
scas
mov
adc
nop
jge
and
mov
add
call
mov
pusha
out
and
not
adc
and
clc
or
sbb
xchg
mov
dec
rol
inc
mov
dec
out
loopne
ror
jno
cdq
push
outs
arpl
(bad)
lea
push
sub
jnp
inc
fmul
adc
xchg
in
jnp
or
add
int
dec
jg
mov
dec
and
xlat
mov
push
inc
xor
fstp
xor
inc
imul
iret
xchg
push
xchg
adc
call
add
sbb
ret
and
xchg
in
lds
cld
xchg
ror
cmp
push
pop
call
icebp
sbb
adc
pop
fist
inc
test
leave
lods
lds
mov
pop
je
xor
push
(bad)
pop
sbb
or
out
cmp
inc
outs
add
nop
sub
xchg
sub
in
scas
sbb
aad
in
and
pop
and
test
mov
ror
ja
int
mov
loope
enter
fidivr
cmps
xchg
sti
xor
test
int3
push
ins
cmps
add
add
mov
pop
mov
inc
outs
jp
mov
jo
pop
pop
xchg
ret
xor
fld
fs
popf
jg
mov
lock
mov
mov
mov
fld
jns
shr
mov
es
mov
mov
and
add
adc
jecxz
and
and
mov
repz
inc
or
or
cmp
in
cmp
gs
or
aam
push
cmp
cmp
sub
mov
and
neg
imul
ins
xchg
fimul
out
pop
xchg
jmp
jmp
pusha
sub
cdq
xchg
cwde
movs
jge
add
or
lea
adc
add
or
cdq
push
push
loope
and
pop
dec
dec
std
ins
rol
fucom
inc
mov
hlt
fisub
fsub
je
add
pushf
sbb
add
addr16
daa
xchg
leave
sub
add
jno
scas
xor
rcl
adc
xor
cmps
xor
mov
mov
push
enter
dec
out
stc
fcom
test
shl
jle
sub
pop
nop
mov
mov
jne
retf
in
(bad)
mov
cwde
je
ror
push
mov
adc
add
cmp
loopne
mov
bound
adc
stos
inc
repnz
fisub
shl
xchg
or
scas
push
lahf
js
mov
xchg
push
xchg
add
mov
sub
push
retf
aad
xchg
xchg
retf
aaa
pop
rcr
imul
lods
shr
shl
jmp
xor
sub
loopne
call
dec
aam
fmul
and
int
cmc
retf
int3
xlat
xchg
push
cs
sub
(bad)
retf
and
push
pushf
aam
(bad)
rcl
movs
test
mov
pop
dec
inc
push
push
xchg
sub
retf
sar
into
mov
aad
lods
cld
lds
repz
mov
cmp
xor
sbb
cmc
xchg
sbb
adc
or
lds
mov
mov
outs
pop
and
test
pusha
mov
sbb
mov
shl
call
mov
inc
arpl
jp
stos
enter
mov
pop
xchg
add
mov
mov
mov
sahf
mov
sbb
dec
leave
scas
dec
push
and
mov
in
ins
scas
or
loopne
cmp
or
in
call
bound
cmps
js
mov
nop
push
add
lock
dec
xchg
cwde
jl
mov
mov
shl
and
mov
adc
shl
cmps
and
jmp
mov
inc
ret
pop
mov
loopne
das
jb
es
(bad)
data16
jl
pop
imul
(bad)
mov
mov
push
jb
loopne
imul
pop
popa
push
int3
in
sub
mov
(bad)
pop
and
call
or
jnp
out
jno
loopne
dec
mov
jne
add
icebp
dec
or
icebp
call
cmp
data16
mov
add
pusha
mov
(bad)
retf
adc
gs
xor
test
push
push
pop
cld
jnp
pop
(bad)
sbb
jbe
push
jge
push
out
xchg
in
xor
jmp
xchg
cmc
inc
jecxz
fadd
and
loop
jne
fsubr
dec
pop
sbb
stc
loop
in
jl
mov
pop
jge
repnz
pop
add
inc
inc
push
mov
(bad)
mov
lahf
lds
jl
call
hlt
inc
ret
pop
and
jo
jmp
loop
std
sar
shr
pop
pop
test
jno
dec
in
cdq
push
push
outs
fmul
mov
dec
dec
outs
stos
jecxz
xor
xor
xchg
daa
cs
imul
xchg
mov
inc
adc
push
push
push
mov
adc
arpl
ror
mov
imul
xlat
(bad)
adc
outs
xchg
adc
inc
and
(bad)
xchg
xchg
loopne
call
jl
push
pushf
test
jecxz
(bad)
clc
sahf
cmp
nop
stos
lds
mul
and
jmp
pusha
xchg
jae
sar
adc
jle
jno
xchg
repnz
sub
loopne
mov
sub
shr
sub
cmps
int
adc
daa
pop
dec
fistp
repnz
int
and
retf
outs
cmp
mov
pop
(bad)
loopne
les
inc
shr
aas
retf
mov
pushf
adc
jl
xchg
ret
aam
cmc
adc
shl
aam
pop
adc
int
xlat
outs
enter
mov
dec
jmp
push
and
mov
sbb
xchg
mov
xor
enter
aad
dec
sbb
jae
fcomp
imul
pop
ja
loopne
je
push
(bad)
shl
ss
add
add
cmc
jmp
mov
push
pop
inc
cmp
mov
xor
adc
or
sbb
add
stos
jp
and
jmp
popa
fwait
adc
imul
push
add
xlat
call
icebp
scas
mov
xchg
fcomp
dec
push
sbb
imul
stc
ret
xchg
add
push
je
adc
repz
aad
mov
inc
adc
pop
push
sbb
inc
out
sbb
ins
push
(bad)
push
mov
ds
push
mov
mov
jmp
in
jae
push
in
xchg
lods
add
sbb
pop
lods
sub
je
push
mov
out
add
sti
mov
xchg
fstp
sub
add
lods
je
popf
and
cmp
ror
mov
lea
dec
and
fmul
or
mov
and
mov
rcl
pop
sti
sbb
mov
out
mov
call
aaa
mov
mov
addr16
xor
jae
and
loopne
cmp
icebp
adc
mov
dec
aad
or
outs
repz
jae
lds
mov
(bad)
push
sub
xchg
rol
loop
shl
inc
sbb
test
stos
and
loopne
add
in
jp
daa
jno
sahf
aam
fisttp
enter
das
lds
and
div
out
cmps
cmp
add
pop
xchg
bswap
add
fiadd
into
(bad)
jb
jmp
inc
mov
test
adc
cmc
fadd
cmp
jmp
mov
retf
xchg
repz
pop
cmp
add
dec
mov
test
daa
pusha
pushf
(bad)
jecxz
xchg
xchg
out
stos
movs
mov
pop
mov
mov
fld
int3
lods
sti
or
out
add
jp
popa
or
fwait
rol
ins
cmc
cmp
js
test
inc
pusha
pop
adc
out
jle
dec
xchg
cmp
or
outs
push
xlat
push
or
mov
xchg
fucomp
loope
dec
shr
pop
lods
jge
and
cmp
mov
mov
and
and
scas
in
outs
sbb
out
jns
mov
jmp
test
jmp
or
daa
fucom
push
jge
jbe
jmp
out
cdq
popa
xlat
not
push
pop
cmp
jl
push
pop
or
(bad)
or
sbb
data16
repz
mov
ja
scas
imul
jno
inc
mov
rcr
mov
fdivr
js
push
cmp
push
mov
imul
lds
xlat
js
mov
pusha
mov
push
loopne
jo
loopne
lock
in
jae
jecxz
repz
je
fs
(bad)
in
ja
add
cmp
xor
cmp
pop
push
ja
ins
cmp
fcmovb
or
in
jae
jmp
jae
imul
(bad)
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
add
push
loope
jno
jmp
ja
pop
imul
shl
icebp
shl
icebp
shl
icebp
rol
mov
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
popa
or
fsubr
adc
popa
mov
shl
icebp
shl
icebp
ror
jno
popa
mov
loopne
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
dec
jno
add
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
push
outs
jmp
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
icebp
aaa
jno
popa
push
mov
popa
mov
scas
div
pop
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
popa
mov
push
jle
jno
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
sahf
in
outs
push
js
cmp
stos
icebp
fsub
or
repz
sub
shl
icebp
hlt
loope
mov
push
cwde
dec
loop
cmp
in
scas
popa
jae
mov
pusha
or
push
pusha
mov
loopne
jo
pusha
mov
jecxz
repz
arpl
jb
addr16
aad
or
not
imul
je
push
push
jnp
ins
add
push
gs
pop
loope
jno
arpl
jae
out
cmc
pop
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
idiv
fisubr
nop
push
loope
jno
imul
jo
push
push
push
loope
icebp
fisub
icebp
shl
icebp
shl
icebp
shl
icebp
shl
mov
popa
mov
shl
icebp
shl
icebp
rcr
in
push
loopne
icebp
push
jmp
mov
rcr
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
loope
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
popa
mov
push
dec
jno
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
inc
out
pushf
shl
icebp
shl
lock
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
jno
lea
das
adc
stc
cmc
loope
rcl
or
shl
not
rol
pushf
push
loopne
lock
mov
push
jecxz
jo
arpl
push
arpl
jae
loop
repz
addr16
repnz
(bad)
not
pcmpeqb
(bad)
clc
pop
in
stc
push
jmp
add
pop
out
sti
push
imul
loope
push
mov
jecxz
repz
add
add
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fiadd
mov
popa
pop
stc
aam
mov
loopne
stc
shr
or
popa
push
mov
loope
jno
popa
mov
shl
icebp
shl
icebp
shl
or
push
jmp
loope
jo
popa
or
shl
icebp
shl
icebp
shl
jae
loop
jo
out
pushf
shl
icebp
shl
lock
or
movs
popa
mov
rol
test
fnop
popa
mov
shl
xor
imul
sahf
dec
or
cmp
icebp
shl
cmps
icebp
shr
repz
xor
xor
mov
adc
lods
lock
or
(bad)
nop
popa
mov
shr
std
jp
push
sub
outs
int
les
scas
dec
inc
test
popa
mov
shl
icebp
sar
or
rcl
jp
pop
popf
inc
pop
xchg
pop
aad
sub
fsub
icebp
shl
loopne
rol
es
jne
aam
clc
dec
cmp
aas
popa
mov
popa
mov
rol
jne
mov
push
push
add
adc
cmp
std
jmp
das
loop
or
inc
jmp
icebp
ror
rep
les
repnz
add
push
ret
sbb
fisubr
je
aaa
pop
xor
in
xlat
xchg
lods
pop
push
call
icebp
push
fbld
into
jecxz
push
test
stos
sahf
hlt
aas
imul
push
cmps
or
dec
sub
and
mov
test
sbb
in
stos
pusha
cdq
dec
call
in
aaa
sbb
push
mov
sbb
(bad)
js
adc
je
push
call
pop
popa
sbb
inc
daa
xchg
fucom
inc
xor
sbb
sbb
push
jmp
sar
inc
sahf
repz
out
adc
hlt
es
pushf
ret
push
add
les
(bad)
addr16
test
mov
and
jns
retf
dec
or
and
inc
pushf
jmp
dec
popa
gs
push
cmp
mov
stos
(bad)
fist
add
jae
xchg
test
add
stos
gs
sbb
in
sti
ss
(bad)
int
cmp
sub
mov
sub
and
dec
dec
test
ret
push
mov
push
rcl
in
dec
sbb
ins
sahf
scas
shl
push
inc
scas
mov
xchg
lea
push
mov
mov
je
pop
pop
fisubr
aaa
mov
scas
sti
cmp
fisttp
push
das
or
mov
adc
or
aad
mov
int
stc
sbb
xor
loopne
mov
sub
cmc
pop
and
xchg
fisubr
fadd
lods
fucomip
push
add
not
inc
pop
jecxz
mov
sub
dec
rcr
add
ds
aad
xor
xor
jae
or
pop
data16
adc
les
xchg
mov
sbb
cmc
sub
xchg
cli
mov
out
cmp
enter
jl
add
call
sbb
dec
cmp
outs
xor
xor
daa
imul
ret
imul
jo
mov
stc
scas
cmp
jl
es
and
retf
cdq
mov
outs
mov
xchg
in
jge
repz
cli
mov
push
xor
outs
fmul
ins
mov
mov
mov
mov
test
xchg
aaa
push
mov
pop
mov
jnp
cmps
or
or
ins
push
aaa
mov
fs
(bad)
inc
js
cli
clc
add
or
mov
jmp
(bad)
imul
or
jl
std
mov
mov
mov
gs
fisub
fdiv
lods
xor
in
int
retf
push
xor
imul
mov
xchg
mov
pop
(bad)
xchg
and
loope
mov
popa
mov
push
loope
jo
popa
mov
shl
mov
popa
mov
imul
loope
or
push
push
loopne
jno
sbb
dec
push
and
outs
mov
sub
rdpmc
jae
xchg
(bad)
xchg
adc
push
mov
mov
jp
pop
cmp
mov
ds
int3
sub
les
mov
mov
das
ins
mov
add
gs
lahf
cwde
inc
xchg
(bad)
jae
in
sub
mov
out
arpl
jne
mov
call
ja
mov
mov
dec
mov
mov
mov
pop
or
mov
or
mov
xor
aad
(bad)
xor
hlt
rcl
fistp
arpl
jmp
xchg
xor
and
dec
lods
addr16
pushf
inc
mov
mov
pop
retf
jo
clc
ins
inc
xor
mov
aas
pop
mov
out
scas
push
inc
add
dec
cmps
mov
out
lods
shl
dec
and
in
sub
dec
sub
adc
iret
idiv
mov
scas
(bad)
xchg
jns
mov
cmp
test
pop
dec
scas
sub
ficomp
gs
ins
aad
or
and
xchg
hlt
sbb
call
mov
mov
arpl
movs
cmp
xor
mov
popa
jecxz
fdiv
xchg
jae
xlat
mov
in
add
jge
scas
xor
shl
inc
cmp
fdivp
mov
dec
popa
and
ja
pushf
fwait
repz
xlat
stc
xchg
pop
and
scas
adc
lods
shl
adc
xchg
pop
xor
les
int
fs
and
mov
jo
imul
jae
out
mov
ins
out
std
pop
cs
xchg
shl
jge
shl
mov
ds
ds
jg
(bad)
xchg
in
push
fidiv
and
jp
xchg
add
sti
aaa
cmc
jmp
shr
push
push
mov
mov
xor
ss
push
jb
sbb
pop
mov
push
pusha
or
dec
fldcw
ins
mov
and
cmp
movs
movs
(bad)
and
lock
stos
mov
push
fldcw
and
fwait
or
sub
cmp
push
aad
data16
mov
(bad)
mov
loop
clc
sti
push
sti
call
dec
pop
mov
xchg
push
lods
add
xchg
fist
test
add
jle
aad
dec
and
mov
and
xor
sbb
leave
sti
cwde
pop
test
fild
rcr
xchg
(bad)
mov
pop
out
shr
fisub
lea
dec
cmp
stos
shl
pop
cs
aaa
mov
aas
pop
int3
sub
pop
mov
or
pop
les
push
add
fs
add
cmp
scas
cdq
pop
xchg
imul
adc
pop
je
les
mov
jge
or
sahf
stos
push
or
xor
push
pop
shr
fld
xor
or
lods
ja
jne
cli
lods
hlt
cmp
xchg
out
xchg
hlt
pop
and
addr16
icebp
(bad)
xor
aas
jo
pop
movs
xor
fwait
cmp
or
pop
and
sbb
stos
leave
mov
js
sbb
or
test
dec
push
loop
jp
sbb
jle
and
fisttp
outs
repz
mov
aaa
das
test
inc
pop
imul
sbb
dec
mov
mov
jmp
ja
fwait
sub
mov
add
sbb
les
pop
inc
popf
or
lds
mov
jle
dec
add
pusha
jb
sub
outs
ds
jbe
lahf
popa
ss
sub
cmps
neg
das
arpl
out
dec
add
jns
pop
movs
cmps
loope
and
and
or
fdivr
out
xchg
jne
popa
lea
cld
xchg
int3
in
imul
jmp
mov
or
push
push
pop
imul
jo
popa
mov
loope
icebp
shl
xor
nop
repz
arpl
js
cmp
pop
pusha
clc
mov
rol
mov
repz
ficomp
in
popa
loope
icebp
push
dec
jno
leave
mov
xchg
cld
jmp
imul
mov
fdivrp
sbb
test
jbe
pushf
fwait
es
pop
add
add
pop
cmc
popa
inc
cmp
sbb
mov
into
out
mov
cmp
dec
in
pop
aas
xchg
or
inc
les
xchg
mov
(bad)
cmp
jg
(bad)
arpl
out
test
add
jns
ss
stos
pop
retf
pop
sbb
dec
dec
imul
je
inc
xchg
inc
cmp
test
js
outs
test
cmp
sub
fs
int3
xor
fld
movs
push
sbb
jno
xchg
cmp
inc
(bad)
cmp
cmp
out
pop
pop
cmp
aad
les
sti
dec
aad
ficomp
xlat
scas
gs
dec
xor
xchg
rol
enter
sbb
das
dec
xchg
cmc
stos
mov
push
or
push
pop
mov
out
cmp
imul
dec
int
frstor
xchg
(bad)
jmp
dec
aaa
mov
lods
mov
sbb
adc
jno
iret
hlt
xchg
jb
inc
fs
mov
dec
enter
cs
or
push
in
aaa
stos
(bad)
test
movs
pop
rcl
scas
sbb
iret
mov
sbb
sbb
int
add
mov
aas
xor
call
jp
cmps
inc
add
mov
sub
es
xor
jne
pop
sbb
dec
clc
cmps
rcr
or
neg
add
retf
jle
adc
iret
mov
xchg
fst
scas
dec
stos
fcmovu
ins
nop
sub
add
cmp
push
addr16
jmp
dec
out
repz
imul
mov
jae
aaa
dec
fild
dec
dec
mov
mov
test
jp
xor
bound
push
adc
or
adc
pusha
loopne
xchg
(bad)
sbb
in
mov
push
xor
adc
rcl
jo
xchg
adc
mov
stos
imul
push
xor
cmp
aad
mov
xor
dec
iret
xchg
stc
addr16
(bad)
xor
cdq
dec
popa
pop
mov
stos
in
leave
sub
lods
sub
outs
cmp
dec
rcl
push
in
push
adc
sub
(bad)
cld
mov
popf
into
jno
sub
add
ror
repnz
sbb
imul
pop
sbb
xor
fwait
sub
pop
cmc
push
xchg
gs
retf
jge
lods
fmul
mov
cmp
add
ss
adc
and
rol
imul
mov
or
iret
push
inc
inc
hlt
cmc
loopne
push
sub
fsubr
add
ret
dec
into
inc
in
mov
sub
test
mov
ror
jmp
bound
and
push
jae
dec
in
popf
mov
sbb
fsubr
push
loop
div
pop
in
loopne
retf
push
mov
mov
fst
test
ds
jb
dec
lds
and
pop
or
aad
mov
push
shl
dec
data16
leave
xchg
jmp
test
loope
int3
dec
lds
and
stc
xchg
mov
shl
std
ret
pusha
scas
(bad)
mov
movs
dec
mov
lea
or
lods
call
mov
test
je
mov
fisttp
je
lods
(bad)
jmp
ins
mov
ret
xchg
test
stos
cmp
inc
xchg
fnstenv
ds
lods
dec
cmp
cmp
jnp
sbb
sbb
dec
dec
sti
xchg
xchg
scas
jnp
rol
into
and
mov
mov
stc
lods
lea
pop
ss
push
push
and
xchg
adc
push
mov
dec
inc
ret
lods
(bad)
(bad)
cmp
fnstsw
jno
cmp
xchg
out
xor
(bad)
in
(bad)
pop
xchg
dec
xchg
movs
mov
js
add
xor
retf
adc
add
(bad)
stos
sti
nop
sar
fadd
pop
cmp
inc
and
aaa
repz
dec
test
lds
mov
dec
mov
dec
and
pusha
nop
call
jge
mov
jmp
jbe
xlat
inc
jae
push
call
cmp
push
pop
add
(bad)
inc
fiadd
dec
cmps
gs
jl
lea
int3
cmp
xchg
jl
mov
add
jge
in
jb
bound
mov
cmp
mov
xchg
inc
daa
loope
fdiv
inc
fild
jmp
icebp
fdivr
adc
shr
pop
adc
jecxz
xor
adc
aam
bound
pop
adc
cmp
int
jp
jmp
cli
push
imul
aaa
inc
inc
mov
jp
test
movs
dec
pop
jbe
and
pop
clc
retf
rcl
popa
sbb
sahf
push
mov
or
(bad)
pop
ror
movs
out
mov
xchg
mov
pop
xor
adc
(bad)
loop
out
or
inc
out
lods
xor
sbb
adc
cs
outs
iret
and
mov
mul
test
stos
popa
fcom
jae
or
mov
mov
retf
mov
adc
fsub
sbb
xchg
icebp
fcmove
cmp
mov
clc
imul
movs
push
sbb
data16
mov
jmp
mov
rdseed
jg
adc
inc
scas
stc
mov
add
fincstp
mov
adc
jl
mov
fs
and
push
lea
inc
imul
gs
sub
(bad)
xchg
scas
and
ret
jg
cmp
inc
stos
dec
pop
lea
mov
inc
cmc
lahf
test
aaa
(bad)
push
and
cmp
daa
icebp
dec
push
fwait
into
pushf
adc
pushf
ficomp
cmps
addr16
pop
ret
inc
out
loope
imul
out
and
adc
(bad)
cmp
push
jnp
or
push
hlt
pop
sbb
test
es
cli
xor
push
jl
mov
sub
fist
(bad)
(bad)
jle
ja
loop
mov
retf
adc
push
push
and
icebp
jo
or
in
repz
push
loope
icebp
shr
jo
icebp
nop
repz
shl
pop
jo
rcr
dec
leave
pop
and
enter
mov
adc
lock
mov
lahf
or
stos
sti
test
repz
mov
xor
cmp
(bad)
mul
pop
mov
cld
cmps
or
fisubr
lods
(bad)
and
sbb
cmc
cmp
xor
pop
ficomp
sbb
in
leave
sub
cmc
ins
xchg
inc
cmp
dec
mov
mov
xchg
sbb
test
das
mov
inc
sbb
bound
push
cmp
out
cdq
in
jle
mov
dec
ror
push
test
lahf
aad
nop
pusha
call
lahf
inc
bound
dec
sub
sar
adc
cwde
push
fisttp
test
and
xor
mov
xor
and
sbb
pop
mov
fsub
outs
not
in
sbb
pop
xor
rol
mov
push
mov
push
and
movs
dec
mov
push
mov
dec
pop
inc
and
enter
dec
loopne
inc
xchg
xor
test
pop
cmp
cmp
fdiv
outs
adc
push
lods
inc
push
outs
imul
lods
lahf
(bad)
mov
mov
test
or
ja
test
sub
stos
cli
adc
js
and
mov
popf
xor
scas
jnp
mov
xchg
icebp
adc
dec
(bad)
mov
gs
loope
sbb
dec
retf
cmp
mov
add
add
mov
xchg
cmps
aaa
stos
fcomp
and
popa
adc
cmp
popa
inc
adc
into
cmp
shl
fwait
hlt
repnz
cmp
(bad)
jp
aad
add
popa
push
and
sahf
mov
pop
sbb
jo
pop
jle
retf
adc
fstp
(bad)
and
mov
out
sub
fmul
push
sub
pop
pusha
mov
fist
xchg
xchg
int
jl
xchg
mov
push
fild
inc
(bad)
sub
xchg
sbb
or
retf
pop
cmp
and
cs
xchg
sbb
dec
mov
lock
lahf
xor
fist
and
movs
test
mov
aaa
ds
xor
pop
outs
ds
into
cmps
test
ret
push
xchg
leave
xchg
or
or
push
pop
push
jns
jmp
mov
ficom
mov
scas
add
out
in
push
addr16
out
mov
push
popa
arpl
or
xchg
das
pop
es
call
xchg
sub
or
sub
dec
aam
xchg
adc
jo
jp
pop
mov
retf
push
mov
and
out
sbb
sbb
call
mov
bound
mov
dec
in
hlt
mov
and
xor
push
and
pop
jge
icebp
mov
xor
popa
and
fadd
push
pop
mov
xchg
push
add
retf
or
das
dec
and
lods
arpl
and
cmp
fisttp
enter
je
push
outs
push
xchg
cmp
mov
sub
push
pop
inc
sub
gs
adc
daa
aam
or
jl
jmp
ja
cld
mov
and
xchg
aad
int
je
mov
inc
xor
icebp
inc
arpl
sub
test
mov
lahf
test
fs
imul
lock
pushf
dec
in
fidiv
jge
addr16
push
in
cdq
in
imul
fld
or
mov
xchg
sub
outs
fld
lods
pushf
and
mov
pushf
imul
inc
xchg
inc
scas
mov
mov
lods
imul
in
push
fcom
cmps
sub
xchg
ret
dec
cmp
adc
mov
dec
jno
in
xor
movs
mov
aad
cdq
out
popf
xchg
pop
repz
xchg
mov
adc
adc
cmp
mov
inc
cmp
cmp
addr16
adc
adc
je
int
and
ja
sahf
sub
jnp
xor
cmps
sti
and
gs
int3
inc
add
jp
call
push
push
movs
addr16
ins
inc
mov
xor
dec
test
sub
pop
test
outs
pop
adc
mov
cmps
jns
call
cmp
dec
or
jmp
dec
lds
dec
dec
pop
jecxz
jmp
imul
pop
out
cmp
cs
pop
int3
fstp
cdq
pop
and
mov
push
push
or
popa
out
movs
and
(bad)
adc
out
ror
loopne
loope
aad
mov
imul
sub
xchg
enter
mov
add
add
and
lock
daa
sub
or
dec
adc
xchg
add
xor
add
cmp
jl
jmp
jg
cmp
stc
adc
arpl
push
jp
fisub
xchg
pop
fstp
test
mov
inc
sbb
movs
xor
or
sub
mov
cmp
xchg
add
not
jae
mov
push
stos
ins
aad
shl
mov
and
jb
add
scas
shr
pop
stos
fs
dec
pop
popf
xor
sub
dec
gs
inc
cli
out
fnsave
enter
test
or
and
dec
(bad)
add
sti
(bad)
lock
mov
pop
je
xor
or
repz
push
verr
xchg
fimul
or
mov
arpl
lock
and
xchg
dec
sub
mov
pop
iret
shl
push
mov
xor
mov
jmp
not
(bad)
cmps
imul
and
and
add
inc
out
daa
pop
push
(bad)
push
push
push
inc
mov
mov
inc
xchg
push
(bad)
xchg
fistp
cs
dec
aaa
out
retf
jo
movs
mov
push
add
outs
stos
mov
push
sbb
push
ds
ror
fadd
ins
jns
movs
push
and
pop
adc
imul
push
scas
mov
sub
pop
gs
xchg
fdivr
mov
jne
push
div
dec
inc
xchg
movs
or
mov
xchg
jb
sub
popf
dec
or
out
cmp
imul
mul
cmp
fmul
push
pop
inc
mov
enter
pop
mov
out
inc
arpl
clc
fisttp
test
mov
and
mov
pushf
mov
adc
neg
sbb
jno
std
retf
cmps
xor
inc
add
inc
add
imul
in
std
inc
lods
leave
lods
add
test
std
jmp
adc
pusha
les
inc
jne
adc
cs
add
pushf
push
dec
cmps
adc
imul
addr16
retf
pop
dec
mov
jns
lea
sar
pusha
loope
adc
les
ds
xor
inc
pop
in
dec
xor
enter
mov
mov
xlat
or
mov
popf
mov
cld
dec
mov
leave
xchg
mov
push
xchg
lods
or
or
push
lahf
imul
sbb
jb
mov
(bad)
mov
xchg
pushf
jmp
fidivr
(bad)
dec
in
inc
cmp
addr16
and
xchg
inc
jmp
jmp
mov
xchg
push
xchg
jmp
xchg
jmp
fstp
mov
in
or
call
mov
mov
cwde
ins
cld
push
mov
cdq
dec
fmul
add
lods
loopne
mov
rcl
adc
push
adc
int3
xchg
scas
or
fisttp
ins
jl
(bad)
xchg
sub
mov
pusha
sar
xor
pop
fcom
(bad)
sub
(bad)
jnp
mov
fxch
(bad)
repnz
imul
adc
cs
outs
push
inc
cwde
xor
cwde
jne
push
les
stos
jnp
scas
scas
bound
pushf
mov
pop
pushf
ret
imul
jb
sub
in
inc
cmp
nop
lock
shl
int3
mov
icebp
hlt
dec
icebp
cwde
xchg
fs
fwait
add
dec
mov
js
dec
sbb
in
outs
push
stc
sub
cmp
cdq
jo
and
sub
cld
mov
dec
les
mov
mov
add
mov
and
(bad)
call
outs
gs
adc
add
mov
nop
mov
int
out
push
pusha
std
jmp
(bad)
adc
out
mov
inc
stc
fistp
push
clc
pop
shl
push
(bad)
fdivr
pop
in
mov
add
mov
in
enter
hlt
cmp
(bad)
fst
pop
xlat
mov
mov
sbb
add
addr16
sbb
in
fidivr
scas
add
enter
push
(bad)
jo
fwait
push
(bad)
pop
push
jmp
loopne
jo
loop
repnz
loopne
jae
loope
icebp
shl
xor
cmp
js
inc
call
jmp
xchg
fdivr
test
inc
cmp
and
inc
jae
xor
push
in
add
mov
push
jle
icebp
push
jns
(bad)
adc
ret
jl
inc
jg
(bad)
mov
cmps
stc
ds
mov
push
add
cld
xchg
dec
es
pop
stc
inc
push
jp
pop
rcr
sbb
cmp
xor
out
adc
movs
jnp
jl
push
sub
mov
add
daa
xor
dec
cld
in
icebp
xchg
or
jae
icebp
xchg
sub
xor
adc
fsubr
sbb
mov
and
fsubr
inc
jmp
mov
dec
hlt
jno
icebp
out
push
or
aaa
lods
cmp
sti
sub
imul
add
inc
sar
fidiv
adc
aas
lods
icebp
mov
retf
icebp
or
mov
inc
pop
jb
data16
cmps
and
xchg
stos
test
sbb
cmp
push
cmps
mov
mov
push
int3
ss
sub
mov
mov
jo
jecxz
imul
inc
jecxz
mov
rcr
hlt
xchg
fld
dec
out
jbe
stos
xchg
stc
add
lock
adc
fdiv
into
add
push
mov
sar
adc
sar
sti
push
stc
sbb
pop
hlt
jnp
je
fld
dec
outs
int3
push
stos
jae
shl
inc
test
out
jg
push
fimul
mov
mov
pop
fsubr
pop
dec
sbb
or
iret
fcomp
es
xor
(bad)
pop
mov
pop
push
data16
gs
test
sbb
adc
int
cli
movs
sti
push
jle
inc
and
push
adc
inc
push
mov
out
and
test
ds
lods
inc
pop
mov
mov
sbb
mov
(bad)
out
push
dec
push
inc
fcmovbe
mov
nop
retf
cdq
fldcw
inc
xchg
xor
sub
div
push
repz
cmp
xchg
imul
push
sub
lods
push
leave
out
dec
push
pop
pop
int
jle
fwait
bound
shl
scas
ffreep
mov
sbb
mov
sahf
aaa
ins
push
sub
xor
ret
scas
test
xchg
and
push
scas
scas
retf
dec
dec
outs
xchg
inc
sub
lods
jp
jns
outs
(bad)
stos
cmp
inc
std
das
test
repz
sub
jae
imul
ret
pop
push
mov
xchg
sub
push
jo
cmp
cdq
mov
shl
sub
or
data16
stc
daa
xchg
pusha
hlt
push
daa
jmp
movs
pop
mov
test
xchg
mov
add
push
mov
movs
ret
sbb
push
sahf
ins
jmp
in
mov
cdq
repz
ret
test
aaa
data16
inc
add
test
aad
jnp
sub
inc
rcl
sar
les
xor
(bad)
imul
mov
out
fistp
xor
add
xor
jge
add
sar
stos
add
leave
das
fimul
int3
jb
xchg
mov
ds
imul
sub
sbb
mov
in
stos
jno
pop
cmp
mov
xchg
sti
inc
dec
fcomp
xor
jo
pop
movs
sub
inc
sbb
mov
mov
xor
and
mov
push
or
out
or
pusha
faddp
out
std
jnp
pop
xchg
imul
sub
rcl
call
jnp
jp
popa
rdpmc
scas
jns
outs
jbe
retf
shl
mov
stc
(bad)
xlat
enter
jne
daa
add
dec
inc
jmp
popa
fnsave
xor
xchg
ins
sbb
sbb
cmps
btr
xor
stc
sahf
or
loope
inc
xor
add
cs
sub
fcmovnb
das
xor
test
sbb
jnp
stos
pop
and
ss
test
jl
push
retf
aas
pop
loopne
daa
sti
cmp
int3
mov
rcr
add
push
mov
mov
mov
ins
movs
mov
cmp
xchg
pop
jge
jge
push
lock
or
or
outs
aam
repnz
popf
xchg
or
dec
adc
and
mov
xchg
add
inc
xlat
pushf
xor
(bad)
int
repz
es
jnp
std
outs
mul
out
pop
xchg
lods
mov
mov
arpl
and
adc
xor
fisub
push
sbb
lea
popa
out
out
pop
in
xchg
push
lods
sti
les
movs
loope
mov
xor
into
imul
lds
mov
add
jne
cmps
movs
mov
shr
stos
test
fadd
fld
ss
loopne
dec
adc
sub
push
inc
jle
jle
gs
movs
ins
not
and
pop
or
gs
push
xchg
neg
dec
jbe
loopne
sbb
addr16
push
loop
mov
jmp
inc
push
mov
push
mov
call
stos
ror
lahf
retf
aaa
out
push
cdq
and
jmp
enter
mov
jo
iret
sti
pushf
mov
addr16
aam
and
add
ins
jp
test
imul
pop
xchg
xlat
or
inc
dec
pop
add
retf
test
(bad)
jmp
sbb
mov
mov
loope
push
or
stos
pop
dec
cs
movs
cli
cmps
std
cs
adc
fstp
add
and
cmp
ror
daa
inc
xchg
shr
mov
pop
inc
or
outs
dec
into
mov
push
daa
inc
(bad)
sub
cmp
push
adc
rol
pop
cmp
push
cmp
test
(bad)
es
mov
pop
xchg
sbb
pop
gs
jo
lods
out
scas
mov
sub
cmp
sbb
push
inc
mov
inc
xlat
sahf
mov
out
and
jo
in
loop
pop
inc
iret
jne
inc
xor
retf
rol
aam
add
cmp
leave
movs
dec
push
jb
ret
cmps
xchg
pop
adc
outs
xor
lds
xchg
test
pop
xchg
cmps
outs
shr
mov
fs
cdq
pop
pop
movs
test
mov
mov
adc
outs
jo
loope
add
aam
add
inc
jmp
aas
lods
push
adc
lods
dec
ds
lock
dec
test
pop
addr16
xchg
adc
outs
shl
(bad)
in
shl
push
outs
mov
and
mov
mov
fstp
repz
dec
mov
pop
pop
and
js
xchg
imul
repz
inc
mov
or
jecxz
dec
add
fdivr
fwait
js
jge
imul
test
push
mov
mov
add
push
push
jge
dec
clc
mov
mov
pop
push
shl
pushw
mov
in
iret
(bad)
cmp
call
scas
mov
push
sub
mov
adc
clc
cli
jno
add
xchg
fstp
std
rcr
xchg
in
xor
mov
pop
inc
bound
int3
mov
sub
movs
xchg
and
je
daa
jns
in
mov
test
dec
and
mov
sbb
mov
push
in
add
and
cli
adc
xchg
shl
scas
mov
jo
dec
mov
sbb
xor
cwde
sub
in
dec
inc
pushf
cmc
in
sbb
aaa
(bad)
inc
movs
ins
xchg
mov
pop
jp
clc
and
push
or
ins
jmp
ret
adc
push
dec
and
movs
mov
outs
dec
stos
pop
mov
sbb
sbb
and
sbb
jge
lods
or
ret
or
cli
sbb
inc
push
pop
scas
adc
xchg
cli
ret
dec
lahf
in
pop
(bad)
sbb
fwait
lahf
out
outs
or
xor
ror
mov
aad
arpl
push
dec
(bad)
xchg
sahf
into
xchg
not
test
ror
xor
adc
ins
sub
pop
icebp
adc
inc
neg
jns
mov
adc
scas
fcmovnbe
ins
dec
pushf
mov
cmp
mov
out
ins
add
std
aad
mov
ret
xchg
in
ins
sbb
cdq
leave
cmp
push
loopne
outs
jb
int3
and
mov
nop
in
add
mov
ret
adc
call
nop
fcmovb
out
mov
mov
fnstcw
xchg
fsubrp
jmp
inc
mov
idiv
in
gs
mov
adc
sar
xchg
cmp
movs
pusha
sbb
mov
mov
cmps
int
sbb
iret
dec
mov
xchg
(bad)
add
jge
dec
jmp
dec
dec
movs
mov
fisub
fwait
jg
sub
pushf
fdivp
xchg
std
mov
out
inc
jmp
xchg
xchg
xchg
shr
in
and
sub
stos
out
pop
mov
loope
mov
pop
call
mov
sub
sub
rcr
inc
(bad)
inc
nop
mov
test
mov
mov
(bad)
and
repz
bound
mov
mov
icebp
push
test
aam
xchg
jecxz
xchg
adc
add
sbb
int
fwait
test
jle
stos
scas
icebp
clc
aaa
inc
cld
xor
push
dec
les
mov
in
xor
repnz
adc
int
(bad)
ror
cwde
mov
cmp
stos
ret
and
mov
cli
or
mov
inc
shr
dec
loop
int3
jge
outs
pop
dec
iret
add
xchg
xchg
push
sub
lock
ret
imul
sub
sbb
scas
or
stos
test
cmc
or
in
(bad)
rcl
xor
test
xchg
add
imul
xor
stos
dec
jmp
dec
mov
xchg
ret
popa
push
(bad)
mov
xor
or
popf
sar
mov
pop
jbe
cmps
and
or
iret
sub
adc
mov
fidivr
push
mov
cmp
cdq
pop
xor
sub
pushf
mov
add
cli
stos
pop
sbb
pop
mov
sbb
aas
sbb
mov
(bad)
hlt
jbe
retf
sbb
mov
outs
(bad)
mov
cdq
int
movs
add
in
sub
and
push
(bad)
mov
daa
icebp
pop
dec
shl
hlt
sahf
les
or
std
push
cwde
pushf
push
(bad)
(bad)
xor
xor
dec
into
mov
scas
lods
mov
sub
push
popa
and
push
adc
or
add
sub
push
fcomp
dec
and
adc
add
arpl
lock
ficom
mov
hlt
mov
pop
pop
dec
ins
dec
mov
inc
mov
mov
mov
in
xchg
scas
das
jb
xchg
push
pusha
or
shl
lock
popa
mov
popa
mov
shl
jno
leave
cmp
jmp
js
mov
or
mov
push
or
shr
je
fnclex
sbb
xor
call
sar
fsubr
aam
lock
lahf
add
nop
retf
fistp
popf
and
scas
dec
ror
in
retf
enter
mov
aaa
(bad)
mov
mov
jb
outs
shl
xchg
sbb
xchg
adc
pop
xor
inc
push
movs
add
sub
outs
jp
inc
in
cmp
jmp
sbb
mov
cld
xor
jg
pop
aam
loope
mov
dec
icebp
cwde
mov
push
add
sahf
js
adc
mov
push
pop
mov
test
jmp
retf
je
cmp
dec
push
ror
in
jmp
int3
push
fldenv
loop
pop
push
or
in
and
std
xchg
data16
xchg
loopne
mov
ins
inc
and
mov
iret
or
int3
mov
nop
jno
pop
in
les
pushf
bound
mov
jae
xchg
adc
in
(bad)
mov
ret
retf
retf
movs
push
or
xchg
adc
popf
inc
data16
dec
jmp
iret
inc
es
mov
pop
fldcw
push
xor
out
mov
les
or
je
(bad)
and
or
or
mov
hlt
jmp
push
or
jbe
in
shr
cmp
sbb
fwait
sub
inc
inc
ins
and
int
mov
scas
xchg
dec
in
sbb
push
or
lods
inc
dec
sbb
in
call
jecxz
jl
mov
pop
add
pop
js
out
cmc
or
aaa
add
aam
add
cmp
jg
xchg
into
es
test
adc
xchg
sbb
jge
fwait
inc
cmp
lock
out
in
mov
jbe
pop
clc
addr16
push
fnstcw
sahf
cmp
xchg
call
sbb
and
xchg
dec
int
add
call
(bad)
out
mov
jnp
retf
pushf
fild
xchg
enter
inc
push
mov
test
pop
aad
push
push
sub
(bad)
xchg
ret
xchg
dec
mov
dec
enter
dec
das
cmp
mov
mov
mov
ror
xor
imul
fcom
stc
sar
mov
dec
xchg
gs
aaa
in
sub
loopne
or
loop
cs
hlt
cwde
jo
enter
jp
dec
stos
mov
jmp
xchg
add
sub
(bad)
or
sbb
je
hlt
mov
out
sbb
xor
sbb
ins
dec
adc
aam
push
ins
adc
cmc
ret
cmc
xor
mov
jne
sub
cdq
jb
in
inc
pop
jb
push
sub
mov
popa
in
ins
mov
mov
fdivrp
outs
lock
jecxz
enter
push
ret
xor
lea
retf
adc
and
sahf
shl
jmp
jmp
cdq
stc
mov
lods
sub
int3
rol
add
inc
adc
ins
hlt
inc
xchg
mov
call
adc
inc
fmul
dec
movs
loop
call
add
pop
push
mov
(bad)
dec
mov
pushf
call
ss
int
jge
jmp
mov
addr16
cmps
sub
pop
call
xor
fistp
push
fbld
lods
lahf
enter
cmp
jg
xor
leave
loopne
adc
xor
lock
xchg
pop
lods
aad
dec
repnz
pop
push
adc
dec
push
jo
sbb
jle
adc
addr16
push
fmul
dec
loopne
fcom
fucompp
shl
std
or
(bad)
ins
shr
or
loope
mov
xchg
mov
xchg
arpl
cmp
imul
sbb
cmc
cdq
mov
and
(bad)
pushf
test
sbb
div
enter
jmp
sbb
test
es
hlt
cmps
inc
mov
aas
cmps
jmp
imul
xchg
stos
loopne
mov
outs
sbb
xchg
or
jo
ret
push
ficom
rcl
jl
or
rcr
pop
or
stos
adc
mov
rcr
cdq
xchg
(bad)
push
add
jecxz
dec
sbb
repz
xor
xchg
jb
rep
les
adc
rcl
adc
pop
jge
or
and
mov
sbb
adc
ret
(bad)
jle
mov
out
sub
ret
js
adc
dec
test
cmps
mov
sbb
adc
mov
pop
dec
js
call
mov
add
or
add
jg
cmp
pop
add
jmp
popf
lock
std
test
clc
and
mov
cmps
push
ret
inc
sbb
sbb
lock
mov
sub
test
lods
idiv
mov
int3
int3
xchg
stos
sub
in
xor
jmp
and
fbstp
inc
into
and
fsub
je
sbb
popf
in
mov
mov
jno
mov
add
xchg
stos
pop
js
add
shl
aam
and
lea
js
mov
pop
add
mov
jno
fcomp
cmps
add
jnp
xor
mov
aad
fimul
dec
je
jne
xchg
push
jno
nop
mov
push
rcl
mov
jp
jecxz
mov
mov
mov
mov
nop
imul
nop
bound
adc
call
mov
and
imul
enter
or
mov
xor
dec
xor
jecxz
sub
push
adc
jge
pop
mov
xor
out
xchg
mov
ja
call
pop
sbb
mov
mov
aam
and
aas
sbb
mov
into
lea
pop
inc
aam
adc
gs
lds
cld
inc
mov
inc
dec
sub
adc
stos
nop
pop
push
and
push
aaa
loope
adc
pop
adc
mov
je
pop
pop
add
sub
add
adc
xor
inc
push
cmp
mov
xor
and
js
inc
xor
scas
enter
jne
and
add
rol
dec
ror
das
jb
inc
jno
imul
fst
pop
jb
fst
in
dec
cmc
(bad)
cmp
jg
sbb
jge
repz
sub
scas
mov
inc
ins
cmp
cwde
dec
and
mov
test
(bad)
popf
cld
push
and
dec
imul
cmps
out
mov
pop
cld
jo
add
xor
push
stc
outs
xchg
pushf
add
call
jo
outs
pop
sbb
xchg
outs
adc
scas
fsubrp
mov
mov
add
jne
jl
sahf
xor
and
or
pop
push
sub
repnz
fist
outs
jno
xchg
mov
stc
xchg
mov
je
mov
(bad)
aam
xor
test
sbb
add
lock
data16
leave
outs
mov
psadbw
neg
je
jbe
ins
data16
mov
jmp
mov
(bad)
xchg
xchg
mov
imul
(bad)
cs
lds
xor
pop
mov
(bad)
and
xchg
enter
push
mov
call
jmp
out
and
sub
int3
jmp
xor
cmp
adc
mov
call
clc
daa
sbb
test
sub
ret
mov
(bad)
sbb
fwait
aaa
(bad)
psubd
xor
add
xchg
adc
in
(bad)
lea
nop
aad
je
test
jno
(bad)
mov
mov
jbe
sbb
adc
push
xchg
adc
push
push
xor
dec
fsubr
shl
imul
icebp
in
xchg
inc
in
cmp
fnstsw
fs
xchg
and
dec
rcr
shr
mov
adc
call
lods
xchg
mov
push
lods
ds
lock
jns
shl
popf
pop
sbb
adc
pshufw
push
into
mov
lds
pop
aam
ins
pop
in
xchg
push
gs
pop
mov
xor
sbb
and
xchg
out
neg
and
fwait
xchg
pop
xchg
(bad)
jbe
inc
cld
fisubr
push
lods
jnp
daa
sbb
(bad)
ret
jbe
loop
std
je
ins
(bad)
shl
(bad)
xchg
add
arpl
jns
mov
imul
adc
sti
arpl
aad
cs
cli
jb
mov
fstp
push
xor
aad
retf
cmp
pop
ds
xchg
and
call
cmp
pop
or
inc
aas
pop
outs
jp
outs
(bad)
sbb
in
push
fldcw
loopne
icebp
push
loope
icebp
shl
icebp
shl
cmp
test
aad
jne
jecxz
jae
cmp
fldlg2
fisubr
lds
pop
mov
inc
sbb
cmp
sub
ret
lock
sub
test
dec
pop
mov
sbb
inc
and
sbb
cmp
sbb
(bad)
pop
daa
arpl
in
(bad)
mov
cmp
icebp
out
add
scas
in
cli
dec
adc
and
xor
out
idiv
sbb
stos
cmove
(bad)
call
adc
rcr
outs
out
bound
aas
cs
jge
(bad)
cld
mov
dec
loop
mov
sbb
or
scas
popa
or
loopne
jno
loope
jo
popa
or
shl
xor
stc
test
inc
(bad)
pusha
mov
clc
stc
dec
sbb
mov
sbb
out
pop
xchg
jb
stc
outs
scas
pop
pop
loope
cs
add
js
cmp
push
int
dec
call
call
sbb
outs
mov
imul
sub
fadd
inc
cmp
rcl
mov
adc
pop
aad
cmc
xchg
push
dec
adc
mov
les
jno
mov
mov
sub
fisub
(bad)
mov
fdiv
cmp
ret
add
sahf
cmps
sbb
dec
loope
inc
scas
mov
repz
mov
mov
fwait
cmp
cmp
jae
call
sar
or
jecxz
pop
or
iret
in
add
(bad)
jmp
ja
js
(bad)
pop
push
adc
jmp
outs
xor
mov
xchg
xchg
movs
into
mov
rcr
out
jns
cld
cli
cmp
(bad)
ficomp
push
ret
fs
daa
sub
neg
popf
mov
jmp
mov
push
inc
adc
add
mov
outs
shl
sbb
lods
outs
or
push
popa
fnstcw
jge
xor
lock
sbb
lods
(bad)
repnz
scas
push
retf
jmp
push
js
(bad)
pusha
dec
inc
and
sbb
lods
and
pop
ficomp
out
mov
jb
jl
and
push
jmp
ret
push
pushf
idiv
sub
xchg
scas
or
int3
shl
and
aaa
mov
test
inc
mov
inc
(bad)
jno
rol
xchg
test
push
dec
push
int
vmovhlps
adc
inc
call
mov
jb
rdmsr
xchg
mov
jo
mov
push
mul
imul
mov
xchg
test
lahf
test
pushf
ret
call
cmp
push
mov
div
std
inc
(bad)
sbb
in
adc
pop
jb
xor
out
leave
sbb
call
mov
nop
or
cmps
pop
rcl
dec
int
nop
hlt
jg
out
cmp
inc
mov
xchg
cld
or
and
mov
xor
xor
int
jb
and
gs
mov
or
test
dec
or
xchg
mov
int
cmps
push
dec
std
sub
push
and
out
dec
inc
mov
nop
pop
out
dec
addr16
addr16
or
sub
xor
xor
sbb
xor
cmps
std
pushf
push
xor
dec
das
and
mov
pop
jge
sbb
inc
lods
shl
and
sbb
push
loop
ret
test
aad
xchg
inc
test
jmp
lea
shl
push
lds
mov
push
and
lods
mov
ds
(bad)
cmc
jmp
mov
push
rcr
ret
mov
sub
inc
xchg
std
push
mov
bound
ins
xor
inc
mov
mov
add
mov
aam
xor
lea
movs
fdiv
popa
into
(bad)
pop
stc
or
mov
jne
ins
xchg
lock
clc
pop
sub
call
stos
call
mov
aaa
retf
imul
mov
out
outs
ds
mov
xchg
pop
push
test
push
inc
mov
fs
jno
jae
fld
std
mov
add
mov
in
addr16
les
int
push
xchg
add
mov
pop
adc
mov
mov
scas
ret
push
jmp
gs
aad
push
test
jno
loope
faddp
(bad)
push
pop
sub
pop
or
add
jle
dec
retf
(bad)
jmp
sahf
dec
sbb
clc
frstor
cwde
int3
pushf
pop
jge
pop
push
cmp
jmp
shr
sub
cmps
sub
dec
xor
movs
pop
mov
int
test
push
jl
and
ss
mov
push
test
mov
aad
pop
jge
jge
les
xchg
fcom
ins
mov
inc
int3
xor
and
inc
push
loope
(bad)
arpl
inc
outs
pop
dec
ins
cdq
mov
xor
ror
(bad)
bound
mov
out
ss
aad
inc
mov
sub
adc
call
into
test
popa
enter
sahf
fwait
jle
bound
outs
mov
mov
inc
cmp
xlat
pop
mov
pusha
sahf
stc
mov
aad
sub
(bad)
sbb
out
xor
popa
stos
jb
imul
mov
jb
(bad)
mov
sbb
mov
add
push
xchg
mov
dec
jne
nop
jns
push
mov
pop
inc
push
stos
out
xor
and
jle
neg
xor
jno
inc
inc
mov
scas
in
fcomi
or
dec
mov
lds
mov
fcmovnbe
lods
retf
jl
adc
fdivp
xchg
(bad)
cld
addr16
and
fidiv
shl
sub
cmp
sub
or
or
lds
dec
movs
in
pop
loopne
jne
hlt
aaa
call
cmc
aam
sub
clc
mov
adc
and
pop
sub
(bad)
xchg
push
xor
ins
punpcklwd
jmp
sbb
je
cmp
retf
inc
out
jmp
and
test
mov
adc
mov
lock
add
mov
loop
mov
mov
call
dec
pop
addr16
pop
popa
(bad)
fsubr
dec
jb
jecxz
and
inc
xor
nop
cwde
adc
mov
xor
mov
hlt
lods
xor
ins
adc
(bad)
adc
out
sbb
ins
imul
std
or
push
fist
test
lea
xor
aaa
sub
popf
jns
add
jge
ret
stc
aas
dec
or
cmc
int3
or
pusha
add
test
enter
retf
adc
call
cmp
adc
ins
test
retf
push
mov
add
push
movs
pop
cmp
out
out
adc
sbb
test
push
std
imul
and
mov
int3
stc
call
mov
inc
jnp
loope
imul
xor
mov
int
(bad)
(bad)
shl
mov
shl
jne
push
retf
shr
test
jb
dec
push
test
jnp
sar
cmp
jae
inc
and
pusha
sbb
(bad)
stc
stos
int
je
cwde
retf
jne
xor
adc
fucom
mov
imul
(bad)
test
inc
leave
jmp
shr
ins
gs
in
gs
mov
xor
je
fmul
retf
fnstcw
mov
xchg
test
xchg
mov
ins
mov
cwde
mov
(bad)
hlt
jnp
mul
popf
fidiv
sub
pusha
or
shl
jno
loope
jo
popa
mov
shl
jno
leave
cmp
xor
adc
lock
dec
push
in
jo
mov
push
jle
jno
sub
mov
push
mov
rol
or
(bad)
pop
mov
cmp
xchg
test
push
or
pop
arpl
out
push
add
push
jb
mov
mov
loope
fs
es
bound
(bad)
fiadd
div
out
(bad)
mov
or
out
int3
int
mov
(bad)
jmp
xor
and
movs
cmp
push
and
xchg
(bad)
adc
add
dec
lods
outs
bound
retf
mov
cmps
ja
int
(bad)
jno
loop
mov
sub
arpl
stos
in
cmps
ins
pop
movs
xor
fwait
movs
dec
icebp
test
xchg
jno
cmp
or
loope
jmp
push
and
mov
ret
bound
loop
ins
jnp
cmps
adc
mov
push
fidivr
adc
rcr
out
xlat
xchg
fcomp
jae
enter
fcom
add
or
cwde
sbb
call
dec
mov
ja
mov
jmp
or
into
mov
xor
pop
jmp
int3
cmp
leave
lds
iret
outs
scas
or
(bad)
dec
xchg
ficom
je
repz
ja
dec
ss
neg
jns
clc
sub
test
je
cld
rol
or
aam
arpl
push
xchg
dec
(bad)
aad
shl
xchg
jae
inc
cmp
adc
test
jecxz
or
(bad)
mov
dec
mov
and
clc
pop
dec
mov
xor
std
ret
mov
sbb
lods
(bad)
sub
xor
inc
cs
outs
cmc
inc
push
ja
inc
lds
adc
enter
dec
mov
add
sti
add
pslld
retf
cli
sub
movs
xchg
in
inc
ret
xchg
lods
xchg
repz
and
test
pop
jecxz
mov
mov
in
pop
xchg
stc
or
push
popa
jmp
push
sub
push
cli
nop
in
gs
addr16
ins
out
mov
enter
mov
push
add
pop
cmp
jno
rcl
jg
cli
jno
mov
(bad)
imul
dec
out
dec
xor
and
mov
arpl
(bad)
mov
in
mov
add
call
jb
(bad)
(bad)
(bad)
jo
ins
pop
sti
movs
(bad)
xchg
addr16
inc
mov
pop
dec
xor
mov
pop
and
lds
fidivr
jmp
out
sub
mov
dec
push
mov
adc
scas
sub
stos
cmp
mov
add
fwait
hlt
push
cmp
lock
cmp
push
inc
popa
push
sub
js
int3
sub
ror
push
sbb
adc
nop
xlat
enter
ins
jmp
out
inc
(bad)
fist
rcl
fsubr
stos
or
repz
mov
pop
mov
mov
out
xlat
ror
dec
lds
adc
rol
int3
repz
mov
lods
stc
xor
push
bound
mov
pusha
fisubr
mov
sar
test
sbb
dec
iret
jne
push
ja
mov
mov
fsub
dec
adc
fwait
mov
mov
xchg
mov
or
fsub
fs
lahf
es
pop
jae
cs
or
mov
mov
dec
cmps
mov
cmp
add
aaa
mov
mov
stc
shl
std
cmp
mov
mov
mov
ret
pushf
rcr
push
lea
push
inc
dec
mov
mov
xlat
and
out
jecxz
jns
xor
fild
adc
adc
es
das
dec
adc
ins
and
clc
js
test
push
push
and
cld
cmp
rcr
call
aaa
mov
loop
jno
rcl
mov
mov
clc
mov
int3
in
xlat
pop
les
(bad)
jo
mov
loope
in
stos
mov
mov
mov
nop
sbb
pusha
into
mov
sub
mov
push
inc
dec
add
scas
pop
div
or
push
(bad)
and
sar
pop
inc
and
imul
mov
std
add
cmp
imul
adc
sbb
movs
adc
pop
dec
mov
jae
mov
rcr
add
ss
xor
sbb
enter
movs
icebp
mov
imul
aad
cmp
add
dec
adc
lock
les
dec
leave
dec
ins
ins
mov
dec
popa
fidiv
xchg
call
pop
hlt
adc
jg
jp
into
inc
lods
jno
xchg
sbb
dec
and
jno
jp
and
je
jns
xlat
xchg
sbb
xlat
mov
push
mov
adc
daa
fld
add
jno
aam
test
ret
aad
fild
add
adc
imul
inc
xchg
lods
movs
das
cmp
inc
mov
add
in
sti
jo
mov
std
inc
mov
stos
inc
(bad)
push
xor
inc
outs
push
dec
inc
dec
add
scas
mov
into
loopne
enter
int
jnp
mov
mov
lea
neg
xchg
mov
cmp
and
sbb
call
pop
adc
xchg
rol
fimul
(bad)
cwde
mov
push
xchg
add
sbb
and
push
pop
loope
test
add
pusha
jns
shr
ret
loop
xor
js
cmps
fdivr
repz
adc
mov
mov
xor
mov
lds
scas
inc
shl
in
les
sub
push
mov
mov
sub
fwait
jmp
dec
jecxz
jno
or
div
or
js
je
cmp
(bad)
mov
mov
test
cli
scas
cwde
loope
ficom
xor
dec
xchg
push
int3
std
jge
js
fwait
call
cs
cmp
add
pop
cvtps2pd
outs
mov
les
in
jns
pop
loopne
jl
pushf
cmp
xlat
and
push
or
pop
cld
sub
push
mov
cmc
mov
pushw
xor
pop
push
sar
adc
out
and
inc
sar
hlt
cmp
mov
pusha
jecxz
cmp
mov
repz
push
adc
add
or
xlat
enter
frstor
inc
adc
pop
cmc
cmps
inc
test
and
adc
dec
int3
sahf
iret
add
adc
mov
popf
clc
fst
mov
lods
(bad)
jnp
jl
popa
mov
(bad)
and
sub
lods
call
int3
cmps
mov
sbb
repz
and
call
or
ja
pop
stc
rcl
movs
test
or
clc
imul
aad
push
in
sub
add
pop
out
mov
or
nop
out
clc
fwait
loop
fsub
mov
adc
repz
jns
and
call
out
out
ret
rcl
lods
lods
test
cmps
or
jle
mov
add
cdq
scas
xchg
jmp
outs
pop
mov
test
call
clc
movs
repnz
out
cld
mov
repz
push
aad
in
pop
xor
bound
loopne
adc
cld
sub
pop
or
dec
in
repnz
rcl
xor
push
push
mov
or
hlt
test
stos
test
add
adc
call
je
mov
hlt
scas
mov
push
test
popf
in
sar
popf
(bad)
sar
add
test
sub
test
cmp
outs
xchg
repnz
popa
mov
mov
or
cmp
repz
std
sub
(bad)
push
icebp
ja
fstp
popa
sahf
repz
xchg
xchg
popa
shl
or
gs
inc
or
add
mov
adc
stos
div
inc
inc
xchg
icebp
in
mov
pushf
sub
mov
sahf
pop
icebp
stos
popa
sbb
push
loope
jno
loope
jno
popa
or
jmp
mov
rcr
pop
mov
popa
or
mov
push
dec
out
fadd
mov
adc
leave
in
jae
push
sbb
mov
mov
pop
in
es
push
cmp
js
dec
rol
xchg
jne
mov
arpl
inc
jno
push
mov
cld
cdq
aas
pop
ja
scas
inc
adc
mov
and
(bad)
inc
cmp
imul
leave
imul
jns
and
push
push
test
mov
and
rol
call
cmp
adc
nop
gs
adc
inc
icebp
imul
outs
lahf
xor
pop
pop
ins
or
or
xor
mov
and
rol
shr
shr
cdq
add
or
das
popa
xor
data16
mov
xchg
adc
(bad)
fidiv
and
mov
movs
xor
es
push
adc
sbb
fadd
xchg
sub
movs
sar
repnz
mov
loopne
test
(bad)
mov
test
inc
xor
or
jno
jb
bound
arpl
movs
jecxz
(bad)
imul
not
das
xor
pop
mov
pusha
(bad)
pop
and
xor
cdq
pop
inc
movs
cmps
push
mov
push
cs
sbb
push
stos
cmp
add
or
mov
rol
fincstp
loope
mov
sub
mov
hlt
or
pop
lock
mov
scas
stc
add
jo
xchg
xchg
xchg
sub
sub
scas
mov
cwde
je
and
mov
aaa
call
dec
loope
fsubp
pushf
jno
into
xchg
stos
stos
inc
(bad)
mov
nop
mov
push
inc
jecxz
inc
gs
cmc
(bad)
sub
mov
ss
aam
out
(bad)
rol
nop
loope
mov
xchg
lods
ins
push
cwde
and
loope
stos
in
sbb
fnsave
mov
or
mov
mov
pop
les
push
inc
sub
cli
add
jmp
fs
scas
retf
cli
call
in
add
xor
mov
mov
or
jmp
mov
jmp
adc
jb
cmp
pop
sub
out
cwde
adc
jb
xor
cli
in
fistp
retf
(bad)
icebp
dec
dec
pop
or
dec
call
in
cmp
int3
cmp
inc
mov
xchg
sbb
bound
and
pop
not
idiv
ins
push
sbb
dec
fbstp
adc
sbb
ins
inc
out
shl
or
in
fmul
clc
mov
fst
fcomp
or
out
cmp
sti
sub
in
or
mov
xor
or
cmc
(bad)
pop
fiadd
retf
cdq
push
fwait
pusha
add
or
mov
ins
cwde
sar
ja
jl
xchg
adc
cmps
jle
in
jbe
clc
pop
xchg
ins
push
addr16
pop
es
pop
ror
or
jge
in
cdq
ja
fldenv
popa
imul
in
cmp
sbb
ja
movs
xor
xlat
sbb
mov
int
repnz
pop
aam
shl
call
cmps
adc
push
in
dec
sub
iret
cs
loop
xor
add
cld
xor
rol
pop
inc
jle
pop
lods
int3
ja
lods
cmp
aaa
mov
sbb
leave
push
aam
cdq
js
sbb
sbb
fs
push
xchg
jge
ret
cmps
je
mov
imul
addr16
cld
js
push
push
inc
jmp
repz
mov
add
sub
icebp
data16
push
add
lds
loop
test
sbb
pop
fistp
stos
js
dec
stos
jns
xchg
mov
jns
mov
dec
inc
mov
mov
ret
mov
dec
mov
lea
mov
(bad)
cmc
cwde
pop
hlt
mov
mov
pop
push
fnsave
into
out
gs
ror
enter
ins
mov
clc
cmp
frstor
jbe
xor
outs
ins
in
test
sub
popf
rcl
out
sub
stos
ins
adc
lea
clc
xchg
sbb
scas
mul
mov
movs
test
fs
xchg
pop
mov
lock
mov
sub
js
jge
inc
push
xchg
dec
pusha
ret
xor
imul
ror
inc
xor
dec
and
mov
in
stc
xor
jno
gs
pusha
retf
clc
int3
dec
sahf
and
pop
cmp
xchg
fld
pop
push
clc
xchg
stc
mov
and
pop
movs
call
pusha
mov
xchg
ss
add
mov
xor
test
gs
jmp
cmp
and
into
adc
mov
pushf
push
repnz
xor
sub
adc
fdivrp
lods
(bad)
add
mov
xor
sbb
and
sub
xlat
and
(bad)
(bad)
sub
in
mov
jl
cs
add
inc
adc
adc
rol
mov
and
and
pop
or
aaa
imul
(bad)
mov
or
cld
int3
aam
mov
inc
stos
adc
inc
xchg
add
fcomp
pop
sbb
jge
push
mov
jno
jae
push
dec
or
aas
push
mov
xchg
fadd
scas
sub
add
enter
mov
adc
or
out
pusha
popf
jne
or
push
push
repz
fdiv
imul
fmul
add
dec
enter
xchg
cdq
inc
iret
dec
sahf
xor
ss
or
dec
rcl
or
and
mov
jns
mov
sbb
and
dec
or
sub
rcl
cld
int
jmp
add
call
aam
inc
sti
xchg
mov
push
loope
sbb
jmp
pusha
into
jnp
fld
inc
test
retf
ss
add
cmps
out
fld
in
ror
inc
stc
mov
sbb
inc
pop
mov
mov
mov
push
or
dec
dec
out
mov
and
sub
push
in
jmp
sbb
je
mov
add
call
push
and
div
mov
into
ins
repnz
push
loope
mov
jge
xchg
rol
lods
outs
cmps
stc
(bad)
or
xchg
mov
mov
int
mov
leave
stc
stos
ret
fstp
out
outs
test
or
sbb
xchg
rol
mov
cmp
mov
mov
sahf
adc
xchg
loope
scas
mov
xor
jge
jecxz
adc
mov
adc
push
ja
inc
or
jo
cli
test
adc
push
stc
mov
stos
dec
les
retf
pop
add
retf
add
or
movs
add
push
add
dec
or
pop
rcr
or
cmp
pop
test
nop
jo
xchg
test
sub
pcmpgtw
or
cmp
mov
sbb
mov
arpl
pop
in
push
pop
push
pop
movs
iret
enter
mov
inc
jnp
mov
and
and
sbb
fsub
leave
inc
aam
ins
add
sub
loop
mov
or
xor
adc
popf
mov
push
jns
dec
movs
push
aad
ret
xchg
scas
mov
imul
pushw
push
jmp
cdq
lahf
mov
adc
sub
dec
stos
or
fisub
ret
movs
pop
lock
mov
cdq
nop
dec
mov
jo
ss
mov
les
mov
sbb
popf
dec
cmp
sbb
in
jne
ins
sbb
cld
mov
push
ins
sahf
mov
test
imul
pusha
mov
leave
shr
stos
popa
les
cmp
mov
pusha
popf
fs
clc
pushf
imul
cdq
xchg
dec
and
dec
pushf
in
imul
(bad)
into
adc
xor
and
mov
and
pop
mov
mov
popa
jae
xchg
repnz
into
mov
pushf
adc
jne
push
mov
and
adc
pop
pop
add
outs
sar
sub
mov
sti
jbe
mov
in
test
and
shl
pop
cmp
inc
sbb
shl
daa
scas
les
pop
cwde
cli
or
push
test
(bad)
mov
cdq
sbb
sub
enter
push
mov
jns
add
sbb
inc
push
mov
pop
jmp
lds
aad
mov
adc
add
add
call
icebp
jl
clc
ret
sbb
inc
push
fwait
retf
fisttp
dec
pop
nop
jp
sub
jno
loope
sbb
pop
dec
push
(bad)
cmp
or
xor
fstp
mov
jmp
push
fiadd
jo
lea
pop
mov
loopne
rol
dec
icebp
mov
mov
pop
mov
pop
or
xchg
call
mov
retf
jle
mov
push
xchg
inc
bound
pop
push
jmp
mov
dec
and
xor
pop
out
fisub
pusha
es
jnp
fidivr
popa
add
push
pop
pushf
hlt
push
jns
adc
or
sub
ret
mov
pop
jae
xchg
mov
movs
lock
outs
cmp
shl
pop
mov
test
test
add
leave
ins
xchg
push
arpl
loop
icebp
adc
xor
mov
popa
or
call
mov
sbb
pusha
ins
dec
in
leave
mov
mov
daa
or
es
mov
cwde
scas
xlat
js
xchg
sub
sub
inc
push
imul
loop
and
xchg
shr
call
xchg
icebp
aam
push
and
je
bnd
inc
std
jp
or
int3
dec
xor
cmp
mov
mov
push
pop
aad
or
enter
in
jno
enter
pop
add
ja
mov
pop
push
mov
cmp
xor
jne
xchg
fdiv
pop
test
jo
test
adc
vpackuswb
mov
dec
adc
cdq
aaa
call
xchg
mul
rol
pop
pop
out
mov
int3
or
inc
lea
adc
lea
outs
mov
jmp
sub
cmps
add
sbb
inc
jp
jp
dec
add
cmp
lahf
nop
cli
into
mov
into
and
rol
jmp
mov
fst
test
shl
into
push
inc
(bad)
into
shl
shr
ficom
jg
loope
and
fst
push
pop
push
add
mov
jno
ins
imul
stc
adc
mov
(bad)
test
cmc
loope
rcl
or
shl
not
shr
test
dec
(bad)
xor
loop
sbb
jmp
push
mov
loopne
lock
jo
jecxz
jo
arpl
jae
gs
repnz
(bad)
hlt
(bad)
in
je
jmp
lea
push
hlt
fsubr
add
out
jnp
push
cli
fsubr
cmp
or
jnp
pusha
or
jecxz
jae
jecxz
jne
in
jnp
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
ficomp
jmp
jno
stos
or
fsub
add
add
jno
popa
mov
shl
or
popa
or
shl
icebp
shl
icebp
shl
mov
in
jo
in
mov
push
popa
or
popa
mov
shl
icebp
shl
mov
loop
jo
popa
push
mov
imul
icebp
sar
lock
popa
mov
shl
icebp
sar
cdq
scas
in
out
inc
shl
sar
icebp
ror
pop
lahf
jp
inc
les
popa
mov
push
xchg
ins
pop
jp
lods
(bad)
int3
inc
dec
dec
mov
stos
pop
ficom
pop
and
or
rcr
cli
mov
add
pushf
sbb
sub
popa
mov
ror
jae
sahf
adc
sar
out
pop
popa
mov
sti
imul
cwde
enter
cs
les
(bad)
dec
clc
loopne
icebp
push
lea
cdq
pop
jge
sbb
dec
sahf
inc
call
sub
sub
inc
loope
mov
xchg
jo
mov
xchg
xchg
inc
cs
sti
xchg
cmp
nop
push
inc
inc
ins
sub
jbe
mov
cli
and
test
or
sbb
(bad)
loope
xchg
(bad)
mov
mov
push
test
dec
aad
jp
and
mov
aad
mov
hlt
sub
push
mov
xchg
jnp
es
jno
push
push
daa
adc
les
adc
mov
addr16
mov
inc
pushf
je
jmp
cmp
cld
mov
and
imul
push
pop
mov
ins
arpl
ret
dec
adc
pop
imul
jecxz
push
xor
aad
xor
adc
xchg
push
add
das
sbb
sbb
xor
jle
fisub
sub
pop
xor
xchg
nop
mov
mov
pop
add
mov
xor
pop
movs
ss
adc
cli
pop
adc
push
mov
dec
paddusw
xor
push
(bad)
push
aas
retf
or
and
dec
enter
hlt
ror
dec
arpl
stc
hlt
sub
dec
fistp
daa
jne
cmpxchg
sbb
ins
add
(bad)
push
addr16
outs
push
repz
std
mov
sub
xchg
mov
int3
into
rcl
adc
stc
inc
or
mov
and
lock
mov
adc
into
std
mov
or
nop
call
mov
shr
mov
ficomp
es
mov
mov
mov
mov
shl
icebp
shl
div
push
jne
xchg
push
pusha
mov
push
bound
icebp
shl
jo
popa
mov
shl
lock
loope
repz
jb
imul
loopne
push
gs
push
arpl
(bad)
fst
aas
xchg
xchg
dec
scas
cwde
add
(bad)
or
data16
mov
rcl
fs
mov
jnp
popf
mov
arpl
mov
bound
(bad)
jle
add
ja
pop
cmps
jns
out
mov
ret
in
call
sbb
sahf
inc
ret
cmp
push
dec
(bad)
jo
nop
fsubr
cmp
call
lea
sbb
push
aas
pushf
or
xor
jnp
add
loop
lahf
adc
cmp
jnp
inc
shl
mov
mov
dec
xchg
sbb
sbb
cld
cmp
mov
lds
sub
(bad)
(bad)
add
loop
cmp
bound
ficom
and
xchg
and
in
fstp
cmp
inc
or
inc
add
pop
inc
xchg
jmp
icebp
adc
stos
and
push
xchg
mov
in
loopne
sub
loope
repz
and
xchg
sbb
mov
hlt
mov
cmp
push
and
test
sub
clc
pop
pushf
cmp
jmp
nop
mov
cmp
inc
clc
js
dec
out
jo
inc
xchg
popf
ins
(bad)
add
jl
imul
mov
loop
out
retf
retf
dec
pop
repz
cmps
inc
lods
pop
out
pop
add
jno
pop
retf
cli
xor
xor
stos
out
sub
(bad)
cmps
cmp
fisttp
jmp
daa
cdq
aas
push
daa
bound
xchg
pop
adc
sub
dec
fdiv
leave
pop
inc
inc
into
pop
dec
pushf
push
pop
setp
push
mov
cmps
mov
cmp
retf
cs
add
ja
fldenv
and
fstp
inc
adc
mov
xlat
ins
mov
sub
in
lds
push
cmp
dec
lock
inc
and
lahf
jg
aad
jge
add
sar
pop
pop
mov
push
jle
fld
inc
in
out
les
(bad)
pop
sbb
add
jg
into
mov
scas
ins
lds
sub
jae
repz
sar
mov
stos
push
(bad)
fnstenv
les
daa
call
jmp
popa
(bad)
sub
push
sub
rcl
sub
div
mov
in
xchg
vhaddpd
movs
sti
cld
xchg
dec
inc
jbe
pop
cmp
mov
call
ja
(bad)
scas
stc
cs
cmp
cmps
stos
call
pop
test
jae
mov
or
ds
out
ins
xor
cmp
jne
dec
inc
sub
xchg
push
or
mov
sbb
call
cli
or
ins
xchg
mov
ret
test
and
xchg
mov
push
sbb
je
sub
dec
dec
in
scas
sbb
test
(bad)
fidivr
pop
in
xor
mov
outs
(bad)
int
inc
mov
scas
repnz
mul
(bad)
ror
or
xchg
and
in
mov
add
test
inc
or
adc
pop
pop
in
(bad)
dec
add
jmp
xchg
aad
(bad)
xor
aas
push
mov
(bad)
mov
mov
fisttp
lds
cmp
cli
jg
shr
sub
or
aad
adc
neg
cwde
mov
mov
lds
adc
ror
mov
ds
shl
mov
shl
jo
popa
mov
shl
or
shl
sbb
fldcw
imul
sub
jecxz
fnstcw
enter
or
mov
lahf
push
outs
push
push
mov
int3
daa
xor
leave
test
add
mov
(bad)
jae
cdq
xor
nop
and
pop
imul
je
and
pmaddwd
jnp
push
sub
mov
pop
mov
inc
mov
push
pop
mov
add
(bad)
xorps
push
int
dec
adc
push
or
mov
aas
jmp
pop
sbb
scas
cmps
pop
mov
inc
dec
iret
ss
pop
cs
cmps
fwait
dec
sub
or
jbe
pop
hlt
sti
loop
or
mov
jb
pop
and
cmps
je
and
sub
adc
add
sar
adc
cmp
add
sbb
mov
mov
sti
in
pushf
in
jno
data16
call
sub
inc
(bad)
sti
cmp
push
out
or
jnp
and
sbb
ror
and
imul
int3
mov
arpl
or
ret
das
mov
out
stos
mov
stos
sub
xchg
fnstenv
mov
cmp
push
scas
xchg
lock
xchg
call
dec
pop
je
sbb
adc
aam
inc
mov
data16
mov
sbb
mov
dec
das
xchg
sub
sbb
(bad)
icebp
pop
or
xchg
jmp
mov
xor
inc
xchg
js
mov
movs
jmp
xchg
clc
out
cmc
fsub
out
imul
nop
adc
cmps
fst
(bad)
js
jmp
xchg
fst
aaa
jne
jl
inc
mov
xchg
adc
and
push
outs
imul
repz
popa
or
shl
mov
shl
xor
call
cwde
imul
push
mov
fcomp
clc
inc
sbb
mov
lahf
adc
ins
outs
daa
jb
imul
adc
jo
scas
pop
imul
mov
scas
mov
xor
adc
or
xchg
(bad)
mov
jbe
adc
add
mov
(bad)
cmp
rcl
add
inc
out
test
(bad)
inc
xchg
mov
outs
in
sbb
fs
test
out
js
fldl2e
mov
maskmovq
neg
mov
pusha
fwait
jo
ins
push
cmp
add
sub
ins
sahf
ret
aam
(bad)
pop
test
cli
cmc
cmp
mov
pop
mov
div
mov
xchg
mov
adc
hlt
jnp
or
popa
scas
test
mov
sbb
ins
sub
imul
inc
dec
mov
rcl
adc
or
jnp
sbb
inc
in
push
pop
dec
pop
shl
sbb
mov
mov
mov
mov
out
neg
ror
push
xchg
cli
xchg
rol
jnp
sub
cmp
push
icebp
and
loope
test
stos
xchg
rol
and
push
cmps
inc
xchg
lahf
shr
dec
xchg
and
fs
jb
inc
scas
mov
inc
mov
push
or
inc
mov
lock
out
xlat
addr16
push
sbb
sbb
lahf
sahf
fld
jmp
push
addr16
pop
push
pop
adc
and
outs
call
inc
mov
push
je
call
mov
cmp
xor
lods
clc
adc
xor
add
cmp
mov
sbb
jmp
jecxz
test
out
mov
out
push
dec
mov
repnz
test
push
jnp
ins
pusha
push
jmp
adc
repnz
into
xor
pop
push
jg
or
mov
inc
cdq
cmp
push
lahf
mov
les
clc
mov
ja
add
xchg
shl
mov
push
arpl
jno
loop
repnz
mov
shl
icebp
push
call
sub
inc
leave
cmp
dec
jo
stc
pop
jno
dec
nop
test
dec
push
stc
or
xor
cmp
ret
enter
or
pusha
cmc
jb
dec
push
xor
imul
cmps
cmp
pop
das
(bad)
arpl
sahf
dec
sub
push
leave
jg
enter
ror
out
sub
and
stos
push
mov
sar
pop
pop
cs
mov
ds
(bad)
jbe
inc
cmp
leave
enter
xor
imul
pop
shr
mov
jle
leave
jg
mov
sar
xor
bound
cld
jo
sbb
mov
std
xchg
enter
adc
xchg
push
call
iret
lds
dec
inc
arpl
add
int3
xor
and
xchg
or
xchg
cmc
iret
jle
cmc
push
sub
scas
aas
ret
scas
shld
daa
ret
retf
addr16
mov
outs
out
repnz
mov
in
mov
stc
pushf
aaa
mov
or
jnp
mov
(bad)
adc
(bad)
xchg
xchg
mov
add
pop
cmp
push
cmp
push
gs
lods
adc
dec
adc
rcl
or
or
cld
stos
sub
unpcklps
add
or
mov
cmp
bnd
xchg
dec
int3
jno
pop
nop
jmp
stc
jmp
pop
(bad)
aas
push
fcomp
int
popa
imul
nop
popf
jbe
or
mov
ins
aas
pop
xor
adc
push
xchg
(bad)
and
neg
call
pop
(bad)
arpl
cmps
call
ja
es
cmps
js
in
ins
cmp
add
jle
cpuid
pop
pop
add
(bad)
dec
xchg
(bad)
pop
in
add
inc
sub
push
test
in
repnz
retf
xor
leave
dec
in
call
test
fstp
jecxz
into
(bad)
nop
mov
xchg
sbb
popf
and
int3
pop
(bad)
pop
jmp
sti
sahf
hlt
fild
mov
mov
cmp
or
loopne
aam
vorps
std
inc
push
mov
je
dec
stc
fdiv
shr
bnd
out
pop
cmp
xor
cmp
mov
dec
(bad)
inc
adc
xchg
xor
sub
and
jns
cmp
xchg
(bad)
hlt
jb
call
xor
ret
das
pop
repz
cmp
lock
mov
shl
jns
sti
mov
imul
sbb
sbb
mov
add
mov
add
std
xchg
call
sbb
enter
mov
xchg
add
pop
inc
xchg
cmp
adc
shl
inc
aad
dec
pop
pop
sbb
xchg
sub
scas
ins
add
push
dec
jo
and
hlt
rol
out
mov
sub
aam
retf
mov
push
xor
scas
push
aas
pop
or
es
stc
out
jp
and
add
mov
jno
into
xchg
stc
mov
mov
out
in
sbb
cs
inc
sub
aas
sub
(bad)
stos
xor
jbe
sahf
xchg
inc
xchg
call
lahf
adc
adc
mov
imul
aad
mov
(bad)
icebp
and
and
mov
inc
sti
cmp
fwait
mov
adc
int3
adc
bound
repz
mov
loop
call
outs
mov
or
cmp
loop
or
push
leave
push
stc
jb
cmp
mov
out
xor
cmp
and
jne
out
(bad)
out
sbb
xchg
mov
jo
in
inc
popf
aaa
push
lds
jmp
mov
inc
cmp
push
aam
xlat
xor
aam
sbb
or
call
aam
das
call
mov
sub
cmc
mov
int
sbb
mov
or
sbb
mov
aad
xor
inc
cmp
push
aaa
push
dec
pop
and
sbb
test
jecxz
addr16
into
sub
sahf
inc
mov
push
cmps
sar
add
push
movs
jmp
jno
clc
mov
xchg
push
div
jmp
pop
jl
push
cli
sbb
dec
sbb
fwait
scas
xchg
mov
loopne
(bad)
(bad)
mov
lods
imul
cs
dec
sub
jo
mov
imul
enter
cdq
and
add
xchg
adc
es
add
mov
enter
cmp
or
inc
rol
inc
pop
pop
xchg
loope
cmps
fsubp
shl
dec
dec
mov
mov
ret
dec
aas
pop
shr
fdivr
jae
mov
cmps
jno
adc
aam
ds
push
mov
lock
daa
test
stc
or
jae
movs
sbb
test
std
sub
mov
imul
pusha
push
out
cld
pop
lods
push
mov
xor
push
sbb
in
xchg
inc
dec
popa
lods
loop
mov
dec
xor
push
sub
loopne
pop
(bad)
add
pop
(bad)
pop
ffree
imul
inc
cmps
push
pop
xchg
into
and
pop
pop
pop
xchg
(bad)
retf
lods
mov
jp
cs
mov
or
mov
xchg
mov
adc
xor
xchg
push
je
mov
in
arpl
adc
ja
push
inc
cmp
cld
xchg
daa
and
sub
data16
xchg
jp
scas
clc
lods
dec
sub
in
and
fs
xchg
sbb
pop
arpl
imul
sub
add
inc
movs
stc
mov
push
dec
mov
add
push
sub
and
ins
rcr
push
mov
jno
mov
sti
dec
(bad)
dec
push
je
push
mov
mov
sbb
inc
add
push
shl
out
scas
jno
retf
cdq
arpl
pop
dec
mov
fsub
xchg
mov
stos
dec
xchg
fsubr
xor
sbb
mov
jecxz
mov
cmp
jp
(bad)
sub
or
imul
xchg
push
ins
je
sub
cmp
mov
ds
sub
jo
push
mov
popf
xor
cld
inc
je
fs
push
not
jg
and
sub
mov
icebp
lods
and
and
out
pushf
hlt
hlt
out
xor
jle
dec
(bad)
mov
fbstp
jl
scas
xchg
out
jle
(bad)
fisubr
adc
int
mov
(bad)
pop
movs
mov
xlat
mov
or
sahf
sbb
mov
dec
mov
dec
push
sub
pop
pop
mov
xchg
outs
sbb
jl
jo
clc
aaa
retf
mov
push
stos
add
rcr
mov
(bad)
sti
fs
popa
push
fild
xor
xchg
mov
add
mov
es
sub
pop
faddp
dec
adc
loop
xor
dec
mov
xchg
push
xor
pop
jo
into
inc
in
or
pop
int3
imul
arpl
data16
push
cmc
cmp
in
addr16
sar
push
pop
outs
push
call
cmp
adc
movs
fnstsw
(bad)
clc
sub
hlt
arpl
inc
or
mov
shl
imul
out
push
int3
inc
mov
sbb
sar
retf
test
cmp
out
sub
cmp
inc
xor
jecxz
fstp
mov
cs
aas
in
(bad)
sub
test
cli
push
pop
adc
sbb
fdivr
ss
shr
push
in
push
lea
pop
retf
xchg
push
mov
fadd
and
pushf
pop
js
in
lahf
lods
or
(bad)
xor
cmp
pop
mov
js
mov
jnp
mov
and
push
ds
mov
mov
scas
or
out
pop
cwde
jns
lods
retf
dec
cmp
mov
pop
bound
mov
push
mov
outs
(bad)
ror
mov
ficomp
push
into
push
xchg
xchg
add
sbb
shl
ss
fmul
rcr
or
cmp
jbe
sbb
dec
mov
arpl
mov
xchg
cmp
mov
pushf
mov
stc
mov
test
and
add
mov
mov
movs
sahf
data16
cmc
sbb
and
dec
repnz
sahf
or
and
and
mov
loope
push
push
outs
jmp
mov
shl
or
popa
or
loope
icebp
shl
nop
jno
shl
push
js
push
xor
jno
xchg
fcom
sub
scas
popa
mov
jno
jno
test
mov
ret
cmps
xchg
sub
fs
arpl
adc
fld
test
mov
jecxz
fbld
mov
xor
jno
pusha
mov
or
mov
outs
add
and
xchg
xchg
es
dec
mov
or
jne
mov
jb
mov
repnz
iret
push
xchg
test
jns
or
pop
and
inc
or
jge
jo
cmp
dec
push
das
pop
xor
(bad)
(bad)
std
push
xor
es
scas
outs
cmp
imul
push
dec
loope
adc
dec
ins
test
jno
add
gs
fld
mov
or
mov
or
push
aas
mov
mov
(bad)
outs
movs
mov
daa
out
xor
(bad)
mov
shl
fidiv
adc
fist
jle
out
push
adc
xchg
inc
cdq
xlat
mov
or
adc
ja
mov
dec
cmp
mov
mov
xchg
mov
pop
pop
stc
pop
push
rcr
push
add
lods
push
cld
jbe
cmp
cmps
and
xchg
arpl
push
jns
adc
enter
(bad)
push
mov
xor
xorps
in
test
lds
aaa
je
fiadd
jb
stc
sub
or
ficom
push
mov
aaa
mov
mov
cmp
retf
ret
int
(bad)
pop
gs
stc
and
outs
loope
push
scas
xor
jg
mov
icebp
js
sub
push
jge
xor
js
addr16
pop
stc
add
xchg
xchg
(bad)
xor
or
pop
xor
in
int3
mov
dec
mov
jo
sub
jne
nop
ins
jl
mov
cmps
jbe
jg
inc
inc
mov
pop
push
repz
inc
mov
cmp
jnp
js
bound
inc
add
sbb
and
imul
mov
aaa
icebp
jmp
popf
inc
cmp
sbb
loope
or
xchg
xchg
pop
rol
push
push
(bad)
es
outs
sbb
pop
cdq
ror
adc
push
sbb
loopne
repnz
iret
ret
jg
iret
aas
test
sub
cmp
sub
sub
mov
icebp
push
pop
inc
out
pop
stc
dec
xchg
loop
sbb
jp
and
(bad)
xlat
hlt
retf
push
jmp
icebp
mov
dec
fcom
movs
test
adc
dec
push
call
cmp
cmp
or
push
push
movs
jmp
xor
jge
mov
mov
sbb
jmp
pop
(bad)
cmp
test
arpl
ret
movs
pop
mov
mul
cmp
mov
call
mov
(bad)
(bad)
push
test
xor
lahf
outs
dec
or
stc
into
pusha
pop
add
aaa
mov
mov
(bad)
(bad)
test
push
ds
and
cmp
test
cwde
dec
xor
sbb
jns
test
jo
mov
cmpps
ins
pop
xchg
mov
addr16
add
push
mov
dec
jmp
sbb
ins
gs
mov
pop
outs
test
pop
xor
pop
(bad)
test
mov
addr16
xchg
pop
pop
add
pop
inc
test
pop
mov
ds
icebp
fmul
js
fimul
mov
adc
mov
je
fnstsw
enter
frstor
xor
mov
mov
push
cs
push
out
xchg
sti
push
push
dec
jmp
jge
xor
sub
arpl
xor
xor
cli
push
push
adc
sub
and
mov
sbb
or
(bad)
into
inc
shl
in
and
(bad)
mov
sbb
in
jne
xor
test
imul
mov
push
or
push
cmps
xchg
jmp
mul
lahf
ja
mov
fild
mov
movs
cmc
dec
lods
xor
stos
mov
mov
add
pop
fadd
ja
dec
gs
call
inc
cmp
push
mov
data16
push
mov
(bad)
mov
fcomp
add
mov
mov
mov
cmp
int
ficomp
cmp
scas
ins
in
sbb
xchg
fsubr
into
mov
or
sbb
lahf
mov
sbb
stos
mov
adc
ins
adc
and
cld
push
mov
cmc
cld
in
ins
mov
call
cmp
in
push
aaa
mov
sbb
sti
inc
pop
stos
call
outs
imul
sbb
retf
mov
enter
dec
mov
mov
mov
pop
fmul
in
pop
and
sub
lea
mov
dec
push
and
scas
sahf
outs
mov
inc
sub
xor
push
(bad)
mov
arpl
stos
push
or
push
or
cmp
cmc
clc
aaa
mov
xor
mov
inc
push
sbb
xchg
sbb
(bad)
popf
sbb
adc
stos
repnz
pusha
imul
pusha
out
mov
cmps
ret
inc
dec
cmp
cmp
hlt
dec
into
xchg
int
cmp
xchg
pop
gs
jl
(bad)
sti
jmp
add
or
pusha
sub
mov
fmulp
pop
in
int3
cmps
pusha
into
loopne
xchg
daa
mov
pop
loop
mov
xor
pop
(bad)
mov
xchg
xor
or
cmp
mov
(bad)
xchg
pusha
out
ret
sub
fld
xchg
and
jb
pushf
fidiv
jl
or
popa
mov
pusha
mov
push
imul
aad
inc
call
test
aad
gs
test
mov
out
jecxz
jae
js
psubsb
inc
call
mov
sbb
sub
call
mov
and
enter
pop
sub
icebp
loope
add
sbb
shl
out
call
shl
xor
loope
and
and
add
xchg
jecxz
mov
nop
jae
push
imul
lock
aad
inc
call
popa
or
popa
mov
push
jecxz
jae
popa
mov
shl
icebp
push
stc
sub
jmp
sbb
dec
cmp
mov
popa
or
mov
pop
adc
pop
xchg
adc
sub
mov
loopne
retf
fistp
hlt
push
in
ror
and
loopne
cmp
rcl
xor
mov
int
nop
pop
imul
jno
out
ret
call
pop
retf
cmp
pop
std
dec
movs
cdq
sub
hlt
cmp
xor
fild
aas
sti
mov
cwde
mov
scas
sbb
imul
loop
(bad)
xchg
push
call
mov
dec
mov
sub
gs
test
push
fsubr
imul
mov
in
cmp
ret
dec
jae
popf
enter
rcr
inc
repz
cmp
push
test
in
xchg
mov
mov
hlt
mov
cmp
push
jo
xlat
ret
in
mov
(bad)
stc
pop
fist
mov
push
dec
jl
cli
jmp
and
mov
sbb
jp
push
daa
movs
pop
or
fwait
cmps
dec
loope
ret
(bad)
js
addr16
jae
xlat
jmp
stc
les
or
fmul
std
outs
retf
mov
sti
mov
mov
(bad)
dec
div
dec
les
pusha
sti
lods
in
and
dec
lds
mov
mov
les
fild
inc
cmps
lea
add
mov
into
sub
and
add
lods
mov
ins
(bad)
repz
cdq
pop
and
jne
ret
add
mov
cmp
pushf
jno
mov
dec
add
scas
retf
cmp
fs
loop
ins
stc
inc
push
push
mov
adc
and
movs
add
xor
cmp
sub
(bad)
sar
lds
mov
ja
outs
lds
mov
cmc
adc
loopne
jo
popa
mov
popa
mov
shr
sbb
push
dec
adc
jmp
shl
js
pop
adc
popa
mov
push
jle
jno
sub
lea
ret
aaa
shl
repz
add
cmps
test
out
loopne
sub
sub
mov
fwait
sub
in
mov
bound
or
jge
xlat
pop
dec
cmp
sahf
in
mov
cmps
adc
mov
ds
mov
and
pop
ins
jle
sbb
rcl
addr16
sub
and
mov
jmp
mov
rcr
mov
lock
mov
dec
mov
xor
imul
cld
pop
lock
push
not
jo
jnp
and
xor
mov
(bad)
clc
add
mov
mov
xchg
cmc
mov
ret
mov
push
mov
sbb
(bad)
retf
jnp
lahf
jmp
mov
add
dec
mov
loop
cmp
sub
pop
add
or
addr16
jp
das
arpl
(bad)
aad
call
jp
jmp
out
mov
cld
sbb
dec
daa
mov
dec
mov
cld
jmp
daa
mov
and
push
nop
rcl
mov
or
jmp
push
or
jecxz
dec
inc
test
fwait
leave
sub
dec
(bad)
fdiv
scas
out
loop
mov
xor
cmp
out
cmp
xor
js
sbb
cwde
(bad)
test
movups
add
jo
lea
pop
sar
ret
mov
xchg
jl
jl
inc
mov
mov
test
mov
jle
das
xlat
movs
retf
or
les
enter
std
out
fidiv
call
in
mov
stc
ins
mov
xchg
ret
mov
mov
jmp
fidiv
jmp
push
ss
mov
ja
jg
mov
popa
or
pop
pusha
mov
shl
or
shl
icebp
shl
xor
stc
sub
push
mov
fdivr
dec
and
or
loope
icebp
push
jle
jno
inc
and
mov
hlt
xor
mov
mov
out
cmp
fstp
lods
dec
pop
jle
dec
outs
ds
movs
icebp
mov
rcl
out
jae
cdq
rol
mov
test
rol
pusha
fs
pop
dec
dec
je
mov
loopne
daa
test
das
adc
xchg
retf
or
test
retf
bound
repnz
ror
ret
out
and
adc
sub
lea
(bad)
cmp
pusha
cmp
jb
push
ins
adc
mov
xchg
mov
repnz
call
dec
stc
push
retf
or
fsubr
test
loope
int
inc
inc
add
jns
imul
test
cmps
ss
pusha
ret
xchg
xor
lods
ret
push
cli
mov
daa
pop
cmp
ds
mov
aad
jns
jmp
imul
loopne
inc
push
aaa
sbb
in
xchg
xlat
call
test
mov
gs
inc
cmp
xchg
nop
add
ja
and
pmullw
je
mov
sar
xor
call
push
stos
stos
inc
jb
xchg
mov
mov
jnp
(bad)
mov
lods
mov
es
push
shl
ins
out
stc
(bad)
mov
cdq
lock
jmp
jg
pop
sub
ror
mov
frstor
mov
pop
loope
xor
test
cld
je
jmp
mov
sub
cmp
mov
mov
jecxz
repnz
mov
mov
push
mov
stos
dec
ins
dec
jo
add
data16
imul
stc
fild
scas
repz
cmps
jae
ins
sti
add
mov
and
ds
lds
jge
push
mov
push
bound
inc
clc
fwait
cli
adc
popa
mov
nop
es
cdq
push
sbb
xor
mov
std
sti
inc
adc
stos
mov
add
pop
xchg
in
popf
test
in
pop
dec
daa
and
sar
push
xor
adc
or
xor
mov
xchg
lock
inc
test
int
sbb
ficomp
sub
into
ficomp
fcomip
pop
in
add
xchg
dec
push
imul
push
and
mov
mov
loopne
mov
jl
add
adc
inc
or
aam
sub
jecxz
mov
test
std
push
sbb
int3
cmc
fwait
test
in
mov
pop
dec
call
mov
mov
in
mov
sub
xchg
jge
movs
mov
xchg
or
pop
test
dec
es
mov
imul
(bad)
in
xchg
or
fdivr
das
daa
shr
gs
(bad)
mov
jp
sti
icebp
fucomi
addr16
cmc
shl
and
cli
or
push
cmc
jns
mov
sbb
pop
in
shl
lods
inc
xor
adc
fcom
pushf
cld
pop
sub
pop
adc
mov
cmp
add
js
imul
addr16
pshufw
push
and
and
cmps
cmp
push
or
mov
je
and
jge
repnz
loope
xchg
movs
inc
dec
or
push
xor
dec
fsub
mov
pop
jg
jp
inc
stos
ret
rcl
mov
push
les
push
push
out
ja
mov
in
ja
addr16
jmp
xor
ret
(bad)
movs
call
outs
cmp
jne
cwde
repz
dec
adc
retf
jp
imul
mov
add
pop
sbb
stos
fprem1
jmp
dec
adc
adc
and
lods
inc
inc
stos
call
imul
enter
ret
jne
mov
enter
cmp
out
mov
pusha
inc
lds
addr16
js
rcr
xor
out
nop
dec
daa
or
in
pop
inc
dec
jmp
push
inc
cmp
and
push
xchg
leave
pop
jg
dec
inc
daa
sub
in
adc
pop
out
pushw
jae
jb
jbe
dec
mov
fs
inc
into
cmp
ss
mov
cwde
sub
call
jae
popa
test
xor
cmc
ret
ja
cwde
mov
out
test
mov
inc
loop
and
fs
cmp
adc
or
rcl
ret
das
ret
shl
mov
inc
ror
aas
xchg
pop
out
hlt
mov
dec
jmp
in
xlat
xchg
repz
test
mov
xchg
shl
xor
or
xor
dec
call
jnp
gs
push
sbb
push
loop
mov
add
fdiv
in
jmp
xchg
pop
mov
sub
push
lahf
adc
mov
mov
xchg
icebp
ror
retf
lds
xor
inc
leave
jno
add
pop
sub
mov
jns
int
loopne
in
xor
dec
(bad)
stc
cmp
hlt
and
push
add
inc
mov
add
inc
(bad)
sub
fdivr
retf
lea
mov
repz
fldenv
sbb
movs
jb
cmp
stos
mov
lds
dec
jae
adc
adc
fisub
in
into
xchg
repz
pop
xlat
stc
fist
ror
sti
xchg
pop
inc
std
sbb
pushf
xor
test
mov
std
sub
lea
pop
xchg
mov
int
inc
and
loopne
adc
sub
lahf
mov
pushf
push
mov
pop
jmp
das
sahf
ds
lahf
sub
push
adc
pop
push
jnp
cmp
sahf
in
cli
mov
stc
cdq
loopne
jl
test
out
hlt
dec
inc
jo
mov
or
mov
and
pop
leave
mov
push
xchg
jne
out
jo
sahf
mov
cmps
dec
movs
ins
jae
lock
mov
jl
jmp
and
push
xor
outs
std
mov
mov
xchg
rcl
call
or
fwait
xchg
ins
xchg
push
mov
jae
test
or
gs
xor
les
stos
scas
and
jle
and
add
mov
test
jecxz
pop
jmp
xor
sbb
ror
movs
js
push
dec
xchg
push
call
loop
pop
jmp
dec
xchg
call
popa
sbb
pop
push
add
(bad)
pop
sub
cmp
imul
inc
push
clc
add
lods
out
lods
or
cmp
mov
or
sbb
xchg
cmp
xor
sbb
popf
les
mov
lods
pop
sub
scas
into
stc
sahf
mov
sti
retf
icebp
iret
arpl
sar
mov
mov
std
outs
ins
fidiv
xor
in
or
test
jmp
xor
pop
mov
ja
int3
add
xchg
dec
add
data16
add
add
mov
out
std
jno
stos
in
sub
adc
or
jmp
mov
lock
push
add
outs
nop
adc
cmps
jg
dec
data16
inc
cmp
pop
shr
std
comiss
imul
ror
lods
jb
and
add
jmp
sub
push
pop
jp
jg
(bad)
imul
mov
adc
retf
fbstp
xchg
loop
jne
mov
cmp
mov
lds
sbb
das
and
fidivr
and
(bad)
movs
and
cmps
adc
mov
ret
sahf
neg
mov
fld
popa
push
mov
xchg
mov
pop
or
pop
adc
mov
sbb
jno
mov
les
nop
call
ret
add
mov
lods
daa
sub
mov
add
or
pop
in
push
into
jmp
hlt
sub
test
mov
rol
fimul
pop
mov
out
or
scas
test
imul
jno
inc
mov
rcr
mov
fdivr
js
push
cmp
push
mov
imul
lds
xlat
js
mov
pusha
mov
push
loopne
jo
loopne
lock
in
jae
jecxz
repz
je
fs
(bad)
in
ja
add
cmp
xor
cmp
pop
push
ja
ins
cmp
fcmovb
or
in
jae
jmp
jae
imul
(bad)
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
add
push
loope
jno
jmp
ja
pop
imul
shl
icebp
shl
icebp
shl
icebp
rol
mov
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
popa
or
fsubr
adc
popa
mov
shl
icebp
shl
icebp
ror
jno
popa
mov
loopne
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
dec
jno
add
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
push
outs
jmp
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
icebp
aaa
jno
popa
push
mov
popa
mov
scas
div
pop
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
popa
mov
push
jle
jno
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
sahf
in
outs
push
js
cmp
stos
icebp
fsub
or
repz
sub
shl
icebp
hlt
loope
mov
push
cwde
dec
loop
cmp
in
scas
popa
jae
mov
pusha
or
push
pusha
mov
loopne
jo
pusha
mov
jecxz
repz
arpl
jb
addr16
aad
or
not
imul
je
push
push
jnp
ins
add
push
gs
pop
loope
jno
arpl
jae
out
cmc
pop
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
idiv
fisubr
nop
push
loope
jno
imul
jo
push
push
push
loope
icebp
fisub
icebp
shl
icebp
shl
icebp
shl
icebp
shl
mov
popa
mov
shl
icebp
shl
icebp
rcr
in
push
loopne
icebp
push
jmp
mov
rcr
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
loope
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
popa
mov
push
dec
jno
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
inc
out
pushf
shl
icebp
shl
lock
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
jno
lea
das
adc
stc
cmc
loope
rcl
or
shl
not
rol
pushf
push
loopne
lock
mov
push
jecxz
jo
arpl
push
arpl
jae
loop
repz
addr16
repnz
(bad)
not
pcmpeqb
(bad)
clc
pop
in
stc
push
jmp
add
pop
out
sti
push
imul
loope
push
mov
jecxz
repz
add
add
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fiadd
mov
popa
pop
stc
aam
mov
loopne
stc
shr
or
popa
push
mov
loope
jno
popa
or
shl
icebp
shl
icebp
push
in
repnz
jmp
loope
jno
popa
or
shl
icebp
shl
icebp
shl
jno
push
gs
loopne
icebp
push
jmp
mov
shl
mov
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
mov
shr
loopne
imul
shl
sar
sbb
stos
push
loopne
pushf
cmp
jmp
xor
mov
clc
jb
pop
cmp
ret
mov
in
in
cld
out
shl
lods
mov
ret
rcl
sbb
or
in
imul
call
push
mov
idiv
pop
pop
add
pop
pop
test
add
ins
add
push
push
(bad)
popa
xchg
fisub
int3
outs
bts
mov
or
repnz
in
das
rcl
xchg
hlt
lahf
mov
lea
adc
popa
stos
fild
cmp
loope
inc
mov
push
adc
leave
lea
dec
inc
fwait
or
dec
pop
jp
setge
ds
fld
cdq
add
xor
and
es
add
or
cmps
mov
daa
xchg
mul
sub
jmp
(bad)
and
stos
push
dec
stos
jp
push
add
in
pusha
scas
pop
outs
addr16
mov
cmp
and
jb
mov
sbb
sti
mov
cmp
mov
xchg
inc
jl
sbb
dec
push
mov
retf
shr
inc
lahf
in
ds
cmps
(bad)
movs
xchg
xchg
shr
mov
or
xchg
add
add
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
rcr
jmp
loope
jo
arpl
repnz
icebp
shl
repz
imul
sar
cmp
jae
js
push
in
push
arpl
mov
hlt
sub
pop
cwde
sub
pop
push
add
xchg
enter
mov
stos
push
clc
gs
add
mov
push
js
arpl
push
jmp
xor
ins
jb
jns
inc
(bad)
cmp
push
cmp
repnz
mov
cmp
sbb
movs
or
jne
xor
(bad)
data16
lods
dec
pop
aad
cmp
sbb
pusha
outs
fstp
mov
cmp
xchg
aam
pop
mov
mov
push
jo
shr
arpl
push
sahf
sbb
(bad)
js
add
inc
loope
iret
cmp
cli
dec
jl
or
sbb
jl
sbb
inc
gs
ins
rol
loop
cmc
sbb
adc
daa
imul
test
and
pop
fwait
mov
push
push
jmp
loopne
sahf
sti
and
or
in
cmp
push
stos
push
mov
push
fiadd
cmp
lods
inc
lock
push
cmps
loop
rol
movs
pop
scas
jge
scas
fimul
mov
(bad)
enter
std
ins
mov
call
adc
xor
and
push
push
ja
sbb
inc
pop
mov
mov
repz
mov
jle
mov
and
sbb
scas
pop
jmp
sbb
mov
enter
mov
pop
adc
dec
mov
(bad)
lahf
inc
not
stos
pop
sub
fistp
sbb
into
cmp
std
stos
fs
mov
or
and
jle
dec
(bad)
push
inc
std
push
and
stos
and
call
add
fdiv
jb
xor
dec
push
mov
push
lahf
ins
mov
mov
call
gs
jo
fcom
cmc
adc
inc
inc
push
mov
xchg
cmp
sub
or
pop
pop
sub
xchg
adc
sbb
cmp
fwait
mov
xchg
fiadd
fs
hlt
retf
and
stc
pop
mov
jmp
cmp
cmps
sbb
aam
in
in
inc
inc
mov
sti
xor
inc
push
push
in
leave
fs
xlat
sub
push
xor
je
mov
mov
arpl
dec
ret
(bad)
test
ins
pop
jnp
stc
pop
push
and
inc
sub
aas
out
jle
sbb
mov
inc
xchg
push
sub
arpl
inc
adc
xor
jns
mov
sub
imul
push
xchg
and
jmp
shl
jge
mov
jbe
pop
sbb
add
or
loope
addr16
or
jecxz
jo
popa
mov
shl
mov
push
loope
lock
adc
pop
js
clc
fisubr
push
inc
mov
mov
loope
jno
cmp
cmp
popf
addr16
push
and
or
adc
dec
jae
cmp
jmp
sbb
aaa
or
sub
cmp
ret
js
dec
mov
stc
(bad)
movs
xor
mov
cmp
jno
jmp
stos
lock
gs
rcl
jg
push
mov
adc
or
stos
movs
sub
clc
cld
cmc
ret
cld
jecxz
jns
call
iret
and
and
cmp
in
push
sbb
mov
sub
jmp
mov
add
mov
xchg
pop
jns
sub
dec
jmp
icebp
mov
repz
icebp
jmp
lock
fisub
cmps
mov
xchg
and
inc
sbb
test
inc
stos
sub
pop
or
cmp
pop
leave
add
gs
and
push
sti
vmread
or
xchg
outs
cmp
xor
mov
gs
call
add
add
aam
dec
cdq
or
scas
or
lods
test
sbb
sar
(bad)
jmp
xchg
das
sbb
pop
loop
adc
sbb
jmp
pop
mov
xor
loop
xchg
jb
sub
jnp
cmc
aaa
sub
jge
retf
pop
push
xchg
test
ror
ret
rcr
(bad)
pop
and
dec
sub
cmps
mov
mov
rcr
and
push
cmp
das
dec
cmp
xor
cmp
les
sahf
sub
add
mov
inc
push
add
(bad)
ficomp
add
out
mov
sub
out
stos
pop
xlat
xchg
cmp
call
add
aas
mov
pop
leave
in
add
int3
adc
jbe
int
and
aaa
cs
mov
popa
sbb
shl
jno
popa
or
popa
mov
shl
jno
arpl
jo
jns
js
jns
rcr
jo
jecxz
popa
or
mov
push
cmp
push
push
xchg
shl
or
or
inc
(bad)
sub
fcmovne
pop
inc
mov
scas
dec
xchg
or
jmp
movs
mov
and
stc
or
call
adc
xor
and
enter
pushf
xor
pop
or
clc
pop
sbb
mov
out
mov
(bad)
cdq
jl
out
jnp
cmp
jg
inc
fidiv
cmps
cmp
adc
add
inc
pop
clc
cdq
and
xchg
inc
outs
mov
pop
mov
or
nop
lods
in
mov
retf
fnstcw
xchg
aad
sub
jl
unpcklps
mov
shr
mov
push
adc
arpl
lahf
outs
mov
daa
xchg
cmc
or
mov
cmp
cmp
shl
mov
clc
retf
xchg
xlat
shr
mov
xchg
int
loopne
(bad)
pop
mov
push
dec
dec
fild
mov
xlat
cli
jmp
inc
fs
lahf
dec
fwait
mov
std
leave
jle
push
aad
fiadd
aas
inc
fistp
push
aas
xor
imul
in
sbb
das
xor
pop
cli
push
push
dec
imul
jo
or
loope
icebp
shl
jo
call
sbb
leave
sub
enter
add
jns
mov
leave
or
xor
sub
ret
shl
enter
icebp
push
jle
icebp
push
scas
xor
mov
(bad)
icebp
ds
jge
jmp
(bad)
and
sub
pop
(bad)
adc
xchg
ss
aad
ins
xrelease
ror
lods
call
bound
inc
shl
xchg
cwde
mov
mov
pop
bswap
movs
arpl
dec
fistp
(bad)
xor
sbb
mov
daa
test
rcr
inc
inc
ret
and
or
imul
mov
push
lock
in
push
sbb
rcr
bnd
syscall
repz
inc
jno
or
cmp
xchg
int3
dec
pop
cmp
loope
fcomp
lahf
cmps
adc
or
or
in
xchg
mov
adc
movs
mov
push
xor
into
out
cmp
adc
xlat
xchg
sub
ret
xchg
mov
out
cld
adc
jmp
sar
les
out
ds
pop
rcr
adc
fild
lock
add
push
jnp
push
cmp
mov
mov
xchg
pop
pop
loope
mov
add
lods
ja
std
ficom
cmc
outs
in
mov
cs
loopne
mov
jmp
stos
nop
push
mov
hlt
inc
les
dec
retf
xchg
jmp
xchg
inc
mov
mov
xlat
mov
inc
rol
ins
imul
xor
iret
into
pop
sbb
dec
dec
fcom
pop
inc
mov
(bad)
push
adc
pop
pop
sbb
repz
ins
call
adc
pop
out
test
add
repz
cmp
cs
xchg
test
lahf
pop
or
stc
jge
mov
aaa
(bad)
xchg
mov
fstp
in
ss
mov
sub
shl
fld
pusha
in
push
xchg
xchg
loope
pushf
xchg
test
pop
fnstcw
icebp
ins
mov
xchg
adc
dec
retf
dec
in
rcl
dec
retf
jae
loope
sahf
out
jno
sub
xlat
cli
xchg
retf
sub
cmp
(bad)
mov
cmps
out
lea
retf
jnp
daa
int
pop
shl
inc
and
sub
movs
xchg
std
cmp
sbb
addr16
daa
xor
outs
xchg
ja
sub
sub
test
jle
fisttp
(bad)
fild
push
sbb
xor
shl
iret
add
pop
cmps
mov
daa
(bad)
(bad)
ret
pop
push
cmp
mov
dec
adc
imul
stos
div
(bad)
setne
sub
push
and
jbe
push
inc
push
sub
xchg
dec
lock
mov
in
test
jmp
add
sub
mov
inc
dec
test
dec
adc
sub
sub
mov
fstp
mov
bound
sub
push
jecxz
dec
adc
ds
dec
dec
jno
movs
push
xlat
lea
sub
xor
lods
addr16
lods
aaa
and
xchg
ins
cmps
rcl
mov
cwde
out
int3
mov
adc
movs
test
jge
bound
fidiv
pop
or
xor
lea
mov
inc
inc
mov
xchg
rcr
xor
mov
int
ret
outs
pop
jp
test
stc
ficom
xchg
fild
pusha
add
xlat
jmp
mov
cmps
(bad)
stc
inc
inc
pop
aad
inc
aas
dec
fstp
sub
mov
aam
jae
push
sub
addr16
cmp
dec
mov
mov
sub
push
repz
xchg
mov
jl
mov
lock
sbb
inc
ds
ret
jnp
cli
cwde
sti
jno
mov
(bad)
js
test
push
mov
(bad)
aaa
mov
fsubr
inc
call
xchg
push
retf
pop
sbb
(bad)
lock
aas
xchg
xchg
ret
(bad)
test
mov
adc
add
outs
dec
in
sbb
jl
push
mov
pop
dec
jl
cwde
push
and
fldln2
and
jge
push
xor
mov
icebp
xor
mov
and
cdq
mov
inc
jp
mov
daa
push
(bad)
inc
cmp
call
mov
ins
xlat
xchg
inc
addr16
or
dec
or
(bad)
in
adc
retf
leave
ds
repnz
les
pop
jbe
aaa
cmp
xchg
pop
adc
rcr
or
outs
jp
lods
retf
pop
push
(bad)
pop
jo
sbb
ds
push
pop
movs
fist
jle
sbb
sub
ds
js
cmp
fscale
movs
ficomp
ss
aam
test
ss
mov
inc
fcomp
or
iret
xor
lds
data16
mov
jns
popa
jbe
adc
sbb
sbb
mov
bts
frstor
cmp
stos
mov
sbb
adc
or
(bad)
clc
sti
out
je
pop
pop
fstp
xlat
mov
shl
and
cdq
ins
fmul
(bad)
xchg
aaa
cs
test
add
std
and
sbb
sub
push
xor
add
out
lods
outs
mov
enter
inc
cmp
loopne
xchg
in
sub
dec
dec
cmps
mov
jle
jb
dec
inc
(bad)
and
stc
jno
daa
rcl
mov
mov
cmp
sbb
fistp
adc
jae
(bad)
lods
ror
jo
jo
adc
nop
imul
mov
sub
outs
cmp
mov
jmp
scas
scas
jne
in
ins
mov
push
js
and
daa
loopne
fistp
xor
sub
loope
into
movs
(bad)
std
push
out
ss
mov
scas
arpl
out
icebp
fs
jmp
and
sbb
dec
enter
rol
aas
mov
std
inc
or
add
dec
cmp
push
or
add
aaa
adc
into
mov
imul
dec
loope
inc
xor
dec
outs
push
addr16
loope
and
add
push
or
outs
das
call
das
pop
pop
mov
xchg
mov
jl
cmp
adc
xor
jmp
ds
gs
out
test
lods
pop
xchg
lock
jmp
scas
mov
add
mov
movs
scas
sbb
call
jge
xor
inc
in
cld
xchg
test
fisttp
xor
(bad)
mov
bound
ret
inc
ds
cmp
outs
cmp
fild
popf
mov
push
lock
push
xor
(bad)
in
cmp
test
inc
(bad)
fwait
out
jge
adc
mov
jg
sbb
cmp
sub
ss
add
daa
or
sub
out
scas
cmp
adc
mov
mov
repnz
movs
inc
sbb
mov
mov
in
call
jmp
jo
in
(bad)
outs
xchg
dec
pop
and
push
xchg
mov
and
inc
mov
leave
push
dec
xchg
data16
fwait
inc
add
dec
cmc
lods
sti
jmp
xchg
cmp
pop
cli
add
imul
js
mov
ret
jge
and
mov
mov
aad
imul
das
pop
sbb
xacquire
jmp
test
mov
inc
xor
mov
out
and
jle
pop
sbb
xor
add
jno
jmp
scas
add
pop
scas
popa
or
pop
pusha
mov
shl
lock
popa
or
loope
icebp
push
stc
sub
push
(bad)
pusha
cdq
jo
add
shl
popa
or
mov
push
or
push
loopne
sbb
mov
sub
scas
adc
or
int
mov
add
and
and
test
sub
sbb
into
add
rcr
out
call
inc
arpl
jmp
mov
jge
(bad)
adc
ret
test
jle
(bad)
inc
cli
inc
push
push
aaa
and
iret
mov
mov
inc
add
pop
mov
cwde
jg
mov
ret
inc
xchg
pop
ds
fs
jg
mov
push
adc
mov
movs
ins
adc
pop
in
lock
xchg
clc
hlt
push
adc
lods
pop
aam
xor
ret
les
inc
sbb
aam
cmp
rol
retf
call
stc
or
cdq
dec
and
and
loope
mov
pop
popa
popa
mov
mov
ret
add
xchg
push
cmc
popa
mov
out
std
in
loopne
ss
inc
sub
sbb
jbe
or
and
push
retf
jl
popa
xchg
xlat
ret
or
rcl
sbb
push
dec
movs
test
fwait
(bad)
into
mov
loope
and
sbb
jbe
ins
sti
test
(bad)
mov
inc
sub
adc
inc
pop
xlat
lds
mov
test
ins
adc
scas
jnp
xchg
(bad)
mov
(bad)
out
push
es
or
sbb
mov
or
fcomp
das
sub
jb
nop
mov
imul
dec
push
es
rcl
cmp
sbb
outs
jl
mov
inc
pop
hlt
adc
cmps
in
or
out
mov
jmp
mov
repnz
cmp
jecxz
or
add
pop
mov
test
cs
dec
cmps
adc
and
(bad)
test
inc
ret
popf
out
xor
mov
fwait
mov
(bad)
imul
add
pusha
in
dec
inc
sbb
fidivr
xchg
add
jle
push
lods
sub
pop
and
(bad)
dec
push
xor
cmp
mov
enter
and
cs
cli
out
cmc
xchg
and
pushf
loopne
xor
mov
sbb
or
inc
and
ins
ds
xlat
push
cs
test
loop
adc
mov
push
scas
in
retf
outs
pop
pop
scas
mov
jno
xor
movs
pop
sub
xor
in
push
sbb
mov
ror
adc
fisubr
fdiv
sbb
push
or
push
pushfw
shr
neg
jne
cdq
outs
mov
pop
xchg
test
out
out
cmp
mov
call
iret
loopne
shl
aaa
pop
mov
xor
fneni(8087
add
push
repz
adc
les
cs
xchg
gs
mov
push
std
fld
sbb
pmulhuw
jecxz
adc
or
cmp
stos
imul
pop
add
ret
mov
push
loope
or
push
push
pop
xchg
imul
dec
loope
adc
xchg
sbb
mov
mov
mov
jmp
out
scas
push
sar
mov
dec
rol
call
sub
push
mov
sbb
and
fdivr
cmp
fisttp
mov
mov
imul
pop
setb
(bad)
xchg
sbb
push
std
sti
or
hlt
dec
(bad)
and
scas
xor
sbb
push
lahf
clc
std
mov
std
mov
in
or
sbb
aad
lock
out
dec
dec
out
ins
(bad)
mov
push
lods
lods
cld
sbb
inc
rcr
clc
sub
fisttp
sub
xchg
lods
fwait
xchg
sub
sub
or
retf
ss
inc
std
xor
xchg
dec
mov
(bad)
call
fld
jmp
push
jg
call
jo
cmp
add
push
pusha
lea
cmps
sti
pop
je
fwait
ja
adc
mov
sbb
outs
enter
in
das
mov
rcl
sbb
mov
lahf
inc
push
fld
(bad)
xchg
pop
(bad)
xchg
cld
push
or
ret
and
push
sub
std
leave
loopne
push
sar
div
mov
jno
out
dec
xchg
jmp
adc
sar
mov
mov
call
jmp
int3
fcomp
mov
outs
cdq
mov
call
std
adc
cmp
adc
add
fidivr
xchg
mov
cld
cmp
pusha
pop
push
xchg
xchg
xchg
or
dec
or
inc
scas
popa
mov
pusha
mov
push
imul
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shr
mov
shl
jmp
jae
clc
shl
rol
enter
rcl
fs
ret
and
fdiv
lock
mov
xchg
jns
mov
ss
add
(bad)
pop
mov
popa
or
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
shl
icebp
rol
or
popa
mov
loopne
lock
jo
popa
mov
shl
icebp
push
stc
sub
shl
loopne
inc
test
xor
mov
jl
stc
lods
inc
or
jne
mov
dec
cwde
iret
pop
addr16
mov
int
add
fldcw
in
lock
cmp
or
pop
pushf
ret
mov
and
xchg
ss
xchg
imul
cmc
cmc
je
imul
xchg
pop
or
mov
aad
or
adc
out
imul
jo
jp
sbb
pusha
and
lds
pop
lods
adc
shl
out
add
push
cmc
les
shl
adc
imul
add
xchg
lock
ds
int3
add
out
ficomp
lea
push
and
sub
scas
mov
bswap
cmp
adc
iret
ins
push
pop
sub
leave
push
dec
or
and
inc
in
push
cmp
sub
pushf
inc
mov
pop
mov
leave
and
pusha
jnp
mov
mov
out
push
cmps
mov
and
wrmsr
cs
not
or
loope
popa
fsub
mov
shl
icebp
push
popa
mov
shl
mov
sar
jns
leave
mov
leave
jo
or
mov
lahf
xor
fadd
jge
xchg
stos
clc
mov
in
lods
mov
idiv
in
mov
xor
inc
xor
mov
or
and
(bad)
pop
pop
test
xor
rcr
(bad)
cmp
sti
xor
mov
jecxz
push
add
js
leave
inc
jae
add
retf
push
cwde
cmp
cli
push
repz
jmp
sbb
outs
jno
jb
push
ja
mov
cmp
je
mov
pushf
stos
sar
inc
neg
mov
les
sub
cld
inc
je
adc
add
mov
in
lea
ss
lock
les
clc
sub
stos
leave
popf
mov
dec
in
cmp
sub
sub
outs
ja
push
add
inc
scas
loope
loop
loope
jno
loope
icebp
shl
repz
xor
stc
test
inc
(bad)
pusha
test
ror
and
mov
push
jle
jno
int
mov
cmps
mov
iret
shr
mov
pop
rep
mov
push
das
push
pusha
out
out
jp
add
adc
xchg
enter
cmps
imul
repz
mov
or
fistp
xor
adc
and
sbb
fs
dec
sub
cmp
cs
or
mov
push
lods
fisttp
dec
cdq
stos
xchg
jp
xor
les
test
cmp
imul
push
and
fwait
push
addr16
mov
push
mov
dec
sub
nop
xchg
xor
test
fwait
movs
cs
aam
mov
xchg
dec
fstp
nop
inc
les
sbb
data16
sub
mov
bound
loop
outs
out
mov
add
imul
retf
movs
mov
xchg
pop
mov
repnz
mov
and
jg
je
shl
xchg
clc
sbb
xchg
mov
popa
mov
and
pop
jecxz
(bad)
add
loopne
rcr
pop
push
pop
pusha
add
and
add
ficom
movs
adc
ret
(bad)
aaa
outs
loop
cmp
dec
popa
das
and
ja
sti
cmp
dec
enter
inc
not
adc
sbb
dec
or
dec
cdq
movs
fimul
dec
and
sbb
cmc
test
jno
ror
push
sub
in
jmp
xchg
pop
sahf
push
xchg
push
cli
xchg
push
retf
outs
aas
push
arpl
mov
cmp
sbb
ins
aas
lock
or
lock
inc
sti
fcom
jno
or
retf
loop
mov
in
in
pushf
pop
sub
lods
push
js
or
lock
mov
rol
test
mov
ret
xchg
mov
mov
and
imul
push
jg
sub
push
out
stos
add
mov
scas
sti
fisttp
ret
mov
and
xchg
sbb
ret
inc
sub
sbb
jns
fwait
cmp
push
xor
pushf
push
mov
push
xchg
mov
sbb
sbb
je
pop
mov
pusha
retf
(bad)
fld
add
mov
stos
out
pop
fwait
into
mov
(bad)
mov
pop
mov
fnstcw
push
push
adc
inc
and
pop
xor
and
call
and
dec
and
shl
mov
(bad)
jns
adc
(bad)
out
pop
mov
test
pusha
mov
mov
mov
jae
xchg
aaa
scas
arpl
xchg
and
push
in
scas
in
repz
cmc
shr
or
iret
fmul
aam
in
inc
xlat
ret
xor
adc
fs
dec
repnz
lds
pop
pop
mov
inc
add
jg
das
dec
movs
stos
xchg
aaa
cwde
xchg
rol
in
or
fnstenv
pop
out
mov
dec
js
pusha
pop
bound
mov
sbb
inc
ror
cwde
pop
rol
imul
cmp
div
cmp
or
mov
xchg
sub
in
mov
sbb
imul
call
and
loop
loop
jns
xchg
fstp
aad
sub
cmp
inc
push
sub
ins
or
cmp
(bad)
sbb
stc
or
xor
sub
sbb
cmc
push
popa
or
mov
jl
mov
imul
push
ret
push
(bad)
jge
lahf
sub
pop
ja
mov
jns
mov
sbb
mov
lahf
and
jnp
sti
and
cld
lds
adc
xchg
jns
cmps
push
mov
mov
enter
add
and
not
outs
test
int
adc
popa
xchg
icebp
sbb
test
inc
cwde
mov
daa
mov
mov
mov
push
pop
xor
push
sub
data16
icebp
ins
sub
inc
fistp
rcr
in
pop
jo
arpl
adc
sbb
sbb
dec
xchg
push
outs
aad
mov
loop
fcom
or
adc
iret
pop
and
fwait
adc
pushf
aad
or
add
ins
repnz
test
dec
test
aam
in
jl
dec
push
jne
stos
je
sub
mov
sub
or
adc
sub
into
add
push
pushf
push
mov
(bad)
fmul
std
das
push
sti
push
sub
test
sub
fcom
pop
cdq
jg
outs
or
push
sub
or
jo
shr
xor
xchg
pop
xchg
add
aam
push
pop
(bad)
or
pop
jmp
jo
sbb
mov
js
test
sub
adc
repz
stc
fist
test
imul
arpl
repnz
inc
rol
bound
add
or
pop
inc
mov
mov
test
push
pop
in
in
mov
mov
ror
psrlw
push
or
addr16
add
push
cld
mov
xchg
fidiv
ja
cdq
imul
sbb
in
leave
pop
push
inc
cdq
ja
mov
aad
fmul
or
fldenv
mov
pop
retf
push
jge
shl
test
ja
enter
dec
(bad)
aaa
adc
aam
(bad)
ins
and
pop
mov
mov
push
fild
fucom
hlt
in
lea
mov
push
and
rol
bound
mov
mov
add
xchg
xchg
repz
mov
or
fdiv
mov
fs
push
js
cmp
stos
icebp
fsub
or
repz
sub
shl
icebp
hlt
loope
mov
push
cwde
dec
loop
cmp
in
scas
popa
jae
mov
pusha
or
push
pusha
mov
loopne
jo
pusha
mov
jecxz
repz
arpl
jb
addr16
aad
or
not
imul
je
push
push
jnp
ins
add
push
gs
pop
loope
jno
arpl
jae
out
cmc
pop
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
idiv
fisubr
nop
push
loope
jno
imul
jo
push
push
push
loope
icebp
fisub
icebp
shl
icebp
shl
icebp
shl
icebp
shl
mov
popa
mov
shl
icebp
shl
icebp
rcr
in
push
loopne
icebp
push
jmp
mov
rcr
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
loope
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
popa
mov
push
dec
jno
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
inc
out
pushf
shl
icebp
shl
lock
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
jno
lea
das
adc
stc
cmc
loope
rcl
or
shl
not
shr
test
dec
(bad)
xor
loop
sbb
jmp
push
mov
loopne
lock
jo
jecxz
jo
arpl
jae
gs
repnz
(bad)
hlt
(bad)
in
je
jmp
lea
push
hlt
fsubr
add
out
jnp
push
cli
fsubr
cmp
or
jnp
pusha
or
jecxz
jae
jecxz
jne
in
jnp
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
ficomp
jmp
jno
loope
icebp
push
popa
or
loopne
jns
add
jno
popa
mov
push
popa
mov
shl
icebp
shl
icebp
shl
div
shr
mov
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
pusha
xor
popa
mov
ds
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
loope
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
icebp
push
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
gs
outs
loopne
icebp
push
loope
icebp
shl
icebp
rol
or
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
jmp
fs
cmp
add
jae
mov
popa
lods
icebp
hlt
push
div
push
inc
mov
pop
fstp
inc
loopne
mov
retf
in
ja
test
push
loopne
lock
mov
push
jecxz
jo
arpl
push
arpl
jae
loop
repz
addr16
repnz
(bad)
not
pcmpeqb
(bad)
clc
pop
in
stc
push
jmp
add
pop
out
sti
push
imul
loope
push
mov
jecxz
repz
add
add
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fiadd
mov
loope
stc
aam
mov
loopne
stc
shr
or
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
imul
mov
popa
mov
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
arpl
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
push
outs
jmp
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
loopne
jb
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
(bad)
cwde
jno
or
dec
scas
popa
mov
pusha
mov
push
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
jno
add
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
lea
scas
imul
jno
inc
mov
rcr
mov
fdivr
js
push
cmp
push
mov
imul
lds
xlat
js
mov
pusha
mov
push
loopne
jo
loopne
lock
in
jae
jecxz
repz
je
fs
(bad)
in
ja
add
cmp
xor
cmp
pop
push
ja
ins
cmp
fcmovb
or
in
jae
jmp
jae
imul
(bad)
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
add
push
loope
jno
jmp
ja
pop
imul
shl
icebp
shl
icebp
shl
icebp
rol
mov
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
popa
or
fsubr
adc
popa
mov
shl
icebp
shl
icebp
ror
jno
popa
mov
loopne
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
dec
jno
add
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
push
outs
jmp
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
icebp
aaa
jno
popa
push
mov
popa
mov
scas
div
pop
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
popa
mov
push
jle
jno
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
sahf
in
outs
push
js
cmp
stos
icebp
fsub
or
repz
and
icebp
std
loope
mov
push
cwde
dec
loop
cmp
in
scas
popa
jae
mov
pusha
or
push
pusha
mov
loopne
jo
pusha
mov
jecxz
repz
arpl
jb
addr16
aad
or
not
imul
je
push
push
jnp
ins
add
push
gs
pop
loope
jno
arpl
jae
out
cmc
pop
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
idiv
fisubr
nop
push
loope
icebp
fldcw
jo
loope
jo
push
push
push
popa
mov
fsubp
mov
push
popa
or
shl
icebp
shl
mov
shl
jae
bound
mov
or
popa
mov
shl
icebp
shl
icebp
shl
div
push
out
pushf
shl
icebp
shl
lock
icebp
sbb
into
dec
push
test
push
inc
mov
xor
pop
mov
cmp
push
jmp
mov
mov
addr16
and
and
aam
mov
repz
loopne
icebp
push
loope
icebp
push
popa
mov
shl
icebp
shl
mov
loope
jb
jmp
dec
loope
icebp
push
arpl
test
push
mov
mov
adc
jne
cmp
inc
sbb
xor
pop
jle
call
add
ror
test
push
mov
cmps
cmc
mov
imul
sar
test
loopne
clc
sub
and
or
dec
add
and
lea
xor
xchg
shr
ds
fwait
xchg
xchg
ins
sbb
stos
imul
mov
cli
pop
adc
test
push
mov
dec
add
ficomp
stc
dec
xchg
add
mov
push
retf
or
cwde
test
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
pop
scas
loopne
jne
loope
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
js
mov
push
dec
jno
add
inc
scas
loope
call
push
loope
repz
popa
mov
shl
icebp
push
imul
repz
dec
and
shr
xchg
jb
fstp
jns
test
fcomp
in
or
mov
push
jle
icebp
push
in
fidivr
cwde
xor
cld
scas
lock
adc
call
xchg
xchg
hlt
sti
retf
inc
sub
xlat
adc
and
mov
dec
ja
es
or
into
pop
das
or
in
arpl
(bad)
jp
xchg
ret
jge
daa
xchg
jmp
fnstenv
fist
xchg
repz
das
(bad)
jecxz
and
(bad)
or
pop
dec
jb
xchg
popf
imul
mov
imul
inc
arpl
inc
mov
jmp
fs
fdivr
and
or
fbstp
cmp
add
cli
or
lods
movs
gs
ja
cmp
push
cmp
cwde
lds
div
mov
std
cmp
mov
sbb
xor
(bad)
call
push
ret
pop
sub
bound
jae
push
(bad)
xchg
mov
fs
bound
push
ret
cmps
pushf
and
cmp
repz
aaa
dec
lods
fdivp
fdiv
movs
popa
push
ficom
sub
sbb
out
ds
retf
loop
rcr
inc
shl
sti
outs
push
mov
inc
mov
js
push
and
inc
fwait
sub
add
enter
and
fist
jge
dec
mov
xchg
cs
inc
xor
jmp
movs
pop
fbld
adc
cdq
(bad)
jo
test
or
and
xor
loopne
mov
aas
sub
imul
fdivr
and
out
fchs
(bad)
(bad)
call
inc
daa
xchg
into
fidivr
or
or
dec
xor
push
push
bound
xor
mov
cli
cld
mov
nop
pop
cmp
pop
pop
addr16
mov
mov
mov
test
out
pop
outs
mov
push
jp
cwde
dec
or
cmp
lock
inc
xchg
imul
aaa
xchg
jp
jne
gs
adc
retf
inc
mov
mov
test
cmc
test
sbb
or
mov
jno
or
je
ror
nop
dec
out
cmp
jbe
sub
popa
sbb
shl
lock
jo
popa
mov
shr
cwde
jno
shl
push
popa
or
mov
xor
shl
inc
sar
adc
test
lea
inc
or
pop
lds
daa
sbb
xchg
jb
shl
cmps
retf
xor
xchg
loope
jmp
sbb
outs
fdivr
mov
or
jo
cmp
popf
push
mov
cdq
inc
repz
mov
cli
mov
fld
sbb
inc
out
push
mov
inc
rcr
sahf
cmp
push
or
mov
pushf
xchg
adc
push
mov
adc
shr
leave
cdq
adc
jae
pusha
clc
pop
lea
lock
xchg
push
cwde
pop
and
or
rcl
popf
cmps
jecxz
fidiv
or
jge
test
int
mov
push
retf
fist
popa
cli
add
jle
pop
mov
mov
sbb
push
ins
add
fdivr
inc
jmp
jecxz
sahf
retf
mov
in
mov
out
outs
test
sbb
cdq
jne
shl
fidiv
loope
sub
push
push
or
mov
dec
mov
loop
aam
xor
loopne
adc
dec
(bad)
adc
inc
add
hlt
fsubr
aad
cmp
repz
xchg
xchg
ja
popf
imul
sbb
cmps
jge
mov
aaa
or
shl
mov
and
loopne
icebp
push
loope
icebp
shl
icebp
shl
stc
lock
cwde
loope
push
enter
lods
rol
push
jmp
popa
or
popa
mov
shl
icebp
shl
icebp
rcr
gs
loope
icebp
push
jle
jno
call
mov
popa
mov
shl
icebp
shl
icebp
shl
cwde
icebp
push
push
in
js
mov
push
jle
jno
rcr
mov
popa
mov
push
popa
mov
popa
mov
shr
jno
sar
dec
mov
call
or
jmp
and
faddp
pop
pushf
lock
xor
xor
or
mov
lods
xor
into
loopne
mov
sbb
mov
mov
minps
retf
or
setl
push
or
or
xlat
mov
add
push
mov
nop
(bad)
les
loopne
mov
jb
pop
call
and
imul
data16
sub
xor
repz
sbb
mov
in
nop
adc
sub
mov
dec
bswap
nop
and
dec
pop
arpl
mov
or
ja
cmc
cmp
mov
sti
pop
nop
jnp
aaa
shr
sbb
ror
mov
sub
mov
icebp
sar
int3
(bad)
call
push
jecxz
retf
fldcw
int3
lock
inc
test
add
xor
call
jecxz
mov
int3
sar
movs
sub
pushf
push
jnp
inc
fstp
add
cdq
inc
(bad)
sbb
push
movs
popa
cmp
inc
shr
jge
mov
jmp
pop
ins
call
leave
mov
test
clc
nop
fwait
mov
push
(bad)
loope
jno
mov
xor
out
xor
xchg
push
sub
push
out
xchg
je
and
div
pop
push
test
fscale
or
ds
xor
lea
dec
push
call
idiv
das
adc
stc
cmc
loope
rcl
or
shl
not
rol
pushf
push
loopne
lock
mov
push
jecxz
jo
arpl
push
arpl
jae
loop
repz
addr16
repnz
(bad)
not
pcmpeqb
(bad)
clc
pop
in
stc
push
jmp
add
pop
out
sti
push
imul
loope
push
mov
jecxz
repz
add
add
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fiadd
mov
loope
stc
aam
mov
inc
loopne
stc
shr
or
popa
push
mov
popa
mov
popa
mov
shl
icebp
shl
mov
push
loopne
cmc
rcr
push
push
loope
jno
loope
jno
popa
mov
shl
icebp
shl
icebp
shl
or
ror
jo
popa
mov
pusha
xor
popa
mov
push
loopne
clc
movs
xchg
daa
leave
adc
push
cmp
dec
cld
cli
adc
scas
mov
cmp
imul
into
(bad)
div
(bad)
jge
in
and
adc
pop
sub
lods
js
dec
pop
and
lock
nop
mov
div
jo
adc
loope
jae
popa
mov
shl
icebp
shl
jae
loope
repnz
nop
clc
pop
push
gs
loope
icebp
push
arpl
ja
jae
fimul
mov
cmp
icebp
hlt
movs
mov
inc
sbb
into
or
lds
add
add
adc
repnz
xor
pusha
mov
in
movs
pop
out
push
adc
lea
mov
cli
js
iret
fnstcw
rol
dec
inc
ds
test
imul
cmp
pop
(bad)
aad
xor
in
mov
xchg
fmul
loope
mov
arpl
jo
popa
mov
shl
icebp
shl
mov
loope
jae
icebp
nop
clc
inc
stc
mov
sub
popa
jl
dec
rol
cld
data16
pusha
push
xor
test
repz
stos
push
cmp
aad
adc
inc
and
lock
fadd
test
sub
dec
jns
test
cli
xor
jno
loope
popa
fsub
or
shl
icebp
shl
icebp
shl
mov
push
popa
mov
push
nop
jns
popa
or
mov
sbb
ror
cmp
mov
mov
mov
jb
sub
test
sbb
jge
cmp
add
mov
inc
cmp
loop
aas
enter
push
push
movs
pop
lahf
ja
inc
add
in
fsub
lock
push
popa
mov
shl
icebp
push
jecxz
lock
cwde
js
fcom
jno
sbb
pusha
leave
dec
pusha
jno
adc
dec
xor
dec
cdq
popa
or
mov
sub
push
or
scas
jle
fnstsw
inc
mov
xchg
retf
ror
adc
cmp
sbb
sbb
lods
test
mov
mov
shl
add
in
repnz
stos
stos
enter
cmp
or
adc
sub
mov
and
add
adc
adc
cmp
jl
rol
je
in
and
dec
adc
loopne
mov
add
ins
mov
push
mov
pop
inc
sbb
fstp
lock
cmps
loopne
lea
mov
fs
inc
xchg
adc
fs
add
hlt
pop
inc
arpl
mov
stos
mov
pop
inc
aaa
call
add
pushf
xor
mov
or
mov
movs
cmp
lock
clc
pop
(bad)
inc
jns
test
test
(bad)
cmp
fwait
stos
and
push
test
jmp
dec
pushf
(bad)
in
lods
retf
dec
cwde
test
and
add
sub
mov
pop
sbb
fisubr
mov
daa
fidiv
repz
repz
repz
pop
in
lock
pop
sub
or
popa
mov
pop
popa
or
push
popa
mov
popa
mov
shl
icebp
push
rcl
jns
(bad)
js
fmul
scas
popa
mov
icebp
arpl
jmp
pusha
and
sbb
add
rol
out
adc
xchg
or
aam
repnz
(bad)
ins
push
sar
pop
aaa
add
mov
jnp
and
mov
mov
in
aam
xor
jne
and
push
cmp
jmp
stos
mov
inc
mov
inc
and
scas
sub
lods
ret
mov
jo
iret
pushf
pop
faddp
jne
jmp
push
add
push
and
pop
inc
iret
ss
test
jnp
fiadd
xchg
dec
xchg
pop
enter
pop
lds
and
pop
sub
int
jl
push
cmps
mov
or
out
rcl
push
or
adc
mov
mov
popa
or
popa
mov
das
fdiv
fsub
test
repz
loope
mov
loopne
jo
popa
or
shl
icebp
shr
jno
stc
sub
icebp
cmp
fdivr
or
scas
loopne
jne
jmp
popf
lock
lahf
bound
xor
(bad)
int3
pop
mov
fisub
scas
sbb
adc
adc
movs
mov
int3
xchg
dec
bound
popf
lea
inc
jne
jmp
adc
or
sti
inc
call
(bad)
out
jl
fbstp
inc
loope
mov
pusha
mov
popa
or
shl
icebp
shr
jno
jmp
enter
shr
cdq
ja
sub
mov
dec
test
mov
aad
nop
add
enter
es
int
ds
add
ins
mov
xlat
aas
dec
lds
sbb
xor
lods
in
jns
sti
data16
dec
push
(bad)
pop
cmps
cmp
in
js
mov
pop
and
enter
mov
push
jmp
loopne
icebp
push
loope
jno
popa
mov
shl
mov
shl
adc
push
leave
xor
pop
push
gs
adc
mov
push
jle
jno
push
sti
popa
push
jge
ja
dec
clc
imul
xchg
vpor
push
xchg
jo
xchg
cmp
int
push
loop
push
pop
jmp
or
xor
dec
inc
jmp
push
ins
out
enter
repz
into
gs
or
jns
arpl
cmp
out
dec
cld
jae
push
xchg
xor
pop
(bad)
push
ss
movs
sar
xchg
mov
test
call
movs
fs
fwait
sub
in
or
push
fld
imul
aad
mov
jecxz
push
mov
popa
push
dec
pop
sbb
mov
std
shl
xchg
int3
movs
xchg
or
dec
add
sbb
cwde
in
movs
sar
(bad)
pop
jbe
pop
fnsave
or
test
xor
call
and
fs
cmp
add
jae
mov
popa
lods
icebp
hlt
push
div
push
inc
mov
pop
fstp
inc
loopne
mov
retf
in
ja
test
push
loopne
lock
mov
push
jecxz
jo
arpl
push
arpl
jae
loop
repz
addr16
repnz
(bad)
not
pcmpeqb
(bad)
clc
pop
in
stc
push
jmp
add
pop
out
sti
push
imul
loope
push
mov
jecxz
repz
add
add
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fiadd
mov
loope
stc
aam
mov
loopne
stc
shr
or
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
imul
mov
popa
mov
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
arpl
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
push
outs
jmp
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
loopne
jb
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
(bad)
cwde
jno
or
dec
scas
popa
mov
pusha
mov
push
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
jno
add
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
lea
scas
imul
jno
inc
mov
rcr
mov
fdivr
js
push
cmp
push
mov
imul
lds
xlat
js
mov
pusha
mov
push
loopne
jo
loopne
lock
in
jae
jecxz
repz
je
fs
(bad)
in
ja
add
cmp
xor
cmp
pop
push
ja
ins
cmp
fcmovb
or
in
jae
jmp
jae
imul
(bad)
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
add
push
loope
jno
jmp
ja
pop
imul
shl
icebp
shl
icebp
shl
icebp
rol
mov
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
popa
or
fsubr
adc
popa
mov
shl
icebp
shl
icebp
ror
jno
popa
mov
loopne
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
dec
jno
add
dec
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
push
outs
jmp
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
imul
shl
icebp
shl
icebp
shl
icebp
ror
jno
popa
mov
icebp
aaa
jno
popa
push
mov
popa
mov
scas
div
pop
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
popa
mov
push
jle
jno
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
sahf
in
outs
push
js
cmp
stos
icebp
fsub
or
repz
sub
shl
icebp
hlt
loope
mov
push
cwde
dec
loop
cmp
in
scas
popa
jae
mov
pusha
or
push
pusha
mov
loopne
jo
pusha
mov
jecxz
repz
arpl
jb
addr16
aad
or
not
imul
je
push
push
jnp
ins
add
push
gs
pop
loope
jno
arpl
jae
out
cmc
pop
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
idiv
fisubr
nop
push
loope
jno
imul
jo
push
push
push
loope
icebp
fisub
icebp
shl
icebp
shl
icebp
shl
icebp
shl
mov
popa
mov
shl
icebp
shl
icebp
rcr
in
push
loopne
icebp
push
jmp
mov
rcr
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
push
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
loope
jno
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
popa
mov
push
dec
jno
add
dec
scas
popa
mov
pop
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
inc
out
pushf
shl
icebp
shl
lock
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
fidiv
pop
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
jno
loopne
jne
jmp
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loope
icebp
push
jle
jno
lea
das
adc
stc
cmc
loope
rcl
or
push
loope
mov
call
mov
(bad)
xor
loop
sbb
jmp
push
mov
loopne
lock
jo
jecxz
jo
arpl
jae
gs
repnz
(bad)
hlt
(bad)
in
je
jmp
lea
push
hlt
fsubr
add
out
jnp
push
cli
fsubr
cmp
or
jnp
pusha
or
jecxz
jae
jecxz
jne
in
jnp
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
ficomp
jmp
jno
mov
cmps
shl
jno
loopne
jns
add
jno
popa
mov
shl
or
popa
or
shl
icebp
shl
mov
shl
repz
div
in
mov
push
popa
or
shl
icebp
shl
icebp
shl
jno
loop
jae
out
pushf
shl
icebp
shl
lock
jno
popa
xchg
shl
cs
sbb
movs
push
inc
add
jnp
popaw
or
mov
icebp
xor
or
xchg
add
sbb
in
add
mov
mov
(bad)
popa
mov
push
cmp
es
movs
ins
cmp
adc
mov
test
cli
mov
adc
dec
gs
cmp
popa
mov
shr
adc
fild
xchg
mov
data16
mov
not
outs
dec
arpl
dec
xchg
and
xchg
cmps
iret
je
mov
sub
push
popa
popf
icebp
rcl
test
mov
pop
sub
mov
enter
inc
mov
repnz
rcl
hlt
ins
jecxz
les
dec
and
clc
icebp
xchg
pop
jmp
repnz
cli
lods
sahf
es
push
fstp
xchg
xchg
or
inc
push
(bad)
les
jle
or
mov
xchg
repz
mov
movs
jmp
cld
das
mov
xchg
sub
inc
cmps
xchg
push
arpl
test
lea
aaa
aaa
rol
mov
mov
dec
mov
adc
jmp
sub
es
shl
xor
mov
inc
pushf
in
jbe
(bad)
(bad)
pop
mov
in
jmp
ror
sub
and
inc
jae
inc
dec
imul
push
je
loope
test
mov
sub
movs
aaa
add
inc
xchg
in
mov
jmp
push
hlt
out
aas
mov
mov
lds
int3
sbb
scas
retf
jmp
jl
sbb
jl
cmp
pop
outs
std
stos
imul
call
sbb
inc
mov
push
test
clc
daa
retf
loop
jne
jmp
adc
mov
dec
out
aad
xchg
mov
ret
mov
cmps
adc
jmp
fidivr
in
cld
ret
cmp
push
shl
popfw
inc
in
inc
xchg
mov
sub
addr16
inc
js
retf
adc
out
push
or
pop
cmps
mov
fist
pusha
cs
cli
sub
push
test
(bad)
mov
(bad)
cmp
aad
aad
mov
xor
fisttp
sub
push
outs
rol
shl
test
jnp
ror
rcr
retf
push
mov
les
sahf
iret
push
lods
jo
xchg
xor
dec
or
in
xlat
adc
sbb
inc
(bad)
(bad)
dec
xor
or
mov
into
iret
push
movs
sbb
loope
test
stos
jae
xchg
cmps
sbb
lods
into
ficomp
in
xchg
shl
pop
jmp
xlat
in
mov
in
or
dec
or
mov
push
daa
or
xchg
or
sbb
cwde
sub
rcl
push
push
sbb
js
out
inc
test
cmps
icebp
movs
mov
cmps
jmp
imul
(bad)
pop
pop
mov
ret
lods
push
cli
in
jle
int
xchg
dec
stos
gs
rol
cmp
aad
out
cmp
repnz
xor
xchg
pop
cmp
and
and
mov
lea
cdq
lock
ret
xor
mov
inc
dec
mov
inc
jp
xor
jmp
fistp
dec
jae
sub
push
popa
mov
shl
call
inc
push
add
bound
xor
(bad)
mov
and
and
inc
xchg
retf
daa
mul
icebp
shl
xor
dec
fcomp
xor
je
inc
adc
jae
inc
mov
or
mov
shl
icebp
shl
icebp
push
popa
or
cwde
popa
mov
rcr
jmp
loopne
lock
lock
jno
popa
mov
shl
or
push
loop
repnz
imul
jmp
dec
popa
or
mov
lahf
jg
sar
mov
sbb
cdq
adc
leave
les
into
mov
aad
mov
push
or
and
mov
scas
test
shl
je
ficom
mov
cmp
mov
xor
movs
cmp
jmp
out
xchg
call
(bad)
repz
out
xchg
dec
sbb
jmp
aaa
jb
dec
mov
ror
or
xor
add
mov
mov
bound
or
cli
push
cmp
cmp
mov
cmp
cmp
gs
int3
clc
fnstenv
imul
js
fadd
leave
in
daa
xchg
(bad)
mov
aam
imul
test
stc
fdivr
js
mov
xor
enter
push
xlat
pop
push
jne
dec
mov
xchg
daa
jl
jnp
outs
out
mov
rcr
sbb
ds
jo
mov
push
lods
(bad)
in
mov
data16
test
cmp
xchg
mov
push
jle
pusha
sub
jecxz
je
xchg
std
cli
sub
xchg
sub
jns
and
cmc
cmp
push
add
rol
adc
icebp
pop
(bad)
dec
pop
push
idiv
xor
mov
sbb
cmp
mov
nop
retf
dec
pop
add
in
test
imul
jp
mov
daa
cs
ins
in
push
mov
xlat
xchg
ins
mov
or
(bad)
sbb
ret
loopne
repnz
(bad)
xchg
lahf
mov
movs
hlt
or
jecxz
mov
sbb
rsqrtps
(bad)
into
rcl
repnz
adc
adc
addr16
push
jle
jmp
mov
pop
push
adc
pop
into
push
jg
shl
stc
jne
sar
or
xchg
push
movs
mov
js
stos
cwde
mov
fcom
mov
call
loopne
ins
sub
test
add
test
jno
mov
test
loopne
hlt
fistp
xor
cs
addr16
mov
push
xchg
(bad)
in
push
ins
cmp
cs
or
loop
inc
cmps
daa
outs
pop
cmc
fwait
gs
mov
inc
(bad)
mov
xor
in
mov
dec
xchg
xchg
push
jbe
cs
outs
dec
or
shl
bound
dec
push
add
sbb
gs
ret
sbb
not
cld
mov
or
jge
sub
add
jle
jbe
inc
iret
loop
jp
pop
out
mov
cli
popf
and
ins
rcr
xchg
(bad)
mov
jmp
mov
mov
enter
sahf
dec
dec
(bad)
out
aam
mov
mov
jmp
dec
aaa
or
outs
int
pop
stos
mov
push
xchg
adc
daa
(bad)
dec
and
add
add
adc
test
and
mov
(bad)
rcr
iret
ins
xchg
sar
xchg
xchg
sbb
jmp
xor
jns
aaa
nop
jae
in
ja
jmp
out
jno
nop
icebp
adc
mov
call
jno
fisttp
push
fs
adc
test
outs
aaa
div
fidiv
xlat
mov
enter
push
int
mov
cld
std
call
sbb
cmp
addr16
mov
sahf
and
into
xchg
sbb
call
test
aaa
mov
xchg
mov
pop
stos
imul
push
ds
cli
adc
push
dec
es
(bad)
mov
jmp
fwait
retf
mov
ss
mov
iret
sbb
in
fcomp
rcl
daa
mov
mov
nop
les
xor
jae
in
pop
cmp
and
fist
mov
mov
sbb
dec
mov
shl
ins
dec
pop
pop
gs
mov
into
and
and
rcr
xor
hlt
cmps
xchg
repnz
push
jae
sbb
jno
mov
int3
add
mov
jl
cmps
aad
pop
(bad)
lea
cmps
les
xchg
fs
add
xor
mov
dec
xchg
push
loopne
movs
jp
push
aaa
leave
mov
add
or
and
test
out
and
inc
and
add
jnp
and
add
adc
popf
dec
jmp
inc
mov
in
adc
dec
out
pop
out
aas
cmp
fwait
or
out
inc
mov
xchg
outs
ds
fwait
sbb
inc
movs
mov
rcr
loop
pop
mov
cmp
push
or
xchg
es
add
stos
dec
je
retw
mov
mov
inc
(bad)
dec
dec
cmp
add
mov
cli
dec
aad
adc
repnz
mov
jp
xor
lahf
push
pop
dec
loope
mov
popa
or
push
pusha
or
push
popa
mov
shl
icebp
push
pusha
add
pop
rol
dec
jns
loope
sar
scas
loopne
jne
loope
jno
movs
adc
xchg
sbb
push
lds
pop
mov
mov
ret
bound
mov
jns
pusha
ss
sti
xor
aas
enter
cmp
inc
aam
sbb
xchg
ret
cld
xor
cmp
cmps
enter
fstp
cmp
sbb
jnp
ins
retf
mov
les
xchg
cmovge
ret
jne
jbe
pusha
cwde
daa
stos
stc
and
mov
icebp
jmp
stos
push
mov
push
adc
xchg
jecxz
adc
test
jle
mov
mov
or
(bad)
fcmovu
adc
or
push
out
addr16
dec
pop
dec
push
cmps
test
xchg
int
scas
sbb
shr
mov
mov
int
loope
mov
pop
arpl
sbb
add
pop
imul
cwde
cmp
xor
retf
mov
sub
or
aam
or
cmps
in
xor
lods
inc
jnp
push
outs
ins
nop
arpl
inc
hlt
rcr
pop
sbb
lahf
push
outs
shl
sbb
loopne
pextrw
lods
pop
mov
arpl
dec
jo
inc
pop
and
push
sub
retf
in
out
(bad)
inc
in
test
aas
(bad)
pop
ret
call
leave
xor
sbb
xchg
and
or
inc
fnop
adc
xchg
ror
or
call
xchg
dec
outs
add
loopne
inc
add
sub
int3
(bad)
fwait
inc
paddq
pop
jmp
inc
jg
fsub
cmc
and
ret
movs
in
cmp
aad
(bad)
popa
xlat
ins
jp
jnp
hlt
add
nop
cli
add
xchg
mov
test
mov
lods
bound
aad
(bad)
push
retf
call
jle
mov
rcl
nop
or
dec
out
xor
or
and
repz
daa
push
add
dec
scas
popa
mov
loopne
jo
loop
lock
icebp
shl
icebp
push
imul
jmp
inc
shl
pop
or
push
scas
loopne
jne
loope
jno
out
adc
cmps
test
xchg
movs
in
mov
dec
packsswb
mov
int
lock
data16
jl
adc
xchg
ds
fild
stc
add
mov
fwait
adc
hlt
mov
push
xchg
in
or
aaa
mov
aam
add
cli
pop
jmp
push
and
mov
fwait
push
lahf
ror
xchg
cmp
xchg
out
imul
pop
les
popa
sahf
mov
xor
lock
out
aad
push
inc
jle
cmps
sbb
ror
and
pop
jmp
clc
adc
push
push
nop
neg
mov
dec
mov
leave
xor
inc
pop
in
loopne
test
xchg
pusha
push
pop
test
sub
xor
sbb
gs
push
mov
dec
adc
movs
mov
stos
es
scas
mov
js
(bad)
xchg
sahf
cmp
cs
mov
mov
ret
cmc
inc
mov
xchg
into
inc
jl
ja
rcr
sub
les
dec
retf
call
and
mov
push
(bad)
or
call
sub
inc
mov
inc
xor
fsub
push
(bad)
into
sub
sbb
mov
js
jbe
and
ret
jns
pop
pop
adc
and
mov
add
pop
xor
push
dec
test
sub
inc
repnz
jns
jns
lahf
mov
ja
sbb
jge
mov
mov
xor
popf
outs
iret
inc
outs
pop
lahf
inc
cmp
xchg
fs
(bad)
gs
pop
sahf
cwde
cmps
xor
test
clc
or
xchg
in
or
jmp
fsubr
icebp
xor
mov
lds
cmc
dec
addr16
jecxz
retf
pop
pop
push
ret
inc
sbb
push
jle
push
inc
cmps
cmp
out
call
add
imul
fild
jo
mov
outs
push
into
jle
xor
in
mov
and
dec
pop
and
pop
inc
fwait
imul
mov
pop
sti
cmc
stc
loope
adc
addr16
ins
pop
sub
nop
aam
mov
xchg
inc
inc
dec
(bad)
mov
je
jae
lahf
add
sti
cmp
inc
das
add
lahf
jle
(bad)
pop
mov
pop
pop
jns
sub
bound
outs
mov
xor
ins
mov
mov
pushf
jns
push
cmp
jmp
mov
mov
jl
jl
pop
sar
jmp
inc
push
aaa
xor
push
call
push
cmp
adc
sbb
xchg
or
in
cmps
out
clc
cld
lods
aas
inc
lods
dec
out
ss
push
dec
cmps
mov
in
(bad)
sar
sub
xor
icebp
xchg
ret
push
mov
pop
not
pop
(bad)
mov
lods
dec
and
pop
pusha
cmp
xor
add
icebp
ins
std
shl
bnd
clc
dec
ret
push
rol
retf
scas
dec
jne
add
push
scas
or
movs
xor
and
aad
stos
test
hlt
sub
cld
sti
xchg
and
xchg
into
addr16
icebp
int3
inc
xchg
add
inc
rol
nop
call
(bad)
dec
aam
jne
pop
outs
jp
stc
test
stos
xchg
lods
xor
aad
mov
dec
lea
and
jecxz
sbb
cs
fs
ins
aas
lds
xchg
ds
lea
(bad)
out
ins
(bad)
(bad)
loope
sub
jge
mov
call
xchg
stos
lea
dec
jg
hlt
aam
xchg
int3
inc
jbe
xchg
and
gs
mov
dec
mov
cmp
adc
cmps
and
sub
(bad)
mov
fmul
stc
push
mov
push
xchg
call
retf
in
or
push
push
sbb
xor
sbb
lahf
mov
xor
pop
dec
sbb
mov
push
ret
cmp
push
xor
daa
ss
pop
adc
cmp
loopne
push
mov
jl
popa
mov
and
pop
idiv
add
mov
mov
mov
(bad)
jne
cmps
and
xor
inc
add
or
nop
hlt
mov
out
ss
pop
jecxz
or
and
jecxz
fstp
loope
push
scas
mov
out
mov
mov
mov
(bad)
mov
mov
lods
xchg
pop
mov
mov
mov
jge
xor
ss
sti
add
push
inc
adc
jecxz
lock
in
jae
popa
or
shl
icebp
push
call
adc
push
add
fxch
call
inc
mov
dec
sbb
push
add
jnp
shr
add
mov
jo
lock
popa
or
sbb
out
push
xor
cmp
adc
jmp
stos
mov
(bad)
stc
in
mov
or
enter
mov
(bad)
xchg
iret
and
jbe
test
neg
(bad)
mov
fistp
(bad)
add
push
mov
jmp
mov
jno
mov
pop
mov
adc
inc
jb
xlat
imul
cmc
in
repnz
fist
push
pop
xorps
mov
inc
and
cmc
cmps
sbb
sub
or
pusha
dec
dec
adc
pop
pusha
jmp
adc
dec
adc
test
(bad)
in
pop
sbb
mov
addr16
cld
bound
shl
pop
xor
pop
dec
out
sub
loop
out
iret
add
call
movs
jnp
add
dec
mov
(bad)
inc
add
pushf
arpl
jecxz
jmp
mov
ss
add
cmps
adc
ja
lds
lahf
stos
stos
dec
or
daa
hlt
fidivr
adc
jle
repz
repnz
cmp
push
gs
loop
jle
xchg
test
mov
pop
nop
push
lds
inc
mov
sbb
mov
mov
cs
mov
add
je
aaa
mov
inc
inc
imul
stos
adc
int
xchg
ss
xor
adc
in
enter
mov
sub
data16
push
xor
xor
out
shl
ds
ficomp
push
sub
jae
inc
mov
pop
ror
sbb
mov
iret
js
cdq
test
int
jnp
sti
or
xchg
mov
ds
xlat
ret
fild
nop
test
dec
nop
(bad)
loopne
arpl
push
adc
xor
jns
addr16
ja
cmp
rcl
or
aad
sti
adc
mov
and
inc
call
dec
sub
xchg
bnd
add
mov
mov
icebp
pop
sbb
arpl
add
push
add
xlat
or
test
ret
pop
push
(bad)
out
sbb
xlat
xchg
sbb
enter
enter
and
ror
fwait
jmp
mov
xchg
shl
call
xchg
cmps
push
pop
cmc
neg
adc
pop
ja
call
out
pop
fdiv
fdivr
test
dec
mov
inc
outs
sbb
out
imul
ror
dec
aaa
pop
mov
es
push
push
and
sub
mov
jle
in
call
sub
jns
ja
mov
mov
jo
sbb
call
push
mov
inc
jmp
inc
adc
cmp
sbb
xlat
xor
inc
es
mov
add
and
jae
sti
and
xchg
cmp
gs
ror
xchg
cwde
or
mov
or
gs
hlt
jbe
push
ret
fisubr
enter
pop
or
xor
xchg
ins
je
push
js
leave
inc
sti
mov
mov
test
in
jp
movs
cmc
iret
fiadd
stos
jle
mov
and
sbb
daa
jbe
pop
std
push
mov
movs
ins
adc
inc
in
xor
int
in
dec
cmc
and
cmps
xor
mov
jge
xlat
fadd
sar
aad
imul
std
or
inc
scas
imul
pusha
mov
ret
sbb
rcr
push
jnp
aam
fs
adc
cmp
dec
mov
jb
ins
pop
bound
in
push
and
sbb
and
sbb
mov
mov
shl
jmp
test
rcl
cs
icebp
push
repnz
loop
add
je
jne
mov
aad
sub
js
aam
pusha
cmps
sbb
mov
sbb
cmc
mov
mov
sub
xchg
jmp
mov
fidivr
inc
ret
lods
and
jg
xor
cmp
imul
bound
gs
lahf
in
stc
in
push
xchg
mov
xor
dec
mov
mov
adc
mov
into
sub
sub
cld
pop
lods
inc
cli
sahf
jmp
lahf
ret
add
leave
add
mov
sar
or
loop
xchg
pop
loope
xchg
cmp
mov
jp
fist
adc
jb
sub
repnz
out
or
out
in
dec
sub
adc
retf
pop
cmp
and
movs
sbb
or
ret
cmps
mov
stc
shl
mov
push
pop
xor
retf
cli
jle
test
inc
push
jo
xor
xchg
bound
ror
mov
enter
mov
mov
mov
mov
ins
ja
retf
xor
call
call
xchg
or
xor
mov
add
rcl
sbb
xchg
in
call
sub
or
push
and
jne
ret
pop
push
cmps
xchg
dec
inc
out
xor
out
fnstenv
sub
ror
add
ss
adc
xchg
cmp
scas
(bad)
mov
outs
mov
add
je
pop
pop
arpl
sahf
fstp
sbb
xor
fwait
sub
jl
ror
mov
dec
cdq
aaa
cmpxchg
mov
mov
xchg
cmps
sub
imul
push
dec
daa
mov
cmp
int3
push
pop
cld
xlat
push
mov
mov
mov
and
mov
xor
inc
or
jmp
into
ja
push
and
or
cli
push
and
das
loop
(bad)
push
int3
mov
cs
leave
hlt
push
ja
cli
mov
jns
(bad)
ffree
xchg
fadd
pop
mov
scas
shl
icebp
jbe
xor
push
ret
cmc
sbb
pop
cdq
ss
adc
mov
sbb
mov
call
push
and
xchg
lds
popa
(bad)
mov
cmp
cmc
ret
sbb
imul
gs
inc
outs
lds
cmp
sub
sub
scas
sub
fs
jnp
pop
retf
das
inc
lahf
dec
mov
xor
inc
adc
ss
mov
ret
adc
mov
ds
imul
pop
dec
jp
ret
inc
ins
or
cli
cmp
and
cld
cld
mov
(bad)
push
adc
sub
mov
movs
dec
pop
enter
arpl
sub
stc
push
mov
and
xchg
add
in
ret
mov
out
jecxz
push
imul
mov
push
out
xor
cdq
or
lock
lds
inc
retf
int3
movs
cmp
stc
pop
retf
xchg
and
cdq
xor
jbe
(bad)
mov
div
sahf
cmc
or
jae
cmps
out
clc
int
sbb
cmp
retf
and
inc
inc
call
xor
inc
sbb
pop
outs
loope
iret
or
mov
inc
lahf
mov
mov
push
fcmovnu
adc
imul
cmps
mov
pop
imul
(bad)
dec
sub
mov
mov
fmul
jnp
push
int
gs
lods
mov
pop
mov
jns
inc
add
pop
fwait
fs
mov
sar
nop
jge
jnp
jecxz
xchg
push
out
in
ror
push
loop
out
repnz
repz
fdivr
and
das
icebp
push
xchg
jmp
add
and
mov
cmp
fdiv
sahf
cld
fs
test
and
shl
icebp
sub
push
(bad)
or
xchg
mov
cmc
push
fsub
mov
(bad)
and
xchg
neg
jne
rol
out
leave
inc
mov
pop
out
cmp
xchg
in
(bad)
(bad)
mov
mov
in
or
adc
and
and
adc
mov
dec
xor
int
test
jecxz
mov
fsub
jg
jmp
repnz
fld
(bad)
fnsave
mov
pop
das
dec
mov
sbb
mov
or
cmp
and
add
mov
sbb
dec
xchg
repz
add
das
or
neg
inc
jg
lock
or
lods
repnz
jnp
ja
push
push
mov
mov
cs
dec
test
lods
jne
or
test
stos
mov
out
mov
xor
xor
xlat
rcl
leave
mov
movs
fsubr
dec
adc
retf
xor
jecxz
pop
stc
addr16
fsub
cmp
add
xlat
push
xor
xchg
enter
(bad)
mov
pop
jo
imul
xchg
pop
push
inc
popf
imul
and
jne
call
test
outs
js
jae
cmp
icebp
push
sbb
into
jb
mov
and
push
js
xor
daa
mov
mov
jmp
ds
push
inc
inc
pushf
jge
add
xor
jmp
lods
clc
dec
cmc
cli
dec
xchg
xchg
test
call
xor
mov
jb
sub
daa
and
mov
retf
in
in
cmp
ss
add
adc
outs
(bad)
imul
fisub
retf
div
stos
test
inc
jne
scas
scas
mov
cmp
jge
test
psubusb
jg
and
add
jno
jg
or
xchg
mov
dec
imul
pop
push
test
sub
mov
cmp
pop
push
pop
in
sbb
lahf
pop
jbe
lock
add
jne
mov
add
nop
pop
mov
cmp
dec
mov
jne
cmp
cmp
jns
and
mov
jb
jo
sbb
lock
mov
jne
jge
push
lods
mov
sbb
dec
aad
and
lds
in
imul
push
in
push
lock
xchg
fidivr
int
mov
or
xchg
push
mov
and
test
jns
test
jb
or
fidivr
xor
mov
ret
pop
adc
sbb
mov
xchg
(bad)
clc
pop
ror
jl
repz
mov
dec
adc
mov
in
fist
and
ficomp
and
fs
xchg
(bad)
test
stc
adc
inc
pop
inc
mov
sti
xlat
lods
add
sub
(bad)
jg
ds
sub
xchg
loop
mov
or
sub
test
(bad)
in
pop
xor
pop
iret
sbb
mov
outs
sbb
gs
pop
call
movs
imul
test
pop
xor
call
push
pop
mov
sbb
mov
pop
dec
pop
jb
sbb
jp
cdq
dec
xor
dec
inc
cmc
pop
xchg
pop
cmp
jae
cmp
jns
mov
(bad)
in
mov
mov
aam
cs
cmps
in
adc
call
inc
sub
imul
adc
mov
xor
mov
jle
and
sub
std
add
les
cmps
in
cmp
cmp
gs
out
mov
mov
dec
jno
push
cmp
inc
(bad)
retf
xchg
xor
ja
mov
js
rcl
notrack
cdq
add
lods
lods
push
gs
xchg
sbb
bound
xor
inc
and
mov
cmp
aam
ffree
pop
clc
fcom
in
cmp
add
test
or
aad
cmp
jne
and
adc
cmp
pop
iret
mov
rcr
cmps
fidivr
pop
sub
xchg
add
dec
sar
data16
add
mov
sub
or
add
mov
aaa
sahf
hlt
jno
mov
into
jno
mov
jge
sbb
rcr
sbb
mov
mov
jecxz
jno
loope
jae
popa
or
shl
xor
and
mov
push
cdq
rol
or
loope
icebp
push
fisubr
scas
and
ret
jb
add
aaa
cld
xor
repz
test
es
mov
mov
shr
pop
mov
xor
and
jecxz
add
cmps
xchg
jecxz
push
jb
pop
adc
mov
mov
push
sbb
pop
addr16
sub
mov
push
mov
cmp
jmp
add
pop
clc
(bad)
retf
add
je
push
je
xor
mov
and
push
jle
ret
adc
inc
mov
gs
mov
(bad)
cdq
push
or
cmp
hlt
add
call
push
xlat
cdq
pusha
mov
sbb
xchg
icebp
xchg
ror
xlat
dec
dec
jno
in
jle
lock
fidiv
and
add
popa
popf
scas
push
xchg
xor
jmp
imul
inc
fs
pushf
cmps
sahf
jp
int
mov
shr
push
and
cmp
addr16
cwde
stc
leave
pop
push
add
push
mov
es
mov
xchg
adc
in
fs
and
cdq
mov
adc
sub
repnz
adc
add
pop
cdq
out
movs
les
ret
in
out
pop
pop
movs
dec
lahf
aas
mov
sbb
loope
xlat
jb
outs
scas
mov
and
fimul
sbb
je
or
sbb
push
push
loopne
inc
sub
xor
aad
pop
outs
adc
pop
mov
xor
es
mov
data16
test
mov
test
inc
sub
pop
ficomp
imul
mov
cld
scas
outs
imul
rcr
test
mov
in
idiv
add
mov
mov
adc
call
sub
xor
adc
xchg
jbe
ja
int
ror
(bad)
cmc
int
test
inc
jmp
cmp
leave
sbb
and
mov
shr
or
cdq
sub
adc
lods
scas
shl
push
loopne
mov
(bad)
jl
pop
ret
aas
sbb
sub
mov
fadd
not
(bad)
das
jns
adc
mov
nop
push
test
cmc
mov
and
stos
lock
mov
push
fnstcw
std
mov
retf
jp
fcmovb
sub
jg
mov
sbb
push
sti
fistp
sar
inc
sub
or
leave
add
push
lock
outs
stc
fimul
test
dec
pusha
loop
push
fs
pop
cmp
ret
repz
push
or
sbb
pop
pop
nop
imul
retf
or
mov
xchg
jmp
addps
dec
fild
pop
jp
and
mov
xchg
cld
and
scas
cs
mov
inc
ins
jle
cmc
sar
dec
mov
add
pop
fld
repz
adc
adc
and
es
or
out
mov
ja
lahf
cmc
xor
std
xchg
push
sub
mov
jnp
and
or
sub
popf
sar
aaa
daa
and
neg
mov
(bad)
jg
in
paddq
jecxz
jae
enter
dec
xlat
js
adc
and
stc
adc
sbb
repnz
sar
(bad)
cmp
outs
gs
sub
cmp
inc
push
adc
adc
push
scas
mov
xchg
inc
mov
add
pop
dec
xor
gs
mov
into
add
cmp
fadd
ja
sub
fcomip
dec
lods
pop
retf
cmp
jge
hlt
loop
push
ret
fistp
push
cld
inc
ins
sbb
dec
addr16
loope
mov
cmp
xchg
cmp
lds
in
sub
ja
scas
and
mov
sub
xchg
arpl
xchg
stos
mov
add
out
cmps
xchg
cmc
add
(bad)
ins
pop
or
jb
popa
dec
bound
(bad)
or
xchg
push
inc
inc
mov
inc
or
repz
pop
icebp
add
or
add
out
loope
cld
and
mov
cmc
push
(bad)
mov
sub
jecxz
mov
adc
pop
xor
add
push
mov
(bad)
sbb
(bad)
scas
daa
fwait
jecxz
daa
or
xchg
sbb
aas
cmps
dec
bound
or
dec
data16
hlt
mov
dec
push
lahf
jae
pop
aaa
add
jo
xlat
lea
pop
repnz
or
leave
xor
dec
jns
stos
inc
jl
cs
retf
cmc
mov
mov
mov
pop
rcl
sub
mov
nop
sub
sbb
fld
xchg
fsubrp
loope
shl
pop
das
out
fldenv
jb
retf
sbb
in
std
fadd
fiadd
jge
(bad)
stos
leave
xor
pop
dec
push
les
push
or
cmc
aad
mov
sbb
and
adc
(bad)
pop
and
scas
and
fisubr
pop
inc
pop
adc
pop
dec
retf
sub
mov
sbb
fnsave
shl
mov
push
aad
mov
adc
mov
dec
lahf
mov
xor
or
jecxz
or
add
mov
xor
mov
cmp
and
popf
xlat
cli
sbb
cli
pop
mov
dec
or
stos
pop
mov
mov
add
dec
(bad)
ds
imul
lea
mov
ins
cmp
mov
push
sub
mov
or
daa
or
add
inc
dec
xchg
data16
mov
mov
iret
je
push
out
mov
pcmpgtd
test
sbb
lahf
rol
add
(bad)
jae
mov
jmp
and
jle
cmp
dec
push
xor
sub
out
add
and
mov
(bad)
cs
iret
mov
push
pop
cmp
xchg
cmp
(bad)
retf
test
loop
js
mov
jns
movs
jne
outs
mov
(bad)
lds
bound
repz
sar
jnp
mov
fstp
loopne
lock
shl
(bad)
cwde
sar
cmps
neg
and
popf
dec
xor
mov
int
clc
pop
mov
ret
(bad)
fcmovu
pop
repz
icebp
sbb
test
stos
add
xchg
aam
popf
jmp
jp
ins
mov
inc
dec
push
fdiv
mov
jno
add
sub
icebp
(bad)
cli
add
jmp
int
adc
or
mov
imul
mov
jge
(bad)
pop
mov
test
and
push
aam
or
or
js
out
cmps
repz
push
repnz
adc
xchg
sub
mov
movs
ficomp
sbb
dec
nop
adc
sbb
push
jp
jp
xchg
jmp
cs
push
lods
push
nop
ins
out
or
cmp
stos
xchg
and
pop
shl
dec
cmp
sbb
in
inc
pop
cmp
mov
xchg
xchg
push
jp
dec
adc
pop
aam
mov
push
xor
push
lods
test
imul
and
js
xchg
lods
fnstenv
jo
adc
dec
gs
sbb
loopne
rcr
sbb
nop
imul
jns
xchg
icebp
ins
mov
sbb
aad
and
xor
sti
jg
scas
cmp
scas
or
mov
cs
sub
adc
mov
push
movs
(bad)
dec
adc
jg
xchg
out
clc
pop
sub
add
sbb
xchg
int
jns
pop
test
jmp
cmps
push
arpl
dec
xchg
aad
or
pop
and
stos
pushf
lock
loope
push
add
loope
cmp
inc
xchg
test
lods
adc
mov
jl
std
les
lock
mov
ins
dec
mov
mov
pop
jmp
pop
stc
lds
out
call
xchg
sbb
pop
or
jmp
add
or
(bad)
mov
pop
dec
pop
dec
cdq
mov
sbb
mov
stos
mov
(bad)
sub
cli
mov
or
pushf
adc
lea
inc
(bad)
mov
jbe
push
mov
and
xor
cdq
jle
call
cmps
push
add
inc
add
xchg
pop
ds
xor
dec
adc
gs
mov
push
loope
icebp
shl
icebp
shl
cmp
test
(bad)
loop
(bad)
jecxz
jae
retf
cmp
inc
and
jge
movs
repz
cld
xor
sub
stos
and
popf
shl
dec
enter
jmp
dec
movs
dec
pop
in
jl
(bad)
push
cmp
lahf
nop
daa
outs
in
inc
jne
jle
mov
daa
shl
adc
test
imul
and
pop
in
mov
icebp
dec
and
daa
xor
out
clc
hlt
popa
dec
jno
call
mov
inc
xchg
inc
jb
dec
hlt
jb
mov
sbb
cmps
and
sub
ret
std
stc
jae
cmp
sub
push
loope
jno
loopne
icebp
push
popa
or
popa
mov
shr
sbb
push
shl
pop
jns
popa
loopne
or
mov
push
push
fcom
pop
or
scas
int3
mov
das
call
bound
mov
sahf
aaa
mov
popf
jmp
nop
xlat
cld
nop
sub
and
push
jmp
fild
or
xchg
adc
aaa
cmp
in
push
mov
jl
adc
(bad)
js
and
xchg
jg
pop
(bad)
jg
mov
jnp
sub
int3
pop
test
jb
push
ret
or
mov
xchg
call
inc
rcl
or
cmp
rcr
repnz
pusha
(bad)
sub
xchg
mov
popf
mov
inc
shl
jge
std
retf
dec
call
repnz
push
sub
xor
fild
sub
jo
push
inc
bound
or
loop
nop
sbb
ret
ror
pop
icebp
push
cld
adc
pop
jno
bswap
nop
sahf
pop
sbb
push
out
sbb
or
test
push
add
adc
inc
sar
les
jb
xchg
out
jl
xchg
mov
xchg
out
int
jae
iret
test
aam
bound
xchg
mov
push
xor
retf
mov
mov
cmp
(bad)
ins
shl
mov
sub
rol
push
or
pop
shl
fwait
push
sub
pop
scas
xchg
jns
jg
mov
cld
out
xor
inc
clc
dec
call
repz
jle
arpl
dec
and
and
push
inc
mov
bound
or
mov
xor
mov
mov
dec
mov
aam
ja
push
mov
retf
push
shl
scas
iret
jo
repz
xor
aam
int
dec
bound
es
jb
adc
repz
pusha
(bad)
xchg
cmp
cli
mov
mov
pop
lea
xlat
js
es
or
mov
adc
adc
and
push
sub
xor
jecxz
into
sub
shl
popa
push
push
pop
cmp
push
mov
dec
sar
aaa
mov
loope
leave
xchg
mov
cmp
pop
jle
stos
inc
mov
dec
cmp
enter
mov
or
out
inc
sahf
int3
cmp
(bad)
mov
sub
cmp
or
loope
lock
loopne
repz
icebp
shl
icebp
push
stc
sub
and
imul
sbb
popa
mov
push
jle
jno
ins
sub
pop
xchg
popa
ss
out
mov
sub
add
ins
loopne
loop
push
xor
dec
pop
add
mov
int
pop
shl
mov
add
jns
ds
dec
repz
cdq
inc
mov
add
aad
imul
mov
push
and
mov
call
inc
lods
hlt
jmp
aas
mov
mov
push
dec
aad
mov
dec
out
popa
(bad)
sti
jle
sub
jbe
and
jmp
rcl
scas
mov
cmc
inc
jnp
iret
ds
xchg
std
or
pop
mov
fdiv
xchg
xor
loope
xor
aam
retf
and
mov
jl
adc
push
xchg
or
xor
jmp
cmp
mov
jbe
sub
pop
cs
and
int
push
inc
push
pop
bound
aad
xchg
add
jo
clc
daa
push
cld
pop
stc
(bad)
leave
int
fnsave
mov
test
jp
pop
bound
push
in
and
test
cmps
clc
xor
ror
push
mov
popa
fsub
adc
bound
stos
repz
sbb
shl
xor
(bad)
in
mov
sub
ds
lahf
add
imul
popa
pop
test
(bad)
jl
ret
xchg
dec
xrelease
adc
pop
loop
push
adc
pop
push
dec
pushf
ins
dec
out
add
movs
pop
mov
(bad)
fsincos
jg
sbb
or
jmp
cmp
test
sbb
xor
push
and
sbb
sub
test
jbe
loopne
lods
cmc
cmc
mul
push
out
mov
test
dec
(bad)
test
cmps
pop
fild
fdivp
leave
(bad)
adc
and
fxam
loope
sbb
mov
sahf
fsubr
adc
js
cmps
ret
in
inc
out
dec
push
jmp
aam
out
stos
dec
jmp
cld
not
or
adc
sub
sub
mov
inc
adc
or
fcmovne
cli
jge
les
mov
jmp
pop
inc
mov
in
fdivr
pop
mov
enter
push
push
clc
mov
shl
repz
shl
push
das
cmps
test
fcomp
sub
mov
jno
adc
xchg
int3
stos
mov
jle
or
cmp
lods
cwde
mov
call
mov
inc
adc
leave
lods
add
pop
popa
cdq
xchg
and
loope
jne
in
pop
lods
mov
push
sti
loop
mov
mov
sbb
jbe
jg
call
pop
sub
pop
cli
mov
push
aaa
ret
loopne
adc
call
inc
cs
inc
pushf
repz
dec
icebp
mov
pop
sbb
jp
jecxz
jae
push
push
xchg
call
mov
les
icebp
shl
lock
or
push
loope
icebp
shl
adc
push
shl
push
js
sbb
dec
sbb
and
mov
push
and
fdiv
fadd
mov
add
and
jl
jge
sar
xor
sub
mov
push
scas
ja
mov
aad
cld
mov
add
add
(bad)
xchg
lds
jns
and
popa
lahf
sub
ficom
outs
ss
es
xor
dec
add
mov
xor
retf
and
sub
cmp
push
lea
mov
loop
or
pop
and
jmp
ins
iret
push
daa
inc
or
stos
inc
sbb
inc
sar
pushf
adc
int3
mov
out
repz
mov
je
push
loopne
loope
in
out
out
xchg
in
push
mov
jno
fist
sub
iret
push
pusha
lods
add
fs
repnz
jae
xchg
cdq
dec
jge
dec
cmp
dec
lea
mov
sbb
xor
sub
fadd
je
cli
aaa
mov
lea
aas
ret
mov
imul
xor
das
mov
icebp
aad
imul
cli
icebp
daa
jbe
imul
out
mov
lods
or
cmp
test
es
xchg
jg
sub
adc
jae
(bad)
cs
cmc
jg
cmp
or
jecxz
call
xlat
sub
stc
xor
and
rcr
add
mov
in
cwde
fisttp
and
push
imul
cmp
or
push
lock
add
mov
leave
xor
je
in
xor
pop
or
aad
sub
add
sbb
data16
add
adc
into
xchg
mov
jg
mov
js
push
sahf
fsub
jl
push
push
or
hlt
scas
es
add
out
iret
pop
jmp
pushf
inc
fst
sbb
cmp
push
shl
movs
neg
pop
xchg
mov
(bad)
push
xchg
inc
add
(bad)
adc
xchg
in
lahf
aas
ret
and
add
pusha
loope
dec
out
push
out
outs
xchg
data16
push
or
rol
pop
inc
clc
mov
(bad)
or
pop
add
data16
sbb
inc
adc
lahf
into
mov
fdivr
shl
mov
dec
ins
data16
les
dec
xor
test
in
icebp
retf
sub
jg
mov
inc
loope
call
xchg
repnz
add
(bad)
dec
cmp
inc
mov
fwait
ins
pop
xchg
movs
mov
push
out
retf
inc
inc
xor
jl
xchg
lods
push
xor
je
pop
add
fist
dec
add
fcomp
inc
xchg
xchg
fnstsw
call
push
adc
iret
dec
xor
fadd
xor
dec
sub
aad
popa
fwait
lea
sahf
aad
test
inc
test
aad
add
shr
in
addr16
pusha
pop
cmps
or
sbb
xchg
pop
mov
xlat
or
xchg
sbb
add
cld
mov
jmp
adc
and
sbb
xor
inc
mov
rol
aam
jne
loop
fsubp
push
and
xchg
xchg
lods
xchg
push
pop
sbb
ins
outs
iret
repnz
in
xor
repnz
or
call
mov
inc
push
movs
lds
sbb
test
xchg
sti
dec
movs
mov
jo
cdq
mov
or
push
outs
xlat
retf
dec
pop
rcl
out
ja
gs
mov
or
in
bound
loop
push
stos
pusha
inc
xchg
mov
sbb
and
hlt
cmc
imul
pop
dec
cdq
push
cli
mov
in
pop
xchg
pusha
out
jne
das
(bad)
dec
(bad)
cdq
mov
aam
idiv
cmp
dec
adc
or
nop
push
inc
int3
jmp
not
mov
jmp
push
jnp
jb
pop
pop
sbb
cmp
mov
int
add
icebp
int3
movups
mov
test
cmp
sbb
jl
pop
mov
jmp
pop
and
sar
or
loopne
jne
push
inc
hlt
jecxz
jmp
shl
jg
inc
ret
sub
adc
lods
push
jno
cmp
push
cwde
das
out
mov
adc
mov
inc
popf
jp
adc
jl
test
icebp
and
pop
sahf
and
cwde
outs
or
fmul
jmp
or
dec
jmp
jns
sbb
popa
fisub
inc
xchg
add
mov
cmp
jl
movs
xlat
push
add
sbb
or
retf
(bad)
je
dec
push
adc
mov
inc
dec
shl
pop
sti
mov
fistp
loop
aaa
push
jb
data16
cmp
mov
push
mov
mov
cwde
dec
rcl
(bad)
pop
and
sbb
adc
mov
push
mov
test
jbe
rcl
aaa
dec
pop
dec
repz
mov
or
in
sub
mov
ja
imul
das
lock
dec
adc
or
mov
mov
ja
jp
in
aaa
fnstcw
xchg
stos
out
loopne
lds
outs
(bad)
leave
stos
pop
jo
sahf
sar
cmps
test
popa
imul
(bad)
shl
mov
ins
mov
fwait
addr16
add
(bad)
mov
ds
sub
int3
fstp
aaa
inc
movs
aad
or
cli
mov
pusha
adc
xchg
and
in
popf
cmp
test
pushf
inc
std
and
or
stos
pop
jne
adc
pop
sbb
(bad)
hlt
rcr
jecxz
int
push
sar
aas
and
stc
into
mov
push
or
mov
xchg
out
jae
xor
jmp
jb
loope
ror
push
jmp
sub
inc
mov
lea
cmp
sahf
adc
jne
cmc
ins
loop
sub
(bad)
loopne
mov
xor
cs
sbb
dec
adc
jbe
sbb
mul
in
cmc
in
stos
adc
and
ja
cwde
jecxz
ins
popa
(bad)
push
xchg
bound
or
xchg
adc
mov
popf
sbb
xor
or
xor
push
ret
sbb
pop
and
jne
loop
repz
adc
aad
mov
sub
adc
pop
sahf
cld
rcr
jb
cmc
addr16
dec
in
xlat
jecxz
aad
and
sbb
or
movs
call
add
fwait
stos
push
das
out
loopne
out
or
push
jle
popa
rcl
cmps
push
inc
jle
loop
ja
outs
call
jle
jmp
add
cmp
add
cwde
xor
jne
rcl
loope
outs
retf
add
dec
cmps
icebp
mov
imul
into
push
adc
add
je
das
push
(bad)
jno
push
mov
test
mov
push
or
push
mov
xor
cmp
enter
sub
jp
or
jne
or
pop
mov
jae
into
sub
jnp
pop
mov
jle
and
mov
je
push
push
push
sub
xchg
lods
push
aas
and
jle
push
lods
cld
mov
movs
addr16
pop
push
jnp
dec
jg
xchg
xchg
mov
mov
loop
(bad)
addr16
repz
nop
mov
rcl
push
sub
bound
or
jmp
adc
jp
pusha
test
dec
icebp
aam
(bad)
outs
inc
push
add
add
mov
(bad)
mov
fist
dec
add
jb
pop
frstor
mov
(bad)
fcom
sbb
bound
jecxz
lock
mov
pushf
jmp
inc
jo
cmc
and
push
ja
inc
scas
add
ret
adc
mov
popf
(bad)
xlat
mov
adc
cmp
xor
xor
mov
jbe
lock
daa
arpl
in
inc
mov
shr
adc
cmps
test
add
or
cwde
pop
or
ss
jno
out
push
leave
cld
mov
mov
adc
lds
movs
sbb
or
jmp
pop
xor
sub
push
shl
sbb
inc
xchg
clc
lock
mul
push
jae
rcl
stc
mov
jecxz
nop
js
pop
add
fidiv
mov
mov
xchg
cli
adc
inc
nop
mov
fnstcw
je
jl
dec
add
or
inc
xchg
sbb
pusha
jmp
in
or
mov
pop
jns
jns
add
cli
push
mov
or
mov
in
pop
push
jbe
test
pop
addr16
cmp
into
mov
ins
add
mov
dec
mov
jno
sub
dec
xor
std
add
scas
xchg
push
cdq
cli
(bad)
xchg
out
call
fstp
push
repnz
icebp
inc
sub
dec
ret
xor
and
aaa
ret
adc
sbb
xchg
and
daa
xchg
xor
cli
imul
xor
call
xchg
test
mov
rol
push
xor
mov
xchg
sbb
inc
(bad)
clc
ss
mov
jl
mov
xchg
cwde
mov
test
cmc
sti
push
adc
enter
jne
ret
dec
call
lock
pop
pop
daa
inc
outs
cmp
adc
test
add
xchg
cmp
mov
and
ins
adc
cmp
push
dec
fisubr
in
(bad)
les
ds
cmp
int
pushf
inc
xchg
adc
inc
movs
enter
jmp
push
inc
lock
inc
es
push
enter
xchg
pusha
fcmovnu
mov
stos
add
inc
rcl
push
sbb
rcl
jne
sbb
cmp
jns
aas
pushf
mov
ss
pop
sub
mov
retf
inc
jle
mov
pop
xchg
jnp
cmp
add
xor
dec
out
jge
test
ret
ss
or
gs
mov
mov
pushf
and
adc
fwait
or
sbb
retf
(bad)
addr16
enter
xchg
cmps
and
sub
aas
and
iret
and
adc
adc
(bad)
ror
sbb
in
neg
popf
add
jb
mov
dec
and
(bad)
loope
dec
aas
movs
add
sbb
aas
dec
loope
sbb
jge
sbb
pop
rol
jg
mov
xchg
(bad)
or
jp
adc
cmps
inc
cdq
mov
nop
and
je
push
sub
sbb
xor
(bad)
hlt
into
inc
adc
xchg
xor
jp
leave
ror
push
push
jp
adc
pop
and
push
lods
cs
(bad)
pop
mov
fistp
rol
das
ret
sub
loopne
and
mov
or
sub
int3
hlt
clc
mov
xor
repz
repnz
sti
jp
jbe
xchg
sbb
fs
ds
mov
push
xchg
cmp
shl
fcom
test
fmul
mov
data16
or
out
sbb
xchg
xchg
add
loopne
pop
stos
movs
iret
pop
aas
scas
jge
dec
inc
scas
ins
jmp
aas
cli
mov
aam
xor
jae
add
and
lahf
xor
test
(bad)
fcom
or
xchg
iret
sub
mov
jnp
adc
mov
sub
(bad)
loopne
aaa
je
popa
in
mov
scas
sahf
xchg
jp
imul
and
push
js
cmp
stos
icebp
fsub
or
repz
sub
shl
icebp
hlt
loope
mov
push
cwde
dec
loop
cmp
in
scas
popa
jae
mov
pusha
or
push
pusha
mov
loopne
jo
pusha
mov
jecxz
repz
arpl
jb
addr16
aad
or
not
imul
je
push
push
jnp
ins
add
push
gs
pop
loope
jno
arpl
jae
out
cmc
pop
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
idiv
fisubr
nop
push
popa
mov
(bad)
imul
jo
push
push
push
loope
icebp
(bad)
jno
popa
mov
shl
icebp
shl
mov
rcr
push
push
loope
icebp
pop
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
imul
fstp
mov
fsub
or
popa
mov
shl
icebp
shl
mov
shl
jae
popa
or
mov
mov
sar
scas
mov
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
push
pop
jmp
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
out
ja
push
jo
xchg
shl
mov
popa
or
popa
mov
shl
icebp
shl
xor
mov
shl
nop
jns
mov
push
shl
pop
icebp
rcr
stos
jo
stos
add
leave
jg
ins
mov
call
test
sub
mov
fsub
jno
popa
mov
shl
icebp
shl
cwde
icebp
push
jmp
ja
pusha
in
pushf
shl
pop
icebp
push
adc
loope
jb
clc
sbb
dec
bound
das
cmp
gs
loopne
icebp
push
loope
icebp
shl
icebp
rcr
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
out
ja
pop
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
popa
scas
loopne
jne
jmp
add
jns
pusha
or
push
popa
mov
shl
icebp
shr
cwde
jno
jmp
or
mov
dec
push
out
fsubr
ret
jnp
jecxz
jns
cs
xor
shl
xchg
push
push
fs
cmp
add
jae
mov
popa
lods
icebp
hlt
push
div
push
inc
mov
pop
fstp
inc
loopne
mov
retf
in
ja
test
push
loopne
lock
mov
push
jecxz
jo
arpl
push
arpl
jae
loop
repz
addr16
repnz
(bad)
not
pcmpeqb
(bad)
clc
pop
in
stc
push
jmp
add
pop
out
sti
push
imul
loope
push
mov
jecxz
repz
add
add
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fiadd
mov
popa
push
stc
aam
mov
push
loopne
stc
shr
or
popa
add
push
popa
mov
shl
icebp
shl
icebp
shl
mov
push
popa
add
shl
icebp
shl
icebp
shl
icebp
rcr
in
push
loopne
icebp
push
jmp
mov
shl
add
stc
push
popa
or
shl
icebp
shl
icebp
shl
jno
pusha
mov
pop
or
jb
popa
mov
pusha
fs
loope
mov
es
jg
add
pop
scas
popa
mov
popa
mov
shl
icebp
shl
icebp
shl
div
shl
mov
push
push
pop
jmp
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
out
ja
push
jno
xchg
shl
jno
popa
or
shl
icebp
shl
icebp
shl
lock
loopne
imul
or
popa
mov
pusha
mov
sbb
sub
shl
outs
sbb
or
popa
or
pop
pusha
mov
push
popa
mov
shl
icebp
shl
icebp
push
cdq
sub
push
gs
sbb
mov
push
(bad)
cwde
jno
(bad)
jmp
and
sbb
push
in
arpl
mov
push
loope
icebp
shl
icebp
rcr
jmp
popa
mov
shl
icebp
shl
icebp
shl
icebp
shl
mov
out
ja
pop
jmp
xchg
shl
icebp
shl
icebp
shl
icebp
shl
icebp
ror
popa
scas
loopne
jne
jmp
add
jns
popa
mov
popa
mov
shl
icebp
shl
xor
jo
jo
or
popa
mov
jmp
test
in
leave
xlat
inc
xchg
int
repz
or
xor
ja
das
adc
stc
cmc
loope
rcl
or
push
loope
rcl
call
mov
(bad)
xor
loop
sbb
jmp
push
mov
loopne
lock
jo
jecxz
jo
arpl
jae
gs
repnz
(bad)
hlt
(bad)
in
je
jmp
lea
push
hlt
fsubr
add
out
jnp
push
cli
fsubr
cmp
or
jnp
pusha
or
jecxz
jae
jecxz
jne
in
jnp
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
ficomp
jmp
jno
fisttp
jmp
popa
or
loopne
jns
add
jno
popa
mov
push
popa
or
popa
or
shl
icebp
shl
icebp
shl
or
shl
ja
shr
mov
push
popa
or
popa
mov
shl
icebp
shl
mov
loop
icebp
shl
mov
popa
or
fsub
jno
popa
mov
rcl
jno
mov
test
int3
sub
push
int
clc
movs
mov
retf
ret
sbb
cmps
inc
scas
out
mov
pop
mov
sbb
mov
mov
loope
iret
clc
xchg
loope
mov
jo
shl
or
aaa
jne
scas
jg
out
jno
pop
outs
mov
or
shl
mov
add
out
inc
dec
int3
inc
es
loope
ret
shr
push
in
in
sub
rol
imul
jbe
popa
mov
shl
in
icebp
dec
into
(bad)
and
jmp
loope
lock
popa
or
popa
mov
shl
mov
shl
mov
push
jno
repnz
stc
dec
shl
in
pushf
shl
or
push
js
lock
lods
push
popa
pop
lea
push
fdivr
xor
adc
adc
clc
rcr
xchg
mov
repz
xchg
sbb
dec
dec
xchg
sbb
fild
jnp
mov
add
pop
mov
mov
and
jmp
test
hlt
popa
mov
push
pop
dec
es
mov
(bad)
adc
stos
xor
es
int3
scas
ret
mov
xchg
xor
movs
jmp
push
inc
icebp
out
shr
pop
inc
mov
push
push
sbb
jno
pusha
mov
jecxz
jo
popa
mov
shl
mov
shl
jo
icebp
adc
pop
push
enter
mov
rol
leave
mov
dec
sbb
mov
sbb
ret
popf
mov
stos
dec
fist
out
and
pop
inc
add
dec
push
and
test
mov
sub
sahf
lahf
push
sbb
(bad)
stos
xchg
jle
add
or
xchg
adc
test
hlt
mov
lods
int
int
xchg
in
loope
xor
add
dec
inc
xor
popf
xor
(bad)
mul
push
mov
push
add
sbb
xor
lock
ds
mov
lods
cmp
xchg
cmps
mov
popf
sahf
dec
es
fs
retf
into
adc
aam
aam
inc
inc
mov
cdq
xor
pinsrw
lock
(bad)
mov
fwait
lds
xchg
call
push
adc
mov
data16
clc
mov
inc
ret
cli
lahf
and
jns
inc
mov
mov
mov
mov
leave
add
jb
stc
fstp
popa
adc
mov
or
push
arpl
jo
popa
mov
shl
mov
imul
dec
add
sti
shl
sub
mov
fsub
in
sub
icebp
push
dec
jno
dec
and
and
dec
fdiv
xor
cmp
xor
sbb
xor
xchg
mov
sahf
jg
je
rol
cs
mov
ja
add
jo
fnsave
bound
fsubr
pop
hlt
cdq
inc
clc
aam
and
xchg
dec
xor
dec
xchg
push
jb
call
aad
sti
cli
imul
fldcw
mov
or
cld
push
mov
and
and
adc
jp
xchg
sbb
dec
addr16
sar
mov
adc
push
and
call
inc
call
fmul
ja
outs
rcl
aad
or
adc
sbb
pop
dec
jecxz
dec
sbb
fcomp
sub
add
ins
lock
retf
les
xor
add
fistp
stos
pop
int
inc
inc
xchg
push
popa
or
jnp
adc
cmp
mov
jecxz
add
(bad)
ja
adc
and
rcl
xchg
jle
and
inc
ror
xor
and
out
and
mov
adc
loopne
stc
shl
lock
arpl
icebp
shl
mov
popa
xor
icebp
cmp
jo
mov
shl
retf
leave
imul
pop
icebp
shl
fwait
push
imul
or
ret
aas
sub
cmp
sbb
sahf
cmc
add
push
(bad)
cwde
push
cmps
pop
mov
mov
stos
out
aam
outs
(bad)
out
jae
xchg
js
mov
loop
xor
inc
movs
in
in
mov
jae
lods
addr16
ds
(bad)
lea
mov
inc
fisub
ss
mov
enter
add
fdivr
retf
jmp
shr
fld
mov
xor
add
test
imul
popf
pop
jne
ret
jmp
cwde
gs
jnp
dec
xor
movs
jp
addr16
xchg
cmp
shr
inc
sub
sbb
inc
and
(bad)
sbb
cmp
test
and
mov
scas
sbb
popf
jnp
mov
stc
push
mov
(bad)
rcr
cmp
test
cdq
gs
arpl
sub
and
xchg
sub
mov
ret
out
xchg
fwait
xor
pop
jecxz
pop
idiv
fst
sbb
xor
int3
xor
call
in
popf
ja
dec
xor
cs
jbe
bound
loopne
mov
aaa
les
sub
(bad)
adc
xchg
jmp
adc
xlat
sub
(bad)
loope
lock
out
push
adc
(bad)
inc
sub
or
pop
fst
ss
lods
xchg
lods
stos
retf
fstp
loope
mov
loopne
jno
popa
mov
popa
mov
shr
cwde
jno
shl
push
shl
or
or
jno
jno
jbe
cmc
lods
pop
mov
(bad)
enter
stc
(bad)
punpckhbw
or
outs
xor
pop
adc
rcl
mov
dec
in
mov
enter
jl
sbb
cmp
test
mov
sbb
sbb
mov
iret
mov
imul
sbb
lods
adc
xor
jmp
test
dec
xchg
pop
fcom
int3
test
ins
mov
gs
xor
icebp
hlt
dec
popa
or
xchg
imul
sbb
push
sub
push
pop
loopne
iret
jmp
iret
mov
xlat
jmp
push
sub
push
xor
pushf
daa
nop
mov
adc
add
push
add
mov
pop
les
aad
test
(bad)
mov
les
jo
shr
aam
mov
lock
movs
push
mov
adc
in
mov
jecxz
not
and
mov
imul
push
js
retf
daa
clc
aam
or
scas
popa
mov
pusha
mov
push
imul
icebp
fsub
retf
shl
sbb
push
pop
jb
loope
loope
popa
or
(bad)
mov
shr
not
push
repz
loopne
icebp
shl
jno
popa
mov
shl
sbb
shl
imul
pusha
test
and
mov
push
jle
jno
sbb
add
sub
clc
dec
call
test
stc
dec
cmp
enter
ins
add
scas
test
mov
xor
adc
int3
xchg
mov
fucomi
imul
adc
sahf
pop
mov
ror
sub
pop
bound
cmp
and
xchg
leave
push
xlat
xor
into
gs
sbb
xor
push
inc
mov
mov
cs
xor
inc
jmp
sub
push
fucomi
push
pushf
ins
ror
repnz
sahf
mov
pusha
dec
out
repz
nop
pushf
lea
icebp
mov
repz
popa
loope
mov
xchg
outs
dec
pop
xor
rcr
shl
shl
js
and
dec
or
pop
mov
iret
cmps
cmp
cli
sbb
mov
and
clc
arpl
mov
data16
push
push
stos
or
mov
mov
xchg
adc
adc
jecxz
jo
popa
mov
popa
mov
shl
sbb
dec
sbb
and
inc
push
or
or
jmp
fdiv
sar
add
test
adc
or
mov
lods
adc
mov
dec
mov
outs
push
jle
fs
(bad)
push
mov
jbe
dec
pushf
pusha
cmc
jmp
loope
jne
sub
lock
push
xor
call
cmc
xchg
and
(bad)
in
or
dec
adc
aam
dec
mov
and
dec
daa
inc
xchg
adc
mov
sub
cmp
adc
mov
lock
loopne
add
pop
mov
sbb
fs
dec
test
add
popa
bound
push
mov
aam
imul
cwde
sub
lods
mov
mov
mov
or
sub
and
push
xchg
es
jle
ficom
mov
js
and
test
inc
rcr
imul
or
stc
add
inc
jae
enter
ins
jne
out
lods
mov
(bad)
mov
pop
push
mov
rcr
sub
add
cdq
imul
add
aaa
jns
fistp
or
popa
sbb
push
loopne
lock
jno
popa
mov
shr
jno
inc
sbb
shl
(bad)
in
adc
mov
push
jle
jno
push
ret
xor
mov
lods
dec
jb
push
xor
sbb
and
or
inc
cld
hlt
push
inc
ret
mov
sbb
inc
or
cwde
das
adc
not
jg
stc
jno
arpl
(bad)
push
inc
iret
adc
xlat
in
int3
push
cmp
mov
mov
xor
cmp
add
cmps
ficomp
(bad)
adc
push
mov
daa
iret
mov
jo
pop
nop
cdq
(bad)
sahf
stc
call
push
enter
int
cmp
inc
pusha
cmp
ret
imul
jl
push
or
sbb
ret
jae
and
mov
mov
dec
cli
ins
or
inc
(bad)
lds
xchg
je
fstp
and
inc
mov
push
inc
inc
mov
lods
add
dec
into
(bad)
shl
mov
sbb
in
rcr
xor
repnz
and
add
ins
xchg
push
inc
xlat
leave
mov
xchg
imul
xchg
movs
test
outs
arpl
mov
psubusb
div
into
sub
add
add
sub
fstp
push
xlat
loope
mov
mov
lea
scas
imul
jno
inc
mov
rcr
mov
fdivr
js
push
cmp
push
mov
imul
lds
xlat
js
mov
pusha
mov
push
loopne
jo
loopne
lock
in
jae
jecxz
repz
je
fs
(bad)
in
ja
add
cmp
xor
cmp
pop
push
ja
ins
cmp
fcmovb
or
in
jae
jmp
jae
imul
(bad)
imul
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
fisubr
sti
(bad)
add
shl
add
mov
push
loope
jo
outs
mov
shl
jno
popa
mov
shl
icebp
shl
or
shl
mov
add
jge
popa
or
popa
mov
shl
icebp
shl
mov
shl
mov
push
popa
push
mov
imul
sub
mov
xchg
mov
dec
add
mov
xchg
cs
pusha
mov
xor
jle
add
jg
mov
(bad)
popa
es
push
and
aam
in
add
mov
pop
adc
scas
fisub
pushf
cld
add
addr16
inc
cmp
es
add
adc
jne
jbe
xlat
pop
icebp
rcl
(bad)
mov
mov
mov
mov
adc
ds
cmp
enter
call
push
dec
in
and
lea
ret
dec
ins
cmp
push
int
pop
or
ins
in
mov
inc
jmp
add
(bad)
xlat
sbb
mov
pop
or
idiv
shl
icebp
shl
or
shl
icebp
shl
icebp
shl
mov
loope
icebp
shr
cmp
pop
or
jp
popa
mov
loopne
jno
inc
out
icebp
dec
in
and
adc
xor
inc
sbb
lods
sub
jmp
fdivr
movs
add
xchg
dec
mov
add
stos
jo
aam
pop
gs
or
sub
lea
xchg
mov
jecxz
mov
dec
fdiv
push
xchg
jecxz
add
retf
xchg
push
les
or
cmovl
and
aam
mov
mov
rcr
push
jnp
pop
xchg
push
push
xlat
push
pop
inc
sbb
ins
jae
mov
mov
and
xchg
adc
xor
loopne
cmc
int3
rcl
lahf
add
ror
addr16
adc
adc
push
sbb
jmp
cmps
fimul
(bad)
ret
cs
(bad)
xchg
or
sbb
xor
push
movs
adc
inc
add
cs
cmps
jg
ds
movs
add
mov
sub
xchg
int3
and
icebp
stos
mov
arpl
or
scas
mov
jo
push
sub
push
jmp
loope
lock
loope
jae
popa
or
shl
mov
shr
mov
push
jns
js
shl
dec
jno
repz
mov
mov
scas
test
mov
lods
fdivr
mov
add
loopne
pop
add
shr
cs
aas
xchg
pop
shr
bound
push
imul
xor
lods
push
mov
mov
sbb
test
jnp
je
mov
lea
and
fwait
mov
aas
adc
or
lock
xchg
pop
ja
ins
push
pop
mov
adc
pop
shl
div
stc
cli
xchg
rcl
shl
ret
gs
mov
jmp
fwait
jnp
in
je
call
dec
or
(bad)
jp
wrmsr
cs
test
add
push
cdq
es
outs
es
aaa
cmp
out
jns
out
popf
ds
cmp
jg
test
mov
sbb
mov
outs
pop
stos
out
push
push
and
mov
inc
popa
or
push
pusha
mov
popa
or
shl
mov
shl
xor
jno
clc
push
leave
add
clc
mov
inc
xor
inc
mov
xor
popa
mov
push
dec
jno
sbb
mov
ins
sbb
push
stos
jp
sub
out
ret
or
cmp
mov
xchg
test
daa
xor
push
(bad)
leave
sub
out
ins
add
ins
and
xor
rcr
stc
push
mov
mov
into
clc
xchg
lods
pop
xor
mov
test
xchg
cmp
push
push
jne
shl
leave
mov
bound
dec
dec
xor
lahf
xor
adc
retf
ins
jo
int
int3
stos
add
loop
mov
mov
adc
mov
inc
scas
ja
add
add
or
mov
mov
push
fs
dec
outs
jno
jmp
cmps
pop
mov
jb
inc
xlat
adc
dec
dec
jns
xlat
xchg
push
icebp
and
mov
sbb
in
icebp
(bad)
cmp
shl
rep
inc
xor
scas
sub
sub
sub
or
and
rcl
icebp
(bad)
pop
lods
push
pop
fs
fs
jbe
inc
pop
mov
push
call
add
sub
fwait
sub
xor
push
call
sbb
pop
mov
add
xor
mov
in
lock
inc
outs
stos
jne
mov
or
xchg
sub
push
or
push
pop
dec
addr16
pop
dec
cmp
pusha
xchg
jbe
fild
or
popa
mov
fsub
or
jecxz
jae
popa
or
shl
icebp
push
imul
jno
imul
shl
sub
pusha
test
sub
xor
jmp
mov
mov
loope
jo
mov
fsub
pop
je
pop
inc
nop
test
out
not
cmp
stos
ins
jmp
js
add
movs
adc
loop
pop
push
xor
ss
lods
mov
dec
adc
popa
and
mov
xor
sbb
xchg
adc
mov
xor
out
ror
(bad)
mov
jo
sub
enter
or
push
mov
dec
(bad)
scas
(bad)
jecxz
lds
scas
clc
leave
mov
pop
adc
push
sub
pop
push
repnz
int
pusha
xchg
inc
enter
aaa
add
lea
icebp
stos
or
mov
fcom
pop
or
in
jns
mov
loop
mov
outs
sar
push
dec
pop
(bad)
xchg
mov
stc
(bad)
jo
mov
add
jo
fs
sub
int3
ficomp
out
mov
retf
sbb
stos
dec
test
xor
rcr
retf
sbb
sub
call
inc
mov
hlt
push
sub
or
retf
fs
pop
jb
out
or
ins
out
add
jb
movs
jp
lods
xor
pop
leave
lahf
test
loopne
xchg
cmp
jecxz
sub
dec
sub
movs
sbb
test
mov
inc
adc
xlat
inc
sub
in
mov
adc
dec
mov
pop
int
movs
and
fild
popf
mov
sub
jae
mov
cmps
add
xor
sbb
push
add
(bad)
lahf
xlat
fisub
retf
aam
and
jbe
pop
(bad)
jge
push
loop
mov
sub
daa
cli
jp
pushf
or
(bad)
setb
ja
or
test
fist
push
mov
out
call
dec
test
out
das
cmc
ins
jb
xor
popa
xchg
xchg
push
xchg
not
(bad)
and
inc
adc
adc
mov
pop
dec
arpl
cld
dec
cmps
push
or
cmp
mov
hlt
pop
rol
addr16
ret
push
sbb
arpl
in
fistp
and
icebp
into
in
jmp
cdq
dec
jns
mov
out
mov
mov
test
or
jge
inc
xchg
mov
xchg
and
daa
xchg
cmps
loop
int
mov
xor
lahf
mov
das
scas
rcr
(bad)
cli
push
(bad)
jl
mov
push
ja
sbb
mov
or
pop
inc
or
out
lahf
std
or
loope
cdq
adc
mov
movs
jge
es
mov
gs
sbb
sbb
mov
stos
sub
mov
cs
fmulp
sbb
in
pusha
arpl
xchg
sbb
ror
xchg
lahf
jmp
push
xchg
mov
rcr
outs
call
fcmovnbe
dec
in
lock
jecxz
inc
outs
sahf
inc
jle
xor
test
mov
mov
movs
out
inc
aaa
shl
mov
push
cmp
mov
cs
loope
sbb
movs
test
mov
loop
xchg
inc
push
ja
sbb
pop
(bad)
pop
push
pop
lock
xchg
ds
xchg
sbb
or
(bad)
adc
ins
data16
push
push
outs
sbb
es
add
cdq
cmps
cmp
dec
adc
iret
xchg
scas
sbb
and
dec
(bad)
retf
sbb
jnp
fild
ins
daa
mov
outs
mov
fs
mov
xor
inc
jg
or
or
cdq
jecxz
sbb
in
fidiv
out
xchg
pop
mov
xor
pop
add
addr16
enter
(bad)
cdq
dec
daa
and
movs
outs
lea
mov
pop
dec
xchg
dec
mov
and
and
jp
out
or
es
ret
retf
in
ret
mov
jmp
cmp
loope
pusha
inc
adc
cmp
jg
aam
lods
and
cs
add
sub
jo
cmp
imul
adc
pusha
mov
shl
jo
popa
mov
shl
jno
leave
cmp
and
leave
pop
mov
or
or
sbb
icebp
imul
sub
inc
test
mov
mov
shl
sub
mov
ins
jge
fdivr
or
mov
dec
sahf
scas
in
test
shl
fld
test
lock
stos
and
push
js
inc
xchg
dec
cld
mov
repnz
add
repz
popa
lods
xor
add
xchg
mov
dec
sub
pusha
mov
cmp
iret
adc
adc
in
and
mov
(bad)
inc
sub
mov
imul
loopne
sub
push
test
dec
test
inc
out
add
xlat
xchg
mov
xor
jg
jmp
mov
aam
jb
mov
icebp
aam
jno
ins
mul
aaa
retf
fcomp
add
out
dec
(bad)
jnp
out
or
xor
cmp
sub
lods
dec
and
mov
rol
repnz
mov
out
sti
mov
outs
xchg
ror
xor
(bad)
xor
popf
add
imul
push
jecxz
adc
(bad)
retf
sbb
out
int
dec
fxtract
cmp
pop
or
test
jo
mov
ficomp
nop
lds
popf
pop
stos
pop
stos
push
jecxz
jecxz
cmc
retf
cmps
mov
dec
int
mov
aas
inc
es
sbb
mov
pop
jl
out
shr
xor
inc
cwde
xchg
(bad)
pop
ret
jae
sub
fcom
mov
mov
rcl
push
adc
dec
xchg
dec
repz
pushf
sub
add
push
mov
aaa
pop
pop
push
dec
out
add
xor
retf
sub
aaa
add
jl
repnz
dec
and
xor
or
xchg
repz
mov
push
fisub
dec
pop
ret
repnz
retf
xor
mov
sbb
enter
xchg
push
retf
add
sbb
(bad)
jecxz
jecxz
jmp
mov
sub
mov
lods
mov
add
sbb
jns
aas
jae
into
loop
xchg
enter
pop
pop
sahf
fst
sbb
inc
mov
pop
mov
loop
jmp
mov
push
jae
mov
fistp
lock
rol
or
mov
pop
xchg
test
shl
icebp
shl
lock
cmps
movd
mov
dec
push
jnp
gs
push
xor
add
or
call
scas
popa
mov
loopne
jno
loope
jno
popa
mov
shl
xor
stc
sub
push
jmp
pop
dec
adc
mov
loopne
jne
jmp
mov
xor
and
mov
shr
dec
gs
mov
aaa
icebp
push
sbb
jp
pop
pop
clc
ret
xchg
aad
sbb
jae
lods
xchg
sbb
add
adc
mul
inc
leave
jo
jns
fsubp
or
mov
ss
pop
add
int
fsub
in
jp
sbb
int3
shl
aaa
mov
shl
jne
pusha
xchg
inc
call
sbb
in
fsubr
jl
mov
fs
mov
adc
arpl
sub
add
jo
xchg
ss
pop
ror
adc
cmps
or
adc
xchg
fdivr
mov
jle
popa
mov
or
cli
in
out
icebp
mov
push
mov
inc
lock
hlt
dec
pop
mov
mov
xchg
fadd
cmp
adc
xchg
ret
pop
pop
aam
loope
sbb
fisttp
das
test
push
pop
in
cld
adc
inc
fiadd
add
pop
mov
jno
mov
ss
(bad)
addr16
xchg
loop
xchg
in
dec
dec
retf
jecxz
test
movs
dec
test
xchg
xor
mov
fwait
dec
iret
and
retf
arpl
and
stc
mov
or
jns
bound
das
arpl
test
out
fcom
mov
aas
mov
jne
inc
xchg
mov
scas
loope
mov
loopne
jo
popa
or
popa
mov
shr
cwde
jno
shl
call
adc
cdq
sub
or
jmp
mov
mov
sti
xchg
test
push
pop
xchg
dec
push
adc
pop
inc
ret
rol
shl
mov
lock
cmp
out
sbb
in
or
je
push
jb
fnstenv
add
pushf
jmp
mov
retf
mov
adc
pushf
shr
jecxz
or
xor
xor
ins
xlat
push
jp
and
sub
fist
dec
mov
cdq
call
inc
cmp
(bad)
addr16
fcomp
or
mov
push
xor
movs
ror
mov
or
jmp
out
sahf
mov
sub
mov
adc
nop
or
sub
mov
jbe
xchg
shl
(bad)
ss
pop
out
bnd
add
xchg
xchg
out
or
jmp
sub
xor
dec
gs
mov
shr
jbe
adc
repnz
int
enter
push
cwde
das
mov
sar
outs
sbb
iret
xchg
pushw
icebp
jecxz
fist
fmul
xchg
stc
jge
fdiv
add
cdq
mov
mov
pop
das
jns
pop
xor
(bad)
loope
ds
hlt
inc
dec
loopne
mov
icebp
sahf
jno
fsub
hlt
lea
inc
fidiv
add
adc
stos
dec
cmp
push
cmp
dec
or
js
mov
and
dec
pop
mov
xchg
ja
push
aam
outs
mov
lds
xor
retfw
clc
xlat
inc
fmul
call
ds
cdq
push
ret
mov
nop
call
sbb
in
inc
scas
(bad)
jmp
and
xchg
fldcw
and
call
cld
retf
push
lock
sub
push
aas
movs
xor
and
sti
sbb
jle
fadd
cmp
in
mov
mov
movs
or
ins
mov
push
push
sub
mov
loope
jno
pusha
mov
shl
lock
mov
shl
adc
leave
mov
jo
cmp
scas
popa
mov
imul
movs
clc
sbb
retf
or
adc
in
or
ins
push
mov
xchg
stos
jno
inc
cmp
mov
scas
mov
(bad)
aad
icebp
in
mov
cmp
inc
dec
shl
pop
mov
jmp
call
mov
sbb
(bad)
xor
xchg
push
clc
xor
mov
jno
jg
(bad)
xor
(bad)
js
sbb
inc
mov
xchg
mov
mov
and
call
jno
repnz
pop
sub
imul
and
sbb
gs
push
je
icebp
fild
scas
xor
shr
pusha
dec
or
or
push
or
jb
in
push
xchg
in
xor
push
js
scas
xor
jp
sbb
je
jmp
jae
mov
ds
test
sub
(bad)
pop
cmc
mov
xor
std
in
jl
add
mov
mov
jnp
lahf
test
dec
adc
pop
or
xlat
popf
jno
mov
jmp
idiv
xor
out
jns
ins
imul
inc
cs
lock
cmp
push
inc
cmp
shl
into
loopne
xor
mov
ret
xor
jecxz
ficom
cmp
push
loopne
xlat
sbb
aad
(bad)
add
inc
cmp
pusha
jno
jno
das
sbb
pop
adc
ret
jno
jge
in
cld
inc
jb
pop
ds
pop
push
mov
push
loopne
lods
neg
mov
xor
mov
cmp
test
aaa
jl
sbb
(bad)
pop
xchg
cmp
push
fwait
retf
cmp
(bad)
cmp
add
fild
and
js
mov
out
rcl
test
ja
jns
sub
test
xor
mov
and
aam
(bad)
out
xor
mov
sbb
pop
mov
shl
cmp
xchg
and
mov
stos
jecxz
call
push
inc
out
mov
fidivr
lods
add
out
cdq
inc
mov
mov
mov
lds
xchg
stc
dec
mov
push
aam
test
shl
inc
iret
int3
pusha
push
jb
dec
cs
cmps
push
lea
icebp
shl
xor
loope
loope
popa
dec
pop
icebp
loope
aam
popa
inc
and
loope
aad
popa
pusha
or
loope
jmp
repnz
adc
shl
cmp
repnz
not
loope
(bad)
repnz
shl
shl
fptan
popa
repnz
shl
add
lock
mov
repnz
retf
loope
mov
loope
lock
test
shl
cmps
mov
loope
out
shl
xchg
xchg
repnz
scas
hlt
shl
test
shl
test
shl
test
loope
lahf
repnz
aad
shl
test
shl
test
shl
test
shl
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
test
loope
(bad)
repnz
lock
test
shl
test
loope
lock
test
popa
fdiv
shl
test
loope
lock
test
popa
jecxz
shl
test
loope
lock
je
loope
movs
shl
test
repnz
int
shl
test
shl
sub
loope
(bad)
shl
hlt
repz
in
loope
call
shl
test
repz
lock
xchg
repz
sub
shl
add
lock
add
lock
add
lock
add
lock
addr16
into
cmc
shl
fld
repz
adc
shl
test
repz
lock
test
repz
mov
retf
enter
fmul
repz
sbb
shl
stos
repz
(bad)
lock
into
lods
repz
lock
lods
repz
not
popa
mov
sti
shl
mov
push
dec
mov
shl
icebp
shl
popf
push
pop
mov
shl
repz
or
rcl
rcl
enter
ret
rcl
int3
push
jno
(bad)
rcr
rcl
ret
mov
push
pop
or
rcl
enter
(bad)
or
rcl
enter
ret
push
push
or
push
jno
enter
rcl
mov
push
pop
or
rcr
or
push
push
or
shl
icebp
rcr
fcmovnbe
push
or
rcl
retf
push
jno
vcvtdq2ps
aad
push
or
rcl
lds
mov
push
addr16
shl
icebp
push
inc
(bad)
rcl
mov
rcl
leave
div
push
std
or
das
(bad)
div
push
and
push
das
sbb
icebp
push
and
icebp
rcl
mov
shl
ror
div
push
hlt
or
scas
push
icebp
push
cmp
push
das
sbb
icebp
sar
icebp
shl
rcl
out
rcl
mov
ror
div
push
icebp
or
scas
ret
push
and
push
das
sbb
icebp
rcr
(bad)
icebp
push
and
push
daa
mov
rcl
div
push
sbb
push
das
shl
shl
push
scas
popa
mov
shl
icebp
push
(bad)
xchg
icebp
shl
push
rcl
and
shl
rcl
div
shl
or
scas
push
icebp
push
dec
or
das
sbb
icebp
shr
into
icebp
push
fs
rcl
popa
mov
shl
icebp
push
shl
sar
or
scas
push
icebp
push
popa
or
scas
popa
mov
shl
icebp
rcr
stc
icebp
shl
cli
rcl
sti
rcl
imul
shr
or
das
movs
div
sar
or
scas
sbb
icebp
push
cs
push
lods
scas
rcl
out
shr
rcl
shl
rcr
or
das
push
icebp
push
or
scas
popa
mov
shr
icebp
push
cs
icebp
push
fs
rcl
popa
mov
shl
icebp
push
shl
sar
or
scas
push
icebp
push
popa
or
scas
popa
mov
sar
push
cs
icebp
push
fs
rcl
popa
mov
shl
icebp
push
shl
sar
or
scas
push
icebp
push
popa
or
scas
popa
mov
sar
icebp
push
sar
push
iret
std
rcl
(bad)
rcl
mov
push
shl
shr
or
scas
fdivp
icebp
sar
or
scas
popa
mov
rol
icebp
rcl
repz
ins
cmc
rcl
mov
ror
div
shl
or
scas
push
icebp
push
daa
or
scas
popa
mov
rol
icebp
shr
into
icebp
push
fs
rcl
popa
mov
shl
icebp
push
shl
sar
or
scas
push
icebp
push
popa
or
scas
popa
mov
rol
icebp
push
and
rcl
cmp
rcl
or
rol
div
shl
or
scas
fcomi
icebp
sar
or
das
sbb
icebp
shr
into
icebp
push
shl
arpl
icebp
sar
or
scas
push
icebp
push
popa
or
scas
popa
mov
ror
icebp
shr
into
icebp
push
iret
movs
rcl
mov
shl
rcl
div
shr
or
das
(bad)
div
push
popa
or
scas
popa
mov
rcl
icebp
shr
into
icebp
push
fs
rcl
popa
mov
shl
icebp
push
shl
sar
or
scas
push
icebp
push
popa
or
scas
popa
mov
rcl
icebp
shr
into
icebp
push
fs
rcl
popa
mov
shl
icebp
push
shl
sar
or
scas
push
icebp
push
popa
or
scas
popa
mov
rcl
icebp
shr
into
icebp
push
fs
rcl
popa
mov
shl
icebp
push
shl
sar
or
scas
push
icebp
push
popa
or
scas
popa
mov
rcr
icebp
shr
into
icebp
push
frstor
rcl
arpl
icebp
shr
or
das
push
icebp
push
cmp
push
scas
popa
mov
shl
mov
shr
into
icebp
push
fs
rcl
popa
mov
shl
icebp
push
shl
sar
or
scas
push
icebp
push
popa
or
scas
popa
mov
shl
mov
push
cs
icebp
push
fs
rcl
popa
mov
shl
icebp
push
shl
sar
or
scas
push
icebp
push
popa
or
scas
popa
mov
shl
mov
push
cs
icebp
push
fs
rcl
popa
mov
shl
icebp
push
shl
sar
or
scas
push
icebp
push
popa
or
scas
popa
mov
shr
mov
shr
into
icebp
push
fs
rcl
popa
mov
shl
icebp
push
shl
sar
or
scas
push
icebp
push
popa
or
scas
popa
mov
shl
mov
push
cs
icebp
push
fs
rcl
popa
mov
shl
icebp
push
shl
sar
or
scas
push
icebp
push
popa
or
scas
popa
mov
sar
mov
rol
icebp
rcl
rcl
in
shr
rcl
shl
shr
or
das
ret
push
and
push
scas
sbb
icebp
push
cs
icebp
push
fs
rcl
popa
mov
shl
icebp
push
shl
sar
or
scas
push
icebp
push
popa
or
scas
popa
mov
sar
mov
push
cs
icebp
push
fs
rcl
popa
mov
shl
icebp
push
shl
sar
or
scas
push
icebp
push
popa
or
scas
popa
mov
rol
into
icebp
push
fs
rcl
popa
mov
shl
icebp
push
shl
sar
or
scas
push
icebp
push
popa
or
scas
popa
mov
ror
mov
shr
into
icebp
push
fs
rcl
popa
mov
shl
icebp
push
shl
sar
or
scas
push
icebp
push
popa
or
scas
popa
mov
ror
into
icebp
push
test
rcl
mov
push
arpl
icebp
sar
or
scas
cld
div
shl
push
scas
popa
mov
ror
mov
push
or
icebp
push
push
rcl
push
and
rcl
push
div
shl
or
scas
push
icebp
push
or
das
sbb
icebp
push
test
icebp
shl
icebp
rcl
jp
rcl
div
rcr
or
das
cmps
div
push
cmp
push
scas
sbb
icebp
push
jnp
icebp
rol
rcl
mov
shr
rcl
shl
shl
or
scas
shl
sar
or
scas
sbb
icebp
push
inc
or
pop
sub
popa
mov
push
jno
loope
retf
icebp
mov
or
mov
or
pop
sub
popa
mov
test
pop
sub
popa
mov
out
leave
icebp
jmp
icebp
call
xor
mov
push
fisttp
dec
fidiv
je
loope
retf
icebp
popa
cld
icebp
shl
int3
sub
and
popa
or
icebp
popa
cld
icebp
shl
popa
aad
add
inc
or
pop
sub
push
inc
into
jno
sahf
add
sub
pop
sub
add
jno
cmps
push
xor
popa
mov
and
dec
retf
icebp
ja
rcl
pusha
icebp
rcl
mov
add
or
mov
inc
or
mov
clc
std
rcl
(bad)
mov
retf
icebp
loope
icebp
shl
mov
retf
icebp
popa
mov
mov
fbld
loopne
jmp
jno
loope
inc
hlt
pop
sub
out
icebp
push
popa
or
lds
int
popa
es
rcl
inc
in
popa
mov
(bad)
push
cmp
loop
cdq
dec
loop
and
inc
stos
fnstcw
or
jbe
mov
lock
mov
icebp
rcr
or
sbb
or
mov
mov
icebp
icebp
shl
mov
push
loope
retf
icebp
dec
mov
push
mov
lahf
dec
aad
pop
sub
mov
into
jno
adc
jmp
mov
sbb
icebp
push
push
mov
lock
mov
icebp
rcr
or
sbb
icebp
in
xchg
icebp
push
inc
or
jmp
jno
popa
jbe
hlt
stos
xor
inc
enter
jne
push
mov
mov
push
loope
icebp
shl
jmp
xor
retf
icebp
loope
icebp
rcr
jae
popa
mov
sar
mov
popa
or
inc
or
and
aad
inc
or
jmp
jno
popa
mov
imul
loope
inc
hlt
jns
sar
popa
mov
rol
jno
inc
or
push
invd
adc
loope
icebp
shl
shl
inc
or
jmp
xchg
or
call
stos
ins
pop
shl
mov
or
push
inc
lock
sbb
adc
loope
icebp
rol
xor
lods
push
mov
shl
into
shr
iret
jno
loope
inc
hlt
sub
and
mov
in
mov
shl
cmp
pop
movs
sub
push
dec
loopne
push
jmp
pop
das
popa
aam
hlt
popa
mov
adc
div
in
or
xchg
dec
mov
(bad)
shl
(bad)
scas
xor
popa
and
icebp
ret
xor
ror
rcl
jmp
jno
loope
inc
hlt
inc
or
jmp
jno
loope
imul
out
icebp
push
popa
or
shl
mov
rcl
xchg
retf
icebp
test
push
sbb
inc
or
in
mov
std
sub
dec
mov
mov
and
push
jmp
jns
loope
ins
icebp
movs
sbb
inc
or
sti
std
sub
dec
xchg
test
and
push
jmp
popa
adc
dec
ins
icebp
movs
sbb
inc
or
push
push
shl
mov
repz
icebp
shl
retf
fscale
sub
je
icebp
fs
mov
rcr
adc
dec
popa
xor
rcr
or
pop
test
icebp
movs
ror
comiss
sub
pop
xor
das
popa
cmp
icebp
inc
or
jmp
push
loopne
cmp
icebp
inc
or
jmp
mov
rcl
popa
cld
retf
icebp
lahf
mul
cwde
test
icebp
fs
adc
push
cmp
cs
or
ret
inc
jmp
push
xchg
imul
shl
inc
or
jo
mov
aad
rcl
popa
cld
retf
icebp
lahf
test
xchg
in
rcr
mov
push
lea
inc
mov
aad
imul
xchg
repz
or
jecxz
push
xor
mov
icebp
loope
icebp
rcr
out
neg
icebp
push
dec
xor
ror
rcl
sti
test
loope
retf
icebp
loop
jae
push
mov
clc
sahf
add
inc
or
shl
rcl
mov
push
inc
or
rcl
adc
mov
rcl
mov
shr
dec
sahf
adc
inc
or
xor
dec
xchg
loopne
shl
ja
rcr
imul
in
jno
popa
aad
hlt
popa
mov
shl
test
iret
jecxz
popa
or
rol
mov
popa
or
or
arpl
icebp
shl
mov
push
jl
das
or
and
jns
cmp
jbe
inc
or
xchg
push
imul
or
(bad)
push
push
add
inc
mov
push
xchg
or
sub
sub
xchg
jae
add
clc
inc
sub
xchg
fs
ins
push
and
dec
or
mov
sub
xor
inc
movs
mov
retf
and
push
dec
mov
sub
xchg
xlat
ins
or
lds
xchg
xlat
mov
xor
xchg
or
sub
sub
pop
mov
push
(bad)
xlat
fldcw
sbb
or
neg
adc
scas
neg
imul
or
out
out
ds
stc
and
ins
or
mov
xchg
in
mov
in
int
xlat
pop
shl
push
ins
or
xlat
fisttp
shr
xchg
xlat
setle
xchg
push
jns
rol
mov
xchg
jae
add
jae
mov
imul
sbb
inc
sub
ficom
test
mov
push
sub
leave
and
stc
xchg
mov
pop
cdq
(bad)
mov
adc
mov
mov
js
loop
repz
mov
jae
loop
sub
lahf
mov
not
ins
mov
xlat
sub
shl
repz
push
pop
ins
je
hlt
in
or
out
mov
jg
lahf
push
mov
leave
lock
retf
jb
retf
push
xchg
adc
mov
xlat
mov
pop
mov
loopne
jo
scas
rcl
comiss
adc
js
sub
cld
xlat
stos
outs
dec
(bad)
jp
xchg
mov
js
(bad)
ins
or
xlat
xchg
or
push
es
adc
mov
sbb
push
popa
push
lock
pop
jp
or
jns
jns
push
sbb
xchg
sbb
push
sub
and
retf
mov
mov
mov
add
sahf
sbb
push
xor
cmc
aad
dec
jmp
push
nop
jns
adc
cli
hlt
mov
rcl
sub
push
jmp
out
outs
arpl
sbb
dec
cwde
mov
int
mov
inc
pop
dec
push
sbb
cmp
shr
iret
cmp
jns
xor
add
nop
adc
xchg
mov
jns
push
xchg
(bad)
mov
mov
cmps
push
adc
ins
mov
or
in
jno
push
xchg
jae
inc
xchg
mov
or
jmp
imul
dec
shl
xchg
add
adc
sti
push
xchg
pcmpgtw
sub
inc
jne
lahf
loop
mov
out
test
ss
inc
sub
(bad)
out
test
sar
cmp
inc
mul
cmp
mov
data16
aaa
jmp
shl
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
push
xchg
(bad)
popa
xchg
(bad)
jb
stc
das
dec
xchg
mov
ret
retf
shl
push
cs
cmp
sbb
push
es
xor
(bad)
repz
rcl
mov
push
lea
mov
cmps
repnz
push
mov
sub
push
xchg
jl
pop
xchg
(bad)
repnz
dec
or
leave
push
sub
sub
xor
cmps
repnz
pop
pop
adc
repnz
das
dec
xchg
cmps
repz
js
jecxz
test
adc
xor
jmp
lock
out
push
cs
mov
in
xchg
daa
pop
sub
lock
and
pop
or
lock
popa
and
push
cmps
outs
xchg
das
pop
mov
hlt
ror
mov
pop
cs
shl
call
(bad)
hlt
shl
mov
bound
or
rcl
dec
aad
and
rcl
xchg
xor
in
push
ret
push
push
xor
push
int
xchg
push
dec
out
movs
repnz
out
cmp
xchg
shl
inc
repnz
repnz
stos
cmp
inc
imul
lods
xchg
loopne
dec
mov
push
repz
xchg
sbb
movs
inc
(bad)
ins
push
scas
xor
xor
xchg
push
sbb
sbb
xchg
mov
dec
imul
mov
mov
push
or
scas
test
xor
(bad)
enter
adc
in
in
xchg
xlat
mov
xchg
imul
gs
sub
push
arpl
jo
mov
dec
mov
mov
xchg
push
nop
stc
mov
stos
je
mov
int
xlat
sbb
push
mov
lods
js
and
cwde
xchg
mov
adc
push
mov
xchg
jne
jecxz
jb
retf
add
xor
ret
mov
(bad)
sub
xlat
push
or
or
sub
push
imul
cdq
adc
in
stc
xchg
xlat
shr
mov
into
call
jl
push
hlt
ds
jecxz
int
mov
xchg
jae
sub
push
imul
dec
mov
push
mov
retf
leave
mov
push
outs
or
fs
push
mov
xchg
js
retf
sub
fmul
dec
mov
imul
int3
std
ror
mov
add
mov
mov
mov
daa
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
push
test
shl
mov
mov
mov
xor
mov
xor
mov
mov
pop
inc
and
xor
mov
mov
jo
mov
and
mov
mov
mov
xor
pop
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
mov
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
xor
mov
int3
cli
adc
loopne
mov
xor
push
or
test
nop
cmps
inc
xor
mov
sub
sar
dec
pop
jecxz
scas
add
or
inc
mov
loopne
sbb
data16
jae
pop
and
loopne
push
adc
cmp
pop
and
lahf
mov
adc
fldenv
pop
fnstcw
jae
pop
and
loopne
push
adc
adc
int3
cli
pop
or
pusha
sub
rol
and
loopne
mov
mov
pop
adc
pop
fwait
or
mov
arpl
mov
addr16
cmp
push
pusha
out
rol
and
loopne
mov
mov
pop
sub
cmp
mov
arpl
adc
cmps
in
cmp
push
in
rol
loop
xor
cld
sub
fst
loopne
and
loopne
mov
mov
scas
push
mov
addr16
cmp
lods
pop
loopne
imul
pop
and
loopne
cwde
mov
push
xchg
fwait
pop
add
xchg
and
aad
inc
mov
push
add
pop
(bad)
jns
fwait
sub
inc
loope
call
call
xor
and
mov
inc
lods
sub
xchg
cmps
addr16
addr16
xor
and
mul
arpl
repnz
add
nop
inc
push
movs
dec
xchg
and
xor
call
mov
nop
mov
adc
fwait
cmp
cmc
jp
and
pusha
mov
xor
xchg
ret
or
mov
leave
inc
mov
(bad)
loope
cld
enter
sahf
sbb
dec
fidivr
shl
cwde
fisub
adc
pop
pusha
sub
xchg
or
xchg
push
mov
rcl
aas
repnz
xchg
and
xor
adc
push
cmp
inc
movs
push
dec
in
loopne
popf
lahf
and
add
mov
jb
lahf
daa
aaa
add
mov
mov
andnps
push
ficomp
sar
aaa
loopne
std
dec
mov
and
add
push
mov
cmp
dec
sub
or
stc
push
aaa
loopne
std
dec
mov
and
es
test
xor
test
push
ret
add
xor
and
and
popa
push
arpl
stos
push
es
mov
pop
and
and
into
cmps
and
int3
jp
pop
adc
fwait
mov
daa
daa
mov
adc
fwait
mov
daa
fstp
jp
pop
adc
fwait
mov
daa
mov
dec
dec
loopne
ds
fnstcw
int3
jmp
jbe
shr
and
cmps
loopne
push
xchg
aam
pusha
loope
jb
and
leave
mov
xor
pop
xor
mov
or
or
hlt
cmps
cmp
adc
or
rcr
ja
or
imul
sub
loopne
gs
ds
cmc
lock
lahf
and
in
int3
not
push
das
or
aam
and
in
jns
xlat
adc
adc
cmp
mov
ja
push
cmp
(bad)
scas
sbb
test
std
jno
cmp
dec
nop
nop
sbb
lods
cmc
imul
inc
repnz
adc
loop
imul
dec
xor
jae
inc
ins
or
sahf
xchg
not
push
xchg
stc
(bad)
jo
fld
or
or
jecxz
test
and
adc
mov
loop
xchg
stc
in
rcl
imul
popf
xchg
adc
and
mov
lods
push
add
or
dec
jecxz
push
push
push
lods
jo
sub
ins
push
ins
sub
arpl
ret
mov
ds
int
and
ins
jmp
in
push
dec
add
fdivr
ins
or
cli
fimul
push
sub
jb
imul
lods
mov
sbb
push
ins
mov
shl
sahf
push
mov
xchg
std
sub
shr
sub
das
cmps
ins
or
mov
lods
jo
sub
cmp
xchg
js
sub
pop
push
cs
aas
lods
nop
shr
mov
or
fcomp
pop
retf
in
dec
hlt
xchg
mov
adc
stos
shl
or
pop
xor
loop
cmc
in
and
jbe
and
xor
daa
xchg
(bad)
pop
pop
sub
or
pop
xchg
sbb
movs
mov
imul
jbe
adc
bound
aad
xchg
rol
ret
push
cmp
inc
sahf
xchg
xlat
pop
mov
arpl
adc
and
iret
xor
fxtract
call
xor
(bad)
sahf
xchg
ret
push
pop
adc
xchg
ret
bound
inc
push
cmp
rcl
mov
mov
daa
xor
mul
jo
push
loop
repz
xor
xor
mov
(bad)
je
pop
adc
cmp
test
jbe
and
test
neg
and
inc
xchg
push
fs
ins
mov
pop
in
push
jmp
mov
lahf
push
mov
cmp
outs
and
sbb
inc
repz
inc
mov
push
sahf
ins
or
xlat
cmps
or
mov
ja
adc
movs
stos
and
push
push
jns
mov
das
in
pop
push
xchg
clc
sbb
ins
mov
xlat
adc
xchg
or
xor
mov
lea
dec
repz
pop
lods
js
push
xchg
mov
and
xchg
cwde
lods
xchg
push
jecxz
retf
dec
inc
or
or
xchg
or
mov
adc
push
and
outs
fild
repz
mov
xchg
clc
nop
or
and
ja
outs
scas
xchg
iret
xor
push
imul
lahf
shl
pop
repz
mov
out
xchg
mov
dec
imul
xchg
js
pushf
xchg
repz
and
in
push
jmp
repnz
jmp
nop
in
mov
inc
jbe
xchg
fdiv
mov
jne
arpl
push
push
ins
xchg
xchg
jae
jae
xor
adc
mov
mov
cmp
and
call
sub
jno
dec
mov
mov
rcl
sti
mov
and
mov
ret
and
mov
ins
mov
lods
inc
add
jo
cmp
aaa
aam
inc
mov
cmp
inc
mov
(bad)
stos
mov
push
fldcw
cmp
inc
dec
mov
movs
ins
jmp
xchg
fldenv
not
jno
leave
popf
mov
push
push
sti
push
ins
or
xlat
pop
cmp
mov
inc
cmps
(bad)
out
das
adc
push
jmp
hlt
pop
cld
xor
inc
push
or
mov
push
icebp
dec
jbe
call
imul
repz
jb
push
mov
or
xchg
js
sub
ret
jns
mov
jns
into
enter
outs
push
xlat
mov
jb
push
lods
js
push
mov
xchg
or
int
xlat
cwde
and
dec
sub
jg
mov
xor
lds
mov
cmps
test
push
push
mov
mov
jecxz
ins
rcl
movs
jne
jecxz
in
sahf
retf
pop
mov
xor
adc
adc
sub
stos
mov
adc
dec
sbb
jmp
in
dec
sub
retf
inc
add
and
imul
add
or
cld
jno
jmp
jne
popf
mov
push
sbb
pop
mov
or
mov
mov
push
xor
xchg
push
xchg
stc
xchg
bnd
dec
mov
mov
jecxz
in
shr
hlt
inc
jo
mov
in
jnp
or
jno
sub
sar
dec
or
lods
retf
aas
adc
imul
jo
imul
sub
mov
sbb
jo
mov
or
jmp
or
mov
das
and
xor
push
cmp
add
cwde
cdq
adc
cdq
mov
add
hlt
sbb
add
aas
sahf
movs
hlt
cmp
mov
ds
test
aas
movs
repz
mov
ret
mov
ja
cmp
cmp
jo
mov
or
xor
mov
pushf
rol
(bad)
mov
sub
jo
rol
daa
inc
xchg
mov
mov
add
xchg
cmp
sub
movs
ficomp
xchg
jae
sbb
ins
push
and
ins
mov
xchg
adc
or
in
pushf
scas
movs
push
shr
jns
xlat
pop
test
dec
push
adc
daa
fcmovne
jb
adc
into
retf
push
adc
imul
js
mov
icebp
xlat
jbe
retf
sahf
sbb
jmp
push
jne
mov
fisttp
repz
sub
or
fucom
jo
mov
das
imul
push
repnz
push
mov
push
adc
std
ins
mov
xlat
sub
arpl
mov
lods
lock
push
jbe
push
in
mov
or
and
lds
hlt
out
sbb
xchg
sbb
dec
adc
or
jo
dec
imul
jns
iret
dec
div
or
repz
aad
add
dec
push
push
and
sub
push
imul
ror
retf
xor
push
imul
(bad)
in
adc
(bad)
out
retf
test
stc
imul
mov
push
sub
stc
xchg
xlat
sbb
retf
pop
mov
imul
mov
imul
(bad)
repz
and
imul
lods
stc
push
mov
adc
aaa
xchg
jae
sub
mov
xchg
repz
es
(bad)
xor
fisttp
pop
pop
retf
call
ins
pop
jecxz
mov
rcl
leave
inc
out
aaa
outs
out
and
in
rol
aaa
mov
hlt
retf
jmp
leave
inc
addr16
cwde
sbb
cwde
xchg
daa
dec
dec
adc
or
pop
stc
sub
push
jge
jns
mov
cdq
int3
mov
xchg
dec
pop
sub
das
or
scas
mov
xchg
xlat
mov
xchg
loope
xchg
push
xchg
adc
int3
jmp
sbb
imul
and
jmp
repz
ss
addr16
xchg
fcom
stos
xchg
xchg
fnstenv
cmp
out
adc
in
in
xchg
xlat
mov
pushf
xor
push
ficom
imul
push
ins
and
mov
sbb
ror
or
test
arpl
jmp
movs
and
loope
push
in
rcl
repz
arpl
adc
cwde
test
sub
scas
leave
in
lods
push
or
jns
mov
lods
jo
add
jecxz
and
in
stc
xchg
xlat
fs
mov
mov
xor
sbb
mov
mov
ss
sub
push
or
cli
imul
ins
or
call
jb
xchg
repz
sub
(bad)
(bad)
push
cdq
jl
retf
xchg
js
sub
scas
leave
les
dec
push
xchg
repz
xchg
jae
inc
sbb
mov
jae
xor
mov
hlt
ins
rcr
mov
sub
jecxz
xor
dec
sub
xlat
outs
(bad)
(bad)
dec
jmp
dec
rol
jg
jnp
pminsw
mov
push
loope
icebp
neg
test
xor
inc
popa
rcr
inc
mov
push
pusha
popa
(bad)
pop
add
mov
loope
sar
popf
icebp
adc
icebp
jno
popf
icebp
jno
push
jmp
loope
icebp
into
jecxz
sti
jno
mov
shr
inc
mov
sbb
inc
popa
retf
and
jno
arpl
xchg
inc
loope
mov
sub
mov
stc
sub
les
push
inc
jp
mov
stc
test
cmp
push
es
xlat
push
adc
adc
jle
and
mov
xchg
and
dec
cmp
sbb
pusha
xchg
ins
mov
mov
jo
dec
jmp
hlt
ins
or
int
enter
or
xlat
repz
push
pop
in
fs
hlt
in
or
ins
mov
dec
out
rcl
in
rol
stc
aaa
repnz
sbb
push
cs
je
push
push
mov
push
repz
mov
mov
and
adc
rol
xchg
adc
xchg
xchg
mov
push
push
adc
in
clc
xchg
xlat
ins
mov
xlat
ins
or
push
pusha
xchg
push
mov
cwde
xor
sub
loop
cmc
int
mov
nop
stc
(bad)
jmp
in
scas
dec
jmp
cwde
call
rcr
push
stos
retf
ja
test
mov
aaa
shl
add
loop
ins
or
leave
or
cmps
out
xchg
jns
add
add
retf
je
arpl
jo
ja
rcl
shl
test
adc
stc
and
cwde
shr
je
scas
dec
imul
jae
test
dec
cmp
lods
jo
sub
ds
push
xchg
push
imul
mov
xor
mov
imul
iret
or
push
test
push
cdq
adc
xlat
adc
sub
add
bound
push
imul
xor
inc
ja
outs
sub
adc
or
mov
jo
mov
inc
or
mov
(bad)
cmc
ds
shr
xor
jo
cmc
mov
jo
cwde
movs
jno
cmp
mov
(bad)
cmc
mov
push
mov
paddd
mov
(bad)
int3
mul
(bad)
cmc
retf
cmp
or
jbe
jne
lods
lock
push
(bad)
int3
mul
mov
retf
je
dec
add
aas
mov
jo
mov
push
xor
lock
jp
xor
lock
mov
inc
add
mov
inc
mov
add
aas
xor
lock
test
or
mov
mov
inc
or
jl
cmc
ds
cs
or
shr
dec
stos
lock
cmps
lock
and
repnz
jo
xor
adc
sub
jo
xor
movd
jge
sub
leave
pop
and
movs
lds
push
aad
out
xchg
push
sbb
and
in
int
xlat
fldenv
not
ins
push
and
fwait
dec
cmp
outs
mov
test
mov
xchg
int3
pop
sub
das
or
stc
xchg
(bad)
xchg
push
shr
jns
xlat
inc
mov
jmp
lea
shl
mov
scas
sbb
xchg
xlat
dec
jb
pop
sub
aas
cmc
jo
or
jb
ins
mov
jo
sub
mov
mov
jo
test
imul
in
in
xchg
xlat
jmp
dec
imul
ins
mov
xlat
nop
(bad)
dec
nop
fimul
and
push
jne
jecxz
xor
xchg
xlat
pop
jae
sbb
dec
in
rcl
xlat
dec
loop
mov
or
rcl
scas
leave
mov
add
jae
or
lods
sub
out
jns
mov
xchg
sub
pushf
inc
daa
retf
movs
mov
inc
loop
ins
shr
test
push
push
sahf
dec
jb
jns
mov
mov
ds
icebp
xlat
mov
mov
adc
push
inc
aaa
retf
mov
shr
iret
xor
jae
sub
arpl
mov
or
adc
mov
imul
sbb
push
xchg
mov
cdq
sub
xlat
xchg
js
sub
sbb
xor
mov
sahf
jns
sbb
mov
mov
push
mov
scas
nop
stos
std
push
stos
ret
ret
jge
nop
xchg
std
rcl
cwde
jge
adc
jge
nop
popf
std
jmp
dec
fdiv
stos
retf
stos
iret
jmp
(bad)
push
stos
fucomip
sub
jmp
iret
jmp
iret
push
sub
jmp
iret
jmp
iret
jmp
jge
nop
call
nop
mov
ficom
pushf
std
jmp
std
pop
adc
dec
dec
sbb
xchg
adc
push
rcl
(bad)
adc
push
push
xchg
fs
sub
leave
jmp
add
out
add
push
pop
(bad)
jmp
add
jg
and
ja
adc
and
sbb
std
push
shl
jl
push
retf
jmp
stos
mov
mov
push
mov
std
push
mov
fist
sar
inc
ins
push
neg
and
sub
std
jmp
std
push
aam
test
sub
xchg
jb
std
jmp
std
push
aam
test
sub
xchg
outs
push
adc
push
push
sub
pop
push
jmp
add
nop
stos
sbb
adc
sbb
loopne
sub
push
sbb
retf
std
pop
adc
dec
dec
sbb
xchg
adc
(bad)
movs
stos
std
ficom
stos
enter
add
movs
sub
outs
push
jge
and
or
aad
lahf
imul
out
cmp
xchg
sbb
jmp
dec
sub
xchg
stos
lahf
clc
adc
push
imul
inc
mov
jp
stos
sub
push
mov
fsubrp
mov
test
add
outs
push
fisubr
sub
repz
and
or
les
and
ins
or
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
sub
push
jge
push
(bad)
mov
das
ficom
adc
js
sub
cdq
aas
out
das
inc
inc
repnz
push
push
lods
adc
in
imul
(bad)
adc
imul
ss
dec
ins
mov
xlat
out
mov
in
or
imul
out
xchg
xlat
or
push
ins
mov
xlat
repz
pop
ins
sub
clc
ins
mov
retf
push
mov
dec
enter
ret
adc
xchg
xchg
ja
ins
ins
mov
xchg
xchg
lds
push
xchg
jb
or
mov
push
xchg
stc
push
sub
mov
pop
sub
add
inc
das
mov
lods
lock
push
sub
in
rcl
push
lods
jo
dec
das
push
push
push
in
clc
xchg
xlat
ins
or
xlat
outs
push
push
mov
jmp
rcl
mov
sub
(bad)
push
shl
xchg
mov
ins
ja
popa
clc
retf
imul
push
ins
sub
clc
ins
mov
dec
nop
push
xrelease
pop
shl
dec
push
xor
push
xchg
stc
jne
dec
jmp
or
rcl
jmp
outs
jecxz
(bad)
jmp
add
mov
xchg
mov
retf
adc
push
imul
fbld
push
mov
imul
xchg
ins
imul
ins
push
push
push
adc
stc
mov
adc
adc
mov
imul
xchg
repz
shl
cs
jae
xchg
dec
or
jmp
push
stc
mov
inc
jns
fcomp
xchg
and
push
xor
stc
push
sbb
xchg
and
retf
push
push
in
call
xchg
js
xlat
repz
xchg
mov
jl
scas
mov
dec
sub
enter
out
dec
stos
sbb
das
adc
mov
ins
dec
xchg
out
inc
mov
xor
fild
push
call
shl
outs
jns
adc
aaa
or
shl
add
dec
push
or
mov
xchg
pop
pop
mov
mov
out
inc
mov
mov
icebp
retf
mov
adc
into
mov
cmp
aaa
xchg
outs
lds
lahf
push
push
add
inc
das
xchg
push
dec
movs
xor
iret
mov
adc
das
or
retf
and
inc
loopne
call
cmps
xchg
imul
adc
mov
adc
int
call
(bad)
cmp
das
xchg
enter
call
shl
ja
mov
nop
fcomp
mov
xchg
repz
and
call
leave
scas
and
retf
push
scas
mov
retf
and
in
add
loope
sub
outs
iret
and
jnp
push
xor
jmp
sub
popa
out
and
push
movs
lahf
pop
stc
or
pop
jns
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
cmp
and
mov
fisub
mov
mov
push
stc
cli
jne
pop
stc
mov
ins
jns
and
mov
mov
jl
jmp
sti
cli
push
mov
sbb
push
int
xchg
mov
pop
ret
ficomp
rcr
adc
and
xchg
push
ret
(bad)
push
lods
add
fstp
jb
xchg
push
int
xchg
mov
pop
ret
jp
cdq
push
mov
xchg
mov
pop
dec
xchg
xchg
pop
jns
and
imul
mov
outs
push
loop
stc
adc
cmps
fmul
clc
and
cli
push
mov
pop
stc
aam
fisubr
mov
mov
push
pop
stc
mul
int
jne
pop
stc
mov
ins
pop
xchg
and
mov
pop
ins
jns
and
retf
imul
jnp
or
and
pusha
push
(bad)
xchg
sub
xchg
push
shr
pop
(bad)
test
pop
jnp
into
movs
pushf
cld
jne
int3
stc
mov
sahf
jnp
mov
ret
(bad)
push
adc
jmp
jecxz
stc
adc
and
das
add
fdivr
mov
pop
pop
xchg
out
test
cdq
loop
mov
clc
xchg
mov
pop
rcl
add
jmp
cmps
repz
jl
dec
xchg
fadd
xlat
pop
ret
(bad)
push
adc
jmp
loop
stc
adc
loope
addr16
mov
sbb
movs
pop
int3
xchg
and
push
xchg
push
jmp
repnz
stc
push
cmps
pop
jns
and
mov
(bad)
or
shl
push
fcomp
and
popf
jecxz
retf
push
ret
cli
push
mov
pop
stc
dec
and
das
push
in
mov
or
pop
inc
xchg
mov
lods
jg
mov
loop
jmp
jns
loop
jnp
stos
jnp
or
cmp
mov
jnp
inc
cmps
fadd
push
pop
(bad)
int
jecxz
ret
movs
pop
(bad)
frstor
pusha
ret
movs
pop
inc
into
cmp
push
mov
jecxz
ret
mov
jecxz
ret
mov
inc
fidiv
jp
mov
inc
fimul
jecxz
inc
and
jno
xor
cmps
jae
mov
nop
cld
imul
jl
gs
pop
push
mov
test
add
imul
cmps
arpl
movs
xchg
imul
cmps
xchg
(bad)
or
shl
push
(bad)
cmp
fcmovnu
or
stc
shl
cli
push
mov
ret
(bad)
mov
xchg
mov
jecxz
retf
jns
and
and
mov
mov
jns
and
retf
and
jecxz
leave
jns
and
retf
and
mov
mov
xlat
cli
push
mov
ret
(bad)
mov
xchg
mov
pop
xchg
mov
fdivr
xchg
xor
dec
jp
fdivr
xchg
xor
dec
jl
fdivr
xchg
xor
aas
clc
push
lock
rol
(bad)
sbb
pop
fcmovnu
adc
pop
jns
and
sbb
mov
pop
stc
mov
or
add
(bad)
inc
jg
adc
rcr
and
pop
mov
jp
jp
pop
jns
and
pop
mov
fdivr
clc
push
lock
rol
(bad)
sbb
pop
popa
fcom
fadd
xchg
push
in
fstp
xchg
inc
push
bnd
mov
shl
pop
jns
inc
sbb
out
ror
jns
and
jns
and
jns
and
cmp
mov
loope
xchg
mov
fimul
mov
(bad)
retf
pop
stc
lods
add
ja
test
stc
and
cdq
out
movs
jns
and
fimul
shl
(bad)
fadd
(bad)
dec
push
out
call
cmps
arpl
sbb
mov
cmps
arpl
sbb
int3
push
add
push
in
je
(bad)
push
lods
add
fstp
ret
(bad)
mov
xchg
mov
jecxz
retf
jns
and
and
mov
mov
jns
and
retf
and
jecxz
leave
jns
and
retf
and
mov
mov
xor
push
add
imul
dec
pop
(bad)
jmp
cmps
mov
enter
jmp
mov
mov
stc
pusha
std
pop
stc
xchg
and
jmp
repnz
push
push
(bad)
fcom
pop
jns
and
inc
push
repz
mov
cmps
arpl
js
adc
ffree
push
mov
jns
and
and
fmul
pop
imul
pop
stc
pusha
and
or
pop
imul
cmps
xchg
fdiv
fmul
pop
imul
pop
stc
popa
and
int3
push
add
push
in
das
fsub
fstp
(bad)
push
push
loop
push
lods
add
stc
loope
pop
jns
and
jns
and
jns
and
imul
fcomp
sbb
xchg
push
in
fstp
and
push
bound
stc
adc
pop
dec
push
cdq
pop
dec
xchg
xchg
cmps
jae
mov
xchg
fcomp
mov
push
xchg
push
in
fstp
and
push
bound
stc
adc
pop
dec
push
cdq
pop
dec
xchg
xchg
cmps
jae
mov
xchg
in
jg
and
push
adc
in
fstp
and
push
bound
stc
adc
pop
dec
push
cdq
pop
dec
xchg
xchg
cmps
jae
mov
xchg
in
ja
and
push
adc
in
fstp
and
push
bound
stc
adc
push
dec
push
sbb
push
sub
retf
imul
shl
(bad)
mov
or
stc
repz
mov
test
fcomp
adc
fstp
adc
pop
jns
mov
cmp
adc
add
imul
add
jne
pop
stc
mov
cmps
and
xchg
and
out
mov
(bad)
(bad)
out
lock
jne
pop
stc
mov
sub
jns
call
stc
inc
cmps
inc
cld
push
mov
mov
stc
int3
movs
pop
stc
xchg
and
stc
push
cmps
ret
(bad)
push
adc
jmp
bound
stc
int3
movs
dec
leave
push
sbb
stc
mov
cmps
jae
mov
pop
push
mov
test
add
imul
shl
push
fcomp
and
jnp
cmps
cmps
jae
mov
pop
ret
xlat
pop
(bad)
jle
loop
stc
lods
add
sub
ins
jno
and
bound
fcomp
and
jnp
and
cmps
jae
mov
pop
ret
xlat
pop
(bad)
jle
loop
stc
lods
add
sub
ins
jno
and
bound
fcomp
and
jnp
cmps
fcomp
xchg
sar
push
(bad)
cmp
pop
loop
jmp
inc
mov
pop
rcl
test
lock
mov
mov
dec
xchg
push
jnp
sub
and
int
test
retf
cmp
movs
loop
xchg
mov
in
fstp
sar
push
push
(bad)
fmul
movs
loop
xchg
mov
in
fstp
pop
dec
xchg
push
jnp
push
cmps
ins
jns
and
int
test
retf
cmp
movs
loop
xchg
mov
in
fstp
sar
push
push
(bad)
fmul
movs
loop
xchg
mov
in
fstp
(bad)
jle
loop
stc
lods
add
stc
adc
jae
mov
fdivr
xlat
pop
pop
jns
mov
sbb
out
int3
imul
jge
pop
ins
stc
mov
shl
(bad)
mov
jmp
aaa
mov
add
stc
sbb
pop
jns
pop
pop
dec
xchg
push
jnp
inc
cmps
lock
mov
lods
and
push
bound
xchg
popa
pushf
cmp
fsubrp
and
add
stc
sbb
pop
int
push
jnp
jb
lock
mov
lods
and
push
bound
stc
xchg
popa
ins
jns
and
pop
and
pop
push
xchg
push
xlat
int
test
call
and
stc
mov
shl
(bad)
mov
jmp
mov
fsub
jnp
pop
in
jg
and
imul
sahf
mov
(bad)
cmps
xchg
lds
ds
mov
dec
xchg
cmps
xchg
in
fstp
cmps
jge
xchg
ins
stc
mov
sbb
imul
pop
dec
xchg
xchg
cmps
jae
mov
xchg
out
ret
jne
pop
jns
mov
cwde
test
and
jbe
popa
fcom
lods
add
jp
push
push
data16
jnp
xchg
pop
jns
and
leave
xlat
inc
jmp
and
imul
cmp
mov
(bad)
ret
mov
sar
mov
or
push
mov
cmps
test
fdivr
jnp
xchg
jae
inc
and
mov
xlat
adc
imul
mov
push
sub
leave
and
stc
ins
mov
jge
dec
xlat
mov
push
xchg
push
ins
mov
xlat
pop
pop
push
leave
push
ja
push
push
cdq
push
ins
mov
xlat
nop
cmp
les
jb
add
scas
mov
cmp
fwait
mov
out
xor
mov
mov
adc
scas
cmps
jo
xchg
jns
scas
mov
aas
stos
nop
xchg
sbb
sbb
or
adc
ins
rcl
sub
push
push
bound
test
inc
jecxz
xchg
dec
mov
dec
push
ins
or
xlat
ins
or
xchg
jo
push
or
scas
leave
iret
jno
xchg
mov
lahf
bound
in
or
ins
or
xor
and
cli
imul
mov
jge
or
pop
sbb
pop
sub
mov
xchg
mov
test
sub
or
mov
sahf
xchg
push
xchg
int
mov
cmp
push
sbb
push
out
or
xchg
jae
ins
(bad)
push
jmp
sub
ja
or
adc
xchg
repz
mov
push
push
mov
sbb
jecxz
lea
imul
cmps
xchg
push
xchg
push
imul
pop
pop
jne
push
ja
push
xor
dec
fs
repz
sub
repz
sti
or
imul
jb
push
xor
mov
inc
loopne
jae
sub
jmp
lahf
jae
push
rcr
in
sar
push
inc
push
jmp
or
(bad)
jl
add
mov
stos
out
in
mov
sbb
loopne
cmp
(bad)
outs
test
push
sbb
aas
(bad)
jno
fcmovnu
retf
aam
mov
(bad)
test
retf
jno
test
ficomp
gs
mov
mov
xlat
ins
mov
xchg
mov
(bad)
repz
or
imul
or
mov
xor
mov
ins
mov
jmp
in
or
shr
push
jge
int3
push
mov
(bad)
icebp
mov
cs
cmp
adc
repnz
cmp
push
cs
push
xlat
sbb
stc
out
xor
lods
jne
sub
jae
dec
ret
xchg
sbb
dec
arpl
xchg
jae
test
sbb
sbb
push
jae
cmc
ins
or
mov
in
ficomp
hlt
in
push
xlat
rcr
ja
add
loop
mov
push
mov
xchg
jno
neg
adc
sub
mov
cdq
jmp
push
in
rcl
mov
div
push
mov
pop
rcl
pusha
or
push
in
ss
sub
ins
mov
mov
ins
mov
arpl
outs
jg
mov
push
imul
xor
test
mov
mov
xchg
xlat
xchg
js
add
push
push
mov
xor
arpl
xchg
jae
sub
push
imul
rcr
mov
gs
cwde
imul
xor
repz
jns
retf
inc
ret
jae
mov
xchg
xchg
jne
or
mov
imul
sub
jae
int
aaa
push
scas
sub
jo
pop
inc
das
(bad)
scas
(bad)
popa
inc
stos
cmp
jge
sbb
arpl
test
pop
pop
ficomp
popa
pop
sub
fsub
xchg
loope
popf
mov
popa
or
inc
arpl
popf
mov
popa
or
inc
arpl
popf
mov
popa
or
inc
arpl
popf
mov
popa
or
inc
arpl
ins
jcxz
dec
pop
cmp
popf
sbb
jecxz
sar
inc
arpl
call
pop
sbb
fcomp
popf
loop
cmp
std
pop
and
fsub
sub
cmp
daa
ret
loop
jecxz
cmp
shl
psllq
sbb
stc
inc
int3
cmp
shl
(bad)
and
popf
movs
bound
loop
inc
sar
and
cmc
and
popf
movs
arpl
loop
inc
ret
(bad)
and
(bad)
and
popf
movs
arpl
add
inc
(bad)
jge
cmp
cmp
fsub
xlat
jecxz
cmp
xchg
ror
fsub
sbb
pop
mov
call
arpl
sbb
popa
pop
and
fisub
pop
pop
data16
pop
mov
sbb
ret
pop
jno
pop
sbb
pushf
movs
cmp
ret
pop
jno
pop
sbb
pushf
movs
cmp
ret
pop
jno
pop
sbb
pushf
movs
cmp
ret
pop
jno
pop
sbb
cli
movs
cmp
arpl
push
daa
inc
xor
sbb
arpl
sbb
fbld
pop
arpl
out
fnstsw
sbb
fbld
pop
mov
arpl
daa
ret
daa
pop
arpl
pop
mov
sbb
ret
fnsave
pop
cmp
fldenv
xchg
in
mov
popa
or
inc
arpl
popf
mov
popa
or
inc
arpl
popf
mov
popa
mov
inc
arpl
popf
mov
popa
mov
inc
arpl
ins
jcxz
dec
pop
cmp
popf
sbb
jecxz
push
inc
sbb
loopne
call
inc
sbb
jge
cmps
jcxz
mov
pop
inc
sbb
ret
retf
fistp
rcr
sbb
add
out
pop
jecxz
rcr
jge
call
jecxz
cmp
pop
and
(bad)
sbb
popa
inc
sbb
arpl
add
pop
inc
sbb
popa
inc
call
pop
sbb
shl
call
sbb
jecxz
and
stc
fnstcw
psllq
sbb
stc
inc
int3
cmp
shl
(bad)
and
popf
movs
bound
loop
inc
sar
and
cmc
and
popf
movs
arpl
loop
inc
ret
(bad)
and
(bad)
and
popf
movs
arpl
imul
arpl
lahf
fstp
pop
paddq
sbb
ficomp
and
jns
loop
jecxz
cmp
adc
sbb
into
fwait
popf
bound
and
imul
mov
popa
or
stc
inc
int3
cmp
shl
(bad)
movs
arpl
stc
inc
sar
and
jecxz
sbb
pushf
movs
cmp
ret
pop
jno
pop
sbb
cli
movs
cmp
adc
imul
arpl
lahf
fstp
pop
ins
aam
sbb
ficomp
and
jns
loop
jecxz
cmp
mul
sbb
fwait
popf
loop
cmp
imul
arpl
fiadd
call
pop
cmp
inc
ins
mov
mov
popa
or
stc
inc
ret
(bad)
and
(bad)
sbb
add
adc
mov
addr16
mov
ret
pop
jno
pop
sbb
pushf
movs
cmp
ret
pop
jno
pop
sbb
pushf
movs
cmp
ret
pop
jno
pop
sbb
pushf
movs
cmp
ret
pop
jno
pop
sbb
(bad)
movs
cmp
xor
retf
in
sbb
cmp
sbb
das
scas
(bad)
jmp
out
xchg
shl
daa
jb
fiadd
shl
adc
sbb
popa
mov
push
arpl
dec
out
in
mov
cmp
(bad)
ficomp
gs
mov
mov
xlat
ins
mov
xlat
fwait
dec
cmp
cdq
fchs
pop
in
dec
fcom
ins
mov
lds
ficom
xlat
ins
mov
xlat
push
or
push
pop
mov
xlat
jge
lods
xlat
push
mov
push
dec
mov
push
pop
mov
xlat
pop
or
push
push
or
xlat
pop
or
xlat
jge
adc
or
push
pop
mov
xlat
jge
movs
xlat
push
or
xlat
pop
mov
push
push
mov
xlat
pop
mov
xlat
pop
or
xlat
ins
mov
xlat
pop
mov
xlat
pop
or
push
pop
mov
xlat
pop
mov
pop
or
push
push
mov
push
pop
mov
push
push
or
xlat
pop
mov
pop
mov
xlat
push
mov
xlat
pop
or
xlat
jge
scas
xlat
push
or
push
push
or
xlat
pop
or
push
push
mov
xlat
pop
mov
push
mov
xlat
pop
mov
xlat
dec
mov
xlat
push
or
xlat
push
or
xlat
push
mov
xlat
pop
mov
push
jne
xchg
or
xlat
inc
or
push
jge
mov
jp
scas
xlat
jne
mov
jge
(bad)
xlat
pop
or
push
push
or
xlat
push
or
xlat
push
mov
push
dec
mov
push
pop
or
xlat
inc
mov
xlat
push
or
push
pop
or
xlat
jge
adc
or
push
pop
mov
push
push
mov
push
pop
or
push
push
or
xlat
push
or
push
pop
or
xlat
jge
movs
xlat
pop
mov
xlat
pop
or
push
pop
or
xlat
pop
mov
xlat
pop
or
push
jge
lods
xlat
push
or
xlat
pop
or
xlat
jge
movs
xlat
push
or
push
pop
mov
xlat
pop
or
push
pop
mov
pop
or
xlat
pop
or
push
jge
mov
push
push
or
xlat
pop
or
push
pop
mov
xlat
push
or
push
pop
mov
xlat
push
or
xlat
pop
or
push
pop
mov
xlat
ins
or
push
inc
mov
push
or
xlat
pop
or
xlat
push
mov
pop
or
xlat
jge
movs
xlat
push
or
xlat
pop
mov
push
push
mov
push
push
mov
xlat
push
or
xlat
pop
mov
xlat
pop
or
xlat
pop
or
push
jge
mov
push
jge
lods
xlat
pop
or
push
pop
mov
xlat
pop
or
xlat
pop
mov
push
or
xlat
pop
or
push
pop
or
xlat
pop
or
xlat
push
or
xlat
push
mov
xlat
jge
adc
mov
push
or
xlat
pop
mov
push
jge
mov
push
jge
mov
push
jge
scas
xlat
push
mov
xlat
pop
mov
xlat
jge
movs
xlat
pop
mov
xlat
jge
movs
xlat
pop
or
push
dec
mov
xlat
pop
mov
pop
or
xlat
pop
mov
xlat
pop
or
xlat
push
or
push
push
mov
xlat
push
or
xlat
pop
mov
xlat
jge
movs
xlat
push
or
xlat
pop
mov
push
push
mov
xlat
jg
xchg
je
xchg
jne
mov
jne
adc
jge
adc
mov
xlat
pop
or
xlat
jge
mov
xlat
jge
movs
xlat
pop
mov
xlat
push
or
xlat
push
or
xlat
pop
or
push
jge
mov
push
jge
(bad)
xlat
inc
or
push
jge
mov
jp
scas
xlat
jne
mov
jnp
(bad)
xlat
jne
xchg
mov
push
jge
mov
jp
scas
xlat
je
(bad)
push
jno
mov
or
xlat
movs
or
xlat
pop
mov
push
push
mov
xlat
pop
mov
push
pop
mov
xlat
pop
mov
push
push
mov
pop
or
xlat
pop
mov
xlat
pop
mov
push
push
or
xlat
push
or
push
pop
or
xlat
pop
or
xlat
dec
mov
xlat
push
or
xlat
pop
or
push
push
mov
push
push
or
xlat
pop
mov
xlat
dec
mov
xlat
pop
mov
push
or
xlat
push
mov
push
pop
mov
xlat
pop
mov
push
inc
mov
xlat
pop
or
xlat
pop
or
xlat
push
mov
xlat
pop
mov
push
push
mov
xlat
ja
mov
mov
xlat
pop
mov
push
jge
mov
push
pop
mov
push
pop
or
push
pop
mov
push
pop
mov
xlat
push
mov
jge
lods
xlat
pop
or
push
pop
mov
push
push
mov
jge
movs
xlat
pop
mov
xlat
jge
test
ja
(bad)
push
jp
mov
jne
mov
jnp
mov
inc
mov
xlat
pop
mov
xlat
push
mov
xlat
inc
mov
push
pop
mov
pop
mov
jns
xchg
jno
mov
inc
mov
push
push
mov
xlat
je
(bad)
push
dec
or
push
outs
or
push
adc
xlat
pop
or
xlat
jge
scas
xlat
push
or
push
push
or
xlat
pop
or
push
push
mov
xlat
pop
mov
pop
or
xlat
dec
mov
xlat
pop
mov
push
push
or
xlat
pop
or
xlat
pop
mov
push
pop
or
xlat
push
mov
push
mov
push
jge
lods
xlat
push
or
push
pop
mov
xlat
inc
mov
xlat
push
or
xlat
pop
mov
xlat
dec
mov
xlat
pop
or
push
pop
or
xlat
jge
lods
xlat
pop
mov
xlat
jno
mov
inc
mov
push
push
mov
xlat
je
(bad)
push
dec
or
push
pop
mov
push
pop
or
push
jge
scas
xlat
pop
or
push
push
or
xlat
push
or
xlat
push
or
xlat
push
mov
xlat
pop
mov
push
or
push
pop
mov
xlat
jp
lods
xlat
ins
mov
push
pop
or
push
push
mov
xlat
jge
movs
xlat
pop
or
push
push
mov
xlat
pop
or
push
jge
adc
or
push
push
or
xlat
push
or
xlat
push
or
xlat
dec
or
xlat
pop
or
push
pop
mov
xlat
jge
adc
jge
scas
xlat
push
or
xlat
push
or
xlat
pop
mov
jge
scas
xlat
pop
or
push
jge
movs
xlat
pop
or
push
pop
or
push
push
mov
pop
or
xlat
pop
mov
xlat
jge
lods
xlat
pop
mov
xlat
pop
mov
push
push
mov
xlat
jge
adc
or
push
pop
mov
push
push
mov
jge
movs
xlat
pop
mov
xlat
pop
or
xlat
jge
adc
pop
or
xlat
jge
movs
xlat
pop
mov
xlat
pop
or
push
outs
mov
xlat
pop
mov
push
pop
or
xlat
pop
or
xlat
jge
adc
mov
push
or
xlat
pop
mov
push
push
mov
push
push
mov
push
pop
or
xlat
pop
mov
push
pop
or
xlat
push
mov
xlat
push
mov
push
dec
mov
xlat
push
or
xlat
pop
or
push
jge
mov
xlat
pop
mov
push
pop
or
xlat
pop
or
xlat
pop
or
push
push
or
push
pop
mov
xlat
jge
lods
xlat
pop
mov
push
push
mov
push
mov
xlat
push
or
xlat
pop
mov
push
pop
or
xlat
pop
mov
xlat
push
or
xlat
pop
mov
push
pop
mov
pop
or
push
pop
mov
xlat
pop
mov
push
push
mov
xlat
ins
mov
push
pop
or
xlat
jge
mov
push
jge
movs
xlat
pop
mov
xlat
pop
or
xlat
pop
mov
push
push
mov
push
pop
mov
xlat
pop
mov
xlat
push
mov
xlat
pop
mov
push
jge
mov
push
pop
or
push
jge
mov
push
pop
mov
xlat
jnp
lods
xlat
push
mov
xlat
jge
movs
xlat
pop
or
push
jge
mov
push
push
mov
push
pop
mov
xlat
pop
mov
push
pop
or
xlat
inc
mov
push
jge
adc
mov
pop
or
xlat
pop
mov
push
push
mov
xlat
pop
mov
xlat
pop
or
xlat
dec
mov
xlat
push
mov
xlat
pop
mov
pop
or
push
push
or
xlat
push
or
xlat
pop
or
push
pop
mov
xlat
push
or
xlat
push
mov
xlat
pop
mov
push
or
push
pop
or
push
push
or
push
pop
mov
jp
lods
xlat
inc
mov
push
push
mov
xlat
pop
mov
pop
or
xlat
inc
mov
push
pop
mov
xlat
jge
movs
xlat
pop
or
push
push
or
xlat
pop
or
xlat
push
mov
xlat
pop
or
push
pop
mov
xlat
pop
mov
push
jge
adc
mov
xlat
pop
mov
xlat
push
mov
push
dec
mov
xlat
pop
mov
xlat
pop
mov
push
push
mov
push
push
mov
push
imul
pop
mov
xlat
push
or
xlat
ins
mov
push
pop
mov
xlat
push
or
xlat
pop
or
xlat
pop
mov
push
or
xlat
push
mov
xlat
adc
xlat
push
or
xlat
pop
mov
xlat
jge
adc
pop
or
push
pop
or
push
jge
mov
push
jge
movs
xlat
push
or
push
jo
movs
xlat
dec
mov
xlat
push
mov
xlat
push
or
xlat
push
or
xlat
pop
mov
xlat
pop
or
xlat
pop
or
push
imul
pop
mov
push
pop
or
xlat
push
or
xlat
dec
mov
xlat
jp
movs
xlat
ins
or
push
dec
mov
push
push
mov
xlat
pop
or
xlat
pop
mov
push
or
xlat
pop
mov
xlat
pop
or
xlat
push
mov
push
mov
xlat
jge
movs
xlat
push
mov
xlat
pop
mov
xlat
push
or
xlat
push
mov
xlat
jp
lods
xlat
inc
mov
xlat
push
or
push
pop
or
xlat
pop
or
xlat
inc
mov
push
pop
mov
xlat
push
or
xlat
push
mov
xlat
push
or
xlat
pop
mov
push
jge
mov
push
pop
mov
xlat
push
adc
pop
or
push
pop
mov
xlat
pop
or
push
pop
mov
push
dec
or
xlat
pop
mov
pop
or
push
push
or
xlat
push
or
xlat
push
or
xlat
push
mov
xlat
jge
movs
xlat
push
mov
xlat
pop
or
xlat
push
mov
push
mov
xlat
pop
or
push
pop
mov
xlat
mov
xlat
pop
or
push
push
or
xlat
push
or
push
pop
or
xlat
jge
lods
xlat
pop
or
push
pop
mov
push
jge
scas
xlat
pop
or
push
pop
mov
push
pop
or
push
pop
mov
push
or
xlat
push
or
xlat
pop
or
xlat
push
mov
push
pop
mov
xlat
pop
or
push
pop
mov
xlat
pop
or
push
pop
or
push
push
mov
xlat
pop
or
push
pop
or
xlat
pop
mov
xlat
ins
or
push
inc
mov
push
pop
mov
xlat
pop
mov
xlat
push
mov
xlat
pop
mov
xlat
push
mov
xlat
pop
or
push
pop
or
xlat
jge
movs
xlat
push
or
push
pop
mov
xlat
push
or
xlat
pop
mov
push
mov
xlat
pop
mov
ins
mov
xlat
push
or
xlat
inc
mov
xlat
pop
mov
xlat
push
or
xlat
pop
mov
xlat
pop
mov
pop
mov
push
pop
or
push
pop
mov
push
or
xlat
push
or
xlat
pop
or
xlat
push
mov
push
pop
mov
xlat
dec
mov
push
push
or
xlat
push
or
xlat
jge
lods
xlat
push
or
xlat
pop
mov
xlat
push
or
xlat
pop
mov
xlat
pop
mov
xlat
mov
xlat
jp
(bad)
xlat
jns
xchg
pop
or
xlat
pop
mov
push
dec
or
push
push
mov
push
jns
mov
push
pop
or
push
pop
mov
xlat
pop
mov
xlat
pop
mov
pop
mov
xlat
pop
or
xlat
pop
mov
xlat
pop
or
xlat
jge
movs
xlat
pop
mov
xlat
push
or
xlat
dec
mov
xlat
pop
or
push
pop
or
xlat
pop
mov
xlat
pop
or
xlat
pop
mov
xlat
dec
mov
push
pop
or
push
pop
or
xlat
inc
mov
push
pop
mov
xlat
pop
mov
push
inc
mov
push
push
or
push
pop
mov
push
or
xlat
pop
mov
pop
or
xlat
pop
mov
push
mov
xlat
pop
mov
pop
mov
xlat
push
or
xlat
pop
or
push
pop
mov
push
pop
mov
xlat
in
or
xlat
pop
mov
xlat
pop
mov
xlat
push
mov
xlat
pop
or
xlat
pop
mov
dec
mov
xlat
pop
or
push
pop
or
xlat
inc
mov
xlat
push
mov
push
pop
or
xlat
push
mov
xlat
pop
mov
pop
or
push
pop
mov
xlat
push
mov
xlat
push
or
xlat
pop
mov
xlat
push
or
xlat
jge
adc
jge
scas
xlat
pop
or
push
push
or
xlat
push
or
xlat
push
or
xlat
push
mov
xlat
jge
movs
xlat
push
mov
push
pop
or
push
pop
or
push
pop
mov
xlat
pop
mov
push
pop
mov
push
inc
mov
push
dec
mov
xlat
jge
movs
xlat
pop
mov
xlat
pop
or
xlat
jge
movs
xlat
pop
mov
push
pop
mov
ins
or
push
jne
out
push
jge
adc
pop
mov
push
pop
mov
push
push
mov
push
jns
mov
push
pop
or
push
pop
mov
xlat
pop
mov
xlat
push
mov
push
push
mov
push
pop
mov
push
pop
or
xlat
pop
or
xlat
dec
mov
xlat
pop
or
push
push
mov
push
pop
or
xlat
push
mov
push
pop
mov
jge
lods
xlat
pop
or
push
pop
or
push
pop
or
xlat
push
mov
xlat
pop
mov
push
dec
mov
xlat
pop
mov
jge
movs
xlat
pop
mov
xlat
pop
or
xlat
pop
mov
xlat
pop
mov
push
pop
mov
dec
mov
push
pop
or
push
push
or
xlat
push
or
xlat
jp
xchg
ins
mov
push
pop
mov
push
pop
mov
push
push
mov
push
data16
xlat
pop
or
xlat
jge
scas
xlat
pop
or
push
push
or
xlat
push
or
xlat
push
or
xlat
push
mov
xlat
jge
movs
xlat
pop
or
xlat
pop
mov
xlat
pop
or
xlat
jge
cmps
xlat
pop
mov
xlat
jnp
mov
or
xlat
pop
or
push
pop
mov
push
pop
or
push
jge
mov
xlat
pop
or
push
pop
or
push
pop
or
push
pop
mov
xlat
ins
mov
push
push
or
push
jge
scas
xlat
pop
or
push
push
or
xlat
push
or
xlat
push
or
xlat
push
mov
xlat
jge
mov
push
push
mov
xlat
pop
or
push
pop
or
push
jge
movs
xlat
pop
or
xlat
pop
mov
pop
or
push
jge
lods
xlat
pop
or
push
pop
or
push
push
mov
push
jge
scas
xlat
pop
mov
push
pop
or
xlat
jp
lods
xlat
ins
or
push
inc
mov
push
pop
or
xlat
jge
mov
push
jge
movs
xlat
pop
or
xlat
pop
mov
push
pop
mov
xlat
pop
or
xlat
pop
mov
xlat
push
mov
xlat
pop
mov
pop
or
push
jge
movs
xlat
pop
or
xlat
pop
mov
xlat
push
or
xlat
pop
or
push
pop
or
xlat
inc
mov
xlat
push
mov
push
pop
mov
xlat
pop
mov
pop
mov
push
pop
or
xlat
pop
mov
push
mov
pop
or
push
jns
xchg
pop
or
xlat
pop
or
push
pop
or
push
jnp
mov
push
jge
mov
push
pop
mov
xlat
pop
or
push
pop
mov
push
pusha
mov
xlat
pop
or
push
pop
mov
push
pop
or
push
pop
mov
xlat
pop
or
xlat
jge
movs
xlat
pop
mov
push
pop
mov
xlat
jge
adc
or
push
pop
mov
xlat
inc
mov
push
dec
mov
xlat
jge
movs
xlat
pop
mov
push
pop
or
push
jge
mov
push
pop
mov
xlat
jge
movs
xlat
pop
or
xlat
pop
mov
push
pop
mov
xlat
pop
or
push
pop
mov
xlat
pop
or
xlat
pop
mov
push
jge
movs
xlat
pop
mov
push
pop
or
push
pop
or
xlat
jge
adc
or
push
push
mov
xlat
pop
or
push
pop
mov
xlat
pop
or
xlat
jo
adc
or
push
pop
mov
push
pop
or
push
pop
or
xlat
jge
adc
or
push
push
mov
xlat
pop
or
push
pop
mov
xlat
pop
or
xlat
ins
mov
xlat
pop
or
push
pop
mov
push
pop
mov
push
dec
mov
xlat
pop
or
xlat
push
mov
push
pop
mov
push
push
or
push
pop
or
xlat
pop
mov
push
pop
or
xlat
pop
mov
xlat
jge
adc
or
push
pop
mov
xlat
pop
or
push
jge
movs
xlat
pop
mov
xlat
push
or
xlat
push
mov
pop
or
xlat
dec
mov
xlat
pop
or
xlat
pop
mov
ins
or
push
dec
mov
xlat
pop
mov
xlat
ins
mov
xlat
pop
mov
xlat
pop
mov
push
jge
mov
xlat
bound
xlat
pop
mov
pop
or
push
pop
mov
push
pop
or
push
push
mov
xlat
pop
mov
xlat
retf
xlat
pop
mov
push
pop
or
push
jo
scas
xlat
inc
mov
xlat
push
or
xlat
pop
mov
push
pop
mov
xlat
push
or
xlat
pop
or
push
pop
or
xlat
pop
mov
xlat
pop
mov
push
dec
mov
push
push
mov
push
jnp
scas
xlat
pop
mov
xlat
pop
or
push
pop
mov
push
pop
or
xlat
pop
or
push
jge
mov
push
push
mov
pop
mov
push
pop
mov
jnp
mov
push
push
or
xlat
pop
mov
pop
mov
pop
mov
push
or
xlat
jge
lods
xlat
pop
or
xlat
jge
movs
xlat
pop
mov
push
pop
or
xlat
adc
push
pop
or
xlat
jp
lods
xlat
dec
mov
xlat
pop
or
push
pop
or
xlat
push
mov
push
pop
mov
push
or
xlat
pop
or
push
push
or
xlat
pop
or
xlat
push
mov
push
push
or
xlat
pop
mov
pop
mov
push
pop
mov
push
inc
mov
push
dec
mov
xlat
jge
movs
push
loop
xchg
xlat
push
or
xlat
pop
mov
push
push
mov
xlat
pop
mov
xlat
dec
mov
xlat
push
or
xlat
inc
mov
xlat
push
or
push
pop
or
xlat
jge
adc
mov
jge
movs
xlat
pop
mov
xlat
pop
mov
xlat
jge
lods
xlat
push
mov
push
push
mov
push
pop
mov
xlat
push
mov
xlat
pop
mov
pop
mov
pop
mov
pop
or
push
jnp
mov
xlat
push
or
xlat
push
mov
jge
movs
xlat
pop
or
xlat
jge
movs
xlat
pop
or
push
pop
mov
push
jnp
scas
push
pop
or
xlat
push
or
xlat
pop
or
xlat
pop
mov
push
pop
or
xlat
push
mov
push
pop
or
push
pop
mov
pop
mov
push
pop
mov
xlat
pop
mov
push
pop
or
xlat
pop
mov
xlat
pop
or
push
pop
or
xlat
jl
adc
pop
or
xlat
push
or
xlat
push
or
xlat
pop
mov
pop
mov
push
jge
scas
xlat
pop
or
push
pop
mov
xlat
jge
movs
xlat
pop
mov
push
pop
mov
xlat
push
mov
push
push
mov
push
jge
scas
xlat
pop
or
push
push
or
xlat
push
or
xlat
push
or
xlat
pop
mov
xlat
pop
mov
pop
mov
push
pop
mov
xlat
pop
mov
xlat
pop
mov
xlat
jl
adc
mov
push
pop
or
xlat
pop
or
xlat
jge
movs
xlat
pop
or
xlat
pop
or
xlat
pop
or
xlat
jge
movs
xlat
dec
or
push
jge
mov
pop
mov
xlat
inc
or
push
jnp
mov
dec
mov
xlat
pop
or
xlat
jnp
cmps
xlat
dec
mov
xlat
push
or
xlat
jnp
cmps
xlat
dec
mov
push
push
mov
pop
or
push
jnp
mov
xlat
push
or
push
pop
or
push
pop
or
xlat
pop
or
xlat
jge
movs
xlat
pop
or
xlat
jge
movs
xlat
pop
or
xlat
pop
mov
jge
mov
xlat
pop
mov
xlat
push
or
xlat
pop
mov
push
pop
or
xlat
push
or
push
pop
mov
xlat
pop
mov
xlat
pop
mov
xlat
pop
mov
xlat
pop
mov
xlat
pop
mov
xlat
pop
or
push
push
mov
push
push
or
xlat
pop
mov
push
pop
or
xlat
push
mov
push
pop
mov
xlat
pop
or
push
push
mov
xlat
inc
mov
xlat
push
mov
jp
movs
xlat
ins
mov
pop
mov
xlat
pop
mov
push
pop
or
push
jg
mov
xlat
pop
mov
push
pop
or
push
jge
mov
push
jge
lods
xlat
pop
or
push
pop
mov
push
pop
or
xlat
push
mov
jnp
movs
push
pop
mov
push
push
or
xlat
pop
mov
pop
or
push
pop
mov
push
inc
mov
xlat
push
mov
push
push
or
push
push
or
push
pop
mov
pop
mov
xlat
pop
mov
pop
or
xlat
pop
mov
push
or
xlat
pop
or
push
pop
mov
push
jge
mov
xlat
pop
mov
xlat
push
or
xlat
pop
mov
push
pop
or
xlat
push
or
push
pop
mov
xlat
pop
mov
xlat
pop
mov
xlat
pop
or
xlat
pop
or
push
push
or
xlat
jle
adc
pop
mov
xlat
pop
or
xlat
jge
movs
xlat
pop
or
push
pop
mov
xlat
pop
or
push
pop
mov
xlat
pop
mov
push
pop
mov
xlat
pop
or
xlat
dec
mov
xlat
pop
or
push
pop
or
xlat
jle
mov
or
xlat
jp
mov
dec
mov
push
pop
mov
xlat
pop
or
push
jge
movs
xlat
pop
mov
push
pop
or
push
jge
mov
push
jge
mov
push
pop
mov
xlat
pop
mov
push
push
mov
push
pop
mov
xlat
pop
or
xlat
push
or
xlat
pop
mov
xlat
pop
or
push
dec
mov
xlat
pop
mov
pop
or
push
push
or
xlat
pop
or
xlat
jns
adc
jp
(bad)
xlat
add
push
push
mov
push
pop
or
push
jge
mov
push
jge
movs
xlat
pop
mov
pop
or
xlat
pop
mov
push
jge
movs
xlat
pop
mov
push
pop
or
push
pop
or
xlat
jge
adc
or
push
push
mov
xlat
pop
or
push
pop
mov
xlat
pop
or
xlat
jo
adc
or
push
inc
mov
push
jge
mov
push
jge
mov
xlat
pop
or
xlat
push
or
xlat
pop
or
push
pop
mov
push
pop
mov
xlat
pop
mov
xlat
pop
mov
xlat
push
mov
push
pop
or
push
pop
mov
xlat
pop
or
xlat
push
or
xlat
pop
mov
xlat
pop
or
xlat
dec
mov
xlat
pop
mov
pop
or
push
push
or
xlat
pop
or
xlat
push
mov
xlat
pop
mov
xlat
pop
or
push
jge
movs
xlat
pop
mov
pop
or
xlat
push
mov
pop
or
push
pop
mov
xlat
jge
movs
xlat
pop
mov
push
push
or
xlat
push
or
xlat
pop
or
push
push
mov
xlat
pop
or
xlat
pop
mov
ins
mov
xlat
pop
or
push
push
or
push
push
mov
push
mov
push
pop
mov
xlat
push
or
push
pop
mov
push
pop
or
xlat
dec
mov
xlat
pop
or
push
pop
or
xlat
dec
mov
push
pop
or
xlat
pop
mov
pop
mov
push
out
or
xlat
pop
mov
xlat
pop
mov
xlat
inc
mov
push
pop
mov
xlat
dec
mov
xlat
push
or
xlat
pop
mov
push
push
mov
push
pop
or
push
jp
scas
xlat
dec
mov
xlat
pop
mov
pop
or
xlat
pop
mov
push
jge
movs
xlat
pop
or
push
pop
mov
xlat
pop
mov
push
pop
or
push
pop
or
xlat
pop
or
push
jp
mov
xlat
pop
mov
push
pop
or
xlat
pop
mov
xlat
pop
or
xlat
jge
movs
xlat
pop
or
xlat
pop
or
push
pop
or
push
jge
mov
push
jge
movs
xlat
push
or
push
jge
movs
xlat
dec
or
push
push
mov
push
pop
mov
xlat
inc
mov
push
pop
mov
xlat
pop
mov
push
push
or
push
inc
mov
xlat
pop
mov
push
jnp
adc
pop
or
push
pop
mov
xlat
pop
or
push
jge
movs
xlat
pop
or
xlat
pop
mov
push
dec
or
push
pop
or
push
jnp
mov
xlat
pop
mov
push
jge
movs
xlat
pop
mov
xlat
pop
or
push
pop
mov
push
push
mov
xlat
dec
mov
xlat
inc
mov
push
push
or
push
push
or
xlat
jge
lods
xlat
pop
or
push
jp
mov
push
pop
or
xlat
pop
mov
pop
or
push
jge
movs
xlat
pop
mov
pop
or
xlat
jge
adc
or
xlat
jge
scas
xlat
pop
mov
push
pop
or
push
push
mov
push
pop
or
push
pop
mov
xlat
push
or
push
jp
lods
xlat
ins
or
push
inc
mov
push
pop
mov
push
jge
mov
push
jge
movs
xlat
pop
or
xlat
jge
scas
xlat
pop
mov
push
pop
or
push
push
mov
push
pop
or
push
pop
mov
xlat
push
mov
xlat
push
mov
push
pop
or
push
push
or
push
jge
movs
xlat
pop
or
xlat
pop
mov
xlat
jge
movs
xlat
pop
mov
push
pop
or
push
pop
or
xlat
dec
mov
xlat
push
or
xlat
pop
or
xlat
jp
adc
mov
push
pop
mov
push
pop
or
xlat
ins
or
push
pop
mov
xlat
pop
or
push
pop
mov
xlat
sbb
xlat
pop
mov
push
pop
or
xlat
inc
mov
push
pop
mov
xlat
dec
mov
push
pop
or
push
push
or
push
pop
mov
xlat
pop
mov
xlat
pop
mov
xlat
inc
mov
xlat
pop
or
push
pop
mov
pop
or
xlat
pop
or
push
pop
mov
xlat
push
or
xlat
jge
lods
xlat
pop
or
push
pop
mov
xlat
jge
adc
or
xlat
jge
movs
xlat
pop
or
push
push
mov
xlat
inc
mov
push
pop
mov
xlat
push
or
push
pop
mov
xlat
pop
mov
push
inc
mov
push
pop
mov
xlat
pop
or
push
push
mov
pop
mov
xlat
push
mov
push
pop
or
xlat
jne
adc
or
push
pop
or
xlat
pop
or
xlat
dec
mov
xlat
pop
or
push
pop
or
xlat
inc
mov
xlat
push
mov
push
je
mov
or
xlat
pop
or
xlat
pop
or
push
pop
or
push
jge
mov
push
jge
movs
xlat
push
or
push
jge
movs
xlat
dec
or
push
pop
or
xlat
jge
movs
xlat
pop
or
push
pop
mov
xlat
jge
test
pop
or
push
dec
mov
xlat
jnp
call
push
pop
or
xlat
pop
or
xlat
inc
mov
push
pop
mov
push
dec
mov
xlat
pop
or
push
pop
or
xlat
dec
or
push
push
mov
pop
or
push
jge
adc
or
xlat
pop
or
push
pop
or
push
jge
mov
push
jge
movs
xlat
push
or
push
jge
movs
xlat
inc
or
xlat
pop
or
xlat
push
mov
push
push
mov
xlat
pop
mov
je
adc
or
push
jge
lods
xlat
inc
mov
xlat
push
or
xlat
inc
mov
xlat
pop
mov
xlat
jo
test
ins
mov
pop
mov
xlat
push
mov
push
mov
xlat
pop
or
xlat
pop
mov
xlat
pop
mov
push
pop
or
push
jge
mov
push
pop
mov
xlat
pop
mov
push
pop
or
push
pop
or
xlat
pop
or
push
jp
mov
xlat
pop
mov
push
pop
or
xlat
pop
mov
push
pop
mov
push
ja
mov
xlat
pop
or
xlat
pop
or
push
pop
or
push
jge
mov
push
jge
movs
xlat
push
or
push
jge
movs
xlat
dec
mov
xlat
push
or
xlat
jge
lods
xlat
jge
adc
pop
mov
xlat
jp
xchg
ins
mov
push
pop
or
xlat
pop
or
xlat
inc
mov
push
pop
mov
push
jl
xchg
pop
mov
push
jge
scas
xlat
pop
or
push
pop
mov
xlat
jge
xchg
push
mov
xlat
push
or
xlat
pop
or
xlat
inc
mov
xlat
adc
push
pop
or
xlat
pop
mov
xlat
pop
or
push
pop
mov
xlat
push
or
xlat
add
push
jge
adc
or
xlat
jge
movs
xlat
pop
or
xlat
pop
or
push
push
mov
xlat
pop
mov
xlat
pop
or
xlat
jns
movs
push
pop
mov
xlat
pop
or
push
inc
mov
push
pop
mov
xlat
pop
or
xlat
jge
movs
xlat
pop
or
xlat
pop
or
push
pop
or
push
jge
mov
push
jge
movs
xlat
push
or
push
jge
movs
xlat
dec
or
push
pop
mov
pop
mov
push
pop
mov
push
or
push
jp
test
ins
or
push
dec
mov
push
jnp
stc
push
push
mov
xlat
dec
mov
push
pop
or
xlat
pop
or
push
push
mov
push
push
mov
push
ins
mov
push
pop
mov
push
pop
or
xlat
inc
mov
push
pop
mov
xlat
jl
xchg
push
or
push
pop
or
push
jge
scas
xlat
pop
or
push
jl
stos
xlat
jno
adc
or
xlat
pop
or
xlat
pop
mov
xlat
pop
or
push
jge
movs
xlat
pop
or
push
pop
or
xlat
push
or
xlat
jge
adc
mov
push
pop
or
push
jge
mov
push
pop
mov
push
jge
movs
xlat
push
or
xlat
pop
or
push
pop
or
push
push
mov
xlat
pop
or
push
pop
mov
push
jge
movs
xlat
pop
or
push
push
mov
xlat
push
mov
push
jo
adc
pop
mov
push
pop
or
push
jge
mov
xlat
pop
mov
push
push
or
xlat
pop
or
push
pop
mov
xlat
ins
or
push
dec
mov
push
pop
or
push
push
mov
xlat
jp
xchg
xlat
pop
or
xlat
pop
mov
push
or
xlat
pop
or
push
pop
mov
push
dec
mov
xlat
pop
or
push
pop
mov
push
xchg
xlat
pop
mov
push
pop
or
xlat
jb
lods
xlat
js
xchg
xlat
pop
mov
push
pop
or
push
jge
mov
xlat
pop
mov
push
push
or
xlat
pop
or
push
pop
mov
push
jge
xchg
xlat
pop
mov
push
pop
or
push
jge
mov
xlat
pop
mov
xlat
push
or
xlat
ins
mov
xlat
push
or
xlat
push
mov
xlat
push
or
xlat
push
or
xlat
pop
mov
xlat
pop
or
xlat
pop
or
push
dec
mov
xlat
pop
mov
push
pop
mov
xlat
dec
or
xlat
pop
or
push
pop
mov
xlat
pop
or
push
jge
movs
xlat
pop
mov
push
pop
or
xlat
adc
push
pop
or
xlat
pop
mov
push
or
xlat
pop
or
push
pop
or
xlat
ins
or
push
inc
mov
push
mov
push
pop
or
push
dec
mov
xlat
inc
mov
xlat
pop
mov
push
pop
mov
ins
or
push
jge
mov
pop
or
xlat
pop
mov
xlat
push
or
xlat
pop
mov
xlat
pop
mov
pop
or
push
pop
mov
xlat
dec
mov
pop
mov
push
or
xlat
pop
or
push
pop
or
xlat
pop
mov
push
pop
or
push
pop
or
push
dec
or
push
push
or
xlat
pop
or
push
jge
movs
xlat
push
or
xlat
pop
mov
xlat
pop
or
xlat
dec
mov
xlat
pop
or
xlat
push
mov
xlat
push
or
xlat
pop
mov
push
pop
mov
xlat
push
or
push
push
or
push
pop
or
push
push
or
xlat
push
or
xlat
pop
or
push
pop
mov
push
pop
mov
push
pop
or
push
push
mov
push
jnp
scas
push
dec
or
xlat
pop
mov
xlat
push
mov
xlat
pop
or
push
pop
or
xlat
jge
adc
jge
movs
xlat
adc
xlat
push
or
push
pop
or
xlat
push
mov
xlat
push
or
xlat
pop
mov
push
jge
mov
xlat
pop
or
push
pop
mov
xlat
pop
or
xlat
dec
mov
xlat
pop
or
xlat
pop
mov
push
dec
mov
xlat
push
mov
pop
or
xlat
pop
or
xlat
push
mov
xlat
pop
mov
pop
mov
xlat
pop
mov
pop
or
push
pop
mov
xlat
pop
or
xlat
jge
mov
push
pop
mov
xlat
pop
or
push
pop
mov
out
xchg
xlat
pop
or
push
pop
mov
xlat
inc
mov
push
pop
mov
push
dec
mov
xlat
pop
or
xlat
pop
mov
xlat
pop
mov
pop
mov
xlat
push
or
xlat
push
mov
push
pop
mov
push
inc
mov
xlat
pop
or
xlat
push
or
xlat
pop
mov
xlat
push
mov
pop
mov
push
pop
or
xlat
pop
or
xlat
pop
mov
xlat
push
or
xlat
pop
or
push
push
mov
push
push
or
xlat
pop
or
xlat
pop
or
xlat
jp
scas
push
pop
mov
push
pop
mov
push
pop
or
xlat
push
mov
xlat
pop
or
push
pop
or
push
push
mov
xlat
pop
mov
adc
xlat
pop
or
push
push
or
xlat
push
or
xlat
jge
movs
xlat
pop
or
xlat
pop
mov
push
push
or
xlat
pop
or
push
pop
mov
xlat
ins
mov
xlat
pop
or
xlat
dec
mov
push
push
mov
push
push
xchg
xlat
pop
mov
push
or
push
dec
mov
xlat
pop
or
push
push
or
xlat
pop
or
push
jo
mov
push
pop
mov
push
pop
mov
push
jo
movs
xlat
ins
mov
push
push
mov
imul
pop
or
push
push
or
xlat
jo
scas
xlat
ins
mov
push
pop
mov
xlat
pop
or
push
push
or
xlat
pop
or
push
push
mov
push
dec
mov
xlat
jge
movs
xlat
pop
or
push
push
or
push
push
mov
xlat
jg
xchg
xlat
pop
mov
jge
mov
push
push
or
push
push
mov
xlat
pop
or
push
jo
movs
xlat
ins
or
push
js
mov
push
or
push
push
mov
xlat
pop
mov
xlat
pop
mov
push
pop
mov
push
pop
mov
push
push
mov
xlat
pop
or
push
push
mov
ins
mov
xlat
pop
mov
jge
movs
xlat
push
or
xlat
jge
movs
xlat
push
mov
pop
or
push
push
or
push
push
mov
xlat
pop
mov
xlat
jge
cmps
xlat
pop
mov
push
ins
mov
xlat
pop
or
xlat
push
or
push
pop
mov
push
or
xlat
pop
or
xlat
pop
mov
xlat
pop
mov
push
pop
mov
pop
or
push
push
mov
push
pop
mov
xlat
push
or
push
pop
mov
push
jge
mov
push
pop
mov
pop
or
xlat
jge
adc
push
or
push
pop
mov
push
push
mov
push
jge
scas
xlat
pop
mov
xlat
pop
mov
xlat
pop
mov
push
pop
or
push
pop
or
xlat
push
mov
xlat
push
or
xlat
push
mov
push
pop
mov
xlat
pop
mov
push
push
mov
jge
movs
xlat
jbe
mov
mov
push
dec
mov
push
ja
adc
mov
push
jge
mov
xlat
pop
mov
jge
lods
xlat
pop
mov
pop
or
push
push
or
push
jge
scas
xlat
pop
or
xlat
pop
mov
xlat
pop
mov
push
push
or
xlat
pop
mov
xlat
pop
or
push
pop
mov
pop
mov
xlat
pop
mov
pop
or
xlat
jge
movs
xlat
push
mov
xlat
pop
or
push
pop
or
xlat
pop
mov
push
or
push
pop
mov
xlat
pop
or
push
pop
mov
pop
or
xlat
jge
scas
xlat
pop
mov
xlat
pop
mov
xlat
pop
mov
xlat
pop
or
push
pop
mov
ins
or
xlat
inc
mov
push
pop
or
xlat
pop
mov
xlat
pop
mov
xlat
push
or
xlat
pop
or
push
push
mov
push
pop
mov
push
pop
mov
push
pop
or
xlat
jge
lods
xlat
push
or
push
pop
mov
xlat
pop
or
xlat
push
or
xlat
pop
or
xlat
pop
mov
push
pop
or
push
push
mov
push
jge
lods
xlat
pop
or
push
push
mov
push
jge
scas
xlat
pop
mov
push
push
mov
push
jge
scas
xlat
pop
or
xlat
push
mov
xlat
pop
mov
push
or
xlat
jge
movs
xlat
pop
or
push
push
or
xlat
jge
scas
xlat
pop
or
xlat
pop
mov
xlat
push
or
xlat
pop
or
xlat
push
mov
push
pop
or
push
jnp
mov
push
jg
xchg
ja
(bad)
push
jnp
mov
jne
mov
jge
mov
pop
mov
push
jge
adc
mov
xlat
pop
or
push
push
mov
pop
mov
xlat
push
mov
push
pop
mov
pop
mov
jns
xchg
jbe
mov
mov
push
dec
mov
push
ja
adc
mov
xlat
inc
mov
push
dec
mov
push
je
adc
jns
mov
mov
pop
or
xlat
pop
mov
xlat
push
mov
push
pop
or
push
push
or
push
pop
or
push
jge
mov
xlat
pop
mov
xlat
pop
mov
push
push
or
xlat
pop
mov
xlat
push
or
xlat
pop
or
push
push
mov
push
jge
scas
xlat
jge
cmps
xlat
pop
mov
push
pop
mov
xlat
push
or
xlat
pop
or
push
jge
movs
xlat
pop
mov
pop
mov
xlat
pop
mov
push
push
mov
xlat
pop
or
xlat
pop
mov
pop
mov
xlat
push
or
xlat
push
mov
xlat
pop
mov
xlat
pop
or
push
jge
mov
push
push
or
xlat
jge
scas
xlat
pop
or
xlat
pop
mov
xlat
push
or
xlat
pop
or
xlat
push
mov
push
pop
or
push
jnp
mov
push
jg
xchg
ja
(bad)
push
jnp
mov
jne
mov
jge
mov
pop
mov
push
jge
adc
mov
xlat
pop
or
push
push
mov
pop
mov
xlat
push
mov
push
pop
mov
pop
mov
jns
xchg
jno
mov
inc
mov
push
dec
mov
push
je
adc
dec
or
push
outs
or
push
sbb
push
push
or
xlat
push
mov
push
pop
mov
pop
mov
xlat
pop
mov
xlat
pop
mov
push
push
mov
push
push
or
push
pop
or
xlat
pop
mov
xlat
push
or
xlat
push
mov
push
or
push
push
mov
pop
or
xlat
pop
mov
pop
mov
push
or
push
pop
mov
push
or
xlat
jge
stos
xlat
pop
or
xlat
jne
xchg
mov
xlat
jp
mov
xlat
jp
scas
xlat
je
(bad)
push
jno
(bad)
push
jge
mov
pop
mov
pop
mov
push
push
mov
push
jge
scas
xlat
pop
mov
xlat
pop
mov
xlat
pop
mov
push
pop
or
push
pop
or
xlat
outs
mov
xlat
pop
or
push
jge
lods
xlat
push
or
xlat
jge
movs
xlat
push
or
push
pop
or
xlat
push
mov
jge
movs
xlat
pop
or
push
push
or
xlat
push
or
xlat
push
or
xlat
dec
mov
push
pop
mov
xlat
jge
adc
pop
mov
xlat
push
or
xlat
push
or
xlat
push
or
xlat
pop
or
push
jge
movs
xlat
pop
or
xlat
pop
mov
xlat
push
or
xlat
push
mov
push
pop
mov
push
push
mov
push
pop
or
push
pop
mov
xlat
push
mov
xlat
push
or
push
push
mov
xlat
pop
mov
xlat
jge
cmps
xlat
pop
mov
push
jge
adc
pop
mov
push
pop
or
push
pop
or
xlat
jo
lods
xlat
outs
mov
xlat
push
or
push
pop
mov
xlat
push
or
xlat
push
or
xlat
push
or
xlat
pop
or
push
jge
movs
xlat
pop
or
xlat
pop
mov
xlat
push
or
xlat
push
mov
push
pop
mov
push
push
mov
push
pop
or
push
pop
mov
xlat
push
mov
xlat
push
or
push
push
mov
xlat
pop
mov
xlat
jge
cmps
xlat
pop
mov
push
pop
mov
xlat
lods
mov
xlat
push
mov
push
pop
mov
xlat
jge
movs
xlat
push
or
push
pop
mov
xlat
push
mov
push
jge
movs
xlat
pop
or
push
pop
mov
push
mov
xlat
pop
or
push
pop
mov
push
jnp
scas
xlat
pop
mov
push
push
or
xlat
pop
mov
xlat
push
mov
xlat
jge
mov
push
pop
mov
push
pop
or
push
jge
movs
xlat
pop
mov
xlat
pop
or
push
push
or
xlat
pop
mov
xlat
push
or
push
jnp
lods
xlat
push
mov
push
pop
or
xlat
push
mov
xlat
jge
mov
push
pop
mov
xlat
pop
or
push
pop
mov
xlat
push
mov
xlat
pop
or
push
push
or
xlat
pop
mov
push
pop
or
xlat
pop
mov
xlat
pop
mov
push
pop
mov
jge
adc
jge
lods
xlat
pop
or
push
pop
mov
xlat
jge
movs
xlat
pop
or
xlat
push
or
xlat
pop
or
push
jnp
movs
xlat
pop
mov
xlat
pop
or
xlat
jge
adc
or
push
push
mov
push
pop
mov
pop
mov
xlat
push
or
xlat
push
mov
xlat
jge
mov
pop
or
push
push
or
xlat
jp
scas
xlat
ins
or
xlat
dec
mov
xlat
push
or
xlat
ins
mov
push
pop
or
push
pop
or
push
push
or
push
ins
or
xlat
dec
mov
push
push
mov
xlat
pop
mov
xlat
pop
or
push
pop
mov
push
pop
mov
pop
mov
xlat
pop
or
xlat
push
or
xlat
pop
or
push
pop
mov
xlat
jp
movs
xlat
dec
mov
push
pop
or
push
dec
mov
xlat
pop
or
push
pop
mov
push
pop
or
xlat
pop
mov
xlat
pop
or
push
push
mov
push
pop
mov
push
pop
or
xlat
pop
mov
xlat
push
mov
xlat
pop
mov
pop
or
xlat
pop
mov
push
or
xlat
ins
mov
push
push
or
push
pop
mov
xlat
pop
mov
xlat
pop
mov
xlat
push
or
xlat
push
mov
push
pop
mov
xlat
jp
movs
xlat
ins
or
xlat
inc
mov
push
push
or
push
jge
scas
xlat
pop
or
xlat
pop
mov
push
or
xlat
pop
mov
xlat
pop
mov
xlat
pop
or
push
jge
mov
push
pop
mov
push
pop
mov
push
pop
mov
push
pop
or
xlat
pop
mov
push
jge
adc
jge
stos
xlat
pop
or
push
pop
or
push
jge
mov
xlat
pop
mov
push
pop
or
push
pop
or
xlat
jp
lods
xlat
ins
mov
push
pop
or
push
push
or
xlat
push
lods
push
dec
mov
push
push
or
xlat
pop
mov
push
push
mov
push
jge
scas
xlat
pop
or
push
pop
mov
xlat
jge
movs
xlat
pop
or
xlat
pop
mov
push
pop
or
xlat
pop
mov
push
mov
xlat
pop
or
push
push
or
xlat
push
or
push
pop
or
xlat
jge
lods
xlat
pop
or
push
pop
mov
push
jge
scas
xlat
pop
or
push
pop
mov
xlat
pop
or
push
pop
or
xlat
pop
mov
xlat
push
or
push
pop
mov
pop
mov
push
mov
push
pop
or
push
push
or
push
pop
mov
xlat
jge
cmps
xlat
pop
or
push
pop
or
push
push
mov
push
dec
mov
push
jge
lods
xlat
pop
or
push
jge
stos
xlat
pop
mov
push
pop
or
push
pop
or
xlat
pop
mov
xlat
pop
mov
xlat
pop
mov
push
push
or
xlat
pop
or
push
jp
mov
xlat
inc
mov
xlat
pop
or
push
push
or
xlat
pop
mov
push
push
mov
push
pop
mov
pop
mov
push
mov
push
pop
or
push
push
or
push
pop
mov
xlat
pop
or
xlat
pop
or
push
jge
lods
xlat
push
or
push
push
mov
push
pop
or
push
pop
mov
xlat
ins
or
xlat
jne
(bad)
push
jge
adc
jge
lods
xlat
pop
or
push
jge
mov
push
jge
stos
xlat
pop
or
push
push
or
xlat
pop
mov
xlat
jge
movs
xlat
pop
or
xlat
pop
mov
push
push
mov
xlat
push
or
push
pop
or
xlat
dec
mov
xlat
pop
or
push
pop
or
xlat
jge
adc
dec
mov
jge
mov
push
pop
mov
push
pop
or
xlat
pop
or
xlat
pop
mov
xlat
push
or
xlat
pop
or
push
push
mov
xlat
jp
movs
xlat
ins
or
xlat
dec
mov
push
pop
or
push
push
mov
push
push
mov
xlat
jge
scas
xlat
pop
mov
push
jge
lods
xlat
pop
mov
pop
or
xlat
jge
movs
xlat
pop
mov
pop
mov
xlat
push
or
push
jge
lods
xlat
inc
or
xlat
jge
mov
push
or
xlat
pop
mov
push
pop
mov
push
jp
movs
xlat
ins
mov
push
push
or
push
jge
scas
xlat
pop
or
push
push
or
xlat
push
or
xlat
push
or
xlat
push
mov
xlat
jge
mov
push
push
mov
xlat
pop
or
push
pop
or
push
jge
movs
xlat
pop
or
xlat
pop
mov
pop
or
push
jge
lods
xlat
pop
or
push
pop
or
push
push
mov
push
jge
scas
xlat
pop
mov
push
pop
or
xlat
jp
lods
xlat
ins
or
xlat
je
repz
jge
adc
pop
mov
push
pop
mov
push
push
mov
push
jns
mov
push
push
or
push
pop
mov
xlat
pop
mov
push
jge
movs
xlat
pop
mov
push
or
push
jge
scas
xlat
pop
mov
push
jge
mov
push
push
or
xlat
pop
mov
pop
or
push
pop
mov
xlat
push
mov
push
push
mov
push
jge
scas
xlat
pop
mov
push
pop
mov
xlat
pop
mov
dec
or
push
push
or
push
pop
mov
xlat
jle
scas
push
push
mov
xlat
pop
mov
ins
mov
push
or
push
jge
scas
xlat
pop
or
push
push
or
xlat
push
or
xlat
push
or
xlat
push
mov
xlat
jge
mov
push
push
mov
xlat
pop
or
push
pop
or
push
jge
movs
xlat
pop
or
push
pop
mov
ja
xchg
ja
adc
xchg
or
xlat
pop
or
push
pop
mov
xlat
push
or
push
jp
scas
xlat
ins
mov
push
pop
mov
push
pop
mov
push
push
mov
push
popa
mov
xlat
pop
mov
pop
or
push
pop
or
push
jge
mov
push
pop
or
push
push
or
push
pop
mov
push
jge
adc
mov
pop
or
xlat
push
or
xlat
dec
mov
xlat
pop
or
push
pop
or
xlat
push
mov
xlat
pop
mov
pop
mov
xlat
push
or
push
pop
or
xlat
jge
movs
xlat
pop
or
xlat
push
mov
jge
scas
xlat
pop
mov
push
pop
or
push
push
mov
xlat
pop
or
push
push
mov
xlat
ins
mov
xlat
jge
mov
push
pop
or
push
pop
or
xlat
pop
mov
push
push
or
push
jge
scas
xlat
pop
mov
xlat
pop
mov
push
jge
movs
xlat
jge
cmps
xlat
pop
mov
pop
or
push
jge
lods
xlat
pop
mov
pop
mov
xlat
pop
or
xlat
pop
mov
push
pop
mov
push
pop
mov
push
jge
movs
xlat
pop
mov
push
pop
or
push
jge
mov
xlat
push
mov
jge
scas
xlat
pop
mov
push
pop
or
push
push
mov
xlat
pop
or
push
push
mov
xlat
ins
or
xlat
pop
mov
push
pop
or
push
push
mov
xlat
pop
or
push
push
mov
xlat
dec
mov
xlat
push
or
xlat
push
mov
push
push
mov
push
pop
or
push
push
mov
push
jge
scas
xlat
pop
mov
push
pop
mov
push
jge
movs
xlat
pop
or
xlat
pop
mov
push
mov
pop
or
xlat
push
or
xlat
dec
mov
xlat
pop
mov
push
jp
lods
xlat
ins
or
xlat
dec
mov
push
pop
or
xlat
jo
lods
xlat
ins
mov
xlat
pop
mov
push
pop
mov
xlat
dec
or
xlat
bound
xlat
dec
mov
xlat
dec
mov
push
ins
mov
xlat
inc
or
xlat
jo
mov
dec
mov
xlat
push
or
push
pop
mov
xlat
pop
mov
pop
mov
push
push
mov
push
jnp
scas
xlat
pop
mov
push
push
mov
push
pop
mov
xlat
push
or
xlat
pop
or
push
pop
mov
xlat
pop
or
xlat
push
or
push
jge
adc
mov
push
pop
mov
push
jge
mov
xlat
push
or
xlat
push
or
xlat
pop
mov
pop
or
xlat
jge
movs
xlat
pop
mov
pop
mov
xlat
jge
adc
pop
mov
xlat
pop
or
push
pop
mov
xlat
jge
movs
xlat
pop
mov
xlat
push
or
xlat
pop
or
xlat
pop
mov
xlat
push
or
xlat
push
mov
push
pop
mov
xlat
jge
movs
xlat
push
or
push
push
mov
push
jp
movs
xlat
ins
or
xlat
jge
xchg
xlat
ins
mov
xlat
jge
mov
push
jge
lods
xlat
push
or
xlat
pop
mov
jge
lods
xlat
pop
mov
pop
or
push
push
or
xlat
jge
movs
xlat
pop
mov
pop
mov
push
pop
or
push
pop
or
push
jge
adc
push
or
push
push
mov
xlat
jge
mov
push
pop
or
push
pop
or
push
push
mov
push
jge
scas
xlat
pop
mov
push
jnp
scas
xlat
pop
mov
xlat
push
mov
jge
movs
xlat
pop
or
xlat
jge
movs
xlat
pop
or
push
pop
mov
push
jge
scas
xlat
pop
or
xlat
push
or
xlat
pop
or
xlat
pop
mov
push
pop
or
xlat
pop
mov
push
pop
or
xlat
jge
movs
xlat
pop
mov
push
pop
mov
push
jl
adc
or
xlat
push
or
xlat
push
or
xlat
pop
or
push
jge
mov
xlat
pop
or
xlat
pop
or
xlat
je
xchg
mov
xlat
jge
cmps
xlat
pop
or
push
push
or
xlat
pop
mov
pop
mov
pop
or
xlat
pop
mov
xlat
pop
mov
xlat
jp
mov
xlat
jge
adc
or
push
pop
mov
push
pop
or
xlat
pop
mov
xlat
dec
mov
xlat
push
or
xlat
pop
or
push
jge
mov
push
jge
lods
xlat
pop
or
xlat
pop
mov
push
pop
or
push
pop
or
xlat
jge
lods
xlat
pop
or
push
pop
or
xlat
pop
or
push
push
or
push
push
mov
xlat
pop
or
push
pop
mov
pop
mov
push
push
mov
push
push
mov
push
push
or
xlat
jge
mov
push
pop
mov
push
jge
movs
xlat
pop
or
push
push
mov
xlat
jp
lods
xlat
ins
mov
pop
mov
xlat
dec
mov
xlat
pop
or
push
pop
or
xlat
ins
or
xlat
dec
mov
xlat
push
or
xlat
pop
or
push
pop
or
xlat
pop
mov
xlat
jge
cmps
xlat
pop
or
push
push
mov
push
pop
mov
xlat
push
or
push
pop
or
xlat
push
mov
push
push
or
xlat
jge
movs
xlat
pop
mov
push
pop
or
xlat
jge
lods
xlat
push
or
push
push
or
xlat
pop
or
push
pop
mov
xlat
pop
mov
push
jge
movs
xlat
push
mov
push
push
mov
xlat
pop
mov
push
pop
or
xlat
pop
or
xlat
pop
mov
push
pop
mov
xlat
push
or
xlat
pop
or
push
pop
or
push
push
mov
push
pop
or
push
pop
mov
push
jp
scas
xlat
ins
mov
xlat
push
or
push
pop
or
xlat
jge
movs
xlat
jge
cmps
xlat
pop
mov
push
push
mov
xlat
push
or
push
pop
or
xlat
dec
mov
xlat
pop
or
push
pop
or
xlat
jle
mov
mov
xlat
inc
mov
xlat
pop
or
xlat
push
or
push
jge
movs
xlat
pop
mov
push
pop
or
push
jge
mov
xlat
pop
or
push
pop
mov
xlat
inc
or
xlat
jge
mov
push
or
xlat
pop
mov
push
pop
mov
push
jp
movs
xlat
ins
mov
xlat
jge
adc
push
or
xlat
pop
or
xlat
jge
movs
xlat
pop
mov
pop
mov
xlat
push
or
push
pop
or
xlat
jge
movs
xlat
pop
or
xlat
push
mov
jge
scas
xlat
pop
mov
xlat
pop
mov
pop
or
push
jge
lods
xlat
pop
mov
push
pop
or
push
push
mov
xlat
pop
or
push
push
mov
xlat
ins
or
xlat
inc
mov
xlat
jge
mov
push
pop
or
push
pop
mov
pop
mov
xlat
pop
or
push
pop
mov
xlat
dec
mov
push
pop
mov
xlat
push
or
xlat
pop
or
xlat
pop
or
xlat
pop
or
push
pop
mov
push
jge
mov
xlat
jge
movs
xlat
pop
or
push
push
mov
push
pop
mov
xlat
pop
or
xlat
jge
movs
xlat
pop
mov
pop
mov
push
jp
lods
xlat
ins
mov
xlat
push
or
xlat
pop
mov
pop
or
xlat
jge
adc
or
xlat
push
mov
push
push
mov
push
pop
mov
xlat
pop
or
push
jge
movs
xlat
pop
mov
pop
or
push
push
or
push
pop
mov
pop
or
push
push
or
xlat
pop
mov
xlat
dec
mov
xlat
pop
or
push
pop
or
xlat
push
mov
xlat
pop
mov
xlat
pop
mov
xlat
push
or
push
push
mov
push
pop
mov
push
push
mov
pop
mov
jge
scas
xlat
pop
mov
push
jo
lods
xlat
ins
or
xlat
dec
mov
push
pop
mov
xlat
pop
or
xlat
pop
mov
push
or
xlat
dec
mov
push
push
or
push
push
or
xlat
jge
adc
push
mov
xlat
pop
mov
pop
or
xlat
push
mov
jo
scas
xlat
pop
mov
push
pop
or
push
pop
or
xlat
pop
or
push
jp
mov
xlat
pop
mov
push
pop
or
xlat
pop
mov
xlat
pop
or
xlat
jge
movs
xlat
pop
or
xlat
pop
or
push
jge
mov
push
pop
mov
dec
mov
xlat
push
or
push
inc
mov
xlat
pop
mov
push
jnp
adc
pop
or
xlat
pop
mov
pop
or
push
push
or
xlat
pop
mov
push
pop
or
push
jge
mov
xlat
push
mov
jns
scas
xlat
push
or
xlat
pop
mov
pop
or
xlat
jge
adc
or
xlat
jge
movs
xlat
pop
mov
push
pop
or
push
pop
mov
xlat
pop
or
push
pop
or
push
push
mov
xlat
jge
movs
xlat
pop
or
push
push
or
xlat
push
mov
push
push
or
push
push
or
xlat
jge
movs
xlat
push
or
push
push
mov
push
push
or
xlat
jp
movs
xlat
ins
or
xlat
inc
mov
xlat
jge
movs
xlat
pop
or
push
push
or
xlat
push
mov
push
push
or
push
push
or
xlat
jge
movs
xlat
pop
or
push
pop
mov
push
jge
adc
mov
xlat
push
or
xlat
pop
or
xlat
push
mov
push
pop
mov
push
pop
mov
push
pop
mov
push
dec
mov
xlat
push
or
xlat
pop
or
xlat
jp
adc
mov
push
pop
mov
push
ins
or
xlat
pop
mov
xlat
pop
or
push
pop
mov
xlat
or
xchg
xlat
pop
mov
xlat
push
or
push
push
mov
push
push
mov
push
push
mov
xlat
pop
mov
xlat
pop
mov
pop
or
xlat
push
mov
push
push
mov
xlat
pop
or
push
pop
mov
pop
mov
xlat
push
or
push
pop
mov
push
pop
or
push
pop
mov
xlat
pop
or
xlat
pop
mov
push
mov
xlat
pop
mov
pop
or
push
push
or
push
pop
mov
push
push
mov
push
pop
or
push
pop
or
push
pop
mov
xlat
pop
or
push
push
mov
push
je
xchg
xlat
pop
or
push
pop
or
push
pop
mov
push
dec
mov
xlat
pop
or
push
pop
or
xlat
push
mov
push
pop
or
push
push
mov
xlat
cmp
or
xlat
pop
or
push
jge
mov
push
pop
or
xlat
jge
movs
xlat
pop
or
push
pop
mov
push
pop
mov
xlat
pop
mov
pop
or
push
push
mov
xlat
pop
or
xlat
pop
mov
pop
mov
pop
mov
push
pop
or
push
jge
mov
xlat
push
mov
jnp
scas
xlat
pop
mov
push
pop
or
push
jle
xchg
or
push
pop
mov
xlat
push
or
push
pop
or
push
push
mov
xlat
ins
or
xlat
inc
mov
push
pop
mov
push
push
mov
xlat
push
or
xlat
push
mov
xlat
pop
mov
xlat
ins
mov
pop
or
push
pop
or
xlat
push
mov
xlat
pop
or
push
push
or
xlat
dec
mov
xlat
pop
or
push
pop
or
xlat
push
mov
xlat
pop
mov
xlat
pop
mov
push
pop
or
push
pop
mov
xlat
pop
mov
xlat
jp
mov
push
pop
mov
xlat
pop
or
xlat
pop
or
push
pop
or
xlat
ja
xchg
mov
xlat
pop
or
push
jge
mov
xlat
dec
mov
xlat
push
or
xlat
jge
lods
xlat
jge
adc
pop
mov
xlat
jge
adc
dec
mov
push
push
mov
xlat
push
mov
push
push
mov
xlat
push
or
xlat
push
mov
xlat
pop
mov
push
jge
scas
xlat
push
mov
xlat
push
or
xlat
jge
movs
xlat
pop
or
push
jge
stos
xlat
push
mov
xlat
push
or
xlat
pop
or
xlat
jge
movs
xlat
push
or
xlat
pop
mov
xlat
pop
or
push
pop
mov
xlat
pop
mov
push
jge
movs
xlat
pop
or
push
push
mov
xlat
push
or
xlat
jns
movs
push
pop
mov
xlat
pop
mov
push
pop
or
push
pop
mov
xlat
dec
or
push
pop
mov
pop
mov
push
pop
mov
push
or
push
jp
test
ins
or
xlat
pop
mov
push
jge
movs
xlat
pop
or
push
push
mov
xlat
push
or
xlat
jno
movs
xlat
jg
xchg
xlat
pop
or
xlat
pop
or
push
jge
mov
push
pop
or
push
push
or
xlat
dec
mov
push
jp
test
ins
or
xlat
dec
mov
push
jge
movs
xlat
push
or
push
pop
mov
push
push
or
push
jge
scas
xlat
pop
mov
push
pop
or
push
jge
mov
push
pop
mov
push
jge
movs
xlat
pop
mov
xlat
pop
or
push
push
mov
pop
mov
xlat
push
or
push
pop
mov
xlat
push
or
push
push
or
xlat
jo
adc
pop
mov
push
pop
or
push
jge
mov
push
pop
or
push
push
or
xlat
pop
or
push
jo
scas
xlat
ins
or
xlat
inc
mov
push
jo
lods
xlat
ins
mov
push
push
mov
xlat
pop
mov
push
pop
or
xlat
pop
or
xlat
dec
mov
push
pop
mov
push
push
or
push
ins
or
xlat
inc
mov
push
pop
or
push
push
mov
xlat
jl
xchg
xlat
pop
mov
xlat
pop
mov
push
or
push
pop
mov
xlat
pop
or
xlat
jb
movs
push
jge
xchg
xlat
pop
or
xlat
pop
mov
push
dec
mov
push
pop
mov
push
push
or
push
ins
mov
xlat
push
or
xlat
pop
or
push
pop
mov
push
pop
or
xlat
pop
mov
xlat
pop
or
push
push
mov
xlat
dec
mov
xlat
push
or
xlat
pop
or
xlat
ins
mov
xlat
pop
or
push
jge
lods
xlat
pop
or
xlat
push
or
xlat
push
or
xlat
pop
mov
pop
mov
push
dec
or
push
jge
xchg
xlat
pop
or
xlat
pop
mov
push
or
xlat
dec
mov
push
push
or
push
push
or
xlat
ins
mov
dec
mov
pop
or
push
push
or
xlat
push
or
xlat
dec
or
push
jge
xchg
xlat
dec
mov
push
pop
or
xlat
dec
mov
push
pop
mov
push
push
or
push
ins
mov
push
jp
mov
push
pop
mov
jp
mov
xlat
push
or
push
pop
or
push
jp
mov
xlat
inc
mov
push
push
or
push
push
mov
xlat
jge
mov
push
pop
or
xlat
push
mov
push
jge
scas
xlat
pop
mov
push
pop
or
xlat
pop
or
xlat
pop
mov
push
push
mov
xlat
pop
or
push
push
or
xlat
pop
or
push
jge
mov
push
push
or
push
pop
or
push
push
mov
xlat
pop
or
xlat
jge
movs
xlat
pop
or
push
push
or
xlat
push
or
xlat
push
or
xlat
dec
mov
xlat
inc
mov
push
pop
mov
push
jge
lods
xlat
push
or
xlat
pop
mov
xlat
pop
mov
xlat
pop
mov
push
pop
or
xlat
dec
mov
xlat
pop
or
xlat
pop
mov
push
pop
mov
xlat
jge
movs
xlat
pop
mov
push
pop
or
xlat
push
mov
pop
mov
push
pop
or
push
push
or
xlat
pop
or
xlat
jge
stos
xlat
push
mov
push
push
or
push
pop
or
push
jge
movs
xlat
push
mov
xlat
dec
mov
push
pop
mov
xlat
pop
mov
pop
mov
push
or
xlat
jge
scas
xlat
pop
or
xlat
pop
mov
xlat
push
or
xlat
pop
or
push
push
mov
push
pop
mov
push
pop
mov
push
pop
or
xlat
jp
lods
xlat
inc
mov
push
push
or
xlat
pop
mov
xlat
push
or
xlat
pop
or
push
push
mov
push
push
or
xlat
pop
or
xlat
pop
or
xlat
jp
scas
push
pop
mov
push
pop
mov
push
pop
or
xlat
push
mov
xlat
pop
or
push
pop
or
push
push
mov
xlat
pop
mov
pop
mov
xlat
pop
or
push
pop
mov
push
pop
mov
xlat
pop
or
push
pop
mov
dec
mov
xlat
push
or
xlat
pop
or
xlat
dec
mov
push
push
mov
push
mov
xlat
push
mov
jo
scas
xlat
ins
mov
xlat
pop
or
push
push
or
xlat
pop
or
push
jo
mov
xlat
inc
mov
push
or
xlat
pop
or
xlat
pop
or
push
dec
mov
xlat
pop
or
push
push
mov
push
xchg
xlat
pop
mov
push
push
mov
pusha
mov
xlat
jge
mov
push
pop
or
push
pop
mov
inc
or
push
popa
mov
push
pop
mov
push
pop
or
push
pop
or
xlat
jo
lods
xlat
ins
mov
xlat
push
or
xlat
pop
or
xlat
dec
mov
push
pop
or
xlat
jge
lods
xlat
pop
mov
xlat
inc
mov
xlat
push
or
push
push
mov
xlat
pop
mov
xlat
push
or
xlat
push
or
push
push
or
xlat
jge
scas
xlat
pop
or
push
jge
mov
push
pop
mov
xlat
jge
movs
xlat
pop
or
xlat
pop
mov
push
push
or
push
pop
or
push
push
mov
xlat
jge
mov
pop
mov
push
push
or
xlat
jge
lods
xlat
push
or
push
pop
mov
push
pop
or
xlat
pop
or
xlat
pop
mov
push
pop
mov
xlat
pop
mov
push
push
or
push
jp
lods
xlat
outs
mov
push
jge
mov
push
pop
mov
xlat
pop
or
push
pop
mov
xlat
jge
mov
push
jge
scas
xlat
pop
mov
push
pop
mov
push
pop
mov
push
pop
or
xlat
pop
mov
xor
xlat
push
or
xlat
push
or
xlat
jge
mov
push
pop
mov
push
pop
mov
pop
or
xlat
push
mov
jge
movs
xlat
pop
mov
push
pop
mov
pop
or
xlat
push
mov
push
pop
mov
sbb
push
pop
mov
pop
mov
push
pop
or
push
push
or
xlat
jge
mov
push
push
mov
jle
mov
push
pop
mov
sbb
mov
xlat
jbe
mov
mov
push
push
mov
push
jbe
mov
outs
mov
xlat
push
mov
push
pop
mov
pop
or
xlat
push
or
xlat
push
or
xlat
jge
mov
xlat
push
mov
xlat
pop
mov
pop
mov
xlat
jge
mov
push
pop
or
push
pop
mov
pop
mov
push
pop
mov
xlat
push
or
xlat
pop
or
push
pop
mov
pop
mov
xlat
pop
mov
push
push
or
xlat
jge
cmps
xlat
pop
or
push
push
mov
xlat
pop
or
xlat
pop
mov
push
or
xlat
push
or
xlat
pop
or
push
pop
mov
xlat
pop
or
xlat
pop
mov
push
mov
xlat
jge
mov
push
pop
mov
push
pop
or
xlat
pop
or
push
ins
mov
xlat
pop
or
xlat
pop
mov
pop
or
push
pop
mov
push
push
mov
push
pop
mov
push
pop
or
xlat
jge
movs
xlat
pop
mov
pop
or
push
push
mov
push
pop
or
xlat
jge
lods
xlat
jge
loop
pop
or
xlat
push
mov
push
pop
mov
pop
or
xlat
push
or
xlat
pop
or
xlat
jge
movs
xlat
pop
or
xlat
jge
movs
xlat
pop
mov
xlat
jge
cmps
xlat
pop
mov
push
pop
mov
xlat
jge
mov
xlat
pop
or
push
push
mov
push
pop
mov
xlat
jge
mov
push
push
mov
push
pop
or
push
pop
or
xlat
jge
movs
xlat
pop
mov
push
pop
mov
push
jge
adc
mov
xlat
jne
mov
jge
mov
pop
mov
push
or
xlat
jge
mov
push
pop
mov
xlat
pop
mov
pop
or
push
pop
mov
push
pop
or
push
pop
mov
xlat
jge
cmps
xlat
pop
mov
xlat
push
or
xlat
push
or
xlat
pop
or
push
pop
mov
xlat
jbe
mov
mov
push
push
mov
push
jbe
mov
jge
adc
or
xlat
inc
mov
push
push
mov
xlat
jne
(bad)
push
jns
mov
mov
jge
mov
push
push
or
push
push
or
push
pop
or
push
pop
mov
xlat
pop
or
xlat
pop
mov
xlat
pop
or
xlat
jge
movs
xlat
pop
mov
push
or
xlat
push
or
xlat
pop
or
push
pop
mov
push
push
or
xlat
pop
mov
push
push
or
xlat
jge
mov
xlat
pop
or
xlat
pop
mov
push
pop
or
push
pop
mov
xlat
pop
or
xlat
push
or
xlat
pop
or
xlat
jge
movs
xlat
pop
or
xlat
jge
movs
xlat
pop
or
push
push
or
xlat
push
or
xlat
pop
mov
pop
or
xlat
jge
movs
xlat
pop
mov
push
pop
mov
push
pop
or
push
pop
mov
push
jge
mov
xlat
pop
mov
xlat
jge
mov
xlat
pop
or
push
pop
or
push
pop
mov
xlat
pop
or
xlat
push
or
xlat
pop
or
xlat
jnp
movs
xlat
je
xchg
jne
mov
jne
adc
pop
mov
xlat
pop
mov
push
pop
mov
xlat
push
or
push
push
mov
xlat
pop
mov
xlat
pop
mov
push
jge
cmps
xlat
jge
movs
xlat
pop
mov
xlat
push
or
push
pop
mov
pop
mov
xlat
jge
movs
xlat
jne
adc
mov
inc
or
push
jge
mov
jp
scas
xlat
je
(bad)
push
jno
(bad)
push
jns
mov
outs
or
xlat
dec
mov
push
jge
mov
push
push
or
xlat
pop
or
push
jge
cmps
xlat
jge
loop
push
or
xlat
push
or
xlat
jge
mov
push
push
or
xlat
pop
mov
push
push
or
push
jge
mov
push
pop
or
xlat
jge
mov
push
push
mov
push
or
push
pop
mov
pop
or
push
push
mov
jle
mov
push
pop
mov
sbb
mov
xlat
jno
mov
inc
mov
push
push
mov
xlat
je
(bad)
push
dec
or
push
push
mov
push
push
or
xlat
jge
mov
push
push
or
xlat
push
or
xlat
push
or
xlat
sbb
push
pop
mov
pop
mov
push
pop
or
push
push
or
xlat
jp
mov
xlat
inc
mov
xlat
pop
or
push
push
mov
push
pop
mov
pop
or
xlat
pop
mov
push
pop
mov
xlat
jge
mov
push
pop
or
xlat
pop
or
push
pop
or
xlat
pop
mov
push
pop
or
push
push
mov
push
jp
scas
xlat
dec
mov
push
jge
movs
xlat
push
mov
push
jge
cmps
xlat
pop
mov
xlat
jge
cmps
xlat
pop
mov
xlat
jge
mov
push
push
mov
xlat
jge
mov
push
push
mov
push
push
mov
xlat
pop
mov
push
pop
or
push
pop
mov
xlat
pop
or
push
push
or
xlat
jge
movs
xlat
pop
or
xlat
jge
cmps
xlat
push
or
push
push
mov
xlat
outs
or
xlat
dec
mov
push
pop
mov
push
pop
mov
xlat
pop
or
xlat
pop
or
push
pop
mov
push
push
mov
push
pop
or
push
pop
or
xlat
pop
or
xlat
jge
mov
push
pop
mov
pop
or
xlat
jge
movs
xlat
push
mov
xlat
push
or
xlat
pop
mov
jge
cmps
xlat
pop
or
push
push
mov
push
pop
or
xlat
jge
lods
xlat
pop
or
push
push
mov
xlat
push
or
push
pop
mov
push
mov
xlat
pop
or
push
pop
mov
push
pop
or
xlat
jge
mov
push
pop
or
push
push
or
xlat
pop
mov
jge
movs
xlat
pop
or
xlat
jge
cmps
xlat
push
mov
push
jge
cmps
xlat
push
or
push
push
mov
xlat
pop
mov
inc
mov
jge
movs
xlat
pop
mov
push
pop
or
xlat
pop
mov
pop
or
xlat
push
mov
push
pop
mov
xlat
pop
or
push
push
or
xlat
jge
cmps
xlat
pop
or
xlat
push
mov
push
mov
pop
or
push
push
or
xlat
pop
mov
xlat
pop
or
xlat
pop
mov
xlat
pop
mov
push
mov
xlat
jge
out
pop
mov
push
pop
or
push
pop
or
push
pop
mov
push
or
xlat
pop
mov
xlat
push
or
push
jge
mov
xlat
pop
mov
xlat
jnp
mov
push
pop
mov
push
push
or
xlat
jge
out
push
mov
pop
or
push
push
or
push
jge
mov
xlat
pop
mov
push
push
or
xlat
push
or
xlat
push
or
xlat
jge
out
pop
mov
push
pop
mov
xlat
pop
mov
push
or
xlat
sbb
mov
xlat
pop
or
xlat
push
or
xlat
push
or
xlat
jnp
mov
push
pop
or
xlat
pop
mov
jge
adc
or
push
pop
mov
xlat
pop
mov
push
push
mov
xlat
push
mov
xlat
pop
or
push
push
or
push
pop
or
push
jge
mov
push
ja
xchg
mov
xlat
jp
mov
xlat
dec
mov
xlat
push
or
xlat
push
mov
pop
or
push
push
or
push
pop
or
push
outs
or
xlat
dec
mov
xlat
push
or
xlat
pop
mov
xlat
pop
mov
xlat
jge
loop
pop
mov
pop
or
xlat
pop
or
xlat
pop
or
xlat
jp
movs
xlat
dec
mov
push
pop
or
push
jge
mov
pop
or
push
pop
mov
push
pop
or
push
pop
or
xlat
jge
mov
push
push
mov
xlat
imul
arpl
push
pop
mov
pop
mov
xlat
push
or
xlat
jp
mov
xlat
dec
mov
xlat
jge
cmps
xlat
pop
or
push
pop
mov
push
pop
or
push
pop
or
xlat
jge
movs
xlat
pop
or
xlat
pop
mov
push
or
xlat
sbb
push
pop
or
xlat
push
mov
pop
mov
push
pop
mov
push
jge
adc
push
mov
xlat
push
or
xlat
jge
movs
xlat
pop
or
xlat
push
mov
xlat
push
or
xlat
pop
mov
push
adc
pop
or
push
pop
or
push
push
mov
jb
xchg
xlat
pop
or
xlat
pop
mov
push
push
mov
push
jge
scas
xlat
pop
or
push
sbb
mov
xlat
pop
or
push
pop
or
push
pop
mov
pop
mov
xlat
mov
push
or
xlat
push
or
push
pop
or
xlat
jge
lods
xlat
pop
or
push
pop
mov
push
jge
scas
xlat
pop
or
xlat
push
or
xlat
pop
or
push
sbb
mov
xlat
push
mov
push
push
or
push
pop
or
push
pop
mov
xlat
pop
mov
xlat
push
or
push
pop
mov
pop
mov
xlat
pop
or
xlat
pop
mov
push
pop
or
xlat
pop
mov
dec
mov
pop
mov
push
pop
or
xlat
pop
or
xlat
jge
movs
xlat
pop
or
xlat
jge
movs
xlat
pop
mov
push
jge
cmps
xlat
pop
or
xlat
pop
or
push
push
or
xlat
jge
cmps
xlat
pop
or
push
pop
mov
xlat
pop
or
push
mov
xlat
pop
mov
xlat
pop
or
push
push
or
xlat
pop
mov
push
pop
mov
push
jge
mov
xlat
pop
or
push
push
or
push
pop
or
push
pop
mov
xlat
pop
mov
xlat
push
or
push
pop
mov
sbb
xlat
pop
or
push
push
or
push
pop
or
push
pop
mov
xlat
pop
or
xlat
push
mov
push
push
mov
push
mov
xlat
jp
(bad)
xlat
jns
xchg
push
or
xlat
pop
mov
xlat
jge
movs
xlat
pop
or
xlat
pop
mov
push
jge
adc
mov
xlat
pop
mov
push
pop
or
xlat
pop
or
xlat
jge
movs
xlat
pop
mov
push
pop
mov
xlat
jge
cmps
xlat
push
or
push
push
mov
xlat
pop
or
xlat
pop
mov
push
pop
mov
xlat
pop
mov
push
push
mov
xlat
pop
mov
push
pop
or
push
jp
mov
xlat
push
or
xlat
jge
movs
xlat
pop
or
xlat
pop
or
push
push
mov
xlat
pop
mov
push
pop
or
xlat
pop
or
xlat
jge
movs
xlat
push
or
push
jge
mov
push
push
mov
pop
mov
xlat
push
mov
push
or
xlat
jge
movs
xlat
pop
or
xlat
pop
mov
xlat
pop
mov
push
pop
mov
xlat
push
mov
xlat
adc
push
push
mov
push
pop
or
xlat
jp
mov
xlat
push
or
xlat
pop
or
push
pop
or
xlat
push
mov
push
pop
or
push
pop
or
xlat
pop
mov
pop
or
xlat
pop
or
push
pop
mov
push
pop
mov
push
pop
mov
push
pop
mov
push
pop
or
xlat
pop
or
push
pop
mov
push
mov
xlat
dec
mov
xlat
pop
or
push
push
or
xlat
push
or
xlat
push
or
xlat
push
mov
xlat
jge
out
pop
or
xlat
pop
mov
push
push
or
xlat
jge
mov
push
pop
mov
push
pop
mov
xlat
pop
or
xlat
pop
mov
xlat
pop
or
push
pop
mov
jge
mov
push
pop
or
push
pop
or
push
push
mov
xlat
outs
or
xlat
jne
cli
push
jge
adc
push
mov
push
pop
mov
push
pop
mov
push
pop
mov
xlat
pop
mov
push
pop
mov
pop
or
xlat
push
or
xlat
jge
movs
xlat
pop
or
xlat
push
mov
xlat
push
or
xlat
pop
mov
xlat
jge
mov
push
push
or
push
pop
mov
jge
cmps
xlat
pop
mov
push
pop
mov
push
push
mov
push
push
or
xlat
jge
movs
xlat
pop
mov
push
pop
or
xlat
pop
mov
pop
mov
xlat
pop
mov
push
push
or
xlat
pop
mov
push
pop
or
push
push
or
push
pop
or
push
pop
mov
xlat
bound
xlat
pop
mov
xlat
jge
movs
xlat
pop
or
xlat
pop
mov
xlat
data16
push
pop
mov
pop
mov
push
push
mov
push
jge
scas
xlat
pop
or
push
sbb
mov
xlat
pop
or
push
pop
or
push
pop
mov
push
mov
push
ja
xchg
ja
adc
xchg
or
push
pop
mov
xlat
pop
mov
push
pop
mov
push
pop
mov
xlat
push
mov
push
or
xlat
pop
mov
push
push
mov
push
jge
scas
xlat
pop
or
push
pop
mov
xlat
jge
movs
xlat
pop
or
xlat
pop
mov
push
pop
or
xlat
pop
mov
xlat
push
or
xlat
push
mov
push
pop
mov
push
jge
movs
xlat
pop
or
push
push
or
xlat
push
mov
push
pop
or
push
push
mov
push
xor
push
push
mov
xlat
pop
mov
push
pop
mov
push
pop
mov
push
jge
adc
or
xlat
pop
mov
xlat
jge
movs
xlat
pop
or
xlat
push
mov
push
pop
or
push
pop
or
xlat
pop
mov
push
or
xlat
pop
or
push
pop
or
xlat
pop
mov
xlat
pop
or
push
push
or
push
pop
or
xlat
pop
mov
pop
mov
xlat
push
or
xlat
pop
mov
xlat
pop
mov
xlat
pop
or
xlat
pop
or
push
push
mov
xlat
pop
mov
xlat
pop
or
push
pop
mov
xlat
outs
mov
push
jge
movs
xlat
pop
or
push
push
mov
push
jge
cmps
xlat
pop
or
xlat
pop
or
xlat
pop
or
xlat
jnp
movs
xlat
pop
mov
xlat
pop
or
push
pop
mov
push
jge
mov
push
pop
or
push
pop
or
push
push
mov
xlat
pop
mov
push
pop
or
push
jge
mov
xlat
push
mov
push
pop
or
push
push
mov
xlat
pop
or
xlat
pop
mov
push
mov
xlat
pop
mov
push
pop
mov
push
jge
cmps
xlat
pop
mov
xlat
pop
or
push
pop
mov
xlat
jns
movs
push
pusha
mov
xlat
pop
mov
xlat
pop
or
xlat
pop
or
push
push
mov
xlat
pop
mov
xlat
pop
or
push
pop
mov
xlat
dec
mov
xlat
push
or
xlat
jge
mov
xlat
jge
movs
xlat
pop
or
xlat
push
mov
push
pop
or
push
pop
or
xlat
pop
mov
pop
mov
xlat
pop
or
xlat
push
or
xlat
pop
mov
push
pop
mov
xlat
pop
mov
push
inc
mov
push
pop
or
xlat
push
or
xlat
pop
or
push
pop
or
xlat
pop
mov
jge
movs
xlat
pop
or
push
push
mov
outs
or
xlat
dec
mov
xlat
push
or
xlat
pop
mov
jl
xchg
xlat
push
mov
pop
mov
push
pop
or
push
push
mov
xlat
pop
or
xlat
bound
xlat
pop
mov
push
pop
mov
xlat
jge
cmps
xlat
push
or
push
push
mov
xlat
icebp
mov
pop
mov
jge
mov
push
pop
mov
xlat
push
or
xlat
pop
or
push
pop
mov
push
push
mov
xlat
pop
mov
push
push
mov
push
jnp
scas
xlat
pop
mov
push
push
mov
push
pop
mov
xlat
pop
or
xlat
jge
movs
xlat
pop
mov
push
or
xlat
jnp
movs
xlat
push
mov
xlat
jge
mov
xlat
push
or
xlat
jge
mov
push
pop
or
push
push
mov
push
or
xlat
jge
mov
xlat
push
or
xlat
push
or
xlat
pop
mov
jge
adc
pop
mov
push
push
mov
xlat
pop
mov
xlat
jge
mov
push
push
mov
push
pop
mov
pop
mov
push
or
xlat
jge
mov
xlat
jge
movs
xlat
pop
mov
push
pop
mov
jge
mov
push
push
or
xlat
pop
mov
xlat
pop
or
xlat
jp
movs
xlat
outs
or
xlat
inc
mov
push
pop
or
push
push
mov
push
pop
or
push
push
mov
xlat
pop
mov
pop
mov
xlat
jge
mov
push
push
or
push
push
or
xlat
push
or
xlat
jge
movs
xlat
push
or
push
push
or
push
pop
mov
push
or
push
pop
or
push
pop
or
push
pop
or
push
push
mov
xlat
pop
mov
xlat
jge
movs
xlat
pop
mov
pop
or
push
pop
or
push
push
or
xlat
jge
movs
xlat
pop
or
xlat
push
mov
push
push
mov
pop
mov
push
jge
adc
mov
xlat
pop
or
push
pop
mov
push
pop
mov
xlat
pop
or
xlat
push
or
xlat
pop
or
xlat
pop
mov
push
pop
or
xlat
jge
movs
xlat
pop
mov
pop
or
xlat
pop
mov
pop
mov
xlat
pop
mov
push
jge
mov
push
push
or
push
pop
mov
push
jl
adc
pop
or
xlat
push
or
xlat
push
or
xlat
pop
mov
pop
mov
push
jge
scas
xlat
pop
or
push
pop
mov
xlat
jge
movs
xlat
pop
mov
push
pop
mov
xlat
push
mov
push
push
mov
push
jge
scas
xlat
pop
or
push
push
or
xlat
push
or
xlat
push
or
xlat
pop
mov
xlat
pop
mov
pop
mov
push
pop
mov
xlat
pop
mov
xlat
pop
mov
xlat
jl
adc
or
xlat
push
or
xlat
push
or
xlat
pop
or
push
pop
mov
push
pop
mov
push
pop
mov
push
dec
or
push
pop
mov
push
pop
mov
push
pop
mov
inc
mov
push
pop
mov
pop
or
push
pop
mov
push
jge
adc
or
push
pop
mov
push
jge
adc
or
push
push
or
xlat
pop
mov
push
jnp
cmps
xlat
dec
mov
push
pop
mov
xlat
pop
or
xlat
pop
or
xlat
pop
mov
pop
mov
xlat
pop
mov
xlat
push
or
xlat
pop
mov
xlat
pop
or
xlat
jle
mov
xlat
pop
mov
pop
mov
xlat
push
mov
jge
mov
xlat
pop
mov
xlat
pop
mov
pop
mov
xlat
push
mov
pop
or
xlat
push
mov
xlat
push
mov
jge
movs
xlat
pop
mov
push
pop
mov
data16
jge
mov
push
dec
mov
jg
mov
xlat
pop
mov
push
pop
or
push
jge
mov
xlat
pop
or
xlat
push
mov
push
pop
mov
pop
mov
xlat
pop
mov
push
pop
or
push
push
mov
xlat
pop
or
push
push
or
push
pop
mov
xlat
push
or
push
push
or
xlat
jge
mov
push
push
mov
xlat
push
mov
jge
movs
xlat
push
or
xlat
push
mov
xlat
push
or
xlat
jge
mov
push
pop
mov
xlat
pop
mov
xlat
pop
or
xlat
jle
mov
xlat
pop
mov
pop
mov
xlat
push
or
xlat
pop
mov
push
pop
or
xlat
pop
or
xlat
jp
mov
xlat
dec
mov
xlat
pop
mov
push
pop
or
push
push
mov
xlat
pop
mov
pop
mov
push
pop
or
xlat
pop
mov
push
mov
pop
mov
push
jge
mov
push
dec
mov
jo
mov
xlat
jne
mov
xlat
pop
or
push
push
or
push
push
or
push
pop
mov
dec
mov
xlat
pop
or
push
pop
or
xlat
pop
mov
xlat
pop
or
xlat
pop
mov
xlat
pop
mov
push
pop
mov
push
pop
mov
xlat
pop
or
xlat
pop
mov
xlat
pop
or
push
pop
or
push
jp
lods
xlat
outs
mov
xlat
jge
adc
push
or
push
pop
mov
push
pop
mov
push
pop
mov
push
pop
mov
xlat
push
or
xlat
pop
mov
xlat
pop
mov
xlat
pop
or
xlat
pop
or
push
push
mov
xlat
pop
mov
xlat
pop
or
push
pop
mov
xlat
outs
or
xlat
inc
mov
xlat
push
or
xlat
pop
mov
xlat
push
or
xlat
pop
or
xlat
pop
or
push
pop
mov
push
jge
mov
push
pop
mov
xlat
push
or
xlat
jge
movs
xlat
pop
mov
xlat
pop
mov
push
pop
mov
push
push
mov
xlat
pop
mov
push
pop
or
push
push
or
xlat
pop
mov
xlat
push
or
xlat
jge
movs
xlat
pop
mov
push
pop
or
xlat
pop
or
xlat
jge
cmps
xlat
pop
or
push
push
mov
push
pop
mov
xlat
pop
or
xlat
pop
mov
jge
mov
push
push
or
push
jp
mov
xlat
inc
mov
push
push
or
push
push
mov
pop
or
push
pop
mov
xlat
jge
mov
xlat
pop
mov
push
pop
mov
xlat
push
or
xlat
pop
mov
pop
or
xlat
pop
or
push
dec
mov
xlat
pop
or
push
pop
or
xlat
js
mov
mov
pop
mov
push
dec
mov
xlat
push
or
xlat
pop
mov
xlat
push
mov
push
pop
or
push
jp
scas
xlat
inc
mov
push
pop
mov
xlat
pop
or
push
pop
mov
xlat
push
or
xlat
pop
mov
xlat
pop
mov
push
pop
or
push
pop
mov
xlat
pop
mov
xlat
jp
mov
push
pop
mov
xlat
pop
mov
push
pop
mov
push
push
or
xlat
jge
movs
xlat
push
or
push
jle
xchg
or
xlat
pop
or
push
push
mov
xlat
push
mov
xlat
jge
mov
push
push
mov
xlat
pop
or
push
pop
mov
push
jnp
adc
pop
or
xlat
pop
or
push
pop
mov
push
jge
mov
xlat
push
mov
push
pop
mov
xlat
push
or
xlat
push
or
xlat
pop
mov
push
pop
or
push
pop
or
push
jge
mov
push
push
mov
push
pop
mov
push
jge
adc
or
xlat
pop
mov
xlat
push
or
push
push
or
push
push
or
xlat
jp
movs
xlat
dec
mov
push
pop
or
push
push
or
xlat
push
or
xlat
jge
mov
xlat
jge
movs
xlat
pop
or
xlat
push
mov
push
push
mov
push
push
or
push
push
or
xlat
jge
movs
xlat
jge
loop
pop
or
push
push
or
push
pop
mov
push
xor
or
push
push
mov
xlat
jge
movs
xlat
pop
mov
xlat
push
or
push
push
or
push
push
or
xlat
jge
movs
xlat
pop
or
xlat
pop
mov
xlat
jge
mov
push
push
or
push
pop
mov
xlat
push
mov
xlat
push
or
xlat
pop
or
xlat
pop
or
xlat
pop
or
push
push
mov
xlat
pop
mov
xlat
pop
or
xlat
pop
mov
xlat
pop
or
push
jns
xchg
pop
mov
push
pop
mov
push
jge
cmps
xlat
push
or
push
dec
mov
xlat
push
or
xlat
pop
or
xlat
jp
adc
mov
xlat
push
or
xlat
jge
movs
xlat
pop
or
xlat
pop
or
push
push
mov
push
mov
pop
mov
xlat
pop
or
xlat
jne
movs
xlat
or
push
push
or
push
push
or
xlat
jge
movs
xlat
jge
mov
push
push
or
push
pop
or
push
pop
or
push
push
mov
push
push
mov
xlat
push
or
push
jge
mov
push
pop
mov
push
mov
push
push
or
xlat
push
or
xlat
jge
movs
xlat
pop
mov
push
push
or
push
pop
or
push
pop
or
push
pop
mov
xlat
pop
or
xlat
pop
mov
xlat
jge
movs
xlat
pop
or
xlat
pop
mov
xlat
pop
or
push
pop
or
push
pop
or
push
pop
mov
xlat
pop
or
push
pop
mov
xlat
jge
mov
push
push
or
push
pop
mov
xlat
jp
cmps
xlat
outs
or
xlat
dec
mov
xlat
push
or
xlat
push
mov
jge
movs
xlat
pop
or
xlat
push
mov
push
pop
or
push
pop
or
xlat
pop
mov
push
or
xlat
pop
or
push
pop
or
xlat
je
mov
or
mov
push
pop
mov
push
jge
cmps
xlat
push
or
push
jle
xchg
or
xlat
pop
mov
xlat
pop
mov
pop
mov
xlat
pop
mov
xlat
pop
or
push
push
mov
xlat
pop
or
xlat
pop
or
push
pop
mov
push
pop
mov
push
pop
mov
xlat
push
or
xlat
pop
mov
xlat
push
or
xlat
pop
or
push
pop
or
xlat
jge
adc
or
xlat
pop
or
push
pop
or
push
push
mov
xlat
dec
or
push
push
mov
push
inc
mov
push
pop
or
push
pop
or
xlat
pop
mov
outs
or
xlat
inc
mov
push
pop
mov
xlat
inc
or
xlat
push
or
xlat
push
or
xlat
inc
mov
xlat
pop
mov
push
ja
mov
push
mov
pop
or
push
pop
mov
jge
mov
push
jge
mov
push
push
mov
xlat
pop
or
push
pop
mov
xlat
pop
mov
push
pop
or
push
jge
mov
xlat
pop
or
push
pop
or
push
pop
mov
xlat
pop
mov
xlat
jp
mov
push
pop
mov
xlat
pop
or
xlat
pop
or
push
pop
or
xlat
outs
or
xlat
dec
mov
push
pop
or
push
jge
cmps
xlat
push
or
push
jle
xchg
or
push
pop
mov
xlat
jge
cmps
xlat
jge
adc
pop
mov
xlat
jle
cmps
push
jbe
adc
pop
or
xlat
pop
or
push
pop
mov
push
pop
mov
xlat
pop
or
xlat
pop
or
push
pop
mov
xlat
pop
mov
push
pop
mov
pop
mov
push
jge
scas
xlat
pop
or
push
pop
mov
xlat
jge
test
pop
mov
pop
mov
jge
mov
push
push
mov
xlat
pop
or
push
push
mov
xlat
pop
mov
push
push
or
push
pop
or
push
pop
mov
push
pop
mov
xlat
push
or
push
pop
or
push
pop
mov
xlat
jge
movs
xlat
pop
mov
push
pop
mov
push
jge
cmps
xlat
push
or
push
jle
xchg
or
xlat
jge
movs
xlat
push
mov
xlat
push
or
xlat
jge
movs
xlat
pop
or
push
jle
stos
push
jbe
adc
or
push
push
or
push
pop
or
push
pop
or
xlat
jge
movs
xlat
jge
movs
xlat
pop
or
push
push
mov
push
pop
or
xlat
jno
movs
xlat
je
xchg
xlat
pop
mov
push
pop
mov
push
jge
cmps
xlat
push
or
push
jle
xchg
or
push
pop
or
push
jge
scas
xlat
pop
or
push
jle
stos
push
jno
adc
or
push
pop
or
push
push
or
push
pop
mov
push
pop
mov
push
pop
mov
xlat
push
mov
push
or
push
pop
or
push
pop
mov
xlat
pop
or
push
dec
mov
xlat
pop
or
push
pop
or
xlat
push
mov
xlat
pop
mov
xlat
jge
movs
xlat
pop
or
xlat
pop
mov
push
pop
mov
xlat
push
or
xlat
push
or
push
push
or
xlat
jp
mov
xlat
inc
mov
push
push
or
xlat
pop
or
push
dec
mov
xlat
pop
or
push
pop
or
xlat
jo
mov
mov
push
or
xlat
jo
cmps
xlat
outs
mov
xlat
pop
or
xlat
pop
mov
pop
mov
push
push
mov
xlat
pop
mov
push
pop
or
xlat
pop
or
xlat
jae
mov
xlat
pop
mov
push
pop
or
push
push
mov
xlat
jns
xchg
xlat
pop
or
xlat
pop
mov
push
push
or
xlat
pop
or
push
pop
mov
xlat
push
or
xlat
pop
or
push
pop
or
xlat
outs
or
xlat
dec
mov
xlat
pop
mov
push
pop
mov
xlat
push
or
xlat
pop
or
push
pop
or
xlat
outs
mov
push
pop
or
xlat
pop
mov
push
pop
or
push
pop
mov
xlat
jge
mov
push
pop
mov
dec
mov
xlat
push
or
xlat
pop
or
xlat
outs
mov
xlat
push
or
push
pop
or
push
pop
mov
xlat
jge
cmps
xlat
pop
mov
push
pop
mov
push
push
mov
pop
mov
push
pop
mov
dec
mov
xlat
push
or
xlat
pop
mov
xlat
push
mov
push
pop
or
push
dec
mov
xlat
pop
mov
push
pop
mov
xlat
push
or
xlat
push
or
xlat
jge
mov
xlat
dec
or
push
jns
xchg
xlat
dec
mov
xlat
pop
mov
push
pop
mov
push
jge
mov
xlat
pop
or
xlat
pop
or
push
outs
mov
push
jp
lods
xlat
pop
mov
push
pop
or
push
jp
mov
xlat
push
or
push
pop
or
push
jp
mov
xlat
dec
mov
push
push
mov
xlat
jge
movs
xlat
pop
mov
push
pop
or
xlat
jge
mov
push
jge
mov
push
push
or
push
pop
or
push
push
mov
xlat
pop
mov
pop
mov
pop
or
xlat
pop
or
push
push
or
xlat
pop
or
push
pop
mov
xlat
push
or
xlat
pop
or
push
pop
mov
push
pop
mov
push
jge
mov
pop
mov
pop
or
push
push
or
xlat
push
or
xlat
push
or
xlat
jge
adc
pop
mov
push
push
or
push
push
or
xlat
pop
or
push
push
mov
push
pop
or
push
push
mov
xlat
pop
or
push
pop
mov
xlat
pop
mov
push
pop
or
xlat
jp
cmps
xlat
outs
mov
push
pop
or
xlat
pop
mov
pop
mov
xlat
jge
movs
xlat
pop
or
push
pop
mov
push
pop
mov
push
pop
mov
push
pop
mov
push
in
mov
pop
mov
push
push
or
xlat
jge
movs
xlat
jge
mov
push
pop
mov
push
pop
mov
xlat
jge
mov
push
pop
or
xlat
push
or
xlat
pop
or
push
pop
mov
xlat
pop
or
xlat
pop
mov
xlat
push
or
xlat
pop
or
push
push
mov
xlat
pop
mov
push
pop
mov
push
or
xlat
push
or
xlat
pop
or
push
push
mov
push
push
or
xlat
pop
or
xlat
pop
or
xlat
jp
scas
push
pop
mov
push
pop
mov
push
pop
or
xlat
push
mov
xlat
pop
or
push
pop
or
push
push
mov
xlat
pop
mov
pop
mov
xlat
pop
or
push
pop
or
push
pop
or
push
pop
mov
push
pop
mov
xlat
pop
or
push
pop
mov
xlat
jp
mov
xlat
push
mov
dec
mov
push
push
mov
push
push
xchg
xlat
pop
mov
push
or
push
dec
mov
xlat
pop
or
push
push
or
xlat
pop
or
push
jo
mov
xlat
pop
mov
push
pop
mov
push
jo
movs
xlat
outs
mov
push
push
mov
imul
push
or
xlat
jo
scas
xlat
outs
mov
push
pop
mov
xlat
pop
or
push
push
or
xlat
pop
or
push
push
mov
xlat
dec
mov
xlat
jge
movs
xlat
pop
or
push
push
or
push
push
mov
xlat
jg
xchg
xlat
pop
mov
jge
mov
push
push
or
push
push
mov
xlat
pop
or
push
jo
movs
xlat
outs
or
xlat
js
mov
push
or
push
push
mov
xlat
pop
mov
xlat
pop
mov
push
pop
mov
push
pop
mov
push
push
mov
xlat
pop
or
push
push
mov
ins
mov
xlat
pop
mov
xlat
pop
mov
pop
or
push
pop
mov
push
jge
scas
xlat
pop
mov
pop
or
push
push
or
xlat
push
mov
push
pop
mov
xlat
pop
mov
(bad)
xchg
xlat
pop
or
xlat
push
mov
xlat
push
mov
jge
movs
xlat
pop
mov
push
pop
mov
jge
movs
xlat
pop
mov
xlat
push
or
xlat
pop
or
push
pop
mov
jge
adc
push
mov
push
pop
mov
pop
mov
xlat
pop
or
push
pop
mov
pop
mov
push
pop
or
push
pop
mov
pop
or
xlat
jge
mov
push
pop
mov
xlat
push
or
xlat
pop
or
xlat
pop
or
xlat
pop
mov
xlat
jbe
mov
mov
push
push
mov
push
jbe
mov
ins
mov
push
jge
mov
xlat
pop
mov
jge
mov
push
pop
mov
push
pop
or
xlat
push
or
xlat
pop
mov
push
jge
mov
push
pop
mov
xlat
push
or
xlat
pop
or
push
push
mov
push
pop
mov
xlat
pop
mov
jge
movs
xlat
pop
or
push
pop
mov
pop
or
xlat
push
or
push
dec
mov
xlat
pop
or
push
pop
mov
xlat
pop
mov
push
push
or
xlat
jge
cmps
xlat
push
mov
xlat
pop
or
push
pop
or
xlat
pop
mov
jge
scas
xlat
pop
mov
push
pop
or
xlat
jge
mov
push
pop
mov
pop
or
xlat
jp
mov
push
dec
mov
pop
or
xlat
pop
or
xlat
push
or
xlat
pop
or
xlat
jge
cmps
xlat
pop
or
xlat
push
mov
push
pop
or
push
pop
or
xlat
pop
mov
xlat
pop
mov
pop
or
xlat
push
or
push
pop
mov
xlat
push
or
push
pop
mov
push
or
push
push
mov
xlat
pop
mov
pop
mov
pop
or
xlat
push
or
xlat
pop
or
xlat
push
mov
push
pop
mov
xlat
pop
mov
xlat
jge
cmps
xlat
pop
mov
push
jge
scas
xlat
pop
mov
push
or
push
pop
mov
pop
or
xlat
pop
or
push
pop
mov
push
jge
scas
xlat
pop
or
xlat
push
mov
push
pop
or
push
pop
or
xlat
pop
mov
xlat
push
or
xlat
pop
or
xlat
jge
adc
or
xlat
jge
cmps
xlat
push
or
push
push
mov
xlat
pop
mov
jne
mov
jne
adc
pop
mov
xlat
push
or
xlat
push
or
push
jge
adc
or
xlat
pop
mov
push
pop
or
push
push
or
push
jge
mov
xlat
pop
mov
xlat
push
or
push
pop
mov
pop
or
push
pop
or
xlat
jns
xchg
jbe
mov
mov
push
push
mov
push
jbe
mov
jge
adc
or
xlat
inc
mov
push
push
mov
xlat
jne
(bad)
push
jns
mov
mov
push
or
push
push
or
push
adc
mov
xlat
pop
or
xlat
pop
mov
pop
or
push
pop
mov
xlat
pop
mov
push
or
xlat
push
or
xlat
pop
or
push
pop
mov
xlat
push
or
xlat
push
mov
push
or
push
pop
mov
push
or
push
push
mov
xlat
pop
mov
pop
mov
pop
or
xlat
push
or
xlat
pop
or
xlat
push
mov
push
pop
mov
xlat
pop
mov
xlat
jge
cmps
xlat
pop
mov
push
jge
scas
xlat
pop
mov
push
or
push
pop
mov
pop
or
push
pop
mov
xlat
adc
or
push
pop
mov
xlat
push
mov
push
adc
mov
xlat
pop
mov
push
pop
mov
xlat
push
mov
push
pop
mov
xlat
pop
mov
jge
movs
xlat
ja
(bad)
push
jp
mov
jne
mov
jge
mov
adc
movs
push
pop
mov
push
jnp
scas
xlat
pop
mov
xlat
pop
mov
pop
or
push
pop
or
push
push
mov
xlat
jge
cmps
xlat
pop
mov
xlat
push
or
xlat
pop
or
push
adc
mov
xlat
jne
adc
mov
inc
or
push
jge
mov
jp
scas
xlat
je
(bad)
push
jno
(bad)
push
jns
mov
ins
or
push
inc
mov
push
jge
lods
xlat
pop
or
push
push
or
xlat
pop
or
push
jge
cmps
xlat
pop
or
push
pop
mov
xlat
pop
mov
xlat
jge
mov
push
push
or
xlat
pop
mov
push
pop
mov
push
mov
xlat
pop
mov
push
pop
mov
xlat
pop
mov
push
push
or
xlat
push
or
push
jge
adc
pop
mov
xlat
jge
cmps
xlat
push
or
push
pop
mov
pop
mov
pop
mov
jno
mov
inc
mov
push
push
mov
xlat
je
(bad)
push
dec
or
push
pop
mov
xlat
jge
movs
xlat
push
or
push
pop
or
push
pop
mov
xlat
jge
cmps
xlat
pop
or
push
pop
mov
pop
mov
push
pop
or
push
pop
mov
sbb
xlat
push
or
push
pop
mov
push
or
push
pop
mov
xlat
pop
mov
xlat
jge
movs
xlat
pop
mov
pop
or
push
pop
mov
push
pop
mov
push
push
mov
xlat
pop
mov
xlat
pop
or
xlat
pop
or
xlat
push
or
xlat
jge
adc
pop
or
push
pop
mov
xlat
pop
or
xlat
push
or
push
pop
or
xlat
pop
mov
push
or
xlat
push
mov
push
pop
or
push
pop
mov
xlat
push
or
xlat
push
mov
push
pop
mov
xlat
pop
mov
xlat
pop
or
xlat
pop
mov
push
pop
mov
xlat
pop
or
push
push
or
xlat
push
mov
push
pop
mov
xlat
pop
mov
pop
or
xlat
pop
mov
xlat
pop
mov
push
pop
or
xlat
push
or
push
push
mov
push
push
mov
push
pop
or
push
jge
mov
xlat
pop
mov
xlat
push
or
xlat
pop
or
push
jge
mov
push
jge
mov
push
pop
mov
xlat
push
or
push
pop
mov
xlat
push
or
push
pop
mov
pop
or
push
jge
mov
push
pop
mov
push
jge
mov
push
sbb
mov
push
pop
mov
push
jge
scas
xlat
jge
cmps
xlat
pop
or
xlat
jge
cmps
xlat
push
mov
push
push
or
xlat
jge
cmps
xlat
push
or
push
push
mov
xlat
pop
or
push
pop
or
push
push
mov
xlat
pop
mov
inc
mov
push
jge
mov
push
pop
mov
xlat
pop
mov
jge
mov
push
push
mov
push
jge
cmps
xlat
pop
mov
pop
mov
xlat
jge
movs
xlat
push
mov
pop
mov
push
jnp
scas
xlat
push
mov
push
pop
mov
xlat
pop
or
xlat
push
mov
xlat
jge
out
push
mov
xlat
pop
or
push
pop
or
xlat
jge
cmps
xlat
pop
mov
push
push
mov
xlat
pop
mov
pop
mov
push
jnp
mov
push
pop
or
push
push
mov
xlat
pop
mov
push
pop
mov
pop
mov
xlat
push
or
push
pop
mov
xlat
push
or
xlat
pop
or
xlat
pop
or
xlat
push
or
push
pop
mov
push
pop
or
xlat
push
or
push
jge
adc
pop
mov
xlat
pop
or
push
push
mov
xlat
jnp
out
pop
mov
xlat
pop
mov
jge
adc
or
push
pop
mov
xlat
pop
or
xlat
jge
mov
push
jge
scas
xlat
pop
mov
xlat
jge
cmps
xlat
jge
mov
adc
or
push
imul
xlat
pop
mov
xlat
push
or
xlat
push
or
xlat
push
or
xlat
pop
or
xlat
pop
mov
push
or
xlat
pop
mov
xlat
push
or
push
sbb
mov
push
pop
mov
push
pop
mov
xlat
dec
mov
push
jge
cmps
xlat
pop
or
xlat
pop
or
push
pop
mov
xlat
dec
mov
xlat
push
or
xlat
pop
or
push
pop
mov
xlat
pop
mov
pop
or
xlat
ins
mov
push
pop
or
xlat
pop
or
push
jge
mov
xlat
pop
or
push
push
mov
push
pop
mov
ds
xlat
push
or
push
pop
mov
xlat
push
or
xlat
adc
mov
xlat
jge
cmps
xlat
pop
or
xlat
pop
mov
push
or
xlat
push
mov
xlat
push
or
push
sbb
mov
push
push
mov
xlat
pop
or
xlat
pop
mov
pop
mov
push
jge
adc
sbb
xlat
pop
or
xlat
jge
mov
push
pop
mov
push
pop
mov
push
jge
mov
xlat
pop
mov
push
pop
or
xlat
pop
mov
push
xchg
xlat
pop
or
push
push
or
xlat
pop
mov
dec
or
xlat
push
or
push
pop
mov
push
push
mov
push
pop
mov
push
mov
xlat
pop
mov
pop
mov
push
pop
or
push
sbb
mov
push
pop
mov
xlat
sub
xlat
pop
or
push
push
or
xlat
push
or
push
pop
or
xlat
jge
lods
xlat
pop
or
push
pop
mov
push
jge
scas
xlat
pop
or
push
pop
mov
push
pop
or
push
push
or
xlat
jge
out
pop
or
xlat
push
mov
push
pop
or
push
pop
or
push
pop
mov
xlat
pop
mov
xlat
push
or
push
pop
mov
push
pop
or
xlat
pop
mov
xlat
pop
or
xlat
pop
mov
push
pop
or
xlat
pop
mov
dec
or
xlat
pop
or
push
pop
mov
xlat
push
mov
xlat
jge
movs
xlat
pop
mov
push
jge
scas
xlat
pop
mov
push
push
mov
xlat
pop
or
push
pop
mov
xlat
pop
or
push
pop
or
push
pop
or
xlat
mov
xlat
pop
mov
push
pop
mov
push
pop
mov
xlat
push
or
xlat
pop
mov
xlat
push
mov
push
push
or
push
jge
mov
push
push
mov
push
pop
mov
pop
or
push
adc
mov
xlat
pop
or
push
push
mov
push
pop
or
push
push
or
xlat
jge
movs
xlat
pop
or
xlat
push
mov
push
pop
mov
push
jp
mov
push
je
adc
jge
adc
pop
mov
push
jge
mov
xlat
pop
mov
xlat
pop
or
push
jge
adc
or
push
pop
mov
push
mov
xlat
jge
movs
xlat
pop
mov
push
jge
scas
xlat
pop
mov
push
pop
or
xlat
pop
mov
jge
mov
push
pop
mov
xlat
jge
cmps
xlat
push
mov
push
or
push
dec
mov
xlat
pop
or
push
pop
or
xlat
jge
adc
pop
or
push
pop
mov
push
jge
cmps
xlat
pop
or
xlat
pop
mov
push
push
mov
push
pop
mov
jge
scas
xlat
pop
mov
pop
mov
push
push
mov
xlat
jge
cmps
xlat
pop
or
xlat
pop
or
push
push
mov
push
jge
scas
xlat
pop
mov
xlat
pop
or
push
pop
mov
xlat
pop
or
xlat
sbb
or
xlat
pop
or
push
pop
mov
xlat
jp
cmps
xlat
dec
mov
xlat
pop
or
push
pop
or
xlat
push
mov
push
push
or
push
push
mov
xlat
push
mov
push
push
or
push
pop
or
xlat
pop
mov
push
pop
or
xlat
pop
or
push
pop
mov
push
mov
xlat
inc
mov
xlat
pop
or
push
push
or
xlat
push
or
xlat
pop
or
xlat
push
or
xlat
jge
cmps
xlat
pop
or
push
pop
mov
push
pop
mov
push
pop
or
push
push
or
xlat
jge
out
pop
mov
sbb
push
jge
scas
xlat
pop
mov
pop
or
push
pop
mov
push
jge
scas
xlat
push
or
push
push
mov
push
jp
mov
push
jne
repz
jge
adc
push
or
push
pop
or
push
pop
mov
xlat
pop
or
xlat
jge
mov
xlat
pop
or
push
pop
or
xlat
jge
adc
or
push
pop
mov
push
mov
xlat
jge
movs
xlat
pop
mov
push
jge
scas
xlat
jge
cmps
xlat
pop
mov
push
push
or
xlat
pop
mov
pop
or
push
pop
or
xlat
push
mov
xlat
pop
or
push
push
or
xlat
pop
mov
xlat
push
or
push
push
mov
xlat
pop
or
xlat
pop
mov
xlat
pop
mov
xlat
pop
or
xlat
jge
cmps
xlat
pop
or
push
pop
or
xlat
push
or
xlat
push
or
push
jp
test
ins
mov
xlat
push
or
push
pop
or
push
pop
mov
xlat
pop
or
xlat
jge
mov
xlat
pop
or
push
pop
or
xlat
ins
or
push
inc
mov
xlat
pop
or
push
push
or
xlat
push
or
xlat
pop
or
xlat
push
or
xlat
jge
cmps
xlat
pop
or
push
pop
mov
push
pop
mov
push
pop
or
push
push
or
xlat
jge
out
pop
mov
pop
mov
xlat
jge
movs
xlat
jnp
mov
or
xlat
sbb
push
pop
mov
xlat
push
or
xlat
pop
or
xlat
pop
mov
xlat
ins
mov
push
push
or
push
jge
scas
xlat
pop
or
push
push
or
xlat
push
or
xlat
push
or
xlat
push
mov
xlat
jge
mov
push
push
mov
xlat
pop
or
push
pop
or
push
jge
movs
xlat
pop
or
xlat
pop
mov
pop
or
push
jge
lods
xlat
pop
or
push
pop
or
push
push
mov
push
jge
scas
xlat
pop
mov
push
pop
or
xlat
jp
lods
xlat
ins
or
push
inc
mov
push
jge
mov
push
pop
mov
pop
mov
push
pop
mov
xlat
sbb
push
jnp
cmps
xlat
pop
mov
xlat
pop
or
push
push
mov
xlat
pop
mov
push
dec
mov
xlat
pop
or
push
pop
or
xlat
pop
mov
xlat
jge
cmps
xlat
pop
or
push
push
or
push
pop
or
push
push
mov
xlat
pop
mov
pop
or
push
adc
mov
xlat
pop
mov
push
jge
cmps
xlat
pop
or
xlat
pop
or
push
pop
mov
xlat
pop
or
push
pop
mov
xlat
jo
adc
mov
xlat
pop
or
push
push
mov
xlat
pop
or
xlat
push
mov
push
jge
cmps
xlat
pop
or
xlat
pop
mov
xlat
pop
or
push
jge
adc
or
xlat
sbb
xlat
push
or
push
push
mov
push
jge
mov
push
dec
mov
jge
mov
xlat
pop
mov
push
pop
or
push
pop
or
push
pop
or
xlat
pop
mov
push
or
xlat
pop
or
push
pop
or
push
pop
or
xlat
jns
xchg
pop
mov
push
pop
mov
push
jge
cmps
xlat
pop
or
xlat
pop
mov
xlat
pop
or
push
jns
scas
push
pusha
mov
xlat
pop
mov
push
pop
mov
push
jge
cmps
xlat
pop
or
xlat
pop
mov
xlat
pop
or
push
arpl
xlat
pop
or
xlat
jge
cmps
xlat
pop
mov
xlat
pop
mov
push
pop
mov
push
pop
mov
jge
mov
push
pop
or
push
pop
mov
xlat
pop
mov
push
inc
mov
push
pop
or
xlat
pop
or
xlat
jge
mov
xlat
pop
mov
push
pop
or
xlat
pop
mov
pop
or
push
adc
mov
xlat
ins
or
push
dec
mov
xlat
jge
movs
xlat
pop
or
push
pop
mov
xlat
jo
movs
xlat
ins
mov
xlat
pop
mov
xlat
pop
or
xlat
jge
mov
xlat
bound
xlat
pop
mov
push
jge
scas
xlat
pop
mov
push
pop
or
xlat
pop
mov
dec
mov
xlat
push
or
xlat
jo
cmps
xlat
dec
mov
push
pop
mov
push
pop
mov
push
jge
scas
xlat
pop
mov
push
pop
or
xlat
pop
or
xlat
push
or
push
pop
mov
xlat
push
or
push
pop
mov
push
or
push
push
or
xlat
jnp
mov
push
pop
mov
push
pop
or
xlat
push
or
push
pop
mov
push
pop
mov
push
pop
mov
push
jge
scas
xlat
pop
mov
jge
cmps
xlat
pop
mov
xlat
push
mov
xlat
pop
mov
xlat
pop
mov
push
or
xlat
push
or
xlat
pop
or
xlat
jge
mov
xlat
pop
or
push
push
mov
xlat
jp
mov
xlat
push
or
push
pop
mov
push
pop
mov
push
jge
scas
xlat
pop
or
push
push
mov
push
pop
mov
push
or
xlat
pop
or
xlat
pop
mov
push
push
mov
push
pop
mov
xlat
pop
mov
push
jge
scas
xlat
push
or
push
pop
mov
xlat
pop
mov
call
or
push
pop
or
xlat
push
or
push
pop
or
push
jge
scas
xlat
pop
or
xlat
pop
mov
jge
mov
push
pop
mov
push
pop
or
push
pop
mov
xlat
push
or
push
pop
mov
pop
or
xlat
pop
or
push
pop
mov
xlat
adc
or
xlat
jge
out
push
or
push
jge
scas
xlat
push
or
xlat
pop
or
xlat
push
or
xlat
push
or
push
jge
adc
mov
xlat
pop
or
push
pop
mov
push
pop
mov
xlat
pop
or
xlat
push
or
xlat
pop
or
xlat
pop
or
push
adc
mov
xlat
pop
mov
pop
or
xlat
pop
mov
push
mov
xlat
push
mov
push
pop
or
xlat
pop
or
xlat
pop
or
xlat
pop
or
xlat
pop
mov
xlat
pop
mov
push
pop
mov
push
pop
or
push
pop
or
xlat
jl
adc
pop
or
xlat
push
or
xlat
push
or
xlat
pop
mov
pop
mov
push
jge
scas
xlat
pop
or
push
pop
mov
xlat
jge
movs
xlat
pop
mov
push
pop
mov
xlat
push
mov
push
push
mov
push
jge
scas
xlat
pop
or
push
push
or
xlat
push
or
xlat
push
or
xlat
pop
mov
xlat
pop
mov
pop
mov
push
pop
mov
xlat
pop
mov
xlat
pop
mov
xlat
jl
adc
or
xlat
push
or
xlat
pop
or
push
adc
mov
xlat
pop
or
xlat
pop
or
xlat
pop
or
xlat
dec
mov
push
push
mov
xlat
pop
mov
push
dec
mov
xlat
pop
or
xlat
push
or
push
inc
mov
push
pop
mov
dec
mov
xlat
pop
or
xlat
jnp
out
dec
mov
xlat
push
or
xlat
jnp
cmps
xlat
dec
mov
push
push
mov
pop
or
push
jge
adc
mov
xlat
jge
cmps
xlat
pop
mov
push
pop
mov
xlat
jge
stos
xlat
push
or
xlat
pop
mov
xlat
pop
or
push
pop
or
xlat
pop
or
push
push
or
push
push
mov
xlat
pop
or
push
pop
or
push
pop
mov
xlat
pop
mov
pop
or
xlat
jge
mov
xlat
pop
mov
xlat
pop
mov
push
or
xlat
jge
out
pop
or
xlat
pop
mov
xlat
push
mov
pop
mov
pop
or
xlat
push
mov
jge
movs
xlat
pop
mov
push
pop
mov
arpl
xlat
pop
or
push
push
or
xlat
pop
or
push
dec
mov
xlat
pop
or
push
pop
or
xlat
ins
or
push
dec
mov
xlat
push
or
xlat
pop
or
push
pop
or
xlat
pop
mov
xlat
pop
or
xlat
push
mov
push
pop
mov
pop
mov
xlat
pop
mov
push
push
mov
push
push
or
xlat
jge
mov
push
pop
or
push
pop
mov
jge
mov
push
push
mov
push
pop
mov
push
push
mov
xlat
pop
or
xlat
jge
mov
push
jge
scas
xlat
pop
mov
xlat
push
or
xlat
pop
or
push
pop
mov
push
push
or
push
pop
mov
xlat
push
or
xlat
pop
mov
push
pop
or
xlat
pop
or
xlat
push
or
push
pop
mov
push
push
or
xlat
pop
or
push
pop
mov
pop
mov
pop
or
push
push
or
xlat
pop
mov
push
pop
mov
xlat
pop
mov
xlat
pop
mov
xlat
ins
mov
push
jge
mov
push
pop
or
push
pop
mov
xlat
pop
or
xlat
jge
cmps
xlat
push
or
push
push
mov
xlat
jge
cmps
xlat
push
mov
push
or
push
pop
mov
xlat
pop
mov
push
pop
or
push
jo
mov
push
jne
scas
push
jge
adc
push
or
xlat
pop
mov
xlat
push
or
xlat
pop
or
push
pop
or
xlat
pop
mov
xlat
pop
or
xlat
push
mov
xlat
pop
mov
jge
scas
xlat
jge
mov
xlat
pop
mov
xlat
push
or
xlat
jge
mov
push
pop
mov
pop
mov
jns
adc
jp
(bad)
xlat
inc
mov
push
push
mov
push
pop
mov
push
pop
or
push
pop
mov
xlat
pop
mov
xlat
push
or
xlat
pop
or
push
pop
or
push
pop
or
xlat
jns
xchg
pop
mov
push
pop
mov
push
jge
cmps
xlat
pop
or
xlat
pop
mov
xlat
pop
or
push
jns
scas
push
jns
mov
or
xlat
pop
mov
push
pop
mov
push
pop
or
xlat
push
or
xlat
push
or
xlat
pop
mov
xlat
push
mov
xlat
pop
or
push
pop
mov
sbb
or
xlat
pop
or
push
pop
mov
xlat
jge
mov
xlat
pop
or
xlat
pop
mov
xlat
push
or
xlat
jge
mov
push
pop
mov
pop
mov
pop
mov
xlat
push
or
xlat
pop
mov
xlat
pop
mov
xlat
jge
cmps
xlat
pop
or
push
push
mov
push
pop
mov
xlat
pop
or
push
push
mov
xlat
jge
cmps
xlat
pop
or
push
push
mov
xlat
pop
or
push
pop
or
push
pop
or
xlat
js
adc
pop
mov
push
push
or
xlat
pop
mov
xlat
jge
movs
xlat
pop
or
xlat
jge
cmps
xlat
push
mov
xlat
jge
cmps
xlat
pop
or
push
push
mov
xlat
jge
cmps
xlat
pop
mov
push
pop
or
push
jo
mov
push
dec
mov
xlat
push
or
xlat
pop
or
push
pop
or
xlat
push
or
xlat
dec
mov
xlat
jge
cmps
xlat
pop
or
xlat
pop
mov
push
or
xlat
jge
adc
pop
mov
xlat
jge
cmps
xlat
pop
mov
pop
or
push
adc
mov
xlat
pop
mov
push
pop
or
push
pop
or
xlat
pop
or
push
jp
mov
xlat
pop
mov
push
pop
or
xlat
pop
mov
xlat
jge
stos
xlat
pop
mov
push
pop
mov
push
jge
cmps
xlat
pop
or
xlat
jle
xchg
or
xlat
pop
or
push
jge
scas
xlat
pop
or
xlat
pop
mov
push
pop
mov
push
pop
or
xlat
pop
or
xlat
push
or
xlat
jle
mov
xlat
sbb
or
xlat
push
mov
push
or
xlat
pop
or
push
push
mov
xlat
pop
mov
pop
or
push
adc
mov
xlat
pop
mov
push
or
xlat
pop
mov
xlat
pop
or
xlat
pop
or
push
push
mov
pop
or
push
jge
mov
push
pop
mov
push
pop
mov
push
push
mov
push
pop
or
xlat
push
mov
adc
or
xlat
dec
mov
push
adc
push
pop
or
push
pop
mov
xlat
push
or
push
jge
movs
xlat
push
or
push
pop
mov
xlat
push
mov
adc
or
xlat
push
or
push
push
mov
push
push
or
xlat
jp
cmps
xlat
ins
or
push
dec
mov
push
pop
or
push
pop
mov
xlat
pop
mov
xlat
pop
or
push
push
mov
push
pop
or
push
pop
or
push
pop
mov
xlat
pop
mov
push
jge
cmps
xlat
pop
or
push
push
or
push
pop
mov
xlat
push
mov
xlat
push
or
xlat
pop
or
xlat
pop
mov
push
push
mov
xlat
push
mov
xlat
jge
cmps
xlat
pop
mov
pop
or
xlat
pop
or
push
jns
xchg
pop
mov
push
pop
mov
push
jge
cmps
xlat
pop
or
xlat
dec
mov
push
jge
cmps
xlat
pop
mov
push
or
xlat
push
or
push
jp
adc
mov
xlat
pop
or
push
jge
cmps
xlat
pop
or
xlat
pop
or
push
pop
mov
push
gs
xlat
push
or
xlat
pop
or
push
pop
or
xlat
pop
or
xlat
ins
mov
push
pop
or
push
jge
cmps
xlat
pop
mov
xlat
pop
mov
push
jge
scas
xlat
push
or
push
jge
movs
xlat
pop
or
push
pop
mov
xlat
pop
or
xlat
pop
mov
jge
movs
xlat
pop
or
xlat
pop
mov
xlat
sbb
or
push
pop
mov
push
pop
or
xlat
push
mov
xlat
pop
mov
xlat
push
or
xlat
pop
mov
push
pop
mov
push
pop
mov
adc
mov
xlat
jge
cmps
xlat
pop
mov
xlat
pop
mov
push
pop
or
push
pop
mov
push
pop
or
push
pop
mov
xlat
pop
mov
pop
or
push
push
or
xlat
pop
or
xlat
pop
or
xlat
jne
adc
mov
xlat
pop
or
push
pop
or
push
adc
mov
xlat
pop
mov
pop
mov
push
dec
mov
xlat
pop
or
push
pop
or
xlat
je
mov
(bad)
xchg
xlat
pop
mov
push
pop
mov
push
jge
cmps
xlat
pop
or
xlat
jl
xchg
pop
or
xlat
pop
mov
xlat
pop
mov
xlat
push
or
xlat
jl
mov
push
jge
mov
xlat
pop
mov
xlat
jnp
jmp
pop
mov
push
pop
mov
push
pop
mov
xlat
pop
mov
pop
or
push
adc
mov
xlat
pop
mov
push
pop
or
push
jnp
mov
xlat
pop
or
push
jge
cmps
xlat
pop
or
xlat
pop
or
push
pop
mov
xlat
dec
or
push
push
mov
push
jge
scas
xlat
pop
mov
push
jp
test
ins
or
push
dec
mov
xlat
push
or
push
jge
mov
push
jle
xchg
mov
push
jge
scas
xlat
pop
or
push
pop
mov
xlat
jo
test
ins
mov
pop
or
push
pop
or
xlat
jge
cmps
xlat
jge
cmps
xlat
push
or
push
pop
mov
xlat
pop
mov
pop
mov
push
pop
or
push
pop
or
xlat
pop
or
push
jp
mov
xlat
pop
mov
push
pop
or
xlat
pop
mov
push
pop
mov
push
jge
mov
push
pop
mov
ja
mov
xlat
pop
mov
push
pop
mov
push
jge
cmps
xlat
pop
or
xlat
jl
xchg
pop
or
push
pop
mov
xlat
push
or
xlat
jp
xchg
mov
xlat
push
or
xlat
pop
mov
jbe
adc
pop
or
xlat
push
mov
push
or
xlat
pop
or
push
pop
mov
xlat
pop
or
xlat
push
or
xlat
jge
movs
xlat
push
mov
xlat
pop
or
xlat
jge
cmps
xlat
inc
mov
xlat
push
or
xlat
inc
mov
xlat
pop
mov
xlat
pop
or
push
pop
or
push
pop
mov
push
pop
or
xlat
pop
mov
pop
mov
xlat
pop
or
push
pop
mov
xlat
pop
mov
pop
mov
pop
or
xlat
push
or
push
jge
movs
xlat
pop
or
push
adc
xlat
pop
or
push
pop
or
xlat
push
or
push
push
mov
push
pop
or
xlat
push
mov
push
push
or
push
pop
mov
push
push
mov
xlat
pop
or
push
jge
cmps
xlat
pop
or
xlat
pop
or
push
pop
mov
xlat
dec
mov
xlat
inc
mov
push
pop
mov
push
dec
mov
push
jl
xchg
jbe
adc
mov
pop
or
xlat
push
or
push
jge
movs
xlat
pop
or
push
adc
xlat
pop
or
push
pop
or
xlat
push
or
push
push
mov
push
pop
or
xlat
push
mov
push
push
or
push
pop
mov
xlat
je
xchg
xlat
pop
mov
push
pop
mov
push
jge
cmps
xlat
pop
or
xlat
jle
xchg
or
push
pop
or
push
jge
scas
xlat
pop
or
push
jle
stos
push
jno
adc
or
push
pop
or
push
push
mov
xlat
push
or
push
jge
movs
xlat
pop
mov
pop
or
push
push
mov
xlat
push
or
push
pop
or
push
pop
mov
xlat
pop
or
push
dec
mov
xlat
pop
or
push
pop
or
xlat
push
mov
xlat
pop
mov
push
pop
mov
xlat
push
mov
xlat
jge
mov
push
adc
scas
push
pop
or
push
pop
mov
jl
xchg
xlat
pop
mov
push
push
mov
push
dec
mov
xlat
pop
or
push
pop
or
xlat
jo
mov
or
xlat
pop
mov
xlat
ins
mov
xlat
pop
mov
push
pop
or
xlat
push
or
xlat
push
or
push
pop
mov
xlat
push
or
xlat
pop
mov
push
pop
or
xlat
pop
or
xlat
push
or
push
ins
or
push
inc
mov
push
jb
mov
xlat
pop
or
xlat
pop
mov
push
pop
or
push
adc
mov
xlat
pop
mov
push
pop
or
push
jb
mov
xlat
pop
mov
xlat
pop
mov
xlat
pop
or
xlat
push
or
xlat
push
or
push
dec
mov
xlat
pop
or
push
pop
or
xlat
ins
mov
push
pop
or
xlat
push
or
xlat
pop
or
push
pop
mov
xlat
pop
mov
pop
or
xlat
ins
or
push
dec
mov
push
jge
cmps
xlat
pop
mov
push
or
xlat
push
or
push
ins
mov
xlat
push
or
xlat
pop
mov
push
pop
mov
push
jge
scas
xlat
pop
or
push
push
mov
xlat
push
or
push
ins
or
push
dec
mov
xlat
pop
or
push
pop
or
xlat
push
or
xlat
inc
mov
xlat
ins
mov
dec
mov
pop
or
push
pop
or
xlat
push
or
xlat
pop
or
xlat
push
or
xlat
push
or
push
ins
or
push
jge
(bad)
xlat
pop
mov
xlat
pop
mov
xlat
pop
or
xlat
push
or
xlat
push
or
push
pop
mov
xlat
push
or
push
pop
mov
push
ins
mov
push
jp
scas
xlat
pop
mov
push
pop
or
push
jp
mov
xlat
push
or
push
pop
or
push
jp
mov
push
inc
mov
push
push
or
xlat
pop
or
xlat
push
mov
xlat
push
mov
push
or
push
jge
scas
xlat
pop
mov
pop
or
push
push
mov
push
pop
mov
xlat
pop
or
xlat
pop
or
xlat
pop
mov
pop
or
push
pop
or
push
pop
or
xlat
push
mov
xlat
pop
or
push
pop
mov
xlat
jge
stos
xlat
pop
mov
pop
mov
pop
or
xlat
pop
or
push
pop
or
push
adc
mov
xlat
pop
mov
push
or
push
pop
or
push
pop
mov
xlat
push
or
push
pop
mov
pop
mov
push
mov
push
pop
or
push
push
mov
xlat
pop
or
push
pop
mov
xlat
pop
mov
push
pop
or
xlat
jp
cmps
xlat
ins
mov
push
pop
or
xlat
pop
mov
pop
or
xlat
pop
mov
xlat
pop
or
push
push
mov
xlat
push
mov
push
pop
or
push
pop
or
push
pop
mov
pop
mov
push
adc
xlat
pop
or
push
pop
mov
push
jge
cmps
xlat
pop
mov
xlat
pop
mov
push
push
or
xlat
push
or
push
pop
mov
xlat
pop
or
xlat
jge
cmps
xlat
pop
or
xlat
push
mov
push
pop
or
push
pop
or
xlat
pop
mov
xlat
pop
or
push
push
mov
push
pop
or
xlat
jp
lods
xlat
inc
mov
push
push
or
xlat
jge
cmps
xlat
pop
or
push
push
mov
push
pop
or
xlat
jp
lods
xlat
pop
or
push
jp
lods
push
pop
mov
xlat
pop
or
xlat
push
or
push
pop
or
xlat
push
or
push
pop
or
push
pop
mov
push
pop
mov
push
pop
or
xlat
jp
lods
xlat
push
mov
xlat
push
mov
xlat
jge
cmps
xlat
sbb
or
xlat
pop
or
xlat
pop
mov
push
pop
or
push
adc
mov
xlat
ins
mov
xlat
pop
or
xlat
dec
mov
push
push
mov
push
push
xchg
xlat
pop
mov
push
or
push
dec
mov
xlat
pop
or
push
push
or
xlat
pop
or
push
jo
mov
push
pop
mov
push
pop
mov
push
jo
movs
xlat
ins
mov
push
push
mov
imul
pop
or
push
push
or
xlat
jo
scas
xlat
ins
mov
push
pop
mov
xlat
pop
or
push
push
or
xlat
pop
or
push
push
mov
push
dec
mov
xlat
jge
movs
xlat
pop
or
push
push
or
push
push
mov
xlat
jg
xchg
xlat
pop
mov
jge
mov
push
push
or
push
push
mov
xlat
pop
or
push
jo
movs
xlat
ins
or
push
js
mov
push
or
push
push
mov
xlat
pop
mov
xlat
pop
mov
push
pop
mov
push
pop
mov
push
push
mov
xlat
pop
or
push
push
mov
lods
xchg
adc
out
push
ins
ins
or
test
push
sub
push
adc
push
mov
dec
mov
pop
lods
outs
shr
mov
adc
push
jo
xchg
fs
mov
mov
and
push
sub
mov
cmp
lock
and
mov
lods
imul
mov
jnp
or
in
loope
push
std
ror
inc
in
ss
push
jbe
sub
mov
scas
neg
sub
in
push
and
adc
dec
push
cmc
test
mov
adc
imul
inc
fidiv
imul
cli
add
fdiv
imul
clc
add
fdiv
imul
hlt
add
aaa
or
mov
push
mul
stos
lods
inc
xchg
mov
jl
lock
sub
xor
mov
dec
or
arpl
loop
push
mov
push
das
ret
pop
push
in
leave
xchg
xlat
test
mov
dec
sbb
jae
std
push
sub
push
xlat
lahf
jae
cmc
push
sub
push
xlat
fwait
jae
cmc
push
sub
push
xlat
cdq
jae
cmc
push
sub
push
xlat
xchg
adc
test
mov
xlat
in
mov
aad
(bad)
adc
cmp
in
push
sub
push
sub
and
ins
mov
adc
cmp
in
push
sub
push
sub
dec
and
test
lods
inc
out
leave
fs
sub
mov
dec
clc
adc
out
dec
shl
sub
mov
lahf
mov
neg
ins
mov
xlat
sub
mov
lods
adc
or
out
push
in
mov
adc
ins
mov
xlat
cmc
enter
jae
xchg
out
imul
xchg
jae
jmp
xchg
rep
mov
in
mov
xlat
in
repz
loop
sub
ins
clc
xchg
loop
repz
add
loop
repz
push
in
or
hlt
sbb
sub
ins
and
adc
leave
neg
sub
mov
int
push
ins
push
sub
xchg
push
xchg
xchg
arpl
or
push
sbb
xchg
xlat
adc
xchg
mov
adc
push
sub
and
adc
clc
neg
ins
or
xlat
in
xlat
stos
repz
or
div
push
test
cmp
or
mov
or
scas
xchg
test
xchg
lods
adc
jmp
js
add
stc
add
push
and
mov
xlat
ins
or
mov
fcom
xlat
lahf
and
adc
clc
neg
ins
or
xlat
ins
or
pop
data16
ins
ins
mov
xchg
ror
js
add
stc
mov
and
xchg
push
in
pop
ins
push
mov
cmp
in
clc
neg
ins
or
xlat
in
xlat
stos
(bad)
stc
adc
ror
js
add
stc
fcmove
push
mov
cwde
sub
jp
or
mov
jo
jp
mov
push
sub
adc
idiv
add
stc
int3
xchg
push
mov
repz
ins
mov
xlat
ins
lea
xlat
call
dec
xchg
in
xlat
pushf
push
ins
or
shl
repz
in
xchg
lods
pop
push
mov
sub
jae
in
fldcw
sbb
ror
js
add
stc
dec
mov
adc
adc
into
push
adc
mov
mov
gs
mov
adc
xchg
xlat
ins
or
mov
mov
and
or
adc
in
dec
lock
mov
or
add
xchg
jns
mov
xchg
xlat
jmp
adc
mov
cmc
add
fisub
(bad)
xor
sbb
adc
add
mov
leave
adc
push
pop
xchg
dec
jmp
adc
out
mov
push
imul
jmp
and
call
dec
aad
xchg
jae
sti
ins
or
mov
mov
pop
sub
stc
xchg
xlat
jno
pop
mov
rcl
push
stos
out
and
ins
and
mov
repz
ins
mov
xlat
div
test
xchg
or
push
cmp
xchg
xor
xchg
push
xchg
stc
cwde
fstp
mov
push
fcom
inc
dec
js
mov
xor
pop
shl
push
in
stc
xchg
xlat
sbb
dec
or
js
mov
mov
arpl
xchg
stc
test
xchg
repz
sub
push
xor
sub
(bad)
push
mov
jbe
push
cmp
retf
sbb
das
push
mov
retf
outs
test
das
adc
add
xchg
jns
rcl
mov
xor
ins
imul
xchg
push
push
adc
jae
sub
push
push
mov
lea
push
mov
adc
adc
adc
out
js
mov
jae
sub
retf
pop
dec
mov
mov
mov
cwde
dec
mov
xchg
std
or
adc
lahf
or
mov
or
xor
and
sbb
mov
xor
add
sbb
stos
cmp
or
ds
sub
pop
and
add
cmp
or
mov
cdq
or
add
xor
and
sbb
and
mov
and
mov
mov
lahf
(bad)
mov
xor
sub
mov
cdq
mov
lahf
mov
mov
or
sbb
add
cmp
sub
sbb
sub
lahf
mov
xor
(bad)
and
cdq
(bad)
and
sbb
sub
sbb
sub
cdq
add
(bad)
or
xor
mov
call
mov
lahf
lea
cmp
adc
sbb
mov
cmp
sbb
movs
cmp
adc
xor
sub
sbb
sub
lahf
mov
xor
(bad)
and
mov
sahf
cdq
add
mov
sub
sbb
mov
mov
push
test
pushf
mov
mov
pushf
add
sbb
add
xchg
add
cmp
sbb
movs
cmp
test
mov
popf
(bad)
and
lahf
(bad)
and
cmp
and
lahf
(bad)
cdq
cwde
or
cmp
stos
cmp
add
lahf
mov
xor
add
add
mov
scas
stos
cmp
add
mov
cdq
add
sbb
and
sbb
mov
cmp
and
lahf
(bad)
mov
or
ds
mov
mov
pop
and
lahf
mov
cdq
mov
sahf
call
sahf
sbb
mov
xor
scas
mov
cmp
mov
das
cmps
mov
add
daa
mov
or
mov
cdq
mov
sahf
call
sahf
add
daa
mov
xchg
mov
cmp
test
sbb
mov
mov
sbb
daa
mov
test
ds
mov
cmp
or
mov
pushf
mov
pop
sub
adc
mov
mov
test
mov
sbb
mov
cmp
mov
sub
and
ds
add
cdq
adc
stos
mov
pushf
or
mov
test
mov
sbb
mov
mov
cwde
or
cdq
xchg
mov
mov
sbb
mov
mov
add
and
mov
add
sbb
mov
cmp
sbb
and
push
sub
sbb
or
ds
lea
cmp
cmpxchg
cwde
or
cmp
mov
mov
or
ds
mov
xchg
movs
xor
sub
sbb
sub
adc
mov
mov
adc
mov
mov
test
mov
sbb
mov
mov
sbb
cmps
mov
test
mov
call
xor
sub
sahf
add
cdq
sbb
daa
mov
and
add
setns
sub
sahf
mov
sub
push
sub
mov
xchg
mov
sbb
or
ds
lea
cmp
mov
cmp
cdq
mov
xor
or
mov
push
sub
cdq
xchg
and
cmp
and
adc
scas
mov
xchg
sub
adc
movs
mov
mov
pop
mov
mov
add
mov
sub
cmp
and
cdq
add
pushf
add
xchg
or
sbb
test
mov
test
mov
mov
mov
sbb
mov
cmp
pop
cmp
mov
sbb
(bad)
push
and
xchg
or
sbb
and
aas
pop
test
mov
sbb
sub
sbb
sub
pop
test
mov
sbb
add
ds
adc
sub
xor
and
lahf
mov
sbb
and
cmp
movs
cmp
sub
cwde
mov
cdq
call
cdq
adc
and
xor
and
cdq
mov
xor
pop
mov
cmp
or
pop
test
mov
push
test
sbb
add
xchg
add
cmp
add
mov
mov
sbb
mov
sub
cmp
add
mov
(bad)
sub
xchg
add
mov
sahf
mov
mov
adc
scas
mov
cmp
mov
cmp
mov
mov
cdq
add
mov
xchg
and
ds
cmps
cmp
or
sub
add
ds
sub
ds
pop
mov
adc
mov
cmp
test
mov
cdq
mov
ds
daa
mov
sbb
test
cmp
sbb
mov
pop
test
mov
pop
mov
sbb
(bad)
or
sub
add
cmp
sub
mov
xchg
movaps
sbb
and
cdq
or
sbb
sub
sbb
add
mov
add
sbb
test
sbb
add
sbb
mov
cmp
push
movs
xor
mov
mov
sbb
movs
cmp
lods
add
sbb
sub
mov
cmp
and
adc
mov
cmp
test
mov
add
mov
pop
add
push
mov
xchg
mov
sbb
das
sbb
mov
mov
or
xor
pop
mov
cdq
mov
xor
mov
cdq
lahf
lea
cmp
scas
and
xchg
wbinvd
cdq
sbb
and
mov
(bad)
and
popf
or
sbb
and
test
mov
sub
mov
add
cmp
add
cmp
sbb
aas
sbb
and
push
or
mov
pushf
movaps
sbb
add
xchg
mov
sbb
add
xor
and
mov
(bad)
sub
sbb
movs
mov
ds
sub
mov
add
mov
sbb
mov
mov
cmp
and
sbb
and
push
pop
mov
or
ds
and
add
cmp
mov
mov
add
sbb
mov
cmp
pushf
mov
mov
test
mov
push
add
mov
mov
mov
pop
test
ds
scas
mov
adc
mov
xor
sub
aas
mov
mov
mov
mov
adc
scas
mov
mov
movaps
xchg
mov
xor
mov
cmp
push
add
mov
sbb
and
sbb
mov
cmp
sub
sbb
or
call
cdq
mov
sbb
sub
ds
sub
sahf
and
call
push
mov
sub
aas
mov
mov
cmp
mov
pop
xchg
or
ds
and
push
test
xor
mov
xor
test
cmp
shld
sahf
add
mov
sbb
mov
xor
mov
cdq
sbb
mov
xor
sub
cdq
pushf
mov
cmp
or
sbb
or
xor
add
mov
sbb
add
xor
test
cmp
mov
mov
cmp
sub
cmp
and
cmp
or
mov
adc
daa
mov
sbb
sub
pop
sub
sbb
cmps
ds
das
cmp
xor
test
adc
das
cmp
mov
mov
popf
and
pushf
add
mov
adc
and
cwde
mov
cdq
xchg
mov
mov
sbb
add
xchg
mov
cmp
cmps
cmp
add
mov
call
cdq
push
test
xor
mov
cmp
add
cmp
sbb
sub
cmp
and
cmp
or
mov
adc
daa
mov
sbb
sub
pop
sub
sbb
cmps
xor
cmp
mov
mov
cwde
mov
sbb
mov
cmp
sub
adc
daa
mov
sbb
cmps
cmp
sub
sbb
sub
sbb
and
sbb
daa
mov
add
ds
mov
mov
or
sbb
test
mov
pushf
mov
mov
adc
and
sbb
and
xchg
mov
mov
mov
test
sbb
mov
mov
adc
ds
mov
mov
sub
sahf
lea
cdq
cdq
add
ds
daa
mov
xchg
daa
and
cmp
cdq
xchg
add
mov
popf
mov
cdq
mov
xor
and
popf
mov
cdq
and
sbb
and
pop
sub
cmp
add
cdq
cmp
add
cs
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
xchg
sub
add
xor
and
mov
or
sbb
test
cmp
sub
pop
or
mov
lahf
mov
sbb
cdq
mov
sbb
movs
cmp
push
sub
adc
mov
test
lss
sbb
movs
cmp
sbb
test
pop
sbb
stos
cmp
and
and
or
and
cmp
or
call
cdq
cdq
mov
mov
jle
cmps
mov
sbb
and
sbb
mov
xchg
or
cmp
sub
sbb
and
sbb
mov
cmp
sub
sbb
and
xchg
xchg
movs
cmp
sub
sahf
add
mov
sbb
mov
cmp
mov
mov
or
mov
ds
and
cwde
or
mov
sub
mov
mov
mov
or
cdq
sahf
test
sbb
xor
and
push
mov
or
xchg
mov
sub
cs
adc
cs
dec
or
mov
adc
call
or
mov
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
mov
or
mov
adc
cs
adc
cs
adc
cmp
or
mov
adc
cs
adc
cs
adc
cwde
mov
or
mov
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
mov
push
cmp
or
mov
adc
cs
adc
cs
sbb
cs
adc
cs
adc
cs
adc
cwde
mov
or
mov
adc
cs
adc
cs
adc
cmp
or
mov
adc
cs
adc
cs
adc
call
or
mov
adc
cs
adc
cs
adc
cmp
or
mov
adc
cs
adc
cs
adc
call
or
mov
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
mov
or
mov
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
xchg
or
mov
mov
or
mov
adc
cs
adc
cs
adc
cmp
or
mov
adc
cs
adc
cs
adc
cwde
mov
or
mov
adc
cs
adc
cs
adc
cmp
or
mov
adc
cs
adc
cs
adc
cwde
mov
or
mov
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
mov
or
mov
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
xor
cs
adc
cs
adc
cs
adc
cmp
cs
adc
cs
adc
cs
adc
call
or
mov
adc
cs
adc
cs
adc
cmp
cs
adc
cs
adc
cs
adc
call
or
mov
adc
cs
adc
cs
adc
cmp
cs
adc
cs
dec
or
mov
adc
call
or
mov
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
xor
cs
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
mov
or
mov
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
mov
or
mov
adc
cs
adc
cs
adc
or
(bad)
mov
sbb
ds
mov
pushf
mov
mov
test
aaa
ds
sub
sbb
test
xchg
mov
xchg
mov
mov
or
call
xor
add
xchg
mov
cdq
sbb
and
mov
lea
stos
mov
mov
mov
test
mov
sbb
and
mov
or
cmp
or
cdq
sahf
mov
xchg
add
cmp
push
xchg
sub
pop
or
cmp
sub
mov
fwait
test
mov
sbb
mov
sub
sub
mov
adc
mov
adc
and
mov
or
mov
mov
cdq
cdq
or
mov
sbb
mov
sub
cdq
sbb
add
pushf
mov
mov
ss
xchg
xchg
das
mov
cdq
mov
cdq
sbb
and
pushf
add
mov
mov
sub
cdq
push
or
mov
popf
or
cmp
add
cmp
sahf
add
mov
mov
test
cdq
adc
mov
sbb
xor
call
invd
cmp
mov
pushf
mov
stos
sbb
add
mov
add
pop
sbb
and
pushf
add
mov
add
sbb
mov
sub
and
test
sbb
and
cdq
cmp
wrmsr
lea
add
cmp
test
mov
sbb
movs
cmp
lea
add
cmp
adc
cmp
add
sbb
sub
mov
xchg
sbb
or
sbb
movs
cmp
(bad)
or
sbb
xchg
and
cmp
xor
mov
mov
mov
call
mov
cmp
mov
mov
sbb
mov
sbb
ds
mov
mov
cwde
cpuid
sbb
movs
cmp
and
mov
(bad)
xor
lahf
(bad)
mov
sbb
ds
mov
mov
sbb
mov
sub
xchg
push
(bad)
cs
or
sbb
mov
scas
xchg
add
test
cpuid
mov
mov
test
mov
cmp
adc
cmp
mov
mov
cmp
or
mov
add
mov
cdq
mov
cdq
cmp
xor
mov
push
test
mov
sbb
mov
cmp
mov
sbb
add
mov
test
and
pop
pushf
movs
mov
sbb
mov
cdq
xchg
mov
adc
(bad)
mov
ds
mov
cdq
sbb
and
push
rsm
mov
push
test
mov
lahf
or
mov
mov
mov
xor
mov
cdq
mov
scas
movs
cmp
(bad)
cs
or
sbb
cmp
daa
xor
add
mov
xchg
or
test
scas
cdq
mov
aas
call
sbb
and
femms
and
mov
(bad)
xor
lahf
(bad)
mov
sbb
ds
mov
mov
or
xor
(bad)
mov
ds
sbb
(bad)
mov
ds
mov
cmp
(bad)
sbb
stos
mov
push
mov
cmp
and
cwde
pop
mov
xchg
add
mov
xchg
or
add
test
sbb
or
cmp
or
aas
sbb
add
sbb
and
mov
add
mov
cdq
mov
cdq
cmp
xor
cmp
cmp
xor
pushf
mov
xchg
mov
cmp
in
cs
mov
mov
push
add
mov
test
mov
sbb
xchg
and
sbb
xor
scas
sbb
stos
cmp
cmp
and
push
movaps
(bad)
mov
cwde
add
cmp
sub
cdq
sbb
mov
sub
mov
push
push
and
push
add
mov
or
mov
popf
add
mov
popf
(bad)
mov
mov
add
cmp
mov
mov
xor
and
mov
push
movs
aas
sbb
sub
push
scas
sub
push
or
mov
jae
xor
mov
add
cmp
mov
xchg
sub
lods
mov
xchg
cdq
xor
and
mov
xor
lahf
mov
cdq
or
xor
mov
or
sbb
mov
mov
cdq
add
mov
mov
cmp
or
adc
mov
adc
mov
mov
add
sub
add
mov
lahf
or
cmp
add
sbb
test
sbb
sub
lahf
mov
adc
adc
xor
sub
aas
pop
add
mov
ss
adc
add
cmp
test
mov
xchg
(bad)
xor
test
cmp
mov
mov
xchg
xor
mov
xchg
sbb
add
sub
cvtpi2ps
lahf
(bad)
mov
sbb
ds
mov
sub
mov
mov
or
xor
cvtpi2ps
sbb
daa
mov
xchg
mov
push
sbb
sub
mov
add
mov
mov
cdq
mov
scas
add
sbb
daa
mov
mov
add
mov
sub
xor
ds
movs
cmp
sbb
cmp
mov
adc
sub
or
xor
sub
xor
mov
mov
push
xchg
cdq
add
sbb
stos
mov
sbb
mov
pop
shld
or
sbb
xchg
and
sub
xor
xchg
or
test
mov
xor
and
sbb
sub
btr
or
cmp
pop
sbb
mov
cdq
mov
sahf
and
fwait
or
mov
sub
setns
setbe
xor
xchg
or
scas
ds
daa
pop
sbb
and
xchg
cmpxchg
xchg
mov
scas
adc
mov
cmp
push
sbb
test
cmp
sbb
pop
add
push
test
mov
xchg
test
(bad)
sbb
and
mov
add
sub
xor
cwde
(bad)
movs
ds
xor
cdq
lea
and
sub
cmp
test
cmp
and
lahf
xchg
mov
sub
mov
xor
sub
xor
mov
xor
push
xchg
push
mov
sahf
stos
cmp
sbb
cmp
sbb
ds
mov
and
mov
cmp
add
and
add
mov
and
(bad)
mov
sbb
xchg
and
call
mov
sbb
mov
sbb
cmp
ds
cmp
xchg
or
xor
cdq
xchg
nop
movs
cmp
cmp
mov
sbb
cmp
ds
cmp
xchg
or
xor
push
and
pushf
(bad)
mov
add
xchg
add
sahf
adc
daa
ds
and
cdq
or
mov
pop
scas
mov
cmp
mov
sbb
xchg
and
cmp
xor
adc
xchg
and
mov
(bad)
and
sub
xor
push
and
xchg
mov
cmp
sub
adc
cdq
pop
mov
cdq
sbb
and
pop
or
mov
mov
mov
sbb
mov
sbb
movs
cmp
sub
cmp
pop
mov
sbb
(bad)
and
aaa
test
sub
scas
bts
test
cmp
mov
xor
mov
xor
cmp
(bad)
mov
ds
xor
xchg
or
xor
ja
xor
sub
aas
das
adc
mov
mov
add
push
sub
nop
sbb
mov
cmp
and
xchg
lea
popf
call
xor
or
mov
and
sub
cmp
and
popf
fwait
or
mov
sbb
xchg
scas
sbb
and
sbb
adc
ds
xor
sbb
and
lods
test
popf
xchg
(bad)
cmp
test
mov
cwde
mov
cmp
mov
cdq
xchg
xor
cmp
cpuid
mov
push
add
mov
(bad)
or
or
mov
cdq
lahf
or
sbb
mov
(bad)
unpckhps
or
cmp
cwde
das
mov
cmp
cwde
and
(bad)
or
or
mov
cdq
mov
xor
sbb
mov
cwde
mov
mov
lahf
(bad)
or
ds
mov
push
or
or
sbb
xchg
and
sbb
xor
and
(bad)
sbb
cmp
add
mov
movs
(bad)
xchg
mov
and
mov
xchg
mov
mov
cwde
add
mov
sbb
adc
ds
vpshlb
mov
sub
mov
sub
and
ds
and
mov
sbb
cmp
mov
mov
mov
adc
adc
mov
cmp
and
cmp
xor
cdq
or
mov
adc
mov
mov
scas
movs
cmp
mov
sub
sub
cdq
or
sahf
stos
and
nop
sahf
add
cmp
xor
mov
or
pop
or
cdq
mov
(bad)
mov
ds
mov
cmp
mov
mov
push
sub
xchg
or
mov
xchg
(bad)
ds
mov
pop
and
push
movs
sub
xchg
or
sbb
mov
mov
xchg
and
sbb
and
sbb
sub
cmp
mov
cmp
mov
xor
adc
xor
and
sbb
mov
mov
adc
(bad)
add
ds
sahf
sub
sbb
pop
(bad)
pushf
mov
or
adc
mov
sub
sbb
movs
cmp
mov
add
xor
sub
aas
sbb
mov
pop
push
add
sub
mov
mov
adc
xor
sbb
sub
mov
ds
or
mov
sub
xor
add
mov
scas
mov
sbb
add
mov
or
cdq
add
mov
mov
cwde
mov
mov
sahf
mov
mov
or
cmp
sbb
sub
cdq
mov
mov
push
movs
sub
sbb
test
cdq
or
sub
adc
mov
sub
sbb
movs
cmp
add
or
mov
fwait
test
xor
cmp
or
cdq
add
xchg
mov
cmp
(bad)
mov
and
sub
ds
mov
cdq
mov
add
stos
add
xchg
mov
sbb
and
sbb
and
sahf
or
mov
or
sub
adc
mov
sub
sahf
or
mov
adc
mov
sbb
movs
cmp
sahf
or
mov
mov
test
mov
sbb
movs
mov
sbb
sub
xchg
add
mov
or
movs
sub
sbb
test
cdq
or
mov
cwde
xchg
setns
sub
sbb
mov
sbb
ds
test
test
add
sbb
mov
scas
pushf
mov
mov
mov
or
or
ds
or
sbb
add
mov
stos
pop
pushf
add
cdq
xchg
mov
cmp
and
sbb
mov
cmp
or
cdq
or
mov
or
sub
adc
mov
xchg
and
sbb
mov
cmp
or
xor
xchg
mov
mov
or
sysenter
test
xchg
adc
mov
mov
and
cwde
mov
sbb
sub
adc
daa
xor
mov
mov
push
daa
mov
lahf
or
sahf
sbb
adc
ds
(bad)
mov
push
daa
mov
lahf
or
sahf
sub
cmp
sbb
sub
test
or
cdq
mov
popf
mov
mov
and
adc
xchg
and
pop
sbb
sub
xor
or
push
add
mov
mov
cdq
xchg
cs
ds
mov
adc
and
sbb
sub
or
xor
aaa
xchg
aas
sbb
or
ds
mov
nop
and
or
scas
sub
xchg
add
pushf
lea
mov
sub
xor
push
movs
mov
mov
sub
add
mov
(bad)
pushf
mov
pop
test
mov
sub
adc
movs
sbb
pushf
or
sbb
movs
mov
cmp
push
pop
mov
cmp
and
imul
sahf
sub
xchg
mov
pop
sbb
mov
daa
xor
or
mov
or
mov
mov
nop
xchg
nop
test
mov
lahf
mov
sbb
sub
sbb
mov
sub
or
or
and
adc
and
xchg
mov
or
aaa
mov
xor
mov
mov
sub
lahf
mov
sbb
sub
sbb
adc
xor
mov
adc
mov
mov
pop
sub
call
cmp
xchg
xchg
bndldx
mov
mov
xchg
or
mov
sbb
mov
sub
and
mov
sbb
xor
mov
mov
adc
mov
xor
movaps
mov
scas
aas
cdq
or
push
stos
cdq
test
mov
jno
mov
cmp
add
sbb
mov
sub
push
stos
cmp
sub
daa
xor
add
mov
and
sub
(bad)
adc
sbb
movs
mov
sahf
sub
mov
mov
mov
call
test
nop
mov
cmp
add
mov
xchg
adc
test
lods
pushf
or
aas
adc
or
test
cdq
aaa
sahf
sub
adc
cmp
sub
daa
xor
add
mov
and
sub
aaa
mov
(bad)
mov
cdq
mov
cdq
cmp
xor
ds
mov
popf
xchg
cs
sbb
and
mov
adc
cmp
cmp
push
mov
xor
vpshaw
and
xchg
add
mov
or
cmp
adc
popf
or
mov
xor
sub
mov
ds
add
scas
pop
mov
ss
add
push
pop
mov
mov
add
mov
xchg
mov
sub
aaa
mov
mov
and
pop
add
sbb
mov
sbb
and
mov
push
xchg
xchg
mov
sbb
or
ds
sub
mov
cmp
cmp
sbb
or
sub
daa
xor
mov
sbb
and
sub
mov
cmp
sub
mov
or
mov
mov
adc
adc
mov
push
test
mov
call
cmp
mov
cmp
and
sub
or
adc
xchg
and
pop
or
cdq
xchg
mov
adc
sbb
and
pop
mov
sbb
cmp
or
mov
xor
or
aaa
mov
mov
xor
cmp
xor
cmp
test
xor
das
and
sub
daa
ds
mov
cmp
(bad)
or
sahf
test
adc
xor
add
sbb
xor
sbb
sub
mov
mov
or
ds
aas
lahf
mov
cdq
adc
cmps
xor
sbb
xor
sbb
test
mov
sbb
and
sub
and
adc
sub
test
das
mov
push
test
mov
mov
and
mov
das
test
adc
mov
aas
lahf
mov
sahf
aaa
and
pop
mov
mov
sub
adc
and
mov
or
sub
xchg
push
mov
mov
xor
mov
or
mov
(bad)
nop
aaa
and
mov
xor
xchg
mov
test
xor
add
xchg
mov
mov
xchg
sub
test
sub
cmp
or
mov
mov
sub
cmp
mov
aaa
mov
mov
xchg
cmp
or
mov
push
xchg
mov
setns
or
test
xchg
and
sub
mov
sbb
sbb
and
mov
cdq
mov
pop
test
call
movs
cmp
mov
add
mov
pop
sub
sub
or
sahf
test
sub
add
push
sbb
mov
mov
mov
sbb
and
cdq
add
mov
xchg
(bad)
cmp
sub
mov
and
sub
adc
cmp
sbb
mov
scas
cdq
mov
mov
mov
sbb
xchg
sub
sbb
mov
cdq
push
pop
mov
pushf
mov
push
or
mov
mov
sbb
mov
sbb
adc
xor
mov
sbb
or
mov
push
xchg
sahf
mov
cdq
mov
movs
cmp
lahf
and
mov
mov
adc
mov
cmp
sbb
mov
sub
xor
xchg
or
or
movs
sub
xchg
add
xchg
comiss
call
cmp
cmp
mov
sbb
cmp
sbb
xor
ds
sub
xchg
mov
cmp
xchg
mov
sub
or
push
add
cdq
cmp
and
xchg
(bad)
mov
mov
adc
mov
das
test
lahf
mov
xor
cmp
xor
test
stos
mov
xchg
or
mov
sbb
stos
popf
ss
adc
test
mov
xchg
(bad)
mov
mov
test
cs
mov
push
pop
mov
sbb
and
ds
sbb
(bad)
cmp
test
mov
sbb
movs
cmp
mov
or
sbb
movs
cmp
and
mov
mov
sbb
pop
mov
or
mov
cmp
test
pop
add
xor
movs
mov
cdq
mov
sbb
mov
mov
lahf
mov
sub
mov
push
sub
sbb
mov
mov
sbb
movs
cmp
lahf
mov
cmp
sbb
xor
add
xchg
mov
cmp
sbb
cmp
adc
stos
mov
mov
cmp
mov
mov
mov
push
push
and
test
adc
mov
add
call
cmp
or
ds
and
pop
test
cmp
mov
xchg
add
xor
add
xchg
mov
cmp
ss
adc
xchg
movs
cmp
mov
pop
(bad)
and
sbb
cdq
sbb
cmp
adc
daa
xor
das
test
xchg
or
cmp
sub
cdq
push
add
sub
lss
adc
cmp
mov
cdq
or
cmp
sbb
mov
mov
test
adc
mov
cmp
mov
adc
pushf
or
sbb
movs
mov
cmp
push
(bad)
push
mov
sub
mov
mov
xor
mov
mov
add
mov
mov
xchg
mov
sbb
mov
mov
sub
mov
mov
push
or
mov
sub
cmp
and
xchg
xor
call
lahf
(bad)
push
cdq
sahf
mov
xchg
sub
xchg
or
cmp
add
mov
sub
mov
sub
mov
mov
mov
adc
adc
mov
mov
xor
mov
mov
xchg
btr
pop
scas
xor
and
pushf
mov
xchg
mov
popf
imul
sub
mov
mov
sub
mov
xor
or
sub
xor
xor
add
mov
add
stos
and
movsx
sub
cdq
mov
mov
xchg
mov
adc
fwait
and
sbb
mov
ds
btc
sub
sbb
stos
cmp
das
sub
mov
push
sbb
cmp
mov
mov
push
popf
mov
and
xchg
xor
xchg
adc
add
pushf
mov
mov
xchg
sub
adc
movs
cmp
xchg
mov
sub
test
cmp
stos
mov
push
and
test
mov
lss
call
mov
sbb
mov
stos
xor
daa
aas
push
add
xor
cpuid
mov
mov
cmp
mov
sub
and
adc
mov
push
and
mov
sahf
stos
movs
js
sub
cmp
cwde
unpckhps
or
mov
das
daa
mov
sub
stos
cmp
movs
cmp
lahf
mov
mov
stos
movs
bndldx
xor
pop
scas
and
sub
mov
xchg
or
cmp
cmp
cmps
ds
(bad)
add
ds
mov
nop
movs
cmp
stos
sub
sbb
movs
cmp
cdq
mov
push
stos
mov
push
test
push
cmp
cmp
test
pop
add
mov
das
mov
cmp
sub
ds
mov
mov
or
mov
sbb
mov
sahf
stos
movs
js
adc
(bad)
push
test
sbb
mov
cmp
cmp
adc
mov
xchg
and
cdq
mov
xchg
nop
movs
cmp
adc
cpuid
mov
cwde
mov
seta
stos
mov
cmp
and
sbb
movs
cmp
stos
cdq
xchg
setns
movs
cmp
cdq
mov
mov
stos
movs
setns
test
or
cmp
cwde
mov
bndldx
mov
xchg
mov
mov
or
mov
(bad)
sub
mov
cmp
unpckhps
and
stos
mov
or
sahf
add
sub
mov
and
sbb
adc
mov
mov
and
adc
or
or
and
add
cmp
or
adc
xchg
mov
sub
push
mov
stos
movs
setns
and
add
sahf
pop
(bad)
ds
(bad)
add
xor
add
mov
sahf
xchg
nop
mov
test
das
test
fwait
mov
mov
mov
movhps
xor
cdq
movs
cmp
xchg
sub
mov
sbb
sub
cdq
or
mov
stos
movs
setns
scas
lahf
unpckhps
(bad)
movs
bndldx
mov
setbe
daa
mov
das
cmps
mov
xchg
add
xor
push
mov
lahf
vpshaq
xchg
je
adc
fwait
mov
xchg
jg
mov
setg
daa
xor
(bad)
and
fwait
mov
xchg
sete
xor
movs
mov
adc
cwde
mov
mov
stos
movs
sete
cmp
mov
setg
mov
cmp
stos
add
xor
or
mov
cmp
stos
cmps
setp
add
sub
or
xchg
mov
cmp
mov
mov
mov
sub
sbb
movs
cmp
sbb
test
mov
mov
mov
add
sahf
sbb
mov
mov
sbb
adc
sbb
adc
cmp
sbb
mov
mov
sub
movs
xor
push
mov
mov
push
sbb
adc
mov
and
cmp
and
mov
cmp
adc
cmp
ds
mov
mov
stos
xor
or
aas
cdq
mov
xor
add
stos
mov
push
or
and
xor
add
mov
das
mov
cmp
cdq
xchg
setg
daa
mov
or
mov
xchg
mov
cmp
sub
adc
and
mov
cmp
mov
mov
mov
sub
adc
cmp
adc
mov
scas
and
xchg
mov
mov
cmp
adc
mov
lahf
or
or
mov
push
xchg
das
test
sub
adc
stos
xchg
mov
cmp
or
xor
mov
scas
(bad)
or
aas
cdq
mov
mov
and
mov
mov
mov
lahf
cvtpi2ps
adc
sub
mov
scas
sahf
sub
adc
cwde
or
or
mov
sahf
sub
mov
mov
cwde
mov
cdq
mov
sbb
mov
mov
sbb
mov
mov
pop
add
mov
mov
mov
sbb
add
sub
xor
sub
test
mov
cmp
mov
or
mov
sahf
xchg
add
push
cdq
mov
sahf
sub
adc
xchg
ds
mov
push
add
das
daa
mov
cmp
test
or
mov
cdq
sbb
sub
cdq
mov
mov
sub
adc
cmp
mov
mov
or
xor
(bad)
push
or
add
sbb
mov
je
cdq
mov
lahf
(bad)
mov
das
daa
mov
adc
add
cwde
mov
xchg
wbinvd
adc
test
sbb
cmp
xor
mov
cmp
cmp
mov
mov
sub
mov
mov
add
adc
test
lss
sub
mov
cmp
mov
mov
or
sbb
adc
test
mov
stos
sub
sbb
movs
cmp
sbb
mov
mov
adc
cmp
sub
xchg
mov
xor
or
xor
scas
movs
mov
cwde
mov
aas
sbb
mov
cmp
test
mov
push
or
or
and
sbb
add
xor
mov
xchg
adc
test
mov
or
sbb
and
xchg
add
adc
movs
mov
sub
mov
(bad)
(bad)
mov
cmp
mov
sbb
movs
cmp
pushf
mov
push
scas
mov
and
pop
mov
or
aas
mov
mov
mov
sahf
test
aas
cdq
or
xor
mov
or
sahf
mov
xchg
mov
sbb
movs
cmp
sub
adc
ds
sub
or
das
sbb
mov
mov
pop
shld
sbb
pop
adc
test
mov
fwait
or
ds
(bad)
movs
sete
movs
cmp
mov
cmp
das
and
sub
and
xchg
movs
xor
adc
mov
(bad)
add
mov
mov
mov
sbb
and
lahf
lea
mov
sbb
mov
sbb
unpckhps
mov
xor
ds
scas
lahf
or
aas
cdq
mov
mov
mov
mov
lahf
cvtpi2ps
test
xor
(bad)
mov
sub
adc
sub
sbb
sub
mov
mov
or
xor
(bad)
movs
mov
cdq
mov
xor
mov
or
and
xchg
sbb
mov
xchg
mov
xchg
mov
cmp
or
xor
movs
cmp
mov
sub
cdq
sbb
or
mov
adc
mov
sbb
scas
mov
pushf
push
sub
xchg
mov
sbb
add
sbb
and
mov
and
mov
or
mov
xchg
mov
cmp
pop
mov
xchg
mov
sbb
mov
or
call
cmp
or
sbb
and
call
mov
push
xchg
and
sub
or
pop
or
mov
adc
and
push
or
cdq
pushf
and
sbb
test
mov
add
sub
mov
mov
cdq
or
sbb
sub
mov
(bad)
sahf
sub
mov
sbb
sub
ds
test
cmp
cmp
adc
mov
push
sub
cdq
adc
cdq
mov
sbb
movs
cmp
mov
and
xchg
mov
cdq
pop
(bad)
sbb
xor
sub
xor
add
sbb
or
cdq
pushf
and
adc
lea
mov
mov
or
aas
push
(bad)
mov
cdq
sbb
cmps
mov
mov
add
push
mov
cmp
add
sub
mov
mov
cmp
(bad)
sub
sbb
add
mov
sub
xor
mov
sbb
mov
cmp
or
cdq
mov
sub
pop
or
mov
and
xchg
mov
mov
sbb
daa
mov
mov
sbb
test
sbb
add
xchg
sub
xor
(bad)
and
sbb
xor
mov
mov
pop
cmp
sub
sbb
sub
xchg
test
mov
or
cdq
add
cdq
fwait
or
mov
(bad)
(bad)
mov
add
ds
or
xor
sub
cmp
pop
mov
add
mov
and
add
xor
mov
mov
or
ds
mov
cmp
sub
mov
sbb
and
xchg
mov
ds
xchg
test
cdq
or
cmp
and
adc
movs
cmp
sub
ds
sub
sbb
movs
cmp
or
xor
or
mov
mov
or
aas
cwde
(bad)
sub
mov
sbb
and
or
add
pop
sub
pop
test
cmp
sub
xchg
mov
cdq
sbb
and
xor
lea
xor
cdq
mov
cmp
cwde
add
aas
lahf
mov
popf
mov
or
mov
push
sysret
cdq
pop
mov
cdq
sbb
cmps
mov
sbb
xor
sbb
and
jle
cmps
mov
mov
das
mov
scas
xchg
add
cdq
mov
sub
sbb
movs
cmp
sbb
movs
mov
xchg
add
xor
add
stos
mov
push
test
lss
xchg
or
cdq
adc
lahf
sub
sbb
mov
sahf
ds
ds
sbb
test
sbb
test
sbb
test
sbb
movs
cmp
sbb
mov
cmp
call
ds
or
sbb
add
ds
sbb
or
ds
(bad)
mov
or
ds
mov
mov
add
and
lahf
(bad)
mov
or
ds
mov
mov
lahf
or
es
mov
xor
or
ds
(bad)
mov
or
ds
mov
mov
popf
mov
or
mov
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
adc
cs
adc
push
mov
mov
or
and
sbb
cmps
ds
(bad)
cmp
popf
or
cmp
call
cmp
or
mov
and
sbb
xchg
add
popf
or
mov
cmp
and
pop
add
cmp
sub
ds
mov
ds
and
call
sbb
sub
sbb
mov
cdq
lahf
or
mov
cdq
add
mov
or
sbb
sub
xchg
mov
mov
mov
adc
and
mov
or
cmp
sbb
and
sbb
test
sbb
cmps
mov
cwde
mov
cmp
or
mov
mov
mov
xchg
and
mov
pop
sub
sbb
xor
adc
and
xchg
or
ds
mov
xchg
movs
xor
movs
cmp
mov
mov
and
or
xor
(bad)
movs
mov
pop
add
mov
sub
ds
movs
cmp
add
mov
mov
scas
xchg
or
sbb
fwait
xor
mov
or
cmp
adc
cdq
sub
mov
pop
test
mov
pushf
or
xor
and
adc
cmp
xchg
add
cmp
mov
pushf
mov
ds
mov
mov
xchg
or
cmp
add
sbb
daa
sbb
and
xchg
scas
cmp
(bad)
mov
scas
sbb
and
sbb
cmps
mov
mov
sbb
sahf
lods
or
sbb
sub
mov
cmp
and
adc
mov
cmp
test
mov
add
xor
sub
mov
mov
and
add
xor
cdq
mov
cmp
sub
sbb
cmps
mov
pushf
(bad)
ds
das
sub
or
and
sbb
pop
cdq
lahf
or
cdq
lahf
(bad)
and
add
cdq
ds
sub
push
push
movs
mov
call
mov
sub
adc
scas
mov
push
add
cdq
call
call
stos
mov
or
xor
(bad)
adc
cs
or
mov
adc
scas
cmp
or
adc
enter
adc
adc
sub
adc
rol
not
mov
adc
out
xchg
or
cmp
or
cmp
adc
or
xchg
int3
movs
pop
(bad)
daa
sbb
adc
imul
ds
leave
cs
sub
test
adc
test
mov
rcl
sub
shl
adc
xchg
or
cmp
dec
jmp
mul
xlat
inc
jg
in
imul
sbb
imul
xchg
adc
fwait
add
xchg
outs
mov
add
rol
pop
imul
out
mov
(bad)
pop
not
xchg
dec
sahf
std
adc
pop
sbb
imul
xchg
(bad)
test
xchg
nop
mov
xchg
mov
xchg
mov
fcom
sub
sbb
imul
imul
mov
xchg
xchg
sar
push
pop
push
mov
push
pop
fs
xchg
xchg
sar
push
inc
xor
xchg
xchg
scas
mov
push
dec
adc
adc
jmp
xor
mov
adc
cs
mov
sub
and
(bad)
xor
push
or
inc
aam
adc
mov
hlt
inc
aam
adc
mov
loopne
into
fwait
add
xchg
outs
mov
add
je
or
bound
aas
lea
push
or
xchg
iret
mov
mov
sub
mov
lock
scas
sbb
imul
or
scas
aas
push
push
rol
sub
cdq
imul
mov
jge
cmp
push
sub
in
adc
xor
(bad)
popa
xor
push
sub
push
sub
xchg
int3
scas
mov
sub
test
sub
es
adc
adc
xchg
mov
popf
add
sub
xor
(bad)
xor
adc
fwait
add
xchg
das
xchg
mov
fldcw
test
es
(bad)
dec
xor
mov
adc
es
xchg
dec
shl
popf
xor
or
xor
xchg
imul
(bad)
xor
pop
sbb
popf
or
xchg
dec
cmp
xchg
dec
jmp
xchg
mov
mov
adc
cmp
adc
cmp
jo
cs
(bad)
(bad)
das
mov
or
lods
std
cmp
adc
mov
lea
sub
and
repnz
movs
jl
cmps
jns
mov
sbb
mov
jo
cs
mov
add
adc
nop
dec
adc
sbb
scas
adc
in
imul
imul
push
data16
das
mov
xchg
mov
mov
sub
cmp
or
in
adc
mov
gs
cmp
(bad)
mov
cs
in
adc
mov
mov
bound
push
jmp
mov
push
imul
sub
mov
mov
out
mov
cmps
adc
test
adc
test
cmp
xchg
fnstenv
mov
js
sub
cmp
ins
hlt
xchg
int3
shr
adc
scas
cmp
sub
xor
pushf
(bad)
arpl
pop
add
mov
cmps
xor
pop
add
mov
lods
xor
scas
mov
mov
mov
adc
(bad)
xor
cmps
xor
scas
es
(bad)
xor
sub
pop
scas
xor
sub
xchg
mov
mov
out
(bad)
mov
pop
sbb
inc
adc
or
sbb
int
sub
cs
data16
mov
adc
xchg
and
pop
scas
xor
sub
cwde
jmp
adc
(bad)
imul
add
mov
mov
adc
pop
sbb
lahf
out
xchg
or
sbb
or
xor
sub
cdq
jmp
adc
pop
sbb
test
adc
push
or
xchg
sub
xchg
or
cmp
mov
mov
(bad)
dec
jmp
in
not
(bad)
pop
imul
cmp
adc
cmp
pop
mov
jo
scas
std
adc
adc
xchg
mov
popf
add
sub
mov
cmp
fwait
add
xchg
outs
(bad)
mov
js
sub
cmp
dec
adc
adc
sbb
scas
mov
test
or
js
sub
cmp
movs
mov
sub
mov
xchg
int3
scas
jns
sub
cmps
jo
(bad)
xor
cmp
push
fcom
mov
fldcw
xchg
push
sub
out
sub
lods
pop
xchg
mov
mov
adc
cmp
or
cmp
aaa
scas
mov
push
mov
scas
js
sub
cmp
movs
mov
sub
mov
xchg
int3
scas
jns
sub
cmps
jo
(bad)
xor
jae
mov
movs
jl
mov
sbb
mov
rcl
xor
sub
xchg
push
cmp
or
lock
scas
jge
not
xchg
mov
scas
std
adc
adc
cdq
mov
scas
std
adc
adc
mov
jge
or
lea
and
jae
mov
movs
jl
movs
jns
mov
sbb
mov
adc
rol
pop
jmp
in
mov
cmp
imul
cmp
push
(bad)
xor
sbb
enter
imul
sub
pop
scas
xor
xor
cwde
enter
sub
sub
in
jmp
in
neg
fdiv
mov
mov
(bad)
sub
mov
mov
(bad)
xchg
outs
(bad)
mov
mov
(bad)
xchg
out
(bad)
mov
mov
mov
aaa
push
call
xchg
xor
pop
scas
xor
sub
xchg
push
mov
lock
scas
js
imul
cmp
mov
cmp
or
sub
mov
cmps
sub
mov
cmps
sub
cmp
pop
outs
cmps
sub
mov
and
test
mov
aam
int
xor
cmp
or
and
(bad)
test
mov
aam
int
xor
cs
push
pop
outs
cmps
sub
cmps
jp
sub
cmp
or
out
scas
int
or
stos
lahf
dec
lods
jns
xor
nop
aam
mov
dec
or
stos
xchg
dec
cs
xchg
std
outs
into
adc
scas
add
hlt
mov
fwait
pop
outs
fdiv
mov
int
int
div
int3
xor
push
int3
in
not
(bad)
stos
hlt
mov
lock
mov
adc
mov
cmps
sub
inc
add
pop
shl
mov
or
inc
aam
adc
mov
hlt
inc
aam
adc
mov
loopne
into
fwait
add
xchg
outs
mov
add
je
or
bound
mov
test
int3
scas
inc
sub
adc
mov
cs
aam
adc
mov
hlt
inc
aam
adc
mov
loopne
into
fwait
add
xchg
outs
mov
add
je
or
bound
aas
lea
push
or
xchg
iret
mov
mov
sub
mov
repnz
sub
shl
scas
aas
adc
cmp
mov
xchg
enter
sub
cmp
rol
inc
mul
cmps
sub
pusha
pop
ins
int3
push
std
in
not
inc
push
bound
int3
sar
enter
in
not
inc
dec
addr16
cmp
dec
cmp
jo
cmps
adc
and
push
xor
shl
push
clc
push
leave
out
les
mov
mov
adc
sar
dec
outs
(bad)
sub
outs
(bad)
sub
out
(bad)
sub
out
(bad)
sub
dec
cmp
or
stos
xchg
dec
in
mov
adc
(bad)
aas
xor
add
pop
dec
call
jmp
adc
scas
jge
imul
xchg
dec
scas
std
adc
adc
mov
add
xchg
out
(bad)
mov
mov
mov
xor
call
xchg
xor
pop
scas
xor
or
xchg
push
mov
xchg
int3
scas
js
sub
cmp
movs
mov
sub
mov
xchg
int3
scas
jns
sub
cmps
jo
(bad)
xor
cmp
push
fcom
mov
fldcw
test
es
(bad)
xchg
xor
mov
adc
sub
sub
mov
xor
lahf
imul
sbb
jg
cwde
xchg
jmp
adc
xor
cwde
imul
sbb
xchg
sub
xchg
jmp
adc
scas
or
fstp
dec
or
stos
xchg
dec
xchg
adc
pop
in
not
mov
adc
out
xchg
or
lds
or
lea
mov
xchg
mov
sbb
mov
mov
xlat
dec
jmp
imul
mov
pop
out
mov
xchg
dec
vmread
test
dec
iret
mov
cs
dec
push
mov
dec
dec
mov
enter
mov
popf
add
xchg
fnstenv
mov
mov
(bad)
(bad)
das
fbstp
mov
shl
mov
(bad)
dec
xchg
sbb
jbe
inc
pop
es
mul
(bad)
dec
xchg
and
jbe
inc
pop
cs
imul
adc
pop
cld
sbb
sbb
jmp
adc
adc
adc
int
test
neg
js
movs
rol
pop
adc
in
mov
data16
dec
clc
cdq
mov
mov
scas
adc
cmp
push
fstp
xor
inc
xchg
retf
out
push
in
imul
mov
xchg
mov
push
xor
aaa
fsub
mov
or
or
std
adc
adc
xchg
mov
scas
jge
or
cdq
mov
scas
jge
or
mov
jge
or
lea
and
jae
mov
movs
jl
mov
sbb
mov
addr16
lods
aaa
in
jmp
adc
adc
xchg
mov
scas
jge
or
cdq
mov
scas
jge
or
mov
jge
or
lea
and
repz
scas
movs
adc
xchg
movs
repnz
movs
jl
xchg
jns
mov
sbb
mov
add
pop
xor
sub
mov
sub
sbb
or
adc
lods
and
scas
mov
dec
es
pop
loop
test
les
cs
sub
sahf
jns
lea
jo
or
adc
imul
mov
cmp
xor
in
sub
aaa
mov
cmp
imul
cmp
push
(bad)
xor
cmp
jmp
adc
fnstcw
shr
mov
adc
xor
adc
xor
adc
mov
adc
out
cmps
adc
xchg
jns
xor
sbb
or
lock
mov
adc
cmp
or
cmp
xchg
jle
aaa
mov
mov
sub
jp
test
leave
cmp
leave
sbb
mov
push
mov
push
or
nop
leave
scas
lods
xchg
or
xchg
mov
scas
adc
cs
xchg
imul
sbb
je
lea
cmp
mov
imul
sbb
je
mov
sub
cmp
movs
mov
sub
mov
xchg
int3
scas
js
sub
mov
xchg
int3
scas
js
sub
cmp
into
mov
push
cmps
iret
mov
push
mov
cs
xchg
xchg
cmp
mov
xchg
enter
sub
cmps
adc
ins
scas
xchg
mov
sbb
mov
cmp
scas
xor
lods
js
jmp
adc
cmp
stos
add
xchg
rol
xchg
jmp
adc
cmp
stos
add
xchg
scas
mov
push
outs
xor
sub
int
test
xor
mov
addr16
xor
sub
popa
cmp
out
cmps
adc
ins
icebp
xchg
push
scas
fist
or
xchg
leave
cs
adc
(bad)
xor
add
xchg
repnz
xor
mov
ror
adc
sub
or
sbb
dec
popf
sub
scas
cmp
sub
int3
adc
rol
jp
daa
data16
sub
mov
rcl
lods
clc
xchg
cmp
sub
sbb
and
mov
in
xchg
call
cmp
xor
lea
cmp
fist
sub
cmp
sub
sbb
or
nop
sub
sbb
leave
scas
jge
or
cdq
mov
scas
std
adc
adc
mov
jge
or
lea
and
jae
mov
movs
jl
mov
sbb
mov
rcl
lods
test
sub
sbb
or
jns
sub
xor
(bad)
xor
sbb
dec
scas
jge
or
lea
and
jae
mov
movs
jl
movs
pop
cld
xor
xchg
jle
mov
xchg
jmp
adc
adc
xchg
mov
popf
add
sub
mov
mov
(bad)
xchg
outs
(bad)
mov
mov
(bad)
xchg
out
(bad)
mov
mov
mov
ss
call
adc
add
mov
mov
adc
cmp
or
fdiv
mov
cmp
or
fnstenv
mov
mov
(bad)
xchg
outs
(bad)
mov
mov
(bad)
xchg
out
(bad)
mov
mov
mov
ss
call
adc
add
mov
mov
adc
cmp
or
fdiv
mov
cmp
sub
mov
mov
(bad)
xchg
outs
(bad)
mov
mov
(bad)
xchg
out
(bad)
mov
mov
mov
ss
call
adc
add
mov
mov
adc
cmp
or
fdiv
mov
mov
(bad)
sub
mov
cmp
fwait
add
xchg
outs
(bad)
mov
mov
(bad)
xchg
out
(bad)
mov
mov
mov
ds
call
xchg
cmp
cmp
js
sub
cmp
bound
sub
das
mov
xchg
int3
scas
js
sub
mov
xchg
int3
scas
js
sub
cmp
dec
adc
adc
add
jge
cmps
in
test
xchg
xor
xchg
mov
scas
jge
or
cdq
mov
scas
jge
or
mov
jge
or
lea
and
jae
test
repnz
movs
jl
sub
cld
mov
(bad)
xchg
jnp
add
(bad)
out
fdiv
mov
sub
das
mov
xchg
int3
scas
js
sub
mov
xchg
int3
scas
js
sub
cmp
dec
adc
adc
add
cs
test
xor
mov
out
pop
(bad)
out
test
in
int3
scas
js
sub
cmp
movs
mov
sub
mov
xchg
int3
scas
jns
sub
cmps
lock
xchg
and
jae
mov
movs
jl
cmps
jns
mov
sbb
mov
fwait
cmps
loopne
enter
cmps
in
test
nop
xor
mov
sbb
mov
cmp
popf
add
(bad)
out
fdiv
mov
mov
(bad)
sub
mov
mov
(bad)
xchg
outs
(bad)
mov
jns
sub
fldcw
cdq
xor
xchg
cmp
or
ins
xor
cmp
or
cmp
mov
mov
mov
imul
xchg
dec
scas
jge
or
mov
add
xchg
out
(bad)
mov
lahf
xchg
iret
add
rol
jmp
adc
lods
sbb
or
mov
adc
jl
xchg
dec
jmp
adc
es
jl
mov
int3
scas
js
sub
cmp
movs
mov
sub
mov
xchg
int3
scas
js
sub
mov
xchg
int3
scas
js
sub
cmp
dec
adc
adc
add
enter
sub
sub
movs
stc
xchg
mov
sbb
mov
lock
cs
in
not
xchg
mov
mov
mov
imul
cmp
push
(bad)
xor
cmp
jmp
adc
ret
cmp
jmp
stos
fwait
xor
cdq
mov
stos
xchg
es
(bad)
inc
xor
sbb
or
lock
scas
jge
not
xchg
mov
scas
jge
or
cdq
mov
scas
jge
or
mov
jge
or
lea
and
jae
mov
movs
jl
mov
sbb
mov
add
pop
xor
in
imul
div
rcl
test
mov
sub
cmp
movs
mov
sub
mov
xchg
int3
scas
js
sub
mov
xchg
int3
scas
js
sub
cmp
dec
adc
adc
sbb
cs
test
imul
jns
sub
xor
(bad)
xor
sbb
dec
scas
jge
or
lea
and
jae
mov
movs
jl
cmps
jns
xor
lea
jg
lock
scas
jge
not
xchg
mov
popf
add
sub
mov
mov
(bad)
xchg
outs
(bad)
mov
mov
(bad)
xchg
out
(bad)
mov
mov
mov
xor
call
adc
add
xchg
scas
xor
in
imul
neg
fdiv
mov
cmp
or
fnstenv
mov
mov
(bad)
xchg
outs
(bad)
mov
mov
(bad)
xchg
out
(bad)
mov
mov
mov
xor
call
adc
add
xchg
scas
xor
in
imul
neg
fdiv
mov
cmp
sub
mov
mov
(bad)
xchg
outs
(bad)
mov
mov
(bad)
xchg
out
(bad)
mov
mov
mov
xor
call
adc
add
xchg
scas
xor
in
imul
neg
fdiv
mov
mov
(bad)
sub
mov
cmp
fwait
add
xchg
outs
(bad)
mov
mov
(bad)
xchg
out
(bad)
mov
mov
mov
xor
call
adc
add
xchg
scas
xor
in
imul
neg
fdiv
mov
cmp
popf
add
sub
mov
cmp
xchg
outs
(bad)
mov
mov
(bad)
xchg
out
(bad)
mov
mov
mov
xor
call
adc
add
xchg
scas
xor
in
imul
imul
xor
test
mov
sub
cmp
call
sub
das
mov
xchg
int3
scas
js
sub
mov
xchg
int3
scas
js
sub
cmp
dec
adc
adc
sbb
cmp
sub
jp
or
inc
inc
imul
jns
sub
xor
(bad)
xor
mov
cmps
xor
sbb
enter
imul
xor
xchg
scas
xor
mov
xchg
enter
sub
sub
gs
imul
cmp
push
(bad)
xor
cmps
adc
mov
shr
fcom
mov
fldcw
cdq
mov
stos
xchg
es
(bad)
xor
sbb
mov
lock
scas
jge
jbe
sbb
leave
scas
jge
or
cdq
mov
scas
std
adc
adc
mov
jge
or
lea
and
jae
mov
movs
jl
mov
sbb
mov
rcl
in
jmp
in
not
std
xor
dec
mov
enter
sub
mov
mov
(bad)
xchg
outs
(bad)
mov
mov
(bad)
xchg
out
(bad)
mov
mov
mov
sub
call
xchg
xor
out
add
xchg
scas
xor
mov
fwait
enter
sub
jp
or
inc
inc
imul
js
sub
cmp
movs
mov
sub
mov
xchg
int3
scas
jns
sub
cmps
lock
xchg
and
jae
mov
movs
jl
cmps
jns
xor
lea
mov
lock
scas
jns
not
lea
cmp
popf
add
(bad)
out
fdiv
mov
mov
(bad)
sub
mov
mov
(bad)
xchg
outs
(bad)
mov
jns
sub
fldcw
cdq
mov
stos
xchg
es
(bad)
xor
sbb
mov
lock
scas
jge
not
xchg
mov
popf
add
sub
mov
mov
(bad)
xchg
outs
(bad)
mov
jns
sub
fldcw
cdq
mov
stos
xchg
es
(bad)
xor
sbb
mov
lock
cs
not
inc
int
xchg
sub
adc
scas
xor
lods
add
jmp
rcl
scas
xor
sub
adc
scas
cmp
sub
lock
cs
jbe
inc
int
xchg
aas
ins
mov
mov
adc
sbb
pop
xor
inc
int
xchg
aas
in
mov
mov
adc
sbb
pop
and
xchg
cld
rol
pop
adc
ins
mov
xor
scas
pop
adc
or
in
sub
aaa
mov
mov
xchg
mov
inc
int
adc
ins
mov
or
jmp
sub
aaa
mov
mov
xchg
mov
inc
push
pop
shl
ins
mov
sub
shl
scas
aas
adc
cmp
ins
mov
in
div
add
jmp
shl
out
xchg
popf
adc
jns
and
mov
and
aas
fadd
dec
jmp
sub
mov
push
push
pop
mov
shl
out
sbb
mov
and
aaa
out
xchg
mov
or
aaa
out
xchg
popf
adc
cmp
mov
cmp
or
mov
mov
mov
xchg
xor
cmp
or
push
xchg
adc
sbb
out
xchg
mov
fwait
fwait
xlat
add
xchg
xor
test
nop
imul
sbb
or
mov
adc
pop
sbb
enter
sub
sbb
add
cdq
cmps
mov
scas
(bad)
lock
xchg
int3
test
cmp
or
xchg
iret
adc
mov
sub
aaa
mov
cmp
cs
test
xor
ins
jmp
lock
(bad)
mov
sbb
sbb
mov
push
xor
or
cs
xor
or
sbb
add
mov
movs
cld
adc
lea
adc
push
(bad)
mov
sbb
push
int
xchg
jbe
cmp
sub
ins
jmp
lock
(bad)
or
sbb
pop
pop
mov
rcl
adc
adc
push
(bad)
mov
sbb
push
int
xchg
jbe
cmp
sub
ins
jmp
lock
(bad)
or
sbb
pop
int
xchg
sbb
mov
adc
scas
scas
sub
cmp
xor
fwait
pop
aad
xchg
or
jmp
scas
inc
sub
fwait
sbb
ds
loop
adc
out
jbe
dec
jge
xchg
mov
sub
loop
adc
jmp
jae
xchg
mov
sub
mov
sub
adc
outs
mov
cmp
(bad)
xor
in
neg
mov
adc
mov
xor
das
add
fwait
xchg
int
sub
cs
data16
mov
adc
cld
inc
in
xor
mov
sti
sub
in
sub
aaa
mov
mov
mov
xor
aaa
mov
leave
nop
aaa
loopne
rcl
and
mov
dec
or
aaa
mov
leave
not
pop
rcl
and
mov
in
adc
aaa
mov
cmps
sub
shl
jb
jl
xlat
sub
mov
mov
cmp
hlt
and
imul
adc
rol
mov
mov
cmp
inc
or
bound
push
adc
add
adc
mov
mov
cmp
popf
add
xchg
outs
mov
xor
xchg
dec
or
out
into
popf
add
xchg
outs
mov
cmp
fwait
add
xchg
outs
mov
or
mov
add
jmp
or
mov
jae
pop
sbb
pop
pop
lods
xor
scas
(bad)
or
mov
or
out
into
popf
add
xchg
outs
mov
add
scas
js
sub
sbb
div
sub
idiv
adc
pop
sbb
pop
pop
mov
(bad)
fwait
jle
xor
cs
sub
cs
cmp
outs
mov
xor
scas
js
sub
mov
adc
scas
js
sub
mov
adc
scas
js
sub
mov
adc
pop
sbb
pop
pop
mov
(bad)
fwait
jle
xor
cs
sub
cmp
xchg
outs
mov
add
or
xchg
into
popf
add
xchg
outs
mov
cmp
fwait
add
xchg
outs
mov
or
mov
adc
jmp
or
mov
jae
pop
sbb
pop
pop
test
or
sbb
dec
cmp
mov
mov
sub
(bad)
adc
sub
xchg
dec
cs
or
sub
cmp
xor
cmp
daa
cs
xchg
xchg
test
adc
mov
adc
scas
inc
adc
adc
mov
cs
mov
sub
(bad)
adc
sub
xchg
dec
cs
mov
sub
stc
adc
adc
lea
mov
mov
(bad)
sub
push
xchg
xchg
mov
sub
ds
pop
add
xchg
scas
mov
push
jl
mov
sub
adc
adc
mov
mov
mov
sub
mov
adc
sub
xchg
dec
cs
mov
cmps
and
inc
add
imul
call
sbb
and
fisttp
cmp
or
and
ror
cmp
or
jg
not
and
ror
cmp
or
pop
xor
dec
enter
loopne
ror
or
sahf
adc
outs
mov
add
or
xchg
into
popf
add
xchg
outs
mov
add
or
xchg
into
fwait
add
xchg
outs
mov
add
scas
js
sub
mov
adc
pop
cmp
imul
mov
xchg
jl
sbb
dec
or
out
into
popf
add
xchg
outs
mov
cmp
fwait
add
xchg
outs
mov
adc
fwait
add
xchg
outs
mov
cmp
je
or
bound
cs
adc
cmp
xor
lods
xchg
iret
cs
sub
in
sub
aaa
mov
mov
mov
xor
aaa
mov
dec
nop
daa
loopne
push
shl
mov
xor
aaa
mov
leave
retf
pop
push
shl
sub
inc
or
aaa
mov
adc
mov
pop
int3
cs
add
imul
sbb
fs
std
xchg
adc
sbb
pop
pop
mov
(bad)
fwait
jle
xor
cs
sub
add
xor
jbe
rcl
scas
xor
mov
mov
scas
jns
sub
xchg
adc
fwait
add
xchg
outs
mov
add
xchg
xchg
and
sbb
cmps
movs
in
xchg
imul
jmp
call
mov
mov
sub
pop
sbb
cmps
movs
(bad)
xchg
imul
fdiv
je
arpl
pop
sbb
cmps
movs
fist
sub
hlt
int
or
pop
sbb
cmps
movs
aad
imul
xor
fisttp
cmp
xor
or
sbb
push
xor
mov
sub
loop
adc
xchg
imul
mov
sub
loop
adc
in
imul
xchg
mov
sub
mov
adc
sbb
cmps
sbb
xor
pop
test
mov
pushf
or
xor
and
adc
cmp
pushf
mov
xchg
cmpxchg
push
(bad)
stos
mov
xchg
or
xor
(bad)
movs
mov
or
sbb
mov
sbb
cmp
push
and
mov
and
mov
or
mov
add
cmp
add
cmp
add
sbb
daa
sbb
and
push
(bad)
and
pop
test
cmp
mov
pushf
mov
ds
mov
mov
pop
sub
sbb
and
sbb
stos
mov
adc
and
pushf
mov
sbb
sub
add
sub
mov
or
cmp
(bad)
(bad)
and
cdq
or
mov
mov
mov
pushf
or
add
sub
xchg
and
call
sub
pop
das
cmp
pushf
mov
mov
add
mov
sub
mov
pushf
mov
ds
mov
mov
xchg
or
cmp
add
sbb
daa
sbb
and
sub
aaa
cmp
or
xor
and
pushf
add
mov
sahf
and
mov
(bad)
push
sub
push
push
movs
mov
call
mov
cmp
pop
cmp
or
and
sbb
daa
mov
mov
xor
pop
cmp
sbb
and
aaa
mov
add
cmp
or
cmp
mov
cmp
sbb
and
sbb
sub
sbb
mov
sub
pop
mov
das
or
cmp
or
cmp
or
mov
xor
sbb
and
ds
xor
sbb
sub
ds
xor
push
mov
and
or
mov
xor
cmp
or
mov
cmp
or
cmp
or
and
sbb
sub
cs
xor
call
cdq
push
push
and
mov
sub
cdq
sbb
mov
cmp
popf
mov
mov
xor
das
cdq
cmp
cmp
cdq
or
mov
adc
sub
mov
sbb
sub
sbb
mov
cdq
lahf
or
mov
popf
or
mov
mov
mov
mov
sub
xor
test
cmp
add
ds
xor
call
cdq
push
push
and
mov
sub
cdq
sbb
mov
cmp
popf
mov
mov
xor
das
cdq
cmp
cmp
or
cmp
pushf
mov
mov
add
mov
sub
mov
pushf
mov
ds
mov
mov
xchg
or
cmp
add
sbb
daa
sbb
and
or
and
sbb
xor
pop
test
mov
pushf
or
xor
and
adc
cmp
pushf
mov
xchg
cmpxchg
push
(bad)
stos
mov
xchg
add
cmp
mov
pushf
mov
ds
mov
mov
xchg
or
cmp
add
sbb
daa
sbb
and
or
and
sbb
xor
pop
test
mov
pushf
or
xor
and
adc
cmp
pushf
mov
or
cmp
sbb
cmps
xor
and
pop
add
cmp
push
and
mov
and
mov
or
mov
sbb
and
adc
and
mov
or
cmp
sbb
and
sbb
test
scas
shr
sub
or
sub
xor
(bad)
xor
push
or
and
ror
cmp
or
and
ror
cmp
or
pop
xor
dec
enter
loopne
push
cmps
(bad)
adc
cmp
pushf
daa
lea
xchg
imul
sbb
mov
mov
adc
cs
sub
cmp
push
or
inc
aam
adc
mov
cs
aam
adc
mov
mov
aam
adc
mov
cmp
or
and
sub
mov
dec
or
aad
call
sub
movs
adc
or
rcl
mov
cmps
imul
call
sbb
and
fisttp
cmp
or
and
ror
cmp
or
and
ror
cmp
or
pop
xor
dec
enter
loopne
push
movs
(bad)
adc
mov
daa
add
xchg
imul
sbb
mov
mov
adc
call
mov
or
xchg
into
popf
add
xchg
outs
mov
add
fwait
add
xchg
outs
mov
add
or
xchg
into
fwait
add
xchg
outs
mov
add
je
or
bound
lea
push
adc
cdq
iret
push
rcl
scas
mov
cmps
movs
adc
or
rcl
xchg
mov
mov
mov
add
js
sub
mov
adc
scas
js
sub
mov
adc
scas
js
sub
mov
adc
pop
mov
dec
or
and
sbb
inc
and
mov
or
mov
in
adc
mov
mov
cmp
dec
mov
xchg
enter
sub
and
mov
cmp
push
or
inc
aam
adc
mov
cs
aam
adc
mov
mov
aam
adc
mov
mov
aam
scas
fdiv
je
arpl
js
aad
cs
adc
(bad)
mov
sbb
mov
mov
adc
cs
daa
and
aas
dec
adc
add
pop
scas
mov
push
sbb
cs
test
loopne
fnstcw
sub
pop
sbb
cmps
movs
(bad)
xchg
imul
fdiv
je
arpl
pop
sbb
cmps
movs
fist
sub
hlt
shl
xchg
retf
bound
sbb
cmps
movs
aad
imul
add
sub
in
sub
aaa
mov
mov
mov
xor
aaa
mov
dec
mov
loopne
push
shl
mov
xor
aaa
mov
leave
not
pop
rcl
and
mov
in
adc
aaa
mov
cmp
or
and
fisttp
cmp
or
and
ror
cmp
or
and
ror
cmp
or
pop
xor
dec
enter
loopne
push
mov
inc
sub
sbb
pop
sbb
xor
xchg
or
adc
aaa
mov
cmps
sub
xchg
lahf
xchg
mov
aad
xchg
or
jmp
scas
inc
sub
fwait
sbb
ds
loop
adc
xchg
imul
mov
sub
loop
adc
stc
imul
xchg
mov
sub
(bad)
xchg
cld
(bad)
sbb
xor
mov
mov
jl
xlat
sub
mov
mov
cmp
je
or
bound
cs
adc
add
adc
mov
mov
cmp
inc
or
bound
push
adc
add
adc
mov
mov
cmp
popf
add
xchg
outs
mov
add
or
xchg
into
popf
add
xchg
outs
mov
add
or
xchg
into
fwait
add
xchg
outs
mov
and
fwait
add
xchg
outs
mov
cmp
je
or
bound
lea
push
adc
or
mov
mov
add
xor
cld
inc
in
xor
jmp
out
es
mov
cmp
xchg
sub
mov
data16
cmp
xchg
popf
add
xchg
mov
add
sub
(bad)
mov
jmp
data16
cmp
xchg
fwait
add
xchg
mov
and
pop
sub
fisub
sbb
lea
cmp
lods
xchg
imul
mov
sub
mov
daa
lahf
xchg
xchg
and
sbb
cmps
movs
rcl
mov
(bad)
iret
xchg
mov
dec
xchg
lods
std
xchg
jl
sbb
imul
stc
or
mov
(bad)
rcl
xchg
lods
jge
jl
sbb
imul
mov
fwait
dec
mov
or
scas
xor
cs
or
mov
cmp
push
or
aaa
mov
cmp
cmp
cmps
test
xor
sbb
dec
cs
mov
not
mov
cs
mov
not
mov
cmp
or
int
int3
in
imul
cmp
or
rcl
mov
mov
scas
js
sub
cld
adc
rol
cmp
sub
iret
mov
adc
rol
daa
mov
in
imul
mov
adc
rol
and
out
cmps
adc
cs
test
xor
push
or
adc
or
inc
xlat
dec
shl
in
test
mov
or
adc
or
inc
xlat
dec
shl
in
test
mov
or
xchg
adc
add
dec
pop
xor
adc
adc
lea
adc
outs
mov
sbb
popf
add
xchg
outs
mov
and
rol
cmp
xchg
outs
mov
add
cli
adc
cmp
mov
xchg
leave
cs
sub
or
sub
cld
adc
rol
cmp
sub
lds
adc
rol
daa
mov
in
imul
mov
adc
rol
and
out
cmps
adc
mov
xchg
xor
mov
cs
mov
not
mov
cs
mov
not
mov
cs
mov
div
sub
mov
adc
rol
cmp
sub
fdivr
adc
rol
daa
mov
in
imul
mov
adc
rol
and
scas
js
sub
or
test
or
mov
in
xchg
sbb
adc
cs
mov
not
sbb
cmps
movs
rcl
adc
mov
(bad)
mov
cmp
cmp
shl
xor
cs
adc
rol
daa
xor
in
imul
sbb
jo
lea
sub
in
test
or
mov
in
xchg
sbb
adc
cs
mov
not
sbb
cmps
movs
rcl
adc
lea
xchg
call
xor
shl
cmps
xor
push
or
adc
daa
sbb
lea
cmp
aad
imul
mov
sub
mov
daa
lahf
xchg
xchg
and
sbb
cmps
movs
rcl
adc
lea
cli
adc
sub
mov
sub
in
sub
aaa
mov
mov
mov
xor
aaa
mov
leave
not
pop
rcl
and
mov
in
xor
aaa
mov
dec
mov
loopne
push
shl
mov
xor
aaa
mov
dec
mov
loopne
push
shl
mov
adc
aaa
mov
cmps
sub
shl
jb
jl
xlat
sub
mov
mov
cmp
hlt
inc
or
bound
push
adc
add
adc
mov
mov
cmp
cmp
imul
nop
adc
add
adc
mov
mov
cmp
sbb
adc
cs
cmps
cli
and
adc
dec
adc
(bad)
test
add
or
or
mov
cmps
cli
and
adc
dec
adc
(bad)
mov
add
or
or
mov
cmps
cli
and
adc
dec
adc
inc
in
xor
leave
xchg
iret
cs
sub
in
sub
aaa
mov
mov
mov
xor
aaa
mov
leave
not
pop
rcl
and
mov
in
xor
aaa
mov
dec
mov
loopne
push
shl
mov
adc
aaa
mov
cmp
dec
pop
cmp
or
mov
push
sub
sub
adc
cs
cmp
xchg
xchg
adc
sbb
and
cs
daa
cmp
mov
imul
mov
adc
scas
(bad)
adc
jle
xchg
mov
or
cmp
jle
out
imul
mov
aad
call
mov
push
or
mov
push
(bad)
xchg
mov
pop
aad
jb
xor
cs
adc
out
cmps
adc
in
fst
or
xor
fisttp
cmp
pop
push
aad
xchg
or
jmp
scas
inc
sub
fwait
sbb
ds
loop
adc
in
imul
xchg
mov
sub
loop
adc
xchg
imul
mov
sub
mov
cmp
mov
cmps
mov
mov
adc
cs
adc
(bad)
cmc
jp
inc
in
xor
mov
sti
sub
in
sub
aaa
mov
mov
mov
xor
aaa
mov
leave
not
pop
rcl
and
mov
in
xor
aaa
mov
dec
mov
loopne
push
shl
mov
add
out
mov
cmp
mov
adc
movs
sti
shl
stc
cmps
sub
xchg
mov
rcl
scas
(bad)
xchg
jl
sbb
mov
or
jb
jl
xlat
sub
mov
mov
cmp
hlt
inc
or
bound
push
adc
add
adc
mov
mov
cmp
cmp
imul
nop
adc
add
adc
mov
mov
cmp
je
or
bound
inc
nop
adc
add
adc
mov
mov
cmp
jbe
rcl
scas
xor
lea
cmp
or
cmp
mov
es
fisub
mul
lea
cmp
mov
cmp
mov
es
out
es
(bad)
pusha
not
xor
fisttp
cmp
add
or
sbb
push
xor
mov
sub
loop
adc
in
imul
xchg
mov
sub
loop
adc
xchg
imul
mov
sub
loopne
enter
sub
xchg
retf
shl
mov
or
inc
aam
adc
mov
cs
aam
adc
mov
loopne
into
fwait
add
xchg
outs
mov
add
pop
mov
dec
or
and
fwait
add
fwait
daa
mov
scas
inc
sub
call
imul
call
sbb
and
fisttp
cmp
or
inc
aam
adc
mov
loopne
into
fwait
add
xchg
outs
mov
sub
mov
daa
or
xchg
iret
sbb
cmp
add
adc
mov
mov
cmp
mov
fwait
cmps
in
xor
xchg
imul
sbb
mov
(bad)
xchg
jl
sbb
dec
or
cdq
into
popf
add
xchg
outs
mov
add
scas
jns
sub
and
ror
cmp
or
and
sub
mov
dec
mov
mov
adc
mov
cmps
or
jge
idiv
cmp
jmp
popf
add
xchg
cs
or
cs
mov
or
outs
mov
add
scas
jns
sub
pop
xor
dec
enter
loopne
push
cs
adc
adc
cmps
xchg
xor
xchg
imul
sbb
mov
(bad)
adc
adc
(bad)
mov
sbb
aaa
or
cdq
es
das
mov
adc
dec
adc
(bad)
push
jnp
inc
in
xor
leave
xchg
iret
cs
sub
in
sub
aaa
mov
mov
mov
xor
aaa
mov
leave
not
pop
rcl
and
mov
in
xor
aaa
mov
dec
mov
loopne
push
shl
mov
sub
aaa
mov
mov
xchg
mov
lea
or
lea
cmp
lea
cmp
retf
sbb
or
mov
or
(bad)
out
cs
adc
sbb
cmps
add
(bad)
imul
mov
cmp
mov
or
(bad)
out
cs
adc
sbb
cmps
add
(bad)
imul
mov
cmp
cmp
sbb
or
out
into
cmp
jge
cmps
adc
in
jns
mov
lea
or
lea
cmp
lea
cmp
leave
adc
mov
or
mov
or
(bad)
out
cs
adc
sbb
cmps
add
(bad)
imul
mov
cmp
cmp
mov
or
(bad)
out
cs
adc
sbb
cmps
sub
(bad)
imul
mov
cmp
cmp
sbb
or
out
mov
in
jge
cmps
adc
push
lea
cmp
lea
cmp
lea
cmp
leave
adc
mov
or
lea
or
adc
mov
daa
inc
lea
cmp
lea
cmp
dec
sbb
mov
or
lea
or
adc
mov
daa
push
lea
cmp
lea
cmp
leave
sbb
jecxz
imul
lea
or
lea
cmp
or
sbb
leave
adc
mov
or
mov
or
(bad)
out
cs
adc
sbb
cmps
add
(bad)
imul
mov
cmp
mov
or
mov
or
out
mov
in
enter
sub
and
xchg
(bad)
xor
push
or
sub
jns
adc
mov
nop
aaa
mov
mov
mov
cmp
sbb
data16
lea
or
adc
mov
daa
imul
lea
cmp
enter
cmps
in
test
mov
and
adc
mov
or
mov
or
out
and
mov
cmp
mov
or
(bad)
out
mov
in
imul
call
sbb
and
fisttp
cmp
or
and
ror
cmp
or
and
ror
cmp
or
pop
xor
dec
enter
loopne
push
cmps
(bad)
adc
pop
ins
mov
(bad)
mov
sub
aaa
mov
cmp
ins
data16
stc
adc
adc
lea
adc
push
add
xchg
push
mov
adc
push
add
xchg
cmp
xchg
leave
scas
aam
sub
mov
xchg
enter
sub
cmps
test
xor
mov
test
xor
mov
test
xor
cmp
out
cmps
test
xor
sbb
push
push
add
xchg
xor
mov
scas
xlat
sub
adc
mov
test
cs
(bad)
xor
cmp
out
cmps
test
xor
cmp
out
cmps
test
xor
jne
mov
sbb
call
daa
jo
mov
cmp
cmp
sbb
cmp
sub
push
(bad)
adc
adc
mov
cmp
mov
shl
cmp
jnp
in
sub
aaa
mov
cmp
and
adc
mov
or
lea
or
int3
adc
(bad)
sbb
add
xchg
push
mov
adc
push
add
xchg
jbe
xor
adc
adc
push
add
xchg
inc
mov
adc
push
add
xchg
and
xor
cs
sub
mov
sbb
mov
mov
sbb
bound
lea
xchg
push
stos
stc
adc
xchg
mov
scas
sbb
daa
jp
mov
cmp
mov
or
out
mov
in
enter
sub
cmp
or
lea
or
adc
fimul
not
lea
adc
(bad)
xchg
xor
mov
cmp
mov
mov
sub
adc
add
add
pop
adc
mov
mov
mov
cmp
popf
add
xchg
outs
mov
or
cmp
or
fisub
sub
mov
sub
lds
sub
lea
cmp
mov
adc
das
mov
adc
mov
mov
or
xchg
adc
fwait
add
xchg
outs
mov
add
retf
cld
xchg
xchg
and
sbb
cmps
movs
in
xchg
imul
sbb
mov
mov
cmps
jns
mov
cmp
mov
or
out
mov
in
enter
sub
xchg
dec
out
cmps
adc
lea
mov
mov
adc
mov
or
mov
cmps
dec
lea
mov
pop
mov
neg
mov
or
cmp
or
mov
imul
xor
mov
sub
mov
sub
adc
adc
mov
mov
ds
cmp
in
shl
cmp
jnp
in
adc
aaa
mov
cmps
sub
test
mov
aad
xchg
or
jmp
scas
inc
sub
fwait
sbb
ds
loop
adc
in
imul
xchg
mov
sub
loop
adc
xchg
imul
mov
sub
lea
cmp
mov
adc
sbb
cmps
and
inc
jge
adc
mov
or
cdq
into
popf
add
xchg
outs
mov
sbb
add
xchg
outs
mov
sbb
outs
mov
adc
bound
lea
push
adc
fwait
iret
sub
xor
mov
mov
cmp
xchg
outs
mov
add
scas
js
sub
fwait
jmp
(bad)
leave
imul
mov
adc
scas
js
sub
call
pop
mov
dec
or
and
fwait
mov
xor
xchg
imul
sbb
mov
lea
cmp
mov
adc
cs
adc
mov
mov
or
and
fisttp
cmp
or
and
ror
cmp
or
and
ror
cmp
or
pop
xor
dec
enter
loopne
push
cmps
(bad)
adc
adc
mov
mov
adc
aaa
mov
cmp
or
and
fisttp
cmp
or
and
ror
cmp
or
and
ror
cmp
or
pop
xor
dec
enter
loopne
push
cmps
(bad)
adc
adc
mov
mov
sbb
aaa
or
cwde
or
or
adc
int3
adc
inc
in
xor
mov
adc
cmp
push
or
and
fisttp
cmp
or
and
ror
cmp
or
and
ror
cmp
or
pop
xor
dec
enter
call
test
or
xchg
imul
mov
adc
adc
mov
mov
ds
shl
push
xor
xchg
es
scas
xchg
adc
xor
mov
sub
leave
xchg
iret
cs
sub
in
sub
aaa
mov
mov
mov
xor
aaa
mov
leave
not
pop
rcl
and
mov
in
xor
aaa
mov
dec
mov
loopne
push
shl
mov
adc
aaa
mov
cmp
or
xchg
adc
fwait
add
xchg
outs
mov
add
xchg
xchg
and
sbb
cmps
movs
in
xchg
imul
lea
cmp
mov
or
mov
or
out
cs
adc
cs
adc
aad
jge
mov
or
or
adc
int3
adc
add
xchg
outs
mov
add
scas
js
sub
adc
jmp
(bad)
leave
imul
mov
adc
scas
js
sub
call
pop
mov
dec
or
and
fwait
mov
xor
xchg
imul
sbb
mov
jmp
call
mov
mov
sub
pop
sbb
cmps
movs
(bad)
xchg
imul
fdiv
hlt
(bad)
arpl
pop
sbb
cmps
movs
fist
sub
je
arpl
pop
sbb
cmps
movs
aad
imul
fdiv
je
arpl
shl
mov
xor
aaa
mov
leave
not
pop
rcl
and
mov
in
sbb
daa
movs
mov
adc
cs
or
mov
cmps
or
out
adc
in
imul
in
sub
aaa
mov
fnstcw
sub
pop
sbb
cmps
movs
(bad)
xchg
imul
fdiv
hlt
(bad)
arpl
pop
sbb
cmps
movs
fist
sub
je
arpl
pop
sbb
cmps
movs
aad
imul
fdiv
hlt
(bad)
arpl
pop
sbb
cmps
movs
fist
sub
je
arpl
pop
sbb
cmps
movs
aad
imul
sbb
mov
popa
sub
cmps
std
sub
lock
mov
or
xchg
adc
fwait
add
xchg
outs
mov
add
(bad)
xor
and
mov
jnp
in
xor
aaa
mov
leave
not
pop
rcl
and
mov
in
adc
aaa
mov
cmps
sub
scas
xor
mov
stos
enter
sub
cmps
sub
std
adc
mov
mov
sub
xchg
cld
cmp
or
mov
add
stos
std
adc
mov
mov
sub
xchg
cld
cs
in
xchg
mov
and
mov
xor
cs
adc
add
xor
xchg
add
xchg
scas
mov
push
sub
sub
mov
call
scas
js
sub
adc
jmp
(bad)
leave
imul
mov
adc
scas
js
sub
call
pop
mov
leave
add
mov
xchg
imul
mov
adc
scas
js
sub
adc
mov
leave
imul
mov
adc
scas
js
sub
call
pop
cmp
imul
mov
xchg
imul
mov
adc
scas
js
sub
adc
jmp
(bad)
leave
imul
mov
adc
scas
js
sub
adc
dec
loop
adc
mov
jbe
leave
add
mov
xchg
imul
mov
adc
scas
js
sub
mov
adc
scas
js
sub
call
scas
js
sub
call
pop
mov
dec
push
(bad)
addr16
mov
sub
mov
adc
scas
js
sub
mov
adc
scas
js
sub
call
scas
js
sub
call
adc
xor
inc
sub
cmp
or
sbb
push
xor
mov
sub
loop
adc
in
imul
xchg
mov
sub
loop
adc
xchg
imul
mov
sub
clc
xchg
enter
sub
cmps
sub
stos
stc
adc
xchg
mov
mov
mov
daa
push
mov
cmp
mov
or
ror
sbb
mov
mov
daa
push
mov
cmp
mov
or
sar
(bad)
leave
xchg
mov
mov
mov
daa
push
mov
cmp
mov
or
mov
ins
or
aaa
mov
fnstcw
sub
pop
sbb
cmps
movs
(bad)
xchg
imul
fdiv
hlt
(bad)
arpl
pop
sbb
cmps
movs
fist
sub
je
arpl
pop
sbb
cmps
movs
aad
imul
sbb
mov
mov
add
or
or
mov
daa
repz
mov
cmps
or
int3
jns
cs
rcl
dec
cmp
mov
cmp
xor
lea
cmp
mov
or
or
adc
(bad)
dec
arpl
cmp
inc
mov
xchg
enter
sub
xor
jno
mov
adc
mov
or
mov
cmps
or
dec
xchg
jns
cld
adc
(bad)
leave
adc
adc
cs
adc
mov
or
cmp
or
cmp
cmp
jl
mov
adc
cs
adc
(bad)
xor
or
mov
adc
mov
or
adc
or
adc
cs
adc
rcr
jge
sub
movs
sti
shl
(bad)
cmps
sub
shl
jb
jl
xlat
sub
mov
mov
cmp
jmp
or
cmp
jns
sbb
mov
adc
xchg
xor
pop
sbb
cmps
movs
fist
sub
je
arpl
pop
sbb
cmps
movs
aad
imul
lea
cmp
cs
or
cmp
or
mov
adc
sub
movs
sti
shl
int3
cmps
sub
pop
add
xchg
scas
mov
push
jl
mov
sub
adc
add
or
mov
mov
ds
shl
sub
cs
adc
add
xor
test
inc
xor
fwait
sbb
push
xor
mov
sub
loop
adc
in
imul
xchg
mov
sub
loop
adc
xchg
imul
mov
sub
lea
cmp
lea
mov
cmp
adc
(bad)
jge
popf
add
xchg
outs
mov
add
popf
add
xchg
outs
mov
add
or
xchg
into
fwait
add
xchg
outs
mov
and
xchg
call
fwait
aaa
pop
xor
dec
enter
loopne
push
cmps
(bad)
adc
pop
ins
mov
(bad)
mov
adc
aaa
mov
cmp
or
inc
aam
adc
mov
cs
aam
adc
mov
loopne
into
fwait
add
xchg
outs
mov
add
or
xchg
into
je
or
bound
lea
push
lea
cmp
or
push
cmp
push
add
cli
in
not
(bad)
das
imul
mov
or
inc
in
push
sbb
in
jbe
mov
es
stc
jp
rol
xor
shl
es
(bad)
das
neg
mov
or
out
ins
add
enter
neg
mov
in
push
sbb
in
jbe
mov
es
rol
xor
shl
es
(bad)
das
neg
mov
or
out
ins
add
enter
not
inc
ror
or
adc
inc
dec
xor
lea
cmp
rol
jge
cli
in
not
(bad)
das
imul
enter
neg
mov
in
push
sbb
in
jbe
mov
cmps
sbb
jns
not
inc
push
xor
shl
es
(bad)
das
neg
mov
or
out
ins
add
enter
neg
mov
in
push
sbb
in
jbe
mov
cmps
pop
sar
not
inc
push
xor
rol
das
imul
lea
cmp
test
imul
lea
cmp
int3
adc
inc
ror
or
adc
inc
dec
xor
lea
cmp
ror
jge
cli
in
not
(bad)
das
imul
enter
neg
mov
in
push
sbb
in
jbe
mov
cmps
adc
stc
jnp
rol
xor
shl
es
(bad)
das
neg
mov
or
out
ins
add
enter
neg
mov
in
push
sbb
in
jbe
mov
cmps
adc
stc
jnp
rol
xor
rol
das
idiv
sbb
cs
adc
(bad)
aas
popa
adc
dec
cmps
jns
jbe
inc
push
xor
shl
es
(bad)
das
neg
mov
or
out
ins
add
enter
neg
mov
in
push
sbb
in
jbe
mov
cmps
adc
rol
xor
lea
cmp
test
not
mov
adc
fcmovb
es
jns
not
inc
push
xor
rol
das
neg
mov
xor
(bad)
xor
cmps
add
xchg
mov
sub
test
not
inc
(bad)
push
shl
in
test
mov
or
xchg
adc
fwait
add
xchg
mov
and
(bad)
xchg
and
sbb
cmps
movs
in
xchg
imul
inc
push
xor
rol
das
neg
mov
cmp
cmp
or
fwait
or
out
ins
add
enter
not
inc
lock
mov
in
jbe
loop
mov
(bad)
das
neg
mov
sbb
mov
hlt
sbb
xchg
mov
sub
test
not
inc
(bad)
push
shl
in
test
mov
or
adc
or
mov
and
(bad)
xchg
and
sbb
cmps
movs
in
xchg
imul
inc
push
xor
rol
das
neg
mov
sbb
mov
(bad)
es
scas
adc
sub
mov
sub
jmp
fisubr
aaa
mov
sbb
mov
cmp
push
add
xchg
scas
mov
sar
sub
xchg
iret
cs
sub
in
sub
aaa
mov
mov
mov
xor
aaa
mov
leave
not
pop
rcl
and
mov
in
xor
aaa
mov
dec
mov
loopne
push
shl
mov
sub
aaa
mov
cmp
ins
pop
or
sbb
dec
or
xchg
into
popf
add
xchg
outs
mov
add
fwait
add
xchg
outs
mov
add
scas
js
sub
mov
adc
pop
mov
dec
or
and
call
or
add
adc
mov
mov
cmp
xchg
outs
mov
add
add
xchg
outs
mov
add
loop
into
fwait
add
xchg
outs
mov
add
scas
js
sub
mov
adc
pop
mov
dec
or
and
call
or
add
adc
mov
mov
cmp
imul
mov
shr
mov
sub
and
fisttp
cmp
or
and
ror
cmp
or
inc
aam
adc
mov
mov
aam
scas
fdiv
je
arpl
js
aad
cs
adc
(bad)
mov
adc
aaa
mov
cmp
or
and
fisttp
cmp
or
and
ror
cmp
or
inc
aam
adc
mov
mov
aam
scas
fdiv
je
arpl
js
aad
sbb
jmp
cmps
movs
adc
or
rcl
adc
adc
outs
mov
add
js
sub
call
scas
jns
sub
and
ror
cmp
or
pop
xor
dec
enter
loopne
push
cmps
(bad)
adc
mov
daa
adc
xchg
imul
sbb
mov
mov
adc
cs
xchg
retf
shl
mov
or
inc
aam
adc
mov
cs
aam
adc
mov
loopne
into
fwait
add
xchg
outs
mov
add
or
xchg
into
je
or
bound
lea
push
adc
fwait
iret
push
mov
adc
scas
inc
jmp
adc
mov
cs
aam
adc
mov
cs
aam
adc
mov
loopne
into
fwait
add
xchg
outs
mov
add
or
xchg
into
je
or
bound
lea
push
adc
fwait
iret
sbb
mov
in
adc
mov
mov
cmp
pop
mov
xchg
enter
sub
xchg
dec
shl
mov
or
inc
aam
adc
mov
cs
aam
adc
mov
loopne
into
fwait
add
xchg
outs
mov
add
or
xchg
into
je
or
bound
lea
push
adc
fwait
iret
mov
leave
adc
scas
(bad)
out
sub
sbb
cmps
movs
adc
mov
cs
aam
adc
mov
cs
aam
adc
mov
loopne
into
fwait
add
xchg
outs
mov
add
or
xchg
into
je
or
bound
lea
push
adc
fwait
iret
dec
mov
adc
scas
(bad)
out
sub
sbb
cmps
movs
adc
or
rcl
test
cmp
popf
add
xchg
outs
mov
add
js
sub
call
scas
jns
sub
and
ror
cmp
or
pop
xor
dec
enter
loopne
push
cmps
(bad)
adc
ret
shl
xor
xchg
or
adc
aaa
mov
cmp
or
and
fisttp
cmp
or
and
ror
cmp
or
inc
aam
adc
mov
mov
aam
scas
fdiv
je
arpl
js
aad
cs
adc
(bad)
mov
sbb
mov
sbb
cmps
cs
in
xchg
outs
mov
add
js
sub
call
scas
jns
sub
and
ror
cmp
or
pop
xor
dec
enter
loopne
push
cmps
(bad)
adc
inc
cs
(bad)
mov
adc
aaa
mov
cmp
or
and
fisttp
cmp
or
and
ror
cmp
or
inc
aam
adc
mov
mov
aam
scas
fdiv
je
arpl
js
aad
call
sub
sbb
cmps
movs
adc
or
rcl
cs
push
mov
sub
and
fisttp
cmp
or
and
ror
cmp
or
inc
aam
adc
mov
mov
aam
scas
fdiv
je
arpl
js
aad
cs
adc
(bad)
mov
adc
aaa
mov
cmp
or
and
fisttp
cmp
or
and
ror
cmp
or
inc
aam
adc
mov
mov
aam
scas
fdiv
je
arpl
js
aad
sbb
call
cmps
movs
adc
or
rcl
test
mov
in
xchg
outs
mov
add
js
sub
call
scas
jns
sub
and
ror
cmp
or
pop
xor
dec
enter
loopne
push
cmps
(bad)
adc
cmp
aad
cmps
aaa
xor
xchg
imul
sbb
mov
mov
sub
call
scas
js
sub
adc
jmp
(bad)
leave
imul
call
sbb
and
ror
cmp
or
pop
xor
dec
enter
loopne
push
cmps
(bad)
adc
inc
add
shl
xor
xchg
or
sbb
aaa
mov
rcl
xchg
mov
mov
mov
add
js
sub
call
scas
jns
sub
and
ror
cmp
or
pop
xor
dec
enter
loopne
push
cmps
(bad)
adc
cmp
aad
cmps
aaa
xor
xchg
imul
sbb
mov
fist
jbe
mov
xchg
imul
in
sub
aaa
mov
cmp
xor
adc
(bad)
sbb
mov
mov
mov
jl
xlat
sub
mov
mov
cmp
hlt
inc
or
bound
push
adc
add
adc
mov
mov
cmp
cmp
imul
nop
adc
add
adc
mov
mov
cmp
popf
add
xchg
outs
mov
add
js
sub
call
scas
jns
sub
and
ror
cmp
or
pop
xor
dec
enter
loopne
push
cmps
(bad)
adc
cmp
(bad)
fwait
daa
int
xchg
xchg
imul
sbb
mov
mov
sub
call
scas
js
sub
adc
jmp
(bad)
leave
imul
call
sbb
and
ror
cmp
or
pop
xor
dec
enter
loopne
push
cmps
(bad)
adc
cmp
xlat
fwait
daa
xor
xchg
imul
sbb
mov
jmp
call
mov
mov
sub
pop
sbb
cmps
movs
(bad)
xchg
imul
fdiv
hlt
(bad)
arpl
pop
sbb
cmps
movs
fist
sub
je
arpl
pop
sbb
cmps
movs
aad
imul
sbb
dec
shl
cmps
xor
ds
mov
cmp
jnp
in
adc
aaa
mov
cmps
sub
xchg
lahf
adc
xchg
or
jmp
scas
inc
sub
fwait
sbb
ds
loop
adc
in
imul
xchg
mov
sub
loop
adc
xchg
imul
mov
sub
(bad)
xchg
cld
(bad)
sbb
lods
shl
jb
jl
xlat
sub
mov
mov
cmp
hlt
inc
or
bound
push
adc
add
adc
mov
mov
cmp
cmp
imul
nop
adc
add
adc
mov
mov
cmp
popf
add
xchg
outs
mov
add
scas
js
sub
call
scas
jns
sub
and
ror
cmp
or
and
sub
mov
dec
mov
cmp
and
fwait
iret
daa
mov
cmp
mov
in
adc
mov
mov
cmp
outs
mov
xchg
leave
cs
scas
adc
cmps
(bad)
sbb
add
lds
mov
mov
in
sbb
aaa
mov
sbb
push
and
fwait
iret
and
cmp
add
adc
mov
mov
cmp
mov
cmp
and
fwait
iret
and
cmp
add
adc
mov
mov
cmp
movs
(bad)
xor
mov
test
xor
ret
scas
(bad)
out
sub
sbb
cmps
movs
adc
enter
sub
cmps
test
xor
cmp
out
cmps
test
xor
lea
cmp
lea
cmp
lea
cmp
pop
xor
sub
movs
sti
shl
stc
cmps
sub
xchg
lahf
xchg
mov
inc
xor
fwait
sbb
push
xor
mov
sub
loop
adc
in
imul
xchg
mov
sub
loop
adc
xchg
imul
mov
sub
(bad)
xchg
cld
(bad)
sbb
lods
shl
jb
jl
xlat
sub
mov
mov
cmp
hlt
inc
or
bound
push
adc
add
adc
mov
mov
cmp
cmp
imul
nop
adc
add
adc
mov
mov
cmp
lods
add
xchg
scas
xor
mov
mov
sub
call
scas
js
sub
mov
adc
scas
jns
sub
and
ror
cmp
or
and
sub
mov
dec
or
mov
or
or
adc
(bad)
out
imul
cmp
or
inc
aam
adc
mov
cs
aam
adc
mov
loopne
into
fwait
add
xchg
outs
mov
add
pop
mov
dec
or
mov
es
mov
es
rol
not
xor
fisttp
cmp
cmp
out
mov
xchg
enter
sub
aas
xchg
dec
out
cmps
adc
mov
xchg
xor
sbb
gs
xchg
jmp
adc
pop
sbb
jns
mov
xchg
jmp
adc
pop
sbb
jno
mov
xchg
enter
sub
cmp
nop
(bad)
popf
xor
cmp
or
mov
adc
cs
lock
xor
int
adc
cmp
add
adc
cli
xor
shl
and
mov
imul
mov
in
xchg
shl
xor
add
jp
mov
(bad)
daa
neg
inc
in
push
shl
not
(bad)
and
sub
aaa
mov
(bad)
and
popf
add
xchg
outs
mov
add
scas
js
sub
mov
adc
scas
jns
sub
and
ror
cmp
or
pop
xor
dec
enter
loopne
shl
cs
std
out
cmps
adc
and
xor
lea
or
mov
xor
xor
push
mov
cmp
mov
daa
or
sbb
push
sbb
pop
or
sbb
and
adc
shl
sbb
jmp
mov
lock
(bad)
xor
(bad)
xor
inc
iret
imul
cmp
push
aaa
rcl
mov
out
xchg
scas
sub
sub
mov
cs
sub
in
sub
aaa
mov
mov
mov
xor
aaa
mov
leave
not
pop
rcl
and
mov
in
xor
aaa
mov
dec
mov
loopne
push
shl
mov
sbb
aaa
mov
inc
xor
fwait
sbb
push
xor
mov
sub
loop
adc
in
imul
xchg
mov
sub
loop
adc
xchg
imul
mov
sub
les
mov
mov
or
adc
das
sbb
pop
and
adc
int3
adc
(bad)
popf
push
popf
add
xchg
outs
mov
add
adc
je
xlat
sub
add
js
aad
call
sub
sbb
cmps
movs
adc
or
aad
call
sub
sbb
cmps
movs
adc
pop
int
adc
popf
adc
fwait
add
scas
call
sahf
stc
adc
mov
or
push
loop
stc
xchg
int3
shl
mov
or
inc
aam
adc
mov
cs
aam
adc
mov
inc
aam
adc
mov
and
sub
mov
dec
mov
mov
ins
xor
mov
(bad)
or
mov
pop
xor
pop
mov
mov
push
push
fisttp
stos
jmp
xor
xlat
adc
xor
adc
or
das
adc
cmp
popf
clc
sub
or
dec
adc
(bad)
ins
xor
xchg
xor
adc
xchg
iret
push
xchg
cmp
mov
mov
cmp
cmp
fwait
mov
scas
inc
sub
call
jge
stc
adc
rol
shl
mov
xchg
scas
aas
sub
rol
fidiv
push
in
int
stc
sub
pop
sbb
lea
mov
in
xchg
outs
mov
add
adc
mov
xchg
xchg
and
int3
cmp
cs
call
or
std
cli
repnz
cmp
mov
cmp
mov
jmp
sbb
mov
add
shl
mov
cs
adc
push
inc
in
push
shl
in
test
push
push
inc
in
push
jmp
mov
dec
mov
mov
adc
aaa
shl
mov
call
or
cmp
push
aaa
rcl
mov
call
pop
out
cmps
xor
cs
test
(bad)
xor
push
or
and
fisttp
cmp
or
and
ror
cmp
or
inc
aam
adc
mov
mov
aam
retf
fdiv
hlt
frstor
pop
in
ins
scas
inc
pop
or
sbb
shl
jge
xor
mov
sub
adc
cld
jmp
int3
xchg
mov
sbb
jge
rcl
sub
add
or
sub
jmp
mov
imul
call
scas
cmp
sub
call
scas
cmp
sub
call
pop
cmp
imul
aaa
or
bound
and
cmp
jmp
mov
in
adc
mov
cdq
xor
xor
(bad)
call
cdq
xor
mov
xchg
enter
sub
fsubr
mov
cs
in
int3
scas
std
sub
pop
sbb
jae
rcl
adc
lea
adc
push
add
xchg
push
mov
adc
scas
add
por
ins
xor
push
hlt
repnz
or
cmp
aad
xchg
adc
ins
mov
adc
pop
sbb
push
adc
cmp
or
adc
push
xchg
adc
aad
mov
inc
pop
mov
in
xchg
outs
mov
add
out
xchg
into
popf
add
xchg
outs
mov
add
fwait
add
xchg
cmps
xor
fwait
add
xchg
mov
or
sub
jns
int3
arpl
cmp
sbb
cs
in
xchg
outs
mov
add
mov
cmps
xor
daa
sbb
lea
cmp
mov
or
mov
xchg
and
sbb
cmps
movs
rcl
cs
inc
jmp
adc
out
iret
adc
(bad)
xor
push
or
and
fisttp
cmp
or
and
ror
cmp
pop
shl
xor
(bad)
xor
xor
dec
enter
loopne
push
in
stos
arpl
cmp
jo
(bad)
xor
push
or
xchg
adc
fwait
add
xchg
cmps
xor
lea
outs
scas
(bad)
adc
sbb
mov
pop
sbb
cmps
movs
rcl
(bad)
dec
jmp
jb
movs
inc
push
imul
xchg
dec
cs
aam
adc
mov
cs
aam
adc
mov
inc
aam
adc
mov
and
sub
mov
dec
or
sbb
fcom
mov
mov
jl
xlat
sub
mov
mov
cmp
hlt
inc
or
bound
push
adc
add
adc
mov
mov
cmp
cmp
imul
nop
adc
add
adc
mov
mov
cmp
ds
adc
xor
mov
sub
jmp
push
or
mov
push
loop
mov
shr
xor
dec
scas
mov
push
ins
push
xchg
xchg
and
inc
xor
fwait
sbb
push
xor
mov
sub
loop
adc
in
imul
xchg
mov
sub
loop
adc
xchg
imul
mov
sub
xchg
adc
mov
add
popf
add
xchg
outs
mov
add
or
xchg
into
fwait
add
xchg
cmps
xor
fwait
add
xchg
cs
or
sub
jns
(bad)
adc
sbb
dec
cs
mov
sbb
xchg
iret
push
xchg
cmp
mov
mov
cmp
xor
std
xchg
cmp
clc
dec
scas
jns
or
pop
jo
and
push
imul
mov
cmp
(bad)
sbb
mov
or
jb
jl
xlat
sub
mov
mov
cmp
hlt
inc
or
bound
push
adc
add
adc
mov
mov
cmp
cmp
imul
nop
adc
add
adc
mov
mov
cmp
add
aad
sbb
adc
cs
or
out
shl
ins
movs
(bad)
xor
push
or
adc
or
jg
xor
sbb
fucomip
call
call
mov
scas
inc
sub
call
imul
in
sbb
aaa
mov
push
loop
mov
shr
sub
dec
scas
mov
push
pop
push
xchg
xchg
and
inc
xor
fwait
sbb
push
xor
mov
sub
loop
adc
in
imul
xchg
mov
sub
loop
adc
xchg
imul
mov
sub
xchg
adc
out
mov
mov
cs
adc
jecxz
jge
(bad)
in
jbe
sbb
dec
cs
mov
sub
xor
sbb
adc
add
and
mov
in
adc
aaa
mov
cmps
sub
sub
jb
dec
mov
jmp
adc
outs
movs
adc
in
dec
or
mov
mov
imul
inc
xor
sbb
cmps
movs
(bad)
xchg
imul
fdiv
hlt
(bad)
arpl
pop
sbb
cmps
movs
fist
sub
je
arpl
pop
sbb
cmps
movs
aad
imul
xchg
cmps
sub
push
sbb
push
push
sbb
enter
dec
sahf
(bad)
adc
adc
mov
cs
aam
adc
mov
cs
aam
adc
mov
inc
aam
adc
mov
and
sub
mov
dec
or
or
xor
xchg
or
sbb
jo
pop
fwait
mov
mov
mov
sub
call
scas
js
sub
call
scas
cmp
sub
call
scas
cmp
sub
call
pop
mov
dec
or
cmp
cmp
push
xchg
inc
mov
shl
stos
mov
(bad)
xor
push
or
and
fisttp
cmp
or
and
ror
cmp
pop
shl
xor
(bad)
xor
xor
dec
enter
loopne
push
es
adc
xor
mov
sub
jmp
sahf
js
mov
cmp
sub
xchg
enter
sub
cmp
mov
xchg
mov
cmps
xchg
push
sar
pop
sbb
enter
sub
mov
mov
or
xchg
adc
fwait
add
xchg
outs
mov
add
(bad)
test
das
cmp
(bad)
xchg
repnz
loopne
xor
in
inc
sub
fidivr
loop
aaa
rcl
mov
call
cmps
test
xlat
pop
scas
lds
mov
test
or
mov
imul
mov
daa
dec
xchg
xchg
and
inc
dec
xor
cmps
sub
sub
in
into
cs
cs
dec
std
(bad)
xchg
repnz
sbb
adc
adc
mov
jmp
mov
leave
add
sub
add
or
sub
out
mov
adc
scas
js
sub
mov
adc
scas
jns
sub
xor
(bad)
xor
push
or
pop
xor
dec
enter
loopne
sar
mov
popf
xor
mov
sub
xor
imul
movs
jmp
xor
mov
mov
mov
rcl
xchg
mov
adc
popf
add
xchg
cs
or
cs
mov
or
cs
or
cs
mov
or
sub
jns
and
shl
mov
or
scas
clc
add
pop
sbb
mov
call
or
mov
cs
mov
sub
mov
mov
add
sbb
in
xchg
sbb
adc
cs
cmp
push
or
aaa
mov
cmp
or
xchg
adc
fwait
add
xchg
outs
mov
add
sbb
in
xchg
sbb
adc
cs
cmp
push
or
aaa
mov
mov
adc
int
data16
mov
adc
mov
mov
adc
popf
add
xchg
outs
mov
add
shl
cmps
xor
push
or
fisub
sbb
lea
cmp
fist
sub
mov
daa
lahf
xchg
xchg
and
sbb
cmps
movs
rcl
adc
mov
cs
mov
sub
fisub
sbb
lea
cmp
rcl
sub
mov
daa
lahf
xchg
xchg
and
sbb
cmps
movs
rcl
pop
sbb
lea
mov
xchg
jl
sbb
lea
mov
xchg
not
(bad)
in
not
inc
dec
aas
movs
paddsb
scas
(bad)
cmps
sub
movs
jnp
imul
inc
dec
aas
movs
sbb
cmps
sub
pop
sbb
sbb
cmps
adc
cs
or
xchg
retf
call
mov
mov
sub
pop
sbb
cmps
movs
(bad)
xchg
imul
fdiv
hlt
(bad)
arpl
pop
sbb
cmps
movs
fist
sub
je
arpl
pop
sbb
cmps
movs
aad
imul
xor
fisttp
cmp
push
add
xchg
mov
cmp
cld
sub
xchg
iret
cs
sub
mov
retf
sbb
xchg
mov
outs
cmp
cmp
loope
fnstcw
sub
pop
sbb
cmps
movs
(bad)
xchg
imul
fdiv
hlt
(bad)
arpl
pop
sbb
cmps
movs
fist
sub
je
arpl
pop
sbb
cmps
movs
aad
imul
sbb
sti
sub
in
sub
aaa
mov
mov
mov
xor
aaa
mov
leave
not
pop
rcl
and
mov
in
xor
aaa
mov
dec
mov
loopne
push
shl
mov
sbb
aaa
mov
push
loope
inc
shr
sbb
dec
or
xchg
into
popf
add
xchg
outs
mov
add
fwait
add
xchg
mov
or
cmps
xor
je
or
bound
lea
push
adc
fwait
iret
xchg
mov
cmps
movs
adc
fisttp
cmp
dec
xor
imul
cmp
xchg
mov
dec
or
cdq
xchg
cld
scas
mov
shr
aas
in
iret
cs
sub
in
sub
aaa
mov
mov
mov
xor
aaa
mov
leave
not
pop
rcl
and
mov
in
xor
aaa
mov
dec
mov
loopne
push
shl
mov
sub
aaa
or
inc
in
mov
sbb
dec
cs
aam
adc
mov
cs
aam
adc
mov
loopne
into
fwait
add
xchg
outs
mov
add
or
xchg
into
je
or
bound
lea
push
adc
fwait
iret
pusha
mov
adc
scas
inc
cld
sub
sbb
cmps
movs
adc
or
rcl
cmp
mov
xchg
imul
mov
adc
scas
js
sub
mov
adc
scas
jns
sub
and
ror
cmp
or
pop
xor
dec
enter
loopne
push
cmps
(bad)
adc
cmp
ficomp
xchg
imul
sbb
mov
mov
sub
call
scas
js
sub
call
scas
jns
sub
and
ror
cmp
or
pop
xor
dec
enter
loopne
push
cmps
(bad)
adc
dec
sub
(bad)
mov
sbb
aaa
mov
clc
adc
fstp
lea
mov
xchg
outs
mov
add
out
xchg
into
popf
add
xchg
outs
mov
add
or
xchg
into
fwait
add
xchg
outs
mov
add
js
sub
mov
adc
pop
mov
dec
or
and
sbb
daa
mov
xchg
xchg
imul
sbb
mov
mov
adc
or
ficom
or
mov
cs
aam
adc
mov
cs
aam
adc
mov
loopne
into
fwait
add
xchg
outs
mov
add
or
xchg
into
je
or
bound
lea
push
adc
fwait
iret
sar
or
sbb
cmps
movs
adc
mov
cs
aam
adc
mov
cs
aam
adc
mov
loopne
into
fwait
add
xchg
outs
mov
add
or
xchg
into
je
or
bound
lea
push
adc
fwait
iret
ret
mov
adc
scas
inc
loop
pop
sbb
cmps
movs
adc
or
rcl
mov
cmps
imul
mov
adc
scas
js
sub
mov
adc
scas
jns
sub
and
ror
cmp
or
pop
xor
dec
enter
loopne
push
cmps
(bad)
adc
cmp
fnsave
xchg
imul
sbb
mov
mov
adc
or
(bad)
xchg
mov
sbb
dec
cs
aam
adc
mov
cs
aam
adc
mov
loopne
into
fwait
add
xchg
outs
mov
add
or
xchg
into
je
or
bound
lea
push
adc
fwait
iret
inc
mov
adc
scas
(bad)
loopne
pop
sbb
cmps
movs
adc
or
rcl
mov
cmps
imul
mov
adc
scas
js
sub
mov
adc
scas
jns
sub
and
ror
cmp
or
pop
xor
dec
enter
loopne
push
cmps
(bad)
adc
mov
daa
out
xor
xchg
imul
sbb
mov
mov
adc
or
(bad)
nop
mov
sbb
dec
cs
aam
adc
mov
cs
aam
adc
mov
loopne
into
fwait
add
xchg
outs
mov
add
or
xchg
into
je
or
bound
lea
push
adc
fwait
iret
outs
mov
adc
scas
inc
out
pop
sbb
cmps
movs
adc
or
rcl
mov
mov
sub
adc
jmp
mov
imul
mov
adc
scas
jns
sub
and
ror
cmp
or
pop
xor
dec
enter
loopne
push
cmps
(bad)
adc
dec
xor
(bad)
mov
sbb
aaa
mov
js
or
sbb
lea
mov
add
out
xchg
into
popf
add
xchg
outs
mov
add
or
xchg
into
fwait
add
xchg
outs
mov
add
js
sub
mov
adc
pop
mov
dec
or
and
sbb
inc
and
mov
or
add
adc
mov
mov
cmp
(bad)
mov
adc
scas
mov
sub
cmp
push
or
and
fisttp
cmp
or
and
ror
cmp
or
inc
aam
adc
mov
mov
aam
scas
fdiv
je
arpl
js
aad
call
sub
sbb
cmps
movs
adc
or
rcl
mov
cmps
imul
mov
adc
scas
js
sub
mov
adc
scas
jns
sub
and
ror
cmp
or
pop
xor
dec
enter
loopne
push
cmps
(bad)
adc
cmp
fistp
xchg
imul
sbb
mov
mov
adc
or
inc
xchg
xor
mov
cs
aam
adc
mov
cs
aam
adc
mov
loopne
into
fwait
add
xchg
outs
mov
add
or
xchg
into
je
or
bound
lea
push
adc
fwait
iret
push
mov
mov
add
xor
cs
xlat
mov
adc
cs
sub
cmp
push
or
and
fisttp
cmp
or
and
ror
cmp
or
inc
aam
adc
mov
mov
aam
scas
fdiv
je
arpl
js
aad
sbb
in
pop
sbb
cmps
movs
adc
or
rcl
mov
cmps
imul
mov
adc
scas
js
sub
mov
adc
scas
jns
sub
and
ror
cmp
or
pop
xor
dec
enter
loopne
push
cmps
(bad)
adc
cmp
fcomp
xchg
imul
sbb
mov
mov
adc
or
(bad)
xchg
xor
mov
cs
aam
adc
mov
cs
aam
adc
mov
loopne
into
fwait
add
xchg
outs
mov
add
or
xchg
into
je
or
bound
lea
push
adc
fwait
iret
outs
mov
adc
scas
inc
in
pop
sbb
cmps
movs
adc
leave
scas
mov
sub
cmp
push
or
and
fisttp
cmp
or
and
ror
cmp
or
inc
aam
adc
mov
mov
aam
scas
fdiv
je
arpl
js
aad
cs
adc
(bad)
mov
adc
aaa
mov
cmps
sub
push
add
xchg
push
mov
adc
test
inc
xor
fwait
sbb
push
xor
mov
sub
loop
adc
in
imul
xchg
mov
sub
loop
adc
xchg
imul
mov
sub
mov
sub
and
fisttp
cmp
or
and
ror
cmp
or
inc
aam
adc
mov
in
into
je
or
bound
lea
push
lea
cmp
lea
cmp
lea
cmp
jmp
jge
mov
mov
or
and
fisttp
cmp
or
and
ror
cmp
or
inc
aam
adc
mov
mov
aam
scas
fdiv
je
arpl
js
aad
cs
adc
(bad)
mov
adc
aaa
mov
cmp
or
inc
aam
adc
mov
cs
aam
adc
mov
mov
aam
adc
mov
mov
aam
scas
fdiv
je
arpl
or
and
sbb
mov
sub
mov
sub
adc
jmp
mov
imul
mov
adc
scas
js
sub
adc
jmp
(bad)
retf
imul
mov
adc
pop
mov
dec
or
xor
or
aad
cs
xchg
mov
xchg
or
adc
aaa
mov
cmps
sub
push
add
xchg
test
xor
cmp
sub
xchg
iret
cs
sub
in
sub
aaa
mov
mov
mov
xor
aaa
mov
leave
not
pop
rcl
and
mov
in
xor
aaa
mov
dec
mov
loopne
push
shl
mov
adc
aaa
mov
cmp
or
inc
aam
adc
mov
cs
aam
adc
mov
loopne
into
fwait
add
xchg
outs
mov
add
pop
mov
dec
or
mov
es
mov
es
mov
sub
xchg
dec
cs
aam
adc
mov
cs
aam
adc
mov
loopne
into
fwait
add
xchg
outs
mov
add
or
xchg
into
je
or
bound
lea
push
adc
fwait
iret
pusha
mov
adc
scas
inc
cld
sub
sbb
cmps
movs
adc
mov
or
xchg
into
popf
add
xchg
outs
mov
add
fwait
add
xchg
outs
mov
add
loopne
into
fwait
add
xchg
outs
mov
add
in
into
je
or
bound
scas
(bad)
adc
sbb
cmp
or
xchg
mov
xchg
or
adc
aaa
mov
cmp
or
and
fisttp
cmp
or
and
ror
cmp
or
and
ror
cmp
or
pop
xor
dec
enter
loopne
push
mov
xchg
iret
cs
fwait
iret
test
(bad)
adc
movs
adc
fisttp
cmp
sub
out
mov
xchg
leave
scas
jecxz
sub
cmp
sub
xchg
iret
cs
sub
in
sub
aaa
mov
mov
mov
xor
aaa
mov
leave
not
pop
rcl
and
mov
in
xor
aaa
mov
dec
mov
loopne
push
shl
mov
adc
aaa
mov
cmp
or
inc
aam
adc
mov
cs
aam
adc
mov
loopne
into
fwait
add
xchg
outs
mov
add
pop
mov
dec
or
mov
es
mov
es
mov
sub
xchg
dec
cs
aam
adc
mov
cs
aam
adc
mov
loopne
into
fwait
add
xchg
outs
mov
add
or
xchg
into
je
or
bound
lea
push
adc
fwait
iret
pusha
mov
adc
scas
inc
cld
sub
sbb
cmps
movs
adc
fisttp
cmp
sub
lds
sub
cmp
or
fnstcw
sub
pop
sbb
cmps
movs
(bad)
xchg
imul
fdiv
hlt
(bad)
arpl
pop
sbb
cmps
movs
fist
sub
je
arpl
pop
sbb
cmps
movs
aad
imul
sbb
dec
or
xchg
into
popf
add
xchg
outs
mov
add
fwait
add
xchg
outs
mov
add
jns
sub
pop
xor
dec
enter
loopne
push
lea
cmp
lea
cmp
lea
cmp
int3
adc
(bad)
repz
popf
add
xchg
outs
mov
add
out
xchg
into
popf
add
xchg
outs
mov
add
or
xchg
into
fwait
add
xchg
outs
mov
add
js
sub
mov
adc
pop
mov
dec
or
and
sbb
inc
and
mov
or
add
adc
mov
mov
cmp
xchg
outs
mov
add
js
sub
call
scas
js
sub
adc
jmp
(bad)
retf
imul
mov
adc
pop
mov
dec
or
push
aad
sbb
xor
js
aad
test
cmps
mov
sbb
cmps
movs
adc
mov
cs
aam
adc
mov
cs
aam
adc
mov
mov
aam
adc
mov
mov
aam
scas
fdiv
je
arpl
or
and
sbb
adc
add
xor
cld
inc
in
xor
mov
adc
cmp
fidivr
xchg
dec
call
mov
mov
sub
pop
sbb
cmps
movs
(bad)
xchg
imul
fdiv
hlt
(bad)
arpl
pop
sbb
cmps
movs
fist
sub
je
arpl
pop
sbb
cmps
movs
aad
imul
sbb
dec
or
xchg
into
popf
add
xchg
outs
mov
add
fwait
add
xchg
outs
mov
add
jns
sub
pop
xor
dec
enter
loopne
push
lea
cmp
lea
cmp
lea
cmp
int3
adc
(bad)
sti
inc
popf
add
xchg
outs
mov
add
out
xchg
into
popf
add
xchg
outs
mov
add
or
xchg
into
fwait
add
xchg
outs
mov
add
js
sub
mov
adc
pop
mov
dec
or
and
sbb
inc
and
mov
or
add
adc
mov
mov
cmp
xchg
outs
mov
add
js
sub
call
scas
js
sub
adc
jmp
(bad)
retf
imul
mov
adc
pop
mov
dec
or
push
aad
sbb
xor
js
aad
test
cmps
mov
sbb
cmps
movs
adc
mov
cs
aam
adc
mov
cs
aam
adc
mov
mov
aam
adc
mov
mov
aam
scas
fdiv
je
arpl
or
and
call
or
mov
mov
cmp
xor
mov
adc
ins
enter
jle
or
sbb
mov
mov
mov
jl
xlat
sub
mov
mov
cmp
hlt
inc
or
bound
push
adc
add
adc
mov
mov
cmp
cmp
imul
nop
adc
add
adc
mov
mov
cmp
popf
add
xchg
outs
mov
add
js
sub
call
scas
jns
sub
and
ror
cmp
or
and
sub
mov
dec
or
mov
or
call
mov
in
imul
mov
adc
scas
js
sub
mov
adc
scas
jns
sub
and
ror
cmp
or
pop
xor
dec
enter
loopne
push
cmps
(bad)
adc
mov
cmps
mov
xchg
xchg
imul
sbb
mov
mov
sub
and
fisttp
cmp
or
and
ror
cmp
or
and
ror
cmp
or
pop
xor
dec
enter
loopne
push
xor
xchg
iret
cs
fwait
iret
scas
xchg
cmp
mov
mov
cmp
xchg
outs
mov
add
out
xchg
into
popf
add
xchg
outs
mov
add
or
xchg
into
fwait
add
xchg
outs
mov
add
loopne
into
fwait
add
xchg
outs
mov
add
or
xchg
into
je
or
bound
scas
(bad)
adc
sbb
cmp
or
pop
cmp
imul
sbb
mov
jmp
fimul
aaa
mov
sbb
mov
mov
mov
jl
xlat
sub
mov
mov
cmp
hlt
inc
or
bound
push
adc
add
adc
mov
mov
cmp
cmp
imul
nop
adc
add
adc
mov
mov
cmp
popf
add
xchg
outs
mov
add
js
sub
call
scas
jns
sub
and
ror
cmp
or
and
sub
mov
dec
or
mov
or
call
adc
in
imul
in
sub
aaa
mov
fnstcw
sub
pop
sbb
cmps
movs
(bad)
xchg
imul
fdiv
hlt
(bad)
arpl
pop
sbb
cmps
movs
fist
sub
je
arpl
pop
sbb
cmps
movs
aad
imul
sbb
dec
cs
aam
adc
mov
cs
aam
adc
mov
loopne
into
fwait
add
xchg
outs
mov
add
or
xchg
into
je
or
bound
lea
push
adc
fwait
iret
pusha
mov
adc
scas
inc
cld
sub
sbb
cmps
movs
adc
fisttp
cmp
cs
loopne
iret
xchg
enter
sub
cmp
or
fnstcw
sub
pop
sbb
cmps
movs
(bad)
xchg
imul
fdiv
hlt
(bad)
arpl
pop
sbb
cmps
movs
fist
sub
je
arpl
pop
sbb
cmps
movs
aad
imul
sbb
dec
or
xchg
into
popf
add
xchg
outs
mov
add
or
xchg
into
fwait
add
xchg
outs
mov
add
jns
sub
pop
xor
dec
enter
loopne
push
cmps
(bad)
adc
rol
cmp
(bad)
mov
adc
aaa
mov
cmp
or
inc
aam
adc
mov
cs
aam
adc
mov
loopne
into
fwait
add
xchg
outs
mov
add
pop
mov
dec
or
and
sbb
daa
and
xchg
imul
sbb
mov
mov
sub
adc
jmp
mov
imul
mov
adc
scas
jns
sub
and
ror
cmp
or
and
sub
mov
dec
or
aad
shl
fnstenv
add
xor
popf
add
xchg
outs
mov
add
js
sub
mov
adc
scas
jns
sub
and
ror
cmp
or
and
sub
mov
dec
or
aad
sbb
stc
sub
sbb
cmps
movs
adc
fisttp
cmp
popf
add
xchg
outs
mov
add
scas
js
sub
mov
adc
scas
js
sub
mov
adc
scas
js
sub
mov
adc
pop
cmp
imul
mov
xchg
iret
cs
sub
in
sub
aaa
mov
mov
mov
xor
aaa
mov
leave
(bad)
pop
loopne
rcl
and
mov
in
xor
aaa
mov
dec
mov
shl
mov
sbb
daa
(bad)
mov
adc
fwait
mov
cmps
pop
push
lea
clc
cmp
cmp
cs
or
mov
es
push
lea
clc
cmp
cmp
cs
or
mov
cmps
(bad)
lea
mov
shl
mov
or
and
fisttp
cmp
or
and
ror
cmp
or
and
ror
cmp
or
pop
xor
dec
enter
loopne
push
mov
or
sbb
(bad)
mov
sbb
daa
(bad)
mov
adc
mov
or
mov
cmps
or
out
mov
in
imul
mov
adc
scas
js
sub
call
scas
js
sub
mov
adc
scas
js
sub
mov
adc
pop
mov
dec
or
and
les
xchg
imul
sbb
mov
mov
sub
shl
sub
mov
jg
or
and
fisttp
cmp
or
and
ror
cmp
or
and
ror
cmp
or
pop
xor
dec
enter
loopne
push
mov
or
sbb
(bad)
mov
adc
aaa
mov
cmps
sub
test
mov
in
xchg
outs
mov
add
scas
jns
sub
and
ror
cmp
or
and
ror
cmp
or
pop
xor
dec
enter
loopne
shr
ins
std
call
mov
mov
sub
pop
sbb
cmps
movs
(bad)
xchg
imul
fdiv
hlt
(bad)
arpl
pop
sbb
cmps
movs
fist
sub
je
arpl
pop
sbb
cmps
movs
aad
imul
lea
cmp
cs
das
cmp
dec
adc
inc
in
xor
mov
adc
ins
pop
xchg
mov
sbb
dec
or
scas
into
popf
add
xchg
outs
mov
add
fwait
add
xchg
outs
mov
add
or
xchg
into
fwait
add
xchg
outs
mov
add
or
xchg
into
hlt
inc
or
bound
push
dec
ins
shr
cmp
or
sbb
push
xor
mov
sub
loop
adc
in
imul
xchg
mov
sub
loop
adc
xchg
imul
mov
sub
mov
mov
cs
adc
sbb
out
adc
in
imul
in
sbb
aaa
mov
sbb
mov
mov
in
xchg
outs
mov
sbb
popf
add
xchg
outs
mov
add
loop
into
fwait
add
xchg
outs
mov
add
or
xchg
into
fwait
add
xchg
outs
mov
add
or
xchg
into
hlt
inc
or
bound
push
dec
ins
shr
cmp
or
inc
xor
fwait
sbb
push
xor
mov
sub
loop
adc
in
imul
xchg
mov
sub
loop
adc
xchg
imul
mov
sub
mov
mov
cs
adc
cs
adc
inc
in
xor
mov
adc
ins
pop
xchg
mov
sbb
dec
cs
aam
adc
mov
cs
or
inc
aam
adc
mov
mov
aam
adc
mov
mov
aam
rcr
jae
hlt
(bad)
arpl
scas
jle
or
sbb
lods
shl
jb
jl
xlat
sub
mov
mov
cmp
hlt
inc
or
bound
push
adc
add
adc
mov
mov
cmp
cmp
imul
nop
adc
add
adc
mov
mov
cmp
call
mov
and
fwait
daa
lock
xchg
imul
sbb
mov
jmp
ficom
mov
sbb
mov
mov
in
xchg
outs
mov
and
add
xchg
outs
mov
sbb
outs
mov
add
or
xchg
into
fwait
add
xchg
outs
mov
add
or
xchg
into
hlt
inc
or
bound
push
dec
ins
shr
cmp
cld
inc
in
xor
popf
xchg
iret
cs
sub
in
sub
aaa
mov
mov
mov
xor
aaa
mov
leave
not
pop
rcl
and
mov
in
xor
aaa
mov
dec
mov
loopne
push
shl
mov
sbb
aad
sbb
stc
sub
sbb
cmps
movs
adc
fisttp
cmp
dec
adc
sub
sbb
fmulp
int3
xchg
adc
mov
(bad)
sub
push
cmp
int3
dec
add
adc
xchg
adc
push
adc
cs
in
or
xor
jmp
idiv
aad
add
xor
lock
in
xor
into
xchg
call
rol
in
not
inc
dec
xor
or
xchg
imul
inc
xor
sbb
cmps
movs
(bad)
xchg
imul
loop
fwait
rol
sub
popa
or
aaa
mov
mov
mov
sub
mov
lea
cmp
fs
div
inc
in
xor
add
shl
(bad)
inc
sub
fwait
sbb
jbe
stos
xchg
jbe
add
adc
mov
mov
cmp
cmp
ins
xor
mov
mov
cmp
cli
inc
in
xor
out
imul
in
sub
mov
xchg
push
xchg
movs
out
or
mov
xchg
jmp
xchg
sub
mov
into
sbb
cmp
(bad)
xchg
xchg
cs
repz
inc
rcl
nop
xchg
cmps
and
mov
loope
mov
push
jg
shl
outs
mov
in
int
xlat
(bad)
hlt
push
stos
mov
xlat
call
jbe
in
imul
out
adc
ins
and
repz
and
adc
neg
ins
or
xlat
sub
push
aad
jo
push
xchg
in
push
in
ins
mov
xlat
outs
int
adc
in
sbb
ins
mov
outs
mov
adc
int
hlt
push
hlt
jmp
mov
pop
lea
and
sub
adc
hlt
push
xlat
enter
xchg
in
push
ins
xchg
jae
xchg
out
dec
imul
sub
jecxz
or
or
stos
push
out
push
xchg
repz
dec
imul
in
adc
jb
xchg
leave
imul
out
ss
push
cvttps2pi
mov
hlt
in
stc
xchg
xlat
push
mov
xchg
jmp
or
xchg
or
push
in
xchg
repz
jae
and
sub
adc
hlt
push
push
xchg
test
imul
ins
xlat
enter
xchg
in
xchg
in
jmp
xchg
in
xlat
(bad)
mov
xlat
jmp
push
adc
adc
in
mov
xlat
out
jae
mov
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
dec
or
les
(bad)
fdiv
cmp
ins
iret
shl
in
mov
ins
mov
mov
mov
sbb
outs
bound
imul
jno
inc
pop
xor
cdq
cmc
outs
lods
in
rcl
sbb
imul
xchg
push
push
and
push
sbb
jns
sub
xchg
xor
ins
or
push
xor
xchg
mov
rcl
inc
sub
(bad)
push
xchg
or
outs
mov
adc
xor
loop
xchg
dec
mov
shl
push
scas
xor
push
ins
mov
xlat
out
jns
mov
mov
(bad)
sub
mov
sub
sub
mov
xor
imul
mov
fisttp
nop
shl
addr16
xchg
lods
jo
add
jns
imul
rol
dec
or
nop
xor
dec
inc
xchg
jae
or
inc
imul
outs
push
push
mov
lods
jo
push
bound
ins
xchg
jb
pop
lods
jo
pop
stos
ds
xchg
push
imul
mov
and
jne
jecxz
mov
jecxz
in
push
adc
xlat
dec
inc
dec
adc
push
push
popa
lea
sub
ror
xor
mov
lea
jo
idiv
jb
inc
in
or
jmp
mov
arpl
hlt
push
lahf
fsub
stc
jns
xor
cld
fsubr
arpl
xor
cld
push
mov
or
push
fs
adc
les
enter
or
lods
fmul
nop
(bad)
dec
sbb
sbb
movs
inc
fsubr
hlt
pusha
lahf
cld
hlt
test
mov
pop
cld
or
add
mov
cmp
pop
cld
mov
iret
mov
mov
inc
mov
dec
rol
pop
mov
inc
or
pop
cld
repz
daa
dec
rcl
sub
inc
imul
or
push
dec
or
les
(bad)
fdiv
cmp
pop
in
std
fdivp
in
mov
inc
out
out
push
mov
mov
inc
xor
imul
retf
dec
test
clc
nop
shr
xlat
into
cmp
or
cmc
mov
mov
shr
or
fisubr
enter
scas
ja
or
or
mov
and
rcl
mov
fwait
sbb
sets
cdq
imul
sub
arpl
stos
adc
lods
js
sub
in
adc
jp
retf
jns
or
mov
into
push
in
stc
xchg
xlat
jne
cmp
jne
adc
cmp
add
mov
push
in
out
(bad)
or
add
in
stc
xchg
xlat
sbb
mov
push
imul
mov
jecxz
xchg
jns
dec
xchg
mov
xor
push
xchg
stc
inc
lods
xchg
mov
cwde
ins
sub
repz
or
dec
imul
in
push
fdivp
retf
jae
loop
js
sbb
mov
or
adc
xchg
js
sub
push
jecxz
dec
or
lahf
or
out
xor
jecxz
adc
repz
push
push
cs
xchg
ficom
mov
sub
xchg
xor
loop
lea
xlat
mov
sahf
cli
push
sub
xchg
mov
inc
and
jb
iret
inc
and
jb
mov
out
jmp
repnz
fbstp
js
shl
xchg
test
iret
inc
and
in
lea
icebp
mov
xor
inc
push
mov
daa
inc
pop
jo
mov
jb
mov
push
div
and
in
adc
sub
arpl
fdiv
sub
cmp
in
retf
and
xchg
fcomp
call
sub
sub
not
not
xlat
xchg
dec
xchg
sub
or
inc
movs
xchg
cwde
das
xchg
push
shr
jns
xlat
sahf
mov
xchg
or
or
xlat
sbb
scas
cdq
in
test
int3
xchg
xlat
mov
xchg
push
pop
in
ror
hlt
push
loopne
push
xchg
js
sub
mov
xlat
mov
clc
imul
and
leave
inc
(bad)
in
push
mov
mov
sub
stc
xchg
xlat
sbb
retf
cld
jno
imul
das
or
adc
push
jecxz
fbstp
and
or
ins
or
xchg
or
mov
jnp
retf
les
push
push
or
add
imul
ds
dec
or
repz
in
ss
sub
dec
cmp
xor
aad
stc
inc
nop
xchg
repz
adc
loop
fcom
mov
sub
jecxz
sbb
arpl
dec
or
sahf
inc
mov
stc
mov
jecxz
in
stc
xchg
xlat
cdq
(bad)
xchg
mov
push
imul
sub
(bad)
push
sub
adc
cwde
pop
je
outs
js
mov
or
sub
clc
xchg
iret
xchg
jae
sub
push
scas
sub
not
out
and
(bad)
std
rol
mov
jmp
sub
push
pop
test
out
mov
xchg
add
mov
mov
loop
add
(bad)
jo
sub
sbb
inc
cli
mov
or
dec
push
cmp
push
push
push
inc
jmp
loopne
stc
pop
cmps
jnp
push
adc
mov
mov
imul
cmp
push
push
movs
jmp
jp
ret
push
cmp
push
popf
mov
das
jbe
loope
rol
sbb
ret
mov
stc
das
jbe
out
rol
sbb
ret
cmps
test
push
jbe
out
loop
add
(bad)
jno
jmp
fucomp
mov
stc
das
jbe
cmc
push
fadd
fucomp
mov
stc
das
jbe
jmp
jmp
fucomp
mov
stc
and
rol
sbb
ret
cmps
test
push
shl
imul
xchg
fstp
aas
sti
push
rol
push
dec
push
jp
out
xchg
add
in
rol
add
test
xchg
lods
sbb
imul
stc
jmp
fucomp
xchg
test
das
jbe
in
xlat
test
adc
mov
stc
imul
ret
mov
stc
es
clc
push
lahf
test
mov
xchg
push
rol
push
dec
push
popf
mov
dec
shl
jle
add
stc
pop
es
push
mov
stc
pop
out
add
pop
pusha
jp
fdiv
stc
push
sub
fdivr
jecxz
add
jmp
push
inc
sti
sub
pop
leave
call
rol
stc
cli
adc
fwait
and
inc
sbb
add
add
push
rol
xchg
mov
xchg
sub
xchg
dec
push
cli
dec
dec
sbb
popa
mov
mov
out
sbb
jns
shl
sti
pushf
stc
mov
push
dec
push
mov
mov
xchg
repz
outs
or
mov
dec
push
dec
in
mov
xlat
dec
mov
xchg
iret
outs
mov
loop
sub
jg
push
push
pop
mov
push
dec
or
nop
ins
lock
repz
ins
mov
repz
sub
ret
jne
mov
jecxz
mov
or
imul
mov
xchg
bound
sub
pop
mov
sub
cwde
nop
jns
push
in
ins
xchg
mov
pop
mov
(bad)
out
push
sub
frstor
dec
or
nop
fmul
dec
sbb
xchg
sub
sub
(bad)
push
cwde
xchg
push
pop
mov
xlat
ins
mov
push
dec
or
sub
inc
(bad)
ins
mov
push
sub
shl
xchg
jae
xlat
repz
pop
ins
cmps
(bad)
in
or
ins
mov
movs
push
mov
sbb
lock
mov
push
adc
jns
js
addr16
jl
sbb
xlat
in
rcl
icebp
jae
(bad)
cs
repz
outs
push
cs
jl
nop
adc
hlt
pop
sbb
sbb
in
in
xchg
xlat
xor
outs
nop
jns
jmp
xchg
xchg
stc
out
cdq
dec
and
xlat
mov
loop
nop
int
inc
push
cmp
push
sub
arpl
sbb
cdq
test
and
int
and
ins
loop
push
push
lods
inc
dec
mov
gs
push
and
pop
push
pop
sahf
dec
push
(bad)
int
and
repz
sub
sbb
sbb
retf
xor
push
cwde
rcl
outs
adc
add
shl
mov
(bad)
push
mov
xchg
xchg
lahf
dec
push
mov
mov
jne
imul
popa
jo
dec
lods
jo
push
cwde
push
push
ins
inc
repnz
loop
xor
imul
sub
mov
xchg
jge
repz
and
repnz
cs
jle
xchg
rol
popa
and
add
aad
outs
or
pop
push
test
lahf
das
test
lahf
das
test
pop
xor
test
pop
push
test
lahf
cmpps
fwait
mov
rcr
test
sub
test
fwait
jp
dec
test
ret
cs
fsub
pop
xor
test
pop
sbb
or
adc
out
adc
push
mov
clc
pop
(bad)
pop
cs
in
sub
test
test
sbb
add
dec
fwait
sbb
mov
pusha
sbb
cwde
in
hlt
jmp
mov
or
ficomp
in
cmps
xchg
xlat
sub
shl
repz
adc
in
sbb
in
or
dec
out
stos
push
mov
jecxz
out
dec
and
or
xchg
push
bound
cmp
mov
mov
xchg
rol
push
mov
(bad)
mov
movs
cmp
imul
xor
adc
ins
or
call
dec
inc
out
jl
xor
sbb
in
jns
fnstenv
sar
ss
stc
test
out
xor
call
push
ins
or
xlat
leave
push
jecxz
pop
lock
sbb
push
jg
int
mov
push
mov
mov
cmps
or
or
jecxz
xlat
in
stc
xchg
fstp
xor
xor
fcomi
sbb
mov
push
sub
ss
cwde
cli
mov
push
sub
out
lock
push
fwait
neg
sbb
xor
test
stc
ss
out
push
push
iret
sbb
ins
sub
fdiv
mov
cwde
mov
sub
add
adc
scas
mov
mov
xchg
rcl
f2xm1
jmp
xchg
adc
mov
and
xchg
test
aas
xchg
test
daa
adc
xor
inc
repz
mul
and
rol
or
fcom
out
jb
jb
pop
(bad)
sub
add
xchg
test
and
mov
ds
sub
movs
test
daa
adc
xor
and
or
test
jmpw
gs
xor
and
in
xor
xor
adc
je
xchg
test
dec
mov
test
and
fs
mov
ds
outs
ins
add
inc
xchg
test
jnp
cli
xor
mov
test
push
and
test
fcomi
lods
mov
sbb
sahf
fcom
cwde
add
push
or
mov
mov
loop
jmp
stos
add
stos
sub
scas
(bad)
or
add
stos
sub
cmps
movs
test
and
fs
fst
daa
adc
cmp
(bad)
or
add
mov
mov
xchg
test
daa
mov
(bad)
movs
xchg
test
daa
push
mov
pop
(bad)
or
cmp
sub
pop
stos
mov
je
adc
je
icebp
test
cmc
pop
stos
scas
xor
inc
xchg
adc
xlat
ret
shl
retf
sub
mov
xchg
sti
or
mov
mov
mov
and
mov
iret
imul
add
retf
(bad)
adc
adc
lahf
mov
not
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
test
mov
imul
xchg
stc
ins
mov
xlat
ins
mov
jge
cmp
mov
lods
adc
dec
or
call
xchg
xlat
ja
push
leave
xlat
out
mov
push
fist
mov
xlat
dec
sub
push
xor
mov
outs
test
jo
leave
pop
dec
iret
adc
push
add
test
and
dec
mov
mov
adc
adc
retf
nop
adc
test
xchg
jae
push
or
sub
push
mov
sub
sub
rcl
xor
movs
cmp
adc
xlat
ins
or
mov
cwde
cbw
sub
xor
xchg
dec
adc
sub
stc
push
iret
push
push
and
dec
push
arpl
cs
mov
pop
arpl
in
jns
repz
mov
push
sbb
or
(bad)
in
test
mov
inc
repz
dec
xchg
push
push
inc
push
lods
js
push
cdq
rcl
in
jns
repz
inc
dec
or
loop
idiv
adc
xchg
repz
mov
imul
sbb
jecxz
loop
adc
cwde
je
sub
retf
nop
outs
push
imul
jno
xor
jae
jle
pop
imul
xchg
jae
popa
sbb
ss
cwde
dec
hlt
dec
or
mov
stc
or
xchg
add
xchg
adc
mov
loop
push
scas
es
stos
or
test
jb
jp
ret
es
dec
enter
xchg
mov
and
pop
xor
xchg
xor
sbb
call
inc
sbb
retf
adc
ficomp
in
repz
bound
sub
push
lock
and
dec
ins
test
sub
cmp
push
shr
sahf
push
shr
jns
xlat
add
push
or
mov
sbb
lods
in
rcl
xor
loop
xchg
xchg
adc
in
xchg
sbb
ins
sub
retf
xchg
dec
or
mov
icebp
xchg
push
nop
jns
pop
adc
or
stc
test
or
and
ss
sub
in
mov
rcl
scas
ins
or
xchg
out
xchg
push
mov
pop
mov
cld
and
push
mov
into
stc
retf
push
or
mov
jecxz
dec
or
cdq
je
xchg
sti
lods
js
inc
mov
fdivp
aad
stc
cdq
sub
int
(bad)
push
push
ucomiss
data16
mov
cwde
pop
arpl
xchg
or
push
xor
sub
lods
int
and
adc
xchg
repz
sub
arpl
shl
lods
jo
pop
sbb
adc
dec
lock
inc
add
test
(bad)
out
xor
inc
scas
mov
out
cmps
adc
push
pop
pop
test
push
popf
lock
pop
test
pop
xchg
cld
jo
lahf
fld
cld
pop
shl
sub
out
xor
popf
rcl
xor
push
fidivr
sbb
test
sbb
(bad)
por
aam
adc
js
pop
mov
xchg
mov
push
(bad)
out
and
or
nop
ins
mov
cmc
xchg
outs
imul
(bad)
xchg
xlat
and
or
mov
push
shr
jns
xlat
inc
test
xor
sub
test
inc
or
cmp
test
push
lock
sub
idiv
cs
sub
or
or
imul
mov
mov
xchg
stc
push
mov
mov
xlat
xchg
clc
fcom
or
xlat
sub
in
iret
cmp
(bad)
mov
adc
popa
jmp
imul
sub
cs
imul
cld
retf
js
or
push
sbb
xor
in
xchg
xlat
jno
retf
push
xor
inc
fucomip
push
fmul
out
dec
push
mov
mov
int
and
cld
cmc
push
xchg
stc
scas
adc
push
in
push
lock
lods
jo
push
cmps
stc
adc
xchg
mov
shl
xchg
xor
imul
(bad)
pop
jnp
jno
xchg
xchg
xchg
mov
or
inc
jne
cmp
mov
sbb
xlat
xchg
jns
sub
and
sub
loop
xor
jae
mov
fidiv
jge
movs
dec
push
scas
mov
mov
jo
pop
rcr
dec
jmp
add
out
rcr
sub
cwde
in
std
mov
addr16
xor
out
sbb
rcr
xor
cwde
out
ss
mov
loopne
adc
(bad)
sti
cmp
inc
jns
ins
lea
and
test
fld
shr
ins
movs
movs
cmp
lahf
lahf
dec
push
cmc
jmp
xlat
repz
es
ins
ss
repz
mov
mov
push
jb
scas
push
mov
enter
xchg
and
xchg
push
add
dec
jno
or
loop
cld
std
push
mov
and
xchg
int3
ja
adc
out
add
cmps
call
sub
sub
out
(bad)
ins
push
xchg
stc
sub
mov
in
clc
xchg
xlat
ins
or
xlat
dec
ror
jp
or
adc
test
xchg
clc
pop
hlt
ins
or
xlat
out
push
push
mov
xor
arpl
int
xlat
xor
push
xchg
jns
mul
xor
sub
jecxz
loope
adc
cmp
aad
in
sahf
rcl
sub
retf
add
pop
loop
pop
fwait
dec
(bad)
out
stc
imul
mov
sub
mov
scas
cmp
and
test
mov
adc
scas
sub
add
cwde
ret
mov
outs
xlat
push
(bad)
jmp
xchg
push
imul
test
jmp
xchg
or
push
lock
xchg
mov
imul
xchg
or
push
clc
jae
xchg
mov
sub
or
xor
xor
mov
out
mov
lods
jne
sub
lock
int
fisub
mov
pop
pushf
loop
test
mov
pushf
pop
outs
div
test
shl
scas
push
cmps
add
outs
and
shl
retf
sbb
movs
mov
fwait
ret
pop
pop
dec
xor
xchg
jae
sbb
leave
ficomp
sub
mov
scas
aam
push
in
jae
xlat
stos
lods
das
dec
clc
pusha
xor
mov
std
mov
int
repz
mov
addr16
xchg
pop
in
jae
rep
or
xchg
(bad)
xchg
xlat
cmp
or
jmp
push
shr
jns
xlat
dec
rcl
mov
inc
sub
dec
jecxz
mov
out
std
arpl
push
push
rol
movs
jno
(bad)
jg
(bad)
repz
in
nop
jg
ja
pop
les
and
or
test
in
push
mov
in
push
fdivr
ret
rcl
sub
pop
arpl
push
adc
xor
mov
mov
mov
push
ins
js
adc
lods
jo
xor
ins
jo
stc
mov
jecxz
nop
outs
pop
pop
cmp
adc
mov
push
aad
nop
push
mov
pop
je
xchg
jns
sub
out
jae
sbb
jb
xor
push
lea
rcl
jns
repz
dec
div
movs
push
or
shr
adc
sub
jne
pushf
or
test
mov
push
ja
je
out
push
xlat
mov
jno
sub
jns
mov
cwde
or
cmp
dec
push
mov
xchg
jae
jns
pop
imul
loope
sbb
test
dec
add
das
or
push
mov
push
nop
retf
data16
push
outs
cmc
int
mov
ins
xor
fadd
mov
(bad)
cli
into
jmp
xor
std
jge
mov
shl
cs
xor
jge
mov
shl
cld
jae
dec
movs
cmp
lahf
cwde
shl
leave
mov
fisttp
mov
outs
mov
mov
out
xchg
xlat
ins
mov
push
ins
mov
mov
mov
hlt
in
out
xchg
xlat
ins
mov
push
ins
mov
mov
mov
pop
cmp
mov
in
outs
fcomi
and
adc
ins
mov
xor
jp
repz
dec
fcomi
mov
outs
fcomi
and
adc
ins
mov
pop
in
cmp
repz
or
ins
mov
outs
cwde
push
mov
mov
out
aad
enter
dec
(bad)
int3
es
out
pop
mov
or
lock
mov
xchg
ficom
pop
in
dec
call
mov
xor
mov
aaa
inc
outs
(bad)
push
mov
cmp
jae
outs
into
sub
int
nop
retf
push
into
int
mov
ins
mov
xlat
adc
imul
aas
test
pop
jl
xchg
mov
push
push
mov
xor
jecxz
xchg
outs
adc
push
xchg
mov
push
or
pop
dec
test
xchg
mov
push
mov
sub
xchg
repz
in
ss
sub
out
mov
fwait
inc
sub
rol
repz
xchg
jp
dec
retf
xchg
fst
adc
sub
cwde
xchg
or
xchg
or
outs
push
xlat
mov
repz
jns
dec
add
push
or
xor
push
xchg
jns
sub
mov
sub
dec
cmps
inc
xchg
mov
cmps
cli
stos
xchg
clc
shr
repz
out
dec
push
mov
add
movs
loopne
push
push
xchg
clc
ret
jae
sub
dec
jmp
lea
push
jecxz
ins
or
xlat
or
retf
retf
clc
repz
sub
xor
fwait
retf
sbb
jne
or
retf
je
and
and
mov
add
push
jg
int
sbb
pop
es
mov
ins
in
out
(bad)
es
mov
loope
addr16
daa
pop
and
and
and
or
xchg
jae
pop
test
ficomp
adc
xchg
(bad)
xchg
xlat
sub
mov
scas
xchg
push
shr
jns
xlat
mov
adc
mov
xchg
mov
icebp
es
push
into
retf
(bad)
or
xlat
xchg
push
ja
jb
jns
out
(bad)
in
ins
push
jae
out
push
(bad)
mov
jo
dec
imul
ins
or
xlat
cdq
jne
jno
rcl
xchg
ins
or
nop
xchg
mov
push
and
adc
sub
mov
xlat
dec
mov
push
xchg
mov
sbb
test
dec
push
ja
xchg
jae
sub
stc
push
push
xor
jecxz
xchg
in
dec
cli
das
gs
loope
mov
sbb
sub
pop
jne
inc
mov
mov
fistp
add
out
push
xlat
mov
jno
in
out
jns
mov
xor
retf
xchg
add
pop
or
xchg
push
xor
jo
fisubr
retf
repz
and
and
adc
sub
repnz
inc
xor
outs
mov
pop
ja
xor
xchg
xlat
xchg
jae
sub
jo
mov
sub
xchg
jae
push
xchg
sbb
xchg
int3
lods
sub
das
xchg
(bad)
xchg
mov
xchg
jns
cmps
push
mov
lods
sbb
dec
imul
xor
es
jno
hlt
je
int3
jne
scas
fdivr
and
xor
das
dec
and
lods
sub
jne
das
outs
mov
inc
not
jle
xchg
repz
leave
ficomp
and
or
cwde
rcl
ins
inc
push
dec
retf
push
sub
or
push
mov
push
jae
or
lea
push
dec
or
nop
out
js
ins
ins
mov
repz
pop
in
hlt
ret
mov
sub
ja
call
mul
push
lock
adc
ins
push
scas
lods
jne
sub
mov
dec
or
push
adc
adc
div
add
pop
retf
cmp
mov
sbb
cmp
adc
ins
mov
loope
mov
mov
xchg
js
aaa
ins
or
xlat
xchg
or
push
mov
sub
js
jecxz
mov
xlat
xor
retf
cmps
out
fisubr
in
hlt
ret
shl
sbb
jecxz
in
push
ret
jno
inc
lods
js
jne
fist
(bad)
int
and
or
ja
jae
adc
sub
jns
mov
das
clc
mov
jnp
mov
adc
sub
xchg
xlat
xchg
jb
and
pop
pop
ins
dec
mov
xchg
jae
sub
adc
push
mov
cmp
push
mov
gs
retf
and
mov
sub
xor
repz
or
xor
and
or
ret
out
dec
xlat
mov
jl
push
cmc
pop
dec
jecxz
shr
out
jae
cs
jae
cs
sahf
xlat
adc
scas
mov
gs
push
push
scas
stos
xchg
pop
mov
clc
fistp
es
adc
fisub
or
jo
sbb
ss
pop
retf
out
aad
add
and
or
push
dec
or
call
push
addr16
or
nop
ins
mov
dec
stos
mov
nop
dec
dec
jne
ins
mov
push
dec
or
nop
ins
mov
push
(bad)
mov
cmp
or
(bad)
xchg
and
mov
xchg
xlat
in
xchg
sub
mov
sub
jecxz
fist
push
push
test
jg
jmp
xor
xchg
xlat
adc
aaa
mov
pop
cmc
in
sub
mov
(bad)
imul
jae
popa
ins
or
sbb
or
xlat
add
dec
sbb
xchg
jmp
cdq
loope
push
in
clc
xchg
xlat
ins
mov
xlat
mov
mov
xchg
stc
push
inc
sbb
push
sub
push
mov
xchg
sub
js
mov
adc
or
and
jns
jns
mov
mov
jecxz
xchg
stc
sbb
sbb
imul
inc
jae
cmp
test
inc
and
jns
and
in
retf
das
out
rcl
into
cmp
mov
mov
lock
call
xor
lods
jo
adc
rcl
shl
inc
mov
arpl
cmp
adc
(bad)
xchg
and
rcl
mov
xor
sub
pop
loop
push
shl
dec
or
sbb
retf
ret
out
push
push
ins
or
xlat
mov
arpl
xchg
repz
in
ss
sub
jae
mov
in
js
repz
jae
sub
js
iret
xchg
jae
sub
ja
mov
jae
sub
(bad)
retf
repz
push
push
sub
scas
test
imul
iret
add
push
cmps
jnp
ja
(bad)
repnz
cmp
jnp
sbb
pop
adc
repnz
outs
mov
and
jns
xor
jae
repz
add
xlat
sub
int
mov
inc
xlat
sub
and
sub
repz
xchg
pop
in
and
repz
adc
dec
mov
ins
cmp
cmps
in
xlat
stos
test
xchg
addr16
loopne
xchg
cmp
sub
es
dec
clc
push
sub
dec
mov
xchg
repz
leave
xchg
(bad)
mov
push
retf
mov
xlat
jbe
jecxz
xor
ret
xlat
nop
push
in
mov
jno
mov
jle
jmp
mov
jb
(bad)
lods
cmc
mov
int
jne
ins
(bad)
or
(bad)
push
leave
jmp
bound
or
add
push
cmp
push
dec
mov
xor
dec
dec
sahf
fdivr
mov
mov
jns
mov
push
and
cmp
push
or
repz
sub
movnti
outs
jecxz
sbb
dec
mov
int
mov
in
push
ja
ins
or
xlat
mov
ins
push
pop
pop
retf
out
mov
cwde
pop
sub
mov
clc
pop
ficom
push
nop
stc
or
test
and
and
ret
in
dec
and
repz
lods
js
sub
push
in
push
ja
stos
ja
jnp
fxch
outs
push
jmp
jae
jb
jo
jae
push
push
imul
inc
ins
fs
stos
adc
arpl
jecxz
jecxz
fadd
scas
sub
repz
out
fldenv
test
push
scas
gs
pop
out
test
lahf
cmps
xor
pop
and
mov
cwde
pop
es
aad
or
popf
inc
mov
cwde
fincstp
retf
xchg
repz
movs
dec
jmp
stc
sub
push
jge
or
xchg
push
xchg
repz
sub
xchg
xlat
cdq
repz
sub
push
and
push
or
or
push
cli
xchg
push
mov
adc
dec
mov
push
sti
or
xchg
sbb
sbb
lahf
jmp
cmc
and
jb
xor
sub
jmp
xor
and
sbb
mov
xchg
push
cmp
mov
adc
in
int
xlat
lods
clc
cmc
push
sbb
xchg
or
fcmovne
cwde
inc
or
mov
shr
in
div
jge
add
inc
adc
mov
mov
cmp
movs
xor
mov
stc
xchg
xlat
mov
and
jecxz
js
sbb
xor
inc
inc
rcl
and
sub
push
adc
dec
or
push
mov
mov
in
jns
lea
add
push
sub
int
and
adc
retf
sub
xlat
inc
push
xor
adc
xchg
lock
movs
push
or
push
push
mov
mov
arpl
add
and
adc
sub
das
dec
inc
out
ins
and
push
ja
xchg
dec
aaa
leave
pop
adc
push
sub
and
popf
cmps
push
repz
push
cmp
bound
xchg
mov
adc
test
dec
stos
cmp
repz
ss
test
loop
xchg
aam
loope
jl
repz
and
clc
mov
dec
mov
add
popa
cmps
test
push
je
xor
sub
ja
(bad)
sbb
dec
retf
mov
mov
js
ins
or
xlat
mov
sub
mov
repnz
lods
cmc
sub
xchg
repz
jb
(bad)
cs
add
test
retf
imul
mov
push
mov
stc
xchg
xlat
xor
and
out
push
mov
sbb
mov
sbb
inc
dec
ins
or
xchg
push
mov
xchg
iret
mov
loopne
push
imul
jae
int3
adc
sub
iret
std
inc
pusha
retf
sub
push
push
out
xor
(bad)
(bad)
lock
packsswb
dec
or
pop
ins
imul
loopne
jno
push
pop
cmps
or
rcl
popa
lods
jo
cmp
fwait
jns
xchg
stc
data16
jnp
jae
xchg
retf
sbb
imul
adc
sub
ss
sub
jae
and
imul
out
icebp
sbb
mov
add
adc
loopne
jno
push
sub
call
test
(bad)
and
sar
sar
in
nop
jne
mov
jle
call
mov
rcr
sar
mov
xor
(bad)
cli
inc
aad
sar
mov
push
adc
rcl
int3
mov
pop
imul
and
dec
rcl
sbb
sti
adc
repz
lahf
xchg
jae
pop
adc
xchg
add
xchg
sub
xchg
push
scas
gs
sub
adc
ins
mov
xlat
das
ficom
sub
ss
pause
add
rep
adc
dec
or
nop
out
xchg
in
xchg
jae
add
dec
or
nop
sbb
sub
xchg
dec
push
shl
ficom
sub
sub
das
loop
adc
aas
push
retf
xchg
repz
sub
jmp
rcl
jae
add
imul
inc
js
sub
nop
aam
jb
cdq
xchg
ins
imul
stos
inc
lods
inc
xchg
repz
sub
mov
jmp
push
xchg
repz
sub
xchg
push
mov
push
cdq
inc
js
sub
retf
(bad)
in
xlat
sub
push
sub
push
cmc
push
mov
sub
jb
and
or
mov
dec
cmp
lods
xchg
loopne
dec
mov
aaa
cmc
or
adc
sbb
adc
arpl
mov
clc
jmp
cmp
retf
lods
enter
or
(bad)
adc
mov
adc
and
mov
jo
push
js
push
imul
arpl
int
and
stc
xchg
xlat
sbb
lods
je
push
push
mov
sub
mov
xor
arpl
mov
xlat
addr16
retf
mov
push
and
xchg
dec
mov
or
and
cdq
xchg
push
push
retf
add
aaa
imul
lock
ret
in
adc
and
dec
cmp
shr
sub
xor
mov
arpl
rcl
lea
arpl
lods
in
adc
xchg
ror
xor
cmc
sub
push
fimul
adc
cmp
sbb
dec
inc
jmp
sub
rol
(bad)
aad
mov
sbb
push
sub
(bad)
push
div
adc
lods
jo
sub
mov
fidiv
int3
lods
in
or
outs
daa
xchg
xchg
xchg
cmps
jae
push
les
and
push
add
jbe
mov
jae
xchg
inc
clc
bound
imul
imul
adc
mov
jmp
jl
adc
cld
pusha
adc
mov
(bad)
loopne
addr16
xor
pop
push
xchg
(bad)
jne
adc
mov
push
jbe
xchg
inc
cld
adc
mov
dec
jne
cmp
jb
adc
icebp
arpl
jecxz
cmp
xlat
pusha
push
inc
push
add
adc
fsub
add
dec
adc
movs
push
jnp
inc
rol
inc
loopne
xchg
cmp
push
inc
push
adc
add
mov
ins
jns
inc
push
adc
mov
adc
aaa
xor
int
push
dec
cs
inc
push
xchg
xor
lock
push
not
loopne
(bad)
adc
fsubrp
ins
jne
test
stos
adc
ret
popa
mov
sub
les
sub
imul
mov
jmp
fisub
les
jne
rcr
ficomp
ja
jne
fisubr
popf
lods
shl
inc
and
dec
repnz
adc
push
and
sbb
push
leave
daa
iret
mov
push
mov
xlat
pop
js
aad
ret
push
push
or
jmp
shl
xor
nop
int3
movs
leave
in
aad
aaa
jnp
jmp
mov
xchg
push
xchg
dec
add
sub
leave
jmp
sub
jae
clc
(bad)
(bad)
scas
jae
xchg
push
(bad)
mov
fdiv
test
or
mov
xchg
push
or
ins
or
xlat
lods
jo
jae
push
push
ins
sub
pop
lods
sbb
xchg
xlat
push
mov
mov
bound
pop
retf
nop
xchg
push
imul
in
stc
sbb
xchg
jae
or
sub
pop
dec
mov
arpl
(bad)
retf
test
dec
mov
sbb
cwde
pushf
mov
push
stos
rcr
or
push
mov
fisttp
in
push
xchg
xlat
jbe
jbe
out
jns
mov
nop
jns
int
shl
sahf
ja
pop
mov
arpl
mov
lea
fcom
push
imul
mov
imul
(bad)
cmc
aad
jns
jecxz
xchg
loopne
sbb
outs
sub
adc
xchg
dec
imul
xchg
dec
imul
je
retf
retf
aad
push
mov
in
clc
int
xchg
repz
scas
sub
repnz
inc
jmp
call
xchg
ror
or
push
sub
lods
shr
lods
loopne
mov
jmp
cwde
or
push
sahf
mov
push
lods
or
shr
sub
sti
lods
pushf
sub
rcl
or
push
pushf
mov
lods
mov
shr
lods
jmp
mov
loope
mov
lods
ret
lods
ror
mov
call
lods
mov
push
xchg
or
shr
lods
ror
xchg
mov
lea
xor
int3
lea
mov
push
xchg
ins
lock
push
lods
mov
and
call
and
sub
cld
stos
mov
push
sub
lods
rcl
mov
call
push
sub
lods
rcl
lea
xchg
push
pop
push
mov
aad
int
cmps
push
mov
jmp
imul
push
sub
lods
rcl
mov
xchg
push
pop
push
mov
fimul
int
cmps
push
mov
not
dec
lock
rcl
(bad)
aaa
xchg
push
pop
push
mov
(bad)
cmp
mov
lds
dec
lock
rcl
mov
push
mov
(bad)
mov
sub
fidivr
push
stos
mov
xor
fcom
sub
push
push
push
repz
cdq
clc
mov
sub
shl
mov
or
mov
mov
push
pop
push
sub
xchg
repz
jle
sub
mov
xchg
xor
or
hlt
test
shr
jns
xlat
mov
out
fist
mov
lock
push
scas
mov
xor
adc
push
mov
jo
shr
loop
adc
push
pop
xchg
int3
test
mov
push
repz
sub
ja
sub
dec
imul
xchg
clc
stos
xchg
ins
or
xlat
lahf
loopne
adc
ins
fxch
repz
ror
fistp
lock
push
outs
mov
ins
mov
fwait
mov
push
in
rcl
push
mov
arpl
xchg
push
imul
mov
(bad)
push
xchg
jns
test
je
or
jle
lods
jo
inc
into
push
push
in
popa
icebp
into
stc
ins
or
cdq
xchg
mov
push
mov
sub
jns
mov
stos
dec
ins
or
xchg
push
mov
xchg
xor
push
imul
inc
push
imul
jno
mov
push
push
mov
jo
retf
jnp
push
test
ins
dec
xor
dec
imul
push
mov
imul
imul
rcl
jecxz
mov
xor
stos
test
jmp
xchg
jae
sub
or
xchg
jae
jns
jbe
or
ins
imul
mov
imul
stc
xchg
lea
stos
pop
test
xchg
or
fcomi
stos
adc
test
sar
or
sub
cmps
icebp
jns
mov
pop
pusha
add
in
outs
fs
push
cmp
outs
data16
or
std
lahf
or
out
pop
repz
push
enter
xor
std
push
enter
adc
cmp
mov
inc
mov
mov
jns
push
idiv
xor
ss
xchg
(bad)
icebp
jns
push
xlat
jns
dec
dec
jnp
xchg
icebp
jns
push
xchg
and
movs
(bad)
icebp
stc
int3
push
sub
jg
mov
les
or
pop
stc
sub
push
jge
or
xchg
push
dec
mov
ins
lock
xchg
sbb
and
jmp
dec
push
ss
stos
xchg
dec
dec
fld
push
xor
mov
rcl
add
daa
(bad)
xor
in
(bad)
ret
jb
gs
dec
lds
rcl
jg
leave
push
jecxz
xchg
jo
pop
in
xor
pop
jb
mov
fld
in
int
xlat
jmp
xlat
(bad)
(bad)
dec
adc
jns
mov
xor
mov
in
jns
loopne
push
daa
xchg
out
jns
mov
xor
jecxz
adc
pop
xchg
or
or
xchg
shl
or
ss
sub
jne
mov
jge
jb
jne
xor
push
adc
movs
mov
mov
xor
jecxz
in
jns
repz
dec
aam
push
push
pop
xchg
repz
sub
imul
retf
scas
dec
lods
test
push
out
dec
inc
iret
mov
cmc
aad
stc
mov
xor
call
inc
outs
or
mov
sbb
or
(bad)
repz
lods
jne
sub
loope
repz
jmp
sub
jae
imul
(bad)
(bad)
(bad)
lds
repz
addr16
cmp
addr16
push
rcr
cmp
cwde
pop
mov
or
jp
addr16
dec
addr16
lds
repz
iret
repnz
shr
sbb
retf
mov
iret
repnz
mov
(bad)
(bad)
lds
repz
addr16
lds
repz
dec
cmp
adc
push
out
lods
int3
and
cmc
cmp
dec
ss
dec
jnp
and
es
dec
sti
push
mov
out
mov
hlt
xchg
retf
add
repnz
xchg
sub
je
int3
clc
leave
cwde
or
(bad)
dec
cmp
dec
cmp
adc
ds
add
mov
cmp
mov
das
cmp
cwde
aaa
cmp
cmps
xor
loopne
(bad)
addr16
cmp
addr16
cmp
or
mov
out
mov
jnp
addr16
clc
test
or
retf
aaa
mov
out
mov
jnp
addr16
std
cmc
cwde
or
mov
mov
scas
std
add
jne
sub
std
add
out
aam
mov
loope
mov
jo
or
cmp
out
fldcw
add
mov
mov
into
repnz
mov
inc
(bad)
ror
mov
retf
aaa
mov
out
cmp
addr16
inc
mov
adc
cmp
js
mov
adc
dec
out
sti
push
mov
out
mov
dec
xchg
cwde
cmp
mov
(bad)
jb
sbb
leave
fmul
mov
sar
or
cmp
addr16
pop
sub
cmp
popa
or
cmp
addr16
dec
gs
sub
cmp
addr16
fisubr
mov
or
ds
xchg
dec
push
pop
sub
pop
sub
aas
pop
sub
lds
loopne
add
fdiv
cwde
aaa
jb
dec
mov
mov
mov
(bad)
into
jne
and
xchg
int3
inc
jns
inc
cmp
jl
cmp
push
or
inc
mov
cwde
xchg
mov
lea
loope
lds
add
jnp
pop
mov
out
and
mov
clc
mov
dec
out
push
or
add
or
mov
sub
mov
scas
in
js
out
lds
addr16
mov
int3
jle
(bad)
cmc
and
movs
lds
cmp
lds
push
lea
mov
push
or
cmp
push
(bad)
dec
daa
mov
lds
sub
push
jbe
dec
or
jo
jp
fisttp
mov
addr16
stos
stc
test
lea
mov
cwde
xchg
aam
(bad)
lds
repz
jecxz
mov
mov
mov
or
dec
mov
xchg
dec
addr16
cmp
mov
int
xchg
mov
retf
outs
mov
pop
or
push
js
cmp
addr16
cld
inc
push
(bad)
lds
repz
ins
dec
mov
iret
repnz
aad
add
enter
jmp
and
jbe
mov
or
sti
(bad)
pop
sti
mov
cmc
sub
sti
jmp
mov
scas
in
pop
lods
dec
out
mov
retf
outs
mov
pop
or
push
js
cmp
addr16
cld
inc
push
(bad)
lds
repz
popa
movs
push
mov
mov
lods
hlt
mov
xacquire
cmp
scas
in
pop
iret
add
sub
aad
mov
jg
(bad)
std
or
cmp
addr16
pop
cs
push
lds
addr16
sub
aad
mov
mov
call
jle
retf
mov
iret
repnz
cmc
cmp
data16
cwde
xchg
mov
lea
cmc
cwde
aaa
mov
addr16
jne
loope
hlt
cmps
push
mov
xchg
loope
inc
mov
cwde
xchg
add
mov
aas
cmp
aad
mov
jg
(bad)
std
or
cmp
addr16
scas
adc
jno
sbb
scas
in
mov
xchg
cmp
scas
arpl
addr16
mov
repnz
sub
(bad)
ficomp
imul
xchg
test
loopne
in
repz
sub
xchg
mov
popf
push
shr
jns
xlat
pop
mov
cwde
xchg
pop
sub
dec
les
in
sub
nop
push
aas
test
inc
xchg
ins
mov
jmp
in
int3
pop
aam
cwde
outs
jmp
cwde
push
xchg
adc
gs
xchg
pop
movs
daa
adc
in
int
xlat
push
and
mov
arpl
in
push
div
inc
repz
fldcw
bound
jne
mov
push
push
mov
out
jns
mov
out
jns
mov
cdq
dec
cli
sub
int
xlat
push
popa
push
sbb
sti
stos
xchg
mov
or
sub
ss
sub
stc
push
or
or
fist
aam
push
sbb
or
stc
xchg
xlat
cmp
mov
(bad)
aaa
sub
push
mov
sbb
arpl
push
rcl
inc
mov
and
scas
xchg
xor
cdq
in
add
icebp
fwait
les
push
imul
or
arpl
repz
hlt
jo
scas
lods
cmc
repz
mov
xchg
enter
mov
mov
xlat
dec
adc
sub
outs
xor
fcom
inc
sbb
pop
sar
mov
adc
sahf
retf
sahf
(bad)
fiadd
sahf
retf
stos
retf
stos
retf
pop
xor
cs
mov
int
les
mov
jmp
frstor
push
out
xchg
mov
add
jbe
jg
mov
sbb
outs
and
retf
sahf
icebp
or
mov
xor
dec
js
sub
sahf
retf
stos
retf
push
xor
(bad)
xor
stos
stos
mov
comiss
imul
sahf
retf
daa
dec
out
jne
ret
pop
(bad)
sbb
sahf
retf
push
or
jg
bound
xor
adc
mov
pop
call
call
sbb
popa
ds
ds
dec
push
in
call
cmp
sub
push
jp
or
sahf
iret
stos
and
arpl
enterw
retf
pushf
retf
pop
call
pop
jp
or
mov
outs
paddd
jo
scas
mov
paddsw
adc
jae
movs
inc
jmp
dec
nop
jmp
int3
mov
add
push
js
or
inc
sahf
icebp
fadd
mov
in
out
(bad)
mov
mov
mov
xor
scas
mov
lock
add
and
out
jg
test
sti
inc
add
outs
mov
sbb
scas
mov
repnz
popa
lock
movq
sahf
dec
stos
mov
sbb
out
push
aas
imul
fsubr
pop
enter
dec
sbb
sub
out
inc
sahf
retf
cld
fmul
outs
stos
jne
sub
outs
xor
fsubr
add
retf
popa
lock
xor
frstor
aas
imul
fsubr
pop
enter
dec
sbb
sub
out
inc
sahf
retf
cld
pop
dec
sbb
push
add
sti
test
push
enter
dec
dec
add
stos
xchg
jg
dec
xor
popa
fwait
fwait
pop
mov
sub
mov
shr
cmps
xchg
xlat
sub
shl
rep
adc
in
sti
hlt
repz
mov
shr
jg
retf
in
int3
pop
add
mov
push
sub
or
jo
mov
enter
mov
push
std
pop
add
mov
sbb
std
mov
adc
ins
or
movs
sbb
retf
mov
sub
xchg
push
call
adc
dec
icebp
cmp
ins
or
xchg
xchg
mov
nop
loope
xchg
repz
sub
popa
imul
xchg
adc
push
out
xor
hlt
push
loopne
or
dec
sub
jecxz
adc
arpl
loopne
or
cmp
stos
inc
loop
mov
push
out
push
retf
mov
stos
push
xor
sti
hlt
rep
shl
rcr
arpl
push
push
jmp
mov
jecxz
xchg
xchg
retf
popf
xchg
mov
add
or
stos
adc
mov
push
in
jmp
pop
out
xor
dec
pop
dec
nop
jns
jp
dec
ss
out
mov
stc
mov
mov
cwde
mov
xchg
stc
add
shl
cmp
push
and
adc
inc
outs
out
aad
mov
mov
jo
ds
sub
jo
cmps
movs
mov
enter
dec
jge
xor
pop
add
cmp
xor
pop
add
cmp
xor
pop
add
cmp
adc
jnp
and
dec
mov
adc
jnp
aas
mov
int
xchg
inc
(bad)
sahf
iret
movs
nop
inc
cmc
ret
jnp
and
dec
mov
adc
jnp
aas
mov
int
xchg
inc
lds
pop
cmp
cmps
movs
outs
sub
or
imul
xchg
jp
nop
xchg
mov
inc
mov
sub
dec
xor
mov
imul
(bad)
dec
xor
mov
sub
sbb
(bad)
sub
sbb
sahf
iret
cmps
movs
add
ret
mov
adc
lahf
mov
ja
ins
mov
repz
mov
mov
je
xchg
mov
sbb
in
mov
retf
cmp
ins
pop
xchg
push
les
jo
cs
aas
jecxz
ins
rcl
cmp
cmp
dec
sub
jae
adc
jmp
(bad)
mov
dec
push
push
xchg
jae
jg
js
bound
in
xchg
mov
repz
sub
sbb
shr
in
stc
xchg
xlat
adc
adc
in
int
xlat
sbb
loop
push
test
cmp
ret
push
mov
or
mov
mov
or
xor
call
jb
dec
into
stc
mov
rcl
shl
into
test
leave
jo
cmc
xchg
mov
pop
bound
and
push
push
(bad)
mov
xor
adc
mov
cmp
imul
dec
jbe
sbb
dec
push
sbb
push
out
js
mov
repz
sub
ins
sub
xchg
jns
fdiv
int
call
inc
push
imul
loopne
push
jmp
dec
jmp
rcl
pusha
je
arpl
or
jecxz
(bad)
jo
xor
pop
imul
in
out
adc
gs
xchg
xchg
mov
out
in
cld
jmp
dec
in
or
imul
pop
xor
(bad)
pop
jnp
in
in
out
fcomp
xor
(bad)
movs
ins
pop
cld
lea
pop
xor
in
jns
jae
loope
inc
imul
jmp
cmpxchg
sbb
xchg
hlt
imul
xlat
fwait
dec
cmp
fst
not
jmp
ins
or
xlat
test
mov
leave
shl
mov
xlat
cdq
or
push
xor
mov
nop
push
xchg
jl
retf
xor
or
mov
in
dec
(bad)
cmp
push
sub
dec
out
adc
ins
leave
jmp
jo
cmp
sbb
in
push
mov
ins
or
xchg
(bad)
aam
or
mov
ins
mov
add
xlat
sub
dec
in
rcl
iret
test
js
mov
or
xlat
or
jecxz
loop
inc
cmps
xor
push
xchg
clc
retf
or
xlat
ins
or
mov
rcl
mov
dec
lods
xchg
push
or
jmp
icebp
sbb
mov
test
mov
in
dec
imul
jae
imul
imul
std
ins
imul
int
and
sub
adc
mov
adc
adc
nop
xchg
imul
jo
cmp
push
imul
xchg
jae
je
dec
imul
sbb
loop
or
or
jns
sub
lods
stos
pop
jg
adc
jmp
mov
xchg
jae
sub
cdq
dec
mov
xor
inc
popa
mov
inc
movs
or
cld
push
and
mov
mov
enter
mov
scas
cmc
sbb
push
cmp
lods
sar
push
lock
ja
add
les
add
inc
rcl
test
mov
add
or
test
les
stos
pop
cmp
mov
jmp
cmps
sbb
mov
inc
mov
xor
test
mov
leave
mov
xor
mov
push
adc
sub
pop
inc
aad
pop
test
cmp
hlt
cdq
jnp
mov
repz
or
push
jle
xchg
dec
imul
inc
jo
aad
inc
test
sbb
sub
cdq
jnp
and
lea
cdq
pop
das
aam
lea
xor
imul
inc
test
xor
jnp
add
jnp
leave
inc
test
mov
popf
jnp
adc
std
push
es
adc
cmp
sub
dec
retf
inc
(bad)
retf
push
push
loop
mov
inc
dec
add
pop
mov
in
push
cmp
outs
pop
cmp
inc
pop
mov
inc
clc
push
mov
or
dec
cmp
outs
lock
jno
adc
enter
mov
xor
arpl
mov
out
or
sub
mov
ss
inc
movs
mov
pop
pop
sub
das
pop
mov
jp
(bad)
loop
(bad)
loop
mov
pop
pop
sub
and
mov
jp
push
aas
xlat
out
mov
mov
sub
adc
dec
hlt
sbb
and
(bad)
jmp
mov
mov
push
and
inc
hlt
sbb
jmp
mov
mov
imul
sbb
int
std
mov
xor
xchg
cmp
push
mov
daa
scas
sub
cmp
lods
sbb
std
xchg
or
lods
lds
das
push
pop
jecxz
test
mov
jecxz
vmaxss
adc
repz
dec
movs
jns
lahf
pop
push
push
xchg
stos
mov
xlat
out
cmp
mov
dec
jecxz
ins
or
xlat
setle
xchg
jle
and
pop
jmp
popa
or
mov
mov
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
or
or
scas
mov
xchg
xlat
daa
jmp
xchg
dec
jmp
jle
or
add
and
cld
xlat
jmp
mov
fsubr
xchg
xchg
adc
outs
mov
enter
adc
in
rcl
nop
ins
or
dec
sbb
retf
leave
(bad)
push
and
push
ins
or
mov
mov
imul
out
dec
push
mov
ins
or
mov
rcl
mov
xchg
add
ret
or
cwde
sub
loop
sub
push
imul
in
push
lock
bnd
mov
jecxz
push
adc
sbb
int
mov
or
push
or
push
movaps
dec
hlt
xchg
stc
dec
inc
adc
sub
or
dec
xchg
jae
js
cmp
mov
sub
jns
mov
shl
lea
adc
rcl
arpl
loopne
dec
addr16
inc
push
repz
sar
cmp
jae
jne
push
imul
push
dec
push
jno
dec
dec
fnstenv
and
imul
int3
jge
rcr
push
xor
imul
xchg
(bad)
retf
mov
nop
push
je
icebp
ja
jge
inc
(bad)
scas
lods
cmc
into
sub
ja
aad
xchg
sti
ret
xor
jne
dec
outs
test
sbb
into
jmp
test
std
out
loope
jge
xor
aaa
out
popa
jnp
dec
xor
mov
(bad)
dec
sub
test
out
ror
enter
mov
into
enter
std
outs
mov
shr
cli
enter
std
fcom
dec
sbb
jmp
mov
cld
pop
mov
enter
inc
mov
test
cld
pop
mov
enter
shl
ror
out
loopne
in
dec
xor
scas
pop
mov
call
data16
enter
dec
dec
xor
dec
into
std
outs
mov
shr
cli
enter
std
fcom
dec
sbb
jmp
mov
cld
pop
mov
enter
inc
mov
test
leave
pop
push
xor
call
fcom
dec
sbb
lods
jmp
adc
dec
aaa
in
jle
sub
test
out
mov
scas
in
jle
push
out
sub
pop
in
mov
push
outs
inc
test
xchg
into
(bad)
aaa
or
into
jnp
inc
imul
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
repz
push
pop
ins
dec
icebp
repz
or
enter
jl
adc
ins
rcl
jmp
mov
push
sub
clc
cld
loopne
or
xlat
inc
bound
lods
cmc
add
pop
gs
push
scas
sub
jo
mov
jecxz
mov
sbb
jmp
jae
or
xchg
push
mov
push
in
sbb
xor
movs
sub
xchg
mov
xor
clc
nop
stc
fwait
out
fsub
mov
nop
sub
rcl
shr
popf
xor
push
ss
push
mov
(bad)
adc
ins
or
pop
sbb
dec
dec
cmp
stc
xchg
push
out
rcl
ins
je
jecxz
sub
jecxz
(bad)
int
mov
mov
js
ss
jns
fsubr
int
iret
xor
mov
mov
mov
xchg
push
xchg
jns
sub
inc
sub
ins
push
pop
ret
mov
into
mov
arpl
or
adc
xor
xchg
adc
xor
sub
mov
xor
arpl
imul
sub
push
clc
sub
jb
jg
arpl
xchg
jae
sub
xchg
retf
loopne
jae
mov
in
jns
repz
push
repnz
dec
cmps
push
(bad)
adc
adc
push
xchg
xchg
imul
sbb
rcl
test
inc
shl
test
pop
shl
test
inc
popw
mov
mov
push
mov
into
mov
leave
and
bound
into
dec
addr16
and
es
pop
lods
adc
pop
mov
mov
push
mov
into
mov
leave
and
bound
into
dec
addr16
and
push
jmp
inc
rol
test
mov
leave
and
bound
into
pop
repz
fdiv
lea
shl
push
cmp
inc
imul
repnz
bound
into
(bad)
fdiv
sbb
ja
dec
mov
push
or
xor
es
daa
rol
fld
scas
add
ret
mov
xchg
and
dec
inc
rol
dec
inc
pop
gs
(bad)
aam
cmc
les
call
ja
fcmovnb
pop
lea
ja
mov
and
cmp
ins
mov
repz
or
dec
outs
retf
in
push
(bad)
adc
and
adc
push
adc
jb
ins
mov
xlat
or
(bad)
scas
sub
icebp
dec
pop
mov
cmc
mov
mov
cmp
sbb
jns
sub
rcr
je
mov
ins
or
nop
xor
xchg
xlat
int3
mov
or
or
mov
icebp
mov
jmp
stc
dec
repz
xlat
in
jns
repz
xor
push
mov
out
push
push
mov
mov
jb
arpl
push
mov
or
mov
cmps
xchg
xlat
nop
push
xor
adc
jns
jp
or
push
cwde
outs
sub
sbb
push
out
shr
out
dec
dec
sbb
in
xor
dec
stc
add
out
jns
mov
mov
push
xor
test
xchg
stc
push
jmp
mov
out
or
xchg
jae
jae
push
imul
shl
xlat
clc
into
stc
mov
xor
or
push
imul
xchg
jae
inc
ret
mov
jae
mov
add
mov
pop
stos
xchg
int3
inc
cdq
clc
inc
outs
xchg
imul
std
mov
fstp
scas
pushf
retf
pushf
retf
pushf
retf
pushf
dec
call
std
mov
cmp
fimul
call
mov
test
(bad)
mov
scas
mov
retf
jg
das
mov
(bad)
mov
xor
call
or
mov
je
call
pop
gs
dec
mov
cs
lods
mov
call
cmp
cs
and
xchg
pushf
daa
pop
gs
dec
loop
pushf
dec
call
or
mov
or
call
cdq
cs
dec
jmp
call
or
mov
add
push
sti
dec
mov
mov
sbb
jns
(bad)
mov
call
hlt
mov
sbb
push
add
fstp
add
or
gs
cmp
outs
jb
ins
jmp
xchg
lods
xchg
loopne
dec
mov
mov
retf
xchg
sbb
jno
mov
push
cs
ja
imul
scas
xor
data16
clc
add
or
xlat
adc
push
imul
popa
repz
ja
mov
call
(bad)
in
or
rcl
cli
ins
or
mov
mov
cmc
push
xchg
jns
pop
sbb
sbb
mov
push
sub
xchg
js
cmc
ins
mov
xlat
out
push
push
mov
out
xor
nop
mov
stos
sub
scas
loopne
adc
sub
or
sub
adc
or
out
xor
scas
pop
test
mov
or
sub
(bad)
enter
mov
nop
js
test
xchg
or
push
xor
mov
outs
or
sub
jns
push
push
push
inc
xchg
xchg
jae
popa
sbb
imul
imul
sbb
daa
sub
out
jmp
mov
xor
jle
sbb
loop
mov
fdiv
mov
in
stc
std
repz
lea
mov
push
scas
sub
jo
ror
(bad)
scas
sub
or
lahf
aad
nop
out
push
jecxz
int
adc
add
mov
ret
push
int
jecxz
int
lahf
aad
lods
jmp
xor
lods
sbb
out
lods
pop
outs
xor
call
loope
xchg
pop
imul
cmps
(bad)
xchg
pop
outs
inc
jo
xlat
cs
jecxz
int
arpl
int
arpl
xchg
fst
push
bound
imul
xchg
push
push
arpl
int
arpl
mov
push
dec
push
jecxz
int3
imul
xchg
mul
outs
fldcw
imul
rcr
mov
push
gs
fldz
cmc
xor
daa
out
out
ja
test
inc
fild
jecxz
mov
outs
out
(bad)
sbb
out
rcr
aaa
ja
les
pop
adc
ins
jnp
or
mov
xchg
fst
push
arpl
int
dec
ja
shl
ja
rol
ja
mov
push
dec
ja
sub
jg
mov
retf
popa
rcl
jecxz
cmps
(bad)
retf
loope
dec
ja
int
lods
pushf
and
ret
sbb
mov
imul
inc
ins
push
and
test
xchg
push
fwait
and
xchg
dec
jo
adc
xchg
ds
dec
and
sub
mov
loop
cdq
xchg
pop
shl
xchg
movs
mov
ins
mov
push
sub
mov
pop
sub
lods
pop
sub
test
pusha
ins
das
jg
shl
test
ins
das
sub
ja
push
sar
jg
sar
jg
shl
test
and
jbe
xor
je
cs
in
in
shl
push
inc
jg
mov
aam
lods
sar
mov
retf
xlat
push
mov
mov
xchg
mov
jmp
mov
repz
xchg
sbb
cli
in
mov
push
scas
xor
mov
les
cmc
xchg
push
sub
adc
pop
xchg
xchg
xor
sbb
int
xlat
xlat
cmp
not
dec
push
dec
imul
nop
stc
movs
fcomp
mov
push
das
(bad)
adc
ins
push
mov
test
xchg
stc
sub
lods
clc
xchg
push
aas
out
or
sub
and
stc
push
mov
adc
sub
jns
mov
mov
mov
sub
xchg
stc
mov
xchg
mov
mov
sub
in
stc
jl
ins
xor
mov
adc
mov
sbb
push
mov
fsub
add
push
mov
xchg
repz
sub
push
imul
mov
mov
loope
sbb
imul
inc
mov
and
stc
xor
jb
push
and
or
sub
dec
cld
and
push
mov
mov
arpl
nop
in
sub
cmc
fdiv
sub
loop
xchg
cmp
in
shl
addr16
dec
push
push
shr
mov
xor
or
std
mov
repz
sbb
fucomip
bound
js
loopne
fs
xor
bound
mov
mov
cld
and
pusha
enter
jl
or
cmc
or
mov
push
jl
arpl
jp
mov
aam
xchg
jbe
or
in
out
lahf
jg
or
xchg
jecxz
pusha
imul
call
mov
icebp
and
and
les
pusha
enter
lock
and
les
pusha
enter
jb
or
aaa
sub
test
and
adc
loop
ret
pop
outs
pusha
adc
shl
fisubr
out
outs
loopne
mov
or
xchg
repz
dec
jmp
stc
sub
push
jge
cmp
mov
push
mov
push
mov
ins
mov
xlat
imul
jecxz
xor
push
xchg
dec
stos
mov
xchg
xor
adc
int
mov
les
jb
add
jae
call
std
repz
push
aad
imul
xchg
aas
retf
and
jmp
imul
xchg
mov
push
add
iret
xchg
push
ins
rcl
sub
mov
or
sub
jecxz
call
or
ins
or
or
xchg
or
push
xlat
mov
repnz
inc
lods
jo
data16
adc
icebp
lock
mov
aaa
inc
sub
jne
push
mov
cdq
aas
mov
in
rcl
scas
xchg
jae
ins
sbb
imul
xchg
mov
push
ja
xor
sti
repz
int
and
push
loop
in
jns
repz
add
xchg
jns
sub
mov
out
jns
mov
adc
sub
dec
retf
loop
push
or
jne
add
or
hlt
jae
mov
xchg
push
imul
retf
mov
xchg
imul
pop
mov
push
add
inc
or
inc
mov
fisttp
jae
out
mov
movs
test
xchg
mov
mov
mov
mov
je
sub
cmp
push
sub
aam
cmp
push
mov
mov
inc
ret
call
jge
addr16
xor
in
test
(bad)
(bad)
adc
or
cmp
ss
jmp
mov
(bad)
(bad)
stc
or
mov
push
aas
push
fmulp
cmp
xchg
addr16
and
mov
cdq
shr
push
in
inc
sbb
push
sbb
or
mov
push
and
retf
jmp
arpl
pop
fchs
cmps
push
fbld
inc
out
cmps
out
arpl
ja
sub
cmp
push
fsubr
xchg
push
scas
cmp
or
arpl
aas
nop
stc
popa
cmp
mov
mov
test
addr16
jb
in
cmp
dec
in
loop
scas
test
jle
push
lock
sub
mov
cmp
dec
std
or
mov
sub
mov
cmp
ds
fistp
or
xchg
mov
pop
cmp
(bad)
push
xor
push
jp
sbb
inc
iret
adc
out
push
push
in
push
stc
popa
ret
loop
mov
xor
pop
inc
(bad)
push
sbb
sbb
xchg
out
sbb
pusha
(bad)
mov
cmp
movntps
imul
push
rcl
movs
add
mov
dec
popa
or
popf
fdivrp
or
and
mov
iret
or
pop
stc
sbb
aas
jecxz
sub
cmp
mov
pusha
pop
stos
xchg
jecxz
loopne
push
stos
xor
in
jmp
push
xchg
in
push
aam
sub
rol
mul
loop
es
mov
mov
out
sti
ret
xor
cmp
mov
dec
out
and
mov
test
mov
jbe
push
mov
push
mov
mov
ins
cmp
adc
cmp
add
(bad)
leave
dec
loop
add
loope
dec
jp
or
loop
inc
fsubr
push
mov
cwde
ror
rcl
jecxz
dec
mov
and
mov
push
out
inc
ins
push
mov
aam
push
xlat
lahf
ror
and
loop
pop
sar
mov
cmp
pop
test
cmps
adc
mov
rol
push
cmp
jmp
loope
in
scas
cmp
out
mov
lods
pop
push
bound
push
sub
push
adc
repnz
pop
mov
and
test
call
out
mov
cmp
mov
mov
jb
les
movs
hlt
or
xor
push
dec
sti
jp
add
dec
push
jne
add
into
neg
mov
in
sub
loop
fwait
sahf
data16
in
or
aam
mov
in
inc
push
inc
leave
repnz
or
pop
or
pop
ret
adc
cmp
lds
cmp
push
and
clc
sbb
lea
scas
mov
int
or
adc
cmp
mov
shl
mov
push
repnz
lahf
push
pop
aam
addr16
pop
in
inc
adc
xchg
mov
fsub
shl
dec
mov
push
push
dec
push
popa
imul
rep
scas
cs
in
gs
pop
lods
loop
adc
dec
mov
data16
(bad)
frstor
test
test
jl
and
fisubr
sub
jg
mov
or
xlat
leave
mov
dec
loop
and
les
mov
mov
cmp
call
mov
inc
push
mov
arpl
xchg
xlat
mov
dec
mov
inc
ror
and
cmp
or
dec
pop
jmp
or
ds
sbb
cmps
mov
retf
jecxz
ds
xchg
movs
or
arpl
rcr
fisttp
iret
and
fst
adc
cmp
mov
or
mov
gs
mov
ins
mov
test
pop
addr16
push
xlat
ins
mov
push
ins
mov
repz
sub
sbb
out
xchg
in
scas
mov
xchg
xlat
jl
xchg
inc
xchg
in
pop
adc
mov
in
aas
push
scas
cdq
nop
in
ins
rcl
aad
outs
(bad)
xor
sub
(bad)
outs
xchg
adc
imul
adc
out
lods
pop
adc
mov
dec
add
pop
push
xlat
ins
mov
xlat
ins
or
mov
or
xchg
push
jle
mov
lods
fs
xchg
cli
or
xchg
xlat
xchg
js
(bad)
ins
or
xlat
es
push
push
mov
xlat
mov
hlt
xlat
adc
cmps
leave
xchg
repz
or
dec
les
shr
sahf
jb
mov
xchg
jns
pop
xchg
cld
mov
xor
xor
push
mov
or
add
mov
pop
cmp
in
dec
imul
rcr
push
xchg
jae
outs
xchg
jae
or
push
mov
out
mov
(bad)
push
nop
stc
stos
sub
(bad)
repnz
mov
(bad)
ror
jl
push
adc
div
mov
retf
(bad)
int
and
jns
mov
mov
hlt
nop
jns
and
jae
xchg
xor
xchg
retf
jmp
push
in
ss
sub
test
pop
inc
xchg
repz
cli
adc
push
xchg
dec
pop
ret
outs
mov
idiv
repz
div
leave
ins
pop
test
test
inc
in
add
mov
push
xor
stos
inc
push
jge
lds
mov
inc
dec
(bad)
pop
aam
push
xlat
ffree
jb
pop
inc
rcr
data16
jge
lock
ret
iret
push
jbe
fcmovnb
push
fnstsw
inc
jmp
and
push
stos
jecxz
push
stos
jecxz
pop
stos
and
push
stos
out
pop
stos
popf
mov
inc
sub
push
cmc
jecxz
pop
sub
test
shr
pop
push
pop
sbb
repz
shr
test
gs
test
add
inc
jmp
xchg
out
test
in
imul
out
test
ins
jle
xchg
sub
add
inc
out
js
push
ins
push
sub
test
loope
dec
push
push
ins
push
jnp
ins
jle
push
outs
pop
test
add
inc
in
ins
inc
push
xchg
inc
push
(bad)
add
sti
fild
xor
add
inc
jmp
push
pop
in
lock
jne
sub
test
inc
out
push
inc
xchg
push
cmp
ins
hlt
inc
push
xchg
or
out
test
inc
iret
ins
jno
push
push
dec
mov
nop
inc
xor
inc
ret
jge
cmc
(bad)
pop
dec
clc
pop
std
(bad)
icebp
(bad)
shl
inc
jnp
push
inc
push
push
pop
rcr
inc
data16
ffreep
neg
imul
out
pop
push
push
scas
cli
cmps
and
jp
xchg
xchg
sbb
pop
jp
sahf
pop
pop
xchg
xchg
fsqrt
cmc
fiadd
pop
xchg
xchg
dec
pop
inc
inc
in
ja
dec
cmp
repnz
in
jno
push
in
hlt
shr
inc
push
outs
pop
test
test
inc
out
dec
push
dec
pop
sub
test
out
je
xchg
test
test
iret
out
ja
xchg
test
add
inc
out
jle
xchg
sub
jge
inc
loope
pop
inc
icebp
ins
js
xchg
test
push
lahf
jae
outs
lahf
inc
retf
test
inc
out
jne
push
jge
sub
jp
inc
(bad)
inc
repz
ja
jmp
push
dec
pop
sub
jp
inc
iret
pop
lahf
jno
add
shr
ja
push
push
test
add
inc
iret
adc
jbe
fidiv
cmc
in
pop
pop
test
dec
lahf
inc
test
inc
fisubr
xor
sbb
jns
out
ins
add
add
dec
in
sbb
xor
ins
jbe
out
jbe
out
in
or
(bad)
retf
mov
ds
jbe
out
ins
pop
inc
out
retw
test
outs
dec
idiv
nop
xchg
outs
ins
neg
pop
jbe
sbb
inc
out
gs
out
ins
jne
fistp
inc
out
or
mov
outs
ins
inc
xor
ins
jbe
in
out
jmp
retf
sbb
shr
out
xor
shl
mov
outs
inc
out
in
adc
ret
movs
jl
inc
jns
outs
shr
ret
arpl
shl
xor
sbb
or
cmp
mov
retf
xchg
jae
jge
mov
push
leave
mov
dec
mov
xlat
out
jecxz
sub
bnd
cs
rcl
push
fcmovnb
loopne
les
sbb
ins
rcl
icebp
je
dec
fwait
mov
jne
sub
imul
fldcw
jmp
dec
lods
jo
push
scas
inc
push
push
in
stc
xchg
xlat
cwde
jb
ss
jle
aad
mov
push
sbb
push
in
test
xlat
push
retf
retf
push
xchg
or
push
sbb
ins
out
js
mov
mov
(bad)
aam
jns
mov
xor
retf
jb
jae
sub
push
retf
jecxz
dec
imul
in
ja
ins
mov
xlat
mov
dec
outs
and
push
sub
retf
in
sti
shr
mov
clc
sbb
arpl
int
iret
xor
cmc
push
nop
stc
js
sbb
pop
push
out
xor
test
or
jge
sub
icebp
retf
or
scas
jmp
outs
pop
jg
mov
jns
outs
mov
lock
sbb
sub
cmps
int
mov
xchg
jae
dec
pop
jo
mov
inc
lds
int3
adc
mov
or
cmp
aaa
push
jecxz
inc
sti
xchg
dec
or
or
jmp
jne
mov
adc
ss
push
test
outs
push
mov
cmp
jne
rcl
jne
cmp
jne
retf
xchg
xchg
cmp
cmc
neg
mov
std
dec
inc
dec
fucomp
ficomp
ins
or
xlat
fwait
dec
cmp
push
sub
movs
push
xchg
xchg
mov
in
jns
xlat
movs
not
addr16
sub
mov
sbb
retf
push
add
push
nop
int3
dec
dec
add
outs
cdq
adc
imul
int3
sbb
dec
or
push
xchg
adc
pop
or
mov
adc
push
test
sbb
mov
add
cli
lock
mov
jecxz
xchg
xchg
into
jae
loope
or
xchg
sub
push
mov
lods
jo
arpl
js
jmp
out
push
xlat
mov
jae
out
out
jns
mov
hlt
test
xlat
dec
or
mov
xchg
clc
lock
ins
or
xlat
lods
jo
jle
in
adc
xor
jecxz
xchg
out
or
push
sub
push
xchg
xchg
mov
cwde
fs
out
push
xlat
mov
mov
sbb
xchg
add
packsswb
xchg
jns
imul
or
push
in
int
mov
in
stc
loop
sub
jecxz
xlat
xchg
clc
sub
xchg
repz
(bad)
and
dec
rcr
jae
mov
cmp
mov
icebp
sub
and
je
iret
mov
inc
mov
and
mov
into
xchg
add
rol
jge
or
push
loope
ret
dec
sbb
iret
sbb
fist
add
inc
inc
xor
xchg
cmps
mov
mov
adc
add
dec
loope
xchg
jne
(bad)
mov
sbb
dec
iret
xchg
xchg
or
ret
mov
mov
or
xor
add
stc
mov
add
mov
cmp
adc
add
mov
mov
cmc
cmps
bound
adc
mov
or
loope
mov
loop
dec
iret
mov
push
pop
iret
xchg
add
add
pop
inc
mov
xchg
mov
mov
ss
mov
iret
adc
xchg
iret
mov
jge
xor
push
cmp
das
cmps
ss
mov
iret
adc
xchg
iret
mov
jge
xor
push
cmp
and
pop
push
stos
add
fisttp
or
push
push
retf
dec
pop
inc
xchg
jge
or
iret
xchg
add
push
cmps
ss
jp
and
sub
add
int3
mov
iret
adc
xchg
iret
mov
jge
xor
cmps
ss
push
cmp
cmp
jno
adc
sub
cmps
ss
icebp
lds
add
lds
mov
inc
lds
fcomip
movs
inc
push
jge
cmp
sub
pop
stc
repz
pop
ins
push
loop
in
mov
ja
mov
mov
adc
outs
xor
cmc
(bad)
sub
popa
shl
sub
lods
lock
cmc
sub
push
scas
sub
jb
test
mov
xchg
stc
add
mov
push
mov
lods
loop
js
push
ins
or
xlat
xor
push
xchg
int
and
xchg
stc
in
arpl
loop
xor
push
loop
in
rcl
jmp
inc
rcl
and
retf
xlat
xchg
mov
fwait
inc
sub
stc
loop
lods
js
ss
mov
xor
nop
stc
rcl
mov
mov
xchg
push
xchg
dec
jnp
cwde
adc
push
sbb
mov
arpl
adc
xchg
out
dec
or
mov
retf
and
adc
ins
jo
jns
cmp
lods
jo
sbb
int3
dec
mov
jns
shl
retf
shl
jnp
xor
mov
sub
imul
cmp
imul
jb
leave
sub
mov
adc
mov
imul
xchg
jae
inc
cmp
sub
icebp
cld
sub
ds
nop
int3
push
lock
lahf
imul
ins
mov
(bad)
jp
sbb
ins
mov
jnp
hlt
shr
sub
inc
ins
mov
test
cmps
fs
pop
test
push
sbb
jbe
imul
mov
sub
cld
sub
test
push
sbb
stos
jbe
sub
outs
rep
sub
addr16
push
jbe
stos
adc
cwde
bound
mov
shr
jp
sbb
stos
(bad)
fild
int
xlat
stos
xchg
or
sbb
stos
clc
nop
sub
(bad)
bound
test
mov
mov
mov
shr
jp
sbb
ins
mov
shr
jnp
push
mov
test
mov
mov
mov
mov
stos
sub
pusha
ins
xchg
push
push
sbb
mov
in
sub
sbb
mov
shr
jnp
sbb
ins
mov
hlt
sub
and
mov
popf
adc
je
xor
test
xor
jbe
fisttp
add
jnp
or
imul
xchg
mov
push
cdq
push
ins
or
xlat
inc
pop
jecxz
sub
icebp
mov
push
(bad)
scas
mov
dec
sub
cmp
fs
or
and
repz
retf
arpl
mov
xchg
int3
mov
rcl
ja
dec
jmp
inc
sub
arpl
les
in
rcl
inc
ins
or
xchg
into
mov
mov
ss
sub
mov
imul
repz
xlat
xchg
push
imul
mov
jns
into
adc
mov
mov
enter
jg
repz
xor
stc
push
jge
add
mov
ss
sub
mov
xor
push
xchg
jns
xchg
cmp
in
cmps
add
xor
xchg
in
mov
add
or
(bad)
mov
outs
push
push
mov
sbb
push
mov
xor
icebp
push
ins
rcl
test
adc
mov
test
xchg
stc
(bad)
ret
fcmovne
fnstenv
into
lods
js
or
xchg
cmc
aad
jns
adc
push
imul
jmp
or
xlat
sub
idiv
xor
push
out
repnz
adc
mov
push
iret
mov
push
jmp
ins
(bad)
adc
mov
push
jmp
stos
mov
jo
xchg
jg
dec
adc
mov
push
add
stos
adc
mov
xchg
imul
jmp
in
xchg
jmp
fs
mov
mov
push
call
jb
inc
or
pop
loopne
mov
(bad)
jae
jmp
ret
cmc
adc
aaa
dec
push
iret
xor
sbb
ret
xchg
(bad)
lahf
jg
xchg
adc
or
pop
stc
repz
push
pop
in
lods
loope
in
or
mov
out
call
aaa
mov
icebp
sbb
scas
pop
dec
(bad)
or
mov
jb
pop
mov
add
stos
in
push
xchg
xlat
xchg
jae
scas
enter
adc
imul
(bad)
xchg
add
retf
clc
out
push
imul
rcl
mov
adc
ins
mov
sub
mov
xchg
or
into
retf
sub
int
xlat
jmp
xlat
repnz
retf
push
je
push
sub
rcl
add
loop
(bad)
int
or
inc
pop
sub
int
xlat
rcl
push
shl
jb
in
push
mov
mov
imul
sti
mov
push
in
xor
lods
repnz
cwde
arpl
sub
hlt
xor
mov
xchg
jae
outs
adc
imul
in
jns
xchg
in
inc
sbb
sub
sub
or
adc
shr
mov
jns
mov
jns
iret
mov
dec
ss
shl
fsubr
jo
lods
js
or
rcl
leave
jb
add
jne
int
mov
cdq
movs
loop
xchg
push
imul
xchg
jae
imul
ss
dec
faddp
retf
das
out
dec
push
jo
fstp
mov
(bad)
test
sub
aam
xchg
sub
cmp
sbb
test
cmp
sbb
test
cmp
sbb
test
aaa
mov
mov
lock
jle
pusha
sub
in
pusha
lea
xor
lock
inc
jb
sub
jo
pusha
jns
sub
mov
xchg
jmp
std
cmp
pop
jno
test
aam
mov
pop
rol
sub
cmp
sbb
test
lock
lea
and
xchg
cmp
sbb
mov
jb
sub
jo
pusha
jns
sub
mov
xchg
jmp
std
cmp
sbb
mov
shr
sbb
sub
pop
jb
sub
jo
pusha
jns
ss
aam
iret
cs
sub
lock
pop
jo
stos
pop
cmp
sbb
hlt
jmp
push
clc
loopne
fbstp
mov
aam
lods
xchg
jbe
in
jle
mov
(bad)
sub
pop
bnd
test
sub
fbstp
mov
aam
scas
xchg
jp
in
jle
sub
lods
hlt
sub
(bad)
sub
jmp
leave
push
movs
lock
test
(bad)
sub
jo
outs
jns
mov
in
jmp
test
push
or
cmps
xor
dec
jge
mov
inc
dec
dec
xchg
push
je
mov
xchg
lds
fistp
mov
test
lock
fistp
jae
sub
or
fwait
push
mov
mov
xchg
xlat
pop
scas
adc
jl
push
or
rcl
repnz
sbb
inc
lock
jl
scas
lods
cmc
and
stos
mov
mov
xchg
xchg
adc
fidivr
pop
adc
out
dec
xlat
mov
sub
aad
jns
fld
mov
(bad)
xor
push
and
lahf
xchg
xlat
in
adc
stc
(bad)
in
mov
mov
sub
jns
mov
dec
sbb
adc
ss
mov
(bad)
ds
mov
int3
int
and
xor
push
nop
stc
fxch
sbb
retf
xor
imul
or
scas
or
retf
clc
mov
push
push
sub
loop
push
fdiv
or
adc
mov
push
test
adc
push
push
ja
xchg
repz
inc
mov
jecxz
xchg
push
ret
pop
ins
or
xlat
(bad)
mov
push
sub
jmp
push
push
in
or
xchg
jae
jae
cmp
mov
sub
push
push
xchg
push
imul
mov
arpl
xchg
jae
sub
push
jmp
test
adc
adc
sub
cmp
lahf
xchg
js
xchg
adc
xor
cmp
mov
cs
cmp
sbb
lock
in
jp
add
test
fwait
lock
loop
cmp
pop
sbb
call
cmp
sbb
call
cmp
sbb
lock
in
jp
add
test
fwait
lock
sbb
repnz
add
repnz
pop
sbb
call
cmp
sbb
call
cmp
sbb
lock
in
jp
add
test
fwait
lock
sbb
repnz
add
repnz
pop
sbb
call
cmp
sbb
lock
in
jp
add
stos
cdq
and
adc
inc
sar
in
jo
out
mov
add
repnz
pop
sbb
call
cmp
sbb
call
cmp
sbb
lock
in
jp
add
cdq
(bad)
add
sbb
loop
mov
jo
sbb
or
or
fwait
push
and
fidiv
jecxz
xchg
repz
pop
mov
ficomp
pop
sub
les
push
retf
push
shr
jns
xlat
lahf
mov
xchg
mov
lock
xchg
push
lods
cmc
aas
sub
jb
xor
loopne
jns
mov
mov
cmp
repz
(bad)
lods
jne
sub
in
xchg
mov
aaa
das
je
push
xchg
jns
sub
lahf
push
xor
xchg
in
repz
stc
mov
and
rcl
mov
jo
jno
rcl
aad
mov
push
dec
lock
or
xchg
fmul
push
and
inc
loop
in
stc
ins
loop
stc
mov
mov
push
repz
dec
inc
mov
xor
arpl
in
jns
repz
idiv
or
push
imul
mov
arpl
xchg
xlat
xchg
jae
(bad)
into
jns
cmps
xchg
mov
mov
test
nop
stc
cmp
mov
push
mov
sub
nop
jns
loopne
loope
mov
sub
arpl
jns
mov
fistp
nop
stc
jle
xor
pop
mov
dec
fwait
arpl
int
sbb
jb
cmps
ins
or
les
mov
push
lods
jne
adc
out
and
in
mov
push
dec
jno
test
es
int3
or
lods
adc
iret
iret
dec
jb
aad
loopne
mov
mov
dec
call
jb
cmc
sub
sti
fstp
fwait
mov
jno
test
mov
jno
or
jg
loopne
das
popf
dec
and
(bad)
pop
dec
iret
fstp
lods
outs
(bad)
hlt
push
jmp
sub
jmp
test
jns
lods
or
iret
rcl
or
call
lods
or
iret
rcl
or
stc
aad
lea
dec
cdq
mov
jno
test
lods
aam
sbb
jno
test
fcom
in
psrlw
lea
dec
dec
xchg
jl
add
iret
retf
jb
adc
jmp
inc
iret
retf
je
dec
aad
or
jmp
mov
dec
iret
iret
xchg
sbb
lods
or
iret
fild
inc
iret
xlat
jbe
imul
cs
adc
jmp
retf
jbe
ja
call
or
jns
enter
out
mov
lods
imul
scas
xchg
sbb
test
sub
mov
or
imul
sbb
mov
jno
rsm
adc
enter
jae
xchg
dec
rsm
adc
nop
mov
movs
add
retf
xchg
or
enter
jno
jb
cmp
inc
dec
hlt
int3
or
dec
push
push
jbe
cmc
popf
fwait
mov
jno
test
mov
jno
or
cs
adc
scas
lods
or
iret
retf
nop
adc
std
or
mov
jno
lahf
mov
jno
inc
iret
xlat
jl
imul
int3
or
fcom
ins
ror
test
xchg
shr
outs
jmp
inc
adc
jmp
adc
loopne
int
adc
imul
jae
mov
mov
adc
or
(bad)
leave
pop
sbb
push
leave
retf
push
push
out
push
ins
mov
xlat
pushf
sbb
push
xor
(bad)
push
rcr
es
xor
xchg
jge
xchg
adc
ds
or
xlat
pop
jmp
push
nop
int3
jae
cmp
out
cmp
push
leave
jmp
inc
ins
or
mov
mov
mov
in
stc
xchg
xlat
mov
arpl
test
fwait
dec
rcl
mov
jno
dec
xor
shr
ins
mov
out
push
push
mov
mov
and
cdq
js
mov
test
in
imul
dec
imul
sub
mov
adc
xchg
jae
sub
dec
add
clc
jae
daa
mov
jecxz
in
jns
(bad)
mov
psllq
int
lahf
rcr
push
pushf
or
int
mov
xchg
int
out
push
ins
push
setns
and
dec
ins
mov
ffreep
retf
jg
push
push
xor
and
ror
mov
daa
rcl
loop
stos
aaa
in
ss
sub
out
sbb
imul
xor
test
or
sub
test
js
sub
cmp
xor
pop
pop
adc
rol
adc
mov
aaa
in
mov
push
popf
and
mov
retf
shl
fmul
data16
jo
out
xor
fwait
mov
adc
inc
movs
(bad)
mov
movs
xor
cmps
ds
or
and
adc
in
mov
addr16
xchg
jle
mov
mov
xor
enter
test
adc
test
push
mov
fmul
add
jno
pushf
xor
test
adc
sub
not
mov
mov
mov
mov
xor
enter
test
(bad)
pop
pushf
enter
sub
imul
cmps
pop
mov
inc
mov
mov
repnz
adc
xchg
xchg
mov
adc
or
sti
mov
sub
div
and
adc
mov
repnz
adc
stc
adc
enter
cs
jne
and
mov
aaa
sbb
stc
cmps
pop
mov
inc
mov
mov
addr16
sub
imul
imul
and
mov
jb
adc
retf
xor
(bad)
adc
jecxz
je
mov
xlat
(bad)
loop
into
(bad)
cli
stc
adc
jbe
cmp
sbb
mov
arpl
inc
jbe
cmp
mov
cmp
into
or
jae
add
adc
ss
mov
nop
into
or
xchg
sbb
or
push
cmp
and
imul
ja
lods
jg
retf
add
jmp
shl
sub
repz
movs
scas
mov
adc
sub
jmp
pop
ins
or
xchg
mov
push
xor
nop
jns
pop
pop
or
mov
xchg
xchg
xlat
nop
clc
add
ins
mov
xlat
push
push
ja
xor
jecxz
xchg
xchg
or
push
mov
ss
lods
lock
push
ret
jmp
out
jns
mov
xor
xchg
push
xchg
stc
dec
dec
cwde
test
je
test
ss
push
mov
ss
sub
test
mov
xor
cmp
cmp
dec
or
xchg
push
out
jns
mov
out
xor
xchg
pop
and
jo
cmps
cwde
dec
mov
dec
dec
fld
sub
out
call
call
or
xchg
or
push
imul
xor
nop
clc
dec
enter
sub
js
mov
adc
push
mov
push
imul
xchg
jae
dec
xchg
es
sub
out
retf
movs
adc
push
push
push
repz
jno
jns
stc
loopne
and
xchg
and
adc
jb
jns
lock
jns
xor
cmp
es
sti
adc
sub
adc
jl
rcl
std
stc
std
scas
pop
adc
cmp
sahf
and
mov
xor
jns
xor
jle
xchg
adc
jns
(bad)
cld
int
repnz
stc
adc
es
add
jb
jns
inc
pop
jnp
or
cld
stc
adc
push
ds
jl
xor
out
nop
or
out
xchg
or
cmp
adc
mov
rcl
jb
std
aaa
jl
rcl
and
in
and
repnz
cs
stc
adc
jle
xchg
adc
jns
(bad)
jl
adc
cmp
adc
std
adc
(bad)
xor
call
arpl
call
gs
mov
arpl
ja
push
sar
pop
fdivr
xor
or
pop
xchg
sub
xchg
fdivrp
mov
inc
repnz
mov
cmp
jb
stc
pop
repnz
jns
jb
repnz
jle
push
fnsave
stc
cmp
jb
push
xchg
enter
adc
xchg
or
xor
xor
dec
push
fdivrp
jns
rcr
cld
xchg
mov
sar
xor
xchg
mov
mov
push
sbb
mov
fidiv
jl
rcl
jnp
jmp
(bad)
nop
mov
or
shl
add
jne
std
nop
xor
jnp
lea
adc
lahf
pop
push
jne
stc
xchg
bnd
xchg
or
cld
jns
repnz
xchg
cmp
cs
movs
xchg
pop
cld
stc
adc
push
push
mov
mov
xchg
sub
std
xchg
mov
ds
jl
xor
and
mov
jle
xlat
add
jmp
cmc
fsubr
cmp
jmp
sbb
jmp
add
jb
jns
cmp
ds
jl
xor
(bad)
sti
sahf
aaa
jl
(bad)
cmp
es
mov
or
jl
(bad)
cmp
and
aam
jne
xchg
or
bound
rcl
cli
push
xchg
xor
addr16
fdivr
xor
cmp
or
or
jns
xor
jl
sub
sbb
cmp
ret
mov
(bad)
xchg
scas
test
aad
pop
dec
xor
(bad)
cmps
xchg
mov
jb
fbstp
(bad)
and
div
xchg
xor
loope
jb
add
jo
sti
xor
stc
mov
lock
xor
add
inc
(bad)
xchg
repz
test
dec
cmp
(bad)
loopne
adc
or
das
fwait
push
shr
jns
xlat
mov
xchg
nop
movs
xlat
push
or
mov
cdq
xor
xchg
xlat
inc
jno
mov
mov
scas
sub
test
rol
leave
jmp
pop
ins
or
mov
mov
xchg
out
jns
mov
je
imul
sbb
push
dec
or
test
xlat
dec
out
popa
fld1
or
or
xlat
xchg
mov
push
mov
sub
xchg
stc
ja
sbb
push
sub
mov
dec
sub
jl
or
(bad)
jnp
xchg
push
clc
adc
xchg
into
sub
xor
retf
mov
(bad)
lock
jecxz
adc
push
out
xor
mov
pop
ss
jns
adc
movs
xchg
or
dec
xchg
xlat
xor
shr
push
mov
jns
mov
mov
push
sbb
push
out
jns
mov
rcr
iret
shl
sbb
jecxz
adc
sub
or
dec
xchg
stc
pusha
(bad)
pop
pop
or
pop
sub
xchg
jae
sub
jne
dec
call
rcl
jns
(bad)
sub
sub
repz
mov
sub
cdq
mov
push
xor
and
cmc
add
xlat
cli
cmps
aam
daa
pop
movs
xlat
cli
push
aad
sahf
(bad)
push
cmp
xchg
push
shr
pop
pop
int
aas
iret
adc
jecxz
fmul
cli
and
dec
pop
or
fisttp
data16
movups
cli
adc
idiv
out
push
fiadd
adc
sub
xchg
or
aam
push
mov
cmc
push
mov
mov
jp
aam
push
ds
push
and
(bad)
clc
out
(bad)
mov
loop
nop
dec
aas
cmp
cmc
push
mov
(bad)
push
out
xchg
repz
(bad)
inc
loop
test
xor
std
push
out
(bad)
ffree
loopne
dec
(bad)
push
mov
xchg
push
fnsave
call
(bad)
dec
(bad)
push
cmp
xchg
add
mov
stc
push
ror
pop
xchg
adc
inc
jbe
cld
mov
test
mov
fcom
jecxz
in
cld
mov
dec
retf
ss
mov
mov
shl
xor
and
fnsave
mov
cwde
push
loop
and
test
jo
adc
xlat
push
and
jb
adc
jle
sub
rep
es
in
jae
repz
mov
mov
mov
arpl
push
mov
aad
outs
adc
lods
cmc
and
shl
inc
adc
sahf
imul
ins
mov
xchg
mov
dec
adc
repnz
mov
jne
push
jmp
pop
ins
or
lahf
fcmovne
push
and
push
ins
or
mov
mov
push
ins
or
cdq
xchg
mov
push
xor
jl
jns
ret
add
mov
xlat
xchg
js
add
or
xlat
sbb
retf
aad
push
push
push
sar
xchg
repz
mov
imul
ins
mov
xlat
ins
or
xchg
imul
sub
push
mov
in
test
mov
xchg
or
mov
xlat
mov
jae
dec
mov
arpl
call
xor
aad
or
mov
imul
xor
push
test
in
mov
aaa
push
sub
mov
loop
jo
pop
jnp
adc
stos
ja
test
jecxz
fnstenv
inc
div
and
imul
cmp
push
dec
cmps
xor
jae
js
sahf
xchg
jae
sub
retf
outs
push
push
fcomi
sbb
xchg
jae
sub
ja
xor
mov
repz
fld
push
pop
xchg
push
inc
push
cmp
inc
mov
jmp
int
or
in
pop
iret
xchg
aad
dec
add
stos
dec
mov
pop
dec
xor
dec
enter
loop
pop
iret
jmp
dec
test
cmp
lahf
sub
jge
mov
pop
in
push
pop
repz
mov
mov
out
scas
push
mov
dec
icebp
sbb
dec
int3
adc
imul
sub
xor
loop
adc
push
pop
xchg
rol
pop
jno
fs
(bad)
lods
jne
push
das
jno
cmp
xor
cmps
das
xchg
xchg
js
sub
or
xlat
ins
mov
adc
push
pop
adc
mov
ret
in
stc
xchg
xlat
sbb
dec
fmul
jmp
push
xchg
js
call
xor
mov
push
loope
inc
jb
(bad)
lods
js
and
xchg
mov
adc
in
rcl
jb
outs
jecxz
pushf
stc
adc
sub
call
test
je
leave
sub
fimul
push
push
imul
shr
dec
jno
and
ss
loope
adc
sub
jo
xchg
repz
sub
outs
jmp
repz
sub
xor
push
xchg
jns
sub
jae
adc
mov
shr
jl
(bad)
ror
loop
pop
es
cmc
out
js
iret
xchg
repz
sub
jae
and
or
jae
pop
retf
rcl
imul
dec
test
(bad)
sahf
push
(bad)
and
daa
retf
ret
test
and
retf
lods
ret
not
dec
jecxz
dec
mov
out
xchg
rcr
loopne
enter
or
xchg
push
addr16
jbe
pop
mov
(bad)
sbb
adc
or
mov
or
jne
in
xchg
out
inc
mov
lods
inc
jmp
cmp
iret
jle
push
scas
jg
rcl
push
shr
gs
push
inc
addr16
push
cmp
push
lods
mov
mov
in
ss
imul
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
lods
xchg
xchg
push
dec
mov
push
jge
inc
adc
or
xchg
sbb
lock
sti
jo
scas
mov
inc
sub
dec
retf
mov
mov
and
repz
aam
sub
xchg
popa
ins
xchg
in
dec
mov
adc
jmp
mov
in
aam
icebp
push
imul
jmp
xlat
fldenv
mov
ins
or
mov
ins
or
(bad)
lods
js
push
jnp
adc
data16
and
dec
mov
rcl
and
push
jne
mov
jge
push
adc
jg
xchg
jae
sub
retf
xchg
mov
push
mov
arpl
in
xchg
pop
retf
push
mov
cmp
das
imul
push
or
gs
mov
mov
cwde
dec
jmp
loop
out
dec
xlat
mov
cmp
push
xchg
js
movs
xchg
jae
sub
jo
jae
push
push
imul
jecxz
ins
push
adc
xchg
jae
sub
retf
jmp
ins
mov
pop
jmp
push
aaa
shr
sbb
push
(bad)
push
repnz
dec
es
push
imul
push
jmp
imul
dec
lock
std
mov
pop
repnz
repnz
repz
stc
xchg
mov
xchg
mov
xchg
xchg
rol
repz
jns
call
mul
mov
pop
fstp
rol
mov
adc
push
and
lods
lock
mov
pop
fild
push
clc
pop
in
and
mov
test
mov
pop
sar
and
rcr
mov
sub
sbb
les
jmp
cmp
rol
mov
mov
lock
push
jns
repz
(bad)
jg
fsub
shl
or
mov
adc
fld
rol
fild
push
clc
pop
in
and
mov
test
pop
mov
xchg
mov
jmp
movs
mov
shl
push
push
call
scas
push
js
pop
jo
and
retf
cmc
push
sahf
loope
iret
pop
sbb
jae
(bad)
push
jo
(bad)
and
mov
or
retf
mov
sub
pushf
clc
repz
rol
mov
mov
fs
mov
fs
in
fs
mov
fstp
rol
test
push
add
imul
shl
(bad)
in
pop
retf
imul
push
push
mov
fsub
jb
repnz
fild
mov
push
in
(bad)
add
push
jns
jae
fdiv
xor
mov
xchg
fsub
jb
imul
push
in
(bad)
push
sbb
call
mov
lock
mov
mov
mov
inc
push
(bad)
out
js
mov
mov
(bad)
inc
pop
adc
mov
push
push
shl
test
xchg
cs
push
and
into
movs
fstp
rol
sbb
inc
pop
sub
and
xchg
arpl
pop
adc
adc
mov
mov
(bad)
mov
clc
mov
in
(bad)
in
pop
jmp
aaa
xor
pop
lods
mov
es
dec
add
push
dec
test
in
clc
push
movs
shl
mov
xlat
ins
or
xlat
test
mov
leave
js
mov
push
movs
push
ins
mov
xlat
sahf
pop
jecxz
xor
in
xlat
xchg
push
xor
bound
dec
ja
mov
and
mov
pop
out
dec
jo
dec
test
retf
mov
aam
call
pop
shl
or
adc
out
xor
mov
nop
mov
stc
mov
iret
push
mov
xchg
ins
or
lea
sub
add
dec
dec
aas
inc
push
push
push
xchg
repz
sub
adc
cwde
mov
sub
mov
pop
outs
dec
push
in
sbb
rep
ror
in
repz
cmp
xlat
in
clc
xchg
xlat
ins
mov
xlat
iret
int
mov
int
mov
in
retf
scas
fcmovbe
push
and
lock
vmovshdup
in
xor
iret
int
mov
in
stc
adc
xchg
push
test
jne
mov
push
or
xchg
mov
adc
cwde
xchg
push
sub
push
ja
icebp
repz
xchg
pop
retf
aaa
retf
and
or
shl
push
mov
sbb
ja
jne
retf
or
jae
mov
adc
pushw
sbb
xor
dec
mov
push
adc
int3
loop
repnz
push
outs
(bad)
scas
aad
(bad)
stos
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
pop
pop
add
les
inc
mov
and
pop
data16
in
or
mov
adc
mov
data16
and
jne
pusha
adc
mov
xchg
mov
inc
add
sti
pop
pop
add
les
icebp
int
or
and
jne
pusha
adc
mov
and
push
out
sti
test
and
push
out
iret
test
sbb
jo
mov
jne
pusha
adc
mov
pop
cmc
test
xchg
mov
inc
xchg
mov
inc
add
sti
pop
xchg
or
inc
loope
jo
and
add
and
push
in
sti
test
and
push
in
iret
test
sbb
jo
mov
mov
inc
cmps
or
les
aas
sti
into
icebp
imul
and
and
or
ret
movntq
or
inc
adc
add
mov
mov
pop
pop
add
les
inc
cmp
mov
add
and
push
in
mov
add
les
scas
xor
or
adc
les
sti
into
adc
and
test
mov
pop
pop
add
les
push
daa
fmul
mov
pusha
and
add
test
and
mov
pop
nop
xor
test
sti
into
loope
and
and
add
and
mov
ret
psubq
add
les
lds
xor
inc
mov
cmc
and
into
test
and
pushf
fsub
adc
inc
and
and
cs
lahf
ins
mov
imul
ins
or
xlat
jle
mov
sub
xchg
push
lods
xchg
add
dec
mov
push
cmp
mov
sbb
mov
scas
xor
test
push
sar
cmc
test
dec
adc
fisubr
mov
scas
mov
pop
sub
cmp
pop
cmp
jmp
push
mov
arpl
ins
add
shr
je
jae
mov
or
lock
push
fdivr
jmp
cmp
imul
aaa
or
or
in
xchg
xlat
nop
jns
iret
push
mov
xchg
adc
ins
mov
add
push
mov
outs
sub
ins
mov
mov
arpl
adc
sub
xchg
ins
cmps
dec
adc
retf
cmp
stc
imul
icebp
adc
jmp
sub
mov
mov
jne
arpl
cmp
push
in
xor
xchg
stc
lods
gs
mov
cvttps2pi
nop
stc
ds
mov
mov
test
in
sar
fwait
push
repz
xor
adc
(bad)
push
je
mov
xchg
push
nop
js
and
int
imul
mov
or
sub
adc
loopne
pop
movs
loopne
pop
movs
loopne
pop
movs
loopne
pop
movs
loopne
pop
movs
loopne
pop
movs
loopne
pop
movs
loopne
pop
movs
loopne
pop
movs
loopne
pop
movs
loopne
pop
movs
loopne
pop
movs
loopne
pop
movs
loopne
pop
movs
loopne
data16
pop
and
adc
jl
jo
cmc
xor
clc
or
inc
add
push
fdiv
dec
xor
ss
xor
xor
nop
jne
loopne
jge
leave
adc
leave
nop
js
leave
nop
jnp
ret
nop
jge
(bad)
nop
jg
loopne
jns
(bad)
nop
jbe
retf
and
adc
leave
nop
js
leave
nop
jnp
ret
nop
jge
(bad)
nop
add
and
bound
hlt
and
hlt
pusha
mov
inc
jns
cmp
test
fs
mov
loopne
fisttp
mov
sub
or
test
cmp
in
ins
sbb
les
cmp
xchg
in
fbld
lds
xchg
aam
fild
bound
sti
cs
jl
and
mov
pop
and
ss
mov
or
movs
aad
pop
ror
adc
les
ja
les
pop
push
mov
cmp
and
xchg
rcl
mov
loop
push
xchg
pusha
xor
lds
sti
cmc
bound
movs
enter
loopne
sti
mov
pop
adc
les
cmp
lock
sub
out
mov
lds
pop
xchg
rcl
mov
loop
push
xchg
pusha
xor
lds
sti
cmc
adc
aam
and
xor
aad
pop
movs
clc
sbb
loopne
and
mov
mov
inc
loopne
push
movs
aam
pop
movs
loopne
in
pop
push
rol
adc
aam
pop
movs
loopne
push
loopne
ds
nop
push
push
les
sub
pop
xchg
rcl
mov
call
xor
lds
sti
cmc
outs
xor
aad
pop
movs
clc
sbb
loopne
and
sbb
and
pop
nop
loopne
push
movs
aam
pop
movs
loopne
in
pop
push
int
pusha
adc
les
pop
movs
call
(bad)
fld
addr16
les
pop
movs
call
(bad)
fld
addr16
les
out
test
out
push
pop
movs
push
movs
in
and
imul
xor
pushf
addr16
pop
cli
mov
xor
enter
ror
mov
and
lds
gs
stos
jne
pop
shl
pop
movs
push
and
and
imul
xor
in
addr16
jnp
fcom
movs
aam
lds
bound
rcr
rol
loopne
sti
cmp
add
pop
cli
fs
and
sub
add
inc
movs
loopne
ret
inc
and
xchg
sti
mov
and
mov
fisub
mov
jae
and
adc
les
pop
movs
call
and
mov
adc
inc
ret
nop
cmp
rcl
pop
and
and
pusha
aad
cmp
bound
aad
pusha
xor
bound
ins
pop
movs
mov
inc
movs
push
call
popa
jae
and
sbb
fsub
(bad)
cmp
pop
nop
jmp
div
pop
and
and
loopne
ffreep
loope
(bad)
xchg
pusha
nop
ins
cmps
fdiv
imul
pop
xchg
out
in
pop
push
mov
aam
pop
movs
loopne
push
xchg
pusha
xor
lds
sti
cmc
jp
inc
movs
push
xor
xchg
addr16
popa
dec
pusha
nop
movs
loopne
inc
jbe
nop
sahf
es
repz
lods
ins
xor
mov
es
sbb
les
pop
and
imul
and
and
and
xchg
pop
adc
aam
pop
movs
loopne
push
loopne
ds
nop
push
push
les
xor
pop
xchg
rcl
mov
loop
push
xchg
pusha
xor
lds
sti
cmc
jbe
inc
movs
push
xor
cmc
addr16
popa
dec
pusha
nop
movs
loopne
cmp
adc
les
sti
test
movs
dec
nop
sahf
les
sti
cs
push
dec
and
nop
cld
les
sbb
xchg
sti
ds
imul
(bad)
push
xor
xchg
addr16
clc
in
jo
cdq
xchg
mov
cmps
ja
lds
addr16
popa
dec
pusha
nop
movs
loopne
cmp
adc
les
sti
test
movs
dec
nop
sahf
les
sti
cs
push
dec
and
nop
cld
les
sbb
xchg
sti
ds
imul
(bad)
push
xor
cwde
addr16
clc
in
jo
cdq
xchg
mov
cmps
ja
rcl
add
pop
inc
xchg
xchg
cmp
nop
(bad)
and
xchg
sti
es
and
and
out
and
xchg
sti
cmc
dec
cwde
inc
and
and
or
xlat
ins
mov
pop
ins
sbb
repz
mov
mov
aam
out
stos
push
mov
mov
sahf
(bad)
cmp
arpl
popf
jo
ins
pop
and
scas
lods
jne
sub
jae
push
ins
mov
addr16
mov
clc
sub
push
adc
lock
out
cmp
mov
clc
xlat
xchg
adc
and
(bad)
jae
adc
in
int
xlat
sbb
push
in
int
xlat
push
sub
mov
data16
out
or
push
arpl
xchg
adc
adc
sub
rcl
ins
mov
leave
add
imul
jo
push
add
adc
mov
aad
lods
js
xor
xchg
adc
mov
mov
ins
push
sbb
mov
push
jecxz
adc
dec
loope
adc
xlat
inc
ins
retf
movs
pop
or
or
mov
test
leave
push
retf
repz
pop
xor
jecxz
nop
outs
cmp
sub
leave
rcl
or
dec
leave
stos
xchg
jns
sub
push
test
cs
add
aaa
lock
and
js
mov
jae
sub
ss
sub
push
push
and
into
retf
pop
repz
mov
adc
mov
dec
mov
pop
mov
arpl
cmp
adc
sub
jmp
xchg
into
aas
leave
sub
lahf
push
sbb
fcmovu
push
xor
push
lahf
push
sbb
mov
shl
stos
loopne
push
xor
(bad)
outs
adc
fist
mov
sbb
mov
data16
popf
mov
xchg
xchg
add
xchg
rol
(bad)
xor
sbb
daa
call
retf
adc
es
lods
jae
inc
adc
mov
jno
movs
ror
adc
pop
pop
xor
mov
jmp
rcr
ret
adc
push
fnsave
mov
jmp
rcr
push
lahf
push
pushf
push
jge
push
pusha
pop
adc
rcr
retf
adc
daa
js
lahf
push
sbb
fcmovu
push
xor
adc
xchg
mov
pop
mov
mov
fst
call
ins
adc
inc
inc
add
xor
shr
cmps
push
add
xchg
mov
cmps
cmc
and
push
(bad)
inc
jge
adc
sbb
lods
inc
fimul
inc
add
push
dec
rcl
inc
sbb
retf
xchg
cmps
(bad)
jge
adc
sub
ins
mov
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
push
xrelease
in
mov
push
lods
xchg
xchg
push
dec
mov
pop
jl
dec
out
retf
or
xchg
sbb
xchg
(bad)
xor
(bad)
scas
lods
cmc
clc
push
shl
test
and
imul
(bad)
stos
ins
rcl
sub
and
adc
das
leave
icebp
bound
lods
retf
mov
jmp
push
mov
dec
into
in
mov
push
add
ins
mov
ins
or
xlat
cs
push
pop
push
push
pop
sub
arpl
xchg
mov
sbb
loope
leave
ror
rcl
mov
xor
jne
mov
mov
sbb
xchg
int
xlat
lods
clc
cmc
push
pop
lock
or
mov
push
mov
mov
imul
xor
dec
sub
push
xchg
xlat
loope
or
lea
or
stc
xchg
xlat
xor
test
mov
push
cdq
cmp
imul
into
ror
push
lods
jo
inc
sbb
jmp
lods
jo
pop
sub
imul
xchg
jae
je
push
imul
je
jecxz
xchg
jae
jno
jae
and
push
test
stc
pop
or
movs
mov
jmp
test
dec
lods
iret
jno
outs
sbb
jmp
stos
call
sub
out
sub
imul
gs
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
call
fwait
mov
data16
sbb
aas
outs
shl
call
pop
cmp
dec
xor
ja
xchg
js
pop
push
je
cmp
nop
and
sbb
fs
ds
out
nop
nop
pop
jg
call
and
push
fiadd
in
in
sub
mov
adc
in
push
mov
pop
out
nop
aam
mov
das
das
fdiv
sbb
adc
test
push
push
dec
cs
repz
imul
je
aas
outs
out
sub
sbb
aas
sbb
out
iret
push
test
push
shr
cs
sbb
push
shr
cs
repz
sub
fdiv
call
clc
pop
inc
jnp
push
xor
pop
ss
out
cmps
in
call
push
add
cs
call
push
sbb
pop
ss
out
cmps
in
call
push
add
cs
call
push
add
push
in
and
clc
pop
sbb
clc
sbb
call
out
and
fwait
sbb
add
repz
sbb
add
fdiv
sbb
sub
sbb
xlat
mov
in
fbstp
xchg
js
sbb
scas
clc
pop
pop
pop
push
pop
das
pop
ins
sbb
nop
inc
jg
sbb
add
xlat
inc
sbb
repz
sbb
and
sub
in
sub
ds
fwait
nop
gs
sub
ds
fwait
nop
out
iret
push
test
push
shr
cs
sbb
push
shr
cs
repz
sub
fdiv
adc
fcom
ficomp
call
push
xlat
aad
outs
shl
sbb
cld
dec
out
and
fwait
mov
sub
outs
fcomip
fwait
mov
sub
in
repz
fcom
pop
fadd
push
sbb
ins
xlat
sbb
xlat
test
or
sbb
sbb
imul
test
push
ficomp
(bad)
in
lahf
ds
inc
cdq
in
mov
cdq
outs
imul
sbb
les
in
in
lahf
ds
inc
cdq
in
mov
cdq
jmp
sub
sbb
aas
ds
mov
das
pop
loop
das
pop
loop
fild
fwait
cmp
and
sahf
mov
int
cdq
and
cwde
clc
int
nop
push
push
in
push
out
gs
sub
or
xchg
sub
pop
fcomp
sub
test
mov
push
sbb
mov
int
fimul
test
das
pop
loop
leave
out
sub
call
or
pop
xlat
(bad)
cwde
dec
push
fstp
je
aas
mov
(bad)
repz
fmul
test
fadd
ds
xchg
out
iret
push
test
outs
push
fstp
pusha
push
fstp
ins
add
(bad)
sub
in
bound
sbb
jecxz
sub
inc
out
sub
xchg
clc
push
or
inc
xlat
mov
fdiv
vmovaps
aam
push
mov
nop
pop
push
in
push
loop
mov
imul
sbb
cs
out
and
fwait
mov
sub
outs
fcomip
fwait
mov
sub
in
repz
ds
test
pop
jecxz
nop
and
call
pop
fstp
test
cwde
in
xchg
jns
fwait
mov
sbb
push
pop
outs
cld
mov
in
clc
aad
or
sbb
clc
aad
cwde
cs
sbb
aad
adc
mov
pop
aas
xchg
repz
pop
pop
mov
lahf
js
imul
leave
xchg
push
sbb
push
leave
pop
sub
push
ins
mov
xlat
adc
aad
jge
push
ins
sar
adc
fdivr
jno
retf
and
mov
and
repnz
push
pop
pop
dec
in
push
nop
imul
or
ja
sahf
leave
dec
imul
nop
int
clc
push
cmp
mov
inc
ins
mov
xlat
xor
(bad)
push
xchg
int
gs
test
retf
jae
rcl
mov
mov
mov
jg
int3
sar
sti
icebp
mov
xor
in
cwde
add
sub
sub
xlat
xchg
stc
fimul
xchg
or
push
sbb
xor
mov
push
mov
mov
lock
jns
pavgw
fcomi
js
xchg
jae
ins
mov
jmp
or
push
(bad)
test
xor
sbb
xchg
jae
sub
sbb
fdiv
mov
xchg
push
jb
ins
mov
xlat
(bad)
push
call
and
rcl
add
push
and
push
jecxz
xchg
jns
sub
shl
xchg
push
jmp
outs
(bad)
scas
sub
scas
aas
dec
les
mov
pop
dec
and
aas
pop
(bad)
lods
xor
sub
dec
inc
and
inc
inc
scas
mov
dec
and
hlt
jbe
or
push
push
or
add
jns
adc
(bad)
or
mov
hlt
test
fs
mov
data16
jmp
mov
not
hlt
test
or
sbb
jbe
or
jbe
or
jmp
or
jbe
pusha
ja
push
cmp
jle
xchg
div
ret
movs
sub
in
div
adc
mov
xor
pushf
ja
xor
sbb
not
or
jae
mov
je
push
or
dec
je
or
adc
sub
je
outs
xchg
(bad)
jnp
xchg
push
jbe
xchg
nop
je
cdq
sub
rcl
and
loope
sub
jae
xor
or
mov
dec
cmp
lods
xchg
loopne
dec
mov
xor
test
xchg
adc
aaa
mov
xor
imul
jo
push
sbb
mov
adc
jecxz
push
xor
in
jmp
sub
or
mov
sbb
imul
jns
sar
sub
arpl
ret
xchg
mov
adc
xchg
jae
sub
int
and
push
lods
jo
inc
leave
stc
adc
les
or
add
jo
shr
lods
icebp
std
idiv
test
stos
or
push
mov
or
jecxz
adc
push
jl
ja
mov
pop
stos
xchg
push
adc
mov
xlat
outs
in
dec
rcl
sub
scas
mov
retf
mov
imul
lods
jo
push
mov
mov
xchg
cs
dec
xor
mov
push
xlat
mov
aad
dec
push
push
fs
or
mov
mov
(bad)
shr
mov
sub
dec
push
jmp
outs
xchg
jae
jp
push
imul
std
sbb
or
clc
scas
call
int3
dec
call
sbb
in
push
mov
sub
mov
bswap
repz
das
sbb
test
ins
adc
cmp
adc
pop
jbe
xchg
bnd
mov
outs
inc
hlt
mov
xchg
add
and
call
push
aad
ror
cs
push
pop
(bad)
xor
push
mov
pop
lds
lods
and
in
inc
inc
shl
inc
pop
mov
jae
mov
push
(bad)
dec
push
jge
shl
retf
hlt
das
mov
leave
hlt
das
mov
arpl
lahf
adc
ret
adc
fld
push
popa
inc
test
mov
jbe
and
jbe
and
enter
jne
fistp
not
sahf
xor
jmp
je
mov
fist
mov
rcr
jge
push
pop
sbb
das
sub
hlt
mov
cmc
rcr
aad
push
push
movs
hlt
das
pop
arpl
das
sbb
hlt
push
cmp
lods
xor
out
mov
arpl
mov
mov
out
jno
shl
mov
lahf
mov
not
in
cmps
xchg
xlat
sub
shl
cmc
xchg
adc
shl
ins
mov
xlat
test
lock
ins
mov
xlat
pop
lea
(bad)
ins
clc
add
xchg
jae
imul
or
add
in
repz
xlat
xchg
push
lods
sub
jmp
aad
clc
add
xchg
jae
imul
mov
arpl
int
xlat
xchg
dec
adc
or
fs
and
xchg
mov
xor
xchg
push
dec
mov
inc
sbb
in
or
xchg
sbb
jmp
cs
sbb
mov
repz
popf
inc
or
and
in
xchg
xlat
xchg
int3
xlat
add
adc
push
popa
out
jae
sub
pop
jb
push
jmp
lods
ins
or
xchg
cwde
repnz
ss
jns
mov
nop
clc
addr16
ins
mov
xlat
inc
mov
imul
out
push
xlat
mov
repz
fidiv
jecxz
cdq
outs
jecxz
in
stc
xchg
xlat
inc
rcl
sub
stc
xchg
xlat
out
push
cwde
iret
ret
icebp
mov
or
int
and
jne
aad
push
pop
repz
mov
xor
xlat
retf
cmc
(bad)
in
push
into
ins
push
imul
stc
loop
adc
test
xchg
stc
push
xchg
outs
xlat
addr16
mov
movs
mov
mov
jecxz
ins
push
pop
repz
jae
sub
dec
sahf
fdiv
push
leave
dec
imul
xchg
jmp
xor
repz
mov
lods
jns
in
xchg
push
sbb
fnsave
xchg
sbb
sub
push
push
mov
or
arpl
div
or
xchg
shl
and
lock
scas
lods
jne
sub
push
cld
and
or
mov
iret
int3
mov
or
push
or
test
lods
das
(bad)
jae
test
lods
das
(bad)
mov
mov
mov
sub
mov
push
fwait
sub
mov
sbb
mov
xchg
pop
shr
(bad)
or
xor
xchg
sub
push
jmp
ror
in
add
test
dec
aaa
dec
xor
or
mov
or
sub
mov
jge
xchg
dec
jbe
das
(bad)
or
xor
xchg
sub
push
jmp
ror
in
pop
bound
xchg
or
pop
sub
ins
into
mov
mov
stos
stos
andps
mov
mov
int
(bad)
push
dec
adc
ins
mov
stos
aam
pop
retf
lods
xor
lea
mov
retf
lods
push
push
aad
pop
mov
mov
mov
retf
lods
push
push
dec
scas
das
push
hlt
scas
or
mov
(bad)
jg
and
xchg
push
ror
aam
in
adc
dec
xor
xchg
or
sub
cmc
adc
mov
scas
xor
or
mov
cmp
pop
or
and
and
xchg
dec
or
ins
mov
ja
sub
movs
jmp
ja
add
or
call
(bad)
sub
hlt
xor
(bad)
mov
or
sub
or
into
je
scas
sub
ja
add
adc
jne
scas
or
add
or
and
sub
psubsb
push
or
xor
jne
lods
and
psubsb
push
lea
into
je
lods
sub
psubsw
pop
mov
hlt
adc
mov
scas
sub
or
lea
mov
sub
or
mov
adc
adc
or
xor
mov
mov
mov
add
xor
aad
sub
(bad)
fisttp
adc
in
jae
mov
or
xchg
mov
xor
mov
retf
lods
xor
lea
test
or
popf
push
push
sub
or
or
push
(bad)
mov
into
dec
mov
das
(bad)
or
retf
mov
mov
into
jne
lods
and
push
lea
mov
jbe
mov
cmps
stos
or
sub
mov
or
hlt
pop
jbe
pop
jbe
retf
xor
mov
retf
shl
fisttp
adc
adc
or
push
retf
ror
call
retf
lods
mov
or
add
adc
or
xor
mov
mov
mov
add
xor
aad
sub
(bad)
fisttp
adc
in
jae
mov
or
mov
outs
and
push
jl
sub
cmp
push
mov
or
cmp
mov
jmp
cdq
jb
sub
push
in
pop
or
das
dec
mov
lods
sbb
adc
or
(bad)
or
mov
sbb
mov
and
lods
pop
(bad)
std
xchg
or
sbb
mov
bound
dec
adc
call
mov
and
or
sub
pop
leave
out
mov
test
(bad)
fs
and
or
mov
mov
xchg
dec
or
(bad)
aad
(bad)
cli
repz
imul
in
or
jne
pushf
push
mov
jmp
arpl
mov
repz
out
dec
(bad)
cs
jno
jp
mov
mov
mov
fisubr
or
mov
icebp
or
cs
jnp
fisttp
test
and
dec
imul
(bad)
push
arpl
(bad)
push
(bad)
out
adc
stc
sub
je
push
or
or
xchg
sbb
retf
out
mov
sbb
sub
jns
mov
mov
sub
xchg
in
(bad)
pop
mov
jecxz
ins
rol
repz
pop
inc
mov
arpl
jns
push
(bad)
stc
push
or
inc
test
ret
dec
sbb
dec
shl
daa
ins
ss
dec
es
mov
loop
in
push
add
push
jae
in
push
jecxz
enter
ins
or
sbb
push
mov
sahf
push
retf
es
stc
push
push
ret
jae
adc
popa
imul
test
imul
sub
retf
cld
scas
sub
xchg
jae
dec
push
push
imul
sbb
imul
div
rol
jns
scas
xor
xor
lock
imul
sub
dec
imul
shr
(bad)
mov
es
js
and
in
shl
sbb
jmp
pushf
out
push
imul
out
lods
cmps
gs
in
loope
xchg
push
sti
fisubr
cmps
pop
call
jmp
fist
es
lods
arpl
sub
adc
fistp
(bad)
fist
fsub
adc
cmps
fist
call
push
out
or
and
int
ja
pop
es
jno
loop
int
sub
shl
xor
int
repnz
xchg
sbb
call
shr
fst
test
xchg
jae
pusha
outs
or
mov
mov
xlat
ins
mov
xchg
jle
cdq
jecxz
sub
sub
clc
sub
repnz
rcl
push
scas
cmps
push
shr
jns
xlat
cmp
mov
out
(bad)
or
xchg
jl
pop
xchg
dec
pop
jg
pop
out
and
mov
and
mov
jns
test
cs
sub
mov
xor
imul
daa
mov
or
cmc
retf
call
das
jno
mov
xchg
js
sub
loop
cdq
cwde
retf
dec
repz
mov
xchg
dec
xchg
sbb
out
xchg
xlat
clc
sub
cmps
rcl
push
jg
xchg
or
jmp
sub
jmp
jne
xchg
sub
das
ins
and
push
imul
or
xlat
test
retf
add
rcl
push
outs
push
xlat
mov
lock
mov
clc
test
sbb
rcl
and
lock
lods
jo
dec
scas
cmp
push
xchg
push
imul
ins
imul
xchg
dec
imul
xchg
jae
jbe
or
push
enter
cwde
add
out
xor
(bad)
cld
sbb
push
push
xor
and
dec
(bad)
out
in
imul
scas
jmp
imul
mov
sub
mov
jmp
jb
jae
mov
xchg
shl
pop
(bad)
(bad)
fsubp
test
sbb
repz
fdivr
ds
sahf
xchg
rol
add
out
outs
addr16
loopne
rcl
mov
xchg
call
imul
cld
call
cmp
jb
push
mov
fstp
add
out
fwait
addr16
and
cdq
mov
jo
pushf
call
popa
retf
mov
mov
call
cdq
fsubp
sbb
xlat
xchg
and
sub
mov
aad
cmps
xchg
xlat
sub
shl
dec
repnz
or
cmc
in
mov
into
sbb
jg
xchg
cmc
xchg
push
adc
cmc
in
or
xlat
sbb
test
ins
or
xlat
mov
sbb
xchg
ss
out
push
repz
mov
not
ins
mov
xchg
arpl
addr16
xchg
int
sub
mov
push
push
mov
jae
icebp
xchg
and
or
xchg
push
shr
jns
xlat
jge
xchg
jl
ficom
mov
dec
add
jne
jmp
push
ins
jo
xchg
frstor
(bad)
scas
mov
imul
imul
leave
jmp
mov
adc
and
sar
cs
or
xlat
jno
retf
jmp
mov
xchg
xlat
xchg
adc
and
in
mov
jmp
jo
adc
ins
mov
inc
in
in
push
and
bound
sti
sub
cs
rcl
mov
xchg
repz
sub
and
cwde
or
lods
js
jl
fst
out
xor
loop
inc
and
xchg
or
test
sub
jns
(bad)
xor
inc
(bad)
ins
mov
xor
and
push
adc
sub
or
jp
or
push
leave
jae
xchg
xor
imul
xor
adc
jae
mov
outs
push
xlat
mov
repz
sbb
adc
sub
cmp
xchg
adc
imul
sub
cmps
push
add
ret
sub
adc
jns
xor
in
jge
push
in
imul
inc
gs
imul
jno
sbb
je
mov
popa
lea
cwde
lods
call
cdq
enter
cmp
(bad)
ficomp
xchg
jae
outs
sub
jge
sbb
rcl
push
(bad)
push
ins
or
xlat
sar
aad
cwde
xchg
push
xchg
rcr
retf
into
cmc
adc
out
nop
int3
pusha
sbb
outs
fcom
and
repz
popf
push
xor
ins
adc
sbb
mov
xor
xchg
and
jae
mov
xchg
xchg
ret
imul
mov
inc
je
cmp
rcl
sub
dec
ja
push
push
mov
or
xchg
sbb
retf
ins
in
dec
push
push
push
jmp
ins
mov
jns
mov
mov
jo
ins
rcl
push
mov
pop
xor
inc
mov
jecxz
xchg
shl
inc
ins
mov
xlat
into
push
arpl
adc
push
xor
mov
arpl
adc
sbb
jecxz
or
jge
sub
jns
and
mov
test
add
repz
mov
xchg
ins
xchg
jae
or
js
fist
push
xlat
mov
repz
outs
push
push
mov
mov
push
sub
sub
or
xchg
jae
jbe
dec
imul
xchg
dec
imul
leave
push
retf
aam
int3
imul
xchg
cmp
adc
pop
stos
xor
rcr
push
mov
jne
mov
jne
mov
jne
iret
in
ret
das
jg
(bad)
mov
push
mov
push
aam
in
ret
das
jae
(bad)
shl
aam
jb
ret
das
stos
push
mov
jne
scas
in
push
mov
push
mov
jne
or
addr16
xchg
in
jo
cmp
dec
mov
mov
dec
addr16
(bad)
das
sti
icebp
aaa
mov
push
or
or
mov
in
pusha
mov
jne
hlt
out
(bad)
das
push
push
(bad)
in
stos
dec
sbb
(bad)
das
push
push
gs
push
and
push
mov
ja
sbb
push
mov
cmc
adc
div
or
jne
mov
(bad)
push
push
xchg
aam
jb
aam
in
xchg
mov
(bad)
push
mov
jne
dec
movs
pop
ret
das
jae
(bad)
shl
aam
jb
ret
das
jnp
outs
mov
outs
mov
call
mov
push
mov
retf
loop
mov
int3
or
jo
test
enter
int3
or
cmc
jo
lahf
loop
hlt
xchg
imul
or
dec
sub
pop
stc
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
sub
shl
outs
mov
in
(bad)
loop
adc
xchg
pop
sub
xchg
jae
lods
ins
mov
xlat
lahf
mov
not
cmc
sub
inc
call
shr
jns
xlat
inc
fcom
cmp
(bad)
scas
sub
mov
clc
test
mov
rcl
jns
push
dec
daa
cwde
xchg
jmp
jo
or
jbe
push
xchg
clc
in
ins
or
xlat
retf
or
rcl
sub
jl
into
out
stc
imul
mov
push
mov
sub
in
jns
hlt
out
jns
iret
or
sbb
in
int
xlat
shl
push
mov
pop
push
or
mov
xchg
lods
js
push
xchg
mov
cwde
outs
sub
hlt
test
shl
pop
loop
nop
jns
test
mov
dec
stos
fwait
push
imul
sub
loopne
push
ins
push
dec
push
dec
hlt
ins
shr
dec
mov
sbb
repnz
lods
jo
push
in
jns
jmp
xchg
jae
js
js
mov
or
dec
push
or
and
cdq
retf
xor
js
not
and
sub
ins
or
into
xchg
push
xor
ja
lods
cmc
xor
shl
jnp
jmp
xor
inc
test
lods
repz
sti
scas
cdq
push
pop
scas
sbb
pop
push
sbb
mov
sbb
xchg
mov
xor
dec
fwait
cmp
scas
sbb
enter
pop
scas
cdq
loop
sbb
sbb
pop
mov
popf
shr
jp
xor
cmp
push
push
out
pop
sbb
sbb
pop
push
cdq
(bad)
xor
sub
(bad)
hlt
sbb
aaa
cs
sbb
add
out
jnp
xchg
dec
sbb
mov
fisubr
scas
cdq
pop
pop
int3
or
add
cmp
call
xchg
xor
sbb
push
jp
in
ss
popf
mov
add
adc
popf
(bad)
add
(bad)
arpl
loop
scas
in
test
xchg
repz
and
(bad)
ficomp
xchg
jae
popa
xchg
dec
push
std
or
fs
sub
push
jge
adc
mov
push
xchg
or
xlat
pop
es
sub
jae
lahf
cdq
imul
adc
add
(bad)
xlat
xor
dec
push
adc
imul
push
add
ja
pushf
jp
push
scas
mov
(bad)
xchg
adc
jno
rcr
cdq
(bad)
ins
sub
xchg
xchg
xlat
pop
icebp
adc
sub
in
xchg
or
(bad)
jo
ins
rcl
sub
adc
ins
rcl
mov
jns
dec
xchg
mov
push
das
or
xchg
cdq
rcl
ins
or
xlat
ins
or
mov
out
push
or
sbb
imul
push
mov
mov
inc
mov
stc
enter
push
or
ss
sub
retf
sbb
sbb
sbb
imul
out
push
xlat
mov
lock
push
push
mov
mov
jecxz
dec
mov
dec
jl
push
fucomp
cld
dec
inc
cmps
int
mov
xor
push
nop
stc
dec
xchg
ins
icebp
mov
adc
jns
int
and
shl
push
dec
or
dec
sbb
push
mov
retf
aas
xlat
jae
and
jno
(bad)
jns
push
cs
jo
popa
outs
xor
inc
lods
adc
rcr
iret
retf
iret
retf
push
stos
pop
pop
dec
test
pop
pushf
iret
retf
pop
xchg
pop
pop
dec
mov
push
outs
dec
les
pop
js
retf
iret
cli
ficomp
jge
fidiv
or
fisubr
iret
retf
scas
push
pop
add
push
pop
fidiv
cmps
fwait
inc
retf
jb
dec
aas
imul
iret
retf
std
fcomp
or
fisubr
iret
retf
dec
jp
stc
lods
push
cmp
iret
dec
(bad)
sbb
retf
dec
mov
fwait
or
mov
add
push
(bad)
sbb
dec
mov
mov
mov
scas
leave
int
and
mov
dec
gs
add
inc
mov
dec
rcr
iret
mov
mov
mov
fisubr
inc
imul
imul
or
stos
push
shr
jns
xlat
ret
pop
test
jne
sub
jno
mov
cs
es
stos
in
int3
xchg
xlat
cmp
jmp
sub
repz
inc
xchg
retf
mov
imul
jmp
cmps
ins
or
xchg
sbb
xchg
xlat
sbb
add
into
ins
push
or
or
shr
dec
repz
sub
mov
adc
cwde
loopne
push
mov
dec
mov
mov
xchg
push
xchg
stc
jmp
sbb
cmp
test
mov
sysexit
stos
and
xchg
mov
xchg
hlt
xchg
jns
lahf
xchg
or
push
sbb
and
xor
out
(bad)
or
xor
pop
out
mov
popf
lock
push
mov
arpl
nop
out
fisub
sub
std
in
sbb
leave
xchg
mov
sbb
xlat
xchg
repz
xchg
xchg
repz
or
stc
xchg
(bad)
push
mov
or
push
xlat
mov
repz
pop
add
or
dec
ins
or
js
rcl
push
push
mov
mov
jecxz
nop
dec
and
shr
imul
rol
mov
add
ins
xchg
xchg
retf
xchg
retf
xchg
retf
push
mov
adc
sub
xchg
retf
push
mov
add
sub
push
sub
les
retf
dec
cli
lods
rcl
retf
xchg
clc
lods
loopne
dec
push
pusha
mov
sub
sub
xchg
retf
add
sub
sub
xchg
retf
movs
fsubr
xchg
retf
adc
in
sbb
dec
bound
iret
lods
pusha
xchg
retf
push
mov
mov
cs
push
imul
dec
and
xchg
jle
ficom
mov
rcl
push
add
inc
les
dec
add
push
shl
les
fldcw
xchg
mov
xchg
or
std
adc
les
outs
or
mov
dec
cmp
lods
xchg
loopne
dec
mov
add
inc
cli
or
adc
xor
sbb
xor
push
scas
mov
inc
sub
dec
dec
frstor
mov
mov
adc
jl
mov
sbb
retf
ficomp
into
popf
inc
xchg
jae
cmps
ins
or
xchg
outs
rcl
into
xor
scas
stos
out
jns
mov
outs
mov
or
(bad)
sub
add
or
mov
cwde
psrlq
xchg
repz
sub
jo
xchg
xor
and
jb
sbb
xchg
push
in
rcl
pop
ins
or
loop
int
and
jns
mov
lods
clc
xchg
push
mov
adc
cwde
fst
dec
xor
mov
xchg
stc
lahf
movs
outs
das
ret
iret
lods
jo
inc
push
push
push
in
mov
movs
int
outs
ja
imul
xchg
sub
loopne
pop
mov
xchg
and
jns
sub
or
mov
xchg
xor
lods
jo
sub
push
push
jmp
xchg
jae
jg
push
imul
xchg
push
push
adc
pop
ja
cwde
int3
mov
mov
arpl
jmp
outs
lods
ins
push
push
stos
in
dec
mov
pop
(bad)
push
push
cmp
(bad)
cmp
pop
adc
mov
xchg
bound
cmp
mov
inc
clc
arpl
or
movs
nop
lds
add
pop
sub
mov
xchg
mov
mov
and
out
pop
xchg
ret
add
mov
mov
mov
imul
out
rcr
add
mov
repnz
or
add
and
inc
je
cmp
add
pop
xchg
and
sub
pop
mov
mov
xchg
mov
iret
dec
and
fcomp
xchg
mov
movs
dec
jmp
stc
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
jge
dec
xlat
mov
clc
les
icebp
das
mov
shr
jns
xlat
imul
mov
dec
pop
push
dec
mov
adc
push
push
clc
ret
jnp
mov
scas
xor
repz
jmp
mov
jmp
mov
mov
push
mov
pop
(bad)
test
or
or
inc
lods
xchg
mov
nop
dec
fst
ins
mov
xlat
jae
retf
lahf
fldcw
and
js
mov
ins
or
xor
push
mov
sbb
push
stos
ja
sbb
xlat
inc
ja
sbb
and
pop
push
xor
dec
mov
push
imul
xchg
js
and
rcl
xchg
repz
sub
cmp
or
adc
dec
sbb
push
js
retf
dec
in
dec
push
jmp
sub
cs
sub
dec
or
dec
push
ins
imul
sahf
imul
nop
xchg
inc
fild
fist
sub
mov
ror
mov
mov
xchg
push
imul
ins
or
mov
lods
js
sub
push
mov
mov
jae
sub
jg
mov
cmps
pop
sub
(bad)
cmc
push
nop
js
stos
xchg
jae
sub
(bad)
lods
jne
sub
shr
dec
outs
das
ss
stos
adc
xor
xchg
call
xchg
call
or
adc
adc
add
call
adc
add
add
adc
adc
xchg
sbb
add
mov
xchg
setno
mov
call
sbb
adc
sbb
and
sahf
adc
pop
in
rcl
pushf
pop
(bad)
in
and
jo
and
pop
fild
adc
cmps
cmp
mov
outs
adc
xchg
xchg
and
pop
adc
add
ds
in
call
adc
ds
sbb
adc
adc
outs
mov
pop
fist
sahf
adc
pusha
sub
cs
xchg
sbb
or
xchg
adc
add
fucomi
sbb
adc
xchg
and
adc
xchg
xchg
sbb
sub
adc
or
call
xchg
scas
or
adc
xchg
movs
push
xlat
xchg
push
movs
sbb
mov
fwait
xchg
xchg
call
outs
in
jmp
xchg
scas
xchg
and
das
xchg
adc
mov
pop
fist
(bad)
add
fisub
and
fst
loop
xor
add
in
and
adc
xchg
adc
rcr
scas
adc
call
mov
lods
inc
nop
scas
mov
and
gs
push
and
sbb
call
xchg
call
nop
scas
xchg
xchg
xchg
cli
xchg
and
gs
push
and
sbb
in
mov
sahf
adc
pusha
sub
jns
movs
xchg
sbb
movs
ins
in
gs
sub
mov
cwde
xchg
adc
cmps
outs
gs
push
and
sbb
push
cmp
in
call
outs
in
fild
scas
xchg
adc
and
adc
add
mov
push
sub
jo
outs
pop
ins
fist
stos
sbb
sbb
xchg
fist
ss
sbb
clc
xchg
movs
jb
adc
sbb
and
mov
gs
push
mov
or
mov
adc
mov
push
mov
xchg
and
pop
out
dec
gs
outs
pop
ins
fist
mov
push
add
popf
xchg
push
xchg
sub
mov
or
xchg
pusha
xchg
xchg
adc
in
fimul
ret
repnz
shl
ins
push
and
(bad)
leave
xchg
push
sbb
bound
or
pop
mov
push
leave
push
ins
mov
xlat
mov
jecxz
lods
cmc
popf
push
(bad)
xchg
lea
retf
mov
fld
adc
inc
ins
mov
xlat
push
cmp
lods
cmc
popa
sub
jae
out
std
cs
scas
sub
repnz
sbb
or
int
mov
cli
sub
or
xlat
mov
retf
pop
call
les
xlat
mov
loop
xchg
dec
pusha
inc
rcl
push
xor
dec
adc
or
mov
in
jns
repz
cli
or
xchg
imul
rcl
ins
ins
or
or
push
mov
xchg
mov
xchg
jae
sub
shr
xor
and
lods
js
push
mov
pusha
sub
xlat
mov
jb
das
sub
jecxz
push
int
mov
or
or
push
jmp
xchg
int
inc
xor
push
adc
dec
xchg
dec
mov
add
or
xchg
jae
ins
add
imul
out
xor
cdq
push
pop
ss
push
imul
or
pop
mov
xor
adc
scas
cwde
xchg
repz
test
dec
inc
(bad)
mov
jnp
add
mov
jecxz
in
clc
xchg
xlat
xchg
repz
mov
sub
jae
add
jae
cs
jae
jo
cmp
imul
mov
mov
scas
sbb
ins
xchg
outs
or
lods
mov
add
mov
call
and
imul
mov
sahf
mov
or
jmp
sub
xchg
jmp
je
jg
or
jae
push
int
sti
inc
or
cmc
lahf
cmps
mov
xchg
shl
mov
mov
push
jle
dec
xor
xor
xchg
push
jmp
mov
imul
or
add
mov
(bad)
stc
mov
mov
jnp
dec
popf
scas
xchg
test
dec
add
xchg
jmp
test
retf
cmp
mov
mov
inc
or
repz
hlt
movs
mov
or
jmp
adc
add
stc
jae
imul
jae
xor
or
mov
mov
(bad)
ins
js
repz
jae
js
push
mul
sbb
xlat
xchg
in
cmp
dec
cmp
fmul
mov
and
ins
sub
push
in
ins
mov
in
push
mul
sbb
not
int
or
pusha
(bad)
xchg
mov
in
jns
xlat
loope
adc
sbb
test
xchg
dec
add
push
xchg
outs
xchg
adc
push
pop
icebp
icebp
repz
mov
(bad)
in
or
int3
fild
pop
imul
movs
test
sub
dec
mov
in
in
xchg
xlat
or
ja
sbb
in
sub
stc
icebp
loope
push
addr16
bound
pop
outs
push
xlat
mov
or
jbe
push
arpl
rcl
imul
mov
push
xchg
js
jl
mov
xlat
outs
or
imul
les
(bad)
out
imul
sub
pusha
(bad)
xchg
mov
push
mov
lods
jo
push
mov
jno
dec
add
call
int3
test
mov
mov
inc
stos
xchg
jns
sbb
in
jns
out
sbb
add
sub
arpl
in
adc
lods
clc
sub
xchg
mov
jbe
aam
jns
(bad)
xchg
jae
or
js
push
xchg
jae
sub
or
xchg
jae
dec
cmp
or
call
push
fs
push
adc
push
jmp
sub
jae
mov
xchg
jae
inc
cld
jno
mov
ror
lahf
loope
inc
sub
test
test
mov
div
xchg
mov
mul
mov
div
xchg
(bad)
push
inc
es
jne
mov
div
xchg
movs
test
xor
ja
cs
mov
xor
ja
xor
add
movs
ja
dec
popa
stc
test
push
add
clc
push
fisubr
test
cld
in
(bad)
aam
adc
sbb
test
xor
shl
and
jp
gs
cmps
into
push
int
xor
div
(bad)
enter
nop
sbb
adc
sub
fiadd
jp
pop
mov
leave
fiadd
inc
push
movs
test
or
test
test
jo
int3
cmps
test
jne
dec
aas
cmp
add
movs
ja
xor
ja
or
xor
ret
pop
or
rol
dec
pop
mov
push
pop
mov
retf
xor
lods
push
mov
mov
jbe
or
or
jbe
adc
and
test
test
xor
test
adc
test
adc
push
pop
xor
movs
mul
adc
fcmovu
push
mov
xor
in
xchg
inc
scas
popa
ins
mov
mov
xor
push
es
fwait
mov
cmc
add
je
aaa
test
ja
ret
add
test
and
test
mov
add
test
icebp
and
test
xor
shld
and
add
shr
xchg
add
xor
xor
shld
out
add
xor
ja
fsub
test
test
add
inc
or
jp
movs
test
test
inc
jnp
mov
mov
ja
ja
mov
push
daa
xor
ja
shl
test
imul
pop
daa
mov
lock
aam
mov
fwait
add
xor
fsub
cdq
add
xor
ja
(bad)
xchg
xor
ja
(bad)
out
add
xor
ja
(bad)
loope
add
icebp
pop
jbe
push
and
inc
pop
popa
fsub
test
cs
pop
cmp
stos
mov
xchg
(bad)
sub
sbb
push
cmps
mov
pop
jbe
push
sub
inc
pop
popa
fsub
jne
mov
mov
(bad)
out
jne
sub
mul
out
pop
les
mov
adc
jp
movs
mul
pushf
(bad)
fild
xor
jmp
movs
ja
or
add
cmps
test
and
rol
div
repz
test
xchg
out
push
push
pop
xor
add
ss
test
xor
push
push
pop
xor
and
daa
adc
add
inc
pop
ja
push
and
test
ja
cmp
test
xor
in
test
arpl
movs
mul
mov
not
es
jne
mov
neg
xor
aam
jmp
inc
mov
cs
mov
xor
ja
xor
in
add
adc
xor
push
es
fwait
mov
cmc
add
mov
div
xor
inc
mov
test
pop
add
es
xlat
and
xchg
adc
mov
xor
lds
ss
test
neg
xor
xor
xor
add
and
mov
xchg
mov
dec
mov
adc
test
adc
iret
movs
ja
int3
inc
add
movs
test
xor
repnz
adc
test
adc
push
pop
mov
lock
adc
pop
adc
test
movs
ja
xor
in
xchg
inc
scas
popa
jge
mov
test
push
mov
aas
aaa
and
test
add
not
xor
lds
ss
test
ja
xchg
movs
ja
xor
xor
xor
add
mov
xor
and
and
mov
add
fadd
iret
movs
ja
int3
inc
add
and
xchg
adc
mov
xor
lds
ss
test
div
xchg
movs
ja
xor
xor
xor
add
and
mov
xchg
rcl
sub
lea
pop
adc
iret
movs
ja
int3
gs
test
mov
mov
inc
jne
retf
xor
sti
ja
mov
xor
pop
push
sbb
mov
ja
xchg
pop
mov
jnp
jp
push
pop
mov
sub
lods
fsubp
sbb
xlat
xchg
dec
cmp
stc
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
jge
dec
xlat
mov
icebp
rcl
dec
scas
mov
xchg
xlat
xchg
(bad)
xchg
stc
mov
push
mov
fistp
test
pusha
jbe
retf
jmp
test
cmp
mov
imul
xchg
xchg
(bad)
scas
xor
push
sahf
leave
imul
sbb
ins
sub
test
xlat
mov
arpl
adc
sub
jno
push
ins
shl
repz
dec
mov
ret
and
dec
push
ins
or
xlat
ins
or
lea
mov
xchg
jl
dec
adc
dec
ins
mov
add
retf
stos
ror
push
push
xchg
js
jo
or
xlat
ins
or
mov
xor
mov
ins
or
xlat
mov
jecxz
adc
movs
dec
or
jae
mov
push
fidiv
arpl
out
jns
mov
scas
lods
or
sub
push
arpl
nop
shr
xlat
loop
dec
xlat
sbb
ins
push
fist
pushf
fbstp
mov
ins
push
ins
mov
xor
mov
or
xchg
out
mov
sub
icebp
rcl
dec
(bad)
lods
push
or
push
imul
xchg
jae
pusha
xor
imul
adc
jbe
xor
sub
inc
retf
jnp
int
and
adc
xchg
js
sub
mov
inc
sub
shr
mov
call
cmp
call
outs
and
out
push
sahf
xor
push
sahf
xor
push
sahf
xor
push
sahf
xor
push
sahf
xor
push
sahf
xor
push
sahf
in
out
push
push
mov
push
sahf
xchg
dec
dec
mov
adc
xlat
xchg
sbb
clc
xor
push
ds
xchg
dec
dec
mov
(bad)
jmp
push
sahf
mov
push
jge
adc
pop
inc
aad
adc
stos
xor
push
xchg
out
arpl
or
adc
bound
adc
dec
sub
or
jmp
stos
in
test
dec
xchg
adc
fs
adc
jg
adc
test
jo
push
adc
jae
mov
dec
mov
jmp
stos
jb
movs
mov
jmp
cmp
arpl
cmp
adc
outs
jae
pop
pop
test
add
jae
mov
pop
sahf
cwde
adc
or
mov
push
stos
les
ins
loopne
sbb
mov
stos
repnz
sub
xlat
pop
mov
repnz
sbb
xlat
sub
xor
repnz
retf
out
sbb
pop
cmc
jge
outs
inc
mov
and
imul
xlat
sahf
xor
push
stos
iret
aam
push
mov
fninit
mov
xor
in
xor
push
xchg
dec
inc
test
aas
pop
test
test
sahf
dec
sbb
pushf
nop
dec
and
mov
push
push
iret
xchg
lds
out
arpl
iret
fs
pusha
adc
and
pop
dec
mov
push
adc
sahf
mov
sbb
pushf
test
jae
adc
mov
pushf
les
jae
iret
aas
test
cmp
repz
dec
jmp
jns
jp
and
cmps
(bad)
imul
leave
mov
mov
push
aam
ins
or
xlat
xchg
sbb
out
int3
repnz
jnp
push
push
test
ins
mov
xlat
das
orps
xor
rol
jg
and
mov
jmp
mov
or
lea
mov
xchg
mov
jnp
jo
stc
and
push
push
sub
sub
fst
retf
mov
or
mov
ret
sub
push
xchg
shl
lahf
div
(bad)
shl
repz
jae
mov
or
xchg
dec
mov
jg
lods
jo
xor
push
adc
xor
jb
mov
mov
xchg
xlat
xchg
ror
(bad)
out
jns
mov
xchg
stc
cdq
sbb
mov
outs
push
push
mov
sbb
xor
rcl
add
and
push
ins
rcl
mov
jns
add
add
mov
outs
mov
ins
shl
repz
push
retf
xchg
int
mov
sbb
and
sbb
sub
push
jmp
sub
sbb
imul
jo
sub
and
push
xchg
push
imul
xchg
jae
push
adc
imul
xchg
push
imul
popf
sub
scas
xor
cli
stos
xchg
shl
dec
xor
scas
lods
dec
xor
scas
lods
dec
xor
scas
lods
dec
xor
scas
lods
dec
xor
xchg
cs
test
mov
mov
cs
(bad)
leave
pop
scas
mov
pop
cs
sbb
test
scas
test
mov
mov
cs
mov
dec
ss
push
pushf
dec
dec
out
leave
jmp
scas
lods
out
push
sub
in
scas
add
sub
les
pop
mov
or
dec
sbb
in
loop
push
test
push
das
jl
add
dec
cmp
scas
lods
sub
mov
dec
xor
push
aaa
mov
mov
inc
xor
cs
leave
repz
mov
scas
add
out
push
sub
std
xchg
push
sub
dec
xor
cs
jl
adc
mov
mov
dec
xor
push
aaa
mov
mov
inc
xor
cs
leave
repz
mov
scas
add
icebp
xchg
push
sub
hlt
xchg
push
sub
dec
xor
cs
cld
mov
mov
mov
add
push
dec
ror
dec
xor
sbb
dec
xor
scas
cdq
jl
scas
lods
mov
mov
dec
mov
jo
add
push
leave
icebp
sbb
mov
in
jnp
in
push
dec
mov
scas
lods
mov
in
jne
out
rol
nop
xchg
mov
mov
mov
jmp
push
mov
jl
repz
jle
xor
mov
in
jne
out
rol
xchg
xchg
or
mov
mov
mov
or
fld
sub
ins
dec
mov
scas
sub
sub
in
cdq
retf
imul
rcl
or
mov
shl
adc
outs
ror
mov
mov
cs
sub
mov
scas
add
lods
xchg
or
mov
das
xchg
sub
mov
scas
add
lods
xchg
or
mov
shl
leave
retf
sti
xchg
and
shl
das
xchg
sub
mov
scas
add
lods
xchg
jl
mov
mov
mov
sub
sub
lods
push
push
and
dec
mov
cmp
out
int
mov
ins
sub
mov
into
imul
pushf
cdq
mov
scas
sub
mov
mov
lods
jl
fwait
lods
jl
fwait
lods
mov
mov
shl
in
xchg
sub
mov
scas
add
(bad)
aaa
fwait
(bad)
mov
or
ds
push
dec
add
mov
hlt
sub
mov
xchg
and
jl
scas
sbb
mov
mov
scas
cwde
dec
add
cwde
shl
leave
retf
cli
xchg
and
dec
xor
scas
sub
fadd
shr
lods
sub
cs
out
xchg
lods
ror
fstp
stos
push
push
dec
inc
or
test
ficomp
(bad)
dec
cmp
repz
ins
or
repz
mov
ins
mov
rcl
mov
or
xchg
hlt
imul
clc
push
cdq
xor
xlat
adc
aaa
loopne
dec
jmp
call
sub
push
mov
cmp
jns
sub
movs
xchg
xchg
jns
js
inc
scas
mov
push
ds
jae
int
or
cdq
out
mov
xor
or
repz
rol
(bad)
repnz
mov
mov
test
mov
or
ins
or
xchg
dec
rcl
mov
mov
mov
adc
retf
sti
in
test
mov
push
mov
xchg
push
retf
dec
fcomp
push
push
sub
dec
push
xlat
imul
inc
ja
cwde
mov
dec
push
out
stc
imul
mov
ja
xor
xchg
push
xchg
rol
ins
or
xlat
dec
mov
imul
xchg
jns
push
sbb
jecxz
mov
jmp
mov
jecxz
adc
sub
jae
adc
xchg
xchg
cmp
xchg
(bad)
call
imul
push
mov
xchg
jae
jp
or
mov
xchg
xchg
xlat
nop
stc
push
(bad)
xchg
mov
iret
jae
adc
stc
(bad)
out
add
nop
rcl
push
fld
imul
jb
leave
mov
pusha
ror
xchg
lods
jnp
push
mov
jle
xchg
mov
dec
cwde
mov
jnp
cwde
scas
jnp
pop
jle
mov
adc
imul
cli
mov
mov
cli
mov
xchg
jae
pusha
std
cmp
shl
mov
sbb
pusha
mov
sub
in
test
mov
mov
jl
add
adc
dec
xchg
xchg
cmp
add
adc
dec
xor
mov
dec
mov
or
ins
or
xchg
mov
in
xchg
mov
mov
scas
inc
xchg
das
dec
cdq
fisub
dec
fwait
add
xchg
mov
pop
mov
add
xchg
xchg
mov
inc
mov
leave
and
adc
into
call
shl
add
adc
mov
push
mov
sub
ficomp
(bad)
leave
xchg
push
repz
add
push
mov
out
mov
mov
(bad)
int
mov
cmc
out
sub
loop
xchg
nop
push
pop
xchg
push
out
je
cmp
loop
dec
call
(bad)
cmp
or
lea
mov
mov
ror
ror
stos
jge
or
xchg
sbb
xchg
xchg
xlat
nop
rol
or
or
xlat
lods
js
daa
(bad)
aad
or
adc
cld
jno
mov
push
mov
mov
pop
mov
jecxz
adc
jnp
movs
mul
xor
xor
sub
out
or
stc
sbb
xchg
mov
push
mov
lods
jno
ins
(bad)
lods
jo
dec
jb
push
imul
pop
arpl
not
sub
rcl
gs
mov
outs
rcl
and
js
cmp
sti
stos
in
stc
cmp
data16
pop
or
adc
dec
or
jle
mov
xor
pop
jmp
push
xchg
dec
imul
(bad)
repz
mov
imul
dec
in
dec
adc
push
pop
xchg
dec
lahf
lods
jmp
pop
adc
outs
mov
jno
mov
sbb
aas
stos
pushf
xchg
mov
mov
xchg
aas
mov
pushf
cmp
pushf
cmp
pushf
lahf
aas
mov
cmp
pushf
lea
mov
pushf
mov
mov
sbb
aas
mov
pushf
cmp
sbb
mov
mov
cmp
pushf
cmp
sbb
aas
mov
lea
mov
lea
mov
cmp
sbb
mov
sbb
sbb
sbb
popa
push
mov
cmps
sbb
adc
es
mov
popa
push
mov
cmps
sbb
adc
sub
nop
mov
ret
jmp
jle
sbb
inc
mov
sbb
adc
add
mov
cmps
sbb
add
mov
mov
xor
mov
nop
mov
sub
xor
add
fwait
sub
mov
or
jns
mov
fwait
add
xor
push
pop
xor
sbb
sbb
loop
jb
stos
test
mov
pop
test
nop
aas
ror
cmp
push
sbb
es
jge
nop
aas
cmps
sbb
adc
sub
mov
mov
movs
jge
nop
aas
cmps
pushf
sbb
and
jp
call
in
es
mov
mov
mov
mov
inc
push
mov
cmps
sbb
adc
cmps
sbb
adc
ret
add
or
pop
and
mov
mov
mov
xor
mov
pushf
out
loop
add
sub
mov
inc
or
inc
loopne
pop
push
pop
xor
sbb
std
mov
add
mov
adc
mov
cmc
popf
aaa
(bad)
ja
icebp
inc
mov
das
and
std
mov
pushf
jge
xor
loope
mov
ret
jg
aas
jge
xor
jp
mov
mov
pushf
mov
sub
mov
inc
call
adc
sbb
adc
sub
and
or
add
push
fwait
aaa
mov
xor
add
push
fwait
aaa
mov
xor
add
shr
add
fwait
sub
xor
sub
fwait
jge
cmc
inc
sub
mov
and
or
mov
daa
push
leave
pop
dec
mov
push
scas
push
ins
mov
xlat
sbb
jecxz
sub
lock
sbb
inc
sub
jae
pop
ins
mov
xchg
retf
xchg
shl
fcom
jae
fwait
xchg
push
push
pop
mov
xrelease
movs
ins
sub
test
rcr
sbb
mov
scas
or
mov
dec
jbe
jns
and
mov
sbb
dec
sub
imul
fsubr
imul
add
jb
mov
xor
mov
xor
ins
aas
cmp
out
aas
mov
mov
xchg
jns
add
ror
iret
jae
fldcw
xlat
mov
repz
sbb
arpl
dec
jecxz
cwde
pusha
loop
stc
in
mov
lods
jo
jp
jo
or
rcl
sub
add
lods
jo
push
xor
jmp
lods
js
pop
or
and
push
(bad)
jae
mov
ins
or
fwait
hlt
repz
mov
or
xchg
test
lods
jne
push
pop
jno
out
out
dec
add
fild
cld
ins
inc
sub
mov
dec
scas
sub
dec
xchg
(bad)
into
xchg
mov
test
mov
js
out
mov
mov
mov
jecxz
mov
ficomp
shr
mov
das
xchg
push
shr
jns
xlat
call
stos
xchg
mov
jb
inc
pop
sub
pop
test
lock
sti
ja
mov
jne
sub
out
daa
lods
dec
mov
push
ins
push
xchg
jns
sub
ror
sub
rcl
mov
mov
mov
sub
push
in
rcl
jp
outs
jecxz
sbb
retf
jns
outs
ins
and
sub
cs
xchg
pop
inc
movs
push
mov
xlat
in
xchg
jns
sub
sub
push
sub
test
sbb
imul
jns
popa
xchg
mov
cwde
bound
jns
retf
xchg
or
ss
sub
test
pop
mov
pop
lods
js
dec
add
adc
xchg
jae
sub
movs
retf
mov
outs
push
aam
xor
jbe
jo
push
call
push
into
sub
and
repz
xor
sub
xchg
xlat
cmp
push
xor
xchg
adc
iret
push
mov
or
cmp
dec
xor
push
bound
push
jmp
dec
int3
ja
ficom
push
das
mov
add
outs
add
sub
nop
xor
call
ins
out
sub
call
in
add
mov
repz
mov
shl
mov
adc
xchg
jbe
test
scas
push
or
ds
not
xchg
sub
sub
xchg
ror
(bad)
in
fs
push
jmp
or
or
jno
sub
push
jge
jae
mov
dec
mov
add
rdpmc
div
adc
mov
mov
xchg
cmc
xchg
push
popa
aaa
xlat
sub
pop
xchg
dec
cmp
ss
mov
push
in
mov
ss
test
lods
xor
mov
leave
scas
xor
test
or
xlat
sti
imul
sub
test
scas
mov
(bad)
stos
adc
xor
(bad)
xlat
inc
xchg
retf
leave
inc
lock
rcl
(bad)
jae
push
adc
mov
das
sbb
xchg
jns
sub
loopne
mov
mov
jp
or
outs
sbb
gs
rcl
xlat
cdq
pop
jecxz
in
int
xlat
ror
push
lods
js
pop
mov
xchg
mov
inc
and
in
xchg
xchg
xlat
int3
int
mov
dec
test
adc
nop
stc
sahf
mov
es
xchg
or
or
push
cwde
sub
dec
out
jns
mov
xor
sub
push
xchg
xlat
or
(bad)
(bad)
sbb
lea
push
pop
xchg
into
xor
add
imul
jae
sub
nop
retf
std
xor
inc
mov
mov
mov
imul
nop
dec
test
mov
cmc
aad
int
jl
jae
push
xchg
stc
mov
hlt
xchg
jns
daa
adc
pop
push
mov
adc
adc
cmp
jne
iret
or
push
mov
xchg
clc
test
xchg
jae
sub
retf
bound
ret
or
sbb
xor
jno
ror
jno
pop
imul
jmp
outs
add
jmp
addr16
add
imul
dec
lods
xchg
mov
jmp
xchg
sub
ja
sub
ins
addr16
jmp
addr16
outs
mov
(bad)
je
out
pop
dec
aad
jno
pop
imul
in
mul
in
dec
sub
fnstenv
pop
xchg
iret
in
jecxz
scas
dec
(bad)
iret
icebp
lods
adc
sub
jmp
jge
or
inc
sbb
ins
popf
cs
sub
iret
cmc
lods
push
jmp
add
cmps
fwait
call
imul
add
sahf
dec
dec
out
xchg
push
out
stos
sbb
iret
jmp
lock
fucomp
cs
sbb
adc
xchg
mov
jmp
fadd
bound
jbe
xchg
xchg
mov
push
push
ja
loop
pop
xlat
imul
adc
dec
ret
sahf
imul
adc
retf
in
push
lahf
retf
xchg
xor
loopne
pop
cwde
dec
mov
cli
popa
xchg
int3
inc
imul
shr
in
cwde
xchg
pop
xchg
imul
jno
pop
imul
stos
scas
inc
mov
imul
(bad)
jbe
xchg
daa
fild
sub
ins
rcr
jmp
pusha
rcr
(bad)
jmp
push
fdivr
inc
xchg
addr16
out
addr16
and
push
in
fidiv
into
xchg
iret
in
xchg
inc
shr
pop
jmp
addr16
ins
inc
out
inc
test
dec
mov
cli
popa
xchg
int3
inc
imul
es
mov
inc
jmp
fild
xchg
rol
jge
(bad)
jmp
jno
mov
jmp
sub
cdq
adc
fdiv
(bad)
adc
adc
sub
leave
pop
sbb
jne
in
clc
xchg
xlat
ins
mov
xlat
ins
mov
lods
xchg
xchg
addr16
mov
mov
or
xchg
sbb
adc
ins
push
cs
pop
stos
xchg
int3
std
stos
ror
out
push
xor
mov
xchg
rcr
sub
je
scas
sub
mov
add
push
push
repz
sub
or
movs
xor
(bad)
xlat
dec
imul
lock
xchg
or
push
or
adc
in
int
xlat
xor
cmc
push
xchg
stc
xchg
stc
sub
push
ins
rcl
inc
xor
out
sar
repz
jb
sti
xchg
repz
sub
and
mov
test
js
int
mov
nop
dec
out
push
daa
push
add
retf
dec
mov
mov
xlat
out
xor
pop
mov
or
call
outs
xchg
xor
xchg
cmp
ins
shl
sar
mov
or
push
or
inc
movs
push
ins
or
lahf
and
inc
push
sub
adc
adc
or
ins
and
imul
shl
and
push
imul
or
outs
push
push
mov
xchg
jae
outs
lods
jo
jae
jns
jmp
lahf
repz
sbb
lock
cmp
push
sub
test
xchg
push
inc
add
jb
push
pop
les
outs
or
dec
sub
sahf
push
sub
xor
push
xor
outs
jge
sub
push
xor
adc
xor
outs
pop
and
outs
push
xor
outs
or
outs
and
pushf
xor
push
xor
outs
fist
sub
div
sub
pusha
jge
js
out
push
xor
adc
stos
cs
clc
outs
out
xor
adc
cs
xor
and
outs
or
sub
push
and
outs
or
outs
and
pusha
xor
pop
jo
out
push
xor
adc
sub
push
xor
adc
dec
stos
sub
outs
and
pusha
xor
pop
cmp
out
or
sub
xor
pop
push
sub
or
push
sub
xor
pushf
ja
outs
xor
pop
cmp
out
or
sub
ffreep
outs
xchg
cmp
dec
xor
inc
loope
xchg
nop
and
or
jo
iret
push
xor
in
inc
sbb
sub
xor
shl
sub
fs
dec
sub
inc
mov
cvtdq2ps
outs
xchg
push
xor
pop
out
ja
adc
xor
jbe
xor
call
outs
push
xor
pop
fidiv
ins
out
xor
stos
bound
ins
jge
adc
out
jl
aam
sahf
imul
outs
ficom
aam
push
xor
dec
cmp
stos
repnz
aam
push
mov
outs
sbb
call
mov
add
test
xchg
sub
sbb
stos
neg
inc
test
dec
fcom
xlat
dec
sub
and
cs
repnz
and
sbb
es
int3
xchg
xlat
(bad)
or
xchg
push
mov
in
jns
xlat
outs
not
xchg
in
push
xchg
push
shl
jmp
or
cmc
xchg
push
fcomip
push
shl
push
scas
lods
jne
sub
jb
push
arpl
scas
jae
push
into
or
cmps
xor
and
xchg
sub
or
and
xchg
mov
adc
mov
js
sub
mov
mov
xchg
xlat
nop
shl
jo
mov
xlat
outs
push
push
mov
lods
jo
je
jns
ins
sbb
sbb
mov
push
sub
pop
adc
sub
shr
iret
std
jno
addr16
fdiv
sub
loopne
sub
jns
mov
cmp
mov
xchg
jns
out
pop
cmp
mov
out
jns
mov
xor
sub
jns
push
inc
rol
(bad)
aam
mov
or
int3
cmp
or
out
xor
scas
adc
xchg
mov
pop
sub
rcl
pop
aam
xor
jne
add
mov
cdq
and
imul
mov
arpl
push
push
lea
enter
mov
push
scas
xor
test
dec
outs
sahf
dec
cmps
outs
repz
int3
push
mov
aaa
pop
loope
repz
inc
xor
cmp
lods
popf
inc
xor
mov
jg
xchg
popf
inc
xor
sub
test
cmp
shr
mov
or
inc
daa
in
mov
sbb
mov
inc
xor
rcr
jae
jg
leave
(bad)
int3
cmc
cdq
or
cwde
mov
(bad)
dec
rcr
jae
mov
or
cmp
push
loop
mov
fstp
add
icebp
pop
pop
mov
add
bswap
push
pop
aaa
loopne
repnz
pop
nop
lds
cwde
leave
mov
dec
shl
dec
fist
xchg
dec
(bad)
inc
pop
push
lahf
xor
pop
mov
es
xor
sub
pop
xor
jge
or
out
movs
adc
sbb
mov
cmc
or
fs
outs
(bad)
xchg
jmp
adc
ins
mov
xlat
imul
leave
sub
imul
test
pop
sti
or
ja
mov
push
ins
lods
xchg
xlat
in
sub
js
or
xchg
xlat
(bad)
mov
xlat
inc
cmp
ins
or
inc
ins
mov
jmp
dec
xor
leave
sub
push
outs
or
shr
xlat
push
test
xlat
loop
mov
int
xor
or
xlat
xor
xlat
inc
stos
xor
add
jae
or
aam
fst
rol
adc
int
xor
or
xlat
retf
xlat
ins
mov
test
or
shr
xlat
imul
shl
pop
sti
or
ja
mov
adc
lods
xchg
xlat
retf
mov
mov
int
xor
mov
push
ins
or
xlat
inc
stos
cmp
loop
mov
jae
or
mov
retf
xchg
ret
ins
or
xlat
pusha
int3
xchg
lds
or
xlat
jmp
mov
repnz
jmp
add
and
push
ins
push
or
xlat
and
push
xchg
fwait
mov
lds
jecxz
jmp
xchg
add
clc
test
ins
or
xlat
popa
int3
xchg
rcl
repnz
and
xchg
pop
into
stos
sub
or
xlat
jmp
push
nop
sbb
repz
jg
xchg
div
or
xlat
arpl
push
ins
jg
sub
ins
mov
xlat
cmp
xchg
in
leave
sub
adc
fld
xlat
daa
int3
xchg
loope
fwait
sub
ins
mov
xlat
ss
push
adc
or
xlat
ss
xchg
sub
(bad)
sub
mov
xlat
adc
push
inc
jno
test
ins
mov
adc
out
or
xlat
adc
push
inc
mov
test
ins
or
xlat
adc
xchg
jns
loopne
dec
ins
mov
xlat
pop
iret
push
sub
jecxz
mov
or
xlat
adc
push
rcr
test
ins
mov
outs
mov
test
ins
or
xlat
dec
iret
push
or
call
xchg
jo
push
xchg
add
test
ins
mov
xlat
out
call
cdq
int3
xchg
arpl
or
xlat
pop
int
(bad)
mov
(bad)
ins
or
xlat
xchg
int3
push
aad
jecxz
jle
or
xlat
nop
int3
xchg
jne
jmp
shr
stc
xlat
adc
xchg
lods
cmp
je
mov
xlat
jl
push
fcom
xlat
jl
xchg
dec
iret
jecxz
xchg
jmp
fisubr
xlat
mov
xchg
xchg
inc
ins
or
xlat
aaa
int3
push
inc
xchg
mov
xlat
xor
push
jl
jmp
out
ins
or
xlat
push
int3
xchg
leave
xchg
xlat
ins
iret
push
add
or
xlat
adc
lock
ins
or
xlat
inc
int
imul
xchg
xlat
in
int
(bad)
cmp
xlat
aaa
int3
xchg
cmp
ins
or
xlat
in
int
xor
shr
rcl
int3
push
pop
adc
test
ins
or
xlat
in
int3
xchg
xchg
fild
aam
or
push
sub
cmps
ins
mov
xlat
jmp
cld
sub
scas
int
(bad)
add
test
ins
mov
mov
sub
ins
or
xlat
sbb
push
dec
xor
sub
mov
xlat
jg
xchg
dec
lods
mov
xchg
jg
push
test
mov
xlat
sbb
push
cmp
int3
sub
and
push
or
mov
jns
icebp
test
ins
or
xlat
xchg
int3
push
dec
pop
mov
rcl
data16
push
and
ins
or
xlat
and
xchg
adc
or
xlat
ss
push
test
(bad)
or
xlat
fcmovne
push
stos
ds
mov
gs
push
jno
in
sbb
sti
int3
push
xchg
fistp
(bad)
cdq
int3
xchg
stc
xor
sub
cdq
int3
xchg
inc
cmp
sub
ins
or
xlat
stos
int
pop
dec
fld
sub
xlat
lahf
int3
push
mov
icebp
xlat
and
xchg
ret
cmc
movs
sub
les
dec
xchg
adc
int3
xchg
loop
stos
sub
ins
or
xlat
es
push
dec
mov
pop
ins
or
xlat
popf
int3
push
jmp
imul
cmp
rcl
int3
xchg
fsub
sub
ins
or
xlat
and
xchg
jo
xlat
sub
sti
int3
push
stos
daa
jecxz
mov
mov
pop
(bad)
jmp
js
push
sbb
ins
mov
pop
adc
ds
or
xlat
inc
aad
adc
mov
inc
aad
fwait
stc
dec
scas
xchg
ins
mov
pushf
pop
or
(bad)
ins
out
and
or
(bad)
sbb
xchg
mov
add
lahf
(bad)
sbb
push
pop
stos
bound
(bad)
adc
xchg
xor
sbb
(bad)
std
out
add
adc
adc
(bad)
sub
xchg
aam
jo
and
xchg
(bad)
sbb
xchg
stos
mov
or
(bad)
int3
out
pop
mov
mov
push
cli
inc
sub
(bad)
or
sub
(bad)
aam
sbb
push
cmc
mov
lods
cmc
ins
or
(bad)
sub
xchg
xor
lods
fsubr
(bad)
(bad)
xor
push
mov
jmp
aaa
out
cdq
xor
(bad)
sbb
push
lods
ins
push
sub
(bad)
adc
xchg
xchg
popa
cmp
or
(bad)
push
out
aas
push
sbb
(bad)
pop
out
mov
ins
mov
sub
ins
or
(bad)
(bad)
xchg
sbb
sub
(bad)
sbb
push
dec
jmp
sub
(bad)
or
push
imul
lods
daa
ins
or
(bad)
aaa
out
(bad)
mul
(bad)
inc
out
lods
dec
sub
(bad)
adc
push
adc
sub
(bad)
add
push
xor
ins
or
(bad)
add
push
(bad)
int3
sbb
(bad)
(bad)
sbb
push
and
jb
mov
mov
xor
xchg
(bad)
sub
push
ins
mov
or
(bad)
adc
xchg
pop
cmps
lods
leave
ins
or
(bad)
sbb
push
movs
mov
lods
mov
mov
cmp
or
(bad)
push
out
adc
lods
jmp
jns
push
popa
std
dec
sub
(bad)
push
out
in
jns
into
ins
mov
(bad)
pop
out
retf
push
push
lods
cmp
or
adc
push
movs
or
sub
adc
push
pop
in
cld
test
ins
or
(bad)
mov
mov
(bad)
pop
fcom
jp
mov
aad
hlt
xchg
test
lods
test
mov
jmp
lods
dec
ins
or
aad
hlt
xchg
fild
sub
aad
hlt
xchg
pop
cmp
lods
stos
ins
or
aad
hlt
push
xor
ins
or
aad
hlt
push
retf
sub
aad
hlt
xchg
xchg
stos
push
lods
int
or
aad
hlt
push
cmp
ins
or
aad
hlt
push
repz
sub
aad
hlt
xchg
mov
ins
mov
aad
hlt
xchg
push
in
jl
cmp
ret
hlt
push
sti
mov
or
aad
hlt
push
add
push
jne
or
aad
hlt
xchg
fistp
mov
aaa
or
sub
aad
cmc
xchg
xchg
mov
sub
aad
hlt
xchg
popa
fmul
std
ins
or
aad
loop
adc
mov
(bad)
loop
push
push
dec
sub
aad
loop
fimul
and
aad
loop
jmp
cmp
aad
loop
xor
mov
loop
xchg
loop
sub
aad
loop
xor
inc
sub
aad
loop
das
arpl
mov
or
aad
jecxz
mov
pop
lods
push
ins
or
aad
jecxz
mov
ins
mov
mov
jg
pop
ins
or
aad
std
push
shl
push
lods
xor
dec
aad
jecxz
gs
and
xor
xchg
add
mov
fstp
lods
jns
mov
aaa
jecxz
mov
ins
mov
aad
jecxz
push
lea
jle
xor
push
adc
dec
lods
xchg
ins
or
aad
loop
lahf
ja
sub
aad
loop
js
pusha
sub
aad
loop
xchg
pop
arpl
aad
jecxz
mov
mov
aad
cld
push
add
mov
aad
jecxz
fcom
or
aad
jecxz
xor
jbe
leave
cld
xchg
mov
add
aad
cld
push
cdq
pop
jno
ins
mov
dec
dec
sub
aad
cld
push
pop
pop
das
sub
aad
jecxz
ins
or
mov
aad
std
push
cmp
lods
fldcw
dec
aad
jecxz
and
ins
mov
in
push
xchg
fisub
aam
fst
pop
int3
ins
scas
cs
or
aam
fst
mov
jmp
fs
xor
jo
mov
loop
dec
scas
push
iret
fst
pop
rep
cs
ins
or
aam
fst
lahf
ins
or
aam
fst
sahf
ins
or
aam
ficom
inc
ins
or
aam
fst
retf
nop
sub
mov
mov
aam
fst
icebp
inc
cmp
test
fstp
xchg
jp
xor
jno
or
aam
fst
push
ins
mov
xlat
pop
inc
add
cmc
aam
fst
mov
ins
or
aam
ficom
gs
or
aam
ficom
inc
ins
mov
aam
fst
jge
or
aam
fst
xchg
scas
xor
pop
aam
stos
xchg
jb
inc
sub
rol
xchg
pop
jns
sub
shl
enter
jle
in
mov
fist
mov
ror
enter
or
ror
enter
pop
cmp
ins
mov
push
iret
xchg
(bad)
jb
mov
ror
enter
adc
jb
mov
shl
enter
sbb
jp
mov
enter
cmp
shl
not
jae
or
shl
not
(bad)
lods
xchg
lods
and
ret
not
pusha
ins
inc
mov
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
xlat
sub
push
jge
into
es
ins
mov
imul
in
mov
mov
jl
mov
pop
xchg
dec
xchg
enter
retf
xchg
pop
push
adc
dec
ins
mov
xlat
adc
(bad)
scas
mov
add
popf
out
push
dec
pop
in
mov
lock
sub
push
xchg
jns
sub
out
pop
mov
nop
cli
xchg
pusha
or
out
xchg
xlat
xchg
clc
mov
xlat
outs
push
push
mov
fs
retf
mov
jmp
xlat
cmps
pusha
retf
dec
sub
(bad)
xchg
push
loope
dec
hlt
push
push
push
xchg
ins
ins
mov
lods
jno
dec
out
xor
mov
push
mov
aas
xchg
sub
lods
sbb
fisubr
xchg
mov
jns
sub
dec
jbe
xor
cmc
push
xchg
jns
add
push
jne
or
test
(bad)
not
xor
leave
nop
push
dec
(bad)
ins
mov
xlat
and
push
cwde
vpmaddubsw
or
push
jmp
mov
pop
outs
rcl
stos
sbb
jecxz
xchg
jns
sub
add
js
and
lock
mov
xchg
stc
ss
mov
push
xchg
shl
push
mov
xor
add
push
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
sub
dec
push
stos
mov
sub
dec
mov
sbb
out
inc
aaa
out
inc
aaa
in
inc
aaa
in
sub
loop
inc
mov
push
inc
aaa
(bad)
rol
mov
sub
jecxz
inc
aaa
loopne
inc
aaa
loope
dec
aaa
out
shr
aaa
out
rol
loop
dec
aaa
mov
inc
mov
shr
aaa
jecxz
sub
in
rol
loop
dec
aaa
mov
inc
mov
shr
aaa
jecxz
sub
in
rol
loop
dec
aaa
mov
inc
mov
shr
aaa
jmp
aaa
mov
inc
mov
shr
jecxz
sub
jmp
inc
mov
push
dec
aaa
xchg
rol
mov
xor
jecxz
sub
call
push
dec
aaa
xchg
rol
mov
xor
jecxz
inc
mov
push
dec
aaa
xchg
push
inc
mov
push
dec
mov
rcl
not
push
aaa
not
push
aaa
hlt
rcl
cmc
rcl
repnz
repz
lock
rcr
(bad)
rcr
out
pop
mov
push
pop
mov
push
pop
mov
push
pop
aaa
xchg
rol
loop
pop
mov
push
inc
mov
push
pop
aaa
xchg
rol
loop
pop
mov
push
inc
mov
push
pop
aaa
xchg
rol
loop
pop
mov
push
inc
mov
push
pop
aaa
nop
rol
loop
arpl
loop
arpl
xchg
rol
loop
bound
loop
bound
sahf
rol
loop
popa
mov
push
inc
mov
push
popa
aaa
lahf
rol
loop
pusha
mov
push
addr16
push
addr16
push
addr16
shl
ret
mov
shl
rcl
aaa
rcl
aaa
into
push
fs
push
gs
push
push
iret
shl
push
push
mov
push
addr16
rcl
int3
shr
retf
shr
enter
leave
push
jae
leave
push
jae
pushf
shl
push
push
aaa
xlat
shl
aam
imul
rcl
mov
shl
aad
jno
rcl
aaa
rcl
mov
rol
rcl
cmp
jecxz
jne
loopne
push
mov
push
je
lock
jnp
rcl
mov
push
jns
fist
mov
push
js
rcl
mov
push
jg
fcmovbe
xor
fist
aaa
rcl
jge
fcom
jl
(bad)
jle
rcl
add
cmps
rcl
cmps
rcl
cmps
push
add
movs
rol
aaa
movs
sar
aaa
mov
sar
lock
aaa
mov
rol
movs
push
inc
mov
push
or
scas
push
or
call
mov
ror
aaa
std
push
or
fwait
push
ds
ror
mov
push
jg
stos
sar
mov
push
je
test
push
push
aaa
mov
adc
mov
adc
mov
push
mov
sar
icebp
push
adc
mov
pop
aaa
scas
push
pop
mov
rcl
mov
push
mov
rcl
aaa
(bad)
adc
icebp
push
adc
(bad)
jns
repnz
push
mov
push
sbb
loopne
adc
lock
sbb
scas
rcr
mov
push
jl
fcom
aaa
rcl
sbb
loopne
push
aaa
repnz
mov
rcl
mov
rcl
mov
rcl
mov
ror
aaa
icebp
ror
aaa
stos
push
or
scas
ror
aaa
cwde
ror
test
rcl
aaa
loopne
adc
repnz
aaa
mov
adc
mov
push
sub
lods
rcr
mov
push
or
lods
push
inc
mov
push
push
mov
push
push
mov
rcr
mov
rol
cdq
push
push
aaa
mov
push
pop
mov
rcl
aaa
repnz
mov
rcl
push
sbb
aaa
mov
push
push
aaa
repnz
push
push
aaa
not
push
aaa
xchg
and
hlt
shl
aaa
loopne
push
aaa
repnz
push
je
rcl
and
loopne
jp
repnz
push
cmp
test
and
fcom
sbb
test
daa
mov
push
es
push
and
mov
rcl
mov
shl
adc
adc
sub
cld
push
sub
xchg
rcl
sub
jae
mov
std
dec
pop
fst
(bad)
enter
stos
ja
push
stos
dec
je
repz
push
stos
icebp
pop
aad
repz
push
stos
nop
in
push
das
repz
inc
test
loope
xor
stos
nop
in
push
das
repz
inc
lods
repz
push
stos
loope
adc
repz
inc
mov
jae
push
stos
repz
xchg
push
int
aam
repz
fsubr
mov
push
sub
inc
mov
repz
daa
stos
repz
push
(bad)
jae
xchg
mov
jno
push
sub
push
sub
into
inc
mov
jae
fsubr
jno
push
sub
push
sub
into
inc
mov
jae
fsubr
jno
push
sub
push
sub
into
inc
mov
repz
loope
xor
add
iret
inc
cmps
repz
shl
cmp
stos
jb
push
stos
jb
aas
stos
jo
das
stos
out
aaa
stos
jb
push
sub
int3
pop
mov
mov
push
sub
into
push
test
(bad)
into
(bad)
test
repz
push
xor
arpl
repz
push
leave
jae
push
stos
loope
adc
jb
pop
stos
jb
pop
sub
es
icebp
dec
xchg
ficom
into
(bad)
stos
repz
push
sub
into
(bad)
sub
(bad)
enter
mov
jnp
je
jecxz
stc
(bad)
rcr
ror
jb
fimul
sti
retf
fmulp
ins
adc
(bad)
enter
xor
push
stos
jnp
je
ror
(bad)
rcr
ror
(bad)
fistp
ja
stos
sti
les
dec
(bad)
lods
rcr
ror
dec
repnz
ja
outs
stos
sti
enter
dec
call
enter
mov
sti
clc
je
ror
rcr
ror
cli
xlat
pop
push
icebp
adc
repz
dec
stos
inc
mov
stos
jb
pop
sub
iret
aaa
lods
jae
adc
(bad)
aam
jno
push
stos
test
xlat
jmp
push
sub
inc
lods
loope
pop
mov
push
cmc
into
jl
(bad)
aam
jno
push
sub
fidiv
in
sub
int3
inc
lods
loope
push
xor
dec
sub
repz
push
test
jmp
stos
xchg
scas
(bad)
sub
out
push
sub
jecxz
sub
in
push
sub
inc
mov
icebp
xchg
push
sub
into
push
stos
mov
(bad)
sub
inc
stos
jb
daa
sub
push
mov
jb
push
sub
pop
mov
jb
push
sub
dec
or
mov
inc
mov
jae
push
stos
icebp
dec
adc
jb
pop
sub
dec
aaa
mov
inc
adc
icebp
cli
push
sub
into
push
test
repz
push
xor
test
shl
dec
pop
fcomi
into
push
mov
dec
xlat
jmp
dec
stos
out
dec
xchg
retf
push
stos
repz
xchg
stos
loope
adc
repz
dec
test
jb
push
stos
jb
push
stos
jb
xor
repz
pop
stos
mov
(bad)
stos
repnz
jb
pop
sub
xor
sub
sub
nop
jmp
mov
push
sbb
(bad)
stos
jb
pop
sub
int3
ss
out
into
in
icebp
jmp
leave
(bad)
out
jo
pop
stos
icebp
into
xor
stos
jb
pop
sub
iret
jno
jae
dec
cmps
icebp
dec
dec
(bad)
repz
push
hlt
jae
push
stos
repz
pop
push
out
dec
push
jmp
in
sub
inc
cmps
out
dec
pop
retf
xlat
out
mov
push
sbb
inc
stos
jb
pop
sub
int
test
jae
push
stos
sti
dec
adc
mov
push
lahf
repz
push
stos
repz
arpl
repz
bound
repz
jb
loope
adc
repz
repnz
repz
lock
lea
sub
into
(bad)
stos
icebp
into
push
sahf
repz
(bad)
and
adc
jb
pop
sub
jbe
std
dec
pop
leave
repz
(bad)
retf
push
enter
stos
inc
dec
push
retf
push
stos
std
dec
adc
jae
push
jmp
dec
pop
xlat
rdtsc
xlat
jmp
inc
stos
cmc
into
jl
(bad)
dec
xlat
jmp
inc
stos
icebp
dec
xor
stos
jb
pop
sub
jbe
repz
mov
jae
mov
jmp
adc
mov
(bad)
sub
push
stos
loopne
adc
stos
repz
pop
sub
mov
sub
into
xlat
aad
dec
aam
jae
sub
mov
push
sub
into
(bad)
sub
into
xlat
outs
hlt
into
xlat
mov
dec
xlat
jmp
push
sub
into
(bad)
stos
or
push
sub
dec
push
test
repz
jae
(bad)
dec
push
test
repz
jns
fmul
test
repz
js
fisttp
test
repz
jnp
fimul
test
repz
jp
fisttp
test
repz
jge
fmul
test
repz
jl
(bad)
test
repz
sbb
repz
push
sub
stos
push
jmp
push
sub
int3
push
sub
dec
inc
stos
out
push
sub
int3
push
sub
dec
inc
stos
jecxz
push
sub
int3
push
sub
dec
pop
stos
dec
sub
int3
push
sub
dec
pop
stos
sti
dec
push
sub
int3
push
sub
dec
push
stos
test
sub
dec
push
stos
repz
push
sub
int3
push
sub
scas
push
jp
push
sub
dec
test
push
push
xor
repz
test
stos
lock
push
sub
int3
push
sub
lods
push
jmp
int3
push
sub
test
add
push
sub
dec
test
push
rdtsc
push
test
push
sub
dec
push
sub
dec
cmc
sub
not
sub
dec
push
stos
xchg
dec
cmc
sub
not
sub
dec
push
stos
xchg
dec
xlat
xor
lahf
(bad)
sbb
xor
push
xor
dec
push
push
repz
pushf
dec
xor
xor
jb
xchg
xchg
xchg
dec
ss
mov
push
push
sub
jnp
(bad)
cmp
xor
lahf
xlat
mov
into
xor
xor
push
xor
dec
push
push
repz
pushf
dec
xor
xor
dec
je
(bad)
mov
xor
xor
jmp
inc
cmp
jbe
xchg
ret
ss
shr
inc
stc
xchg
out
push
mov
dec
mov
jmp
nop
aas
div
pop
xchg
in
ror
pushf
jb
xchg
xchg
xchg
into
pushf
inc
aaa
mov
inc
lods
push
cdq
add
cmps
aam
call
test
aad
stos
(bad)
jecxz
push
push
push
sub
mov
dec
mov
stos
(bad)
movs
sub
sub
repz
push
pop
xchg
out
xchg
dec
shl
pop
stc
xchg
mov
ds
cmp
stos
(bad)
mov
out
push
xor
mov
fbstp
dec
mov
xor
dec
stc
stc
pushf
xor
mov
into
xor
ret
stos
out
mov
outs
xor
mov
push
xor
mov
sub
into
push
aad
push
pushf
jbe
xchg
mov
into
xor
pop
stc
fs
jne
dec
lds
dec
cli
sub
mov
xchg
cli
mov
xor
inc
stc
or
mov
(bad)
lods
mov
xchg
outs
or
(bad)
mov
inc
pop
xor
push
stos
xchg
sub
aas
jmp
xor
call
(bad)
lods
mov
inc
xor
xchg
out
add
xlat
vprotb
jb
xlat
(bad)
xor
aaa
div
pop
adc
push
mov
cli
sbb
(bad)
shl
dec
stc
stc
pushf
xor
lods
xchg
into
xor
es
into
xor
dec
stc
xor
aam
mov
sub
dec
div
pop
adc
push
mov
jbe
mov
or
xor
jmp
sub
dec
push
add
or
rdpmc
mov
(bad)
xor
fist
dec
loope
mov
cmp
leave
mov
sbb
(bad)
xchg
mov
push
(bad)
xor
loopne
mov
(bad)
retf
push
pop
add
xchg
repz
pop
ins
mov
push
leave
hlt
xor
push
ins
or
xlat
idiv
mov
not
xchg
int3
add
mov
in
xchg
(bad)
xchg
adc
ret
or
xlat
out
mov
in
repz
xchg
xchg
dec
int
mov
jo
xchg
xchg
push
mov
cmp
dec
cli
cmp
cmc
das
mov
push
xchg
clc
fld
fmul
fs
stc
push
xchg
outs
push
push
mov
mov
dec
jb
call
push
push
jmp
je
jecxz
out
jns
mov
mov
push
xchg
js
sbb
or
xlat
mov
arpl
jns
add
pop
sub
push
push
or
rcl
sub
and
xchg
stc
stc
ja
repz
or
imul
dec
mov
pushf
xlat
mov
arpl
xchg
shl
mov
mov
inc
xor
push
xchg
int
xchg
push
dec
jmp
repz
xor
test
outs
stos
std
shr
xchg
sbb
clc
xchg
dec
(bad)
repz
and
xchg
or
shr
xrelease
fst
xor
mov
stc
sub
xor
sbb
ins
mul
xchg
jae
jge
sub
je
test
movnti
push
mov
xchg
dec
sbb
inc
out
ds
call
imul
push
ds
push
jmp
inc
push
xrelease
xor
jne
repnz
es
add
cmp
add
cmp
add
cmp
div
add
mov
jmp
iret
jb
xor
imul
xchg
push
jne
outs
out
pop
xchg
add
cmp
data16
pop
xchg
add
cmp
neg
xchg
daa
push
fdiv
ja
je
jae
xor
mov
scas
xchg
mov
push
popf
or
xchg
add
xchg
mov
fcomp
mov
je
icebp
out
xor
jne
push
push
repz
inc
cmp
fcom
mov
aaa
(bad)
ins
mov
push
in
cmp
out
cmp
dec
or
add
dec
es
pop
ins
cmp
repz
mov
cmps
ins
mov
not
mov
inc
outs
sbb
sbb
sub
repnz
lods
ins
mov
mov
sub
lock
shl
retf
imul
mov
jae
leave
jmp
fwait
lods
jo
jp
push
adc
mov
dec
arpl
sbb
push
lods
js
pop
adc
adc
xor
and
mov
sbb
add
retf
mov
jmp
xor
mov
pop
or
sub
stc
xchg
xlat
mov
push
fsubr
dec
or
push
mov
and
dec
test
xchg
mov
sbb
push
out
js
mov
ss
retf
jmp
dec
pop
retf
enter
xchg
lock
repz
or
stc
jno
out
int
into
mov
cmc
push
xchg
clc
daa
push
xchg
repz
inc
xchg
rcr
or
jb
outs
ins
or
lahf
mov
push
and
jns
lods
sub
pop
or
repz
pop
xor
adc
scas
in
jae
in
mov
xchg
xlat
mov
and
loop
dec
jae
sbb
scas
nop
mov
scas
fs
ja
and
das
scas
in
jae
in
jae
mov
movs
les
mov
mov
pop
xlat
xlat
push
arpl
dec
mov
mov
push
sbb
dec
inc
sbb
data16
jmp
into
mov
xchg
push
ror
and
push
enter
adc
mov
iret
push
in
xor
mov
dec
push
mov
cs
scas
std
lods
jae
movs
das
into
out
fwait
cmc
xchg
outs
cmp
mov
imul
mov
dec
imul
xlat
fadd
test
ficomp
outs
xchg
cmc
xlat
mov
sub
stc
in
je
inc
push
push
jne
in
xchg
sbb
push
inc
mov
int3
dec
data16
mov
enter
add
mov
cs
mov
out
xchg
mov
mov
push
sbb
mov
xchg
jae
mov
ins
mov
aad
mov
xlat
ins
mov
xlat
ins
mov
push
leave
and
mov
push
ficom
or
xlat
ret
ins
jecxz
sub
repz
mov
xor
mov
pop
pop
(bad)
scas
xor
test
int3
loopne
mov
jp
mov
repz
call
fsubr
push
add
sbb
retf
mov
mov
xchg
xlat
xchg
push
imul
leave
js
jp
mov
xlat
je
ja
sbb
xchg
sub
jne
and
mov
cdq
das
fcmovbe
in
stc
xchg
xlat
xor
push
adc
sub
mov
dec
mov
xor
loop
xchg
jns
adc
or
or
mov
mov
xor
stc
(bad)
jmp
sub
jns
mov
movs
jnp
je
leave
sub
push
jle
ins
or
xlat
out
push
push
mov
xor
fucomp
clc
push
repz
repz
sub
xor
shl
jl
mov
imul
lods
jo
inc
mov
jae
jge
jo
inc
fs
adc
ins
mov
mov
jecxz
xchg
dec
mov
push
mov
arpl
out
adc
sub
inc
call
sub
icebp
mov
icebp
js
push
int
sbb
sbb
mov
mov
pop
jp
jp
retf
mov
jne
loop
push
pop
add
push
popf
in
xchg
pop
add
or
dec
leave
mov
inc
imul
ins
mov
xchg
ins
mov
test
adc
call
xlat
in
jb
test
leave
xchg
xlat
jmp
rcl
push
outs
mov
shl
mov
test
or
xchg
into
outs
mov
hlt
in
sub
push
outs
(bad)
push
xlat
ins
mov
sub
adc
(bad)
repz
xchg
ins
mov
test
ins
mov
xchg
adc
mul
repz
mov
push
xchg
repz
lods
jo
fs
sub
xchg
fimul
cli
xlat
or
ins
xor
fldcw
and
and
ss
sub
adc
in
enter
nop
mov
push
test
sub
dec
mov
jmp
and
and
ss
stos
jecxz
adc
in
dec
push
repz
push
push
lods
push
fisubr
sbb
ror
lods
sub
in
clc
not
ins
mov
(bad)
sub
mov
and
(bad)
in
and
push
inc
mov
xlat
in
or
cld
out
int3
mov
mov
in
out
xchg
(bad)
ins
repz
inc
ins
mov
cmc
ins
mov
push
in
mov
ins
or
xlat
ins
repz
push
imul
jmp
push
mov
xchg
xlat
jo
xchg
push
pusha
mov
xlat
in
das
mov
push
push
push
ins
adc
sti
xlat
in
das
jmp
gs
push
in
lea
int
mov
into
mov
adc
ins
adc
repz
out
sbb
xchg
xlat
ins
lea
repz
rcl
xlat
sub
push
push
ins
lea
in
leave
xchg
xlat
out
cdq
hlt
xlat
imul
push
ins
mov
xchg
ins
or
xlat
xchg
or
push
jp
xchg
aad
lea
cmps
outs
adc
xchg
xlat
sbb
pop
push
jae
xchg
push
in
lea
clc
in
mov
push
add
aaa
je
xchg
(bad)
(bad)
in
push
push
ins
xchg
xchg
xlat
in
in
sti
push
ins
or
(bad)
mov
sbb
pop
aas
sbb
xchg
xlat
xchg
or
push
dec
or
push
ins
lea
cmps
ins
sbb
ins
mov
xlat
lods
icebp
push
push
outs
scas
xchg
aam
mov
push
ins
adc
out
mov
aam
mov
hlt
ins
or
shr
jmp
or
xlat
in
jb
test
(bad)
xchg
push
in
rcl
push
outs
mov
push
mov
xchg
push
ins
mov
test
in
mov
dec
outs
mov
imul
sub
push
out
stos
push
xlat
ins
mov
rcr
mov
test
push
push
push
ins
scas
xchg
push
push
jae
xlat
je
xchg
(bad)
sub
xchg
(bad)
test
mov
push
in
or
hlt
in
dec
mov
ins
push
jmp
out
xchg
push
jnp
push
push
ins
mov
rcl
lea
xlat
ins
or
shl
out
call
imul
ins
mov
test
dec
mov
xlat
in
or
push
stos
ins
mov
out
mov
aam
mov
xchg
call
int3
xchg
(bad)
ins
xrelease
mov
xlat
sub
mov
xlat
inc
mov
xlat
in
or
clc
in
mov
push
push
in
or
sti
out
dec
fcom
ins
mov
pop
in
in
xchg
push
scas
test
xor
into
xchg
jecxz
sbb
xlat
in
dec
xchg
xlat
lods
sub
jb
push
xchg
in
or
adc
adc
push
sub
xchg
in
call
cld
xchg
adc
cs
cmp
mov
push
stos
arpl
sbb
in
or
cwde
cmp
lea
xchg
ins
or
mov
lock
fs
push
in
add
pop
fimul
xlat
sbb
mov
xlat
in
ss
stos
arpl
sbb
in
or
cwde
cmp
mov
xchg
ins
or
sahf
lods
lock
fs
adc
and
push
push
in
dec
and
cwde
mov
push
adc
sub
dec
mov
outs
in
stc
sar
lock
ins
aad
cwde
mov
lea
xchg
fimul
sti
xlat
add
push
call
push
dec
mov
in
jns
jnp
lock
call
sub
xchg
fimul
iret
xlat
or
fisttp
pop
sub
mov
jge
push
mov
jecxz
adc
in
dec
push
repz
mov
push
adc
sub
dec
or
adc
dec
sar
xchg
cmc
pop
dec
or
push
push
jae
adc
sub
shl
imul
xlat
ins
mov
dec
xchg
push
mov
dec
or
arpl
test
sub
repz
repz
sbb
ins
int3
xchg
jecxz
xchg
xchg
push
dec
or
push
data16
xchg
push
mov
dec
or
push
dec
dec
push
push
xchg
push
mov
dec
or
push
inc
dec
push
push
xchg
push
mov
dec
or
push
adc
push
mov
mov
dec
or
adc
xchg
xlat
jmp
mov
adc
dec
lods
outs
mov
out
mov
sub
or
mov
into
ins
mov
ds
jge
sub
xchg
xchg
xlat
test
mov
cmps
sub
leave
inc
ins
int3
xchg
xlat
xlat
test
mov
xlat
mov
adc
shl
push
dec
and
or
mov
aam
(bad)
xchg
sbb
(bad)
enter
mov
out
xchg
xlat
scas
jns
shl
or
lods
shr
xchg
xlat
jmp
imul
adc
ins
mov
xor
dec
push
and
or
mov
aam
(bad)
xchg
sbb
xchg
adc
mov
enter
mov
out
xchg
xlat
stos
jns
shl
seto
ins
out
xchg
xlat
fisttp
mov
jb
xchg
xchg
mov
xchg
xlat
sub
dec
xchg
outs
push
mov
push
ins
or
push
sub
pop
adc
out
adc
ins
or
(bad)
sub
pop
aaa
dec
mov
repnz
mov
push
repz
int
adc
or
push
dec
or
adc
dec
push
repnz
sub
xlat
cwde
mov
xchg
mov
ss
xchg
xchg
xlat
xchg
leave
jg
ror
cli
xlat
add
push
ins
pusha
push
cmp
sub
test
jb
mov
sub
sub
xchg
stc
pop
(bad)
jb
lahf
xchg
sub
sub
xchg
stc
adc
xchg
out
dec
xlat
mov
sub
test
imul
in
xchg
lea
(bad)
inc
bnd
cs
adc
or
adc
(bad)
xlat
jmp
or
xchg
repz
lock
dec
imul
out
sub
in
mov
in
dec
push
dec
sbb
push
je
adc
arpl
cs
or
push
in
dec
push
cmps
xlat
push
mov
or
pop
in
stc
xchg
xlat
xchg
leave
loope
lods
sub
test
adc
or
push
jmp
cmp
scas
lods
sub
in
clc
xchg
mov
dec
push
push
outs
sub
test
and
in
int
rep
jo
push
out
fcom
ins
dec
or
push
test
jecxz
dec
into
push
push
js
push
pop
out
dec
push
and
int3
cmp
or
xchg
jb
push
push
test
lods
cmp
mov
dec
dec
mov
out
or
adc
in
lea
xchg
sub
adc
inc
dec
pop
pop
test
mov
popf
(bad)
adc
inc
dec
pop
push
test
mov
jmp
mov
xchg
jmp
sub
out
dec
push
mov
push
test
xchg
inc
dec
or
pop
mov
inc
ins
push
and
xor
xchg
xlat
xchg
int
sub
(bad)
jmp
movs
scas
jne
or
jecxz
jmp
ss
and
push
inc
(bad)
and
in
mov
cmc
push
mov
jg
xchg
cmc
xchg
push
add
push
(bad)
mov
push
lods
out
test
repz
mov
fwait
dec
adc
(bad)
xchg
outs
imul
push
mov
push
xchg
repz
mov
jmp
push
mov
push
in
out
xchg
push
aad
xchg
mov
xor
ins
clc
xchg
xlat
xchg
jae
sub
mov
scas
fcomi
xchg
and
mov
push
xchg
repz
and
xor
js
xor
repz
ror
aam
adc
imul
stc
jae
mov
mov
push
xchg
repz
and
xor
js
xor
repz
sub
outs
jne
aad
adc
mov
xchg
or
xlat
lods
outs
xchg
pop
adc
cmps
lods
outs
xchg
sbb
jae
mov
mov
mov
ins
js
xor
repz
vpcmpeqw
jne
adc
imul
xor
mov
mov
(bad)
outs
daa
jmp
xor
repz
sub
mov
scas
xor
push
imul
xchg
jae
sub
enter
or
adc
xchg
repz
jmp
psubsw
push
and
mov
imul
outs
js
mov
repz
push
cdq
and
imul
jae
push
adc
cdq
cs
mov
or
leave
stos
push
mov
dec
mov
cmps
dec
mov
outs
into
lods
mov
push
xor
rcl
mov
ins
or
xlat
ins
mov
xlat
ins
mov
xlat
ins
mov
jge
cmp
mov
sbb
push
sub
sub
retf
xchg
mov
in
jns
xlat
jnp
xchg
push
xchg
out
xchg
nop
int3
adc
jecxz
outs
lods
fild
sbb
xchg
xlat
je
out
nop
xchg
push
xchg
inc
inc
push
out
popf
xchg
dec
imul
shr
sbb
in
pop
sub
arpl
bound
xchg
jns
sub
push
and
out
or
ins
or
and
and
dec
(bad)
aam
jns
imul
xor
xor
xchg
xlat
(bad)
icebp
wrmsr
or
gs
dec
jnp
xlat
push
push
mov
push
bound
add
mov
jmp
enter
clc
xchg
push
fstp
aas
sub
dec
imul
out
adc
ins
loop
repz
stc
jmp
push
mov
adc
push
jmp
xor
push
adc
out
aam
mov
adc
jbe
xchg
repz
lock
and
test
gs
push
or
mov
xor
push
in
dec
cwde
fistp
xchg
cmc
push
xchg
dec
imul
nop
jns
cmps
xchg
std
inc
pop
nop
rol
movs
mov
aaa
(bad)
cs
jbe
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
fdecstp
ss
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
div
cmp
cmp
add
shl
and
test
inc
das
and
add
out
shl
loopne
mov
shl
out
test
loope
and
test
outs
or
out
shl
jecxz
ss
les
or
jmp
popa
and
test
div
cmp
div
cmp
jbe
cmp
div
cmp
div
cmp
div
cmp
jbe
cmp
div
cmp
div
fdecstp
ss
jbe
cmp
div
cmp
div
cmp
jbe
cmp
div
cmp
div
cmp
jbe
cmp
div
cmp
pop
jo
jbe
cmp
mov
sub
div
cmp
jbe
cmp
inc
enter
xor
jns
xchg
nop
fnstenv
cmp
xchg
fdecstp
xor
xor
sbb
xor
fcom
repz
jbe
cmp
div
cmp
jbe
cmp
pop
outs
push
fdecstp
xor
in
xchg
mov
jbe
cmp
or
cmp
xor
leave
sub
cmp
jbe
cmp
idiv
cmp
add
fnstenv
cmp
idiv
neg
addr16
jbe
cmp
lods
sahf
fdecstp
cmp
cdq
fnstenv
cmp
push
or
cmp
cmp
cmp
das
mov
idiv
cmp
or
jbe
cmp
idiv
cmp
mov
cmp
test
pop
xor
idiv
cmp
bound
cmp
or
fdecstp
es
(bad)
jmp
fnstenv
cmp
push
mov
cmp
jbe
cmp
ins
fdecstp
and
push
xor
aaa
fnstenv
cmp
mov
fdecstp
and
or
pop
popa
std
push
fdecstp
and
xchg
mov
sbb
jbe
cmp
mul
cmp
jbe
cmp
mul
cmp
and
sbb
and
adc
mul
cmp
lock
cmp
dec
jmp
cmp
ror
sbb
mov
cmp
or
jbe
cmp
imul
jg
pusha
loopne
jbe
cmp
repz
adc
pop
push
fnstenv
cmp
imul
cmp
imul
jbe
cmp
imul
cmp
xchg
fnstenv
cmp
xor
mov
inc
fmul
xchg
fnstenv
cmp
lods
add
fdecstp
sub
mov
jbe
cmp
mov
cmp
dec
add
cmp
mov
jbe
cmp
not
cli
cwde
cmp
fnstenv
cmp
not
rcr
jbe
cmp
adc
or
sbb
fnstenv
cmp
sbb
sub
not
cmp
mov
fnstenv
cmp
mov
fdecstp
adc
dec
cmp
add
shl
adc
icebp
mov
adc
fwait
pop
adc
cmp
mov
jge
neg
cmp
popf
jl
jbe
cmp
xor
cmp
in
fcmovu
jbe
cmp
mov
sbb
pop
fnstenv
cmp
aam
int3
fdecstp
sbb
and
sbb
fisttp
cmp
jbe
cmp
lahf
pop
fdecstp
sbb
cmps
cmps
add
lock
leave
fnstenv
cmp
test
jb
mov
fnstenv
cmp
lahf
cdq
inc
fdecstp
pop
cmp
jbe
cmp
adc
add
jae
push
out
fnstenv
cmp
test
fnstenv
cmp
test
adc
ror
jle
jnp
fdecstp
add
mov
loopne
fnstenv
cmp
call
or
add
fdecstp
add
imul
inc
test
xlat
pop
inc
fcompp
jbe
cmp
popa
call
cmp
jbe
cmp
test
fdecstp
or
mov
pminsw
jbe
cmp
pop
dec
(bad)
dec
pop
jns
jbe
cmp
or
out
or
or
test
sub
cmp
jp
fnstenv
cmp
add
fdecstp
or
jmp
sub
cmp
test
sbb
jbe
cmp
fidiv
div
ins
and
cmp
(bad)
in
div
adc
jbe
fnstenv
cmp
je
xchg
div
mov
fstp
jbe
cmp
sub
fdecstp
jne
cmp
jne
or
nop
fdecstp
jb
popa
mov
cmp
test
mov
jae
lock
leave
or
div
call
cmp
div
imul
dec
in
jbe
cmp
idiv
xchg
jle
in
jge
mov
retf
dec
xchg
fnstenv
cmp
idiv
inc
in
fnstenv
cmp
mov
jge
xchg
dec
pop
lods
fnstenv
cmp
mov
neg
idiv
stc
dec
rcl
fnstenv
cmp
aad
sbb
jnp
push
in
jo
jbe
cmp
idiv
test
js
out
pop
sar
fstp
cld
(bad)
fnstenv
cmp
mul
and
jg
jbe
cmp
xchg
fidivr
mul
aaa
dec
jnp
fnstenv
cmp
mul
dec
mov
cmp
pop
cmp
cmp
mov
xchg
pop
jb
fdecstp
bound
and
jbe
cmp
aam
fdecstp
arpl
pop
cdq
hlt
cmp
jbe
cmp
arpl
mul
int3
call
ds
xchg
fdecstp
popa
cmp
jbe
cmp
pop
sti
fcmovnu
imul
sub
rcl
fnstenv
cmp
jecxz
fdecstp
outs
cmp
jbe
cmp
jns
fdecstp
ins
cmp
arpl
fnstenv
cmp
rcl
ins
cmp
arpl
fnstenv
cmp
iret
fcompp
imul
lahf
mov
push
dec
int3
xchg
scas
fdecstp
imul
ss
fnstenv
cmp
paddb
xor
jbe
cmp
outs
aas
fdecstp
imul
fnstenv
cmp
jmp
push
cmp
lea
(bad)
cmp
jbe
cmp
not
sub
push
cmp
lds
(bad)
mov
lods
fnstenv
cmp
or
fdecstp
push
cmp
add
fnstenv
cmp
sub
and
dec
(bad)
repz
jbe
cmp
not
dec
push
cmp
je
fdecstp
push
cmp
push
cmp
clc
sub
fdecstp
pop
cmp
sbb
sub
jbe
cmp
lds
cmp
add
call
cmc
aam
neg
addr16
fnstenv
cmp
adc
fdecstp
pop
cmp
or
int3
fnstenv
cmp
pop
cmp
arpl
push
neg
and
push
fnstenv
cmp
test
neg
xor
pop
cmp
sub
fdecstp
pop
cmp
clc
and
hlt
add
fdecstp
inc
cmp
mov
fnstenv
cmp
nop
cmc
jno
test
inc
mov
or
cmp
(bad)
scas
ins
fnstenv
cmp
add
fdecstp
inc
cmp
sbb
cwde
stos
dec
(bad)
test
leave
push
pop
fnstenv
cmp
test
push
in
fnstenv
cmp
sbb
fdecstp
inc
cmp
in
dec
fnstenv
cmp
test
lahf
hlt
lock
cmp
pop
leave
test
test
mov
dec
cmp
in
in
fdecstp
dec
cmp
std
mov
cmp
pop
mov
cmp
jbe
cmp
inc
push
lock
dec
cmp
test
push
outs
mov
jbe
cmp
sbb
fdecstp
dec
cmp
dec
pop
dec
fnstenv
cmp
adc
dec
cmp
out
sbb
dec
cmp
xchg
fcmovu
div
fnstenv
cmp
inc
fs
div
(bad)
fnstenv
cmp
div
lods
fnstenv
cmp
div
std
fnstenv
cmp
add
fdecstp
mov
mov
mov
out
pushf
adc
div
mov
jbe
cmp
ja
rcr
idiv
push
fnstenv
cmp
push
int3
pop
fdecstp
mov
rcr
jbe
cmp
sbb
mov
jbe
cmp
idiv
xor
xchg
pop
loop
fdecstp
mov
in
jbe
cmp
idiv
or
jbe
cmp
mov
aaa
fnstenv
cmp
jmp
mov
mov
jmp
bound
fdecstp
cmps
cmp
jbe
cmp
out
jp
mul
and
jbe
cmp
mul
fnstenv
cmp
sub
inc
fdecstp
movs
cmp
test
add
jbe
cmp
sti
cmps
and
push
dec
mov
cmp
cmps
fnstenv
cmp
fadd
mov
mul
rcr
jbe
cmp
push
sub
mul
push
jbe
cmp
mov
scas
cmp
xor
scas
fnstenv
cmp
imul
call
mov
fdecstp
lods
cmp
scas
mov
fnstenv
cmp
imul
push
fnstenv
cmp
sahf
ins
mov
imul
jmp
aaa
test
stos
cmp
sub
fnstenv
cmp
mov
cmp
fmul
imul
dec
fnstenv
cmp
inc
neg
jbe
cmp
inc
stos
out
not
mov
dec
sub
int
not
fnstenv
cmp
sub
jge
jbe
fnstenv
cmp
xchg
cmp
mov
xlat
outs
fcomp
not
popa
fnstenv
cmp
not
mov
push
dec
int
fdecstp
xchg
cmp
xchg
cmp
sub
fdecstp
sahf
cmp
mov
sahf
cmp
neg
xor
jbe
cmp
push
cmp
fdecstp
pushf
cmp
rcr
jbe
cmp
loop
test
inc
mov
call
jbe
cmp
neg
repnz
cmp
inc
inc
fdecstp
cwde
cmp
jbe
cmp
mov
cmp
jbe
jbe
jbe
cmp
test
fnstenv
cmp
test
fnstenv
cmp
cs
cmp
jbe
cmp
sbb
mov
jbe
cmp
and
pop
fdecstp
cmp
ficom
jbe
cmp
test
fnstenv
cmp
test
fnstenv
cmp
test
fdecstp
(bad)
cmp
dec
xor
(bad)
int
in
fdecstp
mov
cmps
or
push
fnstenv
cmp
aaa
into
adc
test
fnstenv
cmp
out
inc
fdecstp
mov
scas
xor
or
test
mov
popa
jmp
mov
or
fstp
stc
cs
fnstenv
cmp
test
fnstenv
cmp
div
cmp
jbe
cmp
div
cmp
jge
lock
cmp
push
mov
div
cmp
cmc
mov
cmp
div
cmp
jbe
cmp
jmp
mov
div
cmp
mov
push
jbe
cmp
loop
or
div
cmp
retf
jbe
cmp
mov
loop
div
cmp
jbe
cmp
mov
idiv
cmp
dec
jmp
sbb
std
cmp
mov
cmp
idiv
cmp
xchg
cwde
fnstenv
cmp
movs
leave
mov
idiv
cmp
popa
rcr
jbe
cmp
hlt
sub
idiv
cmp
cli
pop
jo
jbe
cmp
idiv
cmp
xor
and
out
dec
jae
fcomp
jbe
cmp
shl
mul
cmp
and
cmp
or
cmp
dec
cs
jbe
cmp
mul
cmp
sbb
fnstenv
cmp
mov
loop
sbb
fnstenv
cmp
and
cmp
(bad)
mov
cmp
mov
mul
cmp
imul
jbe
cmp
retf
fdecstp
loope
leave
(bad)
push
psubusw
cmp
sbb
fdecstp
out
cmp
out
cmp
cmp
cmp
sub
out
cmp
sbb
cmp
jbe
cmp
adc
fdecstp
in
cmp
dec
inc
fnstenv
cmp
mov
jmp
jbe
cmp
cdq
push
xchg
fdecstp
jmp
mov
jbe
cmp
fsubr
cmp
call
mov
imul
cmp
cs
fnstenv
cmp
js
fdecstp
(bad)
cmp
jbe
cmp
dec
add
fdecstp
xlat
cmp
inc
inc
pop
fnstenv
cmp
not
cmp
cmps
sbb
aam
aad
mov
fdecstp
aad
sbb
movs
dec
inc
mov
not
cmp
into
lods
xchg
fnstenv
cmp
not
cmp
xor
in
jbe
cmp
inc
push
fdecstp
sar
outs
jo
je
jbe
cmp
add
mov
pop
dec
xor
fnstenv
cmp
pop
mov
neg
cmp
stos
mov
fnstenv
cmp
neg
cmp
jbe
cmp
sbb
mov
neg
cmp
jbe
cmp
(bad)
xchg
xor
neg
cmp
push
fnstenv
cmp
scas
mov
fdecstp
fidivr
or
jbe
cmp
xchg
fdecstp
fstp
jb
test
fnstenv
cmp
aam
mov
in
and
cmp
cld
mov
fdecstp
fnstcw
ret
inc
fnstenv
cmp
test
fild
(bad)
cmp
xchg
cmc
clc
sub
fnstenv
cmp
sahf
mov
pusha
ins
lods
and
jbe
cmp
popa
xor
fdecstp
lds
sbb
lds
jo
sahf
push
test
fiadd
ret
imul
cmp
and
jbe
cmp
ror
push
xchg
pop
mov
dec
push
sar
aas
and
fnstenv
cmp
jb
fdecstp
into
cmp
pop
lods
fnstenv
cmp
(bad)
rcr
test
mov
cmp
imul
cmp
push
fnstenv
cmp
test
(bad)
or
into
fnstenv
cmp
test
stos
xor
xor
jbe
cmp
leave
jge
fdecstp
retf
cmp
jae
lahf
fnstenv
cmp
aas
mov
cmp
push
xlat
loopne
jbe
cmp
and
test
clc
xor
cmp
ss
and
fnstenv
cmp
push
jmp
cmp
jbe
cmp
div
pusha
mov
retf
fnstenv
cmp
dec
popf
xchg
fdecstp
xor
cdq
fnstenv
cmp
sbb
div
cmp
jbe
cmp
jmp
mov
jbe
cmp
jmp
fnstenv
cmp
div
cmp
repz
(bad)
jbe
cmp
jo
fdecstp
cmp
loop
loopne
jbe
cmp
idiv
cmp
mov
xchg
fnstenv
cmp
mov
imul
je
xor
jbe
cmp
xchg
xchg
fdecstp
cmp
or
jbe
cmp
add
idiv
cmp
sub
fnstenv
cmp
sub
cmp
add
add
pop
arpl
cwde
fdecstp
cmp
ss
dec
ret
cmp
dec
mov
cmp
daa
inc
mov
fnstenv
cmp
mul
cmp
ret
jbe
cmp
dec
pmaxsw
mul
cmp
mov
mov
in
sub
mov
mul
pop
ss
and
jbe
cmp
sbb
push
fdecstp
and
in
jbe
cmp
out
fdecstp
and
cmp
and
sub
xchg
inc
mov
and
cmp
sti
xchg
fdecstp
and
cmps
sbb
cmp
pop
arpl
mul
cmp
imul
(bad)
ds
fdecstp
cmp
hlt
jmp
aas
fcmovnu
imul
cmp
call
daa
mov
sub
dec
inc
and
fnstenv
cmp
sub
loope
jbe
cmp
jp
fdecstp
sub
or
sar
into
mov
add
imul
cmp
jbe
cmp
jmp
ja
fidivr
fnstenv
cmp
mov
pop
fdecstp
sub
and
xchg
mov
jbe
cmp
lea
in
fdecstp
push
cmp
stc
fnstenv
cmp
mov
fdecstp
pop
cmp
jbe
cmp
gs
clc
fdecstp
adc
mov
jbe
cmp
out
sar
adc
adc
xchg
fdecstp
adc
dec
xchg
enter
cmp
mov
inc
fdecstp
adc
dec
mov
fnstenv
cmp
repz
fdecstp
adc
dec
daa
inc
inc
fnstenv
cmp
movs
inc
mov
not
cmp
outs
jb
jbe
cmp
sub
fdecstp
push
cmp
xchg
int
fnstenv
cmp
push
fs
pop
cmp
loope
fnstenv
cmp
dec
dec
fdecstp
sbb
fdivp
cs
jbe
cmp
sbb
inc
fwait
and
fnstenv
cmp
popa
mov
jno
call
cmp
into
and
fdecstp
push
cmp
adc
fnstenv
cmp
test
les
pop
cmp
test
fcmovnu
lahf
fnstenv
cmp
and
test
fnstenv
cmp
test
cld
pop
pop
xchg
jbe
cmp
add
fdecstp
add
ffreep
cld
fnstenv
cmp
fucomp
fdecstp
add
hlt
xchg
sub
fnstenv
cmp
test
pop
lods
sbb
fnstenv
cmp
push
cmp
mov
push
cmp
test
ret
fadd
leave
fnstenv
cmp
test
cmp
jbe
cmp
inc
jns
fdecstp
or
and
jbe
cmp
dec
pop
fdecstp
or
add
out
fnstenv
cmp
test
in
ret
fnstenv
cmp
fwait
jecxz
test
lea
rcr
or
out
cmc
fdecstp
or
adc
mov
fnstenv
cmp
test
fdecstp
jbe
dec
or
fnstenv
cmp
div
ins
cld
mov
fnstenv
cmp
push
pop
stos
fdecstp
je
cmp
je
sbb
jne
pop
shl
sub
jne
sahf
ja
div
sbb
push
fnstenv
cmp
dec
aad
fdecstp
jae
sbb
cmp
loopne
fdecstp
jo
movs
sub
cmp
jbe
cmp
jl
in
div
and
jbe
cmp
sub
fdecstp
jle
lahf
pushf
in
xchg
fnstenv
cmp
inc
retf
fdecstp
jg
mov
fnstenv
cmp
idiv
or
cmp
push
ss
idiv
sar
jge
js
sbb
fdecstp
jp
lahf
xor
fnstenv
cmp
idiv
xor
dec
xlat
fnstenv
cmp
ret
out
loopne
idiv
dec
(bad)
or
fnstenv
cmp
pushf
adc
push
in
jbe
cmp
mul
imul
cmp
add
fdecstp
cmp
push
fnstenv
cmp
mov
cmp
jbe
cmp
in
sbb
mul
(bad)
pop
repnz
fnstenv
cmp
test
fdecstp
bound
or
in
mov
or
arpl
(bad)
movs
mov
fnstenv
cmp
mov
cmp
xchg
sbb
fnstenv
cmp
mul
popf
mul
fnstenv
cmp
or
outs
cmp
jl
fnstenv
cmp
cdq
aam
fdecstp
outs
cmp
jbe
cmp
imul
mov
cmp
daa
(bad)
fdecstp
ins
cmp
jbe
cmp
arpl
cmp
cs
fnstenv
cmp
ds
imul
(bad)
cwde
lods
fnstenv
cmp
imul
pextrw
and
cmp
xchg
jmp
fdecstp
imul
fnstenv
cmp
ror
fdecstp
push
cmp
mov
cmp
mov
fdecstp
push
cmp
jbe
cmp
push
cmp
sahf
ret
jbe
cmp
sub
mov
jbe
cmp
not
jl
fs
fnstenv
cmp
popf
int
not
adc
jbe
cmp
and
fdecstp
push
cmp
test
push
cmp
dec
gs
push
cmp
pusha
fnstenv
cmp
int3
data16
pop
cmp
test
pop
cmp
pop
out
neg
add
mov
cmp
neg
sahf
mov
jbe
cmp
pop
cmp
xor
cmp
repnz
cmp
into
add
pop
cmp
fadd
fnstenv
cmp
daa
sub
neg
and
ins
fnstenv
cmp
jle
or
neg
push
pop
aas
cmp
jbe
cmp
shr
and
adc
fnstenv
cmp
test
imul
jbe
cmp
test
out
fnstenv
cmp
stos
push
xchg
fdecstp
inc
cmp
jbe
cmp
push
xchg
data16
inc
cmp
push
loopne
fnstenv
cmp
inc
cmp
lods
stc
mov
jbe
cmp
test
sar
cmp
inc
cmp
cmp
cmp
pop
xchg
je
test
push
inc
add
jbe
cmp
sub
cmp
mov
jbe
cmp
pop
and
fdecstp
dec
cmp
jbe
cmp
add
fdecstp
dec
cmp
jbe
cmp
test
xchg
xchg
xor
jbe
cmp
in
fdecstp
dec
cmp
adc
dec
cmp
test
pop
(bad)
rcr
dec
cmp
or
cmp
movs
fstp
jbe
cmp
mov
cmp
mov
mov
test
and
div
movs
fnstenv
cmp
div
fnstenv
cmp
popa
mov
cmp
fmul
cmp
sbb
fdecstp
mov
stos
xchg
inc
fnstenv
cmp
push
ja
fdecstp
mov
in
push
mov
das
cmp
push
fdecstp
mov
cmp
in
mov
jbe
cmp
div
(bad)
fnstenv
cmp
idiv
xchg
fnstenv
cmp
or
idiv
call
sub
fdecstp
mov
aam
jbe
cmp
idiv
or
jbe
cmp
idiv
fnstenv
cmp
cwde
je
idiv
cmp
jbe
cmp
xchg
xchg
fdecstp
cmp
pushf
pusha
nop
fnstenv
cmp
div
cmp
sbb
fnstenv
cmp
xor
hlt
retf
inc
fcompp
jbe
cmp
dec
mov
div
rcr
jbe
cmp
sbb
fdecstp
xor
or
cmp
fnstenv
cmp
cmp
cmp
out
dec
fnstenv
cmp
adc
movs
fdecstp
xor
jp
jb
fnstenv
cmp
fsubr
cmp
push
xor
fnstenv
cmp
pushf
neg
idiv
cmp
push
adc
jbe
cmp
idiv
cmp
in
mov
and
(bad)
iret
fdecstp
cmp
xchg
mov
pushf
fnstenv
cmp
dec
mov
fdecstp
cmp
cmp
jbe
cmp
xchg
xchg
idiv
cmp
mov
or
adc
loope
fdecstp
cmp
(bad)
cmp
mov
sub
fdecstp
cmp
jns
dec
mov
jbe
cmp
sub
fdecstp
cmp
xor
jbe
cmp
push
call
aas
inc
fcomp
jbe
cmp
(bad)
fdecstp
daa
cmp
xor
jbe
cmp
mov
and
scas
das
sbb
cmp
mul
push
fnstenv
cmp
and
mov
jmp
jbe
cmp
mul
cmp
ja
inc
fnstenv
cmp
and
fdecstp
and
stc
out
and
jbe
cmp
mov
sub
arpl
or
jbe
cmp
adc
adc
xchg
ja
jbe
cmp
loope
cs
das
cmp
jbe
cmp
test
retf
sub
bound
cmp
test
push
fdecstp
sub
rcr
jbe
cmp
shl
fdecstp
sub
lahf
dec
aam
fnstenv
cmp
mov
sub
xchg
rol
jbe
cmp
imul
cmp
xor
cmp
imul
cmp
loop
jmp
jbe
cmp
not
cmp
jae
pop
fnstenv
cmp
not
cmp
jbe
cmp
or
fdecstp
adc
mov
shl
jmp
jmp
cmp
inc
push
cmp
inc
jae
fdecstp
adc
mov
fistp
sbb
and
fdecstp
adc
jbe
mov
fnstenv
cmp
movs
jmp
pcmpeqd
fnstenv
cmp
sbb
cmps
fdecstp
adc
loopne
leave
and
jbe
cmp
(bad)
pop
fdecstp
push
cmp
(bad)
stc
fnstenv
cmp
and
neg
cmp
adc
jnp
jbe
cmp
sbb
and
cmps
rcr
jbe
cmp
neg
lods
fnstenv
cmp
stos
or
neg
cmp
sub
jbe
cmp
sbb
mov
cmp
cwde
jge
fdecstp
sbb
das
jl
mov
jbe
cmp
test
jns
and
cmp
fstp
fdecstp
pop
cmp
mov
pop
cmp
sbb
mov
test
out
rcr
jbe
cmp
sbb
inc
fdecstp
add
leave
fnstenv
cmp
xor
fdecstp
add
add
xchg
loop
jbe
cmp
int
test
test
xlat
jl
jmp
jbe
cmp
test
push
sub
inc
fnstenv
cmp
test
out
jmp
add
dec
jb
addr16
push
cmp
xchg
call
jo
fdecstp
(bad)
addr16
ret
fnstenv
cmp
xor
popf
fdecstp
or
jl
mov
cmp
stos
adc
fdecstp
or
sti
fnstenv
cmp
or
fdecstp
or
cwde
adc
fnstenv
cmp
test
(bad)
or
ret
cld
cwde
push
fdecstp
or
test
jbe
cmp
test
std
cmp
jmp
mov
cmp
or
mov
xchg
pop
cmps
xor
div
push
leave
lods
push
fnstenv
cmp
xor
fdecstp
je
pop
sub
sub
jbe
cmp
mul
fdecstp
jne
dec
mov
jne
xor
stos
ss
jb
movs
xchg
cmp
mov
popa
fdecstp
jae
adc
jbe
cmp
adc
div
inc
adc
test
jbe
cmp
div
leave
or
cmp
jle
out
call
jle
adc
idiv
or
jg
popa
pop
mov
cmp
jbe
cmp
popf
cmp
fdecstp
jge
push
addr16
clc
fnstenv
cmp
jmp
add
pop
retf
fnstenv
cmp
mov
cmp
adc
and
jbe
cmp
loopne
fdecstp
js
(bad)
xor
inc
fnstenv
cmp
test
(bad)
fdecstp
jns
mov
jbe
cmp
cmp
mov
cmp
mul
cmps
imul
jbe
cmp
or
add
in
fnstenv
cmp
lea
movs
(bad)
jp
jbe
cmp
push
and
cmp
jbe
cmp
(bad)
adc
cmp
mov
jbe
cmp
mul
inc
cmp
stc
fnstenv
cmp
mul
sbb
ret
imul
mov
jbe
cmp
or
rcr
outs
cmp
xchg
jbe
cmp
add
fdecstp
ins
cmp
ins
add
jbe
cmp
clc
mov
cmp
cmc
mov
fnstenv
cmp
push
fdecstp
push
jmp
jl
fnstenv
cmp
jnp
dec
fdecstp
imul
pop
stc
inc
fnstenv
cmp
mov
push
sub
jbe
cmp
mov
fdecstp
imul
fnstenv
cmp
not
dec
neg
inc
fnstenv
cmp
push
cmp
pop
cmp
popf
sub
cmp
and
fnstenv
cmp
ret
jle
not
not
adc
jbe
cmp
push
not
mov
jbe
cmp
fucomip
psubusw
push
cmp
or
jbe
cmp
mov
fdecstp
push
cmp
pop
pop
fnstenv
cmp
cmps
xchg
mov
not
or
retf
fnstenv
cmp
mov
fdecstp
pop
cmp
mov
pop
cmp
push
fdecstp
pop
cmp
ins
and
fnstenv
cmp
neg
mov
pop
cmp
je
fdecstp
pop
cmp
jbe
cmp
loop
pop
fnstenv
cmp
neg
imul
cmps
fnstenv
cmp
mov
jo
neg
shr
push
pop
fnstenv
cmp
aas
mov
fdecstp
inc
cmp
inc
cmp
xchg
imul
pop
lds
cld
fnstenv
cmp
gs
adc
int
fnstenv
cmp
inc
fdecstp
inc
cmp
dec
mov
fnstenv
cmp
cwde
pusha
outs
fdecstp
inc
cmp
push
sbb
jbe
cmp
test
js
rcr
jbe
cmp
pop
stos
fdecstp
inc
cmp
sub
stos
fnstenv
cmp
or
fcmovu
jbe
cmp
xor
cmp
repnz
lods
fnstenv
cmp
mov
fdecstp
dec
cmp
or
cmp
mov
fdecstp
dec
cmp
adc
xchg
jbe
cmp
push
or
test
test
or
inc
push
xchg
jmp
ss
div
push
fnstenv
cmp
sbb
fnstenv
cmp
div
mov
dec
es
mov
add
cmps
sub
jbe
cmp
cmp
cmp
mov
mov
mov
div
mov
pop
mov
mov
push
fnstenv
cmp
retf
fdecstp
mov
cmp
jbe
cmp
idiv
fnstenv
cmp
and
jbe
cmp
(bad)
in
fdecstp
mov
xor
jbe
cmp
ficom
xchg
fdecstp
mov
aad
jbe
cmp
pmullw
fdecstp
mov
sbb
mov
vpsadbw
(bad)
fnstenv
cmp
sub
add
mul
pop
fnstenv
cmp
mov
xor
mul
push
stos
mov
movs
cmp
inc
aaa
dec
fdecstp
mov
mov
jbe
cmp
(bad)
fdecstp
mov
mov
inc
pop
sbb
jbe
cmp
leave
and
mul
vpcmpeqd
mov
jbe
cmp
imul
call
cmp
imul
fnstenv
cmp
imul
xchg
fnstenv
cmp
imul
rcr
jbe
cmp
stos
cmp
jbe
cmp
js
jle
imul
fcmovnu
jbe
cmp
inc
lods
fnstenv
cmp
push
and
ret
retf
jle
jbe
cmp
not
sbb
jbe
cmp
xchg
cmp
nop
arpl
or
mov
cmp
jbe
cmp
not
xchg
jbe
cmp
not
mov
out
in
std
out
not
pusha
fnstenv
cmp
rol
xor
jbe
cmp
neg
xchg
fnstenv
cmp
neg
(bad)
fnstenv
cmp
neg
fnstenv
cmp
jle
fdecstp
popf
cmp
jbe
cmp
dec
mov
fdecstp
call
jbe
cmp
adc
fwait
cmp
sub
fnstenv
cmp
fdivr
dec
out
sbb
jbe
cmp
neg
mov
jbe
cmp
test
fnstenv
cmp
sub
fdecstp
xchg
push
out
sbb
fnstenv
cmp
test
jbe
cmp
xor
cmp
jbe
cmp
movs
out
test
fnstenv
cmp
jns
fdecstp
cmp
cmc
and
lahf
xor
cmp
dec
jne
fnstenv
cmp
test
fnstenv
cmp
cmp
cmc
mov
cmp
test
fnstenv
cmp
in
cmp
test
jbe
cmp
sbb
popf
fdecstp
lea
div
in
fnstenv
cmp
rol
fdecstp
mov
xchg
call
cmp
mov
sbb
pop
xchg
fnstenv
cmp
test
(bad)
call
lods
pusha
sub
fdecstp
mov
aad
jae
fnstenv
cmp
ret
and
div
cmp
idiv
outs
fcomip
push
fdecstp
idiv
dec
shl
fnstenv
cmp
arpl
dec
fdecstp
hlt
cmp
addr16
leave
fnstenv
cmp
lahf
xchg
div
cmp
sbb
fnstenv
cmp
repnz
iret
or
jbe
cmp
sahf
jae
div
cmp
push
or
fnstenv
cmp
div
cmp
and
fnstenv
cmp
jle
fdecstp
icebp
cmp
popf
aad
jbe
cmp
test
(bad)
cmp
jbe
cmp
sbb
(bad)
cmp
jbe
cmp
jmp
fdecstp
cld
cmp
outs
push
or
jbe
cmp
(bad)
push
fdecstp
std
cmp
jbe
cmp
idiv
cmp
pop
ss
jbe
cmp
idiv
cmp
fiadd
jbe
cmp
idiv
cmp
popf
push
jnp
jbe
cmp
idiv
cmp
jbe
cmp
clc
xchg
mov
mul
cmp
out
(bad)
fnstenv
cmp
movs
mov
fdecstp
out
mov
jbe
cmp
mov
in
js
mov
cmp
jbe
fdecstp
in
repz
jbe
cmp
mul
cmp
inc
daa
js
jbe
cmp
pop
dec
fdecstp
jecxz
dec
xchg
and
fnstenv
cmp
outs
mov
fdecstp
loopne
or
loopne
(bad)
mov
cmp
gs
icebp
fnstenv
cmp
mov
popa
fdecstp
out
cmp
icebp
xchg
fnstenv
cmp
dec
cmp
jbe
cmp
imul
cmp
movlhps
jbe
cmp
imul
cmp
sbb
fnstenv
cmp
imul
cmp
push
xchg
add
jbe
cmp
ds
fdecstp
jmp
sub
push
fnstenv
cmp
push
call
mov
call
mov
adc
jmp
loop
not
cmp
and
jbe
cmp
leave
mul
fdecstp
xlat
cmp
(bad)
mov
mov
not
cmp
mov
fnstenv
cmp
outs
loopne
not
cmp
jbe
cmp
lods
rcl
fdecstp
sar
icebp
or
cmp
fwait
icebp
mov
fdecstp
sar
dec
pop
test
cmp
not
cmp
jbe
cmp
mov
fdecstp
sar
pop
cs
js
aad
neg
cmp
jbe
jns
jbe
cmp
neg
cmp
dec
imul
fistp
sub
xor
neg
cmp
jbe
cmp
data16
fnstsw
sbb
fnstsw
sbb
neg
cmp
mov
pusha
fnstenv
cmp
neg
cmp
jbe
cmp
scas
fdecstp
fdivr
aam
xor
fnstenv
cmp
neg
cmp
xor
mov
jbe
cmp
push
cmp
test
pop
push
neg
jbe
cmp
nop
dec
lods
fdecstp
(bad)
cmp
sahf
clc
fnstenvw
cmp
push
dec
fdecstp
les
cmp
jbe
cmp
dec
or
test
mov
push
fnstenv
cmp
aas
jbe
test
sub
rcl
jbe
cmp
leave
jecxz
fdecstp
ret
cmp
jbe
cmp
xor
cmp
jbe
cmp
test
repz
fldcw
mov
into
cmp
xchg
stos
fnstenv
cmp
repnz
iret
cmp
jo
fnstenv
cmp
test
mov
in
push
fnstenv
cmp
test
adc
int
lods
cmp
sbb
ror
inc
push
fdecstp
retf
cmp
jbe
cmp
enter
arpl
popa
mov
jecxz
test
or
fnstenv
cmp
dec
aaa
rcr
cmp
jbe
cmp
movs
retf
rcr
div
cmp
push
repnz
cmp
sti
cld
test
div
setp
cmp
pop
imul
xor
movs
fnstenv
cmp
popa
mov
cmp
inc
(bad)
jbe
cmp
jmp
fdecstp
xor
mov
jbe
cmp
loope
jmp
scas
mov
lods
pop
mov
div
cmp
xor
xor
icebp
cmp
fdecstp
cmp
hlt
das
fnstenv
cmp
idiv
cmp
xor
aas
cmp
idiv
cmp
cmp
xchg
aas
mov
cmp
ror
fnstenv
cmp
idiv
cmp
push
cmc
fnstenv
cmp
ds
fdecstp
cmp
jge
aaa
in
jbe
cmp
je
(bad)
fdecstp
cmp
stos
lahf
push
fnstenv
cmp
out
jmp
fdecstp
cmp
ror
fnstenv
cmp
xchg
fchs
fdecstp
cmp
jno
fnstenv
cmp
pop
xor
mul
cmp
push
push
fnstenv
cmp
movs
cmps
inc
fdecstp
and
or
mov
cmp
xor
fdecstp
and
sub
jbe
cmp
jmp
add
cmp
sbb
cmp
xor
mov
jbe
cmp
push
adc
push
jl
sbb
and
pop
enter
mul
cmp
sub
mov
cmp
fdecstp
cmp
test
push
fnstenv
cmp
imul
cmp
lahf
mov
jbe
cmp
cmp
sub
les
sub
jmp
cmp
jbe
cmp
imul
cmp
repz
xor
sub
inc
sbb
in
jbe
cmp
bnd
imul
cmp
jbe
cmp
push
mov
cmp
movs
cmc
rcr
jbe
cmp
mov
xor
fdiv
inc
dec
fnstenv
cmp
not
cmp
jb
fnstenv
cmp
xchg
fdecstp
adc
pop
hlt
and
fnstenv
cmp
les
cmp
push
cmp
jbe
cmp
push
mov
fdecstp
adc
add
and
jbe
cmp
scas
lahf
adc
not
cmp
jbe
cmp
not
cmp
pushf
daa
fnstenv
cmp
and
sbb
not
cmp
jbe
cmp
neg
cmp
repz
mov
and
cmp
lds
pop
cmp
inc
in
in
fdecstp
sbb
aaa
cmps
jl
fnstenv
cmp
push
dec
fdecstp
sbb
pop
fnstenv
cmp
neg
cmp
and
(bad)
jbe
cmp
(bad)
fdecstp
sbb
std
pop
jns
fnstenv
cmp
neg
cmp
(bad)
mov
xor
neg
cmp
jbe
cmp
sub
fdecstp
push
cmp
fsubr
cmp
jbe
cmp
test
sbb
cmp
data16
test
adc
mov
pushf
call
add
sahf
fnstenv
cmp
mov
add
loop
fs
fnstenv
cmp
dec
mov
fdecstp
add
push
aas
lods
inc
fnstenv
cmp
xor
in
test
dec
pop
das
in
jbe
cmp
test
cmp
stos
mov
adc
test
or
ins
fnstenv
cmp
ret
fdecstp
(bad)
fxch
lock
cmp
dec
cmp
test
adc
mov
jbe
cmp
test
fnstenv
cmp
or
fdecstp
or
nop
or
mov
jbe
cmp
pop
dec
mov
mov
ja
fnstenv
cmp
cmp
test
mov
jbe
cmp
out
mov
mov
dec
sbb
jbe
cmp
in
inc
fdecstp
jbe
fdecstp
aaa
cmp
jbe
cmp
pop
loope
fdecstp
cmp
je
jbe
cmp
xor
cmp
push
push
fnstenv
cmp
fist
cmp
test
fnstenv
cmp
jb
cmp
div
aad
jbe
cmp
div
cmp
jbe
cmp
stos
scas
popa
fdecstp
xor
prefetch
or
xor
mov
div
cmp
xlat
std
fnstenv
cmp
xor
add
div
cmp
lock
fnstenv
cmp
inc
xchg
idiv
cmp
jbe
cmp
idiv
cmp
cmp
out
cmp
rol
dec
fcompp
jbe
cmp
xchg
pop
and
cmp
dec
fdecstp
cmp
shl
je
fnstenv
cmp
add
push
fdecstp
cmp
mov
ds
fnstenv
cmp
add
sub
idiv
cmp
xor
fnstenv
cmp
loopne
fdecstp
cmp
(bad)
push
cmp
sub
mul
cmp
jns
fnstenv
cmp
int
rcr
daa
cmp
imul
fnstenv
cmp
mul
pushf
push
and
lock
cmp
jmp
cmp
jnp
pop
repnz
and
mov
fimul
mov
mul
cmp
call
and
ins
loope
aam
mul
cmp
xchg
fdiv
mov
popa
out
fdecstp
and
xor
cmps
fnstenv
cmp
imul
cmp
imul
(bad)
addr16
mov
imul
cmp
std
fdecstp
sub
dec
int3
jmp
fnstenv
cmp
jnp
das
fdecstp
sub
aam
jbe
cmp
xor
imul
cmp
dec
cmp
fnstenv
cmp
imul
cmp
jbe
cmp
int3
inc
pop
fdecstp
sub
push
std
fchs
fnstenv
cmp
sub
sub
jbe
fnstenv
cmp
push
out
xlat
fdecstp
push
cmp
or
jbe
cmp
mov
pop
cmp
pop
cmp
int
js
not
add
pop
jl
jbe
cmp
not
mov
jbe
cmp
test
(bad)
fdecstp
adc
push
push
sbb
xchg
cmp
not
cmp
jg
inc
fnstenv
cmp
xchg
or
in
in
cmps
fnstenv
cmp
jb
arpl
not
cmp
cmp
jbe
cmp
xchg
test
out
cmp
in
mov
fdecstp
pop
cmp
test
cmp
neg
test
sbb
adc
outs
dec
fdecstp
sbb
dec
fnstenv
cmp
sbb
fdecstp
sbb
sti
not
fnstenv
cmp
jecxz
add
neg
cmp
sbb
inc
out
lahf
fdecstp
sbb
inc
dec
fs
jbe
cmp
sub
cmp
jbe
cmp
push
call
add
fnstenv
cmp
mov
stos
fdecstp
pop
cmp
fwait
scas
fnstenv
cmp
ficomp
loop
test
lock
imul
add
sub
test
fnstenv
cmp
mov
cmp
(bad)
ins
dec
fnstenv
cmp
pop
sub
test
mov
mov
fnstenv
cmp
imul
test
popa
push
icebp
psubusw
cmp
div
das
shl
cmp
ja
neg
(bad)
outs
fnstenv
cmp
pop
pop
jb
div
cli
cmc
xchg
fnstenv
cmp
mov
mov
div
mov
jbe
cmp
div
cdq
out
not
jbe
cmp
div
stos
xchg
(bad)
fnstenv
cmp
mov
jo
cmp
jbe
cmp
ds
sahf
fdecstp
jno
jl
mov
fnstenv
cmp
idiv
in
aad
fnstenv
cmp
jg
cmp
jg
test
loopne
fdecstp
jl
ficom
fnstenv
cmp
or
jmp
cmp
idiv
int
dec
rcr
jbe
cmp
idiv
lods
jle
sbb
fld
js
(bad)
push
outs
fnstenv
cmp
lock
cmp
mov
mov
jbe
cmp
cmp
stc
(bad)
fnstenv
cmp
mul
adc
mov
fnstenv
cmp
nop
sub
fdecstp
cmp
arpl
lods
xchg
push
fdecstp
gs
in
inc
fnstenv
cmp
mul
xchg
mov
bound
loopne
aad
fdecstp
arpl
daa
pop
push
mov
scas
lds
push
add
cmp
cmp
popa
cmp
in
xchg
fnstenv
cmp
mov
mov
imul
cmp
cmp
imul
or
test
fnstenv
cmp
adc
in
fdecstp
ins
cmp
push
sbb
push
stc
popf
fdecstp
ins
cmp
jbe
cmp
psadbw
fdecstp
push
fld
add
dec
out
stc
fdecstp
imul
jp
in
jbe
cmp
imul
aaa
daa
xchg
call
cmp
inc
sub
jbe
cmp
cmp
cmp
sti
sub
jbe
cmp
not
jne
adc
jbe
cmp
not
rcl
fnstenv
cmp
and
fdecstp
push
cmp
fwait
rcr
push
cmp
not
mov
push
cmp
not
in
in
add
jbe
cmp
neg
std
push
in
xor
jbe
cmp
enter
neg
inc
and
pop
cmp
lods
retf
cmp
neg
fisubr
push
fnstenv
cmp
mov
push
fdecstp
pop
cmp
jbe
cmp
neg
adc
jbe
cmp
jecxz
push
fdecstp
pop
cmp
mov
push
fnstenv
cmp
mov
fdecstp
pop
cmp
mov
hlt
fnstenv
cmp
mov
pop
cmp
jbe
cmp
push
inc
cmp
mov
inc
cmp
cmp
test
mov
(bad)
fnstenv
cmp
test
lods
sahf
fnstenv
cmp
mov
inc
cmp
aaa
or
jbe
cmp
test
pop
xor
cmp
es
test
xchg
popf
fnstenv
cmp
das
and
test
push
pop
stos
fnstenv
cmp
cdq
cld
fdecstp
inc
cmp
jbe
cmp
add
cmp
mov
aam
jbe
cmp
mov
fdecstp
dec
cmp
jbe
cmp
test
iret
fcmovnu
jbe
cmp
inc
mov
fdecstp
dec
cmp
cmc
psubusw
cmp
rol
aad
fldenv
jbe
cmp
(bad)
(bad)
fdecstp
dec
cmp
mov
fnstenv
cmp
pop
das
(bad)
fdecstp
dec
cmp
jbe
cmp
test
dec
mov
cmp
mov
dec
mov
cmc
fnstenv
cmp
push
cli
std
fdecstp
mov
lahf
xor
xor
mov
fdecstp
mov
ja
aad
fnstenv
cmp
jnp
fdecstp
mov
xor
mov
cmps
jmp
js
repnz
cmp
hlt
sbb
fnstenv
cmp
mov
jbe
push
fnstenv
cmp
div
dec
fnstenv
cmp
xchg
and
aas
stc
adc
jbe
cmp
jmp
mov
rcr
mov
xor
aaa
xor
outs
dec
mov
cmp
adc
mov
inc
fdecstp
mov
sti
fnstenv
cmp
or
(bad)
fdecstp
mov
cld
fnstenv
cmp
sbb
sahf
fdecstp
mov
mov
jbe
cmp
jb
popf
fdecstp
mov
rcr
jbe
cmp
mul
mov
lods
add
cmp
jbe
cmp
push
push
fdecstp
movs
cmp
pop
inc
fnstenv
cmp
push
(bad)
fs
movs
cmp
cs
lods
fnstenv
cmp
mul
xlat
fnstenv
cmp
ret
fdecstp
mov
pop
fnstenv
cmp
mul
adc
jbe
cmp
mul
lods
fnstenv
cmp
imul
fcomp
jbe
cmp
imul
pop
fnstenv
cmp
mov
lods
cmp
in
ds
fnstenv
cmp
xchg
inc
cmp
or
jbe
cmp
imul
sbb
push
sbb
clc
mov
stos
cmp
mov
fdecstp
test
jge
pop
(bad)
fnstenv
cmp
mov
cmp
xchg
sub
jbe
cmp
push
xchg
cmp
jbe
cmp
out
push
fdecstp
xchg
cmp
inc
cli
adc
jbe
cmp
not
fnstenv
cmp
cmp
ins
test
cmp
jbe
cmp
test
sub
cmp
mov
ss
xor
inc
fdecstp
aaa
cmp
jbe
cmp
div
mov
xor
push
mov
xor
hlt
fnstenv
cmp
in
stos
fdecstp
xor
inc
arpl
fnstenv
cmp
sbb
mov
jbe
cmp
imul
fdecstp
xor
aaa
gs
mov
test
div
cmp
jbe
cmp
mov
shl
cmp
pop
clc
fcmovu
idiv
cmp
jbe
cmp
pushf
fdecstp
cmp
adc
dec
pop
fnstenv
cmp
loopne
fdecstp
cmp
mov
icebp
(bad)
ss
fdecstp
cmp
add
jbe
cmp
pop
pop
(bad)
fdecstp
cmp
jae
test
push
mov
fcomp
fnstenv
cmp
mov
gs
cmp
jle
inc
adc
jbe
cmp
mul
cmp
sbb
pop
popa
cmps
fdecstp
daa
cmp
in
cld
fnstenv
cmp
mul
ss
in
fnstenv
cmp
arpl
fdecstp
and
sbb
jbe
cmp
mul
cmp
cmp
jecxz
nop
fdecstp
and
push
jbe
cmp
fadd
fdecstp
and
push
cmp
retf
fnstenv
cmp
fnsave
fdecstp
and
mov
jbe
cmp
push
fistp
fdecstp
cmp
push
or
cmp
imul
cmp
sbb
das
cmp
rol
cmp
test
xor
mov
scas
cmp
inc
fnstenv
cmp
jmp
cmp
jbe
cmp
imul
cmp
shl
fnstenv
cmp
imul
cmp
xchg
xchg
fnstenv
cmp
dec
psubusw
sub
xchg
sahf
in
fnstenv
cmp
fs
enter
cmp
mul
jbe
cmp
imul
mov
jbe
cmp
and
fdecstp
adc
or
mov
jbe
cmp
not
mov
jbe
cmp
not
cmp
jbe
cmp
cs
adc
not
cmp
lea
jbe
cmp
sub
cmp
stos
mov
pop
aam
leave
fdecstp
adc
sub
jbe
cmp
out
(bad)
fdecstp
push
cmp
jbe
cmp
cwde
cld
fdecstp
pop
cmp
lods
dec
fnstenv
cmp
neg
cmp
cmp
neg
and
jbe
cmp
(bad)
loopne
neg
cmp
imul
fnstenv
cmp
out
fdecstp
sbb
xchg
repnz
add
jbe
cmp
jle
fdecstp
sbb
fisubr
fdivr
sbb
neg
cmp
mov
sbb
leave
in
imul
jmp
js
jbe
cmp
adc
cmp
jge
fnstenv
cmp
dec
mov
cmp
jbe
cmp
or
test
fnstenv
cmp
mov
cmp
pop
enter
add
mov
stos
pop
fdecstp
add
ss
sbb
jbe
cmp
test
jecxz
movs
fnstenv
cmp
rcl
fdecstp
add
pusha
and
add
shl
jno
mov
fnstenv
cmp
mov
(bad)
sub
fnstenv
cmp
div
fnstenv
cmp
cdq
in
call
xchg
test
fnstenv
cmp
mov
cmp
sbb
cmp
(bad)
cmp
fdecstp
xor
jmp
jbe
cmp
sbb
div
cmp
and
scas
xor
fdecstp
xor
fwait
aaa
mov
icebp
int
fcomp
div
cmp
sub
cmp
shr
dec
iret
push
inc
fnstenv
cmp
mov
and
jbe
cmp
jae
mov
idiv
iret
cld
jl
fnstenv
cmp
pop
outs
pop
fdecstp
cmp
push
fnstenv
cmp
mov
cmp
add
fnstenv
cmp
adc
fdecstp
cmp
and
fnstenv
cmp
jb
loop
idiv
cmp
sub
dec
scas
ins
in
fdecstp
cmp
call
sub
fdecstp
and
outs
sub
cwde
fnstenv
cmp
mul
fcmovnu
jbe
cmp
aaa
mov
mul
cmp
sbb
cmp
mov
cmp
xchg
mov
sub
mul
cmp
push
push
sbb
jbe
cmp
jle
fdecstp
and
mov
jbe
cmp
imul
cmp
jecxz
jbe
cmp
or
fdecstp
das
cmp
in
fnstenv
cmp
fcmovne
pusha
fnstenv
cmp
adc
add
imul
sbb
jbe
cmp
inc
imul
cmp
idiv
sub
jbe
cmp
imul
cmp
jbe
cmp
pushf
ins
nop
fdecstp
sub
jb
js
fnstenv
cmp
imul
cmp
cli
fnstenv
cmp
not
cmp
cmp
fnstenv
cmp
jne
movs
fdecstp
pop
cmp
push
pop
or
jbe
cmp
mov
jbe
cmp
jno
fdecstp
adc
pop
fnstenv
cmp
not
cmp
jmp
adc
bound
adc
and
ret
fnstenv
cmp
not
cmp
sbb
adc
mov
not
cmp
test
jne
mov
neg
cmp
(bad)
and
cmp
fisubr
cmp
inc
aam
jbe
cmp
jbe
sbb
neg
mov
jbe
cmp
neg
mov
dec
jno
dec
fdecstp
sbb
sub
xchg
inc
fnstenv
cmp
mov
cmp
fmulp
sbb
jbe
cmp
neg
cmp
xchg
fmul
fnstenv
cmp
mov
fdecstp
sbb
shl
ss
fnstenv
cmp
test
je
cmp
sub
sbb
test
mov
int3
scas
fnstenv
cmp
xlat
gs
test
and
add
add
cmp
add
fnstenv
cmp
test
popf
xchg
mov
mov
mov
cmp
xchg
inc
fnstenv
cmp
or
rcr
add
mov
bound
icebp
mov
add
jp
or
fnstenv
cmp
fcomp
cmp
mov
fnstenv
cmp
xchg
inc
(bad)
fdecstp
(bad)
cmp
jbe
cmp
or
(bad)
mov
fnstenv
cmp
mov
test
fnstenv
cmp
or
div
or
mov
sub
fdecstp
or
jmp
movs
retf
or
push
sub
fnstenv
cmp
sbb
scas
fdecstp
or
pop
mov
or
lods
mov
jbe
jge
mov
cmp
div
lock
jbe
cmp
inc
sub
je
xchg
inc
xor
jbe
cmp
(bad)
call
cmp
scas
fnstenv
cmp
es
fdecstp
jb
(bad)
fadd
cmp
div
add
add
fnstenv
cmp
inc
retf
div
push
mov
jo
imul
cmp
fild
fnstenv
cmp
idiv
fcmovb
daa
jne
jbe
cmp
inc
std
jbe
idiv
(bad)
loopne
cmp
jbe
cmp
pusha
cmp
cmp
xchg
sbb
jbe
cmp
out
clc
fdecstp
jge
sub
mov
xor
fs
idiv
loope
enter
jnp
add
jbe
cmp
jbe
cmp
mov
sbb
idiv
mov
jbe
cmp
pusha
mov
xchg
sbb
cmp
jmp
fdecstp
addr16
cdq
push
das
fnstenv
cmp
mul
cld
aas
push
jbe
cmp
xor
add
mul
(bad)
cmp
cmp
xchg
dec
fdecstp
bound
out
jmp
test
cmp
mov
pusha
cmp
mul
mov
cs
jbe
cmp
and
outs
cmp
and
cmp
imul
retf
sbb
test
jbe
cmp
cmp
fdecstp
ins
cmp
ins
cmp
xlat
sbb
pop
sub
ins
cmp
mov
fdecstp
push
or
ficom
out
mov
jbe
cmp
imul
pusha
not
fnstenv
cmp
rcr
fdecstp
imul
fnstenv
cmp
sbb
fdecstp
push
cmp
push
cmp
xchg
aas
lods
fdecstp
push
cmp
xchg
neg
jbe
cmp
and
cmp
dec
mov
xchg
add
cmp
aam
push
fdecstp
push
cmp
fmul
fdecstp
push
cmp
xlat
fdecstp
pop
cmp
sub
fnstenv
cmp
neg
xor
jbe
cmp
cli
mov
neg
add
jbe
cmp
neg
pop
mov
cmp
loopne
fdecstp
pop
cmp
mov
fnstenv
cmp
test
push
ss
jbe
cmp
test
fsubp
in
jbe
cmp
test
ins
mov
jbe
cmp
mov
cmp
jbe
cmp
test
jbe
cmp
div
cmp
mov
cmp
push
mov
cmp
div
cmp
aaa
cmp
mov
leave
fdecstp
xor
add
arpl
fnstenv
cmp
div
xchg
fdecstp
xor
inc
xor
xor
jbe
cmp
hlt
mov
fdecstp
xor
lock
mov
jbe
cmp
cmp
mov
sbb
jbe
cmp
div
cmp
adc
jbe
cmp
ds
mov
cmp
mov
cmp
out
call
daa
sti
cmp
fnstenv
cmp
ins
cs
idiv
leave
fnstenv
cmp
idiv
cmp
push
xor
jbe
cmp
idiv
cmp
loope
xchg
jbe
cmp
inc
mov
cmp
ins
push
xor
jbe
cmp
movs
fdecstp
cmp
(bad)
or
jbe
cmp
mul
cmp
imul
jbe
cmp
inc
popa
scas
fdecstp
daa
cmp
or
call
cmp
jbe
cmp
outs
mov
fdecstp
and
fnstenvw
cmp
add
fdecstp
and
xor
sbb
jbe
cmp
push
cmp
retf
fnstenv
cmp
mul
cmp
jbe
cmp
iret
je
fdecstp
and
add
fnstenv
cmp
xor
imul
cmp
jmp
cmp
imul
cmp
loop
fnstenv
cmp
es
add
imul
cmps
mov
sub
aas
mov
movs
fdecstp
sub
fstp
jbe
cmp
imul
cmp
ror
cmp
out
inc
fdecstp
sub
scas
sti
aas
test
or
sub
ss
mov
jbe
cmp
imul
cmp
jbe
cmp
add
not
cmp
jbe
cmp
mov
push
push
cmp
push
cli
fdecstp
adc
jne
mov
fnstenv
cmp
adc
repnz
cmp
not
cmp
jbe
cmp
pop
rcr
not
cmp
jbe
cmp
pop
xchg
fdecstp
adc
jge
adc
jbe
cmp
fisubr
fdecstp
adc
jge
pop
sbb
jbe
cmp
cmp
cmp
pop
loopne
fdecstp
pop
cmp
xchg
(bad)
jae
jbe
cmp
mov
neg
xchg
push
add
fnstenv
cmp
pop
mov
add
rcr
jbe
cmp
icebp
adc
neg
cmp
sub
jbe
cmp
push
or
neg
cmp
pushf
push
fnstenv
cmp
neg
cmp
jbe
cmp
neg
cmp
clc
add
jg
in
fdecstp
push
cmp
rol
fnstenv
cmp
neg
fdecstp
pop
cmp
push
dec
(bad)
fnstenv
cmp
in
ins
repz
add
popf
xchg
sub
fnstenv
cmp
inc
outs
pop
fdecstp
add
arpl
jbe
cmp
sub
add
jmp
cmp
test
ss
es
fnstenv
cmp
test
pop
cmp
cmp
jno
fdecstp
add
(bad)
ins
fs
cmp
mov
push
cmp
std
inc
(bad)
fnstenv
cmp
lahf
jle
test
repnz
add
cmp
rcl
fdecstp
or
movs
jmp
dec
aas
mov
cmp
(bad)
scas
mov
movs
jmp
jge
pop
cmp
jbe
cmp
xor
fdecstp
or
cmp
nop
test
jbe
cmp
stos
ds
test
push
out
xchg
fnstenv
cmp
adc
fdecstp
or
ds
ins
fnstenvw
cmp
mov
fdecstp
jbe
movs
ret
mov
cmp
inc
sub
pop
or
xor
jbe
cmp
clc
ins
jecxz
div
jl
vpcmpeqd
pop
dec
jmp
div
movs
mov
scas
fnstenv
cmp
sbb
div
shl
dec
fnstenv
cmp
div
js
push
sbb
mov
loope
fdecstp
jo
mov
dec
int3
fnstenv
cmp
sub
cmp
jbe
cmp
jbe
fdecstp
jle
enter
fnstenv
cmp
mov
std
sub
cmp
lods
xchg
push
fdecstp
jl
data16
adc
mov
idiv
cmp
jbe
cmp
ins
xchg
outs
fdecstp
jp
popa
and
fnstenv
cmp
aad
adc
idiv
or
xor
jbe
cmp
or
int3
or
cmp
jge
xchg
fdecstp
jns
xor
sbb
addr16
pop
fdecstp
cmp
outs
jne
jbe
cmp
xor
mul
jno
pop
ret
cmp
cld
shl
fdecstp
fs
into
loope
fnstenv
cmp
mul
js
inc
out
jbe
cmp
icebp
fwait
dec
fdecstp
bound
dec
add
bound
xchg
adc
(bad)
push
int3
stc
fnstenv
cmp
mul
int3
pop
jmp
push
stc
enter
cmp
jbe
cmp
cmps
mov
cmp
and
cmp
cmp
push
push
sub
fnstenv
cmp
aaa
repz
fdecstp
ins
cmp
fst
lahf
fnstenv
cmp
imul
or
ins
cmp
imul
popf
seto
dec
or
in
imul
sbb
fsub
imul
jne
fs
push
cmc
fnstenv
cmp
dec
je
imul
in
mov
cmp
femms
fdecstp
push
cmp
jbe
cmp
sub
imul
push
cmp
jbe
cmp
not
xchg
dec
jbe
jbe
cmp
fcom
cmp
or
jbe
cmp
not
dec
test
push
cmp
div
mov
not
dec
cwde
xor
out
pop
fdecstp
push
cmp
dec
out
jbe
cmp
push
cmp
lods
ins
fnstenv
cmp
neg
enter
fnstenv
cmp
neg
fld
scas
repnz
cmp
nop
fdecstp
pop
cmp
sbb
pop
cmp
jg
loopne
neg
sub
fnstenv
cmp
neg
or
push
push
fnstenv
cmp
neg
dec
pop
popf
vpcmpeqd
pop
scas
div
out
pop
ins
arpl
jbe
cmp
js
fdecstp
pop
cmp
push
fnstenv
cmp
test
sbb
fnstenv
cmp
jne
fdecstp
inc
cmp
push
test
fnstenv
cmp
xor
mov
jbe
cmp
ror
inc
cmp
lock
jbe
cmp
lea
cmp
dec
pushf
(bad)
fnstenv
cmp
test
jnp
adc
jbe
cmp
ret
and
test
inc
ss
fnstenv
cmp
test
adc
sub
rcr
xchg
(bad)
fdecstp
dec
cmp
popf
test
fnstenv
cmp
test
and
dec
cmp
mov
dec
cmp
retf
add
fnstenv
cmp
test
mov
neg
jbe
cmp
scas
pop
or
test
mov
dec
cmp
dec
stc
push
fdecstp
dec
cmp
and
fnstenv
cmp
jbe
push
fdecstp
dec
cmp
jae
fnstenv
cmp
test
ds
push
fnstenv
cmp
jle
inc
fdecstp
mov
mov
jbe
cmp
mov
fdecstp
mov
rol
sbb
jbe
cmp
mov
mov
bound
sub
jbe
cmp
jp
fdecstp
mov
xor
mov
sbb
mov
fdecstp
mov
push
sub
cmp
jbe
cmp
div
and
jbe
cmp
pop
add
div
fcomp
jbe
cmp
aad
retf
mov
ins
cdq
cmp
cmp
ins
cmps
mov
idiv
xchg
fnstenv
cmp
xor
outs
mov
ins
fnstenv
cmp
(bad)
daa
fdecstp
mov
jecxz
jbe
cmp
sahf
cdq
daa
fdecstp
mov
fcmovu
jbe
cmp
mov
fdecstp
mov
xor
jbe
cmp
out
adc
fdecstp
mov
push
jbe
cmp
or
fdecstp
mov
fcmovnu
jbe
cmp
xor
fdecstp
mov
dec
fnstenv
cmp
ror
loopne
dec
fnstenv
cmp
cmps
cmp
jbe
cmp
fiadd
fdecstp
movs
cmp
jbe
cmp
bound
loop
mul
(bad)
fnstenv
cmp
fsub
lods
sub
mov
je
adc
lock
mov
aam
mul
repnz
cmp
xor
mov
jmp
cmp
sub
fdecstp
scas
cmp
scas
ins
fnstenv
cmp
imul
lods
fnstenv
cmp
mov
cmp
add
xlat
fnstenv
cmp
test
icebp
fdecstp
lods
cmp
div
jnp
movs
ss
stos
cmp
jbe
cmp
mov
fdecstp
stos
cmp
jbe
cmp
in
fdecstp
test
and
and
jbe
cmp
imul
vpcmpeqd
mov
not
push
jbe
cmp
not
or
jbe
cmp
not
fnstenv
cmp
sar
cmp
pop
xchg
sbb
jbe
cmp
dec
mov
not
(bad)
fnstenv
cmp
sub
inc
fdecstp
xchg
cmp
sbb
fnstenv
cmp
not
push
fnstenv
cmp
test
not
cmp
jbe
cmp
repz
shl
sahf
cmp
add
pop
pop
xchg
xor
jbe
cmp
dec
mov
neg
fnstenv
cmp
(bad)
fcom
mov
add
cmp
neg
dec
fnstenv
cmp
neg
sub
jbe
cmp
inc
rcr
neg
ret
cwde
cmp
mov
mov
adc
add
pop
sbb
mov
test
fnstenv
cmp
arpl
fdecstp
xchg
adc
xchg
xchg
jne
lahf
fdecstp
test
loopne
inc
psubusw
cmp
cmps
fdecstp
test
aad
push
jne
jbe
cmp
adc
fdecstp
cmp
push
retf
adc
jbe
cmp
test
fnstenv
cmp
in
xchg
inc
fdecstp
cmp
mov
cmp
rol
sbb
test
fnstenv
cmp
sub
test
fnstenv
cmp
xchg
sub
fdecstp
(bad)
cmp
(bad)
cmp
fnstsw
fdecstp
mov
mov
cmps
xchg
fnstenv
cmp
loope
data16
lea
sahf
xor
and
inc
mov
add
test
fnstenv
cmp
xor
fdecstp
mov
cwde
or
fnstenv
cmp
(bad)
jae
fdecstp
mov
or
mov
push
leave
sbb
test
fnstenv
cmp
jl
fdecstp
idiv
xchg
jg
scas
fnstenv
cmp
div
cmp
jbe
cmp
test
mov
mov
jbe
cmp
aas
fdecstp
cmc
cmp
cmp
inc
fnstenv
cmp
div
cmp
div
cmp
div
cmp
aaa
stos
inc
fnstenv
cmp
xor
div
cmp
mov
jne
jbe
cmp
sub
dec
fdecstp
xor
stos
cmp
sahf
fnstenv
cmp
test
fdecstp
xor
aaa
fnstenv
cmp
rol
es
fnstenv
cmp
div
cmp
leave
dec
fdecstp
xor
call
jbe
cmp
mov
cmp
jbe
cmp
jmp
dec
inc
in
fnstenv
cmp
idiv
and
jbe
cmp
mov
cmp
sub
jbe
cmp
idiv
cmp
mov
cmp
cmp
xchg
popf
fdecstp
cmp
stos
mov
cmp
fwait
inc
std
pop
fdecstp
cmp
sub
jbe
cmp
out
xchg
fdecstp
cmp
add
cmp
and
mov
mul
cmp
into
xchg
fnstenv
cmp
mul
cmp
cld
loope
fnstenv
cmp
push
dec
je
mul
cmps
outs
sahf
fstp
jbe
cmp
mul
push
fnstenv
cmp
aas
inc
fnstenv
cmp
and
and
aam
fdecstp
and
adc
and
fimul
aad
fdecstp
cmp
lahf
mov
imul
cmp
and
fnstenv
cmp
cld
mov
fdecstp
sub
fucomip
ja
fnstenv
cmp
sub
xor
int3
pushw
mov
jmp
sub
(bad)
inc
fdecstp
sub
adc
xor
mov
cmp
imul
cmp
dec
test
ret
pop
fdecstp
sub
xor
int3
mov
inc
cmp
push
cmp
out
(bad)
jbe
cmp
cmps
lds
not
cmp
retf
out
fnstenv
cmp
xlat
iret
fdecstp
adc
(bad)
enter
jbe
cmp
jns
fcompp
not
push
fnstenv
cmp
not
cmp
adc
pop
cwde
dec
push
fdecstp
adc
cmp
adc
xchg
stos
rcl
adc
inc
aam
(bad)
fnstenv
cmp
not
cmp
adc
rol
neg
cmp
pop
sub
jbe
cmp
inc
fsubr
neg
cmp
jbe
cmp
sbb
cmp
neg
push
jae
jo
jbe
cmp
neg
xlat
fnstenv
cmp
xchg
cmp
adc
sbb
out
adc
sbb
mov
cmp
sbb
sbb
sbb
aas
add
jbe
cmp
neg
cmp
push
ret
sub
jbe
cmp
cmps
push
fs
push
cmp
into
cmc
cwde
fnstenv
cmp
stos
mov
test
pusha
lods
jmp
fdecstp
add
adc
push
cmp
add
fcomp
jbe
cmp
test
push
jbe
cmp
test
ficom
pop
fnstenv
cmp
test
sahf
adc
fnstenv
cmp
sbb
mov
sub
fnstenv
cmp
cmp
test
test
mov
cmp
push
out
out
fdecstp
(bad)
stos
jmp
(bad)
mov
sahf
mov
ss
or
adc
fdecstp
or
(bad)
jbe
cmp
test
mov
jecxz
fnstenv
cmp
test
bnd
(bad)
fnstenv
cmp
xor
and
test
sub
jbe
cmp
ins
retf
test
cmp
fnstenv
cmp
jbe
scas
mov
jbe
jnp
ret
div
call
jbe
cmp
adc
cmp
or
call
add
fdecstp
jne
ja
cmp
fnstenv
cmp
div
adc
fnstenv
cmp
sub
div
or
jbe
cmp
push
xor
div
push
pmullw
fnstenv
cmp
loope
fdecstp
jno
loop
mov
cmp
fstp
cmp
(bad)
mov
sahf
fsub
or
idiv
sub
jbe
cmp
lahf
aaa
test
idiv
cmps
out
dec
fnstenv
cmp
dec
pop
sbb
idiv
adc
jbe
cmp
jp
dec
inc
loopne
fnstenv
cmp
jnp
or
or
fnstenv
cmp
xchg
mov
cmp
jbe
cmp
mov
lods
fdecstp
jns
cmp
fstp
jbe
cmp
mul
xor
and
cmp
mul
xor
cmp
push
or
jo
neg
sbb
mov
mul
mov
(bad)
mul
inc
aas
sub
fnstenv
cmp
mov
arpl
xor
jbe
cmp
ins
fdecstp
pusha
cmp
cmps
mov
fnstenv
cmp
std
or
mul
mov
inc
jo
jbe
cmp
jns
push
fdecstp
outs
cmp
loope
fnstenv
cmp
or
cmp
frstor
fnstenv
cmp
cmps
repnz
fdecstp
ins
cmp
jbe
cmp
cld
test
cmp
cwde
outs
dec
fnstenv
cmp
push
sbb
aaa
jp
fnstenv
cmp
outs
into
pop
fdecstp
imul
mov
imul
movs
push
cmp
outs
fnstenv
cmp
dec
pop
call
cmp
jbe
cmp
and
cmp
xor
mov
test
cmp
jbe
cmp
es
not
dec
cli
(bad)
fnstenv
cmp
sbb
fdecstp
push
cmp
jbe
cmp
push
cmp
outs
jo
jbe
cmp
not
and
in
sti
fnstenv
cmp
xchg
call
cmp
cmp
not
sbb
adc
fnstenv
cmp
cmp
fdecstp
pop
cmp
sub
pop
cmp
lahf
and
neg
pop
xor
pop
cmp
push
ret
fdecstp
pop
cmp
xchg
pop
fnstenv
cmp
cmp
cmp
jg
xchg
fnstenv
cmp
jle
mov
neg
rcl
fnstenv
cmp
pop
jge
fdecstp
pop
cmp
push
sub
cmp
dec
(bad)
fdecstp
pop
cmp
jbe
cmp
inc
jo
fdecstp
pop
cmp
jbe
cmp
ret
fdecstp
inc
cmp
sub
sti
fnstenv
cmp
in
dec
fdecstp
inc
cmp
xchg
int
jbe
cmp
aam
fdecstp
inc
cmp
lea
fnstenv
cmp
sbb
test
fstp
cmp
or
inc
cmp
pushf
shl
fs
out
test
movs
push
sbb
push
out
mov
inc
adc
jbe
cmp
scas
repnz
inc
cmp
jbe
cmp
jl
mov
test
inc
xchg
fnstenv
cmp
cmp
cmp
jbe
cmp
pop
loopne
fdecstp
dec
cmp
cld
nop
jle
jbe
cmp
test
call
test
sub
test
pusha
in
fnstenv
cmp
jmp
ja
inc
adc
jbe
cmp
clc
xchg
mov
push
mov
dec
cmp
add
fdecstp
dec
cmp
mov
dec
cmp
imul
fdecstp
mov
out
rcl
jbe
cmp
mov
aaa
fdecstp
mov
add
cmp
fnstenv
cmp
div
inc
fdecstp
mov
jmp
jbe
cmp
mov
or
popf
fnstenv
cmp
pop
in
div
xor
jbe
cmp
div
lahf
fnstenv
cmp
aas
and
div
push
fnstenv
cmp
mov
cmp
xor
add
jg
in
retf
fdecstp
mov
sahf
fnstenv
cmp
pushf
sub
idiv
mov
popa
or
cmp
into
call
fnstenv
cmp
test
cmp
dec
dec
fnstenv
cmp
idiv
inc
fdecstp
mov
pop
fnstenv
cmp
jbe
cmp
pop
jp
fdecstp
mov
pushf
fnstenv
cmp
mul
loope
jbe
cmp
imul
dec
imul
les
inc
rcr
mul
fnstenv
cmp
(bad)
mov
loope
mov
jnp
cli
cmps
fdecstp
mov
arpl
jbe
cmp
push
mov
xor
jg
jbe
cmp
icebp
fdecstp
mov
cmp
jbe
cmp
(bad)
out
fcomp
mul
xor
jbe
cmp
adc
push
fdecstp
scas
cmp
mov
cld
fnstenv
cmp
fmulp
sbb
lods
inc
ins
add
fbstp
lods
cmp
arpl
sub
stos
pop
fdecstp
lods
cmp
jbe
cmp
aad
stos
fdecstp
stos
cmp
retf
stos
cmp
jo
fdecstp
stos
cmp
mov
cmp
imul
mov
jbe
cmp
imul
sti
fnstenv
cmp
pop
sub
not
push
fnstenv
cmp
xchg
cmp
jbe
cmp
or
cmp
and
fnstenv
cmp
not
mov
jbe
cmp
not
ja
jbe
cmp
test
cmp
out
fnstenv
cmp
adc
and
not
out
fnstenv
cmp
out
and
not
(bad)
fnstenv
cmp
clc
(bad)
fdecstp
sahf
cmp
aaa
pusha
fnstenv
cmp
add
cmp
neg
movs
fnstenv
cmp
neg
fnstenv
cmp
neg
rcr
popf
cmp
sti
sbb
fdecstp
call
jbe
cmp
je
sti
fdecstp
fwait
cmp
jno
repz
cmp
scas
bound
cmp
sub
std
mov
cdq
cmp
jl
fnstenv
cmp
test
fnstenv
cmp
xchg
jae
jbe
fnstenv
cmp
jae
fdecstp
test
stc
in
test
fnstenv
cmp
test
lock
(bad)
cld
fnstenv
cmp
test
fnstenv
cmp
jmp
into
fdecstp
cmp
dec
fsubp
fnstenv
cmp
jb
fdecstp
cmp
stos
pop
mov
aas
jo
push
fdecstp
cmp
fnstenv
cmp
add
pop
mov
cmp
mov
test
fnstenv
cmp
test
jbe
cmp
pop
gs
test
fnstenv
cmp
cmp
test
fnstenv
cmp
test
fnstenv
cmp
fnstcw
xchg
fdecstp
mov
fcom
dec
enter
cmp
xor
test
fnstenv
cmp
aas
mov
cmp
cmp
cmp
mov
sbb
arpl
push
fnstenv
cmp
div
cmp
jl
and
div
cmp
jmp
stos
xor
ja
rol
jbe
cmp
div
cmp
rcr
fnstenv
cmp
pop
push
into
fdecstp
lock
cmps
mov
fnstenv
cmp
div
cmp
shl
xchg
aam
jecxz
idiv
cmp
and
fnstenv
cmp
mov
fdecstp
(bad)
cmp
leave
sahf
mov
jbe
cmp
mov
cld
cmp
fld
in
addr16
fdecstp
std
cmp
push
test
cmp
push
fdecstp
cli
cmp
pop
pop
push
fnstenv
cmp
mov
sti
cmp
add
leave
fnstenv
cmp
idiv
cmp
sti
sub
jbe
cmp
out
push
cmp
jbe
cmp
test
pop
fdecstp
out
(bad)
add
xor
jbe
cmp
lods
cmp
cmp
call
cmp
pusha
out
add
jbe
cmp
out
gs
loop
pmaxub
fnstenv
cmp
mul
cmp
or
fnstenv
cmp
mov
loopne
push
mov
sub
jbe
cmp
mul
cmp
xor
fnstenv
cmp
mov
out
cmp
out
cmp
dec
and
fdecstp
out
cmp
cmps
aad
fnstenv
cmp
mov
inc
dec
mov
cmp
imul
cmp
and
jns
jbe
cmp
xchg
cmp
cmp
cmp
imul
cmp
jae
or
jbe
cmp
imul
cmp
sbb
call
cdq
into
xchg
jmp
xchg
fnstenv
cmp
add
jbe
cmp
mov
sub
not
cmp
cmps
scas
mov
jbe
cmp
(bad)
adc
fdecstp
aam
pop
(bad)
and
mov
sub
inc
adc
aad
adc
call
and
cmp
cld
out
push
fdecstp
sar
jns
jmp
fisttp
sti
sub
not
cmp
test
jl
jbe
cmp
sar
jg
and
fnstenv
cmp
adc
neg
cmp
mov
fidivr
test
neg
cmp
sbb
cmp
neg
cmp
dec
rol
fnstenv
cmp
or
ins
fdecstp
fnstsw
mov
fnstsw
dec
add
fidivr
mov
es
cmp
and
fstp
into
add
fnstenv
cmp
adc
fdecstp
fdivr
movs
add
sub
fnstcw
sbb
and
fnstenv
cmp
pop
adc
fdecstp
(bad)
cmp
(bad)
fcmovu
jbe
cmp
test
bound
neg
jbe
cmp
cwde
or
mov
ins
mov
jbe
cmp
fs
fdecstp
lds
mov
je
fnstenv
cmp
(bad)
cwde
retf
fdecstp
ret
xchg
cmp
js
sahf
fdecstp
ret
cmp
test
out
xor
jb
test
xor
jbe
cmp
mov
lock
into
cmp
jbe
cmp
test
cmp
add
jbe
cmp
in
lods
fdecstp
int3
cmp
jbe
cmp
ret
mov
fdecstp
int
rol
inc
test
jbe
cmp
cs
sahf
fdecstp
retf
sub
fnstenv
cmp
dec
and
test
and
jbe
cmp
xor
mov
sbb
push
mov
jbe
cmp
test
dec
movs
por
jbe
cmp
and
cmp
cmp
fnstenv
cmp
div
cmp
(bad)
jmp
add
rcr
div
jge
dec
sbb
sbb
fdecstp
xor
and
mov
dec
xchg
fdecstp
xor
dec
popf
inc
test
jbe
cmp
mov
pop
fdecstp
xor
jnp
pop
and
jbe
cmp
fucomi
pop
fdecstp
xor
dec
mov
xor
cmps
fiadd
fnstenv
cmp
idiv
cmp
ret
fnstenv
cmp
stos
sbb
idiv
cmp
push
cmp
cld
fmul
xchg
xlat
xchg
ins
fnstenv
cmp
idiv
pop
fnstenv
cmp
xor
cmp
cmps
loope
(bad)
jbe
cmp
imul
fdecstp
cmp
scas
push
cmp
add
cmp
lahf
cmp
fnstenv
cmp
es
fdecstp
cmp
jo
xchg
dec
fnstenv
cmp
jbe
cmp
arpl
nop
fdecstp
daa
cmp
aaa
dec
add
jbe
cmp
(bad)
fnstenv
cmp
gs
jns
mul
fcmovu
jbe
cmp
mul
cmp
and
or
and
scas
es
scas
fnstenv
cmp
fwait
jle
mul
cmp
cs
fnstenv
cmp
mul
cmp
jbe
cmp
imul
cmp
jbe
cmp
jmp
outs
fdecstp
das
cmp
out
je
imul
in
pop
pop
fnstenv
cmp
pop
jae
fdecstp
sub
push
fnstenv
cmp
xchg
fdecstp
sub
or
xchg
cli
fnstenv
cmp
xchg
or
fdecstp
sub
fstp
mov
jbe
cmp
sub
push
mov
sub
push
(bad)
pop
(bad)
fdecstp
sub
jmp
not
cmp
jg
cld
fnstenv
cmp
inc
xor
cmc
gs
jmp
mov
jbe
cmp
xlat
xchg
not
sbb
adc
fcmovu
not
cmp
jbe
cmp
and
fdecstp
adc
daa
test
cmp
es
mov
not
cmp
mov
adc
pop
pop
xor
fdecstp
adc
in
push
sbb
cmp
jbe
cmp
bound
fdecstp
pop
cmp
std
push
loopne
jbe
cmp
pop
cwde
fdecstp
sbb
inc
xor
cmp
in
xlat
sbb
neg
sub
jbe
cmp
neg
cmp
xor
jbe
cmp
jbe
cmp
xor
cmp
stos
mov
inc
fstp
fdecstp
sbb
mov
sbb
cmp
test
mov
push
dec
fnstenv
cmp
test
cmp
inc
popa
fnstenv
cmp
test
sub
mov
mov
test
fnstenv
cmp
ins
pop
add
test
push
push
cld
push
fnstenv
cmp
sbb
add
shl
stc
fnstenv
cmp
cli
mov
cmp
shl
ja
jbe
cmp
test
cmp
mov
cmp
test
mov
mov
out
mov
fdecstp
(bad)
dec
jnp
fnstenv
cmp
test
scas
pusha
sbb
jbe
cmp
push
aad
fdecstp
or
adc
jbe
cmp
in
fdecstp
or
lods
and
or
xchg
cmp
adc
test
aas
cmc
and
jbe
cmp
inc
call
cmp
aad
push
fnstenv
cmp
jbe
cmp
div
stos
jne
push
fnstenv
cmp
jbe
cmp
inc
jl
fdecstp
je
add
ret
fnstenv
cmp
retf
div
test
jne
adc
neg
div
(bad)
pop
ret
jbe
cmp
loope
push
fdecstp
jae
imul
jge
xor
cmp
or
cmp
dec
inc
pop
fnstenv
cmp
out
fdecstp
jle
pop
cld
lea
jbe
cmp
and
cmp
dec
sbb
jg
jne
mov
daa
dec
dec
dec
fnstenv
cmp
in
fdecstp
jge
pop
movs
and
jbe
cmp
test
dec
inc
cmc
push
fnstenv
cmp
mov
jnp
sub
sub
cmp
(bad)
ins
ss
js
and
js
mov
cld
lahf
fdecstp
jns
xor
jbe
cmp
inc
add
data16
add
fdecstp
cmp
int3
xor
jg
add
mul
ja
jge
jbe
cmp
cmp
xor
jbe
nop
scas
fdecstp
bound
jns
sub
jbe
cmp
mul
out
fnstenv
cmp
pop
mov
cmp
pop
fnstenv
cmp
mul
fwait
sbb
cmp
jns
mov
imul
test
xchg
dec
fnstenv
cmp
jecxz
jns
imul
fwait
out
js
jbe
cmp
fidivr
fdecstp
ins
cmp
jbe
cmp
and
ins
fdecstp
ins
cmp
ret
jbe
cmp
push
movs
cmps
lahf
(bad)
fnstenv
cmp
dec
or
imul
mov
xchg
jne
jbe
cmp
js
popf
fdecstp
push
pop
fnstenv
cmp
mov
push
cmp
sbb
jbe
cmp
push
cmp
rol
fnstenv
cmp
shl
inc
xor
push
cmp
ret
fdecstp
push
cmp
push
fnstenv
cmp
popf
and
not
inc
push
pop
push
fnstenv
cmp
push
cmp
or
fnstenv
cmp
not
or
dec
fnstenv
cmp
adc
cmp
loopne
loope
jbe
cmp
fidiv
fdecstp
pop
cmp
loope
fnstenv
cmp
pop
stos
sbb
neg
popf
popf
ds
jbe
cmp
and
neg
mov
pop
cmp
pusha
or
fdecstp
pop
cmp
repnz
cmp
pop
cmp
out
jbe
cmp
neg
dec
inc
cmp
neg
xor
test
fnstenv
cmp
neg
stos
xchg
push
rcr
jbe
cmp
add
(bad)
fdecstp
inc
cmp
fnstenv
cmp
test
xchg
icebp
sbb
mov
cmp
sub
sub
jbe
cmp
test
or
fstenv
cmp
mov
test
daa
pop
sub
jbe
cmp
test
pop
push
cmp
test
mov
inc
cmp
test
mov
inc
cmp
pop
out
test
nop
cmp
fnstenv
cmp
test
jg
xor
jbe
cmp
adc
test
retf
and
jbe
cmp
or
scas
sar
jbe
cmp
bound
sti
fdecstp
dec
cmp
iret
stos
sbb
xchg
jmp
cmp
jbe
cmp
test
dec
lods
(bad)
jbe
cmp
jnp
fdecstp
dec
cmp
iret
repz
fnstenv
cmp
cmp
cmp
sub
cdq
fnstenv
cmp
div
sub
int
in
fdecstp
mov
repz
mov
jbe
cmp
div
fcompp
jbe
cmp
div
pop
fnstenv
cmp
sub
xor
div
clc
fnstenv
cmp
div
(bad)
fnstenv
cmp
outs
and
fdecstp
mov
sbb
mov
fnstenv
cmp
fld
hlt
cwde
dec
dec
fnstenv
cmp
idiv
add
outs
add
pop
fdecstp
mov
or
jbe
cmp
mov
idiv
retf
fnstenv
cmp
idiv
int3
fnstenv
cmp
seto
idiv
xor
jbe
cmp
idiv
mov
jbe
cmp
idiv
inc
fnstenv
cmp
inc
xchg
fdecstp
cmps
cmp
scas
addr16
mul
int3
fnstenv
cmp
jo
(bad)
fdecstp
movs
cmp
or
cmp
icebp
cmp
ins
jecxz
(bad)
fnstenv
cmp
pop
adc
cmp
fisubr
fnstenv
cmp
sti
mov
mul
push
fnstenv
cmp
mul
push
fnstenv
cmp
mul
(bad)
fnstenv
cmp
xchg
test
mov
jbe
cmp
imul
jl
jbe
cmp
imul
fnstenv
cmp
enter
imul
int
jbe
cmp
stos
cmp
sar
inc
fnstenv
cmp
jl
fdecstp
stos
cmp
inc
jae
fnstenv
cmp
cmp
lahf
fdecstp
test
into
sub
cmp
in
pop
fdecstp
test
push
fnstenv
cmp
inc
cli
scas
fdecstp
xchg
cmp
jbe
cmp
inc
mov
not
and
jbe
cmp
shl
fdecstp
xchg
cmp
xchg
cmp
add
das
fdecstp
xchg
cmp
dec
cmps
fnstenv
cmp
not
in
fnstenv
cmp
xchg
cmp
adc
push
fnstenv
cmp
jbe
cmp
not
mov
jbe
cmp
out
or
neg
int
jbe
cmp
fadd
in
fdecstp
lahf
cmp
jbe
cmp
and
fdecstp
pushf
cmp
jbe
cmp
popf
cmp
jbe
cmp
jbe
cmp
pop
cld
inc
fdecstp
fwait
cmp
mov
push
neg
mov
jbe
cmp
neg
rcr
cdq
cmp
jo
fdecstp
xchg
jbe
std
repnz
cmp
add
fdecstp
xchg
dec
les
fnstenv
cmp
mov
test
(bad)
iret
ja
fnstenv
cmp
dec
sub
cmp
push
sar
push
xchg
pop
fnstenv
cmp
test
fnstenv
cmp
rol
fdecstp
cmp
(bad)
stos
in
fnstenv
cmp
mov
cmp
fnstenv
cmp
jg
fdecstp
mov
inc
les
cmp
data16
fdecstp
(bad)
cmp
scas
inc
fnstenv
cmp
inc
jns
fdecstp
mov
retf
(bad)
pop
stos
fnstenv
cmp
xchg
retf
fdecstp
lea
leave
dec
enter
mov
xor
jns
fnstenv
cmp
aam
fdecstp
mov
cs
lahf
pop
fnstenv
cmp
add
fdecstp
mov
sbb
mov
je
sbb
test
fnstenv
cmp
jnp
fdecstp
idiv
stos
sar
cmp
div
cmp
mov
mov
mov
div
cmp
sbb
hlt
cmp
push
lds
test
retf
adc
jbe
cmp
div
cmp
call
out
cmp
and
div
cmp
(bad)
fnstenv
cmp
xor
cmp
dec
aaa
pop
fdecstp
icebp
cmp
jbe
cmp
dec
jnp
fdecstp
(bad)
cmp
jp
cmp
nop
mov
(bad)
cmp
mov
(bad)
cmp
idiv
cmp
jbe
cmp
and
nop
fdecstp
std
cmp
adc
fnstenv
cmp
idiv
cmp
sub
sbb
jbe
cmp
cmps
mov
cmp
movs
xchg
(bad)
fnstenv
cmp
jae
push
idiv
cmp
mov
clc
cmp
idiv
cmp
sbb
mov
jmp
cmp
(bad)
jbe
cmp
les
cmp
jmp
hlt
jo
scas
fdecstp
in
test
mul
dec
pmulhw
fdecstp
in
push
lds
cmp
mov
rcr
loop
repz
ret
jbe
cmp
mul
cmp
jbe
cmp
mul
cmp
data16
fnstenv
cmp
mul
cmp
jbe
cmp
sub
imul
cmp
das
push
push
fnstenv
cmp
out
cmp
rol
mov
imul
cmp
jbe
cmp
sub
xchg
fdecstp
in
cmp
mov
cmp
test
fdecstp
jmp
jbe
cmp
imul
cmp
and
and
jbe
cmp
jns
(bad)
imul
cmp
pop
add
jbe
cmp
imul
cmp
or
cmp
jecxz
fdecstp
(bad)
cmp
adc
fnstenv
cmp
dec
and
cmp
or
push
fnstenv
cmp
not
cmp
jbe
cmp
adc
not
cmp
jbe
cmp
loopne
rcr
not
cmp
jg
sbb
jbe
cmp
push
cmp
jbe
cmp
sub
not
cmp
jbe
cmp
and
ja
not
cmp
pop
mov
mov
(bad)
fnstenv
cmp
pop
fmul
fdecstp
fistp
add
ds
fnstenv
cmp
movs
pop
fdecstp
fdivr
ror
fdivr
mov
neg
cmp
test
fnstenv
cmp
push
adc
neg
cmp
jbe
cmp
ins
jle
neg
cmp
ss
cmp
leave
sbb
fdivr
xor
jbe
cmp
pop
lods
push
fdecstp
fnstcw
cmp
mov
nop
stos
cmp
test
cmp
lahf
lods
fnstenv
cmp
test
or
jbe
cmp
inc
mov
test
call
cmp
xor
fdecstp
lds
push
sub
(bad)
fnstenv
cmp
mov
cwde
fdecstp
ret
out
(bad)
fnstenv
cmp
ret
cmp
sub
mov
test
in
(bad)
fcmovnu
jbe
cmp
je
push
fdecstp
sar
cmps
loope
fnstenv
cmp
sar
fdecstp
into
cmp
add
into
cmp
cs
test
xor
enter
cmp
test
lods
scas
xlat
xlat
fnstenv
cmp
int
pop
iret
mov
fnstenv
cmp
jmp
cmp
adc
fnstenv
cmp
retf
push
fdecstp
retf
cmp
mov
retf
cmp
cmp
enter
jbe
fnstenv
cmp
test
push
add
jb
jbe
cmp
lock
fdecstp
cmp
push
lahf
fnstenv
cmp
jo
fdecstp
aaa
cmp
pop
lods
fstenv
cmp
ins
cmp
div
sbb
test
fnstenv
cmp
add
xor
mov
stos
cmp
fdecstp
xor
mov
fnstenv
cmp
div
cmp
pop
scas
fnstenv
cmp
shl
div
cmp
scas
mov
fnstenv
cmp
(bad)
int3
addr16
xor
stos
ss
or
jbe
cmp
idiv
cmp
dec
pop
(bad)
fnstenv
cmp
idiv
cmp
mov
fnstenv
cmp
pop
inc
jg
idiv
adc
mov
cmp
fsub
idiv
sahf
fnstenv
cmp
loop
adc
idiv
cmp
jbe
cmp
leave
sub
fdecstp
cmp
loopne
call
cmp
idiv
cmp
jbe
cmp
idiv
cmp
mov
fnstenv
cmp
(bad)
outs
fdecstp
cmp
jbe
cmp
mul
cmp
mov
cmp
lahf
je
fdecstp
and
push
add
and
mov
mul
fstp
jbe
cmp
aad
fdecstp
and
sbb
cld
fnstenv
cmp
mul
cmp
iret
sbb
fnstenv
cmp
add
and
pushf
jno
mov
out
lock
into
fnstenv
cmp
imul
cmp
dec
aaa
imul
lods
pop
cmp
push
jbe
cmp
in
sbb
imul
push
mov
sub
call
cmp
jge
jl
jbe
cmp
in
fs
mov
cmp
imul
cmp
(bad)
test
jbe
cmp
mov
pop
inc
inc
rcr
sub
mov
fcmovbe
fdecstp
sub
into
ret
jno
fnstenv
cmp
fldenv
fdecstp
push
cmp
push
cmp
pop
cmp
in
add
not
les
adc
mov
test
inc
(bad)
fdecstp
adc
pushf
mov
nop
fnstenv
cmp
not
cmp
push
cmp
adc
cmp
jno
fnstenv
cmp
dec
mov
cmp
or
retf
adc
push
movs
test
mov
push
cmp
jle
fdecstp
pop
cmp
pop
cmp
adc
push
mov
cmp
neg
(bad)
fnstenv
cmp
nop
pop
je
neg
cmp
jbe
cmp
jae
sahf
fdecstp
sbb
lahf
mov
sbb
adc
pop
out
neg
cmp
jbe
cmp
cmps
fcompp
neg
cmp
jnp
fnstenv
cmp
test
retf
xchg
jbe
cmp
push
in
fdecstp
pop
cmp
imul
cmp
xor
xchg
fdecstp
add
adc
mov
jbe
cmp
mov
fdecstp
add
cmp
jbe
cmp
test
cmps
pop
in
add
jbe
cmp
stos
pop
add
test
sub
add
mov
test
dec
bnd
fnstenv
cmp
cli
cmp
push
je
fnstenv
cmp
test
add
fnstenv
cmp
test
cli
movs
mul
jbe
cmp
mov
leave
fdecstp
or
outs
add
lods
fnstenv
cmp
lock
test
fnstenv
cmp
test
jge
jmp
fnstenv
cmp
ja
(bad)
fdecstp
or
outs
test
cmp
clc
xor
test
out
xchg
mov
jbe
cmp
test
adc
out
mov
stc
sbb
jbe
inc
repz
cmp
and
xchg
push
into
std
fnstenv
cmp
div
in
rcr
jbe
cmp
out
fdecstp
jne
inc
cmp
cmp
jmp
mov
div
repz
cmp
sub
sbb
jae
fdivr
lea
fnstenv
cmp
jecxz
mov
div
movsx
cmp
div
sub
ds
fnstenv
cmp
mov
jns
idiv
stc
sub
jle
and
rcl
jg
ja
cmp
jbe
cmp
jbe
cmp
imul
cmp
div
cmp
out
and
jbe
cmp
push
pop
mov
div
cmp
inc
dec
fcompp
jbe
cmp
div
push
or
imul
dec
loop
and
fnstenv
cmp
div
cmp
imul
jbe
cmp
xor
fdecstp
xor
dec
dec
fwait
mov
push
xchg
clc
cmp
div
cmp
ret
fnstenv
cmp
adc
(bad)
fdecstp
xor
cwde
jmp
jo
sbb
fdecstp
cmp
add
cmp
aas
cmp
int
fnstenv
cmp
idiv
cmp
dec
push
mov
jbe
cmp
push
sub
cmp
sub
cmp
es
cmp
sub
leave
fnstenv
cmp
pop
xchg
idiv
cmp
cld
pop
xchg
fnstenv
cmp
idiv
cmp
jbe
cmp
cmp
cmp
je
mov
ret
push
mul
cmp
jbe
cmp
sbb
jbe
mul
cmp
jbe
cmp
mul
cmc
cli
stos
inc
fnstenv
cmp
or
push
fdecstp
and
or
jbe
cmp
fstp
mul
cmp
or
fnstenv
cmp
mul
cmp
out
(bad)
fnstenv
cmp
fs
mul
cmp
cmps
int3
and
fstp
xor
fdecstp
and
mov
call
cmc
mov
cmp
lods
scas
jb
jbe
cmp
imul
cmp
jbe
cmp
jg
dec
fdecstp
sub
xchg
jp
and
jbe
cmp
in
imul
mov
dec
xor
sbb
sub
nop
jle
sbb
neg
sub
jecxz
(bad)
fnstenv
cmp
sub
stc
and
daa
fnstenv
cmp
cmp
dec
fdecstp
sub
push
jno
dec
fnstenv
cmp
adc
es
dec
fnstenv
cmp
inc
or
not
cmp
inc
out
push
fnstenv
cmp
not
inc
enter
jbe
cmp
ss
adc
not
lods
fnstenv
cmp
scas
neg
not
cmp
cli
dec
fnstenv
cmp
hlt
inc
fdecstp
adc
xor
adc
in
push
cmp
jbe
cmp
cmp
cmp
addr16
xor
jbe
cmp
and
out
fdecstp
push
cmp
push
cmp
jno
inc
fdecstp
pop
cmp
cwde
sbb
mov
neg
shr
sbb
sbb
(bad)
fld
mov
neg
dec
fnstenv
cmp
inc
std
mov
neg
cmp
xor
add
neg
cmp
or
imul
sbb
loopne
xor
(bad)
mov
sbb
(bad)
cli
imul
sbb
cmp
fnstenv
cmp
nop
(bad)
fdecstp
pop
cmp
aam
clc
fnstenv
cmp
loope
test
inc
sti
jge
jbe
cmp
test
fnstenv
cmp
(bad)
jnp
fdecstp
add
push
push
ret
sub
jbe
cmp
xor
fdecstp
add
mov
add
fnstenv
cmp
iret
lods
push
fdecstp
add
rol
cmp
jbe
cmp
test
push
enter
jbe
cmp
pusha
fdecstp
push
cmp
jbe
cmp
shl
cmp
jbe
cmp
(bad)
pop
fdecstp
or
loope
gs
jbe
cmp
test
fnstenv
cmp
mov
xchg
fdecstp
or
push
out
popa
dec
fnstenv
cmp
nop
(bad)
fdecstp
or
sbb
cmp
fnstenv
cmp
adc
test
clc
and
jbe
cmp
test
outs
inc
push
fnstenv
cmp
inc
out
fdecstp
jbe
iret
cmp
cld
fnstenv
cmp
or
ja
jmp
(bad)
pop
fnstenv
cmp
imul
fdecstp
je
mov
jbe
cmp
div
xchg
ficom
fnstenv
cmp
div
icebp
lods
jo
fnstenv
cmp
aam
lods
fdecstp
jae
test
jnp
fnstenv
cmp
(bad)
in
div
pop
add
cmp
sbb
jno
mov
rcr
fnstenv
cmp
aad
xchg
idiv
shl
jb
jbe
cmp
idiv
xchg
dec
mov
cmp
in
iret
fdecstp
jl
test
mov
cmp
mov
jge
out
xor
add
jbe
cmp
mov
jp
pop
repnz
fnstenv
cmp
xchg
xlat
push
fdecstp
jnp
sbb
clc
cmp
jbe
cmp
and
loope
idiv
popa
popa
push
cmp
fwait
rcl
jns
test
jo
fnstenv
cmp
mov
fdecstp
cmp
jbe
cmp
test
mov
push
jg
clc
fnstenv
cmp
sub
fdecstp
cmp
leave
sbb
or
add
jbe
cmp
mul
push
jp
call
fld
mul
jmp
cmp
movs
sub
mul
xchg
xor
cmp
retf
fdecstp
popa
cmp
pop
fnstenv
cmp
imul
icebp
in
push
fnstenv
cmp
inc
fdecstp
outs
cmp
scas
(bad)
fnstenv
cmp
das
inc
push
fdecstp
ins
cmp
into
cwde
fnstenv
cmp
test
cmp
adc
jae
jbe
cmp
sahf
sub
imul
imul
inc
fnstenv
cmp
adc
fdecstp
imul
or
cmp
test
fdecstp
push
sbb
cmps
sahf
fcmovnu
imul
bswap
cmp
xor
cmp
jbe
cmp
out
mov
cmp
adc
cmp
jo
xor
not
jbe
rcr
push
cmp
not
clc
repz
fnstenv
cmp
and
cmp
push
add
mov
not
xlat
daa
leave
or
jbe
cmp
ins
cld
pop
fdecstp
push
cmp
je
jbe
cmp
lods
add
not
xlat
and
and
jbe
cmp
pop
mov
fdecstp
pop
cmp
pop
(bad)
fnstenv
cmp
cmps
jge
neg
push
or
fnstenv
cmp
retf
push
or
neg
xor
cmp
jmp
cmp
neg
les
and
jbe
cmp
neg
outs
outs
call
cmp
adc
fdecstp
pop
cmp
dec
mov
cmp
jl
xor
neg
add
pop
cmp
pop
cmp
mov
pop
cmp
test
sbb
fnstenv
cmp
mov
inc
cmp
jbe
cmp
test
enter
inc
cmp
or
test
addr16
cmp
popf
sar
inc
cmp
jbe
cmp
test
push
idiv
test
inc
cmp
jbe
cmp
jmp
fdecstp
inc
cmp
ret
inc
rcr
inc
cmp
mov
cmc
fdecstp
dec
cmp
aas
xchg
and
jbe
cmp
test
inc
sbb
fnstenv
cmp
test
xlat
nop
fnstenv
cmp
mov
fdecstp
dec
cmp
jbe
cmp
xor
test
test
jbe
cmp
push
inc
fdecstp
dec
cmp
jbe
cmp
out
(bad)
fdecstp
dec
cmp
jbe
cmp
test
xor
and
jbe
cmp
inc
fcmovnu
div
lods
fnstenv
cmp
daa
arpl
div
std
fnstenv
cmp
call
mov
mov
jbe
cmp
xchg
or
inc
sub
inc
fnstenv
cmp
ror
cmp
out
fnstenv
cmp
xchg
cmp
fdecstp
mov
pop
xor
sti
fnstenv
cmp
pop
mov
ins
xchg
fnstenv
cmp
cwde
push
dec
fdecstp
mov
fmul
mov
xchg
int
rcr
idiv
out
fnstenv
cmp
xchg
jnp
fdecstp
mov
push
fnstenv
cmp
idiv
fnstenv
cmp
fs
fdecstp
mov
mov
jbe
cmp
pushf
aas
in
fdecstp
mov
push
fnstenv
cmp
or
bound
fnstenv
cmp
mov
mov
sub
jbe
cmp
lock
idiv
mov
jbe
cmp
adc
fdecstp
cmps
cmp
add
fnstenv
cmp
gs
mul
sbb
jbe
cmp
in
or
mul
fnstenv
cmp
mov
mul
fnstenv
cmp
mul
push
fnstenv
cmp
pop
in
fdecstp
mov
outs
fnstenv
cmp
xor
test
mul
sbb
jbe
cmp
sar
fdecstp
mov
inc
fnstenv
cmp
pop
ins
pushf
fdecstp
scas
cmp
adc
fnstenv
cmp
imul
sbb
scas
cmp
xchg
mov
imul
fnstenv
cmp
imul
int
jbe
cmp
stos
cmp
xchg
mov
cmp
imul
cdq
fnstenv
cmp
ret
imul
mov
jbe
cmp
add
fdecstp
test
jp
jbe
cmp
and
not
in
jbe
cmp
popa
das
mov
(bad)
or
jbe
cmp
not
fnstenv
cmp
aaa
fcomp
not
add
jbe
cmp
cdq
sbb
not
(bad)
fnstenv
cmp
ja
fdecstp
xchg
cmp
jbe
cmp
jo
sub
not
int
jbe
cmp
not
aas
fnstenv
cmp
dec
mov
cmp
cmp
sahf
cmp
neg
mov
jbe
cmp
imul
sub
cli
fnstenv
cmp
popf
cmp
jbe
fnstenv
cmp
je
and
neg
jnp
jbe
cmp
and
fdecstp
fwait
cmp
jbe
cmp
inc
sub
neg
xor
jbe
cmp
neg
mov
jbe
cmp
loope
fdecstp
xchg
dec
mov
iret
fnstenv
cmp
add
fdecstp
xchg
xchg
test
xchg
and
test
xor
jbe
cmp
push
out
fdecstp
test
dec
scas
push
fnstenv
cmp
or
lods
fdecstp
cmp
sbb
fnstenv
cmp
add
sbb
neg
jbe
cmp
je
sahf
fdecstp
cmp
adc
cmp
pop
fdecstp
cmp
fnstenv
cmp
test
fnstenv
cmp
test
fnstenv
cmp
shl
cmp
jbe
cmp
lea
add
xchg
jbe
cmp
test
fnstenv
cmp
lahf
sti
test
test
fnstenv
cmp
in
jne
fdecstp
mov
and
leave
loopne
jbe
cmp
sar
fdecstp
mov
mov
(bad)
jbe
cmp
pop
pop
push
fdecstp
idiv
push
and
jbe
cmp
adc
cmp
stos
out
mov
jbe
cmp
sbb
add
div
cmp
mov
rcr
hlt
cmp
div
cmp
mov
jbe
cmp
ret
fdecstp
repnz
jbe
cmp
sbb
div
cmp
sbb
cmp
out
fdecstp
lock
push
dec
fnstenv
cmp
xchg
mov
cmp
jbe
cmp
idiv
cmp
add
(bad)
cmp
mov
and
int3
sti
fnstenv
cmp
idiv
cmp
int
push
fnstenv
cmp
std
inc
fdecstp
std
cmp
repz
push
fnstenv
cmp
jbe
cmp
dec
mov
fdecstp
sti
cmp
push
push
sub
jbe
cmp
jae
idiv
cmp
sbb
fdecstp
stc
cmp
jbe
cmp
and
fdecstp
out
ja
retf
jbe
cmp
mul
cmp
pop
(bad)
cli
fnstenv
cmp
adc
cmp
adc
jbe
cmp
or
cmp
jbe
cmp
in
test
mul
cmp
jbe
cmp
pushf
fstp
mul
cmp
mov
and
mul
cmp
aas
fnstenv
cmp
xchg
fs
jmp
cmp
xor
out
cmp
rol
es
sbb
out
cmp
popf
jle
imul
cmp
jl
fnstenv
cmp
adc
rcr
in
cmp
pop
stos
rcr
imul
cmp
mov
jbe
cmp
xor
fdecstp
jmp
inc
retf
fnstenv
cmp
imul
cmp
sub
cld
fnstenv
cmp
not
cmp
out
fnstenv
cmp
dec
ret
aad
jne
outs
pop
fnstenv
cmp
loope
add
neg
cmp
xlat
mov
cmp
inc
fnstenv
cmp
or
fidivr
mov
jbe
cmp
push
call
ins
cmp
fnstenv
cmp
xchg
xchg
fdecstp
fnstcw
bound
jae
fnstenv
cmp
in
(bad)
fdecstp
les
mov
test
rcl
or
xor
jmp
jbe
cmp
fild
dec
repz
fnstenv
cmp
test
and
cmp
iret
cmp
(bad)
cmp
pop
xchg
inc
fdecstp
int3
cmp
jbe
test
lods
fs
mov
(bad)
sahf
outs
clc
fnstenv
cmp
add
retf
imul
cmp
test
sub
jbe
cmp
add
enter
sbb
cmp
push
xor
test
in
dec
or
fnstenv
cmp
js
(bad)
fdecstp
cmp
jbe
cmp
mov
aaa
cmp
xchg
fnstenv
cmp
adc
call
jbe
cmp
div
(bad)
fnstenv
cmp
pop
aad
div
cmp
fs
jbe
cmp
add
inc
fdecstp
xor
inc
sbb
fnstenv
cmp
loopne
enter
cmp
xor
in
fnstenv
cmp
div
cmp
sbb
xor
test
idiv
cmp
test
cmp
cmp
pop
fdecstp
aas
cmp
jno
mov
jbe
cmp
cmp
mov
in
fnstenv
cmp
push
retf
cmp
fstenv
cmp
icebp
jmp
idiv
cmp
sbb
fnstenv
cmp
icebp
pop
retf
cmp
(bad)
cmp
cmp
cmp
imul
adc
cmp
jbe
cmp
add
fnstenv
cmp
mul
cmp
sub
fnstenv
cmp
inc
sub
mul
call
rcr
jbe
cmp
mul
jae
jbe
cmp
lock
cs
and
or
and
push
push
and
cmp
and
icebp
jecxz
fnstenv
cmp
loopne
fdecstp
and
not
cmp
pop
jp
fdecstp
cmp
xor
fnstenv
cmp
sub
jl
imul
cmp
cmps
in
jbe
cmp
fild
fdecstp
sub
pushf
in
repnz
cmp
push
(bad)
ss
sub
scas
fnstenv
cmp
and
fdecstp
sub
jnp
or
dec
xlat
fcmovbe
fdecstp
sub
retf
dec
fnstenv
cmp
dec
in
imul
cmp
fwait
pop
jl
jbe
cmp
imul
cmp
push
sub
imul
push
cmp
cli
jl
fnstenv
cmp
mov
cmp
(bad)
jmp
inc
cmp
not
pop
jns
in
jbe
cmp
xor
adc
aad
jbe
cmp
cs
fdecstp
adc
xchg
gs
fnstenv
cmp
dec
xchg
pop
fdecstp
adc
addr16
lahf
fnstenv
cmp
cmp
aaa
fdecstp
adc
pusha
add
fnstenv
cmp
fwait
in
not
cmp
or
cmp
int3
fdecstp
push
cmp
sar
cmp
mov
neg
cmp
iret
pop
sub
jbe
cmp
dec
fdecstp
sbb
add
cmps
sub
jbe
cmp
neg
cmp
jbe
cmp
neg
cmp
(bad)
mov
cmp
neg
cmp
ror
fnstenv
cmp
test
push
fdecstp
sbb
and
jbe
cmp
out
fdecstp
sbb
clc
adc
test
fdecstp
ss
jbe
cmp
aam
fdecstp
inc
cmp
call
cdq
cli
pop
fcompp
jbe
cmp
div
xor
jbe
cmp
cli
in
adc
and
jbe
cmp
mul
sbb
neg
sbb
and
mov
adc
aaa
fnstenv
cmp
xchg
ins
fdecstp
repnz
js
or
jbe
cmp
repz
(bad)
fdecstp
(bad)
cmp
cmp
fnstenv
cmp
jbe
cmp
jbe
cmp
idiv
movs
fdecstp
pop
cmp
dec
mov
cmp
call
xor
jno
fdecstp
inc
cmp
mov
cmp
and
test
mov
dec
cmp
ds
jbe
cmp
mov
cmp
test
ret
dec
outs
fnstenv
cmp
movs
xlat
fdecstp
mov
mov
fdecstp
mov
jg
add
fnstenv
cmp
div
rcr
mov
pop
fnstenv
cmp
mul
fnstenv
cmp
loope
pop
fdecstp
mov
jae
imul
mov
fnstenv
xor
jbe
cmp
xor
inc
pop
mov
jecxz
mul
jecxz
int
jno
adc
fnstenv
cmp
inc
inc
mov
movs
mov
cmps
ret
fdecstp
ss
adc
mov
std
jbe
(bad)
fldz
add
inc
ret
pop
mov
ins
push
mov
mov
ds
rol
mov
push
adc
cmp
fist
xchg
inc
pop
adc
adc
cmp
ss
push
ret
pop
cmps
push
pop
std
jbe
cld
addr16
mov
pop
enter
jbe
pop
fld
cmp
lods
iret
add
dec
es
leave
(bad)
std
jbe
cld
fdiv
leave
mov
in
push
mov
sub
mov
cmp
push
mov
sti
xchg
mov
fdiv
mov
or
mov
adc
sbb
mov
or
or
std
jbe
cld
add
aam
mov
jmp
or
push
test
sbb
imul
scas
mov
xor
iret
call
push
out
fxtract
ss
mov
cmp
add
fdecstp
xchg
cmp
ss
repz
pop
jecxz
mov
or
lock
popf
push
pop
mov
pop
xor
popf
push
pop
mov
jecxz
mov
mov
ret
je
iret
cmp
lods
or
cmps
mov
inc
test
pop
mov
push
test
jmp
(bad)
aaa
cmp
xchg
in
add
neg
data16
ja
and
ss
dec
pop
jae
imul
repnz
pop
mov
cmp
adc
xor
xor
(bad)
ss
int
pop
mov
cmp
adc
idiv
repz
sbb
shl
(bad)
cmp
repz
not
repnz
call
repnz
jbe
inc
idiv
mov
cmp
adc
in
fcomp
(bad)
cmp
xchg
outs
test
push
sbb
fxtract
push
cmp
add
fdecstp
adc
pop
ss
repz
pop
jecxz
mov
or
lock
popf
push
pop
mov
pop
xor
popf
push
pop
mov
in
test
das
es
add
jbe
mov
jbe
push
lods
pop
lock
test
jecxz
mov
das
es
add
jbe
mov
jbe
push
lods
pop
lock
or
add
dec
or
mov
shr
push
adc
es
inc
xchg
jecxz
jmp
jbe
mov
jbe
push
lods
pop
lock
or
add
push
sub
jecxz
mov
imul
xor
or
pop
mov
rcr
fcmovu
jbe
sub
mov
sar
mov
fdecstp
ss
xor
sbb
test
push
sbb
(bad)
push
pop
mov
mov
es
or
es
ins
xchg
jecxz
(bad)
les
inc
pop
not
leave
(bad)
sbb
sbb
mov
dec
jo
mov
sbb
mov
repz
pop
jb
(bad)
cmp
div
dec
jo
ss
div
aas
fdiv
ret
xchg
ss
push
xor
fist
rcr
das
ds
dec
or
push
ja
sbb
repnz
cli
push
jno
add
xor
in
mov
(bad)
fisttp
adc
(bad)
ins
repz
adc
mov
adc
adc
pop
mov
cmp
hlt
and
pop
jbe
cmp
adc
(bad)
adc
pop
xchg
ss
not
pop
xchg
cmp
xchg
ss
inc
xchg
mov
(bad)
adc
pop
mov
cmp
repnz
retf
jo
sbb
in
jp
cmc
ds
pop
mov
dec
push
test
test
mov
pop
jbe
ds
mov
push
icebp
adc
cmp
mov
and
jae
retf
jo
add
push
scas
pop
out
sub
pop
mov
test
rcr
cmp
dec
jg
mov
cmps
aam
test
push
int3
and
mov
ss
repz
pop
cmp
outs
scas
and
xlat
data16
jb
xor
inc
test
aam
mov
pop
je
pop
sbb
ss
pop
xor
sbb
mov
ds
adc
jg
jbe
add
sbb
or
mov
imul
sbb
mov
daa
xor
sbb
or
mov
imul
sbb
mov
push
psllq
sti
sbb
inc
ss
out
mov
push
ja
adc
sbb
mov
int3
ss
pop
xor
popf
push
adc
sti
clc
(bad)
aaa
xor
popf
push
adc
out
ret
je
pop
sbb
xor
aam
mov
lods
leave
cmp
cmp
adc
mov
xor
sbb
adc
sti
pop
aaa
xor
sbb
mov
pop
aaa
xor
aas
pop
xor
sbb
retf
jecxz
xor
fnsave
inc
je
mov
fdecstp
inc
adc
not
and
xor
gs
mov
cmp
adc
neg
repz
mov
cmp
hlt
mov
pop
je
inc
xor
pop
push
jle
icebp
(bad)
fidivr
xor
push
and
das
shr
xor
pop
mov
sub
sbb
pop
out
adc
fcomi
fbld
(bad)
ss
jns
sbb
movs
jp
je
sbb
jb
adc
inc
adc
es
les
leave
and
push
mov
popf
cmc
sub
pop
aaa
jb
inc
fwait
push
mov
ror
fcomp
fwait
mov
pushf
push
or
pushf
in
and
pop
mov
and
xchg
push
mov
fdecstp
cmp
mov
fptan
icebp
pop
pop
jno
cmp
scas
mov
push
push
xor
(bad)
icebp
pop
es
sbb
xor
and
test
fsubrp
iret
xchg
and
or
mov
mov
leave
ins
js
repnz
jae
xchg
test
mov
push
mov
xlat
es
ficom
repnz
cmp
(bad)
lods
jne
push
pop
icebp
and
daa
and
mov
in
rcl
mov
loop
loopne
test
or
ret
xchg
xchg
iret
popf
inc
mov
cld
pop
jae
adc
outs
push
xlat
mov
jno
pushf
out
push
push
mov
ins
or
mov
mov
mov
xchg
push
adc
jne
jecxz
or
jecxz
xor
clc
dec
int
int
ins
ins
and
dec
sub
cwde
add
sub
xlat
mov
repz
dec
ins
or
lahf
mov
cmc
xchg
xlat
in
stc
xchg
mov
repz
jnp
sub
rcl
push
outs
or
pop
sbb
dec
sbb
outs
ins
and
xchg
dec
mov
jmp
pusha
test
push
mov
leave
sub
shr
iret
call
xlat
shl
push
mov
inc
xor
lods
jnp
mov
or
push
xor
cmp
repz
out
xor
xchg
daa
pop
or
popf
sub
mov
retf
fadd
repz
sub
call
lods
jo
sub
push
imul
mov
or
in
xchg
jae
fs
or
push
sbb
push
addr16
push
sbb
leave
jmp
test
mov
cmp
and
jge
and
repz
lea
pop
mov
push
mov
fistp
jge
loop
xchg
adc
add
sbb
sbb
movs
mov
fnstenv
mov
rol
rol
stos
lds
adc
and
in
aam
cmp
loopne
cwde
dec
mov
cmps
std
inc
mov
push
mov
loop
leave
cmps
sti
pop
and
pop
jne
sub
ss
(bad)
jmp
adc
pop
cmp
sub
mov
sbb
adc
cmps
jmp
les
xor
push
inc
cmp
cmp
inc
shld
mov
loop
xchg
fcomp
dec
rcl
push
inc
loop
inc
xchg
xor
aam
mov
inc
pop
pop
loope
jl
fisttp
sub
sub
push
les
xchg
push
enter
shl
inc
adc
(bad)
dec
push
repz
pop
sub
movs
xor
mov
cld
and
push
inc
cmp
cmp
(bad)
fs
cvtps2pi
shl
loop
xchg
fcomp
dec
rcl
push
inc
loop
inc
xchg
cmp
mov
test
mov
pop
loope
jl
fisttp
sub
stos
daa
call
fisub
repz
(bad)
xchg
pop
enter
shl
inc
adc
(bad)
dec
push
dec
jmp
shl
movs
sub
mov
cld
and
push
inc
cmp
cmp
pop
add
jl
mov
loop
xchg
fcomp
dec
rcl
push
inc
loop
inc
xchg
fistp
jge
inc
mov
pop
loope
jl
fisttp
sub
sub
push
loopne
sar
(bad)
xchg
inc
enter
shl
inc
adc
(bad)
dec
push
mov
jnp
and
movs
and
mov
cld
and
push
inc
cmp
cmp
sbb
xor
(bad)
inc
shl
loop
xchg
fcomp
dec
rcl
push
inc
loop
inc
xchg
sbb
jle
mov
inc
pop
pop
loope
jl
fisttp
sub
stos
aaa
call
and
dec
enter
shl
inc
sub
popa
dec
push
xchg
mov
shl
movs
cmp
xor
push
inc
cmp
cmp
jge
mov
bts
mov
loop
adc
shl
push
shl
inc
xchg
or
std
mov
mov
push
popa
push
cld
sub
dec
sub
pop
test
sub
push
shl
fimul
inc
lods
xor
cmp
push
inc
cmp
cmp
lods
xor
inc
lods
push
shl
bound
fcomp
shl
push
inc
out
sub
xchg
push
es
fidiv
iret
pop
push
loope
jl
fisttp
sub
mov
cmps
dec
add
sahf
dec
shl
rcl
mov
xchg
into
ss
sub
loope
push
rcr
fbld
lods
xor
popa
pop
cmp
push
inc
cmp
cmp
ret
and
xor
fnstenv
fsub
adc
shl
push
inc
out
sub
xchg
mov
inc
mov
push
loope
jl
fisttp
sub
mov
es
mov
shl
rcl
mov
xchg
into
ss
sub
loope
push
push
lods
ja
and
lods
sub
popa
pop
cmp
push
inc
cmp
cmp
rcl
push
pop
cmp
fnstenv
fsub
adc
shl
push
inc
out
sub
xchg
push
fld
mov
iret
pop
push
loope
jl
fisttp
sub
mov
cmps
cmp
(bad)
sahf
pop
shl
rcl
mov
xchg
into
ss
sub
loope
push
popa
xor
inc
lods
and
loope
cmp
push
call
(bad)
movs
sub
(bad)
push
sar
dec
xchg
pushf
fs
sub
pop
push
cmp
popa
and
add
psrlw
pop
adc
and
dec
lds
cmp
push
and
add
int3
pop
push
(bad)
push
sar
dec
xchg
retf
add
lods
inc
mov
push
cmp
popa
and
add
pop
mov
mov
dec
leave
sbb
ja
and
lods
sub
cmp
push
and
inc
call
mov
push
popf
inc
(bad)
call
mov
dec
xchg
je
inc
inc
inc
inc
mov
rcl
mov
dec
xchg
push
dec
sti
dec
mov
inc
fstp
push
jl
bound
and
arpl
push
or
pop
xor
ds
adc
cmp
jnp
and
movs
sub
mov
push
call
xlat
es
inc
(bad)
xchg
dec
int3
bound
sar
dec
xchg
cmc
test
out
mov
inc
fstp
push
jl
bound
and
jno
loop
mov
pop
xor
pop
push
xchg
sar
push
push
out
dec
xchg
xor
fwait
inc
inc
inc
mov
push
into
and
shl
dec
dec
out
fdiv
and
mov
mov
cmp
mov
add
cmp
es
xor
fcomp
ds
push
jmp
add
dec
pop
pop
fisttp
and
cmps
inc
call
xchg
es
dec
(bad)
push
into
and
shl
dec
dec
ins
shl
mov
pop
inc
mov
mov
cmp
mov
out
add
inc
shl
fcomp
ds
push
jmp
(bad)
cmps
inc
mov
pop
fisttp
and
cmps
add
adc
(bad)
call
and
shl
dec
dec
push
aam
fisub
mov
mov
cmp
mov
pop
add
push
xor
fcomp
ds
push
jmp
fdivr
dec
pop
pop
fisttp
and
call
fbld
call
and
shl
dec
dec
fidiv
and
mov
mov
cmp
mov
lea
mov
pop
xor
fcomp
ds
push
jmp
mov
movs
dec
pop
pop
cmps
daa
push
push
movs
add
push
or
clc
movs
out
push
push
(bad)
das
xchg
(bad)
(bad)
add
fwait
mov
add
dec
movs
aas
mov
sub
cmp
rcr
mov
das
and
mov
xchg
jae
bound
ficomp
xchg
jae
call
in
cmps
xchg
xlat
sub
mov
fldlg2
and
ins
js
repnz
jae
jmp
ins
mov
xlat
ins
mov
push
dec
mov
sbb
ins
mov
push
dec
mov
popf
sbb
lds
mov
ins
mov
or
mov
ins
or
int
enter
or
xlat
ja
push
adc
dec
xchg
jl
or
rol
push
shr
jns
xlat
jmp
xchg
sbb
push
xchg
push
rcl
sbb
mov
dec
retf
test
push
push
stos
in
rcl
push
test
scas
mov
hlt
test
cmp
xchg
retf
popf
jbe
adc
in
int
xlat
push
or
mov
mov
mov
xchg
push
adc
or
mov
(bad)
xor
push
out
jns
mov
adc
retf
and
int3
cmc
push
in
in
xchg
xlat
mov
and
or
shr
mov
rcl
mov
sbb
outs
push
push
mov
leave
jns
push
xchg
mov
mov
sub
sbb
add
jl
leave
addr16
stc
push
mov
std
mov
or
or
(bad)
popa
mov
imul
fnsave
lods
jo
pop
scas
aas
push
push
adc
sub
repnz
fnsave
rol
sahf
xchg
repz
sub
jo
push
mov
adc
xchg
icebp
sub
jae
outs
mov
imul
or
out
cmps
stos
ins
ins
or
nop
dec
adc
repz
jb
outs
xor
stc
(bad)
ret
inc
lds
xor
xor
jns
(bad)
ret
inc
nop
outs
sbb
dec
adc
(bad)
outs
nop
mul
mov
adc
cmp
mov
out
ins
nop
mov
xchg
ins
nop
ret
jb
imul
ins
adc
ins
nop
mov
mov
xchg
imul
adc
(bad)
lahf
push
pop
push
push
mov
jae
cmp
dec
fnstenv
dec
adc
les
ins
nop
div
out
(bad)
ret
inc
or
dec
fcom
div
xchg
and
sub
out
sub
ret
outs
xor
popf
outs
add
stos
xor
mov
sub
inc
xchg
sbb
pushf
dec
adc
push
ins
nop
sub
loope
jmp
xchg
sbb
or
(bad)
in
pop
or
nop
cmp
mov
and
in
push
ret
ds
mov
xor
sub
inc
jne
rol
jb
pop
std
push
ins
nop
test
xor
inc
das
mov
xchg
push
cmp
ins
adc
out
out
ins
(bad)
mov
cmp
nop
outs
add
fild
xor
jae
or
ins
and
xor
cmp
fsubr
xor
cmp
ret
ins
add
or
adc
inc
(bad)
cmc
imul
sbb
sti
imul
sub
cmp
das
stos
inc
jne
aad
jb
outs
or
adc
lea
ret
xor
cmp
xchg
call
arpl
call
xchg
out
push
mov
out
ins
(bad)
aaa
test
xchg
outs
cmp
in
outs
mov
pushf
xchg
out
pop
mov
cmp
test
out
push
mov
pop
or
nop
cmp
add
(bad)
in
out
ret
jb
push
stc
xchg
xchg
out
pop
mov
outs
sub
xchg
out
arpl
ficom
sbb
push
mov
call
fild
sub
cmp
sub
xchg
outs
cdq
jmp
jbe
xchg
outs
and
mov
les
xchg
out
addr16
imul
pop
adc
sub
(bad)
out
inc
(bad)
in
out
ja
sub
bound
add
and
inc
mov
cmp
(bad)
jmp
sub
out
pop
mov
mov
lea
xor
dec
das
xchg
xchg
push
cmp
ins
adc
das
call
mov
ret
rcl
ret
jb
outs
cmp
test
out
inc
mov
push
push
push
xchg
outs
add
lods
cs
jbe
jmp
xor
gs
test
retf
shr
scas
add
ret
repnz
jmp
cmp
outs
inc
mov
rcr
mov
jo
das
xchg
jo
adc
ins
nop
xlat
jb
ins
inc
xor
push
cmp
xchg
out
addr16
imul
mov
lea
nop
enter
div
xchg
out
mov
inc
xchg
outs
mov
xchg
dec
mov
mov
and
pop
adc
jb
imul
daa
xchg
dec
mov
cmp
(bad)
in
imul
sbb
das
add
push
in
out
ret
jb
xor
stos
dec
retf
mov
fisubr
xor
outs
cdq
(bad)
stos
xor
stos
mov
ror
xchg
ins
nop
ret
jb
shl
repnz
out
mov
inc
les
xor
inc
cmp
ins
movs
jno
das
out
inc
mov
mov
push
cmp
outs
cmp
xchg
outs
cdq
out
adc
fbstp
daa
in
(bad)
ret
inc
xchg
outs
or
out
mov
sub
outs
cmp
out
cmp
in
in
push
dec
sbb
ins
adc
repnz
push
push
ins
nop
inc
jb
mov
adc
cmp
xchg
out
pop
mov
cmp
lods
dec
out
xchg
out
inc
mov
out
ret
dec
xchg
outs
cdq
repnz
cmp
in
shl
ins
sub
push
push
ins
inc
lea
and
out
(bad)
xchg
mov
dec
fdiv
xor
inc
mov
out
ret
leave
xchg
sbb
or
(bad)
in
push
push
push
cdq
fcomip
in
imul
ins
sub
hlt
and
mov
out
dec
adc
arpl
or
jmp
pop
lock
xchg
out
dec
nop
pop
arpl
add
cdq
shl
adc
(bad)
out
pop
and
adc
ins
mov
xlat
pop
sahf
push
xchg
stos
mov
xlat
out
cmp
mov
sbb
aad
mov
push
outs
mov
in
int
xlat
test
hlt
inc
dec
mov
popf
sbb
lds
(bad)
(bad)
das
xor
push
in
dec
xchg
xlat
jns
or
popf
push
shr
jns
xlat
adc
adc
adc
push
xchg
in
dec
fcmovnbe
(bad)
out
outs
inc
adc
imul
ins
mov
ret
jmp
icebp
enter
push
repz
sub
jbe
sbb
dec
imul
cdq
push
fldcw
ins
rcl
popa
sbb
sbb
retf
js
mov
mov
xlat
mov
arpl
xchg
jns
call
xor
loope
pop
sbb
push
into
stc
mov
sbb
ss
jnp
or
lock
retf
sub
or
or
xor
jns
and
dec
mov
cmps
stos
retf
iret
(bad)
dec
push
sbb
push
shr
xor
lea
imul
jp
fsubp
dec
imul
int3
(bad)
retf
bound
push
push
xchg
jae
sub
dec
scas
test
sub
adc
lods
lock
cwde
clc
adc
xchg
repz
ins
or
repz
arpl
xchg
jae
inc
adc
imul
and
test
test
mov
jle
int3
faddp
shl
jle
pop
and
mov
cmps
mov
mov
jl
pop
xor
popa
mov
dec
xor
popa
cmp
jo
lds
and
cs
repz
and
or
(bad)
push
mul
fstp
mov
shr
int3
xchg
xlat
js
or
jbe
push
dec
das
xchg
push
shr
jns
xlat
lahf
sahf
xchg
mov
xor
icebp
sub
lds
push
adc
cdq
imul
xlat
ret
neg
out
xchg
push
imul
cwde
add
imul
sub
push
ja
into
sub
lods
js
inc
lds
mov
xchg
clc
or
xlat
sub
ja
sbb
adc
int
and
dec
push
ins
or
xlat
mov
retf
ret
push
and
adc
(bad)
test
popf
sbb
dec
pop
adc
test
nop
jns
lea
dec
or
call
xor
ja
lock
jecxz
xchg
outs
outs
fdivr
adc
jbe
push
dec
mov
add
xchg
repz
sub
adc
sbb
xchg
xchg
fdivr
ficom
sub
fnstsw
sub
rcl
scas
mov
arpl
xchg
jae
sub
dec
ja
cdq
xor
imul
cdq
cdq
mov
imul
xchg
jns
sub
pusha
sub
lods
jne
daa
(bad)
ja
sbb
dec
dec
xor
xchg
push
popa
jns
mov
jg
lahf
push
push
clc
popa
sar
pop
ja
push
nop
lahf
ret
or
push
pop
mov
sahf
xor
imul
out
sub
imul
test
in
shl
fidiv
ret
sub
in
cwde
loopne
nop
sbb
pusha
clc
pop
fcmovb
enter
enter
enter
enter
enter
out
fcmovb
enter
pop
fistp
mov
mov
nop
push
(bad)
and
sahf
push
rcl
sbb
cmp
fidivr
adc
shl
pop
fidivr
adc
ret
ja
push
adc
fidivr
jno
mov
pop
dec
and
call
jno
mov
push
jle
sar
jnp
cmp
add
inc
stc
jg
call
jns
retf
push
rcl
jg
sar
popa
pusha
jbe
or
and
rcl
mov
shl
test
and
push
arpl
(bad)
ja
div
pop
rcr
mov
fld
push
icebp
sub
call
add
push
push
jnp
jb
cli
cmp
jno
jns
mov
mov
sahf
fld
push
cmps
mov
pop
sahf
mov
pop
mov
loope
not
pop
push
push
inc
xchg
dec
pop
mov
push
adc
ins
mov
(bad)
leave
xchg
push
sbb
mov
repnz
jae
out
in
sbb
fild
movs
push
ins
or
xlat
inc
pop
jecxz
lods
jne
push
adc
dec
push
scas
sub
repz
scas
xor
push
clc
mov
xlat
or
jne
sub
push
lods
jne
sub
jae
mov
or
leave
jmp
and
loop
cdq
int3
push
ss
rcl
sub
or
or
lods
xchg
push
xchg
repz
aaa
or
and
jmp
xlat
xchg
stc
popa
mov
mov
push
cwde
fs
push
addr16
pushf
out
dec
push
mov
cmc
aad
jns
mov
xor
retf
aam
push
push
inc
xchg
mov
cwde
fs
outs
push
push
mov
das
sub
loop
push
xlat
lods
jo
push
mov
jb
test
or
xor
sbb
pop
sub
cmc
push
mov
sub
ins
das
ins
mov
mov
push
repz
stc
pop
inc
lods
jo
cmp
jl
push
mov
push
rcr
jo
jae
jle
adc
nop
dec
jmp
cmc
fsubr
mov
xchg
hlt
aas
mov
pop
add
mov
push
add
mov
push
add
mov
xor
push
mov
xor
and
stc
mov
and
push
pop
push
add
push
xchg
jno
add
mov
xchg
movs
test
movs
xchg
mov
sub
xchg
xor
and
and
jmp
and
xor
test
xor
xchg
or
push
adc
(bad)
adc
sbb
and
and
push
mov
pop
xor
movs
xor
mov
push
add
sbb
cmp
and
sub
popa
xchg
and
adc
cmc
mov
aas
loop
and
loop
mov
and
rol
xchg
std
stc
xor
push
mov
push
add
and
mov
push
mov
push
add
and
mov
push
mov
push
add
pushf
mov
sbb
gs
cld
in
pop
push
and
sbb
sub
pop
clc
xor
mov
adc
pop
xchg
movs
test
movs
mov
xchg
test
movs
mov
xchg
test
(bad)
xor
jae
jmp
cmp
or
and
xor
and
or
stc
or
and
or
test
xchg
aad
(bad)
not
adc
mov
movs
adc
test
xchg
cmp
movs
adc
loop
push
push
push
mov
add
pop
loopne
lahf
ins
clc
xor
jae
out
inc
ins
push
and
mov
pusha
push
mov
adc
mov
aaa
inc
ins
adc
(bad)
leave
xchg
push
sbb
aas
push
adc
repnz
mov
shr
aam
out
fcom
mov
fidiv
sub
cmc
rcl
cmp
cmc
inc
(bad)
scas
mov
loop
adc
lahf
ds
or
xlat
fisttp
jno
or
xchg
push
or
and
scas
rep
adc
int
xchg
ss
jbe
cmp
push
imul
xchg
jl
sbb
mov
sbb
xchg
push
in
rcl
add
dec
mov
cwde
loope
sub
mov
and
arpl
or
out
adc
in
sti
mov
in
stc
rcl
push
addr16
dec
xchg
push
sbb
arpl
jo
sub
lahf
adc
sub
jns
xchg
sbb
retf
xor
and
hlt
xchg
stc
push
xor
lods
jo
sub
push
in
xchg
idiv
xor
xchg
or
xchg
mov
xchg
repz
sub
imul
(bad)
and
in
int
mov
lahf
mov
push
add
pop
jmp
sub
push
push
sbb
mov
leave
stc
ins
sub
dec
in
jns
xlat
mov
inc
ss
jns
and
loopne
jne
rcl
sub
icebp
inc
fmul
cmp
imul
imul
imul
lea
int
xchg
add
pop
xchg
add
sub
inc
in
leave
dec
call
je
dec
sti
xchg
ss
mov
mov
stos
out
mov
imul
lea
lds
imul
lahf
xor
imul
jmp
jle
leave
mov
mov
stc
test
mov
iret
test
and
xor
pusha
into
out
pop
imul
imul
and
mov
inc
outs
aad
xor
mov
lahf
int
in
xlat
pop
adc
adc
push
lea
xchg
add
mov
jns
push
cmp
or
out
fucomp
loopne
or
mov
xchg
sub
add
xchg
mov
xchg
test
les
sbb
int
dec
ss
push
adc
fcomp
lock
cmp
clc
lods
and
mov
mov
das
test
mov
mov
stos
loope
or
imul
mov
mov
sub
scas
call
xor
push
test
mov
stos
fldcw
xor
loopne
icebp
xor
mov
inc
dec
sub
pop
clc
test
cmp
or
mov
mov
xlat
ins
mov
xchg
je
or
xchg
sbb
xchg
push
shr
jns
xlat
and
xchg
xor
push
mov
int3
adc
xchg
lods
imul
or
xlat
sahf
dec
push
scas
mov
lods
adc
cmps
and
(bad)
lock
sbb
repz
fsubr
fisttp
aam
xor
mov
repnz
jae
sub
add
or
(bad)
jne
xor
push
in
jns
loope
int
and
shl
int
scas
dec
jge
jns
mov
xor
fst
mov
je
sub
mov
ins
or
xlat
jne
arpl
jne
arpl
inc
jecxz
xchg
stc
jge
xor
xchg
shl
ins
mov
add
jecxz
push
xchg
int
fcomp
or
push
out
xor
add
push
mov
jb
ja
cwde
into
xchg
push
out
jns
mov
xor
lods
or
inc
or
jns
shr
inc
jae
movs
out
adc
mov
mov
rcl
stc
imul
push
test
xchg
ror
sbb
outs
arpl
int3
adc
in
cmp
imul
dec
nop
loopne
mov
jmp
clc
mov
cmp
es
cmp
push
adc
(bad)
(bad)
repnz
(bad)
sbb
mov
ficom
aad
push
das
movs
add
aam
sub
daa
xor
lods
add
push
das
mov
(bad)
rol
sbb
les
stc
repz
push
pop
ins
fmul
ins
mov
dec
outs
call
or
call
mov
retf
lds
jmp
push
mov
fmul
adc
push
xchg
xchg
adc
ins
fstp
adc
ins
rcl
ja
or
retf
rol
mov
inc
scas
sub
int
xlat
xor
push
xchg
stc
add
mov
or
sub
fnstenv
sub
jno
and
or
cdq
sbb
dec
sar
push
push
in
outs
(bad)
push
mov
inc
sub
xor
xor
arpl
xchg
stc
aad
jae
push
mov
ror
and
xchg
or
outs
ja
sbb
sub
repz
sub
or
sbb
push
in
ss
sub
repz
push
in
stc
push
xchg
mov
xchg
or
out
push
outs
push
xlat
mov
or
fwait
out
jns
mov
mov
jae
dec
out
push
imul
lock
push
stos
js
imul
inc
imul
sub
jo
jmp
and
cwde
or
les
adc
lods
xchg
fwait
out
adc
ins
cmp
xchg
je
nop
sub
repz
fisubr
jns
cmps
or
daa
mov
les
ins
mov
ins
push
mov
ins
mov
xlat
ins
mov
xlat
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
and
(bad)
ficomp
cli
fcmovu
pop
xchg
xor
mov
enter
mov
inc
or
nop
pop
loop
push
or
xchg
pop
loope
outs
xor
add
call
or
test
cmp
or
cwde
and
scas
jo
ret
adc
lahf
and
mov
cmp
mov
fldenv
call
mov
fsub
out
mov
add
mov
fbld
repnz
add
(bad)
push
sbb
jg
leave
xchg
push
sbb
inc
pop
enter
mov
inc
or
nop
pop
loop
push
or
xchg
pop
loope
outs
xor
add
call
or
test
cmp
or
cwde
and
scas
jo
ret
adc
lahf
and
mov
cmp
mov
fldenv
call
mov
fsub
out
mov
add
mov
fbld
repnz
add
(bad)
push
sbb
jg
leave
xchg
push
sbb
inc
pop
enter
mov
inc
or
nop
pop
loop
push
or
xchg
pop
loope
outs
xor
add
call
or
test
cmp
or
cwde
and
scas
jo
ret
adc
lahf
and
mov
cmp
mov
fldenv
call
mov
fsub
out
mov
add
mov
fbld
repnz
add
(bad)
push
sbb
jg
leave
xchg
push
sbb
inc
pop
enter
mov
inc
or
nop
pop
loop
push
or
xchg
pop
loope
outs
xor
add
call
or
test
cmp
or
cwde
and
scas
jo
ret
adc
lahf
and
mov
cmp
mov
fldenv
call
mov
fsub
out
mov
add
mov
fbld
repnz
add
(bad)
push
sbb
jg
leave
xchg
push
sbb
inc
pop
enter
mov
inc
or
nop
pop
loop
push
or
xchg
pop
loope
outs
xor
add
call
or
test
cmp
or
cwde
and
scas
jo
ret
adc
lahf
and
mov
cmp
mov
fldenv
call
mov
fsub
out
mov
add
mov
fbld
repnz
add
(bad)
push
sbb
jg
leave
xchg
push
sbb
inc
pop
enter
mov
inc
or
nop
pop
loop
push
or
xchg
pop
loope
outs
xor
add
call
or
test
cmp
or
cwde
and
scas
jo
ret
adc
lahf
and
mov
cmp
mov
fldenv
call
mov
fsub
out
mov
add
mov
fbld
repnz
add
(bad)
push
sbb
jg
leave
xchg
push
sbb
inc
pop
enter
mov
inc
or
nop
pop
loop
push
or
xchg
pop
loope
outs
xor
add
call
or
test
cmp
or
cwde
and
scas
jo
ret
adc
lahf
and
mov
cmp
mov
fldenv
call
mov
fsub
out
mov
add
mov
fbld
repnz
add
(bad)
push
sbb
jg
leave
xchg
push
sbb
inc
pop
enter
mov
inc
or
nop
pop
loop
push
or
xchg
pop
loope
outs
xor
add
call
or
test
cmp
or
cwde
and
scas
jo
ret
adc
lahf
and
mov
cmp
mov
fldenv
call
mov
fsub
out
mov
add
mov
fbld
repnz
add
(bad)
push
sbb
jg
leave
xchg
push
sbb
inc
pop
enter
mov
inc
or
nop
pop
loop
push
or
xchg
pop
loope
outs
xor
add
call
or
test
cmp
or
cwde
and
scas
jo
ret
adc
lahf
and
mov
cmp
mov
fldenv
call
mov
fsub
out
mov
add
mov
fbld
repnz
add
(bad)
push
sbb
jg
leave
xchg
push
sbb
inc
pop
enter
mov
inc
or
nop
pop
loop
push
or
xchg
pop
loope
outs
xor
add
call
or
test
cmp
or
cwde
and
scas
jo
ret
adc
lahf
and
mov
cmp
mov
fldenv
call
mov
fsub
out
mov
add
mov
fbld
repnz
add
(bad)
push
sbb
jg
leave
xchg
push
sbb
inc
pop
enter
mov
inc
or
nop
pop
loop
push
or
xchg
pop
loope
outs
xor
add
call
or
test
cmp
or
cwde
and
scas
jo
ret
adc
lahf
and
mov
cmp
mov
fldenv
call
mov
fsub
out
mov
add
mov
fbld
repnz
add
(bad)
push
sbb
jg
leave
xchg
push
sbb
inc
pop
enter
mov
inc
or
nop
pop
loop
push
or
xchg
pop
loope
outs
xor
add
call
or
test
cmp
or
cwde
and
scas
jo
ret
adc
lahf
and
mov
cmp
mov
fldenv
call
mov
fsub
out
mov
add
mov
fbld
repnz
add
(bad)
push
sbb
jg
leave
xchg
push
sbb
inc
pop
enter
mov
inc
or
nop
pop
loop
push
or
xchg
pop
loope
outs
xor
add
call
or
test
cmp
or
cwde
and
scas
jo
ret
adc
lahf
and
mov
cmp
mov
fldenv
call
mov
fsub
out
mov
add
mov
fbld
repnz
add
(bad)
push
sbb
jg
leave
xchg
push
sbb
inc
pop
enter
mov
inc
or
nop
pop
loop
push
or
xchg
pop
loope
outs
xor
add
call
or
test
cmp
or
cwde
and
scas
jo
ret
adc
lahf
and
mov
cmp
mov
fldenv
call
mov
fsub
out
mov
add
mov
fbld
repnz
add
(bad)
push
sbb
jg
leave
xchg
push
sbb
inc
pop
enter
mov
inc
or
nop
pop
loop
push
or
xchg
pop
loope
outs
xor
add
call
or
test
cmp
or
cwde
and
ds
das
(bad)
dec
nop
xor
pop
dec
dec
adc
bound
call
mov
fsub
out
mov
add
mov
fbld
repnz
add
(bad)
push
sbb
jg
leave
xchg
push
sbb
inc
pop
enter
mov
inc
or
nop
pop
loop
push
or
xchg
pop
loope
outs
xor
add
call
or
test
cmp
or
cwde
and
scas
jo
ret
adc
lahf
and
mov
cmp
mov
fldenv
call
mov
fsub
out
mov
add
mov
fbld
repnz
add
(bad)
push
sbb
jg
leave
xchg
push
sbb
inc
pop
enter
mov
inc
or
nop
pop
loop
push
or
xchg
pop
loope
outs
xor
add
call
or
test
cmp
or
cwde
and
scas
jo
ret
adc
lahf
and
mov
cmp
mov
fldenv
call
mov
fsub
out
mov
add
mov
fbld
repnz
add
(bad)
push
sbb
jg
leave
xchg
push
sbb
inc
pop
enter
mov
inc
or
nop
pop
loop
push
or
xchg
pop
loope
outs
xor
add
call
or
test
cmp
or
cwde
and
scas
jo
ret
adc
lahf
and
mov
cmp
mov
fldenv
call
mov
fsub
out
mov
add
mov
fbld
repnz
add
(bad)
push
sbb
jg
leave
xchg
push
sbb
inc
pop
enter
mov
inc
or
nop
pop
loop
push
or
xchg
pop
loope
outs
xor
add
call
or
test
cmp
or
cwde
and
scas
jo
ret
adc
lahf
and
mov
cmp
mov
fldenv
call
mov
fcom
pushf
aaa
jae
add
fld
pusha
out
add
sbb
mov
sbb
es
mov
mov
jmp
fisttp
loopne
fisttp
shr
mov
jmp
fisttp
mov
jmp
frstor
push
sbb
daa
jnp
push
lds
push
sub
fild
sbb
in
(bad)
(bad)
sub
fidiv
test
pop
xor
pop
xchg
cmp
cdq
ror
push
xchg
pop
ins
sti
push
sti
inc
jle
push
sub
mov
jge
sbb
inc
jb
mov
xchg
std
rol
xchg
pop
ja
jb
xor
mov
push
(bad)
je
mov
fwait
xchg
popf
add
fwait
push
or
pop
(bad)
fistp
pushf
lea
sbb
adc
dec
les
jbe
or
xor
sar
leave
pop
ja
xor
mov
push
adc
pushf
push
mov
jg
xchg
push
mov
fs
mov
jae
sbb
xor
je
lahf
iret
pop
je
daa
cli
sbb
sub
pop
pop
push
jae
je
rcr
xchg
cmps
pop
pop
jo
mov
popf
jb
mov
ds
jmp
mov
in
stc
xor
xchg
jbe
dec
cmp
push
scas
xchg
repz
movs
ss
(bad)
adc
adc
jo
push
ss
or
rcr
ja
aad
jno
push
ret
sub
aam
xchg
sbb
xor
div
fimul
xchg
push
(bad)
popf
jns
stos
pop
xchg
pop
int
jno
fs
fnop
imul
jl
sbb
push
in
pushf
repnz
xor
stc
push
mov
rcr
pusha
pop
mov
(bad)
push
mov
and
xlat
mov
xchg
mov
clc
nop
imul
movs
fs
call
fdiv
sbb
mov
out
pop
rcr
gs
and
mov
jle
stc
mov
out
mov
into
push
repz
add
jbe
pop
repz
cwde
icebp
mov
hlt
std
adc
pop
gs
xor
pop
jb
and
cdq
lock
not
in
pop
ror
mov
push
jge
test
xchg
cmc
sbb
and
sbb
or
mov
xchg
cmp
push
and
sub
(bad)
jg
div
addr16
cmc
jne
jge
aas
dec
sbb
fs
push
stos
mov
ins
std
jbe
lock
adc
xchg
cmp
cwde
rcr
in
sbb
push
cwde
mov
in
mov
cmp
jge
add
mov
xchg
mov
and
push
aam
xor
fst
dec
mov
sbb
adc
sub
push
mov
ins
in
mov
je
mov
adc
add
cmp
test
jne
xchg
je
cmp
xchg
cmp
mov
cmp
push
imul
mov
inc
scas
les
(bad)
fs
mov
pop
lods
js
js
pushf
fst
dec
sti
nop
fsub
hlt
mov
lds
push
push
mov
std
adc
pop
icebp
leave
mov
sbb
movs
cmp
or
nop
xchg
lock
xlat
(bad)
jg
cmp
push
sub
out
cmp
inc
jp
repz
neg
daa
jo
xlat
add
push
add
xchg
(bad)
cmp
ss
mov
call
lods
sbb
ret
xor
in
call
les
jo
cwde
adc
sbb
mov
fimul
pop
xor
mov
xchg
jl
pop
outs
push
and
mov
mov
add
cmp
sub
pop
(bad)
div
xchg
test
cdq
shr
push
push
aas
(bad)
pushf
ficom
mov
push
mov
mov
fisttp
js
js
jns
push
test
push
and
iret
gs
neg
leave
call
adc
xchg
jge
cmps
jge
clc
out
adc
out
mov
or
repz
cdq
sti
mov
aam
lock
xor
xor
not
jmp
jl
jo
hlt
push
aas
(bad)
cdq
adc
out
call
push
jp
and
jne
adc
jae
pop
mov
sbb
js
(bad)
out
sbb
mov
mov
inc
call
lds
mul
icebp
cdq
int3
sar
cmp
lds
jmp
jno
add
clc
sbb
ja
shl
lahf
xchg
xor
push
xchg
adc
mov
stc
push
pop
in
sbb
test
push
jmp
pop
cmp
or
adc
movs
adc
xchg
pop
xchg
stc
repnz
xchg
jbe
out
mov
push
or
sti
aad
cmc
sbb
pushw
mov
xor
xor
rol
xchg
push
push
add
lea
and
fld
test
xchg
cmc
pusha
repz
aaa
daa
sbb
cmp
or
out
push
xchg
(bad)
push
sbb
stc
sahf
dec
xchg
xchg
jg
fcom
fsub
sbb
or
icebp
fsub
call
(bad)
xor
cmps
fwait
fwait
rol
icebp
dec
xchg
js
mov
adc
icebp
loope
pop
xor
ja
cmps
jns
adc
xor
ror
jo
je
ret
daa
mov
pop
xor
aas
(bad)
cdq
ss
add
mov
jb
shr
xchg
inc
(bad)
imul
jp
js
fwait
xchg
fmul
mov
xchg
sbb
jge
mov
fcmovbe
imul
(bad)
cld
push
inc
cmc
fidiv
aaa
ss
jnp
add
mov
jge
jnp
xchg
inc
xchg
sbb
data16
daa
jne
lock
push
repz
(bad)
sbb
mov
leave
xchg
xchg
fisub
jp
inc
sahf
adc
jae
rol
mov
mov
xchg
in
out
jmp
sbb
push
or
dec
clc
mov
aaa
cmp
imul
aad
adc
mov
sub
rep
aad
icebp
or
and
push
xchg
jne
out
mov
icebp
push
jns
mov
mov
ror
je
mov
(bad)
jne
rol
sbb
movs
hlt
cwde
push
dec
push
xor
adc
adc
xchg
retf
mov
mov
in
push
aaa
fwait
addr16
adc
xchg
stos
retf
test
jae
cmp
adc
push
mov
jg
jns
xor
fidiv
(bad)
cdq
xor
push
add
xor
imul
sbb
out
cmp
addr16
jae
ja
cmc
(bad)
mov
xor
xchg
ss
push
sbb
movs
jne
mov
xlat
xchg
cmp
jmp
call
mov
pop
or
jge
jae
jno
xchg
adc
jbe
adc
push
rcr
or
in
and
lea
call
jo
xchg
mov
or
mov
xadd
mov
je
jno
push
and
push
jno
xchg
mov
cld
mov
sar
xor
pop
sbb
jne
xor
mov
data16
jnp
and
sbb
xlat
jne
(bad)
dec
leave
jecxz
lds
sub
movs
(bad)
sub
xchg
imul
jno
cmps
jno
aas
jbe
xchg
pop
adc
cmp
push
bound
lock
inc
ins
inc
sar
jmp
scas
pop
xchg
xchg
xchg
shl
and
retf
pushf
cmp
push
and
pop
jbe
repnz
push
inc
ds
out
fimul
push
jmp
cli
(bad)
data16
cdq
nop
or
adc
rcr
js
scas
cmp
cmp
lahf
in
mov
pop
dec
and
sbb
loope
sbb
outs
add
jl
loope
fsubr
adc
jno
sbb
mov
push
and
push
push
inc
dec
test
pop
inc
mov
adc
imul
jp
sbb
pop
inc
adc
pop
and
ret
aaa
and
mov
mov
mov
push
popa
popa
jo
arpl
mov
mov
sbb
add
sbb
mov
or
add
dec
jecxz
mov
add
aas
scas
ror
iret
shr
(bad)
loope
pushf
iret
mov
call
mov
fcom
dec
dec
xor
push
and
in
sahf
movs
nop
pusha
push
popa
icebp
fisttp
outs
mov
test
das
shl
dec
stc
jbe
test
and
out
loope
imul
sbb
in
jno
push
bound
ss
aaa
adc
popa
sub
mov
call
cld
scas
shr
outs
loopne
std
outs
add
cmp
ret
mov
or
scas
ror
iret
ror
scas
shr
iret
mov
jmp
sahf
mov
jmp
out
and
or
sbb
sub
cmp
clc
lods
jb
rol
scas
mov
mov
(bad)
loop
pushf
xchg
js
add
mov
sahf
js
sti
call
push
pop
push
rol
repz
loope
cld
out
mov
test
iret
mov
call
pushf
iret
mov
or
mov
or
scas
ror
scas
ror
scas
shr
dec
mov
push
and
fwait
dec
mov
in
(bad)
mov
test
movs
retf
test
jp
or
aaa
mov
xor
ds
clc
sub
retf
cmp
and
pop
jno
xchg
aaa
mov
arpl
iret
add
popf
les
aaa
jno
xchg
and
push
and
in
loope
fucomip
loope
mov
iret
mov
enter
test
scas
mov
or
mov
or
scas
ror
scas
ror
scas
loope
pushf
iret
mov
call
push
pop
mov
xor
data16
adc
retf
pop
sub
and
push
fcomi
bound
mov
sbb
inc
xchg
cmp
into
jo
ret
int3
xor
mov
int3
sbb
pop
mov
jecxz
sar
iret
ror
iret
mov
enter
test
scas
mov
or
mov
or
scas
ror
scas
ror
scas
loope
pushf
iret
mov
dec
sbb
jno
push
and
pop
ss
stos
ret
into
movs
push
imul
sub
in
(bad)
dec
and
xchg
push
xchg
sar
cs
movs
add
jmp
xchg
pop
push
adc
(bad)
sub
fs
adc
xchg
push
inc
add
and
pushf
iret
mov
enter
test
iret
mov
or
mov
or
scas
loope
fsubr
loope
cld
iret
mov
enter
leave
fnsave
adc
push
add
out
cmp
or
jnp
retf
mov
sub
int3
xor
jle
push
jae
(bad)
lahf
mov
lock
les
add
ins
pop
cs
jae
pop
jg
mov
pop
mov
cmp
leave
fld
shl
add
cld
iret
mov
enter
test
iret
mov
or
mov
or
scas
loope
fsubr
loope
cld
iret
ror
iret
mov
test
sub
jmp
les
cmps
add
(bad)
stos
and
(bad)
in
adc
(bad)
dec
inc
jmp
fild
fwait
mov
mov
push
bound
cli
(bad)
cli
retf
inc
dec
xor
std
mov
and
pop
test
int3
cmp
out
loopne
(bad)
or
pushf
iret
mov
or
mov
or
scas
loope
fsubr
loope
cld
iret
ror
iret
mov
test
mov
imul
(bad)
call
or
fwait
stos
(bad)
jmp
arpl
(bad)
mov
shr
xchg
xor
xchg
jp
cmp
rcr
pop
inc
jge
rol
mov
js
mov
mov
es
inc
sbb
test
sbb
fwait
sbb
adc
scas
add
shr
mov
test
mov
or
scas
loope
fsubr
loope
cld
scas
ror
iret
ror
scas
shr
push
test
fidiv
sbb
mov
xlat
and
push
push
shl
mov
adc
aas
cmp
outs
ret
cdq
jle
fist
push
pusha
jb
or
in
jae
(bad)
sbb
loopne
outs
mov
add
or
mov
mov
cmp
iret
cli
js
shr
into
loopne
call
scas
shr
ins
mov
or
scas
loope
fsubr
loope
cld
scas
ror
iret
ror
scas
shr
ins
add
jge
pop
in
adc
inc
jl
xchg
xchg
xor
xor
and
pop
add
push
pop
cmp
pop
xor
fwait
inc
fdivp
xchg
xor
lea
fbstp
daa
in
push
mov
add
cmp
ins
fisubr
sub
lds
jge
scas
das
shl
rol
or
scas
ror
scas
ror
ins
ret
ins
and
aas
scas
loope
fsubr
loope
fsubr
ror
scas
shr
push
mov
enter
ds
(bad)
daa
jp
cmp
xor
mov
cmp
pop
ja
or
xor
push
and
fistp
mov
push
fwait
jo
fstp
xchg
jb
test
xlat
ins
inc
or
stos
(bad)
in
stc
sub
add
pop
es
push
pop
sub
sub
(bad)
out
mov
enter
enter
or
ins
and
aas
(bad)
loope
fsubr
loope
fsubr
ror
scas
shr
(bad)
mov
jmp
add
pop
sbb
(bad)
xchg
call
mov
lahf
pop
sub
jg
jecxz
clc
push
xchg
popf
pop
(bad)
rcr
add
push
rol
lods
jno
and
outs
xchg
dec
and
mov
dec
and
mov
inc
pop
mov
cli
adc
inc
sub
jge
ror
ins
ret
ins
and
aas
mov
call
fisttp
ror
scas
ror
scas
shr
iret
mov
test
mov
mov
ds
dec
add
xchg
cdq
sbb
loop
jns
in
lods
cmp
rcr
pop
mov
hlt
loop
ds
xchg
push
sti
stos
arpl
shl
std
imul
sub
dec
xchg
ret
sub
int3
ret
imul
mov
fild
ror
ins
ret
ins
and
aas
mov
call
fisttp
loope
fsubr
ror
iret
ror
iret
mov
test
loope
jmp
and
jo
inc
minps
retf
mov
je
jp
jmp
adc
adc
ss
adc
test
das
jp
mov
stos
(bad)
stos
push
and
cmp
ins
ds
add
pop
stos
jmp
inc
push
ror
ror
scas
ror
ins
ret
ins
and
aas
mov
call
fisttp
loope
fsubr
ror
iret
ror
iret
mov
test
dec
test
data16
pop
push
and
rcl
fcomp
pop
scas
not
cmp
mov
xchg
out
jl
inc
xchg
ds
inc
xor
(bad)
jecxz
cmp
or
fcmovu
das
popa
push
ds
dec
and
mov
lods
jnp
or
pusha
or
loopne
cmp
scas
shr
lea
or
mov
call
(bad)
jmp
fsubr
loope
cld
iret
ror
iret
mov
test
mov
jmp
stos
mov
call
pop
push
in
push
nop
and
pop
aaa
inc
jno
adc
xor
jbe
adc
push
add
sbb
and
scas
xor
dec
mov
mov
mov
test
call
xchg
fmul
sub
std
iret
mov
test
iret
shr
ins
and
aas
mov
call
(bad)
jmp
fsubr
loope
cld
scas
ror
iret
ror
scas
shr
scas
loope
sbb
fdivr
fild
xchg
jle
and
fist
adc
jbe
mov
cmc
and
ss
push
mul
(bad)
mov
push
shl
inc
retf
mov
dec
es
mov
inc
or
or
enter
enter
test
iret
mov
or
ins
and
aas
mov
call
(bad)
jmp
cmp
loope
cld
(bad)
loope
cld
scas
ror
iret
ror
scas
ror
iret
shr
iret
jmp
rcr
jbe
jo
push
loop
sbb
mov
adc
xor
loop
repz
dec
xor
cmps
or
mov
mov
scas
sub
push
jl
imul
or
popa
imul
scas
shr
mov
or
mov
call
(bad)
jmp
cmp
loope
fisttp
ror
scas
loope
cld
(bad)
loope
cld
iret
ror
iret
mov
leave
fsubr
jmp
sahf
cmps
or
jp
std
movs
shl
pop
fs
enter
sub
pop
pop
or
jmp
pop
push
pop
vprotw
shl
xchg
push
std
push
movs
jno
mov
jno
push
arpl
loope
std
iret
mov
enter
enter
or
ins
and
aas
mov
call
(bad)
jmp
cmp
loope
(bad)
jmp
fmul
loope
cld
scas
ror
iret
mov
test
mov
mov
loopne
fld
add
adc
fld1
inc
dec
fucom
out
in
fst
pop
inc
adc
mov
nop
not
mov
xchg
cld
shl
mov
push
adc
sub
inc
imul
(bad)
loope
cld
scas
ror
ins
ret
ins
and
aas
mov
call
(bad)
jmp
cmp
loope
(bad)
jmp
fmul
loope
cld
scas
ror
iret
ror
scas
shr
iret
mov
test
mov
call
rcl
xor
add
jge
in
out
jg
and
neg
es
aad
rcr
jbe
xor
push
int
mov
enter
call
cld
pop
enter
sub
ins
and
aas
mov
call
(bad)
jmp
cmp
loope
(bad)
jmp
cmp
loope
fisttp
loope
fsubr
loope
cld
iret
shr
scas
loope
pushf
dec
mov
mov
cs
mov
(bad)
jmp
lahf
cmc
out
call
and
push
and
push
and
push
and
jno
jecxz
inc
cmp
ror
scas
shr
(bad)
loope
cld
scas
ror
ins
ret
ins
and
aas
mov
call
(bad)
jmp
cmp
loope
(bad)
jmp
cmp
loope
fisttp
loope
fsubr
loope
cld
scas
ror
iret
mov
test
scas
mov
or
sub
fsubr
fimul
xor
nop
int3
jbe
outs
fxch
shl
mov
push
shl
add
pop
enter
enter
or
(bad)
loope
cld
pop
enter
or
ins
and
aas
mov
call
(bad)
jmp
cmp
loope
(bad)
jmp
cmp
loope
(bad)
jmp
cmp
loope
fisttp
ror
scas
shr
scas
ror
iret
mov
push
cmp
cdq
call
and
mov
jmp
popf
retf
imul
scas
add
cld
(bad)
loope
cld
scas
ror
scas
shr
pop
jmp
fsubr
aas
ins
and
aas
mov
call
(bad)
jmp
cmp
loope
(bad)
jmp
cmp
loope
(bad)
jmp
cmp
loope
fisttp
ror
scas
shr
(bad)
loope
cld
iret
shr
dec
sub
mov
cmp
xchg
inc
sub
into
loopne
mov
scas
mov
mov
scas
ror
scas
mov
enter
enter
call
cld
scas
ror
ins
ret
ins
and
aas
mov
call
(bad)
jmp
cmp
loope
(bad)
jmp
cmp
loope
(bad)
jmp
cmp
loope
(bad)
jmp
fsubr
loope
cld
scas
ror
scas
ror
mov
dec
jge
imul
pop
sub
mov
inc
jmp
pushf
scas
shr
scas
ror
scas
ror
scas
ror
(bad)
loope
cld
scas
ror
scas
shr
scas
ror
scas
ror
ins
ret
ins
and
aas
mov
call
(bad)
jmp
cmp
loope
(bad)
jmp
cmp
loope
(bad)
jmp
cmp
loope
(bad)
jmp
fmul
loope
cld
scas
ror
outs
ror
dec
das
or
loop
pop
iret
inc
bnd
add
(bad)
loope
(bad)
add
cld
scas
ror
scas
ror
scas
shr
(bad)
loope
cld
scas
ror
scas
shr
(bad)
loope
cld
scas
ror
scas
shr
scas
ror
scas
ror
ins
ret
ins
and
aas
mov
call
(bad)
jmp
cmp
loope
(bad)
jmp
cmp
loope
(bad)
jmp
cmp
loope
(bad)
jmp
fmul
loope
cld
scas
ror
mov
call
xchg
lods
add
das
adc
pop
dec
cs
inc
push
pop
fmul
ror
scas
shr
(bad)
loope
fsubr
shr
(bad)
loope
cld
scas
ror
scas
shr
(bad)
loope
cld
scas
ror
ins
ret
ins
and
aas
mov
call
(bad)
jmp
cmp
loope
(bad)
jmp
cmp
loope
(bad)
jmp
cmp
loope
(bad)
jmp
cmp
loope
fisttp
shr
push
shr
mov
mov
jg
jmp
xor
mov
push
add
cmp
(bad)
loope
fsubr
add
fmul
loope
fisttp
loope
cmp
loope
(bad)
jmp
fsubr
aas
ins
and
aas
mov
call
(bad)
jmp
cmp
loope
(bad)
jmp
cmp
loope
(bad)
jmp
cmp
loope
(bad)
jmp
cmp
loope
fisttp
loope
fmul
shr
mov
aad
jae
xlat
cmp
loopne
jl
inc
or
outs
add
fmul
loope
(bad)
jmp
cmp
loope
(bad)
jmp
cmp
loope
(bad)
jmp
cmp
loop
aas
ins
mov
call
(bad)
jmp
cmp
loope
(bad)
jmp
cmp
loope
(bad)
jmp
cmp
loope
(bad)
jmp
cmp
loope
(bad)
jmp
cmp
loopne
cmp
cld
repz
shl
stos
(bad)
outs
or
add
cmp
outs
add
fmul
loope
(bad)
jmp
cmp
loope
(bad)
jmp
cmp
loope
(bad)
jmp
cmp
loop
mov
ins
add
pop
ins
add
aas
dec
and
aas
ins
add
pop
ins
add
aas
dec
and
aas
ins
add
pop
ins
add
aas
dec
and
aas
ins
add
pop
ins
add
aas
dec
and
aas
ins
add
pop
ins
add
aas
dec
and
aas
ins
add
pop
ins
add
aas
ins
inc
sub
add
cmp
loope
cmp
inc
dec
jg
add
pop
ins
add
aas
dec
and
aas
ins
add
pop
ins
add
aas
dec
and
aas
ins
add
pop
ins
add
aas
dec
and
aas
ins
add
pop
ins
add
aas
dec
and
aas
ins
add
pop
sub
jns
sti
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
pop
pop
pop
pop
mov
cmp
lods
(bad)
movs
rcr
fadd
adc
push
adc
push
adc
xor
add
inc
or
inc
mov
inc
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
add
add
inc
push
cmp
cmp
mov
cmp
push
cmp
pop
mov
inc
pop
xor
fadd
inc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
pop
pop
pop
lods
scas
cs
mov
movs
push
mov
lods
movs
push
mov
lods
stos
push
mov
movs
push
mov
lods
movs
push
mov
lods
movs
push
mov
lods
test
lods
test
ror
push
lods
lods
lods
lods
lods
scas
cs
lods
lods
test
ror
es
es
mov
scas
ins
dec
scas
lods
scas
scas
jne
scas
and
lods
test
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
push
mov
lods
test
lods
scas
mov
outs
lods
test
lods
cmp
sahf
jg
scas
pop
pop
lods
stos
sub
lods
test
mov
jmp
sub
lods
test
(bad)
in
lods
test
lods
popf
lods
lods
lods
lods
jmp
scas
push
jge
stos
sub
lods
test
es
lods
test
lods
scas
and
lods
scas
cs
lods
lods
scas
cs
test
test
lods
lods
lods
in
lods
lods
in
lods
scas
xchg
lods
movs
push
mov
lods
movs
push
mov
lods
movs
push
mov
lods
movs
push
mov
lods
movs
push
mov
lods
movs
push
mov
lods
movs
push
mov
lods
movs
push
mov
lods
movs
push
mov
lods
movs
push
mov
lods
movs
push
mov
lods
movs
push
mov
lods
movs
push
mov
lods
test
popf
lods
lods
lods
lods
scas
leave
es
mov
lods
scas
outs
mov
test
lods
test
lods
scas
outs
xchg
lods
scas
es
mov
mov
stc
mov
mov
mov
stc
mov
mov
mov
mov
test
stc
mov
lods
scas
lahf
scas
lods
scas
ins
ins
movs
lods
lods
out
lods
scas
sub
imul
mov
mov
scas
lods
lods
lods
lods
scas
es
dec
lods
scas
and
mov
mov
mov
test
scas
mov
lods
jmp
push
jmp
and
push
mov
in
test
mov
xchg
lods
test
lods
scas
es
lods
test
lods
test
(bad)
lods
lods
std
lods
scas
push
jl
scas
es
lods
scas
cs
lods
lods
scas
lahf
stos
lods
scas
imul
lods
lods
stos
sub
xchg
test
and
lods
test
lods
stos
sub
xchg
test
cs
lods
lods
scas
es
lods
scas
arpl
test
mov
lods
lods
lods
scas
sub
and
push
lods
lods
jmp
scas
cs
test
mov
in
lods
lods
lods
scas
retf
es
mov
scas
lods
test
lods
test
in
lods
lods
lods
test
lods
stos
sub
xchg
test
es
scas
es
lods
scas
xchg
mov
scas
xchg
in
lods
test
lods
lods
lods
lods
lods
scas
cs
lods
lods
scas
sub
es
mov
xchg
lods
scas
es
lods
test
lods
scas
and
lods
scas
and
test
jmp
lods
lods
lods
scas
es
mov
lods
test
sub
scas
(bad)
scas
lods
scas
(bad)
scas
lods
test
lods
lods
lods
in
lods
scas
es
lods
test
lods
stos
sub
in
lods
lods
lods
stos
sub
loope
lods
lods
lods
stos
push
leave
into
iret
int3
lods
lods
sti
lods
scas
(bad)
test
test
lods
scas
es
lods
scas
es
mov
lods
lods
outs
lods
stos
sub
std
test
lods
lods
stos
sub
int
lods
lods
lods
scas
es
mov
test
lods
lods
lods
sub
lods
lods
scas
cs
push
lods
scas
es
sub
push
test
lea
test
lods
lods
scas
es
scas
es
mov
test
mov
outs
mov
popf
lods
scas
es
test
lods
stos
sub
lods
lods
lods
scas
es
test
test
test
lods
mov
int
lods
stc
lods
scas
es
lods
int3
lods
scas
lods
scas
es
lods
scas
pushf
mov
test
lods
stos
sub
lods
lods
lods
lods
lods
scas
push
jp
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
lods
test
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
pop
pop
pop
sahf
lahf
jbe
ja
bnd
ja
pop
xchg
jmp
ja
sahf
ja
ja
jbe
js
sub
ja
ja
js
push
ja
es
ja
inc
push
out
shl
inc
or
out
jo
cmp
ja
enter
ja
add
ja
sahf
mov
mov
xor
out
lahf
jae
into
jbe
ja
sahf
xor
mov
jg
inc
lods
out
mov
out
lods
out
mov
mov
ja
ja
out
out
out
sub
das
jmp
ja
inc
ja
ja
fiadd
out
jno
inc
mov
sahf
popf
ja
ja
cwde
inc
ja
ja
cwde
jge
js
jns
xor
sahf
lods
mov
div
ja
iret
ja
cmp
sahf
jo
ja
mov
sahf
ja
ja
mov
into
div
ja
pop
div
ja
dec
jbe
ja
or
ja
inc
push
std
jo
sahf
mov
ja
hlt
xchg
ja
sahf
sub
sub
(bad)
lods
sahf
and
push
jne
test
mov
jno
mov
mov
jo
cmp
inc
cmps
push
test
xchg
test
loop
ja
sahf
repz
ja
mov
js
xchg
mov
mov
ja
hlt
mov
sahf
in
mov
out
repz
mov
ja
ja
ja
out
or
ja
js
mov
mov
mov
xor
ds
mov
repnz
mov
mov
out
mov
neg
out
hlt
mov
js
cmp
inc
mov
mov
stc
je
ja
hlt
pushf
jne
imul
mov
mov
ja
out
out
out
out
out
out
out
out
fwait
fwait
ja
ja
sahf
adc
ja
ss
out
shr
je
xor
xor
xor
ds
mov
bnd
mov
mov
ja
cmp
mov
ja
sahf
ja
ja
aaa
out
out
mov
js
sahf
mov
mov
mov
lods
out
mov
out
xchg
out
fwait
jg
ja
sahf
xchg
mov
jo
cmp
jg
ja
ja
fisttp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
pop
pop
pop
jmp
mov
inc
inc
dec
nop
cmp
jne
jmp
call
nop
add
ret
jmp
mov
mov
mov
jmp
sub
mov
jmp
mov
mov
xor
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
pop
pop
pop
jp
jnp
js
jns
jle
jg
jl
jge
jb
scas
mov
lods
mov
jae
jo
lods
mov
je
jne
push
imul
mov
imul
outs
mov
jo
mov
mov
mov
mov
cmps
mov
jae
jo
cmps
mov
jae
jo
movs
mov
jae
jo
movs
mov
jae
jo
call
mov
mov
jae
jo
cwde
mov
jae
jo
cdq
mov
sahf
mov
jo
lahf
mov
pop
mov
pop
mov
pop
mov
push
mov
push
mov
dec
mov
dec
mov
dec
mov
inc
mov
jae
jo
popf
mov
jo
xchg
mov
jo
xchg
mov
jo
nop
mov
jo
xchg
mov
jo
xchg
mov
jo
xchg
mov
jo
xchg
mov
jo
xchg
mov
jo
mov
jo
mov
jo
mov
jo
mov
xor
xor
xor
ss
xor
mov
xor
mov
xor
das
mov
and
das
mov
and
and
pushf
mov
mov
xor
das
mov
sbb
sbb
cs
xor
mov
push
mov
xor
jae
jo
(bad)
mov
pop
mov
adc
adc
mov
push
mov
adc
mov
add
adc
add
add
add
mov
clc
mov
pop
mov
cld
mov
mov
push
mov
icebp
mov
cld
mov
jbe
cmc
mov
call
mov
scas
mov
cmp
mov
cmp
out
xchg
in
adc
adc
mov
fdivr
fidivr
push
mov
fdivr
sar
sar
sar
push
mov
aam
or
push
mov
jbe
retf
mov
enter
leave
mov
pop
mov
adc
mov
push
mov
fstp
fstp
push
mov
loopne
jmp
mov
out
xchg
in
adc
adc
mov
fdivr
fidivr
push
mov
scas
mov
xchg
in
mov
fnstsw
sar
mov
jbe
(bad)
mov
sar
push
mov
(bad)
mov
push
mov
(bad)
mov
lds
push
mov
pop
mov
pop
mov
jbe
mov
mov
adc
adc
mov
push
mov
test
pop
mov
retf
mov
mov
mov
mov
mov
push
mov
xlat
mov
mov
mov
mov
or
mov
pushf
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
