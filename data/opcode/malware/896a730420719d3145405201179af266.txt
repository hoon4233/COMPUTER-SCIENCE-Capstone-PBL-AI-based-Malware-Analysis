adc
add
add
add
add
jo
std
jmp
cmp
jo
adc
test
xor
(bad)
xchg
clc
lahf
loope
mov
iret
or
xchg
or
add
cmp
cmps
mov
sub
ins
ret
test
pop
mov
sbb
push
or
mov
in
dec
mov
or
adc
or
add
and
movs
or
popf
jmp
sbb
out
mov
or
mov
xor
pop
lods
ficom
mov
imul
imul
mov
fldz
jo
cdq
das
mov
xor
jmp
cmp
sub
cmp
xlat
sbb
xlat
mov
add
cmps
cmps
mov
push
inc
pop
mov
out
(bad)
jp
pop
in
int3
push
xchg
jl
jae
sub
add
(bad)
xchg
icebp
aam
push
jmp
fld
mov
ds
in
(bad)
fidivr
stos
ins
sub
cld
popf
fstp
jno
inc
rcl
scas
lahf
(bad)
leave
mov
sti
loopne
jge
and
or
cs
pop
jbe
push
into
cmps
cmp
or
mov
rcl
mov
or
ror
retf
out
mov
mov
dec
(bad)
xor
sti
nop
dec
int
mov
fdivr
inc
movs
cs
add
imul
sub
rol
sub
scas
inc
jne
call
rcl
adc
pop
pop
not
arpl
lds
test
xchg
fild
test
aad
push
(bad)
pop
pop
fsubr
mov
cmp
jecxz
retf
jno
sti
(bad)
adc
adc
stos
lahf
mov
stc
mov
in
cdq
xor
mov
aad
inc
or
jge
mov
(bad)
xor
mov
cmp
mov
mov
jecxz
cmps
outs
in
jmp
jmp
jl
cdq
xchg
ds
fs
adc
adc
push
addr16
gs
jg
xchg
repz
inc
mov
aas
xchg
mov
hlt
mov
cli
stos
inc
mov
sbb
aad
sub
dec
xchg
scas
jae
add
jo
aas
sti
push
mov
dec
pusha
nop
jp
mov
jg
push
pusha
dec
addr16
mov
dec
sbb
sahf
es
xchg
jle
xchg
outs
push
xchg
jecxz
xchg
dec
mov
jbe
sbb
add
sub
xor
sub
(bad)
jo
mov
add
adc
sbb
sbb
xchg
jle
xchg
mov
ror
sbb
data16
pushf
lea
loope
mov
les
shl
int3
pusha
inc
(bad)
rol
mov
push
sbb
int3
jle
sub
xchg
aas
pusha
and
daa
loope
scas
cdq
pop
es
and
ds
add
cld
aaa
pop
jno
add
leave
mov
repnz
cwde
mov
data16
jge
and
add
cld
jge
jnp
iret
scas
mov
stos
and
add
mov
dec
add
mov
call
clc
mov
mov
or
dec
into
sbb
outs
gs
retf
adc
in
jbe
pop
pop
stos
xor
retf
(bad)
sub
retf
push
xchg
adc
xchg
adc
movs
jb
cs
mov
int3
aas
jo
out
retf
or
push
stos
xor
stc
pop
shr
movs
call
call
daa
sahf
inc
pop
test
in
leave
or
xor
or
loop
mov
dec
jbe
ins
fcomip
fsubr
mov
xor
add
xchg
cmp
test
popf
adc
dec
push
sub
mov
sub
mov
shl
jno
mov
sub
lock
fs
inc
push
dec
jae
inc
fisttp
dec
mov
mov
int3
movs
(bad)
out
cmp
xchg
sti
lods
in
jmp
cmp
ins
mov
xchg
dec
or
push
and
ja
pop
push
out
dec
jle
stos
retf
cmp
push
inc
mov
imul
arpl
cmp
dec
add
xchg
jle
cdq
mov
das
add
(bad)
(bad)
retf
mov
outs
jmp
xchg
mov
or
or
jb
sub
cwde
cwde
xor
mov
and
and
xor
call
pop
dec
outs
aam
pop
adc
pop
mov
fcmovbe
cmp
(bad)
and
pop
adc
mov
add
jmp
out
xchg
pop
add
push
sbb
add
jnp
inc
pusha
xor
sar
push
push
int
mov
fld
or
sbb
outs
daa
inc
jge
inc
dec
xchg
pop
sti
lods
ins
fcomip
popa
les
xlat
pop
cwde
jmp
add
aaa
sbb
mov
push
inc
mov
cwde
iret
mov
shl
xchg
and
cmp
popa
scas
and
xchg
mov
fisub
leave
ja
jg
xor
test
jmp
shl
mov
jl
hlt
sbb
or
jmp
sti
inc
adc
sbb
cld
jno
mov
add
cmp
lock
neg
jae
lds
std
add
sub
and
mov
adc
cmp
in
inc
dec
ficomp
test
sar
mov
mov
dec
dec
or
mov
and
xchg
scas
xlat
sub
aad
bound
repz
mov
xlat
mov
mov
nop
icebp
retf
mov
or
mov
pop
pusha
add
ja
leave
(bad)
retf
retf
jne
dec
push
ret
and
jo
lods
sar
jle
scas
cwde
test
and
aas
jnp
sub
loope
jg
fcomp
dec
sbb
fs
inc
call
jg
mov
mov
mov
mov
retf
push
pop
jmp
test
fsubr
jno
(bad)
jae
push
ret
cmps
rol
sub
xor
add
xor
mov
dec
xchg
retf
inc
aas
xor
neg
or
add
jg
xor
or
icebp
pop
stos
sub
aad
std
repnz
into
sub
rol
sub
adc
mov
dec
lds
test
pop
stc
mov
add
icebp
icebp
mov
aas
(bad)
jno
xchg
push
es
mov
push
push
lock
dec
mov
fimul
xchg
sbb
mov
enter
repz
js
or
xor
icebp
test
fldenv
aas
pop
fild
jmp
cmp
sub
addr16
cmps
icebp
les
(bad)
jmp
mov
and
fld
cmc
cld
mov
sub
dec
cmps
repz
xchg
jmp
xor
xor
into
pop
xor
lods
(bad)
mov
icebp
lahf
fadd
mov
pop
inc
mov
cs
(bad)
adc
(bad)
push
test
sbb
and
mov
scas
cmp
pop
push
xchg
cmps
mov
call
call
stc
xlat
fisttp
hlt
repz
enter
clc
push
nop
mov
nop
arpl
push
in
pop
sbb
data16
pop
add
cmp
add
dec
fimul
mov
inc
xchg
inc
dec
dec
les
pop
jnp
repnz
push
cmps
or
(bad)
mov
out
inc
xor
and
sub
cmp
dec
push
rol
stc
leave
adc
fdivr
inc
adc
add
out
mov
pop
adc
data16
cmp
fild
xchg
push
int3
xchg
mov
int
dec
jl
pop
mov
add
enter
mov
ret
mov
or
(bad)
rcr
mov
or
mov
and
mov
jae
pop
rcl
jnp
jl
jno
inc
jns
cmp
shl
(bad)
push
dec
ss
jns
push
xor
sbb
ins
sub
iret
mov
xlat
fiadd
enter
sub
cdq
fidiv
and
lea
mov
push
iret
cld
(bad)
adc
jge
inc
aaa
xchg
pushf
mov
fiadd
mov
pop
push
arpl
xlat
jmp
vmovdqa
lds
std
mov
ficomp
add
popf
(bad)
das
in
and
sbb
les
cli
ss
mov
dec
call
adc
leave
jb
and
inc
sub
das
cmc
outs
dec
js
leave
or
imul
mov
sbb
xchg
stos
pop
push
push
(bad)
mov
push
les
and
stos
test
shl
shr
xor
jno
xchg
jbe
mov
mov
pop
sub
xchg
fist
pop
push
test
(bad)
add
mov
stos
je
cmp
xor
xor
jp
pop
addr16
push
stos
jmp
ficom
leave
cmps
sbb
push
aad
dec
repz
mov
sub
inc
aad
jmp
sbb
adc
xor
pop
sahf
(bad)
fld
cmp
push
cmp
outs
sbb
mov
mov
cmps
inc
pop
cs
mov
push
xor
cmc
sub
inc
xchg
pop
aas
pushf
push
sub
or
push
daa
push
nop
push
sbb
xor
and
mov
sub
(bad)
repz
ret
mov
cmp
dec
aaa
mov
jns
dec
pop
arpl
xor
jmp
sub
imul
nop
ds
push
pusha
dec
xor
into
adc
(bad)
out
imul
fs
fninit
or
sbb
sbb
es
push
imul
scas
loope
sbb
mov
in
xor
mov
inc
dec
test
and
shl
ret
dec
fisub
xchg
add
int3
mov
idiv
(bad)
hlt
sub
or
cs
mov
movs
push
mov
mov
xchg
mov
rcr
push
test
or
mov
jo
pop
push
mov
mov
jl
neg
repz
sub
add
gs
mov
adc
in
imul
stc
lods
stos
pop
lds
pop
cmp
retf
(bad)
cmp
inc
in
scas
(bad)
aad
push
in
fld
imul
fbstp
dec
cmp
mov
inc
aas
inc
lock
rcr
cs
ins
sar
je
shr
das
xchg
movs
imul
or
(bad)
xchg
mov
xor
mov
addr16
jle
inc
sub
fiadd
or
clc
mov
bound
std
cmps
push
hlt
or
mov
ret
sti
jecxz
add
ret
ret
fdiv
cmovno
dec
les
push
popf
adc
adc
das
sti
enter
pop
in
pop
xchg
jecxz
xor
cmovne
ins
fisttp
xchg
cmp
cmps
cmps
fs
leave
xor
mov
dec
das
or
sub
fwait
adc
xlat
cmps
stc
pop
or
mov
inc
inc
cmp
jnp
cwde
call
rcl
xchg
rcr
lahf
ficom
call
push
jno
jbe
lods
das
dec
cmp
dec
mov
or
or
int
xchg
inc
xor
call
adc
mov
xchg
inc
mov
jp
or
cdq
or
inc
xchg
mov
push
xchg
xchg
dec
ret
ror
jo
xchg
mov
loope
(bad)
mov
and
pop
dec
cmp
imul
scas
jbe
dec
xor
fadd
mov
mov
(bad)
cli
cs
ds
loopne
inc
fcom
sbb
pop
mov
shl
ds
push
cmp
fmul
jae
pop
adc
jecxz
add
or
push
cmp
jmp
xor
loop
(bad)
cmps
jmp
or
adc
jno
xchg
shl
or
add
add
(bad)
aad
retf
xor
test
js
sbb
jecxz
dec
call
daa
cmp
test
jle
lds
mov
rcl
call
and
scas
stos
mov
jns
fdiv
pop
push
and
push
sub
test
(bad)
dec
inc
(bad)
call
mov
pop
mov
(bad)
retf
outs
mov
fisttp
frstor
call
shl
(bad)
fisttp
loop
and
(bad)
dec
out
sbb
pop
push
add
sar
test
test
pop
cwde
leave
mov
jb
lock
cmp
rcl
jmp
jg
neg
pop
push
cmp
dec
xchg
inc
push
mov
adc
sub
pop
mov
or
inc
push
inc
(bad)
mov
rcl
cdq
int3
push
shl
sti
test
pushf
inc
pop
ret
mov
test
loop
je
and
stos
mov
repz
xor
add
int
jmp
jge
(bad)
pusha
mov
sbb
inc
sub
jnp
inc
test
mov
mov
fld
pop
call
aad
test
add
xor
add
shl
outs
cli
mov
movs
aam
sbb
pop
or
sbb
xchg
cmp
push
jae
loope
xor
jae
loope
mov
retf
test
out
xchg
imul
mov
dec
enter
adc
retf
sahf
stos
jo
mov
xchg
cs
dec
aaa
sti
sbb
cmp
pop
pusha
pop
jg
jnp
lods
pop
mov
jns
mov
xchg
xchg
in
addr16
leave
les
outs
add
or
adc
and
xchg
xchg
xor
mov
and
fst
mov
inc
cmp
les
(bad)
jbe
cli
xor
inc
iret
stos
std
push
popa
dec
sub
cs
mov
sub
dec
fs
ret
add
pop
adc
mov
or
mov
and
and
aas
stos
int
push
mov
fs
cmp
ins
sub
xchg
pop
pop
lock
mov
(bad)
fnsave
add
iret
leave
aaa
lahf
push
sbb
sub
fcom
push
push
and
or
adc
fwait
and
je
inc
sbb
imul
push
push
sbb
test
adc
mov
cmp
jne
inc
mov
pop
inc
pusha
mov
jne
ror
xchg
xor
test
mov
or
xchg
xor
sub
je
sar
push
lods
gs
cmp
or
mov
popa
dec
push
add
push
cmp
inc
jl
push
in
ja
or
fcom
mov
hlt
jo
jno
inc
rcl
pop
std
cmovge
push
mov
push
idiv
dec
push
dec
xchg
mov
add
(bad)
(bad)
pop
rol
inc
push
mov
pushf
fiadd
jge
xchg
sbb
ds
add
cmp
ins
xchg
xchg
cmc
call
pop
movs
add
cmps
and
pop
loope
push
ss
rol
je
mov
jge
xor
add
jle
push
push
mov
pop
data16
mov
leave
stos
sbb
add
push
inc
mov
inc
mov
xchg
push
and
jl
movs
adc
ret
add
pusha
mov
cmp
inc
push
out
xor
sar
inc
es
sbb
popf
cmc
and
shl
mov
mov
mov
sbb
push
es
mov
out
addr16
sti
add
outs
fisubr
jl
push
mov
popf
xor
pop
xchg
test
iret
jmp
mov
pop
in
movs
repz
bound
loopne
stos
leave
out
jae
mov
mov
pop
movs
cli
fsub
call
inc
outs
in
xor
fwait
popa
push
dec
cmp
dec
pop
call
shl
push
add
cmp
fdivr
xchg
cmp
xor
ror
and
cli
pop
cmp
daa
pop
test
cmc
lods
movs
fcomi
aas
xor
out
xor
ins
push
fild
sub
aaa
loope
lds
es
(bad)
fisub
xor
fistp
push
dec
inc
lahf
sbb
jb
jmp
cmp
or
fwait
or
or
cli
fld
xchg
push
mov
jle
xchg
push
pop
aam
hlt
jle
outs
push
icebp
sbb
popf
xchg
sub
add
loopne
fimul
mov
sub
cmp
cld
(bad)
repnz
push
mov
mov
inc
jge
xor
out
add
(bad)
dec
or
nop
cdq
outs
push
and
call
cmps
les
js
inc
das
stos
loopne
adc
mov
int3
or
not
cwde
or
lea
aam
fnstsw
mov
pavgb
stc
dec
inc
xor
sbb
jmp
adc
mov
outs
add
lods
pop
fmulp
xchg
je
in
inc
out
sub
jne
fcomp
and
(bad)
cmp
mov
mov
mov
sbb
mov
mov
idiv
rcr
push
fwait
sub
sbb
inc
push
add
cmc
cld
push
in
das
jne
push
out
inc
cmp
add
pop
and
inc
jmp
xchg
mov
into
fisub
sti
xchg
mov
inc
sub
rcr
std
int3
arpl
cli
jo
neg
inc
or
push
mov
sub
aaa
lds
jge
enter
jl
push
jle
push
xor
lods
jnp
iret
retf
and
scas
aaa
loopne
int3
int3
cdq
imul
das
lods
mov
das
add
iret
xchg
(bad)
mov
test
sbb
sbb
inc
jmp
scas
cdq
cmps
gs
and
cdq
fs
movs
inc
scas
mov
sbb
js
sahf
and
or
fcmovnb
shl
sti
pushf
nop
rol
(bad)
fsubr
cld
iret
mov
jns
xchg
lods
imul
stos
shl
iret
push
xchg
aas
sar
loope
int3
sub
sti
mov
movs
sub
xchg
sbb
mov
fmulp
push
add
lock
int3
call
sbb
dec
push
enter
xor
fs
sbb
sahf
(bad)
(bad)
in
add
mov
call
add
jg
es
adc
std
mov
mov
jb
jp
outs
inc
add
hlt
scas
xor
sub
shl
je
jmp
mov
les
lods
popf
push
mov
lods
sub
jno
cmp
or
repnz
stc
lea
fcomp
test
adc
fsub
cwde
adc
mov
rcr
cmp
inc
mov
mov
cld
lods
inc
mov
push
js
das
sbb
pop
imul
retf
cmp
and
jecxz
cmp
jg
ins
fs
jmp
or
data16
aas
cmc
mov
mov
mov
inc
mov
push
push
mov
xor
mov
push
inc
inc
xor
adc
out
test
out
ret
outs
fbstp
in
loopne
and
loope
lahf
adc
pop
jbe
push
gs
aad
xchg
imul
int3
repz
pushf
call
shl
cmp
aaa
movs
idiv
into
xor
and
sub
mov
es
aad
enter
in
xchg
mov
add
adc
fistp
adc
repz
scas
and
sub
jecxz
pop
jmp
pop
push
and
cmp
jmp
fwait
jno
sbb
sbb
out
mov
fnstsw
lds
jb
movs
mov
xchg
stos
pop
or
popf
ss
into
call
xchg
scas
cmp
das
mov
lds
dec
dec
je
outs
or
dec
push
lock
add
mov
pop
cdq
inc
pusha
(bad)
pop
mov
xchg
inc
ret
lods
pop
movs
pushf
fld
(bad)
sbb
fisttp
mov
push
in
push
inc
fnsave
dec
push
rcl
dec
stos
call
movs
scas
ret
dec
inc
ss
or
adc
popf
cdq
stos
icebp
fnstsw
lods
fistp
sub
aad
shl
adc
mov
xor
stc
gs
test
sbb
jmp
mov
ficomp
out
ds
outs
and
call
loop
jmp
add
enter
xor
arpl
scas
cld
pop
ror
lahf
jle
inc
jnp
jl
out
inc
push
call
jecxz
daa
adc
cld
icebp
retf
xor
out
cmp
sbb
ds
mov
fld
add
cld
fisttp
fst
mov
sbb
call
inc
xor
xor
or
popf
and
pop
icebp
and
jne
div
push
mov
outs
push
shl
push
or
xor
pusha
jbe
loope
jl
movs
cld
xor
mov
inc
jg
retf
mov
fisubr
adc
or
push
test
xchg
push
jbe
sbb
mov
retf
rcl
stc
jmp
sub
push
(bad)
mov
mov
in
dec
hlt
mov
mov
lods
test
(bad)
(bad)
xchg
jge
pop
push
dec
xchg
imul
inc
and
dec
lods
inc
int
mov
js
cmp
dec
mov
xchg
sbb
mov
ds
jmp
cmp
jb
inc
clc
xchg
cmp
jg
popa
cld
xor
movs
pop
fstp
retf
int
add
mov
push
retf
mov
retf
fst
(bad)
pop
ret
cmp
ja
outs
xchg
xlat
rcr
hlt
push
adc
mov
ss
or
mov
jge
mov
mov
jmp
pop
mov
fst
lds
cmp
je
cdq
jge
mov
push
mov
sub
inc
add
adc
daa
push
movs
push
iret
dec
imul
call
add
pop
push
int3
inc
loop
icebp
sub
jno
pop
mov
in
jle
jne
cwde
jecxz
sbb
fdivrp
adc
loopne
jb
mov
pop
mov
dec
pop
stos
ret
pop
btr
test
adc
ret
xchg
in
xchg
add
pop
or
and
int3
call
lea
or
xor
gs
sti
ds
(bad)
das
ficom
(bad)
cli
mov
and
std
fs
push
out
loopne
js
sar
inc
adc
jo
add
or
sub
sub
sti
jle
add
pop
mov
retf
test
(bad)
mov
mov
push
jo
mov
or
js
push
cmp
das
enter
or
test
add
sbb
imul
add
push
push
mov
outs
shl
pop
jne
or
std
(bad)
ja
xor
jne
mov
and
jmp
out
add
mov
call
mov
pushf
shl
push
pop
arpl
pop
in
ret
es
popf
hlt
mov
outs
xchg
and
addr16
outs
sbb
clc
adc
sbb
in
or
xchg
cmps
sub
jae
cli
sbb
xor
fucomp
dec
mov
mov
icebp
mov
fmul
and
and
js
sub
push
mov
mov
enter
mov
mov
jle
(bad)
out
pop
fdiv
into
cmps
retf
xchg
leave
sub
sbb
iret
cmp
inc
cmp
fst
int3
and
test
pop
shr
xor
mov
or
or
and
push
ins
pop
mov
push
(bad)
js
test
mov
adc
mov
sub
mov
add
sahf
mov
cmp
sub
ss
in
retf
push
setg
jbe
pop
es
ds
pop
cmp
fs
jmp
psadbw
shl
and
dec
(bad)
mov
mov
jl
mov
mov
ror
std
add
outs
sub
adc
stos
pop
dec
jb
push
cmc
cmps
imul
push
scas
push
rcl
les
inc
jge
sbb
pusha
rcl
xor
popa
(bad)
inc
pop
call
test
stc
ins
xchg
inc
and
and
inc
pop
pop
pop
mov
jae
(bad)
adc
test
mov
pushf
xor
push
cli
bound
fstp
popa
idiv
imul
jge
neg
test
sbb
mov
mov
es
mov
shr
aad
icebp
test
jp
add
ss
popf
push
and
add
(bad)
dec
ins
fst
jmp
or
or
aaa
jmp
push
jmp
dec
xor
mov
cmp
add
or
sbb
add
mov
loope
imul
dec
and
fdivr
adc
sub
xchg
or
leave
jp
jl
jno
cmps
adc
popf
jge
js
int
stos
xor
jbe
pop
scas
sti
pop
out
xor
ret
xchg
retf
dec
push
aad
adc
and
std
jae
xchg
pushf
outs
(bad)
les
ja
pop
lahf
inc
mov
xchg
sti
outs
jns
cmp
dec
inc
idiv
in
jle
enter
in
(bad)
ror
repz
imul
(bad)
ret
or
call
add
clc
jne
aam
cdq
mov
adc
call
xchg
ror
ds
xor
or
ja
popa
adc
add
loopne
fbld
jecxz
jo
test
out
mov
sub
jp
lock
aad
lds
dec
js
jmp
mov
test
mov
mov
inc
sbb
add
inc
addr16
outs
push
das
lea
jnp
jbe
xor
sbb
dec
cld
inc
fs
ret
sbb
xchg
jmp
sub
or
out
out
sbb
push
xchg
ror
std
xchg
jo
faddp
add
(bad)
jp
xlat
sbb
pop
push
cmc
ror
jle
or
fwait
data16
out
mov
inc
hlt
fisttp
xor
(bad)
mov
push
pop
sub
inc
mov
sbb
scas
add
mov
or
cmps
jle
mov
or
mov
call
pop
sar
jmp
addr16
mov
mov
leave
xchg
xlat
unpcklps
mov
dec
hlt
dec
movs
inc
sti
out
imul
dec
pop
push
fdiv
mov
scas
inc
mov
call
pop
inc
adc
sbb
xchg
call
retf
inc
cmp
or
and
pop
mov
and
into
sbb
(bad)
or
cmps
mov
out
mov
xchg
repz
xor
cmp
mov
je
retf
pop
dec
add
mov
jge
repnz
push
in
push
lahf
cli
dec
std
sbb
loope
xor
mov
les
(bad)
mov
and
adc
push
adc
or
mov
xor
inc
out
or
ret
or
pop
push
mov
in
xlat
mov
ins
sbb
pop
test
in
cmps
push
movs
and
iret
inc
les
mov
mov
repz
bound
jb
jp
fcmovb
sub
mov
fnsave
mov
mov
data16
inc
push
addr16
push
pop
fwait
mov
inc
lahf
push
xor
icebp
and
xor
dec
add
aas
test
repz
xor
ret
inc
imul
dec
(bad)
repz
mov
into
(bad)
std
test
(bad)
ror
repnz
push
mov
aam
dec
iret
push
lock
std
or
inc
dec
push
jae
cli
fild
mov
add
cmp
pop
jno
mov
lods
mov
clc
mov
cmps
jle
mov
adc
rol
pushf
inc
test
adc
cli
ss
sbb
adc
xchg
or
in
xlat
aaa
int
and
sbb
call
jmp
fcom
fnstsw
mov
retf
test
and
push
mov
push
push
cld
icebp
aam
mov
gs
loop
xor
scas
push
in
ja
mov
psubb
dec
rcr
ret
lea
xchg
mov
add
pop
or
cmps
inc
adc
xchg
enter
xchg
dec
adc
ret
idiv
ret
dec
popf
pop
sbb
mov
aam
xor
cli
dec
mov
mov
push
add
sbb
add
sbb
dec
sbb
dec
pop
dec
mov
mov
sub
and
dec
pusha
pushf
and
lahf
sbb
shl
lock
test
pusha
dec
sub
data16
movs
out
ss
cwde
pop
test
mov
mov
dec
xchg
inc
ret
and
inc
jne
pusha
sub
adc
leave
lahf
jmp
les
iret
into
mov
inc
popa
call
xor
dec
pop
cmp
add
cmps
mov
ret
(bad)
ror
sar
add
cld
into
mov
jae
jp
outs
jmp
or
mov
std
xchg
ss
clc
(bad)
cdq
xor
pop
mov
mov
lds
jne
or
hlt
fs
sbb
jmp
inc
cs
popa
push
jo
lahf
dec
mov
aam
pop
and
in
sub
shr
jno
jmp
mov
enter
div
or
jg
leave
repz
enter
ins
fsubr
pop
aam
in
adc
aam
xor
sub
or
mov
push
sub
fs
push
mov
jmp
imul
in
push
xchg
cs
xchg
jnp
movs
(bad)
pop
aas
js
lahf
inc
stc
imul
mov
jbe
pop
mov
imul
inc
call
push
popf
xor
retf
mov
mov
jp
pandn
stc
mov
xor
mov
mov
lock
jb
clc
cmp
jne
adc
mov
dec
shl
and
or
ds
xchg
lds
cli
je
std
loop
out
in
mov
push
je
in
dec
inc
inc
inc
add
pop
pop
push
sub
jg
in
cmovge
sbb
push
cmps
sahf
mov
ss
daa
sub
retf
jnp
in
dec
pop
mov
addr16
and
jmp
scas
mov
xchg
jnp
repz
dec
icebp
fbstp
pop
sbb
mov
push
and
dec
xor
js
hlt
push
jg
stos
test
repz
add
mov
fmul
outs
push
call
hlt
inc
ror
repnz
icebp
movs
sar
int
pop
mov
mov
outs
scas
rep
rol
fmul
mul
and
or
adc
es
jne
dec
in
cmp
leave
adc
sub
test
mov
cmc
dec
xor
retf
adc
push
adc
test
cmp
and
xchg
pop
pushf
sub
aaa
adc
ja
inc
popa
pusha
adc
loopne
cld
pop
push
cmp
(bad)
shl
dec
dec
and
jge
pop
lods
dec
cmp
call
xchg
clc
jp
inc
xor
cdq
adc
retf
dec
add
mov
jo
and
xor
fs
or
ffreep
or
pop
add
xor
les
mov
imul
jae
and
les
add
xchg
aas
sub
mov
push
sub
cmp
push
mov
jmp
pop
inc
ret
scas
and
mov
add
push
call
cmp
and
mov
dec
mov
aas
add
xor
sub
es
or
push
sbb
or
scas
dec
adc
pushf
xor
adc
jmp
cs
ins
into
das
test
fcmovne
mov
or
(bad)
je
and
dec
pop
or
push
in
mov
sub
pushf
out
call
pop
or
pop
push
pop
cmc
pop
sub
push
mov
pop
mov
ret
pop
mov
jmp
push
ds
leave
pop
dec
mov
pop
movs
sub
adc
jo
add
arpl
call
mov
and
cdq
dec
lea
sti
sub
add
jp
mov
repz
push
mov
sub
repnz
sub
mul
jmp
inc
movs
adc
test
jmp
aaa
jmp
mov
mov
and
jae
lods
pop
(bad)
jae
or
xchg
xchg
lds
sbb
cs
inc
cmp
jns
aaa
adc
cmp
out
pop
mov
pop
cwde
ins
xchg
ror
mov
xlat
adc
stos
mov
xchg
and
xchg
push
out
mov
mov
jno
sti
fs
(bad)
(bad)
int3
xchg
dec
add
and
push
ins
push
aaa
or
dec
jo
jmp
out
call
mov
push
in
neg
sbb
jne
sbb
jge
cmps
and
cli
cmp
mov
pop
cs
dec
cmps
movs
in
shr
mov
jns
inc
gs
push
(bad)
lods
sti
jb
jo
xchg
in
lea
fs
inc
or
int
xor
pop
lock
ins
xchg
pushf
mov
cmp
retf
mov
add
pop
inc
shl
add
out
lahf
add
aaa
sbb
xchg
cmps
inc
sbb
xor
inc
and
out
mov
int
dec
(bad)
out
add
retf
cmps
loope
movs
xchg
stos
adc
jae
dec
jmp
movs
mov
push
in
mov
sub
ins
cmp
nop
sbb
sbb
xor
out
sbb
sbb
adc
push
fadd
jns
sub
ror
xchg
pop
cmc
rol
dec
and
call
fimul
aam
and
or
sar
inc
sub
xor
mov
or
fisubr
sbb
out
xlat
mov
push
adc
gs
sbb
in
ror
adc
or
mov
dec
dec
fs
pop
xlat
mov
out
cs
icebp
and
mov
sub
mov
add
(bad)
daa
dec
cmp
lahf
sbb
mov
fadd
xchg
sub
fmul
loope
push
xlat
(bad)
fcom
jmp
arpl
cmp
pop
repz
cmp
idiv
es
js
repnz
add
out
mov
dec
lods
inc
mov
adc
imul
add
jb
into
aam
retf
jnp
pop
sbb
push
or
stos
sbb
call
xor
inc
lods
in
cwde
push
jl
test
dec
inc
push
mov
movs
cmp
ja
addr16
sub
mov
push
jmp
retf
or
inc
and
int
stos
icebp
add
dec
call
pop
lock
push
pop
mov
je
mov
cmp
xor
or
shl
loope
into
(bad)
xor
pushf
dec
mov
jnp
loop
fidiv
pusha
pop
arpl
inc
mov
xchg
test
out
lds
pop
mov
push
add
mov
fisttp
adc
pop
jne
iret
cmp
and
mov
das
jno
cmp
push
dec
xor
call
dec
inc
imul
mov
(bad)
addr16
sbb
push
pop
jno
div
idiv
mov
ror
shr
push
jg
ret
lds
rcr
push
and
(bad)
int3
fidivr
inc
fimul
aad
mov
rcl
sub
nop
mov
sub
mov
sahf
in
push
mov
add
add
lods
in
cmp
mov
imul
jecxz
retf
retf
sub
xchg
and
xor
pop
fdivr
test
sbb
arpl
xchg
fcmovnb
mov
repnz
mov
jo
mov
dec
xchg
enter
add
pop
push
neg
push
dec
pop
mov
cmovae
fist
leave
ds
ret
cdq
sbb
push
push
pop
xor
xchg
push
mov
loop
mov
lods
sbb
pop
fprem
dec
cs
mov
add
je
xchg
int
add
dec
js
retf
scas
xchg
dec
or
scas
sub
pop
retf
outs
mov
out
xchg
in
mov
std
fisubr
push
leave
jmp
and
adc
and
xchg
dec
lods
sahf
mov
push
addr16
mov
lahf
loopne
xchg
(bad)
std
jb
shr
fmul
shr
enter
adc
sub
repz
call
sbb
jno
loop
dec
cdq
or
mov
(bad)
jecxz
fsubr
mov
push
sbb
scas
std
jmp
dec
jo
jae
scas
pushf
das
inc
sbb
cli
nop
push
add
jp
cwd
pop
jmp
dec
sbb
lods
jg
mov
movs
xor
pop
aam
jecxz
adc
or
mov
xor
(bad)
mov
enter
shr
sub
clc
xchg
xor
xor
mov
stos
mov
repnz
mov
mov
sar
mov
ror
and
repz
cs
sub
sbb
repz
adc
fidiv
cli
push
add
inc
push
push
lods
les
xor
jl
mov
jb
sub
jle
aad
cdq
sub
jecxz
dec
xor
push
loop
pop
arpl
cwde
or
in
dec
sbb
call
mov
pop
sbb
mov
jno
nop
std
in
inc
mov
sbb
popa
loope
push
add
outs
pop
dec
mov
setns
fs
dec
adc
aas
pop
and
xor
shl
inc
mov
push
out
pop
sbb
repnz
ja
push
jmp
icebp
pop
xchg
xchg
push
cmp
dec
mov
xchg
mov
jbe
cmps
xchg
ficom
and
ret
mov
sub
or
xchg
dec
adc
fsub
out
iret
mov
in
out
or
ret
lods
js
inc
or
cmps
into
test
mov
sub
pop
imul
sub
mov
jge
push
in
mov
push
sub
add
pop
pushf
mov
pop
xor
and
pop
cs
sahf
stc
lods
push
sbb
call
in
mov
xchg
jns
push
sbb
inc
inc
test
lods
div
jge
or
mov
push
pop
or
sub
stos
aaa
dec
stos
adc
scas
call
enter
popf
js
push
and
iret
into
xor
and
inc
sub
scas
ss
stos
pop
frstor
pop
adc
icebp
fadd
daa
mov
call
cmc
xor
std
out
(bad)
cmp
cmp
movs
call
movs
mov
push
aam
and
cmps
jle
sti
inc
push
pusha
mov
int3
scas
dec
mov
sbb
xchg
mov
repz
jns
call
add
std
and
mov
aas
push
mov
mov
sbb
loopne
push
lea
mov
cli
pop
mov
xor
push
ja
inc
pop
push
jg
mov
mov
cdq
loopne
les
xchg
adc
mov
pop
jno
or
or
out
popa
adc
inc
rol
mov
ins
and
push
rcl
das
fwait
lods
iret
data16
sbb
fstp
push
in
jns
xlat
xlat
or
rol
push
jae
popa
aas
loop
cmp
and
sub
stos
into
pop
jne
data16
xchg
xor
ds
cmp
inc
add
mul
xor
mov
repnz
int
ja
popa
cli
dec
push
sub
jne
push
push
mov
fdivr
mov
adc
add
pop
mov
jne
jnp
pop
fwait
jbe
popa
mov
popf
loop
mov
add
inc
ja
rol
pop
pop
cmp
in
loopne
cmp
ds
sbb
sub
xor
xchg
push
sahf
stc
cmp
ja
int3
mov
shl
cmp
pop
cmp
cmps
movs
adc
dec
and
cwde
push
xchg
jmp
pop
or
fild
fwait
jecxz
mov
and
sub
out
and
mov
sbb
add
les
movs
xor
aad
dec
(bad)
jmp
out
das
inc
and
mov
inc
xchg
and
adc
aam
nop
xchg
loopne
scas
icebp
ror
sahf
repnz
cmps
mov
loopne
daa
test
xchg
retf
mov
or
add
lods
loope
das
pop
pop
pop
xchg
stc
mov
mov
push
xchg
(bad)
push
cmc
dec
xchg
sub
xchg
sbb
dec
mov
dec
xor
mov
inc
and
jns
mov
jg
adc
outs
dec
jnp
mov
cwde
pop
jg
inc
into
inc
imul
ret
adc
cli
xchg
fstp
mov
movs
aas
adc
pop
adc
or
xchg
cmc
inc
mov
adc
push
xchg
ins
or
cmp
outs
ror
xor
imul
jl
shl
pop
imul
jb
ins
adc
scas
cmp
push
dec
(bad)
push
jmp
(bad)
adc
fnstsw
add
pop
inc
pop
mov
aaa
and
sbb
sub
xchg
ret
loop
xchg
ret
inc
sbb
xlat
stos
daa
aaa
push
xchg
(bad)
test
adc
push
out
sub
xor
loop
and
fidivr
inc
push
pop
call
repnz
pop
mov
push
pop
test
mov
xor
sahf
and
stos
mov
xchg
push
int
sbb
pop
sbb
mov
and
bound
retf
inc
rol
cmp
ins
scas
movs
adc
pusha
xchg
pop
aam
dec
fcom
jo
(bad)
mov
mov
fbstp
push
mov
xchg
js
jbe
and
push
out
inc
test
iret
test
add
adc
aaa
test
add
cli
fadd
hlt
pushf
je
jmp
sub
lods
dec
arpl
mov
cmp
add
lea
inc
xor
hlt
pop
call
cmp
add
test
call
mov
mov
data16
sub
push
pop
in
int
shl
sub
ja
loop
xchg
jb
pop
fstp
inc
fwait
loope
sub
pop
adc
mov
out
pop
cwde
enter
adc
lock
jae
arpl
inc
jae
cld
(bad)
mov
sbb
imul
ror
addr16
or
inc
aas
shr
sub
mov
or
packssdw
mov
jg
xor
dec
jae
dec
pop
jmp
fsub
or
and
cmp
or
pop
xchg
jmp
or
js
rcl
leave
push
test
sahf
jb
out
scas
sbb
out
outs
cs
(bad)
test
in
pop
pop
jge
mov
adc
lahf
pop
call
mov
and
ds
fcomi
sbb
enter
lods
push
loope
cwde
dec
jbe
mov
inc
cwde
jle
outs
mov
sbb
mov
jne
xchg
lea
cmc
hlt
fistp
jmp
push
dec
imul
cmp
jnp
jmp
jae
mov
jb
jecxz
or
mov
xchg
scas
out
ror
in
ficomp
pop
and
xchg
jnp
inc
push
aaa
cmp
sub
adc
inc
lock
loop
jp
loope
out
addr16
cmp
jmp
xor
sbb
xlat
xor
push
push
cmp
sbb
test
sub
cs
dec
and
mov
push
and
or
sbb
cmc
add
add
inc
fmul
mov
cmp
cmp
call
pop
sub
nop
jge
cmp
pop
daa
fs
je
mov
es
scas
mov
pushf
and
imul
cdq
mov
ret
es
loopne
inc
addr16
dec
sbb
outs
cld
(bad)
sub
xlat
jle
(bad)
stc
sub
jae
jmp
sub
out
stos
or
add
ret
xchg
mul
aam
jle
adc
pusha
in
dec
fdiv
(bad)
js
dec
xor
pop
test
pop
(bad)
(bad)
outs
push
or
daa
sub
fisubr
inc
add
fild
ror
mov
out
push
jbe
cmps
cmp
jmp
sbb
je
movs
pop
lods
outs
mov
pushf
xor
push
ret
mov
lea
lods
stos
cmp
push
mov
push
dec
ja
sbb
cmp
sahf
(bad)
outs
pop
cmp
jecxz
jle
mov
out
in
stos
jae
daa
mov
or
nop
dec
jge
sub
hlt
jnp
inc
stos
mov
cwde
int3
in
sbb
adc
dec
popa
ror
push
not
or
jnp
sbb
cmc
or
inc
dec
pop
jle
dec
xor
mov
lds
in
fstp
rol
and
jle
or
test
mov
add
xchg
sub
cwde
inc
cmp
sti
rcl
shl
fld
leave
pop
fincstp
movs
fimul
cmp
sti
pop
mov
jbe
jb
ja
fmul
repz
ss
clc
fimul
inc
mov
and
cld
out
lock
fcom
sub
cmp
gs
inc
mov
sbb
pop
jno
jmp
stos
and
jge
sub
sbb
adc
inc
xchg
fst
dec
pop
xchg
adc
out
mov
fild
cmps
xor
hlt
pop
dec
sbb
and
push
inc
mov
mov
adc
jp
out
fisubr
in
sbb
push
shl
scas
outs
mov
add
xchg
jl
cmc
pop
lods
scas
ffree
call
mov
aad
jmp
jge
out
adc
(bad)
xor
xor
or
xchg
loop
dec
fidivr
out
sbb
neg
shr
inc
test
iret
cmp
xchg
pop
and
push
je
in
shr
popa
mov
in
xor
mov
lods
jnp
lods
inc
mov
lahf
scas
push
add
xchg
mov
clc
gs
xor
(bad)
sub
test
mov
add
cmps
int3
jg
pop
sbb
clc
xchg
cs
addr16
cmp
pop
jbe
xor
ins
out
jle
outs
adc
push
fs
imul
jecxz
jb
in
xor
jge
shr
mov
out
lahf
dec
fs
out
lea
inc
js
mov
je
mov
dec
dec
jp
mov
sbb
mov
dec
jb
add
cmp
adc
mov
in
sbb
dec
push
jne
mov
push
push
in
iret
ret
cwde
add
cmc
inc
mov
dec
mov
ror
leave
sti
repnz
cmp
fidivr
mov
cmp
jmp
pop
mov
push
sub
lds
loopne
cmp
dec
scas
lds
outs
jb
in
jnp
mov
xchg
inc
cmp
mov
jbe
repnz
sub
cs
mov
pop
outs
lds
mov
les
xor
clc
cmp
mov
ffreep
data16
cmp
out
add
dec
das
push
daa
mov
sub
cmp
lahf
and
int3
mov
cmps
or
cmp
xor
mov
mov
test
mov
jno
jns
imul
jl
add
retf
inc
jp
call
mov
push
adc
aad
leave
fs
mov
div
arpl
xchg
xor
mov
mov
add
jno
push
sub
bnd
jecxz
pop
pop
xchg
push
mov
xor
sub
xchg
popf
pop
fcomp
lock
repnz
div
mov
stos
sti
int3
dec
xlat
and
das
add
test
push
pushf
scas
mov
retf
rol
daa
or
stc
hlt
adc
shl
sub
sbb
fwait
mov
inc
or
sbb
lds
add
add
mov
pop
iret
pop
dec
or
and
retf
stc
mov
bound
retf
and
cmp
add
ss
loop
xor
xor
in
push
loop
xor
xor
arpl
sub
pop
loope
sti
call
cmp
dec
sbb
fsqrt
dec
dec
pusha
fnstcw
scas
enter
loop
into
stos
cmp
mov
xor
out
jmp
xchg
or
mov
outs
sbb
push
cdq
repz
adc
mov
mov
sahf
cmp
hlt
push
or
or
sub
cdq
mov
or
imul
sti
push
or
mov
add
mov
push
pop
dec
xor
loop
xor
(bad)
out
cdq
pop
jno
push
call
mov
cmc
xor
mov
adc
mov
push
imul
(bad)
mov
(bad)
jns
sub
mov
retf
test
dec
pop
movs
hlt
mov
ret
cmp
cmc
fmul
rcl
jmp
adc
dec
shl
je
ja
enter
ret
push
rol
mov
(bad)
inc
mov
inc
into
adc
cmps
cmps
lock
leave
and
xchg
cmp
repz
sub
(bad)
clc
imul
push
add
and
push
mov
pop
out
outs
jp
adc
pushf
daa
dec
inc
ret
std
scas
hlt
jno
mov
cmp
inc
enter
in
or
imul
fst
inc
cwde
or
out
sub
xor
movs
fisttp
inc
adc
pop
adc
int
mov
mov
fistp
jmp
sub
cmp
shr
xor
dec
fnstenv
call
imul
hlt
(bad)
cmc
ins
mov
in
in
cmp
stc
inc
sbb
pop
repnz
mov
test
rcl
inc
loopne
cld
inc
adc
inc
and
cmp
int
cld
cli
int
ss
(bad)
xor
aam
or
movs
push
popa
ds
js
mov
mov
loopne
(bad)
sbb
pusha
rcl
inc
cmp
ret
xchg
mov
jne
ror
jmp
inc
cld
push
add
mov
mov
scas
jp
bound
or
or
outs
pop
cmp
daa
sbb
loope
dec
mov
ds
mov
xor
fld
jg
jns
jns
add
outs
(bad)
sbb
cdq
cmp
pushf
dec
fbld
cmp
aaa
mov
loope
jmp
or
mov
mov
adc
aad
ret
inc
xchg
or
sbb
fmul
push
push
cld
out
pop
inc
data16
enter
les
adc
push
jmp
call
sbb
xor
fwait
jp
cwde
ror
inc
jo
xchg
test
fisttp
mov
jecxz
mov
cmc
jb
mov
adc
mov
adc
push
push
pop
cmp
cli
dec
mov
cdq
cmp
loope
es
jle
add
das
inc
or
jmp
xchg
ds
inc
and
xor
fstp
nop
mov
js
and
popa
adc
(bad)
sbb
mov
rcr
mov
stos
pop
pop
cmp
xor
push
(bad)
cld
(bad)
mov
sub
inc
dec
adc
mov
mov
mov
cld
mov
cmp
add
stos
pop
push
enter
jl
cmp
aam
mov
mov
sbb
jbe
loopne
jno
xchg
mov
mov
and
jecxz
mov
fwait
(bad)
jmp
mov
jmp
std
jnp
ss
sar
(bad)
sti
rol
fstp
pop
test
fidiv
add
pop
cld
std
call
cmp
ja
fsub
pop
fst
and
push
mov
and
cmps
push
out
mov
xchg
mov
fs
push
mov
dec
mov
pop
mov
movs
sbb
adc
mov
jo
mov
dec
cli
push
push
int3
jg
iret
mov
cmp
adc
ja
dec
in
mov
xchg
inc
inc
gs
cmc
fiadd
aad
call
nop
dec
fdivp
adc
cmp
push
adc
sbb
hlt
mov
les
std
(bad)
(bad)
es
repz
mov
scas
jecxz
add
ds
test
inc
gs
or
or
and
mov
fisttp
cmps
pop
cdq
test
push
and
(bad)
retf
jmp
adc
loop
fdivrp
push
inc
cmovo
xchg
mov
push
xor
imul
xchg
lods
mov
or
(bad)
jmp
dec
(bad)
loope
ss
push
hlt
div
(bad)
sti
pop
mov
or
mov
loopne
sub
pushf
inc
inc
jb
xor
movs
ja
mov
inc
popf
xchg
sbb
xor
mov
lea
out
jecxz
push
pop
xor
clc
pop
push
jae
ss
(bad)
mov
xchg
pushf
and
shl
cmp
adc
push
inc
in
in
add
jbe
push
ins
and
bound
push
lock
dec
aaa
sbb
lock
sub
xchg
test
inc
add
pop
test
pop
(bad)
cs
or
imul
push
dec
pop
ret
or
mov
retf
mov
sbb
es
jmp
mov
adc
adc
fcomp
xchg
movs
sub
scas
mov
stos
inc
test
adc
rcr
mov
ja
mov
mov
fwait
pusha
or
mov
stc
sbb
and
cmp
pushf
add
repnz
push
xor
ds
sub
dec
ss
repz
mov
push
xchg
dec
aad
in
mov
jmp
and
inc
loope
pop
cmc
push
stos
gs
cmp
and
or
frstor
pop
fs
ins
dec
pop
push
pushf
adc
sar
fdivr
pushf
cdq
mov
jl
sbb
pop
mov
sbb
mov
or
sub
retf
scas
aas
pop
push
test
ror
pop
cli
sub
sbb
inc
push
ins
pop
je
fiadd
sbb
push
xor
icebp
push
fild
lahf
ds
mov
fbld
inc
cli
retf
sub
ret
stc
(bad)
mov
rol
lea
jo
cmp
mov
adc
out
or
jmp
adc
aam
and
add
pop
xor
and
cmp
cmp
test
add
mov
int3
mov
or
jb
pop
test
xor
push
(bad)
(bad)
retf
push
repnz
bound
push
sbb
mov
fistp
gs
sub
hlt
int3
cmp
xor
dec
jmp
rcr
outs
dec
mov
mov
and
mov
int
(bad)
scas
or
sub
xor
nop
out
daa
loope
in
aaa
add
ja
or
sub
push
(bad)
push
shr
pop
mov
out
and
xchg
sbb
iret
ror
pop
pop
and
retf
out
xchg
fisubr
inc
jo
mov
mov
xor
(bad)
mov
nop
retf
jmp
inc
pop
lahf
lds
les
loop
push
push
enter
sti
push
stc
sub
(bad)
sahf
sbb
add
sub
inc
dec
mov
or
mul
jno
out
adc
push
push
mov
and
shl
sub
sub
sub
pusha
adc
jbe
add
mov
xor
inc
add
scas
fwait
retf
and
outs
jle
hlt
inc
das
cmc
cmp
repnz
cmp
fs
stos
or
iret
xchg
sub
xor
arpl
jnp
cwde
outs
mov
cli
daa
in
jl
cld
popa
pop
pop
fxtract
out
mov
add
xlat
(bad)
pop
jno
into
mov
xor
push
mov
mov
pop
pusha
and
pop
leave
fdivr
xchg
(bad)
push
push
inc
push
jge
mov
cmp
mov
shl
cdq
retf
mov
jb
jne
sbb
dec
js
in
add
mov
add
dec
cmps
push
aas
jne
push
clc
int3
mov
push
(bad)
in
add
lahf
loop
push
ret
adc
enter
mov
inc
inc
sbb
sub
xlat
cld
in
enter
lods
ss
and
(bad)
lods
mov
fbstp
jne
push
sbb
xchg
cmps
out
cmp
mul
add
jno
mov
mov
leave
arpl
push
mov
push
(bad)
or
(bad)
push
cmp
sti
mov
mov
inc
(bad)
int3
retf
mov
xchg
fst
dec
and
shl
scas
test
xlat
inc
ret
loopne
push
outs
scas
movs
xor
std
faddp
pop
sbb
pop
pop
cdq
pop
rcr
lods
js
div
in
xor
fstp
in
(bad)
iret
inc
movs
and
(bad)
sub
xor
pop
pop
lds
sbb
and
xchg
mov
sbb
jo
inc
shr
cmps
add
pop
(bad)
cli
cld
sbb
mov
fistp
cld
(bad)
or
mov
cld
dec
jb
int3
loop
push
aaa
inc
out
inc
xor
movs
repz
rcl
cmp
pop
aam
lock
clc
sbb
leave
or
mov
int3
or
fadd
into
call
(bad)
fcmovnb
std
ror
(bad)
inc
mov
inc
xchg
pop
cld
add
mov
je
(bad)
jno
and
imul
ja
jnp
repnz
jno
xor
adc
std
inc
mov
fistp
and
fstp
imul
mov
jae
test
cmp
lods
icebp
icebp
outs
mov
xor
push
(bad)
js
rcr
iret
or
lds
mov
push
test
test
rcl
inc
mov
adc
add
ja
movs
les
dec
shl
push
mov
jae
scas
pop
test
fisttp
int
push
ret
arpl
aad
or
xchg
movs
push
lea
dec
jne
test
add
sahf
xadd
adc
dec
mov
or
shr
cs
adc
pop
sbb
aaa
pushf
xchg
add
mov
test
jb
jmp
mov
and
scas
(bad)
cld
faddp
xlat
jb
inc
sti
lods
aas
inc
dec
pop
and
(bad)
ins
call
ins
hlt
cmp
(bad)
in
adc
xor
loope
sbb
clc
inc
or
pop
pop
mov
sbb
and
sbb
lsl
sub
sbb
neg
ins
push
and
fistp
loope
pusha
jmp
xchg
call
and
in
sbb
xchg
add
lea
push
imul
or
mov
mov
in
mov
xchg
movs
iret
jg
mov
xor
push
ss
lods
pop
adc
ins
mov
pop
sub
jl
mov
or
fidivr
imul
in
dec
cmp
mov
xor
mov
call
inc
or
mov
push
ss
lods
xchg
lahf
loopne
jne
jecxz
lahf
int
cmp
not
jmp
(bad)
xchg
xchg
movs
outs
lock
add
cmp
outs
gs
(bad)
cmp
xchg
popa
das
dec
add
out
mov
jb
ror
rcr
push
repz
test
push
mov
test
inc
in
pop
mov
rcl
adc
sbb
mov
adc
lock
push
(bad)
xor
pop
cmc
das
pop
popf
and
jmp
push
in
ins
xor
repz
xchg
(bad)
mov
lods
jg
mov
cmp
aas
adc
dec
aam
pop
(bad)
dec
mov
(bad)
out
call
loop
xor
aam
aad
fld
mov
inc
(bad)
jmp
and
cmps
jns
ins
mov
and
cwde
dec
pop
fistp
and
clc
jmp
jmp
shl
or
ja
shr
out
cmps
inc
hlt
not
out
in
call
das
add
mov
das
fist
sbb
push
sbb
or
or
pop
cli
push
stc
sbb
and
and
jno
jle
xadd
cmp
sbb
pop
scas
imul
cmp
mov
adc
adc
cmp
jecxz
les
out
sub
fsub
mov
or
retf
lods
loop
jne
push
or
sub
fdivr
dec
fst
dec
jae
xchg
iret
dec
mov
daa
push
dec
mov
ret
ds
test
popf
nop
shr
mov
hlt
adc
(bad)
sbb
inc
jo
lods
test
xchg
cmp
xor
mov
cmp
(bad)
lods
sbb
add
adc
or
les
icebp
jmp
mov
mov
imul
mov
and
pusha
(bad)
jg
es
cdq
xchg
(bad)
jnp
mov
push
fst
xlat
xor
fsub
repnz
dec
mov
ror
das
aaa
(bad)
stc
stos
cmp
cmp
loopne
leave
pop
add
pop
push
popa
rcr
stos
test
ret
nop
aas
jbe
mov
popa
sbb
and
push
jne
call
hlt
mov
or
push
lods
xchg
das
jge
xor
xor
sub
test
int
mov
push
and
rcr
lea
jl
ror
aam
pop
push
xor
sub
inc
dec
call
jle
pop
xchg
iret
jmp
lea
mov
push
adc
(bad)
jecxz
shl
imul
icebp
scas
cmp
or
test
scas
inc
iret
xchg
out
sub
push
jae
sub
out
lods
outs
inc
test
scas
in
out
cld
sbb
sub
bswap
xlat
mov
push
(bad)
shl
les
push
sub
repz
stc
in
fstp
push
xchg
jnp
bound
or
adc
test
mov
cmps
sahf
test
dec
fcom
fld
mov
cmc
jle
mov
into
cdq
mov
repz
fwait
push
cmp
sbb
bound
out
movs
leave
and
xor
and
mov
sub
push
xchg
in
scas
aaa
stos
test
dec
rcl
or
or
xor
mov
fdivr
aas
loope
(bad)
and
shr
pop
jno
test
pop
loop
and
jne
nop
dec
(bad)
xor
xor
push
mov
xchg
je
scas
std
scas
ret
shr
(bad)
mov
das
jge
das
xchg
mov
pop
push
sub
mov
jno
mov
leave
fwait
arpl
add
mov
mov
push
jb
cmp
into
or
jo
add
dec
fisubr
shl
fld
add
mov
repz
in
jge
mov
daa
test
nop
test
popf
inc
fs
dec
into
or
inc
cmp
pop
sbb
sub
fcmovnu
add
jmp
rcr
in
dec
aad
or
add
cs
xor
out
lock
iret
xchg
adc
lods
xor
jmp
leave
mov
mov
jnp
and
pop
(bad)
adc
sahf
imul
fcom
inc
scas
push
cli
xor
add
sub
cld
aas
into
inc
es
lahf
fild
sub
das
out
xor
xchg
inc
fimul
(bad)
sub
cli
pop
outs
fucomp
pop
aam
inc
pop
out
jg
push
lahf
fnstenv
pop
movs
add
aad
pop
cmp
xchg
js
push
imul
mov
push
call
add
(bad)
cmp
sub
pop
or
daa
xor
mov
mov
loope
push
pushf
cli
and
xor
sub
jne
sbb
pop
repz
or
jb
cmp
lods
(bad)
shr
xor
mov
scas
cmp
aad
mov
or
int
pop
das
out
jmp
ds
jmp
xor
inc
jp
call
nop
jmp
pop
cmp
pop
adc
hlt
xchg
xor
cwde
mov
loopne
iret
push
(bad)
fsub
clc
mov
or
or
sub
add
cmp
push
ficomp
std
fnsave
loope
cdq
dec
addr16
fist
inc
push
in
mov
aas
and
repnz
clc
out
js
push
jmp
mov
and
aas
nop
pop
sbb
call
push
jb
jbe
test
dec
fld
mov
int3
push
mov
(bad)
cmp
lds
inc
in
int
push
imul
mov
in
sub
cmp
adc
inc
out
mov
(bad)
enter
mov
sub
outs
imul
imul
test
es
inc
inc
jnp
mov
add
pop
sub
daa
cs
dec
sub
xchg
inc
sbb
jmp
pop
ss
cmps
cmp
popf
jae
jecxz
cmp
clc
add
rcr
sub
mov
xor
jb
test
push
int3
adc
enter
and
aad
mov
cmps
frstor
cwde
mov
gs
jmp
adc
(bad)
popa
std
icebp
mov
out
call
xchg
call
es
mov
pop
dec
xchg
or
ret
shl
iret
mov
xchg
je
fld
mov
pop
ins
xor
cs
retf
pop
xor
mov
sbb
inc
in
aad
pop
pushf
adc
cdq
pop
dec
sbb
daa
xchg
adc
dec
mov
xor
je
in
adc
jne
mov
cdq
mov
(bad)
bound
lods
mov
sbb
jmp
and
adc
in
sub
test
movs
js
push
inc
pop
es
out
push
int3
adc
adc
jg
scas
jp
sbb
push
sar
push
dec
popa
fcom
xor
mov
jl
lea
jmp
dec
imul
mov
dec
cmp
push
mov
lock
(bad)
je
inc
inc
das
lock
aas
out
adc
sbb
cli
mov
(bad)
clc
inc
hlt
repnz
mov
xchg
les
inc
(bad)
cmps
add
pushf
mov
pop
icebp
imul
add
(bad)
aam
out
jmp
mov
xor
repz
lods
mov
sub
and
and
lock
add
push
cmp
fmulp
sub
ret
pop
out
mov
push
push
sar
mov
gs
scas
pushf
sbb
inc
fst
cmp
jp
xchg
test
jmp
pop
cld
push
jae
xor
scas
jns
sahf
pusha
inc
push
mov
repz
push
push
dec
nop
or
sub
ret
jmp
sbb
cmp
shl
rol
je
ret
xor
cli
sub
adc
push
mov
pop
dec
fs
into
mov
scas
in
push
xor
push
sahf
dec
dec
or
push
(bad)
frstor
out
idiv
call
xor
scas
(bad)
std
mov
adc
xchg
(bad)
sub
pop
in
fnstcw
sti
xchg
(bad)
outs
outs
ds
and
imul
cs
mov
(bad)
out
sub
mov
sti
mov
lods
dec
je
pop
xor
cmps
shr
push
hlt
ror
inc
pushw
or
mov
inc
outs
sbb
mov
scas
push
jge
jo
enter
rcl
(bad)
fild
mov
inc
jl
mov
adc
les
aam
push
add
repnz
fld
push
inc
lea
int3
sub
sbb
dec
dec
cwde
adc
jge
(bad)
adc
push
jae
pop
scas
pop
jge
fdivr
xchg
and
push
xchg
push
xchg
pop
mov
jl
int3
pop
lea
mov
lahf
test
pop
mov
cld
cmc
fidivr
and
int
mov
xor
fisttp
test
mov
aad
sub
ins
cmp
leave
dec
fwait
sbb
sbb
xor
std
adc
pusha
cmp
inc
mov
mov
adc
jo
in
inc
mov
retf
dec
xchg
add
(bad)
dec
mov
jo
mov
ins
vpminub
jle
dec
inc
jmp
xchg
ret
xchg
rcr
aas
mov
ss
ja
pop
lods
xchg
lahf
call
mov
add
mov
pop
out
add
in
sbb
mov
loop
js
jnp
sub
test
inc
jge
inc
and
scas
xlat
data16
cmp
stc
aas
outs
les
and
xchg
sub
jmp
stc
pop
leave
lock
mov
jns
mov
shl
xor
mov
(bad)
fmul
xchg
xor
and
push
aam
(bad)
push
xchg
shr
xor
mov
mov
xor
and
sub
jae
add
xchg
and
pop
in
adc
jae
popf
int
sbb
add
or
dec
cmp
ja
mov
sbb
mov
scas
cmc
loope
pop
mov
(bad)
lds
clc
lods
xor
gs
push
mov
outs
dec
mov
iret
jp
lock
push
shr
fscale
pop
ficom
or
xchg
sbb
fisubr
retf
ins
pop
mov
mov
dec
xor
mov
shl
out
loopne
out
xchg
jnp
inc
mov
push
lds
jle
sub
inc
fsub
and
shl
mov
es
or
lods
mov
sub
add
jb
mov
enter
jmp
mov
or
push
pop
xchg
repz
out
repz
push
pop
cmps
sbb
out
pop
dec
cmp
push
lock
mov
ret
aas
sbb
sub
into
adc
add
mov
xor
addr16
push
xchg
xchg
xchg
rcl
mov
shl
inc
or
mov
dec
outs
retf
in
xchg
stc
fnstcw
fsubp
(bad)
pusha
xor
push
out
mov
daa
cmp
loope
inc
dec
pusha
das
ss
add
ins
dec
test
and
xor
xor
xlat
vmptrst
mov
mov
sbb
(bad)
push
dec
data16
jne
test
push
out
inc
mov
les
xchg
lds
inc
or
outs
cli
fstp
in
scas
ret
dec
es
mov
into
sti
jns
mov
test
xchg
stos
lahf
mov
out
sub
dec
out
movs
pop
mov
lea
dec
addr16
into
push
stos
clc
gs
mov
inc
cwde
fisub
sub
xor
in
pop
and
or
lock
mov
jo
jmp
jle
cmp
dec
dec
repz
mov
rcr
popf
push
sub
mov
push
sub
mov
jo
out
adc
scas
or
push
jb
pusha
inc
add
sbb
xor
jnp
std
mov
sahf
push
push
add
jge
add
sbb
push
jbe
movs
sub
test
mov
and
and
push
fldenv
out
fcom
push
ss
(bad)
cmps
mov
push
jg
enter
xchg
(bad)
fsubr
cmp
adc
aas
mov
bound
gs
std
mov
pop
adc
icebp
and
mov
out
je
mov
mov
sub
mov
adc
jns
retf
int
add
adc
retf
jg
clc
sbb
ss
loop
jno
pop
jbe
(bad)
add
out
in
inc
add
and
mov
enter
jbe
jecxz
fucompp
add
lahf
adc
pmullw
adc
int3
sub
cld
push
mov
fisttp
aad
imul
ja
popf
rcr
adc
mov
add
loope
jne
not
cmp
push
mov
dec
mov
pop
cmp
scas
leave
mov
xchg
out
pop
mov
dec
or
cwde
ret
ins
cmp
cmp
clc
aam
fcmovnb
xchg
nop
aam
rol
sbb
sbb
fiadd
out
jmp
je
fstp
int3
add
sub
mov
push
es
xor
jbe
dec
pop
bound
leave
mov
dec
gs
ret
jne
in
retf
movs
aas
mov
pop
and
fs
sub
scas
fdivr
je
ret
dec
jbe
std
ins
das
inc
or
outs
repz
ret
sub
test
mov
jno
jae
fdivr
mov
mov
cmp
push
ss
loopne
cld
scas
in
add
and
pop
addr16
mov
dec
ss
sbb
dec
ret
movs
mov
or
jmp
popf
loope
outs
test
call
pop
iret
pushf
bnd
mov
sbb
jmp
out
or
(bad)
js
and
mov
mov
cmp
and
cmps
dec
sbb
addr16
mov
in
and
mov
jns
jnp
mov
inc
stos
cmp
lods
inc
sti
retf
wbinvd
in
adc
retf
jle
js
sbb
shr
push
or
mov
dec
scas
cwde
cwde
loopne
mov
cmps
fxch
ret
pop
or
(bad)
outs
(bad)
fwait
jg
sbb
js
daa
fild
int3
sti
cld
rol
les
xor
push
cwde
and
popf
or
repnz
jns
mov
movs
in
test
jbe
out
adc
in
sub
mov
shr
lds
xor
inc
sbb
rcl
or
or
retf
push
add
aaa
and
dec
movs
ficom
(bad)
jg
js
xchg
sar
sar
mov
test
in
cld
jle
jns
push
(bad)
in
push
loope
popf
movs
pop
mov
fnstenv
inc
lds
stos
dec
adc
adc
mov
mov
frstor
dec
inc
and
adc
shl
sbb
mov
ffreep
dec
(bad)
outs
ins
test
gs
daa
std
ja
add
ja
jbe
dec
lahf
icebp
fisubr
stos
add
jl
out
or
inc
jnp
jb
inc
loopne
adc
or
data16
imul
loop
and
xlat
inc
and
xchg
push
shl
dec
clc
inc
push
inc
movs
cmc
sub
lods
add
and
jno
mov
rcr
sbb
mov
or
mov
(bad)
cmp
mov
mov
test
push
gs
push
jns
stc
add
icebp
sbb
mov
sar
xchg
arpl
jmp
xor
mov
mov
fcom
sbb
stc
das
pop
push
setns
cdq
shr
mov
pop
xor
push
(bad)
int
frstor
jnp
dec
mov
shl
(bad)
popf
ins
iret
inc
fnstenv
(bad)
sub
jb
outs
dec
(bad)
fsubr
stc
sub
sub
iret
ret
dec
int3
adc
in
jnp
cs
(bad)
test
inc
xchg
les
inc
xchg
pushf
mov
test
jmp
add
aad
mov
pop
jne
rol
loopne
(bad)
shl
pop
lods
jmp
fsub
mov
xor
jmp
mov
pop
lods
in
arpl
sub
xchg
and
jp
push
add
test
test
push
push
out
pop
test
xor
fld
xlat
cwde
jae
inc
ret
out
sbb
das
mul
popf
inc
loope
lock
stos
cdq
and
and
cmp
mov
imul
sub
loope
mov
loop
mov
pusha
xchg
cdq
pop
and
sahf
fistp
push
(bad)
test
outs
(bad)
xchg
lds
mov
jo
xchg
mov
scas
aad
mov
out
cs
pop
push
adc
jmp
add
pop
fidiv
in
(bad)
xchg
jo
mov
lock
sbb
or
jge
mov
xor
ss
not
lods
add
mov
gs
icebp
leave
fcomi
(bad)
enter
and
and
stc
out
mov
ja
mov
adc
sbb
xor
ret
arpl
ins
aam
fdiv
jle
leave
sahf
xchg
nop
cmc
stos
test
xchg
clc
test
adc
iret
inc
sub
or
in
mov
mov
mov
outs
test
add
int
out
or
pop
cdq
jp
mov
mov
dec
xchg
inc
std
jmp
ds
jle
pop
jmp
imul
scas
xor
dec
cmps
xor
xlat
inc
int3
ins
pushf
fucomi
dec
popa
push
push
add
sbb
cli
cwde
loopne
sbb
pop
add
shl
xchg
push
jnp
mov
jno
adc
out
cmp
jo
movs
jg
mov
inc
jmp
xor
jmp
jo
inc
movs
cmp
sub
pop
xor
add
fimul
dec
cwde
sub
inc
jns
movs
jns
fs
push
fiadd
jge
xchg
adc
jnp
cmps
clc
jne
stc
outs
iret
pusha
sbb
jmp
push
mov
add
dec
dec
in
pop
jmp
or
mov
push
xor
stos
jle
movs
fstp
inc
mov
wrmsr
sub
or
ret
cmp
sub
test
jbe
cld
arpl
sti
movq
pop
(bad)
fdiv
adc
push
(bad)
fild
or
out
or
in
ret
std
xchg
lahf
hlt
and
dec
aas
push
fild
cmp
mov
leave
loope
imul
dec
push
(bad)
inc
loope
jnp
pop
sbb
xchg
(bad)
xchg
mov
pop
mov
sbb
xchg
mov
call
into
mov
mov
das
popf
mov
outs
mov
sbb
sbb
out
inc
sbb
mov
mov
test
xor
std
adc
fst
push
popf
pop
call
sbb
jl
mov
add
inc
arpl
push
add
popf
jbe
imul
or
aad
lods
imul
adc
iret
and
add
or
(bad)
call
pop
xchg
retf
int
mov
or
(bad)
repnz
jp
xchg
movs
xchg
mov
test
movs
(bad)
lea
jnp
(bad)
jo
and
ss
jae
cmp
sub
push
jnp
and
lods
movs
xchg
mul
mov
je
mov
clc
icebp
repnz
mov
or
(bad)
xchg
push
rcr
jbe
test
cmc
mov
ins
push
(bad)
fdivr
inc
dec
popf
add
(bad)
ja
jbe
push
ficomp
and
xor
rcr
mov
movs
mov
xchg
mov
inc
leave
(bad)
arpl
xchg
pop
mov
push
jle
movs
sub
jne
xchg
pushf
leave
pop
test
cli
shr
jno
out
int3
push
xchg
mov
push
or
jl
adc
adc
push
fcmove
ficomp
(bad)
push
push
ins
jg
push
mov
dec
cld
cmp
dec
lahf
add
push
fcomip
in
jo
jl
(bad)
repnz
sahf
addr16
mov
mov
push
mov
inc
std
mov
inc
sub
xlat
clc
daa
enter
rol
and
cmc
aaa
push
xchg
inc
repz
rcr
test
ins
imul
shl
pop
xchg
cwde
sti
sbb
add
or
lods
bound
push
add
mov
ins
(bad)
popf
scas
pop
retf
xor
or
movs
cmps
or
sbb
je
out
add
in
rcr
jle
icebp
rcr
sbb
leave
out
int3
mov
mov
and
cwde
xchg
mov
or
inc
test
push
out
ss
mov
rcr
in
pusha
out
cmp
(bad)
pop
mov
dec
stos
scas
imul
mov
push
stc
(bad)
cs
stos
mov
test
dec
inc
push
popa
cmovp
lahf
adc
sbb
or
mov
in
inc
push
jge
cmps
xlat
popa
fidivr
rcl
ror
dec
jmp
cmp
mov
imul
rcr
in
popa
dec
ins
xchg
repz
test
inc
inc
and
fidivr
ss
outs
popa
xchg
hlt
cmp
mov
sbb
xchg
jl
cmp
loop
iret
sub
js
lahf
cmps
xor
lods
comiss
in
popa
jmp
daa
mov
fdivr
(bad)
cmc
adc
xchg
adc
retf
std
sub
outs
(bad)
inc
inc
cmp
mov
stos
(bad)
mov
fidiv
pop
lock
repnz
mov
call
repnz
dec
or
pop
sbb
dec
mov
xlat
(bad)
push
add
xlat
pop
mov
jo
mov
dec
in
mov
cmps
inc
adc
shr
jecxz
jle
dec
(bad)
outs
les
retf
scas
dec
leave
xor
in
cmps
or
push
lahf
pop
leave
push
xor
jmp
mov
jns
daa
gs
stc
aam
ins
test
cwde
popa
jno
ds
(bad)
iret
and
outs
aas
and
js
sbb
jbe
inc
mov
jb
scas
xor
int3
add
cli
ds
les
pop
test
jno
scas
imul
cmp
ins
xor
aad
pop
adc
pop
xchg
inc
ret
loope
add
pop
and
call
ds
jmp
dec
sbb
out
sbb
pop
jp
jle
push
mov
pushf
and
ret
mov
stc
(bad)
ror
pop
jne
arpl
gs
push
cmc
dec
rcr
imul
add
imul
icebp
cmps
pop
jmp
shr
into
ret
jns
enter
sbb
gs
jb
mov
iret
fdiv
ja
imul
cmps
mov
mov
scas
sbb
clc
sub
rol
push
jecxz
jno
retf
cmp
movs
add
inc
jmp
or
lds
pop
push
jle
push
push
dec
test
test
mov
aam
retf
ins
and
adc
mov
xchg
les
das
jne
scas
jl
ins
xor
xchg
cmp
sbb
mov
jmp
and
jp
mov
xor
pop
loop
ror
popf
adc
stc
add
imul
sbb
and
aad
mov
ds
xchg
iret
add
pop
inc
mov
and
or
mov
pop
shl
fisub
cmp
sti
mov
push
mov
stos
or
or
adc
lahf
adc
jp
sub
jae
repz
outs
pop
retf
icebp
push
gs
das
(bad)
pop
std
popf
sub
repz
sbb
shl
test
push
loope
sbb
ret
push
jg
inc
push
dec
sbb
aam
jmp
outs
mov
mov
xor
shr
pop
int
dec
adc
add
add
pop
sub
stc
inc
push
call
xchg
fist
arpl
iret
pop
enter
fldenv
(bad)
cmps
mov
mov
iret
mov
xor
int
shl
mov
pop
daa
or
and
daa
inc
adc
inc
in
add
push
xor
jge
mov
xchg
and
(bad)
pop
hlt
icebp
mov
addr16
test
loope
lock
mov
inc
and
xor
(bad)
lahf
or
pop
or
adc
xor
mov
pop
pop
ss
dec
out
out
xchg
pusha
xor
jns
and
xchg
mov
fldenv
(bad)
aas
push
push
pop
adc
mov
into
loopne
in
iret
enter
aas
and
ret
mov
pop
pop
jl
fisttp
bound
ret
adc
pop
adc
call
out
inc
mov
pop
cmp
aam
stc
sub
jae
shr
and
xchg
loope
jge
jno
lock
cmps
shr
out
mov
pop
and
jmp
std
adc
jp
cwde
rol
add
pushf
and
xchg
sbb
jno
es
jae
xor
inc
or
jnp
movs
test
add
movs
sub
daa
iret
cld
call
aad
retf
push
adc
pop
in
lds
add
xor
mov
cs
fmul
mov
fs
mov
ret
cdq
lods
pop
(bad)
jle
adc
(bad)
jno
icebp
in
inc
jle
jns
xchg
jg
lock
xor
or
loope
mov
xchg
sbb
movs
push
dec
in
push
or
out
jnp
scas
mov
lock
xor
cmc
inc
cmp
mov
jb
jge
xlat
les
lock
fcomp
pop
shl
ja
mov
and
jle
aad
push
iret
scas
mov
popf
test
sub
mov
xchg
cdq
ret
mov
adc
add
pop
stc
or
aas
add
stos
mov
fmul
stos
sub
push
in
ffreep
or
int3
inc
jmp
and
ret
pop
repz
aam
xchg
jle
jmp
fnstenv
rcr
aad
leave
inc
dec
int3
cmp
push
outs
xchg
xchg
xor
out
pop
and
push
mov
test
push
(bad)
mov
add
bound
out
sti
adc
pop
xchg
dec
mov
icebp
(bad)
xlat
mov
call
cmp
pop
push
mov
fistp
sahf
mov
mov
imul
(bad)
dec
cmp
dec
inc
mov
adc
pop
stos
lods
ret
sbb
cwde
fisub
xor
xor
push
xor
sbb
retf
scas
(bad)
gs
jo
scas
icebp
es
fld
adc
mov
jp
sbb
cmps
pop
inc
cmp
mov
int
dec
ror
ja
xor
dec
pusha
clc
jno
pop
dec
adc
adc
push
jmp
call
repz
push
neg
push
fwait
sub
sahf
lahf
dec
sbb
in
enter
iret
and
lea
lods
enter
(bad)
popa
lods
cmp
dec
push
das
mov
mov
jle
lods
ds
push
dec
scas
fimul
nop
jl
push
lahf
dec
xchg
arpl
jo
mov
and
enter
outs
jbe
xchg
cmp
push
and
sahf
inc
addr16
jecxz
xlat
pop
xchg
mov
xchg
push
xchg
pop
mov
lahf
out
sbb
pop
test
jae
dec
sub
mov
jns
leave
mov
int
dec
dec
pop
mov
lds
jge
shl
cmp
inc
ins
fidiv
ffreep
dec
pushf
nop
lods
add
out
cli
inc
cmp
dec
add
jnp
popa
cs
mov
test
push
fldenv
stos
push
inc
push
pop
xor
or
scas
aad
and
xchg
add
dec
dec
and
sbb
and
or
ins
xchg
jo
inc
test
out
hlt
push
cmp
mov
ror
les
rol
retf
stos
iret
cmp
jns
icebp
add
xchg
sbb
xchg
mov
fldenv
mov
cld
push
cmps
xchg
pushf
icebp
je
(bad)
lods
sub
sbb
test
jo
dec
arpl
hlt
int3
jno
iret
leave
xchg
or
std
pop
ja
push
push
sub
xlat
mov
mov
movs
and
lock
sbb
mov
test
push
inc
jns
std
stos
mov
movs
sub
outs
and
fisubr
mov
push
push
sub
xor
in
dec
xor
lahf
add
and
test
inc
mov
add
fld
or
xor
cmps
pop
fwait
aad
jb
mov
inc
mov
mov
ds
cdq
sbb
mov
cwde
pop
je
es
popf
enter
jecxz
jle
call
fidivr
das
(bad)
sub
xor
icebp
pop
adc
fdiv
aam
rol
and
and
adc
imul
jle
sub
ss
pop
sub
(bad)
pop
out
cmp
jnp
mov
dec
push
cmp
pop
xchg
mov
adc
outs
fnstenv
cdq
and
mov
aaa
stos
push
(bad)
xor
es
mov
or
stos
das
inc
jle
inc
xchg
fsubr
test
fsub
fbstp
sub
jns
or
push
pop
push
dec
clc
cwde
int
xchg
or
sbb
sub
pop
or
int3
loope
sub
out
daa
ror
fs
fstp
xchg
sti
popa
cmp
jnp
jl
sbb
lds
int3
ja
inc
lock
mov
ins
hlt
jne
out
test
lock
stos
aas
(bad)
call
out
shr
xor
into
or
pop
jmp
movs
sbb
fcomp
xor
rol
xchg
cmp
rcl
sbb
mov
(bad)
popf
test
or
rcl
ins
(bad)
test
outs
sub
or
ret
cmp
(bad)
stos
inc
aad
sub
loop
fisub
xchg
popf
mov
adc
cld
ret
xlat
mov
icebp
jnp
sub
inc
jno
push
mov
push
std
ficomp
jae
fucomi
sbb
iret
and
push
mov
fwait
mov
pop
pop
pop
lods
idiv
mov
cmp
mov
inc
add
fwait
and
movs
(bad)
imul
dec
rol
fs
or
mov
xchg
jmp
pop
aaa
ret
fstp
cmp
sar
cmp
fs
or
adc
jp
mov
push
(bad)
ins
and
aas
(bad)
jmp
mov
sbb
add
sub
sub
xchg
inc
aas
or
xchg
in
pop
pop
push
adc
jle
call
fstp
mov
fsub
cdq
sahf
int
sub
dec
jmp
push
jmp
iret
dec
pop
dec
push
cmc
and
lods
push
fsubr
inc
pushf
adc
aas
xchg
jae
push
or
dec
dec
js
sbb
pop
stos
jge
xchg
in
inc
fistp
fbld
or
xlat
xor
ss
cmp
iret
gs
inc
fldcw
fisttp
cmovae
fwait
inc
push
int
mov
aad
cli
outs
jmp
call
loope
leave
std
cli
push
jmp
not
enter
mov
pop
popa
out
out
nop
and
je
iret
jp
fsubr
and
push
movs
mov
jb
xchg
or
movs
cs
xlat
cmp
call
mov
or
cmc
sub
cmp
pop
lds
(bad)
fistp
aam
mul
jae
xor
jmp
xchg
cli
and
jg
rol
(bad)
dec
inc
in
mov
sbb
out
clc
or
(bad)
int
jnp
inc
sub
add
out
test
(bad)
aas
jae
sbb
adc
mov
mov
pcmpgtd
hlt
sbb
loopne
movs
sbb
adc
outs
icebp
call
pusha
sti
outs
pop
into
ins
call
loopne
push
movs
out
pop
mov
ret
shl
pop
inc
jb
std
sub
push
hlt
and
in
or
inc
push
xor
and
fwait
dec
aad
fxch
add
push
xor
test
pop
inc
jecxz
sub
add
movs
sub
mov
xchg
lods
cli
jbe
stos
shr
adc
sub
addr16
pop
mov
and
fidivr
sbb
data16
cld
shl
(bad)
mov
or
or
adc
stos
fmulp
jnp
(bad)
pop
adc
push
sbb
imul
push
mov
pop
(bad)
scas
sbb
daa
lock
sub
iret
ret
cmp
push
out
sti
xchg
das
inc
imul
jp
stos
daa
not
stc
movs
mov
outs
enter
cmp
cdq
cmp
addps
adc
hlt
je
dec
xor
leave
(bad)
rcl
jmp
(bad)
mov
icebp
xor
fld
sbb
and
or
push
or
push
add
stos
(bad)
not
sub
fild
or
ficom
mov
cs
adc
xor
xor
cmps
stc
jge
lods
lods
pop
pop
jns
mov
cmp
xlat
cld
ss
inc
cmc
adc
(bad)
adc
xchg
repz
xor
inc
push
or
cli
dec
or
dec
dec
shl
call
mov
pop
shr
data16
pop
ins
mov
xor
repz
lahf
fstp
jb
mov
leave
jmp
popf
push
nop
adc
sbb
push
(bad)
arpl
in
movs
rcr
stos
xchg
cld
lea
out
add
pop
test
popf
mov
lods
jno
mov
outs
pop
pop
nop
sub
jge
jle
test
sub
pusha
mov
movs
sahf
lds
sub
push
mov
adc
jns
inc
lds
or
pop
sahf
mov
or
cmp
sbb
xlat
adc
repnz
and
in
cs
imul
mov
jmp
ss
daa
shl
mov
dec
cmp
mov
int
and
daa
adc
jge
jle
std
xchg
aam
sbb
jnp
pop
rol
imul
pop
xchg
dec
lods
iret
mov
bound
adc
stos
psllw
cmp
add
pop
jecxz
fwait
xchg
xor
mov
xchg
lea
cmp
and
mov
popf
daa
enter
(bad)
mov
ror
lods
ss
mov
pop
in
mov
xor
push
out
add
or
imul
and
test
(bad)
je
int
mov
ja
xchg
cs
sub
fwait
pop
cmp
add
aad
cmp
pop
sub
les
mov
in
pushf
je
jbe
cmp
(bad)
dec
in
cmps
pop
sub
aas
sub
outs
idiv
or
jge
mov
leave
out
mov
test
jge
jns
pop
sahf
mov
jle
(bad)
mov
fild
cmp
aad
in
pop
imul
pop
pop
imul
cmp
jle
js
cs
pushf
mov
call
popf
outs
lahf
xchg
aam
popa
inc
popa
xor
popa
and
sbb
adc
xchg
mov
push
jae
dec
aad
outs
sub
retf
inc
push
mov
dec
cmp
dec
int
pop
sub
(bad)
jne
lds
or
sbb
ins
pop
ss
jl
shl
sub
dec
mov
sbb
mov
pop
or
fsubr
add
mov
mov
add
clc
adc
push
add
shl
mov
sbb
out
jns
scas
fistp
xchg
test
sbb
lea
adc
or
pop
mov
cs
mov
addr16
jno
dec
cmp
popa
mov
icebp
lods
add
repnz
leave
pusha
xchg
mov
mov
adc
inc
cli
jge
imul
nop
mov
hlt
(bad)
out
push
or
or
sbb
dec
or
retf
sbb
gs
mov
cwde
(bad)
sub
scas
pop
sar
mov
push
rol
es
jecxz
out
fild
(bad)
mov
pop
lea
jl
stos
xchg
arpl
add
loope
sti
retf
mov
cwde
mov
inc
popf
adc
push
cmps
stos
push
push
call
mov
fnstenv
sti
or
ret
je
adc
rol
das
xchg
stc
mov
inc
shl
push
out
push
mov
cmps
inc
popf
or
test
sbb
fldenv
cmp
mov
dec
ins
fwait
outs
nop
fcomp
or
sbb
inc
jge
pop
dec
and
mov
nop
add
out
retf
movs
and
test
sbb
in
test
inc
xor
sub
addr16
xchg
jle
jbe
jg
cli
in
jb
retf
lods
push
sub
jge
xchg
push
pop
cmp
push
push
(bad)
mov
push
cmp
xor
inc
hlt
imul
stos
sbb
int
mov
pop
js
icebp
gs
sar
into
sub
or
mov
pop
sub
inc
popf
outs
js
xor
and
stos
ja
push
xchg
cmp
ja
sbb
inc
push
cmp
test
fwait
in
test
ja
loope
loop
lods
pop
mov
fdivr
test
hlt
xor
rcl
lods
loopne
sub
imul
dec
clc
push
ror
jmp
out
fst
jecxz
dec
mov
dec
aam
fidiv
pusha
call
imul
jo
lea
clc
xor
sub
xlat
test
push
dec
xchg
scas
scas
mov
nop
sub
jp
lods
mov
xor
pop
jno
loopne
sub
mov
jno
arpl
mov
out
sbb
mov
shr
jno
mov
or
push
dec
jg
xchg
or
fs
sub
dec
ret
mov
pop
int3
cwde
jb
test
hlt
xchg
xchg
mov
or
push
or
xor
add
cmps
jne
inc
or
cmp
add
fwait
mov
shl
add
pop
cmp
add
out
retf
adc
test
sub
or
push
dec
add
call
and
cdq
dec
jp
jecxz
push
std
bound
or
xor
add
sbb
clc
ins
dec
inc
(bad)
test
dec
ud2
(bad)
sbb
dec
jne
rcr
fbstp
repz
sar
xor
mov
data16
sub
xchg
idiv
ins
jmp
and
outs
jo
or
mov
fwait
and
inc
push
add
push
retf
mov
rol
mov
(bad)
cmps
cmp
iret
iret
call
fadd
fidivr
pop
sub
jbe
sub
and
mov
mov
inc
lds
je
into
xchg
ror
(bad)
mov
mov
push
fwait
push
jae
enter
rcr
pop
dec
fdiv
or
movs
sbb
out
mov
push
(bad)
pop
lock
push
mov
and
push
xchg
pop
sbb
ja
mov
les
dec
add
mov
inc
cmp
cmp
pop
mov
out
cmp
jg
lock
fstp
cmps
sti
lahf
stos
and
xor
in
sub
jmp
stos
iret
jns
add
inc
fld
jp
xchg
push
or
xor
mov
jmp
enter
adc
xor
dec
jb
sub
jno
aaa
mov
xor
push
bound
adc
loope
mov
mov
jecxz
cmp
pop
sar
js
xor
test
push
pop
call
jo
dec
or
out
cmp
mov
xlat
icebp
ror
xor
int3
call
push
lods
mov
dec
ins
jbe
stc
fidiv
xchg
mov
bound
pop
push
ret
faddp
sub
sar
test
fcmovne
pop
ret
into
dec
inc
pushf
mov
out
xchg
sbb
cmp
call
mov
cmp
xchg
mov
xchg
cmc
jmp
neg
retf
in
ins
repnz
xor
leave
out
sbb
mov
int
add
or
rcl
or
xchg
jp
xchg
xchg
dec
test
nop
mov
int
scas
popa
mov
push
and
pop
jl
icebp
ret
out
add
push
inc
lahf
test
cli
xlat
mov
movs
fadd
mov
push
ss
and
mov
ss
add
imul
pop
cmp
xchg
cwde
push
push
adc
inc
xor
xor
mov
cmps
and
js
outs
(bad)
fcom
loope
mov
mov
lods
or
xor
movs
fcom
arpl
cmc
xchg
imul
jmp
lea
sbb
pop
in
loop
inc
js
xor
add
jmp
mov
jne
mov
daa
mov
stos
pushf
dec
and
lock
mov
jns
and
dec
cmp
xchg
sub
pushf
loop
not
das
daa
mov
xchg
mov
inc
pop
xor
ins
iret
clc
mov
shl
xlat
sti
push
mov
dec
outs
xor
and
mov
mov
scas
ret
lahf
dec
sbb
mov
idiv
mov
jo
ret
loope
xchg
(bad)
ins
arpl
xchg
push
adc
inc
test
retf
jmp
sbb
cmc
(bad)
mov
ss
ins
xor
addr16
(bad)
outs
std
cmp
sti
jg
(bad)
push
xchg
cmps
jmp
test
xor
or
std
sahf
add
imul
(bad)
add
icebp
mov
jno
adc
addr16
cld
mov
leave
adc
cwde
pop
mov
cmp
stc
int3
call
pop
movs
xchg
jg
imul
lock
mov
and
mov
cmps
or
daa
inc
sub
xor
push
sub
movs
call
jg
repz
shr
push
cmp
dec
loopne
mov
(bad)
jl
cs
loop
and
fsub
mov
mov
fsubr
out
and
test
pop
imul
clc
lods
retf
test
dec
jo
sti
out
mov
and
mov
(bad)
cld
adc
xor
(bad)
out
stos
mov
push
inc
pop
outs
push
xor
cmp
push
in
or
aam
std
sub
imul
(bad)
adc
(bad)
mov
lds
into
add
mov
gs
lahf
adc
in
sub
ret
test
xchg
lock
scas
xlat
in
jg
mov
pushf
push
push
mov
jae
arpl
cmp
inc
mov
inc
mov
push
dec
jg
sub
les
dec
aas
cmp
xchg
pop
or
shl
push
in
pop
gs
out
xor
push
mov
cmps
ficom
shl
inc
sub
push
adc
stc
cwde
pop
movs
into
mov
xchg
daa
dec
inc
inc
dec
lea
sbb
int
adc
cmp
call
mov
mov
and
std
inc
test
(bad)
imul
test
scas
xor
xchg
loopne
les
jmp
jge
pop
adc
mov
dec
add
repz
jno
jmp
xchg
and
inc
push
out
pusha
xor
rol
cmp
push
xchg
mov
pop
int
inc
mov
and
add
inc
ret
loope
push
pop
inc
out
pusha
or
jle
mov
out
mov
(bad)
mov
ret
mov
and
cli
jo
enter
and
xor
mov
cli
adc
ja
or
cmp
push
in
jo
or
cwde
xor
push
bound
in
out
std
ret
lds
stos
aam
dec
inc
jl
cmp
mov
aas
adc
jl
cld
fldcw
sbb
adc
dec
sbb
icebp
dec
mov
mov
xchg
or
int3
mov
jmp
push
mov
(bad)
mov
(bad)
mov
push
push
movs
into
rcr
adc
jp
jne
pop
call
sahf
push
pushw
jmp
mov
inc
das
test
xor
dec
dec
test
mov
call
inc
shl
cld
mov
fnstsw
(bad)
adc
sti
data16
xchg
aaa
int
push
aad
out
mov
mov
sub
dec
push
pop
lods
add
into
add
and
mov
sti
in
inc
imul
cwde
pop
rcr
adc
(bad)
cwde
(bad)
mov
cmp
adc
dec
addr16
xchg
popa
shl
cmp
push
cmp
push
in
xchg
xchg
mov
call
ins
(bad)
sbb
dec
into
sbb
imul
sub
leave
mov
int
out
jno
and
movs
sbb
mov
mov
xor
retf
add
(bad)
lea
cmp
push
adc
frstor
sbb
mov
xor
rcl
push
dec
fstp
sub
add
add
sub
call
test
sub
add
pop
inc
ret
fisubr
mov
mov
or
fcom
cmp
xor
das
div
cmc
lds
adc
sbb
push
cdq
or
mov
sub
add
adc
and
xchg
rcr
lods
push
in
fs
jle
fsubr
mov
push
in
adc
shl
push
push
je
(bad)
mov
pop
push
sub
aad
jns
jo
stc
jno
stc
xor
or
dec
cli
sub
xchg
add
fs
jo
mov
test
test
lock
loope
adc
pop
in
cdq
fld
ror
cs
add
shr
jp
mov
xor
scas
sahf
mov
lahf
std
push
xchg
scas
es
nop
push
popf
enter
nop
cmps
add
sbb
pop
adc
lods
mov
pop
sub
dec
cmp
out
pushf
cmp
ss
adc
out
or
dec
jne
mov
test
mov
leave
or
imul
lahf
xor
mov
add
sbb
enter
loope
add
sbb
push
sbb
test
mov
ret
or
and
pop
mov
mov
mov
mov
mov
inc
hlt
rol
enter
jae
xlat
nop
jb
mov
sbb
push
or
(bad)
push
push
cmp
cld
repz
sahf
cmps
mov
scas
loop
ins
fsubrp
dec
mov
nop
pop
jl
out
in
fcmovb
fwait
mov
mov
fst
add
sti
mov
adc
les
cmc
ret
outs
sbb
add
popf
sbb
outs
cwde
mov
mov
push
xchg
ins
sbb
out
or
mov
or
jmp
popf
pushaw
enter
rcr
sub
fbstp
inc
jne
cmp
sbb
in
and
xlat
add
adc
pusha
aas
sub
loopne
and
mov
inc
add
jmp
mov
das
adc
mov
clc
movsx
ins
xor
mov
adc
in
(bad)
mov
pop
xor
stos
push
pop
cmp
fisubr
call
push
pop
sar
or
adc
fs
push
ins
jnp
out
mov
sti
jge
jb
dec
sub
dec
push
sub
xlat
sub
cld
scas
fisttp
inc
jge
cld
test
and
mov
xchg
aad
pop
xchg
pop
add
or
push
pop
ret
fchs
mov
fs
or
leave
or
in
shl
pop
sahf
xor
aaa
xchg
imul
cmp
aad
xor
xor
ins
push
inc
outs
mov
mov
shl
aaa
retf
and
std
stos
mov
mov
xor
xor
outs
dec
in
mov
cmc
dec
push
sub
sti
and
add
lods
or
mov
jmp
mov
xchg
loope
jbe
cli
inc
(bad)
jge
cmps
mov
inc
adc
(bad)
shr
push
push
rcl
xor
(bad)
out
jecxz
addr16
jb
addr16
into
sub
xchg
mov
scas
mov
mov
popa
loopne
jg
or
and
jmp
(bad)
fucomi
mov
jp
xchg
inc
mov
fild
add
les
dec
lock
scas
xor
pop
mov
sahf
outs
inc
pushf
jnp
sti
daa
or
dec
jno
or
jmp
adc
push
in
pop
dec
cli
out
or
sub
and
fdivr
ins
leave
fmulp
dec
repnz
inc
sbb
hlt
sub
sub
sbb
mov
lods
pop
push
push
sub
inc
loope
jp
cmp
xchg
fstp
or
hlt
xchg
mov
xchg
out
and
jecxz
ret
add
cwde
outs
cwde
ins
pop
pop
xor
add
or
ret
fmul
inc
cmp
dec
test
in
push
sbb
out
inc
pop
addr16
sbb
jo
lods
sahf
cmp
dec
xor
ds
lods
pushf
push
mov
cdq
adc
mov
xchg
xchg
adc
dec
dec
pop
mov
xor
repz
and
jbe
xchg
js
dec
jmp
xchg
cmp
aas
mov
js
dec
pop
mov
add
stos
mov
jg
xchg
push
xlat
mov
fs
dec
jecxz
jle
(bad)
retf
sbb
jmp
mov
fild
mov
cdq
mov
adc
iret
fwait
and
cmp
movs
fst
sub
xchg
or
stc
shl
dec
aam
inc
in
adc
xor
dec
in
mov
xor
jecxz
xor
sti
mov
cwde
dec
ror
ss
(bad)
pop
inc
cmovl
mov
jno
outs
inc
adc
or
mov
aaa
ret
mov
ret
scas
jae
jle
add
shl
pop
cmp
ret
sub
xchg
jle
sbb
fwait
adc
sub
fdiv
push
sub
dec
mov
mov
scas
cmps
dec
cmps
push
mov
lahf
xor
mov
fdivr
mov
ins
lea
in
test
stc
cwde
inc
xchg
imul
and
add
stc
jl
aad
(bad)
jne
pop
fstp
or
shl
aam
fwait
dec
cmps
scas
push
sbb
call
hlt
xchg
pop
cdq
daa
rol
cmps
inc
stos
call
lock
push
and
test
fist
cmp
mov
in
cmp
sub
aam
mov
(bad)
out
or
mov
arpl
ds
push
pop
add
pop
push
popa
fldcw
dec
xlat
push
sar
and
adc
imul
and
jnp
dec
cdq
fbld
scas
jl
dec
imul
imul
push
xchg
test
mov
test
daa
shl
xor
xchg
out
(bad)
xor
cdq
cdq
sbb
call
cdq
xchg
sub
dec
xchg
xchg
dec
push
jecxz
sub
fucomp
fnstsw
shr
xchg
mov
daa
data16
jno
jmp
mov
pop
daa
mov
lahf
dec
or
xchg
pop
fisubr
adc
mov
pop
pop
scas
add
fst
out
inc
push
sbb
mov
aam
push
(bad)
fisttp
test
sub
and
sub
sahf
in
out
and
pop
inc
push
ror
adc
lods
inc
hlt
cmp
add
(bad)
adc
pop
pop
fcmovnbe
mov
xchg
sti
mov
arpl
jge
mov
test
sub
dec
jmp
and
mov
test
inc
mov
mov
test
rcl
xchg
(bad)
cmp
es
xor
mov
sbb
mov
pop
leave
push
rcl
add
pop
mov
ins
loopne
inc
cld
in
mov
sub
rcr
test
sbb
dec
into
or
mov
xchg
jns
jge
push
mov
aas
dec
loopne
cmc
outs
jae
jge
jge
sbb
ret
(bad)
xor
lods
pop
mov
rcr
in
mov
dec
retf
scas
cmc
add
pop
loopne
(bad)
repnz
in
sar
movs
cmp
pop
mov
sti
dec
jecxz
sub
dec
sub
stos
stos
inc
push
xchg
sub
jmp
and
out
adc
sbb
div
aas
stos
iret
loope
aad
push
pop
js
inc
inc
outs
dec
pushf
shr
pop
mov
ja
xchg
lds
and
cli
in
fild
sub
inc
in
stos
ja
test
(bad)
adc
(bad)
retf
fstp
ret
or
lahf
and
add
inc
inc
out
mov
rcr
loope
rcl
pop
mov
pop
mov
popf
in
push
jmp
pusha
mov
jle
inc
ins
sahf
xor
test
outs
call
pop
jge
xchg
and
mov
push
call
dec
int
pop
(bad)
fsubr
jno
add
out
mov
(bad)
fst
enter
mov
mov
xchg
xor
add
test
cwde
xchg
ret
imul
popa
shl
imul
xor
jmp
cmc
fwait
cmp
imul
pop
clc
test
push
add
inc
lea
(bad)
std
hlt
cmp
xchg
repz
cmp
fild
cmps
mov
mov
retf
add
popa
and
loopne
xor
rcr
outs
jo
dec
mov
jecxz
dec
repnz
xor
dec
pop
cmp
xchg
mov
cld
mov
cmp
inc
mov
int
sbb
or
int
adc
and
ret
mov
push
mov
mov
bound
xchg
ret
pop
pop
or
pop
xchg
xchg
pop
jl
xchg
or
and
cli
(bad)
xchg
pop
mov
aad
pop
outs
pop
sar
outs
mov
pop
retf
xor
dec
jb
xchg
inc
repnz
adc
mov
push
cmp
(bad)
adc
mov
jmp
mov
inc
xor
mov
mov
or
outs
dec
scas
cli
(bad)
out
(bad)
lahf
movs
or
fs
dec
jbe
mov
retf
add
mov
dec
test
and
pusha
popa
sub
mov
scas
xor
mov
pop
cmps
and
lock
je
es
mov
push
(bad)
loopne
sub
loope
retf
aad
or
jmp
call
mov
mov
mov
and
dec
dec
pop
pop
adc
mov
sub
dec
mul
mov
mov
or
jmp
pop
dec
shr
fnstsw
stc
(bad)
ja
push
push
(bad)
movs
jmp
cmps
imul
dec
out
movs
data16
data16
xchg
or
jno
fistp
xor
sbb
popf
and
push
mov
(bad)
imul
call
cmps
xlat
arpl
xor
sahf
add
scas
jmp
pop
sub
mov
sbb
pop
or
sbb
repz
adc
leave
or
std
ret
or
scas
mov
pop
inc
lahf
add
lahf
cdq
inc
test
jmp
mov
jmp
xchg
adc
std
sbb
xchg
mov
(bad)
mov
adc
mov
int
mov
push
test
cdq
rol
push
shr
jb
shr
ficom
jmp
xchg
jns
sub
mov
or
sbb
sbb
push
fld
mov
shr
jns
(bad)
sub
or
jb
push
mov
sbb
mov
mov
pop
pop
cmp
in
outs
sbb
data16
loope
and
add
seto
adc
dec
data16
mov
leave
inc
retf
bound
xchg
in
add
adc
xor
(bad)
sub
mov
or
inc
lods
xchg
sub
inc
jmp
shr
cdq
mov
inc
xor
movs
xchg
(bad)
rcr
dec
fldcw
icebp
or
fst
add
mov
xor
inc
mov
sbb
mov
(bad)
rcr
cmp
sbb
cmc
jo
sub
movs
sbb
add
cmp
cmc
out
adc
jns
dec
xchg
(bad)
aaa
jb
arpl
call
push
cs
or
dec
nop
(bad)
arpl
xchg
test
nop
loop
mov
stos
or
stos
mov
pushf
push
int3
int
(bad)
pop
or
add
aaa
xor
dec
adc
popf
pop
inc
push
int
sub
loopne
xor
imul
mov
sub
mov
adc
mov
les
mov
sbb
xor
jecxz
inc
inc
imul
cmp
or
pop
int
inc
adc
push
test
inc
adc
xor
jg
jne
mov
pop
out
mov
(bad)
cmp
add
push
cdq
mov
pushf
repz
xchg
bound
sbb
fimul
aaa
ja
popa
mov
shl
mov
sbb
push
jl
adc
pusha
(bad)
in
int
sahf
xor
push
jge
test
sbb
and
pop
gs
sbb
mov
sbb
add
js
(bad)
cmp
shr
and
push
cmp
jo
dec
arpl
or
mov
add
std
or
outs
mov
inc
pop
or
push
pop
and
in
xchg
lods
mov
lds
jnp
mov
xchg
mov
sub
pop
repz
dec
adc
sahf
movs
push
cmc
fucomi
xchg
or
gs
(bad)
std
dec
inc
dec
loopne
data16
aad
out
or
sbb
mov
cmp
mov
push
mov
xchg
sub
push
mov
xchg
jo
jmp
and
xchg
into
sbb
add
jnp
out
push
lea
je
pop
push
jns
cdq
jmp
cwde
cld
lea
or
jae
sti
test
scas
jecxz
mov
addr16
push
adc
fxch
or
adc
repnz
cmps
pop
jmp
mov
addr16
and
and
jg
cdq
in
push
into
loop
inc
mov
gs
add
je
mov
cmp
jl
mov
lahf
mov
inc
sbb
push
mov
nop
mov
xor
dec
mov
lods
shl
sbb
retf
jnp
movs
shr
(bad)
xor
test
ins
lock
cmps
ret
and
or
and
xchg
sbb
cmp
aad
dec
xor
dec
hlt
ror
dec
and
je
pop
enter
add
push
jnp
fwait
test
cli
rcr
jns
push
jg
test
lods
pop
mov
push
xor
jle
inc
retf
scas
(bad)
push
sub
out
pop
loop
sub
jle
shr
fcmovb
fst
out
and
(bad)
fiadd
mov
or
mov
daa
add
imul
stos
out
ss
test
cs
(bad)
in
and
bound
leave
call
fadd
sub
movs
pop
movs
das
sti
sub
jne
jmp
fcomip
adc
mov
xor
or
ins
in
pop
fistp
out
xor
mov
cmp
test
loopne
and
lea
mov
lahf
mov
xchg
dec
repnz
jnp
cwde
daa
enter
adc
adc
lea
add
pushf
repz
xchg
push
adc
int3
jo
mov
push
add
dec
ss
push
or
xor
test
xchg
scas
mov
mov
dec
shl
jno
rol
fwait
imul
test
adc
mov
es
xchg
pop
fst
cmps
call
add
xchg
jae
xchg
ja
fsub
les
pop
xor
add
mov
xor
imul
aam
jo
fisttp
mov
lods
js
rol
pop
outs
xchg
add
les
js
mov
mov
(bad)
scas
adc
in
pusha
out
(bad)
cmp
mov
and
icebp
pop
pop
arpl
retf
pop
cmp
sbb
outs
pop
test
pop
(bad)
bound
adc
push
inc
mov
adc
faddp
lea
cmp
rol
add
into
dec
popa
iret
jae
mov
(bad)
mov
(bad)
hlt
pop
imul
xchg
shl
mov
and
jge
aaa
jo
push
mov
mov
mov
ds
or
ficom
retf
mov
inc
sub
sti
bound
push
out
popf
adc
in
xchg
xlat
cmps
aaa
in
and
mov
fimul
add
pop
and
lods
mov
cld
cmp
stc
mov
in
push
fsub
dec
adc
add
xchg
stc
int3
xchg
mov
push
loopne
and
jecxz
mov
dec
cmp
mov
push
or
mov
(bad)
xor
jle
xor
xor
cmp
mov
fisttp
or
paddsw
xor
inc
call
cld
sub
fs
or
adc
lock
in
js
push
add
loope
pop
inc
push
cmps
out
neg
mov
loopne
sub
or
or
xchg
cwde
and
adc
adc
cmp
dec
in
dec
mov
jno
cs
push
cmps
pop
push
fwait
adc
xchg
int3
jmp
pop
movs
cwde
in
pop
test
xchg
sub
mov
xlat
(bad)
cmp
(bad)
jl
pop
inc
mov
stos
hlt
mov
out
aas
adc
cdq
inc
ins
iret
xor
(bad)
xor
sub
jecxz
aam
xchg
test
sbb
imul
movs
inc
jmp
cwde
stos
ss
adc
sub
int3
jb
icebp
(bad)
mov
iret
outs
or
or
popf
lea
push
es
sub
ss
add
add
pop
gs
loopne
push
retf
cld
sahf
cmp
xchg
inc
push
push
and
(bad)
push
push
xchg
mov
dec
sbb
cli
mov
dec
fbld
pop
out
cmp
add
test
add
repnz
pop
rcl
xchg
sbb
jle
pop
in
(bad)
mov
dec
xchg
adc
ror
mov
aam
mov
sbb
fcomp
jnp
and
mov
push
cmps
mov
mov
jge
and
ja
sbb
ja
mov
into
mov
call
int3
fmul
pusha
or
or
inc
(bad)
fnstenv
iret
adc
mov
into
ss
test
(bad)
aaa
jbe
adc
mov
daa
fcom
push
xchg
xchg
and
(bad)
fstp
pop
leave
jmp
(bad)
push
mov
out
sbb
shl
sub
sbb
push
rol
es
mov
sub
into
repnz
cwde
dec
add
jno
push
push
retf
fwait
pop
sbb
adc
mov
or
push
pop
and
xlat
stc
(bad)
mov
les
sub
dec
imul
jle
bswap
pop
pop
movs
(bad)
jp
rcr
aaa
mov
lds
lds
sub
shl
(bad)
dec
mov
push
xor
mov
aaa
clc
popf
sbb
rol
(bad)
cmps
mov
jl
jnp
out
jle
scas
jg
lds
xor
out
jp
xchg
cli
frstor
sbb
out
js
outs
jmp
mov
nop
fnsave
fstp
shr
jo
pop
ficom
(bad)
sub
sbb
and
das
sub
add
pop
push
int
lods
lock
inc
add
pop
arpl
in
das
lea
mov
cmps
cmp
data16
inc
adc
arpl
and
pop
push
rcl
add
and
jg
and
and
jae
and
mov
and
pop
pop
add
das
sub
int
mov
jecxz
or
jo
inc
(bad)
call
cs
jg
cmp
pusha
mov
ins
xor
dec
fisub
in
ror
inc
out
shl
jo
dec
jp
inc
in
retf
es
cmp
out
xchg
xor
and
outs
sbb
shl
push
dec
outs
jge
cli
std
dec
jnp
push
inc
arpl
test
push
pop
xchg
sub
add
outs
ror
arpl
pop
les
mov
dec
cwde
pop
xchg
sbb
retf
xchg
jg
repnz
retf
dec
and
mov
mov
in
call
leave
xchg
dec
fcom
cld
retf
popa
jne
mov
cli
imul
pop
stos
cmc
adc
adc
hlt
hlt
and
and
ret
sub
dec
or
push
cmp
mov
(bad)
and
mov
xchg
js
ret
loope
cmc
test
(bad)
stos
mov
mov
gs
fisttp
js
ror
lds
iret
cs
push
xchg
xchg
inc
(bad)
cmps
mov
inc
clc
mov
loop
rol
stos
test
dec
int3
inc
fisubr
xor
ins
push
int3
dec
shr
adc
stos
call
bound
xlat
ror
push
push
sahf
push
adc
test
push
or
lea
sbb
dec
aaa
and
mov
jmp
push
aas
adc
ret
mov
cmp
add
in
pop
sub
nop
jae
push
xchg
add
add
push
in
jge
les
stos
test
xor
push
add
in
adc
bnd
(bad)
jmp
repz
push
popa
xor
mov
rol
adc
sbb
dec
inc
xor
scas
inc
clc
mov
scas
ror
addr16
push
mov
(bad)
pop
sbb
cmp
push
fld
mov
popa
dec
imul
cmp
jp
xlat
into
xor
sti
mov
out
out
lock
hlt
jge
inc
movs
cmps
sub
std
test
fcom
and
mov
fisub
icebp
mov
sub
dec
das
push
jae
sbb
mov
cdq
fdiv
(bad)
out
int
adc
