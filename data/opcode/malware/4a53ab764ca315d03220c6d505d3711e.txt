mov
jge
pop
data16
pop
bound
xor
sar
bound
dec
xor
mov
inc
imul
and
loopne
jns
pop
bound
cmp
jmp
and
xchg
adc
loope
or
pop
imul
imul
pop
xor
jge
push
xchg
push
jmp
jns
fld
gs
mov
das
ins
dec
or
pop
or
sub
xchg
mov
inc
pop
bound
inc
cmp
xlat
inc
mov
cli
xlat
pop
xor
ins
dec
jmp
jno
xchg
sar
cmp
bound
cmp
ins
cld
xchg
bound
pop
call
mov
out
cmp
xchg
and
inc
pop
loope
les
out
cmp
(bad)
hlt
aaa
imul
or
push
psubsw
xchg
(bad)
cmp
sub
xchg
pusha
fimul
scas
and
pop
data16
scas
and
dec
xor
das
pop
bound
and
jns
jmp
jns
mov
and
and
jns
cmp
gs
idiv
inc
cmp
adc
dec
aaa
sbb
fs
shl
cmps
jge
je
das
push
loopne
mov
mov
in
bnd
popf
sub
xor
in
nop
pop
loopne
xchg
fisttp
imul
popf
xchg
fsub
mov
jb
pop
bound
xor
loope
cmp
loope
xor
mov
mov
cmp
bound
jne
xchg
push
arpl
mov
push
sar
bound
cmp
add
sub
jns
mov
inc
pop
(bad)
cli
call
popf
dec
sub
push
jns
pushf
cmps
jge
push
bound
inc
cmp
and
pushf
pop
push
mov
jns
sbb
js
pop
bound
jns
or
(bad)
cmp
cmp
bound
enter
pop
bound
xchg
xchg
les
leave
jns
or
sub
sub
inc
jns
pop
(bad)
cli
xlat
rdtsc
das
ins
xchg
pop
xchg
imul
pop
pop
sahf
outs
pop
cmp
push
pop
pushf
cmps
jge
pop
or
aaa
sar
cmp
leave
jns
or
pop
bound
les
dec
leave
jns
popf
dec
pop
scas
and
sub
jns
jmp
das
scas
and
outs
adc
cmp
xor
dec
mov
inc
pop
bound
cmp
bound
add
js
test
das
ins
mov
jmp
int3
clc
jmp
retf
lods
pushf
xchg
pop
or
pop
or
pop
bound
ja
jmp
inc
pop
(bad)
lock
cmps
pop
pop
cmp
xchg
sahf
mov
mov
(bad)
mov
aas
mov
hlt
mov
dec
or
push
(bad)
hlt
mov
dec
xor
mov
pop
xor
or
or
pop
cmp
xchg
out
ret
lods
pushf
xchg
inc
js
pop
loope
aaa
and
jl
fbld
xchg
daa
pushf
movs
push
cmp
test
mov
xchg
movs
inc
mov
rol
sti
inc
cmp
repnz
lock
das
ins
mov
jecxz
pop
jns
jns
pop
call
pop
or
adc
cmp
adc
loopne
jne
push
xchg
xchg
jns
(bad)
mov
xor
push
jge
fisttp
xchg
popf
or
jne
xchg
popf
or
mul
mov
mov
jmp
mov
bound
jnp
pop
bound
arpl
bound
pop
cmp
lock
sbb
sbb
(bad)
bound
clc
jmp
ret
xchg
movs
hlt
jle
xor
and
pusha
jns
pop
popf
or
loopne
jno
dec
sbb
xchg
movs
jo
imul
hlt
push
xchg
popf
or
loopne
gs
pop
popf
or
loopne
test
pop
sbb
xchg
movs
xchg
mov
pop
bound
imul
hlt
ins
dec
sti
pop
mov
out
sahf
mov
xchg
lock
inc
cmp
clc
dec
jmp
mov
dec
jmp
or
pop
call
out
jl
stos
and
jp
jns
jp
jns
jb
mov
stc
push
mov
jl
stos
and
loopne
cmp
ret
xchg
aaa
jno
mov
jbe
add
pop
js
xchg
xchg
cli
repz
stc
pop
push
bound
mov
lea
jmp
jl
pop
sahf
xchg
add
pop
and
ret
xchg
daa
mov
out
loope
les
inc
cmp
pop
add
adc
les
bnd
jmp
mov
and
dec
out
cmp
adc
add
loopne
rol
bound
inc
cmp
or
js
neg
cmp
xor
ins
xchg
pop
jne
inc
jb
mov
sub
inc
xchg
out
(bad)
stc
mov
xchg
loopne
or
jle
jmp
mov
and
dec
out
mov
cmp
popf
xchg
hlt
sub
int3
hlt
jo
ret
ss
repnz
pop
call
jl
pop
popf
xchg
add
(bad)
mov
xchg
out
(bad)
sahf
out
xchg
xchg
out
(bad)
mov
xchg
mov
jl
pop
popf
xchg
xchg
out
cmp
popf
es
stos
mov
xlat
or
das
ins
xchg
aas
jne
pop
sahf
fadd
arpl
jmp
bound
jp
lock
jmp
(bad)
cs
xchg
sbb
pop
jmp
xor
rdpmc
lock
call
mov
lock
jmp
mov
sub
in
mov
jle
movs
jge
pop
jmp
lea
jmp
cmp
xchg
daa
test
mov
dec
jmp
push
xor
ins
xchg
aas
jne
pop
sahf
dec
adc
sub
mov
(bad)
cs
xchg
sbb
pop
jmp
xor
rdpmc
lock
call
mov
lock
jmp
mov
sub
in
mov
loop
bound
jp
lock
jmp
(bad)
loopne
or
jle
movs
jge
pop
cmp
sub
cli
xor
ins
dec
jmp
ins
cld
pop
sahf
std
add
and
jle
jmp
or
jmp
(bad)
loopne
or
int3
hlt
jle
jle
ins
(bad)
aas
daa
jmp
adc
jmp
ins
sub
mov
ds
inc
in
cmp
jecxz
cmp
push
mov
clc
dec
jmp
push
xor
ins
xchg
pop
jno
retf
push
call
ret
xchg
movs
xchg
imul
cmp
pop
jne
inc
cmp
dec
mov
(bad)
loopne
lock
jmp
adc
and
not
(bad)
loopne
repnz
sub
add
call
jmp
fs
cmp
push
xor
ins
xchg
aas
jne
xchg
jl
jnp
call
sahf
mov
sahf
lock
loopne
jno
xor
jns
xchg
movs
adc
jne
adc
add
push
jne
adc
test
mov
xchg
daa
xor
inc
cmp
push
xor
mov
push
dec
sub
and
pop
loope
cmps
mov
imul
imul
aas
loopne
jge
pop
popf
sub
xchg
xchg
pop
jmp
int3
clc
jmp
(bad)
xchg
movs
xchg
loop
bound
inc
cmp
mov
dec
jmp
inc
mov
jmp
adc
jmp
mov
sbb
cmp
ror
pop
out
cmp
dec
or
pop
bound
mov
jmp
cmp
jmp
or
imul
repz
(bad)
and
sbb
jns
pop
xchg
sub
dec
adc
xchg
mov
jbe
fucomip
cmp
push
mov
cli
sti
sbb
adc
sbb
ins
cs
bound
xchg
mov
jns
mov
mov
sti
push
dec
sti
pop
mov
out
xor
mov
mov
pop
pop
arpl
stos
adc
dec
xor
adc
push
jecxz
mov
cmp
loopne
jns
imul
addr16
cmp
pop
ret
add
adc
repz
bound
pop
outs
fiadd
and
fsub
cmp
loope
cmps
mov
jp
cmps
mov
push
xchg
jecxz
mov
bound
cmp
fidivr
bound
(bad)
loopne
jns
call
dec
adc
adc
ja
cdq
jns
out
cld
(bad)
pushf
xchg
dec
add
loope
aaa
and
jne
cmp
fidivr
bound
mov
pop
jecxz
das
dec
bound
pop
xchg
sub
sbb
repnz
xor
cli
inc
jmp
jbe
sub
jns
pushf
pop
test
adc
push
cmp
(bad)
cli
pop
out
clc
push
arpl
cmp
loopne
jns
imul
call
popf
xchg
xchg
mov
cmp
xchg
daa
lea
sbb
int
pop
adc
mov
pop
(bad)
fadd
and
pop
call
jne
xchg
(bad)
ins
bound
xchg
mov
pop
cld
pop
cmp
daa
xor
pop
xchg
sub
por
cmp
(bad)
repnz
pop
jmp
inc
les
lock
jmp
int3
cld
jmp
jecxz
pushf
xchg
pop
pop
sub
add
cmp
cwde
jns
jmp
inc
les
pop
jns
pop
(bad)
lock
imul
(bad)
jmp
mov
mov
fsub
xchg
pop
xchg
daa
test
fist
ins
cld
sbb
int
pop
popf
xchg
pop
jmp
movs
(bad)
add
xchg
clc
adc
(bad)
cli
push
add
cmp
push
jb
add
cmp
dec
les
xchg
jmp
xor
and
cmps
and
pop
xchg
call
jmp
fs
cmp
mov
dec
fnsave
out
push
jns
cs
lock
popw
(bad)
cli
pop
jecxz
bnd
loop
or
ins
cld
stos
pop
bound
les
ins
cld
pop
sahf
js
pop
(bad)
lock
fcom
mov
mov
dec
mov
dec
inc
jmp
jp
and
xor
push
or
cmp
js
ja
fstp
mov
pop
(bad)
cli
call
jmp
int3
clc
jmp
ret
xchg
movs
mov
cmp
mov
int3
loopne
jo
imul
jecxz
cli
inc
jecxz
or
jns
rcr
xchg
call
jecxz
dec
loopne
call
fmul
jge
in
pop
jnp
or
dec
pop
es
jge
jp
jns
out
xor
pop
ins
cld
or
popf
xchg
bound
or
ja
loopne
pop
mov
inc
sahf
movs
jmp
pop
bound
cmp
adc
jne
adc
ja
jns
pop
or
pop
bound
mov
call
dec
mov
pop
(bad)
mov
mov
out
mov
iret
dec
xor
ret
neg
jns
pop
xchg
sub
or
dec
out
adc
lock
call
jmp
xchg
mov
gs
stos
mov
xchg
pop
pusha
jns
cmp
jns
dec
xor
cmp
and
ror
cmp
xchg
call
jmp
mov
pop
movs
cld
(bad)
loopne
xchg
ja
cdq
jns
mov
push
pop
(bad)
lock
xchg
out
(bad)
shr
xchg
inc
imul
pop
jmp
or
jmp
push
pop
mov
pop
bound
mov
scas
xchg
loopne
mov
les
out
cld
jmp
pushf
xchg
mov
aaa
pushf
pop
in
pop
bound
aad
and
fcom
popf
lock
xchg
out
(bad)
call
inc
les
lock
imul
cld
jmp
xchg
loopne
xchg
loopne
xchg
add
fneni(8087
pushf
xchg
pop
xchg
and
cmp
jmp
(bad)
push
mov
jns
sahf
mov
hlt
mov
dec
ret
in
pop
bound
mov
popf
cs
xchg
daa
test
fild
cmp
bound
dec
ret
loopne
mov
ret
xchg
pop
jmp
ret
loopne
xchg
loopne
sub
jecxz
mov
mov
add
cmp
inc
les
lock
imul
pop
add
xchg
ins
std
mov
bound
mov
bound
and
jne
adc
and
call
sahf
jmp
outs
lock
jns
les
fsub
inc
cmp
ins
into
mov
and
std
add
out
(bad)
imul
sub
ret
neg
mov
popf
loopne
xchg
sbb
fwait
pop
bound
mov
(bad)
cli
push
jae
cmp
pop
ins
cld
clc
push
bound
fdiv
js
retf
cmp
fnstcw
mov
loopne
cli
call
pop
xchg
pop
bound
cmc
jmp
jns
mov
xor
xchg
loopne
jns
adc
pushf
xchg
pop
bound
push
or
imul
xchg
pushf
cmps
jne
loopne
jns
imul
ja
cdq
jns
out
(bad)
(bad)
loopne
xchg
mov
loopne
mov
cmp
push
jae
call
cmp
or
mov
cmp
ja
fnstcw
mov
into
loopne
cli
call
pop
xchg
pop
bound
cmp
jns
mov
xor
xchg
loopne
jns
adc
pushf
xchg
pop
bound
push
or
fistp
adc
and
jnp
xchg
pushf
cmps
jne
loopne
jns
imul
ja
cdq
jns
out
(bad)
(bad)
loopne
xchg
mov
loopne
mov
cmp
push
jae
call
cmp
jmp
int3
cld
jmp
fwait
loopne
xchg
mov
fnstcw
mov
loopne
cli
call
pop
xchg
pop
bound
(bad)
cmp
bound
cmp
cdq
jns
or
fwait
pop
bound
mov
loopne
jns
adc
pushf
xchg
pop
bound
push
or
fistp
adc
and
rcl
jne
loopne
jns
imul
cmp
cdq
jns
out
(bad)
(bad)
loopne
xchg
(bad)
(bad)
loopne
mov
cmp
pop
fs
push
or
fistp
hlt
xchg
popf
xchg
dec
mov
iret
loopne
cli
call
pop
xchg
pop
bound
(bad)
cmp
(bad)
clc
enter
cmp
jns
or
cmp
popf
sub
mov
xchg
inc
mov
sbb
int
pop
arpl
outs
mov
(bad)
cmp
xchg
mov
mov
les
mov
pop
(bad)
clc
enter
cmp
popf
sub
loopne
repnz
xor
jo
adc
mov
pop
(bad)
hlt
mov
dec
jmp
xchg
pop
xchg
cmp
xchg
mov
cli
inc
jecxz
jbe
fisub
cmp
jns
in
enter
loope
jmp
pushf
xchg
pushf
ffreep
(bad)
xor
xlat
jns
pop
jecxz
adc
jns
fsub
loope
loope
outs
cmp
out
(bad)
cmp
(bad)
hlt
mov
dec
out
cld
mov
xchg
out
(bad)
mov
popf
das
daa
xchg
mov
std
(bad)
clc
xchg
out
(bad)
push
pop
jmp
mov
popf
ins
push
pop
bound
xchg
daa
test
fild
add
call
mov
dec
jmp
jns
pop
jmp
(bad)
xchg
mov
cli
inc
jecxz
jbe
pop
data16
xchg
out
(bad)
mov
mov
(bad)
repnz
xor
jo
adc
mov
pop
(bad)
clc
enter
cmp
dec
hlt
mov
dec
jmp
xchg
pop
xchg
cmp
cmps
inc
sbb
pop
xchg
call
jmp
mov
call
fnstsw
pushf
xchg
out
(bad)
mov
popf
cs
xchg
daa
test
fsub
add
pop
ins
cld
pop
sbb
jns
hlt
adc
retf
loopne
xchg
loopne
add
mov
lahf
xchg
loopne
xchg
or
jns
fld
sahf
repz
xchg
pop
mov
pop
bound
cmp
mov
cmp
jecxz
repz
bound
stos
mov
(bad)
loopne
xchg
pop
cdq
jns
out
cld
(bad)
loopne
xchg
pop
adc
das
xchg
mov
pop
cld
call
mov
mov
stos
loopne
xchg
loopne
hlt
mov
mov
clc
fstp
pop
bound
(bad)
xlat
por
cmp
(bad)
repnz
popf
xchg
dec
jmp
lock
imul
pop
loope
lahf
loopne
xchg
sahf
mov
hlt
mov
dec
or
ficomp
repnz
dec
jmp
jns
pop
(bad)
lock
imul
pop
jecxz
jne
bound
call
mov
dec
jmp
lock
imul
pop
loope
xchg
loopne
xchg
test
shl
or
inc
jmp
or
jmp
pop
fsub
or
loope
jnp
xchg
out
(bad)
mov
xchg
out
(bad)
mov
adc
sub
bound
mov
pushf
xchg
cmps
data16
pop
xchg
fdiv
loopne
repnz
xor
ror
jns
cld
jmp
addr16
xchg
pop
ins
cld
pop
push
bound
mov
(bad)
hlt
mov
dec
or
ficomp
repnz
dec
jmp
jns
pop
(bad)
lock
imul
pop
loope
mov
adc
jo
pop
(bad)
hlt
mov
dec
or
stos
xchg
xchg
loopne
cld
mov
xchg
pop
xchg
cmp
xchg
mov
cli
inc
jecxz
jbe
les
cmp
les
pushf
xchg
adc
mov
pop
(bad)
cli
xchg
xchg
pop
ins
std
sti
pop
bound
call
mov
xchg
neg
mov
mov
cmp
popf
adc
aas
xchg
loopne
jbe
nop
bound
fsub
mov
loope
js
pop
bound
aas
loopne
rol
loope
hlt
mov
dec
or
pop
(bad)
hlt
mov
dec
mov
pop
(bad)
cli
dec
out
hlt
(bad)
loopne
xchg
and
dec
out
cld
ret
loopne
xchg
pop
popf
int3
arpl
lahf
xchg
loopne
repnz
xchg
out
(bad)
loopne
xchg
std
adc
pop
loope
aaa
jne
hlt
mov
dec
or
fistp
hlt
mov
dec
mov
dec
jecxz
inc
pop
bound
mov
bound
(bad)
mov
popf
das
xor
out
(bad)
clc
loopne
rol
loope
repnz
es
(bad)
mov
xchg
out
(bad)
mov
popf
das
xor
sub
loopne
xchg
(bad)
mov
es
(bad)
mov
pushf
fisttp
dec
sbb
cmp
xchg
call
jmp
mov
mov
or
xor
mov
loopne
or
(bad)
mov
popf
das
xor
jns
adc
cld
out
loopne
xchg
push
xchg
jmp
xchg
push
xchg
jmp
xchg
push
xchg
jmp
or
jmp
mov
add
loopne
jno
cmp
and
fdiv
lock
adc
test
cmp
jns
pop
bound
pop
xchg
inc
jns
pop
(bad)
cli
xlat
or
das
ins
xchg
pop
xchg
cld
pop
xchg
test
push
sti
int
cmp
movs
cmp
pop
bound
sahf
daa
popf
repz
push
inc
pusha
jns
imul
cmp
loope
aas
not
pop
loopne
inc
mov
push
xchg
or
daa
test
loopne
xchg
aaa
movs
cmp
push
bound
xchg
daa
cdq
clc
xchg
pop
xchg
cld
pop
mov
repnz
ret
jmp
or
jmp
out
sar
(bad)
loopne
daa
pusha
mov
cmp
jnp
jns
pop
(bad)
call
outs
xchg
xchg
ins
mov
jmp
int3
clc
jmp
(bad)
xchg
movs
adc
pop
or
jle
cmp
jne
adc
test
sbb
pop
cmp
pushf
mov
xchg
aas
jno
arpl
pop
xchg
xchg
js
xchg
movs
xchg
imul
cmp
repnz
pop
jmp
cmp
jmp
mov
pop
(bad)
cli
push
daa
std
cmp
pop
loope
xor
addr16
cmps
pop
bound
pop
bound
cmp
bound
xchg
stos
cmp
pop
bound
sbb
loopne
pop
imul
pop
pop
xchg
pop
bound
ins
pusha
jns
loopne
cld
stos
stos
and
adc
jp
and
les
push
int
pop
push
mov
scas
fild
cli
fistp
and
jle
arpl
and
and
cmp
bound
int
pop
jbe
xor
cmp
cmp
js
adc
xchg
cmps
pop
bound
daa
std
cmp
hlt
xchg
daa
std
cmp
xchg
xchg
mov
xchg
daa
lea
pop
bound
cmp
cwde
js
pop
popf
jl
stos
and
sbb
jp
jb
cmp
mov
jns
jmp
loop
and
and
jp
shr
bound
int
jp
jp
or
mov
jns
jmp
loop
and
ins
xchg
loopne
jl
and
xor
dec
sti
test
pop
jl
jns
adc
jp
push
jnp
and
pop
ret
test
and
gs
sti
not
jnp
pop
jmp
adc
jmp
mov
pop
arpl
cmp
aad
(bad)
loopne
jl
and
cmp
dec
sti
imul
jnp
pop
jecxz
xor
bound
adc
jp
pusha
mov
cmp
jmp
jl
stos
and
sbb
jp
jmp
cmp
jmp
mov
pop
and
call
inc
movs
pop
(bad)
jns
stc
jmp
retf
xchg
movs
stc
ss
std
cmp
pop
mov
xlat
and
mov
daa
std
cmp
imul
mov
pop
repnz
neg
jns
pop
ret
xchg
cmps
pop
bound
daa
std
cmp
test
cmp
popf
jl
stos
and
sbb
jp
pusha
nop
cmps
pop
bound
out
dec
mov
and
cmp
call
mov
cmp
bound
fldcw
ja
pop
jmp
jp
(bad)
fld
and
test
bound
arpl
cli
ret
adc
jle
cmp
jmp
mov
pop
pop
mov
pop
bound
add
inc
cld
sti
test
jp
jp
and
(bad)
pop
bound
jp
arpl
and
cmp
and
out
push
mov
and
jnp
outs
dec
sti
div
js
pop
jecxz
xchg
push
bound
sbb
int
pop
xchg
jl
and
jnp
out
cmp
(bad)
lock
call
cmp
xchg
xchg
push
retf
xchg
movs
jbe
sbb
fdivr
inc
mov
jle
ins
iret
outs
ret
cmp
pushf
cmp
cwde
jbe
pop
cdq
inc
sti
pop
bound
fwait
jmp
cmp
loop
rcr
les
push
jnp
jecxz
and
bound
test
bound
push
fdivr
and
sbb
jnp
loope
jg
and
push
stc
inc
in
or
lahf
pop
cmp
repnz
sbb
cwde
jge
cmp
je
and
mov
xchg
movs
lock
call
cmp
adc
jl
and
mov
in
add
sbb
je
bound
jl
(bad)
and
xchg
xchg
push
retf
xchg
movs
cli
push
adc
cmp
pop
mov
xlat
and
cs
cmp
xchg
(bad)
loopne
pop
popf
jl
(bad)
and
pop
repnz
es
pop
bound
loopne
mov
sbb
adc
cmp
pop
mov
xlat
and
cs
cmp
xchg
(bad)
fidivr
popf
jl
(bad)
and
daa
std
cmp
es
pop
bound
loopne
addr16
repz
jns
fbld
daa
pusha
(bad)
mov
sub
fdiv
dec
loopne
shl
bound
stc
jmp
(bad)
xchg
movs
xchg
imul
cmp
ret
jns
mov
fs
(bad)
lock
ja
ret
jns
xor
jns
inc
ret
ja
ret
jns
xor
jns
paddw
cmp
xchg
lahf
mov
call
pop
xor
jns
jmp
cmp
ja
ret
jns
xor
jns
das
std
cmp
ja
ret
jns
xor
jns
inc
ret
inc
cmp
clc
dec
jmp
mov
dec
fldenv
jecxz
mov
or
mov
pop
retf
or
fnstcw
movs
cmp
pop
bound
xchg
mov
cli
pop
repz
hlt
jle
jmp
retf
fsub
lea
bound
hlt
in
cmp
loope
ret
pop
loope
(bad)
pop
popf
jl
stos
and
jp
jns
(bad)
push
mov
out
pop
movs
cmp
push
bound
fsub
movs
cmp
bound
jns
jns
call
jmp
mov
push
ret
jns
jmp
fneni(8087
addr16
jle
pusha
jns
pop
ficom
arpl
bound
mov
movs
cmp
push
bound
pushf
pop
sar
pop
lds
pop
bound
mov
or
sbb
jle
xor
cmp
mov
adc
xchg
daa
(bad)
bound
cmp
adc
add
cmp
pop
fnsave
push
mov
pop
pop
bound
cmp
xchg
or
pop
or
sbb
sbb
pop
fidiv
fcom
popf
or
test
jns
pop
mov
les
hlt
jle
xor
cmp
xchg
lahf
cmp
fs
cmp
mov
jecxz
jle
push
jmp
popf
mov
or
xchg
daa
test
out
jmp
cmp
xchg
daa
xchg
push
sbb
jns
push
out
cmp
dec
out
cmp
dec
popf
or
jne
hlt
jle
xor
(bad)
loopne
jno
or
jp
jmp
clc
push
jecxz
cmp
pop
stos
mov
ins
mov
jmp
adc
jmp
les
push
int
pop
popf
or
jne
xchg
paddw
cmp
xchg
sahf
mov
sahf
lock
inc
stos
mov
xlat
adc
das
ins
xchg
pop
jno
inc
outs
xchg
imul
cmp
popf
jbe
sbb
pop
bound
sub
jg
arpl
bound
aaa
ins
iret
jg
pusha
inc
les
bound
add
jg
popa
inc
les
bound
(bad)
iret
jg
inc
les
bound
fwait
push
cmp
xchg
es
xchg
jbe
mov
pop
mov
lea
jbe
sbb
xchg
jbe
or
adc
out
cmp
(bad)
lock
das
or
xor
jmp
cmc
pusha
jbe
or
push
lock
add
pop
pop
mov
loope
aas
adc
jge
and
daa
xor
daa
xchg
ins
hlt
aas
sbb
lds
xor
xor
aaa
xchg
jbe
das
or
sub
inc
ds
xchg
daa
cmp
sbb
mov
sbb
cmp
xchg
es
push
call
xchg
jbe
cmp
bound
aas
ins
iret
jle
or
jmp
imul
loopne
nop
or
popf
xchg
sbb
int
pop
loop
add
out
stc
pop
sbb
jo
call
sbb
cmp
lahf
pop
jg
push
lock
pushf
mov
test
push
imul
bound
imul
pushf
mov
fs
dec
or
mov
outs
daa
addr16
rcr
loope
cmp
data16
cmp
bound
and
jp
xor
ds
pushf
mov
and
dec
jmp
mov
sbb
jge
call
sbb
cmp
bound
cmp
pop
push
mov
pxor
mov
push
mov
cmp
xchg
daa
imul
xchg
aaa
xor
and
imul
jmp
mov
sbb
add
sbb
inc
cmp
out
xchg
aas
adc
jge
and
xor
pop
push
jle
loopne
jns
push
xchg
xchg
inc
bound
dec
jb
outs
or
js
pushf
mov
sbb
cmp
bound
mov
pop
ins
sti
mov
popf
xchg
mov
dec
jmp
mov
dec
popf
jl
stos
and
push
xchg
daa
cs
xchg
cmp
pop
inc
cmp
ds
pop
adc
mov
pop
adc
xchg
daa
jne
mul
cmp
movs
pavgw
mov
pop
loope
xor
addr16
lea
mov
cs
repz
cs
sub
fwait
xchg
xchg
inc
popf
jl
stos
and
test
bound
imul
pop
bound
aas
loope
(bad)
pop
mov
(bad)
popa
cmp
xchg
jbe
mov
xchg
ret
jge
pop
bound
jecxz
xchg
sar
call
addr16
jge
mov
jmp
ret
xchg
nop
js
ss
rcr
js
xchg
daa
lea
dec
xchg
lock
jge
pop
(bad)
cli
rcr
repnz
push
mov
js
push
mov
rcr
jmp
ret
fldenv
rcl
aaa
xor
xlat
popf
push
ret
xchg
ss
mov
rcr
jmp
ret
fldenv
mov
pop
js
pop
bound
ins
adc
sub
fiadd
and
jecxz
xchg
inc
stos
mov
cmp
rcl
cmp
dec
xor
rol
fwait
xchg
(bad)
call
cmp
and
cmp
and
les
loope
dec
stos
and
lahf
fistp
dec
push
ins
iret
mov
lahf
pop
jl
mov
js
xchg
mov
push
test
popf
stc
pop
sbb
lds
pusha
or
hlt
cmp
lea
jmp
xchg
rcr
aaa
adc
jns
xor
mov
retf
loopne
jge
dec
sti
cmp
adc
in
enter
push
aad
hlt
aaa
adc
fstp
popf
xchg
sub
mov
inc
bound
mov
cmps
(bad)
loopne
jge
aas
repz
lahf
out
aam
popf
js
test
popf
adc
add
inc
ds
cmp
ins
cld
jbe
popf
xchg
call
lea
mov
ins
sbb
out
aas
pop
bound
mov
fwait
cmp
jns
mov
jl
stos
and
mov
bound
mov
cmp
pop
add
jmp
jecxz
popf
xchg
sbb
int
pop
jmp
xchg
fiadd
jns
pop
(bad)
lock
cs
xchg
sbb
imul
inc
bound
fabs
(bad)
cmp
test
stos
fild
mov
pop
pop
in
lock
xchg
out
cld
mov
idiv
jl
stos
and
mov
bound
push
loopne
jns
loopne
xchg
aam
popf
xchg
imul
(bad)
loopne
mov
xor
push
sbb
loopne
repnz
lahf
mov
dec
les
mov
test
sbb
xchg
lea
mov
pop
adc
pop
adc
(bad)
addr16
pop
(bad)
lock
hlt
sub
clc
pop
jb
cmp
bound
(bad)
loopne
test
adc
xchg
inc
jecxz
xlat
lock
xchg
pop
arpl
call
les
bound
repz
(bad)
loopne
xchg
imul
cmp
xlat
mov
add
jns
pop
popa
jns
adc
in
enter
cli
std
pusha
repnz
or
jnp
jmp
iret
lock
xchg
loopne
repnz
jmp
xchg
fiadd
nop
cmp
cmp
sahf
repnz
push
jmp
idiv
(bad)
aam
popf
mov
cli
mul
ficomp
test
xor
popf
xchg
loopne
jge
pop
adc
les
push
int
pop
loop
fadd
popf
xchg
push
adc
and
mov
jns
xchg
out
in
popf
lock
sbb
jl
pop
bound
mov
cmps
(bad)
loopne
mov
mov
xchg
out
in
popf
repnz
xchg
cmp
popf
xchg
loopne
in
scas
rcr
stos
rcr
(bad)
loopne
cld
out
rcr
(bad)
loopne
gs
fisub
mov
mov
cmp
jmp
xchg
call
mov
cmps
cmps
(bad)
loopne
cld
pop
popf
xchg
call
fadd
popf
xchg
push
adc
pop
fs
push
pop
jmp
xchg
cmc
outs
sub
loopne
xchg
aaa
dec
or
bound
(bad)
hlt
stc
xchg
imul
cmp
aam
enter
cli
std
pusha
repnz
mov
lods
in
popf
lock
or
jnp
ins
iret
scas
in
lea
mov
ja
stos
pop
(bad)
lock
jmp
xchg
ja
imul
dec
bound
call
xor
add
pop
loop
xor
ins
std
add
bound
call
cmp
mov
pop
push
jbe
bound
xor
pop
js
pop
mov
pop
(bad)
xchg
xchg
jbe
cmp
bound
cmc
popf
hlt
jg
lock
xchg
(bad)
(bad)
loopne
jns
mov
cmps
(bad)
loopne
repnz
mov
xor
xchg
xchg
cli
rcr
jl
retf
pushf
mov
daa
bound
xchg
xchg
cli
rcr
loop
cmp
lock
pushf
mov
bound
les
push
int
pop
ins
iret
scas
mov
cmp
ja
loope
popf
stc
mov
push
ins
iret
cmp
pop
pop
outs
mov
push
js
pop
(bad)
cli
shl
out
cmp
ffreep
popf
xchg
popf
jmp
rcl
jmp
xchg
out
mov
and
popf
in
popf
or
lahf
iret
(bad)
loopne
js
test
popf
mov
cs
gs
and
cmp
bound
aaa
loop
push
sbb
pop
addr16
pop
bound
or
inc
push
sbb
cmp
pop
jae
and
cmp
bound
sbb
xchg
repz
cld
cwde
rcr
mov
add
mov
dec
popf
int3
out
popf
xchg
stos
mov
(bad)
loopne
cmpps
cli
call
loop
fadd
popf
xchg
imul
sahf
jmp
xchg
pop
jmp
xchg
std
pusha
lock
mov
(bad)
pusha
jp
jecxz
std
idiv
push
(bad)
loopne
(bad)
iret
lock
xchg
sbb
dec
iret
popf
jl
stos
and
xor
mov
loopne
js
test
popf
adc
add
inc
ds
cmp
ins
cld
adc
popf
xchg
mov
dec
jmp
mov
dec
jmp
add
jb
imul
mov
inc
clc
out
dec
dec
mov
bound
in
(bad)
bnd
jmp
not
scas
lock
jmp
ret
xchg
pop
mov
jns
(bad)
pop
bound
mov
test
pop
fstp
pop
bound
es
add
cmp
push
jmp
js
xchg
aaa
cmp
or
jp
test
ja
dec
sbb
cmp
sbb
js
bound
(bad)
pop
mov
cmp
(bad)
cmp
aam
(bad)
and
out
cmp
(bad)
clc
jle
in
cmp
loop
les
ins
iret
js
pop
mov
pop
adc
cmp
cmp
cmp
arpl
pop
arpl
stc
pushf
cmp
or
cwde
jl
push
loope
jnp
data16
jle
arpl
pop
arpl
aaa
pushf
cmp
addr16
lahf
daa
xchg
xchg
daa
xor
pop
arpl
bound
lahf
bound
push
stc
jle
data16
sbb
mov
pop
bound
jmp
data16
jle
data16
jle
arpl
inc
loop
jbe
dec
popf
xchg
fldenv
test
hlt
je
cmp
aam
(bad)
and
fs
jle
arpl
cmp
xchg
push
out
cmp
pop
ins
iret
cmp
loope
cmp
pop
jge
pop
popf
js
test
cmp
push
pop
fxch
sub
sub
rcr
jns
ja
jns
pop
xor
cmp
sub
pop
jmp
mov
and
dec
out
mov
add
pop
push
js
hlt
fs
xchg
mov
es
aas
mov
aas
aas
bound
aas
xor
dec
xor
push
mov
xchg
sahf
mov
sahf
cmps
(bad)
loopne
mov
mov
outs
das
les
hlt
mov
dec
mov
pop
(bad)
hlt
mov
dec
mov
pop
(bad)
cli
dec
jmp
or
jmp
or
cmp
lock
out
and
push
cmp
adc
loopne
jno
pop
mov
push
fdiv
lock
(bad)
xchg
inc
jge
mov
pop
or
lahf
bound
jne
adc
jne
adc
pop
(bad)
stc
les
xchg
es
bound
fabs
xchg
push
cli
inc
adc
cmp
aas
(bad)
lock
call
jmp
or
mov
push
pop
xor
ds
bound
fsub
mov
rcr
xor
xchg
daa
test
pop
or
bound
dec
pop
jmp
(bad)
rcr
out
cmp
xchg
daa
(bad)
les
sub
push
das
rcl
xor
dec
mov
jle
mov
out
xor
cli
xor
ins
dec
fisttp
xor
call
pop
bound
sbb
jns
pop
or
pop
mov
add
(bad)
lock
sahf
movs
xor
loopne
jge
fisttp
jns
pop
xor
mov
pop
outs
lock
pushf
stos
xchg
pop
js
push
lock
jne
hlt
outs
jecxz
sub
push
das
rcl
xor
jne
hlt
jle
xor
cmp
cdq
jns
xor
or
mov
pop
xor
push
bound
push
bound
inc
cmp
repnz
lock
retf
jbe
sbb
jns
clc
jmp
ret
xchg
movs
adc
ja
jns
pop
or
pop
or
pop
bound
loopne
jno
push
jns
xchg
movs
lock
call
jmp
mov
mov
adc
jne
das
sar
xor
jne
hlt
jle
xor
aaa
dec
mov
pop
(bad)
lock
ss
pop
bound
pop
cmp
lock
das
ins
xchg
pop
jno
pop
sahf
nop
pop
xchg
and
push
jecxz
pop
cmp
push
mov
xor
inc
cmp
and
lea
pop
jne
pop
cmp
neg
sub
pop
jecxz
(bad)
mov
jns
ja
cdq
jns
mov
push
rcpps
aas
add
adc
jmp
jns
dec
xor
pushf
cmps
jno
and
jne
not
rcl
inc
add
sbb
and
jne
out
xor
adc
and
xor
jns
pushf
cmps
jno
pop
sahf
lock
push
mov
daa
pusha
(bad)
mov
sub
jmp
jne
pop
sahf
stos
sub
sbb
pop
cmp
or
pop
bound
bound
popf
xchg
sub
aam
add
dec
fistp
xchg
fimul
jns
fld
add
adc
cmp
lods
sub
pop
cmp
jle
jmp
cmp
jmp
mov
lock
ret
pop
dec
mov
arpl
jle
arpl
jp
jns
jp
jns
jp
jns
bound
cmp
cmps
popa
jns
pop
xchg
fadd
call
jmp
mov
sbb
jle
jp
mov
push
mov
icebp
jle
mov
icebp
add
call
jmp
xor
daa
xchg
es
pushf
mov
stc
inc
loopne
or
pushf
setne
sahf
mov
nop
push
loopne
stc
inc
loopne
or
xchg
daa
jne
test
jnp
pop
pushf
xchg
sbb
bound
pop
pushf
jbe
pop
mov
js
mul
add
sbb
mov
jb
js
bound
int3
cld
jmp
jecxz
mov
into
cmp
push
jmp
mov
jbe
dec
xor
arpl
xchg
mov
bnd
jmp
adc
jbe
push
or
pop
xchg
jle
ins
into
jnp
jmp
sub
dec
xor
arpl
xchg
daa
jne
test
jno
dec
push
mov
push
jmp
daa
popf
mov
xchg
jecxz
mov
mov
stos
(bad)
fidivr
pop
(bad)
jmp
cmp
aas
jmp
stos
(bad)
push
push
stos
(bad)
bnd
stos
(bad)
and
stos
(bad)
bnd
stos
(bad)
and
stos
(bad)
bnd
stos
(bad)
pop
mov
dec
(bad)
stos
(bad)
fidivr
pop
(bad)
jmp
cmp
and
mov
(bad)
push
gs
(bad)
bnd
stos
(bad)
loope
aas
(bad)
bnd
stos
(bad)
pop
xchg
stos
(bad)
bnd
stos
pop
xchg
jg
jmp
rcr
bound
inc
bnd
inc
and
jns
xor
jnp
repnz
sub
(bad)
repnz
jmp
stos
(bad)
repnz
clc
sbb
jmp
stos
(bad)
repnz
stos
pushf
mov
cli
add
bnd
stos
(bad)
repnz
js
retf
popf
jns
pop
(bad)
std
mov
bound
and
aas
jns
pop
bound
xor
(bad)
bnd
sub
jmp
stos
(bad)
cmp
jmp
stos
(bad)
push
sub
fwait
in
cmp
(bad)
jmp
stos
(bad)
bnd
stos
(bad)
push
stos
stos
(bad)
bnd
stos
(bad)
jmp
stos
(bad)
bnd
stos
(bad)
repz
arpl
fadd
and
aas
jmp
stos
(bad)
arpl
fldln2
bnd
mov
jmp
stos
(bad)
push
sub
iret
cmp
(bad)
jmp
stos
(bad)
bnd
stos
(bad)
push
stos
stos
(bad)
bnd
stos
(bad)
jmp
stos
(bad)
bnd
stos
(bad)
repz
arpl
fdivr
xor
das
bnd
stos
(bad)
bnd
stos
pop
jmp
pop
neg
(bad)
loopne
mov
xlat
pop
xor
ins
xchg
aas
jno
pop
outs
pop
mov
outs
mov
add
xchg
mov
test
jmp
bound
les
cmp
mov
int3
loopne
and
lahf
pop
cmp
fs
adc
xor
cmp
jmp
xlat
cmps
popf
push
cmp
fnstsw
pop
bound
dec
cdq
lock
loopne
out
mov
int3
out
mov
loop
bound
jp
lock
jmp
(bad)
xchg
addr16
outs
adc
pusha
adc
mov
aam
xor
das
adc
jmp
std
bound
push
lock
xchg
cmp
jb
lea
push
icebp
xchg
jb
jle
rol
cmp
or
(bad)
bound
xchg
daa
mov
int
cmp
ins
iret
jle
xor
jecxz
xchg
sub
dec
cwde
js
dec
mov
jne
bound
cmp
xchg
mov
add
(bad)
cli
(bad)
cmp
mov
or
loopne
mov
daa
jne
movs
jbe
pop
popf
xchg
inc
cmp
repnz
lock
ret
mov
mov
pop
mov
jne
(bad)
mov
rcr
test
rcl
and
lock
jmp
mov
(bad)
cli
push
fcmovnu
cmp
pop
pop
jle
fisttp
hlt
jle
xor
ret
loopne
cli
call
jmp
xor
ins
std
adc
pop
xchg
cli
clc
pusha
repnz
and
les
dec
ins
push
mov
cmp
xchg
mov
mov
mov
xor
pop
xchg
cli
clc
pusha
xchg
and
les
jmp
cmp
cmps
les
xor
jns
adc
jns
out
popa
jl
mov
mov
shl
cmps
popa
call
test
or
mov
mov
popa
cmp
xchg
ja
xchg
dec
sub
les
popa
jl
mov
sahf
or
mov
jmp
ret
hlt
jg
les
int3
cld
jmp
out
mov
xor
pop
call
sbb
mov
jle
adc
cmp
das
jns
xchg
pop
movs
xor
popf
lock
adc
stos
cli
std
jb
in
xchg
pop
test
rol
push
jns
mul
xor
pop
jmp
jecxz
pop
xor
pop
jmp
xchg
fiadd
inc
out
and
pop
or
xchg
lock
sbb
mov
sar
cs
pushf
cmps
jne
xlat
fistp
cmp
jecxz
fild
popa
cmp
xchg
ja
xchg
dec
sub
les
popa
jl
mov
xchg
or
mov
jmp
retf
hlt
jae
retf
sbb
mov
pop
push
imul
sbb
mov
jle
adc
jmp
aaa
xchg
jmp
cmp
xchg
outs
test
aaa
and
cmps
les
ins
iret
outs
lock
mov
neg
ss
fistp
cmp
inc
jbe
pop
loop
aam
pop
jge
jb
popa
xor
daa
xchg
imul
cmp
dec
mov
(bad)
loopne
cli
call
or
pop
or
pop
or
pop
bound
loopne
jno
pop
sub
xchg
daa
popf
mov
pop
or
pop
mov
les
das
les
xchg
inc
push
bound
push
xchg
and
jns
mul
mov
cmp
bound
cld
jmp
out
xchg
mov
mov
xlat
pop
pusha
jns
dec
xor
test
push
ror
fadd
cmp
xchg
lahf
mov
mov
sbb
int
pop
enter
out
fs
shl
mov
push
mov
pop
(bad)
call
xchg
mov
jle
out
push
icebp
xchg
mov
mov
loope
jp
cwde
icebp
scas
loopne
xchg
fldenv
xchg
hlt
dec
xchg
stos
push
bound
test
das
sbb
dec
jmp
int3
cmc
mov
data16
jmp
bound
jmp
lahf
daa
xchg
xchg
daa
xchg
pop
adc
std
call
outs
push
bound
fst
mov
sub
cld
cmp
sahf
xchg
bound
(bad)
hlt
mov
dec
or
call
jns
call
push
push
bound
pop
or
sbb
or
pop
and
mov
dec
mov
mov
loopne
jno
xchg
test
cmp
jg
pop
bound
cmp
popf
sub
jp
cmp
les
popf
int3
iret
loop
xchg
das
sub
xchg
xchg
js
xchg
movs
xchg
mul
jl
stos
and
ja
cmps
jns
out
cld
(bad)
imul
xor
pop
out
cld
shl
xchg
mov
cld
(bad)
imul
cmp
(bad)
mov
stc
jmp
shl
popf
xchg
stos
and
fdivr
cmps
jns
out
cld
(bad)
imul
cmp
bound
push
jae
cmp
ja
cmps
jns
or
pop
loop
xor
(bad)
clc
int
push
jns
inc
cmp
repnz
lock
repnz
or
dec
inc
test
ret
ss
pop
(bad)
lock
call
jmp
mov
pop
call
pop
or
adc
cmp
adc
loopne
jne
push
xchg
sbb
jns
out
loope
les
inc
cmp
pop
xor
xor
cmp
xchg
popf
or
test
add
bound
push
xchg
(bad)
push
bound
inc
cmp
ins
mov
jecxz
sub
jns
push
xchg
ss
bound
push
xor
sub
pop
jne
push
xchg
push
pop
bound
fstp
data16
lock
(bad)
fsub
push
push
mov
xchg
sahf
mov
sahf
lock
jne
adc
xchg
daa
ins
imul
imul
pop
mov
pop
(bad)
cli
inc
cmp
pushf
push
xor
xor
fsubr
cmp
dec
out
cmp
dec
or
sbb
cmp
adc
jne
xchg
popf
or
idiv
xor
pop
imul
sub
ins
les
adc
loopne
imul
push
bound
fist
jne
push
xchg
push
push
bound
fisttp
xor
pop
push
mov
outs
xchg
xchg
xlat
sysenter
cs
jbe
jle
add
jle
ffree
jo
inc
clc
int3
inc
and
cmp
fs
out
xor
sbb
pop
jne
push
xchg
into
pop
bound
fist
jge
fisttp
sub
bound
cmp
pop
imul
pop
bound
fist
jne
push
xchg
cli
pop
bound
fisttp
xchg
mov
jns
test
popa
rcl
ficom
fcom
cmp
lock
das
ins
mov
jecxz
jge
bound
and
or
cmp
xor
mov
call
mov
pop
cmp
push
dec
sti
pop
mov
push
pop
or
cmp
adc
ja
cmps
jns
mov
jge
(bad)
fcmovb
retf
mov
pop
imul
or
jns
push
and
cmp
jecxz
fadd
stos
mov
sub
mov
hlt
cs
cmp
xchg
xor
dec
jmp
push
xor
mov
push
adc
icebp
push
xchg
daa
test
dec
sahf
lock
push
stc
pop
and
adc
dec
jmp
cmp
xor
jl
(bad)
cli
call
jmp
adc
jmp
jnp
xchg
call
pop
sahf
lods
sub
bound
mov
fisubr
dec
ds
add
out
stc
pop
sbb
sub
clc
jle
out
cmp
jmp
jnp
push
lock
push
mov
jns
xchg
movs
clc
jle
loopne
cmp
imul
(bad)
xor
jns
(bad)
mov
(bad)
xchg
mov
dec
sti
inc
cmp
repnz
lock
repnz
movs
cmp
sti
inc
repnz
sub
jns
div
cmp
ret
xchg
movs
test
pushf
movs
jno
jne
xchg
mov
pop
xchg
dec
int
je
lea
push
cli
retf
outs
imul
sub
mov
dec
jge
pop
or
pop
jns
jns
cmp
pop
bound
lds
aam
add
bound
call
movs
sbb
call
push
mov
rcr
sub
xchg
mov
cld
jle
repnz
jmp
adc
and
neg
aas
cmp
loope
das
jns
cmp
adc
cmp
and
or
cmp
repnz
lock
mov
jp
bound
ins
dec
fdiv
fstp
loope
iret
loopne
xchg
pushf
(bad)
xchg
(bad)
mov
call
adc
cli
call
jmp
mov
arpl
dec
sbb
shl
imul
loope
jns
adc
xchg
xchg
pop
bound
fisttp
xchg
mov
js
(bad)
lock
cmps
jnp
cmp
xchg
fadd
loopne
xchg
loopne
(bad)
xchg
mov
repnz
retf
popf
test
xchg
fiadd
sbb
ins
jne
xchg
outs
pop
bound
call
mov
bound
push
adc
push
bound
cmps
and
xchg
xchg
push
retf
xchg
movs
bnd
jmp
jmp
lahf
xchg
pop
loop
cmp
pop
xor
mov
(bad)
loopne
sub
mov
loopne
mov
jns
popf
or
imul
cmp
pop
loope
xor
cmps
jns
popf
int3
(bad)
loopne
xchg
inc
daa
jns
pushf
cmps
jno
daa
daa
jns
cmps
push
mov
pushf
cwde
jl
or
mov
pop
bound
(bad)
div
mov
retf
xchg
movs
xchg
ss
bound
adc
xchg
cmp
cdq
cmp
cmp
(bad)
loopne
out
repnz
popf
xchg
dec
or
pop
bound
shl
es
pushf
cmps
imul
cmps
push
mov
pushf
cwde
jl
or
mov
pop
bound
(bad)
not
mov
jns
popf
int3
(bad)
loopne
xchg
sti
es
pushf
cmps
jno
mov
push
mov
pushf
cwde
jl
or
mov
pop
bound
(bad)
neg
cmp
xor
sbb
cmp
(bad)
loopne
out
cmp
inc
xchg
push
pop
bound
jl
jns
xchg
test
loope
cs
and
pop
jg
(bad)
cli
dec
popf
or
ja
cmps
jns
jmp
xchg
inc
cmps
jns
xor
mov
fidivr
jns
test
cmp
(bad)
loopne
out
cmp
jno
retf
jmp
jns
stos
sahf
xchg
loopne
cmp
(bad)
cli
call
or
pop
bound
(bad)
test
xor
mov
cmp
(bad)
pop
(bad)
loopne
out
cmp
jno
retf
jmp
jns
stos
sahf
xchg
loopne
jae
pop
(bad)
cli
call
or
pop
bound
(bad)
not
mov
cmp
(bad)
pop
(bad)
loopne
out
cmp
inc
xchg
call
jns
xchg
test
loope
cs
and
out
pop
(bad)
cli
dec
fimul
pop
bound
(bad)
std
test
loopne
out
adc
shl
mov
mov
xchg
push
pop
bound
call
dec
psubsw
(bad)
loopne
xchg
mov
jns
xor
mov
pop
bound
adc
xchg
cmp
jge
cmp
fistp
cmp
(bad)
loopne
out
repnz
popf
xchg
dec
or
pop
bound
rol
and
pushf
cmps
imul
loopne
mov
cmp
sti
mov
pushf
cwde
jl
or
mov
pop
bound
(bad)
imul
cmp
loope
xor
test
jae
pop
(bad)
loopne
out
cmp
jno
lock
les
mov
call
mov
jns
(bad)
shl
bound
call
pop
push
out
cmp
loopne
test
loope
xchg
(bad)
pop
bound
fld
retf
cs
lock
ja
cmps
jns
popf
or
xchg
out
(bad)
push
test
jns
(bad)
cli
dec
mov
jns
(bad)
shl
bound
call
pop
push
aam
cmp
loopne
test
loope
xchg
inc
pop
bound
fld
add
jns
adc
xchg
cmp
xchg
cdq
jns
popf
int3
(bad)
loopne
xchg
inc
and
pushf
cmps
jno
or
jns
cmps
push
mov
pushf
cwde
jl
cmp
jnp
pop
(bad)
rcr
jns
call
sahf
xchg
loopne
adc
neg
mov
cmp
out
cmp
(bad)
cli
sahf
fistp
cmp
bound
les
jecxz
ins
ins
bound
mov
bound
(bad)
mov
and
add
xchg
fistp
xchg
popf
test
adc
inc
add
bound
call
xor
ret
cmps
js
cmp
fdiv
xlat
fld
(bad)
mov
mov
xchg
loopne
scas
mov
mov
xor
jns
mov
xor
jns
(bad)
adc
jns
stc
jmp
and
xchg
loopne
xchg
loopne
jns
pop
ins
sti
dec
loopne
xchg
stos
xchg
xchg
loopne
or
xchg
out
cmp
popf
sub
loopne
adc
and
idiv
cmp
loope
and
popf
cmp
pop
(bad)
pop
(bad)
loopne
out
cmp
jno
shl
les
mov
pop
(bad)
cli
call
mov
xor
bound
call
pop
push
aam
cmp
loopne
test
loope
xchg
ret
jns
fld
retf
cs
lock
test
jae
pop
(bad)
loopne
out
cmp
jno
retf
jmp
jns
stos
sahf
xchg
loopne
mov
pop
(bad)
cli
call
jecxz
jmp
lahf
xchg
call
ret
loopne
xchg
call
movs
loope
xchg
loopne
mov
stc
jmp
sti
loopne
xchg
pop
(bad)
cld
ret
loopne
xchg
push
arpl
lahf
fistp
loopne
jns
fwait
pop
js
pop
jmp
or
jmp
mov
jle
cmp
bound
call
jge
bound
call
xlat
loopne
xchg
push
adc
and
call
and
jns
fld
mov
popf
test
pushf
stos
xchg
pop
js
push
lock
jns
(bad)
std
loopne
xchg
(bad)
cld
cmp
popf
xchg
aad
std
loopne
xchg
loop
sub
cmp
cmp
popf
sub
scas
call
call
iret
loopne
xchg
push
xchg
xchg
out
(bad)
push
jnp
cmp
dec
mov
add
(bad)
cli
inc
mov
add
(bad)
shl
bound
call
pop
push
inc
mov
test
loope
xchg
sahf
and
mov
push
xchg
lock
idiv
inc
cmp
(bad)
pop
(bad)
loopne
out
cmp
jno
lock
les
mov
add
(bad)
cli
call
mov
pop
(bad)
shl
bound
call
pop
push
out
cmp
loopne
test
loope
xchg
outs
and
mov
out
popf
test
mul
mov
les
out
cld
cmp
popf
xchg
xlat
add
aaa
xchg
xchg
pushf
cmps
jne
call
xor
icebp
xchg
loopne
inc
in
bound
(bad)
mul
cmp
loope
xor
mov
jae
pop
(bad)
loopne
out
cmp
jno
shl
les
mov
call
mov
add
pop
bound
call
pop
push
aam
cmp
loopne
test
loope
xchg
xchg
bound
fld
retf
call
popf
test
xchg
movs
xchg
push
and
adc
cmp
xchg
cdq
jns
popf
int3
(bad)
loopne
xchg
xchg
pop
jns
pushf
cmps
jno
sub
xlat
test
loope
xchg
inc
and
mov
and
adc
cmp
inc
inc
cmp
fistp
cmp
(bad)
loopne
out
repnz
popf
xchg
dec
or
pop
bound
sar
pop
jns
pushf
cmps
imul
cmps
push
mov
pushf
cwde
jl
or
and
pop
bound
(bad)
idiv
cmp
loope
xor
bound
adc
cmp
test
int3
(bad)
loopne
xchg
jmp
jns
pushf
cmps
jno
scas
pop
jns
cmps
push
mov
pushf
cwde
jl
or
mov
pop
bound
(bad)
imul
mov
cmp
(bad)
pop
(bad)
loopne
out
cmp
inc
xchg
inc
and
cmp
xchg
test
loope
cs
and
clts
pop
(bad)
cli
dec
or
pop
bound
(bad)
mul
inc
cmp
loope
xor
movs
xchg
push
and
adc
cmp
xchg
cdq
jns
popf
int3
(bad)
loopne
xchg
inc
pop
jns
pushf
cmps
jno
add
(bad)
jb
bound
fld
and
adc
cmp
xchg
cdq
jns
popf
int3
(bad)
loopne
xchg
cmp
cmp
cmp
loopne
test
loope
xchg
sub
bound
fld
int
je
cmp
movs
inc
cmp
(bad)
pop
(bad)
loopne
out
cmp
jno
retf
jmp
jns
stos
sahf
xchg
loopne
lahf
pop
pop
(bad)
cli
call
out
cld
in
lahf
xchg
out
(bad)
push
sbb
mov
pop
pop
(bad)
cli
dec
mov
pop
pop
(bad)
shl
bound
call
pop
push
out
cmp
loopne
test
loope
xchg
sahf
and
mov
shl
les
mov
pop
pop
(bad)
cli
call
mov
pop
pop
(bad)
shl
bound
call
pop
push
out
cmp
loopne
test
loope
xchg
push
and
mov
bound
stc
jmp
sti
loopne
xchg
pop
(bad)
rcl
bound
call
movs
imul
sahf
xchg
loopne
adc
ret
ins
imul
cmp
loope
sub
lea
pop
(bad)
pop
(bad)
loopne
out
cmp
jno
retf
jmp
jns
stos
sahf
xchg
loopne
ja
pop
(bad)
cli
call
or
mov
popf
xchg
neg
mov
cmp
(bad)
pop
(bad)
loopne
out
cmp
jno
retf
jmp
jns
stos
sahf
xchg
loopne
scas
add
(bad)
cli
call
jecxz
dec
pop
bound
xchg
pop
jns
cmps
push
mov
pushf
cwde
jl
cmp
add
pop
(bad)
rcr
jns
call
sahf
xchg
loopne
adc
not
mov
jns
popf
int3
(bad)
loopne
xchg
xchg
pop
jns
pushf
cmps
jno
pop
or
sbb
or
pop
and
add
(bad)
lock
sahf
movs
loopne
pop
bound
(bad)
mul
inc
cmp
or
mov
xor
xchg
loopne
int3
shl
lahf
xchg
jg
jns
loopne
xchg
vpgatherqq
loop
xchg
ret
jns
stos
sahf
xchg
loopne
fisttp
(bad)
lock
push
xchg
lock
dec
mov
or
(bad)
test
inc
cmp
repnz
lock
bound
test
je
xchg
call
loopne
lock
fldenv
xchg
hlt
pop
jbe
pop
popf
sub
mov
xchg
loopne
sub
stos
pop
jns
xchg
call
ja
movs
jns
out
cld
(bad)
imul
cmp
popf
cli
inc
loop
les
call
or
ret
push
push
mov
jns
lahf
mov
in
ret
and
lds
movs
jns
or
pop
loop
mov
popf
xchg
inc
sub
inc
stos
mov
xlat
mov
cmp
test
dec
ret
xchg
movs
cli
sahf
sbb
xor
mov
cld
stos
loop
xchg
sbb
cmp
jmp
mov
popf
xchg
fcom
mov
push
std
pushf
movs
jl
imul
dec
cmp
jmp
jnp
pop
jmp
fwait
loop
xchg
push
dec
cmp
jmp
inc
loop
xchg
stos
ret
loopne
pop
or
(bad)
hlt
inc
loop
xchg
dec
pusha
js
xchg
mul
(bad)
loopne
lock
push
call
pop
(bad)
lock
loopne
fld
loopne
xchg
retf
jns
call
mov
call
xchg
aaa
jno
xchg
sbb
sbb
hlt
dec
loop
xchg
dec
pusha
js
xchg
div
(bad)
loopne
clc
int3
jp
jns
ja
scas
jns
mov
push
pop
(bad)
lock
sahf
xchg
xchg
ss
bound
sub
hlt
mov
dec
mov
pop
bound
imul
inc
cmp
or
pop
(bad)
hlt
mov
dec
or
out
bound
pop
and
sbb
je
(bad)
loopne
mov
ss
mov
push
pop
bound
idiv
cmp
mov
loopne
adc
push
bound
call
mov
dec
mov
nop
mov
xlat
jmp
mov
xlat
icebp
(bad)
loopne
xchg
loopne
fld
loopne
das
mov
(bad)
test
loopne
xchg
jne
popf
xchg
sbb
ss
mov
pop
bound
not
out
(bad)
hlt
mov
dec
mov
add
(bad)
lock
ss
loopne
sub
loopne
xchg
stos
daa
bound
out
lea
(bad)
loopne
adc
(bad)
hlt
mov
dec
mov
pop
(bad)
cli
inc
jmp
adc
jmp
cld
call
cmp
movs
cld
(bad)
popf
xchg
pop
bound
fsub
xchg
(bad)
jns
pushf
(bad)
(bad)
loopne
jns
add
mov
push
(bad)
clc
cld
add
jns
xchg
out
(bad)
sub
or
xchg
inc
out
cld
lahf
loop
xchg
out
(bad)
sub
or
aas
or
pop
or
call
cmp
xchg
dec
cmp
imul
pop
popf
int3
xchg
loop
xchg
cmps
push
jns
xchg
call
mov
cmps
jns
or
pop
(bad)
hlt
mov
dec
mov
or
(bad)
cli
dec
movs
cld
dec
loop
xchg
hlt
dec
clc
int3
adc
jns
xchg
out
(bad)
sub
mov
dec
cmp
jmp
xor
pop
bound
popa
jns
test
cld
dec
loop
xchg
xchg
out
(bad)
loopne
inc
ds
stos
jo
imul
cmp
jns
push
push
jns
pushf
fucomip
(bad)
loopne
jns
adc
bound
push
sbb
cmp
popf
sub
aad
cmp
or
jne
cmp
xchg
out
(bad)
sub
pop
fild
push
loopne
jns
push
cli
sahf
sbb
mov
loopne
clc
cld
add
cli
sahf
sbb
mov
call
sub
or
lock
xchg
movs
das
shr
jns
jne
xchg
mul
int3
lahf
loop
xchg
mov
out
(bad)
loopne
xchg
xor
cmp
pop
xchg
sahf
mov
push
test
loopne
mov
stc
sbb
mov
loope
sub
mov
jbe
mov
out
xor
pop
jmp
pop
xchg
aaa
xchg
fcomp
dec
cmp
jmp
pop
xchg
aaa
test
push
xchg
xchg
sub
jns
fld
outs
jmp
bound
fld
outs
jmp
into
jle
ins
into
outs
jecxz
test
cmp
ins
into
outs
jmp
cmp
cmp
(bad)
pop
jmp
mov
pop
push
mov
xor
mov
jg
sbb
cmp
dec
jmp
jnp
mov
push
pop
(bad)
cli
call
popf
or
xchg
xchg
cli
sti
sbb
xchg
add
bound
push
jbe
pop
pushf
hlt
jg
cmp
inc
dec
cmp
jmp
adc
jmp
les
jbe
pop
pushf
hlt
jg
addr16
dec
sahf
hlt
jg
pusha
sub
pop
push
jns
dec
ins
into
jle
out
cmp
outs
jecxz
test
mov
jb
imul
dec
cmp
out
cmp
dec
or
ja
sub
or
pop
mov
std
sahf
lea
les
fisttp
pop
(bad)
hlt
jle
xor
shr
push
jns
dec
mov
or
(bad)
daa
pusha
(bad)
mov
xor
mov
dec
xor
popf
jl
add
lock
cmps
call
sahf
mov
ficomp
cld
call
cmp
out
cld
xchg
popf
xchg
out
fneni(8087
popf
sub
mov
push
cmp
jmp
xor
ins
std
stos
pop
bound
call
xor
(bad)
imul
dec
cmp
loope
xor
mov
mov
loopne
xchg
mov
pop
(bad)
lock
call
add
pop
mov
cld
call
cmp
out
cld
xchg
popf
xchg
out
fneni(8087
popf
sub
or
mov
adc
jmp
push
loopne
xchg
push
sub
mov
push
xchg
loopne
jne
retf
dec
jns
mov
xchg
add
bound
mov
mov
clc
dec
jmp
or
jns
div
push
cmp
xor
ins
xchg
aas
jno
mov
mov
movs
pop
or
push
xchg
lock
dec
or
pop
bound
mov
loope
les
inc
cmp
pop
xor
arpl
(bad)
loopne
mov
jns
xor
mov
mov
jns
xchg
xchg
push
retf
xchg
movs
adc
and
call
cmp
bound
fld
fisubr
jns
adc
xchg
cmp
xchg
cdq
jns
out
cld
cmp
popf
xchg
popf
dec
cmp
loope
xor
(bad)
pop
(bad)
pop
(bad)
loopne
out
cmp
dec
xchg
xchg
sub
jns
jl
jns
xchg
jns
loopne
cs
inc
mov
jns
loopne
sar
cmps
imul
cmps
push
mov
pushf
cwde
jl
or
mov
pop
(bad)
hlt
mov
dec
mov
or
(bad)
cli
call
jmp
adc
jmp
push
sub
jns
loopne
sub
fwait
push
jns
pushf
cmps
jno
pop
push
jns
cmps
push
mov
pushf
cwde
jl
or
mov
pop
(bad)
hlt
mov
dec
mov
or
(bad)
cli
call
mov
pop
(bad)
shl
bound
call
pop
push
rcl
push
jns
cmps
add
pop
sti
mov
dec
out
les
call
movs
jns
out
les
call
dec
cmp
loope
sub
pop
imul
out
fneni(8087
popf
sub
mov
jns
loopne
sub
ret
push
jns
pushf
cmps
ins
mov
xchg
lahf
mov
xchg
cmps
(bad)
loopne
mov
cmp
sti
mov
pushf
cwde
jl
or
mov
pop
(bad)
hlt
mov
dec
mov
call
or
pop
(bad)
hlt
mov
dec
mov
or
(bad)
cli
call
mov
or
(bad)
shl
bound
call
pop
ins
push
out
cmp
xchg
out
fneni(8087
popf
sub
mov
cmp
cmp
xchg
out
fneni(8087
popf
sub
lahf
push
jns
pushf
cmps
jno
out
xchg
lahf
mov
xchg
cmps
(bad)
loopne
mov
cmp
sti
mov
pushf
cwde
jl
mov
pop
(bad)
rcr
jns
call
bound
arpl
and
mov
xor
jns
(bad)
adc
and
call
push
sub
push
fisubr
bound
adc
xchg
cmp
xchg
cdq
jns
out
cld
cmp
popf
xchg
popf
dec
cmp
loope
xor
movs
jns
out
cld
cmp
popf
xchg
mov
pop
loope
xor
movs
xchg
call
jns
xchg
add
ja
cdq
jns
out
cld
cmp
popf
xchg
fisttp
pop
loope
xor
cmps
jns
out
cld
cmp
popf
xchg
leave
dec
cmp
loope
xor
add
jae
pop
(bad)
loopne
out
cmp
jbe
retf
jmp
jns
call
mov
fld
int
dec
jns
loopne
jne
call
adc
call
push
bound
(bad)
es
adc
xchg
cmp
xchg
cdq
jns
out
cld
cmp
popf
xchg
pop
dec
cmp
loope
xor
cmps
jns
out
cld
cmp
popf
xchg
inc
dec
cmp
loope
xor
or
pop
(bad)
loopne
out
cmp
jbe
retf
jmp
jns
call
cmp
bound
fld
add
bound
stc
jmp
xlat
rcr
or
(bad)
rcl
bound
call
movs
imul
bound
sub
mov
xor
jns
(bad)
inc
das
bound
adc
xchg
cmp
xchg
cdq
jns
out
cld
cmp
popf
xchg
stc
dec
cmp
loope
xor
movs
jns
out
cld
cmp
popf
xchg
in
cmp
loope
xor
bound
adc
cmp
xchg
cdq
jns
out
cld
cmp
popf
xchg
cmp
pop
loope
xor
jne
cmp
(bad)
pop
(bad)
loopne
out
cmp
dec
xchg
ds
bound
jl
jns
xchg
jns
loopne
cs
inc
mov
jns
loopne
cs
dec
jns
pushf
cmps
imul
out
fneni(8087
popf
sub
adc
cmp
jns
sbb
or
pop
and
rcl
out
in
popf
clc
std
(bad)
jne
cmp
popf
sub
adc
cmp
hlt
xchg
mov
hlt
xchg
add
rcr
cmp
xlat
test
loopne
xchg
inc
xor
jns
fbld
xchg
cmp
xchg
movs
es
stos
mov
xlat
fwait
data16
dec
xor
test
pop
adc
mov
xchg
out
shl
lock
pushf
(bad)
in
loopne
jns
jmp
bound
inc
push
sar
aaa
jno
dec
pusha
js
mov
test
loopne
or
in
xchg
pop
bound
shr
dec
jns
neg
(bad)
loopne
mov
push
pop
mov
cmp
adc
cld
fwait
loop
xchg
or
call
cli
xor
push
sbb
cmp
popf
sub
mov
movs
jns
or
pop
loop
(bad)
popf
xchg
adc
aam
pop
bound
aas
push
bound
call
mov
dec
mov
pop
(bad)
lock
push
call
loopne
sub
loopne
xchg
adc
popf
xchg
adc
or
pop
bound
fwait
ret
and
call
xchg
xor
mov
(bad)
test
loopne
hlt
mov
dec
mov
adc
cli
popf
xchg
loopne
cmp
pop
or
call
xor
mov
or
cmp
out
(bad)
cmp
mov
push
bound
pushf
(bad)
(bad)
loopne
jns
add
mov
push
(bad)
clc
cld
push
jns
xchg
out
(bad)
sub
add
xchg
inc
out
cld
lahf
loop
xchg
out
(bad)
sub
or
aas
or
pop
or
call
cmp
popf
push
cmp
imul
pop
popf
int3
xchg
loop
xchg
fisttp
cmp
movs
xchg
ja
cmps
jns
or
pop
(bad)
hlt
mov
dec
mov
push
pop
(bad)
cli
dec
movs
cld
inc
in
xchg
hlt
dec
clc
cld
outs
pop
jns
xchg
out
(bad)
sub
mov
push
cmp
jmp
xor
pop
bound
popa
jns
not
push
cmp
loop
inc
in
xchg
xchg
out
shl
inc
ds
stos
jo
adc
jo
pop
bound
cmp
bound
dec
dec
jns
xchg
call
push
bound
call
rcl
dec
jns
jne
adc
and
call
outs
lods
popf
xchg
loopne
jns
fwait
movs
jns
pop
out
cld
mov
popf
xchg
mov
int3
loopne
cli
call
imul
pop
or
stos
test
popf
xchg
sub
mov
jns
call
mov
cs
(bad)
loopne
mov
(bad)
loopne
xor
pop
bound
xor
and
add
cmp
jb
pop
bound
shl
dec
jns
pushf
cmps
ins
xor
pop
push
push
adc
cmp
neg
in
loop
xchg
fsub
push
loopne
xchg
or
fld
and
out
(bad)
loopne
cli
shr
das
les
mov
loopne
cli
call
jecxz
fidiv
ins
mul
cmp
movs
cld
cmps
loop
xchg
pop
bound
call
repnz
out
xor
loopne
inc
adc
bound
(bad)
idiv
cmp
jmp
xchg
sbb
mov
inc
cmp
mov
loope
sub
mov
push
int3
jp
sbb
pop
xor
mov
call
pop
(bad)
sub
jnp
sbb
pop
jmp
push
pop
(bad)
jns
clc
jmp
iret
xchg
movs
sub
aas
dec
jns
loopne
jne
dec
fs
mul
cmp
xor
mov
sahf
sub
xor
xchg
inc
and
pop
or
cmovnp
xchg
movs
adc
dec
mov
adc
(bad)
lock
call
jmp
mov
sahf
sub
and
pop
xor
push
cmp
mov
sahf
es
stos
mov
cmp
bound
mov
dec
xor
pop
mov
pop
or
push
(bad)
aaa
bound
fldpi
adc
jmp
mov
push
loopne
jns
xchg
out
retf
loopne
sub
test
pop
or
push
hlt
mov
dec
mov
mov
popf
cli
call
pop
xchg
pop
bound
sub
bound
cmp
xlat
adc
(bad)
lock
hlt
int
gs
mov
xchg
aaa
dec
fnstsw
jl
jl
int3
mov
jns
jns
cmp
push
bound
lds
jg
pop
(bad)
hlt
jle
xor
mov
pop
out
cmp
dec
or
pop
arpl
loopne
stc
call
jns
test
xchg
loopne
cmp
xchg
daa
lea
std
push
cmp
loope
and
bound
js
bound
sub
jp
mov
les
jbe
pop
pushf
cli
ret
adc
in
fs
mov
xchg
aaa
dec
xor
adc
call
jmp
push
pop
or
pop
or
sbb
js
pop
or
pop
or
cmp
bound
cmp
adc
bound
fcomp
adc
fst
or
jne
xchg
fwait
ret
cmp
imul
push
cmp
or
jne
xchg
idiv
cmp
neg
js
jne
xchg
lahf
ret
cmp
test
xchg
xor
cmp
idiv
js
jne
xchg
add
cmp
imul
xchg
movs
dec
bound
push
xor
push
movs
pop
bound
push
push
xor
pop
movs
pop
bound
push
push
xor
jmp
and
bound
push
xor
or
xor
bound
out
push
mov
jne
xchg
das
sti
cmp
not
js
jne
xchg
out
(bad)
cmp
test
xchg
mov
cmp
div
js
jne
xchg
xchg
cmp
mul
int
pop
bound
mov
cmp
xabort
inc
mov
pop
or
jp
mov
sbb
(bad)
ficomp
mov
jns
pmulhw
cmp
xchg
idiv
cmp
neg
cmp
or
jns
mov
pop
(bad)
fiadd
and
push
pmulhw
cmp
xchg
lahf
ret
cmp
div
cmp
jecxz
jns
bound
jecxz
dec
pop
and
shl
inc
jns
mov
or
pop
bound
(bad)
loopne
push
movs
pop
bound
push
jecxz
dec
daa
mov
jns
retf
inc
jns
mov
or
pop
bound
(bad)
loopne
gs
pop
bound
push
jecxz
dec
adc
inc
jns
mov
or
pop
bound
(bad)
loopne
push
movs
pop
bound
push
jecxz
dec
sbb
inc
jns
mov
or
pop
bound
(bad)
loopne
pop
movs
pop
bound
mov
push
xor
pop
mov
sbb
and
push
pmulhw
cmp
xchg
fwait
ret
cmp
div
mov
xlat
or
test
sbb
es
lea
les
jns
push
xchg
stos
jecxz
xchg
pop
bound
rcr
imul
addr16
jns
sahf
xchg
cmp
jle
xor
shl
jns
jne
xchg
sub
cmp
jne
das
mov
sahf
push
jle
xor
jle
dec
cmp
dec
or
pop
or
lahf
xor
out
and
(bad)
mov
jnp
pop
mov
pop
(bad)
fidivr
and
pop
popf
dec
jo
xor
pop
xchg
daa
adc
jnp
adc
jne
adc
pop
loop
push
fstp
mov
rcl
inc
jns
mov
jmp
adc
jmp
push
pop
popf
dec
jo
popf
dec
jg
and
(bad)
arpl
xchg
daa
adc
jnp
adc
jbe
xor
loop
push
ret
mov
mov
rcr
inc
jns
mov
or
sbb
or
or
pop
or
mov
bound
cmp
adc
mul
cmp
jmp
push
push
xor
or
push
jge
pop
bound
push
pop
popf
dec
jo
popf
dec
jg
and
(bad)
dec
cmp
bound
pop
jne
adc
pop
bound
push
jae
cmp
ja
mov
rol
jns
mov
jecxz
or
jns
pop
popf
dec
jo
popf
dec
jg
and
(bad)
pop
cmp
bound
inc
jne
adc
pop
bound
push
pop
mov
mov
rol
inc
jns
mov
or
sub
jp
or
sub
fnstcw
or
into
arpl
ja
jns
pop
or
pop
bound
ja
mov
loopne
bound
cmp
sbb
pop
bound
cmp
push
dec
movs
pop
bound
cmp
push
cmp
sub
js
pop
or
cmp
bound
adc
jns
dec
or
loope
bound
loope
and
pop
mov
pop
pop
(bad)
fisubr
and
push
pop
popf
dec
jo
popf
dec
pop
mov
or
cmp
adc
pop
loop
push
ret
mov
mov
shr
jns
mov
jecxz
mov
bound
gs
adc
bound
not
cmp
or
pop
bound
cmp
js
pop
popf
dec
rol
inc
jns
jne
xchg
sub
cmp
jne
xchg
jg
cmp
ja
js
pop
or
mov
jns
jne
adc
pop
loop
push
ret
mov
mov
rcl
inc
jns
mov
jecxz
addr16
bound
pop
popf
dec
jo
popf
dec
pop
mov
arpl
jne
adc
mov
jns
ja
jns
dec
or
mov
pop
mov
pop
and
shl
bound
cmp
xchg
pop
ret
jne
adc
ja
jns
pop
or
cmp
bound
cmp
bound
push
je
cmp
ja
mov
rcl
repnz
jmp
int3
clc
jmp
xlat
xchg
movs
adc
loopne
dec
movs
pop
bound
cmp
push
cmp
sub
jns
pop
or
das
push
bound
pop
bound
ja
mov
loopne
bound
cmp
and
or
cmp
push
dec
movs
pop
bound
cmp
push
cmp
sub
adc
push
bound
fsub
cmp
jns
dec
or
loope
bound
loope
and
pop
mov
pop
(bad)
fimul
xchg
jns
pop
popf
dec
jo
popf
dec
jg
and
(bad)
test
pop
bound
or
bound
jnp
jns
pop
xor
sub
and
lds
xchg
out
cmp
(bad)
cmp
jne
xchg
sub
cmp
jne
xchg
pop
ret
jne
adc
sub
pop
or
cmp
bound
cmp
bound
push
sbb
mov
rol
neg
jns
or
sub
jp
or
sub
fnstcw
or
xor
cmp
jns
pop
or
pop
(bad)
stc
imul
jns
or
pop
bound
cmp
inc
jns
mov
or
sub
jp
or
sub
fnstcw
or
popf
bound
ja
jns
pop
or
pop
(bad)
stc
imul
jns
or
pop
bound
cmp
inc
jns
mov
jmp
adc
jmp
push
pop
popf
dec
jo
popf
dec
pop
mov
or
ret
bound
jne
adc
pop
loop
push
ret
mov
mov
cmp
bound
cwde
aaa
std
cmp
jne
xchg
sub
cmp
jne
xchg
jg
cmp
jne
adc
xchg
jns
pop
or
pop
(bad)
stc
imul
jns
or
pop
bound
cmp
inc
jns
mov
or
sub
jp
or
sub
fnstcw
or
test
cmp
js
pop
or
pop
(bad)
stc
imul
jns
or
cmp
adc
pop
shl
pop
bound
mov
dec
xor
(bad)
mov
xchg
and
(bad)
or
test
out
xor
pop
mov
loopne
lock
ja
mov
daa
call
jb
xor
dec
xor
pop
mov
pop
(bad)
hlt
jle
xor
rcr
inc
jns
jne
xchg
sub
cmp
jne
das
mov
sahf
push
jle
xor
jle
dec
cmp
dec
or
pop
or
lahf
xor
out
and
(bad)
mov
jnp
pop
mov
jg
and
pop
popf
dec
jo
xor
pop
xchg
daa
adc
jnp
adc
jne
adc
pop
loop
push
(bad)
mov
mov
rol
data16
pop
jecxz
push
pop
bound
pop
popf
dec
jo
popf
dec
jg
and
xor
cmp
cli
sar
adc
jbe
xor
loop
push
ret
mov
mov
rol
jns
mov
or
sbb
or
or
pop
or
mov
bound
cmp
adc
idiv
pop
cmp
jmp
push
push
xor
or
push
jge
pop
bound
push
pop
popf
dec
jo
popf
dec
pop
mov
or
push
sbb
stc
imul
jns
or
loope
bound
cmp
lea
pop
rcl
push
je
cmp
mov
push
pop
arpl
dec
mov
and
bound
dec
lds
jns
pop
or
cmp
bound
cmp
cmc
cmp
loop
stos
mov
je
cmp
adc
bound
sub
add
bound
cmp
js
pop
popf
dec
rol
jge
cmp
xchg
sub
cmp
jne
xchg
jg
cmp
ja
js
pop
or
or
add
(bad)
stc
imul
jns
or
loope
bound
cmp
xor
stc
call
lock
jne
xchg
sub
cmp
jne
xchg
jg
cmp
ja
js
pop
or
or
xlat
cmp
bound
cmp
loop
push
ret
mov
mov
rol
jge
cmp
add
loopne
adc
loopne
dec
movs
pop
bound
cmp
push
cmp
sub
jns
pop
or
push
or
cmp
jns
dec
or
loope
bound
loope
and
pop
mov
dec
mov
popf
dec
jo
popf
dec
jg
and
invd
push
push
cwde
bound
ja
jns
pop
or
pop
xor
jns
and
lds
xchg
call
cmp
cmps
mov
pop
xchg
sahf
mov
mov
cld
jne
xchg
sub
cmp
jne
xchg
pop
ret
jne
adc
pop
bound
mov
push
adc
pop
bound
push
or
cmp
ja
mov
rol
jns
mov
or
sub
jp
or
sub
fnstcw
or
dec
or
cmp
bound
fwait
pop
bound
pop
bound
ja
mov
loopne
bound
cmp
inc
cmp
shr
pop
bound
cmp
push
dec
movs
pop
bound
cmp
push
cmp
sub
js
pop
or
and
dec
or
loop
bound
loope
and
pop
mov
inc
mov
popf
dec
jo
popf
dec
jg
and
(bad)
test
pop
bound
les
bound
add
jns
pop
xor
ins
(bad)
and
lds
xchg
mov
bound
mov
bound
cmp
xchg
jg
cmp
jne
adc
xor
ins
push
pop
(bad)
stc
imul
jns
or
pop
bound
cmp
jg
cmp
mov
pop
popf
dec
jo
popf
dec
pop
mov
or
pop
or
pop
(bad)
stc
imul
jns
or
pop
bound
cmp
jg
cmp
jns
sub
jp
or
sub
fnstcw
or
jnp
es
or
jns
lahf
xor
out
and
push
mov
jnp
pop
mov
pop
(bad)
ficomp
and
push
pop
popf
dec
jo
popf
dec
jg
and
or
loop
pop
bound
jnp
bound
add
jns
lahf
xor
fadd
and
in
cmp
jne
xchg
test
jns
xchg
cmp
not
mov
loopne
mov
fcom
mov
gs
mov
xchg
and
test
call
fmul
jns
lahf
bound
jne
adc
jne
adc
pop
(bad)
stc
les
xchg
cmps
add
loope
les
out
cmp
bound
cmp
jecxz
pop
(bad)
lock
dec
mov
and
(bad)
cli
pop
jecxz
mov
cmp
jmp
int3
clc
jmp
rcl
xor
jle
xor
jle
xor
(bad)
pop
bound
cmp
(bad)
stc
rcl
xchg
pushf
cmps
popa
add
or
xchg
or
loop
bound
outs
(bad)
and
push
xchg
mov
inc
jmp
ret
push
mov
adc
xchg
daa
sub
(bad)
cmp
ja
jns
lahf
mov
cdq
loopne
cli
inc
jmp
or
jmp
fs
cmp
mov
pop
xor
test
xchg
js
xchg
movs
clc
aad
and
cmp
leave
jns
out
cld
cmp
popf
xchg
cmp
and
(bad)
shl
jns
call
aas
xchg
push
or
mov
hlt
mov
dec
mov
pop
(bad)
lock
ss
lock
lahf
pop
xchg
push
adc
scas
and
call
and
bound
bound
mov
pop
popf
xchg
dec
mov
pop
(bad)
stc
inc
loopne
or
ja
enter
cld
cmp
popf
xchg
mov
pop
jmp
cmp
jmp
mov
push
or
pop
(bad)
hlt
mov
dec
mov
inc
loopne
or
ja
enter
cld
cmp
popf
xchg
aad
cmp
loop
les
pop
push
cmp
popf
sub
mov
pop
xchg
push
adc
call
mov
bound
out
dec
mov
push
pop
push
cmp
popf
sub
jae
jns
lahf
pop
xchg
push
adc
scas
and
call
outs
or
mov
push
or
pop
(bad)
hlt
mov
dec
mov
pop
(bad)
stc
inc
loopne
or
ja
retf
jns
out
cld
cmp
popf
xchg
inc
outs
cmp
loop
les
pop
push
cmp
popf
sub
pcmpeqw
xchg
xchg
mov
xchg
out
(bad)
lock
lahf
pop
xchg
lods
and
call
(bad)
or
push
pop
or
pop
mov
mov
cmp
popf
xchg
(bad)
out
pop
mov
add
and
mov
and
jp
mov
sti
cmp
shr
js
cmp
lahf
mov
call
cmp
stc
sbb
mov
xor
ins
xchg
pop
jno
clc
data16
xchg
call
dec
mov
and
(bad)
hlt
sbb
push
loopne
mov
xor
ror
jns
inc
cmp
frstorw
outs
xchg
xchg
xlat
daa
push
cmp
test
pop
cmp
pop
(bad)
clc
aad
pop
jns
ja
retf
jns
out
cld
(bad)
call
dec
outs
cmp
mov
xor
bound
call
call
loopne
js
push
or
mov
hlt
mov
dec
mov
xchg
call
fnop
cmp
xchg
out
int3
loopne
sub
sti
ja
cmp
popf
jp
push
or
mov
dec
mov
lahf
push
bound
stc
jmp
fucomip
popf
xchg
out
xchg
push
adc
lods
and
call
call
add
ja
retf
out
cld
(bad)
call
in
cmp
loop
enter
cmp
lods
and
call
push
or
mov
loopne
or
ja
retf
out
cld
(bad)
call
xor
jmp
cmp
jmp
mov
loopne
or
ja
retf
out
cld
(bad)
call
push
ins
cmp
loop
enter
xor
adc
call
and
bound
mov
push
retf
out
cld
(bad)
call
popf
ins
cmp
loop
enter
xor
adc
lods
and
call
fimul
bound
out
xchg
lahf
mov
or
mov
outs
or
ja
retf
out
cld
(bad)
call
(bad)
pop
loop
enter
ss
adc
stos
and
call
sahf
or
mov
loopne
or
ja
int
pop
out
cld
(bad)
call
jmp
or
repnz
xchg
dec
mov
loopne
lock
call
xchg
xchg
xchg
movs
adc
and
nop
sar
cmp
fwait
xchg
(bad)
loopne
mov
int3
loopne
stc
xchg
call
mov
bound
and
jns
sahf
mov
xor
(bad)
lock
call
xchg
xchg
xchg
movs
push
retf
xchg
movs
dec
loopne
bound
dec
mov
mov
jno
call
xor
mov
js
pop
(bad)
stc
xchg
sahf
xchg
pop
ins
std
repnz
sahf
test
loopne
jbe
and
jns
lahf
fild
xor
dec
js
pop
movs
cld
(bad)
cmp
xchg
lahf
mov
mov
(bad)
loopne
mov
(bad)
loopne
adc
(bad)
and
call
mov
fld
xchg
call
pop
jp
cmp
xor
cli
call
mov
lock
jmp
jl
fild
mov
pushf
pop
sbb
sub
jmp
adc
and
call
cs
bound
out
dec
mov
pop
bound
and
and
call
ret
jns
fstp
ja
bound
pop
out
cld
(bad)
out
xchg
inc
ins
cmp
fcmove
addr16
bound
int3
loopne
lock
xchg
out
ret
loopne
sub
mov
test
loopne
sub
mov
popa
mov
(bad)
out
xchg
lods
outs
cmp
loope
das
xchg
out
(bad)
sub
or
cmp
popf
cli
sti
sbb
hlt
mov
dec
or
mov
dec
mov
sub
(bad)
cli
dec
or
call
sahf
or
push
push
or
mov
dec
mov
cmps
loopne
cli
call
imul
pop
out
cld
(bad)
jecxz
xchg
ret
je
cmp
cld
ret
out
xchg
call
mov
loopne
jbe
sub
cmp
xlat
add
mov
mov
test
loopne
sub
pop
jne
cmp
cmp
xchg
out
(bad)
sub
sub
cmp
popf
sub
sub
cmp
popf
xchg
sbb
loopne
stc
xchg
sahf
xchg
loopne
or
xchg
out
int3
loopne
mov
(bad)
loopne
xchg
xor
out
lods
int3
loopne
cli
xchg
xchg
xchg
sbb
test
out
xchg
lahf
mov
scas
mov
loopne
mov
(bad)
loopne
cld
(bad)
loope
xchg
mov
jns
out
cld
(bad)
loope
xchg
sbb
mov
ret
loopne
sub
(bad)
cmp
popf
hlt
xchg
pushf
xchg
dec
mov
sub
(bad)
xchg
xchg
push
jle
dec
or
sar
jo
cmp
popf
clc
int
jae
cmp
popf
sub
stos
xchg
add
pop
(bad)
hlt
mov
dec
mov
sub
(bad)
hlt
xchg
pushf
xchg
dec
jmp
xchg
div
push
ret
out
xchg
bound
les
or
or
pop
mov
sub
bound
ror
jae
cmp
popf
sub
xlat
xchg
ret
loopne
xchg
ret
xchg
push
mov
xchg
loopne
xchg
ret
loopne
xchg
or
mov
pop
or
dec
add
xchg
push
or
(bad)
test
(bad)
loopne
daa
pusha
(bad)
mov
pushf
cmp
cmp
fldcw
pop
xor
ins
movs
ror
jmp
or
jmp
push
mov
cmp
jne
adc
pop
jge
sar
jo
cmp
popf
jo
imul
dec
jae
cmp
xchg
xor
bound
sahf
mov
add
(bad)
dec
movs
pop
bound
cmp
mov
int
loopne
lock
ja
in
pop
mov
sub
bound
les
bound
pop
cmp
test
sub
bound
sar
ja
cmp
bound
aas
push
bound
call
dec
pop
mov
cmp
fdivr
out
cld
mov
popf
xchg
imul
sub
popf
xchg
pop
ins
cld
and
sbb
int
pop
push
push
imul
cmp
addr16
clc
jnp
jns
test
stos
jbe
jb
mov
xchg
xchg
cli
in
mov
mov
cmp
cld
pushf
movs
cmp
repnz
xchg
call
or
pop
ins
iret
xchg
xor
rdpmc
lock
call
mov
lock
jmp
mov
xchg
test
xchg
loopne
repz
and
sti
sahf
mov
mov
les
mov
pop
(bad)
lock
jmp
movs
cld
xchg
repnz
xchg
(bad)
rcl
loopne
dec
mov
rcl
and
sar
out
loopne
sub
adc
cmp
bound
cmp
popf
sub
loopne
xchg
jb
bound
call
jge
popf
xchg
loopne
xchg
repz
adc
xchg
out
xlat
loopne
sub
sbb
cmp
xchg
push
adc
mov
pop
or
jecxz
bound
stos
mov
mov
out
pop
mov
sub
(bad)
hlt
xchg
xchg
xchg
push
jge
pop
(bad)
rcr
bound
jns
adc
pop
cmp
ja
mov
fwait
pop
bound
mov
dec
mov
adc
popf
xchg
pop
(bad)
bound
jecxz
bound
stos
mov
mov
jmp
sub
(bad)
hlt
xchg
pop
in
pop
(bad)
rcr
bound
jns
adc
pop
cmp
ja
mov
movs
pop
bound
mov
mov
push
mov
xor
bound
mov
jmp
push
pop
or
sbb
jns
pop
or
pop
and
cmp
ins
jns
xchg
daa
int
sbb
xor
cld
pop
fiadd
jle
xor
mov
dec
mov
xor
stos
lea
jnp
pop
js
push
adc
xchg
pop
shr
les
loopne
int
ret
ins
jns
jne
hlt
jle
xor
cmp
cdq
jns
popf
or
mul
xchg
and
pop
fiadd
jle
xor
mov
dec
mov
sub
(bad)
hlt
mov
lea
jnp
pop
js
push
adc
xchg
pop
shr
les
loopne
int
fwait
ins
jns
jne
hlt
jle
xor
cmp
cdq
jns
popf
or
test
ja
pop
fisubr
fcom
popf
repnz
xchg
mov
cmp
xchg
daa
cdq
call
mov
sbb
cmp
ja
push
cmp
or
mov
daa
lods
push
sbb
jns
jne
xchg
adc
jns
pop
mov
ror
arpl
fsub
movs
cmp
bound
pop
mov
sub
(bad)
lock
movs
cmp
sbb
jns
xchg
mov
mov
cmp
movs
cmp
pop
bound
xchg
daa
lds
icebp
jbe
pop
or
sub
jp
or
pop
or
pop
or
pop
or
aad
adc
les
jns
(bad)
mov
xchg
punpckldq
pop
std
cmp
ja
leave
jns
or
pop
mov
xor
test
mov
cmp
pop
jns
pop
loop
adc
mul
ss
bound
inc
(bad)
and
test
xchg
repnz
xchg
pop
mov
cmp
in
xchg
repnz
xchg
call
cmp
jmp
adc
jmp
mov
ficom
mov
xchg
dec
or
inc
(bad)
and
dec
(bad)
cmp
ja
jns
lahf
mov
lods
loopne
cli
inc
imul
stos
and
fsub
(bad)
pop
bound
pop
bound
mov
dec
mov
xchg
icebp
popf
xchg
bound
cmp
or
or
pop
mov
pop
bound
rcl
out
aad
popf
sub
or
add
cmp
jne
adc
test
jns
pop
or
cmp
push
jns
pop
bound
rol
out
cmp
dec
mov
xor
and
cmp
aad
cmp
or
pop
or
pop
xchg
ror
jns
push
mov
and
fnsave
outs
xchg
xchg
xlat
daa
pusha
jns
dec
xor
test
pop
sub
movs
sbb
jle
loope
sub
out
cmp
bound
xor
fwait
pop
js
pop
mov
sub
bound
fwait
adc
pop
pop
push
pop
bound
cmp
ins
cmc
xchg
pop
bound
daa
arpl
adc
pop
cmp
bound
mov
pop
bound
retf
bound
ja
mov
push
stos
and
and
xchg
(bad)
loopne
lock
push
call
pop
popf
int3
xlat
loop
xchg
cmp
xchg
pushf
cmps
imul
loop
xchg
xlat
xchg
(bad)
loopne
xchg
sub
bound
fild
mov
call
push
pop
ret
not
mov
fnclex
popf
xchg
call
aas
xchg
imul
scas
xlat
lahf
xchg
es
and
out
(bad)
loopne
push
mov
pushf
mov
mov
in
mul
popf
xchg
iret
push
dec
push
push
jmp
xchg
call
mov
xor
mov
push
pop
or
sub
fnstcw
mov
ss
(bad)
clc
int3
xor
cmp
jns
fwait
mov
sbb
push
stos
and
call
loope
pop
stos
and
lahf
pop
or
sbb
xchg
(bad)
hlt
popf
xchg
pop
or
call
push
stos
and
pusha
test
cmp
(bad)
lock
push
call
pop
pop
cmp
adc
push
cmp
bound
cmp
gs
pop
mov
cmp
(bad)
fdivr
and
add
or
loopne
jno
or
cmp
xchg
sahf
mov
mov
sub
cmp
xchg
loopne
mov
bound
sbb
fidivr
push
cmp
jns
push
inc
add
push
loopne
pop
push
dec
add
xchg
in
pop
push
push
add
neg
jns
push
pop
add
push
fdivr
push
add
ret
pop
push
ins
add
outs
out
pop
push
jne
sbb
jp
ins
cld
loope
bound
pop
popf
or
test
xchg
sbb
fdivr
push
imul
pop
push
jno
sbb
jp
pop
je
scas
jb
cmp
pop
imul
ja
xchg
pop
popf
or
idiv
jne
pop
ficom
bound
(bad)
loopne
lock
pushf
(bad)
movs
(bad)
loopne
jns
mov
(bad)
hlt
mov
dec
mov
aaa
pop
(bad)
lock
sahf
movs
std
and
bound
mov
dec
xor
push
popf
xchg
dec
popf
dec
rol
push
js
loopne
jns
aas
or
pop
or
jecxz
bound
cmp
xor
dec
rol
imul
pop
jmp
or
jmp
mov
arpl
into
loop
xchg
call
push
outs
(bad)
cmp
push
ins
cld
mov
loopne
jns
xchg
out
(bad)
loopne
sub
sub
fdivr
mov
xor
(bad)
hlt
mov
popf
xchg
pushf
stos
xchg
pop
js
push
cli
ret
sbb
fs
push
or
ficomp
hlt
cmps
push
popf
xchg
dec
mov
call
pop
xchg
pop
bound
jne
adc
ja
mov
rcl
push
std
call
jns
js
jns
cmps
in
cmp
xchg
sahf
mov
mov
call
mov
dec
or
(bad)
hlt
mov
dec
mov
aaa
pop
(bad)
cli
dec
or
mov
dec
popf
dec
daa
mov
jns
repz
fistp
loopne
jns
aas
or
pop
or
pop
bound
cmp
xor
dec
daa
mov
jns
sbb
cmp
xchg
jge
pop
out
hlt
cmp
popf
xchg
and
dec
out
sub
jne
adc
enter
pop
mov
pop
bound
cmp
lods
jo
pop
mov
mov
pop
mov
out
(bad)
loopne
repz
loopne
dec
inc
sbb
inc
aas
or
pop
or
cmp
xor
mov
jns
(bad)
imul
loopne
cmp
loop
cmp
popf
xchg
xchg
out
(bad)
loopne
inc
sub
lock
ss
loopne
sub
loopne
adc
(bad)
and
call
scas
adc
jns
(bad)
les
bound
call
push
lahf
ret
cmp
neg
les
loopne
xchg
push
adc
jne
adc
enter
pop
mov
xor
bound
cmp
jne
cmp
mov
pop
(bad)
clc
aam
or
xchg
out
(bad)
loopne
sub
loopne
adc
(bad)
and
call
push
adc
jns
(bad)
les
bound
call
push
xor
cmp
div
jno
pop
loop
cmp
popf
xchg
push
adc
jne
adc
pop
mov
pop
bound
cmp
int
cmp
mov
cmp
(bad)
lock
cs
loopne
sub
loopne
adc
call
(bad)
adc
jb
les
bound
call
push
aaa
std
cmp
test
cmp
popf
xchg
push
adc
jne
adc
and
pop
mov
xor
bound
cmp
and
inc
cmp
(bad)
hlt
mov
popf
xchg
pushf
stos
xchg
pop
js
push
cli
ret
sbb
pop
push
pop
or
xor
xchg
pop
pop
bound
sub
jp
mov
pop
bound
std
call
push
adc
cld
(bad)
mov
addr16
loopne
inc
or
inc
add
adc
jne
adc
enter
pop
mov
pop
bound
cmp
mov
cmp
mov
loopne
xchg
push
call
xchg
sbb
shl
out
cld
cmp
popf
xchg
out
(bad)
loopne
sub
mov
mov
loopne
sub
(bad)
imul
cmps
imul
out
(bad)
loopne
sub
sub
jp
mov
cmp
(bad)
stc
xchg
popf
xchg
pop
pop
pop
push
pop
or
push
mov
cmp
xchg
xchg
sbb
les
inc
out
pop
mov
cmp
bound
std
call
push
adc
cld
(bad)
xchg
loopne
inc
or
inc
add
adc
jne
adc
leave
and
pop
mov
cmp
bound
cmp
jns
cmp
mov
(bad)
stc
mov
push
out
hlt
cmp
popf
xchg
and
dec
out
iret
scas
loope
xchg
mov
dec
ret
xchg
movs
hlt
mov
dec
out
cld
into
loop
xchg
dec
mov
into
loop
xchg
ins
jo
pop
loope
sub
xchg
sahf
mov
mov
loop
xchg
pop
or
pop
or
pop
bound
ja
out
pop
mov
ds
(bad)
lock
jne
adc
jne
xchg
test
inc
dec
stos
and
push
hlt
ss
sti
cmp
pushf
stos
xchg
pop
js
push
lock
jne
hlt
scas
out
lahf
xchg
dec
xor
or
xchg
xchg
loopne
mov
cmp
popf
sub
or
mov
pushf
xchg
neg
jl
pop
out
hlt
into
loop
xchg
and
dec
out
jns
mov
sub
loopne
xchg
div
jl
pop
or
call
cmp
cdq
jns
popf
int3
iret
loope
xchg
addr16
loopne
(bad)
(bad)
xchg
sub
bound
sub
fnstcw
mov
cmp
jne
adc
jne
adc
ja
jns
pop
or
pop
bound
mov
xchg
xchg
loopne
or
loop
xchg
loopne
mov
push
pop
popf
int3
iret
loope
xchg
stos
data16
xchg
outs
jmp
repz
stc
pop
push
bound
xchg
mov
mov
loopne
sub
repnz
popf
int3
iret
loope
xchg
jmp
jns
jne
hlt
mov
dec
or
repz
cmp
xlat
(bad)
(bad)
xchg
loop
bound
stos
xchg
xchg
loopne
or
pop
bound
cmp
bound
xchg
call
jne
adc
and
mov
ja
int
pop
or
pop
loop
mov
fstp
ds
jno
pop
bound
xor
lock
xchg
movs
xchg
sub
pop
ins
les
xchg
popf
or
test
imul
repz
ins
dec
jmp
jb
jge
cmp
pop
outs
inc
cmp
bound
call
sub
ins
cld
cld
pop
bound
sub
fdivr
pop
jb
sub
out
pop
(bad)
lock
call
jmp
add
mov
jp
pop
jb
sub
fdivr
mov
aas
pop
bound
lahf
ret
cmp
push
xchg
xor
cmp
test
jns
adc
dec
daa
mov
jns
inc
data16
xchg
call
fcomp
daa
mov
jns
adc
dec
adc
data16
and
push
movs
pop
bound
loopne
pop
movs
pop
bound
add
inc
out
pop
pop
ins
mov
pop
bound
loopne
xchg
cmps
pop
bound
add
inc
out
pop
pop
mov
int
pop
arpl
pop
bound
rcl
jmp
int3
clc
jmp
retf
xchg
movs
dec
loopne
push
xchg
cmps
pop
bound
pop
bound
lahf
ret
cmp
push
repnz
cmp
and
push
movs
pop
bound
pop
(bad)
clc
aam
jge
cmp
gs
pop
bound
pop
bound
aaa
std
cmp
push
bnd
cmp
and
pop
movs
pop
bound
pop
bound
fwait
ret
cmp
push
repnz
cmp
push
mov
ins
les
xchg
xor
shr
jns
hlt
fs
cld
sbb
cmp
and
fnsave
cmp
inc
jno
pop
(bad)
jmp
cmp
inc
jne
pop
(bad)
jmp
cmp
inc
imul
pop
bound
loopne
ins
enter
stos
pop
bound
loopne
pop
enter
stos
pop
bound
loopne
push
enter
stos
pop
bound
loopne
dec
enter
stos
pop
bound
loopne
dec
enter
stos
pop
bound
dec
jmp
push
mov
cmp
(bad)
lock
lahf
pop
pop
dec
cmp
pop
mov
and
ror
jns
pushf
cmps
jno
pop
sahf
jo
imul
pop
mov
lahf
pop
pop
dec
in
gs
fdivr
fist
jl
out
or
hlt
arpl
xor
gs
imul
aas
push
mov
mov
cmp
jns
neg
(bad)
loopne
mov
inc
jecxz
cmp
bound
pop
jb
cmp
jb
cmp
call
bound
xchg
ss
xor
mov
xchg
out
xor
xchg
es
xor
xchg
(bad)
cmp
xor
bound
loopne
cmp
pop
(bad)
jmp
cmp
inc
cmp
stos
pop
bound
loopne
xor
pop
(bad)
jmp
cmp
inc
xor
stos
pop
bound
loopne
sub
pop
(bad)
jmp
cmp
inc
sub
stos
pop
bound
loopne
and
pop
(bad)
jmp
cmp
inc
and
stos
pop
bound
loopne
sbb
pop
(bad)
jmp
cmp
inc
sbb
stos
pop
bound
loopne
adc
pop
(bad)
jmp
cmp
inc
adc
stos
pop
bound
loopne
or
pop
(bad)
jmp
cmp
inc
or
stos
pop
bound
loopne
add
pop
(bad)
jmp
cmp
inc
add
stos
pop
bound
loopne
stc
enter
stos
pop
bound
loopne
std
enter
stos
pop
bound
loopne
icebp
enter
stos
pop
bound
loopne
cmc
enter
stos
pop
bound
loopne
jmp
stos
pop
bound
loopne
in
enter
stos
pop
bound
loopne
loope
pop
(bad)
jmp
cmp
inc
in
pop
(bad)
jmp
cmp
inc
fxch
pop
(bad)
jmp
cmp
inc
(bad)
pop
(bad)
jmp
cmp
inc
ror
pop
(bad)
jmp
cmp
inc
aad
pop
(bad)
jmp
cmp
inc
leave
enter
stos
pop
bound
loopne
int
pop
(bad)
jmp
cmp
inc
ror
(bad)
jmp
cmp
inc
vminps
stos
pop
bound
loopne
mov
stos
pop
bound
loopne
mov
stos
pop
bound
loopne
mov
pop
(bad)
jmp
cmp
inc
mov
pop
(bad)
jmp
cmp
inc
test
stos
pop
bound
loopne
lods
enter
stos
pop
bound
loopne
mov
stos
pop
bound
loopne
movs
enter
stos
pop
bound
loopne
cdq
enter
stos
pop
bound
loopne
popf
enter
stos
pop
bound
loopne
xchg
enter
stos
pop
bound
loopne
xchg
enter
stos
pop
bound
loopne
or
pop
bound
loopne
test
pop
(bad)
jmp
cmp
inc
jns
pop
(bad)
jmp
cmp
inc
jge
pop
(bad)
jmp
cmp
inc
jno
pop
(bad)
jmp
cmp
inc
jne
pop
(bad)
jmp
cmp
inc
imul
pop
bound
loopne
ins
iret
pop
(bad)
jmp
cmp
inc
popa
iret
pop
(bad)
jmp
cmp
inc
gs
pop
(bad)
jmp
cmp
inc
pop
iret
pop
(bad)
jmp
cmp
inc
pop
iret
pop
(bad)
jmp
cmp
inc
push
iret
pop
(bad)
jmp
cmp
inc
push
iret
pop
(bad)
jmp
cmp
inc
dec
iret
pop
(bad)
jmp
cmp
inc
dec
iret
pop
(bad)
jmp
cmp
inc
inc
iret
pop
(bad)
jmp
cmp
inc
inc
iret
pop
(bad)
jmp
cmp
inc
cmp
pop
(bad)
jmp
cmp
inc
cmp
stos
pop
bound
loopne
xor
pop
(bad)
jmp
cmp
inc
xor
stos
pop
bound
loopne
sub
pop
(bad)
jmp
cmp
inc
sub
stos
pop
bound
loopne
and
pop
(bad)
jmp
cmp
inc
and
stos
pop
bound
loopne
sbb
pop
(bad)
jmp
cmp
inc
sbb
stos
pop
bound
loopne
or
pop
(bad)
jmp
cmp
inc
or
stos
pop
bound
loopne
add
pop
(bad)
jmp
cmp
inc
add
stos
pop
bound
loopne
stc
iret
pop
(bad)
jmp
cmp
inc
cmc
iret
pop
(bad)
jmp
cmp
inc
jmp
stos
pop
bound
loopne
in
iret
pop
(bad)
jmp
cmp
inc
loope
pop
(bad)
jmp
cmp
inc
in
pop
(bad)
jmp
cmp
inc
fxch
pop
(bad)
jmp
cmp
inc
(bad)
pop
(bad)
jmp
cmp
inc
ror
pop
(bad)
jmp
cmp
inc
aad
pop
(bad)
jmp
cmp
inc
ror
(bad)
jmp
cmp
inc
vminsd
stos
pop
bound
loopne
mov
stos
pop
bound
loopne
mov
stos
pop
bound
loopne
mov
pop
(bad)
jmp
cmp
inc
mov
pop
(bad)
jmp
cmp
inc
test
stos
pop
bound
loopne
lods
iret
pop
(bad)
jmp
cmp
inc
mov
stos
pop
bound
loopne
movs
iret
pop
(bad)
jmp
cmp
inc
cdq
iret
pop
(bad)
jmp
cmp
inc
popf
iret
pop
(bad)
jmp
cmp
inc
xchg
iret
pop
(bad)
jmp
cmp
inc
xchg
iret
pop
(bad)
jmp
cmp
inc
mov
pop
(bad)
jmp
cmp
inc
(bad)
iret
pop
(bad)
jmp
cmp
inc
or
pop
bound
loopne
test
pop
(bad)
jmp
.byte
