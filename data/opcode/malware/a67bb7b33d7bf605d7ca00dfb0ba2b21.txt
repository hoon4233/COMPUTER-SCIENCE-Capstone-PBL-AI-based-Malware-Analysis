stos
add
ja
add
add
mov
mov
push
clc
imul
nop
push
ret
enter
push
hlt
stos
jp
sahf
mov
pop
jp
xchg
cmps
sub
popf
pop
inc
(bad)
jo
push
fsub
mov
mov
pop
imul
pop
cs
push
js
test
clc
fidivr
or
shl
pusha
cmp
cwde
mov
sahf
imul
bound
mov
(bad)
stos
pop
or
sbb
sbb
xchg
(bad)
out
pop
jae
xchg
sub
out
icebp
add
mov
pop
adc
pop
(bad)
ss
adc
sti
jecxz
cli
cmp
pop
sub
mov
leave
push
das
ror
dec
lds
aaa
sbb
mov
cmp
jnp
retf
jl
fisttp
pop
retf
mov
(bad)
sar
mov
sbb
test
dec
cmps
std
or
imul
sbb
and
xor
jle
pop
not
(bad)
gs
sbb
neg
mov
mov
dec
es
and
inc
or
xchg
aaa
adc
pop
in
int3
and
in
mov
data16
sar
xor
dec
mov
mov
sbb
div
popf
iret
sahf
bound
sub
test
sbb
sub
stos
imul
retf
xchg
daa
pop
lods
xchg
xor
push
mov
cdq
xchg
jl
imul
add
pop
repnz
xor
adc
add
mov
xchg
xchg
add
fiadd
pop
mov
adc
es
xchg
in
jne
cpuid
sbb
push
inc
add
fisttp
cmp
pusha
adc
adc
push
dec
jno
rol
jl
div
xchg
in
inc
scas
fbld
cdq
fwait
add
sbb
mov
(bad)
daa
dec
mov
sti
jno
inc
adc
adc
xchg
out
inc
jl
adc
or
movs
icebp
imul
dec
fs
imul
test
jae
jo
ja
jbe
fs
test
jo
fs
mov
ss
push
pushf
cwde
lds
add
xchg
shl
out
shl
mov
lods
les
in
cmp
outs
xor
xor
jb
icebp
cmc
and
retf
adc
pop
fcomip
mov
in
test
mov
retf
xchg
mov
fmul
adc
imul
cmp
sbb
jbe
enter
jecxz
jno
movs
sbb
cmp
sti
xchg
add
mov
mov
inc
call
lahf
mov
dec
test
pop
jl
cmp
jmp
shl
and
mov
pop
pop
adc
dec
lahf
add
dec
pop
jae
pop
mov
shl
sti
sbb
sti
xchg
test
pop
xchg
xor
int3
fld
dec
add
sahf
dec
jae
imul
dec
cwde
mov
adc
stos
mov
dec
adc
push
das
push
cmp
add
popa
leave
xor
xor
cmp
push
in
ss
ja
dec
xchg
int3
outs
in
call
pop
sub
pop
inc
mov
push
(bad)
and
xchg
int
xchg
loope
or
loopne
imul
sub
jg
add
imul
popa
int
cmps
mov
mul
sbb
mov
jno
xor
jae
daa
ins
outs
xlat
test
ret
adc
std
inc
mov
rol
cld
sbb
or
in
and
shl
sbb
cld
stos
ficomp
ins
jo
xchg
push
aas
out
in
loope
push
pop
ja
cmp
push
mov
(bad)
imul
lock
push
cmps
cmp
cwde
sub
jle
(bad)
rol
movs
loop
call
cmp
test
hlt
xor
mov
repz
push
shl
sub
aas
pop
(bad)
xlat
fcom
mov
sbb
rcr
sub
inc
popf
fiadd
push
mov
xor
loop
mov
(bad)
retf
mov
mov
lods
in
daa
sbb
sub
int3
jg
in
sbb
and
ds
or
xor
ret
or
mov
lods
ret
pop
add
(bad)
jecxz
(bad)
outs
mov
or
mov
int3
xor
sub
sub
gs
xchg
adc
stc
push
and
aam
cwde
push
cmps
xchg
cmp
loop
fwait
jb
das
add
jmp
push
dec
pop
fist
jb
pop
ss
pop
pop
ret
stos
push
mov
and
ins
lahf
jmp
cli
frstor
sub
adc
loop
out
stos
lahf
jle
movs
mov
(bad)
out
mov
out
icebp
call
loope
test
jg
push
dec
in
mov
cmp
in
ins
ret
lock
lock
inc
movs
(bad)
sub
xchg
ins
mov
xor
lea
jg
mov
push
adc
mov
mov
jg
mov
shr
stos
jge
adc
es
sbb
or
pop
cmp
or
test
icebp
adc
mov
mov
xchg
push
and
cwde
sbb
jne
lods
adc
mov
das
das
cdq
push
dec
jmp
cld
(bad)
hlt
dec
ja
and
mov
or
pop
lock
xlat
fidiv
fdivr
gs
adc
ss
ret
stos
xor
mov
lahf
cli
mov
std
hlt
pop
dec
or
pop
xchg
das
push
repnz
les
jg
test
and
fidiv
mov
cmp
shr
fist
cmp
push
repz
jge
fcmovu
rcr
push
dec
lahf
sbb
or
ficom
test
inc
lahf
out
scas
sub
je
pop
mov
stos
and
(bad)
cmp
je
ins
test
cmp
xchg
fcmovnu
xchg
cmp
pushf
icebp
jmp
mov
inc
xchg
dec
add
lock
sbb
mov
adc
repnz
jno
aaa
and
aad
lds
test
rcl
pushf
jl
ss
push
push
cmp
push
or
arpl
dec
call
bound
sbb
fwait
movs
mov
adc
scas
push
stos
sahf
out
xchg
pop
les
sub
add
ins
stc
lods
rol
xchg
dec
in
adc
xchg
or
lods
sub
sbb
pop
pop
ret
(bad)
dec
dec
and
das
dec
lock
inc
pop
inc
xchg
mov
lods
xlat
cdq
inc
cdq
in
out
cld
mov
xor
xor
pop
lods
jns
mov
cmp
hlt
ret
jge
push
push
icebp
jbe
rcl
mov
addr16
test
call
xor
xchg
mov
call
js
stc
cs
xor
pop
xchg
dec
(bad)
jns
retf
add
ret
cmc
jnp
call
rcl
jle
jl
shr
shl
lea
gs
dec
jmp
ss
ret
mov
jne
inc
and
mov
lea
jo
call
repnz
loope
sbb
pop
movs
adc
push
jmp
mov
pop
shl
iret
inc
(bad)
xor
lea
cdq
addr16
add
enter
psllq
xchg
sbb
xchg
dec
mov
lahf
in
in
xchg
(bad)
adc
stos
sbb
adc
inc
stos
hlt
in
adc
dec
leave
movs
int3
mov
ja
mov
jmp
cmp
repz
repz
push
dec
or
fnstsw
daa
je
out
adc
loopne
popf
adc
test
fidiv
sub
mov
mov
push
add
inc
mov
das
scas
or
fwait
call
push
xlat
mov
fisubr
cmp
in
xchg
xchg
xchg
jge
jno
out
push
into
cmp
jmp
loope
clc
sbb
sti
cmp
or
les
push
pop
push
xchg
sbb
push
sahf
xchg
mov
std
test
pop
sbb
push
call
xchg
ret
fcmovu
stc
or
mov
dec
push
adc
stos
pop
(bad)
lahf
mov
enter
pushf
xchg
lea
sbb
cmps
inc
enter
xor
mov
arpl
and
xor
stos
inc
lds
scas
jle
rcr
dec
test
inc
mov
movntps
int
jae
pop
ins
cdq
fild
sahf
leave
call
cdq
cmp
mov
stc
jno
sbb
dec
scas
dec
push
call
call
inc
mov
idiv
mov
js
icebp
or
jg
or
(bad)
xchg
or
scas
mov
xchg
hlt
sub
mov
jl
cld
xchg
xor
inc
mov
leave
jg
retf
hlt
mov
dec
sahf
(bad)
in
les
xchg
bound
push
sbb
(bad)
jg
add
jmp
xchg
xor
and
fdiv
xchg
in
jno
fild
jb
mov
popf
and
sub
push
mov
xchg
sbb
bnd
xchg
cs
fsubr
mov
jmp
cs
push
and
mov
or
addr16
mov
repnz
xlat
xor
add
add
add
inc
shl
nop
jmp
pavgb
push
lea
or
out
or
and
pop
jno
jmp
jecxz
loope
shl
or
loop
mov
cmps
les
movs
shl
scas
popf
xor
iret
push
daa
pop
lods
or
fnstenv
or
xor
stos
sbb
add
pop
push
std
xor
mov
cmps
adc
push
test
sbb
inc
cs
inc
xchg
mov
data16
in
loop
or
push
dec
mov
cmp
jb
aaa
push
and
inc
fwait
push
(bad)
fwait
mov
or
cmp
sbb
jns
sbb
xchg
out
xor
aaa
mov
rcl
shr
enter
mov
(bad)
and
ret
les
cmp
and
ror
push
cli
sbb
(bad)
sub
add
pop
adc
add
dec
(bad)
adc
inc
and
out
fstp
xor
into
dec
sub
mov
jge
mov
pop
test
or
test
pop
lods
fdiv
mov
jge
popf
push
mov
je
sar
retf
lea
in
(bad)
loop
call
mov
cmc
repz
fild
in
mov
call
rol
mov
test
jl
mov
call
jmp
movs
sub
in
push
and
sub
xchg
or
gs
cmp
rcr
cld
xchg
ficomp
inc
and
cdq
xor
mov
cdq
loop
je
out
jbe
and
mov
mov
dec
push
sahf
popf
aam
jp
adc
adc
fcom
push
cmp
movs
and
xchg
xchg
sub
ins
ins
jecxz
data16
outs
mov
cmps
add
mov
mov
lods
add
dec
or
add
xor
dec
cs
jp
jle
movs
shr
mov
push
ss
add
enter
in
and
das
test
ja
in
sar
cmc
mov
inc
mov
mov
std
arpl
int
(bad)
and
out
push
cli
test
es
adc
sbb
mov
adc
add
mov
push
jle
int3
mov
pop
push
pop
jnp
(bad)
hlt
sbb
imul
enter
jae
mov
and
sbb
and
xchg
stos
push
push
mov
dec
outs
sti
sbb
std
sbb
je
or
mov
cmps
cmp
jp
ds
push
push
mov
mov
imul
les
xlat
ins
lods
sti
fadd
repz
push
jg
in
call
dec
dec
les
dec
stc
add
imul
out
push
push
mov
mov
xor
mov
adc
inc
js
push
mov
jle
rcl
in
adc
gs
aad
fisub
test
dec
jb
jmp
push
jmp
stos
imul
es
cs
pop
jne
xchg
rol
push
mov
in
rcr
sbb
sub
ret
shl
ror
ss
aaa
push
mov
fldenv
xor
loope
shl
mov
fwait
shl
sbb
add
sbb
dec
stc
in
inc
imul
(bad)
push
out
mov
jl
rcl
mov
cmp
xchg
fs
or
mov
enter
pop
fdivr
dec
push
push
cmp
ret
imul
add
push
sub
ins
fisub
adc
xchg
dec
xor
push
cwde
test
inc
ja
push
add
retf
or
pop
idiv
nop
add
retf
xchg
xor
sbb
inc
add
repz
aas
inc
pop
test
mov
rcl
mov
mov
add
iret
jb
retf
(bad)
xor
jg
mov
mov
push
call
call
dec
nop
cwde
push
aad
add
mov
pop
dec
inc
int3
shl
bnd
popf
lds
pusha
cmp
std
test
add
test
ss
ins
inc
push
out
pushf
mov
jecxz
(bad)
mov
and
or
js
rcl
push
pushf
clc
inc
out
jbe
inc
les
jp
jmp
mov
mov
ins
adc
into
push
mov
cmc
jb
jb
mov
sbb
dec
mov
test
push
xchg
cld
call
cmps
clc
cmp
mov
mov
or
das
push
push
mov
dec
fwait
jno
mov
pop
mov
mov
stc
sbb
jg
push
xchg
xchg
mov
cmp
out
mov
adc
adc
in
sbb
fbstp
imul
mov
mov
scas
cld
ss
fwait
call
inc
mov
inc
or
pop
ja
lahf
mov
lods
daa
stos
dec
div
sub
push
mov
mov
jecxz
sbb
(bad)
xor
inc
retf
xchg
mov
and
call
lods
push
nop
repz
mov
std
push
stc
arpl
dec
mov
add
in
push
clc
inc
cmp
inc
cmc
xchg
dec
outs
pop
and
dec
daa
add
add
fstp
ret
adc
outs
inc
inc
xchg
ss
iret
adc
cdq
push
or
sbb
(bad)
mov
call
test
js
(bad)
repz
fmul
gs
xchg
adc
ret
jmp
leave
call
push
pop
std
xchg
mov
scas
jb
outs
sti
movs
inc
pop
push
pop
adc
scas
jnp
loope
sub
stos
push
adc
and
xor
pop
sub
mov
jb
pop
xchg
das
(bad)
es
es
adc
sbb
rol
jno
dec
mov
cmp
sbb
aaa
loopne
(bad)
xchg
push
inc
mov
jbe
cmp
nop
push
jo
icebp
and
mov
int3
sub
mov
(bad)
push
fadd
xchg
dec
mov
jns
cmp
mov
data16
sub
iret
popf
inc
pop
pop
out
ja
int3
adc
out
and
xchg
(bad)
retf
dec
dec
push
aas
fldcw
mov
mov
das
dec
cmp
in
sbb
jns
cmps
lea
imul
cmp
adc
les
aam
sub
xchg
cmp
mov
or
ss
in
aam
cmp
cwde
shr
mov
cmp
ror
jmp
xor
add
in
pop
mov
scas
mov
push
or
add
xchg
mov
and
xlat
xchg
mov
cmp
add
test
pop
stc
xchg
ins
retf
jecxz
int3
pop
mov
popa
pop
cmc
cmp
imul
cmc
cmc
add
add
fs
(bad)
inc
inc
jno
mov
pushf
jo
scas
push
sbb
inc
xchg
pop
enter
dec
(bad)
lods
sbb
or
adc
loope
or
mov
out
jp
xchg
(bad)
ins
xchg
(bad)
mov
in
dec
inc
(bad)
icebp
lahf
push
pushf
inc
(bad)
repz
xchg
mov
gs
push
push
imul
popa
popf
cwde
sahf
fsubr
sbb
add
jle
div
push
mov
push
arpl
inc
adc
cmp
rep
std
xor
mov
cs
sub
test
outs
loopne
xlat
clc
ret
mov
mov
xor
sub
adc
daa
imul
add
add
jle
loopne
mov
in
movs
xor
cld
add
(bad)
sub
jmp
jb
cmps
fistp
outs
test
popa
mov
mov
es
pop
or
lahf
and
push
call
mov
loope
fadd
xor
lock
xchg
stos
fidiv
xor
neg
or
mov
pop
mov
sub
imul
jge
leave
pusha
cmp
rcl
int
int
repz
or
cli
scas
leave
sbb
adc
nop
and
push
ret
mov
and
out
add
mov
push
push
xor
jp
and
cld
mov
minps
shl
mov
(bad)
or
popa
push
mov
cmps
cmps
jecxz
call
inc
jg
imul
mov
push
xchg
or
aam
loope
sbb
mov
pushf
ret
push
icebp
cwde
jle
ss
(bad)
sbb
scas
cmp
push
or
adc
adc
ss
arpl
xchg
pop
xchg
sahf
cld
adc
adc
cmps
push
fiadd
jae
sub
mov
call
call
xchg
mov
sbb
fsub
pop
sbb
fisub
cmp
sbb
jp
push
sbb
mov
sar
cmps
jmp
ror
mov
adc
or
sub
push
xchg
dec
add
push
fsubr
mov
pop
out
xchg
mov
pusha
retf
xchg
cmp
adc
and
mov
mov
sub
sahf
push
mov
and
mov
or
adc
(bad)
into
push
sbb
ret
stos
test
or
mov
jne
dec
dec
outs
imul
aaa
xor
outs
mov
adc
inc
xor
fxch
sar
mov
lock
mov
fdivp
adc
(bad)
mov
stc
int3
push
cmps
and
seta
lock
add
ins
mov
mov
pop
fiadd
add
shr
lea
in
ins
fisubr
mov
push
imul
dec
jmp
xchg
int
je
sub
(bad)
xchg
mov
and
mov
xchg
jnp
adc
sti
retf
mov
sbb
push
sbb
cmp
(bad)
mov
cmp
and
xor
aad
cld
adc
sub
adc
jecxz
pop
push
mov
dec
in
sbb
cmc
in
clc
sbb
mov
dec
jg
js
aad
and
jl
push
push
adc
dec
jl
ja
push
or
out
adc
aas
xchg
(bad)
retf
mov
adc
jmp
pop
sbb
push
into
inc
adc
jns
fcomp
sbb
rcl
push
pop
inc
add
retf
aam
pop
cli
xor
loop
lods
cmp
call
mov
fisub
mov
not
loope
call
rol
xchg
cld
inc
inc
add
cmc
jg
xor
pop
fist
add
dec
call
push
popa
or
xor
pop
daa
outs
fdiv
jb
mov
sti
pop
pop
mov
js
stos
cmp
inc
lods
mov
stos
lods
das
in
or
or
fcmovnbe
mov
sub
push
mov
pop
sub
pop
pop
cli
je
xor
in
fsubr
nop
pushf
xlat
jg
shr
mov
mov
or
inc
movs
(bad)
sub
adc
mov
mov
into
jmp
ret
fadd
cmp
sub
or
int3
jne
inc
jmp
sub
pop
jcxz
bound
sbb
cmp
test
repz
shr
add
sub
nop
mov
imul
pop
es
outs
add
aas
xor
leave
mov
or
inc
sbb
sub
pop
pop
add
xchg
jg
mov
(bad)
dec
pusha
dec
call
fmul
pcmpeqb
or
mov
xor
add
mov
mov
stos
popa
cld
jo
sub
sbb
imul
fist
xchg
sbb
aaa
ds
push
jl
stos
popa
mov
jecxz
jbe
je
pop
adc
adc
mov
pop
fcomip
cwde
enter
inc
jb
movs
and
loopne
out
fistp
aaa
cmp
adc
fsub
jo
ss
(bad)
xor
push
pop
mov
pop
xor
push
neg
loop
popa
xchg
popf
test
mov
scas
jp
int3
adc
je
mov
push
jmp
mov
or
aad
mov
ds
add
mov
stos
push
mov
shr
pop
hlt
inc
and
sbb
dec
cmp
bound
dec
mov
and
sub
or
jg
cmp
(bad)
test
lods
mov
xor
icebp
jno
rcl
ins
pop
std
in
adc
retf
mov
(bad)
fadd
or
cmc
xchg
xchg
or
dec
jb
mov
cmc
push
jg
xor
jle
shl
je
in
sar
(bad)
lods
fwait
in
popa
or
test
ret
lds
leave
cmps
pushf
sbb
lods
aaa
sti
inc
gs
inc
les
mov
jmp
xor
push
mov
jmp
and
pop
mov
cmp
cmp
add
pop
cmp
sub
dec
(bad)
xchg
adc
push
and
mov
or
adc
cmc
sub
dec
data16
jmp
cdq
hlt
std
(bad)
inc
(bad)
int
loop
daa
lods
cli
xchg
sbb
mov
sar
push
idiv
xchg
push
pop
movs
cli
outs
imul
inc
aad
fnstenv
lds
pop
arpl
add
test
aaa
and
add
shl
sahf
push
lods
push
adc
(bad)
icebp
movs
fwait
sub
dec
jb
fnstcw
lahf
sahf
mov
bound
(bad)
push
ret
enter
mov
sbb
xchg
pop
jl
or
unpcklps
xor
adc
ds
inc
in
fmul
rcr
int
(bad)
push
adc
pop
or
test
loop
scas
pop
cmps
add
adc
mov
scas
call
int3
dec
sub
fiadd
mov
xchg
cmp
xlat
dec
xor
(bad)
xchg
dec
fistp
(bad)
int
outs
inc
mov
fisttp
dec
repz
mul
mov
mov
inc
cmc
inc
cli
repz
shl
jmp
test
sbb
fmul
push
jle
jae
movs
adc
fadd
jge
xchg
inc
add
mov
jo
lahf
rol
dec
ins
das
adc
push
jp
jecxz
add
mov
inc
and
sub
mov
int3
mov
shl
call
mov
clc
call
sbb
or
inc
(bad)
xchg
inc
pop
push
fs
fwait
inc
jnp
scas
add
test
add
pop
cmc
inc
mov
mov
mov
ss
add
jle
cwde
push
add
sub
add
sar
jl
int
sub
outs
retf
mov
(bad)
cmps
out
aaa
in
mov
arpl
sub
enter
rcr
cmps
xchg
fnstenv
adc
dec
into
aas
xchg
cdq
jmp
js
inc
dec
pushf
inc
movsx
xchg
mov
push
mov
and
pop
sahf
stos
in
jg
jo
xchg
mov
mov
mov
jmp
jmp
xor
add
mov
push
jp
or
imul
sbb
in
push
jmp
lahf
hlt
pop
push
sbb
add
sbb
xor
retf
mov
arpl
push
add
cdq
pop
test
into
call
inc
rcr
mov
into
shl
or
dec
push
xor
lock
add
jb
xor
clc
inc
aas
dec
and
sbb
cmc
xchg
jmp
lods
test
sti
loop
sub
pop
xor
shr
aaa
out
and
mov
pop
dec
ret
pop
push
ins
jno
or
idiv
xor
xor
mov
xor
mov
stos
sar
adc
(bad)
and
mov
dec
repnz
push
data16
push
cmc
pop
popa
aad
inc
cmp
push
add
movs
sub
mov
jne
je
sbb
cmp
mov
imul
repnz
jns
jle
mov
cmp
cmp
(bad)
jle
push
xchg
mov
sahf
xchg
mov
movs
add
inc
rol
and
dec
ret
retf
jmp
div
popa
add
aaa
cmps
shl
xor
mov
mov
add
fild
xor
mov
jnp
push
sbb
sub
xchg
lods
mov
mov
call
loope
pop
pop
ja
lods
aam
jae
cli
lods
loope
(bad)
(bad)
fld
ror
popf
retf
add
scas
addr16
out
cdq
sub
dec
lock
pop
fild
fsub
mov
fwait
stc
xchg
sub
jmp
cmp
movs
and
(bad)
and
adc
aad
mov
ins
pop
aas
cwde
inc
mov
and
icebp
jne
aas
hlt
cdq
xor
pop
sbb
inc
pop
and
fistp
cmp
test
sub
dec
mov
mov
scas
adc
rcr
add
pop
mov
mov
adc
repnz
sbb
push
test
push
sbb
pop
ret
jae
dec
dec
ds
dec
and
bound
sub
push
out
pop
push
jmp
push
repnz
cs
mov
js
aad
cli
test
xchg
mov
xor
mov
adc
inc
sbb
jbe
(bad)
xor
aam
or
cmp
xchg
popf
and
movs
jmp
or
call
dec
pop
clc
pusha
setg
dec
in
xchg
sbb
sti
call
push
arpl
push
gs
pop
aaa
push
push
and
xchg
rcl
mov
or
pop
push
test
shr
adc
mov
xchg
and
jg
jbe
(bad)
and
div
inc
repnz
popa
xchg
mov
fdivr
xor
push
push
add
sahf
sub
mov
cmp
sub
popf
int
mov
and
mov
pop
mov
add
lock
jge
inc
ficom
mov
jmp
(bad)
call
aam
sti
fdiv
test
retf
push
ret
jbe
cmc
cmp
mov
jge
ret
(bad)
addr16
or
iret
popa
jle
xchg
adc
retf
jmp
mov
jle
cmp
lock
lahf
sbb
mov
pop
sbb
in
retf
push
and
xor
xor
sub
out
dec
sbb
or
mov
sbb
dec
ror
int3
add
or
sub
(bad)
movs
popf
inc
sbb
or
and
cmp
adc
jp
xor
xchg
aad
push
pop
loopne
pop
pop
ss
add
movs
mov
mov
push
inc
sbb
sub
ins
and
mov
rcl
mov
stos
adc
loopne
cs
fisubr
push
push
mov
sub
ficomp
lea
sub
cs
add
dec
dec
xchg
cmps
shr
sbb
cs
push
jo
pop
xor
mov
cmp
loope
je
clc
fld
jge
stc
pop
fisub
sub
jae
cmp
or
outs
add
xor
dec
push
and
dec
cmp
mov
xchg
ss
std
add
ret
outs
sbb
mov
aaa
mov
test
mov
outs
imul
gs
ret
ins
jnp
fnstsw
or
fwait
test
dec
add
pop
mov
inc
push
ret
sti
push
push
ss
sub
pop
mov
mov
mov
cmps
mov
test
movs
enter
ds
mov
fcmovnb
jo
add
mov
fmul
repz
ds
sub
je
test
dec
push
cmps
int
cmp
popf
ror
and
cmps
pusha
xor
push
jne
je
inc
shl
mov
jno
(bad)
jae
shld
iret
repz
cmp
xchg
std
mov
cmp
lock
retf
pop
mov
test
jb
out
fidivr
test
jecxz
out
cmp
sub
pop
jne
or
fisttp
mov
sub
jns
adc
rcr
push
scas
xchg
sub
adc
neg
js
retf
add
xchg
imul
sub
or
mov
jmp
mov
pop
or
mov
mov
mov
nop
psubb
test
mov
push
mov
jmp
das
loopne
scas
sub
cmp
stos
inc
xchg
jle
(bad)
cmp
inc
aad
jbe
fptan
sbb
or
cmp
popa
sub
cs
repnz
or
scas
mov
ja
icebp
sub
xor
or
xchg
xchg
ins
mov
jnp
sbb
push
cdq
mov
push
ss
ins
push
sti
pushf
bound
mov
and
pushf
loop
imul
popf
cli
add
aas
push
rcl
jle
push
mov
stos
jo
pop
call
adc
jmp
push
aam
mov
pop
scas
mov
jmp
and
mov
(bad)
xor
popa
shl
fidiv
jae
fidiv
pop
aas
(bad)
pop
mov
sbb
das
fadd
fnstcw
ins
adc
push
aas
add
rcl
retf
(bad)
test
(bad)
daa
jne
scas
cmp
movs
xchg
and
test
pop
sahf
jno
jno
adc
jno
push
retf
ret
mov
sub
mov
jno
push
fldcw
push
dec
retf
or
cmp
out
xchg
data16
sbb
lahf
popa
push
mov
cmp
ins
daa
mov
imul
mul
xchg
addr16
out
dec
mov
popf
in
out
mov
inc
dec
cmp
xchg
shl
xor
ss
jmp
dec
daa
mov
retf
jne
es
inc
mov
loopne
icebp
push
mov
mov
ins
(bad)
push
adc
xlat
daa
xchg
dec
push
sub
rcr
and
mov
call
sbb
(bad)
push
rol
adc
ins
mov
cmp
adc
call
jne
pop
lea
mov
bound
xor
jmp
push
jmp
pop
mov
(bad)
cdq
aas
cld
push
jae
test
ror
mov
jg
loop
mov
fisub
or
cmc
fwait
out
push
ficomp
ins
pop
dec
scas
icebp
mov
mov
hlt
pop
test
xchg
dec
mov
pop
mov
outs
aaa
fsubr
iret
sar
push
mov
stos
push
pop
lea
fld
repz
xchg
xchg
out
shl
mov
(bad)
and
xchg
inc
xor
xchg
ret
mov
mov
dec
jns
test
jns
cmp
jb
mov
mov
dec
xchg
shl
add
cmp
iret
outs
into
jb
sub
in
mul
or
leave
imul
int
adc
lock
inc
cmc
sar
scas
dec
mov
sub
add
mov
(bad)
out
dec
pop
mov
cmp
dec
out
push
mov
add
mov
stc
xlat
data16
xor
sbb
mov
cmc
jnp
stc
inc
movs
mov
fisubr
push
and
cdq
cmp
push
les
jge
daa
mov
dec
sub
aaa
fsub
mov
fwait
xchg
cs
sub
and
fnstcw
ficom
lea
int
shl
sbb
sbb
repnz
mov
push
jl
rcr
jecxz
int3
sbb
sbb
scas
inc
repz
jnp
adc
out
add
push
xchg
shl
add
pop
icebp
adc
(bad)
rol
int3
mov
or
das
pop
mov
push
lea
add
sub
inc
lea
add
pop
ret
gs
dec
pop
sahf
mov
cmp
push
xchg
leave
add
hlt
jmp
mov
mov
fimul
int
outs
rcr
(bad)
imul
arpl
jae
lea
fstp
pop
xor
push
mov
lahf
mov
dec
and
retf
je
push
call
scas
in
mov
sub
jo
je
adc
ss
mov
and
test
and
adc
movs
xchg
mov
lods
ror
or
adc
cmps
rcr
aam
pop
stos
xchg
dec
outs
xchg
das
cdq
ss
inc
or
aas
(bad)
cmp
xchg
mov
push
jmp
pop
mov
add
loop
in
je
movs
sbb
data16
push
fdivr
int
mov
xchg
pop
les
imul
loopne
adc
daa
retf
cld
sub
(bad)
cmp
clc
xchg
adc
imul
pop
ds
push
lods
adc
sub
imul
ror
sub
xor
test
cmp
xor
push
jns
mov
(bad)
jp
stos
adc
jmp
add
ret
mov
mov
(bad)
mov
ror
mul
shl
push
in
cmp
mov
mov
rcr
mov
cld
push
mov
data16
add
and
jl
and
mov
pop
cdq
adc
hlt
sub
inc
ficomp
and
mov
sub
clc
test
push
sub
or
jmp
mov
sub
jns
add
push
ror
rol
push
xor
mov
cdq
(bad)
fmul
fnstenv
das
pop
mov
push
mov
movs
sub
cmp
loopne
enter
add
inc
dec
rcl
popa
cmp
(bad)
outs
int
jmp
push
cmc
sub
fisttp
fisttp
sahf
xchg
and
ret
add
jecxz
cmp
call
sub
test
mov
lea
mov
(bad)
push
and
push
xchg
push
push
pop
mov
jnp
adc
in
pop
movs
repnz
ds
dec
loope
pop
ret
sub
bound
stos
xor
outs
movs
xor
and
cwde
sahf
jns
stos
fidiv
mov
dec
pop
popf
std
mov
xchg
mov
cmovb
mov
daa
cmp
jle
(bad)
enter
retf
xchg
push
shl
adc
das
popa
out
js
push
jmp
or
sbb
test
and
dec
push
xchg
jb
pop
mov
mov
mov
jg
in
aam
nop
jne
retf
dec
add
adc
push
call
loopne
lea
fadd
fisttp
push
add
jl
fild
ss
add
cmps
fstp
fs
dec
shl
lock
mov
mov
nop
test
pop
xchg
into
add
inc
stos
out
pop
cmp
in
xor
mov
je
call
push
or
dec
imul
cdq
stos
imul
pusha
add
push
mov
xlat
and
jae
scas
add
add
out
fcomp
sub
xor
cmp
(bad)
mov
sbb
es
fist
fld
mov
movs
add
lahf
pop
test
fwait
mov
movs
add
call
or
js
(bad)
cli
in
jge
mov
pop
aad
(bad)
(bad)
pop
pop
(bad)
outs
mov
data16
mov
loop
lods
push
bnd
add
add
sahf
jmp
mov
cmp
sar
call
inc
lods
xchg
(bad)
aad
inc
js
push
and
push
and
or
pop
test
sub
shl
fadd
jmp
cmp
pop
xchg
push
add
adc
fadd
retf
call
imul
jmp
stos
in
sub
arpl
shr
rcr
dec
and
clc
mov
in
push
jecxz
fmul
popa
cmps
call
mov
xchg
push
jb
jle
sbb
xchg
pop
xchg
cdq
sub
and
test
jmp
test
cmps
ins
mov
imul
cmc
jns
(bad)
cmc
sti
push
push
mov
jmp
cmp
sar
mov
sub
add
push
iret
push
fidiv
pop
inc
xchg
vcvtps2pd
repnz
mov
jno
in
inc
retf
out
pusha
cmc
lods
mov
xchg
or
call
cmps
in
outs
jp
repnz
lods
jp
push
pop
sbb
in
std
xor
mov
je
xor
push
cmps
add
mov
push
stos
dec
mov
das
mov
jae
or
jns
mov
cmp
data16
push
sbb
xor
iret
sub
inc
pop
xchg
mov
xor
bound
inc
int
hlt
inc
cwde
dec
inc
lock
test
and
loopne
mov
mov
shl
popa
lds
les
pop
mov
add
sbb
ret
cdq
xchg
daa
lods
ret
imul
mov
or
cs
ret
out
(bad)
xchg
or
je
out
loope
icebp
pop
aaa
out
xchg
sahf
cld
fcomp
inc
leave
(bad)
xor
pop
push
xlat
and
xchg
movs
test
mov
mov
mov
fstp
repnz
inc
cmp
fisttp
inc
(bad)
sub
xchg
xor
cmp
loope
xchg
inc
into
push
inc
xor
daa
xchg
mov
out
cld
das
leave
add
daa
push
cmps
ja
jnp
cmp
pop
aas
mov
rcr
dec
in
sub
inc
dec
call
call
adc
xchg
repnz
out
ins
sub
es
inc
push
test
cmp
call
sbb
ins
imul
sbb
fadd
pusha
ret
add
fldl2t
mov
mov
data16
fdivp
pop
mov
sbb
sub
(bad)
mov
test
inc
inc
sub
and
hlt
(bad)
xchg
pop
mov
popf
inc
es
mov
les
push
mov
jge
jge
push
pop
(bad)
ror
icebp
(bad)
jae
sub
sbb
sub
dec
adc
mov
mov
add
adc
nop
shr
jg
cmp
dec
ins
int
in
movs
call
xor
out
arpl
es
repnz
aas
add
sbb
iret
inc
repnz
fs
xlat
movs
mov
fsubr
js
mov
pushf
cmps
mov
test
or
cdq
fs
ret
test
xchg
adc
dec
out
mov
sub
ret
vmptrst
fdiv
sbb
xchg
add
retf
mov
jns
or
ins
jns
add
jge
jno
std
retf
dec
or
cmps
xor
inc
push
xchg
in
xchg
or
fmul
call
jmp
xchg
adc
(bad)
rsqrtps
inc
sub
test
pop
add
mov
movs
inc
mov
das
pop
(bad)
cmp
jg
mov
repz
or
jnp
push
dec
movs
xor
adc
arpl
call
xchg
mov
ret
mov
jns
test
js
adc
sbb
push
arpl
out
sub
sbb
sbb
imul
std
icebp
outs
call
inc
ja
push
xchg
ins
fs
fidiv
into
fiadd
jnp
dec
mov
adc
lods
mov
push
and
and
mov
sbb
int
and
cs
push
cmp
scas
cmp
sbb
rcl
pop
imul
stc
(bad)
jmp
(bad)
jmp
and
mov
(bad)
adc
mov
mov
call
ret
test
inc
sub
pop
bound
mov
fild
ds
xchg
fstp
sub
dec
(bad)
adc
jnp
(bad)
cmp
mov
pop
arpl
push
push
add
addr16
push
inc
or
je
lods
add
xor
mov
xor
out
jecxz
je
lods
mov
sub
imul
sbb
pushf
ins
cmp
mov
sti
inc
xchg
inc
dec
sub
sub
jae
dec
cmps
pop
xor
jge
movs
aas
pop
mov
aam
je
add
call
push
or
add
(bad)
fstp
dec
ficom
push
gs
mov
sub
loop
sahf
push
push
push
into
data16
lahf
jb
sbb
(bad)
cli
into
cld
mov
xchg
jnp
or
movs
pusha
in
cmp
and
hlt
jne
jmp
xchg
or
inc
pusha
shl
jge
ja
sub
retf
sbb
call
push
add
retf
jae
and
(bad)
mov
loop
je
cli
aad
cdq
sbb
sbb
inc
or
mov
scas
cmp
fimul
pusha
jmp
pop
rcl
aas
inc
jns
test
and
retf
cwde
cmp
neg
lock
cld
adc
enter
lahf
mov
loope
fdiv
dec
mov
and
add
call
adc
sub
imul
sbb
ins
push
sbb
push
repz
call
out
in
jnp
sbb
sti
mov
(bad)
sbb
ret
cmp
push
adc
fisubr
(bad)
fsub
push
mov
idiv
or
xchg
cmp
xchg
pop
cmp
mov
and
popaw
add
adc
jnp
in
ds
push
jmp
push
sti
(bad)
scas
jg
jnp
jge
inc
out
rol
cmps
cmps
add
mov
xor
push
add
dec
xchg
adc
dec
xor
inc
mov
add
call
mov
lock
test
(bad)
fld
mov
push
inc
inc
fs
in
cmps
adc
fild
in
pop
and
sub
jg
cdq
inc
div
ja
jecxz
push
adc
mov
jle
scas
int
(bad)
ins
outs
(bad)
push
fwait
and
cmp
(bad)
and
cmc
or
jp
xchg
mov
inc
(bad)
imul
mov
loop
fiadd
jg
pop
mov
add
loope
sbb
inc
aaa
add
jle
cmp
xor
xchg
ja
popa
mov
push
rol
popa
mov
test
push
out
jp
adc
cmp
ret
cmp
cmp
repz
xchg
and
repz
push
sub
rol
ins
cmps
arpl
mov
das
xchg
dec
inc
and
inc
sbb
fcomip
push
inc
and
push
sahf
cli
xchg
ret
push
push
loopne
mov
pushf
int
sub
test
jb
dec
cmc
fsubr
test
test
into
mov
push
shl
sbb
cmp
std
sub
mov
fcomp
in
adc
sbb
rcr
cmp
imul
in
dec
iret
sub
call
pop
xlat
cmps
(bad)
loopne
repz
sub
outs
fcmovb
push
aaa
(bad)
and
push
push
ds
xchg
cmp
retf
cmp
ss
scas
dec
sub
retf
test
inc
(bad)
sbb
xor
xchg
leave
iret
loopne
ins
arpl
mov
imul
push
pop
jmp
stos
add
pop
outs
adc
imul
sbb
add
pop
ret
inc
faddp
cmp
cmp
push
push
inc
(bad)
pop
nop
mov
jns
mov
into
mov
les
mov
sbb
shl
cmp
inc
or
mov
inc
xchg
or
(bad)
xchg
inc
or
push
jne
push
pushf
sbb
pop
neg
adc
and
adc
xchg
xchg
push
out
addr16
xchg
jnp
xor
xor
mov
xchg
adc
pusha
bound
movs
cmp
inc
icebp
ret
push
lock
shl
test
aad
(bad)
dec
je
sub
pop
adc
push
dec
adc
ss
fwait
inc
ins
inc
ins
lods
pop
aam
dec
push
ss
pop
cld
pop
jae
stc
neg
and
jecxz
fdivr
jle
les
mov
(bad)
neg
add
mov
adc
lds
sahf
arpl
repz
test
stos
(bad)
mov
mov
adc
pop
mov
xchg
xor
std
pusha
into
inc
call
nop
stc
xchg
test
add
or
xchg
jnp
sbb
daa
in
bound
sbb
sub
lods
mov
(bad)
(bad)
jb
iret
push
aad
xchg
xchg
hlt
jecxz
jbe
sbb
cld
mov
push
shl
aam
(bad)
jge
and
mov
pop
lea
cmp
dec
into
pop
sti
aam
add
fisubr
lea
mov
out
je
sub
add
fnstenv
mov
pop
les
outs
cmp
push
mov
js
lds
xchg
cmps
pop
inc
pushf
sub
icebp
call
mov
out
in
pop
mov
ficom
sbb
fbstp
gs
stos
sub
jno
je
shl
clc
addr16
ins
shr
adc
cmps
jnp
xchg
push
daa
popa
mov
popf
fcom
or
loopne
adc
lods
nop
xor
ins
cmp
mov
cmp
ja
pop
push
outs
mov
and
je
(bad)
sub
push
xchg
mov
inc
jle
mov
adc
icebp
sti
adc
loop
adc
mov
dec
nop
sahf
dec
in
push
xor
(bad)
mov
ret
mov
xlat
lea
aaa
cmp
xchg
mov
mov
mov
inc
test
mov
add
call
and
mov
shl
push
jnp
xchg
push
popa
pusha
aaa
pushf
inc
addr16
data16
cld
aas
push
shr
push
sub
bound
jbe
scas
jle
add
div
aas
scas
les
scas
ins
dec
push
mov
add
cmps
mov
xor
lds
pop
or
xchg
xor
mov
pop
(bad)
mov
pop
lods
jle
(bad)
jg
pop
imul
push
(bad)
dec
out
out
xchg
or
xchg
retf
sbb
in
mov
adc
sub
mov
mov
ds
leave
lods
xchg
mov
and
add
jmp
sub
add
sbb
lea
adc
mov
je
xchg
and
and
rol
push
loopne
mov
bound
inc
mov
mov
mov
repnz
xchg
mov
push
je
lds
adc
ret
cmps
lds
(bad)
les
cwde
mov
in
mov
mov
push
cli
loope
in
mov
add
icebp
out
daa
push
xor
inc
mov
imul
(bad)
out
pop
jns
enter
jb
outs
(bad)
scas
out
mov
dec
lahf
pop
out
pshufw
dec
cmp
inc
pushf
addr16
sub
popf
mov
mov
clc
(bad)
test
cmp
jo
inc
lds
pop
mov
inc
dec
cld
or
lods
outs
cmp
inc
lahf
add
jb
out
pop
dec
call
pop
fmul
fimul
lea
es
enter
mov
or
jns
push
fist
adc
ins
outs
push
inc
lds
mov
adc
inc
jmp
or
jle
neg
div
mov
add
xchg
cs
add
nop
jmp
ficomp
push
sahf
popf
mov
or
cdq
xchg
std
sar
add
add
in
mov
mov
sbb
cmp
sub
sub
into
loop
mov
rol
or
push
jl
lock
lds
bnd
iret
jne
pushf
call
mov
mov
and
mov
mov
adc
pop
and
adc
sub
mov
xor
rcr
(bad)
fdiv
sbb
lock
ror
mov
cli
fcomp
(bad)
xlat
movs
or
jmp
es
jb
sbb
pop
inc
retf
jbe
(bad)
out
mov
mov
inc
ins
jp
jmp
jp
mov
cmp
xor
mov
jb
add
push
sub
(bad)
icebp
inc
div
iret
jmp
mov
sub
movs
rcl
sub
jb
scas
pop
or
cmps
push
repnz
inc
dec
loopne
pop
jae
inc
(bad)
mov
jno
dec
out
push
push
sub
or
sub
pop
mov
(bad)
pop
jns
stc
adc
mov
and
push
aaa
scas
jle
xor
mov
sub
imul
in
jmp
inc
cmp
cmp
mov
jae
mov
or
adc
jl
xor
inc
daa
mov
pushf
das
jns
fild
jns
pop
outs
mov
sub
daa
loope
push
popa
sbb
xchg
(bad)
mov
xor
cmc
movs
cmp
pop
sub
test
(bad)
clc
xchg
mov
gs
and
std
add
mov
test
mov
inc
push
jp
dec
mov
adc
or
(bad)
dec
inc
mov
sbb
and
mov
xchg
sti
or
arpl
xor
cli
jp
or
fisubr
xlat
mov
outs
repnz
jmp
mov
sub
mov
add
push
and
and
lahf
pushf
addr16
push
loop
in
sub
lods
je
mov
fdivr
push
popf
out
stos
push
sti
push
not
add
fwait
mov
sar
dec
stos
add
mov
rcr
leave
adc
pop
push
outs
rol
sub
sar
mov
sbb
ret
aas
mov
dec
adc
mov
add
out
out
push
(bad)
mov
sbb
jne
push
jnp
cmp
aaa
add
clc
jle
pop
fwait
push
cmps
inc
fcomp
gs
shr
inc
fcomp
mov
push
push
das
pop
xchg
sub
or
(bad)
push
xor
fs
clc
js
sub
call
mov
lahf
cdq
sbb
and
or
jmp
mov
push
cld
and
cli
popf
mov
(bad)
out
add
push
sub
add
pop
mov
lods
jecxz
sub
and
pop
dec
mov
aas
cmps
shr
mov
ficom
xchg
dec
mov
and
es
xchg
and
imul
mov
rcr
xchg
dec
fidiv
nop
xor
inc
inc
pop
xchg
shl
jg
popa
rcr
(bad)
(bad)
fdiv
push
icebp
movs
mov
data16
fld
(bad)
xor
mov
aas
(bad)
outs
cmp
in
xor
inc
cmp
xchg
jne
lahf
xchg
xor
and
clc
in
loope
loopne
push
aad
fs
cmc
xor
mov
jge
test
inc
cmp
mov
ret
mov
mov
push
clc
adc
jmp
mov
mov
hlt
cld
cmp
mov
in
leave
dec
xchg
sub
inc
mov
push
daa
ss
emms
push
sbb
enter
adc
push
push
outs
loopne
mov
in
push
add
js
mov
sub
cmc
mov
outs
xchg
fsubr
cmp
fidiv
or
push
icebp
into
outs
dec
inc
ins
cmpps
scas
sub
out
xchg
inc
adc
ins
lea
retf
sub
mov
mov
nop
in
jmp
shl
mov
test
fist
fwait
icebp
test
aad
mov
jge
inc
pop
mov
lods
je
stc
pop
sub
vmwrite
mov
pop
add
std
hlt
js
cmps
dec
xor
test
cmp
inc
shl
cdq
in
pop
cwde
and
in
outs
inc
sti
cmp
add
es
pop
inc
test
cmp
mov
inc
pop
fnstsw
test
xchg
jp
inc
out
ds
(bad)
dec
lock
in
mov
ss
arpl
lea
xchg
add
or
enter
mov
push
stc
or
ja
nop
mov
out
call
sub
enter
in
out
pop
daa
fsub
cmp
jbe
jb
sbb
ret
mov
stc
sbb
pop
sbb
les
retf
icebp
pusha
xor
pop
sbb
(bad)
lods
jmp
es
icebp
std
pop
mov
xor
jmp
loope
push
jns
in
dec
das
add
and
aam
ror
cs
iret
mov
mov
and
xor
sub
clc
outs
or
xchg
jge
jns
in
xlat
jno
pop
sub
jecxz
jmp
leave
iret
popf
fsub
sub
xchg
mov
xlat
outs
enter
sub
sahf
fbstp
pusha
sbb
sub
movs
imul
mov
dec
pop
or
dec
fs
pop
mov
ds
sbb
stc
sbb
ins
cmc
leave
mov
jbe
sub
and
dec
mov
sub
std
fild
pop
jge
data16
enter
loopne
inc
push
mov
add
inc
lock
int
sub
or
or
rcr
mov
pop
popf
loop
cmc
mov
adc
push
inc
push
fnsave
fistp
out
rol
lds
xlat
push
cmp
jge
into
mov
add
shr
sub
mov
cdq
test
das
or
ins
push
(bad)
sbb
add
or
test
adc
sar
mov
inc
cmp
dec
sub
test
(bad)
cwde
movs
je
push
add
ja
dec
adc
jae
in
shl
into
loope
sahf
lock
int3
int
xor
loope
out
retf
out
and
cld
sub
sub
sbb
aad
cmp
sbb
pop
mov
mov
pop
aaa
push
and
sub
ins
push
and
mov
sub
jns
cmp
push
pop
movs
fucomp
cmp
or
sar
cmps
stc
mov
xor
mov
cli
iret
cmp
loope
ret
adc
mov
out
retf
xchg
(bad)
xchg
je
sahf
dec
(bad)
pop
(bad)
cld
add
mov
inc
jns
aam
xor
jle
arpl
jl
fidiv
dec
lds
fsub
mov
fidivr
adc
inc
stc
sub
lea
gs
fdivp
pusha
xor
sbb
in
xor
sub
call
fisubr
ds
and
mov
scas
dec
dec
add
lds
rol
fsubr
cmp
dec
(bad)
repnz
inc
inc
lahf
test
lahf
sub
sbb
fnstenv
pop
push
arpl
jle
call
pop
cdq
xor
fild
sbb
cmp
(bad)
daa
int
lods
pop
mov
pusha
add
jmp
mov
dec
cmps
icebp
js
xor
add
adc
mov
mov
cli
in
pop
push
push
in
xchg
sbb
sub
in
pop
and
adc
jbe
stc
loop
mov
sbb
addr16
sti
sub
in
cmps
xchg
leave
jb
fstp
xchg
icebp
repnz
sub
mov
leave
popa
and
bound
aas
imul
mul
test
jbe
iret
in
fs
adc
dec
mov
and
loop
pop
jge
clc
mov
adc
push
repnz
jae
into
sbb
sbb
mov
add
pop
dec
mov
shl
jp
jle
jmp
mov
lods
cwde
out
mov
jl
mov
sbb
jo
rol
mov
cwde
repnz
or
mov
ficom
js
sar
mov
loop
adc
fs
iret
aaa
cmp
mov
out
retf
loope
dec
lock
rcr
aas
and
jbe
(bad)
mov
stc
mov
cmp
xchg
cmp
repnz
je
std
inc
mov
xchg
adc
ficom
adc
mov
xchg
inc
push
ret
call
jns
mov
rol
and
jb
pop
ret
nop
clc
push
mov
mov
xor
mov
ds
icebp
mov
and
jb
mov
lods
xchg
stos
(bad)
das
out
xor
or
xchg
and
std
(bad)
(bad)
jle
out
pop
mov
ins
mov
test
jg
push
scas
push
jb
sbb
xchg
xchg
mov
xchg
bound
adc
fisttp
repz
lods
mul
and
push
imul
dec
cmp
(bad)
pop
sub
xchg
push
pop
loope
inc
push
(bad)
xchg
push
js
sbb
(bad)
sbb
int
push
ss
leave
inc
mov
mov
jae
or
cmp
dec
arpl
ja
push
ins
cld
inc
mov
ficom
std
sbb
pop
sub
pop
test
adc
or
mov
test
movs
pusha
mov
mov
jl
cld
stos
xchg
jne
gs
cmp
scas
inc
mov
aas
pop
repz
add
std
mov
es
cmp
sti
adc
movs
push
mov
xlat
stc
sar
popa
adc
xor
cs
(bad)
fisttp
mov
push
push
push
mov
mov
test
loopne
div
sbb
mov
adc
cs
fidiv
push
fwait
or
mov
xchg
cmp
stos
inc
clc
ins
in
jle
gs
sub
sub
lahf
(bad)
hlt
int3
cmp
adc
js
mov
inc
out
loope
aad
xchg
into
fwait
lods
lahf
cmp
sbb
add
and
sbb
loope
sub
or
addr16
fisttp
into
cmp
and
rdtsc
cmc
jns
data16
pop
or
jns
jb
iret
retf
and
sti
push
pop
push
sub
cmc
xor
repz
mov
sub
(bad)
sbb
fdivrp
jb
mov
mov
xlat
cmp
movs
aas
out
ficom
sbb
mov
xor
cmp
ret
inc
pop
inc
psrlw
sar
push
xor
in
enter
dec
fistp
push
adc
ror
inc
(bad)
pop
mov
mov
mov
and
dec
stc
jno
dec
sub
test
out
adc
shl
add
pop
inc
mov
fisttp
lock
dec
add
retf
pop
nop
cdq
test
fs
mov
imul
test
(bad)
mov
pop
jp
in
lahf
mov
mov
inc
or
popa
adc
mov
sub
push
fdivr
xor
imul
inc
cmp
test
jb
jnp
xchg
mov
push
icebp
sub
sbb
js
jne
and
jno
inc
xchg
xor
pusha
in
(bad)
and
scas
inc
adc
mov
test
mov
dec
sti
pop
imul
jmp
xor
pop
inc
cmps
mov
lahf
xlat
dec
nop
out
loopne
(bad)
jmp
and
or
sbb
les
ja
daa
dec
mov
inc
retf
mov
add
xchg
add
les
push
in
in
add
lds
out
(bad)
cmps
sbb
or
out
lea
cmp
mov
(bad)
push
test
xchg
jg
int3
sub
icebp
xor
jg
push
popa
add
and
push
xlat
push
shl
rcr
jae
jle
lock
jmp
mov
clc
in
shr
loope
push
mov
int3
repnz
xchg
jno
or
hlt
ret
sub
push
xor
in
xchg
push
xor
mov
cmp
clc
ret
push
fcmovb
int
das
in
lahf
std
leave
dec
mov
sti
loope
out
hlt
mov
xor
inc
jae
inc
add
retf
lods
mul
shl
sbb
push
mov
mov
out
pop
outs
gs
stos
out
pop
call
mov
and
and
(bad)
bound
mov
or
pusha
ret
cs
popf
cmp
add
jne
(bad)
sub
dec
inc
xchg
mov
dec
pusha
pop
stos
cmp
push
mov
pop
pop
test
(bad)
mov
mov
pop
push
aaa
cs
(bad)
into
lea
inc
in
cmc
pop
ins
sbb
pop
mov
int
aaa
cwde
outs
sbb
xlat
test
movs
call
repz
cmps
arpl
lods
cmp
mov
pusha
xchg
in
shr
jp
mov
in
cwde
ret
push
imul
or
push
jb
lds
xchg
jne
(bad)
cmc
xlat
fs
mov
sub
lock
mov
das
scas
xor
jecxz
sub
ins
js
stos
sbb
push
xor
stos
sub
pop
mov
es
sub
mov
test
fmul
xor
push
mov
dec
popf
ficomp
fdivr
push
mov
pop
mov
add
jbe
mov
push
call
sbb
icebp
shr
pop
xor
or
and
nop
mov
cmc
pop
or
iret
mov
xor
inc
mov
ja
jg
xchg
ss
xchg
setae
sbb
ss
bound
jb
mov
xor
mov
int3
dec
scas
shr
das
test
ret
xor
out
pushf
dec
mov
push
cmps
lods
sbb
jecxz
sbb
cld
movs
inc
jmp
bts
(bad)
dec
xchg
xchg
popa
xor
cmp
mov
jno
cmp
addr16
das
sub
mov
mov
fsubr
jg
mov
cmp
out
aad
jo
inc
and
fdiv
daa
inc
pop
ret
mov
pop
rcr
or
fmul
mov
add
or
mov
(bad)
dec
cmp
aaa
or
and
ja
aad
sahf
dec
dec
dec
pushf
(bad)
gs
stos
mov
int3
adc
in
(bad)
mov
call
stc
retf
push
cdq
add
and
pop
icebp
stc
ds
mov
xchg
mov
div
push
cs
or
and
scas
adc
jl
inc
leave
gs
repz
pusha
ins
mov
movs
cmc
xchg
js
fstcw
xor
test
loop
idiv
mov
mov
dec
sbb
rcl
outs
fdiv
outs
and
jb
scas
cwde
jmp
mov
push
cdq
mov
ja
jmp
outs
fmul
popf
loopne
call
shl
hlt
hlt
ficom
sub
iret
mov
or
movs
imul
nop
fwait
jge
jbe
push
test
and
or
jno
iret
mov
fdivr
jp
push
cmp
adc
fadd
in
cmps
and
and
cli
pop
xchg
xor
mov
es
imul
cmp
inc
loop
pop
aad
aas
mov
mov
push
loope
inc
add
fs
dec
bound
pop
ja
push
or
shl
mov
scas
scas
xchg
pusha
out
ins
aaa
in
pop
aaa
movs
mov
fdivr
dec
mov
xor
sub
mov
sub
popf
xor
out
push
scas
sub
xchg
xchg
inc
xchg
hlt
jecxz
dec
jmp
pop
sub
repz
cmp
lock
mov
(bad)
xchg
cmp
pop
pop
xor
dec
out
pop
dec
mov
movs
cmp
jnp
dec
bound
(bad)
pop
sub
rcl
js
dec
mov
sub
das
outs
imul
mov
enter
daa
xchg
or
lds
pop
lds
inc
xchg
(bad)
aam
jge
xor
jp
shr
xor
mov
xchg
in
out
add
push
in
inc
lods
clc
faddp
mov
mov
sahf
shl
pop
test
cwde
ja
pop
and
mov
cmc
or
jp
test
fwait
mov
(bad)
xchg
shl
sub
stc
repz
cmp
jle
test
ret
mov
dec
dec
jmp
add
jl
pop
mov
popf
into
test
stos
jle
dec
pop
pop
lods
mov
mov
inc
xor
push
dec
add
dec
gs
xchg
cld
pushf
mov
xlat
mov
mov
xchg
mov
adc
imul
mov
rcr
adc
je
cmp
inc
js
add
xor
adc
addr16
or
jo
inc
int3
retf
adc
adc
je
push
fisttp
or
sar
gs
cmps
(bad)
mov
dec
cmp
int3
sub
push
pop
push
loopne
clc
add
pop
xchg
cmp
mov
adc
(bad)
xor
sub
pop
pop
clc
add
mov
cld
mov
aam
fdivr
pop
jecxz
fwait
pop
fsubr
cmp
xor
gs
popa
or
icebp
int3
mov
or
and
cmp
scas
clc
add
sbb
pop
mov
push
popf
jbe
adc
outs
inc
lea
test
sbb
fwait
xchg
pop
pop
sub
dec
and
loope
push
out
jp
sub
inc
mov
push
test
in
xchg
out
sbb
inc
sbb
jge
push
scas
lds
mov
mov
mov
mov
xor
fistp
ret
pop
in
aad
test
std
lea
xchg
push
mov
jae
test
and
adc
push
dec
mov
jo
cwde
xor
ja
lods
mov
mov
inc
fiadd
lahf
jg
cmp
cs
imul
inc
fistp
and
mov
ret
pop
mov
sbb
mul
dec
push
adc
inc
test
fist
(bad)
sbb
ss
test
dec
or
push
mov
inc
outs
jo
test
or
and
sub
xor
pop
sub
xchg
xchg
fnstenv
das
mov
retf
pop
inc
mov
and
add
mov
fwait
sub
cmp
xor
sub
or
rcr
repz
movs
add
cmovg
xchg
sub
ds
mov
push
(bad)
mov
clc
cmps
pop
pop
dec
xchg
(bad)
in
pop
mov
jge
xor
aad
fwait
push
scas
shl
(bad)
shr
mov
sub
sbb
jmp
dec
jmp
les
repz
retf
xchg
xor
cmp
js
rcl
or
das
sahf
ja
pusha
push
cld
test
xchg
clc
cmp
sbb
or
add
inc
jnp
stc
sti
xchg
and
gs
xor
push
push
adc
ins
(bad)
loopne
and
xor
js
xor
adc
retf
jl
add
mov
mov
loop
push
push
call
adc
out
ror
cld
mov
fxtract
ror
xchg
jecxz
pop
mov
icebp
and
inc
ror
(bad)
loop
test
cmp
data16
(bad)
jb
(bad)
pop
ins
dec
mov
into
mov
aaa
jmpw
sahf
sub
add
int
ss
sahf
jl
nop
int3
mov
push
clc
xor
cmp
mov
rcl
push
mov
out
dec
jge
mov
out
pop
jmp
test
out
arpl
cdq
adc
pop
mov
push
outs
pop
dec
pop
rcl
or
push
fwait
cmp
call
fimul
jecxz
jle
jmp
xchg
cli
or
int
gs
out
jb
leave
push
mov
rcl
adc
imul
scas
xor
rcl
(bad)
ror
push
mul
xor
ja
pop
add
push
pop
pop
adc
jl
pop
sti
rol
repnz
ror
xchg
jbe
mov
scas
push
mov
jbe
test
sub
test
pop
in
adc
jnp
mov
pop
or
mov
pop
cmc
out
mul
sbb
mov
sbb
nop
es
dec
mov
dec
fcomp
nop
std
mov
sar
leave
lods
scas
mov
pop
xor
bound
cli
push
call
cmp
test
sbb
jmp
or
jnp
adc
jle
cmc
inc
sbb
lahf
jg
mov
out
cwde
std
adc
or
inc
cmp
or
mov
aaa
adc
inc
fs
(bad)
xor
or
push
mov
dec
(bad)
xchg
mov
aad
fs
sub
mov
sahf
sti
aaa
les
jmp
mov
iret
add
lods
adc
push
cmp
stos
into
sub
sbb
test
cmp
ret
inc
loopne
add
rcl
pop
pop
sbb
jmp
inc
push
cmp
xchg
jp
fwait
out
adc
add
js
pop
push
xlat
cwde
mov
aas
into
dec
add
inc
jo
sbb
test
adc
retf
and
cmp
adc
mov
cmp
cmp
push
(bad)
mov
pop
or
enter
movs
xchg
xchg
add
(bad)
lods
dec
(bad)
cdq
int
iret
pop
and
mov
or
out
bound
add
ret
call
inc
out
int
sti
pop
sub
int
enter
cdq
shr
pop
pop
cli
sbb
or
add
loop
loop
inc
icebp
add
cmp
mov
test
cs
jnp
or
and
pop
inc
push
in
cli
xchg
outs
mov
sub
(bad)
and
mov
mov
pop
popa
dec
and
mov
cmp
adc
jne
inc
jl
les
sti
(bad)
sti
and
test
xor
ins
cdq
cmps
movs
pop
ins
mov
jmp
add
jae
cmps
mov
jg
push
sbb
bound
dec
or
repnz
imul
daa
shl
and
aaa
sbb
sbb
outs
pop
adc
sbb
mov
(bad)
adc
pop
scas
pop
stc
and
lea
or
jecxz
dec
cdq
jne
sub
add
push
xchg
add
mov
inc
jecxz
mov
test
dec
pusha
fcmovnb
add
mov
inc
stos
ja
jg
aas
ret
call
shl
lock
pushf
pop
jmp
dec
retf
int
sbb
xor
test
retf
or
test
sahf
sub
add
jle
popa
inc
loopne
leave
rol
inc
icebp
shr
push
push
jg
(bad)
aam
fs
call
retf
sbb
and
inc
sub
mov
inc
clc
ror
jbe
mov
and
mov
xchg
cwde
out
jns
movs
jb
cmps
(bad)
mov
in
repnz
(bad)
not
fst
cmps
pop
cmp
xor
and
fisub
adc
mov
mov
addr16
cmp
arpl
adc
pop
xchg
int3
xor
jno
bound
imul
mov
mul
inc
cmpxchg
pop
add
adc
loopne
aaa
add
jb
shl
lods
sbb
sbb
xchg
sub
(bad)
lock
xchg
xchg
cmp
push
xor
cmc
mov
loopne
aas
xchg
sbb
and
xchg
add
push
jno
test
inc
rcr
xchg
pop
xor
pop
enter
and
sub
scas
jge
test
cmp
nop
and
cdq
js
retf
enter
mov
xchg
and
xchg
popf
clc
mov
dec
add
pop
mov
test
adc
call
push
add
test
jbe
lahf
retf
mov
sbb
in
dec
ss
in
adc
mov
mov
movups
fs
mov
int
movs
rcl
mov
ins
xor
fisubr
(bad)
jo
cli
jl
sar
jle
imul
pushf
aas
int3
sbb
imul
mov
sub
mov
and
sbb
mov
sub
stc
(bad)
pop
and
popa
jle
rcr
push
inc
cmp
push
sub
cwde
retf
mul
out
push
pop
dec
movs
adc
mov
scas
or
adc
(bad)
cmps
jge
or
push
add
dec
mov
cld
popa
pop
aaa
aad
adc
ss
enter
mov
mov
fisubr
out
aam
push
fnsave
and
iret
cmps
sub
inc
sub
shl
loop
mov
movs
sub
ror
dec
addr16
iret
sbb
es
and
and
xor
jo
std
les
xchg
test
ss
pop
(bad)
hlt
ja
scas
inc
mov
ret
mov
out
xchg
push
shl
dec
arpl
jge
inc
lds
call
dec
loopne
jl
adc
push
cmp
jge
xchg
data16
inc
mov
and
out
and
xchg
in
aad
and
(bad)
repnz
cmp
fiadd
dec
popa
push
push
mov
test
sub
and
out
les
ret
jbe
aam
jmp
mov
cmp
ret
std
dec
sbb
cs
daa
sbb
or
out
xor
xchg
adc
lahf
lods
cmc
lods
lea
mov
jge
mov
pop
rol
mov
inc
fsub
xchg
push
mov
and
adc
fsub
(bad)
clc
cmp
lds
in
sub
cmp
mov
ror
call
pop
(bad)
test
push
loopne
or
sub
push
imul
pop
mov
push
(bad)
leave
call
xor
imul
adc
mov
dec
and
mov
rcr
xchg
push
js
cli
pushf
adc
dec
pcmpeqw
out
sub
mov
mov
or
retf
(bad)
push
in
cmp
or
push
iret
mov
nop
movs
pop
test
mov
and
jg
sbb
inc
mov
fisub
inc
retf
and
cli
cmova
lods
loope
pop
inc
dec
imul
call
dec
sub
xchg
out
je
pop
push
jmp
dec
daa
inc
out
and
dec
xchg
rcl
stos
jno
popa
push
js
pusha
(bad)
sub
mov
add
dec
inc
or
enter
addr16
jmp
clc
mov
retf
sbb
(bad)
push
in
daa
pushf
into
push
dec
pop
mov
inc
cdq
inc
inc
out
neg
push
push
in
lea
imul
mov
fadd
call
sbb
cli
aad
mov
xor
push
push
loope
jbe
rcr
outs
arpl
int
js
ins
out
sbb
push
cdq
jb
push
idiv
dec
pop
jmp
data16
add
retf
rol
test
imul
xor
dec
push
inc
jnp
repz
sbb
push
lahf
ret
xlat
xor
and
cmp
lods
sub
ins
es
out
jle
adc
cmps
xchg
daa
outs
sbb
dec
int3
dec
fdivp
mov
cdq
movs
ins
pop
add
in
sar
push
add
(bad)
pop
xchg
jb
add
repnz
jecxz
shl
ja
xchg
(bad)
mov
addr16
jg
adc
adc
or
outs
xchg
mov
sahf
xor
out
or
ret
scas
dec
lock
(bad)
xlat
stc
retf
pop
test
into
frstor
out
sub
sub
xor
pop
or
xchg
mov
pop
pop
pop
fs
dec
push
dec
add
xchg
fs
mov
int
scas
or
int
or
stc
adc
daa
mov
sub
mov
movs
and
push
xchg
repz
or
mov
or
dec
mov
int
test
loopne
cmp
sub
loope
add
jp
push
out
sub
pop
pop
adc
and
lahf
bound
das
jb
pop
adc
ss
xor
and
mov
mov
xor
push
leave
mov
pop
push
(bad)
in
pop
sti
mov
(bad)
mov
or
adc
test
add
ds
stc
cmp
rcr
ins
fcmovnu
xchg
xchg
mov
call
mov
call
fwait
mov
xor
ret
int
jnp
data16
xchg
mov
push
mov
or
cmp
cmp
fld
enter
mov
jp
mov
jmp
cmps
ds
loopne
mov
or
cmp
test
xchg
test
inc
in
leave
cmp
inc
je
mov
jae
mov
and
adc
cmp
ins
(bad)
in
sbb
mov
xor
pop
adc
int3
push
add
cdq
fistp
ret
addr16
push
pop
mov
add
leave
in
cmps
scas
frstor
cmp
sbb
nop
retf
xchg
add
jg
shl
mov
cmp
ror
idiv
jmp
(bad)
pop
retf
test
cmp
pop
mov
xor
adc
iret
loopne
dec
ss
lock
mov
jmp
jp
push
push
pop
sub
mov
les
and
test
mov
in
pop
add
out
cmp
(bad)
pop
pop
mov
xor
jmp
imul
cmp
in
test
adc
js
fstp
js
outs
in
sahf
repz
(bad)
and
das
mov
cmc
adc
mov
dec
jmp
mov
inc
push
cdq
inc
dec
into
adc
in
mov
ret
call
jmp
stc
fistp
int
cs
inc
mov
(bad)
push
leave
sbb
std
int3
gs
or
out
push
(bad)
stos
das
lods
int
cs
push
mov
fs
adc
test
and
cmc
lds
mov
loope
mov
pop
out
movs
pusha
push
sub
jl
mov
dec
addr16
sub
(bad)
mov
adc
add
jnp
dec
push
push
cmp
fist
addr16
repz
cmp
xor
ins
call
pop
hlt
not
jae
aad
pop
push
push
sbb
test
cmps
enter
pop
dec
test
fucomip
mov
test
hlt
lods
push
ja
lods
daa
stos
xchg
inc
lods
fs
inc
mov
xor
xchg
sar
(bad)
ret
xchg
xor
mov
jmp
imul
push
(bad)
mov
(bad)
mov
ins
adc
pop
jmp
cmp
ds
and
jle
push
xchg
mov
add
sub
cmp
ficom
dec
xlat
or
inc
mov
test
sbb
iret
stos
xchg
lods
cmp
xor
inc
rol
ja
sbb
pop
loope
retf
adc
out
mov
pop
sbb
pop
adc
pusha
sbb
sub
(bad)
and
call
outs
push
into
add
lods
add
push
xchg
inc
sub
mov
loop
repnz
add
repz
xor
mov
cmp
dec
inc
mov
fild
ss
xor
(bad)
pushf
daa
mov
cmp
adc
jbe
jne
jno
pop
sbb
adc
pop
loop
push
sub
cmp
inc
dec
aam
or
aad
call
lds
push
xor
fcom
xchg
push
(bad)
xchg
out
jp
jmp
es
and
push
jnp
sahf
fstp
or
cmp
fsubr
mov
jne
mov
jl
push
fmul
ja
mov
and
fwait
cs
aaa
xchg
lea
adc
jmp
call
mov
adc
xor
push
adc
in
xchg
(bad)
fiadd
mov
and
and
ins
cmp
ret
movs
repnz
add
dec
adc
int3
xchg
jmp
ret
jae
mov
push
jg
mov
out
sbb
cli
lods
sub
jl
(bad)
aad
inc
jbe
pop
in
test
sub
and
xchg
xor
(bad)
arpl
out
pop
iret
rcl
jae
jmp
pop
clc
push
dec
les
and
arpl
es
fadd
xor
sar
aam
aam
std
stos
(bad)
cmc
into
enter
je
dec
call
sbb
js
fild
fsubr
cwde
mov
sbb
int3
xchg
and
push
rcpps
pusha
aam
sbb
pop
loope
push
mov
pop
inc
mov
pushf
or
pop
ror
(bad)
dec
les
and
add
or
xchg
int
fs
push
pop
push
mov
jmp
cmp
repz
jp
out
imul
mov
adc
je
push
mov
or
add
add
ficom
jns
adc
fcomi
inc
mov
sbb
pop
into
xlat
push
int
push
or
iret
fwait
cmp
jns
mov
or
mov
mov
dec
inc
sbb
mov
iret
arpl
ds
mov
push
push
pop
or
cmp
jg
movs
out
xchg
int
sbb
test
aad
in
xchg
sub
ins
push
mov
repnz
jmp
push
imul
(bad)
out
inc
fpatan
pop
or
adc
test
dec
jnp
repnz
in
jne
mov
mov
xor
ss
inc
mov
adc
jbe
mov
xor
adc
push
aam
(bad)
pop
add
adc
enter
pop
int3
shr
daa
inc
sbb
rcr
cwde
adc
push
lods
and
push
inc
fdiv
xchg
loope
xor
push
jmp
xor
out
dec
out
adc
div
mov
ss
mov
shl
mov
lods
ret
sbb
ins
and
repz
imul
aam
adc
test
jo
sbb
sbb
in
jns
cmp
stc
(bad)
mov
pop
int
aad
jmp
push
js
bound
std
lahf
inc
fnstsw
jg
jp
retf
jne
mov
daa
cmp
xor
(bad)
(bad)
sub
inc
sbb
sbb
inc
shr
pop
mov
and
dec
ror
out
jmp
sbb
ins
or
test
add
icebp
arpl
xor
lea
adc
mov
inc
outs
(bad)
pop
xor
mov
rol
jge
push
sbb
mov
test
fisub
mov
test
dec
push
das
mov
pusha
test
xchg
iret
xor
pop
out
pop
jno
inc
xchg
idiv
mov
inc
and
xor
dec
adc
(bad)
push
shl
mov
cmp
xchg
jmp
mov
jmp
in
sbb
mov
dec
xchg
dec
ds
jle
push
adc
ins
add
or
call
lahf
mov
add
stos
push
inc
mov
cmp
into
xor
push
dec
retf
push
cmp
add
scas
stos
xchg
add
jge
sti
push
xor
jp
fwait
clc
iret
mov
cs
leave
add
stc
dec
adc
jmp
or
gs
jae
push
(bad)
ja
stc
aad
xor
(bad)
pop
sub
jl
and
pop
and
(bad)
push
(bad)
jne
push
movs
xchg
xchg
jg
pop
jl
xor
push
and
sbb
or
mov
sub
add
div
dec
jp
les
cmc
inc
jae
jg
jmp
inc
or
mov
popf
jns
push
retf
call
call
mov
out
push
call
movs
sub
pop
lds
sub
dec
jmp
addr16
cmp
sbb
aas
dec
cmp
cmp
push
in
adc
movs
shl
push
pop
add
pop
cli
jmp
or
or
cmc
repz
dec
mov
scas
mov
enter
bound
push
mov
xchg
arpl
arpl
sahf
call
dec
call
ja
cld
inc
or
sbb
pop
inc
mov
ds
or
leave
adc
push
xchg
ror
xchg
stc
xchg
sub
xor
cmp
or
xor
loop
push
sbb
mov
push
ss
cmp
sbb
dec
fmul
sub
test
aam
add
aam
fsub
int
push
or
pop
loopne
repnz
jo
loope
test
sbb
js
stos
sahf
dec
(bad)
out
sti
aam
loop
shr
xor
pop
outs
out
inc
pop
div
sub
jp
pushf
popa
add
ret
shr
or
fcomi
sbb
cwde
ret
js
mov
(bad)
fcomp
retf
xor
mov
cmps
and
lods
jb
leave
or
xor
adc
fisub
movs
pop
xor
jmp
rol
pop
pop
nop
mov
fist
sub
ret
je
cmp
outs
stos
out
adc
mov
cdq
bound
scas
enter
sbb
mov
dec
call
inc
mov
mov
jg
pop
xor
retf
int
push
mov
adc
(bad)
fcmovu
loop
push
jl
cli
scas
xchg
mov
push
xlat
xchg
push
iret
push
repz
or
mov
outs
mov
jge
or
cdq
rcl
fisttp
jl
dec
aaa
xor
jp
leave
es
rcl
scas
sub
retf
add
pop
pop
xor
shl
mov
and
mov
imul
prefetchw
cmp
mov
lock
in
push
dec
sbb
mov
fwait
xchg
sub
push
arpl
loop
cmp
outs
mov
dec
dec
push
in
dec
mov
in
add
(bad)
out
dec
push
outs
xor
outs
cmp
xchg
jo
pusha
mov
cwde
dec
xchg
inc
dec
mov
ss
xor
dec
in
addr16
sti
sbb
fiadd
lea
jbe
ins
and
lahf
add
cmp
or
sbb
imul
xor
pop
pop
cmp
out
jbe
int
cs
sub
mov
dec
xchg
mov
test
or
fbstp
dec
pop
in
mov
lahf
cdq
jg
loopne
loop
xchg
cmp
cmps
shl
jne
xchg
jae
fldcw
mov
mov
outs
rcl
mov
lock
xor
sbb
mov
pop
jg
mov
ret
add
cld
imul
ins
xchg
cmps
lea
out
cmp
or
fmul
inc
call
fdivrp
xor
dec
or
stc
jae
test
in
mov
mov
test
ins
mov
test
mov
adc
or
pop
sbb
(bad)
rcl
(bad)
push
test
jge
cmc
fs
jmp
leave
xor
ja
dec
pop
ret
mov
fwait
int
inc
mov
xchg
sbb
jge
xchg
dec
fistp
mov
sar
xchg
pop
cmc
inc
add
xor
(bad)
dec
ins
adc
or
pushf
cld
repz
es
stos
dec
inc
(bad)
mov
stc
and
hlt
je
sub
mov
movs
xchg
je
aaa
addr16
jmp
fisttp
push
mov
cmps
mov
(bad)
mov
xchg
and
test
cmp
push
and
jb
and
shr
popf
jne
in
xor
push
xchg
inc
movs
aas
adc
inc
xor
into
sub
pop
sbb
or
aaa
pop
inc
xor
xor
mov
ds
test
cs
movs
and
mov
aad
and
in
sbb
out
lds
fs
pop
mov
ret
int
mov
scas
inc
jmp
push
inc
push
mov
adc
call
mov
mov
push
loope
cdq
add
jbe
in
or
fiadd
mov
mov
jmp
fdivr
jmp
in
nop
jbe
ret
and
jne
cmp
jmp
clc
rol
and
inc
test
dec
sub
inc
mov
mov
sahf
sub
sub
js
pinsrw
push
or
push
xor
(bad)
adc
nop
add
pop
retf
sti
add
dec
fwait
prefetch
sbb
inc
sub
pop
inc
xor
and
hlt
adc
push
xchg
les
aam
sar
mov
js
adc
sub
neg
bound
adc
jb
xchg
adc
sbb
out
bt
dec
es
pop
sbb
or
adc
mov
outs
in
test
mov
sbb
fistp
ret
shl
mov
repz
jo
fcom
dec
mov
sub
cmp
inc
movs
sbb
pop
add
inc
push
ja
cs
pusha
add
add
adc
jl
sbb
pop
xchg
xchg
cmp
pop
pushf
leave
jp
mov
mov
and
pop
inc
out
adc
adc
nop
cmps
(bad)
adc
cmps
sub
mov
stc
test
mov
sub
pop
xchg
add
xor
adc
sub
in
mov
jmp
call
jae
fld
jl
mov
ins
sbb
sub
out
das
or
cmp
sub
and
mov
std
mov
cmp
mov
into
fsubr
test
jge
je
jns
dec
push
arpl
int3
adc
int3
loope
mov
adc
jmp
ds
cli
and
xlat
fcom
jle
mov
repz
inc
mov
fwait
ja
mov
addr16
cli
dec
and
push
imul
leave
and
out
mov
jp
sub
jge
pop
adc
jp
jmp
inc
popa
mov
fs
add
imul
sbb
imul
aam
mov
mov
fdivr
je
lods
(bad)
inc
and
inc
cmp
ja
shl
scas
std
xchg
gs
and
in
(bad)
cmps
not
and
mov
push
push
mov
pushf
cmp
loopne
pop
mov
push
add
mov
sbb
shr
daa
das
mov
push
cmp
mov
rcl
(bad)
out
fidivr
mov
xchg
addr16
xchg
pop
lock
repnz
and
hlt
pop
add
mov
stos
cmp
fadd
jecxz
out
inc
cld
aaa
ss
scas
shl
popa
xchg
in
loop
push
xor
fcmove
imul
inc
(bad)
xor
add
mov
lahf
cmovge
cdq
dec
lea
(bad)
clc
push
cli
xchg
sub
cmp
into
fs
mov
es
xor
dec
repnz
cmps
pop
push
imul
outs
fcmovnb
and
ins
pop
es
mov
sbb
push
mov
xchg
jg
or
out
jbe
aad
ret
push
mov
rcl
test
xchg
sub
iret
outs
or
test
out
inc
pop
adc
(bad)
bound
cli
sub
xchg
xchg
inc
mov
xor
push
jno
and
and
push
fs
in
push
test
sbb
push
repz
push
xor
push
add
push
sti
mov
and
adc
jno
sbb
and
inc
cmp
mov
jae
and
icebp
jp
and
hlt
push
stos
mov
rol
inc
xchg
in
sub
push
mov
in
inc
or
jle
mov
rcr
icebp
(bad)
fisttp
add
push
call
into
shr
sub
push
cs
and
push
rcr
arpl
(bad)
mov
dec
imul
pop
mov
pop
movs
xchg
dec
fsubrp
xchg
retf
loop
stos
test
lock
mov
call
sub
pop
neg
sub
mov
push
or
push
hlt
call
stos
xchg
mov
div
fstp
test
jmp
dec
sub
repz
(bad)
int3
sub
test
add
cmc
lods
adc
or
rol
dec
mov
jmp
push
dec
inc
xchg
(bad)
push
and
shl
out
jo
jp
or
call
inc
repz
xor
dec
int
fcomi
and
imul
and
adc
adc
lds
or
mov
and
mov
int
dec
pop
jne
gs
add
(bad)
sbb
test
mov
jo
or
pop
dec
and
push
cld
jp
push
adc
movs
xchg
push
enter
dec
push
and
into
mov
cmp
scas
or
lahf
sbb
mov
clc
ins
jg
fisub
jae
inc
(bad)
retf
movs
cmp
push
ret
pusha
push
dec
sahf
jne
xor
adc
repz
mov
cmp
movs
xor
aad
inc
sbb
std
jo
push
retf
movs
adc
movs
mov
ds
mov
ds
int3
(bad)
jge
push
lds
push
loop
push
rol
fs
icebp
addr16
sbb
xlat
out
in
popa
lea
adc
cmp
inc
xchg
repz
cmp
(bad)
mov
push
fstp
xchg
add
imul
pop
arpl
push
jbe
push
xchg
ins
inc
in
call
in
nop
inc
or
dec
xchg
xlat
icebp
dec
jp
jnp
mov
xlat
sbb
call
aad
xchg
arpl
pusha
cld
pop
ret
jle
mov
aam
iret
push
shr
out
popf
adc
outs
ins
out
cmp
sbb
and
mov
jbe
xor
(bad)
out
lds
sahf
leave
dec
sbb
inc
ret
inc
ret
cdq
mov
stos
push
nop
pop
add
sub
mov
cmp
inc
mov
xchg
mul
imul
xor
dec
fiadd
aas
enter
push
js
sbb
mov
push
xor
sub
jecxz
and
cs
packuswb
mov
mov
ret
shr
xchg
xchg
and
dec
add
lea
xchg
(bad)
hlt
mov
inc
fistp
je
hlt
daa
in
push
lds
iret
outs
movs
out
cmp
add
inc
sbb
push
mov
leave
jbe
(bad)
aas
sub
and
jmp
outs
dec
xor
add
ret
push
pop
cwde
shl
stos
iret
(bad)
test
cmp
(bad)
xchg
cli
or
pop
inc
out
mov
imul
push
call
cmp
sbb
ds
bound
movs
jns
jb
dec
mov
imul
test
xor
ret
jae
mov
retf
adc
push
clc
fucomp
sbb
ret
out
int3
xchg
cmp
add
mov
pop
mov
inc
cmc
mov
mov
mov
movs
(bad)
xchg
and
or
push
out
fimul
stc
pop
int
outs
js
mov
dec
rcl
aaa
cmp
cmps
sar
add
jne
in
cmp
inc
pop
jnp
outs
or
mov
xchg
lea
lahf
pop
scas
and
(bad)
call
into
xchg
pushf
icebp
(bad)
mov
or
data16
daa
push
add
adc
mov
stc
or
or
and
xor
div
ror
xchg
xchg
or
adc
push
imul
lods
dec
mov
cmc
(bad)
out
cmp
es
lock
test
or
inc
pusha
shr
jae
dec
sar
pop
sbb
cmp
add
loop
mov
mov
pop
fst
jmp
test
add
popa
mov
pushf
push
jbe
adc
add
cmp
js
xlat
xor
out
jne
push
mov
sub
hlt
mov
test
aam
ins
(bad)
jno
scas
sbb
pop
pop
inc
mov
xor
adc
in
cmp
rcl
lea
xchg
push
cmps
iret
pop
pop
xchg
shr
mov
aaa
pop
repnz
pop
popa
mov
retf
and
movs
add
in
pop
jae
dec
dec
xchg
test
popa
mov
int3
jp
retf
inc
mov
test
(bad)
ins
pop
mov
jne
rol
es
sti
sti
scas
daa
es
push
sbb
xchg
cmps
cmp
movs
data16
test
xor
xor
fsub
in
jno
xchg
lock
hlt
outs
inc
mov
daa
mov
dec
(bad)
test
ins
and
sbb
mov
cli
cli
fcmovnb
inc
es
je
and
pop
aas
xor
lahf
dec
jmp
mov
mov
sub
mov
push
push
and
mov
cdq
pop
adc
retf
jl
jnp
cmp
cmp
xor
jle
leave
sti
and
test
mov
mov
or
jns
mov
add
and
sub
pusha
inc
daa
jmp
adc
icebp
mov
pop
ret
fisub
dec
test
loope
and
test
mov
add
mov
shl
loope
cmp
and
lea
and
pusha
or
lock
mov
jg
dec
int
ficomp
add
jo
sbb
int
neg
jno
sub
ret
xor
addr16
and
(bad)
xchg
adc
ins
stos
cmp
fwait
xor
scas
and
sahf
ret
(bad)
movs
sbb
xchg
rcl
cli
and
stc
mov
xchg
clc
push
inc
sub
leave
popa
lods
lock
fdivr
or
sti
into
fistp
imul
cmp
xchg
cmc
ret
dec
inc
or
push
xchg
pop
dec
mov
scas
sti
mov
movs
retf
mov
xlat
push
arpl
inc
dec
and
cld
xchg
and
sti
pop
cmp
pop
sti
(bad)
xchg
into
cmp
stos
cmp
out
pop
jne
xchg
pop
pop
and
push
push
or
mov
add
mov
(bad)
aam
pop
adc
sub
add
ins
lock
push
daa
sahf
and
mov
daa
xor
jecxz
mov
pop
xchg
pop
scas
repz
xor
add
stos
loope
mov
or
mov
imul
(bad)
sbb
gs
and
lods
jae
xor
mov
mov
pop
popa
cmp
and
into
in
sub
lahf
call
push
icebp
inc
mov
enter
or
sbb
and
add
adc
mov
adc
das
mov
(bad)
mov
jmp
movs
mov
cmp
xchg
mov
sbb
test
lods
dec
fidivr
test
pop
hlt
push
arpl
aaa
imul
push
test
mov
jne
sahf
retf
ficom
(bad)
call
cs
fs
xlat
test
lds
jmp
pusha
mov
pop
dec
mov
loopne
daa
in
push
sahf
and
mov
das
mov
adc
adc
add
xor
adc
mul
sahf
dec
mov
arpl
sub
ins
cmc
jp
pop
scas
adc
retf
test
mov
mov
inc
mov
jl
add
sub
mov
(bad)
jmp
ss
add
inc
sbb
cmp
enter
or
outs
aad
hlt
int
dec
nop
stos
xchg
pop
mov
and
xor
lods
cmp
jl
pop
jle
mov
push
ins
add
fistp
xor
mov
jne
pop
add
jle
fsubr
push
retf
cmp
push
mov
push
enter
jmp
repz
xor
jle
retf
arpl
jae
sti
mov
(bad)
(bad)
int
inc
gs
pusha
rcl
and
and
pop
les
(bad)
dec
xchg
gs
call
ins
fist
fdivr
pop
jmp
scas
and
fdivr
pop
out
aas
xor
jp
movs
rol
inc
inc
repz
test
fisub
or
mov
out
ja
dec
in
jl
cmp
das
retf
not
push
ds
add
push
xchg
dec
xor
out
inc
retf
and
sbb
cmps
jno
pop
xlat
xor
bound
xor
xor
sbb
in
fld
packssdw
inc
(bad)
out
or
iret
fisub
inc
das
dec
into
not
pop
sbb
xchg
pop
dec
mov
test
call
std
mov
adc
add
lods
jle
jp
pop
mov
cs
fs
xor
sub
jb
jmp
rcr
pop
xchg
bound
pop
mov
adc
jns
scas
fsubr
stos
lea
inc
movs
pop
outs
xchg
adc
inc
push
cmp
jo
inc
fsub
push
push
fcomp
jbe
mov
cmp
aad
lock
and
inc
sub
mov
mov
sub
into
jl
or
and
mov
sbb
loope
int3
adc
mov
ins
jbe
loop
outs
nop
mov
mov
std
hlt
fwait
mov
pusha
mov
call
adc
xchg
mov
ins
dec
push
mov
xor
push
add
jno
sub
inc
push
stos
lahf
jbe
ret
inc
adc
jg
aam
xadd
pop
inc
fwait
out
and
xor
fild
push
sub
test
data16
push
ins
scas
icebp
retf
sbb
jge
int
movs
cmp
pop
fwait
sbb
mov
(bad)
popf
cwde
bound
scas
sar
sub
fstp
rcr
outs
jmp
aad
sbb
inc
fwait
dec
inc
(bad)
sbb
jmp
sbb
xor
out
jbe
loopne
sub
mov
or
dec
push
cld
iret
cdq
mov
(bad)
xlat
outs
movs
shr
sbb
fsubr
pop
outs
mov
dec
movs
jp
or
cmp
cmp
inc
add
mov
sub
not
mov
sbb
jne
sbb
gs
hlt
cmp
pop
push
icebp
sub
ja
push
pop
call
sar
out
dec
adc
fisttp
jno
cmps
jmp
out
add
xchg
sbb
push
pop
pop
mov
mov
xchg
add
fwait
call
xchg
into
sbb
cmp
pop
mov
cdq
dec
test
scas
repz
sub
addr16
and
pop
bnd
addr16
imul
imul
int3
jnp
aas
push
aaa
inc
adc
and
xor
mov
call
lock
not
xor
and
add
(bad)
fldenv
outs
imul
not
push
jmp
fsubp
xchg
into
push
loope
xchg
jno
push
push
jmp
xchg
pop
mov
xor
je
movs
out
and
call
fwait
cli
repz
pop
adc
call
or
fidivr
or
sbb
mov
js
fild
fnstsw
lock
or
xchg
push
sbb
sbb
pop
xchg
pop
setno
push
adc
outs
add
pop
xchg
xchg
adc
shl
lahf
inc
fidiv
jg
movs
cs
(bad)
in
fimul
jno
cdq
jno
mov
add
shl
inc
test
lock
dec
and
ret
dec
and
or
xchg
adc
xchg
pop
inc
icebp
sti
cs
jno
add
pop
adc
add
and
repz
pop
mov
imul
pop
mov
call
movs
aaa
loope
jnp
imul
(bad)
mov
lock
push
push
fld
in
test
jecxz
xchg
ja
jmp
enter
fnsave
out
jle
shl
and
and
jecxz
pop
ds
xor
call
pop
mov
fistp
xor
retf
jnp
add
push
xchg
into
inc
and
shl
adc
test
retf
call
in
ds
stos
ja
adc
mov
xor
jno
sub
add
pop
(bad)
jge
stos
add
loope
shl
fldenv
ret
jp
ins
(bad)
in
into
int
cmc
mov
lods
cmps
dec
inc
adc
iret
lahf
stos
ror
mov
sbb
xchg
push
std
(bad)
fldenv
popa
adc
pop
stc
int
ror
xor
adc
or
dec
movd
cmp
mov
sub
sub
js
into
cmp
out
cmp
push
rol
(bad)
cld
(bad)
push
mov
data16
cmc
mov
mov
out
(bad)
jmp
mov
dec
xchg
imul
adc
mov
hlt
push
and
inc
imul
jnp
lods
xchg
stc
xchg
add
xor
and
data16
hlt
jmp
mov
test
shl
nop
add
adc
ins
stc
xchg
xor
jno
inc
mov
mov
ja
xor
jecxz
inc
ror
in
sbb
std
jbe
clc
test
std
lds
cwde
add
das
jb
jno
ja
out
jmp
rep
mov
(bad)
adc
ficomp
daa
je
outs
xor
pop
inc
jl
adc
adc
div
jne
in
lods
mov
and
ins
dec
push
cdq
sbb
call
or
or
xchg
imul
dec
jle
sub
movs
aad
inc
jle
inc
xchg
out
int
(bad)
fldpi
xor
cmp
pop
test
jmp
into
jo
aad
xchg
jmp
scas
or
out
mov
or
mov
xchg
call
mov
pushf
fs
icebp
xchg
out
cmova
inc
fs
cdq
in
inc
arpl
in
popa
in
push
outs
sbb
std
fs
push
inc
fnsetpm(287
ds
or
out
sbb
jae
ins
je
and
push
jecxz
sbb
icebp
dec
jecxz
nop
mov
cmp
xchg
js
xchg
cmp
cli
stos
dec
mov
scas
lods
loopne
or
aad
movs
mov
mov
clc
and
push
xchg
xor
cmp
cld
mov
(bad)
cmps
add
repz
dec
jne
and
or
imul
cdq
fwait
sbb
xor
cmc
pushf
fldln2
das
inc
lahf
jge
or
mov
sti
cmp
test
dec
push
jbe
fcom
lds
in
push
les
(bad)
sbb
ret
xchg
in
mov
mov
sbb
mov
adc
jmp
inc
call
cwde
fisub
cmp
(bad)
push
data16
enter
imul
ins
xchg
cwde
and
push
dec
xchg
loopne
and
movs
adc
sbb
lea
cli
into
add
inc
fstp
out
push
sbb
into
in
(bad)
(bad)
mov
cmc
psubusw
dec
stc
xor
mov
mov
sub
aas
and
xchg
adc
rcr
or
icebp
dec
(bad)
cmp
xchg
push
fidivr
addr16
add
xor
cmp
inc
xor
push
fidivr
push
clc
shl
dec
test
cmp
out
xor
out
jle
fst
mov
nop
mov
(bad)
(bad)
popf
mov
adc
xchg
inc
inc
jp
mov
push
mov
sbb
in
push
dec
add
scas
add
jle
ss
(bad)
dec
mov
sbb
mov
and
cmp
cmps
lea
movs
and
cmp
sub
pop
push
jmp
or
idiv
(bad)
xor
lea
movs
inc
fstp
and
scas
scas
jae
fsubr
mov
test
mov
test
push
sbb
data16
jmp
pop
popa
add
adc
test
test
ror
clc
iret
mov
and
sbb
into
aaa
adc
(bad)
add
xor
(bad)
daa
sbb
ds
popa
dec
nop
inc
cmp
mov
ret
imul
dec
xchg
ins
outs
js
ja
xor
mov
jl
pop
xchg
sbb
fdiv
movs
and
inc
and
pop
push
mov
imul
stos
pop
push
jo
inc
xor
test
xor
popa
test
push
scas
dec
jnp
jns
cmc
xor
nop
fnstsw
int3
stos
dec
imul
sub
xchg
mov
sbb
mov
mov
mov
mov
repz
out
in
adc
out
vpsadbw
sbb
movs
inc
imul
call
(bad)
aam
call
mov
add
(bad)
int3
movs
mov
or
jno
xor
nop
adc
das
sbb
cli
dec
rcl
movs
xor
movs
pushf
setb
ret
(bad)
adc
jmp
mov
(bad)
clc
retf
scas
add
mov
fmul
mov
call
mov
sti
xchg
mov
jae
int
push
out
sub
or
pop
xor
cmp
or
xor
test
icebp
imul
sbb
dec
inc
outs
sti
jno
arpl
add
call
mov
xor
(bad)
cdq
mov
inc
and
inc
sub
lahf
xchg
dec
fdivr
cld
ss
or
pop
or
inc
sub
add
into
mov
je
jecxz
bound
sub
(bad)
fadd
fsubr
mov
pusha
stos
clc
xor
mov
lock
cmp
fist
pop
out
data16
xor
(bad)
sti
adc
lds
nop
int
repnz
or
and
push
inc
adc
mov
mov
js
aad
dec
movs
lea
fsubr
xor
mov
sbb
push
mov
inc
mov
sub
inc
icebp
xor
fsub
inc
and
aam
lea
add
pop
bound
mov
in
cmps
push
cwde
dec
arpl
pop
push
sub
repz
push
pop
call
pop
jae
(bad)
and
sbb
sub
xor
add
cmp
aas
dec
ret
or
loopne
push
dec
and
movs
mov
cli
das
mov
mov
pop
aas
pop
and
out
bnd
pushf
in
sub
lahf
sahf
out
in
mov
mov
out
fiadd
sub
rcr
xlat
adc
pop
cs
pop
into
out
repz
test
jae
icebp
mov
and
call
stos
push
xchg
inc
dec
cdq
nop
(bad)
mov
mov
in
ret
cs
imul
das
push
sub
call
scas
stos
ss
lahf
rcl
movs
sar
add
or
sti
call
push
imul
loope
dec
test
pop
jecxz
cmps
in
mov
into
ss
fwait
pop
repnz
push
or
xchg
sti
pop
js
enter
pop
xchg
cmp
or
retf
prefetchwt1
cmp
mov
or
mov
sbb
mov
push
int
dec
aam
shl
mov
mov
push
std
das
xchg
cmp
(bad)
(bad)
imul
adc
test
inc
sti
push
push
aaa
popa
popa
repz
adc
xor
jbe
aaa
jnp
test
push
pushf
sub
int3
ja
fdiv
mov
jmp
jg
inc
xchg
sbb
and
xor
xor
add
mov
xlat
add
and
jl
mov
dec
xchg
sahf
and
jbe
add
js
pushf
dec
out
in
idiv
mov
inc
stc
cmp
dec
push
adc
pop
push
imul
or
and
lahf
lahf
adc
ret
mov
cmps
outs
cdq
les
jb
or
add
mov
jmp
cs
jmp
push
push
pop
adc
dec
and
sahf
aaa
adc
pop
cmp
lea
mov
cmps
add
and
lahf
inc
call
test
loopne
adc
cs
or
add
ins
jbe
ins
leave
sub
sub
daa
test
xchg
push
enter
div
mov
jle
(bad)
sbb
fstp
fdiv
xchg
je
jg
push
aas
ficom
enter
sahf
outs
adc
pop
or
mov
and
mov
xchg
mov
push
jns
mov
pop
std
ret
mov
cmc
dec
pop
add
mov
sti
jle
lds
mov
mov
mov
stos
mov
xor
test
cmp
outs
push
repz
push
push
(bad)
push
fmul
add
jns
xor
lock
retf
je
xor
in
add
leave
mov
loope
aam
sti
(bad)
mov
stc
out
mov
jmp
mov
jmp
cmp
dec
std
(bad)
bound
or
mov
pop
sub
mov
outs
(bad)
call
push
jg
cdq
sub
mov
jb
rol
jo
cmps
mov
cli
and
imul
int3
scas
mov
mov
fs
jecxz
push
jo
mov
add
xchg
hlt
ins
push
fcmovnu
lods
loope
cmp
call
xor
jns
out
dec
adc
lahf
es
inc
jns
in
mov
dec
pop
imul
hlt
mov
bound
aas
jmp
push
fild
(bad)
es
sbb
jge
cli
in
cdq
jnp
cmp
pusha
lds
mov
pop
sar
out
mov
push
adc
out
cld
jp
dec
sbb
int3
pop
jecxz
jle
sbb
push
rcr
and
das
add
dec
inc
push
scas
mov
arpl
ja
mov
ret
push
js
in
push
jo
outs
lods
dec
pop
shr
in
dec
or
ins
ja
mov
mov
aaa
les
fimul
jo
retf
or
sub
aas
int
jns
fnstcw
inc
rcr
fidivr
or
xchg
pop
(bad)
jle
cmps
repz
(bad)
mov
int3
ins
mov
jae
std
jp
daa
jecxz
jp
cs
mov
push
ins
daa
in
enter
aas
ins
add
(bad)
xlat
mov
adc
mov
dec
and
ffreep
jbe
dec
mov
pop
fild
ins
stos
mov
lahf
mov
push
inc
fisub
movs
cmc
stos
pop
xor
jae
repz
dec
rcr
jp
jle
outs
adc
pop
sbb
or
repz
scas
data16
js
call
fwait
in
loopne
push
jo
and
cmp
or
or
cmp
jp
sub
inc
xchg
and
leave
les
call
jmp
jg
mov
xor
sbb
push
sbb
lea
pop
je
jp
cli
push
mov
sub
xchg
add
fwait
call
push
push
lods
mov
ret
mov
pop
out
loope
fiadd
cmp
mov
pop
mov
sub
jmp
sub
mov
mov
pop
dec
add
xchg
add
out
push
scas
mov
cwde
in
cmps
mov
adc
pop
test
(bad)
pop
pop
dec
inc
xlat
mov
adc
ret
bound
mov
inc
cmp
cwde
mov
out
lahf
pop
adc
mov
mov
mov
xlat
dec
jmp
jns
(bad)
jbe
jge
push
ret
or
pop
xchg
inc
pop
lods
mov
sub
sbb
sbb
push
shl
jb
adc
cmp
jl
in
sbb
sub
stc
mov
outs
and
ins
push
ror
adc
loop
push
das
mov
jb
hlt
adc
gs
test
(bad)
xchg
jge
cmp
nop
cmp
les
in
push
leave
fs
cmp
add
push
push
cmp
in
cli
jnp
mov
cld
sar
das
push
test
cmc
pop
sub
shl
add
sbb
ret
jns
or
outs
or
nop
jp
enter
pop
add
mov
jne
dec
out
pop
sub
cmp
add
scas
out
push
shl
sbb
test
aaa
push
aas
cmp
imul
imul
test
xchg
aad
sbb
sbb
and
xchg
js
ss
add
movs
addr16
mov
es
push
lock
xor
jae
push
fiadd
scas
sub
inc
dec
push
pop
loopne
mov
jmp
mov
pop
push
push
mov
mov
add
xchg
adc
in
sbb
add
mov
lods
xchg
dec
inc
aaa
mov
cmp
mul
jg
and
out
mov
and
sti
hlt
cmps
gs
cmp
(bad)
dec
mov
add
sub
inc
dec
mov
push
cmp
mov
fdivr
add
les
sub
mov
inc
jmp
cli
stc
or
fsubr
jnp
push
stc
sbb
repz
dec
sub
js
int3
or
push
dec
aas
shl
outs
push
jge
lock
in
stos
add
mov
data16
fcom
xor
inc
push
add
inc
adc
cmp
call
push
sub
ins
mov
mov
dec
scas
repz
fild
mov
and
pop
int
cvtpi2ps
call
ret
frstor
cmp
sbb
xor
dec
mov
lods
inc
cmp
shl
mov
xchg
mov
fidiv
lods
out
mov
lock
repnz
and
or
cdq
retf
add
inc
mov
sbb
daa
fdiv
popf
or
icebp
cmps
and
cmc
lods
das
inc
cmp
(bad)
int3
xchg
lods
pop
mov
fs
push
sub
inc
mov
js
inc
dec
mov
stos
mov
sub
lock
add
sub
in
adc
xor
aad
fs
or
div
sbb
iret
pop
xchg
mov
repnz
cmps
sbb
cmp
sub
jge
mov
or
int
sub
xor
std
jle
std
call
push
adc
sub
stos
dec
push
jge
xlat
add
rcr
push
sbb
push
add
into
jne
leave
loop
nop
push
test
lock
pop
out
inc
inc
xor
inc
arpl
outs
add
mov
sbb
cmp
mov
cmp
or
in
loopne
mov
sbb
and
jecxz
mov
xor
xchg
stc
pop
fistp
pop
hlt
mov
gs
ret
in
ret
cs
dec
dec
lahf
adc
mov
js
fsubr
add
movs
sbb
imul
leave
xchg
cmp
jle
das
or
inc
shl
dec
xor
mov
enter
or
xlat
adc
jg
(bad)
enter
mov
jns
test
jg
and
mov
adc
pop
inc
xor
data16
mov
mov
imul
push
arpl
mov
pop
xchg
push
push
xor
repz
call
lods
add
pushf
lds
dec
xor
cmp
cld
in
adc
add
inc
mov
inc
jg
test
jbe
bound
adc
mov
mov
fisubr
jmp
or
in
sti
rcr
push
add
jge
and
jp
sar
in
mov
xlat
repz
xor
les
cmp
out
or
sub
lea
push
push
adc
cli
cli
dec
shl
xor
fstp
dec
push
adc
mov
xor
pop
push
addr16
movs
fstp
pop
xor
add
arpl
dec
stc
adc
dec
dec
mov
cli
jmp
iret
leave
xchg
test
adc
inc
(bad)
cli
mov
add
lea
adc
js
in
mov
bound
mov
cs
xchg
into
pop
push
xor
mov
outs
js
sbb
rcl
ds
push
mov
or
sbb
(bad)
in
sar
cs
fmul
and
add
arpl
mov
cli
push
jo
outs
outs
pop
imul
pop
add
test
aad
inc
and
xchg
sub
lods
leave
jb
(bad)
pop
aas
or
outs
repz
cmps
cmp
outs
sbb
or
daa
aas
cmp
jecxz
mov
mov
enter
mov
sub
xchg
jg
outs
cwde
cmp
pusha
cmps
rol
sar
inc
pop
fdivr
or
jb
out
adc
cmp
in
int3
imul
xor
lods
outs
fsubrp
sub
jecxz
xchg
inc
pop
repnz
movs
mov
loope
movs
sub
inc
outs
push
in
in
xchg
ss
push
dec
es
jae
lfs
mov
ds
mov
jnp
dec
(bad)
out
les
sbb
sbb
aad
bound
sti
sar
dec
shr
sub
scas
mov
lds
out
in
aam
mov
push
fldcw
inc
pop
xchg
dec
adc
fistp
mov
neg
js
and
mov
xor
mov
mov
pop
sub
add
aas
aas
mov
xchg
add
loop
add
xor
shl
fst
and
mov
out
push
or
xchg
mov
and
ja
mov
mov
(bad)
das
jg
test
xchg
test
mov
push
aam
addr16
adc
mov
xor
inc
dec
cmp
dec
pusha
cdq
jl
lods
cmp
(bad)
(bad)
ficomp
(bad)
sub
(bad)
dec
test
in
sbb
adc
push
fdiv
inc
mov
popf
xchg
ins
dec
pop
and
int3
rol
push
iret
lea
lahf
(bad)
scas
iret
pushf
scas
inc
bound
out
sub
jecxz
add
mov
sbb
and
int3
mov
cmp
in
inc
outs
xor
fwait
and
or
mov
cs
ds
xchg
dec
loope
jmp
sbb
ret
clc
push
dec
test
scas
sbb
stc
shufps
(bad)
stos
xor
inc
inc
push
push
xchg
ret
mov
aaa
arpl
lods
cwde
jle
fsub
xchg
cmc
cdq
push
mov
cmp
in
xchg
fist
pop
mov
ucomiss
lods
xchg
push
daa
cmp
mov
call
jp
mov
test
mov
rol
iret
xor
pop
xchg
inc
or
dec
mov
sbb
xchg
fcom
xchg
sub
pop
adc
int
movs
or
adc
xchg
jmp
mov
movs
imul
add
(bad)
arpl
xchg
(bad)
icebp
sub
lahf
das
stos
mov
ss
sub
jo
dec
iret
inc
retf
std
add
pop
imul
jecxz
(bad)
inc
or
ds
pop
inc
sahf
stos
mov
ins
cmp
xchg
sub
fnstsw
cmps
repz
ficom
les
mov
retf
ss
pop
mov
dec
mov
pop
pop
and
les
test
jl
mov
int3
loopne
xchg
adc
lods
mov
jle
in
cmp
and
cmp
leave
outs
pop
mov
jb
adc
and
cmc
stc
pop
push
das
enter
inc
jo
mov
jae
xchg
add
outs
jle
cmp
out
mov
enter
adc
pop
and
pop
ficom
jl
arpl
pop
outs
cmps
pusha
or
add
or
inc
dec
mov
in
pop
test
xchg
dec
mov
std
and
adc
daa
push
fild
repz
mov
shl
xchg
or
jb
sub
dec
xchg
imul
push
push
sub
retf
jmp
adc
jo
xchg
mov
mov
in
pop
test
cs
pop
lods
mov
retf
and
or
push
jne
sahf
test
and
cmp
fs
xor
mov
mov
rol
nop
int3
push
rcl
mov
jnp
inc
out
(bad)
jl
and
inc
sub
cmps
stos
mov
aaa
mov
popa
in
fnstsw
repnz
jns
or
sbb
sbb
ins
aam
iret
jge
and
adc
mov
repnz
inc
or
scas
or
test
push
xchg
shl
lods
xor
cmp
lods
stc
or
cmp
ret
xchg
das
jecxz
mov
sub
adc
sub
xchg
jo
ss
sahf
mov
adc
cmc
lods
push
out
aas
cmc
inc
mov
ret
pop
popa
cdq
gs
xchg
xchg
push
test
test
pop
and
mov
xchg
movs
shl
push
popa
jp
fadd
neg
cmc
popf
std
popf
in
xchg
inc
add
cmp
mov
cli
das
std
adc
out
inc
(bad)
xchg
out
cmp
push
stos
ret
arpl
lea
sti
(bad)
jmp
shr
mov
mov
leave
test
inc
cmp
mov
rcl
xor
rol
add
aam
pusha
bound
xor
mov
test
push
xor
cmp
mov
adc
fiadd
inc
jmp
mov
cmps
sub
mov
outs
nop
mov
inc
pop
inc
(bad)
xchg
xlat
xor
fwait
gs
cmp
xchg
cld
ror
(bad)
pop
mov
inc
fsubr
add
xor
pop
xchg
in
mov
icebp
ret
push
mov
mov
inc
push
jge
cld
mov
dec
adc
pop
and
jl
xchg
sub
arpl
mov
xor
mov
jnp
push
test
(bad)
cld
out
lahf
xor
mov
dec
adc
mov
sub
pop
idiv
xor
retf
adc
xor
lea
ds
mov
pop
mov
call
jg
popf
mov
jns
jecxz
fdiv
mov
inc
ret
lea
imul
imul
dec
ret
movs
jb
and
mov
mov
mov
scas
aaa
jmp
ds
sub
or
ret
mov
adc
inc
js
cmps
add
sbb
xor
mov
sub
(bad)
adc
fisubr
jmp
inc
jmp
jp
addr16
mov
add
jmp
retf
sti
sub
aas
pop
arpl
loop
jl
jmp
test
mov
inc
sahf
repz
push
or
adc
pop
stos
bound
aaa
cwde
cdq
pop
aam
outs
jns
add
popa
out
ds
cmp
jg
popf
add
xchg
push
gs
scas
cli
mov
enter
fcom
sbb
sahf
sbb
mov
mov
cmp
in
cmp
or
mov
fstp
int
push
cmp
mov
push
cmc
daa
mov
push
and
int
stos
add
jb
pop
push
sub
aas
test
mov
dec
rcl
imul
and
lahf
sub
jle
pop
lods
out
mov
int
loopne
dec
ret
and
dec
call
daa
add
dec
sti
xchg
call
cmps
(bad)
movs
mov
sahf
lods
jo
and
jge
jp
jne
std
popf
lock
test
push
add
test
cmc
sub
xlat
xchg
pop
cmp
test
jne
jne
fcom
pop
int3
aaa
call
sub
call
xlat
not
xor
mov
push
clc
(bad)
sub
jo
lods
inc
sub
ja
leave
shl
loop
sbb
into
popf
(bad)
fimul
add
mov
call
push
cdq
fidiv
xchg
xor
pop
inc
or
jecxz
sub
das
cmp
mov
retf
fcomi
stos
dec
mov
inc
add
and
mov
ins
mov
imul
cdq
adc
test
pop
loop
data16
out
and
mov
jecxz
test
xchg
jge
lods
xchg
fist
addr16
push
pop
movs
icebp
mov
xchg
jne
stos
cmp
repz
push
lahf
inc
inc
and
mov
sti
mov
pop
or
rep
aam
sub
(bad)
xor
xchg
xchg
add
xor
pop
out
dec
fisub
inc
inc
sub
sbb
lds
dec
test
mov
dec
jg
sub
movs
dec
dec
cdq
lods
lahf
je
stos
stc
pop
sbb
push
aas
dec
mov
push
push
or
mov
data16
(bad)
fisttp
in
and
jle
pop
mov
sub
movs
inc
pop
pop
cmps
dec
loopne
add
mov
aad
stos
pop
ret
cmps
outs
rol
out
xchg
frstor
cmp
nop
out
jle
xchg
mov
in
sar
pop
jmp
dec
inc
xor
xor
inc
jo
ret
pop
sbb
sbb
xor
sti
addr16
ror
loop
and
and
out
mov
repz
adc
cmp
push
mov
aas
xor
shl
aam
sbb
mov
ror
sbb
or
arpl
inc
lods
xor
inc
icebp
(bad)
sub
pop
jle
(bad)
cmp
dec
pushf
cmp
dec
addr16
inc
and
pop
(bad)
add
call
mov
mov
into
adc
(bad)
adc
mov
leave
fist
adc
push
mov
jno
sahf
outs
dec
push
mov
jmp
push
mov
xchg
or
sahf
(bad)
retf
popf
pop
hlt
fneni(8087
jmp
mov
mov
(bad)
fwait
sti
imul
xchg
pop
ficomp
daa
push
push
mov
jecxz
jns
xchg
jbe
adc
lods
dec
outs
xlat
adc
mov
int
in
test
cmp
ss
push
(bad)
push
jl
int3
mov
mov
adc
mov
xchg
enter
fild
mov
movs
mov
and
jmp
xchg
pusha
ror
shr
movs
push
cs
mov
ja
add
mov
ficomp
jo
jo
sbb
sbb
lods
sbb
cwde
pop
frstor
xchg
les
adc
rcl
mov
loopne
sub
enter
aam
popa
sbb
dec
push
mov
aam
cmps
cmp
icebp
push
and
push
loopne
pop
nop
sub
add
sbb
mov
inc
repnz
in
sub
into
pop
icebp
push
ficomp
xlat
jae
popa
daa
(bad)
aam
add
out
repz
imul
(bad)
je
repz
outs
push
sub
sub
dec
mov
data16
and
and
add
imul
xor
mov
sub
jae
loope
jp
dec
test
or
(bad)
inc
pop
cs
clc
addr16
adc
push
xor
cmc
push
mov
pop
arpl
fnstenv
mov
or
adc
cmc
xchg
mov
adc
dec
sbb
enter
imul
(bad)
jg
bound
jecxz
sbb
cmps
push
retf
or
cdq
dec
mov
lds
and
add
ror
jmp
cmc
xchg
in
add
popa
adc
push
push
sub
jecxz
mov
pop
out
or
jl
cmc
mov
int
loopne
pop
idiv
push
xchg
xchg
cli
(bad)
mov
mov
inc
mov
sub
nop
call
xor
dec
inc
stos
loopne
cdq
fwait
xchg
js
adc
push
(bad)
popf
lds
int
mov
mov
out
(bad)
leave
sbb
out
lea
ja
sbb
cmp
ret
push
imul
lods
nop
jge
repnz
mov
test
in
dec
icebp
popf
pop
jb
jge
cmp
dec
das
xlat
cli
mov
ins
ins
les
and
int
xor
bound
scas
loop
mov
sbb
and
push
(bad)
jmp
aaa
outs
mov
js
sub
xlat
cmp
push
cmp
adc
inc
(bad)
xor
(bad)
push
ja
or
ins
cli
(bad)
pop
and
mov
xor
ret
mov
sub
dec
dec
push
cmp
enter
mov
mov
pop
pop
jns
int
jb
retf
sar
jp
cmp
scas
dec
cmp
push
jg
fs
push
nop
cmp
push
jb
cwde
dec
mov
or
mul
sti
addr16
or
jg
cdq
(bad)
mov
cmp
sub
lods
push
call
xor
test
lahf
cmp
and
push
stos
shr
dec
js
fsubr
pop
push
push
test
sbb
adc
pop
or
sub
fldcw
inc
ja
jo
push
jno
ret
and
retf
in
pop
stos
inc
cmp
jecxz
xchg
mov
(bad)
cmp
inc
sbb
ret
mov
call
adc
(bad)
into
sub
sub
outs
pop
not
dec
imul
mov
jne
lock
dec
fist
jo
mov
push
or
push
cmp
pop
cmp
fstp
aad
lock
pusha
dec
fdivp
mov
push
mov
jae
jb
adc
aas
rcr
out
test
ficom
mov
xchg
es
sub
sbb
mov
cmp
(bad)
cmps
push
push
retf
mov
cld
daa
xchg
retf
adc
push
out
mov
pop
adc
test
jmp
fnstenv
int3
add
jno
add
fwait
imul
sub
push
mov
add
lods
cmp
rcl
stc
out
arpl
(bad)
daa
fcmovnu
inc
sub
pop
xor
add
xlat
pop
sbb
test
mov
xor
push
out
shl
and
adc
xlat
jge
add
jne
or
xlat
cmp
mov
lds
adc
cmp
dec
sbb
jne
and
sub
arpl
jmp
xchg
jmp
outs
fsubr
add
lds
retf
daa
stos
jo
movs
rol
(bad)
cmp
push
mov
xchg
push
cmc
retf
cld
sti
outs
test
in
dec
pop
mov
loope
dec
cld
mov
icebp
dec
lods
mov
dec
lea
addr16
test
aas
scas
test
cmp
jmp
retf
popa
and
mov
jbe
ds
(bad)
push
mov
mov
or
xchg
fstp
cmc
xor
ins
into
mov
aas
arpl
adc
loope
out
in
ds
jle
mov
popf
xchg
xchg
adc
adc
mov
jae
mov
bound
sbb
rcl
mov
loopne
loopne
adc
fs
jnp
jge
pop
or
mov
sbb
sub
mov
sub
dec
pop
xor
pop
xor
scas
arpl
outs
push
adc
sbb
call
sbb
cld
sbb
lods
adc
sahf
add
pop
rol
scas
lea
ins
iret
ja
push
pop
out
pop
std
mov
cdq
jl
add
sub
fist
inc
cwde
cmp
shl
and
inc
dec
mov
(bad)
cdq
jg
and
test
sub
mov
xchg
sti
jb
and
arpl
mov
mov
std
cwde
aas
bound
fnstenv
shr
test
in
movs
push
adc
int3
clc
(bad)
stc
retf
test
xchg
jecxz
or
int
pop
ds
ret
leave
shl
fnstenv
pop
loope
mov
xor
sbb
stos
mov
and
cmp
mov
cmp
rol
(bad)
lods
fsubr
inc
call
outs
fucomi
sbb
pusha
call
js
xchg
out
in
pop
push
ss
adc
mov
jg
add
mov
out
out
xor
cs
sbb
jmp
inc
imul
repz
stos
call
mov
popa
push
fcmovnbe
push
jp
mov
rcr
and
sbb
mov
in
test
pushf
dec
fcmovnb
add
xor
mov
mov
sub
sbb
push
bound
jns
leave
je
f2xm1
mov
push
push
loop
imul
fmul
in
jle
sbb
push
test
out
dec
std
sbb
jnp
sbb
cmp
push
pop
test
cli
mov
je
add
fnsave
jmp
push
data16
jmp
imul
stc
fwait
xor
test
pop
mov
push
shl
loopne
imul
push
jmp
aad
in
mov
popa
retf
jle
nop
push
gs
jnp
std
mov
repz
(bad)
pop
arpl
call
movs
outs
xor
xor
dec
jne
pop
dec
dec
push
cdq
dec
icebp
jmp
aaa
and
xchg
lods
and
sub
pop
retf
sbb
sti
xchg
adc
add
sbb
dec
bound
cmp
add
dec
mov
push
add
addr16
or
ins
inc
and
scas
enter
jne
mov
adc
cmps
aam
sbb
mov
cdq
or
daa
in
jmp
lods
les
ds
or
push
xor
inc
das
ins
cmps
xor
in
mov
add
repnz
dec
jecxz
sbb
mov
imul
pop
push
fidivr
inc
xchg
ret
fdiv
inc
fst
enter
call
push
pop
xchg
sbb
loope
xchg
loopne
push
sar
mov
jecxz
mov
aam
lahf
mov
out
rol
popf
ins
adc
pop
dec
inc
ins
and
daa
xor
mov
cmps
gs
shl
int
jmp
sub
cmp
mov
lods
fbld
data16
xchg
mov
scas
scas
push
mov
push
push
out
jmp
out
loop
xor
inc
xchg
xor
push
lods
adc
xchg
je
push
and
popa
adc
cmp
(bad)
sbb
xchg
call
cmc
add
test
jb
rol
out
push
and
sub
and
dec
xchg
pop
mov
and
mov
mov
pop
jg
push
je
jae
or
jge
sahf
add
pushf
rcr
mov
cmps
lds
adc
xchg
pop
ins
adc
gs
outs
addr16
cwde
mov
fucomp
out
mov
and
jge
mov
rcr
mov
outs
(bad)
jmp
push
lods
add
mov
int3
add
push
xchg
mov
jo
adc
add
mov
ss
cmp
rcl
ror
jecxz
jbe
cmp
sar
jle
js
push
test
pusha
adc
test
inc
mov
mov
adc
pop
sub
ss
popa
sub
scas
mov
into
inc
mov
scas
push
fdivr
pop
fdiv
cmps
xor
imul
xchg
in
push
cld
pop
es
test
je
scas
inc
jae
xchg
add
stos
cmps
inc
jae
xchg
inc
sar
ret
xor
jge
jae
mov
xchg
dec
jbe
xchg
and
xlat
sub
mov
popf
retf
jno
enter
jg
sar
lea
mov
fcomp
cwde
mov
or
aaa
cmc
push
push
ror
popa
sahf
xchg
or
leave
xchg
aam
inc
out
mov
shl
mov
mov
mov
out
mov
aaa
push
inc
jo
add
push
mov
test
push
in
mov
imul
push
adc
mul
mov
dec
or
cwde
cli
push
jecxz
fcomp
pop
adc
jg
out
dec
and
mov
inc
mov
repnz
jl
mov
rol
dec
add
test
jns
aaa
jbe
jnp
xor
ja
sbb
cmp
cli
ror
aad
jmp
iret
jnp
jp
add
cmps
mov
mov
ja
mov
(bad)
cdq
mov
pop
inc
cmc
cmp
(bad)
in
daa
lods
pop
or
gs
(bad)
aam
call
scas
mov
adc
jae
pushf
sar
inc
jno
dec
mov
dec
inc
lea
ret
mov
mov
cdq
shl
mov
push
nop
inc
mov
sub
movs
mov
and
jp
stos
test
inc
sahf
push
mov
and
adc
mov
cld
dec
js
sbb
adc
mov
and
jg
pop
into
sbb
das
adc
int3
sub
dec
xor
aam
add
or
ror
jno
aas
sub
cmp
push
(bad)
bound
test
or
mov
xchg
dec
repnz
call
cmp
out
out
cli
cmp
xor
retf
retf
pop
push
repz
cdq
dec
ret
pop
je
out
push
sbb
jl
lahf
aad
retf
loope
mov
inc
in
sbb
and
dec
mov
xchg
repnz
mov
ins
jne
lahf
add
add
cli
mov
pop
add
enter
inc
loopne
jmp
movs
pop
ss
clc
sub
fwait
xor
cmp
retf
ins
aaa
xchg
imul
aam
jle
ficomp
jmp
add
xchg
and
jbe
pop
mov
cmp
add
shr
mov
pop
push
or
sbb
js
push
jns
in
add
fild
std
test
mov
jb
sahf
cmp
aaa
mov
cdq
ret
sub
mov
and
jle
rcr
imul
cli
imul
or
jmp
mov
fcmovnb
jae
sti
add
inc
and
jecxz
push
or
push
mov
fsubr
jge
imul
cmps
aaa
dec
enter
iret
test
mov
jbe
and
fisttp
add
btr
adc
(bad)
mov
push
cmp
(bad)
dec
xchg
stc
inc
fadd
sbb
dec
sub
ss
in
cmp
sbb
xchg
xor
and
cmp
mov
aad
mov
jmp
lods
cmp
sub
sbb
jne
pop
cmps
pop
or
popa
inc
in
test
add
addr16
cmp
pop
(bad)
mov
pop
leave
mov
or
stc
ja
scas
pop
cmps
fist
sbb
mov
adc
fwait
xor
sbb
loopne
enter
daa
sbb
and
mov
jbe
das
sbb
xchg
cmps
fcmovbe
test
sub
jmp
adc
(bad)
xchg
cmp
sbb
outs
cmp
jae
shl
fld
sbb
inc
cs
xor
scas
jl
fild
pop
cs
out
test
adc
adc
pop
popa
test
cmp
ins
xchg
neg
imul
aas
repz
mov
mov
or
or
out
(bad)
or
and
sti
outs
js
and
loopne
and
stos
add
or
inc
sub
or
test
aam
push
mov
pop
fcom
pop
xor
sbb
icebp
outs
in
popf
cmp
pop
xor
ret
jle
mov
mov
test
adc
jb
cmp
(bad)
push
sbb
adc
pusha
rol
push
mov
xor
cwde
jno
add
lds
sbb
nop
arpl
in
or
and
sbb
ins
pop
cmc
repnz
not
test
xor
pushf
mov
jne
add
aad
rol
outs
jg
or
iret
gs
outs
lods
je
cmp
cmp
ja
inc
mov
inc
aad
cmovns
aam
inc
add
xchg
lahf
leave
stos
cmp
add
aaa
jns
popf
xor
data16
jge
xchg
mov
stos
xchg
mov
xor
mov
sbb
adc
xchg
jge
jnp
dec
dec
cmps
inc
add
cmps
xchg
xor
fcmovne
or
xchg
dec
fstp
bound
lods
pop
sub
push
cmp
push
call
into
mov
mov
xor
stos
mov
jno
cld
in
femms
rcl
in
pop
xchg
inc
jno
xchg
sbb
mov
gs
ds
pop
push
sbb
xor
mov
inc
sub
pop
jne
push
or
sbb
xor
jg
iret
fsub
xchg
push
out
cli
push
sbb
adc
adc
and
mov
dec
shl
sti
or
shr
outs
in
pop
js
xchg
mov
and
mov
aas
in
aas
xor
xor
mov
mov
push
outs
out
cmp
movs
and
(bad)
dec
xchg
call
fucomip
push
es
xchg
ins
rcl
rol
stos
mov
gs
cdq
jnp
push
or
fidiv
xchg
inc
shl
mov
jne
cmp
hlt
repz
cld
hlt
retf
jge
sub
retf
lods
xchg
lods
das
cmp
test
jge
pop
fs
push
stos
lds
mov
jnp
out
fisubr
bound
icebp
stos
(bad)
mov
ss
inc
jb
mov
add
outs
push
lea
ret
sub
mov
push
dec
push
xchg
mov
clc
jge
mov
jb
cmps
inc
loope
mov
lea
cmp
add
leave
movs
and
pop
stos
mov
repz
mov
dec
push
and
int3
cld
pusha
jp
jl
and
lods
call
adc
pop
clc
sub
scas
and
xchg
mov
imul
imul
lea
test
(bad)
xor
lahf
movs
leave
sub
push
push
cwde
out
xchg
lds
iret
or
lods
sbb
int3
(bad)
and
dec
xchg
push
xor
mov
popa
mov
add
inc
xor
popa
dec
shl
cmp
push
stos
ds
xchg
retf
adc
aad
retf
out
xor
sti
pusha
dec
mov
fisubr
jg
(bad)
push
movs
add
ror
pop
sti
mov
jmp
cmps
dec
xlat
fscale
shr
dec
shl
jno
add
fisttp
ret
jbe
xchg
add
out
cmp
stos
sub
clc
fst
(bad)
shl
xor
mov
call
mov
outs
or
mov
cld
push
jl
cmp
shl
jae
sbb
rol
(bad)
sub
adc
ins
out
(bad)
std
add
loope
in
sbb
(bad)
lahf
hlt
jns
jbe
adc
cdq
les
fisttp
sbb
stos
test
lahf
cs
lods
sbb
jge
rcr
call
mov
sti
mov
and
inc
retf
mov
fdiv
jne
outs
mov
inc
or
mov
cmp
mov
mov
mov
icebp
sbb
xchg
push
dec
mov
fdiv
dec
pop
loopne
pusha
shl
mov
adc
fst
gs
sti
jl
aad
pop
stc
lods
sbb
jmp
fisttp
sbb
mov
or
and
loope
pop
inc
call
mov
icebp
out
push
mov
mov
inc
ror
sub
loop
sbb
sahf
xchg
and
sbb
mov
jbe
outs
bound
and
sbb
pop
(bad)
jnp
push
repz
lahf
fstp
pop
je
in
push
lods
xchg
clc
mov
jecxz
jns
shl
nop
mov
ins
inc
out
movs
ror
dec
jb
imul
cs
popa
dec
loope
lds
les
mov
cmp
repnz
clc
and
xor
mov
daa
mov
jl
(bad)
outs
mov
inc
and
shl
dec
xchg
imul
dec
and
push
ret
out
clc
sbb
(bad)
(bad)
popa
repz
in
mov
fistp
test
loope
int
xor
movs
(bad)
leave
ins
xchg
cmps
xor
and
cmp
repz
pop
sar
in
push
xchg
cmp
inc
ficomp
fbld
rcr
adc
aas
mov
jns
das
push
sbb
es
outs
mov
sbb
mov
stc
push
cmp
repnz
mov
aaa
shld
shr
jbe
mov
fild
in
cld
out
mov
out
mov
inc
test
or
arpl
out
mov
mov
sub
push
jecxz
xchg
add
stos
enter
dec
jmp
push
leave
sub
nop
dec
icebp
outs
and
or
xor
push
rol
xchg
xor
jmp
or
or
scas
inc
pop
mov
loopne
ret
aad
fdivr
adc
cmc
repnz
mov
addr16
pop
stos
push
lock
movs
or
ret
test
cmp
hlt
pop
sbb
ret
inc
cmc
repz
cmp
push
loopne
xor
mov
mov
stos
outs
loopne
out
into
xor
outs
sbb
mov
inc
test
jecxz
push
fisttp
imul
dec
inc
xchg
inc
pushf
das
inc
and
sub
fcmovbe
int3
mov
cmps
bound
jmp
ror
add
out
test
mov
lods
popf
and
idiv
rcr
imul
out
outs
(bad)
gs
adc
icebp
push
cld
lahf
mov
push
hlt
inc
sub
stc
jae
repz
retf
add
jae
in
dec
and
add
pop
fmul
xchg
pop
mov
pop
pop
cmp
pop
cmc
sti
mov
xor
stos
inc
pusha
lock
das
mov
inc
test
push
aas
retf
and
syscall
(bad)
test
jle
jno
inc
clc
pop
out
mov
jne
jle
or
inc
jg
or
cmps
fcmovb
dec
call
sbb
stc
pop
xor
mul
sub
xchg
mov
adc
(bad)
pop
mov
lea
mov
push
outs
aad
scas
cmc
add
jbe
or
sbb
stos
test
inc
xor
lahf
loop
or
push
js
xor
dec
dec
ds
test
push
cmp
inc
(bad)
leave
loop
add
sbb
add
or
mov
stc
jbe
jb
imul
fs
movs
fcom
sbb
ret
ret
ja
enter
hlt
push
lahf
fdiv
push
mov
pop
neg
stos
pop
int3
sub
dec
add
mov
xchg
fs
jbe
xchg
lds
stc
ins
pop
shr
push
add
retf
retf
lods
mov
mov
jl
scas
stos
setb
stos
fcmovu
(bad)
ror
call
fdiv
cmps
pop
pop
cdq
adc
les
cmps
push
aam
out
ins
je
mov
push
xchg
mov
push
repnz
retf
xchg
faddp
aas
adc
mov
inc
ins
ret
test
dec
mov
jle
push
aad
inc
mov
ret
push
cmp
inc
mov
into
repz
sbb
ret
jno
inc
aaa
retf
ins
out
addr16
cwde
xor
movs
aas
fsub
adc
push
outs
or
push
jbe
inc
ds
jo
pop
jae
stos
adc
push
call
mov
popf
stc
jl
iret
or
iret
in
inc
xchg
test
jg
push
jmp
push
xor
imul
pop
and
std
frstor
(bad)
and
add
jp
sub
xchg
push
jno
cmc
push
sub
jns
scas
cmp
stc
ret
fldenv
cmps
add
aam
(bad)
ins
out
cmps
int3
cs
clc
aas
xor
pop
sbb
mov
and
das
popf
(bad)
or
cmp
xor
xor
mov
test
dec
mov
and
sbb
ja
push
test
sbb
cmp
jmp
aaa
xchg
(bad)
mov
cmps
sbb
adc
sub
daa
inc
pusha
add
xchg
test
aaa
xchg
sbb
sbb
in
adc
mov
add
pop
out
retf
mov
mov
xchg
inc
shl
(bad)
std
out
les
clc
push
inc
xchg
loop
sbb
push
xlat
lods
sub
pop
mov
vpcmpgtd
test
jbe
sbb
call
outs
mov
std
and
leave
cmps
adc
push
xor
popa
mov
call
adc
int
cmp
mov
xchg
and
iret
lea
sbb
call
push
lds
test
popf
jg
push
cmp
pushf
mov
lea
scas
fnstsw
ins
call
fldenv
xor
loop
icebp
xchg
test
lock
inc
icebp
sbb
inc
clc
push
jp
jo
clc
sub
mov
dec
leave
and
inc
adc
sub
rol
push
dec
sub
fmulp
popa
hlt
add
or
mov
push
push
rol
xchg
mov
sbb
ins
movs
pop
adc
hlt
lods
movs
pop
push
out
lods
mov
fmul
pop
dec
fimul
rcl
jg
mov
cdq
push
sub
dec
mov
daa
inc
mov
fs
nop
dec
test
jge
jne
mov
adc
into
out
(bad)
jl
ja
pop
popa
fnstenv
push
xchg
movs
aaa
int
out
and
outs
scas
jl
daa
out
call
xor
out
(bad)
cli
cmp
enter
cmc
movs
cdq
mov
fdivp
cmp
adc
(bad)
jp
dec
and
(bad)
mov
stc
xchg
cwde
sub
and
push
cli
mov
jmp
retf
out
ins
iret
mul
cdq
movs
stos
adc
pop
adc
jae
retf
and
addr16
out
(bad)
das
fs
lods
xchg
(bad)
in
fist
xor
das
iret
and
or
out
fmul
mov
daa
enter
fdivr
add
pop
mov
ror
loop
fisub
push
cs
std
pop
inc
out
add
xchg
mov
fsubr
push
das
iret
cmp
cmp
push
je
push
mov
scas
cld
xor
lods
mov
add
ficomp
mov
ins
dec
fnsave
push
sbb
nop
and
aaa
test
enter
icebp
push
xchg
xor
sub
cmp
test
mov
jbe
arpl
add
std
mov
out
pop
sub
int
dec
inc
xchg
retf
mov
ins
lock
inc
pop
fld
data16
cmc
stos
jno
sub
dec
lods
jecxz
call
bound
leave
scas
jecxz
pop
cmp
dec
cmp
jecxz
in
(bad)
cmp
test
fwait
push
jmp
xchg
mov
jo
fs
ins
push
cld
xor
sti
jo
push
xlat
mov
pop
jb
sahf
movs
and
cmp
and
cli
or
cmp
(bad)
xor
clc
or
sub
jo
fs
fisubr
repnz
shl
fs
pop
inc
xchg
xor
cmp
sbb
pusha
pop
cdq
mov
adc
rcl
mov
sbb
xchg
sahf
mov
xchg
sbb
imul
inc
xchg
jl
jno
dec
inc
jns
or
ins
sti
out
push
(bad)
nop
icebp
xchg
aaa
and
sahf
or
sti
push
or
pusha
les
inc
les
loopne
cld
fstp
lds
sub
lods
sub
adc
adc
cmps
inc
iret
xchg
retf
sub
cmp
inc
add
inc
popa
fcomp
push
jmp
inc
and
and
in
mov
aam
sbb
aad
adc
enter
or
ss
jb
out
and
jae
adc
pop
sbb
outs
mov
fnsave
arpl
xchg
adc
mov
push
imul
lock
xchg
mov
(bad)
dec
es
and
mov
inc
lea
mov
jbe
add
mov
jne
jae
adc
jmp
lods
loopne
xchg
jp
lock
ins
mov
lods
daa
adc
shr
inc
pop
fsubr
push
jmp
ja
in
pop
and
mov
gs
xchg
rcl
add
lds
call
sub
sbb
xor
inc
movs
xchg
pop
mov
xor
jne
mov
dec
xor
and
sub
in
movs
sbb
or
and
xor
xchg
cwde
pop
or
dec
lea
xchg
sub
out
repz
test
or
add
(bad)
cli
sub
pusha
(bad)
jmp
(bad)
repz
pushf
pop
fwait
dec
mov
xor
into
add
pop
out
sbb
imul
jbe
mov
or
cmps
call
hlt
lea
daa
hlt
push
shl
pop
push
cmc
test
push
ror
into
fcom
not
add
out
pusha
xlat
jge
scas
push
inc
clc
dec
daa
xor
and
fisubr
imul
jnp
sbb
pop
adc
fsub
(bad)
out
mov
xchg
out
sub
jns
pop
mov
jae
outs
pop
adc
das
pop
pop
dec
sub
jecxz
(bad)
test
call
leave
aam
fist
inc
and
loopne
mov
and
adc
inc
loop
cmp
loopne
shr
pop
js
fstp
sar
jnp
push
(bad)
mov
stc
mov
ins
data16
mov
lods
fiadd
out
fdivr
mov
pop
xlat
ret
mov
pop
fild
adc
shl
jmp
fwait
xchg
jmp
in
sub
lods
movs
xchg
pop
cmp
sub
dec
jbe
out
inc
test
pop
dec
test
sbb
sub
imul
push
(bad)
rol
dec
adc
cwde
cmp
mov
cmp
fdivrp
stc
(bad)
ins
jno
cmp
aad
cmp
sbb
jl
les
loopne
jle
pop
mov
inc
add
ror
mov
outs
scas
arpl
lods
cmp
ret
push
popf
mov
iret
fstp
in
adc
push
mov
push
in
and
clc
push
and
loop
jae
inc
mov
call
(bad)
loop
popa
enter
push
test
fst
fnsave
xchg
std
adc
push
lahf
ret
jge
stos
adc
push
inc
sub
adc
leave
dec
fs
adc
repnz
ret
ins
xchg
dec
int3
adc
ds
and
add
jmp
jae
fs
mov
fldcw
inc
adc
sub
lock
inc
jnp
pop
lahf
in
popa
stos
sub
cld
dec
test
xchg
ret
cs
push
sbb
repnz
dec
sub
mov
sbb
and
mov
(bad)
cmps
add
call
stc
cmp
(bad)
push
pop
fiadd
bts
jbe
hlt
hlt
test
push
xlat
fdiv
cmp
pop
lock
out
mov
jb
fs
mov
mov
jmp
adc
fistp
xchg
aam
iret
or
dec
cmp
jl
pushf
pop
div
pop
lock
test
repnz
movs
ficom
je
add
dec
xchg
rep
push
fwait
jns
pop
or
test
mov
lock
add
cdq
stc
out
loope
push
in
jne
jno
clc
cwde
mov
jns
sub
rcr
dec
inc
outs
jmp
sar
out
lahf
push
mov
mov
mov
call
scas
xor
dec
add
mov
nop
pop
push
movs
dec
test
adc
sub
cmc
and
jno
fidivr
out
ds
(bad)
outs
repnz
clc
jle
xor
push
call
test
out
test
nop
iret
pop
data16
cdq
adc
test
sub
jecxz
xchg
cwde
popa
in
jbe
lds
sbb
push
icebp
xchg
int3
push
cmps
rcl
cli
(bad)
out
test
lea
rcr
(bad)
mov
xchg
or
jbe
xor
sub
adc
test
dec
scas
data16
ins
fld
iret
in
(bad)
sahf
out
push
mov
cmp
fwait
mov
cmp
shr
scas
aad
inc
std
jmp
lock
pop
xlat
push
ins
js
dec
sub
mov
add
push
mov
test
xor
mov
shl
push
push
push
outs
cs
test
push
in
imul
lahf
popf
adc
(bad)
fiadd
fsub
cmp
ins
pop
or
stos
ins
dec
or
xchg
test
(bad)
or
xchg
pop
arpl
out
add
(bad)
dec
rcl
mov
xchg
cmp
mov
sub
dec
arpl
cmps
sbb
ret
xchg
or
repnz
pop
inc
movs
mov
int
push
sbb
push
(bad)
pop
call
xor
popa
lods
xor
adc
aad
arpl
not
cdq
pop
(bad)
cdq
aas
leave
scas
sahf
ss
test
dec
call
pop
pop
and
adc
jae
jne
out
adc
or
cmp
ins
cdq
out
add
sahf
push
push
add
das
add
mov
jnp
or
mov
(bad)
retf
sub
mov
iret
sub
pusha
aaa
popa
repz
aad
pushf
fs
inc
jno
xor
mov
ja
push
out
sar
in
dec
xor
aad
and
minps
retf
sub
adc
jmp
icebp
repz
(bad)
fimul
ror
mov
xor
xchg
lea
push
cmp
sub
jge
test
fucomp
out
jo
cmp
jmp
dec
jb
out
test
sub
mov
jns
popa
mov
or
in
xchg
inc
push
bound
sub
push
aad
(bad)
pop
mul
jne
test
fidiv
inc
push
shr
ja
cld
cmp
sar
and
pop
out
leave
pushf
loopne
pop
scas
push
and
ins
mov
push
int
and
(bad)
(bad)
(bad)
ficomp
call
push
xchg
fadd
cmps
sbb
js
int3
sbb
jmp
fwait
enter
pop
lds
call
pop
jns
dec
xchg
mov
jns
fldcw
xor
imul
(bad)
sub
stos
dec
(bad)
outs
fs
cdq
jae
mov
cld
das
addr16
mov
mov
pushf
cmp
jb
dec
aad
js
sub
cmp
cmp
aaa
int
xor
push
stc
pop
fwait
or
ss
push
xor
push
(bad)
addr16
bound
and
shr
dec
imul
and
les
gs
(bad)
(bad)
sahf
aaa
test
mov
je
or
lods
mov
and
mov
jbe
popf
int3
dec
sbb
jge
daa
inc
jno
jne
lahf
sub
dec
sub
push
call
bound
sbb
pop
dec
(bad)
or
sub
in
xor
xchg
and
ins
jae
push
cli
lds
adc
pop
scas
mov
out
mov
cmps
cwde
dec
pop
dec
sub
adc
mov
mov
and
popa
fmulp
into
cmp
imul
les
pop
mov
mov
ret
xor
pop
retf
xchg
xor
mov
shl
pop
inc
inc
aas
xchg
mov
popa
(bad)
xchg
jmp
jge
pop
jmp
mov
fcmovnu
retf
(bad)
pop
pop
pushf
clc
jno
stos
fbstp
or
inc
cmps
lea
jmp
test
call
mov
adc
mov
mov
int
sbb
mov
jns
adc
mov
push
je
pop
call
mov
add
inc
outs
inc
icebp
rcr
jg
gs
mov
adc
dec
adc
aad
cmp
in
int
ror
mov
cmps
mov
push
inc
retf
icebp
jl
popf
retf
mov
and
inc
pop
inc
shl
je
cmp
movs
inc
pop
push
lea
pusha
sti
pop
ins
and
sbb
cmc
xchg
ret
std
je
(bad)
xlat
mov
dec
jge
aam
xor
out
clc
or
mov
push
out
icebp
add
and
lahf
jne
push
data16
aas
adc
leave
mov
call
mov
popf
mov
add
dec
jo
pop
sbb
bound
pop
iret
(bad)
iret
sub
push
loop
push
ins
sub
clc
dec
(bad)
inc
inc
or
add
ins
sub
daa
cmp
mov
inc
push
adc
ret
mov
dec
int
rol
lods
lds
mov
ret
cmps
(bad)
bound
pop
jg
dec
es
(bad)
fnstenv
add
xchg
xor
fsubr
jmp
add
pop
pop
cmp
jb
fdivr
push
pop
(bad)
mov
add
dec
mov
or
out
sbb
sub
sbb
(bad)
push
je
outs
imul
mov
dec
popf
es
nop
mov
neg
xchg
xchg
mov
es
frstor
push
jno
je
leave
nop
jp
xchg
es
or
xchg
add
aad
ficom
inc
mov
lock
movs
xor
cmp
fstp
xchg
out
xor
sbb
jg
inc
retf
lods
cmp
push
cld
outs
adc
(bad)
aam
jmp
xor
cmc
mov
dec
mov
xchg
mov
push
aad
or
and
and
paddq
jo
or
popa
inc
pop
mov
fucomip
pop
(bad)
out
shl
into
pop
test
pop
cwde
mov
test
mov
shr
or
out
pop
fistp
inc
sub
ror
mov
or
div
mov
out
cwde
inc
sub
inc
(bad)
mov
adc
leave
fcomp
push
test
jmp
ja
bound
fld
(bad)
stos
xor
and
push
push
setb
xchg
(bad)
pushf
shl
(bad)
cmps
and
daa
mov
lea
aas
and
popa
ret
shl
mov
xchg
xchg
jp
out
mov
sbb
jg
add
addps
jl
pop
push
mov
ja
out
call
shl
fld
dec
shl
jbe
jmp
icebp
scas
cli
ins
aaa
nop
mov
jmp
ret
sub
in
cmc
cmp
lea
or
ret
xchg
adc
shl
jae
xchg
jg
xchg
cmp
mov
movs
adc
das
mov
mov
jl
aam
fwait
repnz
ret
fstp
sti
shl
add
aas
adc
jg
xor
cmps
out
test
lods
fsub
dec
fbstp
jbe
sub
(bad)
shl
jb
xor
fiadd
out
loop
fnsave
xlat
mov
test
loope
cld
lods
inc
fmul
and
int
cmps
mov
sub
mov
push
daa
cld
test
cmc
in
mov
into
loope
mov
rol
pop
dec
jae
fsubr
(bad)
enter
retf
mov
or
(bad)
scas
aaa
xchg
cmp
add
jnp
xor
lods
outs
cmp
sub
jg
push
sub
cmp
sub
jae
data16
xchg
clc
iret
inc
jl
jmp
xchg
imul
and
xor
xchg
cmp
leave
or
push
xchg
jnp
dec
add
rol
ins
mov
and
fidivr
xchg
push
test
repnz
sbb
xor
mov
out
(bad)
mov
xor
ret
inc
inc
mov
or
(bad)
adc
lea
loope
mov
inc
test
cmps
pop
pop
imul
mov
jg
and
add
test
les
sbb
loop
add
popa
mov
pushf
sub
jae
xor
and
arpl
dec
fnstenv
add
clc
test
out
pop
mov
sub
popf
sbb
inc
push
adc
xchg
loopne
mov
cmps
cmp
push
xor
mov
mov
adc
std
mov
cmp
adc
jo
test
sar
inc
lahf
inc
inc
sub
sbb
inc
les
call
sbb
mov
push
and
push
mov
enter
aad
add
push
mov
lea
mov
dec
cmp
arpl
mov
mov
fxch
push
in
pop
stos
test
(bad)
out
jecxz
fcomip
loope
in
or
xor
mov
fdiv
aas
cmp
into
pop
push
cmc
stc
push
mov
test
outs
test
loopne
shl
stos
sbb
mov
out
sub
ins
mov
scas
sub
sar
std
stos
repnz
jle
call
ja
movs
pop
aas
sbb
dec
shl
push
cmp
and
mov
dec
dec
mov
pop
jg
shl
retf
push
out
and
jle
pushf
mov
movntps
cmp
imul
test
mov
jecxz
pop
jle
inc
jl
pop
mov
mov
push
ja
jo
and
outs
inc
scas
stos
das
repz
push
call
daa
mov
mov
rcl
aad
add
push
data16
sahf
shl
adc
jmp
rol
jno
add
cmp
dec
inc
cs
test
rcl
fwait
sbb
cmps
xor
xchg
lahf
ficomp
cmp
xchg
push
mov
jle
imul
xchg
dec
jns
dec
jns
fsub
push
fs
sbb
ins
lods
xor
pop
loop
jmp
inc
push
pushf
shl
mov
sbb
movs
leave
add
cwde
fwait
jge
xlat
mov
dec
adc
lea
inc
pop
mov
imul
retf
pcmpgtd
loopne
sahf
out
inc
adc
popa
xlat
cdq
cmp
shl
js
mov
mov
push
push
jne
(bad)
mov
in
lods
arpl
call
jno
jl
jbe
and
imul
jno
cmp
lock
sbb
fldenv
mov
in
adc
stc
sbb
mov
push
dec
sar
and
cmps
aam
dec
xor
outs
adc
lea
sub
mov
outs
pusha
xchg
ror
mov
mov
cmc
test
lods
inc
mov
imul
cwde
ins
xchg
ins
(bad)
sbb
mov
cli
add
add
test
mov
inc
xor
mov
(bad)
int3
sar
test
inc
daa
cmp
popa
mov
pop
das
sub
or
movs
scas
std
mov
or
fucompp
cmp
jo
pop
cmp
std
mov
ss
dec
into
lahf
(bad)
fnsetpm(287
jo
mov
enter
rol
mov
jle
xchg
movs
xor
test
sub
cmp
xor
xchg
outs
shl
xchg
push
pushf
jno
xchg
popa
pop
imul
int3
add
ret
ins
rcl
dec
neg
loop
cmp
aad
cmp
cmp
loopne
push
xchg
loope
test
cld
dec
aad
hlt
jno
xchg
dec
adc
xchg
xchg
pop
cmp
dec
in
ret
and
jl
loope
push
scas
scas
jmp
and
shl
dec
call
mov
cmp
test
sub
enter
xchg
fld
pusha
mov
sub
ror
test
data16
mov
adc
push
xchg
shl
loop
mov
xchg
pop
jge
cmp
mul
test
pop
jo
adc
stc
mov
ret
jmp
arpl
inc
sub
sub
nop
jmp
mov
jp
dec
push
ss
addr16
std
inc
std
dec
mov
adc
in
mov
adc
arpl
add
scas
jle
and
push
ret
stos
cmps
aaa
mov
icebp
enter
jne
js
sbb
mov
je
xchg
gs
add
mov
xlat
push
mov
mov
cld
cdq
cmps
push
hlt
(bad)
lods
mov
add
xchg
les
out
clc
mov
movs
out
iret
pop
sbb
push
add
(bad)
mov
jp
repnz
pop
sub
or
adc
fwait
repz
dec
test
xchg
push
test
loope
stc
pushf
sar
jne
popf
nop
add
lds
mov
test
movs
pushf
push
jbe
jl
adc
and
cmp
out
pop
fisub
das
xor
out
add
push
adc
call
movs
cli
cwde
mov
data16
and
xchg
shl
adc
jmp
in
cmp
scas
fcomp
lea
fwait
mov
jecxz
mov
loope
pop
xchg
lods
ret
ins
sbb
mov
hlt
fwait
jns
nop
cld
stos
jnp
sbb
add
add
std
add
out
jne
add
inc
adc
adc
shl
adc
ins
cli
shl
frstor
cmp
jmp
in
jmp
lods
gs
xchg
stc
xchg
mov
xlat
pop
push
std
test
push
pop
and
pusha
imul
or
dec
outs
movs
dec
cmc
pop
push
cli
cmp
push
lods
sub
fidivr
mov
aam
dec
jle
or
pop
movs
hlt
cmc
test
mov
scas
pop
or
in
jno
cmp
xor
jo
add
inc
push
fsubr
cmps
bound
imul
cld
ja
popa
lea
out
sub
inc
mov
fiadd
pop
or
pop
push
out
int3
jp
es
push
push
mov
jmp
xor
push
pop
lods
cmps
std
pop
push
aad
jge
mov
sar
pop
cmp
jb
xor
sub
imul
(bad)
(bad)
jmp
pop
push
and
xchg
push
and
add
sar
inc
icebp
xchg
aam
out
mov
(bad)
cmc
pop
or
push
enter
out
push
repz
out
and
int3
retf
sbb
test
and
mov
cwde
dec
add
cdq
and
call
pop
imul
and
aas
jg
pop
out
arpl
dec
aad
or
jo
mov
rol
sub
retf
pushf
sub
xchg
sbb
sub
mov
xor
xor
sti
pushf
mov
fucomip
push
jge
or
xor
repnz
inc
out
push
shr
icebp
leave
cmp
push
dec
ficomp
fnstenv
pop
sbb
jnp
lahf
adc
jno
push
and
pop
out
daa
(bad)
jne
cmc
sbb
xchg
cmps
enter
(bad)
cmp
es
cmc
jo
inc
mov
mov
adc
cmps
and
cwde
sub
xor
fdivr
mov
pusha
xchg
xchg
test
call
fwait
jo
cmp
inc
mov
add
adc
pop
xchg
mov
std
and
(bad)
bound
xchg
pushf
jl
inc
out
(bad)
stos
mov
ret
push
popa
mov
fwait
(bad)
call
pop
mov
sar
(bad)
sbb
jge
and
jge
je
ret
das
je
xchg
(bad)
ds
xchg
loopne
(bad)
push
mov
out
pop
xor
lods
scas
xchg
lods
shl
fcmovnbe
or
out
jmp
jnp
psubb
push
adc
jbe
push
js
cmp
movs
fcmovu
outs
xchg
fs
cwde
or
mov
jno
mov
ds
or
sbb
lock
xchg
sbb
lock
sub
xchg
call
imul
(bad)
xlat
sbb
rcl
out
inc
adc
mov
inc
stos
scas
ret
mov
imul
sahf
mov
jecxz
cmp
push
add
dec
mov
retf
into
add
jbe
cmps
iret
mov
jecxz
int
xchg
sub
frstor
inc
sbb
mov
xchg
stos
pop
sbb
push
stos
cmc
and
std
out
mov
imul
pusha
xor
mov
stc
xchg
jle
daa
ret
scas
sub
pop
dec
add
out
cmp
cld
jo
loope
mov
jl
retf
loopne
popf
mov
loop
mov
outs
je
mov
iret
dec
adc
push
imul
lods
cdq
iret
clc
jnp
pop
pop
out
bound
fdiv
ins
shl
data16
mov
sbb
jp
std
cld
add
dec
sbb
xchg
in
sar
iret
add
or
cld
push
hlt
gs
mov
bnd
dec
push
enter
xchg
test
sar
test
lock
es
(bad)
jmp
sbb
lock
jmp
repnz
pop
scas
sbb
dec
out
cli
adc
pop
icebp
es
xor
jbe
scas
add
sahf
cmp
shl
and
dec
ds
loopne
stc
dec
push
aad
es
lea
sar
mov
test
sar
xchg
arpl
call
sub
sub
add
daa
dec
or
push
bound
mov
dec
movs
in
enter
mov
mov
inc
scas
enter
pop
and
cmc
outs
sar
(bad)
xchg
mov
push
pop
daa
std
scas
sub
sub
add
pop
jecxz
lea
loope
adc
mov
sbb
loope
jnp
fimul
cmp
add
push
dec
(bad)
lahf
sbb
xchg
mov
shr
pop
add
and
pop
in
cmp
cs
stos
sub
out
lods
and
xchg
pusha
pop
cmps
adc
jo
imul
push
xchg
sar
scas
out
mov
and
dec
cmp
or
xor
retf
pop
movs
add
and
adc
xchg
ret
sbb
push
or
inc
and
hlt
fst
and
adc
outs
push
bnd
scas
inc
sbb
imul
fmul
pop
sti
sub
int
std
cmp
ins
sbb
and
lahf
adc
rol
xor
test
fs
inc
dec
jmp
js
adc
dec
xchg
ins
pop
loop
mov
xchg
in
daa
mov
pop
mov
aam
push
mov
movs
iret
call
pop
nop
je
mov
js
xchg
hlt
cld
aad
or
loope
mov
pusha
hlt
test
xor
fs
pop
sbb
test
out
call
sar
pushf
pop
call
xchg
sbb
jno
cmc
xchg
inc
push
adc
xor
xchg
loopne
(bad)
out
cmc
scas
mov
cld
call
xchg
or
test
test
push
ja
clc
add
jmp
(bad)
or
inc
mov
dec
push
mov
addr16
shr
or
ret
icebp
call
scas
cmp
bound
fist
shr
push
dec
or
mov
cwde
fisub
and
movs
pop
(bad)
or
fs
sbb
sbb
in
push
add
gs
pop
or
jo
or
pop
ins
mov
test
and
dec
push
test
or
out
and
xchg
pop
aad
test
add
sbb
(bad)
rol
mov
jmp
and
shl
sub
xlat
cmp
xchg
push
mov
mov
mov
or
add
pop
mov
adc
lds
pop
mov
inc
(bad)
loopne
fcom
arpl
xchg
jne
jecxz
pop
bound
pop
in
push
sub
xchg
arpl
pop
cmc
mul
adc
mov
pop
dec
loopne
mov
and
add
cdq
pop
xor
aaa
(bad)
jl
dec
into
aam
scas
jmp
(bad)
retf
or
aam
mov
jle
movs
push
aam
mov
inc
outs
jae
mov
and
aad
jbe
arpl
inc
inc
dec
add
repnz
mov
out
pop
jns
inc
pop
cs
into
ud0
repz
pop
mov
jnp
aas
addr16
cmc
out
and
jmp
pop
retf
mov
mov
sbb
jmp
out
je
or
cdq
lock
(bad)
mov
dec
mov
dec
xor
stos
jno
movs
sub
mov
mov
mov
lods
lds
sub
pusha
xchg
dec
shl
popa
rol
aas
cli
je
outs
sub
dec
outs
sbb
(bad)
repz
mov
or
outs
out
(bad)
sub
icebp
push
movs
mov
or
sar
mov
xor
jle
or
or
xlat
xor
inc
sbb
push
(bad)
imul
xor
dec
xchg
pcmpgtd
popf
fldenv
mov
xchg
js
sub
pop
call
jp
cmc
add
lea
adc
xor
lods
jae
add
cmp
xor
mov
jae
faddp
clc
mov
mov
stc
in
push
loope
pop
jne
xor
push
ror
ror
xchg
pop
jo
dec
dec
movs
push
cmc
out
dec
inc
mov
les
xchg
fdiv
mov
jo
xchg
or
sub
aas
mov
aaa
mov
int3
jl
pop
and
and
sbb
xchg
xchg
push
sbb
sub
xchg
jb
lds
adc
jg
xchg
xchg
loop
rcr
or
cmc
stc
daa
and
out
add
je
dec
cli
xor
jne
mov
cmp
sub
add
jbe
and
fs
int3
cmp
mov
movs
jo
hlt
in
(bad)
xchg
or
or
retf
jge
stos
dec
es
iret
adc
test
iret
in
es
movs
gs
sbb
shl
mov
jle
xor
mov
add
js
mov
jnp
push
aad
loopne
add
xchg
repnz
rcr
mov
lds
popa
sub
sbb
adc
and
xchg
je
div
cmp
cli
int
ja
mov
pop
dec
imul
mov
xchg
dec
cmp
into
mov
push
xchg
xor
xchg
dec
dec
inc
xor
mov
pusha
jno
jmp
enter
xor
push
jb
mov
outs
imul
mov
repz
inc
int
push
(bad)
xlat
jbe
cmps
inc
or
ret
pop
jge
xor
push
gs
mov
jbe
sub
push
inc
imul
push
adc
cwde
push
fdiv
mov
adc
fisttp
(bad)
mov
or
mov
sub
aaa
(bad)
pslld
les
daa
fistp
add
or
or
popf
jo
jne
sub
mov
mov
hlt
dec
push
mov
push
xchg
js
inc
push
dec
and
jbe
retf
and
hlt
imul
mov
shr
fild
ucomiss
push
pop
jg
xor
lea
data16
lea
mov
lock
jmp
add
mov
pop
nop
adc
fwait
jle
in
aad
adc
xlat
jb
jo
loop
rol
mov
cmp
xor
das
sub
leave
cmp
ret
mov
ror
arpl
adc
movs
shl
daa
jne
in
sbb
xchg
in
dec
ss
add
ss
sti
sbb
sbb
movs
in
fstp
cwde
jnp
pop
leave
inc
xor
in
push
ja
sub
jp
bound
enter
test
in
movs
inc
dec
cdq
outs
loop
xor
mov
push
xor
movzx
ror
clc
jmp
scas
int3
out
inc
mov
dec
scas
scas
gs
sub
fsubr
bound
xor
das
cmp
popa
in
jae
xrelease
sbb
out
movs
pop
and
hlt
fisttp
fcmovu
ret
(bad)
sbb
push
mov
fs
ja
jge
lods
jle
pop
push
mov
mov
pop
xchg
jae
cmp
cdq
stos
repnz
lds
shl
shl
scas
retf
fisub
jmp
push
inc
repz
xor
cs
add
out
add
sub
mov
lods
scas
pusha
test
aam
cmc
inc
mov
or
sbb
dec
mov
stos
pop
icebp
outs
sti
mov
inc
(bad)
mov
in
loope
(bad)
sbb
or
jb
jmp
cmp
adc
sbb
mov
add
push
cs
adc
mov
fs
mov
dec
jmp
fcomip
or
and
adc
int
jge
pop
lahf
jle
retf
lmsw
mov
fld
jno
push
fld
pop
lods
or
dec
xchg
mov
std
mov
loope
lds
xor
aam
push
jecxz
test
repz
cmp
mov
xor
mov
fcom
ret
stos
push
jb
jne
and
lods
sbb
dec
arpl
test
bound
loop
jae
or
sbb
push
jl
sbb
fcomi
in
addr16
xchg
xchg
fsubr
add
mov
in
test
add
pop
loope
movs
mov
sbb
les
xchg
sub
jmp
pop
adc
cmp
inc
fdivr
pusha
push
adc
xlat
adc
dec
bound
and
pop
rcr
popa
lods
add
test
(bad)
pop
mov
(bad)
push
xor
pushf
aad
sbb
sbb
mov
scas
pop
clc
fnstsw
retf
ins
mov
mov
pop
push
test
xchg
cmp
fisttp
fistp
jno
cmc
(bad)
in
mov
pop
in
adc
and
pop
cmps
scas
jne
xor
aam
es
pop
out
push
xor
loope
hlt
and
popa
aam
and
add
in
fwait
or
outs
mov
div
inc
or
push
test
leave
add
das
ficomp
fs
sub
jnp
mov
xlat
mov
mov
jmp
loopne
cmps
mov
into
int
lds
sti
outs
inc
gs
mov
sub
inc
mov
sbb
test
icebp
jne
jnp
inc
jmp
mov
sar
add
fmul
ins
inc
mov
out
ror
jns
mov
mov
es
test
cmp
mov
jp
mov
inc
into
add
cdq
icebp
jecxz
pop
(bad)
mov
scas
retf
inc
ret
mov
(bad)
xor
popf
aad
(bad)
cmps
cmp
ret
and
push
jecxz
xchg
or
es
clc
mov
ffree
int
(bad)
jnp
xchg
jecxz
add
add
mov
(bad)
int
(bad)
jmp
mov
sub
mov
xchg
mov
fmul
iret
jo
out
shl
loop
dec
cli
dec
(bad)
mov
scas
xchg
and
dec
jo
push
arpl
jnp
test
push
clc
into
mov
xor
jmp
xor
(bad)
adc
cwde
jecxz
sub
push
scas
mov
scas
ret
pop
repnz
cs
mov
cmp
test
call
fwait
iret
js
adc
leave
jg
mov
or
out
movs
and
push
jg
jecxz
mov
js
mov
es
and
sub
call
(bad)
jmp
call
xchg
imul
int
dec
das
mov
bound
mov
mov
ja
sahf
inc
psrlw
cmp
and
call
mov
into
push
or
bnd
fisttp
sbb
cs
pop
push
hlt
int3
arpl
int
lods
or
xor
pop
jmp
in
retf
loopne
loope
shl
int
mov
push
rol
mov
mov
into
lock
xor
push
jl
clc
bswap
sahf
sbb
xor
xor
(bad)
out
cmp
pop
call
or
inc
stc
fdivr
sub
push
arpl
dec
loope
mov
xlat
outs
out
jne
mov
retf
lock
add
cmp
sahf
dec
popa
cmps
test
xchg
xor
dec
mov
xor
pop
sbb
repnz
aam
push
xor
pop
mov
jge
mov
xlat
out
inc
or
lock
(bad)
adc
leave
and
or
xchg
pop
cmp
into
add
mov
sub
(bad)
mov
mov
jns
stc
xchg
jmp
test
sahf
or
sub
jmp
rol
int
out
aam
inc
dec
ja
aaa
and
out
adc
xchg
push
mov
sbb
fisub
push
ja
mov
sub
lock
jae
into
mov
out
bound
jle
xor
sub
icebp
sub
add
ret
push
ds
aaa
dec
xchg
pusha
and
cmp
adc
cmps
call
es
les
test
xor
inc
dec
xor
scas
or
jae
xor
or
dec
ror
add
sbb
out
sbb
and
mov
inc
dec
push
sub
mov
mov
adc
mov
sar
fld
into
inc
push
fisttp
mov
mov
jmp
adc
dec
push
into
push
ret
cmps
jle
fst
daa
dec
lea
push
jle
int3
rcl
mov
push
cmps
test
js
hlt
sub
pushf
popf
outs
(bad)
sbb
les
xlat
lahf
mov
push
call
sub
aam
mov
mov
mov
mov
push
sub
sub
push
mov
cmps
jbe
inc
jne
scas
repnz
aad
inc
inc
mov
mov
sbb
and
mov
je
fcmovnb
lea
in
(bad)
les
push
ficomp
imul
js
addr16
jmp
adc
ret
mov
add
lahf
cmp
ror
sub
jae
stos
sahf
repnz
retf
mov
clc
cmovle
mov
mov
xlat
inc
loope
push
push
ficom
test
bound
pop
mov
ss
repnz
cld
je
into
fmul
test
mov
or
sub
ret
pop
fs
rol
outs
(bad)
pop
mov
pop
into
cmc
push
data16
sar
das
xor
sub
pop
mov
cmp
xchg
les
shl
push
jo
mov
fwait
jnp
push
test
(bad)
lods
dec
loope
arpl
inc
imul
inc
std
nop
adc
mov
mov
loop
dec
jge
(bad)
cmp
xchg
pushf
aaa
and
cdq
add
fadd
inc
loop
mov
inc
pop
stos
xor
add
shr
(bad)
loop
jmp
test
inc
repz
add
and
xchg
mov
fwait
(bad)
call
or
adc
call
cmc
push
test
hlt
test
pop
cmp
xor
lds
xchg
jbe
push
mov
mov
mov
jecxz
sbb
(bad)
jmp
cmp
cmp
push
adc
(bad)
xor
divps
lods
stos
adc
mul
and
stos
inc
fcomp
sub
push
inc
out
mov
cwde
and
pop
lea
pop
jae
mov
cmps
(bad)
(bad)
aam
hlt
test
add
test
fs
mov
sbb
stos
aad
dec
and
or
test
in
stos
ja
out
xor
inc
jp
push
mov
loopne
and
dec
es
ins
test
not
fs
loope
add
leave
fcomp
xor
jge
das
loop
push
sbb
out
inc
jmp
inc
add
and
xchg
xchg
mov
pop
xchg
or
clc
cmp
cs
sub
push
push
jae
or
lods
inc
sbb
adc
dec
mov
in
mov
into
inc
add
or
jnp
cs
mov
cmp
add
push
sbb
test
ret
sub
jmp
mov
je
xchg
mov
mov
ret
clc
mov
sbb
push
enter
rcl
jp
xchg
ins
int3
shl
repnz
cmp
or
bound
test
pop
and
ret
jle
std
(bad)
xor
jle
xor
lock
in
or
pop
je
or
xchg
bsr
outs
jbe
xor
out
ret
clc
ret
lock
adc
sub
retf
add
sbb
adc
adc
leave
xchg
repnz
lods
push
jg
xor
jge
push
mov
pop
out
bound
adc
dec
retf
or
popa
mov
jo
aad
mov
mov
data16
sbb
movs
shl
mov
lock
das
push
pop
pushf
inc
shl
das
aaa
adc
xor
pop
out
pop
adc
in
dec
sbb
adc
jne
fs
cmp
cmp
jle
jecxz
imul
pop
lds
scas
les
xor
fs
xor
out
sti
cmp
scas
sub
dec
mov
jb
sub
sub
addr16
popa
jo
sbb
mov
aaa
pop
jp
pop
jl
adc
inc
inc
push
shl
add
sti
loop
adc
pop
(bad)
in
lods
and
addr16
pop
dec
inc
(bad)
repz
test
mov
pop
lds
push
sbb
dec
push
in
cmps
js
push
into
jmp
sub
(bad)
cwde
mov
adc
das
dec
fldcw
cmps
cs
jnp
adc
loopne
jbe
(bad)
pop
(bad)
add
mov
cmps
jg
adc
jno
(bad)
or
mov
imul
call
lock
add
enter
or
and
sbb
mov
and
repz
jg
cmp
fsub
jge
inc
adc
push
jg
in
test
xlat
push
(bad)
mov
std
push
cs
in
mov
jnp
ins
fwait
rcl
mov
jb
lahf
inc
ror
sub
in
mov
sar
(bad)
out
push
ret
sbb
xchg
leave
add
sbb
pushf
mov
adc
dec
movs
jl
int3
mov
imul
xor
iret
nop
(bad)
fiadd
mov
cmps
inc
not
leave
push
ror
(bad)
pop
and
pop
repnz
rcr
push
(bad)
repz
es
pop
mov
cmp
aaa
push
mov
int3
loope
out
call
mov
pop
xchg
mov
(bad)
mov
shl
retf
jbe
shl
add
or
xor
add
jmp
in
jae
sbb
adc
inc
out
movs
ror
cmovp
rcl
or
hlt
inc
nop
sbb
jns
or
xchg
push
cmp
push
not
jmp
ret
mov
sub
xchg
lahf
sbb
pop
jge
and
cmc
lock
repnz
dec
push
mov
js
inc
xor
adc
mov
in
fs
cmp
jl
push
sbb
push
push
ret
fisub
pop
int
push
jp
(bad)
(bad)
inc
dec
daa
dec
mov
mov
push
inc
repz
add
out
sub
mov
ds
enter
pusha
push
sar
in
iret
stos
dec
dec
cmp
pop
int
xchg
(bad)
aas
cs
adc
dec
imul
adc
jp
test
pop
loope
adc
mov
test
push
inc
ja
mov
xor
and
pop
xchg
mov
lock
add
mov
and
hlt
test
(bad)
jl
cwde
stos
data16
movs
mul
mov
call
clc
lods
cmp
or
mov
aam
inc
imul
(bad)
retf
imul
jl
adc
sub
lds
cmps
cmp
push
repz
rcr
or
rcl
inc
cmovge
fcmovb
add
mov
dec
(bad)
retf
jle
retf
pushf
dec
jl
lahf
mov
sub
xchg
adc
pop
mov
or
and
lods
not
rol
fdivr
xchg
pushw
mov
jmp
imul
push
dec
jl
cmps
mov
and
aaa
inc
cmp
cmps
xor
jp
push
push
or
mov
pop
ret
sahf
sbb
out
sub
daa
and
hlt
mov
mov
aaa
push
and
and
sub
pop
mov
retf
add
mov
ja
int
sub
inc
aas
imul
in
xor
mov
mov
mov
js
sub
push
ins
cmp
jb
mov
xlat
das
or
popa
dec
cmps
cmp
in
cmps
add
(bad)
jmp
mov
ret
std
stos
mov
fst
nop
fucomp
stos
fsub
inc
pop
inc
inc
into
push
shl
push
ja
mov
movs
xchg
iret
je
pushf
mov
repnz
jne
jecxz
icebp
es
push
test
or
ds
mov
and
mov
loop
xchg
(bad)
pop
inc
dec
sbb
jb
push
movs
cmps
mov
adc
fimul
xchg
jecxz
nop
out
sub
sub
addr16
push
add
xchg
jne
std
ins
cld
int3
inc
cmp
in
jno
sub
lock
retf
mov
inc
mov
out
mov
push
scas
fs
sbb
inc
ss
hlt
in
sbb
dec
sbb
mov
dec
add
jns
rol
gs
sub
jecxz
in
or
cmps
je
popa
ss
outs
jb
or
push
push
rcr
mov
sub
xor
in
cdq
leave
je
fcmove
cmp
out
fnstenv
mov
movs
shl
fisub
jae
xchg
jmp
inc
cwde
fld
aad
mov
sbb
and
dec
sbb
pop
fisttp
mov
mov
sub
sbb
adc
push
mov
inc
mov
into
jns
xchg
and
data16
test
sbb
fbstp
in
pop
fild
xor
xchg
and
xchg
out
aam
xor
adc
test
sub
mov
int3
call
(bad)
push
pop
mov
and
jmp
dec
popa
cmps
stc
push
(bad)
outs
push
xlat
push
xchg
sbb
xor
je
or
inc
jmp
fst
pop
sub
inc
jecxz
mov
jb
(bad)
cmp
inc
loope
(bad)
adc
outs
aam
cs
aad
pop
cmp
fs
cmps
out
movs
jmp
cwde
or
push
xchg
iret
adc
inc
out
lds
adc
and
dec
cmp
sbb
adc
xchg
jmp
(bad)
stos
push
rcl
cmp
fs
pop
das
inc
push
mov
mov
sysenter
or
nop
and
mov
sub
lds
fsubr
bound
paddd
xchg
fwait
push
push
add
retf
jl
(bad)
in
xor
retf
or
add
mov
sub
or
adc
lahf
pop
mov
pop
adc
add
xor
sahf
push
das
sub
and
mov
ins
jnp
pop
stos
jp
in
inc
inc
movs
(bad)
cmp
jg
jno
mov
mov
push
push
outs
mov
idiv
push
(bad)
sahf
and
fidiv
(bad)
push
mov
jb
pop
fimul
mov
fbld
add
or
and
out
cmps
mov
push
jns
mov
inc
mov
dec
imul
lea
cmps
call
cwde
ja
mov
pushf
jecxz
iret
(bad)
fcomi
add
pop
xchg
popf
and
iret
cmp
sub
push
mov
fs
movs
(bad)
adc
clc
repnz
adc
js
xor
je
xor
dec
cmc
jmp
sub
idiv
bound
call
inc
sbb
mov
push
fs
movs
jle
call
push
adc
mov
adc
xor
jns
mov
adc
mov
xor
rol
fdiv
push
mov
mov
adc
(bad)
sbb
mov
sub
test
mov
and
outs
imul
or
add
push
adc
int
inc
xor
jp
icebp
movs
ftst
out
mov
cmp
cmp
adc
std
and
mov
punpckhbw
mov
inc
and
pop
iret
lds
lods
mov
lea
ins
fs
mov
cmps
or
sub
out
mov
into
cmp
(bad)
xor
mov
adc
call
in
mov
cmpxchg
nop
aaa
mov
push
std
jae
and
xchg
xor
retf
jmp
popa
shl
in
sub
push
mov
push
and
out
dec
popf
out
push
dec
and
pop
into
pusha
push
or
jbe
(bad)
pop
jmp
push
adc
bound
aad
or
jae
add
push
loope
std
pop
dec
inc
icebp
sbb
ret
aaa
jnp
add
cld
cmp
(bad)
dec
xchg
push
ins
call
and
push
addr16
push
(bad)
ins
leave
xor
pop
fmul
movs
clc
not
xchg
xor
cmp
iret
jnp
push
mov
scas
shl
lods
es
fld
sub
pop
lods
dec
mov
mov
push
std
fsubr
cdq
std
daa
pop
jg
xor
sbb
xor
loop
ss
xlat
and
push
movs
rol
loope
sar
sbb
(bad)
(bad)
and
aam
(bad)
div
lahf
pop
pushf
les
arpl
div
add
(bad)
sbb
cs
push
loopne
and
mov
int3
jae
xor
xchg
fidiv
adc
jp
xchg
outs
add
rcr
dec
mov
cli
jb
sub
mov
sub
pushf
rol
shl
push
dec
sub
and
iret
add
xor
sbb
push
xchg
sub
adc
cli
lods
cmc
lods
mov
and
jo
and
daa
xor
mov
das
movs
xor
div
aaa
retf
retf
dec
cs
adc
repnz
xor
pop
dec
retf
das
cmp
cmp
sbb
and
xchg
bound
out
scas
mov
out
jmp
push
(bad)
test
shl
push
add
ja
inc
jae
movs
test
(bad)
pop
or
fstp
mov
sub
pop
ins
cmp
push
clc
push
imul
arpl
mov
push
repz
fstp
pushf
mov
pop
or
das
mov
cli
jmp
addr16
movs
push
fdiv
loope
push
je
loopne
movs
mov
mov
je
mov
out
repnz
jbe
and
arpl
bound
xor
jmp
sbb
mov
pop
sub
mov
push
pop
lods
mov
dec
fistp
mov
hlt
scas
les
sbb
push
xor
and
or
dec
lods
mov
pusha
imul
sub
jl
imul
ret
mov
adc
imul
stos
mov
or
cmps
pop
lock
push
and
or
mov
sub
mov
in
xchg
(bad)
add
call
iret
mov
test
mov
rcr
mov
xchg
nop
fimul
out
mov
aas
fild
xor
mov
or
mov
scas
jmp
dec
ds
cdq
push
sub
dec
dec
xor
out
fdivr
jp
aad
test
js
lds
retf
stos
dec
mov
and
sub
fild
jae
pop
or
add
fdivrp
cmp
mov
sub
sub
sar
adc
jbe
ja
ror
or
in
jmp
inc
pop
pop
call
sub
nop
out
inc
out
mov
pop
or
addr16
pop
and
ins
test
mov
push
lods
and
push
and
jo
fst
(bad)
pop
sub
push
sbb
sub
sbb
aam
mov
test
mov
(bad)
sbb
mov
cmps
aas
mov
gs
enter
ins
pop
adc
outs
pop
ret
pop
ins
stos
mov
test
nop
sub
lea
jb
mov
out
dec
scas
out
pop
js
mov
call
sub
outs
sbb
in
xor
cmc
icebp
call
cwde
rcl
xor
lahf
jnp
out
aam
es
xchg
cmp
pushf
mov
pop
addr16
fdivr
push
ins
push
movs
cmps
and
js
mov
xor
and
jns
jnp
xor
ss
stos
mov
dec
mov
pop
stos
xor
or
ret
mov
(bad)
fist
dec
jno
or
ins
sub
dec
jle
jle
xchg
push
imul
sub
(bad)
xor
mov
fs
retf
dec
cmp
sahf
inc
dec
cmc
push
jnp
mov
mov
(bad)
fcom
pop
add
test
cmp
test
rcr
js
xchg
mov
push
repz
or
js
shl
xchg
fisubr
ja
lods
mov
lock
jb
or
dec
popf
dec
loope
je
(bad)
outs
and
clc
or
out
shl
repnz
fdiv
shr
adc
push
loopne
or
mov
sbb
sar
jae
adc
lahf
mov
movs
or
and
mov
mov
lods
(bad)
push
mov
jle
sub
jns
dec
mov
fisttp
cmp
(bad)
jne
popa
mov
in
imul
push
cmc
inc
xchg
jmp
shl
or
es
mov
clc
or
mov
adc
or
ss
fs
imul
call
stc
repz
pushf
inc
mov
add
sbb
aaa
jb
mov
mov
dec
push
mov
or
and
je
pop
pop
jecxz
pop
imul
out
sti
stos
inc
in
in
loop
popa
sub
dec
xor
rol
arpl
nop
mov
jg
leave
enter
cs
sub
cmp
int
repnz
mov
mov
dec
pop
mov
and
xor
gs
or
push
cmp
jae
jbe
addr16
sahf
sahf
mov
sub
push
cli
pop
rcr
loop
lds
popf
xchg
fcmove
dec
fcmovb
cli
pop
int
hlt
or
xchg
xchg
push
xchg
lea
loope
jo
sbb
mov
and
push
sub
pop
sub
add
xchg
xchg
pop
int3
ret
xchg
jle
(bad)
cmps
lods
cmp
xor
and
mov
lods
or
and
jmp
sub
daa
cmp
xor
inc
mov
sub
imul
mov
movs
xor
dec
pop
sub
out
ucomiss
pop
add
pusha
jp
add
in
test
in
mov
retf
sti
sub
fisubr
sub
mov
dec
scas
pop
imul
ins
dec
sub
mov
sub
es
lds
xchg
push
das
enter
xchg
mov
jnp
or
inc
jg
gs
and
push
lods
cmps
mov
mov
cmps
ss
lods
jmp
jnp
mov
pop
enter
lods
test
out
out
jae
xchg
mov
push
xor
mov
mov
movs
clc
jl
inc
arpl
push
inc
add
fcompp
sub
xchg
rcl
ja
repnz
push
push
push
lods
adc
std
hlt
jp
lods
push
dec
and
cmc
imul
or
(bad)
and
dec
dec
jmp
inc
shl
mov
jmp
adc
xchg
fnsave
adc
cmps
enter
inc
sbb
pop
pop
mov
pusha
sub
mov
inc
sbb
mov
mov
cwde
cmps
mov
stos
cmc
dec
jnp
loope
out
mov
push
sub
movs
enter
movs
pop
loope
ficomp
aaa
mov
pop
out
push
pop
jo
and
in
adc
lds
mov
mov
sub
sbb
test
sbb
cmps
xor
pop
xor
xchg
mov
lods
(bad)
cmp
adc
push
mov
add
outs
cmc
inc
cmc
mov
ret
mov
pushf
adc
xor
push
jmp
loopne
add
cs
or
pop
add
aaa
push
sbb
add
fild
test
push
fadd
push
pop
inc
leave
out
xchg
fcom
ds
not
xor
fcom
xor
aam
push
or
pop
or
loope
ja
mov
inc
push
in
dec
in
addr16
lea
jmp
cld
add
pop
cli
call
loope
imul
and
daa
xor
mov
mov
sub
das
xor
adc
hlt
cmp
repz
sbb
dec
lods
call
dec
lock
dec
das
dec
test
out
stc
call
test
cld
pop
call
shr
daa
movs
mov
adc
rcl
inc
aas
jo
cmp
rol
daa
scas
jl
retf
xchg
daa
test
sub
dec
lods
call
lea
mov
pop
xchg
or
push
adc
mov
leave
jmp
and
aaa
dec
xor
das
fwait
dec
hlt
imul
pmulhw
pop
adc
xchg
test
sub
lods
push
sub
xchg
adc
out
xor
jp
sub
fiadd
loope
out
movs
ret
dec
pop
xchg
add
retf
mov
in
lea
cs
arpl
dec
int3
and
stos
out
jb
rcr
inc
xor
idiv
ja
retf
or
pop
lock
xor
sub
add
sbb
cwde
fisubr
push
loop
cmp
pop
pop
mov
loopne
pop
pop
jns
lock
loop
(bad)
jne
adc
pop
dec
es
inc
inc
inc
or
retf
repz
xor
mov
ins
mov
and
ret
fucom
xor
jae
jb
mov
mov
cmp
adc
or
std
push
push
xchg
ss
adc
cdq
in
inc
or
mov
fs
fucomp
bound
push
(bad)
ror
push
mov
inc
mov
or
mov
adc
not
test
call
push
push
sbb
inc
(bad)
ins
dec
xor
and
enter
shl
(bad)
sbb
pop
inc
imul
inc
xchg
add
(bad)
call
dec
inc
repz
repnz
pop
adc
jle
scas
stos
movs
or
push
mov
cmp
inc
mov
add
lea
add
popa
in
arpl
fist
push
cli
xor
mov
cmps
sahf
mov
xchg
xchg
pop
mov
daa
gs
repnz
leave
adc
jns
inc
xlat
mov
push
and
jmp
cld
adc
xor
pop
pop
add
mov
inc
xlat
adc
dec
call
mov
ins
neg
and
jmp
mov
fcom
inc
jl
push
mov
call
(bad)
aad
and
ss
pushf
in
mov
hlt
ds
cmp
xchg
sub
add
nop
pushf
push
jg
mov
gs
pop
cmc
rcr
popa
inc
pop
iret
in
cs
push
adc
mov
mov
call
ret
(bad)
push
sbb
mov
shl
jge
popa
cmp
ja
or
inc
push
add
cmp
sar
cmp
rol
movs
mov
jp
ds
sub
fnsave
nop
arpl
jp
or
mov
add
or
xor
push
push
cld
stos
or
pop
mov
add
xor
shr
mov
adc
(bad)
mov
sbb
jbe
pop
push
mov
sbb
das
hlt
mov
mov
aaa
mov
int3
shl
jmp
mov
xor
pusha
stc
std
cmp
leave
or
addr16
or
fmul
push
ins
mov
dec
jne
adc
lods
mov
daa
push
xchg
mov
in
mov
jge
fiadd
mov
mov
mov
lds
aam
sub
or
mov
inc
cmp
sub
mov
mov
dec
mov
cwde
or
addr16
jp
ret
test
or
ja
mov
cld
push
outs
(bad)
jecxz
jg
pop
outs
pusha
xor
les
call
adc
pop
push
in
pop
call
xlat
lea
or
hlt
xchg
out
das
(bad)
out
cs
(bad)
gs
aam
mov
sbb
shr
aas
test
fidiv
xor
sub
mov
mov
call
lods
xchg
test
mov
or
sbb
clc
test
lock
mov
sub
dec
pop
inc
lahf
push
adc
ss
dec
xchg
cmp
sar
push
sti
xchg
fidivr
jae
mov
leave
cmp
mov
dec
ins
sub
imul
or
cs
push
ds
sbb
xor
mov
jl
into
cwde
jnp
cmp
in
mov
sbb
loope
in
xchg
out
pop
xchg
cmp
mov
dec
(bad)
int3
dec
sbb
ret
call
jecxz
stc
stos
call
je
aas
mov
pop
mov
pop
dec
and
fsubr
rcr
mov
xor
xlat
rol
add
mov
jbe
jg
jns
aad
mov
sar
mov
pop
fwait
repz
pop
push
pop
(bad)
fnsave
push
pop
shl
iret
mov
or
jb
add
or
rcl
jmp
mov
gs
dec
jmp
jb
inc
push
xchg
xor
push
and
sbb
into
outs
jno
or
add
push
adc
adc
(bad)
xor
retf
and
lahf
add
mov
jno
xor
movs
clc
cli
adc
cmp
xchg
mov
in
sbb
loop
inc
adc
fucom
pop
fbstp
pop
xlat
pop
jmp
inc
mov
ficom
mov
mov
scas
push
push
push
es
xchg
ret
sar
pop
pop
cmps
sub
loope
and
loope
or
or
and
mov
out
and
and
or
mov
and
outs
int3
fistp
ss
lock
and
ror
adc
xchg
lea
lods
clc
scas
leave
ins
mov
int3
fisubr
(bad)
gs
xchg
in
xchg
sub
std
and
add
fld
jecxz
lea
dec
sbb
test
push
cwde
ins
mov
cdq
mov
std
lock
lods
imul
dec
fstp
mov
push
div
jge
push
or
inc
imul
ja
movs
sub
(bad)
daa
jo
cmp
in
mov
add
ja
test
cwde
test
jge
push
hlt
inc
adc
cmp
push
ja
dec
add
in
xlat
aas
packssdw
pop
cmps
pop
dec
jns
ror
xor
add
mov
shl
cmps
pop
call
jne
ins
pop
in
jp
leave
(bad)
jo
xlat
sbb
or
pusha
out
aam
adc
adc
rcr
mov
retf
and
bound
mov
inc
movs
and
sahf
fsub
loopne
add
scas
and
jle
arpl
cmps
iret
cmp
sbb
fadd
pop
mov
loop
mov
cmp
dec
push
or
add
ret
dec
jo
ror
or
lods
sahf
mov
or
xchg
jg
cld
adc
jle
arpl
sbb
dec
xor
jno
loop
pop
pop
addr16
repnz
xchg
cwde
and
dec
xchg
stos
fs
iret
jle
jmp
cmp
aaa
and
jge
pushf
sbb
sbb
xor
sbb
jno
inc
out
imul
pop
jl
xchg
rcl
in
cmp
in
push
jge
adc
cmps
or
popa
fidiv
mov
test
jb
sldt
sar
inc
and
adc
xor
leave
pushf
paddusw
stc
lods
retf
test
jge
rcr
js
dec
cmps
jnp
imul
iret
sub
or
aaa
shl
push
hlt
dec
fidiv
mov
mov
pushf
push
movs
jmp
jae
push
mov
xor
addr16
cmp
out
fiadd
or
imul
aas
les
mul
mov
mov
jmp
cmp
inc
das
and
jb
xor
or
ss
inc
test
loop
(bad)
mov
adc
pop
enter
xchg
mov
cmp
cld
mov
sub
and
sbb
scas
repz
les
pop
xchg
inc
adc
mov
xchg
cmp
outs
xchg
jno
jae
dec
bound
retf
xor
jp
or
xor
scas
in
mov
lock
mov
cmp
(bad)
jge
ins
mov
scas
ja
mov
jl
xchg
push
mov
ja
shl
xor
push
mov
adc
sub
je
push
jecxz
push
sub
jp
arpl
nop
pop
lahf
xor
popf
and
sub
out
and
test
test
stos
xor
adc
imul
mov
stos
xor
xor
mov
in
stc
fidiv
xchg
push
fdivrp
xchg
push
clc
out
sbb
inc
push
rcr
lods
nop
xchg
sub
jmp
dec
in
fisttp
in
ja
mov
or
ret
cld
mov
sub
arpl
inc
mov
add
push
out
es
arpl
in
xor
xchg
adc
cmp
add
mov
dec
int
rcr
imul
mov
sbb
and
dec
mov
loopne
mov
mov
test
xchg
repz
fs
add
rol
shl
idiv
mov
inc
mov
xchg
pmulhuw
push
mov
mov
push
and
popa
(bad)
xor
cli
mov
in
shr
jg
sbb
in
scas
xor
inc
inc
sub
sub
mov
test
daa
cmps
add
cmc
pop
and
sti
add
xchg
mov
test
jge
dec
xor
int
adc
loope
aas
ss
lds
imul
aad
or
xchg
outs
mov
stos
mov
sbb
jp
dec
push
pop
sti
pop
cmp
aas
mov
mov
in
dec
sub
movs
loop
push
cmp
inc
and
clc
fs
sbb
(bad)
int
retf
stc
inc
arpl
push
sub
and
sbb
adc
sahf
xchg
test
add
cmp
arpl
sub
cmp
cwde
mov
fisttp
addr16
mov
call
shl
stc
sahf
pushf
mov
hlt
stc
xchg
push
pop
mov
mov
sbb
adc
jb
(bad)
loopne
jns
dec
mov
shr
push
and
fs
push
xchg
add
aaa
mov
xor
daa
cli
add
add
leave
lods
xor
(bad)
pop
mov
rcr
inc
jae
arpl
(bad)
xor
push
stc
retf
pusha
xor
cmp
and
mov
and
in
ss
jns
fsubr
icebp
fwait
out
push
bswap
imul
(bad)
xchg
xchg
dec
jmp
ins
pop
shl
outs
es
push
das
test
nop
inc
add
loope
pop
movs
sar
and
or
bound
(bad)
xor
sub
out
test
cdq
sar
mov
pusha
dec
mov
pop
push
int3
xlat
stc
and
fidiv
jecxz
iret
mov
xor
or
pusha
or
in
cmp
aad
jle
mov
push
lea
xchg
sbb
jo
aad
or
cwde
call
sub
(bad)
xchg
cmps
cmp
xchg
in
(bad)
rcr
fbld
xchg
aaa
inc
sub
jp
pop
adc
outs
hlt
xor
fmul
cwde
loop
test
je
je
mov
mov
sbb
(bad)
cdq
sbb
(bad)
repz
jns
je
pop
fs
repnz
mov
cmp
arpl
push
sbb
fsubr
or
inc
scas
std
in
les
xor
das
pop
pusha
(bad)
xor
out
dec
inc
test
popa
imul
mov
pusha
pop
stos
xlat
fstp
call
imul
adc
lds
xlat
call
mov
mov
jp
mov
out
sub
call
iret
into
sub
inc
adc
and
mov
nop
sti
cmc
imul
std
adc
fist
cmps
jmp
inc
clc
fisubr
cmp
shl
mov
inc
hlt
xchg
fadd
outs
xchg
adc
sbb
and
xchg
inc
scas
pop
test
les
jb
hlt
mov
test
iret
adc
mov
dec
lea
test
mov
add
jmp
in
push
jmp
xchg
push
fild
pop
mov
popa
push
cld
out
sub
retf
retf
mov
mov
addr16
mov
into
inc
xor
cmps
add
xchg
pop
inc
adc
inc
sub
inc
rol
cli
cdq
ins
jne
aas
imul
mov
mov
mov
inc
mov
mov
mov
fimul
xchg
cmps
mov
and
retf
pop
(bad)
fsub
shr
mov
or
sub
inc
cld
push
cmp
push
(bad)
in
jmp
jge
adc
adc
call
out
jge
jecxz
jl
ja
jo
daa
dec
pop
repz
pusha
and
inc
cld
or
nop
dec
jb
adc
iret
out
jns
(bad)
stc
fild
mov
mov
jnp
sar
xor
pushf
inc
sahf
dec
dec
push
int
inc
mov
retf
and
pop
call
and
push
mov
aas
push
cmp
mov
retf
add
sub
(bad)
mov
idiv
sub
push
jno
sub
(bad)
push
loope
imul
mov
pop
pop
lahf
jl
sub
mov
scas
fidivr
push
add
mov
arpl
data16
out
(bad)
ficomp
cmp
cld
sub
nop
pop
or
sbb
test
js
push
mov
add
je
dec
cmp
sbb
ins
loopne
cmp
lock
pop
or
outs
cld
and
in
fsubr
xchg
(bad)
xor
pop
(bad)
(bad)
mov
sbb
or
popf
stos
cld
pop
jg
xchg
xchg
hlt
cs
mov
sahf
jp
mov
fistp
sub
cmp
(bad)
fstp
dec
sbb
lods
jnp
mov
ret
in
xor
scas
inc
jne
lock
xchg
into
mov
cmp
sbb
(bad)
jmp
ss
xor
or
call
jge
mov
lods
(bad)
push
test
pop
sti
push
hlt
cmp
call
pop
and
and
retf
cmp
into
or
data16
jecxz
cmp
cmps
outs
dec
mov
adc
dec
mov
mov
(bad)
jecxz
adc
xor
or
loop
jne
xor
fistp
jl
mov
mov
sub
dec
sbb
aaa
in
pop
lock
adc
aad
nop
hlt
js
dec
xor
inc
std
add
xchg
jo
add
mov
rcr
mov
out
or
retf
cmps
or
mov
push
push
inc
fimul
push
scas
movs
sub
sub
pop
lds
std
or
(bad)
retf
sub
mov
inc
adc
cmovbe
jae
mov
(bad)
popa
pop
cmps
jg
sbb
sub
sbb
ja
outs
ror
xchg
adc
jmp
rcl
or
mov
or
out
xlat
jae
and
sub
cld
mov
inc
xor
dec
sub
cmps
jae
or
sbb
imul
cmp
jne
dec
ss
pop
cmp
(bad)
ins
shl
or
jmp
mov
lods
sub
mov
add
sar
jo
dec
call
out
call
pop
ss
sbb
xor
or
int3
dec
int3
jns
jmp
cld
jae
test
push
(bad)
std
data16
in
fldpi
ins
cdq
jmp
popa
push
aam
dec
xchg
pop
pop
cmp
nop
popf
(bad)
adc
mov
lods
sbb
stc
mov
mov
fwait
imul
xor
jle
(bad)
pop
adc
cld
into
xchg
repnz
pop
adc
mov
idiv
sbb
aas
and
xor
xchg
add
repnz
dec
mov
sub
mov
cs
xor
call
in
push
mov
loop
xchg
jmp
sub
xchg
dec
loopne
pop
ja
aas
cmps
mov
out
aam
push
sub
sub
inc
ins
retf
stos
fmul
mov
and
cmp
scas
push
push
inc
cld
mov
mov
mov
rcr
test
rol
cmp
sub
mov
xchg
push
xchg
xor
aas
and
cld
cdq
scas
add
in
lods
or
aas
dec
pushf
push
dec
mov
outs
and
push
call
xor
push
jg
mov
lahf
xchg
xchg
fs
and
call
inc
test
sahf
xor
push
data16
xlat
ret
nop
mov
fcomp
pop
in
addr16
pop
clc
add
cmps
mov
repz
push
bound
out
push
nop
out
pop
clc
xchg
mov
add
fmul
push
inc
push
shl
inc
fdiv
and
inc
xor
sbb
mov
int3
push
pop
jp
ss
ds
pop
pusha
in
jnp
sti
or
jl
jmp
addr16
inc
frstor
inc
pop
xchg
jmp
mov
fistp
ret
push
js
enter
pop
pop
(bad)
retf
shl
add
lods
in
test
ss
fs
pushf
stos
sbb
sub
test
call
mov
push
int
pop
ins
pop
push
aam
mov
shl
js
ficomp
sbb
outs
adc
dec
out
mov
idiv
dec
or
jge
(bad)
jmp
call
cmp
pop
push
into
xchg
(bad)
xchg
or
xchg
mov
jae
in
mov
push
arpl
call
in
mov
scas
mov
cmp
push
pop
stos
cs
xchg
xor
cs
fldcw
adc
enter
ror
ja
xor
jns
sbb
mov
sbb
mov
xor
ins
mov
imul
in
out
xlat
push
jbe
dec
xor
fisttp
(bad)
jl
push
pushf
test
pop
inc
mov
jb
jbe
js
repnz
out
adc
ret
adc
pop
imul
retf
das
out
fmulp
push
push
lahf
dec
imul
sbb
dec
mov
pop
xchg
inc
outs
mov
leave
std
jg
xor
inc
mov
mov
mov
pop
cmps
cmc
je
push
adc
xor
pop
mov
std
push
movs
jns
ss
(bad)
mov
fimul
jmp
mov
(bad)
sbb
les
movs
mov
icebp
push
adc
or
out
cs
push
in
loopne
jnp
adc
adc
jne
in
jo
and
pop
jne
or
mov
and
or
mov
icebp
inc
ins
mov
adc
inc
clc
stos
jg
pop
out
pop
pusha
mov
or
push
add
or
mov
test
ds
pop
(bad)
inc
loopne
loopne
ret
shl
xchg
mov
sbb
gs
mov
mov
mov
(bad)
mov
jb
ja
daa
adc
mov
or
aas
imul
loope
sbb
pop
js
pop
dec
lahf
jns
mov
in
stos
dec
ret
inc
repnz
movs
fcomp
adc
enter
faddp
(bad)
gs
mov
mov
xor
fs
push
mov
repz
cmc
inc
push
cmp
push
lds
xchg
fild
and
inc
fist
fs
outs
call
mov
std
pop
sbb
xchg
sbb
aad
in
(bad)
mov
les
mov
mov
push
push
dec
sub
sbb
pop
jne
or
stc
ss
lods
inc
pop
sbb
fadd
out
adc
loope
aad
pop
rol
(bad)
xchg
lds
repz
in
jge
ror
adc
adc
cmp
fist
call
clc
xchg
and
test
stc
xor
dec
dec
lods
sbb
push
les
or
test
xor
out
cmp
mov
or
cmp
pop
cdq
popf
inc
mov
and
sbb
mov
pop
jnp
pop
push
rcr
imul
sbb
mov
inc
lock
sahf
mov
jmp
lea
cdq
mov
(bad)
mov
pop
sahf
add
dec
out
or
xchg
dec
and
jmp
lods
retf
ja
movntq
sti
loop
sbb
idiv
xlat
mov
test
fbld
or
pop
ins
sbb
cmp
jnp
movs
nop
xchg
jbe
shl
stc
daa
push
jmp
test
mov
push
and
leave
mov
add
mov
mov
xlat
sub
adc
test
inc
leave
fldcw
fimul
into
adc
jle
pop
pop
ds
pusha
xchg
out
and
pop
jbe
mov
ror
or
ret
add
add
imul
(bad)
sub
xchg
adc
push
mov
mov
push
test
push
imul
cs
div
sub
shr
push
je
jno
loop
int
sub
jg
push
and
jp
aad
jnp
stos
in
pop
popa
jae
cli
out
push
loop
cwde
dec
test
movs
jecxz
pop
retf
sbb
ficomp
movs
mov
fucom
inc
pop
in
je
jmp
adc
cmp
pop
or
mov
sbb
push
loop
(bad)
adc
adc
cmp
mov
aad
(bad)
mov
retf
dec
or
(bad)
into
adc
cwde
push
scas
mov
jecxz
int3
push
xchg
jp
ja
mov
mov
sub
fnstsw
and
sub
sub
pop
push
test
mov
sbb
pop
retf
sub
popa
in
hlt
push
pop
nop
test
and
cs
ds
mov
cmp
test
je
or
or
shr
adc
mov
inc
lahf
push
or
cmp
cdq
mov
stos
add
inc
or
ins
push
adc
(bad)
or
cmps
jl
xchg
fcom
sbb
movs
jecxz
sub
xlat
call
mov
ffree
cmp
adc
imul
aaa
mov
push
cwde
push
mov
in
push
push
inc
mov
js
push
push
frstor
aaa
push
xchg
jle
add
je
xchg
cs
add
xchg
jns
xchg
ror
outs
(bad)
xor
xchg
repz
jbe
adc
inc
shr
dec
ins
daa
fdivr
shr
xor
outs
ret
xor
and
bound
(bad)
retf
push
push
(bad)
fs
mov
add
sbb
test
les
xor
adc
pop
xchg
pop
mov
popa
mov
dec
nop
sub
daa
jmp
mov
dec
(bad)
jne
scas
loopne
push
dec
jb
dec
xor
dec
movs
call
add
push
(bad)
(bad)
cmp
pop
mov
loop
js
xchg
fisub
fldcw
jle
data16
xchg
mov
nop
push
movs
sahf
mov
sar
push
sbb
jl
and
jecxz
bound
jo
js
repz
sbb
mov
xchg
(bad)
fwait
into
test
and
dec
xchg
shl
xchg
int3
fnstenv
xchg
or
in
movs
js
add
mov
shr
mov
push
cmp
pop
mov
pop
stos
pop
mov
ins
mov
nop
ja
add
inc
mov
or
cmp
into
dec
sub
sahf
cli
lods
ret
adc
gs
add
push
push
in
fadd
pop
lea
imul
cli
fwait
jmp
sub
movs
movs
add
mov
test
cwde
jnp
adc
nop
stos
movs
add
add
test
pop
inc
or
mov
xchg
sbb
aam
adc
lds
sti
jno
jmp
popa
and
mov
(bad)
xlat
cmp
scas
ret
and
jae
pop
add
imul
stos
enter
dec
xor
out
rcr
xor
jp
in
rol
out
clc
pop
lea
test
sbb
xchg
pushf
xchg
out
add
mov
in
aaa
xchg
pop
movs
sbb
inc
push
xor
je
iret
mov
push
sbb
(bad)
cmps
aad
cmps
daa
mov
fs
hlt
dec
mov
pop
push
aas
ins
mov
add
inc
not
ret
cmp
enter
aaa
pop
cmp
ja
dec
movs
shl
mov
and
mov
in
test
jge
ret
mov
leave
rcl
xor
mov
nop
mov
pop
loop
dec
scas
cmc
das
sub
nop
push
(bad)
std
push
fild
or
push
jb
cmp
xchg
mov
and
sbb
cmp
icebp
out
jp
wbinvd
push
jns
(bad)
dec
jne
dec
or
push
sbb
aaa
in
mov
sub
out
jmp
out
shl
sub
add
rcr
push
xchg
or
adc
(bad)
push
add
les
mov
outs
jno
mov
das
ror
imul
add
frndint
or
test
into
mov
je
dec
aam
test
call
add
fwait
test
xchg
rcr
pop
push
lds
test
add
int
shl
arpl
stos
mov
es
ss
sub
jbe
mov
je
std
jle
push
iret
call
aad
mov
xchg
bound
lods
ja
nop
fild
pop
push
scas
retf
xchg
push
adc
and
adc
jmp
sar
mov
push
sbb
jb
(bad)
(bad)
fcomp
mul
scas
xchg
call
jo
nop
xor
xor
mov
mov
add
ret
and
iret
pop
(bad)
(bad)
out
pop
pop
movs
inc
push
enter
call
imul
out
and
mov
push
pop
add
pop
inc
rol
xchg
and
jo
add
cmp
test
pop
xchg
and
inc
dec
cmp
les
out
xchg
in
cld
loop
inc
mov
xchg
scas
push
and
and
int3
cmp
je
fidiv
jb
fsubr
fcomp
adc
dec
scas
jmp
(bad)
dec
cmps
inc
xchg
out
int
push
or
inc
stos
cmp
cmp
pop
push
push
dec
jnp
cmp
icebp
fcomp
cdq
data16
push
jo
or
fidiv
pop
in
retf
gs
daa
sub
sub
test
push
adc
fnstsw
push
add
test
mov
mov
(bad)
aas
push
sub
test
add
retf
mov
push
xchg
pop
mov
pusha
add
mov
sahf
mov
inc
movs
sub
mov
ja
jno
mov
pop
xchg
in
jno
ins
or
dec
dec
repnz
xchg
jp
js
push
pop
and
movs
imul
mov
jg
sub
loope
ret
push
or
out
sbb
cmp
fistp
sbb
mov
jmp
and
data16
in
test
fs
cmc
mov
inc
shl
pop
lods
inc
pop
int
pop
stos
jp
cdq
xor
shr
xor
mov
pop
in
push
shr
in
xor
cmp
lahf
lods
adc
(bad)
hlt
mov
fwait
sbb
shl
mov
cs
gs
jns
adc
inc
inc
movs
add
test
sub
je
jp
mov
jle
or
dec
push
jb
push
shr
sub
jb
shl
pop
out
pushf
mov
enter
icebp
(bad)
(bad)
cli
dec
mov
pop
fisubr
outs
xor
push
adc
mov
cmp
(bad)
clc
push
(bad)
adc
and
outs
js
rcpps
ror
add
mov
pop
out
arpl
pop
outs
sahf
xchg
bound
ret
pop
cli
lds
xor
test
dec
out
(bad)
cmc
movs
test
pop
popa
(bad)
or
ud2
test
inc
cmp
stos
inc
xor
idiv
rcr
and
jb
outs
stc
add
mov
imul
mov
inc
mov
movs
cmps
mov
mov
sar
sbb
jmp
int
mov
push
stc
scas
movs
mov
mov
lods
dec
mov
dec
stos
sbb
cld
fwait
loopne
and
(bad)
data16
dec
popf
bound
mov
or
cmps
ins
cmps
loop
repz
pushf
ins
cmc
mov
pop
xchg
cld
sar
je
sub
sahf
loopne
arpl
cmp
fnstcw
mov
xor
pop
pop
sbb
cmp
sti
stc
imul
xchg
cmp
sbb
inc
imul
mov
mov
out
jnp
addr16
outs
add
xchg
push
or
ins
movs
fwait
mov
jne
xchg
jns
mov
sub
push
mov
ins
das
imul
das
pop
in
(bad)
les
stos
daa
adc
mov
or
imul
movs
mov
adc
or
pop
mov
add
mov
mov
stc
mov
retf
push
inc
inc
dec
xlat
stos
xchg
add
js
std
movs
jmp
xor
jnp
ficomp
and
(bad)
ret
jg
cmp
jg
cmp
movs
adc
mov
mov
test
mov
sub
dec
mov
or
or
ds
add
xor
mov
mov
aam
daa
jmp
push
imul
out
cli
out
dec
sbb
inc
or
stos
jge
and
aad
pop
xchg
pmullw
mov
pusha
outs
es
dec
sbb
mov
jb
push
and
cmp
out
fistp
fucomp
and
or
repz
sbb
mov
fbld
dec
mov
mov
jmp
jae
add
(bad)
jnp
in
push
cdq
add
xor
dec
(bad)
outs
xor
and
or
(bad)
icebp
mov
push
(bad)
push
pop
rol
adc
cmps
jo
js
ret
fst
cmp
scas
and
loope
adc
sti
jns
out
inc
mov
sbb
(bad)
xlat
cmc
cmp
(bad)
xlat
lock
dec
hlt
cmp
sbb
ins
ds
sub
lea
clc
cmp
mov
scas
shl
add
fsub
jle
bound
pusha
or
rcl
iret
xor
fcmovnb
scas
add
mov
fbld
mov
jne
popf
icebp
add
jnp
into
cwde
out
pushf
std
in
dec
lea
and
out
stos
scas
and
sbb
outs
lahf
sti
loope
les
out
out
fistp
retf
mov
(bad)
mov
mov
jle
xchg
lahf
pop
retf
data16
lods
push
sbb
jns
int
or
cs
mov
or
loop
push
inc
adc
ja
xor
push
fucomi
out
push
mov
shl
jmp
xor
loope
out
add
jnp
gs
std
ins
cld
adc
xor
es
pop
dec
xchg
adc
sub
frstor
inc
dec
(bad)
lds
mov
cmps
mov
dec
or
mov
xor
push
pop
push
int
mov
cld
and
call
dec
jnp
mov
pusha
mov
movs
sub
ds
(bad)
in
push
pop
cdq
mov
into
add
jp
fisubr
mov
es
mov
call
jl
(bad)
cmp
xchg
jnp
shr
inc
mov
or
outs
push
test
sahf
shl
sar
xchg
mov
sahf
mov
add
rep
imul
daa
cmp
test
scas
xchg
test
fcmovne
out
(bad)
cmps
imul
xor
(bad)
sti
sahf
xor
mov
into
les
cwde
pop
fmul
mov
je
jmp
jae
jle
cmp
mov
lahf
inc
add
cmps
sub
xchg
movs
ds
cwde
mov
jg
mov
xor
shl
ds
(bad)
mov
jg
sbb
jp
pop
in
(bad)
xor
mov
or
dec
scas
lahf
call
cmc
mov
jns
loopne
pop
sbb
rol
dec
out
mov
aam
popf
pop
or
shr
and
(bad)
outs
mov
dec
ins
mov
nop
push
repnz
mov
push
retf
or
mov
cwde
mov
inc
enter
and
add
aam
xor
loopne
jmp
push
iret
ror
sub
aam
jle
sar
dec
adc
xor
push
in
jmp
inc
mov
cmp
in
lock
push
loope
dec
adc
or
inc
pop
jne
nop
retf
inc
test
call
pop
adc
push
je
mov
test
xor
aam
fdiv
and
mov
cmp
dec
jecxz
jge
iret
icebp
in
adc
jle
push
arpl
cwde
addr16
xchg
inc
ret
cmp
inc
ror
dec
sub
(bad)
jmp
dec
push
nop
enter
sub
add
mov
mov
lock
add
add
inc
jg
pop
sub
nop
add
xchg
inc
sbb
in
pop
xor
rcr
adc
gs
xor
push
pop
icebp
stc
fisttp
outs
sbb
fsubr
cdq
sbb
push
sub
mov
cmp
hlt
sbb
sti
dec
sbb
pop
test
lock
test
leave
call
mov
cmp
xchg
loope
inc
scas
and
daa
cmp
(bad)
lock
pushf
popa
cli
and
xor
jecxz
popa
inc
mov
xchg
sub
jns
mov
fcom
xchg
shr
out
xchg
hlt
push
adc
and
xor
dec
push
push
mov
and
xadd
add
xor
jb
cmp
sbb
jne
arpl
mov
adc
mov
fisttp
inc
add
mov
ret
mov
ss
out
xchg
cmp
fadd
xchg
fnsave
cmp
sbb
pop
in
enter
sub
xlat
push
pop
es
movs
inc
sub
stos
jecxz
push
aaa
and
xchg
pop
dec
(bad)
sbb
dec
inc
sbb
push
mov
(bad)
repnz
jbe
fldcw
cld
cdq
push
adc
xor
lea
sbb
mov
push
rcl
(bad)
dec
jge
or
and
rcl
pushf
cmp
popa
jno
ja
pop
aad
ficomp
inc
or
adc
stos
cli
mov
sub
cmp
jbe
shl
xchg
inc
sbb
bound
adc
pop
sti
push
iret
xchg
mov
dec
pop
fcom
mov
(bad)
(bad)
lods
fsubp
push
mov
and
jb
aad
jecxz
pop
fs
rcl
adc
nop
add
add
xchg
cmp
xor
dec
inc
push
inc
or
scas
imul
xchg
inc
xchg
xchg
xor
and
test
(bad)
stos
and
push
push
ds
loopne
ss
scas
inc
scas
mov
inc
inc
sbb
pop
pushf
mov
jnp
loope
inc
hlt
adc
sbb
cmp
pop
ret
das
sbb
xlat
add
sub
mov
cdq
loopne
stos
jmp
sub
or
addr16
scas
inc
cwde
pop
and
jb
into
inc
pop
push
outs
mov
call
leave
out
lea
pop
mov
loop
ins
arpl
inc
cs
stc
(bad)
and
outs
dec
je
jmp
sahf
aaa
ret
shr
dec
(bad)
push
test
add
movs
lock
in
daa
es
(bad)
ret
xchg
mov
stos
jo
cwde
pusha
sub
jbe
(bad)
ins
loope
shl
mov
call
sbb
inc
push
stos
popf
push
loop
cmp
inc
mov
cdq
mov
inc
cmps
pop
push
xor
cmps
mov
cmp
dec
and
xchg
cmps
push
ds
test
aam
xor
leave
and
test
sub
push
pop
push
and
into
add
cmps
cmp
push
xor
nop
mov
mov
or
(bad)
xchg
rol
jg
mov
ss
jae
add
xor
mov
add
bound
(bad)
imul
push
inc
adc
xor
inc
jle
je
sbb
dec
daa
enter
adc
mov
imul
ffreep
scas
rcr
test
cmps
outs
mov
cmp
xlat
in
and
push
je
or
div
sbb
cmps
cli
mov
add
pop
movs
fidiv
inc
adc
cmp
retf
fsubr
add
inc
iret
stos
adc
arpl
inc
mov
xlat
(bad)
push
cli
sub
mov
xor
jl
mov
dec
lahf
xor
in
dec
aaa
enter
add
add
les
cdq
(bad)
jne
cmp
dec
dec
ds
jecxz
loope
(bad)
pop
hlt
popf
xchg
adc
mov
xchg
scas
icebp
inc
jae
outs
jb
sar
inc
jmp
or
ficom
jno
pusha
fisttp
adc
cmp
push
popa
pop
mov
stos
addr16
mov
test
mov
loop
lock
aas
mov
dec
and
mov
or
sahf
mov
sti
inc
mov
or
stos
xor
mov
cmps
push
test
jg
inc
xlat
shl
mov
push
add
shl
xchg
ss
sub
inc
dec
inc
fild
push
retf
jno
stos
inc
adc
inc
cdq
mov
ins
ret
inc
sub
and
fisub
outs
mov
popa
push
std
dec
adc
int3
aas
mov
jp
jmp
popa
cmp
loopne
out
inc
ret
jno
jecxz
jle
shl
add
aas
aas
rcr
push
loopne
sbb
scas
int
cmp
dec
add
loope
cmovg
jae
mov
add
and
mov
jmp
aas
xrelease
inc
ret
cmp
das
out
xor
fs
sar
jecxz
pop
jg
cmp
repz
inc
jg
pushf
jno
sub
fs
adc
ret
iret
popf
pushf
dec
retf
mov
xchg
shl
dec
imul
mov
cmp
push
sahf
mov
out
adc
sbb
inc
cmp
gs
(bad)
stos
add
shl
fmul
les
jg
jbe
adc
(bad)
aam
and
mov
clc
cdq
(bad)
jae
mov
fisubr
test
pop
jmp
in
push
and
add
cmp
and
scas
sbb
jmp
dec
jmp
adc
test
add
push
inc
js
popf
pop
pop
movs
sub
aam
stc
push
sub
pop
and
mov
inc
jbe
mov
test
popf
(bad)
iret
xchg
sbb
mov
mov
adc
aas
or
adc
test
pop
push
pusha
adc
fwait
add
test
add
enter
cmc
adc
in
add
sub
mov
call
(bad)
shl
neg
xchg
test
loop
inc
cmp
test
pop
lea
jmp
cmp
ror
xchg
cwde
pop
icebp
cmps
sbb
push
lahf
addr16
xchg
mov
enter
xor
fadd
sub
jecxz
pop
cmp
fisub
fbld
jno
dec
sbb
daa
stos
inc
fld
jb
mov
adc
sahf
xchg
js
fnstenv
mov
sbb
xor
les
mov
jo
jmp
cmps
xchg
mov
ins
iret
enter
sub
pop
popa
mov
push
lea
(bad)
clc
gs
push
push
lea
inc
sti
jo
and
add
sub
movs
dec
ja
pop
icebp
fsub
loope
retf
jmp
(bad)
fidivr
cmp
or
(bad)
loope
mov
sub
jge
or
inc
pop
pop
imul
in
push
jno
add
sub
dec
shl
movs
iret
scas
jno
xlat
daa
lock
mul
sahf
jl
sti
in
cld
int
jne
lods
in
jno
push
push
enter
outs
push
sbb
int
repz
jbe
(bad)
stos
mov
mov
stos
daa
mov
das
rcr
cmps
idiv
jmp
cmp
js
jns
sub
mov
inc
(bad)
icebp
and
mov
and
xchg
xor
mov
xor
test
fsub
adc
(bad)
(bad)
mov
lock
inc
ss
pop
leave
cs
mov
sub
xor
aaa
or
xchg
xchg
add
mov
adc
idiv
idiv
outs
push
xor
mov
mov
sub
nop
adc
pop
push
addr16
stos
leave
or
aam
cmps
adc
movs
retf
js
mov
xor
xor
adc
cmc
cmp
lea
adc
xlat
adc
jmp
packuswb
or
call
lods
pop
inc
lds
lods
pushf
sbb
in
fstp
cld
repz
ds
add
cmp
and
lock
jns
lds
jns
mov
aam
mov
add
aad
arpl
repz
sub
adc
jecxz
push
inc
or
push
mov
inc
ins
sub
adc
loope
push
lds
cmp
stc
repnz
cmp
dec
cmp
pop
lock
xchg
jb
hlt
cdq
test
ficomp
add
adc
mov
sub
ret
ret
ret
and
mov
mov
div
pushf
rol
lods
mov
mov
ins
mov
pop
add
push
mov
retf
adc
jmp
cld
(bad)
mov
xchg
push
aaa
xchg
cmps
test
(bad)
or
scas
sbb
inc
jnp
inc
lods
in
inc
push
out
gs
pop
or
(bad)
push
shl
inc
pop
mov
stc
js
dec
aas
ds
push
cmp
xchg
lahf
inc
pop
and
cli
cmp
in
add
jmp
sub
pop
or
sbb
push
daa
test
enter
fwait
imul
xchg
xlat
mov
lds
in
jl
xchg
jne
fistp
push
xchg
fidivr
xchg
mov
or
inc
push
inc
lahf
mov
xchg
fiadd
sbb
mov
cli
cwde
std
inc
out
bound
xchg
popf
movs
dec
out
jle
jl
xchg
mov
fisttp
push
out
js
add
and
adc
in
and
clc
and
js
mov
cmp
loop
fcom
inc
xchg
ins
push
sbb
sub
test
cmc
xchg
xchg
cmc
xor
push
ss
iret
out
jmp
xor
idiv
jmp
fs
(bad)
in
aad
loope
ss
stos
jb
pusha
jnp
das
popf
leave
jbe
add
and
icebp
ja
or
sti
gs
cli
ins
clc
in
sub
mov
jns
sub
mov
js
loop
mov
mov
cmc
dec
aad
out
out
adc
retf
jns
dec
add
je
xlat
push
daa
xor
mov
mov
and
push
loop
sub
jecxz
mov
xor
push
(bad)
pop
std
scas
into
pop
sbb
pop
aas
in
clc
jecxz
fisubr
push
dec
mov
cmps
outs
mov
mov
xor
nop
push
add
adc
or
sti
retf
cwde
or
or
pusha
xchg
jne
scas
adc
sahf
push
cmp
lods
loopne
cli
xchg
bnd
sbb
int3
jmp
cmp
push
scas
or
jmp
jp
loop
jecxz
push
jge
or
ret
retf
xchg
inc
fwait
or
addr16
neg
mov
adc
inc
and
mov
std
mul
add
push
sub
clc
stos
ret
push
stc
call
test
mov
in
pop
lahf
and
jecxz
mov
jbe
adc
xchg
setle
test
xor
stos
popf
stc
inc
repz
sub
in
jne
inc
retf
addr16
add
in
gs
dec
iret
rol
mov
shr
xchg
dec
xlat
mov
jb
in
(bad)
jmp
les
fwait
jg
jae
clc
in
lahf
fiadd
push
outs
mov
pusha
pop
mov
fisubr
add
xor
jge
dec
fwait
(bad)
jno
mov
ins
xor
inc
neg
or
mov
outs
sub
shl
xchg
jg
jle
xchg
fs
jnp
imul
cld
pop
adc
and
adc
test
les
and
jp
pop
ret
sbb
sub
aad
imul
sub
loope
in
add
enter
pop
cmp
sbb
push
call
or
dec
loope
dec
mov
test
sub
pop
pop
in
stc
jmp
xor
sbb
inc
adc
jb
icebp
je
mov
xor
sbb
cmp
(bad)
sub
xchg
push
fisubr
cmps
adc
and
cli
addr16
or
lea
mov
xchg
(bad)
pushf
lock
mov
inc
xlat
mov
movs
xor
ins
inc
mov
mov
mov
not
ror
dec
mov
jmp
mov
outs
push
imul
mov
pushf
nop
pop
mov
xchg
mov
loope
dec
(bad)
loope
js
test
sbb
(bad)
cwde
retf
bound
dec
dec
fidiv
sub
movs
stos
mov
ret
xor
movs
fstp
sbb
mov
test
jno
enter
sub
les
sbb
mov
push
enter
dec
das
popa
jmp
aas
stos
outs
iret
jmp
pop
xchg
mov
and
sti
push
stos
enter
mov
(bad)
xchg
push
repnz
je
lea
inc
push
and
jne
popa
cmp
dec
lahf
jne
pop
sbb
scas
cmp
xchg
jmp
sbb
xor
das
rol
pusha
pop
jle
shl
ins
ret
or
jb
test
sahf
lea
imul
sub
(bad)
pop
sub
fs
inc
cmp
cmp
jb
push
sub
jb
in
dec
fisttp
cmp
rcr
das
dec
ins
mov
cmp
idiv
jg
sub
aaa
push
push
int
sub
or
mov
in
in
out
aas
push
xchg
outs
pop
pushf
sbb
jns
pop
and
pop
stc
add
shl
cmc
cs
cmp
popa
scas
cmps
cmp
jns
jns
(bad)
pop
pop
add
push
rcl
pop
cmp
pop
and
push
cmp
int3
ins
mov
xor
sbb
xor
sar
das
cmps
sbb
pop
test
mov
jmp
xlat
imul
push
loopne
sti
dec
out
mov
cwde
push
push
mov
sbb
out
fdiv
repnz
loop
retf
int
out
push
sbb
adc
jbe
pop
ins
and
out
mov
inc
shr
inc
hlt
xchg
and
dec
pop
xor
mov
sar
xchg
call
jmp
dec
in
xor
mov
jbe
addr16
xor
clc
xor
ficom
sahf
aaa
jmp
jnp
and
sar
imul
js
push
movs
out
gs
mov
outs
rol
(bad)
cmps
loopne
cmp
dec
add
scas
mov
fyl2xp1
test
ficomp
stc
sub
sar
add
retf
mov
loope
sub
dec
nop
mov
pusha
xor
in
cmp
in
js
cmp
xlat
xchg
mov
dec
mov
shld
xlat
(bad)
in
or
add
lea
popf
cmp
(bad)
ds
cmp
and
inc
rcl
add
mov
jno
xor
and
sub
cs
stc
jo
std
cli
and
xor
sar
push
je
mov
add
inc
in
jmp
mov
cmp
jl
jl
mov
std
cli
scas
into
std
inc
adc
pop
or
retf
mov
(bad)
adc
push
retf
cld
fiadd
add
inc
addr16
add
or
ins
mov
dec
data16
popa
push
dec
in
es
cmc
adc
cs
and
add
sub
add
push
lods
pop
mov
sbb
shl
sbb
dec
add
xor
pop
sub
std
sar
mov
pop
push
push
dec
mov
sbb
sbb
push
(bad)
in
loopne
cmp
adc
mov
adc
imul
aas
pop
(bad)
sar
xchg
pop
imul
lock
and
fist
lds
repnz
out
int
(bad)
fisttp
hlt
fistp
in
into
outs
mov
adc
mov
jo
xor
stos
inc
jbe
iret
push
div
not
inc
mov
or
push
push
sub
xor
ins
mov
cld
lods
in
inc
mov
ss
add
push
outs
jecxz
dec
les
out
pop
pop
fnstenv
dec
cmp
and
xor
inc
pop
movs
xchg
(bad)
aad
mov
in
lock
inc
shl
adc
xchg
fwait
xchg
xor
mov
iret
mov
mov
lock
xlat
cwde
test
cmc
mov
outs
pop
test
inc
xchg
cli
inc
pop
mov
add
mov
push
ror
add
mov
xor
cmp
or
fsubrp
into
xchg
in
les
pop
(bad)
sar
test
push
mov
cmp
dec
popf
mov
adc
shr
dec
mov
add
and
addr16
popa
call
sbb
sub
dec
movd
jmp
jg
cwde
call
jl
adc
push
cmp
(bad)
pop
adc
or
imul
sub
cmc
out
ins
dec
daa
push
dec
push
ss
jmp
xchg
cmps
jns
cwde
call
and
or
xchg
hlt
ins
aas
xchg
push
rcr
lahf
or
adc
test
cmp
ins
pop
cmps
(bad)
movs
pop
cmp
mov
sbb
loope
and
and
push
ret
adc
hlt
sub
adc
ja
inc
adc
fdiv
mov
add
inc
or
xchg
dec
xchg
or
jns
dec
enter
clc
mov
js
outs
shl
loopne
mov
popf
mov
imul
push
aas
push
pop
cmp
mov
and
int3
cdq
aam
aad
hlt
in
inc
rcr
movs
in
mov
(bad)
loopne
aam
gs
adc
(bad)
cmp
jge
sti
pushf
cwde
cmp
iret
loope
push
test
aaa
inc
push
(bad)
jg
int
call
pop
mov
rol
mov
jmp
out
mul
jnp
aas
mov
nop
cmps
inc
(bad)
adc
loopne
push
mov
pusha
mov
sub
ins
mov
or
out
xchg
jnp
mov
lahf
mov
mov
in
fldenv
xchg
cmp
int3
scas
addr16
int3
sub
push
(bad)
jge
add
out
mov
std
push
jge
and
pop
push
pop
hlt
cmp
aaa
jl
shl
mov
cmp
cdq
and
sub
push
jg
inc
pop
inc
js
mov
xchg
xor
rcl
out
(bad)
cmp
sbb
call
dec
xor
jnp
mov
shl
jno
out
xchg
xor
scas
fdiv
cmp
jl
pop
loop
mov
pop
cmps
add
ret
sbb
cmp
push
es
mov
in
xor
je
pop
jns
jp
add
or
arpl
mov
xor
jmp
lock
dec
pop
xchg
(bad)
aad
push
push
mov
xchg
jmp
arpl
rol
jmp
adc
xchg
fs
inc
icebp
addr16
inc
or
mov
jb
push
mov
lods
punpckhdq
popf
in
sbb
fdiv
retf
into
arpl
xor
push
call
repz
xor
leave
int3
mov
ret
pop
pop
push
inc
and
mov
outs
pop
xor
jae
test
popf
hlt
add
dec
(bad)
shr
lds
mov
inc
dec
enter
mov
sti
xchg
leave
cld
sbb
(bad)
repz
push
push
xor
inc
adc
cmps
push
xchg
push
add
jecxz
xor
adc
mov
jnp
ins
stos
push
(bad)
outs
ins
retf
mov
loop
or
cwde
inc
daa
xor
inc
sbb
mov
fild
pop
sti
fs
cmp
and
iret
mov
sub
mov
nop
sub
add
jmp
cmps
and
push
lahf
repnz
stc
xchg
jle
dec
adc
sar
add
mov
inc
mov
scas
push
imul
leave
pop
jae
das
pop
pop
mov
add
push
pop
inc
sbb
ss
or
jmp
lock
sti
jg
dec
pop
(bad)
sbb
push
leave
push
cmc
leave
xor
mov
hlt
adc
fcomp
int3
outs
add
div
inc
aam
cli
in
retf
cmp
fidiv
mov
xchg
mov
aad
jbe
jae
xor
test
rcr
pop
stos
xchg
out
cmp
rcr
mov
push
adc
jl
cmps
stos
jg
fwait
sbb
test
or
jno
test
jae
pop
adc
ins
push
out
mov
push
das
jb
jo
jbe
pop
fcom
ret
xchg
bound
mov
rcl
std
dec
loope
daa
mov
ror
and
sbb
or
out
push
cmps
sar
shr
mov
fisubr
cdq
and
adc
pop
xchg
pop
pop
not
push
fidiv
xchg
mov
mov
jae
nop
mov
outs
stos
and
and
pop
sahf
inc
mov
and
das
pusha
dec
dec
jae
adc
sub
xor
and
jno
jmp
bound
cmps
add
bound
pop
xlat
and
mov
sbb
jb
push
test
inc
data16
pushf
mov
into
test
fsubr
xchg
push
and
jecxz
mov
push
mov
dec
push
and
cmp
or
ins
xchg
jmp
dec
es
cmc
stos
aaa
movs
in
pop
push
mov
mov
mov
sbb
es
jecxz
mov
aas
add
fistp
add
loopne
clc
adc
(bad)
push
lods
in
dec
mov
add
mov
repz
pop
push
idiv
sub
dec
dec
outs
std
pop
jg
xchg
sub
stos
or
aaa
sub
out
add
iret
xchg
xor
mov
std
test
repz
dec
sub
aad
mov
test
dec
iret
out
mov
iret
sar
fst
repnz
rcr
das
jp
pop
in
jb
dec
int3
pop
cmps
push
mov
and
cmp
push
sahf
xchg
mov
enter
loopne
daa
aas
popa
js
in
ror
and
jb
pop
arpl
jno
push
jne
xchg
ins
xchg
int
pop
inc
dec
inc
(bad)
sbb
jb
add
ss
retf
add
adc
dec
dec
jmp
push
sub
ja
dec
test
jne
push
ins
scas
std
xchg
push
test
add
jmp
aas
cmp
ror
push
aad
or
dec
out
mov
mov
in
sub
(bad)
sub
jge
jns
int3
leave
loopne
dec
push
lea
pusha
mov
jns
div
ds
cmps
mov
out
pushf
adc
cmp
mov
dec
mov
adc
int
out
cmc
pop
gs
loope
call
push
loopne
xlat
xor
add
in
fsub
ja
push
pusha
mov
push
push
lock
xchg
cwde
(bad)
jp
xor
jno
test
ins
xor
lahf
xchg
call
xor
xchg
jle
popf
cmps
jo
dec
repz
dec
sahf
pop
in
or
(bad)
mov
mov
pop
std
mov
and
xor
xor
mov
or
add
gs
mov
sbb
sbb
loop
jmp
push
and
addr16
retf
mov
jo
sub
idiv
leave
(bad)
fmul
cdq
adc
sub
jbe
out
test
dec
add
lahf
jl
ficom
xchg
adc
mov
je
push
out
sbb
jmp
or
cli
pusha
(bad)
inc
adc
xor
out
adc
pop
mov
pop
add
cwde
shl
int
mov
pusha
push
aaa
add
mov
int3
ins
mov
in
mov
xor
clc
test
ss
ss
add
ret
inc
and
adc
arpl
gs
je
es
jg
pop
test
adc
loope
mov
inc
sub
sbb
je
cli
or
adc
cmps
loop
hlt
xchg
in
push
inc
push
or
adc
rcl
dec
in
adc
mov
fiadd
cmps
inc
cmps
mov
aas
xchg
add
cmc
mov
sbb
fstp
mov
jae
xchg
pop
inc
lods
jp
ficomp
add
mov
mov
sbb
sub
adc
(bad)
sti
mov
int
push
cs
xlat
enter
imul
test
mov
mov
cmp
(bad)
in
sbb
push
in
icebp
ret
shr
test
and
imul
jp
cs
adc
pusha
into
int3
jle
int
hlt
cmp
sbb
inc
and
pop
mov
push
adc
cwde
test
out
adc
icebp
cmp
retf
jmp
loop
leave
pop
das
xchg
sbb
push
push
jb
jb
mov
mov
es
retf
out
xor
dec
push
pushw
push
mov
xor
and
enterw
xor
js
inc
loop
jl
ins
lock
(bad)
je
leave
push
mov
jmp
je
mov
test
sbb
ins
mov
or
jns
cmps
dec
cmp
cwde
icebp
out
cmp
lea
sub
cmp
add
push
int3
mov
pop
jo
push
ins
cs
and
sbb
and
fdivr
inc
jl
and
ins
leave
pop
cmp
imul
jecxz
call
scas
jmp
sbb
lds
ss
(bad)
lock
cld
pushw
hlt
lahf
push
cmp
scas
mov
jnp
mov
or
inc
lock
cmp
dec
mov
xlat
pushf
fiadd
das
xchg
aad
inc
mov
and
jge
ja
xchg
sbb
popa
xlat
cmps
add
test
je
sbb
loop
in
enter
stos
add
mov
loopne
cs
scas
pop
add
aas
xchg
stos
ret
mov
(bad)
test
mov
xchg
test
(bad)
out
or
dec
mov
cmc
sbb
adc
dec
in
test
mov
push
test
fmul
into
gs
or
shl
or
push
loopne
fild
dec
mov
test
mov
cmp
repnz
xchg
push
mov
add
and
imul
loope
ds
inc
push
dec
(bad)
jle
mov
mov
sbb
retf
adc
push
ins
push
stos
stc
jg
jno
call
push
jecxz
jns
add
psubq
in
jmp
pop
xchg
lods
rcr
scas
xchg
std
jbe
xchg
and
xchg
cmps
pusha
es
sub
mov
lods
ror
cld
cwde
and
pcmpgtw
push
rcl
fadd
pop
loopne
sti
rcr
mov
test
in
aam
xor
mov
mov
and
cmp
or
push
push
xor
hlt
pop
push
sub
mov
sbb
retf
fcom
add
adc
cmps
cdq
mov
aas
fcomip
icebp
outs
(bad)
iret
mov
sub
jg
addr16
shl
sub
fst
sar
or
mov
cli
mov
ret
retf
aas
or
dec
ret
add
xlat
inc
cmp
popf
inc
push
enter
and
pushf
adc
mov
(bad)
mov
sar
fsubr
push
repz
cmps
(bad)
sbb
mov
jmp
cmp
dec
xchg
inc
dec
mov
loope
xor
push
aad
or
movs
retf
mov
es
push
inc
sar
(bad)
xor
adc
mov
push
gs
leave
push
call
push
and
push
dec
test
out
add
pop
dec
adc
jne
pop
mov
fld
aas
nop
icebp
and
loopne
(bad)
jo
sbb
mov
lahf
pop
pop
es
ins
ins
je
push
in
movs
push
addr16
xor
test
pop
out
adc
iret
das
or
fdivp
mov
add
cmc
sub
ins
sub
loopne
loopne
xor
ss
outs
sub
adc
mov
lock
mov
and
pop
loopne
add
mov
(bad)
cmp
jb
call
sbb
inc
xor
loop
mov
imul
(bad)
adc
dec
ss
(bad)
iret
sbb
xacquire
inc
push
(bad)
jae
sub
xchg
test
mov
xchg
push
ficomp
loope
les
pop
data16
in
jno
inc
daa
mov
test
or
xor
inc
jl
cmps
(bad)
cmp
not
sahf
adc
jnp
inc
xor
jmp
je
mov
lods
leave
cmp
pusha
mov
sbb
mov
imul
add
js
add
dec
jb
cmp
movs
pop
scas
imul
jne
pop
add
test
retf
xor
jo
and
xchg
int
add
sar
fist
adc
les
push
or
fst
add
fdivr
adc
cmp
adc
loop
ins
(bad)
in
pushf
cmp
sbb
or
cmps
cmps
cmc
lods
popa
fistp
test
test
xchg
and
push
in
pop
cmps
add
leave
fstp
dec
pushf
fld
outs
jmp
xchg
xchg
in
(bad)
cs
div
push
loopne
xchg
shl
sbb
cmps
and
dec
mov
sub
popa
repz
int
sahf
xor
(bad)
adc
xor
es
jge
mov
test
jmp
jecxz
imul
cwde
sub
jo
jns
pushf
stos
mov
jne
xor
cmp
mov
jmp
fwait
stos
imul
imul
dec
jg
xchg
movs
inc
dec
imul
cmp
push
or
jp
movs
or
jae
(bad)
and
pop
push
sbb
mov
les
jo
mov
cwde
mov
push
imul
jae
mov
xchg
mov
repz
pop
into
jb
inc
xor
je
cdq
dec
rcr
or
aas
cdq
ins
jae
inc
dec
pushf
mov
inc
mov
pop
inc
movs
repz
add
mov
sub
add
stc
pop
jmp
hlt
mov
outs
fimul
jb
jp
arpl
push
das
mov
call
test
mov
mov
shl
mov
int3
or
fcom
add
das
cmp
in
repnz
adc
stos
test
jbe
mov
das
xor
jecxz
and
data16
jo
sub
push
daa
cmps
repnz
aas
cmp
push
in
test
push
or
lods
(bad)
repnz
out
adc
punpcklbw
xor
mov
repz
(bad)
std
popf
ss
pop
jl
mov
add
das
outs
jno
cmp
movs
pushf
xchg
outs
rcpps
das
fld
(bad)
arpl
dec
inc
ds
outs
out
sar
adc
out
mov
jp
ins
lea
aaa
fild
rcr
cmp
in
mov
sti
adc
shl
leave
or
das
enter
frstor
push
ret
pop
fcomp
sub
jo
push
movs
add
ins
xchg
mov
add
outs
xchg
xchg
mov
cmc
movlps
xlat
aam
es
(bad)
in
push
fstp
lds
aaa
enter
fadd
xchg
mov
nop
mov
in
shr
dec
hlt
cdq
cmc
fld
jb
scas
xchg
cmp
or
xchg
std
loope
scas
xchg
adc
rcl
cdq
or
push
xor
jnp
fisttp
lods
mov
jge
imul
push
pushf
mov
and
aaa
dec
jne
not
xor
leave
dec
cld
popa
stos
adc
push
dec
mov
cmps
dec
je
push
mov
es
test
mov
in
fstp
jl
lods
or
pop
sbb
das
and
sbb
add
pushf
ss
aas
adc
sahf
fisttp
jecxz
dec
sbb
sahf
data16
add
cwde
dec
inc
pop
int3
(bad)
dec
(bad)
out
mov
inc
out
pop
inc
sbb
sbb
sbb
inc
jmp
mov
inc
aam
inc
and
mov
data16
gs
cmp
dec
jne
cmp
pop
pusha
or
aam
jae
shr
inc
sbb
cmp
mov
lock
enter
xchg
or
jecxz
mov
out
add
faddp
pop
inc
data16
inc
enter
nop
inc
sub
jnp
jbe
xor
test
pusha
lods
stos
sbb
xlat
sbb
shr
cmp
pop
popf
adc
(bad)
cmc
mov
xor
push
fs
cmc
lahf
aad
pop
push
or
mov
cs
jbe
jg
dec
xor
adc
nop
cwde
push
xor
push
stc
sbb
jmp
es
(bad)
popf
dec
jmp
mul
cmp
cmp
(bad)
mov
sbb
out
inc
inc
xlat
sti
fistp
fs
push
out
pmaxub
mov
retf
fwait
push
lods
loope
and
das
fidivr
mov
or
sahf
scas
push
repz
int
mov
aad
mov
popf
retf
cmps
imul
cwde
inc
mov
mov
or
pop
jno
retf
xchg
and
dec
adc
mov
or
sar
and
adc
inc
mov
test
div
sbb
cmps
lods
adc
out
push
mov
repnz
fs
inc
lea
test
aas
dec
cmps
inc
int3
lahf
iret
jmp
dec
std
int3
mov
inc
loopne
cld
(bad)
cld
ss
cld
cmp
sbb
xlat
ins
enter
mov
sub
xchg
xchg
jp
in
out
repz
adc
ss
pusha
push
push
out
mov
lock
shr
loope
xchg
ja
sbb
push
imul
inc
loope
jno
xor
jecxz
fwait
out
sub
push
push
dec
(bad)
push
push
and
jne
pop
jge
mov
out
addr16
fmul
test
push
mov
icebp
movs
or
sti
lods
sbb
and
stos
cdq
jns
and
cwde
fild
or
pushf
cmp
jmp
outs
xchg
fld
cmp
xchg
cmc
int3
dec
sti
jmp
sbb
mov
movs
out
xchg
iret
mov
pushf
and
jl
push
sbb
sub
repz
push
push
xchg
jle
enter
fwait
add
fdivrp
in
and
mov
aas
sub
xor
in
pop
xlat
mov
out
(bad)
push
int
rcl
or
jg
jp
inc
call
pop
in
dec
push
pop
jo
or
lahf
sbb
ret
rcl
sbb
inc
std
arpl
xchg
sti
cmp
stos
and
dec
(bad)
xchg
mov
pop
sahf
test
mov
mov
mov
cwde
or
fmul
retf
mov
fldenv
mov
push
lods
push
loope
sub
xchg
pop
inc
jge
sbb
push
or
out
rcr
xchg
mov
ss
xchg
cwde
cmps
cmp
scas
in
pop
retf
xchg
aas
cmp
push
mov
cmc
jecxz
sbb
rol
dec
cmc
loopne
lds
rcl
adc
test
xor
outs
jb
fwait
in
dec
daa
mov
js
add
js
clc
sub
loope
les
mov
push
(bad)
push
jae
xchg
icebp
popf
mov
popaw
loope
lahf
das
lods
xor
call
leave
cs
push
frstor
das
sbb
mov
outs
jmp
hlt
sub
fidiv
cwde
sahf
dec
pop
mov
sub
mov
mov
or
sbb
outs
out
outs
pop
jae
add
mov
cmp
cmp
fld
xor
mov
hlt
xchg
jge
xchg
scas
pop
push
xor
outs
fwait
enter
mov
into
aaa
add
out
fdiv
std
fild
loop
pop
mov
add
xor
fld
repz
fcmovu
dec
icebp
dec
inc
cwde
repnz
jge
ss
shr
rcl
jecxz
mov
out
sti
inc
outs
outs
mov
xor
ins
and
test
mov
std
xor
push
in
lea
cmps
lock
in
dec
inc
fidiv
xor
sbb
and
fidivr
lea
vaesdec
cmp
xor
adc
xor
cmp
cli
sar
loop
mov
mov
or
inc
and
adc
in
inc
and
dec
push
rcr
xchg
mov
int
sti
inc
(bad)
int3
jnp
les
or
mov
jnp
call
shl
jmp
movs
lods
imul
das
stos
inc
les
jl
test
adc
mov
add
aam
add
or
clc
xchg
or
xchg
icebp
dec
shl
jg
call
mov
ret
xor
add
in
mov
cdq
and
lods
ds
call
retf
pop
add
and
fstp
xchg
sub
ret
or
xchg
cmp
pop
xlat
jmp
pop
push
imul
test
or
scas
sti
shl
inc
pop
ja
and
sbb
mov
jae
pop
mov
push
xor
push
retf
mov
arpl
pop
and
leave
jecxz
retf
or
aaa
stos
xor
or
ror
outs
not
bound
pop
sbb
into
add
dec
js
mov
jge
jae
and
xchg
jo
stos
xor
call
adc
mov
add
xchg
jge
mov
cmp
iret
enter
out
mov
pop
and
jl
xor
outs
jbe
mov
mov
scas
cs
or
adc
jo
push
stc
sub
cmps
aaa
jno
test
adc
sbb
mov
sbb
movs
ins
cmps
rcr
pop
call
lods
inc
or
pop
loop
in
xor
fild
fstp
mov
in
mov
and
cmp
jno
mov
mul
jnp
fidivr
fild
xor
jbe
sahf
push
adc
or
aad
push
mov
pop
int
and
sub
in
pop
or
push
leave
push
leave
push
jge
push
pushf
lods
or
imul
add
sbb
mov
repz
jbe
scas
add
stc
shr
sub
je
add
and
xor
test
jp
shl
push
add
pop
in
jae
dec
inc
ror
xchg
mov
mov
fisttp
stos
xchg
jnp
push
sar
int3
cmc
das
jmp
imul
lahf
jmp
cmp
ret
aam
and
aas
nop
xor
in
mov
jbe
hlt
cmp
sahf
jle
add
ret
inc
je
mov
or
add
popf
imul
mov
leave
push
nop
jne
aad
in
les
add
cmp
pop
mov
in
mov
mov
movups
call
aad
cmps
test
mov
mov
xchg
loopne
pop
imul
iret
lds
xchg
imul
xor
mov
test
data16
pop
fwait
outs
push
frstor
sub
fadd
pop
cs
lods
je
adc
and
inc
jnp
hlt
std
ins
xor
xlat
inc
dec
leave
(bad)
sbb
add
sbb
jns
test
(bad)
mov
mov
stos
push
cmp
dec
add
fstp
sub
push
bound
scas
dec
popa
scas
cmps
fist
out
cld
cdq
dec
fmulp
mov
pop
mov
sbb
mov
rcr
xchg
lock
cmp
mov
sbb
or
shr
loope
stos
enter
push
outs
and
cmp
jmp
xchg
xchg
fs
outs
or
push
stos
pop
sub
lds
addr16
push
inc
sub
pop
ror
add
xchg
scas
or
mov
push
adc
xor
mov
mov
stos
aad
dec
push
jl
movs
gs
shl
not
data16
fcomp
jmp
xchg
pop
fmul
sbb
cmp
mov
add
mov
lods
pushf
mov
test
pop
sbb
cdq
retf
in
imul
int3
push
je
js
adc
out
jge
and
jne
jmp
and
sub
cs
pop
jns
ins
xor
mov
add
pop
repz
or
push
or
dec
xchg
sub
pop
cwde
push
mul
lds
or
paddusb
pop
movups
lods
ret
or
outs
pop
adc
pop
inc
or
or
imul
ja
or
popf
pop
inc
shr
(bad)
sbb
scas
xchg
fst
stos
sar
ins
ins
test
scas
inc
imul
mov
dec
into
jge
cmps
aaa
sar
pusha
jns
jb
aam
imul
rcl
jno
cmps
xchg
ret
ret
daa
(bad)
cmp
push
cmp
sub
jnp
xor
sti
bnd
into
mov
hlt
jnp
ret
jecxz
push
push
clc
pop
mov
aad
xchg
rol
pop
test
mov
sbb
xchg
pusha
xor
lahf
sub
pop
mov
jmp
aam
arpl
adc
or
push
ret
inc
pusha
shl
out
jg
fst
xchg
ins
adc
retf
xchg
(bad)
xchg
jmp
shr
push
clc
retf
sbb
movs
(bad)
cmp
movs
add
add
inc
test
cmps
(bad)
mov
xchg
mov
push
(bad)
inc
loope
pop
or
imul
mov
out
aas
or
cmp
(bad)
std
sbb
ins
cmps
mov
adc
xlat
lods
pop
movaps
fadd
loope
mov
dec
(bad)
cs
mov
push
(bad)
stc
ret
mov
mov
xor
scas
or
pop
adc
xchg
pop
xor
jg
and
xchg
pop
stc
inc
in
lods
repnz
pop
scas
push
xchg
retf
outs
push
loope
aas
pop
pop
push
push
jl
push
rcl
lods
add
push
inc
dec
push
imul
movs
test
lock
jp
pusha
cdq
shl
mov
pop
test
adc
pop
je
(bad)
call
pop
jae
jle
pop
icebp
sub
fnsave
mov
push
jmp
int3
aad
or
adc
imul
mov
jg
les
data16
popf
retf
ret
jnp
adc
adc
cmc
mov
test
xchg
mov
shl
inc
push
lods
pmuludq
jmp
sub
in
sahf
lods
mov
mov
(bad)
cli
scas
sbb
dec
adc
outs
cs
adc
sub
mov
add
sar
enter
call
cmp
mov
les
and
scas
mov
pop
loope
aam
add
mov
and
enter
jbe
add
add
mov
aas
xlat
jmp
dec
pusha
scas
ja
mov
outs
xchg
stos
ss
add
sbb
lods
cmc
aam
jmp
cmps
mov
lea
fstp
call
les
inc
cdq
hlt
push
enter
adc
jg
call
cmps
test
mov
xchg
adc
and
jo
outs
dec
test
pop
js
cs
(bad)
sti
in
sub
retf
xchg
xchg
mov
sar
pop
cs
sub
jns
pop
jl
jecxz
dec
inc
pop
ret
pop
jle
stos
and
add
push
cmp
adc
cmps
push
sub
jae
inc
or
(bad)
dec
add
push
adc
sub
xchg
dec
and
pusha
add
xor
pop
rcl
pop
cmp
ja
arpl
cmps
fnstcw
and
stos
mov
inc
dec
(bad)
in
lock
pop
jne
fwait
mov
mov
call
nop
jns
mov
sbb
pop
rcr
xchg
mov
out
pop
outs
fucomi
add
or
push
gs
dec
aas
inc
test
dec
(bad)
or
add
inc
sub
mov
push
icebp
sub
push
inc
mov
rcr
(bad)
sbb
loopne
xchg
dec
rcr
stc
jecxz
adc
dec
and
fwait
mov
sbb
in
mov
xor
rol
jmp
mov
inc
push
dec
fucomi
mov
aaa
or
push
aam
cmp
pop
xchg
jo
or
call
mov
(bad)
movs
nop
dec
je
push
js
pop
(bad)
repnz
call
pop
adc
mov
dec
cmp
test
jmp
mov
xor
push
fcmovu
rcr
add
sub
inc
xbegin
dec
cmps
sbb
mov
shr
pop
mul
mov
sub
in
scas
jo
push
sub
pop
mov
jnp
inc
inc
cmp
jmp
add
sbb
test
xchg
mov
jecxz
outs
pop
dec
call
inc
stos
(bad)
cmp
ss
lea
pop
and
aad
inc
cld
test
xor
cmps
mov
test
lock
mov
call
and
adc
jmp
stos
pusha
adc
call
inc
cmp
addr16
xor
jmp
inc
fcom
mov
inc
movs
iret
shl
mov
push
test
push
xor
sbb
mov
sbb
xchg
stc
mov
or
adc
mov
mov
inc
xchg
push
xor
popf
std
mov
xchg
fistp
scas
imul
xor
mov
xor
fsubrp
ja
inc
sbb
and
movs
or
rcl
sbb
jbe
xlat
(bad)
call
add
or
cli
aaa
loopne
or
aas
daa
movs
or
sbb
push
push
out
out
data16
cwde
outs
mov
call
xchg
mov
xor
int3
(bad)
add
in
xchg
cld
mov
clc
ss
sbb
push
jo
fsubr
xchg
mov
lods
and
dec
dec
mov
test
adc
adc
dec
dec
jg
in
fwait
or
ds
(bad)
clc
or
xor
aam
fdiv
adc
mov
xor
mov
mov
clc
push
jo
add
xor
push
inc
enter
test
loopne
loope
mov
adc
rol
aas
pushf
or
in
mov
pop
sub
xlat
ret
inc
bound
add
pop
cdq
mov
jae
in
jmp
inc
push
ja
into
sub
mov
aas
mov
dec
jl
mov
test
aaa
frstor
out
es
movs
mov
xchg
dec
nop
pop
inc
jb
mov
cli
ds
mov
test
js
data16
ret
shl
fwait
add
jl
imul
fdivr
rol
dec
jl
and
sub
mov
jo
ds
sbb
sbb
adc
jbe
and
add
dec
loop
fistp
mov
pop
xor
adc
aad
push
fcom
loop
mov
dec
leave
add
cmp
cmc
sti
and
mov
dec
shl
dec
pop
and
add
je
sar
arpl
mov
fsubr
nop
enter
cmp
lds
sub
mov
popf
push
mov
or
sub
adc
xor
enter
das
sub
sub
test
mov
mov
pop
mov
fadd
rcl
addr16
or
dec
pop
cmps
repz
jmp
repnz
sbb
movs
addr16
aam
popf
fidivr
es
adc
fisubr
outs
cdq
cmp
not
adc
add
jmp
stos
loopne
sbb
adc
jns
or
loop
daa
cmp
cmp
sub
jno
imul
ficom
push
xlat
loop
xchg
scas
pop
sar
mov
jbe
nop
sub
jbe
(bad)
ins
sbb
push
inc
xchg
jb
fdiv
fsubr
sub
sar
xchg
push
dec
fld
jbe
ror
movs
mov
mov
movs
inc
jp
loop
xchg
stc
sub
push
aas
nop
fcom
and
popf
ret
xchg
push
add
in
inc
mov
fs
xchg
ficomp
(bad)
mov
and
fcmovu
fs
hlt
and
mov
mov
(bad)
fld
and
outs
shl
inc
sub
inc
xchg
les
adc
scas
mov
push
xchg
xchg
lods
lds
jns
pop
leave
push
idiv
fadd
or
pop
daa
into
mov
jnp
aaa
pusha
mov
dec
aas
push
test
jb
daa
and
inc
add
inc
jmp
dec
lods
xchg
(bad)
mov
mov
sub
push
sbb
mov
lahf
lds
fist
pop
loop
ret
mov
push
leave
push
popf
int
dec
cld
xor
pop
inc
xchg
fiadd
push
fxch
mov
inc
adc
xor
mov
sbb
outs
mov
jg
clc
mov
dec
out
cmp
cli
(bad)
int
adc
cmp
or
sbb
call
fisttp
outs
rcl
sahf
test
and
fild
out
outs
add
jno
das
jle
lahf
sbb
lock
jae
add
pop
jns
rol
push
lahf
test
inc
or
ins
stos
pop
sbb
in
out
arpl
shl
aam
aam
icebp
sbb
inc
xor
xchg
jmp
ds
sub
or
repnz
outs
call
xor
cdq
retf
xor
cmp
retf
jnp
cmp
jge
xchg
jp
sti
mov
push
outs
or
jle
dec
push
(bad)
and
cmp
fild
int
nop
dec
loope
xor
sub
mov
movs
dec
out
inc
mov
outs
daa
push
in
or
mov
mov
dec
jle
jecxz
cld
jmp
ret
stos
cmp
pushf
jns
mov
mov
inc
jle
push
mov
inc
lea
imul
sub
adc
mov
leave
icebp
rol
sti
pop
push
and
sbb
cmp
push
cwde
cmp
cli
mov
mov
rcl
push
js
push
pop
xchg
push
out
adc
aam
cwde
jg
ins
out
push
mov
les
pop
or
popf
cmp
sub
fist
clc
mov
pushf
mul
jmp
mov
and
daa
add
dec
movs
and
mov
and
in
or
mov
cmp
inc
lahf
repz
jl
dec
call
pop
adc
xchg
cwde
mov
mov
dec
inc
clc
jne
and
sbb
fs
xor
mov
cmp
sub
xor
imul
pop
mov
jecxz
jg
jo
call
mov
mov
sub
fwait
out
sti
push
aam
cs
mov
clc
adc
add
pop
mov
aam
stc
xor
ja
std
rcl
lods
inc
int3
adc
xlat
in
pop
dec
adc
dec
and
stos
les
test
mov
outs
iret
dec
mov
gs
jge
cmp
test
xchg
jns
xchg
call
out
fs
adc
popf
jmp
ret
js
fiadd
cs
or
adc
mov
pusha
es
(bad)
aas
test
xor
call
fbstp
dec
cmp
mov
or
adc
pop
sbb
shl
sub
and
(bad)
in
in
dec
ins
add
jle
add
jne
test
or
jecxz
lock
adc
sbb
in
push
dec
mov
push
cmps
push
mov
int3
mov
shl
pop
in
mov
mov
sub
or
ss
adc
inc
aad
loop
push
ficomp
jle
aam
push
retf
dec
and
js
cmps
sub
mov
push
imul
inc
sbb
add
das
or
jmp
xor
adc
fisubr
cmp
scas
outs
jp
push
out
dec
sub
cmps
ins
aam
fnstenv
retf
mov
fnstenv
sub
inc
pusha
bound
xchg
push
jle
mov
dec
pop
in
(bad)
push
imul
lods
add
out
rcr
pop
dec
adc
and
mov
adc
mov
aas
push
push
fldcw
ja
aad
idiv
push
inc
mov
jl
fdiv
dec
xor
xchg
inc
shl
in
repz
dec
jns
jge
movs
sub
mov
mov
lds
sbb
(bad)
lds
push
add
movs
cwde
xor
and
push
jbe
cmp
sbb
dec
gs
sar
es
add
xchg
test
pop
mov
stos
add
stos
mov
mov
sahf
pop
inc
lods
retf
cmc
pop
xchg
adc
add
inc
test
cli
cmc
(bad)
dec
loop
jb
xchg
popa
bound
mov
imul
push
std
mov
arpl
sub
scas
(bad)
scas
loope
leave
repnz
jo
jecxz
nop
rcr
nop
mov
iret
xor
inc
push
mov
jecxz
test
popf
inc
femms
(bad)
cmp
out
or
jns
std
xchg
movs
fadd
mov
jmp
jnp
pop
outs
add
leave
std
inc
xchg
jns
add
into
xchg
jmp
rcl
mov
mov
test
call
fnstsw
mov
jl
retf
jb
ss
lds
pushw
fwait
into
test
or
div
xlat
out
es
mov
cmps
lahf
dec
daa
je
xor
xchg
rol
repnz
lods
and
xlat
scas
jmp
es
sbb
(bad)
in
popa
pushf
pop
cmps
les
shr
iret
jnp
jnp
mov
jb
inc
gs
mov
sub
clc
rcl
(bad)
(bad)
shl
pop
repz
mov
jne
pop
les
jmp
lock
popa
fisttp
xchg
jbe
shl
out
mov
je
or
dec
jne
dec
dec
mov
jmp
add
mov
jae
inc
and
sbb
jl
ror
retf
and
aas
cli
jns
and
iret
movs
mov
pop
mov
dec
cld
cmps
push
aaa
lods
add
inc
sbb
or
fs
jo
xor
ja
adc
xchg
(bad)
lea
sub
jb
addr16
add
mov
int
adc
bound
mov
or
scas
pop
mov
push
mov
inc
out
(bad)
jne
sbb
cmps
mov
pop
shl
mov
(bad)
stos
fisub
pusha
cmp
jae
jne
sbb
dec
call
pop
jecxz
jmp
out
das
aam
and
pop
sub
add
das
int3
lds
xchg
pop
pop
aam
push
and
(bad)
in
fs
repnz
in
fwait
(bad)
outs
pusha
repz
les
inc
aad
xlat
mov
mov
cmp
scas
mov
jecxz
pop
sub
(bad)
cli
add
mov
cmp
xchg
sbb
imul
pop
sahf
push
mov
lods
sbb
inc
in
inc
adc
data16
ss
fwait
and
jo
es
cld
in
das
xlat
in
das
hlt
lds
xor
scas
out
aaa
mov
movs
pop
repnz
mov
pop
jecxz
jmp
pop
adc
and
pop
fnstsw
outs
inc
lds
addr16
jae
xor
(bad)
repz
dec
cmps
mov
mov
push
or
push
xchg
fistp
out
xchg
mov
fs
in
pop
mov
mov
test
das
mov
or
clc
js
dec
pop
in
les
(bad)
imul
nop
arpl
dec
ror
pusha
push
lock
test
inc
arpl
jnp
or
fwait
test
dec
and
mov
xor
rcl
xchg
repnz
cwde
mov
bound
and
(bad)
cld
popa
movs
and
fld
scas
xchg
test
popf
(bad)
retf
fmul
imul
les
jl
jg
or
(bad)
mov
mov
fnstsw
bound
push
inc
xor
imul
loop
test
stos
mov
ss
add
out
sbb
enter
xor
ins
mov
(bad)
icebp
xchg
cmp
xor
jl
je
xor
add
inc
scas
movs
js
pop
push
mov
mov
mov
stc
sbb
test
jne
daa
js
loop
das
mov
pop
cmp
sub
xchg
inc
gs
int
pop
movs
cs
jmp
xchg
jnp
sub
test
mov
pop
cmc
dec
int3
mov
push
data16
adc
fist
pop
add
mov
in
paddusb
dec
lods
xchg
repnz
fimul
xor
fiadd
sub
test
out
lea
loop
cmc
scas
mov
jns
mov
xchg
add
fstp
adc
pop
out
das
xchg
mov
cmp
in
sbb
fild
cmp
(bad)
int3
cmp
cmp
and
xor
pop
push
mov
dec
nop
mov
ret
add
bound
and
xchg
ret
add
jp
xchg
jne
dec
jns
mov
inc
ffree
pop
(bad)
mov
ret
cli
jae
sub
mov
xchg
and
test
movs
ss
inc
es
add
rcl
cwde
in
xor
outs
push
dec
sub
loop
movs
test
and
adc
and
fsubrp
inc
mov
xor
cs
inc
lea
push
scas
push
test
cmp
test
and
pushf
loope
mov
arpl
and
xchg
fsub
ins
xor
push
cmp
fist
(bad)
dec
mov
inc
cmp
jne
mov
retf
popa
jp
fiadd
sub
sbb
leave
fmul
jle
popa
stc
bound
sub
mov
dec
add
out
je
movs
or
sbb
cmps
add
cmp
cmp
sahf
mov
push
shl
push
call
pop
ins
jb
shr
jns
sub
dec
fsub
push
mov
push
test
push
shl
in
pop
cmp
jo
lock
rol
xchg
adc
(bad)
xchg
sbb
add
out
mov
icebp
ins
xor
inc
gs
scas
push
or
retf
test
(bad)
das
hlt
aad
cdq
jns
xchg
xor
push
fmul
jl
push
imul
nop
push
loopne
ss
mov
mov
test
pop
fisubr
sub
push
(bad)
jns
dec
aas
push
and
pop
push
mov
fs
dec
or
xlat
dec
jp
cmp
hlt
mov
ds
add
inc
out
test
scas
pop
cwde
int3
sbb
call
mov
iret
into
mov
adc
rcl
imul
mov
add
push
xchg
call
int
loopne
and
xor
jno
add
js
inc
(bad)
call
ss
call
push
pop
push
xchg
mov
xor
and
pop
push
sub
add
fstp
mov
and
popf
fbld
mov
mov
aad
gs
add
(bad)
ss
cmp
push
mov
jbe
test
leave
stos
cmp
es
rcl
push
xor
mov
mov
cmp
xchg
push
or
sti
gs
es
hlt
(bad)
(bad)
dec
jbe
jnp
in
aaa
(bad)
mov
fidiv
fistp
je
aas
fstp
iret
idiv
ret
addr16
jno
cmp
test
pop
mov
jb
sbb
or
mov
push
mov
mov
inc
stos
add
outs
adc
stc
in
cmp
jge
inc
out
jecxz
sub
dec
sbb
xchg
and
inc
cmc
gs
jmp
push
je
shr
in
mov
push
sahf
call
ins
mov
sahf
or
movs
out
mov
mov
repnz
dec
sub
stos
push
scas
and
neg
push
or
movs
jmp
loop
pop
push
jne
shr
mov
jns
sbb
test
cdq
jmp
sub
dec
inc
fnsave
stos
dec
mov
mov
mov
cmp
fisttp
push
fs
sbb
pop
and
xor
(bad)
xchg
clc
mov
jnp
test
push
aam
dec
scas
adc
int3
popf
imul
and
loop
cdq
fimul
xor
mov
outs
(bad)
inc
dec
cmps
add
sub
push
xor
int
push
push
fcomp
and
sub
aad
je
mov
pop
jge
cmp
xor
jle
push
das
or
add
jns
mov
mov
jge
fmul
aad
faddp
or
jge
mov
mov
sub
ret
cmp
jecxz
dec
xchg
adc
iret
lar
push
inc
out
or
aad
test
fimul
stos
adc
mov
mov
je
adc
shr
sub
dec
movs
cmp
cmp
shr
xlat
xchg
dec
call
mov
fist
inc
push
and
call
mov
jnp
clc
adc
cmp
sub
dec
cmp
shl
in
jno
aad
js
aad
leave
push
ds
frstor
adc
dec
sbb
jl
xchg
inc
neg
scas
mov
gs
xchg
ret
push
push
mov
leave
cmp
movs
push
ret
inc
xchg
fmul
imul
ror
lds
mov
mov
and
call
mov
shr
aam
sahf
cmp
in
ss
cmp
ins
fcom
or
or
inc
xchg
cmp
lahf
xchg
test
mov
cmp
(bad)
ficomp
jg
les
fwait
and
popa
js
xchg
scas
out
mov
pop
xchg
push
icebp
push
pop
call
addr16
shr
les
jns
cmp
adc
sar
movs
xor
(bad)
out
mov
out
inc
inc
mov
ins
enter
adc
iret
adc
les
cmp
pop
rcl
ins
es
fisttp
inc
push
pushf
je
inc
mov
xor
ret
fcmovu
inc
or
xor
fucomp
cli
repnz
dec
arpl
lahf
mov
push
mov
mov
mov
outs
outs
popa
stc
inc
mov
adc
movs
pop
mov
jp
in
setbe
pusha
xor
cmps
fist
jp
loop
and
inc
in
xor
mov
loopne
(bad)
or
sub
test
repnz
movs
mov
push
js
jmp
jmp
add
cmp
mov
ds
ins
stc
xor
mov
mov
sar
xor
popa
popa
sub
inc
cli
pop
icebp
adc
xor
cmps
jae
inc
sub
in
push
add
pop
or
out
jmp
fwait
cmp
pop
and
ficom
xchg
mov
cmp
mov
xchg
mov
mov
xor
scas
lea
pop
bound
inc
mov
add
xchg
cmps
push
mov
cmc
(bad)
push
rcl
popf
imul
out
enterw
stc
fwait
pop
icebp
repnz
div
dec
cmovl
aad
mov
lds
jmp
movs
xor
mov
sti
aaa
cmp
(bad)
cdq
lahf
inc
mov
inc
xchg
ret
mov
inc
push
pop
aam
mov
out
icebp
stc
mov
jge
adc
sbb
out
adc
mov
ja
jns
fwait
aaa
dec
jp
ret
xor
hlt
outs
mov
push
shr
stos
xor
ds
std
mov
adc
movs
lods
sub
clc
scas
mov
pop
fcmove
sar
fadd
sub
push
loope
jno
pop
lock
sub
rcr
(bad)
cld
push
sbb
mov
pusha
test
enter
pop
pushf
inc
xchg
(bad)
sub
popf
mov
arpl
div
mov
stos
fnstenv
xchg
and
clc
sti
jnp
xor
sbb
stc
arpl
jne
push
mov
ja
shl
shl
jge
sar
sub
dec
cdq
mov
fisttp
xchg
in
adc
inc
mov
lock
movs
outs
cmp
and
ja
add
mov
push
sbb
pop
push
test
jl
fisttp
movs
les
pop
lods
or
cmp
ja
push
fst
inc
jne
out
scas
rol
xor
pop
sub
push
ror
mov
push
push
sbb
sbb
dec
and
pop
ja
mov
xor
inc
mov
mov
inc
cs
ins
dec
fisttp
mov
sbb
push
xchg
(bad)
int3
cld
outs
mov
mov
test
fidiv
pop
mov
les
pop
ror
les
ret
and
pop
popa
int3
ror
test
jp
jno
iret
stos
xchg
inc
enter
mov
inc
push
and
inc
and
scas
pop
es
in
call
inc
dec
cmp
mov
or
test
(bad)
outs
mov
sbb
(bad)
lods
sbb
test
leave
adc
das
jge
and
shr
stos
out
jae
dec
sbb
sbb
test
dec
jb
arpl
mov
mov
dec
mov
mov
ss
mov
jns
sar
and
imul
mov
or
sbb
push
fnstcw
push
xor
cmps
in
dec
jbe
mov
adc
movs
fist
cwde
ds
jo
dec
xchg
mov
clc
je
push
stos
mov
es
lds
test
in
leave
mov
adc
sub
fistp
out
mov
push
mov
mov
adc
outs
ret
xlat
fadd
adc
xchg
aas
inc
daa
xlat
add
cmps
outs
lods
and
jecxz
test
inc
sbb
in
mov
cmp
add
pusha
int
scas
js
xor
push
sbb
dec
fld
xor
mov
inc
push
fs
pushf
les
mov
xchg
xor
data16
lods
push
pop
(bad)
pop
and
mov
cdq
fwait
pop
data16
mov
call
pop
les
cmp
mov
add
xlat
fnstsw
(bad)
adc
push
jns
ret
(bad)
xlat
push
stos
jns
pop
sub
movs
fneni(8087
push
push
clc
pop
call
scas
outs
and
je
rcl
clc
push
ins
jbe
mov
mov
dec
inc
mov
jo
fcmovbe
imul
and
in
push
xor
mov
test
push
sbb
imul
dec
lods
xor
push
repz
xchg
inc
mov
lods
xor
outs
sub
out
push
jne
cmp
pop
xchg
adc
jns
pop
cmp
repz
add
(bad)
addr16
fstp
shl
push
popf
pushf
inc
xor
repz
sbb
inc
call
shl
pop
mov
ffree
jb
sar
and
in
lds
retf
xchg
mov
xor
enter
fld
adc
mov
sub
icebp
enter
mov
xor
(bad)
sbb
and
sbb
mov
fisub
sti
repnz
adc
cli
inc
ds
pop
push
sbb
xor
fcom
loopne
(bad)
sub
dec
shl
mov
pop
xchg
push
mov
xor
ret
int3
or
fsub
jge
or
les
pop
jns
addr16
push
xor
xchg
and
aad
or
mov
int
pop
add
adc
das
sub
and
cmp
rcl
in
pop
outs
out
into
push
rep
xchg
xchg
rol
ins
clc
mov
rcr
ret
pop
or
xchg
out
retf
ret
mov
mov
sub
mov
(bad)
retf
aad
pop
xor
mov
(bad)
rcr
shl
fld
mov
push
retf
(bad)
inc
mov
popf
jbe
ret
mov
sub
dec
pushf
in
xor
adc
repnz
fimul
inc
imul
mov
sbb
mov
sbb
cmp
inc
inc
(bad)
fstp
push
sbb
(bad)
out
xchg
push
cdq
sub
in
ss
les
xchg
sub
push
or
cwde
out
fist
call
(bad)
jge
fldcw
movs
adc
arpl
loopne
jmp
vrcpss
push
or
sar
int3
push
scas
int3
push
rcl
lock
pop
aaa
sbb
and
jb
sub
ror
jle
jns
xchg
test
sub
cwde
pop
lahf
xor
add
adc
or
int3
sbb
movs
(bad)
enter
movs
push
mov
push
pop
jge
mov
sbb
adc
call
dec
cmps
xor
or
fs
lods
clc
call
mov
xchg
nop
loope
jnp
sbb
test
loopne
sbb
inc
fstp
mov
mov
stos
jnp
ss
mov
cmc
jne
jge
or
mov
test
push
add
je
aas
sti
and
jecxz
cmc
loopne
ficom
ins
push
rdpmc
cmp
inc
ins
jo
(bad)
adc
pushf
cld
xor
(bad)
sub
xlat
lds
imul
sar
xor
mov
in
ret
sub
and
mov
mov
pop
test
cld
je
out
outs
xchg
mov
jg
outs
fnstsw
xchg
mov
mov
xchg
movs
adc
pop
gs
push
cmp
mov
adc
xor
sub
iret
repnz
ins
neg
mov
ror
in
or
ss
(bad)
fld
pop
adc
sahf
push
pop
inc
cdq
mov
mov
outs
pop
mov
popa
dec
xchg
mov
mov
add
pop
pop
int
jp
push
cld
sub
(bad)
jle
loopne
xchg
mov
cld
pushf
int3
int3
in
mov
ja
add
pop
mov
jo
clc
dec
push
jmp
stos
imul
aas
je
mov
lods
in
pop
lahf
popa
nop
scas
call
xchg
scas
or
out
prefetch
or
jp
fs
or
test
inc
mov
push
add
mov
dec
mov
add
in
add
cmp
adc
test
sbb
rcr
xlat
cmps
neg
xor
xchg
call
xor
push
das
add
test
xchg
xchg
popf
arpl
mov
(bad)
cmp
cmp
pop
test
jno
sbb
jb
cmp
push
mov
xchg
test
adc
cmp
xchg
add
dec
arpl
sar
in
shr
lea
jns
pop
xlat
mov
(bad)
out
inc
icebp
sbb
sub
or
mov
xchg
mov
sbb
mov
cs
inc
cmp
mov
sub
inc
lahf
(bad)
popw
ret
retf
aad
mov
xor
xchg
cli
lds
ins
fnstsw
cld
retf
mov
sar
(bad)
pop
and
mov
mov
push
in
mov
leave
and
outs
mov
adc
and
mov
test
and
or
adc
ss
lea
mov
xchg
pop
xor
pop
dec
xchg
add
and
cmp
mov
and
cmp
pop
lods
fnsave
sar
hlt
pop
shr
out
mov
lds
ins
ficom
int
xor
je
push
inc
xchg
mov
dec
mov
js
mov
push
pop
sbb
push
or
cmp
fstp
(bad)
in
inc
cmp
pusha
inc
test
xchg
test
mov
dec
arpl
push
arpl
inc
cmp
mov
push
les
jns
dec
ret
lea
xchg
loop
div
movs
call
mov
ror
clc
lock
push
mov
adc
jg
mov
mov
pop
jbe
into
es
inc
inc
cli
mov
xchg
mov
loop
jg
aas
push
sahf
enter
and
sbb
aas
jns
cwde
jp
les
dec
fld
test
add
outs
mov
dec
imul
and
fstp
popa
dec
ds
inc
cmp
in
fdivr
add
rcr
or
gs
lahf
out
or
aam
pushf
call
les
not
loopne
ror
inc
sub
sbb
in
mov
cmc
add
lods
add
adc
or
inc
cmp
imul
adc
test
inc
(bad)
adc
jle
xchg
push
sbb
or
push
xchg
and
mov
sub
push
pop
push
mov
jl
xchg
inc
scas
sub
es
and
lds
sub
add
arpl
dec
xchg
and
ss
scas
sbb
repnz
pop
sub
cdq
addr16
sbb
hlt
loopne
sub
xor
ins
mov
lods
enter
adc
pop
pop
jmp
fild
imul
dec
leave
xor
cmp
icebp
fisub
fnstcw
icebp
add
in
push
or
pop
sbb
sub
lods
dec
inc
pop
cmp
loope
dec
jp
add
in
xor
in
cvtps2pi
test
out
or
out
das
sti
retf
fdiv
mov
ins
mov
sub
mul
cmp
or
mov
cli
xlat
push
mov
mov
fsub
dec
push
setae
aaa
mov
fild
and
xor
in
sub
xchg
jl
fbstp
in
pop
inc
push
aad
popa
mul
xchg
jno
in
push
mov
add
movs
not
cmp
jp
scas
add
adc
mov
add
xchg
inc
add
das
das
sub
mov
das
sbb
pusha
mov
jl
clc
outs
sbb
mov
add
popf
inc
inc
cmp
pusha
push
add
cs
popa
aam
xchg
cld
and
and
mov
cmp
jno
add
jmp
adc
(bad)
sbb
or
xor
inc
xor
aas
cmp
imul
ss
mov
xchg
mov
ret
inc
dec
popf
das
pop
xchg
pop
inc
stc
sub
(bad)
stc
(bad)
into
push
xchg
das
sar
lods
dec
pop
push
inc
mov
jecxz
sub
ja
dec
hlt
fiadd
jne
mov
add
push
jmp
loope
cmp
jne
xchg
cli
stc
fsub
fcomp
scas
push
nop
repz
fwait
daa
jae
jno
or
pop
shl
int3
ins
lods
add
cwde
inc
pop
jmp
int3
mov
inc
pop
pop
rcl
sub
cli
sub
pushf
adc
scas
mov
popf
inc
inc
add
stc
adc
mov
sub
es
ficom
ficom
(bad)
jp
cwde
stos
lods
xchg
jl
call
xchg
call
je
iret
dec
shl
int
test
cmp
fidivr
mov
fld
sbb
xchg
movs
(bad)
mov
dec
mov
dec
std
mov
js
aaa
inc
push
imul
sub
sbb
jmp
mov
retf
fwait
xor
mov
sbb
mov
aaa
or
cmp
int3
(bad)
pop
hlt
jge
out
sub
mov
hlt
cli
pop
(bad)
xor
jae
dec
xor
jns
xchg
test
xchg
ret
xor
adc
ficomp
out
cmp
jmp
dec
repz
xlat
out
not
adc
ins
gs
repz
ror
and
or
stos
inc
xchg
mov
jl
aam
jnp
popa
sub
jle
aaa
inc
add
or
sbb
test
je
out
aad
inc
cs
sbb
cmps
sahf
adc
cmp
and
ror
sbb
pop
and
cmp
and
cdq
mov
adc
add
scas
fisub
inc
repnz
mov
sub
jns
push
outs
mov
lea
in
xor
les
int
inc
jle
bound
sbb
hlt
and
push
pop
pop
sbb
out
xor
sahf
add
ds
or
dec
or
mov
movs
je
(bad)
jae
mov
pop
es
mov
mov
shl
dec
(bad)
mov
sbb
or
les
bound
fbld
pusha
and
pop
adc
int3
test
int
ret
hlt
jp
or
mov
cmc
mov
loopne
mov
enter
lods
sub
iret
or
jp
nop
mov
sbb
rol
cmps
rcl
int
pop
je
dec
retf
pusha
test
cmps
mov
jbe
xchg
pop
iret
and
mov
fistp
mov
inc
mov
fwait
or
int3
test
cmp
jle
aam
sahf
push
dec
div
mov
test
fnstenv
sub
or
retf
lods
or
xchg
mov
inc
and
lds
and
movs
cmp
cmp
lock
xor
aam
xchg
jp
or
push
or
test
(bad)
loopne
add
mov
cmp
push
sar
shl
imul
daa
xrelease
cmps
mov
mov
sbb
xlat
daa
test
test
or
jmp
test
push
jae
xchg
inc
or
cmps
setnp
push
pop
jmp
retf
pop
or
out
xchg
xchg
lods
cld
popa
jo
sub
xor
sub
pop
push
fstp
fs
jb
dec
jp
into
push
inc
inc
mov
sub
xchg
aaa
xor
aaa
and
and
pop
cmc
ficom
xor
lods
push
into
sub
mov
data16
pop
cwde
add
aaa
dec
jecxz
retf
add
(bad)
sar
mov
ror
in
movs
mov
inc
adc
ins
cdq
mov
test
mov
dec
inc
add
adc
or
daa
sahf
pop
stc
(bad)
sub
mov
sar
fsubr
xchg
xchg
test
push
fwait
sub
test
jbe
xor
test
(bad)
inc
jmp
jle
into
in
adc
pusha
xor
mov
dec
aas
sbb
(bad)
fsub
outs
sub
push
jmp
iretw
mulps
stos
adc
cmps
out
lods
and
pop
inc
or
sahf
(bad)
pop
mov
add
and
sar
xchg
pop
stc
in
push
lock
pop
xchg
cmp
mov
cmp
in
or
and
cmp
call
sbb
cmps
push
int
adc
icebp
and
in
push
add
inc
outs
bound
pop
(bad)
dec
fidivr
push
and
fisub
ja
in
mov
lock
add
or
pop
es
xchg
adc
(bad)
into
mov
lds
cli
jo
mov
xor
and
jne
nop
dec
test
xchg
icebp
out
daa
xchg
cmp
push
dec
mov
dec
in
aaa
sub
dec
lds
scas
fs
xor
addr16
mov
sahf
pop
cmps
sbb
pop
mov
(bad)
and
and
ret
ja
(bad)
mov
ins
sub
and
inc
out
lods
cmp
sbb
data16
or
cmp
cmp
in
mov
lods
and
fist
xchg
xchg
jge
adc
adc
jl
lea
mov
cmps
cmp
mov
cmp
dec
xchg
xchg
cmp
jno
xor
aaa
cwde
inc
test
add
sub
movs
daa
cmps
(bad)
mov
dec
jae
lods
lahf
mov
test
sub
push
dec
(bad)
scas
dec
cwde
fs
mov
sub
dec
sti
pusha
(bad)
cmc
(bad)
hlt
push
sub
loopne
ror
pop
rcl
cli
jge
add
in
call
xchg
popf
xchg
jne
xchg
push
pop
std
mov
jge
stos
mov
add
push
rcr
push
mov
scas
xor
imul
pop
push
mov
mov
in
retf
adc
mov
and
dec
add
sub
cmps
ret
mov
movs
xor
xchg
jmp
inc
mov
adc
dec
(bad)
jne
pop
jmp
sub
ins
in
mov
gs
sub
adc
test
push
rcr
jno
scas
mov
sti
mov
fwait
jmp
rcr
ja
int3
pop
jmp
fidivr
movs
jmp
leave
mov
std
push
popa
inc
lahf
and
fiadd
pop
cmp
and
push
call
cmp
jo
add
sbb
jb
test
fisubr
push
cld
jns
das
push
add
and
pop
mov
pop
shr
lahf
outs
push
jb
aad
outs
inc
lds
sbb
push
and
retf
push
or
pop
mov
jmp
xor
cdq
std
adc
cmp
xor
out
xor
out
add
data16
ror
pushf
push
jno
adc
sub
sar
jne
je
in
jnp
(bad)
xlat
mov
hlt
ss
dec
movs
add
repnz
xor
sub
pop
adc
ins
hlt
hlt
icebp
nop
sti
push
das
sub
inc
iret
xor
xor
dec
ds
pop
jnp
push
cmps
fsub
popa
stos
or
les
shl
jge
movs
dec
and
hlt
sub
xchg
cmp
addr16
jmp
loope
mov
loopne
das
inc
sub
pushf
into
sbb
sbb
cwde
inc
xchg
out
mov
sbb
sbb
mov
test
sub
jae
cmp
and
push
xor
mov
test
mov
mov
xor
sbb
scas
mov
call
jne
and
add
sbb
ds
sub
push
or
pop
xchg
add
pop
mov
icebp
inc
xchg
push
test
ficomp
out
jp
es
stc
cmp
punpcklbw
cli
sbb
js
xchg
lahf
jb
fs
mov
inc
fstp
add
scas
sbb
shl
into
out
push
lock
dec
movs
jnp
sbb
or
cli
cs
mov
sbb
dec
and
rcr
adc
fcmovnbe
stos
or
aad
pop
movs
dec
ins
enter
(bad)
mov
adc
or
inc
xchg
stos
push
mov
into
mov
jnp
popa
mov
mov
and
cmp
dec
dec
sub
pop
push
into
push
jl
pop
test
push
mov
mov
jle
push
(bad)
ret
xchg
and
mov
pop
loop
test
pop
(bad)
lods
pop
mov
test
mov
cmp
in
in
aas
icebp
jne
inc
fwait
leave
ins
(bad)
inc
les
inc
scas
or
arpl
(bad)
sub
stos
mov
test
add
inc
xor
mov
jl
ud2
mov
mov
cmp
ds
daa
rol
cmps
push
push
loope
xchg
(bad)
mov
and
fadd
sbb
adc
adc
ror
xchg
sub
inc
stos
xor
mov
pop
xor
loop
pop
sub
or
stos
push
in
sbb
call
add
repz
dec
push
sub
adc
scas
xor
fs
dec
mov
push
das
inc
or
sub
test
mov
sar
rol
push
imul
cmp
jp
test
iret
jns
sysexit
fstp
ins
stc
push
popa
mov
das
jge
pop
loope
mov
mov
mov
mov
fs
movs
cmp
ja
les
mov
inc
out
push
xchg
repnz
aaa
repz
repnz
add
push
and
add
push
dec
cdq
outs
jne
call
xchg
push
and
mov
jl
cmp
cmp
int3
pop
pop
retf
cmp
inc
movs
ins
mov
lock
in
mov
ret
stos
add
push
in
sbb
xlat
sub
dec
fwait
shr
mov
jbe
sub
dec
jbe
mov
cli
in
test
div
or
adc
or
retf
out
loopne
cmps
mov
and
fidiv
arpl
add
sti
ds
push
ins
push
(bad)
jbe
xor
les
cwde
push
push
cmp
aaa
(bad)
jle
or
jmp
jge
jecxz
and
jmp
and
aaa
push
mov
lds
sbb
sti
push
iret
nop
stc
mov
outs
sbb
mov
fld
std
shl
lahf
out
adc
es
push
imul
daa
jae
scas
xor
sub
int
mov
jmp
retf
jne
mov
mov
mov
cmp
pop
mov
lahf
mov
push
aam
test
call
test
jecxz
pop
ficom
sub
loopne
cs
push
cld
mov
arpl
pop
mov
adc
les
adc
mov
mov
mov
mov
jns
xor
add
retf
fstp
xchg
or
pusha
mov
push
rcr
call
or
addr16
aad
push
jmp
adc
loope
leave
cmp
xchg
nop
cmps
mov
cmp
pop
mov
icebp
push
in
lahf
ja
out
(bad)
adc
mov
repz
sub
dec
jne
xchg
ret
mov
test
test
sahf
rcl
xchg
pop
mov
mov
out
jmp
adc
sti
sahf
(bad)
xchg
dec
inc
arpl
movs
dec
mov
retf
stos
(bad)
xchg
sahf
or
xor
(bad)
std
or
test
aad
jle
mov
rol
jmp
or
add
xor
cdq
add
test
sahf
outs
movs
xor
popf
xchg
push
xchg
je
out
clc
sub
sub
cdq
sbb
iret
leave
dec
ret
mov
nop
dec
push
xchg
mov
in
cmp
mov
leave
xchg
pop
in
imul
popf
inc
and
jmp
cli
dec
leave
idiv
not
arpl
out
out
popf
cmp
push
mov
loop
call
xor
sar
call
jae
dec
pop
jmp
dec
es
mov
das
push
int3
cmp
push
inc
lahf
mov
das
jo
pop
dec
jno
lahf
int
test
add
out
sub
(bad)
(bad)
push
push
in
rcr
popa
jb
dec
and
inc
(bad)
popf
dec
ins
jae
cmp
fnstcw
lds
lea
sbb
xor
inc
cmps
(bad)
repnz
sar
pop
(bad)
sub
cli
mov
cmp
xchg
jae
clc
cmps
fmul
dec
xchg
mov
and
cwde
inc
dec
and
int3
dec
loope
inc
dec
fwait
mov
xchg
pop
pop
mov
pop
sbb
dec
sub
fimul
mov
pushf
in
ficomp
stos
ins
cli
cmp
mov
mov
add
mov
xchg
mov
sub
jle
dec
leave
push
xchg
and
pop
sbb
or
xchg
inc
arpl
mov
loope
aas
idiv
inc
pushf
adc
fsub
push
lock
xchg
mov
jle
cmps
sbb
jns
dec
pop
and
shl
fisttp
ins
das
out
ret
xor
ficomp
ins
int3
xor
sub
pop
adc
ins
cmp
adc
(bad)
jmp
shl
mov
jp
add
lahf
or
inc
(bad)
aam
sbb
sbb
retf
stos
sti
push
sub
call
sbb
sahf
cld
mov
adc
aam
pop
fdivr
mov
push
xor
test
sub
imul
retf
shl
xor
stos
in
mov
shl
xchg
hlt
mov
mov
sub
cld
jb
enter
aaa
mov
mov
cmc
mov
mov
popa
pop
mov
lock
jne
lahf
sahf
clc
arpl
cmp
mov
ret
and
shl
es
(bad)
enter
sbb
fwait
push
lahf
inc
cmp
ds
push
ror
pushf
xchg
dec
(bad)
js
dec
xor
and
stos
in
jmp
add
jle
test
shr
xor
out
sti
xor
rcl
xor
popf
push
jnp
adc
cmc
test
add
in
sub
and
sti
aam
push
xor
mov
xchg
add
pop
push
push
ss
and
mov
xlat
popa
(bad)
(bad)
jl
jnp
pop
(bad)
push
aaa
je
icebp
cld
into
nop
sub
xchg
xchg
pop
data16
rcr
mov
ins
enter
mov
outs
xchg
adc
sbb
or
sub
mov
xchg
mov
repnz
jae
repz
push
dec
loope
inc
dec
aaa
leave
into
sbb
data16
ss
push
fadd
or
pop
test
(bad)
scas
(bad)
or
fsubr
jmp
jmp
addr16
retf
bound
aaa
ins
in
jae
mov
cmp
cli
je
jmp
inc
(bad)
movs
cmp
and
xchg
sub
push
mov
mov
cmc
xor
fadd
mov
push
repz
and
rcr
push
xchg
pop
jmp
mov
push
add
in
sahf
pushf
pop
loopne
mov
data16
leave
imul
dec
mov
or
push
xchg
imul
mov
jge
inc
es
loopne
popf
arpl
out
sahf
out
and
and
push
icebp
jmp
mov
adc
mov
fcom
pusha
xchg
adc
mov
imul
aaa
fld
data16
adc
jg
test
jge
scas
std
dec
movs
(bad)
int3
dec
adc
mov
xor
out
jns
push
(bad)
sub
test
jp
sub
or
or
and
inc
test
xchg
dec
fild
jmp
push
jle
jg
cmc
movs
or
dec
fld
jl
or
cli
and
pushf
mov
movs
lock
loope
aaa
dec
mov
add
shl
in
out
fcomp
mov
addr16
jecxz
adc
mov
xchg
sbb
das
adc
cmpps
lea
sti
xor
icebp
pop
jne
sbb
push
and
outs
pop
inc
push
(bad)
out
aad
xor
jnp
repnz
cdq
stos
std
mov
sbb
aaa
imul
pop
cld
int3
or
pop
scas
adc
jle
icebp
stos
xchg
adc
ins
loop
inc
loopne
sbb
fwait
adc
lods
mov
xchg
add
js
arpl
les
mul
retf
arpl
std
adc
je
cmp
dec
cmc
xor
repz
scas
or
int
loop
or
lea
sahf
out
pop
xchg
in
xlat
or
call
add
stc
jle
rep
neg
aas
popa
mov
idiv
jmp
pop
fstp
in
lods
jmp
cmp
retf
inc
sbb
add
loop
test
jmp
add
cmp
sub
pop
ficomp
xchg
inc
rep
inc
mov
mov
repnz
(bad)
ror
cmp
and
push
dec
into
outs
push
pop
cmp
out
or
sub
push
xor
cwde
ret
(bad)
out
test
int3
mov
adc
pusha
dec
mov
aam
(bad)
test
shl
cli
rep
leave
push
(bad)
ficom
lods
push
xchg
adc
mov
sbb
sar
inc
out
inc
mov
out
ret
not
jno
scas
dec
jmp
push
xchg
fnstsw
sbb
sub
jbe
dec
inc
or
js
and
daa
std
or
nop
cmp
mov
out
ret
in
lds
call
xor
sub
adc
mov
dec
les
cmp
(bad)
mov
call
lock
mov
test
in
mov
iret
pop
xor
std
adc
pop
cmc
outs
daa
xchg
out
pop
sti
sbb
add
or
cwde
ret
pop
call
out
add
xor
jno
mov
jno
test
push
outs
enter
std
scas
sub
bound
js
test
push
lods
neg
mov
mov
mov
cmps
mov
cmp
dec
sbb
in
jmp
push
repnz
pop
jb
mov
and
arpl
xor
and
addr16
xchg
(bad)
fist
int
nop
ret
test
mov
fcmovu
in
cdq
hlt
or
adc
jg
outs
loop
push
mov
movs
fdiv
jg
sahf
push
or
movs
aad
das
xor
aad
imul
add
sbb
xchg
mov
xor
adc
call
xor
push
dec
or
pop
push
jne
test
jge
mov
sbb
cmp
push
pop
rcl
outs
fnstenv
fldcw
repz
jmp
fstp
push
mov
retf
sbb
lds
mov
test
stc
sbb
jge
or
jns
mov
les
popa
jmp
clc
jnp
xor
pop
add
pop
test
in
je
jne
adc
mov
push
mov
mov
adc
jno
mov
inc
adc
push
xchg
movs
imul
dec
ficom
fbstp
xor
call
sahf
and
mov
(bad)
je
sub
ins
xchg
fwait
sub
mov
sub
repnz
cmp
xor
test
mov
mov
jae
retf
test
mov
pop
popa
sub
mov
test
push
ss
add
mov
sbb
cmp
pop
push
loop
mov
pop
inc
mov
lods
popa
mov
(bad)
gs
into
adc
mov
mov
mov
into
or
push
pop
cmp
xchg
dec
cmps
pushf
inc
mov
jg
test
call
push
xchg
int3
mov
stos
pop
and
mov
or
and
dec
scas
adc
push
sbb
cmp
es
dec
pop
mov
(bad)
push
pop
and
lock
int3
xor
or
imul
loope
stos
out
rcr
sbb
mov
icebp
xchg
cmp
je
in
mov
out
repnz
and
sub
push
outs
ret
mov
leave
xor
jae
rcl
dec
and
inc
xchg
aad
and
xchg
out
test
sub
cs
push
dec
mov
rcr
mov
push
mov
nop
xor
push
xchg
fst
imul
leave
lods
jno
add
ror
sbb
or
test
cmps
xor
call
jnp
in
ss
into
mov
fsubr
ins
out
(bad)
in
xchg
cmp
mov
int
sub
pop
add
into
pop
mov
push
xchg
inc
lea
ja
shr
xchg
stos
xor
das
mov
cmp
aaa
pop
cmps
xor
jp
in
test
in
or
inc
inc
mov
push
and
add
ficomp
mov
into
cmp
into
mov
es
jmp
xlat
fbld
mov
push
mov
mov
mov
jo
push
mov
xchg
xchg
sbb
push
lds
jmp
add
and
xlat
fs
or
jns
(bad)
int3
cmp
fsubr
nop
test
mov
scas
fild
push
cdq
xor
into
(bad)
add
dec
mov
not
lods
jp
clc
icebp
cld
sub
jg
dec
pop
sub
frndint
out
out
loop
cdq
sub
and
fidivr
jecxz
jne
dec
xor
fnstcw
leave
je
jnp
xchg
or
js
sub
fucom
int3
jmp
(bad)
adc
aas
sbb
inc
mov
sar
iret
sahf
rol
(bad)
and
loop
jne
pop
sbb
sub
mov
mov
mov
sbb
data16
xor
inc
or
jns
jb
jge
push
mov
mov
push
dec
mov
sub
and
add
adc
xor
adc
jle
adc
popf
or
push
retf
pop
pushf
sub
cmc
(bad)
sahf
imul
cmp
or
xchg
mov
aam
mov
out
mov
push
lods
sub
cmps
or
leave
(bad)
mov
add
xchg
inc
ins
sbb
sub
jl
lds
(bad)
setb
mov
enter
add
mov
adc
sbb
xchg
sti
mov
(bad)
ror
(bad)
or
ins
add
cmp
xchg
adc
push
imul
pop
(bad)
sub
call
push
pop
xor
dec
mov
adc
sub
repnz
adc
(bad)
sbb
dec
mov
aas
fwait
push
or
jecxz
cmp
jmp
add
out
pusha
repnz
test
push
fcompp
(bad)
jmp
scas
jle
xchg
jmp
rcr
inc
retf
aad
repz
int
mov
pop
jmp
inc
sbb
ret
test
clc
inc
sbb
cmp
cmp
es
adc
stos
ror
and
pop
pop
in
push
lods
inc
sub
add
add
pop
lahf
sbb
cld
mov
dec
hlt
pushf
ret
mov
outs
mov
out
test
xor
or
cmps
stos
bound
xchg
movs
retf
xor
sbb
(bad)
(bad)
pusha
test
mov
sub
mov
mov
jae
cwde
sub
je
adc
jns
cmp
or
pop
inc
hlt
data16
mov
dec
je
xchg
push
inc
sub
adc
cmp
cdq
aad
call
and
sub
int
inc
and
sahf
xor
hlt
sar
repnz
sahf
fisubr
mov
adc
cmps
jge
es
arpl
or
sbb
lea
arpl
fisubr
mov
sub
dec
add
fld
das
fbld
pushf
loopne
pop
aaa
xchg
pop
in
sbb
cdq
cmp
mov
fsub
lock
push
loope
add
or
adc
test
pop
mov
xchg
cwde
xor
mov
aad
push
leave
mov
mov
arpl
mov
mov
loope
push
fwait
cmp
xchg
mov
xchg
int3
jmp
sub
or
out
scas
push
cmps
loop
push
xlat
mov
stos
adc
sbb
lock
aas
mov
xlat
adc
xchg
add
retf
loop
dec
arpl
leave
mov
pusha
sahf
push
rcl
mov
and
scas
(bad)
sti
call
sub
or
dec
pop
dec
in
jnp
adc
xlat
(bad)
pop
out
pop
repz
mov
test
pop
fdivr
sub
lahf
add
cmp
out
loope
hlt
icebp
(bad)
mov
sbb
mov
fsubr
push
ss
or
dec
cmp
out
add
jne
in
fdivrp
mov
adc
out
pop
push
cmc
lods
scas
pop
sub
add
mov
push
loop
add
inc
ficomp
or
and
fld
jg
ds
imul
(bad)
cmp
les
mov
mov
jecxz
es
jge
cdq
outs
inc
push
dec
xchg
and
ja
inc
out
(bad)
sti
push
xor
add
addr16
in
js
xchg
mov
cmp
cmp
(bad)
clc
xchg
(bad)
mov
and
mov
repz
ins
(bad)
loopne
sbb
aaa
test
add
in
sti
and
int3
mov
jge
xor
packssdw
xor
jmp
jns
fsub
test
jno
mov
jo
mov
sub
int
ins
xor
mov
popf
inc
ds
jmp
out
fmul
fist
call
add
jecxz
mov
adc
call
and
add
inc
and
leave
cmps
outs
push
ss
(bad)
out
pop
call
inc
pop
mov
push
dec
cmp
pop
sub
push
jmp
pop
retf
jmp
cdq
jb
or
push
ret
push
or
adc
inc
ins
xor
cmp
int
(bad)
xchg
mov
call
mov
inc
ins
aas
push
lods
popf
sbb
cli
adc
movs
aas
or
retf
neg
or
clc
sahf
lds
stos
jbe
test
xor
aad
cdq
stc
ffree
mul
mov
aad
cmp
xor
inc
and
push
dec
sub
mov
out
loope
push
push
test
sub
pop
dec
sub
cmc
mov
xchg
xor
fld
or
jno
loopne
mov
sub
jo
pop
add
xor
jns
xchg
clc
ret
(bad)
lock
jmp
aam
retf
mov
out
aaa
dec
adc
and
pop
aam
xchg
jle
mov
sti
sbb
scas
mov
mov
inc
sub
inc
out
not
sub
lds
jle
fsubr
pop
xchg
fs
sar
sbb
inc
ins
jmp
jecxz
inc
cmc
push
cmp
call
xor
push
loop
jbe
inc
ss
jne
xor
cmp
pop
or
pop
mov
or
add
mov
inc
mul
hlt
jg
or
pop
pop
pop
or
movs
pop
sbb
jmp
stos
lea
js
add
adc
retf
pop
mov
cmp
push
loopne
sub
xchg
loope
pop
dec
mov
fcomp
inc
retf
push
out
popf
and
out
fwait
test
pusha
fcmovnu
repz
lahf
pop
fistp
addr16
dec
shl
fisubr
fild
pop
push
mov
fcmovnu
add
jmp
je
pop
inc
mov
jne
in
inc
add
(bad)
xchg
inc
push
add
xchg
ret
fmul
imul
ret
cmps
pop
fstp
mov
test
ja
sbb
aaa
inc
rol
inc
js
mov
or
ror
xor
push
clc
hlt
xchg
push
stos
adc
or
xor
ret
mov
pop
mov
lods
cmp
and
iret
inc
xlat
nop
add
sbb
pop
add
pop
call
xchg
push
and
movs
sbb
mov
cli
mov
inc
cmp
pusha
jmp
imul
xchg
mov
daa
xlat
cmps
mov
add
cmps
ret
out
xchg
jp
mov
cdq
mov
sub
lods
in
xor
dec
call
push
sub
in
imul
fadd
dec
push
push
add
repz
or
inc
cmp
sbb
pop
or
mov
loope
fmul
scas
add
xor
add
xchg
stc
sar
(bad)
out
movs
xchg
pop
jne
jbe
inc
cmps
add
stos
mov
sub
mov
adc
jae
pop
dec
mov
rol
cmp
sbb
aam
xchg
rol
loop
fwait
jb
mov
inc
aaa
hlt
(bad)
outs
jae
dec
scas
jmp
cwde
xchg
dec
into
ss
test
mov
cmp
mov
or
repnz
lods
fidiv
xchg
into
pop
mov
inc
xchg
xor
jecxz
int3
in
hlt
(bad)
mov
mov
fs
(bad)
arpl
and
nop
iret
aam
dec
stc
mov
jl
call
push
rcr
and
jbe
(bad)
push
fcmove
out
gs
daa
jnp
inc
xchg
pop
adc
(bad)
neg
arpl
test
or
cs
xchg
xor
xchg
sub
inc
jo
cmp
in
ins
aaa
daa
mov
hlt
aam
nop
les
cmp
jae
cdq
lods
jle
(bad)
mov
lods
loopne
out
aas
pop
movs
xchg
xlat
sti
cmp
pop
jle
sub
jb
mov
add
movs
mov
xor
sbb
xor
inc
ins
or
jge
xchg
fnsave
fcom
sbb
fdiv
pop
pushf
inc
pop
add
pop
add
ret
xchg
and
pop
inc
adc
mov
pushf
loope
addr16
mov
sar
fidiv
movs
in
push
pop
lock
mov
scas
neg
icebp
mov
ins
mov
call
inc
popa
popf
(bad)
xor
mov
fcmovb
mov
ror
neg
fucomip
fcomp
out
inc
jmp
icebp
pop
aad
or
popa
stos
lahf
retf
pushf
in
scas
mov
mov
shr
or
cwde
cmps
shl
arpl
cli
das
mov
icebp
fisubr
enter
(bad)
and
lods
cwde
js
mov
dec
jb
xor
pop
lds
repnz
fwait
pop
stos
add
ret
sbb
mov
ficomp
mov
js
imul
lds
add
sub
push
inc
sbb
push
loopne
sbb
pop
sbb
jg
in
mov
(bad)
in
cmp
mov
xchg
jp
cmp
rcl
and
xchg
dec
std
cli
push
sbb
nop
xor
mov
inc
ja
adc
dec
cli
and
push
dec
xor
loop
stc
stos
lock
fdivr
call
ins
mov
or
xor
mov
jnp
loopne
add
mov
inc
leave
div
daa
or
push
push
dec
in
out
into
nop
cmps
cdq
(bad)
and
imul
out
xchg
and
pop
adc
mov
inc
mov
xor
jp
mov
push
push
in
mov
cmps
fs
push
jg
jmp
add
or
in
and
push
sub
adc
not
rol
cmc
inc
neg
(bad)
stos
hlt
pop
sbb
cmp
dec
sub
gs
outs
cmp
sbb
or
inc
cdq
sub
mov
dec
or
push
cld
dec
(bad)
push
or
fsub
cmps
outs
jb
hlt
lea
push
mov
ret
fincstp
and
and
iret
xchg
xor
mov
inc
add
inc
push
fmul
mov
push
xchg
dec
test
test
jecxz
std
aaa
fcomp
mov
mov
adc
jnp
loope
stos
sub
mov
stos
push
scas
rol
sub
mov
sbb
mov
pop
pop
ins
sbb
cdq
xchg
movs
pop
sahf
int3
ss
push
cdq
call
mov
jbe
mov
(bad)
cmp
call
cmps
test
pop
mov
push
jmp
pusha
(bad)
pop
dec
das
pop
jmp
jmp
xor
adc
xchg
xchg
adc
add
and
imul
xor
add
xor
cmc
pop
cmp
sub
dec
jg
add
adc
scas
mov
loope
xchg
pop
es
push
out
cmp
cdq
inc
(bad)
pop
push
cmc
bound
inc
mov
pop
inc
cdq
fsubr
(bad)
js
adc
jne
cmp
dec
mov
popa
iret
pop
push
or
jo
dec
pop
inc
push
cwde
cmp
call
popf
dec
ret
cmp
nop
cmp
cdq
jo
in
jo
cmp
lods
cdq
int3
or
mov
sbb
call
addr16
cwde
call
pop
pop
dec
pusha
shl
pop
movs
pop
cmp
xchg
pop
(bad)
and
clc
and
sbb
jo
in
int
mov
pusha
cmp
mov
test
ror
pop
inc
fwait
stos
(bad)
mov
inc
fucomp
sbb
inc
ins
(bad)
mov
adc
(bad)
cld
cmps
icebp
mov
mov
cwde
in
sbb
push
cmps
fucomp
dec
inc
cwde
hlt
repz
mov
mov
jp
pop
fwait
adc
je
ds
mul
movs
sbb
rcl
popa
or
aas
(bad)
or
adc
adc
pushf
mov
sahf
adc
pop
xor
ret
and
pop
out
aad
std
pop
add
mov
xchg
aad
repz
fidivr
pop
xor
push
stc
rcr
outs
add
les
dec
cmp
das
pop
cmp
mov
mov
outs
or
pusha
(bad)
cmp
pop
retf
sbb
iret
sub
xchg
jp
cs
mov
pop
dec
mov
xor
aas
mov
sti
xchg
daa
data16
adc
fisub
mov
dec
push
sub
or
aas
fwait
ror
dec
cmp
xchg
inc
xchg
stos
hlt
adc
mov
loopne
mov
xchg
mov
pop
fcomp
mov
addr16
xor
ins
stos
iret
adc
out
adc
cmp
mov
mov
(bad)
cmps
jmp
xor
mov
aas
xchg
not
out
fst
sub
add
push
xchg
jle
jb
add
dec
add
inc
adc
popf
pop
ror
cli
inc
repnz
push
or
push
movs
mov
mov
cld
test
sti
sar
ja
or
xor
add
(bad)
lea
pusha
test
pushf
pop
inc
inc
loop
or
rcr
mov
sbb
sbb
mov
ja
out
dec
jmp
cmp
jae
add
test
ficom
mov
in
adc
call
pop
call
jle
mov
test
dec
and
jno
inc
js
add
scas
movs
mov
call
pop
xor
lock
in
inc
mov
push
pop
cmps
clc
add
out
push
dec
sbb
popf
ret
dec
mov
add
jae
xchg
cdq
mov
add
xor
cmp
pop
xchg
push
mov
imul
add
and
sbb
fs
rcr
sar
frstor
sbb
mov
sub
inc
mov
mov
fbstp
dec
push
mov
stos
jb
jp
std
sub
outs
sub
dec
sub
test
test
jge
mov
sbb
jp
push
pop
cdq
sbb
mov
adc
sub
xchg
fwait
int
or
in
inc
dec
mov
ins
cwde
or
test
push
push
add
jne
jl
inc
stos
adc
and
cli
push
or
fidiv
daa
jmp
or
and
push
add
das
vunpckhpd
mov
imul
aaa
out
add
mov
push
jp
ss
int
jnp
or
into
shl
fsubr
leave
push
mov
mov
sbb
mov
lahf
(bad)
cmps
xchg
ja
ret
pop
scas
dec
loope
out
jecxz
loop
ins
push
aas
je
bound
sub
mov
mov
jmp
shrd
mov
fwait
test
and
je
cmc
dec
push
les
test
loopne
push
std
arpl
or
cmc
(bad)
fbld
movs
mov
ret
arpl
outs
call
test
das
sub
sbb
std
pop
jo
cmp
jne
ins
jmp
dec
xor
dec
xlat
pop
jb
lods
dec
inc
pop
add
call
add
jmp
icebp
bound
dec
pop
dec
pusha
retf
mov
and
push
mov
dec
cmp
push
sub
stos
push
mov
stc
pop
cli
xor
or
outs
mov
dec
rol
adc
push
push
xchg
cmovnp
sahf
shl
push
retf
jb
pop
sub
(bad)
pusha
xchg
jbe
and
cmp
or
in
or
mov
sbb
xor
pushf
fimul
je
sub
and
add
test
pop
lods
fsub
jb
(bad)
(bad)
gs
jle
lea
pop
fisttp
xor
and
or
and
inc
xchg
ss
(bad)
or
jmp
sbb
sahf
iret
stos
cmp
push
leave
int3
jnp
dec
pop
lds
xor
dec
ins
scas
lods
in
mov
test
cmp
or
push
add
mov
iret
lods
das
push
mov
inc
pop
inc
fld
out
xor
cmp
das
push
ds
sub
add
aad
dec
hlt
add
cmps
push
jno
xchg
xor
cmp
dec
jne
repz
imul
mov
mov
in
xchg
mov
inc
xchg
(bad)
sub
xor
mov
jl
jmp
inc
mov
cmp
mov
ins
js
(bad)
dec
cmc
lods
sbb
cdq
shl
fild
sbb
jo
arpl
jp
pusha
xchg
xchg
mov
jmp
xchg
or
rcr
(bad)
js
xlat
cmp
pop
repz
mov
mov
jne
jnp
mov
inc
test
retf
mov
mov
and
push
repnz
and
psrlq
and
(bad)
ins
and
and
test
cmp
loope
jmp
mov
fcmovb
cmp
ror
inc
push
push
pop
pop
adc
xor
adc
mov
hlt
jmp
mul
fwait
inc
jns
or
sbb
dec
lods
rol
cmp
or
pushf
repnz
pop
jmp
repnz
mov
cwde
sbb
push
bound
call
pop
iret
not
push
imul
es
ror
out
push
push
lahf
nop
add
cmp
loopne
cmp
div
dec
imul
jns
in
mov
pop
mov
xchg
fcmovnbe
(bad)
pop
iret
mov
lods
addr16
call
fisub
xchg
out
cdq
push
in
loop
gs
cmp
xor
popf
test
test
movs
icebp
mov
push
(bad)
push
cmp
mov
push
outs
pop
into
pop
(bad)
mov
and
fnsave
push
sahf
sbb
pop
popa
pop
outs
jb
and
test
stc
mov
and
aad
xor
daa
xchg
cmp
sub
pusha
inc
shl
stos
ret
cs
call
inc
inc
cld
gs
push
sbb
daa
push
and
lahf
add
xchg
int3
dec
jl
into
repz
pop
jle
mov
mov
(bad)
movs
fisttp
mov
jmp
mov
popa
cmp
sbb
lods
retf
dec
test
jge
push
pushf
ins
jnp
xchg
in
jg
pushf
cwde
out
call
movs
xor
mov
jecxz
xor
ja
jmp
xchg
fdiv
jmp
stos
daa
popa
shl
push
stc
push
sub
dec
mov
jp
and
(bad)
mov
in
adc
gs
arpl
dec
fiadd
gs
not
mov
sub
rol
add
add
sbb
cmps
aad
push
shl
hlt
dec
les
dec
cmp
push
ss
cli
dec
repz
push
dec
popf
rcr
xchg
shl
cmc
sub
das
push
dec
dec
ds
imul
daa
in
inc
stos
lods
aas
push
push
push
pop
mov
mov
mov
ret
cdq
pop
scas
mov
fsub
dec
add
std
fstp
xchg
cwde
arpl
retf
hlt
test
or
int3
sub
pop
leave
jnp
sti
pop
add
jns
or
repnz
mov
dec
cld
sbb
ds
test
cmp
daa
jp
and
test
xchg
inc
inc
aam
push
stos
lock
cdq
cdq
pop
and
pusha
push
sub
add
adc
inc
pop
cmp
loopne
pop
nop
xchg
stos
and
int3
push
lds
sbb
fbld
add
and
sbb
push
test
popf
or
pop
adc
xor
cli
xchg
adc
push
jg
scas
hlt
jno
push
(bad)
and
mov
mov
ret
leave
push
jg
dec
pop
or
jbe
or
addr16
mov
pusha
sbb
int
lods
cmp
sbb
xchg
pop
sar
(bad)
fstp
mov
dec
jmp
mov
xor
stos
push
dec
hlt
popa
ja
(bad)
fwait
push
mov
jns
or
mov
loopne
mov
pushf
ins
jne
out
and
push
add
cmps
or
div
out
push
mov
pop
xor
imul
test
mov
xor
xor
push
mov
loopne
pop
dec
outs
addr16
xor
pop
adc
xlat
cmp
cmp
push
inc
push
(bad)
mov
out
fstp
sbb
pop
jnp
fnsave
xchg
inc
call
and
mov
jl
arpl
std
fmul
xchg
mov
icebp
push
add
push
adc
sbb
fistp
out
lods
mov
push
sbb
ror
lahf
ins
outs
rcl
jo
outs
cmp
or
pop
and
adc
and
dec
mov
jle
das
imul
xor
xchg
inc
das
rcl
call
lea
mov
shl
mov
pop
(bad)
aam
fnstcw
outs
or
in
int3
ret
xchg
mov
jbe
enter
out
(bad)
add
imul
fst
and
push
xor
shl
xchg
sub
rol
jae
lds
rcl
test
adc
test
add
jge
mov
mov
mov
(bad)
pusha
std
mov
and
hlt
add
outs
xchg
mov
data16
add
push
xchg
and
dec
test
push
jp
ja
xchg
ins
test
inc
aas
test
out
(bad)
and
int
cmp
adc
or
clc
rcl
in
fistp
test
push
and
add
out
daa
mov
ret
into
sbb
gs
sub
es
jmp
push
ins
leave
mov
or
xchg
out
or
popf
inc
imul
test
std
enter
popf
dec
jle
jle
call
xchg
rcl
repnz
mov
mov
jbe
sub
xchg
test
and
xor
mov
inc
neg
es
cmp
add
adc
mov
sub
bound
inc
(bad)
xchg
jl
dec
ret
cmc
add
mov
nop
mov
out
pop
imul
imul
comiss
mov
les
(bad)
dec
fnstcw
lea
imul
pop
loopne
out
(bad)
lea
gs
xchg
push
ins
mov
mov
pop
push
sub
mov
sub
add
imul
enter
jge
jne
aam
lods
sub
stos
and
arpl
nop
mov
lahf
int
xchg
xchg
out
mov
cdq
shl
and
pop
mov
out
sub
das
jmp
gs
inc
in
sub
add
adc
add
mov
add
pusha
adc
fisub
out
mov
call
mov
fcomp
lock
mov
lea
mov
sub
call
iret
dec
xchg
and
mov
sbb
addr16
shl
outs
xor
stc
cli
sub
xor
pop
or
mov
fcmovb
int3
(bad)
test
push
jbe
rcr
outs
test
mov
sub
sub
xchg
(bad)
fild
loopne
push
mov
lds
lods
mov
bound
dec
adc
add
mov
les
adc
sub
dec
xor
das
sbb
jmp
aas
sbb
mov
lods
xchg
mov
jnp
fbstp
repz
mov
inc
dec
push
fld
xor
inc
fisub
mov
lea
xor
jo
pop
ds
retf
les
loopne
jl
mov
cmp
cmp
sub
push
ficomp
repz
arpl
es
pop
cld
sbb
mov
sti
into
pop
push
add
push
mov
inc
pop
mov
or
jge
xlat
cmp
mov
rol
ret
ret
sbb
iret
mov
out
movs
das
call
movs
in
add
xor
sub
inc
sub
fsub
xor
out
xchg
ins
jmp
cld
mov
sbb
stos
sbb
inc
push
jl
push
and
in
movs
rol
adc
jo
rcr
inc
pop
mov
repnz
not
inc
sub
dec
mov
clc
addr16
arpl
add
inc
repz
mov
popf
mov
pop
xchg
outs
pop
daa
and
mov
enter
adc
or
add
pop
scas
scas
mov
ins
xor
fnsave
pop
xor
pop
sbb
mov
clc
push
loopne
and
jge
mov
dec
sbb
jbe
data16
addr16
fistp
aad
adc
xchg
jno
xor
jecxz
jmp
ja
and
xor
mov
test
xor
pop
int
add
cmp
or
retf
int3
test
cmps
loopne
push
std
lea
pushf
lds
rcl
dec
cmp
push
pop
mov
mov
dec
mov
and
sbb
xchg
dec
(bad)
cdq
test
mov
sub
cdq
dec
cld
scas
add
mov
sub
call
gs
push
movs
fdiv
push
rcr
data16
fstp
bound
movs
loopne
adc
sbb
mov
je
mov
xchg
mov
mov
add
mov
out
push
out
pop
sub
into
adc
je
ja
adc
idiv
inc
jl
inc
adc
cmps
jg
ret
test
and
jns
imul
mov
or
adc
gs
sub
cld
add
push
cmc
or
xchg
xchg
pop
adc
lods
xor
movs
inc
mov
cmp
jno
movs
retf
retf
and
mov
aad
mov
push
mov
fadd
outs
jae
adc
cmps
mov
xchg
push
(bad)
loope
ret
mov
add
gs
scas
cmps
adc
fild
dec
fcmovnb
push
sub
lds
ret
jne
xchg
into
aad
sub
and
pusha
pop
sahf
enter
cmp
jb
push
add
xchg
xchg
and
cwde
add
mov
test
pop
xor
pop
xchg
test
scas
or
or
and
into
jae
mov
clc
pop
push
inc
inc
sahf
add
cli
inc
pop
sar
inc
mov
add
cdq
mov
cmp
ror
leave
call
js
loopne
inc
fistp
xor
idiv
cs
int3
mov
pop
js
xor
aam
mov
jo
fs
imul
mov
adc
xor
fst
das
lds
xchg
pop
sbb
add
mov
sar
fdivr
shl
mov
addr16
daa
lds
jp
xchg
outs
xlat
push
adc
pop
lods
lahf
lds
sub
ds
jecxz
pop
imul
inc
sbb
mov
and
stos
icebp
aaa
xchg
in
cmp
icebp
mov
jg
dec
sahf
subps
retf
or
mov
adc
cmps
and
mov
das
outs
movs
xchg
push
shr
js
mov
pop
das
jg
mov
sar
pop
rcr
jg
test
mov
fnstcw
xor
leave
mov
das
push
nop
inc
xchg
sbb
mov
lds
int3
push
(bad)
ds
fwait
mov
push
bound
popf
pop
push
xor
mov
inc
pusha
retf
mov
repnz
pop
shl
pushf
cmp
cmps
pop
mov
mov
xchg
jne
jg
cmp
(bad)
(bad)
mov
jno
xor
sar
int3
repnz
lods
dec
hlt
or
aas
stc
xchg
ins
mov
inc
mov
pop
sub
inc
adc
xchg
xchg
ja
inc
add
shl
jno
add
inc
dec
retf
sub
sub
lds
sub
repz
adc
or
pop
div
test
outs
jns
int
mov
mov
pop
mov
repz
sbb
add
js
std
jl
xchg
mov
jge
ret
mov
popa
mov
and
shl
push
(bad)
pop
retf
cs
fisttp
jmp
addr16
cmc
int3
(bad)
lahf
cdq
fdiv
pop
bound
out
cmp
clc
pop
xchg
xchg
pop
xchg
aaa
dec
jge
in
lahf
mov
add
imul
stc
jo
or
jno
jg
enter
pusha
in
clc
sbb
adc
test
mov
push
lock
push
push
rcr
sbb
scas
ret
mov
push
dec
mov
inc
mov
add
jns
in
aad
jmp
js
xchg
jge
das
data16
adc
pusha
mov
or
mov
push
and
xchg
jb
(bad)
ins
mov
sub
stos
pushf
xchg
add
loope
jl
mov
mov
das
sub
arpl
xchg
pop
(bad)
gs
inc
ret
pusha
test
imul
jmp
scas
test
data16
pushf
mov
jbe
xchg
sub
aam
js
inc
xchg
pop
mov
call
or
(bad)
xchg
cmp
xchg
xor
sub
jmp
push
inc
push
bound
dec
sar
and
sti
pop
cmp
jno
cmc
sbb
stos
out
sub
inc
sahf
xchg
push
call
ins
(bad)
mov
or
xchg
xchg
xchg
push
movs
mov
nop
and
or
xchg
les
call
and
or
xor
pop
mov
das
xor
int
arpl
test
mov
(bad)
cmps
scas
stc
xchg
retf
jo
mov
jno
adc
nop
inc
gs
repz
adc
fisub
inc
push
pop
inc
jmp
fiadd
std
cmp
(bad)
cmp
cs
pusha
js
mov
sbb
in
cmps
imul
mov
cmp
add
cmp
test
(bad)
xor
dec
jmp
cdq
adc
icebp
pop
test
mov
mov
les
and
aaa
loopne
adc
adc
pop
dec
sub
cli
stos
lods
call
fisttp
mov
and
inc
addr16
ja
lods
or
jae
cli
arpl
pusha
les
cli
cmp
xchg
js
pop
(bad)
lahf
shl
and
das
add
ins
cwde
shr
xlat
xchg
dec
cmp
inc
test
rol
data16
cdq
mov
push
aas
dec
jbe
inc
iret
xchg
cwde
data16
in
cmp
scas
sub
cmp
mov
retf
add
cmp
imul
inc
(bad)
fucom
xor
pop
call
mov
loopne
out
mov
in
and
mov
xchg
cmp
dec
cli
fstp
pop
dec
inc
in
mov
jbe
frstor
in
jae
fdiv
mov
(bad)
stc
inc
xchg
adc
mov
add
sub
out
pop
add
stc
outs
mov
mov
fimul
mov
not
aaa
mov
push
je
adc
cmp
loop
push
fist
test
lea
cmp
xor
inc
mov
imul
daa
add
mov
sbb
cmp
pop
jnp
push
ja
jo
inc
or
mov
stos
cmps
mov
in
pop
pop
pusha
adc
repz
(bad)
cli
icebp
pop
push
(bad)
xor
in
mov
ret
add
inc
xchg
pop
clc
fdivr
in
scas
test
les
imul
dec
(bad)
leave
jns
cmps
jge
push
movs
ror
test
retf
jle
mov
add
ret
jbe
or
lods
jge
or
in
(bad)
popa
adc
mov
cmp
pop
ret
adc
ins
lods
mov
loop
stos
je
sub
(bad)
fwait
aaa
xor
sub
pop
xchg
daa
js
jne
inc
bound
adc
or
stos
sub
cld
sbb
push
xor
inc
xchg
push
outs
xor
sbb
cmp
cmps
js
fs
mov
lds
int
ins
shl
mov
aaa
pop
outs
movs
and
pop
or
sbb
std
sbb
addr16
outs
(bad)
push
mov
fstp
dec
aad
adc
lahf
xor
cli
and
cs
loop
or
xchg
(bad)
pop
inc
stc
xchg
adc
daa
add
push
push
test
out
loope
mov
mov
mov
test
pusha
and
or
sub
sbb
lea
jg
xor
into
das
xchg
hlt
icebp
mov
cmps
mov
or
xor
call
mov
fsub
push
ds
lock
mov
cmp
inc
fistp
jge
pusha
or
cmp
and
mov
icebp
adc
jecxz
mov
and
cld
into
dec
sub
inc
cmps
(bad)
jo
push
leave
push
sbb
adc
and
adc
sub
adc
fcom
xor
jg
cmc
sbb
fcomp
cmc
jl
xchg
shl
jae
out
cwde
xchg
mov
sbb
add
pop
jne
jno
nop
sub
pop
jbe
inc
dec
adc
jmp
xchg
ja
mov
mov
cmp
int3
xor
int3
lock
push
dec
mov
je
push
adc
mov
mov
(bad)
clc
cmps
xlat
cwde
xor
or
adc
xchg
pop
pop
in
add
sahf
push
sub
adc
sub
cld
dec
test
outs
cmp
iret
mov
je
sub
bound
xchg
cli
out
pop
xchg
jne
inc
call
push
pop
rol
cwde
push
and
(bad)
push
push
inc
cmp
shl
xchg
dec
xor
shl
and
call
dec
imul
jg
arpl
mov
in
cmps
scas
push
out
fucomp
jne
shl
push
and
adc
add
xchg
in
or
inc
or
mov
movs
lahf
jb
xchg
sbb
mov
and
data16
sar
stc
cmps
into
inc
sti
cmc
stos
sbb
out
sbb
clc
and
jecxz
push
test
enter
xlat
pop
mov
mov
loop
and
jae
scas
(bad)
sbb
mov
pusha
jmp
adc
cwde
fnstsw
fistp
push
cmp
(bad)
out
sub
ja
inc
sub
or
movs
and
cmp
or
loope
cmps
pop
arpl
mov
inc
xor
xchg
push
in
sbb
pop
dec
sahf
cmps
imul
rcr
cdq
in
push
je
and
adc
dec
retf
retf
scas
loop
in
mov
stos
std
xor
nop
arpl
ret
out
mov
test
rcl
mov
pop
repz
ficomp
sbb
cli
sbb
pop
cmp
hlt
pop
cld
or
jae
(bad)
jne
dec
pop
pop
or
or
mov
sbb
ror
test
cmp
mov
loope
aaa
stc
in
and
cmp
test
test
call
sub
inc
pop
or
and
rcl
and
out
sub
pop
out
pusha
scas
fmul
rcr
xchg
mov
jecxz
and
sbb
mov
stos
fnsave
out
shl
mov
cld
mov
shr
push
xchg
popa
iret
pop
das
inc
sub
test
sub
std
(bad)
mov
push
xchg
mov
or
fidivr
mov
inc
mov
jecxz
movs
push
es
push
mov
mov
scas
shr
mov
xchg
into
mov
jno
or
outs
sar
add
add
add
loope
mov
inc
mov
jmp
inc
das
pop
xor
rcl
cmp
shr
out
pushf
mov
jle
mov
aaa
pop
int3
sti
xchg
mov
jmp
mov
dec
cmp
fst
jo
ja
stc
and
fsubr
xchg
std
call
jle
add
jo
sahf
and
cmp
push
div
mov
iret
dec
xor
jnp
mul
adc
xchg
jmp
sbb
push
stc
paddsw
call
and
add
ror
inc
sbb
pop
inc
out
xchg
loopne
movs
jne
sbb
sbb
sbb
jmp
fwait
sub
shl
xchg
leave
rol
add
jmp
popf
loop
popa
or
ds
add
arpl
fmul
aas
aam
or
rcl
es
mov
rol
pop
pop
test
adc
sbb
inc
mov
(bad)
(bad)
mov
dec
outs
test
repnz
and
adc
inc
push
repz
sub
fsub
cmp
mov
adc
jae
aad
pop
cmc
add
inc
into
retf
pop
lods
xor
aaa
fldz
jp
cwde
test
jle
cmp
cmc
out
push
mov
push
call
out
and
int3
or
aad
ret
push
fdivr
dec
inc
sbb
xchg
int
fmul
inc
cmp
outs
ret
jg
int
ins
lods
mov
pop
dec
jmp
inc
fmul
jo
sub
call
xchg
mov
ret
mov
xor
mov
in
arpl
daa
push
xchg
inc
xchg
and
mov
mov
(bad)
jl
and
push
and
add
push
pop
jno
popf
enter
add
dec
mov
cli
fistp
movs
jg
mov
xor
shl
xchg
pop
cmp
ins
iret
or
xchg
dec
and
cmp
test
ins
xor
jb
retf
or
push
xchg
pusha
push
jp
dec
sbb
add
dec
into
xchg
mov
dec
add
jmp
test
ss
mov
test
cli
mov
lahf
imul
stos
jnp
add
xchg
xor
add
pop
repz
nop
xchg
repnz
mov
call
jecxz
test
scas
and
loopne
mov
xchg
bound
pusha
add
movs
mov
(bad)
call
mov
inc
pop
rol
fidivr
(bad)
lock
inc
pop
sbb
mov
or
bound
jg
sahf
shr
sahf
in
sbb
push
or
stos
(bad)
sbb
mov
xchg
mov
ins
cdq
add
loopne
js
ins
jae
pop
in
jno
loopne
mov
jnp
scas
lock
add
and
das
add
mov
jne
cli
pop
out
je
inc
xor
sub
call
mov
and
xchg
jle
mov
xor
adc
bound
dec
rcr
mov
ins
hlt
pop
jmp
ins
inc
fidiv
inc
in
loop
in
lea
lea
cmp
inc
mov
aaa
es
sar
dec
and
movs
stc
push
cld
stos
mov
adc
jns
je
movs
xor
and
test
std
loop
or
iret
ficomp
inc
out
mov
fwait
adc
cdq
mov
adc
cdq
call
stos
lea
xor
(bad)
test
cmp
push
repnz
xchg
or
out
test
hlt
adc
mov
retf
(bad)
adc
push
sbb
call
and
lods
or
imul
adc
neg
fldenv
arpl
rol
pusha
ret
fisub
push
pop
xor
(bad)
xor
add
shl
cwde
pop
nop
mov
imul
inc
mov
or
mov
cmp
out
das
das
jge
mov
or
jmp
mov
xor
ret
loop
mov
sub
out
imul
lds
int
add
retf
in
mov
inc
movs
push
ss
addr16
inc
in
pusha
mov
nop
shl
mov
mov
gs
sti
nop
fcomip
mov
and
rcr
dec
imul
cli
inc
push
sbb
cmc
sub
dec
je
call
jne
jmp
mov
hlt
out
sbb
xor
push
sti
mov
xlat
imul
fimul
mov
lea
xchg
repz
cmp
ss
and
pop
je
xor
pusha
jecxz
adc
leave
inc
pop
pop
mov
and
lea
ja
cmp
cs
dec
push
sub
xor
hlt
hlt
push
cwde
retf
les
outs
scas
push
add
cs
(bad)
aam
push
fwait
dec
fstp
hlt
fmulp
mov
xchg
sbb
inc
popa
std
push
mov
adc
ret
fwait
adc
mov
or
das
sbb
and
daa
imul
cmp
adc
data16
xor
fs
cmp
cmp
jmp
aaa
xchg
add
repnz
mov
jmp
cli
jbe
stc
adc
arpl
jp
ins
jo
mov
repnz
inc
scas
test
leave
es
mov
jno
dec
enter
retf
sub
push
inc
mov
jae
jecxz
loope
cmp
or
adc
mov
cmp
(bad)
outs
(bad)
xor
push
cmps
test
lahf
je
dec
ja
push
stc
jo
jnp
(bad)
adc
dec
inc
ins
iret
rcl
rcr
adc
mov
pusha
adc
sbb
xchg
rol
ins
jg
iret
pop
xor
xchg
ror
mov
jl
(bad)
pop
mov
jl
outs
mov
leave
mov
clc
es
popf
js
xchg
sti
mov
cmps
dec
cmp
hlt
mov
dec
pop
fisttp
cli
adc
jg
ds
loopne
(bad)
or
out
cmp
das
pusha
push
jns
aas
jae
out
jbe
mov
mov
pop
inc
mov
retf
cmc
mov
mov
pop
mov
push
jo
das
or
sbb
cdq
mov
jmp
ss
or
mov
xchg
cmp
mov
or
dec
pop
xor
retf
mov
call
es
dec
push
sbb
xchg
sub
jo
fidivr
out
mov
push
cmps
xchg
adc
fist
imul
mov
sbb
push
fldenv
in
mov
cmp
xor
fucomip
push
rcl
add
clc
cli
or
repnz
mov
push
xchg
and
pop
fld
out
loop
xor
call
js
and
imul
mov
int
cmp
loope
push
call
pop
sub
adc
inc
mov
add
cmp
cmp
fadd
add
mov
mov
cmp
cmps
fcmovnb
xlat
cmp
(bad)
and
jb
mov
outs
aas
div
mov
mov
cmp
fcomp
setno
cmc
xchg
mov
mov
lock
and
mov
daa
cmp
es
push
jnp
pop
das
leave
rcr
xchg
adc
push
push
xchg
push
jmp
sub
ss
ds
shl
mov
sub
dec
xor
loop
mov
xchg
(bad)
fst
xor
inc
sub
mov
loop
dec
and
call
hlt
xchg
mov
clc
inc
xchg
movs
push
inc
inc
cmp
mov
out
arpl
cld
xor
ror
jg
xchg
call
xchg
inc
lods
mov
mov
shr
xchg
cli
mov
pop
in
repnz
fstp
imul
mov
fprem
dec
pop
cmp
std
sub
movs
push
mov
iret
(bad)
mov
ret
sbb
cdq
xor
leave
xchg
mov
cmps
ja
and
in
pop
hlt
shl
jmp
imul
(bad)
jge
scas
je
retf
mov
xchg
movs
fcomip
push
arpl
mov
pop
or
mov
pop
xchg
dec
xchg
xchg
sbb
mov
out
cmp
pop
and
arpl
ret
inc
adc
sahf
mov
push
mov
push
fdiv
pop
mov
sahf
jge
lea
imul
xchg
cmp
push
lock
js
xchg
xchg
mov
bound
mov
fwait
not
sub
jmp
xchg
adc
jne
push
cmp
repz
das
pop
aad
sbb
pop
gs
retf
fiadd
outs
xchg
das
mov
jno
dec
cmps
xchg
pop
push
loope
mov
leave
dec
sar
jmp
mov
mul
retf
and
fimul
adc
sbb
inc
sub
sub
adc
fucomip
cmp
mov
jne
mov
inc
or
retf
mov
movs
in
pop
call
int3
and
pop
lds
xor
jno
cmp
ss
lods
jbe
dec
ret
jae
jge
sbb
xor
sbb
or
rcl
push
mov
repnz
lahf
push
(bad)
xor
push
jae
push
lds
xchg
cdq
test
or
or
jo
(bad)
outs
xchg
or
loop
rcr
ret
or
js
sahf
mov
add
mov
test
out
inc
push
int
mov
add
rol
jae
jl
mov
lea
leave
(bad)
jle
mov
adc
jp
das
cmp
and
pop
xchg
jecxz
mov
fadd
and
dec
dec
xchg
rol
or
cmp
test
fnstsw
out
int
out
bnd
xor
mov
shr
inc
pop
aad
mov
(bad)
test
call
mov
lds
cmp
bound
sbb
outs
add
jno
pop
mov
cdq
jl
fmul
xchg
pop
outs
rol
mov
retf
shl
shr
icebp
jbe
sti
test
je
mov
imul
iret
ds
cmp
cmp
mov
iret
dec
inc
inc
je
mov
add
mov
jmp
sub
rcl
dec
rol
mov
jo
xchg
(bad)
into
movs
xchg
mov
and
cmp
pop
add
addr16
cli
or
pop
sbb
pop
mov
repz
aaa
imul
imul
aad
jae
js
clc
inc
xchg
outs
fimul
outs
icebp
pop
sub
pop
sbb
idiv
cdq
push
in
or
cdq
mov
shl
jmp
test
cmps
cmp
mov
sub
push
es
xchg
(bad)
mov
inc
loop
ins
sub
int3
ffree
push
loopne
lods
push
icebp
nop
xor
retf
mov
in
jbe
popa
ret
dec
sub
cld
in
or
rcr
jmp
mov
xchg
push
dec
sbb
xchg
std
jmp
cmp
cmp
dec
jp
xor
frstor
adc
pop
add
dec
sub
pop
pop
pop
(bad)
pop
sahf
rep
mov
div
mov
or
nop
ret
add
cmp
or
push
fcmovnb
int
cmp
mov
jo
fst
sbb
retf
daa
pop
fsubp
jecxz
cmp
dec
gs
(bad)
sbb
inc
ret
jbe
mov
in
popf
lock
sub
shl
fld
xor
pop
shr
xchg
xor
or
retf
rol
std
or
dec
out
dec
jne
ret
inc
repz
(bad)
jp
(bad)
aaa
outs
mov
pop
cmps
pop
cs
sbb
sbb
xchg
aam
cmp
inc
sbb
sbb
mov
ins
mov
dec
popa
mov
arpl
xchg
pop
sbb
sub
int
cdq
fadd
pop
ja
ss
xor
ror
pop
nop
inc
pop
adc
pop
loop
movs
cli
in
fistp
aaa
inc
cld
aas
movs
aaa
int3
xchg
lods
fnsave
pop
mov
inc
es
fist
retf
pop
push
iret
pushw
inc
aaa
sbb
and
ja
xor
mov
in
push
test
mov
pop
cmp
mov
out
shl
cmp
es
ins
adc
inc
jne
js
pop
cwde
das
jnp
add
pushf
cmp
test
mov
jne
push
fcom
pop
xor
jmp
movs
int3
cli
cmp
add
repnz
aas
cwde
dec
pop
push
in
dec
ret
sahf
adc
mov
xor
sbb
(bad)
loopne
cmp
aas
xchg
add
js
cmps
cmc
sbb
sub
addr16
sar
jmp
lahf
cmp
cmp
dec
out
and
dec
cmp
pop
sub
mov
jmp
movs
imul
mov
enter
shr
fwait
sti
pop
pop
in
repnz
xchg
daa
movs
mov
sbb
xor
in
retf
ficom
in
mov
sti
and
and
jmp
lods
ins
out
add
sub
fs
and
push
xor
ror
xchg
sub
(bad)
mov
pop
push
daa
pop
adc
xchg
adc
sbb
imul
cmp
pop
push
jne
sahf
push
sbb
inc
dec
ss
mov
jp
or
xor
je
and
mov
dec
cmp
push
mov
push
rol
test
and
(bad)
shr
push
cmp
mov
pop
xor
and
or
or
and
shl
mov
js
mov
xchg
dec
imul
add
(bad)
sub
cmc
cmps
cmps
aad
inc
mov
les
hlt
outs
repnz
cmc
cmc
xor
jmp
push
in
add
cdq
pop
daa
js
ss
push
mov
daa
xor
mov
and
xchg
dec
mov
xor
pop
mov
pop
or
aaa
rcl
fiadd
test
mov
xor
push
aas
push
cmp
jmp
pop
pop
push
cs
jmp
mov
lock
cmp
xor
xor
xlat
sub
cmp
inc
pop
mov
mov
mov
cld
cmp
cmp
inc
pop
fsqrt
aas
loope
pop
adc
in
adc
push
mov
mov
mov
xor
mov
neg
dec
or
jg
and
inc
inc
push
sahf
leave
or
adc
(bad)
fisub
mov
fst
jbe
adc
(bad)
cwde
cmps
or
bound
push
jb
xchg
aam
jge
mov
jae
jmp
jmp
push
or
add
clc
loope
pop
fiadd
dec
mov
add
rcl
pop
dec
xor
das
test
push
push
ficomp
fmul
xchg
push
push
aad
das
xchg
outs
pushw
mul
fwait
je
or
xchg
or
jle
jb
jp
mov
sbb
pop
push
xchg
aaa
and
mov
adc
mov
lea
push
pop
out
inc
mov
pusha
adc
fiadd
adc
das
mov
cmp
cwde
xchg
xor
mov
cmps
repnz
dec
pop
xlat
add
dec
push
sbb
test
mov
mov
fisub
adc
cdq
cld
jb
push
icebp
int3
cmc
leave
pop
inc
out
ficomp
stos
in
mov
ins
shl
stos
mov
cmp
cli
dec
repz
inc
dec
lock
mov
gs
push
jp
push
mov
mov
mov
sub
ret
ret
lea
enter
dec
pusha
out
(bad)
jmp
inc
adc
loop
cmp
inc
shl
fidivr
fwait
dec
icebp
std
outs
fsubr
rcl
mov
adc
and
and
jg
inc
(bad)
cmp
hlt
test
test
and
xor
dec
or
sbb
adc
imul
cmp
ss
and
mov
lds
jg
mov
lods
sbb
dec
into
sub
pop
repz
test
xchg
sub
mov
mov
jmp
in
out
push
rol
mov
xor
leave
xor
pop
add
xchg
in
mov
jbe
(bad)
push
mov
out
sub
or
push
dec
ffreep
and
test
scas
popa
int
inc
retf
rcl
or
and
icebp
and
push
hlt
ja
mov
sub
sbb
fwait
fwait
xchg
enter
lea
mov
jg
jmp
mov
adc
pop
dec
in
and
pop
mov
adc
lods
enter
das
loope
ret
inc
rol
sbb
test
fs
adc
arpl
mov
sub
xchg
mov
ins
add
xor
jecxz
pop
xchg
push
cmp
inc
and
imul
movs
mov
les
stc
xor
xor
xchg
mov
mov
cmp
xlat
sbb
or
scas
scas
and
add
and
fidivr
sti
dec
call
jle
push
xor
jmp
lea
xor
push
fcmovnbe
add
adc
mov
pushf
shl
push
gs
aad
ss
xchg
in
push
stos
int3
pop
dec
mov
or
jge
movs
jmp
test
sbb
aad
jp
xor
lahf
sub
imul
stos
call
jge
pusha
stos
add
fs
push
mov
leave
mov
mov
push
nop
scas
push
mov
dec
daa
dec
inc
inc
out
mov
aad
cmp
pop
mov
(bad)
dec
test
push
(bad)
in
ja
lods
clc
fwait
add
stos
xchg
sbb
mov
lock
out
pop
lods
jo
arpl
nop
lds
outs
test
xor
rcr
shl
in
daa
into
pop
pusha
stos
and
xchg
jo
fcmovu
adc
out
xchg
aaa
push
ror
or
inc
lea
jnp
lods
or
(bad)
jg
movs
ficomp
jmp
mov
sti
mov
inc
push
mov
call
(bad)
outs
pusha
cs
(bad)
call
sbb
mov
jae
in
rol
jmp
xchg
repz
push
xchg
out
cmc
fs
pop
push
aad
fdivr
pop
mov
es
loop
push
movs
sub
dec
stc
mov
sar
mov
cmp
jmp
mov
xor
jno
adc
shr
outs
pop
ins
xchg
xchg
lea
fs
(bad)
mov
call
push
jne
inc
leave
jne
push
and
pop
outs
enter
lods
mov
std
jp
jae
popf
js
imul
repz
mov
movs
cwde
fdivr
xchg
out
xor
mov
jb
(bad)
lods
call
mov
adc
shl
lods
fcomip
push
imul
loopne
ins
inc
push
fsubr
cmp
push
xchg
into
cld
clc
mov
scas
aaa
(bad)
jo
lods
inc
sub
dec
std
out
bound
fild
call
cld
jmp
test
cmp
out
int3
mov
imul
std
jmp
lods
xor
or
call
out
mov
mov
sub
fstp
or
jne
and
lods
push
in
sub
rcr
hlt
aam
mov
mov
outs
xlat
xor
push
scas
mov
shl
adc
in
test
mov
xchg
movs
mov
out
inc
movs
movs
adc
jl
and
sub
dec
into
(bad)
rol
push
test
lock
or
fdiv
adc
and
jle
ds
pop
push
xchg
fsubr
jo
inc
cs
cmp
getsec
pop
pop
jae
stos
icebp
jp
mov
inc
aaa
pusha
dec
in
pop
loop
inc
enter
sahf
movs
bound
pushf
loope
adc
sbb
(bad)
pop
dec
(bad)
mov
mov
xor
xlat
and
sbb
xchg
mov
shr
mov
shl
jne
retf
jb
cdq
neg
call
cmp
scas
cmp
or
sub
arpl
xchg
aas
dec
sbb
jg
repz
push
stc
lock
jmp
and
idiv
outs
xchg
ins
push
cwde
fs
inc
outs
inc
lods
dec
add
cmp
cmovbe
inc
loope
sub
std
in
push
cmp
fmul
push
or
jecxz
cmp
shl
dec
gs
dec
dec
inc
aas
add
in
and
pop
dec
mov
das
sti
inc
mov
movs
icebp
cld
sbb
loopne
call
aaa
neg
add
jecxz
ret
dec
cmc
lods
jmp
jp
popa
inc
clc
pop
mov
xchg
sbb
arpl
jmp
jbe
pop
sub
mov
jl
mov
and
pop
push
sub
dec
popa
ins
shl
push
repnz
push
xor
mov
mov
test
dec
push
jno
pop
fild
mov
aam
pop
ins
iret
xor
lods
jl
jp
xor
scas
inc
pushf
imul
(bad)
push
jge
pop
mov
mov
mov
sbb
sar
add
xchg
rcl
call
les
cmps
jo
and
cmp
add
sub
stos
retf
push
retf
imul
out
sub
push
inc
sub
xor
test
pop
cmp
repnz
hlt
adc
cmp
xor
mov
push
sbb
lods
dec
rol
scas
xchg
and
sub
adc
aam
or
cmp
ret
mov
push
addr16
(bad)
fbstp
sbb
test
pop
ins
jnp
pop
inc
movs
mov
sbb
pushf
sahf
mov
lods
inc
jmp
sub
xchg
sub
or
mov
dec
sub
std
inc
mov
pop
inc
ds
mov
sbb
mov
ds
int
inc
push
fs
dec
dec
dec
pusha
popa
and
add
xchg
out
pop
lahf
xor
push
sti
push
arpl
push
cmps
call
mov
or
jbe
sub
add
sti
pop
xchg
jecxz
retf
je
push
mov
jne
and
mov
xchg
add
or
(bad)
ins
popa
out
mov
and
xlat
(bad)
jmp
addr16
sub
sbb
mov
gs
jp
mov
les
inc
inc
cld
sub
jmp
ret
add
jno
jmp
out
icebp
lock
push
shl
into
pop
inc
push
xor
retf
lods
popa
(bad)
fmul
mov
fldcw
movs
mov
fisttp
mov
rcl
add
jne
mov
jb
das
js
jae
retf
psadbw
(bad)
iret
loopne
addr16
repz
fisttp
ins
pop
mov
scas
clc
ins
push
jnp
push
test
and
inc
and
mov
cmp
add
daa
pop
std
mov
in
mov
loope
sbb
stos
jge
mov
push
sbb
ss
push
aam
aas
add
cwde
js
cld
xor
inc
in
push
lods
jae
mov
sbb
inc
mov
sub
lock
outs
mov
jo
lea
in
pop
xchg
mov
or
jne
outs
jle
jmp
sub
jae
push
je
mov
pop
cmp
jge
push
aaa
or
dec
es
scas
jmp
inc
(bad)
pop
les
xor
rcr
ss
inc
push
loop
int3
pop
sub
xchg
dec
inc
mov
test
fisttp
mov
mov
data16
inc
ins
arpl
jae
mov
shl
prefetcht0
fcmovne
jmp
and
push
dec
xchg
jl
icebp
sbb
std
inc
add
outs
sbb
xor
jp
in
or
sbb
sub
mov
and
push
bound
cmp
jmp
out
icebp
sbb
je
adc
inc
xlat
add
push
pushf
ins
jg
stos
dec
movs
dec
or
add
popa
push
test
aas
leave
cmp
pusha
fnsave
je
fnstsw
movs
cmp
mov
dec
push
inc
(bad)
pop
fsub
mov
movs
push
xor
push
shl
sbb
adc
fwait
cld
xchg
add
and
in
test
out
lods
mov
and
sbb
adc
jmp
cmps
stos
inc
mov
or
add
jb
lods
ret
ret
fcmovbe
je
ds
sbb
sub
mov
in
dec
call
pop
loop
mov
sbb
adc
out
test
mov
xchg
movs
repnz
dec
mov
jle
sbb
xlat
aaa
and
ins
inc
and
mov
sub
add
jns
retf
retf
(bad)
js
xchg
call
xchg
ins
scas
push
fdiv
mov
sub
js
or
add
inc
push
popf
movs
push
mov
lahf
(bad)
neg
popa
mov
cmp
ror
sbb
jle
mov
dec
or
jg
mov
add
inc
cdq
add
dec
ins
es
mov
adc
mov
cmp
xchg
cdq
gs
out
cmp
daa
jae
sbb
xor
mov
add
mov
add
je
xchg
dec
hlt
or
scas
jp
out
mov
lahf
mov
jg
out
shl
push
mov
jmp
fistp
rol
mov
imul
and
nop
outs
retf
xchg
adc
scas
lock
mov
cmp
add
sub
test
jnp
js
enter
movs
retf
scas
scas
iret
xchg
movs
aaa
int3
adc
retf
push
sub
push
jle
nop
data16
mov
ret
leave
rol
outs
loop
in
test
jmp
ja
mov
sahf
adc
addr16
aad
call
or
ja
push
mov
retf
ins
fimul
jnp
sbb
sub
lods
gs
push
out
adc
cmc
xlat
mov
or
scas
icebp
enter
add
mov
into
mov
pop
and
cmps
push
xor
xlat
repnz
sub
test
mov
push
dec
or
xchg
dec
aas
in
repnz
mov
add
scas
push
pop
mov
xchg
sti
and
jbe
dec
jmp
pop
and
sti
stc
lods
inc
stos
mov
stos
cdq
cmps
mov
retf
push
or
and
mov
stos
and
inc
div
mov
sbb
ds
or
pusha
pop
cmp
mov
ret
mov
jbe
pushf
popf
push
call
inc
pop
xchg
int3
xchg
pop
mov
cmps
outs
push
sbb
jge
pop
cmp
sti
in
mov
jmp
daa
xor
push
and
pop
or
push
test
xchg
mov
shr
je
rcr
cs
aad
loop
loop
icebp
es
mov
les
sub
ss
jo
daa
jne
mov
or
clc
xor
xchg
jnp
loop
mov
mov
push
jns
mov
into
dec
out
pop
cs
les
jmp
fs
sub
fild
sub
sti
fdivr
sti
adc
mov
mov
xor
adc
or
ret
or
shr
sbb
cmc
pop
inc
push
sbb
jmp
sub
test
test
push
sub
outs
in
test
sub
loop
push
mov
jle
aad
pop
push
ds
add
mov
mov
lahf
sbb
(bad)
stc
nop
mov
jbe
std
mov
aad
in
inc
pop
fiadd
test
inc
adc
mov
xchg
mov
stos
aas
sar
mov
dec
cmp
and
(bad)
hlt
mov
stos
mov
dec
jns
test
sti
ret
and
sub
sub
or
adc
scas
imul
jnp
outs
shl
fistp
sbb
mov
pop
or
inc
aam
mov
fsubr
fwait
ret
std
xchg
(bad)
clc
pop
mov
jo
dec
movs
add
fidivr
mov
mov
inc
push
push
add
sbb
mov
ret
lods
jne
xor
xor
push
retf
push
lea
add
mov
icebp
lods
xlat
jne
mov
int
movs
fstp
push
ins
mov
dec
int
leave
mov
outs
xchg
or
mov
mov
push
xor
and
aas
and
xchg
inc
add
scas
scas
mov
scas
or
fisttp
pushf
xchg
mov
jo
adc
aaa
jno
jecxz
fild
gs
jbe
out
inc
retf
cmps
arpl
aam
push
pop
sbb
stos
jo
mov
cmc
add
jl
pop
les
enter
and
pop
in
jp
sbb
cmps
adc
push
inc
mov
or
push
xor
inc
add
aaa
push
stos
lds
repnz
jp
adc
push
hlt
and
fist
push
dec
nop
shl
push
cwde
or
jb
loopne
push
pushf
mov
push
retf
add
push
outs
xchg
(bad)
fwait
loopne
and
cmp
xor
repnz
rcl
inc
sbb
pop
int
retf
xchg
aas
int3
and
stos
cmp
mov
cld
xor
push
sub
ins
cmps
aam
cmp
int
in
int
fiadd
sub
test
es
dec
scas
jp
adc
fnsave
loop
stc
out
repz
movs
dec
xchg
xor
add
xor
clc
arpl
arpl
out
pop
test
mov
dec
xchg
adc
out
popf
sbb
test
mov
aad
stos
push
repnz
ret
jmp
cli
retf
pop
mov
jb
mov
pusha
push
add
fistp
jno
test
xchg
popf
stos
xor
aad
jae
movs
jnp
jmp
mov
iret
push
out
aas
std
fdivp
and
xchg
lahf
and
add
push
sbb
int3
dec
cmp
dec
push
cmp
js
mov
xchg
jae
inc
jns
jle
cmc
or
pop
sbb
cdq
popf
jnp
mov
dec
cli
int3
in
fldcw
cmp
push
adc
cs
hlt
sahf
pop
jl
adc
ds
jl
cli
sbb
ffreep
dec
inc
jg
lahf
ss
dec
add
lock
fwait
addr16
loope
push
(bad)
push
call
add
jecxz
shl
div
ins
push
pop
gs
adc
sti
jo
push
pop
and
mov
bnd
(bad)
push
sub
add
jo
clc
xchg
mov
repnz
out
inc
ds
cs
and
xchg
fwait
loop
cmp
and
xchg
loopne
popa
inc
fs
and
jns
jge
mov
mov
push
repz
push
pop
and
add
and
leave
bound
mov
pop
jp
xor
or
push
clc
lods
mov
xchg
xor
xchg
fidivr
hlt
sbb
pop
in
dec
rol
out
and
inc
pop
(bad)
and
retf
cmp
or
lds
icebp
xor
jmp
xor
out
mov
dec
loope
lea
(bad)
and
outs
xor
ffreep
mov
sbb
or
mov
push
xchg
jno
dec
daa
cld
fs
pusha
int
dec
and
push
lods
sar
sub
fsubr
pop
mov
jnp
imul
inc
scas
xchg
xor
push
mul
push
aas
vpshaw
pop
dec
jno
out
push
sahf
mov
fstp
ins
js
ret
xor
inc
mov
jnp
cmp
fcmovb
add
test
xlat
inc
sub
sub
jae
jge
push
lods
lods
cmp
outs
jae
or
leave
shl
xchg
fist
dec
jo
shl
daa
test
mov
hlt
mov
mov
out
pop
xchg
push
push
and
data16
sbb
pop
sub
pop
scas
lods
sub
lock
mov
(bad)
jo
sti
inc
lods
ja
movs
mov
or
stos
test
ds
and
cld
data16
nop
(bad)
imul
ins
mov
jecxz
inc
lods
in
mov
dec
jbe
std
(bad)
into
sbb
enter
pop
movs
jmp
dec
mov
lods
ins
lea
aas
cmp
sbb
shl
int
or
xor
xchg
fmulp
lods
lea
xor
ret
in
div
loop
mov
mov
jmp
retf
mov
inc
pop
das
shl
addr16
xor
or
ret
push
js
sbb
lods
xor
lods
loopne
outs
popa
add
lock
jns
js
loope
aad
ret
scas
lods
sub
js
push
or
ret
mov
fstp
push
addr16
jmp
and
das
mov
out
mov
sahf
inc
ret
or
outs
int3
cld
jbe
arpl
mov
mov
inc
cmc
test
push
shl
loope
out
ret
adc
xchg
adc
and
or
push
mov
mov
pop
int3
pop
or
mov
pop
push
fist
adc
shl
pop
sub
cmc
scas
inc
dec
(bad)
mov
cmp
je
shr
dec
pop
cmp
xchg
(bad)
xor
test
test
fucom
movs
xor
popa
inc
xor
mov
sbb
cmps
cld
cdq
adc
pop
xor
jmp
lock
es
sub
jecxz
stc
gs
and
push
or
push
(bad)
loop
pushf
loope
hlt
mov
or
add
sbb
dec
jge
cmp
in
mov
inc
add
and
retf
mov
push
aas
fmul
imul
mov
(bad)
in
fdivr
jecxz
add
adc
test
mov
jle
inc
int
rol
icebp
(bad)
hlt
sbb
push
popa
push
stos
inc
add
fwait
js
je
sbb
dec
sub
and
in
push
and
mov
bound
cmps
add
test
ja
mov
mov
fmul
mov
push
pop
mov
leave
fisub
shl
out
(bad)
(bad)
adc
inc
cmps
retf
loopne
pop
mov
mov
js
outs
push
inc
sbb
sahf
xchg
cwde
ss
mov
push
xchg
test
sbb
or
cmp
mov
jne
aaa
sbb
sbb
cmp
icebp
inc
popf
push
pmaxub
call
ins
pop
jle
test
or
push
retf
aaa
ror
and
inc
pop
xchg
mov
xchg
mov
icebp
idiv
int3
xchg
js
cmp
adc
gs
hlt
mov
les
(bad)
bnd
les
ins
cmps
mov
test
mov
xor
inc
ins
dec
rcl
lods
mov
sbb
cdq
out
mov
mov
cli
xor
or
sbb
jle
pop
out
sti
call
add
sti
loope
rcr
push
out
dec
ds
push
fcom
dec
lds
fcmovnu
mov
xchg
sub
inc
and
mov
inc
sub
push
push
outs
push
xor
or
fst
ficom
jb
add
mov
sub
dec
and
mov
sbb
cwde
imul
push
dec
inc
inc
push
in
pop
push
mov
out
push
adc
jne
rol
test
pop
cmps
inc
(bad)
popf
aaa
and
dec
xchg
xchg
adc
ret
and
xchg
mov
sti
cmp
sub
pop
inc
pop
add
sbb
call
inc
mov
sar
pop
cmp
dec
imul
xchg
xchg
mov
rol
mov
(bad)
inc
or
stos
pop
mov
xor
loopne
push
fwait
loopne
loop
sahf
cmps
stc
pop
jg
xor
jmp
and
cmc
jae
dec
and
aam
mov
sbb
lods
dec
push
test
sbb
add
xchg
add
sbb
mov
mov
imul
cdq
push
dec
push
leave
(bad)
mov
or
cmp
cmps
loop
jg
jae
adc
(bad)
push
icebp
inc
cmp
mov
xor
lds
pop
icebp
push
ret
dec
aas
repz
mov
mov
push
sahf
push
cmp
(bad)
jmp
les
aam
xor
xchg
fwait
jae
cmp
icebp
pop
in
mov
push
lea
jb
bound
rol
pop
mov
jge
in
movs
cmps
pop
rcl
mov
call
xchg
into
jno
sub
repnz
aam
xlat
cmps
push
add
inc
xchg
ror
dec
inc
inc
call
mov
pushf
pop
xor
sub
in
ins
push
dec
sar
xchg
inc
leave
aad
sbb
aas
or
cmp
movs
jb
lds
std
mov
or
push
(bad)
cmp
push
imul
xchg
lods
rol
push
or
mov
test
outs
cdq
fwait
rcl
out
daa
pop
push
jo
(bad)
imul
mov
lds
not
leave
cmc
mov
clc
add
adc
out
dec
aad
mov
cld
sahf
outs
icebp
cmp
jbe
sub
mov
xor
enter
adc
jo
dec
cmps
adc
inc
jp
lahf
mov
inc
push
and
pop
adc
daa
nop
mov
push
sub
cs
or
out
xchg
mov
push
sbb
pushf
rcr
mov
add
or
sbb
clc
popa
fist
mov
ja
ds
dec
mov
mov
xor
sbb
iret
cwde
or
jecxz
into
mov
dec
push
pop
mov
test
sub
push
push
sbb
inc
adc
inc
std
xor
shl
pop
inc
cmp
inc
(bad)
xchg
sbb
mov
sbb
cmp
xor
pop
cmp
and
clc
rcr
retf
pusha
pop
mov
sub
mov
and
test
pop
sbb
dec
out
je
add
push
imul
daa
inc
ins
dec
push
xlat
mov
cmp
ret
add
add
cli
div
and
mov
mov
mov
iret
xor
or
and
cmc
dec
test
sub
aad
pop
outs
jo
xor
xor
test
mul
add
dec
jns
push
call
daa
mov
jne
pop
inc
fiadd
or
jmp
push
push
fwait
je
cli
ins
pop
xchg
or
int3
scas
push
retf
arpl
inc
push
xchg
xor
popf
xchg
popa
unpcklps
out
sub
dec
push
mov
cli
inc
sub
ret
mov
sub
and
mov
xchg
inc
mov
jg
push
add
add
cmp
shl
xchg
and
aad
data16
and
mov
mov
cwde
pop
jo
mov
pop
int
lods
pop
inc
mov
aaa
xor
inc
inc
push
loope
xchg
add
inc
dec
or
push
add
or
sub
and
movs
jmp
mov
pop
inc
fstp
jne
popf
lods
adc
mov
push
dec
loope
mov
pop
add
mov
push
pop
mov
stos
in
adc
push
add
mov
ds
inc
dec
shl
bound
popf
jp
mov
mov
mov
aad
das
repz
mov
and
and
jle
xor
or
pop
repz
scas
sbb
daa
daa
cmc
mov
test
les
movs
outs
int3
ins
cmp
inc
jge
scas
or
in
xlat
cmp
mov
adc
lds
gs
jmp
xchg
ins
cmps
pop
jp
daa
adc
mov
lods
add
or
rcl
push
lods
sbb
int3
sbb
in
pop
adc
lea
dec
mov
inc
sbb
sbb
mov
and
adc
out
add
jno
mov
mov
sti
outs
mov
cmp
and
daa
outs
mov
push
aas
xchg
test
sbb
arpl
jne
sub
mov
xor
mov
jbe
test
cmp
ficom
xor
and
xor
ror
sti
mov
push
xor
and
fmul
hlt
fadd
outs
aas
push
(bad)
cmps
sar
pop
ja
test
adc
idiv
repz
fwait
loope
das
pop
cli
cmp
inc
xor
rep
pop
pushf
or
lahf
jb
dec
into
aaa
add
mov
(bad)
xchg
neg
cmp
or
mov
pop
sbb
adc
pop
test
adc
lds
scas
ja
cwde
pop
mov
cvtpi2ps
test
adc
mov
fcom
jl
stos
inc
retf
rcr
or
loopne
xor
sbb
fidiv
or
and
cs
ins
dec
pop
int
(bad)
(bad)
leave
(bad)
push
scas
lea
xchg
cmp
jl
jl
mov
add
xchg
add
retf
add
cmp
retf
mov
iret
pop
(bad)
hlt
(bad)
popf
repz
adc
mov
add
mov
dec
in
jb
sti
pop
mov
(bad)
xchg
pop
sub
mov
outs
xor
push
sub
cmc
inc
adc
jmp
mov
lods
add
or
iret
(bad)
and
pusha
mov
cmp
xor
push
nop
rol
loop
pop
add
mov
xor
mov
jae
jbe
cmp
inc
mov
aam
inc
loope
lea
jle
xor
(bad)
fwait
jmp
adc
mov
fcomp
push
ror
adc
add
rcl
sbb
cmps
sub
and
xchg
jle
adc
aam
add
xor
mov
dec
or
cmp
dec
push
and
jns
xchg
int
call
adc
xchg
out
cmp
in
fiadd
lea
int
dec
aam
mov
lock
adc
jmp
xor
and
fsubr
loop
int3
mul
jnp
adc
std
cwde
jmp
jnp
push
xor
cmps
mov
mul
enter
std
jb
mov
(bad)
enter
shl
out
inc
sub
pop
push
arpl
add
lahf
test
test
adc
lods
xor
sub
stos
shr
nop
xchg
add
mov
xor
mov
cld
sub
test
cmp
xor
fmul
cwde
inc
pop
sub
pop
es
or
mov
lds
and
int
jnp
xchg
inc
inc
inc
mov
icebp
dec
add
popf
dec
mov
jns
jecxz
into
stos
jae
scas
fist
fcmovu
out
inc
imul
sahf
retf
mov
push
pop
push
mov
sahf
out
das
or
inc
dec
xor
call
outs
inc
ins
int3
mov
add
jecxz
fnstsw
fnstenv
jecxz
dec
add
xchg
pop
jmp
adc
add
add
ret
xor
js
mov
(bad)
inc
ins
pop
mov
popf
fcomp
jle
mov
sub
jns
dec
mov
sub
xchg
cmp
ds
fsub
out
sub
pop
jne
mov
shl
pop
or
inc
movs
jge
popf
fidiv
xor
scas
and
popf
push
sbb
mov
je
push
sub
sbb
inc
push
popa
data16
jne
outs
adc
jmp
pop
in
pop
pop
leave
cli
add
cmc
mov
popa
fbld
movs
or
mov
shl
cmp
(bad)
xor
pop
sete
sbb
and
jb
and
ret
(bad)
aam
push
jo
repnz
retf
das
push
sti
xchg
(bad)
loop
xor
std
iret
dec
loopne
inc
dec
daa
jl
in
cmp
lds
push
enter
or
in
adc
(bad)
(bad)
pop
sahf
dec
cmp
inc
cmps
popf
mov
pop
ja
out
dec
test
lea
inc
mul
sub
mov
div
int3
and
sub
jmp
rcl
js
xchg
ficom
dec
pop
stos
cdq
push
inc
mov
jl
mov
push
mov
jge
shl
repnz
mov
inc
pop
lea
cld
xchg
mov
mov
push
or
or
adc
test
mov
pop
mov
or
lea
(bad)
leave
movs
and
jne
sub
loopne
rol
or
sub
jmp
mov
rcl
mov
push
and
movs
inc
lods
fidivr
rep
call
cwde
sub
push
call
fld
add
(bad)
xchg
call
adc
in
mov
jnp
cdq
pop
push
mov
cmp
gs
mov
shr
adc
mov
dec
(bad)
dec
pop
mov
mov
pop
jl
lea
and
stos
sub
xchg
push
push
xor
sbb
(bad)
sub
aam
dec
outs
mov
enter
lock
sbb
mov
jl
ins
add
pop
mov
gs
pop
lock
sbb
xor
and
jecxz
inc
js
pop
or
neg
aad
xor
mov
push
mov
js
sub
retf
fsub
out
sbb
lock
int3
and
aad
mov
mov
add
push
xor
push
jmp
xchg
push
sti
inc
xchg
inc
js
int
dec
mov
es
mov
jle
stos
clc
mov
js
dec
pop
dec
lds
push
push
rep
mov
mov
mov
mov
push
sahf
pop
mov
stos
dec
(bad)
push
pop
scas
outs
sub
mov
pop
sub
test
dec
jecxz
or
pushf
xor
lods
fdiv
cs
imul
sbb
jg
dec
frstor
sbb
iret
shr
inc
sbb
sub
xchg
jnp
repnz
mov
pop
pop
hlt
ins
mov
or
add
jge
cmc
mov
in
retf
sar
xchg
sub
add
sahf
sub
jmp
or
scas
or
into
inc
sub
sbb
jne
fnsave
mov
inc
jae
movs
jle
dec
lea
push
jne
stos
sti
inc
push
ins
ror
retf
jge
and
xchg
dec
popf
lea
sbb
pop
jmp
jp
clc
aad
cmp
and
adc
inc
stos
jne
fnstenv
push
outs
shl
gs
jb
cmc
neg
xor
adc
test
(bad)
popa
pop
sub
dec
jecxz
fmul
or
or
add
es
int
pop
mov
cvtpi2ps
jmp
jecxz
clc
jmp
jl
lahf
jle
pop
mov
arpl
popa
loopne
jns
add
cmp
(bad)
ins
loop
or
fsubr
es
popa
loope
sbb
out
cld
test
and
push
jp
clc
(bad)
mov
div
sbb
std
inc
fldz
fdivr
mov
inc
or
or
jo
sub
call
fimul
push
fs
sub
movs
push
ins
les
jp
dec
cdq
test
cwde
xor
adc
cmp
scas
mov
sub
aas
sbb
loope
push
sub
sub
stos
pop
xchg
mov
mov
dec
test
cdq
sbb
mov
test
adc
add
jo
add
ds
or
and
inc
clc
int
xchg
push
hlt
push
jg
pop
fs
fnstcw
popf
or
loopne
and
jle
or
mov
lea
jae
cmp
sbb
aad
xchg
scas
imul
pop
retf
or
and
pushf
jae
mov
dec
fld
(bad)
shl
arpl
in
lods
out
sub
ret
fst
pop
or
xor
add
inc
dec
push
push
mov
dec
sbb
icebp
jmp
in
ret
sbb
iret
pop
mov
sti
xor
inc
or
jb
add
adc
shr
mov
test
aaa
xor
mov
inc
in
in
repz
ss
out
jg
push
mov
fstp
and
push
jbe
xor
jbe
dec
xor
jecxz
mov
test
pushf
xchg
xor
dec
inc
inc
repnz
cs
inc
fild
popf
int
or
stos
mov
ret
ds
mov
in
repnz
sbb
or
push
fdivr
mov
or
and
ret
cdq
fmul
fild
retf
movs
adc
xor
jecxz
lea
xor
cdq
push
ffreep
jl
jb
std
push
cmp
jnp
shl
dec
xchg
rcr
mov
xor
fcmovnu
mov
cld
sub
fbstp
jnp
cmp
jmp
in
inc
or
mov
cdq
rcl
pop
jne
cmps
jnp
pop
cmc
jno
pop
stos
push
fnstsw
and
(bad)
gs
aam
or
inc
in
rol
push
in
jae
lock
cmps
lock
fst
xchg
mov
test
or
cdq
cmp
iret
adc
je
arpl
or
(bad)
fs
into
aas
mov
xchg
aam
(bad)
and
sub
scas
jns
aaa
inc
inc
loop
sahf
mov
aas
jge
and
push
jge
movs
or
xchg
mov
and
pop
sbb
in
adc
retf
push
mov
add
stos
pop
adc
icebp
mov
xor
dec
add
mov
xlat
(bad)
xchg
jecxz
pop
in
mov
scas
cmp
adc
adc
movs
pop
shl
iret
enter
dec
lock
add
xlat
cmps
(bad)
cmp
gs
jl
leave
inc
ins
and
(bad)
jmp
neg
sub
fwait
sub
push
or
cmp
fxch
cmp
cmp
dec
inc
sahf
mov
ins
dec
sub
add
lods
xchg
lock
js
sbb
xor
xchg
ret
in
and
or
hlt
push
test
and
mov
fcomip
mov
sub
scas
(bad)
addr16
cmps
das
fs
jmp
aaa
stos
test
dec
xchg
mov
je
daa
xor
and
int3
xchg
sbb
rcl
and
xchg
sub
or
aam
fnsave
or
inc
imul
and
cmp
fbstp
dec
repnz
xor
jp
in
in
in
clc
lock
dec
shl
sbb
pop
retf
cmps
daa
shl
clc
imul
shl
out
cmc
dec
mov
lods
repnz
or
or
add
cmp
(bad)
les
inc
daa
and
push
jle
popf
or
cmc
int
mov
sbb
sbb
xor
bound
push
mov
cmps
mov
add
xchg
or
mov
call
movs
cmp
xor
xchg
jge
not
leave
retf
or
leave
mov
and
in
cmp
add
ret
xchg
je
ret
cdq
sahf
out
and
out
loopne
jl
add
jge
test
sbb
mov
test
push
dec
cmps
add
les
jge
nop
les
mov
call
sub
pop
shr
and
movs
stc
fbld
retf
mov
imul
pop
and
imul
sar
cmps
imul
push
dec
inc
mov
or
jb
jae
scas
shr
or
sub
dec
aam
jle
cli
jecxz
pop
push
sub
add
mov
adc
aam
or
add
lods
adc
xchg
inc
(bad)
lods
cld
hlt
gs
sub
jle
in
inc
mov
mov
dec
aas
mov
xor
cmps
test
retf
jecxz
push
cmp
xor
mov
stos
sub
sub
bnd
dec
fisub
in
cmp
cwde
add
xor
add
popf
repz
fstp
adc
cmp
and
mov
imul
dec
inc
movs
mov
aas
sar
add
sub
jg
lahf
mov
cmps
mov
mov
pop
cmp
mov
jg
push
pushf
adc
test
pushf
scas
xchg
push
inc
fist
sub
xchg
mov
pop
adc
xchg
loopne
or
(bad)
pop
fcomp
cld
xor
(bad)
cmc
or
data16
add
repz
sub
mov
pop
sbb
mov
in
mov
xchg
xchg
mov
mov
movs
push
retf
or
fist
mov
cmp
into
movs
(bad)
sbb
and
xchg
pmovmskb
sbb
adc
jge
jns
dec
fs
push
cli
les
mov
add
fiadd
xchg
shl
mov
jp
leave
mov
fld
ds
or
rcl
sbb
cmp
pop
imul
mov
nop
jo
sub
push
push
cld
hlt
push
add
jb
and
mov
idiv
pop
retf
fistp
cld
addr16
ins
icebp
push
movs
ror
sti
repz
jae
sub
repz
outs
adc
xchg
xchg
jl
mov
(bad)
ja
jmp
(bad)
lods
mov
sbb
mov
stc
cmp
xchg
les
aas
mov
fstp
dec
movs
xchg
jb
sbb
mov
in
and
adc
stos
iret
jno
fwait
inc
cmp
sub
xlat
retf
cmc
enter
and
pop
mov
es
cld
rcl
inc
jb
mov
retf
mov
fcom
call
xchg
pop
aas
inc
ror
aaa
jle
cmp
mov
or
hlt
jno
mov
icebp
mov
in
cdq
sti
mov
and
mov
in
int
sar
cdq
js
pop
lock
nop
cld
ret
movs
ins
jecxz
mov
cmp
je
push
xchg
fwait
mov
adc
push
nop
or
repnz
in
out
xchg
mov
es
mov
mov
out
mov
cmp
rcl
fistp
sub
mov
or
es
inc
fld
in
popf
jnp
imul
mov
test
out
mov
not
into
mov
loope
movs
sbb
in
and
(bad)
in
jecxz
sub
xor
pop
int3
leave
(bad)
les
mov
mov
and
popa
pop
sub
jmp
imul
xchg
mov
inc
cli
ss
mov
mov
push
mov
fwait
or
adc
adc
sbb
repz
cmp
push
or
jl
daa
(bad)
inc
imul
in
jge
dec
out
loopne
(bad)
out
jns
out
fdivr
mov
mov
popa
fidivr
(bad)
sti
dec
dec
into
inc
shl
add
mov
ds
xchg
cld
(bad)
jecxz
inc
mov
mov
outs
pop
push
and
outs
fsub
retf
pop
movs
jno
call
data16
xor
in
sub
pop
adc
mov
cmp
repnz
pop
in
dec
inc
std
(bad)
dec
fsub
in
mov
push
int3
sar
sti
mov
push
inc
iret
xchg
jmp
push
or
mov
rol
gs
sbb
mov
inc
fucomip
push
les
mov
xlat
dec
or
push
sbb
push
mov
jno
fbstp
dec
mov
mov
mov
sub
inc
out
ret
mov
cmps
sub
dec
inc
xchg
push
test
jno
cmp
pop
repnz
sbb
push
xor
add
sbb
push
pop
mov
jb
out
fstp
sbb
mov
shr
xchg
sar
rol
into
sub
cwde
sub
retf
adc
sbb
sbb
jle
idiv
mov
xchg
imul
jno
mov
mov
xor
lods
add
xchg
das
lock
jge
sbb
fmul
inc
(bad)
imul
mov
dec
repz
and
(bad)
push
rol
sub
xchg
(bad)
rol
pop
cmp
mov
(bad)
loopne
add
fild
cwde
adc
sub
iret
push
sub
jle
jnp
cdq
call
push
dec
in
in
jb
pushf
mov
jge
rol
xlat
repz
jbe
and
sahf
call
push
nop
push
mov
fcmovbe
cmp
sbb
shr
xchg
sub
dec
jl
aaa
js
mov
or
mov
scas
push
test
loopne
and
jmp
pop
cld
data16
jmp
or
cwde
fnclex
xor
jl
test
ret
jg
popf
xchg
out
add
and
in
adc
das
mov
add
les
push
jg
mov
popf
mov
pop
xchg
pusha
dec
jne
sub
out
xchg
add
inc
jns
cmp
cmps
mov
ret
daa
jae
jmp
adc
mov
push
inc
pop
enter
int
adc
imul
test
sub
push
(bad)
pop
fs
push
adc
pusha
aam
sbb
mov
jmp
push
pop
and
add
adc
sbb
xor
popa
fs
jae
sbb
cli
inc
push
jns
jb
lods
adc
pushf
sub
mov
dec
jle
mov
pop
xlat
cmp
iret
inc
test
rcr
fcmove
push
xor
push
xor
inc
retf
out
jp
xor
iret
and
imul
adc
out
cdq
aad
iret
aam
cmp
push
gs
jnp
in
mov
pop
mov
mov
pop
mov
jl
jmp
mov
or
test
jg
cdq
pop
mov
push
or
push
adc
call
jmp
jns
sbb
mov
shl
push
in
mov
mov
sbb
inc
inc
mov
loopne
outs
cmp
mov
push
mov
test
pop
push
xchg
fs
push
mul
adc
out
lds
cmc
mov
fild
push
dec
stos
loope
dec
ret
xor
stos
xchg
push
call
(bad)
popa
int
call
sub
pusha
cdq
call
(bad)
pop
jns
mov
lods
mov
and
xor
or
aas
push
inc
inc
iret
es
add
cli
add
scas
xor
mov
stos
jmp
xor
and
inc
mov
dec
cmp
and
xchg
inc
iret
outs
or
mov
jno
pop
dec
sbb
mov
scas
mov
fchs
mov
jno
cld
dec
jmp
jp
out
rcr
shr
cmps
fld
sbb
into
movs
data16
out
mul
hlt
imul
scas
mov
fisttp
into
imul
mov
retf
mov
repnz
ficom
in
sbb
loop
or
cmps
or
clc
movs
fs
adc
adc
or
pop
fsubr
xchg
jmp
pop
sbb
pop
mov
inc
mov
pop
pavgw
aaa
inc
pop
lds
sub
aaa
jecxz
push
enter
mov
pushf
ret
xchg
test
repnz
push
outs
cmc
or
lea
inc
(bad)
les
pushf
mov
mov
mov
cmp
sub
rcl
mov
outs
dec
cdq
in
clc
neg
scas
add
bound
shl
cmc
jne
or
push
cmp
enter
dec
lods
mov
sbb
add
jae
fstp
pushf
push
movs
jo
not
or
push
mov
push
pop
cmp
loope
jno
iret
scas
jmp
mov
loope
xor
push
dec
(bad)
stos
mov
fst
ds
jne
daa
inc
push
or
push
adc
xor
neg
adc
stos
inc
cmp
jge
fild
cli
mov
dec
into
repz
inc
pop
test
jmp
cmp
aad
leave
cmp
pop
(bad)
loopne
ds
mov
neg
ds
mov
in
jge
sbb
adc
mov
sub
sub
int
ret
(bad)
aaa
(bad)
inc
inc
nop
dec
push
sub
shl
rcr
mov
mov
stos
ss
not
pusha
cmps
test
push
mov
push
aad
in
into
and
mov
cdq
(bad)
cs
outs
add
jmp
movs
pop
mov
mov
int
cdq
and
leave
push
clc
inc
adc
imul
and
and
cmps
mov
sub
imul
rcl
(bad)
or
jmp
stos
cwde
sub
cwde
jmp
sbb
sbb
mov
lea
pop
mov
test
in
call
in
pop
adc
(bad)
ss
inc
lea
mov
xchg
cli
add
mov
adc
fnstenv
gs
inc
cld
cmp
xchg
bswap
adc
test
sub
mov
icebp
pop
jae
pop
push
dec
stos
inc
jnp
sub
lods
cmps
inc
mov
adc
dec
idiv
mov
retf
or
cmps
jno
cmc
shld
(bad)
push
mul
retf
inc
repz
sub
aam
call
jg
(bad)
int3
int3
ja
pop
iret
es
mov
pop
mov
dec
cwde
fwait
sahf
fist
pop
push
clc
fsubr
xchg
test
js
pop
mov
in
popa
ret
dec
div
add
loop
mov
hlt
and
push
mov
xchg
loop
mov
neg
jne
sub
and
add
std
xor
mov
mov
sar
cdq
xchg
arpl
or
out
add
mov
cmc
inc
int3
sub
pop
test
aam
std
push
or
or
jge
shl
enter
or
add
into
mov
call
data16
pop
cmp
loope
int3
sbb
mov
dec
adc
aas
aam
xchg
dec
dec
mov
pop
push
test
iret
outs
nop
out
mov
push
shl
repnz
cli
int
sti
pop
dec
shl
ret
(bad)
retf
rol
inc
xchg
popa
les
aam
test
mov
stos
xchg
sub
ror
push
dec
xchg
les
jle
push
or
lods
and
aaa
jg
jl
call
xor
or
or
mov
xchg
cli
mov
mov
in
mov
jge
loop
mov
mov
xchg
sti
retf
in
iret
loop
jg
cwde
bound
out
pop
sar
je
outs
scas
icebp
neg
fsubr
add
jmp
push
push
outs
sub
enter
das
dec
adc
dec
ret
sbb
mov
xor
ror
popa
(bad)
jp
pop
mov
cmp
inc
cs
dec
jecxz
loop
cmp
and
mov
push
inc
xchg
push
xchg
mov
xchg
and
inc
pop
and
dec
andps
scas
loopne
test
dec
out
mov
mov
cld
in
ret
fdiv
add
loop
fadd
in
adc
dec
rcr
or
sahf
pop
sahf
ffreep
retf
adc
sbb
popa
stos
xor
adc
dec
inc
mov
ins
adc
or
jmp
loope
in
ins
(bad)
push
sub
inc
aad
mov
retf
fsubr
pop
jo
cwde
hlt
pop
cmp
rcl
and
push
rep
aad
lahf
push
fisttp
cld
inc
lds
(bad)
inc
test
in
dec
and
xor
ins
cmp
out
mov
cmps
fiadd
(bad)
cs
push
cs
les
and
data16
mov
fsub
xor
jp
add
mov
adc
sub
mov
mov
sub
movs
es
mov
sbb
push
inc
adc
mov
inc
mov
lods
pop
ja
adc
retf
retf
or
js
sub
push
mov
xchg
xor
sbb
sar
pop
sub
iret
loope
lea
dec
or
mov
cmps
je
push
push
pop
cmps
xchg
inc
fucomi
and
mov
mov
mov
jb
inc
cmp
inc
push
rcl
jo
and
sub
les
push
push
jnp
in
jno
loope
lds
jb
sub
mov
xchg
sub
iret
cmps
push
sti
in
pop
cmps
scas
ret
clc
adc
mov
add
in
pop
and
shr
dec
mov
into
je
std
ret
ret
dec
xor
stos
and
rol
frstor
adc
mov
repz
xchg
imul
cs
dec
and
mov
(bad)
int3
nop
mov
movs
(bad)
or
dec
sbb
retf
bnd
mov
xchg
out
sub
xor
push
xchg
adc
ins
int3
(bad)
mov
mov
or
push
sbb
das
rcr
in
jne
xor
rcl
xor
jp
pop
mov
cmps
movs
or
mov
jl
push
sbb
push
mov
and
cmp
cmp
mov
sti
imul
aam
add
push
dec
adc
test
mov
xlat
sbb
idiv
(bad)
lods
pop
pop
push
jecxz
xor
mov
cmps
and
movs
lods
jae
in
out
mov
and
or
aam
aad
lahf
loopne
jle
jmp
es
jecxz
inc
out
inc
push
adc
aam
mov
loop
jbe
inc
int
and
bound
ret
sbb
fdivp
test
jae
jle
adc
shl
iret
(bad)
jl
jecxz
retf
xor
rol
aad
mov
cmc
rol
mov
jmp
aad
or
icebp
mov
mov
push
sbb
inc
pop
or
movs
inc
jmp
cmp
mov
cmp
mov
and
pusha
mov
pop
jmp
mov
xchg
pop
inc
and
retf
ret
test
addr16
sub
into
dec
cwde
mov
sub
les
sub
dec
hlt
pop
in
test
aad
cmps
jmp
jl
aaa
fdivr
cwde
adc
out
jp
dec
ss
pop
cmp
sub
cmp
les
mov
mov
cld
retf
push
imul
xor
add
jns
lahf
pop
sbb
out
or
ja
mov
sahf
add
lods
mov
lss
cmp
out
je
hlt
sub
jle
(bad)
sahf
jecxz
out
or
cmp
jmp
xlat
jg
push
in
mov
and
outs
cwde
sbb
dec
retf
ja
add
add
cmp
dec
int3
jnp
sbb
bound
shr
inc
mov
push
and
mov
das
or
lss
add
cmp
xor
inc
fnstsw
xchg
push
or
enterw
adc
or
mov
adc
push
dec
xchg
cli
nop
stos
stc
add
sub
sbb
stc
and
cmp
push
movs
mov
jno
jbe
jmp
push
ins
stos
lds
jne
mov
adc
dec
mov
cmp
and
pop
lahf
aad
mov
cli
sub
add
test
ja
xchg
dec
jle
in
inc
dec
movs
mov
and
cmp
movs
nop
jle
sub
leave
clc
dec
xor
(bad)
fwait
add
lock
int3
adc
sbb
sti
push
(bad)
lock
adc
je
xchg
out
js
mov
mov
pop
jo
jp
imul
mov
push
adc
sub
pop
dec
inc
jns
add
xchg
or
sub
mov
xchg
mov
and
fld
add
jmp
push
fcomp
jge
xchg
dec
int
cmp
gs
xchg
outs
pop
movs
jmp
cmps
adc
out
ins
dec
sub
in
pop
(bad)
sti
inc
mov
loop
dec
ss
retf
or
add
jp
(bad)
es
cmp
cmp
dec
dec
cmp
dec
or
pushf
jbe
dec
movs
inc
shr
xor
hlt
jl
dec
ror
js
pop
nop
ss
mov
fbld
movs
gs
ret
mov
sbb
aaa
call
ss
and
mov
in
js
loop
loopne
dec
push
(bad)
fcom
add
lahf
cld
sbb
mov
inc
imul
retf
xor
jmp
xchg
test
xchg
frstor
iret
in
mov
fistp
rol
mov
mov
cmp
repz
outs
xchg
mov
lds
stos
mov
jno
mov
jecxz
inc
add
xchg
idiv
lds
out
pop
lods
(bad)
lods
xor
pop
inc
dec
std
or
xor
lea
neg
movs
imul
bound
mov
in
pushf
out
xor
sbb
jns
in
mov
test
lods
leave
(bad)
mov
pusha
cmps
aas
jno
ret
outs
imul
push
inc
or
push
test
(bad)
mov
inc
fldenv
xchg
mov
push
xor
or
dec
mov
or
and
fdivr
fldcw
(bad)
jns
jno
push
push
loope
jnp
adc
dec
sar
jl
nop
lahf
jnp
ss
jns
mov
xchg
not
and
shl
out
scas
jb
cmps
pop
jne
sbb
fcmovb
test
or
out
pop
xor
jb
loope
cmp
dec
inc
test
fs
mov
mov
gs
aaa
(bad)
mov
add
mov
add
and
add
add
and
mov
xor
mov
or
imul
shl
jmp
fmul
or
pop
inc
add
daa
iret
stos
pop
or
or
cs
mov
inc
lock
stos
outs
sti
gs
sub
retf
mov
bnd
pop
mov
push
dec
cmps
push
cmp
and
sub
stos
jg
xor
loop
adc
pop
dec
xor
mov
ret
mov
popa
sbb
cmp
repz
sahf
das
adc
loope
(bad)
pop
data16
add
sbb
shrd
sar
(bad)
data16
lods
retf
inc
test
rcr
pop
or
pop
div
mov
mov
shl
add
in
mov
adc
jo
xchg
or
out
dec
sub
js
dec
cs
cmc
fadd
cs
repz
into
xor
imul
pop
sahf
mov
push
iret
sbb
fbstp
test
rcr
xor
lds
cdq
int3
and
mov
or
sbb
test
leave
shl
push
pop
ficomp
retf
or
ja
jno
aas
stos
mov
cmp
out
cwde
push
iret
test
jne
outs
sbb
push
call
jmp
imul
push
jb
jo
dec
not
cmp
scas
mov
inc
imul
out
addr16
and
cmp
mov
mov
mov
scas
lods
cmp
push
mov
mov
add
cdq
xchg
stc
repnz
adc
jbe
stos
mov
mov
outs
das
jmp
in
jmp
xor
adc
xor
ja
fnstcw
mov
cli
call
into
sub
xchg
popf
push
(bad)
in
js
xor
push
sub
mov
pop
mov
clc
fst
mov
pop
std
adc
outs
sub
imul
add
pop
ret
mov
(bad)
sti
mov
enter
cdq
pop
dec
inc
push
out
adc
push
jns
dec
mov
xchg
mov
neg
and
fistp
cmps
xchg
into
add
call
das
loop
mov
call
or
jl
dec
cmp
aam
and
push
inc
adc
hlt
mov
scas
sar
xchg
xchg
nop
(bad)
mov
mov
xchg
inc
(bad)
std
add
outs
dec
cs
mov
dec
jg
fistp
and
fs
icebp
jecxz
mov
test
(bad)
fild
lock
add
outs
jp
push
jp
jp
std
and
(bad)
jmp
mov
test
call
call
bound
cmps
xor
les
sahf
out
cmc
pushf
adc
cmp
out
mov
cmp
push
mov
into
loope
sbb
sbb
in
nop
mov
in
push
cmp
jbe
mov
leave
cmp
pop
sar
sub
test
and
mov
add
int
mov
mov
aaa
movs
and
call
mov
jo
iret
sbb
int
aaa
xchg
stos
push
jne
icebp
pop
mov
int3
sub
fcomp
fwait
mov
repnz
jmp
xchg
jmp
imul
xchg
mov
xor
push
ins
loop
clc
aam
lea
xchg
hlt
inc
shl
jo
jno
ret
shl
jecxz
and
cmps
mov
sub
mov
je
mov
(bad)
out
jmp
push
fsub
push
(bad)
push
arpl
call
jo
xlat
mov
ror
rcl
out
mov
cmp
push
retf
dec
dec
out
xchg
or
retf
cmps
mov
movhps
outs
out
inc
jns
xor
jmp
cmp
adc
daa
adc
jnp
mov
and
mov
push
lahf
in
push
test
shl
stos
into
and
sub
mov
shl
dec
mov
sbb
ret
(bad)
xchg
jno
mov
mov
jbe
dec
jl
push
out
mov
or
pop
mov
int
hlt
jae
inc
mov
lock
sub
sbb
sub
into
dec
es
shl
dec
(bad)
sti
imul
mov
cmp
icebp
jne
push
popf
jnp
xchg
in
mov
fld
lods
rol
repz
add
jge
pusha
add
pop
test
lahf
aam
add
stc
and
adc
cmps
jle
mov
fadd
cmp
add
movs
jp
dec
dec
and
(bad)
mov
push
or
fmul
movs
inc
ret
sub
mov
mov
rcr
mov
ja
into
xor
sbb
mov
add
or
adc
jae
scas
pop
jecxz
cli
inc
xor
mov
mov
lods
(bad)
clc
sbb
loopne
jns
dec
aas
mov
cmp
dec
xchg
pop
loop
mov
aad
fstp
call
add
push
or
jmp
bnd
addr16
sbb
mov
add
pop
sub
sbb
test
jno
invd
mov
sbb
shl
test
cmp
aas
mov
outs
cli
test
pusha
(bad)
ins
adc
pop
cs
pop
jg
and
sar
adc
push
xor
retf
sti
aad
pop
adc
xchg
mov
and
mov
pcmpeqd
repnz
pop
fstp
sub
push
inc
dec
mov
cmp
sub
fs
stc
popf
sub
(bad)
retf
into
xchg
jmp
out
fidivr
into
addr16
cs
(bad)
shl
imul
mov
xchg
push
movs
add
imul
sbb
jecxz
push
js
sbb
mov
leave
iret
sar
mov
das
jl
mov
inc
in
test
fiadd
and
sbb
cld
mov
push
and
mov
inc
daa
dec
loop
sbb
nop
std
retf
xchg
jg
repnz
sub
and
inc
jl
imul
inc
sub
sub
xchg
or
mov
xor
sar
push
cmps
xor
rcr
add
jge
lods
and
push
aas
imul
push
dec
jmp
mov
push
das
add
sub
mov
sbb
mov
les
sbb
mov
(bad)
rcr
fnstenv
test
fwait
jns
ret
loopne
rol
jle
mov
inc
psubb
xchg
fild
xchg
nop
jae
(bad)
int3
outs
dec
mov
call
xchg
mov
scas
call
mov
push
cmps
pop
das
es
fcomp
hlt
add
cmp
mov
imul
invd
lock
sub
out
imul
push
sub
lods
lea
push
jno
fidiv
fisubr
retf
ret
addr16
and
inc
cmp
xor
test
loope
(bad)
pop
mov
(bad)
cmp
push
sub
test
idiv
sbb
xchg
int3
pop
jbe
sub
mov
push
imul
dec
(bad)
lahf
xchg
neg
mov
imul
mul
sub
adc
scas
and
loope
popa
sub
sbb
pop
imul
jge
mov
pop
xchg
inc
loope
cwde
mov
xchg
mov
out
fst
adc
push
sub
mov
cmp
xchg
cld
mov
xor
cmp
cmp
pop
mov
cmp
xchg
and
sub
dec
cmp
in
std
inc
call
lods
comiss
rcl
sahf
imul
fld
call
push
jnp
nop
int
fcomp
inc
mov
shr
push
test
xchg
into
sub
enter
repnz
mov
inc
dec
out
ficomp
cmp
(bad)
ins
inc
or
aaa
in
xchg
xchg
jae
push
pop
call
dec
test
dec
shr
(bad)
lea
fs
mov
mov
add
jg
jbe
cmp
loop
jmp
inc
cmp
jo
cmps
iret
xchg
fwait
cmp
lock
mov
in
pop
fsub
clc
pop
not
in
mov
mov
or
xchg
rcr
aam
dec
sub
repnz
hlt
loope
movzx
pushf
sar
or
pop
inc
sahf
pop
jg
adc
scas
pop
mov
mov
jmp
mul
jno
jb
and
pop
jmp
fisub
and
or
ret
add
push
mov
gs
nop
add
imul
dec
hlt
push
stc
ja
retf
icebp
cmp
mov
push
stc
push
fadd
inc
ror
ds
pop
jmp
mov
and
inc
jle
cmp
and
jmp
push
jp
push
jo
imul
adc
scas
sub
pop
aad
sbb
cmp
sub
(bad)
in
push
push
jge
inc
mov
and
xor
(bad)
loop
push
into
xor
cwde
rol
and
mov
in
icebp
mov
fcom
punpcklwd
or
fdiv
mul
push
ret
shr
xor
scas
lods
adc
push
sub
jne
pop
loop
pushf
daa
pop
enter
loope
mov
jl
(bad)
daa
sbb
fcmovne
repz
or
retf
sub
mov
pop
lods
rcr
adc
dec
adc
jo
mov
sub
push
fidivr
xchg
sub
fsub
in
call
inc
jle
into
inc
retf
lods
dec
xlat
arpl
and
dec
mov
dec
cli
aas
or
push
jmp
xor
xor
das
stos
and
mov
int
in
sub
imul
adc
and
pop
ror
(bad)
icebp
add
xchg
in
xor
xchg
cmps
dec
pop
fimul
nop
inc
sub
scas
mov
cmp
cdq
jns
jmp
jmp
arpl
push
cwde
cwde
xchg
(bad)
(bad)
scas
push
and
out
dec
ja
loopne
fistp
(bad)
mov
jbe
inc
out
cmp
loopne
dec
lahf
pop
sub
sbb
pop
or
pop
in
lahf
lods
in
sbb
adc
dec
push
sub
xchg
hlt
mov
inc
push
fs
inc
mov
inc
or
and
scas
ficom
mov
mov
or
pop
adc
loope
je
movs
enter
xchg
jae
or
mov
(bad)
(bad)
pop
mov
gs
or
aad
ret
fisub
lea
inc
or
mov
sub
dec
cmp
cwde
mov
inc
jmp
or
add
cmp
pusha
pop
mov
(bad)
jmp
lods
sub
adc
cmp
xor
cmp
ins
push
push
jp
mov
in
pop
mov
mov
ret
and
mov
inc
ret
cmps
fild
adc
sbb
addr16
xchg
xor
sub
push
xlat
mov
sub
or
iret
aam
aad
ret
mov
and
ins
inc
mov
pop
test
pop
xchg
data16
push
sti
mov
push
mov
mul
mov
(bad)
hlt
leave
xchg
repnz
aam
cmp
cmp
aad
ins
out
xchg
sbb
add
gs
mov
xchg
or
inc
add
fs
scas
mov
mov
lahf
mov
jb
sub
aaa
pushf
mov
lods
movs
push
das
retf
dec
int
sahf
cmp
adc
mov
mov
(bad)
mov
jb
pop
hlt
scas
sahf
sti
jge
icebp
inc
out
sbb
inc
cmp
cwde
stos
adc
xor
mov
xchg
jb
or
mov
push
push
add
adc
mov
push
sub
jl
jle
adc
xchg
mov
cwde
and
aad
xor
ins
and
mov
pop
pusha
dec
jg
jo
stc
mov
cmp
push
jmp
mov
shl
cmp
aad
jne
rcr
cwde
jno
das
mov
and
movs
jecxz
xchg
cmps
xchg
test
int3
push
inc
and
pop
xchg
jp
dec
cmp
scas
jmp
loop
(bad)
in
mov
es
movs
jmp
push
sub
imul
mov
xchg
sbb
leave
jno
je
sub
mov
fnsave
mov
xor
xor
enter
stos
dec
mov
jp
mov
ja
rcl
xlat
sub
push
push
dec
inc
push
in
and
mov
cmc
outs
mov
pusha
hlt
rol
and
sub
dec
std
sub
je
inc
cmp
mov
xchg
popf
mov
retf
bound
sub
in
adc
mov
jmp
sbb
xlat
jecxz
addr16
xchg
sbb
mov
pop
scas
pop
repnz
jbe
mov
dec
dec
pop
jecxz
jnp
mov
addr16
pushf
out
mov
pop
dec
loope
xchg
test
jmp
sahf
and
push
cmp
and
dec
mov
pop
(bad)
in
dec
(bad)
ins
mov
and
push
ret
frstor
xchg
push
add
mov
repnz
aaa
aas
cmp
int3
add
stos
xchg
daa
and
rcl
lock
enter
pop
mov
push
rol
scas
xor
(bad)
(bad)
jb
shl
repnz
adc
xlat
nop
inc
xchg
xor
ds
mov
adc
leave
mov
xchg
cmp
inc
adc
cmps
call
inc
dec
cmps
sbb
mov
test
scas
neg
js
dec
xor
call
push
pusha
jp
das
stc
fmul
xor
pop
jnp
push
je
mov
sar
std
jle
sbb
stc
adc
js
fcom
or
(bad)
stos
int
dec
bound
xchg
(bad)
lods
xchg
and
fdiv
ins
nop
enter
call
jne
mov
mov
mov
in
loop
push
mov
cmc
lods
sbb
jmp
ss
add
dec
add
popf
scas
test
clc
je
repz
mov
sub
jae
xchg
xor
arpl
stc
xor
add
adc
out
int
mov
mov
fwait
addr16
bound
imul
das
inc
push
jl
(bad)
mov
mov
mov
inc
xlat
add
pop
cmp
jle
jnp
pop
cmp
sbb
adc
fstp
cmp
jbe
inc
inc
aad
sub
adc
and
add
das
dec
out
mov
cli
sbb
ss
adc
lock
pop
fldenv
xchg
mov
sahf
call
sbb
jp
stos
lods
push
push
fwait
sub
adc
cmps
jae
adc
enter
jge
jbe
jmp
(bad)
sbb
inc
sbb
out
sub
movs
jno
sub
shr
jns
pop
inc
pop
add
sbb
daa
daa
pusha
lea
add
stos
addr16
retf
nop
leave
aas
leave
imul
int
cmc
lock
mov
ins
mov
call
jle
xor
mov
dec
adc
adc
adc
(bad)
and
loop
or
stos
or
mov
adc
push
pop
or
jnp
mov
sbb
mov
(bad)
(bad)
cmp
sub
aam
imul
imul
dec
mov
mov
ja
jl
aaa
outs
inc
iret
cmps
stos
repz
and
mov
or
cmp
in
call
je
sbb
hlt
xchg
mov
loopne
dec
mov
mov
sbb
jmp
neg
push
lahf
mov
ins
mov
push
jns
sub
shl
xor
(bad)
jl
xchg
mov
mul
sub
cs
aad
pop
sub
scas
js
mov
pop
cli
out
js
(bad)
fwait
ss
pop
shl
xchg
call
sub
clc
jo
xor
sub
jae
add
(bad)
pop
in
dec
pop
adc
push
scas
sub
cmp
mov
(bad)
aam
mov
mov
movs
(bad)
sub
mov
test
outs
pop
and
inc
adc
in
add
sbb
or
cmp
not
imul
sbb
mov
popf
xor
(bad)
mov
mov
mov
pop
cmp
xchg
fprem1
inc
bound
cmp
pop
jg
out
cli
out
frstpm(287
xchg
sbb
fiadd
mov
popa
aas
mov
pop
dec
fs
fst
xor
push
das
and
push
xchg
adc
mov
cmp
popa
cwde
repnz
inc
aaa
lods
mov
xor
sbb
dec
or
sub
ja
mov
mov
pop
mov
cs
pop
in
jno
push
mov
(bad)
out
into
mov
fs
inc
cmovle
stos
jbe
xor
out
sub
sbb
lods
retf
cdq
jp
idiv
cmp
imul
pop
ficom
adc
inc
add
xor
(bad)
fwait
sahf
test
rol
mov
mov
mov
jne
adc
mov
cmp
fild
cmp
aaa
xor
cmp
cmc
ror
leave
pop
cmp
nop
xchg
mov
mov
sbb
xor
and
imul
mov
xchg
leave
and
test
or
xchg
data16
mov
mov
je
add
int
jo
or
sub
inc
dec
js
fnstcw
cmps
push
idiv
clc
je
daa
repnz
jmp
mov
mov
xchg
pop
bound
icebp
jg
jae
mov
ds
inc
mov
cmp
jge
add
push
imul
ds
mov
cli
mov
popa
xchg
das
sbb
cs
call
adc
test
repz
pop
stos
add
ja
repnz
je
inc
cmp
les
pushf
inc
push
inc
cmps
ins
pop
xlat
(bad)
rcr
or
stos
mov
sar
test
cmp
popf
js
jno
js
pop
cli
xlat
idiv
mov
mov
pushf
xchg
pop
mov
pop
popf
and
jne
push
out
shl
pop
pop
mov
or
test
xor
sub
adc
fwait
repz
neg
out
fnsave
xchg
scas
add
not
push
shl
mov
aaa
int3
mov
push
sbb
lahf
dec
xchg
push
and
scas
cld
or
test
stos
jns
pusha
fadd
pop
adc
outs
jmp
neg
(bad)
(bad)
in
inc
xchg
cmps
push
add
xchg
jae
inc
sub
fiadd
and
in
sar
jmp
mov
or
push
(bad)
(bad)
jmp
(bad)
xlat
aaa
aaa
mov
outs
jmp
sub
call
mov
sub
aad
test
add
pop
xchg
mov
mov
pop
inc
mov
(bad)
sub
sub
dec
pop
test
(bad)
out
cdq
jecxz
repz
dec
call
adc
js
push
xchg
repz
(bad)
mov
cmp
cmc
retf
mov
sub
fld
fstp
or
out
repz
ins
pop
or
mov
add
test
cwde
lds
jp
mov
dec
adc
lds
mov
outs
je
pusha
or
jno
sub
mov
lahf
push
xchg
add
cmp
mov
mov
xchg
and
mov
jecxz
add
fild
mov
hlt
jbe
aam
jae
jns
sub
cmp
mov
sar
jle
and
push
dec
pop
or
fs
hlt
cmp
sbb
mov
loopne
xor
jl
shr
daa
daa
inc
sub
movs
sahf
adc
sub
sti
jb
scas
cmp
sub
fucomp
mov
rol
ret
mov
dec
out
mov
(bad)
aam
xchg
or
jg
inc
or
push
rcr
and
jle
cmp
lods
jno
ret
out
aaa
pop
mov
pop
add
(bad)
hlt
fild
and
test
cdq
add
pop
jo
repnz
test
sbb
lock
xlat
cmp
js
lods
or
es
push
inc
or
out
ret
dec
sbb
(bad)
jo
jmp
(bad)
xor
nop
or
pop
fwait
jne
out
pop
dec
pop
aaa
icebp
cwde
mov
sub
inc
pop
inc
xchg
icebp
stos
gs
mov
lods
addr16
cmp
retf
popf
dec
xchg
imul
outs
inc
dec
outs
gs
mov
aad
outs
mov
sub
inc
jno
cmc
pop
or
push
sahf
and
adc
(bad)
nop
xor
pop
jmp
pusha
adc
or
dec
jecxz
out
mov
in
loope
cmp
dec
jle
ins
push
push
and
mov
fst
stos
arpl
das
sti
or
movs
xor
mov
retf
rol
push
and
mov
xor
sbb
cmp
xchg
mov
pushf
loope
cmp
cmp
loop
mov
call
and
out
mov
fcomip
div
mov
leave
pop
xor
arpl
pushf
ror
push
mov
or
(bad)
stos
das
add
mov
push
fwait
cmp
shr
inc
or
add
cmps
call
xlat
test
adc
sub
mov
and
push
xor
mov
(bad)
stos
jge
mov
lods
xchg
jo
inc
xchg
hlt
cmps
inc
sub
and
ins
test
xchg
fadd
sbb
aad
xchg
shl
rol
popa
icebp
bound
mov
loop
ja
(bad)
retf
aad
dec
lock
mov
xor
pop
push
jbe
or
or
sbb
mov
enter
es
das
neg
ins
data16
mov
hlt
xchg
mov
xlat
add
add
fdivr
cwde
ja
hlt
(bad)
sar
lds
aas
jae
pop
lahf
xchg
leave
sub
dec
sahf
push
lea
maskmovq
not
inc
xlat
xchg
adc
inc
loop
test
retf
pop
mov
imul
mov
enter
or
and
cmc
inc
sub
fiadd
push
pop
lahf
daa
dec
xchg
sbb
and
inc
jge
ins
adc
xchg
jo
sahf
fsub
xor
pop
jle
adc
pop
cli
add
push
inc
(bad)
xchg
adc
jecxz
repnz
out
or
push
in
pop
fisub
sub
xchg
jge
dec
xchg
sbb
jns
add
xchg
xor
dec
fimul
clc
adc
stc
push
xor
fisubr
adc
in
cmp
xor
and
push
jecxz
and
loope
inc
add
dec
sub
mov
jle
(bad)
int
add
arpl
fst
push
pop
xor
scas
push
cdq
xor
(bad)
pop
gs
push
inc
or
retf
mov
add
mov
imul
cmp
adc
pop
jb
and
ss
ret
and
leave
xchg
add
cmp
gs
test
data16
add
cmp
pop
es
mov
int
sahf
popa
xchg
or
xchg
add
lods
and
retf
std
push
mov
test
xchg
xor
loope
je
popf
and
bound
out
xlat
gs
add
xchg
xchg
push
xchg
(bad)
std
dec
daa
cld
out
pop
sub
pop
test
out
sbb
pusha
iret
popa
push
leave
pop
ins
and
lahf
(bad)
(bad)
pop
pop
xor
xor
mov
jmp
mov
and
retf
dec
or
(bad)
fs
inc
xor
pop
in
ins
cmps
or
push
fcomp
(bad)
jg
popf
mov
lods
jb
mov
add
lods
add
aad
into
int
retf
rcr
ror
mov
std
das
out
scas
xor
jae
stos
out
movs
test
jl
ret
xor
ins
mov
fwait
iret
mov
retf
in
fdiv
fbld
sub
enter
into
mov
add
fadd
cmpps
xor
add
pop
cmc
xchg
jb
fld
mov
add
das
nop
or
dec
stos
mov
add
sbb
xchg
in
pop
xchg
mov
dec
cmp
mov
into
sub
jae
inc
inc
cwde
inc
enter
pop
add
in
jmp
mov
dec
jge
daa
lea
mov
in
sub
push
shl
jge
or
pop
add
popf
std
adc
push
aam
ss
ret
add
arpl
daa
aaa
test
push
xchg
and
cmp
adc
pop
test
leave
inc
stos
adc
add
dec
sbb
sub
into
idiv
inc
std
or
es
cmps
aas
and
xchg
stos
sub
mov
lods
or
(bad)
sub
jge
inc
jne
xchg
std
cmp
rol
imul
jb
cmps
dec
sub
pusha
sub
test
mov
pop
mov
(bad)
fabs
scas
sub
scas
in
push
test
repnz
fdiv
push
int
loop
hlt
mov
shl
aas
(bad)
iret
adc
adc
popa
mov
mov
add
jg
push
arpl
dec
dec
pop
xchg
xor
jne
pop
adc
xor
stos
push
hlt
dec
repz
xchg
movs
stc
test
mov
or
icebp
mov
je
into
imul
xor
add
arpl
adc
inc
stos
into
push
sub
dec
cs
pop
and
mov
lock
xchg
mov
stos
jns
cdq
shl
fwait
cmp
fisub
jnp
enter
(bad)
xlat
mov
push
sbb
xchg
call
iret
aas
popa
push
push
lock
and
dec
jno
clc
aad
movs
pop
aam
cmp
xchg
adc
ret
jns
ror
push
xor
add
arpl
mov
mov
adc
inc
dec
test
or
jle
std
clc
jns
xor
sub
push
test
faddp
jnp
push
mov
mov
retf
dec
dec
bound
jl
add
push
cli
pop
bnd
xor
mov
mov
jmp
call
in
jle
and
pop
sahf
mov
jecxz
cmps
mov
adc
adc
dec
adc
xchg
popa
mov
cmps
pop
fcomi
cmp
mov
pop
xchg
xor
in
dec
idiv
retf
mov
mov
jne
retf
out
mov
pop
adc
add
ins
push
popa
xchg
inc
fnstenv
lods
mov
(bad)
clc
pop
adc
rcl
out
pop
fistp
stc
jno
les
push
sbb
and
mov
nop
in
test
jns
sbb
(bad)
loope
mov
dec
mov
xor
pushf
sti
inc
cmps
sbb
pop
sti
dec
cs
iret
mov
cmps
or
sbb
mov
dec
push
movs
fdivr
adc
jb
test
cmps
inc
popa
(bad)
jmp
jp
into
inc
js
push
add
lods
xchg
ret
cmps
icebp
pop
xor
scas
and
xchg
outs
or
fwait
cdq
into
xor
out
pop
sahf
shl
ss
fidiv
aam
sub
call
or
mov
push
xchg
dec
xor
jecxz
inc
daa
mov
push
inc
ror
out
hlt
cmp
ficom
scas
adc
(bad)
push
sbb
js
in
or
arpl
cmps
es
(bad)
jae
imul
nop
loope
dec
lahf
push
jne
call
loopne
or
push
dec
sbb
mov
popf
jmp
sub
sbb
aas
cmp
push
adc
or
cmp
ret
inc
ret
mov
shl
sub
setae
scas
push
and
and
test
std
hlt
xchg
jns
mov
aaa
inc
(bad)
mov
sbb
push
mov
sub
mov
(bad)
xlat
mov
retf
dec
bound
out
add
xchg
jbe
sub
ret
fdivrp
jbe
and
(bad)
(bad)
cmps
jno
mov
pop
mov
call
test
clc
adc
pop
dec
lods
add
pop
(bad)
xor
add
aad
xor
mov
xor
mov
sbb
dec
retf
mov
jnp
inc
inc
mov
fiadd
xor
(bad)
mov
add
daa
or
les
call
cmp
add
pop
jns
sbb
and
xchg
sbb
loopne
pop
mov
cmp
mov
(bad)
push
push
sbb
in
jnp
imul
int
jmp
cmp
push
adc
fwait
jae
push
mov
mov
xor
sub
mov
out
dec
inc
mov
dec
inc
dec
mov
push
mov
sti
lahf
sar
jns
pusha
mov
out
cwde
aas
cld
inc
mov
xor
arpl
pusha
jge
call
mov
lds
mov
shl
cmp
and
sar
jmp
pushf
xor
xor
inc
mov
cs
inc
scas
sub
xor
loope
push
xchg
imul
out
ins
ins
scas
popa
mov
cmp
imul
test
adc
inc
aad
out
or
fadd
mov
test
int
pop
lds
sub
xchg
add
popa
add
es
movs
mov
int3
or
xchg
and
(bad)
xor
jecxz
pop
ja
mov
mov
es
stc
jmp
leave
dec
cmp
xchg
mov
cld
fstp
add
clc
pop
and
inc
push
mov
out
push
jnp
adc
jmp
hlt
aaa
adc
inc
inc
jnp
sahf
mov
push
push
mov
mov
std
lods
sub
popa
jmp
outs
retf
test
mov
adc
loope
jp
cli
aas
cmp
or
cwde
adc
icebp
mov
mov
jmp
fwait
or
cli
push
lea
dec
mov
pop
pop
popa
call
aas
push
sbb
push
out
adc
mov
cmp
aam
iret
loope
hlt
shl
adc
jle
xchg
push
jae
push
(bad)
shl
mov
aas
popf
cmps
movs
push
add
xor
adc
test
(bad)
ja
(bad)
jo
lahf
mov
(bad)
mov
in
or
fnstcw
mov
lods
adc
inc
jmp
inc
pop
adc
addr16
jl
add
pop
or
add
fisttp
repnz
jns
cmps
out
loopne
sbb
test
inc
add
xor
sti
push
arpl
cld
dec
or
outs
push
mov
cmc
ficomp
retf
sub
jne
push
ins
sub
lods
in
lods
out
in
aad
xor
adc
jns
ins
out
popa
or
mov
aas
jl
stos
push
es
mov
in
aaa
mov
mov
pop
adc
sti
out
mov
xor
arpl
out
push
out
jecxz
fdivr
fld
adc
in
and
fwait
enter
mov
add
inc
jno
push
mov
fsubrp
arpl
aas
rcr
push
mov
adc
sbb
xor
sbb
in
js
hlt
scas
loopne
clc
fiadd
scas
sub
xchg
sysenter
cmps
bound
push
mov
jns
stos
jnp
int3
jb
lods
in
das
outs
popf
push
mov
icebp
and
adc
jmp
shl
mov
jae
stc
sub
or
call
pop
cmp
cmp
lods
sbb
stos
scas
cld
jp
mov
pop
test
les
fwait
cmp
push
in
ror
fimul
mov
xor
inc
ret
loope
cdq
pop
sti
pop
in
push
imul
movs
fisttp
or
mov
pusha
push
pop
sub
cmp
dec
mov
push
or
neg
inc
mov
or
aad
lahf
shl
imul
dec
pop
xlat
or
push
loop
mov
push
retf
call
add
test
(bad)
sbb
cmp
add
test
movs
(bad)
adc
dec
add
(bad)
jne
pop
ss
lea
popf
push
(bad)
and
or
pop
push
dec
cwde
das
loope
(bad)
jecxz
adc
loope
outs
lods
pushf
mov
jmp
mov
(bad)
jmp
cli
rcr
fcmovne
or
fs
mov
add
pop
fld
mov
sub
je
in
sub
ss
xlat
fwait
vaddsubpd
and
or
shr
cmps
mov
jns
pop
mov
pop
test
in
or
and
dec
and
inc
dec
rcl
dec
push
mov
pop
cdq
(bad)
stos
xchg
dec
cmps
sbb
test
mov
inc
adc
mov
or
and
cmp
dec
in
sbb
arpl
push
mov
popf
outs
push
add
cmp
lea
(bad)
cmp
pop
es
xchg
mov
scas
jmp
mov
or
jnp
adc
xor
jo
cld
inc
addr16
cmc
call
sub
pop
inc
into
in
jae
rcr
leave
cdq
fidiv
js
sbb
sbb
xchg
(bad)
bound
sbb
shl
fmul
je
imul
dec
stos
(bad)
mov
push
add
push
fcmovnbe
jle
push
js
leave
ret
in
dec
mov
repz
std
and
jle
jno
cwde
sahf
inc
sub
mov
imul
push
push
pushf
inc
add
dec
dec
pop
mov
cs
pop
(bad)
das
ins
test
xor
and
xchg
xchg
stos
jnp
mov
mov
repz
arpl
mov
imul
cli
dec
and
pop
in
fmul
shl
xor
lods
std
imul
xor
aad
stc
push
or
xlat
aas
out
and
sub
xor
inc
fsub
pop
jae
sub
icebp
push
pusha
cmps
les
pusha
and
popf
les
inc
sub
stc
inc
sub
(bad)
fwait
(bad)
sti
inc
lahf
cld
and
pop
stos
and
add
mov
pop
or
dec
mov
pop
outs
adc
movs
jb
in
add
je
imul
inc
jp
popf
test
addr16
pmuludq
jae
jl
mov
in
int
mov
dec
pop
jne
enter
xchg
pop
adc
lods
sub
dec
mov
lods
dec
sbb
in
mov
test
rep
inc
mov
gs
push
addr16
imul
jge
ins
loope
push
ins
inc
call
daa
or
aaa
ins
sbb
dec
or
test
push
scas
add
mov
xchg
outs
es
xor
or
xchg
pop
cmp
inc
cli
mov
xor
xchg
enter
add
fsubr
sbb
sbb
cs
in
mov
retf
pop
pop
(bad)
in
pusha
xor
jge
stos
add
sub
mov
mov
fimul
sbb
mov
cmps
das
(bad)
dec
lahf
xchg
imul
fnstenv
in
retf
mov
sub
and
dec
nop
(bad)
mov
loope
inc
adc
outs
hlt
add
inc
mov
out
call
sub
cli
fucom
pop
adc
or
mov
and
mov
adc
xor
sbb
out
mov
cmp
arpl
shl
pop
xchg
push
push
jp
rol
test
js
in
ja
xor
je
and
(bad)
cmps
mov
lds
in
rol
xor
mov
or
leave
jo
sbb
aas
sub
lea
fwait
jno
retf
out
mov
sub
jge
jae
xchg
(bad)
pop
imul
stos
or
mov
push
icebp
cmp
push
das
enter
fistp
pop
mov
rol
cmp
lahf
push
or
loop
cmp
pushf
pop
shr
mov
xor
clc
outs
lahf
clc
inc
and
jmp
aad
or
push
inc
ins
ins
pop
or
dec
sbb
(bad)
pop
stos
mov
out
lods
lods
jb
jnp
xchg
dec
into
(bad)
mov
dec
stos
jbe
push
sbb
cdq
and
mov
mov
cmp
add
pop
push
mov
dec
popf
mov
pop
aas
clc
mov
lods
(bad)
jmp
jo
push
cmps
out
lea
pushf
outs
imul
pop
fild
in
pop
pop
je
ins
pop
push
iret
loop
mov
add
mov
or
and
or
loop
push
js
adc
cmp
xchg
test
mov
neg
jecxz
adc
and
ror
pusha
enter
idiv
lock
cld
push
retf
xor
xchg
or
sbb
xor
mov
xlat
fst
mov
fwait
addr16
mov
cmp
push
push
jmp
fist
mov
mov
fsubrp
gs
or
(bad)
dec
jno
xor
scas
push
and
push
nop
mov
jg
dec
mov
jl
rol
test
rcr
retf
pop
xchg
and
leave
dec
cmp
sbb
add
jno
test
(bad)
jmp
ret
clc
enter
test
imul
int3
pop
stos
jnp
or
xchg
mov
sub
jmp
jo
push
mov
or
and
in
push
stos
or
mov
xor
outs
int
cmp
mov
pop
or
jo
cmp
adc
aas
cmp
clc
ins
jne
loop
bound
iret
js
pop
(bad)
cmpxchg
jns
xlat
popf
mov
(bad)
push
retf
sti
lock
daa
mov
call
sbb
xchg
mov
clc
mov
movs
adc
les
cmp
(bad)
js
rol
(bad)
jne
dec
lahf
xor
test
add
mov
sbb
repz
lahf
sahf
inc
push
retf
jb
gs
xor
cli
adc
ret
adc
loop
repz
or
enter
jmp
sub
popa
push
mov
push
sub
mov
shl
in
mov
adc
mov
xor
nop
mov
lds
cmps
in
push
dec
pop
icebp
loope
mov
pop
(bad)
or
js
sbb
(bad)
mov
mov
call
cmp
cmp
or
jmp
mov
dec
outs
xor
adc
arpl
mov
dec
pusha
out
cli
dec
pop
pop
push
mov
(bad)
out
out
sbb
movs
mov
aad
pop
mov
(bad)
mov
shl
ja
mov
shl
icebp
cli
mov
bound
xchg
cwde
call
out
pop
jns
xchg
and
adc
pop
es
bound
cld
jge
inc
cmp
cmp
aas
sub
jns
mov
mov
inc
mov
mov
les
push
fadd
fisubr
inc
adc
jae
or
push
je
imul
aaa
sbb
call
jmp
sub
into
nop
jae
iret
pop
out
movs
and
inc
jbe
stc
out
adc
adc
in
jl
push
mov
out
test
in
cmps
pop
shr
loop
add
and
aam
xchg
mov
sub
std
sub
jo
fild
mov
jbe
pop
sbb
jb
stos
out
int3
add
xchg
sbb
rol
pop
shr
cdq
push
cmc
adc
sbb
popa
add
rcl
stos
scas
mov
jb
loop
jge
rcl
fisub
xlat
lds
xchg
xlat
ds
mov
xor
dec
repnz
fnstsw
test
pop
in
inc
and
ss
sub
ins
xor
ins
int3
mov
sub
mov
push
add
adc
sub
movs
fcom
jne
jmp
mov
pop
dec
push
cwde
ds
jmp
retf
in
mov
lods
cli
pop
addr16
xchg
xchg
xchg
daa
xchg
fwait
push
sbb
sar
in
int3
dec
add
dec
push
add
imul
fwait
loop
dec
adc
pop
sub
addr16
jle
sub
add
in
inc
mov
push
enter
enter
in
jnp
ja
push
sbb
pmaddwd
in
or
arpl
pop
xchg
mov
mov
inc
add
push
jno
add
loopne
mov
and
outs
das
(bad)
ret
rcr
mov
mov
cmp
adc
pop
pushf
xor
and
outs
or
jno
lods
ins
imul
in
push
xor
(bad)
pop
xlat
or
xor
test
iret
push
into
scas
jno
fistp
inc
push
fwait
sbb
mov
add
mov
dec
inc
sbb
push
fild
ins
jle
or
retf
xchg
sbb
ror
inc
clc
repz
or
or
in
bound
inc
or
cmp
test
in
mov
push
or
push
cmp
cwde
cmc
and
inc
adc
retf
mov
mov
pop
in
cmp
push
pusha
pop
pop
ror
adc
jp
rol
push
enter
and
inc
fwait
inc
test
jp
jns
es
pop
pop
rol
aam
cmp
iret
and
add
inc
mov
out
inc
stos
test
dec
into
test
mov
int
push
cld
cmp
pop
pushf
mov
inc
test
jno
jno
lahf
loopne
add
xchg
dec
and
mov
push
and
sar
xor
mov
add
shl
push
fistp
xchg
int3
add
adc
xchg
iret
jge
cld
dec
in
daa
xchg
aaa
xor
ja
lds
add
fild
dec
(bad)
int3
shl
(bad)
push
das
and
icebp
mov
mov
loop
lods
mov
xlat
clc
into
inc
bswap
lds
stc
xlat
movs
movs
jmp
ins
xrelease
and
scas
dec
pop
rol
pop
or
pop
stos
dec
fsubp
icebp
fisttp
fbstp
xchg
or
scas
rcl
(bad)
loopne
sar
jp
es
add
sub
add
(bad)
and
(bad)
out
sahf
loop
nop
xor
mov
lods
jae
aad
pop
sbb
cld
mov
inc
test
xor
sub
ds
lahf
or
adc
xchg
mov
mov
adc
aas
jns
pushf
mov
xor
or
scas
xor
add
call
adc
retf
cmp
push
nop
or
jmp
adc
sub
pop
std
dec
shl
ins
(bad)
pushf
xor
jnp
idiv
gs
pop
icebp
fldln2
add
test
test
xchg
mov
pushf
ds
pop
cld
mov
das
cwde
mov
sub
push
loopne
(bad)
fdiv
shl
(bad)
in
mov
out
mov
inc
mov
jne
jmp
mov
xchg
jp
ins
sub
and
xchg
loop
imul
ins
in
stos
jge
pop
mov
iret
or
(bad)
mov
add
mov
cmp
les
je
call
ins
stc
jo
xchg
pop
pushf
mov
cmp
mov
test
call
je
push
scas
pop
adc
lods
ret
cwde
cmp
out
sub
shl
xor
and
cmp
dec
jmp
sub
mov
(bad)
retf
lods
adc
stos
mov
gs
loop
retf
inc
adc
pop
mov
sub
inc
xor
sub
sub
out
jmp
jae
jmp
jecxz
jg
aaa
lods
iret
pop
test
add
dec
cwde
icebp
jae
xor
inc
add
or
arpl
xor
lock
pop
loope
(bad)
ins
xor
cmc
mov
scas
out
int
jb
cmp
mov
dec
sub
mov
dec
pop
xchg
retf
daa
mov
sbb
add
add
lods
out
arpl
xchg
popf
dec
push
cmp
rcr
pop
or
cmps
es
loopne
mov
add
je
xor
mov
push
aad
call
mov
in
stos
jmp
(bad)
(bad)
mov
mov
sahf
pop
xchg
cmp
js
rol
mov
and
or
gs
cmps
hlt
and
jbe
fild
inc
sbb
mov
fisub
cs
fs
fisttp
pand
fs
dec
outs
sub
je
cmp
data16
mov
cmp
xlat
std
fnstcw
imul
push
jge
xor
cwde
jno
pop
iret
movs
sbb
(bad)
hlt
fadd
fst
mov
sbb
inc
mov
or
pop
mov
mov
xor
lods
pop
jb
push
adc
test
das
and
ds
xchg
sub
inc
outs
fidivr
xor
and
retf
xchg
jb
cmp
sub
inc
mov
inc
xlat
repz
sub
dec
cmps
popa
nop
and
sub
add
jmp
xor
lea
cmp
cmp
addr16
mov
imul
out
je
dec
dec
dec
(bad)
cmovns
push
cmp
jb
lods
xor
mov
jmp
or
aaa
sub
push
or
shl
(bad)
out
or
(bad)
gs
ficom
add
push
adc
test
loop
adc
stos
inc
lahf
or
push
fistp
ins
aaa
mov
push
sbb
and
int
ins
loope
mov
jp
data16
stc
mov
sbb
je
jmp
push
push
inc
or
and
add
inc
call
cmp
xor
inc
mov
xchg
xchg
imul
jl
imul
xchg
pop
cmp
mov
jmp
or
mov
out
std
ins
pop
out
pop
dec
jmp
sti
das
or
cs
aas
(bad)
sahf
call
bound
jge
cmp
das
mov
mov
shl
pop
inc
mov
test
xor
push
dec
mov
adc
stos
and
add
test
lods
aad
or
fbld
outs
(bad)
add
adc
adc
adc
mov
enter
mov
mov
adc
sbb
sbb
jmp
mov
into
mov
scas
cmps
mov
mov
fldenv
push
repz
dec
inc
clc
stc
sahf
inc
adc
xchg
loope
jmp
ror
cwde
jmp
leave
and
call
test
add
scas
in
imul
repnz
jecxz
xchg
es
movs
sbb
push
rcl
enter
mov
adc
packssdw
xchg
cld
inc
jmp
xor
pop
ss
push
sbb
popf
mov
ins
in
ficom
sahf
rcl
push
in
pop
sbb
ds
ins
xlat
cmp
sbb
movs
call
mov
sbb
cmp
push
cmp
loopne
adc
xor
pop
push
cli
lods
imul
jp
and
push
imul
jg
mov
push
jb
xlat
pop
jecxz
or
loop
(bad)
out
sbb
add
mov
inc
xor
mov
outs
xor
add
inc
lea
inc
cmp
inc
test
mov
mov
add
xlat
xchg
adc
or
inc
aad
test
cmp
xchg
cwde
inc
loope
add
out
enter
cmp
test
xor
in
adc
mov
push
stos
xchg
adc
push
jmp
xchg
ins
xchg
mov
mov
jl
and
shr
lock
jge
repz
mov
ret
hlt
jge
movs
xchg
in
inc
ins
xchg
mov
push
shl
call
nop
call
shl
bound
adc
add
jae
and
mov
shl
adc
lods
or
inc
add
xor
mov
mov
mov
pop
mov
pop
(bad)
xchg
jne
fdiv
js
lds
ds
dec
cmp
add
retf
pop
ss
icebp
gs
push
shr
inc
add
shr
pop
push
test
inc
mov
inc
xor
in
in
int
add
rcr
push
inc
jne
in
sbb
jae
aad
or
cmp
aas
dec
push
cmp
xchg
fild
sub
cmp
sub
add
and
sub
adc
push
sub
inc
pop
fnsave
dec
push
dec
fild
mov
(bad)
mov
mov
or
pop
enter
rol
mov
fcomp
adc
movs
jno
ror
pop
adc
push
ret
and
add
push
in
retf
mov
lods
scas
ret
das
and
retf
cmp
xlat
xor
lea
shl
and
mov
push
(bad)
jbe
clc
outs
xchg
nop
les
stc
inc
out
ror
(bad)
sbb
nop
mov
ja
inc
or
or
xor
je
ss
mov
inc
mov
jb
call
push
gs
mov
scas
and
jno
hlt
je
pop
test
cld
sub
les
add
scas
pop
xchg
sti
sub
jmp
imul
fwait
xor
dec
pop
sbb
jno
imul
sahf
sbb
iret
jae
daa
sub
leave
ins
jae
jno
std
xchg
or
xchg
fild
xchg
retf
out
jbe
push
sbb
pushf
xor
sbb
jmp
inc
std
rcr
das
dec
je
sub
push
jmp
(bad)
cld
mov
test
aas
cmp
addr16
or
or
mov
cmp
push
pop
sub
pop
or
stos
out
je
sub
jle
test
or
icebp
mov
dec
loope
ds
std
cdq
mov
inc
scas
(bad)
jecxz
pop
xor
loope
xchg
inc
stos
xor
dec
popf
inc
stos
mov
cmp
fld
push
inc
push
jae
adc
dec
outs
mov
push
js
(bad)
in
sub
and
mov
or
ret
mov
test
aad
cdq
mov
mov
imul
fmul
xchg
and
inc
xchg
(bad)
outs
mov
adc
add
(bad)
pop
or
push
mov
and
jbe
repnz
int
adc
fdivrp
dec
mov
test
retf
stos
jno
cs
fadd
pop
cs
jb
push
call
add
test
idiv
cld
imul
cli
imul
pop
sar
sahf
call
push
out
gs
pop
mov
neg
sar
test
add
mov
cmps
xor
sbb
jge
inc
iret
sahf
jne
adc
hlt
popf
leave
xchg
xchg
iret
ss
lahf
in
xchg
cmp
jo
rcr
test
add
push
arpl
addr16
adc
mov
mov
pop
cld
pop
mov
mov
or
js
into
cwde
fimul
addr16
mov
or
xor
push
adc
fadd
sbb
scas
mov
sub
cmp
sbb
dec
jg
mov
lahf
mov
cdq
out
mov
cli
jb
bound
fnstsw
jb
aad
push
mov
inc
and
xchg
mov
push
ins
aad
or
dec
aad
inc
cmp
stos
aaa
nop
movs
sbb
or
and
mov
hlt
pop
aam
mov
xchg
mov
jno
rcl
push
fdivr
sbb
jne
sub
clc
adc
ins
nop
repnz
out
ins
or
es
jg
jg
mov
inc
pop
push
jo
in
adc
arpl
mov
int3
lods
jge
jle
mov
cmp
fisttp
jmp
push
adc
pop
and
sbb
push
adc
pop
mov
dec
mov
outs
sub
stos
(bad)
push
sub
adc
jmp
and
out
sti
xchg
jmp
add
(bad)
out
popa
movs
pop
mov
es
fmul
inc
jbe
adc
dec
in
retf
ret
data16
mov
movs
mov
xchg
pop
jno
cmp
xor
rcr
xor
js
cwde
sub
or
push
stos
push
mov
pop
je
pop
fisub
enter
out
push
in
mov
hlt
xchg
mov
clc
dec
nop
mov
xor
jo
mov
mov
add
or
push
or
data16
or
sub
adc
xchg
fist
loope
leave
push
pop
movs
aas
sub
mov
enter
inc
mov
or
and
pop
lock
in
mov
cwde
lods
sbb
cwde
test
mov
inc
ret
frstor
popa
pop
push
neg
push
mov
inc
mov
mov
pop
push
dec
not
pop
jns
mov
aas
neg
fst
adc
loop
dec
js
xor
adc
cmp
add
call
xchg
outs
pop
xchg
push
and
and
xor
ror
mov
ins
pushw
sbb
sub
pop
in
test
push
stos
xor
sbb
xchg
or
mov
fdivr
test
dec
push
pop
ins
pop
jo
mov
pop
jmp
dec
cs
adc
jbe
jle
or
jnp
fild
or
call
cld
add
aas
fnstenv
push
popa
fbstp
push
cmps
call
clc
xchg
movs
push
mov
cmp
push
inc
ds
out
vcmpss
int3
adc
push
cmp
jae
jo
pop
ins
clc
or
xchg
lahf
mov
mov
xor
hlt
sar
xor
lods
mov
jae
int
mov
xchg
call
dec
xlat
pop
jp
mov
arpl
mov
pop
sbb
test
push
in
pop
pop
ret
push
push
cs
xor
fist
add
adc
clc
and
inc
push
repnz
xchg
in
scas
inc
adc
pop
(bad)
ficomp
hlt
cwde
jno
mov
(bad)
adc
out
xchg
sbb
lock
xor
aad
xor
adc
cmp
sbb
pop
and
retf
loop
mov
popa
jnp
fsubr
leave
inc
loop
int
gs
push
call
das
mov
sbb
into
gs
and
outs
rcr
mov
mov
or
sbb
or
das
(bad)
rcl
push
push
xor
div
mov
in
retf
out
and
mov
into
jb
mov
ror
inc
xor
sub
stos
icebp
inc
cmp
call
not
das
retf
stos
xor
cmp
ja
out
mov
dec
dec
jae
push
outs
push
xlat
mov
add
outs
jecxz
push
ja
sbb
enter
jmp
cmps
fstp
dec
fisttp
(bad)
out
lock
push
or
sbb
lock
dec
push
and
test
mov
pop
lea
loope
dec
or
pop
fnstsw
ret
dec
out
sbb
pusha
dec
jb
clc
imul
sbb
je
cmp
psubsb
and
fnsave
push
mov
pop
mov
idiv
sub
retf
popa
xor
jecxz
cmp
mov
adc
mov
dec
mov
mov
jns
idiv
lods
lock
test
or
xchg
sbb
ins
jge
andps
cmp
jbe
test
aaa
jb
cmps
mov
loop
sbb
movs
push
pop
pushf
aad
popf
inc
cmp
xchg
loopne
mov
mov
(bad)
and
inc
xor
xor
pop
push
int3
mov
push
sbb
fmul
mov
cmp
xor
cmps
sub
lock
xor
cmc
popa
ja
add
mov
into
mov
out
pushf
test
adc
in
rcr
jbe
mov
dec
xor
movs
aad
push
cmp
lods
mov
xor
test
out
adc
div
adc
iret
push
mov
retf
addr16
mov
ret
mov
in
mov
lods
xchg
jbe
ret
push
dec
jbe
dec
jmp
push
cmp
aad
sbb
xchg
push
mov
push
frstor
xchg
cdq
sub
push
xchg
pop
scas
ja
out
out
pop
fisub
in
xchg
xchg
dec
jp
shl
mov
mov
xchg
and
jg
pop
int3
jnp
pop
(bad)
loope
mov
pop
jl
fstp
cdq
sahf
imul
fdiv
xchg
sar
daa
fs
ss
retf
cmp
(bad)
mov
sbb
rol
push
std
xchg
(bad)
jnp
pop
cmc
jno
jo
ins
jbe
fadd
lods
out
jno
fsubr
or
inc
movs
adc
add
cdq
stos
in
dec
jp
popa
mov
movs
add
push
dec
sbb
fs
cli
cvtps2pi
adc
jp
jg
xor
mov
loope
ret
call
jg
movs
mov
mov
setb
lea
sub
mov
fstp
mov
mov
xor
outs
mov
jae
sub
ss
mov
pop
pop
jae
shl
adc
inc
int3
push
jmp
mov
jne
cmps
mov
clc
mov
sub
ret
xor
push
adc
push
lods
stos
popa
push
fs
das
mov
cwde
dec
ins
push
jle
mov
inc
cmp
mov
mov
push
sub
movs
jg
cmp
push
cld
icebp
pop
jmp
adc
pop
in
cmp
and
rcl
sahf
add
js
sbb
(bad)
iret
fcos
scas
or
sub
adc
xchg
push
xor
mov
fdiv
retf
pop
call
mov
add
(bad)
cmp
push
outs
(bad)
and
(bad)
int3
cld
inc
movs
inc
xchg
dec
mov
out
fidivr
sub
ret
jmp
and
sub
xchg
scas
bound
test
xor
xor
movs
repnz
stos
jbe
mov
mov
nop
mov
mul
aad
mov
fidiv
cmp
inc
push
adc
fs
stos
cwde
inc
in
inc
inc
cmps
test
mov
jns
out
in
in
test
mov
aas
into
idiv
pop
lock
mov
lock
mov
xor
xchg
lods
push
popf
dec
sbb
pop
dec
shl
clc
xchg
hlt
cmp
call
pusha
cmp
inc
mov
mov
mov
lds
stos
cmp
push
sbb
adc
xlat
std
loop
enter
sar
mov
inc
xchg
add
lds
iret
mov
jb
les
and
push
stc
mov
sub
mov
enter
cmp
inc
cmp
pop
push
aad
sbb
cmp
jge
(bad)
or
leave
xchg
in
loop
into
je
xchg
push
cmp
jmp
pop
rcl
pop
xor
xlat
pop
leave
leave
popa
aas
cdq
jge
in
mov
add
nop
pand
retf
add
sbb
or
or
and
inc
cmp
in
mov
ret
jmp
gs
inc
xchg
xor
enter
jmp
(bad)
pop
and
out
inc
shl
out
mov
jne
push
lods
fistp
add
or
inc
retf
inc
xchg
xor
jg
popa
mov
xor
jb
mov
je
jne
aam
icebp
outs
mov
and
scas
lods
in
ins
cmp
jge
adc
cmp
jne
inc
clc
loopne
jae
push
jb
iret
sbb
ins
mov
inc
push
xor
in
mov
xor
cmps
and
aas
(bad)
adc
jno
dec
je
loopne
and
ins
add
mov
cli
sub
push
add
lock
or
fild
xor
arpl
test
inc
pop
add
adc
adc
mov
sub
repnz
xchg
inc
mov
out
test
cmp
ret
jns
stos
nop
pop
inc
pop
dec
dec
push
ret
loope
rol
xlat
sbb
loope
stc
push
xchg
sub
cld
mov
xchg
add
rol
cmps
xor
mov
repz
int
pop
fdiv
add
cmc
adc
fsubr
mov
sub
adc
cmp
xchg
add
call
jae
(bad)
sahf
cmp
dec
jnp
clc
lea
or
aad
push
push
xor
test
jmp
cmp
mov
jb
dec
movs
not
gs
imul
sbb
sbb
xor
mov
aaa
mov
sbb
dec
sahf
div
dec
cmp
mov
jb
pop
and
sub
scas
mov
out
dec
mov
mov
adc
stos
adc
inc
mov
(bad)
ret
stos
mov
iret
add
add
lods
test
xchg
push
mov
fidiv
idiv
mov
test
ret
stos
jg
pop
test
inc
mov
icebp
push
add
sub
leave
or
sti
mov
in
ret
adc
sub
pop
les
xor
jecxz
inc
sbb
inc
clc
sub
cmp
jg
xor
movs
out
call
(bad)
mov
fs
popf
mov
xor
sbb
dec
sbb
call
jb
(bad)
mov
mov
getsec
mov
adc
or
push
lds
outs
sbb
xor
(bad)
nop
pop
lods
and
jp
push
out
inc
div
loope
sbb
jne
cmp
push
push
mov
pop
jecxz
lods
or
xchg
push
xchg
dec
or
cmp
mov
mov
add
stos
(bad)
mov
pop
test
das
test
mov
dec
imul
jne
outs
mov
mov
push
scas
pop
pop
ror
jg
mov
neg
and
or
shl
adc
and
inc
mov
test
xchg
dec
aad
sbb
pop
and
sbb
jae
xchg
dec
add
test
ss
cmp
lahf
mov
cmp
popa
outs
loope
pop
mov
dec
sbb
xchg
lods
retf
sub
sbb
pop
push
xchg
mov
sbb
bound
sub
mov
pushf
cmp
inc
test
in
sahf
test
out
ss
ss
iret
nop
jecxz
xchg
push
cmps
mov
jno
pop
dec
fadd
cdq
cli
adc
or
jae
or
pop
into
pop
xchg
push
jns
sub
int3
sbb
xchg
fld
(bad)
pusha
xlat
push
sbb
adc
ror
sti
mov
setl
cmc
jge
jns
xor
mov
(bad)
xchg
or
xchg
add
out
stos
(bad)
sbb
std
pop
mov
retf
add
jae
push
movs
cmp
dec
jmp
es
cdq
pop
pop
and
add
cmp
and
xchg
add
lock
xchg
fcomp
pusha
scas
jnp
sbb
cdq
sub
mov
cmc
dec
dec
(bad)
daa
(bad)
in
push
xor
push
jo
sbb
(bad)
mov
cmp
pop
gs
jmp
mov
pop
lds
ja
and
or
fldenv
add
push
pop
js
neg
paddb
retf
mov
xchg
ins
shl
xchg
hlt
jecxz
ss
pop
sub
add
mov
(bad)
sub
pop
cwde
and
leave
cmp
mov
in
loope
jno
cmc
jle
dec
cmps
xchg
repnz
test
mov
cmc
ret
arpl
int3
push
(bad)
aad
sub
pop
scas
(bad)
nop
adc
pop
sbb
xchg
(bad)
not
mov
dec
dec
hlt
mov
push
ret
repnz
out
inc
mov
cld
mov
sub
push
xchg
cwde
test
xchg
xor
hlt
pop
mov
shl
xor
inc
jns
jl
add
aad
add
pop
mov
cmp
or
mov
xor
test
mov
jo
out
mov
shr
mov
out
or
dec
push
icebp
or
xchg
sti
loop
movs
inc
pusha
cmps
cmc
mov
xchg
xor
xor
lds
push
movs
pushf
test
addr16
js
xor
adc
sub
ret
(bad)
popa
push
imul
in
imul
ins
ficom
aaa
push
sbb
xchg
dec
add
(bad)
jle
in
lahf
bound
or
pop
daa
out
xor
pusha
fdiv
loop
dec
dec
stc
std
xor
pop
test
fwait
aam
pop
popa
in
fisubr
jne
loop
test
mov
and
dec
rcr
adc
daa
xchg
inc
push
cwde
push
mov
cmp
add
adc
xor
xchg
cli
dec
pop
mov
jnp
push
clc
enter
fwait
and
mov
xor
daa
rol
xor
sti
pop
mov
mov
cmp
dec
scas
aad
xor
jle
jg
mov
cmp
fbld
aam
or
mov
in
imul
add
fdivr
mov
test
into
jp
mul
stc
xchg
movs
das
mov
adc
xor
lds
out
(bad)
aaa
sub
std
or
mov
rol
fist
xchg
ds
adc
inc
nop
push
cli
sub
mov
jne
lods
fild
enter
lahf
mov
sbb
arpl
out
push
sub
imul
fadd
xchg
mov
imul
push
pop
jo
fs
push
test
pop
xor
std
push
inc
push
(bad)
xor
ja
loopne
xor
cmc
pop
mov
mov
shl
push
daa
jp
mov
repnz
fst
jns
push
inc
imul
and
adc
imul
and
stos
pop
xchg
outs
push
daa
sub
int
jmp
pop
cmp
repz
jae
aam
sub
xchg
arpl
pop
nop
stos
stos
je
sub
call
lea
loope
dec
jge
scas
inc
or
jmp
ss
xor
scas
push
pop
sub
ret
je
dec
leave
xor
pop
add
loope
mov
(bad)
fsub
mov
and
call
add
fistp
sub
xor
icebp
or
movs
cmp
and
mov
clc
mov
add
mov
js
std
cmps
xchg
mov
dec
repz
xchg
les
ins
xor
jne
repz
movs
icebp
jae
mov
in
xchg
in
dec
jge
mov
push
push
jp
cmc
or
mov
aam
iret
inc
dec
fwait
(bad)
cmp
mov
mov
sub
test
sbb
mov
mov
daa
or
sub
lods
jnp
jno
xchg
add
dec
scas
fwait
inc
sbb
inc
mov
or
mov
jle
std
call
aam
push
movs
mov
mov
(bad)
in
bound
xor
loope
dec
cmp
fstp
dec
jne
out
out
and
dec
mov
arpl
dec
test
mov
xor
xor
shl
call
xor
inc
neg
lods
lea
mov
push
sahf
xchg
lds
mov
hlt
cmps
cmp
cld
iret
outs
sub
xchg
fwait
mov
mov
inc
jbe
or
mov
js
ins
scas
sub
shl
cmc
sahf
inc
ja
cdq
cmps
and
fidivr
xchg
jg
retf
jmp
mov
std
add
mov
mov
sbb
(bad)
push
retf
mov
sub
mov
outs
scas
fwait
arpl
test
jbe
cwde
sbb
xor
adc
hlt
mov
in
xchg
add
fsubr
out
mov
mov
lods
sub
outs
fdivr
cdq
ret
call
out
jnp
(bad)
in
inc
arpl
cmps
scas
dec
mov
xor
add
jp
xchg
pushf
xor
xchg
jecxz
add
pop
out
adc
xor
mov
mov
jp
fnsave
xor
outs
mov
or
mov
and
scas
scas
sub
xchg
rol
xchg
mov
fbld
jo
bound
in
xor
xor
das
(bad)
push
in
popf
mov
cmps
movs
mov
push
inc
movs
in
stos
shl
mov
pop
pop
or
sub
loope
cmc
imul
mov
add
add
aas
dec
aad
jb
rcl
cdq
call
jl
call
imul
jmp
or
xchg
shl
cmps
push
and
xchg
jbe
mov
sbb
inc
push
rcr
push
movs
push
pop
jbe
in
sbb
int3
mov
out
xor
sub
out
adc
jno
ja
mov
ds
fstp
les
mov
out
mov
pop
push
mov
retf
sub
inc
call
sbb
adc
push
call
cmp
dec
les
scas
jae
loope
pop
mov
inc
pop
scas
(bad)
push
clc
pop
mov
dec
cli
dec
imul
loope
adc
in
fcmovnb
ror
push
(bad)
in
sub
mov
add
retf
add
idiv
imul
rol
or
(bad)
nop
out
jecxz
in
leave
jnp
mov
pop
pop
outs
push
loop
inc
sub
(bad)
and
and
xor
adc
mov
sbb
or
xor
dec
xchg
push
adc
iret
shr
inc
lea
jg
outs
mov
pop
adc
imul
pop
mov
in
cmp
and
sar
sbb
mov
mov
or
xchg
sub
js
jns
mov
int
jmp
or
and
dec
pop
ins
and
sub
push
scas
pusha
aaa
out
out
add
cld
inc
enter
fild
dec
xor
jmp
mov
sub
sbb
call
xchg
lock
add
and
retf
shl
xor
and
out
(bad)
mov
ret
push
scas
mov
inc
and
sti
push
js
test
cwde
dec
ror
enter
test
les
je
mov
in
test
lea
mov
sub
div
in
imul
push
les
push
lods
jbe
jo
push
std
inc
xlat
sbb
xchg
dec
lea
icebp
jbe
push
retf
xchg
pop
std
sbb
sbb
jl
out
push
pop
(bad)
ins
xor
pop
pop
pop
mov
sub
sub
fcomp
(bad)
arpl
nop
xchg
clc
je
mov
dec
aad
daa
aaa
test
pop
push
mov
(bad)
retf
out
jno
out
add
pop
inc
stos
js
push
in
or
arpl
or
(bad)
ja
(bad)
sahf
pop
mov
sbb
sub
int3
loopne
daa
fdivr
dec
cdq
jmp
in
pushf
mov
jae
push
and
nop
pop
loop
mov
dec
cmp
mov
cs
adc
xchg
mov
cld
movs
mov
call
or
mov
pshufw
jge
mov
out
enter
push
aam
outs
pop
xchg
pop
adc
gs
(bad)
cli
jl
lds
mov
xchg
or
mov
mov
push
leave
retf
mov
sar
jno
pusha
pop
je
jmp
and
or
repnz
mov
jmp
push
repz
ds
lock
push
sub
push
aam
cwde
pop
ficomp
and
fld
or
fdiv
cmp
pop
dec
adc
mov
dec
stos
jp
lds
ret
sahf
cdq
inc
enter
cmps
mov
in
push
fisubr
add
sti
mov
xchg
ret
data16
inc
pop
mov
sbb
addr16
mov
fisubr
cwde
xchg
pusha
movs
lea
xchg
stos
xlat
(bad)
aam
test
mov
mov
dec
pop
inc
inc
in
mov
in
aas
sbb
test
jbe
add
push
and
jbe
(bad)
xchg
mov
sbb
fwait
xlat
mov
or
mov
push
jmp
call
or
(bad)
xchg
cwde
inc
jbe
sub
iret
add
retf
xchg
mov
jbe
repnz
fisubr
(bad)
jl
shl
jo
(bad)
sar
ja
sbb
mov
sub
stc
ds
sbb
cmp
mov
je
cmp
xchg
add
jmp
sbb
push
push
jno
fdivr
xor
js
je
pop
je
mov
dec
sub
out
adc
sbb
out
sbb
loopne
xchg
mov
adc
pop
adc
xchg
shl
push
ds
lods
push
enter
(bad)
push
inc
inc
mov
xchg
mov
dec
add
data16
movs
adc
jge
fnstsw
pop
cli
dec
jl
add
(bad)
jp
les
mov
jae
int
ins
ins
pop
ds
into
je
dec
clc
cmp
cmp
pop
push
es
lahf
mov
cmp
jmp
nop
xchg
sub
and
cmps
jge
dec
iret
sub
xor
rol
repnz
in
or
shr
push
cwde
jb
add
push
dec
jns
mov
jmp
sbb
push
push
jo
mul
adc
(bad)
xor
sub
fidiv
mov
jb
xor
sub
pusha
mov
leave
sub
mov
xlat
scas
aad
test
leave
popf
push
pop
test
push
jbe
mov
les
mov
push
iret
dec
in
movs
dec
pop
mov
mov
pop
push
push
lock
dec
loope
stos
fcomp
xchg
scas
sub
stos
rol
pop
mov
inc
es
sbb
les
add
mov
addr16
sahf
outs
add
or
add
mov
mov
gs
(bad)
xchg
add
fisttp
mov
inc
std
stos
ret
cld
inc
jecxz
add
mov
jmp
int3
cmps
xor
pop
jb
jns
ja
xchg
inc
in
cmp
adc
xor
(bad)
pop
adc
mov
cmp
in
jns
mov
ins
push
jo
jb
mov
sar
in
outs
out
xchg
stc
sub
jnp
bound
aad
inc
pop
mov
xor
inc
ret
icebp
cmps
fs
jae
into
popaw
mov
push
out
inc
push
ret
(bad)
dec
xchg
in
and
ja
in
cmp
stos
lock
pop
and
cs
test
or
inc
test
mov
lds
xlat
xor
and
sub
ret
inc
out
inc
imul
call
stos
rcr
pop
dec
dec
aas
sub
mov
ins
pop
retf
fist
das
fnclex
pop
(bad)
mov
mov
mov
sub
push
xlat
out
ins
cmps
cmp
clc
sbb
sub
retf
add
xchg
sbb
ret
cmp
nop
aad
ins
and
(bad)
mul
outs
outs
push
ds
adc
retf
lea
xchg
mov
pushf
push
imul
adc
inc
jno
sbb
js
clc
iret
(bad)
int3
int
pop
and
cmp
cmp
pop
fdiv
sub
sbb
test
pop
aad
and
add
mov
sub
mov
sbb
icebp
test
fnsave
push
scas
pop
jo
test
mov
mov
mov
aam
mov
xchg
ins
aaa
shr
push
inc
(bad)
pop
or
sbb
add
inc
push
inc
or
xor
fist
adc
or
pushf
repz
retf
ret
jg
(bad)
js
jne
scas
jge
ja
or
stc
mov
add
inc
fdivr
jns
pop
ss
mov
fiadd
mov
ret
ret
mov
adc
and
sbb
mul
scas
je
jg
push
shr
pop
shr
(bad)
fild
jno
and
adc
jb
push
lock
inc
jl
inc
or
aad
test
xor
xchg
in
push
test
inc
jns
shl
pop
jbe
fidiv
clc
sbb
data16
xchg
lods
mov
sbb
(bad)
scas
pusha
dec
push
test
xchg
xchg
mov
add
idiv
jns
jnp
xor
or
movs
iret
adc
jno
call
jmp
fwait
stos
retf
xchg
gs
xor
ret
pop
mov
ds
ins
push
loope
scas
mov
aam
xlat
xor
test
neg
xchg
or
pop
cmps
mov
sbb
xlat
push
dec
or
xchg
jo
fcom
retf
cmp
and
jb
call
and
push
xchg
sub
xor
clc
dec
jl
repnz
dec
loopne
data16
push
clc
mov
mul
mov
pop
cmp
data16
adc
gs
inc
add
popa
test
gs
dec
pop
pop
imul
mov
mov
push
popa
cli
sbb
fld
pop
or
int3
nop
imul
ss
frstor
jb
add
cmp
mov
cs
js
cmp
jno
lods
inc
jg
addr16
enter
rcl
test
inc
mov
test
repz
shl
sub
loop
push
pushf
mov
sub
movs
sbb
sbb
jl
adc
and
ret
pop
pop
xchg
mov
ret
or
mov
cmps
stc
fist
and
dec
dec
je
pop
mov
into
adc
ins
cmp
mov
jle
or
push
pop
adc
es
push
int3
data16
mov
out
mov
xchg
ins
fcom
xor
fisttp
and
in
mov
adc
pop
ficom
and
xor
dec
call
mov
and
push
pop
cwde
mov
fimul
fcomp
fdivr
adc
std
in
xor
cmc
ja
xchg
mov
sub
sbb
cmps
push
sahf
loop
mov
je
imul
or
add
push
sbb
data16
cmp
or
jmp
repz
ins
(bad)
fbstp
mov
movs
adc
out
loopne
fs
shl
inc
int3
xor
rcr
les
sub
sub
pop
or
out
pop
cmp
mov
jmp
cmps
mov
sbb
in
sub
or
test
das
dec
mov
int
popf
xor
xchg
pop
lds
and
mov
in
jmp
mov
bnd
ins
xchg
shr
push
stos
mov
outs
dec
dec
call
iret
mov
adc
les
shl
pop
pop
pushf
add
xchg
int3
mov
adc
xor
sbb
pop
jmp
mov
leave
sub
xchg
fstp
push
(bad)
cld
or
retf
jns
and
scas
div
stc
xor
cmps
out
ror
jnp
retf
cwde
mov
shl
jo
inc
ss
sub
mov
cmp
mov
fstp
retf
xchg
jl
mov
daa
iret
mov
adc
xchg
sahf
aas
jg
inc
(bad)
cmps
adc
dec
push
inc
inc
shr
cld
cmp
loop
fdivr
(bad)
test
aas
sub
fucomp
jp
sbb
(bad)
aad
dec
test
lock
les
sub
hlt
fisttp
dec
pop
jne
jmp
(bad)
sahf
cdq
into
retf
mov
and
inc
fld
shr
mov
jbe
jb
jne
adc
and
push
push
push
xchg
int3
xchg
fidivr
imul
or
jecxz
enter
dec
fsub
inc
add
mov
call
xor
fisttp
xchg
repnz
adc
sub
pop
mov
lock
popa
loop
sbb
fbstp
mov
aad
outs
ss
push
cwde
fdivr
ret
shr
fld
mov
js
mov
cwde
fisub
ja
sub
pop
dec
pop
test
xchg
movs
repnz
lods
mov
push
xlat
pusha
vpxor
xchg
scas
push
mov
loopne
daa
pushf
ret
out
aad
call
test
inc
test
leave
jnp
(bad)
shl
xor
shr
pop
pop
out
stc
push
(bad)
push
ret
fs
cmp
add
or
aad
adc
jmp
or
fxtract
inc
xor
sub
add
or
pop
(bad)
jmp
add
push
les
xchg
or
test
adc
mov
push
fbstp
sahf
cs
push
jl
xor
out
mov
pop
loope
jge
inc
aaa
jbe
dec
daa
fisub
rol
xor
lahf
(bad)
adc
jns
ja
sub
iret
add
test
jno
outs
aad
jo
mov
jmp
mov
jnp
cmps
pop
xchg
fstp
rol
and
push
xor
jmp
add
mov
fdiv
pop
sub
jge
add
dec
cmp
popf
fbstp
dec
jle
push
xchg
xlat
movs
mov
jle
mov
pop
scas
jmp
dec
push
(bad)
dec
jb
fmul
outs
pop
std
or
push
aad
fidiv
sub
(bad)
sub
aad
push
mov
mov
fnstenv
je
and
jecxz
xor
in
mov
(bad)
xor
jle
push
cmp
adc
and
enter
je
test
dec
xor
xchg
xor
jle
mov
retf
es
shl
loopne
js
not
rol
ret
sub
mov
sahf
xchg
and
sbb
xchg
mov
lahf
stc
inc
jle
(bad)
cmps
(bad)
mov
xchg
cdq
inc
adc
rcr
repnz
inc
sbb
lahf
iret
leave
mov
fcom
nop
pop
sti
pop
xor
stos
sti
dec
test
cmc
inc
pop
icebp
and
out
add
retf
sub
jmp
adc
pop
xor
push
loope
fmul
movs
and
pop
or
push
arpl
imul
aaa
xchg
inc
push
repnz
and
mov
xor
sub
lahf
fcmovbe
into
inc
dec
fdivr
pop
adc
(bad)
pusha
std
inc
rcl
retf
imul
bound
add
add
xor
stc
fs
jne
pop
cs
sti
in
pop
fsubr
leave
aam
pop
(bad)
cmp
pop
comiss
cmps
inc
dec
movs
jmp
(bad)
pop
push
pop
or
imul
mov
dec
sbb
(bad)
mov
stos
sub
xchg
mov
jecxz
xor
add
fsubrp
sub
dec
fs
cmps
adc
or
ds
rol
xchg
cmp
inc
test
fsub
hlt
and
iret
rol
rcl
jmp
xor
or
(bad)
fild
add
mov
int3
or
push
push
pop
addr16
scas
dec
stc
dec
daa
mov
pop
mov
(bad)
mov
sbb
mov
aam
call
inc
sysenter
(bad)
aad
and
inc
(bad)
pusha
vpackssdw
xchg
imul
and
dec
cli
sbb
dec
ficom
jmp
dec
adc
jge
in
adc
cmp
cmp
repz
in
(bad)
mov
or
cmps
xor
lea
mov
cs
pop
cld
(bad)
push
(bad)
inc
push
push
sub
dec
and
sub
jmp
adc
ror
ins
sbb
test
push
mov
imul
(bad)
fidiv
mov
dec
not
dec
dec
dec
pop
push
adc
nop
inc
sub
jmp
add
pop
add
push
or
sbb
pop
int3
cmps
ret
push
sub
fbstp
cli
lock
pop
(bad)
loop
test
inc
in
(bad)
pop
or
lahf
cmp
xchg
cmps
adc
pusha
enter
popa
add
iret
sub
ins
mov
shl
jp
jmp
cmp
push
pop
and
and
je
dec
cmps
push
lock
jnp
mov
in
cwde
xchg
fs
in
hlt
leave
mov
or
pmaddwd
and
sti
out
mov
mov
push
int
icebp
mov
loope
ss
and
push
scas
push
nop
jmp
inc
sbb
gs
dec
mov
inc
out
aas
cmps
pop
push
fdiv
push
jnp
ret
mov
dec
xchg
and
inc
(bad)
push
mov
xchg
das
ja
mov
pop
and
pop
loope
sub
fild
mov
mov
mov
cld
and
mov
and
sbb
call
lahf
pop
scas
movs
call
(bad)
(bad)
xor
mov
das
push
cmp
std
push
dec
in
retf
and
and
mov
sbb
mov
mov
and
xchg
(bad)
cld
mov
ins
icebp
push
jnp
fild
adc
push
sbb
sbb
jno
jmp
call
cmp
sbb
add
mov
sti
sbb
sahf
test
into
repnz
add
lock
scas
arpl
scas
ins
out
lahf
jge
mov
(bad)
mov
dec
push
xor
fdivr
dec
mov
and
inc
test
cmp
lahf
into
inc
sahf
adc
pop
popf
adc
div
lock
std
inc
push
push
push
(bad)
in
test
pop
fistp
mov
xchg
(bad)
jge
aad
pop
mov
pushf
mov
sbb
or
sbb
cmps
xor
inc
int3
mov
xchg
jno
dec
inc
ret
dec
popf
mov
dec
inc
loopne
loop
retf
xchg
inc
lea
pushf
mov
mov
mov
jae
adc
inc
dec
pop
in
sti
add
jl
leave
xor
and
sbb
dec
in
not
inc
pop
push
jnp
(bad)
cmp
dec
movs
sbb
cmps
fcom
pop
jb
addr16
ret
jno
call
mov
mov
and
clc
push
mov
ror
sbb
sbb
(bad)
mov
mov
fwait
(bad)
out
mov
ficomp
dec
xchg
test
(bad)
and
add
inc
ror
ins
mov
add
xchg
mov
pop
and
and
lahf
mov
jns
jg
lods
dec
in
cmp
sbb
sub
sbb
dec
sbb
xchg
dec
mov
add
dec
cld
rcr
inc
add
test
clc
lahf
icebp
push
pusha
(bad)
imul
out
mov
inc
call
ins
or
cmp
jg
dec
test
pop
(bad)
cmps
dec
push
push
dec
out
dec
mov
mov
mov
mov
outs
mov
bound
fcmovb
fcmovne
retf
mov
push
pop
cmp
fsubr
jns
inc
pop
add
push
clc
jle
adc
sub
pop
xor
xor
jp
mov
dec
push
dec
mov
mov
out
add
dec
les
sub
push
add
bound
xchg
test
iret
cmps
cmps
jmp
xor
pop
mov
dec
xchg
mov
sar
mov
mov
pop
cld
xor
pop
or
xor
pop
sbb
mov
mov
bound
das
mov
std
mov
sbb
movs
mov
pop
(bad)
in
cld
dec
iret
cli
movs
sbb
push
jno
(bad)
aad
ins
sbb
xor
jmp
cmps
dec
dec
jnp
jbe
arpl
pop
jns
xchg
push
and
push
pop
test
pop
mov
mov
pop
push
test
or
(bad)
popa
mov
xchg
lock
retf
nop
cmps
xchg
jge
cmc
out
jne
and
inc
rcl
clc
lahf
into
pop
push
outs
push
aas
enter
movs
pusha
outs
mov
or
test
sar
fnsave
cmps
mov
adc
jmp
jbe
mov
and
push
add
mov
les
mov
in
pop
xchg
sbb
nop
xchg
lods
cwde
outs
and
stos
cli
in
jnp
ins
jne
jnp
les
or
inc
mov
and
dec
jecxz
and
pop
cmc
js
pop
pushf
sub
stc
adc
sub
(bad)
out
xor
cmps
movs
mov
dec
push
mov
xchg
or
mov
or
imul
jmp
clc
mov
fcomp
shr
gs
pop
inc
loope
iret
ret
sti
jmp
leave
data16
adc
push
mov
dec
out
shl
dec
ret
or
push
and
cli
into
cmp
adc
mov
dec
pop
(bad)
std
sub
test
fisub
mov
fcom
dec
pushf
add
cmp
ins
sub
xor
mov
and
les
fiadd
push
xor
push
std
test
dec
push
adc
pusha
jnp
int3
push
and
xchg
pop
inc
repnz
lods
call
mov
mov
movs
inc
mov
movs
xlat
ret
adc
sbb
mov
sub
sbb
mov
sbb
sub
ss
dec
(bad)
inc
pop
jae
repz
sub
mov
addr16
fmul
shl
lds
clc
(bad)
sbb
sti
inc
pushf
add
int3
int3
aas
out
mov
sbb
xchg
(bad)
aaa
arpl
mov
pop
loop
mov
mov
or
fistp
push
aas
retf
scas
cmps
cli
fisttp
sbb
xchg
dec
mov
sub
sbb
push
dec
cmp
loope
pop
cmp
cli
dec
pop
ins
out
mov
dec
push
cmp
mov
or
icebp
aad
dec
pop
jecxz
push
loopne
repnz
mov
lods
pop
push
cwde
scas
jmp
cli
inc
fwait
mov
ret
sbb
(bad)
mov
out
cwde
sub
cli
lahf
dec
jo
cmps
jbe
aaa
adc
sbb
sar
icebp
xchg
push
jmp
and
jge
fild
xor
dec
mov
push
ss
or
cmps
sub
dec
adc
inc
or
adc
inc
push
push
cmp
sbb
sar
int
cld
add
and
cmp
mov
sub
cmp
je
enter
ins
sbb
mov
test
es
dec
or
mov
test
or
cmp
ret
aaa
out
out
cld
jne
push
and
jge
ret
jp
pop
fadd
mov
call
mov
outs
cmps
push
nop
sbb
jp
jmp
xchg
dec
xchg
or
xor
ja
test
loopne
(bad)
jecxz
arpl
fstp
xchg
sbb
inc
xchg
icebp
mov
pop
in
push
(bad)
mov
cmp
dec
mov
test
cmc
sar
sbb
mov
out
mov
lock
scas
cmp
jg
test
adc
sbb
sbb
xchg
js
fist
adc
addr16
nop
arpl
fstp
dec
mov
push
frstor
inc
call
inc
or
cmp
inc
adc
push
jp
cmp
in
or
leave
pop
push
call
xor
cmp
pop
add
xchg
inc
push
sahf
mov
scas
pop
(bad)
loope
pop
push
and
inc
es
jp
in
mov
mov
xor
(bad)
xor
(bad)
push
xor
pusha
int
icebp
mov
adc
(bad)
pushf
es
pop
pop
and
test
adc
aaa
(bad)
fistp
int3
add
jno
jecxz
arpl
jg
fwait
add
out
test
mov
mov
push
fsubr
push
adc
adc
adc
jecxz
add
add
mov
adc
pushf
ds
jmp
(bad)
arpl
dec
mov
lahf
mov
mov
nop
daa
xor
fs
outs
les
orps
jecxz
cmps
arpl
push
scas
and
mov
sbb
xlat
sbb
add
cmp
dec
popf
imul
sub
icebp
sbb
mov
adc
dec
push
xor
add
jo
mov
cdq
mov
(bad)
retf
jl
nop
mov
iret
sub
cmp
sub
ss
popw
and
push
inc
rcr
xor
inc
add
repnz
or
inc
iret
cmp
dec
fcom
ss
ins
ror
ror
or
mov
sub
sbb
xchg
or
adc
fcomp
int
sbb
jnp
ret
test
shr
mov
fld
int3
nop
push
ins
in
shl
add
jnp
pop
fsub
(bad)
fcom
push
std
inc
push
add
sbb
adc
mov
popa
mov
push
jnp
xor
fs
mov
js
xor
loope
xor
sub
int3
js
repz
loop
test
loop
adc
in
je
adc
sub
xchg
sbb
inc
push
mov
js
pushf
xor
mov
test
aaa
dec
retf
dec
mov
inc
ret
in
xchg
and
push
int3
lfs
mov
sub
add
out
jmp
lods
movs
pop
xor
push
xchg
add
inc
sti
out
idiv
jecxz
out
sti
lock
sahf
outs
test
test
cdq
and
daa
push
adc
loop
test
xchg
or
retf
repnz
ins
clc
movs
adc
sar
inc
sbb
rcr
xchg
loop
rol
ret
sub
mov
pop
push
pop
outs
into
rcr
and
pop
pop
fdiv
jne
and
mov
adc
(bad)
mov
pop
pavgb
fadd
inc
test
mov
jle
adc
sahf
inc
rcl
adc
arpl
cwde
xor
int
mov
int
jp
shr
arpl
sbb
popf
xor
mov
fcmovbe
lahf
sub
pop
sbb
mov
sub
sbb
xchg
neg
out
std
loope
jecxz
or
ficomp
jno
sbb
cmp
adc
jns
jmp
outs
aad
inc
jl
sbb
jl
shr
mov
fsub
pop
mov
dec
popf
std
mov
dec
outs
jle
mov
leave
inc
push
pop
addr16
or
or
cmp
dec
(bad)
pushf
scas
lods
pushf
sar
es
jnp
and
hlt
cs
outs
mov
and
xor
sub
sbb
call
sahf
dec
cmp
mov
push
dec
mov
sub
arpl
movs
retf
test
aas
ins
aad
and
add
arpl
daa
cmps
(bad)
cmp
fsub
mov
mov
mov
enter
pop
(bad)
ins
dec
out
sbb
jo
pop
loop
jmp
rcr
inc
cli
lea
mov
aam
int
out
rcr
dec
sbb
sub
dec
xor
out
fnsave
cdq
jno
jmp
scas
mov
jmp
or
fbstp
xlat
dec
loop
push
dec
inc
in
push
jg
call
mov
adc
outs
sub
(bad)
(bad)
fxch
movs
dec
cmp
inc
adc
xor
sub
jmp
cmps
or
jns
jmp
cmps
in
ins
jg
sbb
or
xchg
pop
mov
out
rol
out
into
mov
and
sbb
rcr
ds
mov
pop
push
xor
enter
lods
jns
ja
mov
pop
and
test
cmp
mov
jl
js
add
push
adc
xlat
pop
fcos
test
mov
sbb
push
dec
jnp
mov
lock
mov
adc
pop
sbb
jno
out
into
daa
aas
mov
mov
or
jne
jle
repz
pop
mov
pop
push
pop
cwde
jge
pop
mov
imul
rcl
xchg
xor
xchg
call
mov
loop
lock
jnp
ins
arpl
mov
xor
push
xor
pop
jmp
stc
je
adc
sub
sbb
xchg
dec
xchg
dec
push
mov
mov
dec
test
data16
add
ss
pop
jg
xor
sub
(bad)
lds
ror
in
xor
retf
xor
add
icebp
icebp
adc
push
pop
mov
mov
adc
pop
sbb
addr16
ins
and
sub
add
sub
xor
add
lea
ss
scas
jg
jmp
stos
jl
pop
or
cmc
retf
call
add
jmp
or
xlat
or
inc
loop
dec
pop
or
movs
lea
movs
jg
sub
dec
imul
les
inc
jl
arpl
jle
lahf
stos
les
out
pop
and
into
cdq
movs
fisub
cdq
jle
repnz
mov
xchg
adc
adc
icebp
push
jno
(bad)
xchg
mov
ins
or
sub
lods
inc
dec
enter
jp
clc
cld
adc
inc
or
push
shr
pop
movs
out
and
inc
das
clc
out
or
fisttp
enter
xchg
out
push
lods
jb
jle
outs
movs
loop
inc
sbb
inc
sub
sbb
mov
push
fadd
sbb
fs
adc
cwde
inc
pop
rcr
sub
adc
jae
or
stos
inc
stos
fist
jae
movs
stos
mov
xchg
repnz
mov
adc
mov
cld
pop
mov
(bad)
pop
shr
(bad)
inc
cli
jmp
fnstcw
sti
mov
or
jo
outs
out
in
pop
out
cmp
out
outs
add
lods
or
jno
jb
add
mov
repnz
in
mov
xor
adc
fsubr
mov
retf
fmul
mov
repz
and
push
jo
xor
dec
mov
pop
sub
mov
jg
cmp
and
and
les
iret
xor
gs
mov
inc
pushf
bnd
inc
icebp
and
cmp
xchg
adc
jmp
aas
mov
or
xchg
push
stos
jmp
and
add
push
xlat
mov
jmp
test
stos
nop
inc
sahf
mov
xchg
inc
mov
mov
or
addr16
pop
popf
div
sub
lea
int
cli
out
sub
jp
push
lock
lods
fucom
push
imul
and
movs
inc
lock
jecxz
pusha
nop
dec
inc
adc
in
pop
push
stos
and
mov
aad
mov
lea
mov
popf
fcom
int3
inc
and
sbb
sbb
mov
push
test
pop
or
mov
popf
int3
mov
aam
jp
dec
jnp
ror
sub
jbe
xor
xor
mov
pop
scas
mov
call
jmp
test
icebp
hlt
mov
mov
add
jmp
enter
outs
sahf
ret
mov
push
adc
or
adc
mov
add
fisub
scas
lock
mov
je
hlt
add
sbb
mul
sar
push
in
imul
jecxz
hlt
movs
or
jns
(bad)
mov
test
push
and
sbb
mov
push
cmp
mov
push
xor
aas
jg
mov
add
imul
push
sar
leave
xchg
lods
pop
add
movs
sub
stos
and
jmp
cdq
call
pop
gs
stc
in
push
add
or
mov
repnz
xlat
loope
in
ret
and
cmp
cmc
mov
loopne
sub
jb
cmp
adc
fwait
ret
or
idiv
push
pop
pop
jne
mov
loopne
imul
dec
call
push
and
(bad)
sub
cmps
mov
cmp
icebp
imul
cmp
lds
push
cmp
mov
add
xor
dec
cmps
cmps
dec
or
add
daa
jl
add
fcom
cmps
xchg
scas
pop
cmp
jae
xor
sbb
retf
sahf
xchg
add
push
leave
(bad)
repz
pop
cmp
pop
and
push
inc
std
outs
add
retf
mov
adc
sub
and
fisttp
scas
sub
stc
sbb
ins
xor
jecxz
mov
pop
sub
imul
dec
loopne
ret
push
dec
xor
adc
xchg
jle
jbe
xor
mov
cmps
(bad)
out
jmp
jp
rcl
add
mov
dec
mov
mov
jne
fistp
loop
imul
cmp
and
cld
mov
int
inc
xor
mov
cmps
sub
out
mov
adc
push
sti
retf
dec
out
dec
inc
xor
mov
les
mov
xor
jne
sbb
mov
test
push
out
cmc
jns
ss
mov
sub
xchg
jae
(bad)
sbb
lds
call
and
push
lea
xor
cs
mov
popf
loopne
cmp
gs
mov
leave
test
cmp
rcl
jbe
jno
cmp
mov
test
out
dec
dec
(bad)
(bad)
shl
ds
mov
in
dec
cmp
mov
sub
hlt
pop
cmp
cmps
lgs
sbb
cmps
jp
cmp
sbb
sahf
popf
and
in
jmp
out
shl
shl
jns
add
test
sub
mov
xor
cs
xchg
mov
js
jecxz
js
leave
fmul
sub
or
into
inc
icebp
mov
sbb
sub
dec
xchg
out
(bad)
imul
mov
mov
and
mov
xor
out
mov
lock
adc
and
inc
jg
dec
out
mov
inc
movs
jp
test
pop
add
push
clc
mov
sub
fmul
mov
stos
or
movaps
push
mov
pop
int
sub
push
xchg
cld
sbb
adc
out
and
xor
add
fwait
(bad)
in
imul
mov
push
ret
(bad)
mov
fdiv
neg
shr
xor
dec
pop
push
jnp
and
or
jbe
mov
imul
mov
add
add
or
cmps
jmp
les
mov
mov
mov
push
iret
push
fwait
sbb
mov
dec
xor
out
push
inc
lahf
mov
test
or
jmp
mov
add
or
add
dec
sti
cwde
cmp
mov
sub
in
jne
shl
push
pop
cwde
jle
mov
push
jmp
mov
adc
xchg
pop
sbb
test
mov
outs
mov
ja
push
dec
mov
push
cmps
inc
cmps
inc
add
mov
xor
add
rol
dec
arpl
in
shr
mov
aad
xor
in
adc
xchg
lods
loope
adc
dec
icebp
xor
mov
add
ins
inc
outs
push
xor
ja
dec
fist
mov
scas
sbb
add
cmc
out
in
jae
cmp
lds
cmp
dec
fdiv
pop
xlat
in
or
rcl
es
cli
adc
dec
push
mov
pop
jp
jns
fcmovnb
lods
frstor
dec
jecxz
mov
mov
inc
into
test
or
cmp
jbe
ret
js
adc
dec
rcr
or
in
adc
and
mov
mov
rol
dec
ror
stos
shl
add
pusha
and
lods
add
in
mov
adc
fstp
stos
jnp
inc
arpl
loop
jmp
pop
mov
loopne
call
rcl
shr
cs
xchg
xchg
add
adc
data16
xchg
ins
xchg
in
bound
idiv
fwait
cmp
cmp
mov
shr
jg
test
pop
lock
mov
inc
dec
imul
pop
push
(bad)
aam
in
icebp
into
daa
lock
xor
push
test
out
mov
and
jg
fsub
loopne
mov
clc
add
add
adc
inc
lds
ds
push
call
and
js
div
xchg
test
aaa
nop
(bad)
or
jo
mov
cmps
mov
xor
in
mov
adc
ret
dec
fwait
xchg
test
push
imul
mov
sub
outs
push
xchg
test
dec
xor
mov
(bad)
jmp
(bad)
shl
and
push
in
jmp
and
adc
sbb
adc
push
test
and
sbb
mov
popa
cmc
ins
dec
lahf
push
cs
push
and
loopne
mov
(bad)
addr16
push
push
or
xor
adc
cli
out
xchg
popf
inc
and
mov
jge
enter
pop
ret
stos
or
pop
dec
xchg
ret
jbe
pop
lods
movs
shl
test
mov
mov
mov
scas
scas
test
jmp
push
xchg
fldcw
pop
(bad)
push
or
jo
and
sbb
rep
fist
jl
das
test
xchg
ret
int
outs
into
jle
es
imul
cwde
mov
mov
xchg
test
jl
(bad)
shr
xchg
lea
inc
cld
and
inc
scas
mov
nop
jno
fadd
fisubr
mov
jnp
sbb
or
out
xor
arpl
std
js
in
(bad)
cmp
jb
rcl
xor
test
and
xor
xchg
lods
sbb
xchg
cmp
sub
shl
fadd
out
test
test
pushf
jge
jmp
jge
inc
ret
or
cmps
ds
aaa
push
or
(bad)
fidivr
aas
retf
and
inc
ss
sahf
dec
push
cmp
inc
mov
call
xor
mov
inc
and
ret
jle
xor
repnz
or
pusha
imul
ins
push
(bad)
fldcw
pusha
xlat
mov
jnp
imul
int3
aam
jge
enter
lods
inc
inc
lods
iret
fcmovu
push
or
sub
shr
es
scas
sbb
pop
mov
adc
jne
cdq
enter
imul
jp
fild
push
shl
js
imul
jo
xor
or
mov
movs
lock
clc
fcomp
stos
pusha
inc
xchg
inc
jmp
push
out
adc
xchg
adc
add
retf
mov
xor
fst
fild
mov
fbstp
dec
adc
mov
pop
mov
retf
or
pop
push
sbb
jnp
xlat
jmp
test
push
mov
fcmovnbe
movs
dec
cmp
sbb
xchg
pop
enter
or
sbb
jmp
mov
mov
pop
push
dec
in
(bad)
fild
sbb
and
loopne
(bad)
pop
xchg
mulps
or
xor
ss
mov
fst
je
ins
loop
dec
and
mov
jne
sub
pop
out
retf
adc
mov
add
inc
pop
repz
push
mov
aam
scas
mov
sub
cmps
pushf
xchg
or
ins
je
jae
push
or
shr
pop
jl
cli
fdivr
and
out
jo
sub
fld
xor
or
lock
ins
ja
push
or
int3
and
popf
mov
jno
fwait
lds
fisubr
imul
push
xchg
popf
ss
adc
xor
rcl
push
mov
je
scas
sbb
mov
mov
imul
stc
cld
aam
pop
mov
adc
sbb
inc
xlat
fwait
mov
push
adc
arpl
arpl
ds
outs
je
in
or
xor
pop
or
lods
retf
xchg
ret
cmp
xor
test
retf
jmp
mov
jno
pop
dec
scas
inc
nop
adc
dec
hlt
mov
test
out
stos
bound
jae
xchg
xchg
outs
cmp
cmp
mov
xchg
mov
test
push
popf
fwait
add
sub
(bad)
repz
mov
cs
xor
xchg
jo
push
fidivr
jg
mov
lds
das
scas
aad
dec
scas
jle
mov
add
and
inc
xchg
clc
cmp
aas
xor
aad
mov
shl
icebp
mov
push
imul
popf
imul
jl
xchg
mov
cmp
hlt
jge
xchg
scas
call
jne
xchg
shr
pop
jo
repnz
pop
sub
or
aaa
enter
ja
hlt
dec
in
mov
and
aaa
sbb
ds
mov
and
sub
xor
js
sbb
cmp
in
imul
jbe
cmp
ret
xchg
mov
and
sub
dec
jle
movs
bound
loop
sti
mov
in
scas
adc
push
stos
movs
inc
mov
rcl
cmp
out
test
(bad)
pushf
or
xchg
mov
(bad)
mov
fistp
repz
xor
sub
sbb
sub
outs
jp
add
sub
sub
arpl
xchg
lahf
jo
dec
ret
dec
pop
adc
shl
mov
jmp
jl
pop
xchg
fimul
mov
jnp
jae
shl
push
test
adc
dec
pop
pop
add
ins
aad
add
daa
sub
mov
sub
(bad)
adc
(bad)
sahf
adc
cld
(bad)
ret
jb
test
les
push
clc
mov
cmp
sub
mov
btc
mov
mov
fimul
inc
xchg
mov
xchg
jno
sbb
data16
cmc
fld
jg
(bad)
sbb
pushf
or
dec
inc
loopne
pop
out
retf
ftst
add
mov
inc
outs
fwait
jmp
sar
int3
outs
(bad)
pop
cld
inc
adc
pop
mov
push
pop
mov
inc
icebp
pop
in
mov
and
jnp
icebp
push
das
jle
sub
ins
imul
shl
imul
pop
mov
pop
xchg
xchg
mov
rcl
xlat
lea
aam
dec
sbb
push
inc
inc
add
adc
dec
gs
js
mov
ss
clc
lods
mov
cmp
sub
jne
icebp
fs
scas
das
fist
or
ja
or
pushf
mov
(bad)
lods
dec
outs
outs
shr
jle
movs
adc
jg
(bad)
std
sub
sub
xchg
add
inc
sbb
mov
push
mov
jbe
subps
push
cli
(bad)
call
pop
mov
push
push
in
iret
les
repz
int
icebp
add
mov
repz
adc
ins
loop
mov
out
iret
fiadd
jp
add
sbb
mov
inc
test
jp
cmp
pop
sub
sbb
pop
cdq
mov
fsubr
(bad)
mov
xor
addr16
into
test
out
pop
dec
inc
(bad)
cld
sbb
inc
xor
shl
mov
inc
and
mov
pop
aad
ins
stos
ret
fld
xchg
add
or
push
movs
xchg
mov
or
dec
aaa
loopne
popa
div
pop
xchg
enter
sub
dec
xor
je
mov
clc
xor
adc
(bad)
imul
cmps
fwait
mov
add
sahf
sar
xchg
add
(bad)
jne
pop
mov
mov
addr16
rcr
add
(bad)
gs
pusha
lea
(bad)
dec
daa
lea
sub
leave
pop
jl
pop
lock
sbb
inc
cmp
jo
xor
mov
js
fsub
retf
ret
adc
daa
and
ficom
and
sahf
in
pop
push
fmul
mov
fxch
cld
mov
outs
push
dec
stos
mov
cli
cmp
pop
loop
xchg
data16
push
movs
cli
or
jecxz
sbb
jbe
call
lods
cmp
test
pop
mov
xchg
inc
fistp
sub
push
bnd
jecxz
cmp
enter
ds
cmp
stos
dec
or
fistp
push
in
leave
jg
sbb
and
xor
jge
push
sub
std
jo
fmul
mov
adc
movs
jno
(bad)
call
inc
hlt
lds
ins
sub
ds
cdq
adc
jp
xchg
xchg
mov
lock
push
cwde
test
inc
enter
jmp
xchg
mov
call
rcl
stos
cmp
jmp
dec
pop
sbb
rol
dec
leave
xor
mov
stos
mov
call
es
ja
test
jmp
jmp
cmc
(bad)
or
popa
imul
sbb
in
cmps
test
cmp
out
push
mov
inc
popf
inc
cbw
inc
mov
rol
aaa
push
fisubr
in
lahf
dec
retf
in
xchg
mov
and
jnp
push
pop
js
mov
inc
jmp
pop
add
xchg
cmp
fidiv
rcl
and
out
xchg
(bad)
pushf
movs
cmp
retf
or
pushf
loopne
inc
fidiv
stos
inc
push
push
mov
add
ret
push
fiadd
or
rcr
lock
xchg
xlat
mov
repz
clc
loop
inc
add
xchg
es
sbb
lea
mov
push
inc
sub
mov
xchg
sar
xchg
aad
mov
(bad)
xor
xchg
mov
pop
cwde
xor
ret
cmpps
enter
loop
fs
xchg
xor
movs
(bad)
sbb
push
push
dec
outs
add
mov
sub
or
push
test
xlat
inc
inc
loop
fnstenv
sub
sbb
adc
pop
ret
outs
in
out
jno
push
xor
xor
mov
imul
retf
in
stos
adc
movs
ins
pop
xchg
lods
sub
(bad)
mov
ret
daa
xchg
cmps
test
or
cwde
cld
xor
mov
xor
adc
repz
sub
jb
fadd
sbb
popa
mov
mov
cmp
fwait
pop
mov
jbe
hlt
xor
pop
or
inc
add
in
inc
push
outs
mov
mov
push
jo
dec
jle
push
adc
and
adc
in
movs
rcl
mov
add
ins
add
jno
cmp
push
adc
push
int3
stos
popf
sbb
cld
pop
push
mov
push
fs
xchg
test
mov
(bad)
aaa
lds
movs
ror
js
adc
sbb
test
mov
ficom
ret
xchg
pop
cli
pop
int3
cmps
sti
or
pop
das
or
popa
cmp
jbe
adc
outs
jb
or
inc
movs
das
shr
test
sub
mov
test
adc
fs
mov
inc
(bad)
pop
ret
fimul
dec
add
(bad)
(bad)
dec
xlat
add
outs
imul
jmp
in
fldcw
add
inc
pop
cld
sub
pop
and
mov
adc
lds
imul
xor
lods
ins
cli
cmp
test
leave
adc
cmps
mov
in
inc
push
dec
mov
call
(bad)
popf
sub
pop
ds
xor
mov
push
adc
sahf
mov
adc
sbb
and
(bad)
push
icebp
push
call
inc
xchg
add
out
mov
jbe
fnsave
clc
sub
sti
addr16
push
pusha
bound
out
ins
dec
aad
xor
out
jg
cli
stc
daa
mov
sub
add
aas
pop
lea
pushf
data16
fsub
loop
(bad)
int
das
mov
mov
mov
pop
sbb
jae
and
inc
lods
adc
sbb
mov
popf
xlat
jmp
fidivr
jge
push
(bad)
mov
retf
jmp
retf
adc
add
sbb
mov
pop
imul
add
jmp
xor
and
xor
jmp
imul
daa
sbb
enter
push
mov
sub
xchg
jl
push
pop
push
shl
addr16
int3
and
push
push
push
test
cmp
cmp
push
or
in
push
sbb
xor
add
xchg
das
in
cmp
or
iret
cli
iret
lahf
push
add
mov
cmp
jmp
and
jo
(bad)
outs
adc
mov
add
xor
sar
xor
cs
out
jo
into
mov
pushf
imul
sub
push
je
test
dec
clc
cmp
ret
mov
aaa
cs
push
clc
jns
mov
cmp
mov
mov
jmp
movs
xor
fdivr
sbb
movs
xchg
test
mov
rcr
pop
pop
loopne
test
sub
dec
fisubr
jo
lds
fwait
mov
mov
fldz
cmp
jbe
(bad)
call
popa
dec
dec
test
popf
pushf
ss
retf
xchg
pop
dec
cmps
mov
movs
dec
and
fdiv
sti
stos
xlat
js
mov
cwde
call
js
je
(bad)
cmp
jge
leave
mov
mov
ret
mov
call
jb
(bad)
imul
adc
into
call
aad
test
popa
jl
pop
div
xlat
lods
(bad)
mov
mov
dec
xchg
sub
(bad)
fs
mov
cmps
movs
mov
dec
data16
or
mov
and
mov
idiv
arpl
fisttp
icebp
and
outs
jns
push
jle
cmpxchg
fadd
shl
retf
dec
cmps
cmp
push
xor
(bad)
sti
cld
std
pop
dec
pushf
xlat
and
adc
ret
mov
(bad)
mov
pusha
pop
mov
retf
dec
ja
cmp
mov
ja
or
(bad)
cmc
fisubr
add
mov
retf
fld
mov
sub
cmp
(bad)
cmp
pop
js
fisttp
clc
inc
pushf
mov
mov
int3
jbe
adc
int
int
dec
and
pop
bts
jmp
jge
cmp
imul
mov
ins
cld
test
jmp
cmp
(bad)
fnstsw
add
mov
les
sub
jae
div
dec
aad
and
push
xchg
mov
add
enter
mov
lock
in
aas
mov
fisubr
cli
sub
adc
test
push
add
call
inc
dec
sub
sbb
jno
cld
jmp
push
and
imul
inc
in
add
adc
push
add
xor
sbb
and
les
cdq
jl
sbb
sbb
fstp
jne
jge
fdiv
xchg
movs
arpl
nop
in
jecxz
and
jns
cmp
add
ret
pop
sbb
pop
loope
call
into
push
into
adc
mov
repnz
cmp
xchg
mov
icebp
sub
arpl
lock
mov
ins
and
stos
call
aad
cmc
jecxz
cmc
sub
gs
clc
cmc
pusha
add
retf
lods
sbb
sub
(bad)
jae
fwait
mov
xor
dec
arpl
mov
hlt
or
loopne
mov
leave
cdq
sbb
enter
xor
(bad)
jp
in
scas
cwde
inc
iret
clc
(bad)
jp
les
add
pop
add
xor
push
add
pop
arpl
out
leave
inc
sbb
ds
xor
les
and
shr
loopne
int
push
and
pop
clc
lods
jge
cmp
retf
add
jmp
loope
inc
movs
sbb
mov
loop
(bad)
mov
dec
push
jp
icebp
xor
add
cmp
ja
inc
xor
add
mov
dec
mov
in
mov
pop
out
popa
sub
sbb
movs
mov
idiv
jle
inc
call
sub
inc
popf
jge
push
dec
jge
repz
popf
sub
or
dec
and
or
outs
outs
fstp
add
mov
shl
outs
cmp
arpl
arpl
jb
sub
mov
arpl
add
aad
leave
outs
fsub
jnp
jo
cmp
shl
mov
out
mov
fwait
sbb
addr16
mov
mov
outs
or
or
arpl
sbb
call
or
out
dec
xor
pop
fs
ds
loopne
xchg
addr16
jmp
xchg
pop
jb
out
jo
xchg
lods
loope
add
xchg
icebp
lahf
cmps
icebp
sbb
xchg
arpl
xchg
push
add
pop
jmp
arpl
in
pop
mov
ss
inc
xchg
push
sub
sbb
nop
pop
(bad)
pop
and
or
neg
mov
les
and
or
mov
call
aam
sbb
adc
push
lock
ins
adc
out
mov
mov
jmp
es
and
stc
aas
lods
cmps
mov
push
loop
cmp
cs
(bad)
test
inc
stos
sbb
shl
addr16
inc
loope
adc
call
pop
mov
mov
pop
jp
adc
(bad)
clc
sahf
(bad)
mov
push
mov
jg
enter
jns
jl
ss
mov
iret
mov
repnz
pop
and
hlt
and
pop
jns
sub
inc
dec
fwait
enter
cmc
stos
mov
mov
test
ret
loop
stos
cmp
pop
and
leave
cmps
pop
xchg
aaa
ret
pushf
sub
xchg
push
dec
cmp
mov
mov
fwait
jae
sar
xor
sbb
mov
in
cmp
loop
mov
xor
fsub
(bad)
pop
pop
sbb
clc
aad
add
fidiv
xchg
lods
fidiv
out
leave
mov
shl
push
retf
adc
mov
cmp
vandnpd
mov
xchg
adc
dec
adc
jnp
(bad)
cld
jge
add
ret
pop
xor
fisub
inc
jl
pop
hlt
add
push
(bad)
jg
dec
push
fsubr
push
(bad)
cmp
repz
in
jge
(bad)
jmp
sqrtps
jo
aas
push
xchg
dec
in
or
xor
cwde
jne
or
ror
lods
packssdw
sti
sahf
mov
aam
xchg
or
mov
lods
add
xor
sub
dec
pop
pusha
fild
adc
xchg
(bad)
repnz
jbe
sbb
pop
xlat
xchg
sahf
sub
leave
cmp
cmp
fsub
xor
test
mov
jmp
or
sar
cmp
rcr
mov
fwait
(bad)
js
test
cdq
jge
ins
cmp
dec
inc
add
out
sub
add
xchg
pop
mov
and
and
push
pushf
pop
leave
hlt
or
mov
xlat
mov
ins
cmp
fwait
mov
imul
mov
repz
dec
jae
xchg
data16
and
loopne
mov
pop
aas
dec
(bad)
sbb
scas
mov
mov
cwde
push
mov
pop
jl
fimul
mov
mov
scas
sbb
cdq
(bad)
lock
and
cmp
movs
jmp
inc
mov
out
addr16
pop
add
je
xor
dec
stos
and
je
push
adc
jmp
ds
mov
mov
inc
mov
xchg
hlt
inc
xchg
adc
bound
push
add
xchg
retf
jns
icebp
(bad)
stc
inc
out
xlat
xor
sbb
mov
jl
mov
(bad)
mov
fstp
stos
aad
pop
rol
dec
mov
pop
ret
out
xor
mov
scas
mov
es
(bad)
jb
sbb
pop
xchg
xchg
inc
xor
pop
(bad)
(bad)
stos
stos
jg
dec
xchg
ret
es
jp
push
jmp
pop
and
mov
jo
in
sahf
xchg
mov
push
std
push
pop
pop
mov
adc
jae
or
out
lods
fabs
mov
cmps
push
push
push
cmp
adc
dec
out
retf
xchg
inc
(bad)
fucom
add
cli
xchg
js
or
jne
jae
inc
mov
adc
icebp
cmp
ins
lahf
fs
cs
arpl
(bad)
jmp
cmp
jns
repz
adc
repnz
inc
jbe
(bad)
sub
xchg
dec
ins
mov
mov
outs
sub
xlat
sub
xchg
(bad)
jl
cs
repnz
jno
mov
ja
std
stos
and
fadd
ret
add
mov
bound
push
pop
push
shl
ffreep
mov
jno
ret
cmp
sub
dec
outs
(bad)
or
pop
push
or
hlt
push
mov
push
inc
int3
mov
test
pop
adc
leave
adc
rol
or
imul
out
xor
adc
and
sub
mov
pop
and
ins
rol
ss
xor
xchg
pop
or
test
pop
addr16
sbb
cli
inc
outs
dec
jle
xchg
aam
mov
inc
cld
add
pop
and
mov
adc
addr16
add
jae
jge
sahf
sbb
xor
mov
es
ds
lods
jmp
push
adc
popa
mov
dec
fnstsw
pop
lods
aas
inc
cmp
or
test
pop
jae
inc
push
(bad)
adc
fdiv
push
or
sti
pusha
cmps
and
lea
push
sub
xchg
and
cld
lds
adc
xchg
or
mov
daa
pop
cmp
dec
in
jmp
mov
outs
test
push
out
jmp
xchg
mov
dec
daa
outs
xchg
push
cli
pop
(bad)
scas
ins
sub
xchg
loop
xchg
inc
sub
mov
hlt
or
sub
std
repz
cmp
pushf
scas
pop
call
cmp
(bad)
jae
icebp
bnd
ja
mov
xor
add
fmul
iret
into
shl
test
mov
enter
adc
popa
dec
rol
or
xchg
cmp
dec
(bad)
dec
sbb
test
scas
fdivr
jno
mov
and
push
inc
out
out
mov
lahf
aas
jmp
js
outs
bound
nop
xchg
cmp
ror
sbb
inc
inc
xchg
out
mov
adc
lods
das
call
mov
pop
pop
scas
pop
stos
cmp
dec
pop
push
jge
ja
inc
out
push
or
inc
cmp
(bad)
sub
lea
test
sub
cdq
sbb
mov
stos
cmp
ins
addr16
jecxz
pop
mov
adc
dec
mov
les
lds
out
dec
push
jne
pop
jbe
ja
mov
inc
jmp
mov
fisubr
es
out
pop
sub
call
aas
add
cmp
sub
je
xlat
sbb
(bad)
dec
sub
les
mov
push
popa
popf
xchg
jmp
dec
jb
pop
call
mov
outs
adc
repz
loop
mov
xlat
xor
jnp
jo
call
mov
fimul
(bad)
call
fsub
(bad)
xorps
and
and
mov
ret
inc
cmp
dec
lods
xchg
fucomip
pop
mov
iret
fadd
mov
jecxz
pop
call
sub
xlat
xchg
xchg
mov
xor
mov
jg
dec
scas
push
imul
repz
js
test
je
xchg
jmp
jno
adc
dec
out
fisubr
aam
into
xchg
cmp
(bad)
nop
mov
loope
cmp
clc
mov
rcpps
(bad)
jmp
pop
push
mov
xchg
lahf
neg
mov
in
push
shl
mov
jns
ja
hlt
imul
mov
push
xlat
sub
stos
sbb
enter
arpl
mov
fild
xor
add
rol
xchg
mov
and
in
bound
nop
daa
test
stc
adc
dec
ins
in
into
popa
mov
mov
aam
pop
push
cs
test
loope
mov
dec
mov
jge
push
out
adc
push
mov
xlat
enter
sbb
xor
xchg
nop
mov
jne
into
sub
mov
push
shl
sbb
push
movs
jae
test
mov
stos
aas
push
or
xor
das
loopne
adc
dec
in
es
int3
pusha
pop
or
in
out
sahf
inc
pop
int
mov
(bad)
pop
adc
mov
fldenv
cmps
(bad)
mov
pop
js
jg
into
xchg
and
inc
lahf
add
gs
jnp
cmp
(bad)
loopne
mov
not
fcomp
lock
jns
les
push
xchg
or
sbb
ret
xor
push
xchg
pop
jae
fwait
enter
test
cld
xchg
cmp
xlat
lea
movs
jno
or
mov
in
ss
mov
(bad)
pop
push
pop
mov
shl
inc
div
jbe
sub
xor
jnp
les
mov
and
sbb
or
dec
(bad)
cmp
pusha
xchg
pop
scas
cdq
inc
aaa
jne
fist
inc
cdq
aam
jbe
inc
sbb
retf
dec
and
xchg
shl
xlat
js
or
pop
xchg
cld
lahf
jp
fldenv
fcmovne
xchg
sub
jl
and
push
mov
cli
mov
popa
lods
js
add
mov
mov
leave
in
or
mov
push
imul
xchg
inc
sbb
aam
jo
mov
js
mov
add
in
ret
outs
adc
mov
or
jnp
pop
cdq
xchg
enter
and
ins
xor
sbb
in
xchg
dec
sbb
aas
rol
mov
add
adc
add
push
loopne
mov
jge
push
(bad)
jae
jbe
dec
test
push
sbb
sub
add
jl
dec
in
and
mov
mov
cmp
sub
add
cmp
mov
cwde
cld
push
push
aas
push
call
cwde
je
cmps
ss
inc
push
inc
cmp
repnz
sti
mov
sub
out
ret
sbb
mul
add
addr16
scas
nop
mov
mov
and
repnz
mov
sbb
add
jno
lock
pop
dec
shl
shl
mov
push
hlt
fistp
sub
(bad)
icebp
les
sub
xor
ret
mov
push
cwde
pop
adc
mov
in
mov
and
movs
outs
push
adc
fild
lods
and
cmps
inc
pop
scas
sbb
add
jl
stc
adc
scas
xor
mov
mov
loope
out
sbb
jmp
pop
stos
and
push
sub
jno
repz
ret
test
mov
stos
stos
cmp
lods
ficom
int
sub
pop
xor
jmp
retf
jecxz
xchg
mov
bound
jl
loopne
mov
cmp
stos
or
popa
std
push
loop
out
xchg
imul
ins
inc
cdq
xor
pop
icebp
cmp
rcr
mov
sub
lds
loopne
mov
dec
xchg
push
pop
lods
adc
stos
movs
sub
jecxz
mov
scas
jbe
push
aam
ja
loopne
outs
ret
mov
jge
fidiv
or
xchg
dec
dec
mov
jb
pop
ja
or
adc
sub
dec
and
in
dec
test
push
dec
adc
(bad)
push
je
sbb
ins
mov
(bad)
sub
mov
imul
cmps
sbb
mov
mul
cmp
sti
data16
adc
pop
dec
lea
adc
call
iret
jge
push
in
aas
out
in
cmp
xchg
test
inc
push
pop
add
mov
mov
add
ds
xchg
popf
test
add
add
pop
fimul
loop
cmc
adc
and
or
adc
retf
nop
pop
dec
jb
and
enter
ins
sbb
int3
cli
mov
ss
int3
stos
cs
adc
sahf
or
adc
add
std
push
popa
ret
ja
mov
cmp
sbb
jmp
mov
call
test
mov
std
dec
jmp
sub
mov
push
stc
mov
in
xor
ret
dec
or
stc
jge
add
(bad)
cmc
push
fld
outs
mov
jnp
dec
mov
sbb
push
dec
inc
jle
fbstp
cmp
jecxz
mov
dec
mov
jecxz
fldln2
adc
sbb
jo
cmc
or
scas
ins
add
dec
or
pop
hlt
add
les
jmp
mov
sub
je
ja
push
pop
and
adc
leave
lock
add
mov
and
leave
lods
movs
cmp
bnd
iret
int3
sahf
push
clc
and
pop
dec
dec
fmul
fmul
ret
stc
mov
or
dec
xchg
sub
or
jno
sub
sub
clc
xor
nop
xchg
jne
lods
push
cmp
shl
add
shr
dec
lahf
iret
in
adc
out
mov
jae
dec
cli
pop
add
push
cmc
pop
test
dec
aad
pop
jp
cmp
in
mov
xor
(bad)
in
jg
retf
jle
ins
out
cld
sar
jns
mov
popf
out
add
dec
retf
xchg
xlat
nop
jnp
sbb
sbb
inc
dec
mov
clc
pushf
fwait
adc
lock
popf
add
sub
(bad)
jmp
mov
imul
enter
stc
pop
outs
movs
aam
jge
fadd
push
out
sub
not
mov
dec
cwde
jge
jmp
adc
fs
cmp
lock
call
and
sbb
dec
test
pop
cmps
adc
es
dec
out
aaa
add
rol
(bad)
push
jg
cmp
add
rol
call
ss
xchg
mov
rep
add
in
or
sub
push
test
mov
addr16
fnstcw
xchg
lods
and
ficomp
test
iret
xlat
fidiv
ja
cs
sub
or
sub
cmp
and
cmp
fsubr
inc
jne
call
js
and
int
dec
stos
mov
(bad)
gs
xchg
push
or
pop
pop
or
in
xchg
cmps
stc
push
leave
ror
js
pop
mov
cmps
ss
icebp
add
add
and
xchg
addr16
adc
out
cwde
(bad)
clc
jo
sbb
jmp
or
clc
out
cmps
mov
or
mov
icebp
test
jno
cmps
ret
jno
adc
fwait
das
adc
stos
mov
and
add
and
mov
mov
mov
cmp
sbb
loop
or
int
jecxz
jmp
push
and
sub
xchg
pusha
inc
mov
pop
mov
rol
sub
fild
dec
push
sbb
das
imul
push
inc
fld
cmp
sub
mov
jl
rol
sbb
fsub
sbb
inc
xlat
fimul
or
cdq
ret
cmp
sub
inc
out
pop
(bad)
outs
mov
xor
add
sahf
push
add
sbb
nop
cmps
test
cmps
and
mov
(bad)
cli
xchg
cmp
or
rcl
fdivr
into
mov
stos
push
fs
cmp
(bad)
shl
repz
fst
stos
add
aas
add
or
mov
rcl
ret
fwait
cmps
adc
outs
imul
mov
shl
or
cmp
cmp
cmp
lea
cld
xchg
call
adc
imul
mul
dec
repnz
popa
xchg
(bad)
cmp
cmps
xor
sub
cmp
xor
push
mov
or
pusha
and
aaa
xchg
test
mov
out
fist
push
inc
adc
gs
cdq
out
jecxz
adc
xchg
xor
jle
xor
sahf
xchg
sub
fdiv
sbb
mov
mov
faddp
(bad)
mov
add
xchg
mov
es
add
clc
adc
fld
cmp
or
jno
ja
inc
add
inc
mov
sub
movs
xor
and
jne
xchg
fcmovu
mov
mov
mov
sbb
imul
pop
(bad)
push
(bad)
retf
xor
adc
sti
adc
push
dec
or
add
mov
fist
jl
cmps
dec
sar
int3
and
inc
pop
sbb
ror
sub
rol
jle
jns
add
je
ds
xor
mov
inc
mov
lea
idiv
mov
leave
jns
inc
out
(bad)
pusha
cmps
test
cwde
xchg
jb
cli
out
xchg
pusha
sbb
mov
inc
cmp
in
adc
adc
data16
nop
dec
push
js
das
leave
add
hlt
stos
adc
inc
jl
fdiv
pop
or
push
cmc
dec
xchg
xchg
and
inc
pop
dec
(bad)
mov
ror
loope
loope
mov
sbb
stos
add
pop
sti
mov
vsubsd
(bad)
and
icebp
xchg
xchg
jbe
sub
test
add
or
add
mov
stc
add
(bad)
call
in
push
dec
cld
and
sub
fsub
test
shl
fcom
je
aas
mov
ds
adc
add
bound
pop
xchg
call
and
or
sub
push
pop
aam
in
fbstp
or
dec
in
(bad)
clc
cmc
fst
sahf
aam
aad
jmp
pop
sub
hlt
popa
fcmovnb
stos
pop
(bad)
sub
pop
add
test
ja
mov
gs
mov
js
movs
inc
mov
sub
jle
and
call
js
shl
ja
mov
sahf
test
in
(bad)
jl
cdq
in
addr16
adc
mov
jp
popf
mov
je
mov
(bad)
ja
xchg
repz
cmp
stc
neg
(bad)
imul
popa
xor
cmc
adc
lods
bound
push
mov
call
clc
adc
test
sub
mov
(bad)
fidivr
call
xor
movs
xchg
jbe
jbe
out
add
dec
inc
inc
imul
sub
push
pop
mul
movs
sub
mov
cmp
daa
std
aaa
or
(bad)
inc
add
fwait
adc
loope
shr
cmps
and
sub
icebp
(bad)
jmp
jge
and
mov
jnp
lods
sub
fdivr
jge
cwde
movhps
dec
add
fdivr
or
test
retf
adc
cmp
into
inc
clc
aaa
cmp
adc
xchg
push
xchg
mov
out
lods
rcl
push
stc
lock
mov
retf
adc
fcomp
inc
stos
and
pop
(bad)
iret
pop
shr
jne
ret
xrelease
xchg
dec
mov
pop
sar
fsub
scas
mov
vpmulhuw
mov
mov
stos
fild
lds
xchg
stc
dec
inc
adc
pop
jcxz
sbb
outs
and
and
out
mov
clc
or
push
cmps
xor
mov
fstp
adc
or
ffree
mov
loopne
or
bound
enter
js
(bad)
mov
push
loope
loop
rcr
sti
enter
pop
xchg
adc
cmp
jge
jmp
xchg
test
jl
pop
int3
popa
mov
sbb
add
lea
out
rcr
xchg
dec
xchg
aam
fwait
pop
dec
in
aaa
pop
add
mov
mov
push
or
dec
retf
xchg
cmps
dec
cmps
pusha
loop
sbb
lea
not
out
mov
fidiv
pop
xor
jmp
repnz
add
icebp
inc
xor
dec
and
push
sub
out
jl
pop
inc
dec
sbb
push
outs
xchg
cld
dec
(bad)
sub
repnz
test
in
jecxz
xchg
clc
mov
mov
and
cli
lods
outs
scas
jmp
jmp
stc
(bad)
lods
mov
sub
ins
cld
stos
lods
js
das
sub
cwde
push
xchg
pop
(bad)
jmp
sbb
push
sub
bound
mov
neg
mov
fcom
sub
fs
mov
dec
sbb
jno
in
xor
in
push
or
jb
mulps
movs
mov
call
jns
ret
ret
ins
call
and
repnz
cmp
js
repz
ins
sti
xor
adc
imul
pushf
arpl
jo
adc
pop
xchg
popa
push
push
aam
in
(bad)
cmp
push
add
adc
push
xchg
xchg
loop
popa
add
fdivr
retf
jo
mov
es
add
fstp
adc
popa
test
push
shl
aas
mov
push
mov
cld
push
inc
or
sub
mov
cmp
into
repnz
hlt
test
mov
fidiv
mov
in
iret
mov
call
mov
pop
jp
mov
push
out
jne
xchg
loopne
repz
cmc
push
movs
test
mov
pop
cwde
jp
fcomp
mov
popa
push
pop
push
stos
out
fbld
xchg
jno
ret
adc
push
stc
fsubr
add
sub
lods
xor
jbe
mov
repnz
jecxz
jae
push
test
push
iret
daa
cwde
fst
scas
jp
les
inc
lods
mov
adc
mov
inc
lods
comisd
stos
jge
sbb
or
mov
loopne
or
add
jno
push
jmp
jle
cmp
test
mov
fidivr
outs
and
inc
jle
push
sub
push
push
mov
cmc
cdq
std
call
jl
sub
add
repz
punpcklwd
sar
fsubp
popf
sbb
test
mov
jo
div
pop
retf
aam
shl
mov
add
bound
fdiv
daa
lods
inc
inc
mov
dec
in
xchg
sbb
retf
es
test
(bad)
fs
sub
lock
sbb
jb
out
add
jns
inc
jge
cmp
adc
hlt
cmp
cwde
mov
jo
cmp
mov
sub
dec
mov
sahf
xor
pop
(bad)
sbb
pop
out
ds
ja
and
pop
mov
mov
jns
cdq
rcr
je
je
pop
push
ret
fild
into
add
sti
jle
inc
jnp
lds
loope
xchg
inc
jnp
stos
and
test
inc
shl
dec
in
jle
sub
inc
aam
stos
iret
push
inc
je
fldenv
adc
jno
cmpxchg
popa
push
std
sub
cmp
or
push
sub
pop
and
push
add
imul
test
(bad)
mov
call
call
mov
mov
push
sbb
cmp
into
mov
into
push
push
mov
std
dec
addr16
adc
dec
repnz
outs
xor
jp
outs
les
retf
int3
dec
aas
mov
mov
mov
cld
daa
icebp
adc
arpl
dec
(bad)
std
fiadd
mov
xchg
jno
inc
adc
sub
int
rcr
xchg
push
and
outs
push
int3
mov
lahf
pop
cli
and
pop
stos
dec
call
dec
adc
jb
push
call
in
mov
cmp
adc
in
mov
mov
pusha
imul
xor
mov
pusha
lahf
and
test
mov
leave
test
retf
hlt
sub
inc
dec
push
push
lods
pop
movs
adc
nop
ret
scas
cwde
and
inc
xchg
pop
add
sub
mov
fsubr
cmp
and
cmc
ret
jle
xor
push
out
jl
repnz
pushf
push
ror
add
dec
cmp
sub
and
pop
sub
mov
popa
and
fnstcw
jl
and
xor
jmp
dec
fidivr
pop
jl
add
adc
outs
add
test
mov
mov
xor
in
lods
mov
inc
repz
outs
sbb
mov
daa
mov
xor
pop
fcmovbe
fwait
cli
mov
pop
rol
in
push
shl
inc
mov
mov
xor
bound
scas
jl
sti
and
jecxz
jne
movs
jmp
scas
jb
mov
mov
loop
loop
inc
xchg
adc
sar
jmp
out
or
dec
add
fisub
jb
pop
jp
bound
dec
out
pop
cmp
push
cmp
mov
adc
retf
lds
lods
jae
jno
jb
rol
loope
and
lds
out
sbb
add
push
jne
mov
aaa
pop
sub
call
scas
cmp
or
pop
enter
mov
out
mov
retf
loop
addr16
inc
jge
and
pop
dec
adc
fistp
sahf
mov
sub
jmp
(bad)
out
retf
inc
fld
cwde
data16
(bad)
ins
pop
shr
cmp
add
daa
into
push
cmp
outs
inc
stos
ds
sbb
or
bound
mov
fnstcw
push
fst
lahf
in
rol
push
and
xor
sbb
jp
or
push
xchg
xor
adc
test
pop
sub
pop
inc
adc
(bad)
or
mov
outs
add
movs
xor
mov
sbb
adc
mov
cli
xor
push
inc
mov
cli
inc
repnz
popf
ds
add
mov
hlt
pusha
pop
clc
sub
push
mov
adc
sbb
jne
sub
test
out
shl
mov
adc
mov
xchg
jb
out
inc
cld
mov
inc
xchg
or
mov
cmp
dec
rcr
fsubr
sahf
or
push
pop
sar
jmp
std
jne
pop
not
cmps
sub
mov
mov
aas
(bad)
lock
repz
pop
cmp
int
in
imul
sbb
dec
les
out
sbb
sub
mov
add
cld
outs
pusha
mov
pop
lea
xchg
jle
mov
outs
call
inc
add
xor
inc
jmp
not
jno
inc
js
jmp
and
mov
jnp
movs
and
inc
dec
aad
movs
(bad)
jecxz
popa
cmp
mov
jg
sbb
std
xchg
rol
and
pop
ffree
into
test
lds
hlt
sar
enter
sbb
shr
(bad)
cdq
leave
leave
jecxz
repnz
cmp
cmp
je
jno
dec
xchg
or
mov
xchg
jecxz
or
sti
add
xor
xor
jno
dec
jge
sub
push
hlt
sub
add
outs
call
pop
and
fiadd
mov
dec
xor
sbb
cmp
fcmovne
xchg
inc
(bad)
mov
bound
mov
adc
xlat
std
and
jbe
mov
es
ins
in
iret
xor
jo
mov
dec
jne
sbb
sub
sub
aad
xchg
mov
pushf
sbb
mov
bound
mov
lahf
cmp
fst
lahf
xor
(bad)
xchg
mov
dec
mov
fstp
out
mov
mov
pop
(bad)
retf
mov
loope
sub
jl
lahf
and
and
push
outs
in
and
jae
mov
mov
lods
cmp
push
cmovp
mov
inc
sub
inc
xor
cmp
adc
mov
pushf
pusha
(bad)
dec
bound
jb
inc
adc
dec
push
add
mov
jge
test
pop
fst
enter
ja
xchg
dec
inc
or
and
and
cli
fs
call
fcmovne
ror
xchg
loope
into
pusha
std
jl
pop
mov
push
sbb
add
mov
cmp
xchg
(bad)
call
ins
jbe
pop
neg
ret
xchg
inc
pusha
push
in
ret
xor
push
fisub
punpckhbw
stos
cmp
shr
fsub
jecxz
add
fdivr
(bad)
jnp
xor
repz
pusha
out
pop
or
mov
out
push
push
inc
fist
mov
xchg
push
sub
jg
mov
jbe
hlt
call
loopne
aas
or
sbb
xor
adc
loopne
xor
mov
and
xor
sub
fcmovnbe
pop
push
mov
aad
arpl
call
outs
fcomp
add
fisttp
loop
rcr
aaa
add
cmp
inc
pushf
pop
mov
and
pop
sub
lea
pop
mov
push
loope
and
pop
test
popa
sbb
or
dec
mov
je
mov
and
sbb
sub
ins
cmp
div
call
push
pop
xchg
cs
mov
push
lds
test
push
push
(bad)
jae
sbb
or
bound
adc
test
ins
mov
in
test
jb
call
cmp
ret
lds
rcl
int3
inc
cmp
mov
movs
inc
mov
dec
cmp
jge
xchg
out
test
arpl
pop
jne
adc
out
fsub
js
mov
pop
pop
(bad)
or
rcl
das
addr16
ret
(bad)
mov
and
fbld
jo
inc
sbb
adc
retf
add
test
jb
inc
cmp
test
mov
icebp
stc
xchg
shl
adc
out
inc
(bad)
pop
neg
icebp
inc
lods
(bad)
shl
push
retf
fst
stos
add
lods
lods
xchg
(bad)
into
dec
in
and
inc
dec
mov
(bad)
fwait
xor
inc
jno
push
push
out
jmp
in
push
add
in
sbb
push
inc
inc
push
add
into
dec
cwde
jmp
cli
jecxz
push
inc
popf
stc
and
sbb
mov
out
add
bound
ja
repz
sar
mov
jl
fisttp
or
xchg
jp
call
mov
cmp
pop
push
and
test
adc
shr
(bad)
mov
dec
pop
loopne
mov
jns
aas
cmp
xor
pop
adc
or
adc
jno
xchg
jne
push
pop
loope
test
jbe
push
or
movs
cmp
vmovhpd
push
outs
cmp
mov
ret
outs
mov
inc
cmp
(bad)
out
fs
jbe
add
aaa
ds
push
jnp
rol
hlt
mov
into
mov
popf
out
push
adc
push
xchg
jmp
inc
pop
imul
(bad)
(bad)
enter
cmp
aam
(bad)
loopne
sub
jns
mov
rcl
jecxz
sub
pop
repnz
arpl
fdivrp
sbb
cmps
ffreep
in
test
dec
xor
cmp
mov
inc
xor
mov
jmp
out
mov
jne
or
pop
xor
shr
inc
or
or
inc
test
pop
or
mov
cmp
or
push
rcl
fdiv
hlt
sbb
pushf
dec
mov
sti
repnz
and
rcl
mov
xor
lods
jb
dec
xchg
and
xor
pop
push
dec
mov
mov
js
sar
arpl
xor
adc
clc
pop
add
and
and
in
rol
movs
sti
loop
cli
cld
icebp
dec
and
sti
fmulp
int
stos
cmp
pop
mov
mov
cmp
push
call
test
aas
sub
retf
jne
add
inc
xlat
inc
fild
mov
imul
mov
xchg
stos
cli
test
in
aas
pop
push
add
xchg
mov
daa
mov
jo
cmp
inc
mov
idiv
push
nop
dec
cmp
mov
mov
adc
cli
mov
sbb
and
sti
pop
lahf
retf
mov
ja
call
pop
inc
jnp
lock
ins
xor
xchg
cmc
xor
sbb
pop
and
lahf
(bad)
adc
fistp
cmp
mov
bound
outs
xor
and
cdq
pop
sbb
stos
pop
(bad)
shl
sbb
in
daa
and
fld
in
fld
mov
sub
pop
lds
mov
gs
jp
retf
ret
fdivp
xor
add
adc
aam
pop
cli
clc
xor
cld
stos
sahf
xor
lahf
inc
adc
fild
rcr
adc
(bad)
mov
dec
push
mov
add
outs
and
stos
test
adc
in
clc
js
push
aas
rol
iret
push
dec
cmp
call
mov
pop
dec
icebp
aas
shl
fstp
popf
enter
jne
lock
loop
inc
psllq
mov
fcmovb
fadd
mov
or
sub
cwde
outs
jge
jecxz
xor
into
hlt
jecxz
sub
pop
pop
movs
xor
or
jmp
(bad)
sub
dec
clc
cmp
sar
mov
loopne
pop
in
sti
xor
mov
xor
pop
mov
inc
mov
iret
fld
repz
adc
fnstenv
xchg
sbb
test
call
inc
imul
aam
inc
adc
push
jmp
dec
push
inc
or
enter
xchg
mov
xchg
icebp
das
je
jno
xor
push
jmp
sub
mov
ja
mov
dec
and
push
icebp
push
cmp
fcom
jns
sets
ss
aad
test
cmp
stos
push
out
cmp
in
gs
lea
add
adc
or
in
mov
jae
dec
mov
push
rcl
or
jecxz
xor
dec
rcl
cmp
dec
mul
mov
fs
test
jle
out
dec
ret
movs
in
add
add
sbb
test
pop
dec
loop
cld
cdq
xor
addr16
iret
iret
cmps
aam
stos
in
inc
pop
add
adc
fs
test
mov
push
pop
test
stc
aad
mov
mov
mov
ds
adc
sbb
pop
push
xor
pop
and
jp
mov
inc
dec
pop
imul
lods
mov
jmp
mov
inc
add
test
test
add
jge
ins
cmc
fnstsw
xor
fwait
pop
sbb
dec
xchg
pop
hlt
popa
inc
sti
jae
(bad)
xchg
data16
in
popf
cmp
je
mov
into
dec
mov
ffree
sti
out
call
js
jecxz
mov
or
sahf
sub
jbe
leave
mov
pushf
push
ja
xchg
je
mov
leave
jns
pop
imul
loope
mov
scas
pop
int3
jne
and
xchg
xchg
inc
inc
push
xor
bound
push
mov
jmp
idiv
push
(bad)
aam
xchg
or
jne
(bad)
addr16
neg
pop
dec
mov
sbb
adc
mov
test
pusha
push
in
inc
mov
mov
sub
and
add
mov
cmp
ror
push
mov
out
cmps
jmp
das
add
cs
in
(bad)
rcr
xor
mov
(bad)
je
push
and
pop
clc
add
or
cli
push
call
push
jns
(bad)
cmc
push
fistp
dec
lahf
(bad)
dec
fcomip
and
or
movs
or
jno
push
jmp
adc
inc
mov
xchg
inc
pop
mov
mov
cmps
(bad)
xchg
imul
push
add
jne
xor
repnz
(bad)
adc
ins
fld
daa
push
gs
push
adc
adc
sub
les
ins
and
stos
pop
je
or
ins
sub
cwde
jo
cli
inc
pop
repnz
pop
outs
inc
in
push
cmp
test
fnstsw
jmp
and
sbb
pop
or
mov
adc
jg
sbb
mov
in
fwait
or
cmps
jecxz
sbb
lea
dec
ja
imul
retf
in
jg
mov
cmp
add
pop
es
sbb
std
cli
adc
leave
cmp
call
lods
dec
xor
ret
and
sbb
imul
mov
das
and
in
ror
das
inc
jns
xor
mov
call
mov
popa
inc
mov
int
pop
aaa
xlat
mov
dec
jg
push
bound
xchg
or
pusha
je
dec
das
das
retf
into
inc
dec
ret
outs
xlat
pop
fimul
or
call
or
pop
xchg
retf
inc
mov
ret
mov
mov
push
dec
enter
call
test
test
xchg
xor
stc
jo
jle
xchg
sahf
or
nop
inc
lea
stc
cli
jle
ret
inc
lea
push
or
mov
cmp
push
adc
ins
add
dec
xchg
push
inc
cmp
and
mov
mov
dec
pop
add
jno
ret
retf
mov
les
jne
xchg
pop
repz
xchg
xlat
clc
or
(bad)
adc
add
mov
sbb
inc
adc
in
inc
into
pop
sub
xor
push
scas
sub
sbb
mov
into
rol
and
ins
je
fisub
xchg
call
ret
inc
mov
ret
mov
test
mov
xchg
repz
jg
pop
inc
retf
cmp
dec
push
jg
xchg
das
cwde
and
rcr
xchg
stos
pop
mov
xchg
addr16
int3
sbb
pop
(bad)
es
pop
pusha
std
scas
sub
data16
jmp
push
ins
outs
and
inc
mov
add
sub
not
jne
mov
xchg
xchg
adc
dec
leave
repnz
idiv
js
inc
(bad)
fsubrp
xchg
sbb
adc
into
rdmsr
or
out
popf
or
mov
outs
mov
dec
cmc
cdq
dec
ins
mov
jo
mov
mov
and
mov
(bad)
stc
xchg
dec
icebp
dec
xor
ds
call
xor
push
xor
sbb
ds
mov
sbb
pusha
jle
add
inc
bswap
mov
push
(bad)
mov
inc
es
push
mov
call
sub
mov
jle
mov
imul
adc
and
push
out
neg
movs
popf
jne
mov
xor
sahf
inc
mov
mov
sub
inc
adc
xor
outs
xor
(bad)
push
rcr
lahf
lea
int3
cmp
test
dec
mov
xor
fisttp
or
sbb
or
test
and
in
mov
call
add
test
inc
cs
xchg
shl
jecxz
cmps
xchg
shr
ret
loope
pusha
inc
jne
xlat
test
add
rcr
cmp
test
jmp
aas
fsub
xor
dec
cmp
push
jnp
xchg
add
(bad)
out
pusha
push
ror
lods
sub
dec
(bad)
cmp
push
hlt
(bad)
cmps
stc
sub
xlat
push
hlt
mov
std
mov
cmps
inc
loopne
mov
cli
icebp
cmps
std
fadd
mov
push
ret
sti
in
nop
or
call
cdq
fucomip
test
mov
lock
repz
mov
aam
push
push
bound
xchg
ds
jge
xchg
xor
repnz
sar
hlt
pop
inc
jno
sub
and
enter
(bad)
mov
ins
loopne
mov
sub
call
icebp
mov
mov
pop
aam
stos
aaa
cmps
fs
push
sar
scas
xor
mov
popa
cdq
pusha
push
and
push
dec
or
jmp
fld
call
mov
jb
push
push
(bad)
cdq
adc
shl
aad
jbe
inc
or
xchg
dec
pop
je
push
cdq
cwde
popf
retf
jb
jo
adc
cmp
test
sbb
cmp
xlat
outs
inc
add
popa
mov
jge
(bad)
loop
out
div
add
ja
ds
or
sar
push
cdq
pop
inc
dec
gs
and
fnstsw
das
pushf
mov
xchg
aam
or
jecxz
push
hlt
aam
pop
pop
sbb
mov
jecxz
push
or
retf
or
xor
pop
mov
pop
and
sbb
in
and
mov
pushf
push
dec
cmp
mov
mov
sub
ins
fcomp
nop
div
leave
sbb
or
add
loop
(bad)
in
(bad)
cwde
sbb
stos
inc
pop
dec
sti
push
or
xchg
retf
mov
jcxz
adc
out
fs
and
sub
test
jns
inc
jne
mov
xchg
imul
ret
shl
xor
cmp
jmp
aam
rol
cmps
enter
push
lahf
shl
mov
mov
out
or
(bad)
test
in
inc
inc
(bad)
icebp
hlt
inc
push
push
mov
shr
push
pop
sub
xchg
js
dec
dec
jecxz
push
sub
dec
aaa
sahf
xchg
je
adc
jge
pop
call
pop
ja
xor
pop
mov
push
xchg
les
loop
push
mov
xchg
in
dec
(bad)
repnz
xchg
and
arpl
outs
test
retf
inc
cmp
nop
out
pop
jmp
js
es
mov
xor
dec
ja
data16
or
retf
pop
dec
xchg
pop
mov
add
iret
lods
mov
dec
mov
ja
pop
jp
in
or
imul
pop
or
adc
retf
cdq
leave
ret
or
aas
xor
add
cmc
fsubr
push
(bad)
(bad)
(bad)
jmp
adc
fadd
dec
adc
add
fidivr
mov
cmp
push
push
add
dec
(bad)
retf
pop
mov
push
sub
imul
ins
sub
ins
adc
lahf
xor
lock
mov
xchg
adc
dec
sub
out
or
popa
cmps
lds
ret
ret
mov
data16
adc
xor
mov
rol
jbe
sub
ror
ret
add
jo
mov
mov
fadd
dec
sahf
mov
push
ror
add
fwait
add
into
or
call
test
hlt
add
int3
fwait
mov
dec
enter
sub
imul
cmp
sahf
fld
frstor
sbb
sub
addr16
out
mov
mov
dec
es
movs
lock
xchg
ret
jo
stc
sub
mov
mov
cld
adc
push
mov
add
jmp
xor
adc
daa
mov
mov
inc
in
js
sub
cmp
sbb
xchg
arpl
outs
xor
imul
pushf
arpl
mov
jo
leave
push
jmp
fsub
and
xlat
push
out
les
adc
or
inc
(bad)
(bad)
jb
mov
mov
mov
scas
inc
push
mov
xor
(bad)
cs
inc
and
push
pop
in
mov
mov
fnsave
mov
xor
loope
inc
das
dec
push
xchg
aas
sub
dec
jae
mov
call
fadd
push
in
or
dec
aas
out
pop
(bad)
mov
push
xor
push
lods
frstor
jmp
(bad)
lahf
or
scas
test
call
adc
mov
nop
into
loop
xor
push
add
ret
inc
xor
ret
jns
push
dec
xchg
mov
xor
xchg
mov
mov
outs
dec
int
sahf
leave
stos
dec
mul
call
adc
xchg
jecxz
fs
and
push
sbb
inc
jge
cwde
add
scas
jae
imul
fwait
dec
mov
or
sub
jb
icebp
xor
sub
add
stc
fwait
lea
dec
xor
aam
pop
loop
js
inc
dec
inc
inc
xchg
call
sahf
mov
xchg
push
xchg
mov
jge
jnp
cmp
pusha
nop
call
test
out
(bad)
xlat
jl
loop
repz
cmp
xchg
test
imul
xor
dec
repnz
jns
ja
repnz
(bad)
xchg
push
xor
or
cmp
adc
cmp
cmc
movs
(bad)
jle
xchg
xchg
jo
xor
ret
outs
rcr
mov
pusha
popa
add
lea
inc
inc
add
xchg
iret
aam
scas
mov
jp
cli
aaa
mov
shr
cli
sbb
ins
enter
adc
outs
scas
add
mov
push
sub
arpl
scas
sub
add
pop
test
jno
mov
dec
push
(bad)
add
xchg
inc
push
in
(bad)
fild
push
inc
and
mov
shl
xor
pop
jae
push
mov
push
inc
repz
and
lods
push
pop
jmp
shr
xor
arpl
movs
icebp
xor
into
mov
push
inc
inc
xchg
mov
dec
jne
div
pop
mov
jmp
mov
cdq
test
and
lea
dec
jnp
sti
inc
dec
inc
iret
pop
ror
lods
pop
push
fldenv
xchg
ret
jnp
cmps
cmp
mov
in
icebp
xchg
out
cmps
retf
in
inc
mov
xor
inc
movs
ja
adc
sbb
add
inc
jecxz
sbb
int3
loop
cmp
or
movs
ficom
(bad)
enter
mov
aaa
cmp
popa
sub
adc
jbe
dec
fiadd
int3
inc
xor
jno
inc
mov
das
lea
into
in
jecxz
ficomp
inc
fadd
push
or
jecxz
jg
div
sahf
das
dec
test
imul
mov
add
mov
shl
push
sahf
icebp
inc
call
out
repz
sbb
xchg
aaa
dec
cmp
xchg
das
push
mov
jnp
xchg
xor
and
repnz
xlat
xchg
fdivrp
add
jp
ss
xor
test
mov
fstp
mov
add
jb
mov
mov
sub
out
mov
xchg
lods
and
add
or
xlat
jecxz
and
cmp
pop
es
inc
mov
ret
je
inc
xchg
xchg
and
jns
arpl
cwde
repnz
inc
jmp
out
jb
cdq
sar
push
repz
mov
xlat
push
repz
mov
loope
ficomp
pop
lods
push
jbe
ins
shr
sti
xchg
xor
lea
cmp
push
out
leave
adc
or
mov
enter
rcl
jbe
pop
mov
sub
sub
jne
xor
mov
mov
retf
mov
cmc
out
mov
cdq
mov
out
out
cmp
fld
jbe
mov
dec
out
adc
add
nop
sub
inc
inc
out
sub
int
je
rcr
cmp
js
call
pop
mov
pop
test
xor
jmp
add
dec
sub
jmp
mov
int
xor
enter
(bad)
int
xchg
(bad)
xchg
xchg
jae
cld
push
push
jmp
jmp
mov
inc
iret
ins
sub
fnsave
dec
adc
(bad)
jne
sub
ret
push
xor
inc
pop
cmps
add
dec
cmp
iret
pusha
ret
and
test
ins
popf
(bad)
xor
movs
dec
popa
in
loope
xor
mov
pop
in
mov
xchg
mov
test
dec
push
enter
adc
mov
mov
jge
pop
mov
(bad)
inc
jno
xor
out
leave
aam
les
cmp
xor
repz
xor
sub
in
imul
pop
and
pop
or
iret
sahf
out
lahf
outs
icebp
aaa
and
push
ret
adc
dec
cmc
in
shr
cld
dec
mov
mov
and
sub
adc
xchg
push
dec
adc
add
xchg
pop
cli
rcl
xchg
fcmove
aad
jno
mov
cli
mov
in
test
imul
(bad)
bound
sub
push
sub
clc
and
ss
xchg
lock
xchg
movs
jnp
xchg
mov
jmp
fld
cwde
call
xchg
popa
stos
loop
ins
pop
push
test
dec
mov
rol
shld
jnp
push
cdq
sahf
push
in
push
cwde
outs
push
lea
aad
adc
(bad)
sbb
pop
inc
(bad)
fmulp
add
stc
ins
shl
ret
lfs
add
ficomp
pushf
das
add
lock
sbb
(bad)
je
repz
jp
js
retf
call
push
cmps
add
popf
add
movsx
jmp
rol
xchg
jo
dec
pusha
add
sub
dec
xor
fst
outs
push
inc
lods
lock
jp
les
cmp
ds
sub
test
ror
add
imul
jmp
or
jmp
xchg
jne
push
int3
repz
inc
retf
enter
sbb
cmp
mov
sbb
jmp
pop
in
fs
test
icebp
ds
loopne
imul
add
pop
push
cvtps2pi
rcl
imul
into
loop
in
xchg
dec
lahf
push
mov
xlat
cmp
(bad)
add
std
dec
ins
cld
and
loopne
hlt
inc
sbb
fs
clc
push
xor
mov
loope
dec
or
imul
and
cmp
add
push
mov
frstor
aad
ss
jmp
adc
pop
ret
sub
repz
imul
loope
inc
dec
inc
jae
pop
out
xor
sbb
jl
jle
push
out
add
and
push
stc
outs
jmp
(bad)
lock
or
icebp
retf
push
jmp
cmp
jge
fcomp
sub
fidiv
fdiv
dec
stos
sti
mov
pop
and
or
(bad)
adc
mov
or
dec
lea
out
out
fs
int3
test
cmps
mov
imul
popf
dec
xor
mov
adc
pop
mov
jmp
nop
inc
ret
mov
cmp
xor
xlat
aam
hlt
add
(bad)
ds
mov
jl
call
scas
jle
dec
fwait
push
jle
fistp
movs
ins
xor
inc
(bad)
jle
add
add
inc
push
out
pop
sbb
pop
div
enter
clc
outs
lahf
jmp
out
fadd
test
add
pop
das
enter
lods
jbe
stos
iret
dec
jae
or
or
retf
out
test
nop
push
clc
cmp
sbb
mov
sub
pop
dec
xchg
loope
repnz
in
cs
mov
pop
mov
fcomp
das
ja
push
sahf
imul
or
add
xchg
xchg
int
and
dec
dec
cdq
sub
adc
xor
pop
add
mov
mov
adc
test
nop
sbb
sti
adc
jmp
fadd
jnp
xchg
pop
xor
outs
and
sti
xor
mov
jl
das
int
dec
sahf
jae
inc
inc
(bad)
fcomp
jb
sbb
inc
jno
xchg
mov
loope
pop
jb
fwait
inc
pop
mov
inc
sbb
mov
cmp
xlat
sbb
outs
rep
jg
adc
fnstenv
mov
push
sbb
retf
cmc
mov
enter
clc
pop
test
ja
pop
outs
aad
ret
nop
push
(bad)
xor
sahf
out
mov
bound
nop
sub
cdq
xchg
int3
inc
dec
repnz
push
or
rcl
cmp
test
mov
xchg
imul
retf
cmp
fdivr
fwait
data16
and
stc
aam
retf
cmps
fld1
fidivr
(bad)
dec
in
arpl
and
sbb
inc
popf
call
pop
jns
jo
repnz
out
int
sbb
test
xor
jne
ins
sub
je
cmps
test
xor
push
or
sub
gs
retf
adc
fnstsw
and
arpl
sub
and
enter
jecxz
cmps
push
in
addr16
test
daa
sbb
inc
sbb
push
add
mov
cmps
mov
aam
xchg
int
mov
test
mov
jmp
jb
cmp
cmp
jmp
lods
rcl
jne
in
call
rcr
cld
adc
lods
aas
xor
repnz
or
rol
mov
pop
int3
retf
xchg
jae
ds
stc
xchg
jnp
fnstcw
xor
jge
mov
ins
gs
inc
into
fcomp
mov
mov
xlat
sar
cmc
lds
sbb
pop
mov
mov
inc
icebp
jecxz
imul
ja
jne
out
pop
dec
int3
lods
push
ds
mov
dec
push
pop
dec
or
push
sbb
xchg
mov
add
not
jmp
pop
pop
push
cmps
or
inc
mov
fsub
xchg
and
adc
inc
mov
loopne
push
add
pushf
std
fadd
add
jmp
repnz
lods
push
xchg
idiv
dec
fwait
leave
addr16
adc
xor
inc
adc
pop
cmp
push
cmc
xlat
xchg
or
iret
icebp
out
dec
jmp
loope
call
sar
into
dec
jae
out
add
stos
mov
xor
inc
pop
jae
xchg
std
ins
and
movs
adc
js
xor
cmp
shr
or
push
push
cdq
mov
outs
in
pop
sub
and
movs
arpl
scas
mov
dec
adc
mov
inc
add
jecxz
mov
push
test
gs
clc
jp
inc
sbb
jns
fisub
or
sar
scas
pop
lahf
add
outs
cmp
lods
push
imul
mov
test
and
cmc
mov
cli
sbb
pop
sbb
popa
xchg
push
outs
in
in
leave
fdivr
xor
lahf
add
mov
in
ret
and
jg
mov
imul
jp
clc
jp
or
sub
xchg
test
dec
ds
sub
mov
enter
xor
inc
pop
or
loope
fisub
jmp
pop
call
dec
pop
xchg
in
(bad)
jne
ins
jae
inc
scas
fsub
xor
mov
stc
in
sub
dec
add
ror
cmp
add
out
es
mov
pop
jecxz
rcr
dec
cmp
cdq
cmp
cld
dec
cmc
push
(bad)
jle
fdivr
jge
mov
xlat
jae
arpl
mov
add
cmps
push
lods
inc
push
in
mov
jmp
adc
cdq
xor
and
push
rcl
mov
cmps
in
inc
sub
repnz
imul
xor
xchg
movs
add
jl
stos
inc
adc
xchg
push
sar
sbb
add
dec
sub
fnstenv
ins
fld
(bad)
jmp
je
adc
and
or
sub
mov
in
or
in
out
xlat
aas
push
or
xor
cmp
fwait
and
shl
(bad)
lods
test
icebp
hlt
stc
and
sub
jae
mov
pop
xchg
aaa
sub
pop
lock
cmp
push
push
or
test
fsub
sub
or
cmp
inc
out
and
sbb
loopne
bound
lods
pop
mov
pop
pop
pop
add
dec
shl
xchg
enter
in
push
shl
repnz
out
pop
jge
fwait
adc
adc
add
or
(bad)
mov
push
aam
or
push
out
stos
retf
aaa
jo
test
aas
mov
jle
ficom
bnd
jmp
jle
inc
into
les
fisubr
push
popa
push
lds
iret
ficomp
jge
dec
xchg
loope
adc
test
jne
mov
mov
sbb
add
daa
leave
cmp
hlt
and
daa
retf
mov
movlps
add
stc
mov
call
cwde
rcr
loopne
push
mov
push
rcl
pop
popa
(bad)
push
lock
or
xchg
and
sbb
sbb
add
push
in
adc
aad
loope
jnp
gs
test
or
out
cmps
sti
sar
xchg
adc
pop
aas
mov
xor
mov
add
loopne
sbb
push
neg
pop
jmp
push
sub
std
fucomp
xchg
cmp
outs
mov
ds
jno
and
lods
cmp
enter
addr16
and
ss
xchg
mov
test
adc
push
sbb
call
add
cmp
stos
inc
je
mov
add
sbb
fmul
stc
and
out
mov
add
jecxz
push
jecxz
fisttp
add
lods
in
add
push
arpl
or
or
jge
ins
jg
inc
push
repnz
imul
mov
sub
idiv
fdiv
mov
pop
and
xchg
retf
jo
in
inc
jne
cmp
pop
xchg
sbb
arpl
inc
retf
sbb
add
and
rol
outs
ret
pop
jecxz
mov
call
out
pop
lods
dec
(bad)
mov
mov
idiv
iret
repz
mov
jle
cmp
or
dec
pushf
mov
push
jmp
fstp
lds
retf
sbb
sub
mov
push
popf
or
jg
in
leave
pop
sub
add
jp
cs
or
mov
(bad)
clc
dec
mov
fistp
sub
mov
loopne
pop
pop
mov
lahf
(bad)
or
in
ins
and
addr16
adc
mov
test
add
std
and
out
(bad)
lock
sub
lea
cmc
adc
mov
push
call
mov
inc
fiadd
into
test
jae
repz
test
cwde
jb
std
clc
jbe
adc
xchg
inc
jnp
cmc
jbe
sub
mov
add
stos
mov
aad
inc
or
cmc
jo
and
pop
pop
imul
test
sti
in
or
push
inc
sub
pop
fiadd
pop
rol
data16
fistp
fadd
call
scas
adc
xchg
stos
jmp
lods
icebp
fist
jmp
lods
faddp
mov
mov
cmp
mov
out
rcr
aad
lea
inc
jge
or
add
mov
xor
xchg
add
add
repz
inc
mov
inc
add
or
push
leave
adc
cmp
stc
inc
lods
dec
out
loopne
dec
pop
dec
cmp
loop
and
jecxz
mov
dec
repz
shl
push
gs
push
mov
pop
leave
loopne
call
jg
aad
jnp
aam
movs
movs
add
fbstp
arpl
out
mov
pop
fs
je
inc
test
xchg
xor
inc
loope
or
push
adc
and
out
inc
(bad)
(bad)
movs
shl
sub
mov
ins
push
(bad)
nop
sahf
sub
cmp
clc
sub
and
sti
mov
jge
sub
cs
into
mov
mov
out
adc
dec
imul
fist
or
in
sahf
loopne
push
cs
fcomp
push
inc
add
jge
jns
push
mov
shl
in
inc
jecxz
sbb
xor
ret
leave
sbb
jle
xchg
mov
movs
retf
rol
stc
aaa
mov
push
fnstsw
add
dec
out
ins
mov
push
(bad)
cmp
dec
aas
inc
jmp
ja
je
xor
(bad)
cmc
jmp
loope
mov
xchg
pop
sub
xchg
mov
add
push
cmps
cmp
jl
popa
jno
mov
xchg
inc
adc
push
cmp
sub
dec
jae
sbb
mov
stos
jmp
scas
shl
jge
cmp
call
jno
(bad)
je
jmp
ficomp
mov
sub
aam
(bad)
ins
(bad)
xchg
in
jg
cmc
push
or
jne
add
sub
mov
dec
jne
adc
fcomp
jno
xor
sbb
jne
mov
(bad)
cmps
inc
ss
scas
mov
sbb
pop
call
mov
int
push
int3
cmps
jo
jnp
sbb
xor
mov
pop
call
mov
add
adc
pushf
add
mov
jmp
aaa
sbb
xchg
sbb
enter
inc
sub
inc
xchg
les
retf
and
sahf
dec
test
fild
lods
and
mov
inc
in
shl
push
cli
ret
leave
xchg
clc
jb
push
cld
aam
popa
sahf
fdivr
idiv
or
push
scas
(bad)
(bad)
out
pop
addr16
and
adc
sbb
adc
jg
jb
cmp
aad
push
js
prefetcht1
pop
add
(bad)
int3
mov
ficom
rcr
ror
ins
pop
mov
pusha
not
push
mov
push
mov
clc
cld
dec
mov
fadd
imul
ins
jmp
les
inc
clc
(bad)
fist
fst
dec
sub
lock
jbe
push
xchg
dec
dec
les
xor
xor
dec
aas
mov
(bad)
mov
xchg
dec
sub
daa
cmp
xchg
sub
jo
(bad)
sbb
les
scas
mov
pusha
std
ja
in
jb
or
aas
adc
sbb
aaa
add
retf
push
(bad)
mov
arpl
and
test
lods
rcr
daa
pop
mov
lahf
(bad)
iret
pop
jnp
jmp
loope
shl
test
adc
dec
add
int3
mov
shl
int
adc
js
loopne
push
mov
rcl
push
dec
jnp
cmc
fstp
pop
dec
push
xchg
icebp
push
sub
fidiv
push
scas
cmp
sbb
mov
lods
enter
push
rol
aaa
jecxz
fwait
sbb
std
mov
pop
pop
jo
mov
loope
xor
dec
jmp
call
adc
(bad)
xor
jle
inc
cmps
push
and
mov
fs
xchg
repnz
leave
idiv
xor
(bad)
fs
test
(bad)
jle
hlt
bound
int
add
mov
push
pop
(bad)
push
outs
scas
out
dec
popf
xchg
fwait
and
jecxz
cmp
into
retf
mov
push
sbb
(bad)
add
fs
shl
dec
lea
nop
adc
aaa
sahf
int3
outs
push
pop
pop
xor
loope
pop
ss
sbb
fs
cmps
xlat
jno
lea
(bad)
loop
inc
lods
mov
cmp
mov
mov
(bad)
mov
aam
out
xlat
push
mov
fndisi(8087
xchg
test
pop
loop
mov
mov
push
sub
dec
shl
or
xchg
fdiv
lods
or
jo
retf
mov
pxor
and
sub
add
pushf
lock
adc
cmp
(bad)
jns
dec
fs
add
push
cmp
sub
fisubr
pusha
mov
mov
dec
mov
jnp
cs
xchg
in
inc
lods
inc
bound
jle
test
pusha
and
pop
cmp
inc
pop
lock
and
pop
sub
cli
icebp
mov
cmp
js
push
loope
es
cmp
cmp
inc
ins
std
fwait
ins
sub
dec
mov
ret
jp
inc
xor
imul
out
sti
fsubr
jne
and
pop
mov
cli
popf
xor
ds
xor
pop
mov
dec
out
pop
mov
test
shl
fisttp
mov
push
jnp
inc
repnz
cli
cmp
bound
mov
sbb
retf
lea
sub
jmp
jno
ins
and
aas
pop
xchg
fcmovnb
sub
sbb
es
(bad)
xor
mov
ret
add
test
mov
jp
inc
inc
and
mov
popa
mov
add
je
imul
shl
cwde
or
cmp
iret
je
fbld
sub
inc
pop
or
jne
sti
outs
push
scas
cs
popf
(bad)
fstp
dec
imul
inc
sbb
imul
shl
cmp
xor
outs
mov
aaa
addr16
je
(bad)
dec
std
(bad)
call
arpl
mov
pop
cmp
inc
sub
es
jge
push
in
fsubp
loopne
mov
enter
test
xor
aam
shr
jb
inc
or
test
or
inc
pop
cmps
inc
popf
or
cdq
into
icebp
or
dec
dec
mov
push
ret
cmps
out
cwde
sbb
mov
cmc
cmc
sbb
or
cli
sub
mov
sub
out
faddp
fst
sahf
dec
push
test
lods
jp
cmp
arpl
dec
aam
mov
aaa
arpl
jl
scas
sbb
retf
mov
adc
test
mov
scas
pop
fwait
inc
pop
jecxz
xchg
xchg
retf
sti
push
imul
or
lock
cmps
push
inc
pusha
adc
cli
mov
(bad)
pop
gs
inc
cld
mov
int
adc
dec
and
rol
xor
xchg
fcmovnb
or
mov
sub
mov
jle
movs
mov
(bad)
pop
pusha
jae
push
pop
lods
mov
and
ja
and
mov
icebp
xchg
sub
and
xor
jmp
ins
or
inc
pop
xchg
xchg
inc
fdiv
xor
sbb
aaa
or
cs
sub
mov
pop
sbb
xchg
mov
arpl
imul
add
sub
cs
cdq
mov
push
loopne
xor
mov
pusha
sub
pop
neg
add
pop
cmp
adc
bnd
pop
clc
stc
fist
mov
pop
retf
fbstp
mov
retf
cmp
sub
xor
push
ss
or
inc
push
sbb
jne
xor
(bad)
fwait
jae
cmps
fdiv
mov
adc
std
cmp
add
outs
jl
nop
into
inc
(bad)
das
sub
repz
les
jne
mov
mov
inc
cmp
xor
mov
lods
sub
adc
out
dec
cmp
out
mov
mov
or
mov
adc
push
xchg
fldenv
sub
ficomp
sub
add
sbb
adc
mov
rcr
mov
cmps
(bad)
hlt
ret
or
push
aam
out
loope
fcmovnu
pop
ins
pop
or
jecxz
push
stos
in
test
mov
xor
mov
jmp
fnsave
ins
cmp
adc
pop
(bad)
mov
push
mov
or
cmp
sbb
mov
call
jmp
gs
push
xchg
xor
pop
jae
jne
call
arpl
out
ror
mov
bound
sub
mov
mov
rcr
popf
adc
mov
(bad)
ret
lock
out
jecxz
test
cwde
mov
xor
mov
mov
xchg
pop
jb
lea
dec
(bad)
out
inc
mov
sbb
aas
mov
sub
shl
xor
iret
and
add
fnstenv
cli
or
pop
imul
int
sub
lods
jae
push
arpl
xchg
cmps
or
cmp
cmp
cdq
enter
mov
mov
jmp
mov
je
add
ss
dec
mov
lahf
xor
jl
cmp
pop
jno
pop
popa
mov
lahf
mov
or
fadd
je
(bad)
stos
test
pop
outs
enter
push
dec
cmps
retf
sub
sti
(bad)
aam
retf
cwde
(bad)
add
dec
pop
cmps
(bad)
jge
xchg
xor
sti
outs
push
dec
shl
cs
xor
fisttp
cmp
mov
out
jl
or
xor
nop
bound
int3
fnstenv
das
xchg
or
jl
shl
jo
scas
clc
push
or
cmp
dec
push
dec
add
scas
lock
bound
lahf
xor
lods
test
push
mov
imul
push
push
js
jmp
xacquire
jge
es
(bad)
push
mov
mov
lea
inc
jle
call
cmps
ja
push
(bad)
pusha
mov
xchg
enter
xor
mov
xchg
cs
sub
sti
or
dec
stos
pop
scas
push
xchg
rcr
xor
adc
xor
dec
push
push
imul
mov
cmp
adc
les
adc
je
repnz
cmp
loop
sbb
xlat
call
push
shl
mov
sbb
and
jmp
aad
lds
js
(bad)
mov
cmp
adc
xchg
and
icebp
ror
aad
fistp
sbb
adc
(bad)
scas
pop
mov
adc
push
js
mov
mov
cmp
add
sub
outs
mov
in
sbb
mov
jle
xor
mov
mov
inc
scas
or
dec
pop
jnp
es
arpl
pop
ret
rcr
mov
xor
and
mov
ds
aam
push
cmp
dec
ror
mov
mov
mov
push
adc
bound
hlt
mov
add
ss
add
jmp
lods
popf
push
jge
mov
push
in
mov
mov
jae
test
dec
retf
push
cld
scas
add
jnp
pushf
jle
popa
jp
sub
retf
mov
push
(bad)
sbb
and
mov
ret
aas
fnstsw
movs
xor
cmps
sahf
xchg
xchg
leave
mov
ffreep
pop
push
(bad)
icebp
std
lock
add
daa
lds
(bad)
or
jg
add
jae
and
shr
fsubr
rcl
mov
das
scas
dec
bound
lea
dec
dec
(bad)
add
neg
pop
mov
in
jmp
jne
push
pop
push
cs
jmp
in
gs
mov
sbb
test
dec
and
sbb
movs
outs
(bad)
mov
retf
push
outs
and
push
fstp
gs
adc
sbb
and
stc
mov
inc
cmp
pop
and
mov
shr
sub
aas
mov
mov
(bad)
pop
call
or
(bad)
mov
out
sbb
xchg
xor
mov
test
mov
jl
stos
push
lds
push
out
jne
add
cmp
xor
adc
gs
cdq
jle
in
mov
iret
(bad)
jl
push
cld
cmp
mov
arpl
cmps
je
inc
lea
push
or
mov
stos
push
mov
dec
mov
mov
push
jmp
xchg
sub
mov
adc
(bad)
and
or
xor
neg
daa
in
hlt
lods
jns
dec
enter
cwde
(bad)
rcl
inc
xor
xor
cmp
sub
xlat
xor
aad
jle
loop
cmps
mov
daa
adc
popa
push
ror
pop
in
push
nop
xor
rcr
or
jae
aam
sub
push
or
xchg
sub
xchg
add
fs
mov
lahf
add
repnz
xor
iret
cmps
mov
loopne
jl
mov
sbb
pop
test
jae
aad
(bad)
mov
adc
push
dec
in
fist
jp
lods
mov
out
mov
mov
lea
outs
(bad)
(bad)
enter
fstp
(bad)
mov
push
movs
mov
cwde
add
sbb
dec
mov
xchg
mov
call
fisubr
fsub
shr
inc
push
push
xor
test
sub
test
shl
(bad)
cmp
cli
ficomp
in
mov
lods
mov
lds
mov
stc
bound
mov
pmulhuw
sub
ret
(bad)
jae
push
pop
and
push
lods
mov
jmp
adc
lahf
(bad)
icebp
add
call
jae
pop
jbe
add
mov
test
fcmovnbe
stc
(bad)
fdiv
nop
ja
push
or
dec
mov
pop
jmp
add
jmp
ds
jge
dec
xlat
lds
test
into
jmp
jge
aas
mov
cmp
movs
test
push
stos
shl
xor
xor
dec
in
xchg
iret
ins
push
data16
in
(bad)
xchg
jno
push
sbb
jmp
or
jp
cmp
or
and
and
add
fcomp
or
test
push
rol
xor
xor
jmp
push
test
xor
push
bound
mov
push
sub
pop
fst
mov
sub
xor
ja
sub
cmp
dec
mov
sbb
iret
inc
pusha
popf
cmps
xchg
push
xchg
jle
out
rol
dec
mov
mov
and
out
pop
push
iret
mov
jns
pop
cli
add
ja
ror
ins
imul
cli
out
mov
mov
jge
jecxz
out
jnp
or
shl
outs
out
int3
pop
mov
test
dec
stos
shr
retf
and
imul
std
inc
lahf
xchg
adc
imul
push
das
fs
and
cs
scas
and
call
out
mov
ror
mov
add
mov
add
mov
icebp
xor
lds
je
xor
sahf
and
jo
mov
sbb
js
bound
dec
mov
mov
xlat
cld
cld
fcom
scas
cmp
xchg
test
pop
fdivr
loop
shl
push
and
jb
inc
jns
xor
inc
ret
repnz
sub
or
adc
dec
pop
sbb
and
mov
(bad)
mov
cwde
sbb
sbb
sub
(bad)
aam
sbb
sub
mov
sbb
out
mov
xchg
pop
inc
dec
inc
iret
sbb
inc
cmp
push
loop
jge
cmp
cs
fadd
cwde
icebp
sub
outs
fcomp
and
adc
sub
jg
loop
xchg
push
push
sbb
and
inc
push
into
mov
into
jmp
std
movs
mov
inc
inc
jp
daa
cmc
jmp
das
outs
jp
ds
pop
mov
ss
cmp
movs
imul
(bad)
iret
ret
and
mov
add
cmps
sbb
ss
sbb
loope
push
mov
and
cmp
push
test
les
ja
jmp
push
mov
neg
daa
inc
dec
xlat
pop
push
je
and
sub
in
sub
and
loope
xor
mov
out
daa
jg
fwait
mov
sbb
cs
mov
sub
mov
add
inc
retf
and
mov
lea
nop
arpl
pop
cmp
or
jmp
jmp
retf
cld
mov
push
enter
add
shr
retf
ss
push
fsubrp
cli
scas
(bad)
fld
mov
inc
and
(bad)
aaa
push
push
mov
xor
ins
aas
js
inc
dec
mov
pushf
popa
cmp
mov
inc
mov
cmps
cmp
and
add
loope
out
ds
lahf
loop
jecxz
cmc
mov
sahf
test
(bad)
mov
push
xor
out
mov
or
push
cld
mov
adc
xor
ins
sti
mov
inc
inc
push
push
mov
ror
fldln2
mov
and
das
js
sbb
(bad)
add
sbb
loopne
inc
add
daa
arpl
addr16
push
mov
jae
push
jno
add
into
repz
or
loope
sbb
fistp
cmp
stos
jb
and
pop
pusha
cwde
inc
dec
ret
ficom
adc
sahf
mov
jge
mov
(bad)
adc
mov
dec
mov
jg
addr16
scas
test
adc
icebp
outs
rcr
dec
scas
(bad)
fcom
inc
(bad)
xor
add
stc
jp
daa
dec
(bad)
jmp
add
xchg
mov
loop
inc
xchg
push
pop
push
add
mov
mov
push
xor
mov
jg
lock
xor
scas
adc
adc
call
test
cdq
sub
sbb
add
adc
jae
out
dec
mov
loop
aam
jne
aaa
outs
jo
jo
xor
call
int
mov
out
jmp
add
cmps
shl
jecxz
mov
xchg
mul
out
push
jo
lods
push
sahf
jmp
fwait
sub
xchg
sbb
and
data16
aam
xchg
jmp
icebp
stos
mov
pop
and
into
ret
popf
add
dec
test
inc
jmp
into
scas
inc
xchg
repnz
and
cmc
dec
jp
pop
rcl
inc
leave
add
shl
popa
mov
ja
mov
addr16
xor
cmp
sub
imul
xchg
in
mov
cmps
aaa
sub
cwde
xor
and
cmps
jne
test
sbb
cdq
jbe
popf
std
js
lods
dec
push
loope
outs
enter
add
mov
cmp
dec
sub
pop
and
push
and
dec
out
ror
xchg
call
ja
jns
cdq
jle
pushf
or
adc
adc
jmp
inc
sub
jl
xchg
int3
and
mov
repnz
fwait
aaa
aad
pop
and
jp
pop
xchg
sbb
test
cmp
in
hlt
cmp
lods
ds
int
dec
movs
jb
pop
cwde
outs
das
aad
sub
movs
or
aaa
iret
popf
add
sbb
(bad)
mov
and
retf
inc
push
ret
pop
pop
das
push
aad
pushf
dec
xchg
jae
(bad)
test
ins
or
int3
jmp
dec
xor
fistp
lock
cli
pop
(bad)
enter
mov
add
jp
cmp
sub
lock
xchg
pop
jmp
movs
rcl
push
aad
xor
lock
fdivr
xor
xor
(bad)
xlat
inc
dec
cmp
repz
outs
hlt
iret
dec
push
retf
(bad)
ins
imul
(bad)
popf
fnsave
sub
adc
pop
dec
stos
out
and
sub
dec
push
inc
pushf
push
pop
pop
dec
mov
sahf
jl
rcl
cmc
mov
out
dec
xchg
mov
test
pushf
xlat
mov
int
push
div
sub
mov
or
(bad)
mov
jmp
test
or
imul
or
mov
movs
sbb
iret
inc
xor
push
movs
fsubr
mov
sub
or
jle
xchg
lea
inc
mov
add
xor
retf
ins
aas
rol
mov
cmps
dec
mov
fbld
sub
adc
rol
pushf
cmovbe
movs
xchg
and
mov
mov
mov
ja
mov
or
add
jb
cwde
or
mov
and
mov
dec
test
cdq
and
dec
jmp
mov
push
adc
nop
sub
cmp
dec
pop
sbb
cmps
sti
and
mov
daa
push
cmp
neg
push
cmc
out
pop
push
jae
add
enter
jbe
pop
iret
(bad)
fidivr
mov
mov
cmp
sar
dec
jge
cmp
into
aas
mov
and
nop
adc
mov
iret
and
rcl
pop
mov
jo
inc
pop
(bad)
ins
aaa
das
lods
mov
jg
movs
(bad)
test
mov
ss
hlt
dec
lea
lods
adc
push
in
jecxz
ins
repz
pop
cmp
mov
fbstp
out
or
jecxz
loope
push
add
je
mov
xor
inc
leave
ret
cwde
loop
lahf
sbb
ins
inc
mov
test
scas
retf
shl
and
push
mov
rol
pop
pop
lea
add
movs
dec
cmp
jl
add
cmc
in
mov
jl
out
dec
hlt
aam
pusha
xchg
leave
popa
cmps
in
loope
daa
cmc
mov
inc
adc
cmps
popa
or
ret
data16
push
jbe
fnstsw
jmp
retf
test
fsub
in
adc
mov
cmps
add
cmp
mov
adc
jmp
rcl
hlt
jl
mov
xchg
jno
ds
adc
(bad)
xchg
pop
xor
pop
popa
sbb
shl
clc
mov
adc
and
test
lea
adc
jno
arpl
xchg
mov
mov
out
pushf
push
popa
and
push
div
outs
mov
rol
out
arpl
add
cdq
jns
test
in
mov
push
sbb
inc
cmc
ficomp
adc
cmp
fs
xchg
adc
sbb
aam
xchg
mov
ds
ror
fnstenv
mov
inc
adc
shr
xchg
xor
sti
and
cmp
(bad)
jmp
xor
aam
cmp
jbe
xor
pop
jb
ret
sub
pop
fild
stos
and
sub
adc
test
jmp
push
inc
aad
dec
or
sub
mov
repnz
and
pop
call
sub
jmp
push
lock
xor
mov
mov
clc
cmc
fidiv
aad
dec
fwait
int
gs
push
test
inc
lods
sbb
pop
xor
je
sub
jge
jo
aas
stc
and
gs
push
inc
inc
pusha
and
js
sub
or
addr16
icebp
xchg
sbb
out
les
in
ins
les
pop
xchg
shr
int3
and
lods
and
xor
pop
data16
cmp
jg
test
pusha
call
sbb
movs
into
sub
iret
fstp
inc
rsm
mov
les
out
out
xchg
xor
mov
sub
adc
call
jno
adc
or
int
icebp
xchg
push
cmp
nop
ins
mov
inc
mov
and
enter
cmp
inc
xor
scas
mov
jmp
adc
sub
jmp
mov
mov
xor
pop
leave
inc
mov
xlat
sbb
es
js
popf
int3
pop
cmps
cmps
cmp
or
xor
mov
out
push
add
mov
jnp
mov
xor
pop
outs
leave
test
push
cmp
js
mov
jne
loop
in
cmps
arpl
mov
inc
fldcw
test
dec
stos
ds
call
lods
or
and
jo
scas
sub
xor
push
mov
mov
mov
jecxz
lock
or
popa
aad
push
sbb
pop
sub
jbe
jl
jg
fisttp
xchg
pusha
cmc
cmp
outs
dec
jae
ror
(bad)
pop
pop
mov
jecxz
data16
arpl
add
add
int3
mov
fwait
sbb
xchg
xor
add
std
and
xor
dec
loop
push
mov
and
adc
mov
pushf
popf
mov
out
das
das
test
repnz
mov
fdiv
fisttp
push
and
xor
ret
shl
sbb
adc
fcom
stos
xor
rcl
add
mov
jge
push
jne
sets
pop
cdq
or
mov
idiv
push
mov
shl
mov
mov
scas
jnp
mov
and
les
sbb
div
sahf
lock
xor
cli
sahf
or
repnz
sub
add
xchg
fs
cmps
xor
mov
repnz
xlat
push
movs
fcom
push
test
lods
fwait
mov
es
add
dec
stos
jns
inc
lods
mov
jo
fisubr
ror
cli
pop
stos
je
loopne
stc
test
cmp
outs
arpl
or
(bad)
jl
sbb
cmp
jne
repz
js
dec
xchg
cmp
push
mov
ins
outs
test
add
push
jecxz
sub
pushf
jecxz
sbb
inc
fsubr
jmp
jg
scas
push
mov
adc
inc
mov
ret
fwait
xchg
push
cmp
adc
pop
jnp
out
mov
jne
sub
and
mov
pop
icebp
call
pop
daa
scas
hlt
icebp
or
cwde
mov
bound
fwait
nop
fdivr
out
cmp
popa
outs
outs
pushf
mul
imul
or
ret
jae
pop
repz
aad
dec
not
shl
fldcw
rcl
aam
mov
retf
mov
mov
push
cwde
add
repz
fadd
jb
test
ins
pop
and
sbb
loopne
pop
data16
dec
fisttp
sbb
sbb
in
jae
inc
daa
adc
cmps
jns
sub
pop
and
push
lock
lahf
addr16
xor
or
mov
imul
icebp
icebp
dec
mov
rol
fcom
lea
mov
pop
gs
sbb
clc
sbb
push
cmps
cmp
mov
add
jno
push
popa
xchg
aam
stos
mov
aaa
xchg
icebp
mov
stos
imul
and
inc
adc
xchg
(bad)
cmp
and
subps
mov
ss
push
(bad)
(bad)
fdiv
jne
lods
cld
(bad)
dec
fist
or
or
inc
loopne
stos
inc
sbb
cmp
xlat
ret
push
or
dec
clc
xchg
ss
int
loope
mov
push
addr16
rcl
mov
cdq
adc
movs
sbb
mov
(bad)
sbb
xchg
call
and
inc
sub
movs
addr16
mov
xor
rcr
push
push
inc
sub
or
jg
xlat
test
shr
mov
push
lea
int3
loop
repnz
jl
call
cmp
sub
daa
ins
ror
mov
jo
mov
dec
fmul
mov
movs
add
out
pop
clc
sub
in
mov
mov
mov
push
mov
adc
jle
lods
pop
mov
leave
jge
xchg
outs
pop
pop
mov
xor
out
cmp
es
adc
bound
mov
push
or
inc
and
test
sbb
mov
mov
inc
jmp
dec
pop
push
mov
add
add
rcr
shl
dec
jnp
jge
mov
xchg
test
jno
sbb
xchg
(bad)
outs
cld
leave
iret
clc
ret
jbe
or
in
cmp
retf
(bad)
retf
test
cwde
adc
cmp
and
xchg
cs
call
cmp
ja
popa
pushf
jo
sbb
hlt
aam
lods
pop
push
fld
mov
jae
push
push
cmp
adc
jne
inc
mul
push
pop
push
jns
lea
fcmove
push
pop
nop
cmps
add
dec
mov
push
push
pop
xchg
or
arpl
mov
mov
fistp
xor
inc
jmp
push
xor
mov
(bad)
pop
mov
mov
jp
jns
outs
mov
jmp
pop
test
popf
data16
into
(bad)
dec
test
jp
sbb
pop
push
pusha
icebp
out
xchg
pop
mov
mov
fisub
or
add
icebp
scas
in
shr
mov
daa
pop
jae
xor
and
xor
pusha
fwait
jb
pop
fisttp
inc
iret
fimul
cmp
or
in
out
xor
sub
push
test
jno
jecxz
div
retf
mov
(bad)
mov
pop
and
ds
pop
jne
adc
cmp
push
push
in
cmps
xchg
jnp
inc
mov
mov
pop
loopne
dec
stos
or
sbb
mov
out
xchg
xor
cmp
sbb
js
sub
sbb
out
xor
adc
fwait
push
xor
push
mov
js
jb
or
or
call
(bad)
pop
es
xor
mov
push
pusha
and
push
pop
sub
cmps
clc
dec
mov
outs
push
cmps
push
leave
cmpxchg
mov
mov
ficomp
xchg
xchg
and
inc
adc
mov
fmul
xor
test
inc
and
or
xor
scas
out
ds
or
ds
mov
pushf
fs
xchg
pop
mov
nop
fldenv
fidiv
push
dec
data16
or
adc
inc
adc
pop
add
stos
xchg
aam
int3
popa
rol
sbb
loope
loop
retf
imul
sub
mov
mov
add
xchg
mov
cmps
push
movs
add
mov
idiv
shr
hlt
mov
cli
jp
or
and
popf
dec
push
sbb
lds
ror
mov
xor
rol
das
inc
cld
test
lods
(bad)
je
stos
jmp
outs
mov
jecxz
mov
stos
fisttp
push
clc
push
xchg
cld
in
xor
xor
pop
jnp
xchg
dec
loop
test
sub
mov
ds
sub
mov
test
mov
repz
js
das
pop
inc
xchg
test
adc
sub
movs
call
xor
cs
out
ret
rcl
outs
fsubr
xchg
sbb
cmp
les
cli
pusha
sahf
mov
add
(bad)
or
outs
or
pusha
xchg
cdq
sbb
sub
lods
in
add
iret
cld
and
mov
xlat
shr
mov
cs
dec
(bad)
mov
xchg
retf
das
leave
inc
ss
mov
push
rcr
inc
dec
in
neg
mov
repz
sar
ja
nop
cmc
push
js
push
(bad)
out
sub
jecxz
fwait
(bad)
(bad)
pop
js
scas
fwait
pop
sub
sti
jge
shl
(bad)
in
push
shr
mov
push
rcl
pushf
xchg
sbb
push
pushf
popf
dec
es
add
out
sub
aam
lds
mov
test
xchg
add
jnp
sub
icebp
dec
in
mov
loop
cli
mov
xor
fstp
fcmovnbe
and
cli
xchg
test
neg
movs
std
arpl
lods
fdivr
stos
cli
mov
and
mov
das
xchg
scas
sub
jae
fisubr
push
mov
and
xchg
cmps
cmp
fadd
or
sub
ja
xchg
add
mov
xchg
retf
arpl
pop
sub
shl
push
(bad)
scas
lahf
cmp
jecxz
fld
xor
mov
aas
in
mov
hlt
and
jne
(bad)
lock
hlt
mov
in
mov
and
(bad)
jmp
fs
xor
test
pop
cwde
mov
sbb
popa
jl
stc
pusha
lods
dec
inc
lods
xchg
dec
inc
imul
dec
jecxz
cmp
inc
xor
mov
cmp
call
fidiv
xor
cmp
std
aas
mov
xor
mov
sbb
stos
and
ja
in
mov
popf
adc
cdq
mov
add
pop
daa
push
loop
jg
repz
movs
lods
dec
iret
pushf
mov
dec
sbb
addr16
aam
jle
adc
xchg
xchg
jnp
inc
add
pop
out
popa
mov
add
inc
sub
rcr
add
inc
stos
aad
sub
ss
pop
cmp
add
inc
sub
movs
(bad)
bound
jns
jle
sub
fidivr
inc
xchg
dec
movs
imul
sti
mov
add
mov
out
xchg
xchg
cmp
in
xor
mov
jge
fcomp
lds
pop
fs
and
popf
inc
out
test
jbe
aad
out
inc
sub
sahf
sub
(bad)
cmc
je
sbb
pop
dec
mov
idiv
repnz
clc
mov
les
sbb
enter
test
sub
push
jns
rol
int
jo
lea
fs
inc
jmp
pushf
sbb
stos
fisub
stos
push
fcmovbe
cmps
cli
test
jge
iret
xor
aas
xchg
pop
outs
ror
inc
jmp
mov
push
mov
add
shr
xchg
repnz
and
xchg
ret
lahf
lahf
or
nop
(bad)
stc
in
aad
adc
into
jle
pop
jne
pushf
in
mov
pushf
dec
adc
iret
cmp
add
jno
xchg
es
out
xchg
daa
xlat
arpl
pusha
and
mov
das
outs
sbb
loope
mov
ds
cwde
ror
mov
sbb
and
mov
mov
ins
mov
mov
sub
dec
mov
jae
mov
pop
mov
(bad)
loopne
push
pop
test
imul
out
jne
xchg
sub
mov
pop
xor
test
in
(bad)
xchg
sub
push
jmp
dec
movs
mov
loope
mov
repnz
xchg
fcomip
clc
sub
test
mov
out
je
std
mov
lods
ret
mov
and
sub
fcomp
in
inc
out
addr16
inc
push
mov
in
enter
lods
daa
cs
add
adc
adc
inc
adc
jg
cld
cld
jno
mov
cli
jb
(bad)
movs
pop
ds
in
cmp
push
movhps
in
js
leave
(bad)
dec
xor
cmp
mov
retf
inc
sbb
cmp
and
stos
cmp
adc
push
add
or
lods
into
rcr
in
sub
jnp
retf
imul
push
mov
sbb
loop
repnz
xchg
mov
std
sub
xchg
pop
aas
dec
mov
addr16
iret
icebp
jb
sti
(bad)
push
iret
mov
das
push
lea
pop
push
add
std
adc
push
out
adc
pusha
ins
fld
test
lock
push
push
call
fcomp
sbb
push
cmp
mov
std
into
and
inc
dec
mov
stc
inc
fisub
inc
sub
or
das
(bad)
cmp
xchg
jmp
jbe
pop
sub
jle
mov
cmp
lods
jl
dec
mov
dec
fiadd
mov
stc
add
dec
out
lahf
jmp
arpl
repnz
rol
cmp
imul
xchg
test
mov
jbe
or
lods
mov
cmp
push
ficomp
jbe
xchg
in
(bad)
mul
sbb
pop
inc
xor
jg
popf
xlat
inc
mov
aaa
dec
neg
lods
retf
call
adc
pushf
mov
test
mov
out
test
in
mov
icebp
rcr
pop
push
dec
mov
jg
dec
xchg
cmp
cld
in
xchg
into
lds
jmp
loope
jbe
cmc
fsub
je
int3
dec
fimul
aam
jmp
mov
push
push
leave
ins
jne
das
push
dec
inc
jo
mov
ffreep
jo
push
jp
(bad)
dec
mov
mov
(bad)
call
js
xchg
sub
imul
iret
or
lea
mov
ror
arpl
stc
movs
rol
icebp
sbb
fs
xchg
stc
dec
push
test
and
push
das
jo
jg
xchg
push
dec
mov
adc
push
dec
xlat
call
js
sti
adc
imul
scas
popf
fld
scas
ret
int3
cmp
inc
fadd
adc
jmp
movs
out
scas
arpl
jp
inc
imul
faddp
cmp
jecxz
adc
retf
dec
mov
pop
ret
sbb
aam
sbb
loope
inc
les
fcomp
fstp
inc
imul
xchg
mov
xchg
call
xchg
push
cmps
add
mov
nop
xchg
popa
inc
popf
push
jno
(bad)
fs
jb
mov
fmul
(bad)
js
in
cmp
ins
mov
xchg
mov
mov
movs
jae
cld
add
(bad)
pop
(bad)
mov
dec
mov
jb
jmp
inc
sub
inc
dec
xchg
push
push
xchg
jmp
jp
bound
test
cli
sub
scas
xor
nop
and
int3
adc
sbb
ret
in
(bad)
sub
cmp
stc
ins
(bad)
not
in
pop
inc
push
lods
sbb
(bad)
mov
fisttp
or
push
idiv
loopne
dec
sar
fisttp
adc
inc
int
jmp
fiadd
fdiv
mov
aaa
into
and
sbb
mov
or
stos
dec
inc
(bad)
std
enter
pop
sbb
loope
sbb
imul
or
jp
les
add
xchg
pop
sahf
cmp
fsubp
enter
daa
mov
int3
jle
mov
and
movs
lahf
add
test
push
pushf
sbb
add
shl
sbb
pop
ja
daa
jne
cmp
std
sub
stc
lods
push
xchg
in
cli
loop
or
push
out
sar
int3
shl
popa
dec
push
sub
aas
fidiv
or
push
add
mov
(bad)
mov
and
cli
std
and
mov
iret
sbb
loope
test
xor
pop
push
sub
xor
pop
xchg
shl
push
ja
sar
fstp
(bad)
fwait
div
and
in
jmp
cmc
mov
sbb
pop
cwde
jmp
fs
jno
lods
or
shr
movs
sub
scas
popa
and
mov
fwait
mov
sub
add
(bad)
outs
jno
or
js
xchg
mov
mov
push
repz
adc
add
pop
add
div
cmps
xchg
push
adc
push
push
and
out
aad
adc
pop
xchg
mov
inc
mov
clc
fwait
shl
fidivr
mov
mov
jg
nop
push
mov
and
xchg
lsl
mov
pop
test
inc
pusha
cmc
mov
sub
je
pop
push
test
ret
(bad)
fistp
icebp
lods
adc
and
sub
mov
inc
or
stos
dec
adc
jns
rcr
std
xchg
pop
pop
pop
scas
femms
in
mov
add
push
xchg
gs
test
add
xor
or
call
addr16
adc
scas
cli
retf
inc
iret
sub
cmc
mov
mov
loopne
ins
and
xor
jecxz
ror
out
fmul
in
lea
mov
(bad)
sbb
es
clc
xor
sub
test
fnsave
xchg
dec
add
into
jne
lods
cld
(bad)
movs
rcr
dec
aam
push
sub
pop
hlt
(bad)
std
gs
or
imul
sub
scas
xor
adc
ja
into
popa
dec
push
add
xchg
add
cmps
nop
in
mov
fwait
dec
xor
stc
sti
into
sbb
push
stc
cmps
mov
push
xchg
mov
xchg
pushf
popf
and
sbb
sub
mov
retf
movs
and
ss
dec
iret
int
mov
inc
push
jae
pop
mov
jmp
fisttp
or
ins
mov
ds
fisubr
into
popa
mov
addr16
ret
dec
xor
loopne
mov
and
pushfw
nop
xchg
lock
mov
lds
(bad)
push
leave
adc
hlt
loopne
pushf
fs
lock
xchg
sub
pop
loope
jecxz
cmp
sar
shl
fcom
shr
push
pop
lods
(bad)
aad
push
jge
inc
and
arpl
jg
or
mov
push
fxch
fiadd
push
inc
enter
popa
or
pushf
cld
adc
fimul
mov
xor
and
sahf
sahf
(bad)
mov
lods
or
ds
cmps
cmp
cmp
pop
add
outs
aad
rcr
das
sbb
ror
(bad)
int
call
pusha
mov
mov
cmp
je
fwait
mov
mov
(bad)
loop
inc
(bad)
repnz
pop
test
aam
lahf
push
push
(bad)
mov
sti
push
sbb
jecxz
sub
or
cli
lahf
ja
cmp
jp
mov
sbb
mov
jae
or
sub
xor
push
push
pop
push
into
xchg
cld
mov
sbb
fstp
fist
dec
add
inc
pushf
mov
push
xor
sub
cmp
into
neg
mov
mov
js
lods
push
inc
mov
es
fisub
pop
js
daa
xchg
pop
add
mov
xor
popf
xchg
add
sbb
in
xchg
test
ret
jb
or
dec
add
push
cmc
xlat
push
push
or
xlat
sbb
shl
xor
dec
and
std
add
mov
push
jp
mov
mov
mov
push
mov
xchg
pushf
sbb
add
icebp
or
jb
cld
push
push
pusha
xchg
cmp
mov
jmp
movs
xchg
pusha
mov
sahf
fldenv
mov
xchg
sti
sub
xor
div
xor
aad
div
jecxz
jge
pop
cmps
sbb
or
inc
cmp
dec
mov
xchg
les
add
and
sbb
pushw
(bad)
xor
add
cmp
mov
jp
cmps
or
test
cmps
mov
jae
xor
sbb
and
xor
jle
lods
inc
nop
cmc
cwde
(bad)
in
std
into
call
rcr
or
mov
inc
dec
test
lds
ds
pop
call
ss
mov
mov
adc
inc
ret
fdiv
pop
pop
jle
lds
inc
ficom
cmp
mov
popa
ss
out
ret
arpl
shl
mov
out
or
mov
cld
adc
div
and
nop
xchg
popf
xor
adc
(bad)
xchg
jle
or
xchg
(bad)
xor
jne
fs
sbb
add
sbb
xor
outs
leave
dec
sbb
outs
or
sub
pop
(bad)
enter
add
movs
das
push
(bad)
out
pop
leave
mov
or
push
dec
es
popf
and
aaa
add
pop
xlat
jle
daa
(bad)
aad
rol
xchg
push
pop
dec
mov
int
adc
add
in
fsubr
ss
inc
push
mov
shr
sub
mov
mov
aam
pop
sbb
mov
(bad)
les
add
lods
push
sti
es
add
or
std
adc
sbb
cli
pop
sub
mov
sub
dec
scas
or
cmp
add
in
lea
cmc
and
cmp
dec
int3
mov
add
data16
call
popa
mul
jmp
fist
fs
jnp
add
pop
mov
push
cld
add
pop
jmp
lahf
adc
xchg
xchg
iret
retf
sub
adc
fld
push
adc
out
mov
cmp
int
add
std
jo
push
cmps
sbb
add
movs
jo
jns
push
js
loopne
mov
(bad)
inc
and
adc
fwait
outs
or
int3
sub
int3
mov
ja
test
sub
cmps
mov
sbb
xor
dec
xchg
ret
loop
or
nop
test
(bad)
fild
jne
fidiv
call
mov
and
push
aaa
and
mov
popf
mov
ja
mov
sbb
dec
mov
add
mov
mov
aas
test
pushf
dec
pop
pushw
xor
sbb
xlat
mov
scas
or
lods
ja
push
pop
in
pop
fwait
iret
push
ss
loop
scas
(bad)
pop
(bad)
(bad)
movs
in
scas
stos
adc
xchg
mov
xchg
push
mov
push
push
or
data16
aaa
mov
adc
push
dec
leave
xchg
mov
add
jg
jmp
(bad)
cld
retf
in
adc
and
mov
test
jle
in
xchg
inc
std
out
sub
mov
dec
jle
push
push
mov
js
aam
adc
int3
pop
(bad)
mov
cmp
jo
outs
das
jbe
sub
(bad)
fs
ret
cmp
movs
in
mov
fadd
sbb
outs
data16
sub
push
mov
push
push
shl
scas
retf
add
rcr
cmp
cmovnp
nop
mov
jg
add
and
pop
repnz
add
imul
popa
inc
add
(bad)
popf
retf
and
inc
add
outs
aaa
push
aas
bound
sub
out
jge
jns
adc
xor
inc
stos
div
je
cmps
fwait
pop
stos
aad
stos
mov
push
cmp
mov
cli
adc
pop
or
je
pop
jmp
sbb
test
push
test
pop
or
jno
push
ds
ja
push
es
mov
pop
jl
mov
pusha
fadd
pop
and
mov
jns
and
cli
mov
xchg
cmp
ret
fiadd
cmp
dec
test
jmp
mov
leave
fisttp
test
pop
mov
xor
out
test
xlat
mov
mov
je
and
dec
push
add
xor
fwait
test
cmp
dec
jno
int3
push
sub
nop
pop
ja
rol
out
dec
cmp
aas
in
add
add
push
inc
gs
jp
cs
xchg
and
pop
cmc
sbb
jmp
xchg
dec
aaa
jle
xor
or
or
addr16
in
dec
push
pop
jns
mov
add
and
jo
inc
imul
movs
pop
xor
(bad)
outs
xchg
sbb
pop
cli
jl
scas
dec
in
sub
stos
out
mov
mov
int3
mov
icebp
lea
xlat
test
aad
push
mov
in
or
pop
xchg
xchg
into
into
sbb
xchg
mov
push
ret
jne
ss
xor
enter
movs
cmp
sub
in
or
test
push
das
push
mov
cmc
jmp
clc
push
cmp
push
add
out
pop
cmp
add
icebp
add
imul
bound
dec
retf
xchg
inc
mov
pop
movs
pop
rol
adc
adc
dec
lea
pop
cmp
or
test
je
arpl
and
retf
rcl
mov
jns
mov
and
pop
int
lahf
dec
aad
push
(bad)
aam
mov
retf
clc
sub
(bad)
shl
add
in
jo
fidiv
daa
mov
cmp
daa
into
and
adc
in
mov
mov
out
cmps
push
cmp
lahf
cmps
aas
mov
push
retf
sbb
inc
add
shl
xor
mov
daa
fild
adc
push
aad
ins
push
mov
sbb
mov
or
push
cwde
data16
out
stos
shr
inc
pop
popf
xor
das
dec
xchg
std
retf
fs
mov
jg
fld
mov
pop
inc
jp
jl
or
cmp
(bad)
dec
push
sbb
jmp
test
idiv
push
pop
sub
mov
je
out
loope
inc
mov
in
les
js
adc
cmps
add
int
js
(bad)
sbb
or
stos
fcomip
ret
in
push
fwait
les
add
mov
icebp
outs
shr
test
mov
(bad)
jno
popf
and
inc
push
es
pop
iret
jo
cmp
rol
sbb
pop
cmp
or
loop
adc
(bad)
xchg
cmp
or
aas
mov
push
mov
in
jle
xor
mov
not
stos
push
cmc
and
xor
nop
mov
out
outs
push
fistp
push
fist
pop
xchg
pushf
or
dec
jbe
mov
nop
push
sbb
xchg
inc
ss
aad
popf
cwde
cmp
mov
fidivr
js
jl
xor
nop
mov
mov
lahf
je
or
jmp
cmp
xchg
cmp
jbe
cmp
scas
popf
jae
rcl
push
sbb
outs
stos
outs
mov
inc
mov
adc
std
retf
jmp
cmc
lahf
popa
cmps
mov
call
mov
shr
std
mov
imul
nop
push
jmp
test
jmp
push
jp
inc
repz
mov
add
and
fs
mov
xchg
mov
xchg
add
gs
mov
retf
mov
mov
and
cmp
out
mov
movs
mov
sbb
sahf
add
push
jns
jecxz
xchg
movs
sti
pop
xor
pop
jmp
sub
pop
mul
int
retf
jmp
cld
pop
sbb
sub
inc
scas
xchg
xor
adc
xor
cdq
daa
rol
cmp
aam
out
and
je
mov
rcl
outs
and
imul
movs
and
fs
pop
dec
cmp
add
push
push
dec
pop
lock
xlat
(bad)
and
or
jp
repz
test
lods
xchg
lds
push
cmp
or
cmovo
mov
pop
fst
fidivr
ficomp
cdq
pop
sbb
aaa
out
add
fild
dec
sub
xchg
add
cmp
retf
ret
dec
adc
pusha
pop
pop
inc
(bad)
mov
imul
mov
mov
lea
pushf
mov
jnp
and
pop
popa
mov
mov
lods
(bad)
frstor
or
adc
add
sbb
imul
mov
xor
xor
ins
sbb
loope
push
vmaskmovdqu
stc
imul
add
add
cdq
xchg
out
mov
push
xor
xor
retfw
aaa
out
clc
mov
sti
scas
pop
loope
add
mov
xlat
xor
add
fnstcw
sub
sbb
stos
add
fild
mov
shr
ret
cmp
or
aas
xchg
push
mov
inc
cmp
cmp
imul
out
mov
out
jmp
cmp
test
pop
dec
jle
sub
mov
pop
loope
test
mov
jo
leave
adc
push
es
jno
push
mov
bnd
adc
sub
shl
mov
pusha
dec
test
es
mov
ror
lods
dec
retf
sar
sbb
in
imul
cmps
inc
xchg
mov
shl
add
mov
inc
inc
cmp
xchg
dec
fldenv
outs
sub
bound
and
cwde
call
in
aas
lahf
push
pop
out
repnz
sbb
cld
mov
aaa
inc
shl
int
mov
adc
mov
out
lods
push
iret
lods
(bad)
mov
jne
adc
adc
xchg
sub
sub
das
shl
push
lahf
addr16
add
push
int
mov
fwait
stc
sub
in
test
jno
call
inc
sbb
pop
dec
mov
mov
cdq
or
jge
mov
jmp
ret
dec
push
jno
jp
sar
dec
jecxz
push
dec
dec
imul
push
fistp
sbb
mov
and
cld
dec
pop
outs
adc
push
ficomp
imul
push
out
mov
mov
aaa
jns
retf
jno
repnz
mov
mov
dec
ins
mov
cmc
mov
pop
repz
imul
sub
jle
shl
xchg
out
cwde
inc
(bad)
imul
mov
mov
push
mov
pusha
loopne
cmp
fidivr
int
lea
inc
das
inc
test
shl
in
and
loope
jmp
ror
push
ins
cs
data16
or
push
ss
push
pop
(bad)
dec
xchg
jmp
leave
xchg
into
mov
push
test
xchg
sbb
push
pop
rsqrtps
rol
(bad)
jl
add
cmp
sub
js
mov
mov
pusha
sahf
adc
(bad)
push
retf
dec
mov
push
clc
imul
(bad)
sbb
outs
ror
and
call
loope
mov
cmp
fld
test
movs
hlt
pop
xor
ins
push
retf
aas
xor
pop
fcmovu
mov
aam
cmp
fsubr
and
inc
sbb
jnp
add
leave
mov
push
aas
or
jbe
cmps
xor
mov
nop
inc
xchg
sub
arpl
dec
jmp
sub
mov
lods
retf
pop
nop
cmp
aas
pushf
(bad)
in
test
(bad)
push
adc
mov
push
mov
cs
sub
add
add
movs
xchg
lds
mov
adc
outs
cdq
cmc
mov
jb
sbb
popf
das
inc
dec
add
je
xchg
or
xor
repnz
adc
dec
sbb
les
push
jno
sbb
adc
mov
arpl
stos
inc
dec
or
iret
jne
lahf
mov
mov
xchg
test
mov
aaa
js
loop
mov
or
js
push
mov
push
sar
repz
enter
cwde
mov
enter
sbb
dec
test
cld
and
std
sub
es
std
sti
inc
jge
pop
mov
cmp
push
repnz
cmp
or
mov
push
js
das
inc
lods
push
ins
push
in
(bad)
cmp
arpl
ja
hlt
jo
push
aaa
inc
out
std
ror
shl
outs
add
lahf
mov
xlat
xchg
imul
mov
sbb
lock
sbb
cmp
inc
das
push
bound
jp
mov
je
(bad)
sub
xchg
add
cdq
aas
adc
test
cdq
cld
push
lds
fwait
test
clc
int
sub
stos
outs
dec
in
aaa
cmps
sti
pop
cmp
add
xor
cmp
inc
mov
pop
fild
gs
mov
jmp
push
cmp
pop
icebp
in
sbb
mov
inc
xor
nop
dec
iret
inc
jl
pushf
aas
inc
jnp
cmps
mul
scas
push
fisub
cld
movups
adc
cmp
idiv
sub
pusha
stc
fbstp
(bad)
xchg
fcom
cmp
cli
lea
jmp
mov
xor
mov
sbb
dec
add
mov
inc
add
mov
lods
push
fld
aaa
aaa
xor
loop
imul
ds
xchg
xor
das
jge
daa
ret
or
lock
pop
mov
fimul
pop
push
idiv
pushf
mov
push
ins
fcom
xor
or
js
(bad)
sbb
lea
xchg
callw
cwde
cld
out
mov
in
xchg
xor
xchg
dec
push
aam
mov
fdivr
jmp
and
and
imul
imul
jnp
mov
shl
mov
div
cmp
jg
add
jnp
sbb
sub
lds
inc
(bad)
lock
add
xchg
mov
cmp
sti
inc
in
mov
xor
fdivr
push
stos
sbb
sub
pop
dec
and
dec
test
sbb
int3
jns
out
mov
cmp
mov
mov
test
icebp
clc
add
cs
out
loop
retf
not
mov
and
jp
inc
not
sub
inc
addr16
cmps
jno
mov
idiv
lods
inc
je
push
popa
iret
shl
dec
bound
add
or
add
push
mov
das
sub
fwait
fs
fstp
dec
ss
and
(bad)
jl
and
fxch
into
sbb
xchg
ss
jbe
imul
leave
push
in
or
cmc
pop
inc
xor
or
add
cld
shl
pop
cdq
sbb
push
lds
in
mov
mov
daa
std
xchg
imul
cmps
scas
xor
jnp
mov
push
inc
xchg
test
lods
or
inc
lahf
add
pop
stos
jae
xchg
xor
jmp
push
pop
inc
sub
fwait
test
xchg
jnp
lods
(bad)
call
fld
aam
dec
xchg
sub
shl
retf
lock
jno
pop
dec
push
xchg
xchg
les
out
bound
ret
mov
fsub
mov
int
cld
mov
push
call
cdq
mov
ds
js
dec
or
aas
mov
add
retf
pop
mov
xchg
dec
adc
push
push
(bad)
cmp
hlt
inc
sahf
push
mov
mov
mov
push
dec
jg
inc
sbb
add
dec
add
mov
in
(bad)
out
outs
iret
lods
(bad)
stc
mov
inc
mov
pusha
in
fs
xor
test
lds
fstp
aaa
mov
das
inc
in
cmp
jge
pushf
enter
mov
jo
mov
test
imul
mov
push
and
iret
cwde
cdq
inc
adc
sub
or
mov
fnsave
cmp
retf
js
mov
ss
pop
pop
nop
lahf
test
push
popf
out
fdiv
sub
xor
mov
out
je
pop
cwde
mov
ins
and
xchg
mov
jo
ret
lds
add
addr16
or
mov
jo
(bad)
gs
rol
lahf
sar
ret
ret
jecxz
pop
clc
add
pop
test
fsubr
xor
dec
(bad)
loop
mov
(bad)
sbb
mov
es
std
push
xchg
test
adc
loope
cli
jae
adc
test
(bad)
xor
scas
and
mov
test
sub
leave
xor
fdivr
lods
dec
jo
fchs
push
int
sbb
out
jbe
cmp
cli
popa
push
and
ss
inc
test
ret
sbb
cmps
and
(bad)
loope
inc
push
out
or
retf
or
in
rol
call
mov
pop
jno
jmp
loopne
xor
or
jae
jg
movs
sahf
push
mov
call
fild
les
push
sbb
std
inc
int
pop
dec
daa
mov
xchg
and
test
mov
and
add
push
mov
pop
xor
fcmovnbe
xchg
mov
sub
xchg
nop
fcomp
std
sbb
mov
push
test
cmp
mov
aam
mov
(bad)
sbb
scas
mov
adc
pop
mov
mul
mov
xchg
push
push
cmp
fcomp
dec
popf
push
arpl
cmp
aad
arpl
mov
sub
imul
mov
out
(bad)
out
push
adc
cmps
repnz
ret
and
aaa
(bad)
je
ins
mov
nop
pop
dec
call
out
enter
mov
add
sbb
add
pop
loop
mul
(bad)
xor
or
inc
xor
inc
jg
mov
dec
out
push
xchg
call
fmul
adc
outs
xor
cmp
inc
icebp
imul
call
lahf
repz
jle
test
xor
sub
jmp
mov
push
movs
lea
repz
mov
push
adc
xor
int
push
dec
les
xlat
mov
repz
xchg
xchg
lahf
xor
mov
int3
std
(bad)
cmp
dec
fsub
mov
mov
test
push
xor
outs
inc
xchg
mov
pop
dec
xchg
sub
ins
pop
rol
xchg
adc
int3
mov
or
into
sbb
rcr
cmps
jno
sub
lahf
ins
ret
mov
add
test
je
scas
(bad)
test
test
dec
cld
adc
loope
sbb
xchg
sbb
js
imul
(bad)
sbb
or
jbe
jp
loope
mov
test
outs
stos
into
xchg
push
ret
adc
(bad)
xor
sub
(bad)
scas
test
stc
cmp
dec
mov
js
push
nop
xchg
aam
jnp
and
cld
add
sub
push
adc
hlt
(bad)
push
std
inc
(bad)
ins
mov
mov
test
rcr
add
sub
mov
mov
cmp
std
in
icebp
ret
and
idiv
jns
xor
sbb
mov
or
sbb
cmp
xor
dec
xchg
dec
add
adc
jae
int
out
hlt
pop
jno
sahf
fistp
aam
dec
inc
jae
dec
and
jo
rcr
in
or
push
sub
fdiv
xor
adc
cs
push
mov
fistp
imul
xchg
dec
dec
stos
adc
dec
aam
out
pusha
mov
fcmovb
jge
cmp
mov
cld
push
fcom
mov
cmps
scas
cwde
leave
adc
pop
mov
call
sub
pop
and
mov
push
outs
call
or
mov
rcl
xor
push
inc
sub
gs
lock
inc
inc
pop
jns
(bad)
pushf
xchg
stos
pop
xchg
mov
pusha
in
and
iret
stos
and
in
fs
or
jle
fsubr
cmc
test
pop
aaa
and
adc
mov
inc
mov
ss
sbb
fucomip
fimul
xor
mov
pop
jo
shl
addr16
cdq
jb
in
popf
mov
jne
cli
in
add
pop
das
ret
dec
cld
sbb
retf
icebp
cli
js
test
fisubr
mov
lock
fild
xor
out
cmc
jae
(bad)
xor
scas
hlt
inc
mov
mov
cmp
arpl
jg
dec
mov
(bad)
sub
xor
retf
nop
dec
stos
inc
fcmovb
leave
imul
sahf
or
js
fwait
sbb
jmp
add
xchg
in
adc
test
das
add
mov
movs
cli
push
lods
mov
push
fld
mov
imul
(bad)
push
inc
(bad)
cld
sub
xchg
push
daa
out
sub
push
adc
cmps
sub
in
sub
push
push
mov
sbb
loope
sbb
sbb
push
push
loope
test
test
cld
pop
ret
mov
pusha
adc
fmul
cld
xchg
or
mov
mov
shl
sbb
push
xchg
repz
dec
mov
inc
ffreep
movs
jp
in
jbe
test
adc
mov
aas
(bad)
ins
jmp
push
int
jb
fnstcw
retf
mov
xchg
xor
stos
inc
fdiv
jbe
ins
ins
pop
sbb
les
mov
adc
cmps
xor
(bad)
jmp
fistp
and
js
sub
jmp
sub
jge
cmp
(bad)
rcl
mov
xor
lods
imul
(bad)
xchg
jl
data16
pop
lods
sub
test
repnz
fwait
adc
push
and
dec
rcr
add
jo
movs
jno
jmp
fadd
xchg
jbe
movs
ror
test
mov
movs
add
icebp
fcmove
je
add
mov
rol
bound
mov
xlat
dec
bound
dec
stos
movs
bound
xchg
(bad)
fild
mov
mov
inc
inc
cmps
and
pop
shl
push
push
arpl
leave
push
popf
jb
xlat
idiv
jnp
or
shl
(bad)
xlat
or
cmp
retf
cmp
shr
mov
lods
add
sub
mov
and
fcomp
enter
mov
sub
pop
sub
loop
add
sub
inc
pop
aad
add
add
hlt
mov
arpl
xor
or
and
fsubrp
cmp
push
pop
arpl
pop
sub
adc
push
push
cmp
jne
test
sbb
lods
push
mov
push
je
pop
add
dec
mov
mov
add
inc
or
movs
test
test
mov
and
retf
push
int3
xlat
add
mov
and
ins
dec
loope
fdivr
bound
out
inc
aad
fnstcw
and
jbe
adc
inc
adc
leave
mov
cmp
or
push
pop
jne
jle
mov
pop
xchg
push
sbb
adc
mov
inc
ds
push
les
ror
pop
and
mov
xchg
pop
outs
out
std
push
jmp
outs
inc
xor
pop
push
inc
xor
mov
mov
jecxz
jmp
mov
pop
imul
shr
stc
push
gs
push
cs
arpl
cdq
xchg
cs
aaa
jmp
cwde
sti
sti
(bad)
shl
cld
dec
into
inc
mov
mov
or
cmp
sbb
ins
in
xchg
shr
mov
fist
dec
jae
movs
push
sti
pop
mov
push
ds
or
xchg
daa
cld
lock
nop
(bad)
call
fsub
ficomp
sbb
adc
sub
jle
jns
pop
bound
ins
fs
mov
cmc
adc
(bad)
sbb
jecxz
ja
push
mov
cmp
or
xor
std
test
pusha
and
mov
fmul
jle
cmp
sub
fs
div
mov
add
mov
iret
fsub
fimul
inc
push
push
fcomp
xor
xor
pop
push
mov
fmulp
pop
jmp
inc
les
or
pop
loope
test
sbb
mov
push
inc
mov
in
push
mov
or
shr
adc
loopne
jecxz
adc
jmp
xor
inc
ret
aad
(bad)
in
add
dec
scas
sub
mov
dec
call
cmp
xchg
cli
jae
in
mov
adc
mov
iret
mov
(bad)
mov
lods
mov
xor
jne
adc
fdivrp
dec
cmp
das
jb
in
mov
cmp
call
push
pop
dec
imul
sub
dec
int
in
ss
int
dec
mov
addr16
push
outs
cmp
call
xchg
or
push
jmp
dec
or
push
push
jp
aas
sub
inc
and
fdivr
mov
out
movs
adc
xchg
and
cwde
idiv
ret
push
sub
movs
jle
fwait
cmc
pop
repz
jp
cli
mov
pop
sar
cmps
mov
push
sar
dec
dec
in
(bad)
fwait
jne
mov
call
or
jge
xchg
addr16
rol
cmp
push
in
inc
es
pop
cwde
mov
dec
jo
loop
cmps
pop
xor
push
mov
into
pop
xor
mov
stos
test
lea
fs
mov
sbb
jb
in
scas
sub
mov
repz
call
cmps
stos
out
jae
(bad)
jnp
out
rol
adc
mov
mov
cwde
ins
xchg
pushf
dec
lock
in
popa
test
cmp
iret
aad
push
or
inc
inc
pushf
dec
js
in
mov
in
dec
mov
imul
xchg
sbb
mov
sub
lods
adc
xor
dec
adc
rcr
cmps
or
xor
sub
clc
dec
sub
mov
dec
sub
out
lahf
and
test
xchg
mov
call
lea
inc
ja
nop
dec
xchg
(bad)
mov
jo
and
aad
adc
ins
sbb
shl
xchg
cld
mov
fnstenv
cwde
adc
call
cmp
mov
cmp
xor
jle
std
cmp
sbb
sub
cmp
push
ret
jmp
push
jns
fisttp
jae
movs
out
push
loopne
icebp
ins
call
(bad)
aam
mov
pop
ja
push
das
fisub
dec
mov
sar
repnz
xor
mov
retf
in
in
push
out
adc
jb
mov
fldcw
dec
mov
mov
mov
pop
arpl
inc
int
fs
inc
mov
adc
cmps
mov
push
push
cmp
cdq
xor
or
movs
rcl
jnp
sub
or
xchg
aas
in
cmp
push
inc
jnp
shl
mov
in
cwde
sub
(bad)
cmp
scas
xchg
ficom
repnz
mov
mov
or
sub
push
sub
in
fsubr
inc
push
nop
cmps
jmp
cs
test
mov
in
repz
jl
push
retf
sar
push
(bad)
into
mov
mov
je
cmp
push
in
ret
je
pop
and
sbb
fdivr
adc
jmp
cs
mov
mov
pop
dec
es
pop
jno
and
das
mov
jbe
sub
cld
mov
jg
cmp
dec
jg
fisubr
cmc
sbb
push
jnp
aaa
aas
iret
sti
mov
add
push
ss
cmp
xor
sbb
push
ins
aad
jl
or
out
xor
sbb
cmp
(bad)
dec
lea
retf
push
add
xor
pop
repz
mov
mov
daa
jg
fcmovnbe
dec
adc
xor
mov
xchg
push
sbb
ror
cli
ret
loope
xor
jmp
leave
cmp
adc
adc
ret
gs
add
ret
xchg
push
xchg
mov
stos
ins
in
repnz
jge
dec
(bad)
int
ror
mov
or
popf
iret
lea
xor
(bad)
jmp
mov
mov
adc
push
in
ret
sub
dec
int
push
test
je
add
test
cmp
movs
out
sbb
hlt
mov
dec
mov
xchg
leave
add
pop
cmps
sub
daa
aas
gs
sub
cli
mov
sub
jmp
in
shl
add
in
add
out
pop
addr16
iret
scas
mov
mov
lock
addr16
and
lock
lock
push
xor
scas
adc
push
adc
sbb
add
call
sub
push
pop
cli
dec
push
xchg
ret
cmps
sub
in
jo
and
xor
and
imul
mov
mov
inc
pop
mov
push
pop
jns
jmp
call
mov
in
shr
rcr
sahf
dec
cmps
add
push
lods
push
add
mov
mov
cld
fnsave
push
(bad)
jns
and
inc
xlat
inc
ror
jge
loope
out
retf
adc
xchg
pop
inc
mov
int3
and
lahf
cli
xchg
pop
inc
xchg
pusha
cs
jno
addr16
(bad)
sbb
jb
add
fild
jns
or
lock
mov
push
aaa
inc
xchg
cmps
cmps
ret
mov
call
test
mov
lods
es
pop
mov
jg
popa
mov
xlat
das
aad
push
in
jae
lock
sbb
js
add
xchg
xchg
mov
mov
ins
retf
push
push
push
pop
push
xor
mov
mov
dec
xor
and
adc
fwait
ins
sub
jg
jns
mov
pop
mov
inc
pand
and
out
hlt
xor
adc
ja
push
dec
scas
in
jecxz
cmp
jmp
sub
in
in
mov
xchg
(bad)
popa
inc
arpl
(bad)
pop
mov
or
sub
arpl
push
outs
call
inc
lahf
scas
or
fsubr
rcl
lock
sbb
fmulp
imul
mov
mov
ja
fiadd
dec
ss
fmul
ins
xchg
fadd
xor
jmp
adc
test
arpl
popa
ret
fbstp
mov
dec
fadd
retf
jg
ins
loopne
jecxz
or
icebp
neg
movs
jo
loope
xchg
xor
adc
fmul
push
aam
mov
mov
inc
imul
test
push
push
jne
sbb
cmp
add
mul
ret
loop
jle
xchg
in
or
cmp
jbe
rcl
(bad)
jnp
dec
pusha
add
(bad)
call
add
cmc
loopne
retf
xchg
mov
mov
xchg
sbb
ins
mov
lods
sbb
mov
inc
aaa
mov
jp
sti
push
add
into
stos
push
in
jnp
push
cmp
push
cmp
cmp
mov
mov
adc
ret
dec
xlat
xchg
popa
or
scas
mov
(bad)
ror
jnp
adc
sbb
and
jl
adc
out
sar
call
push
mov
sbb
jmp
push
pop
or
sbb
(bad)
les
repz
xchg
xlat
rol
mov
mov
popa
fcomp
pop
loopne
push
fs
push
test
jno
mov
sahf
adc
jge
mul
repnz
xchg
mov
fidiv
jb
add
push
xchg
fistp
imul
mov
repnz
loope
aaa
add
rcr
pop
mov
and
push
aaa
call
mov
jl
mov
sub
and
fdiv
or
or
pusha
gs
cli
cld
mov
ret
stos
sub
mov
sub
es
mov
push
in
(bad)
mov
lds
mov
push
stc
out
lea
mov
dec
shl
cmp
rcl
movs
ja
jp
ins
jmp
mov
xor
mov
fiadd
cmps
push
mov
add
inc
inc
push
mov
xor
or
sub
fwait
or
xchg
jl
(bad)
bnd
jl
adc
mov
test
cmc
or
rol
imul
sbb
fs
cmp
dec
in
jns
add
cld
push
xlat
and
lds
hlt
dec
enter
jp
fist
leave
mov
push
cld
jle
aaa
xor
sub
fld
xor
stc
mov
pop
loopne
in
out
inc
mov
ins
pop
test
dec
pusha
cs
mov
inc
dec
ret
mov
and
jno
and
stos
sub
pop
call
enter
inc
or
xchg
add
lahf
jb
imul
imul
out
out
pop
fs
dec
mov
adc
pushf
(bad)
add
sbb
das
lods
inc
(bad)
(bad)
ret
dec
mov
sbb
push
es
leave
je
and
jl
ds
scas
(bad)
adc
mov
sub
inc
mov
sbb
mov
daa
shl
gs
scas
icebp
xchg
enter
cmps
sti
sub
int3
cs
mov
(bad)
mov
test
add
xchg
push
popf
push
cmps
mov
xchg
retf
cmp
cdq
adc
js
retf
test
test
pop
(bad)
out
not
and
dec
(bad)
cmp
dec
into
sbb
js
jl
and
mov
es
(bad)
xchg
sahf
add
stos
pop
mov
sbb
push
test
pop
mov
adc
xchg
sbb
cwde
push
sub
out
push
aad
icebp
inc
mov
jle
jbe
(bad)
aas
jns
pusha
xchg
sub
pop
sbb
icebp
jnp
mov
aaa
dec
jae
pop
pop
or
mov
dec
add
add
xchg
mov
dec
call
sbb
sbb
mov
cs
dec
inc
cdq
pop
mov
fcmovu
retf
add
mov
(bad)
ja
push
loop
add
in
ins
xchg
cmc
in
out
mov
or
cdq
jb
mov
in
loopne
xor
dec
pop
fnstenv
inc
lods
nop
dec
xor
jge
mov
test
jae
lahf
add
dec
and
xor
sub
and
es
ret
mov
and
(bad)
ret
call
cli
dec
push
(bad)
call
mov
test
retf
mov
aam
jmp
callw
push
xchg
xchg
pusha
test
scas
inc
stos
popa
and
or
shl
addr16
dec
or
mov
mov
push
push
scas
mov
pop
pop
mov
out
inc
fistp
das
dec
xchg
or
sub
ds
sub
mov
mov
ret
scas
imul
hlt
dec
neg
iret
and
cmp
cmps
or
in
sub
das
retf
movs
or
dec
dec
jge
jae
das
das
add
out
xchg
push
xchg
pushf
je
xlat
fst
mov
push
sti
mov
dec
inc
jbe
retf
xchg
sahf
push
push
jge
jae
mov
iret
pop
cmps
cs
pop
inc
int
pusha
inc
or
fidiv
ja
sbb
out
push
(bad)
idiv
push
xor
mov
dec
ds
(bad)
pop
ins
adc
jle
faddp
lods
call
sub
out
data16
aas
aaa
xchg
fnstcw
nop
pop
pop
mov
pop
nop
push
in
jnp
fld
jae
pop
xchg
into
dec
cmp
adc
adc
sbb
xchg
sub
mov
pusha
add
push
loop
push
aad
add
into
fmul
gs
inc
jmp
or
js
movs
sbb
idiv
cld
push
sbb
xchg
shl
xor
inc
call
inc
retf
test
mov
jmp
and
(bad)
(bad)
mov
pop
std
dec
dec
cmp
adc
pop
pop
ret
adc
loopne
nop
mul
ret
ror
sub
xchg
add
jmp
shr
scas
pop
xor
std
add
lds
mov
push
jecxz
jl
adc
lods
adc
rcr
dec
pop
imul
jg
test
mov
sub
cmps
push
xchg
jmp
mov
and
test
out
cmps
stc
xchg
andnps
in
mov
pop
fdiv
push
mov
sub
int3
movs
cdq
dec
(bad)
mov
repnz
pop
xor
push
enter
push
ret
pop
retf
les
xor
push
fild
xchg
cmps
call
ret
lahf
and
data16
repz
cli
rcl
(bad)
dec
scas
push
cs
jae
loop
cmps
and
xchg
mul
das
xchg
jb
mov
sub
or
inc
cmp
adc
in
inc
inc
jge
(bad)
push
push
jne
adc
mov
mov
sub
mul
add
fcom
inc
push
iret
shr
icebp
fcmovu
in
fnsave
inc
lods
nop
mov
mov
pushf
mov
inc
push
pop
pushf
mov
fild
popa
ret
mov
stc
(bad)
clc
test
jmp
mov
mov
(bad)
or
hlt
rcl
fist
xor
push
jne
sbb
mov
adc
or
lea
cmc
cmp
and
(bad)
xlat
in
cvtps2pd
scas
dec
scas
mov
js
ret
inc
fwait
jae
pusha
pop
aaa
mov
xor
or
pop
gs
push
stc
dec
xlat
fst
loopne
push
test
fld
push
stc
out
lock
aaa
icebp
in
or
xchg
xor
clc
int3
test
mov
clc
fild
sbb
sub
push
out
sub
adc
push
and
pushf
(bad)
add
cmp
jae
mov
mov
js
xchg
dec
sbb
dec
mov
mov
xor
xchg
(bad)
pop
aam
inc
xchg
lods
push
test
jne
and
dec
pusha
or
ret
xor
cdq
outs
cmp
fstp
adc
xchg
dec
fst
imul
mov
xor
into
pop
adc
jo
aam
sub
mov
div
lock
xor
or
xchg
xchg
or
push
(bad)
fldcw
into
in
adc
loop
sar
mov
mov
movs
in
mov
das
xor
call
test
jl
jo
push
sub
bound
push
mov
xor
out
ret
xchg
cli
inc
xchg
xchg
dec
push
sub
adc
and
out
aaa
push
push
mov
mov
mov
xor
xchg
and
sbb
pop
out
das
and
test
sub
into
stc
imul
(bad)
mov
arpl
mov
retf
(bad)
mov
sub
mov
jl
aaa
and
push
int
jns
mov
xchg
lods
sbb
push
das
sub
mov
push
call
cmp
cld
or
div
mov
adc
icebp
mov
sbb
xchg
repnz
sbb
mov
imul
loope
cmps
and
add
sbb
in
iret
dec
repz
cld
enter
les
mov
ins
add
sahf
push
adc
lock
jmp
out
mov
cmc
push
xchg
aad
mov
sbb
inc
push
test
mov
cmp
xchg
leave
and
mov
cmp
lods
lods
fistp
mov
data16
sub
pop
enter
sub
xor
xchg
adc
push
or
and
xor
std
cs
jg
repnz
or
or
adc
out
pop
mov
addr16
jbe
cmc
fcom
pop
movaps
cmp
xor
cmp
add
mov
loop
jbe
shl
in
nop
pop
ror
jbe
mov
leavew
sbb
xchg
adc
fst
mov
or
jmp
or
loopne
push
add
loopne
xchg
dec
out
bound
scas
xor
sti
push
push
mov
movs
pop
push
mov
xor
ds
and
dec
mov
leave
mov
pop
or
in
das
cmp
das
(bad)
dec
aaa
inc
push
cmc
mov
int3
mov
cs
mov
ror
movs
xor
repnz
push
push
pop
loop
xchg
push
mov
aaa
jecxz
fucomi
mov
sub
repz
sbb
and
fmul
xor
jg
sbb
mov
sbb
xor
aas
push
xchg
mov
mov
xor
ins
movs
jmp
fcmove
sub
mov
push
xchg
mov
mov
pop
jne
in
or
pop
xchg
cmps
inc
inc
les
or
cdq
pop
das
cmp
xchg
into
or
ja
cmp
pushf
mov
jae
leave
mov
mov
ret
jl
je
cli
sbb
push
addr16
push
and
sub
pop
mov
lods
mov
fnstenv
or
and
xor
jp
cwde
xor
data16
cmp
dec
inc
pop
movzx
and
cmp
ret
xor
bound
out
dec
stc
test
loopne
aaa
iret
mov
mov
retf
push
add
mov
push
ins
dec
pop
movs
in
or
mov
retf
lods
ss
sahf
inc
push
mov
and
call
xor
ds
mov
retf
jo
xchg
out
add
and
ja
cmp
ds
pop
ret
das
mov
add
and
pop
repnz
retf
inc
sbb
jl
push
and
(bad)
xchg
movs
sbb
repnz
pop
arpl
inc
in
popf
pop
icebp
sub
retf
movs
sub
in
cmp
cmp
adc
sbb
inc
inc
add
outs
xor
add
cli
rcr
mov
pop
enter
jb
outs
loopne
ror
in
sub
dec
cmps
adc
xor
xchg
cmp
dec
xlat
mov
data16
push
mov
cmp
xchg
out
pop
test
fs
arpl
pop
mov
and
jbe
fbld
cdq
and
push
mov
(bad)
shl
and
outs
inc
rcr
mov
daa
mov
sub
lods
in
mov
pop
xchg
out
cmc
test
and
cdq
imul
dec
paddusw
jmp
and
test
lds
loop
shl
das
dec
add
and
out
jge
push
inc
fstp
cmc
xor
pop
mov
mov
(bad)
cmp
(bad)
int
xchg
es
rcl
pop
xchg
cdq
mov
loopne
arpl
pop
and
inc
dec
dec
xchg
adc
je
fwait
or
mov
xor
fmul
cli
push
pop
and
xor
or
std
lock
push
jno
mov
jo
jecxz
add
pop
enter
movs
fdiv
mov
lds
xor
inc
ins
inc
sub
xor
mov
or
xchg
or
jge
(bad)
popa
icebp
pop
aad
outs
dec
add
push
push
arpl
jno
xor
scas
mov
int3
push
call
xchg
das
xlat
ins
pop
fwait
int3
xchg
out
jmp
jecxz
imul
mov
or
(bad)
stos
aad
adc
scas
mov
imul
into
jmp
gs
in
dec
add
mov
xor
sub
and
push
push
and
outs
add
movs
pop
test
pop
mov
inc
clc
scas
or
lock
imul
xlat
mul
mov
jbe
mov
inc
test
xchg
stc
mov
or
movs
pop
sub
jne
push
sbb
and
mov
or
ss
dec
pop
pushf
push
mov
scas
mov
into
mov
out
cmp
in
arpl
in
and
jmp
push
loopne
mov
add
xchg
mov
mov
in
xor
cmps
or
xor
jmp
sbb
xchg
xor
pushf
cmps
imul
mov
cmp
imul
jp
adc
loope
arpl
and
ins
(bad)
jns
xor
inc
sbb
data16
and
ss
push
adc
mov
sub
dec
jmp
test
fdivr
cmp
adc
test
pop
pop
mov
jb
inc
lods
mov
in
pop
stos
push
sar
jno
lods
cs
rcl
mov
push
(bad)
popf
mov
repnz
lods
xchg
ins
in
jno
(bad)
inc
sbb
cmp
fbld
adc
adc
sub
push
dec
out
mov
and
sar
mov
adc
in
lahf
jmp
mov
xchg
sbb
pop
pop
sahf
mov
(bad)
nop
xchg
aaa
jl
pop
dec
cmp
xor
(bad)
jno
arpl
les
pop
js
mov
sti
mov
cmp
mov
out
or
les
(bad)
fsubr
sub
jg
xchg
xor
mov
push
dec
das
js
iret
cwde
sbb
movs
js
stc
(bad)
sbb
xor
bound
inc
rcl
ret
dec
aas
repnz
addr16
xchg
add
or
sub
push
js
push
jae
pop
mov
rol
fisub
int
xchg
test
xor
retf
(bad)
adc
jp
outs
test
mov
adc
js
jmp
mov
adc
movs
mov
or
inc
xchg
mov
and
int
fdivr
stos
xlat
dec
in
(bad)
enter
pusha
fstp
cmc
lods
(bad)
jnp
xor
xor
das
mov
jecxz
icebp
mov
jecxz
fs
int3
and
mov
movs
jns
or
sub
mov
or
xchg
popa
xadd
cmp
inc
and
or
shl
mov
adc
inc
push
mov
fsub
mul
(bad)
mov
push
jl
jge
mov
xlat
jmp
fimul
shr
pusha
fisubr
xor
mov
sub
inc
(bad)
out
loopne
mov
dec
cmp
ins
jle
sbb
push
jae
jbe
rcr
dec
adc
imul
sahf
xchg
stos
sti
sub
(bad)
jle
mov
adc
xchg
or
les
hlt
add
in
mov
mov
dec
scas
(bad)
cmc
pop
lods
dec
adc
inc
into
push
adc
inc
stc
or
fxch
jne
inc
sub
jnp
sahf
adc
movs
loop
sub
fdivr
sbb
sar
mov
mov
and
cmp
mov
inc
xchg
jg
push
mov
repz
mov
aas
fst
push
cdq
iret
cmp
mov
mov
mov
mov
push
sub
hlt
mov
jle
mov
mov
enter
mov
push
xchg
addr16
jae
aas
call
jbe
xchg
or
test
mov
xor
inc
mov
pop
push
(bad)
mov
sbb
adc
sbb
in
nop
iret
inc
xor
sar
es
dec
fisttp
leave
rcr
xchg
(bad)
pop
push
shl
(bad)
and
sbb
fstp
mov
xor
mov
js
call
ds
sbb
push
push
mov
or
sbb
inc
sub
push
jmp
mov
test
cmp
psraw
jg
fs
jl
push
xchg
adc
xchg
(bad)
lahf
push
push
scas
mov
mov
pop
add
inc
add
jo
int3
mov
adc
shl
fisub
pop
xchg
stc
sub
pop
jecxz
js
mov
push
test
out
and
hlt
sub
cmp
sbb
fistp
sahf
fst
mov
lods
test
fcomp
test
adc
das
jl
cmps
lea
mov
jp
push
sub
imul
mov
push
push
push
pop
and
test
stos
imul
mov
cmp
or
pop
mov
xchg
mov
dec
mov
and
adc
adc
dec
jno
inc
or
test
mov
jl
cmps
retf
imul
retf
lods
imul
mov
mov
(bad)
xchg
pop
and
jmp
arpl
or
xchg
jo
mov
mov
fcom
inc
ins
gs
mov
out
cmp
dec
leave
cld
mov
sub
mov
arpl
into
cmp
inc
or
loop
or
pushf
shl
push
in
iret
push
out
adc
add
mov
scas
mov
pusha
je
jle
mov
sbb
push
in
mov
inc
adc
rcl
adc
sub
jmp
dec
loop
cmp
sub
and
and
pop
movs
mov
xchg
in
pop
add
xor
xor
ret
fdivp
lock
push
dec
adc
sar
ret
(bad)
push
lock
mov
(bad)
fnstenv
adc
cwde
outs
fwait
push
dec
xchg
rol
cwde
rdpmc
cmp
leave
jnp
int
inc
cmp
leave
mov
inc
jns
sub
shr
mov
push
xor
add
cdq
cwde
mov
sbb
inc
fstp
in
test
sahf
ds
in
popa
(bad)
ins
pushf
xchg
or
test
jae
dec
(bad)
sahf
push
xor
mov
cmps
movs
add
jo
rcl
and
jmp
dec
pop
fmulp
cmp
sbb
scas
mov
sti
sbb
aad
(bad)
adc
rol
pop
sbb
and
jae
jae
cmp
or
movs
(bad)
callw
xor
mov
out
sub
xchg
push
call
clc
setl
setg
jge
rcl
xchg
int
mov
pop
repnz
arpl
call
sar
iret
mov
mov
sbb
mov
push
or
cld
jne
xor
xor
push
jno
sbb
mov
sub
and
xchg
jmp
adc
jne
shr
sub
test
movs
mov
pop
xchg
push
data16
dec
sti
push
mov
xchg
mov
or
fst
in
into
fwait
dec
mov
and
cmps
push
sahf
mov
out
es
dec
jbe
repz
shl
and
loop
fs
sar
in
xchg
pop
(bad)
pop
dec
inc
adc
das
dec
cs
mov
iret
jmp
pop
xlat
lods
loopne
mov
add
outs
lds
cwde
cdq
mov
dec
xchg
dec
xchg
or
mov
sbb
dec
mov
call
xor
gs
pop
push
dec
retf
int
inc
pop
sbb
jle
inc
xor
jbe
ror
mov
shl
les
pop
fdivp
lods
inc
gs
lds
leave
mov
es
clc
out
cmp
sbb
push
gs
test
add
cwde
arpl
les
scas
sti
or
cmp
fcom
inc
cld
test
add
arpl
mov
shr
div
mov
mov
ja
inc
arpl
fs
aaa
inc
movs
iret
retf
pop
mov
lds
mov
mov
push
dec
inc
mov
mov
pop
repnz
lds
pusha
pop
mov
jae
je
jbe
popf
add
mov
xor
sub
lock
pop
sub
xchg
stc
es
div
out
push
adc
in
dec
in
das
ins
xor
sbb
test
and
stc
cmp
mov
jmp
pop
pop
xchg
jb
sbb
inc
jp
js
fs
push
lahf
push
test
imul
mov
inc
jae
test
inc
dec
repz
sub
sub
add
imul
ficomp
inc
push
daa
mov
xchg
retf
inc
mov
mov
aam
rcl
hlt
fs
in
mov
imul
out
cmp
aad
fistp
shl
xchg
xlat
mov
mov
jl
in
inc
push
xor
mov
aam
push
xchg
mov
and
xchg
push
pop
adc
ret
mov
adc
jp
or
mov
xlat
stc
cmp
push
popa
movs
cli
mov
xchg
mov
jae
sbb
push
pop
jb
test
mov
shl
jae
icebp
inc
xchg
int3
sub
jp
fwait
and
pop
mov
push
cmp
xchg
out
or
lock
jmp
xor
and
jb
mov
inc
arpl
xor
mov
add
rcr
shl
mov
aaa
sbb
(bad)
xchg
fisttp
js
jmp
fst
inc
push
sbb
das
test
pop
fiadd
pop
pop
cli
lahf
in
out
pop
mov
mov
push
sbb
mov
mov
mov
jmp
or
xchg
or
out
pusha
inc
out
sub
pop
xchg
sahf
stos
dec
push
lock
scas
inc
xchg
cmp
pushf
lods
stc
dec
push
cld
inc
mov
dec
aam
mov
jmp
ret
dec
test
icebp
mov
add
xor
in
or
and
push
inc
push
lock
popa
pop
outs
cmc
lods
adc
rcr
push
jge
pop
inc
mov
popf
jno
xlat
pop
les
bnd
inc
lds
(bad)
out
sbb
aad
push
xchg
add
in
jns
test
inc
(bad)
aas
xlat
lock
inc
ja
test
inc
inc
push
inc
cmc
enter
jl
ret
test
std
rcr
inc
sbb
fadd
dec
sbb
xlat
pop
xor
jle
adc
or
fs
push
mov
push
inc
outs
fidiv
adc
pop
push
push
stc
ds
add
or
icebp
(bad)
mov
mov
js
lods
push
xchg
sub
add
push
mov
je
jae
shr
mov
pushf
sub
mov
mov
(bad)
fistp
fisttp
add
ret
les
pushf
mov
pop
inc
cld
scas
in
test
dec
jmp
xor
sti
(bad)
fsubrp
fdiv
fstp
(bad)
loopne
ret
pop
shl
(bad)
in
xchg
test
push
adc
retf
fwait
add
aam
mov
out
adc
leave
sub
(bad)
dec
push
out
or
add
shl
pop
mov
add
aas
rcr
aaa
aas
fstp
mov
and
mov
cld
cmp
jno
mov
loop
js
(bad)
xchg
jb
(bad)
aad
pop
aas
sbb
test
hlt
pusha
ficom
xor
(bad)
sbb
push
sbb
sti
lock
adc
and
mov
call
jp
xchg
sbb
xlat
sub
test
dec
imul
cmp
adc
push
je
pop
push
mov
jle
inc
jg
test
sub
repnz
lods
loop
not
sbb
cmc
js
aad
popa
test
mov
fdiv
push
adc
pop
cld
stos
sbb
sbb
fucomi
jne
iret
cmp
(bad)
jmp
xchg
pop
xor
stos
cli
imul
cmp
pop
cmp
xor
sub
retf
and
cmps
push
jno
or
or
popf
imul
dec
jmp
pop
rcr
pop
add
scas
cvtps2pi
lods
int3
mov
xchg
cs
cli
retf
scas
les
mov
ja
cmp
xor
push
aam
inc
cdq
rol
xor
les
bnd
adc
addr16
bound
fdiv
retf
or
mov
js
mov
in
and
in
fsubr
mov
push
test
sbb
ins
jcxz
leave
push
adc
mov
dec
mov
popa
pop
push
cmps
sbb
bound
leave
call
cli
(bad)
retf
retf
cmp
lods
jo
test
sub
xor
jmp
push
call
enter
cs
xor
xor
jp
dec
out
popf
ret
inc
adc
dec
and
mov
push
sbb
mov
popa
or
pushf
pop
mov
push
jle
in
imul
test
aam
stc
jns
ds
cmp
push
mov
add
xchg
int
mov
rcl
dec
mov
shl
fwait
(bad)
pop
mov
and
xor
movs
cld
cmp
arpl
ins
pop
add
jne
jo
add
(bad)
es
mov
xor
dec
fwait
add
mov
mov
das
sub
fbstp
sbb
cld
mov
neg
test
fsubr
mov
xchg
addr16
xor
pusha
jg
cld
cmp
fldenv
inc
xor
mov
les
or
jb
jmp
mov
or
sbb
push
pop
mov
aaa
push
dec
je
mov
cmp
cmp
stos
mov
xchg
(bad)
or
js
(bad)
mov
shl
or
mov
push
int
sub
dec
add
xchg
jmp
lahf
sbb
jecxz
dec
test
mov
pop
stc
cmp
cli
jmp
xor
dec
ret
sub
inc
sbb
out
sbb
lahf
rcl
mov
push
pop
cmc
push
mov
loopne
stos
jg
cmc
push
or
movs
lock
sbb
test
out
mov
dec
cwde
(bad)
inc
int3
(bad)
iret
fs
push
shl
pop
ja
mov
mov
pop
cmp
fisubr
fs
ret
and
cmp
inc
fsub
sbb
dec
adc
adc
xor
dec
cmp
scas
stos
cmps
js
shl
(bad)
cld
mov
dec
out
mov
xor
xchg
stos
dec
icebp
push
sub
add
in
mov
and
inc
sbb
fsubr
jbe
mov
mov
jbe
dec
sahf
jg
pop
aad
scas
push
cmp
pushw
loopne
mov
and
ja
cmc
xor
loopne
xor
push
and
stos
jmp
add
adc
mov
or
mov
sub
into
cmp
fild
out
mov
shl
push
int3
mov
stos
mov
cmps
fisub
dec
pusha
daa
movs
add
push
push
sub
je
loope
xor
fdiv
inc
mov
mov
pop
pxor
dec
mov
(bad)
outs
stos
xor
ficomp
(bad)
push
jmp
and
mov
and
mov
nop
in
pop
in
ss
inc
mov
pop
out
pusha
test
sub
lahf
jge
xchg
frstor
inc
cwde
xchg
adc
dec
push
jl
jmp
ror
and
cmp
xchg
(bad)
test
call
add
and
jge
xor
inc
in
push
(bad)
bound
mov
test
and
jbe
sbb
ja
es
jae
ins
cmp
jge
inc
jo
imul
std
rcl
add
adc
into
pop
test
inc
sbb
lods
inc
inc
(bad)
imul
sbb
mov
sbb
aad
mov
in
shl
and
sub
div
dec
int3
cmps
cs
mov
or
jne
outs
and
cmp
inc
mov
and
or
(bad)
gs
dec
dec
jle
(bad)
dec
mov
xlat
movs
scas
fdiv
xchg
jmp
and
in
(bad)
sbb
fnstsw
fst
outs
mov
repz
(bad)
mov
loop
shl
or
stos
cmp
pusha
push
mov
xchg
sub
xchg
test
stos
scas
in
push
or
(bad)
or
hlt
test
(bad)
(bad)
addr16
lahf
jl
cwde
imul
mov
cmp
je
fcmovu
add
cmps
dec
mov
sbb
loop
mov
ret
adc
mov
dec
leave
cmp
ret
cmp
or
inc
or
xchg
and
mov
sub
or
fisttp
xchg
out
mov
mov
ja
push
mov
cmp
aad
out
pop
ret
cwde
(bad)
retf
sub
cmp
sbb
mov
adc
dec
ss
(bad)
sti
scas
sbb
mov
push
outs
repnz
ret
(bad)
in
xchg
or
sbb
mov
fisubr
and
jmp
pusha
sbb
xchg
rcr
into
jae
sub
ja
pop
stos
add
in
dec
cmps
push
push
outs
mov
into
push
ret
jg
not
cli
inc
retf
jns
push
fs
adc
xor
adc
xchg
ret
cmp
movntps
jbe
fdivrp
ds
push
fcomp
fistp
pop
sbb
mov
jbe
fisubr
ret
adc
push
adc
gs
sti
fmul
pusha
mov
stos
jb
jmp
and
into
xor
push
jo
sub
jb
(bad)
pop
out
xchg
pushf
ror
or
fidivr
adc
or
je
jmp
push
hlt
in
loope
adc
ins
pop
mov
xchg
(bad)
xchg
mov
push
outs
xchg
pop
or
mov
jb
inc
mov
out
pop
imul
std
jecxz
add
test
pop
imul
rol
test
mov
int3
jb
fist
jl
and
js
dec
mov
aad
mov
aaa
in
sub
in
lods
lea
outs
sub
jle
add
call
add
arpl
mov
loop
cmp
cmc
mov
enter
mov
cwde
jmp
jns
pop
(bad)
xchg
std
nop
add
pop
inc
sbb
pop
mov
(bad)
adc
mov
xchg
lahf
loope
cli
nop
into
xchg
mov
inc
fcmovu
rcr
push
iret
mov
sbb
ficom
sbb
mov
jnp
or
adc
mov
stos
rcr
add
out
out
jmp
loope
or
adc
cmps
mov
sbb
in
ret
cmp
int3
lods
pop
call
fidivr
bound
icebp
mov
jbe
mov
jns
test
jmp
add
sub
in
or
cmp
dec
add
dec
lock
popf
xchg
mov
bnd
daa
pop
dec
clc
add
mov
or
xor
imul
mul
cwde
(bad)
ret
dec
repz
inc
xor
int
jo
mov
ds
fldenv
mov
cmp
in
ja
ficomp
int3
add
ret
mov
or
inc
dec
idiv
cmp
and
pop
pop
test
sbb
adc
jno
xor
ds
push
jbe
lea
sbb
ss
mov
in
loopne
mov
jge
adc
adc
cmp
mov
fist
inc
loope
fistp
mov
jp
mov
clc
and
adc
sbb
dec
dec
sbb
hlt
aas
lea
mov
cmc
int3
lods
xchg
div
cmps
push
pushfw
(bad)
jns
sbb
imul
pop
cmp
push
jne
aaa
retf
into
adc
fcom
shl
daa
lods
mov
int
lds
inc
clc
stos
dec
xchg
popa
add
lea
hlt
sub
out
sti
cmp
arpl
je
stc
dec
mov
inc
xor
fadd
push
frstor
retf
mov
rcl
adc
sar
mov
daa
ficomp
arpl
call
or
xchg
push
jmp
mov
sbb
xchg
jb
nop
clc
ss
js
push
cli
inc
push
popf
xor
mov
fisubr
mov
rcr
dec
adc
sub
cwde
retf
adc
test
jne
ins
in
jmp
out
out
popa
(bad)
mov
adc
or
test
inc
pop
pop
mov
xor
aas
push
lods
fstp
mov
or
(bad)
dec
cmp
gs
mov
repnz
pop
imul
cwde
(bad)
fucomip
rcl
cwde
sub
loope
push
pop
lods
mov
mov
inc
sahf
xor
and
(bad)
out
pop
jp
cli
pop
mov
mov
rdmsr
daa
rcl
or
mov
imul
dec
add
sbb
outs
add
sbb
das
mov
mov
es
mov
sbb
mov
dec
push
sbb
lods
jae
cmp
and
ins
or
mov
sub
xor
pushf
jmp
test
ins
and
cmp
cpuid
adc
es
mov
jle
std
push
fld
sub
cs
sub
or
sub
xlat
pop
sub
ja
int3
(bad)
pop
sub
outs
and
xor
inc
and
jp
ficomp
push
or
lock
pop
xchg
retf
es
jmp
stos
js
add
sbb
push
cmp
movs
mov
adc
inc
hlt
pop
dec
int3
(bad)
and
mov
mov
mov
out
fwait
dec
inc
rcl
movs
mov
push
push
xchg
fst
push
fldcw
inc
jle
dec
xchg
ret
stos
in
fs
outs
or
gs
pop
or
mov
xchg
and
sbb
mov
divps
mov
adc
push
lods
sbb
push
adc
mov
retf
out
movs
xchg
icebp
pop
icebp
xchg
mov
sar
cmp
ds
mov
rcl
movs
inc
rcr
and
popf
retf
out
sub
add
jne
(bad)
loopne
repz
xchg
mov
jbe
pop
imul
xchg
xchg
inc
bt
(bad)
mov
dec
fiadd
jge
test
inc
outs
stos
addr16
pop
inc
xchg
cmp
add
not
push
rcl
or
ins
retf
jne
pop
or
(bad)
mov
movs
mov
fsubp
mov
xor
adc
cmp
push
mov
push
cld
pop
dec
mov
leave
push
mov
mov
xor
movs
dec
jecxz
shr
std
inc
dec
push
push
es
push
sub
jl
jg
mov
in
retf
scas
cmc
jne
cmps
out
mov
neg
fucom
in
loope
mov
ret
push
mov
sub
pop
or
ins
cmp
mov
jae
(bad)
in
jp
xchg
mov
push
mov
sub
pop
jns
daa
adc
cmp
pop
das
push
cmp
in
ret
or
scas
pop
test
out
lods
or
mov
sbb
lods
imul
stc
cmp
xchg
idiv
ja
(bad)
mov
(bad)
cmp
and
outs
pop
lods
xor
movs
mov
test
add
loop
sbb
les
push
fs
cbw
enter
xor
(bad)
lahf
jle
and
sbb
mov
add
mov
cld
mov
(bad)
jmp
call
test
(bad)
fist
mov
push
adc
in
not
mov
push
xchg
or
fwait
jmp
dec
div
push
add
pop
retf
js
push
ss
xor
add
je
test
clc
mov
adc
or
mov
or
popa
xlat
repnz
fs
push
jle
mov
imul
hlt
sbb
jecxz
popa
test
xchg
mov
jecxz
or
mov
adc
mov
jbe
stos
mov
(bad)
mov
jbe
out
div
in
ret
cmp
mov
dec
sub
adc
wbinvd
push
arpl
ror
or
or
stc
mov
std
jmp
mov
mov
call
out
test
jo
hlt
test
xchg
lahf
sub
sub
xchg
hlt
test
push
sahf
jmp
loop
shl
fwait
cmc
cs
outs
int
jno
mov
or
or
sub
push
mov
jno
loope
inc
adc
mov
mov
bound
jne
mov
(bad)
add
popf
xlat
test
das
shr
xlat
xchg
push
idiv
add
jp
sahf
inc
pusha
pop
sub
dec
out
scas
dec
xchg
bound
cdq
jg
mov
ins
mov
ja
mov
inc
enter
or
shl
addr16
push
movs
lds
iret
ds
ficom
mov
fbstp
cwde
cmp
rol
mov
jno
xlat
inc
scas
and
push
inc
into
lahf
cmp
pop
and
mov
push
mov
mov
mov
mov
sub
xchg
sahf
jmp
pusha
loop
dec
mov
xor
add
daa
jle
mov
ins
(bad)
shl
(bad)
rcr
enter
xchg
sbb
mov
sbb
mov
push
bound
addr16
(bad)
pop
popa
mov
inc
daa
sbb
jp
data16
in
adc
retf
movs
cmp
mov
mov
mov
push
pop
jb
es
es
sub
pop
pop
push
cli
and
clc
mov
outs
sbb
jmp
cmp
movs
(bad)
cmp
lock
cmc
pop
and
ds
retf
fs
mov
xchg
gs
or
icebp
and
sub
pushf
jge
clc
add
retf
pop
xchg
ins
jge
pusha
sbb
mov
aad
pop
xchg
xor
inc
adc
mov
jae
sbb
add
ds
dec
enter
mov
mov
ret
rcr
jbe
out
pop
imul
ins
cmp
mov
cmp
mov
jl
jecxz
out
fistp
and
aad
inc
or
(bad)
nop
es
les
ret
movs
and
mov
outs
add
jb
lahf
xchg
xchg
popa
mov
cdq
daa
imul
shld
xchg
or
cmp
push
rcr
dec
in
and
xchg
inc
je
test
(bad)
adc
jno
(bad)
and
or
mov
shl
scas
and
(bad)
push
and
nop
stos
sbb
push
(bad)
aam
jge
mov
or
in
inc
outs
outs
mov
inc
push
xchg
mov
cs
mov
mov
xchg
call
xchg
cmp
loopne
movs
add
pop
pop
mov
lahf
push
fldenv
dec
adc
sbb
(bad)
push
inc
xor
ins
add
aad
sbb
mov
test
inc
and
cld
mov
push
mov
add
and
jns
push
and
retf
(bad)
fldenv
and
and
sbb
shl
scas
pop
add
push
loop
jecxz
or
out
sub
push
xchg
mov
xchg
(bad)
in
movs
mov
movs
push
fst
push
int
mov
adc
bound
jae
adc
fisttp
lods
pop
sti
xor
xchg
cmp
cmps
mov
sbb
jne
je
clc
push
icebp
mov
mov
or
and
pop
jmp
cli
ret
lods
jp
mov
cs
sti
das
mov
lods
xchg
outs
dec
xor
leave
mov
arpl
sub
jne
ins
push
lods
ss
fbld
add
repz
sub
dec
sub
cmp
jmp
or
inc
hlt
pop
pop
cmp
jnp
call
add
and
cmp
mov
jno
cmp
mov
aad
(bad)
pop
pop
sbb
sbb
sub
mov
jp
test
adc
lods
pop
test
xor
in
lods
lock
pop
fnstsw
sub
or
popa
aad
lods
repnz
mov
pop
mov
xchg
sbb
cmps
jmp
out
popa
cs
outs
fwait
in
xchg
cli
mov
fcomi
inc
iret
jmp
adc
jg
mov
push
sbb
adc
sbb
imul
xor
jne
sub
fidivr
rcr
ret
pop
mov
cmp
fldcw
adc
fs
inc
ror
add
pop
cmp
sub
mov
aam
push
mov
ret
mov
dec
fistp
jmp
xchg
ja
arpl
fnstenv
fcomp
ins
or
cmps
sub
shr
fwait
mov
loope
ins
inc
cwde
jns
add
sub
xchg
in
aam
push
lea
aas
xor
pop
scas
jmp
mov
fistp
sbb
clc
pop
add
popf
cmc
add
xor
idiv
cli
cmp
stos
out
or
test
jp
movs
sub
(bad)
jb
sbb
jne
mov
sbb
sti
scas
shl
sub
aas
mov
imul
xchg
fidivr
pop
cmp
mov
dec
in
mov
lock
loopne
cmp
cs
popf
jmp
je
aad
adc
jmp
aad
rcr
add
sbb
jns
stos
pop
mov
cld
xlat
ret
pop
and
xor
or
inc
out
xor
aas
int3
dec
inc
dec
aas
shl
cmp
mov
pop
mov
ja
ret
push
mov
mov
in
inc
dec
mov
in
stc
add
xlat
lock
lods
mov
lods
movs
cdq
push
jle
mov
out
jecxz
mov
add
dec
dec
imul
cmp
jmp
jmp
and
pop
dec
jp
sub
or
inc
daa
aam
cmp
mov
aaa
cld
rol
xor
push
je
clc
cmp
inc
jl
push
add
in
jecxz
dec
dec
cdq
inc
cmp
ins
cmp
dec
loope
cmp
test
lds
mov
(bad)
int3
clc
dec
sahf
lods
cld
fwait
cld
push
sbb
mov
fs
xor
jmp
sbb
in
xchg
mov
push
cmp
or
mov
cmp
ss
xor
retf
call
cmp
jl
cli
fisubr
rcl
xor
or
xor
inc
cwde
ror
jmp
mov
test
and
mov
out
int
clc
mov
mov
in
cmp
out
dec
fcomp
pop
test
push
into
das
sbb
adc
xor
adc
pop
sub
clc
jmp
mov
jmp
cmc
sbb
mov
jne
ss
xor
into
mov
ja
mov
sbb
jne
add
sub
adc
or
movs
xchg
inc
lds
std
mov
and
mov
popf
push
jno
adc
gs
es
mov
sub
pop
mov
es
or
mov
pop
mov
int3
push
ins
or
dec
add
xor
jno
mov
xlat
loop
pop
mov
jecxz
inc
fcomp
cmps
mov
test
sub
push
pop
push
xchg
xchg
imul
ficom
adc
test
data16
cmp
test
mov
dec
xor
icebp
xchg
js
inc
ror
ins
mov
inc
jo
ja
cmc
popf
stc
sub
repnz
push
jmp
sbb
cmp
movs
mov
ds
mov
lods
adc
mov
pop
jmp
mov
gs
(bad)
fidivr
mov
jle
mul
arpl
sar
dec
or
mov
cmp
les
hlt
int
(bad)
jmp
out
xor
push
hlt
scas
mov
popa
idiv
pop
add
adc
mov
mov
cli
and
mov
or
js
movs
jno
dec
lahf
xchg
push
loope
std
sahf
xlat
stc
aaa
ror
xor
mov
jne
int
sub
push
mov
clc
inc
sbb
in
mov
cmp
mov
jg
mov
mov
adc
sbb
pop
cmps
rol
dec
dec
adc
cli
or
add
cmp
aam
dec
xor
cmps
inc
mov
add
fwait
(bad)
xchg
ins
mov
mov
(bad)
mov
in
add
sbb
add
sub
and
sub
sub
jae
add
push
add
ret
aas
dec
cmp
lods
and
mov
out
cmp
sub
jp
icebp
fmul
add
lds
daa
bound
retf
mov
mov
enter
retf
scas
mov
aam
push
cs
test
mov
cmp
push
inc
inc
jmp
add
ins
stos
enter
sbb
xchg
in
sbb
icebp
test
stos
and
inc
add
enter
stc
outs
bound
jb
lock
push
jmp
data16
cmp
test
xchg
test
add
jl
lock
mov
xor
cmp
loop
stos
bound
lods
shl
aaa
iret
and
xchg
jmp
ds
dec
cmp
add
add
call
push
mov
popa
sahf
xor
pop
cmps
out
(bad)
xchg
inc
pop
adc
dec
adc
lods
scas
retf
sar
jb
inc
jmp
mov
div
adc
shl
mov
imul
int
or
mov
enter
test
and
ins
xchg
stos
push
jne
dec
and
shr
push
lods
shl
dec
pushf
imul
jg
mov
cmp
fsub
imul
jb
inc
mov
jp
cld
sti
mov
pop
adc
movs
cmp
fmul
pop
test
nop
bound
js
xlat
mov
jge
cmp
inc
jns
dec
fadd
clc
mov
push
retf
sbb
mov
(bad)
stc
(bad)
cmp
mov
or
sbb
push
dec
dec
idiv
mov
xchg
test
jmp
sbb
push
xor
retf
scas
cvtdq2ps
cmp
xchg
and
aam
xor
pop
sub
aad
or
and
rcr
and
es
adc
test
cli
(bad)
scas
pop
push
and
sbb
pusha
pop
inc
dec
popa
mov
sbb
cmp
or
popa
or
pop
xlat
fild
pusha
scas
mov
or
mov
jb
stc
(bad)
fisubr
add
lods
mov
cmp
xor
sbb
cmp
add
dec
jne
cmp
and
sahf
pushf
rcl
loope
gs
push
add
fld
stos
in
xor
cmps
aad
cmp
mov
int3
mov
dec
jg
ret
sbb
dec
and
and
sub
or
and
int
push
scas
fmul
dec
mov
int3
or
cdq
cmp
dec
retf
jg
loope
inc
mov
mov
ja
(bad)
mov
sbb
mov
mov
push
rcl
(bad)
iret
and
popf
adc
inc
shr
or
lods
repnz
dec
ins
cmp
push
in
dec
mov
adc
and
push
cmp
loopne
add
int3
outs
jg
pmullw
leave
mov
and
cmp
xchg
shr
xchg
movs
movs
pop
scas
repz
sbb
test
imul
xor
add
dec
sub
ror
(bad)
cmps
in
std
adc
scas
mov
pop
sbb
test
call
mov
xor
add
jns
xor
xchg
popa
in
test
cmc
xor
stc
sar
push
cmps
mov
fsub
test
sub
test
icebp
push
push
fimul
push
xchg
push
adc
dec
sbb
mov
and
sbb
push
pop
sub
sbb
js
mov
dec
or
pop
xor
stos
inc
mov
mov
jmp
pop
sahf
sub
xchg
cmps
adc
xor
xchg
pop
adc
imul
clc
fnstenv
dec
popa
adc
mov
and
dec
xor
cmp
into
or
pop
je
xor
jmp
fimul
ror
dec
jno
ds
pop
arpl
inc
das
stc
pop
in
pop
xor
fnop
pop
cwde
mov
fmul
inc
frstor
mov
call
int3
inc
mov
sbb
pop
mov
sub
aad
mov
lock
adc
add
push
fbstp
inc
xor
pop
add
in
ret
lock
retf
test
mov
fist
sbb
or
pop
mov
fbstp
popa
jle
add
pop
mov
imul
pusha
or
jnp
add
adc
mov
arpl
aad
not
aas
into
and
jmp
adc
and
je
aad
scas
mov
add
int
adc
stos
inc
dec
mov
or
jp
cmp
or
add
aas
lock
xchg
jle
arpl
pop
xchg
imul
xchg
test
retf
pop
outs
fxch
outs
sub
jb
ret
(bad)
jp
jno
xchg
scas
xchg
gs
jl
clc
add
lahf
mov
mov
sub
cld
mov
xchg
mov
xor
jb
mov
int
sub
retf
test
and
mov
and
fnstsw
cmp
leave
movs
js
call
pop
adc
dec
jg
mov
aam
jnp
sub
inc
out
jge
jg
xchg
inc
xchg
jle
into
rcl
ror
or
and
fsub
dec
cmp
mov
addr16
outs
rcl
aad
inc
mov
mov
adc
xor
sbb
dec
pop
xchg
mov
dec
addr16
or
xor
inc
enter
cdq
call
lea
adc
scas
pop
or
imul
dec
mov
test
xor
dec
ror
jge
(bad)
out
mov
gs
(bad)
pop
mov
cmp
push
cmp
in
pop
push
pop
xchg
lahf
in
mov
pop
movs
pop
push
mov
mov
cmp
mov
repz
out
data16
inc
xchg
mov
jle
test
sbb
add
(bad)
stos
cmp
ins
call
test
mov
push
cld
mov
adc
mov
ja
pop
test
bound
fnstcw
int
aas
mov
push
adc
sub
inc
fcmovnb
(bad)
ja
and
test
out
push
addr16
imul
mov
mov
icebp
shl
lods
aas
mov
or
mov
int
leave
pop
dec
mov
pushf
fwait
push
std
jb
jg
pop
push
mov
adc
shr
add
jmp
and
dec
lds
and
add
fldlg2
jb
adc
jmp
mov
jns
pop
lahf
mul
pop
inc
ret
je
ja
pop
jbe
aad
sbb
or
mov
in
dec
jle
mov
push
fcom
adc
adc
push
xor
iret
pop
add
cld
mov
out
test
(bad)
arpl
fisub
icebp
dec
mov
dec
aaa
xchg
mov
rcr
sbb
in
mov
arpl
stos
jbe
(bad)
pop
sahf
add
fdiv
inc
jge
xor
jmp
out
loop
xchg
cmc
out
or
or
push
sub
dec
das
push
xchg
loop
lahf
push
je
and
or
(bad)
in
lods
test
fcomi
sahf
mov
mov
mov
mov
jo
pop
add
and
dec
xchg
das
or
jno
out
cmps
or
lea
leave
call
mov
inc
test
jns
leave
mov
xor
jmp
mov
pop
and
and
dec
stos
jmp
jp
std
jmp
shl
mov
push
ret
xlat
in
mov
int
inc
bswap
jno
jge
xchg
pop
pop
adc
(bad)
sahf
jae
dec
pop
lds
pop
cmp
nop
cmc
ins
imul
loopne
mov
mov
fwait
or
xor
(bad)
sbb
xlat
rol
shr
lds
ror
aad
packsswb
popf
daa
dec
rol
push
imul
movs
or
sub
push
xchg
jnp
loopne
test
mov
mov
mov
cmp
fadd
addr16
pop
daa
cdq
lahf
inc
or
imul
xor
inc
xlat
aas
fisub
adc
sbb
cmps
nop
dec
(bad)
pop
data16
lock
outs
pop
mov
cmp
fwait
adc
sahf
call
and
pop
out
loope
rcl
xchg
inc
jns
not
or
repnz
jbe
add
popf
inc
stc
xor
sbb
dec
mov
aad
pop
jbe
mov
retf
pop
adc
pop
sbb
es
pop
pop
rcr
push
call
push
xor
push
dec
sti
mov
bound
jecxz
cmc
sub
scas
adc
rol
push
stos
mov
sub
add
bound
push
jb
adc
arpl
in
cmp
retf
mov
push
shl
add
sar
push
test
mov
adc
test
cmp
sbb
imul
dec
dec
or
call
sbb
les
imul
push
xor
pusha
movs
xchg
jge
xchg
mov
rcl
psrld
cdq
idiv
sub
dec
cmps
jae
mul
xchg
pop
leave
mov
stc
push
cmp
inc
out
dec
daa
pop
xchg
lods
or
and
or
ja
nop
push
jmp
push
(bad)
in
mov
fisub
and
jmp
xchg
jmp
cs
lods
stos
aas
mov
pop
sbb
adc
and
inc
sti
adc
mov
jns
pop
(bad)
mov
sub
sub
repnz
mov
fwait
not
cmp
push
outs
cmp
mov
xor
jb
xor
add
and
call
fcmovne
jb
repz
jle
stc
out
jae
jbe
rcr
mov
nop
mov
add
hlt
xchg
outs
int3
pop
mov
and
jmp
cmps
mov
xor
test
fistp
xor
xchg
ins
jg
fwait
jne
das
jno
test
ins
xchg
push
ficomp
ss
mov
adc
setne
dec
stos
cmp
mov
push
ret
nop
mov
jmp
mov
icebp
idiv
ss
jae
and
stos
mov
inc
push
(bad)
jne
pop
or
mov
jne
xchg
jno
aaa
dec
outs
inc
push
mov
pop
push
out
in
in
retf
sbb
mov
mov
aaa
call
icebp
repnz
and
lahf
mov
pop
stos
daa
out
cmps
xor
dec
xor
popf
(bad)
dec
ja
pop
sub
scas
aaa
int3
popa
pop
mov
stc
push
xor
adc
sbb
mov
je
sub
sar
jl
xchg
sbb
xor
lea
pop
repz
jb
xor
test
imul
dec
out
mov
push
push
mov
mov
and
bound
push
sbb
inc
mov
dec
pop
sti
clc
cs
in
int3
xor
mov
movs
in
arpl
add
dec
mov
mov
cmp
in
bound
popf
inc
mov
lods
and
es
cmp
into
push
cmp
sbb
xchg
call
xchg
push
mov
inc
popf
dec
dec
or
paddsw
push
lods
dec
fst
jb
lahf
and
and
retf
inc
stc
xor
sahf
push
sub
mov
xor
pushf
ins
movs
push
dec
or
adc
xchg
loope
call
mov
sbb
add
(bad)
imul
jp
add
sub
jnp
fnsave
fisubr
pop
ja
inc
pop
mov
jns
mov
adc
mov
in
rol
ins
mov
cdq
sub
xor
push
call
jbe
fcmovnb
or
dec
jno
pop
sahf
cmp
or
add
dec
das
cmc
ret
popf
das
mov
bound
ss
xchg
or
sbb
inc
in
call
gs
(bad)
div
aaa
scas
cld
mov
xor
addr16
or
sar
push
(bad)
lods
mov
push
imul
pop
test
pop
push
bndldx
push
punpcklbw
in
shr
add
or
add
inc
(bad)
mov
dec
and
fwait
adc
adc
push
(bad)
leave
(bad)
ror
(bad)
addr16
xor
(bad)
pop
cmp
nop
jle
mov
mov
loope
(bad)
sbb
gs
loop
mov
dec
pop
cmps
(bad)
movs
pop
pop
cmp
leave
jne
(bad)
in
jl
jbe
imul
lock
or
dec
sub
std
repz
cld
ins
lock
lock
xchg
mov
es
fisubr
rcr
inc
push
addr16
arpl
and
aaa
frstor
jb
arpl
jb
in
cmps
cmp
ins
ins
inc
push
and
cld
mov
xchg
lock
or
mov
lahf
aam
cli
push
mov
fdiv
stos
les
mov
int3
inc
(bad)
or
push
ins
cmp
push
sti
jge
jno
out
test
aam
mov
jnp
mov
aaa
jmp
ficomp
mov
xchg
jnp
add
sub
push
adc
stc
test
retf
push
mov
mov
add
dec
xchg
lock
je
pop
icebp
ds
(bad)
addr16
xchg
call
and
test
xor
pop
xchg
dec
movs
push
push
outs
mov
mov
lods
push
or
push
mov
adc
inc
sbb
ins
movs
fwait
aas
imul
fmulp
and
add
out
sbb
xor
dec
add
shr
push
fimul
clc
cs
out
stc
xchg
pop
mov
cwde
fidivr
inc
mov
daa
add
jge
push
pop
and
call
jle
xchg
push
mov
mul
pop
inc
sbb
push
sub
retf
loope
leave
add
mov
aad
mov
mov
outs
or
stos
mov
aad
loope
mov
popf
ja
push
sbb
std
dec
and
xor
iret
adc
stos
push
mov
mov
sub
rcl
push
push
stc
cmps
add
and
jmp
call
icebp
inc
jmp
js
dec
adc
pusha
or
retf
inc
nop
add
gs
fimul
push
pop
sub
and
call
or
xor
scas
pop
(bad)
sub
inc
sub
inc
and
sub
add
out
mov
ror
mov
sbb
rcr
mov
jnp
xlat
inc
sbb
enter
test
mov
sub
loope
inc
sbb
jns
loopne
dec
je
(bad)
mov
aam
stos
jg
imul
adc
sbb
cmp
fs
sub
sti
pop
xchg
test
push
mov
cmc
popa
stc
inc
adc
sbb
outs
jnp
or
mov
jae
(bad)
in
in
stos
xlat
arpl
adc
or
pop
push
jne
jne
aam
bound
xchg
sti
out
js
and
push
jae
rcr
jl
push
jae
and
std
xor
and
cmc
test
das
inc
dec
iret
sahf
xchg
iret
push
scas
out
rcr
sbb
jp
popf
sub
rol
lea
add
aad
in
mov
in
fsub
jge
push
mov
push
adc
and
je
push
mov
int3
push
mov
pop
retf
call
mov
and
cs
mov
cmps
std
mov
rcl
lock
dec
into
xor
sub
jbe
sar
push
pop
mov
imul
stos
mov
ror
inc
lods
ret
lock
mov
les
ret
call
neg
aaa
mov
test
xchg
sub
aam
rol
ret
(bad)
iret
shl
je
mov
rol
test
push
xchg
inc
jno
stc
call
jmp
mov
movs
int3
int
push
pop
stc
add
sbb
int3
sub
movs
adc
sbb
test
div
push
pop
mov
cmp
mov
cmp
sbb
int3
std
repnz
dec
xchg
push
mov
aad
(bad)
repz
push
add
xor
mov
pop
repz
jno
xchg
sti
cmc
mov
clc
fwait
rcl
pop
xlat
loopne
fcomp
into
pop
scas
repnz
push
pop
cmp
outs
inc
aaa
add
pop
pop
dec
imul
fsub
inc
xchg
idiv
js
les
movs
jnp
dec
inc
ret
jb
jp
stos
xchg
pop
xchg
push
fsubp
sahf
outs
or
sub
sub
in
push
mov
lds
clc
xchg
sbb
adc
add
dec
or
repz
fisubr
lods
fdiv
inc
cmp
call
lods
mov
ror
popf
js
enter
jmp
or
retf
ins
xchg
and
xchg
adc
jae
repz
shl
dec
pop
mov
rcl
stc
jg
pusha
mov
cmp
repnz
(bad)
or
mov
adc
ja
cmp
shl
(bad)
fxam
iret
loopne
jnp
dec
(bad)
or
push
dec
inc
clc
popf
pop
push
jb
push
jecxz
in
cmp
mov
and
js
out
mov
jbe
and
jae
mov
popf
mov
call
xchg
xlat
push
mov
(bad)
test
data16
xor
push
jge
pop
aad
icebp
test
push
mov
cmp
aam
ds
ss
pop
sbb
cmp
in
ja
xchg
stos
ins
lea
push
jae
xchg
stos
movs
xchg
push
mov
aas
scas
cmps
mov
pop
ins
(bad)
lock
psubusw
mov
mov
xor
repnz
clc
test
(bad)
mov
scas
mov
mov
out
xchg
adc
mov
fs
cmp
mov
add
jp
mov
inc
and
mov
jbe
lahf
pusha
arpl
and
adc
jo
int3
adc
test
adc
mul
fistp
int
cmp
xchg
imul
adc
dec
fsub
mov
and
ja
sbb
mov
rol
cmc
jmp
out
cmp
mov
cmp
mov
xor
inc
in
jae
test
cmps
jbe
shl
sub
rol
out
jno
arpl
push
nop
ret
popf
sub
mov
movs
add
cwde
ret
scas
push
out
sub
fcomip
sub
xchg
aaa
inc
dec
aaa
loope
push
add
std
movsx
mov
retf
dec
mov
mov
in
xor
xor
sub
dec
mov
iret
shl
out
sbb
pcmpeqb
out
js
(bad)
sbb
test
mov
dec
out
sub
js
jbe
mov
inc
ins
sub
or
jmp
out
pop
mov
(bad)
rep
std
lea
jp
and
pop
popf
enter
test
cmp
or
jmp
in
in
ja
fwait
mov
adc
pop
retf
jo
push
ja
lea
fldenv
int
jmp
dec
or
sahf
test
jmp
repnz
call
jl
movs
xchg
outs
xchg
jae
lock
ret
in
xor
push
cli
inc
cmc
jecxz
cmc
aas
push
push
in
cmp
adc
sub
shl
jle
into
mov
aaa
adc
popf
mov
ss
cmps
jnp
inc
cmp
mov
leave
xchg
jmp
sub
test
push
sub
xchg
dec
enter
icebp
mov
loop
mov
das
mov
inc
std
clc
js
scas
(bad)
imul
add
fdiv
ins
mov
mov
aaa
dec
int
cli
js
or
cdq
lahf
icebp
cmps
ja
pop
cmp
sub
aad
test
cmp
cmp
inc
push
sbb
xor
adc
pop
sbb
xor
lock
jmp
(bad)
(bad)
(bad)
nop
or
mov
test
dec
cmp
cli
lock
mov
inc
cwde
cmp
xor
push
call
and
xor
sbb
stos
xor
out
mov
push
add
and
ror
jmp
cmp
mov
mov
xor
(bad)
fidiv
hlt
xchg
push
lods
pusha
cmp
icebp
cmps
jmp
cdq
mov
ds
xor
sub
xchg
into
fs
push
xchg
xor
ins
in
xchg
cli
cs
pop
scas
jo
gs
push
aad
aam
add
mov
push
sahf
lock
cmc
mov
dec
and
jne
in
or
and
lahf
dec
rsm
cmp
aaa
fisubr
xor
adc
cmps
sub
or
lea
int
leave
push
dec
int3
outs
or
je
shl
in
push
xor
xchg
jl
add
out
and
mov
xchg
fwait
mov
fdivp
dec
and
pop
push
push
add
pop
xor
xor
sar
mov
test
out
jp
jl
sbb
cmp
cmp
mov
xchg
adc
(bad)
fisttp
jmp
fsincos
test
mov
sbb
jae
cld
adc
mov
retf
jno
shl
jecxz
jg
xor
sbb
mul
les
xchg
mov
sbb
inc
push
aad
sbb
movs
mov
sbb
fstp
push
scas
mov
ret
mov
enter
test
(bad)
push
and
pop
dec
imul
addr16
pusha
mov
repz
scas
mov
loope
mov
and
sub
popa
inc
nop
push
mov
arpl
cmc
push
mov
xchg
adc
xchg
push
xor
or
jns
push
bound
call
fdivr
push
ret
and
sub
fs
mov
in
jbe
fwait
and
xchg
neg
rcr
int3
mov
xor
dec
retf
and
xchg
dec
iret
add
call
mov
sbb
xchg
dec
mov
cmp
sub
test
lods
inc
lods
in
in
ret
mov
fxtract
adc
jo
mov
call
js
dec
pop
cmp
js
inc
(bad)
lods
mov
loopne
es
cmp
xor
icebp
fwait
in
dec
jl
shl
ret
sub
cmps
mov
mov
adc
xchg
cmps
push
mov
add
push
mov
int3
fld
movs
sub
or
das
in
and
push
mov
aam
lahf
or
xchg
cmps
imul
ja
sub
jle
dec
push
mov
cmp
test
out
or
add
dec
(bad)
sbb
(bad)
push
mov
cmp
sub
mov
ret
(bad)
mov
ja
add
and
lahf
mov
and
inc
ja
cmp
inc
inc
bound
sub
or
outs
fiadd
adc
ficomp
pop
xor
out
inc
push
inc
bts
popa
out
adc
nop
hlt
ds
dec
jge
mov
mov
xchg
adc
(bad)
mov
and
cmp
xor
out
sbb
dec
fisubr
je
jge
jne
dec
call
xchg
in
stos
pop
fdiv
gs
mov
xchg
popa
lods
sub
stos
cmp
xchg
jno
fcomp
xor
jbe
push
(bad)
test
inc
cmp
ficomp
mov
arpl
int3
aas
or
fwait
icebp
cmp
jmp
ins
xchg
cmc
outs
jb
pop
popf
mov
fmul
add
or
mov
jmp
or
xor
jle
mul
cmp
fsubrp
fcomp
jp
jmp
mov
cmp
icebp
pop
push
imul
in
ficom
lahf
sub
lods
xor
jb
aad
add
nop
loopne
sahf
(bad)
and
add
je
push
(bad)
sub
xor
mov
mul
jne
adc
int
je
leave
daa
pop
pop
mov
or
jb
loope
aad
dec
stos
xchg
stc
pop
aas
fwait
xchg
pop
cmp
das
mov
xchg
cmp
js
imul
adc
mov
mov
leave
enter
jbe
cdq
je
loop
sub
cmp
jnp
shl
mov
mov
aas
lods
push
and
inc
into
xor
and
jp
mov
ret
ja
out
int
stc
or
cdq
add
hlt
inc
dec
outs
fdiv
cmps
inc
jmp
sti
pop
jns
aaa
rcl
jbe
and
sbb
inc
cmp
fimul
adc
(bad)
inc
lahf
sbb
add
scas
les
icebp
mov
fstp
cwde
shl
ss
fiadd
xchg
mov
sub
and
scas
test
and
(bad)
sti
or
xor
lds
jg
jae
cwde
(bad)
or
cdq
lods
push
fistp
je
repz
test
sbb
add
sub
pushf
sar
jmp
repnz
pop
inc
cli
push
pop
loop
popa
or
cdq
(bad)
cmp
ret
sub
mov
out
mov
popf
pop
mov
jo
fs
xchg
push
inc
sbb
mov
idiv
rol
xlat
ss
sub
sbb
fldcw
mov
and
imul
popf
fisub
fnstenv
pop
cmc
or
es
lahf
mov
mov
arpl
xor
movs
mov
jb
xchg
ins
push
mov
and
mov
xchg
push
push
jmp
jle
(bad)
jge
es
push
push
mov
jg
cmp
jmp
or
scas
push
sahf
mov
das
pop
xchg
ins
cmp
xchg
sub
mov
and
mov
sbb
arpl
mov
fwait
dec
xchg
and
pop
pop
xlat
neg
daa
sub
leave
ret
dec
cmp
push
shr
rol
xchg
scas
lds
sti
cmp
out
(bad)
iret
adc
iret
ja
adc
cmc
jb
and
lods
and
sar
popf
xchg
out
enter
dec
xor
add
fsub
xlat
adc
addr16
xchg
cmp
ins
push
xchg
pop
les
(bad)
clc
sub
jne
sahf
mov
rcl
into
(bad)
push
cs
ret
outs
xchg
clc
dec
cmps
ins
dec
cmp
push
dec
outs
leave
and
js
adc
aad
sbb
cmp
jbe
xor
lods
aam
lods
cwde
in
enter
inc
test
popf
out
pop
jle
ins
adc
test
dec
popa
js
pop
ja
pop
arpl
inc
setbe
out
ss
sub
cld
icebp
dec
mov
mov
pop
or
stc
add
adc
mov
sub
aam
push
xor
push
iret
push
frstor
(bad)
lock
push
lahf
movs
mov
fcomp
add
adc
rol
pop
fsubr
call
movs
mov
jle
icebp
add
jo
inc
mov
sbb
cmps
retf
(bad)
in
mov
inc
aad
fcmove
push
xor
das
jne
jnp
fs
fist
pop
or
loope
xchg
cmp
pop
mov
pop
jmp
(bad)
addr16
les
xor
retf
jg
inc
aam
fdivr
cmp
arpl
ror
je
jmp
push
jge
xchg
mov
and
push
pop
jb
mov
jge
jge
sbb
es
pop
sti
neg
pop
jnp
sbb
fnstsw
jnp
or
sub
test
mov
or
push
jae
ds
ror
inc
xor
outs
cdq
or
push
fsub
aaa
xchg
pop
loop
mov
call
es
aaa
cmps
fwait
cmp
adc
mov
mov
cs
clc
outs
or
add
movs
(bad)
and
test
mov
xor
out
or
mov
lds
or
popf
jo
lds
shl
mov
sub
rcl
pop
xor
call
cmps
mov
enter
out
push
inc
fdivr
lods
ret
mov
mov
loope
inc
sahf
pop
test
fld
sbb
jo
cmp
xlat
or
sbb
mov
bound
cmp
mov
inc
jge
imul
mov
stc
xor
aas
sbb
mov
push
add
test
and
inc
sub
shl
mov
popf
je
popa
pop
in
test
jae
call
inc
inc
pop
outs
stos
cmp
jns
mov
retf
pop
cdq
push
xchg
and
test
or
scas
(bad)
mov
lahf
shr
push
std
xor
retf
xchg
imul
nop
xlat
stos
xchg
fld
xchg
inc
sti
push
pop
aaa
dec
xchg
jbe
test
jnp
clc
or
dec
push
cwde
lahf
daa
ficomp
jecxz
fsubr
mov
rcr
xor
int
popf
mov
pop
movs
push
cmp
in
or
or
jp
pop
jns
repnz
cmps
ret
test
dec
repz
std
clc
and
fisttp
ret
inc
adc
in
(bad)
sbb
(bad)
pusha
push
sub
jae
not
mov
sbb
pop
xchg
out
xchg
sbb
jns
fbstp
fcmovnbe
je
adc
sub
xchg
pop
sub
or
or
and
push
repz
mov
in
push
jnp
pop
out
rcr
mov
dec
retf
and
mov
lds
arpl
jne
(bad)
sub
xor
sub
adc
xchg
sbb
push
int
dec
mov
jp
dec
das
cmps
xchg
cmc
and
cmc
pusha
scas
rcr
push
mov
shl
inc
inc
mov
add
ins
mov
or
fiadd
out
fs
pop
xchg
stc
pushf
xor
and
lods
and
aaa
imul
sub
jns
mov
int3
jno
or
cmp
lea
push
push
jne
pop
aas
cdq
sub
ficom
ds
nop
cmp
test
ds
(bad)
xchg
(bad)
test
dec
adc
sbb
push
call
(bad)
jno
mov
test
add
ret
and
pop
dec
push
fnsave
clc
mov
mov
mul
aad
or
jno
adc
(bad)
inc
fdiv
hlt
sahf
jbe
push
pop
sahf
pop
nop
pop
test
inc
push
inc
icebp
add
out
sub
(bad)
mov
sub
daa
cmp
push
mov
in
retf
xor
jmp
das
xchg
jle
fstp
cmp
rcr
sbb
imul
shl
or
lods
int3
or
sub
jmp
adc
xchg
push
adc
scas
push
popa
div
shr
add
movs
jne
leave
iret
jbe
xor
push
xchg
cmps
pop
aaa
mov
add
(bad)
push
sub
xchg
loope
sub
jno
cdq
pop
(bad)
into
imul
je
(bad)
(bad)
inc
std
retf
lahf
fcom
pop
in
loope
data16
xchg
sbb
dec
imul
cmp
daa
push
into
jnp
jbe
sbb
push
outs
ds
sbb
pop
pop
jge
or
ds
jmp
icebp
push
mov
iret
pop
xchg
fldenv
rcl
cmps
iret
(bad)
loope
or
iret
in
add
rol
push
mov
test
lods
fnstsw
sub
or
xor
gs
sbb
jmp
mov
jmp
dec
xor
jmp
xor
out
cdq
test
out
js
test
inc
out
add
mov
clc
cmc
mov
xchg
xor
movs
into
add
ds
cmc
cwde
loope
inc
adc
(bad)
jl
sbb
stos
ficom
jo
cmc
sbb
jbe
sbb
add
mov
xchg
ret
neg
ds
mov
pushf
mov
sub
repz
mov
mov
mov
retf
outs
pop
lods
outs
jbe
(bad)
cld
sar
jo
jne
dec
inc
sub
adc
cdq
jae
or
adc
mov
push
test
stos
jmp
and
fbstp
and
test
jge
mov
cmp
xor
or
jb
push
sahf
and
cld
jl
out
aam
out
arpl
pop
jle
inc
adc
adc
mov
and
test
shr
retf
mov
loopne
or
inc
mov
xor
inc
push
mov
or
dec
pushf
mov
iret
sub
mov
adc
test
dec
loopne
or
mov
fild
or
or
pop
cmp
mov
les
xchg
fdiv
push
xchg
cmp
lods
push
(bad)
aam
mov
daa
jne
daa
or
xchg
mov
add
in
sub
and
sub
ret
test
imul
aad
movs
and
jecxz
arpl
js
xor
push
xor
popf
movs
xchg
pusha
mov
cli
retf
dec
and
sub
pop
or
sub
ss
jbe
enter
pushf
sahf
sub
inc
mov
mov
in
adc
fsub
outs
mov
loop
nop
call
ror
mov
rcl
(bad)
das
test
call
adc
enter
arpl
xor
adc
mov
and
(bad)
fisub
loop
sbb
mov
in
icebp
jbe
jle
jl
fs
dec
cwde
ret
fisub
pop
or
sub
mov
es
mov
push
inc
cmp
cmp
or
(bad)
sbb
pop
inc
mov
mov
stos
(bad)
loopne
cs
rcr
popf
sub
fisubr
push
data16
int3
lock
leave
in
mov
and
frstor
mov
inc
jg
push
bound
mov
jns
inc
out
and
sub
cwde
movs
or
lahf
sbb
inc
xor
push
xor
mov
add
adc
mov
or
cmp
sub
add
add
aam
jnp
xor
sti
popf
xor
sti
push
jns
repz
and
call
mov
ror
or
jle
hlt
xor
inc
movs
and
outs
xor
push
ret
sbb
stos
sbb
inc
adc
not
or
dec
push
pop
or
pop
mov
push
daa
mov
jp
sbb
xor
jl
out
jmp
mov
in
lock
int
(bad)
test
shl
jb
adc
mov
loopne
jge
cld
mov
scas
jmp
sbb
fcom
add
pop
mov
and
pop
popf
mov
mov
mov
fsub
imul
sahf
add
sub
fs
xor
cmp
adc
cmp
leave
adc
fs
stos
push
movs
xor
outs
loope
(bad)
popf
ror
xchg
or
xchg
push
push
xor
rol
ins
inc
inc
lea
addr16
and
xor
stos
inc
xchg
loope
jmp
sahf
jns
or
push
outs
pavgw
js
dec
aas
rcl
jbe
jae
aam
fucomip
hlt
inc
dec
add
mov
mov
test
cli
daa
pop
xor
aad
movs
lds
mov
outs
jg
add
clc
mov
adc
shl
repz
jns
test
(bad)
dec
xchg
or
daa
or
or
cli
loope
dec
cmp
sbb
inc
arpl
pop
cmp
test
pop
lds
add
inc
xor
enter
push
push
lea
and
or
out
or
add
mov
(bad)
mov
or
mov
sub
mov
cmp
ret
add
movs
(bad)
in
and
jge
push
inc
sar
inc
push
inc
out
sub
mov
mov
stc
adc
cmp
retf
pushf
outs
push
aam
pop
inc
sub
scas
scas
test
and
popf
mov
rol
jmp
lea
pop
sub
add
lahf
mov
addr16
pop
jnp
mov
mov
mov
mov
mov
pop
jmp
and
dec
cmp
lahf
(bad)
outs
jmp
imul
add
mov
push
loope
test
dec
inc
push
call
movs
sti
iret
popa
push
imul
into
stos
std
hlt
xor
and
xor
jbe
add
(bad)
clc
and
jge
adc
xor
push
out
popf
nop
mov
jl
pop
int3
jno
jnp
sbb
je
push
mov
xchg
mov
mov
movs
movs
cmc
xchg
cdq
pop
dec
xor
inc
sbb
sub
aaa
enter
fwait
sub
mov
cdq
mov
jbe
jmp
pop
das
mov
inc
cmp
lock
clc
pop
mov
pop
sti
mov
cmps
and
loope
daa
sbb
xor
stc
lods
add
fsub
es
xlat
adc
ret
gs
sub
repz
sti
(bad)
rcr
aas
sbb
inc
push
outs
xchg
xchg
std
dec
jmp
fs
xchg
mov
mov
mov
ins
xchg
ja
ret
js
pop
xchg
jns
ret
ds
mov
jns
mov
call
call
je
pop
add
add
scas
dec
mov
sub
aam
push
dec
push
and
repz
cmp
mov
adc
jp
neg
(bad)
jmp
push
les
sub
scas
pusha
xchg
pop
mov
and
faddp
pushf
loopne
test
mov
mov
fninit
xchg
pop
test
adc
mov
ja
cmp
inc
sbb
shl
pop
mov
ror
(bad)
outs
mov
jne
and
stos
mov
(bad)
ins
retf
adc
adc
fcom
adc
call
aad
xchg
pop
test
jne
ds
movs
push
(bad)
and
pop
stos
add
xchg
arpl
xchg
xchg
sahf
xor
daa
dec
sbb
sar
das
mov
loopne
call
xchg
sub
movs
sbb
inc
nop
jmp
xor
mov
rcl
fsubr
jle
arpl
push
jg
sub
ins
pop
adc
cs
mov
in
mov
mov
jns
pop
repnz
sbb
jne
loopne
jg
jge
enter
mov
(bad)
iret
sub
adc
cdq
dec
ins
sub
xchg
cdq
jl
stc
std
inc
out
fisub
sbb
xchg
fisubr
mov
ins
cmp
pop
aas
push
push
dec
imul
es
sahf
push
ror
mov
push
scas
xor
(bad)
push
inc
outs
repz
std
push
cmp
mov
add
push
and
jmp
mov
xchg
loope
dec
mov
mov
add
es
sub
cs
inc
icebp
fdivr
or
ret
pop
ja
jecxz
popf
jbe
sbb
sbb
xor
(bad)
xchg
cmc
sbb
(bad)
cmp
xchg
mov
lea
pushf
xchg
xor
stos
enter
movs
mov
repz
cs
xlat
lds
sub
sbb
inc
imul
into
icebp
xor
sub
add
hlt
mov
(bad)
stos
sti
test
dec
test
bound
aaa
mov
retf
ins
icebp
jnp
repz
jne
xor
xor
lods
stos
jl
ret
(bad)
in
cmp
adc
enter
pop
movs
push
adc
repz
ror
mov
xchg
jns
jge
ja
test
aam
lods
jecxz
jnp
loope
adc
mov
xor
xlat
dec
or
mov
fisub
push
push
retf
sbb
daa
lods
call
imul
cli
jg
fnstcw
enter
pop
cmp
das
pushf
daa
(bad)
enter
js
outs
arpl
xor
test
dec
push
dec
fild
enter
adc
shl
add
jb
pop
out
xchg
ror
cmc
mov
cmc
mov
inc
cmp
fistp
jno
pop
les
mov
mov
rcl
shl
mov
(bad)
pop
das
sbb
clc
test
out
stc
jnp
jb
inc
add
call
int
dec
dec
sbb
push
cmc
je
jl
ins
push
mov
sar
lock
and
cmp
jo
xor
inc
loopne
push
xor
aad
pop
cmps
push
call
xchg
pop
inc
xor
fnstsw
or
or
loope
pop
mov
in
test
xor
es
stos
sbb
daa
outs
or
call
pop
sub
mov
dec
pusha
sbb
int
sahf
icebp
xor
jo
adc
repnz
add
dec
add
lods
inc
shl
or
mov
mov
add
inc
pop
pop
dec
cmp
jmp
and
sub
pop
jnp
inc
jg
sbb
mov
lods
jle
lds
ret
iret
out
loop
xchg
call
inc
lock
xor
lea
test
jno
(bad)
sbb
push
pushf
leave
sbb
shl
scas
les
dec
cmc
fist
cmp
jmp
aaa
adc
or
push
xor
jo
sbb
mov
xchg
in
shl
data16
cwde
movs
addr16
add
adc
popf
and
out
(bad)
lods
cmps
pop
mov
(bad)
sbb
loopne
sbb
call
mov
outs
imul
les
es
mov
jle
fnstenv
cmp
mov
(bad)
into
fiadd
mov
scas
popa
in
imul
and
sbb
xchg
dec
es
loope
mov
repz
fidiv
(bad)
xchg
cwde
pop
jno
jmp
cmps
inc
test
add
pop
inc
mov
mov
les
mov
mov
(bad)
fild
jbe
sbb
push
adc
and
xchg
mov
mov
aad
lahf
icebp
xor
stos
and
pop
cmp
push
not
(bad)
leave
jmp
or
mov
movmskps
pop
lods
sbb
std
cmc
or
push
jp
test
cmp
pop
sub
add
sbb
(bad)
call
dec
(bad)
pop
dec
xor
and
cdq
inc
(bad)
das
push
loope
jmp
xchg
pusha
add
(bad)
retf
xchg
inc
add
cwde
out
and
clc
inc
sub
xchg
out
xchg
sub
rcl
mov
adc
mov
mov
lods
mov
loope
xor
ja
jp
call
sbb
aam
and
and
jno
push
out
mov
pop
pop
jne
pop
or
outs
mov
adc
cwde
inc
push
xchg
adc
in
shl
jmp
dec
mov
fsubr
jnp
mov
sub
cld
ss
pushf
xchg
sbb
stos
(bad)
hlt
out
dec
call
fisub
pop
pop
lahf
aad
inc
mov
int
xor
mov
dec
loopne
in
movs
xchg
jl
es
dec
cmp
cmp
fisttp
icebp
inc
xor
inc
add
sbb
ss
add
cmp
add
xor
clc
test
push
jl
lock
stos
(bad)
pcmpeqw
shr
inc
retf
lea
cmp
pop
sbb
jo
mov
pop
xchg
add
push
bound
jnp
cwde
jnp
inc
mov
pop
(bad)
sbb
jne
jno
stos
jl
sub
push
inc
push
pushf
and
push
mov
into
stos
pop
jns
(bad)
shl
cmps
push
pushf
std
sub
ret
repz
sbb
pop
mov
mov
fsubr
xchg
cmp
jmp
mov
mov
mov
mov
mov
jns
or
daa
inc
leave
cdq
(bad)
mov
dec
push
jp
int3
in
xchg
outs
mov
mov
pop
mov
loopne
bound
dec
sbb
mov
hlt
outs
mov
add
ret
pop
hlt
sti
mov
mov
in
fdiv
in
xchg
cmps
sbb
dec
push
in
dec
stos
xchg
jecxz
sbb
(bad)
rcl
adc
out
jae
inc
mov
out
jp
push
sar
je
sbb
cs
cdq
(bad)
shl
das
mov
sbb
icebp
and
in
das
cdq
cld
sub
mov
loope
ins
xor
rol
test
stos
and
mov
pop
repnz
shr
xor
sub
push
(bad)
cmp
mov
xchg
and
sub
ins
cmp
sar
add
je
jge
scas
stos
lahf
(bad)
in
out
sub
sbb
cmp
lock
cmp
push
hlt
push
jecxz
in
xchg
jo
inc
inc
cmp
into
mov
xor
pop
and
(bad)
aam
xchg
pop
mov
(bad)
jp
pop
mov
leave
scas
mov
repnz
mov
dec
mov
jp
std
mov
sbb
push
test
add
retf
nop
adc
cmps
adc
or
adc
out
cmp
mov
in
fisub
xchg
mov
xchg
sbb
pop
popa
mov
push
(bad)
outs
pop
sub
or
mov
xchg
jnp
daa
inc
xchg
leave
bound
cld
ret
jno
cmc
add
dec
aad
sar
sbb
cmp
adc
mov
mov
int3
sti
sub
fimul
jmp
mov
lds
test
dec
push
leave
adc
mov
cmps
xchg
(bad)
adc
arpl
das
ret
inc
mov
imul
rol
jbe
mov
add
or
rol
stos
enter
adc
mov
out
inc
ret
shl
lods
and
inc
leave
neg
imul
xlat
push
imul
mov
pop
pusha
push
xchg
dec
jno
inc
adc
and
sub
sbb
imul
add
popf
(bad)
dec
jge
loopne
shrd
ins
jp
std
jns
inc
adc
and
imul
test
mov
lods
xchg
cdq
loope
repnz
repz
scas
fwait
cdq
dec
and
pop
push
mov
loopne
xor
pop
pop
sahf
(bad)
repnz
ins
sbb
sbb
jb
fs
inc
or
lods
mov
jnp
in
jp
stos
es
popa
dec
cli
inc
add
das
or
sub
fwait
xor
inc
and
push
retf
mov
mov
xlat
xor
imul
js
ds
xor
mov
mov
or
mov
and
out
enter
jns
inc
hlt
jbe
imul
test
clc
outs
ret
jns
es
jnp
add
or
mov
iret
aas
push
outs
out
push
sub
or
lods
push
enter
push
mov
jle
(bad)
nop
fdiv
in
scas
es
sub
aad
sub
adc
sahf
sub
cmp
mov
sbb
loope
fs
mov
icebp
bound
test
mov
shl
add
ret
movaps
dec
jnp
pop
(bad)
(bad)
ret
mov
jp
push
mov
outs
xlat
inc
mov
add
out
jne
sti
(bad)
xor
dec
fld
sub
in
mov
fmulp
add
ss
dec
or
aad
pop
jo
add
scas
inc
inc
xchg
push
fstp
(bad)
mov
pop
stos
mul
sub
xor
idiv
aam
repnz
dec
dec
cmc
mul
mov
xchg
xor
jmp
into
jl
inc
imul
test
and
cmp
mov
mov
xchg
xor
cmp
out
lods
add
jb
add
mov
add
dec
mov
mov
mov
and
sub
sbb
pusha
mov
icebp
(bad)
pop
push
outs
fisubr
push
cs
int
jae
sub
jo
mov
iret
adc
push
sub
jo
clc
jae
and
push
test
bound
stc
jne
dec
push
inc
xor
fcomp
pusha
sbb
jecxz
fld
push
idiv
push
pop
fstp
(bad)
xchg
dec
xchg
cmp
xor
fdivr
or
jg
jecxz
mov
pop
xchg
mov
push
(bad)
push
cmp
add
pop
xchg
push
sbb
mov
enter
cdq
movs
movs
inc
mov
or
push
cmp
dec
loopne
repz
sahf
gs
cmp
or
call
div
gs
(bad)
out
aad
mov
jge
nop
mov
call
or
jo
pop
push
xchg
mov
inc
or
arpl
cmp
out
popa
mov
mov
ret
jp
inc
jns
nop
cli
adc
test
push
test
push
call
push
movs
out
push
shr
div
imul
inc
fwait
outs
gs
pop
add
test
xor
icebp
xor
aas
fisub
inc
outs
jge
dec
sbb
cmps
sub
enter
jae
test
jecxz
into
xchg
shr
call
fwait
daa
inc
out
or
and
mov
popa
das
xor
jmp
push
dec
(bad)
aas
clc
loope
sub
lods
call
fst
xchg
dec
and
cld
shr
pop
dec
push
xor
shl
stos
enter
jg
gs
sbb
jo
add
xor
iret
inc
push
out
push
leave
jmp
lods
test
pop
mov
jecxz
mov
sub
pop
std
and
cmp
popf
lds
rol
daa
loope
rcl
xor
popa
mov
inc
fild
pop
push
mov
bound
ds
jle
push
pop
add
sub
out
in
out
xchg
or
ror
xor
aad
cmp
cwde
mov
loope
dec
jae
outs
add
shr
movs
dec
dec
push
cs
lea
mov
scas
shl
jae
mov
xchg
lods
ror
mov
imul
test
adc
cmc
xchg
pusha
mov
pop
lods
adc
sbb
sbb
and
lods
bound
in
pop
mov
cli
add
pop
dec
dec
mov
cmp
adc
cwde
push
fdiv
popa
xchg
sub
mov
loopne
movs
ja
sbb
mov
xor
cwde
out
push
in
arpl
fstp
dec
sbb
loope
mov
out
rol
mov
cmps
ds
pushf
xor
push
arpl
sub
das
mov
iret
push
popa
and
neg
aad
pop
xchg
and
sbb
dec
and
mov
fisttp
fdivr
inc
push
idiv
mov
sar
jnp
clc
jo
scas
test
mov
outs
addr16
jg
(bad)
lds
ss
test
ja
jno
lods
scas
inc
outs
and
xor
rol
mov
ss
imul
add
jge
and
outs
dec
push
mov
call
(bad)
btc
sbb
dec
pop
sbb
aaa
or
repz
arpl
xchg
in
xor
dec
(bad)
mov
inc
inc
and
in
rcl
adc
mov
sub
fs
cs
cmp
js
mov
jmp
in
sub
jnp
mov
jmp
imul
pop
xchg
push
gs
mov
sahf
pop
push
out
test
and
xor
gs
daa
inc
mov
mov
and
mov
test
pop
cwde
or
nop
mov
sub
mov
cmp
stos
fstp
dec
jmp
sub
add
fstp
mov
daa
leave
adc
loop
jae
call
adc
mov
ds
sbb
in
(bad)
push
adc
sbb
repnz
cli
mov
sub
jbe
(bad)
hlt
fwait
(bad)
fcmovnu
shl
call
mov
inc
and
mov
cli
pop
leave
adc
into
jo
or
nop
lods
retf
inc
(bad)
jb
or
(bad)
es
xchg
push
cmp
in
inc
and
jnp
fidivr
pushf
mov
mov
retf
ret
push
ds
adc
xor
xor
and
push
inc
nop
dec
mov
mov
add
dec
and
mov
pop
inc
and
mov
dec
xor
xchg
dec
nop
aam
inc
inc
push
xchg
(bad)
sti
(bad)
movs
aas
jp
or
repnz
adc
or
hlt
push
es
sbb
imul
xchg
popf
xchg
jmp
dec
jecxz
cmc
dec
sub
dec
daa
aas
or
xlat
(bad)
dec
jg
or
outs
pop
lock
cmp
mov
test
rol
cmp
neg
dec
ja
popa
ja
mov
retf
and
push
mov
add
or
mov
jno
mov
shl
xchg
scas
xchg
ja
xchg
cli
push
imul
pop
stc
pop
push
sub
cmc
lods
xchg
dec
push
adc
sar
xchg
push
add
xchg
push
sbb
pop
in
cmps
test
fstp
mov
or
xchg
jns
jns
in
pop
sbb
jnp
xchg
lds
dec
in
dec
mov
xchg
sbb
(bad)
test
arpl
fiadd
neg
outs
ret
fistp
pushf
pushf
inc
and
jae
pop
es
xor
shl
in
mov
aaa
movs
call
pop
pop
out
cmps
enter
cld
cld
in
xchg
hlt
push
mov
add
push
xor
ds
nop
push
xchg
push
jns
inc
aas
test
mov
retf
pop
jae
xchg
cld
mov
add
sbb
cwde
mov
repnz
mov
sbb
out
and
frstor
das
lods
ins
and
ret
pusha
mov
lds
fst
fwait
dec
aas
pop
aam
loop
push
push
push
adc
jecxz
lods
fwait
pop
icebp
add
sti
jnp
repz
outs
xor
call
into
es
jbe
inc
inc
pop
iret
addr16
or
fcmove
je
dec
xchg
push
aam
fdiv
pop
fwait
xor
inc
adc
jae
test
retf
int3
sub
daa
xchg
or
sbb
push
dec
xchg
xlat
and
mov
dec
(bad)
loopne
cmps
xchg
dec
data16
pop
jno
call
scas
ins
fdivp
les
mov
jmp
imul
daa
div
out
sbb
mov
mul
stc
jmp
and
movs
mov
dec
jbe
fwait
mov
mov
aaa
cs
loop
sbb
xor
jb
dec
sub
xchg
rcr
mov
sar
outs
dec
pop
inc
(bad)
xor
cmp
into
ins
(bad)
add
cmp
or
in
mov
stos
jo
es
jae
add
repnz
adc
sub
jl
pop
adc
mov
push
dec
out
jo
mov
cwde
jae
jle
fild
mov
imul
cld
js
adc
iret
push
test
cmp
adc
pop
mov
inc
fs
jge
jbe
icebp
fcomi
ret
mul
pop
cld
hlt
or
xor
imul
aam
test
aaa
lds
push
stc
add
mov
push
push
loop
loopne
call
adc
xchg
cmp
loop
bound
stos
mov
mov
int3
pop
or
fnstenv
pop
clc
jae
sub
or
add
mov
gs
call
loopne
fcomp
add
sbb
sbb
lods
mov
sub
fsubr
sub
repz
push
fstp
movs
popf
cmps
cmps
mov
mov
adc
int
sub
(bad)
mov
outs
(bad)
cld
ins
cmp
sbb
xlat
push
ins
pop
shl
stos
xchg
ret
adc
and
in
sub
idiv
cli
pop
enter
mov
stos
daa
push
idiv
xor
xor
jp
cmp
lods
and
stc
jbe
ds
push
cwde
xchg
adc
clc
and
adc
dec
fisub
sbb
xchg
es
imul
jp
jg
hlt
rol
imul
adc
clc
cwde
mov
and
out
xor
lds
icebp
fadd
jo
push
dec
(bad)
fimul
stos
(bad)
cmp
sub
pop
mov
and
cmps
(bad)
xchg
js
ret
jmp
xchg
ret
xchg
sub
ret
inc
jae
pop
mov
mov
aas
pop
push
dec
mov
xor
or
pop
rol
lea
and
stc
lods
icebp
cmp
cmp
test
sbb
call
sbb
sbb
(bad)
lock
xchg
pop
std
add
popf
pusha
sbb
cmp
fwait
or
mov
stc
xor
jmp
push
clc
loopne
sub
inc
imul
das
and
leave
mov
or
out
xor
jnp
out
mov
dec
pop
mov
ins
xor
not
stc
dec
shl
popw
inc
fisubr
lock
in
push
pop
gs
clc
inc
adc
lea
dec
movs
cs
mov
sub
int3
dec
pusha
or
adc
loope
(bad)
inc
retf
es
and
jb
xor
cmp
fwait
jno
jae
out
mov
adc
mov
xor
adc
popf
jmp
sbb
inc
cld
push
push
sub
call
dec
out
xor
lock
loop
(bad)
cmp
add
cmp
xor
aaa
xchg
mov
sub
push
out
call
inc
pop
mov
push
fs
stos
xor
(bad)
jmp
cmp
(bad)
movs
popf
rol
loopne
pop
push
push
or
shl
adc
imul
add
push
sub
inc
mov
adc
dec
cmp
jmp
rcr
add
or
add
les
sub
dec
fwait
sub
clc
pop
xchg
jnp
cs
pop
(bad)
out
jmp
and
sti
stos
stos
and
add
pop
ja
jb
adc
dec
lahf
ins
in
adc
add
cwde
push
cli
and
pop
fmul
push
nop
jmp
inc
jae
sahf
retf
sub
dec
pminsw
cmp
adc
test
lock
icebp
sbb
(bad)
sbb
popa
ins
jns
clc
outs
repz
mov
fimul
jmp
xor
push
fsave
fcmovnbe
lea
xchg
fist
and
retf
leave
aas
cmp
cmp
js
or
inc
div
aam
and
aas
adc
out
lods
jbe
sub
xor
xor
mov
ins
pop
mov
xchg
xor
pop
mov
das
(bad)
cmc
aas
add
pop
fbld
not
test
retf
xor
clc
stos
retf
or
xchg
(bad)
dec
nop
cmp
mov
jge
mov
xchg
mov
xchg
jns
cdq
rol
das
cmp
clc
xor
adc
dec
pop
out
cmp
push
lods
movs
lds
add
ror
add
xchg
mov
xor
ret
mov
iret
out
add
inc
(bad)
clc
out
xchg
push
adc
iret
cld
xor
lods
gs
mov
sub
cmp
jecxz
mov
jnp
xlat
ja
jb
lods
push
xchg
les
xor
data16
test
dec
sar
mov
retf
mov
repnz
sub
pop
jae
sar
int3
sub
mov
fwait
repz
push
xchg
fcom
bound
and
or
mov
xchg
jg
in
sbb
cwde
(bad)
test
mov
loope
jmp
cmc
movs
out
xchg
jl
loopne
cmp
adc
jns
std
loopne
mov
loop
ds
add
adc
xor
pop
mov
(bad)
movs
shl
mov
cmp
movs
push
push
out
test
push
push
push
push
mov
cmp
ret
es
pop
arpl
xor
jle
std
push
jge
xor
adc
sub
imul
iret
js
shl
jne
clc
call
push
movs
in
inc
ror
and
mov
dec
rcl
mov
pusha
sbb
and
cmps
pop
push
jne
jb
ins
stc
cdq
sub
jns
sti
cmp
in
hlt
ds
cmp
push
sub
(bad)
imul
sbb
aam
xchg
movs
in
mov
jmp
add
inc
cmp
dec
jbe
pusha
mov
inc
dec
sar
adc
mov
inc
addr16
movs
pop
sbb
outs
jmp
pop
push
out
rcr
mov
sub
cmps
jmp
inc
fadd
mov
dec
addr16
movs
ins
cmps
imul
loop
aad
push
jns
dec
push
out
push
nop
cmps
rcl
cdq
mov
lds
in
outs
xor
mov
inc
icebp
retf
mov
(bad)
fcomp
in
cld
call
ret
or
aad
rol
pusha
inc
loop
adc
fucomip
call
pop
jbe
not
cmp
push
mov
loope
pushf
jl
adc
adc
add
je
ins
mov
ds
fistp
ficom
pusha
div
adc
mov
dec
in
and
dec
dec
pop
pop
push
(bad)
inc
push
cmp
cli
mov
call
add
mov
or
adc
das
cmps
scas
sar
pop
icebp
jns
jmp
loopne
cmp
loope
pop
or
aaa
push
scas
jmp
jge
pop
ins
div
and
dec
aas
test
mov
sbb
jg
aam
mov
or
in
je
or
stos
pop
icebp
push
and
mov
and
mov
jmp
sub
addr16
and
mov
cmp
mov
adc
out
mov
fyl2xp1
xor
popa
xchg
mov
jae
cmp
rol
jecxz
xchg
cmp
mov
mov
aas
loope
aas
add
pop
in
enter
test
rcl
jnp
add
loop
mov
jecxz
sbb
pop
add
push
cmp
inc
out
add
imul
jle
cmp
xchg
cmp
inc
div
push
and
ret
(bad)
mov
mov
or
int
lock
dec
xlat
test
xchg
xor
loop
aas
or
xchg
(bad)
loop
xchg
fmul
pop
mov
or
ror
xor
in
mov
in
mov
dec
test
jno
cmps
mov
fdiv
xchg
and
jb
es
jae
das
inc
loop
aad
out
xchg
pop
(bad)
jae
add
aad
test
fild
mov
xchg
call
lods
adc
retf
bound
imul
(bad)
in
outs
sbb
les
pop
popf
in
ror
mov
push
mov
push
or
test
or
mov
(bad)
mul
out
adc
sub
xor
add
adc
add
jl
fcom
jle
mov
fdiv
xor
or
or
mov
add
sbb
aad
out
fadd
ins
sbb
mov
xor
or
pop
sbb
ret
cmps
and
push
jg
jbe
in
jbe
add
(bad)
sub
or
popa
cld
mov
outs
call
push
dec
add
lods
sub
sub
or
call
xlat
scas
nop
lds
mov
xchg
outs
adc
xchg
or
and
xchg
push
jnp
add
cmps
adc
gs
aas
test
and
stos
adc
add
in
sbb
gs
cmp
sbb
loopne
scas
mov
dec
cdq
ret
xchg
js
repnz
adc
in
cmp
mov
(bad)
scas
inc
push
popf
inc
sbb
dec
or
idiv
jmp
xchg
enter
pop
mov
mov
out
ret
push
in
inc
adc
dec
in
mov
add
scas
jl
or
ror
mov
inc
aas
jmp
mov
ss
idiv
cld
ss
mov
out
aad
and
or
sbb
(bad)
jmp
sub
push
and
and
jbe
sbb
stos
ret
aas
mov
mov
jle
test
adc
adc
push
int
xor
dec
aaa
mov
sub
in
ficomp
push
mov
push
push
mov
pusha
inc
pop
cmps
shl
mov
movs
jb
test
fist
jp
cmps
inc
in
fs
call
and
cmp
shl
xchg
bound
sub
popf
pop
dec
in
loop
xchg
jno
jns
xor
mov
clc
dec
sub
int
pop
lds
and
mov
inc
inc
shl
je
ins
imul
std
add
jge
popa
shr
mov
pop
adc
sbb
in
mov
(bad)
jb
lods
jae
add
ss
neg
pop
and
mov
pop
ins
mov
xchg
mov
xchg
dec
nop
mov
frstpm(287
jnp
add
jecxz
sbb
mov
into
fxam
call
call
mov
mov
add
mov
mov
dec
xor
xor
add
jae
pop
dec
push
cmp
mov
nop
cmp
xchg
leave
js
(bad)
in
pop
shl
lock
mov
pop
cwde
and
aaa
jp
je
add
cdq
lock
jl
and
test
loop
jge
cmp
scas
imul
jno
push
in
rcl
mov
idiv
jg
add
cmp
jb
mov
(bad)
mov
adc
sbb
dec
loope
fld
rcl
icebp
ins
xchg
mov
xor
add
mov
retf
inc
dec
ja
test
mov
push
xchg
popa
idiv
dec
add
ss
and
fisub
mov
(bad)
loop
inc
jp
jbe
push
jl
in
push
push
and
mov
das
push
inc
mov
or
sbb
nop
push
mov
dec
dec
cmp
neg
or
xor
sbb
imul
jo
add
bound
add
mov
pop
call
outs
lahf
inc
pop
mov
aad
xlat
test
movs
retf
and
(bad)
out
(bad)
mov
cmp
pop
jne
push
inc
xor
icebp
xchg
int
mov
into
aaa
or
push
mov
mov
xchg
push
retf
jbe
cwde
lds
popf
cmp
pop
inc
pop
jge
jns
and
in
add
cmp
adc
repz
mov
mov
pop
add
mov
xlat
ret
cwde
into
xchg
and
or
aas
les
pop
and
das
fidivr
outs
je
rcl
or
cmc
push
inc
pop
mov
xor
call
jg
jecxz
mov
pop
jb
out
aam
pop
dec
mov
hlt
ficomp
add
add
push
or
shl
stos
sub
adc
lahf
stc
mov
push
out
push
jne
xchg
(bad)
shr
pop
ret
jnp
imul
ret
lahf
add
mov
dec
jp
call
scas
lock
call
jno
imul
in
gs
imul
mov
jne
mov
and
mov
jge
sub
mov
add
(bad)
cld
pop
lahf
pop
das
push
inc
scas
ds
shl
call
pop
lods
jbe
inc
cdq
fiadd
ficomp
pop
adc
mov
inc
inc
jmp
adc
adc
cwde
jno
int
mov
movs
fld
leave
xchg
mov
xchg
ficomp
(bad)
or
mov
inc
sub
nop
adc
shl
add
retf
add
popa
xor
adc
cs
test
xchg
cdq
mov
loop
xchg
stos
sub
push
mov
pop
in
js
retf
call
sar
sbb
pop
call
shr
stos
cdq
adc
or
mov
in
push
int3
outs
pop
jecxz
mov
jno
sti
xchg
movs
in
lahf
lahf
call
cmps
add
rol
cld
mov
inc
pmulhuw
int
jo
jb
jmp
sbb
adc
dec
shr
dec
neg
mov
or
clc
add
xchg
retf
pop
addr16
call
cs
daa
jmp
out
repnz
mov
push
mov
test
mov
and
lea
pop
add
push
mov
bound
inc
sbb
mov
retf
ds
xchg
adc
mov
xchg
pop
dec
shl
mov
mov
jmp
jbe
ins
or
cs
and
fisub
das
jp
aaa
hlt
dec
push
rcr
movs
inc
ss
retf
or
movntps
loope
aas
sti
lods
and
or
adc
xor
mov
in
jbe
xchg
cmc
in
clc
adc
loope
pop
shl
mov
outs
dec
add
adc
les
dec
adc
stos
or
xor
rol
sti
add
sar
and
jmp
ret
xchg
ror
aaa
jge
imul
pop
sbb
scas
dec
dec
pop
nop
shl
sbb
jbe
adc
cmps
neg
(bad)
jne
pop
cmp
add
mov
(bad)
mov
add
fs
jl
aaa
sbb
out
shr
(bad)
jp
sbb
and
push
cmp
adc
mov
stc
push
popa
mov
test
sar
and
pop
movs
cld
ja
cdq
shl
sub
mov
loopne
(bad)
out
int
mov
push
sar
lods
std
dec
pushf
idiv
out
ja
in
pop
sub
in
movs
std
das
and
pop
push
cmc
adc
stc
mov
loop
inc
fld
lock
cmp
pop
aad
out
mov
sub
iret
js
test
mov
dec
rcl
(bad)
call
jbe
push
inc
stc
fwait
(bad)
(bad)
mov
loop
mov
rol
add
adc
mov
inc
gs
in
or
jo
loopne
push
repnz
push
mov
jp
lahf
adc
scas
nop
push
pop
outs
push
shl
cmc
loop
mov
movs
jg
ret
cli
cmp
cmp
cmc
sub
ins
stos
sub
mov
mov
sbb
and
add
pop
cmps
sbb
(bad)
int3
loop
or
adc
movs
mov
mov
fld
dec
std
adc
sar
jp
jecxz
or
out
dec
mov
in
sub
xchg
bound
xchg
mov
nop
push
sub
push
mov
je
cs
adc
mov
call
in
push
data16
ins
dec
adc
lahf
push
dec
sub
fst
mov
adc
mov
mov
mov
mov
fucomip
shl
cmp
jge
das
pop
call
bound
jnp
pop
inc
or
push
out
push
sub
inc
jne
xchg
inc
push
jle
popa
shl
jg
gs
bound
inc
ja
pop
or
out
movs
add
dec
clc
ss
xchg
mov
mov
pop
sbb
xor
out
fidiv
arpl
pusha
stc
inc
lods
inc
cld
push
dec
xchg
pop
dec
cmp
pushf
or
jmp
ret
in
les
imul
mov
mov
aad
add
push
in
fistp
add
adc
cmp
xchg
test
adc
mov
add
xchg
(bad)
dec
mov
inc
mov
fsubr
cmps
and
cmp
ror
mov
ror
push
outs
dec
mov
push
cli
cdq
mov
fwait
aaa
lods
clc
pop
rol
test
nop
or
repnz
movs
std
mov
push
out
add
cmp
ror
xchg
std
pop
dec
fdivr
dec
addr16
std
sub
adc
test
cmp
mov
lods
enter
data16
bnd
lds
mov
sar
mov
mov
xchg
adc
jno
les
rcl
xchg
movs
outs
mov
adc
sar
mov
push
xor
push
nop/reserved
int
xor
sbb
and
jecxz
dec
inc
mov
(bad)
ja
sub
(bad)
push
and
dec
mov
dec
mov
sti
in
lods
pop
out
jo
scas
xchg
retf
addr16
in
ins
shl
mov
repz
retf
jns
fist
nop
mov
mov
mov
add
or
xor
mov
clc
loope
fsubr
lock
mov
xchg
cdq
je
pushf
sub
test
pop
jmp
in
mov
mov
je
stc
scas
xor
mov
cmp
inc
mov
sub
fwait
xlat
in
push
add
in
xchg
out
and
add
test
(bad)
fld
daa
push
sar
xchg
jns
es
popf
and
or
fcom
test
(bad)
jbe
and
idiv
inc
pop
ss
mov
shl
and
scas
imul
(bad)
jbe
fsin
push
add
nop
mov
mov
jp
adc
call
(bad)
fadd
mul
mov
mov
add
out
fnsave
mov
xor
gs
push
ror
imul
mov
mov
imul
leave
push
dec
mov
push
ret
jge
sti
sbb
mov
js
fwait
cli
xchg
repnz
sbb
or
call
scas
call
dec
sti
(bad)
cmp
sbb
mov
aaa
or
ja
out
aaa
jno
mov
call
jns
aaa
dec
les
mov
mov
mov
fucomp
sub
sub
fiadd
or
leave
lock
jo
mov
push
adc
pop
sub
movs
sub
scas
into
js
mov
int3
xchg
cmp
inc
cmps
add
aas
mov
in
call
cmp
and
imul
fisubr
ret
test
pop
xchg
dec
loope
out
fidiv
into
(bad)
fcomp
push
xor
xlat
lahf
inc
vdivss
shl
sub
mov
call
and
fstp
(bad)
in
nop
or
and
test
pop
call
jo
pop
lds
int
pushf
jle
sbb
mov
xchg
push
xchg
fisttp
or
lahf
rcr
inc
and
out
mov
jge
xor
rol
push
in
cmp
loopne
bound
and
scas
cmovne
and
ret
mov
and
frstor
imul
mov
imul
inc
push
cmp
je
jge
xchg
inc
(bad)
not
and
add
pop
pop
aam
cdq
mov
imul
add
shr
xor
not
sub
mov
outs
pushf
sbb
cmp
xor
push
jne
imul
shr
inc
pop
loopne
fist
(bad)
jae
js
shr
(bad)
or
sbb
add
sahf
mov
lods
sbb
mov
jge
fimul
mov
test
push
mov
dec
mov
mov
shl
jg
(bad)
in
fistp
mov
pusha
(bad)
scas
pop
stos
sub
jns
or
popa
mov
jmp
pop
mov
mov
jo
out
shr
xor
push
sub
rcr
test
cmp
push
jecxz
(bad)
or
stos
sbb
cwde
(bad)
add
or
xor
mov
jle
xchg
cli
inc
icebp
mov
push
or
rcl
jne
repz
xor
jmp
gs
cmp
cmps
test
pusha
in
dec
xchg
lods
mov
push
sbb
add
and
repz
mov
ins
popf
cmc
mov
lods
sbb
out
add
and
(bad)
pop
add
int
fsubp
xchg
sub
call
xchg
std
mov
test
cmp
mov
push
mov
cmp
push
ficomp
lods
sub
les
xor
jecxz
fild
fnstenv
cmp
xor
or
hlt
std
push
jp
call
cld
push
mov
sbb
shl
aaa
lds
cmp
sbb
jp
mov
mov
dec
jb
xchg
popa
mov
inc
(bad)
outs
mov
mov
call
ja
push
inc
movs
dec
mov
inc
lods
fiadd
cdq
cmc
mov
pop
mov
shr
cli
lea
add
mov
jl
loope
mov
push
pop
in
sub
mov
cwde
lahf
shl
cmp
dec
and
stc
clc
mov
(bad)
out
or
dec
jno
mov
jl
pop
mov
mov
movs
pusha
pop
pop
cmp
dec
pop
out
adc
mov
pop
sbb
scas
stc
mov
jecxz
scas
push
lea
dec
clc
add
pop
(bad)
push
arpl
(bad)
push
dec
sbb
mov
sar
sub
and
(bad)
arpl
and
imul
or
jne
out
stc
adc
mov
popf
push
jp
push
(bad)
sub
mov
add
pop
mov
addr16
clc
cmp
pop
mov
dec
or
(bad)
int3
and
ret
mov
mov
sub
test
stc
cmps
xor
and
clc
adc
scas
pop
pop
fst
jno
push
in
out
(bad)
sub
test
enter
nop
ja
pop
push
loope
jmp
sub
mov
js
and
nop
(bad)
(bad)
mov
sub
imul
jp
addr16
push
loope
adc
adc
mov
cmp
cmp
ficomp
pop
xor
gs
or
in
jns
mov
test
shl
(bad)
mov
push
lea
fcomp
pop
call
lahf
jecxz
cmp
jno
fcmovu
mov
rcl
mov
ds
repnz
call
dec
and
push
addr16
push
push
andps
xchg
xchg
rcr
mov
call
stos
xlat
cmp
fimul
js
cmp
inc
imul
retf
xchg
dec
or
push
repnz
repz
mov
retf
js
not
cmc
stc
mov
mov
repnz
adc
stc
push
gs
sub
mov
inc
inc
lea
cmp
mov
retf
inc
sub
cmp
mov
test
dec
(bad)
cmp
add
nop
ja
sbb
jae
fiadd
retf
xchg
mov
lock
xchg
outs
(bad)
test
add
mov
pop
mov
out
sbb
ins
sbb
leave
int3
mov
adc
mov
jno
push
adc
inc
mov
mov
cli
adc
data16
jb
pop
add
jl
and
ror
or
fucomp
or
pushf
or
daa
outs
rcl
xor
div
loop
xchg
daa
(bad)
cmps
jo
gs
sub
cdq
rol
jbe
in
dec
in
stos
and
aam
and
xchg
add
sbb
idiv
jmp
xchg
(bad)
cmps
fwait
pop
lock
in
mov
mov
dec
adc
fimul
cli
xchg
jns
retf
add
aam
(bad)
mov
mov
xchg
adc
pop
aaa
adc
push
and
push
mov
in
ret
jbe
icebp
movs
adc
sbb
sbb
into
test
adc
mov
mov
jo
mov
fistp
loop
pop
call
ins
je
ins
jecxz
not
or
popf
cmps
xchg
sub
mov
lock
in
xor
pushf
div
ret
shl
adc
dec
arpl
inc
in
xchg
iret
icebp
mov
imul
js
xchg
iret
mov
jb
outs
rcr
into
add
outs
loopne
sub
fist
or
repnz
jbe
stos
mov
push
cmps
dec
sub
outs
xchg
cmps
imul
mov
pop
daa
xchg
cmps
mov
sub
push
and
add
int3
fst
pop
ret
gs
aad
in
mov
cmps
sbb
hlt
sub
jo
push
mov
add
in
push
jle
lods
mov
int3
mov
(bad)
push
mov
inc
ss
cmc
cmps
push
dec
dec
hlt
pushf
mov
push
push
mov
(bad)
mov
cmp
ins
jg
pop
lock
gs
icebp
hlt
les
sbb
inc
in
and
out
rcl
movs
sub
cwde
add
mov
mov
aam
push
mov
loopne
daa
arpl
fwait
cld
test
dec
cld
pop
pop
sbb
je
das
(bad)
adc
cmps
and
mov
mov
jb
pop
movs
fst
sbb
test
nop
add
pop
push
hlt
mov
xor
sub
cmps
jle
stc
ficom
jne
cmp
push
jnp
inc
jl
mov
cmps
loope
in
sbb
sub
and
cmp
mov
mov
push
and
dec
mov
call
mov
out
push
pusha
inc
push
aas
adc
and
mov
push
xor
addr16
xchg
lahf
rcl
fild
sub
test
loop
and
pop
ss
repz
jecxz
lea
pop
inc
jo
mov
cmp
cmp
ds
pop
stos
(bad)
mov
gs
jo
cmp
movs
inc
add
push
fcomp
add
sti
push
cmps
and
enter
jp
cli
int
mov
add
icebp
cmp
sbb
xor
mov
xor
sub
or
lods
mov
sub
mov
cmp
adc
retf
in
out
cli
out
xor
ffree
hlt
cmps
into
add
or
and
add
pop
data16
xchg
into
xchg
xlat
rol
and
pusha
sahf
xchg
xor
cmps
push
lock
leave
jp
frstor
(bad)
push
imul
jle
mov
pop
shl
mov
shr
jb
or
mov
dec
pop
sub
movs
pop
inc
cmp
mov
shl
lock
mov
pop
jmp
jg
movs
sahf
push
fidiv
fst
xchg
cmps
fidiv
mov
into
and
dec
jae
jecxz
scas
cmp
pop
cs
fsubr
adc
fst
imul
in
lods
retf
or
(bad)
sbb
jmp
loopne
mov
mov
mov
sbb
adc
imul
and
jns
test
cmp
xor
mov
dec
pop
sbb
das
and
cmp
cli
mov
push
or
xchg
sbb
sub
push
xlat
rcl
(bad)
adc
jge
inc
xchg
(bad)
xchg
pop
pop
es
test
mov
xchg
jne
out
fdivr
lds
mov
pop
add
scas
scas
(bad)
jmp
jbe
cmps
inc
push
imul
or
fsubr
loope
add
dec
inc
aam
mov
xor
repnz
gs
inc
xchg
xor
call
popa
outs
jmp
sbb
in
ins
mov
push
add
dec
inc
xor
dec
pop
movs
cmps
inc
bound
jmp
jno
or
pop
out
xchg
scas
test
add
out
adc
mov
fxch
iret
sbb
pop
imul
xchg
stos
aad
dec
cwde
test
retf
aaa
pop
sahf
cmps
addr16
(bad)
mov
inc
cmps
pop
scas
data16
xchg
dec
je
push
(bad)
mov
mov
jmp
dec
push
fs
ror
lahf
mov
(bad)
outs
scas
sahf
xlat
and
scas
push
and
in
jno
in
cld
jle
xchg
fcomp
jecxz
mov
jne
push
push
add
xlat
aas
popa
dec
lahf
push
mov
cmp
mov
add
push
jmp
sub
in
out
ja
and
sbb
ret
fld
jae
pop
call
shr
mov
das
inc
and
and
jns
inc
dec
jl
push
inc
pop
out
sub
inc
imul
mov
into
and
dec
jae
or
inc
jecxz
push
nop
nop
dec
pop
and
pop
mov
cdq
inc
push
in
shr
cmp
jge
lods
add
sub
scas
add
scas
pop
ficom
push
sub
icebp
xor
test
(bad)
sub
pushf
jnp
dec
lods
fimul
mov
sar
jecxz
pop
mov
mov
lds
sbb
imul
sbb
pop
shr
shr
cs
pop
in
stos
mov
cs
xchg
fild
or
dec
or
sub
add
add
xlat
sti
jmp
mov
and
mov
lea
sub
jnp
push
xor
fcomp
inc
sub
xor
dec
lods
dec
or
fcom
aam
out
outs
mov
pop
test
cmp
dec
rcr
push
jle
int
dec
(bad)
movs
sub
push
(bad)
repnz
jle
fisttp
ins
les
jl
out
sub
test
push
fiadd
mov
push
ds
adc
nop
xchg
mov
dec
dec
xchg
ret
int3
cdq
std
push
jecxz
mov
jns
mov
stos
(bad)
pop
pop
sti
mov
ret
dec
add
call
or
(bad)
pop
fdiv
xchg
inc
pop
pusha
dec
js
mov
push
call
test
mov
inc
xchg
jl
mov
push
addr16
and
test
sub
xor
in
enter
mov
test
pop
sbb
sub
inc
mov
push
stos
cld
jne
sub
je
jg
jnp
cdq
cmp
sbb
pop
arpl
lahf
push
push
inc
sub
pop
jns
cmp
sti
or
daa
pop
xchg
leave
pop
out
hlt
dec
adc
ss
scas
in
push
adc
pop
aad
jmp
pop
mov
or
(bad)
pop
out
sbb
add
mov
xchg
pop
popf
pop
xchg
fnstsw
push
jge
mov
mov
mov
push
leave
sub
fdivr
push
movs
pop
jne
aam
adc
mov
test
mov
lahf
cli
jp
clc
int3
and
test
mov
pushf
fisttp
mov
retf
cmp
mov
leave
or
lods
leave
ins
outs
sbb
adc
stc
adc
pop
lea
and
pop
ja
mov
sub
fild
add
sbb
(bad)
dec
sub
jp
in
stc
mov
cmp
inc
and
test
xor
mov
sub
sbb
mov
js
sub
dec
fisttp
test
push
ds
fucom
data16
retf
rcr
pop
add
sbb
mov
xor
sar
rcr
push
lock
and
or
and
pop
sub
inc
cwde
sti
call
xor
mov
stos
cmp
mov
leave
aas
js
sub
sub
cmp
add
mov
sub
outs
jnp
mov
push
cdq
add
fwait
inc
dec
adc
or
push
scas
pusha
popf
pop
aad
or
aaa
int
cmp
mov
pop
(bad)
into
addr16
aas
pop
fidiv
mov
or
push
loopne
pushf
cmps
add
dec
aaa
lock
lock
loope
push
ss
icebp
cmp
or
dec
scas
jnp
pop
adc
imul
fisubr
cmps
inc
mov
call
jmp
ds
(bad)
xchg
stos
repnz
mov
jmp
loop
jecxz
out
mov
pop
cwde
sub
lods
rcr
arpl
adc
into
sbb
call
push
ret
cmp
ds
shr
mov
jecxz
adc
push
bound
mov
or
mov
jle
dec
(bad)
int3
sub
xchg
cwde
and
mov
test
and
lods
pop
(bad)
mov
xor
stos
mov
js
or
ret
fnstcw
or
sahf
adc
mov
mov
loop
lods
gs
ja
xor
sti
aad
pop
mov
adc
or
fdiv
cmps
xor
sub
or
cwde
jae
xchg
pop
stos
or
xor
push
sub
push
mov
aam
xchg
das
inc
bound
ret
mov
inc
in
mov
gs
mov
pop
and
shl
mov
gs
ret
sbb
out
retf
mov
daa
addr16
in
fldcw
sub
jno
pop
(bad)
clc
bound
arpl
inc
mov
pop
pushf
mov
and
(bad)
es
gs
xlat
mov
loopne
or
(bad)
mov
xchg
push
repnz
add
dec
mov
pop
mov
mov
call
or
pop
jb
pop
mov
nop
fst
loope
jl
les
es
test
adc
loop
mov
cmps
fisubr
adc
repnz
push
loopne
mov
retf
mov
push
repz
ins
ins
out
and
mov
push
jno
cmp
fincstp
repnz
into
std
ror
cmp
and
inc
sbb
mov
cli
cld
ja
in
mov
inc
xlat
adc
mov
enter
jecxz
jmp
or
jecxz
pop
cs
sub
dec
ins
test
xlat
pop
mov
mov
aaa
std
xor
jne
(bad)
dec
inc
(bad)
xor
add
adc
imul
mov
loop
fld
lea
mov
out
ja
loope
jle
fwait
outs
mov
(bad)
cmp
fnstcw
int3
test
ret
retf
jns
sahf
(bad)
mov
movs
stc
jg
mov
adc
xor
fwait
xchg
pop
push
pop
or
jp
jecxz
in
mov
ja
mov
adc
out
(bad)
adc
jp
or
retf
test
jb
dec
jl
stos
mov
mov
enter
inc
pop
imul
add
popf
je
gs
mov
sbb
inc
push
mov
out
lahf
ror
xor
mov
pop
pop
push
call
je
pop
(bad)
push
mov
mov
xchg
jae
mov
jne
dec
aaa
sub
pusha
and
aas
lods
jb
cmp
pop
push
rcl
inc
not
test
add
or
or
adc
dec
daa
push
push
sti
sbb
sti
scas
adc
cmp
or
in
aas
mov
lock
test
mov
jg
out
xchg
lahf
sub
mov
xor
adc
push
push
and
out
adc
scas
sub
add
ja
sbb
leave
jecxz
sbb
jmp
and
mov
rcl
mov
pop
shl
sar
dec
les
clc
(bad)
(bad)
loopne
ret
clc
pop
les
mov
in
push
out
ficom
jmp
adc
cmp
adc
xchg
fbstp
xor
mov
inc
or
push
adc
cmp
aad
xor
mov
lea
pop
sub
imul
loope
dec
dec
pop
lock
dec
(bad)
clc
iret
add
es
rcl
mov
and
or
pop
jno
xor
push
add
inc
xchg
xor
mov
jmp
mul
icebp
push
or
std
outs
ins
xchg
fisub
mov
fst
xchg
cli
sbb
jne
cmp
lock
mov
ss
ins
mov
jns
call
cli
std
mov
cdq
pop
popf
jbe
ror
xchg
pop
and
sbb
xchg
push
sub
push
sbb
outs
pop
inc
xchg
loopne
outs
jns
cwde
bound
sbb
ficom
inc
inc
pop
mov
sti
jmp
or
jg
add
and
int3
bound
jge
retf
(bad)
jmp
loop
push
std
daa
into
gs
lock
jno
dec
mov
or
(bad)
mov
outs
mov
sahf
dec
retf
(bad)
int3
jl
sbb
sbb
ret
mov
scas
(bad)
and
(bad)
push
xchg
dec
out
add
enter
fsub
aaa
cmp
sahf
dec
add
stc
mov
jmp
jnp
cmp
clc
das
or
(bad)
(bad)
cmp
int3
ror
jl
gs
cmp
xchg
mov
push
xor
std
inc
out
in
(bad)
int
rol
imul
addr16
push
and
xchg
call
(bad)
retw
sbb
cwde
inc
xor
out
inc
xlat
out
mov
pop
sub
addr16
push
adc
(bad)
pusha
add
inc
pop
adc
movs
retf
loope
or
movs
cmps
out
mov
mov
push
jne
inc
int
test
add
sbb
dec
mov
mov
fbstp
inc
sub
int3
movs
imul
lock
sbb
sub
hlt
loopne
stos
rcl
cmp
or
dec
stos
addr16
in
daa
push
cmp
(bad)
sub
cmp
xchg
pop
imul
jae
mov
jp
jle
xchg
aad
jp
loop
sub
aad
mov
adc
fild
in
cmc
stos
push
xor
(bad)
fiadd
or
inc
pop
mov
mov
sbb
and
pop
pop
sbb
jmp
rcr
and
in
lods
jp
jnp
loop
out
dec
add
fucomp
or
cmps
add
sbb
ror
jno
push
mov
dec
inc
jp
jmp
push
(bad)
sbb
icebp
aam
outs
and
push
push
not
mov
fs
sub
pushf
xchg
jnp
jmp
jge
mov
sub
dec
js
test
mov
fistp
push
push
mov
pop
out
dec
xor
mov
out
shr
mov
(bad)
inc
cmp
nop
adc
dec
lods
push
aas
cmps
rcl
int3
sub
faddp
xor
adc
retf
adc
in
xor
adc
adc
lock
and
mov
fwait
cmp
ins
xchg
test
xlat
xchg
jbe
add
or
and
call
and
or
ficom
push
outs
sub
inc
jbe
popf
icebp
and
mov
arpl
or
cs
xchg
dec
scas
xchg
jbe
retf
es
xlat
mov
nop
pop
mov
push
xor
sbb
stos
ficom
mov
fisttp
or
mov
test
adc
and
mov
cmp
es
mov
int3
xchg
ja
and
sahf
mov
not
test
das
(bad)
jb
scas
pop
scas
sbb
mov
inc
inc
loop
fadd
retf
cmps
push
and
adc
or
xchg
data16
in
or
mov
pushf
mov
rol
xor
mov
pusha
enter
or
mov
pop
pusha
out
inc
inc
cmp
jle
loope
jno
mov
stc
imul
pop
movs
fild
jl
sub
data16
retf
int
(bad)
cmps
popa
enter
rol
retf
inc
xchg
mov
test
aad
pop
retf
cld
sbb
pushf
rcr
mov
inc
movs
mov
jbe
add
cmp
and
(bad)
aad
outs
mov
in
inc
mov
pop
test
inc
iret
push
lds
mov
movs
dec
fistp
lods
jb
scas
out
(bad)
std
sub
call
repz
and
or
(bad)
js
inc
cwde
loope
mov
pop
(bad)
and
xor
(bad)
sti
ja
mov
add
aas
push
xchg
sub
daa
mov
inc
add
jmp
cmp
push
std
adc
dec
and
nop
mov
sub
sbb
call
shl
pushf
(bad)
push
push
jns
sub
in
add
cmp
jp
js
lahf
lods
inc
push
outs
test
stos
sbb
sub
sbb
popf
fnstenv
sahf
and
or
mov
int
push
push
clc
cmp
in
dec
dec
sbb
fldcw
xlat
inc
mov
shr
sub
xlat
stc
and
push
xlat
fwait
push
xchg
(bad)
sahf
scas
dec
ss
movs
rol
loopne
inc
push
sbb
sbb
lea
xchg
sahf
cmp
mov
xlat
add
ds
call
aad
out
and
lods
(bad)
dec
sub
jns
fwait
add
(bad)
ret
ss
xor
mov
das
jp
stos
dec
in
(bad)
and
push
inc
sub
add
mov
inc
push
push
daa
shl
inc
mov
arpl
cmp
jg
ret
cmp
jl
out
pushf
push
jo
test
clc
cwde
in
sbb
sbb
mov
push
adc
(bad)
adc
js
leave
push
sbb
mov
or
(bad)
in
xchg
scas
cs
add
xchg
jl
(bad)
cli
dec
or
mov
bound
pop
and
push
sbb
cmps
outs
iret
hlt
stc
fldenv
mov
dec
push
mov
(bad)
fs
test
mov
ret
rol
neg
and
loop
cdq
mov
gs
pop
clc
pop
aad
pmuludq
out
dec
add
lock
imul
xchg
ins
repz
jnp
cmp
sbb
test
lds
push
test
mov
fwait
cmps
adc
aas
rcr
popf
movs
inc
xchg
(bad)
pusha
mov
xor
add
hlt
mov
repz
mov
pop
mov
add
jle
mov
(bad)
push
jg
mov
inc
pop
push
push
cmps
jecxz
test
arpl
pop
stos
je
mov
inc
(bad)
into
rcl
repz
jp
pusha
lea
icebp
xor
arpl
jae
(bad)
movs
mov
lahf
movs
sbb
push
mov
push
and
cmc
dec
cmps
arpl
pop
(bad)
prefetcht2
fs
je
xchg
mov
add
(bad)
jecxz
mov
mov
mov
mov
jb
mov
out
repnz
push
jmp
jl
fxch
push
mov
jo
and
xor
adc
sub
jae
adc
lds
fdiv
or
inc
pop
xchg
ret
shl
mov
inc
pop
(bad)
in
and
pop
or
mov
inc
ror
xor
sub
sbb
mov
test
jae
(bad)
adc
std
movs
(bad)
or
cdq
sahf
pop
push
xor
test
nop
xor
adc
test
(bad)
cmp
out
das
int
pop
sbb
add
dec
mov
or
push
jae
dec
(bad)
add
adc
fs
mov
xor
inc
mov
mov
fdivr
inc
out
je
xchg
jge
ret
push
inc
arpl
sbb
sbb
and
add
pop
fsub
xor
aad
push
out
and
push
das
js
pop
pop
push
pop
outs
add
mov
xor
jl
push
inc
mov
or
scas
jne
sbb
inc
xor
push
jo
stc
and
sub
lock
fcom
daa
int3
sub
(bad)
ds
pop
pusha
or
arpl
sbb
clc
mov
xor
enter
pushf
cmc
cmps
jae
fs
aaa
dec
test
and
cmp
enter
fstp
cli
jno
js
or
inc
mov
inc
or
xchg
xchg
sbb
scas
sahf
xor
mov
and
daa
jecxz
mov
test
and
mov
nop
xor
fwait
rcr
dec
test
(bad)
or
mov
out
out
hlt
mov
cdq
int3
sbb
retf
xchg
sub
clc
mov
cmp
das
mov
cmp
inc
lea
mov
ja
jmp
jne
(bad)
mov
sub
aad
mov
xchg
call
(bad)
pusha
movs
or
cmp
dec
stos
adc
push
test
xchg
pop
or
gs
sbb
sbb
scas
dec
mov
jge
sbb
push
popa
push
pop
div
mov
or
int
in
fdivr
mov
jns
jmp
sub
or
xchg
adc
test
mov
or
jle
int
adc
push
sub
sbb
fiadd
dec
mov
cdq
arpl
ror
pusha
xor
out
pop
pop
out
cli
xor
jmp
js
inc
mov
cwde
xchg
cs
mov
pop
movs
imul
lock
push
ss
cmp
pop
loop
xchg
dec
jg
movs
dec
push
test
sar
pop
(bad)
xchg
jb
popf
leave
dec
sbb
mov
(bad)
push
movs
push
rol
cmp
call
push
xchg
cmps
push
movs
xlat
repnz
sub
sbb
out
int
pop
dec
mov
aam
outs
adc
add
mov
scas
popa
dec
mov
jmp
dec
iret
fnstsw
mov
and
inc
retfw
fldcw
push
outs
(bad)
adc
jne
std
push
inc
or
add
push
jl
push
ds
retf
mov
(bad)
jnp
out
mov
ja
stc
xor
je
xchg
inc
or
ins
stos
stos
pop
sub
repz
push
lods
or
cld
mov
mov
mov
pop
lds
and
aam
sbb
push
add
imul
mov
out
in
xor
mov
push
mov
outs
cmp
inc
in
(bad)
push
jecxz
pushf
pop
push
jnp
inc
sbb
add
arpl
jmp
jmp
hlt
(bad)
shl
ret
pop
mov
adc
and
cmp
push
(bad)
mov
xor
pushf
add
cmc
dec
outs
pop
out
imul
push
inc
int
and
rol
xchg
xor
mul
pop
scas
fidiv
mov
fimul
scas
inc
cmp
icebp
xchg
xor
outs
mov
pop
cvtps2pi
ret
mov
mov
je
sub
pop
sub
dec
mov
inc
sub
leave
ffree
sbb
mov
das
imul
ret
jmp
fild
scas
add
adc
mov
inc
and
(bad)
call
scas
arpl
dec
xchg
xchg
shr
enter
into
add
pop
fs
pop
cmp
xchg
int
aad
cwde
loopne
mov
sub
push
lea
shl
mov
push
(bad)
addr16
ret
and
mov
call
xchg
fdiv
xchg
cdq
fisub
cmp
ret
push
xor
sbb
mov
and
and
pop
movs
pop
movs
inc
fcom
jae
or
jne
and
dec
cmp
pop
jmp
nop
sti
mov
xchg
retf
sub
pop
es
adc
inc
xor
ficom
movs
loope
or
mov
pop
lds
sbb
xchg
push
jne
add
pop
mov
cmps
lahf
mov
test
and
rcr
shl
inc
fmul
fcmove
test
bound
add
dec
imul
add
movs
icebp
jae
adc
mov
in
out
or
mov
sahf
sbb
mov
pop
xlat
repz
pushf
sbb
and
rol
(bad)
sbb
add
lods
in
dec
iret
aam
pop
cmps
jno
pop
aam
(bad)
movs
jo
add
cmp
enter
inc
es
mov
fild
and
lods
dec
(bad)
jp
dec
mov
ja
fcom
dec
pop
pushf
lods
gs
arpl
add
mov
fnstenv
pop
cli
pop
and
jo
cmps
cmp
push
ficom
movs
inc
dec
sub
xchg
adc
mov
and
jmp
xchg
addr16
ret
repz
inc
jp
mov
adc
pushf
and
push
jne
and
sbb
ficomp
jecxz
int3
dec
inc
xchg
rcl
adc
iret
adc
iret
aaa
cmp
mov
add
cld
lods
or
dec
pop
xchg
push
stc
pushf
mov
add
cmc
aas
pop
loopne
shr
mov
scas
inc
push
movs
not
mov
hlt
outs
pop
clc
arpl
jnp
movs
mov
jl
inc
mov
push
mov
pop
jnp
les
mov
dec
jl
inc
call
jg
push
xchg
popf
pop
xor
push
cmp
or
mov
mov
pop
cmp
(bad)
ja
adc
add
or
bound
scas
pop
popf
lea
dec
std
sbb
repnz
push
dec
push
stc
xchg
cmp
xlat
mov
cwde
enter
loop
mov
add
xchg
push
cmp
sub
fistp
inc
scas
daa
retf
adc
jb
arpl
xchg
test
and
dec
sbb
mov
pop
push
(bad)
ret
pop
loop
xor
and
daa
lock
retf
jp
test
daa
into
into
ds
cmc
jecxz
out
xor
iret
das
jl
adc
cmps
pop
dec
and
mov
add
(bad)
or
repnz
add
rol
adc
jle
pop
(bad)
mov
jecxz
mov
mov
or
out
mov
icebp
xchg
sti
mov
fist
push
and
xchg
inc
dec
add
dec
fcomp
ror
mov
icebp
xchg
mov
xchg
adc
adc
test
pop
push
and
xchg
push
out
lds
fwait
and
xlat
mov
retf
jo
dec
ficomp
push
fstp
call
jno
les
xchg
sub
xchg
jmp
js
aad
mov
inc
arpl
mov
mov
sub
les
int3
cmp
cwde
adc
mov
pop
mov
cmp
sbb
mov
or
adc
ss
mov
mov
je
pusha
pop
add
mov
shr
gs
cwde
movs
pop
inc
enter
xor
mov
pop
int
shl
sub
xor
repnz
mov
jge
mov
imul
dec
stc
test
arpl
mov
sbb
add
ret
fisttp
xor
sub
call
loope
inc
or
jg
pop
mov
add
add
jp
scas
dec
fsubr
push
push
inc
stos
jb
sbb
loope
call
xor
dec
ret
(bad)
or
(bad)
imul
les
pop
sbb
stos
loopne
in
jbe
pusha
ss
add
or
add
fstp
das
popa
xor
push
hlt
enter
shl
ja
xor
xchg
jb
movs
jmp
scas
jmp
ss
mov
div
jge
loope
mov
jge
cmp
mov
int
or
shl
xor
mov
cmp
cmc
xor
mov
cmc
fcomp
stos
or
sahf
test
cmp
xchg
mov
test
sbb
sub
neg
call
add
xchg
adc
cwde
out
mov
push
stos
jbe
sbb
call
push
jl
jns
push
pusha
push
or
fimul
mov
frstor
xchg
stc
aaa
lock
sbb
outs
mov
push
pop
aad
sbb
mov
(bad)
aam
(bad)
les
in
call
push
aad
mov
mov
mov
leave
sbb
cdq
hlt
aad
mov
aaa
or
or
aaa
inc
xor
and
(bad)
sbb
push
mov
fdiv
jp
xor
shr
xchg
fist
jnp
mov
outs
sub
mov
xor
jns
xor
adc
je
lahf
repnz
scas
lea
sbb
ret
retf
jns
cmp
pop
mov
out
push
cmp
imul
push
push
cmp
or
mov
mov
test
test
xchg
sub
sbb
push
jmp
sub
jecxz
cmps
jne
outs
push
lock
or
mov
jne
xchg
pop
dec
inc
test
jmp
into
sbb
in
lods
and
leave
sbb
push
add
lods
inc
jbe
inc
sub
loope
xor
(bad)
pusha
add
into
repnz
inc
or
xchg
rcr
jmp
pusha
xchg
imul
bound
push
inc
js
cmp
int3
popa
cmp
xor
cmp
cdq
inc
lods
mov
jo
ins
out
inc
sub
dec
(bad)
or
rol
push
add
cdq
push
js
lods
or
das
daa
retf
int3
mov
pushf
xor
(bad)
popa
retf
(bad)
push
mov
or
add
lods
xor
out
in
dec
push
ja
sub
jmp
repnz
dec
and
or
nop
hlt
adc
push
sub
pop
loop
ret
pop
fwait
into
inc
adc
div
pop
(bad)
(bad)
dec
jae
into
neg
and
aas
adc
loope
addr16
sti
jmp
out
sub
stos
mov
adc
ror
(bad)
xor
pop
outs
lds
ret
sub
mov
add
stos
adc
jns
stos
shr
aam
pop
mov
cmp
or
clc
ror
stos
jmp
mov
ret
add
or
test
das
into
and
(bad)
cmp
mov
mov
mov
inc
or
test
pushf
gs
(bad)
cli
fdiv
mov
xchg
mov
mov
sbb
mov
mov
sar
mov
stos
sub
xchg
adc
sbb
sub
adc
push
fiadd
or
adc
out
cli
pop
scas
cmc
rol
dec
mov
sub
in
push
push
call
push
jae
in
push
mov
jg
xlat
mov
or
aam
lods
outs
fincstp
jg
pop
jmp
xlat
lahf
jle
cmps
int3
loope
mov
pop
ss
daa
mov
ficomp
jle
mov
in
loop
loop
and
ins
pusha
xor
sub
sbb
xchg
sub
jnp
cmp
mov
retf
das
or
mov
call
pop
stos
ret
sbb
clc
shl
sbb
mov
inc
loope
and
jl
adc
(bad)
leave
xchg
cmc
push
xlat
aam
(bad)
dec
clc
or
test
les
sub
outs
aam
fdivr
or
stc
arpl
sub
adc
das
test
dec
jl
inc
pop
cmp
jge
in
and
jno
jno
inc
mov
or
pop
xor
xor
and
(bad)
cmp
retf
cli
lahf
pop
cmps
test
xchg
daa
jbe
adc
loop
push
jbe
push
and
std
adc
scas
test
or
pop
test
sub
jge
mov
push
in
jo
lahf
mov
cmp
fisubr
(bad)
out
mov
cmp
dec
mov
sbb
cmp
jnp
and
dec
fwait
shl
mov
(bad)
mov
push
inc
pop
mov
mov
jmp
shr
xor
fs
lock
push
js
fmul
repnz
retf
sub
addr16
jle
jmp
dec
push
pop
pop
repz
dec
jno
mov
retf
xchg
sub
mov
ficomp
push
xchg
add
mov
fdivr
(bad)
xlat
(bad)
inc
pop
aas
jg
nop
imul
arpl
inc
test
jle
stc
shr
push
push
xlat
cmp
test
stos
rcl
xchg
inc
or
adc
mov
jp
adc
lock
out
mov
jle
cdq
lods
sbb
push
call
rcr
mov
daa
pop
leave
or
rol
(bad)
lock
inc
or
repz
sub
aad
rcl
test
arpl
es
and
add
pop
mov
sbb
mov
neg
dec
cmp
scas
push
or
inc
push
es
in
push
push
mov
mov
mov
fcom
mov
xor
add
sub
lods
add
aad
cmp
cmp
in
in
pop
pop
pop
jge
xchg
cs
add
mov
pop
ins
test
sahf
inc
pop
ret
jecxz
aaa
addr16
dec
popa
adc
loop
push
xchg
neg
fisttp
ja
cmp
add
shl
xchg
repnz
mov
pop
pushf
xor
push
push
or
xchg
popaw
je
and
mov
xchg
mov
loop
popf
test
xor
push
js
adc
mov
mov
in
out
xchg
or
xor
aas
and
stc
mov
ret
shl
mov
mov
xchg
stos
je
mov
add
int3
mov
sti
repz
add
stos
cmps
ds
aam
fwait
imul
add
aad
rcr
mov
mov
mov
pminsw
pop
sbb
push
xor
out
lods
sbb
int
dec
out
adc
push
(bad)
pop
test
sbb
or
loop
sbb
(bad)
mov
push
stc
add
xchg
sar
scas
in
loopne
movs
add
push
inc
jle
push
cmp
test
int3
inc
or
jp
hlt
mov
scas
pop
(bad)
outs
pushf
pop
fcomp
in
das
fwait
jns
inc
sbb
lds
loop
(bad)
cmc
shr
cmp
outs
pop
enter
add
loopne
rcl
pushf
xchg
cmc
push
push
mov
retf
pop
sub
lods
sahf
bnd
inc
pop
and
out
dec
push
cmp
cmp
or
xchg
inc
imul
mov
cmp
inc
mov
fst
xchg
cwde
sbb
in
mov
and
adc
inc
cs
enter
xchg
and
pusha
psrld
push
mov
mov
int
mov
mov
and
push
mov
je
je
pop
pop
dec
jmp
rol
cli
sbb
lods
jnp
and
xor
push
push
sbb
jb
pop
and
popf
xor
and
xchg
outs
adc
lock
hlt
mov
xor
call
mov
in
enter
nop
enter
mov
test
lock
inc
inc
mov
(bad)
shl
adc
push
call
jnp
push
sbb
outs
pop
cmp
add
or
lea
cmp
cmp
addr16
sub
retf
clc
pop
int3
or
cmp
aam
mov
add
enter
add
xor
imul
aaa
xchg
xor
jb
std
push
test
xchg
mov
cwde
je
cdq
lahf
push
pop
fsubr
std
and
jbe
jns
ds
jb
xchg
lea
jne
or
btc
push
loope
jp
xor
mov
push
or
push
adc
and
pop
cmp
sbb
inc
push
(bad)
fs
cmp
mov
cmp
cmp
jmp
sbb
mov
jecxz
imul
jmp
cmp
lods
pop
outs
ss
and
xchg
or
sub
adc
rcl
xchg
dec
mov
mov
loopne
xor
or
imul
shl
jnp
mov
add
add
lock
call
sub
(bad)
sar
xor
add
scas
loope
inc
out
ror
dec
cdq
cmp
jmp
xchg
sar
cmps
popa
and
mov
bound
jo
lahf
in
repnz
aam
shl
pop
bound
push
pusha
cdq
outs
outs
out
outs
mov
and
out
ins
mov
lods
bound
dec
fwait
sbb
call
fdiv
sbb
arpl
imul
push
add
jo
xchg
pop
pop
or
mov
sbb
xchg
cmp
jecxz
mov
inc
xor
pop
inc
sti
mov
popa
iret
push
arpl
jbe
lods
addr16
adc
push
cmp
out
pop
test
pop
mov
mov
or
popf
adc
xchg
adc
add
fst
fwait
std
mov
mov
test
ficom
push
inc
push
(bad)
fwait
or
add
cmp
loop
push
adc
mov
pop
inc
movs
bound
ror
cmps
and
add
xchg
xor
or
inc
mov
mov
aaa
shr
sub
es
cmp
pop
ins
pusha
jns
cli
sub
and
test
mov
or
cdq
push
xor
fadd
mov
out
(bad)
fdiv
xor
inc
or
outs
fnstenv
dec
jbe
cld
test
imul
into
and
mov
sbb
call
cld
int
jne
pusha
popa
in
or
pmuludq
cmp
mov
call
sahf
xchg
add
ins
inc
xchg
sub
bound
push
outs
clc
mov
cmp
pop
mov
imul
lock
outs
ss
or
popf
adc
push
arpl
gs
adc
inc
and
addr16
aad
cmp
imul
cld
mov
mov
rcr
xor
addr16
xchg
push
add
popf
retf
pop
or
lock
or
fld
mov
leave
mov
add
nop
lods
push
add
jbe
add
bound
jne
add
test
sbb
jne
dec
jne
rcl
pop
xchg
push
add
sub
pop
mov
pop
dec
loope
jmp
cwde
add
pop
(bad)
push
call
stos
nop
xor
loopne
div
dec
ss
out
lahf
mov
rcr
ins
mov
sub
or
aad
(bad)
ins
imul
pop
and
sar
fwait
dec
dec
call
mov
sar
sbb
and
mov
mov
mov
push
mov
mov
jo
(bad)
dec
out
and
pop
dec
mov
nop
ins
rcr
retf
sti
sar
xchg
rcl
mov
sbb
ins
iret
pop
fcmovnb
pop
xchg
jp
enter
pop
dec
movs
mov
sbb
lds
lods
pop
jne
jo
inc
adc
fld
loope
mov
mov
fs
jg
push
fsubr
in
sbb
mov
fcom
pop
gs
outs
les
add
scas
repnz
mov
cmp
mov
adc
pushf
jg
call
(bad)
pop
cmc
push
daa
push
retf
in
jae
sahf
stc
xor
call
cmp
mov
push
mov
jle
xchg
inc
test
aam
cdq
(bad)
les
leave
dec
mov
ss
(bad)
jle
push
and
add
cmp
and
cmp
fidiv
pop
fdiv
fsub
cli
dec
or
(bad)
cmp
jmp
mov
(bad)
mov
jg
mov
int
arpl
dec
mov
or
pusha
jl
add
fwait
push
nop
xor
sbb
pop
(bad)
cli
dec
jg
mov
retf
cmp
stos
push
(bad)
idiv
(bad)
mov
cdq
or
sub
push
xchg
mov
and
xor
pop
adc
out
mov
into
lock
cmp
jne
repz
adc
mov
(bad)
push
xor
leave
mov
xor
push
cmp
arpl
cmp
gs
rol
or
push
fldln2
loopne
add
(bad)
cs
cmp
sub
call
xchg
js
ret
mov
in
jns
push
ins
and
inc
or
pop
ja
or
adc
fisubr
jl
xchg
sysret
daa
and
(bad)
retf
mov
adc
push
rol
sub
xchg
jno
repz
(bad)
jle
push
cwde
xchg
jno
shl
sub
inc
cmp
mov
pop
inc
call
mov
ja
cmp
adc
scas
add
fs
pushf
in
cmps
sahf
jle
repz
je
mov
adc
push
neg
jnp
sbb
inc
mov
retf
xchg
pop
pusha
adc
retf
adc
jb
mov
daa
xor
cmps
xor
out
dec
repz
jmp
bound
and
push
push
lds
jne
cmps
lock
adc
mov
mov
mov
das
in
jle
mov
sub
lea
(bad)
jge
xchg
cmp
inc
ja
cmc
out
jle
mov
dec
imul
dec
fs
pop
dec
jle
pop
clc
mov
xchg
aas
pop
xchg
push
ret
inc
sub
lds
imul
mov
repnz
mov
or
and
cwde
out
jmp
cwde
or
(bad)
stc
cld
xor
mov
cmp
loop
into
sub
inc
mov
imul
pop
test
pop
add
and
mov
push
outs
loope
shl
ret
mov
mov
jmp
enter
mov
and
push
pop
(bad)
leave
and
dec
fs
fcos
(bad)
cmps
test
fsub
inc
inc
ret
cwde
fld
cdq
jl
and
test
jns
pusha
mov
xlat
pop
xor
or
dec
xchg
dec
addr16
adc
aas
adc
mov
pop
mov
push
scas
cmp
dec
pop
mov
(bad)
jmp
dec
mov
xchg
ins
jno
jg
push
add
add
mov
mov
xor
sub
sbb
out
and
adc
lods
or
sbb
iret
dec
mov
mov
sbb
dec
scas
cmc
fcom
inc
ins
inc
pop
dec
pop
add
(bad)
cld
xor
xor
cmp
or
mov
jl
sub
jmp
sub
popf
dec
enter
(bad)
mov
int3
dec
out
call
stos
adc
unpcklps
aad
in
add
(bad)
xchg
loopne
and
cmp
sub
(bad)
cmps
hlt
cdq
rcr
push
test
dec
pop
in
(bad)
out
push
xchg
jae
sub
sahf
mov
inc
mov
pushf
scas
push
mov
pop
xchg
out
cmp
and
xchg
push
mov
adc
pop
movs
scas
popa
enter
sbb
and
fwait
(bad)
mov
out
nop
push
loope
sub
mov
push
or
cmc
or
fsubr
gs
xor
outs
fcmovu
dec
gs
or
sbb
push
pop
jecxz
xor
outs
rol
scas
pop
dec
ins
add
sahf
jp
pusha
fucom
retf
or
sahf
mov
in
ins
sub
shl
inc
fild
in
cld
xchg
cmp
push
not
jmp
sbb
inc
inc
mov
outs
push
and
aaa
jbe
call
ins
cmp
in
inc
mov
retf
xor
push
mov
test
arpl
cmp
jo
and
mov
pop
xor
add
pop
into
hlt
or
jle
ret
les
jae
rcl
fld
mov
aas
cmc
repz
test
cmc
je
sub
xor
je
cmp
push
cmp
fnsave
add
stos
adc
jle
cs
xchg
in
pop
pusha
fldln2
cmp
loope
call
mov
push
cwde
popa
mov
sbb
mov
xchg
pop
adc
inc
mov
arpl
mov
push
push
addr16
xor
or
and
inc
cmp
inc
mov
mov
jmp
push
adc
in
inc
adc
(bad)
mov
dec
pop
cs
push
mov
add
cmp
lock
das
mov
and
jl
out
xor
sub
mov
aad
je
xchg
(bad)
cmp
mov
imul
sbb
adc
(bad)
aas
sbb
cwde
cmp
adc
sub
in
and
jecxz
adc
mov
mov
ins
sub
cmp
xor
loopne
sub
inc
repz
pop
arpl
leave
sbb
mov
getsec
inc
jns
(bad)
mov
xor
and
stc
push
ret
mov
xchg
mov
test
xchg
loop
rep
ret
stc
les
mov
mul
outs
stos
in
imul
inc
xor
rol
stos
dec
ja
dec
push
shl
repnz
cld
cmps
sbb
and
pop
xchg
xchg
mov
(bad)
leave
mov
pop
dec
cdq
out
mov
loope
pusha
mov
or
add
pop
fs
push
fstp
sub
mov
in
aam
(bad)
rcr
or
adc
comiss
popf
sbb
jmp
xchg
jg
lock
dec
or
push
mov
nop
and
sub
int3
sub
rol
adc
shr
sbb
inc
int3
mov
cmp
mov
cmp
pop
lds
xor
cmp
xor
daa
icebp
dec
cwde
gs
mov
(bad)
lahf
lods
mov
std
jns
mov
or
dec
stc
daa
pop
sbb
add
or
jmp
and
fld
repnz
les
inc
daa
(bad)
pusha
adc
inc
arpl
clc
jg
ror
push
ins
pusha
div
add
test
inc
scas
adc
(bad)
push
dec
sti
call
das
(bad)
in
jecxz
ja
jmp
push
int3
fsin
stos
xor
xlat
stos
push
test
in
jp
dec
fnstsw
js
pusha
push
xchg
(bad)
adc
jno
mov
jl
cs
sbb
mov
movs
loope
fistp
mov
fwait
xchg
or
retf
mov
or
lods
(bad)
bound
cli
pop
rcr
add
cmp
sbb
rcl
dec
mov
pop
daa
add
inc
sub
adc
fwait
xlat
jns
in
pop
imul
sub
(bad)
sbb
sbb
push
fadd
xchg
pop
dec
push
fstp
dec
ds
das
inc
mov
mov
adc
js
scas
sub
and
dec
xor
add
cmps
jmp
addr16
pop
mov
mov
(bad)
or
mov
push
mov
cmp
imul
sti
mov
dec
or
fmul
xchg
xor
mov
xchg
(bad)
lock
lea
and
inc
icebp
jmp
hlt
clc
loope
clc
std
cmp
not
sar
clc
dec
add
in
fwait
jecxz
sub
popf
mov
scas
and
pop
inc
xchg
lods
add
pop
test
stos
das
repnz
in
out
cmc
mov
mov
stc
cmc
adc
pop
dec
out
pop
adc
sahf
leave
push
inc
jge
push
(bad)
addr16
sub
sbb
ss
cmc
mov
(bad)
stos
xchg
fld
faddp
mov
cmp
and
add
sahf
and
jmp
inc
jnp
xchg
rcr
imul
mov
push
jmp
add
out
aaa
fnsave
dec
(bad)
loope
xor
imul
clc
add
pop
fisubr
inc
jo
adc
jno
imul
xor
ins
fadd
or
cmp
jae
fisttp
xchg
push
int
enter
pop
push
push
mov
fcmovb
sbb
in
pop
push
aad
pop
dec
call
dec
mov
shl
and
and
ins
mov
rcr
sbb
fnstsw
pop
rol
repnz
lahf
sahf
jne
mov
imul
adc
jae
in
lds
mov
mov
repnz
pop
dec
push
sar
add
jb
jge
cmp
test
inc
retf
pop
mov
inc
sbb
push
xchg
mov
out
xchg
ror
ins
test
in
jb
or
xor
outs
loop
sbb
jne
sbb
jp
rcl
test
aaa
push
xchg
xchg
rcr
sbb
and
sub
xchg
sub
ret
stc
pop
bound
cmp
xchg
push
pop
les
mov
xchg
pop
and
icebp
loopne
pop
mov
xor
sub
sub
enter
std
ja
js
dec
movs
pop
scas
dec
ret
fisttp
arpl
add
or
hlt
pop
enter
ror
(bad)
sub
mov
stos
jo
out
inc
fstp
dec
sbb
jle
daa
dec
jne
inc
test
adc
dec
hlt
cmp
add
pop
jns
sahf
xor
pop
icebp
mov
jmp
mov
mov
fst
adc
ss
mov
mov
xchg
cld
in
jmp
cmc
les
add
adc
sbb
add
mov
xchg
add
inc
jbe
jbe
sub
pop
adc
int
adc
mov
mov
xor
dec
mov
fisubr
fimul
jmp
ja
psrlw
sub
gs
pushf
ror
and
xor
int
push
pop
out
das
inc
xchg
out
cmps
cmp
repz
mov
xlat
loopne
pop
arpl
lods
jmp
add
sbb
jb
bound
(bad)
jmp
cmp
aaa
enter
sub
or
mov
cmc
into
dec
xor
or
xchg
jae
add
pushf
mov
jle
sbb
movs
sbb
cmps
xchg
cmp
scas
in
mov
xchg
mov
lahf
pop
stc
push
dec
xor
(bad)
cmp
xor
jb
xor
inc
cmp
ficomp
call
out
fild
cmc
jns
into
lods
(bad)
push
or
mov
adc
test
fnstsw
or
inc
daa
xchg
pop
xchg
test
push
pop
bound
popf
scas
push
mov
ror
jo
adc
push
pop
mov
rcr
push
inc
arpl
(bad)
icebp
fwait
add
or
sti
ss
push
out
stc
jge
adc
js
outs
fst
cmp
or
pop
mov
sar
inc
xchg
dec
push
cwde
scas
inc
cmp
pop
icebp
shl
sub
mov
ror
repz
jo
sbb
cli
loopne
xor
add
jnp
pop
mov
xor
das
leave
bound
cs
xor
mov
dec
shl
mov
add
dec
adc
in
mov
(bad)
loop
cs
xchg
jg
inc
and
add
cdq
data16
jno
pop
ins
mov
test
call
sbb
xlat
mov
test
push
add
stc
mov
pop
fcomip
inc
inc
pop
xor
add
hlt
dec
inc
adc
dec
sahf
mov
xchg
inc
into
cld
pop
nop
movs
jg
ret
xlat
mov
(bad)
xor
push
(bad)
cld
dec
xor
stc
and
sbb
nop
xchg
out
mov
xchg
mov
mov
mov
or
pop
inc
mov
iret
jns
adc
cmc
shl
adc
inc
xchg
out
or
jge
pop
and
pop
xchg
mov
add
adc
and
xchg
dec
jl
xlat
fs
ins
ret
cmc
in
das
pop
lods
push
daa
jge
and
retf
push
push
xlat
js
fist
push
sub
mov
or
imul
add
in
sbb
mov
pushf
clc
add
fsubr
dec
dec
leave
repnz
fild
adc
jno
dec
enter
jns
ja
js
lea
aam
push
dec
push
repz
lock
xchg
mov
shr
ins
xor
je
inc
dec
out
mov
jnp
es
jns
daa
lea
push
hlt
dec
cmps
cmp
and
push
out
jp
into
cmp
inc
dec
add
cmps
fimul
and
pop
add
addr16
shl
sbb
js
cmp
cmp
sahf
in
jl
add
adc
pop
push
sbb
mov
shr
imul
push
je
out
nop
sbb
idiv
mov
jne
and
mov
cdq
bound
jo
dec
mov
mov
jge
jge
shl
hlt
out
sbb
cmc
test
jno
add
xor
push
stos
scas
jl
stos
push
or
adc
cmps
test
int
scas
and
in
mov
mov
ss
pop
pop
movs
inc
je
pop
retf
or
pop
or
and
loope
(bad)
adc
adc
call
sub
xchg
scas
jp
push
movs
sub
or
add
adc
push
into
pop
fld
int3
xchg
xor
push
inc
or
jne
(bad)
mov
xor
call
enter
sbb
cdq
out
retf
jne
push
xchg
pushf
pop
ja
jno
loop
jnp
or
fmul
popf
rdpmc
mov
int3
sar
push
xlat
cmp
fwait
inc
hlt
add
sub
xchg
cmp
or
int
vpsllq
mul
fadd
sub
xor
xchg
test
test
out
pushf
xchg
sti
sahf
jp
push
aad
adc
cmp
xchg
push
inc
dec
out
aaa
test
mov
hlt
cld
dec
xchg
ret
xchg
push
cmp
mov
jl
add
iret
mov
mov
and
pop
cdq
adc
test
jno
cmp
loope
dec
in
jmp
mov
test
hlt
or
lds
add
das
dec
jb
cs
xchg
and
jecxz
ins
xchg
mov
mov
ins
jae
xchg
iret
adc
gs
xchg
loope
xchg
jb
mov
scas
call
jle
xchg
inc
pop
or
loop
scas
jmp
adc
sbb
sbb
add
popf
bound
jbe
xchg
sbb
add
pop
xor
into
jno
mov
inc
push
jp
mov
icebp
(bad)
retf
lahf
dec
outs
or
push
jae
aas
ror
ror
(bad)
icebp
mov
mov
lea
das
ja
pop
retf
sbb
push
daa
imul
test
scas
seto
jb
mov
scas
xchg
and
cwde
aas
inc
(bad)
pop
dec
sbb
les
cmp
push
xor
jmp
jb
mov
aas
mov
add
es
dec
ret
outs
dec
dec
stos
out
pop
test
add
sbb
push
mov
ja
lea
jg
scas
push
or
cli
in
mov
sti
stos
cmc
repz
addr16
ss
retf
sar
cdq
mov
pop
mov
mov
das
shr
mov
shl
pop
cmp
jno
pop
adc
inc
adc
(bad)
xor
adc
ret
ret
pop
call
out
(bad)
mov
cmps
mov
push
fcom
out
dec
jmp
retf
mov
hlt
in
fistp
ins
(bad)
jl
sub
pop
jmp
call
push
mov
pop
jl
int
xor
mov
add
push
dec
fbld
scas
sbb
cmp
mov
push
jg
cmp
fisubr
ja
loopne
in
je
(bad)
push
inc
int3
push
or
test
jmp
sti
pop
mov
mov
jns
rcl
jp
cli
jl
adc
pop
push
cmp
xchg
inc
fwait
push
adc
inc
shl
push
mov
adc
aad
pop
dec
or
push
xchg
xor
push
mov
xchg
cmps
xor
sub
call
add
mov
pusha
sbb
xor
in
and
aad
add
jl
hlt
loopne
aad
lock
jnp
aam
adc
push
cmc
outs
test
sbb
mov
mov
out
gs
xchg
out
mov
dec
or
loop
add
xchg
and
adc
xchg
out
cli
ins
add
pushf
jg
jnp
mov
push
sar
mov
mov
pop
push
push
les
mov
xor
push
es
mov
cs
mov
xchg
inc
pop
(bad)
movs
or
lock
lods
inc
enter
mov
fdivr
clc
lods
out
out
in
mov
pop
(bad)
push
mov
sub
lahf
(bad)
clc
(bad)
jp
xlat
dec
mov
stc
push
mov
xchg
shr
jmp
aam
xor
mov
rcl
inc
ret
jno
or
cmp
mov
sub
in
mov
aas
cmp
mov
mov
mov
imul
cli
sub
or
add
adc
out
test
dec
push
mov
and
retf
mov
jbe
adc
mov
rol
push
enter
addr16
sbb
push
ss
mov
call
xchg
sar
test
arpl
out
icebp
mov
jl
sbb
inc
add
retf
into
sbb
inc
retf
and
sbb
stc
add
test
in
loop
or
xor
cmp
add
shl
fisttp
xchg
in
cmovb
mov
pop
sbb
imul
sub
jmp
movs
cmps
jmp
frstor
fnstsw
xlat
sub
fs
sar
cmc
cmp
sbb
vmovups
jmp
call
mov
outs
mov
sbb
and
xor
sahf
sub
dec
test
pop
mov
sbb
(bad)
jnp
neg
hlt
mul
adc
mov
(bad)
mov
in
push
push
mov
les
popa
mov
fisub
cld
xchg
push
imul
push
adc
add
cs
sub
int3
popa
(bad)
mov
mov
(bad)
pop
inc
add
ja
cmp
xchg
mov
push
arpl
rol
adc
and
mov
dec
pop
ins
lods
(bad)
repnz
(bad)
scas
pop
push
cli
jmp
push
addr16
inc
adc
pop
loope
mov
fsubr
daa
cdq
jg
cmp
jmp
std
jae
jnp
(bad)
lods
arpl
stc
mov
sub
ins
cwde
je
xchg
aaa
loop
push
aad
js
movs
xor
dec
mov
retf
xor
(bad)
xchg
(bad)
cmps
mov
and
cwde
lods
leave
cmp
hlt
es
ja
inc
sbb
sbb
(bad)
iret
shl
adc
jno
mov
adc
push
data16
scas
xchg
pusha
fsubr
test
xor
jg
std
out
mov
mov
or
xchg
mov
ficom
and
push
fbstp
enter
mov
or
pop
xchg
sub
add
xchg
xchg
fbstp
(bad)
pop
sbb
add
ja
xchg
out
out
les
out
cmp
or
ja
push
(bad)
push
int
icebp
in
pop
xchg
adc
mov
imul
mov
je
mov
jns
push
add
ja
nop
inc
adc
sahf
mov
dec
int
ja
jne
jo
pop
xchg
pusha
mov
inc
add
cmp
mov
push
fs
test
repz
sbb
and
dec
stos
mov
sbb
or
push
mov
mov
jbe
adc
nop
ja
stc
scas
pop
das
sahf
adc
push
jns
jmp
mov
adc
xor
into
sub
cwde
call
add
lock
sbb
es
and
xor
xor
adc
imul
les
test
mov
not
pop
sbb
push
inc
pop
test
dec
push
mov
jno
outs
cwde
jmp
jle
pop
movs
dec
inc
(bad)
out
jmp
ret
aas
out
xchg
lea
imul
push
in
das
addr16
xor
jp
lods
inc
aaa
or
test
push
movs
xor
dec
scas
push
dec
lahf
inc
pop
fs
out
shr
scas
mov
cdq
cmps
(bad)
xchg
out
ss
inc
imul
leave
int
fs
push
das
or
loope
or
adc
(bad)
in
mov
mov
cmp
mov
mov
sbb
lea
mov
fadd
adc
bound
cld
and
fwait
das
jb
mov
(bad)
popf
aaa
xchg
cmp
xor
jp
sub
loopne
ins
jmp
xor
test
test
cwde
adc
adc
(bad)
aas
loop
loopne
and
(bad)
fsub
mov
sbb
cs
mov
jne
cld
mov
xor
enter
pop
jmp
movs
dec
outs
shl
xor
or
dec
mov
pop
fwait
lods
mov
mov
mov
cs
jns
out
adc
dec
add
cmp
pop
inc
in
cmp
dec
add
ret
clc
call
ss
pop
cdq
sbb
push
fstp
inc
cs
mov
inc
jmp
or
repnz
pop
add
push
ins
mov
movs
xor
shl
adc
xchg
(bad)
cmp
and
mov
(bad)
xchg
pusha
test
mov
mov
push
cmc
jmp
sbb
xchg
(bad)
xor
loope
mov
jb
xchg
add
aad
lahf
and
mov
push
cmp
ins
xlat
stos
mov
jae
cmps
cmps
cmps
movs
adc
mov
std
mov
jno
cdq
and
pop
xor
mov
jmp
scas
cmps
xor
jne
fs
(bad)
rcl
pop
pop
inc
nop
mov
cli
std
pop
xor
cmpps
xchg
movs
fisub
mov
push
shr
mov
addr16
sti
dec
test
call
jg
mov
pop
sti
lds
scas
aad
mov
hlt
jnp
xchg
push
mov
jg
out
aaa
fcomp
mov
push
test
stos
sahf
xor
test
lods
mov
xchg
fistp
or
(bad)
repnz
adc
jmp
xchg
xchg
mov
cmps
sub
nop
scas
in
jns
xchg
aam
and
xor
sbb
add
xor
and
mov
xor
mov
cwde
mov
fld
sti
adc
les
in
push
aam
movs
jno
stos
cdq
test
push
shl
pushf
sub
mov
jne
cmp
or
mov
inc
inc
into
ss
popa
mov
add
sahf
cmp
test
jmp
(bad)
fwait
sahf
sub
mov
jmp
xor
les
pop
xor
dec
dec
push
sbb
in
mov
pop
loop
or
pushf
mov
xchg
xor
or
shl
xchg
jp
fnsave
pop
push
loope
and
sti
push
stos
call
xor
clc
les
lea
push
data16
test
jp
out
cmp
bound
or
cdq
mov
xlat
out
retf
(bad)
sbb
dec
(bad)
fs
add
sbb
ss
jbe
sbb
sub
sub
je
sbb
out
or
(bad)
jge
outs
pop
scas
rol
cmp
call
jo
sub
sbb
out
push
adc
shr
out
es
adc
stc
(bad)
mov
test
loop
or
repnz
sub
and
daa
sub
cmp
push
mov
movs
dec
mov
(bad)
hlt
inc
aam
jbe
jns
jmp
xchg
inc
cmp
push
lds
fadd
dec
aaa
not
loopne
xchg
and
add
jg
pmuludq
inc
mov
mov
cmp
dec
iret
test
dec
inc
push
xchg
aam
mov
and
bound
stos
push
mov
xchg
adc
ror
pop
int
mov
mov
xor
mov
aam
pop
or
inc
(bad)
repz
mov
adc
xor
icebp
ins
jbe
cmp
mov
dec
xchg
in
sub
push
gs
fst
fnsave
popa
pop
hlt
xchg
call
jns
sub
sbb
jo
mov
sub
popa
push
lahf
or
aam
gs
aas
imul
rol
(bad)
xchg
xchg
out
jne
jne
gs
add
out
sbb
cmp
jb
(bad)
fsubr
mov
ror
or
aas
(bad)
cli
mov
(bad)
cmps
aam
sbb
and
addr16
lods
addr16
addr16
xchg
cmp
mov
fwait
es
xchg
loope
mov
daa
pushf
pop
sub
push
sub
lea
in
mov
loopne
fisubr
xchg
adc
pushf
fnstsw
stos
fmul
in
jmp
inc
outs
inc
xchg
xor
adc
sub
aad
enter
imul
das
pop
faddp
iret
lods
es
mov
gs
clc
out
cmp
das
nop
dec
jne
sbb
out
push
and
cmp
inc
mov
mov
aaa
rcl
cmp
outs
mov
xchg
cld
rol
cmp
sar
and
rol
(bad)
cdq
sub
enter
xchg
push
xor
aam
xor
lea
fcom
fisubr
fcomi
call
sub
mov
cmp
retf
mov
push
mov
jbe
ins
jmp
ret
leave
and
xchg
call
int3
repz
lods
or
int
dec
retf
(bad)
iret
icebp
dec
fdiv
push
mov
(bad)
pop
xor
add
ins
pop
imul
mov
and
jno
enter
mov
cmps
loop
test
rcl
cmp
jmp
sbb
xor
pop
imul
push
cmp
jmp
cmp
xor
movs
test
int3
inc
jmp
(bad)
dec
aad
fidiv
fldenv
sub
lods
cmp
je
stos
ins
mov
inc
test
add
movs
shl
jge
ja
or
inc
dec
fwait
mov
cmp
mov
sbb
cmp
ss
enter
sub
mov
das
jno
mov
jl
mov
xor
stos
jp
push
dec
sbb
fstp
test
stos
sub
cmps
jns
in
sub
test
sbb
inc
in
(bad)
push
inc
shr
sub
mov
or
add
ret
fmul
call
jge
call
repnz
movs
das
xor
sbb
mov
add
push
mov
sub
mov
sbb
xor
xchg
fisub
lea
loopne
aas
lea
pop
outs
xor
pop
dec
jmp
je
cmp
mov
adc
sub
mov
dec
loopne
das
and
repz
nop
jbe
call
shl
cli
mov
or
xchg
dec
add
in
push
and
adc
xor
fs
and
xchg
mov
daa
int3
add
push
sti
pop
and
out
jb
fadd
dec
jo
sbb
mov
adc
lods
test
shr
push
ss
sub
jae
inc
add
dec
iret
or
test
out
loopne
mov
or
push
mov
mov
loopne
jno
push
(bad)
mov
mov
cmp
xchg
xor
stos
sbb
(bad)
push
ret
(bad)
push
std
cmc
outs
shl
inc
or
push
sbb
cmp
or
retf
movs
fwait
movs
jp
loop
ds
scas
xor
or
sub
jmp
xor
fiadd
aaa
dec
inc
rcr
push
sub
cmps
and
repz
xchg
add
sti
adc
inc
and
xor
sbb
add
sbb
fld
jge
add
(bad)
adc
push
push
push
push
es
jmp
ds
test
int
mov
mov
mov
hlt
ficom
rcr
cmp
sub
ror
clc
je
imul
pop
nop
mov
ret
neg
push
jl
rol
ins
adc
rcpps
stos
or
sbb
leave
xor
sub
in
in
inc
cs
cmp
jbe
pusha
cmp
adc
jne
add
ja
lahf
(bad)
lock
icebp
mov
std
mov
int
mov
arpl
in
shl
shr
adc
inc
loop
push
cmc
push
sub
out
loop
ret
stc
test
popf
stos
fcmovne
inc
push
iret
or
jo
pop
cmp
jp
pop
sbb
pop
inc
adc
dec
sub
inc
lahf
dec
or
mov
xchg
add
jle
shrd
xor
int
pop
mov
jmp
push
mov
in
movs
add
fwait
imul
cmp
jecxz
int3
(bad)
cmp
dec
jbe
mov
int
cmp
es
ret
aas
jnp
bound
add
shl
sub
mov
movs
mov
loope
lahf
add
sti
push
ja
mov
aad
sti
(bad)
aam
mov
dec
cmp
mov
mov
out
shl
imul
jnp
mov
mov
mov
stc
in
xor
push
sbb
repnz
dec
add
and
fnstsw
or
mov
pop
mul
cmp
cli
cmp
sbb
mov
pop
or
cmps
sbb
mov
sub
adc
je
mov
mov
aam
arpl
icebp
pop
cmc
fs
fstp
in
jmp
push
adc
int
xor
test
jecxz
repz
jne
xchg
sahf
stos
push
int3
sub
pop
and
(bad)
xor
(bad)
mov
movs
mov
aas
mov
test
je
scas
cmps
lea
inc
pop
mov
int3
hlt
cmps
out
sbb
aad
cmp
xor
rcl
out
jae
adc
outs
addr16
jae
loop
sti
xor
stc
aam
das
pushf
mov
adc
ins
sbb
xor
pop
cmp
std
into
mov
aaa
mov
ror
inc
sbb
(bad)
cbw
into
pop
int
xor
fs
pushf
xchg
out
ret
repz
cmc
sbb
mov
sub
push
lods
scas
shl
sahf
sti
adc
xchg
test
mov
adc
xor
jo
pop
bound
mov
mov
test
dec
fisttp
dec
sbb
jne
rcr
out
pop
xchg
dec
sub
aam
ins
rol
ficom
repnz
shr
fldcw
mov
push
xchg
aaa
xchg
pop
pop
(bad)
pop
lds
sahf
lea
je
dec
js
xchg
lock
icebp
xor
pop
rol
aaa
adc
sub
scas
push
popa
push
cmp
xor
lahf
mov
xchg
inc
push
test
retf
icebp
lds
inc
sbb
sub
adc
mov
and
mov
pusha
sub
pop
stc
shl
sub
inc
scas
xor
and
rcl
pop
iret
ficom
inc
sbb
lods
jg
popf
pop
es
hlt
lds
mul
add
pusha
dec
lds
mov
js
in
mov
or
ffree
jnp
sbb
pop
mov
das
scas
lods
sahf
push
loope
jns
jl
xchg
mov
sub
sub
inc
mov
xor
out
sbb
and
shl
fst
(bad)
test
bound
fld
mov
sub
rol
inc
dec
test
lahf
sbb
retf
stc
icebp
retf
cmc
outs
xlat
mov
(bad)
mov
movs
add
and
mov
xchg
add
mov
jno
mov
aam
mov
push
or
test
mov
call
or
dec
bound
and
jnp
lea
icebp
int
xor
clc
xchg
mov
enter
xor
mov
fcmove
in
hlt
jecxz
je
jnp
es
in
fwait
lahf
shr
pusha
enter
ret
mov
jp
mov
dec
dec
imul
imul
inc
mov
jbe
ss
and
push
jmp
stos
inc
(bad)
arpl
and
jae
and
dec
stos
ds
adc
sub
xor
sbb
ret
xor
dec
je
cwde
mov
inc
ins
lea
test
dec
cli
sub
push
push
mov
(bad)
xchg
test
inc
add
test
cld
and
jmp
dec
and
sub
pusha
add
(bad)
lods
int
cli
int3
mov
mov
retf
and
jl
mov
jae
inc
pop
sti
pusha
retf
imul
pusha
hlt
adc
sub
sbb
lods
cmps
jb
clc
ja
(bad)
(bad)
or
sar
ins
jmp
cmc
pop
pusha
jg
mov
and
loop
dec
addr16
(bad)
fild
xchg
scas
cmps
mov
rcl
sub
and
clc
fisttp
or
adc
pop
fwait
(bad)
push
and
push
pop
aaa
fst
call
popf
xor
adc
inc
lds
sub
push
jne
push
xchg
xchg
mov
std
or
data16
aad
jbe
repnz
dec
jmp
jle
loop
adc
sub
inc
lahf
ds
addr16
xor
jge
inc
xor
push
pop
jae
popf
push
mov
mov
sub
stos
cmp
iret
into
retf
jo
cmp
sub
jae
arpl
xchg
cmp
sbb
ds
lds
lds
sti
fcmovnu
pop
mov
cmp
sub
ins
inc
add
jmp
mov
cwde
arpl
(bad)
repz
into
mov
jns
sub
mov
jb
adc
imul
out
lods
repz
fcmovnu
pop
and
out
lock
push
ins
inc
jnp
adc
test
adc
imul
mov
or
lods
xor
(bad)
xor
or
hlt
dec
and
mov
out
jmp
pusha
mov
mov
aam
jo
in
mov
or
gs
aad
fisub
pop
inc
out
cmp
(bad)
cmp
cli
out
out
adc
inc
sub
cmp
rcl
inc
(bad)
jmp
inc
sar
mov
pop
imul
in
ins
pop
add
shl
out
add
jle
mov
jb
pop
push
sbb
mov
pop
xchg
dec
les
nop
cli
inc
fadd
xchg
pop
push
jle
pushf
sub
imul
push
dec
mov
pop
lods
and
push
ds
push
fsub
xor
or
pop
(bad)
loop
fistp
test
jmp
cld
enter
fnstsw
(bad)
jecxz
pop
(bad)
retf
pop
rol
adc
shr
mov
mov
fst
std
inc
jns
pop
and
jnp
sahf
scas
pop
adc
inc
les
inc
xchg
(bad)
(bad)
(bad)
add
cmp
shr
test
sub
retf
sub
add
pop
(bad)
dec
xor
xor
xor
dec
call
shr
inc
fld
repz
ins
dec
test
jno
add
mov
movs
sbb
mov
fldenv
push
in
mov
mov
jbe
sbb
cdq
sti
in
jg
sbb
mov
loope
mov
sub
pop
mov
mov
cmps
out
jmp
xor
adc
inc
cmp
sbb
inc
or
xor
cli
outs
jge
adc
dec
xchg
imul
jmp
int3
call
mov
jns
adc
movs
cmp
mov
and
cmp
pushf
or
nop
icebp
in
int
dec
mov
dec
mov
pop
mov
cwde
sub
sbb
xchg
(bad)
mov
dec
test
pop
clc
xor
ficomp
xchg
outs
inc
bound
push
into
pusha
arpl
ins
sbb
(bad)
arpl
pop
test
inc
lods
int3
outs
sbb
dec
mov
sbb
dec
out
lods
pop
mov
dec
rcl
sbb
mov
dec
mov
test
imul
ss
or
cmp
jmp
inc
jle
movs
and
xor
rcr
sti
addr16
fwait
test
shl
add
add
push
(bad)
add
rcl
inc
and
xchg
inc
aaa
xor
js
scas
sbb
pop
scas
adc
mov
cmps
movs
enter
xchg
or
push
test
cmps
repz
jbe
inc
clc
inc
ins
in
pushf
lds
mov
xlat
mov
or
(bad)
cmp
inc
mov
dec
add
add
xor
inc
jge
xchg
push
push
std
push
and
stos
inc
aam
pushf
add
and
and
hlt
xchg
(bad)
sahf
sbb
fcomp
pop
and
imul
(bad)
or
push
cmc
mov
std
leave
and
mov
dec
add
sbb
nop
sete
stos
mov
into
push
jmp
movs
push
dec
out
dec
pop
(bad)
xor
cs
jnp
scas
(bad)
sbb
mov
cdq
sbb
or
and
leave
jno
jns
mov
push
mov
mov
dec
mov
mov
mov
pop
cld
lea
pop
aaa
pop
jg
popf
cmp
mov
inc
push
xchg
fnstsw
std
(bad)
out
cmp
push
jle
fnsave
and
repnz
xchg
shl
(bad)
xor
cs
mov
rcr
call
inc
imul
in
unpckhps
ins
xor
push
(bad)
or
xor
es
jns
add
push
sub
and
ds
stos
call
cwde
rcl
retf
and
push
cld
mov
lahf
(bad)
loope
jmp
and
cld
outs
xchg
push
jl
jae
cmp
int3
pop
pop
outs
mov
jmp
pop
jne
shrd
and
sbb
cmc
pop
inc
jl
repz
das
pop
mov
cmps
and
xor
sbb
mov
mov
sbb
jmp
and
fcomp
ds
dec
cdq
jno
fcmovne
sar
cmc
and
ret
mov
repnz
sbb
daa
pop
push
hlt
outs
adc
and
cmp
add
xchg
cwde
jecxz
shr
test
adc
push
adc
mov
or
inc
loop
jne
lds
sbb
stc
lds
jae
dec
pusha
call
imul
sbb
out
shr
xchg
cwde
inc
sub
pop
sbb
mov
loope
loope
and
fistp
xchg
cmps
es
xor
sub
cld
(bad)
in
neg
xchg
je
pop
pop
leave
sub
inc
mov
mov
call
lods
test
add
scas
and
fnstenv
or
repnz
and
inc
xor
ja
xor
in
call
adc
inc
cmc
push
enter
(bad)
iret
cld
js
dec
pop
jecxz
inc
test
mov
fiadd
inc
jge
push
mov
cmp
mov
clc
je
es
pop
push
jne
jecxz
aam
adc
adc
push
stos
and
fwait
out
std
es
inc
adc
icebp
addr16
call
rcl
(bad)
cmp
add
(bad)
shl
test
cmp
pop
add
mov
stos
call
mov
aad
pop
popf
cmp
das
add
arpl
icebp
xchg
jnp
bound
rcr
xchg
inc
pusha
or
inc
jmp
push
int
dec
loopne
pop
add
jne
xchg
test
add
pop
or
adc
das
push
xor
push
sbb
clc
test
icebp
mov
or
out
mov
es
xchg
sub
add
ins
ficomp
pop
pop
out
and
push
arpl
ins
push
mov
(bad)
xchg
movs
mov
pop
and
ret
cmp
dec
adc
mov
sbb
lods
inc
fisttp
or
fwait
dec
ret
int3
fadd
or
push
aad
mov
std
pusha
ret
cmps
or
push
jae
das
(bad)
out
sub
xchg
adc
mov
fdiv
aad
sti
sar
cld
ret
sub
dec
out
cdq
mov
cmp
dec
in
cs
test
(bad)
dec
ror
or
outs
retf
sbb
and
pop
stc
cmp
bound
in
cwde
mov
dec
aam
dec
adc
retf
fucomip
sub
cmp
sbb
jno
jae
mov
pop
icebp
mov
ins
jns
rcl
loope
or
sbb
push
sub
push
cmps
sbb
and
push
ins
jmp
aaa
mov
fstp
push
mov
fsubr
(bad)
and
inc
pop
stos
push
in
xchg
imul
stos
jns
bound
cmps
jnp
ins
push
mov
fst
retf
loope
push
adc
mov
lods
xor
pop
or
inc
jecxz
cmp
jno
push
mov
stc
iret
and
xchg
nop
loopne
movs
or
lahf
mov
imul
add
mov
dec
stc
sub
cld
dec
pop
and
(bad)
fnsave
loopne
or
cli
popf
push
popa
rcr
sbb
lock
icebp
cmc
xlat
mov
ins
clc
stos
fwait
or
test
arpl
(bad)
xor
adc
test
adc
add
(bad)
std
ins
xchg
push
enter
push
out
addr16
sbb
pop
xor
cmp
jne
cmp
call
stos
mov
sbb
int
cmp
mov
inc
jb
xchg
mov
mov
and
popaw
xchg
ins
imul
jae
je
fsub
push
test
je
jg
sub
lock
push
(bad)
push
call
add
cdq
repz
cmc
cld
dec
sbb
dec
xor
and
stos
les
mov
sub
sbb
cdq
xor
in
stos
ret
jl
pop
in
or
adc
adc
sar
test
jno
or
pop
xchg
and
stc
pusha
cmc
loop
in
mov
xchg
cmp
ror
xchg
xchg
mov
test
out
dec
pusha
movs
inc
cmps
mov
imul
cmp
xor
or
mov
push
nop
jb
(bad)
aam
push
xchg
call
add
jnp
xor
jnp
adc
pusha
cmp
popa
pop
std
sbb
test
mov
mov
jge
arpl
(bad)
loope
add
xchg
mul
js
ret
daa
cmps
sar
xor
ret
pop
neg
ficomp
aad
sub
stos
lock
push
xchg
leave
xchg
adc
daa
outs
dec
aaa
sbb
or
push
inc
fs
(bad)
data16
and
dec
ret
ret
or
push
or
nop
cli
mov
mov
push
stc
or
int3
mov
push
pop
stc
mov
and
sti
add
mov
dec
jmp
cmps
ds
dec
push
ja
and
arpl
cmp
inc
mov
adc
mov
mov
cmc
dec
pop
fisub
out
xchg
add
sbb
cmc
push
shr
push
push
or
and
outs
mov
daa
jecxz
mov
ins
pop
xchg
fadd
pusha
adc
repnz
cmp
(bad)
xchg
std
and
fcmovbe
push
fnsave
sahf
popf
test
in
sbb
jmp
in
jle
(bad)
stos
sub
sbb
and
pop
pop
and
mov
popf
das
neg
jge
inc
movs
push
dec
jle
pushf
ins
cmc
in
repnz
pop
mov
test
icebp
jle
mov
fcomp
push
xchg
aam
sub
adc
leave
mov
inc
jg
aad
add
mov
ins
pop
(bad)
xchg
call
es
test
mov
(bad)
cmp
fwait
sbb
inc
adc
fild
mov
push
add
push
(bad)
sub
hlt
push
inc
adc
xchg
cmps
repnz
sbb
retf
fs
loope
bound
(bad)
out
mov
mov
fcmove
ror
leave
xor
mov
scas
or
fnstenv
and
pop
(bad)
and
stc
shr
mov
lea
adc
cwde
mov
push
retf
push
pop
fisubr
dec
out
xor
aad
enter
dec
sub
aad
adc
in
pop
add
or
jns
nop
or
cwde
fidivr
add
mov
cmp
adc
out
in
iret
sbb
daa
xor
je
lods
jecxz
in
retf
jge
out
les
dec
sub
sub
mov
push
fiadd
dec
repz
imul
or
push
rol
loopne
xor
(bad)
sub
mov
lahf
cmps
mov
in
pop
and
(bad)
mov
inc
push
jo
int
pop
xor
call
movs
xchg
dec
jmp
sbb
jo
(bad)
div
push
(bad)
retf
pushf
(bad)
test
push
hlt
xor
(bad)
adc
out
and
push
adc
fimul
cmp
adc
(bad)
sbb
pop
out
xchg
lods
push
lods
inc
pop
sub
add
nop
pop
scas
or
push
mov
xchg
iret
test
jo
mov
mov
cmps
adc
xchg
lahf
sti
pop
loope
in
ins
stc
mov
mov
jae
dec
call
cmp
enter
mov
lahf
je
xlat
dec
fild
xchg
sub
hlt
mov
icebp
in
jbe
test
mov
aad
test
and
pop
shl
aad
ins
(bad)
mov
add
xchg
movs
imul
sub
sbb
xchg
sbb
push
ds
push
jecxz
jecxz
ret
push
cwde
cmp
dec
or
mov
cmc
imul
lahf
xchg
mov
mov
and
mov
push
cwde
(bad)
repz
mov
dec
lods
xchg
xor
pusha
jmp
mov
adc
jmp
(bad)
out
ds
mov
jg
mov
les
mov
(bad)
inc
pusha
xchg
cwde
and
loopne
bound
or
adc
add
xor
(bad)
int3
sahf
ret
test
out
and
mov
mov
out
xchg
das
ror
pop
aam
cwde
lahf
mov
mov
xor
in
daa
out
jmp
push
jnp
dec
cwde
ret
and
cmps
pop
add
and
xchg
inc
repnz
std
cld
inc
movs
cs
nop
out
cmps
pop
int
cmp
lods
dec
scas
enter
fucomip
xchg
int3
and
out
pop
mov
sbb
jecxz
lock
cmp
int3
and
enter
mov
sub
jl
mov
pop
std
cmp
xor
fadd
push
rcl
pop
loope
fdiv
xchg
cmp
(bad)
sub
retf
cs
retf
dec
stos
loopne
scas
push
mov
sub
test
movs
frstor
sub
stos
fmul
loopne
cmc
ins
cli
retf
jb
adc
push
add
adc
cmc
inc
xor
not
mov
test
rol
push
call
xlat
mov
jnp
fistp
mov
imul
fld
cmc
mov
jnp
stos
pop
xchg
cmp
aas
inc
jbe
jo
mov
xchg
sar
adc
lods
aad
inc
xchg
daa
das
inc
xlat
and
dec
cwde
dec
pop
and
ror
aaa
popa
pusha
in
out
push
dec
cmp
or
fisttp
xor
stc
pop
jo
fidiv
lods
mov
enter
call
pop
adc
pop
fdiv
or
loop
in
sahf
xchg
fmul
sti
call
lock
std
push
stos
fs
stos
(bad)
sub
sub
mov
sbb
cmp
dec
mov
inc
repnz
out
pop
mov
or
out
xchg
int
loop
mov
push
push
add
rep
ret
mov
inc
das
pop
and
dec
jl
dec
loop
shl
ror
jg
shl
add
sbb
mov
mov
add
pop
lahf
sbb
cli
sbb
mov
sbb
or
pop
push
push
fdiv
dec
stc
outs
cmp
pop
aas
rcl
rol
mov
mov
repnz
xchg
mov
cmp
mov
sub
or
pop
jg
addr16
mov
adc
xor
and
ror
sbb
dec
bound
inc
mov
add
mov
call
daa
mov
jmp
dec
arpl
add
into
stos
test
outs
sti
outs
fwait
(bad)
adc
aaa
push
jge
pop
lahf
fisttp
aas
jle
inc
and
ror
add
ds
xchg
stc
scas
jbe
push
adc
arpl
dec
adc
sub
xchg
enter
out
xchg
xor
or
jl
adc
arpl
adc
jl
cld
fisub
cld
push
aaa
dec
data16
sbb
popa
jnp
adc
les
push
add
push
cdq
push
jmp
mov
sub
adc
xchg
dec
aam
out
add
inc
ret
pop
jae
xchg
sbb
mul
and
cmp
fwait
stos
je
xchg
cmps
sahf
cmp
jecxz
adc
(bad)
pop
inc
(bad)
xchg
into
cmp
jmp
jge
fcmovne
jae
into
jo
cld
jbe
aam
lds
cmc
outs
call
repz
(bad)
mov
jecxz
fwait
or
or
addr16
sub
fucomi
cli
movups
mov
fsubr
retf
add
or
jmp
xchg
jmp
or
push
mov
pusha
xchg
sbb
inc
aam
mov
mov
jne
adc
sub
fisub
push
add
fisttp
repnz
xor
ins
popa
jecxz
cmp
sub
cmp
xor
inc
mov
imul
sti
or
je
push
jb
jo
sub
nop
and
add
push
adc
cmp
pusha
xchg
jmp
add
imul
cmp
or
pushf
inc
adc
adc
arpl
inc
idiv
mov
mov
pop
ret
xchg
fwait
test
xor
cmp
jl
ins
or
add
push
mov
or
sbb
addr16
jmp
or
aas
xchg
cmps
int3
xchg
add
sub
push
or
mov
and
jmp
fst
ins
inc
loope
out
jnp
mov
addr16
leave
mov
jmp
hlt
cmc
add
in
in
inc
gs
loope
or
pusha
repnz
rol
retf
xchg
(bad)
or
das
mov
ja
pop
(bad)
dec
inc
loopne
nop
add
push
inc
xchg
pop
inc
push
ds
push
retf
iret
lods
popa
push
mov
mov
retf
push
retf
push
pop
lods
cmp
repz
jne
adc
add
out
xchg
push
pusha
call
and
repz
adc
jecxz
outs
not
mov
xlat
ins
sbb
nop
mov
and
or
call
mul
xchg
and
inc
mov
ret
mov
cmp
(bad)
add
popa
and
inc
and
sub
ins
(bad)
imul
rcr
sub
cdq
div
ret
xor
ja
iret
xchg
leave
inc
cmp
jmp
mov
xor
std
jo
jle
cmp
cmp
xchg
ins
dec
cmp
in
gs
in
cmp
inc
sahf
push
inc
mov
fmul
sti
shl
xchg
add
(bad)
call
ret
rcr
xor
dec
push
pop
cmp
xlat
sub
adc
stos
test
pop
mov
into
fwait
sbb
pop
inc
xchg
jg
inc
movaps
or
sahf
adc
adc
xchg
mov
push
in
sbb
fsub
not
ror
mov
xlat
pop
loop
test
clc
setne
das
std
fistp
ins
jnp
dec
mov
es
push
dec
neg
shr
or
jo
adc
push
or
mov
jmp
pop
mov
mov
push
idiv
push
leave
leave
xor
and
(bad)
out
adc
call
scas
dec
pop
push
xchg
leave
mov
mov
mov
ins
jl
mov
fiadd
in
int
std
ds
or
jns
out
(bad)
pop
pop
pushf
inc
outs
stos
aam
popf
loopne
mov
ins
pusha
push
enter
jo
mov
mov
cdq
mov
pop
pop
inc
in
addr16
push
dec
scas
fwait
inc
mov
push
in
sub
or
(bad)
ss
jl
and
js
test
cwde
popf
adc
xchg
test
cmp
and
and
cwde
mov
add
lods
push
pop
stos
movs
pop
pop
out
dec
jo
mov
sbb
mov
movs
add
xchg
sbb
pop
and
sbb
(bad)
shl
cdq
enter
add
dec
sbb
push
push
ret
int
mov
jg
es
mov
push
out
inc
xchg
jp
mov
push
add
out
idiv
jb
(bad)
daa
fdiv
cli
repnz
cmps
and
mov
inc
sbb
daa
dec
jmp
leave
add
mov
or
add
push
adc
shr
add
int
in
imul
fsub
inc
add
jmp
test
or
cmp
out
enter
and
mov
loopne
and
jge
das
jl
ins
dec
je
fsubr
push
push
or
es
and
jge
popf
jmp
int3
jle
jbe
jecxz
stos
rol
cmp
daa
cmp
ror
pusha
in
out
cmp
cld
xchg
inc
aam
pop
aas
(bad)
fimul
push
(bad)
pop
mov
sub
xor
push
icebp
push
xchg
jo
shl
mov
ss
jns
push
xchg
mov
inc
imul
push
pop
xor
ret
pop
adc
sbb
dec
pop
scas
or
mov
pop
cmp
push
xor
mov
dec
jns
mov
add
scas
lahf
cmp
mov
aas
push
lods
ss
sub
mov
cdq
fmul
mov
add
jo
fs
push
mov
mov
and
int3
mov
jg
out
clc
outs
xchg
or
mov
repz
arpl
push
push
cmps
mov
jbe
mov
xor
ja
jbe
sahf
or
lock
cs
pop
ficomp
mov
jnp
mov
push
movs
loop
test
ror
(bad)
std
add
sahf
test
jg
jmp
and
stos
dec
cmps
int
or
outs
xchg
lods
mov
fcom
push
and
xchg
je
fild
or
sbb
neg
dec
pop
dec
mov
push
mov
mov
lods
mov
sbb
sub
mov
(bad)
cmp
into
sahf
sub
clc
ds
retf
lahf
stc
xor
movs
sub
ficomp
int3
dec
sti
gs
add
push
repz
or
iret
jnp
pop
cmc
(bad)
pop
ret
movs
dec
in
inc
ret
xchg
jae
(bad)
loopne
inc
fstp
mov
ret
xor
xor
stc
mov
push
into
popa
xchg
rol
fidiv
lock
fild
and
push
daa
dec
std
dec
cmp
inc
cld
jmp
lds
or
adc
loop
int3
ret
ds
shr
mov
sbb
sbb
shl
inc
and
(bad)
(bad)
shl
push
mov
addr16
dec
push
mov
adc
out
mov
cmp
mov
mov
and
and
inc
data16
aad
cmc
(bad)
ror
sbb
lds
(bad)
inc
in
or
dec
mov
jnp
push
add
mov
shl
xchg
inc
dec
inc
add
neg
or
xchg
ins
hlt
pop
loopne
nop
pop
jbe
mov
out
and
inc
stos
mov
je
je
dec
dec
cmp
(bad)
push
cmp
fcomp
(bad)
sahf
push
xchg
mov
push
and
or
dec
into
jnp
add
les
mov
and
js
inc
jle
cmp
jmp
outs
scas
or
(bad)
inc
pop
dec
push
mov
out
stos
lods
aad
jl
shl
ins
jl
fwait
xchg
sbb
sub
fist
arpl
rcl
jae
cld
jl
movs
ds
shl
mov
xchg
not
in
scas
jp
xchg
adc
scas
push
push
test
and
icebp
push
aam
push
adc
adc
and
and
dec
mov
and
gs
movs
jl
inc
pop
pop
shl
ja
cmp
and
pushf
ins
stos
shr
aas
(bad)
xchg
lahf
add
push
arpl
icebp
movs
lock
(bad)
sbb
cmp
not
adc
jmp
add
sahf
xchg
cmps
lods
daa
mov
pop
pop
jecxz
stos
scas
loope
fld
jle
loopne
(bad)
test
inc
sbb
in
adc
push
jbe
xchg
addr16
add
in
ins
out
pop
or
fldenv
es
adc
mov
jg
pusha
lea
sbb
fwait
pop
add
xchg
clc
xchg
cdq
pop
or
inc
call
popa
(bad)
adc
retf
dec
mov
inc
mov
ret
dec
int3
or
rol
mov
pop
sub
cs
cld
loop
and
mov
add
fdivr
and
movs
and
mov
cmp
cdq
icebp
and
and
in
data16
mov
(bad)
mov
test
pop
pusha
movs
lock
ins
and
fs
pop
jmp
fld
sub
idiv
inc
push
sti
mov
fld
mov
or
or
push
mov
sbb
xor
out
pop
mov
mov
and
xchg
outs
mov
repnz
movs
iret
movs
jae
adc
out
imul
stos
mov
jb
or
xor
adc
ins
imul
into
(bad)
mov
mov
pop
loopne
js
or
cmp
cmp
sti
sbb
daa
sub
leave
xor
cmp
lahf
push
dec
loop
or
pop
add
mov
out
leave
jbe
add
pushf
mov
sbb
sbb
je
ins
jg
iret
push
xchg
test
xchg
cmps
(bad)
ja
fdiv
les
fsubr
jne
and
aad
je
and
xchg
xor
lds
shl
or
cmp
add
jo
out
addr16
icebp
jmp
xchg
pop
inc
xchg
mov
mov
xor
shl
int3
lods
mov
fidiv
outs
sbb
ins
ja
xor
mov
push
sub
pop
pusha
pop
bound
pop
loopne
jecxz
(bad)
lods
xchg
xor
call
loope
pop
xor
cld
pop
inc
or
sub
pop
or
push
inc
mov
call
scas
ds
sahf
ss
out
xor
out
jbe
bnd
mov
stc
lds
mov
pushf
cmc
push
out
mov
add
sub
jo
cwde
push
daa
jnp
sbb
popa
test
jo
dec
jmp
std
mov
cwde
pop
(bad)
push
sub
pop
icebp
jge
jb
pop
pop
dec
in
hlt
add
push
es
pop
pop
xor
dec
sbb
sbb
mov
popa
outs
push
inc
pop
push
pop
push
jmp
push
add
lahf
lods
mov
pop
in
leave
imul
mov
stos
je
xor
ja
cmp
fsubr
mov
mov
sub
pop
pop
push
jmp
push
stos
xor
inc
call
mov
(bad)
sub
push
scas
jecxz
sti
pop
leave
jle
mov
push
mov
(bad)
dec
(bad)
fcomp
imul
sahf
jns
jmp
mov
jmp
test
cs
jmp
jmp
cmp
vfrczsd
jl
pop
push
mov
ds
cmc
lahf
push
mov
sbb
push
pop
int
retf
sbb
dec
jg
jl
bound
imul
and
push
mov
jg
pop
retf
add
pop
dec
add
pop
aam
ins
scas
pusha
jo
ss
add
das
(bad)
out
ins
lea
cwde
cmps
jmp
jmp
fadd
pop
sbb
jns
adc
and
add
ss
jnp
inc
jne
xlat
xor
jns
adc
lods
int
push
loop
test
push
daa
cmps
out
jmp
xlat
test
clc
mov
adc
ficom
or
dec
ja
jge
or
push
inc
ret
push
xchg
pushf
stos
xor
inc
mov
cld
mov
icebp
(bad)
nop
or
jae
xor
push
inc
sbb
push
fs
shr
mov
fiadd
jle
pop
shr
jae
outs
stc
adc
in
cmps
xchg
push
jl
mov
lods
mov
outs
jge
mul
xor
fcmovnu
fsubr
and
jge
inc
test
repz
ret
push
int3
push
sub
stc
xchg
jge
sub
mov
nop
jmp
(bad)
je
push
cld
lods
loopne
fwait
inc
jb
or
dec
dec
push
or
jbe
bound
sbb
sub
ror
pop
adc
aaa
cs
mov
mov
cmp
aas
add
xchg
push
cwde
retf
dec
frstor
xor
jmp
pop
fsubr
test
or
les
retf
pusha
in
bswap
jmp
or
xor
(bad)
call
std
dec
pop
mov
xor
mov
cmp
(bad)
cmc
out
ret
(bad)
mov
sub
adc
sub
nop
in
int
out
push
test
dec
pop
punpckhwd
inc
xchg
cmp
xchg
mov
cmc
mov
in
xor
sub
sbb
aas
in
mov
or
xchg
adc
pop
popa
mov
xchg
dec
dec
sahf
mov
fwait
mov
imul
jecxz
xor
xchg
popf
in
ror
andps
bound
nop
test
arpl
xchg
sbb
out
push
mov
retf
sub
aas
pop
inc
fwait
dec
sub
mov
and
push
call
jl
mov
lahf
mov
lea
je
aad
mov
aad
xor
jno
cmp
les
(bad)
inc
mov
test
mov
arpl
add
inc
pop
add
adc
push
cmps
int
neg
pop
push
sbb
aam
mov
cs
mov
cmp
jne
in
pop
sar
jge
inc
jo
and
cld
xchg
pop
sub
lods
test
xor
push
mov
mov
xchg
imul
xor
xchg
sahf
lock
rcl
sub
dec
and
xchg
cwde
or
cld
jb
push
jno
or
pop
imul
in
les
inc
mov
test
or
inc
push
imul
push
xchg
jns
mov
jbe
(bad)
and
or
jne
cmp
sub
(bad)
fsubr
jnp
test
lea
bound
jmp
ins
jnp
xchg
les
cmp
fwait
test
mov
sbb
mov
push
pop
nop
ret
mov
iret
mov
mov
rcl
cmp
push
stc
push
sbb
dec
jl
cmp
fs
retf
or
ins
sbb
movs
mov
cmps
in
cmp
loopne
lods
push
inc
dec
ret
test
es
les
fnstenv
jbe
test
aaa
call
inc
cmp
std
outs
data16
into
cmp
cdq
stc
icebp
lods
pop
loopne
mov
sub
mov
scas
xlat
adc
or
(bad)
jmp
inc
adc
ficom
sub
cdq
adc
mov
mov
pop
scas
cmp
bound
std
jo
repz
(bad)
add
pop
inc
sbb
outs
xor
add
push
mov
or
idiv
fsub
xor
mov
js
les
mov
mov
cmp
test
fprem
fucomp
sub
lds
bound
and
icebp
leave
add
fadd
jp
dec
mov
nop
ins
ds
(bad)
jnp
sub
fsub
jp
aam
jmp
imul
ins
push
cmp
sbb
es
cwde
mov
fcom
jl
pop
mov
ins
out
dec
std
pop
out
dec
icebp
ss
sbb
add
inc
push
inc
xchg
data16
jp
(bad)
and
sbb
inc
bound
or
mov
push
hlt
push
mov
in
popf
and
xchg
pop
inc
(bad)
sub
das
cmp
mov
pusha
push
xchg
xchg
cwde
aad
mov
jno
dec
test
arpl
adc
sub
push
into
mov
mov
in
push
mov
fisubr
xor
aaa
sbb
bound
outs
fs
fwait
or
(bad)
retf
xor
cmp
and
aam
cli
pop
add
sub
std
pop
add
xchg
into
inc
leave
mov
or
dec
push
xchg
adc
cmps
pop
gs
jmp
pushf
mov
mov
mov
stos
inc
push
push
out
shl
add
xchg
pusha
(bad)
mov
imul
int3
cwde
pop
sbb
inc
push
cmp
xchg
xchg
mov
add
test
cli
repz
cmp
mov
push
mov
out
or
push
popa
dec
test
dec
ins
imul
nop
dec
in
jl
popf
mov
or
jno
out
pop
shl
fbstp
aad
aaa
sub
sbb
mov
(bad)
cmp
cmp
call
push
or
repnz
or
ins
or
scas
push
cmp
inc
sar
push
mov
xor
lods
out
cmp
ss
ret
push
les
cmp
test
add
arpl
pop
pop
call
fsub
push
js
in
daa
scas
into
sti
mov
cs
call
pop
ds
and
jnp
cmp
cwde
sbb
pop
add
add
sub
iret
popa
pop
push
shl
mov
sar
bound
mov
test
or
inc
push
xor
xchg
or
cli
adc
dec
dec
add
mov
xor
xchg
dec
pop
(bad)
sub
fadd
daa
dec
add
jns
cdq
and
jmp
test
aas
cld
fs
xchg
push
mov
imul
cmps
mov
mov
pop
stc
adc
pop
mov
pop
xor
adc
mov
in
xchg
leave
mov
pop
pop
iret
jl
into
outs
mov
pop
cdq
(bad)
out
ins
test
inc
xlat
pop
jbe
loop
icebp
xlat
sub
cmp
and
sub
test
dec
cmp
adc
pop
xor
rcl
push
or
xchg
js
fisubr
frstor
ret
test
inc
push
dec
pop
jbe
sub
xchg
(bad)
loop
pop
mov
cli
(bad)
test
outs
enter
sbb
jo
scas
cmp
dec
jns
in
mov
ds
fs
adc
xor
inc
add
js
sbb
mov
xchg
mov
mov
int
or
pushf
out
cdq
popa
push
lahf
mov
adc
push
jl
cld
(bad)
sbb
lea
nop
inc
mov
cli
and
adc
jb
cli
popa
add
fnstenv
into
(bad)
sbb
dec
push
jo
ret
dec
ds
jmp
mov
mov
lock
mov
fnsave
div
aam
push
mov
dec
xor
loope
in
push
mov
lahf
sbb
inc
adc
sub
xchg
in
mov
add
inc
scas
pop
sbb
mov
add
aaa
pop
std
pusha
mov
xchg
out
and
fisubr
sub
dec
mov
movs
dec
packssdw
dec
in
hlt
int3
movs
mov
pushf
cmps
pop
fadd
lods
fist
imul
mov
pop
or
and
mov
push
loopne
fdiv
pop
xchg
ss
dec
das
mov
push
ldmxcsr
into
xchg
jmp
xchg
repnz
cmps
cmp
xor
out
retf
push
addr16
fcom
bswap
push
es
sbb
pop
mov
lahf
dec
add
pop
cmp
leave
cmp
dec
pop
lea
sbb
mov
cmps
das
jb
fistp
adc
dec
mov
push
mov
fsub
xchg
mov
xchg
mov
je
dec
inc
dec
jge
nop
leave
lock
inc
cli
add
in
daa
ror
(bad)
xlat
cmp
in
sar
enter
xor
pop
sub
xor
fnstenv
ins
cmps
aam
mov
jl
shr
(bad)
mov
popa
mov
jne
inc
leave
cmp
mov
inc
push
xchg
add
add
fiadd
scas
and
push
jmp
xchg
jnp
mov
jg
out
push
pusha
pop
loope
dec
shl
div
dec
dec
mov
jnp
jmp
xchg
(bad)
xchg
mov
sub
dec
cli
adc
push
and
cmp
mov
jne
es
pop
into
jle
bnd
sahf
adc
fnstcw
sbb
add
sbb
adc
cmps
sbb
sub
fwait
and
sub
std
es
add
scas
inc
outs
sub
xor
mul
shl
out
jo
pop
xchg
lods
mov
cwde
cmps
mov
pavgb
push
test
inc
(bad)
pop
cli
add
jno
ins
jae
mov
jmp
cmp
mov
daa
push
or
mov
or
jo
jl
pop
dec
addr16
adc
push
push
repnz
push
pop
and
pop
xchg
or
add
push
xchg
(bad)
mov
data16
ins
cld
loope
fwait
pop
nop
dec
pushf
out
sub
push
rol
dec
cmp
in
ins
push
push
out
fist
mov
add
sub
sbb
fwait
pop
ja
or
repnz
and
leave
inc
push
adc
iret
retf
dec
sbb
mov
adc
xchg
sbb
arpl
cwde
movs
inc
sub
lods
jecxz
or
adc
retf
aaa
xor
das
push
addr16
cs
xor
das
stc
(bad)
fmul
test
cli
rcr
fs
idiv
lea
in
adc
test
lea
or
mov
cmp
stc
pop
in
mov
dec
pop
inc
xchg
je
gs
mov
push
cmp
inc
sbb
sbb
test
popa
push
and
or
sub
pop
pop
imul
shl
fistp
adc
sub
add
js
cwde
sub
(bad)
dec
add
xchg
add
fsub
ret
add
hlt
retf
cld
or
sti
inc
mov
int
mov
gs
jae
mov
loope
sub
test
xchg
retf
push
xor
push
cmp
(bad)
rcl
ror
mul
mov
mov
xchg
inc
push
push
push
inc
les
lods
out
jnp
mov
add
dec
cwde
push
and
pop
xchg
pop
jecxz
pop
and
std
ror
in
xchg
sbb
test
test
cmp
adc
mov
ret
repnz
je
xchg
rcr
adc
pop
add
and
rol
or
mov
mov
fadd
xchg
imul
adc
loopne
movs
icebp
icebp
and
es
shr
neg
ror
and
jp
add
cmps
clc
mov
xchg
xor
loope
or
loope
jp
pop
cmp
push
xor
add
mov
bound
sub
push
loope
sahf
sbb
mov
sub
and
xchg
inc
ins
push
mov
or
xor
mov
or
clc
inc
fbstp
jmp
hlt
mov
ja
push
cmp
dec
test
loopne
or
retf
pop
cmp
mov
rcl
(bad)
push
push
mov
mov
pop
aad
adc
xchg
sub
mov
aad
stos
xor
add
jns
pop
sub
mov
pop
sbb
cdq
add
xor
(bad)
mov
gs
cmp
imul
cli
shl
dec
jne
lock
test
test
push
ss
(bad)
out
and
add
in
stos
sti
or
cmp
add
push
fcom
imul
sbb
jmp
add
mov
aaa
mov
lock
or
adc
pop
jo
pusha
movs
dec
jle
lahf
and
imul
idiv
es
das
sbb
and
dec
ret
jbe
pop
mov
pop
ss
inc
cmp
arpl
in
push
sahf
add
inc
ins
sbb
scas
jnp
in
imul
xor
cs
dec
xor
jo
fild
repnz
mov
mov
loop
(bad)
in
push
add
lock
or
mov
push
jne
call
sbb
add
(bad)
xchg
dec
add
cld
or
retf
inc
jo
fistp
enter
(bad)
call
add
fiadd
lods
inc
or
push
push
mov
cmps
inc
jnp
pop
pop
iret
adc
inc
mov
or
mov
(bad)
pop
cli
fcomp
adc
push
pop
out
sub
movs
inc
(bad)
xchg
hlt
and
or
mov
jne
dec
and
les
xchg
pop
mov
xor
and
mov
mov
push
and
jno
loope
in
and
shl
mov
inc
call
push
xchg
xchg
mov
sti
stos
push
adc
mov
data16
dec
scas
std
loopne
mov
jno
loop
inc
xlat
jecxz
test
retf
sbb
adc
movs
xchg
sbb
dec
mov
scas
or
xchg
xor
add
(bad)
retf
pop
sti
mov
xchg
cmp
in
sub
clc
pop
aaa
jbe
jae
(bad)
les
pushf
or
xchg
int
add
jno
or
nop
nop
cmp
pusha
jg
test
mov
rcr
push
fs
pushf
sub
mov
xchg
cwde
fsub
mov
inc
call
push
mov
out
push
repnz
mov
dec
repnz
cmc
pop
jno
and
in
cmc
jp
xchg
ret
and
add
(bad)
je
movs
sbb
jp
in
sub
pop
inc
pop
xchg
sti
pop
push
imul
mov
mov
imul
pop
bound
mov
sub
out
mov
fnstcw
pop
add
jle
sti
push
jb
sbb
(bad)
sub
dec
fidiv
loop
mov
push
aam
lahf
imul
scas
mov
mov
cdq
fdiv
cmp
sbb
sti
dec
inc
mov
in
dec
lods
adc
std
std
jmp
jl
mov
not
jmp
mov
mov
shl
(bad)
hlt
aas
ss
sub
xchg
pop
pop
sub
jae
cmps
push
cld
dec
dec
bound
and
xchg
adc
xchg
or
pop
sahf
cmp
and
mov
sbb
jg
pop
push
mov
or
retf
fnsave
xor
xor
and
out
mov
cld
and
mov
sar
stc
out
jg
cdq
(bad)
jecxz
inc
adc
sub
outs
repnz
outs
jne
fucomp
hlt
cmp
pushf
and
imul
and
mov
push
fsub
mov
and
cmp
sti
jb
fwait
jle
push
sbb
or
ss
cmp
dec
jne
mov
and
ss
xor
imul
lock
push
mov
dec
adc
push
cmc
les
les
dec
ret
push
add
jl
leave
push
es
cmp
js
call
push
pop
mov
xchg
adc
pushf
mov
popf
iret
inc
inc
jl
mov
xchg
rcr
push
call
aad
fs
sbb
pushw
fdiv
or
add
js
and
jo
sub
or
xchg
call
loope
mov
(bad)
repz
popa
cdq
pop
imul
stos
xchg
or
daa
(bad)
jp
jb
rcr
sbb
sbb
jo
jno
cmp
mov
add
cmps
nop
cmp
jg
arpl
fcmovne
test
cdq
stos
xchg
fprem1
mov
scas
pop
fsubr
repnz
push
add
lahf
movmskps
in
dec
push
or
pop
xor
jecxz
(bad)
mov
sbb
aam
ja
out
aas
dec
sub
sar
lods
rcr
pop
jecxz
sbb
or
retf
and
dec
dec
mov
mov
mov
in
hlt
push
jo
fisub
mov
mov
cs
call
fprem
aas
pop
inc
pop
pop
pop
out
mov
fisttp
hlt
jle
mov
mov
outs
ja
mov
cs
mov
lods
mov
mov
lea
in
push
(bad)
hlt
jne
in
out
cmp
fld
sub
popf
mov
cmp
mov
cmps
shl
jbe
xor
bound
inc
imul
icebp
mov
into
dec
paddusw
sub
and
push
cmp
mov
call
ss
xchg
jns
mov
hlt
xor
popf
mov
push
inc
aas
retf
addr16
push
nop
dec
jo
sbb
xchg
mov
cli
call
xchg
fsubr
sar
dec
push
cmp
fcomp
rol
fdiv
cs
aas
in
jp
(bad)
test
in
mov
cmp
mov
shr
jge
dec
ficomp
mov
cmp
repz
sub
fadd
pop
ins
js
test
mov
pop
dec
adc
sub
imul
mov
lds
and
stos
push
std
arpl
cmps
mov
dec
lods
jecxz
fld
cmp
cmps
mov
mov
in
push
or
dec
pop
cmp
ss
push
(bad)
xchg
addr16
and
sbb
cmps
sbb
ins
sub
fsub
push
push
dec
sub
jl
mov
aaa
outs
imul
lahf
sub
add
je
inc
mov
das
es
inc
clc
adc
dec
aam
adc
xor
sbb
mov
adc
in
mov
lahf
(bad)
mov
lahf
adc
and
aaa
jge
nop
leave
inc
cmp
mov
sti
cmove
mov
xor
xchg
jmp
cmps
loop
jecxz
leave
mov
test
clc
fcomp
sahf
mov
fs
and
jmp
lock
in
imul
xchg
and
jg
add
push
add
inc
xchg
xchg
stc
cmp
adc
mov
or
dec
je
mov
call
not
inc
mov
xlat
dec
jno
ja
mov
xor
ret
mov
sub
mov
enter
mov
loope
push
dec
(bad)
fiadd
sahf
pop
xchg
jb
mov
sbb
ror
mov
mov
sub
xor
std
inc
cs
or
ds
shl
or
xchg
in
mov
cdq
cdq
packsswb
dec
std
jne
xor
popf
add
in
mov
(bad)
push
push
ret
fadd
push
sub
aaa
and
or
call
scas
(bad)
dec
imul
cdq
cmp
pop
(bad)
repnz
ins
add
adc
movs
sub
arpl
stc
mov
ror
inc
add
(bad)
jp
mov
cmp
mov
std
rol
enter
jo
shrd
inc
push
mov
movs
mov
outs
popf
pop
xchg
mov
xchg
in
popa
sbb
push
cmp
or
jbe
sub
sar
push
retf
test
scas
int
in
dec
fild
cld
mov
xlat
mov
jb
or
ss
push
sub
test
xchg
xchg
iret
(bad)
aaa
xchg
jmp
mov
dec
js
ret
das
mov
mov
xor
ds
xchg
out
not
loop
icebp
movs
in
ja
xor
out
or
sbb
mov
paddd
xchg
adc
std
mov
sub
or
inc
jo
dec
inc
xor
cmp
ins
jo
retf
test
push
xor
loopne
dec
adc
adc
or
jmp
pop
jnp
imul
aam
add
or
ret
shl
push
mov
mov
pop
not
mov
iret
loopne
pop
xchg
lds
retf
adc
js
pop
aad
retf
in
bound
pop
jo
push
jmp
out
adc
adc
mov
rol
push
jp
out
repnz
inc
repnz
inc
cmp
sbb
jae
adc
je
ss
jp
test
popf
lock
sbb
pop
pusha
mov
retf
cdq
fnstcw
shl
push
xchg
jp
xchg
cmp
mov
cmps
aad
add
add
(bad)
xchg
cmps
test
pushf
or
lds
mov
adc
mov
in
loop
adc
pop
retf
jge
mov
add
ja
jns
js
loopne
movq
shl
pop
stos
ret
and
out
pop
jno
mov
push
div
retf
mov
je
lods
cmp
dec
sub
retf
mov
int
or
jnp
arpl
cmp
(bad)
rcl
xchg
sbb
push
jne
xor
scas
xor
(bad)
icebp
repnz
pop
sub
fwait
sub
mov
xchg
out
loope
add
xor
adc
or
test
gs
call
xor
es
cli
ins
jns
repnz
push
dec
lds
fcomi
in
mov
or
aaa
idiv
das
leave
and
sbb
pop
push
lods
jns
(bad)
test
or
adc
loope
nop
ror
(bad)
mov
sar
cmp
inc
pushf
jle
push
jmp
sbb
es
stos
sbb
movs
les
push
aad
pop
fstp
xor
lock
inc
sti
test
pop
mov
jp
cld
in
sbb
cmp
pop
dec
xchg
fidivr
add
jno
mov
cmps
adc
retf
xlat
pusha
lahf
and
inc
dec
inc
les
das
mov
mov
fwait
push
push
popf
ret
in
stos
dec
sbb
sub
in
push
fidiv
fmul
add
div
inc
push
pop
push
(bad)
dec
imul
dec
fimul
(bad)
mov
push
dec
test
stos
sbb
inc
add
rcl
je
sub
sub
cmp
fwait
adc
or
out
fs
mov
xor
out
pop
mov
test
aam
jmp
(bad)
or
jecxz
jo
mov
lds
mov
jno
mov
es
push
mov
mov
retf
xchg
jmp
rcr
adc
push
pop
add
xchg
xor
pop
mov
fsubr
xchg
call
shl
inc
shl
mov
imul
lock
adc
sbb
out
push
call
aad
nop
inc
shr
inc
inc
adc
dec
jno
sbb
mov
repz
mov
jmp
pusha
or
mov
push
imul
(bad)
pop
jmp
inc
inc
mov
inc
mov
push
xchg
(bad)
dec
push
jb
mov
add
scas
call
in
xchg
loopne
sbb
xchg
call
dec
fimul
in
(bad)
cmp
ja
pop
cmps
inc
je
mov
xor
out
cmps
in
popf
mov
jge
fild
fist
clc
lods
add
or
and
push
(bad)
in
pop
inc
dec
mov
xor
and
inc
mov
or
xor
cmps
cli
iret
neg
enter
daa
add
xlat
xchg
scas
lock
fisub
xor
or
fisttp
int
mov
pop
push
retf
add
mov
loopne
cmps
sbb
ds
sub
push
aad
sbb
js
movs
cmp
into
jne
je
jecxz
dec
sbb
inc
aad
call
mov
out
test
retf
shl
push
sbb
jg
xchg
mov
outs
adc
sbb
(bad)
lods
lds
lahf
loope
ja
adc
dec
outs
(bad)
jmp
out
xchg
jg
adc
inc
hlt
jns
loope
push
push
jmp
xor
pop
jbe
movs
dec
outs
stos
rcl
cmc
lods
mov
dec
mov
inc
cmps
mov
out
push
xchg
cli
adc
mov
movs
dec
jg
xor
mov
mov
loope
stos
mov
sbb
in
pop
stos
add
popf
xchg
dec
int3
add
pop
arpl
pusha
mov
dec
or
loopne
pop
dec
test
pop
loopne
add
and
or
(bad)
xlat
fstp
movs
dec
mov
call
add
clc
xchg
xchg
fisubr
or
ds
push
push
jno
sbb
adc
sbb
lea
mov
push
pop
sub
addr16
mov
retf
repz
jno
pop
in
loopne
in
and
scas
mov
ss
push
mov
pop
and
cmp
xchg
fisttp
xchg
and
cli
rcl
sbb
adc
psubb
stos
pop
mov
aam
shl
outs
jl
int3
and
dec
jp
loop
cmp
mov
pop
push
sti
jmp
int3
out
mov
sahf
sbb
dec
sub
push
mov
movs
cli
and
mov
mov
mov
cmps
jo
test
xchg
fild
(bad)
arpl
sar
hlt
mov
pop
xchg
and
js
in
cmp
adc
and
imul
sti
lods
xchg
out
inc
pop
ror
mov
mov
repnz
and
mov
jns
xchg
retf
das
(bad)
cmps
lock
repnz
cmc
mov
mov
lods
(bad)
pop
fmulp
jbe
repz
movs
jns
test
mov
inc
adc
xchg
pop
or
shr
or
xor
xchg
js
adc
pop
inc
pop
mov
mov
aam
stos
xor
mov
cs
pushf
mov
push
(bad)
ja
mov
jge
(bad)
push
jecxz
xchg
or
push
xchg
mov
xor
xor
xchg
sub
movs
inc
add
ins
pop
inc
cdq
or
test
mov
push
(bad)
(bad)
sbb
mov
pusha
loope
add
add
call
fs
scas
pop
ror
jo
mov
xchg
int
gs
fisttp
and
data16
mov
retf
mov
inc
mov
test
jecxz
or
mov
daa
dec
or
jo
xor
test
in
dec
xor
cmc
inc
pusha
or
jmp
bswap
lds
out
ja
dec
pop
sbb
aas
ss
call
ins
mov
jne
or
pop
pop
iret
mov
hlt
xchg
adc
addr16
rcl
test
sub
mov
fldenv
imul
test
ret
mov
sub
xor
leave
cs
xor
sub
hlt
add
jne
sub
out
sbb
cs
mov
aaa
mov
sbb
repz
clc
add
js
cmp
jle
(bad)
xlat
push
popf
ja
sub
jecxz
daa
pusha
mov
pop
inc
xor
sbb
cmc
xchg
mov
inc
push
in
jnp
stc
test
jle
test
xchg
push
jae
jecxz
cmp
icebp
mov
jo
jbe
mov
or
daa
cmps
xchg
ret
push
jb
adc
sub
jns
xor
sar
pop
imul
scas
shl
es
cwde
sbb
or
int
mov
ret
adc
ja
jecxz
push
sub
mov
or
arpl
sbb
int
(bad)
movs
xchg
cmps
shr
call
inc
mov
dec
add
(bad)
popa
xchg
aaa
aas
shl
js
dec
xchg
xchg
mov
push
xchg
jo
aas
mov
imul
push
sub
push
cdq
imul
or
icebp
sahf
pop
mov
jge
movs
cld
aaa
xchg
in
into
inc
and
shl
(bad)
jmp
test
pop
popf
sub
fwait
push
ret
shr
pop
cmp
movs
retf
mov
sbb
mov
push
in
mov
retf
(bad)
stos
mov
fcmovnu
push
push
mov
aad
addr16
pop
pop
mov
mov
adc
loope
or
lahf
push
jo
(bad)
mov
fld
pop
xor
cs
dec
jmp
ret
daa
pop
cmp
and
retf
aaa
cld
push
out
pop
stc
adc
(bad)
sub
mov
add
or
and
or
(bad)
xchg
call
ins
jns
sar
inc
lahf
sbb
cmp
outs
sbb
loopne
jle
sbb
es
iret
cmp
neg
stos
dec
jno
(bad)
hlt
ret
mov
jle
inc
(bad)
jmp
cmps
dec
in
fnstenv
push
mov
mov
mov
fild
add
in
jge
aad
cmp
push
call
push
hlt
and
repnz
sbb
sbb
push
rol
push
push
pop
hlt
jp
xchg
fcom
add
adc
out
push
rcr
push
scas
xor
adc
or
cmps
sbb
test
jne
add
and
cmp
mov
mov
xor
mov
or
inc
add
pop
data16
jns
jnp
cmp
jge
cmp
je
(bad)
ss
into
test
add
gs
fld
movs
sbb
push
mov
add
mov
mov
pushf
add
or
jae
adc
sbb
pusha
sbb
mov
push
xchg
jp
(bad)
xor
(bad)
pushf
sahf
bound
jnp
mov
outs
js
sub
clc
xlat
jge
xchg
push
adc
scas
push
dec
sbb
jp
or
dec
movs
daa
leave
mov
test
sbb
mov
adc
ret
push
adc
jns
pop
rol
pusha
loopne
pop
sub
outs
in
into
bound
fwait
adc
mov
mov
jbe
mov
rep
xlat
aad
jp
add
(bad)
or
(bad)
out
pushf
cmp
arpl
popa
cmps
pop
inc
ja
xchg
pusha
into
xchg
mov
icebp
pop
add
outs
xor
jbe
push
mov
pushf
adc
into
or
ret
lahf
dec
adc
jnp
fmul
push
pop
popf
aam
sti
sub
mov
push
pusha
js
lods
cmp
xor
inc
push
mov
jecxz
aam
mov
mov
repz
mov
xor
pop
sub
hlt
add
ja
sbb
aam
std
mov
jne
xchg
xchg
lods
(bad)
mov
test
xchg
cmp
ds
dec
sub
jle
pop
mov
mov
inc
pusha
push
shr
adc
adc
into
jno
jne
and
sub
sbb
pop
mov
mov
test
mov
adc
into
or
cmp
dec
mov
enter
push
ret
push
ds
and
jp
hlt
lahf
sar
(bad)
sbb
jecxz
addr16
out
in
xor
jle
sbb
out
rcr
lock
or
aaa
ftst
adc
xchg
nop
rcr
loopne
leave
popf
sub
fbstp
add
mov
and
mov
out
scas
adc
lahf
add
sub
sar
dec
(bad)
aam
pop
retf
icebp
add
pop
sub
in
mov
push
ins
or
sbb
lock
push
dec
es
mov
sbb
jl
loopne
pop
aad
out
xchg
(bad)
xlat
dec
test
std
mov
jo
sbb
push
mov
adc
sbb
xchg
add
dec
mov
add
add
enter
xor
imul
pop
int3
push
pop
adc
fcomp
out
fstp
push
xchg
cmp
ja
fadd
popa
jb
or
push
inc
sbb
mov
lock
arpl
mov
add
sub
push
and
js
sub
xchg
out
push
rol
dec
mov
mov
add
push
gs
imul
sbb
inc
icebp
inc
ins
pusha
in
or
dec
inc
jae
dec
mov
arpl
cmps
push
sub
shl
pop
shl
mov
mov
jle
cmc
xchg
dec
adc
(bad)
(bad)
lds
inc
mov
mov
clc
pop
sahf
cdq
push
jbe
sub
retf
dec
fs
out
dec
sub
aaa
movs
pop
int3
rcl
mov
ror
sbb
ds
dec
test
(bad)
mov
mov
inc
cdq
out
jb
adc
ds
and
out
jge
pop
inc
popa
imul
aad
rol
out
ins
fmul
add
push
or
push
(bad)
js
jg
sub
push
pop
ror
mov
sub
(bad)
push
lahf
mov
hlt
in
out
test
neg
fidiv
sbb
jmp
stos
xchg
aad
loopne
std
mov
add
inc
std
int
out
adc
xchg
icebp
push
push
push
cmp
cld
inc
pop
adc
jecxz
mov
pop
or
iret
add
push
xor
imul
xor
or
rcl
popf
xlat
in
xor
rcr
xchg
lds
sbb
scas
popa
fsub
inc
retf
repnz
mov
jno
xor
call
xchg
aad
(bad)
div
jmp
bound
jl
jb
in
test
cmps
xor
hlt
inc
jbe
(bad)
or
xor
pushf
push
dec
xor
adc
sub
jae
sub
sub
cdq
cmp
jecxz
retf
lds
xor
out
cmps
out
dec
inc
push
adc
outs
idiv
cmp
icebp
mov
fadd
jge
scas
pop
dec
jle
cmp
add
pop
stc
js
mov
cdq
push
scas
mov
ds
ja
pusha
ret
retf
test
ja
cmc
xchg
pop
ret
pop
aam
xor
sar
xchg
stos
xchg
imul
push
into
pop
cmp
aas
pop
aam
or
xchg
add
push
push
cmps
out
dec
fistp
sbb
mov
out
push
outs
outs
xchg
sbb
pop
pop
or
ficomp
lods
fiadd
fcmove
cmp
ins
pop
je
int
test
fwait
cmps
xor
into
cmp
jmp
sub
mov
or
pop
aas
pop
push
sbb
fs
xchg
fisttp
push
or
out
aam
inc
sahf
sbb
out
mov
gs
scas
dec
les
pop
xor
add
call
stc
sbb
into
out
or
pusha
and
push
scas
cwde
pop
leave
jae
loopne
or
and
data16
dec
lahf
jbe
add
iret
stos
lahf
mov
lods
mov
fild
(bad)
lods
aas
xchg
xchg
gs
xor
jl
dec
(bad)
sub
pushf
nop
and
sbb
cmps
cmovg
push
mov
mov
add
mov
mov
jge
cdq
mov
movs
mov
ja
cmp
cwde
popa
mov
mov
dec
pop
cli
ficomp
cmp
xlat
movs
jl
retf
add
pop
stos
cwde
sbb
xchg
mov
rol
test
or
push
jmp
imul
jo
test
add
xor
xor
and
adc
push
inc
or
jl
push
lds
(bad)
push
adc
dec
sbb
inc
xchg
xchg
mov
dec
xor
(bad)
in
xchg
into
outs
clc
add
pusha
leave
stos
pop
mov
jb
sbb
mov
push
or
fs
cs
int3
mov
aad
fist
sub
sbb
pop
aam
xchg
outs
and
xor
int
and
cmp
in
mov
sub
hlt
cwde
add
mov
sbb
imul
out
mov
cs
push
mov
(bad)
xor
adc
js
aam
(bad)
imul
xchg
jbe
gs
out
nop
dec
imul
neg
push
cmp
addr16
dec
in
pop
sbb
sahf
icebp
pop
jb
test
stos
add
popf
inc
rol
inc
gs
inc
rcl
leave
sub
adc
enter
and
or
jmp
adc
pop
nop
(bad)
or
aad
sahf
out
cli
jle
movs
xchg
pop
jno
imul
das
add
repz
jo
ja
cmp
jl
xchg
popa
jno
das
out
push
cmc
pop
ror
lods
xchg
(bad)
jmp
xor
mov
daa
in
inc
inc
mov
mov
out
in
mov
mov
cmp
ins
mov
pop
adc
pushf
push
xor
push
jecxz
sti
lods
mov
aaa
ins
add
cmc
or
iret
xor
test
cwde
push
dec
in
jecxz
sahf
add
(bad)
out
push
shr
dec
sub
mov
jnp
outs
icebp
sub
cmc
dec
fisub
lahf
(bad)
in
push
push
outs
and
and
sbb
ror
and
loop
daa
pusha
add
pop
ficom
mov
aad
std
shl
xor
xchg
rcl
mov
jp
imul
dec
push
cmp
dec
fistp
out
sbb
pop
in
dec
retf
and
arpl
jno
es
and
clc
cli
dec
sub
mov
mov
cs
aam
int3
in
jns
jae
scas
mov
mov
stc
ja
and
jmp
add
sub
xor
mov
inc
jo
aam
in
sub
jmp
mov
xor
iret
adc
push
cmc
xor
scas
xchg
(bad)
jno
cmp
fmul
fisubr
xchg
outs
push
js
scas
idiv
cdq
daa
xchg
punpckhbw
push
ror
(bad)
or
inc
xchg
lahf
push
push
jl
lock
ds
cs
xchg
mov
push
sbb
xchg
jg
inc
mov
push
dec
je
mov
movs
(bad)
fisubr
hlt
sub
pop
enter
inc
clc
fwait
dec
sbb
bound
cmp
and
xchg
xor
push
in
jecxz
adc
sub
js
call
imul
scas
or
cmp
jbe
inc
lds
daa
lock
outs
pop
jl
ds
ins
pop
lds
push
cmp
push
add
or
and
push
push
pop
add
in
push
mov
lea
sub
push
add
push
xchg
(bad)
pusha
retf
add
pop
test
(bad)
xor
and
and
dec
mov
pop
cmp
les
dec
icebp
cmc
fisubr
jb
sub
adc
xchg
jecxz
jno
(bad)
pop
sbb
pop
dec
jns
call
shl
mov
or
stc
or
dec
xchg
add
mov
and
dec
ins
aam
retf
xchg
cmp
cdq
mov
fidiv
inc
sar
sbb
mov
addr16
dec
xchg
xchg
push
in
pushaw
hlt
cmp
pop
fwait
daa
jecxz
fdivr
pop
daa
dec
jbe
rcl
xchg
jg
ins
movs
scas
cmps
sar
jle
jb
out
int3
cld
fisttp
sbb
jmp
pop
ins
sti
push
adc
outs
retf
test
popf
ins
frstor
pop
aas
(bad)
jecxz
fst
xor
rol
shr
xchg
lds
pop
mov
imul
fnstcw
movs
mov
pusha
fbld
mov
jno
cli
leave
xchg
jl
sbb
cmp
push
mov
mov
ins
mov
pop
outs
ret
cmp
shl
push
loope
je
cmc
xor
jae
ror
jb
adc
pop
pop
sbb
ja
rcr
call
xor
clc
test
icebp
cmp
(bad)
pop
inc
arpl
sbb
lahf
xor
push
test
mov
dec
repnz
mov
xchg
test
les
pop
dec
sub
(bad)
xor
fisttp
sti
cmc
xor
sti
sub
mov
retf
dec
stos
and
pop
popa
inc
push
mov
sar
inc
mov
and
xchg
push
rol
push
cmps
lahf
ja
cwde
push
hlt
fs
lock
or
div
jmp
xchg
ss
sub
sub
mov
jae
mov
push
(bad)
xchg
xor
jbe
fst
or
push
dec
xchg
xor
xchg
stos
aaa
call
(bad)
push
sbb
fild
xor
push
fucomip
push
fisttp
scas
lock
sbb
bound
and
cmp
cld
mov
daa
fcmovb
jns
movs
jl
xchg
clc
xor
dec
ret
cmp
outs
jl
pop
test
sbb
ds
scas
outs
ja
icebp
movs
(bad)
mov
pop
jmp
cmp
cmps
sbb
lock
mov
retf
jnp
call
mov
cmp
dec
out
lods
mov
aam
or
sbb
retf
(bad)
scas
movs
mov
cmp
icebp
cli
jl
aad
nop
rol
and
jnp
jmp
cmps
add
xchg
pushf
sub
dec
or
push
jge
cmps
movs
loope
mov
inc
call
(bad)
sti
(bad)
sar
adc
and
(bad)
cmp
lds
(bad)
fld
xchg
int3
popf
into
adc
xlat
sbb
shl
dec
and
push
(bad)
jne
test
sub
ror
in
or
retf
jne
xchg
enter
jae
fidivr
ror
loope
xor
fcom
mov
and
test
pop
push
sbb
je
not
cmp
(bad)
rol
pop
ins
pop
push
stos
stc
push
mov
or
inc
data16
adc
push
cs
push
outs
xor
pushf
pushf
push
push
push
xor
lahf
fst
pop
jns
retf
sub
jl
ins
dec
lahf
std
push
add
ins
iret
test
cmc
mov
or
stos
mov
xor
outs
fwait
and
aaa
cmp
sub
int
xchg
hlt
imul
nop
mov
or
mov
push
aad
(bad)
ja
sub
xchg
mov
test
jmp
push
xlat
ficomp
mov
adc
mov
jno
test
and
sub
sub
cmp
adc
adc
or
jg
cmps
push
adc
clc
add
data16
push
xlat
mov
mov
test
jne
adc
push
cmp
adc
mov
mov
sbb
icebp
mov
sub
scas
dec
push
call
mov
add
cs
das
cwde
xor
sub
mov
test
pop
jnp
fwait
cld
cmp
fprem
enter
std
cdq
stc
adc
(bad)
gs
mov
sbb
stos
inc
pushf
xor
push
test
mov
test
add
repz
cld
sub
das
mov
das
push
cmp
mov
or
and
pop
add
iret
sub
mov
dec
out
and
xchg
inc
mov
jge
sub
(bad)
mov
(bad)
aas
stc
and
cmp
(bad)
sbb
xor
sub
add
call
xchg
xor
dec
pop
call
(bad)
and
fnstsw
in
int3
inc
enter
push
sbb
xchg
cmp
movs
mov
lods
retf
mov
sbb
lea
(bad)
mov
sbb
mov
or
add
stos
movs
push
push
loope
test
mov
fst
test
mov
adc
mov
(bad)
in
dec
cmps
out
inc
jmp
sbb
mov
push
add
jb
int3
addr16
movs
call
or
mov
cmps
add
xchg
sub
sub
or
rcr
pusha
cld
dec
das
cs
sub
test
cmp
and
push
call
int
push
(bad)
sbb
ds
movs
sbb
mov
adc
cmp
dec
inc
movs
dec
repz
pop
scas
xchg
lds
push
sbb
mov
and
xchg
call
fwait
loope
ins
push
push
mov
(bad)
ja
loopne
iret
xchg
jge
xchg
push
add
retf
outs
in
or
imul
dec
dec
(bad)
pop
mov
lods
xchg
and
mov
fnstsw
out
popf
cmp
iret
sub
push
add
xor
clc
push
lea
sub
inc
aaa
cdq
jae
ja
pop
cld
scas
mov
push
(bad)
cmp
or
imul
retf
or
fidiv
sub
in
test
pop
jecxz
cdq
call
mov
inc
xchg
mov
out
cdq
fbstp
loop
lahf
push
shl
mov
or
push
je
add
jmp
mul
sbb
addr16
jle
add
ror
dec
add
sahf
sar
cmp
xchg
inc
retf
jecxz
out
add
(bad)
mov
int
xor
scas
push
ret
fs
sbb
dec
and
scas
adc
aaa
je
inc
adc
jnp
pop
xor
jg
ins
sub
xor
nop
inc
inc
cs
push
dec
imul
jbe
ror
test
shl
cmp
sbb
xor
(bad)
stc
pop
pop
call
sub
dec
cmp
sub
inc
sbb
out
dec
xchg
add
(bad)
cmp
(bad)
movs
or
div
shl
cmp
popaw
add
test
adc
enter
cli
inc
or
jnp
inc
adc
cmp
add
xchg
ret
and
xor
mov
lea
pop
inc
or
test
and
push
xlat
sar
jmp
nop
(bad)
mov
int
add
mov
aad
jo
outs
test
sti
out
out
pop
sar
hlt
fwait
xor
(bad)
cmp
inc
cmp
mov
mov
das
pop
stc
xchg
pop
xor
adc
movs
je
jmp
adc
ret
inc
daa
cmp
sbb
dec
pop
jnp
mov
sbb
cmc
sbb
xchg
retf
mov
xor
js
sahf
cdq
(bad)
mov
ins
(bad)
rcr
jnp
jmp
aaa
enter
mov
mov
pop
adc
test
into
mov
pop
cmc
out
jo
mov
xor
hlt
arpl
cvtps2pd
daa
sub
(bad)
ins
arpl
cmp
dec
fild
hlt
lea
js
push
adc
cs
add
mov
push
enter
ret
dec
push
cmps
stos
push
push
(bad)
dec
adc
and
pop
les
or
pop
sbb
or
std
mov
popf
es
mov
ret
shl
shl
inc
adc
and
mov
mov
bound
ss
push
stos
xor
into
xchg
imul
pop
and
dec
add
jmp
sub
sbb
inc
mov
mov
push
dec
fimul
lods
inc
(bad)
pop
sbb
outs
and
xchg
call
jns
xor
mov
mov
mov
sub
jb
sahf
leave
jns
clc
pop
hlt
test
mov
push
jae
lahf
outs
ds
je
mov
cmp
pop
shr
or
and
pop
jl
xor
xchg
add
clc
pusha
repnz
cwde
and
test
stc
shl
or
jmp
jbe
mov
mov
jno
shr
repz
scas
push
repnz
cwde
sub
mov
gs
in
push
mov
lahf
inc
inc
cmp
sub
inc
fimul
push
xchg
sub
clc
dec
inc
loop
leave
adc
sub
jo
rol
lods
aad
std
push
jmp
movs
xchg
xor
and
and
les
jle
jmp
in
lahf
sub
lds
sbb
(bad)
xchg
test
out
setle
jns
ret
push
pop
jecxz
(bad)
fisub
push
sub
xor
or
movs
daa
xchg
les
in
retf
mov
pushf
outs
and
test
jo
aas
or
aas
adc
js
add
sbb
loopne
je
cdq
sbb
pop
pop
xor
cwde
fcomp
clc
sub
cvttps2pi
pop
es
jl
xchg
jmp
inc
add
mov
pop
mov
sub
ret
sahf
or
dec
or
sbb
(bad)
scas
fsubr
ss
fnstcw
in
mov
(bad)
mov
mov
sbb
daa
sub
out
xchg
mov
ins
or
les
das
dec
sbb
pop
dec
call
xchg
scas
std
push
fisttp
shl
and
and
into
je
pop
add
je
dec
jbe
sti
mov
icebp
(bad)
test
mov
dec
xor
mov
cwde
xlat
xchg
adc
std
adc
dec
add
lods
xchg
sti
dec
sbb
jmp
mov
cmp
mov
cmp
(bad)
jmp
lods
mov
mov
mov
mov
or
fist
cmp
cmp
jl
pop
mov
aad
imul
xor
xchg
mov
lods
jle
mov
adc
mov
push
xor
push
mov
add
scas
iret
aas
xchg
ja
mul
and
xlat
pushf
ja
push
push
xchg
pushf
pop
lock
ja
cld
iret
jo
gs
das
aas
mov
sub
test
call
mov
sbb
xchg
or
in
or
mov
arpl
xor
adc
xor
sub
loopne
gs
inc
xor
ja
xchg
daa
cli
clc
mov
in
or
ret
or
or
and
out
out
cmc
sbb
mov
pop
pop
cld
xor
movs
jmp
add
or
jb
pop
stos
and
std
push
inc
lahf
jb
sbb
sub
add
lods
push
and
sbb
sub
das
inc
ror
xor
adc
call
cwde
pop
add
mov
mov
push
mov
ins
mov
sbb
and
push
gs
mov
es
cmp
pop
jle
sbb
push
and
outs
pusha
and
xchg
xchg
cmps
push
push
int3
mov
mov
dec
ror
rcr
psllw
cs
cld
lea
dec
outs
mov
neg
jbe
jae
sbb
lock
bound
or
or
adc
cmp
mov
dec
pop
cmp
push
and
je
dec
fwait
enter
pop
scas
mov
pop
pop
jns
outs
inc
js
add
lods
jle
int
inc
not
pop
jmp
out
in
bound
jg
(bad)
leave
fdiv
mov
jg
or
clc
xlat
shr
cmp
jmp
xor
push
push
cmp
ins
add
(bad)
adc
out
movnti
ret
test
std
(bad)
aas
xor
cmp
ins
in
mov
push
ret
push
jbe
cdq
cld
pusha
inc
cmc
cld
jl
ret
jae
xchg
fcmovu
ret
popa
mov
nop
shr
mov
ins
(bad)
and
inc
add
ret
ret
add
outs
nop
ins
push
dec
ret
inc
fdivr
push
or
push
stos
adc
lahf
fst
mov
test
jge
inc
stc
psrlq
data16
bound
loop
xchg
aas
mov
fidivr
push
lods
add
sti
push
ins
mov
and
aad
aad
addr16
xchg
inc
sub
inc
lea
je
stos
cmp
div
(bad)
aam
(bad)
sub
fsubr
into
xor
jg
imul
aam
test
inc
ret
sub
setb
xchg
sbb
shl
loopne
sbb
aaa
add
aas
push
dec
inc
mov
leave
bound
not
add
and
cli
xchg
jle
pop
mov
lods
lods
pop
kandnb
in
mov
mov
push
imul
test
and
push
cwde
sbb
push
jae
stc
jge
dec
xchg
mov
add
test
cmp
fnstsw
push
cs
out
jge
jbe
scas
pop
and
adc
movs
mov
jbe
push
dec
lds
push
xchg
shr
je
sub
xchg
imul
(bad)
xchg
sub
mov
sbb
loope
aad
sahf
adc
and
ret
dec
mov
test
and
jno
push
and
data16
jp
and
ret
call
cmp
imul
loope
jl
fidivr
jg
(bad)
pop
jmp
jno
xchg
cmp
or
jmp
js
xor
push
pop
sbb
xor
xchg
das
loop
xor
pop
(bad)
add
or
stos
pop
jecxz
ins
xor
test
retf
rol
pop
loop
pop
push
pushf
sub
cmp
xchg
dec
lods
xor
or
repnz
or
movs
fst
shl
jo
addr16
add
icebp
rol
mov
push
jmp
rcr
int
dec
movs
jl
dec
mov
cmp
retf
loope
adc
ds
and
mov
jnp
mov
std
xor
jg
hlt
dec
repnz
(bad)
(bad)
addr16
adc
push
popf
inc
inc
(bad)
sti
clc
cmp
outs
lea
shl
xor
dec
xor
push
stos
or
(bad)
sub
in
sub
jg
add
add
adc
sbb
(bad)
retf
and
je
enter
addr16
or
cdq
mov
sbb
icebp
sbb
pop
or
mov
mov
popa
cmc
mov
out
add
push
cli
mov
iret
(bad)
adc
or
jge
mov
adc
dec
push
xchg
icebp
neg
ins
xor
out
add
test
aam
jae
jg
pop
cmp
scas
or
sbb
cmp
fld
xor
xor
inc
xchg
(bad)
in
push
push
inc
jnp
sbb
std
ficom
xchg
dec
xchg
fld
push
or
ror
stos
xchg
popa
nop
xor
or
cwde
adc
add
jno
add
bound
pop
push
add
cmp
mov
mov
cmp
clc
mov
loopne
dec
xchg
pop
jbe
cmps
sub
ficomp
or
xchg
sbb
add
es
(bad)
(bad)
gs
lea
mov
cli
xchg
dec
add
into
mov
dec
or
call
xor
push
or
imul
inc
add
popf
mov
jne
aas
in
xor
pandn
cmps
enter
jb
ret
xchg
(bad)
mov
int
or
cmp
cli
push
inc
mov
dec
cli
into
inc
test
mov
xchg
mov
mov
push
cmp
cs
cmc
adc
mov
ds
js
xor
or
adc
or
and
and
(bad)
in
clc
mov
out
jmp
scas
es
jbe
jno
ret
aad
outs
cmp
fcmovu
xor
cmp
mov
in
lea
push
fdivr
push
xchg
sbb
stc
or
divps
popf
jno
xor
lock
inc
(bad)
(bad)
mov
int
loope
mov
mov
sbb
cmp
add
inc
mov
enter
in
ffree
mov
and
shr
jmp
add
jns
sahf
cmp
adc
xchg
sbb
and
pushf
sbb
fcom
add
xor
ja
pop
inc
push
lods
hlt
add
fs
(bad)
repz
dec
pop
aas
ret
push
outs
inc
lea
cmps
(bad)
sub
lods
jecxz
inc
in
mov
mov
bound
and
mov
cmp
xor
movs
push
sub
jp
rol
adc
push
mov
sbb
hlt
aas
or
mov
mov
push
out
cmp
ret
pop
adc
gs
dec
xor
pop
xchg
scas
jo
or
inc
pop
cmp
xchg
mov
mov
scas
jle
cmp
aad
imul
dec
jge
add
push
dec
and
in
sbb
call
(bad)
push
mov
hlt
sub
fdivr
add
sbb
in
pop
adc
or
xchg
iret
xchg
pop
sbb
push
(bad)
mov
jmp
daa
xor
xchg
out
add
aas
(bad)
xchg
scas
inc
xor
imul
mov
mov
jp
scas
std
ja
pop
pop
ret
inc
pushf
scas
mov
push
push
sub
retf
scas
enter
cld
sbb
and
adc
out
outs
mov
mov
cmp
hlt
stos
mov
data16
stc
jmp
and
push
xor
jnp
jle
fadd
cmp
movs
push
lahf
cmp
mov
ror
push
sub
xor
js
enter
mov
mov
(bad)
repnz
std
jg
fwait
jae
je
add
or
adc
and
dec
imul
mov
add
xchg
push
adc
jmp
inc
scas
test
mov
dec
test
and
int3
push
fistp
and
push
pushf
dec
jne
in
fsub
mov
push
jmp
cmp
in
mov
iret
inc
add
aas
push
jnp
fimul
ffree
scas
pop
xchg
dec
inc
fcmovne
aas
(bad)
jo
push
ret
and
jecxz
lods
and
ss
aaa
xor
(bad)
sub
(bad)
aam
push
push
xchg
mov
les
add
push
pusha
mov
imul
push
inc
repz
mov
frstor
test
add
popa
inc
lods
popf
push
xor
shl
mov
ret
int
mov
out
and
xor
inc
and
mov
jl
cld
ja
mov
cmp
xchg
(bad)
jge
jmp
ins
or
cmp
outs
cmps
cmp
(bad)
call
shl
cmps
push
mov
jno
and
sub
and
aam
mov
jg
sub
outs
lock
shl
neg
add
jecxz
inc
and
rcr
je
arpl
les
test
idiv
xchg
les
(bad)
jmp
sbb
aaa
movs
imul
cli
retf
sahf
stc
or
(bad)
fst
popa
xchg
cmp
jae
push
mov
scas
pop
mov
or
pop
jmp
adc
xchg
sbb
pop
bound
add
pushf
ds
pop
mov
pop
jmp
lock
cwde
aas
jns
imul
out
jmp
lods
btc
fidiv
lods
add
sbb
mov
or
loope
clc
push
je
shl
cmp
neg
inc
add
mov
push
std
xchg
sbb
xor
push
data16
lds
enter
mov
xor
inc
stos
lahf
mov
jb
ror
xor
ins
xlat
pop
aas
xchg
sbb
xchg
fwait
sti
dec
mov
daa
clc
xchg
scas
mov
not
cmps
ds
jo
cs
mov
call
call
mov
cli
nop
push
dec
mov
adc
iret
xchg
sbb
sub
test
jne
or
mov
mov
arpl
jo
scas
xchg
cdq
add
popf
stos
and
neg
daa
test
jbe
cmp
inc
outs
adc
icebp
pop
mov
(bad)
mul
retf
ja
sahf
pop
jp
scas
arpl
sub
cwde
mov
push
push
jp
jmp
test
daa
push
push
mov
fadd
mov
or
pop
out
xchg
and
xchg
sbb
dec
retf
push
das
dec
out
enter
ret
cs
rcl
lahf
inc
sbb
and
inc
mov
sbb
leave
or
xchg
loopne
dec
or
in
bound
push
fcom
mov
movs
add
inc
push
cmc
adc
dec
push
ja
jnp
addr16
mov
dec
(bad)
cmp
fwait
inc
mov
sub
stos
(bad)
push
xor
lea
dec
pop
add
xor
or
fld
mov
sub
mov
cmps
in
sbb
or
ins
in
cdq
movs
pop
mov
cmp
popf
lea
sti
push
in
xchg
or
mov
mov
sbb
(bad)
shr
add
dec
add
cmp
(bad)
mov
cmps
arpl
jae
das
iret
push
cli
call
cmp
dec
cwde
into
jmp
dec
sbb
mov
frstor
jb
loopne
pusha
and
fs
outs
cmp
movs
add
fs
push
rcr
or
mov
sbb
jl
inc
pop
sbb
in
or
pop
jp
loope
mov
jge
mov
add
or
es
jmp
sub
push
xor
leave
adc
sbb
add
xor
data16
push
inc
or
lock
out
mov
hlt
jl
loopne
jnp
ds
enter
leave
jo
ins
pop
pop
mov
jo
pop
stos
js
push
xchg
push
(bad)
jle
lock
mov
xchg
cmc
stos
imul
je
mov
iret
push
icebp
dec
jns
lock
int3
ins
and
not
dec
pop
push
and
sub
ins
adc
add
call
add
js
sub
cmp
xor
fsubr
and
mov
jg
repz
mov
mov
adc
dec
into
mov
inc
aaa
mul
scas
mov
and
jo
inc
mov
cmp
add
ret
inc
int
stos
cmp
adc
call
call
cmp
js
ret
dec
int3
loopne
sub
cs
fwait
stos
mov
stos
cwde
stc
jne
jns
or
adc
and
jmp
inc
mov
push
outs
inc
out
jl
enter
(bad)
std
xchg
mov
loop
test
jle
sbb
jb
push
mov
jb
xlat
stc
sub
cli
aad
sub
(bad)
into
adc
push
sbb
pop
push
pop
in
inc
push
shl
mov
shr
popf
daa
int3
jl
and
mov
in
mov
clc
jl
sub
movs
pop
inc
pop
sub
dec
adc
push
adc
shr
fs
popf
cmp
adc
fs
sbb
bnd
repnz
ret
sub
dec
pop
pop
mov
fwait
test
or
inc
pop
arpl
push
test
jb
adc
sbb
scas
sbb
out
adc
and
fbld
icebp
cs
int
out
aad
out
sbb
xchg
out
dec
mov
in
xor
mov
mov
push
cmps
cmps
idiv
dec
pushf
lahf
dec
mov
gs
je
adc
jns
sbb
das
add
imul
push
xlat
sbb
xor
cdq
xor
cmps
pop
rol
xor
dec
in
adc
fs
(bad)
mov
icebp
and
adc
lods
adc
cwde
push
add
dec
jns
fist
cwde
adc
inc
ins
xchg
leave
ss
daa
dec
pop
mov
add
dec
fsub
inc
pop
adc
cmps
xor
sar
pop
jbe
scas
adc
(bad)
dec
ja
add
push
inc
dec
cli
imul
pop
stos
retf
xchg
ret
xor
std
clc
adc
jns
sahf
lea
cmc
and
sub
mov
out
mov
retf
pop
cs
fcos
push
fwait
mov
test
mov
leave
or
jno
jecxz
(bad)
cmp
cmp
fcom
cmps
push
scas
into
test
fimul
xor
sbb
dec
idiv
data16
xchg
sbb
out
into
push
cmc
push
dec
mov
test
sbb
add
fsub
ins
xor
mov
imul
jmp
aaa
call
sub
and
push
repz
(bad)
stos
rcr
test
xor
mov
shl
xchg
arpl
test
mov
in
test
sti
aam
iret
je
xchg
pop
out
adc
jae
pop
cmc
retf
adc
repz
imul
adc
aad
fs
mov
outs
jecxz
jne
cmps
rol
in
push
inc
inc
shl
lahf
cwde
push
xchg
adc
or
mov
rcr
or
sti
jg
inc
add
call
cli
sbb
sets
bnd
cmp
pop
xchg
jmp
pushf
and
adc
xchg
ins
fiadd
adc
cmc
sar
and
js
add
js
mov
jbe
or
mov
scas
push
(bad)
mov
and
mov
int3
cli
outs
inc
rcl
push
and
test
ja
sbb
imul
sbb
dec
shl
inc
inc
popf
fdiv
xor
cli
add
cmc
push
xchg
xchg
fisttp
adc
les
scas
xor
adc
adc
out
bound
mov
fs
mov
cmp
inc
mov
outs
stc
outs
mov
in
sbb
jo
faddp
mov
sahf
sbb
mov
sub
adc
out
mov
add
cmc
sahf
movs
jae
xchg
clc
adc
push
xor
lahf
push
(bad)
sbb
sti
jne
pop
xchg
pop
fdiv
sub
jbe
mov
loopne
cld
inc
and
add
clc
in
pop
mov
add
in
in
fs
adc
sahf
sbb
mov
sub
cmp
clc
cmps
fidivr
(bad)
xor
lahf
je
daa
xchg
jmp
cmp
jmp
rcr
bound
(bad)
lock
data16
in
xchg
ins
repz
cli
loopne
ret
jae
shl
mov
jmp
inc
pop
cmps
mov
push
and
and
retf
push
mov
imul
nop
call
jle
dec
cld
jb
aad
mov
iret
ret
ret
sbb
ret
push
xor
and
sub
in
xchg
and
add
ret
and
jb
int3
inc
div
and
jnp
mov
xchg
xchg
pop
mov
jl
mov
sub
mov
mov
or
mov
mov
jbe
cmp
stc
clc
mov
mov
jl
movs
and
dec
(bad)
jno
adc
jge
cli
jg
fbstp
arpl
lock
enter
and
mov
rcl
pop
icebp
mov
popf
dec
pushf
imul
cmp
mov
jmp
and
cmp
rcr
xchg
leave
imul
xor
xor
or
mov
dec
retf
cdq
adc
in
mov
je
xchg
jle
ss
mov
loopne
js
mov
pop
or
xchg
inc
leave
pop
mov
ds
mov
fs
inc
mov
pop
jno
test
xchg
shr
xchg
fs
mov
xor
fistp
stos
aaa
add
sub
pop
fnstenv
xor
xchg
jge
sbb
stos
js
sub
push
repnz
jmp
add
sub
sub
scas
jecxz
jl
mov
push
or
cdq
jmp
jae
push
std
add
leave
retf
cmp
sar
out
out
in
add
call
add
jmp
out
and
push
jb
mov
pop
jo
sahf
outs
int
idiv
dec
push
push
cmp
out
jmp
pop
mov
das
ins
(bad)
jnp
ret
jmp
pop
cld
mov
jnp
xchg
mov
xor
push
jb
adc
xor
in
cld
arpl
dec
xchg
ret
mov
cld
fnstcw
xor
sar
xchg
jns
push
xor
leave
bound
std
das
push
mov
int
push
add
fadd
enter
fistp
cmps
cs
fs
push
mov
add
scas
dec
popf
sub
ja
lods
push
iret
inc
dec
aam
mov
inc
repnz
jl
call
icebp
mov
stos
mov
(bad)
add
movs
mov
ret
inc
imul
mov
les
dec
or
les
retf
sub
adc
sbb
dec
mov
arpl
jecxz
ret
fistp
int3
xchg
mov
mov
int
pop
test
ss
add
jl
xchg
mov
mov
sub
mov
shl
dec
cmp
pop
mov
xor
pop
mov
jmp
pop
xlat
push
or
xchg
(bad)
pop
retf
shl
xor
mov
(bad)
fisub
inc
daa
push
mov
div
std
aaa
xlat
cli
jg
outs
pushf
in
out
test
jmp
dec
pop
movs
scas
dec
loop
push
and
xchg
clc
sub
inc
mov
retf
je
inc
pop
test
and
jne
(bad)
jmp
xor
xchg
cmp
pop
outs
mul
arpl
(bad)
pop
ins
icebp
das
jg
shl
xlat
mov
(bad)
std
inc
pop
(bad)
add
cmp
stos
fcomp
in
pop
inc
inc
idiv
test
fmulp
push
fcmovnu
(bad)
daa
push
sahf
retf
mov
scas
pop
jbe
imul
mov
rol
test
mov
cmp
push
ret
jmp
dec
loop
out
test
dec
mov
(bad)
xchg
int3
dec
inc
stos
jge
push
int
push
test
dec
jo
mov
jo
jg
mov
mov
sti
and
adc
and
mov
sbb
add
xchg
call
(bad)
push
and
mov
xor
push
loope
inc
aaa
sbb
dec
add
stos
scas
bound
fs
jle
add
nop
or
ret
arpl
sub
sahf
and
repnz
pushf
fcomp
xchg
inc
push
mov
ja
icebp
dec
mov
sbb
call
add
nop
sbb
pop
mov
mov
sub
or
push
loope
sbb
cs
add
clc
inc
cli
outs
jl
adc
or
pop
adc
not
ins
push
or
dec
adc
lahf
das
mov
xlat
mov
jl
inc
out
ret
push
pop
jecxz
inc
mov
adc
aas
sub
loope
out
adc
push
cmps
test
sub
in
scas
movs
push
das
mov
sbb
ret
cmp
sub
mov
test
aaa
je
lods
aaa
mov
sbb
scas
mov
in
xor
push
fisub
jl
loope
loope
sub
jge
xor
push
cwde
push
xor
and
add
ret
push
test
or
jns
pop
mov
jle
dec
and
popf
add
pop
or
jg
fld
mov
call
enter
xchg
hlt
call
mov
adc
sub
sub
inc
pop
cmp
sub
mov
mov
cmp
cli
retf
popa
aad
movups
mov
cwde
or
add
push
inc
mov
cmp
aaa
movs
gs
aas
jne
jnp
ret
adc
inc
fwait
mov
jb
nop
repz
es
xor
lods
out
ja
das
cmp
outs
shl
idiv
and
fiadd
out
sub
add
(bad)
push
push
ficom
call
imul
and
pop
in
(bad)
cmc
stc
inc
mov
outs
mov
popa
xchg
hlt
push
jmp
mov
jmp
mov
mov
adc
imul
mov
mov
adc
sti
aas
ja
add
cmp
jae
lds
sbb
hlt
push
sub
popf
fwait
xchg
sbb
pop
inc
mov
mov
out
outs
loop
int3
js
mov
jmp
push
ds
enter
add
out
popf
lds
test
cli
shl
(bad)
bound
dec
fldenv
mov
vmovddup
mov
repz
adc
mov
cmps
lods
(bad)
mov
int3
sti
les
jg
push
daa
mov
test
iret
out
aam
hlt
xor
pop
repz
in
cmp
jnp
push
cdq
jbe
stc
cmp
or
shl
xchg
test
add
ret
adc
jno
int3
int3
pusha
xchg
leave
enter
div
and
push
je
mov
push
cmp
aad
out
inc
imul
leave
loopne
jl
adc
pop
inc
cwde
enter
sub
mov
pop
or
jae
mov
inc
jno
sub
out
push
sub
jp
ficomp
int
mov
xor
in
jp
out
pop
ss
mov
arpl
jno
shrd
jl
popa
test
cmp
cmp
loope
int3
mov
fistp
out
xor
pop
vpcmpeqb
ret
sbb
jo
neg
pop
sbb
jmp
pop
fimul
or
repz
sub
aam
out
push
sbb
pusha
fwait
jne
icebp
xchg
aaa
and
inc
repnz
add
repz
and
jecxz
add
mov
mov
xchg
sub
gs
fs
sti
addr16
push
bound
jae
xor
aas
mov
mov
adc
imul
jecxz
int
das
(bad)
imul
add
movs
adc
inc
call
lock
sub
cmp
loop
ret
mov
fsubp
(bad)
pop
sar
cmc
jl
fs
repnz
ret
xchg
and
dec
cmps
int3
sub
add
sub
adc
or
pusha
test
adc
ror
adc
repz
cmp
jl
inc
xchg
loopne
push
pop
pop
repnz
out
xor
mov
jno
gs
mov
pop
and
out
jl
nop
in
jno
jae
mov
sub
mov
mov
sbb
pop
push
adc
bnd
xchg
das
hlt
ins
adc
popf
cs
sbb
imul
add
arpl
cli
sbb
mov
mov
mov
fisub
add
jbe
dec
(bad)
out
loope
sub
fs
test
adc
cmp
jmp
or
or
repnz
ffreep
mov
int3
mov
mov
or
lea
cwde
mov
push
in
push
mov
mov
fcomp
inc
inc
pushf
or
mov
mov
lock
push
out
sub
inc
or
sbb
xadd
repz
outs
and
mov
icebp
cwde
mov
js
and
outs
mov
sub
cmp
dec
stos
aad
xor
sbb
sbb
xlat
inc
fadd
inc
ror
arpl
xor
lods
mov
daa
xor
adc
je
jge
ins
mov
jns
pop
mov
cmp
inc
jmp
cmps
and
jo
cmp
xor
cmp
adc
add
lock
nop
cmps
imul
push
or
mov
pushf
popf
mov
mov
add
and
(bad)
sub
outs
mov
iret
push
jge
jno
fld
cmp
mov
cmps
cmp
int
dec
xchg
mov
cmp
mul
shl
mov
add
xor
(bad)
push
out
mov
mov
cwde
scas
gs
mov
outs
daa
inc
or
mov
and
sbb
jb
mov
into
xor
mov
mov
(bad)
mov
sbb
dec
dec
stc
(bad)
stos
addr16
mov
mov
js
and
cmps
pop
mov
mov
or
vdivpd
cmps
sar
int3
add
aas
ins
mov
clc
push
inc
(bad)
popa
rcr
ja
jmp
mov
sub
out
neg
dec
in
icebp
jecxz
lahf
xlat
scas
leave
mov
or
jecxz
mov
cmc
into
dec
xor
repnz
sahf
mov
stc
adc
mov
jo
sub
jmp
out
repnz
adc
and
or
jb
add
retf
push
adc
mov
retf
sbb
pop
sahf
std
arpl
retf
mov
cs
fdiv
xor
ret
xchg
out
aad
jle
ror
sbb
test
aam
(bad)
mov
fcmovne
popf
shl
cmp
in
inc
repz
or
cmp
ins
fiadd
retf
push
push
sub
arpl
sub
cdq
addr16
icebp
(bad)
cmp
popf
adc
dec
jl
adc
jle
jno
test
data16
jmp
jle
pop
sub
addr16
jbe
in
loopne
push
mov
jmp
int
mov
repnz
retf
outs
daa
enter
(bad)
inc
sub
jmp
lock
int
scas
add
test
outs
adc
(bad)
aam
mov
mov
shr
inc
(bad)
cdq
push
(bad)
xor
jg
mov
stos
mov
push
inc
sti
dec
cmp
nop
loopne
dec
enter
xor
push
test
call
sti
cmp
iret
or
and
xor
(bad)
pop
inc
dec
ret
cmps
jnp
mov
and
mov
and
cmp
push
sub
sub
pop
jne
stos
dec
rcl
inc
mov
xchg
add
add
push
lahf
pushf
shl
(bad)
adc
call
push
sub
cmc
mov
cmp
xor
fstp
push
sbb
pop
dec
add
je
lahf
cmp
jae
into
retf
rcl
pop
push
fbstp
stc
inc
cmp
int3
inc
push
xor
xor
test
es
mov
outs
jo
call
cmp
punpckhbw
into
dec
in
aas
jecxz
div
outs
lock
ret
jo
jno
push
push
add
inc
inc
mov
sbb
sub
loopne
push
mov
cmp
add
mov
ror
js
out
dec
div
pusha
add
add
stc
mul
add
push
or
(bad)
fcom
add
lods
ds
xor
dec
xchg
xor
push
xor
sub
test
pop
xor
dec
jecxz
shl
sub
ror
div
dec
pop
sub
sbb
test
mov
add
mov
ficom
push
mov
fdivr
out
jmp
cli
pusha
mov
pop
es
(bad)
mov
std
test
or
jp
jbe
xchg
loopne
movs
jge
dec
out
xchg
dec
sub
or
mov
push
(bad)
paddsb
push
cwde
fs
out
and
rol
mov
loop
aad
xlat
fnsave
test
scas
(bad)
mov
xchg
pop
idiv
scas
jnp
jne
aas
sahf
pop
mov
pop
sbb
and
inc
dec
jmp
mov
paddusw
mov
shr
pusha
pop
rol
aam
dec
test
add
mov
retf
inc
jl
test
adc
jne
hlt
call
jle
movs
xchg
ja
fnstenv
mov
arpl
cmp
fisttp
or
cmp
pop
leave
and
mov
xchg
sti
jmp
cmp
push
lods
retf
xchg
push
enter
jp
cmp
push
movs
jl
and
retf
aaa
jae
jb
popf
sbb
inc
not
cmp
pop
jno
dec
jmp
lds
add
stos
ror
ins
enter
push
js
aad
xor
xchg
in
mov
outs
inc
ins
lock
daa
cmps
dec
cmp
das
and
mov
inc
pop
iret
xor
fadd
xchg
cmc
pop
fbld
scas
pusha
pop
add
shl
dec
aas
fdiv
retf
repz
(bad)
ss
into
inc
push
and
jle
imul
push
test
out
retf
push
in
sub
add
popa
cmp
call
add
fs
ret
int
and
jne
popa
mov
in
bound
lea
leave
mov
and
inc
(bad)
leave
push
(bad)
ret
sar
jne
xchg
mov
lods
pop
jle
data16
mov
cmp
repz
lea
enter
cld
xchg
mov
int3
(bad)
sub
shr
dec
(bad)
(bad)
sub
jns
xchg
in
add
repnz
xchg
fisttp
cld
rol
pop
fidivr
cli
cld
ret
mov
mov
das
jae
loop
pop
retf
inc
cwde
repnz
dec
sbb
mov
lods
cmps
and
push
xchg
xchg
jne
pop
retf
(bad)
not
test
mov
mov
dec
dec
cmp
movs
invd
popa
nop
mov
ja
xlat
jmp
lods
inc
das
loope
outs
frstor
adc
arpl
xchg
fcomp
fldenv
leave
int
push
push
or
call
repz
out
ins
sub
adc
mov
adc
in
(bad)
out
push
sbb
mov
mov
mov
(bad)
retf
xor
push
adc
or
rcl
retf
outs
ss
jb
and
(bad)
loop
cld
cmp
out
fild
dec
(bad)
in
outs
aam
push
(bad)
jmp
mov
lock
adc
gs
fistp
dec
dec
pop
jle
jmp
mov
leave
adc
fs
into
in
call
mov
sahf
rol
addr16
jg
(bad)
or
(bad)
mov
xor
dec
inc
xor
(bad)
push
adc
add
jns
xchg
xchg
stos
sbb
sbb
(bad)
dec
jg
fldenv
sub
sbb
pusha
aam
ds
(bad)
shl
mov
sub
(bad)
lods
pop
cmc
fidivr
sbb
into
xor
pop
cmps
ret
iret
mov
jb
lea
stc
push
stos
in
mov
(bad)
je
dec
repnz
xor
sti
push
in
jne
sbb
xchg
add
aaa
stc
clc
(bad)
sbb
sbb
fadd
vsubpd
(bad)
int3
mov
cmp
sar
bound
jl
lea
ret
pop
or
sbb
nop
sbb
in
int3
clc
and
stos
dec
mov
push
xchg
int3
push
ins
ins
in
sahf
or
cld
fs
out
in
loope
mov
je
jmp
sub
icebp
adc
and
xor
mov
fs
add
sub
xor
ja
lea
push
fisttp
aaa
or
dec
mul
mov
hlt
ror
inc
out
mov
mov
mov
sbb
fbstp
mov
and
xchg
(bad)
popa
mul
sti
(bad)
out
adc
and
(bad)
out
push
rol
rcr
and
mov
les
(bad)
ret
pop
hlt
mov
inc
ds
mov
jmp
push
or
xor
jl
fcmovu
daa
dec
xlat
push
in
outs
mov
pop
dec
and
push
pushf
movs
sub
sub
or
sbb
(bad)
les
mov
outs
(bad)
or
pop
sub
pushf
add
inc
jns
and
or
mov
pop
out
sbb
push
retf
sar
stos
adc
jge
fwait
mov
and
or
xchg
push
and
loop
xchg
fcomip
jbe
dec
xor
stos
loope
jns
add
pop
jns
push
test
or
cmp
cmp
ins
dec
cld
xor
jae
adc
adc
pushf
(bad)
jo
imul
rcl
aad
les
push
in
jae
jo
and
sahf
(bad)
pop
cmp
test
outs
divps
cmps
cmps
and
xchg
sub
test
test
dec
jmp
cli
scas
xor
sbb
movs
imul
popa
mov
cdq
and
push
mov
jae
add
sub
outs
lahf
xor
xchg
add
sub
jnp
xlat
rcl
push
inc
loope
push
es
adc
imul
jge
fsubr
test
mov
cld
jecxz
fincstp
shl
cmp
sub
mov
pop
enter
mov
adc
push
push
repnz
jge
into
dec
sub
mov
or
in
xchg
fwait
call
dec
inc
ds
mov
into
pop
arpl
aas
(bad)
fsub
sbb
pop
adc
(bad)
mov
scas
add
jg
lods
pop
adc
ficom
push
dec
jg
cmps
das
ror
sub
cs
push
xchg
mov
loopne
push
jg
jge
mov
mov
(bad)
retf
sub
fisubr
dec
add
pop
mov
dec
cs
cs
xchg
out
xrelease
in
add
dec
retf
loopne
or
or
test
loop
cmp
mov
dec
pop
sar
iret
sbb
mov
fnstcw
adc
or
push
mov
xlat
mov
adc
sbb
xchg
pop
and
adc
gs
lahf
stc
pop
aaa
js
mov
sbb
jb
add
lods
movs
fiadd
adc
es
(bad)
adc
cmc
call
mov
in
xor
mov
fxch
ret
mov
rcl
std
fisttp
pushf
sub
stos
cs
ret
adc
inc
clc
dec
mov
bound
test
adc
push
xor
fadd
jg
inc
add
and
mov
test
hlt
push
adc
jo
pushf
stos
fst
pop
cmc
retf
je
out
xchg
lahf
scas
cmp
and
loopne
jp
xchg
xchg
call
sbb
add
pop
je
sbb
dec
mov
push
or
cmp
add
data16
cli
cmps
test
ficomp
movs
mul
sbb
pop
push
or
or
push
adc
inc
movs
mul
or
cmp
aad
icebp
mov
jecxz
jns
es
pop
push
rcr
jnp
nop
out
sub
bound
fsubr
jns
(bad)
sbb
shl
dec
xor
mov
mov
or
mov
adc
jmp
mov
cmps
das
loope
int3
mov
xor
inc
cmp
xchg
cmp
imul
or
mov
dec
es
mov
stos
aam
retf
aam
pop
sub
aaa
jns
sub
sbb
out
call
push
push
xor
fistp
inc
inc
iret
and
out
mov
lock
cmp
(bad)
push
adc
imul
(bad)
cmp
xor
mov
xor
push
sub
cmp
dec
test
dec
mov
data16
mov
call
xchg
pop
and
cmp
out
mov
jecxz
ins
jl
aad
stos
inc
dec
call
gs
push
xor
int3
mov
pop
cmp
xor
lea
pusha
jmp
mov
inc
test
jns
xchg
shl
pop
scas
push
cmp
adc
pop
test
mov
jg
jge
cdq
xor
out
jl
ins
or
cmp
jl
movs
pop
and
dec
sbb
in
and
mov
pop
cli
int3
mov
lea
push
add
popa
add
sti
or
or
xor
retf
xor
push
sub
mov
test
fdivr
jne
mov
je
test
adc
inc
mov
inc
cli
push
cld
sbb
aas
xor
test
sub
mov
xor
mov
push
mov
adc
sbb
std
cmp
mov
sbb
jmp
popa
pop
xor
xchg
mov
popf
ja
or
sbb
stc
mov
push
push
mov
cmp
mov
xor
lds
mov
dec
jg
dec
adc
ins
sbb
and
ins
lds
(bad)
mov
sub
(bad)
in
mov
fadd
jp
jo
mov
pop
mov
es
dec
sahf
jnp
fild
dec
iret
lods
mov
cmps
ds
xor
adc
mulps
movs
push
(bad)
movs
mov
xchg
and
mov
jb
dec
daa
fld
pusha
popf
push
sbb
cli
ins
jo
sub
jns
sbb
mov
jae
xchg
pushf
xor
sahf
and
or
jmp
adc
leave
je
ja
cmp
loope
bound
mov
mov
xchg
lds
cmp
pop
lods
mov
pop
shl
jp
and
gs
lahf
mov
jno
xchg
push
add
arpl
pop
in
dec
fbstp
aad
lods
xchg
or
mov
xchg
repnz
nop
push
jmp
and
cwde
pushf
sub
jbe
ds
std
dec
sub
int
xchg
or
jo
fmul
xor
addr16
add
cmp
jp
fnstsw
sbb
or
clc
dec
sbb
jmp
(bad)
mov
jmp
jge
jno
das
aas
jns
pop
mov
xor
xor
jecxz
fsub
data16
mov
sahf
retf
pop
es
(bad)
out
jmp
jnp
add
lea
aas
rcr
cwde
fmul
ja
les
in
jg
ins
inc
pop
mov
jge
scas
out
out
jns
sar
stos
pop
xor
jnp
sub
pop
mov
retf
loope
movs
add
(bad)
je
adc
ret
adc
mov
stc
arpl
pop
(bad)
mov
push
push
push
mov
push
jmp
inc
popf
add
xchg
cmp
pushf
or
push
int3
or
pop
fwait
movs
fild
dec
fsub
mov
mov
xor
clc
sub
(bad)
xchg
popa
inc
data16
mov
ds
cmp
mov
sub
test
out
cld
mov
call
aaa
aaa
aad
pop
push
cwde
mov
xchg
and
mov
aad
mov
loopne
int3
xor
or
dec
add
and
fwait
or
inc
lds
retf
rol
mov
in
push
pusha
pop
pop
stc
in
jmp
in
mov
cdq
pusha
popf
pop
(bad)
push
jge
inc
mov
lahf
fnsave
fwait
in
mov
das
rol
xlat
(bad)
mul
jp
(bad)
cli
mov
cmp
xlat
mov
xchg
cld
les
mov
pop
mov
nop
fs
test
and
out
scas
mov
test
xor
fist
xchg
fninit
jbe
fiadd
pop
xchg
cmp
ins
inc
inc
xor
mov
das
out
mov
into
ja
push
fcmovb
pop
mov
add
mov
or
add
sub
adc
push
ret
xor
out
fnstsw
xor
jmp
jmp
mov
stos
shl
aas
cmpps
fwait
outs
sar
repz
push
jg
call
ret
ins
pop
aaa
ins
inc
enter
mov
pop
adc
aad
sub
mov
push
(bad)
pop
add
or
(bad)
and
movlps
mov
neg
aas
xor
in
data16
in
dec
retf
adc
rcr
imul
jno
push
inc
mov
fs
mul
cmp
std
pushf
retf
xor
xchg
in
sub
aam
pop
shl
mov
jae
adc
imul
sbb
sbb
mov
sbb
push
lods
dec
xor
hlt
add
jmp
fdiv
mov
ror
aad
fldcw
mov
ins
in
sbb
lods
sbb
add
ss
mov
pop
sbb
into
cmps
hlt
sbb
mov
cld
push
in
cld
outs
fidiv
(bad)
lods
arpl
dec
dec
test
and
mov
out
mov
lea
stos
fisttp
pop
retf
pushw
sti
out
call
mov
sti
pop
jae
pop
push
or
xor
or
mov
shl
cmp
call
cwde
(bad)
dec
sub
mov
pusha
pop
aas
jo
jb
out
jmp
sbb
adc
int
dec
loope
sbb
lods
out
jp
movs
jmp
adc
push
jmp
stc
add
arpl
dec
sbb
sbb
jp
dec
pushf
or
xchg
(bad)
(bad)
mov
cmp
loopne
rol
cmp
mov
jecxz
fwait
ss
cmp
push
mov
sbb
inc
dec
push
xor
movs
aaa
jns
xor
arpl
mov
pop
xor
or
inc
push
in
mov
and
loop
popf
sub
mov
repz
sbb
stos
lahf
push
out
jno
fisubr
dec
(bad)
push
mov
fisttp
mov
sbb
xchg
cld
dec
in
jl
lods
aaa
pop
pop
xchg
fucompp
out
inc
popa
xchg
adc
push
jle
xor
movs
(bad)
rcr
and
test
mov
sub
jmp
push
mov
inc
jns
adc
ret
stos
jbe
jp
push
cmp
arpl
dec
and
lock
call
push
shr
add
dec
cmp
iret
dec
fucomip
jecxz
lods
dec
mov
jb
aas
adc
or
call
outs
sub
je
or
inc
outs
shl
pop
fild
lds
xchg
bound
aad
loopne
mov
addr16
sub
lock
add
and
fnstcw
push
sub
dec
(bad)
(bad)
jnp
or
test
dec
outs
imul
sub
xchg
inc
jecxz
cmp
gs
adc
iret
jb
inc
dec
mov
pushf
push
sbb
add
(bad)
pop
bound
int3
pop
cmp
xchg
inc
push
(bad)
cmp
jl
jnp
shl
mov
into
ins
sbb
inc
popf
fadd
div
clc
xchg
ins
add
push
jns
rol
jmp
mov
lods
cmps
adc
outs
enter
cmp
(bad)
rol
pusha
test
mov
cwde
inc
stos
fsub
out
hlt
js
int
jb
shl
sub
cmp
imul
sbb
iret
cmp
and
add
jnp
test
dec
push
mov
mov
(bad)
or
mov
mov
and
mov
les
pop
mov
bnd
and
xchg
jne
jbe
xchg
inc
pop
stc
or
pop
ror
jg
add
rcr
mov
push
push
lods
mov
pop
dec
mov
cmps
or
dec
hlt
mov
mov
and
push
mov
push
arpl
or
daa
test
xor
ins
jnp
mov
push
sub
inc
jp
mov
mov
adc
movs
std
jg
sub
mov
fcomp
loop
mov
js
adc
jno
stos
sbb
adc
std
cmp
sbb
nop
lds
xlat
push
movs
push
frstor
inc
stos
and
sahf
sbb
je
and
fisttp
mov
mov
mov
lock
gs
jmp
xor
aaa
mov
repz
xor
dec
mov
ret
cmps
shl
repnz
lahf
mov
sti
jmp
pop
inc
popa
in
jb
dec
in
jnp
ja
rcr
fwait
loopne
test
fist
or
pop
sbb
ss
mov
jbe
fadd
push
jns
xchg
sub
sub
push
lahf
pop
jnp
test
inc
(bad)
push
or
(bad)
and
add
xchg
(bad)
out
pop
les
cdq
xor
inc
test
dec
jmp
sbb
sar
adc
call
jmp
sbb
fldenv
out
mov
add
fsub
inc
sub
(bad)
in
fnsave
pop
clc
pop
and
pop
in
(bad)
sub
cmps
dec
fnstenv
push
(bad)
fwait
repz
mov
mov
clc
sbb
int3
push
test
clc
xor
or
sub
sub
test
fs
int3
mov
mov
push
sbb
shl
fild
xor
adc
add
movs
jns
call
pushf
cmp
enter
vpaddsb
outs
es
cmp
out
adc
scas
inc
cmp
pop
dec
push
in
(bad)
(bad)
out
push
or
pop
xchg
lds
out
pop
sub
int
int3
sbb
cmp
pop
push
pop
(bad)
inc
repnz
lss
pushf
sti
scas
cmp
or
mov
and
popa
(bad)
xchg
in
rcr
repnz
shl
sahf
bound
xor
jo
inc
lahf
sbb
sar
shl
jno
repz
retf
push
stc
pop
ficom
cdq
movs
push
cmp
in
or
std
mov
ds
and
push
in
dec
mov
mov
mov
push
test
pop
ja
sbb
call
sbb
ins
adc
push
pop
jnp
and
outs
loope
jns
xlat
int3
xchg
sti
push
pop
jbe
rcr
xchg
jb
je
clc
and
fisub
sbb
jmp
call
mov
pop
and
jb
cmp
pop
retf
mov
jbe
or
fild
nop
cmps
fnstenv
int3
mov
inc
stc
xchg
fwait
lods
inc
pusha
mov
cmps
mov
cmp
das
outs
pop
fisttp
inc
inc
dec
test
inc
or
psllw
mov
pusha
push
dec
dec
or
sbb
shl
leave
lds
movs
sub
and
cli
mov
pusha
in
jg
and
jmp
mov
pop
cmp
xchg
jg
out
cmp
xlat
out
rcr
lea
add
xchg
mov
jo
cmp
cmp
mov
push
lahf
imul
jl
add
test
add
xor
sahf
repnz
shr
loope
retf
adc
pop
les
jb
xor
inc
and
jnp
js
hlt
push
cmp
imul
pop
aad
inc
fldenv
sub
add
outs
adc
test
mov
test
data16
mov
shl
(bad)
fidiv
pop
(bad)
rcl
cmp
jae
fsub
out
push
mov
mov
dec
mov
stos
int
mov
sub
call
xchg
pop
loope
xor
jg
mov
pop
sub
push
nop
jecxz
jl
ins
ja
loop
mov
sahf
xchg
into
call
mov
and
faddp
pop
push
daa
addr16
aaa
into
int3
inc
pop
mov
dec
shl
push
imul
adc
fwait
jns
leave
popa
inc
icebp
ds
cmp
sahf
xor
pop
jns
jno
daa
pop
mov
jmp
dec
mov
push
mov
fwait
sar
lock
loopne
nop
mov
cmp
or
jb
scas
mov
add
xor
scas
xchg
inc
loopne
add
add
(bad)
out
mov
popf
xchg
xchg
imul
retf
adc
nop
push
loopne
mov
aaa
loopne
xchg
add
fs
ins
mov
aaa
leave
jp
push
push
lea
mov
pop
aam
add
dec
outs
jb
sub
mov
daa
dec
cmp
call
jmp
inc
int
idiv
sub
cmovo
lock
sbb
xor
bound
inc
pop
push
add
cmp
mov
(bad)
cmps
lahf
dec
ret
cmp
arpl
imul
aas
into
inc
xor
xchg
scas
pop
xchg
jne
mov
inc
pop
xchg
retf
cmp
aas
int3
addr16
mov
and
shl
fstp
xchg
pushf
rcl
enter
add
adc
ins
imul
mov
loope
jbe
cmp
ja
mov
xor
sub
je
xor
dec
mov
mov
or
jmp
retf
outs
and
jns
popf
nop
mov
xchg
adc
(bad)
pop
cmc
inc
ins
pop
mov
popa
mov
pusha
sub
bound
aam
xor
pop
xchg
push
test
adc
aam
loope
mov
jg
outs
adc
inc
adc
push
jecxz
lods
jnp
arpl
dec
dec
in
inc
pusha
ja
in
mov
push
sbb
xchg
imul
pop
mov
js
shr
out
dec
call
jge
test
or
jae
cmps
sub
add
sbb
popa
jmp
stc
jo
int
xor
adc
ja
sar
popa
add
imul
cwde
shr
mov
out
test
jnp
and
das
and
mov
mov
adc
or
mov
js
repnz
cwde
imul
ret
shr
inc
outs
bound
mov
push
inc
add
outs
mov
cwde
push
in
mov
and
data16
pushf
push
and
mov
fcomp
or
shl
sub
rcl
cmp
inc
lods
mov
or
xor
aam
outs
fbstp
div
ror
cmp
retf
add
sbb
pop
mov
out
sbb
add
ret
jns
sub
scas
mov
cmp
jge
or
out
push
cmps
inc
xor
mov
sbb
fadd
push
jne
adc
inc
or
xor
jnp
fwait
arpl
mov
mov
dec
dec
xor
push
popa
sbb
cmps
jl
enter
jmp
lds
or
(bad)
fwait
adc
mov
adc
imul
xchg
or
cwde
lods
push
imul
imul
imul
mov
fiadd
inc
and
dec
mov
scas
fst
nop
call
inc
sub
push
push
test
cmps
mov
ja
out
mov
mov
sahf
pusha
pop
add
dec
shr
add
adc
clc
xor
sub
dec
mov
movs
sbb
add
push
retf
cmp
minps
out
sbb
push
xor
das
cs
pop
(bad)
mov
in
ret
mov
daa
mov
adc
mov
ins
ret
jmp
in
jnp
in
xchg
daa
push
cmp
es
xchg
inc
add
inc
pusha
es
cmp
into
cmp
cli
(bad)
fcmovnbe
mov
ficomp
mov
mov
std
add
(bad)
cmc
sub
or
nop
inc
outs
jl
dec
mov
das
push
jbe
dec
push
retf
fimul
cmp
push
xchg
loope
add
lock
lods
jne
add
pop
dec
fild
test
jge
xor
(bad)
mov
or
clc
mov
sub
sub
xor
aas
pop
cdq
inc
je
sar
mov
inc
push
xor
iret
cdq
xor
jae
add
jge
int
test
into
xor
in
ret
mov
sti
ja
push
inc
xchg
cmp
mov
out
mov
test
xchg
jg
movs
in
rcr
xchg
sbb
xor
hlt
xchg
add
add
dec
xchg
nop
sahf
pop
pop
fidiv
scas
dec
push
sbb
adc
pop
inc
jp
fwait
sub
sbb
or
das
push
(bad)
mov
pop
xor
hlt
(bad)
rcr
repz
lods
mov
dec
mov
xor
push
mov
stos
bts
dec
push
xchg
xor
fstp
mul
in
adc
cmps
mov
test
fld
test
xchg
je
test
sub
mov
push
(bad)
daa
inc
mov
lock
pop
add
cmp
stos
movs
imul
dec
dec
aas
popa
ficom
pop
(bad)
repnz
dec
shl
dec
cmc
js
outs
out
lahf
jno
or
shl
bswap
stos
and
mov
dec
cmps
out
inc
lds
dec
popa
mov
movs
pushf
in
neg
call
(bad)
jbe
ja
inc
clc
cdq
cmp
push
push
test
mov
stos
sbb
lods
pop
push
sbb
pusha
inc
add
lea
push
rol
mov
test
xor
add
mov
out
js
push
xchg
adc
int
jo
mov
mov
fwait
ds
jge
push
mov
retf
sub
inc
test
pop
ficomp
sbb
lods
retf
icebp
imul
jns
aas
les
jl
call
push
push
jle
pop
bound
inc
mov
fsubr
push
mov
xor
test
push
iret
cwde
fistp
loop
add
es
pop
or
es
lock
xchg
and
pushf
cmps
stos
movs
aam
inc
arpl
js
int
jecxz
(bad)
in
(bad)
pop
int
or
add
add
xor
sbb
and
pop
xchg
cmp
gs
in
add
test
test
or
push
pop
out
dec
inc
or
pop
jno
mov
xor
inc
lahf
jae
inc
js
rcr
mov
inc
adc
adc
dec
mov
in
sub
sbb
push
aam
jle
add
or
and
imul
pop
dec
sub
and
ins
stc
out
add
and
jge
test
lods
add
(bad)
sbb
mov
xchg
or
and
aad
xor
mov
dec
aas
psubsb
rcr
rol
pusha
retf
dec
jno
pcmpgtb
out
xchg
sbb
xchg
fdivr
cmp
(bad)
sbb
push
std
adc
movs
adc
adc
and
fcmovne
xor
xchg
(bad)
loop
sbb
rcr
cld
push
stos
scas
test
fs
mul
data16
mov
popf
loope
daa
mov
loopne
xchg
adc
jb
lods
in
sbb
iret
js
pop
mov
in
adc
or
cld
xor
shl
mov
fs
mov
out
push
(bad)
xchg
sti
jle
or
inc
pushf
mov
in
stos
cmp
jmp
(bad)
mov
push
std
mov
inc
mov
nop
outs
mov
mov
pushf
xchg
pop
ficom
repnz
jge
retf
push
or
stc
ret
xor
pop
mov
mov
pop
mov
les
fld
xchg
add
xchg
mov
out
xor
sub
sub
add
inc
test
jg
cmp
adc
inc
dec
xor
or
mov
push
mov
pop
into
push
jp
ins
dec
call
fsub
inc
js
mov
sbb
push
test
pop
sti
cmp
in
lods
repnz
scas
pop
out
pop
in
add
sahf
xchg
or
add
adc
mov
into
rcr
fild
sbb
push
(bad)
js
sbb
pop
jae
pop
ins
cmp
push
adc
in
xchg
enter
ins
scas
push
mov
xchg
sbb
jnp
pop
jbe
jbe
(bad)
and
in
sbb
mov
ins
lock
mov
movs
(bad)
fs
inc
xor
cmp
push
sbb
mov
aam
adc
mov
pushf
xchg
and
shl
jl
jne
bound
outs
mov
pop
inc
inc
dec
pop
mov
addr16
imul
pop
popf
mov
lahf
cmp
dec
push
jns
lahf
mov
push
dec
push
xchg
and
repnz
(bad)
sar
aad
addr16
mov
ret
iret
xchg
sub
mov
(bad)
popa
scas
(bad)
xchg
push
pop
or
mov
scas
mov
mov
test
in
mov
out
imul
call
test
test
outs
in
aam
pushf
rcr
push
inc
jns
ror
std
mov
push
pusha
jl
xor
sub
push
cs
cdq
pusha
inc
or
imul
enter
jl
adc
inc
xchg
int3
enter
in
or
call
test
pop
or
jg
fdivr
mov
imul
arpl
arpl
jne
cmp
sbb
dec
lods
std
fld
xchg
or
inc
mov
js
inc
xchg
pop
push
clc
mov
mov
push
out
pop
(bad)
sti
cs
jl
retf
mov
sbb
cmp
lods
pop
(bad)
xchg
scas
cmp
cmps
add
mov
dec
les
mov
punpcklbw
scas
lahf
retf
xlat
jnp
into
lods
push
popf
nop
cmp
test
inc
bound
and
dec
add
out
xor
cmps
cmps
test
or
shl
jmp
popf
ss
xchg
or
xor
sbb
das
sbb
ret
or
xor
jmp
in
mov
jecxz
push
xor
jle
cld
ss
sbb
xor
sahf
test
sub
adc
ins
xchg
dec
popa
shl
movs
gs
adc
pop
inc
mov
leave
sub
cdq
loope
rcl
and
mov
mov
adc
jmp
test
rol
jge
sbb
test
inc
std
push
dec
sbb
cmp
dec
lods
and
fwait
les
sar
mov
movs
sub
scas
jne
loop
gs
add
pop
loopne
out
int3
or
xchg
adc
outs
lock
sar
xor
lods
inc
dec
add
jb
loope
inc
xlat
jp
popf
sahf
aaa
xor
scas
xor
jle
lods
jae
clc
aas
inc
imul
or
pop
fisttp
adc
cmps
cld
aam
cwde
loope
ficom
leave
ds
pop
pushf
icebp
jge
(bad)
jmp
sti
cmp
cmc
repz
addr16
lea
sub
jle
aad
cdq
mov
wrmsr
push
cmp
ins
mov
loop
out
retf
ja
and
jne
sbb
out
nop
sub
outs
or
repz
or
std
cmp
sub
ds
call
pop
mov
sbb
rcr
mov
ja
(bad)
xchg
scas
sahf
inc
mov
or
jg
inc
mov
cmps
ins
dec
popf
leave
sub
ror
inc
das
iret
add
je
(bad)
pop
dec
(bad)
add
out
or
mov
push
jae
inc
and
pop
mov
jg
test
mov
jg
call
xchg
xchg
lods
adc
outs
js
mov
out
sbb
push
repz
mov
fsincos
xchg
enter
push
mov
(bad)
and
(bad)
fisub
leave
lea
sbb
es
dec
les
jne
mov
pop
retf
xchg
cmp
popa
out
jmp
pop
adc
mov
jp
arpl
and
jno
lahf
or
sbb
stos
shl
mov
push
or
pop
mov
out
jb
pop
aad
dec
cdq
lea
push
mov
xor
xchg
outs
cmp
mov
call
inc
push
cmps
push
loopne
jb
cmp
sbb
dec
cmp
out
(bad)
mov
test
dec
bound
bound
retf
jg
dec
mov
sar
stos
clc
jae
add
push
gs
rol
dec
jg
lds
mov
dec
mov
mov
jmp
add
test
inc
jmp
repz
cmp
mov
jno
adc
ja
xchg
jle
jnp
pop
ins
ret
mov
xchg
adc
test
outs
push
pop
xlat
or
dec
mov
push
pop
xor
jbe
gs
or
sub
mov
cmp
sbb
fwait
pusha
call
pop
ret
push
dec
adc
scas
popf
jbe
leave
sub
retf
pop
cmps
cli
aad
fwait
mov
pop
mov
retf
add
hlt
add
dec
clc
adc
jg
pop
add
retf
fs
popa
cmp
int
xchg
stos
(bad)
mov
nop
mov
jo
scas
add
or
dec
or
in
cli
adc
repz
(bad)
pop
push
std
in
and
add
into
fst
mov
sbb
in
or
jne
jmp
pop
stos
push
ins
push
or
push
push
loop
push
sbb
int3
lds
fistp
dec
cmp
ja
call
dec
push
stos
mov
xchg
xor
test
jae
xor
ss
hlt
jg
sahf
out
movs
addr16
mov
add
dec
aas
std
(bad)
mov
ja
(bad)
xor
mov
out
mov
clc
and
push
jmp
xor
xor
popf
aaa
push
rcr
xor
rcl
adc
sbb
mov
mov
dec
cmp
lock
(bad)
sbb
in
adc
(bad)
dec
scas
not
push
and
and
add
inc
pop
xor
sub
or
push
repnz
jg
adc
hlt
jle
ror
adc
test
pop
sbb
fcomp
inc
add
and
ss
push
cli
pop
daa
mov
in
and
aam
adc
push
scas
and
or
test
sbb
sub
push
xchg
pop
in
nop
cmp
lds
inc
and
xchg
mov
bound
or
dec
aas
xchg
sub
out
add
addr16
mov
imul
pop
sar
(bad)
cdq
pop
lods
stos
hlt
test
pop
xor
pop
mov
les
adc
cmc
push
xchg
sub
in
lods
out
ror
imul
pushf
mov
xor
sbb
ss
xchg
icebp
sti
movs
jmp
daa
jns
push
inc
add
xchg
cmp
inc
popa
or
mov
mov
xchg
mov
int3
or
sbb
pop
ss
xor
ins
inc
cmc
inc
not
sub
call
jbe
cmp
je
push
lea
xor
cmp
out
mov
dec
push
cmp
mov
jbe
inc
jl
mov
iret
popa
sar
inc
push
(bad)
push
js
fwait
cdq
mov
je
out
and
pop
jmp
clc
movs
imul
stos
aas
jecxz
jbe
push
idiv
(bad)
xchg
mov
outs
add
sub
adc
mov
and
lahf
adc
out
in
sbb
mov
ror
pop
aam
rol
fistp
nop
(bad)
and
arpl
daa
sbb
push
lds
mov
mov
test
dec
les
push
enter
mov
or
pop
adc
jnp
push
mov
aad
xchg
int3
repnz
adc
jle
or
lock
adc
(bad)
rcr
jns
neg
pop
sub
push
mov
adc
punpcklbw
sbb
xlat
sbb
fbstp
dec
shl
es
mov
adc
mov
mov
rcr
and
inc
cmps
in
push
sbb
jp
xor
push
and
retf
xchg
or
pop
aad
xchg
fisub
not
movs
pop
mov
rol
mov
(bad)
mov
sub
pop
mov
cwde
mov
jl
inc
sub
loop
lods
xchg
cwde
dec
push
les
ins
dec
pop
out
push
cmp
retf
mov
xchg
out
(bad)
mov
cmps
inc
sbb
push
and
aam
scas
cmps
dec
jmp
sub
mov
mov
jge
sub
test
mov
cmp
xchg
sub
mul
scas
shl
push
mov
pop
push
sub
pop
mov
cmps
outs
imul
add
mov
(bad)
fcom
mov
xlat
fdivrp
loope
lea
xchg
xor
mul
jp
lods
dec
push
mov
xchg
and
sbb
jns
push
xor
dec
lea
cmp
inc
rol
adc
cmps
mov
and
fs
sbb
mov
pop
movs
push
retf
fisubr
lods
cs
xchg
fsubr
js
and
sub
icebp
pop
scas
xor
sbb
xor
mov
xor
fiadd
popf
or
xor
pop
xchg
mov
inc
sar
mov
mov
(bad)
push
lock
xchg
lds
mov
ins
sti
dec
movs
push
ret
xlat
mov
or
test
neg
jne
out
xchg
in
cld
pop
scas
inc
cmp
imul
cmps
popa
lds
cld
pop
scas
faddp
in
xchg
inc
not
inc
mov
ins
mov
fimul
dec
fidivr
add
dec
retf
outs
fwait
inc
sbb
jle
or
jge
daa
aam
dec
xchg
sub
xor
pop
sub
dec
fcom
mov
je
das
mov
add
dec
cmp
cmp
jo
mov
aaa
iret
mov
mov
mov
inc
iret
inc
(bad)
les
scas
fcomp
xchg
fwait
loopne
mov
dec
xchg
inc
fadd
(bad)
sbb
push
loop
mul
pop
ret
icebp
repz
fstp
fnstsw
mov
outs
fcom
inc
pop
xchg
mov
inc
mov
cli
popa
movs
push
rcl
ins
sub
adc
dec
sbb
or
pusha
adc
sbb
push
or
mov
and
aaa
mov
sub
adc
sbb
or
popa
push
popa
inc
adc
aad
mov
icebp
out
int
das
jb
xor
stos
ins
adc
adc
and
inc
or
ror
cmp
dec
pusha
cld
ret
adc
dec
inc
jle
fmul
push
fwait
jmp
out
xchg
enter
loop
xor
(bad)
fwait
sbb
loope
pushf
or
sbb
cli
retf
sbb
or
pop
in
int3
ins
loop
push
or
adc
mov
(bad)
out
inc
fistp
mov
mov
jge
(bad)
mov
(bad)
(bad)
adc
push
cli
push
fisttp
jns
push
cs
int
inc
cld
pop
(bad)
sub
sub
mov
jle
mov
call
sar
mov
(bad)
loop
dec
xor
cmp
sub
mov
or
cwde
push
xchg
pop
sub
test
loope
jl
aas
rol
test
pop
sbb
daa
loopne
pop
dec
xchg
into
mov
test
xchg
fwait
xor
mov
mov
mov
push
jmp
js
stc
dec
adc
xchg
mov
mov
cmp
pop
cdq
daa
daa
repnz
inc
jg
leave
lods
dec
or
and
sbb
xor
push
dec
xor
xchg
dec
pop
stc
mov
(bad)
aam
sub
imul
pop
mov
fistp
repz
jmp
repz
jae
into
ins
(bad)
daa
popa
sahf
(bad)
add
loope
and
sahf
std
cmp
sub
rcr
adc
outs
stos
add
adc
and
jl
mov
or
test
sub
sahf
mov
sti
push
into
mov
push
adc
and
pusha
sub
jmp
aaa
pushf
mov
add
add
jg
out
jle
xor
dec
ds
mov
mov
cdq
stos
in
ss
fisub
gs
ret
sub
mov
sub
movs
out
fdiv
cld
cmp
sub
dec
mov
pop
rol
retf
mov
inc
inc
ins
xor
stc
sete
inc
pop
pop
push
movs
cmp
(bad)
repnz
jb
shl
sti
pop
adc
outs
addr16
imul
ja
test
lock
in
jns
inc
cdq
sbb
clc
sbb
mov
dec
push
pop
mov
mov
mov
mov
mov
aad
or
movs
pop
sub
cmc
lods
les
scas
xchg
imul
test
mov
and
push
sti
cmp
stos
lds
mov
popf
sti
pop
aas
dec
push
mov
jl
stc
sar
lea
jmp
into
shr
push
je
push
mov
js
lahf
jae
xor
pop
(bad)
pop
sbb
test
pop
mov
mov
rol
xchg
or
jg
and
out
push
and
sub
add
imul
sbb
sub
loope
sbb
and
and
ret
jnp
js
add
cli
daa
cmp
arpl
movs
adc
mov
lods
dec
enter
fild
(bad)
in
rcr
ds
and
mov
mov
jl
lea
mov
fsubr
daa
int
xor
es
add
dec
push
lods
mov
fwait
push
jg
fmul
addr16
movs
push
jne
lds
and
stc
jne
sub
rol
or
imul
mov
stc
dec
mov
mov
out
mov
or
lahf
movs
inc
add
jbe
inc
mov
mov
push
xchg
test
shl
xchg
pushf
pop
loopne
ror
shl
jle
adc
push
adc
push
and
(bad)
cmp
ror
shl
mov
out
jne
sub
out
mov
data16
shl
fnstenv
shr
inc
xor
rcl
cmp
xor
add
jns
mov
daa
cmp
stos
adc
ret
fistp
mov
sbb
jl
add
into
xchg
int3
dec
cmps
fsubp
and
jl
xacquire
dec
mov
or
aam
mov
js
mov
jmp
in
dec
jmp
fldl2e
rol
(bad)
lock
call
mov
add
rol
add
std
dec
test
aaa
aaa
sub
or
and
int3
or
test
or
or
fistp
fs
stos
push
and
push
not
xchg
push
inc
xor
mov
mov
outs
loopne
inc
movs
xchg
add
cs
jl
arpl
sub
int
stc
jbe
sbb
jmp
das
push
push
call
xchg
(bad)
cdq
leave
cs
inc
sbb
dec
mov
sub
imul
add
test
dec
in
mov
cmp
hlt
arpl
mov
jne
and
out
test
sbb
xor
mov
pop
adc
adc
or
sti
sbb
dec
inc
loopne
fsub
or
jg
jmp
aas
xchg
add
call
push
xchg
lock
scas
ja
outs
out
out
frstor
ret
dec
jmp
adc
lods
pop
mov
push
cs
fadd
or
outs
comiss
pop
cmc
dec
ins
(bad)
pop
js
sub
dec
jecxz
inc
shl
xor
xchg
push
hlt
sub
and
add
repnz
enter
hlt
xchg
cmp
inc
in
xchg
test
cmp
or
push
imul
aad
mov
push
mov
aaa
fdiv
xor
xchg
(bad)
mov
std
int
pushf
sub
lahf
mov
sbb
sub
pop
imul
jp
pop
call
mov
cmp
and
sahf
xchg
or
mov
add
dec
popf
mov
pop
dec
movs
mov
rol
inc
adc
rcl
aas
data16
push
sahf
ror
mov
jl
xchg
sti
jbe
xchg
shr
pop
pop
hlt
inc
add
sub
shr
cld
cmp
xchg
push
ret
and
xchg
test
mov
jmp
inc
aad
pushf
cld
sti
adc
xchg
test
push
mov
adc
cmc
xor
xchg
sar
inc
shl
pop
fnsave
mov
ss
mov
sbb
dec
jne
loope
jmp
add
jl
push
xchg
jl
mov
aam
sub
mov
push
test
add
out
add
jo
push
dec
or
pop
pop
mov
daa
daa
sahf
dec
into
jl
push
or
jmp
add
pushf
sub
ret
jmpw
sub
push
mov
test
or
or
fwait
jno
sbb
out
std
mov
(bad)
dec
mov
repz
push
ror
repz
in
hlt
xchg
mov
cmp
cmp
in
call
xchg
adc
ret
pop
fxtract
sub
out
ror
jb
fidivr
popa
in
into
pop
mov
bnd
inc
pop
add
(bad)
pop
lds
xchg
jb
imul
cmc
jmp
cmp
xor
mov
ss
inc
mov
pushf
(bad)
add
aam
test
jmp
xlat
jg
les
jmp
inc
aas
dec
xchg
sbb
scas
mov
or
ds
push
dec
lods
adc
icebp
push
fsubr
mov
aas
in
jp
xor
mov
sbb
xchg
cmps
adc
call
add
push
cs
enter
push
add
or
cmps
daa
xor
std
out
fcomp
rcr
je
and
sar
shr
mov
jecxz
xlat
and
cwde
mov
pop
mov
mov
pop
inc
add
call
jmp
mov
dec
fcom
fs
cmp
pusha
inc
pop
xchg
cmp
dec
push
pop
and
jmp
xchg
dec
mov
rep
fstp
mov
inc
inc
xlat
jnp
cmp
dec
mov
jl
or
fadd
mov
dec
(bad)
mov
cmps
add
push
addr16
xor
dec
cmp
ret
sub
int
loopne
and
dec
cmp
loop
shl
lods
and
faddp
inc
sub
out
mov
cmps
jp
mov
pop
jnp
xchg
mov
jmp
xchg
(bad)
es
sub
movs
pop
or
test
inc
int
jmp
mov
lds
shl
pop
sbb
lods
loop
lock
xchg
test
fidiv
repnz
and
lock
retf
ds
out
and
std
add
pop
icebp
gs
test
shr
push
gs
test
stos
mov
(bad)
scas
fwait
mov
sar
ins
in
jl
push
sub
mov
mov
fst
cmc
test
push
imul
push
loopne
scas
ins
push
je
popf
mov
fdivp
imul
(bad)
stos
push
jno
retf
mov
hlt
cmp
cli
mov
(bad)
add
je
jecxz
or
xchg
sub
nop
xchg
sbb
call
cmp
or
loop
xor
mov
out
retf
jle
arpl
or
mov
dec
ret
jb
fldcw
mov
jmp
data16
dec
arpl
out
aaa
retf
dec
jne
call
xor
aas
adc
call
ds
pop
sar
fwait
jne
adc
and
or
push
leave
nop
mov
add
lods
call
sub
pop
pop
stos
imul
scas
dec
std
stc
jle
fnsave
das
jecxz
jp
fsubr
add
in
lock
push
(bad)
push
jmp
mov
lods
imul
push
add
push
ss
mov
xor
mov
ins
inc
fld
jg
test
mov
lods
mov
and
sub
test
sbb
jmp
jle
sub
outs
and
pop
rcr
les
sbb
dec
bswap
mov
pop
lahf
sub
loopne
cmp
mov
add
inc
aas
out
test
adc
movs
popa
sub
cmps
adc
imul
push
rcl
(bad)
pop
stc
test
adc
mov
inc
aad
jle
push
test
loope
push
and
mov
jbe
sub
inc
cwde
push
jno
pop
jp
mov
sub
enter
mov
popf
or
push
or
xor
int3
loopne
jge
fstp
jns
push
push
push
cmp
push
fisub
pushf
test
and
sbb
data16
sbb
(bad)
ret
call
or
cmp
add
aad
fnstenv
cs
mov
xchg
xor
scas
jl
loopne
fidivr
gs
xor
pop
xor
cmp
inc
popa
hlt
shl
add
imul
movs
push
add
adc
stos
xor
jns
pop
call
xlat
dec
mov
pop
test
or
ror
das
loop
arpl
enter
fstp
int3
(bad)
enter
jp
js
sar
cmps
add
jae
sbb
inc
rcl
mov
cmp
mov
cmc
lods
mov
fisttp
out
out
add
dec
lods
xor
aas
jb
mul
cwde
mov
sbb
loop
sar
inc
jne
into
rcr
or
xchg
jmp
sbb
sbb
push
xchg
adc
or
push
cmp
in
pop
rcl
rol
shr
xchg
mov
test
add
stos
cmps
mov
mov
xor
mov
fldenv
cmp
sbb
enter
cmp
cdq
mov
pop
fisttp
call
ret
pop
dec
xchg
mov
repnz
and
les
test
imul
adc
les
sbb
popf
iret
gs
in
fidivr
or
adc
cmp
xchg
mov
nop
pop
scas
fcom
outs
pop
add
ficomp
in
add
dec
push
out
or
push
fldenv
pop
mov
pop
inc
or
nop
shr
sub
cmp
sub
push
imul
push
fbld
ret
aas
jmp
test
bound
mov
fwait
dec
pop
adc
ffreep
and
sahf
pop
jg
mov
mov
pop
shufps
or
stos
(bad)
push
sbb
dec
and
jl
jle
call
inc
jmp
loope
ja
mov
and
jns
movs
sbb
mov
pop
jl
fbstp
into
rol
adc
dec
dec
push
sbb
and
out
daa
bound
or
xchg
dec
(bad)
xchg
sub
scas
sub
inc
jo
xchg
xchg
cld
sbb
mov
das
int3
retf
fild
xchg
movs
aad
ret
push
dec
shr
lods
loop
lods
cmps
int
dec
scas
jmp
sahf
dec
xchg
inc
scas
in
sub
cmp
(bad)
call
stos
xchg
lea
cmp
ss
xchg
xor
leave
clc
fdivr
test
jmp
std
cmp
mov
stc
xchg
dec
ror
ins
pop
enter
out
fsub
jmp
xchg
jmp
adc
jns
test
hlt
jbe
xor
cli
popa
xor
mov
sar
mov
pusha
push
dec
(bad)
and
rcr
xchg
or
jo
psubw
jmp
xchg
inc
xlat
mov
sbb
clc
dec
dec
pop
ja
test
cmp
out
xchg
mov
arpl
retf
test
out
sahf
jbe
xchg
fbld
dec
pop
cmp
xor
and
sub
cli
or
xchg
inc
add
mov
daa
rol
add
aad
bound
hlt
jecxz
loop
out
loop
push
or
cmp
movs
retf
scas
ins
in
clc
shl
call
les
cld
pop
outs
jle
mov
jno
dec
dec
daa
ja
xchg
mov
(bad)
in
pop
shl
mov
push
mov
das
push
adc
(bad)
jge
(bad)
mov
retf
fwait
pop
push
xchg
fisubr
push
sahf
mov
mov
dec
dec
push
and
mov
and
dec
int
fadd
mov
push
push
lea
mov
mov
rcl
adc
pop
mov
add
cmps
and
scas
dec
inc
mov
pop
loopne
mov
outs
imul
lods
call
out
add
add
inc
jmp
mov
add
enter
mov
push
jnp
mov
mov
retf
fnstenv
mov
fsub
pop
arpl
mov
leave
imul
sbb
inc
or
fist
push
dec
mov
int3
jae
in
mov
pop
mov
cmp
cmps
xor
inc
mov
push
cld
sbb
xchg
rcr
enter
or
add
adc
or
mov
jns
cmp
and
das
nop
hlt
int3
sbb
loopne
stos
mov
mov
aad
shl
lods
adc
cmp
aam
dec
jbe
dec
pop
int
movs
jge
jb
mov
adc
sbb
(bad)
jecxz
xchg
adc
mul
jge
int
mov
jns
adc
popa
mov
cmc
inc
inc
out
test
cdq
into
dec
add
push
dec
jge
cmp
fwait
je
push
and
shl
mul
enter
rol
das
shl
ins
pop
loope
jae
cmp
add
xor
cmp
out
cmp
jl
pop
xor
mov
mov
push
shl
add
stos
int3
lea
pop
or
pop
push
nop
pop
in
inc
cmp
add
aam
rol
push
jecxz
and
jecxz
pop
std
mov
inc
add
mov
div
and
mov
mov
mov
push
fwait
xchg
sbb
ficomp
xor
xor
cld
loope
movs
xchg
out
mov
add
and
mov
fisttp
jmp
shl
inc
xor
xchg
jmp
or
push
and
xchg
adc
dec
push
and
mov
xchg
dec
cdq
push
fsubrp
add
xchg
xor
inc
jl
xchg
pop
mov
ror
das
and
jl
cdq
pop
out
mov
sti
jbe
jecxz
mov
mov
cmp
inc
shl
inc
mov
sub
push
or
retf
lahf
xchg
mov
je
xchg
lds
gs
cmp
sub
cmpxchg
mov
jmp
push
dec
ins
fdivr
or
mul
scas
addr16
inc
xchg
pslld
sbb
jns
mov
sar
jmp
cmp
loope
(bad)
fimul
and
sbb
mov
(bad)
mov
cmp
cs
and
add
or
adc
and
retf
inc
jbe
dec
sar
push
stos
(bad)
add
or
cwde
cli
jmp
sub
xchg
pop
xchg
sub
adc
sbb
fild
mov
mov
enter
jno
sti
push
jne
in
sar
add
mov
pop
imul
and
mov
fnop
adc
sub
jns
(bad)
sti
pop
jmp
test
jae
pop
mov
jb
xchg
xchg
xchg
or
es
push
push
xor
and
dec
adc
outs
iret
sub
cmps
es
fs
jl
scas
cld
dec
push
jae
sbb
fisub
repz
and
xor
das
dec
(bad)
std
out
into
pop
rcr
das
data16
into
cmps
mov
inc
ins
mov
dec
gs
inc
cwde
mov
dec
ja
xor
aad
sbb
push
cmp
push
dec
and
xor
fisttp
mov
push
ror
mov
outs
dec
dec
sbb
inc
cmp
shr
ret
(bad)
mov
(bad)
daa
aam
pop
cmp
iret
or
mov
in
enter
sbb
push
mov
or
mov
in
fdivr
xor
(bad)
(bad)
mov
pop
call
dec
mov
or
les
imul
iret
adc
push
sub
test
push
mov
leave
test
jo
sub
adc
pop
scas
ret
stc
sbb
pop
jmp
pop
ins
ror
and
in
mov
mov
xchg
lds
in
cs
pushf
sub
sbb
lahf
(bad)
fld
or
shr
and
mov
cmp
imul
mov
pop
sub
imul
outs
or
xchg
xchg
test
aaa
out
test
repnz
jle
add
or
imul
or
adc
cmps
xor
jnp
in
lock
jp
lock
and
push
fucom
dec
loop
das
sti
mov
fwait
test
mov
(bad)
in
sbb
and
jmp
sbb
inc
hlt
sub
ret
shl
adc
sbb
inc
sbb
xor
sub
or
jecxz
add
dec
mov
test
mov
push
cmc
clc
cmps
add
push
add
clc
xor
ins
mov
fadd
das
outs
add
jbe
pop
in
loop
call
push
jnp
pop
imul
mov
retf
mov
aam
sub
push
test
js
pop
xchg
mov
inc
jb
jecxz
adc
push
xor
std
(bad)
push
cmp
bound
sbb
pop
pop
lods
retf
clc
adc
and
mov
loopne
test
and
mov
stos
(bad)
rcl
inc
sbb
jl
es
js
outs
inc
jle
push
imul
inc
outs
clc
in
mov
call
(bad)
xlat
sub
xchg
add
pop
pop
fadd
adc
push
add
ss
xor
imul
push
out
mov
jno
daa
(bad)
je
fidiv
test
jmp
sti
xor
xlat
push
inc
repnz
daa
dec
fs
lods
fdivr
or
adc
inc
inc
push
int
xor
adc
inc
ja
mov
fwait
pop
hlt
test
inc
fld
sub
fmul
and
lods
or
push
push
pop
mov
or
mov
xchg
out
adc
and
call
std
jp
stos
ret
mov
mov
aaa
push
imul
inc
sub
hlt
out
mov
push
or
sar
inc
clc
mov
push
add
add
test
push
add
sbb
fwait
sbb
clc
mov
pushf
mov
jmp
sbb
(bad)
rol
push
mov
iret
xor
push
xchg
ret
push
sub
fwait
jbe
les
cmps
or
fisubr
inc
retf
or
data16
call
push
repz
jnp
adc
xchg
sub
jle
jno
fdivp
mov
push
sbb
das
xor
dec
push
(bad)
movs
mov
movs
shl
xchg
xor
jns
sar
mov
push
hlt
ins
add
xchg
or
int3
imul
pop
inc
cmps
jns
inc
push
push
fcom
popa
int
adc
jno
xchg
icebp
fsub
outs
call
lods
jl
xlat
sar
and
xor
popa
out
sub
or
ja
push
sbb
inc
mov
adc
cmps
out
and
pusha
add
pop
daa
push
sub
fist
xlat
test
cmps
aad
or
(bad)
and
and
push
lahf
fidivr
mov
gs
jge
lahf
sti
mov
mov
or
fs
xchg
sub
je
add
lock
pop
add
call
pop
popf
add
test
adc
adc
add
pop
sbb
icebp
scas
sub
add
jbe
mov
mov
sbb
js
adc
int3
sub
sbb
fistp
or
ja
out
stc
iret
fdivr
mov
movs
imul
inc
outs
in
fidiv
pop
out
mov
adc
xor
ror
cmp
jb
popf
jb
nop
aam
or
cmps
sbb
out
out
not
les
in
jle
or
sbb
daa
adc
and
pop
push
pop
loope
aaa
ret
jg
or
or
pop
cld
jp
cdq
sbb
cmc
push
xor
adc
out
test
add
cmp
shr
push
push
or
test
cmp
push
stc
mov
mov
mov
sub
sbb
sbb
inc
and
push
push
mov
mov
sbb
pop
adc
adc
cmps
int3
add
mov
cs
push
xor
xor
and
daa
ds
mov
inc
xchg
lahf
in
adc
mov
cmp
hlt
out
add
je
popa
mov
bound
cmp
ja
dec
jmp
sbb
ds
cdq
and
mov
retf
daa
imul
xchg
ja
lea
mov
pop
pop
div
pop
xor
xchg
push
jp
addr16
jmp
out
ins
out
push
call
mov
dec
pop
outs
lods
lds
jno
mov
pop
cmp
or
push
fwait
div
pop
pop
and
aad
mov
jne
fst
xor
xor
repz
retf
xor
xor
nop
out
(bad)
xor
mov
sub
cdq
inc
xchg
xor
sar
jmp
in
imul
ins
push
mov
adc
push
out
call
in
int
jae
sub
mov
dec
scas
addr16
adc
sub
mov
mov
sbb
add
dec
push
cmp
and
cs
std
test
shl
push
sar
(bad)
adc
add
(bad)
pop
clc
mov
loopne
sbb
dec
xchg
test
out
fst
add
pushf
mov
sub
lock
scas
js
cmp
push
jge
mov
xor
adc
mov
mov
xchg
rcr
and
xchg
mov
es
leave
int
dec
fild
cwde
cmp
ret
fisubr
retf
sbb
add
mov
and
fwait
fs
(bad)
ss
enter
and
movs
mov
sbb
rcl
mov
sub
out
es
fidivr
out
cmc
sbb
out
sbb
add
and
es
and
or
add
jnp
adc
imul
mov
pop
bound
lds
sbb
sub
inc
clc
sti
stc
inc
cmp
fsubr
add
add
imul
push
add
retf
push
mov
fild
push
movs
or
dec
mov
push
(bad)
pop
call
or
popf
or
pop
jmp
(bad)
sbb
outs
mov
cmp
ficom
nop
pop
add
mov
cld
ins
xor
aas
arpl
mov
mov
(bad)
sbb
in
pop
loope
push
ffreep
rcl
pop
xchg
mov
bswap
add
jecxz
mov
les
xchg
ins
adc
sub
shl
mov
and
test
jge
sub
jno
cmp
cmp
mov
jns
push
sbb
inc
cmc
fsub
in
shl
push
add
push
imul
ss
jne
sbb
outs
cmps
out
cli
push
fst
test
lods
adc
test
in
jmp
dec
xor
fst
cmovp
rcl
aam
imul
retf
mov
fwait
mov
push
cmp
(bad)
lods
xchg
dec
dec
sbb
jp
mov
daa
addr16
xchg
xor
or
(bad)
mov
push
mov
sbb
hlt
into
push
or
cmp
pop
push
sub
call
jg
js
(bad)
sub
pop
adc
das
xchg
dec
sbb
cmc
fdivr
repz
xchg
cmp
sub
add
loope
(bad)
fild
sub
(bad)
pop
dec
ret
mul
mov
inc
or
inc
xchg
add
dec
or
lahf
mov
mov
icebp
xchg
cs
popa
xor
mov
pop
xlat
test
cmc
stos
(bad)
std
popf
push
in
xchg
xchg
aaa
ds
ins
ror
inc
mov
jae
sti
push
mov
jo
sub
xchg
jo
dec
outs
loopne
scas
xor
add
pop
adc
imul
repz
call
jne
pop
ret
mov
lds
out
xor
in
mov
mov
popf
es
mov
mov
mov
lock
lods
ins
and
dec
push
test
adc
jg
pop
jmp
jne
aas
dec
enter
test
dec
inc
jle
sub
les
push
add
xchg
into
in
das
or
inc
inc
shr
ret
mov
mov
(bad)
je
sbb
out
jmp
test
xchg
xchg
adc
aam
mov
sbb
jle
or
ss
scas
mov
test
pop
fild
add
cmp
mov
dec
xor
xor
jne
sbb
(bad)
xchg
int
test
cmp
mov
xchg
std
jb
mov
or
jmp
ficomp
jb
mov
push
pop
mov
xor
out
scas
dec
dec
stos
imul
xor
xor
outs
push
pop
(bad)
xor
jmp
pop
hlt
push
stc
mov
shr
jne
pop
cmp
xor
inc
call
clc
(bad)
sbb
fmul
push
pop
mov
xchg
inc
loop
lahf
xor
dec
sbb
sbb
jg
cs
fisttp
(bad)
je
jp
sti
mov
add
stos
mov
repz
mov
shl
lods
jne
xor
(bad)
adc
(bad)
push
push
cs
(bad)
mov
pusha
retf
dec
jp
sub
or
les
mov
pushf
xchg
(bad)
cld
inc
sbb
cmp
adc
push
xchg
cld
adc
movs
scas
lods
je
and
sbb
icebp
bound
xor
cmps
sbb
out
push
adc
mov
idiv
mov
xor
push
pop
repnz
fucomi
fimul
or
mov
addr16
adc
leave
mov
leave
iret
cmp
shl
pushf
mov
add
and
shl
ja
div
add
xor
or
in
push
cwde
cmp
jmp
xchg
cmp
xlat
(bad)
cwde
jbe
dec
dec
xchg
or
pop
xlat
das
(bad)
and
xor
mov
add
pop
loop
aam
and
sub
ds
cmp
icebp
(bad)
fldcw
iret
jp
addr16
pusha
inc
pop
fdivr
adc
xor
xchg
jne
inc
arpl
add
xor
cmps
add
fdivr
jbe
dec
xchg
mov
mov
(bad)
and
imul
enter
jl
dec
cmp
pushf
mov
cs
nop
push
push
xor
or
repnz
mov
jbe
xchg
sbb
and
sbb
add
mov
fstp
mov
and
in
push
inc
adc
or
test
jmp
das
mov
daa
and
dec
adc
fucomp
jmp
lods
sbb
push
rol
call
adc
xor
mov
dec
fisttp
push
and
inc
rol
sbb
popf
fs
pop
cmc
repz
xchg
push
add
dec
daa
pop
push
popa
(bad)
mov
sub
cmc
adc
or
enter
pop
mov
sbb
imul
mov
(bad)
cmp
cmp
call
push
xchg
test
fld
aam
sbb
add
mov
dec
(bad)
in
ds
ins
mov
ins
dec
or
pushf
clc
cmc
lock
or
xchg
rol
sub
push
jg
jmp
enter
inc
adc
out
xchg
scas
push
mov
bnd
cwde
jp
fist
cld
add
dec
aam
cmp
dec
setp
mov
push
adc
mov
cmp
lods
pop
inc
push
add
dec
(bad)
add
ja
sbb
pop
or
fld
popa
jecxz
mov
adc
xchg
ss
dec
pop
push
pop
sub
adc
sbb
cmc
dec
cdq
mov
shl
and
push
dec
fisttp
in
pop
push
cld
or
and
mov
cwde
sub
mov
movs
mov
or
gs
xlat
das
shl
push
sub
scas
fwait
jmp
(bad)
push
inc
push
ins
xchg
mov
xor
and
sti
push
xchg
mov
out
fist
sub
test
pop
mov
jge
inc
adc
(bad)
add
jbe
jae
mov
cs
and
retf
lods
push
jbe
adc
jb
int3
outs
dec
imul
pop
mov
fiadd
jnp
call
cmps
jmp
dec
mov
daa
push
js
pushf
push
mov
movs
pop
cmp
jmp
ret
inc
add
aam
pushf
inc
jp
ret
mov
pop
inc
jl
mov
jg
and
fdivp
pop
(bad)
jae
jnp
frstor
push
sub
mov
xor
(bad)
or
push
test
mov
push
outs
shr
fistp
jp
scas
mov
cwde
inc
adc
lea
es
arpl
les
and
pop
dec
adc
jmp
add
fwait
in
std
pop
xchg
adc
jecxz
adc
call
adc
das
sub
loope
into
add
jmp
mov
(bad)
adc
and
add
inc
pop
frstor
in
xchg
xchg
arpl
jmp
sub
jb
add
aaa
(bad)
xor
and
mov
fist
pop
xchg
mov
out
xor
xor
cmc
xchg
or
pop
aam
pop
jmp
push
call
dec
or
hlt
and
jle
mov
pop
mov
imul
xlat
mov
cld
int3
mov
dec
jle
sub
out
ss
fcomi
jnp
in
call
jns
and
aad
add
shl
(bad)
and
cmp
cld
imul
dec
dec
mov
adc
adc
psrlw
(bad)
rol
sub
fsub
lds
pop
outs
adc
scas
inc
xchg
and
xor
xor
or
mov
add
out
js
mov
inc
cld
adc
sub
out
push
xchg
xor
inc
popa
mov
adc
in
fldenv
mov
pop
enter
add
into
pop
fisttp
dec
ins
inc
or
mov
(bad)
push
fistp
pop
clc
mov
mov
sub
mov
lds
lods
shl
dec
jp
add
xchg
pushw
cli
in
xor
add
inc
xchg
movs
imul
inc
xor
nop
push
das
loope
cmp
push
push
mov
call
ret
inc
sbb
mov
jno
jp
lods
push
push
ficomp
inc
mov
scas
into
cld
pop
cwde
(bad)
shr
jb
scas
mov
jg
pop
jmp
ret
dec
lds
pop
push
xchg
mov
jl
fild
dec
hlt
and
pusha
popf
jne
push
adc
loope
sbb
test
fiadd
jnp
cmp
mov
mov
cmp
mov
popa
(bad)
and
popf
or
xor
jno
rol
in
xor
ins
aam
sbb
loope
das
sbb
into
add
mov
retf
fwait
stos
loopne
pop
div
xor
cmp
bound
fsubr
(bad)
sub
and
test
outs
add
ss
or
sar
xchg
jle
jmp
movs
test
push
loope
sbb
dec
pop
jle
out
or
aas
clc
retf
xchg
add
outs
test
add
and
add
clc
and
fcom
mov
or
dec
inc
scas
mov
shl
mov
mov
cmp
cli
icebp
and
test
cld
hlt
in
sbb
or
push
fcmove
(bad)
aaa
loop
ror
into
mov
xchg
adc
pop
hlt
das
les
aam
in
cmc
mov
jbe
adc
jnp
out
xor
call
adc
inc
push
jmp
scas
enter
mov
mov
imul
xchg
out
pop
xor
adc
sbb
fst
ds
sbb
jp
pop
fild
sbb
inc
mov
pop
xor
retf
xor
pushaw
jbe
loope
call
fwait
xor
and
loop
sbb
enter
cmp
or
inc
dec
xor
pop
adc
fmul
mov
imul
sbb
outs
into
pusha
not
(bad)
xchg
mov
sub
mov
(bad)
ja
cmp
xchg
lock
cs
fstp
push
add
bswap
test
inc
sbb
int
push
and
push
xor
scas
mov
mov
pop
les
dec
jge
jnp
add
js
jl
pop
xor
sbb
mov
xchg
out
test
imul
js
xor
adc
cmps
sbb
push
add
in
xchg
push
in
out
xor
push
aas
pop
lock
repz
cwde
jle
pop
out
add
jbe
loopne
out
rcl
test
and
mov
test
pop
push
es
cmp
jle
cmp
(bad)
int3
jne
(bad)
out
jge
call
pop
das
pop
mov
jmp
(bad)
pop
jnp
frstor
add
test
retf
pusha
push
sub
push
sub
pop
ja
popf
inc
xchg
jbe
add
ss
cmps
or
cmp
mov
fisub
leave
test
inc
aad
mov
fmul
cmp
popa
out
(bad)
push
vpaddd
(bad)
(bad)
cmp
xchg
ror
sub
push
add
push
pop
push
cs
lods
xlat
jmp
leave
mov
mov
shl
xor
adc
push
sahf
jns
shr
jge
dec
sbb
iret
jno
dec
inc
sti
inc
mov
adc
mov
imul
xor
int3
mov
jmp
fwait
push
mov
pusha
mov
aam
xor
mov
(bad)
int
lock
inc
mov
inc
cwde
cdq
mov
xor
scas
dec
xor
popf
push
das
lock
aad
push
xchg
mov
out
popf
out
retf
and
sbb
mov
adc
repnz
push
inc
mov
lds
xor
or
jecxz
test
arpl
mov
ds
inc
pushf
(bad)
jp
cmc
xchg
xchg
ss
inc
lock
pop
movs
(bad)
mov
mov
(bad)
jb
aas
dec
(bad)
inc
rcl
inc
jmp
aam
push
aaa
or
push
loope
movs
stos
mov
inc
(bad)
repnz
pop
xchg
nop
pop
int3
rol
mov
mov
mov
sbb
mov
push
popa
mov
jbe
push
adc
jo
push
idiv
push
add
xchg
(bad)
mov
or
jmp
fistp
and
nop
fcmovnu
add
jo
int3
mov
xchg
adc
rcl
idiv
setp
push
mov
mov
adc
xchg
jne
mov
sub
mov
in
call
mov
rol
inc
ins
imul
gs
add
jp
pop
jbe
fnsave
pop
data16
mov
inc
xor
xchg
shr
popf
and
xchg
pop
retf
or
cmp
daa
mov
stc
ret
shl
scas
cmp
into
fidivr
jo
inc
loope
dec
jg
mov
inc
mov
xor
loope
push
je
test
dec
inc
and
jge
sub
shl
lock
sub
push
jbe
out
lods
icebp
pop
loop
test
clc
cmps
test
mov
pop
xor
cmp
inc
xor
mov
in
stos
or
sbb
popa
sti
sbb
xchg
cmp
out
fbld
scas
inc
xor
add
sar
test
rcr
sbb
mov
rcl
push
repz
jmp
iret
mov
retf
retf
out
repnz
push
jge
push
jmp
aas
enter
cdq
cmps
(bad)
sbb
or
sbb
mov
push
jmp
and
movs
jmp
pop
popa
mov
sbb
lods
sub
jns
jno
sub
add
mov
inc
lods
icebp
cld
adc
cmc
cmp
jge
lahf
movs
psrad
sub
jmp
dec
add
(bad)
aaa
lds
(bad)
out
and
les
out
fwait
jnp
sbb
adc
inc
cmp
nop
sbb
cwde
in
sbb
dec
xchg
fistp
xchg
bound
sbb
jmp
pop
or
sub
xchg
pop
adc
cmp
sub
not
nop
adc
sti
jbe
cmc
aaa
xor
outs
lock
lock
xchg
xchg
mov
mov
jne
sbb
retf
fnstenv
inc
es
(bad)
and
push
sub
mov
addr16
sub
push
std
movs
or
gs
sahf
call
dec
out
dec
aam
leave
and
fxch
jmp
sar
and
mov
mov
xor
jnp
idiv
jo
stos
cs
shl
and
gs
sbb
in
and
pop
and
call
sti
xchg
adc
nop
sbb
cmp
inc
adc
aad
lock
jno
sub
adc
mov
push
rcr
out
xlat
jmp
jg
push
xchg
lods
lea
xchg
aam
js
sub
mov
jmp
out
pop
gs
daa
jne
jmp
xlat
mov
dec
movs
ins
not
pop
sub
xor
inc
loope
test
add
scas
mov
fild
cmp
arpl
scas
daa
cwde
ins
xchg
inc
adc
out
arpl
out
test
mov
clc
mov
sub
pop
add
jbe
dec
xor
xor
mov
mov
push
les
jmp
mov
aas
push
loop
pop
test
pop
mov
lds
test
std
push
push
sub
xchg
inc
sub
repz
jns
stc
movs
pop
xchg
mov
sahf
push
sbb
aad
enter
pop
arpl
add
repz
or
pop
cmp
add
int
cld
push
inc
jne
ja
enter
push
mov
adc
and
and
out
push
and
mov
sti
js
popa
and
fiadd
and
and
add
cmp
rcl
cdq
xchg
cld
cmps
pop
std
and
xor
fdivrp
push
inc
push
retf
aaa
xchg
add
or
fldenv
dec
adc
pop
xchg
push
pushf
fucomp
cmp
shl
jmp
inc
jg
lock
stc
fld
mov
sbb
mov
adc
mov
sub
stc
sub
sub
and
pop
cmps
or
pop
jno
push
jg
pop
jg
sbb
fdiv
ror
ret
mov
push
retf
mov
das
cwde
sub
ds
sbb
xchg
push
inc
pop
imul
dec
cmp
sbb
lods
add
clc
adc
push
inc
xor
movs
xor
iret
and
mov
fcomp
lods
pop
inc
das
fsub
sub
hlt
and
loopne
out
fild
sar
repnz
jle
js
outs
bound
pop
adc
jge
dec
ins
sti
retf
mov
jbe
mov
ret
retf
add
dec
jmp
pop
shl
pop
jae
inc
loope
and
xchg
ror
xchg
pop
add
ret
mov
repz
mov
cmp
xchg
in
movs
mov
mov
dec
cmc
dec
stos
pop
(bad)
ins
cwde
pop
pushf
ret
and
daa
pop
fistp
jmp
jae
inc
xor
jo
cmps
dec
dec
data16
shl
xchg
xor
mov
mov
lds
pop
xor
lods
sub
mov
nop
push
mov
call
shl
push
(bad)
jns
dec
sbb
lock
mov
push
jnp
and
jmp
mov
or
mov
mov
and
adc
daa
pushf
or
adc
pop
jl
jo
fwait
ja
out
shl
sub
cmps
pushf
mov
jle
xlat
movd
add
stos
gs
add
repnz
jp
outs
mov
jne
frstor
stos
outs
mov
enter
pop
xor
ror
cmp
inc
push
adc
mov
jo
repz
cs
fs
sahf
sbb
addr16
jg
out
ds
push
pop
enter
(bad)
arpl
sbb
out
ins
ds
cld
iret
xlat
adc
sub
dec
nop
sbb
enter
and
xchg
pop
ins
jns
add
or
jecxz
bound
jg
add
stc
sbb
ins
push
push
(bad)
retf
(bad)
sbb
inc
push
xchg
and
jecxz
cli
sub
inc
sub
or
imul
xor
ja
sti
bound
pop
mov
add
push
lock
jns
add
jmp
adc
mov
add
push
xchg
xchg
clc
jle
mov
lea
sbb
fadd
fdiv
out
rcl
test
cmp
sub
or
xor
js
pop
push
xlat
adc
jecxz
fucomi
mov
scas
mov
ja
mov
movs
jnp
pop
das
lea
out
repz
retf
add
pop
sub
test
mov
xchg
in
retf
xchg
js
add
sbb
jbe
retf
int3
push
lock
cmp
int3
daa
jecxz
imul
sub
xor
sbb
sub
adc
adc
jmp
sub
lods
xchg
call
mov
out
push
push
cmp
iret
icebp
mov
sub
int3
xor
test
mov
and
and
dec
jbe
mov
mov
es
cmp
jae
xor
scas
ss
jns
mov
push
push
mov
dec
dec
xor
out
iret
arpl
xchg
mov
or
pop
cmp
popa
in
push
inc
retf
cli
cdq
push
(bad)
(bad)
ret
xlat
aad
dec
mov
aam
imul
jbe
or
xchg
xchg
imul
cmc
(bad)
movs
neg
in
push
add
push
jecxz
pop
cmps
ret
(bad)
(bad)
mov
pop
popa
mov
fcom
fwait
sqrtps
ins
fstp
dec
pop
cmp
pop
add
xchg
in
hlt
std
arpl
jo
adc
aaa
outs
push
xor
xchg
loopne
xor
push
(bad)
xor
ror
mov
retf
add
dec
sub
sbb
test
mov
mov
xchg
push
(bad)
out
and
mov
dec
add
cmps
jns
mov
dec
adc
fcmovnb
das
(bad)
cli
arpl
push
rol
mov
mov
jge
movs
(bad)
xchg
xor
rcr
sub
outs
push
pop
cmp
sub
int
in
pop
fnstsw
jecxz
test
loope
gs
sbb
aad
dec
mov
mov
loopne
daa
imul
dec
fwait
mov
adc
sbb
aaa
pop
adc
sub
adc
inc
ret
xor
jae
sbb
cmc
ins
and
mov
inc
mov
lea
inc
out
fdivr
pop
fcomp
cwde
mov
add
into
retf
pop
push
pop
xor
mov
adc
stos
outs
out
cld
rcl
pop
jnp
out
xor
or
(bad)
in
fstp
xchg
add
mov
icebp
imul
sub
popa
shl
cdq
inc
out
daa
adc
pop
xchg
or
repz
das
mov
xchg
mov
ret
inc
or
push
js
test
lahf
push
iret
fcomp
mov
(bad)
and
mov
sub
or
xor
jge
push
out
loop
cmp
add
mov
hlt
jb
dec
in
adc
push
test
dec
or
fs
fs
(bad)
xchg
jne
or
push
jo
lahf
sub
aad
imul
push
imul
daa
call
lock
add
xor
pop
retf
cmp
clc
stc
aaa
dec
dec
(bad)
or
in
sub
sbb
in
and
fild
inc
ss
ret
push
leave
mov
lahf
call
dec
cwde
xchg
sahf
repz
aas
sbb
add
fs
mov
stc
fdiv
test
adc
push
push
sbb
bound
jl
cmc
jne
fist
mov
outs
mov
aam
mov
xchg
jne
push
leave
cld
jb
inc
dec
(bad)
rcl
or
jmp
adc
pop
imul
pop
js
push
add
stos
outs
scas
jo
mov
rcr
mov
sbb
loopne
or
loopne
adc
ret
out
mov
imul
jecxz
or
sbb
cmc
data16
leave
gs
jg
add
jmp
mov
xchg
jmp
sbb
ret
test
dec
fwait
pop
les
mov
xchg
(bad)
dec
xchg
sub
push
test
std
shl
sub
enter
adc
jno
scas
mov
xor
ret
lahf
mov
mov
push
sbb
mov
xlat
int3
jge
xchg
pusha
add
or
call
stc
jbe
je
fld
(bad)
scas
cli
sbb
inc
hlt
xchg
mov
ins
jge
lock
ds
adc
dec
sub
cmp
dec
ins
sub
sub
nop
inc
jmp
cmp
fild
or
pop
push
and
mov
imul
sbb
jb
test
add
shr
and
adc
shl
ret
lahf
xor
movs
xchg
(bad)
nop
xchg
pop
dec
add
and
(bad)
stos
movs
aad
and
push
add
mov
mov
mov
rcl
cmp
in
(bad)
aas
in
outs
das
cmp
mov
je
push
cmp
xlat
retf
sbb
shl
mov
in
xchg
popa
mov
std
fdivr
int3
das
pop
sub
bound
aas
add
jecxz
mov
pop
mov
push
ds
jne
jmp
pop
call
pop
call
jmp
and
imul
pusha
fs
setae
lods
ret
xchg
adc
fidivr
stos
xor
leave
cmp
adc
nop
fmulp
popa
add
in
add
in
cmp
js
sub
push
cdq
cld
ss
mov
(bad)
cs
ret
mov
pop
shl
push
push
dec
or
push
ret
shl
sub
loopne
ret
and
retf
mov
jae
xor
addr16
pop
pusha
dec
add
out
retf
(bad)
std
sbb
out
(bad)
fs
int
mov
out
mov
repnz
dec
lahf
sub
and
pusha
push
jne
retf
repnz
fdivrp
add
into
mov
test
inc
cdq
add
mov
or
lea
lods
lock
push
sub
sahf
dec
mov
jl
pop
popa
or
adc
xor
xor
mov
and
mov
sub
mov
sbb
test
repnz
shl
les
xor
(bad)
cld
mov
pushf
aad
mov
xchg
mov
pop
xor
bound
hlt
out
sub
gs
not
aaa
test
retf
retf
pop
daa
sub
dec
rcl
sub
nop
ror
mov
int
adc
push
fdiv
jge
popa
mov
imul
xor
and
pop
sbb
popf
lds
push
cs
mov
es
pop
iret
mov
and
push
dec
mov
xchg
cmps
out
fadd
mov
popf
cld
xchg
cdq
mov
mov
mov
sub
sbb
scas
push
repz
xchg
test
push
xor
popf
out
(bad)
loop
or
xchg
or
push
dec
out
stc
inc
bound
sub
xchg
add
push
(bad)
pop
mov
sbb
push
push
add
lds
push
ds
ret
aad
sbb
rdpmc
mov
jecxz
or
dec
pop
pop
fist
push
mov
xor
ja
sub
(bad)
sti
adc
aam
(bad)
push
sbb
in
xchg
fcom
stos
or
sbb
das
and
jp
popa
mov
mov
out
cmp
popf
sub
lock
out
cmp
mov
jl
or
mov
leave
lods
inc
add
jns
jno
mov
mov
test
sub
das
pop
leave
outs
cs
pop
mov
mov
mov
ins
jge
jb
mov
mov
iret
push
(bad)
std
xor
sahf
or
pop
aaa
pop
push
clc
cmp
lea
fs
mov
cmp
aaa
adc
cmp
sub
sub
push
pop
add
sti
cmp
sub
addr16
retf
mov
fld
test
pop
ffreep
test
xchg
xchg
fiadd
jo
mov
push
lahf
dec
mov
outs
pushf
adc
push
mov
stos
pushf
and
bound
push
adc
out
jbe
scas
and
and
imul
jp
rol
mov
xor
iret
inc
xor
or
inc
xor
dec
jmp
pop
mov
adc
imul
loop
inc
test
je
mov
scas
mov
pop
cs
push
popa
cmc
cdq
jl
dec
test
test
and
ins
leave
sti
retf
test
dec
adc
imul
push
icebp
dec
in
movs
cli
lea
xor
out
push
stc
mov
stc
(bad)
adc
loope
mov
fisub
cmp
or
gs
push
or
and
mov
repnz
sahf
xchg
outs
xor
ja
imul
pop
add
test
ins
push
das
stos
in
pop
adc
jle
call
rcl
pop
xor
pusha
cmp
sbb
jle
fsubrp
push
fwait
dec
(bad)
cmp
pop
lea
rcl
sbb
add
das
pop
ja
or
jbe
ret
imul
sbb
mov
pop
inc
outs
jae
pop
pusha
mov
repnz
shl
pop
call
cmp
mov
mov
test
xchg
add
mov
jg
daa
push
mov
pop
xlat
fisub
cld
loop
and
push
(bad)
dec
lds
and
mov
jle
dec
lods
or
pushf
lods
ja
arpl
jecxz
leave
popf
mov
add
stos
int
rcl
push
test
push
out
mov
das
rcr
and
in
or
nop
retf
mov
sub
ja
push
test
mov
lods
lock
jecxz
xor
mov
inc
xor
ret
repnz
adc
pop
fnstcw
sub
es
popf
stc
jns
jmp
repnz
aaa
or
mov
loope
or
and
pop
dec
leave
ficomp
sbb
push
and
jmp
ins
cmp
cmps
adc
dec
stos
ficomp
adc
sub
(bad)
mov
pop
in
(bad)
rol
sbb
add
add
push
add
sbb
mov
jbe
pop
jecxz
sub
mov
ins
rol
mov
push
hlt
fld
fs
push
ret
pop
mov
inc
enter
mov
loopne
jecxz
in
cmp
iret
(bad)
(bad)
push
stos
pop
gs
imul
(bad)
imul
push
sub
les
or
mov
out
ret
xchg
(bad)
jl
fadd
jle
mov
cmps
jl
pop
and
ins
sbb
test
int3
fs
adc
out
movs
shl
aam
dec
and
push
in
push
pop
mov
mov
and
cmp
mov
or
mov
stos
or
hlt
nop
fisubr
loope
out
xchg
addr16
pop
push
sub
or
and
(bad)
xor
xchg
mov
stos
push
xor
cli
and
and
xor
shl
pop
adc
hlt
clc
mov
into
lds
repnz
in
ror
add
mov
jmp
pop
jne
ins
lds
ins
push
mov
jmp
test
cli
pop
pop
jbe
jb
xchg
xchg
ficomp
cmp
xor
(bad)
fst
add
rcl
(bad)
sub
mov
lods
mov
push
pop
je
int3
ror
ja
mov
dec
cmp
clc
cmc
inc
addr16
pop
shl
out
cmp
push
mov
jmp
jle
mov
call
adc
je
sbb
sbb
rcr
test
pop
rcr
repnz
addr16
aas
js
(bad)
cmp
pushf
sti
lods
jae
fmul
(bad)
sbb
jno
aas
push
sti
ds
inc
mov
sbb
dec
jmp
std
inc
loope
rol
daa
cmps
jg
arpl
pop
fst
or
mov
(bad)
pop
jmp
push
aad
jnp
add
std
cmp
mov
jge
popa
jmp
adc
mov
sbb
scas
movs
inc
mov
xchg
xor
dec
out
aad
pusha
adc
std
fisub
mov
gs
in
outs
jmp
sub
sub
nop
add
push
sub
adc
pop
add
faddp
or
es
retf
or
idiv
rol
push
dec
cwde
bound
xchg
cmp
fwait
inc
movs
fstp
aas
imul
out
and
pop
repnz
add
imul
(bad)
cmp
xlat
xchg
std
ret
fist
cmp
(bad)
imul
movs
cwde
adc
call
stos
and
addr16
cmp
ret
sub
cmp
stos
(bad)
fst
jmp
(bad)
push
lods
adc
(bad)
cmps
adc
loope
clc
stos
mov
jge
arpl
xor
leave
out
(bad)
jmp
mov
test
inc
iret
(bad)
ds
retf
leave
enter
mov
jbe
das
cmp
jbe
loope
add
fdiv
iret
sbb
xor
cmp
or
icebp
sub
leave
jmp
ficomp
add
inc
ret
jle
push
sub
push
imul
cmp
add
dec
fstp
cmp
hlt
add
cmps
aam
cmp
out
and
adc
vunpcklpd
aas
xchg
mov
add
ss
(bad)
sbb
iret
dec
mov
int
xlat
arpl
push
push
mov
arpl
pop
aam
test
ret
leave
and
movs
hlt
sbb
jns
xchg
adc
cmp
fcom
xchg
pop
icebp
imul
aam
pushf
test
gs
mov
cmc
pushf
add
xchg
imul
pop
pop
jmp
stos
test
jecxz
in
xchg
cmp
push
pop
pop
fcomp
out
(bad)
loope
into
sbb
push
mov
out
inc
sub
mov
jne
pop
std
icebp
push
sub
popa
mov
loop
pushf
and
add
outs
fiadd
aam
push
mov
pop
aas
(bad)
mov
je
cmp
pop
dec
mul
pop
call
adc
lahf
loopne
sub
loope
sbb
push
mov
dec
enter
xor
pop
xchg
pop
outs
bnd
icebp
and
cs
fucom
mov
dec
cld
add
inc
cmp
inc
dec
sysret
lahf
push
test
pop
mov
and
mov
fdiv
dec
or
mov
cmps
jbe
pop
loope
jae
out
cmp
jle
daa
add
cmp
movs
sar
mov
or
sbb
out
cmp
push
fcmovu
popa
mov
call
pop
sub
retf
adc
ins
(bad)
inc
(bad)
fisttp
push
arpl
int3
cwde
jb
sub
movs
and
xor
div
stos
xchg
iret
test
inc
dec
mov
mov
mov
jmp
cmp
sbb
jb
mov
or
std
or
sub
xor
inc
mov
push
sar
out
lods
mov
xor
push
call
inc
dec
xchg
daa
mov
fstp
mov
in
sbb
jbe
je
cmc
jle
and
jg
push
nop
mov
mov
pop
mov
repz
xchg
lock
jno
add
fdiv
fwait
push
dec
test
xchg
mov
les
mov
into
retf
sbb
(bad)
sar
and
mov
or
push
(bad)
dec
(bad)
pop
inc
into
pop
add
dec
ins
inc
sub
xchg
mov
aam
jge
fnstenv
inc
fsub
and
sbb
adc
cmp
and
(bad)
fdiv
dec
jl
sub
mov
inc
(bad)
aaa
sti
movs
rcr
cmp
ds
call
adc
cmp
xchg
sub
dec
add
add
or
or
mov
pushf
jns
cmp
xor
push
xchg
sbb
pop
sbb
mov
iret
cmps
mov
jne
ins
jecxz
stos
sub
mov
lods
or
cmp
xchg
test
mov
out
xor
dec
mov
int3
and
test
dec
bnd
retf
sbb
jl
dec
sub
pop
push
dec
pop
inc
leave
cmps
jbe
out
aad
add
inc
jno
fist
jmp
pop
add
and
or
cmp
or
sbb
jl
rol
pop
shl
mov
push
cld
loopne
cmp
jmp
ds
mov
jo
inc
push
push
add
mov
outs
int
sub
inc
repnz
(bad)
cs
pop
cmps
out
imul
mov
movs
mov
jne
imul
and
(bad)
jo
push
ret
pop
mov
lahf
mov
gs
clc
sub
std
pusha
adc
dec
jno
mov
retf
bound
dec
out
lock
dec
lock
push
shl
cld
fcomp
adc
sbb
fist
fild
pop
pop
out
jb
and
dec
jns
mov
stos
popf
mov
dec
cs
xchg
sahf
sbb
test
inc
sub
fmul
mov
sbb
je
pop
inc
push
push
in
repz
stos
cmc
inc
mov
data16
fisubr
sbb
(bad)
xor
mov
dec
cmp
jle
dec
repnz
jmp
jmp
sbb
std
adc
inc
mov
push
xchg
popf
mov
jbe
xor
mov
out
bound
test
loope
cmps
scas
sub
xchg
mov
into
sub
push
lods
ss
(bad)
sbb
fs
xchg
sahf
or
shr
dec
mov
or
lea
cld
dec
aad
cli
icebp
js
sbb
aam
outs
aas
push
ficomp
shr
xlat
pop
inc
pop
mov
ss
scas
popf
popa
aas
and
stos
cmp
addr16
cdq
adc
aaa
adc
dec
mov
cmp
out
fild
lahf
add
(bad)
cli
test
mov
mov
cmp
ret
ss
arpl
dec
mov
ret
or
in
adc
loop
pop
js
cdq
(bad)
and
shl
imul
test
aaa
pop
mov
push
and
mov
mov
ss
inc
xchg
push
jg
retf
fmul
jmp
clc
fcom
lahf
leave
jne
adc
mov
push
out
add
mov
call
int
jle
and
cwde
leave
and
adc
movs
pop
lds
xlat
push
icebp
xchg
scas
lahf
(bad)
dec
and
je
cs
call
imul
pusha
xor
xor
div
ins
jnp
out
aad
push
or
xor
sub
xor
push
fwait
pop
shl
add
dec
movs
gs
pop
retf
sti
call
pop
cmp
sub
daa
jne
xchg
jp
push
jp
sti
(bad)
xlat
hlt
arpl
pop
scas
scas
or
adc
pop
push
std
xchg
inc
xor
lods
outs
sub
mov
add
mov
(bad)
sbb
jg
xchg
dec
or
sbb
or
cmps
ror
in
cmp
jno
cmp
movs
shufps
ret
or
jl
jmp
add
cmp
enter
fdivr
or
push
sub
xchg
out
sbb
add
test
(bad)
jg
jo
stc
std
les
add
xchg
dec
dec
fimul
call
shl
stos
add
aam
or
clc
bound
adc
mov
loop
and
dec
and
inc
or
stc
hlt
lahf
cmps
lock
lahf
jg
cwde
cli
jno
jmp
inc
repz
inc
dec
leave
rol
adc
repz
jae
mov
sub
push
repz
add
out
outs
sbb
pop
fild
mov
jae
pop
ret
xchg
lock
ins
dec
hlt
test
sub
sti
mov
mov
mov
sub
int
xlat
data16
pusha
sbb
jb
cmp
mov
sub
mov
jno
cli
mov
jnp
or
or
jno
jns
mov
(bad)
loop
adc
bound
(bad)
push
xchg
pop
sahf
inc
out
repnz
jne
xlat
xor
or
xor
jne
xlat
pop
jne
sub
mov
int3
call
lods
jno
mov
pop
inc
inc
or
adc
mov
ds
scas
pop
push
enter
xor
in
lahf
out
and
mov
jnp
js
cwde
fmul
adc
repz
sbb
call
cwde
stos
xlat
pop
dec
je
ins
adc
xchg
in
rcl
(bad)
mov
jb
or
mov
int3
movs
or
je
(bad)
imul
mov
or
int3
xchg
stos
clc
jnp
cmp
in
outs
xchg
aad
dec
add
pop
out
call
mov
aam
push
or
(bad)
mov
mov
rol
jb
jb
into
test
(bad)
jmp
fs
xor
dec
int3
dec
inc
loopne
push
fs
pop
pop
lock
jmp
jo
and
adc
xor
adc
adc
xor
cmp
fcomp
pop
jle
sub
mov
int
inc
add
push
icebp
ds
pop
iret
jae
rol
fidivr
into
dec
aad
or
call
loop
fsubr
out
ins
xchg
inc
jecxz
pop
dec
and
jnp
das
xchg
mov
cmp
add
inc
mov
cmps
std
jne
lock
pusha
call
dec
aad
jmp
test
mov
imul
mov
cmp
or
mov
add
jge
into
dec
nop
adc
push
inc
(bad)
fdiv
jl
jmp
shr
mov
addr16
dec
les
pushf
jo
daa
sbb
jecxz
sub
movs
cmp
pop
sub
mov
dec
add
jne
lods
push
loope
cli
push
(bad)
retf
or
xor
xchg
repnz
mov
or
cmc
sbb
or
mov
jbe
push
outs
sbb
pushf
mov
push
nop
dec
jmp
and
and
je
fiadd
dec
call
pop
retf
adc
dec
clc
mov
shl
adc
(bad)
and
clc
mov
adc
jne
adc
cld
loope
mov
js
daa
loope
outs
stc
int
cli
jno
out
repz
fsubr
in
fnsave
ins
cmp
imul
jne
fmul
xor
stc
add
fldz
inc
mov
sbb
mov
mov
xor
and
and
mov
push
inc
mov
repz
sbb
pushf
xor
and
inc
and
jmp
jno
pushf
and
and
inc
ret
lods
and
xor
jmp
dec
jae
and
(bad)
sti
adc
push
movs
xlat
cmc
in
ret
xchg
scas
push
inc
adc
inc
push
ret
fst
test
cmps
sar
(bad)
fist
out
lods
(bad)
sub
addr16
pop
aaa
hlt
test
fdivr
push
aam
fcmove
inc
mov
fmul
or
inc
stos
and
pop
retf
mov
push
sbb
bound
dec
cmps
in
cdq
jbe
add
stos
mov
lods
jbe
jecxz
outs
add
cmc
dec
or
mov
imul
or
or
jp
inc
push
jb
xchg
sub
xor
cld
cmp
imul
fs
mov
ret
adc
and
push
pop
call
jg
adc
cmp
into
mov
push
dec
pop
sub
sbb
shr
pop
imul
rcl
jne
popf
push
cmp
dec
add
sbb
cmp
dec
pop
repnz
enter
int3
movs
adc
sub
or
into
lds
sbb
xor
sub
push
adc
push
inc
(bad)
leave
imul
xor
cmp
in
into
iret
das
fisubr
pushf
test
dec
or
jl
call
xor
repz
mov
xor
or
cmp
fcom
fst
ss
push
cmp
cmp
mov
push
mov
xor
xchg
and
inc
mov
mov
mov
pop
mov
ret
retf
push
fs
mov
jo
cmp
sahf
pusha
fwait
xchg
mov
mov
outs
test
out
scas
cmps
mov
pushf
inc
rcr
dec
push
sahf
out
xchg
inc
es
mov
clc
loopne
test
js
add
push
in
or
cmp
jb
mov
jnp
jle
hlt
ds
cmp
gs
mov
add
enter
call
fld
dec
or
gs
popa
lods
mov
lea
mov
and
pop
pop
dec
sbb
sub
sbb
outs
in
adc
imul
and
add
cld
jge
cwde
fcomp
jmp
jmp
(bad)
and
pop
lock
cld
mov
mov
cmp
out
dec
(bad)
ficomp
loopne
xchg
push
and
sbb
push
adc
push
xchg
sbb
push
loopne
xor
and
mov
sub
dec
sub
jle
or
ds
push
aad
xchg
mov
push
shl
clc
or
cli
jmp
int3
jmp
cld
push
mov
sbb
adc
dec
lds
mov
sub
mov
dec
mov
mov
retf
movs
xchg
loope
mov
add
test
movs
dec
cmp
imul
(bad)
in
fisttp
aaa
shl
shl
test
add
js
add
xchg
les
sub
inc
addr16
lods
aas
adc
outs
pop
ins
inc
inc
lock
push
push
and
in
clc
cld
stc
stos
mov
out
rcl
mov
push
rcr
xor
jnp
ror
hlt
test
xchg
mov
dec
lods
fs
icebp
mov
out
cmp
add
jnp
jmp
sub
pop
sahf
aad
data16
dec
adc
sbb
das
push
(bad)
movs
dec
mov
pop
pusha
dec
cmps
jbe
fs
pusha
jg
jmp
pop
scas
lds
mov
and
or
push
dec
sub
mov
push
dec
out
es
scas
add
add
jp
inc
mov
test
sub
xlat
sub
dec
jecxz
in
stc
mov
je
mov
sahf
loope
es
dec
fdiv
stos
xchg
xchg
test
mov
xor
fucom
push
sub
or
and
mov
je
mov
and
fnstcw
push
lahf
sbb
push
sub
mov
and
mov
ret
sti
jl
push
push
inc
dec
mov
cmp
mov
xor
lea
inc
gs
stc
shl
xchg
xchg
sbb
das
mov
xlat
ss
sub
push
pminsw
js
je
cmp
outs
cli
cmp
sbb
and
cmps
das
inc
and
push
mov
and
cmc
out
movaps
sub
outs
fwait
ins
add
ss
inc
clc
and
jo
xor
fst
and
jo
sbb
sub
lock
cs
jecxz
xor
movs
mov
stos
or
jae
sub
mov
test
adc
jo
inc
inc
xchg
in
clc
dec
pop
loope
xor
dec
dec
gs
fwait
daa
and
popa
dec
sub
arpl
jbe
xchg
test
pop
add
outs
hlt
sbb
imul
outs
jl
mov
and
or
ja
xor
in
dec
aam
clc
mov
mov
dec
sub
push
or
sub
jne
and
(bad)
push
fs
xchg
pop
rol
scas
sbb
mov
das
pop
push
xor
and
and
cmp
test
mov
stos
(bad)
xlat
fbld
stos
pop
sbb
fs
pop
imul
and
out
or
neg
dec
int3
xor
sbb
xor
mov
jge
sub
pop
adc
dec
jg
arpl
mov
fcom
inc
cmc
push
sub
rcl
push
jp
adc
jmp
pop
imul
stc
xchg
aas
cld
inc
cdq
ficomp
mov
repnz
sub
cmc
adc
xchg
jl
out
enter
ret
or
jo
cli
addr16
pop
mov
mov
data16
lea
fld
lods
pop
mov
mov
xchg
imul
mov
idiv
fadd
test
mov
sahf
lahf
mov
xchg
mov
pop
lock
push
test
or
iret
scas
fld
gs
iret
mov
inc
daa
sub
xchg
movs
loope
popf
mov
aaa
ret
pop
leave
xchg
movs
dec
ss
jnp
mov
adc
xchg
add
fsub
sub
pop
mov
or
jns
xchg
inc
jae
stos
jns
dec
cmp
xchg
xchg
in
fwait
js
loope
movs
adc
push
dec
jmp
ja
retf
pop
jg
pop
cmp
jae
mov
add
scas
or
jb
test
or
outs
aam
adc
jns
jb
and
int3
xchg
into
jl
inc
add
add
loope
and
test
mov
js
movs
ins
popf
movs
test
xchg
cmps
pop
mov
xor
or
lds
dec
pop
enter
pop
jns
fsub
neg
sub
lea
sub
sbb
mov
add
xor
fistp
cmps
xor
pop
sbb
inc
test
in
mov
cmp
adc
mov
inc
fistp
pop
test
(bad)
add
jno
mov
fld
lahf
jmp
(bad)
nop
inc
clc
dec
fisttp
xchg
lods
(bad)
movs
xchg
das
xor
or
push
imul
pushf
push
pop
movs
push
and
movs
and
test
repz
stc
(bad)
shr
add
ds
sbb
xchg
push
ret
mov
pop
fnstsw
adc
xchg
stos
sub
jge
mov
push
mov
cwde
les
unpckhps
mov
je
or
sbb
jecxz
push
(bad)
or
add
icebp
inc
aaa
scas
sub
sub
inc
enter
cmc
xchg
jl
cdq
loope
mov
xchg
fsubr
push
ss
jne
dec
push
sub
xchg
rcr
movd
pushf
rcl
mov
ret
pop
push
add
out
push
push
xchg
outs
mov
pop
inc
gs
jle
pop
jnp
ret
adc
ret
mov
jne
xchg
scas
inc
xlat
mov
dec
inc
push
mov
mov
sbb
or
push
(bad)
test
rol
mov
jns
sub
jge
ja
retf
in
and
mov
mov
push
loopne
inc
pop
mov
loop
loope
ins
jns
sbb
jmp
ret
mov
cli
stc
scas
das
add
lahf
hlt
(bad)
mov
inc
sub
pop
mov
cdq
imul
add
in
cwde
cmp
sub
icebp
(bad)
adc
popa
in
or
aad
inc
mov
cmps
jp
cdq
jmp
push
stos
dec
jnp
cmp
dec
mov
push
inc
mov
fs
mov
nop
xchg
jmp
push
(bad)
mov
imul
fcom
fild
idiv
int3
(bad)
lds
mov
mov
pop
int3
(bad)
sbb
aad
ss
and
imul
int3
das
adc
push
mov
jecxz
dec
int
mov
ins
test
xchg
push
pop
cmp
sbb
pop
and
out
jmp
stos
or
dec
std
push
mov
push
xor
ja
sar
les
xor
stos
(bad)
out
pop
mov
inc
pop
fild
cmp
aas
mov
stos
scas
ror
rcl
mov
xor
sub
loopne
mov
add
ins
sbb
sbb
(bad)
fwait
outs
push
js
cmp
push
fnclex
pop
mov
jns
adc
aad
mov
jne
div
push
xchg
pop
in
add
ss
jg
loop
mov
pop
cld
lea
jnp
sbb
xor
loop
int
jge
popa
dec
push
add
push
xor
push
add
push
clc
adc
mov
pushf
and
fmul
inc
aaa
push
aaa
xlat
or
bound
(bad)
adc
call
add
inc
or
adc
fwait
out
data16
cld
out
scas
inc
adc
inc
jmp
mov
xor
mov
lds
aad
mov
pop
mov
nop
pop
push
mov
sub
sbb
xor
div
cli
dec
aam
add
jnp
push
retf
loope
mov
sar
fldenv
mov
jmp
stos
outs
xor
js
int3
lods
aad
adc
test
fwait
jb
xor
jle
std
xchg
sub
cmp
inc
xchg
popa
or
test
in
or
loope
and
mov
mov
xor
adc
shr
data16
xchg
nop
int3
fld
cdq
or
(bad)
scas
sub
bound
pusha
iret
pop
or
and
in
ins
or
repz
std
add
pop
and
add
mov
cmp
dec
push
out
jmp
jns
pop
fiadd
outs
mov
cmp
hlt
sub
add
sbb
xchg
cmp
ins
outs
es
cwde
loope
xchg
inc
or
sbb
mov
call
in
jo
dec
fistp
push
hlt
sub
adc
or
pop
in
sub
jecxz
test
out
mov
cli
inc
mov
dec
iret
adc
add
adc
sbb
pop
ds
pop
lea
dec
cmc
mov
mov
cmps
mov
push
pop
sbb
das
mov
mov
add
imul
test
fcomip
gs
inc
aas
xor
and
stos
test
lds
dec
(bad)
pop
imul
scas
sub
test
repnz
repnz
mov
add
sbb
add
and
stc
jne
mov
outs
cs
mov
shl
imul
pop
mov
xor
(bad)
cld
addr16
push
pop
push
sub
inc
pop
add
jns
iret
pop
rcl
xchg
pop
cli
cmc
shl
outs
mov
movlps
xchg
lea
sub
inc
and
jb
jmp
pop
dec
movs
sub
bnd
pusha
ds
or
adc
add
in
xchg
ins
mov
mov
out
adc
mov
fstp
mov
push
int
dec
sbb
jmp
ss
lods
or
fstp
leave
sahf
xchg
and
fisubr
dec
adc
and
jne
add
repnz
and
push
out
add
xchg
inc
jb
adc
(bad)
pushf
sbb
adc
push
shr
stos
push
sub
xchg
xchg
rcr
mov
and
dec
loop
sbb
add
into
out
push
or
mov
push
jmp
mov
sbb
ins
mov
jmp
nop
nop
mov
call
test
push
movs
pop
mov
push
pop
dec
in
pop
fld
sbb
jo
lods
les
fs
stc
push
jg
shl
mov
shl
cmp
push
call
call
jl
test
sub
outs
push
iret
add
aad
loop
mov
jle
cmp
sbb
inc
iret
sub
nop
add
or
pop
mov
jmp
aam
sbb
mov
out
stos
adc
dec
dec
lahf
(bad)
fdiv
cmp
pushf
push
aad
xchg
jno
fsubp
push
adc
push
xor
fsubp
(bad)
fwait
lods
bound
movs
dec
jmp
call
jmp
fs
out
fnsave
xchg
xchg
push
xchg
cld
jp
scas
sbb
adc
fwait
adc
inc
push
cmp
ss
test
and
xchg
push
jns
push
ror
dec
cli
or
jb
pop
adc
ret
jecxz
lods
mov
push
and
popa
in
popa
test
hlt
out
pop
in
cs
adc
sub
ins
out
or
(bad)
scas
mov
cs
in
cmp
loopne
lods
or
push
into
rcr
outs
jno
dec
xor
out
cmps
dec
sub
imul
xchg
ins
bound
movs
lods
scas
push
cmp
call
jbe
loop
xor
inc
xchg
dec
out
shl
cmps
inc
loopne
call
and
in
call
rol
pushfw
in
jo
jae
push
mov
ret
pop
loop
push
jbe
or
(bad)
fs
mov
shl
and
aam
aam
fnstenv
fidivr
call
push
into
movs
pop
popa
aaa
jns
jnp
cli
sbb
or
adc
into
es
sar
xchg
scas
jnp
je
ins
adc
mov
into
and
mov
ins
xchg
push
scas
dec
rcr
cli
sub
inc
mov
cli
and
xchg
adc
rol
in
and
stos
outs
es
aad
arpl
stos
test
mov
test
std
jo
jg
jo
outs
loopne
ret
les
ds
pop
shr
(bad)
pop
cdq
and
push
dec
add
rcr
xor
leave
cmp
sbb
das
bound
push
xchg
cli
movs
pop
ins
push
inc
fld
icebp
sub
inc
(bad)
dec
xchg
outs
enter
out
add
mov
fistp
je
xchg
xchg
adc
inc
dec
or
fwait
xchg
jb
mov
and
pop
dec
inc
fcom
cmp
and
fcom
push
pusha
and
jmp
ret
pop
adc
dec
xor
(bad)
dec
jg
movs
lea
fcmovnbe
in
int
popf
pushf
sbb
mov
rol
ds
scas
xchg
movs
lahf
and
lahf
bound
repz
cmps
aam
sub
repnz
int3
rcr
dec
mov
cmps
xor
mov
cdq
cli
cmps
pusha
dec
aas
sti
mov
fs
xor
leave
xor
enter
xor
mov
leave
or
js
gs
outs
js
ds
ss
sub
push
cmp
ret
pop
stos
jge
cwde
outs
shl
lahf
nop
push
test
push
or
and
movs
mov
pop
dec
pop
aas
mov
push
loopne
aas
fiadd
adc
je
ss
dec
jge
mov
lea
jo
push
add
outs
mov
inc
div
or
(bad)
sbb
clc
lods
sar
xlat
mov
ret
push
sti
test
push
push
sub
push
cwde
out
pop
fistp
retf
fdiv
sbb
dec
fst
(bad)
and
test
mov
mov
xor
psrlq
outs
dec
dec
pop
sub
pop
in
sbb
pop
cmp
sahf
ficomp
scas
and
inc
push
retf
lds
inc
cld
in
dec
dec
int
add
fcmove
cmps
js
outs
push
dec
dec
and
xor
mov
dec
out
shl
mov
sti
(bad)
call
movs
scas
pop
leave
hlt
ds
imul
loop
lock
test
rcr
push
retf
mov
int
mov
and
jecxz
sbb
dec
(bad)
sub
adc
pusha
jl
mov
loop
mov
or
popf
pop
test
sahf
out
mov
inc
xor
lock
popf
jecxz
stc
mov
add
push
pop
cli
push
iret
xor
stos
adc
clc
add
push
(bad)
and
(bad)
cmp
dec
outs
enter
adc
aas
aam
mov
mov
adc
adc
out
sbb
pop
es
jg
mov
xchg
hlt
aam
out
test
call
fcmovb
outs
sbb
xor
test
dec
int
dec
fldenv
mov
pop
pop
dec
mov
or
mov
and
mov
mov
daa
movs
xor
jmp
std
pop
ror
(bad)
mov
jl
pushf
mov
(bad)
sub
or
adc
or
dec
and
xor
pop
mov
ret
rol
xor
pop
sub
and
or
scas
shl
mov
clc
fs
bound
mov
retf
ja
inc
mov
out
hlt
stos
ret
push
ffree
addr16
mov
outs
cmp
shl
and
das
call
xor
inc
(bad)
in
les
xlat
adc
cmp
mov
dec
nop
test
xor
xor
std
retf
mov
sub
scas
fmul
les
jns
inc
adc
popa
shr
or
enter
push
shl
dec
cmp
jbe
repnz
aaa
jg
int3
icebp
es
cdq
push
xchg
imul
out
push
push
cmp
popf
sahf
imul
jmp
inc
aas
repnz
daa
test
lds
ds
fisub
lock
adc
adc
lock
push
sti
inc
sub
mov
mov
ins
adc
mov
stos
adc
jecxz
sub
mov
xor
daa
in
xchg
mov
fisub
(bad)
push
cmps
and
stos
xor
rcl
mov
mov
aas
es
(bad)
adc
mov
not
jb
sbb
aas
in
movs
scas
js
(bad)
sar
pop
in
ret
xchg
push
and
inc
jmp
mul
sti
xchg
xchg
fdiv
xchg
mov
es
shl
iret
(bad)
jmp
xor
pop
mov
mov
mov
xchg
or
mov
pop
mov
mov
push
sub
fcomp
lods
mov
push
ja
imul
xor
inc
push
jo
outs
cmps
mov
pop
lds
cwde
enter
repz
aas
jbe
lods
dec
idiv
test
(bad)
in
jae
adc
push
dec
jecxz
dec
pop
(bad)
sti
pop
mov
lods
pop
mov
pusha
js
adc
dec
pop
mov
clc
inc
push
mov
mov
not
imul
add
addr16
scas
dec
mov
das
and
adc
retf
jno
sbb
mov
cmps
push
(bad)
lds
std
(bad)
xor
loopne
dec
sahf
stc
or
dec
mov
sbb
or
jne
dec
stc
nop
iret
cmp
leave
sbb
clc
popf
arpl
sar
and
fsubr
and
shr
inc
cmc
js
enter
cmp
xchg
xor
adc
mov
imul
das
call
sbb
out
cli
fwait
test
test
sbb
adc
jo
mov
push
jp
mul
mov
push
add
add
stc
inc
lahf
sbb
sub
aam
retf
dec
and
fs
mov
retfw
(bad)
in
mov
xchg
retf
int3
mov
dec
movups
lea
in
mov
mov
outs
inc
(bad)
popa
xor
jbe
cmp
aad
push
jne
mov
or
ficomp
mov
lock
xchg
xor
add
int3
repnz
inc
and
ds
sub
jnp
fdiv
or
repz
dec
push
sbb
outs
fisubr
or
mov
inc
jnp
aad
loopne
in
sbb
outs
adc
add
lea
push
inc
sbb
xchg
clc
scas
je
sub
and
and
xor
xor
mov
ds
sbb
rol
rol
jbe
js
inc
and
cmp
stc
sbb
mov
ja
sbb
ret
vpor
mov
sahf
pusha
faddp
vmulsd
aas
fdiv
push
hlt
add
shr
xchg
mov
cmp
adc
pop
stos
push
lods
push
mov
movs
jno
sahf
(bad)
fadd
or
or
fidivr
xor
test
push
pop
mov
rol
xor
bound
test
popa
cmc
jl
mov
maskmovq
idiv
ret
adc
retf
sti
jmp
xor
xchg
dec
nop
imul
pop
pop
iret
fst
jns
and
xlat
push
or
mov
and
scas
in
inc
mov
ja
mov
inc
leave
clc
sahf
clc
and
xchg
add
inc
enter
mov
push
push
ds
(bad)
bound
call
data16
scas
lds
mov
cmps
addr16
fbstp
inc
in
push
nop
sub
push
sub
aad
xchg
push
cld
cdq
movs
shl
sub
fmul
fistp
add
shr
push
mov
sub
pop
and
or
std
xchg
mov
mov
inc
dec
add
mov
pop
pop
pop
jno
cmp
ja
xlat
ror
mov
stc
(bad)
out
(bad)
out
mov
mov
lods
add
fidivr
test
cmp
je
mov
mov
int3
adc
mov
lods
and
xchg
add
aaa
mov
arpl
cmp
popf
push
cmp
mov
loope
jo
fwait
mov
jge
aas
aad
je
push
rol
je
loopne
inc
cmp
jle
mov
retf
mov
pop
pop
cmc
pop
sbb
dec
jmp
(bad)
aam
push
mov
pop
jmp
pop
sbb
xchg
vmovlps
pop
arpl
ja
xchg
xchg
fisubr
lea
cmp
mov
adc
xchg
add
pop
fldl2e
mov
or
es
mov
inc
test
ror
adc
test
rcr
enter
aam
daa
cmp
mov
sbb
or
push
cmp
pop
dec
adc
sahf
cmp
xor
scas
mul
in
inc
stc
mov
xor
and
inc
push
ror
int3
xor
mov
in
or
dec
add
or
adc
pop
adc
aas
or
push
mov
ins
mov
cmp
sub
sbb
int
mov
idiv
(bad)
adc
and
cmp
sub
loop
inc
lds
aad
xchg
ds
sub
ins
add
mov
mov
repnz
icebp
popf
in
adc
cld
add
sbb
nop
cmp
fild
icebp
daa
xor
ret
dec
fs
dec
jle
cdq
popf
xchg
jns
jo
hlt
std
and
sub
fcmovne
mov
sub
mov
shl
push
fwait
mov
pop
sbb
push
or
lds
add
shr
mov
sub
ficom
xor
push
call
arpl
ror
out
jmp
sbb
outs
mov
outs
push
(bad)
jno
movs
push
cs
icebp
inc
jae
mov
adc
sub
lea
pop
cmp
xchg
dec
cmp
mov
test
dec
pop
enter
aas
test
sub
jmp
loop
and
dec
lock
call
pop
ins
rcr
jae
cld
adc
mov
cmc
in
(bad)
lea
cmp
inc
std
xchg
jne
iret
xor
pop
push
push
out
dec
jno
in
xlat
pop
sub
push
sub
in
cmp
jle
call
outs
cs
xchg
test
repnz
inc
and
imul
jns
stos
jl
xchg
push
shl
sbb
ins
xchg
fcomi
cmp
retf
gs
out
dec
mov
mov
aad
popf
gs
repnz
adc
aad
(bad)
sub
aam
mov
ins
adc
mov
mov
or
movs
or
lods
shl
aam
or
add
jne
adc
jae
inc
dec
js
aaa
sub
js
inc
jae
mov
int
xor
sub
mov
popf
dec
inc
push
loop
fistp
arpl
pop
movs
lock
mov
mov
xor
gs
hlt
mov
adc
jb
pop
fidiv
inc
pop
ret
cmp
lods
xchg
xchg
mov
aaa
mov
ds
cmps
and
sbb
in
xor
mov
outs
adc
pusha
jns
cmp
xchg
loope
mov
into
jp
xchg
js
jno
loopne
push
mov
push
dec
es
ret
cmc
xchg
or
aad
imul
mov
mov
inc
pop
pop
xor
and
inc
ds
xor
outs
(bad)
or
ins
sti
mov
xlat
xor
add
int3
and
add
out
jg
ins
inc
xor
call
test
outs
adc
and
lea
pusha
cli
jbe
inc
in
add
and
sbb
stos
inc
cmc
and
jge
call
adc
imul
jns
jno
in
(bad)
dec
and
test
retf
into
sbb
pop
add
idiv
int3
adc
aam
(bad)
mov
(bad)
dec
icebp
xor
sahf
inc
sbb
outs
mov
push
hlt
mov
mov
cmp
gs
dec
mov
es
les
out
sbb
xchg
movs
mov
cmc
mov
in
inc
or
add
cmp
xchg
dec
lods
inc
cmp
loop
cmp
push
adc
in
inc
retf
push
or
cmp
push
scas
mov
adc
mov
mov
aad
shl
call
imul
call
hlt
retf
and
mov
push
shl
shl
add
pop
jne
xchg
popa
jb
hlt
pop
lahf
mov
mov
push
fwait
push
add
dec
fxch
mov
ret
dec
in
mov
cli
fistp
inc
mov
rcr
and
sbb
xchg
lds
xlat
punpcklwd
out
jle
in
pop
(bad)
push
jnp
jnp
scas
xchg
jmp
push
sub
fwait
ret
mov
test
jmp
dec
xlat
jmp
jp
jmp
inc
jle
jne
jne
dec
cmps
inc
xchg
xor
pop
push
push
mov
loopne
cdq
adc
lods
dec
cwde
sub
push
xor
mov
in
jge
push
jmp
pop
stos
popf
mov
aaa
fwait
cmp
in
pusha
dec
outs
jne
add
dec
into
cs
scas
ret
(bad)
and
jl
sub
cmp
dec
popf
ret
mov
cli
inc
out
aas
rcr
in
dec
sahf
adc
inc
push
and
push
loope
sbb
sbb
mov
mov
or
mov
mov
cmc
and
enter
cwde
cmp
adc
add
in
loop
adc
xchg
jmp
xchg
out
sub
and
jl
push
sub
ja
mov
addr16
xor
and
adc
inc
push
mov
or
sbb
outs
adc
movs
rcr
aas
mov
(bad)
ret
repnz
jno
push
jge
push
cmp
push
pop
mov
repnz
dec
and
jns
scas
jnp
loopne
and
push
(bad)
repz
imul
push
push
or
dec
gs
xor
mov
nop
jp
in
shl
ss
dec
aaa
or
add
xchg
push
adc
int3
loopne
xchg
xchg
push
into
je
xchg
jns
pop
dec
or
out
push
lods
loop
ret
push
xor
arpl
xor
pop
(bad)
adc
and
cmp
jbe
packuswb
sbb
test
mov
pop
adc
mov
mov
retf
sub
and
pop
sbb
addr16
sub
cmp
into
mov
adc
in
mov
xchg
aas
jp
enter
movsx
jne
pmulhuw
test
add
cmc
xchg
dec
push
cmp
mov
pop
push
push
popa
leave
pushw
xchg
mov
xchg
sbb
out
mov
mov
cmp
arpl
fwait
push
xchg
mov
push
xor
sbb
xor
sub
enter
dec
dec
sub
add
xor
mov
je
test
je
mov
pop
pop
jbe
stos
loop
inc
xchg
test
imul
xor
ret
imul
jmp
pop
xor
sub
ds
test
or
fbld
inc
dec
sbb
xchg
fldz
(bad)
push
in
push
pop
retf
xor
cmp
and
fidivr
dec
fdiv
js
inc
out
idiv
lock
call
addr16
jmp
fisub
jns
sub
jmp
inc
das
repnz
sbb
sbb
mov
call
dec
xor
or
test
jecxz
jmp
rol
cmp
jno
nop
dec
adc
cmc
adc
out
or
test
add
adc
pop
adc
pop
or
jo
xor
or
mov
xchg
movs
push
jmp
out
shl
cmp
pushf
xchg
add
mov
pop
adc
mov
and
stos
inc
cs
dec
xchg
into
sbb
jno
test
dec
(bad)
sahf
sti
inc
clc
lock
pop
mov
fstp
push
xchg
pushf
add
adc
ins
dec
popf
aad
pop
dec
les
clc
je
movs
pop
mov
jg
mov
js
xchg
xor
push
mov
push
les
sbb
stc
cmp
ret
adc
or
rcr
(bad)
stos
and
popa
jnp
sbb
shl
fimul
dec
lock
or
retf
sbb
sbb
cmp
repz
pop
shl
aad
push
repnz
inc
push
das
aam
xor
(bad)
jmp
leave
and
scas
pop
push
xchg
or
das
js
pop
dec
clc
jmp
fwait
shl
int
iret
mov
(bad)
xor
mov
nop
arpl
xchg
int
xor
push
mov
pop
lock
push
stos
dec
add
out
stos
xchg
xor
cmps
dec
sbb
lock
jge
push
idiv
or
pushw
pusha
(bad)
dec
mov
je
sub
inc
or
sbb
ins
jge
stc
ins
mov
jno
adc
xor
inc
aas
retf
pop
or
inc
xor
sub
jl
xchg
aad
dec
xchg
push
push
repz
cwde
jb
ins
inc
daa
xchg
mov
inc
xchg
push
cmp
jno
dec
mov
rol
adc
lds
mov
shl
sub
inc
or
jle
in
xor
push
scas
adc
inc
cmp
or
mov
xor
ss
mov
xor
adc
or
xor
leave
test
jmp
rcr
out
es
aas
pop
mov
dec
das
rcl
addr16
(bad)
rcr
ret
(bad)
sub
jmp
jne
jnp
adc
std
ror
jns
stos
test
call
inc
add
adc
mov
cmps
sahf
adc
pop
adc
popa
xchg
nop
xchg
cld
mov
mov
or
iret
repz
push
jne
jb
inc
lock
sahf
pop
adc
sub
mov
jno
(bad)
push
fucomp
call
jge
mov
and
ja
or
adc
jp
adc
or
in
add
sub
scas
jle
xchg
adc
jb
sub
(bad)
(bad)
repz
and
jp
pop
push
or
dec
retf
sub
les
cmp
jp
(bad)
xchg
mov
iret
fstp
cmc
push
jle
mov
mov
mov
mov
mov
mov
arpl
or
outs
mov
or
mov
mov
fsub
push
arpl
fsub
pop
shl
lock
dec
mov
and
sbb
lods
push
mov
dec
enter
xlat
xor
rcl
push
je
mov
or
leave
add
add
add
push
mov
rcl
sbb
test
sahf
lea
and
cmps
adc
pop
mov
cmps
sub
mov
jno
jnp
(bad)
pop
pop
jae
xchg
xchg
cdq
pop
addr16
jmp
(bad)
ja
adc
pop
xchg
xor
icebp
mov
jae
dec
sbb
out
sbb
mov
add
rcr
push
mov
stos
(bad)
ins
test
cld
stos
cmps
push
pop
pop
push
call
mov
inc
xchg
or
push
out
push
push
xor
sbb
outs
lds
pop
jo
test
test
cmps
pop
hlt
lods
mov
sub
mov
loop
sti
jne
jo
sub
addr16
push
out
nop
je
add
mov
sub
wbinvd
dec
hlt
mov
mov
pop
cmp
cli
inc
leave
push
retf
xor
jno
adc
scas
ds
pop
mov
cmps
stos
or
int
or
int3
arpl
das
cdq
ins
retf
mov
cwde
test
cmp
in
sbb
bound
xchg
aaa
push
push
lea
sub
div
xchg
dec
inc
sub
adc
lds
add
add
jmp
jle
mov
hlt
arpl
fwait
movs
pop
mov
xchg
ins
jns
in
lea
loope
retf
fmulp
cli
jl
sub
popf
lock
adc
sbb
and
sub
inc
data16
add
repz
xor
push
lods
dec
mov
mov
cmps
jmp
xchg
fwait
mov
mov
dec
dec
push
push
mov
cmp
mov
into
pop
pop
std
imul
push
fs
pop
imul
shl
adc
retf
fwait
xchg
popf
in
fdivr
adc
daa
xor
aaa
xlat
or
jl
arpl
pop
mov
xchg
jae
xchg
or
and
mov
ror
(bad)
and
repz
push
pop
sub
jg
mov
aad
sub
ror
push
inc
enter
xor
ret
and
pop
mov
push
test
pop
mov
or
ins
(bad)
mov
mov
and
pop
push
cmp
ins
and
xor
push
arpl
adc
retf
pop
cmps
adc
lds
jns
adc
icebp
test
jbe
xor
stos
pop
push
bound
aas
(bad)
out
inc
push
(bad)
clc
aas
mov
movhps
leave
aad
mov
jg
div
in
inc
mov
call
adc
and
adc
push
in
jl
arpl
cs
fnstenvw
mov
loopne
sub
adc
cli
push
mov
(bad)
(bad)
ret
xchg
loopne
sub
mov
pushf
mov
outs
mov
inc
out
xor
sbb
mov
in
(bad)
xchg
pushf
sub
lahf
faddp
repz
xor
test
das
pop
imul
leave
pusha
call
and
jecxz
addr16
dec
loope
mov
and
es
in
cwde
imul
cmp
dec
cmc
fnsave
xchg
xchg
add
shl
in
xchg
cmc
mov
mov
push
xchg
mov
xlat
loopne
idiv
xor
fisubr
(bad)
enter
cmp
push
cmps
cmp
jle
jle
imul
sub
clc
inc
and
stos
mov
les
aas
jbe
dec
inc
(bad)
jmp
dec
test
pop
fnstenv
fimul
and
sbb
sar
lods
xchg
mov
bound
mov
mov
inc
or
les
mov
jge
std
push
cld
add
cdq
lods
call
mov
sbb
pusha
sub
mov
(bad)
call
add
or
cmp
cld
xchg
push
mov
add
or
jl
gs
jbe
rol
(bad)
and
and
sahf
imul
mov
leave
outs
cli
mov
out
ja
mov
sub
mov
test
mov
out
out
fistp
pop
inc
enter
lods
gs
out
aaa
jns
je
push
jb
push
jbe
loopne
js
sub
push
mov
or
jge
adc
cmps
mov
mov
xchg
mov
push
dec
scas
sbb
shl
test
mov
push
cmp
test
add
loopne
adc
push
mov
push
push
cmps
jns
mov
add
jnp
mov
and
dec
mov
js
mov
jecxz
jmp
outs
les
in
mov
sar
outs
pop
ja
loop
push
jmp
and
pop
shr
xchg
mov
call
into
ret
popa
outs
in
mov
inc
mov
sub
dec
icebp
outs
lods
add
in
mov
lea
out
mov
dec
adc
mov
pop
pop
inc
xchg
(bad)
sub
adc
fbstp
and
dec
test
sub
js
dec
shr
pop
or
call
sbb
sbb
clc
int
and
and
hlt
cld
mov
ds
xor
sbb
js
dec
call
jo
dec
mov
xchg
add
push
cmp
push
push
mov
xchg
shr
sub
inc
push
(bad)
sbb
test
fstp
outs
test
push
xchg
add
outs
cwde
sahf
mov
cmp
inc
xchg
fisubr
jle
pop
inc
jno
aaa
and
xlat
nop
in
sbb
adc
jnp
ja
fld
mov
jg
test
mul
shl
mov
sbb
arpl
jle
enter
xchg
cs
lods
dec
arpl
and
movs
and
cmc
mov
aam
ins
rcr
mov
sub
stos
push
jb
inc
pop
into
ins
aad
xchg
cmc
push
stos
dec
add
sub
sbb
pop
fcmovne
test
shl
cli
mov
and
stc
sahf
adc
int
pop
mov
loop
xor
call
sahf
or
popf
dec
jecxz
mov
and
cwde
inc
pop
or
and
dec
fild
or
add
push
cmc
jns
or
mov
adc
jae
dec
sub
into
and
add
and
out
pop
and
sar
pop
mov
in
sahf
jl
scas
outs
paddw
or
stos
pop
movs
mov
xchg
retf
sbb
cmp
test
mov
in
cmp
test
(bad)
std
cmp
push
and
movs
jae
leave
xor
(bad)
pop
ins
cmp
dec
loopne
dec
or
jns
jo
imul
fwait
ds
arpl
sbb
pop
loope
(bad)
sub
and
shl
aad
aaa
outs
xor
xchg
cdq
hlt
mov
xchg
(bad)
jecxz
movs
pop
xchg
xchg
or
xchg
mov
(bad)
cmps
fldenv
xchg
jns
lahf
js
sub
pusha
sbb
cmp
ja
daa
sub
and
int
jb
fist
lahf
xor
and
ja
movs
outs
mov
mov
push
adc
and
arpl
xchg
aas
imul
imul
retf
push
outs
fs
aam
inc
sbb
adc
(bad)
pop
in
movs
lahf
repz
lods
sbb
loopne
rcl
and
les
fs
ret
mov
mov
cmp
imul
add
xor
and
out
or
push
cdq
sub
cmp
or
jo
dec
shl
cmp
mov
scas
int
lods
arpl
jl
data16
xchg
fcomp
pop
push
cmp
xchg
mov
ror
mov
hlt
iret
sub
fwait
add
push
std
ins
adc
xor
and
sbb
sub
test
pushf
push
lock
cmc
test
mov
jne
enter
aam
shr
or
pop
xor
imul
out
mov
ja
xchg
nop
dec
push
sbb
add
ds
in
cmps
mov
xchg
xchg
xchg
aaa
or
xor
xchg
or
cmp
xchg
daa
sahf
sbb
jmp
mov
mov
adc
sub
test
mov
adc
addr16
stos
loopne
in
mov
in
(bad)
aad
inc
pop
add
sbb
pop
fbld
sbb
lock
push
adc
call
cli
cli
mov
aas
inc
xchg
pop
or
(bad)
icebp
ror
push
cli
and
leave
jb
ja
cwde
pop
hlt
push
pop
xchg
test
aad
mov
sbb
mov
push
test
shl
jl
inc
dec
cmc
sub
pop
retf
inc
pop
push
adc
or
push
daa
dec
in
add
add
push
jo
stos
sbb
sahf
sub
xchg
jns
dec
jo
jmp
cmp
inc
stos
and
(bad)
in
add
bound
adc
inc
js
mov
dec
cmps
mov
jne
retf
add
outs
in
stc
test
xchg
mov
dec
in
shl
adc
and
popf
mov
xchg
push
or
or
inc
bound
je
sub
imul
sbb
adc
sbb
or
or
xchg
push
xchg
add
fld
pop
sti
pop
adc
fst
(bad)
ins
or
stc
test
rcl
pushf
add
dec
std
imul
lods
cwde
ss
mov
sub
xor
scas
jmp
data16
into
call
sti
inc
jp
outs
mov
sbb
in
pop
aas
sub
aaa
sbb
sbb
js
out
xchg
pusha
pop
call
jg
jne
leave
pop
das
inc
lds
imul
lock
or
pushf
lock
imul
repnz
dec
ins
in
sbb
cmp
test
inc
outs
add
int
aad
das
inc
ds
xchg
sbb
sbb
in
fld
idiv
out
adc
cmp
mov
lahf
shl
xor
(bad)
fidiv
int
cld
pop
out
sbb
out
push
retf
stos
pop
jae
adc
jmp
pop
or
test
push
lock
in
retf
(bad)
lea
dec
push
jle
loopne
xchg
sbb
and
cmp
sbb
sub
pop
adc
dec
xchg
call
adc
inc
jo
or
cmp
xor
jge
add
xchg
cwde
sbb
dec
inc
test
xor
mov
xor
mov
pop
cmp
sbb
mov
sbb
adc
add
push
daa
mov
std
xchg
mov
rol
pusha
push
sahf
test
popf
aaa
pushf
sub
mov
push
scas
hlt
inc
xchg
cs
loopne
jg
adc
push
icebp
jnp
fcmovne
cld
cmovb
icebp
dec
imul
adc
out
fistp
stos
push
inc
cmp
outs
pop
outs
jl
or
add
sub
jnp
xchg
out
std
dec
or
idiv
jmp
sar
repz
(bad)
jo
shr
les
outs
jns
call
cmp
sub
out
adc
xchg
test
mov
test
jne
mov
inc
lds
mov
push
arpl
into
adc
push
jae
adc
jns
xor
push
mov
mov
aaa
in
icebp
mov
call
fcmovbe
xchg
ficomp
enter
repnz
hlt
jge
and
mov
shl
mov
(bad)
jne
ja
push
push
rcl
syscall
stos
sbb
shl
outs
fldenv
loopne
cld
fwait
cmc
push
dec
fcmovnb
das
jns
mov
or
leave
mov
ins
add
push
sbb
call
and
and
mov
mov
cmp
fnsave
cld
jb
xchg
mov
mov
cmp
push
add
aas
dec
outs
outs
sub
arpl
(bad)
dec
mov
push
xor
fstp
das
lods
dec
lods
cmp
inc
cld
push
movs
adc
stos
bound
repz
inc
sub
pop
adc
lock
bound
cmps
aaa
add
enter
pop
adc
jns
mov
mov
shl
xlat
inc
fsub
mov
and
je
daa
sub
inc
jns
not
adc
imul
and
sbb
jge
daa
cli
(bad)
movs
pop
call
ins
jns
cmp
pop
imul
or
push
sbb
fcomip
dec
in
xchg
aad
stc
add
mov
out
xchg
repnz
push
push
xchg
add
xchg
inc
xor
std
adc
int3
jl
and
std
xlat
sahf
fld
mov
jmp
das
mov
fsub
dec
(bad)
jmp
mov
xor
sbb
xchg
lea
das
sbb
int3
or
adc
push
adc
repz
mov
xor
out
add
ret
push
retf
xor
sahf
mov
jns
ins
xchg
pop
out
in
xchg
cmps
sub
push
mov
movaps
jge
xlat
adc
xchg
adc
dec
mov
out
test
mov
dec
cli
cmp
mov
fisub
sbb
sti
xor
bound
jns
dec
jmp
fwait
repz
imul
das
inc
jbe
pop
bndldx
imul
dec
mov
sar
dec
inc
rol
mov
and
sbb
ror
sbb
add
repnz
fst
or
mov
adc
or
popf
in
lock
iret
daa
pop
or
mov
(bad)
cmp
jl
xchg
or
and
es
inc
push
les
add
not
adc
lds
nop
xor
outs
pop
add
mov
push
mov
mov
and
lahf
mov
aas
add
push
or
js
int3
ds
mov
add
sub
sbb
mov
imul
mov
sub
xor
sbb
pop
or
adc
lahf
cmp
push
(bad)
je
jo
inc
(bad)
ins
ja
xlat
inc
test
cmp
call
mov
sub
psrlq
jmp
aad
inc
addr16
and
dec
(bad)
(bad)
mov
test
sahf
das
test
jb
mov
ss
repz
push
(bad)
xor
mov
pop
cmc
enter
push
or
xchg
data16
int
inc
jbe
(bad)
aam
mov
fs
add
bound
aam
ja
xor
int
retf
jbe
dec
out
jo
fild
rol
pop
sub
popf
mov
shl
xchg
fs
into
inc
fs
push
push
sub
cmps
push
in
ins
dec
mov
pop
adc
stc
rcr
jo
mov
test
pop
lds
pop
das
push
sar
ss
cmp
loope
and
(bad)
or
xchg
jp
mov
shr
push
adc
ror
mov
and
pop
aad
pop
mov
nop
xor
mov
inc
jns
push
xor
sub
or
gs
lock
iret
jno
cld
add
cmp
mov
call
addr16
int3
cmp
retf
cmp
pop
adc
and
pop
cmp
add
xor
repnz
ins
sti
inc
mov
sahf
pop
std
lea
sbb
pop
add
or
test
mov
inc
pop
add
lods
movs
xor
outs
jmp
jne
retf
pushf
xchg
ds
mov
push
adc
xchg
ds
cmc
in
test
punpcklwd
jle
repnz
or
pop
leave
jp
int3
or
mov
fisubr
stc
outs
in
jge
pop
gs
and
cmps
retf
mov
or
out
add
jno
inc
mov
ret
cmp
lock
je
in
mov
lods
(bad)
fidiv
inc
lock
sbb
in
cmp
lods
mov
out
mov
dec
pop
shl
or
shl
lea
scas
mov
repz
std
xor
addr16
jno
clc
(bad)
mov
push
stos
ret
xchg
push
mov
pop
leave
movs
or
mov
add
not
pop
scas
loope
retf
xchg
pop
jmp
ins
and
sbb
rcl
mov
xchg
ss
push
fs
jae
push
stos
or
retf
mov
xchg
repnz
es
and
xchg
fld
inc
mov
and
or
mov
jnp
xor
inc
lahf
loop
pop
test
sub
mov
aam
push
mov
lds
and
in
lahf
(bad)
outs
loopne
data16
xor
cmp
ins
or
xchg
dec
rol
scas
test
rcr
ficomp
pop
sub
mov
push
xlat
adc
add
mov
mov
fs
in
test
aam
mov
ret
(bad)
jg
mov
daa
scas
outs
and
rcl
and
xchg
mov
add
cmps
or
je
aam
jge
sbb
mov
dec
out
mov
jl
in
out
(bad)
mov
adc
in
xor
loopne
xchg
xor
pop
movs
daa
mov
jno
outs
mov
mov
sbb
sbb
je
pusha
xor
push
jecxz
mov
sub
aad
mov
ret
jmp
mov
shl
cmp
call
fisttp
push
ret
inc
pop
mov
in
icebp
lea
mov
add
xchg
sbb
cmp
fidiv
mov
mov
xlat
in
rcr
pop
cmp
mov
sbb
mov
jae
stos
mov
push
pop
repz
pop
dec
cmps
nop
and
cmps
mov
retf
adc
inc
fiadd
xchg
push
adc
idiv
retf
iret
bound
std
(bad)
jg
es
sbb
push
cmps
add
push
adc
aaa
push
mov
jmp
ja
add
lods
test
and
out
mov
add
adc
outs
imul
push
retf
sbb
mov
jb
inc
inc
sbb
sbb
ja
ja
ficom
adc
mov
fidivr
push
xor
fs
cmp
xor
dec
fadd
into
jp
addr16
movs
mov
xchg
pop
sbb
repnz
iret
adc
rol
push
fisub
mov
push
stc
ja
bound
inc
mov
jae
stos
retf
lods
hlt
in
leave
xor
push
outs
std
cmc
icebp
push
adc
sub
xor
shr
outs
cmps
rcpps
mov
loop
or
aad
sub
rcl
dec
sbb
mov
add
ss
inc
inc
pop
and
jns
enter
mov
test
mov
sub
in
push
cmc
jne
ret
cdq
mov
jno
in
mov
xlat
push
push
in
scas
out
test
mov
jo
lea
mov
add
push
inc
nop
dec
js
and
shl
or
test
int
iret
xor
cmps
add
mov
adc
mov
stc
sbb
inc
push
in
jmp
mov
vsubpd
ret
pusha
mov
das
(bad)
mov
sbb
xchg
mov
js
push
jecxz
lds
dec
bound
add
dec
stos
or
call
int
arpl
fs
jae
adc
leave
fwait
(bad)
or
xchg
call
sub
sbb
inc
mov
ja
(bad)
xor
stc
mov
xchg
arpl
mov
adc
xor
les
mov
aad
push
adc
xor
adc
add
out
inc
add
jmp
adc
and
icebp
pop
pop
stos
mov
dec
lods
movs
lea
or
xchg
faddp
jae
mov
add
jg
cmp
mov
sub
out
push
inc
inc
push
mov
call
inc
popf
xor
out
mov
inc
push
popw
cli
xor
(bad)
outs
inc
jmp
or
iret
mov
push
push
mov
repz
cmp
test
int
aaa
sub
idiv
push
mov
xchg
mov
mov
(bad)
mov
adc
add
or
movs
div
push
cmps
js
push
mov
imul
add
stc
jno
mov
(bad)
sbb
stos
js
lods
daa
push
add
sub
jns
pop
imul
adc
int
ins
adc
enter
or
xchg
cmps
mov
jno
loopne
jl
cmp
out
aaa
sahf
xchg
aam
cmp
jmp
or
push
mov
jb
push
cmps
dec
mov
aaa
inc
or
arpl
cmp
ja
(bad)
imul
and
jo
loopne
mov
xor
xchg
ret
rcr
test
leave
or
pop
gs
cmp
pop
cmp
and
push
and
jnp
push
mov
jmp
enter
pop
cmc
fistp
std
cmp
dec
into
pushf
add
add
ret
jle
dec
pop
not
aaa
adc
sti
add
popf
aad
mov
iret
cmp
xchg
ret
nop
(bad)
or
in
jl
mov
and
test
push
cmp
xchg
mov
add
ret
pop
xor
pusha
jno
inc
mov
add
test
cmp
hlt
jb
into
cmp
xchg
dec
retf
xchg
aad
inc
mov
sub
pop
mov
adc
and
sub
lahf
pop
sahf
xchg
or
rcl
cmp
shl
inc
fwait
popf
inc
and
lahf
(bad)
cli
push
mov
fwait
idiv
jbe
mov
ss
ds
cs
pop
int3
stos
scas
inc
shl
mov
loop
mov
or
rcl
frstor
or
xchg
dec
fs
pop
mov
xchg
jl
dec
xor
ins
lea
in
mov
jge
push
push
jmp
mov
sub
mov
cmp
inc
mov
xchg
cwde
add
cmp
shl
mov
loopne
in
pop
mov
ss
sub
xor
dec
das
adc
push
cmp
lahf
sub
mov
mov
jnp
mov
mov
jbe
jae
mov
xchg
and
lods
in
movs
movs
aaa
cmps
pop
add
or
aad
loope
inc
(bad)
mov
xchg
out
xchg
les
into
push
outs
jns
dec
and
xchg
push
movs
mov
sbb
adc
test
xlat
in
cmc
stos
cmp
inc
mov
cmps
and
jnp
sbb
call
lods
mov
sbb
sbb
bound
dec
enter
xchg
adc
neg
sub
pop
fild
or
xor
fistp
in
mov
sbb
sbb
jns
out
mov
xchg
sub
call
mov
retf
pop
mov
clc
scas
mov
sbb
retf
push
outs
push
repz
mov
add
popa
stc
xchg
mov
ret
std
mov
mov
sbb
mov
mov
or
hlt
xchg
popf
enter
pop
push
push
inc
int3
outs
js
clc
fwait
cmp
push
out
call
enter
out
dec
pop
in
ror
mov
rol
out
adc
adc
je
pop
pop
sahf
dec
(bad)
sbb
push
adc
loop
pop
add
popf
mov
sbb
pop
xchg
dec
fidivr
sub
ins
jnp
(bad)
and
iret
out
jmp
stos
and
ficomp
mov
xchg
push
mov
inc
call
mov
and
xor
mov
leave
mov
pop
lds
jge
lods
repnz
mov
loop
jo
dec
adc
or
aaa
or
enter
jmp
cmp
repnz
mov
push
sbb
xor
daa
mov
lods
int3
shr
add
and
push
and
xchg
sbb
test
pop
jmp
int
mov
call
std
pop
outs
xchg
movs
cmp
int3
mov
fidiv
push
fild
push
mov
xor
or
int3
shr
int3
pop
in
stos
je
idiv
dec
gs
and
scas
xchg
mov
jmp
jmp
dec
xlat
add
sub
stc
in
js
or
or
dec
std
int3
enter
lea
sub
sub
sub
sbb
aam
sbb
add
xlat
lock
push
or
dec
push
cmp
pop
cmp
out
inc
dec
xor
and
mov
or
cmp
dec
adc
jp
arpl
fstp
pop
or
lods
test
movs
mov
mov
inc
xlat
int3
hlt
inc
cdq
push
push
pop
mov
xchg
pusha
jg
or
add
push
int3
dec
xor
sbb
and
rol
fs
fldcw
ds
or
pop
rep
loope
ret
cmp
test
fimul
neg
adc
inc
fs
idiv
sbb
jmp
popa
pushf
xor
fsub
fdiv
sbb
enter
pop
dec
mov
cmp
fistp
and
in
cmp
and
lods
sbb
aad
jae
cmp
enter
push
jbe
or
lea
xchg
mov
dec
mov
sbb
loopne
loopne
xchg
js
lods
and
nop
push
mov
repz
or
addr16
repz
test
sub
push
push
scas
jp
fisubr
xor
fcmovbe
fldcw
jo
mov
push
and
pop
aas
xchg
adc
(bad)
(bad)
jmp
push
call
xor
push
inc
lods
cmc
shr
cmp
push
fistp
ins
fadd
mov
sbb
popa
jmp
push
push
out
cmp
and
push
sbb
mov
enter
gs
mov
addr16
mov
jae
adc
and
sbb
xlat
mov
(bad)
ss
imul
(bad)
dec
dec
je
mov
hlt
sub
push
shr
enter
jg
fmul
mov
fwait
xor
mov
sbb
sar
push
cmp
das
in
int
stc
outs
and
cmp
sub
scas
mov
cmps
sahf
or
sti
vcvtsi2ss
aad
lea
ja
into
and
sub
in
mov
pop
cmp
mov
shr
frstor
cmp
add
mov
mov
jbe
aam
mov
icebp
push
inc
out
inc
pop
sahf
out
pushf
xlat
sbb
sub
sub
push
jmp
scas
sbb
sbb
dec
or
pop
add
add
xchg
fist
inc
jge
push
cdq
sub
xor
fidiv
pop
(bad)
jl
call
in
jmp
popa
pop
out
sub
push
sbb
and
inc
fucomi
pushf
lods
sub
push
mov
mov
xor
ja
xchg
sbb
mov
in
jne
push
stos
in
int3
jae
push
dec
rcl
cmp
out
jae
adc
mov
pop
pop
pushf
jb
jo
clc
push
inc
shr
xchg
mov
adc
xor
sahf
sti
pop
neg
out
xor
sbb
enter
shl
mov
pop
mov
daa
xor
add
gs
inc
pop
not
jo
imul
adc
nop
jne
cli
jle
mov
cmp
jmp
es
dec
xor
jnp
xchg
mov
ja
xchg
pop
ss
int3
rcr
js
stos
jle
mov
mov
mov
mov
ret
push
dec
sub
repnz
ins
jbe
inc
ror
mov
xor
pop
loop
dec
retf
dec
push
jle
mov
movs
sbb
pop
push
jno
sub
or
xchg
mov
jo
mov
mov
mov
int3
iret
and
sub
sub
fwait
test
xchg
lods
mov
cmps
mov
or
add
and
scas
add
int
scas
add
sub
in
popa
jno
mov
jnp
pop
clc
jg
sub
aad
lods
dec
arpl
xchg
push
jecxz
sar
cmps
mov
mov
int3
call
cmp
sbb
jp
ja
add
scas
mov
mov
aam
into
sub
push
daa
ret
dec
bound
aas
movs
ins
ja
mov
std
sbb
ret
data16
aam
sub
push
inc
das
in
sub
movs
or
sbb
push
mov
ror
adc
mov
popf
retf
inc
shr
je
outs
pop
fistp
xchg
jno
pop
add
sub
pop
int
arpl
pop
jmp
mov
jmp
iret
jle
xor
mov
data16
xchg
addr16
cdq
push
pop
enter
mov
or
mov
mov
in
jo
xlat
add
dec
xchg
xor
daa
inc
lods
add
sahf
stc
mov
xchg
les
cmps
xchg
pop
daa
ins
push
call
rcl
popa
scas
into
lods
xchg
mov
fs
ficom
clc
xor
sbb
mov
mov
fnstcw
sub
cmp
cli
jecxz
mov
addr16
and
push
push
mov
mov
lods
dec
add
pop
cmp
and
daa
and
mul
inc
pushf
cs
push
sub
and
cs
pop
add
scas
call
cmps
jo
inc
aas
mov
in
xor
cdq
jne
ror
movs
inc
fimul
cmp
icebp
jno
sbb
je
mov
push
shl
inc
jne
out
fcmovu
and
loopne
leave
push
test
mov
loopne
cmp
test
xchg
jge
push
sbb
and
or
sbb
jmp
inc
out
or
pop
push
jmp
cdq
xor
pushf
sbb
push
arpl
mov
aaa
push
mov
sbb
sbb
xor
xchg
in
fisttp
jge
sbb
inc
xor
add
mov
mov
jmp
in
xor
dec
dec
mov
ror
pop
lahf
fist
jle
mov
pop
dec
push
test
push
(bad)
stc
pop
xchg
jg
inc
jp
les
ffree
mov
js
mov
mov
sbb
jns
sahf
cmp
aad
test
lods
es
lock
out
push
push
mov
jmp
call
mov
mov
and
shr
or
xchg
sbb
js
shl
xor
push
sub
mov
and
sahf
jge
(bad)
enter
sti
lea
add
mov
push
inc
sub
pop
pop
and
jo
imul
lds
mov
lock
cmp
cmps
cs
pop
fmul
add
popf
enter
and
push
rep
cmps
pop
call
adc
les
inc
fadd
stos
xor
sub
xor
xlat
sbb
ffreep
cli
dec
imul
dec
test
gs
dec
aam
inc
mov
mov
cmp
loope
int3
(bad)
inc
movs
out
inc
or
dec
rol
arpl
push
daa
mov
jo
fwait
data16
int
outs
jb
jne
(bad)
cli
xchg
lods
adc
retf
jmp
leave
sbb
loopne
mov
data16
mov
hlt
inc
shl
out
jae
mov
test
cmp
pop
je
stos
fnstcw
std
stos
jle
cmps
sub
inc
dec
mov
sahf
icebp
inc
dec
out
(bad)
lods
ret
xchg
xchg
sub
jecxz
test
fisttp
nop
lds
cmp
mov
sub
cmp
cwde
mov
mov
scas
lock
pop
sar
dec
dec
repnz
aad
arpl
dec
adc
jne
fist
sub
sub
xchg
mov
rcr
loopne
jbe
mov
cmp
mov
and
adc
repnz
(bad)
aam
fild
test
push
repnz
retf
loope
sbb
cli
lea
xchg
push
xchg
pop
lods
sub
adc
scas
loopne
xor
mov
xor
dec
and
mov
and
arpl
fild
pop
nop
test
jp
mov
mov
repnz
adc
(bad)
call
cmps
pop
mov
mov
mov
xlat
jg
lods
mov
out
retf
push
clc
fisttp
dec
neg
test
xor
rcl
sub
lods
js
sbb
sub
aad
int3
or
jae
pushf
jnp
cld
or
(bad)
sub
mov
outs
ret
leave
pop
shl
jns
jmp
pusha
dec
adc
jb
dec
(bad)
cdq
(bad)
outs
sar
and
(bad)
and
bndldx
and
call
and
sti
pop
sti
cwde
mov
call
adc
lods
outs
stos
fsin
(bad)
popf
and
sub
imul
or
hlt
shl
push
(bad)
sbb
jne
jecxz
(bad)
clc
fild
call
repnz
mov
hlt
add
into
and
push
or
adc
sahf
test
push
push
iret
sub
inc
inc
xor
mov
icebp
scas
push
xchg
enter
cmps
sar
jmp
cmp
push
adc
mov
xor
cmp
inc
mov
push
shr
(bad)
pop
ficom
or
mov
dec
mov
mov
dec
ss
ss
sub
jmp
jecxz
test
mov
inc
jmp
es
repz
xor
or
neg
pusha
inc
dec
jbe
xor
or
(bad)
out
cmp
push
arpl
inc
xchg
fisub
popa
outs
pusha
lea
pop
pop
daa
xchg
(bad)
into
pushf
xchg
push
inc
add
cmp
adc
mov
and
mov
(bad)
je
push
repnz
inc
jp
rcl
js
mov
bound
ret
or
es
outs
rcr
mov
movs
leave
pop
push
pushf
push
pop
mov
xor
shr
loop
fisubr
and
xlat
push
push
mov
ficomp
mov
rcr
leave
(bad)
mov
popf
loop
sbb
stos
mov
in
pop
mov
pop
test
lahf
push
lods
sub
add
cmp
sbb
and
cmp
ja
into
mov
loopne
dec
sub
jle
clc
int3
frstor
jb
mov
addr16
cmc
lock
movs
mov
lods
or
inc
pop
popf
mov
xor
and
or
and
out
dec
inc
nop
enter
adc
out
push
stos
retf
sub
jmp
lahf
jmp
fiadd
ret
push
into
(bad)
dec
imul
pop
add
xor
xchg
lds
inc
jp
iret
repnz
xchg
inc
(bad)
cmp
js
mov
sbb
cmps
dec
dec
dec
shl
movs
mov
xchg
iret
push
inc
push
es
ss
or
adc
loop
ins
add
pop
or
pushf
fsubr
pop
pop
cdq
dec
stos
enter
push
(bad)
pop
push
(bad)
push
push
or
xor
dec
push
fist
test
enter
mov
sbb
test
(bad)
ins
(bad)
sti
mov
add
movs
pop
in
outs
adc
adc
and
mul
push
push
dec
pop
jne
cmp
mov
cs
sub
pop
imul
(bad)
into
icebp
les
push
pop
repz
aas
adc
in
jg
jb
cmps
xor
add
xchg
ins
cmp
jae
sti
push
push
cmps
lock
jns
xor
push
inc
adc
inc
cmp
cld
mov
clc
sbb
push
xchg
sub
cmp
mov
push
dec
push
sbb
je
aas
ficomp
aad
int3
or
fbstp
rol
push
cmps
pop
inc
leave
call
ret
repz
stos
and
test
call
fwait
jae
rcr
push
and
or
inc
and
mov
enter
fcom
mov
ret
xor
iretw
inc
sysexit
out
in
pop
push
adc
nop
cmc
iret
mov
xchg
push
stos
stc
clc
mov
mov
jno
mov
adc
icebp
lods
test
or
push
xor
test
cmp
fstp
adc
or
inc
imul
hlt
xchg
sbb
pop
(bad)
jnp
add
push
push
xchg
jg
rcr
popf
mov
or
push
push
mov
mov
or
es
xchg
dec
xchg
dec
jne
popf
ja
clc
mov
nop
jbe
(bad)
dec
(bad)
cmps
mov
hlt
pop
gs
ret
repz
out
out
cdq
jno
xchg
movs
out
js
lods
inc
push
jecxz
sbb
sub
data16
and
movs
clc
dec
mov
push
mov
std
mov
call
sbb
(bad)
lds
fisub
add
fbstp
imul
ja
call
std
jmp
imul
push
xchg
aam
fisttp
and
pusha
aas
pop
addr16
in
cs
or
adc
sbb
cmp
mov
retf
mov
sub
add
sbb
scas
arpl
push
shl
movd
das
cmp
xor
jl
and
inc
cwde
pop
mov
inc
or
inc
or
add
dec
or
sub
mov
fnstenv
sahf
xchg
sub
inc
add
xchg
add
retf
jo
out
int
mov
cmps
(bad)
aas
mov
mov
cmp
push
pop
fistp
sbb
cmp
imul
test
sbb
scas
jp
repnz
add
aas
or
cmp
and
in
cmps
fs
mov
ret
in
add
loop
mov
inc
loop
fdiv
adc
mov
repnz
icebp
sub
and
xchg
dec
or
or
shl
and
fldcw
bound
int
sbb
mov
and
mov
cli
fs
jge
es
and
push
xor
stos
fidivr
and
(bad)
mov
rcl
sub
mov
fild
les
leave
sbb
in
inc
lea
sub
or
sub
movs
repnz
enter
jae
sar
sub
sahf
fimul
fwait
out
pop
cs
xlat
ss
pop
cmp
sub
xor
push
je
pop
aaa
loope
sbb
in
dec
fnstcw
scas
jnp
adc
inc
jns
pusha
cld
popf
xchg
jo
stos
test
fsub
bnd
addr16
jmp
(bad)
in
lds
pop
dec
aaa
cmp
cmp
out
ins
jmp
arpl
cld
pushf
pop
fcomp
leave
pushf
sti
or
ins
pop
or
or
pop
adc
and
lods
push
jg
cld
aad
out
and
enter
ds
sar
(bad)
and
xchg
mov
ss
add
add
repz
adc
loop
mov
movs
xchg
outs
push
add
sbb
neg
lahf
and
mov
and
push
xor
adc
jno
stos
adc
dec
mov
repz
fiadd
cmp
ror
adc
les
xchg
inc
shr
cli
pop
adc
out
in
push
aaa
push
cwde
retf
std
mov
cmp
add
lahf
adc
mul
dec
push
add
mov
(bad)
(bad)
rol
pop
pop
adc
cmp
repz
fld
xchg
cwde
xchg
add
adc
inc
imul
mov
movs
mov
call
or
xchg
stos
jno
leave
lock
xor
add
cmps
add
mov
popa
outs
js
and
fs
stc
xchg
bound
les
dec
pop
sub
push
xchg
sbb
sahf
jp
in
movsx
stos
add
jb
repnz
nop
call
shl
mov
jle
pop
lahf
cmp
ja
jae
add
pop
xchg
ss
sub
xor
dec
mov
std
in
add
js
inc
(bad)
cld
mov
jae
push
mov
inc
out
dec
dec
dec
cwde
jns
fld
rcr
pop
fisub
xor
push
xor
adc
add
mov
(bad)
out
out
loop
test
dec
dec
xor
inc
push
xor
call
xchg
push
loope
mov
(bad)
ss
and
shl
push
and
vmptrld
shl
ja
cmps
stos
imul
out
add
shr
inc
xor
push
add
jle
push
sbb
call
mov
or
or
pop
pushf
mov
inc
or
xor
cmps
sub
nop
sub
xor
xor
mov
pushf
mov
xchg
push
mov
adc
ins
or
in
loopne
add
pop
js
test
mov
std
add
test
push
inc
shl
mov
inc
das
dec
cmp
fisubr
hlt
xor
mov
sbb
inc
add
xchg
mov
dec
aaa
div
ja
add
arpl
ja
lods
lods
movs
retf
pop
push
jmp
sub
jno
dec
cmp
fwait
mov
add
cmp
adc
mov
jno
and
nop
sbb
mov
sar
mov
movs
sub
(bad)
fistp
jo
inc
fwait
add
or
retf
lods
pusha
xchg
sub
inc
mov
scas
jnp
test
mov
xchg
add
(bad)
out
sti
pop
jno
imul
test
in
retf
inc
clc
sub
or
fst
in
rcr
rol
xor
(bad)
push
rdmsr
and
loopne
outs
jl
das
sbb
fwait
adc
test
jge
xchg
jae
fs
movs
jp
adc
inc
shl
in
inc
sbb
sub
fadd
xchg
fldcw
jmp
mov
sbb
test
fwait
inc
sub
in
dec
iret
ins
jg
dec
adc
fistp
data16
aam
xlat
xor
pop
loopne
das
jbe
push
mov
in
stos
rcr
mov
popa
add
cmps
jmp
mov
ror
popa
inc
jg
repnz
mov
das
(bad)
in
mov
sub
test
jae
mov
stc
inc
(bad)
mov
dec
lea
sahf
je
rcr
dec
dec
mov
fst
in
dec
rol
fdivr
or
sbb
stos
push
lods
mov
retf
das
push
or
sbb
add
sub
fsubr
popa
aad
loope
cmp
test
ss
jae
mov
pusha
dec
add
cmp
xchg
adc
loopne
or
enter
xchg
es
jmp
pop
(bad)
leave
adc
inc
cmp
cmp
jmp
dec
ja
jne
lahf
imul
and
shl
jle
mov
pop
sbb
sar
sub
jecxz
scas
mov
test
icebp
pop
cmps
pop
jno
jno
push
pop
cmps
xchg
adc
rol
std
call
inc
jge
push
je
pusha
jbe
or
arpl
push
sub
adc
dec
fld
in
call
sub
and
test
shl
les
frstor
clc
in
aam
and
sbb
aam
loop
mul
imul
jmp
(bad)
jmp
jl
adc
fs
pop
retf
dec
xchg
les
mov
inc
ds
jg
ss
lahf
push
leave
in
xchg
push
shl
inc
lods
push
adc
out
dec
mov
dec
pop
pop
or
inc
shl
iret
retf
fs
push
popa
add
sahf
test
xchg
in
fisttp
mul
jecxz
imul
das
inc
rcl
jnp
adc
push
aas
lock
and
scas
leave
mov
pop
dec
cld
xor
pop
cmps
sbb
sahf
test
jb
frstor
popf
das
imul
cmp
movs
inc
aad
in
and
add
or
mov
fs
not
pop
(bad)
fwait
inc
mov
in
dec
fst
clc
pusha
loopne
pop
inc
test
add
(bad)
stc
mov
addr16
lock
jns
fimul
xchg
loope
ret
inc
jnp
fnstsw
dec
daa
jns
add
in
cmp
icebp
jbe
fidivr
xchg
fist
loope
fstp
std
cmp
mov
sub
jmp
xchg
es
out
call
in
xor
mov
sti
ins
mov
inc
jae
xchg
cmc
dec
loope
pop
(bad)
xor
xchg
fucomip
adc
xchg
pop
sub
hlt
scas
sbb
mov
pop
or
push
fild
jbe
stc
stos
arpl
dec
frstor
fiadd
ficomp
popf
test
jo
pop
lods
add
mov
jmp
sub
mov
adc
jmp
sub
int3
mov
stos
jecxz
jae
mov
push
ins
cmp
mov
out
mov
sub
dec
call
dec
imul
sub
inc
call
cmp
lea
mov
jne
outs
dec
jbe
pop
sub
arpl
cmp
iret
mov
loope
inc
bound
jmp
lods
inc
dec
das
jp
add
sbb
les
push
pop
inc
add
jecxz
mov
sbb
sub
mov
jmp
push
in
(bad)
cmp
fstp
out
and
in
(bad)
out
dec
pop
adc
sbb
sbb
jp
cmp
xor
lods
outs
das
mov
xor
mov
cld
das
inc
push
gs
or
hlt
xchg
dec
outs
dec
jno
enter
repz
jle
adc
and
cmps
jno
sbb
test
pop
mov
mov
and
mov
inc
xor
ret
mov
pop
xor
and
shr
or
enter
je
scas
data16
dec
ja
adc
jae
sbb
mov
and
mov
std
dec
cmp
jne
out
call
jmp
call
imul
imul
jno
fistp
adc
sahf
pop
out
and
fs
in
imul
mov
mov
ins
ins
inc
adc
popa
(bad)
out
ins
or
xchg
pushf
ds
add
mov
lods
and
int3
add
mov
gs
inc
xchg
mov
pop
and
cmps
xchg
into
cmp
mov
push
add
push
cmp
lods
adc
adc
outs
pushf
jge
dec
stos
popa
sbb
or
repz
imul
(bad)
shr
(bad)
jnp
or
int3
mov
enter
sub
pop
push
sti
mov
in
inc
push
push
inc
dec
out
jae
push
rol
add
sub
push
cmp
and
mov
dec
into
push
iret
or
mov
daa
lds
pushf
aam
cmp
shl
mov
ins
mov
stos
mov
mov
jecxz
shl
sar
pop
mov
or
mov
dec
and
ds
sub
adc
mov
aad
jecxz
sub
mov
ja
das
mov
rcr
or
mov
dec
pop
push
push
cmps
jmp
fwait
inc
push
fcomp
cwde
cmc
xchg
mov
inc
int
je
and
into
stc
push
jnp
mov
aad
stos
ins
scas
mov
sbb
add
mov
in
aad
enter
mov
aad
loop
jl
pop
aas
and
inc
dec
fwait
outs
fcmovnu
jecxz
int
inc
sbb
mov
mov
leave
lahf
jmp
pusha
stos
inc
xchg
mov
and
mov
or
sub
test
fcom
fsubr
icebp
jb
iret
add
jbe
inc
mov
mov
(bad)
cdq
test
dec
xchg
mov
inc
mov
push
mov
rcl
mov
mov
jo
call
jp
rcr
push
mov
repnz
nop
movs
and
sar
(bad)
fidiv
adc
adc
dec
jmp
rcl
lahf
xor
cmp
jnp
push
jle
inc
test
mov
xchg
add
aad
in
mov
mov
mov
mov
and
into
(bad)
inc
and
movs
xchg
sti
cmps
pop
mov
inc
pop
inc
inc
and
jo
pop
push
sbb
imul
fdiv
xchg
out
mov
pop
lahf
jl
push
mov
cmp
stos
cs
jle
mov
fst
mov
and
cld
not
push
adc
mov
or
pop
int3
movs
and
adc
(bad)
mov
dec
dec
fisttp
cmps
mov
leave
mov
gs
jmp
hlt
jg
and
pusha
clc
repnz
push
or
inc
dec
stc
mov
or
scas
jns
inc
dec
out
sbb
pop
out
inc
lock
mov
bound
jnp
enter
mov
cmp
(bad)
mov
(bad)
adc
les
xchg
xor
push
pop
lgs
imul
push
repz
stos
icebp
mov
rol
mov
arpl
and
xchg
mov
cmps
ins
mov
rol
neg
loope
addr16
rcr
(bad)
push
push
mov
mov
call
push
(bad)
nop
inc
xor
pop
in
int3
adc
add
pop
inc
mov
pop
adc
ret
and
nop
ins
dec
inc
leave
sbb
inc
in
pop
outs
lods
stos
cmp
push
inc
push
xor
pop
adc
inc
dec
add
jne
xor
sbb
ds
fisub
in
lods
jae
out
mov
sub
clc
mov
add
xor
xchg
in
push
outs
jne
mul
dec
lods
ret
sub
push
xor
dec
dec
sbb
mov
popf
mov
sub
dec
arpl
push
mov
cmps
dec
push
and
jbe
in
jmp
(bad)
lods
fnsave
or
jne
(bad)
cmp
nop
outs
shr
cmp
nop
cmp
mov
iret
je
das
pop
add
push
mov
dec
sbb
fwait
retf
or
sbb
fdivr
fcom
hlt
sar
inc
mov
call
test
and
xor
out
fild
cmps
xchg
js
dec
rcl
sub
sub
out
xchg
punpcklwd
fnsave
jecxz
sbb
sbb
fs
add
loope
adc
cdq
in
ffree
jnp
push
test
and
jp
lds
(bad)
and
data16
fld
adc
stos
out
dec
shl
xor
adc
imul
mov
adc
add
(bad)
in
cld
cld
in
xchg
jo
sbb
mov
push
outs
cmp
repnz
sub
mov
stos
mov
in
stos
jo
and
sbb
xchg
sbb
jge
ffree
imul
push
mov
aam
pop
jno
jae
es
sub
adc
and
cmp
(bad)
adc
(bad)
and
stc
and
dec
pop
mov
push
(bad)
sbb
movs
inc
in
ja
addr16
mov
jmp
fcmovne
inc
shl
jmp
popf
sbb
popa
sub
call
lea
pop
adc
cdq
mov
xor
push
ins
clc
cmp
push
mov
ss
push
outs
pop
and
sbb
out
and
fistp
js
sbb
xchg
xor
xchg
ins
cmc
dec
push
test
mov
mov
imul
jmp
scas
dec
push
sti
repnz
sar
movs
or
inc
sti
mov
loope
and
mov
(bad)
pop
push
inc
sbb
jg
ins
(bad)
sbb
imul
sbb
jmp
imul
imul
test
shl
adc
jnp
mov
stc
jo
mov
jmp
sub
iret
mov
test
mov
(bad)
push
(bad)
shl
mov
(bad)
ss
xchg
cmp
fild
(bad)
mov
inc
push
in
xchg
pinsrw
mov
dec
sub
or
(bad)
pop
adc
pop
xchg
pop
cmc
pmullw
outs
pusha
jle
xor
call
and
dec
test
xchg
repz
lods
mov
sti
mov
inc
jb
into
clc
push
jae
arpl
sbb
mov
call
xchg
dec
or
cmp
mov
aam
push
xchg
dec
xchg
jecxz
jbe
lahf
stos
out
pop
or
fld
in
(bad)
popa
imul
pop
pop
retf
or
stc
push
sti
es
push
cli
or
daa
loop
adc
pop
inc
es
aam
cmp
jg
test
jp
lock
xchg
sahf
jecxz
int
sbb
aaa
into
sub
aad
adc
mov
push
mov
sahf
out
mov
fdiv
inc
or
out
ja
lahf
jle
pop
scas
(bad)
cwde
sub
js
aad
pop
stos
add
cmp
sbb
neg
test
push
aaa
ja
sbb
inc
in
icebp
mov
pop
jmp
sbb
jmp
in
add
push
dec
sub
mov
or
dec
xabort
imul
fcomip
test
mov
xchg
(bad)
pop
je
lds
sub
pop
test
nop
dec
mov
and
dec
icebp
xor
cmp
into
push
dec
mov
lock
mov
repnz
cmc
pusha
shr
push
fdiv
cli
arpl
mov
lods
ins
mov
xchg
push
jle
bound
xor
pop
fimul
and
cdq
cdq
xchg
das
dec
cli
daa
inc
push
sbb
xlat
push
outs
mov
sub
mov
addr16
(bad)
mov
lods
mov
sub
pop
ds
mov
push
fs
sbb
out
cli
cdq
inc
bnd
push
add
gs
aas
xlat
fld
add
nop
daa
jnp
rol
dec
pop
in
(bad)
mov
fsub
ins
push
arpl
sbb
popf
jb
out
xorps
xchg
add
dec
in
pop
cmp
dec
aam
cmp
push
mov
adc
cwde
mov
push
mov
pop
clc
retf
dec
ds
leave
nop
mov
xor
inc
or
jb
outs
mov
in
hlt
mov
inc
in
mov
pop
in
leave
push
test
xor
imul
cmp
out
out
jns
ins
dec
xlat
pushf
(bad)
sbb
mov
adc
xor
pushf
dec
call
stos
or
mov
scas
mov
jp
push
lock
mov
sbb
out
jecxz
(bad)
pop
lock
leave
lahf
(bad)
xchg
mov
or
mov
jo
sti
fistp
icebp
inc
cs
call
dec
ret
jmp
inc
scas
push
inc
sbb
xchg
adc
push
int3
mov
sbb
mov
pop
sbb
outs
neg
mov
jle
sub
mov
xor
push
push
inc
mov
pcmpgtd
(bad)
out
stos
jmp
or
dec
jmp
push
cli
adc
cmp
lahf
mov
adc
inc
adc
icebp
in
stos
pop
out
test
jp
adc
out
and
push
mov
ficomp
pop
pop
inc
ret
sbb
clc
test
lds
shr
call
lds
add
fmul
stos
inc
jb
clc
dec
out
pop
dec
mov
out
aas
hlt
std
xchg
xor
test
jmp
xchg
push
mov
and
cmc
mov
adc
test
mov
retf
xor
mov
inc
xor
(bad)
loope
jp
jl
xchg
std
add
cmc
in
pop
aaa
mov
sub
mov
lds
ret
shl
sbb
test
loope
and
arpl
xchg
mov
jmp
test
pop
push
out
xor
jl
fbld
push
push
nop
or
sub
imul
and
mov
imul
vfrczss
add
mov
adc
or
inc
dec
push
in
mov
movs
dec
cmp
ret
icebp
mov
sti
xchg
(bad)
adc
mov
jmp
fld
adc
aaa
out
mov
inc
cmp
jnp
sbb
mov
out
pop
clc
adc
push
inc
call
fist
inc
fincstp
sti
inc
loop
pop
leave
movs
call
mov
imul
add
adc
jle
cmp
mov
out
xchg
cmp
frstor
cmc
sbb
sbb
and
out
pop
add
retf
hlt
fbld
shl
pop
cmp
xor
movlhps
push
inc
push
fcomi
and
pop
push
push
xlat
imul
jo
dec
or
cmp
and
stos
sub
mov
in
mov
push
movs
shr
pushf
cmps
mov
cmps
jge
and
daa
inc
jmp
push
jl
addr16
int3
sub
bound
fbstp
xchg
dec
cmp
dec
icebp
cmp
out
xchg
adc
(bad)
lock
lods
std
pop
sub
test
dec
jl
neg
aas
cmp
out
or
shl
movs
mov
mov
imul
pusha
hlt
inc
dec
add
mov
mov
and
imul
ss
inc
jle
xchg
test
cld
jge
sbb
add
cmp
ffreep
adc
sbb
pop
mov
mov
pop
in
ja
(bad)
and
jb
fmul
les
adc
test
in
xchg
in
fisttp
pop
es
add
imul
or
sub
push
nop
cmp
add
mov
fcmovnb
stos
enter
(bad)
jg
push
ror
lods
adc
loopne
in
jmp
push
out
repz
add
dec
clc
in
sub
test
xchg
es
xchg
std
je
sti
push
leave
and
mov
adc
and
xor
mov
rol
imul
mov
pop
jnp
xchg
push
sbb
inc
dec
cmp
xchg
jecxz
mov
xor
cli
adc
enter
ret
adc
cmp
ds
adc
loope
push
lods
rcl
cdq
mov
pusha
mov
rcl
movs
out
and
pop
jno
rcr
jnp
cmp
jno
xor
jae
out
repz
pusha
dec
test
loope
inc
dec
je
pop
pop
fcom
dec
adc
(bad)
shl
outs
cmp
dec
push
xchg
sub
int3
rcr
mov
lods
sbb
push
sub
or
and
or
pop
push
mov
dec
adc
pop
test
cli
enter
in
jbe
hlt
out
cmps
std
or
mov
sub
ins
ret
outs
inc
xchg
imul
add
mov
in
jae
sbb
dec
leave
fwait
ret
cmp
sbb
or
movs
mov
and
or
out
cs
frstor
in
jp
adc
inc
mov
jg
aad
call
lea
scas
sub
adc
sbb
xchg
xor
add
std
arpl
add
add
je
daa
ret
adc
scas
xor
outs
or
xor
(bad)
dec
sub
add
rcr
push
inc
mov
nop
sub
add
mov
push
add
pop
jne
(bad)
add
test
or
shl
cmc
jge
dec
fwait
(bad)
stos
mov
and
xor
loope
xchg
push
push
add
rcr
cmps
outs
xor
cmp
inc
or
ins
or
dec
adc
or
clc
mov
in
leave
in
ins
add
je
sar
loopne
dec
test
mov
aam
mov
xor
fcom
or
test
jl
xchg
movs
je
mov
leave
pop
icebp
push
inc
outs
or
idiv
lods
cmp
and
(bad)
cld
aas
jp
cmc
int3
cmc
sub
into
fmul
ins
or
es
push
scas
movs
mov
and
inc
lock
out
push
cmc
imul
mov
test
inc
pop
add
push
nop
scas
jmp
cmp
mov
mov
in
mov
loope
mov
mov
push
inc
out
repz
rol
inc
cld
adc
jmp
jns
es
sub
xchg
out
mov
test
xchg
in
psubsw
dec
adc
iret
sbb
pop
popa
mov
jge
pop
push
aaa
sbb
push
adc
sbb
push
fnstcw
push
sub
sub
pop
inc
dec
xchg
je
dec
mov
dec
out
je
sbb
jecxz
sar
sub
sbb
or
lds
aam
out
inc
imul
(bad)
adc
pop
leave
cli
stos
into
pop
jae
out
pop
push
call
leave
jmp
push
das
xor
push
test
or
int3
xchg
pop
adc
add
sbb
stos
pop
lea
sti
enter
sar
mov
sub
cmp
pop
or
mov
aad
scas
movs
das
std
xor
adc
dec
push
or
(bad)
ins
inc
pop
loope
rcr
inc
js
inc
aas
dec
adc
leave
jmp
scas
cmc
repnz
inc
mov
push
add
pop
pop
or
popa
and
push
ins
sub
loope
push
test
pop
popa
idiv
js
jnp
scas
and
ror
nop
xchg
test
sub
dec
enter
fnstenv
xchg
push
adc
jmp
and
mov
jmp
int
retf
and
(bad)
mov
(bad)
mov
adc
int3
sbb
test
sub
loopne
scas
clc
sti
jae
test
mov
inc
cmp
jo
(bad)
and
or
stos
outs
imul
(bad)
mov
addr16
cwde
hlt
sbb
add
es
sahf
outs
adc
mov
xor
(bad)
popf
or
cdq
fisubr
dec
lods
retf
xsave
jnp
sub
lea
(bad)
scas
leave
cmp
and
and
mov
outs
xchg
popf
push
mov
adc
arpl
mov
into
aas
int
add
bound
mov
retf
lds
movs
(bad)
sub
and
retf
jns
popf
mov
sbb
push
rol
sbb
pop
cmp
and
jo
repz
dec
push
imul
xchg
mov
out
call
les
pop
add
push
clc
mov
cmc
scas
fwait
gs
stc
push
ss
xchg
jmp
ror
arpl
xor
sub
mov
mov
test
dec
xchg
aaa
enter
outs
fild
outs
daa
jno
aaa
mov
cdq
jne
ret
jbe
add
sbb
or
shl
cdq
ins
add
xchg
les
icebp
jmp
pop
das
xor
retf
xchg
shl
and
xor
sbb
push
sbb
cmp
fidivr
loope
dec
jle
ret
push
dec
mov
jne
cs
pop
sahf
cmp
pop
pop
cld
cs
test
cmps
xchg
sub
popf
out
mov
jge
iret
and
inc
sbb
xchg
mov
cs
sub
inc
es
add
ins
push
xlat
push
jb
aaa
mov
adc
dec
xor
shr
imul
daa
inc
mov
adc
xchg
xchg
push
js
mov
dec
add
dec
cli
xchg
mov
push
sahf
mov
sub
cld
addr16
dec
xchg
rcl
pop
add
push
cmp
nop
mov
lds
mov
mov
test
das
(bad)
sbb
cwde
icebp
in
xchg
sub
mov
out
cmp
in
cs
sub
push
push
pop
imul
cmp
pop
test
and
cmp
pushf
push
jb
mov
mov
addr16
outs
imul
neg
fisubr
clc
and
fmul
and
xor
dec
push
rcl
mov
in
xchg
mov
pop
mov
push
pop
int3
ficom
pop
movs
adc
mov
(bad)
out
call
test
lea
xchg
dec
xor
jae
cmp
stos
sahf
cmp
fist
and
lea
fwait
ror
push
mov
cli
movs
int
clc
aas
test
hlt
popa
in
sbb
je
das
mov
pop
test
sbb
imul
ja
gs
and
int
push
mov
xchg
mov
push
add
and
xchg
scas
mov
(bad)
clc
mov
sub
push
jbe
push
jmp
sbb
ret
cmp
and
xor
pop
add
rcr
push
aam
fmul
ret
xor
jl
jp
adc
stos
mov
movs
and
mov
inc
mov
inc
mov
inc
add
mov
sub
jecxz
aad
mov
and
mov
mov
stc
pop
cmp
cmp
imul
add
in
inc
ins
cmp
xor
sahf
ret
into
leave
fiadd
add
inc
repz
retf
jge
fbstp
adc
ins
(bad)
push
xchg
sbb
jno
std
add
aaa
fisub
sbb
push
fwait
mov
lea
and
movs
lds
push
fucom
jbe
cmp
fild
test
cmc
inc
mov
add
scas
cmc
inc
xor
or
pop
adc
retf
fucom
mov
aaa
hlt
push
cmps
jg
cdq
mov
(bad)
lea
adc
cmp
rcr
mov
je
popf
dec
cwde
das
test
stc
jp
push
dec
pop
jle
jl
adc
or
pop
pop
rol
stos
sbb
mov
mov
mov
pop
dec
sbb
iret
jmp
dec
(bad)
mov
lds
out
lea
lods
cmps
xchg
xchg
ret
jecxz
xchg
repnz
cmp
popf
inc
and
sub
fisubr
xor
mov
or
hlt
cli
lods
dec
cld
adc
stos
hlt
mov
sti
cli
je
and
into
pop
jbe
mov
cld
data16
mov
pop
fwait
adc
pusha
cmp
or
xchg
and
add
(bad)
xchg
dec
or
lock
pop
sub
jb
xchg
or
mov
mov
imul
sub
mov
add
aas
mov
sub
mov
or
scas
lods
call
dec
mov
add
adc
arpl
test
outs
and
cmps
xor
pop
lock
push
cmps
mov
and
bound
mul
jecxz
fs
nop
adc
addr16
mov
sbb
add
or
pop
data16
pop
shl
cmp
and
hlt
mov
jb
int
jmp
out
outs
adc
add
dec
lds
inc
jp
call
test
hlt
mov
and
hlt
bound
pop
adc
or
mov
idiv
call
bound
push
and
push
push
sbb
mov
ja
shl
scas
push
ror
push
imul
sbb
push
adc
cmp
push
hlt
sub
rcr
inc
sahf
mov
add
daa
aaa
xchg
out
mov
cmps
mov
or
or
outs
aam
inc
nop
jecxz
popf
pop
xor
jle
out
pop
stc
dec
cwde
push
out
repz
adc
add
aaa
sahf
bound
sub
xchg
test
dec
in
jno
jecxz
(bad)
popf
scas
pushf
retf
ins
add
xchg
and
and
nop
mov
mov
gs
sub
or
out
xchg
fisttp
test
jnp
and
sub
dec
add
mov
(bad)
pop
dec
mov
js
test
lock
cmp
dec
out
dec
cmp
mov
sub
test
push
xchg
push
mov
das
js
cmp
dec
out
loop
inc
jne
jl
mov
xor
loopne
mov
je
ss
sub
mov
mov
ins
dec
sbb
add
sub
mov
push
sub
pop
movs
repnz
xor
in
out
jb
push
xchg
and
jl
mov
pop
gs
test
inc
in
jge
aam
loop
jecxz
adc
xchg
mov
jmp
ins
into
loopne
adc
sbb
cld
int
adc
inc
or
adc
xchg
inc
jecxz
cmc
cmps
inc
sbb
cdq
outs
sub
popf
push
shr
jmp
inc
jecxz
inc
push
pop
pop
jmp
(bad)
push
jge
add
sub
sbb
jnp
dec
push
pop
in
rol
ja
(bad)
aas
das
repz
or
shl
and
xor
loop
das
pop
adc
and
pusha
loop
adc
sub
push
popa
loope
add
test
cmp
repz
pop
nop
mov
pusha
mov
xchg
pusha
cmp
mov
mov
mov
stc
call
and
push
fistp
not
pusha
add
jae
sbb
outs
out
cmp
stos
data16
test
pop
xor
mov
mov
push
xor
push
dec
shl
fidivr
jp
cld
in
or
and
in
scas
aaa
and
int
jmp
sub
leave
test
push
ficomp
ja
inc
std
pop
call
imul
pop
adc
mov
pop
imul
jno
out
xor
xchg
aaa
outs
pop
imul
push
cmps
mov
clc
adc
in
mov
(bad)
iret
xchg
jno
scas
pop
jge
popa
loopne
or
daa
js
push
mov
and
inc
dec
mov
jmp
ret
outs
popf
iret
shl
retf
xchg
out
xchg
repnz
pusha
(bad)
cmp
in
imul
cmp
std
js
pop
sub
mov
inc
adc
mov
jmp
sbb
rcr
pop
xor
imul
xchg
jo
push
loop
lahf
jno
pop
pop
xor
pop
sahf
sbb
jg
sbb
jo
mov
xor
scas
cs
adc
fld
nop
nop
retf
repz
cdq
imul
jl
xchg
aam
mov
add
add
scas
and
mov
fs
mov
or
jmp
push
test
add
pop
and
xchg
or
inc
and
test
shl
ja
push
arpl
mov
pop
js
jmp
mov
xor
mov
out
xchg
in
cmps
data16
(bad)
(bad)
or
or
cmp
mov
adc
xor
cmp
sbb
mov
xchg
sar
pop
pop
(bad)
xchg
in
pop
xchg
std
or
and
lds
ror
xor
retf
xchg
enter
push
fcom
adc
sub
inc
mov
jmp
leave
add
xor
or
push
mov
dec
push
outs
or
jne
mov
and
sbb
inc
push
movs
popa
mov
cmc
int
cmp
clc
lock
cmc
jle
call
dec
mov
push
sbb
daa
mov
std
push
aas
sub
jae
or
leave
or
mov
loop
lods
jo
nop
lods
mov
jbe
push
push
xlat
and
dec
mov
jbe
and
add
out
add
mov
dec
js
rcl
popa
jmp
xchg
lock
mov
pop
fnstcw
cs
and
mov
clc
cs
pop
pop
mov
loopne
loope
popa
xchg
mov
ficomp
sub
push
cmc
jmp
dec
addr16
sub
mov
push
inc
rcl
test
sub
ret
jle
out
add
add
mov
jae
sbb
bound
cmp
adc
xor
in
mov
lods
add
hlt
jmp
clc
addr16
in
adc
push
dec
sbb
aaa
pop
dec
std
clc
inc
loope
fbstp
jl
cmps
jb
xor
and
int
cmps
std
sub
fs
push
push
pop
xchg
or
jne
sahf
es
inc
mul
in
jg
cmc
movs
add
call
xor
dec
test
mov
(bad)
data16
neg
fucom
pop
dec
les
in
add
cmp
dec
mov
loope
sub
pop
fwait
and
fist
push
in
(bad)
xchg
cmp
bound
stos
in
sub
dec
in
repz
cli
movs
scas
push
sbb
(bad)
rol
jle
pop
dec
jge
imul
lahf
xor
push
fstp
fisub
xchg
pop
pusha
and
sub
cmc
loop
ja
enter
ss
pop
sahf
xchg
scas
fadd
mov
and
leave
cwde
aaa
xor
cmp
push
ins
jne
stos
mov
(bad)
aad
push
adc
adc
scas
jno
jns
aad
dec
mov
aad
sti
iret
nop
push
or
shl
fsubrp
fmul
xchg
shl
outs
std
cli
cmp
jecxz
mov
fmul
sub
rcr
movs
stos
pop
retf
push
retf
shl
push
int3
xchg
std
pop
xchg
shl
cmp
xchg
dec
push
daa
sub
inc
cmp
cmp
add
fisub
fwait
add
shr
push
xchg
shl
data16
fdivr
and
push
in
cmp
pop
test
arpl
xchg
cli
sub
jmp
retf
mov
stos
dec
xor
cli
test
pop
mov
mov
enter
test
or
pop
sub
mov
(bad)
(bad)
xor
xchg
out
push
cmp
repz
and
xchg
test
shr
in
leave
das
fld
add
pusha
in
dec
inc
mov
lods
(bad)
cmp
jns
movs
sbb
jge
sub
stc
repnz
jno
inc
std
pop
mov
mov
nop
ins
popf
int3
aaa
or
cwde
std
cmp
(bad)
dec
pop
jmp
shl
cmps
jno
mov
imul
xor
ins
or
mov
sti
(bad)
push
or
test
inc
pop
xchg
bound
test
xor
repz
fs
popf
fidivr
cmp
(bad)
int3
mov
out
xchg
jmp
inc
sti
inc
pusha
pop
inc
hlt
mov
inc
sbb
add
sar
inc
retf
cmp
sbb
shl
mov
hlt
push
push
fneni(8087
xchg
sub
adc
call
sbb
and
loopne
test
rcr
inc
inc
scas
test
into
shl
xor
pop
lods
cs
jno
loope
call
xchg
push
sbb
xchg
nop
push
into
out
inc
retf
jp
fcomp
xchg
rol
leave
icebp
cmp
inc
call
dec
sbb
pmullw
loop
pusha
inc
pop
mov
cmp
and
add
sub
cmps
xchg
sbb
lods
mov
mov
nop
cmp
fisub
xchg
cmc
mov
shr
imul
arpl
jns
fnstcw
mov
sbb
jg
(bad)
movs
(bad)
pushf
popf
ficom
add
loop
jns
or
xchg
mov
mov
cwde
(bad)
mov
cmp
jae
int3
pop
ds
xchg
int
pop
xchg
rcr
sahf
add
ja
xor
mov
bound
adc
jne
repnz
retf
sbb
rcl
or
pop
jbe
fcmovb
mov
test
scas
cwde
je
cmp
mov
cmp
pushf
adc
and
push
sub
mov
pop
js
sti
sub
jp
aam
pop
jmp
inc
test
sub
outs
add
scas
outs
rol
inc
pusha
or
mov
in
pop
repz
lea
das
enter
push
aaa
cwde
stos
test
repz
ds
cs
std
mov
out
or
jae
aam
cwde
inc
les
xlat
or
lods
mov
sub
mov
inc
imul
jbe
dec
(bad)
hlt
dec
aaa
dec
mov
cmp
cmc
sub
mov
xor
add
mov
movs
add
(bad)
into
popf
ror
clc
add
inc
xchg
jnp
sahf
sub
push
cmps
jle
fdiv
add
test
ficomp
lock
icebp
adc
mov
dec
pushf
popa
adc
jecxz
jmp
je
pop
out
sub
neg
push
sti
mov
xchg
popa
xchg
push
xchg
push
mov
mov
cmp
mov
mov
and
mov
xor
vmovntdqa
ret
sub
pop
in
dec
jno
test
push
int3
pushf
xor
leave
pop
push
pop
xlat
dec
leave
cli
mov
inc
cs
jmp
xchg
pop
ds
cwde
push
test
inc
add
stc
inc
push
dec
out
xor
mov
push
xchg
xchg
xchg
loopne
push
push
in
mov
xlat
adc
or
fimul
add
dec
jbe
mov
mov
fisubr
mov
sbb
pop
fstp
pmaddwd
adc
stos
fistp
test
leave
inc
xchg
fistp
or
ret
cmp
leave
ja
icebp
rcr
dec
xchg
push
nop
and
mov
cmp
xor
xchg
cmp
push
gs
frstor
mov
rcl
adc
ins
and
ins
mov
mov
iret
cmp
fs
xor
xchg
inc
push
je
xchg
(bad)
mov
add
jg
ja
jo
mov
retf
pop
test
cmp
rep
jbe
xchg
pop
outs
shr
or
(bad)
push
in
test
add
add
clc
ja
xchg
(bad)
cld
and
cli
dec
mov
hlt
retf
jecxz
pop
xchg
fsub
mov
movs
xchg
inc
dec
std
inc
into
fnstsw
mov
fdivp
ret
call
icebp
jae
jecxz
into
hlt
add
add
fxam
sub
pop
stos
mov
aad
mov
addr16
push
and
ret
dec
add
fst
mov
retf
movs
aad
add
fcom
retf
aas
xchg
jo
jecxz
push
js
pop
sbb
(bad)
into
mov
das
cli
xor
mov
dec
inc
dec
sbb
sub
fs
shl
mov
int3
ja
pop
enter
jg
sbb
mov
xchg
ss
cmc
arpl
sbb
cwde
dec
fild
popa
dec
rcr
push
xchg
das
test
fnstcw
and
ror
mov
mov
imul
aas
dec
dec
inc
push
xor
stos
aaa
arpl
ja
or
push
nop
dec
in
sbb
adc
adc
inc
or
(bad)
dec
inc
ja
sbb
arpl
jge
in
and
xlat
(bad)
sbb
shl
adc
push
adc
retf
cmp
ror
add
retf
nop
add
fisub
or
inc
mov
pop
pop
sbb
std
mov
sbb
xor
arpl
mov
cmp
shl
leave
mov
sar
stos
inc
mov
xlat
cwde
std
push
call
js
ss
nop
mov
imul
xchg
in
shr
popf
and
(bad)
jno
imul
repz
cmp
and
jge
lods
or
jns
sub
push
cli
mov
push
enter
xor
add
into
cmps
imul
push
in
fisub
mov
and
pop
cli
jp
push
lahf
inc
mov
int
std
and
mov
mov
stc
xor
xchg
or
mov
test
ss
and
(bad)
jbe
push
lds
jns
(bad)
inc
sub
pusha
mov
repz
push
fldlg2
jp
and
pop
push
or
lock
cld
call
push
mov
push
leave
gs
(bad)
leave
inc
dec
and
pop
or
loop
leave
pop
mov
(bad)
out
jnp
xchg
push
icebp
movs
inc
xor
and
sahf
xor
idiv
fwait
or
cmp
js
(bad)
out
pop
dec
rcr
nop
pop
(bad)
dec
mov
sbb
(bad)
jecxz
inc
adc
xor
mov
inc
ror
xchg
xchg
push
cmp
xlat
push
sbb
pop
test
mov
xchg
xlat
aas
ficom
out
iret
bound
sub
repz
test
jne
icebp
xor
fbld
cmp
add
retf
jb
lahf
jmp
sbb
dec
or
fbstp
add
sub
retf
cmps
sbb
fs
mov
sub
inc
xor
mov
js
aad
int3
out
sub
pop
dec
add
rcl
fld
jno
fmul
mov
sub
push
mov
mov
sbb
cmps
pop
push
scas
mov
int
in
ins
(bad)
rol
stc
icebp
imul
das
fs
xchg
jecxz
dec
shr
and
jae
sub
rol
not
xchg
push
test
iret
dec
push
xor
cmp
bound
push
push
daa
and
(bad)
aaa
in
call
push
cwde
push
cli
jns
out
sub
cmp
sub
cli
ficom
adc
jmp
add
mov
outs
loope
imul
je
cmps
xor
and
mov
adc
lds
jae
int3
out
mov
add
test
pop
arpl
xor
sbb
sbb
test
push
out
add
lahf
ret
or
test
sub
add
jl
out
(bad)
out
and
lods
shr
xchg
push
mov
ds
sbb
aad
jge
aaa
in
or
pop
scas
in
test
iret
sub
mov
cli
jge
jb
dec
cmp
in
sub
imul
push
or
enter
clc
(bad)
and
inc
pop
sbb
ss
mov
(bad)
mov
cmps
(bad)
(bad)
pop
(bad)
mov
and
mov
cld
cwde
xor
ret
adc
sbb
push
adc
pop
js
jmp
imul
mov
mov
mov
or
ret
cmp
test
or
push
dec
and
nop
pop
pop
xchg
aas
adc
ss
pop
add
ud2
sub
xchg
(bad)
into
jnp
sub
sbb
fmul
xor
loope
mov
push
adc
(bad)
fcomip
(bad)
xchg
inc
sar
dec
and
out
std
out
retf
xor
mov
push
add
jo
pop
in
mov
jmp
in
test
and
shr
xchg
pop
pop
cmp
dec
inc
aaa
adc
add
jo
and
jnp
and
dec
shl
scas
(bad)
dec
mov
pop
in
iret
and
int3
aaa
jle
cmp
cdq
adc
int3
sbb
shr
cdq
sar
rcl
imul
xchg
retf
loop
mov
and
jmp
and
dec
loop
(bad)
mov
mov
or
mov
loopne
cli
dec
sub
pop
adc
test
add
mov
jns
add
mov
mov
js
sar
pop
daa
pop
xor
sub
adc
jo
enter
xchg
push
jecxz
cld
xchg
xor
mov
mov
inc
mov
(bad)
push
ja
repz
mov
outs
bnd
mov
dec
sub
fild
repz
retf
inc
xchg
sbb
cwde
mov
sub
ror
inc
addr16
leave
sahf
add
sbb
out
jl
hlt
mov
sub
(bad)
icebp
(bad)
repnz
or
lods
loopne
jo
popa
jp
das
add
aaa
mov
jb
enter
(bad)
mov
add
xchg
jge
fstp
inc
shl
fdivr
sbb
fsin
int3
or
mov
xor
mov
leave
dec
call
push
out
jecxz
and
and
ror
scas
mov
xor
imul
out
call
das
cmps
ins
sub
int
pusha
hlt
mov
int3
xor
retf
stc
mov
mov
jp
jmp
sahf
inc
dec
mov
xor
shl
jae
xchg
add
cmp
(bad)
sar
(bad)
jne
or
inc
sbb
sub
fiadd
gs
jae
leave
lock
cdq
mov
in
loop
mov
xor
jnp
pop
or
xchg
cmp
shl
les
and
imul
pop
push
fisttp
or
lds
or
ficom
pshufw
out
sahf
imul
ds
jg
aaa
dec
sar
xchg
cwde
scas
lahf
pusha
cmp
and
adc
mov
mov
sbb
and
call
call
dec
xor
xchg
mov
mov
cmps
ds
rol
sbb
lods
mov
mov
pop
cwde
dec
ret
inc
sti
pop
sub
inc
pushf
shr
adc
jae
jmp
addr16
(bad)
jae
cmp
stos
cwde
sbb
icebp
push
inc
cs
push
call
jp
jnp
cmps
push
int
shr
or
cmp
inc
add
mov
dec
iret
cdq
hlt
data16
fidiv
xor
mov
mov
cmp
dec
dec
cmp
cmp
fbld
ins
das
sub
data16
add
mov
mov
je
mov
pop
hlt
mov
mov
inc
stos
out
mov
pusha
stc
sbb
sbb
and
xchg
sub
arpl
stos
mov
ror
mov
ret
jmp
adc
fcmovbe
push
jne
out
sbb
sbb
push
fistp
inc
pop
mov
out
and
int
push
inc
jne
fmulp
out
inc
out
cmp
sub
loop
scas
push
rcl
loopne
lock
pop
ja
popa
scas
sub
adc
jge
in
cmp
hlt
outs
in
pop
mov
xor
bt
sbb
push
ins
shr
hlt
stc
dec
rcl
in
addr16
add
scas
add
scas
dec
shl
mov
mov
rol
iret
retf
mov
or
sbb
imul
mov
jp
test
xor
mov
stc
cli
xchg
xchg
mov
nop
inc
cmp
xor
jp
shr
pop
ins
xchg
mov
loop
int3
rol
cwde
fninit
lods
hlt
inc
jo
mov
ret
outs
gs
and
pop
push
shr
push
mov
mov
and
jb
clc
push
jno
js
pushf
test
out
jecxz
daa
loope
sub
and
(bad)
lock
mov
mov
inc
and
(bad)
fadd
add
dec
lock
jmp
cmp
repnz
push
adc
and
add
mov
mov
(bad)
add
and
sub
lds
add
cwde
pop
xchg
pop
aam
arpl
add
les
fistp
dec
(bad)
jns
sub
sub
sbb
pop
adc
mov
or
lods
ret
add
sbb
mov
xchg
test
test
inc
mov
arpl
sub
mov
inc
and
test
jle
test
clc
es
or
rcr
cwde
fabs
dec
sbb
pop
fsave
rcr
inc
es
fistp
xchg
nop
dec
aad
(bad)
pushf
and
or
rcl
mov
sbb
and
mov
adc
push
ret
jle
leave
jb
sti
jbe
fadd
dec
scas
out
mov
pop
retf
repnz
into
aam
or
sub
dec
jb
pop
in
inc
test
outs
xor
mov
fisttp
inc
sbb
add
pop
out
(bad)
xlat
push
cs
push
xor
mov
test
inc
sbb
jl
int
add
int
cvtdq2ps
test
mov
movs
lods
loop
mov
jbe
mov
out
inc
jns
mov
or
stos
xchg
rol
jp
inc
mov
test
pop
jbe
cld
sti
test
idiv
out
mov
mov
xchg
mov
push
pop
inc
push
pop
mov
push
inc
lahf
xchg
scas
stc
sti
scas
cs
stos
xchg
xchg
imul
adc
inc
enter
mov
xchg
jb
xchg
data16
pop
pop
push
mov
mov
xchg
jg
popf
ja
inc
sub
shl
arpl
push
inc
adc
jg
mov
mov
fbstp
dec
adc
loope
mov
mov
jp
mov
jl
addps
cld
mov
or
aas
sub
cmp
mov
(bad)
cmps
mul
dec
call
retf
sub
dec
data16
int
ret
imul
scas
add
test
pop
and
imul
cld
fisttp
sahf
jp
ss
push
mov
(bad)
pop
inc
mov
inc
lods
mov
xchg
icebp
xor
aam
lock
in
stos
push
mov
addr16
mov
adc
xchg
mov
and
(bad)
loop
jb
loope
inc
(bad)
scas
stos
ror
push
push
dec
cmp
sar
jns
out
push
mov
lds
cmps
or
pop
rcl
gs
or
fild
(bad)
mov
lods
mov
stos
hlt
rcr
cmps
mov
and
adc
fsubr
cmp
movs
adc
scas
mov
cmp
test
sbb
mov
loope
outs
inc
adc
dec
cmps
loope
outs
mov
and
adc
cmps
push
pop
push
xchg
not
xor
or
shl
xor
cld
mov
xor
sbb
in
jle
lds
jne
(bad)
call
xor
jnp
jle
popf
jbe
aad
jge
cmp
push
sahf
fist
mov
rcl
xchg
pop
xchg
jmp
icebp
cmc
adc
nop
out
mov
add
mov
add
mov
push
dec
cmp
sub
or
ins
ror
sub
and
jmp
imul
sbb
jmp
lahf
mov
xchg
in
sub
mov
or
lods
push
hlt
cli
sti
dec
mov
xchg
and
movs
xchg
das
xlat
fld
pop
int3
mov
cmp
cwde
jmp
xchg
cs
aam
sub
dec
push
or
(bad)
sub
bound
xchg
mov
push
mov
sahf
out
xor
mov
rol
in
jg
cmp
pushf
nop
fs
cmp
lods
popa
pop
pop
in
into
jecxz
(bad)
jge
hlt
jge
jmp
sbb
mov
push
mov
xchg
call
in
ja
leave
lods
xchg
test
jge
dec
mov
(bad)
out
pop
arpl
pop
das
out
jbe
push
xchg
lahf
add
dec
ja
mov
sub
es
cli
jle
leave
js
xchg
loop
pop
popa
sahf
stos
fadd
jecxz
push
mov
mov
fwait
out
and
cmps
add
push
enter
mov
out
or
dec
jle
aad
in
mov
ins
push
dec
cmc
inc
fidivr
nop
rcl
retf
mov
jbe
lahf
div
dec
test
(bad)
cmc
mov
cwde
dec
sub
inc
push
dec
jl
scas
and
stc
iret
sub
sahf
xor
in
inc
pop
ja
xor
int3
in
fdivr
inc
cmp
or
mov
or
les
cli
mov
mov
inc
les
shr
outs
inc
jl
mov
ror
mov
fwait
pop
int
push
add
sub
arpl
jle
adc
pop
scas
sbb
imul
push
cmp
xchg
outs
mov
push
icebp
cmc
(bad)
xor
sbb
cmp
and
push
shl
movs
mov
dec
push
imul
xor
(bad)
jno
shl
movs
push
push
add
push
shl
sbb
jns
jg
sti
gs
mov
fsub
fist
mov
scas
add
popf
push
xor
push
mov
into
std
cmp
mov
stos
into
mov
cmp
mov
ins
imul
jg
enter
and
pop
mov
enter
pop
or
rol
xchg
ror
add
js
dec
and
cld
jg
xchg
push
mov
pop
dec
sti
daa
and
test
dec
jne
stos
and
les
xchg
inc
lahf
mov
mov
sti
sub
ffree
inc
ja
push
fisubr
mov
imul
jo
into
jmp
sbb
jle
gs
sub
call
test
nop
xchg
pop
scas
jo
ficomp
loope
movs
ucomiss
cmp
add
inc
aaa
ins
fdiv
push
adc
xor
xchg
idiv
fdiv
pop
pusha
add
out
and
xor
movs
sbb
stc
scas
into
int3
cmovb
sti
jae
rcr
jle
pop
(bad)
int
mov
mov
mov
ds
out
sbb
cmp
scas
push
call
enter
add
(bad)
jnp
lods
dec
dec
fs
daa
pop
dec
fld
inc
push
adc
out
retf
leave
ret
mov
jo
movs
cs
imul
mov
outs
sbb
in
push
loop
pop
popf
adc
int
and
jle
sub
add
inc
push
lods
mov
pop
clc
cs
sti
push
jp
shl
mov
leave
icebp
add
and
push
mov
adc
cmp
jl
call
adc
dec
push
add
cmc
pop
cdq
das
cmc
jnp
out
add
shl
hlt
mov
lods
test
jns
outs
daa
push
das
push
lds
lods
(bad)
pop
mov
pushf
jmp
mov
(bad)
rol
xchg
mov
inc
dec
sbb
or
mov
int3
mov
js
xor
dec
pop
fwait
outs
shl
lahf
mov
jb
dec
mov
push
cmps
(bad)
in
mov
stos
cmp
fld
femms
mov
xor
add
mov
sbb
fcomp
loope
inc
outs
cmp
pusha
sahf
fsub
xchg
jmp
loopne
xchg
sub
(bad)
scas
mov
xchg
lea
and
jecxz
add
adc
into
ffreep
sub
mov
(bad)
mov
adc
js
pop
sub
sar
xor
pop
sbb
mov
sahf
test
es
jp
push
data16
imul
pushf
mov
stos
ins
daa
out
or
mov
push
repnz
pop
retf
add
mov
retf
leave
ret
fstp
fidivr
jae
aad
sahf
adc
test
ss
scas
ins
ins
fisubr
fwait
mov
xchg
mov
fstp
retf
jb
aas
sub
mov
imul
pusha
jns
cli
jns
fst
inc
dec
int
in
fsub
mov
test
(bad)
(bad)
cld
sub
ins
ss
out
outs
add
and
mov
rcl
xchg
fld
bound
mov
cli
je
pusha
xchg
xchg
ds
popa
ror
and
cmp
xchg
jno
repnz
les
cmp
cmps
sbb
data16
icebp
shl
div
cmps
jmp
into
push
mov
stos
mov
xor
(bad)
popa
(bad)
xlat
jmp
push
je
mov
xor
add
mov
out
stos
pop
ins
jmp
push
adc
inc
or
sahf
stos
shl
ins
or
xchg
aad
push
pop
lods
and
sbb
cld
add
push
aad
push
jb
arpl
adc
push
sbb
and
jbe
cwde
xor
ins
movs
push
push
jmp
ss
adc
xor
xchg
mov
fwait
xchg
ins
xchg
popf
dec
arpl
xchg
cmc
inc
or
pop
xor
cmp
sar
in
ins
cmps
sbb
dec
hlt
add
lahf
xchg
stos
lods
jae
test
jg
(bad)
dec
leavew
imul
jbe
test
cwde
jmp
mov
mov
pop
and
pop
jle
daa
arpl
loop
das
pop
mov
retf
xor
or
fwait
outs
jne
les
pop
mov
jmp
pop
mul
sub
ret
mov
or
les
lods
(bad)
sub
stos
scas
or
jmp
dec
loop
ja
jbe
not
jbe
loope
ja
sti
adc
inc
je
scas
xor
jae
pop
leave
stos
(bad)
jmp
mov
shr
xor
sbb
or
out
fimul
sbb
add
inc
inc
(bad)
mov
and
js
(bad)
xchg
outs
into
xlat
mov
jb
push
mov
xchg
or
sub
hlt
sbb
inc
dec
push
mov
loope
inc
mov
(bad)
(bad)
push
hlt
ds
dec
adc
pop
push
jbe
mov
lahf
sub
xchg
sbb
add
(bad)
outs
loop
jbe
mov
xchg
push
xor
xor
pusha
leave
or
test
leave
sub
mov
js
sub
cmp
cmp
xchg
(bad)
sub
mov
cdq
mov
xchg
xchg
jle
inc
mov
pop
loopne
call
inc
xchg
lahf
push
mov
jns
or
pop
mov
dec
gs
ss
rcl
push
dec
cmp
iret
ret
mov
ja
aaa
scas
sub
sub
jns
sub
data16
pmulhw
fcomp
test
ss
aad
jmp
add
in
cmps
pushf
jno
push
mov
sbb
test
repz
xchg
es
aaa
xor
inc
int
(bad)
cld
mov
xchg
retf
pushf
or
data16
mov
ins
push
and
(bad)
mov
bound
jmp
shl
push
aad
mov
sub
push
dec
inc
mov
gs
loop
les
(bad)
ret
jo
cmps
xor
sahf
push
mov
sti
jge
xchg
call
pop
push
mov
xchg
inc
outs
clc
aas
adc
fidivr
cmp
lock
push
clc
pop
or
xchg
sbb
div
inc
clc
xchg
popf
mov
mov
jb
inc
sub
push
fs
xor
loopne
pop
dec
aaa
pop
xor
or
xchg
mov
sar
scas
stos
push
cmp
cmp
cmps
mov
leave
cmps
dec
and
add
dec
inc
push
(bad)
xchg
mov
les
mov
sub
das
stos
dec
add
das
and
cli
out
push
push
das
fcmovnu
sbb
pop
fadd
int3
movs
rcl
rcl
sbb
mov
iret
aad
iret
sbb
jmp
or
lock
icebp
xor
call
call
push
sti
sbb
mov
xchg
scas
push
jecxz
jo
sahf
mov
or
into
clc
pop
scas
dec
leave
fsubr
mov
call
pop
and
sub
jge
pop
int
or
sub
cdq
push
(bad)
cmc
jnp
jecxz
jbe
pop
jae
(bad)
in
fdiv
or
jmp
pop
mov
hlt
repnz
push
mov
push
jg
test
or
mov
les
inc
add
test
mov
jmp
arpl
sbb
arpl
sub
aad
outs
sub
dec
cmp
sub
xchg
mov
push
pusha
jno
int
clc
push
and
xchg
jl
xor
sbb
sub
push
call
push
aaa
inc
lahf
call
mov
mul
adc
outs
movs
imul
adc
sub
and
sahf
pop
jp
test
or
add
and
aas
and
ret
push
dec
ret
adc
jecxz
push
pop
and
clc
mov
(bad)
mov
ja
(bad)
lds
xchg
push
and
xchg
pop
mov
aam
imul
mov
and
imul
or
mov
fsubr
and
shl
fld
jle
outs
inc
or
mov
xchg
mov
arpl
(bad)
icebp
and
shl
mov
pop
je
popa
adc
outs
jp
lock
mov
ins
fucom
mov
int
loopne
and
adc
imul
data16
mov
fnstsw
cld
es
in
jmp
mov
pushf
push
(bad)
xchg
lods
ret
test
outs
fist
mov
jmp
gs
add
in
inc
arpl
push
jb
daa
retf
jnp
jbe
mov
retf
je
imul
mov
inc
fdivr
mov
stos
imul
enter
pop
leave
leave
icebp
mov
cld
mov
and
pop
shr
jmp
and
loope
pop
push
and
aaa
mov
jg
ja
cmp
(bad)
jo
inc
xor
pop
cs
test
inc
(bad)
jmp
test
loop
xor
sub
and
pop
push
mov
sti
pop
lahf
sbb
imul
out
xchg
xor
dec
dec
fcom
stc
cmps
pushf
mov
test
inc
enter
sbb
mov
mov
rcl
loopne
inc
inc
sbb
xor
inc
ss
or
adc
cwde
(bad)
scas
push
or
ret
inc
call
add
inc
mov
hlt
cdq
sbb
and
sar
hlt
dec
dec
push
push
jnp
sbb
sub
cwde
loope
es
repnz
popf
push
leave
fdiv
cmp
mov
cdq
xlat
stc
gs
mov
dec
mov
vlddqu
jmp
add
push
(bad)
rol
adc
inc
out
inc
cmp
scas
fld
sub
inc
pop
(bad)
fcom
cdq
jp
sar
stc
sahf
adc
stos
push
mov
retf
lods
(bad)
jo
pop
test
cs
cmc
mov
dec
lods
loop
sbb
xor
std
cmp
xlat
inc
repz
push
mov
jo
mov
mov
or
cwde
aad
dec
xor
fistp
idiv
movs
aaa
inc
push
fld
push
adc
push
sub
sub
sub
(bad)
jmp
adc
pop
retf
pop
cs
das
out
and
punpckhdq
mov
push
lock
mov
dec
or
cmp
adc
pop
gs
xor
inc
shl
xchg
cmp
or
adc
test
dec
(bad)
loopne
fstp
mov
cmp
pop
xor
es
fmul
dec
outs
iret
xor
xlat
xchg
mov
popa
repnz
fucomip
sbb
cmp
push
mov
jecxz
fcomi
setne
dec
movs
mov
push
jle
sbb
mul
push
xor
jecxz
push
jl
mov
arpl
dec
rcl
adc
ret
ins
jecxz
jb
hlt
mov
stos
push
add
and
mov
nop
push
aaa
mov
and
mov
gs
sbb
(bad)
iret
push
mov
sar
dec
or
adc
jmp
addr16
shr
dec
cwde
dec
ret
lods
test
jp
cmp
pop
jns
xchg
test
mov
aam
and
cmp
xchg
mov
mov
in
ins
jbe
push
add
out
ss
jnp
pop
sbb
adc
(bad)
cmp
sub
addr16
idiv
in
je
repnz
dec
pop
dec
xchg
sbb
or
sub
retf
push
push
mov
xchg
(bad)
jmp
push
popw
mov
int
adc
inc
mov
bound
cmps
mov
xor
jno
ret
(bad)
arpl
imul
les
push
dec
fisub
pop
add
xor
popf
loopne
mov
and
mov
or
aad
mov
xlat
xchg
(bad)
sub
add
dec
in
push
cmp
adc
das
pop
cmp
jns
mov
mov
xchg
push
jns
pop
dec
lds
add
jns
sahf
fcmove
add
stos
jmp
mov
clc
cmp
mov
cdq
imul
mov
inc
or
aas
in
pusha
xor
sub
mov
mov
or
aad
cmc
(bad)
pop
shl
dec
xchg
not
add
dec
mov
sbb
push
xor
cmp
inc
mov
in
fbstp
or
cmp
std
icebp
jnp
in
xchg
cmp
sahf
(bad)
adc
add
jo
sub
dec
adc
sub
lods
xchg
jae
mov
movs
sbb
nop
(bad)
fwait
mov
pop
test
(bad)
repnz
mov
cmps
mov
dec
pop
out
scas
das
mov
repz
addr16
je
loope
mov
(bad)
rol
adc
(bad)
inc
xchg
sbb
shl
push
test
ins
inc
add
movs
daa
rcr
in
xchg
push
in
or
neg
xlat
mov
jg
gs
(bad)
xchg
mov
pop
xchg
jge
mov
push
div
in
pop
pop
ss
movs
jbe
adc
push
arpl
cmps
jae
fdiv
mov
inc
lods
adc
aam
push
xor
addr16
pop
int3
(bad)
cli
adc
jmp
cwde
dec
lods
push
mov
inc
test
cmps
(bad)
stc
popf
xchg
sbb
push
mov
mov
cmp
shr
fsub
lock
(bad)
xor
xor
jmp
cmc
jae
and
mov
test
mov
sbb
div
cmc
imul
fbld
pop
xor
xchg
lock
lds
rcl
mov
shl
mov
mov
jmp
rcr
dec
cs
push
stos
icebp
int3
gs
mov
test
clc
mov
(bad)
fisttp
les
dec
mov
out
add
or
add
in
int3
xchg
bound
sti
mov
daa
loope
stos
pop
sub
mov
std
clc
js
data16
test
sub
lods
ins
jmp
(bad)
enter
addr16
sub
ss
(bad)
sub
test
das
sbb
jns
shl
loope
inc
out
fcomp
jmp
or
or
xchg
jno
pop
fistp
cli
add
push
test
lock
shl
or
dec
push
push
sbb
dec
scas
(bad)
stos
pop
mov
xchg
add
mov
lds
aaa
mov
dec
movs
dec
cld
sahf
mov
lods
jo
int3
sub
lds
pusha
adc
xor
push
test
dec
jge
and
or
xor
mov
mov
in
enter
mov
fsub
fisub
and
mov
(bad)
sar
jae
into
dec
adc
test
jb
jo
or
daa
mov
push
cwde
mov
dec
or
div
xchg
pusha
cmp
scas
mov
nop
add
dec
xchg
fidiv
clc
sub
xchg
xchg
add
push
shl
repnz
aad
sub
mov
mov
scas
das
test
loope
pop
out
cmps
mov
nop
fmul
mov
inc
movsx
daa
xchg
ret
or
ss
in
pop
xor
mov
mov
add
enter
and
mov
xchg
add
add
(bad)
aam
mov
push
sub
sub
sbb
xor
fadd
jbe
xor
xor
(bad)
shl
cmp
rcr
add
ds
sub
inc
les
stc
cwde
das
and
repz
jge
inc
lock
mov
retf
ds
mov
mov
pop
mov
cmp
idiv
cmps
sbb
mov
icebp
or
test
pop
aaa
cmc
cmp
mov
popf
sub
inc
push
repnz
adc
xchg
in
(bad)
jnp
adc
xchg
sbb
xchg
repnz
jmp
dec
sbb
or
push
ds
sbb
xor
lea
arpl
cmp
sbb
popa
out
sub
mov
add
icebp
rol
push
dec
rcl
mov
lods
cmp
(bad)
cmp
enter
in
push
lahf
add
enter
inc
cli
cmp
adc
push
mov
cmps
loop
(bad)
jl
jns
add
pop
jae
jae
inc
loop
and
push
inc
dec
int3
rcr
loope
mov
adc
fwait
aam
xlat
jo
lahf
pop
ror
mov
push
ins
jne
enter
inc
mul
pop
pop
sti
test
call
mov
call
mov
movups
push
push
je
adc
sbb
std
stc
inc
jae
mov
out
outs
mov
or
test
xchg
xor
xor
mov
iret
aaa
popf
rol
adc
push
imul
stos
sahf
inc
mov
push
jns
add
lahf
and
lahf
inc
xor
adc
shl
sti
dec
xchg
pusha
call
mov
mov
inc
dec
shr
test
(bad)
push
mov
sahf
mov
mov
add
cmp
push
test
cmp
inc
adc
or
adc
jge
sar
fild
rcl
les
xor
xchg
mov
jno
pushf
add
call
pop
nop
sbb
pusha
into
cmp
fsub
jl
cwde
hlt
retf
mov
rcl
sbb
jecxz
int
mov
mov
retf
xor
jmp
and
push
fwait
(bad)
jg
mov
in
and
xchg
lahf
xlat
sti
xchg
cli
mov
push
push
mov
ins
sbb
inc
cmps
fnsave
ficom
xchg
push
pop
test
and
lahf
aad
add
dec
jo
mov
mov
inc
aad
sbb
pop
in
or
push
cmps
addr16
movsx
leave
aad
(bad)
sub
sar
(bad)
mov
jp
sbb
lahf
ret
sti
sub
mov
out
dec
jo
stos
repnz
mov
push
scas
sbb
cmps
sbb
xchg
sbb
add
adc
push
add
enter
in
das
dec
clc
dec
hlt
(bad)
fist
or
or
lods
out
sub
bound
gs
xchg
loope
add
and
outs
cwde
fiadd
je
lahf
jge
loopne
aaa
movs
std
jno
push
outs
xchg
jmp
fsub
pop
fdivp
dec
xor
(bad)
int3
jmp
repz
shr
fcom
dec
sub
xor
arpl
out
add
inc
push
cmp
push
test
bound
loope
and
cmc
jp
aad
cmp
or
fcomp
jns
dec
(bad)
or
xchg
bound
fsub
pop
fild
call
pop
icebp
sub
cmp
inc
aam
and
shl
mov
lods
(bad)
adc
sub
cmp
sar
fld
mov
push
inc
out
fst
fwait
mov
shl
jmp
(bad)
cwde
(bad)
cmps
mov
mov
sti
sbb
xchg
fistp
adc
pop
xor
pop
lea
xchg
xor
xchg
or
enter
sahf
lahf
test
dec
icebp
repz
xor
cmp
xor
test
pop
add
push
cmps
dec
mov
or
nop
pop
fs
es
inc
adc
ins
out
jle
xchg
data16
cdq
adc
pop
mov
retf
cmp
or
xchg
ins
stos
sbb
adc
scas
test
push
sbb
cmps
imul
lods
(bad)
gs
shl
fild
and
inc
push
shl
mov
xor
pop
icebp
inc
sub
push
icebp
add
inc
xchg
jle
test
jecxz
jmp
pop
inc
movs
ins
push
shr
mov
sti
add
mov
adc
mov
sub
test
pop
je
mov
mov
in
daa
push
jne
cdq
inc
loopne
scas
xchg
cwde
cmovae
inc
inc
loope
jl
sbb
push
bound
sub
mov
pop
cmp
jecxz
(bad)
cld
dec
push
mov
add
dec
sub
repz
and
pop
js
les
mov
adc
stos
hlt
les
iret
mov
sub
add
push
popa
mov
jno
mov
jo
adc
dec
cmps
sbb
mov
mov
dec
std
int
mov
adc
rol
jnp
push
pop
mov
loopne
xor
adc
cmps
fcomp
adc
mov
push
pop
ins
call
cmp
das
outs
or
xor
push
nop
jns
call
mov
cmp
pop
jbe
adc
jnp
add
es
add
sub
xor
dec
mov
jle
pop
pop
push
jg
push
fdivr
sar
dec
jnp
fnsave
xor
sub
pop
jns
mov
int3
mov
mov
aaa
cmp
ror
xor
sahf
int3
jae
dec
dec
cmp
test
lea
sar
popa
or
mov
mov
lods
xchg
xor
adc
push
dec
sbb
inc
sbb
cmp
pushf
loope
je
dec
jg
out
fst
jmp
loope
daa
or
or
mov
cld
mov
inc
push
mov
sbb
mov
dec
or
pop
mov
jb
xor
sbb
adc
sbb
scas
or
add
aad
dec
jne
test
mov
cmp
jecxz
pusha
pop
lods
in
inc
sub
inc
mov
dec
cmp
pop
(bad)
pop
sbb
cmps
into
int3
cmp
mov
and
loope
jg
xchg
retf
ret
push
cmp
jmp
jp
xchg
hlt
je
mov
mov
mov
mov
sahf
and
arpl
js
fwait
inc
ret
push
jl
xor
fwait
ins
pop
add
out
pop
inc
stos
jb
mov
jne
jbe
mov
repnz
gs
inc
dec
dec
and
adc
xor
cmps
mov
jae
pop
fisubr
xchg
or
rol
fwait
pop
adc
(bad)
fidiv
mov
adc
sub
inc
sahf
and
adc
(bad)
jecxz
lods
fild
(bad)
into
mov
cwde
mov
xor
mov
outs
mov
add
xor
jl
pop
in
push
and
jne
retf
ss
xchg
mov
es
lds
xchg
pushf
xor
mov
ja
mov
mov
mov
mov
retf
mov
cld
xchg
out
pop
scas
mov
in
cli
and
push
add
xchg
pop
shl
xchg
cmp
mov
jno
jb
push
mov
je
scas
iret
xor
adc
ret
or
pop
(bad)
push
repz
adc
xchg
loopne
in
std
adc
clc
fidivr
dec
fsubr
test
mov
xor
mov
push
mov
or
div
adc
jmp
rcl
xchg
in
frstor
ins
pop
(bad)
pop
(bad)
jae
push
mov
stc
mov
jmp
imul
xchg
push
test
shl
and
cs
scas
out
ds
adc
cs
jl
add
adc
cs
pop
mov
xchg
test
sub
lds
or
les
cld
movs
dec
rol
sahf
pop
adc
jp
je
in
fdivr
ret
out
push
pop
xor
pmulhrw
sbb
dec
adc
loop
cli
xor
clc
(bad)
xchg
icebp
mov
stos
movs
or
mov
(bad)
sbb
add
arpl
ret
test
fnstcw
push
repz
jle
icebp
(bad)
sub
dec
movs
add
sub
xlat
std
lods
cmps
or
push
sub
cdq
fnstsw
add
stc
cli
xchg
(bad)
rcr
mov
mov
cdq
jb
mov
in
jecxz
pop
or
cmp
or
xor
push
mov
cwde
jg
pop
mov
mov
lahf
mov
fldcw
bound
mov
js
sbb
ss
add
mov
fbstp
fstp
mov
rcr
mov
pop
(bad)
nop
cmp
add
sbb
mov
mov
jmp
mov
in
sbb
das
and
mov
adc
(bad)
push
xchg
adc
shl
adc
int3
pop
test
xor
push
xchg
inc
xor
loop
(bad)
rcl
jmp
mov
lahf
sub
mov
cs
stos
clc
lea
repnz
or
inc
xchg
xchg
cmp
or
mov
(bad)
fidiv
or
sub
lock
add
mov
dec
push
push
jbe
dec
pop
dec
mov
std
mov
push
mov
fld
test
cs
mov
and
sbb
fdiv
(bad)
in
mov
icebp
jnp
aad
scas
jecxz
mov
lea
stos
pop
xor
imul
(bad)
cmp
mov
inc
int3
adc
mov
push
mov
xor
test
xchg
adc
or
cmp
jbe
push
sub
inc
push
mul
out
fild
icebp
cli
or
sbb
shr
xchg
mov
mov
push
out
dec
inc
fwait
mov
jne
fiadd
pop
sti
and
inc
ds
jns
repz
sub
dec
das
inc
add
in
inc
enter
enter
arpl
sbb
je
aaa
mov
adc
push
lea
lahf
mov
xchg
sub
cdq
fs
push
dec
mov
or
in
add
push
cmps
ret
out
js
loope
add
pop
call
and
cmp
scas
push
xchg
push
iret
ins
ja
lods
(bad)
loope
popa
adc
(bad)
mov
jo
mov
cmp
sahf
das
test
jbe
out
sti
sub
pop
call
jmp
lea
jp
mov
jns
jmp
in
sahf
inc
xor
or
ror
lods
pop
pop
mul
mov
loop
pop
xchg
inc
inc
jle
cmps
jnp
in
jmp
fwait
clc
(bad)
cmp
sub
xor
sbb
sub
adc
sbb
pop
sub
(bad)
cmp
in
xor
movs
je
fdivr
loopne
rol
cdq
or
or
test
fnstenv
mul
pop
sbb
add
icebp
or
ffreep
adc
mov
leave
mov
cmps
stc
mov
sub
mov
(bad)
fmul
inc
or
dec
xchg
jl
mov
dec
icebp
bound
push
mov
inc
das
inc
gs
dec
xchg
cli
ror
or
je
retf
call
sar
stos
aas
popa
mov
aam
mov
mov
dec
mov
cwde
les
js
enter
jae
fld
daa
push
cld
push
cmc
mov
mov
ins
out
mov
lock
push
imul
dec
xchg
movs
mov
inc
shl
jmp
cld
add
inc
pop
mul
cmc
mov
imul
(bad)
rcr
mov
fisttp
out
jno
sahf
das
movq
pop
and
mov
imul
mov
fisubr
cmps
xchg
in
aaa
mov
add
adc
sub
cli
xor
inc
fs
dec
cld
out
xchg
pop
xor
mov
jmp
lahf
jne
shr
add
xchg
popf
sub
fisub
dec
xor
mov
sub
sbb
(bad)
into
push
xor
jl
inc
ret
ret
cmp
(bad)
push
enter
pop
hlt
xlat
test
les
in
push
jmp
loopne
aaa
cmp
in
sub
adc
lahf
and
xchg
fwait
stc
inc
mov
or
lock
popa
fxch
mov
mov
xchg
push
movaps
out
jns
xlat
enter
cmps
xchg
nop
call
cdq
add
sbb
mov
cmp
add
add
mov
pusha
shr
mov
daa
enter
popf
pop
ds
or
mov
or
sub
dec
mov
das
jge
popa
shl
ss
pop
sub
inc
sbb
das
xor
dec
pop
sub
lock
(bad)
xor
push
ja
fisubr
jnp
aam
mov
std
aad
mov
(bad)
ror
aad
clc
sub
cmp
mov
add
push
in
inc
sti
jo
adc
or
cld
out
adc
test
mov
stos
and
inc
cmps
xchg
jge
adc
gs
pop
and
dec
sub
sbb
sbb
fld
and
and
sahf
sub
push
cmps
test
es
test
or
push
adc
push
xlat
and
popa
inc
xor
rcl
bound
or
xchg
push
jl
outs
xchg
sub
pop
popa
add
shr
movs
test
rcr
retf
ja
jne
jbe
mov
xchg
pusha
mov
add
jnp
and
call
pop
call
hlt
sbb
scas
in
fild
and
lds
or
push
pushf
js
xor
mov
ins
jle
push
das
aad
outs
mov
xchg
push
shl
mov
ret
gs
adc
jno
in
inc
push
push
cdq
arpl
out
cmp
(bad)
(bad)
xchg
pop
popf
dec
mov
pop
mov
cmp
sub
inc
retfw
inc
cmp
rol
(bad)
jno
(bad)
out
iret
test
pop
sub
xchg
xchg
pop
mov
mov
mov
(bad)
push
xor
test
inc
jmp
nop
es
adc
lds
(bad)
xchg
loop
jnp
and
bound
ficomp
xchg
mov
(bad)
ds
lock
clc
and
adc
fldcw
adc
mov
push
adc
add
mov
push
or
add
mov
or
mov
mov
jb
xchg
add
idiv
pusha
adc
ficomp
in
add
cmc
lock
das
adc
sub
or
mov
bound
rol
add
xor
push
xchg
(bad)
sbb
lods
imul
xchg
push
sbb
in
xor
xchg
push
jae
arpl
push
pop
aam
sbb
cmp
fmulp
and
scas
jl
pop
enter
das
mov
(bad)
in
dec
call
dec
mov
data16
popf
pop
lods
movs
test
xchg
imul
sahf
xchg
stc
jmp
inc
cmps
adc
ja
(bad)
loope
repz
sahf
inc
loopne
movs
(bad)
ret
scas
inc
shl
nop
and
mov
jmp
add
addr16
pop
or
add
outs
mov
sub
into
pop
lds
daa
push
out
nop
sub
cdq
je
cmp
add
lods
fstp
xor
jle
xchg
imul
fwait
xchg
cmp
mov
jmp
mov
adc
mov
pop
push
mov
cmp
test
in
das
scas
mov
jecxz
das
pop
push
inc
test
outs
retf
dec
dec
lock
dec
gs
jae
add
cld
je
cs
fidivr
mov
fidivr
xchg
sbb
xlat
into
in
(bad)
xlat
int
jno
sub
je
int3
xor
in
call
mov
add
mov
ret
sbb
push
aad
movs
pop
jno
jnp
xor
xor
or
int3
xor
mov
pop
sbb
fist
(bad)
call
inc
push
cmp
sbb
and
es
mov
int3
push
or
(bad)
outs
ins
aaa
test
dec
in
popa
jne
pop
mov
ss
jno
mov
es
lds
aad
bnd
rcl
out
xchg
mov
jo
ret
push
ins
call
sqrtps
or
sub
push
xor
pop
mov
shl
icebp
ror
jmp
cmp
ins
add
add
mov
xchg
jle
cld
mov
inc
fnstcw
sar
dec
mov
jno
xchg
and
xchg
jge
pop
push
inc
addr16
pop
mov
jne
loopne
je
(bad)
(bad)
loope
xor
test
adc
dec
shl
jne
lock
fst
or
movs
or
xor
in
or
bound
stos
inc
aad
lea
xchg
xchg
xor
and
jne
fcomp
pop
ret
xor
cmps
mov
mov
arpl
cld
addr16
in
sti
push
rcr
test
inc
call
(bad)
adc
or
enter
cmp
add
fdivr
xchg
pop
xor
or
hlt
dec
mov
dec
pop
(bad)
lods
dec
xlat
jmp
jo
inc
(bad)
jmp
jbe
test
shl
and
jno
aaa
pop
sbb
sbb
add
xchg
mov
loop
sahf
mov
dec
xlat
mov
xchg
fstp
out
cwde
mov
rol
mov
adc
js
inc
or
into
int3
mov
sti
xchg
test
ins
bound
imul
test
mov
pushf
mov
cmps
jno
sbb
xor
mov
pop
(bad)
(bad)
repnz
push
and
lods
mov
or
aas
or
cmp
xor
popf
jmp
(bad)
inc
adc
or
(bad)
in
inc
jae
lods
adc
movs
enter
push
xor
fisttp
adc
test
pop
cdq
retf
adc
aaa
fcmovu
pop
pop
jbe
dec
pop
aad
fiadd
retf
xlat
into
repz
cs
ret
scas
sar
adc
or
loope
fidivr
jns
les
mov
repnz
xor
addr16
xor
sbb
dec
jp
fwait
sub
and
mov
data16
xor
or
sbb
inc
dec
imul
cmp
add
jge
lea
rcl
jnp
out
std
jle
div
test
call
loope
sbb
in
clc
pop
(bad)
sbb
icebp
dec
and
sub
push
clc
or
repnz
in
adc
pusha
cli
inc
scas
add
push
adc
(bad)
outs
cmps
push
test
(bad)
mov
mov
jno
jmp
xor
enter
xor
xchg
iret
sbb
mov
inc
and
inc
shr
fadd
outs
test
stc
add
test
xchg
cmp
mov
prefetch
dec
in
retf
mov
into
mov
fwait
bound
mov
call
cwde
bswap
jb
in
fistp
in
ja
push
in
scas
pop
add
xchg
add
ficomp
adc
and
stos
ja
xchg
push
je
fild
jo
inc
iret
mov
ret
les
mov
xor
hlt
mov
out
xor
and
mov
hlt
push
(bad)
xchg
jmp
xchg
imul
out
jo
or
rol
fidiv
cmp
loopne
cld
xchg
fdiv
pop
push
adc
xor
sti
(bad)
xchg
les
fadd
sbb
add
xlat
pushf
popa
(bad)
(bad)
push
imul
aas
mov
pop
pushf
mov
in
pop
rcl
addr16
in
test
out
mov
dec
adc
dec
xchg
outs
push
inc
jmp
popf
sbb
pop
cmp
std
adc
cmc
movs
mov
adc
jnp
movs
sbb
not
sahf
push
sub
cmp
daa
push
or
daa
jmp
jmp
add
sbb
sub
adc
fwait
imul
int
mov
push
inc
idiv
sbb
mov
ins
jmp
xor
hlt
push
jne
(bad)
cmp
fcom
test
mov
adc
jbe
pusha
dec
pop
daa
mov
xchg
jo
cmc
int3
daa
addr16
mov
cwde
mov
push
cwde
sti
out
cmp
pushf
in
sbb
jle
rol
cmc
ror
sub
adc
pop
add
call
bound
into
mov
shl
in
jnp
(bad)
(bad)
sbb
fdiv
ds
imul
or
movs
(bad)
(bad)
icebp
add
out
fwait
xchg
(bad)
xchg
dec
fdivr
add
mov
mov
ins
sbb
inc
ins
sub
pop
fsub
sub
xchg
jno
test
jno
movs
movs
and
xor
ins
sbb
scas
aas
jno
rep
outs
call
sub
inc
lea
fs
inc
xor
sub
sub
sub
cmp
add
push
ret
mov
push
push
aas
ret
pop
or
fld
xchg
cmp
lea
push
stc
jmp
das
xchg
leave
stos
pop
ins
test
cmp
arpl
icebp
sbb
and
and
add
xor
call
jg
stos
dec
cmp
pushf
xchg
cmp
ins
dec
popa
xchg
add
xchg
mov
pop
pop
inc
clc
sub
add
mov
test
sbb
test
adc
retf
iret
bound
or
pop
push
out
xor
movs
jno
or
inc
and
xor
or
push
jno
lds
pop
jp
push
xchg
test
leave
pop
sbb
pushf
push
rol
inc
es
pusha
in
sub
jo
pop
sbb
dec
movs
jbe
lods
or
std
jg
dec
and
pop
stos
popa
inc
add
lods
aaa
mov
out
jge
xchg
jmp
test
ret
imul
add
(bad)
push
mov
dec
xor
in
sub
nop
sar
dec
or
ins
loope
(bad)
mov
in
lods
sub
jo
mov
test
inc
sbb
sub
popa
xor
test
mov
dec
loope
and
rol
and
pop
mov
and
int
inc
xor
sbb
mov
or
(bad)
mov
cs
rol
or
outs
aad
(bad)
sub
xor
push
sbb
fnstenv
pop
cmp
mov
div
sbb
push
and
out
push
je
sub
(bad)
in
lea
jo
clc
mov
jg
ret
std
out
add
push
xchg
sbb
dec
sub
jne
nop
(bad)
(bad)
sbb
mov
leave
ins
push
stos
cld
icebp
mov
jb
or
rcr
iret
retf
fiadd
jmp
gs
push
test
pop
mov
and
(bad)
push
retf
sbb
pop
push
sub
fcomp
vxorpd
push
shl
repnz
mov
imul
into
jge
jne
(bad)
retf
pop
hlt
pushf
dec
fbstp
pop
and
and
adc
fist
repnz
aaa
int
cmp
and
clc
sub
sbb
retf
and
mov
std
adc
test
cdq
dec
jecxz
hlt
sub
cmp
jl
mov
push
push
mov
sub
sahf
rol
lock
hlt
cmp
vxorps
pop
mov
pop
aad
retf
movs
cmps
pop
add
cld
lea
cmp
pop
sbb
mov
loope
lods
jle
dec
xchg
dec
out
pop
jg
dec
out
mov
std
sbb
cli
aam
int
or
jmp
add
pop
push
adc
mov
into
xor
inc
shl
push
dec
xor
mov
into
adc
test
call
ret
cmp
and
jmp
jne
mov
imul
adc
mov
xor
sub
mov
rol
add
cmp
pop
mov
nop
cmp
loopne
hlt
movs
outs
cmps
push
cmc
(bad)
sbb
mov
sub
mov
mov
push
shr
in
sub
pop
dec
jl
sti
ds
or
jmp
test
sub
ror
pop
sub
fst
aam
cwde
cld
out
dec
(bad)
and
out
push
jno
mov
out
ret
cmp
rcr
jb
(bad)
not
sti
test
jg
rcr
dec
dec
jo
add
add
sahf
sti
push
adc
(bad)
popf
sbb
jmp
lock
out
jle
inc
stc
cmp
shl
(bad)
pop
mov
sub
out
dec
xchg
and
mov
inc
shl
rcl
adc
cdq
and
aaa
adc
sbb
dec
cmc
push
loop
xor
cmp
cmp
aaa
add
mov
pop
inc
outs
(bad)
test
pop
cld
stos
jae
in
jo
movs
fcmovne
sbb
and
stos
enter
xor
jne
rol
cmp
add
neg
cmp
neg
pop
push
add
adc
adc
add
adc
sub
mov
(bad)
fwait
loope
fsubr
or
iret
scas
ja
adc
pop
push
mov
or
mov
loop
push
stos
xor
adc
push
pop
inc
in
mov
adc
add
cmp
dec
inc
sbb
ins
jl
push
dec
fst
inc
test
and
push
imul
mov
or
and
hlt
fwait
bound
sbb
int
and
or
test
mov
or
cmp
and
ins
mov
jae
cmp
je
sar
int
mov
iret
mov
mov
jnp
jp
lahf
mov
daa
jl
pop
mov
mov
push
movs
daa
sar
es
js
cmp
push
shl
cmp
push
ins
loope
retf
outs
gs
out
mov
aad
sbb
dec
int3
add
add
lea
jle
neg
pop
cmps
fiadd
sti
adc
mov
fldenv
or
retf
shl
pop
fst
pop
pop
jge
mov
leave
xchg
xchg
xlat
add
mov
outs
icebp
test
or
sub
loop
push
pop
add
je
xor
cmp
pop
gs
adc
mov
sbb
out
push
(bad)
movs
out
push
popf
stc
pop
out
or
or
or
pop
js
imul
es
push
psubusw
test
mov
mov
push
(bad)
popf
imul
ud2
mov
lods
pop
hlt
inc
test
mov
lock
(bad)
and
push
push
push
inc
fwait
ret
aas
mov
iret
pop
mov
pop
adc
xor
push
dec
jb
addr16
test
push
out
retf
pop
idiv
and
jmp
push
and
test
les
call
das
pop
movups
add
test
jnp
mov
adc
in
cdq
add
mov
mov
cs
fcmovbe
or
(bad)
stos
adc
out
int3
push
test
pop
fadd
adc
scas
out
dec
arpl
scas
mov
xchg
aaa
pop
pop
xchg
jecxz
push
dec
ret
jmp
jne
fmul
cld
push
rol
iret
xor
test
inc
mov
js
mov
imul
stos
inc
sar
loop
dec
cli
mov
and
call
lods
jno
pop
(bad)
jae
adc
jg
sbb
inc
test
pop
sub
fisubr
pop
enter
inc
es
sub
aad
cs
scas
je
movs
into
xchg
or
in
jmp
dec
adc
dec
dec
mov
lds
adc
cmc
xchg
and
xchg
retf
hlt
mov
fstp
mov
sar
sub
aaa
sub
mov
jp
or
sbb
pop
cmp
repz
(bad)
pop
adc
icebp
sbb
mov
mov
test
out
aaa
and
bound
(bad)
pop
add
inc
pop
mov
sub
test
xchg
ss
sbb
xchg
jle
in
mov
jp
fsubrp
push
rcr
fwait
mov
call
shl
adc
push
mov
out
push
xchg
data16
sub
test
pop
jns
add
icebp
sahf
cdq
imul
imul
or
test
aad
sub
xor
sbb
add
jo
mov
jbe
adc
or
arpl
das
retf
loopne
jbe
ret
cmps
das
add
push
jbe
mov
jmp
fsubr
nop
add
mov
sub
inc
cmp
lahf
or
cmp
xchg
repnz
fbstp
and
inc
cmc
bound
inc
sahf
sahf
push
pop
loopne
push
push
into
push
test
lock
pop
(bad)
sar
pop
sti
inc
jb
jmp
mov
loop
(bad)
dec
sti
cmp
sti
jo
dec
(bad)
aas
push
pop
repnz
add
and
stos
ret
sbb
gs
add
outs
xor
and
imul
int3
dec
push
xlat
fs
jae
in
mov
fild
dec
pop
pop
mov
imul
cdq
sub
inc
fisttp
inc
inc
sub
cmp
aaa
add
mov
push
xchg
cdq
pop
aam
fmul
imul
pop
mov
int
ror
jecxz
mov
hlt
js
xor
scas
sub
sar
(bad)
test
retf
test
xor
push
sub
dec
jg
fcompp
int3
retf
sub
cmp
push
mov
dec
mov
data16
pop
or
je
push
xchg
xchg
lods
into
pop
jne
cmps
xchg
inc
pop
adc
addr16
pop
fdivr
jne
je
dec
xor
inc
(bad)
lods
pop
mov
push
retf
loopne
cmps
icebp
mov
repnz
add
movs
sbb
in
xchg
inc
and
cmp
in
xor
mov
mov
test
outs
lea
xor
pop
sub
xor
in
fwait
xchg
xor
mov
lock
mov
cwde
in
pusha
fcomp
loop
cmc
cld
(bad)
call
mov
int
test
clc
das
add
mov
into
push
cmps
sub
mov
stc
rcl
push
inc
out
ins
xchg
jg
les
fwait
je
repz
mov
sub
js
loop
dec
lods
cli
jge
das
les
or
or
test
sbb
dec
(bad)
iret
das
(bad)
lds
ret
js
popf
mov
imul
mov
retf
or
add
add
(bad)
mov
jb
jle
ror
push
cmps
dec
adc
es
push
lods
lods
in
adc
or
or
push
add
loop
retf
aam
and
repnz
xor
push
add
fwait
enter
outs
mov
mov
daa
and
movs
xchg
out
adc
mov
sub
test
pop
out
into
xchg
fst
push
lahf
ss
jne
stos
pop
mov
out
hlt
adc
jmp
enter
mov
jge
addr16
loope
jo
sub
dec
aas
cwde
or
or
inc
jmp
jb
mov
mov
shr
psllq
mov
ficomp
(bad)
sub
ja
jbe
scas
jmp
push
push
repnz
iret
dec
xchg
push
cs
ja
nop
sahf
dec
jo
iret
xchg
xchg
pop
shl
sub
popa
fisttp
pop
outs
xchg
popa
adc
sbb
and
and
jnp
mov
sbb
aaa
xor
and
repnz
xchg
popf
in
inc
in
(bad)
call
loop
xlat
je
mov
xchg
stc
and
into
ss
cmps
ret
movs
fstp
in
sbb
(bad)
ins
shl
pop
std
lods
and
pop
into
rcl
mov
cld
in
ss
xchg
xchg
out
sbb
cld
mov
mov
or
je
push
repnz
push
fcomp
xchg
daa
leave
neg
mov
pop
dec
rcl
mov
adc
std
sahf
adc
pop
cmp
pop
and
inc
icebp
imul
mov
mov
cmc
mov
loop
cwde
test
call
in
inc
iret
adc
xlat
jns
mov
and
xor
lods
push
out
cmc
fisubr
pop
mov
(bad)
mov
xchg
add
clc
sahf
mov
cmp
popa
enter
sbb
cmps
and
cld
arpl
xchg
xor
xchg
mov
fidivr
sti
push
icebp
or
jno
aaa
test
dec
mul
or
add
ins
fucomip
inc
dec
test
push
or
(bad)
mov
cmp
dec
mov
inc
jg
daa
mov
gs
dec
mov
in
mov
loope
clc
push
nop
(bad)
mov
sub
sbb
inc
fs
(bad)
xchg
sbb
cmps
or
lds
(bad)
push
inc
xchg
xor
xchg
(bad)
stc
ss
stc
fst
ret
mov
lock
inc
mov
sbb
out
ins
sbb
and
cmps
and
inc
pop
je
pusha
stos
xlat
jge
pop
in
inc
das
lds
inc
inc
out
iret
scas
cs
stc
sbb
iret
dec
jecxz
jae
stos
into
(bad)
test
lods
mov
and
mov
inc
inc
aaa
sub
mov
push
loopne
mov
scas
cmp
outs
sbb
rcl
data16
ins
loopne
out
jo
jle
jae
pop
(bad)
fnstcw
sbb
push
ins
push
push
and
je
std
cmc
xchg
xchg
loopne
lock
adc
adc
jo
hlt
js
test
loope
jns
push
(bad)
js
rol
sub
cli
dec
xchg
mov
pop
add
xchg
xor
in
scas
adc
lar
cmp
xor
mov
aaa
(bad)
jmp
jp
add
rol
adc
cs
jle
in
(bad)
cmp
clc
cmps
imul
mov
jns
xchg
jo
pop
mov
dec
je
and
mov
stos
frstor
inc
stos
ja
pop
inc
(bad)
or
ss
xchg
imul
jne
sahf
or
mov
pop
jp
addr16
mov
mov
mov
loopne
aas
jne
or
cmp
push
les
xor
xor
mov
fisttp
inc
jae
adc
stc
jmp
fistp
and
add
jns
out
pushf
and
ret
test
data16
cdq
mov
adc
out
std
adc
ins
ja
lds
call
push
cmp
mov
lock
cmp
mov
fist
lods
jp
hlt
fidivr
dec
mov
cs
call
das
pop
int
jle
push
and
out
ss
enter
push
int
inc
jp
sub
sbb
or
mov
pop
pop
xchg
mov
mov
outs
jns
into
retw
or
sub
jnp
cmc
fwait
mov
push
xchg
xchg
jl
std
loopne
rcr
add
and
xor
call
sbb
jle
xor
mov
pop
dec
sti
push
sub
xchg
cmp
or
adc
adc
pushf
ds
icebp
scas
mov
xchg
dec
xchg
inc
fwait
stos
xor
int
imul
clc
into
fdivr
addr16
idiv
in
pop
cmc
je
mov
pop
cmp
jno
test
imul
fisttp
imul
test
cwde
fucomp
aaa
jle
jl
jl
ins
mov
cmp
jo
sub
add
lods
cmp
jp
xchg
adc
sbb
dec
sbb
outs
inc
mov
push
int
pop
mov
sbb
pop
jmp
push
cwde
cmp
ret
pop
cli
xor
xor
cmp
repnz
adc
pop
and
call
add
xchg
adc
add
ret
inc
inc
add
xchg
aad
push
cld
pop
mov
push
fisubr
std
aaa
and
sbb
fcmovne
loopne
scas
mov
inc
xchg
movs
hlt
std
mov
dec
jo
dec
fwait
mov
daa
arpl
and
out
loopne
add
fs
lahf
stc
mov
int3
and
aad
dec
cmp
pop
push
or
xchg
mov
xchg
sub
call
repnz
sub
call
add
inc
iret
push
mov
xchg
icebp
and
jbe
clc
retfw
jb
inc
inc
adc
popf
test
inc
inc
sahf
xchg
call
xchg
das
shl
mov
add
inc
pop
mov
lods
pop
pop
arpl
push
mov
mov
je
scas
ss
repz
xchg
mov
aaa
shl
arpl
je
ja
xchg
cvtps2pi
push
outs
pop
or
scas
jne
dec
in
jmp
pop
imul
(bad)
mov
inc
(bad)
(bad)
loope
push
test
arpl
ss
mov
sbb
retf
out
push
adc
push
xcrypt-ecb
cmps
retf
sub
xor
dec
(bad)
clc
xchg
pop
dec
(bad)
call
and
sub
fcmovbe
fist
jae
call
and
or
add
fist
enter
std
(bad)
bound
mov
repz
ret
sti
add
xor
lea
ins
mov
push
and
jne
scas
ins
cli
cmp
mov
sahf
mov
dec
jl
or
mov
enter
dec
add
dec
test
adc
repnz
outs
lods
pop
mov
push
xor
iret
data16
pop
cmp
jmp
jns
(bad)
shr
test
mov
imul
ins
xchg
out
or
adc
adc
xchg
jno
mov
aas
ret
adc
jmp
xor
mov
ins
mov
mov
or
js
(bad)
push
cmc
sub
ficom
lods
loope
fnstcw
or
jmp
std
mov
push
(bad)
div
inc
sub
or
or
sbb
and
fistp
or
or
(bad)
fwait
les
shl
fisubr
popf
sbb
nop
popf
jmp
jbe
movs
jno
mov
not
repnz
dec
or
popf
push
and
cmp
pop
mov
and
jg
add
push
fcomi
or
cmps
inc
add
adc
xchg
push
lds
ins
cli
jmp
inc
lahf
push
sbb
cmp
adc
jae
pop
and
and
iret
rol
das
adc
mov
mov
inc
or
mov
movs
or
lock
sbb
shl
mov
mov
es
icebp
mov
icebp
(bad)
jae
scas
aas
bound
cmp
sahf
xlat
cdq
inc
push
repnz
push
sub
xchg
addr16
enter
mov
fldcw
bound
cmp
ds
test
int3
cmp
loop
das
mov
iret
xchg
pop
and
sbb
popa
lods
nop
mov
add
scas
jl
and
and
mov
lods
call
test
frstor
mov
out
jge
es
and
push
sub
inc
test
ins
inc
mov
push
mov
es
or
call
mov
jmp
js
out
jbe
cmp
mov
movs
imul
sub
mov
mov
mov
push
daa
push
xor
out
pusha
in
cmp
mov
adc
adc
fwait
mov
adc
mov
or
shl
in
pop
dec
push
adc
call
mov
test
or
add
xchg
stos
mov
dec
fisttp
mov
jmp
stos
enter
dec
xor
inc
cmp
mov
adc
aaa
out
es
dec
fsubr
jne
fld
or
add
(bad)
and
pop
or
loopne
hlt
enter
scas
dec
dec
stos
inc
dec
int
xlat
gs
push
addr16
jp
test
mov
mov
xor
pop
inc
mov
rcr
adc
rcr
inc
fdiv
lods
mov
ret
jb
push
cdq
in
jg
cmp
push
cmp
sub
inc
stos
lahf
mov
popa
fnsave
scas
daa
and
test
(bad)
cld
shl
aas
adc
dec
mov
popa
or
push
push
in
out
stc
fwait
cs
push
enter
jno
retf
jne
mov
xchg
fcom
inc
push
and
mov
out
and
sbb
pop
js
sub
cmp
retf
stc
je
push
inc
cmc
(bad)
push
cmp
fstp
pop
pop
jae
shr
add
xor
out
add
div
push
xor
sbb
inc
mov
test
inc
iret
and
mov
sub
jmp
ret
mov
or
mov
ins
sti
inc
dec
popa
or
pop
jge
jbe
mov
fidiv
fild
out
xchg
popf
cdq
loop
call
jg
mov
jns
mov
cli
cmp
mov
aaa
int3
cmp
dec
xor
cmps
pop
pop
popf
test
or
dec
push
pusha
pop
paddq
dec
stc
(bad)
lock
and
mov
fwait
imul
loopne
retf
out
mov
ret
cmc
fisub
in
jmp
test
mov
mov
arpl
cmp
call
(bad)
cmp
movs
mov
in
lock
shl
push
gs
lahf
in
add
mov
addr16
mov
mov
push
repz
jge
xchg
ja
dec
sti
arpl
loopne
dec
fild
mov
xchg
iret
ins
fnstenv
xchg
jmp
jmp
add
xchg
xchg
mov
dec
dec
xchg
adc
xchg
xchg
xchg
je
mov
sbb
mov
loop
in
push
or
dec
fwait
(bad)
cdq
xor
ret
mov
ds
push
push
cli
in
mov
mov
retf
(bad)
mov
pop
adc
mov
in
int
xchg
and
test
aam
push
mov
dec
gs
ffreep
les
ret
mov
inc
dec
mov
pop
mov
js
push
add
outs
lahf
push
cld
mov
fadd
or
jge
in
xor
ror
loop
cmp
les
fcomp
lods
sti
enter
mov
dec
sub
js
sbb
sub
pop
lods
scas
scas
pop
mov
rcl
leave
in
add
xchg
add
es
pop
jns
push
pop
pop
push
ja
inc
dec
xchg
in
xchg
xchg
scas
dec
cdq
int
xor
push
ins
imul
jo
into
pushf
sbb
mov
pushf
iret
loope
mov
cmp
bound
mov
xchg
push
add
xor
(bad)
push
push
jg
gs
pop
cwde
fcomp
xor
cmps
pushf
push
ficomp
stos
inc
scas
mov
(bad)
clc
cmp
jmp
je
call
jns
fiadd
ret
fwait
xor
or
repnz
rol
and
push
jmp
cmp
sbb
pop
sub
push
clc
adc
xchg
dec
push
adc
mov
inc
repz
sbb
push
cmps
fidiv
adc
mov
fild
mov
sbb
pop
and
or
add
enter
jo
call
neg
shl
cmp
daa
and
cmp
test
mov
xor
dec
inc
dec
or
xchg
ins
icebp
pop
call
test
stos
dec
fldenv
imul
in
dec
cld
shl
or
xor
jns
xor
jno
retf
xor
mov
dec
js
sar
scas
xor
test
mov
add
cld
mov
popf
and
mov
aad
in
add
cmc
xchg
xor
push
rcr
jecxz
inc
ficom
ins
cmp
mov
and
and
add
sub
inc
mov
add
jmp
push
adc
stos
and
movs
mov
xchg
xor
mov
das
lods
sub
adc
nop
cli
jecxz
dec
pop
push
leave
hlt
cmps
or
(bad)
sbb
leave
dec
outs
push
cmc
pop
xor
pop
xlat
test
sbb
sbb
push
jno
movs
gs
(bad)
outs
xchg
and
push
jnp
mov
mov
push
cmp
sub
into
idiv
pop
xor
inc
push
sub
mov
cmps
call
stos
jmp
lahf
imul
idiv
adc
pushf
jnp
lods
xor
add
mov
xchg
mov
jnp
sbb
jmp
fidiv
imul
int
xchg
rol
inc
xchg
lahf
ret
jmp
test
xchg
xchg
jne
mov
cmp
mov
mov
push
mov
icebp
or
push
mov
mov
movs
popf
inc
cmp
movs
push
xor
sbb
jae
pop
and
mov
sub
shl
pop
fs
lock
cmp
sti
or
sbb
movs
clc
movs
icebp
lods
pop
mov
push
lods
pop
enter
cmp
fdiv
mov
mov
fdivr
je
jne
les
xchg
and
pop
push
adc
fsubr
sbb
enter
jge
push
in
pop
ins
add
into
test
pop
(bad)
and
or
out
xor
addr16
sbb
cmc
dec
out
and
pop
sub
cmp
add
mov
fs
cdq
mov
cdq
xchg
(bad)
add
xor
jne
mov
or
sti
out
add
push
mov
outs
addr16
and
cmps
fmul
rol
les
scas
mov
or
mov
push
ins
and
mov
pop
and
pop
xor
into
sti
push
xor
inc
repnz
retf
fxch
bound
test
xchg
pop
es
movs
xchg
popf
or
fist
test
sub
mov
(bad)
int3
inc
sar
jo
push
loopne
in
repz
inc
cmp
dec
xchg
test
(bad)
rcl
paddb
add
cmp
add
push
daa
in
cmp
sbb
inc
shl
mov
pusha
rcl
cmp
movs
push
test
imul
jle
and
pop
adc
call
cmp
in
pop
pop
push
and
jnp
xchg
movs
pop
jmp
sub
and
mov
and
xor
pop
inc
call
js
inc
dec
mov
push
sbb
ja
sbb
jo
(bad)
iret
scas
enter
cli
sub
and
into
cdq
jge
ins
jno
cdq
stos
mov
out
adc
jmp
and
in
pop
cld
scas
sbb
fcomp
imul
hlt
je
mov
sbb
ss
fs
cwde
mov
pop
repz
ins
mov
adc
aad
sahf
mov
int3
repnz
push
mov
(bad)
mov
sbb
ins
adc
dec
dec
aaa
fwait
xchg
mov
inc
into
sub
mov
or
mov
dec
out
push
stos
adc
adc
outs
cmc
push
push
mov
jae
dec
cmc
imul
push
mov
xor
push
adc
sub
pop
in
cmp
cmps
popf
(bad)
add
jg
lods
ds
sbb
and
fsub
jns
scas
fisttp
daa
in
jl
scas
mov
adc
xlat
jecxz
stc
out
jmp
sub
pusha
leave
jge
xchg
int3
in
fisttp
mov
dec
and
ret
mov
mov
loop
lods
and
fsubrp
rcr
sub
xchg
inc
push
pop
and
push
ret
ret
outs
popf
sub
dec
mov
out
pushf
ret
repz
mov
dec
jnp
iret
loope
xor
test
mov
mov
ds
aad
add
add
(bad)
cmp
das
push
pop
mov
inc
mov
dec
aad
sbb
add
xchg
inc
and
ds
arpl
in
mov
fnstcw
mov
aas
dec
dec
jge
les
xor
mov
nop
pusha
dec
int3
add
js
jae
pop
xchg
ds
loop
push
xchg
jno
(bad)
int
inc
lods
sub
adc
outs
je
cld
in
push
sbb
push
repz
test
pusha
mov
inc
inc
pop
pop
bswap
sub
inc
sti
mov
push
(bad)
adc
jno
pop
pusha
and
dec
push
ja
and
stos
mov
call
aaa
xor
mov
inc
or
jle
xor
mov
js
mov
add
test
idiv
xchg
dec
inc
mov
cmp
sub
outs
fwait
xchg
cld
and
mov
scas
fs
xchg
fsubr
lods
add
push
mov
jbe
pop
in
mov
inc
arpl
lods
adc
dec
add
push
mov
mov
sbb
pop
das
bound
jecxz
xchg
xor
jl
xchg
jmp
fsub
cmc
pusha
pushf
inc
xor
je
cmp
jl
les
dec
mov
jno
pop
mov
das
sbb
nop
idiv
loope
push
push
out
add
pop
fcomp
sahf
ins
jbe
repnz
loop
ja
inc
(bad)
mov
jg
push
inc
outs
div
pop
mov
aas
jns
test
scas
jo
pop
and
mov
fstp
cmp
stc
jmp
lods
add
and
stc
pop
xchg
mul
in
fcomp
ja
(bad)
outs
fsub
loop
movs
pop
pop
aam
mov
xchg
pop
push
push
mov
sbb
mov
pop
jo
cmp
mov
mov
lods
sbb
test
das
shl
mov
movs
adc
mov
sub
or
pop
in
(bad)
in
xor
inc
cmp
retf
movs
dec
cmp
outs
jb
data16
xchg
jb
popf
mov
xor
sti
dec
push
cmps
push
mov
cmp
or
fwait
and
lahf
push
out
mov
mov
jns
les
jae
daa
xchg
cdq
push
lods
popw
inc
call
jl
or
cs
push
(bad)
cmps
mov
push
adc
fstp
repnz
sbb
dec
add
cmp
dec
push
in
out
xor
movs
fcom
cmp
pop
and
scas
test
inc
fwait
xlat
clc
xchg
sbb
add
ret
sbb
push
stc
mov
lods
cmp
in
xchg
push
mov
adc
out
retf
jmp
inc
push
int
push
xchg
ret
mov
pop
push
hlt
in
movs
loopne
call
scas
jne
dec
mov
jmp
pushf
sub
mov
mov
fwait
cmp
pop
pusha
pop
and
mov
ret
test
mov
adc
sub
cmc
sbb
imul
fwait
xchg
push
imul
hlt
fwait
push
jge
jp
das
jnp
mov
lock
xlat
sbb
cli
outs
and
mov
sahf
imul
shl
movs
mov
sar
push
enter
fstp
ins
sub
push
nop
or
rol
add
(bad)
sub
fneni(8087
sahf
shl
movs
push
shr
lods
mov
jmp
fxch
mov
and
sub
xchg
pop
xchg
fistp
mov
stos
dec
pushf
pop
popf
add
cmp
stos
push
mov
add
pop
je
xchg
pop
in
inc
and
loope
in
test
ss
jno
mov
hlt
sbb
inc
push
xor
sub
jecxz
cmp
scas
call
loop
sbb
cli
pop
shl
dec
xor
lds
pushf
mov
lods
xor
out
retf
inc
rep
imul
iret
retf
adc
stc
dec
icebp
mov
mov
xchg
mov
idiv
jns
(bad)
pop
xchg
jo
ror
and
dec
or
fisttp
scas
fstp
sbb
test
add
in
retf
jecxz
mov
repz
aam
ficomp
les
daa
mov
xor
lahf
cmp
cdq
add
retf
std
or
das
cmp
fsub
daa
retf
and
rol
xlat
push
sub
mov
cmp
mov
pop
push
clc
add
mov
jb
(bad)
int3
test
add
jbe
jnp
iret
mov
(bad)
cli
outs
mov
mov
xor
dec
sub
imul
cli
pop
xchg
call
call
dec
dec
daa
xchg
sub
sbb
imul
(bad)
inc
sar
jmp
sub
pop
inc
(bad)
ffreep
mov
daa
sub
mul
adc
fld
imul
dec
xchg
dec
mov
and
push
push
push
push
clc
inc
pop
add
dec
fst
out
adc
pop
icebp
cmp
out
enter
jg
add
jne
mov
test
addr16
clc
xor
mov
push
mov
and
xor
fmulp
mov
mov
xlat
outs
push
jno
out
dec
sbb
aad
lods
mov
add
mov
scas
(bad)
push
test
sub
enter
mov
fnstsw
lds
imul
mov
jmp
fisub
stos
movs
mov
xlat
(bad)
fisub
std
lahf
sbb
(bad)
and
fldcw
shl
mov
jnp
jl
jecxz
cmp
in
or
bound
leave
push
(bad)
stos
dec
loopne
ins
push
xchg
enter
add
mov
adc
jmp
daa
xor
int3
ror
loop
jp
dec
mov
pop
or
xchg
lds
xchg
(bad)
inc
jle
stos
jl
sbb
ror
mov
fbstp
mov
jne
test
jnp
and
rcl
and
mov
cmc
sahf
sbb
jle
xchg
push
cmp
mov
jg
ds
retf
das
jecxz
daa
retf
sahf
xor
ret
add
in
sahf
mov
pop
inc
(bad)
xor
xor
sbb
(bad)
rcl
cmp
sbb
jge
and
mov
retf
xor
and
xchg
jmp
pop
ins
jo
sub
push
fwait
std
mov
xchg
ret
rol
cmp
push
(bad)
cdq
mov
cmp
jnp
mov
adc
mov
adc
inc
mov
in
mov
mov
sahf
shr
lods
fistp
repz
aas
test
lods
jl
mov
add
push
rcr
inc
(bad)
and
outs
mov
pusha
push
retf
push
sub
add
je
or
mov
les
outs
push
out
cmc
(bad)
mov
add
lds
repz
mul
cdq
cmp
xchg
aas
(bad)
repnz
call
mov
movs
push
rcr
adc
retf
and
sahf
push
idiv
aas
in
retf
inc
cmps
in
out
inc
fidiv
mov
jns
pop
mov
aad
out
sub
cs
push
rcl
cmp
aas
test
jbe
dec
push
pop
xchg
jbe
adc
mov
mov
jb
pop
push
push
or
sub
retf
mov
push
cmp
cmp
(bad)
movs
dec
ds
in
dec
pop
lods
mov
push
aas
data16
in
call
loopne
xor
pop
pop
ret
ret
in
add
jecxz
mov
shl
fld
inc
sub
retf
in
add
mov
add
jb
pushf
xchg
pop
outs
ficom
xchg
inc
or
mov
(bad)
mov
sub
vminss
outs
imul
xchg
loopne
into
into
sbb
jge
fcomp
popf
mov
mov
pushf
sub
sbb
cmp
fnstenv
mov
dec
ds
(bad)
das
sbb
mov
cmp
outs
lods
std
push
dec
movs
push
xchg
add
std
ins
xchg
or
movs
mov
scas
sbb
cmp
or
inc
jmp
push
fadd
leave
add
add
int3
sahf
xor
sbb
arpl
fistp
lods
jl
xor
add
cmc
push
cmps
cmp
out
cmp
pushf
cmp
and
je
mov
imul
add
xchg
cmp
enter
call
pop
(bad)
out
lds
xchg
add
cli
and
pop
imul
or
and
and
fcmovnu
ret
xchg
inc
test
dec
repnz
inc
scas
sar
mov
movs
scas
mov
imul
mov
(bad)
adc
stos
out
ror
fwait
and
mov
imul
mov
pop
rol
sti
jg
into
or
jo
jge
enter
jmp
xchg
fs
fs
pop
aam
clc
jle
pop
outs
inc
sti
add
cmp
lods
add
ins
jg
mov
sbb
into
movs
out
arpl
cmp
rcr
retf
aad
sbb
ror
mov
inc
dec
scas
xchg
adc
mov
xchg
inc
pop
pop
aam
sub
pop
and
inc
or
std
lds
sbb
mov
aaa
call
mov
rcr
out
cwde
fdiv
jbe
das
mov
mov
sbb
nop
popf
or
cmp
xchg
test
ret
stc
xchg
xor
outs
mov
mov
xor
into
pop
mov
lds
ret
inc
adc
xor
dec
cmp
jb
mov
enter
loope
adc
mov
dec
cld
nop
adc
mov
iret
xchg
xchg
xor
scas
cmp
xor
push
cmp
loop
jmp
sub
jno
xchg
xchg
ds
ss
mov
lods
pop
jp
jne
pop
in
inc
sbb
pop
mov
(bad)
pop
cwde
add
sbb
adc
mov
adc
or
or
sub
lods
test
xor
shl
xchg
test
fistp
dec
aam
jae
sub
into
push
cli
mov
mov
or
(bad)
ret
pop
lea
and
pop
data16
jnp
fs
fcomp
dec
pop
outs
inc
push
neg
dec
das
daa
(bad)
popa
ficom
jne
test
mov
outs
dec
loopne
das
daa
jne
and
push
and
or
clc
leave
repnz
and
and
das
sbb
imul
mov
fcom
cmp
arpl
push
sar
push
outs
lds
pop
arpl
aaa
inc
or
nop
xor
dec
ficomp
jmp
inc
daa
sub
scas
dec
jns
and
pop
push
cmp
retf
std
sub
sub
or
das
mov
adc
pop
sbb
data16
test
dec
and
sub
out
not
push
dec
icebp
mov
inc
int
aaa
or
cmp
cmps
mov
imul
pop
fs
or
pop
inc
into
push
fst
and
fneni(8087
add
femms
mov
bound
pusha
mov
adc
cmp
add
dec
xor
faddp
xchg
outs
into
xor
and
adc
adc
mov
ficomp
scas
add
mov
popf
mov
push
leave
fisubr
xchg
sar
mov
loope
scas
movs
push
pushf
pop
jle
push
sahf
mov
ror
xor
mov
mov
sti
vaddpd
pop
jbe
inc
inc
cmps
out
fwait
sub
sub
aam
(bad)
mov
cdq
aas
or
enter
dec
push
stos
add
or
fiadd
add
add
mov
jl
aad
dec
jp
(bad)
shr
mov
dec
sub
cmp
fsub
mov
sub
repz
or
nop
sub
popa
pop
loop
pop
xchg
or
dec
xor
stc
dec
adc
std
ds
sub
addr16
bound
jns
cmc
pop
rcr
mov
xchg
adc
push
mov
rol
gs
(bad)
cmc
data16
mov
mov
in
outs
and
mov
ins
xor
ins
js
push
mov
cmp
out
adc
faddp
xchg
icebp
jp
inc
and
mov
inc
jle
or
pop
into
xchg
retf
push
stos
pop
mov
adc
lods
dec
mov
pop
sub
(bad)
add
lahf
fdiv
cdq
push
sbb
or
pushf
in
mov
jns
jns
movs
shr
cdq
mov
xchg
sub
pop
fist
mov
scas
push
inc
fild
clc
sub
and
mov
mov
(bad)
jne
sbb
or
jno
popf
aas
pop
add
fist
stos
mul
inc
mov
sub
sahf
push
lahf
inc
and
and
jne
xor
add
sti
inc
sub
mov
data16
out
(bad)
int
imul
ret
dec
int
sbb
mov
cli
mov
imul
cmp
and
mov
mov
jmp
pop
daa
add
pop
mov
push
dec
int
push
adc
iret
jns
cmp
cdq
dec
mov
sbb
mov
inc
cs
test
sbb
jmp
jl
xchg
fild
jae
sub
jne
ja
ja
or
arpl
mov
or
push
loopne
loop
ja
inc
push
jle
sbb
fwait
scas
or
ficomp
(bad)
sub
rol
mov
stos
add
loopne
scas
xor
mov
xor
or
out
stos
fistp
mov
xor
loop
adc
daa
aaa
sbb
iret
jb
(bad)
or
adc
nop
inc
retf
sbb
mov
je
xchg
test
push
in
jnp
jnp
pop
xchg
daa
xchg
fs
sub
cdq
stos
mov
lea
test
add
push
aas
sub
xchg
repnz
mov
push
stos
xchg
mov
stos
mov
and
fist
enter
shr
out
xchg
xor
(bad)
adc
out
retf
xor
mov
jne
sbb
mov
out
mov
mov
cwde
mov
aaa
mov
xor
jnp
hlt
js
mov
ins
scas
imul
push
mov
test
imul
mov
imul
pop
mul
das
or
xchg
inc
imul
pop
aam
or
sbb
mov
and
pop
(bad)
jge
pop
push
retf
cmp
and
add
popf
dec
cwde
aas
pop
mov
dec
add
sub
sbb
mov
inc
and
nop
jne
daa
in
movs
cli
xchg
or
ds
xchg
push
shr
fst
loopne
push
out
adc
ss
icebp
inc
aad
sub
fidiv
xor
das
shr
jmp
popa
out
pop
cmp
les
push
idiv
xlat
mov
js
mov
fstp
pop
xchg
mov
test
cdq
ror
movs
jae
push
sahf
xor
aad
adc
test
leave
mov
inc
push
aam
movs
lock
arpl
cmp
sbb
clc
sbb
xor
cmp
push
loope
sub
xchg
ja
jg
div
iret
inc
sub
push
jae
push
sbb
inc
cdq
repz
or
je
pop
cmps
mov
pop
stos
test
sub
shl
pop
cld
dec
call
inc
xlat
mov
(bad)
not
and
dec
jnp
jb
dec
cwde
mov
pushf
xor
lock
push
mov
push
sbb
jmp
outs
ja
test
add
out
mov
call
call
pop
jl
scas
adc
cli
jp
push
sbb
push
test
dec
mov
mov
mov
pop
mov
add
dec
icebp
mov
inc
or
int
sbb
fnstcw
xchg
cdq
stos
fs
jg
cwde
push
lds
in
lea
das
aad
pop
ins
ficom
out
pop
popa
cmps
jnp
jo
xor
dec
add
pop
mov
inc
test
mov
cs
popf
pop
imul
sub
xor
(bad)
add
cmp
cwde
loopne
xor
inc
sbb
sub
shl
xor
dec
sub
pop
or
jecxz
push
xchg
jecxz
add
sar
scas
xlat
ret
gs
mov
pop
xchg
jl
sbb
mov
lsl
push
test
mov
mov
sub
mov
pushf
xchg
xchg
jb
xor
mov
fld
popf
sbb
ja
and
aad
nop
or
pop
int
pop
cmp
dec
gs
sub
pop
repz
xchg
ror
lea
sti
jne
int
test
int
neg
mov
jno
dec
lahf
cmc
push
bound
and
pop
xchg
paddb
and
cmp
xlat
sub
jne
xchg
mov
inc
push
or
mov
das
dec
fcmove
(bad)
add
cdq
cs
xchg
mov
fst
aad
imul
sub
movs
into
adc
imul
in
movs
jno
xchg
fs
stc
mov
sbb
sahf
cmps
aas
sti
imul
stos
or
mov
(bad)
lds
aad
or
add
add
in
in
loope
mov
mov
in
addr16
push
addr16
sbb
inc
push
ja
jge
cmp
jge
sub
dec
(bad)
bound
mov
cmps
add
jo
mov
mov
test
int3
xlat
in
mov
sub
fidiv
xor
or
mov
imul
sub
ret
jnp
ins
mov
in
(bad)
retf
cmp
(bad)
jmp
pop
outs
aaa
dec
mov
push
cld
push
xchg
bound
cdq
and
and
cmp
sbb
fistp
add
(bad)
fneni(8087
aas
aas
rcr
int3
mov
and
jecxz
into
cmp
mov
jle
mov
mov
int3
scas
ds
mov
(bad)
or
cmp
cmp
stos
outs
jnp
push
cmps
mov
mov
cmps
jbe
adc
lahf
add
fist
hlt
pop
ins
cmp
or
inc
loop
xchg
dec
push
sar
fiadd
jo
dec
inc
shl
sbb
mov
sub
jns
mov
xor
add
shl
mov
xchg
cmp
mov
sti
ins
gs
xchg
mov
xchg
gs
jns
push
ja
out
add
mul
adc
jnp
mov
mov
or
mov
fmul
mov
dec
and
es
dec
adc
loope
in
push
cmps
mov
jmp
pop
inc
aad
inc
ins
dec
xchg
jbe
xor
mov
sbb
mov
jnp
ds
pop
je
sub
jmp
push
ffree
mov
jmp
adc
xchg
cmp
cmp
movs
out
xor
out
pop
jmp
dec
jmp
dec
jns
adc
xor
pusha
arpl
pop
xchg
xlat
inc
or
(bad)
mov
mov
(bad)
icebp
sti
les
dec
sbb
fild
or
(bad)
dec
mov
loop
(bad)
loop
ror
mov
cmp
aas
dec
and
scas
loopne
adc
outs
jae
or
adc
cwde
jge
xchg
(bad)
jne
sub
scas
cli
dec
loop
cmps
fistp
mov
adc
inc
mov
sbb
or
retf
pop
test
enter
aas
add
leave
cmc
push
shr
hlt
scas
mov
in
sti
xchg
xor
test
jbe
mov
cwde
in
and
sbb
in
jb
das
out
cmps
stos
das
add
jb
shl
movs
enter
aad
stc
mov
and
cmp
out
sti
jg
and
inc
or
lahf
sbb
mov
les
jo
aas
int3
fs
in
leave
dec
sub
xor
out
rcr
inc
lds
sahf
bound
inc
jecxz
call
and
adc
mov
pop
stc
xchg
push
mov
xor
push
jb
(bad)
in
mov
test
repz
jne
div
push
push
aas
pop
add
or
jns
in
sbb
pop
std
ror
add
pop
mov
bound
add
(bad)
(bad)
arpl
test
pop
loopne
jmp
sbb
popf
arpl
popa
je
clc
in
and
lds
fs
dec
mov
push
mov
stos
push
mov
and
cmps
in
cli
mov
(bad)
or
push
iret
inc
fst
adc
setp
adc
enter
xchg
rcl
push
cmp
fidivr
stc
mov
test
xchg
pop
icebp
push
loope
mov
adc
dec
fwait
pop
jnp
sub
push
pop
int3
push
cli
je
xor
(bad)
fild
test
add
adc
cmp
(bad)
jp
mov
or
data16
pusha
xchg
shr
arpl
and
dec
ror
or
xchg
sbb
add
and
int
clc
xchg
test
cmps
stos
cmp
das
add
and
dec
in
popa
pop
loopne
scas
pushf
fwait
call
xor
cmp
aas
in
ss
je
in
xor
jp
mov
add
imul
scas
loope
in
loope
mov
jbe
mov
fs
and
stc
cmp
stos
leave
add
or
pop
nop
xchg
mov
aaa
mov
retf
retf
push
push
stc
jecxz
and
fsubr
or
jnp
pop
xchg
lods
jl
jae
mov
adc
stc
mov
xor
xor
jo
jge
int3
sbb
fcomp
push
shr
leave
ret
and
hlt
jb
adc
clc
mov
mov
adc
adc
sbb
push
dec
lds
xchg
ss
loopne
jl
ja
fwait
push
or
inc
repnz
dec
pop
adc
xchg
fs
or
sbb
arpl
mov
popf
xor
lods
inc
or
pushf
jo
fucomp
cli
pop
outs
mov
sbb
lahf
pop
rcr
inc
inc
(bad)
stc
addr16
push
jge
push
jle
popf
shl
sbb
out
fnstenv
or
mov
retf
jmp
nop
sbb
adc
dec
test
sub
into
out
mov
les
bswap
xchg
ins
inc
xchg
ja
nop
cdq
pop
cmp
rcr
inc
xchg
cld
out
mov
sub
repz
sub
inc
add
push
mov
inc
mov
xchg
les
outs
enter
push
ret
std
mov
dec
imul
or
inc
nop
(bad)
emms
adc
mov
xor
shr
push
pop
adc
aas
(bad)
xor
test
in
jg
or
sub
ja
mov
loopne
(bad)
mov
push
sbb
pop
movs
sub
mov
jbe
or
xchg
loope
cmp
verw
(bad)
shr
mov
mov
shr
push
dec
or
sub
add
movs
mov
cmp
popf
(bad)
call
or
psubb
mov
in
mov
xor
arpl
test
sbb
mov
adc
inc
push
js
pushf
fsin
mov
sub
jo
daa
cmps
in
(bad)
push
scas
shr
je
mov
jl
out
pop
aam
lock
adc
cmp
jle
fnsave
push
mov
scas
sub
xor
push
sbb
jo
fidivr
adc
mov
xor
movs
ja
je
and
rcl
xor
enter
iret
ins
fsubr
inc
shl
sbb
cmp
jg
mov
leave
test
ficom
add
mov
sub
dec
mov
sbb
dec
adc
xchg
je
(bad)
pop
scas
daa
dec
int3
aam
cdq
cli
(bad)
jl
fcomp
outs
or
add
add
out
lea
mov
push
adc
lock
xchg
push
inc
jmp
push
cmc
shr
mov
adc
or
adc
lods
std
push
jp
(bad)
fist
dec
and
ror
mov
loope
call
ret
lods
in
outs
ret
gs
sbb
clc
fprem
jns
jnp
mov
xchg
loopne
lahf
dec
mov
jle
inc
inc
imul
ror
lock
les
fsubr
mov
mov
and
mov
or
das
push
inc
mov
not
lea
xchg
jno
out
jge
rcl
push
repz
ss
call
pop
outs
mov
fstp
test
dec
jno
add
add
xor
iret
or
mov
mov
inc
loopne
cld
daa
je
push
(bad)
adc
push
cmp
jo
les
test
aam
add
popa
cmp
cmp
icebp
scas
cvtdq2ps
cwde
mov
and
movs
cmp
in
cmps
mov
sbb
inc
pop
cmp
mov
es
dec
add
ficomp
scas
jne
jmp
jg
sub
pop
cmps
inc
dec
xlat
and
fiadd
cmp
push
js
jge
aaa
repz
out
push
rol
mov
sbb
in
ins
fsubp
into
mov
adc
mov
pop
push
shl
in
call
out
and
shl
push
and
aad
push
xchg
cmp
repnz
in
push
std
das
lock
mov
jbe
mov
xor
sub
test
pushf
mov
inc
shr
test
repnz
outs
iret
push
aad
lahf
in
jp
adc
(bad)
icebp
cli
jge
push
mov
sbb
ficomp
int
push
cmp
mov
mov
pusha
aad
mov
shl
mov
int3
xchg
cmp
lds
pop
sbb
or
retf
outs
test
sti
cmp
retf
loop
jl
out
imul
in
jb
push
mov
sub
mov
mov
iret
inc
cmp
daa
xchg
in
imul
or
mov
adc
ret
inc
pusha
test
(bad)
pop
jmp
movs
mov
jae
fimul
in
mov
dec
movs
loopne
mov
push
push
mov
xchg
sub
sub
add
fst
loopne
int
(bad)
fsub
out
test
xor
adc
pop
out
xchg
add
xchg
cli
std
(bad)
lahf
retf
test
popf
data16
ja
push
imul
pop
sbb
cli
cld
addr16
rcl
mov
test
(bad)
rcr
stc
fisubr
mov
mov
retf
dec
adc
js
daa
push
inc
dec
loop
cdq
hlt
into
rol
ins
mov
ret
add
xor
(bad)
mov
push
xor
mov
pop
add
add
jnp
ds
bound
and
pop
dec
add
inc
push
(bad)
mov
js
sahf
jae
xor
mov
leave
pushf
aas
pop
fwait
mov
add
(bad)
cmp
cld
shr
inc
jg
pavgb
pop
and
out
fild
imul
cmp
test
jg
push
(bad)
sub
jno
cmp
test
mov
xchg
test
in
xchg
mov
cmp
nop
xchg
jae
cdq
mov
std
mov
daa
jns
enter
pop
retf
pop
jns
adc
jl
clc
push
sbb
add
out
lods
(bad)
jle
pop
pop
fcom
xor
dec
fmul
jns
into
jg
int3
inc
imul
stos
xchg
dec
mov
cli
cmps
jge
mov
xchg
iret
fiadd
and
and
push
xchg
dec
sub
or
or
sbb
fs
cdq
cmc
add
jae
lea
mov
adc
std
into
pop
lock
xchg
jae
pop
push
jg
sub
dec
fist
test
jg
and
addr16
hlt
and
mov
dec
pop
imul
inc
lahf
jmp
imul
sub
ja
aam
lods
bound
mov
movs
mov
sbb
call
sub
mov
lahf
pop
xor
cmp
aad
rcr
in
push
jbe
or
inc
sbb
pusha
stc
test
in
mov
dec
sbb
mov
mov
xchg
inc
jne
add
inc
add
adc
popa
mov
scas
shr
popf
fimul
jmp
pop
lods
iret
push
std
mov
push
test
stos
inc
enter
cmp
and
out
iret
adc
js
jl
mov
adc
cmp
sahf
cmp
ret
mov
or
mov
sub
fidivr
jle
cwde
test
xor
xchg
test
xor
xchg
stc
jno
out
fisub
mov
mov
jmp
in
jns
loope
daa
nop
mov
jae
sub
sbb
frstor
rol
sub
xchg
ja
fwait
lea
ss
daa
jle
leave
dec
frstor
mov
mov
fcom
loope
mov
aad
sti
add
jecxz
adc
fs
ffreep
dec
test
add
aas
hlt
ja
add
xchg
ret
add
adc
inc
stos
mov
stc
test
popa
add
aam
cmp
xchg
lds
mov
pop
test
push
cmp
mov
scas
hlt
sbb
bound
push
or
mov
scas
cmps
mov
data16
daa
add
pop
in
inc
sbb
cmc
gs
in
inc
mov
aaa
fisub
inc
stos
inc
call
mov
jmp
div
fistp
mov
scas
xor
pop
sbb
jg
cmps
mov
comiss
cli
sar
jno
push
adc
icebp
sbb
push
jl
sbb
jecxz
jns
add
sbb
xchg
jmp
call
push
aaa
sub
sahf
mov
test
pop
dec
push
sub
das
retf
leave
sub
inc
fwait
jmp
sub
mov
shl
inc
lahf
repz
sub
pop
pop
(bad)
mov
pop
retf
mov
nop
and
in
cmp
dec
add
sbb
pop
adc
nop
sbb
cld
xor
mov
test
jns
ja
mov
clc
sbb
lea
in
lods
out
fsubr
shl
movs
iret
aam
sbb
jns
pushf
je
jns
scas
arpl
inc
gs
push
sub
push
jo
por
xlat
lahf
push
and
inc
xchg
mov
and
inc
xchg
movs
jae
test
inc
mov
repz
les
mov
lods
adc
mov
push
pusha
arpl
jno
pop
add
shr
popa
jbe
daa
xor
jnp
sar
imul
ffreep
push
jmp
ret
mov
inc
loope
xor
push
xor
mov
test
and
dec
mov
into
pop
int3
sbb
add
jmp
pop
ret
or
inc
aaa
lods
lock
add
jmp
add
mov
jmp
movs
int
push
pop
mov
repnz
dec
outs
sbb
jg
mov
mov
adc
lods
test
pop
stc
sub
cli
neg
sbb
sbb
je
and
xchg
stos
add
dec
sbb
jge
jle
adc
cld
das
mov
add
in
sbb
sub
rcr
inc
movs
mov
push
aad
xchg
int
loop
push
mov
in
out
enter
mov
icebp
pop
(bad)
sub
pop
xchg
les
mov
outs
ja
push
in
pop
aad
cmps
xor
inc
das
out
lods
imul
inc
adc
sub
dec
xor
(bad)
in
jecxz
push
xor
or
hlt
call
stc
add
jbe
mov
lds
idiv
inc
out
test
or
xor
push
call
sub
ins
mov
xor
dec
gs
in
(bad)
call
inc
(bad)
mov
inc
push
mov
adc
repz
sub
xchg
ss
mov
inc
pop
dec
xchg
push
jo
xchg
jmp
adc
xor
push
sbb
mov
popa
pop
push
loop
sub
movs
push
dec
cmp
into
leave
enter
jmp
or
adc
jmp
inc
or
(bad)
jmp
call
div
jo
das
sti
outs
sar
xor
mov
add
xchg
push
inc
and
retf
fscale
(bad)
daa
xor
mov
bsr
xor
dec
pop
and
adc
and
scas
stos
cli
pop
movs
je
dec
(bad)
repz
inc
cmp
pop
in
mov
pop
mov
push
mov
inc
mov
add
hlt
loope
mov
jle
sbb
jecxz
jge
inc
cld
fdiv
loop
jns
xchg
pop
stc
xor
enter
or
mov
pop
xchg
sub
add
fsub
mov
iret
mov
frstor
sbb
cmc
lahf
(bad)
stos
push
dec
pusha
test
movs
dec
and
jp
data16
inc
ret
cmp
aas
iret
bound
sbb
div
inc
loope
mov
adc
outs
mov
pop
or
sbb
sub
push
jmp
pusha
fild
or
jns
pop
sbb
lock
stos
mov
or
mov
sbb
adc
push
sbb
fldcw
ds
mov
cmp
push
fld
sbb
lea
pop
daa
aam
aam
push
sub
rol
repnz
out
cmp
es
jmp
ja
pop
lahf
xchg
xchg
rol
popa
jae
or
xchg
invd
dec
push
call
inc
jp
or
pop
mov
lds
test
in
std
xchg
pop
push
or
mov
les
mov
dec
(bad)
sbb
test
das
dec
ret
cdq
test
cmp
jp
jno
sub
jnp
pop
mov
jge
xlat
sbb
int3
or
test
sub
cmp
inc
push
rcr
jo
test
idiv
jle
wrmsr
dec
xchg
push
mov
push
sbb
popf
inc
jmp
xor
pop
add
inc
dec
cld
movs
xchg
enter
and
push
popa
aaa
pop
cmp
mov
lock
retf
push
int
and
push
inc
sbb
lds
pushf
scas
outs
std
imul
outs
xor
xchg
sbb
dec
mov
mov
jp
sbb
iret
arpl
xchg
jnp
fdivp
push
clc
(bad)
sbb
test
call
movs
jns
cmps
stos
push
and
imul
(bad)
mov
xlat
sbb
cwde
popa
iret
add
jnp
mov
sub
jp
imul
jle
fild
push
adc
adc
inc
jl
ja
lds
imul
pop
add
iret
mov
cld
cmp
push
mov
push
jmp
in
or
mov
jo
dec
jmp
mov
mov
lods
pop
mov
sbb
push
ror
jmp
addr16
and
push
arpl
sar
out
jbe
dec
or
and
jmp
jbe
ja
push
jl
fimul
jb
in
mov
cmp
sub
inc
in
inc
push
adc
jnp
mov
shr
fsub
aad
jno
and
adc
ss
outs
scas
pop
popf
sbb
sbb
sub
and
sahf
idiv
xor
xchg
xchg
mov
dec
or
sbb
repnz
pop
aaa
or
out
nop
sub
pop
(bad)
repz
cmp
aaa
sbb
(bad)
fs
outs
add
cmp
shl
mov
data16
rdtsc
int3
cmps
imul
add
aam
dec
and
jae
push
or
call
shl
test
xchg
xor
retf
jmp
and
call
loope
imul
mov
push
dec
xchg
or
or
cwde
push
ror
or
out
dec
sbb
cmps
arpl
xor
push
xor
(bad)
xor
dec
sub
fsubr
popf
std
fcom
out
add
dec
dec
inc
(bad)
mov
cmps
push
lds
add
mov
repnz
dec
cmp
lock
(bad)
ja
and
pop
jne
jle
mov
jns
jbe
mov
loope
out
mov
dec
cld
popf
nop
sub
inc
les
fmul
mov
pop
pop
xor
mov
ss
imul
fldenv
mov
loop
in
in
test
jmp
mov
cli
inc
sbb
sbb
cmp
clc
or
xor
mov
pusha
les
or
adc
sbb
sahf
cld
repz
(bad)
aas
pop
je
xchg
(bad)
rcr
das
xor
jg
cmc
popaw
js
dec
movs
dec
arpl
out
cmp
push
adc
xor
jns
or
sti
mov
shl
aas
cli
mov
dec
test
fwait
shl
xchg
mov
push
pop
xchg
jmp
cmps
cmps
jg
fnstsw
mov
js
pop
jge
sub
and
pop
call
outs
pop
xchg
jle
mov
adc
out
cld
jbe
not
push
adc
push
push
cdq
or
sbb
push
xor
in
mov
cmp
cmp
cmc
sub
inc
and
or
inc
imul
clc
inc
jae
or
xlat
in
mov
(bad)
(bad)
(bad)
clc
sti
fistp
call
loope
pop
xor
dec
out
pop
adc
and
cmc
cmps
loopne
out
jbe
adc
ss
inc
popf
jmp
call
mov
sti
(bad)
jmp
cld
dec
retf
pop
fidiv
pop
jl
mov
test
(bad)
push
cmp
in
fdiv
mov
pop
popf
pop
add
fs
ficomp
rol
ror
jae
in
cmp
jb
mov
adc
rcr
das
rol
sbb
fistp
(bad)
jno
int3
in
jg
jno
mov
icebp
push
(bad)
iret
cmp
cmp
stos
sar
xor
dec
nop
rcr
dec
push
jnp
sub
mov
iret
shr
jno
gs
out
inc
jge
jge
stos
out
or
imul
mov
fdiv
scas
or
jnp
out
xchg
cmp
stc
(bad)
mov
dec
jnp
xchg
jmp
push
push
pop
xchg
mov
test
in
push
jb
shl
mov
mov
retf
jecxz
jge
inc
lock
mov
mov
pusha
jge
lock
ja
mov
call
and
xchg
cdq
int
bound
out
push
icebp
das
pop
ret
daa
stos
(bad)
pushf
mov
jbe
shr
add
stc
jbe
xor
sub
push
test
inc
daa
jne
pushf
mov
xor
pop
xor
jb
into
movs
push
xchg
sbb
cwde
ins
inc
lods
xor
push
nop
shr
mov
shl
retf
test
adc
pop
sbb
mov
lds
pop
sbb
stos
mov
inc
lahf
gs
push
pop
push
mov
repnz
and
fst
aam
(bad)
js
xchg
or
inc
jmp
popf
xchg
les
lock
enter
push
fisub
es
pop
fucomp
xor
xchg
shl
ss
add
clc
sbb
inc
fcom
arpl
in
lds
push
ds
pushf
xor
les
and
gs
repnz
mov
jae
push
neg
add
movs
lea
das
call
xor
(bad)
pop
outs
xchg
or
push
aam
mov
loopne
jmp
scas
jbe
dec
test
push
(bad)
mov
sti
jne
inc
jge
mov
gs
jl
pop
jne
push
scas
jne
outs
xor
std
mov
stos
addr16
xor
bnd
leave
pop
adc
and
cmps
in
stos
cmps
shl
and
xchg
lods
add
sbb
data16
mov
scas
iret
mov
loop
inc
outs
jg
pcmpgtb
mov
mov
out
inc
fcom
inc
pop
fidiv
push
icebp
cmps
cli
arpl
xchg
mov
xchg
clc
xor
sub
push
push
mov
popf
xchg
icebp
ret
or
and
fisubr
jle
ins
mov
(bad)
vphaddbq
ror
inc
pusha
xchg
dec
mov
aaa
inc
jecxz
jecxz
loopne
jns
xor
scas
into
sub
inc
cmp
jno
(bad)
in
dec
mov
xchg
pop
(bad)
mov
and
xor
es
clc
mov
retf
sbb
nop
sub
lods
mov
jp
jb
call
pop
or
retf
xchg
jmp
jae
add
mov
rcl
inc
or
xchg
in
aad
push
lahf
cwde
pusha
and
call
hlt
sbb
jecxz
popf
sub
push
retf
push
dec
pop
adc
jmp
xor
mov
push
or
dec
jg
arpl
cmp
ret
ins
mov
out
mov
push
fdiv
(bad)
sub
mov
dec
xor
mov
xor
(bad)
lods
test
sbb
sbb
retf
xlat
leave
mov
repz
push
xchg
sub
mov
cmp
add
jle
icebp
out
cmovo
adc
sub
pop
inc
inc
adc
test
mov
lds
and
int
rcr
in
mov
icebp
xor
(bad)
jb
(bad)
loop
mov
in
into
jmp
(bad)
cmps
fcmovnbe
stos
mov
sbb
dec
(bad)
jbe
addr16
push
xchg
xor
(bad)
jo
push
dec
inc
loopne
sahf
stc
jg
jne
popa
xchg
jno
push
jp
cmp
add
adc
or
or
dec
je
push
out
pushf
pop
sahf
jecxz
aad
mov
call
mov
clc
jge
mov
cmp
pop
icebp
call
mov
(bad)
fbstp
pop
test
add
jmp
sbb
adc
xor
mov
into
or
push
jno
jae
icebp
sbb
call
shl
xor
adc
mov
jo
movs
loop
int3
stos
dec
pop
lahf
adc
sbb
jle
icebp
jb
jge
push
jl
xchg
out
mov
dec
or
adc
xchg
daa
xchg
push
std
daa
add
xchg
sub
jg
jmp
mov
shr
push
adc
mov
inc
iret
pop
addr16
push
mov
mov
add
daa
or
(bad)
push
pop
vpaddd
cli
jns
cmps
repnz
sar
mov
shl
mov
fcom
arpl
clc
pop
or
and
mov
xchg
xchg
xor
imul
inc
mov
loope
cmp
dec
outs
jns
mov
in
cmp
js
gs
jl
xchg
pop
cmp
cmp
inc
or
xchg
jne
icebp
push
xchg
push
icebp
sub
out
fdivr
stos
add
in
pop
xchg
pop
cmp
(bad)
pop
adc
dec
cmp
sub
push
mov
retf
arpl
cs
add
adc
std
loope
ins
fs
clc
mov
adc
daa
fwait
pop
cwde
add
mov
pop
pop
cmp
fdivr
sbb
fidiv
mov
retf
test
mov
ins
imul
xor
imul
cmp
lahf
fcomip
fimul
call
jmp
cli
sahf
mov
sbb
or
pop
or
leave
test
les
inc
xchg
xor
call
mov
rcl
mov
cmp
xchg
mov
repnz
push
sub
movs
daa
xor
cwde
scas
imul
dec
enter
adc
ret
and
push
stos
test
push
xor
pop
pop
dec
jecxz
push
(bad)
movs
pop
mov
mov
sbb
mov
cmp
xor
sub
stc
cmp
pop
adc
xchg
sbb
(bad)
pop
cmps
sahf
icebp
jmp
lods
stc
aas
or
sbb
push
mov
xchg
adc
mov
mov
loop
imul
(bad)
pop
xchg
lea
push
ds
adc
aam
cmp
out
cmp
stos
shr
mov
adc
das
mov
cs
inc
sbb
xor
test
jo
and
aaa
and
cmp
mov
push
cli
shl
or
dec
call
or
and
and
dec
mov
adc
jecxz
lods
outs
vmwrite
dec
mov
test
inc
xor
test
dec
xchg
push
out
cmp
mov
int
icebp
inc
jne
pop
sbb
fcompp
sbb
and
clc
cmp
sub
je
mov
std
xchg
push
arpl
xchg
mov
shl
pop
jmp
adc
xchg
pop
popf
xchg
jle
or
out
stos
sahf
pop
gs
cmc
xlat
popf
fidivr
jno
jg
pushf
loop
inc
aaa
and
mov
dec
sti
les
sub
addr16
mov
lea
pop
popa
out
(bad)
cmp
cmps
pop
cdq
sub
sbb
xor
pusha
mov
dec
mov
daa
mov
push
loope
sbb
sbb
dec
ins
push
and
sub
mov
mul
mov
cs
ror
or
shl
dec
(bad)
cli
xor
out
push
(bad)
mov
inc
pusha
stos
jb
add
add
jp
xchg
leave
fild
pop
jmp
jns
add
inc
jmp
push
pop
pop
inc
jae
and
mov
(bad)
retf
pop
push
sbb
or
xor
mul
xchg
cmp
pop
mov
cmc
loope
jns
cmp
in
jno
arpl
leave
enter
add
int
in
dec
adc
arpl
retf
lock
mov
cmp
int
not
in
inc
xchg
dec
xchg
mov
mov
cmp
sbb
lods
mov
lods
and
test
repz
or
jl
ds
mov
arpl
jae
popf
enter
dec
ds
dec
jmp
xchg
into
xchg
out
fimul
xchg
lds
ins
(bad)
sbb
dec
in
inc
cli
and
pop
sub
mov
and
pop
fst
pop
sbb
dec
mov
inc
enter
int
icebp
lds
lods
xor
xchg
and
jg
mov
cmp
add
push
cmp
pop
pusha
mov
cmp
mov
pop
xor
shl
mov
pop
pop
jns
mov
out
dec
sbb
movs
out
and
inc
mov
rcl
add
xor
gs
enter
xchg
out
adc
inc
dec
mov
mov
retf
mov
stos
adc
pop
push
push
and
fld
xchg
arpl
push
scas
jp
mov
stc
jecxz
inc
cmp
cmp
push
call
jg
cmps
jmp
pop
jno
movs
movs
addr16
pop
cmps
sub
pop
stos
push
popa
es
add
clc
nop
pusha
cdq
shr
xor
xor
(bad)
outs
dec
pop
push
inc
pop
xchg
out
test
pop
inc
scas
pushf
adc
clc
mov
or
ins
or
retf
mov
push
rcr
adc
shl
inc
adc
inc
addr16
jmp
jg
jecxz
test
jle
aas
cmp
ins
jbe
test
movs
add
aaa
call
xor
(bad)
xlat
das
add
out
push
cli
rcl
sbb
xchg
retf
loopne
out
std
iret
push
mov
dec
mov
hlt
xchg
imul
adc
dec
dec
inc
xchg
sub
test
adc
mov
inc
dec
adc
push
cdq
lods
jmp
pop
in
pop
xchg
mov
xchg
movs
cdq
push
test
xchg
stc
or
mov
(bad)
jnp
ss
fstp
dec
push
inc
dec
fs
sub
cmp
add
push
pop
mov
mov
das
sbb
xchg
xor
xchg
sbb
cld
fwait
ror
rol
inc
mov
sar
shl
std
movs
into
mov
pop
lods
inc
inc
int3
rcl
mov
or
into
dec
ins
xor
fild
add
dec
xlat
sbb
jno
add
daa
ds
adc
add
mov
add
push
rcl
or
push
push
into
push
add
mov
and
adc
(bad)
and
into
movs
pop
pop
scas
ds
in
mov
sbb
fcomp
or
stc
es
sbb
fmul
mov
cli
mov
inc
das
or
or
pop
retf
cmp
aam
pop
dec
xchg
sub
pop
out
jae
pop
mov
push
stos
imul
xchg
(bad)
ficomp
push
arpl
jg
or
cwde
add
pop
scas
and
cmp
adc
aaa
inc
(bad)
xor
cmps
cmp
mov
pop
rol
cld
ins
in
sub
je
cmp
jecxz
gs
arpl
in
and
xchg
fisubr
ret
add
paddb
arpl
add
outs
xlat
cmp
hlt
gs
outs
lahf
mov
dec
(bad)
call
inc
xchg
out
xchg
dec
aas
cli
push
lods
push
test
cs
dec
push
mov
(bad)
popa
sub
jae
test
test
shl
fistp
pushf
mov
fwait
sub
loopne
aad
xor
cld
mov
imul
rcr
out
fbld
xchg
push
cwde
mov
icebp
mul
and
lods
daa
js
pop
imul
jle
scas
jmp
push
sbb
test
out
push
test
sub
jnp
jns
and
ins
loope
(bad)
gs
in
and
mov
(bad)
or
cmps
daa
inc
out
shl
lahf
inc
or
inc
ins
mov
xchg
adc
fistp
retf
mov
fs
add
out
push
imul
pop
retf
pop
push
mov
fiadd
imul
mov
(bad)
out
in
dec
mov
xchg
mov
fild
adc
repz
xchg
aam
mov
dec
dec
dec
dec
and
aaa
shr
outs
mov
push
shl
cs
hlt
gs
xchg
add
lods
in
sbb
mov
shl
shr
repz
sub
fisttp
jno
jno
jbe
adc
sbb
inc
aam
push
jnp
push
inc
(bad)
icebp
fldenv
fsub
fwait
xor
ror
pop
(bad)
mov
jle
aaa
push
xchg
test
add
fwait
lock
push
repz
inc
and
(bad)
and
int
outs
sub
cmps
jmp
and
cmp
test
lods
jp
push
pop
and
es
inc
loope
movs
jmp
fcmovnu
or
dec
push
fucomp
sub
out
add
pop
xchg
popa
cmp
imul
push
xchg
sub
cmc
iret
mov
rol
popa
add
adc
gs
arpl
mov
add
pop
shr
mov
xor
test
into
rcr
lahf
sbb
into
pop
push
pop
sti
xchg
pop
mov
xchg
jne
xor
pop
lods
push
or
push
shr
jns
jb
retf
cmps
xor
pusha
inc
pop
cwde
push
xlat
(bad)
inc
fnstsw
mov
fwait
cdq
int
mov
mov
scas
stc
xchg
cmc
pop
cmp
test
enter
and
mov
sbb
out
adc
cmp
sbb
add
dec
sbb
inc
cs
aaa
ja
lahf
mov
inc
leave
xor
outs
mov
cwde
sbb
movs
ret
xchg
pop
in
hlt
scas
dec
imul
ss
jle
das
pop
sbb
or
mov
dec
inc
test
mov
push
bound
fst
fdiv
xchg
or
ja
ret
repz
push
stos
pop
cli
mov
sub
pop
sbb
mov
and
imul
sbb
ret
jo
jl
and
out
mov
mov
ret
cmp
cdq
jbe
out
xlat
test
aam
adc
inc
lahf
sbb
sub
push
mov
test
cli
inc
sub
jl
pushf
sbb
push
lods
and
dec
xor
xor
stos
mov
fisub
mov
iret
ret
push
jns
fsub
pop
arpl
test
jg
push
xchg
sti
in
push
outs
mov
pop
jo
cld
jae
sar
ret
rcr
jns
sar
cld
mov
ja
mov
or
iret
inc
lahf
loop
jecxz
or
test
adc
add
inc
jmp
pop
jp
jecxz
add
retf
mov
retf
pop
inc
clc
and
cmc
push
push
mov
add
rcl
pop
out
pop
(bad)
xor
ficom
ds
mov
outs
sbb
mov
aam
repz
iret
cmp
mov
test
pop
fiadd
add
bound
xchg
test
and
xor
sbb
dec
push
adc
and
lds
xor
xchg
xchg
or
je
pop
push
stos
call
mov
adc
pop
dec
adc
cmps
mov
ja
xor
push
and
ss
mov
push
jne
mov
jmp
xor
ss
in
jmp
js
repnz
xchg
and
jmp
xor
mov
mov
vmovmskpd
adc
inc
loope
sub
pop
shr
stos
pusha
xor
lahf
xchg
adc
sbb
xchg
test
sbb
dec
mov
icebp
loop
mov
push
xchg
xlat
ja
test
mov
imul
push
inc
stos
out
xchg
pop
pushf
into
imul
(bad)
cmps
imul
inc
sbb
inc
pop
sti
cmc
add
(bad)
bound
cdq
push
clc
stc
add
call
xor
jecxz
jae
das
adc
pop
popa
sbb
(bad)
sub
out
push
mov
movs
mov
mov
jge
je
mov
pop
sub
lock
call
push
adc
push
cld
push
push
repz
sbb
(bad)
test
xor
xchg
in
add
xchg
xchg
mov
pop
pop
std
fldcw
dec
jl
mov
les
loopne
push
pop
sar
imul
mov
sbb
dec
cmps
cwde
pop
adc
cs
loopne
lock
mov
test
xchg
mov
cmp
popf
test
sbb
dec
dec
mov
adc
scas
out
push
pop
push
mov
scas
push
repz
fist
mov
add
std
cmps
fsubr
mov
xchg
ret
mov
stos
sub
cdq
pop
repnz
inc
cmp
cmc
or
or
inc
sub
mov
shl
inc
mov
sbb
dec
(bad)
into
sub
sar
and
test
and
movs
cdq
mov
das
not
scas
and
cmp
mov
sahf
cdq
and
mov
sbb
movs
pop
lock
mov
rol
mov
cmp
lahf
addr16
aad
or
test
cmps
jae
in
les
popa
mov
rcl
sbb
retf
(bad)
retf
(bad)
pop
xchg
repz
xor
jmp
stos
lock
adc
xchg
sbb
and
jp
xchg
xor
mov
dec
test
sbb
pop
imul
mov
scas
cdq
xor
daa
lods
dec
cdq
sbb
xlat
push
cmp
shl
int
mov
adc
push
mov
jl
mov
data16
xor
aaa
xchg
inc
sub
ret
mov
inc
loopne
inc
sahf
cld
mov
and
mov
push
jno
das
test
mov
mov
(bad)
mov
mov
test
adc
not
push
push
cwde
lahf
aam
mov
xchg
sub
ds
or
push
jge
fadd
xor
xlat
cs
xlat
jb
aas
fisttp
dec
dec
cs
cmps
pop
push
cmp
(bad)
(bad)
jmp
sub
sar
jno
xlat
dec
rcr
and
adc
xor
inc
add
repz
mov
cmp
cld
retf
xor
mov
popa
ror
xchg
mov
xchg
mov
int
mov
xchg
jmp
xchg
enter
int3
or
push
sub
je
inc
psubsw
xlat
jno
mov
jns
mov
(bad)
bound
jae
mov
sysexit
sub
mov
mov
mov
and
or
jo
inc
or
int
test
mov
js
in
mov
or
mov
loop
inc
push
xor
sti
ret
ins
mov
(bad)
je
pop
lods
nop
int
bound
rcr
retf
mov
push
sbb
test
add
and
imul
sbb
into
aaa
sub
jmp
sbb
sbb
add
loope
adc
data16
xchg
push
jnp
adc
mov
pop
(bad)
push
xchg
lahf
mov
aad
aaa
ja
fld
es
jl
shr
out
movs
inc
int3
movs
xor
mov
xor
aaa
mov
inc
fwait
cmc
in
lock
stos
jo
mov
and
and
and
jae
mov
sub
jmp
mov
push
scas
cmp
cmps
push
mov
sub
dec
sbb
mov
dec
mov
jbe
cs
aaa
cmp
in
and
mov
aad
xor
push
adc
int3
cmp
inc
or
ret
test
xlat
loopne
xchg
lea
ja
inc
pop
stos
mov
push
and
dec
or
int3
call
cmp
lods
into
fwait
xlat
xchg
mov
popa
inc
and
data16
sbb
es
retf
pop
jp
stos
lods
jae
pop
fcom
stc
loopne
outs
imul
jo
sub
push
sbb
or
sub
lds
adc
add
jmp
in
enter
mov
imul
mov
sbb
cmp
jbe
push
cmp
das
cmc
sbb
mov
popa
and
cmc
ror
cmps
stos
ja
mov
jmp
(bad)
repz
push
rcr
and
or
loopne
xchg
das
dec
xchg
cdq
jmp
shl
rcl
mov
xor
je
dec
ret
or
or
xchg
push
jecxz
(bad)
rol
mov
nop
bnd
pop
and
and
lock
ss
movs
std
arpl
out
push
or
stc
int3
adc
or
lds
enter
stos
pcmpgtd
sbb
xchg
cmp
ss
(bad)
sub
adc
xchg
out
js
mov
nop
push
dec
daa
bound
scas
fucomip
sub
xchg
out
in
jmp
loope
and
jne
dec
xor
mov
inc
dec
push
test
push
cmps
xchg
xor
adc
fild
jmp
xchg
inc
sbb
into
or
stc
clc
mov
rol
xor
shr
les
les
mov
push
outs
jne
mov
xchg
mov
dec
nop
pop
mov
out
fsub
hlt
cs
rcr
jg
xor
mov
cmp
shl
loope
hlt
pop
ins
cmp
lea
stos
lahf
std
fld
add
stc
sub
clc
xchg
sub
xor
ret
sub
jne
add
xchg
jns
add
cmp
push
cmps
ins
jl
sti
inc
mov
fist
out
retf
adc
xor
add
cmp
movs
mov
dec
(bad)
adc
jge
inc
jbe
lea
pop
test
call
push
cdq
jg
dec
dec
pop
cs
(bad)
push
addr16
dec
leave
add
push
or
mov
sbb
jnp
adc
xor
sbb
xchg
fiadd
pop
hlt
mov
sbb
sahf
retf
mov
and
push
mov
or
dec
xchg
leave
iret
jae
jmp
mov
adc
repz
push
imul
(bad)
lahf
inc
jne
ds
hlt
jns
push
adc
pop
rol
in
fstp
adc
or
sbb
inc
xchg
sub
sbb
inc
and
or
jg
sub
loope
(bad)
jg
or
test
lds
dec
dec
sbb
xchg
in
mov
aam
cmp
std
mov
pop
jl
sbb
hlt
push
ins
movs
lock
push
ficomp
mov
or
or
fwait
inc
push
cmc
dec
adc
or
fwait
xor
(bad)
shl
sub
or
sub
inc
cmp
lahf
push
repz
fcom
fcomip
adc
or
jle
dec
sub
adc
test
ficom
cmc
inc
ss
mov
out
cmp
out
hlt
xor
jmp
push
push
mov
cmp
adc
push
enter
loope
retf
lahf
adc
jl
pop
stos
and
push
pop
or
xor
clc
adc
bound
test
retf
test
jbe
push
pusha
aad
out
mov
and
cwde
fs
scas
das
xchg
test
lods
jae
or
scas
sar
sbb
push
jns
(bad)
sub
icebp
imul
push
stc
in
popa
push
jge
and
hlt
sub
shr
dec
out
push
ror
mov
fild
jbe
mov
stc
mul
test
das
in
imul
push
fsub
and
inc
push
add
add
sub
loop
je
sub
rcl
sbb
pop
nop
stos
inc
mov
dec
mov
stos
icebp
dec
jns
movs
in
dec
mov
dec
fcmovbe
mov
mov
xchg
cmp
mov
gs
mov
ss
bound
int
imul
xor
cmp
popa
data16
fidiv
arpl
xchg
adc
js
ret
jae
into
mov
jg
pusha
push
dec
loopne
call
dec
adc
pop
pop
mov
or
ffree
push
xchg
sub
aad
jg
mov
dec
scas
or
mov
out
loopne
mov
ja
repz
dec
fisttp
out
mov
fmul
mul
dec
fcomp
mov
icebp
mov
adc
dec
jnp
add
and
fmul
jne
push
daa
cmp
gs
data16
adc
cdq
mov
sbb
stos
jb
push
cmp
mov
inc
imul
mov
pop
fild
in
pop
fst
popf
add
adc
or
mov
xchg
jge
ficom
call
push
sub
popa
mov
add
pushf
aas
mov
daa
call
cmp
add
cmps
out
ja
inc
or
cmp
jge
lahf
pusha
ins
retf
jl
stos
popa
or
adc
aam
jecxz
and
ds
popa
test
xor
dec
lss
pop
jnp
mov
in
or
ja
xchg
jno
(bad)
iret
fcom
mov
mov
fld
jns
fcom
xor
sub
mov
sbb
pop
push
scas
jg
std
jle
outs
adc
adc
push
cwde
fild
sahf
les
jae
add
or
stos
add
sahf
rcl
add
mov
jg
ins
and
les
(bad)
fwait
and
lods
and
das
cmp
test
dec
xor
sub
in
xor
fidiv
mov
push
mov
or
shl
jmp
punpckhdq
xor
ins
arpl
push
mov
adc
out
add
in
(bad)
or
fst
sahf
fidiv
mov
cmp
push
test
fimul
inc
and
xchg
sbb
cmps
sbb
in
pusha
ficomp
inc
xchg
or
call
xor
sti
test
push
ret
aaa
rcl
mov
in
cmp
push
lock
lods
mov
adc
pop
scas
dec
mov
jno
inc
test
loopne
loope
iret
cmps
jp
add
xor
shl
or
mov
dec
adc
das
clc
ins
popf
out
add
mov
dec
mov
mov
jmp
shl
or
pop
aas
push
out
push
cmp
fsub
push
xor
jnp
push
int3
lahf
pusha
cmp
stc
inc
push
add
stos
and
mov
rcl
nop
and
push
cmc
bnd
dec
jae
cmps
pop
nop
push
rcl
std
imul
xor
pushf
frstor
mov
mov
out
lods
mov
(bad)
mov
scas
adc
or
imul
sub
pop
pop
jae
into
pop
scas
lds
cmp
je
push
cmp
cmp
jno
xlat
push
test
push
ins
fbstp
test
sub
mov
push
fwait
sbb
sub
push
mov
mov
sub
adc
lods
sub
push
mov
aas
js
sar
test
sub
jmp
cmp
add
adc
add
jno
mov
mov
aas
xchg
ret
lgs
and
leave
out
mov
cmps
cmp
bound
pop
fcomp
xchg
stos
push
bound
in
add
es
and
mov
adc
push
xchg
push
xchg
cmp
popf
mov
loope
or
sahf
dec
popf
jnp
pop
xor
add
dec
cs
mov
mov
pop
repnz
daa
or
imul
test
adc
and
fldcw
sub
and
and
mov
adc
fbstp
push
ret
cmp
sti
mov
sti
out
xor
ret
add
stos
mov
mov
ret
inc
cmp
into
or
(bad)
pop
inc
gs
or
cdq
push
sbb
adc
ss
das
mov
out
and
push
push
push
lea
ss
call
loop
pop
xchg
shl
(bad)
mov
cmps
test
fsub
daa
xchg
(bad)
push
inc
cs
ss
stc
dec
idiv
ins
out
loop
outs
dec
jl
jg
sub
out
jmp
(bad)
mov
push
(bad)
mov
mov
sbb
sahf
xchg
xor
add
mov
shl
jns
cld
add
cwde
mov
push
and
jge
int
jp
aas
popf
aad
fbstp
or
dec
sahf
jo
push
xchg
adc
imul
cli
sub
xor
rol
(bad)
out
sbb
jmp
leave
and
push
xchg
inc
jae
or
std
dec
jo
xor
or
jmp
retf
and
jmp
jne
loopne
dec
stos
stos
mul
dec
std
cmps
mov
ss
out
cs
int
es
and
retf
(bad)
(bad)
shr
faddp
ins
cdq
sar
popf
aad
inc
arpl
jns
out
xor
xchg
lock
mov
repnz
mov
cmp
lea
pop
fmulp
xor
jecxz
push
out
out
push
mov
scas
and
pop
popa
not
xchg
pop
pop
stos
mov
mov
ror
ins
scas
jle
sub
jg
xor
jns
mov
mov
not
into
sbb
in
pop
and
dec
xor
and
je
xlat
xor
jno
std
xchg
lea
and
nop
and
fiadd
aas
or
cdq
adc
jmp
and
cs
(bad)
lods
lods
data16
(bad)
push
lods
dec
call
(bad)
dec
sbb
mov
movs
ins
or
mov
xchg
in
dec
xor
sub
adc
and
sbb
add
sub
je
add
add
outs
push
xor
and
push
cmp
add
inc
cmp
sub
loop
or
in
bound
(bad)
call
cdq
std
enter
or
data16
sahf
sbb
cs
aaa
sahf
push
pop
xor
cmc
shr
and
mov
push
or
cdq
sbb
pop
add
jo
mov
xor
ins
inc
rcl
mov
lods
fst
mov
xor
loop
sahf
push
push
out
dec
test
call
add
out
in
into
inc
std
mov
and
dec
lods
dec
pop
cld
arpl
test
sub
xlat
cmp
mov
mov
icebp
movs
fldpi
jecxz
push
xor
and
jmp
dec
outs
xchg
sbb
mov
lods
test
push
aaa
test
or
scas
enter
sahf
push
es
adc
fcomp
lods
push
jl
sbb
sub
mov
bound
and
jge
imul
xor
test
add
add
mov
ret
in
sbb
adc
sar
mov
xchg
xchg
(bad)
out
fidivr
out
xor
dec
sar
in
cmp
test
movs
outs
cmps
mov
ret
pop
fcom
mov
cs
and
push
add
popa
xor
dec
mov
sub
rdtsc
int
stc
daa
ja
push
jnp
jl
sub
arpl
std
mov
test
or
jns
inc
xor
mov
jns
das
dec
shl
fsubr
pop
les
cmc
pusha
ins
pop
mov
add
or
lock
(bad)
fisub
iret
lods
and
pop
bound
int
cmp
xor
ficomp
and
out
xlat
inc
nop
pop
ret
loope
jae
xor
cmp
xchg
iret
mov
cmp
ret
xchg
out
xchg
daa
in
fsubr
xor
sub
cmp
mov
fsub
lods
iret
in
sbb
rcl
sub
add
hlt
xchg
push
lahf
jl
cmp
xchg
bound
add
aam
xor
dec
out
pop
jp
xchg
xchg
and
(bad)
adc
mov
jnp
sbb
cdq
ja
sti
arpl
int
cdq
clc
ss
cmc
das
jp
shr
jno
mov
dec
or
dec
stos
(bad)
or
retf
popa
loope
sar
mov
push
enter
inc
sbb
ror
xchg
pslld
xchg
aas
mov
adc
mov
cmp
test
cld
ins
mov
enter
ret
or
lods
enter
out
xor
iret
add
adc
imul
in
fldcw
mov
jge
xadd
sub
scas
dec
nop
mov
and
fsub
lea
and
dec
inc
mov
or
mov
(bad)
aad
stos
hlt
test
ins
rcr
mov
daa
outs
xchg
inc
sub
and
pop
iret
sar
or
jb
imul
shr
sub
sbb
or
cmp
mov
movs
jne
inc
cmps
sub
sbb
lods
in
dec
xchg
ja
mov
add
xor
mov
mov
or
pop
es
mov
mov
in
adc
movs
mov
push
adc
sbb
daa
shl
dec
ss
aad
mov
jl
(bad)
sbb
xchg
sub
stc
(bad)
dec
fmul
repz
mov
scas
or
ss
xchg
scas
aas
mov
jecxz
pop
mov
mov
xchg
pop
adc
mov
push
cmp
or
inc
push
into
mov
xchg
push
push
ret
sbb
dec
pop
sti
pop
test
mov
mov
add
std
clc
ret
sbb
jnp
jns
xor
add
mov
mov
pop
sbb
aaa
mov
cmp
call
adc
inc
call
or
add
jmp
dec
loop
les
sar
icebp
mov
in
fcomp
fisttp
ret
mov
xchg
cmp
jns
or
push
mov
push
dec
mov
mov
fwait
retf
icebp
out
(bad)
cmp
ret
cdq
push
retf
xchg
stos
sbb
aad
pop
dec
push
jmp
aad
lds
in
jg
sub
ss
gs
add
mov
(bad)
out
mov
mov
(bad)
stc
pusha
mov
add
sbb
ss
in
or
xor
fiadd
stos
jmp
icebp
(bad)
ret
sub
pop
fwait
xchg
loope
in
iret
jmp
addr16
or
xchg
lds
xor
imul
jns
les
fist
ret
cwde
push
movs
aam
xchg
ror
call
mov
enter
test
push
cmp
es
jo
xchg
mov
jbe
popa
xchg
les
dec
popa
or
(bad)
push
mov
ror
push
cwde
cmp
idiv
shr
mov
inc
out
sbb
popf
jns
std
daa
mov
ret
xchg
int
out
scas
retf
outs
rcr
mov
push
fimul
loop
gs
ficomp
das
sbb
cmp
adc
xchg
cmp
sti
mov
movs
sar
pop
dec
hlt
pop
dec
push
lahf
xor
adc
inc
out
mov
inc
push
stos
stc
movs
jb
adc
mov
inc
sahf
dec
dec
add
sti
adc
mov
popa
mov
retf
adc
xor
or
xor
lds
pop
gs
cmp
retf
inc
stos
pusha
ret
cmp
or
sbb
fcom
jo
imul
addr16
ins
xchg
icebp
jge
int3
movs
and
inc
enter
loope
pop
mov
daa
mov
addr16
lds
cli
and
mov
fmul
fnsave
push
and
pop
pop
add
dec
cdq
pop
mov
jb
and
mov
in
stc
jmp
add
cmps
adc
enter
shl
in
outs
ret
and
inc
aaa
out
xlat
mov
leave
cdq
push
xchg
pop
add
dec
jno
inc
xor
les
and
test
cli
stos
xchg
xor
pusha
cmp
or
jle
xor
xor
push
push
cmps
push
stos
and
mov
data16
neg
imul
out
in
push
adc
fsubr
(bad)
call
or
(bad)
or
leave
mov
test
push
ror
jmp
je
push
sub
or
sub
lea
cmp
mov
adc
hlt
mov
push
rol
lahf
mov
lea
sbb
call
hlt
jae
jl
loope
test
cmp
push
jg
int3
xor
call
in
cmps
push
pop
retf
scas
mov
jo
pop
into
pop
adc
push
push
in
push
aam
push
test
int3
sub
lea
rcl
(bad)
fstp
push
cmp
add
retf
clc
iret
mov
loopne
(bad)
test
and
into
sbb
mov
mov
sbb
jo
fs
xchg
fiadd
bound
sub
jb
(bad)
aad
pop
stos
push
push
test
pusha
mov
retf
push
jmp
sub
in
sub
outs
das
sbb
cmp
lea
and
jnp
jno
(bad)
sub
jge
fs
xchg
dec
cmp
ins
xchg
and
iret
cs
mov
fs
jo
nop
fcom
xchg
ja
out
sbb
pop
sbb
push
sbb
sbb
mov
mov
inc
cmp
les
arpl
jns
or
sub
scas
dec
sub
adc
pop
mov
fucomip
outs
jae
idiv
and
and
jns
lods
shl
aad
in
push
xchg
arpl
shl
gs
jae
xor
ficom
cmp
mov
or
ror
ins
pop
jno
ss
clc
pop
mov
sar
mov
out
adc
out
arpl
(bad)
pop
ret
mov
mov
cdq
xchg
(bad)
fbld
and
jo
dec
pop
xchg
mov
push
daa
push
arpl
and
xchg
mov
push
mov
fist
cdq
fild
mov
jp
aaa
fwait
and
pop
adc
nop
gs
or
cmp
jo
pop
es
mov
ss
ret
js
and
xchg
(bad)
cmp
sahf
test
xchg
xchg
pop
mov
loop
sub
test
lahf
cmc
(bad)
idiv
loopne
rol
test
xor
lds
xchg
(bad)
(bad)
out
add
mov
aad
xchg
jb
mov
jbe
or
push
(bad)
data16
ja
and
imul
add
daa
xchg
in
(bad)
enter
fisttp
or
jp
repnz
test
push
cmps
mov
out
not
loope
sub
pop
fdivr
push
loopne
int
clc
clc
(bad)
ja
iret
stos
out
xchg
adc
xchg
inc
inc
rcr
stos
adc
pop
scas
and
push
push
leave
dec
xchg
rcr
pop
test
pop
test
and
ret
es
xchg
cmp
mov
sbb
add
loop
and
dec
shl
leave
xchg
dec
push
pop
stos
and
and
jae
mov
daa
imul
bound
or
xor
xlat
and
shl
test
inc
scas
sub
push
sbb
xchg
hlt
out
stos
and
mov
outs
pop
jg
pop
cmp
enter
and
mov
or
ror
inc
mov
les
(bad)
sub
sbb
icebp
pop
sar
gs
mov
cmps
loope
jg
cwde
or
mov
add
inc
cmp
mov
enter
ror
neg
test
push
jae
xchg
mov
enter
loopne
fdivr
push
cmc
cmp
xchg
inc
(bad)
movs
pop
daa
adc
push
ins
ror
imul
mov
pop
mov
mov
test
add
or
pop
mov
fstp
mov
jl
inc
inc
sti
or
lea
adc
es
jne
adc
mov
adc
cld
dec
jne
cmp
adc
test
sbb
imul
test
push
cmova
addr16
push
icebp
stc
push
sbb
aaa
jge
(bad)
(bad)
out
mov
fcomp
jecxz
pop
and
sub
adc
scas
stos
xor
xchg
pop
ja
fistp
out
sbb
cmp
mov
xlat
fisubr
int3
aad
test
repnz
push
bound
add
pop
push
jns
jo
cmp
rcl
movs
je
scas
rcl
inc
jle
(bad)
jle
sub
jo
(bad)
loope
sti
lea
mov
clc
jl
cmps
mov
adc
sub
pop
stos
pop
into
mov
add
cmp
pop
lock
xchg
add
inc
xchg
jnp
ds
push
sbb
pop
lahf
cmp
cmp
arpl
ret
xchg
pop
adc
sub
adc
stos
(bad)
scas
daa
retf
jmp
xlat
rcr
in
cmp
mov
push
push
ja
mov
scas
(bad)
das
int3
aaa
(bad)
xchg
sti
int3
retf
cmp
jg
call
stos
mov
mov
fidivr
test
lahf
inc
cli
adc
push
mov
das
xor
idiv
test
fsub
xchg
popf
fimul
lods
rcl
add
lock
sub
retf
pop
jnp
mov
sub
lods
xchg
inc
inc
add
xchg
call
and
lds
jg
or
mov
jo
and
mov
pop
mov
sbb
ins
sub
les
mov
nop
mov
jmp
sub
sahf
addr16
clc
push
inc
mov
push
lods
or
pop
jl
mov
mov
ja
fisttp
stos
jns
add
dec
icebp
movs
fnstenv
in
ss
or
popa
push
jbe
pop
xchg
jb
movs
in
push
pop
mov
into
fcomp
std
call
mov
push
inc
lahf
xor
pop
enter
ret
shl
fisubr
dec
lods
or
mov
mov
ds
jle
jnp
movs
in
leave
push
in
cmp
stos
fld
sub
ss
jns
pop
mov
jmp
adc
(bad)
and
adc
pop
xchg
in
xchg
xchg
out
inc
mov
ret
inc
rcl
lods
dec
pop
xor
fwait
add
inc
stc
mov
idiv
repz
or
xchg
adc
pop
aaa
cmp
sbb
(bad)
mov
inc
mov
sub
fs
xchg
pusha
sahf
dec
dec
push
push
sub
retf
push
jb
xchg
mov
add
(bad)
je
popa
lds
test
test
jb
sbb
adc
ins
pop
ret
add
lods
mov
retf
add
arpl
add
add
mov
cmps
jbe
repnz
iret
jp
and
jl
sbb
rcr
or
movs
cmp
jecxz
mov
fst
xchg
lods
pusha
stc
push
dec
add
mov
ret
sbb
cmps
push
sub
xchg
jno
fwait
pushf
cmc
ja
sbb
cwde
ret
xor
jge
movs
cmps
adc
in
lds
push
call
adc
xchg
push
mov
out
jb
retf
and
repnz
add
fldenv
(bad)
in
fidiv
dec
fisubr
mov
lock
repnz
jle
call
pop
data16
out
or
push
in
lods
mov
sbb
iret
arpl
popf
xchg
in
fisub
sbb
and
cmp
fnstenv
ret
dec
and
mov
hlt
(bad)
adc
cmps
cmp
jl
mov
daa
pop
pop
rcl
push
fs
sbb
cmps
and
or
lahf
stos
jb
sub
ss
pop
lock
xor
repnz
jnp
sbb
sbb
lea
scas
call
shl
jo
movs
inc
cmp
(bad)
out
push
(bad)
xchg
inc
pop
cmp
mov
daa
popa
ins
aad
pusha
std
push
mov
outs
cdq
mov
int3
or
outs
inc
fisttp
in
lods
xor
fst
fisub
jp
cmp
mov
loop
aas
fld
movs
lods
or
cmp
stos
std
addr16
or
rcr
push
xor
stos
std
lods
aaa
in
lds
aam
fimul
loopne
repnz
call
add
daa
iret
mov
inc
call
lds
shl
pop
xor
sti
pop
(bad)
fcmovnbe
nop
inc
clc
imul
stc
mov
jle
and
jae
push
and
sub
mov
xlat
je
rcr
je
push
mov
jle
cmp
adc
nop
retf
inc
and
mov
ror
aas
dec
imul
sbb
loope
daa
(bad)
dec
fldcw
neg
mov
mov
in
cmp
mov
push
je
ds
xchg
mov
xchg
push
stc
ds
repz
and
push
ror
push
movs
(bad)
mov
outs
ds
nop
je
xchg
mov
mov
and
movs
dec
clc
adc
ret
pop
imul
mov
xchg
jns
push
pop
push
ret
ret
jmp
jecxz
pop
and
in
inc
xor
xor
nop
div
cld
push
xlat
add
pusha
add
aaa
in
xor
pop
and
xchg
ds
fs
mov
lock
pop
dec
jmp
gs
outs
xor
call
jmp
sub
xor
xor
xor
push
add
out
dec
movs
mov
mov
aas
neg
out
add
push
pop
ret
pop
call
hlt
jo
adc
ins
out
pop
fcom
aas
adc
adc
int
lods
xor
adc
out
movs
in
push
movs
dec
es
sbb
and
sub
and
js
ja
add
fdivr
cdq
inc
add
pop
ja
mov
xor
call
repnz
inc
les
repz
leave
lea
dec
cmp
scas
inc
test
outs
and
sub
in
pop
mov
in
cld
cmp
(bad)
call
iret
or
and
sbb
fdivp
jle
clc
push
or
stc
dec
mov
scas
push
sbb
inc
pop
mov
xor
outs
sub
in
add
pop
lea
xor
sub
xchg
nop
add
inc
je
mov
movs
pop
std
iret
es
sub
push
ja
iret
and
sbb
(bad)
inc
mov
daa
nop
mov
push
scas
add
jmp
sub
ret
pop
xor
aam
jns
shl
cmp
popf
adc
fistp
mov
add
cmp
ins
shl
dec
push
(bad)
cmc
inc
xor
test
and
sub
or
sbb
pusha
mov
inc
dec
enter
add
lods
mov
scas
mov
fidivr
push
sub
adc
ret
sbb
inc
xor
imul
xchg
add
sbb
ror
add
inc
call
jns
imul
jne
dec
or
stos
imul
sub
test
stos
mov
xchg
clc
pop
mov
xchg
push
fdiv
fwait
push
(bad)
mov
fcomp
arpl
mov
mov
aad
jle
or
xchg
sbb
or
movs
aaa
aad
out
(bad)
stos
dec
jg
mov
(bad)
enter
lock
sbb
lods
push
sbb
push
les
mov
jg
mov
jnp
dec
jae
(bad)
adc
(bad)
push
xchg
xor
in
pop
je
loop
mov
stos
arpl
pop
dec
scas
pop
add
xor
neg
mov
leave
cmp
mov
mov
sti
mov
adc
push
mov
sbb
lahf
or
mov
movs
dec
adc
in
nop
cwde
movs
add
mov
bound
movs
xor
jl
popa
js
out
xchg
stc
cmp
mov
movhpd
xchg
loopne
xchg
sub
dec
addr16
xor
mov
pop
or
xchg
das
les
pop
or
adc
call
and
pushf
jmp
push
icebp
and
dec
cwde
sbb
adc
ss
and
in
mov
lahf
cdq
dec
sub
fsub
push
aam
add
aaa
xchg
add
and
out
xchg
shl
scas
fmul
pop
test
cmps
daa
imul
and
dec
sbb
icebp
in
enter
inc
jbe
repnz
mov
cmc
test
mov
jle
push
xsha1
cmps
dec
repz
cld
pop
jno
or
mov
mov
mov
sub
pop
xchg
daa
add
mov
or
gs
scas
pushf
pop
adc
pusha
pop
inc
and
loope
dec
data16
add
sub
iret
xor
shl
xor
cmp
mov
ss
mov
push
not
sub
retf
movs
jmp
mov
imul
sub
movs
jbe
mov
dec
(bad)
pop
mov
xchg
(bad)
retf
ins
or
cs
gs
pop
or
gs
mov
xor
xor
(bad)
jne
pop
add
sub
cli
push
and
jmp
mov
inc
cmps
mov
cmps
sbb
jmp
or
inc
mov
mov
dec
and
mov
jo
and
and
std
ins
cld
aad
cmp
sub
int
out
mov
sub
rol
push
push
and
xchg
movs
or
lahf
lea
mov
mov
push
xchg
xchg
sub
xchg
mov
les
sti
js
sub
scas
jo
in
or
add
scas
call
mov
ins
mov
(bad)
cdq
retf
xchg
sysexit
(bad)
sbb
popf
retf
or
jmp
cmp
lahf
and
jmp
out
mov
push
sub
dec
inc
xor
popa
call
push
and
mov
inc
mul
bound
fdivr
mov
and
das
cmps
ss
xchg
jns
sbb
test
div
test
int3
push
out
test
jmp
dec
mov
xchg
sahf
xor
xchg
xchg
pop
and
xchg
int
xchg
hlt
pop
cmps
adc
(bad)
nop
cs
ret
jecxz
push
loopne
jno
out
shr
pop
movs
or
cdq
in
and
jbe
cmp
shr
mov
jbe
and
inc
lds
push
push
mov
outs
clc
neg
es
pop
(bad)
test
in
data16
mul
add
jo
in
jecxz
cmp
and
jle
in
clc
xchg
shl
sub
loope
ins
xor
cmp
add
inc
sbb
cmp
cwde
mov
loop
push
rcr
ret
add
jb
icebp
jle
and
stos
test
cmps
cs
cwde
hlt
jg
ret
shl
(bad)
out
retf
mov
push
arpl
jae
inc
bound
adc
ror
mov
hlt
je
mov
mov
cmp
push
or
imul
sbb
xor
int
bound
xchg
jge
add
push
es
mov
lea
dec
add
fistp
arpl
inc
and
imul
stos
ss
pandn
pop
mov
aaa
add
and
sti
xchg
pop
adc
xchg
mov
dec
jns
add
mov
add
fs
cdq
out
stos
jbe
nop
pop
pop
xchg
call
outs
mov
jb
mov
push
mov
xor
mov
and
push
xchg
jmp
xchg
outs
hlt
jp
jecxz
cmp
push
shr
fadd
outs
cdq
jmp
div
repz
xchg
add
repnz
(bad)
int3
inc
inc
add
lods
and
mov
mov
ss
sub
jecxz
or
cmc
push
(bad)
ins
adc
fidiv
mov
cmc
cwde
hlt
xor
adc
lods
repz
mov
xor
std
retf
mov
push
adc
sub
jg
xchg
or
pop
(bad)
push
xchg
std
arpl
mov
mov
ror
test
inc
push
xor
out
ja
jnp
es
gs
movs
sbb
retf
pop
pop
loopne
mov
js
mov
in
lahf
outs
mov
sbb
add
sti
sbb
inc
(bad)
mov
ds
sbb
or
sub
pop
cmp
es
jmp
scas
lods
cs
data16
movs
or
add
daa
test
sbb
dec
jnp
jns
mov
sub
imul
or
out
inc
mov
inc
dec
pop
in
mov
xchg
repz
mov
pop
ins
hlt
into
mov
xor
inc
fistp
hlt
mov
sub
sub
inc
shl
dec
sahf
push
sbb
xchg
sti
dec
int
adc
mov
out
jmp
inc
js
out
xor
jns
mov
int
sti
daa
std
jl
or
cmp
xchg
inc
test
(bad)
or
daa
add
jg
mov
pop
shl
add
push
and
shr
les
pop
daa
sub
pusha
or
add
out
mov
cmc
out
cmc
shr
je
push
sbb
pop
xor
loope
dec
aad
adc
das
cwde
push
test
pusha
mov
and
dec
xchg
mov
int3
scas
sbb
jg
cdq
jmp
ror
mov
test
dec
outs
sar
hlt
fs
or
mov
test
movd
clc
xor
test
push
sbb
mov
sub
addr16
fsub
add
mov
push
push
fdivr
push
lahf
sub
dec
jl
mov
jmp
pusha
ret
std
ins
ja
cli
or
sub
in
pushf
jle
mov
sbb
cli
push
sub
inc
test
adc
retf
fmul
dec
or
jnp
lahf
xchg
sub
push
iret
jle
adc
popf
mov
inc
jo
retf
aad
mov
add
lock
add
sbb
ror
test
add
sbb
sbb
into
gs
inc
das
cmp
push
pop
mov
scas
repz
push
imul
sub
sub
aam
jne
in
lea
subps
repnz
xchg
lds
xchg
outs
cdq
jmp
dec
adc
and
hlt
std
or
xchg
xchg
(bad)
sub
mov
inc
int3
push
lods
adc
fbld
ins
(bad)
js
call
mov
leave
mov
sub
xor
push
pop
mov
mov
ret
in
fs
push
mov
mov
push
fcomip
ret
push
xor
mov
(bad)
adc
in
out
ret
out
push
movs
fidivr
addr16
js
sbb
xchg
mov
test
mov
jae
pop
dec
sub
stos
in
xchg
xor
mov
lea
imul
jecxz
add
jae
cmp
ins
xor
xchg
fwait
sub
hlt
cmp
test
push
dec
add
adc
loop
jl
das
(bad)
inc
mov
in
cs
aas
jl
mov
push
mov
mov
adc
cmp
das
push
jae
mov
fmul
daa
inc
mov
add
aas
jnp
mov
jecxz
(bad)
lods
cdq
xor
mov
cmp
sbb
cwde
aas
mov
mov
adc
dec
adc
mov
enter
push
aaa
mov
push
xchg
iret
pop
fistp
xchg
dec
cmp
jo
clc
minps
into
push
int3
cwde
push
aaa
push
rcl
xchg
repz
(bad)
mov
add
xchg
adc
lahf
sub
jo
mov
cmp
sub
mov
stos
stc
cmps
data16
jo
push
adc
adc
loop
mov
cwde
dec
bound
js
xor
lods
jno
mov
lods
leave
imul
jns
lods
xchg
sub
adc
jp
call
jl
jge
ins
bound
movs
dec
dec
les
std
mov
and
add
movs
jle
mov
and
dec
fsub
xchg
cmps
mov
adc
mov
mov
js
xchg
add
add
fiadd
push
test
adc
fcom
xchg
dec
fld
sub
es
mov
das
and
jecxz
xlat
sub
enter
outs
xor
js
lahf
leave
outs
cdq
shr
jnp
mov
rol
xchg
(bad)
or
sbb
aas
imul
sub
and
dec
aaa
fcmovne
push
ds
inc
sub
bound
bound
scas
out
out
fbstp
sbb
out
dec
repz
sub
lods
mov
inc
pop
xlat
pop
mov
sub
ret
pop
repz
xchg
pop
jecxz
and
fs
dec
lahf
retf
and
jo
or
pop
and
inc
es
cmp
stos
daa
fcmovu
and
sbb
or
pop
xor
cli
fdivr
retf
sub
(bad)
jmp
inc
stc
push
dec
adc
lods
mov
cs
pusha
jbe
push
pop
fcmove
cmc
lock
mov
mov
mov
push
jmp
fsubr
jnp
inc
or
ret
in
out
and
add
out
pop
stos
dec
sub
lea
cmc
sti
rol
jae
fild
call
jns
int
mov
dec
or
es
inc
and
loopne
push
dec
dec
aaa
and
dec
jp
mov
dec
mov
movs
fwait
dec
jns
cmps
xchg
jae
scas
lahf
dec
std
dec
fwait
movs
shl
stos
cmp
mov
add
mov
cld
int3
push
mov
les
mov
push
adc
pop
cmc
inc
sbb
ds
rol
into
mov
shl
cmps
mov
xor
mov
sub
cld
je
inc
cld
ret
icebp
or
in
retf
cmp
mov
jmp
inc
idiv
(bad)
in
mov
rol
neg
mov
ins
inc
addr16
sub
fiadd
jae
outs
arpl
mov
jns
test
adc
jo
adc
test
test
loope
das
inc
mov
xor
fucom
nop
mov
movs
in
lahf
inc
push
cmp
push
enter
scas
xor
push
fisubr
push
inc
fwait
shr
out
xor
ins
jg
bound
push
xor
mov
ss
repz
inc
call
cwde
mov
sub
xlat
push
jle
mov
add
xlat
call
xor
push
mov
xor
mov
leave
jl
cmps
xchg
xor
xlat
inc
push
outs
mov
xlat
and
mov
mov
push
pop
imul
sbb
mov
mov
mov
add
(bad)
out
or
jae
ins
int3
sub
cmovp
repz
pop
xor
jmp
push
cmp
cmp
ins
push
xchg
mov
cmp
adc
cdq
add
pop
leave
push
call
ror
pop
das
fldenv
push
cld
out
and
cmp
sti
fcmovnu
(bad)
in
js
stos
jge
stc
jl
sbb
arpl
inc
adc
(bad)
outs
sbb
stos
das
shl
test
sub
jl
add
idiv
add
sbb
jmp
push
xchg
mov
cld
cwde
mov
add
movs
mov
xchg
xlat
in
add
adc
jmp
call
addr16
lds
mov
jno
rol
add
fsub
fld
int
loope
jae
call
es
xchg
test
cs
or
out
mov
cmp
ret
mov
rcr
dec
or
mov
in
repz
stc
add
pop
adc
outs
lahf
and
iret
mov
jle
sub
fistp
das
push
mov
fiadd
mov
int3
in
push
cs
std
xchg
scas
sub
in
pop
mov
aaa
(bad)
ret
stc
inc
add
add
nop
lock
jno
aam
inc
lds
jp
and
cwde
xor
hlt
inc
shl
cmp
or
sbb
xchg
popa
xor
shr
test
mov
dec
xchg
fild
dec
outs
jmp
mov
out
inc
test
add
sub
mul
shl
lods
add
js
retf
iret
mov
(bad)
out
gs
xchg
aad
and
(bad)
cmp
pop
out
add
arpl
adc
xchg
xor
cld
mov
push
repnz
or
cmps
inc
outs
mov
ins
lds
retf
pop
sbb
add
sbb
jmp
jmp
push
cwde
les
inc
jo
cmp
mov
ss
out
jno
out
aam
sbb
jg
push
mov
jmp
adc
loopne
mov
scas
leave
jmp
retf
push
add
jg
call
sub
lods
in
add
lds
outs
cmps
add
(bad)
js
hlt
jno
repnz
xchg
imul
sbb
(bad)
mov
repz
and
sbb
push
or
lock
ja
xchg
call
adc
arpl
cmc
jp
and
dec
dec
add
jbe
add
and
cmc
mov
mov
add
pushf
sub
push
add
lods
pop
lock
pop
xchg
fwait
data16
jp
(bad)
mov
rol
adc
mov
mov
test
xor
cli
lahf
mov
add
mov
push
mov
(bad)
xchg
mov
mov
leave
retf
fnstsw
jnp
mov
stos
aaa
(bad)
out
and
leave
popa
pop
retf
cmp
push
pop
rcr
mov
jns
jno
(bad)
ds
pop
repz
jb
je
mov
out
ss
hlt
es
imul
xchg
mov
mov
aaa
jnp
cli
mov
out
cli
inc
sub
sar
jnp
mov
mov
mov
push
mov
xchg
or
mov
dec
mov
sbb
push
mov
jno
or
or
mov
hlt
mov
jmp
lahf
cmp
test
das
aam
mov
pop
mov
inc
inc
jle
imul
add
xchg
div
hlt
into
or
xchg
cmp
fstp
or
or
in
xor
sar
add
mov
(bad)
mov
add
xchg
inc
push
aam
jge
fisubr
push
(bad)
lods
ficom
jmp
and
sar
hlt
jl
cmps
push
push
repnz
loope
push
pop
in
pop
(bad)
pop
fidiv
mov
lock
loopne
aad
in
data16
gs
test
movs
stos
xchg
add
(bad)
inc
push
shl
or
sbb
std
mov
xor
mov
mov
pop
dec
ja
cmc
sub
jecxz
xor
mov
push
ds
jmp
sbb
jae
adc
(bad)
das
sbb
mov
stos
outs
or
pop
(bad)
stc
mov
jl
gs
je
test
popa
push
ss
rcl
imul
minps
je
push
scas
xchg
mov
adc
jb
xor
je
fnsetpm(287
sub
fmul
push
mul
mov
repnz
ret
ins
push
repnz
into
retf
idiv
pop
push
stc
and
sbb
fwait
cmc
cld
pop
sub
js
mov
ret
jae
icebp
inc
jno
clc
or
stos
jne
lock
cmp
push
or
adc
push
outs
mov
inc
in
pop
push
arpl
fwait
clc
dec
jmp
(bad)
and
test
stos
rcr
xchg
pop
enter
xchg
xor
sbb
(bad)
movs
scas
(bad)
(bad)
jmp
mov
pop
retf
adc
into
add
jmp
(bad)
pop
dec
dec
push
cmps
or
cli
in
mov
mov
jmp
push
and
xchg
idiv
pop
mov
addr16
lahf
std
ss
ret
push
xor
jle
cmp
cmps
mov
cmp
(bad)
xor
iret
jo
cbw
retf
jae
mov
jb
fcomi
repnz
lods
sti
cmps
push
fstp
cdq
shl
adc
sub
and
and
pusha
call
(bad)
push
push
outs
fdivp
ror
xor
loope
mov
inc
mov
pop
push
idiv
lahf
adc
xchg
scas
and
push
aaa
mov
adc
mov
stos
pusha
dec
(bad)
xor
cmp
out
xchg
xlat
pop
pop
ror
dec
retf
enter
sbb
fld
(bad)
rol
and
sbb
shl
pop
mov
jmp
ret
imul
pop
jmp
xlat
pop
in
sahf
nop
mov
lea
aad
jno
repz
sbb
or
lds
lods
adc
mov
mov
mov
mov
mov
mov
inc
xchg
dec
sti
sbb
je
xor
sbb
sar
rcr
stc
adc
adc
shr
cmps
rcr
dec
dec
loopne
dec
stc
data16
test
sub
imul
cmps
stc
outs
scas
or
mov
rol
jbe
push
fcom
test
jl
pop
pop
mov
fcom
jb
loopne
inc
retf
and
icebp
(bad)
xchg
cmps
xor
add
mov
adc
inc
(bad)
ret
adc
test
mov
push
fcomi
add
adc
imul
inc
ret
fisub
shl
mov
loope
xchg
xor
push
fs
lods
push
jmp
sti
fidivr
adc
int3
adc
pop
mov
lds
iret
ret
mov
(bad)
fucom
mov
(bad)
(bad)
aas
mov
(bad)
xor
and
in
dec
pop
loop
ds
jno
mov
loop
(bad)
cmp
nop
mov
pop
dec
gs
cld
(bad)
not
jecxz
dec
dec
push
jmp
cmps
dec
mov
push
inc
out
mov
loopne
repz
pop
stos
xchg
add
pop
psllw
je
cdq
xor
and
add
push
push
inc
adc
mov
(bad)
xlat
sbb
dec
cmps
leave
popa
push
lock
ja
jnp
pop
push
shl
mov
repz
punpckhbw
pusha
je
push
out
add
sub
and
sub
(bad)
into
push
jmp
sbb
xchg
sbb
cmp
sbb
push
in
mov
mov
dec
xor
addr16
and
in
push
pop
stos
adc
aas
jl
fst
inc
hlt
inc
xor
adc
cdq
test
pop
enter
aad
jo
and
pop
jle
and
js
int
out
sti
mov
aas
fbld
and
sub
sbb
ret
add
in
cli
js
jbe
lea
movs
xor
dec
dec
inc
dec
cmps
pop
or
push
xchg
jp
stos
and
call
push
call
cmp
and
(bad)
test
jmp
inc
pop
pop
jns
push
pop
mov
jbe
aad
cmp
adc
jo
and
(bad)
and
sub
cmp
cmc
rcr
and
(bad)
fild
lahf
dec
popa
lahf
jle
ins
iret
sub
add
enter
inc
addr16
add
es
xchg
lahf
push
xchg
or
xchg
pop
mov
aad
imul
add
loopne
iret
aaa
push
popa
ins
jmp
aad
xchg
jmp
pushf
push
retf
cmp
push
and
push
adc
dec
les
movs
inc
daa
mov
cmp
and
push
nop
popa
int3
adc
pop
mov
inc
push
test
movs
data16
xlat
stos
and
nop
push
(bad)
ret
xchg
outs
fwait
jmp
sub
jge
ds
sub
mov
pop
pop
sub
pop
push
and
lock
rcl
xchg
stos
mov
xchg
jo
leave
push
daa
mov
out
mov
(bad)
lock
rcl
push
(bad)
retf
jle
repz
dec
int
cmp
xchg
mov
xor
push
or
xchg
(bad)
popf
lock
fiadd
jg
call
push
xchg
repz
sbb
shr
add
mov
mov
adc
adc
pop
cli
leave
iret
repnz
call
pop
out
cmps
test
and
xor
and
xlat
and
mov
sbb
fbstp
and
jne
sbb
jmp
(bad)
mov
div
stos
cmp
sub
sbb
xchg
stc
sub
inc
adc
inc
fwait
sahf
push
fsubr
pushf
or
and
xor
mov
shr
pop
(bad)
push
add
pop
pop
int3
rcl
ins
dec
in
sub
mov
popa
pslld
dec
mov
ja
dec
and
inc
aas
sbb
(bad)
adc
push
loop
lock
xchg
fwait
inc
adc
pusha
add
js
imul
cmp
aam
iret
mov
je
inc
xlat
mul
bound
and
js
sub
or
adc
push
stc
addr16
inc
add
int
xchg
push
pop
ins
push
mov
cli
cmp
mov
inc
mov
mov
call
xchg
cmps
in
loopne
inc
mov
mov
or
mov
popf
out
inc
pop
cld
ret
push
rcr
ret
fs
leave
and
xchg
push
lock
js
lahf
out
mov
adc
cli
movs
outs
stos
rcl
sti
imul
stc
or
adc
mov
push
leave
mov
pop
movs
in
sbb
enter
ds
lahf
(bad)
repnz
mov
pop
mov
das
cli
jmp
pop
pop
stos
(bad)
mov
fadd
daa
mov
xchg
mov
mov
shl
lock
fs
and
lahf
jmp
repz
les
jmp
in
cmp
rol
das
ror
push
dec
sbb
cmp
ret
xchg
push
mov
mov
inc
xchg
scas
inc
jns
add
in
aaa
and
xor
push
and
jmp
xchg
inc
push
push
push
ds
shr
xchg
clc
mov
or
in
dec
mov
xchg
mov
sub
call
and
xchg
add
lahf
xor
popf
outs
and
or
jmp
mov
sbb
sar
or
lds
mov
jl
das
xchg
jns
and
stos
mov
and
push
ret
gs
jmp
jg
and
inc
aam
push
ds
in
mov
or
(bad)
iret
ins
sbb
addr16
popf
push
cdq
(bad)
frstor
cld
int
push
jp
cdq
mov
dec
icebp
retf
out
inc
mov
data16
fistp
ror
push
add
scas
adc
rol
sbb
add
dec
retf
scas
mov
ins
jno
adc
test
dec
repnz
mov
ins
or
dec
xor
cmp
pop
sbb
jmp
mov
add
cli
xor
mov
adc
inc
cmp
push
xchg
mov
cmc
inc
dec
arpl
shl
push
push
int
dec
cmc
sub
enter
mov
or
mul
adc
push
and
adc
push
sbb
ins
pushf
sub
rcr
into
in
or
xchg
cmp
jg
mov
sub
mov
dec
xchg
dec
adc
mov
or
jg
mov
add
div
or
and
mov
pop
mov
sbb
and
mov
pop
or
ret
test
pop
pop
lock
sub
mov
movs
sbb
jo
inc
ins
cmp
sbb
pop
cmp
das
inc
wrmsr
lods
add
js
movs
sub
cmp
xchg
mov
jg
inc
out
xlat
jle
loopne
jno
lock
ds
sbb
cdq
jns
fcom
rol
xor
sbb
mov
jl
arpl
test
sahf
mov
cmp
push
mov
mov
sub
push
add
xchg
inc
xchg
cmc
outs
and
jmp
add
add
hlt
nop
mov
jl
iret
push
ins
mov
cdq
sub
pop
cmp
aam
add
shr
push
jo
pop
stos
fnsave
sbb
std
lods
jp
stc
add
test
dec
lods
add
(bad)
adc
fwait
and
mov
mov
mov
loopne
push
mov
aas
(bad)
int3
cmp
mov
int3
ins
in
xchg
test
jae
ret
inc
outs
or
adc
xchg
fwait
cli
mov
sbb
shl
movs
xlat
sbb
popa
cmp
jb
sub
inc
clc
inc
cmp
test
pop
ja
and
test
push
movs
mov
mov
test
xchg
loop
gs
ficom
imul
mov
sbb
mov
stc
outs
and
cmps
jle
adc
jnp
add
test
push
push
fld
ja
aam
aas
and
mov
adc
dec
repnz
push
test
mov
mov
sub
xor
inc
outs
jle
mov
dec
pop
mov
out
das
and
das
(bad)
in
or
mov
ror
ret
push
mov
fs
mov
xor
jmp
dec
jg
mov
mov
push
dec
push
ficomp
cwde
adc
test
push
mov
and
cld
icebp
inc
clc
stc
cmp
test
pop
cmp
push
inc
in
outs
loop
and
push
rcr
mov
dec
inc
jg
cs
sub
rol
aas
mul
test
adc
or
and
(bad)
stc
jmp
(bad)
and
adc
std
jno
xchg
ret
add
inc
scas
sub
pop
pop
mov
lods
fistp
scas
mov
push
lods
inc
cmp
or
int
mov
add
mov
in
out
fwait
and
pop
iret
or
daa
(bad)
push
leave
cwde
stos
rol
jbe
cmc
jecxz
rcr
daa
mov
adc
pop
(bad)
sar
push
lds
jo
aam
sbb
or
or
add
sar
lahf
ins
js
xchg
mov
das
pushf
push
jmp
(bad)
mov
push
jnp
jb
mov
push
fs
xchg
push
inc
pop
xor
je
sti
jge
das
add
pop
pop
or
fnstenv
int3
out
cwde
xchg
jle
mov
xlat
push
arpl
inc
mov
xor
and
sbb
outs
xchg
loop
or
nop
outs
call
jnp
ror
xchg
retf
mov
or
lea
sub
dec
sbb
xchg
cs
mov
mov
xor
add
shr
pushf
ins
mov
sub
popa
xor
jne
push
mov
sbb
(bad)
lods
mov
les
pop
add
and
dec
xor
mov
cmp
mov
xor
ds
cs
and
cmp
in
fwait
loope
inc
pop
jnp
dec
add
pop
adc
cld
stc
and
adc
cli
xor
clc
mov
sub
dec
(bad)
pusha
xor
or
mov
jmp
ror
add
cmp
addps
xchg
addr16
xor
mov
shl
shl
mov
push
scas
or
xor
(bad)
jecxz
dec
cwde
retf
aam
aam
test
xchg
push
adc
cmp
into
dec
and
int3
jmp
cmp
mov
mov
xor
adc
mov
aaa
lods
(bad)
jne
pop
cmp
xchg
outs
ret
repnz
mov
and
fmul
outs
je
clc
xchg
call
stc
cmp
mov
ja
xor
jns
xchg
cmp
sbb
lahf
arpl
mov
stc
xchg
adc
xor
gs
or
jb
ds
mov
cs
aam
dec
and
sti
lock
aam
sub
jp
push
aam
jmp
mov
mov
fisubr
pop
imul
jle
fwait
repz
lods
pop
mov
(bad)
jmp
imul
pop
mov
mov
popf
dec
xlat
sahf
push
fadd
xor
jecxz
mov
adc
jb
dec
fwait
sub
shl
dec
cmp
pushf
mov
cmps
mov
outs
adc
xchg
push
cld
call
into
test
call
mov
push
shr
push
add
test
and
loopne
jnp
popf
xor
adc
dec
push
into
out
icebp
ds
popf
mov
das
dec
jle
adc
sti
jae
jae
cdq
xchg
data16
cmp
jp
lfs
std
push
lock
dec
popf
mov
or
js
xor
add
ja
mov
adc
rol
mov
scas
cmp
and
add
mov
mov
test
sub
and
pop
and
jno
fstp
xor
push
jnp
(bad)
call
add
pop
arpl
mov
loope
inc
jns
cld
arpl
movs
inc
cli
shl
jmp
mov
das
loop
push
mov
(bad)
push
xchg
pusha
inc
cmps
pop
ss
inc
lods
iret
ret
add
shl
movs
mov
mov
dec
add
movs
(bad)
jg
sbb
inc
shl
pushf
xchg
mov
sub
ins
cwde
xor
add
sub
or
call
xchg
fcmovnbe
xchg
imul
adc
fs
int3
adc
ror
test
fs
cmp
cmps
sbb
push
test
fdiv
bound
dec
mov
xlat
jmp
int3
and
ins
jp
arpl
cmps
lods
retf
cmp
inc
jl
cs
jmp
mov
dec
mov
sbb
sub
out
imul
push
and
mov
cmp
jl
and
loop
mov
stos
call
mov
lea
movs
scas
push
(bad)
jmp
fnsave
sbb
aam
sub
mov
enter
es
ss
mov
std
cmp
push
pop
loop
or
fstp
arpl
std
mov
cmp
stc
pop
aam
push
(bad)
jp
lds
dec
push
iret
js
cmp
lods
jecxz
mov
in
push
dec
ins
and
xor
call
pop
retf
pop
push
jae
pop
jno
and
(bad)
ins
cwde
add
jp
loopne
addr16
cmc
fst
out
push
pop
std
aaa
xchg
mov
or
loop
push
jle
sbb
outs
setno
fs
cwde
es
aas
mov
cmps
call
retf
ins
les
or
cmp
js
cs
loope
pop
retf
outs
dec
enter
imul
stos
add
mov
movnti
cmps
mov
out
vhaddpd
nop
jns
scas
scas
cmp
enter
jge
jbe
data16
mov
ins
adc
pop
jmp
mov
push
popf
mov
mov
repnz
xchg
inc
or
cmp
mov
mov
(bad)
xor
sti
adc
inc
dec
mov
xchg
sub
jbe
inc
mov
mov
rcr
out
mov
cli
xchg
xchg
sub
dec
scas
aas
pop
cmova
dec
(bad)
sub
in
test
and
cmp
push
gs
enter
out
mov
add
mov
int3
retf
dec
sar
mov
ja
jecxz
push
ds
leave
fcom
hlt
std
hlt
pop
xor
cmp
push
sti
cmp
nop
inc
or
mov
push
cmp
pop
add
popa
mov
lods
xlat
retf
pop
xchg
cmc
jbe
daa
scas
outs
neg
push
mov
pop
cmp
loope
jne
in
aaa
inc
shl
sar
movs
or
addr16
test
dec
dec
pop
popa
or
(bad)
cli
nop
in
sbb
cdq
(bad)
cli
mov
mov
xor
xor
arpl
sub
cmp
mov
cmps
jmp
int
mov
sahf
loopne
fst
jne
mov
adc
retf
mov
push
rol
outs
dec
mov
hlt
jne
pop
in
mov
push
fidiv
hlt
dec
xchg
push
xor
xchg
stos
pusha
inc
jl
mov
or
mov
setne
jle
out
out
lds
adc
mov
push
jmp
idiv
sub
jmp
or
es
mov
xchg
es
aam
in
scas
sub
pop
sbb
inc
in
call
jnp
call
add
or
pop
sbb
xchg
stos
xchg
pushf
xchg
dec
xchg
push
fadd
fs
and
neg
push
js
icebp
pop
ret
jbe
pusha
xor
shl
fadd
jg
das
inc
add
add
or
cli
sub
rcl
xor
jo
xchg
mov
(bad)
push
scas
inc
jb
aas
dec
mov
jle
sub
shr
idiv
jnp
xchg
retf
lods
or
jno
das
cld
and
inc
pop
clc
jnp
adc
mov
out
pop
xchg
push
mov
(bad)
fs
lahf
sub
xor
pop
pop
push
inc
or
cmp
inc
dec
jno
nop
push
adc
idiv
mov
or
cmp
xor
and
out
push
repnz
xor
jne
dec
int3
inc
sahf
aas
mov
pusha
cs
jecxz
pop
(bad)
xlat
mov
or
aas
inc
adc
dec
iret
mov
shr
enter
stos
cmp
adc
inc
loopne
arpl
jns
add
mov
out
scas
dec
sub
jmp
cli
mov
outs
jo
cmp
xchg
mov
cld
sbb
ret
pushf
leave
outs
fsubp
(bad)
mov
cmc
iret
jnp
jl
je
les
xchg
adc
test
and
mov
sbb
test
stos
into
int3
push
push
xchg
ret
loop
mov
sar
hlt
or
(bad)
cmp
rcr
mov
iret
iret
jbe
inc
jecxz
sbb
rcl
iret
add
inc
cmps
dec
js
push
and
adc
add
pop
mov
imul
(bad)
retf
outs
jo
xor
add
or
inc
xchg
jle
pop
iret
ss
mov
mov
mov
adc
je
mov
push
add
push
push
or
sbb
mov
mov
or
shr
add
mov
cdq
and
loopne
xchg
jns
jne
push
cdq
jge
enter
adc
call
cli
mov
shl
and
in
cmp
dec
out
dec
push
hlt
adc
xchg
xchg
stos
fidivr
cmps
ss
jle
int3
inc
pop
mov
loope
adc
out
jge
sub
push
add
push
pop
(bad)
push
mov
cmp
inc
bound
fidivr
std
hlt
pop
les
in
movs
xchg
fiadd
push
scas
inc
pushf
or
or
mov
sbb
pushf
dec
adc
fcom
add
pop
inc
push
rol
add
xchg
jle
xor
mov
sti
movs
stos
dec
and
adc
loop
fcom
(bad)
pop
cmp
sbb
aas
ror
push
jo
ret
pusha
pusha
fcmovb
adc
push
push
(bad)
movs
loope
jl
cmp
outs
lahf
pop
clc
jge
stos
mov
push
and
dec
pop
or
mov
sbb
sub
fst
call
sbb
gs
xchg
inc
mov
cmp
stos
jmp
mov
xchg
push
cmp
xlat
setge
sub
and
cmp
pop
pop
xchg
inc
aaa
retf
out
clc
mov
ins
add
inc
bound
push
jmp
aaa
pop
inc
xchg
dec
mov
mov
shr
das
inc
je
loopne
or
push
inc
push
sub
adc
mov
ja
push
pop
jle
in
mov
sti
pop
rol
pushf
xor
daa
enter
retf
inc
out
push
dec
sbb
mov
xchg
mov
and
retf
cmp
sub
lock
mov
fisttp
rcr
dec
inc
icebp
xchg
ja
fmul
mov
pop
js
fbld
add
cs
lahf
nop
cmc
into
aas
cli
mov
fnsave
push
pop
sbb
mov
popf
lods
add
daa
cs
clc
mov
cmp
test
sub
cmp
jnp
xor
mov
dec
mov
push
xor
cmp
cmps
add
gs
ja
xlat
and
les
adc
cmp
mov
pop
jno
clc
push
jnp
stc
out
ds
popa
jmp
sbb
or
div
lds
mov
xor
popa
push
mov
fucomp
add
push
mov
dec
lods
sbb
jmp
mov
mov
mov
pop
rcl
push
mov
mov
pop
retf
mov
dec
and
shr
mov
sub
push
lahf
mov
jno
mov
jmp
mov
imul
inc
mov
data16
addr16
push
lahf
clc
sub
jg
push
popa
inc
shl
jno
mov
sub
pop
aaa
xchg
inc
sub
(bad)
xor
mov
push
jge
in
jb
mov
add
test
or
jmp
fwait
stos
inc
in
stc
stos
sub
faddp
and
pop
sar
scas
push
ss
int
inc
cwde
aas
sti
xchg
cli
(bad)
test
jbe
lea
cmps
data16
icebp
xchg
retf
push
fld
leave
jno
lock
sub
iret
mov
inc
mov
(bad)
mov
jge
dec
bound
enter
dec
sahf
enter
mov
stc
pop
lods
idiv
fisubr
jmp
int3
fsub
jp
jne
mov
add
je
mov
inc
sub
mov
sar
xor
dec
imul
inc
call
(bad)
cmps
pop
lods
rcr
imul
push
pushf
add
out
ja
lock
xchg
pop
jmp
cmp
xor
pop
les
rcl
shr
arpl
jmp
push
cwde
adc
(bad)
(bad)
jae
xchg
js
push
out
clc
pop
push
sbb
inc
sbb
adc
mov
jle
sub
mov
mov
xchg
pusha
mov
mov
adc
test
lods
jmp
push
sub
ficom
dec
jle
fst
shl
mov
add
sub
jmp
jmp
in
rcr
mov
sbb
ins
data16
add
loope
out
xchg
cmps
sbb
sub
pop
xor
or
adc
mov
pop
cmp
sub
sbb
xchg
test
loopne
mov
data16
adc
adc
push
jmp
pop
dec
shl
xchg
popf
mov
(bad)
ds
mov
adc
push
jns
lods
loope
cwde
pop
jg
imul
int
hlt
shl
add
pop
xor
ins
xor
push
in
adc
cwde
ds
daa
or
ins
in
or
sti
(bad)
sbb
call
push
in
mov
fisttp
cmps
mov
push
add
jnp
retf
scas
cli
imul
sub
cmps
lds
mov
ds
xchg
scas
fstp
mov
sub
imul
ficom
movs
in
lods
xchg
jecxz
and
mov
push
movs
popf
cmc
(bad)
fimul
dec
xchg
shr
(bad)
loopne
push
lahf
jecxz
aam
(bad)
mov
(bad)
stc
ror
test
add
xor
popa
and
mov
push
dec
inc
dec
add
jmp
aam
xchg
dec
mov
xor
scas
idiv
mov
mov
push
retf
sbb
aam
add
jb
jmp
pop
icebp
sub
mov
loopne
fs
mov
rol
cmp
js
int3
sub
imul
cmp
add
shl
mov
push
or
into
cmps
scas
les
stos
js
inc
xchg
mov
fimul
and
lea
imul
popa
and
stos
out
pop
inc
cmc
cwde
cmp
sbb
std
aad
ds
arpl
leave
xchg
wrmsr
lods
or
(bad)
ficom
jo
pop
xor
cs
and
loop
xchg
(bad)
sbb
xchg
mov
jb
loop
leave
in
xor
dec
retf
cli
cmp
adc
add
cdq
loopne
xchg
mov
pop
add
jge
dec
push
mov
and
data16
cmp
scas
lock
fmul
enter
sbb
inc
cmp
or
xchg
mov
jl
sub
push
outs
std
jmp
popa
and
enter
push
dec
add
xchg
mov
(bad)
inc
inc
leave
lahf
xchg
call
add
push
cmp
inc
jecxz
add
stc
fdivr
push
lea
retf
es
xor
dec
out
push
loopne
in
fnstsw
pop
inc
ins
retf
test
jmp
mov
pop
pop
mov
sub
ror
test
cli
pop
fldcw
lock
and
stos
cmps
mov
scas
adc
or
push
aas
and
xor
cmp
push
mov
mov
sbb
out
and
add
imul
sbb
lock
std
fnstsw
mov
dec
mov
pop
jmp
adc
aaa
shl
cld
dec
and
mov
sti
sahf
int3
mov
nop
dec
mov
rol
std
push
aam
pop
retf
std
sbb
cdq
fwait
mov
int
mov
fidivr
mov
cmc
inc
leave
cmps
cmps
pusha
es
mov
dec
inc
sti
pop
popf
adc
popf
sahf
sti
jmp
cmp
jnp
xor
cmps
enter
aas
dec
(bad)
mov
xchg
out
and
mov
in
xor
push
or
mov
mov
cmp
(bad)
jle
clc
mov
cwde
je
sbb
jge
cli
dec
push
pop
push
rcr
jb
loope
push
aas
(bad)
pusha
popf
xchg
out
xor
call
lds
add
ret
pop
test
cmps
xchg
pop
inc
mov
xchg
pop
sub
add
fnstcw
cmps
(bad)
jmp
call
popf
mov
mov
xchg
out
sbb
iret
jb
or
sub
ds
cli
clc
inc
cdq
mov
mov
inc
call
(bad)
ss
jns
add
pop
sbb
pop
stos
fwait
mov
adc
outs
inc
jle
add
mov
and
mov
cmps
out
aad
in
or
mov
in
push
push
or
mov
fsub
sub
jnp
xor
repz
adc
mov
or
jp
inc
dec
or
inc
xchg
in
xchg
int3
push
mov
idiv
loop
leave
mov
js
out
cmps
sub
iret
out
lahf
mov
jg
adc
fwait
aam
push
xor
xor
inc
pop
mov
xor
mov
mov
shr
scas
or
mov
pushf
ret
add
mov
stos
les
scas
pusha
je
dec
push
sbb
rol
lods
add
add
repnz
mov
inc
lahf
or
out
sar
into
pop
dec
jo
retf
fwait
mov
ret
push
cmp
lods
int
cmp
cmp
cmp
test
xchg
and
pop
dec
jne
pusha
mov
sub
mov
loope
mov
sar
inc
rcr
dec
add
mov
hlt
xchg
push
shr
xchg
adc
sbb
mov
jg
loop
mov
jno
retf
test
push
cmps
shr
jg
jo
stos
mov
ret
arpl
jp
call
push
inc
mov
and
fxch
outs
sbb
inc
neg
out
add
sbb
inc
add
sub
(bad)
aas
cmp
sbb
(bad)
and
sub
aad
movs
sub
sbb
jge
inc
out
sbb
sti
xchg
sbb
(bad)
sbb
pop
jne
or
push
or
jmp
jmp
lods
nop
fmul
mov
xchg
pop
mov
inc
sar
popf
jno
nop
mov
cdq
imul
jnp
dec
int
add
mov
and
pop
adc
fild
sub
dec
mov
cmps
test
out
add
mov
mov
imul
push
cwde
jle
hlt
loopne
(bad)
fs
cli
imul
sbb
mov
xchg
pop
dec
in
mov
jo
into
jb
add
shl
cwde
pop
movs
inc
inc
sub
mov
adc
mov
or
cmp
mov
cmps
ins
jmp
pop
dec
add
sub
mov
shl
dec
mov
jmp
in
test
inc
pop
call
cmps
or
(bad)
imul
outs
xor
(bad)
and
xor
dec
push
test
scas
test
fs
je
or
pop
lods
dec
adc
fs
lea
lods
xchg
inc
ficom
push
xor
and
pop
pop
int
pusha
sar
test
pop
into
(bad)
mov
push
sub
bound
xor
retf
cmp
dec
iret
push
sar
xchg
inc
or
cmps
les
xor
stos
sti
inc
pop
ficomp
loopne
xor
cmp
pop
lea
mov
out
addr16
test
sub
cmp
popa
mov
stos
xchg
and
mov
add
arpl
sub
lods
dec
jns
mov
fisttp
mov
push
jbe
(bad)
push
mov
add
pop
adc
bound
dec
icebp
xchg
rcr
fadd
arpl
icebp
xlat
inc
in
cmp
sub
lods
mov
jo
push
retf
sub
fld
test
hlt
and
inc
pop
pop
inc
arpl
sub
xor
imul
int
jmp
sub
dec
test
imul
std
fidiv
sbb
aad
push
add
fsubr
mov
mov
mov
xchg
sub
(bad)
je
stos
pop
adc
mov
je
mov
je
es
rcr
out
cmp
jmp
ret
in
add
arpl
das
sahf
fdiv
add
ja
aaa
int3
sbb
mov
pop
jmp
pop
repz
aas
mov
inc
sbb
loope
rcl
pop
dec
sti
mov
and
fwait
sbb
mov
xlat
(bad)
fisubr
mov
inc
test
push
pop
(bad)
fsub
push
les
hlt
and
mov
imul
add
xor
retf
xor
sbb
xchg
nop
inc
adc
das
adc
adc
(bad)
mov
push
lock
ret
into
pushf
test
scas
sub
push
int3
push
repnz
adc
fst
add
mov
loop
xchg
fst
inc
repnz
es
(bad)
in
sub
enter
adc
retf
mov
dec
ret
cmp
das
jl
xor
push
(bad)
xchg
cwde
xchg
push
push
sub
fwait
rcl
cli
or
push
leave
popa
pop
shl
sbb
mov
adc
pop
xor
xchg
jp
dec
leave
sbb
inc
ret
popf
fs
aaa
xchg
xor
scas
pop
pop
jb
clc
or
in
or
mov
fmul
vrcpps
add
lds
jmp
inc
add
arpl
pop
add
cmp
pushf
mov
lds
pop
mov
pop
push
adc
popa
cmc
sbb
addr16
ficom
cmp
ror
xchg
xor
jle
(bad)
sti
aad
mov
sub
jle
data16
out
fild
sbb
push
lods
pop
sbb
retf
add
mov
data16
rol
ds
and
sub
pop
sub
and
add
rol
inc
xchg
test
ss
and
jecxz
inc
push
out
test
shl
hlt
mov
or
add
dec
ftst
leave
int
int3
dec
mov
sub
dec
pop
fcom
shl
icebp
push
sti
retf
les
sti
aas
arpl
mov
xlat
mov
fist
jo
in
mov
inc
cmps
shl
movs
mov
push
retf
movs
or
jo
fidivr
inc
and
mov
push
xor
sbb
ret
or
mov
or
aaa
lods
test
jge
jle
stos
cmp
xchg
js
int3
ds
jnp
data16
loopne
push
in
inc
mov
call
(bad)
push
dec
aas
inc
daa
call
fs
and
or
xchg
leave
lds
pusha
(bad)
jp
std
call
lock
mov
jecxz
dec
push
mov
sub
into
jmp
ror
ds
(bad)
cmps
jecxz
mov
mov
push
popa
add
rol
lahf
(bad)
dec
jbe
jno
mov
mov
jo
jo
mov
jecxz
xchg
add
cmc
xchg
cld
inc
lods
lahf
sub
loopne
pop
out
int3
test
push
dec
add
stos
inc
xchg
jmp
sbb
xchg
pop
xchg
pop
nop
lods
sbb
and
sti
popf
xchg
cmp
sahf
test
jge
dec
inc
inc
xchg
mov
xor
sub
aaa
xor
int
jecxz
mov
aad
aaa
aas
pop
loop
jb
xchg
iret
in
push
jmp
idiv
ja
mov
cmp
ins
fwait
dec
retf
in
push
sub
sub
mov
add
xchg
aam
(bad)
inc
and
imul
push
or
mov
in
je
pop
mov
daa
adc
or
cli
inc
out
pop
scas
ss
cdq
shr
cmp
add
movs
mov
adc
sbb
imul
cdq
push
jle
mov
adc
cmp
(bad)
in
fld
sbb
jmp
repnz
sub
jle
rol
pusha
call
push
cdq
cmp
mov
in
pop
push
call
mov
(bad)
lahf
xchg
in
ja
mov
push
or
cmp
rol
retf
jnp
ins
(bad)
pusha
and
sar
pop
push
xacquire
inc
int
popf
popf
push
xchg
aaa
test
mov
loope
stc
out
mov
jmp
jmp
add
sub
adc
push
dec
sbb
gs
xlat
lock
mov
ja
pushf
inc
cld
push
pop
xchg
mov
call
jmp
sti
or
push
sbb
mov
fs
or
aad
fwait
outs
cmps
sbb
adc
sbb
mov
jne
push
ret
push
mov
leave
xor
(bad)
popa
xchg
mov
stos
shr
ret
dec
xor
cwde
mov
mov
jmp
sub
sbb
mov
jmp
bound
mov
jmp
fbld
xor
ins
mov
adc
mov
scas
aaa
(bad)
loope
or
adc
ror
and
dec
ficomp
scas
jae
push
mov
inc
jbe
push
adc
inc
mov
mov
push
xor
ins
push
inc
cmps
int
(bad)
outs
clc
pop
std
lods
and
add
xchg
test
xchg
sbb
fnstcw
mov
rcl
dec
xchg
iret
adc
jle
(bad)
lock
or
inc
push
js
xchg
outs
das
fsubrp
mov
pop
ret
jne
out
pop
mov
mov
stos
mov
push
dec
add
movs
fs
push
dec
ja
fwait
or
das
ja
pop
add
mov
es
test
dec
inc
cmp
out
lds
sbb
push
adc
inc
sbb
ins
scas
or
pop
vunpcklps
xchg
rol
pop
mov
(bad)
dec
inc
sub
outs
iret
in
inc
jmp
or
xor
call
xor
sub
lea
lock
sbb
add
pop
and
or
xchg
xchg
lods
loopne
mov
into
jbe
pop
fistp
sbb
and
xchg
cwde
xor
imul
sub
mov
pop
mov
int3
outs
add
sbb
pop
cdq
and
stos
push
or
aaa
test
icebp
and
sbb
mov
pop
mov
(bad)
cwde
push
call
adc
mov
cdq
test
pop
cmp
push
add
ds
push
int3
jp
inc
add
out
jl
adc
(bad)
bound
retf
dec
in
out
cmp
(bad)
adc
push
jbe
es
mov
mov
xor
sti
in
adc
mov
add
bound
(bad)
loopne
dec
cmc
cmp
scas
lods
and
into
push
lods
push
dec
push
xor
xchg
iret
je
addr16
inc
xchg
loop
and
pop
sti
sbb
popa
lods
and
je
gs
sahf
test
ret
scas
jp
cli
fs
out
sub
popa
pop
in
pop
mov
in
(bad)
cmp
ret
jae
icebp
into
ror
pop
test
sub
push
pushf
loope
out
jmp
sub
in
inc
adc
jo
or
popa
ins
xor
mov
test
imul
imul
inc
sbb
enter
dec
dec
pop
dec
loopne
mov
sub
jns
and
std
and
push
xchg
fs
cmp
retf
ficom
xchg
sub
jae
fld
mov
inc
loopne
out
(bad)
push
fwait
xor
je
sbb
retf
xchg
pop
inc
add
lds
sbb
xchg
in
movs
mov
out
jle
adc
repnz
cmp
and
mov
or
xchg
mov
jmp
jp
fmul
hlt
xor
xor
(bad)
jb
mov
add
inc
adc
scas
outs
fdivrp
popa
lods
jne
stos
lds
test
sub
arpl
outs
(bad)
adc
xor
adc
cmps
repz
inc
iret
sar
cmp
in
jne
retf
test
in
lahf
mov
push
or
sub
mov
sub
iret
cmp
dec
sahf
fnstenv
arpl
nop
in
jmp
mov
sub
push
push
xor
leave
xchg
inc
lods
fcom
cmp
std
add
nop
cmp
jmp
or
cmp
aaa
dec
imul
in
mov
js
std
(bad)
fistp
push
mul
xlat
cmp
test
jne
cs
sub
aad
loopne
xchg
sbb
mov
fidivr
mov
mov
push
lds
fwait
or
adc
ret
call
stos
pop
daa
(bad)
aad
in
push
popf
jmp
inc
stos
mov
popf
mov
ret
jno
in
xor
or
xor
xchg
test
(bad)
dec
mov
inc
neg
xchg
and
out
ds
and
cwde
push
(bad)
(bad)
pusha
jne
mov
cdq
ja
mov
xchg
fs
sub
shl
sbb
leave
stos
aas
mov
dec
and
jne
and
loopne
or
ret
pop
int
or
iret
mov
sbb
daa
cmps
pushf
sbb
mov
mov
nop
fcomip
or
sub
add
inc
mov
popa
and
movs
mov
inc
xor
sub
rcl
adc
cmp
mov
push
scas
fidiv
push
and
sub
arpl
xor
sahf
rcr
sub
test
mov
mov
fwait
and
or
mov
adc
mov
push
stos
xor
loopne
cwde
lods
out
mov
lods
iret
jno
mov
fdiv
xchg
mov
bound
adc
gs
adc
mov
into
push
addr16
push
xchg
cwde
jo
shl
mov
pop
ficom
mov
adc
push
pop
ret
ficomp
lods
int3
dec
loopne
(bad)
retf
imul
ffreep
inc
add
ss
xchg
mov
xor
xchg
xchg
jb
mov
mov
call
(bad)
std
pmulhuw
sbb
mov
(bad)
hlt
cmp
cmp
add
adc
loopne
sub
arpl
test
push
daa
dec
xchg
out
adc
sub
jns
(bad)
shr
xor
adc
sbb
lock
add
aam
mov
cmp
shl
add
adc
jno
jg
fnstsw
shl
inc
and
dec
retf
stc
sub
sbb
dec
push
mov
push
fist
jb
cs
xchg
jne
scas
stc
test
cmps
sbb
push
mov
sub
or
adc
ds
push
pop
aad
mov
push
add
cmps
(bad)
std
stos
inc
mov
out
outs
cli
inc
das
jno
add
sub
mov
cmp
inc
mov
mov
sub
mov
xor
in
sbb
mov
aam
pop
call
dec
pop
sbb
mov
ficomp
xchg
mov
add
xchg
push
test
test
gs
fdivr
js
dec
dec
dec
jmp
cmp
aad
scas
jnp
sbb
cmp
sbb
dec
xchg
mov
dec
cmps
leave
add
jne
push
adc
sti
push
popa
pop
mov
sub
aaa
or
sahf
and
xchg
gs
call
pop
bound
xchg
cdq
outs
lahf
lahf
shl
aam
push
inc
and
jge
push
pop
adc
out
pushf
movs
xchg
shr
mov
cmps
push
lods
cmp
or
adc
push
dec
into
imul
pop
and
or
ret
out
xchg
xor
sbb
xlat
enter
xchg
repnz
je
cmp
stos
aad
outs
cs
sbb
stc
std
mov
pop
adc
jmp
fdiv
push
dec
fmul
es
repz
sub
mov
sbb
dec
in
sbb
cmp
repz
lock
outs
and
rcl
sbb
arpl
rol
retf
fldcw
lock
out
and
jne
stos
inc
out
call
lahf
(bad)
dec
xchg
enter
and
pop
popa
pushf
mov
hlt
cmp
jle
ret
mov
fimul
aas
retf
sbb
dec
pop
sbb
or
into
das
addr16
in
cmc
jp
nop
pop
les
or
jecxz
or
push
mov
push
icebp
xchg
cwde
cs
sbb
push
or
scas
pop
or
adc
int3
push
loopne
das
in
int
xor
ds
mov
loope
rcr
pop
xchg
aad
neg
hlt
dec
dec
push
xchg
mov
stc
mov
not
sbb
or
jg
les
fistp
xchg
sub
seta
fcomp
ffree
pushf
mov
adc
pop
xchg
int3
ret
cmc
mov
jbe
out
xor
and
lods
mov
stos
mov
repnz
pop
cmp
and
lahf
push
add
(bad)
retf
loope
inc
sar
loop
sub
test
call
and
xor
push
inc
fisub
fwait
lds
add
pop
lods
mov
push
and
ins
fiadd
dec
pop
movs
sbb
push
scas
loop
aaa
out
xchg
(bad)
sbb
in
cmp
and
pop
or
cmp
or
cli
fstp
cli
fs
call
push
mov
scas
lock
adc
jb
in
mov
mov
cwde
jbe
test
inc
test
repz
add
cli
mov
shr
cmp
xor
adc
popa
fiadd
jns
(bad)
push
cmp
daa
sbb
loop
addr16
stc
lea
imul
and
daa
shl
es
pusha
jmp
xor
pop
sub
imul
mov
icebp
cwde
js
mov
and
and
test
xchg
jns
cmp
xchg
popf
push
or
stos
or
push
pop
lock
(bad)
sub
fsub
pushf
sub
xor
in
or
in
movs
in
add
int
(bad)
pop
imul
xor
loopne
enter
out
pop
mov
inc
sti
shl
out
mov
dec
ds
in
jg
gs
stc
cmc
pop
pop
aaa
and
mov
lods
xlat
cmp
test
cld
mov
add
inc
das
jg
lahf
mov
or
in
rcl
ja
out
adc
data16
sbb
pop
adc
inc
sbb
jg
test
out
iret
mov
mov
push
std
pop
fcom
inc
and
fisub
(bad)
adc
jmp
push
push
and
inc
test
imul
mov
js
jbe
sbb
jb
leave
xor
outs
add
cmp
mov
in
cmp
mov
mov
(bad)
xor
ret
neg
(bad)
fnstcw
pusha
loop
sub
shl
inc
pop
mov
ins
es
jmp
jno
adc
dec
stos
push
in
pop
dec
fsub
sub
sbb
enter
ins
ins
and
shr
or
inc
pop
(bad)
jmp
push
jle
rol
fxtract
dec
sbb
daa
loopne
es
sbb
gs
inc
out
pop
push
jbe
fstp
cmc
aam
mov
les
jbe
inc
sahf
fisub
in
hlt
jne
addr16
leave
or
xchg
mov
fdiv
je
fcmovne
mov
adc
and
adc
(bad)
cmp
mov
push
mov
ds
pop
mov
cmp
aam
enter
lock
fwait
inc
addr16
dec
cmp
pop
sub
pushf
cmp
in
mov
adc
scas
push
test
or
cmp
test
outs
stc
das
and
jecxz
test
(bad)
(bad)
(bad)
mov
mov
movs
jno
sub
lods
retf
movs
mov
movs
cmp
push
push
leave
lock
mov
pop
popa
loop
cmp
inc
jecxz
dec
aam
in
(bad)
adc
xlat
popf
test
imul
test
(bad)
cli
(bad)
scas
aaa
add
movs
cdq
mov
mov
cdq
(bad)
lock
push
and
or
xlat
ins
call
and
dec
ins
add
push
hlt
stos
push
movs
out
fstp
leave
pushf
dec
xchg
adc
cmc
mov
dec
js
outs
aam
push
sbb
xchg
into
jbe
xor
cld
cmps
call
(bad)
push
pushf
clc
nop
hlt
pop
icebp
push
cwde
mov
mov
mov
cmps
and
mov
rcr
sub
jmp
rcl
and
repnz
xchg
xchg
fld
mov
mov
ja
pop
sbb
pop
cmp
out
cmc
add
jb
mov
jl
js
stos
iret
in
pop
xchg
ficom
or
pop
mov
adc
mov
sub
jmp
arpl
push
jl
xchg
les
and
add
cmp
jnp
dec
rcl
pop
jb
mov
mov
aad
fsubr
cmp
gs
ds
pop
xchg
dec
sub
lock
(bad)
dec
sbb
xchg
push
idiv
rol
xor
mov
xchg
stc
xor
push
ror
mov
mov
dec
pop
inc
add
mov
pop
add
test
push
fdivr
dec
shr
repnz
lds
jo
sub
nop
fldcw
jno
in
or
enter
out
jo
xor
pop
js
xor
push
cwde
cmp
pop
repnz
pop
inc
push
imul
call
ds
mov
cmp
mov
movs
pop
mov
mov
pop
jno
xchg
int3
xchg
fwait
pop
cli
fcom
and
xor
cmp
fidiv
jl
into
in
xchg
add
xchg
jg
dec
xchg
pop
mov
fisttp
xor
add
int
call
out
clc
pop
sub
sbb
gs
sbb
hlt
pop
test
or
int
push
mov
cld
cmp
mov
cmp
nop
adc
dec
or
retf
push
xor
inc
loope
cmp
push
inc
cmps
in
stc
retf
or
je
fidivr
das
jbe
fs
sub
shl
or
cmps
pop
mov
xor
call
push
test
mov
dec
pop
jmp
rol
mov
jns
mov
push
imul
sub
mov
and
jecxz
sbb
cs
jo
inc
daa
and
cmp
stc
jne
cmp
cmp
cmp
cmps
js
sbb
inc
mov
(bad)
stc
imul
(bad)
(bad)
test
jb
daa
mov
mov
idiv
sub
cmp
outs
pop
jmp
imul
(bad)
jge
lds
imul
and
lahf
mov
je
out
push
loope
push
rcr
arpl
jmp
cli
sub
enter
mov
push
loope
outs
cld
push
stos
xchg
dec
cmp
lock
dec
or
outs
retf
sbb
ds
xor
push
xchg
leave
sbb
mov
cld
stos
fsub
gs
or
xor
mov
dec
pop
and
jp
in
mov
inc
or
movs
push
adc
rol
sub
cld
pop
fst
mov
pusha
jo
ins
std
dec
jmp
mov
popa
inc
and
shl
fst
inc
inc
pusha
sub
mul
and
clts
retf
shr
pop
ret
ror
fdecstp
xchg
shl
imul
stc
ds
xchg
ins
iret
clc
imul
out
(bad)
cmc
push
das
xchg
lods
clc
pop
inc
repz
movs
pop
ss
pop
xchg
in
loop
lea
cmp
sbb
(bad)
xlat
shl
rcl
das
stos
or
mov
in
clc
in
cwde
ss
jno
jle
(bad)
pop
jne
xchg
jle
xchg
ret
add
inc
inc
mov
sbb
imul
mov
jp
jno
adc
jnp
nop
adc
test
test
mov
dec
fisubr
add
fsub
mov
mov
movs
add
xor
jo
pop
jle
sub
fisub
xchg
int3
jne
mov
dec
(bad)
(bad)
pop
(bad)
clc
sbb
jge
cmps
not
mov
adc
jbe
mov
inc
hlt
and
push
mov
in
sub
inc
out
jg
ret
xchg
mov
mov
repnz
out
ja
imul
arpl
mov
test
or
pushf
shl
das
add
ss
adc
imul
bound
outs
idiv
call
or
jmp
inc
push
push
mov
cmc
pusha
pusha
xchg
and
dec
les
or
sbb
add
repz
rcr
test
mov
scas
outs
xchg
inc
(bad)
iret
xchg
retf
imul
push
enter
xor
push
hlt
enter
out
pop
or
add
out
jecxz
sbb
push
ret
test
sbb
push
pushf
jbe
push
pop
xlat
push
push
sbb
mov
inc
adc
inc
fiadd
retf
mov
repnz
adc
(bad)
cmc
jge
sahf
and
das
pop
mov
(bad)
xchg
mov
cvttps2pi
xchg
scas
fld
mov
test
fist
out
push
loopne
mov
dec
not
in
lahf
sub
stos
sub
xchg
xchg
jle
pop
mov
sbb
inc
shl
sub
pushf
or
and
jno
retf
mov
add
scas
push
pop
pop
fsub
sbb
imul
mov
mov
jae
shr
pop
mov
dec
sar
and
inc
lea
inc
hlt
movs
jb
dec
out
into
add
mov
add
jge
aad
fbstp
imul
lock
add
inc
mov
mov
das
lock
std
in
push
cmp
xor
add
loopne
bswap
sub
or
je
sbb
sbb
fnstsw
test
ja
adc
(bad)
pop
in
mov
add
add
(bad)
cmp
push
cmp
(bad)
xor
jne
cdq
mov
dec
push
outs
or
loope
leave
and
push
inc
mov
xchg
push
push
ds
stc
xor
add
out
xlat
jmp
je
xchg
lahf
int3
pop
(bad)
jg
push
(bad)
inc
outs
outs
fadd
pop
xor
rol
aad
jne
cmp
mov
sub
mov
jnp
(bad)
std
(bad)
mov
shr
push
mov
in
xchg
mov
cmp
and
sub
dec
scas
test
mov
test
mov
popf
sub
imul
test
icebp
scas
bound
imul
add
fwait
in
cmp
or
add
dec
dec
jle
inc
xchg
repnz
stos
dec
jae
cmp
sub
iret
into
hlt
(bad)
push
mov
sub
fist
lods
movs
dec
cmps
out
daa
mov
add
pop
(bad)
cwde
add
xor
xchg
cmc
jl
icebp
cmc
inc
fimul
mov
fisubr
lahf
jl
out
mov
jle
and
clc
push
mov
xor
mov
gs
in
(bad)
xchg
int3
and
jg
test
sub
call
aad
push
mov
mov
mov
div
int3
mov
cmp
xor
jp
sub
scas
dec
push
das
out
popf
fisttp
aad
clc
push
call
std
push
sbb
dec
sbb
push
mov
lods
cwde
loope
xchg
retf
retf
sbb
pop
pop
retf
add
mov
jo
push
ins
and
in
mov
mov
daa
jns
or
sbb
or
lea
sbb
jns
or
in
imul
std
sti
ret
sbb
mov
popa
movs
daa
or
cmp
in
mov
ret
and
xor
cdq
in
scas
push
xor
lahf
je
lds
rcl
mov
push
aas
mov
icebp
rcl
(bad)
ror
in
iret
push
pop
sub
bound
scas
sbb
cmp
adc
or
pop
push
mov
test
(bad)
jo
inc
clc
aam
test
(bad)
in
xchg
dec
jbe
out
sti
or
sub
test
sub
clc
cmc
or
rol
jb
out
cli
out
sub
mov
xchg
mov
mov
xor
pop
mov
jbe
mov
cmp
mov
retf
mul
xchg
dec
shl
out
adc
xchg
and
xor
jno
fcom
test
call
arpl
xchg
mov
push
inc
sub
pop
pop
pushf
jae
shl
xor
int
push
aad
mov
mov
push
and
push
dec
mov
bound
js
rcl
hlt
lock
outs
jnp
adc
cmps
cmp
cmp
bnd
cli
sbb
mov
pop
jmp
push
hlt
mov
pop
imul
mov
cwde
jmp
pop
mov
in
icebp
stc
lods
push
pop
and
fdivr
dec
das
adc
xor
push
inc
jmp
repnz
ins
test
cld
pop
cmp
daa
addr16
pop
hlt
add
fwait
adc
(bad)
sbb
out
outs
cdq
jp
cmp
aad
es
frstor
clc
add
mov
fs
movs
mov
jae
pop
pop
rol
push
sbb
push
add
(bad)
dec
jb
clc
xchg
cmc
js
dec
sub
leave
cmc
stos
mov
cdq
xchg
or
int
cmp
sbb
pop
clc
(bad)
pop
out
adc
sbb
popa
cs
rcr
push
jne
mov
test
in
div
iret
retf
mov
pop
and
adc
stc
loop
in
test
inc
in
mov
inc
fwait
std
inc
dec
aaa
or
repz
dec
push
dec
addr16
mov
jae
cwde
mov
dec
cwde
push
sar
xor
fstp
mov
push
inc
mov
inc
push
dec
dec
mov
dec
std
sbb
fld
sar
pop
jge
add
pop
sahf
xchg
dec
fwait
stos
and
repz
sbb
xor
or
cmp
retf
outs
scas
fucomip
sbb
sbb
add
pop
(bad)
mov
shl
leave
xchg
repnz
int
dec
xchg
mov
cmp
jnp
xor
cmps
fsub
stos
mov
div
xor
outs
dec
push
mov
sbb
mov
into
sbb
fisttp
pop
leave
out
repz
or
movs
jmp
cmp
mov
sub
outs
(bad)
jne
aam
fwait
(bad)
cmps
mov
mov
lods
aam
or
dec
(bad)
rol
push
in
adc
outs
out
mov
call
aas
cmp
cwde
outs
sbb
aaa
call
call
or
pusha
cdq
cmc
add
sub
sbb
mov
sar
shr
and
sub
mov
mov
jg
add
retf
xor
add
mov
scas
data16
sub
pop
enter
cdq
leave
lea
sub
arpl
cld
cmc
xchg
test
inc
sbb
repz
jbe
push
adc
jmp
(bad)
inc
jnp
cld
push
mov
sahf
sub
push
xor
jno
fucom
add
lods
pop
call
es
and
ret
sbb
test
inc
jb
ficom
and
iret
mov
push
sub
loope
(bad)
xchg
xchg
jle
fucomi
fcomip
test
jmp
adc
out
cld
std
jge
xchg
mov
adc
shr
imul
mov
movs
push
fcom
xor
test
ss
add
aas
rcr
adc
mov
movs
or
cmp
ds
xor
sub
call
pop
sbb
clc
push
pop
xchg
test
push
out
push
jmp
inc
xchg
push
sar
and
push
mov
mov
hlt
mov
jl
sbb
dec
fwait
push
dec
dec
jbe
pop
adc
jecxz
into
das
xchg
xchg
jnp
cs
fisubr
jge
enter
adc
int3
sub
ja
xchg
jp
adc
call
sub
xchg
rol
or
sti
mov
dec
pop
mov
data16
ss
adc
rcl
sahf
pop
loope
jmp
mov
pop
in
sub
mov
hlt
dec
or
or
xchg
jp
das
addr16
call
xor
enter
jecxz
pop
loop
adc
enter
out
inc
mov
fmul
mov
sbb
push
xchg
fsubrp
sbb
imul
call
xchg
fsub
push
lea
mov
mov
sub
ficom
ret
mov
fiadd
int3
scas
js
xadd
push
mov
mov
aaa
inc
push
popa
fistp
cmp
mov
(bad)
les
fist
shl
or
inc
scas
push
out
push
(bad)
sub
add
jecxz
stos
sub
call
mov
sbb
pop
add
push
mov
pop
inc
out
dec
je
pop
dec
mov
mov
jae
cwde
cmp
nop
xchg
movs
ret
and
sbb
cmps
sub
pop
(bad)
jmp
int
dec
adc
int3
(bad)
daa
adc
test
add
pushf
sbb
adc
neg
push
loope
dec
inc
push
and
scas
pop
fwait
xchg
scas
cmp
ret
push
out
dec
and
in
loope
(bad)
fucomi
push
push
cs
and
call
sti
push
push
loop
and
test
jecxz
sub
pop
or
mov
ret
and
sub
and
rcl
mov
out
retf
mov
mov
(bad)
jne
or
lods
cmc
stc
sahf
shr
enter
cld
ret
push
int
inc
xchg
add
mov
mov
push
xchg
xchg
jmp
xor
pop
(bad)
cmp
aad
push
sub
repnz
out
ficom
cmps
mul
adc
clc
add
sub
xchg
call
fs
test
(bad)
aad
sbb
xor
jae
push
push
adc
cmps
sub
daa
adc
fstp
sbb
mov
cmp
mov
test
mov
sbb
push
cmp
push
xor
mul
aam
fwait
ja
add
fadd
xchg
cdq
push
cli
pop
and
add
pop
jbe
inc
mov
sbb
add
sti
jecxz
pop
lahf
loope
xor
fs
ror
push
xchg
fistp
sub
mov
repnz
std
(bad)
mov
pop
push
dec
repnz
xor
movs
jp
push
push
or
sbb
(bad)
shl
fdivr
(bad)
in
int
aaa
jb
popf
cmp
cmps
inc
ret
adc
ret
repnz
add
mov
ror
setns
xchg
push
mov
fdiv
xor
fcmovnu
jne
(bad)
jge
mov
stos
push
cmp
inc
xchg
adc
push
and
pop
pop
fsubr
pop
mov
inc
in
cmp
xchg
and
add
jl
xchg
stos
xor
aad
pop
cmps
cmp
mov
rol
(bad)
pushf
sar
out
stos
mov
ins
fdiv
xlat
(bad)
ficom
pop
pop
mov
xchg
cmp
cmovb
jne
jb
inc
das
mov
shr
and
jl
jns
imul
and
jmp
loopne
mov
pop
mov
repnz
mov
int
stc
sbb
sbb
das
cld
rcl
test
jg
add
adc
rcl
cmp
shl
mov
lds
xchg
dec
adc
pop
and
xor
xlat
pushf
jmp
out
int
push
imul
hlt
dec
test
leave
xor
sbb
mov
dec
cmp
add
test
push
scas
sahf
or
fwait
inc
push
(bad)
cmp
mov
dec
or
addr16
push
inc
enter
imul
xor
push
pop
repz
xchg
cs
jle
xchg
call
or
pop
out
pop
sti
popf
push
sbb
xchg
aas
outs
and
dec
call
jmp
cwde
or
fiadd
inc
out
pop
or
sub
xor
cli
adc
out
ins
add
movs
mov
scas
xchg
inc
push
and
push
sub
and
xor
in
sbb
stc
inc
retf
fdiv
xchg
sahf
movs
jne
fcomp
fmul
or
mov
sti
mov
sbb
push
test
xor
repz
xchg
and
mov
popa
pop
in
dec
push
dec
inc
(bad)
sbb
test
fisttp
dec
push
pop
popa
icebp
mov
sar
jp
inc
fcomp
pusha
sub
xchg
movs
mov
sbb
sub
mov
xor
pop
retf
pop
jg
jmp
into
pushf
out
icebp
push
aam
nop
push
mov
push
mov
adc
jnp
push
enter
mov
pop
daa
sub
sbb
fisttp
mov
(bad)
ds
cld
lds
and
in
jns
hlt
mov
mov
ror
sbb
lods
mov
test
sahf
mov
loopne
xchg
dec
xchg
fistp
data16
es
rcl
pop
leave
or
scas
mov
out
mov
out
int
ret
sub
neg
inc
mov
ins
call
out
add
inc
sub
(bad)
lods
push
xor
std
cmp
ja
cmc
ja
adc
clc
adc
sub
jne
inc
adc
fmul
mov
ja
sbb
in
add
movs
cmc
add
test
jmp
popa
ret
call
mov
mov
popf
mov
das
pop
cmps
pop
in
ficom
shl
xchg
test
retf
inc
add
add
enter
fldenv
inc
jmp
dec
test
ja
ret
jmp
adc
add
ins
sub
push
pusha
add
cld
adc
out
jnp
or
sti
mov
dec
hlt
(bad)
cmp
inc
push
icebp
jmp
xlat
xchg
add
rcr
lea
jbe
scas
enter
inc
wbinvd
xchg
js
jecxz
aad
pusha
scas
push
xchg
ror
rcr
push
mov
repnz
nop
ficom
adc
dec
jl
pop
fs
mov
xor
neg
pop
fisub
add
out
jmp
adc
sub
int
push
pusha
not
sub
int3
lahf
jo
cmc
push
xor
enter
les
adc
adc
mov
and
das
jl
aad
(bad)
data16
fist
push
cmp
sbb
cwde
xor
leave
pop
adc
imul
lds
sub
sub
mov
and
lea
xor
add
mov
cwde
mov
retf
inc
xchg
pop
or
mov
lods
scas
push
sbb
imul
push
mov
scas
leave
add
cwde
in
xor
popa
dec
sub
retf
mov
stc
or
dec
les
mov
mov
cmc
out
inc
frstor
mov
mov
push
sub
mov
cmp
neg
fdiv
retf
dec
adc
out
push
mov
jp
scas
jmp
lahf
push
iret
dec
jmp
arpl
or
fist
pop
and
mov
cmps
mov
dec
xchg
sub
das
lds
ja
jmp
into
call
ins
pop
loope
in
imul
xchg
fdivrp
hlt
pop
dec
xchg
sar
aam
(bad)
fisub
out
or
mov
inc
xchg
scas
pop
(bad)
scas
test
jb
out
dec
jp
xor
cdq
outs
popf
inc
js
daa
out
mov
mov
jns
mov
ins
lahf
inc
es
int3
lods
popf
push
(bad)
push
hlt
(bad)
adc
cld
mov
test
push
pop
mov
push
test
lock
and
stos
push
mov
sbb
mov
int3
lods
jl
aas
outs
pop
add
out
and
pop
push
rcl
sbb
cmp
and
mov
pop
inc
rcl
sub
call
test
dec
fcmove
mov
sar
je
push
dec
xor
test
int3
jno
fisttp
xor
or
xchg
jbe
push
bound
push
inc
test
(bad)
pop
lods
mov
mov
and
adc
xor
xchg
jp
movs
mov
and
xor
aad
dec
rcl
dec
cmp
icebp
lods
jo
xchg
mov
fbstp
mulss
nop
into
mov
call
mov
push
add
aaa
or
je
add
xchg
fs
ds
mov
push
(bad)
adc
adc
popf
loop
mov
pushf
inc
(bad)
frstor
pop
push
fsub
pop
push
jle
mov
popf
sbb
stc
ins
adc
ffree
lds
fild
add
mov
cld
rcr
xor
xor
jecxz
push
shl
sub
in
dec
fldcw
repz
fild
push
push
or
mov
inc
lock
push
inc
loopne
call
lds
jae
push
dec
xchg
mov
mov
sti
ror
jmp
retf
push
pop
inc
sub
push
mov
mov
mov
in
sub
shl
jbe
aam
mov
outs
adc
out
mov
cmps
mov
push
lods
sbb
mov
gs
adc
pop
mov
mov
jae
nop
sbb
or
dec
push
fsubr
rcl
mov
sbb
adc
cli
(bad)
pop
adc
mov
fld
lock
adc
lods
fsubr
aad
fs
dec
cmp
xor
pop
lods
jb
outs
push
add
mov
xor
ror
(bad)
div
fimul
aaa
or
mov
sbb
cmp
iret
addr16
or
pop
push
fsubr
loop
paddb
in
dec
rcr
cmp
adc
jmp
xchg
pop
loopne
aad
dec
pop
ds
gs
sub
adc
and
pop
dec
leave
fisttp
fdecstp
test
cmp
fdivr
mov
sbb
icebp
sbb
inc
lahf
mov
mov
jne
aad
outs
jno
fmul
ins
dec
shr
jg
sub
in
ins
dec
jo
repnz
and
das
in
mov
fs
js
push
into
mov
xchg
mov
(bad)
mov
add
lds
adc
(bad)
jns
mov
cli
and
xor
movs
mov
pop
or
add
mov
retfw
ret
(bad)
movs
push
or
iret
xchg
add
dec
sbb
and
fnstcw
in
in
push
loopne
sub
cmp
jbe
sub
push
adc
inc
lock
dec
sbb
dec
mov
push
imul
cmp
jnp
loopne
adc
stc
mov
out
mov
mov
shr
adc
out
ins
xchg
pop
fnstsw
mov
jecxz
fwait
and
dec
test
mov
mov
cmp
adc
and
imul
cmovae
mov
mov
adc
cmp
mov
xchg
icebp
or
aam
loop
lods
pop
ret
dec
fild
daa
enter
ins
cmp
jae
les
push
jecxz
pop
nop
inc
mov
push
imul
inc
push
push
aad
jae
push
lds
neg
adc
aam
out
(bad)
sub
sbb
xor
or
xchg
rol
push
lahf
stc
mov
xor
and
and
jle
sbb
inc
push
out
cs
clc
rol
shl
mov
sbb
cmps
test
inc
sbb
sbb
in
xchg
fdivr
add
fisttp
imul
inc
inc
nop
jno
jb
movs
xor
inc
push
adc
movs
stos
sub
cmp
jg
or
mov
das
addr16
push
loop
push
fild
mov
xor
or
push
push
jge
sar
loopne
dec
pop
addr16
pop
popa
lods
shl
and
jmp
jo
gs
js
retf
pop
int
popf
add
cmp
mov
scas
popa
fs
fbld
sub
cmp
or
lock
fadd
popf
or
pop
cmp
test
sti
or
sbb
ret
mov
xchg
lahf
addr16
pusha
into
dec
pop
mov
pop
call
cmc
ins
rcl
or
jle
jnp
out
in
repz
inc
or
jae
pop
lahf
jg
movs
in
jo
and
xor
inc
sti
test
jl
jl
lods
and
jo
pop
add
mov
push
xchg
sub
std
xor
jl
jne
sub
shr
jmp
or
imul
stos
ins
mov
call
pop
ins
mov
sub
lds
icebp
dec
rcr
cmps
push
aad
xor
xchg
push
loop
inc
arpl
xchg
ficom
cmp
cmp
xchg
xor
sbb
sbb
fnstsw
std
and
or
popa
popf
int
hlt
mov
jge
ja
(bad)
cmps
call
mov
xor
mov
fnstcw
ins
sbb
les
scas
jae
out
sbb
xor
in
aaa
aas
rcr
xchg
sahf
loop
ins
adc
xchg
in
sar
rcr
in
mov
data16
or
xor
pop
mov
rol
inc
repz
popa
sub
xor
mov
popa
pusha
je
adc
jmp
inc
sub
fs
jmp
std
clc
or
mov
jne
shl
sbb
cmp
sub
mov
pop
gs
mov
jle
jmp
pop
xor
pop
test
cli
fimul
or
leave
mov
out
xchg
int
add
lods
dec
out
push
mov
pop
pop
xchg
sbb
call
cdq
test
aaa
in
xor
pop
js
mov
xor
jmp
je
or
(bad)
dec
mov
les
sub
jae
sbb
mov
in
mov
sub
mov
or
push
loope
sahf
stos
in
push
xchg
neg
sbb
jbe
jmp
mov
jb
push
push
enter
adc
out
mov
mul
(bad)
inc
mov
mov
test
std
iret
dec
jo
movs
idiv
outs
pop
out
pop
ret
and
sub
sub
lods
sbb
or
std
sub
push
xlat
clc
out
pop
pop
test
std
and
mov
shl
les
mov
pop
rol
lods
pop
(bad)
out
fadd
adc
sub
xor
lods
push
mov
mov
aas
aaa
add
(bad)
push
shl
mov
xlat
pushf
icebp
pop
in
xor
sti
sub
dec
lahf
(bad)
stos
xor
sub
sbb
ins
stos
add
test
iret
pop
jo
jnp
pop
cld
inc
cdq
inc
nop
xor
mov
(bad)
fldenv
pusha
mov
sbb
call
sub
inc
nop
out
add
adc
jb
jo
fimul
dec
adc
sub
clc
cmp
idiv
mov
stc
pop
or
inc
es
push
dec
rol
sbb
stc
je
cmp
rol
lahf
sub
fs
es
repz
push
icebp
cli
loope
sub
lods
fmul
cmp
daa
ret
dec
hlt
addr16
sub
(bad)
xchg
jp
mov
pop
call
out
push
sub
addr16
arpl
jnp
sub
push
dec
xchg
ins
sbb
cli
scas
sti
out
inc
push
or
stos
(bad)
xchg
(bad)
not
jnp
mov
and
imul
and
inc
push
loopne
mov
sub
cmp
jg
inc
ret
add
data16
push
push
push
cmp
mov
mov
xor
ds
push
ins
fdiv
cmc
add
inc
cmp
or
jmp
sbb
imul
icebp
inc
adc
out
gs
xor
xchg
dec
jns
mov
stc
push
cdq
inc
lahf
rep
jge
mov
jb
dec
cmc
mov
aad
xchg
(bad)
jmp
add
loopne
xor
push
test
or
inc
and
pop
xchg
cmp
mov
icebp
mov
jp
push
call
inc
mov
jbe
mov
inc
bound
xor
jb
ins
mov
inc
cmps
loope
mov
lea
cli
imul
sahf
test
nop
dec
call
jecxz
pop
xchg
daa
mov
loop
nop
sub
movs
shl
aaa
data16
jnp
cmps
in
jae
sub
pop
gs
jg
dec
mov
pop
adc
xor
daa
mov
fidivr
in
jmp
cdq
sbb
rcr
inc
and
sub
lahf
je
outs
xor
sbb
les
jno
jns
sbb
fwait
xor
repz
test
sti
pusha
jb
cmp
cmp
sub
and
ret
jmp
gs
hlt
lahf
mov
mov
out
sub
lea
mov
hlt
xlat
(bad)
mov
mov
ret
or
out
fisub
pop
xchg
addr16
lahf
aas
mov
inc
sbb
stc
xchg
adc
(bad)
sbb
jecxz
pop
popf
adc
and
jg
and
xor
adc
retf
push
pop
cmp
sbb
mov
out
push
mov
dec
fisttp
(bad)
adc
pop
fsub
(bad)
(bad)
lock
or
fisubr
js
mov
jmp
pop
jg
sti
sbb
lds
mov
adc
cs
adc
push
adc
xchg
or
adc
add
mov
pop
xchg
out
jno
js
mov
sub
ds
add
fst
out
ins
mov
pop
adc
dec
out
or
push
and
(bad)
repnz
mov
jge
mov
lock
lods
shl
sub
out
mov
loop
sbb
push
mov
out
iret
add
mov
jl
clc
xor
and
inc
and
jmp
dec
daa
push
inc
(bad)
pusha
or
das
ret
int3
(bad)
pop
pop
pop
xchg
bound
or
cmp
lods
xlat
jmp
cmp
fstp
mov
ret
shr
imul
ja
push
inc
lahf
mov
in
jmp
lods
sub
xchg
fcmovne
fisttp
cmc
xor
loop
popa
cli
fcomip
aaa
hlt
fdivr
mov
dec
fwait
lahf
cmp
adc
jecxz
jmp
sbb
jmp
xchg
mov
test
sub
rol
pop
and
jmp
sahf
out
pop
into
hlt
dec
das
xlat
clc
xor
adc
neg
into
shr
movs
fs
xchg
mov
rcr
jle
jge
dec
push
cmp
sbb
outs
push
stos
mov
sti
outs
lahf
inc
fisttp
add
hlt
cmp
rol
push
fmulp
and
mov
leave
(bad)
dec
mov
ret
ins
xor
cmp
fldcw
test
mov
(bad)
daa
shl
mov
xchg
out
mov
sub
push
cmp
aad
push
ds
imul
pop
pop
or
gs
and
sbb
pop
sti
fstp
(bad)
retf
push
mov
mov
cmp
jo
(bad)
ss
repz
or
aaa
mov
movs
dec
mov
ins
pop
mov
movs
repz
ins
ja
mov
adc
dec
sti
ds
repz
cld
mov
test
js
pop
je
push
enter
outs
jmp
fadd
(bad)
mov
inc
cld
sub
cmps
add
fst
jb
mov
lahf
aam
stos
push
test
arpl
dec
dec
fcomp
pop
mov
sub
and
xor
adc
imul
movs
out
dec
mov
fimul
xor
dec
popf
mul
cmp
aad
and
mov
adc
hlt
(bad)
das
popf
pop
fldenv
inc
xchg
in
cmps
add
ss
cs
gs
and
cmp
inc
cdq
imul
loopne
push
fwait
out
(bad)
push
movs
mov
retf
xchg
xor
adc
jns
(bad)
fdivr
mov
mov
xchg
ja
out
lea
xchg
mov
jge
loopne
nop
das
(bad)
jbe
sbb
leave
rcl
(bad)
aam
(bad)
lock
outs
xor
jnp
mov
jb
scas
sbb
stos
shl
jb
mov
mov
retf
jecxz
ret
dec
pop
pop
daa
ret
mov
sti
jmp
(bad)
cmc
je
push
scas
push
jne
mov
mov
retf
and
scas
sbb
iret
sbb
mov
pop
jmp
fdivr
ss
pop
push
push
add
sbb
adc
xchg
shl
sub
gs
inc
cmps
aaa
test
pop
xchg
push
inc
jmp
pop
(bad)
sub
bound
js
mov
jecxz
lea
cli
nop
dec
sub
popf
ret
mov
mov
fstp
push
sbb
jl
inc
xchg
xchg
fwait
or
jo
or
ins
call
mov
test
js
cli
fiadd
test
rcr
lods
sbb
lea
xchg
cli
test
clc
sahf
cmp
adc
test
cmp
and
jmp
cmp
cmc
jg
fld
imul
outs
rol
mov
cs
jbe
push
cmc
mov
mov
outs
mov
and
xchg
dec
mov
idiv
pop
iret
in
(bad)
je
addr16
dec
fldenv
sub
push
or
pop
sahf
pop
aas
jmp
xor
sub
pop
cmp
cmp
xor
mov
movs
inc
jle
sbb
sub
hlt
push
lahf
cmp
call
rcr
or
test
mov
push
test
cmp
jae
mov
xchg
mov
xchg
xchg
test
ss
out
push
movs
mov
adc
in
or
xchg
push
pop
lahf
sub
cmp
xchg
retf
int3
dec
jne
ds
retf
mov
mov
retf
shr
ror
je
or
pop
push
loopne
jno
es
or
inc
or
and
test
mov
lock
and
lods
mov
or
jno
adc
(bad)
pop
lahf
fidivr
fnstenv
int3
lods
gs
sti
dec
movs
dec
popa
ror
adc
inc
jg
pusha
dec
jge
cwde
dec
out
sbb
cmp
xor
and
mov
xchg
sub
retf
or
jle
outs
sar
cs
jne
and
test
imul
scas
hlt
pop
icebp
jns
(bad)
sar
sar
es
mov
iret
jae
out
mov
mov
sbb
add
shr
push
pop
lods
jmp
daa
stos
ss
call
ret
and
enter
or
mov
outs
ins
mov
lahf
out
pop
sbb
fadd
mov
bnd
out
sub
nop
jb
into
sub
inc
sar
and
and
stc
sub
sbb
fld
call
jb
mov
jmp
lods
mov
push
retf
call
(bad)
pop
cmps
dec
and
inc
cmps
outs
dec
xor
(bad)
adc
lahf
rcr
imul
and
movs
out
gs
sub
mov
lock
push
sbb
jle
loopne
jno
pusha
inc
xlat
mov
vmovups
ret
rcr
sbb
cmp
mov
mov
out
cdq
fldcw
inc
ror
sub
stos
push
cmp
lods
ins
cmc
cmps
neg
ins
mov
lds
call
mov
int3
dec
dec
xchg
add
jns
bound
les
jecxz
jae
gs
daa
jg
enter
mov
jge
aad
ja
les
in
inc
sbb
xchg
sub
and
int
scas
sti
lods
sub
sub
mov
jb
iret
loop
dec
or
pop
div
jg
sub
push
or
iret
sbb
(bad)
dec
cwde
mov
xchg
add
xchg
mov
(bad)
iret
faddp
pop
jge
inc
pop
mov
rcr
pushf
mov
out
stc
sar
(bad)
(bad)
stos
in
cmp
inc
or
pusha
sub
pop
mov
jno
sbb
push
inc
mov
cmps
pop
repnz
push
inc
retf
cmp
hlt
push
inc
jae
inc
dec
inc
inc
cdq
xor
jg
or
(bad)
nop
in
scas
jmp
mov
sbb
test
ins
sub
pusha
or
movs
cmp
xchg
pop
xor
adc
ins
test
lea
cmp
push
out
jge
fs
adc
mov
or
jno
push
and
fadd
aaa
inc
stc
(bad)
pusha
dec
cli
mov
mov
iret
inc
xchg
push
xor
cmp
lds
push
mov
ret
imul
nop
test
les
in
outs
aaa
clc
pushf
jecxz
(bad)
lods
dec
lds
lds
out
push
and
push
(bad)
mov
sahf
jmp
test
jae
pop
and
cmp
cmp
addr16
(bad)
popf
inc
pop
hlt
fst
xor
push
adc
ror
cmp
xor
fisttp
int
pmuludq
jae
ror
cmp
sub
mov
repz
cmp
sub
xchg
imul
in
dec
stos
fwait
out
test
or
sbb
iret
push
arpl
fidiv
(bad)
clc
shl
ins
jnp
jnp
sbb
in
sub
ss
mov
add
js
sahf
xchg
xchg
adc
adc
loop
push
sbb
push
xchg
stc
xchg
test
sahf
pop
add
jge
push
test
outs
pop
jns
aam
xchg
and
push
xor
ja
pop
push
pop
and
ds
mov
cmc
in
bnd
movs
jecxz
outs
mov
cdq
mov
int3
push
ror
dec
and
jns
jnp
add
jmp
push
dec
popa
(bad)
aam
ins
add
sub
pop
pop
cld
adc
or
push
sub
aas
inc
xchg
stos
ss
lods
mov
sub
mov
mov
dec
add
rcr
in
push
ds
ret
xchg
and
in
mov
mov
push
stc
adc
lods
xchg
mov
cmp
xchg
cmps
jne
mov
inc
retf
repz
imul
inc
inc
out
ja
loop
shr
pusha
inc
pop
push
add
jmp
jp
enter
aam
shr
cmp
mov
test
test
daa
pop
pop
or
xor
pop
iret
fcomp
add
mov
sbb
scas
xchg
xor
aam
mov
jle
arpl
cdq
add
inc
ficomp
inc
cmp
les
mov
add
jmp
and
sub
mov
ret
repnz
in
push
aas
dec
jne
popa
mov
cmp
xchg
or
(bad)
ja
and
fs
leave
and
loopne
sbb
pop
jbe
or
jecxz
sbb
cdq
(bad)
scas
push
sti
pop
xchg
aam
push
dec
push
xor
mov
test
add
push
push
sti
lods
into
cwde
jbe
add
jl
pop
dec
(bad)
adc
cld
je
mov
stos
and
dec
out
xor
(bad)
popf
adc
cmps
cld
gs
test
nop
ins
dec
adc
sub
push
cld
jmp
xchg
sbb
fadd
xor
sahf
or
dec
pop
adc
fwait
cdq
xor
test
inc
enter
dec
pop
out
mul
mov
and
xchg
sbb
ret
lahf
scas
add
push
inc
xchg
xchg
jo
(bad)
imul
pop
out
test
mov
push
or
push
sahf
mov
jmp
mov
xchg
repz
push
imul
mov
sbb
aad
push
movs
cwde
sub
rcr
je
shl
les
jp
xchg
and
lock
sbb
mov
mov
stc
mov
sti
aad
lahf
es
les
ds
jb
inc
adc
push
gs
das
pop
pop
clc
xchg
or
loope
cmp
or
jo
repnz
xor
imul
ret
inc
mov
and
call
mov
enter
cmp
mov
(bad)
das
pop
lahf
data16
xchg
or
pop
push
in
push
push
loop
jo
mov
and
hlt
mov
mov
xor
lods
xchg
pop
xor
mov
mov
jae
mov
enter
jnp
fs
sahf
aam
sbb
xor
cmps
xchg
shl
(bad)
push
mov
cmp
or
std
int
jp
push
lock
xchg
imul
pop
aam
ds
jp
retf
jno
dec
outs
xor
dec
sbb
xor
icebp
xchg
mov
gs
push
std
jno
sub
jno
aaa
adc
cmps
stos
jae
fnstenv
(bad)
pop
push
sbb
stos
fistp
shr
push
or
pop
test
jecxz
popf
(bad)
and
xchg
inc
sbb
xchg
or
jb
mov
jg
jmp
cmc
push
rcr
mov
mov
rcl
push
xchg
sbb
in
cs
mov
(bad)
aam
int
aas
push
pushf
outs
sbb
push
jecxz
and
int
out
(bad)
dec
mov
mov
dec
pop
or
dec
pop
arpl
push
aad
ins
fsubr
inc
pushf
jae
stos
sahf
test
or
out
out
fadd
inc
add
mov
xor
xor
test
push
or
bound
sbb
jo
fwait
loopne
inc
dec
xchg
inc
inc
push
push
jb
mov
xchg
mov
mov
xchg
mov
jbe
inc
dec
inc
test
jle
int
push
pop
adc
pop
push
movs
loopne
sub
cs
inc
add
push
add
xlat
lea
into
aas
pop
add
sar
out
test
lods
push
enter
mov
shr
rol
xor
into
retf
jne
dec
mov
xor
(bad)
mov
cld
addr16
dec
or
or
data16
inc
push
rol
ror
cmps
sti
push
mov
clc
adc
stos
or
mov
jae
or
sub
sbb
mov
sahf
jecxz
loop
rcr
xor
push
cli
int
jne
and
in
inc
sub
push
mov
pushf
int3
push
clc
stc
dec
mov
xor
lods
fidivr
call
fwait
call
mov
adc
mov
cmp
adc
movs
test
mov
dec
repnz
push
ret
or
pop
out
ror
sbb
in
mov
mov
in
add
fsubr
mov
add
sub
jno
mov
outs
(bad)
clc
ins
mov
push
inc
dec
xlat
and
jp
xchg
adc
push
leave
stos
ss
pop
pop
daa
iret
adc
fs
push
pop
sbb
test
mov
jbe
cli
xchg
push
in
xchg
inc
ja
adc
fs
ins
jge
or
add
jg
imul
fcomp
cmp
cmp
mov
sbb
sub
les
sbb
add
test
mov
cmps
aas
mov
popa
in
cmp
push
xor
ret
mov
mov
fnsave
xor
sub
(bad)
int3
xor
cmp
jecxz
ds
shr
mov
clc
add
and
push
sbb
lods
ss
stos
mov
add
push
push
cmp
in
fsub
or
bound
mov
mov
out
pop
adc
in
stc
push
xchg
mov
mov
xor
ss
push
pop
repz
jnp
inc
mov
add
mov
fwait
cmp
fistp
scas
and
add
dec
das
jnp
mov
mov
aaa
pop
xor
ja
sub
xchg
xor
xor
mov
nop
cwde
jp
dec
jl
ins
and
mov
sub
cmp
fucom
hlt
pop
inc
mov
jmp
rol
into
test
int
jecxz
mov
sbb
jo
pop
and
sbb
nop
jmp
and
add
mov
inc
xchg
lds
in
popa
(bad)
push
mov
adc
sbb
or
not
add
into
loopne
jp
lea
or
retf
xchg
cmp
dec
pop
dec
sub
je
je
jmp
scas
pop
jno
xlat
addr16
pop
fs
mov
les
mov
test
and
xor
pop
lahf
lds
(bad)
out
int
outs
shl
dec
out
add
inc
jl
mov
push
outs
add
pop
das
jecxz
pop
in
fs
sti
gs
xchg
(bad)
iret
xchg
jae
int
pusha
setbe
aad
and
js
xor
test
retf
clc
push
xor
out
in
sbb
sbb
or
ss
adc
cmp
rcl
mov
or
jg
ror
rcl
popf
xor
and
pop
cli
(bad)
xor
sbb
div
(bad)
push
mov
cli
iret
dec
pop
mov
movs
jmp
nop
arpl
fwait
cmp
mov
xor
push
punpckhbw
pop
mov
stc
xchg
xor
inc
push
sbb
ret
retf
jg
add
inc
imul
jo
lock
mov
jecxz
into
addr16
data16
stos
out
leave
stos
mov
sahf
in
adc
mov
mov
and
xacquire
jecxz
mov
outs
and
inc
cmp
inc
pop
int3
pusha
repnz
pop
pop
test
test
sub
adc
gs
jo
std
in
jge
les
push
xor
adc
jbe
xchg
test
cmp
xor
and
mov
enter
adc
mov
add
mov
or
loope
jg
dec
sub
pop
lds
scas
mov
inc
mov
inc
repz
sub
inc
pop
cmp
lods
jg
mov
cmp
test
dec
loopne
arpl
add
retf
ja
mov
sub
dec
jae
std
mov
pop
ror
std
sbb
pusha
aaa
jnp
jecxz
dec
sub
adc
or
mov
xchg
sti
adc
jbe
sbb
inc
test
lock
lea
clc
movs
dec
mov
lock
inc
mov
or
repnz
mov
dec
jbe
call
add
push
pop
cli
aaa
xchg
inc
or
jl
pop
fiadd
lahf
pop
test
fisttp
mov
int3
nop
ficom
pop
stc
xor
pop
sub
pop
fmul
call
mov
add
mov
pop
cmp
lods
sahf
(bad)
stc
je
sub
aam
pushf
or
in
push
mov
inc
xchg
pop
and
fcomp
icebp
test
mov
inc
xchg
push
mov
push
lea
pop
scas
cmp
push
mov
retf
jo
sbb
and
mov
xor
xor
mov
mov
sbb
add
cmps
push
fild
popa
retf
or
inc
(bad)
lods
mov
push
ror
retf
inc
jmp
(bad)
(bad)
clc
jnp
cmc
push
fs
jge
bound
hlt
dec
(bad)
loopne
xor
push
mov
adc
in
out
adc
push
push
mov
or
cmp
aad
push
and
and
inc
adc
jne
xchg
dec
lods
cmp
inc
sub
add
or
lods
movs
pop
cmp
xchg
(bad)
mov
sub
sbb
fistp
mov
push
nop
sahf
aas
cmps
mov
outs
icebp
or
jmp
mov
shl
sahf
cli
sbb
in
add
mov
ja
cmps
mov
test
movsx
call
lods
add
push
xchg
hlt
or
popa
(bad)
test
mov
mov
cmp
add
lea
fdivrp
pop
lock
xchg
nop
xchg
mov
add
scas
jne
cmp
sbb
adc
fldcw
pop
jns
addr16
call
mov
push
or
sbb
mov
hlt
inc
stc
mov
mov
out
gs
or
adc
xchg
sub
mov
outs
cmp
add
pop
popa
mov
ins
mov
mov
mov
push
push
xor
cmp
inc
pop
dec
and
ins
adc
cld
paddusb
shl
and
imul
repnz
jmp
shr
xor
js
pavgb
sbb
mov
out
(bad)
fdiv
fild
cmp
sar
mov
mov
fiadd
daa
aas
ror
mov
inc
das
dec
push
jp
xchg
ins
cmp
sbb
adc
(bad)
pop
jmp
mov
xor
mov
dec
push
mov
lods
and
xchg
ret
jge
jns
es
dec
add
addr16
cmc
or
add
inc
retf
mov
push
loop
sbb
div
xor
ret
fmul
add
out
push
imul
xchg
and
push
aas
arpl
jmp
cld
pushf
xor
les
cld
(bad)
in
xor
mov
imul
and
mov
sbb
pop
jle
dec
push
cmp
sub
push
dec
aas
out
aam
aas
std
dec
sar
retf
addr16
mov
and
dec
in
nop
mov
inc
or
outs
adc
imul
es
pushw
ds
call
mov
mov
aaa
outs
popf
and
rcr
adc
shl
xchg
sti
push
push
out
xchg
jl
jns
in
bound
cmps
imul
dec
adc
scas
adc
adc
mov
mov
leave
mov
dec
jmp
call
cmp
adc
pop
jmp
test
je
rcl
or
sbb
cmp
jo
ret
mov
pop
dec
imul
popf
mov
cmps
add
dec
fnstcw
cmp
test
jb
push
repz
add
or
arpl
push
aaa
inc
lock
and
dec
mov
loop
mov
or
mov
adc
xor
cli
(bad)
(bad)
outs
push
sub
sbb
pop
xor
fnstenv
jne
mov
lods
jb
es
movs
mov
inc
jl
pushf
dec
rcr
and
jp
cmp
add
in
sub
imul
ja
push
pop
std
movs
nop
cs
or
(bad)
ins
push
aas
sbb
adc
mov
mov
adc
bnd
rcl
or
xchg
xchg
xchg
sbb
mov
fidivr
js
aas
jno
rcr
ret
jl
inc
inc
sbb
in
fnstsw
lahf
pop
arpl
popa
lods
fptan
mov
out
jle
dec
mov
dec
jns
hlt
sub
and
pop
fucom
psubq
pop
mov
or
popf
lods
test
cs
cmp
or
add
(bad)
out
fmul
sub
or
ins
sti
jge
icebp
sar
dec
outs
js
stos
mov
push
mov
(bad)
stc
or
test
xchg
or
jmp
in
add
mov
mov
rcr
mov
in
test
sub
test
sbb
adc
js
xchg
aad
fsub
ret
test
sbb
ds
retf
fld
retf
cmps
ret
fs
jmp
jnp
(bad)
call
push
scas
bnd
shl
pushf
ja
push
les
push
push
mov
inc
into
in
inc
inc
sbb
xlat
call
add
pop
and
je
int
stc
aas
push
sbb
gs
mov
or
mul
imul
sti
mov
aas
jnp
test
pop
das
cli
movs
xchg
imul
sahf
fcomp
into
jmp
inc
xchg
jmp
iret
inc
(bad)
jbe
jl
inc
icebp
add
mov
shr
gs
sar
js
and
cmc
daa
pushf
sbb
stos
repnz
daa
shr
fucompp
xchg
gs
mov
xor
add
dec
test
dec
cmps
daa
adc
dec
shl
(bad)
jmp
jb
les
xor
mov
stos
push
jg
inc
mov
xor
dec
ficomp
scas
inc
sub
mov
and
and
mov
adc
int3
pop
mov
in
pop
mov
loope
jecxz
mov
repnz
addr16
inc
cmps
xor
mov
int3
daa
adc
mov
push
mov
cmps
out
xchg
push
pop
jp
leave
stos
add
stos
out
mov
hlt
mov
cmps
cmp
arpl
xchg
push
mov
push
sbb
(bad)
sub
inc
adc
xchg
gs
push
add
lods
xchg
sub
hlt
dec
xor
and
mov
arpl
pop
sar
shl
and
sub
into
or
pop
(bad)
lds
mov
adc
(bad)
nop
jne
int
call
xchg
bound
pop
add
inc
leave
das
push
loop
adc
in
jno
jbe
sbb
push
cmps
in
jp
lods
aas
jb
imul
and
push
ins
push
jns
add
cmp
imul
pop
xor
xchg
push
push
pop
xchg
popa
js
inc
int3
push
sti
pushf
mov
jp
push
mov
test
sub
or
jmp
sub
or
ret
in
scas
mov
iret
jb
cmp
sar
popf
mov
xlat
xchg
arpl
pop
sub
xor
out
ins
add
(bad)
test
jl
aaa
test
add
std
sbb
adc
jae
sub
ins
movs
inc
ins
data16
dec
sub
inc
inc
loope
(bad)
push
pop
stos
inc
push
aaa
lahf
push
(bad)
in
xchg
xchg
lods
daa
popf
lahf
dec
popf
in
push
sub
xor
enter
jne
mov
outs
xchg
pop
inc
lahf
fisubr
pushf
test
pop
lock
mov
ret
mov
icebp
shl
out
fst
dec
mov
ror
rcr
lds
mov
push
(bad)
dec
jg
daa
fdivrp
jge
sbb
or
xor
dec
lock
nop
xor
ins
push
repnz
leave
pause
cmp
cmp
or
mov
mov
cmp
dec
mov
jns
and
je
adc
hlt
ror
push
clc
cwde
cmp
out
outs
gs
and
xchg
add
stos
ror
test
mov
pop
jb
ror
cmp
mov
cld
sti
fwait
push
dec
jbe
xor
mov
jmp
aam
add
(bad)
aam
ins
xor
iret
sti
adc
lea
icebp
inc
xchg
das
adc
pushf
popf
push
and
sti
mov
inc
clc
pop
jg
push
xchg
xchg
aas
pusha
stos
xchg
sti
inc
mov
in
test
jecxz
test
aad
push
(bad)
sub
dec
pop
cli
add
test
imul
xlat
data16
and
int3
cmps
(bad)
cmc
mov
push
jb
xchg
addr16
xor
dec
push
pusha
xchg
dec
loop
gs
stos
jge
push
fcomp
push
push
jle
(bad)
sbb
cmp
pop
pop
jns
xor
repz
ror
push
arpl
jp
call
pop
stos
popa
bswap
mov
jne
and
xchg
out
sub
sub
int
popa
xchg
fnsetpm(287
lods
cmps
push
fimul
retf
pop
sbb
in
nop
shr
dec
mov
imul
add
adc
adc
retf
repz
inc
jnp
and
push
inc
mov
cwde
add
sar
mov
sbb
jl
jb
lock
and
(bad)
shl
mov
clc
and
je
rcl
mov
retf
sbb
sub
sub
xor
(bad)
push
add
jno
pop
mov
cmp
jecxz
test
xchg
push
and
cli
mov
rcr
ret
pop
icebp
mov
push
jp
jb
xor
arpl
cmps
inc
inc
clc
lds
addr16
sub
inc
pop
rcr
adc
int3
mov
retf
push
fsubp
mul
loop
nop
mov
mov
cs
scas
mov
mov
push
mov
cwde
idiv
or
jmp
push
jp
popa
cmc
push
clc
and
dec
pop
aad
icebp
test
jmp
lea
popf
add
pop
pop
jmp
cmc
nop
popf
mov
push
sub
pop
out
fild
test
mov
sub
jge
pop
mov
je
stos
out
push
inc
jp
mov
mov
sub
shr
ja
es
and
xchg
or
cli
xor
js
ror
addr16
xchg
dec
popa
out
inc
jo
sub
sti
and
fdiv
xchg
push
and
cdq
aam
inc
retf
and
pop
stos
mov
sbb
scas
push
int
ret
(bad)
push
mov
(bad)
jmp
xchg
movs
jmp
add
or
dec
adc
out
leave
(bad)
jg
stos
and
inc
sub
ins
int
and
bnd
bound
mov
mov
pop
gs
xchg
les
inc
add
cmp
dec
mov
jnp
and
or
mov
jb
imul
push
mov
mov
push
mov
(bad)
jle
lds
repz
lock
shr
inc
daa
add
xor
jg
sub
xchg
push
xor
sub
sbb
inc
cdq
aaa
in
aad
cdq
pushf
xor
xchg
jmp
inc
xchg
iret
ja
jbe
add
imul
jbe
rol
ret
iret
in
dec
shr
dec
push
adc
jg
cli
mov
xor
xchg
fldenv
jg
jecxz
stos
inc
(bad)
(bad)
mov
fwait
xchg
sub
test
adc
lahf
int
mov
call
add
mov
call
jge
sahf
lods
mov
je
xchg
hlt
lods
adc
mov
adc
dec
pop
sti
dec
jae
dec
lods
add
mov
push
fcom
gs
sub
dec
sub
xor
movs
sbb
sti
outs
retf
push
xchg
cwde
or
mov
pop
xor
sahf
lods
mov
stos
daa
cmp
gs
mov
cmp
iret
mov
in
and
mov
cwde
push
xchg
shl
sbb
cmps
jmp
pop
clc
fs
or
sahf
jb
dec
nop
xchg
or
inc
shl
js
jb
in
in
int
fisub
pop
jp
and
imul
fimul
out
dec
in
adc
les
rcl
and
or
fsub
xor
aaa
sbb
xor
xchg
movs
mov
jg
xchg
mov
jle
in
sahf
pop
sub
add
mov
push
adc
cs
pop
inc
xor
sub
leave
xchg
push
shl
mov
mov
loopne
push
adc
div
iret
cmp
fcom
xor
push
out
fstp
daa
shl
lods
push
mov
jne
das
addr16
adc
(bad)
fucomip
xor
aad
or
aad
jle
js
repz
loopne
rcr
mov
pop
(bad)
or
stos
mov
jecxz
dec
icebp
mov
inc
idiv
push
mov
sbb
dec
cmp
push
mov
out
jo
fs
loopne
addr16
push
dec
repz
or
stc
pop
aad
aaa
xor
in
mov
fld
mov
fwait
mov
dec
jmp
jne
fs
shl
xor
xor
cmp
dec
ds
xor
push
loopne
test
sti
imul
xchg
es
push
icebp
cdq
add
cmp
pop
mov
xchg
fst
and
sub
add
movs
pop
cmp
out
call
lahf
loopne
rcl
sbb
mov
add
cmp
movs
ret
jno
(bad)
(bad)
mov
cmp
jbe
movs
dec
sub
or
or
add
or
aad
sar
jl
mov
or
push
mov
imul
mov
pop
sbb
mov
cmps
mov
movs
retf
add
test
lods
xchg
in
mov
sub
mov
mov
outs
inc
pop
std
mov
iret
pop
dec
in
shr
dec
pusha
test
jle
popf
push
mov
pop
jge
pop
cs
pop
xchg
sub
enter
jns
cmps
sub
push
xor
adc
orps
xchg
int
or
test
sar
ret
mov
test
mov
push
cmp
into
add
test
pop
(bad)
and
xchg
data16
outs
shr
add
leave
pop
mov
push
ja
inc
in
popa
lods
push
sbb
add
fisub
ds
in
dec
addr16
stos
dec
loope
mov
sbb
pop
or
rol
jp
jmp
mov
ficom
rol
rcl
pop
(bad)
and
push
cdq
adc
mov
push
xor
or
movs
shl
inc
lahf
loope
sub
out
jbe
sbb
cdq
xor
inc
fdiv
in
jp
adc
popf
popf
push
jg
pop
pop
or
pusha
inc
lods
sbb
je
mov
sub
je
loope
daa
or
in
jle
int
push
stos
cmps
nop
hlt
xchg
push
(bad)
arpl
mov
xlat
pop
stos
clc
push
cs
test
sbb
cli
push
ins
mov
push
imul
scas
pop
cmps
mov
aad
cdq
jno
loope
add
arpl
jno
mov
push
test
jne
and
cld
(bad)
xchg
pop
js
pop
mov
es
push
jnp
lds
mov
repz
ret
sti
xchg
mov
jne
dec
rcl
sti
pop
dec
loopne
pop
pop
and
ins
outs
cmp
add
jmp
xchg
sti
and
jecxz
add
push
xchg
cli
rcr
and
xchg
ret
hlt
jecxz
cmps
pop
xchg
xchg
jbe
adc
ror
xor
xor
mov
push
mov
das
push
pusha
adc
mov
int3
pop
call
and
cmp
push
sbb
scas
sub
adc
cmp
dec
adc
push
lahf
cwde
cdq
pop
mov
lds
aad
jbe
rcr
adc
pushf
cmp
(bad)
adc
jg
jle
mov
cmps
test
ins
lea
fdivr
imul
lods
stc
mov
cmp
and
dec
cmps
adc
or
shl
push
addr16
mov
int
sub
sub
mov
stc
xchg
ror
dec
rcl
lods
fnsave
xchg
and
jmp
pop
(bad)
aam
push
pop
dec
inc
inc
inc
in
inc
and
fild
cmp
cmp
jae
inc
xchg
dec
xor
dec
(bad)
cwde
sbb
dec
retf
xchg
mov
ficom
iret
std
xchg
jle
sub
lea
ror
inc
mov
adc
mov
xchg
inc
mov
and
mov
outs
mov
shl
outs
ret
adc
or
pop
xchg
add
pop
xchg
xor
ret
adc
fucom
mov
adc
mov
cmps
mov
push
mov
out
test
mov
or
retf
push
in
std
add
psubusb
sub
add
aam
sub
adc
mov
push
ss
jb
xchg
and
xor
out
xchg
dec
mov
xchg
push
enter
(bad)
mov
sub
(bad)
retf
outs
jmp
adc
add
fwait
(bad)
out
ja
out
add
retf
pop
not
mov
mov
imul
(bad)
enter
fst
inc
xchg
movs
mov
dec
mov
fsubr
popa
(bad)
(bad)
cwde
jne
sahf
pusha
push
xchg
std
sbb
lods
inc
repz
btr
mov
push
imul
push
call
mov
and
into
add
lock
jne
ins
nop
push
push
mov
push
ja
dec
push
arpl
jne
mov
outs
xchg
fisttp
ret
stos
push
clc
ss
sub
xor
adc
aaa
jl
cld
into
add
adc
(bad)
cmp
fidivr
push
hlt
xor
sbb
inc
pushf
pop
dec
inc
inc
mov
call
shr
mov
cmps
into
and
ins
fcmovb
jns
pop
inc
jg
jo
push
shr
and
xlat
push
out
xor
mov
stos
xor
call
sar
jbe
xchg
cmc
ja
mov
test
dec
lahf
push
xchg
pop
(bad)
cmps
lods
inc
push
js
mov
leave
pop
popa
arpl
sbb
into
imul
inc
sbb
adc
cdq
dec
cmp
(bad)
imul
adc
sbb
or
repnz
call
sbb
(bad)
jg
cmc
dec
gs
aas
sub
jp
sub
push
aam
shl
sbb
aad
int3
sub
dec
je
pop
dec
das
loope
test
call
ins
icebp
int
out
mov
jns
cli
loopne
mov
dec
mov
or
inc
dec
mov
mov
fmul
repnz
rcl
repnz
add
test
addr16
push
or
cmp
mov
ss
jmp
inc
push
fdivr
lea
(bad)
je
pop
fwait
and
loopne
jnp
rol
iret
in
xchg
stos
sub
adc
cwde
pop
xor
add
dec
retf
adc
(bad)
repnz
(bad)
xlat
and
xor
add
aas
inc
lods
adc
dec
stc
jmp
xchg
or
or
outs
mov
mov
inc
xor
mov
hlt
idiv
cmc
cmps
mov
xchg
adc
lock
shl
xchg
sub
pusha
pop
lock
sbb
pushf
dec
retf
nop
fisttp
ins
arpl
fwait
dec
gs
fs
jno
ds
out
cmp
xchg
jbe
xor
ret
pop
loop
(bad)
mov
and
test
nop
(bad)
(bad)
pop
nop
aaa
pop
fcmovnbe
pop
and
push
fs
or
out
mov
jne
mov
sbb
aaa
add
xchg
xor
adc
jecxz
and
retf
inc
int3
jp
int
jle
stos
jmp
jnp
jp
pop
mov
ror
xor
shl
push
push
mov
add
and
mov
mov
inc
pop
adc
ins
out
cmp
cdq
adc
imul
xlat
lods
sub
mov
pop
adc
mov
sbb
lods
sar
mov
cmps
stc
cmp
rcr
push
mov
imul
sbb
sub
loope
inc
cmp
adc
fdivr
adc
xor
pushf
mov
lods
mov
ret
test
dec
retf
sbb
call
sbb
push
bound
jns
movs
mov
cld
ficomp
push
in
cmp
in
or
mov
mov
adc
cmp
inc
pop
in
inc
outs
add
push
or
leave
pop
lds
dec
mov
cmps
aad
scas
and
inc
mov
jne
mov
(bad)
out
cmps
hlt
and
pop
adc
mov
xchg
xor
add
ins
inc
fisttp
shl
cli
aad
dec
fdivr
inc
sub
fbstp
out
and
loop
mov
and
mov
test
xor
pop
jbe
sbb
(bad)
loopne
inc
mov
add
jl
ins
arpl
adc
mov
sahf
mov
arpl
jo
fistp
stos
mov
outs
dec
sti
xchg
(bad)
mov
fadd
and
add
mov
fnsave
int3
push
inc
sbb
or
mov
jmp
nop
pop
push
cmp
lods
sbb
and
mov
aas
add
jae
cmp
or
rcr
adc
add
mov
ins
mov
loope
xor
imul
adc
(bad)
stos
stos
ja
fidiv
pushf
dec
jl
popf
sub
dec
mov
push
test
push
out
xor
shl
fst
test
call
inc
mul
stos
rcl
jl
ror
lods
ret
movs
enter
pop
mov
pop
adc
mov
mov
sahf
(bad)
cmps
jns
(bad)
out
add
les
add
call
mov
stos
pop
inc
(bad)
mov
aaa
cld
cmp
inc
or
jp
test
mov
stc
dec
test
in
lods
ret
or
pop
inc
and
mov
pop
(bad)
stc
pop
data16
and
jae
pop
xchg
and
or
adc
mov
sub
xchg
pop
iret
rcr
(bad)
(bad)
clc
loope
dec
pop
xchg
jno
inc
jle
jo
xchg
or
test
inc
mov
and
cmp
add
pop
pop
pop
add
jb
push
jmp
push
push
jb
cmp
sub
aad
jmp
(bad)
js
jnp
into
inc
xlat
test
cmp
sbb
xchg
cmps
les
fsub
mov
jle
mov
out
jmp
xor
or
shl
mov
stos
out
loopne
std
pop
dec
lods
push
ja
mov
and
inc
int
loopne
and
ss
mov
cmps
jmp
push
rol
jno
jno
mov
push
xchg
test
mov
inc
loope
sub
sub
fbld
dec
push
add
ins
outs
add
rol
push
xor
fsubr
mov
xchg
out
rcr
push
pusha
mov
cmp
xchg
(bad)
xor
sub
test
clc
cli
shr
loopne
fwait
cwde
sub
les
das
aas
jl
jmp
and
add
ja
repnz
fisub
or
stc
push
outs
mov
mov
fidiv
out
addps
imul
shr
iret
xor
push
frstor
cmps
and
(bad)
(bad)
jbe
add
in
pop
push
stos
dec
mov
aas
xchg
arpl
jb
dec
call
jmp
mov
mov
sbb
or
lahf
jg
push
cmp
into
ins
aam
int3
mov
int3
dec
cdq
xlat
sti
add
sub
cwde
adc
xchg
push
call
out
inc
mov
aam
or
mov
mov
pop
pop
sti
fst
adc
or
sub
sub
pop
fcom
or
mov
push
xor
iret
or
repnz
loop
pusha
lock
pop
jle
ret
push
shr
fsubp
int
ss
ja
leave
sbb
ds
xor
xchg
adc
cmp
fnstcw
mov
sub
sub
ret
inc
lock
mov
(bad)
pushf
dec
pop
rol
mov
es
jmp
sbb
mov
or
mov
inc
jns
out
ret
sub
push
inc
inc
push
mov
xchg
loop
jecxz
cmps
push
adc
cdq
imul
aad
mov
mov
push
push
xor
xor
data16
stos
adc
sub
pop
cmps
out
mov
pop
pop
mov
sar
int
sub
outs
prefetchw
or
jns
call
popf
mov
mov
pop
cmp
cdq
cld
push
ja
mov
shl
das
outs
mov
mov
sbb
popf
inc
std
sbb
xchg
adc
arpl
and
cmp
test
xor
mov
lods
cld
stos
xor
xchg
gs
jnp
cli
out
and
bound
jg
sbb
mov
loope
add
repnz
jmp
pop
and
sub
and
adc
dec
ins
aam
movs
push
xor
js
mov
xchg
xor
push
mov
or
pushf
sub
mov
pop
mov
popf
ret
add
and
cmp
pop
push
dec
fnsetpm(287
lods
retf
mov
sti
or
jno
sub
xchg
movs
test
ret
(bad)
out
lock
jbe
cmps
xor
cmc
bnd
shr
fs
sub
into
push
mov
mov
or
imul
mov
imul
adc
sub
cdq
outs
into
outs
(bad)
cmp
or
sahf
adc
jmp
loopne
and
sbb
sub
addr16
and
mov
shl
inc
jnp
inc
scas
pop
push
add
repz
enter
cdq
scas
pop
lds
push
xchg
pop
cmp
ds
icebp
mov
in
and
or
call
enter
ins
pop
push
mov
jo
lds
or
xor
add
imul
pop
cmp
pop
pop
(bad)
dec
inc
loop
xchg
shl
pop
ja
test
push
jge
in
pop
outs
leave
or
add
mov
mov
popa
mov
mov
fistp
inc
jo
pop
mov
pop
mov
jno
inc
loope
inc
inc
push
pop
lods
sub
(bad)
repnz
std
cmc
mov
mov
mov
cld
in
jle
xor
(bad)
pusha
bound
inc
push
gs
sub
jbe
ror
add
data16
imul
das
and
push
test
outs
add
(bad)
cld
inc
dec
(bad)
mov
(bad)
push
pop
test
sti
mov
(bad)
leave
and
pop
test
sub
xor
out
(bad)
add
(bad)
push
(bad)
cmps
jnp
pop
adc
xchg
and
je
push
dec
mov
mov
cmp
mov
jecxz
sub
add
lea
shr
mov
call
mov
mov
push
dec
push
out
push
cmp
pop
xchg
add
popf
jne
mov
mov
in
sar
adc
lds
clc
xchg
inc
ror
mov
loop
cmps
xchg
xor
sbb
std
sub
bound
loope
push
in
add
pop
push
adc
xchg
movs
sub
data16
push
jne
sti
out
xor
fincstp
cmp
daa
inc
stos
cmps
gs
into
jle
mov
or
and
push
pop
xchg
hlt
push
xchg
push
inc
pop
ins
sub
pop
jmp
outs
xlat
mov
arpl
repnz
into
push
inc
aaa
add
sub
fistp
xchg
sub
in
xlat
stos
in
push
add
cmp
push
ret
rol
int
inc
pop
call
fwait
lock
sbb
stos
push
mov
push
sbb
out
addr16
rcl
shl
inc
retf
loopne
xchg
mov
adc
repnz
xchg
imul
sbb
xchg
pop
jmp
std
inc
jb
scas
sbb
ret
push
pop
jo
and
and
xor
inc
in
mov
dec
ds
push
leave
mov
add
add
xor
mov
xlat
rcl
sbb
mov
lahf
cwde
and
or
imul
sbb
mov
pop
mov
xchg
test
je
jno
mov
dec
push
int
sti
loope
jne
leave
sub
xchg
jge
mov
adc
shl
mov
xchg
mov
out
sar
push
mov
push
or
loope
test
fwait
jl
sub
push
inc
scas
jmp
in
mov
sahf
out
imul
inc
test
fdiv
dec
cdq
stc
inc
cmp
sub
and
sbb
rcr
add
push
iret
outs
ret
in
loopne
aam
shr
adc
repz
mov
rcl
mov
stos
jae
mov
mov
mov
in
pop
jae
sbb
aas
call
mov
add
or
mov
pop
in
jge
(bad)
adc
and
in
dec
and
fild
sub
cmp
jecxz
xchg
push
(bad)
fisubr
std
call
mov
aas
or
and
cmp
xor
jp
jmp
mov
js
push
mov
jle
icebp
add
(bad)
sbb
push
xchg
(bad)
in
stos
(bad)
loopne
aad
pop
inc
dec
pop
cli
xor
cs
jb
dec
es
daa
fiadd
jbe
fistp
sbb
mov
jle
push
(bad)
mov
push
iret
cmc
dec
in
shr
push
(bad)
in
adc
xchg
arpl
aaa
in
lock
cmp
push
fsub
fstp
lods
dec
add
mov
stc
out
out
add
ret
daa
xor
sti
stos
std
dec
pushf
or
cld
xchg
adc
jno
push
mov
or
mov
fmul
jb
arpl
loop
ja
jecxz
mov
test
sar
leave
add
pop
jmp
xchg
dec
jmp
in
xchg
xchg
lds
(bad)
cmps
cmps
adc
daa
inc
xor
pushf
cs
xor
jo
xor
sbb
mov
popf
sub
leave
or
and
je
retf
(bad)
test
gs
(bad)
sub
inc
jo
je
pop
neg
adc
data16
sbb
xchg
mov
outs
mov
or
xchg
pushf
sbb
cdq
pop
mov
fwait
jl
enter
lock
jae
std
fsubrp
ins
or
pop
mov
sub
push
int
mov
pop
cmp
xor
mov
jle
add
shl
sub
pop
(bad)
int3
mov
sahf
pop
pop
push
cmp
fsubr
xchg
in
(bad)
mov
fmul
addr16
arpl
sub
test
shr
sbb
loop
fild
add
pop
push
inc
stos
in
add
fisubr
sbb
jl
add
push
mov
push
sub
and
xchg
ds
lock
sub
and
xchg
jmp
sti
hlt
push
retf
sbb
mov
out
gs
sub
cmps
aas
and
mov
sub
cmps
popa
mov
mov
or
add
add
add
push
pop
les
pop
or
sub
sub
add
xor
inc
pop
jo
dec
sub
mov
gs
jle
outs
retf
sub
add
pop
fstp
push
aaa
mov
jbe
sbb
push
ror
push
cmp
popa
fwait
imul
or
pop
pop
push
jne
cli
fsubr
xor
fs
dec
mov
out
pop
imul
push
jecxz
sbb
xor
retf
lock
test
add
mov
mov
test
push
cmp
jbe
add
fcom
pop
mov
mov
aad
sahf
mul
pop
(bad)
sti
(bad)
leave
call
or
mov
inc
adc
in
inc
pop
test
rcr
jg
mov
test
sbb
outs
stos
outs
loop
test
sti
push
mov
xor
inc
jmp
shl
sbb
inc
mov
jecxz
xor
or
inc
scas
repz
cmp
aaa
add
adc
add
jbe
pusha
fdivr
icebp
dec
cdq
dec
cmp
sbb
push
aad
sbb
mov
(bad)
frstor
cmp
leave
pusha
or
or
cmp
into
sub
sub
scas
clc
dec
xchg
out
xor
jecxz
mov
outs
es
sub
iret
call
loopne
push
lods
push
add
pop
mov
xor
mov
stos
inc
jae
cmp
bswap
add
pop
imul
or
retf
xchg
adc
test
lock
cmp
xor
mov
outs
mov
or
stos
stos
push
push
movs
xchg
mov
xchg
jmp
lea
mov
inc
rol
mov
add
mov
out
and
or
scas
stc
imul
jecxz
(bad)
push
xor
fucomp
out
arpl
sub
mov
or
mov
dec
cmps
leave
push
mov
retf
scas
push
ficom
(bad)
mov
movs
xor
jmp
sub
je
retf
loope
pop
stos
push
int3
scas
(bad)
add
mov
mov
mov
mov
cmp
mov
jp
xlat
(bad)
in
(bad)
(bad)
(bad)
mov
sbb
gs
or
pminub
mov
or
adc
sub
mov
mov
lock
mov
xchg
sub
dec
sbb
ins
jmp
call
xor
mov
fisub
sbb
es
not
push
int3
out
mov
dec
clc
mov
gs
adc
and
dec
adc
cmp
pop
push
or
or
pop
sub
push
add
xchg
ret
adc
xor
mov
stos
sti
dec
mov
push
rol
les
sub
pop
sub
pop
push
imul
stos
call
stos
jecxz
pop
mov
mov
or
mov
pop
scas
or
push
fadd
cmp
jl
aam
inc
inc
std
xchg
call
dec
rol
sbb
rcr
cmc
add
aaa
lods
and
xchg
iret
mov
and
jbe
cli
movs
aas
mov
jge
sub
adc
pop
not
ret
test
loope
neg
sbb
and
and
dec
or
mov
sar
fs
or
in
push
dec
cmp
mov
es
nop
add
call
es
cmp
pusha
push
test
out
sti
mov
jle
add
call
scas
stos
xor
mov
es
xor
dec
mov
cmp
aad
cmp
fist
jg
rol
mov
stc
inc
mov
mov
and
inc
repnz
stos
jb
sahf
push
push
int3
cmp
aaa
call
cmp
ret
lea
sti
leave
or
jle
xchg
adc
add
add
(bad)
nop
shl
pop
(bad)
cld
cdq
clc
pop
pop
(bad)
push
leave
fcmovbe
outs
scas
(bad)
test
cmp
xchg
fsub
or
les
fisttp
or
xor
sub
rcl
daa
and
out
lods
sbb
push
xchg
or
mov
das
cmp
ret
fistp
lods
xchg
push
adc
stos
mov
fwait
lods
in
fldenv
pop
std
mov
nop
in
pop
les
inc
data16
gs
mov
jp
rcl
pop
frstor
sub
and
lods
mov
loopne
int
jg
nop
jmp
or
mov
(bad)
sub
mov
mov
test
not
scas
mov
div
into
xchg
rcl
test
ins
mov
imul
ror
mov
or
jno
sub
push
fisubr
mov
fcmove
sub
hlt
and
test
idiv
imul
dec
out
mov
cdq
ret
call
daa
dec
adc
jmp
inc
in
out
in
not
mov
mov
pop
sub
iret
and
jne
movs
push
(bad)
(bad)
enter
inc
icebp
out
mov
jecxz
sbb
repnz
in
push
cmp
rcr
push
mov
push
or
adc
or
cmp
hlt
fchs
fdivr
ja
mov
jl
sbb
scas
call
je
arpl
les
and
xor
cs
fidiv
mov
mov
cmps
fs
ja
nop
lods
jmp
or
add
and
icebp
sub
(bad)
pop
adc
lea
push
or
lods
in
das
mov
retf
mov
es
sub
push
jbe
and
in
out
lods
cmp
outs
push
clc
ins
dec
sub
aaa
addr16
mov
and
and
test
cmp
(bad)
fucomip
mov
jmp
pop
lods
(bad)
or
into
mov
fistp
jecxz
ds
push
pop
mov
call
pop
jmp
fiadd
(bad)
pop
adc
pop
faddp
push
sbb
gs
ret
xor
js
call
stos
idiv
dec
mov
(bad)
cld
adc
jge
inc
pusha
mov
cdq
xlat
mov
mov
or
fs
xor
xchg
pop
cmp
xor
mov
cmp
aam
push
jecxz
(bad)
js
adc
sbb
test
pusha
arpl
and
inc
dec
jmp
repnz
jbe
lods
sub
in
shl
dec
loop
aad
dec
cmp
(bad)
out
into
push
dec
dec
sbb
and
mov
inc
xchg
iret
push
rcl
mov
ret
add
jp
adc
pusha
mov
adc
jae
addr16
mov
outs
jbe
ret
push
rol
jmp
call
fs
stc
dec
cmps
xchg
mov
ins
aaa
std
aam
ss
test
jge
outs
ss
out
fsubr
cmps
dec
mov
imul
out
cmc
cdq
push
sahf
loope
test
jns
sbb
push
jb
jb
xor
cmc
iret
dec
mov
or
imul
mov
sbb
ds
mov
pushfw
retf
mov
(bad)
retf
gs
push
jae
iret
push
clc
in
in
cwde
aam
ds
jmp
adc
cmp
fldenv
(bad)
mov
mov
mov
rol
jmp
(bad)
push
bound
out
sub
pop
push
std
mov
lahf
mov
pop
mov
jp
(bad)
call
jle
inc
call
aas
je
clc
call
dec
arpl
mov
sub
imul
aaa
retf
sbb
or
hlt
adc
add
cmps
push
inc
dec
xor
and
mov
inc
das
xor
or
xchg
mov
lods
dec
push
jbe
mov
enter
and
lock
sbb
pop
sbb
inc
mov
add
xor
push
test
inc
sbb
ins
(bad)
mov
shl
lods
pop
pop
mov
pop
lahf
or
pop
cmp
sub
lock
jmp
dec
jb
cli
mov
stos
jmp
ror
xchg
(bad)
ins
cmp
dec
test
sub
xchg
(bad)
bound
dec
inc
fist
xor
xor
jecxz
sub
jmp
in
(bad)
neg
sahf
(bad)
out
dec
lods
(bad)
in
add
jmp
outs
mov
ins
mov
or
das
mov
stos
jle
cmp
push
dec
out
mov
(bad)
icebp
ret
push
push
imul
into
xor
hlt
mov
fistp
jns
jge
jmp
xchg
dec
retf
pop
sub
xlat
cmp
add
push
(bad)
fcmovnbe
inc
cmp
btr
mov
(bad)
test
jp
mul
push
imul
test
fst
adc
bound
or
std
adc
jbe
test
jnp
dec
ror
and
mov
mov
arpl
mov
dec
inc
mov
ficomp
mov
ret
adc
mov
repnz
fwait
mov
fistp
movs
push
jne
mov
pusha
jno
ins
rcr
lahf
sbb
loope
stos
adc
push
push
std
jmp
sbb
jge
or
cmp
dec
test
cmp
inc
ins
fxch
mov
inc
pop
pop
int
inc
mov
jmp
adc
xchg
mov
fwait
jp
and
shl
push
ret
mov
imul
ins
stc
imul
movs
jae
rcr
mov
je
lea
inc
in
hlt
mov
cmp
adc
add
push
pusha
jmp
jp
clc
fstp
in
arpl
aas
and
icebp
jbe
jmp
sbb
dec
ret
push
(bad)
adc
push
mov
xchg
call
ficom
pop
xor
test
(bad)
and
call
gs
fild
paddb
fsubr
xor
in
sahf
cmp
jnp
in
adc
pop
xchg
adc
mov
arpl
push
cmp
pop
mov
sbb
jmp
into
(bad)
adc
retf
pushf
fwait
(bad)
pop
popf
jae
cdq
xchg
cmps
push
add
ror
aam
pop
addr16
xchg
inc
mov
inc
outs
aam
jno
push
push
shr
out
aad
mov
adc
sbb
pop
mov
lock
scas
sbb
jae
aam
mov
inc
mov
ret
aas
add
sbb
pop
inc
out
push
(bad)
xchg
mov
xor
js
aaa
into
sbb
loop
outs
outs
int
es
mov
cdq
bnd
and
std
sub
mov
and
pop
adc
mov
inc
into
and
ins
lea
mov
or
sub
lods
sub
xor
mov
cs
mov
inc
or
mov
xor
inc
stos
adc
jne
call
(bad)
mov
mov
sbb
loope
in
nop
mov
inc
loope
hlt
dec
pop
inc
bound
jp
inc
mov
sub
or
popf
jo
lods
popf
aaa
push
jno
loopne
jmp
cwde
repz
fsub
stc
fs
or
sbb
lahf
aas
pushf
push
scas
fdiv
cmps
xchg
call
mov
pop
mov
out
mov
data16
cmp
adc
mov
jecxz
sbb
pop
pop
mov
pop
adc
or
and
cmp
xor
mov
jae
arpl
pop
jae
rol
adc
cmp
out
lods
xchg
ror
and
sub
mov
call
into
xchg
xchg
pushf
cmps
shl
xchg
push
xchg
in
and
in
fs
(bad)
dec
dec
xor
in
cdq
pushf
pop
in
ret
ins
outs
call
xchg
in
pop
sbb
cmp
sti
dec
dec
in
cld
ss
push
fidiv
rcr
rcr
push
push
xchg
popa
in
fcomp
cmp
mov
enter
cmc
outs
push
rcl
jo
xchg
and
fist
dec
call
sbb
fwait
test
xchg
add
int3
in
sbb
in
std
mov
xor
imul
test
xor
ds
scas
or
jp
mov
pop
into
xchg
fstp
stc
fmul
xor
mov
fiadd
push
cmp
out
pushf
sub
fstp
pop
and
push
xchg
sbb
mov
adc
jp
xor
repnz
stc
(bad)
test
inc
pop
push
jmp
sbb
jge
(bad)
and
mov
enter
mov
test
jg
mov
icebp
es
and
aas
push
push
(bad)
push
mov
push
repnz
repnz
mov
retf
add
add
lahf
cli
dec
dec
imul
in
es
push
or
xor
(bad)
lods
in
dec
mov
xchg
mov
imul
iret
jnp
jmp
adc
push
icebp
into
ja
js
shl
add
inc
sub
stos
fldenv
test
ja
cli
sti
xlat
in
mov
into
(bad)
iret
sub
out
mov
shr
xor
mov
inc
rcl
sbb
add
aaa
add
xchg
xchg
in
lock
xor
ret
(bad)
sahf
jle
mov
add
out
mov
mov
nop
cmc
push
or
xchg
xor
mov
jl
loopne
mov
jle
dec
jmp
into
test
jmp
mov
sub
dec
pop
std
push
dec
(bad)
cli
pusha
call
mov
mov
jbe
add
adc
dec
ret
xor
mov
dec
jecxz
xchg
jne
mov
fs
inc
sub
neg
dec
out
or
mov
fcom
xchg
inc
scas
jge
mov
or
lds
push
xchg
int3
std
mov
retf
mov
imul
jecxz
fs
ret
lods
cmp
fprem1
or
xor
add
mov
push
push
les
ds
lock
mov
hlt
lea
mov
dec
mov
adc
call
(bad)
dec
xor
xor
dec
pop
push
pushf
div
push
or
push
mov
daa
mov
sbb
sbb
push
jecxz
shrd
mov
mov
cmp
or
pop
push
xor
mov
push
out
aas
lock
icebp
fstp
sbb
jg
jmp
inc
ficom
or
mov
inc
(bad)
cdq
jg
inc
push
and
xlat
test
mov
pop
out
cmp
xchg
or
psllq
iret
jle
icebp
mov
std
mov
mov
xlat
cmp
leave
xchg
cmc
nop
(bad)
out
es
mov
mov
imul
(bad)
cmp
fdivr
pop
iret
mov
sbb
mov
mov
stos
cmp
inc
and
outs
jmp
sub
out
add
xor
lods
push
gs
shrd
sbb
xlat
mov
jb
scas
push
pop
enter
fcomi
test
fcomip
adc
jno
in
test
xchg
or
pop
and
ins
ret
lahf
jnp
aad
gs
xchg
xlat
push
dec
int
in
out
dec
cmp
push
dec
and
mov
rcl
cmp
pextrw
xchg
scas
mov
or
push
and
sbb
mov
data16
mov
fsub
je
adc
loop
push
cli
in
xchg
dec
pushf
in
sti
or
adc
ins
xchg
test
les
sub
jne
sahf
test
lods
call
repz
ror
jp
cld
sbb
mov
dec
xchg
push
sub
xor
lea
call
scas
arpl
cmps
dec
jbe
in
sbb
in
aaa
les
and
inc
cmp
call
ret
clc
lea
in
mov
rol
sahf
shl
push
ror
mov
xor
mov
jo
inc
and
fsubr
retf
popa
push
adc
aad
retf
cdq
mov
ror
iret
pop
aaa
sub
pusha
aad
sub
std
dec
push
(bad)
mov
cmp
and
sub
leave
fwait
jg
dec
rcl
(bad)
xor
push
jbe
aam
pushf
cdq
adc
jg
das
addr16
mov
movs
cdq
popa
jle
inc
add
mov
sub
add
jbe
or
das
and
mov
jmp
add
out
push
imul
inc
addr16
mov
ret
pop
aad
mov
xchg
ss
out
repnz
mov
adc
out
xor
inc
xor
inc
cmc
jns
cmps
lods
lods
in
hlt
mov
sub
pop
out
push
rol
cmps
mov
mov
(bad)
and
push
jl
xchg
mov
stos
adc
popf
js
mov
cmp
push
ins
jge
and
mov
aas
pop
mov
pushf
dec
jb
jp
dec
imul
std
mov
jbe
sub
shl
in
dec
xchg
std
cmp
xor
int
mov
out
xchg
jg
stc
(bad)
loopne
sub
sub
xchg
(bad)
push
ins
and
test
sbb
add
addr16
cmps
pushf
imul
repz
push
pop
cmp
sub
lock
xchg
retf
push
sti
xchg
cmp
addr16
or
(bad)
repz
shl
fsubr
ins
push
jb
sahf
jg
push
jmp
add
loope
mov
sbb
jmp
retf
daa
and
stos
sbb
pop
mov
jmp
mov
sbb
cwde
push
(bad)
hlt
mov
lds
mov
add
push
jecxz
pop
push
out
lock
xchg
cld
xor
push
sub
test
popa
push
dec
mov
xchg
(bad)
data16
adc
jl
or
call
jmp
add
pop
dec
ds
stos
cs
lahf
inc
jg
int
scas
add
out
jmp
inc
imul
xchg
xchg
mov
out
push
and
mov
sub
cmp
mov
sbb
bound
jns
jno
push
movs
mov
call
addr16
add
mov
sbb
mov
call
xor
mov
aaa
sub
shl
ret
lea
mov
jne
xchg
in
clc
push
dec
nop
aas
pop
jne
xchg
xor
xor
mov
cmp
leave
adc
imul
or
mov
push
lods
fnstsw
adc
add
bnd
ret
adc
ins
cmp
loope
fmul
add
pop
mov
ss
mov
lock
out
ss
push
sbb
xchg
out
mov
cmp
sar
xchg
out
mov
or
or
add
dec
je
sub
jb
shr
test
fstp
movs
cmp
dec
loop
imul
iret
pushf
lahf
leave
mov
mov
mov
in
xchg
scas
xor
pop
jb
mov
jbe
mov
xlat
or
imul
xchg
repz
mov
cmp
pop
ins
in
pusha
xor
in
lea
into
mov
dec
xor
shl
inc
and
repz
test
sysenter
out
pop
adc
push
cmp
pusha
cli
out
mov
mov
mov
or
ror
mov
retf
mov
jecxz
and
fsub
not
cmp
frstor
aad
daa
jo
call
xchg
pop
adc
mov
cdq
sbb
or
xor
bound
add
int3
or
(bad)
std
fld
cwde
not
or
push
or
jl
pop
fs
push
call
inc
push
xchg
es
fs
div
mov
mov
push
xor
imul
leave
test
jle
jbe
sbb
jnp
xor
enter
fadd
popa
sub
mov
scas
push
shl
test
jb
hlt
arpl
adc
add
in
sbb
xor
inc
(bad)
push
(bad)
rcl
and
jmp
pop
jns
call
jle
xor
adc
sahf
and
dec
xlat
cmps
pusha
xor
loope
dec
ret
push
pusha
lock
or
repnz
dec
pop
inc
xlat
mov
mov
adc
cmp
ins
dec
in
aam
xor
mov
fldenv
and
pop
arpl
dec
loope
and
dec
mov
mov
jecxz
(bad)
sar
in
or
hlt
bound
jno
rol
cli
cmp
push
xchg
data16
push
inc
les
cmps
pop
xchg
loop
mov
push
mov
xchg
sub
dec
mov
ja
xchg
stos
fldcw
pop
inc
push
out
ja
push
(bad)
fidiv
jecxz
xor
(bad)
push
mov
xlat
(bad)
clc
inc
mov
dec
mov
pop
sub
js
int
js
mov
lods
push
fcom
sbb
popf
or
adc
and
in
xchg
lods
dec
outs
int3
jae
js
fisub
nop
inc
jge
xor
test
jb
pusha
mov
ror
ins
dec
jg
dec
imul
stc
retf
dec
pusha
mov
push
fisttp
mov
jno
jae
jge
mov
inc
in
sbb
inc
sub
int
add
lahf
xor
dec
inc
fisubr
stc
popa
icebp
xor
mov
xor
dec
push
add
pop
outs
mov
aad
xchg
dec
popa
mov
cmp
push
xchg
adc
lods
outs
pushf
ja
sub
jns
pop
push
cli
rol
cmc
mov
sbb
xor
test
mov
pop
call
push
push
adc
sbb
(bad)
in
add
cmp
sub
mov
cmp
out
inc
jb
daa
pop
push
sbb
sub
pop
sub
imul
mov
jecxz
fcmovnbe
push
rol
mov
add
bound
adc
mov
dec
in
outs
push
repnz
repz
shr
mov
ins
xor
rcr
jno
pop
sub
call
movs
cmp
stc
pop
call
sahf
clc
jmp
int3
xchg
sub
lds
out
sub
int3
fwait
(bad)
and
imul
cmp
pop
dec
mov
ss
ins
mov
jmp
or
je
sahf
xor
data16
sub
mov
out
and
add
cmps
jbe
jmp
out
ins
imul
neg
and
nop
push
xchg
xchg
adc
push
push
adc
fwait
stos
cmp
cmp
inc
inc
vpmacsdql
pop
add
inc
imul
mov
inc
ss
mov
arpl
cs
pop
fwait
in
sub
(bad)
xor
(bad)
sbb
rep
cmp
aam
aaa
shl
adc
pop
jg
push
cmc
fld
cmp
sti
jmp
mov
mov
mov
add
out
or
not
xor
adc
add
push
vpinsrw
ss
xchg
pop
ret
jl
in
fs
mov
loope
stos
aaa
push
jmp
ins
cmps
cld
jae
mov
(bad)
mov
test
leave
adc
lock
sub
adc
jne
test
idiv
jp
fs
inc
xchg
xchg
lock
and
xchg
jge
jle
enter
test
arpl
test
cmp
in
loop
sub
out
jecxz
push
add
loopne
inc
ja
cmp
mov
pop
mov
mov
fild
inc
bound
out
ss
push
in
add
in
pop
fidiv
mov
test
sub
inc
addr16
shl
add
lock
out
mov
out
(bad)
mov
push
lods
jp
call
dec
sbb
sub
sbb
stc
js
and
ja
xor
fcom
jmp
lods
enter
fnstcw
sbb
pop
mov
cmps
push
inc
push
clc
aam
push
ret
mov
(bad)
stos
adc
cmps
add
sub
jns
cmp
scas
jecxz
jecxz
xor
scas
cmp
ss
xor
push
movs
frstor
aam
inc
bound
dec
test
push
shl
pop
ins
movs
outs
xchg
or
cmc
adc
aad
push
adc
push
clc
lods
mov
and
jae
dec
stos
pushf
cmps
daa
inc
mov
xor
pushf
dec
ins
loope
daa
push
and
call
popf
out
stos
xor
mov
int3
cdq
dec
je
or
out
pop
add
push
dec
loope
mov
aaa
adc
push
push
jns
jbe
jmp
sbb
ds
lods
mov
add
pop
jg
sar
call
stos
cmp
add
lahf
or
mov
lods
adc
test
cmc
mov
fsub
ret
pop
(bad)
xchg
push
cmp
ficomp
loope
popf
fimul
and
in
rol
xchg
mov
out
ret
or
add
add
pop
and
out
and
cmps
fdivrp
ss
test
dec
mov
cmp
or
jo
jo
(bad)
out
or
jl
popw
(bad)
mul
xor
jns
fcomp
cmps
push
aas
pop
push
jns
pop
rcl
mov
and
jb
or
retf
pushf
cdq
loopne
int3
lahf
pop
add
push
(bad)
scas
sahf
mov
sti
inc
mov
stos
mov
xor
inc
pop
and
adc
lds
push
sbb
leave
cmp
inc
into
xor
enter
out
sbb
lea
popf
sbb
js
xchg
push
test
pop
inc
pop
fwait
gs
and
jge
in
inc
in
iret
fdivrp
aas
fld
xchg
sub
movs
and
jb
lods
cmp
pusha
leave
mov
push
dec
nop
xor
cmps
cmps
jns
ret
mov
lods
adc
(bad)
push
xor
loopne
jecxz
add
inc
xlat
clc
aaa
xor
pop
call
xor
test
adc
aam
push
push
inc
enter
adc
jle
call
es
and
adc
in
loopne
and
loop
jbe
xchg
sbb
aam
mov
xchg
(bad)
into
sbb
or
cmp
sub
push
pop
ffreep
xlat
into
cmps
jmp
popa
jle
sbb
mov
xchg
sbb
add
xchg
retf
cmp
(bad)
add
or
sub
adc
sub
popf
push
adc
mov
stc
push
add
std
lods
adc
js
mov
loop
popf
popf
or
sbb
jl
adc
(bad)
xchg
push
mov
cmp
pop
sub
cmp
cmp
dec
fisttp
movs
or
add
retf
arpl
add
push
jb
pop
or
movs
mov
adc
pop
loopne
pop
movs
mov
repnz
(bad)
push
iret
jle
xchg
or
ja
or
das
push
cmps
push
aad
mov
mov
movs
or
and
sub
scas
mov
icebp
sub
sbb
dec
lds
retf
push
movs
or
or
xchg
aam
ficomp
ja
xor
pop
adc
adc
int
mov
addr16
sbb
in
imul
jl
cmps
push
push
repz
xor
clc
mov
cmps
push
ret
lea
out
mov
jo
out
js
mov
dec
into
out
adc
or
adc
mov
jl
call
data16
sbb
sbb
ds
pop
jb
cmp
cwde
push
fdiv
test
in
pusha
push
outs
lods
cld
mov
push
mov
pop
sub
cmp
(bad)
(bad)
push
loope
adc
xchg
es
jae
shl
jo
adc
push
adc
push
pusha
sbb
cmp
cdq
jnp
mov
inc
jno
inc
push
dec
cmp
xor
add
call
xchg
inc
mov
rol
movs
(bad)
aas
lock
jge
push
out
dec
inc
mov
push
inc
jbe
jbe
mov
call
add
pop
mov
(bad)
push
sub
loopne
xchg
ret
push
fadd
inc
jo
lods
jge
les
mov
inc
stos
adc
arpl
push
test
inc
and
push
mov
arpl
jnp
outs
pushf
cmp
test
push
call
pop
or
sahf
mov
adc
retf
push
stos
jmp
and
cmp
cmc
mov
jmp
sahf
test
pop
mov
out
and
fdivp
stos
sbb
jno
sub
add
retf
in
(bad)
pop
add
push
jp
mov
mov
mov
mov
(bad)
(bad)
xor
out
push
ficomp
out
es
cmp
adc
jg
ror
pop
int
mov
pusha
call
rol
sub
cmps
adc
push
sub
test
ss
call
das
outs
jmp
cmc
push
mov
mov
push
mov
jno
add
or
mov
js
add
mov
(bad)
lock
xchg
pop
mov
rcl
adc
imul
into
sub
fsub
xchg
(bad)
pop
aad
push
sub
jae
repnz
xor
jnp
out
shr
mov
and
adc
push
in
xchg
jmp
pop
(bad)
sar
mov
inc
icebp
xor
adc
fild
adc
lock
sbb
in
popa
movs
in
scas
mov
ins
rep
mov
bound
cmps
and
pop
xchg
loop
pop
sub
xor
pop
push
out
sub
pusha
dec
mov
mov
or
lahf
adc
pop
adc
lahf
sbb
xchg
inc
mov
js
dec
pop
stc
movs
lods
jmp
mov
stc
sbb
mov
movs
mov
ret
cdq
pop
dec
rcl
(bad)
jle
ret
(bad)
(bad)
pop
mov
pushf
and
loopne
ss
mov
test
mov
and
les
pop
js
jecxz
mov
jae
mov
ret
adc
push
enter
retf
mov
mov
fwait
pop
add
add
int
ret
inc
jmp
pop
or
call
icebp
jge
adc
ret
gs
rol
dec
inc
fcomp
loopne
cmps
xor
jns
jge
pop
(bad)
fdiv
or
jne
rol
icebp
jmp
ins
ret
shl
test
push
cmp
mov
adc
or
xchg
adc
or
lahf
test
xchg
add
push
loop
fild
mov
sbb
cmp
jmp
add
retf
arpl
or
mov
int3
aas
stos
out
and
and
(bad)
jbe
xor
or
jmp
cmp
cmps
rol
dec
cmp
xchg
test
mov
pop
das
jp
sub
sbb
(bad)
push
xchg
inc
int3
fldln2
daa
push
mov
fisubr
jmp
mov
in
movs
stc
cmps
(bad)
inc
push
test
ins
xor
pop
movs
idiv
das
lds
mov
mov
sub
fist
push
or
test
cmp
fsubr
(bad)
cwde
jmp
sti
sub
and
std
push
outs
ds
pushf
mov
lods
dec
ja
xchg
push
and
push
push
stos
gs
and
or
hlt
cwde
and
(bad)
pusha
push
push
sub
loop
push
push
sbb
scas
cwde
mov
adc
sbb
rcl
repz
repz
repnz
xor
mov
rcl
js
test
xchg
adc
dec
in
jmp
outs
stos
data16
push
rol
retf
mov
out
push
out
xchg
mov
leave
inc
push
clc
xor
jecxz
fwait
pop
pop
fsubr
cwde
pop
(bad)
xchg
xor
dec
mov
adc
push
push
daa
outs
adc
repnz
out
xor
add
repz
dec
sbb
adc
vmovq
or
test
loope
mov
ss
es
push
mov
mov
mov
(bad)
call
rcr
fldenv
jo
push
pop
js
jmp
sbb
fs
mov
fwait
aas
shr
das
or
popa
jns
in
pushf
cmp
jne
xor
in
out
jl
mov
or
loop
test
sub
mov
loopne
dec
scas
aas
shl
neg
outs
iret
imul
xor
fdiv
push
jge
out
sbb
jne
stos
pop
idiv
mov
xlat
hlt
(bad)
popa
loope
ss
out
xor
pop
jns
cmc
mov
lahf
inc
pop
out
test
aaa
jns
add
mov
dec
test
enter
or
int
fld1
std
(bad)
in
or
sti
inc
cmp
sbb
jp
mov
xor
scas
mov
xor
enter
jge
add
ss
cmp
(bad)
push
push
test
(bad)
(bad)
lea
dec
dec
(bad)
ret
mov
mov
dec
xor
scas
pop
push
sbb
cmps
push
sub
call
data16
pop
xor
jns
cwde
retf
mov
lds
js
dec
push
(bad)
(bad)
aad
dec
push
nop
cmp
(bad)
or
or
xchg
pop
ds
dec
and
xor
push
inc
ffreep
push
ret
mov
in
jle
(bad)
pop
movs
jmp
cmc
call
mov
test
xor
sbb
frndint
and
push
add
and
lds
popa
adc
idiv
mov
cmp
dec
clc
fcmovne
mov
imul
retf
loope
push
push
inc
cmps
mov
xor
in
(bad)
in
mov
movs
shr
jae
cli
push
sub
stos
test
push
xor
hlt
or
test
pop
test
push
daa
jbe
addr16
xor
xchg
lods
das
fsubr
xor
dec
inc
ret
cmp
push
ss
or
mov
sbb
mov
in
addr16
sbb
lea
je
sti
xor
xchg
mov
jl
push
out
push
mov
popf
outs
jmp
in
outs
and
mov
jl
and
cli
sub
pop
xor
cmp
pop
lahf
ret
shl
or
cs
lods
push
push
cld
in
dec
pop
push
sub
sti
fdivr
pop
xor
bound
clc
xor
mov
cli
shr
hlt
mov
pop
(bad)
sbb
xchg
call
ja
or
jge
ss
pop
(bad)
mov
and
cmp
jne
sub
mov
(bad)
jmp
out
mov
adc
cmp
adc
pop
mov
dec
in
sbb
lea
or
loop
mov
sar
xor
cdq
dec
jo
cmp
(bad)
ins
xlat
or
aam
dec
cmp
add
(bad)
(bad)
fdivp
iret
inc
aaa
data16
mov
aad
fild
repz
push
fimul
scas
xlat
jne
jns
xchg
push
sub
(bad)
pop
shl
pushf
mov
and
jmp
repz
aaa
fldcw
xchg
movs
sbb
mov
pop
test
pop
xor
fucomip
push
loopne
scas
stos
adc
test
mov
xor
(bad)
cmp
ins
(bad)
pop
push
inc
push
(bad)
mov
loope
inc
js
fdivr
xor
test
scas
jmp
dec
mov
xor
mov
loope
sbb
or
int3
cmp
or
or
cmps
inc
mov
dec
adc
cmc
pushf
rol
pusha
mov
nop
sub
scas
nop
cmc
or
aad
xor
fsub
sti
add
dec
call
aam
loop
and
cdq
jns
adc
jbe
arpl
mov
lds
popa
jns
dec
or
or
idiv
mov
mov
jae
sub
ror
sbb
or
mov
push
stc
arpl
loope
mov
stos
lea
cmps
sub
ret
not
cmps
cdq
inc
les
xchg
shl
dec
sbb
sar
mov
push
cmc
fwait
stos
stos
ds
push
mul
sub
test
movs
mov
cmc
out
mov
not
or
mov
(bad)
rol
in
mov
mov
sbb
les
neg
pop
push
les
pop
mov
jns
les
or
in
sbb
ja
push
ret
jbe
idiv
sar
mov
pop
es
stos
pop
std
push
stc
and
test
push
sbb
lds
jmp
push
(bad)
loopne
cmc
xchg
cmp
cli
enter
(bad)
ja
push
outs
and
pushf
arpl
cmp
pushf
xor
add
idiv
cmp
jecxz
sub
cmp
mov
movs
imul
daa
and
bound
fisub
fld
pop
repz
push
pop
mov
xchg
pop
mov
mov
stos
fwait
out
fwait
stc
mov
loope
mov
stos
movs
(bad)
fdiv
cld
retf
inc
aam
cmp
mov
scas
cwde
ins
out
nop
in
rol
dec
xlat
jnp
push
aam
addr16
test
movs
js
and
mov
push
imul
fcom
or
ror
cwde
mov
int
push
sbb
ds
push
xchg
fisubr
mov
add
les
push
dec
pushf
mov
(bad)
mov
cld
std
mov
cmp
mov
push
mov
add
into
jg
pop
(bad)
movs
and
fcmovb
or
ret
cmp
sti
cmp
outs
cdq
mov
iret
push
pop
sub
adc
das
mov
xchg
or
imul
push
dec
mov
imul
sbb
jb
sbb
lods
sti
mov
mov
or
inc
jg
xchg
xor
or
xchg
xor
mov
movq
nop
fsubr
rcl
add
ret
test
jne
lods
jno
pop
mov
adc
jmp
push
lods
inc
(bad)
ins
out
pop
mov
popa
pop
popf
cmp
je
or
mov
retf
mov
fisub
jne
cli
(bad)
jge
jle
pop
mov
mov
pop
imul
push
xor
cli
ins
in
cmp
shl
mov
dec
add
mov
hlt
inc
aas
fucomi
mov
adc
sub
int3
jmp
popa
cmps
xor
pusha
clc
jno
push
outs
popf
lock
fs
jl
enter
mov
sbb
bound
inc
lds
ror
les
jl
mov
hlt
in
js
pop
fld
sub
test
sub
jl
(bad)
(bad)
(bad)
movs
push
out
add
pxor
cmp
mov
sbb
cld
mov
mov
sbb
out
aaa
jno
and
(bad)
and
adc
and
ss
mov
popf
mov
shr
push
loope
dec
ror
and
jl
or
cmps
pushf
pop
fld
pusha
stc
and
jno
xchg
or
lods
cdq
les
inc
add
cmps
enter
jae
lahf
inc
stos
push
jb
jnp
(bad)
adc
xchg
dec
retf
ins
or
mov
inc
mov
into
jne
push
into
sbb
and
dec
inc
daa
mov
(bad)
xor
neg
mov
cli
out
sub
pop
lds
jno
and
div
(bad)
not
cmp
inc
rol
out
je
repnz
xchg
push
call
pop
push
sub
cmp
pop
imul
je
shl
stc
bound
inc
and
and
jae
mov
(bad)
movs
retf
leave
gs
xchg
je
xor
pop
fist
mov
test
add
(bad)
(bad)
cmp
cmp
cmp
je
dec
push
or
scas
popf
aas
daa
inc
push
into
or
hlt
mov
cmp
mov
test
cld
dec
push
xchg
fsub
and
stos
xor
jp
adc
imul
rol
sub
mov
inc
jmp
push
es
fsub
clc
pop
je
(bad)
pop
fdivp
inc
inc
add
jle
lods
pop
das
or
jae
shl
(bad)
clc
and
outs
xchg
mov
loope
jl
mov
or
sub
adc
loopne
movs
aas
jl
repz
dec
dec
ins
jae
sub
xchg
lock
sub
pushf
or
sbb
and
or
aas
dec
enter
repnz
shl
jae
ds
jnp
inc
in
and
mov
movs
std
addr16
sub
mov
shl
cmp
sbb
aas
mov
xchg
repz
mov
sbb
mov
ret
jno
and
loope
mov
sbb
cmps
inc
js
xchg
mov
xchg
dec
fimul
mov
and
push
ficom
(bad)
pop
or
call
push
xchg
rcr
sub
push
or
mov
imul
cli
loopne
je
loop
mov
aaa
imul
sbb
dec
test
xchg
jns
lock
jbe
mov
xchg
int3
adc
jb
dec
xchg
jno
je
inc
mov
fild
popa
call
push
cld
xchg
push
and
sub
les
int3
pop
pop
pop
in
int3
ror
jl
pop
sub
shr
xchg
repnz
ins
push
shr
xchg
xor
arpl
inc
and
in
out
or
outs
lock
cmp
add
pop
or
mov
and
mov
xchg
addr16
mov
sti
cmp
jmp
lea
or
add
fbstp
mov
mov
and
push
mov
or
mov
lahf
ror
xlat
jae
int
fbstp
in
in
or
adc
lahf
inc
push
jle
push
pusha
mov
xor
jmp
test
pop
lods
mov
ret
sbb
(bad)
das
xchg
repnz
cwde
sub
and
xor
jmp
push
addr16
(bad)
outs
inc
jns
scas
ds
and
xor
push
inc
(bad)
push
adc
das
test
jmp
fidiv
outs
mov
fcmovbe
xchg
in
sbb
iret
shl
fmul
add
test
arpl
dec
fcom
cmps
cmc
cmp
xchg
add
push
clc
mov
mov
imul
popf
jle
pop
movs
cmp
test
jg
leave
jmp
call
pop
(bad)
push
mov
cmp
test
ja
sub
inc
cwde
scas
std
sbb
nop
cdq
adc
bound
aas
dec
jge
xlat
hlt
daa
sar
frstor
pop
or
enter
jnp
movs
clc
dec
jbe
push
std
mov
pop
xor
ds
cmc
mov
lea
movs
cli
xor
out
dec
addr16
xchg
in
stc
inc
xor
dec
add
jl
lods
xor
or
xchg
mov
jo
ins
hlt
cmp
cld
inc
cdq
jb
push
adc
loop
xor
mov
xchg
sub
mov
sub
das
popa
inc
clc
push
shl
pop
mov
push
cmp
mov
mov
ret
xchg
jle
sbb
dec
inc
out
movs
mov
push
inc
mov
mov
add
or
mov
stos
enter
xchg
ins
inc
cmp
mov
xlat
jmp
fld
cmp
push
div
out
cli
push
mov
mov
maxps
addr16
call
lds
popf
popa
cmp
sbb
sbb
jge
and
add
fstp
mov
icebp
xchg
sub
xchg
and
xchg
sbb
cmp
daa
inc
sbb
pushf
jnp
mov
mov
pusha
call
int3
jae
jb
mov
cs
out
stos
mul
push
xchg
test
leave
push
xchg
xor
or
cmp
pop
stc
xchg
popf
cmp
(bad)
fadd
fbld
xor
(bad)
sar
fbstp
cwde
out
xchg
mov
ja
xchg
sbb
jge
mov
out
ja
icebp
test
mov
push
popa
mov
or
cli
and
dec
(bad)
push
test
adc
and
inc
sar
sbb
xchg
loop
das
rcr
dec
pop
sbb
add
dec
inc
shl
jecxz
mov
sub
inc
clc
sbb
cmp
cmp
push
popa
xchg
sub
ins
sbb
xor
test
int
cmc
stos
push
addr16
daa
and
or
push
or
sbb
mov
or
sbb
sub
call
pop
cmps
repnz
mov
jb
popf
pop
adc
xchg
mov
cmps
movs
enter
cdq
test
iret
rol
add
xor
je
push
xlat
push
mov
jecxz
sub
int
inc
sub
fsubr
fistp
jae
fwait
aad
(bad)
xchg
inc
lods
dec
xor
cmps
push
leave
add
mov
stc
cmps
les
(bad)
mov
mov
fcmove
sti
ds
pushf
add
inc
jl
adc
sub
pop
mov
jp
dec
imul
or
ja
sbb
inc
pop
xchg
movs
leave
arpl
ss
sbb
ret
into
call
xchg
mov
sub
sbb
dec
int
lock
adc
mov
sbb
pop
push
mov
imul
test
loopne
cmp
cmp
ins
cmps
mov
outs
cmp
ret
dec
jo
add
or
std
jle
mov
pusha
rcl
in
jb
mov
jg
loop
aad
int
mov
mov
inc
imul
jp
xchg
xchg
jg
scas
cmp
imul
add
je
and
jae
xor
mov
cs
jns
dec
or
push
dec
fisttp
cs
int3
adc
mov
mov
adc
push
cdq
(bad)
in
addr16
call
pop
xchg
push
fnsave
sbb
ret
adc
mov
mov
(bad)
sbb
loop
(bad)
movs
loope
pop
add
jle
out
imul
retf
jb
aad
push
rcr
js
outs
scas
mov
push
fwait
ja
movs
int3
cmp
clc
jmp
retf
inc
(bad)
jo
dec
xor
std
movs
fldcw
mov
mov
sbb
xor
sub
pop
in
in
inc
(bad)
sub
movs
js
push
jg
inc
pop
test
ret
mov
call
xor
xchg
out
ds
ds
jmp
test
test
push
mov
jmp
jb
arpl
adc
repz
aam
mov
push
in
pusha
rcl
cmps
mov
je
adc
push
popf
xlat
out
ror
loop
call
lods
outs
sahf
dec
push
ins
add
push
xchg
into
jae
aad
jecxz
test
pop
and
mov
inc
push
jp
phsubd
mov
jae
mov
xchg
call
fucomip
les
sub
push
push
add
adc
aas
and
mov
cmps
(bad)
loop
in
pop
stc
xor
jg
rcr
test
mov
inc
out
pop
mov
or
xor
lods
lods
cmp
jb
sar
xchg
sub
pop
mov
loope
jo
mov
loope
call
loopne
(bad)
lods
sub
sbb
cld
test
mov
fcom
iret
jmp
pop
repnz
js
mov
clc
jno
xchg
jge
das
outs
fwait
out
jo
adc
test
repz
mov
sbb
push
stc
add
mov
arpl
lds
push
push
adc
enterw
ret
test
in
pop
pop
jno
iret
xchg
add
jns
jb
jnp
in
mov
jge
inc
lods
mov
das
add
lahf
lock
mov
inc
mov
arpl
aad
and
ins
repnz
pop
gs
imul
ins
mov
push
repnz
pop
add
lds
sbb
and
stos
aam
sub
dec
(bad)
scas
mov
pop
lods
call
sub
pop
mov
dec
les
or
mov
push
cmps
mov
jns
into
std
jne
stos
loop
xor
in
dec
xchg
dec
adc
adc
adc
jg
rol
enter
movs
idiv
jg
mov
pop
aam
or
das
into
jge
mov
sahf
or
stos
enter
loopne
xchg
mov
loopne
fisub
jns
std
mov
lds
rcl
pop
cld
(bad)
xchg
ja
lods
jge
jge
rcr
inc
daa
pusha
xlat
shl
inc
addr16
mov
cmps
movs
cdq
loop
sbb
(bad)
out
mov
sbb
jp
out
xchg
fnstenv
sub
add
shl
mov
pop
and
test
fs
inc
and
pop
fwait
xchg
(bad)
ins
cdq
js
or
lea
mov
pop
fcom
mov
add
dec
lock
retf
push
xor
cmp
bound
call
inc
push
mov
cmp
adc
js
mov
xchg
outs
ins
into
add
adc
mov
sbb
add
sub
retf
jb
mov
popf
scas
je
pop
ret
dec
pusha
std
xor
cmps
mov
or
retf
fcom
imul
and
test
cmps
loop
mov
dec
leave
sub
popf
push
add
loop
inc
cwde
xchg
outs
cmc
sub
xor
ins
mov
loope
loope
xor
xor
out
push
je
push
push
fst
mov
adc
sub
(bad)
xor
or
addr16
mov
and
mov
nop
mov
mov
mov
repnz
xchg
cmps
and
stc
stc
enter
neg
mov
add
pop
dec
jmp
jno
data16
cmp
and
je
jne
or
jbe
sbb
mov
mov
xchg
xchg
sub
call
or
push
ror
rcr
cmp
and
cdq
iret
sub
fcomp
and
push
dec
xchg
test
jno
sbb
dec
inc
stos
dec
sbb
jnp
loope
cmps
xor
pusha
stos
bswap
mov
jmp
push
adc
leave
movs
sti
push
xchg
and
mov
sti
lods
popf
push
xor
pop
dec
ja
mov
sub
fs
out
cmp
adc
inc
loopne
cmps
or
pop
xor
jbe
xchg
clc
push
sub
fild
fild
pop
push
addr16
int
nop
stc
imul
or
test
push
mov
scas
mov
out
cwde
rol
jmp
fadd
xor
jl
(bad)
fist
es
mov
and
fsubr
jecxz
ja
push
push
push
adc
test
retf
inc
mov
repz
push
lea
pop
inc
sbb
jmp
inc
out
sbb
jns
jmp
fwait
pop
jne
sub
iret
mov
iret
xor
je
cmc
sbb
(bad)
sub
jle
addr16
add
movs
es
inc
je
in
ror
test
(bad)
repz
(bad)
and
in
mov
in
push
clc
mov
pop
frstor
popa
jmp
vpand
(bad)
lahf
mov
mov
jo
and
push
pop
xchg
inc
mov
add
mov
lds
mul
inc
push
daa
loope
mov
test
mov
xchg
test
mov
mov
clc
movs
add
or
jg
jmp
adc
push
inc
inc
fstp
or
pop
add
push
cwde
lock
pop
pop
xchg
xchg
call
push
dec
(bad)
(bad)
daa
scas
sub
call
test
fdiv
loope
push
mov
fs
mov
popa
xchg
repnz
imul
stos
xor
push
or
imul
ret
aam
xor
inc
adc
scas
popa
fs
dec
pop
mov
repnz
popf
lea
movs
xor
pop
jne
sbb
inc
adc
mov
lods
cmp
sub
add
cmp
push
mov
dec
dec
loope
(bad)
mov
mov
mov
idiv
xor
sub
repz
push
mov
jne
hlt
push
adc
in
stos
adc
into
retf
add
or
jmp
rcr
sub
je
xchg
jmp
and
leave
mov
or
push
or
adc
clc
and
sub
or
pop
retf
(bad)
(bad)
sub
popf
std
fdiv
sbb
ins
fs
icebp
mov
leave
xor
stos
and
adc
mov
mov
mov
and
add
xchg
addr16
adc
and
int
push
in
pop
push
pop
pop
mov
fxch
ret
popf
outs
fcmove
lahf
std
mov
out
xor
add
pop
and
adc
push
stos
fstp
mov
jg
int
cmp
out
jecxz
inc
sbb
scas
sbb
fild
jbe
sar
xchg
fcmovb
bnd
in
call
ss
cmp
push
sahf
clc
fcomp
xor
cs
xchg
int3
mov
push
pop
pop
cmp
xor
sub
jne
jg
test
in
arpl
cmp
add
dec
jmp
adc
and
cld
mov
inc
stos
cmp
sahf
xchg
sbb
call
call
mov
mov
sub
test
imul
imul
shr
fisub
(bad)
xchg
mov
and
push
pop
and
push
(bad)
cmc
lods
dec
ja
retf
loope
fcom
stos
loop
or
movs
fcom
jae
lahf
mov
fimul
fmul
push
and
sti
fisttp
bound
(bad)
mov
sub
push
dec
adc
xor
leave
cwde
loop
mov
push
fisttp
arpl
test
jne
test
xchg
jmp
sbb
jecxz
dec
arpl
sub
(bad)
cmp
je
neg
(bad)
sbb
lods
ss
jmp
sub
dec
into
pop
xchg
and
pop
mov
and
push
cwde
add
xchg
push
fdivr
int
fadd
test
fisubr
cmp
sbb
imul
sahf
mov
repz
adc
into
loope
inc
shl
jp
jp
mov
pop
cld
cmps
add
scas
inc
jle
mov
mov
sbb
push
jp
shl
dec
lods
adc
cwde
cmps
mov
cmovs
out
inc
push
loop
dec
js
daa
movs
arpl
test
jmp
xchg
std
mov
jmp
mov
out
ret
xchg
fsubr
fbld
movs
jp
inc
aad
push
push
fwait
xor
adc
pusha
movs
inc
jg
jne
cmp
mov
push
sub
xchg
(bad)
shr
jmp
sbb
inc
js
fs
icebp
add
push
pushf
shl
jb
inc
ja
(bad)
push
sti
sub
movs
arpl
push
mov
cmp
imul
arpl
dec
fidivr
cdq
xchg
lods
mov
repz
and
test
jns
cmc
add
es
enter
test
push
mov
into
adc
in
enter
dec
daa
adc
inc
sbb
dec
adc
add
or
push
bswap
sub
dec
js
aaa
mov
mov
mov
pop
aam
jmp
add
repz
mov
fcmovb
pusha
addr16
mov
dec
jae
clc
xchg
xor
jmp
jbe
pop
and
xor
(bad)
pushf
jge
sbb
inc
mov
(bad)
jecxz
jecxz
sub
mov
mov
ret
lods
add
sub
and
lods
jbe
and
dec
inc
call
movs
xchg
out
repnz
fwait
(bad)
fistp
stos
push
xchg
mov
out
dec
inc
sbb
adc
xor
sar
lods
pop
jge
jns
add
push
sti
xlat
jmp
mov
scas
sar
mov
cld
inc
ret
push
int3
test
and
nop
(bad)
stc
add
pop
xchg
pop
cdq
enter
push
sbb
inc
mov
xchg
stos
ret
pop
mov
fadd
test
scas
push
lea
aad
std
icebp
xor
push
mov
std
lods
pop
add
div
fstp
mov
and
pop
adc
into
pop
sahf
mov
leave
imul
imul
out
mov
mov
ret
lahf
xchg
adc
arpl
jb
in
pusha
cmp
push
ret
lods
mov
repz
mov
dec
retf
mov
pop
arpl
(bad)
and
int3
jnp
xor
jmp
lods
sub
repnz
sbb
mov
lock
mov
sbb
xor
aaa
cwde
int3
(bad)
pop
repnz
sub
iret
pop
jle
ss
and
rol
les
inc
aaa
inc
outs
lea
out
into
fs
xchg
push
inc
test
jmp
fnstsw
sti
cmp
movs
dec
push
add
cld
push
sub
aaa
mov
add
arpl
jbe
sub
(bad)
xchg
lods
aad
jmp
adc
stos
ja
loop
cmp
jo
addr16
cmp
movs
mov
inc
lods
aad
aaa
push
or
jmp
ret
pop
jle
mov
inc
mov
sbb
mov
ds
add
icebp
push
jecxz
mov
push
sar
mov
adc
pop
repz
sbb
xchg
mov
les
pop
fadd
in
mov
xlat
in
mov
pop
add
pop
lods
fnstcw
ret
aas
iret
sbb
xor
inc
cmp
loop
mov
fwait
mov
or
mov
lahf
pop
sbb
inc
inc
adc
cmps
jge
sub
iret
fbstp
jmp
in
aas
pusha
lods
cwde
mov
cli
xchg
adc
jae
pop
xor
repz
and
pop
dec
icebp
lods
test
movs
jge
or
xor
aam
and
pop
mov
cmp
push
(bad)
not
inc
sub
xchg
add
mov
cdq
sbb
pop
dec
or
sub
dec
fldenv
pop
test
arpl
fist
shr
(bad)
sub
ja
std
scas
sub
rcr
sub
jecxz
dec
jl
mov
inc
lds
push
mov
lock
mov
or
rcl
in
adc
not
dec
rol
test
fs
inc
in
lds
xor
rcr
mov
shl
outs
xlat
cmps
ret
xchg
add
leave
fnstsw
jb
popf
cdq
sub
add
inc
ins
inc
or
out
fsubr
movs
and
sub
out
fcom
jmp
or
pusha
or
inc
mov
shl
and
add
shl
and
push
shr
repz
rcr
jns
sub
fs
lods
dec
jne
ficomp
aam
outs
jns
ins
adc
push
jno
xchg
gs
mov
mov
lea
test
fcomip
cmps
inc
push
inc
mov
mov
cli
das
sbb
xchg
gs
lea
or
arpl
adc
lds
and
inc
add
scas
mov
imul
outs
inc
adc
out
xor
sub
ins
jae
xchg
ins
mov
dec
adc
(bad)
loopne
and
push
dec
dec
imul
push
push
inc
push
inc
das
pop
inc
push
and
ins
popa
mov
(bad)
xchg
retf
je
mov
adc
ins
pop
jbe
jl
dec
add
les
std
dec
push
les
sub
cmove
xor
add
add
and
cdq
je
lods
not
cmp
ss
mov
(bad)
xchg
sbb
in
mul
test
int3
inc
(bad)
xor
scas
sbb
jmp
dec
push
bound
scas
mov
dec
dec
jge
int3
nop
xchg
bound
jmp
inc
mov
lahf
jno
mov
pop
or
adc
add
xchg
push
push
push
push
xor
out
xchg
iret
ja
cld
std
sahf
xor
call
aas
push
mov
in
add
xor
leave
mov
je
mov
pop
hlt
cmp
ins
ret
sbb
inc
setbe
stc
(bad)
es
outs
jmp
out
cwde
stos
mov
inc
xor
jmp
dec
not
(bad)
ja
mov
out
push
adc
cdq
sbb
push
fucomip
sub
imul
mov
inc
mov
in
mov
imul
fs
adc
mov
das
scas
das
movnti
pop
cmp
xchg
std
jp
mov
jne
stos
or
icebp
in
iret
fcom
adc
mov
loope
(bad)
cmc
data16
and
ja
in
hlt
sbb
test
adc
push
rol
sbb
adc
sub
lds
inc
add
or
das
ror
mov
inc
cmp
into
pusha
je
push
or
ret
sub
or
mov
fwait
aaa
mov
test
sbb
or
mov
sub
fldcw
rcl
dec
jmp
repz
dec
lea
cmp
pusha
pop
pop
dec
loopne
dec
inc
lods
scas
pop
jnp
ins
lock
add
dec
xor
rcr
imul
les
call
mov
adc
xchg
sub
loop
loope
add
jecxz
or
addr16
adc
pop
in
or
je
push
jbe
test
int
mov
push
xchg
fwait
inc
fsub
outs
xchg
fs
cld
aad
lods
repnz
rol
xor
cvtps2pd
sub
pop
inc
movlps
into
daa
add
xchg
ret
xchg
(bad)
fwait
dec
adc
dec
add
mov
push
cwde
mov
jmp
sub
xor
idiv
int
in
xor
je
mov
pusha
adc
cmp
or
mov
cmc
ret
loop
out
push
test
add
adc
ins
aaa
mov
mov
(bad)
adc
add
sub
inc
dec
icebp
jnp
and
outs
pop
call
mov
inc
pop
jl
pop
lock
aaa
sahf
ins
in
sub
fisubr
push
and
cmp
mov
mov
dec
call
pop
jge
xor
inc
ret
push
adc
add
(bad)
xchg
lds
sub
lea
sbb
fisub
jl
pop
jns
sahf
push
add
mov
adc
jns
aas
in
(bad)
or
jp
push
push
jmp
scas
jmp
nop
clc
push
mov
daa
fisub
push
mov
stos
cmps
movs
xchg
and
mov
dec
cmp
ret
jecxz
imul
adc
fld
test
mov
dec
cmps
inc
jge
out
sar
lds
je
scas
ins
push
cmps
cmp
movs
mov
mov
icebp
push
(bad)
std
repnz
stos
xor
sub
mov
adc
mov
std
(bad)
retf
stc
int3
movs
pop
cdq
popf
xor
or
inc
fs
mov
fistp
scas
fiadd
outs
mov
mov
pushf
xchg
cmp
cs
xchg
or
shl
cmp
and
arpl
rol
adc
rcl
xchg
bound
pop
lods
sub
(bad)
daa
bound
add
sub
test
jmp
icebp
icebp
push
push
ds
pop
mov
xchg
add
aas
dec
lea
pop
add
sub
leave
add
pop
daa
es
bound
fs
ins
in
and
pop
cmp
add
inc
(bad)
popa
std
mov
ror
mov
sbb
popa
mov
call
adc
jnp
mov
std
cmp
xor
shr
dec
xor
push
and
ss
movs
jne
or
mov
sub
cwde
xor
jbe
loope
loop
ins
dec
pcmpeqd
inc
xlat
mov
shl
(bad)
cmp
(bad)
push
adc
or
hlt
mov
mov
fisttp
sub
adc
xchg
(bad)
lods
aas
popf
add
lods
inc
mov
test
(bad)
push
xor
(bad)
fstp
push
jl
mov
sub
mov
je
sub
or
cwde
xchg
cs
sbb
mov
jb
mov
repnz
xchg
enter
ret
je
jecxz
pop
mov
push
or
movs
call
vxorps
test
(bad)
mov
and
movs
imul
add
jmp
lahf
push
(bad)
ins
or
(bad)
outs
pop
adc
and
mov
xchg
loope
dec
(bad)
mov
add
pop
cmp
pop
cwde
jp
dec
cld
daa
arpl
aad
js
dec
xchg
dec
pop
jg
sar
iret
mov
xor
call
jb
xchg
sbb
jg
xor
data16
in
repz
xlat
int3
fdiv
loopne
in
jbe
or
jge
push
pop
cdq
call
xlat
jp
and
adc
mov
lock
(bad)
xor
or
xor
aaa
mov
test
in
scas
out
into
icebp
fsubp
sbb
mov
shl
cmc
not
inc
sahf
xor
je
push
pop
sbb
call
inc
stos
mov
ret
sub
xchg
cmp
mov
pop
jp
push
xchg
xor
movs
mov
add
xchg
xchg
movs
add
inc
enter
lds
cmps
inc
sub
inc
mov
arpl
adc
fidiv
pop
lahf
jle
and
mov
jnp
sbb
mov
and
mov
jno
fwait
mov
pop
jb
(bad)
push
jmp
sbb
mov
in
enter
out
adc
outs
or
cdq
sub
mov
inc
adc
test
dec
cld
pop
icebp
sub
xchg
ja
cmp
push
or
and
movs
fmul
sti
fsub
vpmuludq
xor
sbb
and
xor
shr
pusha
loop
cs
scas
sbb
in
inc
and
push
popf
mov
nop
mov
pop
nop
pop
ret
popf
adc
mov
add
cs
ins
pushf
inc
mov
push
sub
idiv
mov
and
aad
fnstsw
xlat
dec
aad
xchg
popf
scas
daa
loope
sahf
sub
mov
or
cmps
add
adc
dec
(bad)
fidivr
shl
pop
sbb
outs
stc
outs
clc
mov
or
(bad)
mov
sbb
outs
pop
test
retf
adc
cld
mov
mov
jp
push
push
adc
enter
out
in
cmp
mov
pop
push
xchg
xor
add
pop
shr
ds
repnz
cmp
dec
aad
add
cmp
pop
ffree
push
idiv
shr
xor
cmp
cmp
ins
cmp
je
sbb
mov
inc
add
in
outs
mov
div
aam
and
xor
call
mov
or
test
mov
ret
call
in
sbb
out
push
test
mov
fs
cmps
cmps
dec
cmps
mov
mov
jbe
pusha
scas
push
sub
and
mov
jo
sbb
sbb
or
loope
cld
cli
jae
(bad)
mov
pop
sub
call
mov
out
cmovno
cmp
cmp
push
ret
scas
icebp
sbb
sbb
or
cdq
mov
add
inc
clc
xchg
adc
fmul
pop
xor
in
lea
hlt
sbb
add
loope
dec
loop
test
lock
fldenv
mov
jge
xchg
sbb
dec
mov
shl
test
push
into
scas
aaa
ss
(bad)
fiadd
xchg
in
rcr
add
adc
retf
aad
mov
into
js
in
sub
jns
lds
repnz
(bad)
outs
jo
mov
inc
aaa
adc
adc
aad
cli
daa
pushf
and
or
mov
int
push
cmp
add
das
push
leave
add
cmc
es
sbb
pop
sub
mov
push
sbb
adc
mov
(bad)
xor
stos
arpl
mov
cmc
out
inc
out
jo
sub
inc
cbw
sahf
jnp
into
mov
sbb
mov
loope
jnp
lea
cmp
dec
aaa
jbe
outs
mov
stos
in
hlt
cmps
xor
shr
out
leave
push
dec
je
and
or
mov
retf
jns
mov
adc
adc
retf
xchg
fadd
mov
mov
scas
sbb
das
or
sbb
jle
sub
sar
mov
scas
pushf
inc
into
stos
nop
push
push
pop
shr
mov
xchg
inc
jge
int
push
jo
movs
dec
sub
jb
lea
hlt
cli
(bad)
mov
aaa
inc
mov
mov
cmp
xchg
mov
bound
pop
jbe
aas
sbb
push
push
xor
pop
imul
mov
test
out
push
mov
push
outs
add
jne
sub
xlat
or
jbe
sbb
jno
retf
jno
and
retf
pop
xchg
dec
xchg
lea
test
jp
imul
ja
fdivr
push
mov
(bad)
cld
cmps
mov
xor
leave
aad
retf
arpl
or
cmps
(bad)
sbb
adc
add
in
pop
lea
push
mov
lods
rol
jns
mov
push
loope
ret
mov
adc
stos
pop
inc
push
(bad)
xchg
test
mov
je
add
clc
jae
pop
adc
add
jp
xchg
jecxz
or
push
mov
movs
mov
aad
push
and
addr16
(bad)
mov
aas
push
mov
ss
lea
(bad)
adc
int
fdiv
lods
test
gs
jg
out
fidiv
aas
pop
inc
loope
add
popf
mov
ja
(bad)
pusha
div
xchg
jno
inc
pop
pop
pop
fwait
mov
cld
cmp
addr16
outs
mov
mov
push
js
mov
pusha
lahf
and
(bad)
jl
ret
xlat
and
lods
inc
clc
retf
movs
push
enter
inc
dec
xchg
adc
fwait
pop
fidiv
cmp
ins
cmp
imul
fiadd
mov
pusha
sub
jmp
ins
sub
cli
in
fstp
pop
push
and
xchg
add
inc
mov
inc
mov
inc
xor
lahf
adc
fwait
scas
clc
dec
ins
sub
pop
test
scas
ss
xor
addr16
mov
jmp
stc
test
xchg
inc
(bad)
cld
aas
sub
mov
jae
rol
inc
mov
sbb
pop
mov
loopne
xlat
aas
ss
sub
daa
cmp
pop
push
adc
data16
mov
fdiv
inc
(bad)
jmp
mov
jmp
stos
push
fdivrp
mov
dec
mov
add
pop
sub
(bad)
cmps
fnstenv
jp
lds
std
mov
repz
push
dec
sbb
mul
fucomp
jae
bound
sbb
and
and
jp
ret
and
cmp
pop
addr16
addr16
fldcw
inc
mov
aas
cmps
inc
sub
push
fadd
add
int3
sub
pop
xor
outs
inc
mov
popa
sbb
inc
inc
test
pop
dec
in
out
out
js
adc
mov
push
sbb
ja
out
push
push
je
call
mov
mov
imul
dec
cmc
loop
int
call
jne
jns
movs
dec
adc
inc
aas
rol
or
lds
add
xor
inc
std
aam
(bad)
scas
cmp
lods
std
or
(bad)
sahf
fadd
cmps
movs
jmp
push
cmp
xchg
test
mov
mov
pop
nop
mov
cdq
xor
(bad)
lods
mov
cwde
aad
and
movs
out
scas
jl
cmp
jl
jmp
ss
test
mov
mov
adc
out
addr16
ins
ret
xor
aaa
mov
mov
mov
loope
stc
and
pop
inc
fwait
movs
dec
pop
add
inc
fcmovnb
jo
xchg
pop
aas
jl
mov
adc
jp
mov
mov
and
je
push
push
adc
mov
inc
or
sahf
sbb
dec
xchg
out
seto
outs
dec
(bad)
mov
adc
xor
push
nop
lock
int3
scas
loop
or
iret
imul
fisub
gs
test
stc
pop
shl
pop
hlt
mov
pop
push
mov
or
xor
jge
clc
clc
bound
inc
push
jmp
sti
pop
sub
and
retf
int3
unpckhps
aam
lock
addr16
add
icebp
fdiv
fwait
and
cmp
jl
and
mov
inc
xchg
fst
jo
dec
(bad)
cmp
aam
or
pusha
pop
(bad)
and
sti
xor
cmp
out
inc
xor
xchg
cmp
in
ins
push
or
cmp
mov
adc
inc
sub
mov
sub
ror
dec
cmp
fs
enter
add
jmp
push
mov
and
inc
aad
mov
adc
push
xchg
mov
ja
mov
pop
and
cwde
inc
jmp
cmp
das
jl
iret
jae
push
inc
adc
xlat
sbb
ror
pop
inc
cmp
cmps
(bad)
outs
or
pop
imul
jo
cmp
scas
cld
push
loop
jmp
dec
add
lods
dec
stc
ret
or
outs
shr
adc
rcl
push
pop
jae
enter
mov
push
cs
sbb
out
jl
add
and
xchg
inc
push
mov
stos
mov
stos
mov
lods
test
sbb
repz
pmulhuw
push
outs
mov
cwde
adc
push
rcr
mov
xor
ret
xor
dec
pop
dec
sub
push
xchg
or
std
cmp
fsub
icebp
scas
xchg
or
or
bswap
ins
lock
loope
arpl
js
das
in
out
cmp
pop
mov
mov
lods
fst
mov
out
ret
loopne
cmp
(bad)
out
adc
and
jo
call
push
int
dec
stos
enter
arpl
sub
pushf
mov
pop
pop
and
test
xchg
sti
adc
or
shl
mov
jecxz
sub
das
sahf
pop
addr16
dec
mov
and
pop
mov
xchg
inc
sub
in
shl
jge
xchg
shl
and
enter
retf
addr16
cld
xchg
psubsb
int
enter
mov
pop
cmps
ds
xor
lods
rol
jbe
stos
push
sub
dec
jg
or
cmp
jmp
push
mov
bound
push
mul
fs
cmp
rcl
dec
out
out
jae
sub
or
push
mov
jecxz
stos
xor
mov
dec
jp
ins
scas
sbb
mov
xor
adc
or
inc
dec
mov
inc
mov
dec
add
retf
lahf
xchg
mov
or
push
cli
ss
mov
and
fwait
test
pop
pop
jle
fwait
ins
jb
ins
push
jle
add
ret
stos
aam
ret
movs
test
push
in
jmp
out
and
shl
mov
scas
jo
std
fwait
imul
mov
xor
fmul
and
(bad)
xchg
xor
imul
sbb
in
arpl
jge
fidiv
sbb
imul
jmp
pop
ins
test
fdiv
(bad)
pop
mov
data16
jmp
pop
rol
ret
test
push
(bad)
or
or
cmp
setbe
jbe
stos
ret
push
fsub
and
xchg
dec
cmp
and
adc
cwde
xor
dec
mov
sbb
(bad)
mov
push
cmp
cmp
aam
stos
mov
cmp
int
ret
pop
jmp
mov
cdq
sub
dec
div
in
add
xchg
xchg
cld
and
in
push
inc
dec
out
mov
jl
jnp
push
fs
iret
neg
sbb
cmc
scas
push
mov
xor
pop
leave
sub
push
lods
push
out
lahf
loop
xor
out
pop
fsubr
movs
inc
div
and
dec
lods
push
xor
dec
xchg
int3
push
mov
fistp
xchg
test
mov
mov
jl
sub
cmp
push
daa
gs
pusha
les
mov
mov
and
sbb
adc
mov
xor
add
cli
call
dec
push
cld
hlt
repz
cmp
jo
or
(bad)
mov
mov
or
and
jbe
(bad)
sub
dec
cmc
int
push
aaa
sbb
xor
add
mov
cld
out
ins
sbb
push
jae
add
inc
out
mov
inc
adc
pop
sbb
fldenv
addr16
rol
test
pop
add
and
push
pop
push
push
push
push
aam
lds
ret
lods
je
rcr
inc
pop
mov
xchg
bnd
stc
stc
xor
(bad)
dec
xchg
jnp
pop
cmp
js
shl
cmp
cmps
pop
jne
fidiv
enter
or
jno
adc
xchg
cs
xchg
ss
jns
(bad)
pop
or
adc
inc
scas
jle
int3
xchg
xor
jle
and
movs
movs
leave
sbb
pop
shl
pushf
mov
pop
inc
and
cld
xor
jge
cmp
push
xchg
pop
sub
jmp
xchg
movs
sbb
(bad)
sbb
push
xchg
lods
loope
(bad)
dec
test
adc
sub
(bad)
clc
movs
and
pop
cmc
rol
or
ins
lods
ss
mov
cmp
es
or
adc
loope
scas
into
and
inc
ret
ja
loope
ins
pop
pop
xor
loop
xor
push
(bad)
loope
bound
sbb
mov
mov
xchg
dec
add
mov
clc
fcmovnbe
pusha
es
dec
xor
ss
ss
outs
(bad)
loope
and
lahf
jb
iret
repnz
sbb
push
outs
adc
addr16
sahf
xor
or
inc
xor
jnp
sub
inc
xchg
jbe
loope
push
stos
rcl
adc
outs
ret
hlt
xor
and
mov
jp
retf
adc
imul
cwde
(bad)
jb
pushf
test
push
in
pusha
fucomp
pop
and
add
inc
cld
mov
pop
dec
mov
push
xor
push
xchg
xchg
out
push
add
sbb
test
lea
(bad)
fdivr
xor
mov
dec
jecxz
test
add
xchg
pop
pushf
cld
inc
pop
inc
cs
cmp
popa
pop
sbb
sbb
stos
mov
inc
sub
cmp
mov
ret
adc
neg
imul
scas
cli
push
mov
add
dec
jle
or
mov
sub
ret
loopne
cmp
test
retf
fisub
out
inc
stos
pop
iret
pop
repz
add
jmp
and
mov
leave
cmp
xchg
arpl
imul
jo
sub
adc
xchg
jb
xchg
inc
pop
lds
or
xchg
dec
hlt
icebp
jmp
jecxz
pop
push
lahf
or
add
dec
xor
(bad)
mov
adc
or
bound
retf
out
sahf
cld
cmp
xchg
inc
cli
mov
mov
mov
cli
not
out
pop
adc
pushf
lahf
je
add
or
cmp
lahf
push
gs
add
nop
pop
jp
dec
mov
pop
mov
stos
add
cmps
dec
imul
fistp
and
ror
aam
int
cmp
dec
out
lahf
sub
std
jo
sar
mov
jmp
dec
cmp
fnstenv
xchg
inc
stos
xor
rcl
inc
dec
inc
adc
or
sbb
fwait
clc
rep
or
iret
aas
in
push
(bad)
idiv
cli
sahf
jne
jmp
pop
sub
in
or
ret
inc
push
add
pushf
not
aad
int3
inc
xlat
repnz
out
xor
push
pop
popa
cld
out
and
ja
loopne
jmp
push
xchg
inc
xlat
das
pop
jg
jno
or
xor
mov
aad
stos
and
fdivr
or
sub
(bad)
cli
mov
adc
jecxz
stos
leave
push
add
daa
pop
sub
fs
cs
xor
stc
add
enter
fnsave
cmps
retf
sbb
out
pushf
and
mov
and
pop
add
stc
jge
sar
sbb
push
mov
icebp
inc
pop
aam
shl
jle
mov
and
add
js
and
(bad)
imul
shl
dec
dec
add
jbe
jne
imul
sbb
inc
push
mov
(bad)
fdivr
jne
jae
pop
xor
sbb
sbb
ja
test
sbb
sahf
aam
cmp
xchg
mov
ins
jb
popa
lods
jmp
add
xchg
in
dec
pop
gs
aaa
and
int3
xor
pop
test
mov
aam
jmp
dec
push
sbb
popa
fbstp
pusha
enter
cs
jmp
out
lock
xchg
out
xchg
add
dec
mov
fist
into
test
sbb
inc
jnp
enter
pop
add
sbb
jne
sub
test
jle
push
mov
retf
fwait
xor
hlt
pop
outs
mov
mov
adc
or
mov
cmp
fadd
xor
test
ret
mov
stos
(bad)
in
sbb
sar
xchg
mov
jno
cli
xchg
movs
ror
call
pop
pop
pusha
add
push
push
inc
push
adc
fcom
(bad)
das
sbb
fwait
push
icebp
jno
and
and
out
cmp
dec
sub
loop
pop
out
shr
mov
sub
(bad)
xor
push
rcr
test
xchg
mov
jb
jp
in
(bad)
mov
pop
cmp
fisttp
add
xchg
cmps
jl
and
int
sub
out
(bad)
fcomp
loopne
es
mov
mov
push
out
inc
inc
mov
jge
fiadd
iret
xchg
mov
xor
clc
jbe
adc
pop
lds
push
loope
bound
sub
cdq
fidiv
pusha
xchg
sti
es
inc
pop
ror
or
arpl
outs
ror
into
fs
(bad)
pop
icebp
ins
and
js
push
pop
inc
and
inc
jecxz
mov
movs
sub
mov
cmp
lods
cmp
outs
ret
jbe
(bad)
mov
ja
(bad)
pop
cmp
push
xchg
cmp
adc
out
mov
mov
stos
jns
add
lahf
push
push
xchg
or
mov
loope
in
clc
xor
scas
fwait
shr
pop
test
nop
sub
dec
repz
stc
pop
push
mov
sbb
lock
push
dec
sbb
out
es
sbb
pop
mov
and
(bad)
in
mov
test
ret
push
sbb
retf
xor
jmp
lea
jnp
std
mov
cmp
retf
sbb
mov
or
ror
add
shl
or
adc
jge
add
adc
ins
pop
inc
scas
stos
loope
jp
inc
cmp
mov
xchg
stos
(bad)
dec
push
aas
or
into
aaa
dec
and
adc
sbb
add
(bad)
push
inc
nop
repz
pop
movs
mov
dec
jae
mov
hlt
push
mov
ins
jo
jl
mov
daa
ss
jp
into
mov
push
jle
xchg
mov
cmp
xchg
push
(bad)
aaa
rcl
pop
mov
fld
cmp
(bad)
push
cmp
test
push
jmp
cmc
out
cmp
(bad)
adc
fcom
fs
and
je
lea
es
add
int3
scas
sahf
hlt
dec
in
sub
jle
int3
lea
std
adc
jmp
loopne
jmp
fild
sbb
in
xchg
lahf
jge
(bad)
in
add
cld
cli
add
mov
and
mov
nop
and
aaa
xchg
outs
jne
stc
test
cmp
add
push
or
cmp
out
jae
push
ror
ss
or
arpl
call
pop
aaa
leave
or
cli
add
mov
add
push
sub
aaa
ds
stos
cmp
mov
xchg
retf
(bad)
or
push
call
or
or
shl
nop
cmp
pop
idiv
pop
ins
cmp
(bad)
push
(bad)
pop
dec
adc
cs
cdq
add
dec
pop
push
mov
pop
cmp
je
sbb
out
inc
push
mov
mov
iret
fdiv
sbb
dec
sar
mov
push
stos
pop
add
shl
mov
jb
dec
es
js
repz
mov
mov
mov
jno
shr
sbb
int
jbe
ins
jmp
jle
mov
sti
jb
in
cmp
(bad)
loop
jnp
lods
mov
frstor
pop
mov
fist
cmps
lahf
inc
sbb
dec
cmp
adc
sbb
push
xor
mov
sbb
push
add
sbb
sbb
cmp
cmp
jp
cmp
arpl
icebp
jecxz
stc
cmc
cmp
pop
dec
xchg
ficom
daa
dec
lds
fimul
loop
cmp
mov
fistp
cmp
out
and
sti
sbb
jl
add
clc
jnp
jb
rol
lea
int
xchg
repnz
or
fdecstp
(bad)
sbb
mov
mov
jnp
pop
mov
out
pop
and
jge
fnstsw
pop
cmp
fwait
or
pushf
test
mov
jmp
fsub
or
jo
inc
ins
jecxz
out
das
movs
mov
mov
div
dec
setge
push
and
sbb
js
adc
fs
xor
pushf
mov
(bad)
fnstenv
in
sub
js
out
pop
and
jge
mov
jno
loope
mov
test
test
push
sbb
jo
popf
out
imul
(bad)
in
push
push
dec
lds
call
and
mov
addr16
pop
int3
jmp
addr16
lock
(bad)
sar
cmp
adc
jmp
nop
adc
inc
add
sub
pop
bound
push
sar
fnstenv
xchg
les
nop
xor
js
fs
aam
sub
cwde
sahf
dec
(bad)
or
jmp
scas
mov
loopne
xchg
dec
and
xchg
cmp
mov
adc
pop
aam
pop
daa
push
xor
aas
adc
dec
add
mov
ss
dec
inc
leave
or
xchg
xor
mov
dec
mov
mov
cmp
jge
adc
mov
add
je
or
out
pop
out
jp
bound
pop
ins
push
(bad)
out
iret
je
xor
pop
cld
push
sar
pop
in
test
loope
inc
out
push
fdivr
pop
xchg
jmp
aas
dec
jno
xchg
sub
shr
xor
fstp
daa
and
xchg
cmp
adc
test
sahf
hlt
xor
out
leave
sbb
fadd
cmp
mov
dec
mov
iret
jle
push
adc
out
div
pop
loope
test
or
mov
fmulp
inc
or
xor
mov
and
cli
xor
pop
or
aam
repnz
and
ja
mov
les
ins
test
jae
mov
mov
les
imul
mov
pop
cmp
pop
jbe
clc
addr16
jp
aad
ret
push
or
mov
dec
mov
repnz
cwde
adc
daa
pop
jl
jmp
xchg
jne
cdq
sbb
mov
mov
in
push
(bad)
out
scas
sub
rcl
xor
pop
jno
pop
mov
pop
push
sub
mov
pop
(bad)
cmp
jne
fisttp
loop
(bad)
fist
gs
rcl
xor
aam
fist
test
inc
into
aad
or
sub
fwait
cmps
push
or
adc
stos
movs
test
inc
imul
cmp
cmp
ins
pavgb
mov
mov
mov
rcr
dec
hlt
jle
xchg
add
sbb
dec
shl
sub
jb
(bad)
fs
push
pop
fild
leave
std
cs
ins
push
mov
mov
jbe
mov
add
jbe
inc
bound
jg
jle
outs
fimul
mov
xchg
fwait
rcl
cmp
mov
(bad)
xchg
js
lds
pop
fld
jne
pop
scas
cdq
(bad)
fcmovu
push
adc
mov
xchg
mov
mov
std
dec
mov
and
jns
xchg
inc
push
mov
or
or
xor
dec
xor
jmp
adc
pop
std
mov
scas
idiv
outs
out
mov
push
mov
nop
mov
je
add
jl
je
stos
cs
inc
leave
movs
sbb
aam
xchg
stos
or
jmp
jno
mov
add
in
cli
jge
mov
mov
rol
adc
adc
loop
and
xchg
or
scas
pop
pop
dec
mov
rcr
mov
jns
cmp
int3
imul
cdq
(bad)
leave
and
fsubr
in
stos
add
mov
arpl
cmp
or
scas
into
and
mov
setne
mov
mov
pop
xor
mov
lahf
pop
out
and
inc
push
repz
xor
cmp
lds
and
(bad)
dec
lahf
ret
in
pmulhw
jns
or
addr16
xor
pop
or
lods
add
movs
jne
dec
into
inc
mov
scas
ss
cmp
repz
cmps
aad
mov
ds
xchg
fiadd
(bad)
stc
push
xor
pop
and
jl
lods
repnz
cld
arpl
cli
lods
jecxz
pushf
dec
mov
dec
mov
adc
cld
fmul
sbb
xlat
jno
sub
sub
dec
lahf
xchg
push
xor
jmp
and
xor
cmp
xchg
inc
mov
jnp
pop
(bad)
rol
setge
stos
imul
aad
sub
push
jge
movs
arpl
cmp
push
mov
shr
mov
test
sbb
sbb
in
add
push
aaa
shl
jecxz
cmc
sbb
scas
lds
xor
mov
push
sti
pop
cli
inc
push
popf
mov
mov
inc
fstp
icebp
aaa
inc
imul
cwde
arpl
scas
(bad)
mov
loop
mov
nop
sub
stos
cmp
xchg
add
dec
popa
mov
sbb
adc
(bad)
daa
sahf
lods
jnp
sub
or
enter
sahf
mov
inc
xchg
retf
mov
push
call
sub
sub
mov
(bad)
imul
add
sub
inc
aaa
in
or
adc
arpl
ror
mov
adc
in
cmp
mov
dec
outs
mov
lock
sbb
jl
leave
enter
add
mov
dec
or
sbb
aam
popf
push
out
sar
stos
and
inc
jmp
adc
mov
or
mov
cmp
cld
scas
xchg
pop
test
js
adc
xchg
and
cmps
lds
jbe
mov
xor
scas
cdq
fcom
icebp
dec
popf
mov
jae
mov
out
jp
jp
sbb
xchg
adc
pusha
jnp
shl
imul
sahf
xor
cwde
out
add
fstp
loopne
pop
aam
add
jg
xor
sar
in
std
js
stos
outs
leave
mov
sbb
adc
neg
and
(bad)
dec
jns
add
(bad)
clc
adc
xor
push
mov
test
adc
(bad)
cmp
jmp
sub
fcom
repnz
mov
in
mov
push
fld
movs
push
dec
stos
and
inc
fdivr
and
mov
mov
sub
nop
mov
mov
pop
lock
push
sub
jno
push
daa
push
(bad)
(bad)
cli
outs
inc
std
mov
sbb
fnsave
dec
push
sti
je
int3
jmp
outs
inc
jbe
push
cld
adc
(bad)
adc
push
pop
int
(bad)
xchg
cmps
aas
dec
xchg
inc
push
out
lock
push
mov
fs
cmp
push
jo
dec
adc
sbb
mov
mov
fs
stos
push
inc
jecxz
loopne
nop
ficom
jae
outs
add
repz
stos
jecxz
pop
test
inc
cld
pop
(bad)
push
test
loope
mov
lods
test
sbb
and
fldenv
imul
or
jle
mov
inc
ins
sbb
je
retf
push
jb
sub
or
or
int3
pop
mov
cmp
leave
lahf
xchg
jle
retf
pop
dec
rcl
jns
mov
fstp
out
and
int
pop
bound
aad
test
repnz
push
(bad)
push
enter
int3
sub
setl
out
mov
sub
into
das
shl
repz
lahf
mov
test
lea
sub
cmp
cmp
popa
into
dec
popf
push
xchg
and
xchg
jmp
and
mov
and
push
mov
lea
out
mov
ficomp
js
sub
and
xchg
cmps
test
push
jnp
mul
ds
scas
dec
ret
jmp
pop
cmp
dec
jno
ret
popa
outs
das
push
dec
and
add
pop
xchg
ror
add
hlt
dec
xor
mov
test
fadd
outs
mov
and
cmp
test
daa
cli
or
test
call
out
cmc
sub
sub
mov
mov
pushf
sbb
xor
cmp
and
jg
jbe
iret
add
mov
loope
enter
loopne
sub
fcmovne
xchg
mov
jns
add
jnp
sbb
daa
mov
iret
rol
cli
pushf
rol
sar
inc
retf
push
lds
push
dec
leave
pop
add
out
fidivr
and
jge
fwait
or
sti
cmp
adc
shld
xchg
mov
ja
mov
mov
and
mov
je
div
and
jecxz
je
mov
rcr
or
sub
cmp
in
and
xchg
cli
das
hlt
iret
pop
or
dec
sahf
cmp
push
adc
das
sahf
data16
xchg
pusha
push
fist
jmp
push
mov
aaa
fwait
cmp
dec
xlat
test
inc
leave
adc
rcl
test
jne
sbb
add
js
add
(bad)
arpl
cmp
sbb
or
and
movs
xchg
int3
fimul
ja
xlat
push
in
mov
dec
add
push
mov
xor
cmp
mov
mov
(bad)
repz
sbb
(bad)
inc
(bad)
repnz
bound
pop
jp
sbb
or
mov
or
xchg
jae
scas
scas
jl
mov
xchg
aam
push
enter
jae
clc
pop
arpl
or
cwde
fdiv
loop
out
mov
dec
mov
cmp
aad
ret
pop
ficom
or
in
push
jle
in
mov
pop
call
jl
vhsubpd
sti
clc
mov
ror
cld
imul
cwde
sub
mov
das
aad
(bad)
movs
mov
fwait
imul
and
test
jle
iret
inc
adc
sub
cmps
movs
int3
xchg
es
or
xor
repnz
xchg
out
jbe
adc
mov
sti
mov
or
popf
popa
cmp
pop
jne
dec
add
mov
dec
or
sub
xor
lods
test
outs
nop
pop
cdq
pop
mov
xor
mov
daa
xchg
mov
movs
das
neg
test
or
add
fistp
sub
push
dec
ror
fwait
and
push
pop
add
shr
(bad)
xor
ds
add
dec
sub
cmp
jge
(bad)
jns
push
cmp
fcomp
stos
loope
outs
push
ret
and
cdq
retf
inc
call
pop
push
stos
icebp
adc
sbb
adc
dec
pop
dec
adc
and
sbb
mov
sbb
out
adc
stc
lahf
mov
pop
mov
repz
mov
mov
cdq
psllw
or
sbb
or
mov
cmp
mov
(bad)
addr16
inc
adc
lds
push
clc
pop
push
add
repz
or
ret
dec
mov
and
mov
dec
cmps
movs
sbb
or
test
pop
loope
imul
dec
pop
call
mov
stos
je
scas
out
call
scas
loope
imul
and
outs
push
pop
mov
in
sub
inc
lds
es
fwait
push
inc
aaa
xchg
dec
dec
shr
jno
clc
pop
xchg
lahf
(bad)
mov
push
jno
jno
les
push
scas
sbb
outs
daa
jbe
cmp
cmps
add
je
call
xchg
cmp
jp
adc
fwait
sar
repnz
in
inc
cmp
std
dec
or
enter
cmps
xchg
xchg
sub
cdq
adc
inc
pop
and
shr
aas
mov
mov
push
mov
aam
retf
data16
dec
dec
push
xchg
movs
ret
push
add
xor
adc
push
jne
sub
not
cmp
sar
fcom
inc
lahf
add
aas
sahf
adc
aaa
and
sbb
xchg
sbb
jmp
loopne
cmc
sub
loop
dec
xchg
xchg
test
sbb
std
clc
fldenv
adc
sahf
out
xchg
dec
or
imul
adc
fcmovnb
ins
ss
or
pop
xor
push
inc
sub
add
add
ror
mov
aaa
(bad)
xor
pop
std
push
pop
inc
cmps
call
mov
rcl
sub
(bad)
sbb
and
xchg
scas
cmp
cmp
adc
push
add
enter
inc
mov
or
sub
arpl
mov
adc
test
daa
fidiv
cmc
sub
push
jecxz
xchg
or
sbb
mov
add
xor
mov
jbe
fdiv
mov
or
popa
test
scas
or
xchg
stc
fs
pop
sbb
and
test
xchg
push
mov
sahf
mov
(bad)
mov
inc
aad
inc
jmp
pop
out
fmul
mov
mov
int
je
and
movs
dec
cmp
in
pop
cs
xchg
retf
dec
dec
add
cdq
and
mov
mov
(bad)
push
(bad)
loopne
(bad)
and
cmp
nop
push
div
and
call
aas
lods
push
in
fs
push
icebp
mov
popf
ins
jno
aaa
inc
pop
inc
jae
pop
xor
push
dec
or
ja
mov
das
bound
fisttp
fdecstp
jae
pop
test
adc
call
cld
inc
fincstp
and
sbb
push
push
sub
add
fs
mov
(bad)
retf
dec
adc
mov
outs
fwait
ins
adc
retf
and
mov
inc
jb
pop
test
inc
addr16
aad
out
dec
xor
mov
outs
sahf
add
loop
mov
popa
sbb
(bad)
imul
adc
inc
imul
leave
repz
and
(bad)
mov
adc
dec
add
push
add
sete
lock
test
call
repnz
popf
aam
dec
and
pop
xor
mov
fmul
gs
(bad)
push
(bad)
lock
loop
sbb
jp
pop
shl
sbb
in
test
pop
adc
stc
mov
fmul
adc
loop
mov
dec
clc
push
dec
mov
ret
mov
xor
mov
jge
or
xor
pop
shl
mov
xchg
call
test
scas
fiadd
loop
(bad)
in
(bad)
pop
inc
xchg
xchg
and
sbb
sahf
mov
dec
(bad)
xchg
loope
pop
add
call
cmp
cmps
movs
out
dec
jp
jo
sub
mov
leave
enter
lock
adc
mov
rol
retf
cmp
enter
imul
inc
imul
daa
add
jae
add
and
adc
sbb
mov
mov
fimul
sahf
or
outs
or
out
pop
(bad)
ins
and
sbb
or
fst
shl
repz
fdivr
icebp
hlt
jp
sbb
fcmovbe
das
test
fst
nop
jmp
(bad)
(bad)
or
arpl
fucom
xadd
and
push
outs
call
movs
test
inc
mov
retf
pop
(bad)
repz
clc
lahf
(bad)
dec
in
mov
dec
dec
seta
bound
icebp
push
in
shl
pop
mov
rol
fst
aas
xchg
pop
mov
push
in
(bad)
xchg
and
call
(bad)
hlt
or
add
push
push
adc
cmp
jp
dec
leave
jne
and
into
dec
and
scas
les
cs
adc
stos
push
add
cmp
hlt
or
aad
es
xchg
sahf
les
inc
sbb
(bad)
and
cmp
les
outs
mov
mov
push
hlt
scas
or
mov
scas
ror
iret
cld
adc
rcr
cdq
je
xchg
xchg
in
adc
sbb
xchg
mov
ja
inc
fldcw
cmp
mov
lods
ja
push
enter
cmp
js
aaa
ret
lea
mov
mov
movs
inc
pop
mov
out
jmp
adc
adc
sub
(bad)
push
out
aaa
mov
cdq
cmp
int3
mov
jmp
in
xor
sar
loopne
add
scas
xor
xor
icebp
pusha
dec
sub
jmp
xchg
add
ret
sbb
ret
push
loope
push
jns
cmps
shl
add
jmp
shr
add
fdiv
(bad)
cmps
rol
lods
adc
inc
fs
test
mov
sbb
in
(bad)
dec
cmp
pusha
aaa
xchg
inc
xchg
push
test
and
rcl
or
mov
xor
inc
dec
mov
mov
fstp
mov
popf
xor
xor
inc
ins
mov
lods
lahf
xchg
in
(bad)
fld
add
mov
xchg
data16
and
stos
(bad)
pop
cwde
xor
movs
dec
cs
jecxz
retf
or
pusha
loop
adc
mov
icebp
lds
aaa
xchg
in
call
pop
imul
jg
aaa
xchg
mov
ins
jo
add
mov
pushf
and
or
and
stos
push
xor
mov
inc
jno
shl
mov
call
in
xchg
push
mov
dec
and
xchg
cmp
frstor
sar
mov
adc
fcmovbe
sub
pop
xchg
into
lods
stos
inc
les
or
pop
and
sbb
pop
out
movs
(bad)
js
adc
and
(bad)
dec
mov
shr
pop
push
push
lds
outs
dec
sub
popf
test
dec
jl
pop
mov
je
add
das
add
stos
retf
imul
xor
pop
and
out
pushf
xchg
mov
fbld
push
loop
cmp
test
daa
pop
sub
test
xchg
(bad)
adc
test
jbe
imul
and
aad
pop
push
int3
shl
adc
cwde
adc
inc
xchg
xor
pusha
mov
sub
xor
mov
imul
aaa
mov
retf
cmp
mov
fistp
imul
sub
cmp
and
out
(bad)
into
rcr
pop
gs
push
fcmovnb
pop
inc
jge
fstp
sub
(bad)
out
add
push
in
call
rcr
cmp
push
xor
cdq
icebp
add
pop
aaa
or
lods
push
jecxz
mov
fst
cmp
add
or
dec
call
mov
jmp
push
mov
xchg
push
lods
cmp
or
sbb
sbb
fsub
jns
repnz
hlt
or
in
aas
es
cmp
dec
xor
mov
pop
jne
in
mov
and
fwait
je
in
cmp
fs
psubq
xor
shr
mov
jns
fwait
xchg
sbb
cld
xchg
mov
sub
inc
out
pop
push
cdq
and
and
call
rol
pushf
imul
call
sbb
(bad)
jecxz
imul
daa
and
jbe
mov
rcl
stos
fadd
cmp
cmc
lods
jne
jmp
inc
pushf
loop
push
pop
mov
lahf
pop
out
or
test
xor
pusha
sti
or
inc
xor
sbb
dec
mov
sub
nop
jo
fnop
in
movs
jmp
and
xor
push
ror
lds
cmp
push
repz
enter
inc
xor
fs
jnp
xchg
pop
int
sbb
ds
adc
push
sub
iret
cmp
adc
movs
(bad)
xchg
adc
add
push
shr
cli
sbb
loop
in
push
test
push
cmp
push
shl
sub
sbb
add
inc
jmp
out
mov
or
xor
push
ins
or
addr16
jno
cmp
aad
add
bound
data16
int
or
jl
mov
addr16
mov
push
test
mov
icebp
rol
adc
sbb
fstp
nop
daa
int3
ret
jae
nop
adc
ret
jne
(bad)
out
jl
pop
nop
adc
jmp
xor
(bad)
mov
pop
lods
test
adc
or
jae
sub
push
repnz
pop
sbb
and
push
pop
hlt
(bad)
pop
je
scas
fnstsw
dec
xor
ins
ret
ficom
sub
adc
adc
or
stos
sub
add
mov
adc
sub
xor
je
adc
pop
js
daa
xor
mov
fnstcw
loope
into
pushf
mov
dec
pop
addr16
jae
push
sub
adc
jo
(bad)
aad
lods
test
data16
jmp
shl
fisubr
in
inc
pop
inc
pop
mov
pop
(bad)
retf
and
fcomp
jnp
test
cmp
jmp
sub
inc
jmp
or
mov
aam
punpcklbw
cmps
lds
or
push
loop
sbb
cmp
das
sub
add
xor
retf
call
movs
inc
ret
shl
xor
nop
cmp
pusha
xchg
js
int3
mov
push
xchg
sub
mov
out
retf
popf
xchg
adc
out
xchg
dec
mov
addr16
inc
fidiv
icebp
dec
xchg
bound
out
cmp
enter
out
inc
push
fsub
dec
arpl
jle
cmovg
pop
adc
arpl
jo
arpl
jg
mov
sub
stos
jno
leave
fdivp
nop
imul
jg
(bad)
fcmovu
icebp
xchg
ins
test
fcmovbe
or
(bad)
ins
scas
cmp
retf
pop
dec
shr
icebp
ins
mov
xchg
popf
jge
mov
xchg
repz
and
xchg
inc
pop
and
xchg
mov
mov
cld
push
(bad)
mov
test
clc
mov
es
popa
push
push
jmp
sub
pop
xlat
std
loop
ror
xor
aas
or
rcr
in
push
jmp
adc
mov
jbe
add
pop
or
(bad)
jp
(bad)
stos
xchg
pop
and
sbb
popa
setae
outs
idiv
inc
add
sar
popa
pop
mov
jle
iret
xchg
and
jmp
push
repnz
adc
shl
mov
push
jmp
cmps
shr
ja
dec
xchg
rcl
mov
push
adc
test
stos
mov
out
push
stc
sbb
in
mov
jmp
xchg
lock
lea
jmp
xor
xor
mov
jbe
scas
dec
fidiv
sbb
xor
inc
cdq
sbb
fdiv
xchg
enter
inc
scas
outs
and
push
shl
and
in
sub
mov
rep
retf
dec
inc
push
sub
pop
mov
dec
push
fistp
adc
ds
gs
jle
dec
mov
retf
or
das
push
xchg
and
cs
fxch
repnz
dec
mov
or
jecxz
aam
fmul
addr16
add
mov
jg
cmp
adc
xor
push
cmp
jge
dec
sahf
test
sub
scas
xchg
pop
xor
fdivr
inc
aas
sub
loop
(bad)
push
mov
(bad)
dec
push
cli
cmp
sbb
scas
or
fld
loop
mov
retf
fnsave
sub
jb
push
addr16
sti
fist
scas
rol
(bad)
jns
cdq
jns
adc
add
fisubr
mov
sub
jp
push
popf
mov
mov
push
pop
lds
fdiv
pop
inc
add
sbb
add
(bad)
and
xor
test
test
lahf
mov
popf
adc
sub
xor
xor
dec
add
push
fist
fwait
call
push
lea
out
sbb
cdq
or
aaa
iret
or
rol
lods
retf
aam
jne
enter
rol
add
or
inc
test
inc
add
imul
and
out
mov
adc
lea
clc
in
jne
ins
jbe
clc
outs
pop
or
mov
jl
iret
sub
imul
mov
xor
dec
dec
push
xchg
and
(bad)
fcomp
and
sahf
xor
scas
popw
xor
dec
push
push
push
idiv
iret
in
dec
mov
js
pop
je
fnstsw
ins
and
and
sub
retf
or
mov
and
out
repz
cmp
push
loopne
pusha
pop
jecxz
mov
xchg
xor
shr
cld
inc
scas
loop
mov
adc
xor
dec
addr16
mov
push
das
rcr
sub
aam
xlat
xchg
leave
jo
bound
aam
jno
mov
adc
(bad)
xchg
and
cwde
cdq
add
ja
adc
aaa
jne
sti
sbb
std
scas
adc
ds
and
and
mov
adc
sti
jge
ja
pop
cmp
pop
test
test
pushf
xchg
mov
inc
mov
cli
retf
pop
adc
addr16
sbb
ss
sbb
loop
mov
popa
icebp
jmp
xor
sbb
mov
xchg
mov
enter
shr
cmp
adc
sub
push
sub
jo
cmp
cs
mov
push
cmp
je
out
cmp
push
xchg
or
popa
cmp
mov
jae
mov
xor
jp
add
loop
rol
outs
shl
pop
mov
mov
es
inc
mov
in
repnz
xor
(bad)
shl
push
cmps
ja
jecxz
xor
sub
jae
or
push
pop
push
mov
push
pop
xchg
ds
mov
adc
sbb
cwde
push
lahf
loope
xchg
stc
jns
es
loop
or
int
dec
std
cdq
jle
inc
cmovs
add
or
(bad)
push
and
jns
shl
lock
in
xlat
shl
stos
aaa
mov
mov
inc
xlat
(bad)
aad
sbb
xchg
popf
call
pop
adc
sub
fldcw
in
test
inc
pmaddwd
and
ds
repnz
(bad)
sub
xchg
xchg
mov
sbb
lods
xchg
std
test
pop
(bad)
xor
mov
adc
jge
repnz
xlat
sti
pop
pop
xlat
clc
inc
xchg
enter
(bad)
pop
rcl
rol
lea
rcl
mov
inc
dec
mov
dec
mov
mov
gs
ds
movs
sbb
mov
es
aam
add
xchg
jne
inc
or
and
std
movs
pushf
sbb
push
out
(bad)
shl
xchg
cmp
add
fcmovu
test
fsub
cmp
ins
rcr
or
pop
pop
add
stos
and
xchg
jb
ror
icebp
mov
xor
and
ins
iret
pop
in
cdq
inc
das
or
fsub
mov
pop
fiadd
xchg
and
jge
fdiv
pop
dec
adc
(bad)
arpl
fs
and
or
inc
jno
mov
addr16
pop
call
pop
lock
in
pop
jae
cmps
push
jne
sub
loope
call
sbb
lods
sahf
outs
pusha
mov
(bad)
mov
xor
jo
fsub
ss
xchg
cs
sbb
sub
push
jmp
adc
mov
jne
xchg
(bad)
fiadd
and
pop
inc
aas
cmp
fdivr
ins
push
pop
(bad)
aas
inc
or
lahf
sbb
repnz
js
ret
aas
mov
fadd
mov
ss
clc
cmp
sub
dec
pushf
test
xchg
sub
pop
out
jbe
push
jecxz
dec
fs
mov
ds
push
jge
mov
or
adc
sahf
or
jge
cmc
cmc
mov
sub
xchg
(bad)
clc
outs
imul
bound
sub
icebp
mov
or
loop
daa
call
cli
loopne
pop
adc
and
leave
mov
in
xchg
enter
dec
gs
and
mov
mov
add
mov
xchg
pusha
xchg
cdq
add
ds
inc
leave
lock
data16
push
int
pop
and
mov
je
inc
jmp
sub
fnsave
sbb
mov
popa
(bad)
arpl
test
test
inc
and
aaa
fld
push
fstp
cdq
int
mov
outs
mov
pop
mov
mov
fsubr
cli
cs
stos
jge
xchg
(bad)
fild
mov
iret
sub
xchg
out
mov
add
(bad)
repnz
(bad)
psubsw
dec
jp
nop
jo
cmp
mov
out
pop
pop
iret
fst
dec
adc
adc
cmp
(bad)
out
test
lods
ds
push
cmps
adc
cld
mov
cmp
pop
add
push
sbb
pop
mov
pop
sbb
mov
mov
call
xor
xor
scas
shl
bound
push
loope
jle
test
mov
xor
je
jg
mov
mov
lock
add
outs
xor
cmp
adc
jbe
and
in
(bad)
(bad)
fbstp
in
bndldx
ja
xchg
sbb
push
stos
pop
push
out
int
push
retf
out
mov
fwait
shr
int3
jge
ja
cmp
sub
sti
adc
call
mov
arpl
mov
cmp
nop
dec
or
or
cmp
int
jo
(bad)
mov
sub
cwde
push
inc
pop
inc
(bad)
leave
fisubr
sub
adc
lods
pop
loopne
into
enter
xchg
stos
push
in
sbb
aas
cwde
xor
ret
adc
push
and
xchg
(bad)
sbb
add
push
stos
cmp
inc
leave
sbb
mov
jae
jmp
loop
fisttp
mov
sar
xor
(bad)
lods
pop
adc
(bad)
sbb
fsubr
pushf
mov
xchg
mov
std
fwait
mov
and
mov
lock
jl
fistp
push
pop
jg
cmp
imul
pop
cmp
mov
mov
ss
cmp
inc
pop
xchg
rep
sub
xchg
out
dec
and
push
enter
out
in
fstp
jmp
mov
(bad)
push
outs
fsub
ins
dec
or
jne
out
lods
mov
jae
cmp
retf
je
rcr
frstor
adc
in
pop
push
sbb
cmp
adc
cmp
repz
jae
inc
xchg
shr
jnp
xchg
adc
out
cmp
and
jmp
pop
sub
adc
call
xor
push
pop
pop
sbb
lea
mov
xchg
shl
jne
stos
scas
jno
mov
xlat
fisub
jo
rol
mov
pop
jns
scas
jo
mov
cmps
inc
mov
pop
mov
sub
clc
cdq
mov
dec
inc
dec
xchg
ret
pop
movs
mov
fwait
addr16
int3
and
iret
or
out
mul
xlat
ins
xchg
push
cdq
xlat
sub
repnz
call
(bad)
mov
enter
inc
xor
aam
fisub
jle
xor
movs
aad
stos
jge
jge
ins
mov
in
pop
mov
add
jo
aad
into
hlt
jbe
hlt
scas
xchg
push
jecxz
jns
jns
fcmovnu
xor
sub
sti
cmp
rol
push
out
test
or
and
push
push
mov
or
pop
(bad)
addr16
or
sbb
aaa
adc
pop
sub
stos
sub
stc
cmps
push
in
iret
sahf
test
cmp
jp
sub
loope
out
inc
push
jbe
mov
pop
aas
mov
int3
loop
pop
push
rcr
cwde
pop
in
mov
repnz
sub
ss
das
sbb
fs
scas
(bad)
sub
cmps
aaa
xchg
and
leave
xor
call
retf
imul
mov
or
adc
dec
add
fstp
jo
sbb
mov
mov
or
ins
xchg
xor
or
les
lods
xor
jmp
fstp
cmc
ret
sub
(bad)
cwde
jmp
fidiv
sub
xor
adc
mov
pop
mov
mov
int3
mov
call
inc
mov
xchg
mov
add
aaa
dec
mov
sbb
(bad)
sub
enter
push
int
adc
out
sti
ret
adc
nop
mov
outs
daa
cmc
inc
gs
push
mov
inc
push
xchg
ret
dec
outs
mov
dec
inc
das
adc
mov
data16
std
shl
dec
repz
jg
or
inc
push
or
clc
or
inc
cmp
enter
xchg
pop
out
cdq
pop
sub
mov
mov
clc
add
inc
movs
retf
jmp
std
push
ficom
fucomi
pop
imul
enter
dec
jnp
les
cmps
call
out
mov
xor
stos
pop
outs
inc
aaa
in
sub
je
std
rol
jne
pop
pop
fs
ror
add
rol
push
rcr
cli
adc
ret
sub
push
cmp
xchg
(bad)
(bad)
out
ja
mov
xor
add
idiv
pop
or
xchg
inc
stos
push
inc
jecxz
mov
jp
retf
fstp
mov
leave
xchg
xchg
cmps
adc
sub
mov
jle
push
jl
mov
sbb
inc
add
imul
adc
mov
xchg
jl
hlt
push
cmp
repnz
xor
mov
jecxz
icebp
inc
xor
mov
push
clc
shl
push
inc
push
jns
jo
push
mov
aas
inc
adc
fcmovbe
stos
jnp
stc
xchg
push
adc
lds
(bad)
loopne
in
sbb
int3
cmp
or
cmp
cs
aam
mov
repz
enter
cli
pushf
mov
call
cmp
xor
or
cmp
int
and
sahf
mov
jbe
add
jnp
std
sub
scas
adc
call
dec
aad
inc
inc
dec
push
aaa
pusha
sub
jb
fs
mov
inc
stos
int3
shl
fild
lds
jbe
add
test
(bad)
and
or
stos
mov
mov
pop
call
out
mov
mov
hlt
out
fs
jne
mov
adc
mov
leave
pop
ret
lds
dec
dec
out
sbb
sbb
int3
mov
lahf
dec
xchg
cmp
xchg
retf
imul
pusha
les
push
aam
ds
pop
gs
stos
jae
fidivr
or
inc
enter
pop
clc
cmp
or
or
jae
in
scas
xchg
adc
ror
movs
inc
call
and
fnstenv
movs
xor
push
mov
outs
cmps
mov
jmp
jge
sbb
in
pop
sbb
dec
or
fsubp
inc
mov
mov
cwde
push
mov
test
aad
rol
div
sbb
loopne
mov
lods
test
lock
jb
jmp
(bad)
repnz
scas
mov
mov
repnz
sub
sub
pop
scas
dec
fsubrp
outs
xchg
aaa
movs
mov
xor
push
cmps
xlat
inc
add
mov
or
icebp
imul
ins
push
les
mov
push
imul
dec
mov
adc
push
mov
rol
and
mov
mov
cmovo
ins
popf
ds
rcl
cli
loopne
jle
xor
jno
cmps
mov
mov
cmp
je
sub
ror
jmp
jg
fstp
mov
sub
movs
loope
dec
(bad)
not
cdq
jecxz
jae
or
call
cmp
push
(bad)
cmp
ret
xor
push
dec
test
out
dec
xchg
push
jae
call
or
pop
hlt
test
retf
retf
int3
pop
xor
cs
daa
push
test
dec
and
out
lods
push
(bad)
pop
jge
and
sub
into
sar
lods
mov
outs
mov
out
adc
xchg
subps
push
(bad)
cmp
bnd
xchg
das
rcr
or
pop
or
xchg
xlat
js
outs
inc
shl
sbb
mov
cs
inc
loop
sub
dec
dec
loop
jp
(bad)
stc
xchg
or
jno
xchg
adc
data16
inc
xor
(bad)
aaa
out
les
jo
cwde
mov
in
or
in
adc
inc
or
adc
cmp
retf
adc
push
pop
xchg
fist
jg
scas
fucomi
std
sub
push
mov
adc
in
pop
call
pop
cmc
es
in
sub
pop
and
push
mov
pop
mov
rcl
push
mov
push
xor
(bad)
aam
add
push
sar
mov
cmp
sahf
loop
xchg
push
and
movs
xchg
pop
mov
or
mov
(bad)
mov
jmp
psubq
outs
adc
in
enter
mov
imul
cmps
movs
cmp
into
xor
mov
popa
mov
push
mov
adc
dec
mov
and
adc
xchg
pop
jge
sahf
mov
add
jno
sbb
cmc
mov
mov
push
ins
(bad)
leave
push
mov
in
jmp
xor
lahf
arpl
adc
adc
add
inc
push
clc
jl
shl
pop
ror
add
xor
inc
mov
js
push
sbb
mov
mov
int
pop
in
sub
push
stos
mov
fidivr
int3
clc
dec
test
or
sub
or
cmp
cdq
adc
inc
xor
pusha
lods
adc
out
sub
cdq
mov
int3
mov
inc
ret
shl
mov
and
or
cld
and
push
xor
lods
cwde
sti
xchg
cdq
pop
cmp
sub
or
ja
push
in
lahf
mov
push
push
or
lods
iret
cli
push
or
in
cmp
clc
leave
cmovbe
dec
adc
cmps
sar
and
mov
outs
mov
repz
jb
pop
and
sbb
(bad)
and
scas
pop
mov
vfnmsubpd
imul
add
mov
repnz
sub
xchg
imul
pop
shl
mov
aad
jns
pop
lods
push
bound
ret
adc
xchg
sbb
scas
xchg
mov
enter
pop
pop
aam
repz
or
loop
repz
and
cli
xchg
int3
add
inc
sub
pop
popa
loop
and
jmp
popf
cmp
stc
mov
rcr
std
cmp
dec
dec
sbb
mov
aas
mov
cld
arpl
int
cmp
or
(bad)
addr16
push
sahf
adc
and
mov
loop
xchg
xor
pushf
jmp
scas
adc
retf
movs
sub
fnstsw
fidiv
call
mov
sahf
out
mov
test
jno
push
add
sbb
fdivr
cmp
data16
iret
repz
mov
pop
and
mov
arpl
sub
loopne
adc
mov
popf
hlt
mov
aam
mov
shl
loope
jl
and
mov
in
inc
mov
add
outs
mov
xor
dec
xchg
cmp
movs
call
je
cmp
or
idiv
cmovbe
out
bound
inc
pop
retf
enter
inc
(bad)
cmp
iret
scas
push
or
cmps
push
enter
xchg
test
mov
sub
jl
stos
mov
inc
jl
add
enter
ds
pop
test
fadd
retf
ret
push
test
mov
mov
loope
dec
aam
inc
mov
pusha
retf
call
add
mov
(bad)
js
test
sbb
fist
mov
sbb
ret
add
inc
mov
hlt
and
dec
mov
jb
mov
lock
cwde
jmp
test
pop
ficomp
and
sub
retf
jp
mov
push
xor
into
daa
pop
retf
add
aad
xor
rcl
push
es
inc
jle
push
cmp
jl
adc
xchg
bound
mov
cmp
ds
xchg
or
mov
jns
jg
xor
das
xor
add
push
jbe
pop
lea
adc
into
dec
mov
mov
ds
or
sahf
lahf
aas
es
mov
arpl
jge
push
jb
mov
in
leave
leave
xchg
stos
and
mov
cld
add
inc
and
cmp
aam
loop
mov
and
(bad)
adc
cdq
inc
push
jg
faddp
inc
je
ja
xchg
inc
add
test
inc
cmp
(bad)
xor
mov
inc
daa
cmp
imul
pop
lods
ins
sbb
mov
push
movs
mov
dec
mov
ds
(bad)
xchg
popf
shr
or
pop
and
and
jmp
test
sbb
arpl
dec
xchg
push
cmp
xor
(bad)
or
out
aas
push
retf
iret
mov
ret
xor
cmp
inc
in
or
pushf
push
sbb
inc
scas
jb
xor
ins
mov
(bad)
adc
nop
fcmovne
lahf
fnstcw
in
popf
aam
loope
xchg
ins
shr
mov
adc
movs
call
push
add
ds
sbb
fstp
pop
jne
push
push
sbb
inc
xchg
data16
ret
neg
call
sbb
out
popa
ret
shl
popf
dec
daa
clc
jmp
dec
add
cli
fld
dec
dec
aaa
jns
jle
daa
pushw
(bad)
test
add
ds
xor
push
dec
push
jns
mov
inc
or
mov
cmp
mov
repnz
cmp
jecxz
pusha
xchg
mov
fistp
mov
ror
aas
leave
stc
rcl
dec
lock
imul
or
xchg
(bad)
test
cmps
rcl
test
mov
sub
sbb
mov
cmps
out
pop
es
in
cdq
pop
mov
mov
mov
or
jmp
fucomp
jno
inc
(bad)
xlat
pop
fsubr
cmc
ja
cwde
jno
cdq
iret
pop
push
movs
and
inc
aam
jo
loope
jmp
xlat
dec
push
adc
test
push
pop
dec
xchg
clc
xor
dec
xlat
xor
nop
pusha
cs
sti
inc
cmp
js
(bad)
sub
mov
jmp
cmps
add
mov
push
imul
daa
dec
xchg
and
xor
add
push
xlat
xchg
pushf
mov
(bad)
pop
mul
mov
loope
or
mov
aas
mov
cmp
rol
mov
push
adc
jp
add
jne
dec
sub
sbb
dec
inc
xor
or
outs
dec
faddp
scas
and
std
ss
jmp
loope
mov
sub
scas
ins
xchg
popf
xor
pop
jnp
addr16
pop
fisubr
es
adc
or
addr16
shl
mov
in
push
mov
test
or
or
nop
or
cmp
xchg
xchg
je
(bad)
pop
sub
jo
xchg
jbe
mov
bound
and
movs
lock
xchg
mov
inc
or
and
mov
js
loop
outs
(bad)
adc
jmp
mov
mov
imul
mov
inc
or
pop
scas
leave
inc
mov
addr16
fld
mov
cmps
or
dec
push
iret
mov
mov
adc
cmp
call
dec
out
pusha
and
into
hlt
lds
ss
(bad)
nop
cmp
jmp
mov
cmc
add
leave
in
mov
lods
mov
xchg
mov
outs
adc
ds
jb
sub
jne
rol
adc
mov
adc
jle
add
(bad)
aam
mov
inc
adc
popf
cmp
mov
add
push
aas
add
repnz
aaa
pop
push
jmp
into
out
push
xchg
ds
mov
scas
int
mov
dec
sbb
pop
mov
cmp
push
rcl
ret
or
dec
mov
fcmovu
inc
xchg
xor
pop
test
aaa
mov
push
mov
pusha
mov
mov
pop
dec
mov
ss
and
movs
paddd
mov
clc
adc
loope
jg
mov
in
pushf
repnz
stos
das
mov
imul
inc
out
stos
mov
xor
adc
test
pop
dec
clc
cmp
enter
mov
dec
lahf
pop
cld
jns
fld
(bad)
rcr
fld
adc
or
adc
in
push
dec
or
data16
out
sub
push
lock
clc
fcmovne
sti
sahf
out
or
dec
lds
ins
or
loop
xor
or
xchg
mov
cmp
dec
pop
(bad)
sti
xor
mov
fld
loope
mov
mov
dec
aam
dec
sub
add
pop
inc
and
jmp
aaa
inc
xor
test
or
mov
es
popa
shr
sbb
loope
jb
xor
js
out
xlat
pop
cmps
mov
fs
push
in
test
push
jne
pop
les
pop
cmc
enter
xchg
push
add
jns
xchg
out
add
pop
cmp
test
or
push
in
pop
dec
std
push
add
jmp
stos
inc
lahf
mov
sti
cli
jae
adc
mov
jo
lods
jecxz
xor
div
and
sub
or
push
pop
xor
sti
mov
mov
test
lods
dec
mov
das
btr
mov
fwait
sbb
jae
in
xchg
ror
call
popa
cmp
int
xor
dec
mov
jno
imul
pop
xor
ins
leave
(bad)
dec
add
jl
jb
jne
es
loop
shl
mov
add
sbb
jns
jg
sbb
dec
mov
lock
pop
add
cmp
dec
adc
mov
inc
jge
sub
cmp
fidiv
push
js
mov
or
cld
cmp
inc
call
jbe
jb
loop
fsubr
jecxz
add
mov
enter
rcr
gs
jmp
pop
fs
pop
test
dec
lods
add
scas
xchg
mov
(bad)
add
dec
adc
fdivr
cdq
jb
cmps
cmp
mov
sbb
retf
inc
scas
loopne
ret
repnz
or
je
mov
fs
fs
push
cs
and
outs
movs
repnz
jecxz
pop
cmp
in
in
xchg
pop
ss
ja
fadd
mov
mov
inc
push
cmc
sbb
jnp
sti
xor
sbb
jge
fmul
mov
fisubr
and
and
mov
sub
push
sahf
repz
loop
jnp
iret
clc
imul
pushf
sbb
jae
icebp
inc
cli
hlt
pop
push
js
arpl
pop
imul
inc
into
mov
gs
xchg
(bad)
leave
cld
pushf
sub
icebp
mov
out
cmc
test
pushf
rol
ret
cld
repz
add
and
cmc
xor
hlt
add
fistp
div
aaa
cld
and
fnstcw
xchg
js
xchg
sbb
inc
mov
mov
mov
dec
cmp
stos
add
push
(bad)
jl
aam
aas
cld
xchg
inc
push
sub
jne
repz
shl
push
neg
daa
shr
dec
cmp
xor
ss
mov
pop
cmp
cs
(bad)
hlt
push
xchg
(bad)
stos
ret
cmp
jmp
dec
shl
push
aas
pushf
les
cmps
nop
aaa
mov
cmps
ss
xor
sbb
lea
pusha
push
add
mov
inc
inc
out
fimul
cmp
test
lock
or
xor
jecxz
out
xchg
xlat
sub
mov
scas
add
scas
es
add
push
push
mov
stos
mov
dec
jp
popf
xor
inc
inc
hlt
sbb
vpshaw
jae
lods
dec
add
loop
shl
int3
pop
mov
test
mov
inc
add
mov
les
mov
dec
xor
retf
or
jo
inc
adc
mov
push
dec
out
mov
inc
pop
cmc
loope
dec
clc
aad
and
cmc
je
sbb
inc
rcl
in
and
call
stc
jbe
xchg
and
jmp
xlat
pop
jne
das
aam
mov
push
mov
sbb
das
loopne
mov
lods
inc
sub
adc
xchg
cwde
int3
sub
stos
ss
mov
loopne
sub
sbb
xlat
or
ret
not
fadd
xchg
lds
mov
sbb
inc
dec
push
test
mov
sbb
scas
jp
movs
aas
jle
mov
and
loope
call
pusha
pop
cmp
xchg
xor
mov
xor
into
inc
inc
setl
xor
mov
mov
cmp
icebp
js
sub
loop
sbb
js
(bad)
xor
cmc
adc
ss
xchg
sub
xchg
lods
jle
inc
inc
mov
sub
leave
cmp
mov
dec
adc
fs
and
arpl
sbb
inc
test
outs
jo
frstor
sbb
push
dec
and
cmp
repnz
dec
cmp
rcl
shl
cwde
sub
lods
mov
loopne
cld
cmp
hlt
out
jo
ror
push
push
sbb
out
int3
mov
xchg
or
cwde
rcl
jp
xchg
pop
shl
je
inc
repz
pop
mov
cmc
mov
pop
fwait
sbb
or
lea
std
mov
dec
xor
mov
push
not
lods
pop
and
or
push
mov
int
movs
popa
mov
mov
xchg
loope
fild
jmp
xchg
xor
and
push
jns
push
add
dec
xor
aaa
mov
push
repz
(bad)
jne
in
adc
outs
adc
cwde
or
ins
and
pop
sti
mov
pop
call
pop
push
in
in
call
int
fdiv
ret
retf
pop
(bad)
loope
loop
dec
pop
cvtps2pd
das
jp
cmc
loope
(bad)
ret
sti
push
(bad)
fsub
fild
push
inc
ss
sub
pop
jo
sbb
jecxz
mov
pop
sub
clc
jmp
clc
shr
stc
lds
ficomp
push
(bad)
pop
call
cli
psubusb
and
cmp
jmp
fidiv
add
retf
fadd
add
scas
out
mov
inc
mov
mov
xchg
les
lock
js
pop
xor
sbb
es
inc
mov
or
sar
aaa
jle
sbb
sub
idiv
cmps
and
mov
mov
xor
adc
mov
stc
into
stos
neg
leave
cmp
ficomp
mov
dec
xor
mov
ds
pop
les
mov
aam
pop
out
loope
fadd
mov
cwde
sub
nop
push
pop
lods
mov
sub
repz
outs
hlt
scas
xchg
or
lahf
inc
xchg
gs
cmp
and
aad
jnp
dec
mov
or
jecxz
cmp
jo
sahf
sub
cwde
mul
inc
and
loop
cli
std
jb
lea
sbb
jge
ror
outs
push
cli
pop
pop
push
sbb
or
cmp
mov
cwde
sub
or
ins
cmp
and
mov
jge
outs
mov
add
add
loopne
nop
cmps
mov
mov
aad
sbb
xchg
push
push
cli
pop
sbb
fwait
test
and
sahf
in
pop
or
sub
std
pop
fild
fldcw
aam
in
nop
pusha
mov
mov
adc
mov
xchg
or
inc
fst
sbb
or
dec
bndstx
xchg
jae
cmp
(bad)
push
cli
int3
or
clc
jmp
gs
bsr
arpl
add
mov
dec
(bad)
ret
lods
dec
xor
aam
or
sbb
movs
jg
pop
hlt
(bad)
test
mov
ss
adc
test
xchg
fdiv
ss
mov
cmp
jp
jb
jecxz
sbb
mov
mov
and
cdq
je
cld
push
imul
or
stos
pop
mov
nop
jo
hlt
sub
xor
add
and
jbe
sub
inc
movs
lea
out
jb
jno
aas
test
dec
fidivr
add
inc
lock
(bad)
sub
inc
ret
dec
xchg
add
mov
iret
cmc
or
mul
out
jnp
cmp
in
and
ret
cmps
pop
add
test
movs
nop
adc
mov
rcr
adc
add
xchg
jge
imul
or
or
add
popa
pop
jbe
or
push
ins
inc
jmp
push
jo
ds
or
fadd
icebp
or
xchg
inc
sar
ds
inc
pop
retf
cmp
or
add
rcl
add
add
add
push
mov
cmps
add
div
add
or
xchg
jp
aad
pushf
aas
mov
lea
mov
clc
dec
das
mov
dec
out
shl
mov
mov
jno
cli
jns
inc
xchg
jo
in
pop
mov
jo
jns
in
mov
cmps
mov
imul
sti
xchg
cmc
sbb
bound
pop
push
sub
xchg
add
std
sub
jne
test
cli
jle
xchg
and
(bad)
loope
cld
bound
add
retf
pop
je
pop
repz
adc
dec
or
fldcw
ret
sar
inc
stc
cwde
xor
(bad)
xor
ja
cmp
push
pop
arpl
mov
inc
out
dec
xor
pop
fwait
jmp
xchg
pop
pop
sbb
and
rcl
pushf
sbb
(bad)
icebp
icebp
ds
cmp
scas
sti
add
jnp
push
addr16
lds
call
inc
pop
leave
push
cld
lods
mov
dec
pop
ror
sub
popa
pop
mov
fild
cli
into
pop
add
jecxz
(bad)
test
lds
rcr
scas
xchg
movs
retf
push
xchg
inc
stc
push
mov
adc
and
cmp
pop
repz
test
jmp
cmp
sbb
xor
cmc
fstp
idiv
fbld
aad
mov
je
jns
push
imul
mov
sbb
cmc
push
or
imul
nop
icebp
lods
and
cmp
int3
ins
retf
addr16
inc
cmp
jb
ds
test
ja
add
popf
sub
xchg
(bad)
(bad)
arpl
or
adc
cmp
aas
jo
jnp
jns
psrlw
aad
adc
push
inc
fwait
imul
add
cli
ins
add
mov
mov
xor
jae
xor
add
pop
rcl
aam
call
jecxz
cmp
enter
fidiv
pop
and
sub
in
test
adc
lock
cmp
dec
xchg
sbb
or
adc
pop
xchg
in
retf
cdq
loopne
mov
in
in
jmp
neg
fwait
loop
pop
scas
test
(bad)
loopne
retf
adc
jo
jmp
xlat
jo
xchg
enter
imul
shl
sar
popa
cs
push
xor
and
scas
xor
fild
cmc
xor
outs
mov
or
stos
outs
sbb
add
je
out
inc
sbb
ret
push
(bad)
pop
fisub
movs
lods
xchg
sub
mov
outs
in
std
cld
js
not
int3
outs
loop
pop
push
mov
jecxz
ja
adc
add
call
or
into
or
jecxz
push
xor
mov
xchg
sub
sbb
jle
in
cmp
ror
inc
outs
repz
test
jp
or
and
cmp
in
pop
stc
fld
out
inc
leave
sbb
lahf
test
xchg
push
fnstcw
cs
pop
das
leave
aad
xchg
out
cmp
fist
sub
sar
mov
out
and
pop
inc
mov
dec
test
cmp
mov
dec
xor
cli
rol
pop
movs
lahf
(bad)
and
push
icebp
cmp
shl
daa
mov
pop
sbb
inc
add
scas
xor
xchg
sub
rcr
mov
es
outs
lea
nop
xchg
inc
outs
imul
and
bound
test
and
not
cmps
cwde
call
push
jno
mov
repnz
hlt
adc
adc
inc
jo
repz
in
or
sbb
pop
push
and
mov
div
iret
xchg
sub
pop
and
mov
xor
dec
fdiv
mov
jl
pop
cmp
push
push
ds
mov
cmp
push
push
cmps
dec
mov
jg
lea
lds
ja
jecxz
jmp
rcl
sub
repnz
shl
call
mov
sahf
or
icebp
xor
test
push
push
movs
dec
cmc
out
(bad)
jmp
fwait
mov
js
sub
adc
cmc
push
mov
mov
aad
popf
and
lahf
std
inc
in
fdivr
arpl
fsubr
cmovg
pop
pop
cli
(bad)
fimul
push
retf
jecxz
ror
xchg
(bad)
stos
call
scas
xor
repz
jge
dec
push
or
xor
loopne
(bad)
xchg
imul
clc
bswap
add
xchg
xor
sub
retf
sbb
ds
repz
jl
adc
ret
mov
jmp
aam
mov
lahf
mov
das
xchg
test
jns
add
mov
cwde
dec
mov
cmp
jno
arpl
sar
pop
pop
bound
xchg
mov
repz
sub
and
xor
xlat
add
scas
xor
push
enter
outs
mov
es
in
mov
xchg
fs
icebp
daa
mov
mov
movs
mul
jp
xchg
inc
push
dec
clc
xchg
(bad)
jmp
in
fs
imul
je
push
xor
sahf
hlt
or
mov
mov
rcl
in
and
es
cmp
fsub
and
outs
es
lock
cmp
xor
repnz
aad
sub
sub
js
xor
repz
js
fnstcw
test
pusha
retf
rol
mov
jmp
mov
mov
xchg
call
push
or
xor
repnz
mov
add
cld
int3
sub
fwait
bound
(bad)
xchg
aaa
cmp
test
xchg
add
sub
in
jnp
loopne
cwde
(bad)
(bad)
and
movs
nop
dec
adc
add
cs
push
rcl
dec
or
cwde
pop
add
jge
icebp
call
sub
cmp
ret
pop
in
repnz
popf
bound
pop
inc
mov
in
hlt
(bad)
jbe
jmp
sbb
rol
xor
(bad)
leave
xlat
ret
outs
loopne
inc
jb
jbe
ins
mov
(bad)
jg
loopne
leave
cdq
inc
outs
icebp
inc
mov
jbe
les
enter
imul
xchg
lock
(bad)
jecxz
push
sahf
pop
pop
pusha
int3
xchg
cmp
xchg
icebp
sbb
int
jns
test
fiadd
out
test
loopne
jg
test
fst
sub
xor
xchg
add
cmp
inc
cmp
or
retf
loopne
ins
cmp
inc
bound
dec
push
retf
dec
addr16
stc
xor
inc
push
dec
test
fnsave
movs
loope
cmc
fdiv
dec
dec
les
loop
mov
dec
dec
pop
cdq
mov
nop
jb
pop
push
mov
cs
mov
popf
push
xchg
inc
ds
sbb
and
aam
js
sbb
test
sub
das
xchg
and
jmp
lock
pop
ja
out
jge
std
pop
xor
sar
mov
stos
sbb
test
repz
out
cmp
fcmove
clc
cwde
xor
jns
je
pop
into
adc
mov
(bad)
in
dec
mov
push
mov
xchg
mov
ins
sub
(bad)
adc
jno
sar
iret
mov
mov
inc
push
pop
fnsave
(bad)
inc
pop
les
mov
pop
jge
je
(bad)
jmp
sbb
jecxz
sub
fcomp
xchg
jae
addr16
mov
fyl2x
sbb
aas
xchg
xchg
jl
and
mov
sub
icebp
pop
cmp
(bad)
mov
mov
dec
btr
ffreep
xor
dec
ror
icebp
push
ds
inc
sbb
aad
(bad)
sti
xchg
mov
cmps
aas
dec
xchg
xchg
fadd
dec
pop
rol
cmc
nop
or
ins
pop
sub
jno
mov
dec
cmc
(bad)
mov
xlat
test
scas
push
mov
sub
gs
pusha
mov
jp
arpl
jmp
sub
(bad)
std
mov
in
mov
jae
adc
xor
xor
jnp
push
ds
pop
pop
stos
(bad)
out
add
mov
ror
int
ret
xchg
icebp
aas
push
lock
arpl
addr16
adc
sbb
lods
sub
adc
rcr
ins
xchg
fsub
mov
jle
in
mul
add
cs
pushf
rcl
sub
adc
jns
test
cmps
retf
clc
push
xchg
fcom
sbb
mov
test
(bad)
icebp
jge
frstor
ins
pop
sar
xchg
out
mov
imul
ins
xlat
or
jbe
push
shl
mov
outs
or
jmp
lds
in
aad
mov
std
dec
enter
jno
and
pop
inc
test
mov
jecxz
xor
dec
inc
xor
xchg
mov
mov
mov
sub
mov
movs
clc
int
lea
cmc
pop
in
outs
pop
pop
bound
mov
add
mov
and
inc
jnp
test
lahf
xor
ror
popf
jmp
std
ja
movs
retf
test
hlt
cdq
or
imul
outs
inc
and
out
sub
fdivr
popf
adc
movups
and
js
sahf
and
xor
icebp
xchg
(bad)
cdq
jle
jmp
sub
into
dec
dec
int
aaa
mov
xchg
test
jns
mov
arpl
jecxz
not
add
ret
shl
ins
hlt
or
shr
jl
pushf
sub
sbb
adc
fldcw
mov
retf
xchg
jnp
cmp
cwde
test
inc
and
jnp
adc
in
push
mov
sahf
jnp
xchg
into
repnz
(bad)
xchg
sahf
es
out
inc
addr16
outs
into
dec
xchg
daa
mov
or
rcl
rcr
fnstcw
sahf
mov
adc
daa
fst
adc
int
test
jecxz
stos
aaa
out
in
movs
and
movs
adc
mov
or
test
movs
sub
xchg
fmulp
and
mov
ret
pusha
mov
imul
daa
repnz
add
and
cmc
jns
add
aad
repz
lods
or
test
ins
call
push
jg
xlat
div
and
nop
pop
or
or
push
ss
mul
leave
pop
popf
(bad)
push
shr
cmps
cli
adc
fld
lods
push
xchg
cdq
jmp
cdq
lds
mov
jae
enter
pop
xor
mov
mov
or
xchg
(bad)
sbb
dec
pop
jo
or
je
jl
cmp
adc
les
inc
retf
xor
push
mov
and
movs
mov
xchg
loopne
jl
pop
sti
js
jg
jb
cmp
inc
cld
cmps
and
jnp
stos
push
cmp
outs
mov
mov
xlat
ins
adc
sahf
stos
xchg
adc
adc
and
(bad)
cmps
cmp
fcomp
and
clc
ret
nop
mov
inc
stos
cmc
imul
mov
scas
fcmove
mov
ins
std
(bad)
movs
mov
jae
and
cmp
data16
xor
dec
scas
rol
mov
enter
add
shl
add
sub
push
xchg
out
dec
fwait
push
add
inc
dec
jae
or
call
call
cli
enter
imul
xchg
cmps
pop
pop
ret
das
xor
xchg
jne
jae
and
mov
ins
out
stos
cdq
adc
xchg
sbb
sub
sbb
ins
mov
fwait
ja
in
add
in
adc
es
jno
stos
dec
ins
xlat
xchg
xor
mov
mov
push
push
inc
xor
sub
fcom
repnz
in
pop
mov
sti
mov
xor
ins
add
je
pusha
adc
cwde
addr16
sbb
inc
loope
push
jae
outs
retf
mov
and
sub
gs
sub
or
inc
mul
int
push
push
jg
xchg
and
sbb
imul
xor
fstp
gs
scas
in
pop
mov
mov
push
mov
pop
out
jge
push
hlt
ret
gs
mov
xor
call
mov
pop
sbb
mov
iret
in
mov
call
sub
mov
sub
and
and
(bad)
mov
shl
scas
out
shl
mov
scas
sub
sbb
ficomp
in
mov
fcomp
pop
test
lods
data16
mov
das
sbb
mov
addr16
icebp
mov
xlat
jno
inc
xor
mul
cmps
jp
ss
mov
std
repz
and
push
mov
push
fidiv
xor
or
and
test
cld
enter
lea
xchg
and
mov
push
push
sub
push
push
push
mov
xor
push
lea
mov
mov
.byte
dec
