push
add
add
add
add
add
add
fiadd
add
add
add
add
add
add
sbb
add
cmps
xor
add
adc
sub
mov
or
jno
bound
nop
and
and
mov
test
call
or
add
scas
rcl
(bad)
push
je
pusha
cmp
mov
test
push
es
add
mov
shl
in
enter
xlat
and
fist
fisubr
or
inc
loope
ret
cmps
sbb
add
add
add
add
jge
add
add
sub
add
jge
add
add
jle
add
add
add
add
jae
add
or
add
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
adc
jnp
add
add
outs
add
or
add
add
xor
ja
add
add
add
sub
dec
add
add
add
add
add
add
or
add
sbb
add
add
add
add
dec
add
sub
sub
add
add
dec
add
sub
add
and
add
add
push
add
sub
add
add
add
scas
add
add
sub
add
push
outs
add
or
sub
push
sub
sub
and
add
add
push
add
sub
add
outs
add
or
add
xor
movs
add
add
add
adc
and
or
add
add
add
add
pop
add
add
add
and
add
aas
add
add
add
add
add
push
add
sub
(bad)
sub
add
sub
and
add
add
push
add
sub
add
dec
add
sub
add
or
and
add
dec
add
sub
add
jo
or
add
sub
add
or
and
add
add
push
add
sub
add
push
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
inc
adc
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
mov
add
adc
add
or
jle
add
add
add
add
add
sbb
add
es
add
add
jle
add
add
sbb
add
add
add
add
aaa
add
or
sub
add
or
add
add
sub
add
push
sub
add
jo
or
add
jb
add
jo
or
add
outs
mov
add
or
mov
or
sbb
add
es
jle
add
add
daa
add
or
adc
sub
add
sub
add
push
or
add
outs
or
add
fadd
outs
add
add
sub
adc
add
add
push
add
add
adc
add
fadd
add
add
add
sub
inc
pop
add
add
add
add
add
lahf
add
add
add
or
add
aas
add
add
and
add
add
push
add
sub
cmp
add
add
dec
add
sub
add
add
imul
add
add
xor
add
sbb
add
and
push
add
sub
add
dec
add
sub
jo
or
add
sub
add
add
dec
add
cmp
(bad)
push
add
jo
or
add
sub
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
push
add
jo
or
add
sub
add
add
dec
add
cmp
(bad)
push
add
jo
or
add
sub
add
jo
or
add
sub
xor
add
add
add
add
adc
jl
add
add
push
adc
add
outs
add
add
sub
add
ja
add
or
add
add
add
add
add
add
sub
add
push
sub
add
adc
add
pop
add
add
add
adc
or
add
add
xor
add
add
add
add
adc
or
adc
add
pop
add
add
add
adc
or
add
add
xor
or
add
adc
sub
or
add
add
add
add
jg
add
sahf
add
add
add
add
add
add
add
dec
add
add
and
add
add
push
add
sub
push
jb
add
jo
or
add
sub
mov
push
add
add
push
add
sub
add
add
add
add
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
or
add
add
add
add
dec
add
cmp
(bad)
inc
jnp
add
add
cmp
add
and
add
add
push
add
cmp
(bad)
inc
add
add
add
adc
add
sub
add
push
add
cmp
(bad)
(bad)
inc
jle
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jle
add
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
jle
add
add
add
sub
add
push
sub
add
jp
add
or
add
add
add
or
add
add
jle
add
or
add
add
add
xor
add
add
adc
sbb
or
add
add
add
add
dec
add
add
add
add
add
add
add
add
dec
add
sub
add
add
add
mov
add
sub
and
add
add
push
add
sub
add
jge
add
add
sub
push
sub
sub
and
add
add
push
add
sub
add
dec
add
sub
add
add
test
or
add
add
lea
add
jge
add
add
add
adc
add
add
add
adc
sbb
or
add
add
add
add
dec
add
add
add
add
add
add
add
add
dec
add
sub
add
add
add
mov
add
sub
and
add
add
push
add
sub
add
jge
add
add
sub
push
sub
sub
and
add
add
push
add
sub
add
dec
add
sub
add
add
test
or
add
add
lea
add
jge
add
add
add
and
add
adc
add
sub
add
adc
add
dec
add
add
push
dec
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
test
add
dec
add
add
add
add
adc
add
dec
add
sub
add
add
adc
add
sub
push
add
add
push
add
sub
add
or
add
sub
xor
adc
add
dec
add
cmp
(bad)
inc
jb
add
jo
or
add
sub
sub
add
and
add
add
push
add
cmp
inc
jnp
add
add
cmp
add
and
add
add
push
add
cmp
(bad)
(bad)
(bad)
cmp
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
add
add
adc
add
sub
add
add
dec
add
cmp
(bad)
(bad)
inc
add
add
add
adc
add
sub
or
add
dec
add
cmp
(bad)
(bad)
inc
add
add
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
add
add
add
add
and
push
add
cmp
add
add
add
add
add
and
add
dec
add
cmp
jnp
add
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
cmp
add
add
push
add
cmp
(bad)
inc
jnp
add
add
or
xchg
add
add
add
add
dec
add
cmp
inc
add
add
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
cmp
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
add
add
add
add
and
add
add
push
add
cmp
std
(bad)
inc
add
add
add
add
add
pop
sub
push
sub
cmp
jmp
add
push
add
cmp
std
(bad)
inc
add
add
add
adc
add
sub
sub
add
push
sub
xor
add
add
adc
add
jo
or
add
sub
add
push
adc
add
mov
add
adc
add
cmp
add
push
add
jo
or
add
jb
add
jo
or
add
sub
add
or
add
add
xchg
add
jo
or
add
push
sub
pop
add
push
jle
add
add
sub
add
push
sub
add
add
adc
add
and
sbb
add
jo
or
add
jle
add
add
sub
add
push
jae
add
push
sub
add
fiadd
sub
adc
add
add
add
and
add
add
xor
add
add
adc
add
jo
or
add
sub
add
push
adc
add
mov
add
adc
add
sub
add
or
add
sub
add
jle
add
add
xchg
add
jo
or
add
jb
add
jo
or
add
sub
add
or
add
add
sub
add
push
sub
add
or
add
sub
add
sub
jb
add
jo
or
add
sub
add
jle
add
add
mov
outs
inc
add
push
jb
add
jo
or
add
sub
xchg
add
jo
or
add
sub
add
or
sub
inc
jle
add
add
sub
add
push
outs
mov
mov
mov
or
add
pop
sub
pop
add
push
jle
add
add
sub
add
push
sub
add
add
adc
add
and
jb
add
jo
or
add
jle
add
add
sub
add
push
jae
add
push
sub
add
fiadd
sub
add
adc
add
add
add
cli
add
or
xor
add
add
adc
add
jo
or
add
sub
add
push
sbb
add
mov
add
sbb
add
cmp
add
pop
add
jo
or
add
jb
add
jo
or
add
sub
add
or
add
add
mov
or
add
push
sub
pop
add
push
jle
add
add
sub
add
push
sub
jle
add
add
pop
add
jo
or
add
jb
add
jo
or
add
sub
add
or
add
add
icebp
add
jo
or
add
push
sub
pop
add
push
push
sub
or
sbb
add
sbb
add
and
sbb
add
add
push
jle
add
add
sub
add
push
jae
add
push
sub
add
fiadd
sub
add
add
add
add
pop
add
add
add
xor
add
add
adc
add
add
push
sub
add
push
sbb
add
mov
add
sbb
add
and
add
mov
add
and
add
and
add
mov
add
and
add
sub
add
mov
add
sub
add
sub
add
mov
add
sub
add
xor
add
mov
add
xor
add
xor
add
mov
add
xor
add
cmp
add
mov
add
cmp
add
cmp
add
mov
add
cmp
add
add
add
mov
add
add
add
cmp
add
cmps
add
add
push
jb
add
jo
or
add
sub
add
or
add
add
icebp
add
add
push
push
sub
pop
add
push
jle
add
add
sub
add
push
sub
add
add
and
add
and
sbb
push
add
or
add
jle
add
add
sub
add
push
jae
add
push
sub
add
fiadd
jle
add
add
jno
add
or
add
jb
push
add
or
add
sub
add
or
mov
add
add
or
add
or
and
pop
add
push
jle
add
add
sub
add
push
sub
add
add
xor
add
and
sbb
pop
add
or
add
jle
add
add
sub
add
push
jae
add
push
sub
add
fiadd
jle
add
add
jg
add
or
add
pop
sub
add
adc
rol
add
out
add
or
add
adc
imul
sub
add
adc
sbb
adc
sub
sbb
sbb
add
add
cmp
add
or
add
adc
push
sub
add
adc
jo
or
add
sbb
add
or
pop
sbb
add
add
add
or
push
jle
add
add
pop
or
jo
or
add
adc
sub
pop
add
push
jle
add
add
push
sub
add
push
sub
push
add
add
sbb
pop
adc
adc
adc
mov
js
(bad)
(bad)
jle
add
add
retf
add
add
add
jg
add
or
add
push
sub
add
adc
rol
add
jge
add
or
add
adc
imul
sub
add
adc
sbb
adc
adc
mov
cmp
add
or
add
adc
sub
pop
add
push
adc
jb
or
jo
or
add
sbb
add
or
pop
sbb
add
pop
push
sbb
xchg
add
or
or
add
add
pop
or
jo
or
add
adc
sub
pop
add
push
jle
add
add
or
and
add
sub
push
add
add
sbb
adc
aas
js
(bad)
(bad)
fisub
adc
sbb
or
jo
or
add
jle
add
add
or
push
add
push
jae
add
push
sub
add
fiadd
sub
or
or
add
or
push
cmp
add
adc
sub
or
or
add
add
pop
add
jle
add
add
mov
or
add
push
jb
or
jo
or
add
sub
in
add
or
add
sub
add
adc
mov
lahf
or
jo
or
add
adc
and
pop
add
push
jle
add
add
or
and
add
sub
add
add
or
and
add
adc
add
or
add
jle
add
add
or
push
jae
add
push
sub
add
fiadd
jle
add
add
mov
add
cmp
cmp
add
mov
or
add
push
jb
or
jo
or
add
sub
cmp
add
or
add
sub
add
adc
jle
add
add
aas
or
jo
or
add
adc
sub
pop
add
push
jle
add
add
push
sub
add
push
sub
add
add
push
sub
add
adc
sbb
or
jo
or
add
jle
add
add
movaps
add
push
jae
add
push
sub
add
fiadd
jle
add
add
mov
add
cmp
cmp
add
mov
or
add
push
jb
or
jo
or
add
sub
cmp
add
or
add
sub
add
adc
jle
add
add
test
add
push
adc
sub
pop
add
push
jle
add
add
adc
and
add
sub
add
add
adc
fisub
adc
sbb
or
jo
or
add
jle
add
add
adc
push
add
push
jae
add
push
sub
add
fiadd
jle
add
add
mov
add
cmp
cmp
add
mov
or
add
push
jb
or
jo
or
add
sub
cmp
add
or
add
sub
add
adc
jle
add
add
xchg
or
jo
or
add
adc
sub
pop
add
push
jle
add
add
adc
and
add
sub
add
add
adc
fisub
adc
sbb
or
jo
or
add
jle
add
add
adc
push
add
push
jae
add
push
sub
add
fiadd
jle
add
add
mov
add
cmp
cmp
add
mov
or
add
push
jb
or
jo
or
add
sub
cmp
add
or
add
sub
add
adc
mov
cmp
jo
or
add
adc
and
pop
add
push
jle
add
add
adc
and
add
sub
add
add
adc
cmp
add
adc
add
or
add
jle
add
add
adc
push
jae
add
push
sub
add
fiadd
jle
add
add
mov
add
cmp
cmp
add
mov
or
add
push
jb
or
jo
or
add
sub
cmp
add
or
add
sub
add
adc
jle
add
add
in
add
or
add
adc
sub
pop
add
push
jle
add
add
push
sub
add
push
sub
add
add
push
cmp
add
adc
sbb
or
add
push
jle
add
add
pop
sub
add
push
jae
add
push
sub
add
fiadd
jle
add
add
mov
add
cmp
cmp
add
mov
or
add
push
jb
or
add
push
sub
cmp
add
or
add
sub
add
adc
jle
add
add
(bad)
or
add
push
adc
sub
pop
add
push
jle
add
add
sbb
and
add
sub
add
add
sbb
fisub
adc
sbb
or
add
push
jle
add
add
sbb
push
add
push
jae
add
push
sub
add
fiadd
adc
sub
add
cmp
push
adc
(bad)
push
or
add
outs
or
add
fsubr
add
add
add
add
add
scas
add
add
add
add
add
add
or
add
add
add
add
add
add
and
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
xor
add
or
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
imul
add
add
add
add
add
xor
add
add
adc
adc
add
adc
sbb
add
sub
add
push
or
sub
add
push
or
sub
add
push
or
cmp
add
jb
push
add
or
add
sub
add
or
add
and
add
or
add
or
and
pop
add
push
jle
add
add
sub
add
push
sub
add
outs
xchg
add
or
push
add
or
add
sub
add
sub
pop
adc
add
cmp
add
jb
push
add
or
add
sub
add
adc
mov
dec
push
add
or
add
adc
and
pop
add
push
jle
add
add
add
and
add
sub
add
add
xchg
add
or
push
add
or
add
sub
add
sub
pop
adc
add
add
jb
push
add
or
add
sub
add
adc
add
gs
add
or
add
adc
push
sub
add
jle
add
add
add
push
sub
add
add
or
push
add
or
add
sub
add
sub
pop
sbb
add
adc
sbb
push
add
or
add
jle
add
add
push
sub
add
push
jae
add
push
sub
add
fiadd
sub
add
inc
sbb
add
add
dec
add
add
add
add
xor
les
add
add
add
cmp
or
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
ss
add
fiadd
add
push
add
add
add
xchg
add
add
add
add
add
inc
add
add
mov
add
add
jl
add
push
add
add
inc
pop
add
sub
add
add
add
push
add
je
add
aas
add
add
push
add
pop
add
add
push
pop
add
push
push
add
out
add
jmp
add
add
add
add
add
mov
add
js
add
aaa
add
add
add
add
add
add
add
data16
add
add
add
add
popf
add
add
add
mov
add
pop
add
add
pop
add
add
add
add
and
add
dec
add
cmp
(bad)
(bad)
(bad)
jle
add
or
and
add
add
push
add
cmp
(bad)
(bad)
(bad)
jle
add
add
mov
xor
push
add
cmp
xlat
push
add
or
add
outs
xchg
add
or
add
add
add
push
add
cmp
sub
add
popa
and
push
add
cmp
inc
jb
push
add
or
add
outs
xchg
add
or
pop
add
add
or
add
dec
add
cmp
(bad)
(bad)
jle
add
or
and
push
add
cmp
(bad)
(bad)
jle
add
or
and
add
dec
add
cmp
(bad)
(bad)
(bad)
jle
add
add
outs
add
add
sub
add
dec
add
cmp
(bad)
(bad)
push
push
add
or
add
jle
add
add
adc
add
sub
add
push
and
add
add
push
add
cmp
std
(bad)
(bad)
jle
add
add
aas
add
add
and
push
add
cmp
std
(bad)
push
(bad)
jo
or
add
jle
add
add
adc
add
sub
add
push
and
add
dec
add
cmp
or
aas
add
add
cmp
add
dec
add
cmp
or
aaa
add
add
cmp
add
dec
add
cmp
(bad)
call
or
sub
add
push
cmp
add
and
add
dec
add
cmp
(bad)
inc
jb
(bad)
jo
or
add
outs
xchg
add
or
and
add
add
push
add
cmp
std
(bad)
push
(bad)
jo
or
add
jle
add
add
adc
add
sub
add
push
and
add
add
push
add
cmp
std
(bad)
(bad)
jle
add
add
push
and
add
add
push
add
cmp
cld
(bad)
(bad)
jle
add
add
pop
(bad)
(bad)
jmp
aaa
add
add
push
add
cmp
cld
(bad)
inc
jb
(bad)
jo
or
add
outs
xchg
add
or
cld
std
(bad)
jmp
or
add
dec
add
cmp
or
and
add
add
add
dec
add
cmp
jb
(bad)
jo
or
add
outs
xchg
add
or
fs
(bad)
jmp
adc
add
dec
add
cmp
(bad)
push
(bad)
jo
or
add
jle
add
add
adc
add
sub
add
push
and
add
dec
add
cmp
(bad)
call
add
add
push
adc
add
add
add
push
add
cmp
cld
(bad)
(bad)
jle
add
or
and
add
dec
add
cmp
cld
(bad)
(bad)
jle
add
or
and
push
add
cmp
cld
(bad)
(bad)
jle
add
add
jb
xor
add
dec
add
cmp
sti
(bad)
inc
jb
(bad)
jo
or
add
outs
xchg
add
or
and
push
add
cmp
sti
(bad)
(bad)
jle
add
or
and
add
add
push
add
cmp
(bad)
jo
or
add
jle
add
add
adc
add
sub
add
push
and
add
add
push
add
cmp
and
add
je
xor
add
dec
add
cmp
(bad)
inc
jb
(bad)
jo
or
add
outs
xchg
add
or
and
add
add
push
add
cmp
(bad)
call
add
add
push
sbb
add
xor
add
dec
add
cmp
(bad)
push
adc
jo
or
add
jle
add
add
adc
add
sub
add
push
and
add
add
push
add
cmp
and
add
jp
(bad)
jmp
das
add
add
push
add
cmp
cli
(bad)
(bad)
jle
add
or
and
add
add
push
add
cmp
cli
(bad)
call
add
and
add
add
add
push
add
cmp
cli
(bad)
call
or
sub
add
push
add
add
and
add
dec
add
cmp
jb
adc
jo
or
add
outs
xchg
add
or
or
(bad)
jmp
adc
add
dec
add
cmp
aaa
adc
jo
or
add
jle
add
add
adc
add
sub
add
push
and
add
add
push
add
cmp
(bad)
call
add
add
push
sub
add
sub
add
dec
add
cmp
(bad)
(bad)
jle
add
or
and
add
add
push
add
cmp
cli
(bad)
inc
jb
adc
jo
or
add
outs
xchg
add
or
fadd
add
and
add
add
push
add
cmp
(bad)
inc
jb
adc
jo
or
add
outs
xchg
add
or
and
push
add
cmp
stc
(bad)
(bad)
jle
add
or
and
add
add
push
add
cmp
stc
(bad)
inc
jb
adc
jo
or
add
outs
xchg
add
or
(bad)
(bad)
jmp
sbb
add
dec
add
cmp
xor
add
je
sub
add
dec
add
cmp
add
add
loopne
add
and
add
add
push
add
cmp
sub
add
push
xor
add
sub
add
dec
add
cmp
(bad)
push
adc
jo
or
add
jle
add
add
adc
add
sub
add
push
pop
sub
push
sub
sub
and
add
add
push
add
cmp
stc
(bad)
(bad)
jle
add
add
inc
sti
(bad)
jmp
daa
add
add
push
add
cmp
stc
(bad)
call
add
add
push
sbb
add
xor
add
dec
add
cmp
(bad)
call
or
sub
add
push
xor
add
add
add
push
add
cmp
clc
(bad)
push
adc
jo
or
add
jle
add
add
adc
add
sub
add
push
and
add
add
push
add
cmp
add
add
push
and
add
xor
add
dec
add
cmp
fist
add
or
add
jle
add
add
adc
add
sub
add
push
and
add
add
push
add
cmp
(bad)
call
or
sub
add
push
cmp
add
and
add
dec
add
cmp
(bad)
jle
add
or
and
add
add
push
add
cmp
call
add
add
push
adc
add
pop
add
add
push
add
cmp
clc
(bad)
inc
jb
adc
jo
or
add
outs
xchg
add
or
and
push
add
cmp
clc
(bad)
push
adc
jo
or
add
jle
add
add
adc
add
sub
add
push
and
add
dec
add
cmp
idiv
push
adc
jo
or
add
jle
add
add
adc
add
sub
add
push
and
add
add
push
add
cmp
inc
add
add
imul
dec
add
cmp
jb
adc
jo
or
add
outs
xchg
add
or
push
(bad)
(bad)
jmp
cmp
add
dec
add
cmp
(bad)
call
add
add
push
sub
add
sub
add
dec
add
cmp
(bad)
push
adc
jo
or
add
jle
add
add
adc
add
sub
add
push
sub
xor
les
add
add
add
cmp
or
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
ss
add
fiadd
add
push
add
add
add
xchg
add
add
add
add
add
inc
add
add
mov
add
add
jl
add
push
add
add
inc
pop
add
sub
add
add
add
push
add
je
add
aas
add
add
push
add
pop
add
add
push
pop
add
push
push
add
out
add
jmp
add
add
add
add
add
mov
add
js
add
aaa
add
add
add
add
add
add
add
data16
add
add
add
add
popf
add
add
add
mov
add
pop
add
add
pop
add
add
add
add
and
add
dec
add
cmp
(bad)
(bad)
(bad)
jle
add
or
and
add
add
push
add
cmp
(bad)
(bad)
(bad)
jle
add
add
mov
xor
push
add
cmp
xlat
push
add
or
add
outs
xchg
add
or
add
add
add
push
add
cmp
sub
add
popa
and
push
add
cmp
inc
jb
push
add
or
add
outs
xchg
add
or
pop
add
add
or
add
dec
add
cmp
(bad)
(bad)
jle
add
or
and
push
add
cmp
(bad)
(bad)
jle
add
or
and
add
dec
add
cmp
(bad)
(bad)
(bad)
jle
add
add
outs
add
add
sub
add
dec
add
cmp
(bad)
(bad)
push
push
add
or
add
jle
add
add
adc
add
sub
add
push
and
add
add
push
add
cmp
std
(bad)
(bad)
jle
add
add
aas
add
add
and
push
add
cmp
std
(bad)
push
(bad)
jo
or
add
jle
add
add
adc
add
sub
add
push
and
add
dec
add
cmp
or
aas
add
add
cmp
add
dec
add
cmp
or
aaa
add
add
cmp
add
dec
add
cmp
(bad)
call
or
sub
add
push
cmp
add
and
add
dec
add
cmp
(bad)
inc
jb
(bad)
jo
or
add
outs
xchg
add
or
and
add
add
push
add
cmp
std
(bad)
push
(bad)
jo
or
add
jle
add
add
adc
add
sub
add
push
and
add
add
push
add
cmp
std
(bad)
(bad)
jle
add
add
push
and
add
add
push
add
cmp
cld
(bad)
(bad)
jle
add
add
pop
(bad)
(bad)
jmp
aaa
add
add
push
add
cmp
cld
(bad)
inc
jb
(bad)
jo
or
add
outs
xchg
add
or
cld
std
(bad)
jmp
or
add
dec
add
cmp
or
and
add
add
add
dec
add
cmp
jb
(bad)
jo
or
add
outs
xchg
add
or
fs
(bad)
jmp
adc
add
dec
add
cmp
(bad)
push
(bad)
jo
or
add
jle
add
add
adc
add
sub
add
push
and
add
dec
add
cmp
(bad)
call
add
daa
add
push
adc
add
add
add
push
add
cmp
cld
(bad)
(bad)
jle
add
or
and
add
dec
add
cmp
cld
(bad)
(bad)
jle
add
or
and
push
add
cmp
cld
(bad)
(bad)
jle
add
add
jb
xor
add
dec
add
cmp
sti
(bad)
inc
jb
(bad)
jo
or
add
outs
xchg
add
or
and
push
add
cmp
sti
(bad)
(bad)
jle
add
or
and
add
add
push
add
cmp
(bad)
jo
or
add
jle
add
add
adc
add
sub
add
push
and
add
add
push
add
cmp
and
add
je
xor
add
dec
add
cmp
(bad)
inc
jb
(bad)
jo
or
add
outs
xchg
add
or
and
add
add
push
add
cmp
(bad)
call
add
daa
add
push
sbb
add
xor
add
dec
add
cmp
(bad)
push
adc
jo
or
add
jle
add
add
adc
add
sub
add
push
and
add
add
push
add
cmp
and
add
jp
(bad)
jmp
das
add
add
push
add
cmp
cli
(bad)
(bad)
jle
add
or
and
add
add
push
add
cmp
cli
(bad)
call
add
and
add
add
add
push
add
cmp
cli
(bad)
call
or
sub
add
push
add
add
and
add
dec
add
cmp
jb
adc
jo
or
add
outs
xchg
add
or
or
(bad)
jmp
adc
add
dec
add
cmp
aaa
adc
jo
or
add
jle
add
add
adc
add
sub
add
push
and
add
add
push
add
cmp
(bad)
call
add
daa
add
push
sub
add
sub
add
dec
add
cmp
(bad)
(bad)
jle
add
or
and
add
add
push
add
cmp
cli
(bad)
inc
jb
adc
jo
or
add
outs
xchg
add
or
fadd
add
and
add
add
push
add
cmp
(bad)
inc
jb
adc
jo
or
add
outs
xchg
add
or
and
push
add
cmp
stc
(bad)
(bad)
jle
add
or
and
add
add
push
add
cmp
stc
(bad)
inc
jb
adc
jo
or
add
outs
xchg
add
or
(bad)
(bad)
jmp
sbb
add
dec
add
cmp
xor
add
je
sub
add
dec
add
cmp
add
add
loopne
add
and
add
add
push
add
cmp
sub
add
push
xor
add
sub
add
dec
add
cmp
(bad)
push
adc
jo
or
add
jle
add
add
adc
add
sub
add
push
pop
sub
push
sub
sub
and
add
add
push
add
cmp
stc
(bad)
(bad)
jle
add
add
inc
sti
(bad)
jmp
daa
add
add
push
add
cmp
stc
(bad)
call
add
daa
add
push
sbb
add
xor
add
dec
add
cmp
(bad)
call
or
sub
add
push
xor
add
add
add
push
add
cmp
clc
(bad)
push
adc
jo
or
add
jle
add
add
adc
add
sub
add
push
and
add
add
push
add
cmp
add
daa
add
push
and
add
xor
add
dec
add
cmp
fist
add
or
add
jle
add
add
adc
add
sub
add
push
and
add
add
push
add
cmp
(bad)
call
or
sub
add
push
cmp
add
and
add
dec
add
cmp
(bad)
jle
add
or
and
add
add
push
add
cmp
call
add
daa
add
push
adc
add
pop
add
add
push
add
cmp
clc
(bad)
inc
jb
adc
jo
or
add
outs
xchg
add
or
and
push
add
cmp
clc
(bad)
push
adc
jo
or
add
jle
add
add
adc
add
sub
add
push
and
add
dec
add
cmp
idiv
push
adc
jo
or
add
jle
add
add
adc
add
sub
add
push
and
add
add
push
add
cmp
inc
add
add
imul
dec
add
cmp
jb
adc
jo
or
add
outs
xchg
add
or
push
(bad)
(bad)
jmp
cmp
add
dec
add
cmp
(bad)
call
add
daa
add
push
sub
add
sub
add
dec
add
cmp
(bad)
push
adc
jo
or
add
jle
add
add
adc
add
sub
add
push
sub
xor
add
add
add
add
adc
sub
add
push
add
and
add
add
push
add
push
sub
sbb
add
test
add
adc
pop
add
push
sub
jle
add
add
cmps
adc
jo
or
add
push
outs
dec
add
or
cmp
add
sub
add
push
outs
dec
add
or
push
cmp
add
adc
sub
add
or
outs
xchg
add
push
or
outs
aaa
add
or
pop
cmp
add
add
pop
sub
add
or
add
adc
add
push
sub
jle
add
add
add
push
sub
add
push
jle
add
add
or
add
or
add
adc
push
sub
add
inc
adc
push
sub
add
jle
add
add
xor
add
or
add
adc
push
sub
add
sbb
adc
jo
or
add
adc
push
sub
add
add
pop
add
push
adc
push
sub
jle
add
add
add
push
sub
add
push
jle
add
add
mov
add
or
add
adc
push
sub
add
inc
adc
push
sub
add
jle
add
add
xor
add
or
add
adc
push
sub
add
sbb
adc
jo
or
add
adc
push
sub
add
add
pop
add
push
adc
sub
add
cmp
(bad)
(bad)
(bad)
fimul
adc
(bad)
push
or
add
outs
or
add
fcom
push
sub
add
cmp
adc
(bad)
push
or
or
add
fsubr
add
add
add
add
add
jno
add
xor
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
jle
add
push
add
add
add
add
add
add
add
add
add
call
add
add
add
xor
add
add
adc
xor
or
add
add
add
add
dec
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
and
add
add
push
add
cmp
add
sub
add
or
or
add
dec
add
test
add
add
dec
add
cmp
add
or
sub
push
and
push
add
adc
pop
add
add
push
add
(bad)
dec
jb
adc
jo
or
add
outs
xchg
add
or
and
add
add
push
add
(bad)
call
add
pop
adc
add
add
dec
add
(bad)
call
sub
add
push
or
add
add
dec
add
(bad)
inc
or
sub
sub
and
add
add
push
add
(bad)
dec
adc
or
push
add
add
push
add
(bad)
call
add
mov
out
sbb
add
jmp
add
adc
add
push
or
outs
pusha
add
push
pop
outs
bound
add
or
outs
popa
add
push
pop
outs
pop
add
push
sub
jle
add
add
outs
push
add
push
sub
add
push
jle
add
add
sub
add
or
add
pop
outs
push
add
push
sub
fidivr
es
outs
push
add
push
sub
add
jle
add
add
push
adc
jo
or
add
pop
outs
push
add
push
sub
ficom
jb
adc
jo
or
add
pop
outs
push
add
push
sub
push
sub
add
jle
add
add
sub
add
push
sub
add
sub
add
push
sub
jle
add
add
pop
sub
add
jle
add
add
fst
add
or
add
or
and
sub
jb
adc
jo
or
add
or
mov
add
or
sub
add
sub
add
add
add
add
and
sub
add
add
xor
add
add
add
and
add
jle
add
add
dec
add
add
imul
add
push
or
add
add
jle
add
add
push
add
cmp
or
add
sub
and
jle
add
add
sub
add
push
sub
add
dec
adc
jo
or
add
or
and
pop
add
push
sub
adc
jo
or
add
or
mov
add
sub
add
jb
adc
jo
or
add
jle
add
add
fist
jo
or
add
or
das
add
push
pop
push
sub
add
sub
jb
adc
jo
or
add
or
sub
add
sub
jb
adc
add
push
or
mov
add
or
sub
add
or
mov
mov
pop
adc
add
push
or
and
ficomp
or
ins
add
push
jle
add
add
mov
add
push
or
and
fiadd
push
sub
add
sub
add
adc
add
add
add
in
add
or
xor
add
add
adc
sub
add
push
or
mov
jle
add
add
jb
adc
add
push
push
sub
push
es
outs
dec
add
or
add
daa
adc
dec
add
or
push
outs
inc
add
push
or
add
jb
adc
add
push
push
sub
push
adc
dec
add
or
add
push
or
add
outs
or
add
fsubr
add
adc
add
add
xor
add
add
add
adc
add
mov
add
sldt
adc
dec
dec
add
add
add
add
add
add
push
add
add
add
or
add
add
add
and
add
jb
add
mov
add
add
add
sti
add
add
add
add
add
and
add
add
push
add
sub
add
repz
add
push
sub
and
add
add
push
add
sub
add
add
add
or
add
sub
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
add
adc
add
or
add
sub
and
add
dec
add
cmp
(bad)
(bad)
jle
add
add
aaa
push
add
or
add
sub
and
add
add
push
add
cmp
(bad)
(bad)
(bad)
cmp
sub
push
sub
cmp
add
add
dec
add
cmp
(bad)
inc
inc
or
add
add
add
(bad)
(bad)
(bad)
dec
add
add
add
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
push
add
add
push
add
cmp
add
add
dec
push
add
or
add
sub
and
add
add
push
add
cmp
inc
add
add
push
push
add
or
add
sub
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
add
gs
add
or
add
sub
and
add
dec
add
cmp
(bad)
(bad)
jle
add
add
jne
add
or
add
sub
and
add
add
push
add
cmp
(bad)
(bad)
(bad)
jle
add
add
test
add
or
add
sub
and
push
add
cmp
or
add
add
dec
add
cmp
std
(bad)
(bad)
jle
add
add
xchg
push
add
or
add
sub
and
add
add
push
add
cmp
std
(bad)
(bad)
jle
add
add
movs
push
add
or
add
sub
and
push
add
cmp
inc
add
add
mov
add
or
add
sub
and
add
add
push
add
cmp
add
add
leave
push
add
or
add
sub
jle
add
or
add
add
xor
add
add
adc
add
jle
add
add
fist
add
or
add
add
cmp
add
sub
add
add
and
add
or
add
add
sub
add
push
sub
jle
add
add
dec
pop
add
or
add
add
cmp
add
sub
add
jle
add
or
jle
add
add
jb
pop
add
or
add
sub
add
or
add
add
mov
add
or
add
pop
mov
add
add
cmp
add
sub
add
jle
add
add
jle
add
or
dec
add
push
cmp
add
add
mov
or
add
or
add
mov
add
dec
add
or
add
mov
outs
inc
add
push
push
sub
lods
pop
add
or
add
sub
add
or
add
add
jle
add
or
dec
add
push
sub
jle
add
add
jb
pop
add
or
add
adc
(bad)
push
adc
add
outs
add
add
push
sub
add
push
sub
jle
add
add
add
add
or
add
pop
mov
add
add
cmp
add
sub
add
sub
jb
sbb
jo
or
add
pop
mov
add
add
xchg
add
or
pop
add
push
sub
add
dec
add
or
push
(bad)
(bad)
(bad)
fimul
adc
push
or
add
outs
or
add
fadd
sub
add
add
add
add
mov
mov
add
add
add
adc
push
add
add
add
add
adc
and
or
add
add
add
add
add
add
lahf
add
add
add
dec
add
add
and
push
add
sub
jb
sbb
jo
or
add
pop
mov
add
add
xchg
add
or
pop
add
push
and
add
add
push
add
sub
or
and
add
dec
add
sub
add
add
push
add
sub
add
jb
pop
add
or
add
adc
(bad)
push
adc
add
outs
add
add
push
sub
add
push
sub
and
add
add
push
add
cmp
(bad)
inc
sub
add
push
or
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
push
sbb
jo
or
add
pop
mov
add
add
xchg
add
or
pop
add
push
pop
sub
add
xor
add
add
adc
add
sub
inc
or
add
or
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
sub
add
and
add
or
sub
push
sub
sub
and
add
add
push
add
sub
add
add
add
add
dec
add
sub
add
or
add
add
dec
add
sub
jo
or
add
jae
add
push
or
push
add
add
push
add
cmp
(bad)
inc
jle
add
or
push
add
or
and
add
add
push
add
cmp
(bad)
inc
add
sub
add
jge
add
add
add
push
add
cmp
(bad)
(bad)
inc
add
sub
add
jge
add
add
add
add
dec
add
cmp
(bad)
inc
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
sub
add
es
sub
xor
add
add
add
add
adc
sbb
inc
add
add
add
add
mov
add
add
add
add
and
add
add
push
add
sub
add
and
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
or
add
add
dec
add
sub
add
sub
add
or
and
add
add
push
add
sub
add
(bad)
sbb
jo
or
add
sub
lea
add
add
push
add
sub
add
mov
sub
add
mov
adc
add
mov
or
sub
add
mov
add
push
mov
add
add
add
add
or
xchg
add
or
and
add
add
push
add
cmp
(bad)
(bad)
inc
sbb
add
push
es
sub
add
adc
add
inc
add
sldt
adc
dec
dec
add
add
add
add
add
add
popa
add
add
add
fwait
add
add
add
mov
add
add
add
inc
add
add
add
add
add
add
add
add
add
and
add
add
push
add
sub
jo
or
add
sub
add
add
dec
add
sub
add
add
push
add
sub
jo
or
add
sub
pop
add
add
push
add
cmp
(bad)
push
sbb
jo
or
add
sub
or
push
add
cmp
(bad)
push
sbb
jo
or
add
sub
sub
push
sub
sub
and
add
dec
add
cmp
push
add
or
add
sub
add
add
dec
add
cmp
(bad)
push
sbb
jo
or
add
sub
or
add
dec
add
cmp
(bad)
(bad)
push
sbb
jo
or
add
sub
or
add
dec
add
cmp
(bad)
(bad)
push
sbb
jo
or
add
sub
add
add
dec
add
cmp
(bad)
(bad)
push
sbb
jo
or
add
sub
or
add
dec
add
cmp
inc
or
(bad)
(bad)
dec
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
(bad)
jnp
(bad)
call
(bad)
dec
add
add
(bad)
jmp
add
add
add
idiv
(bad)
jmp
add
and
add
add
push
add
cmp
(bad)
push
sbb
jo
or
add
sub
add
push
add
cmp
(bad)
push
sbb
jo
or
add
sub
push
add
add
push
add
cmp
(bad)
(bad)
push
sbb
jo
or
add
sub
or
add
dec
add
cmp
sbb
add
add
dec
add
cmp
rcr
add
or
add
sub
add
or
add
adc
add
mov
add
adc
dec
dec
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
and
add
add
push
add
sub
add
and
add
add
push
add
sub
add
add
push
add
sub
add
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
add
and
push
add
cmp
(bad)
(bad)
jle
add
add
pop
sub
push
sub
sub
and
add
dec
add
cmp
(bad)
(bad)
jle
add
add
and
add
add
push
add
cmp
xor
add
and
add
add
push
add
cmp
(bad)
(bad)
(bad)
jle
add
add
and
add
add
push
add
cmp
add
add
and
add
dec
add
cmp
(bad)
(bad)
(bad)
jle
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
inc
or
(bad)
(bad)
jmp
(bad)
inc
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
push
add
add
(bad)
jmp
add
add
add
add
(bad)
(bad)
call
add
and
add
add
push
add
cmp
add
add
and
push
add
cmp
add
add
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
add
and
add
add
push
add
cmp
(bad)
jmp
adc
add
add
dec
add
cmp
(bad)
(bad)
jle
add
add
jle
add
or
add
add
add
add
add
sub
add
in
add
or
add
sub
add
and
rol
add
sub
add
or
add
add
xor
push
add
adc
adc
add
or
add
or
add
sbb
add
sbb
jae
add
or
jle
add
add
rol
add
push
add
push
jb
sbb
jo
or
add
sub
push
or
add
add
sub
add
push
sub
add
sub
add
or
push
pop
jae
add
or
sub
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
pop
push
add
add
or
push
sub
add
or
push
sub
add
or
pop
xor
push
sub
add
or
push
outs
aaa
add
or
add
sub
add
inc
add
or
sbb
add
sbb
or
sub
add
push
adc
pop
jle
add
add
add
and
add
or
add
inc
add
or
add
push
or
add
outs
or
add
fadd
sub
adc
add
add
aaa
mov
push
add
add
adc
add
retf
add
add
add
adc
and
inc
pop
add
add
add
add
add
push
add
add
add
add
add
add
and
add
add
push
add
sub
add
sub
add
push
or
add
add
dec
add
sub
add
add
push
add
sub
xor
add
add
dec
add
sub
add
sub
add
add
dec
add
sub
outs
add
push
sub
pop
sub
push
sub
sub
and
add
dec
add
cmp
(bad)
jmp
fadd
add
push
outs
fld
add
or
add
add
dec
add
cmp
(bad)
push
sbb
jo
or
add
sub
add
jb
add
jo
or
add
sub
adc
add
or
add
add
add
add
xor
add
sub
add
xor
add
add
add
add
adc
mov
add
push
jle
add
add
sub
add
push
sub
adc
adc
add
sub
pop
outs
aaa
add
or
push
sub
sub
add
or
or
add
xor
add
sub
push
adc
add
or
pop
or
add
outs
sbb
jo
or
add
jg
add
add
and
dec
add
add
das
add
push
sub
add
jle
add
add
pop
add
add
add
push
or
add
add
test
push
sub
add
sub
push
(bad)
push
or
add
outs
or
add
(bad)
xor
add
(bad)
add
add
mov
or
add
add
sbb
jo
or
add
jle
add
add
add
push
add
push
sub
add
sub
add
fiadd
jb
sbb
jo
or
add
sub
add
push
sub
add
add
add
add
add
add
add
add
add
sbb
xchg
test
add
adc
add
add
add
adc
sub
inc
or
add
dec
add
add
add
add
add
add
add
loope
add
add
add
add
add
add
add
or
add
dec
add
sub
fld
add
pop
sub
push
sub
sub
and
add
add
push
add
mov
rol
add
push
add
add
push
add
mov
add
sub
add
add
dec
add
jb
sbb
jo
or
add
outs
xchg
add
or
nop
add
add
pop
add
add
push
add
(bad)
dec
sub
add
outs
add
push
sub
add
dec
add
(bad)
inc
pop
lea
add
adc
add
jb
sbb
jo
or
add
mov
cwde
add
or
and
add
add
push
add
(bad)
inc
push
call
dec
add
(bad)
inc
pop
call
dec
add
(bad)
push
sbb
jo
or
add
pop
or
cdq
add
or
add
sub
add
sbb
push
add
add
add
add
adc
add
add
push
sbb
jo
or
add
add
and
pop
add
push
add
mov
add
push
push
or
adc
jle
add
add
sub
add
je
add
add
jle
add
add
sbb
rol
add
sub
add
jle
add
add
sub
add
je
add
add
fiadd
add
sub
add
and
add
add
add
add
add
add
sub
jae
add
or
add
jle
add
add
add
fld
add
sub
sub
pop
or
push
sub
add
imul
add
push
sub
add
ficom
adc
or
in
add
add
xchg
add
push
(bad)
wbinvd
sub
jle
add
add
sub
or
add
or
sbb
jo
or
add
outs
ret
add
or
add
add
ficomp
jo
or
add
adc
push
sub
add
jle
add
add
add
push
sub
or
add
push
outs
call
lds
add
push
sbb
add
push
adc
mov
add
sub
add
push
sub
add
adc
push
xor
add
add
pop
outs
fwait
add
or
mov
ds
add
push
add
sub
pop
add
push
ficomp
adc
jle
add
add
push
or
add
adc
sub
add
push
sub
add
fiadd
ficomp
adc
jle
add
add
mov
add
or
add
adc
sub
add
push
sub
add
fiadd
push
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lahf
add
add
add
add
add
add
xor
scas
add
add
add
adc
xor
add
outs
add
push
sub
aam
add
or
add
push
sub
add
sub
pop
outs
aaa
add
or
add
sub
add
or
or
sub
add
sub
pop
adc
pop
or
pop
or
add
outs
sbb
jo
or
add
jg
add
add
and
dec
add
add
das
add
push
sub
add
jle
add
add
pop
add
add
add
push
or
add
add
scas
adc
or
add
add
outs
or
add
fcom
sub
add
add
adc
add
add
add
add
add
add
sbb
push
add
add
add
add
adc
add
add
loop
add
or
add
add
and
pop
add
push
jle
add
add
out
add
add
cwde
add
push
add
popf
add
push
or
add
add
sub
add
je
add
add
jle
add
add
jb
push
add
or
add
sub
test
add
jb
push
add
or
add
sub
cli
add
add
push
mov
sub
sti
add
add
and
lods
add
push
jle
add
add
sub
std
add
add
push
push
push
mov
mov
add
fimul
or
jle
add
add
sub
pop
outs
retf
add
or
add
or
add
sub
fiadd
add
sub
add
and
add
add
add
add
or
add
add
sub
adc
lds
add
pop
push
add
or
add
adc
cmp
add
sub
add
push
adc
sub
sub
add
add
sldt
add
add
ret
add
in
sldt
add
add
add
repz
or
xor
add
add
sbb
add
sub
dec
add
and
add
add
add
add
add
add
add
dec
add
add
add
jno
add
sub
and
add
add
push
add
adc
pushf
add
or
and
add
add
push
add
or
add
push
add
add
or
and
add
add
push
add
je
pop
add
add
push
add
and
dec
and
add
add
push
add
(bad)
inc
or
push
add
add
push
add
(bad)
call
adc
add
add
dec
add
(bad)
inc
pop
outs
sub
add
es
sub
push
sub
sub
and
push
add
(bad)
call
add
pop
adc
add
add
dec
add
(bad)
call
add
outs
popf
add
or
dec
(bad)
(bad)
(bad)
jle
add
add
sub
add
push
sub
xor
add
add
sub
inc
pop
add
add
add
mov
add
jle
add
mov
add
dec
add
add
add
add
push
add
add
push
add
sub
jb
push
add
or
add
add
mov
add
sub
add
and
add
add
push
add
sub
add
sub
sub
add
push
or
add
push
add
sub
jo
or
add
push
sub
pop
add
push
and
add
add
push
add
cmp
(bad)
inc
push
xor
add
add
dec
add
cmp
(bad)
inc
jle
add
add
jb
pop
add
or
add
sub
outs
sahf
add
or
pop
sub
push
sub
sub
and
add
dec
add
cmp
(bad)
(bad)
inc
sub
pop
and
add
add
push
add
cmp
(bad)
inc
pop
add
add
or
pop
outs
fwait
add
or
jle
add
or
add
add
xor
add
add
add
add
adc
(bad)
jo
or
add
sub
add
push
sub
xor
add
add
adc
and
or
add
add
add
add
inc
add
add
add
add
add
xor
add
add
add
push
add
sub
jb
pop
add
or
add
sub
add
and
add
dec
add
sub
add
add
dec
add
sub
push
sub
and
add
add
push
add
sub
add
add
or
add
add
dec
add
sub
sub
add
push
push
sub
add
or
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
call
sub
sub
add
adc
add
add
sbb
or
add
add
add
add
jae
add
push
add
add
add
add
add
add
dec
add
sub
jb
pop
add
or
add
add
mov
add
sub
add
and
add
add
push
add
sub
jo
or
add
add
mov
add
sub
add
pop
sub
push
sub
sub
and
add
add
push
add
sub
jo
or
add
add
mov
add
or
add
add
dec
add
cmp
(bad)
jle
add
add
push
sub
add
sub
xor
add
add
add
add
adc
sub
add
or
outs
push
add
or
push
adc
sub
add
or
outs
dec
add
push
adc
sub
add
sub
add
push
sldt
sbb
add
or
sub
adc
add
add
add
sub
push
add
add
adc
pop
add
add
add
sbb
inc
add
add
add
add
mov
add
add
add
add
and
add
dec
add
sub
push
sub
mov
sub
push
sub
sub
and
add
add
push
add
sub
add
inc
add
add
add
or
add
jle
add
add
jne
add
or
add
sub
inc
push
add
or
add
sub
add
or
add
add
dec
add
cmp
(bad)
push
push
add
or
add
push
sub
pop
add
push
and
add
add
push
add
cmp
(bad)
inc
outs
xchg
add
or
push
add
or
add
sub
adc
add
add
dec
add
cmp
(bad)
(bad)
call
sub
sub
push
add
add
add
sub
sub
add
or
add
aas
add
push
add
inc
add
push
add
push
sub
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
adc
add
add
add
jle
add
add
jnp
add
add
push
and
jo
or
add
sub
inc
add
push
sub
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
add
add
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
add
add
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
add
add
add
adc
add
mov
add
add
sbb
inc
add
add
add
add
xchg
add
jb
add
xor
add
add
add
add
dec
add
sub
push
jb
and
jo
or
add
sub
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
or
add
outs
xchg
add
or
add
dec
add
sub
add
push
and
jo
or
add
outs
lahf
add
or
add
dec
add
cmp
(bad)
inc
jnp
add
add
and
add
add
push
add
cmp
inc
add
mov
add
or
sub
add
add
push
add
add
push
add
add
push
sub
add
sbb
add
into
add
add
add
adc
add
or
add
sub
add
or
outs
pop
add
or
pop
sub
add
or
mov
sbb
add
or
add
or
add
push
sub
pop
add
push
or
add
push
or
add
or
pop
sub
add
sub
pop
(bad)
push
adc
add
outs
or
add
fsubr
mov
add
add
dec
add
or
or
cmp
or
dec
add
or
add
add
sbb
add
or
add
adc
push
sub
pop
add
push
adc
push
adc
push
adc
outs
push
add
or
or
dec
add
or
or
push
or
add
outs
or
add
fadd
sub
add
sbb
add
add
add
add
add
add
add
ja
inc
mov
add
sbb
add
add
add
adc
cmp
add
es
add
add
sub
add
jb
and
jo
or
add
sub
push
sub
fisub
or
add
add
cmps
and
jo
or
add
jle
add
add
sub
add
push
sub
pop
add
push
fiadd
sub
add
adc
add
add
add
sub
daa
or
xor
add
add
adc
add
jo
or
add
sub
add
adc
jae
add
or
jle
add
add
mov
sub
push
jle
add
add
and
xchg
add
jo
or
add
sub
add
or
mov
sub
add
push
sub
jle
add
add
add
add
xchg
add
jo
or
add
sub
add
or
sub
adc
add
add
sub
add
push
outs
mov
mov
or
add
push
sub
pop
add
push
push
jae
add
or
fisub
or
add
or
add
jle
add
add
sub
add
push
jae
add
push
sub
add
fiadd
pop
sub
adc
add
add
add
add
add
xchg
add
jo
or
add
and
sub
add
adc
add
add
add
add
add
or
jle
add
add
rol
add
or
add
or
add
jle
add
add
das
add
push
outs
add
or
add
or
jle
add
add
rol
add
or
add
or
add
jle
add
add
das
add
push
outs
add
or
add
xor
add
add
add
add
adc
add
add
add
adc
add
push
add
add
add
adc
add
add
add
adc
add
add
add
adc
and
and
add
jae
add
or
jle
add
add
inc
add
mov
rol
push
sbb
and
add
add
add
add
inc
add
mov
lds
add
push
sub
add
push
sub
sub
adc
add
pop
add
add
add
adc
add
add
inc
add
mov
rol
push
sbb
inc
jle
add
add
add
add
inc
add
mov
lds
add
sub
add
push
sbb
and
add
add
add
add
inc
add
mov
lds
add
sub
add
push
push
inc
sub
sub
xor
pop
add
add
add
adc
add
add
inc
add
mov
rol
push
sbb
inc
jle
add
add
add
add
inc
add
mov
lds
add
sub
add
push
sbb
and
add
add
add
add
inc
add
mov
lds
add
sub
add
push
pop
inc
sub
sub
xor
add
add
adc
or
or
add
add
and
add
or
add
pop
sub
add
or
cmp
add
push
add
or
add
pop
sub
add
or
push
adc
push
add
push
adc
push
adc
or
pop
add
add
cmp
add
jle
add
add
and
add
or
add
jb
and
jo
or
add
pop
sub
add
push
adc
adc
sub
jle
add
add
pop
jb
add
jo
or
add
sub
add
push
sub
inc
add
add
xor
pop
or
hlt
add
add
adc
push
adc
jle
add
add
loop
add
or
add
pop
sub
add
sub
adc
sub
add
or
add
sub
jb
and
jo
or
add
adc
jle
add
add
loop
add
or
add
adc
pop
sub
add
push
adc
adc
sub
jle
add
add
pop
jb
add
jo
or
add
sub
add
push
sub
inc
add
add
xor
pop
adc
jle
add
add
shl
add
or
add
pop
sub
add
sub
jle
add
add
shl
add
or
add
jb
and
jo
or
add
pop
sub
add
push
adc
adc
sub
jle
add
add
pop
jb
add
jo
or
add
sub
add
push
sub
inc
add
add
xor
pop
adc
adc
sub
or
or
pop
or
add
add
adc
cmp
add
add
or
repz
add
or
in
add
add
cmp
add
add
cmp
add
add
adc
push
adc
cmp
add
cmp
add
or
add
pop
sub
add
sub
jle
add
add
cmp
add
or
add
jb
and
jo
or
add
pop
sub
add
push
adc
jle
add
add
or
jo
or
add
sub
add
push
sub
inc
add
add
xor
pop
adc
jle
add
add
mov
or
add
pop
sub
add
sub
jle
add
add
mov
or
add
jb
and
jo
or
add
pop
sub
add
push
adc
jle
add
add
or
jo
or
add
sub
add
push
sub
inc
add
add
xor
pop
adc
or
adc
adc
or
or
or
push
inc
or
push
inc
or
add
fiadd
push
sub
add
push
sub
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
sub
xor
add
add
add
add
add
and
jo
or
add
and
add
and
add
or
add
sub
add
sub
add
or
add
sub
add
inc
and
jo
or
add
sub
add
xchg
add
jo
or
add
sub
add
sub
add
or
add
sub
jb
and
jo
or
add
sub
add
ins
and
jo
or
add
sub
add
test
add
or
add
sub
add
adc
add
push
xor
add
pusha
and
add
push
xor
add
mov
or
add
xor
add
in
and
add
push
xor
add
push
add
or
add
xor
jb
add
or
add
xor
add
jl
add
or
add
xor
add
add
add
xor
add
add
add
add
add
add
add
add
add
jo
or
add
jge
add
add
jb
add
jo
or
add
jge
add
add
jb
add
jo
or
add
jge
add
add
jae
add
or
add
add
jae
add
or
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
popf
add
or
add
push
add
add
add
add
adc
push
add
add
add
add
adc
add
add
mov
js
add
imul
add
push
jle
add
add
sub
add
jb
add
or
add
sub
and
add
add
xor
add
add
add
add
adc
add
add
sub
add
sub
add
push
sub
add
adc
add
sbb
add
add
add
add
add
add
popf
add
or
add
push
add
add
add
add
adc
add
sbb
add
add
add
jle
add
add
mov
or
add
add
push
add
push
sub
add
xor
add
add
add
add
adc
add
or
add
sub
sbb
add
pop
add
add
jnp
add
add
sbb
add
outs
and
add
sub
jle
add
add
sub
add
jb
daa
add
or
add
sub
add
or
add
add
dec
daa
add
or
add
push
sub
pop
add
push
add
jae
add
or
add
add
add
fiadd
add
add
add
add
adc
add
add
push
push
add
or
xor
add
add
add
add
adc
jnp
add
add
sbb
add
outs
and
add
sub
add
add
push
add
add
add
add
xor
add
add
add
add
adc
sub
push
add
pop
add
push
outs
and
add
sub
pop
sub
sub
sbb
add
add
add
adc
jnp
add
add
or
add
imul
add
pop
add
push
sub
jle
add
add
sub
add
sbb
fld
add
or
jae
add
or
jle
add
add
push
push
sub
add
push
es
add
add
sub
add
push
or
adc
add
sbb
sub
add
push
add
add
add
or
mov
add
jge
add
add
sysret
sub
jle
add
add
sub
ficomp
push
sub
jle
add
add
sub
jb
daa
add
or
add
sub
add
add
add
add
add
add
add
add
add
je
sldt
add
add
das
add
add
add
add
adc
add
mov
add
adc
sbb
inc
add
add
add
add
nop
add
add
add
add
add
and
add
add
push
add
sub
jb
daa
add
or
add
add
pop
add
push
mov
add
sub
add
push
pop
sub
push
sub
sub
and
add
add
push
add
sub
jo
or
add
add
push
add
push
sub
pop
add
push
and
add
add
push
add
sub
add
and
add
dec
add
cmp
inc
jle
add
add
jge
add
add
add
dec
add
cmp
(bad)
inc
add
push
jle
add
adc
push
add
add
and
add
cmp
or
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
cmps
add
add
add
add
add
fadd
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
aad
add
mov
add
add
add
add
and
push
or
cmp
(bad)
push
daa
add
or
add
sub
add
and
add
add
push
or
cmp
(bad)
call
or
pop
adc
and
add
dec
or
cmp
(bad)
(bad)
(bad)
cmp
add
add
push
or
cmp
(bad)
dec
sub
add
or
add
push
or
cmp
(bad)
(bad)
push
sub
jo
or
add
push
sub
pop
add
push
and
add
add
push
or
cmp
(bad)
(bad)
jmp
and
add
add
push
or
cmp
(bad)
(bad)
call
push
mov
xor
add
and
push
or
cmp
(bad)
(bad)
push
sub
jo
or
add
push
sub
pop
add
push
and
add
add
push
or
cmp
adc
pop
sub
push
sub
sub
and
add
dec
or
cmp
sub
adc
push
or
cmp
(bad)
(bad)
cmp
add
add
or
add
dec
or
cmp
(bad)
call
pop
adc
call
dec
or
cmp
(bad)
call
add
add
lahf
add
or
pushf
add
add
or
add
dec
or
cmp
(bad)
(bad)
call
adc
and
add
add
push
or
cmp
out
sub
jo
or
add
or
sub
jo
or
add
add
push
add
push
sub
pop
add
push
and
add
add
push
or
cmp
std
(bad)
inc
sub
add
sub
add
or
and
add
dec
or
cmp
std
(bad)
inc
sub
add
or
add
adc
add
dec
or
cmp
std
(bad)
dec
add
push
add
push
sub
pop
(bad)
(bad)
jmp
push
add
add
push
or
cmp
add
jo
or
add
sub
add
or
push
and
add
add
push
or
cmp
push
sub
jo
or
add
pop
mov
inc
add
add
xchg
add
or
pop
add
push
and
add
add
push
or
cmp
(bad)
call
add
or
or
add
dec
or
cmp
(bad)
call
adc
and
add
add
push
or
cmp
sub
add
push
and
add
add
push
or
cmp
std
(bad)
call
or
or
add
add
push
or
cmp
retf
or
add
dec
or
cmp
cld
(bad)
call
or
pop
mov
cmp
add
add
push
or
cmp
cld
(bad)
inc
jb
sub
jo
or
add
sub
add
or
and
add
add
push
or
cmp
add
add
and
add
add
push
or
cmp
or
pop
adc
and
add
add
push
or
cmp
adc
mov
push
add
add
xor
and
add
add
add
jle
add
add
int3
add
add
sub
add
sub
add
add
push
add
push
sub
add
add
xor
add
add
add
add
adc
add
add
jle
add
add
sub
push
jb
sub
jo
or
add
sub
add
push
sub
add
sbb
pop
add
add
add
sub
add
sub
add
push
sub
mov
or
add
sub
add
add
sub
add
or
add
add
retf
sub
jo
or
add
push
sub
pop
add
push
jle
add
add
sub
add
push
sub
add
or
add
sub
add
jle
add
add
sub
add
push
es
add
or
add
or
sub
jo
or
add
sub
add
or
jae
add
or
test
sub
clc
add
add
jle
add
add
jge
add
or
add
add
push
add
push
push
sub
add
push
sub
adc
push
sub
add
push
jle
add
add
push
sub
add
push
jae
add
or
add
or
repnz
push
jle
add
add
sub
add
push
es
add
add
sub
mov
jb
sub
jo
or
add
sub
add
mov
add
and
add
cmp
add
add
add
dec
add
push
sub
add
push
jne
add
add
add
jle
add
add
mov
or
add
push
sub
pop
add
push
push
adc
(bad)
add
jo
or
add
jle
add
add
sub
add
sub
add
push
outs
rol
add
jle
add
add
add
add
add
sub
add
push
jb
sub
jo
or
add
sub
add
sub
jb
sub
jo
or
add
push
sub
pop
add
push
push
adc
fimul
outs
sub
jo
or
add
sub
add
pop
adc
fidiv
adc
sbb
sub
jo
or
add
jle
add
add
push
sub
add
push
jae
add
push
sub
add
fiadd
jb
sub
jo
or
add
sub
add
push
sub
pop
sub
add
add
add
add
and
add
mov
add
fadd
add
add
add
xor
add
add
add
adc
add
add
sub
add
push
or
add
add
sub
or
add
push
sub
pop
add
push
jle
add
add
sub
add
push
cmp
add
add
sub
add
or
jle
add
add
jb
sub
jo
or
add
sub
push
jge
add
add
mov
jne
add
or
add
add
add
add
and
pop
add
push
add
add
add
jb
sub
jo
or
add
sub
push
jge
add
add
(bad)
add
add
lds
jo
or
add
add
add
add
or
add
push
add
add
add
imul
push
sub
add
add
add
add
sbb
add
push
outs
call
xor
jnp
add
add
sbb
fwait
add
or
add
sub
add
push
sub
sbb
add
jge
add
add
sub
add
mov
pop
sub
add
push
jle
add
add
add
push
add
push
sub
pop
add
push
fiadd
add
add
add
jnp
add
add
or
add
push
add
add
add
mov
add
jge
add
add
add
add
adc
add
add
add
add
add
sbb
add
add
add
adc
or
add
add
sub
add
sub
add
push
pop
or
sub
jle
add
add
dec
sub
add
push
jle
add
add
sub
add
push
sub
pop
add
push
push
or
add
sub
add
add
add
add
add
adc
add
or
xor
add
add
adc
dec
dec
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
or
add
lods
add
add
add
add
add
dec
add
add
add
add
sldt
add
push
add
sub
add
add
push
add
sub
jo
or
add
sub
add
and
add
add
push
add
sub
add
mov
add
sub
and
add
add
push
add
cmp
(bad)
inc
cmp
add
and
add
add
push
add
cmp
(bad)
push
add
push
or
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
(bad)
dec
outs
xchg
add
or
or
add
dec
add
cmp
(bad)
dec
outs
jb
add
cmp
add
add
or
add
dec
add
cmp
(bad)
(bad)
dec
add
add
add
outs
test
add
and
add
dec
add
cmp
(bad)
(bad)
push
sub
add
push
add
add
add
add
add
sub
pop
add
push
and
add
add
push
add
cmp
(bad)
(bad)
dec
pop
outs
jbe
add
and
add
dec
add
cmp
lds
add
push
pop
sub
pop
add
push
and
push
add
cmp
loope
add
or
add
pop
sub
pop
add
push
and
push
add
cmp
(bad)
inc
sub
add
sub
add
or
and
add
add
push
add
cmp
(bad)
inc
add
add
add
jg
add
pop
add
add
push
add
cmp
(bad)
inc
sub
add
and
add
add
push
add
cmp
(bad)
(bad)
call
sub
sub
add
xor
add
add
adc
sub
add
or
add
or
add
sub
add
jle
add
add
dec
add
or
add
push
sub
pop
add
push
jle
add
or
push
or
pop
outs
pushf
add
or
cmp
cmp
add
add
push
outs
pushf
add
or
push
add
push
sub
jle
add
add
and
add
push
outs
pushf
add
or
or
push
mov
add
pop
outs
fwait
add
or
cmp
add
or
movs
add
or
add
or
mov
add
sub
add
jle
add
add
out
add
add
cwde
add
push
or
popf
add
push
or
add
add
sub
add
push
adc
add
add
add
pop
adc
adc
out
add
or
add
jle
add
or
add
or
add
add
jmp
add
or
add
adc
push
sub
add
adc
or
inc
adc
adc
outs
pushf
add
or
push
jle
add
add
jle
add
add
jns
add
daa
add
add
jp
add
push
sub
add
push
sub
add
push
mov
add
cmp
add
or
or
pop
adc
adc
adc
outs
popf
add
or
mov
mov
daa
das
add
or
add
pop
sub
pop
add
push
fisub
adc
sbb
das
add
or
add
jle
add
add
pop
sub
add
push
jae
add
push
sub
add
fiadd
pop
sub
add
inc
sbb
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
adc
sbb
inc
add
add
add
add
mov
add
cwde
add
add
add
add
add
add
dec
add
sub
jle
add
add
sub
add
jb
daa
add
or
add
add
pop
add
push
outs
add
add
push
sub
add
push
cmp
sub
push
sub
sub
and
add
add
push
add
sub
jo
or
add
sub
add
and
add
add
push
add
cmp
(bad)
jle
add
add
sub
add
jb
das
add
or
add
add
push
add
push
push
sub
add
push
sub
and
add
dec
add
cmp
(bad)
push
xor
jo
or
add
sub
add
and
add
add
push
add
cmp
(bad)
(bad)
push
xor
jo
or
add
add
pop
add
push
outs
add
add
sub
pop
add
push
sub
xor
add
add
sub
add
adc
sbb
add
push
adc
jb
xor
jo
or
add
sub
add
sub
add
or
sbb
xor
jo
or
add
jge
add
add
retf
xor
jo
or
add
or
xor
jo
or
add
or
mov
rol
add
and
push
jb
xor
jo
or
add
sub
jle
add
add
rol
add
and
push
jb
xor
jo
or
add
sub
add
adc
cmp
add
push
sub
add
cmp
cmp
add
push
sub
add
adc
adc
adc
adc
adc
jle
add
add
inc
add
jb
and
jo
or
add
adc
sub
xchg
add
or
add
sub
add
sbb
add
or
adc
adc
add
lahf
xor
jo
or
add
adc
push
sub
add
sub
adc
adc
sub
or
push
adc
xor
push
adc
adc
adc
xor
add
or
lea
add
adc
pop
pop
adc
adc
sub
add
add
jb
and
jo
or
add
adc
push
or
mov
aad
add
or
add
adc
push
sub
add
jle
add
add
jb
xor
jo
or
add
push
push
sub
add
cmp
add
add
add
add
jb
add
jo
or
add
pop
push
sub
add
cmp
add
add
add
add
jb
xor
jo
or
add
jb
xor
jo
or
add
push
sub
add
push
cmp
add
add
add
add
jb
xor
jo
or
add
or
sub
add
push
cmp
add
add
add
add
jb
xor
jo
or
add
jb
xor
jo
or
add
push
sub
add
push
cmp
cmp
add
jb
xor
jo
or
add
pop
push
sub
add
push
cmp
cmp
add
jb
xor
jo
or
add
jb
xor
jo
or
add
push
sub
add
push
sub
jle
add
add
jb
xor
jo
or
add
jb
xor
jo
or
add
push
sub
add
push
sub
jle
add
add
jb
xor
jo
or
add
pop
push
sub
add
sub
jle
add
add
jb
xor
jo
or
add
push
push
sub
add
sub
jle
add
add
jmp
add
or
add
adc
push
sub
add
add
pop
add
push
adc
jle
add
add
or
sub
add
adc
adc
add
or
pop
push
adc
sub
adc
call
add
sub
add
jle
add
add
or
or
sub
add
sub
add
sub
adc
add
add
and
jo
or
add
adc
push
sub
add
sub
adc
push
sub
or
push
adc
xor
push
adc
adc
pop
pop
adc
adc
adc
mov
xchg
adc
or
adc
pop
pop
adc
adc
sub
add
add
pop
xor
jo
or
add
adc
push
sub
add
jle
add
add
or
add
add
push
sub
add
push
sub
jb
xor
jo
or
add
sub
add
push
sub
sub
add
sub
add
or
xor
jo
or
add
jb
xor
jo
or
add
outs
mov
add
or
add
or
xor
jo
or
add
jb
xor
jo
or
add
outs
mov
add
adc
sub
add
or
jle
add
add
add
and
add
cmp
adc
add
add
lock
add
cwde
add
push
sub
add
jae
add
or
push
adc
jle
add
add
adc
push
imul
push
jae
add
or
jle
add
add
cmp
add
adc
adc
adc
jb
xor
jo
or
add
outs
add
or
push
jle
add
add
sbb
add
add
sub
add
or
adc
add
push
adc
adc
sub
push
test
push
jae
add
or
sbb
sbb
add
or
adc
adc
xor
add
push
sub
add
adc
adc
pop
pop
jle
add
add
sbb
add
add
sub
cmp
add
pop
adc
adc
outs
cmp
outs
xchg
add
or
add
or
add
sub
add
adc
and
and
add
add
and
and
add
or
sub
add
or
adc
jle
add
add
adc
push
ins
add
push
jae
add
or
jle
add
add
cmp
add
adc
adc
adc
xor
add
push
sub
add
adc
adc
pop
pop
jb
add
or
add
outs
cmp
add
pop
adc
add
add
add
add
add
push
outs
aas
add
or
add
add
cwde
add
push
sub
add
push
sub
lea
add
adc
and
jb
xor
jo
or
add
mov
mov
sbb
add
add
sub
adc
jb
add
or
add
mov
jle
add
add
add
adc
add
add
cwde
add
push
sub
add
push
jb
add
or
add
sub
add
or
add
or
add
sub
add
or
sbb
add
or
adc
adc
add
add
cwde
add
push
jae
add
or
adc
adc
add
add
cwde
add
push
jae
add
or
adc
add
adc
mov
add
push
push
ss
add
add
adc
add
lods
add
push
jle
add
add
adc
add
lods
add
push
jb
add
or
add
sub
add
cmp
add
add
adc
in
add
or
add
add
and
push
add
add
adc
iret
add
push
jle
add
add
adc
add
or
add
sub
add
sub
jb
aaa
add
or
add
sub
add
sub
add
or
add
add
adc
fiadd
add
adc
mov
add
jle
add
add
adc
mov
add
pop
imul
outs
fld
add
adc
jle
add
add
pop
aaa
add
or
add
adc
sub
pop
add
push
adc
sbb
adc
pop
popf
adc
adc
add
adc
adc
adc
push
adc
sub
adc
call
pop
add
push
sbb
add
or
add
push
add
push
sbb
add
or
aaa
add
or
add
sub
add
fucom
add
add
daa
pop
pop
adc
adc
adc
mov
mov
loopne
add
jle
add
add
sub
add
push
mov
add
cmp
add
outs
fild
add
adc
jle
add
add
adc
add
out
add
add
cwde
add
push
jle
add
add
int
add
or
add
add
pop
add
push
adc
push
sub
cs
push
jle
add
add
adc
add
jle
add
add
adc
add
push
jle
add
add
adc
sub
add
add
adc
add
push
jle
add
add
adc
add
push
jle
add
add
adc
add
push
jb
aaa
add
or
add
sub
add
ficom
adc
sub
jle
add
add
adc
xchg
add
push
fsubr
add
add
add
add
das
push
add
xor
add
popa
or
add
add
add
add
add
xor
adc
add
add
add
add
xor
jo
or
add
sbb
add
or
add
adc
add
adc
add
add
add
add
cmp
jo
or
add
sbb
add
or
add
adc
add
add
add
add
add
cmp
jo
or
add
xor
add
retf
add
add
in
add
or
add
sub
add
and
rol
add
sub
add
cmp
add
dec
cmp
jo
or
add
cmp
add
jno
add
or
add
cmp
add
push
push
cmp
add
cmp
sub
sbb
push
add
add
add
add
adc
jle
add
or
adc
add
or
add
add
add
add
jae
add
or
jae
add
or
add
pop
sub
add
push
jle
add
add
pop
sub
add
push
jle
add
add
add
add
add
adc
adc
add
adc
add
jmp
sub
add
push
add
pop
outs
pushf
add
or
add
push
xchg
popa
rcr
push
adc
jle
add
add
add
adc
adc
pop
pop
adc
adc
add
add
or
retf
or
adc
jle
add
add
xor
add
lock
add
cwde
add
push
adc
cmp
push
add
and
or
adc
sub
or
or
add
or
adc
or
sub
add
mov
add
or
pop
add
push
popa
rcl
or
or
adc
xchg
popa
rcl
or
xor
add
adc
cmp
or
pop
adc
adc
jle
add
add
mov
add
iret
add
push
xor
push
adc
adc
pop
pop
adc
adc
jle
add
add
add
adc
adc
pop
pop
adc
adc
adc
outs
popf
add
or
xchg
add
add
add
add
or
or
pop
pop
pushf
adc
pop
pop
adc
adc
jle
add
add
jmp
add
sub
add
adc
push
adc
sub
adc
adc
xchg
adc
rcr
push
adc
jle
add
add
add
adc
adc
pop
pop
adc
adc
push
fiadd
add
sub
(bad)
jle
add
add
adc
push
jle
add
add
sub
jle
add
add
xor
add
sub
add
sub
add
push
push
fiadd
es
adc
fiadd
pop
sub
adc
add
inc
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
sub
add
cmp
add
dec
add
add
add
add
xor
add
or
add
mov
add
or
add
out
add
add
add
jle
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
mov
add
fild
add
push
add
add
add
add
add
addr16
add
out
add
add
add
push
add
add
push
add
fiadd
add
rol
add
push
add
popf
push
add
sbb
add
stc
push
add
add
add
add
fs
add
lsl
add
add
add
add
add
inc
add
add
push
add
(bad)
add
add
add
add
add
das
add
add
add
add
out
add
iret
add
add
add
add
add
add
add
add
add
add
pop
add
add
push
add
cmc
add
add
push
add
popf
add
add
add
push
add
add
add
add
jg
add
push
add
add
sldt
add
and
add
dec
adc
cmp
jae
add
or
add
add
dec
adc
cmp
sub
add
add
add
push
adc
cmp
(bad)
inc
push
jle
add
add
lock
add
cwde
add
push
adc
sub
add
push
outs
daa
add
or
and
add
add
push
adc
cmp
(bad)
call
movhps
adc
dec
adc
cmp
(bad)
(bad)
call
adc
pop
adc
and
add
add
push
adc
cmp
(bad)
(bad)
inc
sub
add
or
and
add
push
adc
cmp
(bad)
(bad)
call
adc
and
add
dec
adc
cmp
(bad)
(bad)
call
or
mov
sbb
add
and
add
add
push
adc
cmp
std
(bad)
call
or
popa
rcl
or
add
push
adc
cmp
std
(bad)
call
or
pop
adc
and
push
adc
cmp
and
add
add
push
adc
cmp
add
add
dec
add
add
push
adc
cmp
or
pop
adc
and
add
add
push
adc
cmp
or
xchg
add
xchg
add
aas
sub
add
and
add
add
push
adc
cmp
(bad)
call
add
and
add
add
push
adc
cmp
(bad)
call
or
mov
add
add
push
adc
cmp
push
and
add
add
push
adc
cmp
std
(bad)
call
adc
and
add
dec
adc
cmp
std
(bad)
(bad)
cmp
add
add
add
push
adc
cmp
std
(bad)
jmp
push
and
add
add
push
adc
cmp
cld
(bad)
call
adc
mov
xchg
add
aas
repnz
add
sub
add
dec
adc
cmp
cld
(bad)
call
or
add
add
dec
and
add
add
push
adc
cmp
cld
(bad)
call
adc
and
add
add
push
adc
cmp
pop
pop
pop
adc
and
add
dec
adc
cmp
adc
add
add
ds
add
sub
add
dec
adc
cmp
push
mov
xchg
add
adc
pop
xchg
adc
or
add
push
add
add
push
adc
cmp
(bad)
call
adc
and
push
adc
cmp
(bad)
cmp
(bad)
jmp
inc
add
add
push
adc
cmp
cld
(bad)
call
add
push
push
adc
xchg
adc
push
xchg
popa
rcr
dec
adc
cmp
cld
(bad)
call
add
add
fiadd
add
and
add
dec
adc
cmp
cld
(bad)
(bad)
jle
add
add
or
adc
add
dec
adc
cmp
sti
(bad)
call
push
jle
add
add
das
(bad)
(bad)
jmp
inc
add
add
push
adc
cmp
sti
(bad)
call
or
add
push
adc
cmp
sti
(bad)
call
or
popa
rcl
or
add
push
adc
cmp
adc
and
add
dec
adc
cmp
adc
and
push
adc
cmp
or
pop
adc
and
add
add
push
adc
cmp
(bad)
(bad)
jle
add
add
add
add
add
push
adc
cmp
(bad)
call
adc
and
add
add
push
adc
cmp
(bad)
(bad)
cmp
cmp
add
dec
adc
cmp
adc
push
add
add
push
adc
cmp
sti
(bad)
dec
adc
xchg
add
adc
add
dec
adc
cmp
sti
(bad)
(bad)
jle
add
add
add
add
add
dec
add
add
push
adc
cmp
cli
(bad)
call
adc
and
add
dec
adc
cmp
cli
(bad)
call
or
pop
adc
and
add
add
push
adc
cmp
cli
(bad)
call
add
add
dec
add
add
push
adc
cmp
push
jle
add
add
adc
and
add
dec
adc
cmp
adc
and
add
add
push
adc
cmp
or
pop
adc
sbb
add
dec
adc
cmp
call
or
mov
inc
add
add
pop
add
add
push
adc
cmp
call
adc
and
add
add
push
adc
cmp
(bad)
inc
adc
adc
add
push
adc
cmp
cli
(bad)
inc
jae
add
or
sbb
add
dec
adc
cmp
cli
(bad)
call
adc
pop
sub
push
sub
cmp
add
add
push
add
add
push
adc
cmp
cli
(bad)
call
adc
and
add
dec
adc
cmp
stc
(bad)
inc
adc
xchg
adc
and
add
add
push
adc
cmp
stc
(bad)
call
adc
adc
xchg
popa
rcl
adc
sbb
add
dec
adc
cmp
stc
(bad)
call
adc
adc
xchg
popa
rcl
adc
xor
add
dec
adc
cmp
jb
cmp
jo
or
add
jb
cmp
jo
or
add
outs
mov
add
adc
and
add
add
push
adc
cmp
sub
dec
add
add
push
adc
cmp
(bad)
call
lea
add
mov
add
add
push
adc
cmp
(bad)
call
adc
add
push
adc
cmp
(bad)
(bad)
jle
add
add
xchg
add
adc
and
add
dec
adc
cmp
adc
and
add
add
push
adc
cmp
(bad)
call
or
pop
adc
and
add
add
push
adc
cmp
stc
(bad)
inc
outs
popf
add
or
add
add
xchg
add
pop
pop
cmp
(bad)
(bad)
jmp
add
add
dec
adc
cmp
clc
(bad)
call
adc
and
add
add
push
adc
cmp
clc
(bad)
call
push
pop
pop
adc
and
push
adc
cmp
clc
(bad)
call
or
add
add
xor
(bad)
jmp
pop
add
add
push
adc
cmp
xchg
add
or
dec
add
add
push
adc
cmp
adc
pop
adc
and
add
add
push
adc
cmp
(bad)
call
push
pop
pop
adc
and
add
add
push
adc
cmp
(bad)
call
or
add
add
mov
add
add
push
adc
cmp
(bad)
dec
adc
xchg
or
adc
jmp
and
push
adc
cmp
clc
(bad)
jmp
loope
add
jle
add
add
fild
add
or
add
add
dec
adc
cmp
clc
(bad)
call
adc
and
add
add
push
adc
cmp
clc
(bad)
dec
adc
adc
or
push
xchg
popa
rcr
dec
adc
cmp
idiv
call
pop
push
mov
xchg
add
aas
cmps
sti
(bad)
jmp
or
add
dec
adc
cmp
idiv
(bad)
cmp
sti
(bad)
jmp
sub
add
dec
adc
cmp
sub
sub
scas
jb
add
jo
or
add
add
xchg
add
add
fwait
cmp
jo
or
add
or
xor
add
add
sub
sub
add
or
jb
add
jo
or
add
jge
add
add
adc
mov
add
jae
add
or
add
add
and
add
jae
add
or
add
push
add
push
jae
add
or
add
add
add
outs
mov
jnp
add
add
outs
mov
jnp
add
add
outs
mov
jnp
add
add
adc
add
or
add
add
xor
add
add
add
add
adc
add
add
sub
add
sub
add
push
sub
add
adc
add
add
add
add
add
sub
add
adc
add
or
add
adc
jnp
add
add
outs
mov
add
add
xor
add
add
add
add
add
add
add
rol
or
adc
add
push
add
add
add
adc
sub
add
sub
mov
add
sub
add
sub
add
xor
xor
add
add
add
jle
add
add
jnp
add
add
and
add
sub
add
add
add
push
add
add
add
jnp
add
add
inc
add
push
jge
add
add
add
add
xor
add
add
adc
and
or
add
add
add
add
or
add
add
add
add
cmp
add
add
and
push
add
sub
add
jge
add
add
add
add
dec
add
sub
add
and
add
add
push
add
sub
xor
add
add
dec
add
sub
jo
or
add
add
jp
add
sub
pop
add
push
and
add
add
push
add
cmp
(bad)
inc
sub
add
sub
pop
sub
push
sub
sub
and
add
add
push
add
cmp
inc
outs
jge
add
sub
add
xor
add
add
add
add
adc
add
add
jnp
add
add
dec
add
push
sub
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
adc
jnp
add
add
push
add
ja
add
add
add
add
add
add
xor
add
add
adc
sub
or
add
add
add
add
add
add
add
add
add
add
sahf
add
add
add
add
pop
add
add
push
add
sub
jb
cmp
jo
or
add
add
jp
add
sub
pop
add
push
and
add
add
push
add
sub
add
sub
sub
and
add
dec
add
sub
add
sub
add
or
and
push
add
cmp
(bad)
inc
pop
add
jnp
add
sub
push
and
add
add
push
add
cmp
(bad)
inc
sub
and
add
add
push
add
cmp
(bad)
call
or
push
add
add
push
add
cmp
(bad)
(bad)
inc
sub
add
sub
shl
add
add
dec
add
cmp
(bad)
(bad)
inc
outs
jge
add
sub
xor
add
add
adc
or
sub
add
or
sub
add
or
sub
or
or
or
add
add
jp
add
sub
pop
add
push
push
sub
sub
push
jle
add
add
hlt
add
add
dec
add
push
add
or
jle
add
or
cmp
add
cmp
add
or
add
add
jp
add
jb
sbb
jo
or
add
jle
add
add
sub
add
push
sub
add
sub
add
push
or
add
sub
add
push
sub
add
add
add
add
cmp
sbb
or
xor
add
add
adc
push
dec
add
add
add
add
add
add
mov
add
mov
add
aaa
add
add
add
push
add
add
add
mov
add
dec
add
add
add
add
add
pushf
add
add
add
add
add
add
add
add
add
add
adc
add
dec
add
sub
add
or
add
add
dec
add
sub
add
cmp
add
add
adc
add
dec
add
cmp
(bad)
jmp
hlt
add
add
add
or
or
add
dec
add
cmp
(bad)
inc
add
jnp
add
sub
add
or
or
add
dec
add
cmp
(bad)
push
cmp
jo
or
add
add
mov
add
sub
add
and
add
add
push
add
cmp
(bad)
(bad)
jmp
push
and
add
add
push
add
cmp
(bad)
(bad)
inc
sbb
in
add
add
add
push
add
cmp
(bad)
(bad)
push
cmp
jo
or
add
add
mov
add
sub
add
and
push
add
cmp
(bad)
(bad)
inc
pop
pop
or
add
add
dec
add
cmp
(bad)
(bad)
push
cmp
jo
or
add
push
sub
pop
add
push
and
add
add
push
add
cmp
mov
pop
add
add
push
add
cmp
sub
dec
and
add
add
push
add
cmp
(bad)
call
or
add
add
dec
add
cmp
(bad)
inc
sub
add
or
and
add
add
push
add
cmp
(bad)
inc
add
jg
add
and
add
add
push
add
cmp
(bad)
push
cmp
jo
or
add
add
mov
add
sub
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
sub
test
sub
push
sub
cmp
add
add
push
add
cmp
std
(bad)
inc
sub
add
or
or
sub
add
sub
add
add
xor
add
cmp
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
push
add
sub
add
sub
add
sub
add
or
add
add
dec
add
sub
jo
or
add
add
mov
add
sub
add
and
add
add
push
add
cmp
(bad)
inc
sub
add
or
pop
sub
push
sub
cmp
add
add
dec
add
cmp
(bad)
jmp
aad
add
or
or
add
dec
add
cmp
(bad)
inc
add
lds
add
and
add
add
push
add
cmp
(bad)
(bad)
push
cmp
jo
or
add
pop
sub
pop
add
push
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
mov
or
push
add
add
push
add
cmp
(bad)
(bad)
inc
or
mov
or
add
add
dec
add
cmp
(bad)
(bad)
jmp
aad
add
or
or
add
dec
add
cmp
(bad)
(bad)
inc
jle
add
add
sub
add
sub
add
or
and
add
add
push
add
cmp
sub
add
and
push
add
cmp
jne
add
or
add
add
mov
add
sub
add
sub
adc
add
mov
add
add
add
sub
dec
add
add
add
add
inc
add
add
add
add
add
xor
add
add
add
push
add
sub
add
add
pop
sub
push
sub
sub
and
add
dec
add
sub
add
dec
add
sub
push
and
add
add
push
add
sub
add
sub
add
and
add
add
push
add
sub
jo
or
add
add
jp
add
sub
pop
add
push
and
add
add
push
add
cmp
(bad)
inc
sub
add
sub
add
add
xor
add
add
xor
add
adc
jle
add
add
sub
add
sub
add
push
sub
add
jp
add
jae
add
or
jle
add
add
sbb
push
sub
add
or
add
adc
clts
sub
jle
add
add
sub
push
sub
sub
add
add
add
sbb
add
add
add
and
add
add
add
adc
add
cmp
add
add
add
jle
add
add
scas
add
add
sub
add
push
add
jp
add
sub
add
sub
jle
add
add
scas
add
add
sub
add
push
add
jp
add
sub
add
push
sub
add
adc
add
daa
add
add
cmp
inc
or
add
add
add
bound
add
js
add
test
add
into
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
and
add
dec
add
sub
or
add
dec
add
sub
and
add
add
push
add
sub
add
add
dec
add
sub
pop
sub
push
sub
sub
and
add
dec
add
cmp
(bad)
call
or
or
add
dec
add
cmp
(bad)
inc
mov
mov
call
add
push
add
cmp
(bad)
call
sub
add
push
add
cmp
(bad)
(bad)
call
sub
add
add
dec
add
cmp
(bad)
(bad)
call
sub
pop
add
add
push
add
cmp
(bad)
(bad)
inc
push
xchg
add
xchg
cs
and
add
add
push
add
cmp
sub
or
add
dec
add
cmp
(bad)
(bad)
inc
pop
pop
or
push
add
add
push
add
cmp
(bad)
(bad)
inc
add
sub
pop
add
jno
add
add
add
jo
or
add
jge
add
add
adc
add
sldt
add
add
adc
add
add
add
add
lea
add
add
xor
add
add
adc
or
add
add
jnp
add
add
and
add
sub
add
add
add
jnp
add
add
das
add
push
or
sub
jnp
add
add
jnp
add
add
add
xor
add
or
jle
add
add
jnp
add
add
sub
mov
add
pop
sub
add
add
jne
add
sub
add
push
or
pop
or
add
sar
add
or
add
or
cmp
add
sub
add
push
or
add
sub
adc
add
add
add
add
or
xor
add
add
add
add
adc
(bad)
jo
or
add
sub
add
push
sub
xor
lods
add
add
and
or
add
add
add
add
dec
add
add
add
add
add
cmp
add
add
add
push
add
sub
jb
cmp
jo
or
add
sub
add
pop
sub
push
sub
sub
and
add
dec
add
sub
add
add
dec
add
sub
push
sub
and
add
add
push
add
sub
add
add
or
add
add
dec
add
cmp
(bad)
push
(bad)
jo
or
add
push
sub
add
or
add
add
dec
add
cmp
(bad)
call
sub
sub
xor
lods
add
add
add
adc
sbb
inc
add
add
add
add
test
add
cmp
add
add
and
add
dec
add
sub
jae
add
or
and
add
add
push
add
sub
jb
cmp
jo
or
add
push
sub
pop
add
push
and
add
add
push
add
sub
add
sub
add
dec
add
sub
add
push
add
jo
or
add
jb
add
jo
or
add
sub
add
or
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
inc
jae
add
or
pop
sub
add
adc
add
mov
add
adc
sbb
inc
add
add
add
add
jb
add
or
add
cmp
add
add
add
add
dec
add
sub
pop
sub
add
add
dec
add
sub
push
jb
cmp
jo
or
add
jae
add
or
add
or
xor
add
add
dec
add
sub
push
or
add
add
dec
add
sub
jo
or
add
sub
add
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
push
cmp
jo
or
add
sub
add
push
sub
add
xor
add
add
xor
add
jb
cmp
jo
or
add
sub
add
sub
push
outs
dec
add
or
push
adc
sub
add
or
outs
xchg
add
push
adc
sub
add
sub
add
push
or
or
add
fsubr
add
add
add
add
sbb
sbb
add
add
add
push
add
add
add
sub
add
outs
add
push
add
add
push
add
add
push
sub
jle
add
or
pop
add
add
sub
jae
add
or
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
add
add
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
add
add
add
sbb
add
xchg
add
xor
jnp
add
add
inc
add
or
add
sub
add
jb
cmp
jo
or
add
sub
push
jae
add
or
jle
add
add
sub
add
push
sub
jle
add
add
sub
add
or
adc
adc
adc
mov
add
mov
add
sub
add
push
outs
add
or
add
adc
xor
fiadd
fiadd
add
add
add
add
add
add
add
or
add
add
add
xor
data16
add
add
adc
add
or
sub
pop
outs
dec
add
or
add
xor
add
or
mov
cdq
cmp
jo
or
add
or
add
push
sub
pop
add
push
or
add
push
or
add
or
add
dec
add
or
add
push
or
add
outs
or
add
fadd
sub
add
adc
add
add
inc
push
add
add
add
sbb
add
add
add
adc
add
add
sub
add
jb
cmp
jo
or
add
sub
push
jae
add
or
jle
add
add
sub
add
push
sub
sub
jle
add
add
sub
add
or
adc
push
adc
sub
call
jle
add
add
sub
add
push
jb
cmp
jo
or
add
sub
add
add
sahf
add
push
adc
pop
pop
adc
adc
adc
mov
ret
fisubr
adc
add
fnstsw
jo
or
add
jle
add
add
add
push
sub
pop
add
push
fiadd
sub
add
adc
add
add
add
add
add
add
push
sub
add
adc
add
add
add
adc
sub
add
or
push
inc
push
add
add
add
add
add
push
add
add
mov
add
jle
add
add
outs
inc
add
push
jb
cmp
add
push
sub
xchg
add
add
add
add
add
outs
inc
add
push
jb
cmp
add
push
sub
xchg
add
add
add
add
add
outs
inc
add
push
jb
cmp
add
push
sub
xchg
add
add
add
add
add
outs
inc
add
push
jb
add
or
add
sub
xchg
add
add
add
add
add
outs
inc
add
push
jb
add
or
add
sub
xchg
add
add
add
add
add
outs
inc
add
push
jb
add
or
add
sub
xchg
add
add
add
add
add
outs
inc
add
push
jb
cmp
add
push
sub
xchg
add
add
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
add
add
sub
and
add
sub
add
adc
add
adc
add
add
add
jle
add
add
sub
dec
add
push
sub
add
adc
add
adc
add
add
add
jle
add
add
sub
sub
add
push
sub
add
xor
add
add
add
add
adc
sub
jmp
add
jne
add
add
add
add
xor
push
add
add
add
adc
add
sub
add
push
sub
add
adc
add
cmp
add
cmp
add
sub
dec
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
mov
add
or
add
inc
add
add
add
add
or
add
dec
add
sub
pop
jb
aas
add
or
add
outs
add
or
jecxz
add
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
and
add
dec
add
sub
add
or
add
outs
daa
add
or
add
add
and
add
add
push
add
cmp
(bad)
inc
cmp
pop
add
add
push
add
cmp
(bad)
inc
sub
and
add
add
push
add
cmp
jb
aas
add
or
add
outs
daa
add
or
add
add
push
add
add
push
add
cmp
(bad)
(bad)
dec
sub
and
add
add
push
add
cmp
(bad)
(bad)
inc
jb
aas
add
or
add
outs
add
or
and
add
add
push
add
cmp
(bad)
(bad)
dec
add
add
push
je
add
add
add
push
add
cmp
(bad)
(bad)
dec
sub
add
add
xor
push
add
add
add
adc
xor
inc
or
add
test
add
add
add
add
add
push
add
add
add
add
add
in
add
sbb
add
add
and
add
add
push
add
sub
add
and
add
add
push
add
sub
add
or
add
outs
daa
add
or
add
add
and
add
add
push
add
sub
add
or
add
add
dec
add
cmp
(bad)
dec
add
add
or
and
push
add
cmp
(bad)
dec
cmp
add
add
dec
add
cmp
(bad)
inc
jb
aas
add
or
add
outs
daa
add
or
add
add
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
(bad)
inc
jb
aas
add
or
add
outs
add
or
and
add
add
push
add
cmp
(bad)
(bad)
dec
add
add
push
je
add
add
add
push
add
cmp
(bad)
(bad)
inc
jb
aas
add
or
add
outs
add
or
and
add
add
push
add
cmp
(bad)
(bad)
inc
sub
and
add
add
push
add
cmp
push
sub
xor
test
add
adc
and
or
add
add
add
add
imul
add
add
add
and
add
add
add
and
push
add
sub
push
sub
pop
sub
push
sub
sub
and
add
dec
add
sub
add
or
add
outs
rol
add
or
add
add
dec
add
sub
add
push
or
add
add
dec
add
sub
add
jae
add
or
and
add
add
push
add
cmp
inc
sub
and
add
add
push
add
cmp
(bad)
call
add
adc
or
add
add
xor
add
add
adc
dec
dec
add
inc
add
jbe
add
mov
add
or
add
add
add
add
add
add
xchg
add
inc
add
add
add
add
add
add
add
add
add
add
add
mov
and
add
add
push
add
pop
or
pop
sub
push
sub
cmp
or
add
dec
add
sbb
aas
add
or
add
mov
add
push
add
(bad)
inc
jb
aas
add
or
add
outs
rol
add
or
add
add
dec
add
(bad)
dec
sbb
mov
add
push
add
(bad)
dec
jae
add
or
and
add
add
push
add
(bad)
call
or
add
push
add
(bad)
inc
add
popf
add
push
or
add
add
dec
add
(bad)
dec
push
jb
aas
add
or
add
mov
add
push
add
(bad)
dec
sbb
sub
and
add
add
push
add
(bad)
inc
sub
add
or
add
add
dec
add
(bad)
inc
sub
and
add
add
push
add
(bad)
dec
sbb
aas
add
or
add
mov
add
push
add
(bad)
dec
sub
pop
add
push
and
add
add
push
add
(bad)
push
aas
add
or
add
add
aas
add
or
add
add
xchg
add
push
sub
pop
add
push
and
add
add
push
add
(bad)
inc
sub
and
push
add
(bad)
call
add
adc
adc
add
add
xor
mov
add
cmp
add
add
fwait
add
push
or
jb
inc
add
or
add
outs
add
or
push
jb
inc
add
or
add
outs
daa
add
or
add
add
pop
sub
pop
jb
inc
add
or
add
outs
add
or
add
pop
inc
add
or
add
add
xchg
add
push
sub
pop
add
push
pop
or
inc
add
or
add
add
xchg
add
push
sub
pop
add
push
ficom
or
scas
add
add
sub
add
push
sub
add
fiadd
jb
inc
add
or
add
add
xchg
add
push
sub
pop
add
push
push
sub
sub
adc
add
add
add
add
add
xor
add
add
add
add
adc
push
add
or
add
sub
add
push
sub
xor
add
add
add
add
adc
mov
add
sub
sub
sbb
add
inc
add
add
jmp
add
or
add
sub
add
pop
sub
push
outs
bound
add
or
push
adc
sub
add
or
outs
test
add
adc
sub
add
sub
add
push
adc
or
add
fsubr
add
adc
add
add
push
add
add
push
add
add
add
sub
add
add
push
add
add
push
add
add
push
sub
add
sbb
add
into
add
add
add
adc
add
or
add
sub
add
or
outs
pop
add
or
pop
sub
add
or
mov
cmovno
jo
or
add
or
add
push
sub
pop
add
push
or
add
push
or
add
or
pop
sub
add
sub
pop
(bad)
push
adc
add
outs
or
add
fsubr
mov
add
add
dec
add
or
or
cmp
or
dec
add
or
add
add
cmovno
jo
or
add
adc
push
sub
pop
add
push
adc
push
adc
push
adc
outs
add
or
or
dec
add
or
or
push
or
add
outs
or
add
fadd
sub
add
sbb
add
add
add
add
add
add
add
ja
inc
mov
add
sbb
add
add
add
adc
sub
jle
add
add
sub
add
push
sub
sub
push
sub
fisub
or
add
add
inc
inc
add
or
add
jle
add
add
sub
add
push
sub
pop
add
push
fiadd
sub
add
add
add
add
and
add
or
xor
cmp
add
adc
jb
inc
add
or
add
sub
add
or
add
add
jb
cmp
jo
or
add
sub
add
or
add
add
jb
inc
add
or
add
sub
add
add
xor
add
add
add
add
adc
add
adc
add
sub
add
add
add
jle
add
add
cmp
add
cmp
add
pop
add
push
sub
add
sub
add
push
jae
add
or
cmc
add
or
add
add
xor
add
add
add
add
adc
add
add
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
adc
sub
or
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
and
add
add
push
add
sub
add
lods
add
push
and
add
add
push
add
sub
mov
add
jae
add
or
and
add
dec
add
sub
add
sub
push
add
add
push
add
sub
add
and
push
add
cmp
(bad)
inc
outs
scas
add
push
add
lods
add
push
jle
add
add
push
inc
add
or
add
add
lods
add
push
sub
add
push
sub
add
pop
sub
push
sub
sub
and
add
add
push
add
cmp
sub
push
add
push
and
add
add
push
add
cmp
(bad)
inc
push
jae
add
or
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
xor
add
pop
sub
add
adc
add
daa
add
add
add
adc
sub
or
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
and
add
add
push
add
sub
jb
inc
add
or
add
add
lods
add
push
sub
add
push
and
add
add
push
add
sub
add
xor
add
and
add
dec
add
sub
add
and
add
add
push
add
cmp
inc
jnp
add
add
xor
add
cmp
add
push
add
cmp
(bad)
push
inc
add
or
add
add
lods
add
push
sub
add
push
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
dec
and
add
add
push
add
cmp
(bad)
(bad)
jmp
hlt
add
add
add
or
add
add
dec
add
cmp
(bad)
(bad)
push
inc
add
or
add
add
add
add
xor
add
mov
add
sub
add
push
sub
adc
add
add
add
add
add
sub
add
adc
add
add
add
add
adc
sbb
or
add
add
add
add
add
add
dec
add
add
add
add
add
add
dec
add
sub
add
add
push
sub
sub
push
sub
sub
and
add
add
push
add
sub
jo
or
add
add
lods
add
push
sub
add
push
and
add
add
push
add
sub
add
and
add
add
push
add
sub
add
sub
add
xor
add
add
add
add
adc
add
add
xor
cmp
add
adc
add
add
mov
add
cmp
add
gs
push
sub
add
push
jb
inc
add
or
add
sub
jle
add
add
sub
add
push
sub
add
add
push
sub
add
adc
add
add
add
add
add
sub
add
push
add
pop
add
or
adc
add
add
add
sub
or
add
add
add
add
add
add
cdq
add
add
add
lea
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
aaa
add
add
add
add
add
add
add
add
add
mov
add
aad
add
add
push
add
add
push
or
sub
add
or
sbb
add
and
add
add
push
or
cmp
(bad)
call
adc
and
add
add
push
or
cmp
(bad)
jle
add
add
add
jle
add
or
add
sub
add
adc
add
push
or
cmp
(bad)
(bad)
inc
jb
inc
add
or
add
outs
add
or
sldt
add
push
or
cmp
(bad)
(bad)
inc
jb
inc
add
or
add
outs
add
or
adc
add
dec
or
cmp
(bad)
(bad)
inc
jb
inc
add
or
add
outs
add
or
adc
add
dec
or
cmp
(bad)
(bad)
inc
jb
inc
add
or
add
outs
add
or
add
add
dec
or
cmp
(bad)
(bad)
push
add
or
and
add
add
push
or
cmp
jb
inc
add
or
add
outs
add
or
add
add
dec
or
cmp
jno
add
or
add
sub
add
push
add
add
push
or
cmp
dec
adc
and
push
or
cmp
(bad)
push
add
or
and
push
or
cmp
(bad)
(bad)
cmp
add
add
push
add
add
push
or
cmp
(bad)
call
or
or
add
dec
or
cmp
(bad)
(bad)
inc
or
add
or
mov
add
and
add
add
push
or
cmp
(bad)
(bad)
(bad)
jle
add
add
xchg
add
jo
or
add
push
sub
add
or
sub
push
sub
cmp
(bad)
jmp
adc
add
dec
or
cmp
std
(bad)
inc
jb
inc
add
or
add
outs
add
or
add
add
dec
or
cmp
std
(bad)
(bad)
jle
add
add
add
add
add
or
add
sub
add
adc
and
push
or
cmp
adc
outs
dec
add
or
or
add
dec
or
cmp
adc
add
push
adc
and
add
dec
or
cmp
(bad)
call
or
pop
adc
and
add
add
push
or
cmp
(bad)
inc
jb
inc
add
or
add
outs
add
or
add
add
dec
or
cmp
std
(bad)
call
or
or
(bad)
inc
sub
add
xor
or
add
inc
add
adc
xor
or
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
js
add
or
add
add
or
add
dec
add
cmp
add
and
add
or
add
sub
add
or
sub
push
sub
sub
and
add
add
push
add
add
pop
adc
add
add
dec
add
test
add
and
add
add
push
add
(bad)
dec
jb
inc
add
or
add
outs
xchg
add
or
and
add
add
push
add
(bad)
inc
or
add
push
add
(bad)
dec
adc
or
push
add
add
push
add
(bad)
call
or
or
add
dec
add
(bad)
call
adc
pop
add
add
push
add
(bad)
inc
pop
pop
or
add
push
add
(bad)
call
add
mov
mov
sub
add
add
add
add
sub
xor
add
add
add
add
adc
jnp
add
add
add
add
add
add
add
jge
add
add
add
xor
add
add
add
add
sub
inc
add
add
add
add
pop
add
add
add
add
add
add
add
add
dec
add
sub
add
jp
add
inc
sub
add
add
dec
add
sub
add
pop
xor
add
push
add
sub
or
add
add
dec
add
sub
adc
sub
push
sub
sub
and
add
add
push
add
sub
add
xor
add
add
add
add
add
add
add
add
sub
add
push
sub
adc
add
pop
add
add
add
adc
add
add
jnp
add
add
outs
mov
xor
add
sub
adc
add
xchg
add
add
add
sub
inc
add
add
add
add
pop
add
add
add
add
and
add
add
push
add
sub
add
lds
add
sub
and
add
add
push
add
sub
pop
sub
add
add
dec
add
sub
add
push
sub
and
add
add
push
add
sub
add
push
sub
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
push
sub
sub
add
xor
add
add
add
add
add
add
add
add
add
sub
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
add
rol
push
sub
xor
add
add
add
add
adc
add
rol
push
push
inc
sub
push
add
sbb
add
sub
add
sub
add
add
add
sub
add
or
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
push
add
add
add
add
sub
add
or
sub
add
or
add
jae
add
or
outs
popf
add
or
add
or
add
jb
inc
add
or
add
jae
add
or
add
add
add
add
sub
add
add
popf
add
add
add
xor
add
adc
xor
inc
or
add
repz
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
lods
add
add
and
add
add
push
add
sub
add
or
add
outs
daa
add
or
and
add
add
push
add
sub
add
or
add
outs
daa
add
or
and
add
add
push
add
sub
add
add
and
add
xor
add
push
add
cmp
(bad)
call
or
add
add
dec
add
cmp
(bad)
inc
jnp
add
add
mov
add
and
add
add
push
add
cmp
(bad)
inc
add
add
add
daa
add
or
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
(bad)
push
add
or
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
add
add
outs
and
add
outs
sub
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
pop
pop
or
add
add
dec
add
cmp
(bad)
(bad)
(bad)
cmp
jmp
add
add
dec
add
cmp
(bad)
(bad)
inc
jb
inc
add
or
add
outs
daa
add
or
jle
add
add
sub
add
push
sub
add
add
sub
add
add
sbb
add
jae
add
push
sbb
add
xor
sub
add
sub
add
or
add
add
add
sub
add
sub
add
or
add
adc
add
add
add
adc
sbb
or
add
add
add
add
add
add
cmp
add
or
add
add
add
add
dec
add
sub
add
sub
add
or
pop
sub
push
sub
sub
and
add
add
push
add
sub
sub
add
and
add
add
push
add
sub
add
push
add
sub
sub
add
sub
adc
add
adc
add
add
add
add
sub
add
or
add
sub
add
or
adc
add
xor
add
add
add
jb
push
add
or
add
sbb
inc
add
or
add
and
inc
add
or
add
and
inc
add
or
add
and
pop
add
pop
pop
jae
add
or
adc
sub
mov
fs
pop
jae
add
or
sub
xor
add
add
add
aad
add
or
add
add
xor
jo
or
add
push
mov
add
jb
inc
add
or
add
sub
add
sub
xor
xor
add
inc
add
adc
add
add
jle
add
add
outs
add
push
sub
jle
add
add
add
add
adc
mov
and
daa
add
push
or
sub
xor
pop
add
add
add
adc
add
adc
add
push
jle
add
add
sub
add
or
sub
adc
add
sldt
add
add
adc
sub
add
jle
add
add
add
xor
add
add
add
add
adc
add
add
sub
push
sub
add
push
sub
add
adc
add
or
add
add
add
jle
add
add
sub
add
push
sub
xor
adc
add
add
add
lldt
inc
add
add
jns
add
sub
adc
add
adc
add
add
add
lldt
inc
add
add
jns
add
sub
add
or
add
xor
adc
add
add
add
lldt
inc
add
add
jns
add
sub
add
or
add
xor
adc
add
add
add
lldt
inc
add
add
jns
add
sub
add
sub
adc
add
adc
add
add
add
lldt
inc
add
add
jns
add
sub
add
or
add
xor
adc
add
add
add
lldt
inc
add
add
jns
add
sub
add
xor
adc
add
add
add
lldt
inc
add
add
jns
add
sub
add
or
add
xor
adc
add
add
add
lldt
inc
add
add
jns
add
sub
add
or
add
xor
adc
add
add
add
lldt
inc
add
add
jns
add
sub
add
sub
adc
add
adc
add
add
add
lldt
inc
add
add
jns
add
sub
add
or
add
xor
adc
add
add
add
lldt
inc
add
add
jns
add
sub
add
or
add
xor
add
add
add
add
jle
add
add
and
add
inc
add
or
add
jle
add
add
jns
add
sub
add
or
and
push
add
sub
xor
add
add
add
add
adc
pop
and
out
add
sub
add
adc
add
or
add
add
add
add
pop
sub
add
add
xor
fld
add
inc
add
adc
popa
dec
add
add
add
add
add
add
add
add
add
add
out
add
jg
add
int
add
cmps
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
adc
push
add
sub
add
and
add
add
push
add
sub
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
pushf
add
add
add
add
add
add
add
add
adc
add
dec
add
cmp
(bad)
inc
movs
pop
add
add
xlat
add
push
sub
adc
add
dec
add
cmp
(bad)
(bad)
inc
movs
dec
add
add
loope
add
sub
or
add
dec
add
cmp
(bad)
(bad)
inc
movs
ja
add
sub
add
push
sub
or
add
dec
add
cmp
(bad)
(bad)
(bad)
jle
add
add
and
add
dec
add
cmp
(bad)
(bad)
inc
outs
xor
add
or
add
add
dec
add
cmp
je
add
add
out
add
sub
adc
add
dec
add
cmp
movs
pop
add
add
fadd
add
sub
add
add
dec
add
cmp
movs
adc
add
sub
add
push
sub
or
add
dec
add
cmp
(bad)
inc
movs
jne
add
sub
add
push
sub
push
add
add
push
add
cmp
(bad)
(bad)
cmp
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
movs
jns
add
sub
add
push
sub
add
push
add
cmp
(bad)
(bad)
inc
movs
inc
add
add
fiadd
add
sub
push
add
add
push
add
cmp
(bad)
(bad)
inc
movs
add
add
loop
add
sub
pop
add
add
push
add
cmp
std
(bad)
inc
movs
jb
add
sub
add
push
sub
or
add
dec
add
cmp
std
(bad)
inc
movs
jbe
add
sub
add
push
sub
or
push
add
cmp
movs
je
add
sub
add
push
sub
sldt
add
push
add
cmp
movs
js
add
sub
add
push
sub
sub
push
sub
sub
and
add
add
push
add
cmp
inc
jne
add
add
and
add
add
push
add
cmp
(bad)
inc
jne
add
add
and
add
add
push
add
cmp
(bad)
inc
movs
sbb
add
sub
add
push
sub
inc
add
or
add
jle
add
add
sub
add
sub
daa
add
or
add
adc
add
or
add
add
add
add
adc
jmp
add
xor
imul
add
add
jle
add
add
jns
add
jae
add
or
jae
add
push
or
add
add
sub
adc
outs
xor
add
add
call
pop
pop
or
add
imul
add
push
or
pop
outs
dec
add
push
pop
or
outs
inc
add
push
fimul
or
jle
add
add
sub
push
outs
add
add
sub
add
add
add
inc
add
add
adc
add
or
add
add
add
add
sub
add
push
sub
add
adc
add
or
add
add
add
add
adc
out
add
push
sub
add
adc
add
or
add
add
add
add
add
add
sub
xor
sbb
add
add
add
add
add
add
pop
add
sbb
add
add
out
add
push
movs
pop
add
sbb
sbb
add
pop
add
add
add
add
add
or
jae
add
push
or
add
add
sub
adc
outs
xor
add
add
call
pop
pop
or
add
imul
add
push
adc
adc
outs
xor
ficom
adc
or
in
add
add
xchg
add
push
fmul
sub
adc
add
add
add
add
adc
add
sldt
add
add
jae
add
push
or
add
inc
add
push
sub
adc
add
and
add
adc
add
add
add
or
add
add
add
pop
add
or
das
add
push
jae
add
or
add
push
add
add
add
sub
add
add
or
adc
add
mov
add
dec
add
adc
sbb
inc
add
add
add
add
add
add
dec
add
add
add
add
add
add
dec
add
sub
add
add
pop
sub
and
add
add
push
add
sub
add
add
push
add
sub
add
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
or
add
or
add
add
dec
add
cmp
inc
pop
xor
add
mov
add
dec
add
adc
sbb
inc
add
add
add
add
add
add
dec
add
add
add
add
add
add
dec
add
sub
add
add
pop
sub
and
add
add
push
add
sub
add
add
push
add
sub
add
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
or
add
or
add
add
dec
add
cmp
inc
pop
xor
add
test
add
dec
add
adc
sbb
inc
add
add
add
add
add
add
dec
add
add
add
add
add
add
dec
add
sub
add
outs
push
add
add
dec
add
sub
add
add
or
add
add
dec
add
sub
or
sub
push
sub
sub
and
add
add
push
add
sub
add
jae
add
push
or
add
add
dec
add
sub
push
sub
add
adc
add
push
add
add
add
adc
jnp
add
add
or
add
add
add
or
add
sbb
add
push
add
dec
add
adc
sub
add
or
add
jae
add
or
mov
add
outs
mov
add
add
add
jae
add
or
clc
add
push
fidivr
or
add
add
push
sub
jle
add
or
add
push
jle
add
add
sub
adc
inc
add
or
add
push
jae
add
or
add
add
add
add
add
adc
push
xor
cmp
xor
add
add
add
add
adc
sub
add
add
add
add
sub
add
or
add
sub
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
add
add
add
cmp
sub
add
or
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
add
jae
add
or
add
add
add
and
adc
add
add
push
jge
add
add
push
jge
add
add
jae
add
or
add
add
push
jge
add
add
sbb
push
add
push
sub
add
adc
add
sbb
add
add
add
add
add
add
outs
imul
or
and
add
pop
jge
add
add
add
xor
das
add
add
add
add
or
add
or
jnp
add
add
jnp
add
add
ins
add
or
pop
outs
ins
add
or
and
add
pop
jge
add
add
sub
adc
add
adc
add
add
add
add
add
add
jnp
add
add
pop
outs
outs
add
or
adc
add
ret
add
add
add
cmp
or
add
add
add
add
add
add
add
add
cmps
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
and
add
add
push
add
cmp
(bad)
call
or
add
add
dec
add
cmp
(bad)
(bad)
cmp
add
add
or
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
pop
add
and
push
add
cmp
(bad)
(bad)
(bad)
cmp
add
add
or
add
dec
add
cmp
(bad)
(bad)
(bad)
cmp
add
add
or
add
dec
add
cmp
(bad)
(bad)
inc
pop
pop
inc
fld
add
and
add
add
push
add
cmp
sub
add
push
cmp
add
add
add
add
dec
add
cmp
jnp
add
add
and
add
add
push
add
cmp
sub
add
push
cmp
add
and
add
add
push
add
cmp
(bad)
dec
pop
bound
lahf
add
add
and
push
add
cmp
(bad)
inc
pop
and
mov
add
and
add
add
push
add
cmp
(bad)
(bad)
cmp
and
add
dec
add
cmp
(bad)
(bad)
dec
pop
outs
cmp
add
and
add
add
push
add
cmp
(bad)
(bad)
dec
pop
jb
inc
pop
add
add
(bad)
(bad)
call
add
icebp
add
add
(bad)
(bad)
jmp
(bad)
(bad)
push
add
add
and
add
dec
add
cmp
std
(bad)
inc
jnp
add
add
jnp
add
add
pop
add
and
add
add
push
add
cmp
std
(bad)
inc
jnp
add
add
outs
pop
add
and
add
add
push
add
cmp
pop
cmp
(bad)
jmp
add
add
dec
add
cmp
jnp
add
add
or
add
push
and
add
add
push
add
cmp
ja
sub
add
dec
add
cmp
(bad)
dec
pop
cmp
add
push
add
cmp
(bad)
jmp
push
and
add
add
push
add
cmp
(bad)
inc
jnp
add
add
or
push
and
add
add
push
add
cmp
test
add
and
add
dec
add
cmp
std
(bad)
inc
pop
daa
cs
add
add
dec
add
cmp
cmc
add
add
adc
add
dec
add
cmp
cld
(bad)
jmp
jmp
push
add
cmp
cld
(bad)
inc
jnp
add
add
or
pop
add
and
add
add
push
add
cmp
cld
(bad)
push
inc
add
or
add
add
xchg
add
or
add
push
jp
sbb
add
dec
add
cmp
test
add
inc
test
push
add
add
push
add
cmp
or
sbb
add
dec
add
cmp
(bad)
(bad)
cmp
(bad)
jmp
sldt
add
push
add
cmp
(bad)
inc
sub
adc
add
dec
add
cmp
(bad)
inc
jle
add
add
inc
add
add
add
jge
add
add
adc
push
add
cmp
cld
(bad)
inc
add
add
add
add
add
jge
add
add
push
add
add
push
add
cmp
cld
(bad)
inc
sub
add
dec
add
cmp
cld
(bad)
push
inc
add
or
add
add
xchg
add
or
add
push
jp
sbb
add
dec
add
cmp
sti
(bad)
(bad)
cmp
(bad)
(bad)
jmp
or
add
dec
add
cmp
sti
(bad)
(bad)
cmp
pop
add
add
push
add
cmp
jnp
add
add
or
add
push
pop
sub
push
sub
sub
and
add
add
push
add
cmp
push
jge
add
add
pop
add
add
push
add
cmp
(bad)
inc
jnp
add
add
outs
mov
add
and
add
add
push
add
cmp
(bad)
inc
sbb
add
adc
add
dec
add
cmp
(bad)
inc
add
add
add
add
xor
add
add
sbb
or
add
add
add
add
add
add
xor
add
or
add
add
add
add
dec
add
sub
add
add
add
push
add
or
and
add
add
push
add
sub
push
adc
add
add
push
add
sub
test
add
sub
push
sub
sub
and
add
add
push
add
sub
adc
add
adc
add
add
add
add
add
add
push
add
or
add
add
adc
add
or
add
adc
jnp
add
add
push
add
or
sub
add
adc
add
or
add
add
add
add
jge
add
add
adc
add
add
add
add
adc
sbb
or
add
add
add
add
add
add
sub
add
add
and
add
add
push
add
sub
sub
add
add
dec
add
sub
add
add
add
xor
and
add
add
push
add
sub
add
sub
sub
and
add
add
push
add
sub
add
sub
adc
add
dec
add
add
add
sub
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
push
add
sub
push
sub
add
add
dec
add
sub
add
sub
add
add
dec
add
sub
push
sub
and
add
dec
add
sub
add
movs
(bad)
(bad)
dec
add
add
add
add
add
movs
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
inc
jnp
add
add
dec
and
add
add
push
add
cmp
(bad)
(bad)
jmp
pop
and
add
add
push
add
cmp
(bad)
(bad)
inc
sub
add
push
sub
add
dec
add
cmp
(bad)
(bad)
inc
sub
add
push
sub
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
pop
sub
push
sub
cmp
(bad)
jmp
pop
add
add
push
add
cmp
(bad)
(bad)
call
sub
inc
add
or
add
add
add
add
sub
add
sub
add
push
jp
xor
push
add
add
add
sub
or
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
mov
add
fiadd
add
adc
add
inc
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
sub
add
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
inc
pop
das
xor
adc
push
add
cmp
(bad)
inc
pop
sub
test
add
add
push
add
cmp
(bad)
inc
pop
or
push
add
push
and
add
add
push
add
cmp
(bad)
inc
jnp
add
add
and
add
add
push
add
cmp
(bad)
(bad)
call
sub
or
add
dec
add
cmp
(bad)
(bad)
inc
pop
pop
cs
and
add
add
push
add
cmp
(bad)
(bad)
(bad)
cmp
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
sub
add
add
dec
add
cmp
(bad)
(bad)
call
sub
adc
add
dec
add
cmp
(bad)
(bad)
inc
pop
or
push
add
push
and
push
add
cmp
pop
das
cs
add
push
add
cmp
or
or
add
dec
add
cmp
mov
add
or
add
dec
add
cmp
(bad)
inc
sub
add
push
and
add
add
push
add
cmp
(bad)
inc
sub
push
add
add
push
add
cmp
(bad)
inc
sub
or
add
dec
add
cmp
(bad)
(bad)
inc
pop
jge
push
and
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
add
add
sub
and
push
add
cmp
(bad)
(bad)
call
sub
push
add
add
push
add
cmp
std
(bad)
call
sub
pop
add
add
push
add
cmp
std
(bad)
push
inc
add
or
add
add
add
add
pop
add
add
xchg
add
or
add
push
jp
or
add
dec
add
cmp
sub
add
push
cmp
(bad)
call
sub
add
xor
dec
add
add
add
sub
inc
or
add
add
add
ja
add
scas
add
add
add
add
add
add
add
add
add
add
add
aam
add
or
add
add
or
add
dec
add
sub
add
and
add
add
push
add
sub
add
sub
push
add
add
push
add
sub
add
sub
cmp
pop
add
add
push
add
cmp
(bad)
inc
pop
jge
xchg
add
add
or
add
dec
add
cmp
(bad)
inc
pop
or
push
add
push
and
add
add
push
add
cmp
call
sub
add
push
add
cmp
(bad)
inc
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
inc
pop
sub
push
and
add
add
push
add
cmp
sub
or
add
dec
add
cmp
pop
or
push
add
push
and
add
dec
add
cmp
(bad)
(bad)
inc
pop
das
cs
and
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
add
add
sub
add
dec
add
cmp
(bad)
(bad)
inc
sub
add
push
cmp
(bad)
(bad)
call
sub
add
xor
je
add
add
add
sub
dec
add
add
add
add
cmp
add
add
add
add
sub
add
or
add
jecxz
add
mov
add
or
add
sti
add
add
add
add
and
add
add
push
add
sub
add
daa
xor
sub
push
sub
cmp
add
add
dec
add
sub
add
and
add
add
push
add
sub
add
and
push
and
add
add
push
add
cmp
(bad)
inc
pop
cmp
push
add
push
and
add
add
push
add
cmp
(bad)
push
inc
add
or
add
add
add
add
pop
add
add
xchg
add
or
add
push
jp
pop
add
add
push
add
cmp
add
add
add
adc
add
and
add
add
push
add
cmp
(bad)
(bad)
jmp
sub
add
push
add
cmp
(bad)
(bad)
inc
add
add
add
adc
add
cmp
(bad)
jmp
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
cmp
push
and
add
dec
add
cmp
(bad)
(bad)
jmp
out
add
add
dec
add
cmp
add
add
add
add
add
sub
add
push
and
push
add
cmp
lods
add
add
outs
mov
add
pop
sub
xor
add
add
adc
sbb
inc
add
add
add
add
pop
add
add
add
add
add
add
add
add
dec
add
sub
add
add
add
xor
and
add
add
push
add
sub
add
add
add
jnp
add
add
pop
add
and
add
add
push
add
sub
push
sub
sub
and
add
add
push
add
sub
add
add
push
add
sub
add
sub
add
ret
inc
add
or
add
add
cmp
add
jae
add
push
jp
xor
add
add
add
add
adc
add
add
jnp
add
add
push
add
push
sub
add
add
pop
or
jnp
add
add
and
add
pop
sub
add
adc
add
cmp
add
adc
xor
or
add
add
add
add
add
add
add
add
add
add
lds
add
in
add
sub
add
or
add
add
or
add
dec
add
sub
add
add
add
jnp
add
add
pop
add
and
add
add
push
add
sub
add
add
add
cmp
add
add
add
add
dec
add
sub
sub
add
push
add
add
add
pop
add
add
xchg
add
or
add
push
jp
add
add
dec
add
cmp
(bad)
inc
jnp
add
add
cmp
and
add
add
push
add
cmp
(bad)
jmp
jae
or
add
dec
add
cmp
(bad)
(bad)
jmp
arpl
add
push
add
cmp
(bad)
(bad)
inc
add
add
add
adc
add
sub
and
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
pop
add
and
add
add
push
add
cmp
(bad)
(bad)
jmp
pop
sub
push
sub
cmp
(bad)
jmp
add
add
dec
add
cmp
(bad)
(bad)
inc
sub
add
push
cmp
(bad)
(bad)
jmp
add
add
xor
or
add
add
add
add
adc
pop
add
push
sub
add
adc
add
add
add
cmp
or
add
add
add
add
add
add
add
add
add
add
add
sbb
add
movs
add
add
add
add
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
cmp
add
pop
add
sub
add
fld
add
push
add
add
add
add
add
cmp
add
sldt
add
and
push
add
cmp
(bad)
inc
add
add
add
add
add
dec
add
cmp
(bad)
inc
sbb
add
add
or
add
dec
add
cmp
(bad)
inc
pop
pop
inc
push
add
add
add
add
add
stos
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
(bad)
jmp
push
and
add
add
push
add
cmp
(bad)
(bad)
inc
dec
and
add
dec
add
cmp
(bad)
(bad)
inc
push
sub
add
push
and
add
add
push
add
cmp
sub
add
add
dec
add
cmp
pop
or
sbb
add
and
add
add
push
add
cmp
adc
stos
add
add
push
add
add
push
add
cmp
(bad)
inc
pop
sub
add
push
and
add
add
push
add
cmp
(bad)
jmp
test
adc
push
add
cmp
(bad)
inc
push
jge
add
add
pop
add
add
push
add
cmp
(bad)
(bad)
cmp
jmp
pop
add
add
push
add
cmp
(bad)
(bad)
inc
sub
push
add
add
push
add
cmp
(bad)
(bad)
inc
sbb
add
add
add
add
dec
add
cmp
add
stos
add
add
adc
add
dec
add
cmp
std
(bad)
inc
pop
or
sbb
add
and
add
add
push
add
cmp
std
(bad)
inc
sub
adc
add
dec
add
cmp
std
(bad)
inc
sbb
add
add
add
add
dec
add
cmp
int3
(bad)
(bad)
jmp
adc
add
dec
add
cmp
jle
add
add
sub
add
jge
add
add
or
push
add
cmp
(bad)
inc
sub
adc
add
dec
add
cmp
(bad)
(bad)
cmp
or
add
dec
add
cmp
(bad)
inc
push
jge
add
add
adc
add
dec
add
cmp
(bad)
inc
push
jge
add
add
or
add
dec
add
cmp
std
(bad)
inc
sub
add
push
add
cmp
std
(bad)
(bad)
cmp
sbb
add
dec
add
cmp
std
(bad)
jmp
and
add
add
push
add
cmp
cld
(bad)
inc
or
sbb
add
dec
add
cmp
cld
(bad)
inc
adc
stos
add
add
add
add
xor
add
add
push
add
adc
stc
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
cmp
add
int
add
sbb
add
fld
add
(bad)
add
add
add
add
add
add
add
add
add
int3
add
add
add
out
add
sbb
add
sub
add
add
add
add
add
add
add
add
adc
add
rol
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
dec
add
cmp
(bad)
(bad)
inc
sub
adc
add
dec
add
cmp
(bad)
(bad)
inc
pop
outs
cmp
xor
add
dec
add
cmp
(bad)
(bad)
inc
pop
sub
and
add
add
push
add
cmp
sub
add
or
or
add
dec
add
cmp
jnp
add
add
sub
add
add
push
add
cmp
sub
add
push
and
add
dec
add
cmp
(bad)
inc
pop
sub
add
push
and
add
add
push
add
cmp
(bad)
inc
pop
das
cmp
add
aaa
add
add
push
add
cmp
(bad)
cmp
add
add
sub
push
sub
cmp
or
add
dec
add
cmp
(bad)
(bad)
call
sub
sub
add
dec
add
cmp
(bad)
(bad)
inc
sbb
push
add
push
and
add
dec
add
cmp
(bad)
(bad)
inc
pop
gs
mov
add
add
push
add
cmp
std
(bad)
inc
pop
or
push
add
push
and
add
add
push
add
cmp
std
(bad)
call
sub
or
add
dec
add
cmp
std
(bad)
inc
sub
add
push
and
add
dec
add
cmp
jnp
add
add
add
add
cmp
(bad)
(bad)
jmp
and
add
dec
add
cmp
lea
add
and
add
dec
add
cmp
jnp
add
add
and
add
add
push
add
cmp
(bad)
inc
sub
add
and
push
add
cmp
(bad)
inc
sub
add
push
and
add
add
push
add
cmp
(bad)
call
sub
or
add
dec
add
cmp
std
(bad)
push
dec
add
or
add
add
add
add
pop
add
add
xchg
add
or
add
push
jp
and
add
dec
add
cmp
inc
add
and
add
add
push
add
cmp
cld
(bad)
(bad)
cmp
add
add
push
add
add
push
add
cmp
cld
(bad)
inc
pop
and
adc
cmp
add
dec
add
cmp
cld
(bad)
inc
pop
jne
sar
jmp
add
add
push
add
cmp
pop
das
cmp
and
add
add
push
add
cmp
mov
add
and
push
add
cmp
pop
pop
pop
inc
add
add
pop
(bad)
(bad)
push
add
add
push
add
cmp
(bad)
inc
pop
je
inc
add
add
(bad)
(bad)
(bad)
jmp
(bad)
jmp
pop
add
add
push
add
cmp
(bad)
inc
pop
cmp
add
add
xor
push
add
cmp
cld
(bad)
push
dec
add
or
add
add
add
add
pop
add
add
xchg
add
or
add
push
jp
sub
add
dec
add
cmp
(bad)
push
dec
add
or
add
jae
add
push
jp
adc
add
dec
add
cmp
sti
(bad)
call
sub
sub
add
dec
add
cmp
sti
(bad)
inc
sub
add
push
and
add
add
push
add
cmp
sti
(bad)
inc
add
add
add
or
add
and
add
add
push
add
cmp
pop
daa
pop
inc
add
add
sar
(bad)
call
add
add
add
add
dec
add
cmp
sub
or
add
dec
add
cmp
(bad)
inc
pop
sub
xchg
add
add
add
add
dec
add
cmp
(bad)
call
sub
daa
add
add
push
add
cmp
(bad)
call
sub
and
push
add
cmp
(bad)
call
sub
add
add
push
add
cmp
sti
(bad)
inc
pop
or
push
add
push
and
push
add
cmp
sti
(bad)
(bad)
cmp
(bad)
(bad)
jmp
sldt
add
push
add
cmp
sti
(bad)
inc
jnp
add
add
or
std
(bad)
jmp
sbb
add
dec
add
cmp
cli
(bad)
call
sub
and
add
dec
add
cmp
cli
(bad)
inc
pop
or
push
add
push
and
add
add
push
add
cmp
cli
(bad)
call
sub
and
add
dec
add
cmp
pop
jnp
inc
add
add
xor
(bad)
call
(bad)
(bad)
jmp
xor
add
dec
add
cmp
pop
or
add
add
and
add
dec
add
cmp
and
add
add
push
add
cmp
inc
sub
add
push
and
add
add
push
add
cmp
(bad)
inc
pop
cmp
(bad)
jmp
add
add
push
add
cmp
(bad)
inc
sub
add
push
cmp
(bad)
(bad)
jmp
das
add
add
push
add
cmp
cli
(bad)
call
sub
sub
add
dec
add
cmp
cli
(bad)
inc
jnp
add
add
xor
and
add
add
push
add
cmp
cli
(bad)
inc
jnp
add
add
add
add
sub
add
dec
add
cmp
stc
(bad)
call
sub
push
add
add
push
add
cmp
stc
(bad)
push
dec
add
or
add
add
add
add
pop
add
add
xchg
add
or
add
push
jp
sbb
push
add
cmp
sub
add
push
cmp
sub
add
xor
add
add
sub
inc
pop
add
add
add
and
add
add
add
add
or
add
xor
add
push
add
add
and
add
add
push
add
sub
add
add
add
add
add
sub
add
dec
add
sub
add
add
dec
add
sub
add
sub
sub
and
add
add
push
add
sub
add
dec
add
sub
add
add
push
add
cmp
(bad)
inc
sub
add
push
and
add
dec
add
cmp
(bad)
inc
sub
sub
xor
add
add
sub
or
add
add
add
add
add
add
mov
add
fadd
add
repnz
add
add
push
add
add
add
imul
add
das
add
add
add
xchg
add
aas
add
add
add
add
add
add
add
jl
add
cmc
add
add
add
les
add
stos
add
add
add
mov
add
add
sbb
add
dec
add
jnp
add
add
sub
add
add
add
push
add
(bad)
inc
pop
sub
add
push
cmp
add
and
add
add
push
add
(bad)
inc
sub
add
push
and
add
add
push
add
(bad)
(bad)
cmp
add
add
adc
add
dec
add
(bad)
inc
jb
dec
add
or
add
sub
sub
adc
add
dec
add
(bad)
inc
jnp
add
add
add
add
cmp
push
add
add
push
add
(bad)
inc
jnp
add
add
add
add
or
add
add
dec
add
(bad)
push
add
or
and
add
dec
add
(bad)
inc
jnp
add
add
outs
mov
add
and
push
add
(bad)
inc
push
sub
add
push
and
add
dec
add
(bad)
inc
jb
dec
add
or
add
pop
sub
add
push
cmp
add
and
add
add
push
add
(bad)
inc
jnp
add
add
or
add
add
or
push
add
(bad)
inc
jnp
add
add
jnp
add
add
pop
add
and
add
add
push
add
(bad)
inc
pop
or
add
add
adc
add
dec
add
(bad)
inc
add
add
add
pop
add
or
pop
add
add
push
add
(bad)
dec
sub
add
push
or
add
push
add
(bad)
inc
pop
jae
add
push
jae
add
push
adc
or
add
dec
add
(bad)
(bad)
cmp
(bad)
(bad)
jmp
add
add
dec
add
(bad)
inc
push
outs
and
add
sub
add
or
or
add
dec
add
(bad)
inc
pop
or
add
add
sub
push
sub
sub
and
add
add
push
add
(bad)
inc
pop
push
or
pop
add
push
and
add
add
push
add
(bad)
jmp
push
and
add
add
push
add
(bad)
inc
pop
or
add
push
and
add
dec
add
(bad)
inc
sub
add
push
sub
and
add
add
push
add
(bad)
inc
sub
add
push
cmp
(bad)
jmp
or
add
dec
add
(bad)
inc
sub
add
push
sub
add
adc
add
add
add
sub
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
jns
add
in
add
aas
add
add
add
add
add
add
add
add
sldt
add
push
add
sub
add
add
push
add
sub
add
cmp
add
add
push
add
add
push
add
sub
add
add
push
add
cmp
(bad)
inc
sub
add
push
sub
add
dec
add
cmp
(bad)
call
add
push
add
cmp
(bad)
inc
cmp
add
add
or
add
dec
add
cmp
(bad)
(bad)
call
or
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
add
add
jle
add
add
jns
add
sub
add
or
and
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
add
add
jle
add
add
jns
add
sub
add
or
and
add
add
push
add
cmp
(bad)
(bad)
inc
pop
outs
mov
xor
add
push
add
cmp
jnp
add
add
jnp
add
add
pop
add
and
add
add
push
add
cmp
cmp
or
add
dec
add
cmp
jnp
add
add
add
add
or
or
add
dec
add
cmp
(bad)
(bad)
cmp
(bad)
(bad)
jmp
or
push
add
cmp
(bad)
inc
jnp
add
add
outs
mov
add
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
(bad)
inc
or
sub
add
push
sub
xor
add
add
add
pop
add
push
or
add
push
add
push
push
cs
add
add
adc
jo
or
add
add
mov
add
add
call
sub
add
jp
adc
add
adc
add
push
add
adc
xor
or
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
or
add
mov
add
add
or
add
dec
add
sub
pop
inc
add
add
aaa
add
add
add
test
add
and
add
add
push
add
sub
add
add
push
add
sub
add
pop
add
add
push
add
sub
add
dec
add
cmp
(bad)
inc
sbb
add
add
add
add
dec
add
cmp
(bad)
jmp
and
add
add
push
add
cmp
(bad)
inc
sbb
scas
add
add
add
add
dec
add
cmp
(bad)
inc
sub
add
push
or
add
add
dec
add
cmp
(bad)
inc
pop
or
scas
add
add
sub
push
sub
sub
and
add
dec
add
cmp
(bad)
(bad)
jmp
jb
dec
add
or
add
push
mov
add
add
xchg
add
or
add
push
jp
xor
xchg
add
add
add
sub
inc
add
add
add
add
add
add
cmp
add
or
add
add
add
add
dec
add
sub
add
and
add
add
push
add
sub
sub
and
add
add
push
add
sub
add
sub
sub
and
add
add
push
add
sub
inc
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
sub
add
or
add
add
xchg
add
or
add
push
jp
adc
add
(bad)
add
add
add
adc
dec
dec
add
add
add
add
add
add
add
add
rol
add
adc
add
add
add
mov
add
cdq
add
add
add
add
add
inc
add
add
add
add
add
sldt
add
push
add
sub
add
and
add
add
push
add
sub
add
sub
add
add
push
add
add
push
add
sub
add
add
push
add
cmp
(bad)
inc
jnp
add
add
sub
add
push
and
add
add
push
add
cmp
(bad)
inc
sbb
jnp
add
add
add
add
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
das
cs
and
add
dec
add
cmp
(bad)
(bad)
inc
sub
add
push
cmp
add
push
add
cmp
jbe
add
or
add
jae
add
push
jp
push
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
pop
add
and
add
add
push
add
cmp
(bad)
(bad)
jmp
test
add
add
dec
add
cmp
sub
add
push
sub
and
add
add
push
add
cmp
inc
(bad)
(bad)
jmp
or
add
dec
add
cmp
jnp
add
add
jnp
add
add
pop
add
and
add
add
push
add
cmp
(bad)
inc
jnp
add
add
sub
(bad)
(bad)
jmp
or
push
add
cmp
(bad)
inc
jnp
add
add
outs
mov
add
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
(bad)
inc
sub
add
adc
add
add
sbb
inc
add
add
add
add
add
add
inc
add
add
add
add
add
add
dec
add
sub
push
or
add
add
dec
add
sub
push
pop
pop
or
add
add
dec
add
sub
add
or
xor
sub
sub
and
add
add
push
add
sub
add
push
outs
pushf
add
or
adc
add
add
dec
add
sub
add
sub
popf
add
or
add
add
xor
add
add
adc
and
inc
pop
add
add
add
sub
add
add
add
push
add
add
add
add
add
add
push
add
add
push
add
sub
add
sub
add
push
or
add
add
dec
add
sub
add
add
push
add
sub
add
sub
sub
and
push
add
sub
add
add
dec
add
sub
add
sub
and
add
add
push
add
cmp
(bad)
inc
sub
add
push
sub
add
add
dec
add
cmp
(bad)
call
sub
sub
add
xor
add
add
adc
dec
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
sldt
add
push
add
sub
add
and
add
add
push
add
sub
inc
and
add
add
push
add
sub
pop
and
add
add
push
add
cmp
(bad)
inc
pop
pop
cs
add
add
dec
add
cmp
(bad)
call
sub
or
add
dec
add
cmp
(bad)
inc
pop
das
cs
and
add
dec
add
cmp
(bad)
inc
sub
add
pop
sub
add
and
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
or
add
add
push
add
add
push
add
cmp
(bad)
inc
sub
add
push
sub
and
add
add
push
add
cmp
(bad)
(bad)
call
sub
add
add
dec
add
cmp
(bad)
(bad)
jmp
inc
and
add
add
push
add
cmp
(bad)
(bad)
call
sub
or
add
dec
add
cmp
(bad)
(bad)
inc
pop
jge
and
or
add
dec
add
cmp
pop
sub
mov
add
push
add
cmp
jnp
add
add
add
add
sub
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
call
sub
sub
add
adc
add
sub
add
add
add
add
add
add
sub
add
push
sub
add
pop
mov
add
sub
add
push
sub
dec
add
or
add
jae
add
push
jp
xor
daa
add
add
add
adc
jle
add
add
sub
add
push
sub
add
or
push
add
push
sub
dec
add
or
add
jae
add
push
jp
adc
add
daa
add
add
add
adc
jle
add
add
sub
add
push
sub
add
or
push
add
push
sub
dec
add
or
add
jae
add
push
jp
adc
add
sub
add
add
add
add
add
add
sub
add
push
sub
add
push
mov
add
sub
add
push
sub
dec
add
or
add
jae
add
push
jp
xor
add
add
add
add
adc
pop
sub
add
push
sub
xor
add
add
add
add
adc
jnp
add
add
or
sub
add
sub
add
sub
adc
add
fild
add
add
add
sub
dec
add
add
add
add
add
add
or
add
movs
add
add
add
mov
add
inc
add
add
add
add
pop
add
add
push
add
sub
add
add
add
push
add
or
add
add
dec
add
sub
add
add
push
add
add
push
add
sub
add
add
add
push
add
sub
add
add
sub
push
sub
sub
and
add
add
push
add
cmp
inc
sbb
add
add
add
dec
add
cmp
(bad)
inc
jnp
add
add
das
and
add
add
push
add
cmp
(bad)
inc
jnp
add
add
loop
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
nop
add
push
sub
push
add
or
add
sub
add
sub
add
or
add
add
add
add
or
add
sub
add
add
or
add
sub
add
sub
add
or
add
add
add
add
or
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
jo
add
add
add
sub
dec
add
add
add
add
add
add
sub
add
or
add
add
add
add
dec
add
sub
add
xor
and
add
add
push
add
sub
add
xor
and
add
add
push
add
sub
jo
or
add
jae
add
or
sub
push
sub
sub
and
add
add
push
add
sub
add
add
adc
add
sbb
add
add
add
add
add
add
or
jae
add
push
jge
add
add
jnp
add
add
add
cmp
sub
add
or
push
jge
add
add
add
xor
or
add
add
add
add
adc
xor
add
add
xor
jbe
add
add
add
sub
dec
add
add
add
add
add
add
pop
add
add
and
add
add
push
add
sub
add
add
push
sub
add
dec
add
sub
add
add
dec
add
sub
jo
or
add
jae
add
or
sub
push
sub
sub
and
add
add
push
add
sub
add
cmp
add
sub
add
xor
add
add
sub
inc
or
add
xchg
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
and
add
add
push
add
sub
add
add
push
or
add
add
dec
add
sub
add
pop
add
add
push
add
sub
adc
sub
push
sub
sub
and
add
add
push
add
sub
cmp
add
or
add
add
dec
add
cmp
(bad)
inc
sub
add
push
add
cmp
(bad)
push
add
push
or
add
add
dec
add
cmp
(bad)
dec
sbb
and
push
add
add
push
add
cmp
(bad)
inc
pop
outs
pop
add
or
add
add
dec
add
cmp
(bad)
(bad)
inc
outs
sgdtd
push
cmp
(bad)
push
dec
add
or
add
jae
add
push
jp
add
xor
fiadd
add
pop
add
adc
dec
dec
add
add
add
add
add
add
add
or
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
push
add
sub
add
sub
add
dec
add
sub
jo
or
add
jae
add
push
jp
add
add
dec
add
cmp
(bad)
inc
outs
add
add
sbb
(bad)
and
add
add
push
add
cmp
(bad)
dec
sbb
add
add
and
add
adc
add
and
push
add
cmp
(bad)
(bad)
cmp
add
add
or
add
dec
add
cmp
(bad)
(bad)
inc
outs
add
add
outs
add
add
or
add
add
dec
add
cmp
(bad)
(bad)
dec
pop
or
xchg
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
outs
add
add
or
add
push
add
cmp
(bad)
(bad)
push
add
push
or
add
add
dec
add
cmp
(bad)
(bad)
(bad)
cmp
push
add
add
push
add
cmp
(bad)
(bad)
inc
add
cmp
add
or
add
push
add
cmp
push
push
add
add
push
add
cmp
pop
or
add
or
or
add
dec
add
cmp
sub
or
add
dec
add
cmp
(bad)
push
dec
add
or
add
add
add
push
mov
xchg
add
or
add
push
jp
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
inc
outs
sgdtd
push
cmp
(bad)
(bad)
push
dec
add
or
add
jae
add
push
jp
add
xor
add
add
adc
sub
inc
or
add
in
add
iret
add
add
add
add
add
pop
add
cmp
add
or
add
mov
add
add
or
add
dec
add
sub
pop
add
icebp
add
push
sub
add
add
dec
add
sub
sub
add
cmp
pop
add
add
push
add
sub
push
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
sub
push
sub
sub
and
add
add
push
add
cmp
inc
add
dec
add
cmp
(bad)
(bad)
(bad)
cmp
add
add
push
add
cmp
(bad)
(bad)
inc
and
add
pop
jge
add
add
add
add
dec
add
cmp
(bad)
inc
outs
add
add
or
push
add
add
push
add
cmp
(bad)
(bad)
inc
add
aaa
add
push
sub
add
add
add
push
or
addr16
or
add
add
push
sub
add
add
cmp
sub
add
add
push
add
cmp
add
or
inc
add
add
push
outs
add
add
or
xor
sub
jb
dec
add
or
add
add
add
push
mov
xchg
add
or
add
push
jp
add
add
dec
add
cmp
inc
and
add
pop
jge
add
add
sub
add
xor
add
add
sub
or
add
add
add
add
and
add
lds
add
or
add
add
add
add
add
add
add
add
push
add
add
add
fiadd
add
fwait
add
add
add
add
add
add
and
add
add
push
add
sub
add
or
inc
add
add
or
add
dec
add
sub
add
add
push
add
sub
add
add
dec
add
cmp
(bad)
call
and
add
add
push
add
cmp
(bad)
push
dec
add
or
add
jle
add
add
sub
add
add
cdq
add
or
add
or
or
push
add
cmp
(bad)
(bad)
inc
sub
add
or
outs
cli
add
or
or
add
dec
add
cmp
(bad)
(bad)
inc
test
add
add
dec
add
cmp
(bad)
(bad)
inc
outs
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
lahf
add
add
or
add
dec
add
cmp
(bad)
(bad)
inc
jle
add
add
inc
add
add
add
outs
stc
add
or
and
add
dec
add
cmp
pop
sub
push
sub
sub
and
add
add
push
add
cmp
outs
cmp
add
sub
add
dec
add
cmp
cmp
(bad)
(bad)
jmp
add
add
dec
add
cmp
(bad)
inc
or
add
or
and
push
add
cmp
(bad)
inc
adc
inc
add
add
jns
add
add
add
or
add
adc
add
add
adc
and
or
add
add
add
add
daa
add
add
add
pop
add
add
add
dec
add
add
and
push
add
sub
add
add
add
adc
outs
jb
add
sub
and
add
add
push
add
sub
add
add
push
add
sub
add
jge
add
add
add
add
dec
add
sub
add
add
dec
add
sub
add
push
or
sub
push
sub
sub
and
add
add
push
add
cmp
inc
jnp
add
add
push
outs
jae
add
push
sub
add
sbb
pop
add
add
adc
pop
adc
in
add
or
add
push
or
outs
je
add
adc
sub
or
js
add
or
pop
sub
add
sub
add
add
or
add
inc
add
or
pop
add
or
add
and
add
pop
outs
pop
add
or
add
add
adc
or
loop
add
adc
adc
or
adc
sub
adc
outs
mov
add
adc
sub
add
sub
or
push
sbb
add
outs
or
add
fadd
sub
add
add
add
add
pop
add
add
add
add
adc
push
add
add
add
add
sub
or
add
add
add
add
add
add
add
add
push
add
ret
add
add
js
add
mov
add
pop
add
or
add
cmp
add
dec
add
add
add
add
add
add
add
or
add
add
adc
add
dec
add
sub
add
cmp
add
and
add
add
push
add
sub
jo
or
add
push
add
pop
add
jae
add
push
jp
adc
add
dec
add
cmp
(bad)
call
and
add
sub
add
or
or
pop
add
add
or
add
dec
add
cmp
(bad)
call
add
test
add
sub
add
push
or
or
add
dec
add
cmp
(bad)
(bad)
inc
push
add
xor
add
or
add
push
add
cmp
(bad)
(bad)
call
add
test
add
sub
and
add
add
push
add
cmp
(bad)
(bad)
jmp
and
add
add
push
add
cmp
(bad)
(bad)
call
add
test
add
add
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jmp
and
add
dec
add
cmp
(bad)
(bad)
inc
push
add
xor
add
cmp
(bad)
jmp
sldt
add
push
add
cmp
outs
add
fadd
add
or
pop
add
add
push
add
cmp
add
xchg
add
cmp
(bad)
jmp
or
push
add
cmp
(bad)
jmp
and
add
add
push
add
cmp
inc
add
sub
add
push
or
add
push
add
cmp
(bad)
inc
add
push
or
add
add
dec
add
cmp
(bad)
(bad)
inc
add
sub
add
push
or
or
add
dec
add
cmp
(bad)
(bad)
inc
and
add
push
add
outs
add
or
sub
push
sub
sub
and
add
add
push
add
cmp
std
(bad)
jmp
jb
dec
add
or
add
push
add
mov
add
inc
add
add
sub
add
sub
add
push
sub
add
push
jp
adc
add
add
add
sub
inc
add
add
add
add
add
add
or
add
dec
add
add
and
add
add
push
add
sub
pop
add
add
add
add
add
dec
add
sub
jae
add
push
or
add
add
dec
add
sub
add
sub
push
sub
sub
and
add
add
push
add
sub
add
push
jge
add
add
add
add
dec
add
sub
clc
add
push
jae
add
or
test
push
sub
xor
add
add
pusha
add
adc
cmp
or
add
add
add
add
add
add
add
mov
add
fiadd
add
add
add
add
add
add
add
add
mov
add
mov
add
add
and
add
add
push
add
sub
add
outs
add
add
or
sub
push
sub
cmp
add
add
add
add
dec
add
sub
add
or
add
dec
add
sub
jo
or
add
add
add
push
mov
xchg
add
or
add
push
jp
add
push
add
cmp
(bad)
dec
sbb
pushf
and
add
add
push
add
cmp
(bad)
jmp
mov
add
push
add
cmp
(bad)
(bad)
dec
pop
or
dec
and
add
add
push
add
cmp
(bad)
(bad)
inc
outs
add
add
or
add
add
dec
add
cmp
(bad)
(bad)
inc
add
add
sub
add
and
add
add
push
add
cmp
(bad)
(bad)
jmp
xor
add
add
dec
add
cmp
(bad)
(bad)
inc
sub
push
add
add
push
add
cmp
(bad)
(bad)
inc
cmp
add
or
add
add
dec
add
cmp
(bad)
(bad)
inc
outs
sgdtd
push
sub
add
or
add
jae
add
push
jp
add
xor
push
add
add
add
adc
add
add
push
add
inc
add
push
sub
add
xor
add
add
adc
sbb
inc
add
add
add
add
imul
add
daa
add
add
and
add
add
push
add
sub
jb
dec
add
or
add
jae
add
or
add
add
dec
add
sub
sub
add
push
jae
add
or
add
add
dec
add
sub
sub
push
sub
sub
and
add
dec
add
sub
add
add
dec
add
cmp
(bad)
inc
add
inc
add
push
sub
add
adc
add
iret
add
add
cmp
add
add
or
add
add
add
add
add
add
add
add
add
mov
add
retf
add
add
add
add
add
add
out
add
add
add
add
add
pop
add
add
add
mov
add
xchg
add
mov
add
push
add
add
add
sub
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
sbb
add
jbe
add
or
add
add
add
add
add
fld
add
test
add
jo
add
add
aaa
add
add
push
add
cmp
(bad)
(bad)
jmp
and
add
dec
add
cmp
(bad)
(bad)
jmp
and
add
add
push
add
cmp
(bad)
(bad)
inc
pop
movs
sbb
add
outs
js
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
jle
add
add
sub
add
adc
sub
add
sub
and
push
add
cmp
jne
add
add
push
add
add
add
add
dec
add
cmp
xor
add
dec
add
cmp
and
push
add
cmp
(bad)
jmp
and
push
add
cmp
(bad)
inc
pop
movs
js
add
outs
jo
add
and
add
add
push
add
cmp
(bad)
inc
pop
je
add
add
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jmp
and
add
add
push
add
cmp
(bad)
inc
pop
movs
pop
add
add
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jmp
and
add
add
push
add
cmp
std
(bad)
jmp
and
add
add
push
add
cmp
std
(bad)
jmp
and
add
add
push
add
cmp
std
(bad)
inc
pop
movs
pop
add
add
add
push
and
add
add
push
add
cmp
std
(bad)
jmp
and
add
add
push
add
cmp
movs
jns
add
outs
ja
add
and
add
add
push
add
cmp
and
add
add
push
add
cmp
sbb
adc
add
data16
(bad)
call
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
fadd
add
mov
add
fdivr
(bad)
dec
add
pop
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
xor
add
dec
add
cmp
add
and
add
sub
add
and
add
add
push
add
cmp
std
(bad)
inc
pop
movs
jne
add
outs
je
add
and
add
dec
add
cmp
std
(bad)
(bad)
cmp
add
push
add
cmp
cld
(bad)
jmp
and
add
add
push
add
cmp
cld
(bad)
inc
jle
add
add
sub
add
push
outs
push
add
and
add
dec
add
cmp
pop
movs
add
add
add
push
and
add
add
push
add
cmp
jne
add
add
and
add
add
push
add
cmp
pop
movs
ja
add
outs
outs
add
push
and
add
add
push
add
cmp
(bad)
jmp
and
add
add
push
add
cmp
(bad)
inc
pop
movs
jb
add
outs
outs
add
push
and
add
add
push
add
cmp
(bad)
jmp
and
add
add
push
add
cmp
cld
(bad)
inc
add
lock
push
and
add
add
push
add
cmp
cld
(bad)
inc
pop
movs
je
add
outs
jae
add
and
push
add
cmp
cld
(bad)
inc
outs
xor
add
or
add
add
dec
add
cmp
sti
(bad)
jmp
and
add
add
push
add
cmp
sti
(bad)
inc
sub
and
add
add
push
add
cmp
sti
(bad)
inc
pop
movs
jbe
add
outs
ins
add
push
and
add
add
push
add
cmp
jne
add
add
inc
add
add
push
add
add
push
add
cmp
and
add
add
push
add
cmp
and
add
add
push
add
cmp
and
add
add
push
add
cmp
inc
add
inc
add
push
and
add
add
push
add
cmp
(bad)
jmp
and
push
add
cmp
(bad)
inc
cmp
(bad)
jmp
and
add
dec
add
cmp
sti
(bad)
inc
add
and
add
sub
add
pop
sub
push
sub
sub
and
add
add
push
add
cmp
sti
(bad)
inc
pop
movs
inc
add
add
add
push
and
add
add
push
add
cmp
cli
(bad)
inc
pop
movs
dec
add
add
add
push
and
push
add
cmp
cli
(bad)
jmp
and
add
add
push
add
cmp
cli
(bad)
jmp
and
add
add
push
add
cmp
cli
(bad)
inc
pop
movs
adc
add
outs
jns
add
and
add
dec
add
cmp
cmp
sti
(bad)
jmp
add
add
dec
add
cmp
and
add
dec
add
cmp
add
and
add
sub
add
and
add
add
push
add
cmp
(bad)
inc
sub
and
add
add
push
add
cmp
(bad)
inc
outs
push
add
add
push
add
cmp
cli
(bad)
inc
add
inc
add
push
sub
adc
add
cli
add
add
add
sub
dec
add
add
add
add
sbb
add
mov
add
popa
add
add
add
add
add
add
add
xor
add
dec
add
add
and
add
add
push
add
sub
push
or
or
add
dec
add
sub
add
outs
das
add
or
and
add
add
push
add
sub
add
add
push
add
sub
add
add
push
add
sub
add
outs
and
add
add
push
add
cmp
(bad)
inc
pop
pop
or
add
push
add
cmp
inc
add
add
push
sub
and
add
add
push
add
cmp
(bad)
inc
push
and
add
add
push
add
cmp
(bad)
inc
add
add
add
xor
add
aas
ins
(bad)
(bad)
call
sub
push
sub
sub
and
add
dec
add
cmp
adc
push
sub
add
xor
pop
add
add
add
sub
inc
or
add
mov
add
daa
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
dec
add
sub
jo
or
add
jae
add
push
jp
add
add
dec
add
sub
push
cmp
add
add
add
add
dec
add
sub
add
mov
add
add
add
add
dec
add
cmp
(bad)
inc
jnp
add
add
and
add
add
push
add
cmp
(bad)
jmp
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
jmp
inc
and
add
add
push
add
cmp
(bad)
(bad)
inc
outs
dec
add
push
push
outs
and
add
adc
add
add
push
add
cmp
add
fild
add
or
or
add
dec
add
cmp
(bad)
(bad)
push
dec
add
or
add
add
add
add
sub
add
sub
cmp
add
jp
add
add
dec
add
cmp
(bad)
(bad)
inc
push
add
sub
add
add
sub
add
push
outs
pop
add
push
and
push
add
cmp
push
sub
add
sub
sbb
push
add
add
add
adc
add
add
sub
add
or
add
add
sub
pop
sub
pop
jne
add
add
add
sub
add
jle
add
add
cli
add
add
add
cs
jle
add
add
jle
add
add
inc
add
add
add
sub
adc
jle
add
add
add
pushf
add
push
outs
imul
push
sub
outs
dec
add
push
add
pop
add
or
outs
pop
add
push
add
sub
add
push
or
outs
jl
add
adc
xor
add
jg
add
or
add
push
sub
xchg
add
sub
add
add
add
test
add
adc
sub
inc
add
push
adc
cmp
add
sub
add
or
in
add
add
xchg
add
push
fadd
outs
pop
add
push
add
add
push
add
and
add
sub
add
adc
add
add
adc
add
add
xor
add
add
jle
add
add
sub
add
push
lea
add
add
jle
add
add
push
push
sub
add
sub
add
sub
adc
pop
add
add
adc
and
inc
pop
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
sub
add
add
push
and
add
add
push
add
sub
add
add
push
add
sub
add
sub
sub
and
add
add
push
add
sub
add
add
dec
add
sub
add
add
push
sub
inc
add
push
and
add
add
push
add
cmp
inc
jle
add
add
sub
add
push
xor
and
add
add
push
add
cmp
(bad)
inc
outs
pop
add
push
sub
add
sbb
add
ins
add
add
add
add
add
push
jle
add
add
sub
sub
jle
add
add
sub
mov
add
or
adc
sub
add
outs
add
add
outs
pop
add
push
add
adc
sub
add
sub
add
pop
outs
cmp
add
sub
jne
add
add
sub
jle
add
add
sub
add
add
push
sub
adc
add
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
or
jae
add
or
add
add
jnp
add
add
add
adc
add
or
add
add
adc
sub
inc
or
add
sbb
add
jp
add
stos
add
add
add
mov
add
add
add
add
add
add
or
add
dec
add
sub
cmp
add
add
dec
add
sub
add
js
add
push
add
add
add
add
add
dec
add
add
add
cmp
add
and
add
add
push
add
sub
add
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
call
sub
add
push
add
cmp
(bad)
call
sub
push
add
add
push
add
cmp
(bad)
call
sub
add
add
dec
add
cmp
(bad)
(bad)
call
sub
add
add
dec
add
cmp
(bad)
(bad)
call
sub
add
add
dec
add
cmp
(bad)
(bad)
call
sub
dec
add
or
add
add
add
add
xor
add
sub
add
push
jp
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
add
add
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
add
das
adc
dec
add
or
add
jae
add
or
add
add
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
jb
add
add
add
sub
dec
add
add
add
add
dec
add
add
add
or
add
add
add
add
dec
add
sub
add
and
and
add
add
push
add
sub
add
daa
cs
add
add
push
add
sub
jo
or
add
jae
add
or
sub
push
sub
sub
and
add
add
push
add
sub
add
add
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
add
add
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
add
add
add
adc
add
add
add
add
add
sub
add
or
sub
add
or
add
jae
add
or
add
add
add
pop
and
add
add
pop
jge
add
add
pop
and
add
add
sbb
add
add
push
jge
add
add
pop
jae
add
or
add
add
jnp
add
add
outs
imul
or
push
jge
add
add
add
add
xor
add
add
adc
sbb
inc
add
add
add
add
jno
add
or
add
add
add
and
add
dec
add
sub
sub
add
add
dec
add
sub
add
add
add
ins
add
or
jnp
add
add
inc
and
add
add
push
add
sub
add
add
pop
jge
add
add
sub
push
sub
sub
and
add
add
push
add
sub
add
outs
imul
or
add
add
dec
add
cmp
(bad)
inc
jnp
add
add
jnp
add
add
outs
jo
add
sub
adc
add
pop
add
add
add
add
push
add
push
or
and
add
pop
jge
add
add
sub
adc
add
adc
add
add
add
add
add
add
jnp
add
add
outs
add
or
add
adc
add
or
add
add
add
add
add
add
push
add
or
adc
add
adc
add
add
add
add
popa
add
push
add
add
add
pop
add
or
add
adc
add
and
add
add
add
add
sub
add
add
sub
add
add
add
add
addr16
add
or
add
outs
pop
add
or
adc
add
or
add
add
add
add
or
add
push
sub
add
adc
add
and
add
add
add
add
sub
add
add
sub
add
add
add
add
imul
sub
add
push
outs
pop
add
or
adc
add
or
add
add
add
add
or
add
push
sub
add
adc
add
fadd
add
add
add
sub
inc
pop
add
add
add
add
add
or
add
cmps
add
add
add
add
add
add
push
add
add
push
add
sub
add
add
add
nop
add
add
add
add
dec
add
sub
add
das
and
push
add
sub
add
jnp
add
add
pop
add
or
sub
push
sub
sub
and
add
add
push
add
sub
add
outs
pop
add
or
add
add
dec
add
cmp
(bad)
inc
sbb
add
push
and
add
add
push
add
cmp
(bad)
inc
jnp
add
add
jnp
add
add
pop
add
or
add
add
dec
add
cmp
(bad)
inc
jnp
add
add
cmp
add
or
adc
add
or
add
adc
add
push
add
push
sub
add
sub
add
adc
add
mov
add
adc
and
inc
pop
add
add
add
add
add
or
add
jnp
add
add
add
add
add
add
add
push
add
add
push
add
sub
sub
add
add
dec
add
sub
push
inc
add
add
and
add
inc
add
add
add
push
add
sub
add
sub
sub
and
add
add
push
add
sub
add
and
add
add
push
add
sub
add
dec
add
cmp
inc
sub
add
and
add
add
push
add
cmp
(bad)
jmp
jb
push
add
or
add
add
xchg
add
or
add
push
jp
add
xor
add
add
add
add
adc
push
add
pop
add
push
add
add
add
xor
sub
add
xor
add
add
adc
sbb
inc
add
add
add
add
push
add
add
add
xor
and
add
dec
add
sub
push
sub
add
add
dec
add
sub
push
pop
or
add
add
loop
(bad)
jmp
add
add
dec
add
sub
add
sub
sub
and
add
add
push
add
sub
add
add
push
add
sub
add
or
add
add
xchg
add
or
add
push
jp
adc
add
xchg
add
add
add
sub
inc
add
add
add
add
push
add
add
add
xor
add
add
add
add
dec
add
sub
pop
or
and
add
add
push
add
sub
push
inc
add
add
in
(bad)
jmp
add
add
dec
add
sub
add
sub
sub
and
add
add
push
add
sub
add
add
push
add
sub
fst
jo
or
add
add
xchg
add
or
add
push
jp
add
xor
repz
add
add
cmp
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fld
add
push
add
add
add
sldt
add
add
add
add
xor
add
pop
add
add
add
add
add
and
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
and
add
dec
or
cmp
call
pop
inc
add
add
popf
add
add
add
push
add
add
adc
push
or
cmp
(bad)
(bad)
call
or
and
add
dec
or
cmp
(bad)
(bad)
inc
push
jge
add
add
adc
add
dec
or
cmp
(bad)
(bad)
(bad)
cmp
sbb
add
dec
or
cmp
(bad)
(bad)
(bad)
cmp
add
add
sbb
add
dec
or
cmp
(bad)
(bad)
inc
sbb
add
add
pop
add
add
push
or
cmp
(bad)
(bad)
inc
pop
pop
or
and
add
dec
or
cmp
(bad)
(bad)
jmp
sub
add
add
dec
or
cmp
adc
jo
or
add
jae
add
push
jp
add
push
or
cmp
sub
add
dec
or
cmp
pop
pop
or
and
add
dec
or
cmp
(bad)
call
or
add
push
or
cmp
(bad)
jmp
push
and
add
add
push
or
cmp
(bad)
inc
add
add
add
add
add
add
add
dec
or
cmp
(bad)
(bad)
inc
jnp
add
add
cs
and
add
dec
or
cmp
(bad)
(bad)
inc
jnp
add
add
aaa
push
add
or
add
outs
pop
add
or
or
add
dec
or
cmp
std
(bad)
inc
sub
add
and
add
add
push
or
cmp
std
(bad)
call
add
push
and
add
add
push
or
cmp
std
(bad)
dec
pop
pop
or
add
push
or
cmp
std
(bad)
inc
jnp
add
add
pop
or
and
add
dec
or
cmp
jnp
add
add
cmp
jo
or
add
outs
pop
add
or
or
add
dec
or
cmp
mov
sbb
add
dec
or
cmp
(bad)
inc
jnp
add
add
mov
pop
add
add
push
or
cmp
(bad)
call
add
add
add
push
or
cmp
(bad)
push
push
add
or
add
adc
sub
xchg
add
or
add
push
jp
or
add
dec
or
cmp
std
(bad)
call
push
pop
or
add
add
push
(bad)
(bad)
jmp
or
add
dec
or
cmp
std
(bad)
dec
push
xor
add
sub
sub
and
push
or
cmp
cld
(bad)
inc
sub
add
adc
add
push
or
cmp
cld
(bad)
call
or
add
add
dec
or
cmp
cld
(bad)
jmp
mov
add
push
or
cmp
test
add
and
add
add
push
or
cmp
jge
add
add
adc
add
dec
or
cmp
add
push
add
push
sub
add
adc
sbb
push
or
cmp
(bad)
jmp
and
add
add
push
or
cmp
inc
jnp
add
add
outs
outs
add
or
add
bound
add
inc
jns
(bad)
jmp
add
add
dec
or
cmp
cld
(bad)
jmp
and
add
add
push
or
cmp
cld
(bad)
jmp
jb
push
add
or
add
adc
add
xchg
add
or
add
push
jp
adc
add
add
add
add
sub
inc
or
add
mov
add
add
add
add
add
add
add
add
add
lahf
add
add
add
add
add
add
add
add
or
add
dec
add
sub
add
inc
(bad)
add
add
add
add
dec
add
sub
and
push
add
sub
add
add
push
add
sub
add
dec
add
cmp
inc
pop
pop
or
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
inc
add
add
add
push
and
add
dec
add
cmp
(bad)
inc
jnp
add
add
jnp
add
add
pop
add
or
add
add
dec
add
cmp
(bad)
jmp
enter
add
dec
add
cmp
(bad)
jmp
xor
or
add
dec
add
cmp
(bad)
inc
jnp
add
add
push
add
add
mov
add
outs
pop
add
or
or
add
dec
add
cmp
(bad)
(bad)
inc
add
add
add
push
(bad)
(bad)
jmp
add
adc
add
bound
add
push
add
sub
or
add
add
add
add
or
add
xchg
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
push
add
add
add
out
add
add
and
add
add
push
add
sub
add
adc
add
dec
add
sub
or
add
or
add
or
add
or
add
or
add
or
add
or
add
push
add
add
add
add
add
add
add
add
adc
add
dec
add
cmp
(bad)
inc
or
add
add
dec
add
cmp
sbb
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
xor
and
add
add
push
add
cmp
(bad)
(bad)
(bad)
jle
add
add
add
add
add
add
or
and
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
inc
mov
or
add
dec
add
cmp
(bad)
(bad)
push
push
add
or
add
add
add
add
add
add
add
xor
add
outs
add
add
sub
add
push
jp
sldt
add
push
add
cmp
jnp
add
add
sub
add
add
dec
add
cmp
jnp
add
add
and
add
or
or
add
dec
add
cmp
(bad)
inc
sbb
outs
(bad)
(bad)
jmp
add
push
add
cmp
(bad)
call
or
add
add
dec
add
cmp
(bad)
inc
sbb
push
and
add
add
push
add
cmp
(bad)
(bad)
inc
sub
add
and
add
add
push
add
cmp
(bad)
inc
jnp
add
add
xor
and
add
add
push
add
cmp
jnp
add
add
sub
pop
add
or
sub
push
sub
cmp
(bad)
jmp
or
push
add
cmp
std
(bad)
jmp
fwait
and
add
add
push
add
cmp
std
(bad)
inc
sub
add
sbb
push
and
add
add
push
add
cmp
or
add
add
dec
add
cmp
pop
jge
add
add
add
adc
add
adc
add
add
add
add
add
push
add
add
add
outs
pop
add
or
adc
add
push
add
add
add
adc
jle
add
add
or
add
push
sub
add
xor
push
add
add
add
adc
jle
add
add
or
add
push
sub
add
xor
or
add
add
add
add
pop
or
add
push
sub
add
xor
adc
add
add
add
add
add
add
add
out
add
sbb
push
sub
xor
push
add
add
add
adc
add
fiadd
add
sbb
add
push
sub
add
xor
push
add
add
add
adc
add
fld
add
sbb
add
push
sub
add
xor
push
add
add
add
adc
add
fiadd
add
sbb
add
push
sub
add
xor
push
add
add
add
adc
add
fild
add
sbb
add
push
sub
add
xor
push
add
add
add
adc
add
loopne
add
sbb
add
push
sub
add
xor
push
add
add
add
adc
add
loope
add
sbb
add
push
sub
add
xor
push
add
add
add
adc
add
xlat
add
push
push
sub
add
sub
add
xor
push
add
add
add
adc
add
fild
add
sbb
add
push
sub
add
xor
push
add
add
add
adc
add
fadd
add
sbb
add
push
sub
add
xor
push
add
add
add
adc
add
fadd
add
sbb
add
push
sub
add
xor
push
add
add
add
adc
add
loop
add
sbb
add
push
sub
add
xor
push
add
add
add
adc
add
jecxz
add
sbb
add
push
sub
add
xor
push
add
add
add
adc
add
in
add
sbb
add
push
sub
add
xor
sldt
add
add
adc
add
aam
add
pop
push
sub
add
sub
adc
add
mov
add
add
add
sub
dec
add
add
add
add
add
add
and
add
add
add
add
dec
add
sub
add
add
add
outs
pop
add
or
add
add
dec
add
sub
add
sub
add
and
add
add
push
add
sub
add
sbb
jo
or
add
outs
pop
add
or
sub
push
sub
sub
and
add
add
push
add
sub
add
push
push
add
or
add
outs
pop
add
or
add
adc
add
js
add
add
add
sub
dec
add
add
add
add
add
add
daa
add
add
and
add
add
push
add
sub
jb
push
add
or
add
jae
add
push
jp
add
add
dec
add
sub
add
and
add
add
push
add
sub
add
sub
push
sub
sub
and
add
add
push
add
sub
add
outs
pop
add
or
adc
add
or
add
add
add
add
sub
add
sub
xor
add
add
add
add
adc
sub
add
pop
cs
add
pop
add
push
sub
xor
add
add
sbb
jae
add
or
push
push
push
sbb
or
push
pop
sbb
or
push
sbb
or
push
sbb
or
push
sbb
or
push
sbb
or
push
sbb
sub
push
sbb
add
push
pop
push
sbb
add
or
pop
pop
sbb
add
or
pop
sbb
or
pop
sbb
or
pop
sbb
sub
pop
sbb
sub
pop
sbb
sub
pop
sbb
add
push
sbb
sbb
add
or
sbb
sbb
add
or
sbb
sbb
or
sbb
sbb
or
sbb
sbb
add
or
sbb
sbb
add
or
sbb
or
sbb
add
push
sbb
sbb
or
sbb
sbb
or
sbb
pop
sub
sbb
pop
sub
sbb
sbb
or
sbb
sbb
or
sbb
or
sbb
add
push
sbb
sbb
or
sbb
pop
sub
sbb
sbb
add
or
sbb
sbb
add
or
sbb
sbb
add
or
sbb
sbb
add
or
sbb
or
sbb
add
push
sbb
sbb
or
sbb
sbb
add
or
sbb
sbb
or
sbb
sbb
or
sbb
sbb
add
or
sbb
sbb
add
or
sbb
or
sbb
add
push
and
add
add
add
or
add
sub
add
sub
add
or
add
add
add
add
or
add
sub
add
add
add
add
cli
add
add
add
add
push
add
cld
add
add
push
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
add
add
push
sub
xor
add
adc
sub
or
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
and
add
add
push
add
sub
adc
sub
mov
add
add
dec
add
sub
add
sub
and
add
add
push
add
sub
add
push
sub
add
or
and
push
add
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
inc
(bad)
sub
xor
add
sub
and
add
add
push
add
cmp
(bad)
push
push
add
or
add
(bad)
sub
add
test
add
outs
pop
add
or
cdq
add
or
add
push
jp
add
add
dec
add
cmp
push
sub
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
jle
add
sub
push
add
xor
add
sub
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
add
add
add
dec
add
add
add
add
add
add
inc
add
add
sub
add
or
add
jge
add
add
adc
add
add
jnp
add
add
pop
add
add
add
imul
xchg
add
push
add
add
add
and
add
or
pop
jge
add
add
add
add
adc
add
add
add
add
add
add
inc
add
push
jge
add
add
add
xor
add
add
add
add
add
sbb
lea
add
jle
add
add
jnp
add
add
add
add
add
mov
push
jge
add
add
add
xor
adc
add
add
add
add
add
add
add
add
add
test
add
sub
xor
lea
add
sub
add
adc
add
pop
add
add
add
adc
jae
add
or
add
xor
add
add
add
add
add
jle
add
add
sub
add
push
push
inc
sub
sub
xor
add
add
add
add
adc
sub
add
add
or
inc
sub
sub
adc
add
adc
add
add
add
add
add
add
sub
pop
sub
sub
add
sub
add
add
xor
add
add
add
add
add
adc
push
sub
add
adc
or
ret
add
add
sub
dec
add
add
add
add
pushf
add
add
add
mov
add
out
add
sbb
add
add
add
add
add
add
and
add
add
push
or
sub
jae
add
or
and
add
add
push
or
sub
add
add
dec
or
sub
add
add
push
or
sub
add
or
add
sub
jb
push
add
or
add
jb
push
add
or
add
jae
add
or
add
add
dec
or
cmp
(bad)
push
push
add
or
add
jae
add
or
or
add
dec
or
cmp
inc
sub
add
dec
or
cmp
(bad)
(bad)
call
add
or
add
dec
or
cmp
(bad)
inc
sub
add
push
or
cmp
(bad)
inc
outs
mov
add
cmp
(bad)
call
sub
push
sub
cmp
jmp
add
add
dec
or
cmp
(bad)
(bad)
call
push
sub
add
sub
adc
sub
add
or
adc
adc
sub
add
sub
adc
sub
add
or
adc
adc
sub
add
sub
add
or
pop
adc
sub
add
or
or
or
outs
mov
add
or
or
xor
or
or
outs
mov
add
or
jle
add
add
push
sub
jle
add
add
add
add
or
pop
sub
or
add
adc
add
add
lea
add
outs
test
add
adc
pop
adc
add
xor
push
sub
add
xor
jno
add
jo
add
add
add
or
add
jae
add
or
mov
add
or
outs
xchg
add
or
add
xor
add
xchg
add
or
add
outs
xchg
add
or
or
add
add
or
add
or
nop
add
or
pop
outs
xchg
add
or
add
cmp
add
sub
add
or
in
add
add
xchg
add
push
fadd
sub
add
add
add
add
and
cmp
add
add
xor
add
add
jno
add
add
add
or
add
jae
add
or
sub
xchg
add
or
sub
pop
outs
xchg
add
or
add
outs
mov
add
pop
outs
cmp
add
sub
sub
jle
add
add
sub
sub
adc
add
add
add
cmp
sldt
add
sbb
add
inc
add
add
add
jae
add
or
add
add
or
sbb
add
cwde
add
or
push
pop
outs
xchg
add
sub
test
add
adc
sub
(bad)
push
adc
(bad)
push
sub
add
outs
or
add
fadd
sub
add
adc
add
add
push
add
add
adc
add
add
add
jae
add
or
jae
add
or
add
add
or
pop
push
sub
add
sub
sub
xor
add
adc
dec
dec
add
add
add
add
and
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
test
add
sbb
add
lds
add
add
add
add
add
sldt
add
push
add
sub
add
add
push
add
sub
add
add
push
add
sub
add
add
add
dec
add
sub
add
or
or
add
dec
add
cmp
push
add
or
or
add
dec
add
cmp
(bad)
(bad)
cmp
push
add
add
push
add
cmp
(bad)
inc
add
add
or
and
add
add
push
add
cmp
(bad)
(bad)
jmp
ins
and
add
add
push
add
cmp
(bad)
(bad)
dec
add
outs
sahf
add
or
add
or
add
add
dec
add
cmp
(bad)
dec
pop
pop
or
add
push
add
cmp
(bad)
(bad)
inc
add
add
or
pop
xor
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
pop
add
sub
add
sub
or
add
dec
add
cmp
(bad)
(bad)
dec
add
lahf
add
or
cwde
and
push
add
cmp
pop
pop
or
pop
add
add
push
add
cmp
add
pop
outs
lea
add
outs
popf
add
or
sub
push
sub
sub
and
push
add
cmp
(bad)
inc
push
outs
mov
add
xor
sub
add
adc
add
add
add
sub
dec
add
add
add
add
add
add
add
add
and
add
add
push
add
sub
add
add
dec
add
sub
jb
push
add
or
add
jae
add
or
add
add
dec
add
sub
add
lea
add
sbb
pop
sub
push
sub
sub
and
add
add
push
add
sub
bound
add
push
jae
add
or
add
adc
add
add
add
sub
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fld
add
mov
add
add
add
add
add
add
or
push
add
sub
add
and
add
add
push
add
sub
add
add
push
add
sub
add
add
add
or
jno
or
add
dec
add
cmp
(bad)
inc
add
outs
lea
add
add
outs
lea
add
outs
movs
add
or
mov
sub
push
sub
sub
and
push
add
cmp
(bad)
inc
adc
add
and
add
add
push
add
cmp
(bad)
(bad)
call
sub
pop
add
add
push
add
cmp
(bad)
(bad)
inc
sub
add
dec
add
cmp
(bad)
(bad)
jmp
mov
and
add
add
push
add
cmp
(bad)
(bad)
call
sub
add
add
dec
add
cmp
(bad)
(bad)
jmp
inc
and
add
add
push
add
cmp
(bad)
(bad)
call
or
add
add
dec
add
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
add
add
dec
add
cmp
pop
pop
or
push
add
add
push
add
cmp
outs
mov
add
aas
daa
(bad)
(bad)
call
sub
xor
or
add
add
add
add
add
pop
add
sub
add
add
xor
add
add
add
add
jae
add
or
push
add
add
or
add
add
or
inc
stos
add
or
add
or
or
add
sub
adc
add
or
add
add
add
add
sub
add
sub
adc
add
mov
add
add
sub
dec
add
add
add
add
push
add
add
add
pop
add
add
add
add
add
add
add
push
add
sub
add
outs
lea
add
sub
add
add
dec
add
sub
adc
(bad)
adc
and
add
add
push
add
sub
add
add
dec
add
sub
add
pop
xor
and
add
add
push
add
sub
add
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
inc
sub
push
add
or
add
jle
add
add
pop
add
sbb
add
add
add
or
cdq
add
or
add
or
add
xor
add
add
jns
add
add
push
add
or
add
sub
add
push
add
add
or
add
or
add
add
or
sbb
outs
xchg
add
or
add
add
outs
mov
add
sub
test
add
or
add
or
sub
jle
add
add
sub
push
sub
add
adc
add
add
add
dec
add
add
add
adc
add
jge
add
jp
add
sub
dec
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
sub
add
push
add
or
add
sub
add
push
and
add
add
push
add
sub
add
add
sbb
add
push
add
sub
add
sub
sub
push
sub
sub
and
add
add
push
add
sub
add
or
outs
mov
add
sub
add
adc
add
sub
add
add
add
add
push
add
or
add
sub
add
push
jle
add
add
add
add
sub
push
lea
add
add
jmp
add
sub
xor
add
add
adc
and
inc
pop
add
add
add
dec
add
add
add
movs
add
add
add
add
add
or
add
add
push
add
add
push
add
sub
add
push
add
or
add
sub
add
push
and
add
add
push
add
sub
add
dec
add
sub
add
sub
sub
and
add
add
push
add
sub
add
aaa
add
or
outs
cmp
add
sub
and
add
dec
add
cmp
(bad)
inc
outs
cmp
add
sub
and
push
add
cmp
inc
jle
add
add
sbb
add
sub
aam
add
sub
and
add
add
push
add
cmp
(bad)
(bad)
call
sub
sub
adc
push
add
add
adc
movs
add
add
or
add
add
add
add
add
add
fiadd
add
mov
add
sbb
add
imul
add
add
add
add
add
add
add
add
push
add
add
add
add
add
fild
add
mov
add
add
add
add
add
add
add
add
add
stc
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
das
add
add
add
add
and
add
add
push
or
cmp
inc
sub
add
push
sub
and
add
add
push
or
cmp
(bad)
(bad)
inc
jb
push
add
or
add
sub
add
push
and
push
or
cmp
(bad)
(bad)
call
adc
and
add
add
push
or
cmp
(bad)
(bad)
(bad)
cmp
add
and
add
add
push
or
cmp
(bad)
(bad)
push
add
or
and
add
add
push
or
cmp
(bad)
(bad)
call
or
and
add
dec
or
cmp
(bad)
(bad)
push
push
add
or
add
add
pop
add
jae
add
or
push
add
add
push
or
cmp
adc
mov
pushf
add
add
sbb
add
dec
or
cmp
outs
cmp
add
sub
and
add
dec
or
cmp
(bad)
inc
jle
add
add
push
add
add
add
adc
sub
add
push
cmp
add
and
add
add
push
or
cmp
(bad)
call
adc
add
push
or
cmp
(bad)
inc
outs
cmp
add
adc
and
add
add
push
or
cmp
(bad)
call
or
add
add
dec
or
cmp
(bad)
call
push
outs
dec
add
or
pop
and
add
add
push
or
cmp
or
or
add
add
push
or
cmp
std
(bad)
(bad)
cmp
(bad)
(bad)
jmp
pop
add
add
push
or
cmp
std
(bad)
call
pop
outs
lods
add
or
xor
or
add
dec
or
cmp
std
(bad)
call
adc
add
push
or
cmp
adc
push
outs
scas
add
or
add
or
add
or
and
push
or
cmp
dec
and
add
dec
or
cmp
jle
add
add
push
add
add
add
sub
add
push
cmp
add
add
adc
add
dec
or
cmp
(bad)
call
or
pop
adc
and
add
add
push
or
cmp
call
add
add
or
add
dec
or
cmp
std
(bad)
push
push
add
or
add
add
add
cdq
add
or
add
or
sbb
add
dec
or
cmp
std
(bad)
(bad)
cmp
add
and
add
add
push
or
cmp
cld
(bad)
call
or
sbb
add
dec
or
cmp
cld
(bad)
jmp
push
and
push
or
cmp
cld
(bad)
inc
push
outs
jnp
add
and
add
add
push
or
cmp
cld
(bad)
inc
outs
cmp
add
push
call
dec
or
cmp
sub
add
or
add
or
pop
add
add
push
or
cmp
mov
add
push
or
cmp
jb
push
add
or
add
sub
add
push
and
add
add
push
or
cmp
(bad)
dec
sub
and
add
or
or
add
dec
or
cmp
(bad)
dec
cmp
adc
push
or
cmp
(bad)
inc
outs
cmp
add
cmp
sub
push
sub
sub
and
add
add
push
or
cmp
cld
(bad)
inc
je
add
add
sub
add
push
outs
dec
add
or
and
add
dec
or
cmp
sti
(bad)
call
and
add
sub
add
or
outs
cmp
add
cmp
std
(bad)
jmp
sbb
add
dec
or
cmp
sti
(bad)
call
sbb
add
sub
add
or
lea
add
add
or
or
or
add
push
adc
adc
add
dec
or
cmp
pop
lea
add
add
or
or
push
mov
add
or
add
or
sub
xor
add
add
add
push
add
add
push
add
add
sub
add
push
add
push
add
or
add
jb
push
add
or
add
jb
inc
add
or
add
jb
push
add
or
add
pop
sub
add
push
or
add
add
les
jo
or
add
push
jb
push
add
or
add
sub
push
sub
add
xor
add
add
add
push
add
add
push
add
add
sub
add
push
add
add
add
ds
add
or
add
add
ds
add
or
add
sub
mov
jo
or
add
jb
inc
add
or
add
jb
push
add
or
add
pop
sub
add
push
or
add
add
inc
push
add
or
add
push
jb
push
add
or
add
sub
push
sub
adc
add
push
add
adc
popa
dec
add
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
test
add
xchg
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
adc
push
add
sub
add
add
push
add
sub
add
dec
add
cmp
(bad)
inc
add
and
add
or
push
add
or
add
outs
pop
add
or
and
add
dec
add
cmp
(bad)
inc
pop
pop
cmp
add
and
add
add
push
add
cmp
(bad)
(bad)
jmp
sbb
add
push
add
cmp
(bad)
(bad)
jmp
and
add
add
push
add
cmp
(bad)
(bad)
inc
pop
pop
ds
add
and
add
add
push
add
cmp
jb
push
add
or
add
outs
pop
add
or
sldt
add
push
add
cmp
(bad)
(bad)
inc
push
pop
inc
push
add
add
add
pop
add
add
add
add
(bad)
jmp
add
and
add
dec
add
cmp
jb
push
add
or
add
outs
pop
add
or
adc
add
dec
add
cmp
jb
push
add
or
add
outs
pop
add
or
adc
add
dec
add
cmp
(bad)
jmp
and
push
add
cmp
(bad)
inc
jb
push
add
or
add
outs
pop
add
or
adc
add
dec
add
cmp
(bad)
inc
jb
push
add
or
add
outs
pop
add
or
push
add
add
push
add
cmp
(bad)
(bad)
jmp
and
add
dec
add
cmp
(bad)
(bad)
inc
add
add
or
or
add
dec
add
cmp
(bad)
(bad)
jmp
and
add
add
push
add
cmp
std
(bad)
jmp
pop
sub
push
sub
cmp
jmp
push
add
add
push
add
cmp
std
(bad)
jmp
and
add
add
push
add
cmp
std
(bad)
inc
jb
push
add
or
add
outs
pop
add
or
or
push
add
cmp
pop
and
cmp
(bad)
jmp
add
add
dec
add
cmp
add
add
add
sub
xor
lock
add
xor
or
add
add
add
add
add
add
xchg
add
add
add
mov
add
inc
add
add
add
sub
add
cmp
add
or
add
add
or
add
dec
add
sub
add
add
add
push
add
sub
add
or
or
add
dec
add
sub
add
add
push
add
sub
add
add
dec
add
sub
add
add
dec
add
cmp
(bad)
inc
pop
pop
or
add
add
dec
add
cmp
(bad)
call
or
pop
add
add
push
add
cmp
(bad)
inc
add
add
or
push
and
push
add
cmp
(bad)
(bad)
inc
add
outs
pushf
add
or
lods
add
push
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
pop
add
or
adc
add
or
add
add
add
add
and
sub
add
sbb
push
add
add
jl
add
add
add
add
or
add
popa
add
or
pop
adc
sub
add
sub
add
push
or
add
add
lods
add
push
jle
add
add
sub
add
push
or
clts
sub
jle
add
add
sub
pop
sub
add
add
add
add
and
pop
cmp
sldt
add
adc
add
fild
add
add
add
sub
inc
or
add
sbb
add
jge
add
nop
add
add
add
cmps
add
add
add
add
or
add
sub
add
add
pop
add
add
push
add
sub
add
xor
ins
and
add
add
push
add
sub
pop
and
add
add
push
add
sub
sub
sub
push
sub
sub
and
add
add
push
add
sub
and
add
add
push
add
cmp
inc
pop
data16
and
add
add
push
add
cmp
(bad)
inc
pop
inc
xor
and
add
dec
add
cmp
(bad)
inc
pop
popa
xor
and
add
add
push
add
cmp
(bad)
inc
pop
popa
pop
pop
or
and
push
add
cmp
pop
inc
pop
pop
or
adc
add
adc
add
add
add
add
or
push
add
xor
sub
pop
or
popa
pop
shr
push
add
add
add
sub
xor
add
add
add
adc
jb
push
add
or
add
sub
add
push
add
outs
lods
add
or
pop
or
or
add
adc
push
or
add
sub
add
adc
add
add
add
and
or
add
add
xor
add
add
add
add
jae
add
push
or
add
add
add
inc
cld
add
push
jae
add
or
sub
adc
add
add
add
sub
inc
or
add
sub
add
cdq
add
add
add
or
add
int3
add
add
add
add
add
add
add
add
add
add
and
add
add
push
add
sub
add
add
push
add
sub
add
or
add
add
dec
add
sub
add
or
or
add
dec
add
sub
add
add
push
add
sub
add
sub
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
inc
jle
add
add
sub
add
push
outs
add
or
and
add
add
push
add
cmp
(bad)
inc
sub
add
dec
add
cmp
(bad)
(bad)
inc
jb
push
add
or
add
sub
add
push
and
add
add
push
add
cmp
(bad)
inc
outs
add
and
add
add
push
add
cmp
(bad)
(bad)
dec
sub
and
push
add
cmp
(bad)
(bad)
dec
outs
inc
add
sub
push
add
or
add
jle
add
add
sub
add
sub
or
add
jp
adc
push
add
add
add
add
sub
inc
pop
add
add
add
pop
add
add
add
xchg
add
add
add
add
add
add
and
add
add
push
add
sub
pop
pop
pop
or
add
add
dec
add
sub
add
add
or
or
add
push
add
sub
add
add
pop
sub
leave
add
push
mov
sub
sub
and
add
add
push
add
sub
add
add
push
add
cmp
(bad)
inc
jb
push
add
or
add
sub
add
push
and
add
add
push
add
cmp
call
or
add
add
dec
add
cmp
inc
jle
add
add
sub
add
push
xor
adc
add
adc
add
adc
sub
add
or
add
sub
outs
add
add
sub
add
adc
add
or
add
add
add
add
outs
add
adc
add
std
add
add
add
adc
sub
inc
or
add
daa
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
or
add
dec
add
sub
add
push
add
or
add
sub
add
push
and
add
add
push
add
sub
or
add
dec
add
sub
add
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
call
sub
add
push
add
cmp
(bad)
inc
outs
inc
add
or
add
dec
add
cmp
(bad)
inc
sub
add
push
sub
add
dec
add
cmp
(bad)
(bad)
inc
outs
cmp
add
sub
add
dec
add
cmp
(bad)
(bad)
inc
jle
add
add
xchg
add
add
add
xor
and
add
add
push
add
cmp
(bad)
(bad)
call
sub
sub
add
adc
push
add
add
add
add
adc
jb
push
add
or
add
sub
add
push
jle
add
add
sub
add
push
sub
pop
sub
pop
adc
push
lea
add
add
inc
add
or
add
inc
sub
add
xor
add
add
add
add
adc
jb
push
add
or
add
sub
add
push
jle
add
add
sub
add
push
sub
add
rol
add
sub
sub
add
xor
cmp
add
add
add
add
push
add
or
add
sub
add
push
jle
add
add
sub
add
push
sub
jle
add
add
sub
add
jle
add
add
adc
add
sub
add
push
sub
xor
push
add
add
sub
outs
add
rol
add
or
add
add
push
sub
add
push
sub
add
xor
add
add
adc
sub
inc
or
add
daa
add
add
add
xchg
add
cmps
add
add
add
add
add
add
add
mov
add
or
add
add
or
add
dec
add
sub
add
push
add
or
add
sub
add
push
and
add
add
push
add
sub
or
and
add
add
push
add
sub
add
cmp
sub
push
sub
sub
and
add
dec
add
cmp
(bad)
inc
outs
inc
add
or
add
dec
add
cmp
(bad)
inc
outs
inc
add
or
add
dec
add
cmp
inc
jle
add
add
xchg
add
add
add
xor
add
push
add
cmp
(bad)
call
and
push
add
cmp
(bad)
push
push
add
or
add
add
pop
add
jb
push
add
or
add
jae
add
or
add
add
dec
add
cmp
(bad)
(bad)
inc
sub
add
or
jb
push
add
or
add
add
pop
add
jb
push
add
or
add
jae
add
or
adc
add
and
add
add
add
add
pop
add
or
add
sub
add
push
jle
add
add
sub
add
push
sub
add
push
inc
sub
xor
or
add
add
adc
sub
add
push
sub
add
xor
add
add
adc
jb
push
add
or
add
sub
add
push
add
pop
add
or
add
sub
add
push
add
add
(bad)
add
push
sub
add
xor
add
jno
or
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jb
add
add
add
add
add
add
add
add
mov
add
lods
add
add
add
add
add
add
add
add
add
or
add
ret
add
add
add
and
add
add
push
add
sub
add
cmp
add
add
dec
add
cmp
(bad)
inc
add
add
push
add
cmp
(bad)
dec
or
add
dec
add
cmp
(bad)
dec
pop
pop
or
add
push
add
cmp
mov
add
pop
add
add
push
add
cmp
(bad)
(bad)
inc
add
and
add
add
push
add
cmp
(bad)
inc
outs
dec
add
or
add
add
or
add
dec
add
cmp
(bad)
(bad)
jmp
push
and
add
dec
add
cmp
(bad)
(bad)
inc
outs
inc
add
or
add
dec
add
cmp
(bad)
(bad)
call
sub
add
add
dec
add
cmp
push
add
sub
add
push
cmp
(bad)
jmp
add
push
add
cmp
or
(bad)
jmp
or
add
dec
add
cmp
add
push
add
add
push
add
cmp
(bad)
call
or
adc
add
dec
add
cmp
(bad)
inc
jle
add
add
sub
add
add
sub
add
push
cmp
(bad)
jmp
sldt
add
push
add
cmp
(bad)
inc
inc
add
or
and
add
add
push
add
cmp
or
add
push
add
cmp
outs
inc
add
or
push
(bad)
(bad)
jmp
adc
add
dec
add
cmp
(bad)
inc
add
add
push
add
cmp
std
(bad)
call
sub
sub
push
sub
sub
and
add
dec
add
cmp
std
(bad)
inc
add
add
push
add
cmp
std
(bad)
call
sub
push
add
add
push
add
cmp
outs
inc
add
or
add
add
dec
add
cmp
add
test
push
add
add
push
add
cmp
add
dec
(bad)
(bad)
jmp
add
add
dec
add
cmp
(bad)
inc
jle
add
add
sub
add
add
sub
add
push
sub
sub
add
xor
add
sub
inc
or
add
daa
add
add
add
movs
add
add
add
add
add
add
add
add
add
loopne
add
or
add
add
or
add
dec
add
sub
add
push
add
or
add
sub
add
push
and
add
add
push
add
sub
or
and
add
add
push
add
sub
add
aaa
add
or
outs
cmp
add
cmp
sub
push
sub
cmp
add
add
dec
add
cmp
(bad)
inc
outs
inc
add
or
and
add
add
push
add
cmp
(bad)
inc
jle
add
add
sbb
add
sub
add
aad
add
sub
and
add
add
push
add
cmp
(bad)
(bad)
push
pop
add
or
add
add
pop
add
jae
add
or
add
add
dec
add
cmp
(bad)
(bad)
inc
outs
cmp
add
push
call
dec
add
cmp
(bad)
(bad)
inc
outs
dec
add
or
and
add
add
push
add
cmp
(bad)
(bad)
call
jb
pop
add
or
add
add
pop
add
jae
add
or
xor
add
and
inc
pop
add
add
add
mov
add
mov
add
mov
add
inc
add
add
add
add
push
add
add
push
add
sub
add
push
add
or
add
sub
add
push
and
add
add
push
add
sub
sub
add
or
outs
cmp
add
cmp
add
add
dec
add
sub
or
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
inc
jle
add
add
jno
add
sub
add
aad
add
sub
and
push
add
cmp
(bad)
push
pop
add
or
add
add
pop
add
jae
add
or
add
add
dec
add
cmp
(bad)
(bad)
inc
outs
cmp
add
pop
call
dec
add
cmp
(bad)
call
jb
pop
add
or
add
add
pop
add
jae
add
or
add
xor
dec
add
add
popa
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
into
add
add
add
add
add
add
add
test
add
inc
add
add
add
add
add
xchg
add
add
add
add
adc
push
push
add
xchg
add
push
add
or
add
sub
add
push
and
add
add
push
push
add
jne
(bad)
inc
outs
add
xlat
add
push
or
adc
add
dec
push
add
pop
(bad)
(bad)
dec
add
add
or
pop
and
push
push
add
inc
(bad)
(bad)
inc
sub
add
push
or
adc
add
dec
push
add
das
(bad)
(bad)
(bad)
cmp
add
add
push
push
add
sbb
(bad)
jmp
mov
add
push
push
add
or
(bad)
inc
outs
inc
add
or
or
add
and
add
add
push
push
add
repz
(bad)
inc
or
add
or
add
add
push
push
add
fdivr
(bad)
call
sub
add
add
dec
push
add
int3
(bad)
(bad)
call
add
add
sbb
add
or
mov
add
and
add
add
push
push
add
stos
(bad)
(bad)
call
add
je
or
add
dec
push
add
cdq
(bad)
(bad)
(bad)
cmp
add
add
sldt
add
push
push
add
xchg
(bad)
dec
add
add
or
push
and
add
add
push
push
add
outs
(bad)
(bad)
inc
or
add
or
add
or
push
push
add
push
(bad)
(bad)
call
or
add
add
dec
push
add
inc
(bad)
(bad)
call
or
add
push
push
add
xor
(bad)
dec
pop
pop
or
add
push
push
add
and
(bad)
call
sub
sub
push
sub
sub
and
add
dec
push
add
or
(bad)
dec
pop
pop
or
adc
add
dec
push
add
idiv
(bad)
inc
outs
inc
add
or
and
add
add
push
push
add
loope
(bad)
jmp
and
or
add
dec
push
add
sar
(bad)
push
pop
add
or
add
push
sub
or
add
jp
sub
add
adc
add
or
add
test
add
sub
dec
add
add
add
add
add
add
add
add
add
cmps
add
add
add
add
and
add
add
push
add
sub
add
add
outs
push
and
add
add
push
add
sub
or
and
add
add
push
add
sub
add
add
outs
add
add
add
inc
add
add
add
add
dec
add
sub
mov
sub
push
sub
sub
and
push
add
cmp
(bad)
inc
jb
pop
add
or
add
sub
add
push
and
add
add
push
add
cmp
(bad)
inc
je
add
add
add
or
and
add
dec
add
cmp
(bad)
(bad)
jmp
sbb
add
add
dec
add
cmp
(bad)
(bad)
inc
je
add
add
add
or
jb
pop
add
or
add
jb
pop
add
or
add
jae
add
or
xor
add
add
test
add
sub
dec
add
add
add
add
add
add
cmp
add
or
add
add
add
add
dec
add
sub
add
pop
add
or
add
sub
add
push
and
add
add
push
add
sub
add
add
add
and
add
add
push
add
sub
sub
push
sub
sub
and
add
add
push
add
sub
add
sub
sub
adc
add
and
add
add
add
add
pop
add
or
add
sub
add
push
jle
add
add
sub
add
push
mov
inc
sub
add
adc
add
add
add
adc
add
sbb
fiadd
add
sub
adc
push
add
add
add
jb
push
add
or
add
sub
add
push
add
inc
add
or
add
sub
add
push
jle
add
add
add
push
or
sub
add
sub
add
sbb
add
add
jb
pop
add
or
add
sub
add
push
add
pop
add
or
add
sub
add
push
jle
add
add
sub
add
push
or
sbb
pop
or
adc
movntps
je
add
add
outs
dec
add
or
add
add
add
imul
pop
or
add
add
xchg
pop
add
or
add
jle
add
add
sub
add
push
sub
add
push
jb
pop
add
or
add
push
jae
add
or
fstp
jo
or
add
jle
add
add
sub
add
push
sub
cmc
pop
add
or
add
jae
add
or
sub
add
add
add
add
inc
add
push
add
xchg
add
add
xor
add
dec
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
or
add
dec
add
sub
add
add
add
outs
push
add
and
add
dec
add
sub
add
or
add
sub
add
push
and
add
add
push
add
sub
add
or
add
sub
add
push
and
add
add
push
add
cmp
(bad)
inc
sbb
xor
pop
add
add
push
add
cmp
(bad)
inc
outs
pusha
add
or
and
add
add
push
add
cmp
(bad)
jmp
pop
and
add
add
push
add
cmp
(bad)
(bad)
inc
je
add
add
add
dec
add
or
add
add
dec
add
cmp
(bad)
(bad)
jmp
and
push
add
cmp
(bad)
(bad)
inc
pop
adc
inc
(bad)
(bad)
call
sub
push
sub
cmp
(bad)
(bad)
jmp
add
add
dec
add
cmp
(bad)
(bad)
jmp
jb
pop
add
or
add
jle
add
add
sub
add
push
sub
cmc
pop
add
or
add
jae
add
or
add
xor
add
add
adc
and
or
add
add
add
add
add
add
pop
add
add
add
add
add
xor
and
push
add
sub
sub
add
add
dec
add
sub
pop
sub
add
add
dec
add
sub
and
add
dec
add
sub
add
or
add
add
dec
add
sub
adc
sub
push
sub
sub
and
add
add
push
add
sub
add
outs
imul
or
push
sub
xor
add
add
adc
and
or
add
add
add
add
add
add
pop
add
add
add
add
add
xor
and
push
add
sub
sub
add
add
dec
add
sub
pop
sub
add
add
dec
add
sub
and
add
dec
add
sub
add
or
add
add
dec
add
sub
adc
sub
push
sub
sub
and
add
add
push
add
sub
add
outs
ins
add
or
push
sub
xor
add
add
add
add
adc
add
add
pop
add
sbb
add
add
in
add
sub
add
xor
add
jne
add
or
jle
add
add
add
fld
push
outs
jbe
add
push
jle
add
add
add
loop
add
outs
jbe
add
push
sub
xor
add
add
add
add
adc
pop
sub
add
sub
adc
add
adc
add
jne
add
add
sub
add
sub
push
pop
sub
add
sub
adc
add
add
add
adc
jb
pop
add
or
add
sub
add
push
jle
add
add
jle
add
add
pop
add
sbb
add
add
out
add
je
add
sbb
add
add
xor
add
add
add
add
add
push
add
or
add
sub
add
push
jle
add
add
mov
add
sub
add
push
jb
pop
add
or
add
jle
add
add
cmp
add
pop
add
add
sub
add
push
sub
add
sub
add
push
sub
add
xor
add
add
add
sub
or
add
add
add
add
add
add
add
mov
add
inc
add
add
add
and
add
add
push
add
sub
add
and
mov
add
and
push
add
sub
add
sbb
add
add
push
outs
jbe
add
and
add
add
push
add
sub
add
add
add
push
add
sub
add
sub
sub
and
add
dec
add
cmp
(bad)
inc
jb
pop
add
or
add
sub
add
push
and
add
add
push
add
cmp
(bad)
inc
adc
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
add
or
add
or
and
add
add
push
add
cmp
(bad)
(bad)
inc
outs
dec
add
or
(bad)
(bad)
inc
sub
adc
push
add
add
add
adc
jb
pop
add
or
add
sub
add
push
add
pop
add
or
add
sub
add
sub
add
add
sub
add
push
jb
pop
add
or
add
jle
add
add
dec
pop
add
or
add
add
das
add
push
sub
add
push
jle
add
add
add
test
sub
xor
add
pop
lea
add
add
push
push
add
add
push
sub
xor
cmp
add
add
pop
pop
add
or
add
sub
add
push
add
pop
add
or
add
sub
add
sub
add
or
add
sub
add
push
or
add
add
add
sti
add
push
sub
add
xor
into
add
add
sub
or
add
add
add
add
or
add
cmp
add
cwde
add
add
add
pop
add
add
add
add
add
add
pop
add
add
push
add
sub
cmp
add
push
add
sub
and
add
add
push
add
sub
add
dec
add
sub
add
sub
sub
and
add
dec
add
sub
add
add
dec
add
cmp
(bad)
inc
push
outs
pushf
add
or
add
add
sub
and
add
add
push
add
cmp
(bad)
push
pop
add
or
add
jae
add
or
push
add
add
push
add
cmp
(bad)
(bad)
inc
add
add
or
mov
adc
add
inc
add
sbb
xor
or
add
add
add
add
add
add
add
xchg
add
add
add
add
add
jp
add
cmps
add
add
add
add
add
and
add
add
push
add
sub
push
pop
pop
or
add
add
dec
add
sub
sub
add
push
jae
add
or
or
add
dec
add
sub
add
add
dec
add
sub
add
add
push
add
cmp
(bad)
inc
outs
popf
add
or
add
dec
add
cmp
(bad)
jmp
push
and
add
add
push
add
cmp
(bad)
inc
push
outs
pushf
add
or
add
add
sub
add
dec
add
cmp
(bad)
(bad)
call
sub
add
push
add
cmp
(bad)
(bad)
call
or
sub
push
sub
cmp
(bad)
jmp
add
add
dec
add
cmp
(bad)
(bad)
inc
add
add
or
mov
sub
adc
pop
add
add
xor
or
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
ret
add
add
add
add
add
and
add
add
push
add
sub
push
push
outs
popf
add
or
outs
popf
add
or
push
add
add
or
sub
in
add
and
add
dec
add
sub
jo
or
add
jae
add
or
or
add
dec
add
cmp
(bad)
inc
sub
add
dec
add
cmp
(bad)
push
dec
add
or
add
jae
add
or
pop
add
add
push
add
cmp
(bad)
inc
sub
add
dec
add
cmp
(bad)
(bad)
inc
add
add
or
outs
popf
add
or
push
add
add
or
sub
push
and
add
add
push
add
cmp
sub
add
add
dec
add
cmp
(bad)
(bad)
inc
adc
stos
add
or
and
push
add
cmp
(bad)
(bad)
inc
outs
popf
add
or
outs
popf
add
or
sbb
sub
push
sub
cmp
(bad)
(bad)
jmp
add
add
dec
add
cmp
(bad)
(bad)
inc
sub
add
mov
add
sub
xor
add
add
add
add
adc
add
push
add
or
pop
sub
add
lar
or
mov
add
sub
xor
add
add
add
add
sub
dec
add
add
add
add
add
add
xor
add
or
add
add
add
add
dec
add
sub
add
mov
add
sub
pop
sub
push
sub
sub
and
add
add
push
add
sub
pop
sub
add
add
dec
add
sub
add
sub
and
add
add
push
add
sub
add
adc
add
or
add
add
add
add
adc
repz
push
sub
add
adc
add
pop
add
add
add
sub
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
sub
add
mov
add
sub
add
dec
add
sub
add
and
add
dec
add
sub
add
add
dec
add
sub
sub
sub
and
add
add
push
add
sub
add
or
add
add
dec
add
cmp
(bad)
inc
outs
mov
add
sub
adc
add
or
add
add
add
add
pop
and
cmc
add
push
sub
add
xor
add
xor
or
add
add
add
add
add
add
pop
add
add
add
loopne
add
and
add
add
add
add
add
add
or
add
dec
add
sub
jae
add
push
or
sub
push
sub
sub
and
add
add
push
add
sub
or
and
add
dec
add
sub
add
add
add
add
dec
add
sub
pop
add
add
push
add
cmp
(bad)
dec
jnp
add
add
xor
and
add
add
push
add
cmp
(bad)
inc
jae
add
or
and
push
add
cmp
(bad)
push
pop
add
or
add
jb
pop
add
or
add
jae
add
or
add
add
dec
add
cmp
(bad)
(bad)
push
pop
add
or
add
jae
add
or
add
add
dec
add
cmp
(bad)
dec
add
add
add
or
add
dec
add
cmp
(bad)
(bad)
inc
pop
or
push
inc
add
jae
add
push
sub
add
push
jle
add
add
sub
add
push
sub
add
xor
mov
add
adc
sub
or
add
add
add
add
or
add
sbb
add
add
add
jae
add
aaa
add
add
add
add
and
add
add
push
add
sub
add
add
or
add
push
add
sub
add
add
push
add
sub
add
add
push
add
sub
add
add
dec
add
sub
add
add
and
add
add
push
add
cmp
jmp
es
sub
push
sub
sub
and
add
add
push
add
cmp
jmp
shl
add
add
dec
add
cmp
inc
outs
push
add
or
add
add
xor
add
and
inc
pop
add
add
add
add
add
push
add
add
add
add
add
add
and
add
add
push
add
sub
jae
add
push
or
sub
push
sub
sub
and
add
add
push
add
sub
add
add
add
add
dec
add
sub
add
add
push
add
sub
add
or
add
add
dec
add
sub
sub
add
push
jae
add
or
add
add
dec
add
cmp
(bad)
push
add
or
and
push
add
cmp
(bad)
inc
pop
or
push
add
add
jae
add
push
sub
add
push
jle
add
add
sub
add
push
sub
adc
add
adc
add
add
add
jle
add
add
sub
add
push
sub
sub
add
adc
add
cli
add
add
xor
or
add
add
add
add
add
add
data16
add
add
add
add
add
or
add
add
or
add
dec
add
sub
add
add
or
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
or
and
add
dec
add
sub
add
add
push
add
sub
add
add
push
add
cmp
(bad)
call
or
push
add
add
push
add
cmp
(bad)
inc
add
add
or
and
push
add
cmp
(bad)
jmp
test
add
add
dec
add
cmp
(bad)
dec
sub
and
add
add
push
add
cmp
(bad)
(bad)
push
add
or
and
add
add
push
add
cmp
(bad)
(bad)
inc
outs
push
add
or
scas
add
add
sub
add
push
sub
add
xor
add
add
add
add
adc
adc
cld
add
push
sub
xor
add
add
add
add
adc
sub
add
or
add
jae
add
or
add
cld
add
push
sub
sbb
push
add
add
adc
add
push
or
adc
mov
sub
or
outs
mov
add
jae
add
or
add
add
outs
mov
add
or
mov
add
or
jnp
add
add
outs
lods
add
or
add
or
outs
cmp
add
sub
sub
jle
add
add
sub
jb
pop
add
or
add
push
jae
add
or
jle
add
add
add
inc
add
add
jae
add
or
add
add
add
add
add
sub
and
add
add
add
adc
add
adc
add
add
add
add
jb
pop
add
or
add
sub
add
push
sub
add
xor
add
cmp
inc
or
add
add
add
mov
add
add
add
add
add
add
add
add
add
fwait
add
add
add
add
add
add
add
add
or
add
dec
add
sub
add
add
dec
add
sub
and
add
add
push
add
sub
jo
or
add
jae
add
or
or
add
dec
add
cmp
push
pop
add
or
add
jb
pop
add
or
add
jae
add
or
pop
add
add
push
add
cmp
inc
add
popf
add
or
and
add
add
push
add
cmp
outs
scas
add
or
and
push
add
cmp
(bad)
(bad)
inc
outs
popf
add
or
xchg
add
pop
sub
push
sub
sub
and
add
dec
add
cmp
(bad)
(bad)
inc
push
xor
and
add
add
push
add
cmp
(bad)
(bad)
inc
sub
and
add
add
push
add
cmp
(bad)
(bad)
inc
push
push
outs
scas
add
or
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
mov
add
or
push
add
add
push
add
cmp
adc
jo
or
add
jae
add
or
add
add
dec
add
cmp
sub
sub
add
xor
add
add
add
jae
add
or
push
jae
add
or
pop
sub
xor
add
add
add
add
add
adc
push
sub
outs
popf
add
or
add
or
add
add
xor
add
add
xchg
add
adc
add
or
push
add
add
add
jle
add
add
sub
add
push
or
clts
sub
jle
add
add
sub
pop
sub
adc
add
add
add
add
add
xor
inc
add
add
xor
inc
or
add
ins
add
add
add
add
add
add
add
add
add
add
add
retf
add
add
add
add
add
add
or
add
dec
add
sub
add
or
add
sub
add
push
and
add
add
push
add
sub
add
and
add
dec
add
sub
maxps
mov
add
or
push
add
add
push
add
cmp
(bad)
inc
sbb
maxps
mov
add
or
or
add
dec
add
cmp
(bad)
inc
pop
or
pop
maxps
mov
add
or
or
add
dec
add
cmp
(bad)
inc
pop
pop
outs
pop
add
or
pop
add
add
push
add
cmp
pop
maxps
mov
add
or
add
push
add
cmp
push
outs
pop
add
or
add
add
dec
add
cmp
(bad)
(bad)
inc
pop
jne
pop
add
or
sub
push
sub
cmp
(bad)
jmp
add
add
dec
add
cmp
(bad)
(bad)
inc
or
add
or
add
push
add
cmp
(bad)
(bad)
inc
or
add
or
adc
add
jp
add
add
add
sub
dec
add
add
add
add
add
add
xor
add
or
add
add
add
add
dec
add
sub
add
push
sub
sub
and
add
add
push
add
sub
add
add
or
add
add
dec
add
sub
add
sub
add
dec
add
sub
jo
or
add
add
pop
add
add
add
or
add
adc
add
sub
add
add
add
add
sub
add
push
add
out
add
push
sub
jle
add
add
(bad)
pop
add
or
add
add
das
add
push
add
add
or
adc
add
cmp
add
add
add
add
pop
add
or
add
sub
add
push
jle
add
add
sub
add
push
sub
add
sbb
jo
or
add
add
das
add
push
add
add
or
add
adc
push
add
add
adc
add
add
add
dec
pop
add
or
add
add
das
add
push
sub
add
sub
add
adc
add
imul
add
add
adc
sbb
or
add
add
add
add
add
add
xor
add
or
add
add
add
add
dec
add
sub
add
push
sub
sub
and
add
add
push
add
sub
add
add
or
add
add
dec
add
sub
add
sub
add
dec
add
sub
add
or
add
xor
add
add
adc
add
add
add
dec
pop
add
or
add
add
das
add
push
sub
add
add
xor
add
add
add
add
sub
dec
add
add
add
add
add
add
xor
add
or
add
add
add
add
dec
add
sub
add
push
sub
sub
and
add
add
push
add
sub
add
add
or
add
add
dec
add
sub
add
sub
add
dec
add
sub
add
or
add
xor
add
add
add
add
adc
sub
add
or
add
xor
sbb
add
add
add
add
xor
add
mov
add
jb
pop
add
or
add
jae
add
or
adc
add
adc
add
add
add
add
xor
add
mov
add
add
cmp
add
jp
add
xor
sbb
add
add
add
add
inc
add
add
pop
add
or
add
jae
add
or
add
xor
adc
add
add
add
add
inc
add
add
cmp
add
jp
add
adc
add
xor
add
js
add
lldt
add
adc
push
(bad)
push
pop
add
sbb
add
or
cs
add
mov
add
sbb
pop
add
or
add
jae
add
or
add
add
xor
adc
add
add
add
add
xor
add
mov
add
add
cmp
add
jp
add
xor
add
add
adc
sub
jle
add
add
sub
add
push
jae
add
or
add
add
xor
add
add
add
add
add
add
or
call
sub
add
push
sub
add
add
jge
add
add
add
or
add
add
add
add
xor
add
xor
inc
or
add
js
add
and
add
mov
add
leave
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
or
add
dec
add
sub
add
add
and
add
add
push
add
sub
add
or
add
sub
test
add
or
add
dec
add
sub
add
add
add
add
and
push
add
cmp
(bad)
inc
add
add
add
add
add
and
add
add
push
add
cmp
(bad)
inc
add
add
add
adc
add
sub
or
add
dec
add
cmp
(bad)
inc
jnp
add
add
cmp
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
jle
add
add
add
pop
add
add
push
add
cmp
(bad)
(bad)
inc
jle
add
add
add
push
add
add
push
add
cmp
(bad)
(bad)
inc
jle
add
add
add
add
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
jnp
add
add
or
add
sub
add
and
add
dec
add
cmp
add
add
add
add
add
add
adc
add
sub
add
sbb
add
add
add
add
sub
push
adc
adc
adc
add
add
bound
add
sub
add
add
sub
jle
add
add
push
sub
push
add
add
push
jle
add
add
sub
add
push
sub
add
push
sub
add
push
adc
outs
cmp
add
sub
push
jne
add
add
pop
adc
sub
jle
add
add
pop
sub
adc
adc
xor
fiadd
push
sub
sub
add
add
add
add
push
add
add
add
xchg
xchg
add
add
add
sbb
add
bound
add
xchg
add
adc
or
add
add
sub
pop
or
aas
or
add
or
sub
jle
add
add
sub
add
push
fiadd
fiadd
or
add
or
or
xor
xor
dec
add
push
or
add
or
push
pop
pop
or
add
pop
adc
add
mov
mov
add
sub
add
sbb
add
add
add
sub
add
add
add
add
add
add
add
add
sbb
add
xor
add
nop
add
adc
or
add
add
add
add
add
add
adc
add
sub
add
add
push
or
pop
add
add
push
fiadd
fiadd
push
sub
add
add
add
add
add
sub
add
add
add
xor
mov
add
xchg
add
adc
or
add
add
sub
pop
adc
push
adc
sub
push
adc
call
or
iret
add
push
adc
adc
das
add
push
adc
add
adc
push
sub
fidiv
sub
jle
add
add
sub
add
push
or
add
or
or
xor
xor
dec
add
push
or
add
or
push
pop
pop
or
add
fiadd
adc
pop
pop
adc
adc
adc
mov
xchg
fiadd
fiadd
push
sub
sbb
add
add
pop
je
add
add
add
add
add
add
add
xor
add
add
xchg
add
adc
add
add
sub
push
mov
inc
or
add
sub
sub
adc
add
add
add
add
add
xor
add
add
add
popa
add
add
sub
push
mov
fiadd
sub
sub
add
add
add
add
add
adc
add
add
add
sbb
add
add
popa
add
add
sub
push
mov
xor
jle
add
add
data16
add
push
call
push
add
push
or
pop
fiadd
fiadd
adc
pop
sub
add
add
add
add
add
cs
add
add
adc
add
mov
add
adc
sub
or
add
add
add
add
cmp
add
push
add
add
add
add
add
add
add
add
add
add
pop
add
add
push
add
sub
add
loop
add
or
add
add
dec
add
sub
add
add
push
add
sub
add
add
dec
add
sub
add
add
push
add
sub
add
add
push
add
sub
add
sub
add
es
sub
push
sub
sub
and
add
dec
add
cmp
(bad)
dec
pop
pop
or
add
push
add
cmp
(bad)
dec
or
add
adc
add
add
add
sbb
or
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
sub
add
loop
add
or
sub
push
sub
sub
and
add
add
push
add
sub
push
mov
pop
and
add
add
push
add
sub
add
dec
add
sub
loope
add
sub
add
xor
add
add
fwait
add
adc
sbb
or
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
sub
add
loop
add
or
sub
push
sub
sub
and
add
add
push
add
sub
push
mov
pop
and
add
add
push
add
sub
add
dec
add
sub
outs
jmp
add
add
xor
sbb
add
pushf
add
adc
xor
inc
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
dec
push
add
mov
or
and
add
add
push
push
add
scas
sub
add
or
and
add
add
push
push
add
popf
adc
and
push
push
add
mov
xchg
add
add
add
add
dec
push
add
jns
(bad)
call
adc
add
push
push
add
push
adc
add
add
dec
push
add
push
(bad)
(bad)
call
add
add
add
add
push
push
add
inc
(bad)
(bad)
dec
sub
sahf
and
add
add
push
push
add
sub
outs
out
add
sub
add
push
or
sub
sub
and
add
add
push
push
add
or
(bad)
inc
or
add
or
add
add
dec
push
add
idiv
(bad)
call
add
xor
add
sub
sbb
pop
add
add
popf
add
adc
add
add
or
jae
add
or
and
add
add
add
sbb
jle
add
add
jle
add
or
and
or
add
or
push
sub
add
push
push
adc
add
add
sub
add
push
adc
fstp
add
add
or
sub
add
push
fsub
add
add
add
sbb
jle
add
add
jle
add
or
and
add
add
or
add
add
add
inc
add
mov
lds
add
sub
add
push
sbb
and
push
pop
adc
sub
add
push
sub
or
adc
add
add
sub
add
push
adc
(bad)
pop
push
sub
add
push
push
inc
mov
add
jle
add
add
sub
add
push
adc
push
sub
push
adc
sub
pop
adc
call
pop
add
add
or
or
pop
pop
popf
adc
outs
stos
add
or
push
sub
add
push
push
ss
adc
scas
add
add
sub
add
push
outs
xchg
add
or
jle
add
add
add
or
add
sub
add
push
outs
xchg
add
or
and
push
ficomp
adc
pop
pop
adc
adc
adc
mov
xchg
fimul
or
and
add
fdivr
add
or
adc
sub
add
add
add
and
add
add
add
add
jp
loopne
add
add
add
sbb
add
add
jle
add
or
jle
add
or
mov
add
or
add
or
jle
add
add
pop
pop
add
or
add
add
ds
add
or
add
sub
add
jae
add
or
pop
jae
add
or
or
add
imul
sub
iret
add
push
sub
fstp
add
add
outs
adc
add
outs
push
add
or
pop
cmp
push
add
pop
sub
add
add
add
add
adc
imul
add
jb
pop
add
or
add
adc
cmp
aaa
add
ins
add
add
jb
pop
add
or
add
sub
add
add
add
add
call
jle
add
or
adc
call
jle
add
or
lea
add
adc
add
jb
pop
add
or
add
adc
sbb
aaa
add
add
adc
fisubr
adc
outs
sbb
add
cmp
(bad)
(bad)
ficom
adc
sub
jle
add
add
pop
sub
fiadd
es
adc
fiadd
push
sub
push
sub
inc
xor
add
add
add
add
mov
add
sub
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
sub
xor
add
add
adc
sbb
or
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
sub
add
push
sub
sub
and
add
add
push
add
sub
push
jb
pop
add
or
add
outs
lahf
add
or
add
dec
add
sub
add
or
add
sub
and
add
add
push
add
sub
or
or
add
or
add
add
pop
push
add
cmp
add
xor
add
add
add
add
adc
add
outs
add
add
sub
add
sbb
add
cmp
add
xor
add
add
add
add
push
sub
add
add
or
add
add
add
push
or
add
sbb
pusha
adc
sub
add
push
or
sub
add
push
adc
sbb
pusha
push
adc
adc
sub
add
push
or
add
push
add
add
add
push
or
sub
fimul
fimul
pop
sub
pop
sub
add
fcom
sub
add
add
add
add
pop
add
add
add
xor
add
add
sub
add
push
or
sub
pop
sub
add
push
or
sub
add
sbb
pop
add
add
mov
or
add
push
sub
add
add
or
add
add
push
or
add
pop
pop
pusha
adc
sub
add
push
or
add
push
adc
add
add
adc
add
adc
jle
add
add
push
push
and
add
sub
add
or
adc
push
adc
push
or
add
adc
or
or
pop
inc
pop
add
add
add
add
add
add
add
add
add
add
mov
add
push
adc
push
adc
sub
pop
adc
sub
add
or
push
push
adc
outs
jecxz
add
or
js
xor
or
add
add
icebp
add
add
cwde
add
push
adc
push
adc
push
adc
push
adc
adc
push
adc
outs
mov
add
adc
sub
adc
adc
adc
adc
adc
pop
outs
scas
add
or
add
or
or
pop
adc
adc
push
adc
outs
mov
add
adc
adc
adc
xor
adc
outs
aas
add
or
sub
adc
push
sub
add
or
fimul
or
or
xor
add
fadd
sub
add
add
add
pop
add
add
add
inc
add
add
add
add
add
add
xor
add
add
adc
add
push
je
add
add
add
xor
push
add
add
add
adc
add
add
push
je
add
add
add
adc
add
add
sbb
or
add
add
add
add
add
add
aaa
add
add
add
add
add
add
dec
add
sub
add
add
sub
add
push
or
sub
push
sub
sub
and
add
add
push
add
sub
add
add
dec
add
sub
adc
add
and
add
add
push
add
sub
clc
add
or
add
or
add
xor
jb
add
mov
sbb
or
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
sub
add
add
add
push
or
sub
push
sub
sub
and
add
add
push
add
sub
add
add
dec
add
sub
adc
add
and
add
add
push
add
sub
clc
add
or
add
or
add
adc
add
add
add
push
or
add
add
sub
add
push
sub
jle
add
or
push
jae
add
or
adc
add
and
add
add
add
inc
add
push
or
add
add
sub
add
push
sub
jle
add
or
push
jae
add
or
add
xor
add
add
adc
add
sub
add
sub
pop
sub
add
sub
add
sub
adc
add
add
add
push
or
sub
sub
add
adc
add
adc
add
adc
add
sub
add
sub
pop
sub
add
sub
add
sub
add
sbb
push
add
add
mov
sub
sub
add
sub
add
add
or
push
and
add
add
push
or
or
add
pop
push
pusha
adc
sub
add
push
or
or
or
sub
pop
sub
add
fmul
sub
add
add
add
add
pop
add
add
add
xor
add
add
mov
sub
sub
add
sub
add
add
or
push
and
add
add
push
or
add
sbb
pusha
adc
sub
add
push
or
sub
add
push
adc
sbb
pusha
push
adc
adc
sub
add
push
or
sub
fimul
fimul
pop
sub
pop
sub
add
fcom
sub
add
add
adc
add
add
or
add
add
xor
add
add
add
or
jnp
add
sub
add
add
or
push
and
add
add
push
or
or
jb
and
jo
or
add
outs
mov
add
or
jo
or
add
adc
xchg
add
jo
or
add
adc
add
pop
pop
outs
fwait
add
or
add
push
or
add
or
add
and
add
add
pusha
adc
sub
add
push
adc
adc
sub
sub
add
push
sub
or
sub
pop
sub
add
fmul
sub
adc
add
add
xchg
or
add
add
xor
add
add
mov
sub
sub
add
sub
add
add
or
add
add
push
or
or
add
and
add
add
pusha
adc
sub
add
push
or
add
aaa
add
push
sub
or
sub
pop
sub
add
fmul
sub
add
adc
add
add
add
inc
add
add
add
adc
add
sbb
add
movs
add
adc
add
sub
add
or
mov
or
add
sub
add
or
sub
add
sbb
or
cmps
add
add
add
add
or
push
and
add
add
push
or
add
or
sub
sub
add
sub
add
or
add
push
push
push
pusha
adc
sub
add
push
or
adc
add
add
add
or
add
add
add
pop
pop
adc
add
add
or
add
or
add
or
push
sub
add
push
or
jle
add
add
add
push
outs
add
or
add
pop
adc
outs
jle
add
add
mov
or
sub
pop
sub
add
fmul
outs
aas
add
or
add
adc
add
add
add
add
add
add
adc
add
sbb
add
movs
add
adc
add
sub
add
or
mov
or
add
sub
add
or
sub
add
sbb
or
add
add
add
or
push
and
add
add
push
or
add
or
sub
sub
add
sub
add
or
add
push
pop
push
pusha
adc
sub
add
push
or
add
push
adc
adc
pop
adc
add
or
push
jle
add
or
add
or
pop
jle
add
or
add
or
add
or
add
cmp
add
or
add
add
add
or
or
adc
sub
add
add
or
adc
adc
adc
jle
add
or
add
or
add
or
add
or
cmp
add
or
jle
add
add
or
push
add
push
outs
add
or
or
pop
adc
adc
push
pop
outs
xor
pop
pop
sub
add
fmul
outs
aas
add
or
add
add
add
add
sub
lods
aam
or
add
add
xor
sbb
add
adc
add
sub
add
or
add
inc
add
or
sub
add
or
sub
add
sbb
or
add
add
add
or
push
and
add
add
push
or
add
adc
add
or
jnp
add
sub
add
pop
push
pusha
adc
sub
add
push
or
adc
jle
add
or
push
jle
add
or
add
or
pop
jle
add
or
add
or
add
or
add
cmp
add
or
add
jno
add
push
or
or
and
or
add
add
or
add
jb
add
outs
pop
sub
add
jae
add
or
or
sub
pop
sub
add
fmul
sub
add
add
add
add
and
or
add
add
add
add
add
sub
and
add
add
sbb
add
add
add
xor
add
add
add
add
and
add
xor
add
cmp
add
add
add
or
and
add
xor
add
cmp
add
add
add
or
and
add
or
and
pop
add
or
and
add
xor
add
cmp
add
add
adc
add
add
add
adc
add
add
rol
add
rol
add
push
add
push
jb
pop
add
or
add
sub
push
sub
add
push
push
inc
sub
xor
add
add
add
add
adc
cmp
add
add
xor
add
add
push
add
adc
sub
add
fiadd
fiadd
jb
pusha
add
or
add
sbb
add
add
or
add
or
add
add
cmp
add
sub
add
push
or
or
add
pop
add
push
fiadd
push
sub
sub
sbb
add
add
add
or
add
add
add
xor
or
xor
add
add
add
add
adc
add
add
sub
add
push
sub
add
sub
add
adc
add
adc
add
add
add
jle
add
add
inc
add
add
sub
add
sub
add
sbb
or
jge
add
stos
add
adc
add
add
rol
add
push
add
push
jb
pop
add
or
add
sub
push
or
add
add
sub
add
push
sub
sub
add
add
mov
add
sub
jle
add
add
sub
add
push
sub
sub
cmp
add
inc
add
add
sub
add
or
add
inc
add
add
sbb
add
sub
add
sub
and
add
sub
sub
add
add
jle
add
add
jb
pusha
add
or
add
sub
rol
add
or
add
add
adc
add
pop
sbb
pop
add
mov
sub
add
push
sub
pop
jae
add
or
add
sub
add
and
push
or
add
add
sub
sub
add
or
add
jbe
add
add
sub
jo
or
add
sbb
add
add
je
add
pop
add
add
add
mov
inc
add
add
adc
add
jne
add
fs
add
push
mov
add
mov
mov
add
mov
sub
push
mov
add
mov
mov
add
adc
or
in
add
add
xchg
add
push
(bad)
add
fiadd
sub
add
add
add
add
add
add
add
add
add
add
jns
add
xor
add
add
stos
add
adc
add
add
add
add
add
adc
sub
add
or
add
add
add
lock
push
pop
and
add
add
add
inc
pop
or
add
add
js
add
jns
add
add
add
add
add
add
sub
add
pop
push
pop
sub
add
sub
add
or
pop
es
sub
fiadd
or
add
add
adc
add
add
add
add
add
add
push
add
add
add
sub
xor
add
add
lods
add
adc
xor
inc
or
add
sbb
add
add
add
retf
add
add
add
add
add
add
movs
add
add
add
add
add
add
and
add
add
push
or
sub
call
dec
or
sub
add
add
add
add
pop
es
adc
mov
add
or
or
add
dec
or
sub
and
add
add
push
or
cmp
(bad)
call
adc
and
add
add
push
or
cmp
(bad)
inc
jle
add
add
push
call
iret
add
add
pop
call
lds
add
and
add
dec
or
cmp
(bad)
(bad)
push
add
or
and
add
add
push
or
cmp
(bad)
(bad)
dec
pop
lea
add
pop
adc
push
pop
cmp
mov
add
or
add
push
or
cmp
(bad)
(bad)
dec
mov
xor
and
add
add
push
or
cmp
(bad)
(bad)
inc
adc
sub
cmp
(bad)
jmp
add
add
dec
or
cmp
(bad)
(bad)
call
push
pop
pop
adc
and
push
or
cmp
push
adc
(bad)
(bad)
inc
sub
add
add
add
push
add
add
push
add
add
push
sub
add
sbb
add
mov
add
lods
add
adc
add
or
jle
add
add
add
add
or
add
jle
add
add
and
sub
or
add
or
push
sub
push
sub
or
add
push
adc
cmp
add
add
outs
sub
jo
or
add
sub
add
adc
add
add
push
sub
pop
add
push
outs
pop
add
or
push
sub
add
sub
push
(bad)
push
or
add
outs
or
add
fadd
sub
add
adc
add
add
add
add
add
add
adc
add
adc
add
add
add
and
and
add
popa
add
push
sub
pop
sub
sub
xor
add
add
sub
inc
add
add
add
add
ja
add
inc
add
add
add
add
and
add
add
push
add
sub
jb
pusha
add
or
add
or
add
add
dec
add
sub
jle
add
add
jb
add
jo
or
add
sub
add
or
add
add
dec
add
sub
add
sub
add
or
pop
sub
push
sub
sub
and
add
add
push
add
sub
or
and
add
add
push
add
cmp
(bad)
jle
add
add
jb
add
jo
or
add
adc
(bad)
push
adc
add
outs
add
add
push
sub
add
push
es
sub
xor
add
add
sub
or
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
mov
add
mov
add
and
add
in
add
and
add
movs
add
add
add
inc
add
add
add
in
add
add
add
add
add
add
adc
add
dec
add
sub
jo
or
add
or
add
add
dec
add
sub
add
sub
add
or
mov
add
and
add
add
push
add
cmp
(bad)
push
popa
add
or
add
pop
mov
add
add
xchg
add
or
pop
add
push
pop
sub
push
sub
cmp
add
add
dec
add
cmp
(bad)
inc
jle
add
or
push
add
or
rol
add
and
add
add
push
add
cmp
(bad)
(bad)
(bad)
jle
add
add
jle
add
or
sub
push
or
adc
add
dec
add
cmp
(bad)
(bad)
push
popa
add
or
add
or
xchg
add
or
pop
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jmp
adc
add
or
sldt
add
push
add
cmp
jle
add
or
push
add
or
and
add
add
push
add
cmp
hlt
popa
add
or
add
pop
mov
add
add
xchg
add
or
pop
add
push
and
add
add
push
add
cmp
(bad)
inc
or
push
add
add
push
add
cmp
(bad)
(bad)
cmp
add
push
add
cmp
inc
jle
add
or
push
add
or
and
push
add
cmp
(bad)
(bad)
dec
jle
add
or
sldt
or
and
add
add
push
add
cmp
(bad)
(bad)
inc
jle
add
or
sldt
or
and
add
add
push
add
cmp
(bad)
(bad)
jmp
and
add
add
push
add
cmp
std
(bad)
inc
or
or
add
dec
add
cmp
std
(bad)
(bad)
jle
add
add
jle
add
or
sub
push
or
adc
add
dec
add
cmp
std
(bad)
(bad)
jle
add
add
jle
add
or
add
push
adc
add
outs
add
add
push
sub
add
push
and
add
add
push
add
cmp
or
or
add
dec
add
cmp
cmp
add
jle
add
or
add
push
adc
add
outs
add
add
pop
sub
add
push
sub
xor
add
add
add
add
adc
add
add
inc
add
add
bound
jo
or
add
sub
add
or
add
add
inc
bound
jo
or
add
push
sub
pop
add
push
jle
add
add
sub
add
push
sub
mov
pop
outs
dec
add
or
add
xchg
add
add
add
dec
add
or
cmp
add
mov
outs
inc
add
push
jle
add
add
and
bound
jo
or
add
sub
add
or
add
add
sub
add
push
sub
add
inc
add
add
bound
jo
or
add
push
push
sub
add
push
sub
jle
add
add
xchg
bound
jo
or
add
push
sub
pop
add
push
sub
jo
or
add
push
sub
pop
add
push
push
or
sub
add
cmp
(bad)
(bad)
fimul
adc
push
or
add
outs
or
add
fdiv
arpl
jo
or
add
sub
add
jle
add
or
or
add
add
add
add
push
add
add
sbb
pop
add
add
add
mov
add
or
add
add
add
add
inc
add
mov
lds
add
sub
add
push
or
arpl
jo
or
add
or
sbb
push
jle
add
add
jb
add
or
add
sub
or
add
or
add
jae
add
or
add
imul
sub
jge
add
adc
cmp
add
add
add
add
push
sub
add
add
add
add
outs
popf
add
or
mov
pop
add
add
add
hlt
add
add
add
add
sub
add
push
sub
add
jb
add
or
add
sub
adc
outs
add
or
add
outs
sbb
add
sub
jle
add
add
jle
add
add
ins
add
add
add
outs
add
or
add
sub
add
push
sub
pop
sbb
inc
jle
add
add
add
xchg
sub
add
push
sub
jle
add
add
jb
add
or
add
jle
add
add
add
xchg
sub
add
push
sub
add
push
or
dec
pop
sbb
inc
jle
add
add
add
cmps
add
or
add
sub
jle
add
add
jb
add
or
add
jle
add
add
add
cmps
add
or
add
sub
add
push
or
push
outs
sbb
add
cmp
(bad)
(bad)
(bad)
ficom
adc
sub
jle
add
add
push
sub
pop
sbb
pop
add
add
jb
add
or
add
jae
add
or
add
imul
sub
jge
add
adc
cmp
add
add
add
add
pop
sub
add
add
add
add
add
and
mov
add
adc
add
add
add
sub
add
push
sub
add
jb
add
or
add
sub
adc
jo
or
add
outs
sbb
add
sub
jle
add
add
jle
add
add
ins
add
add
add
jo
or
add
sub
add
push
sub
adc
jo
or
add
outs
sbb
add
sub
jle
add
add
jb
add
or
add
jle
add
add
add
jo
or
add
sub
add
push
or
pop
outs
sbb
add
cmp
(bad)
(bad)
(bad)
ficom
adc
sub
jle
add
add
pop
sub
fiadd
fiadd
jb
add
or
add
push
sub
pop
add
push
push
sub
add
add
add
add
jb
add
xor
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
mov
add
adc
adc
jle
add
add
push
add
or
add
outs
mov
add
adc
jle
add
add
push
add
or
add
outs
mov
add
adc
jle
add
add
push
add
or
add
outs
mov
add
adc
jle
add
add
push
add
or
add
outs
mov
add
adc
or
add
or
add
jb
add
or
add
jae
add
or
jle
add
add
imul
sub
jge
add
adc
cmp
push
add
pop
sub
add
add
add
cmp
ins
add
add
jle
add
add
cmp
add
sub
push
jle
add
add
scas
add
add
ins
add
add
jle
add
add
cmp
add
sub
add
push
outs
mov
add
or
add
add
sbb
add
sub
push
jle
add
add
scas
add
add
ins
add
add
jle
add
add
cmp
add
sub
add
push
outs
mov
add
or
add
add
sbb
add
sub
push
jle
add
add
scas
add
add
ins
add
add
jle
add
add
cmp
add
sub
add
push
push
push
outs
scas
add
or
add
or
pop
outs
sbb
add
cmp
(bad)
(bad)
(bad)
ficom
adc
sub
jle
add
add
pop
sub
fiadd
fiadd
adc
jb
add
or
add
jb
add
or
add
jae
add
or
add
jnp
add
imul
sub
jge
add
adc
cmp
push
add
or
xor
add
add
add
add
add
add
add
add
add
cmp
add
cmp
scas
add
add
ins
add
add
add
add
cmp
add
sub
add
push
jb
add
or
add
outs
xchg
add
or
jle
add
add
ins
add
add
add
add
cmp
add
sub
add
push
outs
popf
add
or
or
xor
add
add
ins
add
add
add
add
cmp
add
sub
add
push
pop
lea
add
or
or
pop
sub
mov
add
or
outs
sbb
add
cmp
(bad)
(bad)
ficom
adc
sub
jle
add
add
or
xchg
add
push
fmul
sub
push
jle
add
add
lea
add
adc
adc
push
or
call
add
or
add
mov
sbb
jb
add
or
add
mov
sbb
mov
add
or
add
add
fiadd
fiadd
push
sub
add
add
add
xchg
add
add
add
add
add
adc
add
bound
add
adc
add
jae
add
add
add
or
add
add
add
add
add
adc
add
jbe
add
popa
add
add
add
add
add
add
xor
and
add
add
add
jle
add
add
std
add
or
add
add
and
pop
add
push
add
sub
add
sub
xor
je
add
mov
add
jle
add
add
cmp
or
add
add
and
pop
add
push
jae
add
or
jle
add
add
sub
add
push
sub
jle
add
add
sub
pop
sub
jle
add
add
sub
add
push
or
adc
scas
add
add
sub
add
push
sub
add
fiadd
jb
data16
or
add
push
sub
add
push
push
sub
adc
add
add
add
dec
add
or
xor
add
xchg
add
jo
or
add
or
add
add
mov
outs
inc
add
push
jle
add
add
and
mov
or
add
sub
add
or
sub
jle
add
add
sub
add
push
and
jle
add
add
add
jo
or
add
sub
add
sub
add
add
jo
or
add
sub
add
sub
add
add
jo
or
add
sub
add
sub
jmp
or
add
or
sbb
(bad)
jo
or
add
or
or
(bad)
jo
or
add
or
sub
push
add
mov
outs
inc
add
push
jle
add
add
and
mov
add
sub
add
or
sub
jle
add
add
sub
add
push
outs
xchg
add
or
push
jb
add
or
add
outs
call
sbb
pop
pop
outs
mov
add
pop
pop
or
push
or
or
scas
add
or
ficomp
adc
lds
add
adc
jo
or
add
adc
cmp
add
sub
add
fiadd
push
sub
add
add
add
add
or
add
push
add
add
add
add
add
add
xor
add
add
adc
dec
dec
add
add
add
add
add
add
add
add
cmp
add
sti
add
add
add
add
add
mov
add
add
add
add
add
xchg
add
add
add
add
add
add
sldt
add
push
push
add
stos
jae
add
or
and
add
add
push
push
add
call
add
dec
push
add
mov
adc
add
add
dec
push
add
jnp
(bad)
push
add
or
add
or
mov
add
sub
add
pop
sub
push
sub
sub
and
add
add
push
push
add
push
(bad)
(bad)
dec
outs
in
add
or
sub
inc
and
add
add
push
push
add
xor
(bad)
call
add
add
add
add
push
push
add
and
(bad)
dec
sub
and
add
add
push
push
add
ud0
(bad)
cmp
add
add
dec
push
add
cld
(bad)
(bad)
call
add
and
add
add
push
push
add
call
sub
add
or
and
add
add
push
push
add
sar
(bad)
inc
or
add
or
add
dec
push
add
mov
outs
mov
and
add
add
push
push
add
cmps
(bad)
(bad)
inc
or
add
add
sub
add
push
outs
mov
or
add
dec
push
add
xchg
(bad)
dec
sub
and
add
add
push
push
add
jno
(bad)
dec
outs
out
add
sub
add
or
add
push
push
add
push
(bad)
(bad)
call
add
aas
sbb
(bad)
inc
sub
xor
add
inc
dec
add
add
add
add
inc
add
add
add
fiadd
add
or
add
ret
add
add
add
add
add
add
add
jle
add
and
add
xor
add
add
and
add
add
push
push
add
scas
or
add
or
je
add
or
add
push
push
add
cwde
add
loop
add
or
or
push
push
add
xchg
adc
add
add
dec
push
add
jne
(bad)
call
adc
add
push
push
add
fs
(bad)
(bad)
cmp
add
add
add
add
dec
push
add
push
(bad)
(bad)
call
add
add
add
add
push
push
add
cmp
sub
and
add
add
push
push
add
sub
(bad)
inc
or
add
add
sub
add
push
outs
mov
push
add
add
push
push
add
or
(bad)
call
add
and
add
add
push
push
add
clc
(bad)
(bad)
inc
or
add
or
add
dec
push
add
loope
(bad)
dec
outs
in
add
or
sub
(bad)
and
add
add
push
push
add
(bad)
push
add
or
and
add
dec
push
add
mov
(bad)
push
add
or
add
or
mov
add
sub
add
pop
sub
push
sub
cmp
(bad)
jmp
or
add
dec
push
add
cmp
dec
sub
ins
(bad)
(bad)
jmp
add
push
push
add
push
(bad)
call
add
aas
push
(bad)
(bad)
inc
sub
add
adc
add
inc
add
add
dec
add
add
add
add
sub
add
push
add
rol
add
mov
add
add
add
add
add
add
add
push
add
add
add
add
and
add
dec
push
add
mov
outs
in
add
or
sbb
add
or
mov
add
add
dec
push
add
call
add
push
push
add
lea
adc
add
add
dec
push
add
jl
(bad)
jmp
popa
and
add
add
push
push
add
ins
(bad)
(bad)
dec
adc
or
add
add
dec
push
add
pop
(bad)
(bad)
inc
sub
and
add
add
push
push
add
dec
(bad)
(bad)
(bad)
fld
sub
push
sub
sub
and
add
dec
push
add
sub
jmp
add
or
add
add
dec
push
add
sbb
(bad)
call
add
mov
cmps
and
push
push
add
add
(bad)
call
add
pop
adc
pop
add
add
push
push
add
lock
(bad)
inc
outs
out
add
jae
add
or
or
add
dec
push
add
(bad)
(bad)
(bad)
call
add
add
and
add
add
push
push
add
sar
call
add
sbb
push
add
add
add
lds
add
jae
add
or
add
add
cmp
add
or
jae
add
or
jle
add
add
sub
jle
add
add
sub
add
adc
sub
push
add
pop
sub
add
add
add
add
adc
adc
push
jle
add
or
mov
add
mov
jle
add
add
imul
add
jb
pop
add
or
add
adc
aaa
add
add
adc
add
add
add
call
or
add
adc
call
push
fisub
adc
outs
sbb
add
sub
pop
sub
jle
add
add
pop
sub
jle
add
or
adc
sub
add
add
add
add
cmp
test
add
sbb
push
add
add
adc
add
add
jae
add
or
add
add
cmp
add
or
jae
add
or
jle
add
add
sub
jle
add
add
sub
add
adc
sub
push
add
pop
sub
add
add
add
add
adc
adc
push
jle
add
or
jle
add
add
imul
add
jb
pop
add
or
add
adc
aaa
add
add
adc
push
call
outs
sbb
add
sub
pop
sub
jle
add
add
pop
sub
jle
add
or
adc
sub
adc
add
add
add
add
add
add
sbb
add
retf
add
or
add
add
shr
jo
or
add
add
and
pop
add
push
jle
add
add
sub
pop
adc
dec
adc
or
jle
add
add
mov
add
sub
add
push
add
xor
add
sub
jle
add
add
or
jo
or
add
add
and
pop
add
push
jle
add
add
sub
or
push
pop
pop
adc
adc
adc
push
sub
add
inc
imul
add
add
and
pop
add
push
fisub
or
add
xchg
imul
add
or
cmp
add
sub
add
push
adc
add
sub
add
add
add
add
add
sbb
mov
add
sbb
push
add
add
adc
add
add
sub
add
push
sub
jb
imul
add
sub
add
push
sub
add
or
jle
add
add
add
mov
clc
add
add
add
mov
adc
add
push
jle
add
add
sub
add
or
add
add
sub
or
add
push
jo
or
add
add
or
xchg
add
add
push
push
or
add
add
adc
add
add
add
add
or
xor
mov
add
adc
add
add
sub
add
push
sub
jb
push
jo
or
add
sub
add
push
sub
imul
sub
add
push
add
mov
add
sub
add
jle
add
add
ret
imul
sub
add
push
add
and
pop
add
push
add
sub
jle
add
add
and
or
add
push
mov
cmp
add
sub
add
adc
(bad)
adc
adc
(bad)
adc
adc
jle
add
add
mov
add
sub
add
add
add
adc
adc
jle
add
add
mov
add
sub
add
add
add
add
or
add
add
int3
add
add
sub
add
adc
mov
mov
or
add
adc
and
pop
add
push
push
adc
or
push
add
add
add
add
add
adc
push
add
add
add
adc
adc
adc
sub
jle
add
add
imul
sub
add
push
jle
add
add
fwait
add
add
add
cmp
add
sub
add
pop
adc
fimul
pop
jle
add
add
aas
push
jo
or
add
add
pop
sub
pop
add
push
fiadd
fisubr
jle
add
add
jl
add
or
add
jle
add
add
fwait
add
add
add
cmp
add
sub
add
fcom
sub
or
inc
xor
add
add
add
add
add
add
add
add
and
add
or
add
add
add
add
add
add
sub
add
add
add
sbb
or
rol
add
mov
mov
sub
add
push
sub
jb
push
jo
or
add
sub
add
adc
(bad)
adc
adc
sub
imul
sub
add
push
add
mov
add
sub
add
jle
add
add
ret
imul
sub
add
push
add
and
pop
add
push
add
sub
jle
add
add
and
or
add
push
mov
cmp
add
sub
add
adc
(bad)
adc
adc
(bad)
adc
adc
jle
add
add
mov
add
sub
add
add
add
adc
adc
jle
add
add
mov
add
sub
add
add
add
add
or
add
add
int3
add
add
sub
add
adc
mov
mov
or
add
adc
and
pop
add
push
push
adc
or
push
add
add
add
add
add
adc
push
add
add
add
adc
adc
adc
sub
pop
adc
sub
push
add
dec
adc
jnp
add
add
sub
adc
jnp
add
add
or
lods
add
push
es
add
add
fisubr
jo
or
add
adc
mov
add
sub
add
push
sub
add
adc
jae
add
or
or
push
fisub
adc
jle
add
add
aas
push
jo
or
add
add
or
xchg
add
add
push
fiadd
fisub
lds
add
imul
add
sub
jbe
add
sub
add
push
sub
add
fcom
or
adc
adc
adc
sub
inc
xor
add
add
add
add
add
add
jle
add
and
add
or
add
add
add
add
add
mov
add
add
add
add
xor
je
add
mov
pop
dec
add
add
add
add
add
add
out
add
mov
add
add
add
add
add
cmps
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
dec
add
sub
or
and
add
add
push
add
sub
add
outs
push
add
or
push
add
add
push
add
cmp
inc
outs
out
add
or
add
or
adc
add
and
push
add
cmp
(bad)
inc
outs
out
add
or
outs
fild
add
and
add
add
push
add
cmp
(bad)
inc
outs
out
add
or
outs
fld
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
outs
out
add
or
outs
fadd
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
outs
out
add
or
outs
fld
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
outs
loopne
add
and
add
add
push
add
cmp
(bad)
(bad)
push
add
or
and
add
dec
add
cmp
outs
out
add
or
outs
fadd
add
and
add
add
push
add
cmp
sub
add
add
or
add
dec
add
cmp
outs
out
add
or
outs
fiadd
add
and
add
add
push
add
cmp
(bad)
jmp
pop
and
add
add
push
add
cmp
(bad)
inc
or
add
or
and
add
add
push
add
cmp
(bad)
inc
outs
lock
or
add
or
add
dec
add
cmp
(bad)
(bad)
inc
outs
lock
or
add
or
add
push
add
cmp
outs
out
add
cmp
or
add
dec
add
cmp
std
(bad)
inc
or
add
or
and
add
add
push
add
cmp
std
(bad)
dec
sub
xchg
pop
sub
push
sub
sub
and
add
add
push
add
cmp
std
(bad)
inc
outs
out
add
or
add
or
dec
(bad)
(bad)
jmp
or
add
dec
add
cmp
outs
lock
or
add
or
cs
(bad)
(bad)
jle
add
add
sub
add
push
sub
xor
add
add
add
add
adc
add
add
fwait
add
add
add
adc
add
cwde
add
add
adc
sbb
inc
add
add
add
add
jne
add
pop
add
add
add
add
and
add
dec
add
sub
jb
outs
add
or
add
jb
outs
add
or
add
sub
push
sub
and
add
add
push
add
sub
push
sub
and
add
add
push
add
sub
add
sub
sub
and
add
add
push
add
sub
push
adc
sub
add
sub
and
add
add
push
add
cmp
(bad)
inc
sub
sub
xor
xor
add
mov
sub
add
or
add
add
jle
add
or
and
jle
add
add
add
data16
push
jle
add
or
and
sub
add
xor
dec
add
add
add
adc
jle
add
add
fwait
add
jle
add
add
retf
add
add
or
jo
or
add
sub
add
sub
add
push
sub
add
or
add
sub
add
or
jb
outs
add
or
add
sub
add
or
add
add
xor
adc
add
adc
add
add
jg
add
jle
add
add
and
add
add
xor
adc
add
adc
add
add
add
push
jle
add
add
and
add
add
xor
adc
add
adc
add
add
jge
add
jle
add
add
and
add
add
xor
mov
add
adc
sbb
inc
add
add
add
add
add
add
add
xor
add
add
add
add
dec
add
sub
jb
outs
add
or
add
jle
add
add
mov
add
sub
add
and
add
add
push
add
sub
add
inc
add
add
push
xor
jo
or
add
sub
add
or
add
add
dec
add
sub
add
sub
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
call
sub
add
add
dec
add
cmp
(bad)
push
outs
add
or
add
jle
add
add
mov
add
sub
add
pop
sub
add
adc
add
cmp
add
add
cmp
add
inc
add
add
int
add
or
add
sub
add
or
add
add
sub
add
push
sub
pop
sub
jb
outs
add
or
add
sub
add
adc
or
mov
add
dec
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
loope
add
mov
add
add
add
add
add
add
add
add
and
push
add
sub
add
inc
add
add
jecxz
add
or
add
jle
add
add
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
add
inc
add
add
imul
jo
or
add
pop
push
sub
add
and
add
add
push
add
cmp
(bad)
(bad)
(bad)
jle
add
add
inc
add
add
or
jo
or
add
jle
add
add
and
or
add
jle
add
add
jae
add
sub
and
sub
add
push
and
push
add
cmp
(bad)
(bad)
jmp
jnp
add
or
adc
add
dec
add
cmp
(bad)
(bad)
push
sbb
jo
or
add
sub
add
or
add
add
dec
add
cmp
es
add
or
add
add
rol
add
jb
and
jo
or
add
sub
and
add
add
push
add
cmp
cmp
add
inc
add
add
cmp
jo
or
add
jle
add
add
jle
add
add
gs
jo
or
add
sub
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
add
inc
add
add
push
xor
jo
or
add
jle
add
add
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jmp
add
push
cmp
adc
add
dec
add
cmp
(bad)
(bad)
(bad)
jle
add
add
inc
add
add
xchg
jo
or
add
jle
add
add
jle
add
add
cmps
jo
jo
or
add
sub
sub
add
push
and
add
dec
add
cmp
cmp
add
inc
add
add
ret
jo
jo
or
add
jle
add
add
and
or
add
jle
add
add
jae
add
sub
aad
add
or
add
sub
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
add
inc
add
add
out
add
or
add
jle
add
add
pop
add
add
add
add
jns
add
sub
add
or
sub
add
push
and
add
add
push
add
cmp
std
(bad)
(bad)
jle
add
add
inc
add
add
push
jo
or
add
pop
push
sub
add
push
es
sub
push
sub
cmp
add
add
add
push
add
cmp
cld
(bad)
(bad)
jle
add
add
inc
add
add
pop
jno
jo
or
add
pop
push
sub
add
and
add
dec
add
cmp
cld
(bad)
(bad)
jle
add
add
inc
add
add
int
add
or
add
jb
outs
add
or
add
push
sub
add
push
and
add
add
push
add
cmp
xor
jo
or
add
sub
add
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
add
inc
add
add
pop
jno
jo
or
add
jle
add
add
and
or
add
jle
add
add
jae
add
sub
aad
add
or
add
sub
sub
add
push
and
add
add
push
add
cmp
(bad)
push
jno
jo
or
add
sub
add
and
add
add
push
add
cmp
sti
(bad)
(bad)
jle
add
add
inc
add
add
shl
jo
or
add
jle
add
add
jle
add
add
jmp
add
or
add
sub
sub
add
push
and
add
add
push
add
cmp
jno
jo
or
add
pop
sub
pop
add
push
and
add
add
push
add
cmp
and
add
add
push
add
cmp
adc
jo
or
add
sub
add
sub
xor
jp
add
mov
test
add
or
add
add
sub
add
push
sub
add
jne
add
or
add
push
sub
pop
add
push
jle
add
add
sub
add
push
or
sub
add
or
add
sub
jb
jae
jo
or
add
push
sub
pop
add
push
pop
or
or
scas
add
add
sub
add
push
sub
add
fiadd
push
sub
sub
add
adc
add
add
add
add
or
xor
add
xor
or
add
add
add
add
or
add
lahf
add
add
add
add
add
add
add
add
add
mov
add
mov
add
add
and
add
add
push
add
sub
push
sub
mov
add
pop
sub
push
sub
sub
and
add
add
push
add
sub
jo
or
add
jle
add
add
mov
add
sub
add
and
add
add
push
add
sub
add
add
add
add
dec
add
cmp
(bad)
jle
add
add
inc
add
add
xchg
jo
or
add
sub
add
or
or
add
dec
add
cmp
(bad)
jle
add
or
and
add
add
push
add
cmp
(bad)
(bad)
inc
jb
add
or
add
sbb
add
or
and
add
add
push
add
cmp
(bad)
(bad)
push
jae
jo
or
add
push
sub
pop
add
push
and
add
add
push
add
cmp
(bad)
(bad)
inc
push
pop
sbb
scas
add
or
and
push
add
cmp
(bad)
(bad)
inc
sbb
or
push
pop
and
popf
or
pop
daa
popf
or
add
or
and
add
dec
add
cmp
movs
jae
jo
or
add
push
sub
pop
add
push
push
sub
add
adc
or
adc
add
mov
lds
add
fnstenv
jo
or
add
add
cmp
add
sub
add
jle
add
add
sub
jmp
sub
add
sub
sbb
add
cmps
add
push
es
add
add
aas
je
jo
or
add
adc
sub
add
mov
add
sub
add
push
sub
add
jle
add
add
movs
je
jo
or
add
jle
add
add
fwait
add
add
add
cmp
add
sub
add
add
push
add
add
add
add
add
mov
add
sub
add
add
pop
or
add
pop
adc
sub
jle
add
add
loope
add
or
add
adc
sub
add
mov
add
sub
add
push
sub
add
jle
add
add
push
jne
jo
or
add
jle
add
add
fwait
add
add
add
cmp
add
sub
add
pop
sub
sub
add
adc
add
rol
add
rol
adc
and
or
add
add
add
add
add
add
lea
add
sbb
add
or
add
jns
add
add
add
push
add
sub
pop
sub
add
dec
add
sub
jle
add
or
and
add
add
push
add
sub
test
and
add
dec
add
sub
jo
or
add
jle
add
add
fwait
add
add
add
xchg
add
or
pop
add
push
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
or
and
add
add
push
add
cmp
(bad)
push
jne
jo
or
add
adc
sub
add
mov
add
sub
add
push
push
sub
add
xor
add
add
adc
and
inc
pop
add
add
add
add
add
or
add
ja
add
xor
add
arpl
add
inc
add
add
and
add
add
push
add
sub
push
sub
push
sub
sub
and
add
add
push
add
sub
add
add
dec
add
sub
push
or
add
add
dec
add
sub
push
or
add
add
dec
add
sub
add
push
add
cmp
(bad)
jmp
xchg
add
push
or
add
add
dec
add
cmp
jmp
cwde
add
push
or
sub
add
xor
add
add
adc
and
inc
pop
add
add
add
add
add
or
add
ja
add
xor
add
arpl
add
inc
add
add
and
add
add
push
add
sub
push
sub
push
sub
sub
and
add
add
push
add
sub
add
add
dec
add
sub
push
or
add
add
dec
add
sub
push
or
add
add
dec
add
sub
add
push
add
cmp
(bad)
jmp
lea
add
or
add
add
dec
add
cmp
jmp
mov
add
or
sub
add
xor
mov
add
rol
adc
add
add
or
jo
or
add
push
lea
add
add
stos
add
jae
add
or
jle
add
add
sub
jle
add
add
sub
add
adc
sub
push
add
push
sub
add
add
add
ins
add
add
jb
jbe
jo
or
add
sub
add
add
add
mov
add
and
add
sub
xchg
add
or
add
add
outs
xchg
add
or
push
adc
outs
sbb
add
sub
push
sub
jle
add
add
push
sub
push
sub
add
add
add
add
cmp
fs
add
add
add
adc
add
adc
add
add
add
jb
jbe
jo
or
add
sub
adc
add
and
add
add
add
jb
jbe
jo
or
add
sub
adc
jbe
jo
or
add
sub
pop
sub
adc
add
adc
add
add
add
jb
jbe
jo
or
add
sub
adc
add
adc
add
add
add
jb
jbe
jo
or
add
sub
adc
add
jns
add
push
add
adc
sbb
inc
add
add
add
add
add
add
add
add
add
add
add
dec
add
sub
sub
and
add
add
push
add
sub
push
sub
add
dec
add
sub
push
or
sub
push
sub
sub
and
add
add
push
add
sub
add
add
dec
add
sub
push
or
sub
add
adc
add
icebp
add
add
add
adc
xor
or
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
stos
add
add
add
and
add
add
push
add
sub
pop
or
sub
push
sub
sub
and
add
add
push
add
sub
add
add
add
dec
add
sub
xor
add
add
dec
add
sub
and
push
add
cmp
(bad)
jmp
pop
add
or
add
or
add
add
dec
add
cmp
(bad)
inc
outs
or
add
and
enter
add
dec
add
cmp
(bad)
call
or
add
push
add
cmp
(bad)
(bad)
dec
or
add
dec
add
cmp
test
add
add
dec
add
cmp
sub
sub
add
sbb
add
xor
add
push
add
adc
add
or
add
jb
jbe
jo
or
add
jae
add
or
adc
add
outs
adc
inc
or
add
add
sub
adc
add
add
add
sub
add
adc
add
test
add
add
adc
xor
or
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
scas
add
add
add
and
add
add
push
add
sub
pop
or
sub
push
sub
sub
and
add
add
push
add
sub
add
add
add
dec
add
sub
xor
add
add
dec
add
sub
and
push
add
cmp
(bad)
jmp
pop
add
or
add
or
add
add
dec
add
cmp
(bad)
inc
outs
or
add
outs
or
add
and
ret
and
add
add
push
add
cmp
(bad)
call
or
add
push
add
cmp
(bad)
(bad)
dec
or
add
dec
add
cmp
(bad)
(bad)
jmp
and
add
add
push
add
cmp
(bad)
(bad)
call
sub
sub
add
xor
add
add
push
add
adc
sbb
inc
add
add
add
add
add
add
add
add
add
add
add
dec
add
sub
sub
add
add
dec
add
sub
push
sub
add
dec
add
sub
push
or
sub
push
sub
sub
and
add
add
push
add
sub
add
add
dec
add
sub
push
or
sub
add
adc
add
lods
add
add
add
adc
sbb
or
add
add
add
add
jp
add
or
add
xor
and
add
add
push
add
sub
jle
add
add
ss
jo
or
add
sub
add
sub
push
sub
sub
and
add
add
push
add
sub
add
mov
add
or
add
sub
add
sub
add
dec
add
sub
add
xor
jo
or
add
sub
add
sub
add
dec
add
cmp
(bad)
(bad)
jle
add
add
mov
add
or
add
sub
add
sub
sub
xor
add
add
adc
add
add
jmp
add
or
add
sub
add
sub
add
adc
add
inc
add
add
add
adc
add
add
mov
add
or
add
sub
add
sub
add
or
jo
or
add
sub
add
sub
add
pusha
jp
jo
or
add
sub
add
sub
sub
sbb
add
xor
add
push
add
adc
add
or
add
jb
jp
jo
or
add
jae
add
or
adc
add
outs
adc
inc
or
add
add
sub
adc
add
add
add
sub
add
adc
add
adc
add
push
add
adc
cdq
add
push
or
sub
add
or
sub
add
adc
add
adc
add
adc
add
add
sbb
jo
or
add
sub
add
sub
add
sbb
add
add
add
adc
mov
jle
add
add
push
jnp
jo
or
add
push
outs
dec
add
or
cmp
add
sub
add
push
outs
dec
add
or
sub
or
jle
add
add
mov
outs
inc
add
push
jb
jnp
jo
or
add
sub
dec
add
push
sub
pop
or
sbb
add
dec
add
or
add
push
or
add
outs
or
add
fcom
sub
sub
add
adc
add
add
add
jo
push
add
add
adc
add
adc
add
adc
add
add
ret
jo
or
add
sub
add
sub
add
adc
add
sub
add
adc
add
add
add
sub
add
push
sub
add
sub
add
xor
sub
add
push
sub
add
sub
sub
add
adc
add
dec
add
add
cmp
add
ret
jo
or
add
jb
jl
jo
or
add
sub
add
or
add
add
sub
add
push
sub
jle
add
add
cmp
or
add
jb
add
jo
or
add
sub
add
or
sub
add
sbb
add
lea
add
lds
add
jle
add
add
sub
add
push
sub
into
jl
jo
or
add
add
mov
add
sub
add
jle
add
add
sub
push
adc
adc
adc
add
add
sub
add
push
fiadd
fiadd
adc
adc
xor
jle
add
add
sub
or
push
push
adc
sub
adc
adc
call
push
adc
pop
pop
adc
adc
adc
mov
in
sub
add
add
add
add
add
add
add
xor
add
add
add
add
adc
add
add
sub
add
push
sub
sub
jle
add
add
sub
add
push
fiadd
fiadd
pop
sub
adc
add
add
add
add
add
xor
bound
add
mov
adc
add
add
rol
add
and
push
jb
jge
jo
or
add
sub
jle
add
add
sub
add
or
outs
mov
outs
mov
xchg
add
or
lds
add
sub
add
or
add
or
cmp
add
sub
add
fiadd
push
sub
sub
add
adc
add
add
add
add
sbb
add
mov
add
adc
add
add
rol
add
and
push
jb
jge
jo
or
add
sub
jle
add
add
sub
jae
add
or
adc
inc
adc
or
add
or
outs
xchg
add
or
add
or
jle
add
add
pop
jge
jo
or
add
or
and
pop
add
push
sub
or
outs
add
or
push
pop
pop
adc
adc
adc
jle
add
add
or
add
or
mov
add
ficomp
adc
lds
add
js
add
or
add
adc
cmp
add
sub
add
fiadd
sub
adc
add
add
add
add
add
xor
add
add
adc
jae
add
or
jle
add
add
jle
add
add
pushf
add
add
add
sub
pushf
add
add
jle
add
add
sub
add
push
sub
adc
add
aaa
add
add
add
adc
add
add
mov
jle
add
add
sub
add
push
sbb
sbb
add
add
add
add
sub
add
push
sub
add
push
sbb
add
inc
sub
sub
adc
add
add
add
sub
dec
add
add
add
add
add
add
or
add
sub
and
add
add
push
add
sub
push
outs
lock
or
add
or
dec
pop
sub
push
sub
sub
and
add
add
push
add
sub
or
and
add
add
push
add
sub
add
sbb
sbb
add
push
add
sub
add
outs
and
add
pop
inc
inc
sub
sub
add
sbb
add
test
add
retf
adc
add
add
scas
jge
jo
or
add
push
lea
add
add
stos
add
jae
add
or
jle
add
add
sub
jle
add
add
sub
add
adc
sub
push
add
push
sub
add
add
add
ins
add
add
jb
jle
jo
or
add
sub
add
sbb
add
add
ret
add
or
fisubr
adc
les
add
adc
outs
sbb
add
sub
push
sub
jle
add
add
push
sub
push
sub
add
add
add
add
add
add
add
adc
add
mov
add
add
add
jb
jle
jo
or
add
add
add
sar
sub
add
push
add
add
mov
adc
jo
or
add
jle
add
add
and
inc
add
add
mov
add
add
or
add
jle
add
add
and
inc
add
add
jge
add
or
add
add
add
test
jo
or
add
add
add
lahf
jg
jo
or
add
or
add
mov
or
add
or
add
add
add
or
add
add
add
or
add
add
add
sub
add
rol
sub
add
or
add
add
add
jb
add
jo
or
add
jge
add
add
jae
add
or
add
add
jae
add
or
add
add
add
add
xor
add
add
adc
add
add
je
add
iret
add
push
sub
add
push
jle
add
add
add
add
xor
add
add
add
add
adc
add
add
add
sbb
add
inc
add
add
jnp
add
add
sbb
add
outs
and
add
sub
jle
add
add
jb
add
cmp
add
or
add
sub
add
or
push
jae
add
or
add
add
add
fiadd
add
add
add
add
add
add
sub
push
cmp
add
xor
add
add
add
add
adc
jnp
add
add
sbb
add
outs
and
add
sub
add
mov
add
add
add
add
add
xor
test
add
add
add
sub
dec
add
add
add
add
add
add
or
add
and
add
add
add
add
dec
add
sub
pop
sub
sub
push
sub
sub
and
add
add
push
add
sub
add
mov
add
add
mov
add
outs
and
add
sub
and
add
add
push
add
sub
jo
or
add
sub
add
and
add
add
push
add
sub
jo
or
add
sub
add
push
sub
add
sbb
push
add
add
add
adc
add
add
sub
add
push
or
add
add
dec
add
sub
add
push
push
sub
pop
add
push
jle
add
add
sub
add
push
cmp
add
add
sub
add
or
add
add
jb
sub
jo
or
add
sub
push
xor
jle
add
add
mov
add
push
jle
add
add
and
pop
add
push
add
add
add
jb
sub
jo
or
add
sub
push
jge
add
add
mov
fld
add
push
add
add
add
and
pop
add
push
add
add
add
sbb
add
push
outs
call
xor
jnp
add
add
sbb
fwait
add
or
add
sub
add
push
sub
sbb
add
jge
add
add
sub
add
mov
sub
or
add
jle
add
add
add
push
add
push
sub
pop
add
push
fiadd
add
add
add
jnp
add
add
or
add
push
jle
add
add
mov
add
jge
add
add
add
add
add
add
leave
add
repz
or
xor
add
add
add
add
adc
add
add
mov
jnp
add
add
push
aas
add
or
add
sub
mov
sub
pop
add
add
sub
and
add
xor
add
add
add
add
adc
add
add
mov
jnp
add
add
push
aas
add
or
add
sub
mov
mov
add
jb
add
add
sub
and
add
adc
add
adc
add
add
add
jle
add
add
sub
and
add
sub
add
adc
add
adc
add
add
add
jle
add
add
sub
and
add
sub
add
sbb
add
add
add
add
jle
add
add
sub
add
push
ficom
or
add
add
sub
add
push
sub
add
fiadd
sub
add
adc
add
add
add
adc
adc
xor
je
add
retf
add
adc
cmp
inc
or
add
add
add
or
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
dec
add
sub
add
add
push
add
sub
jo
or
add
sub
add
and
add
add
push
add
sub
add
add
jne
add
push
add
add
push
add
cmp
(bad)
inc
jnp
add
add
mov
add
sub
and
add
add
push
add
cmp
(bad)
inc
add
mov
add
outs
jbe
add
and
add
add
push
add
cmp
(bad)
push
add
push
or
or
add
dec
add
cmp
add
add
add
outs
test
add
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
(bad)
inc
outs
xchg
add
or
or
add
dec
add
cmp
(bad)
(bad)
push
add
add
add
mov
add
sub
pop
add
push
and
add
dec
add
cmp
(bad)
(bad)
inc
outs
jb
add
sub
and
add
add
push
add
cmp
sub
or
add
dec
add
cmp
sub
and
push
add
cmp
sub
sub
xor
add
add
add
add
adc
add
add
jb
add
cmp
add
or
add
add
mov
add
outs
add
add
push
sub
add
push
sub
jb
add
add
sub
add
sub
adc
add
jns
add
add
add
jb
add
add
sub
add
mov
adc
add
push
jle
add
add
and
jo
add
mov
add
add
or
add
jle
add
add
and
jno
add
mov
jno
add
test
add
or
add
sub
jb
add
xchg
add
jo
or
add
xor
sub
add
adc
add
pop
add
add
and
or
add
cmp
add
push
add
sub
add
push
cmp
add
rol
add
rol
add
push
add
push
jb
add
sub
add
push
sub
push
or
add
add
jg
add
add
mov
or
sub
add
sub
add
xor
add
add
add
add
adc
add
sub
add
push
sub
add
jb
add
sub
add
push
jae
add
push
or
add
add
sbb
add
sub
add
push
or
pop
outs
adc
add
pop
sub
add
jle
add
add
sbb
add
sub
add
push
or
pop
outs
adc
add
pop
sub
add
sub
add
push
adc
pop
add
push
sub
add
push
sub
add
push
sub
add
push
sub
push
jb
add
sub
add
push
outs
adc
add
jle
add
add
mov
jmp
add
or
add
jle
add
add
and
inc
add
push
sub
add
sub
add
push
jle
add
add
mov
jmp
add
or
add
jle
add
add
and
inc
add
push
jb
test
jo
or
add
push
sub
add
push
es
add
push
sub
add
sub
jb
test
jo
or
add
sub
add
sub
add
push
es
add
push
sub
add
push
add
sub
add
push
add
inc
ret
add
push
jae
add
or
js
add
js
add
jae
add
jge
add
add
lds
add
cmp
or
add
jle
add
add
inc
add
add
cmp
add
sub
add
push
sub
add
sub
jnp
add
add
mov
add
sub
add
or
add
or
pop
outs
adc
add
pop
sub
add
sub
add
push
fidivr
jnp
add
add
call
jb
test
jo
or
add
sub
add
jle
add
add
push
pop
push
jae
add
or
add
push
add
add
add
or
jnp
add
add
xchg
jb
test
jo
or
add
sub
add
ficomp
add
je
add
or
add
or
cmp
add
sub
add
fiadd
jb
test
jo
or
add
sub
add
sub
add
sti
add
add
add
add
add
add
xor
add
add
jb
test
jo
or
add
sub
add
jle
add
add
mov
jmp
add
or
add
jle
add
add
and
inc
add
push
sub
add
sub
add
ret
push
jle
add
add
mov
jmp
add
or
add
jle
add
add
and
inc
add
push
push
sub
push
es
add
push
sub
add
sub
add
rol
push
sub
add
push
es
add
push
jb
test
jo
or
add
sub
add
fisub
sbb
xchg
jo
or
add
jle
add
add
sub
add
push
jae
add
push
sub
add
fiadd
jb
xchg
jo
or
add
sub
add
sub
add
add
add
add
mov
add
add
xor
add
add
adc
and
inc
pop
add
add
add
add
add
mov
add
add
add
aas
add
add
and
add
add
push
add
sub
add
add
add
adc
or
pop
sub
push
sub
sub
and
add
dec
add
sub
add
add
add
push
add
sub
sub
add
push
sub
add
and
add
add
push
add
sub
push
sub
add
dec
add
cmp
(bad)
inc
jnp
add
add
jecxz
add
add
dec
add
cmp
(bad)
push
xchg
jo
or
add
sub
add
and
add
add
push
add
cmp
(bad)
(bad)
call
jb
xchg
jo
or
add
jb
xchg
jo
or
add
jae
add
push
sub
add
sub
add
adc
add
outs
add
add
add
adc
sbb
or
add
add
add
add
dec
add
add
add
xor
add
add
add
add
dec
add
sub
sub
add
push
pop
sub
push
sub
sub
and
add
add
push
add
sub
sub
add
add
push
add
sub
jo
or
add
sub
add
and
add
add
push
add
sub
push
sub
sbb
add
add
add
adc
xchg
jo
or
add
sub
add
add
add
add
add
or
add
jae
add
push
add
sub
add
push
jge
add
add
jnp
add
add
xor
xchg
jo
or
add
sub
add
jle
add
add
and
add
push
add
add
add
pop
add
add
cmp
add
sub
add
add
lds
add
or
pop
lea
add
adc
sub
adc
or
jb
mov
jo
or
add
push
sub
add
push
or
mov
add
or
adc
cmp
push
adc
call
add
or
add
sbb
arpl
add
(bad)
adc
add
add
out
add
add
or
or
jo
or
add
push
sub
jb
(bad)
jo
or
add
pop
sub
jb
push
add
or
add
sbb
mov
jb
(bad)
jo
or
add
sbb
mov
jb
(bad)
jo
or
add
sbb
mov
jb
adc
jo
or
add
sbb
mov
jb
(bad)
jo
or
add
sbb
mov
jb
adc
jo
or
add
sbb
or
jo
or
add
push
sub
jb
adc
jo
or
add
pop
or
mov
jb
push
add
or
add
pop
or
mov
jb
adc
jo
or
add
pop
or
mov
jb
adc
jo
or
add
pop
or
mov
adc
(bad)
adc
add
add
sbb
sbb
mov
push
add
inc
or
add
add
add
in
add
inc
add
add
add
add
add
rol
add
xor
add
xchg
add
add
add
add
add
mov
adc
add
add
or
sldt
or
inc
add
add
add
push
adc
add
outs
add
add
adc
jle
add
add
data16
jo
or
add
adc
add
push
sub
add
add
add
add
add
or
adc
add
or
mov
add
sub
jb
mov
jo
or
add
sub
add
cmp
adc
add
or
sldt
or
add
add
push
adc
add
outs
add
add
adc
jle
add
add
push
mov
jo
or
add
adc
sub
pop
add
push
add
add
add
add
or
adc
add
or
xor
add
jle
add
add
or
sldt
or
and
add
add
add
push
adc
add
outs
add
add
adc
jle
add
add
push
mov
jo
or
add
adc
sub
pop
add
push
add
add
add
add
or
adc
add
or
rol
add
jle
add
add
or
sldt
or
mov
pop
add
add
push
adc
add
outs
add
add
adc
jle
add
add
xchg
mov
jo
or
add
adc
add
push
sub
add
add
add
add
add
or
adc
add
or
jo
add
jle
add
add
or
sldt
or
pop
add
add
add
add
push
adc
add
outs
add
add
adc
jle
add
add
in
mov
jo
or
add
adc
add
push
sub
add
add
add
add
add
or
adc
add
or
or
daa
add
add
or
sldt
or
stc
add
add
add
add
push
adc
add
outs
add
add
adc
jle
add
add
inc
mov
jo
or
add
adc
add
push
sub
add
add
add
add
add
or
adc
add
or
stos
add
add
add
add
or
sldt
or
xchg
add
add
add
add
push
adc
add
outs
add
add
adc
adc
add
mov
or
add
adc
add
push
sub
add
add
add
add
add
or
adc
add
or
inc
add
add
add
add
or
sldt
or
xor
add
jg
add
add
push
adc
add
outs
add
add
adc
add
cld
mov
jo
or
add
adc
add
push
sub
add
add
add
add
add
or
adc
add
or
in
add
jle
add
add
or
sldt
or
rol
add
jg
add
add
push
adc
add
outs
add
add
adc
jle
add
add
pop
mov
jo
or
add
adc
add
push
sub
add
add
add
add
add
or
adc
add
or
add
add
add
or
sldt
or
ins
add
add
add
add
push
adc
add
outs
add
add
adc
jle
add
add
mov
add
or
add
adc
add
push
sub
add
add
add
add
add
or
adc
add
or
push
add
add
add
add
or
sldt
or
or
add
jg
add
add
push
adc
add
outs
add
add
adc
jle
add
add
push
mov
jo
or
add
adc
add
push
sub
add
add
add
add
add
or
adc
add
or
mov
aas
add
add
or
sldt
or
cmps
add
add
add
add
push
adc
add
outs
add
add
adc
jle
add
add
outs
mov
jo
or
add
adc
add
push
sub
add
add
add
add
add
or
adc
add
or
pop
jle
add
add
or
sldt
or
jg
add
add
push
adc
add
outs
add
add
adc
jle
add
add
int3
mov
jo
or
add
adc
add
push
sub
add
add
add
add
add
or
adc
add
or
pop
pop
pop
adc
adc
adc
mov
jb
(bad)
inc
jnp
add
add
mov
lds
add
adc
sub
add
or
adc
adc
outs
mov
add
or
sbb
mov
fimul
adc
(bad)
push
inc
add
sbb
add
or
add
jge
add
add
sub
jb
lea
jo
or
add
sub
add
sub
add
push
fisub
adc
jb
lea
jo
or
add
jle
add
add
adc
push
add
push
jae
add
push
sub
add
fiadd
jb
mov
jo
or
add
sub
add
sub
add
add
add
add
dec
pop
add
and
add
jno
add
push
add
add
add
add
pop
add
add
add
xor
mov
add
add
sbb
inc
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
sub
jle
add
add
add
push
or
add
add
dec
add
sub
jb
push
add
or
add
push
sub
pop
add
push
and
add
add
push
add
sub
jo
or
add
sub
add
pop
sub
push
sub
sub
and
add
add
push
add
cmp
inc
sub
and
add
add
dec
add
cmp
(bad)
inc
outs
xchg
add
or
push
add
or
add
sub
push
sub
xor
add
add
mov
or
add
sub
add
jle
add
add
add
push
or
add
add
(bad)
push
add
or
add
push
sub
pop
add
push
push
sub
add
add
jge
add
add
pop
jge
add
add
jae
add
or
add
add
sub
add
or
add
add
xor
add
add
add
add
add
add
test
add
add
add
push
sub
add
or
add
sub
jb
mov
jo
or
add
add
add
add
add
add
inc
add
mov
lds
add
sub
add
push
pop
or
add
add
add
inc
add
mov
lds
add
sub
add
push
pop
add
add
push
add
and
add
adc
add
sub
add
adc
add
pusha
add
add
jno
or
add
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
add
pushf
add
add
add
fiadd
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
dec
add
sub
add
add
and
add
add
push
add
cmp
(bad)
inc
jb
add
sub
add
push
sub
stos
add
add
sbb
add
dec
add
cmp
(bad)
inc
jle
add
add
adc
add
sub
sldt
add
push
add
cmp
(bad)
(bad)
inc
add
add
add
add
add
and
add
dec
add
cmp
add
add
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
jle
add
add
inc
add
add
add
push
add
add
push
add
cmp
(bad)
(bad)
inc
jle
add
add
pop
add
add
add
or
add
dec
add
cmp
jle
add
add
add
push
add
add
push
add
cmp
jle
add
add
pop
add
add
add
or
add
dec
add
cmp
jle
add
add
add
add
and
add
add
push
add
cmp
(bad)
inc
jle
add
add
adc
add
sub
adc
add
dec
add
cmp
(bad)
inc
jle
add
add
adc
add
sub
adc
add
dec
add
cmp
(bad)
(bad)
inc
jle
add
add
pop
add
add
add
push
add
add
push
add
cmp
jle
add
add
pop
add
add
add
sub
push
sub
sub
and
add
add
push
add
cmp
std
(bad)
inc
jle
add
add
add
add
and
add
add
push
add
cmp
std
(bad)
inc
jle
add
add
add
add
and
push
add
cmp
jle
add
add
pop
add
add
add
add
add
dec
add
cmp
jle
add
add
pop
add
add
add
adc
add
dec
add
cmp
(bad)
inc
jle
add
add
add
add
and
add
add
push
add
cmp
(bad)
inc
jle
add
add
pop
add
add
add
adc
add
dec
add
cmp
(bad)
inc
jle
add
add
inc
add
add
add
or
push
add
cmp
add
add
pop
add
add
add
adc
push
add
cmp
std
(bad)
inc
add
add
add
adc
add
sub
pop
add
add
push
add
cmp
cld
(bad)
inc
jle
add
add
add
add
add
dec
add
cmp
cld
(bad)
inc
jnp
add
add
cmp
add
and
add
add
push
add
cmp
add
add
add
add
add
add
adc
sbb
add
bound
add
add
and
test
add
sub
rol
add
rol
add
push
add
push
jb
mov
jo
or
add
sub
push
or
add
add
sub
add
push
sub
add
add
sub
add
jge
add
add
add
fiadd
add
jge
add
add
pop
jge
add
add
add
add
add
add
adc
aas
push
add
or
xor
add
add
add
add
adc
mov
jo
or
add
sub
sbb
add
add
add
adc
add
jo
or
add
jae
add
push
sub
add
sub
pop
jge
add
add
jae
add
push
jge
add
add
jnp
add
add
mov
push
jge
add
add
jnp
add
add
ss
add
add
sub
add
push
add
add
add
inc
add
add
cmp
add
sub
add
jle
add
add
jnp
add
add
dec
add
push
sub
jb
pop
jo
or
add
sub
add
add
add
add
xchg
push
pop
jb
pop
jo
or
add
jle
add
add
sub
add
push
jae
add
push
sub
add
fiadd
pop
jb
pop
jo
or
add
jle
add
add
sub
add
push
jae
add
push
sub
add
fisub
sbb
nop
add
or
add
jle
add
add
sub
add
push
jae
add
push
sub
add
fiadd
sub
add
add
add
add
add
xchg
xchg
add
cmps
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
adc
xor
or
add
add
add
add
fiadd
add
xchg
add
add
add
lock
add
add
add
add
add
add
or
add
lods
add
add
and
add
add
push
add
sub
add
add
add
push
pop
sub
push
sub
cmp
add
add
dec
add
sub
add
lds
add
and
add
add
push
add
sub
jo
or
add
sub
add
and
add
add
push
add
cmp
(bad)
push
nop
add
or
add
sub
add
and
push
add
cmp
(bad)
inc
jae
add
push
jge
add
add
add
add
dec
add
cmp
(bad)
inc
jnp
add
add
rol
push
and
add
add
push
add
cmp
(bad)
(bad)
inc
push
jge
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
xor
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
mov
pop
add
add
push
add
cmp
(bad)
(bad)
jmp
call
add
or
add
adc
add
jle
add
add
add
sub
dec
add
add
add
add
push
add
add
add
add
and
add
add
push
add
sub
add
add
add
inc
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
add
push
jge
add
add
add
add
dec
add
sub
jo
or
add
sub
add
and
add
add
push
add
sub
add
rol
push
sub
add
xor
add
add
add
add
adc
out
add
push
sub
add
add
add
add
sub
xor
add
add
adc
add
add
mov
add
sub
add
jb
nop
add
or
add
jle
add
add
inc
add
add
pop
add
add
add
sub
add
push
jae
add
or
push
or
add
add
add
xor
add
add
add
add
adc
add
add
add
adc
add
pop
add
add
add
adc
or
adc
add
add
pop
add
rol
add
jb
nop
add
or
add
jle
add
add
enter
or
je
add
sbb
add
adc
add
add
pop
add
rol
add
jb
mov
jo
or
add
jle
add
add
enter
or
je
add
sbb
add
adc
add
add
add
adc
add
add
rol
add
jb
nop
add
or
add
jle
add
add
int
add
sub
adc
push
add
add
add
add
adc
add
add
mov
add
cmp
add
gs
push
sub
add
push
jle
add
add
mov
add
cld
nop
add
or
add
sub
and
adc
push
add
add
add
add
adc
add
add
mov
add
cmp
add
gs
push
sub
add
push
jle
add
add
mov
add
cld
nop
add
or
add
sub
and
adc
push
add
add
add
add
adc
add
add
mov
add
cmp
add
gs
push
sub
add
push
jle
add
add
lea
add
cld
nop
add
or
add
sub
and
adc
push
add
add
add
add
adc
add
add
mov
add
cmp
add
gs
push
sub
add
push
jle
add
add
lea
add
push
xchg
add
or
add
sub
and
adc
push
add
add
add
add
adc
add
add
mov
add
cmp
add
gs
push
sub
add
push
jle
add
add
mov
add
cld
nop
add
or
add
sub
and
adc
push
add
add
add
add
adc
add
add
mov
add
cmp
add
gs
push
sub
add
push
jle
add
add
pop
add
or
jo
or
add
sub
and
adc
push
add
add
add
add
adc
add
add
mov
add
cmp
add
gs
push
sub
add
push
jle
add
add
nop
add
add
cld
nop
add
or
add
sub
and
adc
push
add
add
add
add
adc
add
add
mov
add
cmp
add
gs
push
sub
add
push
jle
add
add
nop
add
add
push
xchg
add
or
add
sub
and
adc
push
add
add
add
add
adc
add
add
mov
add
cmp
add
gs
push
sub
add
push
jle
add
add
xchg
add
add
cld
nop
add
or
add
sub
and
adc
push
add
add
add
add
adc
add
add
mov
add
cmp
add
gs
push
sub
add
push
jle
add
add
xchg
add
add
push
xchg
add
or
add
sub
and
adc
push
add
add
add
add
adc
add
add
mov
add
cmp
add
gs
push
sub
add
push
jle
add
add
xchg
add
add
or
jo
or
add
sub
and
adc
push
add
add
add
add
adc
add
add
mov
add
cmp
add
gs
push
sub
add
push
jle
add
add
xchg
add
add
adc
add
or
add
sub
and
adc
push
add
add
add
add
adc
add
add
mov
add
cmp
add
gs
push
sub
add
push
jle
add
add
xchg
add
add
and
add
push
sub
and
adc
push
add
add
add
add
adc
add
add
mov
add
cmp
add
gs
push
sub
add
push
jle
add
add
xchg
add
add
or
jo
or
add
sub
and
adc
pop
add
add
adc
add
add
xchg
add
add
push
add
sbb
rol
add
add
jo
add
sbb
rol
add
push
sub
add
sbb
add
add
add
adc
xchg
add
or
add
sub
add
push
or
add
add
fld
add
sub
add
push
sub
jb
xchg
add
or
add
sub
add
jb
adc
jo
or
add
jle
add
add
mov
add
or
add
sub
add
push
sub
add
push
pop
push
sub
add
sub
jb
xchg
add
or
add
sub
add
pop
or
and
xchg
add
or
add
sub
add
sub
jb
xchg
add
or
add
sub
add
sub
add
push
sub
pop
jb
xchg
add
or
add
sub
add
jb
adc
jo
or
add
jle
add
add
mov
add
or
add
sub
add
push
sub
add
push
pop
push
sub
add
sub
jb
xchg
add
or
add
sub
add
push
or
xchg
add
or
add
sub
add
sub
jb
xchg
add
or
add
sub
add
ficomp
or
add
add
lock
add
or
add
pop
sub
add
push
sub
add
push
or
add
sub
sub
add
add
add
add
adc
stc
or
pop
or
xor
add
add
adc
xchg
add
or
add
sub
add
push
or
add
add
fld
add
sub
add
push
sub
jb
xchg
add
or
add
sub
add
jb
adc
jo
or
add
jle
add
add
(bad)
xchg
add
or
add
sub
add
push
sub
add
push
pop
push
sub
add
sub
jb
xchg
add
or
add
sub
add
pop
or
and
xchg
add
or
add
sub
add
sub
jb
xchg
add
or
add
sub
add
sub
add
push
sub
pop
jb
xchg
add
or
add
sub
add
jb
adc
jo
or
add
jle
add
add
(bad)
xchg
add
or
add
sub
add
push
sub
add
push
pop
push
sub
add
sub
jb
xchg
add
or
add
sub
add
push
or
and
xchg
add
or
add
sub
add
sub
jb
xchg
add
or
add
sub
add
ficomp
or
add
add
ss
add
or
add
pop
sub
add
push
sub
add
push
or
add
sub
sub
add
add
add
adc
sti
or
pop
or
xor
add
add
rol
add
jb
xchg
add
or
add
sub
add
jle
add
add
fld
add
sub
add
push
sub
jle
add
add
fild
add
sub
add
push
sub
jle
add
add
loope
add
sub
add
push
sub
jle
add
add
fiadd
add
sub
add
push
sub
jle
add
add
loopne
add
sub
add
push
sub
jle
add
add
loop
add
sub
add
push
sub
add
sub
add
push
es
add
push
sub
mov
add
jle
add
add
fld
add
sub
add
push
cmp
add
jle
add
add
fild
add
sub
add
push
cmp
add
jle
add
add
loop
add
sub
add
push
cmp
add
jle
add
add
fiadd
add
sub
add
push
cmp
add
add
add
add
loopne
add
sub
add
push
cmp
add
add
add
push
adc
jb
xchg
add
or
add
sub
add
adc
jle
add
or
add
add
outs
mov
lds
add
adc
sub
add
or
adc
and
add
adc
add
loop
add
or
add
push
push
sbb
add
or
push
outs
mov
call
mov
add
jge
add
add
or
mov
fimul
adc
(bad)
push
inc
add
sbb
add
or
adc
jnp
add
add
mov
add
sub
jnp
add
add
xchg
cmp
jo
or
add
sub
mov
or
add
adc
add
not
add
push
jle
add
add
push
add
sub
add
push
sub
mov
mov
sub
add
push
adc
jnp
add
add
and
pop
add
push
sub
add
push
or
add
add
cbw
add
or
add
pop
outs
rol
or
cmp
add
sub
add
pop
outs
rol
or
ds
outs
rol
or
add
or
or
mov
add
adc
retf
or
sub
add
push
sub
jle
add
add
ret
jo
or
add
or
and
pop
add
push
cmp
add
add
adc
add
or
add
add
mov
cs
add
or
add
or
and
pop
add
push
adc
or
add
or
add
add
lds
add
xchg
cdq
add
or
add
adc
movs
add
add
inc
add
add
cmp
add
sub
add
adc
push
add
and
add
jae
add
or
add
sub
mov
add
add
push
sub
add
push
sub
pop
add
push
or
in
add
push
sub
jle
add
add
push
call
push
or
and
pop
add
push
cmp
push
add
push
adc
adc
adc
jge
add
add
mov
into
call
push
or
and
pop
add
push
adc
pop
or
add
or
add
add
lds
add
inc
fwait
add
or
add
adc
jnp
add
add
inc
add
add
cmp
add
sub
add
adc
inc
pop
add
push
jae
add
or
add
or
add
add
add
push
jle
add
add
mov
or
add
sub
add
push
sub
pop
add
push
adc
retf
add
or
push
(bad)
(bad)
fimul
adc
push
inc
add
sbb
add
or
pop
adc
fisubr
pushf
add
or
add
sub
add
push
adc
ficomp
pop
jle
add
add
call
add
adc
sub
add
push
sub
add
push
adc
fidiv
jb
pushf
add
or
add
sub
add
push
adc
fisub
adc
jle
add
add
cmp
add
or
add
adc
sub
add
push
sub
add
push
adc
fiadd
adc
sub
add
add
add
add
and
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xchg
add
add
add
adc
sbb
or
add
add
add
add
pop
add
add
add
add
add
add
add
add
dec
add
sub
jle
add
add
jne
add
es
sub
push
sub
sub
and
add
add
push
add
sub
add
jne
add
sub
and
add
add
push
add
sub
jo
or
add
sub
add
and
add
add
push
add
sub
jb
popf
add
or
add
sub
jne
add
sub
sub
add
xor
jge
add
rol
add
sub
or
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
add
add
add
add
or
push
add
xchg
add
add
loop
add
or
add
add
dec
add
or
add
push
add
adc
add
add
dec
add
add
pop
adc
add
push
add
(bad)
call
add
mov
pop
and
add
add
push
add
(bad)
inc
sub
and
add
add
push
add
(bad)
dec
adc
or
sub
push
sub
sub
and
add
add
push
add
(bad)
push
popf
add
or
add
jle
add
add
mov
add
sub
add
and
add
add
push
add
(bad)
call
or
add
add
dec
add
(bad)
(bad)
fisubr
or
add
dec
add
(bad)
(bad)
cmp
(bad)
jmp
or
add
dec
add
(bad)
inc
outs
in
add
or
add
add
mov
add
cmp
(bad)
jmp
add
add
dec
add
(bad)
push
sahf
add
or
add
jle
add
add
mov
add
sub
add
and
add
add
push
add
(bad)
call
sub
sub
add
adc
add
cmps
add
add
add
adc
inc
dec
add
add
add
add
sub
add
inc
add
add
add
add
add
add
add
pop
add
add
add
into
add
add
add
add
add
add
add
hlt
add
add
and
add
add
push
push
add
scas
jb
sahf
add
or
add
push
sub
pop
add
push
and
add
add
push
push
add
pop
sub
add
or
and
push
push
add
jp
(bad)
call
add
aas
sti
add
add
push
add
add
push
push
add
popa
(bad)
(bad)
inc
adc
add
add
dec
push
add
push
(bad)
(bad)
call
or
add
push
push
add
inc
(bad)
(bad)
dec
cmp
add
add
dec
push
add
sub
(bad)
(bad)
jle
add
add
mov
add
or
add
sub
and
add
add
push
push
add
or
(bad)
dec
outs
in
add
or
sub
push
and
add
add
push
push
add
in
(bad)
(bad)
(bad)
fisttp
add
push
push
add
(bad)
(bad)
(bad)
cmp
(bad)
jmp
add
add
dec
push
add
(bad)
(bad)
(bad)
push
sahf
add
or
add
push
sub
pop
add
push
and
add
dec
push
add
movs
(bad)
(bad)
call
add
and
add
add
push
push
add
nop
(bad)
(bad)
call
adc
sub
cmp
(bad)
(bad)
jmp
or
add
dec
push
add
je
(bad)
call
add
add
add
add
push
push
add
pusha
(bad)
(bad)
call
sub
sub
add
xor
add
add
adc
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
or
add
cmps
add
add
add
add
add
add
add
cwde
add
add
add
add
add
je
add
mov
add
push
add
add
and
add
add
push
push
add
fst
add
add
or
add
dec
push
add
mov
add
and
add
add
push
push
add
ja
(bad)
push
lahf
add
or
add
add
mov
add
sub
add
pop
sub
push
sub
sub
and
add
add
push
push
add
dec
(bad)
(bad)
(bad)
jle
add
add
loop
add
or
adc
add
dec
push
add
xor
(bad)
(bad)
cmp
add
add
dec
push
add
and
(bad)
call
adc
add
push
push
add
ud0
dec
add
sub
ja
(bad)
jmp
push
add
add
push
push
add
hlt
(bad)
(bad)
call
add
add
add
add
push
push
add
loopne
(bad)
inc
adc
add
add
dec
push
add
iret
(bad)
(bad)
inc
outs
in
add
or
add
add
mov
add
cmp
(bad)
(bad)
jmp
push
add
add
push
push
add
lods
(bad)
(bad)
push
lahf
add
or
add
jle
add
add
mov
add
sub
add
and
push
push
add
test
(bad)
inc
outs
out
add
sub
add
or
or
push
push
add
imul
inc
cmp
(bad)
(bad)
jmp
add
add
dec
push
add
push
(bad)
(bad)
inc
sub
aad
(bad)
jmp
add
add
dec
push
add
ds
(bad)
call
or
add
push
push
add
cs
(bad)
push
lahf
add
or
add
sub
add
and
add
dec
push
add
adc
(bad)
call
sub
adc
add
dec
push
add
add
(bad)
call
add
aas
add
(bad)
jmp
or
add
dec
push
add
call
or
add
push
jle
add
add
mov
add
sub
add
and
add
add
push
push
add
sar
call
sub
sub
add
adc
add
pop
add
add
add
adc
pop
dec
add
add
add
add
add
add
mov
add
loopne
add
add
add
jo
add
jecxz
add
movs
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
push
pop
add
xchg
or
add
or
jae
add
or
add
push
pop
add
adc
and
add
add
push
pop
add
jo
(bad)
dec
add
sub
mov
or
push
pop
add
push
(bad)
(bad)
(bad)
jle
add
add
mov
add
or
add
sub
and
add
add
push
pop
add
xor
(bad)
inc
sub
add
or
and
add
add
push
pop
add
sbb
mov
add
push
add
mov
add
sub
add
and
add
add
push
pop
add
cli
(bad)
(bad)
call
adc
and
add
add
push
pop
add
jmp
push
and
add
add
push
pop
add
fsin
(bad)
call
push
adc
and
add
add
push
pop
add
ret
(bad)
(bad)
dec
cmp
add
add
sldt
add
push
pop
add
scas
(bad)
(bad)
dec
outs
in
add
or
sub
fiadd
add
and
push
pop
add
nop
(bad)
(bad)
inc
sub
push
add
add
dec
pop
add
ja
(bad)
(bad)
(bad)
add
add
or
add
dec
pop
add
fs
(bad)
call
add
and
add
dec
pop
add
push
(bad)
(bad)
push
mov
add
push
sub
add
and
add
add
push
pop
add
xor
(bad)
call
adc
or
add
dec
pop
add
and
(bad)
push
mov
add
push
push
sub
pop
add
push
and
add
dec
pop
add
(bad)
std
(bad)
push
sahf
add
or
add
push
sub
pop
add
push
and
add
add
push
pop
add
fdivr
(bad)
inc
adc
sub
cmp
(bad)
(bad)
jmp
adc
add
dec
pop
add
sar
call
push
pop
pop
adc
and
add
add
push
pop
add
lods
std
(bad)
call
sub
add
add
xor
add
add
add
dec
dec
add
add
add
add
add
add
mov
add
add
add
enter
outs
add
add
add
inc
add
add
add
xor
add
pop
add
add
add
or
add
sub
and
add
add
push
push
add
stos
or
mov
add
sub
add
dec
push
add
cwde
or
and
add
add
push
push
add
mov
add
or
and
add
add
push
push
add
jbe
(bad)
inc
or
add
or
push
sub
sub
and
add
add
push
push
add
push
(bad)
(bad)
call
add
and
add
add
push
push
add
inc
(bad)
(bad)
call
adc
add
push
push
add
xor
(bad)
push
mov
add
push
sub
add
or
and
add
add
push
push
add
adc
(bad)
dec
outs
in
add
or
mov
add
push
sub
cmps
and
add
add
push
push
add
out
(bad)
(bad)
inc
or
add
add
sub
add
push
outs
mov
or
add
dec
push
add
iret
(bad)
(bad)
push
add
or
add
or
mov
add
sub
add
and
add
add
push
push
add
lods
(bad)
(bad)
inc
adc
add
add
dec
push
add
fwait
(bad)
(bad)
dec
outs
mov
and
add
add
push
push
add
xchg
(bad)
dec
outs
out
add
sub
add
or
add
push
push
add
ins
(bad)
(bad)
call
add
add
add
add
push
push
add
pop
(bad)
(bad)
jmp
push
and
add
add
push
push
add
dec
(bad)
(bad)
call
add
xor
push
sub
xor
add
add
add
dec
dec
add
add
add
add
mov
add
add
add
repnz
add
add
add
add
mov
add
iret
add
add
add
add
add
aad
add
movs
add
add
add
add
add
nop
add
add
and
add
add
push
add
sub
push
and
add
add
push
add
sub
jo
or
add
push
sub
pop
add
push
and
add
add
push
add
cmp
(bad)
jmp
xlat
add
push
sub
add
push
and
add
add
push
add
cmp
(bad)
jmp
jecxz
add
sub
add
push
and
add
dec
add
cmp
(bad)
push
mov
add
push
sub
add
and
add
add
push
add
cmp
(bad)
(bad)
jmp
fild
add
sub
add
push
and
push
add
cmp
(bad)
(bad)
jmp
fadd
add
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jmp
fld
add
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
(bad)
jle
add
add
jecxz
add
sub
add
push
and
add
dec
add
cmp
(bad)
(bad)
(bad)
jle
add
add
in
add
sub
add
push
and
add
add
push
add
cmp
add
push
sub
add
push
and
add
add
push
add
cmp
add
push
sub
and
add
add
push
add
cmp
(bad)
push
mov
add
push
sub
add
push
sub
add
push
jle
add
add
cmp
add
gs
push
sub
add
push
sub
and
add
add
push
add
cmp
(bad)
(bad)
jmp
fadd
add
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jmp
jmp
(bad)
call
sub
push
sub
cmp
(bad)
jmp
add
push
add
cmp
(bad)
(bad)
jmp
in
add
push
pop
push
sub
add
and
add
add
push
add
cmp
std
(bad)
push
mov
add
push
sub
add
sub
add
xor
add
add
adc
add
add
repnz
add
push
add
sub
add
push
sub
add
jle
add
add
sub
add
push
sub
add
rol
add
add
cmp
add
jne
add
sbb
push
sub
push
mov
xor
jle
add
add
push
mov
add
push
add
sub
add
push
sub
add
jle
add
add
push
sub
add
jb
mov
add
push
push
lea
add
add
xchg
add
or
pop
add
push
ficomp
add
push
movs
add
or
add
pop
sub
add
push
sub
add
fiadd
sub
add
adc
add
add
add
add
adc
add
mov
add
adc
inc
dec
add
add
add
add
add
add
adc
add
mov
add
jecxz
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
push
add
sub
push
sub
add
push
and
push
add
sub
push
sub
add
push
and
push
add
sub
jo
or
add
sub
add
and
add
add
push
add
cmp
(bad)
jmp
fild
add
sub
add
push
and
add
add
push
add
cmp
(bad)
jmp
loope
add
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jmp
xlat
add
push
sub
add
push
and
add
dec
add
cmp
(bad)
(bad)
jmp
fild
add
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jmp
loop
add
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jmp
fiadd
add
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jmp
fadd
add
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jmp
fld
add
sub
add
push
and
add
add
push
add
cmp
fiadd
add
sub
add
push
and
add
dec
add
cmp
loopne
add
sub
add
push
pop
sub
push
sub
cmp
(bad)
jmp
add
add
dec
add
cmp
(bad)
jmp
fadd
add
sub
add
push
and
add
add
push
add
cmp
(bad)
push
movs
add
or
add
sub
add
sub
add
sbb
add
ja
add
dec
add
adc
add
add
fisub
add
add
and
pop
add
push
jle
add
add
sub
add
push
sub
jle
add
add
sub
add
push
add
and
pop
add
push
jle
add
add
sub
add
push
fimul
add
ins
add
push
fiadd
ficomp
add
cmp
add
or
add
push
sub
add
push
sub
add
fiadd
sub
add
add
add
or
add
add
add
add
pop
add
push
add
add
add
sub
xor
add
add
add
movs
add
or
add
or
add
add
push
add
xchg
movs
add
or
add
sub
mov
add
jo
add
lea
add
mov
push
add
pushf
movs
add
or
add
sub
mov
add
test
add
or
add
or
add
add
jo
add
addr16
add
or
add
jle
add
or
fadd
push
add
or
add
jle
add
or
add
or
add
or
add
jle
add
or
add
or
jle
add
add
jo
add
addr16
add
or
add
jle
add
or
fadd
push
add
or
add
jle
add
or
add
or
add
or
add
jle
add
or
add
or
pop
adc
scas
add
or
jle
add
add
push
add
mov
or
add
sub
xchg
add
add
dec
mov
jo
or
add
adc
movs
add
or
add
adc
add
or
add
adc
add
add
add
add
sub
xor
push
add
add
add
adc
add
add
add
outs
nop
add
or
add
push
add
add
add
sub
xor
in
add
add
add
adc
sub
or
add
add
add
add
add
add
movs
add
add
add
sbb
add
cmp
add
or
add
add
pop
add
add
push
add
sub
cmp
add
add
push
add
sub
add
dec
add
sub
sbb
add
push
add
sub
and
add
add
push
add
sub
add
jnp
add
add
jnp
add
add
cmp
add
or
add
add
dec
add
cmp
(bad)
inc
push
outs
arpl
add
es
sub
push
sub
sub
and
add
add
push
add
cmp
inc
jnp
add
add
add
add
or
push
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
sgdtd
push
sub
add
or
add
jae
add
push
jp
add
push
add
add
add
sub
xor
add
add
add
add
adc
jnp
add
or
jnp
add
or
or
add
sub
add
add
add
add
sub
xor
add
add
add
add
add
add
add
leave
add
push
sub
add
add
add
sub
xor
add
add
adc
add
add
add
add
add
jnp
add
add
stos
add
or
mov
stc
add
add
add
mov
add
add
add
add
add
sub
xor
add
add
adc
sbb
or
add
add
add
add
add
add
push
add
add
add
add
add
add
dec
add
sub
add
jl
add
add
mov
outs
lods
add
or
add
or
sub
push
sub
sub
and
add
add
push
add
sub
add
or
add
outs
pop
add
or
add
add
dec
add
sub
add
or
add
add
dec
add
sub
add
pop
jge
add
add
add
add
add
add
add
sub
xor
add
add
adc
sbb
inc
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
sub
add
add
or
cmps
add
or
add
outs
add
add
outs
add
add
outs
lods
add
or
and
add
add
push
add
sub
add
outs
inc
add
or
and
add
add
push
add
sub
add
push
sub
sub
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
or
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
or
add
add
or
add
push
add
add
add
sub
add
add
add
sub
xor
add
add
adc
jnp
add
add
loope
add
add
add
add
mov
sub
add
sub
add
add
add
add
sub
xor
add
add
adc
jnp
add
add
loop
add
add
add
add
mov
sub
add
sub
add
add
or
add
sub
or
and
add
lea
add
add
popa
add
or
sub
add
xor
add
add
adc
add
add
test
add
add
jle
add
add
test
add
sub
add
push
sub
jle
add
add
test
add
sub
add
add
add
jns
add
or
push
or
xor
add
add
jle
add
add
pop
outs
pushf
add
or
add
add
jle
add
add
imul
add
sub
add
pop
pop
or
add
add
or
(bad)
jle
add
add
test
add
jle
add
add
sub
add
push
sub
add
add
add
sub
add
push
or
or
xchg
add
add
sub
add
sub
add
adc
add
add
add
add
add
add
cmp
add
gs
push
adc
push
or
add
jae
add
or
cli
add
add
xor
add
add
adc
add
add
pushf
add
add
inc
add
push
sbb
dec
jle
add
add
inc
add
add
mov
add
sub
inc
cmps
add
add
add
or
add
add
add
lea
or
add
or
add
add
jle
add
add
pop
add
push
sub
add
adc
jle
add
add
adc
sub
add
jle
add
add
pop
jle
add
add
cmp
add
pop
add
push
jb
cmps
add
push
push
add
or
sub
jle
add
add
sub
push
add
sub
add
add
adc
mov
stos
add
add
sbb
add
sub
or
jle
add
add
sub
fimul
add
push
sub
add
outs
jb
add
adc
adc
add
add
stos
add
add
add
xor
add
sub
jle
add
add
adc
adc
add
imul
add
sbb
add
add
sldt
add
add
outs
add
add
adc
push
add
add
add
add
adc
jae
add
or
jle
add
add
sub
add
push
or
add
add
jle
add
add
sub
loop
add
sub
imul
or
add
sub
jle
add
add
repnz
add
cwde
add
push
pop
sub
cs
push
jle
add
add
jle
add
add
repnz
add
cwde
add
push
pop
sub
cs
push
jle
add
add
sub
add
jae
add
or
add
push
jae
add
or
push
adc
jae
add
or
jle
add
add
jle
add
add
add
push
imul
adc
adc
sub
push
add
push
xor
lea
stos
add
add
add
add
sub
add
push
sub
xchg
cmps
add
lods
add
add
mov
add
outs
mov
add
push
call
lods
add
add
add
sbb
add
add
add
adc
add
add
add
add
add
lea
add
sub
fiadd
es
add
add
and
add
add
add
or
movhps
adc
mov
movups
call
or
add
adc
cmps
add
popf
add
or
pop
adc
rol
add
adc
adc
push
pop
and
sahf
add
or
add
add
mov
push
adc
push
sub
pop
jg
add
add
pop
and
add
or
mov
add
sub
retf
add
push
(bad)
add
add
outs
mov
sbb
outs
xchg
add
or
sub
add
add
fisttp
add
add
outs
movs
add
or
or
or
or
or
adc
adc
push
rol
add
add
pop
add
mov
pop
adc
adc
adc
adc
pop
pop
call
adc
pop
pop
adc
adc
adc
xor
jle
add
or
outs
xchg
add
or
or
pop
jae
add
or
or
or
xchg
add
or
or
add
or
add
or
or
xor
or
or
add
or
or
xor
or
or
add
or
or
xor
or
or
add
or
or
xor
sbb
push
sub
or
or
push
outs
call
pop
adc
adc
adc
xor
adc
jle
add
or
add
or
outs
fwait
add
or
or
or
add
or
or
outs
cwde
add
or
or
xchg
add
or
add
fiadd
adc
pop
pop
adc
adc
adc
mov
push
(bad)
(bad)
jmp
add
inc
add
add
add
sbb
add
les
add
add
add
mov
add
add
scas
add
rol
fiadd
add
add
mov
or
add
fiadd
add
add
les
or
add
les
add
push
add
mov
add
sub
and
add
sub
add
push
sub
and
add
adc
add
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
add
adc
add
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
add
adc
add
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
add
push
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
add
push
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
add
push
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
add
push
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
add
push
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
add
push
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
add
push
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
add
push
sub
and
adc
add
sub
and
adc
add
sub
and
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
add
adc
add
sub
and
add
sub
add
push
sub
and
adc
add
sub
and
add
add
adc
add
sub
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
jle
add
push
add
and
jb
outs
addr16
add
add
add
add
cmps
add
and
add
stos
add
adc
add
and
dec
inc
add
add
stos
add
inc
add
and
outs
bound
add
add
add
add
add
push
mov
add
add
and
add
add
add
add
add
push
add
xor
add
add
add
retf
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
pop
add
add
add
and
add
add
add
add
add
push
add
add
add
add
add
sub
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
push
add
pop
push
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
out
add
add
out
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
out
add
add
out
add
add
add
add
add
add
add
add
add
sbb
add
add
xor
into
add
add
add
inc
add
dec
add
push
add
bound
imul
add
test
mov
cdq
add
mov
add
add
add
iret
add
fiadd
jecxz
into
add
add
add
test
push
add
add
push
add
add
push
add
add
push
sub
push
add
sub
push
add
add
add
add
add
into
add
add
into
add
add
add
xchg
push
into
add
add
add
add
add
add
push
out
add
add
push
out
add
add
push
outs
add
add
push
add
add
add
add
pop
push
add
add
pop
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
pop
outs
add
add
pop
add
add
or
add
add
add
add
or
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
add
add
or
push
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
retf
add
or
push
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
or
push
add
or
push
add
pusha
or
add
add
add
add
add
add
add
add
add
add
add
add
add
push
out
add
add
or
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
loope
sub
push
add
or
push
push
add
add
or
push
push
add
pop
add
add
or
push
push
add
or
push
push
add
add
add
add
push
out
add
add
out
add
add
add
add
add
or
add
add
out
add
add
pop
add
add
or
add
add
imul
imul
add
add
out
add
add
add
add
add
add
push
push
add
add
push
add
add
add
add
fimul
out
add
add
add
add
add
add
add
add
add
or
mov
or
or
add
or
or
add
or
in
push
add
or
add
add
or
add
add
add
add
jno
push
add
add
add
or
or
add
or
or
add
or
or
pop
or
pop
or
(bad)
or
add
(bad)
or
add
(bad)
or
add
or
add
add
add
add
add
add
or
fisttp
jecxz
repnz
repnz
repnz
repnz
repnz
pop
push
push
add
pop
push
push
add
add
add
add
add
add
add
push
pusha
or
add
push
pusha
or
add
push
add
push
add
(bad)
or
add
sidtd
push
add
pop
femms
add
repnz
repnz
stos
movhps
mov
add
bswap
movhps
test
cmova
adc
add
add
retf
movhps
inc
adc
bndldx
push
adc
add
add
add
add
add
add
adc
jo
jne
add
add
adc
add
add
add
add
adc
jg
jne
or
or
or
add
adc
test
jne
adc
push
add
add
add
add
add
add
add
adc
mov
jne
add
add
adc
add
add
sub
add
add
add
sub
add
adc
add
add
aaa
add
add
add
add
aaa
add
add
add
add
cmp
add
add
add
add
mov
jne
add
add
adc
add
add
add
add
add
push
add
adc
add
add
add
add
adc
add
add
add
add
adc
dec
add
adc
iret
adc
add
add
add
add
adc
xor
mov
lea
add
adc
fst
jne
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
xor
cdq
add
add
adc
adc
add
add
add
add
add
add
adc
add
and
add
adc
sub
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
adc
add
add
adc
add
add
add
add
adc
add
add
adc
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
xor
add
add
add
add
aas
adc
add
add
add
dec
adc
add
add
adc
push
adc
add
add
add
rcl
add
or
lock
add
adc
pusha
adc
add
or
adc
je
cmp
cmp
stc
add
add
cmp
push
add
add
add
cmp
add
add
adc
add
lea
mov
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
mov
add
add
add
add
add
add
add
add
add
adc
add
add
adc
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
add
adc
adc
or
pop
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
add
add
adc
add
add
adc
add
add
add
add
adc
add
add
add
test
adc
in
adc
add
add
add
add
adc
add
add
adc
add
add
add
add
adc
xor
inc
add
add
add
adc
add
add
adc
add
add
scas
add
adc
add
add
scas
add
adc
add
add
add
add
add
adc
add
add
scas
add
add
add
add
or
push
add
add
adc
add
add
add
add
adc
adc
add
add
add
adc
adc
add
add
add
add
add
add
push
adc
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
add
add
add
add
add
add
add
add
add
cmp
test
add
add
add
add
add
add
add
jo
mov
stos
add
add
add
add
add
adc
lods
add
add
add
add
scas
add
add
add
add
add
add
add
mov
add
add
add
add
add
rol
add
add
add
add
add
add
add
mov
add
inc
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
adc
add
enter
add
add
les
add
leave
add
add
add
enter
inc
add
add
add
add
int3
adc
add
rol
dec
add
add
add
adc
add
rol
push
add
add
add
adc
add
rol
pop
add
add
add
adc
add
aam
pop
add
add
add
adc
add
aad
arpl
add
add
loopne
add
inc
add
add
add
add
in
add
inc
add
add
add
add
call
add
add
add
add
in
adc
add
fld
ja
add
add
lock
add
fiadd
jl
add
add
hlt
adc
add
fild
add
clc
adc
add
fld
xchg
add
add
cld
adc
add
jecxz
mov
add
add
add
in
nop
add
add
add
out
add
add
adc
repz
add
cmc
add
add
adc
cli
add
adc
add
inc
add
add
add
adc
std
add
add
inc
mov
add
add
and
inc
mov
add
add
mov
add
adc
add
ret
add
add
add
mov
xor
add
int3
add
add
add
lar
add
add
add
adc
adc
(bad)
add
add
add
adc
fild
add
add
inc
adc
adc
loopne
add
add
inc
adc
adc
in
add
add
dec
adc
adc
add
add
add
pop
add
add
add
add
add
inc
add
add
add
add
add
add
pop
add
add
add
add
add
inc
add
add
add
add
add
add
and
add
add
add
add
inc
add
or
add
add
add
and
add
add
add
inc
add
add
add
add
add
add
daa
add
add
add
add
add
inc
add
add
add
add
je
add
inc
add
add
add
add
add
add
inc
add
add
add
add
add
add
sub
sub
add
add
add
add
add
add
add
xor
xor
add
add
add
add
add
add
xor
aas
add
add
add
add
inc
add
add
add
xor
add
add
add
add
add
add
pushf
adc
aaa
add
add
add
mov
add
add
add
add
movs
adc
cmp
pop
add
add
add
add
add
add
add
lods
adc
cmp
add
add
add
add
add
add
aas
add
add
add
mov
add
jbe
add
add
mov
add
jnp
add
add
rcl
add
add
adc
inc
add
add
adc
dec
add
add
adc
dec
add
add
adc
dec
add
aam
add
inc
add
cdq
add
add
add
adc
dec
add
add
adc
dec
add
add
adc
dec
add
add
adc
dec
add
add
adc
push
add
add
adc
push
add
add
adc
push
add
hlt
adc
push
add
add
add
add
adc
push
add
add
add
add
adc
push
add
add
add
add
push
add
inc
add
rol
add
add
add
inc
add
aad
add
add
or
add
inc
add
fiadd
add
add
add
inc
add
fild
add
add
push
add
inc
add
in
add
add
adc
add
inc
add
add
add
add
push
add
inc
add
out
add
add
add
add
inc
add
repz
add
add
push
add
inc
add
clc
add
add
add
add
inc
add
std
add
add
add
push
add
inc
add
add
sub
add
inc
add
pop
add
xor
add
inc
add
or
add
add
xor
add
inc
add
add
cmp
add
inc
add
push
add
cmp
add
inc
add
sbb
inc
push
add
inc
add
and
inc
push
add
inc
add
and
add
add
inc
add
sub
dec
push
add
inc
add
das
add
push
push
add
inc
add
xor
add
add
push
push
add
inc
add
add
pop
push
add
inc
add
ds
pop
push
add
inc
add
inc
add
pusha
push
add
inc
add
dec
add
fs
add
inc
add
dec
add
push
add
push
add
ins
push
add
inc
add
push
add
jo
add
inc
add
add
je
add
inc
add
popa
add
js
add
inc
add
add
add
jl
add
inc
add
imul
push
add
inc
add
jo
add
add
test
add
inc
add
jne
add
add
mov
add
inc
add
jp
add
add
mov
add
inc
add
add
nop
push
add
inc
add
test
xchg
push
add
inc
add
mov
cwde
push
add
inc
add
add
add
add
add
mov
add
add
add
test
popf
add
test
add
inc
add
add
add
xchg
cmps
add
mov
add
inc
add
add
add
mov
mov
add
add
mov
add
add
add
mov
mov
add
push
add
inc
add
add
add
push
add
inc
add
add
add
push
add
inc
add
add
add
push
add
inc
add
add
add
push
add
inc
add
add
add
push
add
inc
add
add
add
push
add
inc
add
add
fcom
add
inc
add
add
add
push
add
inc
add
add
add
push
add
inc
add
add
add
push
add
inc
add
add
add
push
add
inc
add
add
add
push
add
inc
add
add
hlt
push
add
inc
add
add
add
push
add
inc
add
add
add
push
add
inc
add
add
add
pop
add
inc
add
add
add
add
inc
add
add
add
pop
add
inc
add
add
adc
adc
test
add
sbb
adc
mov
push
push
and
sub
xor
xchg
adc
aaa
pop
xchg
adc
cmp
xchg
adc
inc
pop
adc
xchg
adc
dec
pop
xchg
adc
push
pop
adc
adc
call
adc
add
adc
add
test
adc
outs
pop
call
adc
add
adc
test
adc
adc
adc
add
add
xchg
pop
test
adc
xchg
pop
call
adc
add
add
add
add
add
mov
add
add
pop
call
adc
add
pop
test
adc
rcl
call
adc
add
pop
adc
test
adc
out
call
adc
add
pop
adc
test
adc
cli
pop
call
adc
add
adc
test
adc
push
sbb
sbb
sbb
sbb
call
adc
add
adc
test
adc
sbb
sbb
sbb
sbb
call
adc
add
adc
add
test
add
pop
sbb
sbb
sbb
adc
adc
(bad)
adc
ja
popf
adc
jl
popf
adc
sbb
xchg
popf
adc
mov
popf
adc
nop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
(bad)
adc
(bad)
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
call
adc
push
and
sbb
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
add
ret
add
adc
adc
adc
adc
(bad)
adc
add
leave
adc
add
mov
adc
rcl
add
xchg
sbb
adc
add
add
add
add
add
mov
jmp
sbb
sbb
adc
push
and
add
jmp
sbb
adc
retf
adc
iret
sbb
adc
aam
jmp
sbb
adc
ficomp
jmp
sbb
adc
call
sub
jmp
sbb
adc
test
jmp
sbb
adc
push
and
cmp
not
push
add
not
push
or
not
add
adc
not
add
sbb
(bad)
adc
add
add
sbb
adc
push
and
and
fcom
push
sub
adc
cmp
fcom
push
add
adc
push
sbb
adc
pop
sbb
adc
pusha
sbb
adc
push
add
out
add
imul
adc
jo
fcom
push
and
adc
jo
fcom
push
cmp
adc
test
fcom
push
push
and
adc
or
push
sbb
or
push
or
and
cmp
adc
push
or
daa
add
adc
outs
or
adc
xchg
sbb
adc
lahf
sbb
adc
push
and
and
push
adc
movs
sbb
adc
add
add
add
add
add
add
add
sbb
adc
add
sbb
sbb
adc
add
sbb
sbb
adc
push
and
add
xor
push
or
xor
push
or
xor
push
adc
xor
push
sbb
xor
push
sbb
xor
push
and
xor
push
add
sbb
sbb
adc
add
sbb
sbb
sbb
sbb
add
jmp
sbb
push
xor
adc
adc
aad
push
add
aad
push
or
aad
push
or
adc
adc
pop
sbb
adc
sbb
adc
adc
adc
xchg
adc
push
and
sub
inc
adc
xor
adc
push
and
xor
cmp
adc
aas
sbb
adc
inc
sbb
adc
dec
sbb
adc
dec
sbb
adc
push
sbb
adc
pop
sbb
adc
pop
sbb
adc
bound
adc
push
and
and
adc
ins
sbb
adc
jno
dec
adc
jbe
dec
adc
jnp
dec
adc
sbb
dec
adc
mov
sbb
adc
sub
sbb
adc
cdq
sbb
adc
sahf
sbb
adc
push
and
and
test
push
adc
lods
sbb
adc
mov
push
adc
mov
push
adc
mov
add
push
adc
(bad)
sbb
adc
retf
sbb
adc
rcr
adc
aad
push
adc
ficomp
adc
fistp
adc
in
push
adc
add
sbb
adc
add
sbb
adc
add
sbb
adc
add
sbb
adc
add
sbb
adc
add
sbb
pop
sbb
or
adc
xchg
adc
adc
push
sbb
sbb
and
and
add
sbb
das
sbb
xor
adc
adc
(bad)
adc
add
(bad)
adc
add
(bad)
adc
add
pop
adc
add
pop
adc
add
(bad)
adc
add
adc
add
(bad)
adc
add
pop
adc
add
call
adc
add
adc
adc
adc
(bad)
adc
add
add
add
add
add
add
add
add
mov
pop
adc
add
add
add
sbb
and
add
pusha
adc
retf
adc
push
and
or
adc
aam
adc
fstp
ficomp
jecxz
adc
call
add
adc
adc
adc
adc
adc
adc
xchg
adc
jnp
xchg
adc
sbb
adc
add
push
(bad)
adc
add
push
adc
adc
push
add
sbb
call
adc
add
jb
add
sub
jp
adc
cs
call
adc
add
push
(bad)
adc
add
add
(bad)
adc
add
(bad)
adc
add
adc
add
call
adc
add
test
adc
pusha
push
mov
xor
gs
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
loopne
push
add
push
mov
push
add
push
xchg
adc
add
push
cwde
adc
add
push
call
adc
add
push
(bad)
adc
add
pop
aad
push
add
pop
(bad)
adc
add
pop
mov
adc
es
mov
pop
adc
test
push
add
adc
add
adc
add
adc
add
test
pop
lods
adc
add
mov
adc
imul
outs
pop
mov
pop
rcl
add
adc
lds
adc
xchg
lds
adc
xchg
pop
lds
adc
fwait
pop
lds
adc
movs
pop
lds
adc
scas
pop
lds
adc
mov
add
pop
lds
adc
int
lds
adc
xlat
pop
lds
adc
loope
lds
adc
jmp
retf
add
pop
iret
adc
add
pop
iret
adc
add
and
adc
add
and
adc
add
and
adc
add
and
adc
add
and
adc
add
ficom
adc
cmp
add
jecxz
adc
dec
and
adc
add
call
and
adc
add
in
adc
add
repnz
add
adc
add
add
add
add
add
add
add
add
and
adc
add
and
adc
add
and
adc
add
and
adc
add
and
and
adc
add
and
adc
add
and
adc
push
and
adc
add
and
adc
add
and
adc
add
xor
adc
and
adc
add
cmp
adc
dec
and
adc
add
adc
add
cmp
adc
push
add
cmp
and
and
adc
nop
and
adc
call
and
adc
scas
and
adc
mov
add
and
adc
int3
and
adc
(bad)
and
adc
loopne
inc
adc
add
and
adc
repnz
adc
sti
and
adc
add
inc
adc
add
add
and
add
and
adc
sub
push
adc
add
add
and
adc
dec
and
adc
push
and
adc
pop
and
adc
and
adc
jno
pusha
adc
add
adc
add
lea
outs
adc
add
add
add
add
mov
add
and
adc
shl
jle
adc
fsub
jle
adc
out
jle
adc
lock
adc
cli
and
adc
add
jle
adc
push
and
adc
sbb
jle
adc
and
adc
add
adc
add
and
and
and
and
and
pushf
adc
add
mov
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
adc
add
and
adc
add
and
adc
add
and
adc
add
fcom
adc
sub
add
and
adc
add
fst
adc
dec
and
adc
add
loop
adc
pop
and
adc
add
in
adc
add
icebp
adc
add
icebp
adc
add
add
add
add
add
add
add
add
and
adc
add
and
adc
add
and
adc
add
and
adc
add
and
adc
add
and
adc
add
and
adc
add
and
adc
sbb
add
and
xor
cmp
inc
and
dec
and
push
and
pusha
and
push
push
adc
add
adc
add
pop
adc
add
add
add
add
lods
and
mov
jae
adc
shl
and
aam
adc
fisub
call
add
and
cld
and
push
es
adc
add
mov
movs
adc
add
stos
adc
add
add
es
adc
inc
es
es
es
adc
add
enter
addr16
adc
jno
rcl
add
xlat
adc
add
add
add
add
add
add
add
add
es
adc
add
call
add
es
adc
in
or
push
adc
adc
sbb
sbb
daa
sbb
daa
and
daa
adc
sub
adc
cmp
xor
ss
cmp
cmp
inc
adc
inc
adc
dec
adc
dec
adc
dec
adc
push
adc
pop
adc
pop
adc
pop
adc
pop
adc
arpl
push
daa
ins
adc
jb
adc
fsub
jb
adc
in
ja
adc
out
daa
jl
adc
stc
daa
adc
or
mov
nop
adc
nop
adc
nop
adc
xchg
adc
call
adc
movs
adc
test
sub
sub
sub
sub
sub
adc
(bad)
adc
int3
adc
or
xchg
sbb
add
and
add
add
add
add
and
add
add
add
add
add
add
add
sub
add
sub
add
add
add
sub
and
add
add
add
pop
and
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
xchg
sbb
add
add
add
sbb
sub
push
add
add
add
add
add
add
add
xchg
add
sub
or
jl
add
add
xchg
add
sub
or
nop
and
add
add
add
sub
add
add
sbb
sub
or
int3
and
add
sub
or
pop
add
add
add
sub
or
in
add
add
sbb
sub
or
add
add
add
sub
add
add
add
add
add
add
sub
add
add
add
add
add
add
xchg
add
sub
add
add
add
add
xchg
add
sub
add
add
xchg
add
sub
add
add
add
add
xchg
add
sub
verw
xchg
add
sub
adc
jl
add
add
xchg
add
sub
adc
pushf
dec
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
xchg
add
sub
add
add
xchg
add
sub
pop
add
add
add
xchg
add
sub
sbb
rcl
add
xchg
add
sub
sbb
lods
push
add
add
xchg
add
add
xchg
add
je
sbb
mov
add
add
xchg
add
add
push
add
add
xchg
add
add
add
add
add
add
add
add
add
xchg
sbb
add
pop
add
add
xchg
add
add
add
pop
add
add
xchg
add
mov
and
mov
add
add
aam
add
add
xchg
add
call
add
add
add
add
add
add
xchg
add
test
pusha
add
add
xchg
add
mov
sub
add
add
add
add
add
add
add
add
add
add
xchg
add
movs
add
add
xchg
add
rol
add
add
add
pusha
add
add
xchg
add
add
data16
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
mov
add
add
xchg
mov
add
add
add
or
cmp
fsub
add
add
add
add
add
add
or
cmp
add
add
add
xchg
mov
sub
cmp
sbb
add
add
add
add
add
add
xchg
mov
add
push
xchg
lods
sub
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
xchg
sbb
add
imul
add
xchg
add
sub
add
add
imul
add
xchg
add
sub
add
add
imul
add
xchg
add
sub
add
add
add
add
add
add
xchg
add
sub
add
add
xchg
add
sub
add
add
outs
add
add
xchg
lods
sub
add
outs
add
add
xchg
sbb
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
xchg
icebp
sub
add
add
jno
add
add
add
add
jno
add
add
add
add
add
add
xchg
add
sub
aas
add
add
add
xchg
add
add
add
add
add
jb
add
add
add
add
jae
add
add
add
add
jae
add
add
add
add
xchg
push
sub
add
js
add
add
add
add
add
add
xchg
and
int3
add
add
xchg
sub
test
add
add
test
sub
add
add
add
add
movs
jl
add
add
add
cwde
jle
add
add
inc
add
add
add
xchg
inc
sub
add
add
add
xchg
inc
sub
add
mov
add
add
add
adc
add
add
xchg
add
cld
add
xor
add
add
xchg
sbb
add
add
add
int3
mov
add
add
add
and
add
add
xchg
sbb
add
add
add
sbb
sub
add
xchg
add
add
add
sub
add
hlt
xchg
add
add
add
sub
add
add
add
add
sub
add
xchg
add
add
add
sub
add
cmp
add
sub
inc
add
add
add
dec
add
test
xchg
sub
add
pop
xchg
add
add
add
sub
add
js
add
add
add
sub
add
mov
add
sub
add
mov
add
add
les
test
push
add
test
add
add
les
lods
sub
add
pop
cdq
add
add
test
mov
push
add
test
test
mov
and
popf
add
add
xchg
mov
add
popf
add
add
add
sub
add
inc
sahf
add
add
test
(bad)
sub
dec
add
add
push
add
sbb
sub
add
lahf
add
add
add
sub
push
add
lahf
add
add
add
sub
add
cwde
mov
xchg
add
sub
add
mov
add
add
xchg
add
sub
add
ins
mov
xchg
add
add
mov
xchg
add
sub
add
fsub
xchg
add
add
add
add
xchg
lods
sub
add
add
add
add
jl
add
add
xchg
jmp
add
add
add
movs
mov
xchg
repz
add
mov
add
add
int3
mov
add
sub
pop
add
add
add
xchg
add
sub
pop
add
movs
add
add
xchg
lea
jl
pop
add
movs
add
add
xchg
lods
sub
add
shl
xchg
lods
sub
pop
add
cmps
add
add
xchg
in
sub
add
add
add
add
xchg
icebp
sub
add
and
add
add
xchg
pop
sub
add
inc
cmps
add
add
test
or
and
pop
add
add
add
add
cmps
add
add
test
push
sub
pop
add
add
add
call
add
add
dec
stos
add
add
xchg
and
add
stos
add
add
xchg
sub
jge
pusha
add
lods
add
add
xchg
das
sub
add
mov
add
add
fsubr
xchg
add
sub
add
lock
add
add
xchg
add
add
add
add
add
pop
scas
add
add
xchg
lods
sub
add
js
add
add
xchg
add
sub
scas
add
add
xchg
lea
jl
arpl
fsubr
xchg
inc
sub
add
and
add
add
mov
sub
mov
add
add
add
ins
mov
add
add
arpl
xor
add
add
xchg
lahf
sbb
add
add
add
add
data16
add
add
add
add
data16
add
add
add
add
add
les
data16
mov
add
add
add
hlt
mov
add
add
add
test
les
cmps
sub
add
xchg
mov
jl
data16
mov
add
add
add
add
mov
add
add
data16
mov
add
add
add
fdiv
xchg
add
sub
mov
add
add
add
cld
mov
add
add
add
adc
xchg
lods
sub
data16
mov
xchg
add
sub
mov
mov
sub
add
add
xchg
(bad)
sub
mov
xchg
add
sub
mov
mov
sub
add
mov
mov
sub
add
mov
xchg
or
sub
mov
xchg
or
sub
mov
xchg
lods
sub
add
mov
xchg
lods
sub
add
call
add
add
hlt
mov
xchg
add
add
or
xchg
enter
jb
sbb
add
add
xchg
lods
sub
add
jl
add
add
mov
sub
add
mov
xchg
lods
sub
add
mov
xchg
sbb
add
add
add
xchg
lods
sub
add
add
add
xchg
lods
sub
jne
and
add
add
xchg
adc
add
pushf
mov
xchg
push
sub
add
mov
add
add
sub
add
add
xchg
add
sub
add
fs
xchg
add
sub
add
mov
add
add
add
mov
xchg
add
sub
add
add
mov
xchg
add
sub
add
add
mov
xchg
add
sub
mov
xchg
add
sub
add
add
mov
xchg
add
sub
add
add
add
add
xchg
add
sub
mov
xchg
add
sub
add
add
add
add
add
add
add
add
mov
xchg
add
sub
add
add
mov
xchg
add
sub
add
add
mov
xchg
add
sub
xchg
cmp
xchg
add
sub
mov
pop
mov
xchg
add
sub
mov
js
add
add
xchg
add
sub
mov
mov
add
add
add
add
add
add
mov
xchg
add
sub
mov
aam
add
add
xchg
add
fs
add
ret
add
xchg
add
push
xchg
add
add
add
add
add
xchg
add
jns
xchg
add
xchg
add
add
mov
add
add
add
ret
add
add
xchg
add
xchg
add
add
add
add
add
popf
add
add
add
add
mov
sub
add
add
add
add
add
add
mov
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
add
lds
add
add
add
add
add
add
les
xchg
sub
add
add
loope
pushf
sub
add
add
add
add
loope
ret
sub
add
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
sub
mov
add
add
add
mov
sbb
sub
add
add
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
scas
add
xchg
ins
sub
adc
add
add
add
scas
add
add
add
add
scas
add
rol
add
add
add
add
add
add
add
aad
add
add
add
add
add
add
mov
adc
add
add
add
add
add
add
mov
int3
fiadd
add
add
add
add
add
mov
in
loope
add
add
add
add
add
add
add
add
add
add
add
add
mov
cmp
add
add
add
mov
fsubr
add
add
add
mov
mov
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
nop
out
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
lods
sub
add
out
add
add
xchg
lods
sub
mov
add
add
add
add
add
xchg
add
xor
add
add
xchg
sbb
cmp
add
add
xchg
xor
add
add
add
add
add
add
add
add
xchg
inc
movs
add
add
add
add
add
lds
cmp
add
add
add
mov
hlt
add
add
add
mov
add
add
leave
add
add
add
add
add
add
int3
add
add
add
add
int
inc
sti
add
add
add
rol
in
add
add
add
rol
dec
std
add
add
xchg
or
ja
aad
fs
add
add
xchg
or
popf
add
add
add
add
add
fld
loopne
add
add
add
fild
call
add
add
add
add
add
loope
fs
add
add
add
jecxz
cwde
pop
add
add
add
in
pusha
or
add
add
add
add
add
or
cs
jmp
add
add
add
add
add
xchg
mov
rol
add
add
add
add
add
xchg
shr
mov
add
add
xchg
loop
aam
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
xchg
comiss
add
add
add
add
xchg
push
das
out
add
add
add
add
add
add
add
add
xchg
lods
sub
add
add
add
add
out
add
add
lock
add
add
add
or
add
add
add
add
or
add
add
add
add
or
xchg
inc
das
jl
lock
add
add
xchg
push
das
jl
lock
add
add
xchg
pusha
das
jl
lock
add
add
add
add
add
add
add
add
add
add
icebp
add
add
add
add
repnz
add
add
add
add
add
repz
adc
add
add
add
add
add
add
cmc
add
add
add
add
cmc
add
add
add
add
add
add
xchg
mov
add
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
add
add
xchg
fisubr
aam
cli
add
sbb
add
add
add
add
add
xchg
fisubr
jmp
cld
add
add
add
xchg
fisubr
lock
add
add
xchg
fisubr
cmc
add
add
add
xchg
fisubr
cli
add
add
add
xchg
fisubr
push
add
add
sbb
add
add
add
add
add
xchg
fisubr
add
add
add
add
add
xchg
fisubr
inc
add
add
add
xchg
fisubr
or
add
cmp
add
add
xchg
fisubr
push
push
add
add
add
push
push
add
add
add
xchg
fisubr
sbb
pop
add
xchg
jmp
add
sbb
add
add
add
add
loope
fld
rcr
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
xchg
lods
sub
add
add
add
xchg
lods
sub
push
push
add
sbb
xchg
push
xor
add
add
add
add
xchg
or
sub
adc
sbb
add
add
xchg
adc
out
add
add
add
add
xchg
adc
add
add
add
xchg
sbb
out
add
add
add
add
add
xor
push
adc
push
add
push
adc
js
add
add
xchg
lods
sub
add
add
add
add
add
add
add
add
add
add
xchg
lods
sub
add
add
pop
add
add
xchg
cmp
inc
add
and
add
add
add
add
and
add
add
add
add
add
add
add
sub
add
add
xchg
sbb
add
xchg
add
ds
sbb
mov
add
add
xchg
add
dec
push
sbb
shl
add
add
xchg
add
push
push
sbb
in
and
add
add
push
sbb
or
add
add
xchg
add
imul
add
add
xchg
add
add
add
and
add
add
push
and
mov
add
add
xchg
add
push
es
and
add
add
push
sub
push
and
add
add
push
sub
js
add
add
xchg
add
clc
push
sub
and
add
add
xchg
add
sbb
add
xchg
add
es
das
add
add
add
xchg
add
aaa
pop
xor
xor
add
add
xchg
add
inc
pop
xor
push
add
pop
add
add
add
pop
aaa
add
add
add
xchg
add
add
sub
add
add
pop
cmp
push
sub
add
add
pop
cmp
mov
add
add
xchg
add
add
add
add
xchg
add
add
das
add
add
xchg
add
add
add
add
pop
inc
add
xor
add
add
pop
inc
add
add
add
pop
dec
add
add
add
xchg
add
add
add
add
xchg
add
add
xor
add
add
pop
push
add
xor
xchg
add
add
xor
xchg
lods
sub
add
add
add
add
pop
push
add
add
add
add
add
add
add
add
add
add
xor
pop
push
add
add
add
add
add
xor
pop
push
add
add
add
add
pop
push
add
add
add
add
add
add
add
add
add
add
xor
pop
pop
add
add
add
add
add
xor
or
add
add
add
xchg
lods
sub
pop
pop
add
add
add
add
add
add
add
add
add
add
xor
or
add
add
add
mov
xor
or
add
add
add
xchg
lods
sub
pop
arpl
add
add
add
mov
xor
or
add
add
add
mov
xor
add
add
add
add
add
xor
or
add
add
add
xchg
lods
sub
pop
ins
add
add
add
add
add
add
add
add
add
add
xor
jno
add
add
add
mov
xor
jbe
in
xor
xchg
add
xor
ja
cmp
add
add
xchg
add
xor
add
add
add
add
add
xchg
add
xor
jl
mov
add
add
xchg
add
xor
jge
lods
cmp
add
add
or
les
add
add
xchg
add
xor
cmp
add
add
pop
add
cmp
add
add
pop
add
add
xchg
add
xor
cmp
add
add
or
add
add
pop
test
add
add
add
xchg
add
xor
cmp
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
push
xchg
add
inc
add
add
xchg
add
add
inc
add
add
xchg
add
xor
or
add
add
or
add
xchg
add
xor
or
add
add
or
add
add
or
add
xchg
add
icebp
or
add
add
or
add
add
or
add
add
or
add
add
or
add
xchg
add
pop
or
add
add
or
add
add
or
add
add
or
add
add
or
add
xchg
add
push
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
add
add
add
or
add
add
or
add
push
add
add
xchg
add
hlt
push
add
add
xchg
add
xor
add
add
xchg
add
add
push
add
add
xchg
add
add
push
add
add
xchg
add
add
push
add
add
xchg
add
add
push
add
add
xchg
add
add
xchg
add
add
xchg
add
add
push
add
add
xchg
add
add
push
add
add
xchg
add
add
add
add
or
add
add
or
add
push
add
add
xchg
add
xor
add
add
pop
add
add
xchg
add
xor
or
add
add
add
add
pop
fild
add
add
add
mov
xor
or
add
add
add
add
add
xor
or
add
add
add
add
add
xor
pop
out
push
pop
add
add
xchg
add
xor
call
add
add
add
add
add
add
xchg
add
xor
or
add
add
add
or
add
add
or
add
pop
add
add
xchg
add
xor
or
add
add
add
xchg
add
xor
or
add
xchg
add
xor
clc
add
xchg
add
xor
or
add
pop
add
add
xchg
add
xor
or
add
add
add
xchg
add
xor
or
add
add
add
xchg
add
xor
or
add
add
add
or
mov
add
xchg
add
xor
or
add
xchg
add
xor
or
add
pop
add
add
xchg
add
xor
or
call
add
or
add
pop
add
add
mov
sub
add
add
add
add
xor
adc
add
add
add
and
xor
adc
add
add
add
and
xor
adc
add
add
add
and
push
or
add
add
add
xor
pop
add
add
add
xor
sbb
add
add
add
and
xor
push
add
add
add
xor
add
add
xor
add
add
and
xor
add
add
xchg
add
xor
add
add
add
add
xchg
add
cdq
or
add
pop
add
add
xchg
add
xor
pusha
add
add
xchg
add
xor
pusha
add
add
xchg
add
cld
add
add
popa
add
add
xchg
add
cmps
or
add
add
add
xchg
add
movs
add
add
xchg
add
dec
add
ins
bound
add
add
add
add
add
or
add
add
add
xchg
add
mov
cmp
and
add
add
add
add
add
xchg
add
mov
cmp
mov
add
add
add
add
add
and
mov
add
add
xor
or
add
add
add
and
fmul
dec
add
add
add
xor
or
add
add
add
and
add
add
add
and
add
add
add
xor
or
add
add
add
and
add
add
add
xor
or
add
add
add
and
add
add
or
dec
push
xchg
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
xchg
add
xor
add
add
xchg
add
xor
add
add
xchg
add
xor
ins
add
add
xchg
add
xor
ins
add
add
xchg
add
xor
ins
add
add
xchg
add
xor
ins
add
add
xchg
add
xor
outs
add
add
xchg
add
xor
outs
add
add
xchg
add
xor
outs
add
add
xchg
add
xor
outs
add
add
xchg
add
xor
outs
add
add
xchg
add
xor
jo
add
add
or
add
jo
add
add
or
add
add
add
add
add
add
add
add
add
add
jb
add
add
add
add
add
add
add
xor
enter
add
add
xchg
add
xor
or
add
jb
add
add
or
add
jb
add
add
add
add
add
add
xchg
add
xor
or
add
xchg
add
xor
or
add
add
add
add
add
add
add
or
add
xchg
lods
sub
add
add
jbe
add
add
or
add
add
add
xor
or
add
add
add
xor
add
add
xor
or
add
add
add
xor
add
add
xor
or
add
add
add
xor
or
add
add
add
add
add
add
or
add
add
add
xchg
add
xor
add
add
jnp
add
add
or
add
jl
add
add
or
add
add
or
add
add
add
xchg
add
dec
add
add
add
add
xchg
add
or
add
xchg
add
cmp
fiadd
add
xchg
add
inc
or
add
xchg
add
add
or
add
add
add
xchg
add
retf
add
mov
add
add
add
add
mov
add
add
add
add
add
add
add
add
or
add
lea
add
add
or
add
pop
add
add
or
add
add
add
xchg
add
jae
repnz
xchg
add
rol
add
add
add
add
add
add
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
add
add
xchg
add
fs
add
add
xchg
add
add
xchg
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
xchg
add
add
xchg
add
add
add
add
or
add
add
add
xchg
add
xor
add
add
lahf
add
add
xchg
add
xor
add
add
xchg
add
xor
add
add
add
add
xchg
add
xor
add
add
add
add
add
add
xchg
add
xor
add
add
mov
xchg
add
xor
add
add
mov
xchg
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
xor
add
add
add
add
add
add
movs
add
add
xchg
add
add
cmps
add
add
xchg
add
xor
add
add
add
add
xchg
add
xor
add
add
xchg
add
rol
add
cmps
add
add
xchg
add
xor
add
add
cmps
add
add
xchg
add
xor
add
add
add
add
add
cmps
add
add
xchg
add
xor
add
add
test
add
add
or
add
add
add
add
add
test
xchg
add
xor
add
add
add
add
add
add
test
xchg
add
dec
add
add
add
add
add
stos
add
add
xchg
add
rol
add
add
add
xchg
add
rol
add
xchg
add
rol
add
add
add
xor
or
add
add
add
xor
or
add
add
add
xor
or
add
add
add
xor
or
add
add
add
xor
or
add
add
add
xor
or
add
add
add
xor
or
add
add
add
xor
or
add
add
add
xchg
sbb
add
xchg
lods
sub
and
je
add
add
xchg
out
sub
and
mov
add
or
add
xchg
add
add
add
add
xchg
or
loope
and
inc
scas
add
add
xchg
cvtpi2ps
add
add
scas
add
add
test
xchg
add
add
add
add
xchg
in
sub
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
add
add
xchg
xchg
xor
add
add
add
add
xchg
fwait
xor
add
add
mov
add
add
add
add
add
add
xchg
sbb
add
xchg
sbb
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
and
mov
add
add
add
rol
add
add
and
xchg
rol
add
add
and
fadd
add
add
xchg
lods
sub
add
ret
add
xchg
sbb
add
sbb
sub
and
mov
add
add
sub
add
add
add
add
xchg
lods
sub
add
les
jb
sub
and
movs
mov
add
les
sub
add
add
mov
add
add
add
add
les
cmps
sub
add
add
add
add
sbb
sub
add
xchg
or
add
retf
add
xchg
or
xor
or
add
add
add
xchg
or
xor
or
add
retf
add
xchg
or
xor
or
add
add
add
or
add
add
or
add
retf
add
xchg
or
xor
or
add
retf
add
add
xchg
or
xor
or
add
add
add
or
add
add
or
add
retf
add
add
xchg
or
xor
or
add
int3
add
add
xchg
or
xor
or
add
add
add
or
add
add
or
add
int3
add
add
xchg
or
xor
add
add
xchg
or
xor
je
add
add
xchg
or
xor
mov
add
or
add
int
add
add
or
add
add
add
xchg
or
add
xchg
or
xor
ror
add
add
add
or
add
add
xchg
add
pop
rol
add
add
or
add
(bad)
add
add
xchg
add
xor
rcl
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
call
loopne
add
add
add
add
loop
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
xchg
sbb
add
add
add
xchg
lods
sub
add
add
add
xchg
pop
xor
test
add
add
xchg
lods
sub
add
xchg
ins
xor
mov
add
add
xchg
lods
sub
add
add
pop
sub
mov
add
add
xchg
lods
sub
add
add
add
shr
add
add
xchg
lods
sub
add
call
xchg
scas
xor
adc
add
add
xchg
lods
sub
add
jmp
xchg
mov
add
xchg
lods
sub
add
xchg
int
clc
or
add
add
add
xchg
lods
sub
add
add
add
add
add
add
add
xchg
lods
sub
add
xchg
stc
xor
call
add
add
add
jmp
movs
sub
add
add
jmp
add
add
add
add
jmp
add
add
add
add
in
add
add
xchg
add
dec
add
add
add
xchg
add
or
add
add
xchg
lods
sub
add
out
add
add
xchg
sbb
add
add
add
xchg
sbb
add
add
add
or
add
add
xchg
lods
sub
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
lock
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
lock
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
lock
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
lock
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
lock
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
icebp
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
icebp
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
icebp
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
icebp
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
icebp
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
icebp
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
icebp
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
repnz
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
repnz
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
repnz
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
repnz
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
repnz
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
repnz
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
repnz
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
repnz
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
repnz
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
repz
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
repz
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
repz
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
repz
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
repz
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
repz
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
repz
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
repz
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
hlt
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
hlt
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
hlt
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
hlt
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
hlt
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
hlt
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
hlt
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
cmc
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
cmc
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
cmc
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
cmc
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
cmc
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
cmc
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
cmc
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
cmc
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
cmc
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
test
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
test
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
test
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
test
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
test
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
test
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
test
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
test
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
test
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
test
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
or
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
xchg
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
test
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
test
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
test
sbb
add
add
add
add
pop
xor
add
add
add
xor
or
add
add
mov
xor
pop
xor
add
add
add
add
test
sbb
add
add
add
add
add
daa
add
add
sub
add
add
xor
add
add
ss
add
cmp
add
add
inc
add
add
inc
add
add
dec
add
add
dec
add
add
push
add
add
pop
add
add
pop
adc
add
arpl
add
add
push
add
add
add
jb
add
add
ja
add
add
jl
add
add
xor
xchg
add
add
mov
add
add
nop
add
add
xchg
add
add
call
add
add
movs
add
add
test
add
add
add
add
add
add
add
(bad)
add
add
int3
add
add
shl
add
add
(bad)
add
add
(bad)
add
add
loopne
add
add
in
add
add
jmp
add
add
hlt
add
add
stc
add
add
(bad)
add
add
add
add
add
or
add
add
or
add
aaa
add
add
pop
aaa
add
add
sbb
add
add
and
add
add
es
add
add
sub
add
add
xor
add
add
xor
add
aaa
add
add
aas
aaa
add
add
inc
aaa
add
add
dec
aaa
add
add
dec
aaa
adc
add
push
aaa
add
add
pop
aaa
add
add
pop
aaa
add
add
bound
add
add
bound
add
add
fs
add
add
imul
outs
aaa
add
add
jae
add
add
js
add
add
jge
add
add
xor
add
add
add
xchg
aaa
add
add
xchg
aaa
add
add
fwait
aaa
add
add
mov
add
add
add
add
mov
add
add
aaa
add
add
enter
add
int
add
add
shl
add
add
xlat
aaa
add
add
fdiv
add
add
loope
add
add
out
add
add
jmp
add
add
lock
add
add
cmc
aaa
add
add
cli
aaa
adc
add
push
add
add
out
push
add
add
add
add
add
adc
add
add
and
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
add
add
inc
cmp
add
add
add
add
dec
cmp
add
add
add
add
push
cmp
add
add
add
add
pop
cmp
add
add
add
add
out
push
add
add
bound
add
add
cmp
add
add
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
ins
cmp
add
add
push
add
add
out
push
adc
add
jne
add
add
out
push
add
add
jne
add
add
jle
add
add
out
push
add
add
out
push
add
add
mov
add
add
out
push
add
add
out
push
add
add
jle
add
add
out
push
add
add
mov
add
add
jle
add
add
mov
add
add
out
push
add
add
int
add
add
xchg
cmp
add
add
add
push
add
add
out
push
add
add
mov
add
add
mov
add
add
add
add
push
add
add
mov
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
add
cmp
add
add
cmp
add
add
add
add
sbb
add
add
push
cmp
add
add
cmp
add
add
cmp
add
add
add
push
add
add
int
add
add
int
add
add
xchg
cmp
add
add
cmp
add
add
cmp
add
add
add
add
inc
cmp
add
add
add
add
dec
cmp
add
add
add
add
push
cmp
add
add
add
add
pop
cmp
add
add
add
imul
outs
cmp
add
add
add
add
js
add
add
jge
add
add
cmp
add
add
push
add
add
lea
add
add
out
push
add
add
cwde
cmp
add
add
add
add
add
mov
add
add
mov
add
add
mov
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
call
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
add
cmp
add
add
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
out
push
add
add
and
add
cmp
add
add
add
cmp
add
add
cmp
add
add
add
add
inc
cmp
add
add
add
add
dec
cmp
add
push
cmp
add
add
add
add
add
pop
cmp
add
add
add
add
add
add
outs
cmp
add
add
add
add
js
add
add
jge
add
add
cmp
add
add
add
xchg
cmp
add
add
add
add
add
add
add
add
mov
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
fdivr
add
add
loope
add
add
out
add
add
jmp
add
add
lock
add
add
cmp
add
add
cmp
add
add
cmp
add
add
add
add
or
add
add
push
cmp
add
add
cmp
add
add
cmp
add
add
add
cmp
add
add
cmp
add
add
add
add
xor
add
add
cmp
add
add
cmp
add
add
add
add
inc
cmp
add
add
add
add
dec
cmp
add
add
add
add
add
add
pop
cmp
add
add
add
add
push
add
add
add
jb
add
add
ja
add
add
jl
add
add
cmp
xchg
add
add
mov
add
add
nop
cmp
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
add
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
add
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
lahf
cmp
add
add
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
add
cmp
add
add
cmp
add
add
add
add
sub
add
add
cmp
add
add
cmp
add
add
cmp
add
add
add
add
add
inc
cmp
add
add
add
add
add
add
push
cmp
add
add
add
add
pusha
cmp
add
add
add
add
push
add
add
outs
cmp
add
add
add
add
add
add
jle
add
add
cmp
add
mov
add
add
add
add
add
mov
add
add
add
add
add
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
(bad)
add
add
adc
add
add
sbb
push
cmp
and
sub
sub
add
cmp
aaa
cmp
cmp
add
add
inc
cmp
inc
cmp
dec
cmp
push
cmp
push
cmp
pop
cmp
pop
cmp
fs
imul
add
jae
add
add
js
add
add
jge
add
add
cmp
cmp
mov
xchg
cmp
xchg
cmp
fwait
cmp
mov
add
add
add
add
mov
add
add
cmp
enter
add
int
add
add
sar
xlat
cmp
fdivr
loope
add
add
out
add
add
jmp
add
add
lock
cmc
cmp
cli
cmp
cmp
add
add
cmp
cmp
add
add
cmp
lahf
cmp
add
test
add
add
scas
cmp
add
add
add
add
or
add
add
push
add
add
adc
add
add
sbb
add
add
sbb
add
add
add
daa
add
add
sub
add
add
xor
add
add
ss
add
cmp
add
add
inc
add
add
inc
add
add
dec
add
add
dec
add
add
push
add
add
pop
add
add
pop
add
add
arpl
add
add
push
add
add
add
jb
add
add
ja
add
add
jl
add
add
cmp
xchg
add
add
mov
add
add
nop
add
add
xchg
add
add
call
add
add
movs
add
add
test
add
add
add
add
add
add
add
(bad)
add
add
int3
add
add
sar
add
add
(bad)
add
add
fstp
add
add
loopne
add
add
in
add
add
jmp
add
add
hlt
add
add
stc
add
add
(bad)
add
add
add
add
add
or
add
add
or
add
aas
add
add
pop
aas
add
add
sbb
add
add
and
add
add
es
add
add
sub
add
add
xor
add
add
xor
add
aas
add
add
aas
aas
add
add
inc
aas
add
add
dec
aas
add
add
dec
aas
adc
add
push
aas
add
add
pop
aas
adc
add
pop
aas
add
add
bound
add
add
addr16
adc
add
ins
aas
add
add
jno
add
add
jbe
add
add
jnp
add
add
cmp
add
add
add
add
add
cdq
aas
add
add
sahf
aas
add
add
mov
add
add
add
add
add
sar
add
add
aas
add
add
retf
aas
add
add
sar
add
add
add
add
aas
add
pop
add
aas
add
or
in
add
or
jmp
add
aas
add
add
repz
add
add
clc
aas
add
add
std
aas
add
add
add
add
inc
add
add
or
add
add
adc
add
add
inc
add
add
sbb
add
and
add
add
add
inc
add
add
das
inc
add
add
xor
add
add
cmp
add
add
inc
add
add
inc
inc
add
add
dec
inc
add
add
dec
inc
add
add
push
inc
add
add
add
add
add
add
add
or
inc
add
add
imul
add
jo
add
add
jne
add
add
jp
add
add
add
add
mov
add
add
add
add
add
add
add
add
mov
add
or
mov
add
or
mov
add
inc
add
or
lds
add
retf
add
add
inc
add
add
aam
add
add
fld
add
fiadd
add
add
add
inc
add
add
in
inc
add
add
repnz
add
add
test
inc
add
add
add
add
add
inc
add
add
or
add
adc
add
add
add
inc
add
add
pop
inc
add
add
and
add
add
sub
add
add
inc
add
add
xor
add
add
inc
add
add
cmp
add
add
add
inc
inc
add
add
dec
inc
add
add
push
inc
add
add
push
inc
add
add
pop
inc
add
add
pusha
inc
add
add
gs
add
add
push
add
add
outs
inc
add
add
je
add
add
jns
add
add
jle
add
add
add
add
mov
add
add
add
add
add
mov
add
add
add
add
add
add
add
inc
add
add
leave
inc
add
add
into
inc
add
add
rol
add
add
inc
add
add
fld
add
add
inc
add
add
out
add
add
in
inc
add
add
icebp
inc
add
add
test
add
sti
inc
add
add
add
add
add
add
inc
add
add
cmovb
add
adc
add
add
sbb
add
add
inc
add
add
and
add
add
inc
add
add
sub
add
inc
add
add
aaa
inc
add
add
cmp
add
add
inc
inc
add
add
inc
inc
add
add
dec
inc
add
add
push
inc
add
add
push
inc
add
add
pop
inc
add
add
pop
inc
add
add
fs
add
add
imul
inc
add
add
jae
add
add
js
add
add
jge
add
add
add
add
xchg
add
add
xchg
inc
add
add
xchg
inc
add
add
fwait
inc
add
add
mov
add
add
add
add
mov
add
add
inc
add
add
enter
add
int
add
add
rol
adc
add
inc
adc
add
fadd
add
add
inc
add
add
out
add
add
jmp
add
add
lock
add
add
cmc
inc
add
add
cli
inc
adc
add
inc
adc
add
add
add
or
add
add
inc
add
add
adc
adc
sbb
add
add
add
inc
add
add
daa
inc
add
add
sub
add
add
add
add
inc
add
add
cmp
add
add
add
add
inc
inc
add
add
dec
inc
adc
add
dec
inc
add
add
push
inc
add
add
pop
inc
add
add
pop
inc
add
add
arpl
add
add
add
add
ins
inc
add
add
jb
add
add
ja
add
add
jl
add
add
add
inc
add
add
mov
add
add
add
add
add
add
test
add
add
add
add
add
inc
add
add
mov
inc
add
add
rol
and
add
inc
add
add
fild
add
add
inc
add
add
in
add
add
jmp
inc
add
add
hlt
inc
add
add
add
add
inc
add
pop
add
inc
add
or
or
or
or
add
inc
add
or
pop
inc
add
add
sbb
add
add
and
add
es
add
add
sub
add
xor
add
xor
add
inc
add
add
aas
inc
add
add
inc
inc
add
add
dec
inc
add
add
bound
add
add
aam
add
add
dec
inc
add
add
(bad)
cmp
dec
inc
add
add
(bad)
cmp
push
inc
add
add
push
inc
add
add
pop
inc
add
add
popa
inc
add
add
inc
and
jno
daa
add
add
add
add
add
shr
add
add
sub
mov
out
or
jae
rcl
jl
pop
add
add
add
lods
sub
imul
mov
pop
sbb
fst
fst
and
mov
shr
adc
and
cdq
add
sub
add
adc
lock
hlt
adc
jmp
cdq
add
add
add
sub
push
mov
add
add
push
mov
push
mov
add
add
push
mov
push
mov
push
test
adc
and
mov
lods
sub
add
inc
sub
mov
push
inc
cs
mov
push
inc
xor
mov
lods
sub
add
add
push
mov
push
mov
or
inc
push
mov
add
add
add
push
mov
add
add
add
sub
adc
dec
push
fld
jge
scas
add
add
out
fld
mov
add
add
add
add
add
inc
popa
push
fld
rol
add
add
inc
out
add
add
inc
out
add
add
add
add
out
add
add
inc
out
fld
push
inc
out
add
add
push
push
fld
jno
out
fld
jle
out
fld
lea
push
fld
xchg
inc
mov
fld
mov
add
add
leave
inc
popf
push
fld
aad
scas
push
loope
mov
add
mov
sub
in
mov
jl
stc
add
inc
sub
add
cmp
jl
add
sti
sub
repz
and
add
repz
inc
add
inc
jl
add
stc
inc
rcl
add
sub
add
add
inc
enter
or
add
inc
iret
push
adc
cs
mov
aad
sbb
aas
inc
repnz
fst
and
aas
inc
loop
and
dec
inc
call
inc
out
push
inc
add
out
inc
add
cmc
push
inc
add
add
add
test
add
lods
sub
add
mov
add
inc
(bad)
adc
pop
xchg
add
inc
and
cdq
add
loope
xor
cdq
add
inc
cmp
cdq
add
inc
hlt
add
or
add
lods
sub
add
lods
sub
rol
lods
sub
fld
lods
sub
loope
lods
sub
jmp
add
add
lods
sub
add
lods
sub
or
lods
sub
adc
lods
sub
sbb
lods
sub
add
add
or
add
add
dec
sub
sub
sbb
dec
dec
pop
sub
and
or
add
dec
dec
pop
sub
cs
push
pop
sub
cmp
pop
sub
inc
dec
sub
sub
dec
dec
test
arpl
sub
cs
test
imul
jo
sub
push
dec
js
sub
daa
dec
adc
add
ins
or
mov
sub
imul
inc
mov
mov
sub
jae
test
mov
dec
xchg
pop
sub
(bad)
sub
sub
jl
sub
sub
push
dec
fwait
pop
sub
and
pop
sub
and
pop
sub
lea
pop
sub
lods
sub
dec
rcl
add
lods
sub
pop
sub
lods
dec
mov
sub
mov
sub
sub
pop
dec
pop
pop
sub
lds
add
add
dec
fcom
sub
push
dec
fst
sub
(bad)
dec
ins
or
jecxz
sub
and
pop
sub
(bad)
dec
xchg
pop
sub
daa
dec
lock
sub
loop
int3
pop
sub
(bad)
sub
pop
xor
in
dec
cmps
or
add
dec
add
xor
shr
add
add
sub
adc
dec
add
add
add
or
sbb
push
dec
movs
add
sbb
add
daa
dec
adc
inc
add
sbb
inc
add
and
dec
sub
inc
add
pop
add
bound
sbb
daa
dec
cmp
inc
add
aas
sbb
add
add
sti
dec
inc
sbb
ins
dec
dec
sbb
jbe
cmp
dec
add
add
cmp
dec
add
dec
dec
add
xchg
dec
jae
push
add
add
add
dec
movs
add
(bad)
dec
sub
add
dec
cld
add
repz
movs
add
or
sbb
sbb
sbb
es
sub
add
dec
mov
imul
imul
imul
imul
imul
imul
imul
imul
jno
shr
adc
je
add
add
add
add
mov
lods
sub
add
mov
xchg
dec
mov
mov
xchg
add
popf
dec
xchg
sbb
add
sbb
add
jbe
cmps
sbb
add
add
dec
sub
fld
fimul
sbb
add
dec
and
dec
mov
dec
mov
dec
ret
sbb
add
dec
retf
sbb
add
dec
rcr
fld
adc
pop
loope
sbb
add
add
dec
fcomp
loope
shr
add
add
dec
scas
add
add
dec
scas
add
add
scas
add
add
scas
add
add
pop
dec
fstp
stc
add
sub
sbb
add
in
sbb
add
dec
repnz
add
repz
aam
adc
repz
adc
adc
repz
inc
add
repz
or
adc
sti
sub
lods
sub
add
adc
sbb
outs
dec
stc
sbb
add
sub
adc
jl
sub
je
repnz
add
repnz
add
or
sbb
add
add
add
add
dec
jl
push
add
add
add
add
sub
add
mov
add
add
lods
sub
jno
lods
sub
push
jno
lods
sub
jno
lods
sub
sbb
adc
loope
test
adc
loope
mov
adc
loope
leave
add
sub
adc
sub
jmp
add
add
xchg
dec
cs
add
dec
sbb
add
dec
cmp
or
sub
sbb
sub
sbb
sub
and
sub
sub
dec
nop
pop
sub
dec
push
sbb
add
dec
out
add
add
dec
nop
add
or
inc
add
dec
push
dec
nop
add
sub
lods
sub
imul
add
dec
js
imul
add
dec
sbb
add
dec
jle
jno
lods
sub
add
dec
mov
add
add
dec
out
xchg
add
dec
out
xchg
add
inc
pop
setno
inc
loop
mov
dec
out
rol
and
leave
add
sub
rol
inc
xchg
sbb
add
dec
xchg
sbb
add
dec
popf
sbb
add
dec
pop
adc
add
sub
dec
stos
add
add
dec
mov
out
or
or
adc
sbb
and
sub
inc
add
push
add
pop
add
pop
add
pop
add
pop
add
popa
add
popa
add
imul
rcl
rcr
add
jns
lods
sub
pop
add
int
mov
mov
mov
xchg
add
cdq
add
mov
adc
lock
loop
mov
xlat
inc
mov
call
dec
icebp
sbb
add
leave
add
rol
fld
loope
lods
sub
sbb
add
loope
mov
adc
add
stc
add
add
lods
sub
sbb
push
ins
dec
or
or
pop
dec
mov
adc
arpl
add
push
imul
adc
jb
adc
and
lods
sub
push
xchg
dec
sbb
sub
or
xor
lea
sbb
push
sahf
dec
sub
cmp
mov
xor
inc
push
imul
inc
push
xchg
inc
inc
sbb
pop
dec
dec
sbb
xchg
push
push
push
les
sbb
ror
sbb
inc
dec
dec
sbb
lods
sub
imul
imul
jno
icebp
dec
jge
jno
icebp
dec
test
jno
icebp
dec
mov
mov
enter
xchg
push
jae
test
int3
pop
xchg
push
pop
sbb
dec
and
dec
xchg
sbb
sbb
add
sbb
push
and
sbb
push
sub
sbb
push
xor
sbb
push
cmp
sbb
push
inc
dec
lods
sbb
push
dec
dec
lods
sbb
push
dec
dec
lods
sbb
push
push
dec
lods
sbb
push
lods
sub
push
pop
dec
aad
loope
imul
dec
jl
jmp
add
push
xchg
dec
mov
icebp
push
dec
sbb
push
popf
dec
mov
dec
les
icebp
push
mov
retf
push
mov
pop
lods
sub
add
aad
sbb
lods
sub
pop
call
pop
hlt
dec
loope
sbb
add
sbb
pop
or
out
sbb
pop
sbb
pop
xor
pop
dec
dec
sub
xor
inc
inc
int3
add
pop
push
sub
add
pop
lods
sub
pop
aas
inc
xor
cmp
pop
dec
neg
cmp
imul
dec
std
sbb
mov
sbb
nop
dec
or
dec
pop
mov
pop
lods
dec
and
dec
pop
mov
and
dec
pop
(bad)
dec
jmp
dec
pop
(bad)
add
in
pop
sbb
lods
sub
dec
pop
sbb
or
adc
and
jno
sti
sub
es
sub
cdq
pop
lods
sub
pop
xor
pop
inc
push
and
cdq
pop
push
push
push
add
add
add
add
add
sbb
add
add
sbb
sbb
add
add
add
add
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
sbb
sbb
pop
mov
lods
sub
pop
rol
sub
rol
push
sub
rol
push
movs
add
pop
test
pop
test
pop
mov
scas
add
pop
lds
or
hlt
add
pop
stc
push
xchg
rol
add
pop
adc
add
pop
and
sbb
pop
inc
inc
xchg
sbb
or
sub
lods
sub
dec
cmps
sbb
or
or
add
or
or
push
scas
sbb
push
push
mov
inc
or
mov
push
mov
ret
or
lods
sub
sbb
call
sub
lods
sub
or
or
or
or
mov
cs
mov
fcomp
xchg
or
dec
loop
xchg
or
dec
out
add
add
sbb
sbb
lods
sub
add
lods
sub
add
aas
inc
stc
sbb
inc
inc
call
or
push
dec
add
dec
or
add
call
adc
cs
mov
adc
add
dec
or
add
or
sbb
cmp
sbb
add
lods
sub
sbb
add
dec
cmp
add
inc
cmp
add
inc
stc
sbb
lods
sub
add
call
and
cs
mov
or
add
or
sub
lods
sub
add
inc
add
sub
add
inc
stc
sbb
dec
inc
inc
sbb
add
dec
jl
cmp
lods
sub
sbb
mov
dec
sbb
add
add
inc
inc
call
cmp
in
dec
bound
add
imul
add
dec
dec
or
add
ret
push
out
add
sub
lods
sub
sbb
dec
sti
pop
dec
add
dec
out
add
inc
inc
sbb
add
aas
inc
stc
sbb
inc
mov
sti
pop
pop
add
dec
out
add
inc
mov
inc
sbb
add
aas
inc
stc
sbb
dec
sti
pop
ins
add
dec
out
add
inc
inc
sbb
add
aas
inc
stc
sbb
dec
sti
pop
jl
test
test
dec
inc
inc
sbb
add
aas
inc
stc
sbb
mov
test
xchg
add
lods
sub
sbb
pushf
add
push
out
add
movs
add
aas
inc
stc
sbb
lods
add
dec
out
add
les
mov
add
lods
sub
add
inc
stc
sbb
add
inc
mov
aam
int3
add
call
int3
add
in
dec
bound
add
jmp
jns
aam
in
dec
cmp
add
sbb
add
not
sbb
add
dec
pop
in
test
in
add
mov
add
sbb
add
dec
or
add
inc
stc
sbb
add
dec
sti
pop
add
push
sub
sbb
add
adc
sbb
add
lods
sub
add
inc
stc
sbb
dec
inc
inc
sbb
add
or
add
jle
imul
add
aas
inc
stc
sbb
dec
dec
or
add
call
and
lods
sub
add
push
jns
and
aas
inc
cmp
add
sbb
add
dec
sti
pop
cmp
mov
add
aas
inc
stc
sbb
inc
sbb
dec
pop
pop
add
dec
sti
pop
pop
add
dec
out
add
sub
add
inc
stc
sbb
sub
add
dec
cmp
add
or
ins
add
inc
mov
out
sbb
inc
call
test
cs
mov
outs
sbb
add
sub
push
cwde
adc
pushf
add
aam
cwde
adc
pushf
add
sti
pop
movs
add
mov
add
inc
mov
call
les
lods
sub
pop
int3
add
add
inc
mov
sbb
dec
pop
hlt
add
aas
inc
cmp
add
dec
cmp
add
inc
mov
or
add
push
stos
sbb
add
or
cld
add
loopne
or
add
inc
cmp
add
jmp
jns
cld
add
inc
mov
stos
sbb
add
or
add
ret
push
out
add
sub
dec
inc
mov
adc
dec
pop
adc
test
sbb
lods
sub
add
sbb
add
dec
sti
pop
xor
test
or
sbb
mov
xchg
sbb
cwde
sbb
push
sbb
popf
sbb
fsub
or
sub
popf
sbb
push
sbb
cwde
sbb
xchg
sbb
mov
mov
add
add
mov
or
dec
add
add
add
sbb
lds
push
sbb
cwde
sbb
xchg
sbb
mov
mov
add
and
add
fisub
or
dec
add
add
or
push
add
add
add
add
add
add
or
rol
cwde
sbb
xchg
sbb
mov
mov
add
add
mov
or
in
add
add
add
sbb
lds
popf
sbb
push
sbb
cwde
sbb
popf
sbb
push
sbb
cwde
sbb
xchg
sbb
mov
mov
add
add
mov
or
inc
add
add
add
sbb
lds
retf
add
iret
sbb
popf
sbb
push
sbb
cwde
sbb
popf
sbb
push
sbb
cwde
sbb
xchg
sbb
mov
mov
add
add
or
les
popf
sbb
push
sbb
cwde
sbb
xchg
sbb
mov
mov
add
add
aam
push
add
add
add
add
fstp
fcomp
fistp
loop
push
add
jbe
push
add
add
push
push
add
cdq
and
add
add
and
add
movs
and
add
sbb
cwde
sbb
mov
or
push
add
and
add
and
add
scas
and
add
and
add
mov
add
and
add
push
sbb
cwde
sbb
mov
mov
or
add
or
test
and
add
add
nop
add
and
add
cwde
add
and
add
mov
add
add
mov
cwde
sbb
xchg
sbb
mov
mov
mov
add
sbb
lods
sbb
mov
or
rol
sbb
mov
add
sbb
rcr
and
add
add
movs
add
test
cwde
sbb
mov
mov
or
mov
mov
add
lods
or
and
add
add
or
and
add
loopne
push
add
add
add
add
add
or
and
add
add
push
sbb
pusha
sbb
pusha
sbb
pusha
sbb
pusha
sbb
pusha
sbb
pusha
sbb
outs
sbb
pusha
sbb
sbb
sub
sbb
push
sbb
push
sbb
neg
add
or
sbb
or
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
adc
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
mov
rcl
pop
push
rcl
sbb
push
rcl
add
push
and
and
and
inc
and
push
and
and
and
and
and
and
and
and
and
and
and
and
and
ja
mov
fwait
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
sbb
and
outs
and
call
and
or
(bad)
sub
xor
cmp
inc
es
es
es
es
jp
test
mov
xchg
es
es
cmps
es
es
mov
es
es
jmp
daa
adc
xor
inc
daa
dec
daa
push
daa
popa
daa
imul
mov
call
daa
(bad)
daa
shl
fldenv
fbld
call
sub
sub
pop
sub
js
test
(bad)
test
mov
aad
loop
jmp
sub
sub
sub
sub
sub
sub
sub
pop
sub
ins
sub
jg
mov
fwait
sub
sub
sub
sub
sub
sub
sub
sub
sub
push
sub
outs
sub
nop
sub
sub
sub
sub
sub
sub
sub
sub
sub
mov
retf
sub
sub
sub
sbb
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
inc
sub
pusha
sub
scas
sub
fld
std
sub
add
add
cld
sbb
or
add
adc
add
add
or
push
add
add
or
add
daa
add
add
add
add
sbb
add
add
add
and
pop
add
add
add
push
sbb
add
push
push
sbb
add
adc
adc
add
push
sbb
add
sbb
add
push
and
add
daa
push
sbb
add
sub
sbb
add
xor
adc
add
sbb
add
cmp
and
add
inc
sbb
adc
add
sub
add
imul
push
xor
add
adc
add
adc
adc
add
inc
adc
add
aas
adc
add
dec
adc
add
mov
adc
add
sub
add
xchg
push
sub
add
mov
add
add
add
mov
add
add
push
pop
adc
add
push
push
push
ins
adc
add
push
jb
add
xlat
push
js
add
fcom
adc
add
push
jge
add
out
jge
add
jmp
jge
add
lock
jge
add
cmc
push
jge
add
cli
push
jge
add
call
adc
add
jge
add
or
add
push
push
jge
add
adc
add
sbb
add
sbb
add
push
jge
add
daa
push
jge
add
sub
jge
or
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
or
add
mov
or
add
pop
or
add
nop
add
add
add
add
add
leave
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
xor
and
add
xor
and
add
xor
and
add
add
add
sub
add
dec
add
add
add
sub
add
dec
add
add
add
add
add
das
add
add
xor
add
push
add
add
add
xor
add
push
add
add
add
add
test
cmp
add
xchg
cmp
add
xchg
cmp
add
add
add
push
add
add
rol
inc
add
add
add
add
rol
inc
add
add
add
add
aad
dec
add
add
add
add
xlat
add
add
fadd
dec
add
add
add
add
fiadd
push
add
add
add
add
fadd
push
add
add
add
add
fiadd
pop
add
add
add
add
loopne
pop
add
add
add
add
loop
arpl
add
jecxz
add
add
add
add
in
imul
pop
add
test
add
add
adc
xor
clc
add
add
push
ds
dec
push
push
push
pop
push
ins
push
ja
adc
sbb
and
daa
add
add
add
inc
add
push
add
popa
add
outs
add
jge
test
lea
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
pop
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
xor
add
add
add
push
add
inc
add
add
push
add
add
cmp
push
add
add
cmp
add
add
add
push
add
add
inc
add
push
add
add
inc
add
push
add
add
inc
add
push
add
add
arpl
push
add
add
gs
push
add
add
addr16
push
add
add
imul
add
pop
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
push
add
add
push
add
inc
add
add
push
add
inc
add
add
push
add
push
add
add
push
add
inc
add
add
push
add
add
dec
add
inc
add
sbb
add
add
inc
add
ds
pop
add
push
add
inc
add
ins
push
add
inc
add
adc
add
push
and
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
or
mov
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
or
retf
sldt
add
add
add
or
mov
add
add
fist
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
adc
pop
add
pop
add
add
aas
add
inc
add
inc
add
inc
add
pop
add
add
pop
add
imul
jbe
push
push
add
add
js
or
add
add
push
push
add
add
jp
or
add
add
or
add
add
push
push
add
add
jl
or
add
add
push
add
add
jl
push
push
add
add
jl
push
push
add
add
mov
add
add
add
push
add
add
fld
push
push
add
add
sub
push
push
add
add
sub
add
add
add
push
add
add
xor
push
push
add
add
xor
push
push
add
add
xor
add
add
add
add
add
push
add
add
cmp
push
push
add
add
cmp
push
push
add
add
cmp
add
add
add
push
add
add
inc
add
push
add
add
inc
add
push
add
add
inc
add
push
add
add
inc
add
push
add
add
dec
add
push
add
add
dec
add
push
add
add
dec
add
push
add
add
pop
push
push
add
add
mov
push
push
add
add
mov
add
retf
add
push
add
add
int
push
push
add
add
iret
add
push
add
add
adc
add
add
add
push
add
sbb
daa
add
push
fadd
rcr
(bad)
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
add
add
add
add
dec
jne
jo
ins
imul
jae
jb
fs
jo
gs
xor
xor
xor
fs
ins
add
push
arpl
jns
je
ins
add
jne
add
jb
push
push
gs
bound
arpl
imul
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
inc
outs
jne
gs
je
jb
push
gs
fs
outs
ins
jns
outs
ins
ins
arpl
outs
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
bound
arpl
fs
add
je
outs
outs
popa
jb
pusha
xor
dec
gs
outs
ins
ins
arpl
outs
add
ins
ins
arpl
outs
pusha
xor
inc
je
jb
bound
add
imul
ins
add
arpl
je
outs
outs
add
ins
jne
push
jns
add
jns
fs
outs
ins
ins
arpl
outs
pusha
xor
dec
jne
je
arpl
je
gs
gs
je
add
imul
bound
xor
inc
popa
je
push
imul
jae
outs
outs
add
gs
jo
outs
add
jb
outs
addr16
jne
ins
fs
push
jns
je
ins
cs
gs
add
gs
add
jae
gs
cs
push
imul
jne
gs
bound
xor
dec
dec
imul
arpl
popa
ins
add
add
outs
je
popa
outs
fs
gs
inc
arpl
outs
pusha
xor
inc
jbe
outs
je
jb
jae
push
gs
push
gs
fs
push
jns
je
ins
cs
dec
add
je
jb
je
jb
dec
gs
bound
dec
outs
outs
add
jae
gs
cs
gs
arpl
outs
add
outs
ins
ins
arpl
outs
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
dec
dec
imul
arpl
outs
popa
jb
add
outs
ins
ins
arpl
outs
pusha
xor
dec
inc
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
jb
jo
jb
jns
outs
outs
add
ins
bound
push
jns
gs
inc
imul
ins
popa
addr16
dec
inc
jne
je
ins
inc
je
jb
bound
gs
jb
jbe
fs
dec
gs
bound
inc
imul
jb
outs
addr16
jb
je
jb
dec
inc
outs
ins
jo
jb
bound
xor
inc
dec
dec
inc
push
dec
dec
inc
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
imul
arpl
jae
dec
gs
ins
jae
push
jns
je
ins
cs
arpl
imul
arpl
popa
ins
add
outs
dec
ins
jo
jb
outs
outs
popa
je
outs
outs
dec
gs
ins
add
gs
push
gs
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
ins
je
jb
dec
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
je
je
jb
bound
add
jb
ins
inc
jb
popa
jns
je
jb
bound
add
jb
push
inc
je
jb
bound
add
ins
popa
outs
popa
addr16
jns
add
jae
ins
bound
imul
imul
jae
gs
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
jne
je
jb
inc
je
jb
bound
add
ins
push
imul
je
jb
bound
add
jae
ins
bound
gs
imul
imul
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jb
outs
add
je
xor
push
je
imul
popa
jb
jae
outs
add
ins
add
arpl
jns
push
popa
je
add
jbe
jb
outs
ins
outs
je
push
jo
arpl
ins
inc
outs
ins
fs
inc
outs
arpl
imul
bound
push
je
imul
je
jo
imul
jb
popa
ins
add
outs
popa
jb
push
gs
fs
inc
outs
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
gs
je
outs
addr16
jns
je
ins
add
popa
je
outs
jb
dec
inc
add
ins
gs
je
gs
ins
add
ins
gs
outs
fs
imul
imul
gs
outs
add
arpl
jns
outs
outs
add
jo
outs
ins
popa
imul
gs
add
popa
jb
push
dec
inc
xor
popa
gs
jae
gs
cs
arpl
imul
je
addr16
jo
jns
dec
popa
jae
inc
ins
outs
jb
je
ins
add
je
outs
outs
jbe
jb
gs
push
jb
imul
add
ins
gs
arpl
jae
add
outs
popa
jb
push
jb
je
jb
push
popa
outs
outs
ins
add
je
add
ins
outs
jb
push
je
gs
ins
add
ins
gs
outs
outs
add
ins
gs
push
dec
dec
inc
js
gs
imul
gs
jns
je
ins
dec
outs
outs
add
jae
ins
bound
inc
jae
gs
bound
popa
ins
add
gs
fs
je
jb
add
addr16
outs
je
jne
ins
inc
js
gs
imul
jne
outs
je
js
gs
imul
popa
ins
imul
jb
jb
xor
dec
inc
jno
popa
ins
imul
jb
jb
xor
dec
inc
imul
jb
pusha
xor
dec
outs
je
xor
dec
inc
outs
jb
popa
je
jb
jbe
fs
dec
outs
je
add
outs
je
add
outs
je
xor
push
dec
outs
je
xor
push
imul
inc
jns
add
outs
outs
jbe
jb
imul
jo
inc
outs
fs
outs
je
ins
gs
jns
gs
popa
outs
fs
add
jb
outs
addr16
gs
fs
dec
outs
je
ins
jo
gs
outs
je
fs
js
gs
imul
gs
je
add
je
jb
outs
arpl
add
je
imul
popa
addr16
je
jb
bound
add
je
imul
jb
gs
add
addr16
outs
je
jne
dec
push
popa
outs
addr16
js
gs
imul
popa
ins
imul
imul
jo
imul
imul
dec
inc
outs
jne
gs
je
jb
xor
dec
inc
outs
jne
gs
je
jb
inc
jb
popa
jns
dec
inc
imul
jb
inc
outs
jne
gs
je
jb
inc
imul
jb
inc
outs
je
jns
push
je
jne
je
popa
jns
jne
inc
je
jb
bound
add
outs
jne
dec
imul
push
popa
jns
imul
jae
jb
arpl
dec
outs
outs
add
je
outs
fs
popa
jae
add
jb
ins
gs
jb
outs
outs
add
gs
fs
outs
outs
add
imul
jb
push
popa
jb
ins
gs
jb
outs
imul
jbe
outs
je
outs
outs
add
addr16
popa
jb
ins
gs
jb
outs
jne
je
js
gs
imul
arpl
jae
outs
jae
fs
js
gs
imul
dec
ins
jo
jb
inc
je
jb
bound
add
popa
fs
outs
ins
jns
outs
ins
ins
arpl
outs
inc
popa
jae
add
outs
outs
ja
dec
fs
je
je
add
arpl
imul
imul
outs
je
je
add
outs
je
je
add
jb
popa
ins
push
jb
je
jb
push
jns
je
ins
inc
js
gs
imul
jae
popa
ins
add
jb
popa
ins
push
gs
fs
dec
push
inc
arpl
jne
je
dec
fs
je
je
push
gs
outs
arpl
push
imul
ins
bound
imul
push
dec
outs
je
jb
jne
je
fs
js
gs
imul
gs
fs
bound
je
js
gs
imul
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
je
ins
gs
imul
fs
add
outs
je
ins
gs
gs
jo
jb
add
jae
je
bound
dec
outs
outs
imul
outs
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
dec
bound
jae
popa
je
outs
outs
inc
je
jb
bound
add
jae
ins
jbe
inc
jbe
outs
je
jb
jae
inc
inc
push
inc
jb
jo
outs
push
gs
imul
imul
jns
je
push
jb
outs
jae
outs
jb
add
jns
je
push
je
gs
ins
add
ins
ins
gs
imul
imul
jo
outs
push
je
gs
ins
dec
outs
fs
fs
add
fs
gs
popa
outs
fs
add
je
outs
fs
outs
outs
add
popa
ins
imul
add
jae
gs
cs
gs
arpl
outs
cs
ins
imul
gs
je
jb
push
jne
je
ins
gs
gs
outs
fs
popa
outs
fs
add
inc
outs
fs
dec
jo
outs
fs
je
jo
popa
outs
fs
gs
push
jns
je
ins
cs
bound
dec
je
jo
gs
outs
outs
jae
add
je
inc
outs
outs
je
js
add
add
jae
gs
cs
bound
push
dec
add
outs
je
outs
ins
add
je
push
outs
push
gs
js
gs
imul
outs
je
arpl
jo
dec
popa
outs
popa
addr16
inc
imul
ins
push
popa
je
push
imul
ins
inc
jbe
outs
je
jb
jae
push
outs
popa
ins
gs
jbe
outs
je
jb
jae
dec
popa
ins
gs
popa
ins
jne
inc
outs
ins
ins
arpl
outs
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
push
jo
arpl
ins
imul
ins
gs
gs
imul
add
outs
imul
je
outs
outs
push
gs
imul
jae
gs
cs
outs
outs
imul
je
outs
outs
add
bound
jno
gs
add
jae
gs
cs
gs
dec
je
jo
bound
jno
gs
add
je
push
gs
gs
inc
popa
arpl
push
outs
ins
imul
je
ins
cs
gs
inc
popa
arpl
add
je
push
gs
gs
inc
popa
arpl
dec
gs
ins
add
jno
gs
inc
popa
arpl
push
outs
ins
imul
push
gs
outs
outs
jae
add
je
push
bound
jae
outs
outs
jae
add
je
push
je
je
jae
outs
fs
bound
popa
fs
outs
ins
ins
arpl
outs
add
bound
arpl
je
outs
outs
add
outs
arpl
jae
je
jb
dec
outs
outs
add
outs
arpl
jae
inc
imul
ins
inc
jbe
outs
je
popa
outs
fs
gs
push
outs
popa
ins
gs
jbe
outs
je
popa
outs
fs
gs
dec
outs
je
data16
imul
jb
add
gs
gs
jb
jo
outs
jb
push
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
gs
outs
outs
jbe
jb
gs
dec
push
jns
gs
gs
jb
jo
outs
jb
outs
outs
je
js
add
ins
jo
outs
outs
je
outs
outs
jbe
jb
gs
inc
gs
jb
jo
imul
imul
popa
je
push
je
ins
cs
gs
cs
gs
popa
jb
js
jb
jae
imul
outs
jne
inc
outs
ins
ins
arpl
outs
add
outs
jne
add
jo
jne
add
addr16
push
gs
jo
imul
je
push
jne
je
jb
push
jb
arpl
jae
push
inc
outs
ins
ins
arpl
outs
add
outs
arpl
jae
push
add
outs
arpl
jae
outs
fs
add
inc
ins
outs
bound
push
jb
jo
jb
imul
je
ins
cs
gs
dec
gs
outs
jb
dec
outs
outs
jb
popa
je
outs
outs
add
inc
outs
fs
outs
imul
inc
outs
outs
outs
arpl
outs
dec
outs
outs
jb
popa
je
outs
outs
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
ins
push
je
imul
je
ins
cs
popa
je
cs
jno
push
jns
gs
dec
bound
arpl
gs
add
jae
gs
cs
popa
outs
popa
gs
outs
je
dec
popa
outs
popa
gs
outs
je
bound
arpl
popa
jb
push
popa
outs
popa
gs
outs
je
bound
arpl
ins
ins
arpl
outs
add
outs
popa
gs
outs
je
bound
arpl
jne
gs
je
jb
dec
popa
outs
popa
gs
outs
je
popa
jae
dec
bound
arpl
popa
outs
popa
gs
outs
je
bound
arpl
outs
outs
imul
je
outs
outs
dec
popa
outs
popa
addr16
cmp
outs
fs
gs
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fs
bound
inc
gs
je
jo
inc
outs
ins
ins
outs
outs
add
push
cmp
outs
je
imul
gs
outs
outs
jae
data16
dec
jae
outs
add
jb
popa
jns
dec
popa
jbe
push
arpl
jo
inc
outs
outs
jae
jb
arpl
add
jbe
push
arpl
jo
push
popa
jb
ins
gs
jb
add
bound
arpl
jae
outs
inc
outs
outs
jbe
jb
add
outs
outs
inc
outs
outs
jbe
jb
gs
dec
jae
outs
inc
outs
outs
jbe
jb
gs
outs
ins
ins
arpl
outs
add
outs
outs
dec
popa
outs
fs
gs
dec
jae
outs
dec
outs
outs
jb
inc
je
jb
bound
add
outs
outs
push
jb
jo
jb
jns
je
jb
bound
add
outs
outs
push
gs
fs
push
dec
jae
outs
push
gs
fs
js
gs
imul
outs
push
gs
popa
ins
imul
inc
js
gs
imul
gs
outs
arpl
outs
outs
jo
popa
outs
fs
imul
outs
push
gs
popa
ins
imul
outs
outs
push
outs
imul
jp
push
cmp
cmp
je
push
je
je
add
jb
popa
je
imul
outs
push
jb
je
jb
dec
jae
outs
push
jb
je
jb
js
gs
imul
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
je
jo
inc
jb
ja
gs
fs
jo
gs
push
push
ins
push
arpl
inc
imul
ins
popa
jae
add
arpl
inc
imul
ins
popa
jae
xor
cmp
arpl
inc
imul
ins
popa
jae
xor
add
arpl
inc
imul
ins
popa
jae
xor
cmp
arpl
inc
imul
ins
popa
jae
aaa
add
jb
jbe
je
dec
ins
jo
gs
outs
je
je
outs
outs
inc
gs
imul
inc
inc
xor
xor
xor
xor
xor
inc
cmp
cmp
cmp
inc
jge
cmp
arpl
inc
imul
ins
popa
jae
xor
dec
bound
jae
popa
je
fs
jns
imul
gs
je
jb
bound
add
arpl
gs
gs
ins
cs
je
jb
bound
gs
cmp
imul
gs
push
add
xor
cmp
ins
popa
jae
inc
xor
xor
add
push
cmp
cmp
xor
xor
inc
sub
sub
sub
sub
aaa
xor
xor
ss
jge
out
mov
out
mov
add
popf
mov
add
popf
mov
add
popf
mov
add
sahf
add
sahf
add
out
add
sahf
test
out
test
out
xchg
out
xchg
out
mov
out
mov
out
mov
out
mov
out
mov
out
lea
out
mov
out
pop
out
nop
add
sahf
xchg
add
sahf
xchg
add
sahf
xchg
add
sahf
xchg
add
sahf
xchg
add
sahf
xchg
add
sahf
xchg
add
sahf
cwde
add
sahf
cdq
add
sahf
call
sahf
pushf
add
sahf
popf
add
sahf
sahf
add
sahf
lahf
add
sahf
mov
add
sahf
mov
add
sahf
movs
add
sahf
movs
add
sahf
cmps
add
sahf
cmps
add
sahf
test
out
test
add
sahf
stos
add
sahf
lods
add
sahf
lods
add
sahf
scas
add
sahf
scas
add
sahf
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
add
sahf
mov
add
sahf
mov
add
sahf
mov
add
lahf
add
lahf
add
out
add
lahf
test
out
test
out
xchg
out
xchg
out
mov
out
mov
out
mov
out
mov
out
mov
out
lea
out
mov
out
pop
out
nop
add
lahf
xchg
add
lahf
xchg
add
lahf
xchg
add
lahf
xchg
add
lahf
xchg
add
lahf
xchg
add
lahf
xchg
add
lahf
cwde
add
lahf
cdq
add
lahf
call
lahf
pushf
add
lahf
popf
add
lahf
sahf
add
lahf
lahf
add
lahf
mov
add
lahf
mov
add
lahf
movs
add
lahf
movs
add
lahf
cmps
add
lahf
cmps
add
lahf
test
out
test
add
lahf
stos
add
lahf
lods
add
lahf
lods
add
lahf
scas
add
lahf
scas
add
lahf
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
add
lahf
mov
add
lahf
mov
add
lahf
mov
add
mov
add
out
add
mov
test
out
xchg
out
xchg
out
mov
out
mov
out
mov
out
mov
out
mov
out
lea
out
mov
out
pop
out
nop
add
mov
xchg
add
dec
cmp
cmp
cmp
cmp
cmp
jne
pop
pop
add
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
popa
arpl
fs
outs
outs
outs
jns
outs
jne
dec
gs
outs
fs
gs
gs
je
xor
inc
push
and
cmp
inc
popa
arpl
fs
outs
outs
outs
jns
outs
jne
dec
gs
outs
fs
gs
gs
je
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ins
jne
imul
add
push
gs
imul
cmp
cmp
je
add
add
ins
jae
add
ins
ins
add
fs
push
inc
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outs
jb
dec
outs
outs
jb
add
jb
popa
ins
imul
cmp
cmp
cmp
cmp
add
popa
jb
dec
bound
arpl
je
jb
inc
jb
popa
jns
push
jb
jo
jb
jns
popa
ins
add
ins
ins
outs
je
dec
outs
je
addr16
inc
ins
outs
popa
je
inc
outs
fs
bound
arpl
outs
fs
jb
popa
jns
inc
outs
outs
jae
jb
arpl
add
add
push
cmp
jae
add
outs
jo
jb
jns
push
je
jb
add
fs
je
add
inc
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
imul
outs
jae
outs
outs
jae
gs
gs
gs
outs
je
jns
add
xor
pop
je
imul
gs
ins
imul
jne
outs
inc
gs
jne
je
inc
ins
jo
jns
jbe
ins
jne
add
fs
je
je
outs
outs
add
fs
je
push
imul
gs
jb
ins
outs
jbe
push
popa
addr16
jo
gs
and
ins
gs
outs
xor
xor
xor
bound
sub
addr16
outs
je
add
and
cmp
ins
outs
arpl
jae
add
outs
arpl
jae
add
xor
add
add
xor
add
push
cmp
cmp
cmp
cmp
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
push
dec
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
dec
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
dec
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
dec
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
dec
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
dec
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
push
dec
inc
inc
inc
cmp
inc
dec
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
dec
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
arpl
outs
jb
arpl
add
dec
cmp
cmp
cmp
je
imul
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fs
je
push
outs
ins
imul
xor
cmp
jo
popa
je
push
outs
ins
imul
xor
jp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
je
popa
ins
imul
je
ins
gs
gs
imul
cmp
push
gs
imul
push
ins
jne
imul
inc
outs
push
je
jb
add
outs
jo
inc
outs
push
je
jo
dec
outs
jae
popa
ins
ins
add
imul
add
outs
imul
add
jo
inc
outs
inc
jne
jo
dec
js
cmp
cmp
pop
dec
popa
ins
add
push
cmp
popa
ins
jae
inc
gs
popa
jae
inc
outs
fs
pop
inc
jno
popa
ins
imul
outs
gs
popa
ins
imul
push
popa
jb
ins
gs
jb
add
je
inc
gs
push
push
inc
push
cmp
imul
bound
arpl
gs
jb
popa
ins
imul
arpl
jb
je
dec
jae
outs
add
popa
fs
jae
outs
add
outs
inc
outs
outs
jbe
jb
add
fs
inc
jb
outs
jb
jb
ins
outs
jbe
pop
inc
jb
outs
jb
push
jb
je
push
gs
ins
je
dec
jae
outs
push
gs
outs
outs
jae
add
inc
jb
outs
jb
push
jns
je
ins
cs
bound
dec
dec
je
jo
popa
outs
fs
gs
push
jb
arpl
jae
gs
gs
add
jae
gs
cs
bound
dec
dec
je
jo
popa
outs
fs
gs
addr16
dec
jae
gs
popa
bound
addr16
push
jb
jo
jb
jns
popa
ins
add
je
push
jb
jo
jb
jns
popa
ins
add
je
push
jne
je
inc
push
gs
push
outs
imul
jns
add
je
push
popa
ins
jne
add
je
push
popa
ins
jne
push
jns
add
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
je
ins
cs
inc
imul
ins
gs
imul
push
inc
ins
outs
jae
add
je
push
gs
outs
arpl
outs
outs
jo
popa
outs
fs
imul
pop
push
gs
outs
arpl
outs
outs
jo
popa
outs
fs
imul
pop
inc
outs
outs
jbe
jb
gs
add
gs
popa
ins
imul
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
push
jb
je
push
je
je
add
je
inc
outs
jb
popa
je
imul
pop
inc
outs
jb
popa
je
imul
pop
dec
outs
fs
je
je
outs
outs
add
je
dec
outs
fs
je
je
outs
outs
add
je
push
jne
je
inc
push
gs
dec
outs
fs
je
push
gs
dec
outs
fs
je
push
gs
push
jne
je
dec
popa
ins
add
je
push
jne
je
dec
popa
ins
add
jne
push
je
push
je
jb
dec
bound
arpl
jb
je
inc
outs
fs
bound
arpl
jb
je
push
je
jb
inc
jb
popa
jns
push
jb
je
inc
outs
fs
jb
popa
jns
push
jb
je
push
jb
jo
jb
jns
popa
ins
add
imul
js
cmp
cmp
cmp
cmp
cmp
cmp
cmp
je
dec
jne
ins
add
imul
imul
imul
jb
je
push
popa
ins
jne
add
imul
outs
je
push
jb
je
push
push
jo
arpl
cmp
cmp
cmp
cmp
cmp
cmp
dec
gs
outs
jb
je
ins
add
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outs
imul
imul
add
fs
outs
jbe
imul
push
push
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fs
je
push
outs
ins
imul
xor
cmp
outs
jo
ins
popa
je
dec
imul
xor
cmp
jb
inc
gs
imul
gs
bound
xor
cmp
jb
inc
gs
gs
jb
jo
imul
xor
cmp
outs
fs
je
bound
xor
cmp
jne
bound
dec
imul
pop
xor
cmp
gs
outs
jbe
dec
je
ins
dec
outs
je
jb
popa
ins
bound
add
je
jb
pop
push
dec
push
inc
jo
bound
xor
cmp
je
jb
pop
push
dec
push
inc
jo
bound
xor
arpl
jb
jb
push
inc
push
cmp
cmp
add
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
gs
imul
imul
outs
outs
add
push
cmp
cmp
add
outs
arpl
outs
add
bound
push
push
push
cmp
cmp
cmp
cmp
cmp
cmp
add
ins
add
push
cmp
cmp
imul
outs
fs
je
add
outs
jbe
jb
gs
add
add
imul
arpl
jo
add
jae
outs
outs
jae
add
imul
outs
add
arpl
je
js
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
je
jb
je
jb
push
outs
outs
push
jb
je
jb
je
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
popa
push
arpl
jo
add
je
ja
add
push
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ins
add
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ins
bound
imul
bound
arpl
gs
ins
je
bound
cmp
cmp
cmp
cmp
xor
fs
pop
cmp
cmp
xor
fs
cmp
cmp
xor
gs
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
arpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ins
popa
je
push
cmp
cmp
cmp
cmp
push
jns
add
data16
outs
arpl
jno
popa
ins
jae
inc
imul
dec
gs
jne
add
je
push
imul
pop
dec
gs
push
push
jb
ins
inc
imul
addr16
push
je
dec
outs
ja
outs
jo
inc
jb
popa
je
jb
push
inc
jno
popa
ins
add
je
dec
popa
push
jb
addr16
dec
imul
ins
jo
jb
push
outs
add
je
push
outs
je
ins
push
arpl
fs
inc
jo
outs
add
je
dec
outs
addr16
add
jo
outs
fs
imul
gs
addr16
dec
jae
ins
imul
jb
add
je
inc
jne
jb
outs
je
push
add
je
dec
popa
outs
popa
addr16
push
dec
add
je
jb
jne
je
inc
gs
jns
gs
jb
ins
dec
popa
outs
fs
add
inc
jae
imul
inc
jb
ins
add
je
dec
jae
jb
popa
jns
inc
gs
outs
gs
arpl
addr16
outs
je
add
je
outs
outs
jae
jb
arpl
jae
addr16
dec
jae
outs
jne
add
je
imul
je
dec
jae
bound
jb
arpl
gs
dec
jae
outs
je
jb
popa
arpl
addr16
dec
jae
outs
gs
arpl
gs
imul
outs
outs
add
je
dec
jae
popa
ins
jne
push
jns
add
je
outs
outs
jae
jb
arpl
add
je
dec
jae
outs
gs
arpl
add
je
outs
gs
arpl
gs
imul
outs
outs
add
je
dec
jae
ins
popa
jae
add
je
outs
je
jb
popa
arpl
add
je
inc
popa
jae
push
jns
add
je
ins
gs
outs
je
jns
add
je
gs
bound
add
je
imul
gs
jb
jo
jb
imul
pop
inc
jne
ins
dec
popa
ins
add
je
inc
jae
gs
bound
inc
imul
gs
add
imul
outs
gs
arpl
add
imul
gs
fs
imul
je
add
imul
dec
jae
imul
addr16
inc
arpl
imul
add
je
dec
gs
bound
push
jns
add
je
inc
outs
jne
je
inc
outs
jo
push
outs
add
add
je
dec
je
ins
add
je
outs
jne
gs
je
jb
inc
gs
outs
fs
popa
jb
ins
gs
jb
add
je
push
jb
jo
jb
jns
jns
add
je
popa
ins
jne
add
je
popa
ins
jne
add
je
inc
popa
outs
push
gs
add
je
inc
popa
outs
push
jb
je
add
je
jne
je
ins
inc
je
jb
bound
gs
fs
imul
push
imul
outs
ja
popa
je
push
imul
outs
add
je
bound
arpl
gs
je
imul
pop
dec
outs
jbe
jb
popa
outs
je
jne
je
jb
add
dec
jne
ins
dec
jb
ins
jo
jns
push
gs
popa
arpl
inc
outs
outs
arpl
add
jb
popa
je
push
je
jb
jae
imul
jbe
add
outs
ja
jb
inc
outs
outs
je
imul
imul
dec
data16
bound
jb
outs
add
je
inc
push
inc
outs
fs
imul
ja
jb
outs
jbe
jb
popa
outs
je
inc
outs
ins
jo
jb
dec
jb
imul
ins
jo
jb
add
ins
inc
outs
add
fs
gs
push
outs
push
jo
gs
outs
jbe
jb
popa
outs
je
push
jb
ins
add
push
jb
jns
dec
popa
jae
dec
outs
fs
data16
ins
push
je
jb
add
jb
add
push
popa
jb
add
gs
add
imul
outs
add
popa
fs
ins
ins
push
gs
add
imul
js
add
popa
fs
ins
ins
dec
imul
imul
outs
gs
push
gs
fs
ins
ins
inc
jns
gs
push
jb
je
inc
ins
ins
inc
jns
gs
dec
outs
jbe
add
jo
outs
fs
gs
add
je
imul
inc
imul
imul
popa
je
inc
imul
jns
inc
outs
ins
bound
add
je
imul
jns
popa
ins
add
je
imul
imul
je
outs
jae
outs
outs
add
je
imul
inc
gs
gs
jo
imul
dec
popa
jae
js
outs
jae
outs
outs
add
je
outs
jbe
jb
outs
ins
outs
je
popa
jb
popa
bound
inc
gs
outs
ins
fs
popa
je
add
je
dec
push
push
gs
imul
pop
dec
gs
imul
dec
outs
imul
jbe
jae
addr16
inc
gs
jne
je
addr16
push
push
inc
cmp
inc
gs
jns
gs
addr16
push
outs
imul
gs
inc
push
inc
dec
dec
add
imul
gs
push
outs
jae
je
outs
outs
add
popa
fs
jns
gs
push
gs
fs
outs
je
xor
addr16
push
ins
popa
je
outs
jb
add
je
push
gs
imul
pop
inc
jne
jb
outs
je
outs
ins
popa
imul
inc
popa
jae
inc
imul
jns
push
outs
inc
popa
jae
ss
je
imul
ins
inc
popa
jae
ss
je
imul
outs
je
xor
push
outs
dec
outs
je
xor
push
outs
inc
outs
jne
ins
add
push
jae
outs
ja
jb
push
outs
push
jo
gs
dec
jae
push
jo
arpl
dec
jae
gs
gs
jb
imul
dec
jne
bound
add
dec
gs
gs
inc
outs
ins
jo
je
dec
popa
jae
add
js
inc
jns
gs
dec
gs
add
je
jne
data16
push
outs
inc
jb
popa
jns
addr16
inc
js
jae
jae
inc
gs
js
arpl
imul
ins
bound
inc
gs
popa
ins
add
je
inc
outs
fs
popa
jae
add
je
jae
gs
bound
popa
ins
add
je
jns
gs
outs
fs
ins
jo
jb
inc
js
push
add
gs
je
dec
outs
jae
popa
outs
arpl
dec
outs
jbe
dec
gs
add
je
inc
jne
jb
outs
je
inc
outs
jo
add
gs
jb
addr16
dec
gs
dec
popa
js
dec
imul
add
ja
push
jb
outs
arpl
add
je
popa
jb
ins
gs
jb
add
je
push
popa
jb
ins
gs
jb
jns
add
je
inc
imul
add
je
inc
jbe
outs
je
popa
outs
fs
gs
jns
add
je
jne
jb
outs
je
addr16
push
jae
jb
pop
gs
add
je
push
imul
gs
data16
je
popa
jae
push
imul
outs
jb
addr16
inc
outs
fs
push
je
gs
ins
add
outs
jae
popa
je
add
imul
inc
jb
popa
jns
inc
outs
outs
je
imul
jae
je
dec
je
ins
add
je
jb
inc
js
je
popa
fs
push
gs
jne
arpl
gs
ins
jbe
add
je
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
add
je
popa
outs
imul
jae
jne
arpl
popa
ins
gs
inc
gs
jb
jo
jb
jns
push
gs
fs
je
imul
pop
dec
gs
jae
je
dec
push
add
gs
je
inc
arpl
jo
outs
jb
inc
gs
outs
fs
gs
addr16
dec
outs
fs
gs
popa
outs
fs
add
jae
ins
jbe
push
jns
gs
popa
outs
fs
add
jae
ins
jbe
dec
gs
outs
fs
popa
outs
fs
add
je
push
gs
jb
push
jns
add
gs
je
inc
gs
gs
je
add
je
dec
inc
outs
gs
je
jb
inc
ins
imul
je
xor
inc
gs
gs
outs
fs
jb
ins
dec
popa
outs
fs
add
je
dec
jae
je
je
arpl
dec
fs
jb
pop
xor
dec
fs
jb
pop
xor
dec
fs
jb
pop
xor
dec
fs
jb
pop
xor
dec
fs
jb
pop
push
add
ins
ins
add
ins
ins
jbe
jb
add
je
push
jb
arpl
jae
gs
gs
add
je
dec
jae
gs
popa
bound
inc
ins
gs
jb
gs
fs
add
gs
jb
outs
outs
je
outs
je
addr16
dec
jne
jo
je
addr16
push
gs
outs
outs
jae
add
fs
jb
outs
jb
addr16
inc
jb
outs
jb
addr16
inc
ins
imul
imul
inc
popa
ins
ins
bound
imul
outs
je
gs
outs
arpl
popa
fs
inc
push
add
fs
inc
gs
gs
add
fs
push
outs
popa
ins
gs
je
dec
outs
je
data16
imul
je
inc
outs
popa
bound
popa
imul
outs
je
add
je
inc
outs
popa
bound
popa
imul
outs
je
add
je
inc
jne
ins
push
popa
je
add
je
gs
imul
add
je
inc
imul
outs
outs
add
je
inc
jo
push
gs
imul
gs
je
add
je
inc
popa
arpl
push
outs
ins
imul
push
gs
outs
outs
jae
add
je
dec
gs
outs
add
je
inc
outs
outs
je
outs
je
jns
add
je
inc
outs
outs
je
outs
je
outs
addr16
add
je
push
imul
inc
gs
gs
gs
push
je
gs
ins
add
je
gs
outs
outs
jae
push
je
gs
ins
add
je
inc
outs
outs
je
outs
je
outs
addr16
add
je
dec
gs
fs
add
je
push
je
je
jae
outs
fs
je
inc
imul
jae
je
inc
jb
jne
outs
je
add
je
push
jae
push
push
js
arpl
add
je
inc
jb
popa
je
dec
outs
push
imul
gs
push
gs
popa
outs
fs
jb
dec
jne
jo
je
jae
je
push
gs
popa
outs
fs
jb
inc
jb
outs
jb
jae
je
push
je
jb
dec
outs
outs
add
imul
je
inc
gs
jb
arpl
jae
jae
jns
popa
ins
add
je
push
push
jae
inc
ins
outs
jae
dec
popa
imul
ja
dec
imul
dec
popa
jae
js
je
add
je
dec
add
je
dec
popa
imul
add
je
dec
popa
outs
fs
add
je
jb
arpl
jae
jae
addr16
push
jb
arpl
jae
popa
ins
add
je
push
je
jb
dec
outs
outs
add
je
push
je
outs
fs
jb
dec
jne
jo
je
addr16
push
je
outs
fs
jb
inc
jb
outs
jb
inc
gs
jb
arpl
jae
jns
add
je
dec
outs
arpl
push
popa
je
add
gs
popa
jo
inc
popa
je
push
je
imul
inc
outs
outs
jbe
jb
gs
inc
popa
outs
inc
outs
outs
jbe
jb
inc
jb
ins
add
outs
jbe
jb
push
outs
dec
outs
jbe
jb
popa
outs
je
je
imul
jbe
jb
inc
jb
ins
dec
outs
jbe
jb
popa
outs
je
je
imul
jbe
jb
inc
jb
ins
add
outs
inc
outs
outs
jbe
jb
push
outs
add
je
inc
gs
jb
jo
imul
pop
inc
jb
jne
jae
addr16
inc
imul
inc
gs
push
inc
ins
outs
bound
push
jb
jo
jb
imul
inc
arpl
gs
fs
imul
jae
inc
gs
arpl
gs
arpl
outs
outs
outs
arpl
outs
jae
addr16
push
outs
jb
add
je
push
gs
outs
je
inc
outs
fs
outs
imul
pop
dec
jae
jne
ins
add
jbe
imul
je
outs
add
outs
fs
outs
fs
dec
outs
jae
jb
add
je
dec
popa
jae
popa
ins
jne
add
je
popa
ins
jne
dec
jb
gs
jne
je
push
gs
outs
jbe
inc
je
push
jb
inc
gs
popa
ins
jne
add
fs
popa
outs
add
je
dec
gs
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
jb
ins
gs
jb
add
jae
gs
cs
bound
dec
dec
je
jo
popa
outs
fs
gs
dec
jae
gs
popa
bound
push
jne
je
inc
push
outs
imul
jns
add
ins
jne
add
outs
jbe
jb
gs
add
inc
push
cmp
outs
je
je
outs
outs
add
fs
je
push
jne
je
dec
popa
ins
add
inc
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outs
gs
xor
cs
ins
add
fs
ins
cs
ins
add
popa
jo
cs
ins
add
jbe
jo
xor
cs
ins
add
jbe
jo
xor
cs
ins
add
gs
xor
fs
ins
add
gs
outs
jbe
fs
ins
add
jae
outs
fs
push
add
jae
ins
gs
push
add
outs
push
push
add
push
jne
jo
outs
fs
jb
arpl
jae
dec
jo
outs
push
jb
arpl
jae
inc
gs
outs
fs
gs
imul
js
inc
gs
jb
arpl
jae
ins
popa
addr16
imul
push
jne
jb
inc
jne
ins
push
jb
arpl
jae
ins
popa
addr16
popa
ins
add
gs
inc
outs
jae
gs
arpl
inc
ins
outs
jae
dec
popa
outs
fs
add
addr16
jo
outs
dec
gs
js
push
gs
jb
popa
je
dec
gs
js
push
gs
gs
popa
ins
jne
inc
js
push
gs
ins
outs
jae
dec
gs
push
gs
jne
jb
push
popa
ins
jne
inc
js
push
gs
gs
gs
dec
gs
push
gs
gs
gs
push
popa
ins
jne
add
addr16
outs
jne
dec
gs
js
push
gs
outs
jne
push
popa
ins
jne
add
addr16
jne
jb
dec
outs
outs
dec
gs
inc
gs
jns
je
ins
dec
gs
imul
gs
imul
push
outs
ja
xor
jb
arpl
jae
inc
gs
jne
jb
outs
je
jb
arpl
jae
inc
gs
outs
fs
gs
popa
outs
fs
add
je
jb
arpl
fs
jae
add
je
popa
jae
inc
jb
outs
jb
dec
jo
outs
push
jb
arpl
jae
outs
imul
inc
jne
ins
imul
imul
js
inc
jb
popa
je
inc
outs
jbe
jb
outs
ins
outs
je
ins
outs
arpl
inc
gs
jb
jns
outs
jbe
jb
outs
ins
outs
je
ins
outs
arpl
push
popa
imul
ins
gs
bound
arpl
gs
js
je
outs
fs
jb
arpl
jae
inc
jb
popa
je
push
jb
arpl
jae
jae
jae
jb
dec
jne
jo
ins
imul
jae
jb
fs
jo
gs
xor
xor
xor
ins
jae
outs
jb
imul
gs
cs
popa
je
add
inc
inc
cmp
xor
inc
cmp
sub
sub
inc
inc
cmp
xor
inc
jge
push
add
add
add
add
push
add
add
add
mov
add
add
add
mov
ja
sub
xchg
add
dec
add
cs
add
add
add
add
add
pop
std
add
adc
add
add
add
rol
add
nop
add
add
test
adc
add
add
mov
js
fiadd
add
xchg
add
add
add
popf
add
add
icebp
add
add
movs
add
sub
add
add
xchg
add
rol
add
jns
mov
add
add
add
add
xchg
mov
push
add
add
add
fild
jno
xchg
add
rol
add
imul
add
push
add
xor
mov
add
lds
xor
pop
push
add
inc
push
add
pushf
add
add
add
add
fild
jno
xchg
add
rol
add
arpl
stos
add
pop
add
pop
add
add
test
add
das
mov
rol
push
add
add
cwde
add
clc
add
add
add
add
add
arpl
hlt
add
fiadd
add
add
add
retf
add
add
add
add
and
mov
add
repz
add
add
add
jle
xchg
add
add
add
sbb
add
add
add
add
add
add
add
add
add
leave
add
xchg
add
retf
add
pusha
add
add
xor
rol
lock
add
fadd
aaa
add
add
add
arpl
popf
add
inc
test
add
add
add
add
add
add
add
int3
add
cwde
add
clc
add
add
add
add
add
arpl
hlt
add
fiadd
add
add
add
stc
add
cmps
add
in
add
add
add
add
fiadd
hlt
add
add
stc
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
jge
add
add
retf
add
add
add
add
sub
cwde
add
add
add
repz
add
add
add
dec
add
add
add
add
add
add
add
loopne
cmc
add
add
add
cmp
popf
add
mov
add
inc
sub
or
ret
add
add
gs
add
add
stc
add
cmps
add
in
add
add
add
add
fiadd
inc
fld
dec
add
add
add
add
add
add
add
add
add
add
add
add
sti
add
add
add
add
sbb
mov
jl
mov
add
add
add
stc
add
cmps
add
in
add
add
add
add
fiadd
hlt
add
add
stc
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
leave
add
xchg
add
retf
add
pusha
add
add
xor
rol
lock
add
fld
xor
mov
add
add
arpl
popf
add
inc
test
add
add
add
add
add
add
add
int3
add
cwde
add
clc
add
add
add
add
add
arpl
hlt
add
fiadd
add
add
add
retf
add
add
add
add
sub
cwde
add
add
add
hlt
add
add
add
sub
mov
pop
add
add
add
add
add
adc
push
add
add
add
add
add
and
add
add
xchg
add
cli
add
add
add
add
add
mov
ret
add
add
add
add
xchg
add
add
call
add
test
add
sub
loope
or
add
add
leave
add
xchg
add
retf
add
pusha
add
add
xor
rol
lock
add
rol
xor
mov
add
add
arpl
popf
add
inc
test
add
add
add
add
add
add
add
int3
add
cwde
add
clc
add
add
add
add
add
arpl
in
add
add
add
add
jg
call
add
add
add
dec
mov
enter
retf
add
add
add
cmp
add
xchg
add
add
add
out
add
test
dec
add
add
add
outs
add
add
out
add
add
add
add
and
add
add
cwde
add
leave
add
add
add
add
fiadd
add
add
add
leave
add
xchg
add
retf
add
pusha
add
add
xor
rol
lock
add
leave
add
add
add
add
imul
aad
clc
add
add
add
add
add
into
add
add
add
add
jae
add
add
retf
add
add
add
add
sub
cwde
add
add
add
repz
add
add
add
dec
add
add
add
add
add
add
add
loopne
cmc
add
add
add
pop
add
add
add
add
add
sbb
inc
add
add
nop
add
leave
add
add
add
and
add
add
rol
jp
cli
add
add
add
add
add
add
add
leave
add
xchg
add
retf
add
pusha
add
add
xor
rol
lock
add
leave
add
add
add
add
jle
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
mov
enter
retf
add
add
add
add
sub
cwde
add
add
add
repz
add
add
add
dec
add
add
add
add
add
add
add
loopne
cmc
add
add
add
pop
add
add
add
push
xchg
add
add
into
add
add
mov
add
scas
add
add
add
add
add
add
icebp
add
mov
adc
or
out
dec
add
fwait
add
add
add
add
add
add
jmp
add
cmc
add
mov
or
mov
or
push
add
add
add
and
add
add
add
cli
add
add
add
add
add
add
add
into
add
add
mov
add
scas
add
add
add
add
add
add
icebp
add
mov
adc
or
out
dec
add
fwait
add
add
add
add
add
add
add
pop
call
add
xchg
add
retf
add
pusha
add
add
xor
rol
lock
add
aad
add
xchg
add
add
mov
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
jae
add
add
retf
add
add
add
add
sub
cwde
add
add
add
repz
add
add
add
dec
add
add
add
add
add
add
add
loopne
cmc
add
add
add
pop
add
add
add
add
add
mov
and
fld
ins
add
add
cli
add
add
add
add
add
add
add
leave
add
xchg
add
retf
add
pusha
add
add
xor
rol
lock
add
into
add
add
add
add
jle
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
sbb
push
add
add
nop
add
cli
add
add
add
add
add
cdq
add
add
fld
push
rol
jp
cli
add
add
add
add
add
add
add
leave
add
xchg
add
retf
add
pusha
add
add
xor
rol
lock
add
fild
sbb
sahf
add
add
jle
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
cmp
add
add
nop
add
cli
add
add
add
pop
add
add
inc
or
mov
adc
inc
add
add
imul
add
fiadd
pusha
add
add
add
add
add
fiadd
add
add
add
leave
add
xchg
add
retf
add
pusha
add
add
xor
rol
lock
add
ret
add
add
add
add
imul
aad
clc
add
add
add
add
add
into
add
add
add
add
pop
mov
enter
retf
add
add
add
add
add
mov
enter
aad
pusha
add
add
add
add
add
fiadd
add
add
add
leave
add
xchg
add
retf
add
pusha
add
add
xor
rol
lock
add
enter
xchg
add
add
in
jne
imul
aad
clc
add
add
add
add
add
into
add
add
add
add
and
add
add
nop
add
cli
add
add
add
and
nop
add
daa
mov
enter
retf
add
add
add
imul
sbb
je
sub
add
add
add
leave
add
xchg
add
retf
add
pusha
add
add
xor
rol
lock
add
int3
add
add
loop
inc
add
movs
add
into
add
add
add
add
in
add
add
add
add
pop
add
and
add
add
nop
add
cli
add
add
jo
and
add
inc
add
add
add
mov
add
scas
add
add
arpl
ret
add
add
add
leave
add
xchg
add
retf
add
pusha
add
add
xor
rol
lock
add
into
add
add
add
add
pop
add
add
add
add
add
add
add
out
fiadd
call
add
add
and
push
add
add
nop
add
cli
add
add
add
and
nop
add
add
sub
add
add
add
icebp
add
add
add
sub
nop
add
add
popa
call
add
xchg
add
retf
add
pusha
add
add
xor
rol
lock
add
fadd
sbb
cdq
add
add
fadd
inc
add
xchg
add
add
add
add
add
add
add
add
add
add
pop
add
add
pop
stos
add
add
add
stos
add
add
into
add
mov
or
mov
or
fild
add
stos
add
add
add
stos
add
add
into
add
mov
or
mov
pop
stos
add
add
add
stos
add
add
into
add
add
mov
pop
call
add
xchg
add
retf
add
pusha
add
add
xor
rol
lock
add
leave
add
add
add
add
imul
add
rol
loop
mov
mov
add
add
add
out
fiadd
call
add
add
adc
add
add
add
add
add
adc
add
add
sahf
add
cli
add
sub
add
add
inc
cwde
add
dec
add
add
add
add
add
add
mov
ret
add
add
jmp
add
add
add
add
mov
add
add
sahf
add
and
add
add
jmp
add
add
add
add
inc
add
add
xchg
add
or
add
add
add
inc
add
add
jmp
pop
popa
add
mov
push
pop
add
daa
add
add
add
add
cmps
add
add
mov
xlat
add
int3
add
daa
mov
ret
add
add
in
add
add
add
xor
fiadd
mov
mov
add
lods
add
add
fld
ins
add
daa
mov
ret
add
add
cld
add
add
add
xor
fiadd
mov
mov
add
push
add
add
cwde
add
and
add
add
jmp
add
add
add
add
mov
add
add
add
icebp
add
add
add
leave
add
xchg
add
add
stos
add
add
int3
add
add
mov
ret
add
add
hlt
add
add
add
add
add
add
add
mov
ret
add
add
in
add
add
add
xor
fiadd
mov
mov
add
mov
ret
add
add
sti
add
add
add
add
add
add
add
lods
add
add
add
add
add
mov
ret
add
add
clc
add
add
add
xor
fiadd
mov
mov
add
mov
ret
add
add
add
add
add
arpl
lahf
add
add
add
or
push
add
add
test
add
mov
ret
add
add
hlt
add
add
add
sub
call
add
add
arpl
fild
add
add
add
add
add
cmp
mov
rol
les
jg
repz
add
add
add
add
add
add
add
add
add
add
std
add
add
add
add
add
daa
mov
ret
add
add
xchg
add
mov
add
cld
add
sbb
ja
es
add
pop
xchg
add
add
aad
ins
add
add
add
add
and
push
add
cwde
add
add
add
mov
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
sub
add
add
in
add
cld
add
or
jb
xor
mov
lea
mov
sub
add
mov
ret
add
add
xchg
add
mov
add
cld
add
and
push
add
cwde
add
add
add
mov
add
xor
add
add
mov
add
scas
add
push
add
arpl
fwait
add
add
add
out
add
xlat
add
add
stos
add
add
cli
add
add
rol
daa
mov
ret
add
add
xchg
add
mov
add
add
sbb
ja
es
add
push
xchg
add
add
aad
ins
add
add
add
add
sbb
ja
es
add
add
add
mov
add
add
in
inc
add
pushf
add
add
add
add
add
add
cmp
scas
add
xor
add
add
cli
add
add
arpl
mov
add
aaa
add
add
add
add
jmp
add
or
add
pushf
add
add
fild
jno
xchg
add
mov
add
add
sbb
add
add
mov
add
add
add
sahf
add
sti
add
add
add
sub
add
add
add
mov
add
add
call
add
popf
add
add
call
add
sahf
add
in
add
cld
add
or
jb
xor
mov
xchg
add
add
mov
add
add
stos
add
add
inc
lea
leave
add
fild
bound
cwde
add
jmp
pop
popa
add
mov
dec
add
jle
cmp
mov
rol
les
jg
repz
add
add
add
add
add
aam
lods
add
add
adc
add
add
add
add
add
add
xchg
add
rol
push
add
add
add
add
and
add
add
cwde
add
jmp
pop
popa
add
mov
add
or
add
add
add
rol
pusha
add
add
add
add
add
add
mov
add
add
sub
add
add
add
add
add
add
add
sub
pop
add
add
xchg
add
mov
add
cld
add
add
add
add
add
cmps
add
add
add
add
aad
ins
add
add
add
add
sbb
ja
es
add
add
add
mov
add
add
in
inc
add
pushf
add
add
add
add
add
add
cmp
scas
add
adc
pop
add
add
add
add
add
je
add
add
xchg
add
add
pop
add
add
cdq
add
and
pop
add
add
add
add
add
add
je
xor
fwait
add
add
adc
into
add
cwde
add
inc
add
inc
add
add
nop
add
or
pop
add
add
sahf
add
je
add
add
xchg
add
je
add
add
pushf
add
add
test
loope
pop
add
add
xchg
add
out
add
inc
add
add
call
add
fadd
add
adc
int
jno
xchg
add
inc
test
add
pop
add
add
cwde
add
inc
test
ja
add
add
add
cld
add
sahf
add
in
add
add
add
add
fiadd
call
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
test
jns
mov
mov
arpl
add
add
sahf
add
in
add
add
add
aaa
add
ins
add
add
add
add
or
test
add
lahf
add
fadd
mov
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cld
add
sahf
add
in
add
add
add
add
fiadd
call
add
add
add
dec
add
add
imul
rol
mov
cmps
add
add
ins
lahf
add
add
cld
add
sahf
add
in
add
add
add
add
fiadd
call
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
fadd
inc
add
add
add
lahf
add
add
cld
add
sahf
add
in
add
add
add
add
fiadd
call
add
add
add
add
add
into
add
add
add
add
add
add
add
add
add
push
add
add
add
add
adc
rol
add
add
add
add
add
addr16
add
add
fild
jno
xchg
add
in
add
add
add
sub
call
add
add
add
in
inc
add
popf
add
retf
add
add
xchg
leave
add
add
add
je
dec
add
add
add
add
add
fild
jno
xchg
add
in
add
add
add
sub
call
add
add
add
cld
add
push
add
add
add
rol
fiadd
jl
jne
jmp
add
add
add
add
add
add
clc
add
das
add
add
out
add
imul
aad
push
add
add
add
add
add
add
add
add
add
add
add
dec
add
mov
push
add
into
add
pop
jmp
add
add
test
add
add
add
add
add
out
add
add
add
add
xchg
add
add
int3
add
jl
add
add
add
add
add
add
add
push
add
add
test
add
cdq
add
add
fld
push
add
pop
add
add
mov
add
mov
enter
fld
ins
add
or
push
add
add
cwde
add
or
add
add
add
mov
enter
retf
add
add
adc
add
add
add
icebp
add
add
add
stc
add
mov
popa
add
add
add
add
add
xlat
add
adc
add
add
mov
add
add
int3
add
add
jmp
pop
popa
add
mov
aaa
mov
ret
add
add
lahf
add
cli
add
add
imul
or
imul
add
add
cld
add
add
add
add
add
add
retf
add
add
add
add
mov
dec
add
add
add
add
add
repz
add
add
add
sub
mov
adc
rol
add
add
add
add
rol
pusha
add
add
add
add
sub
lahf
add
add
add
add
add
add
add
add
pop
clc
add
aaa
cdq
add
add
sahf
add
xchg
add
jmp
add
add
pop
add
xor
xchg
add
add
add
cld
add
add
add
add
add
sbb
add
add
add
add
add
add
inc
add
add
add
test
je
sub
scas
add
add
outs
add
add
add
cmc
add
add
mov
ret
add
add
add
add
add
test
add
daa
add
add
add
add
inc
adc
add
add
add
fwait
add
add
retf
add
add
add
jb
aaa
add
add
sub
add
add
lahf
add
mov
scas
add
jg
lods
add
add
jb
aaa
add
add
add
add
add
fild
imul
add
cli
add
add
pop
mov
add
add
nop
add
cli
add
add
add
add
sub
rol
imul
sti
add
add
add
and
xchg
add
add
dec
sahf
add
add
rol
pusha
add
add
add
add
sub
mov
fld
mov
add
add
add
add
add
pusha
add
add
add
add
add
add
retf
add
add
add
add
mov
dec
add
add
or
inc
add
add
add
daa
mov
enter
retf
add
add
add
add
arpl
mov
fadd
mov
add
mov
call
add
inc
mov
add
add
add
jmp
add
add
repz
pop
add
add
add
call
add
add
cld
add
bound
nop
add
fadd
repnz
add
add
rol
pusha
add
add
add
add
add
add
add
std
add
xlat
add
or
add
lahf
add
add
std
add
lahf
add
test
add
jle
mov
add
add
add
repz
add
add
add
sub
add
add
add
std
add
lahf
add
test
add
jle
mov
add
add
add
repz
add
add
add
jl
pushf
add
add
add
add
add
add
add
add
sbb
pop
add
add
add
mov
add
mov
inc
add
add
xor
pop
add
add
cwde
add
clc
add
add
add
add
arpl
fwait
add
add
add
hlt
add
add
add
add
add
fild
jno
cwde
add
clc
add
add
add
add
arpl
fwait
add
add
add
hlt
add
add
add
add
in
mov
stos
add
aad
retf
add
add
mov
mov
inc
mov
call
add
mov
jle
fiadd
mov
push
add
mov
dec
add
add
pop
add
add
test
daa
add
in
inc
add
add
add
add
add
adc
add
add
nop
add
cli
add
add
aas
lahf
add
add
std
add
add
add
add
add
add
add
fiadd
call
add
cdq
add
add
add
add
imul
pushf
add
dec
lahf
add
add
fld
imul
fadd
add
add
mov
dec
add
add
xor
fwait
add
add
add
add
cmc
add
ins
add
add
add
add
add
add
xor
add
add
xchg
add
in
add
add
add
xor
mov
add
add
xlat
add
add
lahf
add
add
stc
add
cmps
add
in
add
add
add
aaa
add
add
test
add
add
add
mov
rol
inc
add
add
add
add
add
add
add
and
add
add
add
jmp
add
add
add
add
sub
cwde
add
add
add
repz
add
add
add
add
xchg
add
add
add
add
push
mov
call
add
mov
jle
fiadd
mov
pop
add
mov
add
sub
cwde
add
add
add
repz
add
add
add
js
rol
arpl
rol
jecxz
xchg
mov
add
add
add
and
inc
add
add
popf
add
fiadd
test
add
pop
pop
add
add
add
mov
call
add
mov
jle
fiadd
mov
pop
add
mov
add
sub
cwde
add
add
add
repz
add
add
add
add
xchg
add
add
add
add
add
add
add
jecxz
mov
rol
test
test
xor
and
cmp
mov
data16
add
inc
xor
or
add
pushf
add
add
fild
add
add
add
add
add
push
add
add
cmc
add
add
add
dec
pushf
add
add
fild
add
add
add
pop
pop
add
add
add
imul
add
add
cmc
add
jle
pushf
add
fld
hlt
add
add
add
push
mov
call
add
mov
jle
fiadd
mov
pop
add
mov
add
sub
cwde
add
add
add
repz
add
add
add
add
xchg
add
add
add
add
add
add
add
loope
add
mov
les
pop
add
add
test
inc
add
add
add
jnp
add
add
jmp
add
add
add
add
sub
cwde
add
add
add
repz
add
add
add
js
rol
arpl
rol
jecxz
xchg
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
jmp
add
add
add
add
sub
cwde
add
add
add
repz
add
add
add
js
rol
arpl
rol
jecxz
xchg
mov
add
add
add
add
add
add
push
add
add
fld
ins
add
pop
mov
add
adc
add
add
add
add
add
add
into
add
popf
add
out
add
sbb
add
add
popf
add
out
add
add
imul
scas
add
add
aam
jo
pushf
add
add
add
add
add
add
add
add
add
test
or
dec
add
add
add
add
into
add
retf
add
add
add
mov
pop
add
add
and
add
add
inc
add
add
icebp
add
ins
add
add
add
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
add
add
mov
and
clc
add
ret
add
add
add
add
test
test
add
add
add
add
inc
mov
add
add
add
mov
jg
jl
mov
add
sub
popf
add
add
add
repz
add
add
add
add
add
add
dec
out
add
add
xchg
arpl
xchg
add
cli
add
add
cmp
in
add
add
enter
xchg
outs
add
add
xchg
add
sbb
icebp
add
add
nop
add
mov
icebp
add
add
add
and
add
add
out
add
lods
add
add
jle
aaa
add
cmp
add
add
pushf
add
add
add
add
add
add
add
add
add
test
or
dec
add
add
add
add
retf
add
add
add
add
pop
add
xor
cwde
add
add
add
add
add
cmp
push
add
add
nop
add
cli
add
add
je
test
dec
add
push
add
add
add
add
stc
add
add
or
add
add
mov
jae
add
add
retf
add
add
add
add
add
add
cmc
add
add
add
add
jle
pushf
add
fld
retf
add
add
add
add
add
loopne
cmc
add
add
add
add
nop
add
mov
add
sti
add
add
fiadd
add
scas
add
add
int
ins
add
aas
xchg
add
add
fiadd
ins
add
add
scas
add
add
arpl
cwde
add
add
add
mov
add
add
jle
mov
sbb
pushf
add
das
fwait
add
add
add
cwde
add
cli
add
add
arpl
mov
add
sub
mov
xchg
add
add
add
add
add
add
add
mov
inc
add
add
add
add
daa
mov
ret
add
add
add
mov
add
add
add
arpl
mov
fadd
mov
add
fwait
add
add
fild
imul
add
clc
add
add
add
add
cmp
fiadd
rol
retf
add
sti
add
inc
pushf
add
add
fild
data16
add
add
outs
add
add
add
add
add
stc
add
add
add
dec
add
add
imul
fiadd
clc
add
sbb
add
add
add
arpl
scas
add
add
add
add
add
add
inc
add
xlat
add
add
icebp
add
sub
sahf
add
lds
mov
mov
test
add
add
add
jmp
add
add
add
out
add
add
add
add
add
add
adc
inc
add
add
rol
dec
add
add
xor
add
add
add
rol
dec
add
add
add
add
push
add
and
mov
aam
ret
add
add
test
adc
or
add
mov
mov
add
add
xchg
add
jmp
les
jns
jg
mov
inc
add
cmp
add
add
add
add
add
scas
add
push
add
sub
xchg
add
add
add
cld
add
add
add
add
or
add
add
add
add
mov
rol
push
add
add
cwde
add
clc
add
add
bound
lods
add
add
add
lods
add
add
inc
lea
leave
add
add
call
add
add
add
jg
add
add
sti
add
add
add
add
add
add
pop
lea
leave
add
add
call
add
add
add
jg
add
add
sti
add
add
add
add
add
add
aad
rol
sub
cmp
scas
add
add
add
add
pxor
fld
push
add
add
add
sbb
mov
push
add
add
icebp
add
push
add
jb
add
add
inc
lea
leave
add
fadd
imul
jmp
test
xor
jl
mov
add
arpl
xchg
add
add
add
cld
add
test
push
add
cli
add
arpl
popf
add
add
add
add
add
pop
mov
ret
add
cmp
push
add
add
xchg
add
mov
add
mov
dec
add
add
aaa
add
add
add
add
hlt
add
add
add
clc
add
add
xchg
add
add
add
add
fadd
imul
jmp
test
xor
push
mov
inc
add
add
add
add
add
inc
add
add
add
jecxz
dec
add
rol
dec
add
add
add
add
add
call
add
add
add
imul
ret
add
mov
add
pop
add
add
imul
iret
add
rol
push
add
add
add
add
sub
add
add
fld
and
scas
add
add
add
outs
add
add
add
add
cmp
add
add
call
add
add
add
imul
ret
add
mov
add
dec
add
add
jg
xchg
add
inc
pushf
add
add
rol
imul
sti
add
add
add
sub
add
add
mov
add
add
inc
dec
add
xchg
add
add
add
add
add
add
rol
imul
sti
add
add
add
sub
add
add
mov
add
add
stc
add
inc
add
add
add
add
fild
jno
xchg
add
inc
pushf
add
add
rol
imul
sti
add
add
add
sub
add
add
mov
add
add
in
inc
add
xchg
push
add
add
add
or
push
add
add
int3
add
add
add
pushf
add
add
rol
imul
sti
add
add
add
sub
add
add
mov
add
pop
pushf
add
add
fild
jno
xchg
add
int
mov
sub
sub
add
mov
rol
push
add
add
rol
push
add
pusha
add
add
xor
xchg
lahf
add
add
add
fild
jno
cwde
add
clc
add
add
arpl
mov
add
add
add
add
cmc
add
add
add
add
mov
add
mov
mov
add
add
rol
outs
add
add
add
xor
rol
imul
sti
add
add
add
add
rol
xchg
add
add
out
add
add
add
or
add
mov
rol
push
add
add
cwde
add
clc
add
add
add
add
aaa
add
add
cmc
add
add
add
add
add
add
add
fild
ja
nop
add
cli
add
add
add
aaa
add
add
mov
push
add
add
add
bound
xchg
add
aad
clc
add
add
add
add
add
scas
add
inc
lahf
add
add
fild
ja
nop
add
cli
add
add
add
aaa
add
add
mov
push
add
add
add
js
fwait
add
add
add
add
cmp
add
add
nop
add
cli
add
add
add
aaa
add
add
mov
push
add
add
add
add
add
add
aas
lahf
add
add
fild
ja
nop
add
cli
add
add
add
aaa
add
add
mov
push
add
add
add
js
rol
pop
add
iret
add
rol
push
add
add
add
add
add
add
out
add
mov
add
add
pop
add
add
add
add
add
add
add
lea
xlat
add
fild
jno
xchg
add
mov
add
add
adc
outs
add
add
add
add
add
call
add
add
in
push
add
add
test
mov
add
add
sub
add
add
cwde
add
clc
add
add
imul
add
outs
add
add
add
add
inc
lea
xlat
add
fild
jno
xchg
add
mov
add
add
pop
add
xor
xchg
add
add
add
repz
add
add
add
test
xchg
push
add
add
and
push
add
add
cwde
add
clc
add
add
arpl
mov
inc
add
add
ins
add
add
add
add
repz
add
add
movs
add
pop
add
xor
xchg
add
add
add
sti
add
xchg
add
add
add
sbb
add
add
fiadd
stos
add
and
jmp
add
iret
add
add
add
imul
add
add
mov
adc
mov
rol
lods
add
add
add
data16
add
add
add
mov
add
add
add
add
add
add
call
add
add
jl
dec
add
sub
sub
and
add
or
add
add
jmp
add
add
add
add
sub
cwde
add
add
add
repz
add
add
add
dec
add
add
add
add
add
add
add
loopne
cmc
add
add
add
sbb
fadd
pop
add
add
out
add
add
add
add
add
mov
add
add
add
ss
add
add
add
add
add
add
adc
add
cwde
add
add
add
inc
add
add
add
add
add
add
in
add
add
lahf
add
add
retf
add
mov
add
add
add
sub
xchg
add
add
add
daa
lahf
add
add
retf
add
mov
add
add
add
ins
add
add
pop
sahf
add
add
fild
push
add
add
add
xor
inc
add
add
rol
pop
add
add
add
add
arpl
mov
rol
int
gs
add
add
add
add
add
xlat
add
mov
or
icebp
add
add
add
daa
add
add
add
add
call
add
add
in
push
add
fild
add
fld
repz
add
add
seta
xlat
add
xlat
add
lahf
add
add
fs
add
cdq
add
adc
fild
imul
rol
add
pushf
add
add
into
add
nop
add
rol
mov
jle
imul
enter
fild
imul
in
add
add
add
sbb
add
adc
inc
add
add
add
add
add
xchg
add
add
aad
add
xchg
add
add
fild
imul
test
add
lahf
add
add
repnz
add
add
push
add
add
add
xor
push
add
add
rol
pop
add
add
add
add
add
gs
add
add
add
add
add
rol
popa
add
add
int
mov
xor
add
add
and
xchg
add
add
add
jecxz
push
add
add
add
jne
leave
add
add
cmp
add
add
add
add
add
add
add
add
mov
add
add
mov
push
add
rol
add
cdq
add
add
fild
popa
add
add
int
mov
xor
js
mov
or
add
xchg
add
add
add
jecxz
push
add
add
add
jne
add
stos
add
add
retf
add
add
stos
add
add
rol
add
add
add
add
rol
pusha
add
add
add
add
xlat
add
xchg
add
clc
add
add
add
sub
add
add
inc
pop
add
inc
ins
add
sahf
add
iret
add
add
add
add
add
add
add
add
add
add
add
mov
jg
add
add
xlat
add
xchg
add
jmp
test
xor
imul
add
outs
add
add
add
retf
add
add
add
bound
xchg
add
les
jecxz
mov
mov
add
add
add
out
add
add
add
add
dec
add
add
add
add
inc
add
add
add
add
inc
cdq
add
add
xlat
add
xchg
add
leave
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int
ins
add
add
add
daa
fwait
add
add
fild
jno
xchg
add
mov
add
cld
add
add
outs
add
xchg
add
add
add
sbb
add
add
test
pop
add
add
add
arpl
mov
add
fwait
add
add
fild
jno
cwde
add
clc
add
add
imul
add
je
das
add
add
cld
add
add
cmp
add
add
cwde
add
clc
add
add
arpl
mov
inc
add
add
arpl
cwde
add
add
add
mov
add
pop
add
add
add
add
add
lock
add
add
out
add
add
mov
inc
add
add
add
jecxz
push
add
add
add
add
add
fadd
repnz
aad
lahf
add
add
add
add
add
add
mov
enter
xlat
add
mov
or
cld
add
add
add
jns
fiadd
add
add
add
int
jno
cwde
add
clc
add
add
arpl
mov
inc
add
add
arpl
lahf
add
add
add
sti
add
add
inc
dec
add
xchg
add
rol
in
into
add
add
pop
add
add
ret
add
add
add
add
xor
add
add
rol
outs
add
add
add
add
add
add
cld
add
add
adc
add
add
add
mov
add
add
add
pop
add
add
mov
inc
add
add
add
add
add
fiadd
pusha
add
add
add
add
add
and
add
add
add
add
add
add
sahf
add
add
add
add
add
add
sbb
add
add
fld
mov
and
jle
lock
add
and
push
add
add
cwde
add
clc
add
add
ins
add
add
sub
mov
xchg
add
das
sahf
add
add
fild
and
add
add
cld
add
pop
add
add
add
mov
add
sub
add
add
add
mov
add
stos
add
sbb
outs
add
add
add
add
add
mov
add
add
rol
pusha
add
add
add
add
add
add
add
add
add
add
fild
and
add
add
mov
dec
add
add
add
mov
lds
rol
sub
out
add
add
add
add
jnp
add
repnz
add
add
add
cmp
add
add
add
add
mov
dec
add
add
add
mov
(bad)
add
add
mov
add
add
in
add
and
rol
add
fwait
add
add
fild
jno
cwde
add
clc
add
add
add
add
sub
mov
into
add
add
add
retf
add
add
mov
and
add
add
add
add
add
add
add
sbb
ja
es
add
and
pop
add
add
add
mov
add
lods
add
add
add
pop
xchg
add
add
int3
add
add
add
add
add
add
add
cmp
pop
add
add
xchg
add
test
add
sub
icebp
add
add
add
add
mov
add
add
cmc
add
ss
add
add
inc
sahf
add
add
rol
pusha
add
add
mov
pop
add
ja
sub
lahf
add
add
add
test
add
add
add
out
dec
add
pushf
add
fadd
mov
add
xchg
add
add
rol
ins
add
add
mov
add
add
inc
add
add
sahf
add
add
scas
add
add
arpl
ret
add
add
imul
add
add
add
add
sub
add
add
test
add
add
add
add
add
add
add
jmp
add
pop
add
add
mov
add
imul
fild
imul
leave
add
add
add
sub
add
add
test
add
add
add
add
add
add
add
jmp
add
pop
add
add
mov
in
add
sub
push
add
add
cwde
add
clc
add
add
add
add
add
add
add
add
repnz
add
xchg
add
add
xlat
add
popf
add
ret
add
mov
add
pop
add
add
repz
add
aaa
lahf
add
add
clc
add
movs
add
cli
add
add
add
add
add
add
mov
add
add
stos
add
add
or
add
add
add
sahf
add
add
fild
inc
add
add
add
add
push
add
and
mov
hlt
add
add
repnz
int
inc
add
add
pop
test
loopne
pop
add
add
popf
add
ret
add
add
add
push
add
add
fiadd
adc
add
add
aam
inc
add
xchg
add
rol
jecxz
mov
mov
add
add
add
jmp
add
add
add
rol
bound
popf
add
ret
add
add
add
push
add
add
fiadd
adc
add
add
aam
inc
add
xchg
add
rol
jecxz
mov
scas
add
aam
rol
sub
jle
in
add
add
add
add
or
cdq
add
mov
out
add
add
arpl
stc
add
add
add
add
add
add
add
add
sti
add
add
add
add
add
add
add
add
add
add
add
std
add
add
add
add
ltr
test
inc
push
add
add
xchg
add
add
add
add
xor
xchg
add
add
add
call
add
add
loop
add
dec
add
add
add
add
add
add
add
rol
retf
add
add
add
or
xchg
add
mov
repnz
dec
test
repz
int3
add
cdq
add
retf
add
jle
cld
add
adc
outs
add
add
add
sti
add
fwait
add
add
rol
add
xchg
add
into
add
add
add
add
push
test
call
add
nop
add
int3
add
add
add
pop
add
add
sti
add
movs
add
add
repnz
imul
into
add
add
add
add
add
add
cld
add
adc
add
add
add
in
add
adc
inc
add
add
add
add
add
mov
add
add
popf
add
rol
add
ins
add
add
add
clc
add
add
sahf
add
or
add
add
add
sahf
add
add
rol
popa
add
add
jmp
mov
add
cld
add
adc
cmp
add
clc
add
add
int3
add
add
add
add
add
add
inc
pushf
add
add
rol
and
test
or
stc
add
add
add
push
add
aaa
add
add
call
add
add
cmc
add
jg
call
add
push
add
add
fadd
ins
add
sub
add
add
scas
add
add
add
add
add
add
add
sahf
add
add
rol
popa
add
add
cli
add
add
add
sub
xor
inc
add
add
rol
inc
add
add
add
add
add
add
gs
add
xlat
add
add
add
xor
inc
add
add
rol
inc
add
add
add
add
add
add
add
out
add
add
add
add
add
and
add
add
cwde
add
clc
add
add
dec
add
add
adc
js
sub
fwait
add
aaa
lahf
add
add
test
pop
add
add
add
add
add
add
add
mov
add
add
stos
add
add
sub
add
add
add
add
add
add
add
sub
fwait
add
add
add
add
add
xchg
dec
add
add
add
add
add
add
int
sbb
cdq
add
add
out
push
add
mov
push
add
add
add
add
add
add
add
out
hlt
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
pop
fwait
add
add
retf
add
add
add
push
cdq
add
add
fild
push
add
add
test
inc
add
push
add
add
add
test
or
or
in
dec
add
xchg
add
fadd
mov
add
aam
int3
add
add
add
cmp
add
add
repz
add
arpl
cld
add
push
add
add
add
add
add
add
add
add
inc
mov
retf
add
fld
ins
add
add
add
add
arpl
lahf
add
add
add
inc
push
add
add
dec
add
add
add
stos
add
add
cmp
add
add
add
(bad)
add
add
add
add
add
add
mov
add
add
loopne
add
xor
rol
add
add
add
sahf
add
nop
add
repz
add
arpl
cld
add
sbb
jb
sub
add
add
test
add
add
dec
add
add
add
stos
add
add
sbb
aad
inc
add
add
add
outs
add
add
add
fild
imul
out
add
add
adc
add
add
fadd
add
add
mov
mov
add
add
add
adc
add
add
clc
add
add
retf
add
setl
ret
add
add
popf
add
add
mov
mov
add
add
add
add
add
add
add
add
setns
xlat
add
add
add
add
pushf
add
add
inc
push
add
jno
add
add
jmp
add
add
add
add
sub
cwde
add
add
add
repz
add
add
add
add
cmps
add
inc
loop
pushf
add
add
add
add
std
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
fild
add
add
add
int
jno
add
add
add
add
add
adc
jbe
es
add
add
add
hlt
add
add
add
add
add
sahf
add
enter
rol
add
add
or
add
add
or
add
add
add
mov
rol
pop
add
add
adc
add
add
cwde
add
cli
add
add
add
sahf
add
nop
add
cli
add
add
add
add
add
retf
add
add
sahf
add
push
add
add
es
add
add
add
xlat
add
add
cmc
add
add
fwait
add
pushf
add
add
add
add
add
add
out
add
add
add
add
lldt
add
add
add
clc
add
add
retf
add
cmps
add
mov
test
aaa
add
add
add
add
add
add
movs
add
imul
add
inc
add
inc
add
add
add
add
add
dec
mov
add
add
mov
add
cld
add
add
jle
xor
mov
fiadd
into
add
hlt
add
mov
adc
inc
add
add
jg
pushf
add
add
add
add
add
add
add
mov
add
add
mov
pop
add
or
add
add
or
push
add
add
add
push
lea
leave
add
fild
ja
pushf
add
icebp
add
add
add
xor
xchg
add
add
add
add
add
add
repz
imul
fadd
repnz
add
add
add
add
mov
mov
add
add
mov
add
pop
ja
sub
scas
add
adc
outs
add
add
add
add
add
fild
ja
rol
pop
add
add
add
add
arpl
mov
(bad)
add
add
inc
push
add
add
add
imul
fld
hlt
add
add
add
std
add
add
add
add
sbb
popf
add
repnz
add
add
add
add
add
add
add
add
dec
xchg
add
add
fild
imul
mov
add
lods
add
add
outs
add
add
add
add
add
hlt
add
add
cmc
add
sub
nop
add
fld
in
pop
scas
add
add
add
cmp
add
add
add
rol
push
add
add
add
add
jns
mov
pop
add
add
arpl
mov
lds
lds
jl
inc
add
add
add
mov
data16
add
fild
jecxz
mov
test
add
xchg
add
add
add
fild
imul
mov
add
mov
add
sub
mov
ret
add
add
add
add
add
sub
call
add
add
add
add
add
add
add
add
add
add
or
mov
xor
repnz
ins
lea
leave
add
mov
add
pop
ja
sub
mov
add
and
popf
add
add
add
mov
add
add
in
dec
add
xchg
add
fld
repz
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
sbb
push
add
add
xchg
add
jmp
pop
ja
sub
mov
add
or
fild
add
mov
ret
add
imul
add
add
in
add
push
add
xor
fiadd
fld
lds
js
mov
add
add
hlt
add
add
pushf
add
pushf
add
add
add
add
add
add
add
add
add
add
add
add
add
jecxz
cld
add
add
cmp
add
add
rol
pop
add
add
add
add
sub
fwait
add
add
add
add
add
add
ins
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
mov
inc
add
add
in
add
add
add
pop
add
movs
add
outs
add
add
inc
add
inc
add
add
add
add
add
cmp
add
add
inc
xchg
jp
push
add
add
add
add
cmc
add
add
add
add
ss
add
inc
popf
add
add
rol
ja
rol
pop
add
add
add
add
sub
xchg
add
add
add
out
add
xlat
add
add
loopne
inc
add
xchg
inc
add
add
add
cmp
add
add
rol
pop
add
add
add
add
sub
xchg
add
add
add
hlt
add
add
in
inc
add
add
xor
add
add
rol
pop
add
add
add
add
add
add
sti
add
add
add
inc
add
add
rol
pop
add
add
add
add
sub
add
add
hlt
add
xchg
add
pop
add
add
jns
xchg
add
add
scas
add
add
retf
add
add
add
add
mov
add
pop
ja
sub
mov
add
add
xchg
add
add
add
mov
add
add
loop
dec
add
lahf
add
mov
add
add
add
add
add
test
add
push
lea
leave
add
mov
add
pop
ja
sub
mov
add
add
xchg
add
add
add
mov
add
add
loop
dec
add
lahf
add
mov
add
add
add
add
add
in
add
add
add
add
mov
add
pop
ja
sub
test
inc
add
add
sub
add
add
test
add
add
add
jecxz
inc
add
call
add
rol
add
add
in
inc
out
cwde
add
add
pop
lea
leave
add
mov
add
pop
ja
sub
test
inc
add
add
sub
add
add
test
add
add
add
add
add
add
add
add
jmp
add
add
arpl
add
add
test
or
cld
add
add
add
add
pushf
add
add
add
out
add
cwde
add
or
in
pop
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
push
lea
leave
add
mov
add
pop
ja
sub
mov
add
add
xchg
add
add
add
jmp
add
add
inc
inc
add
mov
adc
rol
add
add
add
add
add
mov
add
add
rol
popa
add
add
lock
add
add
add
add
add
call
add
add
add
add
sub
pushf
add
add
add
lds
retf
add
add
add
add
add
xchg
cmp
scas
add
add
add
mov
add
pop
ja
sub
test
inc
add
add
sub
add
add
hlt
add
xchg
add
add
cmc
add
add
add
add
add
add
jmp
add
add
push
lea
leave
add
mov
add
pop
ja
sub
mov
add
add
xchg
add
add
add
inc
adc
test
pop
add
stc
add
pusha
add
add
add
add
add
add
add
sti
add
add
add
rol
push
add
add
sub
add
add
add
add
add
add
and
fiadd
fild
lds
arpl
jmp
add
mov
add
pop
ja
sub
mov
dec
add
jle
xor
fwait
add
add
add
(bad)
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
pop
xchg
add
add
fild
imul
mov
add
test
dec
add
cmp
add
add
add
fild
imul
add
jmp
add
add
cld
add
adc
ja
add
add
jmp
add
add
mov
inc
add
xchg
add
enter
pushf
add
add
add
add
add
add
sbb
add
add
cwde
add
mov
add
mov
add
sub
mov
ret
add
add
add
add
add
mov
lea
movs
add
aam
fiadd
aas
add
jmp
add
add
add
add
repnz
add
mov
add
add
add
add
add
push
add
jne
or
add
adc
dec
add
add
add
add
add
add
add
inc
lea
leave
add
mov
add
pop
ja
sub
test
push
add
add
arpl
mov
fild
iret
add
mov
add
add
stc
add
imul
add
rol
repz
add
add
daa
xchg
add
add
retf
add
add
cld
add
sbb
add
add
xor
add
add
sahf
add
cli
add
add
arpl
mov
dec
add
cmp
and
add
add
add
add
and
adc
retf
add
add
add
arpl
cld
add
push
add
add
add
add
daa
xchg
add
add
fild
imul
mov
add
mov
jns
sbb
add
add
and
pop
add
add
xchg
inc
add
add
mov
jns
or
imul
add
add
mov
enter
fild
imul
add
scas
add
add
add
and
mov
rol
mov
ja
stos
add
xlat
add
add
push
add
add
add
add
add
add
add
add
and
add
add
add
add
or
add
fadd
mov
add
add
leave
add
add
add
add
add
add
add
mov
inc
add
add
add
add
es
add
add
add
call
add
add
loop
push
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
xchg
add
in
add
add
add
add
sub
fwait
add
add
add
xlat
add
push
add
add
add
rol
in
mov
lods
add
add
add
add
add
add
add
dec
add
add
add
add
add
fiadd
mov
add
test
add
add
add
add
add
add
sbb
fs
add
jnp
push
add
push
add
dec
add
add
add
add
add
add
add
add
mov
add
add
add
add
sub
add
add
add
add
cld
add
pop
add
add
add
add
add
or
add
add
or
retf
pop
mov
ret
add
add
popf
add
cld
add
add
cmpxchg
leave
add
retf
add
adc
pop
add
add
xchg
add
test
add
add
add
add
add
test
dec
add
add
add
add
add
arpl
test
xchg
xlat
add
repz
add
add
add
jecxz
push
add
xchg
add
enter
mov
mov
add
add
data16
add
add
rol
pusha
add
add
adc
retf
add
add
sbb
add
add
nop
add
cli
add
add
add
add
rol
push
test
or
cld
add
add
add
sub
add
add
jmp
add
cmc
add
add
call
add
add
add
add
add
mov
ret
add
add
lahf
add
out
retf
add
lods
add
push
add
jae
add
add
add
inc
add
xlat
add
inc
add
add
add
add
add
add
rol
fld
xor
jb
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
sbb
ss
add
jle
dec
add
dec
add
dec
add
add
add
lods
add
add
sbb
add
add
mov
pop
add
add
add
sbb
add
add
mov
dec
add
add
add
sbb
add
add
mov
dec
add
add
add
jns
add
add
fld
jno
cwde
add
icebp
add
add
jp
mov
add
xor
cdq
add
add
add
hlt
add
add
add
js
mov
inc
add
add
add
int
xchg
add
add
add
add
add
popa
add
add
add
add
cmp
push
add
add
add
add
add
pop
mov
add
add
cwde
add
icebp
add
add
jp
mov
add
and
xchg
add
add
add
stc
add
add
add
add
inc
push
add
mov
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
sahf
add
add
mov
add
add
add
cli
add
add
add
add
add
add
aaa
add
add
out
add
add
inc
add
sub
mov
adc
rol
add
add
or
pop
add
add
add
or
inc
add
add
mov
add
lods
add
or
fild
add
add
add
add
add
add
jg
cld
add
add
add
add
stc
add
add
add
cmc
add
add
xchg
add
add
add
add
add
add
add
add
add
cmp
push
add
mov
sub
mov
in
in
dec
add
add
add
add
add
add
add
inc
mov
fiadd
inc
add
add
add
add
add
ins
add
add
arpl
pushf
add
add
add
add
add
add
ins
add
add
add
add
into
add
add
add
add
or
add
add
add
mov
fiadd
inc
add
add
add
add
add
jg
cld
add
sbb
add
add
jmp
add
cmp
fild
and
add
add
add
jg
cld
add
sbb
add
add
stc
add
add
add
jne
fld
add
add
add
add
add
add
add
jg
cld
add
pop
add
aaa
add
add
sti
add
mov
add
add
pop
add
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
jg
add
add
fadd
pusha
add
add
mov
pop
add
add
arpl
pushf
add
add
add
add
add
cmc
add
add
call
add
add
add
add
add
add
add
add
and
add
add
mov
push
add
add
add
add
add
or
inc
add
add
test
add
add
add
fadd
pusha
add
add
sti
add
inc
add
fs
add
add
add
mov
add
add
call
add
add
add
add
add
add
jae
add
add
fadd
pusha
add
add
sti
add
inc
add
fs
add
add
add
hlt
add
add
add
add
add
mov
push
add
add
add
retf
add
add
add
je
push
add
add
add
add
add
add
jne
add
add
fadd
pusha
add
add
sti
add
inc
add
fs
add
add
add
out
add
xchg
add
add
add
add
sub
xchg
pop
add
add
add
add
add
add
add
loope
std
add
add
add
add
mov
data16
add
out
add
add
add
add
add
add
int3
add
add
jmp
pop
inc
add
mov
pop
add
add
add
xchg
add
inc
add
add
test
js
out
call
add
add
fild
ja
cwde
add
retf
add
add
add
sub
add
add
hlt
add
adc
pop
add
add
movs
add
out
add
push
mov
fiadd
inc
add
add
add
add
add
jg
cld
add
sbb
add
add
hlt
add
test
or
dec
add
add
add
add
add
add
add
add
loopne
cmc
add
add
xor
inc
add
add
add
add
mov
add
arpl
mov
fild
retf
add
mov
add
add
mov
add
add
fild
imul
add
jmp
add
add
add
pop
add
add
xchg
add
inc
lea
pusha
add
add
add
add
rol
add
add
test
add
daa
add
add
add
in
add
fiadd
add
mov
add
add
enter
pushf
add
add
add
inc
add
add
add
add
pop
add
fild
push
add
add
add
add
cmp
add
inc
add
add
add
add
add
pop
test
add
add
or
push
add
add
add
push
xchg
add
add
add
test
inc
add
add
mov
add
add
add
add
clc
add
xlat
add
add
js
xchg
add
pushf
add
add
add
add
loopne
mov
add
mov
mov
add
add
test
inc
add
add
add
jns
add
add
fld
jno
cdq
add
lock
test
add
cmp
fiadd
les
fiadd
jle
repz
add
add
add
add
add
jecxz
mov
mov
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
or
pop
add
add
add
sub
add
ret
add
add
add
inc
test
jge
arpl
test
or
add
fwait
add
add
add
jecxz
pop
add
inc
inc
fadd
add
ret
add
add
add
inc
test
jge
arpl
test
or
add
add
add
mov
add
add
cmc
add
jl
xchg
add
fld
mov
add
add
rol
push
add
add
xor
fild
and
add
add
add
jg
cld
add
sbb
add
add
hlt
add
call
add
add
rol
pusha
add
add
add
add
inc
add
fs
add
add
add
hlt
add
add
add
add
add
sahf
add
enter
rol
cmp
add
add
xchg
add
jmp
retf
add
mov
inc
add
add
bound
inc
push
add
add
add
and
add
cdq
add
add
retf
add
xchg
add
jmp
retf
add
mov
inc
add
add
jbe
inc
add
cwde
add
xor
add
add
cwde
add
cli
add
add
jns
mov
dec
add
add
arpl
mov
rol
fild
jns
repz
add
add
sub
add
add
xchg
add
rol
add
jns
mov
add
add
jle
add
add
add
fild
data16
add
add
jle
mov
inc
add
dec
add
add
add
retf
add
add
add
sub
movs
add
fld
in
mov
in
add
aam
rol
aas
add
cld
add
add
add
add
dec
add
adc
add
add
lahf
add
in
add
or
add
add
pop
lahf
add
add
icebp
add
lahf
add
in
add
add
add
add
adc
clc
add
popf
add
cli
add
add
add
adc
add
add
add
mov
add
add
fld
add
mov
add
add
mov
xchg
add
add
icebp
add
inc
add
outs
add
add
add
add
add
or
jmp
adc
jnp
add
add
retf
add
add
add
add
xor
mov
add
rol
xor
add
add
add
cmp
ret
add
add
add
add
add
add
add
add
add
add
add
add
loop
mov
aad
push
add
jmp
xchg
add
add
mov
add
add
add
retf
add
add
add
add
xor
mov
add
rol
xor
add
add
add
cmp
lds
data16
add
add
add
das
add
rol
add
inc
add
rol
cmp
in
mov
add
add
add
mov
add
add
add
fild
jno
mov
add
add
add
sub
call
add
add
add
add
add
imul
add
add
add
add
add
add
cmp
add
add
add
fild
jno
mov
add
add
add
sub
call
add
add
add
add
add
add
add
add
add
add
add
fild
jno
mov
add
add
add
sub
call
add
add
add
add
sbb
mov
add
add
add
add
add
add
push
lahf
add
add
test
pop
add
add
add
add
es
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
test
pop
add
add
add
add
es
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
dec
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
es
add
add
add
add
cmc
add
sub
xchg
dec
add
movs
add
add
add
add
add
dec
add
add
add
add
fadd
sbb
xor
mov
movs
add
add
xchg
imul
add
add
outs
lahf
add
add
test
pop
add
add
add
add
es
add
add
add
add
add
test
inc
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
mov
add
fild
push
add
daa
stos
add
add
retf
add
add
add
add
sub
add
add
add
add
cmp
js
sti
add
movs
add
mov
retf
add
xchg
add
push
add
sub
add
add
call
add
add
inc
inc
add
nop
add
add
add
mov
add
add
nop
add
rol
mov
jle
imul
aad
pop
add
add
xchg
add
int3
add
add
add
add
das
mov
leave
add
fld
data16
mov
add
add
and
mov
add
test
add
add
add
sti
add
movs
add
mov
retf
add
xchg
add
push
add
sub
add
add
add
add
add
add
arpl
xchg
add
fild
jecxz
add
inc
add
add
xchg
add
in
add
add
add
or
nop
add
add
add
mov
push
add
add
add
js
leave
add
add
add
add
pop
add
add
mov
gs
add
mov
loop
js
sti
add
movs
add
mov
retf
add
xchg
add
push
add
add
add
fadd
cmp
mov
inc
mov
loop
js
sti
add
movs
add
int3
add
add
add
arpl
test
add
add
add
add
loop
bound
outs
add
add
add
add
add
add
add
add
aas
xchg
add
add
aad
ins
add
add
cld
add
pop
add
add
add
hlt
add
test
pop
add
inc
dec
add
leave
add
add
ret
add
add
add
leave
add
add
add
add
fiadd
rol
add
repnz
xchg
add
pop
add
add
add
add
add
add
clc
add
add
leave
add
add
add
add
fiadd
rol
add
repnz
xchg
add
add
cmc
add
imul
aad
clc
add
add
or
pop
add
add
add
setno
loop
sbb
test
add
adc
inc
add
add
sahf
add
add
adc
inc
add
add
xchg
add
add
or
add
add
add
inc
sahf
add
add
rol
pusha
add
add
add
add
add
add
out
add
xchg
add
add
out
push
add
add
mov
add
add
sti
add
add
cwde
add
jle
mov
pop
add
add
add
inc
add
mov
add
add
and
fiadd
add
xchg
add
add
enter
jl
jle
test
add
add
add
dec
add
loop
mov
add
adc
mov
push
add
add
add
add
add
add
sti
add
add
cwde
add
jle
mov
pop
add
add
add
inc
add
movs
add
add
jecxz
bound
bound
xchg
add
fadd
in
mov
add
add
add
add
add
add
add
add
add
add
add
add
in
xor
add
retf
add
add
add
add
push
add
pop
mov
ret
add
add
test
or
mov
retf
add
mov
inc
add
dec
add
add
add
retf
add
add
add
sub
movs
add
fld
in
mov
in
add
aam
rol
aas
add
cld
add
add
add
add
add
xchg
add
add
rol
push
add
add
add
add
add
imul
add
add
jmp
add
add
stos
add
add
cmp
add
add
add
add
add
add
add
add
pop
add
mov
fld
into
add
jmp
add
jecxz
push
add
add
add
dec
xchg
add
add
rol
push
add
add
add
add
add
pop
add
mov
fild
into
add
mov
add
inc
add
add
sub
add
add
add
add
add
xchg
add
add
rol
push
add
add
add
add
add
pop
add
add
add
repz
add
add
add
jns
add
repz
add
add
addr16
add
add
fld
jo
test
dec
add
add
add
add
add
imul
cdq
add
add
add
std
add
sub
nop
add
rol
stc
add
add
add
add
add
add
add
add
add
dec
add
add
add
or
add
add
test
dec
add
add
add
add
adc
jb
das
add
add
fadd
sbb
fwait
add
add
add
imul
mov
jmp
adc
xchg
inc
add
add
add
add
add
add
xchg
cmp
scas
add
add
add
add
retf
add
add
add
add
add
nop
add
add
add
fld
jo
test
dec
add
add
add
add
adc
mov
fadd
leave
add
jmp
add
add
cmc
add
jg
pushf
add
add
add
add
add
loopne
jmp
add
add
add
add
add
add
test
add
add
add
stos
add
add
add
add
add
mov
add
add
add
add
add
fld
jo
test
dec
add
add
add
add
adc
mov
fadd
leave
add
jmp
add
add
cmc
add
jg
pushf
add
add
add
add
add
jmp
add
add
popa
popf
add
add
fld
jo
test
dec
add
add
add
add
adc
mov
fadd
leave
add
jmp
add
add
cmc
add
jg
pushf
add
add
add
add
add
add
add
add
add
push
add
add
jnp
add
add
fld
jo
test
dec
add
add
add
add
adc
mov
fadd
leave
add
jmp
add
add
cmc
add
jg
pushf
add
add
add
add
add
std
add
add
add
ja
add
xchg
add
cmps
add
add
add
or
retf
add
add
add
push
popf
add
add
fld
jo
test
dec
add
add
add
add
adc
mov
fadd
leave
add
jmp
add
add
cmc
add
jg
pushf
add
add
add
add
add
scas
add
add
add
add
test
dec
add
add
add
add
adc
mov
fadd
leave
add
jmp
add
add
cmc
add
jg
pushf
add
add
add
add
add
std
add
add
add
add
add
lahf
add
add
add
sub
add
fadd
lock
add
add
std
add
add
add
add
fld
jo
test
dec
add
add
add
add
adc
mov
fadd
leave
add
jmp
add
add
cmc
add
jg
pushf
add
add
add
add
add
loopne
jmp
add
push
add
add
or
add
add
test
dec
add
add
add
add
adc
mov
fadd
leave
add
jmp
add
add
cmc
add
jg
pushf
add
add
add
add
add
std
add
add
add
add
add
lahf
add
add
add
sub
add
fadd
lock
add
add
add
add
add
add
add
add
fld
jo
test
dec
add
add
add
add
adc
mov
fadd
leave
add
jmp
add
add
cmc
add
jg
pushf
add
add
add
add
add
ret
add
add
add
add
add
mov
sub
out
add
add
add
rol
pusha
add
add
add
pusha
add
add
add
rol
jb
mov
cwde
add
add
add
sub
jnp
std
add
mov
add
add
add
pop
add
add
add
and
add
add
nop
add
fld
add
add
scas
add
add
xlat
add
sbb
add
add
nop
add
fld
add
add
scas
add
xor
rol
and
test
or
stc
add
add
add
push
add
aaa
add
add
mov
add
add
inc
add
add
rol
pop
add
add
add
add
add
add
or
add
add
add
mov
aad
inc
add
add
adc
add
add
add
add
add
add
fild
jne
nop
add
in
add
sbb
add
add
xchg
add
jmp
pop
pop
add
mov
adc
inc
add
add
add
add
add
add
sub
add
add
movs
add
test
add
js
mov
add
aaa
add
imul
and
add
add
test
dec
add
add
add
xor
adc
add
lea
leave
add
rol
jbe
test
dec
add
add
add
add
sbb
add
add
test
dec
add
add
add
nop
add
add
into
add
cwde
add
hlt
add
adc
add
add
into
add
sahf
add
jmp
add
xchg
add
add
retf
add
add
add
pop
xchg
add
add
retf
add
add
add
add
add
xchg
add
add
rol
popa
add
add
sub
inc
add
add
add
mov
add
mov
pop
add
add
das
add
add
jecxz
add
add
lea
cmc
add
test
inc
add
add
add
add
add
fld
outs
add
add
add
arpl
cld
add
pop
add
arpl
xchg
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
pop
pushf
add
add
into
add
nop
add
(bad)
add
add
or
add
add
rol
add
xchg
add
add
retf
add
add
add
add
add
add
sahf
add
xchg
add
jmp
add
add
cld
add
sbb
jb
sub
add
add
test
add
jecxz
verw
test
inc
add
mov
add
add
add
add
add
add
add
add
pop
fwait
add
add
fld
outs
add
add
add
arpl
scas
add
add
add
add
stc
add
xlat
add
add
bound
call
add
add
add
add
jp
sti
add
add
add
pushf
add
add
sahf
add
sahf
add
mov
add
mov
add
sub
nop
add
add
add
test
add
add
add
fs
add
add
enter
rol
popa
add
add
icebp
add
add
add
add
js
repnz
retf
add
inc
fwait
add
add
fld
outs
add
add
add
arpl
scas
add
add
add
add
test
add
stc
add
imul
add
rol
mov
add
lods
add
add
rol
jbe
test
dec
add
add
add
add
add
add
xchg
add
add
xlat
add
cwde
add
sti
add
add
bound
mov
inc
add
add
and
xchg
add
add
add
out
add
add
add
or
add
add
add
jmp
jbe
xchg
add
(bad)
add
add
add
and
mov
fiadd
lds
bound
into
add
add
(bad)
add
add
add
add
add
add
std
add
add
add
add
or
fadd
xor
repnz
gs
add
add
jmp
jbe
xchg
add
(bad)
add
add
add
and
mov
fiadd
lds
bound
into
add
add
(bad)
add
add
add
add
add
add
cld
add
add
add
add
add
fadd
xor
repnz
cmp
add
add
add
add
add
add
add
sub
add
add
cmc
add
add
cmc
add
add
add
add
outs
lahf
add
add
jmp
jbe
xchg
add
(bad)
add
add
add
and
mov
fiadd
lds
bound
into
add
add
(bad)
add
add
add
add
add
add
cli
add
add
add
add
or
test
data16
add
add
cmp
rol
ins
add
add
add
add
cmp
fiadd
rol
fadd
jle
cmc
add
add
cmc
add
add
add
add
cmp
push
add
add
xchg
add
icebp
add
mov
inc
add
add
sub
add
add
stc
add
add
add
add
loop
dec
add
leave
add
add
aas
fwait
add
add
fild
jno
xchg
add
icebp
add
mov
inc
add
add
sub
add
add
stc
add
add
add
add
jecxz
push
add
xchg
sbb
pushf
add
inc
mov
loop
js
sti
add
movs
add
rol
test
ja
imul
xor
dec
add
mov
xchg
add
add
hlt
add
lds
cmp
add
add
add
add
add
add
add
fild
imul
retf
add
add
or
add
add
sub
push
add
add
add
add
add
add
add
and
xchg
add
add
add
add
or
add
add
pop
mov
add
add
add
add
movs
add
mov
retf
add
xchg
add
push
add
add
add
leave
add
add
std
add
jle
call
add
add
add
add
add
add
add
add
add
jge
and
popf
add
add
add
add
add
mov
test
rol
and
jecxz
ja
ret
add
push
add
jns
add
add
jmp
add
add
add
add
sub
cwde
add
add
add
repz
add
add
add
dec
add
add
add
add
add
add
add
loopne
cmc
add
add
add
pop
add
add
add
add
add
add
add
add
jg
add
add
jmp
add
add
add
add
sub
cwde
add
add
add
repz
add
add
add
dec
add
add
add
add
add
add
add
loopne
cmc
add
add
add
cmp
popf
add
mov
add
inc
aas
add
add
add
add
add
add
add
add
mov
jle
fiadd
mov
pop
add
mov
add
sub
cwde
add
add
add
repz
add
add
add
dec
add
add
add
add
add
add
add
loopne
cmc
add
add
add
cmp
popf
add
mov
add
inc
aas
add
add
add
add
add
rol
mov
add
add
jmp
add
add
add
add
sub
cwde
add
add
add
repz
add
loop
adc
add
add
jmp
add
add
add
add
sub
cwde
add
add
add
jecxz
add
add
add
rol
inc
add
xchg
dec
add
add
add
add
add
add
add
cli
add
add
add
add
xor
mov
add
add
cmp
push
add
add
add
add
add
xor
fiadd
and
or
inc
add
add
sub
and
mov
add
adc
pusha
add
add
add
add
add
xor
xchg
add
add
add
add
add
push
mov
inc
addr16
add
mov
add
add
add
sub
nop
add
add
add
test
add
add
add
jle
test
dec
add
add
add
add
add
add
pop
add
add
add
push
mov
inc
addr16
add
mov
add
add
add
sub
nop
add
add
add
test
add
add
add
jle
test
dec
add
add
add
add
add
add
add
add
add
push
mov
inc
addr16
add
mov
add
add
add
sub
nop
add
add
add
test
add
add
add
jle
test
dec
add
add
add
add
add
add
add
stc
add
mov
loop
js
sti
add
movs
add
mov
retf
add
xchg
add
push
add
add
add
leave
add
add
std
add
jle
call
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
jmp
add
add
add
add
xor
fwait
add
add
add
add
add
add
add
add
add
retf
add
lahf
add
icebp
add
add
xor
push
fiadd
call
add
add
add
add
jg
xchg
add
iret
add
add
enter
jl
add
add
add
jmp
add
add
add
add
mov
call
add
mov
jle
fiadd
mov
pop
add
mov
add
add
add
fadd
sbb
add
rol
add
mov
inc
add
add
das
mov
call
add
mov
jle
fiadd
mov
pop
add
cmps
add
add
and
mov
add
cmc
add
add
add
add
jmp
add
add
add
add
and
mov
add
repnz
add
sbb
inc
add
add
lahf
add
leave
add
add
add
dec
mov
call
add
mov
jle
fiadd
mov
pop
add
mov
add
add
add
fadd
sbb
add
rol
add
mov
inc
add
add
add
add
add
add
cmp
fild
jno
cwde
add
clc
add
add
arpl
mov
dec
add
add
arpl
popf
add
add
add
inc
pop
add
add
add
sub
add
mov
add
add
add
add
add
add
add
aaa
add
add
add
cli
add
add
add
add
add
add
or
js
add
add
hlt
add
xlat
add
sbb
add
add
xchg
add
mov
add
mov
xor
pop
add
add
xchg
add
icebp
add
add
add
add
add
add
add
add
add
add
add
sti
add
movs
add
out
add
add
add
add
add
fadd
and
mov
add
add
bound
rol
add
add
add
add
add
add
add
fadd
loop
test
cmp
add
test
mov
add
add
xchg
add
lock
add
mov
enter
retf
add
add
add
add
sub
cwde
add
add
add
repz
add
add
add
pop
add
add
add
add
add
add
add
out
add
add
add
add
cmp
mov
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
loope
add
add
add
retf
add
add
add
add
xor
mov
add
retf
add
cld
add
push
add
stc
add
add
add
add
add
imul
add
add
add
add
sub
cwde
add
add
add
repz
add
add
add
dec
add
add
add
add
add
add
add
loopne
cmc
add
add
add
pop
add
add
add
add
add
add
mov
ret
add
add
add
jmp
add
add
add
retf
add
nop
add
jmp
lahf
add
imul
mov
ret
add
add
add
fild
mov
add
add
jge
sahf
add
nop
add
cld
add
add
add
sbb
ja
sub
nop
add
add
add
add
inc
add
add
add
sahf
add
sahf
add
in
add
add
arpl
test
or
add
add
add
hlt
add
add
mov
push
add
add
clc
add
add
add
rol
imul
sti
add
mov
pop
add
add
add
inc
add
xchg
or
add
sub
into
add
add
dec
lahf
add
add
clc
add
mov
add
add
add
daa
add
add
test
add
add
add
sub
add
add
add
add
add
add
add
push
lahf
add
add
clc
add
mov
add
add
add
daa
add
add
test
add
add
add
sub
xchg
push
add
add
add
add
add
add
add
add
das
pushf
add
add
rol
imul
sti
add
mov
pop
add
add
add
mov
add
or
add
add
add
daa
mov
rol
push
add
add
rol
push
add
pusha
add
add
adc
mov
lahf
add
add
add
fild
popa
add
add
add
add
aas
lea
xlat
add
fild
jno
xchg
add
mov
add
cld
add
pop
add
xor
xchg
add
add
add
repz
add
add
add
test
xchg
push
add
add
daa
mov
add
add
mov
add
mov
add
add
add
adc
add
add
sahf
add
add
sub
add
add
xchg
add
mov
pop
add
add
adc
mov
fiadd
fiadd
outs
add
add
sub
push
add
add
xchg
add
mov
pop
add
js
add
add
jmp
cmp
add
add
add
in
add
add
add
aaa
add
add
retf
add
add
add
imul
rol
push
add
add
cwde
add
clc
add
add
jns
mov
add
sub
push
add
add
xchg
add
rol
add
arpl
stos
add
pop
add
add
call
add
add
add
push
mov
int3
add
into
add
cwde
add
clc
add
add
imul
pop
add
es
add
add
add
out
add
add
add
add
add
add
rol
fiadd
xor
ja
jmp
add
add
into
add
cwde
add
clc
add
add
imul
pop
add
es
add
add
add
hlt
add
add
add
add
jle
rol
dec
add
add
add
add
add
add
add
jmp
add
inc
jo
add
add
add
add
add
cmp
fiadd
aad
fild
gs
add
add
in
inc
add
xchg
inc
add
add
adc
add
add
mov
jle
fiadd
mov
add
mov
add
add
add
xor
add
add
cwde
add
clc
add
add
arpl
scas
add
add
add
add
mov
add
add
add
retf
add
add
add
add
xor
fiadd
rol
lds
jle
mov
add
add
in
dec
add
xchg
add
add
add
add
add
add
add
add
sti
add
add
add
add
sbb
mov
pusha
add
add
add
add
add
add
add
mov
add
add
add
add
cmp
pop
add
add
cwde
add
clc
add
add
imul
pop
add
es
add
add
add
hlt
add
add
add
add
in
inc
add
popf
add
add
add
add
rol
pusha
add
add
lock
add
add
and
fiadd
ret
add
add
jmp
add
add
mov
inc
add
add
cmps
add
add
add
into
add
cwde
add
clc
add
add
pusha
add
add
ins
add
xor
add
add
xchg
add
fiadd
mov
jb
jl
test
dec
add
add
add
add
add
inc
push
add
add
add
popf
add
add
xlat
add
xchg
add
int
lahf
add
and
cmc
add
sub
add
add
cwde
add
clc
add
add
bound
mov
inc
add
add
and
xchg
add
add
and
add
add
test
dec
add
add
add
add
add
adc
add
add
add
leave
add
xchg
add
fiadd
mov
jb
jl
test
dec
add
add
add
add
add
out
add
add
add
add
js
nop
add
std
add
add
add
add
add
xlat
add
xchg
add
retf
add
bound
scas
add
adc
ja
das
add
add
add
add
into
add
cwde
add
clc
add
add
jle
mov
pop
add
add
xor
mov
add
add
test
add
add
add
into
add
add
add
mov
pop
add
add
sub
add
add
add
add
std
add
jle
rol
push
add
add
add
add
aas
call
add
xchg
add
fiadd
mov
jb
jl
test
dec
add
add
add
add
add
add
add
add
add
add
pusha
add
add
sahf
add
add
rol
pusha
add
add
add
add
add
add
add
hlt
add
daa
fwait
add
add
fild
ja
cwde
add
clc
add
add
add
add
and
xchg
add
add
add
dec
mov
rol
push
add
add
cwde
add
clc
add
add
jl
mov
add
add
xchg
add
add
add
std
add
test
add
pop
add
add
add
add
add
add
add
dec
mov
int3
add
into
add
cwde
add
clc
add
add
imul
pop
add
es
add
add
add
test
add
in
inc
add
add
fld
in
into
add
add
daa
xchg
les
pop
add
add
cwde
add
jmp
add
add
and
fiadd
mov
mov
add
pop
add
add
xchg
add
fiadd
mov
jb
jl
test
dec
add
add
push
cdq
add
add
xlat
add
xchg
add
fadd
test
add
add
add
add
add
stc
add
add
add
jne
rol
inc
add
add
add
add
add
add
pop
sahf
add
add
rol
popa
add
add
fld
retf
add
scas
add
add
jp
arpl
xchg
add
add
add
add
add
add
add
xchg
dec
add
add
add
add
add
int
(bad)
add
imul
add
add
add
add
cmp
push
add
add
xchg
add
fld
lods
add
add
test
add
add
add
add
stc
add
add
add
jne
leave
add
add
cmp
push
add
add
xchg
add
(bad)
add
add
add
add
add
add
stc
add
add
add
jne
leave
add
add
pop
cdq
add
add
xlat
add
xchg
add
rol
call
add
add
add
add
mov
add
add
stc
add
add
add
add
xchg
les
ins
add
mov
mov
add
add
add
xlat
add
xchg
add
retf
add
add
outs
add
add
add
mov
add
add
stc
add
add
add
add
xchg
les
ins
add
mov
mov
add
add
add
xlat
add
xchg
add
int3
add
add
add
add
add
cmc
add
xchg
add
add
in
dec
add
popf
add
into
add
add
add
add
add
add
add
add
add
pop
cdq
add
add
xlat
add
xchg
add
fiadd
xchg
jp
imul
add
add
add
add
mov
add
add
stc
add
add
add
add
xchg
les
ins
add
mov
mov
add
add
add
xlat
add
xchg
add
mov
add
push
add
pop
add
add
add
cmc
add
xchg
add
add
in
dec
add
popf
add
into
add
add
add
add
add
add
add
add
add
pop
cdq
add
add
xlat
add
xchg
add
int
test
jo
add
add
pop
add
add
add
cmc
add
xchg
add
add
in
dec
add
popf
add
into
add
add
add
add
add
add
add
add
add
pop
cdq
add
add
xlat
add
xchg
add
int3
add
add
add
sub
call
add
add
add
stc
add
add
add
add
xchg
les
ins
add
mov
mov
add
add
add
xlat
add
xchg
add
leave
add
add
add
arpl
mov
add
mov
add
dec
add
add
js
call
add
rol
add
add
add
add
add
add
add
pop
cdq
add
add
xlat
add
xchg
add
retf
add
add
add
add
mov
fiadd
into
add
out
add
add
add
add
repz
add
in
xchg
add
add
leave
add
add
add
add
add
add
imul
add
add
add
add
daa
add
add
mov
add
add
mov
push
add
rol
inc
add
add
add
add
add
add
add
scas
add
add
add
add
adc
mov
add
add
lea
xlat
add
fild
jno
xchg
add
lock
mov
add
aaa
add
add
inc
add
add
add
and
fiadd
add
xchg
add
add
lds
(bad)
add
add
add
add
add
popa
add
add
add
add
ins
call
add
xchg
add
fiadd
mov
jb
jl
test
dec
add
add
add
add
add
inc
xor
cwde
add
dec
add
add
add
add
add
add
add
add
add
loope
cld
add
add
add
add
add
in
add
add
push
fwait
add
add
into
add
xchg
add
test
add
add
add
aaa
add
add
cld
add
add
add
add
add
repnz
add
add
add
add
add
add
add
fld
outs
add
add
add
arpl
scas
add
add
add
add
repz
add
add
add
js
xchg
dec
add
add
add
inc
fwait
add
add
fld
outs
add
add
add
arpl
scas
add
add
popf
add
add
add
mov
add
add
mov
push
add
xchg
push
add
add
add
add
pop
mov
add
xor
add
add
xchg
add
fiadd
mov
jb
jl
test
dec
add
add
add
add
inc
add
add
add
lahf
add
add
rol
bound
rol
pop
add
add
add
pusha
add
add
add
add
add
add
std
add
lahf
add
test
add
imul
sbb
jne
sub
nop
add
add
add
xchg
add
add
jecxz
inc
add
add
add
xlat
add
add
add
add
add
add
add
add
add
retf
add
fld
ins
add
add
add
add
add
add
add
inc
cmp
cdq
add
add
loop
push
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
inc
xor
xchg
add
add
add
add
xor
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
ins
add
add
add
add
add
add
xchg
add
add
fild
ja
add
add
add
add
add
add
add
sub
add
add
add
mov
add
mov
inc
add
push
add
add
add
mov
add
mov
fild
pop
add
add
add
add
or
add
add
or
add
add
or
add
add
rol
add
sbb
fiadd
imul
out
add
add
xchg
add
pop
test
add
add
mov
ret
add
add
test
dec
add
add
add
add
add
dec
add
add
add
pop
mov
ret
add
add
test
dec
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
pushf
add
rol
add
add
add
xlat
add
test
dec
add
add
add
add
add
dec
add
add
add
inc
add
xchg
add
add
add
add
add
add
push
mov
ret
add
add
test
dec
add
add
add
add
add
pop
add
add
add
mov
add
pop
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
xlat
add
test
dec
add
add
add
add
add
sub
jno
rol
aad
ret
add
mov
add
add
add
add
add
add
add
add
pop
mov
ret
add
add
test
dec
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xlat
add
test
dec
add
add
add
add
add
dec
add
add
add
inc
add
xchg
add
add
add
add
add
add
push
mov
ret
add
add
test
dec
add
add
add
add
add
pop
add
add
add
mov
add
pop
add
add
add
add
add
add
add
mov
fld
xor
add
add
add
add
add
xlat
add
test
dec
add
add
add
add
add
sub
add
add
add
mov
add
add
add
add
add
add
add
add
inc
mov
ret
add
add
test
dec
add
add
add
add
add
pop
add
add
add
repz
add
add
add
jns
add
repz
add
add
sub
add
add
cwde
add
jmp
pop
popa
add
mov
inc
add
add
lods
add
add
add
out
add
arpl
add
add
test
dec
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
nop
add
add
test
pushf
add
rol
add
add
add
add
add
fild
bound
cwde
add
jmp
pop
popa
add
mov
inc
add
add
stos
add
add
add
std
add
add
loop
inc
add
rol
adc
mov
mov
add
add
add
add
add
add
add
fild
bound
cwde
add
jmp
pop
popa
add
mov
inc
add
add
mov
add
inc
adc
add
mov
push
add
add
inc
popf
add
add
add
add
add
add
add
add
add
fild
bound
cwde
add
jmp
pop
popa
add
mov
inc
add
add
int
test
xchg
outs
add
add
add
cld
add
add
pushf
add
pushf
add
add
add
add
arpl
add
add
test
dec
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
nop
add
add
add
add
fild
bound
cwde
add
jmp
pop
popa
add
mov
inc
add
add
stos
add
add
add
std
add
add
loop
inc
add
rol
adc
mov
mov
add
add
add
add
add
add
add
fild
bound
cwde
add
jmp
pop
popa
add
mov
inc
add
add
mov
add
inc
adc
add
mov
push
add
add
inc
popf
add
add
add
add
add
add
add
add
add
fild
bound
cwde
add
jmp
pop
popa
add
mov
inc
add
add
enter
xchg
outs
add
add
add
cld
add
add
pushf
add
pushf
add
add
add
add
dec
lea
leave
add
fild
bound
cwde
add
jmp
pop
popa
add
mov
inc
add
add
mov
add
jmp
add
add
add
add
add
add
add
add
int3
add
test
add
add
cmp
adc
mov
(bad)
add
add
add
mov
rol
push
add
add
test
add
add
cmp
adc
mov
(bad)
add
add
repz
add
add
add
add
clc
add
add
rol
push
add
xor
add
add
pushf
add
int3
add
scas
add
add
add
add
add
add
add
add
cmps
add
mov
mov
rol
push
add
add
test
add
add
cmp
add
mov
mov
call
add
add
inc
push
add
leave
add
add
pop
mov
rol
push
add
add
test
add
add
cmp
or
add
add
call
add
or
cmc
add
jl
lahf
add
into
add
add
aam
rol
aas
add
cld
add
add
add
add
imul
int3
add
test
add
add
cmp
add
mov
mov
jmp
add
add
cmc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
test
add
add
cmp
add
mov
mov
jmp
add
add
jns
popf
add
add
add
add
add
add
cmp
cli
add
add
add
add
or
mov
add
ins
mov
rol
push
add
add
test
add
add
cmp
adc
mov
(bad)
add
add
repz
add
add
add
sub
test
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
rol
push
add
add
test
add
add
cmp
adc
mov
aam
leave
add
jmp
add
add
cld
add
sub
add
add
add
add
add
add
mov
mov
add
add
int3
add
test
add
add
cmp
jne
retf
add
add
out
add
mov
adc
pop
add
add
add
rol
in
mov
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jno
add
add
int3
add
test
add
add
cmp
jne
retf
add
add
out
add
mov
adc
pop
add
add
add
add
add
add
add
add
add
add
sbb
pop
ins
add
add
repnz
inc
add
jnp
add
add
int3
add
test
add
add
cmp
adc
mov
(bad)
add
add
repz
add
add
call
add
add
add
add
add
scas
add
add
add
add
push
add
add
add
add
add
fld
cdq
add
add
out
add
popa
mov
rol
push
add
add
test
add
add
cmp
adc
mov
aam
leave
add
jmp
add
add
cld
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
add
int3
add
test
add
add
cmp
add
xchg
add
add
add
mov
add
inc
add
add
sub
xchg
add
add
add
add
add
add
add
add
add
add
push
add
add
mov
add
in
xor
or
iret
add
mov
add
add
int3
add
test
add
add
cmp
add
add
add
inc
push
add
add
add
ins
add
add
add
add
add
add
int3
add
test
add
add
cmp
push
add
add
out
add
add
add
add
add
rol
sti
add
add
add
add
add
add
add
add
add
int3
add
test
add
add
cmp
push
add
add
add
add
add
add
outs
add
add
add
add
sub
add
add
movs
add
int3
add
add
add
push
add
add
lods
add
add
add
out
add
add
add
add
add
into
add
mov
add
mov
add
add
fiadd
icebp
add
add
hlt
add
add
inc
dec
add
popf
add
pushf
add
add
ret
add
add
add
add
add
add
into
add
mov
add
mov
add
add
fiadd
hlt
add
add
test
add
add
add
add
add
ret
add
add
add
add
add
add
into
add
mov
lahf
add
bound
mov
inc
add
add
add
add
add
fwait
add
add
add
sub
xchg
add
rol
repz
add
fadd
cmp
push
add
aam
jne
into
add
mov
lahf
add
bound
mov
inc
add
add
add
add
add
cdq
add
add
add
add
bound
popf
add
rol
lock
add
fadd
cmp
push
add
aam
jne
into
add
mov
add
mov
add
add
fiadd
sti
add
add
icebp
add
add
add
add
add
add
into
add
add
add
add
add
add
add
xor
jbe
add
popf
add
add
ja
add
add
into
add
mov
add
mov
add
add
fiadd
icebp
add
add
hlt
add
add
inc
dec
add
popf
add
pushf
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
into
add
mov
add
mov
add
add
fiadd
icebp
add
add
hlt
add
add
inc
dec
add
popf
add
pushf
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
into
add
mov
lahf
add
bound
mov
inc
add
add
add
add
add
add
test
pushf
add
pushf
add
add
ret
add
add
add
add
add
add
add
ja
or
mov
add
add
add
jg
add
add
into
add
mov
lahf
add
bound
mov
inc
add
add
add
add
add
cdq
add
add
add
add
bound
popf
add
rol
lock
add
fadd
cmp
push
add
add
add
add
popf
add
mov
jmp
add
add
adc
fld
mov
loope
sbb
add
add
jnp
add
add
into
add
mov
lahf
add
bound
mov
inc
add
add
add
add
add
cdq
add
add
add
add
bound
popf
add
rol
lock
add
fadd
cmp
push
add
add
add
add
popf
add
mov
jmp
add
add
or
iret
add
add
add
adc
add
add
add
add
add
outs
lea
leave
add
add
call
add
add
add
imul
add
add
add
add
add
add
add
add
add
iret
add
add
add
add
add
add
add
jbe
or
mov
add
add
lods
add
add
push
add
add
cwde
add
clc
add
add
bound
lods
add
add
adc
fwait
add
add
add
call
add
add
add
add
add
add
add
icebp
add
or
sub
ds
add
add
add
mov
inc
add
cmp
add
add
xchg
add
test
add
add
add
and
xchg
add
add
add
cmc
add
test
add
dec
add
add
add
add
add
add
call
add
add
add
add
fiadd
call
add
xchg
add
add
inc
inc
add
xchg
add
into
add
add
xchg
(bad)
add
add
add
add
add
add
xor
add
add
pop
lea
leave
add
add
call
add
add
add
add
fiadd
call
add
xchg
add
add
inc
inc
add
mov
adc
rol
add
add
add
add
add
scas
add
add
add
imul
fild
data16
add
add
add
add
fiadd
call
add
fwait
add
add
add
sub
xchg
add
rol
repz
add
add
add
add
in
add
add
je
popa
add
mov
jnp
mov
loop
mov
add
add
add
add
add
call
add
add
add
add
fiadd
call
add
add
add
add
add
add
fild
hlt
add
add
add
add
cmp
add
push
add
add
cwde
add
clc
add
add
imul
push
add
adc
fwait
add
add
add
call
add
add
add
add
add
into
add
xchg
add
test
add
add
add
aaa
add
add
cmc
add
test
add
dec
add
add
add
add
add
int3
add
cwde
add
clc
add
add
imul
push
add
adc
fwait
add
add
add
call
add
add
mov
inc
add
add
test
add
add
pushf
add
add
fild
jno
cwde
add
clc
add
add
dec
pushf
add
add
fild
jno
xchg
add
cli
add
add
add
add
fiadd
call
add
add
add
add
add
add
fild
hlt
add
add
add
add
cmp
add
add
add
in
add
add
add
call
add
add
add
add
in
add
add
pop
test
add
rol
jb
add
add
add
add
imul
fld
push
add
push
lea
leave
add
mov
add
pop
ja
sub
mov
add
add
xchg
add
add
add
inc
adc
test
pop
add
stc
add
pusha
add
add
add
add
add
add
add
add
add
lods
add
add
add
jno
jne
add
je
imul
inc
add
jae
add
bound
ins
add
add
add
inc
add
cmp
xor
inc
add
add
xor
add
add
add
add
add
add
add
add
add
inc
add
add
xor
xor
xor
inc
add
add
add
inc
add
add
xor
xor
xor
inc
add
add
add
add
xor
aaa
add
sub
add
add
add
add
xor
xor
aaa
add
add
cmp
xor
cmp
add
jge
add
and
xchg
jecxz
pop
aam
push
inc
mov
sahf
sti
add
or
xor
mov
mov
pop
jg
aad
cmp
sbb
adc
push
adc
sbb
adc
or
push
adc
cmp
adc
add
push
adc
dec
add
push
push
adc
xor
adc
xor
adc
push
push
adc
push
push
adc
xor
adc
xor
adc
cmp
add
cmp
add
dec
add
push
adc
fs
adc
fs
adc
push
add
add
adc
add
adc
cmp
adc
adc
adc
add
adc
jne
adc
sub
adc
sbb
adc
or
add
add
push
adc
add
adc
push
add
adc
add
add
add
adc
add
adc
push
add
adc
push
add
add
adc
add
adc
add
adc
push
add
adc
add
adc
adc
add
add
adc
push
add
adc
adc
push
add
adc
adc
push
add
adc
adc
add
adc
push
add
adc
adc
pop
adc
push
add
adc
push
add
sbb
adc
inc
pop
adc
add
adc
adc
push
adc
push
add
push
push
adc
push
add
sbb
adc
or
add
adc
push
push
adc
push
push
adc
add
sbb
and
push
or
adc
or
add
add
add
push
add
add
add
add
sbb
and
add
dec
pop
and
adc
add
or
add
add
add
push
add
xor
push
add
sbb
and
add
adc
and
add
adc
and
add
add
or
add
push
adc
push
add
push
push
adc
pop
add
sbb
or
add
adc
add
add
push
or
add
push
adc
add
add
adc
push
add
push
add
add
push
and
add
push
push
add
add
push
add
xor
add
adc
xor
add
add
push
pop
add
adc
add
add
add
add
add
add
add
push
push
add
add
adc
pop
add
add
adc
pop
add
add
sbb
adc
sbb
add
sbb
add
adc
add
add
push
adc
add
add
push
add
add
inc
add
inc
add
add
add
add
adc
push
pop
and
add
xor
pop
add
add
add
adc
adc
add
push
or
add
add
and
sbb
and
add
push
pop
and
add
push
adc
add
adc
xor
add
or
add
add
add
sbb
and
add
jo
add
add
jo
jo
and
or
and
add
add
add
or
add
jl
and
add
adc
add
adc
add
sbb
and
sbb
add
dec
add
dec
add
or
add
add
add
add
or
add
or
add
push
add
add
pop
add
add
or
add
or
add
or
add
or
add
push
or
add
add
add
push
adc
add
push
adc
add
push
push
add
add
sbb
add
push
sbb
or
add
sbb
sbb
add
sbb
push
add
sbb
adc
adc
add
add
or
add
push
add
sbb
add
sbb
adc
adc
add
add
or
add
sbb
adc
and
add
jno
and
add
add
add
add
xor
jne
adc
add
jns
and
add
cmp
add
add
mov
and
adc
and
add
jge
and
add
cmp
mov
add
add
add
and
add
xor
mov
add
add
add
and
adc
add
add
and
add
adc
sub
lods
add
mov
and
sbb
sbb
sbb
adc
sbb
adc
and
adc
and
adc
push
pop
and
add
add
adc
adc
add
add
adc
add
adc
or
add
adc
or
add
adc
pop
and
adc
add
mov
add
and
add
add
and
add
add
mov
cmp
adc
add
add
add
or
add
or
add
or
and
add
push
add
add
pop
add
add
add
add
and
add
imul
add
adc
add
test
and
push
adc
add
adc
adc
add
add
add
adc
add
adc
push
add
adc
add
adc
add
adc
add
add
add
adc
push
adc
add
adc
push
add
add
adc
adc
pop
adc
add
add
add
push
add
push
add
add
adc
add
adc
add
add
adc
add
add
add
add
adc
adc
add
add
push
add
adc
add
adc
adc
push
add
adc
push
add
adc
add
add
add
adc
add
or
adc
add
add
adc
add
push
add
adc
add
adc
add
adc
add
adc
add
add
add
add
push
add
add
adc
adc
push
add
add
add
add
sbb
popa
add
add
ins
add
ins
push
add
adc
adc
adc
push
adc
or
add
adc
push
or
add
adc
add
adc
push
add
push
push
add
add
add
add
add
or
sbb
and
adc
sbb
and
add
sbb
pop
and
adc
adc
adc
adc
or
add
sbb
sbb
and
adc
adc
adc
adc
adc
or
cdq
adc
adc
adc
add
add
sbb
adc
adc
adc
mov
adc
add
add
sbb
add
sbb
adc
push
add
push
add
add
add
push
or
add
adc
adc
add
add
sbb
add
add
and
ins
adc
add
add
ins
adc
adc
add
adc
ins
adc
adc
add
adc
ins
pop
add
adc
add
add
test
ins
push
adc
adc
adc
pop
add
sbb
add
adc
adc
add
add
add
add
or
add
push
add
sub
add
sub
sbb
lods
add
ins
adc
adc
adc
and
mov
or
add
ins
adc
adc
add
sbb
ins
adc
sbb
add
sbb
ins
adc
ins
sbb
push
push
push
push
add
add
test
or
add
push
adc
push
add
add
adc
adc
add
or
add
push
push
or
or
add
adc
add
add
push
adc
push
add
push
push
or
push
add
adc
add
push
pop
add
add
add
adc
add
sbb
sbb
adc
or
add
add
push
add
or
adc
push
add
push
pop
add
add
or
adc
add
add
add
push
push
add
add
push
push
pop
adc
add
push
add
push
add
add
adc
add
add
push
push
pop
and
add
or
push
add
add
sbb
add
sbb
add
sbb
sbb
sbb
sbb
add
sbb
adc
pop
add
or
adc
or
add
sbb
adc
or
add
or
adc
add
add
sbb
add
add
or
push
add
add
push
add
or
add
push
or
push
adc
or
add
or
or
add
or
push
or
or
or
or
or
add
or
push
or
sbb
add
or
push
or
push
or
or
add
or
push
push
add
or
or
pop
adc
sbb
sbb
or
or
pop
adc
sbb
sbb
push
add
or
pop
adc
sbb
or
sbb
or
sbb
adc
cmp
push
push
push
add
add
or
or
push
add
push
push
sbb
add
add
sbb
push
push
pop
add
sbb
push
add
add
sbb
push
add
add
push
sbb
push
or
add
adc
or
push
push
add
add
adc
sbb
push
or
add
inc
sbb
push
add
add
adc
push
push
push
add
add
push
push
pop
add
sbb
push
add
push
push
add
add
push
add
add
sbb
add
sbb
or
add
dec
sbb
or
add
dec
sbb
add
or
or
add
add
adc
add
add
or
add
adc
add
cmp
or
add
add
push
adc
add
adc
add
add
add
add
push
add
push
add
add
inc
add
add
or
add
push
add
push
add
xor
add
adc
or
pop
add
push
push
add
pop
add
or
push
add
add
or
push
push
add
add
add
add
sbb
add
or
add
add
adc
add
add
adc
inc
adc
adc
pop
add
add
sbb
add
or
add
add
adc
sbb
or
sbb
push
adc
add
sbb
adc
or
add
adc
adc
add
adc
add
sbb
add
push
or
add
or
and
add
or
cmp
add
adc
leave
pop
add
sbb
add
add
or
and
adc
popf
sbb
and
push
sbb
and
adc
push
add
push
push
and
adc
add
push
sbb
and
add
push
add
sbb
and
add
add
and
add
inc
adc
and
push
adc
adc
push
sbb
add
add
push
add
push
pop
and
push
push
push
push
push
and
adc
add
sbb
xor
mov
adc
add
add
sbb
and
sbb
and
adc
sbb
and
add
add
or
or
and
sbb
add
add
push
push
push
add
dec
push
and
adc
add
push
sbb
and
or
sbb
and
adc
pop
or
add
sbb
adc
adc
add
push
sbb
add
add
and
add
or
and
push
sbb
add
push
add
add
add
and
sbb
pop
and
push
sbb
and
or
add
or
and
sbb
xor
push
sbb
push
and
add
add
push
and
push
sbb
add
sbb
add
sbb
and
sbb
add
adc
add
and
sub
and
adc
push
sbb
sbb
and
add
dec
adc
and
push
add
rol
sbb
and
adc
xor
sbb
xor
xor
adc
and
add
ins
or
add
sbb
and
add
or
and
adc
add
or
add
adc
or
or
and
adc
pop
push
sbb
add
pop
and
sbb
push
and
push
adc
push
and
adc
add
adc
sbb
adc
sbb
add
and
adc
add
sbb
and
mov
or
add
ins
sbb
adc
and
sbb
ins
sbb
push
sbb
adc
adc
add
test
adc
add
sub
add
xor
and
adc
add
sbb
add
adc
adc
sbb
push
sbb
sbb
push
add
or
and
add
and
or
and
sbb
add
add
dec
or
and
or
push
add
or
add
dec
add
add
pop
pop
and
add
sbb
or
or
add
or
test
add
push
push
and
adc
add
adc
or
and
push
sbb
sbb
and
push
sbb
push
and
adc
add
push
sbb
sbb
add
push
sbb
adc
push
and
add
adc
or
add
push
adc
push
sbb
adc
push
sbb
or
and
push
sbb
push
add
sbb
and
add
push
and
adc
add
and
add
sbb
and
add
cmp
fld
and
adc
and
sbb
sbb
sbb
and
adc
and
adc
and
sbb
add
cmp
add
add
add
add
inc
add
add
add
add
jl
sub
add
mov
sub
sbb
sub
adc
sub
adc
adc
adc
add
mov
add
sub
or
test
or
add
int
or
adc
sbb
push
add
push
add
adc
push
adc
add
or
push
adc
push
adc
push
add
push
adc
add
adc
push
adc
add
sbb
adc
push
adc
pop
add
adc
push
adc
or
push
adc
push
adc
push
adc
push
add
adc
add
adc
push
adc
and
add
cmp
add
adc
adc
adc
push
adc
cmp
push
adc
or
add
add
push
push
adc
add
adc
or
push
adc
add
push
or
adc
sbb
add
adc
add
sbb
push
push
add
adc
adc
add
add
push
adc
push
add
adc
sbb
add
adc
xor
pop
push
adc
add
push
adc
or
adc
sub
add
adc
push
add
adc
xor
cmp
add
les
adc
or
rol
adc
sbb
fadd
adc
and
call
in
add
adc
xor
clc
add
adc
add
push
adc
or
push
adc
adc
push
adc
sbb
push
adc
and
push
adc
sub
push
adc
xor
push
adc
cmp
push
adc
add
adc
or
adc
adc
adc
sbb
adc
and
adc
sub
adc
xor
adc
cmp
adc
add
add
adc
or
push
adc
sbb
add
adc
and
push
adc
xor
add
adc
cmp
push
adc
or
push
adc
adc
push
adc
sbb
push
adc
and
push
adc
sub
push
adc
xor
push
adc
cmp
push
adc
add
push
adc
or
push
adc
adc
push
adc
sbb
push
adc
and
push
adc
sub
push
adc
xor
push
adc
cmp
push
adc
add
adc
or
adc
adc
adc
sbb
adc
and
adc
sub
adc
xor
adc
cmp
adc
add
add
adc
or
push
adc
sbb
add
adc
and
push
adc
xor
add
adc
cmp
push
adc
or
push
adc
adc
push
adc
sbb
push
adc
and
push
adc
sub
push
adc
xor
push
adc
cmp
push
adc
test
add
adc
or
adc
adc
adc
sbb
adc
add
sbb
pop
add
add
inc
adc
and
push
push
adc
add
or
add
add
pop
add
add
dec
adc
add
adc
and
push
adc
add
or
or
add
add
push
adc
and
add
push
add
push
add
add
pop
push
add
add
sbb
add
add
push
push
and
add
xor
adc
xor
adc
and
sbb
and
adc
add
cmp
push
sbb
adc
add
adc
or
add
sub
and
add
adc
adc
sbb
and
adc
adc
and
add
jns
push
adc
and
add
sbb
add
ins
add
movs
pop
and
add
and
add
add
add
sbb
and
adc
sbb
and
sbb
sbb
add
sbb
sbb
push
and
add
or
adc
and
adc
add
or
and
add
adc
sbb
adc
push
push
adc
add
and
add
push
push
push
push
add
sbb
and
add
adc
push
or
add
sbb
add
push
push
sbb
push
push
push
push
push
or
add
cmp
and
push
or
and
or
adc
or
or
add
cmp
add
sbb
sbb
add
or
push
pop
and
add
add
or
or
or
adc
push
sbb
add
or
add
or
or
and
sbb
add
push
sbb
push
push
sbb
sbb
add
add
push
adc
add
adc
or
add
adc
add
sbb
xor
push
sbb
add
push
push
add
add
sbb
adc
add
add
push
sbb
add
add
add
sbb
add
adc
add
adc
adc
adc
sbb
and
add
and
or
adc
add
add
add
add
adc
adc
push
and
sbb
add
adc
push
sbb
or
add
or
add
or
adc
or
add
add
or
add
and
sbb
add
push
sbb
add
sbb
add
sbb
add
or
and
adc
adc
add
test
sub
and
add
push
adc
sub
cmp
cmp
push
add
push
add
add
add
and
add
or
and
add
sbb
pop
add
sbb
ins
sbb
add
and
and
or
add
adc
and
add
xor
add
or
or
add
or
add
and
ins
add
sbb
sub
add
xor
add
sbb
pop
and
adc
add
add
and
and
add
mov
adc
adc
adc
add
add
add
sbb
add
adc
push
and
adc
add
adc
add
adc
cmp
or
add
cmp
add
adc
sbb
and
adc
adc
add
sbb
add
adc
or
add
add
add
and
add
adc
adc
add
adc
and
and
add
cmp
and
adc
push
and
add
and
add
adc
add
adc
push
add
or
add
sbb
pop
push
and
sbb
push
adc
adc
adc
adc
add
xor
xor
or
add
push
and
add
adc
and
add
sbb
and
add
sbb
add
adc
add
sbb
movs
push
push
and
add
xor
mov
add
xor
lds
rol
add
adc
sbb
add
adc
test
add
add
or
add
sbb
add
adc
add
int
and
adc
adc
add
sub
ins
push
add
adc
add
sub
adc
add
std
push
and
adc
add
adc
push
adc
test
push
and
sbb
and
sbb
and
adc
adc
adc
test
and
adc
test
and
sbb
sbb
add
add
add
or
add
add
and
add
add
and
add
adc
adc
add
adc
adc
adc
adc
adc
pop
and
add
add
add
and
adc
add
and
or
adc
or
add
or
adc
push
and
add
adc
add
add
add
adc
adc
or
add
adc
adc
add
and
adc
adc
pop
and
adc
and
add
or
and
add
or
or
and
add
add
add
and
adc
add
add
and
adc
add
add
add
add
mov
inc
add
test
add
add
add
ins
add
add
add
cmc
add
cwde
add
add
jno
add
add
add
add
inc
ins
ins
outs
ja
jne
je
jo
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
or
add
add
add
popa
add
add
add
add
add
add
add
and
add
add
add
add
add
sub
sub
pop
add
sub
sub
pop
add
sub
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
jnp
xor
sub
xor
jge
sub
sub
and
push
sub
pop
add
add
add
add
add
add
add
aas
add
add
add
add
xor
sub
xor
jge
sub
sub
aas
add
add
xor
jge
sub
sub
sub
pop
add
add
add
add
add
add
add
or
add
add
add
add
add
add
xor
sub
add
add
add
add
pop
add
add
add
xor
xor
pop
add
add
pop
add
add
add
add
sub
xor
aas
add
xor
xor
xor
add
jl
xor
pop
add
add
add
sub
pop
add
add
add
add
sub
sub
xor
pop
add
add
add
add
add
add
add
add
add
add
xor
jge
jl
pop
add
add
add
add
add
add
add
xor
sub
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
sub
xor
aas
add
xor
xor
xor
xor
add
add
add
jl
xor
pop
add
add
add
add
sub
pop
add
add
add
add
sub
sub
xor
pop
add
add
add
add
add
add
add
add
add
add
xor
jge
jl
pop
add
add
add
add
add
add
add
xor
sub
add
add
add
add
xor
sub
add
add
pop
add
add
add
add
xor
aas
add
add
pop
add
add
add
add
sub
sub
xor
pop
add
add
add
add
add
add
add
add
add
add
xor
jge
jl
pop
add
add
add
add
add
add
pop
add
add
add
add
xor
aas
add
add
pop
add
add
add
add
sub
sub
xor
pop
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
pop
add
add
add
add
add
pop
add
add
cmp
pop
add
add
add
add
add
pop
add
add
add
sub
jl
sub
sub
xor
add
add
add
add
add
pop
add
add
cmp
pop
add
add
add
add
pop
add
add
add
sub
xor
xor
sub
jl
xor
xor
jl
pop
add
add
cmp
pop
add
add
add
add
push
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jo
ins
add
jb
add
sub
add
add
je
add
pop
add
jb
outs
add
jae
add
inc
add
add
je
add
add
add
push
pop
add
adc
or
add
adc
or
or
add
or
pop
add
adc
push
push
adc
push
adc
push
push
push
push
push
adc
adc
adc
push
adc
adc
adc
adc
push
or
xor
or
or
push
push
push
push
push
adc
adc
push
adc
adc
push
push
push
adc
add
push
adc
or
pop
push
push
sbb
or
pop
pop
add
adc
or
pop
add
push
push
or
pop
push
push
adc
xor
xor
adc
xor
add
or
push
push
adc
adc
add
xor
xor
xor
push
pop
add
adc
pop
pop
add
inc
adc
or
pop
add
inc
push
sbb
add
or
adc
adc
push
adc
push
adc
adc
or
pop
add
add
adc
adc
push
or
xor
adc
pop
push
sbb
sbb
or
adc
adc
push
or
xor
adc
pop
push
adc
push
or
adc
or
pop
pop
sbb
adc
adc
push
adc
or
or
add
add
or
pop
add
adc
add
xor
xor
adc
sub
or
xor
adc
add
cmp
adc
xor
xor
xor
adc
adc
xor
or
add
adc
adc
adc
lar
add
add
add
add
add
sbb
or
add
adc
adc
or
sbb
push
push
sbb
sbb
pop
or
push
adc
push
adc
or
pop
push
push
adc
xor
add
xor
add
adc
pop
or
push
push
sbb
add
xor
pop
sub
push
push
push
push
push
or
sbb
push
push
add
or
or
adc
push
sbb
adc
push
adc
or
adc
add
or
push
or
pop
pop
adc
or
sbb
or
push
or
add
pop
adc
add
sbb
or
add
or
or
add
add
adc
sbb
pop
add
sbb
add
adc
push
or
add
adc
or
add
adc
push
adc
adc
add
adc
add
push
adc
adc
adc
pop
push
adc
adc
or
sbb
push
adc
push
adc
xor
xor
push
adc
xor
push
pop
or
adc
adc
sbb
or
add
pop
sysret
add
add
or
pop
add
add
or
sysret
push
adc
sbb
adc
or
or
add
add
pop
add
adc
add
adc
adc
sub
or
fs
cmp
adc
xor
xor
fs
cmp
adc
or
or
pop
add
xor
adc
adc
sbb
push
adc
sbb
pop
push
sbb
push
or
add
or
pop
add
pop
or
add
or
add
or
pop
add
sub
or
mov
xor
push
pop
push
adc
or
sbb
mov
or
add
jno
jno
jno
push
pop
add
add
add
or
pop
add
cmp
add
or
pop
add
and
or
pop
add
xor
or
add
or
pop
push
push
adc
or
dec
adc
or
add
xor
mov
or
add
je
adc
add
sbb
xor
or
pop
add
ins
adc
pop
add
adc
and
or
add
test
adc
adc
add
add
adc
ins
sbb
adc
or
add
or
pop
add
push
adc
add
or
in
or
pop
add
adc
add
sub
adc
adc
sbb
adc
add
add
sub
and
add
or
adc
or
or
or
xor
adc
add
or
or
add
adc
or
pop
add
or
add
add
push
pop
add
adc
add
or
pop
add
or
pop
or
add
or
or
adc
adc
adc
or
pop
push
adc
add
add
add
add
add
push
add
or
add
add
push
add
adc
add
adc
add
add
add
add
adc
add
adc
add
add
push
add
adc
add
push
add
adc
add
or
pop
add
pop
add
push
add
or
pop
add
push
add
add
or
pop
add
adc
add
add
add
push
add
or
add
add
and
or
ins
add
ins
adc
adc
add
add
ins
sbb
sbb
add
xor
or
push
pop
add
cmp
sub
or
pop
add
pop
add
add
or
pop
add
adc
or
pop
pop
adc
or
sbb
add
push
pop
add
and
and
adc
add
sbb
and
adc
add
add
adc
add
add
pop
add
pop
add
xor
cmp
or
add
xor
add
pop
add
or
pop
add
adc
sbb
push
or
or
pop
add
pop
adc
add
xor
add
add
or
pop
or
adc
test
add
adc
adc
push
or
adc
adc
pop
or
sbb
adc
push
push
sbb
or
pop
add
or
pop
add
or
pop
add
or
pop
add
adc
ror
or
pop
add
adc
adc
push
sbb
adc
sbb
or
pop
or
adc
or
push
push
sbb
or
test
test
push
sbb
dec
or
pop
add
sbb
push
or
or
add
pop
pop
push
sbb
or
or
sbb
adc
push
push
or
adc
add
or
pop
add
or
pop
or
or
or
push
or
add
or
pop
or
or
or
adc
or
adc
adc
or
cmp
or
or
pop
add
dec
or
pop
or
or
dec
or
cmp
push
pop
pop
push
push
or
sbb
add
or
or
sbb
sbb
sbb
or
cmp
add
xor
xor
push
adc
xor
or
add
adc
inc
or
push
adc
test
test
test
daa
pop
or
adc
test
test
push
adc
adc
test
test
add
add
push
adc
or
pop
push
sbb
or
xor
pop
adc
or
adc
sbb
or
pop
pop
sbb
adc
adc
or
adc
or
pop
or
adc
test
push
or
adc
pop
or
sbb
adc
add
or
or
add
adc
xor
or
adc
adc
adc
push
sbb
add
dec
push
or
add
adc
or
adc
or
pop
add
pop
push
push
or
add
or
pop
add
push
adc
or
add
add
pop
pop
add
or
add
sbb
add
or
pop
or
adc
test
add
test
or
add
sbb
or
add
sbb
or
pop
add
adc
adc
add
xor
sysret
or
push
sbb
or
or
add
add
adc
or
sbb
add
push
adc
or
add
or
pop
add
or
adc
test
adc
add
adc
add
dec
or
pop
add
sbb
sbb
sbb
sbb
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
adc
or
or
push
or
pop
add
sbb
or
pop
add
or
pop
pop
add
adc
push
push
adc
or
adc
adc
adc
adc
push
adc
or
adc
push
sbb
adc
sbb
or
pop
pop
push
sbb
adc
sbb
or
pop
pop
sbb
adc
add
or
pop
or
sbb
adc
add
or
pop
add
pop
pop
add
xor
or
adc
adc
rcr
push
push
pop
or
xor
sbb
adc
adc
pop
adc
and
and
sub
or
sbb
adc
or
sbb
add
jge
aas
and
aas
or
loop
pop
mov
dec
loop
lods
ja
ins
cmp
js
movs
add
popa
nop
ins
jno
dec
lods
loop
scas
adc
into
dec
jbe
mov
ret
cmp
outs
movs
push
stos
fstp
xchg
cmc
call
fstp
or
mov
jno
scas
jmp
into
push
dec
loope
push
adc
cmp
lods
adc
loopne
sub
stos
add
sahf
pop
pop
(bad)
fidivr
mov
call
dec
sub
dec
sub
cmp
pop
fsub
mov
mov
add
inc
fs
adc
add
sub
pop
out
push
mov
and
out
fcom
in
xchg
sbb
cld
jp
js
cli
adc
pop
and
push
pop
test
aad
fst
add
aas
push
outs
pop
xor
movs
out
fbld
push
jg
adc
aad
mov
jmp
pop
lock
xchg
or
out
or
mov
pop
push
add
jecxz
fbld
out
and
lods
mov
or
mov
ins
and
add
movs
cwde
out
mov
pop
hlt
push
pop
dec
jle
mov
add
xchg
push
push
js
push
scas
xor
mov
mov
add
and
fisub
cwde
cmps
jmp
(bad)
in
push
jl
movs
into
xchg
cdq
leave
scas
inc
pop
lahf
and
mov
outs
clc
cdq
rcl
or
xchg
sub
repnz
sub
int
in
test
out
(bad)
jae
jbe
sti
sbb
fcom
shl
pop
adc
popf
leave
pop
push
dec
adc
sub
fdivr
ss
xor
cmps
inc
jae
or
and
xchg
mov
sub
push
sti
cmp
cmc
mov
push
(bad)
fiadd
pop
xchg
push
test
ret
pop
mov
scas
pusha
sbb
push
cmp
mov
jmp
sub
push
cmc
dec
(bad)
jne
mov
mul
mov
call
jecxz
push
push
xchg
jmp
outs
call
mul
sbb
int3
adc
call
sub
shl
rcr
mov
mov
test
pop
fwait
push
cmp
call
leave
sub
stc
arpl
nop
jns
pop
inc
sub
or
and
cs
cmp
out
dec
jno
lea
jecxz
mov
push
(bad)
add
fisttp
inc
lahf
into
pop
jno
push
cmps
jecxz
es
xor
push
or
div
mov
xor
sub
ins
pop
adc
aaa
ret
dec
(bad)
scas
pop
addr16
push
popf
popa
adc
test
adc
ret
ja
dec
push
loopne
nop
out
add
pusha
xor
pop
pop
cmp
retf
inc
xchg
jmp
(bad)
or
cdq
adc
call
inc
fs
pop
jecxz
(bad)
pop
aaa
in
push
xor
push
rcl
add
push
ficom
icebp
cli
inc
adc
push
test
vxorps
pop
dec
cmp
addr16
add
sub
repnz
out
xor
sub
cmc
jle
call
not
std
dec
mov
mov
retf
mov
scas
sub
cld
fidivr
das
cmps
stc
push
ja
iret
jmp
jg
or
(bad)
cwde
jne
ret
or
int
cmp
mov
cdq
mov
cmp
mov
pop
cmp
pop
jae
mov
sub
sub
jns
dec
fisttp
add
xlat
push
lahf
adc
test
mov
add
sub
popa
or
cmp
cld
or
inc
cs
xchg
inc
in
push
xchg
pop
inc
fisttp
push
jp
xchg
or
push
daa
jbe
(bad)
jl
mov
and
xchg
sti
fidiv
push
push
xlat
ss
xor
mov
lahf
pop
push
pop
xor
fdiv
jnp
cwde
sub
mov
mov
cmc
and
mov
xor
lods
or
arpl
pop
push
xor
mov
adc
not
out
out
sbb
retf
aad
sbb
add
xor
fidivr
inc
retf
test
inc
xor
sub
rcl
pop
cs
inc
and
addr16
lds
pop
cmp
fdivr
xchg
add
and
pop
es
xchg
jae
out
xchg
dec
dec
outs
jge
inc
nop
dec
lods
test
ins
cmp
enter
sar
les
inc
push
dec
cmp
fist
xor
jae
adc
rcr
mov
lods
int3
stc
imul
loopne
fld
test
addr16
sub
inc
int3
or
test
loope
push
sbb
(bad)
pushf
test
inc
fs
mov
loopne
dec
adc
push
lods
mov
call
dec
adc
push
pop
jge
inc
sub
mov
jp
fiadd
cld
xchg
daa
mov
xchg
fist
neg
push
mov
(bad)
clc
imul
out
sub
pop
push
fld
retf
jae
loopne
fldcw
mov
mov
dec
ins
mov
push
xchg
or
cmps
(bad)
xchg
lea
dec
pop
mov
mov
sub
addr16
xor
std
sub
push
jae
es
movs
hlt
or
test
xor
jnp
add
jbe
xchg
scas
mov
mov
ret
rcr
or
jle
mov
test
jle
out
add
inc
dec
sub
icebp
ror
mov
test
fs
arpl
xchg
lds
mov
ficomp
fwait
push
icebp
sub
adc
sbb
and
mov
out
into
xchg
mov
fmul
jle
inc
daa
aas
jo
movhps
push
loope
mov
sub
dec
repz
inc
dec
call
daa
sub
repnz
mov
cmp
call
retf
xor
scas
outs
cmc
cmp
jae
dec
test
out
sbb
mov
push
cmc
lock
sbb
loope
sti
test
add
rcl
inc
sub
and
cmp
out
scas
(bad)
je
xor
sbb
pusha
push
mov
repnz
or
shl
dec
or
jmp
std
repz
add
pop
push
dec
push
in
jae
sub
je
xor
sbb
sub
inc
jp
jb
pop
popa
pop
mov
mov
mov
cmps
ror
inc
xchg
sub
sbb
sub
(bad)
scas
out
xor
fdivr
and
jl
jmp
shl
ror
rcl
mov
xchg
out
sub
sbb
jg
repnz
dec
sahf
jns
out
imul
in
jle
xchg
mov
js
xor
sub
mov
push
std
xchg
cmp
cmp
lahf
movs
out
fwait
pushf
mov
imul
inc
jecxz
cld
popa
adc
mov
stc
sub
div
mov
jmp
cs
aas
int
jp
clc
rsqrtps
aaa
adc
mov
jo
fisubr
lock
sbb
popf
imul
paddw
push
test
clc
repnz
cld
icebp
jnp
lods
fs
xor
lods
cmc
imul
call
rol
out
cmps
popa
pop
mov
test
cmp
out
mov
mov
mul
mov
xlat
xor
dec
fst
mov
sbb
out
int3
adc
sub
jmp
and
mov
test
sub
loop
mov
sbb
and
mov
fnstcw
push
add
push
mov
mov
mov
xchg
add
idiv
mov
or
mov
loop
bound
dec
fstp
mov
pop
int3
cmp
xor
ror
push
and
inc
iret
ret
or
and
scas
dec
or
xchg
inc
mov
mov
call
push
(bad)
and
add
dec
pop
push
int
mov
in
sbb
push
in
xor
clc
pop
stos
icebp
jle
cmp
jp
adc
sbb
jmp
sub
out
mov
push
in
sbb
call
pop
mov
fld
push
cli
js
dec
cmp
fsubr
xlat
push
stc
mov
sub
xor
adc
movs
gs
jg
scas
ffree
push
dec
jg
adc
test
lods
sbb
dec
data16
cs
mov
mov
push
mov
stc
scas
mov
push
imul
and
out
cmp
aad
dec
inc
shr
shl
cmps
mov
xchg
push
pusha
sub
mov
movs
xor
sbb
lods
push
adc
or
sub
cld
dec
repnz
cs
aaa
sbb
xchg
ins
(bad)
outs
jmp
ins
add
pop
pop
xlat
xchg
dec
cmc
imul
and
fisub
mov
jns
mov
sub
adc
cmp
mov
jmp
inc
sbb
pop
cmp
aas
jp
push
gs
xchg
scas
aad
add
pop
push
add
imul
call
pop
jge
leave
enter
adc
out
mov
(bad)
loopne
movs
pop
nop
dec
dec
and
sbb
int3
out
shl
loope
pop
sahf
enter
xor
in
(bad)
in
mov
enter
add
inc
push
jbe
or
sub
sbb
push
(bad)
in
and
lods
dec
pop
cwde
movs
in
push
rol
mov
cmp
jmp
cli
pop
mov
mov
in
push
mov
sub
ins
pop
arpl
inc
cmp
(bad)
and
ins
sbb
xor
cdq
push
test
sub
adc
fld
cmp
mov
(bad)
aaa
cli
inc
in
fst
gs
out
in
sub
push
fwait
pop
adc
les
inc
(bad)
adc
mov
out
mov
pop
pushf
dec
(bad)
enter
dec
pop
mov
mov
jns
in
lahf
xchg
aaa
push
ins
and
(bad)
lock
loop
test
inc
aad
jp
cmp
loop
jb
ds
inc
sub
dec
fnsave
mov
xlat
push
or
pushf
and
sub
out
or
sar
nop
sub
cmp
pop
cmp
cwde
add
jb
cdq
gs
retf
cmps
pop
sbb
fucomi
mov
jl
das
cs
ins
sub
fbld
jae
(bad)
mov
call
les
popf
add
neg
adc
xor
in
sbb
jnp
aaa
cmp
call
xchg
dec
rcr
xchg
retf
cwde
stc
std
mov
je
pop
sbb
push
into
or
popf
jnp
cli
cmp
in
jmp
stos
int3
ds
push
in
sub
inc
ror
xlat
clc
cdq
pusha
arpl
ins
pop
cld
daa
(bad)
and
mov
das
daa
cmps
std
mov
push
xor
dec
aad
ror
xor
mov
repnz
adc
test
cmp
jbe
jae
adc
cli
push
inc
jno
sub
std
test
pop
sbb
sahf
adc
rol
jmp
fdiv
in
mov
vmread
sti
scas
out
jno
clc
mov
pusha
dec
adc
std
sahf
push
xchg
inc
loope
dec
or
push
pop
in
movs
pop
mov
imul
int
mov
mov
je
fs
fsubp
lock
(bad)
jecxz
or
jno
xor
jmp
mov
xchg
mov
push
pop
add
(bad)
xchg
pop
pop
push
fcomp
rol
xchg
das
push
lea
or
inc
nop
loop
cmp
mov
xchg
ret
mov
sub
ss
cld
arpl
dec
nop
jnp
cmps
push
test
or
std
and
push
cmp
fild
jbe
fimul
test
push
cmp
retf
mov
and
(bad)
pop
gs
add
adc
test
addr16
sub
dec
rol
bound
cwde
(bad)
out
fadd
sti
fisubr
sti
pop
lea
lock
xchg
out
mov
and
inc
cmps
or
mov
push
aad
in
cmp
pop
dec
cmps
pop
dec
mov
cld
fwait
imul
in
xor
mov
loopne
dec
outs
mov
imul
xor
sub
jae
popf
bound
add
inc
mov
lods
out
and
test
dec
stc
in
cwde
retf
push
push
mov
adc
pop
and
jns
sahf
loopne
inc
mov
pop
or
les
xchg
and
std
mov
cmp
cs
xor
int
add
or
jle
lock
dec
fs
loope
test
mov
outs
mov
stos
xchg
pop
pop
inc
push
mov
dec
xchg
mov
mov
sbb
outs
call
jbe
xor
sbb
sub
mov
jne
mov
(bad)
push
loopne
pop
push
push
jge
push
jg
popf
push
fsubr
pop
cli
dec
iret
loop
paddusw
dec
movs
push
nop
push
inc
mov
sbb
adc
jle
test
in
mov
mov
mov
dec
test
movs
sbb
cld
(bad)
inc
push
add
mov
jge
mov
dec
and
jno
mov
fisttp
sub
mov
sbb
cmp
outs
call
(bad)
test
mov
inc
iret
ror
mov
mov
or
(bad)
jge
call
dec
jnp
cdq
pop
mov
add
ret
aad
test
in
cmps
xchg
add
enter
jns
ja
mov
call
mov
sub
retf
lods
outs
mov
xchg
and
or
(bad)
mov
scas
add
pop
lds
push
jmp
cmp
sbb
lds
(bad)
mov
(bad)
ds
outs
out
cmps
int
or
mov
sahf
je
xchg
cdq
test
ret
sbb
xor
sub
sub
mov
and
xchg
mov
iret
test
mov
int
scas
push
jl
hlt
sbb
fidivr
add
add
sbb
scas
jmp
(bad)
jmp
pop
cmp
jb
ins
jb
jge
xor
retf
xor
and
add
movs
xor
pop
xlat
cli
popf
mov
add
pop
xor
mov
(bad)
dec
icebp
pushf
push
jb
jno
xchg
rcr
xchg
ins
cwde
iret
sub
stos
repz
loope
and
dec
fist
jecxz
push
mov
inc
push
mov
cmp
sub
mov
sbb
rcl
add
add
neg
mov
cmps
rcr
jl
pop
cmc
sbb
sub
fsubp
xchg
jne
sbb
mov
out
fistp
push
mov
bound
rol
xchg
dec
lock
outs
out
xchg
mov
ins
add
call
or
cwde
jge
jne
dec
and
daa
jl
retf
pusha
mov
(bad)
push
shr
xchg
sti
sub
leave
aas
std
sub
cmp
popa
(bad)
sbb
add
push
jecxz
or
fnsave
ret
sub
ret
dec
in
sbb
pop
ret
jbe
jbe
xchg
pop
cs
xchg
ret
dec
mov
mov
and
out
popa
and
sbb
imul
finit
popa
jne
cmps
push
and
dec
int
xor
cmp
push
ds
add
movs
cmps
fdivr
repnz
jno
and
fwait
mov
mov
push
sbb
pop
shr
add
lea
imul
nop
and
loop
out
lds
pop
cmps
xor
pop
hlt
mov
adc
xchg
push
mov
inc
cs
dec
sar
mov
fstp
and
inc
adc
sub
mov
inc
dec
scas
push
dec
int3
mov
and
mov
(bad)
hlt
pop
(bad)
xor
or
mov
jmp
sar
mov
jno
mov
xchg
sbb
inc
push
dec
adc
xlat
and
jmp
imul
push
jmp
jp
mov
add
xor
pushf
iret
dec
cmp
sbb
push
fst
out
ins
xchg
in
xor
jno
pop
imul
fwait
stc
outs
mov
jne
mov
dec
add
inc
ins
sti
xchg
rol
cdq
push
cmp
fld
push
ins
dec
fimul
fnsave
ds
test
sub
push
adc
push
add
pop
mov
retf
in
loope
jmp
jbe
push
and
and
fsub
test
pop
mov
or
cmp
mov
cmp
xchg
mov
les
or
push
sbb
cmps
outs
rcr
mov
(bad)
fiadd
addr16
cmp
ins
enter
loop
(bad)
aas
dec
(bad)
(bad)
cmps
xchg
jo
(bad)
cdq
jae
bound
das
(bad)
jmp
lods
out
cmp
mov
outs
fst
ret
movs
int
jmp
test
fpatan
dec
or
pop
mov
cld
(bad)
aam
mov
fld
push
repz
(bad)
inc
push
sahf
or
test
aas
sub
aaa
test
jb
in
popa
pop
shl
cli
cmp
mov
enter
adc
pop
add
test
lods
outs
push
dec
pop
cmc
mov
lds
cmps
rol
dec
pop
cmp
mov
loop
push
arpl
push
mov
fistp
xchg
(bad)
cmp
xchg
ins
ret
out
sbb
mov
stos
and
pop
pop
clc
fs
xlat
fwait
push
les
add
add
in
mov
rol
and
retf
sub
mov
test
xchg
dec
sahf
cmp
std
popa
shl
(bad)
cld
sub
or
out
pop
jno
daa
test
xor
sahf
and
aas
and
(bad)
jb
cmp
mov
push
fdivr
(bad)
add
mov
push
xchg
mov
dec
push
sti
out
(bad)
adc
int
mov
adc
pop
dec
add
(bad)
pop
stc
test
test
lds
mov
mov
push
lods
mov
in
cmp
push
sar
inc
imul
push
not
sub
inc
lock
jne
xchg
mov
mov
pop
sub
pop
pop
inc
pop
jge
cmp
sahf
js
xor
sub
loopne
jnp
mov
cmp
pop
imul
sbb
scas
leave
and
movs
jns
mov
fs
mov
sbb
adc
inc
and
push
test
sbb
sub
movs
loop
cdq
xlat
in
(bad)
cli
mov
cmp
push
not
sahf
xchg
pop
das
pop
loop
lds
or
mov
jno
adc
retf
out
adc
dec
dec
mov
xchg
ret
cli
cli
loope
inc
sub
iret
test
pop
jmp
sbb
mov
loopne
mov
jg
stc
jne
mov
ja
mov
retf
and
cmp
pop
fcomp
out
cmp
(bad)
cld
sbb
or
xor
repnz
lea
(bad)
mov
sub
pusha
in
in
retf
push
gs
icebp
push
retf
neg
imul
cmp
pop
mov
scas
sbb
aaa
fisttp
(bad)
or
jge
addr16
cld
jae
xor
fild
or
mov
and
in
ins
gs
dec
pop
(bad)
cld
jmp
and
fucomip
out
push
push
fsubr
and
or
aad
repz
call
push
fsubr
add
add
div
int
xchg
sahf
shl
out
lahf
int
inc
ja
cwde
(bad)
push
ja
add
sbb
ss
hlt
or
sub
pop
add
jns
or
pop
movs
and
das
dec
inc
mov
stos
mov
pop
loopne
cmp
sbb
cmp
pushf
addr16
int
ret
xor
rcl
scas
mov
nop
inc
mov
aas
loop
jl
inc
xor
pop
rcr
jne
retf
push
push
pop
jecxz
cmp
dec
inc
inc
hlt
pop
jno
mov
dec
in
lds
pushf
inc
shl
jg
pop
and
dec
adc
xchg
out
fistp
lahf
loop
ja
xor
add
sbb
or
dec
test
out
jo
xor
inc
sbb
std
dec
rcl
js
inc
jmp
jp
lds
int3
jge
out
inc
xor
push
push
aaa
pop
jb
pop
add
mov
dec
andps
dec
ror
popf
fnstenv
movs
data16
sub
xchg
mov
bound
cmp
xor
jl
je
inc
dec
cdq
jns
mov
add
xchg
push
sbb
stos
dec
in
int3
cmp
xor
push
cwde
icebp
aam
in
push
mov
rol
sbb
xchg
add
mov
xchg
push
push
int
mov
xlat
cmp
pop
xor
mov
mov
jge
cmp
sub
cmps
jb
scas
dec
out
cmp
xchg
inc
sub
loopne
cs
push
mov
jmp
push
xchg
ins
xchg
mov
repnz
fwait
inc
jnp
pop
in
call
cwde
mov
(bad)
dec
push
aaa
arpl
mov
push
(bad)
inc
test
pop
or
mov
mov
xchg
and
add
retf
fidiv
dec
leave
bound
dec
test
inc
(bad)
loope
sub
jp
(bad)
sbb
imul
test
mov
pop
mov
fwait
sbb
es
call
add
lods
aaa
aam
jg
es
(bad)
xlat
jno
add
retf
add
dec
adc
xchg
shl
or
sbb
cli
jecxz
scas
lock
mov
jp
mov
push
dec
fisub
jl
(bad)
ins
dec
scas
mov
mov
int3
aaa
cmp
inc
jmp
or
xor
sub
out
and
mov
aam
fimul
dec
lea
inc
pop
sete
pop
popf
or
shr
repnz
stos
pop
push
les
cmp
mov
shl
sub
(bad)
out
pop
imul
fnstsw
in
dec
mov
aas
sub
ins
jbe
sahf
dec
jmp
rcl
pop
rol
test
pusha
ds
mov
nop
cmp
sahf
std
ds
int
in
cmp
adc
sub
add
push
scas
adc
das
stos
mov
pop
mov
xor
mov
ja
push
add
jnp
mov
jbe
xlat
pusha
and
or
add
cld
sub
dec
repz
cmps
cli
inc
dec
mov
popa
cmp
mov
rcl
lea
dec
cmp
sub
pop
mov
xchg
and
xchg
push
shr
std
scas
call
movs
xchg
sti
sbb
cli
les
and
test
int
imul
test
inc
inc
cmp
data16
inc
mov
sub
int
lds
dec
call
(bad)
cmp
dec
cmp
mov
dec
or
add
fs
dec
imul
clc
scas
or
jnp
retf
mov
xchg
dec
add
add
jmp
cmp
int3
pop
repz
and
pop
mov
pop
dec
xchg
in
test
pop
or
add
hlt
imul
and
pop
sbb
ds
outs
imul
stos
cmp
out
cmc
adc
(bad)
dec
out
xchg
mov
ins
daa
rol
push
dec
pusha
loopne
jo
mov
shr
fs
sub
out
inc
cmp
mov
sbb
xor
push
cmps
int3
mov
repnz
xlat
add
shl
stc
popa
out
fisubr
imul
fld
mov
inc
in
mov
jle
out
scas
mov
cmc
mov
(bad)
mov
aaa
(bad)
inc
cmp
scas
cmp
loopne
sbb
stos
push
inc
out
jge
inc
cmps
mov
push
in
loop
mov
add
cli
cmp
cli
sbb
or
pop
inc
arpl
fs
mov
les
mov
mov
dec
mov
push
add
(bad)
out
pushf
sar
outs
cwde
jecxz
mov
mov
adc
call
je
jmp
and
jns
push
or
jns
mov
movs
or
stc
push
scas
push
sbb
fwait
sub
pusha
out
call
fdivr
pop
cmp
out
dec
mov
ds
in
ret
adc
add
gs
sub
mov
mov
outs
mov
or
push
push
mov
mov
sub
xor
inc
add
cmp
(bad)
jno
xor
ret
xor
jnp
fist
xchg
inc
out
aad
cmc
aam
test
cs
adc
pop
cmp
jb
push
loope
cmp
(bad)
call
(bad)
stc
pop
mov
and
out
mov
xor
dec
out
pop
les
push
pavgb
pop
sbb
mov
sub
pop
cmps
mov
xor
fwait
sbb
mov
xchg
fstp
pop
mov
or
push
(bad)
push
pusha
popf
lahf
jns
inc
stc
ss
sbb
test
sahf
sar
mov
or
retf
or
push
inc
into
shr
xchg
push
(bad)
aas
push
popf
clc
inc
jnp
test
nop
punpckldq
mov
cmp
sub
aas
in
pop
cmp
pop
jno
fldcw
adc
retf
mov
in
ror
ins
sub
push
adc
add
add
daa
fs
sar
outs
push
fdivr
rol
adc
add
sbb
cmp
push
cmp
lods
mov
mov
test
or
jmp
sbb
push
lods
sub
das
push
loopne
jbe
loope
add
pop
clc
sahf
aad
inc
jae
outs
in
xchg
aaa
rcr
scas
jmp
mov
push
sti
mov
imul
repz
xchg
jbe
mov
xchg
ret
add
xchg
sbb
sbb
push
call
add
jecxz
mov
mov
out
xchg
dec
adc
pop
mov
sub
fwait
mov
je
pop
inc
add
fisubr
ret
jne
cmp
fld
int
sahf
jmp
inc
push
std
adc
leave
dec
fisubr
fist
imul
outs
mov
(bad)
aaa
scas
jp
dec
outs
add
(bad)
mov
push
ins
stos
daa
ins
push
mov
fwait
scas
movs
hlt
jge
test
adc
xchg
clc
sub
dec
jbe
xchg
cmp
dec
xor
mov
cmp
or
sbb
aaa
fyl2x
xchg
jae
cmc
into
dec
xchg
int3
cs
cmp
pop
add
ficom
in
sub
jne
sub
push
(bad)
adc
mov
push
lods
add
movs
aas
fnstcw
imul
jle
add
aaa
pop
pop
sbb
jp
push
es
imul
stc
and
pop
inc
pop
xchg
aad
pop
jp
into
(bad)
adc
cli
aaa
cmps
push
jne
add
push
push
aas
ficomp
xchg
pop
je
sub
dec
shl
and
xchg
pop
pop
add
int3
xchg
adc
jp
(bad)
mov
push
xor
mov
xchg
push
xchg
mov
xchg
std
sbb
push
enter
retf
repnz
cdq
arpl
sub
retf
xor
dec
sub
or
test
xchg
pop
imul
out
or
sbb
jno
jbe
jmp
rcr
xchg
imul
rol
in
mov
jmp
daa
(bad)
call
cmp
dec
jmp
test
dec
dec
mov
push
shrd
cmp
lea
xor
sbb
fistp
jge
pop
mov
jns
jnp
clc
mov
cmp
mov
add
cs
(bad)
fidiv
out
jecxz
enter
jns
cmps
xchg
push
and
dec
ss
stos
loope
mov
jb
mov
jg
ds
pop
or
test
mov
pushf
xchg
xor
add
xchg
xchg
loop
fmul
call
imul
cmp
leave
dec
xchg
fadd
in
sar
push
scas
mov
and
add
jmp
sbb
cmc
dec
(bad)
aad
pop
inc
out
fisub
or
lods
sub
neg
enter
scas
cmps
ret
out
push
and
sub
adc
mov
mov
scas
mov
sub
(bad)
addr16
add
movs
stos
adc
fsub
mov
cmc
jb
pop
call
imul
popf
jbe
pop
pop
ds
dec
mov
mov
fild
push
aaa
sbb
push
aaa
xchg
mov
cld
sbb
push
fs
iret
mov
xchg
xlat
hlt
fild
and
inc
mov
xlat
and
mov
test
fistp
mov
cmp
outs
inc
and
ins
je
das
cmps
test
or
xchg
cmp
js
mov
lahf
mov
cvtps2pi
out
imul
ret
inc
es
dec
lahf
frstor
push
jnp
loop
rcr
or
test
adc
mov
cmp
daa
mov
mov
xchg
push
xchg
inc
sti
pop
pop
rcr
cmp
sbb
and
data16
scas
inc
xor
test
ins
in
dec
mov
adc
xor
sbb
in
jo
ret
fisttp
jg
add
fnstsw
cmp
test
lods
add
stos
(bad)
iret
repnz
int
inc
sahf
in
loop
(bad)
push
cmova
mov
shr
and
sar
pop
cld
dec
xor
adc
xchg
inc
pop
and
jecxz
fs
mov
(bad)
sahf
aad
and
jl
cmp
inc
sahf
jle
fsub
add
test
ror
or
cmp
loopne
cwde
movs
mov
pop
int
rol
push
dec
in
scas
sbb
sub
mov
sbb
div
ins
add
inc
push
scas
dec
mov
fs
mov
jnp
push
mov
add
cmp
add
nop
jle
jl
mov
push
push
push
fcom
jmp
and
stc
jne
jle
sub
aam
mov
data16
fwait
ss
ror
aaa
add
mov
neg
shl
or
sbb
dec
mov
push
pop
(bad)
nop
mov
mov
push
fnsave
mov
push
mov
in
rcl
mov
inc
call
xor
les
adc
push
add
popf
add
addps
imul
mov
jg
jecxz
jae
sar
(bad)
icebp
sub
or
(bad)
xor
repnz
and
cld
lods
idiv
lds
xchg
out
movs
movs
xchg
out
stos
jecxz
adc
dec
cmp
repz
das
lods
enter
xchg
xor
arpl
sub
stos
push
lock
dec
jecxz
aad
aaa
loopne
(bad)
push
fiadd
gs
mov
jle
and
in
jb
stc
jno
jbe
or
icebp
psrlq
xchg
ror
adc
and
sbb
rol
retf
pop
je
mov
dec
int3
mov
or
out
mov
add
dec
retf
mov
test
adc
ins
push
test
or
bound
xchg
and
and
xor
add
pusha
loopne
mov
pop
and
mov
cmp
mov
aad
mov
in
addr16
ins
cmp
sbb
adc
popf
fldcw
add
inc
push
retf
xor
jge
je
es
mul
xchg
jg
hlt
fsubr
or
aad
cmps
(bad)
loop
call
adc
push
fisubr
popa
jl
jns
xor
or
mov
sti
nop
dec
aam
inc
sbb
call
js
adc
jp
add
pop
movs
add
or
div
cmp
dec
push
(bad)
jge
pushf
or
pop
shl
push
mov
ret
popf
enter
xchg
push
cld
xchg
push
fadd
pop
sbb
cmps
pusha
cmps
scas
jbe
movntq
ret
cli
xchg
ret
pop
test
(bad)
repz
jecxz
push
cmp
xor
movs
or
mov
jg
mov
clc
pop
adc
retf
jl
xor
mov
jmp
xor
mov
pop
jns
lods
shl
loopne
ins
outs
es
pop
push
push
push
adc
xchg
xor
loope
out
sbb
les
add
mov
jge
lea
cmp
bnd
cld
xor
(bad)
inc
mov
cmp
rcl
std
int
test
sahf
ficomp
aam
xor
fld
fnstcw
cs
mov
or
repz
mov
inc
lds
sub
retf
daa
xchg
and
xchg
xchg
(bad)
dec
shr
and
data16
jecxz
sub
jmp
mov
xchg
rcl
pop
(bad)
jbe
cmps
add
mov
mov
push
pop
mov
js
movs
adc
test
mov
inc
dec
retf
rol
push
inc
cdq
js
jle
data16
adc
push
arpl
jge
aas
and
mov
dec
xor
cmps
loopne
cs
sbb
pop
outs
ret
mov
mov
add
test
push
mov
push
push
jmp
ret
lahf
cmps
sub
xchg
cmp
xor
cmp
inc
cmp
pushf
out
(bad)
call
sti
pop
repnz
int
fwait
test
dec
out
dec
and
shl
movs
dec
dec
fs
adc
and
sub
test
adc
sub
xchg
(bad)
ret
push
and
std
push
out
lods
mov
mov
mov
fs
out
sub
mov
mov
push
mov
sub
dec
add
lods
div
fdiv
jbe
cmc
xor
jle
mov
hlt
fs
jnp
xor
jns
mov
mov
dec
sub
inc
loop
cli
xchg
add
adc
mov
xchg
push
sub
mov
ins
loopne
aam
push
aam
sub
xor
lock
fidivr
jmp
movs
mov
dec
pop
mov
push
aaa
mov
bound
ds
xor
shl
movs
mov
mov
cmp
cmp
cmc
mov
jb
sbb
mov
mov
in
ins
push
jmp
pushf
or
pusha
push
aaa
inc
mov
inc
cli
pop
and
pop
repnz
shr
stos
and
xchg
clc
mov
pop
movs
call
imul
lods
push
fsubp
setp
cmp
dec
pop
mov
scas
daa
and
dec
push
push
pop
in
es
xchg
sub
fcomp
push
repnz
into
cs
mov
or
xor
push
mov
jo
les
dec
or
mov
repnz
(bad)
retf
mov
add
adc
imul
cs
jbe
sbb
(bad)
inc
test
sti
cwde
gs
in
lahf
xor
jl
xchg
jno
retf
push
ror
in
push
add
lods
cmp
add
cdq
scas
stos
push
jmp
mov
jle
sahf
dec
bts
cmp
xor
pop
mov
sub
xchg
pop
sub
addr16
shr
or
add
aas
sbb
and
cmp
mov
(bad)
out
scas
adc
(bad)
xor
push
loope
pop
mov
mov
and
int
inc
xchg
sar
scas
test
icebp
loope
xchg
dec
dec
push
pop
jmp
pop
sbb
retf
pop
icebp
mov
mov
cmps
push
or
lock
ret
repz
or
push
mov
je
jp
and
xchg
xlat
movs
cli
dec
fcmovb
dec
lock
inc
xchg
(bad)
jle
test
xchg
stos
enter
fcomp
gs
aam
push
fmul
dec
mov
or
popf
push
psubq
orps
xchg
cdq
aad
mov
call
push
mov
push
repz
popa
data16
mov
ins
cmp
mov
outs
xchg
add
aam
and
(bad)
sti
adc
jnp
or
cmc
jp
add
add
push
into
lock
add
mov
icebp
adc
pop
shl
fs
stc
dec
fidiv
in
gs
repnz
add
ss
xchg
adc
cdq
cmp
mov
retf
add
lea
in
jns
push
lods
pop
loopne
out
das
lods
xor
(bad)
sahf
adc
jnp
sar
aas
inc
sbb
mov
jge
int3
nop
pop
enter
frstor
mov
daa
fidivr
dec
jle
xor
add
sbb
sbb
retw
inc
pop
mov
pop
fisttp
inc
sar
inc
jb
int3
shl
faddp
(bad)
call
loope
je
lods
retf
add
out
je
pop
dec
stos
mov
mov
push
test
bound
push
inc
jecxz
cmp
lahf
push
mov
pop
cmp
jb
dec
mov
data16
sub
call
pop
push
lds
push
xchg
cmp
add
das
push
xor
mov
jg
sbb
or
popf
ret
xchg
and
sbb
ret
bswap
pop
nop
loope
daa
ret
arpl
fistp
pop
inc
inc
shl
(bad)
scas
fadd
out
fsub
push
sbb
and
loop
jmp
stos
in
sbb
mov
arpl
jecxz
lds
inc
add
sbb
push
or
sbb
push
inc
lods
and
and
sub
dec
push
sahf
sahf
xor
mov
adc
inc
push
outs
dec
add
push
out
jno
push
data16
dec
sbb
dec
lea
xchg
retf
adc
mov
mov
mov
int3
jmp
or
sub
into
or
mov
outs
xlat
dec
pop
mov
mov
push
add
or
movs
mov
dec
mov
and
pop
xchg
lock
inc
xchg
clc
(bad)
outs
outs
arpl
jmp
pop
dec
dec
push
lahf
fsubr
test
inc
xchg
(bad)
cmp
popa
or
mov
pop
xchg
mov
test
jnp
int3
mov
rol
out
adc
mov
adc
arpl
push
xchg
jp
les
sub
xchg
push
rol
sub
scas
scas
movs
sub
sbb
cli
imul
daa
adc
sahf
or
or
test
repnz
popa
dec
imul
pop
pusha
shl
lds
pop
pop
mov
fnsave
and
imul
cmp
outs
sbb
cmp
mul
loopne
mov
xor
cmps
popf
pop
pushf
pop
in
add
xchg
pop
or
test
rcr
(bad)
ins
push
push
out
add
or
add
(bad)
icebp
xchg
outs
rol
sbb
retf
or
inc
pop
cs
js
dec
pop
or
push
sub
mov
and
inc
popf
push
add
add
pusha
push
bound
stos
and
sub
retf
mov
pop
(bad)
mov
sub
dec
mov
retf
out
int3
xor
retf
std
fld
sub
je
jb
inc
stos
loopne
pop
dec
pop
adc
dec
mov
lock
dec
std
jbe
xor
frstor
aad
stos
push
and
addr16
call
inc
mov
mov
inc
xor
push
pop
pop
out
fwait
mov
xchg
sbb
mov
inc
dec
pop
xchg
pop
inc
inc
cld
js
inc
mov
es
nop
rol
mov
frstor
sbb
mov
push
add
jg
xor
loop
(bad)
dec
pop
scas
pusha
pop
in
pop
sbb
or
and
jle
repnz
lock
sub
pop
adc
add
js
scas
jnp
loop
cmps
test
mov
xor
out
imul
enter
adc
stos
or
outs
aaa
rcr
call
cmp
mov
nop
loope
sub
pop
dec
retf
xchg
push
and
out
les
pusha
out
rol
ret
std
(bad)
out
push
xchg
cmp
or
cmps
sbb
iret
push
cdq
dec
push
sahf
test
xor
cs
enter
jecxz
push
push
enter
pop
pop
pop
jle
retf
(bad)
mul
rcl
sbb
pop
jno
daa
call
int
ror
cdq
sbb
(bad)
test
xchg
cmp
retf
sub
xchg
aam
push
or
and
mov
test
test
imul
sbb
cmps
es
jno
inc
mov
mov
pop
cmp
call
scas
adc
addr16
sub
dec
jns
add
ficomp
pop
mov
clc
loop
sbb
push
out
je
js
and
(bad)
jmp
or
scas
fld
scas
dec
inc
adc
add
and
neg
sub
xor
cld
ror
inc
mov
inc
ins
gs
repnz
inc
cmp
dec
leave
mov
(bad)
nop
adc
jle
inc
cld
rol
sar
stos
int3
mov
leave
mov
jne
dec
loopne
dec
sub
pop
stc
xchg
xchg
xor
adc
lds
and
repz
xor
test
dec
sub
cmc
outs
pop
mov
jmp
je
mov
push
mov
push
pop
cmp
jae
push
sbb
shl
push
les
jl
mov
ret
call
bound
pcmpeqd
jmp
jecxz
lahf
push
les
fld
cmps
cmp
fild
out
fsub
ins
sub
fnstenv
mov
sub
imul
adc
cmp
jle
xchg
ins
dec
cmc
sbb
(bad)
call
cmp
mov
les
mov
mov
in
jecxz
cmp
ds
inc
lds
mov
lods
dec
jo
iret
loope
pusha
jb
arpl
xchg
mov
and
xchg
inc
cmp
cwde
scas
into
and
sar
shl
or
sub
pusha
rcl
scas
xchg
lods
push
push
sub
pop
inc
imul
pop
mov
or
scas
mov
xchg
jae
lahf
pop
push
in
and
sbb
icebp
rcr
fnstenv
es
aad
lods
jnp
sti
push
inc
enter
daa
pop
inc
hlt
pop
mov
mov
fstp
out
pop
mov
(bad)
jle
xchg
aas
cld
mov
add
ret
movs
retf
adc
ja
sbb
cs
mov
sub
jo
and
jbe
shr
outs
jl
mov
cs
(bad)
jmp
push
fistp
mov
sub
xchg
lds
into
ret
sbb
(bad)
ret
dec
and
cmp
icebp
jle
addr16
cdq
fcmove
rol
out
cmp
call
outs
std
jecxz
fcmovnbe
aad
xchg
mov
sub
ror
sbb
xor
cmp
push
sub
sbb
jmp
dec
ja
test
mov
hlt
sbb
xchg
stc
outs
cmps
push
and
jl
std
add
mov
cmovno
pop
xchg
add
sbb
or
fild
pop
add
mov
arpl
mov
jge
mov
sbb
les
ins
add
cdq
pop
adc
push
mov
adc
mov
mov
mov
loope
mov
jecxz
retf
dec
je
cmp
sub
fnstenv
dec
pop
inc
arpl
inc
loope
cmp
loope
loope
jecxz
lods
pop
mov
(bad)
rol
add
jns
or
mov
adc
inc
arpl
and
int3
repnz
xchg
movs
dec
sub
push
in
add
in
test
mov
mov
fsubr
sbb
xchg
lods
pop
pop
bnd
bound
scas
sbb
fmul
aaa
dec
sti
icebp
push
jmp
into
jle
bound
mov
or
das
mov
xchg
paddb
dec
mov
push
in
in
jge
mov
jne
scas
jmp
push
int3
fbld
dec
pop
cmp
sub
clc
popf
dec
(bad)
dec
push
sbb
push
aaa
outs
inc
test
pop
(bad)
out
mov
sbb
nop
fdiv
mov
int3
cwde
add
sub
daa
ins
ficomp
pop
shl
mov
adc
and
sub
add
dec
mov
jae
dec
xchg
enter
and
cld
xchg
iret
jl
stos
mov
push
add
into
int3
mov
mov
or
or
xor
mov
push
mov
mov
or
add
and
icebp
retf
pop
iret
push
pop
or
pop
scas
jns
cmp
and
call
bound
lahf
xor
es
mov
inc
sub
inc
jae
jle
mov
sub
add
lds
imul
mov
not
mov
jb
arpl
test
lea
cld
out
lods
cwde
loop
je
out
or
mov
leave
sbb
cs
int3
cld
pop
jbe
xchg
jl
push
or
dec
push
adc
cwde
adc
lods
mov
push
mov
stos
in
push
int3
fs
repz
sub
cmps
shl
aaa
and
push
add
lahf
jg
pop
stc
out
or
inc
in
xor
mov
les
dec
outs
or
or
cmp
add
push
dec
adc
or
xor
sbb
fcom
mov
mov
push
fst
pop
mov
fwait
(bad)
pcmpeqw
jbe
lods
and
rol
xchg
sub
fisttp
add
retf
in
push
stos
jle
xchg
test
jo
xchg
(bad)
fbld
imul
pop
js
imul
imul
xchg
mov
gs
xor
cli
int
cmp
mov
or
pop
xor
ins
adc
mov
fistp
xchg
pop
push
mov
pop
adc
or
pop
in
sub
dec
lahf
sbb
or
and
(bad)
fimul
ins
call
test
idiv
inc
ss
xchg
pop
mov
test
cmp
inc
fild
mov
adc
out
stos
pop
cmps
inc
(bad)
and
or
xchg
cmp
jmp
pop
daa
mov
dec
loope
lock
div
je
mov
push
inc
ins
aam
mov
dec
(bad)
out
adc
inc
mov
inc
outs
dec
in
xor
and
adc
jle
pop
mov
imul
mov
ret
(bad)
test
jae
sbb
sub
pushf
push
adc
ja
jle
push
jne
popa
xchg
dec
dec
arpl
mov
rcr
mov
test
inc
outs
xor
or
add
stc
mov
in
xchg
jns
inc
cmp
js
test
dec
add
(bad)
div
popa
iret
loopne
cmp
arpl
sbb
fcom
jns
and
mov
xchg
clc
pop
cmps
outs
cmp
hlt
mov
push
fs
imul
std
adc
jg
iret
sbb
fsubr
inc
or
int
pop
gs
fsubr
sub
xchg
and
mov
push
fdivr
ins
mov
pop
xchg
aaa
jne
xor
div
aaa
aam
dec
(bad)
retf
lahf
mov
push
rcl
in
adc
test
or
lea
mov
aaa
inc
daa
pop
arpl
dec
sti
loope
or
fild
add
pop
push
pop
push
int
aas
(bad)
ds
imul
xor
std
xlat
cmp
dec
js
sbb
or
(bad)
jno
test
ret
sbb
xor
sbb
out
in
dec
pop
push
mov
scas
int
repnz
xor
mov
sub
lods
add
(bad)
sbb
stos
(bad)
fidiv
xor
cli
(bad)
div
and
xchg
(bad)
mov
mov
enter
out
adc
shl
rol
dec
jmp
les
jle
out
mov
mov
pushf
xor
je
nop
(bad)
sbb
sahf
(bad)
mov
or
ret
stos
cdq
add
sbb
ror
repz
dec
pop
pop
mov
push
clc
dec
ret
mul
add
int
out
cmp
cmp
test
xchg
pop
jle
retf
test
lds
gs
(bad)
jge
inc
retf
jmp
lods
mov
pop
aad
sub
call
mov
xchg
call
shl
loope
enter
dec
xor
mov
mov
in
xor
adc
test
adc
into
push
in
mov
imul
lahf
push
inc
push
xchg
cld
add
cli
minps
mov
loopne
sbb
pop
test
mov
fcmovnu
jp
push
push
out
out
xor
js
outs
popa
ret
or
dec
je
mov
mov
mov
leave
mov
shl
cmp
(bad)
adc
cmps
std
jnp
(bad)
aad
ret
sub
fdivrp
mov
sub
ja
fst
icebp
jl
scas
aaa
stos
sbb
sub
cmp
adc
inc
iret
pop
aas
mov
jp
mov
dec
mov
xlat
jno
test
ins
inc
mov
in
mov
aam
jp
mov
shl
lods
idiv
mov
mov
pusha
sbb
pop
xor
retf
les
pop
xchg
inc
sbb
fiadd
pop
jmp
scas
mov
arpl
in
dec
fs
outs
adc
lds
or
pop
push
mov
jmp
dec
ret
mov
cmp
aam
fiadd
adc
push
std
or
(bad)
scas
in
(bad)
cmp
add
xor
test
arpl
inc
test
cmp
stos
or
mov
pop
cmp
stc
mov
mov
or
sbb
outs
xor
aad
repz
fisttp
addr16
or
test
cmp
jmp
ficom
enter
or
dec
daa
pushf
add
scas
call
lock
std
add
pop
pop
xchg
outs
and
inc
mov
xchg
(bad)
int3
cmps
mov
repnz
add
mov
jecxz
out
loop
sub
mov
lea
clc
cmp
iret
mov
pop
dec
cmp
and
mov
mov
scas
or
jne
rcl
mov
dec
retf
hlt
fadd
xor
movs
mov
dec
sub
jg
xlat
pop
shl
test
in
mov
test
jmp
repz
(bad)
(bad)
fadd
lods
push
inc
xchg
mov
aaa
sbb
mov
je
int
push
call
jnp
ret
out
inc
mov
mov
arpl
pushf
cmp
sub
pop
or
push
retf
mov
out
leave
test
jae
push
sbb
adc
jp
xchg
or
pop
fnstcw
jno
nop
and
mov
jo
bound
and
inc
xor
adc
pushf
icebp
ja
jmp
jno
leave
popf
cmps
mov
push
mov
fwait
in
or
xchg
fnstenv
icebp
je
(bad)
jae
sub
cs
repz
and
lds
pop
loope
enter
inc
fimul
jge
adc
add
ds
pop
fnsave
inc
xchg
aaa
mov
jns
mov
sub
jns
icebp
sbb
push
and
(bad)
jae
jg
mov
into
jae
xor
(bad)
ins
xor
dec
cmp
in
popa
imul
out
xchg
pop
dec
ds
retf
push
in
inc
gs
xchg
aad
inc
scas
repnz
ss
nop
sbb
stos
add
adc
push
mov
adc
sub
xchg
xor
cmp
addr16
cmp
adc
pushf
jle
pusha
data16
sub
jp
add
pop
test
mov
add
cmp
jnp
retf
adc
cld
jmp
bound
pop
sti
cmp
push
xchg
ret
loop
movs
rol
push
xlat
dec
aad
or
ss
(bad)
ret
out
cdq
iret
test
dec
push
xchg
add
pop
mov
sti
jbe
shl
mov
std
bound
ret
jmp
adc
mov
sbb
popa
xor
mov
ja
stos
adc
cwde
pop
inc
jg
cmc
stos
in
mov
stos
xchg
inc
pop
rcl
(bad)
push
(bad)
and
jnp
in
jle
imul
pandn
mov
out
lea
das
mov
ins
das
mov
sbb
loop
mov
ret
int
xchg
fucomip
dec
push
dec
mov
push
xor
dec
call
adc
aad
push
mov
cmp
pop
sbb
(bad)
aam
in
jns
or
cwde
mov
ja
push
cmps
or
or
sub
and
fsub
pop
xor
xchg
ss
movs
(bad)
(bad)
mul
inc
xchg
fisub
aaa
pop
stos
add
adc
imul
(bad)
in
les
aas
aas
js
mov
inc
inc
dec
aam
push
in
inc
into
fsubrp
pop
jmp
adc
jp
imul
cwde
js
mov
pop
retf
gs
mov
mov
push
in
mov
xchg
and
ror
fst
sbb
pop
movs
enter
pop
cmps
ja
in
push
inc
outs
mov
arpl
push
popa
rcl
test
sbb
xchg
jecxz
(bad)
sub
in
out
(bad)
ss
mov
xor
cwde
inc
rcl
push
ffreep
jb
call
pop
test
add
mov
mov
scas
push
bound
jg
movs
test
test
ins
loop
dec
clc
dec
in
push
add
cmp
out
(bad)
pop
sbb
cmp
not
daa
mov
pushf
mov
mov
cld
xor
add
push
jp
into
lods
addr16
sti
xor
dec
push
mov
or
ss
xchg
fsubr
div
idiv
pop
cmp
pop
iret
mov
ins
out
xor
arpl
dec
dec
aad
inc
jns
mov
ds
pop
stc
mov
mov
jle
sbb
pusha
or
icebp
xchg
(bad)
jmp
jno
inc
ret
xor
jmp
cli
inc
ficomp
cmp
inc
fldenv
cli
sbb
add
push
outs
cli
jne
lock
das
or
mov
sar
aam
daa
mov
xchg
jmp
sub
stos
cld
std
push
ja
jo
cmp
mov
daa
and
ins
push
shl
stos
mul
jne
dec
dec
push
rcr
jns
cmp
push
mov
and
sti
shr
std
sbb
sti
pop
jl
sub
cmps
test
mov
cmp
mov
imul
pop
add
mov
mov
jle
data16
je
or
jle
cli
test
lods
adc
js
das
dec
fild
stc
fwait
xchg
mov
xor
pop
adc
or
sbb
repz
add
retf
jns
or
jp
call
loop
aaa
into
xchg
aas
jno
push
mov
pop
push
jno
sahf
ins
loope
pop
cdq
nop
jmp
test
cli
or
push
enter
xor
lahf
loop
cmp
adc
add
icebp
sbb
mov
dec
add
cmps
mov
rcr
call
cwde
cmp
and
loope
push
jge
adc
mov
xchg
xchg
iret
jmp
fsub
sbb
cmp
fimul
out
mov
pop
rol
retf
xor
into
std
out
pop
inc
dec
cwde
and
test
sbb
int
xor
mov
cs
xchg
xchg
fwait
jns
xor
loop
adc
push
push
dec
(bad)
dec
jo
fld1
mov
xchg
mov
mov
ins
(bad)
mov
inc
pop
mov
mov
add
pop
add
jp
or
mov
movs
je
xor
add
stos
not
lahf
jb
mov
push
adc
ja
jno
stos
neg
xor
cld
or
sub
mov
mov
pop
fbld
lds
cmp
fnstsw
pop
xor
mov
add
push
jecxz
les
mov
std
mov
mov
ins
fimul
xchg
cmps
ins
shl
and
shl
enter
test
aad
movs
push
fs
or
aaa
jmp
adc
xchg
xor
adc
mov
aam
mov
push
adc
jbe
sub
imul
scas
push
push
(bad)
std
and
xchg
ret
inc
retf
adc
lock
pop
jo
(bad)
daa
rcl
fwait
push
clc
pop
xor
mov
sbb
hlt
sub
mov
sahf
cli
cld
mov
in
push
in
pop
ror
mov
ss
pop
loopne
mov
jecxz
inc
xchg
rcr
scas
mov
ret
popa
xor
cmp
hlt
jbe
(bad)
push
aas
loop
push
je
mov
adc
cmp
jbe
ja
add
jp
pop
dec
std
movs
mov
add
aas
jns
(bad)
into
xor
push
push
jbe
popa
and
add
icebp
mov
lock
add
das
cli
pop
add
(bad)
daa
inc
daa
xor
dec
mov
gs
repnz
add
xor
(bad)
fsubr
or
into
mov
call
sbb
push
xor
leave
pop
pop
inc
jb
es
aam
cld
es
cwde
xor
adc
mov
xchg
sub
daa
jne
frstor
lock
stos
xor
sar
ret
and
(bad)
xchg
push
mov
cmp
push
cli
and
mov
imul
mov
ins
inc
sbb
mov
mov
mov
dec
loopne
int3
ins
ds
(bad)
cmp
gs
adc
mov
enter
and
in
cs
sub
lds
mov
xchg
jmp
or
push
xor
out
xor
fcmovb
lds
fisubr
stc
mov
fcom
mov
xchg
dec
aam
dec
jne
adc
std
inc
and
(bad)
sub
clc
mov
xchg
gs
pop
push
mov
jmp
popa
ja
cmps
sub
lahf
ds
ins
and
add
sar
mov
nop
fiadd
(bad)
fsubr
shl
daa
(bad)
jmp
adc
aas
xor
inc
jbe
out
das
rol
lds
sbb
pop
sar
or
mov
jge
loop
aad
test
sub
jne
push
cmp
test
inc
daa
test
out
or
and
int
sbb
int3
out
ffreep
pop
push
test
sub
jecxz
sti
fild
aas
inc
xchg
or
addr16
or
arpl
sbb
or
es
dec
cmp
adc
mov
sub
pop
call
fidivr
gs
imul
pop
pop
bound
dec
mov
cmp
sbb
mov
rcr
pop
lds
retf
dec
daa
dec
jne
lock
adc
push
inc
das
mov
inc
cmp
xchg
push
cmp
and
pop
cmps
repz
adc
adc
xor
fnsave
into
or
inc
mov
sub
call
out
iret
fimul
imul
and
pusha
dec
fimul
mov
scas
adc
mov
inc
pusha
sub
test
adc
popf
je
fmul
push
push
outs
jae
inc
adc
and
lds
outs
pusha
hlt
sar
clc
cmp
pop
mov
mov
pushf
pop
xchg
out
(bad)
imul
xor
outs
xchg
add
out
jge
and
and
or
and
stos
mov
cmp
adc
sub
xchg
jmp
rol
call
sbb
aas
outs
dec
push
push
adc
popf
iret
jmp
ja
out
aam
mov
imul
fst
adc
cwde
mov
cs
sub
ret
(bad)
inc
dec
add
lods
ret
test
mov
das
xchg
cmp
mov
mov
out
je
stos
xor
ret
xchg
cmps
scas
test
gs
(bad)
cmps
fwait
xchg
xchg
jnp
aam
sbb
fwait
add
or
cmp
imul
adc
mov
scas
cmc
cmp
in
(bad)
loop
jne
sahf
out
pop
(bad)
adc
ficomp
das
addr16
hlt
(bad)
add
pop
mov
mov
inc
mov
lea
in
xlat
or
jmp
mov
or
jno
mov
bound
in
mov
inc
jne
nop
sbb
sar
and
fimul
fwait
or
rcr
stos
cwde
mov
sti
jmp
pop
les
sub
jmp
mov
mov
cmp
ins
cmc
and
push
imul
mov
push
das
and
pop
ret
lahf
ror
and
fcom
aam
xor
(bad)
das
pusha
ins
pusha
jp
lea
push
push
stos
stos
out
xchg
jo
sub
cli
sar
push
pop
(bad)
mov
mov
add
cmc
sbb
mov
mov
or
fs
sub
shl
iret
call
xchg
or
dec
test
xor
jns
cmp
enter
or
sbb
sub
jnp
fs
inc
xor
push
lds
daa
gs
push
lock
sbb
pop
dec
fisttp
stos
stos
sub
jmp
sub
movs
enter
out
das
xchg
fld
std
pop
jnp
dec
sub
xchg
mov
fsub
stos
jg
xchg
fldcw
cmp
mov
ins
and
mov
xor
add
sub
pusha
iret
test
(bad)
or
adc
xor
adc
nop
or
adc
and
outs
xchg
dec
sbb
jl
xor
aam
push
mov
and
cmp
(bad)
push
idiv
(bad)
aas
inc
aas
imul
pop
aam
and
mov
mov
outs
jle
push
dec
inc
mov
repz
xlat
jmp
punpckldq
icebp
mov
mov
or
aad
mov
adc
pop
ins
scas
in
rcr
fisub
push
cmps
xadd
cli
cmps
mov
xor
shl
(bad)
aad
arpl
shld
and
cdq
sbb
leave
lds
sbb
iret
scas
shl
cli
pop
into
jmp
lahf
adc
dec
mov
jne
sti
repnz
call
mov
xchg
mov
clc
mov
xchg
test
dec
cmc
movs
stc
xor
aas
and
ins
inc
jns
add
mov
adc
hlt
aam
mov
add
fldenv
adc
int
rcl
and
(bad)
jmp
stos
jbe
push
enter
inc
sbb
sbb
adc
fwait
(bad)
cmp
scas
fistp
push
ret
mov
push
dec
rol
rcr
cmp
mov
pop
lock
pop
out
bnd
js
test
sti
jl
ss
cmps
test
jno
(bad)
mov
in
dec
push
mov
or
cmp
aas
pushf
or
inc
test
jle
cmp
mov
or
jmp
mov
data16
adc
push
mov
mov
clc
ds
mov
in
mul
sub
call
sub
mov
out
cli
inc
and
es
sbb
nop
mov
inc
adc
cdq
sub
mov
and
sub
retf
loop
test
stos
jmp
or
sbb
pop
fs
loope
call
test
mov
in
mov
jae
push
leave
jecxz
outs
(bad)
cmp
xor
inc
mov
adc
fs
sbb
dec
pusha
push
lahf
cdq
gs
dec
jno
cmps
xor
fmul
lea
push
bound
and
mov
setns
adc
imul
jne
(bad)
test
mov
sbb
sbb
and
repz
mov
push
and
jo
jbe
les
mov
add
rol
and
test
pop
aam
call
pop
cld
clc
mov
jecxz
dec
jns
xchg
push
cmp
frstpm(287
lahf
sbb
sbb
inc
xchg
fwait
stos
retf
aam
adc
or
mov
loop
pop
jl
adc
cmps
ja
popf
das
inc
adc
int3
pop
push
div
je
adc
adc
sbb
movs
sbb
sbb
dec
fist
pop
sub
(bad)
stc
mov
retf
sub
mov
push
fs
repnz
and
div
or
neg
push
cli
add
test
push
push
xor
xor
cmp
popf
pop
pop
mov
inc
cmp
pop
outs
jg
mov
xor
lock
or
mov
xor
push
pop
int
dec
cmp
mov
mov
test
aas
cmp
inc
or
xchg
arpl
imul
cmp
fisub
sti
cmps
sub
sbb
fsub
cmp
sahf
fdivr
test
sbb
cmp
cmc
ret
jns
fmul
mov
adc
xchg
jecxz
imul
data16
fild
fcom
dec
push
sub
push
xlat
pop
pop
xchg
ficomp
retf
inc
or
js
or
dec
push
lods
push
fcmovu
stos
xchg
mov
fist
dec
addr16
stc
inc
les
dec
(bad)
in
pop
push
cmp
and
sub
dec
repnz
and
jns
in
sub
inc
jae
ins
in
pop
lods
dec
jmp
repz
add
xor
out
xchg
fstp
cmp
add
fsub
stos
iret
fsubr
mov
adc
or
inc
jg
clc
dec
cmp
mov
cmp
shr
xchg
sbb
xor
or
mov
xchg
pop
mov
mov
fld
xchg
call
fisttp
sub
sbb
fadd
adc
adc
sbb
es
rsm
into
xor
lds
fistp
xchg
pusha
dec
push
pop
mov
fistp
cmp
or
loopne
ja
xor
push
sub
lea
test
sahf
ja
add
icebp
and
ret
nop
mov
bound
mov
enter
and
push
inc
mov
mov
xor
outs
cmp
xchg
mov
mov
pop
pusha
push
adc
add
cs
sub
rol
in
or
and
adc
xchg
lods
popa
adc
arpl
dec
cmp
movs
push
jge
ficomp
add
les
mov
jno
out
pop
cmc
sub
or
mov
jmp
mov
xor
js
xor
push
jecxz
or
push
fldenv
stos
fbstp
xor
fidivr
push
in
aad
push
ret
cs
imul
iret
or
cmc
mov
mov
inc
add
ror
ret
(bad)
andnps
gs
(bad)
fld
sbb
cld
adc
rol
je
xchg
(bad)
pop
and
push
scas
nop
nop
cmps
out
cmp
xor
mov
mov
aaa
test
pushf
je
and
push
sbb
xchg
pop
or
out
jae
in
mov
cmps
shl
inc
xor
loop
and
cmc
cmp
es
jb
scas
test
jns
sbb
enter
xchg
ds
add
push
nop
push
cmp
push
xchg
aaa
mov
xchg
movs
loop
mov
(bad)
retf
neg
dec
or
jae
sub
push
js
xchg
js
outs
and
dec
imul
sbb
mov
not
retf
xor
iret
ror
stos
push
add
lea
loope
and
mov
adc
popa
clc
cmp
sub
aam
pop
cmp
cs
push
(bad)
sbb
jle
xor
or
push
add
cmp
ret
xchg
adc
lods
jns
aaa
pop
addr16
xchg
and
jmp
pop
das
jl
jo
mov
jo
ror
dec
push
inc
retf
dec
je
lods
mov
mov
outs
das
cmps
das
or
jmp
add
push
int
movs
xlat
push
add
call
jl
sar
repz
and
sub
outs
aaa
xchg
jno
and
push
cmps
ja
into
out
in
push
cdq
clc
dec
and
dec
jne
pop
sub
cli
(bad)
xchg
inc
fs
lods
test
sahf
int
add
jno
push
add
stos
les
mov
test
push
call
mov
aam
dec
in
inc
mov
sub
test
pushf
imul
stc
and
mov
sbb
xchg
mov
in
jae
popa
addr16
cmps
fmul
aam
cdq
jg
lahf
ret
mov
sub
adc
sbb
xchg
xchg
div
mov
mov
pop
faddp
stos
or
popf
imul
lea
push
add
adc
xchg
xchg
xchg
push
pop
or
push
stos
sti
inc
dec
lea
test
js
aad
mov
jge
xor
push
dec
aad
cwde
jne
pop
dec
pop
and
add
pop
pop
scas
dec
xchg
stos
push
ss
jge
in
cs
push
sbb
std
and
out
jle
into
inc
mov
rcl
mul
lahf
cdq
retf
ret
push
and
lods
das
or
sub
aam
fwait
pop
mov
les
inc
hlt
xadd
hlt
pop
and
inc
in
xor
push
inc
(bad)
sbb
inc
lea
ss
mov
xor
xchg
sub
mov
hlt
retf
xor
sub
arpl
jne
mov
or
inc
adc
aaa
mov
or
xor
cld
mov
ret
out
int
inc
es
ss
ins
pop
icebp
mov
dec
jge
sahf
in
xchg
cmc
jo
pop
jae
cdq
and
ret
outs
lods
jl
in
pushf
inc
dec
test
leave
ds
jge
bound
mul
test
loope
ss
retf
sub
dec
add
add
sub
pop
or
mov
pop
pushf
addr16
shld
arpl
aaa
mov
mov
out
sahf
out
pop
mov
push
fld
in
aaa
adc
gs
xchg
pop
and
pop
daa
fistp
cmc
jb
pop
cwde
cdq
shl
daa
xchg
fiadd
jge
out
iret
inc
lahf
dec
jnp
mov
jb
xchg
cs
(bad)
mov
inc
push
sti
mov
jle
ins
push
jne
fcmovnu
jo
loope
dec
pop
fwait
cmc
push
adc
clc
pop
adc
repnz
adc
(bad)
out
push
cmp
aas
and
in
leave
adc
test
fdivr
shr
push
gs
or
inc
icebp
jns
ror
into
test
add
pop
sbb
popf
int
inc
or
mul
mov
shl
xor
test
shr
jne
lock
and
adc
sub
pusha
fwait
jmp
(bad)
lock
jecxz
fsubr
stc
and
movs
sbb
add
xchg
mov
jl
pop
add
adc
dec
mov
push
push
(bad)
clc
retf
pop
fs
pop
mov
xchg
dec
(bad)
cmp
loop
mov
jo
fisttp
pop
sub
mov
xlat
call
or
mov
inc
mov
xor
push
push
push
push
(bad)
call
(bad)
das
cs
repz
pop
pop
sub
mov
push
(bad)
ins
lahf
sbb
xor
mov
sub
leave
mov
xchg
cwde
mov
inc
ins
inc
int3
inc
pop
or
jns
test
and
aas
sub
inc
inc
ror
xor
sbb
test
repz
jmp
pop
sub
fs
push
adc
cmps
xchg
and
cld
dec
(bad)
add
xchg
lods
cli
xor
cld
ins
adc
push
cmp
stc
xchg
xlat
jb
xor
fcomp
and
test
xlat
sbb
loope
mov
scas
xchg
sbb
jecxz
sub
ror
sub
sub
pop
dec
fisub
fild
sar
and
pop
das
push
lods
or
pop
call
movs
or
sub
repnz
push
mov
sar
mov
mov
fmul
mov
pop
jg
pop
jo
test
(bad)
aad
pusha
pop
gs
dec
(bad)
cld
sahf
pop
fild
sub
pop
call
xor
and
mov
add
cwde
rol
mov
ins
inc
test
jns
mov
add
retf
dec
jmp
pop
repnz
push
nop
loope
fld
xchg
(bad)
push
mov
test
imul
adc
sbb
scas
movs
in
sbb
fs
pop
mov
test
mov
data16
push
jne
mov
inc
ds
sbb
stos
dec
pop
sub
inc
loope
jg
push
rcr
fcom
ficom
(bad)
retf
xor
shl
inc
std
ffreep
pop
mov
add
fst
mov
or
jle
push
and
and
sbb
xor
cmp
mov
and
push
sub
mov
cmp
cs
hlt
test
mov
inc
fsubr
test
push
(bad)
fsubrp
mov
dec
dec
sub
loop
pop
(bad)
je
jl
mov
push
(bad)
lods
retf
dec
fnstenv
inc
jnp
pop
sahf
cmp
mov
jl
dec
push
cmp
jmp
sti
rol
dec
mov
sbb
and
sbb
xlat
loopne
or
sub
pop
popf
dec
lds
test
std
jg
cwde
loopne
xchg
nop
popa
inc
mov
leave
mov
jmp
aas
(bad)
mov
inc
sbb
data16
sti
pop
or
(bad)
sbb
xor
xchg
cmp
jbe
sbb
ss
mov
cs
(bad)
adc
sub
inc
retf
fistp
adc
retf
and
test
mov
nop
sar
imul
(bad)
aam
in
fst
dec
or
test
and
jmp
test
lahf
mov
push
mov
jmp
dec
aaa
dec
mov
retf
sbb
ret
fxch
mov
pop
es
adc
inc
jg
dec
mov
xchg
sub
jb
cld
inc
xor
mov
sbb
push
push
inc
jns
mov
ss
mov
cmp
scas
out
mov
sub
in
fisubr
dec
neg
sar
jno
int3
lods
inc
add
clc
lods
and
shl
push
test
pop
jmp
call
jge
xchg
mov
jmp
dec
jnp
dec
scas
in
push
jle
pop
lock
mov
stc
mov
and
test
outs
or
cmp
jb
sbb
sub
clc
mov
adc
push
xchg
fadd
mov
adc
fimul
dec
fidivr
mov
add
cmps
inc
shr
mov
stc
loop
pop
pop
jae
mov
cmps
push
mov
bound
and
inc
cmp
push
stos
scas
mov
hlt
sbb
mov
loope
loope
test
mov
iret
mov
pop
xor
les
dec
movs
mov
cld
leave
sbb
std
(bad)
sub
jmp
mov
mov
mov
fist
and
jnp
xor
xor
or
cmpps
les
dec
ja
sbb
mov
mov
mov
jge
enter
pop
idiv
out
pop
sbb
pop
sub
mov
xor
cmp
lock
or
call
sub
ret
inc
int
jns
sub
sbb
jb
xchg
jbe
inc
and
xchg
idiv
and
cmp
int
nop
das
add
aad
stos
push
fnsave
mov
retf
shr
ja
pop
addr16
rol
or
popa
xor
xchg
sbb
mov
retf
pushf
sahf
pop
arpl
adc
pcmpeqd
jae
add
cmps
jns
(bad)
xlat
dec
shl
or
sub
or
bound
sub
mov
pushf
mov
call
push
nop
or
dec
xchg
push
gs
outs
or
xor
or
neg
cmp
sub
je
cmps
xchg
add
cmp
in
lock
aad
mov
daa
movs
mov
aaa
not
cmp
call
fnsave
push
ror
jl
retf
aaa
mov
mul
push
loope
test
js
and
lods
sub
mov
cmp
sti
ds
mov
jae
aas
clc
xor
shl
aam
aaa
mov
cmp
and
cmp
push
fdiv
fimul
jne
jmp
sbb
daa
mov
ret
jmp
test
pop
xchg
rcl
dec
shr
push
mov
loope
push
es
mov
mov
je
xlat
push
mov
jp
popa
not
dec
dec
push
jnp
sbb
dec
or
mov
pop
shr
xor
pop
je
pop
idiv
data16
imul
into
outs
add
pop
lds
pop
sub
inc
aas
dec
das
jecxz
mov
xor
mov
stc
jns
cmps
push
in
cmp
dec
call
nop
dec
lock
push
inc
ja
sbb
adc
xchg
(bad)
cmp
push
cmc
jge
or
in
sar
fs
into
inc
les
push
test
cmc
nop
stos
lds
sti
out
jnp
sub
add
popf
es
and
mov
dec
sub
js
adc
ret
call
jo
ins
mov
adc
mov
mov
sub
clc
repz
mov
in
push
cmp
aaa
cmps
xchg
clc
ins
mov
fucomp
(bad)
sbb
jmp
sti
call
and
push
pop
sbb
add
ret
dec
cwde
dec
sti
ins
jae
fimul
jmp
imul
in
outs
retf
and
or
jmp
ret
sub
shr
(bad)
(bad)
jg
xor
jne
cdq
add
mov
xor
cmps
mov
idiv
(bad)
lds
mov
dec
rol
pop
jne
push
cmps
repz
rcl
pusha
dec
test
jb
push
ins
(bad)
mov
mov
add
mov
pop
test
mov
aad
or
inc
jbe
mov
pop
inc
ror
mov
push
sbb
jle
mov
push
les
mov
fild
test
nop
fisttp
addr16
push
push
imul
xor
push
je
xchg
xor
pop
inc
adc
push
fwait
push
inc
fwait
rcr
test
jno
imul
xchg
ret
test
mov
fidivr
ins
cdq
cmc
jmp
das
adc
sahf
inc
mov
cmp
add
jle
sahf
jnp
pop
inc
jg
xchg
scas
or
ins
test
adc
(bad)
cmps
in
push
clc
push
sbb
dec
shr
aad
xor
not
add
loope
sbb
push
mov
out
mov
dec
lods
movs
mov
xlat
jo
and
inc
mov
or
fnsave
sub
xchg
cwde
dec
dec
push
and
mov
push
xor
cmps
adc
xchg
xchg
jno
movs
push
pop
jmp
in
push
out
sub
xchg
mov
lock
ja
fdiv
mov
aaa
fisttp
pop
loope
mov
push
mov
mov
repz
push
aas
mov
mov
push
mov
daa
jno
jb
or
inc
sahf
mov
dec
sub
sub
in
lods
and
mov
repnz
js
pop
sub
iret
popf
std
jnp
pusha
shl
jo
leave
mov
scas
mov
xor
and
add
and
scas
cmps
addr16
dec
or
popa
addr16
(bad)
movups
int
arpl
sbb
mov
fistp
movs
test
xchg
xchg
test
lds
xchg
not
jo
mov
xor
push
inc
sub
shl
dec
jbe
fucom
pushf
mov
je
and
out
pop
inc
inc
outs
scas
and
aaa
loop
push
push
or
test
dec
dec
push
jbe
scas
int
sbb
ret
stos
retf
xor
xor
loop
in
sub
push
mov
loope
add
pusha
mov
popa
scas
xchg
fist
adc
pop
pop
lock
cmp
and
imul
fisttp
lods
pop
xor
sub
cmp
push
push
jae
data16
movd
push
jl
arpl
inc
jnp
and
bound
(bad)
call
add
adc
push
outs
cmp
and
jecxz
cmp
ss
(bad)
dec
xchg
xor
adc
(bad)
mov
or
fnstenv
sbb
retf
fwait
and
ja
ret
jmp
(bad)
jl
movs
xchg
mov
add
ins
cli
cmps
mov
xor
push
mov
(bad)
scas
mov
xchg
lea
enter
fldcw
out
les
lahf
dec
cli
pop
test
cdq
das
xlat
add
cs
scas
sub
and
mov
and
jo
fnsave
xor
sbb
retf
sbb
or
lods
push
int3
mov
fst
xor
xchg
add
cmp
imul
addr16
(bad)
stc
dec
int
or
jmp
sub
in
push
ror
retf
xchg
in
clc
add
jmp
jae
repnz
mov
dec
cmp
sbb
nop
xlat
or
dec
arpl
aam
stc
in
mul
and
mov
mov
or
mov
adc
pop
jl
popf
xor
lahf
pushf
mov
ret
cdq
fmul
xchg
(bad)
arpl
cmp
inc
sti
ins
shl
or
cmp
dec
icebp
pushf
push
jl
mov
lods
ficomp
pusha
repz
aad
aam
jmp
adc
dec
push
inc
hlt
test
push
test
shl
js
in
mov
mov
icebp
xchg
cmp
xor
mov
shl
push
cli
mov
rcl
push
fnstenv
add
ror
out
jp
out
mov
fstp
mov
lea
sub
loope
xor
cli
movs
sub
dec
and
shr
and
mov
aaa
cwde
shl
push
fwait
sbb
xor
and
retf
jl
add
inc
mov
clc
adc
pop
pushf
mov
loop
daa
test
mov
and
dec
mov
push
in
arpl
dec
push
inc
mov
mov
aas
xor
jbe
xchg
push
ret
push
cmp
cmp
cmp
enter
xchg
push
jg
xchg
adc
jl
ins
dec
sub
sub
dec
(bad)
xor
jge
int3
dec
or
jmp
sbb
cmc
outs
jns
jae
fsub
jmp
retf
das
inc
dec
xchg
xor
add
prefetchw
stos
jb
fwait
adc
add
inc
popf
push
or
mov
push
mov
or
inc
imul
sub
jle
push
clc
fiadd
push
mov
inc
pop
imul
das
xchg
and
adc
lea
inc
repnz
jb
sub
fistp
ret
fist
xor
rol
shl
das
cmp
outs
loop
out
xchg
mov
leave
sbb
ins
dec
inc
adc
dec
scas
or
pop
push
cdq
inc
(bad)
mov
out
lock
jae
scas
jg
pop
lods
in
pop
data16
imul
rcr
in
jle
imul
cmp
add
push
sub
pushf
xchg
jecxz
sub
pop
mov
fstp
ins
call
and
repz
in
cmp
and
retf
jmp
sbb
daa
iret
pop
stos
cmp
loop
push
outs
retf
xchg
xchg
hlt
xor
mov
fwait
cmp
fadd
xor
pop
or
dec
out
sub
mov
test
pop
mov
mov
bound
and
jae
xor
jae
pmaxsw
push
xor
scas
rcr
pop
push
into
retf
aaa
loop
fnsave
cmp
(bad)
ss
sbb
push
sbb
enter
mov
pop
aad
pop
rol
aaa
cmp
pop
ja
stos
mov
mul
stc
les
popf
jp
movs
or
push
xor
inc
pop
sar
sub
call
pop
aam
push
push
nop
sahf
ss
sub
aad
xor
scas
adc
stos
xlat
je
push
lock
mov
adc
dec
aad
xchg
pop
mov
aas
sbb
xor
jle
xchg
test
into
in
dec
dec
cld
loop
rcl
mov
sti
aas
xor
fdiv
scas
gs
les
test
mov
sub
sub
cmp
cmp
sbb
test
jle
mov
xlat
outs
call
adc
(bad)
mov
pop
fwait
mov
aam
scas
jg
jo
xor
nop/reserved
out
cmps
jb
pop
sub
in
lahf
jo
outs
pop
push
inc
jbe
outs
ror
icebp
cmp
mov
xor
js
stc
sahf
fdivrp
fist
sahf
loop
aad
cli
cmp
outs
mov
stos
lea
sub
jge
retf
mov
mov
xchg
stc
or
mov
jo
pop
movs
push
sub
test
sti
mov
mov
or
gs
or
ins
pop
in
idiv
cli
bound
sub
pop
loop
rol
retf
out
lds
pop
or
test
mov
xor
sahf
inc
shr
mov
mov
sub
mov
jo
push
pop
arpl
push
push
shl
push
movs
jecxz
sbb
push
inc
dec
sti
push
cmps
xor
sbb
inc
sbb
repnz
mov
xlat
sub
adc
out
mov
aam
stos
inc
xor
jae
or
into
data16
mov
inc
mov
dec
mov
ja
sahf
xor
test
lods
fwait
jl
popa
push
pusha
(bad)
clc
outs
jo
stos
sbb
lock
out
cs
ins
rol
imul
loope
add
hlt
movs
cli
cmp
out
inc
lods
and
inc
cmc
jge
pop
or
add
aad
(bad)
fcomip
inc
cli
xor
dec
xchg
adc
sbb
sbb
test
sbb
test
cmp
push
outs
add
lods
xor
sub
push
sbb
in
aaa
sub
mov
std
or
in
cmp
inc
mov
sub
mov
(bad)
in
in
movs
mov
mov
adc
call
xacquire
or
out
enter
jne
jnp
scas
ret
or
jmp
les
fld
addr16
sub
or
aam
pop
or
sbb
fild
shr
xor
je
(bad)
jmp
(bad)
jmp
mov
push
cmp
jle
jecxz
fild
sbb
popf
outs
ins
mov
inc
not
pop
jle
jecxz
das
popf
inc
cwde
fcomp
loopne
xor
add
cdq
mov
je
inc
adc
call
retf
xchg
push
or
loop
xor
call
imul
mov
pop
and
xchg
stos
aam
repnz
popf
sub
sbb
xchg
mov
push
int
mov
stos
call
(bad)
fimul
pop
cs
mov
inc
push
sahf
inc
add
mov
sti
lock
mov
(bad)
fcom
cmps
movs
push
lds
inc
sub
into
cld
pop
sti
pop
mov
fadd
mov
inc
scas
cdq
dec
mov
lahf
xor
movs
test
std
fdiv
adc
imul
pop
sub
or
mov
js
mov
aad
jno
clc
in
inc
(bad)
mov
daa
xlat
push
mul
loope
xchg
sub
je
(bad)
xchg
scas
fisttp
adc
xchg
lahf
shl
mov
jbe
neg
dec
dec
push
push
cmp
jge
pop
or
outs
ss
popf
je
sbb
jb
xor
sbb
fadd
cmp
inc
inc
mov
pop
imul
test
push
mov
dec
xor
popa
dec
push
mov
aam
xchg
enter
wbinvd
or
sbb
(bad)
cmp
pop
enter
(bad)
call
xchg
aas
push
push
test
xor
inc
mov
mov
jae
pop
push
push
mov
shl
mov
add
push
dec
and
stos
inc
jge
clc
add
stos
xchg
pop
pop
mov
inc
jae
push
inc
data16
out
sahf
out
cmp
daa
jg
test
xor
sub
push
div
fst
mov
pop
mov
retf
outs
dec
(bad)
cs
(bad)
mov
int3
mov
iret
xor
and
shl
jne
bound
shr
push
bound
jmp
mov
js
or
movs
ret
out
mov
ret
mov
sbb
xchg
adc
push
(bad)
mov
out
scas
es
dec
retf
movs
adc
stos
shr
sub
dec
lahf
and
and
in
pop
out
and
xor
push
mov
adc
sub
fwait
lea
inc
daa
ins
lock
in
sahf
popa
xchg
inc
or
sahf
mov
sti
inc
enter
push
cmc
sbb
fs
add
xchg
in
mov
fwait
call
pushf
mov
pop
(bad)
in
add
imul
clc
fs
dec
xor
mov
cmps
retf
movs
cmp
sbb
or
and
and
mov
cdq
mov
add
push
imul
xor
or
loope
push
jg
in
inc
out
mov
mov
pop
sub
push
xchg
cmps
mov
dec
jl
or
xchg
inc
test
xchg
cwde
mov
popf
xor
and
sbb
xchg
repnz
xor
popf
nop
icebp
ret
add
jne
cli
jne
or
push
pop
cld
jne
inc
int3
ins
jno
sbb
jl
cmc
add
fistp
inc
push
inc
sub
and
addr16
sub
xchg
gs
pop
mov
scas
imul
and
or
mov
mov
leave
pop
out
out
adc
dec
add
mov
mov
jecxz
stos
add
push
(bad)
iret
(bad)
and
pop
test
fsub
push
test
cmps
jecxz
aas
dec
out
ins
push
loop
add
outs
(bad)
lods
mov
pop
test
lock
adc
(bad)
hlt
jae
sbb
xor
mov
(bad)
sub
or
pop
adc
std
pop
jmp
pop
push
mov
mov
fisttp
ja
nop
jmp
mov
jp
repz
mov
iret
cwde
sti
fucom
into
(bad)
lods
inc
or
xchg
jbe
cmp
mov
xor
sbb
clc
xlat
adc
enter
adc
popf
cmp
jle
scas
pushf
cmp
mov
pop
mov
sub
cli
sub
cmp
pusha
xor
dec
pop
not
clc
push
mov
and
lods
and
loop
adc
jg
mov
js
xchg
test
icebp
dec
lahf
jg
inc
sbb
ss
out
stc
or
add
scas
test
pop
out
dec
aad
stc
fist
popa
inc
dec
push
ror
dec
xchg
inc
icebp
xchg
jl
shl
int3
xchg
cmp
dec
data16
xor
sub
dec
sbb
inc
scas
xchg
mov
adc
and
clc
jmp
mov
adc
mov
iret
ficomp
pusha
clc
jbe
and
dec
xor
dec
sub
sahf
jmp
cmps
ins
add
cmp
(bad)
xchg
in
xor
adc
test
(bad)
repz
in
push
bound
mov
lods
lods
fdiv
push
push
mov
retf
shl
shl
mov
pop
and
daa
fwait
in
mov
xchg
dec
pop
or
inc
lock
xor
test
dec
call
scas
inc
pop
loopne
stos
outs
push
pop
inc
cmp
mov
scas
xchg
mov
(bad)
adc
mov
inc
sbb
xchg
and
dec
pop
adc
pop
mov
jae
and
cmp
ret
push
pop
mov
shl
out
cmp
push
mov
(bad)
int
pop
or
mov
xchg
mov
xchg
or
pusha
add
arpl
dec
ret
cdq
jno
cwde
dec
ret
mov
inc
retf
xor
mov
in
scas
imul
push
dec
inc
out
mov
jnp
das
jne
mov
lock
cwde
call
xchg
pop
adc
mov
add
leave
xchg
ins
jmp
lock
fisttp
sub
pop
or
xor
stos
jae
aaa
sub
xchg
xchg
and
or
arpl
push
jle
and
add
dec
stos
ss
sub
inc
pop
xchg
and
mov
sub
sbb
xor
stos
nop
mov
les
sub
jmp
jns
sub
push
push
inc
push
inc
xchg
cli
push
dec
xchg
enter
shr
call
jmp
xchg
or
rol
retf
imul
dec
sub
add
inc
nop
jmp
dec
leave
xchg
out
cmp
cmp
daa
lahf
mov
outs
and
add
cmp
lea
mov
ror
mov
in
jno
cmp
hlt
jo
mov
mov
cmp
mov
pop
or
scas
or
std
popf
jb
mov
dec
dec
pop
fsub
ins
ins
clc
sbb
lock
(bad)
fsub
xchg
icebp
xlat
pusha
fild
(bad)
sbb
repz
mov
fstp
mov
test
xchg
mov
push
sub
in
cmps
adc
fisttp
mov
scas
sub
sub
mov
or
enter
pop
sbb
or
cdq
xchg
push
push
int
int
push
dec
aad
ins
fwait
out
int
dec
retf
leave
or
xor
ins
ins
leave
push
sbb
test
sahf
push
add
xlat
retf
mov
add
sbb
shr
jbe
test
dec
clc
fist
(bad)
leave
loope
push
mov
or
mov
ret
mov
and
pop
push
push
adc
loop
in
not
lods
(bad)
sti
mov
fwait
les
xor
sub
pop
scas
inc
push
daa
movs
(bad)
jbe
js
fisttp
and
cli
cmps
imul
cmp
dec
dec
test
add
cmps
or
scas
(bad)
nop
pushf
pop
mov
pop
push
dec
xchg
inc
es
pop
shl
repnz
sti
mov
push
and
and
movs
arpl
pop
or
fcmove
dec
loope
mov
push
movs
loopne
sbb
sar
mov
sbb
cwde
xchg
ror
(bad)
int3
sbb
xchg
inc
fdiv
jnp
nop
retf
stos
test
or
scas
cmc
int
adc
mov
xor
adc
enter
jns
mov
pop
xor
fcomp
and
loopne
inc
jb
js
push
dec
ins
mov
dec
popa
cs
xchg
loope
inc
aas
mov
push
out
pop
xchg
loope
retf
cmps
out
nop
mov
jl
lea
pusha
jl
push
data16
adc
shr
fs
test
fsqrt
sbb
jae
xchg
iret
inc
ins
std
(bad)
ins
stc
cmp
inc
out
shl
push
inc
dec
ud2
leave
push
and
popf
cli
iret
pop
or
dec
pop
fld
leave
pop
(bad)
cmp
aam
sub
sub
mov
es
jmp
aad
mov
pop
xor
push
pop
not
arpl
jmp
xchg
adc
ins
shl
add
xchg
jne
inc
movs
dec
add
mov
and
sub
(bad)
adc
jl
xor
fdivrp
jbe
inc
loope
xchg
mov
add
adc
sub
(bad)
sar
sbb
mov
(bad)
jne
and
jae
sbb
mov
movs
das
xchg
fldln2
fwait
das
iret
out
xchg
test
jmp
sub
retf
jo
fs
lock
add
push
imul
sar
lds
sub
sbb
cmp
xor
inc
(bad)
in
add
adc
fst
and
repz
sub
inc
jmp
neg
psrlw
and
in
mov
lea
jnp
aam
cmp
jo
xchg
push
cmp
into
or
xchg
or
cs
push
into
push
push
pop
prefetchnta
fbstp
stc
in
jo
mov
jbe
mov
es
mov
(bad)
dec
daa
aas
imul
iret
inc
xchg
xlat
jg
push
sub
nop
and
sub
pop
aam
xchg
(bad)
dec
repnz
mov
xchg
mov
bound
mov
pop
mov
dec
imul
test
scas
inc
stos
and
mov
sub
aaa
rol
push
(bad)
shl
arpl
(bad)
ds
push
loope
dec
inc
loop
shl
stos
stos
pushf
xchg
(bad)
pop
mov
repz
int
xor
movs
int3
push
push
pop
imul
mov
inc
sahf
addr16
mov
ror
pop
and
mov
xlat
or
mov
pop
sbb
jae
cmp
outs
ins
jb
jl
stos
ret
test
pop
dec
mov
je
lods
test
dec
xchg
mov
sub
jecxz
scas
int
loopne
push
or
cmp
out
mov
leave
and
hlt
jns
test
inc
sub
pop
adc
lea
xor
dec
imul
push
cwde
ficom
into
(bad)
dec
or
cld
sub
in
sbb
and
in
mov
sbb
sub
jp
xchg
lahf
inc
into
cmps
sub
inc
mov
lea
cmp
out
je
ins
pop
loope
and
or
test
fdivr
stc
mov
test
inc
and
scas
xor
sbb
push
push
into
fwait
push
sub
mov
or
jg
aaa
repz
call
mov
pop
nop
add
les
push
movs
adc
lods
cld
loop
dec
test
xchg
fwait
xchg
pop
daa
mov
dec
dec
int
fdivr
int3
sub
pushf
enter
cdq
cmp
push
out
fsub
xor
mov
(bad)
cmp
in
add
sub
bound
push
mov
inc
add
outs
xchg
sbb
daa
test
out
sub
mov
mov
sbb
repz
adc
cdq
ds
aaa
into
aad
test
stos
push
rcr
xchg
cmp
repz
mov
cmps
in
scas
xchg
sub
enter
and
dec
inc
cmp
mov
rcr
ins
pusha
sbb
popf
xor
fidiv
or
ret
into
jb
aaa
push
loope
outs
dec
xchg
mov
neg
pop
jecxz
cmp
or
xchg
dec
jp
inc
mov
nop
enter
mov
cs
pop
(bad)
out
inc
scas
mov
xor
xchg
mov
ja
or
in
jg
iret
int
cmp
and
push
(bad)
into
dec
dec
sub
mov
mov
and
rol
xchg
xor
xor
mov
dec
push
ror
loope
sbb
pop
into
or
inc
mov
xor
js
cmps
in
sbb
sbb
fisub
mov
sub
fsub
xchg
dec
dec
cmp
mov
xchg
jns
push
nop
lahf
ficomp
push
call
fldenv
scas
ins
ds
out
test
cmps
cs
cwde
jmp
test
xchg
inc
sahf
mov
push
add
push
inc
inc
popa
(bad)
adc
push
clc
mov
cwde
sbb
mov
xor
add
or
dec
scas
jg
(bad)
mov
enter
nop
lds
pop
jge
lea
scas
pushf
cli
sbb
movs
in
jg
adc
cmc
mov
imul
sbb
nop
push
fcmovu
pop
mov
dec
ds
mov
ret
in
mov
add
push
adc
push
adc
jmp
sub
adc
mov
dec
repnz
daa
mov
xor
xor
mov
clc
movd
sahf
loop
or
(bad)
imul
xchg
aaa
inc
inc
pop
aas
loope
push
add
arpl
bound
aaa
aaa
fs
cmps
aaa
scas
adc
cmp
enter
(bad)
mov
adc
or
fld
inc
xor
push
data16
popf
fcom
pop
ret
sub
sub
int3
jo
push
vmovntdq
std
ins
push
pushf
out
dec
pusha
outs
ja
int
add
jb
loopne
lahf
xchg
movs
in
mov
repz
push
cld
inc
sbb
sbb
ja
mov
neg
(bad)
and
aaa
add
mov
jo
mov
xor
mov
sub
loop
pop
(bad)
mov
xchg
stos
sbb
xchg
dec
mov
pop
xchg
push
xor
or
push
lea
loope
xchg
cld
rol
adc
fnstsw
xchg
mov
add
jb
ja
xor
aam
pop
mov
ret
inc
xor
sbb
push
or
shl
jmp
je
mov
sbb
fstp
fadd
not
daa
div
cmc
inc
fwait
ret
add
(bad)
mov
inc
retf
xchg
(bad)
ret
les
push
stos
cmp
shl
mov
pop
test
jmp
sahf
sti
mov
mov
mov
mov
outs
dec
jmp
inc
push
(bad)
call
sbb
stc
pushf
leave
dec
shl
ficom
outs
lods
pusha
pop
pop
sahf
(bad)
mov
inc
dec
inc
jne
jne
popf
gs
jnp
cmovae
xor
add
pusha
fptan
mov
pop
pop
gs
repnz
(bad)
add
repz
pop
clc
pop
(bad)
sub
and
pop
loopne
xor
mov
test
shl
retf
sub
lock
cmps
xchg
pop
pop
push
in
retf
hlt
fistp
add
shl
pop
pop
pop
xor
push
loope
pushf
mov
mov
jmp
pop
ins
inc
xchg
stos
jb
shl
inc
jp
in
cmc
pop
push
repnz
xchg
jne
cwde
or
push
mov
pusha
(bad)
imul
mov
jmp
mov
ud2
hlt
aaa
jmp
lea
ror
cli
or
loopne
cmc
outs
jg
adc
icebp
movs
sbb
pop
sbb
pop
push
mov
nop
pop
inc
mov
jg
jns
gs
cmp
in
mov
mov
mov
inc
inc
pop
cmc
movs
test
mov
outs
cmp
cli
dec
fcom
mov
ss
xlat
ja
std
sti
stos
jne
and
inc
imul
call
push
imul
cmp
add
outs
inc
leave
push
jp
stc
iret
imul
ja
mov
mov
in
add
jecxz
mov
in
push
shl
mov
pop
cwde
and
xchg
sbb
movs
retf
inc
pusha
call
mov
dec
xchg
(bad)
aaa
mov
dec
cli
cmp
fadd
push
and
pop
pushf
xchg
pop
inc
pop
cmp
inc
enter
inc
clc
(bad)
mov
push
call
sub
jo
mov
push
cmp
fldenv
jb
daa
jo
jb
mov
cmps
(bad)
adc
mov
test
lods
mov
xlat
add
mov
add
mov
in
loopne
inc
xlat
adc
mov
or
mov
fild
push
xor
pop
push
mov
cmp
jo
(bad)
cmc
mov
mov
xchg
scas
aad
mov
inc
imul
imul
push
adc
lods
mov
mov
jne
add
loop
cmp
loop
inc
cmp
add
push
loope
scas
sar
xlat
dec
mov
add
cmp
sbb
out
in
mov
jle
jno
shl
add
inc
adc
jmp
push
adc
push
mov
adc
in
repz
test
jmp
(bad)
push
pusha
fstp
loop
mov
or
xchg
dec
mov
fadd
pcmpeqd
sub
or
aad
mov
mov
adc
loope
(bad)
pushf
jmp
adc
gs
xor
jl
in
jne
out
mov
and
add
repnz
aad
jbe
bound
or
fs
outs
xchg
lahf
push
or
and
fisttp
leave
fimul
cmp
inc
sar
mov
pop
dec
loope
pop
frstor
and
bnd
xlat
fnstcw
jmp
popf
or
(bad)
fstp
loopne
cli
jbe
pop
inc
es
imul
popa
daa
test
xlat
mov
(bad)
mov
int3
xor
cmp
enter
mov
mov
addr16
ret
pop
std
shr
dec
sub
mov
xchg
pop
dec
ss
jl
cmp
sbb
daa
and
leave
and
ficom
mov
retf
outs
rcr
(bad)
mov
and
mul
into
test
scas
retf
bndstx
mov
lea
outs
dec
mov
inc
push
enter
outs
aaa
jno
and
lea
mov
pop
and
mov
ret
(bad)
lea
ret
(bad)
enter
(bad)
sbb
pushf
test
(bad)
fsubr
sub
pop
jnp
leave
sub
data16
sub
push
rcr
repz
dec
jge
sbb
out
je
scas
fnstsw
test
cmp
mov
dec
outs
pop
push
outs
test
movs
mov
sbb
fisttp
mov
mov
sub
xor
in
mov
and
and
aam
lock
cmp
or
ins
cmp
out
cli
js
mov
add
aam
call
rcr
sbb
jae
xor
and
movs
mov
adc
outs
movs
shr
mov
mov
jl
sub
push
cmps
sub
loope
aad
call
mov
xchg
sub
add
or
jbe
push
cdq
sbb
cld
daa
int
add
jg
jg
jo
outs
add
(bad)
mul
mov
pusha
leave
push
aam
dec
mov
lock
mov
arpl
bound
xor
in
pop
mov
mov
jo
push
pop
(bad)
(bad)
mov
push
(bad)
iret
mov
jnp
sub
push
or
es
ins
push
and
push
mov
xor
jle
in
outs
xchg
mov
mov
xor
sub
and
nop
sti
inc
mov
retf
adc
je
or
adc
pop
cdq
push
jmp
pop
push
inc
mov
sahf
rcr
mov
mov
mov
test
fcom
fidivr
loopne
inc
mov
js
pop
test
push
push
in
call
adc
mov
sub
dec
bound
cmp
adc
add
sbb
mov
mov
mov
test
jne
ret
inc
out
aam
js
pop
or
and
out
add
mov
jl
dec
fisub
or
gs
mov
fld
ret
fisub
aaa
pop
xor
mov
cs
ja
cmps
sbb
xlat
lods
rcl
mov
outs
push
lods
mov
xchg
nop
fcmovbe
xchg
push
jo
mov
outs
sbb
sub
jb
sub
jnp
mov
xor
xor
js
jo
pop
imul
(bad)
out
nop
push
jo
(bad)
cmp
js
js
dec
ds
mov
xor
cmp
jno
cdq
xlat
cli
int
imul
xor
imul
movs
in
add
jecxz
xlat
xchg
stc
lahf
sbb
sbb
jnp
icebp
pop
clc
jbe
and
pop
icebp
fs
jo
jge
sbb
lgs
mov
add
repz
xchg
add
adc
or
cs
call
fsub
pop
adc
inc
or
data16
pop
shr
inc
or
push
cmp
push
(bad)
push
and
cdq
js
adc
je
xor
adc
xchg
repz
in
dec
sub
jge
or
(bad)
and
rcl
or
pop
or
std
js
xchg
mov
icebp
pop
int3
(bad)
cmp
frstor
sbb
shl
pushf
xchg
sub
jo
sahf
stos
inc
pop
mov
or
lahf
(bad)
icebp
fistp
mov
inc
xchg
daa
adc
jecxz
(bad)
cmp
loopne
mov
push
sbb
cmp
add
mov
outs
je
mov
or
mov
out
mov
xchg
mov
cld
out
fnstcw
loopne
add
fdiv
and
fxch
cmp
leave
not
mov
ss
ins
push
cdq
aas
in
test
jns
pop
jo
(bad)
das
clc
cmp
imul
mov
xlat
in
call
mov
aad
cs
adc
inc
aam
movs
dec
or
loopne
pop
popa
xlat
push
fs
out
ret
dec
xchg
out
sbb
mov
cwde
callw
adc
(bad)
fsub
loop
fnstenv
out
movs
pushf
dec
sahf
or
retf
jmp
movs
xchg
in
lahf
and
mov
clc
cmps
xchg
movs
sbb
add
ins
ins
cmp
mov
and
aas
jmp
shl
sbb
test
outs
mov
out
dec
mov
int3
cmp
push
pushf
shl
fdiv
arpl
rol
and
jns
imul
mov
fisubr
idiv
loope
push
in
push
lods
pop
sbb
xor
push
inc
dec
lds
fisttp
xchg
shl
shl
nop
xor
rcl
(bad)
arpl
lods
xchg
fist
mov
in
dec
aas
sbb
ret
leave
mov
inc
bound
jne
aam
imul
cmps
or
and
xchg
xor
pushf
jge
xchg
fbstp
outs
dec
add
shr
aad
push
jecxz
test
rcr
and
push
inc
dec
adc
inc
rol
test
movs
mov
cmp
and
fwait
data16
push
jp
out
jmp
cmp
xchg
sahf
retf
adc
loopne
cmps
inc
shl
pop
mov
push
mov
addr16
dec
jl
cmp
test
ja
stc
loope
ror
stc
call
sahf
lods
cmp
in
push
mov
loopne
scas
stos
dec
aam
pop
int3
inc
add
dec
cmp
iret
repz
sub
(bad)
aaa
rol
das
es
mov
mov
mov
xor
jg
scas
call
sbb
clc
jl
add
mov
jo
test
leave
sbb
cmp
push
dec
mov
push
cwde
loop
dec
fwait
aaa
sbb
rcl
retf
xor
inc
fild
sbb
stos
mov
mov
sbb
add
jecxz
out
jp
ins
xchg
cmc
ins
mov
leave
(bad)
lea
in
out
sbb
xor
adc
into
dec
stos
ror
int
cmp
out
loop
ja
jb
fsubr
xor
fistp
inc
dec
push
les
movs
cmp
mov
sub
mov
dec
pop
test
ret
hlt
lods
mov
add
aaa
scas
ins
loop
lods
push
xor
stc
mov
inc
sub
mov
mov
lods
xchg
jo
dec
sbb
movs
cli
mov
repz
cld
inc
cwde
mov
adc
cld
and
rcl
outs
push
mov
outs
or
loop
ret
pop
sbb
pop
dec
repz
adc
sub
pop
mov
sub
jmp
jge
xor
ja
push
dec
jmp
add
fld
mov
pop
xchg
jp
fdivr
push
out
fwait
test
jmp
das
or
mov
lock
push
mov
repz
popf
cmp
int3
xchg
imul
sub
and
fbstp
fisub
shl
out
mov
pop
jge
mov
les
and
and
pop
push
jmp
xchg
aas
jae
jae
or
out
sub
push
xchg
mov
bound
sti
push
xchg
stos
cmp
pop
pop
mov
cmp
dec
mov
into
xchg
in
pushf
scas
nop
mov
jl
jl
or
sub
xor
mov
ss
or
jmp
mov
cld
mov
jle
popa
outs
jle
mov
pusha
cmp
jbe
js
outs
pop
add
pushf
cmc
aas
outs
add
adc
shr
xor
stos
mov
or
fidiv
(bad)
fisub
(bad)
sub
pop
jmp
movs
push
dec
enter
mov
mov
mov
push
mov
xchg
rol
push
fbld
sub
lods
out
lods
adc
mov
cli
jb
and
sub
mov
lods
mov
out
mov
out
mov
nop
in
add
fisttp
add
push
jge
cdq
dec
jbe
std
sbb
icebp
data16
push
(bad)
jl
push
fbstp
out
mov
xchg
add
or
inc
sbb
addr16
mov
ins
mov
js
cmp
mov
lock
mov
jge
jbe
das
pop
mov
sub
adc
push
stc
je
outs
lds
mov
lods
xor
push
cs
popa
dec
cmc
mov
mov
jbe
aad
mov
and
imul
(bad)
sbb
fs
pop
cmp
fwait
or
iret
mov
test
fnstsw
add
mov
inc
inc
lock
pushf
xlat
mov
inc
addr16
dec
cli
mov
adc
aaa
jl
xchg
in
mov
inc
mov
leave
test
arpl
dec
dec
and
push
mov
jae
xor
sbb
push
push
and
clc
popf
xchg
cwde
xchg
fs
popf
mov
fidiv
loopne
dec
inc
adc
movs
jmp
(bad)
cmp
outs
fnstcw
and
and
fs
jno
add
add
mov
aas
imul
popf
jmp
xchg
mov
push
outs
stos
mov
xchg
inc
mov
mov
push
addr16
(bad)
jg
loopne
imul
xchg
xchg
call
sahf
inc
test
xchg
retf
daa
jg
cmp
out
in
or
fcmovnb
jmp
sbb
iret
pop
mov
sbb
mov
cmp
xchg
mov
stos
test
xor
push
cs
icebp
pop
in
cmp
out
xlat
cli
outs
and
adc
mov
test
enter
and
retf
(bad)
push
add
xchg
mov
imul
push
and
xchg
(bad)
sbb
pop
push
pop
and
in
pop
out
inc
repz
cmps
adc
sbb
arpl
inc
dec
push
mov
adc
test
arpl
jae
jecxz
inc
sub
xor
dec
mov
jmp
out
mov
adc
fiadd
repnz
fadd
or
fisubr
xor
imul
bound
add
adc
mov
retf
sub
in
inc
test
mov
call
or
mov
repz
popf
inc
bound
mov
test
dec
xor
pusha
dec
shr
div
enter
popf
test
in
jno
movs
in
inc
call
mov
or
xchg
addr16
in
ret
rcl
imul
clc
sbb
or
outs
bound
xchg
adc
cmp
and
xchg
out
bound
mov
cmp
hlt
mov
dec
fwait
mov
cmp
aam
push
idiv
fistp
(bad)
xchg
ins
stos
std
es
lods
arpl
shl
scas
(bad)
mov
dec
pop
mov
ret
mov
out
add
cwde
(bad)
rcr
adc
out
xchg
repz
in
jo
and
inc
(bad)
leave
call
mov
hlt
inc
dec
mov
adc
popf
(bad)
mov
mov
mov
lods
or
mov
mov
outs
aaa
cmp
inc
jge
xchg
stc
mov
ror
aas
cmp
jg
pop
pop
mov
or
(bad)
jno
jnp
aam
sub
xchg
addr16
add
enter
sbb
cld
adc
jecxz
out
xor
sub
out
leave
and
(bad)
arpl
push
jmp
das
add
cmps
loop
mov
jg
mov
cwde
sti
add
pandn
cld
sub
shl
cwde
dec
cmp
mov
test
aad
sar
ds
cld
repz
cmp
enter
push
mov
cdq
mov
xchg
lock
mov
add
pop
xor
mov
xchg
xchg
ret
jno
cmp
cmp
into
test
mov
pop
sub
push
pop
or
adc
xor
adc
and
cmp
ja
xor
mov
push
inc
iret
inc
pop
iret
add
ins
iret
adc
jmp
in
mov
arpl
int3
or
jl
jns
pop
mov
sar
mov
cwde
loope
cmp
pop
mov
jo
out
(bad)
gs
test
ds
ins
fimul
jno
lods
add
mov
pop
xchg
repz
mov
test
dec
mov
xchg
add
int3
cmp
idiv
xchg
imul
sub
jl
dec
pop
push
dec
icebp
lods
mov
pop
ficom
adc
hlt
adc
pop
sbb
cmp
adc
mov
mov
cs
xor
and
jmp
test
xchg
pop
jge
(bad)
shl
mov
rep
gs
pop
(bad)
mov
xor
push
add
or
imul
call
stc
jo
push
xlat
shl
aas
lds
adc
jmp
fsub
inc
mov
jp
test
and
and
mov
add
mov
out
add
mov
sub
cmp
stc
cdq
(bad)
push
mov
xor
jg
sbb
shl
xchg
out
and
bound
xchg
or
xor
daa
adc
jb
enter
xor
test
data16
push
pop
jmp
dec
push
stos
es
dec
and
or
mov
jae
mov
sub
sti
cmp
or
jns
sbb
gs
pop
cdq
dec
adc
mov
xor
jg
js
lods
jmp
jo
aad
pop
push
dec
pop
cmp
sub
int3
cmc
jge
scas
jl
mov
cmc
ja
leave
mov
push
or
xor
out
int
and
dec
ins
push
ror
sbb
popa
ins
shl
dec
inc
mov
test
mov
ins
or
(bad)
(bad)
push
adc
pop
ror
xchg
cli
jne
xor
mov
fisub
add
pop
mov
adc
xor
or
dec
mov
push
push
bnd
sub
clc
push
std
int
(bad)
fistp
jbe
sbb
add
mov
cmp
jae
ds
call
pushf
enter
mov
mov
push
xchg
xor
jp
sbb
ds
and
pop
cmp
sbb
ror
in
mov
popf
xor
outs
into
es
push
retf
mov
jmp
mov
bound
push
mov
stos
hlt
cs
sbb
cmp
add
jg
pop
mov
push
xchg
cmp
mov
sub
fdivp
cli
ins
cmp
sub
adc
popf
int3
inc
movs
jl
and
cdq
(bad)
dec
clc
je
fiadd
js
or
push
sbb
mov
repnz
sub
test
adc
stos
daa
fisttp
or
pop
(bad)
popf
pop
sbb
ret
pop
popf
push
pop
push
pushw
ss
and
mov
lds
pop
xchg
or
in
fiadd
call
ficomp
int
push
retf
push
xchg
outs
pop
add
cmp
sahf
pop
and
xor
cld
or
adc
adc
pusha
sbb
mov
xor
jae
cmp
in
ins
(bad)
lods
mov
push
push
pop
mov
loop
sbb
ret
inc
jp
sahf
out
jns
mov
inc
adc
xchg
xchg
fdivr
leave
xchg
stos
call
jg
movs
jge
fsubr
in
les
inc
sub
loop
pusha
mov
test
xchg
pusha
jae
adc
test
gs
cwde
jmp
xor
aam
retf
stos
cmp
xchg
fwait
repz
mov
inc
push
xchg
jae
push
sahf
cmc
mov
out
jo
dec
add
ret
dec
push
daa
jb
mov
cmp
adc
mov
in
mov
cmp
cmps
and
jbe
shl
inc
idiv
xchg
cmp
sahf
ins
sbb
push
pop
stos
fwait
cwde
mov
dec
inc
mov
xchg
rcl
test
sub
mov
retf
in
iret
fxtract
adc
popa
sub
out
fiadd
xor
ds
xor
inc
in
xor
sub
in
cmps
ret
and
add
lahf
loopne
aam
repnz
xchg
loop
hlt
aas
stc
pop
cmps
dec
sbb
test
xchg
jns
sub
and
data16
stos
push
or
add
cmp
adc
in
push
adc
js
gs
ds
or
repz
mov
or
push
mov
jnp
div
cli
es
mov
add
sub
or
stc
ss
retf
adc
xlat
repnz
xchg
(bad)
aad
inc
pop
jmp
imul
std
shl
jg
test
pop
cmc
lea
xchg
xchg
dec
pop
push
jp
fisub
aad
popf
push
mov
sbb
out
outs
cwde
std
dec
aad
pop
jae
repnz
int
or
jb
cmp
push
jp
hlt
nop
mov
loop
(bad)
call
or
dec
sub
sbb
pop
js
xor
mov
mov
or
ret
dec
or
inc
jnp
fadd
adc
call
sahf
scas
scas
sub
push
mov
jp
jg
inc
jb
fsub
cmps
sub
inc
xor
test
xchg
mov
push
lock
push
jl
cmp
outs
arpl
jb
shr
push
lahf
div
inc
jge
xor
call
stc
sub
add
add
pop
adc
push
call
loopne
sar
fs
mov
jb
js
out
jle
mov
(bad)
push
fdivr
inc
sti
aam
pushf
pusha
dec
fld
jo
add
or
jbe
adc
inc
hlt
pop
push
push
call
shr
xor
mov
sar
retf
inc
je
mov
jno
adc
addr16
mov
pop
mov
dec
xor
adc
cmp
dec
dec
fidivr
dec
push
in
sub
jnp
ins
xchg
in
in
data16
mov
dec
cmp
mov
(bad)
test
(bad)
daa
div
stc
adc
sub
imul
fisttp
(bad)
inc
cmp
pop
icebp
data16
pop
pop
and
repz
leave
push
cmp
stos
sbb
mov
popa
push
or
cmp
out
cmc
mov
xlat
or
push
adc
popf
adc
call
imul
aaa
fisubr
pusha
fs
cdq
jle
add
mov
xchg
inc
and
push
mov
inc
clc
sub
aad
fucomip
push
inc
jb
sub
mov
test
retf
popf
mov
push
jbe
push
jno
mov
cmps
jmp
repnz
and
sahf
inc
cmp
and
arpl
cmp
push
and
out
inc
pop
stos
adc
data16
cld
jge
inc
das
adc
pop
out
mov
int
hlt
test
cmp
mov
add
or
xchg
cwde
push
fnstenv
stos
sahf
jg
lahf
ret
lods
or
xlat
xor
fnstcw
into
test
ins
pop
fisub
inc
rcr
dec
pop
jae
repz
cmps
xchg
sbb
jmp
adc
jne
mov
adc
adc
xchg
mov
bnd
popf
or
clc
movs
or
inc
loop
xor
push
shr
scas
(bad)
(bad)
pop
repz
and
mov
xor
mov
xchg
into
adc
lea
jne
stc
push
pop
out
imul
xchg
jge
dec
int
xchg
in
int3
leave
dec
lea
xchg
jge
xchg
push
fist
jg
xor
push
enterw
jg
pop
jo
or
or
cmp
movs
into
nop
sbb
and
sub
add
test
lahf
into
ret
dec
pop
cmp
and
cmp
pop
lods
std
test
out
xchg
mov
aas
test
pop
(bad)
cmp
sbb
adc
and
mov
jns
shl
(bad)
sbb
popa
inc
test
or
ss
stc
in
inc
lahf
mov
adc
clc
xchg
jmp
fbld
cmps
pop
push
inc
mov
mov
aas
je
xchg
dec
cmp
repnz
mov
adc
jp
dec
mov
add
or
lea
aad
arpl
mov
mov
test
add
hlt
scas
mov
jne
jae
icebp
adc
sqrtps
ss
and
out
movs
mov
mov
rcl
mov
mov
push
adc
int
and
sbb
gs
sub
jge
push
cdq
mov
loop
scas
dec
addr16
ds
mov
jae
push
or
lods
add
add
sub
mov
inc
pusha
xchg
repz
cmps
sbb
(bad)
in
mov
sti
dec
aad
sub
mov
sub
jne
adc
add
or
xchg
dec
mov
cld
(bad)
sbb
sub
inc
stc
(bad)
and
mov
push
sub
push
and
inc
or
dec
push
je
stos
xlat
into
sub
jmp
pop
cmc
sub
jb
lods
repnz
jg
xlat
daa
xor
popf
jns
dec
lea
movs
mov
ret
scas
or
mov
out
loope
push
mov
jb
adc
jmp
retf
mov
mov
cmp
rcr
cmp
es
pop
mov
lahf
mov
mov
mov
and
pop
sbb
sbb
test
(bad)
cld
test
(bad)
adc
pushw
jp
inc
addr16
mov
mov
in
fstp
push
lock
cmp
sub
pop
push
mov
cmp
mov
je
add
(bad)
nop
sub
mov
loop
push
xchg
retf
cmp
scas
shl
xor
xchg
sbb
jecxz
out
repz
(bad)
cmp
pop
push
mov
repnz
gs
sbb
into
call
lahf
outs
fnsave
sub
inc
cs
lods
stos
in
ret
mov
push
xchg
in
jno
shl
iret
pop
loopne
cld
fs
jno
cmps
xchg
jmp
sub
(bad)
aaa
stos
out
sub
out
jmp
or
mov
cmps
and
scas
clc
mul
sar
adc
fsubr
daa
aas
fistp
inc
push
dec
and
ss
or
add
(bad)
xor
movzx
imul
jp
inc
and
cmc
iret
addr16
pop
inc
dec
(bad)
pop
push
enter
mov
or
sar
movs
das
repz
dec
mov
aam
xor
and
lahf
fs
call
pushf
not
addr16
push
mov
mov
pop
adc
push
sti
loope
cmp
paddw
or
(bad)
xchg
inc
cmp
out
xor
into
jge
xchg
mov
cmp
dec
shl
mov
cmp
inc
sti
js
jb
push
mov
(bad)
and
mov
adc
sbb
fwait
and
inc
in
jmp
dec
push
pop
lods
repnz
cmp
pop
mov
xlat
mov
ja
pop
dec
in
dec
inc
add
cmp
dec
sub
scas
cmp
es
test
pusha
jb
mov
scas
mov
lock
dec
push
lods
cmps
fdivr
xor
add
and
mul
jo
les
sbb
popa
add
test
out
test
pop
in
adc
fisub
out
imul
(bad)
arpl
sub
jg
adc
outs
minss
mov
ins
ins
rol
dec
fisttp
cmp
in
lods
clc
mov
mov
pop
xchg
or
xchg
sub
jecxz
out
or
fldenv
add
bound
or
bndstx
clc
jb
mov
mov
or
inc
(bad)
xor
inc
add
lds
ret
lea
mov
mov
icebp
sbb
xchg
aad
sbb
jmp
cmp
scas
and
pmullw
push
or
sbb
cmc
rol
mov
or
sub
in
aad
(bad)
pop
pop
and
jbe
cmp
ins
pop
into
retf
leave
or
retf
shl
add
dec
hlt
mov
data16
(bad)
lods
mov
stos
pop
fwait
jmp
cs
lock
hlt
mov
cmps
imul
mov
stos
and
jle
mov
mul
cmps
push
cmp
mov
arpl
daa
sbb
sbb
mov
mov
in
out
push
ds
mov
sub
dec
mov
stos
cdq
dec
push
fst
mov
jge
retf
jp
xchg
sbb
xchg
mov
pop
jge
ret
xchg
mov
pop
ins
test
repz
and
jg
or
enter
pop
xchg
jmp
and
pop
add
push
mov
test
das
jp
cwde
pop
ds
or
call
mov
xor
or
xor
ret
sar
and
movs
das
push
mov
js
ficomp
xchg
stos
sub
fucomip
(bad)
clc
xchg
fs
jo
xor
or
movs
fiadd
sub
sub
push
test
inc
dec
test
scas
ins
ret
add
jnp
(bad)
ss
mov
xchg
fst
or
iret
push
sbb
imul
int3
or
inc
xchg
in
inc
lock
sbb
add
leave
mov
arpl
sar
cmp
or
cli
scas
push
jo
push
push
retf
call
push
xor
rol
(bad)
aad
cmp
jg
xchg
or
imul
cdq
mov
inc
sti
lods
mov
stc
movs
xchg
fcomp
stc
adc
mov
inc
sbb
cdq
pop
jge
(bad)
scas
test
sbb
clc
lahf
cmp
test
push
(bad)
jo
and
cmp
int
xchg
cwde
adc
dec
jge
call
clc
or
mov
fsubr
ins
jg
test
push
out
outs
lds
hlt
cmps
cmps
js
out
cs
and
pushf
lds
pop
icebp
inc
repnz
sbb
or
inc
mov
mov
mov
stos
push
aaa
mov
mov
dec
pushf
addr16
pop
ret
fistp
popf
and
push
pop
xchg
popa
outs
pushf
pop
(bad)
clc
sub
jae
fst
movs
arpl
test
push
leave
lock
leave
xchg
or
pushf
cmp
(bad)
leave
add
jns
pop
shl
test
ret
ja
cmp
jae
xor
rol
lods
out
iret
ret
out
mov
shr
leave
in
cdq
or
pop
and
adc
push
call
sbb
into
push
sbb
ror
iret
mov
push
rcr
mov
xchg
and
push
xlat
sbb
lds
jp
cmp
or
cmc
pop
xor
jle
(bad)
mov
and
and
(bad)
bound
(bad)
mov
jo
sbb
cmovg
jnp
cmp
xlat
sbb
push
sbb
sar
mov
pop
adc
pop
sub
in
cmp
sbb
out
ds
pop
add
mov
jno
dec
test
mov
pop
sub
pop
xor
inc
pop
dec
xchg
mov
jo
sub
lock
mov
pop
mov
mov
scas
cli
mov
gs
arpl
(bad)
cmp
repnz
cmp
rcl
fldenv
mov
stc
ret
rcl
push
ins
dec
out
push
inc
repz
or
inc
mov
dec
into
ins
inc
and
inc
mov
(bad)
movs
scas
daa
sahf
jns
jns
jb
ss
ret
mov
sbb
mov
out
push
aam
imul
pop
add
push
in
mov
jge
and
dec
cwde
enter
push
xor
clc
sub
mov
mov
fdiv
xchg
adc
ja
sbb
aam
cld
or
stos
aas
les
jge
mov
cld
pop
adc
and
or
es
popf
xchg
shr
outs
push
fild
mov
mov
push
xchg
out
ins
push
adc
pop
jg
or
outs
push
clc
sbb
jns
cmc
test
sbb
jmp
enter
lods
ins
pop
xlat
and
lock
or
into
dec
dec
sbb
push
sahf
cmp
ins
movs
pop
and
mov
sub
xor
loop
fcomp
mov
cmp
push
ja
cdq
(bad)
push
movs
ins
xor
fmul
sbb
add
or
sahf
cmp
test
cwde
xchg
xchg
jp
repz
xor
add
mov
adc
dec
and
adc
sub
cmp
shl
mov
dec
push
icebp
adc
add
xchg
scas
add
stos
fistp
mov
shl
fnstcw
xor
xchg
dec
retf
js
test
cmps
adc
imul
mov
fiadd
add
adc
jbe
loope
jne
inc
fsub
push
cmp
imul
stc
and
sar
aam
xor
shl
mov
(bad)
fs
xor
cmps
adc
(bad)
fs
cld
in
sub
loope
(bad)
out
mul
xlat
sar
add
sub
pop
out
inc
rep
fmul
jg
inc
adc
push
aas
fsub
fiadd
pop
stos
push
fdiv
mov
add
or
data16
adc
add
in
ja
in
cmp
fnsave
mov
jg
(bad)
mov
shl
sti
adc
aas
dec
out
pusha
enter
in
push
call
jge
fisubr
mov
pusha
dec
adc
cmp
mov
icebp
push
dec
shr
xchg
nop
jbe
cmp
sbb
test
lock
xor
jno
pop
sbb
stos
or
adc
and
arpl
and
jae
je
and
lock
push
cmp
fstp
shl
mov
pushf
les
in
(bad)
fsubr
movs
pushf
mov
loopne
enter
sub
fs
cdq
add
mov
std
add
jle
dec
adc
shl
dec
cmp
gs
js
outs
mov
fdiv
cmp
adc
loope
adc
inc
pop
(bad)
fdiv
inc
add
(bad)
(bad)
jb
test
jae
mov
jg
cmp
and
ins
shr
mov
cmps
out
(bad)
hlt
mov
popa
pop
aas
shl
test
mov
popf
adc
sbb
sbb
pop
sar
test
(bad)
ds
xor
(bad)
idiv
push
push
gs
sbb
fild
das
es
mov
dec
cld
inc
fs
pop
addr16
loop
add
jl
pop
xlat
repnz
cld
nop
mov
mov
dec
ds
pop
call
test
stos
leave
cdq
int3
sbb
mov
(bad)
cmps
lods
das
arpl
dec
lds
xchg
out
jle
and
cmp
test
lock
out
into
pop
dec
outs
cmps
or
sbb
jl
sar
and
dec
push
aam
(bad)
(bad)
neg
dec
data16
push
xchg
out
mov
(bad)
push
in
inc
(bad)
push
add
jo
mov
cwde
addr16
icebp
or
and
dec
jg
clc
dec
test
cmp
sub
xchg
push
aaa
test
cmp
ins
les
ror
(bad)
jge
movs
in
push
sbb
(bad)
fwait
sbb
scas
loope
xor
int3
test
push
daa
icebp
rcl
adc
dec
add
jmp
mov
mov
cmps
cmp
dec
dec
call
ds
cld
retf
jle
nop
push
loope
jle
jb
cld
add
xor
cmp
sar
lods
cmps
add
and
dec
int3
ins
cmp
jae
pop
out
inc
enter
repz
xchg
popa
jge
mov
lds
pop
outs
xor
dec
push
lock
mov
mov
cdq
test
mov
or
cld
mov
pushf
sbb
jne
test
push
lods
jl
ror
mov
and
xor
outs
outs
test
jno
nop
es
and
lahf
pop
xor
dec
sbb
pusha
std
adc
lods
pop
adc
pop
test
mov
push
mov
in
push
rol
jb
mov
sub
push
cmps
lahf
stos
ja
mov
push
cld
int3
mov
push
mov
dec
dec
push
int
cmp
scas
mov
fld
mov
aaa
inc
mov
das
xlat
mov
xchg
dec
pop
jae
arpl
mov
iret
cwde
sbb
out
leave
out
movs
in
fisubr
adc
dec
push
aaa
mov
fnstcw
das
test
dec
jmp
fisub
xor
adc
dec
fisttp
xor
iret
xchg
out
nop
or
repnz
add
outs
push
push
sub
in
stos
mov
neg
push
xchg
cmp
ror
icebp
lock
dec
add
lods
pusha
sbb
jmp
mov
jnp
ins
bound
fs
push
inc
aas
cmp
outs
rcr
sbb
and
xchg
pop
stos
repnz
test
popf
in
pop
jge
xor
pushf
stos
cmp
mov
or
nop
mov
add
jae
jecxz
(bad)
push
pop
shl
xchg
cmp
cs
repz
(bad)
test
sub
pop
int3
movs
scas
iret
xchg
cmp
inc
retf
nop
out
sbb
loopne
sub
sbb
cld
jmp
gs
fstp
cmp
adc
call
xchg
push
loope
add
mov
retf
sub
(bad)
out
mov
cs
cmp
gs
sub
mov
iret
sub
lahf
shl
repz
test
sbb
mov
mov
cmp
out
jmp
and
sub
jp
cmp
into
pop
pop
and
mov
out
mov
fs
out
xchg
pop
jnp
pop
push
pop
out
call
pop
(bad)
and
icebp
and
sbb
lahf
lea
fcom
jo
dec
xchg
in
dec
adc
repz
mov
pop
jne
ss
jl
dec
cmp
adc
mov
inc
adc
push
adc
push
xchg
popf
dec
(bad)
or
repnz
cmc
gs
pop
and
out
xor
imul
inc
sub
and
pop
pop
push
sub
fld
cmps
jnp
icebp
js
int
sub
paddsb
and
xlat
minps
fistp
add
in
push
sbb
test
fisttp
inc
shr
xchg
cmps
adc
das
je
(bad)
pop
and
cwde
pop
popf
(bad)
push
cmp
cmp
lds
add
(bad)
xchg
mov
(bad)
pop
push
mov
xchg
jp
js
lea
loopne
xchg
sbb
jg
scas
sub
shr
lds
jbe
push
rcr
ror
jo
stos
inc
and
sar
mov
popf
sahf
dec
and
outs
ror
jg
fs
leave
or
mov
arpl
mov
xchg
not
les
add
repnz
cmp
push
out
cmp
jle
(bad)
out
cwde
lods
dec
inc
sti
xlat
or
lea
lock
mov
pop
int3
icebp
cmps
sbb
sbb
lahf
mov
stc
ror
xor
mov
idiv
sub
push
ds
outs
clc
push
sub
add
sub
dec
pop
add
dec
push
adc
xor
loopne
ins
xchg
pop
xor
jl
pop
dec
pop
(bad)
or
cmc
mov
adc
aaa
js
aaa
add
fmul
mov
bound
add
xlat
daa
push
add
mov
addr16
xchg
xchg
loop
sbb
xor
sbb
in
loope
adc
mov
not
jl
dec
inc
scas
shl
hlt
inc
sbb
(bad)
inc
ror
jne
xchg
(bad)
xchg
jb
loopne
cmp
xor
bound
rcl
ins
hlt
jns
or
mov
dec
adc
stc
push
sbb
(bad)
gs
xor
repz
dec
cmp
inc
xchg
and
or
out
push
cmp
pushf
and
mov
sub
jb
mov
jo
scas
mov
imul
test
in
inc
je
int3
mov
cmps
iret
ss
dec
add
xchg
(bad)
mov
xchg
shl
sbb
push
sbb
sub
adc
cld
cs
das
cld
pop
movzx
pop
ja
aam
ins
xchg
aam
add
or
xor
cwde
cmp
mov
mov
mov
rol
inc
pop
inc
cmp
mov
ret
mov
dec
scas
pop
mov
scas
xchg
leave
cmp
jmp
add
xor
sbb
push
jge
lahf
daa
popa
or
mov
cmps
stos
push
push
fmul
xchg
mov
out
xchg
cld
ja
into
in
rcl
rcr
jg
sub
repz
xchg
xchg
rcl
xor
mov
cmp
push
jmp
and
test
jmp
mov
and
add
pop
out
lea
xor
pop
sbb
lods
shl
hlt
dec
repnz
ficom
rcr
mov
cwde
or
sbb
xchg
pop
mov
arpl
mov
or
data16
mov
push
mov
arpl
mov
pop
lods
fistp
inc
and
das
imul
daa
mov
push
ss
adc
aas
mov
jmp
mov
cmp
xor
push
jle
fimul
jb
add
bound
popf
scas
pop
ds
sahf
cli
mov
inc
pop
push
xchg
aaa
push
(bad)
call
sbb
inc
data16
inc
xor
sbb
int
out
dec
inc
pop
mov
fdiv
and
leave
lea
mov
dec
xchg
je
xor
call
and
mov
cmc
push
(bad)
xor
adc
cmp
ins
add
xor
mov
dec
pop
(bad)
outs
xlat
dec
mov
fnstcw
cmp
adc
adc
lea
fsub
push
mov
mov
pop
dec
aam
and
sti
or
dec
xor
mov
fisub
(bad)
push
(bad)
fucomp
imul
inc
xlat
dec
rcr
(bad)
pop
sub
cmp
xor
aad
add
test
std
xchg
shl
push
icebp
lods
test
cmp
dec
mov
aaa
sbb
push
out
cwde
popf
push
pop
cmp
pop
test
mov
outs
leave
out
push
imul
adc
jbe
pop
jge
in
and
inc
movs
int
ins
ret
xchg
fadd
xor
dec
sub
xor
or
loopne
and
(bad)
repnz
movs
jno
mov
adc
lods
adc
mov
jns
adc
retf
mov
sahf
sub
mov
(bad)
in
jp
ret
push
add
inc
aad
inc
out
pop
int
cmp
loop
sbb
fidiv
mov
(bad)
push
pop
sub
in
push
adc
mov
fsubr
add
sbb
sub
std
xor
sbb
movs
fld
fidivr
imul
jge
push
and
mov
stos
push
or
and
add
dec
lods
daa
mov
cmp
mov
pusha
fsub
retf
int
or
pop
(bad)
pop
jb
ret
inc
jb
pop
daa
sub
out
enter
mov
pop
mov
int3
fsubr
loop
mov
mov
js
pop
pop
pusha
mov
sub
add
mov
pop
sub
push
jnp
pop
sbb
xor
mov
jnp
mov
arpl
pop
inc
xchg
fstp
push
cmp
jae
dec
clc
test
imul
push
mov
push
xchg
cmp
jae
addr16
mov
mov
dec
push
ret
test
int
int3
mov
scas
test
cmc
stos
mov
in
dec
cmp
mov
ret
retf
in
xor
imul
fs
xor
xchg
fsubr
cmp
arpl
push
lods
cmp
out
sub
xlat
leave
mov
xchg
jb
test
iret
call
js
jmp
mov
lods
test
ret
shl
test
pop
jmp
mov
(bad)
ja
xchg
icebp
mov
push
adc
sub
jg
mov
sub
sub
dec
sbb
mov
pop
cmc
and
pop
xchg
cdq
jmp
sub
or
or
mov
xchg
nop
jnp
mov
jno
and
mov
jo
pop
mov
fbld
mov
not
dec
enter
push
repnz
add
or
fwait
mov
sbb
pop
sub
sti
addr16
lea
loop
inc
xlat
push
or
movs
ret
mov
adc
jno
jmp
or
sub
shl
jp
fmul
jmp
xor
aad
popa
push
xlat
or
jg
adc
mov
loope
sbb
sub
xchg
test
in
inc
ja
push
out
xchg
out
mov
arpl
pop
sbb
pushf
xchg
cmp
adc
cmc
sub
jg
push
add
nop
icebp
sbb
(bad)
std
pusha
or
fcomp
mov
add
jp
sbb
and
int
lahf
sahf
sti
mov
sub
cld
cmp
pop
or
xor
mov
aas
and
dec
in
stos
aas
xor
and
adc
pop
test
mov
ror
mov
bswap
scas
xchg
lods
lods
loope
mov
les
mov
nop
and
mov
mov
mov
pop
dec
mov
retf
(bad)
dec
jmp
fcmovne
sub
mov
push
neg
mov
pushf
jbe
ins
xor
mov
inc
inc
or
ror
in
iret
dec
ror
lea
sbb
sbb
adc
repnz
iret
outs
retf
int
ror
dec
adc
out
aam
adc
jnp
push
and
js
ss
pop
jmp
dec
or
shl
(bad)
xchg
int
dec
jae
inc
arpl
mov
cmp
movs
jo
mov
ds
bound
jmp
xor
jnp
fisubr
nop
xor
mov
pop
pop
test
jno
xchg
inc
push
(bad)
xchg
or
adc
inc
ficom
fs
scas
xor
js
dec
outs
data16
adc
mov
call
or
dec
ins
jecxz
dec
and
call
inc
push
mov
mov
add
add
test
aam
leave
inc
mov
mov
mov
push
jno
cmp
cmp
je
mov
bound
cdq
inc
mov
xor
jmp
xor
mov
pop
sub
out
in
out
mov
mov
cmps
test
and
dec
mov
xor
cs
xor
mov
ins
ret
test
dec
jecxz
lahf
leave
pop
call
mov
leave
and
in
lahf
xchg
inc
mov
inc
iret
push
xor
js
jbe
inc
inc
pushf
adc
test
inc
add
cs
xchg
mov
push
add
dec
cli
mov
or
cmc
mov
scas
pop
popf
sbb
mov
adc
xor
or
mov
jg
loop
push
or
jns
nop
int
popf
out
lock
pop
lea
pop
ret
cwde
jbe
mov
jmp
les
popa
ret
sub
xor
jmp
sub
and
cdq
or
sub
mov
push
jns
jo
inc
pusha
or
cmp
rcr
(bad)
(bad)
mov
push
jbe
gs
or
les
push
sub
dec
cld
push
outs
(bad)
icebp
pop
xlat
push
fisttp
push
mov
inc
xchg
sbb
dec
push
xor
add
clc
mov
ret
and
sub
sbb
push
jne
or
add
into
jo
imul
xchg
mov
pop
fwait
push
inc
das
push
sbb
iret
cmp
pop
rcr
pop
dec
xlat
inc
scas
cld
nop
into
js
adc
xor
popa
mov
mov
jb
and
push
call
cmp
mov
and
dec
ins
mov
jmp
sahf
jo
data16
and
(bad)
jnp
fnstcw
adc
je
inc
xor
sbb
and
aad
gs
hlt
shl
fcmovbe
xor
dec
rcl
push
mov
inc
loop
cs
scas
outs
mov
sub
popa
jno
and
rcr
inc
enter
(bad)
jp
(bad)
mov
jp
fucomi
fimul
out
ins
dec
enter
ficomp
mov
xchg
test
sti
pop
push
bound
mov
jnp
inc
(bad)
enter
inc
std
jnp
sub
lds
mov
fistp
outs
enter
jmp
pop
cmps
or
std
pushf
lock
lods
loope
shl
fs
dec
and
push
or
dec
xchg
popa
mov
xor
pop
jl
sub
jg
push
adc
pusha
xchg
mov
fstp
sub
jg
xchg
sub
pop
xchg
push
out
ret
and
bound
ss
and
stos
or
aam
(bad)
pop
push
add
ucomiss
aam
enter
icebp
push
push
cli
div
test
jmp
dec
and
popa
out
add
fwait
inc
aaa
lea
frstor
sbb
push
or
and
mov
les
pop
cmp
aam
movs
std
sub
movs
xchg
jne
pop
aam
jno
jg
cmp
rol
or
adc
cmp
out
out
(bad)
mov
mov
ret
scas
push
push
out
(bad)
and
mov
mov
ds
fadd
cmps
push
and
shl
cs
pop
jbe
xor
push
sbb
adc
pop
div
pop
or
ins
mov
mov
xchg
add
int3
enter
inc
jns
inc
ss
sar
cmc
cld
push
xchg
mov
dec
cmp
mov
outs
jns
push
fldenv
cs
add
test
sub
repz
xchg
pop
stc
jmp
dec
and
mov
call
mov
sbb
sub
shl
inc
int
(bad)
adc
xchg
xchg
inc
js
pop
ds
and
ins
mov
scas
adc
dec
xchg
in
stos
pushf
pop
sbb
cmc
jo
test
ret
std
and
fbstp
push
cld
adc
cs
jp
fisttp
cmps
pop
adc
jle
out
icebp
repz
cmps
sbb
jmp
inc
jmp
pop
fistp
ss
xchg
iret
xchg
arpl
loopne
cdq
pop
test
lahf
xadd
xor
xchg
daa
jne
pop
out
adc
xor
inc
int3
sti
je
and
mov
and
repz
and
cmp
xor
jne
sub
jg
in
xlat
dec
es
inc
cmp
push
lea
dec
xchg
push
jnp
mov
jno
jg
in
push
xor
addr16
cmp
pop
in
push
dec
test
xchg
adc
pop
neg
xchg
xlat
add
xor
dec
inc
mov
lods
lods
sbb
mov
and
add
test
mov
in
mov
cli
cld
fisubr
jae
mov
lods
into
aad
stos
jb
gs
(bad)
fisttp
add
ins
cdq
out
and
xor
retf
push
scas
test
cmps
push
jp
mov
xor
jl
jnp
ror
test
jge
stc
(bad)
and
or
cs
dec
mov
jb
push
pop
ins
mov
outs
add
jmp
cmp
xor
mov
leave
jne
cs
mov
push
pop
mov
aam
inc
stc
push
fist
scas
inc
arpl
dec
add
cld
push
fmul
ror
push
sub
test
ret
fistp
mov
in
call
cmp
pop
cmps
retf
inc
adc
xchg
inc
into
(bad)
or
rol
lea
gs
imul
ja
mov
jo
sub
pusha
iret
or
pop
dec
push
push
je
out
aam
push
inc
sub
adc
jmp
rol
les
loope
cli
imul
popf
or
(bad)
cli
mov
fsub
(bad)
xor
push
in
or
dec
inc
rol
push
in
mov
mov
dec
cmc
pop
and
(bad)
ds
fcmove
retf
iret
adc
scas
inc
(bad)
mov
fs
mov
push
push
xchg
inc
xchg
xor
ins
push
jbe
push
inc
or
sbb
pop
(bad)
cwde
dec
outs
dec
cmps
test
daa
dec
in
dec
mov
retf
stc
sbb
sub
inc
mov
xchg
repz
sub
scas
cmc
(bad)
(bad)
aam
outs
push
vmovlps
popa
dec
and
mov
pop
lods
mov
fstp
push
int3
and
inc
div
jnp
pop
fidiv
into
xlat
mov
mov
lds
(bad)
jns
xchg
aaa
push
out
mov
jmp
add
or
xchg
icebp
cs
and
int3
add
sti
sub
arpl
sar
out
pop
inc
mov
fcom
pop
jns
mov
mov
ins
pusha
scas
cld
test
jle
push
mov
jae
loop
ins
xor
repz
sbb
es
sahf
add
adc
sbb
fst
pop
push
mov
inc
mov
and
fmul
pusha
dec
jl
sbb
sub
movs
inc
popa
mov
out
test
cmp
stos
loope
cdq
mov
shl
jne
(bad)
aad
xchg
cdq
adc
test
jae
mov
call
and
sub
(bad)
cmp
adc
adc
adc
int
mov
push
jno
push
out
dec
sbb
mov
dec
sbb
enter
js
adc
pusha
adc
cmp
cs
or
dec
aam
mov
mov
push
in
adc
outs
out
push
mov
(bad)
clc
add
dec
xor
or
xchg
ja
aaa
mov
mov
cmp
mov
in
into
cmp
cmp
les
(bad)
stc
adc
lods
dec
jo
cmp
mov
adc
out
jo
xchg
popa
shl
jmp
mov
or
push
(bad)
mov
and
push
mov
inc
mov
mov
and
imul
sub
mov
je
xchg
pop
int
sbb
shl
lods
aad
stos
push
repz
sub
mov
out
loopne
(bad)
ins
push
clc
aam
ficomp
cmp
(bad)
pop
inc
add
data16
rol
test
xor
and
imul
pop
ins
pop
dec
mov
dec
sbb
jb
retf
adc
test
or
mov
lods
sub
js
push
call
daa
(bad)
imul
cmc
repz
sbb
inc
push
or
int
in
xor
shl
sub
mov
add
push
add
cmc
jae
in
adc
fidiv
(bad)
xchg
(bad)
out
xor
js
cld
test
stc
dec
cmovb
pusha
pop
in
xchg
aad
jge
inc
mov
add
inc
push
xchg
loopne
(bad)
adc
into
int
cmp
jl
fnstsw
push
mov
push
and
cmc
pop
jp
mul
sbb
out
dec
(bad)
sub
aas
or
xchg
in
xchg
adc
jg
mov
mov
add
jb
cmc
dec
sbb
sbb
pop
test
sub
fcmovb
xchg
push
pushf
or
test
inc
fwait
js
mov
aaa
push
aaa
sbb
retf
xchg
xchg
or
inc
out
inc
(bad)
stc
mov
mov
mov
jne
ret
retf
lods
xor
retf
clc
je
fstp
stos
lods
dec
add
push
add
xor
jnp
push
inc
jp
aam
pop
xchg
push
pop
push
addr16
arpl
lds
and
dec
xor
cmp
cdq
dec
jge
les
out
mov
nop
les
mov
jl
jmp
mov
sub
popf
iret
ss
sub
xlat
enter
(bad)
jp
out
arpl
movups
(bad)
jg
cli
push
int
pop
icebp
cmp
sub
sub
cli
aam
and
cmp
dec
and
or
mov
shl
mov
mov
pop
das
xchg
mov
leave
xchg
mov
pop
movs
sub
push
sar
into
cmps
mov
loop
mov
jb
arpl
jns
xor
jo
mov
mov
mov
ret
mov
pop
push
mov
cs
inc
push
leave
push
js
pop
and
push
mov
add
cld
jmp
cmp
ds
(bad)
dec
and
outs
xor
pop
adc
test
xchg
mov
pushf
retf
mov
aas
xchg
sbb
mov
push
add
xlat
test
jnp
jae
gs
and
xchg
cdq
stc
in
jmp
addr16
sub
mov
int3
es
add
and
out
leave
push
and
jge
add
push
mov
xor
xor
cdq
dec
and
sub
push
sub
in
dec
(bad)
sub
jae
lea
mov
dec
sub
stc
cmp
mov
les
loop
cld
int
pushf
xor
jo
jb
shr
(bad)
mov
test
mov
movs
mov
xchg
inc
imul
sbb
jo
and
cmp
(bad)
fdiv
dec
cli
(bad)
mov
popf
daa
add
xchg
mov
mov
jns
cmps
rcr
jmp
push
pushf
pop
jo
dec
mov
ret
push
clc
xor
into
cmps
aad
mov
fmul
in
inc
int
repz
aaa
dec
mov
xor
mov
lods
push
push
int3
sub
cmp
or
pusha
xchg
daa
mov
inc
and
jae
push
jbe
repz
adc
or
loopne
dec
sub
jb
into
addr16
je
xor
es
xor
cli
pop
inc
les
mov
call
jl
inc
es
mov
fistp
cwde
adc
outs
sbb
sub
pusha
imul
xor
outs
sub
jmp
clc
mov
call
sbb
popa
xchg
xchg
fsubr
mov
jo
cmp
or
inc
aas
sub
dec
clc
cmp
sti
mov
adc
adc
stos
scas
sub
sub
push
and
lds
inc
outs
adc
rcl
jb
xor
imul
das
shl
xor
push
dec
mov
mov
sbb
inc
pusha
xchg
or
xchg
mov
jne
xchg
lahf
or
fstp
imul
cmp
xchg
mov
clc
in
dec
push
and
(bad)
push
add
or
mov
push
dec
aaa
pop
push
push
inc
retf
xor
out
jle
mov
repnz
repz
sub
in
out
xchg
cmp
jl
inc
jne
or
inc
addr16
bound
icebp
or
add
popa
adc
pop
xor
sbb
jecxz
data16
(bad)
xlat
ss
pop
lods
push
dec
sub
js
fucomip
xor
xor
ret
xchg
dec
fdivr
push
adc
cmp
cli
sbb
ins
xchg
jbe
push
test
imul
xor
jns
pop
dec
mov
cdq
imul
retf
pop
out
lods
fild
pop
mov
pop
(bad)
popa
retf
into
jmp
xchg
sbb
jmp
xchg
pop
jne
and
xchg
js
cs
js
repz
add
pop
push
enter
sti
(bad)
jmp
sub
sub
mov
fisttp
jne
jne
frstpm(287
mov
inc
pop
(bad)
(bad)
mov
neg
jbe
push
mov
pop
mov
inc
jecxz
popa
jmp
fadd
cmps
sahf
mov
add
fdivr
pop
scas
inc
pop
cs
sbb
int
push
dec
cmc
mov
mov
jp
pushf
mov
jnp
mov
add
stc
leave
mov
sbb
ss
or
test
dec
sub
sub
adc
cmp
in
push
mov
iret
pushf
mov
movs
xchg
hlt
jp
in
and
fisub
xchg
sub
sti
ret
(bad)
mov
cmp
pop
xlat
cmps
popa
mov
shl
mov
imul
sbb
shl
pop
dec
xor
cmc
inc
pop
sub
mov
fwait
scas
mov
cdq
ror
jmp
dec
push
adc
test
lock
sbb
xlat
sbb
cli
push
cmp
mov
mov
shl
cmps
cmps
dec
stos
adc
adc
add
and
les
ficom
stos
xor
sub
push
mov
fld
adc
jae
icebp
xor
pop
xchg
cmp
lahf
(bad)
mov
outs
sub
fld
xchg
icebp
clc
(bad)
cmp
or
mov
out
sar
xchg
lahf
or
and
xor
or
loopne
mov
ds
cmp
jnp
clc
inc
cmps
mul
dec
sahf
adc
pop
sub
push
pop
xchg
inc
jb
mov
idiv
idiv
sbb
cmp
adc
jecxz
adc
xchg
fs
mov
inc
jp
out
cdq
mul
bound
inc
sbb
sub
outs
xchg
test
fdivr
xchg
outs
sbb
xchg
add
rol
sub
add
xor
ficom
sar
iret
adc
sub
ins
pop
addr16
sbb
pop
out
push
rcr
and
inc
iret
adc
fwait
scas
dec
aam
fdiv
push
xor
jnp
mov
mov
lds
cdq
adc
mov
call
cmp
movs
sbb
mov
pop
dec
sub
or
js
jb
cmp
enter
imul
stos
movs
mov
dec
sub
add
mov
test
sub
xchg
or
in
cmp
jns
clc
push
dec
mul
test
je
lods
movs
mul
std
push
dec
mov
xchg
push
daa
loope
xchg
mov
inc
loope
jle
sub
and
in
mov
jge
jno
mov
and
inc
cmc
push
sbb
push
aaa
popf
push
jbe
pop
xchg
into
es
xor
xor
or
scas
pop
repz
pop
pushf
or
adc
lea
inc
mov
test
dec
pop
and
mov
js
push
inc
adc
movs
push
jno
mov
push
and
aaa
xchg
iret
cwde
sbb
popa
in
test
pop
lds
cmps
jb
js
cmc
out
add
xlat
lods
call
(bad)
sub
repnz
dec
fcmovnbe
fimul
sbb
push
jae
movs
fsubr
stos
dec
pop
push
arpl
jl
and
jge
imul
imul
sub
and
shr
push
jne
movs
sar
jne
or
mov
imul
push
ret
push
add
fsubr
dec
sub
sbb
cmp
cmp
and
cmps
popa
movs
div
movs
dec
push
das
sbb
cdq
add
pop
rcr
push
xchg
cdq
adc
je
fwait
mov
adc
and
out
jg
jmp
mov
xor
cmps
div
lock
sbb
mov
(bad)
movs
popf
push
xor
adc
imul
icebp
ins
pop
stos
inc
sbb
dec
dec
sub
mov
retf
jbe
aam
inc
repnz
pop
sub
dec
int
stc
mov
aam
and
mov
scas
movs
(bad)
stc
adc
mov
sbb
mov
call
add
call
and
ret
sub
mov
pop
pop
fs
cmp
jb
in
pushf
mov
mov
js
add
fstp
pushf
shr
sub
bound
xchg
mov
mov
pop
and
lods
mov
cmps
inc
dec
retf
sub
dec
jmp
inc
hlt
fmul
sub
mov
mov
mov
sub
call
cdq
xor
lds
jg
fcmovb
xchg
mov
lahf
ds
pop
pop
lods
push
loope
loope
adc
or
mov
clc
mov
adc
add
das
push
out
add
aam
mov
adc
clc
(bad)
stos
retf
(bad)
test
jmp
sbb
push
xchg
add
gs
imul
js
aam
dec
add
xor
dec
arpl
loop
cli
sub
xchg
sahf
push
ret
(bad)
fwait
adc
push
retf
jbe
sub
iret
rcr
popf
push
mov
push
pop
cmps
js
icebp
sbb
and
out
cld
xchg
dec
mov
add
cmc
xchg
push
loope
fldz
dec
imul
mov
push
scas
xchg
mul
jo
pop
cmc
adc
mov
lods
pop
arpl
dec
jnp
into
dec
dec
sub
ret
cmc
or
jle
or
in
mov
rcr
inc
jbe
xlat
inc
popa
mov
cmp
out
out
add
xor
xchg
shl
sub
adc
lea
leave
xchg
pop
dec
repz
or
test
out
mov
lds
dec
sahf
out
pop
test
xor
pop
not
mov
cmp
pop
xor
adc
inc
dec
cmps
ins
push
arpl
dec
jns
sti
iret
scas
adc
nop
cmp
pushf
sti
je
mov
ret
ins
int3
push
lods
cmp
stos
cmc
adc
jecxz
outs
adc
stos
add
or
jmp
in
(bad)
in
mov
fdivr
jecxz
dec
(bad)
jl
fiadd
inc
pop
shl
sub
xor
fsub
call
lods
pop
cdq
xor
mov
jmp
aam
retf
and
fs
cmp
and
ficomp
mov
hlt
or
dec
jno
mov
mov
addr16
and
mov
dec
inc
push
add
ja
sbb
sbb
scas
mov
test
loope
mul
pop
ins
jmp
xchg
push
xor
scas
and
mov
jnp
daa
stc
jno
jl
sahf
cmp
cmp
xchg
out
jmp
in
leave
pop
mov
mov
xchg
dec
ret
std
icebp
jb
dec
xor
test
retf
adc
fcomp
cld
shl
jmp
mov
jecxz
pusha
fstp
cdq
retf
mov
mov
sub
cmp
mov
cmps
arpl
pushf
pop
pop
imul
cwde
pop
dec
out
mov
lea
je
mov
outs
xchg
(bad)
nop
les
mov
call
mov
imul
or
inc
mov
cmc
push
dec
out
xlat
es
pop
jg
sti
xchg
dec
xchg
mov
sub
iret
push
test
cmp
inc
pop
pop
jecxz
ins
dec
and
lahf
pop
mov
adc
aaa
daa
mov
js
pop
sub
inc
mov
ret
dec
pop
mov
icebp
aas
cs
mov
les
stos
repz
call
cwde
stos
push
movs
popf
rcr
gs
lds
jmp
push
sahf
fbstp
in
push
std
mov
cmps
mov
add
icebp
pop
ins
add
push
and
call
ret
xchg
mov
mov
ret
test
lahf
pop
inc
in
test
or
cmp
or
jne
rcr
cli
sub
push
sbb
push
push
ds
or
sub
dec
pop
inc
xor
(bad)
sbb
pop
cmps
mov
adc
mov
cli
daa
cld
std
ret
lods
pop
fcomp
sub
add
xchg
shl
(bad)
(bad)
imul
sahf
sbb
repnz
fisttp
xor
in
jae
(bad)
(bad)
adc
push
movs
test
inc
jle
loope
cdq
sub
aam
jae
call
add
popa
jecxz
addr16
or
stos
sbb
aaa
dec
mov
fbld
jg
es
mov
adc
jb
mov
test
mov
sbb
cmps
mov
repz
shl
data16
arpl
mov
mov
xchg
cmc
(bad)
ins
out
ret
jno
shl
prefetch
dec
pop
into
test
cwde
mov
adc
jo
iret
mov
cwde
push
add
mov
cli
and
popf
or
dec
mov
lods
pop
ror
pop
addr16
xor
mov
pushf
sub
mov
xor
push
add
adc
xchg
sub
or
out
inc
bound
fcmove
dec
mov
jmp
pop
popa
movs
sub
inc
cmp
mov
leave
shl
jns
retf
int
unpckhps
pop
ins
inc
mov
lds
xor
xchg
pop
cmp
cmp
xor
cmp
ja
mov
rcl
dec
(bad)
lods
hlt
and
mov
arpl
and
mov
cmc
add
ins
(bad)
cmp
jecxz
push
adc
scas
inc
mov
push
xor
nop
int
ins
add
mov
sbb
test
mov
lods
adc
mov
icebp
and
(bad)
mov
jg
pushf
test
mov
(bad)
jbe
clc
push
mov
push
cdq
iret
popa
cmc
aas
mov
adc
in
xchg
sbb
push
sub
or
les
shl
stos
jg
clc
inc
pop
dec
loopne
je
fwait
push
fldcw
fwait
ret
arpl
shr
(bad)
mov
retf
jne
rcl
sahf
dec
shr
cli
jo
cmc
and
mov
fistp
ffree
jl
adc
in
xor
(bad)
and
sti
pop
daa
xchg
int3
loopne
lods
and
pop
push
jae
mov
inc
data16
inc
or
iret
add
fwait
sub
addr16
dec
aad
adc
mov
arpl
mov
mov
gs
jmp
aas
or
jbe
adc
or
mov
retf
xchg
pop
fidivr
and
mov
adc
(bad)
sti
inc
cmp
test
sbb
out
loop
scas
pushf
dec
jmp
int3
mov
pusha
shl
fcmove
in
adc
and
pop
adc
out
jp
scas
frstor
lods
mov
pop
call
sti
push
out
fisttp
sbb
inc
shr
imul
push
xchg
push
pop
xor
sbb
in
call
aam
stc
lods
sbb
or
(bad)
int3
or
jns
cdq
stos
arpl
aas
cmp
lods
xor
out
cmp
cli
sub
mov
and
jno
fwait
loopne
dec
les
pop
xchg
mov
fsubrp
jl
outs
arpl
mov
push
xchg
push
ds
xor
lea
push
sub
sub
xor
xor
cmc
retf
push
aam
mov
fcmovb
adc
xchg
stos
cli
lods
pop
cdq
dec
mov
jmp
push
inc
ja
outs
xchg
dec
lods
sbb
fsqrt
inc
lods
pop
adc
dec
test
sbb
sub
test
clc
fild
mov
aas
repz
add
mov
push
int3
outs
stos
cld
mov
pushf
jl
inc
clc
adc
addr16
nop
and
add
call
cld
jno
nop
xor
jnp
inc
jecxz
mov
mov
(bad)
mov
lea
(bad)
js
loopne
data16
sub
ret
push
lea
fist
add
push
xor
mov
repz
cmps
xchg
xor
mov
imul
jp
jbe
and
push
pop
aad
mov
xchg
xor
out
sar
in
repnz
hlt
out
dec
shl
and
xchg
movs
call
cmp
dec
jns
out
cli
inc
xchg
test
mov
cmps
and
jecxz
lock
loop
in
add
in
popf
push
jbe
add
pop
cwde
mov
jge
test
push
out
fcomp
test
mov
leave
pop
xor
aas
xchg
mov
addr16
popf
mov
data16
or
das
xchg
push
xor
out
retf
call
push
iret
ret
xchg
dec
lods
das
xchg
xor
fnstenv
xchg
push
stc
ins
std
repnz
sti
icebp
ret
mov
cmps
jbe
outs
jle
lods
mov
inc
mov
sbb
jmp
fstp
sar
xor
leave
in
stos
dec
mov
fbstp
and
jle
sbb
mov
xchg
sar
ret
push
jmp
push
jmp
lock
ss
and
cmp
lock
jmp
lds
push
and
push
push
std
(bad)
ds
mov
and
arpl
std
cli
(bad)
pop
test
out
rcl
mov
scas
imul
sti
imul
nop
daa
mov
sti
sub
add
xchg
mov
pop
bound
jle
enter
add
mov
mov
hlt
mov
(bad)
cwde
xlat
xchg
sbb
in
xor
ds
jno
out
mov
movs
retf
cmps
pop
jge
add
pusha
sbb
cmc
add
jmp
loopne
dec
dec
sub
xchg
xor
pop
lods
std
adc
xor
stos
shl
das
push
fist
inc
aas
in
lock
adc
loope
fcomp
mov
aas
push
loop
pop
dec
jae
xor
in
jmp
arpl
out
dec
ret
xchg
jne
pop
adc
jae
lea
add
mov
push
cli
or
cs
out
aas
push
ja
sbb
lods
adc
xor
fiadd
cwde
push
fmulp
add
jne
in
sti
xchg
jp
out
sub
nop
inc
ins
pop
imul
adc
pop
shr
jns
aaa
or
pop
and
sub
fisub
outs
test
loope
xchg
mov
(bad)
pusha
and
enter
xchg
sub
lock
fsub
cmp
and
sbb
test
or
jl
das
jmp
sbb
or
test
out
sub
fs
adc
or
ins
jg
mov
mov
and
push
dec
add
fnsave
sub
cmp
or
aad
out
jmp
jmp
adc
out
(bad)
std
out
ror
or
pop
mov
dec
push
cbw
fnstsw
outs
xchg
stc
add
call
jmp
xchg
ja
cmp
sub
cmps
add
dec
inc
out
or
retf
dec
mov
jge
int3
(bad)
loope
pop
pop
add
sub
daa
dec
jle
movs
and
cld
mov
mov
stos
push
or
cmp
(bad)
push
ficom
and
gs
xchg
cmps
pop
fist
out
stc
cmps
push
xchg
dec
mov
out
stos
dec
fmul
mov
out
pop
and
cmp
fadd
jnp
mov
fwait
mov
das
dec
or
jp
inc
adc
int
inc
sub
dec
xchg
xchg
in
data16
sub
ret
es
or
mov
xchg
ds
and
push
push
lods
xor
out
cmp
add
sub
ret
inc
adc
pushf
aad
jns
xor
and
fnstsw
cmps
push
icebp
mov
or
loope
sub
pop
stos
xor
mov
jmp
cwde
mov
das
stos
pop
cmp
fsubr
jno
leave
push
push
push
out
cmp
aam
cmp
dec
pop
pop
push
adc
push
das
sub
std
push
xchg
sbb
lahf
mov
fidivr
mov
jo
sahf
loop
cdq
mov
and
sbb
cs
imul
push
rol
je
adc
(bad)
fnstenv
repz
mov
leave
or
pop
bswap
mov
xor
xor
mov
in
cmp
lock
bnd
fnsave
jae
sub
outs
mov
adc
pop
cmp
call
cmp
and
retf
jno
rcl
in
popf
cmp
jb
and
sub
(bad)
out
fdivr
mov
xchg
aam
adc
xchg
cs
scas
mov
push
mov
jg
pushf
pop
leave
mov
inc
in
call
xor
repnz
std
test
clc
jp
inc
push
bound
jae
xor
or
dec
push
fsubr
mov
pop
out
fiadd
push
and
jo
pop
and
or
ror
cs
add
push
xchg
push
inc
xchg
cs
test
aaa
shl
ja
shr
jle
repnz
enter
je
push
push
loope
pop
push
xchg
adc
sub
add
jg
mov
test
push
mov
xchg
mov
das
jmp
(bad)
(bad)
mov
and
lods
lods
mov
xor
int3
clc
and
(bad)
int3
xchg
data16
dec
dec
sub
push
push
ins
push
dec
xor
push
xlat
xor
pop
rol
cdq
xchg
pcmpgtw
push
(bad)
imul
rol
je
push
pop
pop
lahf
push
bound
in
dec
repz
xchg
ins
sub
test
fsub
jne
les
cli
ja
retf
gs
and
into
jmp
cmp
jne
cld
pop
sub
call
rcr
dec
stos
and
data16
repnz
leave
cmp
mov
push
inc
out
sub
loope
bound
sahf
cmc
pop
adc
inc
or
xor
jnp
pop
dec
retf
sahf
inc
popa
fldenv
jns
cmp
cmps
mov
adc
add
in
cld
sbb
lahf
and
mov
iret
xor
(bad)
cmc
pop
hlt
mov
xchg
idiv
adc
inc
sahf
and
cmp
mov
int3
lahf
nop
(bad)
cs
add
fsub
push
cmp
jl
xchg
in
cmp
retf
retf
test
idiv
jecxz
lea
cmps
mov
in
call
loope
outs
mov
jle
mov
mov
sar
cld
fist
in
or
sbb
sub
jb
mov
iret
lock
push
or
xor
in
ins
mov
jne
jno
mul
dec
gs
and
cdq
add
and
std
mov
xchg
ret
out
retf
sbb
call
outs
pop
dec
mov
add
(bad)
cmp
dec
jl
sbb
adc
xor
sbb
cmc
dec
pop
sahf
pop
mov
xchg
retf
pop
mov
pushf
inc
or
and
sahf
std
push
icebp
sbb
dec
and
xchg
clc
and
mov
shr
pop
lods
cmp
cmp
or
pop
les
dec
and
aad
shr
addr16
(bad)
fnsave
jae
movs
lock
out
rcl
and
pusha
mov
out
xor
ins
mov
dec
pop
mov
adc
xor
pop
ins
push
adc
adc
idiv
pop
adc
mov
test
iret
mov
xchg
sbb
mov
rcl
mov
subps
mov
mov
mov
mov
enter
inc
ret
and
test
sub
and
or
mov
push
adc
pop
sub
cli
sahf
ret
add
aam
mov
jecxz
pop
ror
dec
add
or
inc
retf
fwait
ret
mov
loop
ss
or
inc
push
stos
mov
inc
add
or
ins
sub
inc
dec
dec
popa
(bad)
lea
(bad)
mov
pop
mov
push
(bad)
fbstp
(bad)
pusha
ds
or
fst
iret
cmps
xor
cmp
jl
mov
add
fisubr
pop
cli
hlt
aaa
outs
cmc
xor
jge
cli
and
pop
cmp
mov
push
cmp
stc
jg
sbb
add
or
ret
hlt
mov
and
les
addr16
std
icebp
adc
fcomip
repnz
or
push
xor
xchg
and
mov
sub
test
pop
lods
push
jnp
leave
and
(bad)
jbe
rcl
repz
or
or
fcmovnu
pop
sbb
stos
repnz
arpl
outs
(bad)
mov
sahf
enter
stc
add
push
and
mov
(bad)
jo
call
mov
cmp
in
jo
test
and
adc
std
cmps
mov
std
retf
mov
adc
sti
cwde
mov
in
rol
outs
aaa
test
icebp
cdq
push
xor
jo
xor
in
xlat
sub
jle
(bad)
cld
pop
test
dec
jmp
pop
out
pop
mov
xchg
or
jnp
(bad)
iret
cmp
ins
cld
dec
mov
xchg
add
clc
xor
add
test
aad
dec
sahf
shr
das
mov
or
jns
repnz
arpl
test
sub
stc
call
fcom
xor
div
push
inc
dec
ins
imul
adc
neg
push
push
inc
mov
xor
clc
movs
mov
test
test
jae
(bad)
out
and
ret
sub
mov
sbb
lahf
hlt
adc
or
push
pop
out
xor
mov
fisttp
fmul
push
sahf
clc
retf
aas
mov
call
and
loopne
push
cmp
ret
pop
addr16
(bad)
rcl
int
movs
call
push
sub
push
mov
xchg
xchg
pop
add
ror
push
call
scas
dec
loopne
xchg
jnp
mov
gs
mov
ret
pop
inc
fcom
mov
cmp
jb
leave
pop
xor
sbb
sbb
hlt
or
and
sub
and
addr16
out
xchg
xchg
xor
push
and
in
sub
jb
or
scas
push
sbb
push
dec
hlt
cmc
ds
jmp
xor
xchg
xchg
jb
sbb
adc
dec
push
xchg
hlt
dec
jmp
jnp
dec
test
pop
pop
out
into
leave
andps
push
pop
setns
aam
pusha
jnp
aaa
push
xor
cmp
ins
cmp
xor
js
retf
push
xor
outs
cwde
icebp
gs
(bad)
jg
jbe
js
cmp
je
sbb
std
push
js
push
je
adc
mov
loop
xor
shl
jnp
xchg
outs
int
aas
es
inc
sub
xor
mov
jmp
jno
lahf
rcr
adc
ss
mov
xor
xchg
mov
dec
mov
xor
cli
push
je
dec
sub
test
outs
stc
inc
mov
push
test
xlat
movs
fwait
dec
retf
sub
push
mov
mov
mov
pushf
add
cld
dec
cmc
test
loopne
je
popf
sbb
aaa
ds
push
mov
test
test
in
sar
das
add
jl
stos
jne
inc
lods
aaa
push
push
mov
push
jg
ror
jbe
lea
ss
data16
ins
mov
test
jne
add
inc
ins
jae
cdq
add
dec
mov
ficom
dec
sub
test
aad
xor
adc
xchg
shl
cmp
inc
int
xor
xchg
fadd
jns
or
adc
fs
xchg
add
jle
mov
test
inc
stos
inc
pop
f2xm1
and
jg
xor
mov
and
dec
sbb
and
inc
(bad)
push
sbb
outs
push
movs
mov
sbb
lods
mov
gs
mov
xor
cmp
sub
push
loopne
and
loope
xchg
pop
sub
mov
out
and
push
cmp
ja
jle
imul
stos
fucomi
adc
arpl
xor
and
add
icebp
push
es
sbb
cmp
pusha
jge
pop
ins
add
inc
jns
pop
sti
inc
inc
out
fcos
push
inc
aad
int3
cdq
mov
pop
lods
adc
dec
sbb
cld
add
xlat
fst
dec
and
xchg
add
ins
fs
enter
xor
fcmove
cdq
jg
xor
jmp
xlat
pushf
scas
test
outs
cmp
jmp
ror
inc
push
jae
jae
je
mov
jle
cdq
inc
cli
mov
xor
and
cdq
fist
dec
mov
jae
loopne
xchg
adc
in
or
xchg
int
popf
sub
loop
vshufpd
leave
pop
mov
clc
sti
retf
push
jmp
in
sub
adc
xchg
xor
inc
and
sbb
loope
mov
and
call
repz
add
test
lea
cld
sub
call
sub
sub
pop
in
hlt
loopne
or
or
add
loope
or
leave
movs
xchg
adc
sbb
repnz
mov
stc
mov
test
ret
push
inc
nop
dec
adc
cld
lods
pop
data16
mov
(bad)
div
imul
mov
cmp
xchg
out
in
sub
xor
out
sbb
enter
push
ror
add
cs
lahf
jno
(bad)
(bad)
aaa
js
pop
pop
mov
dec
dec
push
aas
xchg
lahf
cmp
jns
push
push
lea
fnstenv
arpl
ficomp
jmp
loop
(bad)
ds
es
sub
inc
mov
xor
pop
test
xchg
std
jb
mov
scas
ret
ret
mov
addr16
cmc
dec
inc
and
sbb
sbb
mov
cmp
cmp
mov
dec
(bad)
(bad)
pop
inc
jge
fucomip
mov
movs
sub
sbb
mov
cli
ja
(bad)
sti
jae
adc
mov
add
cmc
mov
sbb
cmp
mov
scas
xchg
and
jmp
jo
adc
sbb
mov
push
adc
sbb
gs
push
push
sub
loop
add
dec
sbb
mov
and
cmps
loop
xchg
push
imul
and
fstp
stos
out
add
add
pand
es
hlt
jp
aad
pusha
jl
loop
inc
jecxz
shl
shl
mov
leave
xor
add
lods
arpl
arpl
mov
xor
dec
test
(bad)
mov
hlt
jl
and
aaa
shl
jge
sbb
cmps
loop
stc
mov
scas
mov
mov
scas
inc
les
inc
push
push
or
mov
inc
loope
fwait
pop
(bad)
push
jno
mov
sar
inc
nop
in
jnp
js
call
out
push
cld
fidiv
mov
push
mov
sar
mov
jno
push
stc
add
imul
cmp
les
xchg
rcr
pusha
(bad)
dec
fucomp
into
shl
push
and
cwde
inc
push
icebp
dec
pop
sub
in
sbb
adc
push
je
aad
xchg
jne
mov
sub
sbb
dec
ja
(bad)
sub
imul
ins
lods
div
mov
sahf
or
mov
xchg
push
xor
loop
dec
jle
and
xchg
scas
pop
mov
cli
sbb
leave
and
movs
pop
cmp
mov
xor
sub
inc
mov
push
repz
fisub
xor
cmp
in
mov
faddp
push
leave
pop
xor
or
movs
out
bound
fldcw
jnp
or
xchg
out
push
push
mov
addr16
cmp
aas
ss
jb
xor
cmc
mov
adc
retf
mov
cmp
sbb
jmp
(bad)
out
dec
add
xchg
jbe
das
in
mov
lock
inc
sbb
lahf
fimul
lea
sbb
mov
fcmovne
movs
inc
mov
aas
(bad)
pusha
jmp
in
icebp
dec
aam
mov
repnz
loope
xchg
dec
sub
aam
int3
mov
iret
bound
(bad)
out
dec
jg
fdiv
(bad)
dec
sbb
(bad)
cmp
xchg
fiadd
jno
movs
imul
push
int3
fcmovu
(bad)
sbb
and
xor
repz
sub
fcomp
lea
sar
adc
add
lock
pushf
addr16
adc
js
arpl
mov
popf
sub
fisttp
or
lods
scas
shr
xchg
jl
xchg
lods
mov
mov
mov
fs
push
ins
push
or
jp
aam
mov
dec
aam
sbb
push
adc
xor
aam
jl
lahf
ins
push
mov
ror
scas
sub
pushf
cmp
pop
adc
jge
add
mov
inc
adc
add
or
xchg
mov
xchg
xor
pop
out
mov
xchg
scas
nop
data16
mov
imul
mov
jl
dec
imul
push
push
xchg
mov
pusha
fmul
aaa
push
sbb
ret
call
inc
cmp
xor
nop
and
xor
mov
pushf
push
push
or
cmp
dec
js
mov
dec
mov
xchg
shl
int3
adc
xchg
sbb
in
test
and
jbe
mov
xchg
jmp
stc
cmp
jmp
mov
xor
outs
mov
and
xchg
add
jle
in
sub
pop
pop
popf
xchg
fcmove
bound
lods
inc
push
mov
sub
dec
sti
shl
shr
and
bnd
pop
sbb
out
fwait
adc
cld
add
pop
lds
fdivr
cmp
add
test
aam
lods
adc
mov
cs
stos
sbb
mov
test
adc
mov
sbb
daa
data16
or
icebp
hlt
cli
sti
dec
rcr
sbb
outs
int3
add
call
fisub
pusha
outs
jo
stos
push
dec
addps
pop
cmp
xchg
xchg
retf
xchg
pop
pop
ins
xchg
aaa
push
cli
jmp
leave
or
xchg
mov
cmp
mov
enter
(bad)
pop
dec
jl
sti
xor
mov
dec
pop
and
daa
fbstp
xchg
icebp
pop
xor
out
test
xchg
adc
in
mov
push
pop
xlat
jo
inc
faddp
cmp
pop
mov
mov
jbe
imul
leave
push
xchg
sub
outs
lds
adc
sub
not
stc
jmp
push
stos
xor
jmp
nop
imul
cmp
xor
xor
adc
sbb
add
and
loop
icebp
aas
fsubr
sub
jl
cmp
icebp
adc
mov
inc
fsub
cmp
jmp
(bad)
ja
mov
push
and
js
mov
cmp
inc
or
cmp
push
bound
ss
pop
lods
frstor
popf
or
mov
lds
mov
mov
xchg
sub
out
ret
jg
rcl
jle
ret
ja
mov
pop
scas
mov
imul
out
sahf
loope
sub
and
xor
sbb
loope
nop
sbb
imul
and
mov
das
xor
cwde
subps
push
imul
sahf
imul
inc
xchg
stc
stc
or
push
ret
push
stc
(bad)
cdq
sub
das
clc
and
les
xchg
add
les
nop
push
icebp
scas
cmp
mov
inc
loope
(bad)
stos
inc
icebp
dec
stc
sub
inc
(bad)
mov
retf
cmp
jnp
adc
mov
aaa
lods
xor
lock
rcl
test
cmp
or
pop
cdq
add
push
scas
fisub
pop
setl
and
xor
test
clc
jno
retf
std
lods
popf
jle
push
sub
enter
dec
les
sub
sub
and
test
les
or
ds
fld
mov
es
cmp
adc
mov
xlat
mov
adc
mov
rcr
mov
sbb
xchg
sbb
jmp
bsf
dec
xor
cmp
dec
jo
stos
push
stc
mov
cmps
push
aas
js
test
push
jecxz
popa
xchg
dec
adc
jmp
pop
push
adc
aad
mov
cmp
fild
shl
aas
(bad)
stc
sub
cmps
js
mov
push
mov
das
xor
xchg
neg
pusha
mov
cmp
idiv
int
or
pop
cli
repnz
ret
js
sub
mov
psubq
jmp
xor
repnz
mov
pop
in
outs
mov
scas
sub
iret
xchg
ja
daa
push
adc
or
gs
cdq
xchg
jge
mov
mov
xor
pop
movs
xor
or
out
and
outs
mov
dec
(bad)
xchg
fcmovnu
and
sub
cmp
rcl
xor
ret
or
or
xchg
(bad)
mov
mov
loopne
add
dec
push
jp
shr
(bad)
cwde
fisttp
(bad)
pop
and
and
mov
shr
sub
adc
(bad)
jae
aad
adc
xchg
shl
inc
retf
sbb
shr
hlt
retf
push
lods
scas
push
je
int3
xchg
mov
cmp
push
push
in
jno
sub
fmul
push
out
push
outs
ins
daa
jg
jle
(bad)
sbb
lds
pop
dec
adc
pop
add
mov
lods
leave
(bad)
jecxz
ret
sub
dec
popf
imul
leave
out
mov
test
push
pop
mov
lods
loopne
sahf
sahf
fs
pop
ins
inc
add
addr16
xor
sbb
mov
ds
movs
movs
jg
aam
ror
fs
daa
repz
nop
sbb
sahf
pop
lods
push
aas
rcr
xor
sub
and
ret
mov
ret
and
jge
cmp
ret
sub
inc
xchg
cmp
aad
mov
sar
adc
mov
popa
pop
sahf
mov
repnz
fidivr
xchg
adc
sub
adc
jg
ret
add
leave
jmp
or
or
xlat
xchg
lods
cmc
call
pop
(bad)
out
fisubr
das
push
or
inc
xor
sbb
add
or
scas
mov
jmp
add
xor
mov
cdq
out
jle
or
adc
jmp
(bad)
mov
popa
int
push
sub
mov
sbb
jle
sbb
push
mov
(bad)
xchg
gs
daa
je
imul
sub
and
push
cli
mov
icebp
loope
not
std
lds
add
int
xchg
or
jg
dec
xor
(bad)
adc
mov
pop
push
lea
xor
int
mov
(bad)
sbb
fcmove
xchg
xor
repz
arpl
out
xchg
xchg
popa
add
mov
enter
(bad)
ror
push
lock
dec
xchg
ret
sub
jle
jmp
mov
and
rcl
(bad)
nop
mov
adc
jle
inc
jg
add
arpl
sub
(bad)
add
repz
lahf
stos
sbb
push
cmp
inc
mov
add
(bad)
xlat
repz
mov
aaa
aad
je
movs
(bad)
dec
dec
js
mov
imul
add
fs
call
jae
dec
or
cmp
je
dec
add
stos
push
jl
push
sub
fsub
xor
jo
xchg
pop
rol
cmp
je
push
rcr
lea
test
je
push
in
mov
xor
jmp
push
mov
hlt
ja
ror
js
xchg
dec
cmp
(bad)
push
inc
mov
mov
shr
add
arpl
movs
out
mov
test
jp
sahf
push
nop
mov
pushf
dec
mov
sub
inc
mov
cmps
leave
xchg
jmp
and
xor
push
lods
pop
dec
cdq
pop
pusha
into
inc
adc
pop
(bad)
icebp
(bad)
shl
sahf
pop
es
cs
jns
sbb
ins
cwde
mov
out
(bad)
mov
sti
iret
push
pop
popf
repz
cmp
es
sbb
xor
mov
push
lods
mov
sbb
jb
pop
mov
in
mov
out
and
mov
or
xchg
dec
cmp
push
pop
xor
pop
(bad)
int
xor
in
inc
shr
mul
int
imul
leave
popf
sub
fwait
test
mov
cmps
mov
or
cli
test
stos
or
adc
and
push
mov
xchg
pop
add
xchg
mov
mov
sbb
nop
lock
jae
in
mov
adc
outs
add
leave
das
sub
movs
enter
push
scas
pop
ins
popf
xor
push
test
xchg
xor
add
out
(bad)
pop
outs
test
mov
call
sbb
je
mov
cld
mov
xchg
les
shr
(bad)
je
addr16
sub
stos
xchg
or
xchg
xor
mov
lahf
fsub
cs
jg
pop
jo
imul
xchg
ror
inc
pop
add
mov
or
jmp
sti
pop
outs
ds
mov
pop
or
or
stos
clc
int
lahf
pushf
dec
call
or
mov
inc
sbb
movs
addr16
or
daa
cdq
dec
mov
lahf
dec
pop
jg
pop
hlt
sbb
daa
push
push
push
sbb
mov
outs
arpl
(bad)
sbb
jmp
push
mov
xor
lds
into
push
ret
enter
and
dec
adc
dec
sub
sub
xchg
add
inc
jmp
ficom
dec
jb
loope
adc
div
inc
xor
arpl
mov
adc
loope
jbe
sub
ds
loopne
sbb
sti
mov
push
cld
popa
jecxz
loop
mov
retf
je
add
ret
iret
inc
add
cmp
stc
push
lahf
or
mov
into
fld
loope
inc
shl
(bad)
pop
jo
dec
data16
pusha
aam
xor
mov
xchg
pop
cmps
lods
pop
push
and
call
cli
push
jmp
sub
fs
lods
xor
imul
sbb
add
cs
jbe
lods
mov
js
out
mov
mul
mov
xor
xor
gs
fadd
inc
stos
xchg
retf
outs
ret
stc
cmp
xchg
xchg
loope
fs
mov
ja
jmp
push
cmc
idiv
jno
icebp
hlt
sbb
jecxz
loope
pop
sub
ds
lea
pop
mov
jg
out
ret
pop
mov
call
cmp
inc
jle
cmps
push
adc
cmp
xor
(bad)
in
cmps
retf
(bad)
into
out
inc
or
xor
retf
hlt
in
inc
(bad)
stc
inc
mov
push
xor
out
aaa
pop
pop
out
fwait
xor
adc
in
pmulhuw
iret
push
int
repnz
push
shr
aaa
loop
mov
lock
lods
sbb
mov
(bad)
cld
scas
adc
sbb
lock
daa
jle
imul
int
(bad)
jge
pop
nop
aas
mov
xor
stc
pop
xchg
iret
in
adc
pop
mov
scas
xor
xchg
push
push
push
xchg
and
mov
inc
xchg
xchg
or
je
retf
(bad)
aad
bswap
fadd
mov
scas
scas
(bad)
xchg
(bad)
cli
or
(bad)
mov
sub
data16
mov
js
in
(bad)
push
pop
inc
inc
sti
cmp
pop
ins
push
(bad)
cmc
pop
mov
outs
sahf
push
xor
jp
fadd
and
xor
ror
das
aad
xchg
hlt
pop
cmp
add
push
fdivr
sar
pop
push
and
mov
mov
cwde
fisub
sub
adc
fwait
mov
fbstp
or
jmp
das
je
mov
inc
mov
mov
sbb
(bad)
lds
pop
mov
pop
cvtdq2ps
gs
push
or
jns
daa
aas
idiv
fld
adc
cmp
div
sbb
xchg
out
mov
and
clc
xlat
mov
push
pop
mov
cvtps2pd
add
pop
or
mov
add
nop
popa
cmp
xor
jge
retf
jecxz
mov
dec
jmp
dec
adc
stos
ds
(bad)
cwde
xchg
out
mov
mov
mov
fdiv
or
inc
mov
push
inc
out
je
je
xlat
arpl
inc
xor
icebp
push
mov
xchg
daa
repz
jbe
lods
lahf
jecxz
test
js
neg
je
xor
xchg
repz
addr16
lock
ret
adc
dec
fcmove
or
das
inc
test
push
xchg
xchg
(bad)
rcl
push
sbb
adc
mov
jp
adc
add
pop
add
ret
retf
aas
jo
les
aad
in
test
sbb
call
xor
and
add
sub
sub
stc
cmp
sbb
sbb
dec
fnsave
fwait
add
sub
sub
out
pop
xor
mov
data16
sar
test
hlt
loop
cmc
mov
outs
xlat
dec
fdivr
ror
xchg
popa
pop
pop
mov
dec
movs
js
sahf
dec
hlt
adc
xchg
xchg
leave
mov
repnz
iret
call
loope
movs
xor
add
or
mov
rcl
mov
out
xchg
mov
cld
into
imul
jmp
xchg
sbb
pop
push
mov
cmp
dec
cmovg
sbb
push
adc
or
adc
jmp
retf
jb
out
gs
popf
mov
aaa
fwait
mov
call
cld
cmp
push
fbstp
sub
out
sti
mov
inc
shr
(bad)
test
sbb
outs
(bad)
shl
xchg
mov
push
je
jne
jmp
cmp
call
cmc
jle
add
jo
addr16
leave
xor
in
(bad)
cmp
bound
(bad)
cmc
(bad)
inc
ficom
into
icebp
outs
inc
mov
cmps
add
shl
mov
bound
mov
or
into
cmp
push
in
call
out
jp
cmp
add
scas
pop
pop
int
jo
dec
pop
cdq
aad
push
add
add
mov
outs
xchg
fstp
adc
sahf
popf
cmp
outs
sub
mov
aaa
(bad)
repz
or
ins
je
stos
push
push
xor
mov
xlat
nop
dec
ret
jecxz
cmp
rol
inc
xchg
pop
add
idiv
xor
xor
mov
lds
in
xchg
mov
movs
out
or
retf
mov
clc
jae
jmp
sti
outs
cmps
adc
add
mov
jle
out
add
push
stos
or
inc
mov
shr
pushf
mov
jbe
mov
icebp
bnd
pushf
stc
bound
test
or
lea
pop
dec
popa
pop
cmp
mov
mov
mov
call
pop
in
sahf
and
test
mov
loop
out
push
pop
gs
cli
xchg
push
add
cmps
ins
mov
mov
sbb
xchg
scas
arpl
lahf
jbe
in
in
imul
inc
push
pop
imul
push
ds
test
cmc
shr
mov
imul
lea
sbb
and
fldenv
mov
fcom
jmp
in
cmp
jae
int3
or
pop
or
and
xor
retf
(bad)
adc
cmp
push
popa
mov
in
dec
push
or
repnz
jae
in
xor
loope
mov
or
push
and
lods
xchg
test
or
in
js
mov
inc
xchg
lock
call
and
jmp
mov
and
int3
ds
dec
fist
add
xor
leave
push
jno
jo
jnp
inc
test
ins
fs
iret
jl
retf
fadd
pop
or
div
js
scas
call
sbb
punpckhbw
pop
sub
sub
jb
jb
ret
or
cmp
dec
dec
jne
retf
icebp
in
int3
mov
icebp
or
sar
pop
adc
xchg
mov
jns
jge
fs
xchg
call
lock
ins
pop
sub
xor
jecxz
push
or
add
add
fs
cmp
jbe
sbb
mov
int
mov
addr16
outs
and
lds
push
mov
shl
pop
out
in
(bad)
jmp
int3
fsub
cs
int
pushf
xchg
arpl
add
push
lods
sbb
movs
mov
rcr
or
aam
mov
(bad)
or
push
and
outs
pop
call
popf
adc
gs
xchg
xchg
lods
test
add
out
stos
loope
dec
pusha
outs
scas
lds
imul
push
push
cmp
jecxz
pop
adc
xor
imul
repz
inc
aaa
push
xor
dec
pop
cmp
stos
push
or
inc
lock
and
xor
loope
dec
or
popf
imul
mov
data16
sbb
sti
add
into
pop
sub
push
int
sti
inc
jmp
sub
pushf
mov
neg
(bad)
dec
loopne
cmp
rol
dec
sub
scas
cmp
out
mov
aas
clc
or
jne
jge
lea
or
push
xchg
popf
pop
sub
push
aad
jbe
fiadd
sbb
fist
inc
xlat
shl
cmp
push
and
push
std
pop
adc
dec
stos
jae
push
add
add
adc
push
ins
xchg
in
xchg
ja
jne
lods
or
fmul
rcr
jb
sub
xchg
adc
mov
lds
xor
rcl
int3
jg
fs
scas
or
call
cdq
adc
and
int
sbb
movs
inc
pop
repz
in
out
outs
aaa
jmp
inc
das
(bad)
lea
js
ror
pextrw
sub
sub
hlt
sub
xchg
mov
xchg
icebp
imul
xor
ret
pop
pop
and
jg
add
(bad)
dec
das
outs
les
retf
jb
adc
pop
loope
or
pushf
test
(bad)
fimul
outs
out
adc
mov
out
push
movs
inc
test
jg
push
push
cmp
imul
es
and
xchg
push
and
cwde
push
fidiv
dec
ds
jg
or
pop
retf
jg
mov
mov
jbe
std
movs
ja
cmc
shl
push
and
mov
pop
sbb
xor
sbb
pop
sbb
movs
imul
cmc
mov
dec
icebp
out
jmp
std
lahf
add
mov
sub
push
jae
sbb
popa
inc
imul
outs
hlt
push
inc
push
cdq
push
inc
sti
pop
fmul
jno
push
pop
push
ins
iret
ins
or
cld
(bad)
ins
into
jne
push
stc
jp
mov
inc
cmp
enter
add
mov
add
outs
lds
jo
int3
imul
pop
or
xchg
stos
in
push
sbb
mov
fnstsw
xor
pop
ins
outs
push
cwde
fimul
test
leave
jbe
push
inc
loop
mov
add
mov
into
sahf
xlat
xor
and
int
rol
test
inc
loope
jne
test
jne
cmp
arpl
pushf
and
fwait
dec
mov
or
(bad)
mov
das
cmp
ins
test
mov
jg
push
adc
jne
ds
les
lods
nop
mov
out
xchg
ret
lea
inc
cwde
int3
(bad)
popa
mov
mov
xor
jb
cmovg
jmp
sti
arpl
fiadd
popa
icebp
lahf
daa
adc
clc
push
fcom
test
(bad)
call
ds
retf
jns
ins
or
and
and
xor
jbe
push
or
xchg
add
jo
mov
(bad)
xchg
or
mov
add
mov
(bad)
icebp
cmp
mov
pop
sub
jle
addr16
inc
cmp
pop
jmp
or
xor
je
lods
push
inc
mov
mov
cwde
adc
shl
inc
ror
mov
retfw
add
dec
daa
inc
lds
cmp
fsub
mov
pop
js
mov
jl
imul
jge
push
push
adc
leave
shr
or
sub
mov
sub
cmp
out
add
out
movs
push
(bad)
sub
push
cs
movs
rcl
sbb
inc
pop
and
loopne
push
cmps
adc
add
cmc
cmps
mov
mov
dec
inc
loop
mov
inc
loop
and
sahf
add
dec
fist
jne
jp
movs
or
jbe
js
movs
cmps
push
jo
pop
xchg
rol
outs
cmps
add
cmc
pop
cmp
mov
adc
xchg
les
les
ja
lahf
inc
mov
xor
sub
rol
xor
sub
aaa
jae
es
jge
and
enter
(bad)
cmps
lea
adc
cmc
jl
scas
mov
jne
pushf
int
in
cmps
mov
push
xchg
adc
sbb
aad
fwait
jmp
loope
cmc
test
out
mov
fwait
and
adc
mov
push
leave
test
xor
push
cmp
pop
push
jbe
retf
mov
aam
imul
(bad)
or
outs
or
push
in
sbb
ins
xchg
cmp
sti
push
add
ret
or
or
stc
ficomp
sub
jecxz
(bad)
and
pop
push
mov
fisubr
sub
movs
fdivr
pop
jae
fistp
es
nop
in
mov
adc
leave
push
andps
mov
jb
in
pop
call
int3
push
push
mov
or
mov
inc
xchg
int3
xchg
add
push
imul
retf
int3
and
fldcw
aaa
push
push
in
adc
(bad)
mov
jmp
mov
jg
int
call
add
fdivr
out
xchg
mov
sbb
push
push
out
loope
aas
jge
and
sahf
adc
movs
mov
adc
in
in
cmovne
jmp
jecxz
inc
fadd
mov
pop
mov
repnz
inc
jne
movs
outs
loope
jnp
in
(bad)
mov
call
add
push
fcomi
adc
in
jmp
sub
nop
xchg
fstp
ret
jne
fnstsw
scas
adc
imul
add
lock
retf
enter
ret
mov
jle
lock
or
lock
shl
push
jne
or
mov
mov
(bad)
and
mov
loop
push
xchg
mov
outs
ret
jne
xchg
mov
jnp
(bad)
xor
pop
sbb
dec
test
xor
xchg
pop
pop
push
push
cmp
push
les
pop
ss
repnz
xchg
test
sub
movs
push
ss
pop
inc
cmp
or
retf
(bad)
iret
not
out
cmps
rcl
lock
setbe
es
popa
xor
mov
mov
inc
sub
in
ret
or
icebp
rcr
dec
es
dec
hlt
aad
push
or
xchg
in
add
mov
and
push
mov
push
imul
imul
cmp
jle
or
mov
daa
cli
pop
sub
loop
push
aad
int
inc
fdivr
push
push
add
jg
in
in
outs
mov
aaa
cmp
push
sub
aam
pop
dec
or
jns
rcl
int
dec
fist
sbb
mov
test
jmp
imul
dec
add
repz
xchg
pop
adc
sbb
cmps
pop
test
retf
(bad)
push
mov
cwde
stos
fiadd
sbb
iret
leave
inc
lea
pop
sbb
xchg
fstp
ja
retf
xor
and
icebp
pusha
jae
sub
mov
xchg
cmp
mov
jo
std
push
es
xor
cld
jmp
jmp
cs
mov
dec
adc
js
sti
mov
sbb
cmp
rcr
stos
and
repnz
lahf
xchg
or
aas
xchg
mov
mov
mov
nop
das
icebp
add
push
aad
in
cmps
inc
stos
ret
ret
mov
adc
outs
or
pop
push
mov
jnp
cmps
inc
xchg
sub
or
hlt
jg
repnz
inc
xchg
icebp
ret
(bad)
add
test
dec
(bad)
in
or
int
push
jae
pop
cmp
in
std
cmps
cmp
push
std
pop
mov
add
sbb
inc
push
dec
and
sub
pop
jle
imul
sbb
mov
pop
out
fimul
sbb
in
ja
jp
ds
cdq
test
or
xchg
sbb
jne
mov
and
sub
(bad)
pop
and
mov
(bad)
jnp
lahf
sub
xor
push
cmps
movs
mov
mov
cmp
call
cmps
mov
jmp
xchg
aam
dec
push
cmp
data16
lods
push
cmp
lea
call
outs
mov
ss
xor
mov
push
pop
and
mov
dec
pop
mov
jg
ins
and
test
xchg
repnz
fwait
add
gs
xchg
mov
aas
add
test
push
cmp
movs
pop
aad
ins
je
sbb
ins
mov
add
arpl
jo
cmps
xor
test
aam
or
into
data16
out
mov
out
lods
xchg
adc
js
(bad)
pop
cmp
dec
pop
dec
jnp
lock
mov
rol
jp
lds
(bad)
inc
(bad)
push
mov
(bad)
js
push
jmp
push
jecxz
call
jg
data16
jbe
push
jmp
fist
jns
mov
ret
bound
cmps
test
lds
inc
add
dec
mov
test
sub
xchg
ret
fwait
cmp
repnz
jmp
jb
(bad)
mov
nop
sub
(bad)
mov
popa
push
and
jmp
or
inc
je
dec
pushf
mov
mov
loop
in
imul
xor
int3
mov
test
inc
sub
mov
loop
or
out
and
not
ja
bswap
sub
xchg
mov
mov
cwde
adc
jb
push
and
cmp
lahf
in
in
cld
jmp
adc
pusha
fs
dec
loope
sbb
popf
ror
test
call
dec
mov
mov
rcl
sub
mov
aam
or
iret
cmp
sahf
xlat
and
repz
aad
mov
ret
test
enter
test
addr16
dec
xchg
test
scas
adc
mov
mov
das
xor
rol
inc
iret
jp
out
lds
int
push
(bad)
cld
test
jmp
mov
jl
push
std
(bad)
test
dec
ss
dec
scas
jns
in
adc
lock
cmp
mov
jmp
cmc
xor
in
aaa
mov
addr16
mov
pop
and
sbb
test
sbb
arpl
lods
mov
test
addr16
adc
cmp
sbb
sub
js
inc
push
lea
and
leave
cmp
fld
mov
sbb
push
xchg
sub
sub
pop
mov
ret
hlt
pop
outs
gs
pop
pop
mov
cmp
not
dec
inc
push
sbb
mov
pop
pop
outs
loop
jne
dec
call
xchg
test
mov
movs
(bad)
mov
add
(bad)
hlt
mov
inc
lahf
dec
inc
pop
pop
daa
(bad)
jmp
xchg
fcomip
dec
lods
arpl
xchg
inc
fcom
movs
mov
aas
or
(bad)
mov
aam
test
or
mov
daa
fwait
xchg
das
jecxz
out
add
js
mov
dec
fist
jle
retf
adc
dec
push
or
jns
pop
pop
inc
mov
xor
xchg
(bad)
adc
into
sahf
cwde
bound
cmp
dec
loop
retf
lods
cmc
and
out
sub
and
pop
scas
xchg
es
xchg
test
pop
and
xchg
adc
fdiv
std
ins
mov
fsub
sbb
jmp
xchg
cmp
inc
loopne
stos
and
shr
outs
imul
fnstenv
in
call
mov
imul
jns
frstor
in
test
mov
clc
sahf
sub
test
jp
jb
mov
dec
clc
push
(bad)
cli
movs
imul
cmp
stos
or
aaa
inc
xchg
lock
cld
sub
mov
js
(bad)
sbb
ror
adc
int
jge
dec
fst
lds
call
pop
push
push
push
pop
jno
mov
ficom
inc
xchg
inc
or
mov
mov
mov
les
fcmovnbe
xchg
mov
jp
sub
push
xchg
sbb
pop
ret
test
ret
sbb
dec
mov
mov
mov
ret
sbb
hlt
sti
pop
icebp
mov
gs
mov
push
stos
outs
cmp
pop
je
push
outs
xor
jg
add
out
addr16
push
mul
out
mov
jmp
cmp
gs
out
inc
sub
jmp
mov
movs
sub
test
enter
pop
cli
out
push
mov
jle
xchg
xor
xchg
mov
pop
ins
sub
mov
movs
jp
inc
cmp
add
mov
mov
add
inc
mov
xor
pop
dec
or
fs
push
sbb
lods
dec
jae
loopne
adc
addr16
xchg
adc
loop
add
rol
sub
push
shl
jge
xor
dec
aas
dec
add
xor
nop
dec
pop
mov
popa
jmp
add
nop
movs
or
sbb
jl
lods
outs
or
out
mov
mov
dec
std
push
cmp
mov
and
(bad)
mov
jl
push
cmp
pop
sbb
add
loop
pop
pusha
fimul
push
jmp
and
enter
int3
test
mov
sub
adc
aam
(bad)
(bad)
jne
dec
retf
cld
add
dec
jecxz
dec
jge
jb
jg
adc
xchg
imul
mov
inc
push
sub
adc
inc
gs
mov
aas
jbe
xor
iret
fs
add
or
les
adc
bound
pop
in
test
sbb
xchg
lods
das
les
fcomp
std
sub
idiv
mov
mov
push
lds
add
xchg
scas
jbe
lods
dec
and
sub
pop
xor
lds
nop
cmp
test
sbb
in
jbe
add
mov
dec
loope
cmp
mov
js
and
aad
sbb
mov
xor
ret
cmp
add
pop
test
jae
lods
pop
adc
not
mov
or
in
in
aaa
rcr
sbb
fcom
(bad)
std
cmp
adc
pop
cs
loop
mov
mov
fdivp
leave
fild
and
pop
jmp
mov
enter
fwait
daa
stos
xchg
pop
sub
imul
clc
ins
and
(bad)
in
dec
mov
xchg
xchg
loop
fcomp
xchg
sbb
jp
cs
ret
repnz
shr
into
xchg
rcl
jno
sbb
lea
cwde
mov
mov
es
mov
js
sub
adc
and
in
fisttp
fwait
push
test
pop
or
jo
sbb
test
dec
out
jne
mov
add
das
test
sub
pop
rcl
add
or
xchg
(bad)
cdq
call
mov
pop
daa
mov
xchg
xor
push
dec
inc
retf
(bad)
ss
scas
data16
imul
test
popa
xchg
scas
sbb
and
xor
loopne
pop
mov
push
sbb
aam
dec
je
rcr
fwait
jae
and
fs
sbb
push
int
gs
imul
cmp
sub
jmp
movs
ins
push
add
push
or
retf
vpaddusw
movs
cmc
das
push
cmc
lock
pop
pop
test
add
or
inc
mov
(bad)
adc
repz
adc
fidiv
mov
cmp
mov
fidivr
call
add
jmp
or
mov
test
das
cdq
call
jl
push
mov
push
dec
jo
dec
pop
push
imul
ins
(bad)
aad
outs
sub
les
icebp
inc
push
out
ins
add
mov
add
xchg
pushf
mov
iret
push
ror
cmp
inc
push
mov
cmp
cmps
mov
pop
xor
cmp
sahf
fninit
mov
inc
xor
dec
ja
cmp
fxam
jmp
add
popa
ja
ja
jae
cmp
xor
add
movs
mov
or
mov
je
cdq
inc
mov
mov
add
call
pop
fld
pop
dec
push
aaa
stos
sti
icebp
imul
sub
xchg
xor
xchg
fist
in
sub
sbb
inc
out
mov
hlt
pop
bndldx
lahf
mov
inc
(bad)
mov
repz
xor
ror
nop
xchg
or
push
add
sbb
pop
inc
jmp
idiv
enter
pop
pop
add
jbe
sub
clc
por
dec
push
cmc
es
ja
icebp
lahf
mov
inc
push
call
sbb
lahf
xchg
or
sub
mov
jl
xor
test
leave
jns
mov
dec
in
xchg
cmc
jle
pop
pushf
inc
ror
stos
into
loop
sbb
cmp
in
push
cmp
mov
add
enter
aaa
sbb
aas
lds
jmp
sbb
pop
inc
(bad)
jp
in
hlt
push
in
lock
pop
stos
pop
ret
cmp
call
in
pop
hlt
fidivr
ss
xor
pop
leave
ror
cli
sbb
cmp
ror
xor
aaa
xchg
dec
jg
scas
dec
mov
mov
xchg
clc
xchg
out
ins
mov
enter
push
(bad)
addr16
dec
test
push
jle
into
test
cli
dec
xor
mov
in
mov
jmp
jbe
fsub
cmp
xor
mov
jecxz
push
ss
pop
adc
stos
pop
inc
jnp
pop
inc
xor
int3
test
(bad)
(bad)
xor
and
xor
add
daa
xchg
cli
xchg
dec
pop
loope
cdq
arpl
inc
hlt
in
sub
test
aad
sahf
dec
add
or
pusha
neg
rcl
bound
cmp
dec
dec
into
mul
cmp
rcl
fistp
outs
fnstsw
rcr
mov
dec
or
cmp
pop
jne
or
adc
ficomp
inc
jns
mov
and
jns
push
hlt
inc
pop
mov
iret
rol
cli
adc
shl
jb
dec
jo
fistp
mov
sbb
cmp
cmps
mov
mov
cmps
inc
cmp
and
das
and
cmc
pop
jmp
jns
mov
or
loop
mov
mov
lods
sbb
dec
mov
data16
ss
jecxz
xchg
std
adc
int
or
push
mov
sub
movs
data16
ret
sub
es
int
leave
fsub
inc
mov
jmp
xor
push
push
dec
les
test
addr16
sub
movs
inc
popa
push
scas
sub
xchg
mov
and
add
xchg
mov
xlat
pop
imul
ss
addr16
jns
pop
test
fild
and
jo
xor
gs
jge
jg
out
push
movs
and
retf
mov
(bad)
addr16
mov
sub
in
lds
xchg
or
mov
(bad)
fdivp
(bad)
sbb
mov
repnz
pop
push
jne
fisubr
jp
and
aaa
iret
pushf
mov
push
lods
enter
cld
outs
ror
xor
test
movs
out
jbe
test
jnp
cmp
pop
adc
mov
mov
cdq
sbb
aas
aas
jb
shl
dec
sbb
mov
and
shl
es
pop
int3
mov
and
test
or
dec
les
sbb
popf
out
mov
fisttp
cmps
sub
(bad)
jp
std
inc
hlt
loope
adc
adc
cmp
ror
mov
mov
cmp
xor
adc
jmp
mov
jp
mov
mov
int
xchg
fmul
popa
sbb
xor
mov
aas
shr
out
and
stc
(bad)
in
shr
sbb
in
jge
mov
cmp
(bad)
sub
jle
and
(bad)
mov
push
push
pusha
test
retf
mov
adc
dec
and
jmp
xor
data16
mov
xchg
nop
mov
repz
add
out
stos
scas
sbb
icebp
cmc
and
ficomp
ficomp
mov
pop
push
mov
rcl
mov
pop
ins
sar
jle
cld
mov
jmp
lock
and
mov
bound
test
jp
enter
inc
ret
push
hlt
push
inc
cs
xchg
fisttp
mov
(bad)
jecxz
pop
jb
mov
fdivrp
jmp
sar
adc
cmp
sbb
push
mov
sbb
in
jae
(bad)
mov
and
imul
jmp
psubq
push
push
adc
or
pop
jmp
not
xchg
mov
jns
loope
dec
xchg
xchg
add
(bad)
out
adc
(bad)
cmp
sub
ins
dec
imul
jae
push
dec
dec
add
jmp
dec
mov
ret
inc
or
sub
push
stc
mov
mov
add
xchg
pop
lahf
dec
das
mov
mov
mov
gs
lahf
iret
xchg
sub
dec
mov
fist
shl
push
cs
cmc
aas
pusha
in
mov
or
dec
xor
xor
pop
das
xor
push
cwde
repnz
mov
jp
data16
and
push
dec
adc
and
jnp
xchg
(bad)
cli
jmp
fst
or
inc
test
aaa
add
mov
or
jnp
nop
adc
jge
mov
xchg
loopne
(bad)
call
adc
pop
cwde
pop
lods
adc
inc
jl
cli
cmps
inc
test
movs
ins
adc
sub
lds
dec
xchg
cwde
jb
push
cmc
jbe
mov
inc
sub
add
test
scas
(bad)
push
stos
scas
fidiv
sbb
dec
lods
or
xor
sar
bound
xchg
loopne
les
mov
adc
jle
stos
push
push
ror
aad
scas
fadd
call
test
pusha
pop
aad
sbb
jg
outs
inc
cwde
push
mov
and
xchg
mov
dec
(bad)
stc
xlat
hlt
scas
xor
retf
cmp
mov
and
jp
das
loop
int3
jmp
jg
popf
inc
jno
push
hlt
dec
dec
add
cwde
ins
push
and
adc
xchg
pop
pop
fwait
cmps
aas
xor
scas
pop
cld
cmc
jg
inc
pop
mov
pop
and
cmp
icebp
push
cmp
stos
add
fld
das
imul
xchg
add
sub
xlat
sub
add
xlat
pushf
push
sbb
sub
dec
test
mov
adc
gs
mov
mul
(bad)
adc
das
loope
test
in
cmp
(bad)
jmp
ss
retf
ds
jbe
loopne
and
popa
dec
(bad)
(bad)
pop
mov
adc
jmp
mov
push
xchg
or
adc
retf
xchg
xlat
fild
das
jg
push
mov
and
pop
leave
das
push
int
mov
ins
cmp
les
ins
jp
add
jb
mov
rol
mov
jle
pop
les
mov
imul
and
rol
out
cmps
jnp
lock
adc
inc
adc
outs
mov
dec
mov
out
mov
mov
bound
out
js
and
jle
fwait
stos
stos
xor
mov
push
jb
fild
call
sub
push
nop
cs
mov
shr
inc
popa
and
push
ja
xor
dec
ds
(bad)
mov
fwait
ss
shl
aaa
adc
shl
dec
shl
sub
test
fnstsw
mov
lock
inc
jnp
std
loopne
js
and
add
arpl
mov
mov
push
cmp
inc
xor
mov
pop
cmps
fwait
ror
mov
outs
pusha
adc
std
mov
push
ret
push
xchg
mov
mov
mov
shl
add
sbb
jae
pop
pop
mov
icebp
add
rcr
daa
inc
jns
cmps
cmc
pop
ins
cmp
aas
cmc
push
adc
jno
mov
js
sbb
or
bound
or
lock
je
push
movs
inc
movs
popf
test
xchg
(bad)
inc
xchg
int3
mov
arpl
sbb
fcmove
(bad)
or
push
sub
sub
or
dec
inc
test
add
shr
mov
test
jmp
sbb
xlat
dec
fcomp
add
jb
xor
into
jge
popf
sub
jmp
jno
(bad)
(bad)
inc
adc
xchg
scas
mov
inc
in
add
sbb
adc
dec
add
adc
and
addr16
sub
in
mov
rcr
mov
out
test
scas
mov
mov
pusha
imul
xchg
outs
addr16
or
pop
or
or
test
pop
mov
push
addr16
cmp
push
sub
in
xchg
lock
call
lahf
fs
ret
mov
jmp
rol
imul
call
or
or
add
push
scas
add
popf
ins
push
mov
cmp
fwait
pop
cdq
jecxz
mov
cmp
rol
mov
retf
push
jecxz
and
ds
xor
and
pop
in
or
retf
ficom
dec
mov
and
pop
inc
es
call
mov
jmp
push
sub
or
cld
inc
jmp
push
mov
mov
repz
test
cmp
push
sbb
lock
mov
arpl
lea
jns
clc
leave
mov
sub
push
icebp
sub
jle
nop
leave
mov
cmp
mov
adc
jo
mov
imul
add
hlt
lock
aad
icebp
mov
mov
call
cmp
pop
addr16
mov
ret
ja
lahf
mov
push
cli
test
mov
das
repnz
call
mov
inc
push
lock
pop
mov
sti
add
fld
xchg
iret
xchg
dec
inc
push
push
mov
sbb
scas
rcl
jb
movs
lock
ret
push
mov
xor
adc
or
icebp
aam
jmp
idiv
dec
call
ret
dec
xchg
add
mov
pop
xlat
(bad)
repnz
sub
dec
and
cmp
(bad)
pop
aaa
daa
and
shl
inc
jl
mov
push
jmp
adc
mov
xchg
rol
call
retf
inc
sbb
movs
mov
pop
jle
popf
lock
and
sub
sbb
leave
push
mov
adc
mov
jge
stos
inc
std
cmp
jb
sub
xor
mov
scas
cmp
push
loope
(bad)
scas
and
dec
mov
mov
or
inc
out
cmp
cmp
sbb
retf
inc
sub
add
push
jecxz
xor
sub
pushf
xor
(bad)
fdiv
out
fdiv
inc
sar
(bad)
daa
into
cmp
or
cmps
(bad)
fisub
sahf
jle
jb
add
sbb
push
pop
xor
mov
mov
mov
in
pushf
cdq
adc
or
ins
inc
xor
fstcw
cmp
and
push
push
pop
jne
nop
xchg
je
cmp
dec
leave
and
(bad)
ss
pop
and
sahf
mov
bound
cmp
and
jnp
cmps
rol
movs
dec
fs
or
adc
ins
adc
ja
icebp
(bad)
mov
mov
mov
ret
push
adc
mov
bound
rcl
mov
push
add
ret
sti
dec
push
dec
xor
aam
int3
jb
push
stc
outs
sbb
(bad)
inc
test
lock
xchg
mov
sbb
fst
stos
mov
out
in
lock
repz
sbb
sbb
xchg
mov
nop
xchg
mov
and
inc
lods
ins
aam
fdivr
aad
xchg
es
push
mov
push
fadd
sub
lods
fldenv
jb
ins
fcmovu
lods
lea
test
aam
mov
mov
jle
lods
xchg
into
cmp
xchg
loope
(bad)
jno
sbb
outs
xchg
ins
cmp
adc
arpl
sbb
pop
mov
out
shr
repz
sbb
adc
pop
in
scas
(bad)
pop
outs
fmul
xor
xchg
jne
adc
jl
cli
retf
jbe
pop
sub
or
aam
push
or
or
mov
mov
adc
fld
cmps
cmp
push
sbb
push
mov
jecxz
lds
ins
hlt
mov
or
retf
mov
retf
out
xchg
mov
mov
aas
loop
mov
repz
out
shl
hlt
mov
sub
(bad)
pop
push
ins
inc
jne
adc
inc
pusha
retf
cmp
test
push
or
cmp
sub
push
loope
int3
inc
ret
ret
jg
add
xor
xlat
sub
fwait
inc
inc
popf
inc
sbb
adc
cmp
mov
aad
xchg
sbb
push
ror
add
jae
cmc
lea
xor
jo
or
fwait
scas
std
dec
imul
ss
cmp
arpl
and
dec
scas
push
rcl
call
inc
adc
mov
mov
test
rcl
sub
inc
popf
int3
popf
mov
pop
out
mov
hlt
adc
sbb
lods
nop
ds
sbb
sub
jmp
mov
adc
data16
(bad)
push
dec
nop
fs
cmp
mov
xchg
pop
push
dec
fst
and
sbb
daa
jl
(bad)
sub
lds
dec
enter
inc
imul
(bad)
retf
add
pop
(bad)
mov
add
bound
xlat
mov
mov
mov
outs
leave
das
aad
(bad)
xor
sbb
aam
in
call
mov
or
jge
fidivr
inc
mov
retf
and
lock
in
es
mov
(bad)
xor
adc
movzx
aad
push
pop
shl
nop
dec
inc
push
(bad)
cmps
outs
jo
pop
adc
out
movs
inc
rcr
test
mov
mov
sahf
pop
aad
push
std
ins
or
movs
xor
pop
mov
(bad)
neg
push
icebp
add
jns
sbb
adc
icebp
js
loope
movs
jmp
mov
(bad)
es
dec
pop
and
repnz
cmp
xlat
jmp
aam
dec
and
pop
adc
mov
enter
sbb
dec
jmp
mov
shl
inc
pop
movs
sub
loopne
in
cmp
mov
sbb
je
in
paddq
sbb
inc
in
popa
jne
dec
push
adc
mov
cmp
xchg
push
push
pop
out
or
or
xor
mov
fnstcw
xor
retf
rol
mov
ret
in
add
jb
out
fsub
(bad)
xchg
pop
in
or
cmps
add
mov
sbb
mov
cli
retf
push
stos
cmp
mov
mov
add
push
dec
push
jno
or
ins
xor
(bad)
aam
(bad)
stos
jb
adc
enter
mov
and
add
jbe
ret
mov
xchg
sbb
mov
ficom
cs
cmp
jmp
loope
inc
xchg
data16
mov
add
inc
movs
and
mov
js
pushf
push
int3
mov
lods
fisttp
mov
mov
xor
xor
cmps
cli
mov
xchg
das
jmp
into
push
inc
push
rol
clc
fwait
xor
dec
(bad)
fsub
xor
or
and
jmp
dec
sar
mov
lock
fs
scas
test
imul
enter
mov
pushf
lea
(bad)
imul
jae
mov
repz
mov
sar
cmp
es
mov
out
adc
sbb
or
test
push
cmp
jge
pop
cmp
adc
lock
outs
inc
imul
cmp
pop
xor
mov
cmp
jae
call
mov
mov
call
add
(bad)
adc
pop
inc
mov
sbb
ss
mov
jecxz
sub
std
add
push
xchg
or
ins
(bad)
adc
cmp
shl
popa
lea
out
sub
pop
and
xor
pop
clc
fs
(bad)
cmp
xchg
sub
stos
push
cmp
xchg
xchg
mov
rcl
mov
jg
inc
cli
mov
sbb
dec
ret
pop
das
inc
mov
pop
xchg
sahf
and
fmulp
mov
push
dec
fst
mov
aas
jbe
inc
xor
sbb
and
and
mov
mov
lods
and
iret
mov
mov
jae
rol
mov
push
xor
cs
mov
shr
into
retf
mov
scas
dec
add
inc
mov
jne
das
mov
pop
adc
mov
jmp
sub
mov
push
add
(bad)
stos
inc
pop
imul
nop
repz
leave
xrelease
cmp
xchg
push
adc
in
push
call
jbe
lds
cmp
and
xor
and
outs
movs
jae
xor
out
iret
mov
jb
lock
xor
pop
push
aas
bound
mov
push
or
js
test
cdq
inc
retf
fst
or
inc
jae
ds
pop
and
mov
leave
ins
mov
cmp
cmps
call
sbb
mov
shl
jmp
fdivr
fisub
cmp
es
enter
xchg
and
mov
lods
push
push
mov
cmc
fwait
enter
mov
mov
pop
mov
std
arpl
pop
aad
out
dec
loop
shr
in
xchg
sbb
movs
pop
int3
retf
adc
lods
lods
idiv
mov
push
sbb
sbb
mov
mov
xor
jg
dec
inc
mov
xlat
outs
jmp
cmp
adc
test
cmc
outs
fsub
inc
dec
mov
mov
and
dec
xor
xor
mov
outs
es
imul
movs
pop
cmp
adc
pop
scas
push
dec
in
out
repnz
mov
adc
fs
imul
xchg
cmp
cwde
inc
mov
mov
jp
pop
aad
cdq
into
cmp
xor
mov
fcom
or
mov
lds
push
sbb
jg
mov
inc
add
test
shl
ins
loop
rcl
mov
cdq
(bad)
shr
ins
sub
add
or
(bad)
(bad)
jmp
sbb
cmp
aaa
loope
inc
scas
clc
test
jae
in
push
pusha
and
xor
(bad)
addr16
lods
and
jecxz
cmps
cwde
or
or
or
bnd
pop
enter
clc
mov
add
xor
fdiv
loopne
leave
pop
dec
push
cs
rcr
pop
fwait
adc
icebp
cmps
push
gs
int
std
pop
not
or
ds
jno
sub
sub
inc
sti
ficomp
mov
loope
fist
call
lahf
xor
leave
xchg
jg
xor
push
mov
fst
imul
xor
adc
or
out
mov
test
and
xor
jg
or
and
test
int
add
add
fst
inc
mov
mov
loopne
dec
cld
shr
leave
leave
dec
cmps
stos
xchg
outs
cmp
(bad)
fild
xchg
jo
cmps
outs
fsubp
mov
nop
std
ret
jmp
test
add
inc
enter
mov
fisub
pushf
sub
sahf
loope
aad
pop
lods
stos
aaa
cld
xchg
ret
dec
jns
push
cmp
hlt
sbb
mov
mov
and
sbb
(bad)
xchg
call
pop
jle
arpl
fs
mov
loopne
adc
lea
sbb
xlat
cmp
fwait
adc
and
inc
jns
sbb
into
sbb
mov
mov
retf
xchg
inc
pop
fsubrp
lea
pushf
xchg
fsubr
test
or
and
pop
cmp
inc
mov
(bad)
iret
addr16
lods
cmps
dec
fdiv
lods
aas
hlt
jb
add
ret
lds
or
ror
sub
inc
push
add
jmp
inc
aam
jo
test
inc
adc
lods
data16
ror
sahf
and
pop
test
cmc
adc
cli
test
xor
pop
mov
retf
retf
lods
jne
xchg
cld
or
adc
jbe
push
imul
test
add
adc
jmp
ss
mov
cmp
pushf
ret
push
push
mov
movs
cdq
jae
mov
(bad)
fs
(bad)
push
sbb
popa
shl
cmp
int
xchg
and
dec
mov
inc
pop
retf
bnd
push
or
jle
xchg
jp
pop
jae
adc
add
jp
nop
jle
pop
pop
movs
mov
mov
jle
dec
mov
out
add
adc
jmp
jle
xchg
push
adc
adc
cmp
inc
(bad)
icebp
movs
mov
or
sub
jne
ss
adc
mov
popf
jbe
(bad)
in
mov
sub
mov
dec
push
test
and
add
push
imul
mov
adc
dec
push
lds
call
mov
hlt
movs
shl
mov
int3
mov
or
icebp
mov
call
lahf
cmp
add
hlt
cmp
sub
mov
mov
std
ins
dec
xor
mov
xchg
(bad)
not
(bad)
(bad)
stos
movs
mov
cmp
aam
jne
out
cli
xor
js
push
pop
in
outs
hlt
jo
cmp
dec
inc
mov
bound
ins
xchg
out
mov
cli
aad
das
retf
(bad)
pop
cwde
mov
rcl
xor
mov
aam
repz
cmp
xchg
fwait
lods
mov
inc
imul
push
popa
fld
xor
fdiv
sub
enter
adc
movs
loope
or
loopne
fcmove
cli
jge
xchg
(bad)
popa
ret
jmp
pop
rol
xor
mov
jp
icebp
mov
push
and
daa
scas
or
rcr
scas
mov
dec
in
in
repz
xor
cwde
dec
adc
pop
jne
aam
and
push
jmp
push
in
and
neg
xor
clc
push
repnz
xlat
sti
pop
jno
push
call
sti
add
jo
gs
and
fucomi
pop
and
lock
cdq
mov
mov
mov
add
jo
ret
lea
mov
out
jecxz
test
cdq
stos
mov
lock
mov
jmp
jne
push
xor
push
xchg
enter
je
mov
mov
imul
xchg
pusha
add
int
jnp
inc
daa
test
mov
popf
add
mov
or
repnz
retf
mov
imul
pusha
push
push
sar
out
lea
fadd
mov
lods
xor
outs
jbe
and
mov
dec
scas
adc
out
adc
stos
or
outs
imul
mov
lods
retf
mov
mov
(bad)
xchg
mov
test
jne
arpl
imul
xor
and
jmp
and
or
jmp
es
jne
jmp
in
fld
inc
mov
dec
loope
loope
(bad)
mov
mov
pop
packuswb
ins
ss
add
mov
adc
mov
lea
mov
cmp
neg
aaa
(bad)
ins
les
lahf
xchg
call
outs
dec
mov
xchg
vmovaps
in
pop
jnp
les
jno
xchg
mov
sbb
es
and
outs
out
fdivr
sahf
jns
pop
sahf
ds
cmp
cli
xchg
pop
push
sbb
data16
xchg
mov
leave
loope
aam
js
out
push
test
ins
mov
cmp
lds
es
mov
add
pop
mov
or
push
mov
fsub
sbb
sbb
scas
push
fbld
adc
shr
sbb
dec
scas
test
inc
loope
jnp
xor
or
inc
xlat
dec
push
mov
out
dec
into
mov
fstp
mov
xchg
mov
and
inc
stos
aas
jmp
test
push
lods
cmp
(bad)
push
rol
cmp
ss
fwait
in
popf
xchg
dec
fisttp
and
pusha
xor
cld
cwde
xor
loopne
clc
mov
mov
add
sub
pop
dec
jmp
add
dec
or
pop
jns
and
or
pushf
div
jle
popa
add
pop
nop
cmp
aad
cmp
adc
push
dec
mov
mov
push
mov
lods
ror
xchg
ficom
dec
icebp
call
jle
mov
jae
(bad)
jns
xor
sbb
add
push
int
stos
sbb
jbe
lea
fisub
jo
mov
arpl
cld
mov
icebp
in
cs
push
popa
sub
mov
stos
call
cmps
add
xor
cmp
mov
daa
aam
loop
adc
inc
mov
in
mov
cs
push
aaa
jae
xor
mov
pusha
ror
(bad)
int3
push
jae
and
mov
adc
xlat
pusha
push
ins
adc
mov
jp
dec
pusha
stos
push
dec
mov
jmp
inc
addr16
inc
push
xchg
pop
fwait
jae
movs
in
test
outs
mov
jp
les
lds
dec
or
or
(bad)
jmp
xor
rol
push
fisttp
inc
or
dec
add
pop
mov
outs
sbb
test
fdivrp
pop
sti
mov
stc
jg
jbe
mov
cmp
ins
sub
or
sahf
lds
int3
clc
xchg
mov
test
test
mov
xchg
fs
sub
(bad)
sub
push
sbb
mov
stos
fisub
arpl
pop
jp
jnp
mov
jge
dec
pushf
ja
jae
fidivr
leave
pop
push
movs
popf
pop
add
xchg
xchg
imul
test
lock
idiv
dec
push
fdiv
jo
jbe
ins
push
pop
adc
aas
mov
mov
mov
sbb
dec
inc
out
fimul
xchg
arpl
add
neg
push
dec
pop
aas
outs
xchg
mov
test
imul
test
int
sti
push
out
rcr
xor
cmps
inc
jae
popa
dec
loopne
cli
adc
addr16
imul
cmp
ss
adc
jbe
dec
adc
cmp
push
pop
mul
cwde
nop
rcl
(bad)
fdivr
xor
xchg
adc
mov
ja
icebp
js
mov
scas
arpl
cmp
fsub
movs
in
nop
retf
pop
cli
adc
popf
retf
test
or
jno
dec
rcr
cmp
push
mov
push
and
sahf
gs
vpslld
xchg
xchg
xchg
repnz
mov
sub
xchg
jne
jmp
aad
add
jo
(bad)
mov
pop
adc
nop
push
ins
adc
adc
adc
mov
mov
ret
addr16
mov
dec
out
scas
jp
fldcw
mov
mov
sbb
mov
xchg
jmp
mov
dec
cmp
mov
push
aam
sub
mov
xchg
push
lods
aaa
pop
(bad)
scas
sbb
fistp
push
dec
movs
gs
xchg
call
add
pusha
add
shr
gs
cmc
pop
imul
neg
rcl
call
mov
xchg
not
xor
push
mov
or
or
mov
mov
out
dec
xchg
cli
or
movs
inc
adc
xchg
ins
pop
scas
out
(bad)
mov
mov
sbb
xor
cmps
mov
maxps
out
xor
pop
shl
add
int3
test
lods
ins
data16
pop
sahf
(bad)
int3
pushf
add
mov
nop
dec
popf
cld
xchg
les
or
inc
jmp
mov
(bad)
push
repnz
xor
sbb
jmp
aam
call
mov
jecxz
lds
pop
retf
sahf
retf
jne
pushf
pop
cld
adc
shl
stos
stos
je
mov
mov
jnp
pop
and
aad
lock
pusha
and
push
add
mov
repnz
das
(bad)
cmp
dec
jns
cmp
movs
aas
(bad)
test
jmp
pop
mov
cmp
pusha
inc
clc
icebp
sbb
outs
adc
mov
adc
mov
leave
test
and
add
aam
ss
call
popf
mov
dec
loop
mul
mov
jp
ds
gs
inc
neg
fimul
in
lahf
cmc
push
enter
adc
cmp
div
rcl
fisub
ins
fs
ja
ja
push
rcl
mov
rol
sub
adc
xor
push
cmp
neg
lahf
xor
mov
mov
push
cwde
mov
push
mov
out
daa
dec
fcom
ss
dec
repz
lock
and
sahf
dec
in
adc
mov
inc
dec
aas
sbb
out
push
aad
inc
popf
sbb
sbb
push
cmp
lock
jns
movs
mov
mov
jns
xchg
test
cld
inc
add
mov
adc
mov
scas
mov
gs
repnz
hlt
(bad)
and
cmp
cmp
in
sti
sbb
das
mov
jae
mov
mov
std
pop
sbb
in
jmp
fidiv
sbb
push
and
xchg
rcr
dec
add
fst
repz
movs
xchg
cld
cmovae
push
mov
push
out
into
scas
ds
fcomp
sbb
sub
jmp
xor
stos
test
pusha
shl
call
mov
clc
(bad)
es
pop
add
call
dec
push
push
cmp
scas
sar
inc
les
out
inc
aam
jge
std
sub
jmp
sub
aad
and
cwde
ins
xchg
neg
int3
call
push
(bad)
sub
cmp
push
in
(bad)
jge
mov
dec
ins
int3
int3
mov
and
mov
sbb
jmp
and
loope
cmc
repnz
int3
test
cmp
sbb
leave
gs
gs
fistp
mov
leave
int
ror
push
mov
mov
pop
sbb
das
cmp
mov
dec
sbb
ret
(bad)
cli
or
xchg
lods
in
adc
in
ss
lods
js
xor
cmp
pop
xor
pop
jns
ja
(bad)
xor
aam
nop
jno
cmps
fcomp
and
push
xchg
ins
arpl
sub
sub
in
and
mov
lds
not
fwait
dec
sub
adc
xchg
add
test
add
lea
repnz
xchg
pop
xchg
(bad)
scas
mov
es
sbb
xchg
mov
in
(bad)
call
popa
aas
xchg
push
loopne
and
out
add
repnz
repnz
mov
and
in
lds
or
(bad)
cmp
fst
sub
xor
mov
and
sbb
adc
loop
gs
pushf
movs
repz
pop
jb
or
or
ins
movs
add
out
test
mov
(bad)
fdiv
adc
pusha
and
cmc
sbb
push
and
adc
cmc
and
outs
mov
jg
repz
sub
mov
push
pushf
fndisi(8087
popf
sbb
inc
xor
dec
dec
pop
test
mov
in
push
pushf
sti
sbb
mov
cmp
push
or
sbb
push
mov
push
and
push
test
adc
jg
cmp
in
idiv
add
or
add
js
cli
out
inc
jns
int
mov
ret
mov
pop
in
stos
dec
hlt
stos
test
xor
pop
std
and
in
test
inc
dec
or
jb
push
daa
jl
mov
sahf
mov
retf
push
jne
sbb
pushw
mov
out
mov
cmp
data16
loopne
out
pop
mov
les
xor
push
out
xchg
pop
std
aas
push
outs
daa
add
inc
fwait
xor
daa
mov
std
and
ins
sbb
mov
push
sti
or
jmp
stc
cwde
push
call
call
xor
invd
jnp
push
xchg
jge
mov
test
and
ret
repnz
shl
xor
lahf
enter
mov
push
fs
loop
fwait
fwait
shl
sar
inc
mov
xor
inc
shr
aam
outs
rcr
jo
lods
xor
pop
push
jecxz
fisubr
lods
loope
aad
inc
arpl
hlt
push
mov
ins
sub
push
(bad)
nop
psadbw
je
and
sub
ficom
clc
popa
mov
jp
and
(bad)
bound
mov
adc
cmp
das
or
add
inc
aam
imul
fnstsw
sar
jge
xor
mov
or
daa
xlat
mov
cmc
std
dec
gs
or
jmp
pop
ins
in
scas
inc
sub
mov
aad
iret
or
xor
test
nop
fs
dec
mov
sub
jge
push
mov
inc
aad
ficomp
xor
lahf
fidivr
cmps
idiv
adc
rcr
adc
mov
clc
clc
mov
pop
jmp
icebp
xor
fxch
add
test
pop
mov
mov
jbe
inc
je
cmps
repz
xlat
jno
movs
or
add
jno
adc
lods
jl
mov
push
xchg
and
je
lea
out
stos
xchg
sub
xchg
sahf
std
bound
xor
enter
sub
popa
xchg
lods
out
popa
adc
sub
lods
out
dec
or
lea
fild
adc
or
and
jl
loop
mov
inc
fsub
xlat
call
push
je
fs
ja
sbb
je
mov
mov
add
mov
mov
or
push
adc
int
je
enter
lds
in
or
mov
mov
jno
and
aad
sub
test
jmp
fwait
push
loope
add
push
pop
inc
sbb
mov
inc
jge
imul
jmp
xchg
mov
jne
lds
cld
sub
out
lods
popf
test
scas
cmp
lea
out
push
test
xchg
mov
cmp
xchg
mov
aaa
xor
add
popa
jp
lds
jae
dec
fsub
add
sub
xor
sbb
add
cmp
cmps
(bad)
add
jns
mov
lock
add
cld
rcl
inc
inc
ja
and
xor
fwait
mov
lods
cmp
sub
push
ins
cmovnp
sbb
lds
ror
test
cmp
lods
repz
sbb
aam
push
dec
xor
mov
mov
adc
dec
jbe
jne
out
aad
xlat
test
scas
mov
int
scas
jecxz
pop
pop
(bad)
imul
push
push
js
lahf
test
or
or
bound
in
pop
ins
jnp
adc
ds
(bad)
cmp
or
mov
mov
ins
test
shl
retf
pop
add
cs
sti
movs
cmp
adc
aad
xchg
ret
repz
dec
push
movs
lock
xchg
dec
xor
sbb
movs
adc
outs
xlat
popf
sbb
lods
sub
jb
fbstp
scas
in
cmps
aad
push
mov
or
jae
xchg
dec
ret
xchg
das
(bad)
jno
scas
retf
mov
push
cs
imul
xor
jle
xchg
xchg
stos
movs
pop
and
fnstenv
xchg
adc
sbb
fidivr
outs
and
xor
cdq
pop
ret
nop
mov
pop
and
and
push
mov
lds
sbb
fcmovnbe
adc
pop
out
lds
(bad)
stos
out
cmp
in
mov
mov
out
mov
out
inc
push
xor
adc
repz
icebp
pop
sbb
movs
jp
pusha
dec
aas
add
and
int3
and
jmp
inc
and
pop
rol
mov
sub
data16
and
sub
jns
mov
push
jmp
jp
mov
xchg
test
(bad)
arpl
inc
sbb
sbb
adc
sub
add
imul
jle
cmp
fild
loopne
fcmove
dec
jbe
jle
add
xor
aam
jno
retf
jbe
into
xchg
xlat
in
inc
sub
xchg
dec
lods
mov
movs
cmp
test
fcmovnu
arpl
leave
aas
add
int3
push
push
out
mov
xor
js
sbb
adc
xor
clc
add
mov
mov
ret
lods
std
icebp
sti
mov
push
mov
clc
xor
lods
inc
jae
pop
out
rcl
mov
scas
ret
or
je
test
mov
pusha
mov
mov
adc
jnp
(bad)
int3
fcom
jne
jge
leave
push
lea
movs
cli
inc
movs
jbe
dec
(bad)
aad
(bad)
cmp
xchg
cmp
push
adc
(bad)
pop
pop
add
and
jge
push
cmp
or
jnp
rcr
xchg
fmul
lahf
sti
in
xlat
cwde
sub
push
in
sub
into
inc
test
in
push
jmp
in
cmps
iret
cmps
or
out
adc
cmp
outs
mov
retf
sub
enter
dec
in
test
popa
mov
imul
push
push
icebp
pop
mov
sub
or
add
bound
or
neg
cmp
jne
scas
ds
or
jb
ins
and
test
dec
scas
mov
out
adc
mov
stc
jle
sbb
ss
stc
dec
mov
push
loop
ret
fwait
imul
add
cli
jmp
xor
shr
and
push
scas
mov
ins
fadd
test
jns
sbb
movs
cs
xor
dec
inc
pusha
mov
fcmovne
sbb
out
jp
in
mov
cli
(bad)
cdq
inc
rol
dec
or
aaa
and
sbb
out
jp
inc
jbe
sbb
fimul
dec
ds
in
nop
loopne
in
dec
xchg
add
xchg
xor
cli
sub
dec
mov
enter
in
out
and
div
jbe
test
sbb
shl
sbb
hlt
sub
adc
pusha
hlt
test
sub
int3
add
int
mov
hlt
mov
lods
push
add
ret
cdq
push
or
lods
or
sar
push
pop
or
xchg
push
out
sbb
stos
je
cdq
out
out
loopne
sub
cwde
pop
dec
mov
pop
(bad)
fcom
mov
mov
adc
scas
jge
cmovae
dec
and
push
lds
cdq
test
out
pop
and
mov
loop
adc
ret
xor
pusha
mov
sbb
inc
pop
ins
xor
and
pop
sub
ror
pop
xchg
jmp
adc
cmp
add
js
mov
mov
fisub
cdq
mov
cmp
not
jmp
mov
xchg
jb
adc
jle
cli
lock
clc
scas
adc
adc
jns
jp
push
xchg
sbb
ss
fcomp
sub
call
push
cmp
xchg
bound
dec
cmc
mov
push
or
pop
xor
ret
inc
(bad)
aas
pop
and
inc
fisubr
arpl
test
fwait
push
addr16
xchg
xor
mov
mov
mov
es
sbb
jb
data16
hlt
push
cdq
lds
rcr
ds
fimul
inc
xor
and
icebp
ss
dec
stc
and
lods
pop
xor
cmp
pop
icebp
jl
add
clc
jmp
lods
xor
ret
bts
add
jbe
mov
add
clc
std
or
xchg
shl
pop
lock
xchg
cmp
mov
movs
mov
pop
sbb
mov
(bad)
ss
pop
(bad)
adc
mov
cmc
call
dec
mov
push
jno
pop
xor
jge
push
(bad)
leave
js
and
mov
mov
movs
inc
cmc
or
add
mov
and
xor
jecxz
and
stos
jnp
add
inc
aad
fsub
div
mov
xlat
gs
add
add
mov
sbb
jle
pop
mov
or
cdq
dec
ror
retf
cmc
es
jns
mov
inc
(bad)
pusha
ja
dec
into
xlat
(bad)
push
push
in
(bad)
(bad)
out
cmp
sbb
pop
xor
addr16
outs
mov
jmp
repnz
mov
pusha
cmp
sbb
sub
sahf
lds
lahf
inc
or
push
pusha
sahf
adc
xchg
jp
push
push
push
dec
adc
mov
jae
jnp
mov
in
xor
stos
sti
out
cmp
mov
mov
jg
bound
or
js
push
icebp
aad
xor
pop
cs
pop
adc
and
push
call
ror
call
push
jae
pop
cwde
adc
jge
test
dec
cs
jo
xlat
inc
repnz
popf
push
movs
repz
jge
cwde
lea
daa
jp
imul
push
loopne
mov
xor
or
push
stc
jbe
repz
repnz
xor
inc
sub
sub
ja
jb
outs
lea
pop
in
ins
ret
repz
xor
dec
popa
cld
movs
xchg
test
movs
cmp
mov
dec
jb
test
(bad)
(bad)
inc
xchg
inc
push
jo
or
adc
dec
aam
(bad)
push
rcr
repnz
out
sbb
ins
iret
jecxz
call
sbb
(bad)
pushf
pop
xchg
push
aad
loope
rcr
pop
and
xlat
dec
test
loop
cmp
sbb
fdivr
aas
mov
inc
add
dec
enter
hlt
aam
sub
mov
jb
daa
aaa
jp
loopne
sub
inc
pop
fidiv
mov
scas
daa
mov
jecxz
fsub
jnp
scas
rcl
mov
jae
clc
clc
and
(bad)
and
daa
movs
mov
pop
fcomp
dec
inc
xor
sub
(bad)
xchg
and
out
or
fdiv
mov
movs
jnp
arpl
adc
push
(bad)
mov
push
ins
adc
jns
mov
outs
arpl
and
stc
sahf
adc
sbb
add
fbstp
fadd
push
and
push
ficom
inc
jecxz
mov
(bad)
sti
sbb
mov
jmp
lahf
add
adc
fild
jle
cmp
push
sahf
loop
pop
fcomp
ja
sbb
leave
inc
js
push
fistp
mov
or
loop
push
lock
add
lods
push
fcmovb
fcmovnb
lds
loopne
enter
nop
les
stc
loopne
and
fcom
out
int
pop
inc
shr
call
fwait
mov
sti
lea
pop
mov
pop
pop
mov
dec
mov
imul
pop
or
cvtps2pd
add
cmp
jmp
jno
mov
call
sahf
and
xchg
cmp
(bad)
sbb
lods
ret
(bad)
fcmovb
or
sar
or
repnz
dec
jne
mov
nop
js
and
mov
mov
pop
mov
movs
push
dec
dec
loopne
jb
ins
jmp
(bad)
daa
ss
setns
movs
or
xchg
cmp
xchg
(bad)
stos
mov
xchg
test
bsr
cmp
push
imul
push
fcmovne
lahf
imul
imul
popf
loope
mov
jmp
movs
(bad)
mov
das
enter
jnp
jecxz
push
mov
(bad)
mov
icebp
es
ss
movs
xor
sub
pop
xor
pusha
addr16
cdq
and
sub
xor
or
jg
sbb
pop
mov
clc
pushf
jbe
pushf
loopne
cmp
mov
cs
repz
jo
sbb
cmp
test
rcl
jge
rol
mov
push
jmp
or
fdiv
inc
xor
popf
xchg
add
mov
in
add
imul
in
jle
jmp
dec
iret
and
xor
fist
pop
call
xchg
stos
mov
mov
jns
dec
push
sub
mov
push
sub
xor
xor
jnp
jge
jb
adc
lods
pop
adc
ja
sub
fwait
shl
xor
cs
jne
or
aam
mov
cmp
mov
ret
mov
call
nop
cli
ja
int3
retf
cwde
jge
jno
jo
imul
lods
push
mov
or
aad
rcr
test
mov
imul
call
jb
ss
(bad)
shl
dec
xchg
add
jmp
out
frstor
shl
jg
cmp
or
inc
inc
lea
rcr
push
mov
jbe
add
jnp
pusha
sub
les
daa
jns
ret
or
and
hlt
push
mov
ret
popa
push
ins
cmp
shr
pop
add
fbld
mov
mov
pushf
cmps
popf
fadd
adc
out
mov
test
pop
sbb
loope
and
stc
call
cli
loopne
dec
sub
mov
or
les
mov
xor
xchg
mov
shr
xchg
daa
out
arpl
jne
dec
fstp
hlt
dec
cmp
push
loopne
cld
push
cmp
mov
adc
mov
stos
adc
movs
adc
mov
sbb
and
stos
lods
mov
mov
lahf
jne
(bad)
cmp
stos
cmps
adc
lea
aaa
lock
ds
jne
xchg
and
jnp
dec
dec
aad
test
pop
xchg
dec
retf
aad
inc
pushf
or
or
sbb
dec
scas
lods
sub
mov
adc
mov
test
inc
xchg
std
lods
sbb
push
adc
mov
cmps
arpl
jns
and
rcr
cmp
inc
mov
ja
fdiv
out
mov
outs
aaa
inc
mov
adc
xor
sub
sbb
lods
pop
dec
dec
(bad)
dec
pop
(bad)
jne
dec
mov
adc
pop
jbe
shr
sub
xlat
mov
fwait
clc
(bad)
ror
retfw
bound
aam
sub
jnp
xlat
into
mov
hlt
sbb
push
and
aas
cmp
(bad)
stos
outs
pop
out
sub
xchg
pop
and
push
pop
fbstp
pop
popa
pop
mov
repz
sub
in
pop
jo
sub
inc
lock
push
test
test
mov
adc
jl
daa
inc
sar
mov
std
dec
arpl
aad
mov
or
out
inc
pop
xor
ror
test
lods
aam
(bad)
sbb
in
pop
push
cmps
lods
call
xor
pop
xchg
jmp
jmp
jmp
fidiv
cmp
push
loopne
pop
mov
push
js
jmp
imul
xchg
std
ins
add
xor
in
loopne
xchg
add
mov
retf
xchg
cli
test
add
mov
call
js
xchg
push
call
test
jb
or
sti
inc
fisttp
cmps
(bad)
(bad)
push
rcr
add
fidivr
xchg
push
jmp
dec
in
shl
sbb
pushf
enter
jno
push
sub
dec
pop
sub
or
dec
mov
jl
cli
cmp
shl
xor
shr
popf
adc
jb
scas
xor
xchg
adc
xor
retf
add
mov
push
sub
jmp
loopne
call
push
pop
scas
(bad)
or
cmp
push
mov
jmp
xor
arpl
adc
retf
inc
test
lods
and
mov
dec
jecxz
xchg
bound
xor
shr
mov
mov
retf
xor
test
inc
outs
lock
pop
sub
cli
mov
mov
ss
mov
xchg
push
in
push
inc
popa
cmps
jmp
fnstenv
(bad)
(bad)
scas
adc
add
ret
lods
cmp
push
mov
cmc
retf
mov
call
mov
xor
(bad)
sar
outs
(bad)
push
jne
(bad)
loop
jns
hlt
adc
mov
dec
mov
jb
dec
fstp
mov
call
ret
jae
jns
xor
lods
or
aam
xlat
arpl
mov
shl
cli
call
movs
xchg
mov
shr
ds
int
and
jg
sub
jmp
mov
lock
mov
dec
loopne
clc
push
dec
ss
mov
jl
mov
fistp
pop
loopne
dec
int
sub
dec
out
into
mov
pusha
int3
sub
retf
arpl
call
mov
shl
fimul
pop
ja
scas
cdq
and
dec
scas
cmp
inc
inc
xchg
cli
mov
loope
and
mov
mov
xor
xchg
inc
sub
(bad)
xchg
sbb
mov
inc
and
stos
sub
jb
jg
lahf
mov
ds
pop
mov
gs
cmp
scas
aaa
pushf
(bad)
enter
adc
mov
dec
xor
ds
jp
ins
mov
pop
dec
sub
cmc
pop
adc
push
int3
aaa
mov
ret
movs
sub
icebp
sti
sub
cmps
xor
cmps
mov
dec
mov
adc
dec
sub
push
and
jge
mov
out
mov
imul
mov
sub
cmp
inc
aaa
lahf
sar
sbb
jns
dec
fwait
mov
sbb
mov
jmp
inc
rcl
and
(bad)
adc
xchg
jmp
into
mov
mov
adc
pop
mov
adc
les
or
mov
popf
sahf
and
cli
cwde
xchg
mov
icebp
addr16
xchg
mov
mov
mov
leave
popa
sbb
lock
adc
sahf
test
push
mov
and
outs
push
and
xchg
fsubr
mov
call
xor
add
rcl
dec
push
lods
xchg
ret
sbb
inc
add
div
(bad)
in
retf
lds
aad
xchg
dec
and
jns
(bad)
pop
inc
adc
jmp
das
mov
jb
push
xchg
xchg
(bad)
and
cwde
mov
pop
jg
mov
push
add
pop
mov
test
jo
push
push
xchg
(bad)
cmp
dec
adc
scas
jmp
mov
scas
hlt
in
adc
pop
pop
clc
popf
test
repnz
mov
cli
icebp
sub
stc
dec
push
xor
cld
je
int
xchg
jno
add
mov
in
out
adc
xor
test
sar
ret
adc
jns
and
popf
pop
lahf
dec
and
jno
jmp
adc
ins
out
mov
fs
iret
fistp
sub
inc
xchg
mov
and
mov
movs
or
dec
and
xchg
xchg
mov
iret
(bad)
cdq
ret
adc
xor
sbb
call
(bad)
push
pop
fxch
pop
xchg
jg
push
mov
push
adc
nop
fs
add
add
push
sbb
cmp
add
sbb
aam
retf
dec
aas
not
mov
shr
pop
cmc
push
adc
jle
movs
clc
ins
jne
(bad)
inc
sar
popa
mov
xor
jecxz
inc
push
jno
in
ins
imul
sub
inc
sbb
inc
mov
inc
sub
jge
mov
lods
adc
outs
sub
cmp
mov
pushf
js
mov
mov
jmp
cmp
cld
adc
or
cmp
adc
jp
fwait
iret
jle
jnp
jne
mov
cdq
mov
pop
push
xor
sbb
retf
icebp
pop
neg
shr
outs
aas
cdq
cld
or
inc
xor
enter
lods
aas
cmc
shl
imul
data16
aas
clc
out
dec
jle
xchg
test
push
ds
pop
aas
(bad)
xor
mov
call
mov
or
jnp
loope
scas
mov
sub
mov
mov
lods
retf
popa
aas
mov
sub
mov
mov
leave
fwait
jecxz
push
rcr
add
pusha
adc
rcl
xor
out
popa
or
dec
push
sar
or
pop
es
ror
repnz
lea
xor
lock
mov
in
aad
push
sub
jle
adc
mov
pop
ja
pop
gs
test
push
add
dec
push
inc
cmp
sub
and
hlt
rcl
jo
and
in
push
ins
lock
sub
sbb
sub
jae
ss
pop
push
scas
adc
mov
jno
lds
ja
inc
xchg
xchg
or
addr16
fisubr
sbb
adc
sbb
loop
cs
test
sub
push
loope
add
aam
nop
es
clc
sub
dec
test
out
dec
cmp
add
sub
fwait
push
adc
add
or
imul
push
adc
inc
scas
aas
push
ret
mov
out
das
lahf
push
aad
call
stos
xor
call
xor
popa
dec
cwde
inc
sub
xchg
inc
inc
xchg
mov
daa
std
(bad)
out
(bad)
sub
sbb
jecxz
and
and
popf
mov
stc
xor
inc
push
and
mov
in
pop
clc
jg
jp
int
jne
in
nop
stos
retf
sub
pop
pop
fwait
dec
cmp
mov
mov
sbb
inc
dec
dec
sti
daa
es
pop
mov
jge
jmp
add
(bad)
adc
inc
ret
push
loopne
int
(bad)
push
push
fdivp
scas
or
xor
in
jle
jge
add
out
in
mov
mov
scas
mov
fwait
stos
cmp
xor
xchg
and
fsub
jns
push
mov
lea
xchg
jmp
push
aad
xor
out
and
dec
cmp
push
or
mov
fisub
mov
jmp
test
cmp
cmp
or
sub
adc
jbe
push
cwde
retf
jne
push
mov
in
mov
jne
out
mov
sbb
inc
xor
js
inc
in
jecxz
or
ss
cmps
xlat
xchg
sub
cmp
ins
inc
out
loopne
mov
push
add
push
mov
xchg
xor
repz
(bad)
out
dec
xchg
mov
sub
stos
sbb
dec
xchg
mov
arpl
loopne
test
div
icebp
push
jbe
xchg
sbb
push
xchg
stc
sub
mov
mov
imul
xchg
dec
je
inc
addr16
xchg
leave
xlat
or
mov
adc
inc
test
lea
cmc
std
jnp
cmp
scas
lock
rol
(bad)
(bad)
cld
xor
dec
jbe
pop
adc
xor
mov
mov
mov
or
push
add
add
push
cvtdq2ps
adc
sbb
leave
push
cmp
mov
push
push
inc
xchg
mov
jmp
xlat
push
js
das
leave
xchg
test
jo
xchg
jne
or
mov
std
sub
call
push
bound
fucom
repz
pop
xor
adc
dec
jge
scas
xchg
xchg
fcomp
dec
int
sbb
jbe
dec
jmp
jnp
pop
xor
out
cmps
lods
jnp
mov
stos
pop
sar
xor
push
div
scas
fmul
mov
aad
lds
sbb
fld
cmp
sbb
loop
cli
add
xchg
imul
push
sti
sub
mov
add
daa
clc
mov
push
mov
mov
hlt
out
mov
dec
call
mov
shl
fnstcw
pusha
fs
loope
mov
fsubp
xchg
imul
shl
jle
in
dec
int3
sti
sub
sbb
jno
fcomip
int
ins
in
pop
hlt
cmp
es
je
and
inc
adc
jns
add
mov
jmp
rol
(bad)
popa
(bad)
nop
fld
mov
test
sbb
out
mov
inc
add
cmp
out
popa
out
jno
in
adc
jmp
lds
repnz
popa
push
pop
lods
add
xor
inc
icebp
jbe
outs
aas
fmul
scas
iret
and
cs
test
pop
sbb
push
popf
es
stc
xchg
sahf
pop
jns
cmps
inc
out
mov
sub
aaa
mov
dec
test
pop
inc
pushf
mov
mov
neg
fnstcw
sbb
jmp
add
iret
stos
dec
or
in
xchg
mov
lea
stos
xor
ins
push
jl
dec
iret
dec
jae
sahf
or
mov
call
xchg
test
pop
sub
int3
aad
pushf
(bad)
out
ret
icebp
call
or
jae
imul
lea
add
ss
popf
push
je
pop
loope
leave
mov
pop
push
jne
test
loopne
call
in
lods
sti
pusha
js
(bad)
pop
stc
aas
imul
mov
and
test
int3
js
adc
sbb
jo
into
dec
sbb
push
add
aad
dec
push
xchg
call
jmp
and
imul
inc
daa
shl
ins
xchg
movs
push
movs
ins
xor
jne
imul
nop
push
mov
jae
das
aaa
(bad)
fist
cwde
push
adc
dec
cmp
rol
inc
fstp
push
jle
ja
rcr
xor
shr
daa
push
jmp
movs
mov
in
daa
les
test
leave
retf
stos
xchg
dec
mov
and
fild
add
pop
std
push
xchg
in
xor
sub
mov
loope
(bad)
(bad)
ins
mov
jnp
js
punpcklbw
add
icebp
jmp
xor
aam
lds
shl
push
lds
mov
retf
ret
inc
mov
push
inc
and
pop
fwait
out
mov
inc
outs
pop
popa
adc
repnz
aad
retf
ret
dec
(bad)
call
push
adc
push
jbe
shr
sbb
mov
(bad)
lea
cmps
test
push
push
sbb
or
fcomp
dec
add
jmp
push
xor
push
je
call
sbb
lods
imul
or
(bad)
and
mov
and
mov
mov
pop
jmp
stc
jmp
les
cmc
movs
xchg
dec
pusha
icebp
mov
shl
mov
js
icebp
(bad)
out
es
xchg
stos
mov
cld
stc
fisttp
test
jne
ds
js
sub
pop
aam
mov
jge
out
call
dec
mov
push
(bad)
push
xchg
(bad)
pushf
mov
cld
test
mov
sub
pop
cmp
(bad)
iret
cmc
and
aas
mov
mov
or
call
das
jge
retf
arpl
stos
mov
xchg
add
lods
pop
xchg
in
lock
shl
out
pop
hlt
out
arpl
and
test
add
jb
and
ror
pop
sub
jbe
xor
mov
xor
in
adc
mov
xor
icebp
ja
(bad)
add
icebp
cmp
push
lock
sub
dec
add
(bad)
hlt
cmp
push
xchg
cmp
mov
lock
jb
cmp
int
pop
int3
add
leave
cmp
in
jo
cmp
imul
push
cdq
jne
(bad)
int
pop
jmp
xchg
push
mov
adc
push
daa
dec
jbe
es
out
mov
dec
in
push
(bad)
xor
shl
pop
dec
sub
iret
mov
push
call
dec
int
sub
mov
pop
adc
pop
cmps
rcr
jge
retf
jo
cmp
pop
movs
inc
add
cmp
sbb
mov
out
enter
sub
mov
cmp
or
ss
and
movs
dec
dec
sub
inc
dec
adc
pusha
lock
adc
adc
fstp
sub
sbb
push
std
retf
(bad)
push
jmp
ja
or
jecxz
mov
cld
ss
xchg
out
loop
fistp
fist
sub
out
out
pop
xchg
pop
fld
outs
xor
xlat
inc
mov
gs
xor
and
fcom
push
pusha
mov
xchg
pop
retf
setns
jno
mov
shl
xchg
enter
cmc
sti
sbb
jge
cmp
jbe
sbb
ror
inc
enter
push
punpckhbw
imul
xchg
jne
jecxz
sbb
dec
and
sub
add
lock
fild
jecxz
clc
jnp
push
cmp
lock
popa
and
or
cmp
and
(bad)
mov
jae
sub
test
xchg
mov
out
ja
pusha
nop
add
mov
push
push
movs
sbb
mov
clc
and
push
mov
loop
inc
cmps
sbb
mov
es
nop
xlat
ins
push
test
aad
add
scas
in
test
fmul
dec
xchg
push
int3
cld
daa
mov
addr16
sbb
sub
pop
or
imul
xlat
adc
sub
push
enter
stos
sti
shl
adc
(bad)
hlt
rcr
sub
(bad)
adc
mov
ds
popf
mov
in
imul
shr
pop
mov
sbb
mov
adc
inc
pop
scas
rcr
xchg
mov
das
das
ds
aas
imul
mov
sbb
cli
pop
ds
jno
cld
xchg
or
mov
sub
mov
jg
mov
es
in
sbb
(bad)
or
inc
inc
ja
pop
jne
pop
mov
mov
xor
mov
sub
js
mov
mov
jp
sbb
and
mov
addr16
xchg
jne
dec
add
xchg
jecxz
mov
cmp
(bad)
and
test
xchg
aas
mov
mov
lahf
fisttp
jmp
jne
bound
sub
(bad)
cs
fs
leave
sub
mov
fsubrp
sub
call
sub
mov
mov
sbb
ret
jecxz
mov
retf
mov
mov
jecxz
mov
outs
daa
sub
adc
inc
imul
pop
test
xor
push
xchg
out
(bad)
out
xchg
mov
out
inc
pop
cdq
mov
mov
dec
jae
sub
(bad)
xchg
ins
fs
test
ins
in
shl
movs
lahf
call
mov
jmp
fwait
adc
dec
in
push
sbb
fwait
ds
(bad)
out
add
sbb
retf
(bad)
push
xchg
movs
mov
es
and
clc
fbld
inc
fst
fimul
mov
leave
adc
pushf
in
retf
adc
fcom
pusha
jmp
adc
ins
int3
or
add
ds
pop
mov
repnz
stos
push
or
repz
fwait
mov
cmp
xchg
pop
stos
sub
pushf
ins
jg
inc
pop
aam
retf
arpl
inc
jno
xchg
in
jmp
push
neg
mov
shl
leave
mov
mov
lock
ret
mov
push
mov
xor
cmps
fwait
les
xchg
dec
mov
aaa
(bad)
retf
sbb
mov
in
test
cmps
int3
and
pop
push
lods
aad
dec
enter
adc
imul
mov
in
jns
icebp
jmp
loope
add
mov
fisttp
adc
xchg
inc
imul
pop
mov
mov
mov
stos
sbb
loope
scas
in
cmp
mov
shr
je
or
pop
sbb
jb
test
(bad)
cmp
xor
or
jmp
cmp
outs
cmp
mov
call
ins
cmp
out
xchg
sar
jnp
cmp
add
mov
jl
pop
and
fwait
neg
int
jle
cmp
aad
inc
mov
ret
cmp
or
fisttp
add
cdq
aaa
ret
push
mov
mov
add
(bad)
ds
aas
sbb
(bad)
leave
shl
mov
jg
pusha
push
cld
sub
aad
adc
shl
aas
(bad)
clc
(bad)
ret
push
push
mov
repz
mov
lods
and
add
fist
imul
sub
jge
fdivr
repz
dec
pop
dec
stos
bound
xchg
repz
add
in
cmp
icebp
fistp
imul
push
popa
jge
add
and
xor
mov
icebp
stos
mov
stos
pushf
inc
xchg
stos
push
cmp
xchg
xchg
lea
bound
push
sub
loop
es
sub
iret
inc
sar
enter
sub
ins
sub
call
dec
xor
and
adc
or
mov
pop
bound
(bad)
xchg
cdq
movs
pop
xchg
lock
mov
jae
sub
scas
cdq
in
adc
jmp
test
sub
fsub
das
rol
div
xchg
or
inc
dec
inc
sub
mov
pop
xor
and
add
jp
(bad)
pop
sar
push
sti
and
sub
jg
nop
cmp
cmc
arpl
dec
mov
imul
mov
xchg
clc
mov
push
push
loope
fs
mov
test
retf
(bad)
mov
adc
push
push
xor
mov
add
(bad)
jecxz
cdq
fdiv
test
call
mov
outs
aas
sbb
popa
sbb
pop
jo
adc
and
lods
sub
and
fcomp
lea
mov
jne
lahf
outs
ja
sar
imul
aas
jl
sbb
and
dec
xlat
jns
lds
and
lods
ins
fs
ins
push
imul
jmp
jg
test
mov
push
inc
and
push
mov
pop
cmps
dec
jmp
mov
sbb
cli
repz
adc
mov
jle
cdq
cmps
mov
jno
pushf
popf
adc
jmp
scas
sti
jmp
mov
adc
push
mov
sub
or
mov
adc
fimul
fwait
sub
jnp
(bad)
jb
retf
(bad)
push
pusha
mov
sub
je
and
sbb
add
dec
jo
dec
(bad)
hlt
(bad)
aad
cmps
adc
sbb
int3
pop
jo
movs
jns
mov
dec
in
clc
fisttp
sti
call
adc
fs
sbb
jbe
mov
mov
stos
js
mov
shr
lds
push
xor
and
test
cmc
rcl
cli
push
mov
or
mov
imul
ss
dec
sbb
mov
or
mov
ret
popa
sbb
dec
(bad)
(bad)
mov
sub
or
ret
or
jbe
ins
div
call
sub
aaa
test
inc
int3
and
cmp
ss
pop
mov
xor
mov
test
jge
or
push
test
pop
cmps
mov
inc
cmps
and
ret
lods
pushf
in
rcr
xchg
add
jnp
movs
inc
adc
or
mov
pop
lods
and
mov
scas
push
sahf
jmp
cmp
ja
cdq
imul
mov
jnp
in
ds
aaa
ds
icebp
mov
cmp
adc
loopne
pop
inc
aad
sub
cmc
ins
mov
push
sbb
movs
mov
jae
or
cmc
push
jp
stos
and
sub
inc
or
gs
adc
iret
rol
aaa
fwait
lock
add
sub
call
dec
adc
push
mov
rcl
xor
cld
ins
push
test
cmp
mov
hlt
adc
pop
add
loope
sub
jg
scas
lods
push
inc
cli
mov
int
xchg
lahf
sahf
iret
not
mov
xchg
lods
repz
or
cmc
adc
pop
stc
mov
rol
sbb
sahf
mov
jle
mov
pop
aam
mov
popa
addr16
and
inc
adc
loope
stos
into
ds
jmp
xor
and
mov
cmp
fwait
push
scas
sbb
cmps
and
(bad)
mov
loop
mov
in
and
pusha
inc
add
or
pop
push
push
mov
std
in
into
or
pop
gs
in
mov
push
sub
mov
popa
outs
mov
cmp
inc
mov
jbe
xor
fild
cdq
fbld
jecxz
sbb
je
ss
popa
rol
ins
fisttp
push
iret
jae
out
xchg
xchg
in
mov
or
push
cmp
and
fstp
popa
mov
mov
imul
push
add
push
or
(bad)
push
adc
sub
pop
lods
aam
(bad)
sar
cmc
push
jns
jmp
or
out
mov
loope
pop
mov
in
cmp
ds
add
dec
stos
test
imul
add
repz
push
sub
xor
rol
sub
dec
pusha
sub
sahf
pop
add
nop
aaa
xor
jle
movs
shl
movs
jge
or
adc
xchg
shl
push
loop
in
ret
inc
xchg
mov
sub
push
movzx
test
pop
push
dec
sbb
or
pop
adc
imul
call
enter
pop
adc
sub
lock
test
pop
xchg
retf
(bad)
clc
imul
add
pop
or
cmps
mov
lahf
and
mov
daa
ret
in
or
add
aam
pop
add
jle
adc
and
pop
add
pop
scas
pop
cmp
xchg
adc
and
sub
push
outs
mov
jg
sbb
adc
add
cli
xchg
loopne
mov
sub
es
fdivp
test
push
loop
sub
stos
jne
xor
and
cmps
push
jnp
pushf
mov
push
mov
mov
add
rol
hlt
mov
xchg
jo
movs
dec
lods
test
cmp
adc
fwait
dec
arpl
inc
add
adc
adc
ins
iret
sbb
mov
mov
lea
mov
je
mov
ret
test
xchg
sbb
or
or
inc
jb
in
jmp
pushf
mov
mov
sbb
dec
sti
test
mov
xchg
fsubr
add
adc
xor
(bad)
xor
pop
jo
push
in
push
lahf
xchg
adc
inc
mov
cmp
jmp
into
clc
pop
jns
mov
cmp
test
or
push
jmp
mov
cmp
imul
lahf
ficomp
or
xor
ret
je
mov
jecxz
std
mov
std
jle
sub
xor
sub
pop
ds
outs
sbb
and
popf
nop
add
cmp
dec
xor
fisttp
mov
mov
mov
(bad)
xchg
cmps
pushf
mov
inc
icebp
adc
or
push
fdiv
fmulp
dec
sub
test
neg
sar
cmp
loopne
mov
dec
fidiv
and
mov
out
shr
mov
adc
or
fstp
pop
adc
add
sbb
push
pop
inc
fwait
mov
mov
jecxz
mov
adc
jbe
gs
add
in
mul
iret
sbb
fiadd
aas
jle
lods
jo
lea
fcmovb
jp
repnz
pop
out
popa
sub
(bad)
das
movs
lds
add
mov
arpl
sub
mov
repnz
imul
jno
retf
cmp
xchg
iret
add
inc
xchg
jb
and
loope
mov
xchg
sub
icebp
aad
xor
pop
or
pop
jmp
jno
or
out
out
aad
movs
popa
mov
mov
jle
xor
popa
sti
mov
cmp
xor
mov
imul
sub
or
xchg
inc
vpavgb
in
mov
sub
cmp
lock
mov
out
or
xor
fwait
and
cmp
rcr
fidivr
mov
cmp
mov
das
adc
and
push
cmp
mov
sub
outs
mov
repnz
pop
mov
mov
shr
aaa
aas
enter
add
lods
fistp
inc
xor
cmps
sar
mov
push
add
movs
xchg
fwait
sub
in
or
lahf
mul
sbb
(bad)
xchg
imul
add
mov
jnp
int3
aas
and
(bad)
and
push
mov
adc
cmp
repnz
lods
adc
lahf
xchg
adc
dec
mov
mov
icebp
pop
cwde
je
push
sbb
push
ss
push
fstp
dec
psraw
jns
daa
add
ffree
test
push
(bad)
jo
add
xor
jmp
jle
pop
retf
sbb
rol
in
mov
mov
mov
cmp
imul
cmp
ror
dec
hlt
repz
xor
push
cs
sbb
(bad)
push
xor
enter
test
cmps
mov
jg
mov
jmp
(bad)
mov
dec
mov
xchg
push
ds
pop
adc
cli
clc
jl
push
pop
sub
stc
sbb
and
ret
jmp
add
out
in
sub
and
mov
pop
repz
fisttp
sbb
sub
pusha
scas
popa
jae
outs
mov
in
mov
cmc
xchg
or
mov
ins
imul
inc
or
out
push
shr
jb
push
mov
dec
fsubp
mov
push
ss
dec
sbb
retf
aam
cmp
addr16
cdq
movs
pop
mov
sbb
mov
es
push
pusha
mov
xchg
daa
sbb
inc
fsubp
loope
iret
mov
dec
out
mov
sub
jp
mov
fcomp
stos
pushf
aas
cwde
rcl
inc
fisttp
xor
faddp
sbb
out
(bad)
adc
push
inc
arpl
sub
or
dec
fistp
ja
aas
push
sbb
jge
inc
cmp
test
pop
out
inc
clc
mov
adc
xchg
retf
pop
ins
mov
cmc
push
pop
in
inc
mov
dec
cmps
jbe
or
mov
test
xor
loop
push
xor
(bad)
into
inc
push
jns
out
test
movs
clc
add
fdivr
das
or
and
lods
stos
sbb
mov
rcl
ds
sub
call
int3
dec
repz
data16
lock
daa
loope
jnp
xor
push
cmp
mov
or
call
xor
or
jo
adc
call
inc
fisttp
shl
mov
sub
jbe
les
rol
add
inc
movs
ret
xchg
in
pop
xor
pop
push
cmp
repnz
adc
int3
lock
out
xor
sti
add
mov
fistp
sub
loop
adc
out
or
out
je
lock
ficomp
(bad)
mov
imul
pop
mov
ds
and
pop
jmp
test
cmp
dec
adc
sbb
jae
cmp
inc
mov
enter
cmp
fsubr
jnp
mov
adc
(bad)
mov
jb
push
clc
xor
push
add
jnp
mov
faddp
jle
rol
sub
and
mov
pop
push
mov
arpl
sbb
xchg
cmp
cmps
(bad)
xchg
jbe
mov
out
and
leave
dec
std
outs
sar
dec
push
lds
arpl
ja
and
lock
shr
cmps
pop
fwait
sbb
mov
push
xchg
(bad)
sbb
fist
jp
out
(bad)
out
pop
call
imul
aad
mov
and
xchg
mov
ds
(bad)
cmps
daa
ins
mov
fwait
idiv
dec
adc
jno
jo
and
data16
jb
sub
mov
movs
xor
pop
loopne
fisub
aaa
lea
pop
stos
aam
or
inc
scas
sbb
nop
adc
jb
pop
(bad)
enter
jmp
or
add
xchg
xor
or
rcr
imul
stc
fcomip
push
jge
js
sbb
cmovb
stos
scas
mov
sub
icebp
pop
add
setg
jecxz
dec
fdiv
je
cmp
mov
stos
and
nop
or
and
(bad)
call
fiadd
or
inc
das
cmps
aaa
xor
imul
or
scas
(bad)
movs
dec
icebp
cmp
sub
jno
mov
(bad)
dec
or
inc
inc
loope
mov
sub
mov
inc
cmp
sbb
cmps
jp
ds
sbb
adc
not
push
pusha
and
fst
sub
xchg
in
daa
cmp
xchg
in
test
jge
dec
xor
push
pop
xchg
mov
cmp
lahf
out
mov
jp
lds
xor
xchg
and
jmp
cmps
pop
aaa
imul
add
ds
scas
xchg
jnp
pop
push
sbb
mov
ds
add
ins
js
les
add
sbb
inc
mov
pop
push
xor
(bad)
mov
add
call
scas
jmp
push
cmps
outs
jno
popf
xchg
jmp
xor
dec
inc
inc
pop
or
loope
cmc
out
xchg
lds
xchg
xor
fmul
sbb
test
pop
int
pop
sub
push
push
into
inc
mov
and
ja
push
inc
jmp
pop
jge
or
and
mov
sbb
addr16
and
rcr
je
(bad)
lds
mov
dec
fidiv
add
cmp
clts
sbb
adc
jno
xor
pop
mov
rol
push
lock
and
xchg
das
sbb
outs
sbb
mov
dec
fcomp
mov
repnz
outs
sub
add
add
in
xor
jo
add
call
lock
pop
cmp
pushf
sbb
pop
dec
out
ss
mov
mov
and
push
xchg
in
rol
pop
fisub
pop
enter
loope
mov
repz
loope
lahf
fild
jg
mov
cli
loope
shl
xor
pop
loop
popw
cli
cmp
daa
add
mov
cmp
aam
or
mov
mov
or
ret
add
push
sub
dec
xor
sub
(bad)
push
and
into
adc
jo
test
movs
icebp
mov
adc
jmp
dec
shrd
loop
sub
out
fwait
pop
jecxz
call
sub
int3
or
cmp
arpl
pop
adc
cmps
ror
nop
pop
lock
stos
fidivr
jecxz
lahf
sub
cmp
nop
adc
aad
mov
push
mov
cdq
dec
fmul
dec
es
sar
(bad)
pop
imul
aaa
rol
inc
aaa
lds
daa
(bad)
add
xchg
xor
sti
pop
cmp
js
dec
retf
nop
push
test
icebp
cmp
call
iret
mov
scas
mov
mov
gs
cs
and
jns
pop
mov
inc
jns
or
popf
add
retf
jp
loope
adc
add
xchg
stos
jp
push
vpinsrw
mov
xchg
push
test
int
cmp
mov
add
pusha
aaa
dec
dec
adc
sub
clc
popa
es
lds
nop
mov
push
dec
dec
loop
or
fnstenv
pop
sbb
add
lods
fwait
cld
xor
pop
push
(bad)
jmp
fisttp
into
or
test
push
scas
int
inc
(bad)
lock
adc
clc
hlt
adc
adc
clc
adc
add
xor
cli
mov
(bad)
cs
icebp
das
mov
push
jg
mov
ficom
ficomp
mov
(bad)
std
xchg
(bad)
dec
push
pop
jnp
fucomi
addr16
push
repnz
mov
xchg
jbe
push
in
adc
lods
push
mov
jmp
int
xchg
mov
jns
jb
add
push
fwait
ins
lds
sbb
adc
in
test
clc
cmp
sar
pop
scas
sub
fld
fdiv
loop
cmp
jecxz
dec
sub
in
cli
mov
mov
pop
push
jb
mov
jge
add
sbb
les
je
out
dec
(bad)
frstor
xchg
mov
push
es
cli
push
mov
jecxz
push
push
mov
(bad)
mov
fstp
inc
push
sbb
adc
mov
xchg
mov
or
(bad)
dec
push
mov
movs
xchg
sub
pop
or
aad
outs
cmps
fiadd
clc
jl
out
dec
sbb
inc
sub
test
sub
xor
adc
sbb
movs
inc
cmp
sbb
cmps
(bad)
mul
(bad)
lods
dec
mov
push
loop
mov
jb
push
sub
jge
mov
jbe
or
pop
mov
push
inc
and
jne
inc
jecxz
shl
add
outs
sub
cmp
je
les
jl
into
dec
add
or
sti
ss
mov
cli
stos
dec
sti
loope
jmp
retf
cmc
(bad)
jnp
arpl
and
push
mul
shl
lods
imul
sub
dec
fistp
add
pop
push
sub
mov
push
sbb
outs
mov
das
ds
cli
fdivr
cmp
loop
and
and
jnp
aas
jmp
lsl
mov
(bad)
adc
frstor
enter
jmp
fstp
adc
sti
and
cs
pop
cli
shr
xlat
jmp
push
or
cmp
adc
movs
jne
popf
push
cli
out
in
lahf
fidiv
stc
dec
inc
inc
or
fldl2t
lea
pusha
jp
push
add
push
mov
mov
in
rol
outs
mov
mov
test
cmpps
neg
shl
add
and
sbb
pop
and
mov
and
outs
pop
mov
mov
mov
adc
pop
pop
(bad)
jmp
loopne
xchg
mov
fisttp
into
adc
jne
dec
mov
(bad)
rcr
repz
pop
inc
inc
cmp
push
push
adc
test
ror
sti
pop
adc
pop
add
or
add
(bad)
sub
xor
mov
out
push
cmp
repz
lods
cmp
shr
jp
lahf
imul
lds
gs
icebp
jno
jge
pop
mov
rcl
push
scas
mov
jp
and
mov
movs
or
bound
in
scas
loope
pushf
sbb
jbe
nop
cmp
cmps
push
test
mov
push
ja
cmp
iret
jbe
dec
inc
retf
daa
mov
leave
jle
sbb
cmp
cmp
jns
mov
adc
(bad)
int3
push
jo
push
xor
mov
dec
repnz
add
fnsave
or
mov
push
xlat
jge
and
or
jns
mov
add
jle
cmps
lock
repnz
ss
push
jl
jb
cdq
imul
out
pop
xor
ins
push
pop
or
push
mov
clc
loopne
add
cmps
(bad)
lock
retf
xchg
push
push
pop
pop
les
fist
scas
cmp
in
out
sar
es
jb
push
int
scas
jo
pusha
pushf
jmp
cmc
leave
sbb
cmp
jp
xchg
imul
cmp
cmp
pop
cwde
and
or
loopne
xchg
cmp
xchg
mov
jns
mov
movs
or
sub
aas
mul
ret
inc
loop
mov
cmc
out
cmp
push
push
inc
xchg
add
or
pop
es
std
sbb
es
(bad)
pushf
loopne
(bad)
retf
mov
push
popa
aaa
repz
adc
mov
lahf
lods
call
rcl
xlat
push
imul
mov
jg
push
repnz
and
lea
rcr
enter
sub
xchg
inc
add
pop
cs
cdq
inc
cld
push
xacquire
push
nop
add
mov
sub
outs
mov
push
mov
xor
jmp
pop
xchg
ds
and
cmp
push
jbe
xchg
or
popf
addr16
lahf
stos
out
retf
test
jae
or
ins
imul
xor
test
xchg
arpl
jle
imul
xor
adc
mov
(bad)
xor
cwde
mov
xor
dec
dec
cld
mov
(bad)
les
sub
pop
jne
xchg
mov
call
cmps
movs
out
retf
cmp
add
push
outs
sahf
imul
or
cmps
mov
cmp
jl
xchg
cmp
es
and
(bad)
cwde
push
jnp
cli
jle
add
das
or
inc
mov
es
mov
ror
and
jns
cmp
mov
push
(bad)
(bad)
pushf
adc
push
mov
sbb
pop
gs
loope
outs
icebp
adc
mov
pop
cmp
sbb
dec
mov
and
out
enter
push
fbld
es
cs
pop
repnz
retf
lods
adc
mov
dec
nop
aas
dec
xchg
inc
call
dec
imul
lea
movs
push
jl
imul
mov
lods
aam
jecxz
cmc
inc
cs
aam
in
aaa
cwde
outs
xor
mov
shl
iret
std
hlt
sub
cmps
sahf
repz
jmp
push
aaa
inc
jno
out
mov
cmp
or
xchg
jmp
scas
xor
mov
retf
and
xchg
cmp
mov
push
(bad)
xor
out
jbe
shl
fstp
std
aad
xchg
test
mov
sti
jecxz
push
call
jmp
adc
jns
jmp
pop
icebp
stos
jle
fild
mov
iret
jb
push
rcr
pop
aaa
mov
inc
cmp
fidivr
pusha
lahf
repz
jns
in
es
pop
or
ss
pusha
push
iret
stos
popf
inc
fdivr
push
packsswb
mov
xchg
dec
pop
cld
rol
adc
in
fld
out
push
lock
dec
sti
sbb
sbb
mov
mov
clc
(bad)
inc
repnz
push
enter
(bad)
fisttp
add
jge
jns
pop
pop
stos
inc
jle
cmp
cmp
pop
mov
out
sub
sub
add
mov
daa
rcl
push
adc
pop
cmp
sbb
pop
lahf
xor
retf
fs
(bad)
mov
stc
xchg
ror
into
into
push
xchg
xchg
(bad)
jle
(bad)
(bad)
(bad)
and
mov
adc
push
inc
push
adc
mov
or
and
push
push
scas
cmc
mov
dec
mov
xor
cmp
jae
mov
cmps
sub
call
retf
push
aad
mov
mov
loopne
or
icebp
jl
(bad)
sahf
xor
fcmovb
retf
sbb
ret
out
xchg
repz
sbb
repnz
comiss
or
xchg
ret
jae
mov
add
stos
and
ficomp
fnstenv
mov
std
out
lock
in
xor
sub
daa
mov
sahf
lahf
pop
sub
out
inc
pop
int
gs
out
aam
pop
ins
xor
xor
pusha
xchg
js
cmp
inc
jp
push
mov
in
arpl
ss
sbb
scas
loopne
lock
cmps
xchg
xchg
push
inc
lds
or
xchg
test
xor
retf
or
pop
xor
or
out
push
jge
(bad)
dec
push
push
imul
jmp
mov
arpl
out
jg
in
test
sbb
retf
retf
fcomp
in
aaa
add
ja
adc
lea
xor
or
inc
rcr
mov
sub
out
not
in
je
or
mov
fsub
push
scas
sub
in
sbb
cmps
ja
adc
enter
es
and
jmp
inc
mov
int3
in
stos
test
enter
mov
cmc
outs
xchg
(bad)
sub
or
adc
arpl
mov
in
adc
push
xlat
in
sahf
add
push
inc
outs
push
lds
cmps
sbb
pop
dec
cmp
loopne
mov
jo
arpl
test
dec
ds
rcl
int3
jnp
outs
sbb
sub
xchg
test
cmp
imul
inc
push
sub
stc
mov
pop
cmp
pop
mov
js
fcomp
fst
mul
or
jae
out
cmp
and
cmc
leave
or
lods
dec
out
(bad)
jbe
repz
ins
sub
mov
mov
ds
jmp
iret
add
aas
ins
jmp
xor
or
repz
add
test
push
sub
pop
push
push
arpl
or
sbb
lahf
mov
(bad)
mov
mov
clc
jae
mov
iret
lahf
js
dec
call
fst
pop
xchg
bound
lds
mov
mov
cmps
aad
cmp
ds
lds
push
xchg
pop
cwde
mov
loop
div
inc
xchg
mov
mov
dec
aad
cmps
sbb
fadd
enter
and
add
jmp
test
scas
sub
xchg
in
jg
adc
aaa
pop
sbb
pop
pop
xchg
mov
sub
into
xchg
mov
sar
mov
loope
imul
out
pop
pop
mov
xchg
sub
pop
or
dec
jmp
ins
addr16
cmps
mov
dec
jne
out
sbb
not
outs
inc
inc
retf
push
sub
fnsave
jmp
cmp
aaa
rol
jns
cs
stos
pop
cs
push
sbb
ret
or
(bad)
test
add
movs
sub
adc
and
push
ds
cmp
enter
int
popf
outs
out
or
dec
sub
setne
(bad)
loope
retf
xchg
out
rcr
retf
mov
inc
shl
cld
add
dec
push
adc
xchg
stos
imul
bound
or
mov
imul
pop
ja
mov
and
ds
hlt
sub
dec
push
cmp
mov
das
fld
je
rcr
adc
or
mov
sub
cmp
pop
(bad)
pop
and
repnz
and
sub
pusha
and
ffreep
sbb
aad
fisubr
fcom
sbb
fbstp
repnz
inc
hlt
loopne
add
(bad)
ds
jle
push
je
adc
hlt
(bad)
not
push
pop
cmps
int
scas
push
mov
mov
cmp
je
pop
inc
xor
sub
(bad)
lahf
push
inc
jmp
mov
aaa
dec
inc
out
shl
addr16
dec
xchg
or
imul
mov
call
xor
mov
fmul
xchg
pop
outs
fstp
mov
loopne
sub
add
(bad)
jb
or
mov
xchg
pop
sbb
outs
scas
in
jo
dec
cmc
jmp
and
es
(bad)
leave
div
test
pop
sub
dec
scas
sbb
xchg
dec
or
ja
imul
fbstp
cmp
fcmovnb
lea
fidivr
cmp
add
add
rol
retf
rcl
ss
pop
dec
pop
sub
retf
mov
outs
lock
mov
mov
fisub
mov
jmp
daa
outs
jo
popf
inc
xor
fcomip
pop
loop
xchg
fisubr
dec
lahf
mov
dec
scas
sbb
js
cmp
add
js
mov
pop
jp
xor
pop
inc
icebp
aas
int3
sbb
and
pushf
mov
ss
mov
sub
mov
shl
movs
or
ret
mov
sub
pop
ud1
adc
mov
mov
cld
cs
cdq
cdq
icebp
jmp
xchg
push
in
mov
add
fild
jo
(bad)
call
js
mul
popf
lahf
xor
push
int3
(bad)
repnz
sub
or
fs
imul
dec
dec
mov
loope
fidiv
loop
fnstenv
mov
push
retf
les
and
js
mov
scas
mov
mov
(bad)
mov
(bad)
mov
mov
ror
fisttp
jmp
ror
cmp
xor
or
jbe
mov
das
rcl
repnz
xlat
xor
jne
stos
lods
cmp
mov
push
sar
rcl
inc
xor
xchg
mov
sub
mov
mov
ficom
cmp
xchg
or
pop
cli
and
sbb
jbe
or
icebp
pushf
or
ins
(bad)
and
imul
sbb
xor
sbb
pop
add
mov
xchg
mov
pop
neg
scas
xchg
pop
mov
fdivr
outs
adc
and
jge
je
push
fldenv
lods
add
shl
bound
mov
sub
cwde
in
imul
fwait
in
test
xor
sbb
inc
cmp
ds
imul
dec
dec
jnp
adc
dec
jmp
adc
jmp
jno
(bad)
mov
push
mov
add
cmc
mov
aad
xlat
cs
adc
push
(bad)
jns
ins
xor
movs
pop
mov
jle
cs
mul
movs
jo
stc
mov
pop
jbe
cmp
in
(bad)
outs
or
xor
ficomp
test
mov
mov
mov
sub
clc
sub
nop
lods
mov
sub
call
xchg
xlat
lea
inc
lods
cwde
cmc
pop
cmc
ins
imul
ret
(bad)
in
mov
inc
in
ss
add
std
jbe
fidivr
stc
stos
xchg
cmp
jp
aam
cmps
test
lahf
xchg
add
out
push
and
mov
cmp
mov
xchg
ret
xor
cs
cmc
push
jnp
xlat
aam
retf
sub
movs
rcr
cmp
ss
mov
call
fwait
addr16
jo
cs
jl
ss
loope
test
push
sub
fmul
shr
ins
into
mov
(bad)
movs
jae
jge
push
in
ds
out
and
test
push
into
mov
push
xchg
popf
(bad)
fdiv
jnp
mov
jecxz
jns
sub
out
jle
or
jmp
repz
mov
icebp
pop
inc
or
or
aad
jmp
xchg
int3
inc
dec
mov
xchg
test
sub
push
jno
push
loop
scas
(bad)
push
jae
cmc
sbb
mov
mov
push
addr16
pop
nop
push
mov
jle
mov
dec
addr16
dec
jnp
sbb
dec
xor
loopne
popf
aas
mov
(bad)
mov
push
aaa
ds
adc
adc
pop
lods
cmps
maxps
or
mov
push
mov
push
xchg
jnp
push
mov
ja
push
fwait
cld
cdq
mov
mov
in
loope
sar
hlt
repz
in
pop
dec
je
out
lock
pop
sub
dec
xchg
stos
and
out
xor
pop
mov
mov
sub
cmps
inc
mov
sub
pinsrw
jg
xor
pop
push
call
in
and
icebp
sbb
jae
sbb
in
xchg
or
xchg
sub
and
pop
pop
mov
inc
and
pop
add
jge
adc
out
ins
ja
(bad)
pop
pop
loop
add
loope
push
mov
iret
mov
cli
jae
call
cmps
mov
mov
or
in
or
or
cs
(bad)
not
imul
jb
mov
xor
ror
lods
cdq
jge
rol
ds
repnz
lods
inc
loop
dec
test
xchg
scas
push
popf
pop
ret
loop
imul
pop
sahf
jle
xchg
into
aas
and
lds
xchg
or
pop
out
mov
aas
push
jae
aaa
xor
cmps
xor
sar
mov
xchg
ins
and
pop
push
cmp
mov
mov
or
jmp
fild
enter
in
xchg
xor
and
test
ins
cmp
xor
mov
inc
nop
adc
cmp
test
mov
in
repz
bound
inc
pop
call
sar
cmp
push
dec
push
std
fcmovne
or
mov
cmps
jle
pop
call
adc
xor
or
rcr
xor
xor
cmp
xchg
shl
add
arpl
test
jl
fsub
into
mov
loop
in
xchg
je
mov
xchg
jne
das
mov
sti
fxch
push
gs
jnp
mov
mov
cli
aaa
mov
push
clc
adc
or
mov
in
imul
cmps
sub
or
dec
fistp
loop
mov
or
xlat
rol
and
mov
dec
jae
(bad)
repz
xor
stos
push
mov
jmp
ins
xchg
xchg
stc
cmp
pop
iret
xchg
or
cmp
dec
adc
push
jmp
mov
add
shl
shl
lods
in
stos
mov
test
add
pop
aaa
and
aaa
sbb
fimul
iret
sub
or
xchg
shr
cs
jno
jl
in
sub
pop
push
addr16
adc
cmp
(bad)
fnstsw
mov
loope
push
xchg
aas
jnp
retf
test
int3
mov
mov
retf
retf
rcl
jb
lahf
mov
outs
std
fst
call
sbb
push
mov
gs
mov
icebp
out
das
into
dec
adc
ja
nop
fld
push
jmp
xchg
sar
xchg
add
xchg
(bad)
gs
mov
jno
jp
sbb
(bad)
int
pop
arpl
mov
shl
push
fwait
sub
fmulp
and
je
aad
inc
cmps
fsub
sbb
enter
sahf
sub
test
aad
fwait
enter
ret
push
in
inc
stos
not
mov
retf
mov
fcom
pop
xstore-rng
cmps
inc
leave
sbb
dec
shr
cmc
adc
pop
xchg
sti
sbb
pop
mov
dec
cmp
add
sbb
inc
mov
(bad)
jne
and
sub
imul
mov
cmps
push
mov
out
sbb
int3
xchg
pop
repnz
shl
(bad)
lds
loop
cmp
add
clc
cmp
sti
into
lahf
inc
cmp
out
and
xor
fild
sbb
sbb
cmp
ins
enter
jmp
add
mov
div
hlt
js
inc
mov
shl
bswap
fist
mov
loopne
jns
sub
push
sbb
pop
ss
in
pop
jno
mov
sbb
sahf
(bad)
push
cmp
xchg
dec
sub
xor
in
test
or
(bad)
lock
lahf
mov
int
mov
xchg
inc
inc
or
mov
movs
stos
retf
or
(bad)
xchg
sub
lods
in
out
cdq
dec
jg
xchg
cmc
les
sub
mov
mov
inc
or
pop
push
je
sub
stos
fldenv
sbb
mov
push
cdq
mov
inc
inc
mov
jp
mov
jg
shr
popa
(bad)
xlat
mov
loope
retf
add
lock
retf
mov
lahf
inc
mov
fs
cmp
aaa
out
inc
or
sti
adc
imul
push
mov
int3
mov
mov
push
out
movs
push
test
xor
addr16
fnstenv
mov
(bad)
add
dec
jmp
add
dec
push
mov
sub
pop
gs
stc
mov
cmp
or
test
stos
(bad)
mov
retf
mov
push
aas
dec
sbb
arpl
mov
loope
scas
mov
dec
sbb
or
jg
adc
jg
xchg
or
push
cmp
xor
les
stos
adc
xchg
push
(bad)
cmps
call
movs
test
ret
add
inc
dec
pop
sub
sbb
mov
or
push
jmp
inc
push
inc
jo
xchg
jae
cmp
cmp
xor
dec
mov
fidiv
or
pop
iret
gs
int
outs
and
and
iret
into
or
fwait
inc
adc
sar
ret
jbe
and
push
pop
dec
out
je
push
ins
add
stc
dec
jns
inc
daa
jg
dec
sub
fcomp
sbb
out
xor
addr16
inc
lods
in
ins
(bad)
jmp
outs
xchg
test
dec
sub
sahf
sub
sub
xchg
call
test
dec
popf
aaa
out
xor
popa
iret
add
and
das
mov
out
push
lods
sub
sbb
nop
out
cmps
mov
ins
scas
int
dec
(bad)
cmc
xor
cli
or
or
jp
and
cli
or
ss
cs
(bad)
gs
into
jmp
mov
pusha
sub
push
pop
imul
xor
xchg
ins
imul
adc
push
leave
sub
cmp
je
retf
sahf
inc
lods
jmp
dec
outs
mov
imul
and
pop
mov
adc
xchg
sub
sub
inc
mov
xor
mov
cld
icebp
sbb
pop
push
mov
outs
bound
cvtps2pi
enter
push
dec
sbb
in
fcom
push
xor
push
sub
cmps
cwde
fdivr
nop
mov
pop
mov
inc
nop
or
data16
add
push
pop
jle
xor
sar
mov
xchg
mov
mov
jbe
pop
push
mov
push
inc
sub
push
xchg
push
loopne
add
push
mov
jno
in
fnstsw
call
pop
add
mov
jno
js
test
imul
dec
adc
jne
cdq
add
mov
push
call
add
and
push
in
jbe
outs
(bad)
xor
push
(bad)
outs
shl
inc
les
in
cmp
add
test
dec
les
push
mov
mov
and
cmc
imul
sub
jb
ja
mov
std
mov
lods
cmp
dec
mov
xchg
push
push
sub
push
dec
fist
out
inc
xchg
jne
add
test
daa
xor
push
rol
xor
arpl
add
nop
xor
inc
inc
push
lock
mov
or
jno
out
dec
pop
lea
mov
scas
jmp
sub
cmp
lock
inc
dec
mov
aaa
and
ss
ret
lds
jne
mov
cmps
imul
icebp
and
jae
dec
push
dec
(bad)
lea
scas
xchg
or
jne
mov
es
cwde
mov
xor
xchg
fisub
sub
mul
add
mov
xor
mov
or
shl
imul
xchg
or
mov
scas
or
pusha
je
xchg
cli
sbb
scas
cmps
add
and
shl
push
jp
mov
aad
jmp
add
and
(bad)
fcomp
mov
movs
idiv
(bad)
lds
aam
int3
in
scas
clc
popf
icebp
dec
xor
or
mov
out
and
mov
cmp
mov
aaa
test
clc
sbb
aas
adc
cmps
ins
or
mov
int
xor
xor
outs
adc
cmp
push
sub
sbb
jbe
mov
(bad)
dec
daa
stos
in
in
pop
(bad)
ffree
sbb
addr16
(bad)
mov
idiv
in
(bad)
aad
test
mov
add
pusha
xor
arpl
imul
pop
nop
sbb
sbb
jl
and
or
inc
repnz
retf
cmp
jg
mov
mov
cmp
sub
xchg
dec
dec
aam
sub
icebp
arpl
shr
dec
jmp
dec
cmc
mov
sub
or
jecxz
or
adc
test
ret
mov
mov
mov
lods
sbb
mov
and
mov
and
addr16
retf
loop
inc
into
add
inc
adc
cmps
pop
pop
inc
retf
adc
xchg
xchg
push
jae
xchg
loopne
test
push
jg
xor
add
ds
data16
lock
rol
mov
push
push
add
add
cmps
mov
mov
out
jae
xlat
test
mov
icebp
ret
rcl
loopne
popa
repnz
retf
iret
aas
dec
aas
out
nop
(bad)
push
and
xor
xchg
stos
stos
adc
push
call
dec
test
fs
push
sbb
test
xchg
enter
lods
sub
sahf
sbb
inc
adc
jb
scas
stc
push
aam
dec
lds
xor
mov
js
or
mov
jl
fsubr
inc
cdq
mov
sub
mov
push
mov
push
in
clc
cli
cdq
fcomp
cmp
popf
push
pusha
pop
xlat
or
dec
push
jmp
add
clc
fistp
mov
xor
(bad)
cmps
in
inc
mov
movs
jns
push
push
jae
add
pop
add
das
fadd
sar
xor
sbb
ja
xchg
adc
cmp
xchg
shl
cmp
(bad)
cwde
jp
sbb
leave
fnsave
(bad)
sbb
xchg
pop
out
js
jbe
mov
xchg
out
jge
mov
ja
add
and
call
jge
adc
xchg
out
cs
das
pop
movs
rol
call
xchg
daa
outs
or
push
dec
movs
je
mov
enter
inc
sti
push
imul
push
fld
sbb
mov
imul
dec
mov
pop
mov
mov
xor
scas
fisub
or
dec
ror
sub
loop
aam
pop
imul
or
dec
mov
ins
call
sub
test
mov
inc
hlt
mov
push
jl
in
inc
in
int
loope
aam
nop
mov
xor
ja
adc
mov
cmc
movs
or
xor
leave
mov
fdivr
cwde
iret
loopne
or
xor
adc
lock
pushf
xchg
inc
pop
test
sbb
mov
inc
fldenv
pop
shl
ins
pop
dec
jnp
ret
dec
cmp
sbb
adc
sbb
cmp
mov
inc
mov
jne
std
mov
pop
pop
mov
cs
cmp
jl
inc
dec
mov
loope
xchg
xchg
(bad)
fnstsw
out
scas
rcl
es
je
adc
xchg
clc
mov
repnz
dec
and
sub
ins
push
sub
mov
das
cmp
mov
mov
into
mov
push
retf
push
addr16
inc
dec
shr
lods
ss
xor
inc
sub
xchg
(bad)
push
rcr
mov
adc
and
imul
mov
sub
mov
ins
xor
cdq
lock
mov
sbb
or
cmp
jbe
shr
push
es
push
lock
inc
cmp
or
jne
mov
push
cwde
pop
int3
std
or
out
test
movs
push
jp
mov
and
in
ins
loopne
sbb
xor
xchg
pop
lock
inc
fild
scas
adc
lods
inc
and
xor
pop
and
in
xchg
pop
xchg
(bad)
fimul
ds
xchg
loop
scas
mov
mov
jb
ds
call
in
xchg
mov
dec
fistp
adc
aaa
pop
sbb
stos
push
movs
jnp
leave
shl
jne
in
sar
inc
cmp
mov
sub
fcom
adc
das
sub
mov
xchg
repnz
iret
sub
icebp
test
push
xchg
mov
cmp
or
pop
cmp
jbe
mov
cmp
out
cmps
dec
call
or
cmp
jne
mov
push
add
ret
std
jecxz
aad
daa
push
into
jge
inc
add
daa
bound
inc
xchg
(bad)
addr16
mov
mov
popa
xchg
pop
mov
pop
(bad)
or
or
mov
fst
mov
xlat
hlt
dec
adc
inc
mov
les
(bad)
fs
cmp
and
out
and
dec
cld
mov
ins
xor
jle
inc
loopne
xchg
call
daa
arpl
push
loop
dec
js
ja
and
add
sub
pushf
sbb
adc
pop
jo
xor
and
or
test
sahf
ficomp
icebp
ret
add
hlt
call
pop
jo
mov
popf
popf
loope
pop
mov
into
je
add
sbb
add
adc
inc
inc
sbb
fwait
repnz
movs
mov
sbb
mov
adc
pop
test
icebp
fld
dec
shr
leave
adc
pushf
add
out
dec
xchg
mov
inc
iret
gs
ds
mov
push
scas
push
jmp
mov
out
add
ja
sbb
daa
sub
outs
repnz
sbb
xchg
adc
jnp
stos
add
mov
(bad)
rcr
fistp
loop
stos
pop
jecxz
mov
sahf
mov
(bad)
fcmovnbe
je
cmp
xlat
lea
sbb
cmp
mov
je
das
movs
add
aas
iret
mov
and
sub
jno
imul
mov
scas
jp
lahf
mov
dec
ins
clc
push
sar
int
data16
imul
cmp
iret
and
test
lods
ret
pop
sar
mov
and
inc
icebp
out
(bad)
jne
jo
push
arpl
aam
adc
imul
jmp
cmp
or
push
aam
cmp
mov
leave
leave
pusha
cmps
aaa
mov
nop
cmp
(bad)
jp
xor
in
out
sub
sti
jne
fadd
fcom
push
dec
adc
fsub
pop
ret
imul
ins
mov
shl
pop
imul
sahf
arpl
pop
or
and
(bad)
loopne
mov
fld
repnz
inc
mov
xor
mov
aad
xor
dec
js
mov
ficom
sub
xor
retf
je
mov
pop
aam
ds
adc
push
shl
cmps
shl
outs
movs
stos
inc
jnp
mov
pop
call
cmp
add
dec
mov
dec
cmp
sbb
push
push
pop
xor
or
ins
out
adc
and
mov
sbb
push
arpl
xchg
lea
stos
fistp
out
fs
nop
call
popf
test
or
loopne
cmps
push
aaa
js
mul
daa
mov
cmps
dec
cmp
dec
adc
and
je
jp
cmp
call
xchg
bound
fcom
inc
mov
jmp
out
int
xchg
fucomip
pop
in
push
fcmovb
jg
push
sbb
or
xchg
jge
jnp
stc
clc
rcr
xor
or
ja
cmps
les
mov
pop
enter
std
aaa
jl
or
push
scas
mov
cdq
mov
hlt
xor
popa
nop
inc
rcl
jmp
cmc
pop
out
adc
add
push
dec
ret
ficom
add
jl
je
in
xchg
or
jl
(bad)
xor
repz
adc
push
xor
hlt
and
outs
mov
and
sub
mov
stos
jae
xchg
mov
les
out
sub
in
inc
xor
cdq
inc
ret
dec
xor
std
adc
cmp
sar
std
jne
out
adc
test
(bad)
mov
std
mov
mov
adc
scas
fist
push
icebp
scas
ret
popf
ficomp
out
enter
xor
loope
out
add
add
add
int
mov
and
sar
push
scas
stos
rcl
and
daa
dec
jne
xor
and
or
or
das
push
ds
add
dec
clc
pop
push
sub
fwait
jle
jl
sub
cs
mov
pop
loopne
aam
hlt
xchg
jae
pop
stos
jecxz
dec
mov
lods
mov
aam
pop
sbb
sahf
sub
mov
clc
jns
sub
or
jle
mov
cmp
cmp
pop
imul
add
xlat
fptan
das
out
rcl
in
mov
jno
dec
ja
cdq
mov
inc
xchg
fwait
not
xchg
lods
cmps
mov
out
lahf
mov
push
pop
xchg
xlat
in
std
jne
arpl
cs
pop
cmp
xchg
loop
adc
ret
mov
mov
xchg
sti
inc
xchg
popa
dec
dec
and
mov
jge
ds
push
aam
mov
mov
xchg
hlt
shl
inc
mov
ror
and
cwde
popf
adc
adc
adc
iret
(bad)
ins
daa
jo
pushf
or
out
adc
dec
sub
and
dec
add
xchg
call
inc
mov
rcl
retf
stos
mov
sbb
in
pop
cmp
xchg
inc
push
or
cmp
mov
int
sti
mov
and
xchg
sbb
ror
pop
xor
cmps
inc
rol
stos
or
jns
jg
and
aas
add
iret
push
movs
jns
inc
arpl
in
shr
shr
fsubr
loopne
pop
mov
sbb
call
in
mov
pushf
jae
cmp
dec
inc
jnp
out
mov
retf
cs
popf
sub
popa
jb
push
retf
out
or
pushf
sub
adc
fld
add
mov
enter
xchg
xchg
or
xchg
frstor
mov
jge
xor
adc
mov
sbb
pop
outs
int
inc
(bad)
xchg
test
xchg
pop
fs
and
inc
stos
mov
xchg
sbb
adc
inc
cmc
jne
jnp
pop
cdq
fadd
cmc
lea
push
mov
xor
sbb
pop
dec
and
xor
cmp
cli
imul
es
dec
xor
add
(bad)
out
xor
mov
adc
or
push
das
pop
test
adc
inc
or
das
mov
in
xlat
cmp
and
dec
sbb
adc
dec
dec
stos
daa
mov
jne
ror
mov
arpl
sahf
cmp
in
sub
inc
mov
inc
icebp
mov
in
mov
mov
pop
add
jmp
fsubr
lahf
adc
lds
fnsave
pop
jg
sbb
sub
mov
adc
mov
test
push
jle
addr16
sbb
sub
dec
xchg
inc
xor
cli
inc
js
mov
shrd
xor
aad
inc
shl
xchg
xchg
mov
mov
cmps
retf
mov
imul
repz
push
and
inc
or
sbb
jmp
mov
adc
repnz
pusha
cmp
scas
cmp
outs
ss
xchg
dec
push
cmps
pop
sub
nop
adc
das
sar
pop
out
out
lds
jo
mov
dec
int3
mov
pop
pusha
adc
sub
push
add
and
jl
jmp
xor
cdq
and
repnz
(bad)
in
jmp
stos
clc
daa
bound
lahf
fiadd
push
sbb
loop
stos
push
and
mov
ret
xchg
xor
int
dec
repz
sbb
mov
iret
lea
cdq
jmp
ja
and
or
xor
xchg
shl
xchg
popa
sub
mov
dec
test
fistp
cmp
fmul
cmps
fld
push
stos
xor
jae
out
scas
sub
jl
ja
loope
xchg
ret
popf
sbb
xchg
fs
jo
push
push
mov
sub
mov
movs
repnz
std
pushf
push
out
mov
lods
adc
rol
shr
mov
mov
push
or
mov
fcomp
ja
mov
jno
xchg
adc
fs
mov
or
jns
dec
inc
cmp
ds
imul
jne
fwait
loop
jg
out
adc
fist
stos
push
leave
push
(bad)
jmp
inc
and
mov
inc
sub
jg
or
push
jl
push
pop
dec
xchg
pop
(bad)
(bad)
aam
es
mov
cmp
push
pop
mov
mov
inc
pop
cmps
sbb
hlt
std
or
cmp
adc
mov
push
xor
aas
(bad)
cmps
mov
or
cmp
scas
push
jle
pop
mov
fdiv
out
les
jbe
push
jne
xchg
jns
sbb
push
pop
mov
push
sbb
pop
cmps
mov
jge
imul
imul
sub
jle
add
add
jg
jmp
jecxz
out
jg
fidivr
or
rcr
in
out
inc
neg
call
sbb
jnp
gs
xchg
pop
mov
test
dec
mov
aad
mov
add
jb
lods
and
pop
fdiv
das
push
lea
push
in
push
cli
pop
mov
fcomip
sbb
stos
cmp
fs
jge
cdq
stos
iret
inc
inc
(bad)
std
pop
bound
ja
push
jmp
in
jno
cmp
test
outs
mov
outs
pop
xchg
add
in
cmps
mov
dec
daa
nop
inc
xchg
test
sar
and
test
(bad)
cmp
int3
aad
push
jl
sahf
add
pushf
mov
pop
nop
xchg
fwait
sub
fisubr
fdiv
mov
aam
stos
or
cwde
or
or
enter
mov
mov
into
pusha
mov
enter
(bad)
sbb
push
sub
leave
add
bound
xor
frstor
cli
out
in
xor
and
xchg
pop
add
nop
inc
loop
loop
push
xchg
fs
mov
test
dec
sbb
push
scas
adc
cs
or
dec
cld
push
jmp
adc
mov
call
or
or
(bad)
std
pop
jae
mov
sar
xor
sti
int
dec
push
pop
dec
call
es
add
mov
pushf
test
jnp
inc
mov
shl
cs
retf
jmp
cmp
pushf
dec
sbb
inc
add
repnz
mov
jb
std
mov
scas
sti
or
pop
leave
dec
pushf
bound
or
xchg
dec
out
jne
cmp
in
pusha
scas
js
scas
int
repnz
push
int3
dec
or
movs
mov
fstp
xchg
and
mov
shl
mov
enter
aad
push
cmp
mov
dec
call
sbb
(bad)
jbe
jmp
inc
dec
xchg
xor
(bad)
jo
or
xchg
inc
inc
das
loopne
sti
ins
jmp
sub
jmp
aad
sti
outs
pop
add
jns
xchg
bsf
sahf
dec
push
dec
sbb
loopne
inc
in
aam
fbstp
add
jb
mov
pushf
daa
(bad)
jmp
xlat
xor
mov
or
push
fild
sbb
lea
aad
mov
xchg
lods
mov
xor
or
pushf
outs
mov
inc
xchg
push
xchg
in
or
cmps
dec
xchg
or
aas
(bad)
jb
xor
dec
pop
test
das
fisttp
jmp
add
clc
push
movlps
jb
jb
dec
mov
mov
mov
or
jno
push
or
or
and
xchg
xlat
daa
push
in
inc
test
jae
push
inc
xchg
mov
sub
ja
lods
mov
or
mov
mov
lods
out
or
adc
rcr
ficom
push
cmp
jmp
add
sub
shl
inc
adc
jmp
cmp
xor
fnstcw
sub
adc
hlt
pextrw
mov
push
mov
das
movs
sub
stos
je
ss
mov
push
ins
sti
inc
daa
lahf
int
inc
aam
inc
add
cwde
fisubr
ds
cs
stos
xor
hlt
cmps
sub
loopne
test
mov
sbb
sub
dec
mov
xchg
xchg
sbb
sbb
fsubr
test
addr16
mov
out
inc
(bad)
mov
jl
jne
fbld
xchg
cmp
into
gs
aaa
dec
push
sub
ror
sub
pop
push
mov
adc
bound
cmp
dec
xor
cmp
pop
xchg
repz
sbb
sti
repnz
xor
mov
mov
outs
test
jae
outs
adc
xchg
mov
sub
fstp
nop
sbb
jo
gs
xor
nop
outs
iret
mov
icebp
repnz
bound
pop
mov
xor
retf
call
xchg
call
stc
les
add
pushf
mov
popf
xchg
add
sbb
sub
ror
sbb
inc
jge
push
adc
mov
and
loop
enter
pop
mov
jbe
(bad)
jae
fcomp
daa
into
xor
pop
xchg
dec
call
jge
fsub
ds
pop
sub
mov
icebp
ret
scas
sti
fimul
out
and
or
scas
xchg
xchg
add
fsubr
pop
cli
ja
test
pop
jge
js
jmp
cwde
test
push
cmp
hlt
aad
and
hlt
push
and
das
or
clc
lahf
daa
add
xor
mov
mov
jmp
fadd
xor
inc
cmc
inc
ins
fst
div
pusha
mov
fptan
dec
cdq
lock
loope
jge
add
mov
ror
or
das
into
scas
loopne
fwait
popf
test
clc
gs
fwait
sub
shl
jmp
imul
jno
xchg
pop
sbb
mov
addr16
ja
sar
xchg
sbb
daa
mov
les
mov
push
sbb
or
and
and
pop
pop
daa
xchg
or
test
mov
aas
xchg
ror
xchg
xor
mov
push
mov
lock
call
push
leave
call
mov
les
jmp
xchg
inc
xlat
push
imul
push
pop
xor
hlt
clc
sahf
cmp
sti
cmp
jne
out
push
lods
in
cmps
jge
jmp
mov
das
fbstp
sub
ja
cmps
push
xlat
call
iretw
outs
cmp
cdq
adc
popa
outs
int
ins
repnz
out
outs
pop
das
adc
or
pop
sbb
ins
adc
sub
and
inc
lods
mov
scas
push
pop
clc
inc
sbb
repnz
stos
fs
mov
ds
lock
mov
adc
test
cdq
int
bound
add
movs
mov
inc
arpl
sub
icebp
or
xlat
mov
pop
mov
dec
cmp
jae
mov
out
mov
je
loop
in
test
(bad)
arpl
adc
mov
gs
pop
dec
push
mov
ss
or
test
cmp
mov
lods
xor
aad
sub
push
push
lock
push
add
adc
mov
jle
or
sbb
mov
ret
mov
dec
cs
ja
sub
movs
sub
inc
sub
cmps
stos
cdq
stc
xchg
jb
push
mov
lea
in
mov
es
push
sub
or
sub
push
sub
push
push
push
jl
pop
adc
js
into
bound
(bad)
xchg
and
in
push
shl
xor
mov
inc
adc
ffree
pop
lahf
scas
outs
stos
icebp
sahf
stos
cmps
jle
cmps
mov
sub
sbb
push
jns
popf
xor
shl
lds
or
(bad)
stos
push
cmp
mov
pop
in
jp
pop
int
adc
inc
jbe
cmps
xor
icebp
push
arpl
xchg
jb
push
cli
push
or
xchg
int
mov
stos
retf
out
sub
(bad)
aam
mov
dec
lods
and
cmps
xor
pop
xchg
daa
jmp
or
or
cld
xor
inc
jne
pusha
xor
push
mov
test
(bad)
cmps
inc
shl
out
adc
and
dec
cs
mov
cmp
lahf
push
or
or
lock
mov
sub
and
icebp
pusha
jp
sub
inc
pop
sub
mov
ret
lods
repnz
mov
add
mov
bound
imul
fmul
popf
stc
cmp
or
ret
sbb
cli
push
cmps
arpl
aas
test
and
outs
into
mov
mov
stos
aaa
mov
sti
dec
or
mov
push
mov
add
(bad)
pusha
xchg
aam
and
sub
sbb
rcr
add
ror
out
cmp
dec
sub
ret
inc
js
push
cs
xor
leave
push
xchg
pop
imul
ror
adc
mov
push
std
add
mov
jbe
pop
pop
lea
mov
sbb
imul
mov
push
or
pop
cmc
mov
xchg
neg
xor
dec
jl
out
clc
mov
mov
cmp
xor
in
jmp
xor
nop
pop
retf
mov
data16
and
mov
retf
dec
mov
inc
xor
out
bound
xor
pop
and
fsubr
or
pop
test
pop
adc
jnp
repz
xor
fs
out
popa
out
lods
movs
bound
in
xchg
aaa
popf
cmp
repz
dec
inc
cld
pop
xchg
jmp
repnz
dec
or
cs
js
jl
xchg
sahf
rol
mov
xor
pop
cli
repz
jns
jo
pop
dec
and
fcom
clc
xchg
popa
in
or
cmp
pop
xchg
adc
inc
sub
fcomip
mov
popa
rol
je
xor
out
pop
mov
stos
cmps
enter
loopne
sbb
mov
neg
and
addr16
out
mov
push
jg
imul
inc
cmp
out
out
movs
stos
mov
call
mov
add
test
out
mov
test
pop
jmp
adc
pop
data16
stc
outs
xor
dec
rcl
dec
cmp
or
mov
mov
add
cmp
fstp
sbb
test
mov
mov
or
mov
fisttp
pusha
dec
xor
and
fistp
cmps
scas
push
mov
(bad)
pushf
sub
outs
push
repnz
dec
int3
mov
xor
push
sbb
cmps
sbb
out
sub
mov
sbb
or
movs
inc
pop
test
jae
jmp
sbb
and
cmps
dec
and
mov
jge
jle
sub
mov
pop
xchg
xor
sbb
pop
jl
jmp
mov
scas
xor
inc
pop
dec
sti
jp
add
ret
inc
and
xchg
loopne
int
add
mov
push
jl
aas
std
or
or
mov
lock
out
pop
cdq
fild
sahf
jle
mov
mov
jge
iret
js
adc
pop
push
test
dec
nop
out
and
ret
fstp
icebp
iret
jns
cmp
jge
jae
xchg
jl
int
fimul
cdq
cmps
or
repnz
stos
clc
push
pop
adc
add
sbb
ret
pop
aaa
sbb
pop
cli
cmps
out
out
cmp
rcr
sti
outs
and
pushf
lock
cmp
(bad)
jp
outs
jp
shr
addr16
and
dec
pop
and
lea
ds
lds
sbb
push
sbb
push
push
lods
loop
gs
adc
or
ins
cwde
fiadd
icebp
pusha
mov
pushf
stos
pusha
stos
fs
dec
jns
or
(bad)
pop
aam
out
cmps
mov
xchg
xchg
mov
and
push
jge
inc
retf
sub
call
in
sub
cmp
sbb
cmp
sub
test
outs
imul
and
mov
ret
mov
adc
or
out
ret
xor
imul
add
or
jge
rcr
ret
repz
lods
fidiv
ss
mov
push
dec
out
inc
out
ds
into
pop
rol
sbb
out
sbb
mov
stos
xchg
test
inc
inc
iret
(bad)
div
out
mov
push
or
lahf
neg
push
retf
push
adc
pop
in
lods
mov
mov
jg
enter
sub
xchg
pop
pop
push
(bad)
pop
mov
lds
jmp
iret
adc
push
stc
lea
and
jo
jmp
aam
loope
pop
iret
sahf
sub
pcmpeqw
push
mov
int
xchg
or
pop
push
call
mov
or
jnp
adc
repz
dec
ds
mov
adc
stos
xchg
fsub
imul
mov
mov
push
ret
(bad)
cmc
mov
enter
fdiv
mov
adc
test
sub
clc
and
jle
push
(bad)
aad
shl
and
paddd
push
sub
lods
(bad)
adc
add
aam
cmp
stos
lock
movs
out
push
cli
scas
ins
(bad)
push
dec
(bad)
das
mov
cs
loopne
and
adc
hlt
mov
or
fnstcw
mov
dec
sbb
scas
(bad)
into
or
adc
jl
call
out
lods
push
and
sbb
or
jp
inc
stos
cmp
xor
scas
pop
jae
xor
int3
fisubr
mov
aam
aam
push
sbb
cmp
iret
add
cmp
repnz
push
pop
cmp
clc
test
stos
in
inc
cs
jno
(bad)
loopne
loope
pop
push
add
(bad)
pusha
imul
repz
scas
jb
add
and
lods
in
out
mov
dec
ret
mov
jae
fimul
pop
test
outs
xchg
aad
xchg
pusha
imul
and
add
push
pop
les
xchg
inc
jno
pushf
sbb
std
fild
xor
ds
add
daa
xchg
sub
les
hlt
cmc
jns
call
mov
pop
adc
add
jb
not
cld
cmc
cmp
imul
adc
cs
mov
mov
push
loope
inc
popf
sahf
ret
fs
jg
mov
ss
mov
je
pop
fs
clc
push
sub
jmp
pop
and
push
xchg
repz
push
stos
rol
push
mov
out
out
loop
adc
repz
test
loop
clc
xor
cmp
sub
push
add
(bad)
sbb
addr16
sbb
jmp
pop
xchg
inc
daa
pop
dec
(bad)
adc
inc
fsub
jae
jecxz
add
mov
gs
cmp
dec
jmp
push
inc
mov
add
lahf
jg
sub
mov
push
fisttp
mov
mov
fadd
sti
(bad)
sbb
inc
(bad)
lods
sahf
enter
mov
jmp
push
push
cwde
mov
xor
mov
aas
pop
push
int
shl
test
mov
dec
xchg
repz
not
sub
std
fimul
movs
xchg
fisub
mov
popf
mov
ret
xchg
jnp
rcl
dec
jb
xchg
pop
jmp
xchg
or
nop
pop
dec
popf
icebp
and
jle
sahf
push
mov
mov
adc
fscale
pushf
aad
mov
pop
in
sbb
popa
repz
fs
repnz
cmps
dec
or
lods
mov
lahf
loop
jo
sbb
fmul
lahf
clc
sub
pop
(bad)
shl
pop
xor
lea
popa
or
add
xchg
les
jmp
xchg
push
cmps
push
push
out
dec
retf
dec
inc
mov
aas
test
enter
sub
mov
ins
fsub
cmp
pop
cmps
cmp
adc
cmp
mov
sub
pop
jecxz
int
inc
pushf
je
cld
out
sub
mov
(bad)
xchg
inc
jg
mov
mov
push
imul
mov
in
test
outs
xor
mov
add
shufps
nop
rol
add
jbe
das
les
cmc
aas
enter
mov
retf
cmp
xchg
mov
jge
je
pop
nop
push
outs
out
mov
ja
push
ret
int3
sar
push
test
imul
xor
enter
mov
fsub
xor
and
imul
mov
and
shl
inc
or
inc
pusha
adc
in
push
pop
inc
jnp
test
test
test
aaa
fucom
lock
dec
xchg
ds
mov
mov
inc
push
cwde
retf
adc
push
sbb
push
into
fistp
cli
inc
mov
out
adc
push
ins
test
mov
push
sub
dec
pop
mov
mov
mov
pop
into
mov
inc
cs
lahf
xor
imul
ins
hlt
xor
pop
in
jmp
fstp
dec
pop
aam
cdq
cwde
aaa
adc
bound
or
imul
cli
add
jge
xchg
test
sub
sbb
outs
cmps
rcr
push
stos
xor
ret
push
mov
retf
jp
(bad)
pop
mov
fadd
retf
imul
sub
les
repz
in
dec
setl
sub
fcom
je
clc
add
fisub
in
cdq
(bad)
sbb
mov
push
jnp
push
popf
mov
ret
(bad)
daa
cld
push
mov
xor
cdq
mov
fsub
popf
and
loopne
stc
cmc
cmps
stos
mov
out
loop
xor
adc
data16
mov
xor
pop
push
or
adc
inc
loope
test
sub
adc
rcr
fmul
std
and
retf
cmps
dec
call
lds
(bad)
push
inc
dec
lds
xor
fcomp
inc
jns
loope
adc
inc
cwde
into
or
enter
inc
(bad)
sbb
and
push
cld
cmps
add
mov
ret
in
xor
cdq
xchg
imul
or
and
loop
lods
inc
lock
neg
pushf
(bad)
push
sub
xchg
call
ficom
imul
and
scas
adc
(bad)
cmps
sub
stos
add
inc
or
jmp
enter
push
ds
sub
add
addr16
mov
test
mov
(bad)
jmp
xor
inc
pop
jne
std
in
mov
pop
das
(bad)
pushf
outs
popf
xor
xchg
in
and
outs
push
mov
icebp
stos
sub
ror
outs
jne
popf
push
imul
jae
movs
xor
popa
or
sbb
(bad)
lock
mov
mov
cmp
push
dec
add
movs
mov
xchg
sbb
sub
or
mov
jge
mov
xor
dec
pop
sbb
jmp
pop
jmp
enter
jmp
pop
test
push
fnstenv
fld
jecxz
dec
ja
mov
jge
jne
imul
add
xor
lods
mov
fcmovne
ds
jge
ret
sub
iret
sbb
jecxz
pop
sub
fiadd
rcl
add
mov
retf
sub
mov
sub
sbb
add
adc
scas
dec
imul
out
outs
movs
cmc
lock
xchg
lea
xor
push
sbb
repnz
pop
mov
dec
and
out
jmp
mov
xchg
out
sti
sbb
sbb
sbb
cmp
pop
bound
popa
jb
jg
je
into
sbb
fst
ror
ins
mov
int
data16
push
xor
std
mov
popa
mov
pushf
cmps
imul
cli
dec
mov
cli
aaa
add
fst
out
fcmovb
pop
scas
or
fsub
jae
xchg
and
leave
xor
idiv
jle
mov
ror
jo
cs
stos
adc
jg
xchg
popa
fs
mov
pop
pop
add
clc
ss
jl
cwde
xor
out
inc
jne
cmps
fisub
or
jl
jbe
inc
cmps
mov
push
dec
cmps
mov
fldcw
arpl
scas
clc
ror
push
test
bound
rcl
xor
inc
jle
sub
add
rcr
mov
pop
jmp
dec
xchg
pop
daa
out
inc
or
mov
div
test
push
adc
(bad)
clc
rcr
sar
out
out
push
hlt
les
stc
rcr
idiv
mov
leave
push
xor
mov
jge
push
aaa
push
in
mov
retf
inc
ins
int
sahf
test
nop
fisubr
in
ja
aaa
sub
rcr
xlat
dec
ret
add
call
aas
inc
enter
jne
es
sbb
push
xchg
push
inc
lods
inc
inc
loopne
mov
or
mov
pop
push
fneni(8087
out
or
inc
mov
aaa
sar
mov
mov
sbb
mov
xchg
push
movs
sub
jecxz
aad
stc
mov
inc
push
mov
scas
enter
imul
mov
(bad)
sub
jp
(bad)
retf
cmp
jns
sbb
dec
pop
pop
mov
xchg
dec
pusha
dec
add
inc
add
jno
push
push
in
xchg
mov
shr
xlat
push
mov
inc
dec
or
ror
lods
jl
scas
xchg
pop
nop
mov
xor
das
jbe
cdq
outs
dec
test
push
push
pop
jo
shl
movs
leave
push
jmp
mov
jno
fimul
xor
jbe
sbb
aas
or
jmp
xchg
scas
test
lods
scas
jge
jmp
std
fst
pop
sub
sbb
pop
ins
jl
std
pop
(bad)
bound
mov
mov
ficom
pop
(bad)
add
push
push
(bad)
movs
inc
test
push
(bad)
jl
mov
jg
scas
fistp
sub
into
xor
sbb
fs
fsubr
dec
daa
adc
xor
mov
movs
sbb
pop
fnsave
mov
ds
cdq
pushf
loopne
loop
loope
add
xor
sub
lock
ror
aam
pop
(bad)
jae
clc
xor
mov
xchg
pop
push
repnz
dec
pop
sub
fdivrp
retf
inc
sub
jo
xor
aaa
and
shl
inc
adc
xor
idiv
ins
test
sbb
lods
addr16
in
push
inc
loopne
xor
movs
mov
push
sub
aas
sbb
hlt
shr
test
(bad)
in
call
loopne
cmps
push
mov
adc
sub
test
pop
mov
xor
adc
cmp
or
inc
enter
addr16
test
mov
popa
mov
retf
pop
adc
inc
cli
push
es
in
icebp
fwait
call
fcomi
cmps
xor
rol
das
in
and
call
pop
cmp
or
jnp
dec
mov
gs
ss
and
push
out
ret
dec
call
mov
in
mov
or
or
pushf
ja
pop
rcr
sbb
test
jo
pop
daa
pop
inc
fs
cli
cmps
push
in
jge
das
jae
mov
mov
ror
shl
pop
cmps
cmp
loop
repz
jle
xchg
jno
inc
cdq
push
pop
jle
and
sbb
sahf
ret
pop
inc
hlt
mov
data16
pop
mov
inc
imul
dec
cmc
push
jge
fcmovnbe
js
nop
cmp
push
sub
xchg
or
arpl
inc
add
or
mov
sub
pop
sub
jmp
mov
fsub
jb
sub
dec
ins
sub
push
inc
daa
sub
jne
pop
call
push
add
mov
or
inc
push
push
mov
lds
sub
mov
inc
cmp
aas
dec
mov
fimul
sub
mov
mov
dec
fwait
and
fisubr
inc
aam
(bad)
mov
jl
dec
adc
jbe
inc
lods
xor
mov
ror
xchg
push
jnp
inc
dec
popa
(bad)
push
inc
icebp
test
aam
aaa
shl
or
lea
shr
sar
loop
mov
jecxz
inc
xchg
mov
dec
(bad)
jmp
loop
dec
cmp
mov
mov
xchg
jo
aad
cli
mov
lods
lods
aad
adc
jmp
fs
dec
push
or
in
push
test
in
xor
repnz
stos
or
mov
arpl
shl
jg
and
mov
mov
scas
xchg
xor
pop
xchg
mov
mov
pop
clc
je
xor
ins
ret
call
push
mov
cmp
xchg
push
aaa
dec
push
cmp
xchg
inc
push
mov
fidivr
cmp
push
push
sbb
js
ss
pop
das
mov
pusha
clc
mov
sub
outs
call
jbe
stc
and
fbld
mov
scas
outs
mov
and
popa
inc
arpl
aaa
fwait
aaa
add
sbb
jge
sahf
dec
push
ins
pop
neg
cdq
ret
sub
mov
pop
sub
int
call
xchg
jnp
dec
inc
add
sub
mov
hlt
jb
xchg
ja
push
pop
adc
xchg
ret
jmp
xor
in
dec
xchg
push
xchg
xchg
fadd
loopne
xlat
lahf
cdq
sub
adc
in
mov
fmul
or
jae
arpl
and
mov
movs
xor
fisub
dec
enter
xchg
jl
jmp
add
(bad)
and
test
ret
and
cmp
mov
mov
pop
fdivp
jne
sbb
adc
mov
in
push
cwde
jns
cmp
das
sub
(bad)
(bad)
push
mov
shl
jecxz
ins
scas
jns
in
mov
adc
ins
xchg
add
cmps
out
inc
jecxz
add
data16
in
fidiv
push
loope
push
or
pop
cli
hlt
dec
test
mov
pusha
mov
scas
mov
ss
jo
mov
dec
sbb
lods
mov
in
fwait
jnp
mov
push
push
inc
jmp
pop
in
scas
push
pop
push
lds
fxch
xchg
xchg
fwait
mov
aas
or
lock
cmps
mov
pusha
cmp
inc
imul
jnp
retf
mov
test
pop
test
popa
mov
call
add
xor
(bad)
iret
mov
lods
repz
imul
or
sbb
jmp
sbb
pop
xlat
in
or
dec
inc
cmp
push
xor
xchg
scas
daa
and
push
in
imul
xchg
jmp
pop
jmp
xchg
dec
jae
retf
cld
pop
and
jnp
mov
sbb
outs
shr
int3
imul
test
in
mov
sbb
cmp
ins
aaa
sbb
jl
add
mov
(bad)
scas
sub
loope
pop
xchg
loop
add
mov
popf
mov
sbb
sub
aaa
icebp
outs
add
jae
or
in
mov
inc
mov
enter
rol
pop
jmp
fisttp
or
and
ror
not
lahf
cmp
and
mov
aam
mov
xchg
lock
pop
icebp
or
or
ret
push
adc
jns
lds
les
sbb
xor
loope
call
dec
arpl
daa
pop
rol
mov
sbb
stos
bound
sahf
cmp
and
inc
dec
jne
and
pop
adc
sbb
xchg
ds
add
(bad)
sbb
ret
dec
test
bound
fistp
test
dec
add
std
push
cwde
inc
inc
lea
mov
xchg
pop
pop
das
cmp
mov
hlt
lds
fisttp
mov
sbb
add
into
jp
(bad)
add
jmp
jo
mov
and
push
ins
jnp
pushf
inc
mov
mov
shr
jmp
jne
pop
push
sub
pop
lods
xor
nop
ss
movsx
pop
out
fsubr
lea
int
mov
push
push
fist
add
xchg
or
(bad)
loopne
mov
pop
mov
std
mov
jle
sub
adc
xchg
sub
lds
fcomp
cmp
jl
inc
push
push
jge
and
je
lods
(bad)
fcom
sbb
mov
pop
mov
repnz
or
xor
xchg
das
xchg
mov
das
fstp
mov
mov
mov
mov
jge
push
mov
dec
das
shl
call
inc
call
dec
and
mov
fwait
dec
loopne
lahf
into
ret
ins
sbb
mov
xchg
xor
daa
or
adc
nop
(bad)
test
sbb
fsubp
xchg
mov
dec
imul
xor
cmp
push
mov
std
mov
in
mov
dec
hlt
or
push
inc
add
pop
pop
icebp
gs
jge
stos
xor
mov
xchg
retf
xor
mov
sub
mov
int3
and
xor
gs
fnstsw
mov
inc
cmps
push
ins
push
mov
div
jecxz
test
loopne
mov
push
cmps
and
icebp
cli
inc
ss
and
sub
cmps
cli
cmps
aam
add
cli
pop
xor
xchg
or
repnz
dec
dec
std
sahf
movs
pop
jns
pop
in
scas
sub
sbb
retf
mov
jge
or
repnz
mov
xchg
mov
enter
mov
add
in
movs
movs
pop
in
fiadd
xor
mov
leave
xor
clc
(bad)
push
stc
cdq
xor
sub
data16
daa
ss
xor
and
out
inc
imul
aam
cmps
shl
and
stc
mov
mov
(bad)
sbb
sbb
ins
mov
or
sub
mov
cmps
repnz
pop
ja
loop
call
pop
lods
je
ins
sub
cdq
dec
sub
pop
das
iret
push
out
jo
pop
lock
pop
test
adc
cld
jns
inc
pop
mov
stos
inc
jge
cmp
lahf
and
jb
call
push
push
jnp
mov
into
in
cmp
arpl
jp
mov
and
ret
out
icebp
dec
mov
into
fdivr
fs
sbb
mov
inc
sbb
jp
lods
mov
adc
xchg
jmp
aam
mul
daa
into
push
push
stc
add
aaa
xor
sbb
dec
ficomp
shl
pop
xchg
clc
xor
aaa
or
or
sbb
loop
xchg
sub
cmp
cmp
popf
jb
ss
pop
dec
test
pop
mov
adc
add
movs
mov
fwait
add
pop
and
sbb
sub
mov
mov
neg
das
jae
mov
les
rcl
or
cmps
fisubr
xchg
xlat
sub
xor
scas
inc
cmp
aas
sbb
lds
inc
movs
(bad)
(bad)
gs
jmp
pop
std
les
sbb
mov
mov
inc
sahf
or
inc
out
jbe
ins
jb
out
cmp
add
or
movs
stos
clc
in
pop
dec
mov
jl
or
cmps
cs
scas
mov
sbb
cli
in
aad
mov
jg
sub
arpl
lea
mov
mov
xor
sahf
sbb
xchg
ror
daa
ret
loopne
sbb
imul
scas
and
push
test
xchg
ror
mov
jecxz
(bad)
gs
mov
sub
movs
ja
inc
dec
retf
int3
sub
sbb
inc
pop
in
mov
cld
inc
aas
add
mov
iret
repnz
pop
sbb
mov
xchg
mov
adc
mov
inc
ins
adc
sub
cs
arpl
test
mov
test
leave
mov
mov
aaa
cld
call
mov
pop
push
out
int
xor
xor
mov
mov
push
jp
xor
adc
and
int
(bad)
cld
popa
sar
add
pusha
xchg
sbb
inc
sbb
rol
pop
cmp
jge
out
push
fist
xor
imul
cmp
mov
fcom
dec
mov
jnp
jecxz
adc
in
cmp
mov
jne
dec
sub
sahf
(bad)
out
in
ss
test
add
test
(bad)
fstp
loope
outs
mov
stos
mov
or
push
or
(bad)
mov
mov
enter
(bad)
cli
in
iret
pop
pop
sbb
pop
add
(bad)
std
pop
and
jne
pop
daa
push
cdq
movs
addr16
(bad)
mov
xchg
lods
adc
sbb
jmp
add
xchg
mov
call
pop
in
(bad)
jge
stos
test
hlt
jg
or
jge
add
cli
lds
rep
out
and
(bad)
sub
xchg
sub
repnz
push
mov
lds
xor
aaa
add
or
cmp
push
cmp
in
repz
mov
(bad)
test
popa
jp
loope
fimul
lds
loope
out
rcl
pop
lahf
jmp
push
(bad)
rcl
movs
sahf
jne
adc
or
jb
xor
add
es
(bad)
cmp
add
popf
dec
ds
cmp
outs
fmul
sbb
and
jl
cmp
sahf
fnsave
mov
retf
nop
pushf
test
mov
mov
push
dec
dec
gs
jge
mov
push
pop
push
push
cmp
out
xchg
mov
in
gs
add
rcl
push
add
dec
aam
sub
pop
stos
cdq
push
inc
pop
cmp
jb
into
cmp
and
mov
adc
push
aam
in
cmp
fwait
jmp
sub
imul
lea
add
jbe
and
test
pminsw
call
sbb
cmc
retf
cmp
cdq
cmp
stc
dec
jg
dec
push
pop
cli
add
mov
icebp
or
jnp
mov
sub
and
cdq
loop
jb
mov
out
mov
fst
pop
mov
(bad)
outs
xchg
cwde
daa
fs
sahf
inc
lods
ret
inc
xor
(bad)
sbb
call
jmp
sti
mov
xchg
jl
bound
or
in
mov
mov
or
inc
or
cmc
cmc
or
dec
mov
(bad)
scas
push
jne
mov
inc
fidivr
and
mov
sbb
xor
cmp
imul
xchg
mov
mov
and
xor
or
inc
pop
mov
dec
lods
cld
cmc
loope
in
cmp
mov
jmp
inc
int
xchg
sub
sub
mov
jge
mov
cmp
icebp
(bad)
cmc
mov
lds
frstor
mov
push
xchg
out
cmp
jb
xchg
loop
pop
xlat
or
jp
adc
mov
mov
ins
or
test
mov
fwait
icebp
cli
test
mov
(bad)
in
jle
stc
pushf
(bad)
sub
sbb
jnp
int3
outs
imul
adc
and
mov
inc
fsubr
in
mov
sahf
jo
mov
cld
aam
pop
dec
sub
push
sub
mov
stos
fidivr
and
mov
cld
ror
scas
paddq
icebp
repz
push
or
add
call
ret
mov
mov
jg
xchg
ins
enter
mov
mov
xchg
mov
hlt
cli
inc
jb
xchg
retf
sar
dec
push
scas
dec
lods
and
loop
or
scas
mov
sub
repz
mov
jge
add
rep
pop
ss
inc
or
sbb
cmps
fild
jne
sahf
leave
(bad)
nop
pushf
push
push
xchg
sbb
inc
pop
cmp
mov
out
stc
jle
(bad)
push
dec
xchg
xor
jae
mov
cmp
xlat
dec
ror
dec
sub
add
shr
mov
mov
iret
mov
mov
scas
imul
test
fsubr
mov
icebp
std
sar
ja
add
dec
call
cmps
stos
mov
sub
enter
ins
pop
cmp
in
xchg
cs
clc
inc
cmps
xor
gs
mov
stos
ins
jg
mov
ins
test
cmc
sbb
push
gs
xor
push
test
xor
xor
std
adc
sub
mov
xchg
fidiv
pushf
das
pop
sbb
jnp
mov
loopne
mov
pop
or
fst
popa
xchg
sbb
ins
ss
sub
mov
jbe
xchg
(bad)
js
(bad)
jmp
fdivp
pop
sbb
pop
(bad)
fcmovnb
imul
add
out
ret
stos
pop
mov
jne
pop
aaa
mov
adc
mov
xor
ret
or
test
das
or
lods
repz
xchg
cmps
mov
xchg
in
pop
inc
lahf
mov
(bad)
push
mov
jecxz
addr16
inc
pop
aas
mov
inc
cli
xor
bound
or
pop
jge
mov
retf
mov
pop
xchg
ds
mov
imul
mov
cmps
xchg
xor
and
mov
out
push
cmp
(bad)
push
xor
in
in
mov
sub
aam
sahf
bound
clc
movs
fmul
lea
or
test
out
fisub
in
or
xchg
imul
repz
mov
push
add
dec
jne
add
lahf
idiv
push
fdivr
ja
(bad)
jmp
out
int3
fwait
in
retf
push
test
push
daa
test
pop
push
loope
ins
pusha
cmp
call
dec
cld
add
je
jle
sbb
and
shr
cli
push
shr
dec
sbb
in
and
jo
jge
push
cmps
shl
pusha
jne
imul
jne
(bad)
enter
shl
push
fnstenv
cmc
ss
fwait
popa
ret
xor
cmp
add
push
test
sbb
lahf
xchg
mov
sahf
sub
mov
or
lahf
popa
xchg
xchg
pop
fild
cmp
xor
pushf
hlt
mov
outs
call
push
or
popa
stos
xor
pop
and
and
push
or
pop
pop
push
sbb
imul
jg
push
stos
cdq
pop
inc
xchg
xchg
aad
adc
mov
and
loop
int3
mov
or
push
cmp
mov
cmp
shl
xchg
mov
out
shr
sbb
xchg
or
lea
outs
dec
jmp
adc
inc
or
sbb
bound
mov
and
xchg
dec
into
icebp
mov
push
in
cmp
mov
fs
ret
mov
sbb
dec
jmp
pop
jecxz
outs
lea
jmp
ss
or
push
sbb
and
mov
sbb
fisubr
and
lds
xchg
and
inc
test
xchg
add
fcomip
pop
into
pop
adc
jbe
test
push
imul
mov
bound
out
mov
cdq
fs
jmp
add
div
mov
sbb
(bad)
iret
loop
mov
push
test
bound
test
pop
rcl
sti
popf
push
lahf
cmps
sub
xchg
xlat
and
pop
(bad)
pop
adc
sbb
daa
data16
not
xor
dec
push
push
int
scas
fisttp
inc
adc
xor
cmc
mov
xchg
adc
lock
cwde
sub
add
neg
(bad)
fidivr
pop
test
and
mov
adc
cli
hlt
jne
or
add
dec
(bad)
call
int3
fistp
xor
pop
inc
(bad)
mov
mov
and
and
xor
loope
sub
mov
sbb
out
jecxz
inc
call
pop
retf
xchg
jmp
push
cmp
ja
mov
push
cmp
mov
stc
fsub
inc
jne
sub
ins
mov
mov
cmps
daa
push
dec
mov
xchg
inc
add
popa
xor
cmp
and
or
stc
jne
and
sahf
mov
push
mov
pop
jecxz
out
jnp
jnp
pop
repz
jmp
lods
pop
aam
or
ins
sub
aad
jne
xchg
sar
test
in
inc
mov
out
jl
sbb
jae
jmp
fadd
movs
scas
pop
push
jmp
xor
sub
test
ins
dec
out
lods
xchg
icebp
jmp
frstor
sahf
mov
not
pushf
je
pushf
loope
fnstsw
neg
sbb
jmp
fsubr
(bad)
lds
push
outs
pop
push
loope
stos
jne
sqrtps
jb
aas
popf
retf
sbb
dec
push
fisttp
ror
mov
mov
mov
int
and
jmp
lds
mov
test
inc
sub
cdq
rcr
ret
es
xor
mov
mov
cmc
in
ret
stc
mov
jo
cmp
or
daa
and
add
aaa
and
call
call
lock
lock
js
je
arpl
xchg
outs
cwde
mov
push
mov
push
inc
mov
sahf
jmp
test
push
(bad)
adc
or
mov
fdiv
dec
mov
sbb
mov
cmp
pop
mov
pop
fucomip
mov
call
dec
add
dec
push
in
fwait
mov
jnp
dec
inc
cmp
(bad)
cmp
out
xchg
cdq
lods
cmp
jnp
imul
out
je
jmp
inc
clc
rcl
push
pop
cmp
push
adc
ret
sub
fdivr
movs
cmp
stos
inc
loope
xor
fxam
add
shl
movs
mov
cmc
leave
stos
mov
or
fwait
mov
mov
sbb
pop
inc
sub
xor
movs
hlt
aam
pop
push
xchg
mov
loop
push
push
(bad)
mov
push
fadd
cmp
ret
jecxz
call
std
idiv
dec
adc
mov
or
mov
aam
xor
outs
xchg
mov
imul
mov
sti
std
jne
inc
xor
sbb
dec
adc
cmp
shr
into
cmps
rcl
sub
sub
xor
test
dec
or
add
pop
adc
clc
xchg
or
mov
or
and
inc
aaa
test
push
dec
out
cli
jg
push
das
sub
fwait
ror
mov
mov
pop
dec
shr
push
fild
popf
mov
pop
std
add
(bad)
arpl
pop
dec
(bad)
jle
shr
es
sub
sub
add
add
imul
mov
leave
pop
nop
adc
mov
sub
sahf
adc
ds
(bad)
and
sbb
rol
and
pop
dec
dec
sub
jnp
push
pushf
lods
adc
jmp
cmp
mov
mov
fistp
sub
(bad)
hlt
sti
xchg
pop
add
cmp
das
and
ins
jns
jmp
rcr
jo
fsub
rcr
sahf
aaa
xchg
(bad)
pop
mov
xlat
pop
jne
sub
enter
(bad)
inc
mov
inc
retf
push
ret
mov
fxch
xchg
mov
imul
mov
out
movs
jo
adc
test
hlt
stos
lods
popa
addr16
push
xchg
or
data16
sti
xlat
and
bound
push
mov
and
retf
jp
lea
leave
jbe
pop
aam
aas
dec
jmp
push
fdiv
cwde
push
mov
sbb
mov
popf
arpl
dec
inc
mov
push
(bad)
(bad)
in
loop
push
add
je
enter
xchg
das
test
sbb
call
cmp
pop
lods
or
sbb
lds
dec
push
cs
xor
jp
bound
mov
jno
lods
jge
or
cmp
xor
mov
mov
fstp
pop
adc
icebp
cmp
sub
call
arpl
mov
add
xor
sub
mov
mov
mov
cmps
je
ja
sti
imul
(bad)
mov
xchg
lea
mov
xor
adc
pop
es
dec
mov
push
pop
enter
mov
push
in
mov
repz
sahf
sbb
lods
jnp
xchg
fisub
xor
push
sub
mov
sbb
adc
jae
xor
mov
in
mov
xchg
fistp
mov
ds
mov
ins
mov
fcom
add
adc
aam
jl
mov
mov
outs
and
loope
scas
push
arpl
jmp
push
jp
inc
ins
out
jge
cmp
xchg
dec
push
mov
fdivr
sbb
and
mov
or
xlat
push
cdq
fld
pop
xchg
adc
jl
add
mov
outs
and
cs
push
cmp
movs
xor
bound
add
mov
jbe
and
push
int
add
xchg
jnp
popf
out
into
daa
mov
icebp
retf
dec
mov
int3
movhps
imul
loopne
mov
mov
fild
repz
inc
movs
movs
cwde
lds
pop
inc
pop
inc
out
out
popa
popa
ins
xor
sbb
fmul
fidiv
and
aaa
sub
xchg
icebp
call
shl
fisttp
push
dec
sbb
pop
mov
movs
(bad)
jg
test
es
or
ret
adc
cmp
jae
popa
xchg
push
int
xchg
rcr
cmps
or
mov
adc
(bad)
inc
dec
cmp
cmp
lods
data16
mov
int3
xchg
and
mov
push
fsubr
mov
fild
xchg
push
mov
dec
jmp
lods
js
jecxz
sbb
sbb
cmp
inc
retf
cmp
add
ss
adc
loop
int3
cmp
aas
push
dec
and
aam
inc
call
lds
lahf
cdq
push
pushf
add
push
(bad)
fadd
dec
inc
or
or
(bad)
clc
sbb
rcl
ss
mul
int3
movs
imul
rcl
in
adc
imul
icebp
arpl
inc
push
in
shl
dec
push
stos
dec
out
dec
and
and
or
retf
mov
mov
push
shl
fmul
out
ds
mov
and
iret
aaa
mov
and
mov
adc
dec
sub
mov
cmc
mov
jecxz
dec
stos
fbstp
xor
rcr
(bad)
int
fxam
lea
mov
lods
(bad)
repnz
ret
sar
push
mov
adc
repz
xchg
inc
test
scas
pop
jecxz
mov
pushf
pusha
std
mov
xchg
in
out
sub
mov
xor
les
aas
pop
imul
int
xor
aam
xchg
sub
mov
pop
sbb
jmp
stos
mov
pusha
or
xchg
push
movs
or
shr
cmp
cmp
ss
jmp
shr
push
xor
adc
sub
std
sbb
inc
push
test
sub
jbe
aam
es
xor
pop
fcomip
add
mov
or
gs
jmp
mov
ds
stos
pop
and
popa
test
mov
inc
and
loope
jne
ficomp
push
test
mov
and
push
dec
fs
fiadd
jbe
xor
rcr
push
dec
sub
adc
pop
cwde
movs
mov
dec
sub
std
in
and
push
jmp
or
sbb
das
fidivr
imul
mov
add
jbe
lds
and
arpl
mov
cmp
mov
test
fistp
mov
mov
test
test
push
sbb
push
repnz
xor
push
fldcw
mov
xchg
sbb
or
inc
pop
gs
push
jb
outs
mov
stc
in
out
sub
mov
push
cs
fwait
jl
out
lock
sbb
hlt
adc
cs
outs
retf
ins
shl
shl
stc
sahf
in
jae
mov
sbb
push
cmps
push
jo
mov
inc
cmp
sub
pop
int
data16
push
dec
ret
jae
pop
jmp
push
inc
sbb
add
pusha
inc
push
mov
fwait
pop
sbb
js
cwde
cld
stos
and
cmps
repz
jnp
shl
add
fs
movs
xor
jge
loop
or
ins
ret
inc
cli
inc
push
push
or
pop
xchg
push
mul
test
mov
stos
(bad)
mov
gs
fbstp
jl
push
adc
enter
mov
pusha
xchg
das
mov
or
xor
pusha
jnp
and
loopne
sbb
frstor
and
jns
data16
sahf
push
aad
cmps
in
cs
ins
add
inc
daa
jae
sub
mov
lock
pop
fldenv
test
stos
and
inc
sub
cs
cmp
(bad)
cs
pop
cmp
lock
inc
jl
xchg
in
call
jge
push
scas
xchg
or
ror
cmp
aas
inc
push
or
movs
xor
fst
mov
adc
sbb
push
scas
out
xchg
out
pop
cmps
or
or
cli
ds
or
and
xor
les
outs
addr16
pop
adc
xchg
jno
pop
jg
frstor
mov
push
xchg
loop
and
mov
adc
dec
(bad)
ds
ss
inc
add
rcr
xchg
inc
inc
dec
nop
fwait
mov
jne
test
(bad)
in
and
jle
jp
add
std
mov
loope
sbb
inc
mov
bound
fdiv
dec
mov
fdivr
xchg
movs
data16
test
fidivr
inc
mov
dec
xchg
(bad)
adc
or
stos
pop
(bad)
shr
push
out
ret
rcr
ins
push
push
cwde
jo
(bad)
xchg
movs
(bad)
in
mov
and
xor
inc
push
mov
mov
mul
in
ret
mov
fdiv
aas
aam
inc
and
test
push
dec
test
jno
sub
pusha
and
add
ds
jmp
sub
fdivr
jo
sub
jns
repnz
xor
xchg
xchg
adc
xlat
cmp
xchg
inc
pop
dec
sub
sub
loop
imul
(bad)
xor
retf
push
daa
sbb
adc
cmc
loop
xchg
jb
cmps
rcl
cli
or
ja
jb
call
call
xor
cmc
xchg
pop
in
pusha
and
adc
das
test
pop
(bad)
mov
test
stc
dec
mov
in
push
pop
imul
je
mov
pop
ins
lea
lods
jecxz
outs
xchg
call
jbe
fs
sbb
mov
jl
xchg
rcr
jns
sar
js
aam
jb
add
movsx
and
dec
(bad)
out
fnstenv
and
aas
pop
inc
add
iret
cwde
add
or
sbb
or
cmp
mov
add
fist
sub
out
push
mov
cmp
jns
add
mov
std
int3
leave
in
xchg
dec
cmps
(bad)
cwde
call
stos
xchg
push
call
jmp
out
outs
in
push
scas
xor
cmp
mov
movs
cmp
mov
scas
pop
fistp
xlat
xchg
adc
dec
test
jmp
xchg
mov
push
std
dec
imul
fdivr
loope
adc
daa
push
jp
imul
mov
mov
out
and
xchg
mov
jo
iret
push
ja
out
in
cmp
out
dec
retf
xor
(bad)
ds
mov
or
ret
add
repz
mov
ds
mov
ds
mov
std
xchg
pop
sub
imul
loop
das
int3
fild
jae
adc
sub
adc
add
pusha
adc
push
fild
sbb
ins
inc
mov
push
out
and
lahf
psrad
test
lock
mov
inc
fld
sti
xchg
shl
xchg
cmp
sub
xchg
mov
pop
icebp
out
sbb
rcr
cmp
and
adc
lods
mov
sbb
addr16
mov
aad
cli
js
pushf
frstor
stc
out
and
pop
(bad)
in
jge
hlt
leave
out
mov
xchg
pop
xor
je
mov
push
js
sub
aaa
jg
push
into
ret
aad
jp
hlt
rcl
mov
movd
sub
lods
add
dec
cmps
mov
sub
lods
ret
test
ficomp
sub
aam
aaa
out
stc
pushf
xor
addr16
in
jle
daa
adc
hlt
xor
pop
dec
nop
sbb
shr
(bad)
jp
out
dec
ds
add
test
ret
jp
push
push
mov
pop
xchg
iret
xchg
lock
pop
xor
mov
leave
push
inc
xor
sub
adc
pop
fadd
sub
call
pop
dec
pop
pushf
and
or
loop
inc
jns
int3
call
xchg
pop
inc
inc
jo
(bad)
and
int3
pusha
ret
pop
mov
jmp
push
mov
ror
retf
(bad)
setns
(bad)
cli
mov
push
xchg
fisub
sub
dec
nop
xor
and
jle
sbb
popa
imul
in
leave
dec
hlt
or
fisttp
movs
in
mov
cmp
and
mov
jne
push
dec
dec
fistp
ret
cmp
sbb
in
leave
sub
sbb
(bad)
xchg
dec
pop
icebp
mov
or
jmp
cmp
leave
mov
xchg
aas
ret
fs
out
repz
js
adc
xchg
or
sbb
out
cmp
or
cmps
int
outs
xchg
push
pop
cmp
inc
movs
inc
inc
pop
icebp
test
js
jae
je
jne
cmp
push
repnz
or
push
aam
cmc
sub
dec
add
xor
sbb
ja
push
movs
jl
loopne
nop
popa
push
mov
and
ficomp
fst
xchg
mov
push
movs
xor
xchg
mov
push
out
push
add
(bad)
pop
sub
jns
sti
shl
call
add
das
cli
xchg
(bad)
cwde
mov
push
loop
and
ins
pop
pop
pop
pushw
popf
inc
mov
mov
sar
outs
dec
jbe
mov
fnstcw
in
outs
movs
mov
mov
add
adc
xor
cmp
fucom
cmp
mov
sar
daa
jbe
mov
int3
jns
stos
enter
mov
call
sub
(bad)
movs
sub
or
pushf
mov
pop
cwde
xor
xlat
outs
xor
repz
data16
ins
dec
jmp
push
outs
loopne
lds
and
or
test
lock
pop
mov
cmp
mov
cmp
jmp
push
repnz
cmp
or
fucompp
push
and
loopne
aad
adc
call
pushf
pop
mov
mov
sbb
mov
add
sub
int
push
adc
jle
mov
jg
movs
adc
dec
mov
out
loop
cld
pop
adc
dec
(bad)
xchg
xor
mov
shl
test
rcl
ret
lods
fcmove
jge
jno
or
std
adc
out
or
cmp
xchg
fstp
imul
not
scas
test
mov
xchg
(bad)
xchg
jns
xor
adc
(bad)
cdq
mov
xchg
iret
xchg
stos
push
mov
fstp
push
fmul
pop
out
sbb
loopne
add
sbb
iret
fistp
dec
sbb
pop
pop
push
(bad)
daa
outs
pop
add
mov
inc
push
ins
jno
adc
and
aam
pop
cmps
cmps
pop
movs
and
xchg
and
(bad)
not
xchg
addr16
mov
test
inc
xchg
ret
cmp
dec
cmp
adc
xlat
mov
xlat
fs
pop
jmp
scas
xchg
fldenv
push
mov
lock
mov
mov
pop
ss
mov
arpl
pop
fmul
inc
jmp
fptan
shr
arpl
stc
stc
mov
aad
int
push
fldcw
and
dec
stos
int3
mov
dec
ficom
sbb
std
mov
stos
mov
inc
fcmove
(bad)
jne
mov
xchg
cld
mov
clc
outs
or
mov
test
sar
inc
jecxz
test
adc
sbb
(bad)
xor
xchg
dec
stc
pop
xor
dec
hlt
jnp
loop
or
or
ins
movs
gs
ins
scas
nop
stos
(bad)
out
xor
jno
scas
dec
sar
cld
mov
icebp
inc
mov
stos
ins
mov
arpl
cwde
jns
pop
dec
popf
stos
adc
aad
add
out
lds
mov
sub
cmp
mov
add
into
mov
aaa
adc
mov
mov
and
xchg
pusha
ins
or
inc
fwait
xor
cmp
adc
pop
xor
xchg
int
outs
(bad)
aam
cs
cld
and
xchg
ins
fwait
inc
sub
push
pop
cli
repnz
xchg
cmp
aam
xor
not
mov
xlat
sar
fs
jge
data16
mov
jmp
lea
inc
call
add
inc
xor
mov
imul
jmp
fist
aad
push
and
dec
or
lds
cmp
fsubp
xchg
ins
add
pop
(bad)
jnp
in
mov
xchg
push
sbb
dec
jmp
adc
(bad)
cmps
imul
into
jg
or
jp
cmp
nop
dec
jns
and
cli
inc
pop
adc
fdiv
mov
mov
fild
in
ds
repnz
inc
push
push
push
and
adc
mov
shr
push
mov
add
and
outs
jo
test
add
push
jno
data16
or
js
add
inc
hlt
loopne
push
icebp
cmp
into
xchg
out
pop
jo
sbb
pop
movs
jl
test
mov
xchg
out
mov
mov
dec
repnz
xor
iret
int3
pusha
shl
mov
lahf
or
jmp
pop
(bad)
jmp
pushf
lahf
jno
mov
push
ds
and
test
sbb
jp
out
cmps
sti
cmp
push
mov
fistp
loopne
xlat
sbb
fucomip
popf
sahf
xor
imul
ret
mov
pop
ins
jl
inc
jb
mov
std
mov
rol
imul
int
dec
cmps
mov
cmc
xchg
cmp
xlat
mov
int3
xchg
sub
or
dec
in
push
clc
and
arpl
sar
sbb
in
fchs
or
dec
pop
sbb
shl
ins
or
push
das
mov
pop
shl
add
(bad)
enter
ins
div
stc
jp
dec
mov
mov
inc
and
xchg
fwait
sub
mov
(bad)
es
jp
pop
or
pusha
mov
imul
pushf
pop
jmp
mov
adc
mov
sti
jmp
outs
xor
adc
adc
jae
fs
jae
mov
movs
jecxz
sbb
or
cwde
push
stos
jo
dec
or
fist
and
dec
and
mov
loope
test
bound
cdq
xchg
setae
shl
xchg
mov
pop
pop
popf
jmp
adc
cmp
xor
in
dec
mov
sahf
mov
or
jge
test
shl
or
fdivr
shr
test
jg
aam
leave
jae
adc
mov
js
test
aas
xchg
adc
jecxz
stos
push
jg
icebp
cmp
stos
adc
ins
aam
xor
outs
pop
repz
xor
and
mov
stos
xor
(bad)
out
sub
jge
test
xor
ins
xchg
and
mov
xchg
xor
cmps
add
sub
shl
push
push
fistp
in
mov
dec
or
jecxz
xchg
or
add
mov
jb
and
and
hlt
and
mov
mov
bnd
pop
inc
mul
pop
mov
push
icebp
hlt
iret
mov
add
cs
iret
jl
inc
push
call
cmp
movs
cmp
mov
and
retf
mov
xchg
mov
pop
idiv
cmps
xchg
fidivr
sub
aaa
ret
or
(bad)
mov
pop
daa
outs
mov
frstor
jne
movs
loope
cmps
nop
rcl
ror
xlat
adc
inc
not
cmc
(bad)
jb
lds
dec
lds
call
imul
jle
sub
mov
cs
sahf
jl
loope
xor
in
mov
test
inc
hlt
and
mov
ins
aam
push
xchg
cdq
mov
or
pop
(bad)
idiv
hlt
inc
push
out
out
adc
(bad)
sar
mov
jne
mov
jns
stc
std
arpl
mov
fld
sub
stos
xor
lods
pop
fbld
mov
nop
cmps
push
sahf
pop
mov
sahf
ds
mov
sar
cmp
clc
dec
and
xchg
jl
add
mov
push
mov
arpl
imul
in
into
mov
pop
aaa
pop
imul
mov
and
cli
jmp
test
sahf
call
imul
mov
test
(bad)
int3
xor
pop
inc
fwait
jp
ins
fwait
jne
mov
popf
sub
or
aas
push
out
xor
cmps
dec
push
jge
inc
cmp
jmp
dec
in
fadd
or
leave
sub
aad
push
out
and
sbb
mov
push
leave
add
cmpps
mov
jne
mov
mov
ret
add
mov
sti
xchg
in
ja
xchg
loope
enter
push
and
faddp
icebp
xchg
shr
push
hlt
enter
rcr
xchg
inc
add
mov
mov
dec
test
clc
sti
xor
repnz
(bad)
xor
and
(bad)
stc
inc
test
sti
test
adc
call
pop
je
in
cmp
fs
inc
(bad)
push
mov
cmp
pushf
into
cwde
xor
mov
test
out
cmp
push
pop
and
int
mov
mov
mov
(bad)
push
test
sub
push
bound
pop
dec
stos
sbb
ja
pop
jle
stos
jbe
xor
dec
gs
test
pop
push
cdq
repz
rcr
adc
inc
loop
push
push
adc
pop
xchg
shr
es
dec
rcl
cmp
fs
push
mov
inc
and
or
push
loop
popf
aad
iret
mov
push
pop
cli
dec
lods
push
jmp
sub
cmp
inc
out
into
gs
sbb
pop
movs
push
xchg
in
(bad)
mov
sub
out
xchg
mov
xor
cmp
loopne
xchg
xor
cli
ror
je
lods
loopne
repnz
fwait
xchg
shl
dec
arpl
cld
and
adc
xchg
lods
test
pop
mov
or
and
fdiv
add
mov
jge
int
xor
push
loopne
fadd
pop
and
mov
movs
push
dec
mov
push
mov
daa
sub
cmp
cmps
adc
hlt
lahf
stos
xchg
inc
stos
ficom
clc
push
popa
mov
jno
dec
fisubr
iret
pop
sbb
mov
and
sub
das
jg
dec
stc
sub
xchg
sbb
int3
mov
mov
lods
mov
add
ret
and
add
jo
or
jg
sahf
test
adc
outs
(bad)
in
xor
adc
iret
mov
iret
popf
movs
pushf
test
mov
pop
test
test
xor
xchg
cmps
lods
mov
jae
addr16
ror
add
sti
test
xchg
add
cmp
cdq
icebp
popa
dec
lods
mov
mov
test
inc
jp
xor
or
cmps
xor
loopne
cmp
call
add
jns
pop
mov
dec
aam
adc
cmp
(bad)
fsubp
push
aas
xchg
push
mov
scas
or
cmp
lods
sti
or
inc
test
shl
dec
sets
pop
shr
adc
jle
add
push
push
sub
jp
add
add
dec
pop
arpl
dec
in
adc
sub
push
sub
mov
outs
jne
push
and
xchg
gs
and
jb
bound
in
fdiv
jae
clc
aad
and
jmp
dec
adc
repnz
int3
xchg
bswap
pop
stc
push
or
push
push
pop
add
pop
or
es
sub
mov
dec
test
(bad)
adc
mov
mov
out
ins
cwde
test
(bad)
in
and
pushf
fidivr
push
mov
aaa
and
aaa
in
out
push
push
sahf
test
sti
out
push
stos
jo
dec
cmp
jge
jo
data16
fidiv
dec
mov
jae
icebp
jnp
adc
jne
xor
xchg
adc
dec
jae
pushf
mov
pop
test
outs
(bad)
ins
dec
jp
std
push
and
jge
xchg
or
out
sbb
mov
or
lock
jl
sub
mov
imul
dec
pop
or
shr
pusha
jno
std
data16
sbb
pop
pop
in
in
into
(bad)
(bad)
fiadd
push
stos
in
mov
jnp
pop
inc
fdiv
or
shl
test
push
sahf
push
jns
sbb
jp
loopne
sub
test
push
pop
xor
scas
test
ins
dec
mov
retf
jle
add
inc
dec
es
outs
repnz
xor
mov
je
push
out
and
repz
fstp
je
and
jnp
push
in
jno
fstp
push
jb
pop
mov
mov
mov
mov
in
xchg
dec
xchg
ds
xchg
fstp
jp
inc
adc
loopne
pop
jmp
jnp
adc
or
fadd
cmp
in
cli
xor
sub
push
cmp
dec
stos
into
retf
mov
cmp
add
dec
jo
aam
xchg
jns
mov
out
mov
pop
inc
test
inc
pop
fistp
arpl
rol
data16
jbe
ins
and
pop
inc
cmp
push
or
mov
jbe
mov
xchg
add
push
pop
gs
std
cld
hlt
push
das
inc
ins
movs
xchg
xchg
pop
sahf
jns
and
mov
jmp
pop
jmp
push
cdq
adc
popf
sub
rcr
cmp
mov
nop
cmp
push
xor
push
lds
scas
into
addr16
clc
arpl
cmp
and
mov
les
fild
jmp
cmc
pop
inc
in
cmp
dec
ds
shl
fcmovbe
out
jg
inc
adc
lds
xchg
jmp
into
xlat
xchg
je
mov
nop
popf
cmp
test
int3
or
ja
push
add
scas
cdq
inc
ds
aas
cmp
cmps
dec
lds
adc
sbb
in
pop
add
sbb
(bad)
or
sub
sub
mov
push
(bad)
mov
daa
fisttp
(bad)
mov
daa
(bad)
cmp
imul
inc
and
lahf
jp
ror
push
in
nop
mov
dec
idiv
mov
adc
mov
nop
push
and
sub
jbe
mov
cmc
js
sub
out
xor
cmp
lea
push
mov
icebp
inc
jl
into
imul
xchg
xor
or
out
pop
add
aad
jo
jno
and
loopne
sti
in
pushf
mov
or
outs
imul
leave
mov
test
not
push
pop
push
cdq
push
push
jg
mov
xchg
fst
mov
mov
sbb
adc
or
frstor
pop
int
dec
mov
pop
xchg
xchg
shr
stos
sub
les
inc
movs
push
push
or
mov
sub
test
scas
daa
movs
das
adc
push
test
(bad)
shl
ror
call
pop
(bad)
jo
push
mov
js
mov
jg
inc
jge
xchg
shl
dec
inc
and
inc
inc
dec
sahf
shl
in
add
cmp
cmp
mov
test
jl
in
fistp
cli
xor
out
icebp
retf
push
jbe
in
mov
call
add
stos
stos
rcl
(bad)
stc
sub
cmps
int3
and
mov
jmp
mov
dec
cmp
in
imul
sbb
dec
shr
add
rcl
dec
shl
mov
xlat
jmp
out
adc
add
(bad)
jo
push
mov
xor
jg
inc
inc
xor
mov
(bad)
call
mov
ror
repnz
xchg
nop
ins
xchg
test
bnd
xchg
sbb
test
pop
add
jmp
jl
and
sbb
jo
cmp
push
mov
mov
pop
adc
ds
xchg
das
xchg
fucom
js
outs
jb
(bad)
fidiv
dec
stc
xor
jbe
add
rep
fiadd
jno
push
ja
int3
dec
pop
outs
push
bound
push
dec
mov
bound
inc
mov
add
xor
add
retf
inc
(bad)
jg
jne
sub
jl
lea
sbb
inc
inc
pop
pusha
add
mov
stos
mov
inc
add
mov
xor
sbb
mov
and
and
cld
mov
lods
adc
call
test
mov
jnp
push
retf
cmp
and
pop
fsubr
pop
cmc
inc
pop
xchg
jmp
jg
mov
shr
and
push
xor
retf
inc
dec
ins
sub
adc
rcr
mov
ret
jno
cmps
lahf
jmp
push
add
adc
mov
repz
std
loopne
fwait
retf
sub
mov
xchg
sub
inc
jmp
jbe
aam
fnsave
(bad)
loop
xchg
lahf
or
jge
dec
repz
out
pop
jmp
adc
cwde
and
dec
pop
cmp
clc
cmps
cmp
mov
mov
mov
pusha
sub
out
xlat
mov
pop
ret
sub
pop
jb
push
dec
in
mov
dec
push
test
aam
pop
les
or
xchg
sub
stos
push
scas
push
int3
sbb
xchg
movs
mov
pop
repnz
sbb
jae
mov
stos
mov
jmp
int
push
aaa
xchg
idiv
out
sub
ins
jp
in
sub
fld
(bad)
sub
aad
pop
pop
pop
(bad)
mov
loopne
pop
jnp
cmc
jns
jle
repz
sub
cmps
mov
cmp
in
jbe
pop
pop
(bad)
jae
jl
dec
mov
and
mov
outs
loopne
jle
enter
leave
scas
push
or
les
mov
sub
sar
(bad)
jnp
push
iret
cmp
add
cmp
cmp
or
cmps
jne
xchg
fmul
enter
in
leave
test
jno
cmp
int
out
repz
mov
call
jg
jno
scas
or
dec
jg
addr16
mov
jg
and
jnp
in
stos
mov
popa
xchg
aaa
lahf
mov
mov
pop
mov
jbe
cdq
stos
push
adc
fadd
dec
xchg
add
cwd
shr
cmp
in
in
mov
add
(bad)
cdq
xchg
mov
push
cdq
test
pushf
dec
test
bts
and
xchg
out
mov
repz
dec
jl
fcmovnb
scas
out
push
xchg
fwait
push
dec
push
pop
in
jge
dec
pop
pop
jmp
mov
ret
rcr
inc
out
ja
and
mov
mov
sahf
push
cmp
or
jmp
clc
cmp
jb
mov
addr16
sahf
dec
les
ror
adc
pop
mov
sbb
adc
mov
mov
pushf
into
pop
adc
ret
mov
inc
lods
pop
cmps
cmps
mov
in
jmp
inc
pop
and
iretw
xchg
sub
aaa
leave
push
mov
mov
ss
retf
imul
push
mov
clc
sbb
retf
pop
pop
inc
(bad)
or
mov
cs
push
aaa
push
daa
fwait
mov
fcomp
jle
imul
arpl
aam
sbb
out
jmp
jb
bound
and
test
add
fwait
sub
cmps
cmp
cmp
xchg
int
jmp
scas
fucomip
jl
mov
hlt
lods
mov
loopne
pop
lahf
out
test
and
in
ret
xchg
dec
cmp
jb
fwait
(bad)
aad
call
cmc
inc
sti
in
and
or
rcl
in
in
fdivr
inc
mov
sub
mov
fimul
and
jmp
popf
(bad)
mov
repnz
sbb
loope
rcr
scas
call
mov
cwde
sbb
out
popa
aam
jle
sbb
inc
sbb
xor
sub
or
cli
mov
mov
paddw
test
loop
xor
push
mov
jae
mov
pop
jbe
(bad)
mov
push
sti
push
popf
cmp
pop
mov
rol
jns
adc
cmp
add
add
jae
push
aad
fucomi
lods
data16
lds
or
loop
push
in
mov
cmp
rcr
mov
xchg
daa
(bad)
in
inc
leave
add
test
cmp
mov
adc
push
out
loopne
bound
adc
cmps
lods
ja
push
stos
xchg
xchg
jne
add
adc
div
adc
ins
sahf
(bad)
mov
dec
aad
or
dec
mov
jge
push
jp
xchg
out
std
jle
cli
iret
add
pop
test
push
psadbw
(bad)
repnz
loop
inc
lds
inc
jmp
xchg
nop
mov
mov
push
call
pop
jle
dec
shr
jl
ret
cmp
rcl
jp
repnz
mov
test
mov
ret
and
mov
pusha
push
hlt
dec
iret
fidivr
jae
fadd
(bad)
jbe
retf
nop
xor
xor
cld
xchg
clc
mov
or
das
jp
adc
addr16
and
stc
pop
cmps
cld
or
xchg
fld
fwait
cmp
cmp
add
cli
aam
xor
adc
push
aad
mov
sbb
pop
inc
inc
lods
xchg
pop
int
push
sub
adc
outs
inc
cmp
popa
cmp
hlt
bnd
stos
inc
jge
dec
add
enter
xor
pop
sub
mov
xor
stos
mov
call
scas
push
push
mov
test
mov
call
dec
sbb
push
dec
es
ret
jno
adc
xor
mov
xchg
sub
jp
xchg
cdq
jle
inc
mov
xchg
jmp
sbb
xchg
inc
xchg
stc
(bad)
sbb
pushf
(bad)
sub
out
lahf
pop
mov
inc
xchg
push
fwait
jg
stos
es
scas
adc
xor
retf
fild
setne
cli
push
icebp
sbb
inc
rcr
mov
imul
test
ror
mov
stos
out
xchg
jbe
clc
mov
stos
push
movs
fisub
out
and
dec
ins
sbb
xor
push
repnz
push
loopne
push
(bad)
xlat
inc
jb
in
and
mov
ja
jle
push
in
call
mov
aaa
daa
mov
jne
out
pcmpeqb
(bad)
(bad)
cmc
inc
jb
xor
inc
iret
sahf
cmp
add
fadd
(bad)
xchg
fwait
scas
dec
mov
dec
and
je
xor
gs
pop
inc
in
test
xor
inc
mov
retf
call
rol
sub
push
pop
ficomp
jecxz
nop
push
cmp
aaa
pusha
push
pop
or
addr16
rcl
pop
dec
sub
mov
mov
pop
arpl
pop
mov
xor
add
push
dec
xchg
inc
inc
rcr
cmp
or
pop
popa
sbb
xchg
push
cld
cmp
fs
push
cmp
mov
lods
loopne
or
or
cmp
lahf
in
jge
in
jbe
adc
repnz
lods
mov
addr16
cmps
dec
shr
ret
xor
lds
loop
inc
cmp
std
ss
jg
ins
fld
sbb
(bad)
xchg
cmps
pushf
mov
xor
cmp
test
and
mov
std
jbe
inc
je
mov
xchg
jne
push
add
rcr
lock
rol
dec
cwde
(bad)
aad
fs
test
dec
cli
pop
jmp
lock
bound
cwde
dec
and
sar
test
lods
mov
push
outs
mov
imul
sbb
xor
ret
int3
inc
into
fwait
aam
iret
pop
add
xrelease
xor
lods
ss
mov
dec
rep
(bad)
push
jne
sti
pushf
fdivr
xchg
hlt
mov
shl
out
jmp
popa
xor
(bad)
dec
jns
dec
int3
add
sbb
adc
xor
out
stos
pop
dec
mov
add
xchg
dec
sbb
adc
push
pop
dec
icebp
adc
jbe
in
sub
pop
(bad)
mov
pop
out
push
aad
add
adc
dec
mov
dec
push
dec
js
retf
mov
mov
sub
adc
pop
ins
jecxz
mov
dec
test
aam
imul
mov
mov
inc
cmc
jo
add
data16
cmc
scas
jmp
sbb
and
xor
dec
mov
jnp
jmp
das
js
mov
and
lods
aaa
pop
mov
adc
sub
pop
leave
aaa
sub
data16
jae
cwde
cmps
pop
and
inc
shl
pop
mov
jecxz
not
je
loop
or
push
test
push
imul
jge
hlt
push
push
inc
jno
rcl
repz
sbb
or
emms
push
imul
dec
jbe
jae
add
fcmovnu
dec
test
imul
cdq
pop
push
out
test
cld
fisttp
in
adc
mov
shl
mov
fnstenv
enter
(bad)
pop
mov
rcl
fucomip
xor
ret
repz
in
and
xchg
and
das
ror
inc
retf
dec
jmp
mov
gs
fcmovnbe
stos
scas
in
clc
(bad)
pop
sti
out
repz
jno
jb
mov
mov
ret
mov
test
mov
mov
paddsb
ins
fwait
pop
popf
mov
cmp
sbb
jp
test
jb
ret
jno
push
out
iret
xlat
add
aas
xchg
lahf
dec
neg
dec
arpl
jp
jbe
(bad)
push
stos
mov
xchg
lock
and
je
jb
ss
add
(bad)
dec
mov
cmp
lock
pop
out
pop
push
xchg
xchg
gs
loop
ret
push
out
nop
pushf
popf
in
les
(bad)
and
daa
in
test
dec
inc
sub
jmp
rol
sbb
fwait
or
data16
xlat
and
out
jne
daa
add
pop
leave
inc
pop
test
xor
push
loopne
out
add
cwde
jecxz
push
xchg
scas
sbb
adc
in
cmp
imul
(bad)
pop
leave
test
sar
shl
mov
hlt
out
xchg
jecxz
test
xchg
iret
or
mov
inc
test
mov
dec
cmps
mov
sbb
aas
mov
adc
mov
popf
adc
push
pusha
movs
(bad)
xchg
das
aad
daa
ins
jge
push
xor
jmp
jp
push
push
dec
dec
loop
sar
(bad)
push
pop
test
push
iret
cld
or
rcl
mov
sar
lock
pop
pop
sub
gs
cmps
xlat
inc
(bad)
jns
leave
outs
sti
dec
mov
dec
mov
xchg
jge
jecxz
(bad)
loopne
fisubr
mov
pop
bound
pop
aaa
cmp
loop
push
mov
ja
adc
sub
test
mov
test
jge
fwait
loop
jae
ret
fild
lods
repz
sbb
daa
fadd
xchg
out
and
aas
xor
xor
push
push
lods
sub
leave
sbb
mov
dec
pop
mov
inc
movs
cmps
xchg
pop
test
sub
mov
and
and
jbe
xchg
inc
out
(bad)
cmp
adc
shl
bound
mov
cmovno
jae
mov
xchg
pop
inc
pop
cmp
push
dec
adc
mov
fst
adc
out
mov
mov
or
xchg
mov
inc
jbe
mov
enter
test
add
pop
add
bnd
push
aad
int
out
sub
xor
les
mov
fst
mov
xchg
hlt
xchg
mov
icebp
cmp
xor
ins
and
sub
or
ss
dec
das
out
mov
fs
pushf
mov
mov
popf
pop
jne
and
pop
gs
xchg
fst
mov
dec
xor
mov
adc
jb
adc
xchg
daa
jmp
sar
cmp
mov
div
pop
repz
push
xor
mov
out
pop
sub
push
inc
push
inc
jl
adc
mov
or
aas
sbb
aam
pop
inc
adc
sbb
(bad)
sbb
jae
popa
pop
jmp
xor
dec
xchg
cwde
pop
ficom
mov
lods
outs
sbb
retf
mov
adc
jmp
cmp
mov
ins
movs
xchg
stos
pop
retf
push
add
repnz
and
jae
jae
les
sub
data16
cld
fisub
or
out
push
lahf
out
sub
leave
add
xlat
add
lahf
mov
jecxz
leave
jbe
cwde
cmp
loop
ret
xor
aas
and
push
(bad)
cli
in
jecxz
pop
sub
and
pop
mov
ins
cmp
sub
and
xchg
fild
mov
and
mov
inc
mov
or
jmp
dec
mov
xchg
push
icebp
push
jae
jo
push
test
push
dec
xchg
in
not
lods
test
aaa
xchg
mov
ficom
movs
add
enter
jno
ins
jae
add
mov
jp
nop
into
cmps
add
and
and
dec
aam
jge
lock
sbb
pop
lock
or
push
popa
sub
ret
test
jb
cmc
sub
(bad)
mov
rcr
dec
sbb
inc
dec
sbb
dec
pop
dec
nop
dec
and
ins
cld
out
jb
fcmovne
sahf
mov
scas
hlt
pop
xor
shl
out
jecxz
aas
adc
rcr
movs
sbb
ins
fsubr
push
movs
mov
aam
mov
push
xchg
pop
loop
in
mov
mov
sbb
push
mov
dec
jg
stos
imul
jae
jle
adc
int3
mov
cmp
sti
xor
xor
jge
add
fisttp
xchg
xchg
ror
fmul
es
outs
mov
outs
retf
imul
mov
xor
repz
dec
cdq
mov
mov
mov
mov
mov
popf
push
lds
add
pop
scas
inc
lods
cmp
dec
int
aas
jne
mov
mov
xchg
jb
sbb
aaa
jb
shl
or
je
call
jae
out
imul
sar
outs
and
adc
mov
push
and
iret
jg
inc
pushf
sahf
xchg
or
jmp
xchg
lods
push
pop
in
mov
jge
dec
inc
lds
adc
dec
in
inc
push
dec
icebp
jbe
loopne
xchg
dec
dec
jp
jb
repz
in
lods
push
dec
mov
ror
pushf
and
cmp
aaa
push
es
push
int
outs
and
repnz
mov
xchg
ret
xchg
(bad)
mov
fild
shl
mov
movs
jns
add
or
(bad)
cmp
mov
xor
jbe
adc
jl
lods
mov
jnp
popa
mov
neg
mov
lahf
xor
mov
push
mov
iret
frstor
retf
dec
sahf
adc
out
push
xor
jecxz
mov
sub
add
cli
xor
push
test
scas
inc
mov
cmp
pop
sub
inc
lea
mov
cmp
mov
adc
sbb
pushf
ins
cdq
pop
or
sub
jae
fsub
inc
or
pop
(bad)
cmp
aam
dec
add
sub
jmp
aas
and
movs
fiadd
arpl
jns
fisttp
push
xchg
mov
in
and
pop
sbb
push
cmc
lahf
pop
ja
adc
add
mov
(bad)
push
out
in
adc
sub
cmp
fld
dec
push
mov
nop
fild
xchg
xchg
js
xor
pop
into
stos
(bad)
fs
mov
test
pop
dec
shr
sbb
movs
(bad)
jg
cmp
out
mov
iret
sbb
jecxz
loopne
adc
imul
push
nop
push
inc
(bad)
ret
mov
sub
jo
aas
mov
xchg
adc
sbb
lahf
xchg
(bad)
icebp
add
(bad)
das
das
mov
xlat
test
jbe
xlat
in
or
lds
jge
ret
mov
lea
addr16
sub
adc
je
scas
call
mov
fmul
rol
inc
inc
mov
loope
shl
mov
loope
shl
mov
xlat
mov
(bad)
jb
sbb
adc
popa
jo
sub
in
sbb
mov
and
mov
stos
mov
(bad)
sbb
(bad)
push
xchg
pop
push
xchg
cmps
imul
pop
sbb
dec
fistp
jg
scas
lock
pusha
dec
je
outs
and
sub
mov
ins
leave
(bad)
ins
push
pop
mov
push
shr
pushf
mov
adc
fisttp
outs
sbb
add
mov
inc
sub
sahf
rol
add
sub
fdivr
or
lock
pop
adc
dec
fld
scas
jne
vmread
cld
js
inc
mov
sbb
dec
jp
stos
add
add
lea
and
dec
outs
mov
xchg
push
dec
xchg
into
in
push
xor
es
adc
or
fwait
in
in
ret
fnstenv
push
rol
jb
and
lods
xchg
add
add
arpl
mov
ror
adc
push
fdivrp
out
outs
bound
xchg
test
mov
sub
xor
mov
or
mov
(bad)
pop
mov
call
(bad)
mov
mov
repz
in
(bad)
jbe
mul
mov
adc
mov
or
mov
and
pop
pop
sar
vpmadcswd
xchg
sar
cmps
pusha
(bad)
fld
mov
inc
push
pop
scas
adc
jns
sub
lods
sbb
ds
lds
mov
cwde
pusha
jp
test
mov
lds
in
inc
sbb
sub
mov
dec
xchg
push
retf
push
lahf
pushf
cmp
rol
dec
adc
dec
mov
movs
dec
push
xchg
gs
jmp
daa
fnstsw
cmp
lea
sub
nop
and
mov
pop
mov
fstp
mov
retf
adc
int
push
sahf
pop
rcl
sbb
imul
ins
sub
inc
mov
cld
cmp
sub
pop
(bad)
xor
jp
mov
test
mov
icebp
and
cmp
popa
mov
(bad)
mov
cmp
arpl
mov
xor
psubsb
push
in
push
pop
aad
push
(bad)
scas
in
cmp
sub
adc
(bad)
jbe
push
jae
mov
sub
mov
inc
push
imul
sahf
dec
nop
sub
mov
fmul
mov
mov
movs
adc
add
loop
cmp
xchg
icebp
dec
addr16
test
dec
daa
dec
add
add
mov
sbb
xlat
adc
and
dec
or
cmp
dec
fist
inc
xchg
lds
repnz
arpl
push
mov
mov
(bad)
mov
ins
cmp
cdq
cs
pop
mov
sub
shl
or
add
test
enter
xchg
mov
jnp
es
and
ins
fisub
ret
or
lahf
aam
addr16
lods
daa
hlt
push
movs
jmp
imul
cwde
cmps
in
sbb
push
mov
retf
jo
xor
or
stos
das
or
xor
mov
outs
(bad)
mov
daa
repz
dec
movs
mov
sahf
aaa
xor
jb
stos
out
ret
(bad)
adc
cdq
add
inc
imul
popf
mov
sbb
lods
jl
push
shl
lea
xchg
push
mov
shl
jge
lods
std
mov
in
in
mov
popa
cli
int3
or
jae
adc
inc
sbb
(bad)
and
loope
lods
inc
inc
mov
and
add
pop
sbb
and
xchg
call
or
sub
inc
cmc
mov
stos
mov
imul
sbb
push
adc
daa
sub
test
jns
sub
xchg
stos
data16
ret
ja
dec
xor
imul
sbb
xor
(bad)
mov
iret
and
aad
jb
jle
inc
std
adc
and
(bad)
movs
lods
jmp
imul
mov
in
cdq
or
sbb
sub
lahf
call
inc
push
stos
and
dec
repz
and
pop
mov
or
fdiv
popa
add
retf
sbb
mov
lea
repnz
add
je
mov
in
adc
jbe
or
ins
sbb
pop
mov
retf
mov
in
push
add
cmp
sub
or
or
adc
adc
push
shl
push
adc
add
mov
or
xchg
dec
mov
push
sub
push
pop
jmp
mov
ss
adc
scas
mov
dec
fdivr
ins
and
jl
xchg
cmp
repnz
push
add
sbb
fisttp
mov
(bad)
push
ret
dec
call
sar
repz
and
sub
mov
test
aad
jne
adc
push
iret
sub
fisubr
repnz
retf
and
or
sub
mov
dec
in
pop
mov
std
mov
cmps
mov
movs
gs
pop
bound
in
pop
rcl
fist
in
adc
std
add
adc
cmp
scas
pop
adc
dec
ficomp
lods
sar
dec
cs
sbb
jae
pusha
ret
in
mov
test
xor
jbe
fadd
(bad)
pop
or
jb
push
cwde
lds
addr16
mov
jae
in
mov
imul
test
mov
jmp
jnp
imul
inc
cmp
loop
(bad)
call
mov
pushf
fcmovnb
cs
outs
imul
mov
adc
cmp
mov
push
ret
leave
cwde
fiadd
adc
(bad)
in
cs
lds
loopne
les
push
sbb
xchg
sti
cmp
inc
dec
(bad)
mov
dec
push
jge
ds
jl
cmp
or
or
jne
dec
inc
pop
or
(bad)
push
cmp
shr
(bad)
push
inc
xor
push
int3
int
cmp
outs
fisub
aad
xchg
jae
mov
sbb
clc
add
movs
test
lods
mov
sbb
out
xchg
sbb
popf
scas
(bad)
and
cmp
jmp
add
(bad)
(bad)
movs
sbb
jnp
and
mov
mov
out
pop
cli
jg
jo
mov
scas
bound
xchg
pusha
push
gs
dec
inc
enter
xchg
pop
mov
sub
icebp
out
pop
mov
fs
cld
shr
call
cmps
inc
mov
mov
lods
xchg
pop
adc
inc
jmp
popf
push
repz
jne
outs
dec
cmps
jle
sub
(bad)
stos
sub
add
add
aad
xlat
out
inc
mov
jno
sti
xor
fst
mov
sub
movs
push
cmp
rcl
jne
jmp
jmp
mov
push
inc
dec
int
dec
jae
rcl
adc
adc
xchg
xor
jle
push
fwait
dec
mov
loopne
xchg
push
sbb
inc
sbb
loop
push
cmp
in
cwde
in
into
bound
cld
lods
dec
and
std
in
xor
test
pop
shr
les
in
test
aam
fld
icebp
stos
sbb
icebp
sahf
jb
ror
test
cvtps2pi
cmp
leave
sub
fcom
jns
outs
xchg
xchg
mov
popf
aas
inc
cmps
pop
ret
lahf
test
xor
sub
pop
and
mov
iret
outs
test
inc
fst
stc
push
xor
leave
or
neg
push
push
daa
mov
fwait
xchg
xor
loopne
push
pusha
iret
lods
stc
dec
cmp
xor
dec
lods
mov
ret
cmp
(bad)
dec
in
outs
fxam
dec
imul
mov
in
pop
xchg
in
(bad)
test
cmp
mov
(bad)
leave
inc
xor
into
add
jecxz
test
sub
adc
mov
sbb
xor
xor
mov
inc
adc
loope
je
repz
sbb
sbb
repnz
mov
sti
cmp
fstp
in
dec
jo
ret
sub
sub
xchg
fdiv
or
(bad)
sub
cld
lds
loope
rcr
lock
jno
pushf
pop
int
sbb
iret
dec
iret
movs
iret
outs
out
popa
pop
xchg
push
jg
and
into
repnz
int3
xchg
push
outs
sbb
sbb
jmp
outs
mov
addr16
aas
or
dec
fnsave
mov
call
adc
or
pop
pop
jmp
xor
push
stos
adc
shl
in
xchg
repz
mov
cdq
out
aam
xor
and
fstp
into
js
mov
inc
fadd
jb
lods
xchg
pop
mov
test
cmps
adc
int
push
add
mov
lahf
mov
mov
sbb
mov
imul
push
dec
or
imul
(bad)
les
shr
jo
adc
idiv
ds
sub
out
add
push
mov
sub
cmp
es
loopne
add
pop
inc
stos
out
addr16
mov
fst
mov
nop
mov
or
mov
cli
repnz
shl
xor
mov
sti
shr
mov
mov
add
ffreep
jg
mov
loope
jle
sub
in
(bad)
xchg
cs
xor
in
push
push
ss
pop
stc
addr16
dec
pop
hlt
xlat
xchg
(bad)
jl
add
(bad)
mov
jns
add
mov
fbstp
inc
add
mov
add
or
call
in
fwait
inc
or
sti
mov
movs
fistp
loopne
mov
aas
jo
stc
xchg
rcr
pop
movs
add
int
xor
mov
aaa
out
daa
mov
or
arpl
lods
pushf
popf
adc
faddp
pop
je
arpl
mov
jmp
mov
test
clc
cmc
movs
ror
int3
dec
cmp
ins
push
jle
fs
out
adc
repz
stos
dec
sub
xchg
mov
mov
hlt
(bad)
in
push
xchg
scas
shr
retf
and
ja
arpl
mov
mov
xchg
sbb
(bad)
pop
xchg
inc
jno
inc
xchg
dec
mov
repz
xchg
jae
push
es
jmp
cmp
xor
dec
adc
mov
ins
adc
jp
ds
(bad)
(bad)
lods
jno
mov
call
add
dec
fcmovnbe
ins
pop
dec
pusha
loop
pop
cmp
mov
ret
or
push
pop
or
mov
shl
or
and
mov
scas
push
xchg
mov
jne
sbb
sub
xchg
sub
pop
je
xor
test
data16
xor
into
mov
loop
cmc
sbb
push
mov
jae
xchg
pop
or
adc
cmp
(bad)
sub
stos
jno
popa
push
mov
push
push
ret
(bad)
aam
sub
cmp
jg
sub
in
mov
add
inc
xchg
mov
sbb
ror
lds
sbb
mov
inc
lods
fmul
lahf
(bad)
pop
dec
test
cmp
mov
mov
xchg
xchg
leave
jmp
fidivr
cdq
and
mov
fistp
fidiv
jo
stc
adc
jo
xor
mov
scas
jae
outs
and
addr16
call
sbb
jno
inc
push
test
mov
call
stos
jnp
retf
sbb
mov
sub
ja
mov
or
cmps
mov
push
or
inc
inc
daa
pop
jb
xor
shr
neg
cwde
imul
dec
dec
cdq
popf
push
sahf
jl
shr
dec
jle
or
(bad)
rcl
dec
ins
mov
sar
inc
and
and
sbb
mov
xchg
popa
test
in
(bad)
jns
dec
mov
lods
mov
adc
or
push
cmp
addr16
out
sub
cmp
stos
or
jns
mov
out
loope
sti
xchg
pop
push
movs
popa
ret
pusha
stc
call
mov
scas
out
push
data16
lods
test
fmul
shr
es
jp
jne
xor
pusha
inc
mov
add
fstp
out
mov
mov
sbb
xchg
or
call
into
push
jecxz
dec
ins
xchg
jae
sbb
push
adc
xor
(bad)
scas
outs
inc
loopne
sub
ret
mov
sub
pop
xchg
imul
add
sbb
retf
dec
dec
in
jl
addr16
nop
inc
ret
cmps
and
or
push
ficomp
out
jae
stos
sub
xchg
add
fidiv
cmp
leave
cmp
retf
jns
jmp
push
push
mov
rol
mov
dec
mov
popa
xchg
xchg
jae
mov
stos
push
jmp
(bad)
pop
mov
mov
jo
js
jle
pop
mov
stc
ins
fisub
dec
xchg
push
xchg
mov
retf
idiv
aaa
push
hlt
popa
test
out
mov
mov
or
mov
mov
xchg
shr
std
cli
icebp
cmc
movs
rcr
pop
loope
loop
sbb
add
loopne
mov
repz
xor
lods
scas
cmp
outs
stos
mov
adc
sti
icebp
test
mov
jns
bnd
mov
mov
imul
lock
xrelease
retf
push
ss
mov
mov
int3
xchg
cdq
push
cmp
mov
inc
(bad)
pop
neg
mov
loope
and
cmp
mov
xchg
cmp
sbb
in
pop
mov
loopne
jb
inc
(bad)
popa
sub
xor
jecxz
cdq
mov
xchg
(bad)
fistp
mov
jp
sbb
aam
ja
outs
inc
popa
xor
cwde
jb
sub
scas
add
popa
sahf
jecxz
neg
push
mov
es
mov
(bad)
dec
shl
shl
cwde
mov
dec
jns
dec
cdq
lods
and
das
and
add
idiv
movs
push
fnstcw
cmp
lods
scas
sub
lods
in
je
push
mov
rcl
jmp
mov
fdiv
push
pop
movs
pushf
popa
push
mov
je
enter
or
aas
in
pushf
dec
xor
call
cwde
(bad)
test
ds
stc
mov
or
lea
add
shl
mov
add
stos
adc
push
outs
or
and
cmc
daa
mov
mov
dec
xchg
repz
jmp
aam
scas
repnz
idiv
outs
popf
retf
daa
jo
push
loop
add
cmp
push
push
mov
iret
pop
test
sbb
imul
data16
ret
test
pop
cdq
jle
sahf
sar
cmp
js
push
inc
cmp
nop
bound
cmps
je
mov
loope
mov
sbb
mov
mov
add
or
jns
xor
xlat
or
cmp
sub
sahf
je
in
and
push
inc
retf
lods
xor
cli
xchg
cdq
sbb
and
pop
arpl
or
outs
pop
push
daa
inc
cmp
in
pushf
mov
(bad)
mov
test
inc
scas
(bad)
sub
mov
inc
push
jecxz
pop
jne
add
dec
pop
aaa
jne
pop
imul
movs
ror
push
xor
and
push
cmc
mov
neg
or
rol
pushf
push
xor
stc
sub
mov
scas
pop
lds
icebp
xchg
ror
add
cmp
inc
sahf
sub
repz
mov
mov
add
inc
fmul
mov
inc
and
pusha
mov
int3
pop
dec
xchg
jmp
mov
addr16
rcr
xchg
gs
loopne
ret
and
mov
xor
neg
inc
jmp
out
push
out
dec
mov
sar
sub
in
sub
mov
lods
cwde
inc
cmp
int3
mov
push
inc
lock
(bad)
inc
push
int3
mov
xor
cs
mov
sub
pop
in
sbb
sub
inc
lds
sbb
push
jae
jne
mov
pop
jo
jbe
cld
cmp
(bad)
fbld
stos
lock
imul
jecxz
in
and
and
nop
cmc
movs
ror
fild
jnp
or
out
test
mov
or
test
cmp
and
scas
xchg
leave
dec
pop
stos
into
retf
adc
out
xor
jnp
pop
jecxz
out
mov
outs
daa
out
and
dec
cmc
or
fs
cmp
sar
mov
clc
jmp
dec
mov
jo
loop
sbb
in
xor
push
jno
fldenv
push
xor
xlat
mov
outs
dec
sbb
cmp
fucomp
dec
jge
in
(bad)
aam
test
or
adc
or
sub
stc
mov
dec
xchg
mov
cmps
cmp
xor
and
adc
pop
sub
dec
jno
or
les
sub
add
sbb
scas
xor
mov
in
sbb
dec
jno
cmps
jo
push
mov
aaa
cld
pop
std
dec
ds
lods
cld
rcr
(bad)
sbb
sub
mov
fimul
cmp
mov
push
inc
push
mov
inc
jmp
push
mov
jge
into
xchg
(bad)
pop
popa
imul
pop
cmp
adc
dec
test
imul
dec
call
pop
dec
mov
clc
add
test
hlt
xor
into
xchg
jno
rcr
lods
jo
sub
sub
add
in
pop
jno
push
stos
pusha
jmp
popf
shr
shr
call
mov
sub
adc
and
das
push
jp
inc
and
jns
ret
push
fnstenv
xor
cs
xchg
popf
pop
jb
add
sub
(bad)
cmp
xor
sub
in
add
fwait
push
sub
adc
ins
push
mov
push
repz
ret
pop
leave
push
pop
(bad)
ss
imul
frstor
and
fdivrp
pop
push
cld
lea
push
ret
mov
sbb
dec
rol
adc
push
jmp
dec
fs
cmp
adc
jle
pop
sti
inc
xchg
cmc
mov
daa
div
fidiv
push
inc
mov
inc
ret
push
mov
xchg
out
jnp
test
gs
daa
inc
sbb
or
pusha
movs
std
repnz
dec
xor
mov
stos
push
pop
js
mov
out
enter
jmp
(bad)
out
outs
cli
xor
ja
ins
add
and
jnp
in
and
jge
lea
cmp
call
ret
add
stos
(bad)
dec
add
mov
cmps
sbb
ds
sub
repz
jbe
loope
or
cld
adc
cmp
pop
jmp
mov
pop
faddp
(bad)
nop
cmp
(bad)
fst
mov
mov
loopne
jl
pop
pushf
arpl
sub
outs
sbb
pop
bound
adc
lahf
sti
jns
popw
cmp
fstp
xchg
adc
adc
mov
pop
pop
(bad)
inc
fldenv
sar
test
jmp
test
sbb
jae
sbb
jb
cmps
aad
into
inc
nop
sahf
mov
sbb
push
fist
addr16
jp
cmp
loop
(bad)
mov
cmp
adc
and
push
sbb
gs
add
push
fdiv
pusha
ins
clc
ret
push
popa
cmp
xchg
mov
xchg
mov
cdq
(bad)
stc
inc
jp
mov
mov
mov
jg
jb
mov
inc
push
mov
gs
movs
loopne
idiv
jmp
cmp
or
popa
jns
dec
ds
imul
jle
pop
cmp
mov
jle
mov
add
sbb
and
fdiv
lds
sbb
rcr
mov
xchg
push
outs
cwde
jge
fdivr
pop
jb
dec
fsubr
ss
pop
sbb
mov
cmp
sbb
mov
add
add
in
jmp
lahf
push
dec
fisttp
loope
sub
int
dec
clc
inc
loopne
ret
test
mov
cmp
dec
xor
mov
(bad)
jbe
mul
adc
in
push
jle
bound
xor
rol
shl
loop
out
js
(bad)
(bad)
cs
sbb
push
test
mov
cwde
bound
xchg
dec
mov
jp
inc
mov
adc
mov
fcmovu
sbb
xchg
mov
out
sub
js
sub
inc
sbb
mov
inc
ja
loope
mov
jnp
xor
cmp
mov
and
pop
push
mov
imul
rol
lock
mov
out
mov
sbb
adc
in
call
sar
add
inc
lods
sbb
ret
adc
jle
xor
xor
movs
lock
xor
ins
fistp
xor
loop
xchg
int
sbb
mov
dec
xchg
sbb
adc
xchg
inc
mov
and
stos
fmul
mov
ins
mov
inc
test
(bad)
adc
push
test
xor
xchg
lods
pop
cmps
mov
push
push
in
and
cmp
ffree
cld
in
std
bound
dec
call
jnp
ss
adc
mov
icebp
aaa
lods
cmp
jno
data16
push
xchg
or
inc
test
les
rcr
or
jnp
add
push
cmp
lock
arpl
enter
and
add
(bad)
test
psllw
dec
stos
push
hlt
cmps
mov
xchg
test
xchg
jne
sub
jbe
push
ret
shl
pop
sbb
mov
xor
sbb
shr
jbe
loop
fs
ins
cwde
dec
iret
shr
pop
cmps
jo
test
(bad)
push
fbstp
pop
cmp
sbb
dec
aam
iret
(bad)
(bad)
ret
adc
pop
call
inc
add
in
pop
jns
add
sbb
cmc
xor
mov
xor
sar
gs
das
xchg
cli
(bad)
push
out
imul
dec
cmp
popf
mov
mov
inc
pop
test
cmp
enter
jae
xchg
pushf
call
(bad)
in
mov
jecxz
pop
sbb
retf
into
inc
es
mov
stos
mov
jno
les
enter
pop
cs
fldz
pop
repz
div
test
loopne
mov
dec
pop
dec
sahf
mov
outs
sub
sbb
xor
daa
out
adc
add
mov
cmps
iret
push
cli
fs
aas
sub
stos
xchg
cmp
xor
fs
add
xor
fs
aad
sbb
mov
pop
stos
pushf
hlt
mov
popa
jmp
push
cwde
ret
mov
inc
sub
leave
ret
jge
cmp
cmp
sbb
into
pusha
popa
mov
add
add
nop
test
pop
(bad)
mov
and
cmc
xchg
sub
push
push
call
xchg
fwait
lock
jp
mov
adc
mov
mov
xchg
sub
shl
sub
call
ret
cmp
enter
ret
xchg
daa
mov
sbb
or
imul
xchg
push
inc
sub
or
inc
push
mov
xchg
aaa
test
cmc
cmp
call
xor
mov
lods
mov
(bad)
cmp
mov
jb
xor
or
hlt
adc
adc
je
pop
pop
lods
add
cld
ror
dec
out
ficom
test
std
dec
mov
js
movs
push
add
jle
in
xcrypt-ecb
cmps
iret
cwde
sar
in
pop
mov
scas
or
lods
ja
sub
mov
and
aad
aas
push
pop
movs
pop
dec
mov
mov
fiadd
ins
add
repnz
loopne
pop
jp
jae
fadd
movs
imul
pop
add
mov
test
or
pop
addr16
xchg
jb
xor
dec
sub
ins
xchg
mov
retf
xor
pop
dec
daa
fsubrp
fcomp
fdiv
repnz
add
and
sbb
fist
sub
sub
(bad)
sub
scas
loopne
xor
call
jo
shr
les
or
push
mov
pop
pop
adc
sbb
add
xchg
add
cmps
(bad)
sbb
push
outs
push
cmp
mov
in
mov
adc
xchg
push
pop
inc
(bad)
repnz
fsubr
imul
mov
and
mov
(bad)
ins
jae
ins
jne
push
xchg
adc
inc
outs
ret
mov
add
cdq
repz
cmp
jp
sub
xchg
or
bound
jmp
mov
in
es
push
inc
(bad)
pop
inc
dec
ins
add
and
adc
sub
movs
xor
sub
mov
shl
into
sub
(bad)
cdq
in
sahf
ins
pusha
mov
mov
retf
sub
xlat
mov
imul
shl
and
pop
pop
inc
lods
xor
jbe
push
mov
(bad)
movs
loop
add
or
gs
xchg
or
xchg
call
cmp
int
nop
push
(bad)
clc
pop
mov
out
cmps
shl
outs
daa
jmp
int
push
jg
jns
mov
jp
sbb
scas
test
inc
add
cli
scas
iret
push
enter
out
xchg
sub
ror
xor
cmp
cwde
lods
pop
test
loop
xor
jp
dec
leave
(bad)
and
retf
fistp
mov
mov
mov
sbb
mov
(bad)
xlat
pop
and
(bad)
jmp
inc
test
dec
rol
sub
sbb
mov
out
cmp
(bad)
cmp
pop
aad
cmp
stos
fdiv
push
scas
test
(bad)
xchg
aad
clc
mov
das
push
cmp
mul
push
xchg
pop
jmp
mov
das
lods
test
dec
or
scas
icebp
scas
jge
or
pop
xor
in
xchg
push
es
lds
push
jle
pop
mov
push
mov
xchg
sti
(bad)
aas
sbb
js
sub
mov
push
sbb
push
call
fistp
jmp
fbld
movs
test
fnsetpm(287
dec
pop
pop
mov
jae
pop
jmp
clc
pop
cmp
aas
and
scas
dec
outs
push
iret
pushf
shl
mov
xor
xchg
pop
cdq
inc
das
push
jmp
mov
frstpm(287
aas
xchg
jg
mov
mov
mov
mov
jbe
inc
(bad)
or
xchg
jns
movs
or
sbb
adc
mov
dec
inc
ins
ret
or
mov
pop
les
pop
jb
push
lea
fsubr
out
and
or
bound
jle
add
es
(bad)
out
test
sahf
adc
jmp
outs
fistp
mov
(bad)
mov
pop
cmp
xor
xchg
xlat
hlt
and
push
push
or
retf
push
es
(bad)
mov
loop
outs
out
xchg
xchg
cmps
mov
data16
sub
mov
test
scas
xor
xchg
adc
cdq
int
aaa
(bad)
cld
xlat
inc
cdq
push
mov
dec
sbb
leave
scas
loop
or
rcr
bound
jg
sub
adc
fisubr
mov
lods
cmps
pop
and
iret
mov
pop
inc
je
inc
shl
xor
test
jl
pop
add
cmp
sub
ficom
pushf
enter
mov
mov
and
mov
pop
jecxz
pop
daa
out
mov
pop
test
pop
retf
xor
fwait
(bad)
aas
xor
sbb
and
fs
jae
add
lea
mov
jbe
mov
jo
fdivr
push
xor
sub
ret
outs
iret
push
pop
or
and
and
mov
js
pop
xchg
shl
dec
push
loopne
dec
xchg
adc
mov
(bad)
lods
in
jae
call
xchg
push
sub
mov
sbb
mov
adc
mov
mov
test
int3
mov
or
mov
jns
cli
test
je
add
jno
rol
push
or
mov
mov
jno
lds
enter
out
rol
fisubr
and
sti
cmc
test
mov
pop
adc
movs
push
dec
pop
ret
jns
adc
mul
out
cmp
jecxz
gs
mov
sbb
je
mov
sub
sub
test
dec
out
pushf
loopne
cmp
fnstcw
(bad)
call
sbb
pop
or
adc
(bad)
add
cmp
fdiv
test
mov
add
jp
and
stos
xchg
mov
imul
jno
leave
mov
fnstcw
dec
(bad)
and
pushf
ins
or
jmp
xchg
jle
dec
adc
xchg
mov
sub
outs
pop
push
xor
fwait
cwde
mov
xchg
xor
movs
pop
pop
adc
js
inc
dec
retf
mov
mov
popa
inc
out
(bad)
xchg
call
dec
cmp
movs
adc
in
test
pop
int
shl
pop
inc
or
mov
xchg
dec
movs
jae
mov
push
mov
dec
and
push
or
mov
test
xchg
xchg
mov
ficom
ja
out
call
pop
and
bound
ror
fsubrp
cmp
lods
retf
mov
ret
aas
sti
add
sub
call
add
dec
jg
frstor
adc
jge
sub
cdq
mov
sbb
add
mov
dec
call
jg
add
xchg
addr16
pop
shr
inc
mov
mov
fs
iret
popa
mov
mov
lahf
mov
jb
sbb
repz
or
mov
push
test
std
clc
mov
push
mov
loope
cwde
les
in
sbb
adc
jp
push
dec
leave
sbb
cmps
and
push
mov
div
sbb
out
push
jecxz
cmc
in
cmc
stc
push
mov
fistp
in
or
cmp
inc
xchg
xchg
imul
(bad)
xor
jg
jmp
and
xor
repz
xlat
jbe
mov
cmp
pop
and
int
fist
out
jle
fs
mov
je
mov
bound
ja
and
pop
mov
clc
jmp
push
cmps
hlt
mov
mov
xchg
xor
ror
loop
sbb
rcr
cmp
rcr
mov
inc
nop
jno
test
or
test
fild
inc
sbb
mov
cmps
retf
mov
cmps
(bad)
dec
jecxz
gs
or
dec
push
dec
aam
jb
pop
push
jle
xchg
jnp
test
ror
jge
push
popf
rol
les
cmp
adc
mov
jno
adc
shl
adc
aam
data16
cmp
int
pusha
push
add
repnz
sbb
push
pop
ret
adc
lahf
mov
or
cmp
in
xchg
icebp
pop
sbb
lahf
mov
sub
and
daa
ret
ja
rcl
les
pop
lock
dec
xor
mov
sub
(bad)
sbb
icebp
mov
in
jb
push
mov
sub
jb
outs
and
sbb
mov
xor
dec
in
aaa
lods
mov
aaa
pop
iret
inc
ss
and
dec
cld
xor
mov
int
es
cmp
(bad)
jg
aaa
shl
jmp
xor
mov
fmul
(bad)
(bad)
xchg
sbb
push
aad
dec
adc
cmc
pop
aas
cmp
adc
mov
sahf
sub
jb
in
in
jecxz
inc
dec
and
jecxz
cmp
(bad)
cmp
jle
or
ins
jp
repz
aam
xchg
adc
xor
dec
or
std
hlt
stc
or
push
mov
(bad)
cmp
repz
inc
xor
xchg
sar
xchg
pop
repz
ins
dec
ud1
lods
adc
sub
adc
call
stos
test
dec
pop
sbb
mov
dec
inc
sbb
rcr
(bad)
xchg
pop
enter
cdq
dec
cmp
adc
or
mov
pop
xchg
call
in
push
add
sub
inc
jge
and
ror
push
add
lods
pop
xchg
popf
pop
leave
dec
stos
mov
aam
jp
dec
dec
cmp
retf
push
pop
jbe
leave
std
push
adc
inc
adc
cs
xor
adc
pop
lea
popa
push
sahf
jp
mov
fistp
fisttp
(bad)
addr16
sbb
adc
ins
mov
and
add
fcomp
jb
punpcklwd
xchg
push
jae
and
test
cmp
push
pop
lea
stc
add
ins
aaa
jg
mov
addr16
xchg
jne
jp
mov
fcmovu
pop
popf
adc
push
jae
jg
je
mov
ret
int3
dec
es
or
lods
dec
stos
sub
outs
mov
call
imul
jmp
not
xchg
sub
and
aas
popa
mov
imul
stc
xchg
dec
xchg
dec
ins
cmp
xchg
ss
pop
jecxz
in
fstp
mov
ds
ds
pushf
(bad)
repz
jecxz
sti
leave
dec
sbb
xlat
mov
xchg
test
mov
gs
cmp
stc
dec
sbb
mov
pop
push
add
or
dec
sbb
in
cmps
rcr
(bad)
fsub
dec
sbb
js
(bad)
pusha
sbb
or
in
sbb
jge
jl
mov
dec
sub
mov
mov
(bad)
sti
movs
or
movs
pop
sub
(bad)
adc
jle
sbb
push
sbb
fwait
jo
retf
push
sub
fcomp
aad
loop
push
pop
dec
fdiv
mov
dec
ds
mov
iret
mov
sahf
lock
mov
push
sub
xor
aam
gs
call
fwait
dec
fwait
loope
repnz
aaa
out
stos
test
mov
cld
mov
shr
jecxz
and
xchg
cmp
or
repnz
xchg
pop
dec
loopne
repnz
push
retf
push
inc
mov
adc
dec
sar
mov
pusha
and
shr
cdq
rcr
(bad)
adc
je
xlat
scas
mov
inc
out
fisttp
push
mov
mov
arpl
lods
sbb
inc
aad
lahf
(bad)
lods
sbb
jge
sub
shl
fidivr
fisub
pop
and
dec
push
pop
fist
mov
sbb
or
cmp
mov
jae
xchg
cwde
aad
test
lea
xchg
mov
cmp
mov
sti
cmp
ficomp
dec
dec
cmp
mov
adc
fs
inc
xchg
loope
call
dec
nop
clc
xor
push
mov
mov
(bad)
jmp
or
push
sub
or
test
leave
sub
ret
adc
dec
mov
push
popa
mov
mov
dec
test
std
push
mov
pop
cmp
jg
sub
mov
sbb
ss
or
scas
inc
xor
xor
addr16
dec
push
xchg
mov
mov
cmps
pop
and
add
and
daa
int
cld
push
es
clc
mov
bnd
and
inc
dec
sub
ret
jbe
inc
and
ret
jge
bnd
mov
or
xor
ds
xor
xchg
scas
or
cmp
shr
pop
inc
xor
xchg
test
in
sub
mov
out
ret
xor
push
pushf
aaa
inc
movs
int
xchg
push
js
icebp
imul
adc
fldenv
mov
pop
jecxz
jae
ret
lahf
inc
inc
sub
pushf
aas
push
(bad)
dec
and
mov
pop
out
dec
pop
mov
stos
inc
dec
or
jne
jg
arpl
es
mov
xchg
and
sub
xchg
mov
push
adc
mov
mov
bound
cmps
into
in
sub
aaa
popf
adc
ret
fcom
std
xor
pop
cwde
ss
adc
xor
cmovp
retf
es
outs
imul
push
ret
cdq
rcr
sbb
xchg
jecxz
dec
jl
add
sbb
xchg
or
pop
xor
and
daa
std
push
mov
sub
inc
stos
cwde
inc
push
pop
xchg
cmp
adc
mov
and
je
sahf
mov
nop
dec
cmp
xor
lock
sub
iret
xchg
test
daa
pop
(bad)
xlat
lock
stos
pop
into
test
push
int
dec
call
jmp
sbb
add
mov
cmp
test
inc
adc
jmp
stc
mov
xchg
inc
and
jecxz
ror
ins
lahf
fwait
cmp
int3
or
xchg
inc
arpl
mov
aam
inc
cli
jg
cmc
sub
ret
mov
dec
inc
or
adc
ja
jecxz
inc
push
cs
cmps
inc
cmp
hlt
jae
popa
fst
aam
movs
push
test
or
scas
cmp
ss
imul
lods
fild
or
movs
push
scas
pop
daa
leave
cmp
mov
jg
inc
icebp
mov
or
pop
xchg
jl
or
mov
push
imul
pop
adc
add
pop
das
test
mov
test
adc
je
push
(bad)
xchg
pusha
jno
imul
cmps
lahf
inc
in
fs
sub
shl
add
mov
inc
xchg
add
loopne
outs
sub
xchg
(bad)
fisubr
sbb
adc
cli
cli
int3
xchg
xor
adc
cmps
mov
add
fadd
pop
xchg
div
inc
rcl
mov
ret
retf
fistp
rcr
dec
into
out
xor
dec
scas
(bad)
call
xor
lock
imul
and
in
rol
and
js
cmps
sbb
out
ret
mov
xchg
fwait
mov
fnstcw
mov
icebp
ss
xor
std
in
test
push
mov
push
dec
pop
cld
loop
push
add
mov
int3
cmp
or
mov
enter
push
fmul
rcl
or
in
popa
cs
mov
xchg
repz
or
cmp
loopne
es
add
sbb
(bad)
imul
retf
or
scas
mov
(bad)
lea
dec
adc
imul
shl
pop
ins
es
xchg
push
mov
test
add
push
cdq
je
pop
mov
idiv
retf
addr16
add
repnz
jecxz
mov
ins
pusha
mov
adc
(bad)
cli
and
cmp
in
push
pop
cmp
(bad)
push
push
cmp
fst
int
in
(bad)
jmp
cmp
fucomi
test
scas
(bad)
jge
outs
mov
aaa
sbb
or
fnstenv
or
pop
inc
scas
stos
stc
lods
aaa
push
add
gs
pop
mov
inc
dec
mov
and
mov
or
mov
in
inc
pop
loope
xchg
or
push
iret
mov
jns
push
cmp
pop
loopne
ins
in
mov
sbb
add
(bad)
ret
dec
xchg
cmps
push
mov
ins
imul
cmp
jmp
icebp
aas
mov
xchg
out
and
pop
cmp
scas
aaa
pop
nop
rol
cwde
mov
lds
or
pop
sub
retf
mov
mov
sti
jecxz
adc
fdivr
xlat
xchg
or
fdiv
xchg
rcl
dec
aad
push
in
ins
xor
cmc
div
fdiv
test
sbb
xor
enter
aas
dec
xor
sub
sbb
test
arpl
pop
xchg
retf
ja
loope
mov
int
popf
xchg
adc
adc
add
mov
sbb
mov
lock
(bad)
addr16
int
test
dec
or
ds
(bad)
movs
stos
or
stos
sti
mov
inc
jne
dec
movs
sbb
push
fdivr
cmp
add
sbb
jecxz
sub
ret
stos
enter
pop
jo
iret
sti
pop
pop
fs
mov
ss
and
int
sar
push
push
(bad)
mov
mov
inc
sub
in
mov
sti
mov
std
push
sbb
xchg
les
fdivp
sub
cwde
pop
mov
pushf
lahf
xor
mov
adc
dec
in
(bad)
outs
fwait
or
mov
cmp
jo
rcr
je
mov
(bad)
icebp
sti
inc
das
dec
xchg
sbb
or
xchg
adc
and
add
mov
pop
adc
and
aad
hlt
xchg
cli
push
rcl
div
out
inc
into
div
retf
xlat
push
out
leave
mov
add
xor
lods
xchg
jbe
jg
push
mov
jle
mov
or
cmp
push
dec
retf
es
jg
shl
ds
outs
fist
idiv
mov
push
inc
lea
sub
xlat
xchg
test
sbb
push
pusha
imul
jno
and
in
test
cmp
xchg
leave
jnp
push
fdiv
mov
out
add
push
das
in
inc
lock
(bad)
je
(bad)
and
push
or
int
cmp
jb
pop
icebp
sbb
iret
imul
inc
cmp
aam
cmc
push
cmp
xor
(bad)
arpl
(bad)
adc
or
and
clc
pusha
test
mov
iret
cwde
pop
(bad)
hlt
jp
ret
mov
jns
and
adc
cmp
retf
xor
push
mov
fstp
mov
das
cmp
add
call
and
xor
sti
adc
js
mov
sbb
pop
dec
adc
icebp
adc
and
stos
adc
push
adc
out
or
outs
push
lods
pop
mov
rol
out
xor
dec
out
xor
sbb
test
hlt
icebp
repz
pop
cmp
out
je
mov
(bad)
fwait
push
pop
loope
fnstsw
test
lock
inc
jecxz
dec
mov
sbb
out
adc
pop
mov
push
or
in
xchg
retf
jecxz
mov
mov
pop
or
xchg
stc
or
push
outs
js
mul
jecxz
jbe
jns
xchg
aaa
dec
pop
dec
mov
xchg
pusha
sbb
cmp
rol
or
mov
in
add
dec
pop
js
cmp
jmp
fdiv
ins
(bad)
cdq
fnstenv
mov
cmps
push
cmps
pop
jp
por
cli
cli
lods
mov
or
outs
sti
inc
ds
das
and
fcmovne
cmp
imul
xor
xchg
sahf
mov
push
je
add
mov
cmc
loope
aas
dec
adc
mov
mov
xchg
shr
sbb
xor
test
xor
aad
adc
jle
in
sub
pop
pop
jbe
and
push
std
sbb
inc
sbb
mov
pop
cs
mov
pusha
pop
xchg
ret
pusha
js
test
xlat
add
cmps
(bad)
fstp
or
cmp
and
sub
stc
call
and
xchg
xchg
cmp
es
ds
mov
add
fbstp
or
fstp
in
cmp
out
push
cmc
xor
or
sub
mov
add
cmps
lock
add
pop
xor
jbe
push
inc
push
(bad)
cmps
mov
xlat
clc
fcom
cmp
in
rcl
sub
test
push
push
ds
(bad)
test
mov
push
sub
push
sub
dec
stc
jno
add
mov
shl
or
add
sub
jmp
in
jge
xchg
mov
and
dec
in
cs
(bad)
dec
lock
mov
and
sbb
out
sub
ffree
push
call
mov
mov
mov
fld
push
or
inc
jle
push
rcl
lds
repnz
mov
retf
jecxz
(bad)
and
aad
jl
cmp
and
or
mov
sbb
mov
lock
push
mov
xor
xor
sbb
ficom
stc
inc
neg
stc
std
(bad)
cmp
out
mov
cmp
push
dec
jecxz
pop
fsub
and
and
and
sbb
(bad)
xchg
test
fist
mov
mov
ss
in
fnstenv
jge
or
(bad)
cmc
sub
imul
mov
fadd
std
lods
idiv
movaps
add
loopne
sub
mov
push
dec
adc
scas
cmps
pop
add
dec
jns
jnp
cmp
mov
pop
(bad)
xor
sub
sub
aam
mov
jnp
jl
jl
ds
add
jg
mov
and
or
xchg
xchg
fcom
cmp
push
in
stos
sub
test
fstp
mov
jg
cmp
repnz
fidiv
shr
fidivr
mov
mov
rol
ss
es
sub
popf
test
sbb
push
ret
mov
mov
cmps
in
mov
pusha
fincstp
push
push
or
xchg
(bad)
stos
clc
cmps
imul
jmp
test
loop
sti
fdiv
sbb
(bad)
cli
mov
mov
cmp
cs
mov
adc
aas
mov
dec
mov
mov
mov
push
fwait
sub
dec
dec
jbe
pop
jmp
pop
push
stc
push
and
hlt
xor
mov
cmp
add
and
cmc
mov
and
adc
ins
fadd
in
nop
retf
(bad)
mov
jmp
sahf
aam
or
loope
jns
aaa
cld
loop
aam
xchg
push
xchg
lahf
mov
jb
dec
dec
sub
test
shr
push
es
adc
loopne
mov
cld
rcl
push
xchg
clc
mov
jno
mov
push
pop
add
or
jns
dec
scas
xor
imul
dec
dec
inc
ins
fidivr
jae
ror
scas
pop
cmp
pop
retf
fcmovbe
sub
xor
sbb
sub
adc
dec
push
popa
inc
ja
xchg
ret
int
xor
arpl
xor
mov
mov
xor
sar
push
cwde
adc
jmp
in
sti
outs
or
leave
inc
aam
outs
loope
cmc
push
in
push
loopne
cmc
pop
mov
scas
sbb
adc
stos
push
cdq
popf
ins
fucom
popa
push
dec
xor
mov
mov
bound
adc
push
out
add
not
ins
out
lea
mov
push
or
mov
cmp
and
(bad)
mov
push
call
cmp
call
and
pushf
and
lahf
adc
pop
or
and
add
or
outs
pop
dec
loopne
inc
inc
sub
sti
mov
jl
cmp
dec
cld
dec
xchg
stos
pop
pop
iret
outs
xchg
jne
add
push
add
cs
and
add
mov
jmp
ins
xchg
loopne
icebp
movs
ror
jecxz
jl
cmp
jae
jne
call
into
retf
mov
inc
popf
sub
dec
gs
and
mov
in
cli
cmc
sahf
sbb
xchg
or
stc
ror
enter
inc
or
xor
push
test
add
or
or
or
pop
lock
sub
call
lea
sbb
popf
lock
ins
xor
push
fidiv
js
cmp
loopne
pushf
add
jg
jae
xlat
push
mov
pop
bound
icebp
cmc
sub
dec
xlat
out
pop
push
push
inc
xchg
nop
(bad)
leave
or
xchg
pop
and
popa
mov
pop
sahf
lods
aam
jns
and
fcom
sbb
sub
or
clc
sub
pop
leave
sahf
fstp
dec
push
fxam
sub
add
popf
mov
adc
push
and
addr16
test
les
or
hlt
mov
in
sar
sti
inc
ins
push
ret
scas
outs
jmp
sbb
test
call
pusha
popa
pop
xchg
mov
lds
mov
scas
out
push
fistp
mov
mov
push
push
int3
adc
ja
sbb
ss
ds
sti
mov
push
sub
add
psubusb
pushf
mov
ftst
sub
(bad)
push
mov
adc
adc
enter
int3
or
movs
mov
(bad)
(bad)
pop
xchg
das
std
aaa
inc
adc
test
dec
cmp
(bad)
jae
pop
and
adc
int3
ret
mov
outs
test
hlt
jae
mov
hlt
xor
mov
sbb
adc
xor
sar
sbb
and
out
push
cmp
xchg
dec
mov
dec
(bad)
das
clc
out
sbb
inc
xor
icebp
mov
add
out
outs
mov
cmps
ror
sub
test
shr
retf
movs
scas
movs
pop
dec
repz
or
xchg
lahf
cdq
imul
fstp
mov
jmp
mov
or
mov
call
cmps
mov
fisttp
retf
push
cmp
std
daa
imul
aad
in
inc
xchg
and
mov
xchg
dec
fsubr
cs
mov
jns
jne
ret
idiv
lea
outs
xor
fcmove
pop
push
jnp
cmp
sub
jb
rcl
add
inc
fbld
mov
mov
gs
and
sub
fsubr
push
addr16
sbb
or
call
je
sbb
ror
(bad)
mov
xchg
mov
scas
xchg
addr16
sub
xor
mov
jg
mov
repnz
addr16
cmc
mov
or
sbb
pop
inc
int3
lds
mov
cld
sti
je
dec
(bad)
shr
xor
inc
or
out
jno
push
scas
add
retf
sti
mov
add
scas
cmp
scas
(bad)
xchg
pop
cmp
cld
fisttp
mov
xor
fsubr
jle
or
cmp
sub
dec
pop
ror
shl
repz
jle
push
cmp
ret
rol
pop
push
outs
enter
inc
hlt
test
shl
push
xor
repnz
sub
neg
ins
pop
mov
imul
push
pop
clc
push
int3
or
aad
fcomp
mov
fdiv
ret
mov
rcl
jecxz
mov
sar
cs
popa
sub
mov
xchg
mov
addr16
mov
xor
push
clc
test
push
pop
sbb
pop
and
hlt
(bad)
fild
jmp
mov
es
mov
cli
sbb
xor
sub
sbb
mov
rol
mov
mov
mov
ret
mov
fsubr
pop
dec
push
mov
lock
jle
inc
sbb
xor
push
push
popa
(bad)
jl
xchg
iret
es
jnp
sub
mov
movs
fisttp
sbb
leave
dec
mov
sub
jne
lahf
fcomp
xchg
adc
push
mov
lahf
add
mov
pushf
shl
fxch
lods
test
in
int3
add
leave
and
pop
mov
bnd
mov
mov
and
scas
mov
sbb
cmp
push
push
sub
add
jg
sub
lds
es
sub
mov
mov
jecxz
fwait
popa
push
sti
call
mov
sub
xchg
mov
dec
push
data16
lea
adc
ret
iret
test
outs
mov
rcr
xchg
sti
jmp
not
xchg
xchg
inc
dec
in
add
jbe
mov
inc
xchg
jbe
push
pushf
xchg
lods
rcl
xor
mov
lahf
mov
mov
cwde
pop
xchg
fwait
inc
xchg
outs
int
add
xchg
imul
arpl
jnp
fmul
xor
jns
fcmovnb
aad
ss
jmp
sub
add
ins
jbe
pop
add
sbb
in
sbb
cwde
test
(bad)
repnz
cmps
xchg
(bad)
pop
cmc
pop
and
scas
mov
or
repnz
cmp
add
sub
shl
clc
push
enter
xchg
addr16
jecxz
dec
add
in
jmp
cwde
push
repz
cmp
xchg
cmps
inc
cmps
cmp
or
xor
xor
push
dec
add
or
daa
in
push
mov
ret
inc
test
mov
push
or
xor
sahf
cld
pop
fisttp
push
les
stos
ja
loopne
call
cmps
scas
in
sbb
xor
test
mov
dec
repz
push
ficom
add
pop
inc
repz
sub
ror
push
xchg
or
xor
mov
mov
add
mov
cmp
add
popw
xlat
scas
enter
cmp
push
fsubr
mov
cli
mov
jp
repnz
inc
add
les
add
repnz
(bad)
addr16
fcomip
cmc
(bad)
cmp
pop
push
scas
xchg
sahf
nop
add
cmp
inc
loopne
test
shr
je
call
mov
jge
movs
fild
ror
leave
mov
sahf
and
sbb
cmp
xor
add
or
ret
mov
jb
jae
sbb
scas
dec
ret
jo
into
push
test
cli
dec
mov
mov
mov
idiv
pop
xchg
mov
mov
mov
test
test
mov
ss
jbe
adc
cmp
icebp
fnstenv
outs
xchg
pop
push
sub
jmp
sahf
retf
ret
xchg
int
outs
pop
in
jge
shl
jl
cwde
ror
mov
add
aad
dec
jp
enter
pop
call
in
dec
pop
punpckhbw
repz
push
pop
xchg
xchg
pop
(bad)
int
sub
cmp
outs
cmp
inc
sub
xchg
inc
ss
out
retf
mul
movs
retf
fidivr
mov
xor
loop
pop
dec
mov
mov
fnsave
dec
jmp
jg
imul
adc
cmc
xor
jns
std
or
int
or
imul
sar
and
loop
in
jns
fwait
lds
popa
or
push
cmp
ins
fwait
call
pop
addr16
jecxz
imul
sub
cmp
push
jmp
sbb
fcomp
add
dec
shr
fistp
jnp
aam
in
push
sbb
arpl
fcomp
daa
popa
popa
mov
pop
(bad)
mov
add
mov
int
fwait
pop
fld
or
mov
stc
loop
add
loope
test
xor
imul
loopne
xchg
jne
or
(bad)
jno
inc
cs
adc
js
rcr
or
(bad)
push
cmp
mov
nop
mov
cmc
pop
repnz
or
inc
cmp
test
js
test
mov
lods
ret
mov
push
stos
push
addr16
mov
fild
call
popf
mov
jne
(bad)
add
pop
nop
jp
jge
pop
loop
movs
je
and
cmp
lock
ss
mov
lds
xor
mov
ret
dec
in
imul
dec
pop
cdq
ret
and
add
xor
xchg
pop
cld
xchg
(bad)
das
jmp
hlt
sub
clc
xor
pop
and
sbb
and
clc
jno
popf
mov
mov
aad
lahf
pop
pop
clc
cmc
cli
and
hlt
or
addr16
cmp
add
xor
iret
nop
daa
test
sbb
xor
mov
sub
popf
repnz
xchg
cmps
lods
cwde
mov
jne
mov
arpl
inc
cmp
sub
and
movs
addr16
sub
mov
ret
enter
mov
rcr
loope
call
pop
or
add
mov
cmp
aam
inc
dec
shr
pop
mov
scas
and
add
mov
(bad)
cmp
jno
dec
add
fs
mov
cmc
xchg
sub
xchg
mov
mov
cdq
fs
pop
jne
ds
mov
sub
xchg
push
mov
mov
push
cdq
push
or
push
mov
das
mov
mov
xchg
ins
xor
test
stos
mov
xchg
mov
dec
adc
mov
mov
popf
lock
jge
fdivp
push
outs
fidivr
mov
jns
js
xchg
shr
add
(bad)
ds
inc
repz
aam
pop
mov
jnp
cmc
clc
mov
shr
sahf
int3
es
and
jne
mov
add
adc
pushf
xchg
jns
jle
mov
mov
test
fild
dec
jne
mov
xor
or
js
mov
push
cmp
add
pop
dec
das
cwde
shl
add
jl
jecxz
fbstp
fisub
jnp
iret
inc
out
jae
push
add
inc
(bad)
stc
or
(bad)
xor
mov
add
xchg
xchg
das
in
jo
lods
repnz
adc
iret
int3
outs
lea
inc
cmp
xchg
jns
popf
test
and
xlat
pop
cmp
cmps
movs
pop
mov
sub
xchg
aaa
xchg
fstp
pop
mov
fwait
mov
mov
and
push
shr
xchg
or
iret
dec
push
sub
push
js
push
cmp
in
(bad)
xchg
mov
ret
cmps
pusha
dec
ins
dec
jmp
mov
jge
xor
xchg
scas
es
inc
lods
data16
sbb
shl
and
mov
(bad)
mov
mov
pop
aad
mov
pop
fcom
stos
arpl
ds
mov
loope
or
jo
xchg
movs
out
pop
ins
mov
xor
xchg
add
fcmove
dec
xor
mov
mov
mov
addr16
call
pop
mov
mov
inc
cmp
outs
adc
shr
pop
jbe
ret
jns
fisub
and
inc
adc
ss
cmp
xchg
pop
push
test
jns
dec
mov
fld
xchg
dec
jbe
movs
sbb
movs
mov
ret
mov
fnstenv
xchg
push
rol
push
jmp
xchg
jecxz
(bad)
(bad)
das
mov
int3
xchg
pop
pop
movs
mov
sub
cmp
loope
sub
xchg
sar
mov
cdq
icebp
mov
(bad)
scas
int
adc
sub
ror
movs
dec
mov
cld
mov
(bad)
aas
in
jns
out
xor
mov
jge
or
cs
movlps
inc
mov
leave
(bad)
xor
mov
push
stos
movs
mov
aas
cmps
in
inc
popa
shld
jbe
jmp
movs
dec
repnz
int
neg
pop
imul
ror
div
(bad)
push
stos
sbb
sbb
jno
aaa
cdq
test
in
or
mov
cmps
and
push
inc
dec
or
mov
and
enter
lahf
dec
fsubrp
push
add
add
xchg
sahf
pop
jp
xchg
add
(bad)
mov
pop
movs
adc
dec
pop
xchg
xlat
jge
not
pop
fs
dec
dec
adc
ins
in
mov
mov
and
fstp
jl
and
push
jp
or
xchg
imul
and
mov
jge
imul
gs
sbb
fild
test
push
add
js
adc
push
xchg
loopne
lods
xlat
iret
pusha
out
push
out
sub
fsubr
xor
fld
jbe
or
fidiv
jecxz
adc
sbb
add
fstp
cmp
push
(bad)
lods
push
pop
mov
in
adc
add
sti
(bad)
call
or
test
push
xchg
push
outs
inc
mov
mov
push
sti
mov
mov
pop
inc
sbb
push
fs
dec
sbb
scas
test
popf
mov
jmp
mov
add
packsswb
out
mov
xchg
mov
imul
jp
jae
scas
adc
or
stc
popa
add
sub
jne
hlt
hlt
jo
lods
mov
adc
pop
into
cwde
rol
mov
xchg
lahf
fistp
adc
fwait
(bad)
(bad)
in
mov
add
mov
mov
fidiv
lods
push
icebp
mov
adc
and
lahf
lahf
mov
lods
mov
push
das
xor
push
xchg
dec
mov
repz
shl
stos
leave
adc
gs
fucomi
mov
mov
hlt
and
add
pop
arpl
mov
xor
inc
popa
dec
pop
mov
sbb
push
scas
iret
adc
fimul
xlat
enter
dec
scas
jg
pop
test
push
data16
into
sub
inc
les
outs
sar
push
or
(bad)
jno
sub
mul
ins
xchg
dec
(bad)
imul
or
into
jns
or
sahf
jnp
(bad)
bound
push
sahf
sub
xor
push
mov
fist
xchg
jns
gs
es
cmp
xchg
in
shl
imul
mov
push
add
iret
dec
or
inc
sub
ror
or
out
loope
add
mov
add
adc
test
xchg
outs
inc
add
fwait
mov
mov
out
nop
fnsave
mov
movs
ficom
push
xor
or
pop
xchg
xchg
jns
ud1
repnz
aad
add
repz
xor
pop
rol
cmps
dec
aam
mov
or
sti
cmps
ja
sbb
add
ins
push
add
jmp
add
ret
mov
mov
pop
repz
ja
xchg
mov
lds
sahf
jmp
push
add
mov
xor
mov
mov
test
bound
cwde
jle
or
jmp
adc
fwait
mov
cli
cmps
or
rcl
pop
ins
aam
and
dec
sbb
sbb
in
icebp
fsub
xchg
loop
jg
push
clc
xor
movs
xchg
jle
push
jno
call
fwait
test
fisubr
xchg
add
add
ret
inc
push
mov
pop
das
add
xor
or
pop
and
in
sahf
dec
inc
pop
mov
imul
xor
inc
aaa
xchg
cmp
cmp
sbb
pusha
jae
jae
add
loope
pop
mov
out
ja
sbb
ror
imul
mov
xor
jbe
fdivr
pop
test
imul
jle
mov
cmp
jbe
sub
cmp
ins
(bad)
xchg
and
aaa
jg
push
ret
repz
rol
(bad)
cmp
(bad)
jno
cmp
push
enter
lods
into
leave
scas
or
sahf
mov
xchg
pop
inc
fwait
sar
mov
stc
in
test
pushf
cmp
mov
test
outs
push
dec
ins
dec
in
rcl
les
int
(bad)
outs
sbb
not
fs
je
(bad)
pusha
dec
ja
xchg
xor
jmp
mov
mov
jge
mov
shl
es
out
xor
repz
or
repnz
icebp
loop
shr
test
inc
dec
add
stos
jecxz
sub
inc
repz
lds
inc
jge
sbb
sbb
retf
mov
cmp
out
mov
movs
ffreep
loope
adc
retf
push
dec
inc
push
cld
lods
out
out
aad
in
xchg
xchg
arpl
das
cld
mov
mov
pop
add
stc
jp
pop
mov
imul
and
popa
cmp
sbb
call
cli
mov
push
retf
int
jl
and
js
xchg
sub
(bad)
push
push
fidiv
pushf
pop
push
cld
sub
stos
sub
push
mov
daa
inc
dec
das
dec
mov
fnstcw
pop
pop
repnz
sbb
lods
in
aad
add
jmp
jle
arpl
xlat
xor
lahf
xchg
out
sub
add
stos
jl
repz
int
jle
leave
and
cmp
cdq
nop
mov
imul
jae
add
imul
pop
call
fcmovne
cmp
sbb
push
rcr
(bad)
add
fist
sbb
sub
and
rcl
xchg
adc
(bad)
bound
int3
inc
push
int3
ins
pop
cdq
retf
xor
iret
xchg
adc
aad
pop
pushf
inc
je
aam
push
inc
out
jbe
xchg
mov
fstp
mov
mov
leave
xor
mov
mov
(bad)
push
sub
jle
dec
adc
adc
cs
push
cmp
dec
pop
push
jns
jmp
cmp
ja
sti
ror
movs
mov
int
jnp
adc
adc
out
add
mov
test
and
leave
mov
in
ds
jmp
push
hlt
xlat
cmp
cld
ss
mov
jecxz
in
dec
shl
cmp
movs
and
inc
cmp
in
sub
(bad)
outs
enter
mov
cmps
adc
pop
int3
loopne
ficom
xchg
push
push
sub
movs
test
sbb
lea
dec
retf
les
inc
jmp
cmps
inc
fimul
ss
xlat
dec
push
xchg
push
(bad)
shr
adc
(bad)
xor
cmp
jne
jle
sbb
imul
idiv
loopne
mov
in
sub
and
xchg
in
jne
fcom
in
inc
dec
jp
adc
pop
aaa
cdq
mov
mov
ret
not
adc
gs
clc
punpckhdq
mov
enter
push
fild
xlat
mov
fnsave
sti
loop
or
sub
mov
adc
gs
pop
in
pop
call
div
jb
out
pusha
out
adc
dec
adc
sar
daa
lock
retf
mov
and
push
shl
nop
retf
inc
xor
rcl
ss
loope
sub
(bad)
jmp
sub
fimul
das
data16
nop
pop
dec
daa
aam
loopne
int3
push
xchg
repnz
nop
jl
fist
mov
movs
enter
add
push
shl
iret
retf
dec
pop
mov
fs
lods
popf
or
movs
jb
and
jle
mov
sbb
lods
push
pop
(bad)
jl
xchg
clc
push
inc
mov
leave
aam
mov
jp
sahf
loope
sbb
cwde
daa
(bad)
jecxz
iret
stos
cdq
arpl
lods
cmp
xchg
inc
fdiv
jnp
sbb
lahf
jbe
and
or
repz
stos
xor
shl
sub
cmps
dec
out
fist
push
(bad)
repnz
mov
adc
mov
rol
ja
outs
mov
and
mov
loopne
arpl
std
nop
mov
mov
push
push
mov
outs
sbb
or
jno
adc
or
out
jge
(bad)
sub
push
jecxz
imul
fs
pusha
dec
repz
and
dec
push
mul
fs
sub
adc
dec
push
jmp
push
push
push
jo
push
push
jge
loop
sar
out
fadd
inc
and
xchg
sub
sbb
cmp
cmp
jmp
js
and
fwait
pop
sub
push
inc
dec
sub
loopne
add
scas
mov
out
pop
xchg
retf
and
scas
push
push
dec
fstp
sbb
lods
mov
mov
loop
stc
sti
mov
mov
jg
mov
daa
ins
cmps
push
pop
clc
nop
mov
xchg
inc
addr16
jmp
and
fsub
mov
mov
add
(bad)
mov
clc
add
ds
cmp
push
inc
pop
sti
ret
push
aas
out
fild
cli
mov
pop
pop
loopne
xor
adc
jmp
pop
popa
movs
nop
scas
mov
loope
jno
mov
loope
lock
jbe
inc
aad
bound
js
jno
sbb
mov
sub
mov
inc
shr
pop
sbb
mov
setl
lock
jbe
sti
jl
ins
xor
test
lahf
out
cli
sub
mov
cmp
or
mov
xor
out
jb
aas
iret
repnz
iret
popf
mov
mov
jae
imul
cli
call
xor
pop
jp
(bad)
repnz
fnsave
or
rcl
push
adc
fs
mov
repz
mul
(bad)
lds
cmp
inc
pop
mov
mov
sbb
pop
ss
rcr
push
push
mov
jb
jno
loope
sub
outs
sbb
push
cwde
sub
ror
push
movs
sbb
add
inc
mov
dec
mov
iret
xor
and
iret
xor
sbb
jbe
aad
xchg
pop
mov
pop
mov
jb
jnp
jo
sbb
inc
push
dec
std
push
(bad)
fldcw
fistp
mov
clc
sbb
jb
push
data16
es
retf
sbb
repz
push
and
out
pushf
mov
int
imul
and
enter
add
inc
stc
sub
mov
mov
das
imul
in
dec
lahf
fdivr
inc
push
outs
xor
jb
or
cmp
ja
enter
adc
(bad)
cld
sbb
jle
pop
and
sbb
adc
xchg
or
cmp
jns
aad
xchg
push
shl
dec
pop
fwait
pop
jge
mov
mov
add
mov
arpl
jg
cdq
cmp
sub
mov
adc
(bad)
jl
xor
cs
jne
sbb
test
aaa
add
repz
xchg
loop
add
mov
repnz
outs
(bad)
fist
add
shl
scas
sub
rcr
outs
(bad)
(bad)
and
inc
rol
add
dec
jae
ror
imul
out
cmp
scas
xchg
scas
shl
sti
jmp
outs
pop
in
fldenv
cmp
mov
cld
mov
(bad)
pop
jno
leave
ror
mov
sbb
sbb
push
aad
scas
lea
xchg
ds
jp
add
popf
mov
int3
outs
or
inc
ins
rcl
pop
mov
aam
push
push
pushf
cmc
pop
jns
int3
enter
or
xchg
pop
mov
fistp
cmp
xor
loopne
mov
ins
fimul
repz
loopne
clc
and
rcl
jmp
xor
pop
mov
ret
pushf
in
add
jbe
dec
movs
push
cld
inc
mov
xlat
xchg
adc
inc
sub
adc
(bad)
(bad)
jo
sub
mov
mov
frstor
sub
test
test
jg
lds
pop
nop
ja
retf
push
pop
push
rdtsc
test
pop
stos
cdq
neg
hlt
sar
cmp
jmp
mov
stos
and
outs
in
xchg
and
gs
push
out
mov
inc
cmp
cmps
xchg
cdq
mov
call
movs
mov
mov
pop
inc
dec
popa
out
outs
outs
data16
xlat
add
mov
mov
in
cdq
push
ds
cs
add
mov
jo
lock
mov
pop
mov
mov
sti
pop
mov
xchg
rcl
inc
dec
cs
inc
sbb
inc
ja
adc
add
stc
or
mov
push
stos
adc
outs
inc
adc
ret
hlt
test
dec
and
and
or
mov
inc
jb
sub
(bad)
repnz
das
cdq
xchg
sbb
ds
push
out
shr
mov
js
push
lock
lods
into
pushf
enter
push
rol
inc
jno
ss
cld
or
test
lods
not
loopne
repz
ror
push
add
dec
adc
test
sbb
jno
outs
js
cmp
mov
out
mov
cmp
ret
std
mov
push
or
leave
mov
pop
add
daa
(bad)
sti
in
mov
add
push
push
movs
push
sbb
in
call
jle
dec
in
int3
es
lods
sub
aas
dec
inc
sti
push
sar
cmp
lahf
aam
pop
(bad)
mov
and
push
ds
or
and
stos
sbb
fimul
cwde
jbe
mov
mov
nop
gs
adc
xchg
and
mov
sbb
aad
test
jne
cmp
sub
ja
xchg
sbb
(bad)
dec
jo
mov
repnz
test
inc
inc
mov
fisubr
shl
push
std
mov
mov
cmp
xlat
pop
pusha
(bad)
mov
pop
mov
mov
mov
xor
out
out
mov
adc
xor
add
inc
sbb
jmp
sbb
daa
inc
shl
dec
and
push
pop
pushf
mov
sti
aad
in
pop
and
fisubr
out
dec
mov
pop
mov
mov
mov
sub
add
icebp
shl
push
mov
mov
arpl
add
popf
retf
(bad)
dec
and
inc
push
repnz
aaa
and
push
dec
add
jle
mov
or
xor
movs
jae
clc
je
inc
pushf
mov
in
or
and
ret
fidivr
jnp
sahf
cwde
dec
pop
mov
shr
push
je
jo
mov
or
jae
out
cmc
sti
das
pop
xor
sbb
outs
inc
lock
jecxz
pop
cli
aad
jmp
dec
pop
fidiv
ret
mov
xchg
mov
fcom
scas
inc
pop
dec
inc
popa
and
pop
dec
out
push
jno
add
popf
cli
call
das
jne
pop
xlat
fild
jnp
enter
sbb
loopne
(bad)
sahf
dec
mul
mov
test
xor
stc
das
mov
add
mov
jl
jns
test
mov
and
sub
frstor
(bad)
or
sar
fwait
std
mov
mov
retf
aaa
inc
retf
mov
adc
std
mov
out
jmp
cmp
ret
aad
(bad)
mov
test
fstp
add
push
aam
aas
jmp
aam
shl
call
leave
jl
dec
mov
dec
addr16
ss
sbb
(bad)
out
push
arpl
push
lds
push
jmp
iret
or
sbb
in
mov
pop
inc
in
mov
cmp
in
sbb
enter
jb
mov
sbb
jno
(bad)
ss
(bad)
mov
repnz
mov
in
dec
dec
call
je
dec
push
pop
pop
push
les
test
out
aam
test
mov
mov
inc
mov
dec
call
ret
fst
pushf
fdiv
pushf
xor
jge
scas
sub
ret
mov
imul
int
mov
push
push
and
sbb
dec
pop
out
push
sub
or
cmps
out
fisub
cmc
pop
inc
aam
and
pop
dec
jo
cli
mov
jle
jo
and
inc
add
lahf
in
fld
inc
imul
imul
out
retf
push
push
ins
push
adc
cmps
mov
xor
movntq
out
ds
scas
leave
js
xchg
retf
imul
je
ret
fadd
push
inc
and
dec
pop
jp
std
ins
rol
pusha
inc
cli
xchg
lds
dec
(bad)
test
and
sbb
test
data16
dec
cmps
dec
fwait
mov
test
jge
cs
mov
js
gs
mov
daa
retf
fs
cmps
mov
lock
pop
(bad)
adc
cmp
inc
lock
imul
out
into
xchg
pop
push
cmp
sub
jnp
sbb
lea
fmul
and
cmp
mov
jbe
add
pop
stos
sbb
test
daa
lahf
pusha
fisttp
ss
dec
sub
(bad)
xchg
out
pinsrw
je
ins
cwde
push
sbb
add
cmc
pop
and
enter
jnp
or
clc
nop
cmps
mov
jns
sbb
loope
push
div
ret
push
int3
aad
call
inc
out
shl
pop
imul
cwde
call
jns
ror
in
jmp
xchg
xchg
ret
ins
xor
add
or
retf
push
(bad)
(bad)
mov
add
sti
mov
mov
sub
and
int3
sbb
retf
mov
dec
test
pop
add
cld
sbb
cmp
(bad)
push
jae
adc
movs
call
xchg
adc
push
and
rol
pop
or
in
inc
lods
shl
lea
sub
add
ret
cdq
mov
mov
inc
das
push
out
push
das
stos
xchg
or
cmps
arpl
out
xor
jo
or
pop
int
xchg
push
xchg
mov
jg
mov
std
pop
rol
and
les
iret
dec
xlat
dec
(bad)
outs
fiadd
cmp
ror
push
pop
mov
jg
mov
shl
sub
xor
pop
ror
aaa
cdq
test
dec
xor
icebp
leave
sub
retf
dec
mov
in
add
out
ficomp
fdivr
jmp
nop
lds
push
clc
add
jbe
jle
cmp
ss
lea
dec
sub
loop
xchg
push
and
dec
pop
mov
xchg
mov
int
lods
mov
xor
addr16
leave
pop
jae
add
js
and
adc
or
push
xor
fmul
dec
nop
std
add
(bad)
retf
push
jb
out
xchg
call
loop
fsub
imul
call
or
aam
xchg
mov
pop
mov
scas
repnz
mov
cld
sbb
repz
fbld
outs
jnp
or
(bad)
cmp
loop
call
stc
sub
push
push
push
sub
test
mov
ffreep
xor
test
ins
add
ret
pop
sar
adc
cmp
push
in
fnstenv
mov
test
push
push
call
push
mov
jnp
mov
and
gs
outs
dec
and
jns
adc
leave
cwde
fmul
mov
ret
fdiv
loopne
jmp
dec
aam
fidiv
xor
jp
mov
pusha
(bad)
in
iret
mov
in
pop
lods
xchg
cmps
dec
ins
not
in
inc
mov
outs
mov
hlt
(bad)
xchg
out
repnz
gs
lods
pop
fwait
bound
stos
jmp
mov
in
dec
movs
pushf
or
cmps
or
clc
sbb
aam
inc
cmc
sub
sub
pusha
xchg
or
nop
mov
or
mov
lock
mov
enter
cmp
sbb
adc
hlt
in
div
fs
pop
inc
push
jmp
add
push
mov
adc
pop
add
adc
inc
and
imul
pop
add
cs
out
shl
inc
add
retf
mov
in
or
xchg
setae
or
pop
inc
pop
and
hlt
dec
pop
jge
sar
cli
xchg
outs
je
adc
rcl
dec
movs
pop
pop
fs
adc
hlt
sub
out
pop
scas
xchg
sti
test
icebp
sub
mov
pop
test
mov
nop
cdq
sub
xchg
cmp
lods
iret
imul
or
pop
popf
xchg
fs
pop
jb
pop
daa
js
pop
jne
cmp
scas
leave
sbb
push
cmp
dec
(bad)
(bad)
lods
mov
xchg
nop
ss
jbe
das
mov
outs
icebp
out
push
repz
mov
leave
pop
inc
jle
push
fdivr
movs
fcmovnb
jg
sbb
push
adc
jbe
pop
lods
jb
fstp
mov
pop
data16
dec
test
cwde
aam
mov
xor
sub
push
rol
adc
cs
in
int
jp
cmps
dec
add
enter
pop
fist
jne
(bad)
jmp
sbb
ds
fisubr
loope
mov
add
call
sub
je
aam
aas
mov
xchg
xchg
cwde
pop
out
dec
movs
icebp
mov
xchg
pop
cmp
jb
and
out
outs
push
xor
pop
outs
push
pop
es
or
pusha
mov
jmp
sub
xor
push
pop
jge
loopne
movs
imul
enter
in
and
xor
ja
mov
jle
in
es
cmp
pop
xchg
and
inc
pop
inc
ins
movs
pop
pop
adc
retf
xchg
inc
add
inc
pop
jecxz
fidiv
pusha
xor
pop
inc
mov
push
pop
imul
ja
sbb
sbb
test
adc
sbb
or
(bad)
xor
shl
stos
and
mov
sbb
jmp
fwait
enter
mov
mov
pushaw
stos
pop
xchg
xchg
and
add
and
xor
pop
jmp
cmp
in
pop
push
sbb
xor
(bad)
out
out
push
mov
mov
xchg
inc
mov
inc
scas
xor
scas
or
idiv
sub
mov
fs
mov
mov
adc
cmc
lahf
fbld
pushf
cmps
cmc
or
stc
nop
in
mov
jno
call
cdq
xchg
retf
xor
popf
mov
out
inc
sbb
les
arpl
and
cmps
ss
pop
sahf
scas
call
mov
fisub
mov
jno
sbb
xchg
(bad)
sbb
repz
arpl
cmp
sbb
xchg
arpl
lods
dec
jge
push
rol
pusha
loop
fsubr
and
cmp
or
push
inc
loop
sub
pusha
leave
fistp
mov
pop
cmp
into
adc
outs
in
out
xor
ss
das
push
adc
add
sbb
pusha
sub
mov
and
and
fs
call
cmc
lods
ror
mov
jle
push
and
std
out
pop
jmp
xchg
inc
mov
or
push
icebp
cs
inc
call
add
movs
mov
fisubr
or
iret
mov
inc
jmp
xor
bound
xchg
and
xor
mov
push
popf
add
bound
adc
in
jmp
fidivr
outs
adc
or
pop
sti
retf
into
fisttp
inc
inc
dec
test
lds
das
lods
adc
mov
jle
xchg
jmp
cmp
or
cmp
std
push
and
pop
mov
into
fs
call
ja
loopne
or
in
mov
ret
lods
or
cmp
mul
lods
sbb
xor
jecxz
mov
mov
cs
lea
jle
dec
(bad)
pop
dec
outs
ds
xchg
frstor
sahf
stos
and
cmps
mov
cli
fisubr
sub
pop
sbb
xchg
adc
mov
inc
xor
fcmovnu
sbb
xchg
cmp
mov
retf
sub
add
add
or
inc
mov
mov
cmp
push
pop
test
pushf
mov
in
mov
(bad)
stos
inc
iret
movs
outs
shl
jmp
xor
(bad)
cmc
adc
jle
sub
shl
ret
clc
adc
int3
mov
(bad)
scas
ins
push
adc
test
and
sub
or
aad
retf
das
out
je
sbb
push
xor
pop
aas
lods
repnz
stc
cmp
into
fcomp
and
mov
push
nop
rol
les
mov
mov
mov
ffreep
or
sbb
fist
sbb
jle
fdivr
sub
enter
rcl
lahf
jle
shl
inc
or
fdiv
xor
les
dec
(bad)
cmp
lock
mov
push
cld
enter
fsub
mov
dec
mov
cmp
or
sub
daa
outs
xchg
cdq
sti
xor
dec
push
jae
enter
jle
je
mov
push
stos
call
into
and
mov
cld
mov
inc
and
sub
pop
xchg
retf
add
rcr
out
sbb
sub
sub
mov
mov
data16
out
(bad)
xchg
dec
sbb
xchg
into
popa
and
fcomp
jg
pop
dec
pop
clc
pusha
imul
xchg
add
mov
leave
xchg
outs
in
push
pop
dec
sahf
mov
lods
or
dec
dec
xchg
pop
out
jne
dec
jecxz
(bad)
dec
and
movs
inc
push
jbe
out
clc
stc
mov
fiadd
sbb
aaa
xor
pushf
cmp
inc
retf
dec
mov
jp
sub
popf
pop
pop
dec
mov
cwde
lock
popf
adc
and
ret
sub
iret
or
aaa
add
mov
test
inc
out
mov
mov
xchg
scas
test
inc
movs
push
movs
xor
inc
jns
mov
push
in
mov
pop
adc
sbb
cld
xlat
inc
je
repz
push
add
and
gs
sub
pop
sub
clc
lock
cs
xor
test
leave
inc
iret
jle
pop
call
jnp
clc
pusha
lock
outs
inc
inc
(bad)
cmp
leave
ret
pop
sub
jmp
jl
add
cmp
(bad)
adc
ja
xor
call
jo
push
popa
pusha
mov
mov
out
out
sbb
pop
and
push
ins
bound
jo
data16
jl
push
add
int
sub
imul
out
aas
es
call
ss
mov
or
retf
adc
sbb
dec
ret
mov
cmp
push
retf
add
jge
add
sbb
fisttp
jle
push
mov
repz
push
test
xor
(bad)
leave
(bad)
std
xchg
mov
mov
mov
mov
pop
push
jl
pop
xor
pushf
mov
int
sub
jb
add
xchg
inc
adc
fidiv
and
cli
stos
jmp
das
ret
movs
push
cmps
add
sub
cmc
(bad)
cdq
mov
add
xor
mov
jmp
dec
stos
movs
aas
int
es
imul
sbb
bound
sti
dec
xchg
jl
pop
cwde
enter
int3
cmp
or
mov
(bad)
pop
enter
pop
shl
out
fistp
jge
sar
inc
mov
aad
push
lods
dec
mov
jns
add
dec
stc
and
bound
icebp
adc
aaa
scas
jmp
(bad)
das
stc
or
cmps
fidiv
push
xor
push
movs
sub
pop
cmp
stos
stos
popf
inc
dec
dec
arpl
adc
enter
mov
and
scas
in
dec
out
mov
mov
les
jp
in
dec
add
in
ror
push
pop
jbe
jns
scas
int3
dec
xor
push
stc
test
mov
sbb
mov
fld
xlat
jle
lahf
stc
repnz
push
daa
mov
cmp
push
jl
jecxz
sbb
jmp
clc
stos
mov
repz
mov
fist
xchg
stos
in
retf
fsin
mov
cmc
mov
repnz
adc
sbb
sahf
and
pop
push
arpl
dec
loop
ins
fisubr
out
push
dec
cdq
shl
and
sub
repnz
or
pop
cdq
mov
fadd
std
and
jmp
add
lahf
cmp
mov
xor
sub
dec
dec
inc
sbb
push
scas
and
xrelease
sub
test
(bad)
mov
gs
movq
lods
es
push
pusha
fsubr
leave
sub
fidivr
jge
jecxz
movs
out
mov
mov
pusha
out
mov
mov
mov
cli
loop
cli
fcmovnbe
ficom
sbb
shl
pop
sub
xlat
mov
(bad)
xchg
inc
fmul
jp
shr
bsr
mov
cmp
mov
jns
les
jle
(bad)
sbb
and
fwait
xchg
xchg
jle
fistp
in
mov
neg
add
mov
icebp
int3
mov
jo
and
push
mov
hlt
fs
int
ret
lods
mov
arpl
sbb
(bad)
jb
fs
dec
jecxz
push
or
(bad)
popa
inc
and
imul
data16
lahf
sar
hlt
sub
add
mov
mov
outs
inc
mov
pop
inc
dec
xor
ds
sahf
pop
adc
pop
fsub
ja
inc
inc
pop
in
jmp
mov
mov
sub
jecxz
loopne
aas
hlt
imul
movs
fistp
or
dec
adc
mov
sub
out
cmp
stc
mov
dec
mov
cmp
sbb
bound
lods
out
sub
mov
les
adc
shl
aad
xor
adc
hlt
mov
out
adc
push
int3
idiv
mov
(bad)
adc
inc
cmp
dec
sbb
mov
rcl
and
mul
(bad)
xchg
sbb
mov
sbb
dec
shl
sbb
(bad)
daa
cmp
(bad)
repnz
jge
outs
adc
lea
mov
leave
inc
cs
es
sub
clc
pop
bound
mov
jns
push
cs
cld
mov
pcmpeqb
xchg
and
push
mov
adc
sbb
adc
xor
loopne
arpl
mov
push
lahf
ror
jns
xchg
jge
xchg
(bad)
ror
aaa
into
(bad)
mov
in
pop
lds
cwde
test
test
mov
sbb
out
movs
or
lds
cwde
inc
je
stos
mov
clc
push
add
popf
repz
outs
sbb
fild
scas
lahf
adc
push
mov
mov
fcom
ins
adc
cwde
aam
call
xchg
imul
imul
shr
sub
xor
or
test
(bad)
(bad)
imul
fst
out
pop
xchg
pusha
mov
daa
hlt
jno
mov
mov
add
and
bound
dec
das
and
and
stc
idiv
pushf
mov
jg
push
shl
inc
cmp
xor
xor
xchg
inc
(bad)
dec
out
adc
dec
push
gs
icebp
std
mov
xor
in
enter
outs
imul
dec
int
mov
xchg
dec
test
inc
ja
push
push
mov
and
pop
push
fs
aaa
dec
adc
jnp
pop
push
xor
xor
cmc
rol
int3
into
aad
dec
jno
out
mov
fdivrp
stos
bswap
jae
or
adc
cmp
jae
inc
mov
test
das
lods
cld
in
adc
cmps
sbb
(bad)
mov
sbb
mov
das
mov
lods
fisttp
and
loope
sub
sub
ret
ss
and
dec
add
inc
mov
frstor
inc
popa
daa
cmp
and
pop
into
mov
or
das
add
inc
sub
(bad)
dec
sub
fwait
pop
mov
(bad)
js
in
fiadd
xor
imul
push
(bad)
mov
scas
cmps
jg
pop
inc
cdq
(bad)
mov
xchg
pop
cmp
pop
sub
loopne
push
jns
jnp
fisttp
inc
add
push
sbb
inc
adc
jae
outs
sub
jge
sbb
mov
inc
in
jno
pop
push
ins
inc
sub
sub
inc
adc
dec
ja
imul
sbb
mov
and
fwait
loope
mov
push
sub
test
aad
jge
mov
or
xchg
cmp
pop
fisub
or
ror
cli
dec
mov
or
bound
push
aas
(bad)
mov
sub
mov
cmp
sub
in
imul
ror
xor
pop
js
inc
stc
jns
lock
pop
lea
cli
pop
cmps
(bad)
out
aad
mov
pop
addr16
mov
cmp
(bad)
(bad)
icebp
jmp
call
xor
mov
bound
ret
neg
pushf
ret
jmp
or
fbld
adc
(bad)
mov
je
lods
inc
ret
push
push
fcomp
mov
jnp
cmp
dec
xchg
retf
cmp
or
lods
cmc
push
lahf
inc
or
inc
xlat
ins
mov
cmp
pop
push
rcl
cld
sahf
cmps
and
push
jbe
call
popa
mov
mov
mov
mov
jp
clc
push
ficomp
push
pop
movs
push
outs
repz
add
mov
out
mov
js
outs
dec
dec
arpl
test
mov
je
xor
add
ins
div
call
dec
pushf
lock
in
(bad)
mov
dec
push
xor
inc
inc
out
in
pushf
push
rol
pushf
jle
outs
or
jecxz
imul
dec
scas
and
retf
inc
mov
sbb
push
rcl
sbb
cmp
data16
stos
xchg
dec
call
in
ret
or
(bad)
jo
sbb
fwait
ret
ja
jnp
xor
outs
outs
in
retf
cmps
retf
test
mov
pop
adc
retf
xor
cwde
dec
in
ins
(bad)
test
les
push
ds
inc
mov
sti
fdiv
inc
cmc
jge
push
clc
loope
mov
sub
inc
cld
sub
pop
jnp
call
xor
xchg
dec
mov
push
dec
out
dec
shr
pop
mov
or
or
mov
xchg
adc
add
std
cdq
bound
cdq
scas
in
in
das
fcomp
pop
push
xor
fwait
adc
mov
xchg
lea
aam
popf
test
lock
dec
xchg
sbb
cwde
test
ret
das
test
pop
push
popf
push
jmp
loopne
or
pop
test
test
(bad)
mov
add
fdiv
jg
mov
pop
mov
into
xchg
in
push
out
test
inc
lea
jl
or
or
ds
mov
add
movs
mov
fisttp
xchg
and
sub
push
icebp
repnz
adc
ror
das
clc
aaa
or
aad
sub
push
movs
(bad)
xchg
sub
jbe
fldcw
sbb
pop
xor
and
dec
movs
scas
mov
jno
cmc
inc
sbb
fcompp
jnp
cmps
inc
jbe
push
xchg
sbb
jnp
cmp
adc
stos
and
and
loop
fsub
xchg
cmps
mov
cmps
xor
(bad)
aaa
sar
mov
out
loope
dec
stos
ins
dec
mov
sub
dec
add
jb
cld
(bad)
adc
pop
stc
dec
fcomp
in
add
add
adc
jno
mov
mov
xor
mov
sub
leave
stos
xchg
hlt
mov
sti
mov
pop
jns
fsubr
and
sti
xor
cmp
popf
mov
lods
inc
cmp
popf
inc
test
adc
xor
imul
(bad)
xor
jecxz
sbb
js
xor
add
mov
dec
jmp
inc
not
mov
sbb
xchg
aam
jne
xor
sar
cmps
mov
in
mov
ins
cld
push
ret
in
loop
lock
test
mov
out
and
xchg
and
sbb
lods
add
in
lods
enter
ds
and
mov
xchg
mov
nop
push
add
outs
in
aas
mov
cdq
and
js
dec
ret
aas
retf
test
xchg
add
sub
jmp
lods
ss
fsubp
popf
repz
inc
outs
in
sti
inc
jle
es
arpl
imul
mov
shr
sub
mov
add
mov
dec
inc
stos
js
add
pop
loope
sub
jp
pusha
jge
push
test
mov
call
add
inc
inc
jnp
mov
xor
in
mov
scas
mov
xchg
(bad)
repnz
xchg
shl
dec
repz
mov
in
adc
add
cdq
inc
xlat
stos
js
cdq
repz
sub
pop
outs
mov
pop
aad
and
sbb
add
js
xchg
and
nop
xor
fist
adc
ins
mov
xor
lea
cmp
loopne
or
outs
push
adc
xor
pop
retf
mov
push
inc
add
mov
xchg
cdq
les
cmp
out
int3
mov
mov
jmp
cmp
inc
push
clc
mov
adc
jp
retf
push
(bad)
mov
nop
sbb
pop
sbb
xchg
pop
loopne
movs
jno
aad
lea
push
stos
or
es
push
push
aaa
inc
cs
push
jmp
test
pusha
jb
xlat
cmp
sbb
xchg
mov
jmp
cmp
cmp
mov
(bad)
mov
inc
shl
dec
popf
test
ror
out
push
push
sbb
bound
xor
ficomp
pop
ins
scas
fdiv
push
and
jbe
mov
xlat
enter
mov
lea
xlat
ja
lea
jno
loope
call
mov
addr16
dec
dec
in
jp
push
lods
jb
adc
aad
dec
push
jne
popa
inc
sbb
pop
adc
je
pop
imul
in
and
mov
popf
dec
mov
jge
test
xor
mov
push
cwde
in
call
inc
outs
add
dec
xor
outs
retf
cmp
mov
add
mov
mov
retf
and
in
sbb
fldenv
imul
les
push
fistp
fcomp
stos
push
mov
mov
mov
fnstsw
movs
sub
stc
dec
gs
loop
mov
mov
clc
mov
lahf
fwait
pop
fnstsw
mov
and
in
arpl
pusha
jmp
push
xchg
jne
jns
je
ror
xchg
and
dec
rcl
retf
gs
scas
push
das
mov
gs
cmp
jne
neg
jg
add
ret
jno
adc
mov
mov
jns
out
adc
shr
ret
sub
lea
retf
sub
dec
push
jns
mov
lods
into
(bad)
dec
jmp
sbb
mul
adc
dec
dec
mov
xor
push
push
adc
cld
adc
mov
cmp
mov
mov
fimul
add
dec
and
data16
scas
jmp
mov
jns
lock
pop
(bad)
cli
out
call
xchg
lea
dec
sub
jge
call
add
aaa
and
mov
cmp
push
and
ret
mov
mov
in
into
mov
les
and
mov
(bad)
(bad)
cmps
add
cmp
ss
jbe
retf
jnp
lock
jae
retf
in
sub
out
dec
mov
fnstenv
and
retf
retf
cwde
and
dec
pop
fisttp
lahf
push
lea
sbb
push
cmp
cmp
adc
mov
xchg
and
mov
jge
mov
push
pop
retf
cmp
adc
and
cmp
ret
or
es
lods
xlat
(bad)
into
pop
data16
movs
xchg
adc
xor
out
fs
shl
mov
iret
into
cmp
dec
sbb
cmp
jno
mov
dec
mov
ja
in
(bad)
(bad)
out
sub
call
out
inc
mov
scas
in
push
add
jg
fbld
jmp
imul
jge
inc
mov
and
xchg
aam
sub
lods
mov
dec
push
xor
addr16
mov
call
jmp
sahf
xor
dec
inc
test
les
and
or
inc
sub
nop
or
pop
mov
mov
jmp
pop
ins
adc
or
dec
movs
push
pop
mov
int
pop
cmc
fidivr
xor
and
movs
pop
or
loope
sub
and
sub
xlat
sbb
cmp
cmp
pop
mov
(bad)
test
mov
ds
mov
sbb
push
pop
jno
int
add
mov
pop
and
ret
pop
cs
xor
pop
(bad)
pop
icebp
jg
mov
pusha
pushf
adc
repz
lahf
mov
dec
ja
dec
pop
jle
inc
xor
es
pop
mov
fisubr
jp
jb
das
xchg
addr16
adc
fldcw
xchg
push
hlt
ins
jp
ds
pop
mov
sbb
or
pop
mul
and
imul
push
sub
movs
push
sub
lahf
int3
test
xor
sbb
sub
mov
sbb
inc
outs
mov
out
adc
(bad)
inc
jmp
movs
pop
jge
or
ret
es
push
xor
ja
lds
les
retf
sub
sbb
jno
xchg
cmps
fild
out
xchg
aaa
into
enter
mov
add
inc
mov
shl
inc
pop
mov
into
out
sbb
xchg
fsubrp
rol
inc
out
mov
or
lods
imul
sub
mov
adc
mov
sub
mov
cld
and
clc
scas
ds
sbb
xchg
test
jmp
ins
shr
cmps
cmps
cmps
ins
add
jle
cmps
int3
test
icebp
or
gs
lock
dec
mov
cmp
repz
mov
out
aad
retf
mov
and
stos
mov
setns
mov
std
add
adc
mov
jge
rol
push
xchg
jmp
jecxz
out
loopne
cmps
sbb
mov
xchg
fwait
or
cmp
or
les
adc
inc
mov
(bad)
mov
es
test
ret
mov
jae
fisub
push
ret
into
xchg
nop
jns
test
and
js
push
dec
mov
jecxz
mov
pop
nop
mov
lock
sbb
inc
jg
cwde
(bad)
xor
cwde
xchg
mov
dec
mov
jecxz
push
sbb
dec
inc
into
in
pop
sub
or
jmp
cwde
add
sub
inc
ss
jnp
ins
cld
lods
or
stos
inc
test
sub
hlt
push
ja
sub
in
out
cmp
jle
jg
jno
test
ret
in
inc
iret
les
xchg
sar
pop
xor
lahf
dec
daa
xor
popf
addr16
mov
pop
imul
cdq
(bad)
cmp
ins
loope
outs
aam
xchg
stos
shl
inc
mov
(bad)
mov
imul
mov
or
test
test
xor
test
std
mov
adc
(bad)
in
inc
cdq
pop
bound
scas
int
in
xchg
lods
int
xor
pop
ins
stos
jmp
dec
mov
leave
(bad)
in
sbb
cs
adc
xchg
jmp
dec
mov
cmp
and
push
(bad)
push
adc
add
mov
xchg
hlt
idiv
fwait
adc
xchg
xchg
xchg
jb
sub
adc
cmps
jge
iret
lock
in
push
out
dec
inc
ja
and
mov
pop
int3
cmp
inc
push
loop
pusha
xchg
mov
jo
lea
mov
cs
adc
mov
sub
jg
or
(bad)
fst
mov
leave
or
jmp
push
sub
enter
out
push
data16
jl
push
inc
(bad)
xlat
icebp
cdq
test
div
sar
pusha
(bad)
push
(bad)
fcom
aam
dec
push
leave
fwait
adc
dec
dec
int3
mov
iret
(bad)
in
add
mov
cmps
sub
mov
ins
stc
sbb
sti
mov
icebp
imul
pop
and
and
imul
aaa
mov
dec
bound
movs
lahf
and
jecxz
dec
xchg
ret
test
cmp
repz
iret
(bad)
mov
in
mov
jmp
arpl
push
jbe
or
(bad)
cmc
cmp
xor
sub
xor
iret
(bad)
or
mov
iret
add
xor
retf
cdq
(bad)
fcomp
adc
push
xlat
cmp
xor
lods
cmp
popa
jmp
sbb
mul
lahf
mov
sti
mov
retf
addr16
stos
fadd
pop
and
mov
arpl
dec
stos
xchg
jecxz
(bad)
pop
out
aam
mov
ror
mov
je
or
push
leave
rol
push
(bad)
pop
out
in
test
dec
movs
loop
or
(bad)
fs
shl
fsub
xor
sbb
dec
in
and
sub
in
xchg
in
mov
dec
mul
pop
in
xchg
push
xchg
xor
push
scas
mov
mov
popf
jle
stc
stos
mov
sti
jp
mov
mov
retf
fsub
out
les
pop
stc
enter
mov
fldcw
cs
fs
sbb
cs
jnp
add
mov
xor
sar
ins
mov
aam
inc
or
nop
lock
cli
movs
sbb
lds
mov
in
bound
jo
stos
fwait
icebp
cmp
cmovae
ret
aam
leave
mov
aas
loopne
shr
(bad)
out
ror
jp
mov
inc
in
std
shr
or
and
mov
cld
stos
cmp
outs
jge
loop
cmc
cmp
xor
in
jo
inc
call
test
lds
pop
cs
cmps
dec
and
add
dec
imul
mov
mov
scas
stc
push
mov
fdivr
jg
dec
into
inc
inc
push
(bad)
aas
xor
and
std
push
je
fcomip
cmp
cmps
jbe
jg
adc
cmp
fbld
sub
dec
inc
scas
(bad)
mov
rcl
sub
sub
iret
mov
(bad)
dec
popa
pop
(bad)
and
dec
repnz
test
sbb
and
je
mov
out
je
imul
clc
cmps
pop
hlt
bound
ret
dec
pushf
push
enter
(bad)
jmp
cmp
xchg
or
test
jmp
ss
pop
add
add
mov
inc
aam
icebp
leave
sbb
inc
xor
ins
add
shl
hlt
in
loop
je
sahf
(bad)
fcom
(bad)
pushw
or
pop
pop
push
jns
pop
sub
push
sub
aad
cmp
fwait
clc
mov
add
int3
jno
and
cmc
sar
lods
sub
cmp
hlt
push
ror
jbe
nop
retf
sub
daa
(bad)
es
iret
adc
mov
test
add
sub
mov
cmp
jmp
mov
dec
push
dec
push
scas
movs
jo
aad
icebp
adc
or
xlat
(bad)
neg
call
adc
in
(bad)
mov
inc
adc
ins
sub
mov
dec
pop
outs
mov
sti
sahf
and
adc
dec
sbb
push
mov
sub
mov
xor
clc
sbb
mov
in
mov
xor
mov
or
push
push
inc
mov
jnp
arpl
xchg
(bad)
retf
push
outs
adc
int3
psubsb
std
cmp
pop
jbe
in
xchg
outs
rol
push
and
mov
fmulp
(bad)
int3
std
jg
and
out
arpl
xchg
or
mov
inc
je
mov
xchg
sbb
loopne
test
cmps
dec
in
cli
icebp
pop
out
or
fadd
xor
mov
repnz
shl
sbb
or
out
test
scas
pop
dec
sub
movs
and
sbb
mov
cli
loopne
mov
jns
mov
cld
inc
add
adc
je
int3
test
and
pop
sub
push
pop
aam
out
mov
ret
sar
push
mov
sbb
fdiv
dec
pop
inc
pop
rol
aaa
not
outs
in
(bad)
push
gs
jnp
(bad)
push
xchg
cmps
xchg
xchg
xlat
inc
aad
sbb
pop
repnz
bound
lea
test
and
jmp
and
ror
cmp
adc
mov
in
cmp
(bad)
outs
xor
and
xchg
arpl
push
in
rcr
or
imul
rcl
cmp
jmp
dec
int
push
in
mov
jecxz
into
mov
sbb
mov
ret
inc
pop
xchg
or
xchg
push
clc
out
mov
cli
mov
sub
pop
shl
stos
jns
cmp
push
and
into
jnp
sbb
inc
mov
mov
shl
test
pushf
iret
adc
jmp
ins
pushf
sbb
addr16
sbb
push
js
ret
popa
pop
(bad)
mov
jp
loop
mov
sbb
cmp
(bad)
dec
or
pop
jbe
call
cmp
daa
xor
fadd
aaa
stc
les
lea
fidivr
and
cld
outs
cwde
pop
add
inc
cmps
mov
enter
cs
sahf
inc
jbe
cdq
movs
imul
push
xor
gs
loope
mov
clc
inc
cdq
jns
cmp
xor
sar
ror
jmp
rcl
sbb
fdivr
nop
pop
imul
jecxz
leave
mov
inc
in
fild
mov
ss
in
dec
out
shr
xchg
or
data16
sub
leave
(bad)
push
mov
iret
iret
jb
jmp
xchg
imul
mov
ficom
data16
xor
mov
xchg
clc
dec
loope
adc
mov
xor
cmps
(bad)
mov
xor
cli
fwait
icebp
mov
sub
ret
dec
cwde
into
test
jl
sub
ds
sub
daa
dec
push
mov
add
sbb
mov
or
jmp
xor
add
(bad)
sub
cmp
gs
aad
or
mov
lods
jbe
xchg
pop
jnp
sbb
ss
xchg
shl
sub
pop
add
jge
aad
cli
pop
mov
movs
dec
mov
inc
adc
loop
inc
adc
scas
pushf
es
push
(bad)
std
xor
(bad)
movs
cmps
push
gs
xchg
enterw
add
cmp
mov
lea
sbb
lods
loopne
pushf
adc
lods
or
mov
xor
test
push
adc
lods
pop
test
enter
sbb
fs
pop
dec
aad
xchg
(bad)
stos
es
into
mov
and
cmc
popf
addr16
mov
mov
adc
push
dec
pop
lea
add
push
mov
outs
das
or
xor
xchg
int
cmp
idiv
push
call
mov
icebp
dec
mov
cmp
imul
xchg
push
xchg
out
dec
arpl
into
call
pop
and
inc
dec
(bad)
cli
retf
out
call
push
ficom
sbb
jae
arpl
sbb
(bad)
mov
push
mov
ftst
mov
lahf
pop
push
pop
xchg
dec
dec
mov
(bad)
mov
pop
cdq
inc
shl
cld
sub
movs
xchg
mov
int
call
arpl
mov
or
les
sub
out
les
int3
adc
push
mov
aaa
dec
push
ja
ins
rol
add
cmps
push
aas
imul
dec
sbb
xor
xchg
push
call
and
mov
dec
dec
pop
(bad)
xlat
idiv
fcmovu
push
idiv
dec
lock
lds
mov
test
ja
into
lods
ret
in
test
mov
sub
sahf
cmps
sti
ja
clc
mov
rcl
fstp
dec
ins
push
cwde
cmp
repz
(bad)
fwait
push
push
cmp
enter
into
sbb
(bad)
pop
cmp
xchg
inc
inc
je
cmc
out
adc
imul
jne
jbe
fld
into
pop
adc
or
adc
je
or
addr16
(bad)
fldcw
lds
inc
int3
pusha
test
(bad)
dec
xchg
popa
inc
jbe
retf
inc
xchg
cwde
test
pop
lea
cmp
scas
fadd
inc
add
push
mov
mov
scas
xchg
retf
pusha
outs
xor
shr
cdq
sbb
int3
nop
jle
cli
cmps
inc
clc
cmps
sar
xor
sbb
sbb
cmps
repz
push
or
mov
xor
ror
jg
push
fnstsw
or
mov
test
stos
sbb
stos
sbb
cmp
push
pop
dec
(bad)
sub
gs
inc
imul
and
add
cld
addr16
das
mov
ret
push
imul
jge
retf
fld
mov
mov
pop
mov
das
fstp
inc
mov
mov
mov
sti
sub
sub
and
cmp
pusha
inc
adc
push
pop
adc
xor
addr16
jg
or
cmc
dec
in
mov
ins
cwde
mov
jb
jmp
cs
rol
cmps
movs
push
xchg
xor
repnz
sbb
xor
jo
adc
push
ret
je
cmp
retf
fstp
jg
adc
out
test
xchg
adc
das
in
nop
pop
jge
sbb
ror
or
adc
dec
lods
call
js
dec
in
jecxz
xchg
leave
add
mov
loope
imul
nop
xor
pusha
mov
push
mov
cmp
xor
cdq
int3
test
mov
add
cli
push
fisub
rep
test
rol
mov
sbb
mul
add
popa
imul
dec
lods
xchg
dec
jne
cwde
xchg
ss
fmul
jg
das
jle
pusha
lods
mov
fsubr
mov
movs
sub
idiv
pop
arpl
outs
fwait
out
xor
push
inc
and
out
mov
lahf
in
imul
xchg
repz
loop
enter
and
sub
adc
xchg
jo
push
ja
push
(bad)
jmp
out
inc
xor
aaa
shr
imul
jo
sub
sbb
leave
pop
das
int3
jbe
dec
cmp
xor
shl
jae
sar
pop
xor
jae
mov
fadd
out
or
jl
add
cmc
pop
cmc
push
jbe
or
movs
loop
test
icebp
ror
push
jae
call
inc
sbb
stc
add
mov
movs
repnz
add
dec
ficomp
and
or
adc
push
jmp
sub
mov
cmp
icebp
pop
loopne
or
xor
cmp
push
movs
jmp
push
or
sbb
inc
ss
retf
and
es
xchg
stc
pusha
call
xchg
stos
nop
out
cmp
stos
mov
rcr
neg
daa
mov
or
out
mov
clc
cmp
and
sub
test
mov
icebp
sar
ds
xor
cmps
cmp
sub
out
test
add
mov
xchg
or
in
jns
test
repnz
cmp
xchg
inc
je
sbb
dec
nop
cmps
push
push
push
cdq
mov
mov
pop
aam
sbb
jno
jecxz
ret
xor
jno
jle
rol
fisttp
pop
sti
push
xchg
call
(bad)
lahf
dec
mov
sub
pop
adc
dec
shr
mov
xor
inc
mov
xchg
mov
movs
inc
add
arpl
lods
mov
in
jl
data16
push
popa
sub
cmp
ror
stos
mov
das
mov
inc
mov
fisttp
cmc
leave
sub
cmp
mov
sbb
push
mov
(bad)
sbb
jb
in
ret
lock
sub
sub
popf
and
jp
rol
jg
fisub
jbe
fisttp
xor
retf
push
pop
mov
fnstenv
jp
retf
gs
add
call
mov
(bad)
dec
in
cmp
sub
je
loopne
jb
pop
add
cmps
push
jl
int
data16
add
cdq
(bad)
je
bound
push
mov
cmp
mul
imul
int
push
xor
or
int3
mov
xchg
scas
daa
xor
loop
lea
call
push
mov
jmp
(bad)
(bad)
jb
shr
fcom
fisubr
repz
sub
mov
jg
repnz
icebp
fs
fmul
pop
retf
mov
sbb
push
repz
ss
ins
or
inc
sbb
sub
dec
sbb
mov
add
pop
sbb
in
jo
adc
pop
or
inc
in
cdq
scas
dec
retf
inc
(bad)
cld
inc
in
cmp
mov
test
inc
sub
cmc
sub
cs
arpl
xchg
jae
ret
lods
mov
hlt
fcom
and
jg
cmp
pop
inc
lods
sahf
xchg
and
and
xor
and
sub
mov
stc
push
pusha
jmp
jge
pop
jno
push
xor
jns
(bad)
jl
xchg
int
arpl
mov
and
scas
mov
jecxz
aam
and
stos
(bad)
push
fsub
fs
inc
sti
mov
mov
mov
les
sbb
test
push
cli
xor
out
sub
cmp
mov
inc
cs
dec
loope
pop
pop
push
and
enter
jg
adc
cmps
fisubr
adc
lds
jmp
pop
imul
fld
aad
cli
mov
in
test
adc
call
mov
cli
retf
push
enter
push
jae
mov
(bad)
xchg
ret
fadd
add
push
jae
scas
cmp
mov
leave
mov
cdq
xchg
and
std
repz
lock
dec
out
int3
xor
movs
inc
xor
(bad)
fadd
dec
adc
push
jns
(bad)
jne
pop
dec
sub
xor
adc
push
mov
(bad)
repz
mov
jmp
loopne
aad
lods
inc
sbb
push
retf
cwde
dec
push
or
mov
jne
inc
xor
das
ret
enter
cmp
mov
and
int
mov
add
mov
and
mov
scas
(bad)
std
sbb
sbb
aad
jmp
jmp
daa
ja
fdecstp
pop
cld
out
loop
inc
or
and
popf
scas
xchg
xlat
inc
sub
inc
scas
adc
shr
push
push
or
shl
mov
add
lds
or
sti
rcr
out
in
mov
add
in
or
mov
aas
cmps
mov
jno
mov
cmp
pop
mov
add
or
mov
test
sar
add
pop
stc
outs
data16
xchg
arpl
stos
add
mov
inc
mov
mov
mov
dec
lods
movs
pusha
xchg
xchg
sbb
enter
repnz
dec
adc
jge
hlt
enter
push
xchg
add
mov
xor
mov
(bad)
sbb
scas
lods
arpl
add
xor
pop
das
cmp
dec
or
mov
arpl
jns
jl
mov
xchg
inc
popf
fld
adc
(bad)
xor
cmp
inc
lods
in
mov
xchg
jne
loopne
mov
cmps
mul
stos
jmp
sahf
out
fmul
add
jmp
push
scas
outs
movs
jecxz
pop
jl
xchg
dec
adc
shr
shl
ja
adc
test
rcr
sahf
ficom
xchg
and
jp
pop
push
cwde
sbb
shr
pop
daa
outs
ficom
retf
ins
sub
imul
movs
stc
cmp
movs
pushf
jecxz
test
nop
rcl
cmp
test
je
sub
jmp
and
test
test
ja
(bad)
cdq
test
mov
push
xchg
and
sbb
and
fistp
pop
aam
sbb
(bad)
pop
mov
pop
ins
jns
je
setno
les
cmps
imul
mov
xor
addr16
mov
pop
xchg
mov
push
lea
pop
fidiv
mov
push
mov
or
push
xlat
pop
shl
clc
(bad)
enter
test
neg
and
idiv
sbb
cmp
in
sub
mov
aaa
xor
mov
jmp
and
aam
ins
push
mov
icebp
scas
enter
cmps
sub
int3
xchg
aaa
aaa
add
inc
dec
aad
mov
lods
sbb
add
fstp
aas
loope
clc
dec
rcr
xor
jmp
dec
shl
sub
call
adc
out
jns
mov
xchg
jge
in
cdq
and
jns
gs
clts
sub
jnp
sbb
or
stos
loop
cmc
cdq
es
es
adc
scas
fistp
mov
jno
sub
icebp
in
mov
fild
cmp
dec
cmp
js
sub
cld
push
xchg
mov
xlat
dec
repz
(bad)
ds
sub
push
(bad)
ja
dec
mov
xchg
pop
xchg
add
push
fimul
mov
mov
mov
loop
cmp
push
enter
cmp
push
stc
xchg
or
ror
scas
adc
repnz
xchg
dec
inc
test
jp
rol
bound
call
out
mov
cmps
and
or
or
xchg
add
pop
fadd
or
cmp
fdiv
out
pop
inc
push
ds
in
jge
jl
lods
test
cs
dec
sti
leave
ins
or
or
aam
(bad)
div
mov
icebp
es
jns
(bad)
push
in
or
adc
(bad)
fdiv
xlat
cld
mov
test
pop
movs
das
cmp
dec
cmp
jb
push
cmp
retf
inc
sbb
mov
pushf
sbb
dec
ins
addr16
ds
add
or
dec
test
push
sub
cmps
fcom
push
push
mov
inc
xor
ja
loope
dec
xchg
mov
daa
cmp
xor
hlt
aad
lahf
inc
dec
mov
imul
pop
mov
fiadd
cli
sbb
sub
push
movs
scas
push
jmp
popf
sub
into
cmp
mov
fwait
sbb
inc
fs
adc
mov
dec
xor
shl
jmp
arpl
pushf
fbstp
xchg
call
ja
xchg
mov
in
inc
jne
push
inc
mov
dec
mov
sbb
das
xor
ret
in
repnz
movs
int3
sbb
fcom
(bad)
push
mov
leave
mov
xchg
fucomp
pop
or
call
repnz
push
int3
fild
(bad)
hlt
test
dec
pop
fwait
cmp
fwait
(bad)
mov
add
mov
in
fild
jo
sub
cmp
and
pop
dec
sbb
ins
push
(bad)
scas
and
dec
xor
pushf
xlat
(bad)
cmp
cli
cmps
stos
mov
xor
icebp
nop
mov
cmp
fwait
call
mov
loopne
int3
add
mov
xchg
xor
cmp
mov
sub
lods
scas
cmps
cmps
arpl
in
add
movs
test
pop
daa
add
stos
add
mov
cmp
hlt
xchg
ins
test
(bad)
xchg
out
cmp
cs
mov
pop
rcl
outs
dec
jbe
les
retf
cmp
cmps
test
jo
dec
push
mov
loop
out
loope
xchg
mov
jb
fdiv
push
jns
or
(bad)
cs
fstp
scas
and
mov
dec
rcr
pop
(bad)
addr16
push
outs
adc
push
dec
push
stos
dec
cmps
adc
xchg
xor
push
xchg
int
stos
jmp
cld
nop
std
test
jmp
xchg
inc
cli
xor
mov
push
in
fisubr
inc
fmul
dec
push
int
(bad)
shl
out
dec
sub
ss
loope
out
push
mov
lock
inc
mov
clc
adc
sub
mov
jge
lea
adc
lahf
add
mov
mov
xor
fs
push
lahf
shr
(bad)
imul
sbb
dec
jmp
ins
sbb
mov
movs
and
cmp
mov
mov
mov
push
and
xchg
push
jno
jmp
adc
fwait
mov
sbb
bound
pop
loopne
leave
cmp
mov
dec
jnp
lds
(bad)
mov
inc
jb
inc
mov
lock
or
push
xor
inc
dec
inc
shl
xchg
rcr
ret
loopne
xchg
or
push
push
xchg
sub
mov
xchg
or
arpl
adc
cmp
adc
cmc
div
es
gs
test
fisub
stos
jne
std
mov
sbb
popa
push
pop
or
ins
sub
jb
mov
mov
xor
push
imul
(bad)
aas
test
movs
dec
add
mov
push
scas
jae
add
in
mov
fmul
inc
add
xchg
or
outs
sub
int3
lods
fisubr
(bad)
mov
int
sub
push
rcr
and
inc
xor
sbb
cmp
loop
cmp
sub
inc
and
mov
push
mov
and
retf
loope
fadd
xlat
mov
jne
test
ss
jp
xchg
sahf
jae
xchg
loopne
jb
int
push
ja
inc
mov
repz
out
int
stos
mov
push
les
mov
out
mov
jge
fcmovnb
mov
adc
aad
xchg
sti
out
scas
mov
xchg
sbb
xchg
mov
dec
shl
cmps
cmp
sbb
cmp
gs
movs
mov
and
adc
imul
inc
fst
mov
inc
(bad)
cwde
mov
inc
xor
je
push
inc
xor
movs
mov
push
mov
lock
shl
add
stc
inc
adc
mov
pushf
and
loopne
mov
sbb
hlt
mov
pop
cmc
ins
movs
dec
shl
xchg
fisttp
clc
jne
je
retf
popa
mov
xor
cmp
add
movs
jg
dec
stos
in
push
mov
mov
mov
inc
jnp
pop
xchg
cmps
fnstsw
cmp
sub
pop
jp
mov
sub
(bad)
push
jge
and
add
inc
sub
jno
jp
loope
repnz
ret
push
adc
xchg
int
in
and
test
mov
add
test
cmps
repnz
and
lock
dec
cmps
dec
inc
outs
xor
ret
adc
popa
xchg
cs
cmps
pushf
dec
repnz
std
inc
jle
test
pop
xor
inc
jae
icebp
xor
lds
xor
jo
xlat
(bad)
int3
in
pop
cmp
xchg
sub
ret
or
adc
sub
pop
test
int
sar
jle
adc
sbb
mov
or
and
inc
push
inc
mov
pusha
nop
jecxz
jo
div
call
cmps
jecxz
xor
xchg
sbb
xor
(bad)
lea
imul
cmp
sahf
mov
ror
ds
cli
fcom
and
or
(bad)
test
test
test
imul
xchg
cmp
cmp
jp
lds
and
es
jnp
add
jecxz
inc
mov
aam
cmp
push
jb
add
xchg
scas
and
add
lock
jmp
jne
xor
jg
xor
(bad)
mov
xor
cdq
pop
sahf
mov
cmc
bts
dec
mov
adc
shl
pop
sar
dec
mov
cmp
and
or
repnz
xchg
xor
ins
movs
jmp
pop
sub
mov
adc
das
cmp
add
pop
inc
adc
mov
lea
add
ja
jle
test
or
imul
ja
loopne
cli
push
mov
sub
test
sub
jb
es
jmp
mov
call
ja
clc
enter
sub
popf
or
xor
sbb
sar
push
inc
mov
into
jg
sbb
push
cmp
push
into
fucomp
inc
cmp
push
ss
add
xchg
jne
out
pop
xlat
sub
imul
push
bound
sbb
mov
pop
dec
add
rol
mov
scas
pop
aad
adc
mov
das
inc
xor
sbb
es
jno
pop
inc
push
outs
sub
xchg
addr16
xchg
cmp
ins
leave
and
jmp
test
xchg
stc
(bad)
sub
adc
shl
shr
movs
cmp
jae
dec
jmp
dec
dec
sbb
push
div
cmp
pop
jmp
mov
cwde
dec
(bad)
repnz
out
shl
clc
in
inc
xchg
cmp
sti
scas
or
stc
cmp
clc
(bad)
ins
inc
jbe
daa
aam
es
sahf
test
mov
std
add
es
div
cmp
outs
pop
or
clc
mov
push
adc
shl
into
test
fs
mov
push
jns
push
cmp
push
sbb
adc
and
in
push
cmc
pop
outs
ins
push
add
jle
mov
fs
inc
jo
sub
adc
mov
mov
lahf
(bad)
cmc
test
fisttp
jnp
mov
mov
popf
(bad)
lods
clc
cmp
lds
lea
cmp
imul
push
rcr
cdq
ja
loopne
cwde
adc
call
imul
sub
inc
retf
aam
inc
sub
out
jbe
rol
cmp
add
xor
mov
pusha
int
imul
shl
int3
test
cwde
popa
cmp
and
jg
and
sbb
mov
out
movs
or
inc
adc
jmp
js
cmp
jb
pop
sub
dec
cmps
adc
xlat
and
xchg
mov
pop
fcom
push
loop
mov
push
mov
inc
hlt
and
call
lea
inc
fild
aaa
in
inc
xor
cmps
addr16
movs
popa
ror
or
lahf
cmp
scas
pop
pop
jg
cli
mov
cdq
out
pop
xchg
(bad)
jae
cmp
stos
and
adc
sbb
ds
retf
jns
mov
sahf
sbb
fcomp
pmuludq
or
cmp
dec
add
cmovg
cmps
jbe
and
xor
push
inc
std
sbb
inc
movs
aad
ret
out
xor
mov
mov
in
xlat
dec
mov
fmul
mov
les
arpl
stos
and
iret
push
dec
jbe
arpl
lds
pop
cwde
mov
and
je
aas
pusha
inc
sar
ret
mov
push
fs
sub
rcl
cmp
pop
in
scas
test
sbb
dec
mov
jmp
jle
pop
sub
push
cmp
mov
mov
adc
out
jle
(bad)
in
lods
pop
xchg
arpl
pop
push
mov
into
fs
call
push
jge
inc
pusha
or
inc
dec
xor
icebp
pop
push
leave
sbb
mov
xchg
push
cmp
mov
gs
scas
out
outs
out
mov
xchg
pop
cli
dec
adc
movs
fbld
pop
(bad)
cmp
loopne
ror
and
mov
push
xor
aas
mov
push
arpl
shl
pop
rcl
mov
mov
movs
and
and
sub
fadd
pop
cmp
cli
mov
add
jge
xchg
mov
scas
sbb
mov
adc
movs
sub
nop
scas
lahf
cli
sub
enter
cs
inc
inc
data16
stc
fstp
mov
jae
push
adc
adc
mov
xchg
mov
xor
ror
jae
bound
mov
cmps
jne
jae
in
push
mov
ds
mov
rcr
xchg
pop
ret
(bad)
xlat
push
enter
gs
jnp
jl
mov
je
rcr
adc
jns
dec
fild
adc
push
jl
(bad)
xor
and
sar
rol
fadd
mov
or
mov
jl
mov
inc
repnz
jmp
inc
ror
sbb
and
adc
cmps
xchg
push
adc
jne
jns
inc
js
jo
inc
pusha
ins
out
push
out
and
ins
add
mov
xchg
retf
icebp
jne
mov
or
and
cli
xchg
pop
xor
jnp
cmc
mov
jo
and
sub
xchg
pop
sbb
popf
fist
int3
xor
stos
aas
push
in
pop
mov
sar
mov
mov
movs
mov
sub
stc
sar
adc
or
and
cmp
push
fcmovne
and
jle
push
fsub
sub
inc
add
and
push
cmps
sti
jle
idiv
push
aas
lds
pusha
jb
cld
cmp
jo
xor
mov
sub
pop
repz
mov
loopne
jl
mov
xchg
mov
dec
cs
shr
xor
or
bound
sub
add
fnstsw
out
es
scas
popf
ss
mov
and
lock
loope
adc
mov
add
jbe
dec
icebp
pop
outs
loope
test
xlat
add
push
clc
add
(bad)
mov
inc
outs
es
test
imul
jbe
push
push
xor
repnz
push
or
aas
dec
sbb
push
push
pop
std
retf
cmp
lock
mov
xchg
into
jb
jno
xor
in
repnz
push
xor
fld
repz
mov
jne
out
enter
cwde
xor
push
jp
mov
jne
or
pushf
out
jmp
cmp
add
push
jge
jge
mov
das
repnz
inc
jmp
into
stos
dec
(bad)
in
mov
iret
jle
data16
dec
leave
sbb
hlt
xchg
add
retf
mov
sub
dec
aaa
jb
push
bound
ror
sbb
xchg
push
mov
pop
inc
adc
int3
adc
rcl
adc
out
sbb
loope
xchg
inc
daa
mov
inc
das
test
pop
pop
pop
outs
xchg
xchg
jmp
nop
loop
inc
rcl
test
mov
(bad)
aad
dec
inc
mov
dec
xor
rol
or
jbe
pusha
jecxz
dec
iret
jl
shl
shl
add
das
mov
xchg
popf
loope
mov
cld
inc
sti
jmp
sbb
inc
bound
in
ret
in
into
fdivr
xchg
adc
push
movs
gs
stos
aaa
out
outs
inc
push
gs
shl
mov
or
cmps
movs
pushf
sub
inc
fadd
xor
mov
jbe
and
out
test
mov
pusha
cmp
pop
pop
vpunpckldq
in
xchg
sbb
sti
mov
push
mov
mov
arpl
mov
addr16
and
bnd
cmps
fcmovu
xor
call
sbb
pusha
add
cmps
data16
pop
aad
or
ror
std
rol
sub
add
call
dec
xor
jge
dec
mov
mov
or
xor
and
mov
imul
mov
add
ror
mov
div
fisubr
nop
inc
mov
out
mov
xchg
xchg
adc
ss
mov
test
or
daa
push
xchg
sub
mul
mov
pop
pop
je
inc
sbb
lea
cdq
xor
xchg
mov
lahf
cmps
loopne
mov
adc
push
mov
mov
xchg
push
or
adc
jo
xchg
cwde
lods
sbb
and
ds
xor
daa
dec
sti
test
push
mov
nop
imul
add
sbb
mov
addr16
cld
xlat
rol
cdq
push
xor
mov
leave
xchg
out
clc
pop
xchg
fimul
(bad)
sub
ret
imul
shr
xchg
cmps
jl
adc
or
sar
js
jns
mov
xchg
mov
scas
mov
xor
mov
push
jecxz
cmp
adc
dec
and
mov
daa
imul
xchg
jg
and
call
lahf
jl
fbld
inc
fmul
push
leave
and
mov
test
mov
inc
out
jmp
lods
frstor
(bad)
fidivr
fs
or
js
mov
loopne
aad
inc
movs
xchg
sbb
test
push
test
int
sbb
lods
ss
sahf
mov
pop
icebp
enter
sub
sbb
mov
shr
push
sub
jb
(bad)
xchg
out
lods
inc
lods
sbb
imul
lock
mov
jmp
adc
sbb
mov
aad
icebp
pop
jnp
imul
into
fwait
stc
or
addr16
jo
loopne
mov
adc
stc
xor
sbb
xchg
addr16
xchg
and
cdq
inc
js
sub
and
data16
lds
xor
daa
hlt
push
inc
jns
mov
stos
adc
(bad)
and
cmp
dec
mov
in
addr16
popf
and
mov
icebp
lahf
(bad)
(bad)
cmps
dec
push
mov
xchg
jg
outs
lods
fidivr
hlt
into
or
jge
jge
xchg
test
int
int
into
add
lahf
jmp
outs
inc
cli
pop
inc
mov
and
mov
call
dec
add
adc
sti
loopne
push
mov
jp
mov
in
xchg
add
xor
or
stc
add
sbb
and
out
loope
or
jae
mov
and
xchg
push
mov
xor
in
fucomi
scas
repnz
xchg
add
test
daa
ins
call
int3
cmps
lods
cmp
jbe
leave
sub
mov
xor
push
cmc
aad
call
mov
test
stos
sbb
pop
ror
into
jae
cwde
mov
outs
je
iret
jb
fadd
scas
cwde
mov
inc
push
xor
adc
mov
imul
pushf
and
jbe
test
gs
push
mov
popf
mov
rcl
pop
lahf
iret
ja
movs
ret
mov
out
mov
pop
bound
sar
pushf
adc
aas
stos
fist
lods
cmps
popa
popf
out
or
ret
or
jecxz
test
xchg
rcr
test
push
fdivr
jae
fwait
and
inc
loopne
xchg
(bad)
(bad)
cs
in
sub
in
js
rcr
not
ror
or
std
push
push
xchg
retf
mov
add
jp
jb
jl
fstcw
inc
or
in
jg
inc
cmp
mov
lock
push
jg
(bad)
lahf
mov
cli
xchg
mov
xlat
int
ss
ins
test
adc
xchg
xchg
or
jmp
and
jbe
add
mov
leave
lods
pop
inc
jmp
sub
movs
xor
lahf
jb
movs
fadd
movs
stc
mov
cmp
sbb
add
xor
push
in
cmp
test
fnstenv
fcom
andps
pop
fistp
sub
dec
cdq
inc
cwde
fs
inc
sub
jmp
push
inc
repz
fcomi
cdq
cmp
retf
ret
dec
jle
cmp
imul
inc
dec
add
leave
js
pop
call
clc
push
arpl
fcmovnu
xor
cmps
mov
lods
add
sbb
mov
retf
addr16
mov
xor
jb
jno
pop
and
(bad)
add
pop
hlt
out
mov
dec
es
add
inc
leave
xchg
aam
sub
add
enter
inc
cmps
lods
add
loope
sub
and
adc
pop
push
daa
inc
push
dec
jne
adc
leave
mov
cwde
mov
fld
(bad)
loop
movsx
pop
pop
and
inc
retf
pop
(bad)
adc
sbb
mov
sub
repnz
shl
test
(bad)
movzx
sar
push
pop
push
dec
pop
fisttp
mov
push
std
icebp
mov
stos
jne
ins
lock
mov
js
xlat
add
cs
cmps
xor
(bad)
sub
imul
xchg
xchg
ins
mov
cmp
pop
shr
(bad)
sahf
out
xor
mov
arpl
jp
data16
push
push
in
mov
int3
xor
sbb
imul
jge
mov
pop
mov
inc
mov
sbb
int
sbb
scas
ss
call
lahf
cmp
push
fistp
mov
repnz
sbb
fsubr
test
cdq
jne
mov
mov
or
push
jmp
ins
jecxz
sahf
dec
lea
fadd
mul
cld
and
xchg
mov
movs
dec
xchg
hlt
call
jmp
je
pop
xlat
fiadd
mov
daa
frstor
xor
jge
jl
push
pop
sbb
or
sti
cmp
cwde
mov
mov
mov
sbb
cmp
into
in
das
cwde
pop
cmp
cmc
(bad)
jp
int
jle
mov
mov
sub
cmc
out
mov
ss
adc
inc
add
xor
mov
scas
xor
or
dec
scas
push
sbb
js
(bad)
sbb
dec
pop
push
pop
sbb
push
aad
loop
xor
adc
xor
mov
fmul
ret
sbb
inc
retf
iret
add
sub
(bad)
div
loope
and
and
fldcw
jae
sub
je
das
push
sub
ds
xchg
fwait
mov
ret
and
jnp
mov
mov
pop
mov
mov
cmp
inc
xor
inc
mov
imul
or
or
aaa
test
clc
jmp
xchg
mov
cmp
add
mov
dec
and
scas
or
mov
dec
cmps
cmp
mov
imul
xchg
arpl
je
fdivr
(bad)
mov
das
das
nop
in
cli
aam
test
xor
mov
fild
data16
push
adc
cmp
outs
enter
mov
cmps
fcom
and
scas
cmp
mov
(bad)
mov
pop
das
pop
dec
cs
mov
mov
aad
adc
aaa
(bad)
xlat
mov
pop
dec
mov
mov
sub
pop
jmp
dec
popf
call
fnstenv
dec
adc
cmp
ftst
pop
mov
jp
xchg
cmps
je
sbb
jmp
dec
sub
shr
in
fist
cmp
mov
mov
pop
ss
shl
cmps
out
loop
test
scas
int3
fs
bound
sbb
add
outs
cmps
sbb
mov
pop
ss
jmp
mov
sbb
aad
pushf
dec
xchg
push
(bad)
clc
jl
(bad)
add
or
and
or
push
mov
mov
jne
adc
adc
gs
ins
add
pop
xor
jecxz
pop
ds
gs
lock
inc
fwait
ror
es
adc
mov
cmp
sbb
dec
sub
jnp
mov
jbe
sbb
sub
cwde
shl
or
jg
jecxz
lds
fdiv
stos
mov
xchg
mov
repnz
into
test
js
addr16
xchg
enter
fcmovnu
push
mov
xlat
in
push
dec
jle
(bad)
enter
inc
jno
in
scas
or
xchg
inc
femms
and
outs
jnp
pop
data16
lods
xchg
mov
(bad)
repnz
pop
push
sub
inc
sub
mov
rcpps
pop
mov
imul
retf
sbb
ds
adc
mov
mov
lods
es
icebp
(bad)
(bad)
imul
xchg
inc
daa
push
cdq
cmps
jl
xchg
sbb
jl
dec
fs
push
out
xor
jmp
lods
shr
xor
in
loopne
out
mov
call
cdq
(bad)
cli
fs
or
and
sub
push
sbb
addr16
stc
fs
cmc
movs
xchg
in
pop
pop
jp
jne
inc
(bad)
lods
aam
aad
out
xlat
pop
mov
lahf
sar
mov
mov
mov
(bad)
gs
ins
xor
(bad)
cs
movs
lea
test
pop
cmc
aaa
mov
inc
dec
mov
jo
push
das
in
pop
je
ret
addr16
dec
icebp
inc
fadd
sbb
jo
pminub
loopne
(bad)
jl
(bad)
sub
rcr
in
cli
bound
mov
pop
or
repnz
and
add
fwait
xor
xchg
lods
xchg
sub
push
lods
ret
aam
ins
popa
out
or
or
push
aas
lea
or
mov
(bad)
sbb
sub
ins
fisubr
jb
bnd
xchg
dec
fnstcw
hlt
cmp
sbb
loop
dec
sahf
daa
movs
sub
out
sub
out
push
bound
(bad)
das
ins
jmp
sub
into
les
xor
data16
mov
test
test
enter
psadbw
(bad)
lds
mov
jmp
jne
test
stos
sbb
xor
inc
mov
and
pop
pop
push
push
jno
(bad)
or
xchg
fnsave
jmp
xchg
test
movs
fadd
add
lock
stos
xchg
(bad)
dec
dec
or
cmp
leave
pop
or
xchg
shr
retf
aas
out
out
into
cmp
fisttp
jno
out
fdivr
mov
pop
jae
sbb
aad
arpl
jo
mov
dec
push
mov
jns
mov
cmp
jge
in
icebp
test
mov
xchg
and
or
xchg
cld
push
mov
lea
stos
iret
icebp
xchg
sbb
mov
push
(bad)
arpl
pusha
das
out
inc
sbb
inc
mov
movs
and
sub
movs
xchg
stos
inc
and
popf
dec
jmp
pop
data16
pop
and
int3
sub
dec
mov
push
and
and
fild
and
ds
pop
pop
or
sub
rcpps
and
dec
sub
push
lahf
int3
jmp
pop
jecxz
mov
in
add
and
push
cmp
lods
das
stc
mov
pop
add
loop
cmp
inc
push
inc
data16
int3
pop
cwde
and
jl
and
dec
je
les
adc
repz
add
sub
aad
ins
mov
ins
ja
push
fwait
jl
mov
ja
inc
push
aas
test
mov
ins
in
jb
dec
dec
sub
fstp
xor
nop
sahf
or
mov
push
in
push
int
ins
push
push
js
adc
xchg
mov
cmp
push
and
(bad)
clc
jbe
sbb
daa
jns
cs
scas
neg
hlt
pop
jno
loope
pop
push
gs
xor
xchg
dec
cs
ret
out
xor
mov
lea
jg
or
pop
aaa
mov
popf
push
sahf
stos
ss
and
sbb
dec
stos
movs
inc
cmps
xor
aaa
mov
xchg
xchg
jns
fld1
xchg
jbe
push
idiv
test
repnz
mov
out
cld
jl
mov
rcl
shl
jge
cmp
fsubr
call
jge
out
mov
(bad)
ds
shl
les
jne
loope
out
and
shr
sub
mov
or
neg
leave
mov
jge
pop
out
jns
dec
mov
dec
and
nop
add
or
cli
jg
stos
add
or
outs
mov
xchg
stc
inc
out
sbb
outs
icebp
js
sbb
mov
lock
ret
dec
jle
je
das
loope
jge
fldenv
cmp
jge
lods
rcl
sbb
mov
adc
(bad)
in
cmp
mov
in
xchg
cld
pop
ds
lods
mov
js
pushf
int3
mov
push
shr
in
fist
and
mov
test
cld
pop
cmp
in
sar
ret
add
sbb
mov
enter
outs
and
cmp
mov
and
add
or
adc
int3
xor
mov
mov
ret
jmp
jl
xor
das
pop
retf
stc
in
fnstenv
jl
xchg
and
sub
jnp
cmp
xchg
pop
sbb
lods
and
xchg
mov
sar
xor
in
pop
xlat
mov
popf
ret
shl
dec
data16
pushf
xchg
and
retf
cmp
pop
fucomip
push
gs
ret
pop
mov
push
fwait
pop
and
push
fs
xor
stc
mov
add
adc
in
inc
mov
ins
xchg
das
ss
std
sbb
adc
or
(bad)
fild
test
aaa
arpl
mov
std
sbb
xor
in
data16
xchg
mov
adc
jmp
adc
push
icebp
stc
mov
mov
xchg
dec
test
pop
test
dec
mov
add
dec
xor
mov
test
inc
jns
jle
dec
or
inc
rcl
ret
mov
jae
xchg
push
sahf
cmps
adc
fnsave
adc
jmp
(bad)
(bad)
test
retf
mov
aaa
inc
in
jle
inc
lds
inc
and
fistp
out
fistp
mov
or
pop
dec
clc
sbb
mov
or
dec
dec
push
arpl
ss
ss
(bad)
cmp
dec
cmps
mov
inc
push
arpl
push
xchg
fwait
xor
sbb
fbld
mov
les
out
sahf
xor
lods
ret
and
xchg
into
mov
movs
add
loope
stc
shr
inc
fxch
jmp
es
push
jnp
cwde
stos
or
rcr
out
ss
test
movs
cmp
mov
stos
or
test
and
dec
aas
cdq
stc
loope
and
pop
fs
je
mov
out
bound
ds
mov
xchg
xchg
push
cs
xchg
sub
mov
pop
cld
adc
sub
adc
sub
jno
mov
outs
mov
sbb
add
jle
je
mov
or
or
sbb
xchg
xor
xchg
pop
xchg
in
xor
sub
or
out
add
test
cmps
cmp
sub
adc
ins
scas
mov
gs
sahf
scas
fs
sbb
dec
cs
in
scas
mov
sub
retf
jp
and
data16
push
push
jge
pop
orps
xor
sbb
push
mov
rcl
rol
fs
jbe
xchg
pop
sub
retf
push
fs
mov
ror
loopne
das
enter
pop
ret
push
pusha
adc
fdivr
pop
loop
mov
push
mov
popf
movs
sub
sub
cmp
into
icebp
mov
lods
lods
push
xor
int
retf
xchg
mov
test
test
leave
cmp
fwait
pcmpgtb
or
mov
jb
push
loop
adc
in
jo
cdq
loopne
dec
mov
xor
ins
cmc
jge
cmps
aam
(bad)
dec
sub
mov
retf
out
inc
in
loope
adc
push
xchg
cmp
aas
lahf
and
in
cwde
or
int
sub
imul
xor
mul
and
adc
xchg
and
or
or
psubsb
or
movs
xor
mov
adc
int3
mov
push
or
arpl
fwait
cwde
in
mov
les
jp
hlt
jo
lods
into
jg
push
mov
js
add
pop
arpl
stos
jne
and
jg
jo
cmp
pusha
idiv
push
or
idiv
add
cmp
inc
mov
(bad)
test
or
xchg
arpl
fcmovu
out
pop
stos
push
popa
jb
(bad)
inc
jmp
cmp
out
sbb
sub
aaa
pop
out
xchg
add
xchg
aaa
jae
cli
ds
xchg
(bad)
(bad)
pop
jb
push
popa
add
mov
in
and
pop
jg
idiv
pop
rcl
bswap
add
fwait
pop
ins
cli
jno
aam
dec
addr16
outs
xchg
mov
sub
outs
sahf
add
push
(bad)
xor
fwait
outs
mov
xchg
cmp
mov
in
xor
aam
xchg
cmp
mov
jno
push
inc
and
ja
add
xor
aad
fwait
popa
add
ds
test
add
fst
xchg
xor
out
add
or
mov
or
ins
rcl
(bad)
push
mov
fwait
pop
sahf
mov
pop
xchg
push
retf
sar
or
add
shl
adc
scas
dec
push
ss
sub
and
jb
in
inc
ja
es
lea
loope
sahf
sbb
inc
loopne
or
push
mov
stos
pop
push
dec
cmc
fisttp
hlt
adc
cld
mov
cmc
mov
mov
into
out
push
xor
cmp
inc
enter
cmp
ret
jmp
add
leave
ror
jo
inc
mov
rol
lods
test
mov
xor
inc
jo
out
in
jl
ins
ss
ins
cmp
push
jne
mov
mov
jmp
ret
inc
xchg
and
mov
mov
mov
inc
xchg
imul
and
ins
jle
out
cmp
or
ds
dec
lods
xor
test
push
add
jl
cmp
xor
ins
cld
cmp
popf
pop
(bad)
ror
out
sub
mov
mov
xor
add
push
sbb
lock
jp
inc
mov
adc
and
xor
sub
add
arpl
lds
jnp
and
bound
push
retf
add
call
sahf
ins
adc
je
imul
dec
(bad)
push
sbb
pop
jp
imul
shr
ror
ds
(bad)
enter
inc
inc
(bad)
mov
into
data16
jmp
cli
pop
and
dec
jb
cmp
retf
cmps
add
pop
fwait
call
popa
test
js
cmp
push
sti
pop
pop
inc
das
fsub
dec
mov
lds
jecxz
cmc
cmp
sbb
push
sbb
aad
xor
int
dec
aad
dec
into
lods
jo
jge
push
xchg
jecxz
jecxz
inc
mov
inc
jp
inc
ins
int3
hlt
js
add
push
lods
pop
retf
(bad)
jno
iret
ds
jmp
push
mov
cmovl
(bad)
mov
sub
push
inc
(bad)
fistp
mov
sahf
mov
aad
push
or
call
es
or
mov
jne
push
aam
out
pop
adc
idiv
sbb
ds
ror
mov
sub
push
add
fsubr
loope
xor
pusha
inc
pop
xlat
sbb
loop
lods
push
and
hlt
(bad)
jns
enter
xchg
mov
in
jmp
(bad)
addr16
fwait
ins
add
pop
fistp
jmp
inc
(bad)
jg
repnz
test
push
into
movs
mov
lds
inc
push
adc
xchg
push
in
dec
das
in
adc
jne
int3
sbb
cli
inc
repz
sbb
test
and
arpl
xchg
das
push
dec
ret
pop
and
mov
fsub
popa
pop
cwde
inc
imul
mov
cmp
ror
sbb
arpl
aaa
jmp
or
push
add
fiadd
lods
xchg
add
inc
pop
cdq
jbe
fsubrp
pop
loop
test
xor
mov
sbb
xor
in
aaa
shl
jp
jge
jle
test
cmp
pop
arpl
sti
inc
and
jns
(bad)
xor
stc
and
pop
cwde
fld
pop
imul
int3
(bad)
test
test
icebp
pop
ins
pop
jg
add
pop
jg
scas
mov
add
repnz
sub
pop
push
dec
pop
push
test
leave
fst
and
cwde
cmps
jbe
mov
and
mov
xchg
loop
das
sub
push
sub
lds
sub
retf
(bad)
xor
outs
addr16
fiadd
rol
aas
call
ins
in
adc
into
jo
adc
adc
pop
xchg
jmp
rcl
popf
xor
jmp
(bad)
cld
cmp
inc
adc
xchg
aas
sahf
sti
pop
pusha
jmp
cmp
push
push
aas
pop
jnp
jmp
adc
jecxz
sbb
ret
cmp
xchg
fimul
cmp
or
mov
cdq
jp
push
sub
cdq
les
cmp
xor
test
and
jp
cmp
mul
mov
add
add
push
inc
fldenv
movs
ret
hlt
jecxz
pop
ja
add
loope
jb
adc
mov
fisubr
xor
cmp
icebp
push
call
(bad)
call
xchg
sahf
outs
jns
loopne
enter
mov
adc
das
es
add
jl
cdq
in
adc
push
jmp
mov
enter
cwde
sub
into
sbb
(bad)
(bad)
pop
adc
lock
push
xchg
inc
add
neg
mov
adc
xor
cdq
fnstcw
es
(bad)
rcr
outs
mov
ds
mov
adc
lods
or
(bad)
fidivr
fstp
add
mov
sbb
pop
adc
shl
pop
(bad)
movs
pop
sub
retf
fs
mov
in
sub
cmp
ja
dec
outs
out
lock
xchg
adc
call
mov
test
aaa
int3
push
nop
xchg
push
push
add
je
scas
mov
xor
shl
enter
add
shl
inc
jecxz
retf
test
iret
xchg
sbb
push
scas
fsubr
pop
lds
movs
call
cmps
push
int
push
xor
retf
imul
(bad)
into
aam
sbb
xchg
outs
ins
test
mov
cmp
or
or
adc
test
xchg
mov
cmp
jp
dec
pop
bound
jmp
pop
xor
mov
sub
fild
out
push
and
mov
mov
es
pop
jmp
cmp
in
cmp
out
mov
out
jne
or
lock
sbb
iret
in
adc
mov
mov
cmp
cmp
fcmovnb
ror
xor
ja
jno
stos
sub
aad
and
push
lea
(bad)
push
dec
ins
push
enter
and
in
cmc
or
adc
fmul
xor
je
lods
neg
ss
jns
add
cmp
cmps
cmc
stos
xchg
cmp
inc
jl
inc
xor
(bad)
lods
sbb
data16
pushw
hlt
xor
fisttp
(bad)
mov
popa
cmp
test
popf
cld
hlt
pop
gs
sub
ja
push
xchg
popa
sbb
ins
sbb
sub
adc
add
arpl
test
mov
cmc
shl
cmp
nop
call
push
adc
push
icebp
repnz
shr
jmp
sub
inc
sbb
retf
jmp
pop
call
mov
shl
or
out
mov
fs
xchg
mov
mov
pop
mov
cmp
mov
sub
out
pop
outs
adc
call
jle
out
adc
cwde
sbb
stos
push
rcl
dec
sar
loopne
aas
mov
fcmovu
mov
(bad)
push
adc
bound
mov
add
dec
sbb
sbb
mov
jmp
jmp
sar
mov
and
lds
arpl
stc
cmp
cld
shl
xchg
cmp
cmp
xchg
and
or
(bad)
ficom
fnstsw
or
ins
enter
dec
out
sar
rol
inc
adc
pop
xchg
cmp
push
fwait
adc
adc
scas
adc
hlt
cmps
cmp
dec
stc
stc
test
cdq
outs
pop
popf
cmps
add
or
std
and
jb
mov
jae
cmp
nop
mov
loopne
mov
aad
popf
cmp
test
movs
fcomp
adc
(bad)
xor
add
push
mov
sub
rol
test
sub
push
ret
xlat
xchg
ret
dec
std
test
and
cld
call
xchg
std
push
adc
pop
mov
mov
pop
sub
adc
and
int3
xchg
(bad)
(bad)
scas
sub
xchg
stc
jno
xchg
inc
push
or
cld
mov
aas
(bad)
outs
in
push
xchg
pop
xor
ja
cmps
out
jl
pusha
inc
(bad)
fs
(bad)
mov
and
int
popf
cmc
mul
sti
inc
shl
mov
popf
jge
jb
pop
nop
aad
xchg
ins
xor
cmp
cld
inc
cld
loop
pop
sub
lea
jl
test
or
add
pop
hlt
ins
retf
fnsave
out
jle
addr16
mov
ja
and
test
(bad)
sbb
sub
mov
(bad)
fadd
movs
push
mov
fwait
lahf
in
jp
test
add
repz
leave
mov
and
pop
sbb
adc
(bad)
jle
ds
mov
or
xor
cmp
mov
cli
dec
sbb
push
leave
shr
shl
jecxz
inc
add
movs
inc
out
mov
xchg
mov
pop
stos
icebp
pop
jle
js
mov
pop
scas
nop
in
dec
xor
sub
imul
into
dec
mov
xor
jno
mov
push
xor
mov
xor
xor
cld
jmp
movs
ja
inc
inc
push
dec
shr
loope
jne
mov
xlat
jge
mov
cdq
or
fwait
(bad)
hlt
fsubrp
hlt
out
mov
std
mov
sub
int3
cmps
xchg
jnp
xchg
jge
cs
dec
fimul
pop
dec
call
in
adc
das
sub
adc
retf
hlt
and
cmp
pop
fild
push
mov
scas
ret
pop
outs
stc
fst
repnz
in
ror
call
dec
pop
mov
push
sub
jp
popf
jmp
pop
shl
inc
xchg
cmps
xor
es
enter
lea
nop
sub
mov
mov
cli
in
in
dec
mov
in
xchg
iret
lahf
paddusb
adc
retf
scas
das
ins
nop
adc
inc
mov
or
adc
pop
test
cmp
loopne
jae
add
push
push
ret
dec
call
cmps
adc
mov
loope
push
cld
(bad)
leave
dec
inc
push
sub
add
inc
movs
pop
hlt
sub
in
sbb
sti
sub
out
push
push
out
mov
out
dec
test
and
push
call
mov
and
and
xor
jne
retf
inc
pop
sbb
clc
cld
ins
lds
aad
movs
or
lods
sbb
mov
xchg
not
inc
pop
retf
imul
ins
mov
sub
out
pop
xor
pop
aad
jg
mov
repz
pop
push
push
xor
sub
or
clc
test
xchg
jecxz
xchg
sbb
outs
or
jl
shr
mov
xchg
outs
mov
mov
inc
mov
int3
fwait
cmps
mov
xchg
dec
dec
daa
fnstenv
adc
cmp
movs
or
fistp
ja
xor
les
dec
sub
dec
push
cli
ret
ret
cmp
jle
pop
push
cmp
mov
(bad)
scas
cld
mov
call
mov
mov
or
inc
fsubr
inc
sbb
in
inc
or
cmp
xchg
jno
inc
xchg
hlt
cmp
xor
mov
xchg
adc
dec
out
iret
retf
cdq
xchg
cs
scas
jge
jle
fild
loop
jno
cmps
mov
and
xchg
dec
xor
and
inc
pop
inc
shr
pop
into
and
lods
jge
xchg
inc
pop
xchg
pop
retf
cs
test
pop
rcr
dec
jae
push
pop
inc
scas
xor
in
cdq
add
sub
adc
es
push
test
or
jp
sbb
jecxz
sbb
xlat
daa
es
js
mov
mov
adc
xchg
call
das
loop
nop
inc
call
rol
adc
(bad)
mov
mov
add
inc
daa
xor
fs
in
iret
jle
stos
in
fcomp
scas
ins
adc
(bad)
test
cmp
jge
imul
xchg
mov
sbb
loope
sbb
push
push
jp
shl
xchg
fild
rcr
loope
xchg
mov
addr16
dec
rcl
jbe
sub
jne
in
xchg
sbb
das
mov
pop
js
xchg
bound
shl
fsub
jo
sub
or
movs
xchg
mov
je
xchg
inc
scas
cs
push
shl
adc
out
(bad)
jmp
inc
call
sbb
bound
(bad)
call
or
jnp
in
ins
mov
mov
or
in
sbb
jb
mov
(bad)
and
push
xor
loope
add
dec
imul
pop
dec
mov
in
mov
test
pop
add
jno
lods
outs
lock
xlat
push
daa
sub
gs
scas
push
ds
inc
jmp
add
xchg
out
cmp
(bad)
std
push
(bad)
test
popf
mov
iret
cld
js
leave
sbb
xchg
jo
movs
ja
out
add
les
jo
stos
test
push
or
jbe
fadd
je
fdivr
xchg
or
push
jbe
call
in
(bad)
jo
push
mov
fisubr
mov
push
fisttp
stos
jbe
cmps
sahf
xchg
pop
out
mov
(bad)
lock
clc
ins
fidivr
adc
mov
call
mov
clc
call
adc
adc
dec
add
cmp
pop
lods
iret
inc
jp
mov
fst
dec
push
add
mov
push
icebp
inc
fwait
sub
push
inc
push
icebp
jno
adc
mov
push
jnp
call
pop
jg
add
rdtsc
adc
add
cdq
inc
pop
push
(bad)
adc
iret
scas
pop
push
std
cmps
stc
inc
jge
and
repnz
push
les
icebp
sub
mov
repnz
cmp
mov
jecxz
(bad)
fdiv
sub
push
mov
push
cld
or
test
pusha
xor
adc
xchg
sbb
mov
xchg
movs
cs
in
inc
cs
jl
cmp
push
xlat
cmp
mov
xor
test
inc
xor
push
jmp
xor
xchg
adc
mov
inc
cmp
clc
daa
inc
pop
fcomp
es
mov
or
add
mov
sbb
or
(bad)
or
das
and
(bad)
jp
inc
dec
enter
jne
lds
vpcmpeqb
cwde
ja
add
(bad)
jno
sahf
icebp
or
xor
lahf
add
dec
mov
adc
pslld
getsec
das
fwait
pop
and
and
call
xchg
sbb
aam
in
jns
lods
neg
inc
push
add
test
sub
mov
jno
and
add
jns
in
int
test
arpl
mov
xchg
pop
inc
fisubr
xchg
adc
mov
scas
ins
dec
mov
in
fisttp
scas
mov
xor
stos
fisub
jmp
xchg
sub
adc
mov
ins
xchg
xchg
pop
lods
test
xchg
push
pop
imul
(bad)
xchg
cmp
pop
lods
(bad)
sti
cmp
sub
sbb
test
int
dec
movs
xor
or
mov
xchg
pop
stc
bnd
mov
in
dec
clc
out
(bad)
outs
and
mov
ficom
add
movs
push
adc
mov
dec
adc
and
add
pop
neg
xchg
ret
push
es
js
cld
retf
push
ret
xchg
sbb
aam
js
imul
and
ficom
mov
adc
movs
cmps
mov
retf
lea
jge
dec
pop
xchg
xchg
ins
pushf
out
sahf
bound
adc
pop
clc
les
rol
mov
sub
outs
cmp
dec
fcom
loopne
pop
and
sar
dec
clc
jl
popa
rcr
loope
outs
addr16
xlat
shl
fidiv
jmp
adc
add
mov
push
je
imul
sub
xchg
gs
mov
inc
es
sbb
cmc
sbb
add
dec
sub
loope
movs
mov
je
int
fldenv
cmp
add
daa
and
retf
add
inc
add
sbb
cs
jne
pop
adc
adc
push
out
xor
stc
aad
xor
stos
(bad)
fldenv
out
ins
dec
mov
cmp
je
std
jecxz
lds
mov
push
(bad)
mov
arpl
adc
cwde
mov
mov
pusha
loopne
repz
mov
push
out
mov
adc
mov
and
add
mov
lods
sbb
mov
jecxz
into
mov
adc
ja
push
fwait
rcl
xchg
movs
out
cmps
push
in
js
in
ins
and
in
test
inc
add
jmp
shl
std
mov
pop
fisubr
into
mov
sbb
xchg
jb
push
mov
iret
out
bound
jno
sbb
sub
add
dec
pop
mov
push
fwait
and
push
neg
sti
mov
retf
call
es
push
jge
dec
scas
stos
cld
sub
or
inc
lods
mov
faddp
imul
cmp
and
or
mov
aaa
(bad)
mov
push
ja
fcom
push
in
jb
movs
out
sbb
fs
xor
mov
xchg
dec
push
sti
movs
pop
add
fld
push
inc
sub
stos
fimul
jo
rcr
(bad)
call
pop
out
cmp
movs
popf
xor
sbb
pusha
add
lods
(bad)
outs
arpl
retf
nop
push
mov
cmp
out
or
pop
xchg
mov
imul
and
push
cmp
push
lahf
fst
dec
iret
mov
scas
outs
jmp
sbb
xor
push
jae
adc
push
sub
or
dec
icebp
and
mov
jg
sbb
or
mov
jg
movs
mov
fsubrp
in
sub
(bad)
fdiv
mov
test
pop
sub
adc
into
xchg
mov
ins
dec
mov
inc
shr
dec
fadd
in
push
fdivp
in
pop
out
xchg
pusha
xor
mov
sub
cmps
es
cld
icebp
and
repz
push
push
mov
xor
fnstsw
data16
ins
dec
mov
push
cmp
mov
xchg
aam
(bad)
(bad)
mov
push
ds
hlt
(bad)
call
or
pusha
sbb
push
pop
sar
xchg
mov
sar
mov
call
adc
call
dec
fldenv
inc
rol
push
and
(bad)
dec
gs
data16
lods
jl
call
mov
pop
repnz
jg
ror
dec
mov
int3
das
mov
mov
out
xchg
enter
add
jle
movs
cmp
mov
(bad)
hlt
mov
data16
jbe
in
push
stos
cld
loop
and
cmp
ins
(bad)
mov
sbb
dec
fwait
in
test
out
mul
or
outs
rcr
inc
adc
popa
ret
jns
loopne
xor
jno
pop
pop
add
aam
xor
dec
jnp
sti
ficom
movs
(bad)
xor
push
retf
cmc
add
(bad)
aad
retf
cmp
inc
push
fist
cmp
out
cli
ja
mov
shl
cmps
mov
push
mov
outs
inc
pop
test
loop
or
pusha
addr16
jmp
and
jp
out
test
enter
ret
mov
das
cmp
lds
(bad)
stos
retf
fsub
mov
mov
lea
js
pop
push
loop
test
test
std
rcl
cmps
dec
jmp
call
cmps
xchg
jnp
push
xor
pop
pop
xchg
pop
ss
(bad)
nop
mov
jecxz
icebp
not
out
inc
mov
adc
mov
test
jmp
ret
lods
cld
cmp
rol
loopne
call
in
aaa
push
dec
and
dec
sbb
inc
jmp
scas
sbb
push
fimul
clc
adc
call
mov
enter
mov
(bad)
jae
into
pop
gs
cmc
add
loopne
xchg
mov
aaa
pushf
mov
adc
in
mov
pop
fs
out
adc
shr
sbb
add
sub
mov
int3
jg
sub
push
and
mov
xchg
shr
add
ss
in
mov
sub
mov
ja
imul
jb
add
dec
leave
fwait
call
xor
sti
repz
jmp
stos
add
jnp
js
mov
lods
ss
int3
scas
rol
cdq
mov
push
mov
scas
es
fucomip
mov
sub
sub
arpl
fiadd
and
in
shl
push
loop
push
js
cmp
call
hlt
stos
neg
or
(bad)
(bad)
push
cli
push
xchg
aad
push
jae
and
jno
push
enter
lods
leave
(bad)
cld
fisttp
or
and
xlat
sub
lds
das
mov
xchg
test
dec
lock
inc
jle
dec
call
push
inc
push
pop
xor
adc
movs
sub
fcmovnu
mov
xchg
shl
push
push
and
lea
shl
adc
add
mov
jmp
sub
pop
popf
cmp
int3
push
adc
mov
sar
push
iret
adc
(bad)
fstp
adc
mov
in
jb
inc
test
inc
mov
inc
pop
and
scas
pand
fcomip
dec
mov
mov
pop
adc
cli
movs
and
aaa
jp
test
in
cdq
mov
push
addr16
mov
fdivr
cld
cs
dec
bound
and
sub
pusha
ds
js
push
fwait
adc
push
popf
int
(bad)
sbb
fnstsw
push
adc
out
dec
hlt
xor
cli
cdq
mov
push
cmp
push
inc
mov
sub
call
push
lds
pop
and
ins
push
fnstsw
loopne
jnp
push
mov
inc
ins
jg
imul
xchg
push
iret
mov
jb
push
cmps
sub
xchg
jno
leave
add
inc
gs
test
inc
adc
mov
dec
sahf
dec
sub
ficom
cmp
sahf
bound
push
or
sahf
inc
mov
pop
inc
loop
loope
stos
pop
pop
push
inc
shl
bnd
int
cmovg
or
xor
cmp
xchg
dec
mov
add
test
mov
dec
push
fstp
enter
pop
push
push
into
sbb
pop
mov
ret
mov
mov
rcr
push
mov
lods
adc
fdivr
(bad)
int3
scas
scas
shr
in
push
retf
or
scas
dec
nop
lods
mov
jge
pop
xor
lahf
mov
sub
dec
div
sub
loope
scas
ss
pop
jns
xlat
daa
dec
adc
adc
adc
jmp
arpl
sti
pop
mov
xchg
xchg
rcr
imul
shl
add
mov
cmp
fsubrp
(bad)
(bad)
cld
mov
(bad)
adc
fucomp
loope
or
into
or
test
or
mov
dec
call
stos
dec
sbb
icebp
cs
test
jne
mov
mov
add
mov
mov
dec
cmp
inc
mov
jmp
neg
in
mov
movs
and
jae
pop
mov
(bad)
pop
push
and
cmp
test
sub
xor
mov
jne
cmp
repnz
rcr
gs
jns
mov
pop
lods
ja
sbb
daa
mov
sub
dec
ss
xchg
mov
jp
adc
add
mov
and
sbb
fsub
add
mov
mov
gs
iret
ror
leave
sbb
sahf
cmp
and
cmp
add
(bad)
jmp
sub
ja
sbb
shl
daa
mov
xor
add
ret
bound
repnz
cmp
or
fwait
and
lods
cmp
xor
loopne
cmpxchg
cs
or
jmp
sub
push
lahf
dec
cdq
in
mov
dec
inc
lahf
in
(bad)
sahf
loopne
inc
loope
sbb
mov
xlat
cmps
call
imul
xchg
sbb
imul
lock
jmp
mov
push
xchg
fs
cmp
push
std
dec
outs
test
ja
lods
aam
daa
fimul
mov
mov
iret
lods
cmp
cmc
pop
idiv
cdq
adc
mov
mov
fadd
out
mov
shl
retf
xchg
mov
in
jae
retf
cmps
movs
push
mov
or
adc
pop
push
mov
test
lock
pop
jg
xchg
daa
test
lods
mov
pusha
push
xchg
dec
(bad)
jmp
mov
dec
xor
stos
cmp
adc
mov
sahf
imul
mov
(bad)
mov
or
push
sbb
xchg
jp
out
(bad)
sub
sbb
and
out
adc
repnz
sbb
push
in
bnd
mov
or
jnp
inc
xchg
jno
and
call
adc
out
adc
sti
les
pop
outs
adc
push
dec
push
loopne
hlt
pushf
sub
arpl
sbb
mov
dec
cmp
jns
pop
loope
mov
clc
ds
imul
cmps
loop
sub
push
rol
mov
ins
mov
xchg
les
xor
ds
and
xchg
push
push
xchg
outs
popf
aad
mov
pop
xchg
popf
clc
loopne
loopne
pop
daa
add
nop
jo
imul
xor
ins
push
add
fsub
cmp
jne
(bad)
outs
mov
mov
aas
stos
xchg
outs
jo
aaa
adc
pop
or
xor
pop
jne
add
aam
xor
xor
jno
jecxz
cmp
and
nop
inc
push
push
les
or
xchg
and
(bad)
(bad)
leave
adc
push
mov
dec
mov
cmps
iret
inc
out
div
push
(bad)
xor
pusha
inc
mov
push
pop
outs
xchg
aam
adc
add
les
add
sbb
add
lock
les
mov
call
and
xchg
fwait
dec
push
adc
push
nop
cmp
xor
loope
in
cmp
movs
jmp
sbb
push
cmp
(bad)
push
test
int
push
aam
push
mov
loop
sub
lods
dec
setge
jl
addr16
(bad)
sbb
pop
push
xchg
sub
mov
imul
sub
xlat
mov
inc
das
push
ds
xchg
cs
jne
pop
pop
repnz
xchg
fild
imul
scas
inc
sub
je
add
mov
lds
test
aad
aaa
cwde
cmps
push
sbb
sbb
adc
int3
pop
dec
lds
out
daa
rcl
sahf
add
add
repnz
cmp
inc
outs
push
push
push
and
jnp
aam
sub
xchg
mov
rcr
rol
or
jle
pop
pop
shl
mov
pop
cdq
adc
add
pop
aas
fdivr
xchg
and
es
jbe
pop
and
xor
fiadd
out
lods
add
ss
fistp
mov
add
popf
mov
push
imul
fst
retf
shr
mov
xchg
je
pop
or
lahf
push
jns
cmps
xor
cli
push
pop
cmps
pop
dec
in
into
pushf
xor
sti
lea
jns
retf
rol
sub
sar
pusha
enter
fsubr
mov
mov
aaa
dec
loopne
loopne
sbb
jb
aad
(bad)
loope
push
cmc
pop
add
jae
fdivp
pop
sbb
mov
push
or
and
pop
ins
fst
xchg
push
pop
sub
xor
inc
(bad)
cmovno
mov
inc
mov
test
inc
sub
jne
pusha
mov
mov
ja
(bad)
adc
sbb
jge
or
mov
lock
test
mov
lock
movs
stc
inc
lds
mov
inc
lock
xlat
push
lds
bound
cmp
in
mov
inc
loope
xchg
push
cmps
or
add
jns
and
mov
js
xchg
dec
cmp
sub
ret
(bad)
and
xor
push
sub
(bad)
push
stos
add
aam
jns
in
xchg
ror
scas
inc
mov
cmp
shl
dec
scas
shr
in
sub
sahf
jae
or
add
mov
bound
xlat
in
call
add
and
mov
jns
mov
cmps
xchg
das
and
bound
setbe
mov
inc
push
(bad)
pusha
sti
outs
mov
dec
or
fnstsw
mov
(bad)
jae
jecxz
pop
pop
add
adc
hlt
and
retf
mov
or
push
shl
inc
cmp
xchg
cli
loop
ja
jne
sub
push
cli
imul
mov
inc
mov
adc
xor
mov
icebp
or
stos
cdq
movs
inc
mov
pop
jno
popf
dec
add
xchg
mov
fisub
enter
test
jmp
shr
inc
inc
(bad)
fcomp
mov
out
das
in
shl
adc
sbb
jp
sbb
or
int3
mov
ja
and
inc
test
jo
mov
push
jns
lea
pop
imul
cmp
xchg
dec
out
rol
and
mov
sub
pop
push
add
dec
repz
push
stc
add
add
sub
(bad)
nop
sbb
ds
add
xchg
iret
inc
cmp
fdivrp
cmp
dec
and
test
dec
les
mov
dec
int3
xor
mov
or
lock
push
xlat
push
xchg
sbb
jno
(bad)
jl
cli
inc
xor
adc
push
mov
cmp
call
aas
pop
popa
jge
xchg
add
loopne
ret
ret
pop
ins
add
jg
pop
push
(bad)
retf
aaa
pop
cli
cmp
bound
lahf
xchg
and
push
imul
dec
mov
ds
notrack
cmp
xchg
dec
out
inc
sub
lea
inc
jmp
sbb
push
xchg
enter
jge
push
mov
mov
mov
lea
pop
mov
enter
dec
stos
sub
sbb
mov
jno
mov
fldcw
push
mov
scas
mov
ins
ret
and
cmp
outs
inc
adc
jg
cmp
int3
or
jae
icebp
and
fwait
jmp
shr
sbb
jecxz
addr16
retf
add
xor
es
cwde
lock
cmps
xor
jae
sub
and
int3
sbb
or
cmps
mov
and
xor
ds
scas
ins
pop
lds
outs
lods
pop
push
mov
cmp
stos
push
mov
mov
adc
pop
ins
push
cld
inc
aad
xchg
xchg
aad
fld
add
and
(bad)
jmp
retf
in
(bad)
int3
xchg
stos
and
inc
push
sub
mov
xor
dec
jg
cmp
push
jne
jno
imul
jno
and
inc
push
xor
xchg
jecxz
mov
sbb
sub
(bad)
cmp
int3
std
aaa
stos
cmps
je
aam
mov
push
call
adc
or
leave
int3
fst
je
add
sti
and
jmp
fimul
rol
(bad)
add
in
jae
xchg
(bad)
data16
fistp
xor
and
adc
(bad)
xor
mov
enter
jecxz
aas
ins
cmps
lods
or
inc
repz
push
(bad)
ins
aaa
jae
jmp
aad
sub
inc
lds
mov
cmp
movs
enter
(bad)
mov
mov
mov
xchg
rol
push
dec
mov
jecxz
sar
movs
cmp
jl
(bad)
mov
pop
push
enter
sbb
bound
and
shr
dec
repz
mov
ja
jge
dec
mov
(bad)
xchg
pop
shr
lds
out
popf
jo
mov
mov
dec
xchg
mov
in
xchg
add
push
push
xchg
cmp
jnp
xchg
jo
mov
xor
and
adc
idiv
idiv
jne
test
call
test
dec
xor
mov
push
jecxz
ss
pop
pushf
xchg
out
sbb
outs
xchg
in
xlat
adc
xchg
loope
movs
sub
adc
dec
(bad)
imul
sbb
das
shr
or
mov
outs
push
popa
test
shl
int
mov
or
mov
leave
cld
xor
xlat
cmps
xchg
add
fcomp
jmp
test
lds
movs
jb
stos
imul
sub
add
lods
xor
out
(bad)
movs
dec
xchg
leave
shl
ins
sar
cmp
addr16
mov
dec
shl
push
js
push
inc
out
in
les
inc
outs
mov
or
mov
cli
jl
(bad)
sbb
pop
mov
pop
cld
scas
xchg
imul
int3
pop
loopne
mov
sahf
fiadd
cmp
pop
inc
mov
mov
hlt
jb
adc
mov
scas
mov
pop
cmps
xchg
push
test
into
nop
test
inc
gs
mov
in
xor
in
(bad)
out
cmp
(bad)
out
fld
or
inc
push
jmp
retf
pop
adc
jle
aas
cmp
or
xor
out
sti
jle
aad
push
xchg
aas
xor
sub
and
sub
js
popa
aad
retf
mov
jmp
mov
jmp
ret
cld
stos
add
adc
repnz
cmp
jge
icebp
shl
out
movs
data16
ds
(bad)
data16
mov
in
or
aam
pop
fidivr
clc
in
inc
dec
add
icebp
mov
daa
mov
mov
cdq
enter
xor
pop
push
cmc
shl
push
inc
in
pushf
jo
test
mov
and
push
lods
push
ror
fldcw
cs
shr
pop
mov
repz
fiadd
repz
cmp
stos
add
or
jae
push
mov
ins
mov
xchg
inc
push
mov
imul
and
sahf
add
cdq
or
add
mov
mov
cmp
inc
test
cmp
out
sbb
cld
enter
push
scas
scas
sti
xor
inc
aaa
adc
fwait
sub
and
mov
push
adc
icebp
sub
push
sub
data16
scas
(bad)
cmp
xlat
xchg
pop
sbb
(bad)
jle
lahf
pop
mov
xchg
rcl
adc
adc
das
add
lods
ja
jp
out
sub
out
and
jmp
dec
add
or
jle
out
sub
dec
push
dec
jne
push
movs
mov
xor
pop
fdivr
push
sbb
mov
adc
outs
cmc
shl
add
fst
mov
mov
in
std
iret
outs
int3
push
(bad)
pop
movs
fiadd
fldcw
data16
or
adc
mov
mov
in
nop
nop
push
ja
stos
mov
add
mov
dec
dec
mov
je
(bad)
movs
jne
sar
mov
or
stos
cli
lds
adc
aaa
sbb
in
jns
call
or
int3
mov
mov
jb
ja
test
pop
xor
dec
jo
popw
sub
jmp
lods
jne
lock
(bad)
push
xchg
icebp
xor
outs
ret
loopne
add
mov
std
and
add
jo
xor
shl
pop
cmp
inc
adc
mov
inc
sub
retf
add
cmp
sub
nop
movlps
xchg
adc
out
xor
cdq
inc
repz
shl
ins
xchg
test
xor
cwde
push
jb
adc
call
inc
ret
push
jns
frstor
(bad)
push
pop
ins
xor
fstp
jbe
retf
xchg
pop
add
inc
add
stos
cdq
cmps
ss
cmp
ss
sbb
in
leave
mov
out
mov
mov
mov
cld
pop
push
or
jb
cli
outs
sahf
push
or
lahf
in
daa
pop
addr16
fnsave
aad
mov
push
bnd
cmp
mov
mov
frstor
and
mov
and
nop
rcl
pop
outs
jg
pop
mov
pop
jb
(bad)
jnp
jmp
sub
icebp
(bad)
out
mov
(bad)
pop
rcl
xor
aas
fistp
xchg
push
neg
cwde
pop
(bad)
xchg
out
jb
inc
cmp
and
cli
loop
jl
mov
mov
mov
(bad)
mov
inc
inc
pop
xor
add
cmps
cmp
stos
ins
pop
popf
inc
(bad)
popf
fistp
stos
add
rcl
and
clc
fisttp
cmps
pop
jo
cmps
ss
(bad)
inc
sub
bnd
pop
repnz
shr
or
xor
rcr
and
cdq
aaa
ins
mov
ins
retf
jns
lds
mov
jnp
jecxz
lock
pop
mov
pop
iret
or
fnstenv
cdq
or
cld
dec
push
mov
or
lods
mov
inc
xlat
xor
ficomp
push
repz
or
push
xor
inc
push
in
or
jne
add
push
lea
retf
arpl
stc
xor
aaa
(bad)
cli
sar
hlt
and
fcomp
iret
mov
jae
pop
pop
enter
mov
hlt
adc
pop
syscall
cld
mov
ror
xor
fild
fucomip
sti
outs
cs
aam
test
mov
dec
out
and
mov
sbb
(bad)
jae
xchg
int
(bad)
stos
(bad)
rcr
(bad)
out
fsub
popf
icebp
sbb
jge
mov
test
movs
fwait
out
fucomi
and
push
fisttp
dec
cmp
ror
rcr
ja
add
std
or
dec
lds
and
xchg
aam
mov
mov
mov
(bad)
xlat
inc
loope
xchg
aad
sbb
shl
or
ds
ja
test
inc
test
inc
in
jmp
pop
in
pop
mov
jne
test
pop
mov
xchg
int3
add
ins
je
pusha
mov
popf
mov
sbb
push
mov
sub
movs
mov
or
pop
lea
sbb
clc
cmps
xchg
shr
icebp
sub
bound
sbb
cmc
nop
lahf
rcr
movs
scas
or
stos
aam
cmps
ficomp
cmp
lds
aam
add
stos
xchg
ja
lea
out
cmc
xchg
fwait
lea
sub
mov
(bad)
mov
inc
or
ror
jl
dec
imul
cmps
pop
add
jecxz
imul
mov
push
cmc
push
and
(bad)
ror
mov
fcom
cmp
repnz
dec
cmp
repz
je
jno
sbb
ficom
xchg
test
shl
lods
test
shr
jecxz
xchg
fwait
add
popa
es
push
push
call
mov
lods
out
mov
enter
imul
xor
pop
inc
sub
jae
test
test
js
inc
xor
push
fsub
xchg
jl
call
mov
(bad)
out
sub
cmp
iret
adc
das
jg
cmp
fwait
inc
mov
dec
xchg
arpl
fstp
movs
push
movs
inc
movs
popf
mov
mov
push
(bad)
push
aam
stc
xchg
outs
cwde
xchg
(bad)
fucom
add
jae
add
scas
push
push
lods
aaa
mov
push
dec
xchg
ins
shl
jp
dec
(bad)
imul
scas
ficomp
pop
ins
loope
retf
cld
xchg
lock
mov
push
scas
inc
mov
imul
popf
sub
sbb
or
mov
out
outs
addr16
inc
icebp
movs
mov
pop
das
je
mov
ffreep
mov
pop
mov
je
fmul
xchg
int
mov
iret
jne
out
adc
in
sti
push
xchg
test
mov
loope
mov
out
xor
add
pop
add
push
push
push
inc
fs
and
call
or
pop
sbb
(bad)
shr
xchg
pop
outs
xchg
xchg
in
pop
cmp
sub
sar
je
out
sub
push
adc
xchg
xor
sub
adc
cmp
push
cdq
pop
js
mov
xchg
add
mov
jecxz
(bad)
pop
pop
jmp
adc
push
cwde
cmp
xchg
out
ja
lock
jmp
cmp
mov
xlat
lods
mov
sub
and
sbb
sub
icebp
cld
or
imul
pop
ftst
std
lds
jge
sbb
loopne
(bad)
mov
stc
mov
ficom
pop
xor
fcomp
nop
lock
xchg
pop
cs
movs
mov
call
add
data16
ins
test
cmp
std
mov
jp
adc
aad
mov
das
popa
inc
jae
pop
or
stc
shl
(bad)
cmp
sbb
pop
bnd
and
sub
sbb
and
inc
dec
rcl
dec
push
push
mov
data16
add
in
sahf
xchg
cli
xchg
mov
(bad)
sbb
jns
add
xor
jmp
hlt
pop
test
push
or
mov
mov
adc
daa
cmp
cmp
bound
cmp
push
pop
jecxz
scas
xor
mov
pop
test
jno
and
retf
xchg
jae
inc
nop
sbb
adc
mov
jnp
iret
mov
add
push
jae
sub
(bad)
fst
jae
or
mov
pusha
in
test
jmp
rcr
aas
gs
push
xor
dec
and
xor
aad
pop
jle
int3
cmp
mov
pop
cmp
push
iret
cmp
xor
loopne
sbb
jmp
xchg
loopne
mov
jae
nop
jns
mov
lahf
and
xor
retf
sub
xlat
jecxz
mov
repnz
scas
in
push
test
ds
mov
cld
lea
push
or
nop
mov
ret
sahf
jmp
inc
outs
sti
mov
xchg
pop
push
xchg
mul
pusha
inc
inc
push
cmc
pop
repz
xlat
mov
jne
dec
sbb
sub
dec
mov
and
add
cmp
fadd
push
cdq
aas
outs
jae
xor
or
movs
mov
dec
fstp
mov
fldcw
leave
push
adc
dec
sar
fdiv
xor
add
test
pop
mov
mov
loop
scas
push
mov
jmp
mov
cmps
mov
(bad)
cld
cmc
cmp
stc
call
mov
call
or
(bad)
out
sub
and
imul
mov
das
fsubp
fisubr
mov
pop
jae
adc
and
mov
fcmovbe
ltr
jecxz
lods
jb
cli
fs
jmp
xchg
cmp
aam
and
fadd
inc
sbb
test
cmps
addr16
mov
fbstp
sti
test
add
(bad)
repz
test
loop
(bad)
cmps
stc
push
leave
sub
cwde
xchg
stc
in
push
and
or
test
xor
es
cwde
pop
loop
adc
mov
(bad)
dec
repnz
fwait
xor
arpl
mov
xchg
mov
add
loop
call
into
pop
aaa
cli
aam
dec
jmp
sbb
xchg
into
or
push
popa
sub
mov
jecxz
xor
jb
sub
mov
add
mov
add
pop
sbb
xor
mov
add
test
es
sub
inc
and
das
push
push
sub
adc
call
popa
mov
mov
xchg
into
nop
cmp
fwait
cmp
hlt
ins
stos
mov
push
out
loopne
arpl
sar
mov
mov
hlt
(bad)
into
dec
and
jb
push
int3
adc
mov
ret
sub
jo
mov
and
mov
pop
inc
push
in
scas
test
xchg
mov
push
movs
sahf
jecxz
retf
icebp
jo
into
ret
adc
pop
jle
cld
clc
mov
and
sbb
jno
jae
movs
pop
in
ins
cmps
push
inc
pop
mov
sbb
and
mov
jb
cmps
fsubr
and
(bad)
jbe
cld
mov
or
mov
cli
or
add
mov
or
push
xchg
xchg
add
es
repz
dec
sti
ins
les
or
fnstcw
in
inc
push
adc
mov
add
add
mov
pop
(bad)
pop
and
lea
or
addr16
sti
adc
xchg
ss
(bad)
ins
and
mov
mov
stc
outs
nop
ss
push
or
icebp
emms
jb
push
xchg
push
jg
stos
mov
shr
jle
mov
(bad)
push
push
pop
jg
xor
xor
pop
es
mov
mov
lock
jnp
and
add
int3
adc
les
and
push
jb
jnp
pop
fcomi
jb
ins
cmp
test
sbb
je
xchg
xchg
adc
aas
pop
mov
sub
loopne
or
push
sbb
inc
or
xor
xor
dec
mov
movs
xchg
(bad)
xlat
or
jb
imul
cmp
in
sub
(bad)
aad
cmps
in
add
std
movs
mov
sbb
icebp
mov
xchg
xor
lds
mov
adc
call
in
jo
pop
sub
or
jle
cmp
mov
in
mov
es
inc
push
movs
jns
push
ret
xor
loope
fmul
sbb
lahf
inc
xchg
out
call
cmp
jmp
in
or
out
test
es
retf
lods
in
add
add
lods
inc
icebp
dec
xlat
cmps
mov
or
iret
add
div
dec
add
xchg
mov
pop
dec
jle
dec
mul
cs
mov
mov
inc
mov
invd
mov
push
stos
add
pop
aaa
pop
mulps
push
test
add
mov
fadd
fnstsw
cmovns
lods
ins
scas
jmp
push
mov
jmp
out
into
ror
cmp
sbb
sbb
ror
ror
adc
jg
pop
fadd
mov
cli
or
sbb
out
adc
lea
cmp
xchg
jae
or
xchg
dec
retf
xor
ss
xchg
popa
push
sbb
push
or
js
push
shld
push
jae
add
jo
mov
push
(bad)
stos
jmp
scas
cmp
loope
mov
sbb
sahf
xchg
cld
cmps
popa
jo
inc
hlt
fbld
mov
fcomp
(bad)
test
es
enter
fisub
pushf
jno
sar
mov
add
pop
xchg
ret
or
inc
cmc
jecxz
adc
adc
icebp
fs
add
xchg
ins
hlt
cmp
cmp
(bad)
jae
xor
fild
xor
cmps
mov
cwde
push
push
(bad)
mov
xchg
cmps
jp
enter
(bad)
out
idiv
fcomp
push
shl
int3
outs
pop
ins
mov
adc
in
xlat
adc
adc
mov
pop
mov
and
xor
bound
xchg
sti
imul
push
and
pop
lods
jg
enter
iret
ror
push
test
xchg
jno
adc
popf
inc
pop
dec
pop
in
xor
js
jle
pop
into
push
fsubrp
cwde
(bad)
xor
add
bnd
out
push
jg
dec
mov
jg
sbb
cdq
retf
xor
mov
push
pop
repnz
pusha
push
test
std
add
(bad)
jl
xchg
sar
cld
scas
push
outs
jo
cmp
shr
retf
or
mov
stos
aaa
xchg
scas
mov
(bad)
lods
fld
adc
jp
add
jmp
mov
sub
(bad)
gs
fist
and
jno
loop
xor
jnp
adc
mov
jp
ins
aas
ret
mov
sub
cld
arpl
fwait
cwde
addr16
sub
stos
dec
(bad)
ds
jmp
(bad)
in
jle
jo
jmp
ret
(bad)
(bad)
out
ror
mov
cmp
dec
sti
cs
cmp
mov
cmp
loopne
aaa
scas
or
pusha
lahf
mov
cmp
iret
or
daa
into
jns
xor
retf
loopne
xchg
add
fs
cmp
dec
stos
inc
sub
clc
pop
add
sub
mov
add
stos
shl
push
lea
lods
das
shl
mov
cmova
mov
xchg
or
or
mov
or
sti
arpl
(bad)
cdq
test
xchg
cmp
sub
cmps
outs
xor
pop
cmp
pop
rcl
adc
pushf
adc
cmp
pop
(bad)
loopne
or
sahf
inc
inc
mov
pop
rcl
scas
push
shr
aaa
pop
xor
and
fistp
sub
popf
mov
sahf
call
pop
mov
popa
movs
js
sahf
frstor
sbb
ins
xchg
jle
dec
add
mov
adc
lea
adc
or
pop
sub
stos
movs
pop
push
out
mov
sbb
xchg
cwde
adc
rcl
out
push
inc
lds
sahf
mov
mov
stos
push
cmp
xchg
cs
adc
scas
and
(bad)
sub
inc
aas
jmp
mov
or
(bad)
fucomi
sub
push
mov
out
and
je
add
dec
adc
loope
dec
enter
imul
popf
xor
es
xchg
push
cwde
jbe
sub
xchg
rol
mov
mov
jbe
push
xchg
clc
push
movs
test
xor
arpl
inc
stos
push
jae
repnz
adc
jb
jno
xor
(bad)
sti
sub
retf
movd
dec
call
jge
and
sub
mov
into
cmp
aad
and
movs
mov
retf
cs
push
test
mov
ds
mov
sub
out
mov
jmp
test
inc
test
sbb
stc
fdiv
jne
cld
sub
xchg
inc
movs
jmp
pop
mov
xor
push
rcl
pop
or
cli
leave
mov
test
push
adc
rcl
push
push
dec
int
bound
in
ror
(bad)
xor
xor
push
ret
sbb
add
aam
aaa
dec
lea
push
mov
sub
iret
sub
xchg
mov
in
adc
cmp
or
repnz
add
dec
(bad)
cmp
mov
xchg
sbb
mov
xchg
fcmovb
xchg
xor
dec
push
or
pop
ror
push
mov
cdq
mov
push
data16
movs
lods
nop
(bad)
xchg
in
movs
or
jo
out
xor
mov
lock
and
fwait
add
push
test
lea
inc
or
inc
xor
(bad)
fmul
sbb
and
fmul
sub
jle
sbb
dec
mov
sbb
int
cmovs
addr16
sbb
mov
aas
push
inc
mov
or
cdq
stos
enter
icebp
sub
call
mov
mov
adc
ret
and
xchg
repnz
(bad)
pop
xchg
mov
cs
or
or
daa
pop
cmp
push
into
xor
xchg
pop
pushf
rcr
pop
mov
add
xchg
adc
imul
clc
push
js
fisttp
in
ficom
popf
jp
call
add
dec
inc
sbb
mov
jno
gs
push
inc
stos
add
cmps
or
xor
jne
clc
retf
dec
leave
sbb
(bad)
enter
inc
aaa
xchg
retf
mov
in
stos
(bad)
call
mov
push
div
inc
rcr
mov
das
jns
cld
xchg
(bad)
shr
aaa
dec
add
inc
mov
out
out
in
test
iret
pop
jno
(bad)
cmp
xchg
xor
jno
jns
ja
je
fwait
dec
adc
fsin
mov
jecxz
and
mov
es
jbe
xor
jmp
stc
cmp
ret
sbb
jmp
mov
mov
push
add
xchg
and
xor
jle
xchg
iret
lods
add
push
fsubr
mov
fiadd
and
shl
outs
loope
out
fisub
ja
sbb
dec
rol
mov
sbb
test
out
stc
add
jbe
mov
inc
ret
lods
aam
loopne
call
or
mov
or
(bad)
in
or
sbb
clc
jbe
mov
fwait
mov
std
out
mov
aas
add
stos
adc
call
push
hlt
lea
jl
push
xchg
xor
test
jl
pop
mov
sub
inc
dec
or
movs
jge
call
or
adc
loop
sbb
(bad)
push
adc
mov
adc
das
loope
cld
inc
mov
jmp
aaa
iret
das
adc
lea
out
jge
sti
push
popf
push
cld
ins
jg
mov
pop
and
iret
imul
and
repnz
sbb
push
fnstsw
push
pop
mov
push
cdq
cmp
pop
dec
out
loopne
lods
cmp
clc
(bad)
outs
push
pushf
xor
in
mov
push
jae
mov
mov
mov
sub
mov
cli
es
jns
add
adc
mov
sub
imul
rol
outs
add
je
push
mov
or
lods
xor
test
jno
sub
outs
xchg
xor
xchg
xchg
mov
sbb
inc
inc
pop
in
fadd
jle
daa
push
jnp
aas
and
mov
push
mov
(bad)
lock
jg
jno
add
pop
push
outs
xchg
sti
fcos
cmp
push
std
dec
cmc
fs
mov
or
mov
mov
add
sub
in
pop
out
pop
push
jmp
and
and
or
movs
adc
inc
mov
loopne
fldcw
dec
pop
adc
push
add
sub
icebp
retf
pop
scas
push
out
les
pop
sub
fdiv
cmc
pop
jbe
stc
mov
jg
pop
xchg
adc
mov
nop
push
push
call
loop
cwde
jecxz
stos
jg
sar
add
pop
sar
movs
das
int3
adc
js
jl
sbb
pop
push
ins
(bad)
je
jp
sub
in
mov
jle
cmps
(bad)
ss
xchg
fld
popa
mov
xor
xchg
fidiv
adc
add
(bad)
pop
xor
daa
or
sub
sbb
xchg
scas
mov
fs
pushf
test
outs
xchg
outs
dec
outs
inc
cmp
xlat
xchg
mov
adc
cld
mov
shl
inc
inc
xor
aas
adc
aam
repz
add
adc
gs
test
cdq
xor
popf
mov
pop
push
(bad)
and
xchg
fsub
mov
adc
xor
pop
out
jo
fiadd
jae
xchg
je
cmp
or
cmps
xchg
(bad)
push
sub
scas
xchg
inc
xor
mov
xlat
shr
push
mov
and
cli
add
pop
shl
daa
mov
jmp
and
push
xchg
lods
lods
push
scas
pop
loope
pusha
std
aaa
(bad)
idiv
add
arpl
inc
xor
sub
dec
mov
punpckhdq
loope
in
cmp
mov
sbb
dec
hlt
jle
popf
mov
pusha
addr16
call
and
sbb
fcomp
jl
scas
je
adc
sti
ret
mov
and
push
jmp
int3
loopne
inc
stos
jmp
(bad)
jge
pop
push
ins
adc
push
mov
xor
dec
shl
inc
mov
bound
and
(bad)
mov
mov
in
cmp
outs
shl
mov
mov
xchg
ror
dec
int3
jl
adc
pusha
mov
inc
push
and
aas
fldenv
mov
cmp
jnp
retf
and
add
sti
jno
shr
loope
hlt
(bad)
pop
lahf
mov
pop
das
mov
dec
call
das
dec
mov
mov
jg
out
in
push
fdivrp
in
push
iret
les
pop
fimul
mov
pop
(bad)
adc
xchg
rcl
xchg
arpl
fxtract
cmp
inc
mov
add
cwde
push
pop
sbb
sbb
(bad)
push
sbb
inc
imul
jmp
jle
ins
pop
test
xchg
xchg
mov
mov
in
mov
mov
mov
inc
mov
daa
add
mov
aam
in
and
aam
(bad)
cs
cs
xchg
mov
mov
xor
xchg
js
test
fsub
das
and
out
xor
clc
mov
sar
pop
cmps
dec
dec
jecxz
rcr
dec
pop
daa
addr16
call
clc
mov
jl
imul
cmp
xor
push
test
mov
imul
lds
jbe
xchg
fs
mov
in
iret
push
xor
sbb
out
aad
and
in
mov
jbe
or
xor
ins
sbb
inc
icebp
inc
adc
jle
ja
(bad)
mov
cmp
and
push
adc
in
test
or
mov
hlt
mov
inc
dec
sub
enter
xchg
test
das
fadd
mov
shr
mov
and
or
xlat
sti
out
push
mov
bound
sbb
pop
push
push
push
outs
and
ror
pop
es
cwde
dec
rcr
les
fild
dec
loope
fwait
sub
pushf
pop
push
xor
push
xlat
leave
call
add
mov
lods
xchg
jae
or
shr
dec
inc
loop
adc
sbb
xlat
repz
or
arpl
shl
sbb
and
push
xchg
daa
scas
fld
xor
xchg
add
fild
xchg
mov
jle
icebp
pop
ja
mov
dec
shl
cmp
retf
out
or
(bad)
mov
shl
imul
test
sbb
mov
or
mov
stc
das
icebp
fcom
in
loopne
addr16
loop
cwde
add
stos
xor
jo
sar
cmp
ret
aam
cmc
daa
lock
jg
mov
pop
jmp
mov
rcl
ret
jge
sti
frstor
xchg
movs
push
push
mov
add
jns
mov
and
bound
and
jg
jg
mov
xor
jae
and
jmp
sbb
push
aam
sub
mov
jae
and
xchg
dec
cmp
in
adc
scas
(bad)
pop
nop
fnstcw
rcr
iret
mov
inc
dec
ror
(bad)
pop
dec
aas
mov
add
and
sti
mov
dec
js
pushf
or
jmp
into
rcl
jp
push
push
add
cwde
lods
js
push
mov
pop
pop
test
xchg
jl
fdivr
lods
imul
retf
loop
aad
es
inc
loop
dec
pop
sbb
push
pop
lds
outs
mov
jecxz
mov
imul
(bad)
loop
mov
pop
leave
js
xchg
pop
loopne
addr16
mov
mov
test
bound
adc
fwait
leave
cmp
sub
test
aaa
das
mov
add
cmp
adc
pop
jmp
jbe
and
push
ds
or
hlt
out
in
inc
sahf
out
mov
add
out
jb
sti
sub
data16
pop
out
sbb
push
std
xor
call
cmc
add
repz
lods
lds
popa
pop
and
sub
jl
out
push
mov
je
test
xchg
sbb
push
or
push
repz
mov
cmp
jl
xor
mov
shr
fcomip
pop
inc
pop
jmp
xchg
les
std
popa
and
sbb
add
add
nop
sub
inc
daa
push
mov
lds
pusha
pop
sbb
mov
aam
cmp
(bad)
stos
and
or
test
fbld
stos
aaa
add
cmps
xchg
xchg
sub
repz
push
mul
loop
lea
and
in
jnp
maskmovq
test
call
outs
ja
leave
popa
mov
loopne
cmp
dec
xchg
(bad)
add
pushf
cwde
clc
inc
or
iret
and
in
mov
inc
aas
lahf
icebp
addr16
lods
(bad)
retf
out
bound
inc
xchg
es
jp
pop
outs
mov
mov
mov
rol
and
xchg
jecxz
out
pop
int3
dec
shl
rol
mov
movs
mov
pop
sbb
xor
rol
pop
retf
stc
push
fdivr
or
xor
(bad)
fucomip
mov
fcmovbe
xchg
xor
retf
inc
iret
adc
repz
xor
cld
xlat
xor
movs
mov
test
inc
call
imul
and
jb
push
fsub
aam
xchg
mov
jbe
mov
xchg
loop
push
inc
ja
call
xor
in
cmp
sub
sbb
sub
and
xchg
mov
adc
fwait
sub
and
rep
push
pop
ds
cdq
cld
cwde
mov
push
add
mov
xchg
retf
out
jge
add
ret
and
xor
inc
sub
adc
jl
dec
adc
inc
mov
adc
jns
and
loop
adc
xchg
mov
aas
out
mov
ds
popa
mov
dec
and
test
jle
mov
push
sub
sub
pop
popf
cld
xor
in
xor
pusha
movs
ins
and
scas
je
and
sub
jnp
aas
jle
adc
iret
fcom
and
adc
inc
outs
cmc
mov
ins
cs
in
lock
and
adc
sbb
cs
mov
loope
dec
jl
ins
loope
mul
call
pushf
stos
mul
aas
jbe
and
sar
mov
int3
mov
cmc
ds
push
outs
adc
pop
sub
xlat
lds
pop
pop
add
xchg
test
fs
pop
mov
test
pop
xchg
jmp
shl
mov
test
sub
fst
outs
outs
cmp
adc
xchg
jne
sahf
or
call
inc
in
inc
inc
sbb
and
or
inc
movs
fcmovbe
arpl
js
repz
mov
stos
cmp
shl
test
or
nop
(bad)
stc
into
mov
xchg
push
fisubr
adc
lock
cmp
mov
inc
mov
jnp
dec
xchg
movs
mov
dec
outs
sbb
inc
jno
outs
pop
sar
xor
inc
inc
pusha
mov
test
inc
clc
pop
inc
xchg
out
dec
arpl
sbb
icebp
int
fild
rol
xor
and
push
and
popf
fnstenv
call
popf
adc
dec
imul
sti
fdiv
adc
addr16
jmp
mov
dec
sbb
mov
mov
add
mov
(bad)
outs
dec
movntq
adc
xchg
sbb
call
push
inc
and
xor
pop
xchg
pop
and
add
add
cmp
ins
inc
nop
in
arpl
into
xor
daa
nop
dec
ja
cmc
jbe
mov
sbb
rcr
hlt
xor
and
dec
xor
inc
jmp
cmps
pop
mov
xor
ins
cmps
xchg
inc
fwait
cwde
dec
sbb
aaa
mov
pop
mov
pop
inc
jns
movs
arpl
loopne
add
pop
push
mov
push
fiadd
dec
pushf
pop
cmp
jmp
js
mov
repnz
stos
sub
and
ffree
cwde
paddsw
std
pop
push
mov
gs
xor
scas
sub
and
cmp
jns
mov
nop
cmc
mov
push
jmp
arpl
or
inc
push
pop
xor
add
retf
lock
push
push
jge
adc
mov
pop
jl
(bad)
clc
jl
sbb
mov
sbb
push
push
sahf
arpl
inc
pop
inc
mov
int
rol
mov
dec
inc
dec
rol
xlat
adc
movs
popa
add
pusha
movs
ror
pop
out
cmc
scas
out
sahf
stos
xchg
das
bnd
or
xor
imul
fld
out
mov
jmp
jmp
pop
imul
(bad)
(bad)
daa
pop
fistp
and
cld
test
push
es
fadd
push
ds
std
jno
and
pop
push
push
idiv
aad
(bad)
test
or
cmp
test
push
movs
push
ffree
or
in
nop
add
jmp
cli
dec
xchg
lahf
scas
mov
sub
push
dec
outs
outs
mov
pushf
scas
mov
dec
xor
push
es
cli
sub
push
sar
push
jne
xor
inc
xchg
xchg
sbb
pop
inc
or
enter
loopne
leave
mov
mov
or
adc
or
ror
lock
pop
ins
pop
daa
out
xchg
push
imul
ficom
push
fnstsw
cmp
pop
shl
dec
add
push
add
out
or
mov
inc
adc
adc
not
jne
ins
ret
dec
aas
fiadd
mov
retf
aas
jb
(bad)
movs
fwait
pop
jg
leave
ret
jnp
inc
mov
sbb
fild
adc
add
xchg
sub
dec
xchg
or
push
into
std
movs
adc
test
jg
sbb
and
(bad)
push
fnstcw
and
inc
out
mov
lahf
xor
mov
push
dec
lods
mov
mov
jns
sahf
mov
lahf
sub
push
inc
(bad)
sbb
jg
rcl
mov
inc
jbe
adc
fnstcw
add
push
mov
xchg
icebp
lods
jmp
in
inc
push
scas
or
sbb
cmc
out
inc
into
mov
outs
fwait
cmp
dec
dec
push
mov
push
cmc
test
dec
xchg
ins
movs
or
stc
mov
add
cmp
and
mov
and
inc
jno
xchg
(bad)
dec
dec
sbb
outs
or
ror
xor
arpl
mov
jp
and
or
xchg
pop
out
std
fstp
inc
xor
in
cdq
test
jae
pop
movs
test
fpatan
ret
outs
mov
dec
lods
mov
mov
sub
fldenv
pop
and
add
es
nop
ret
push
mov
repnz
(bad)
inc
arpl
dec
mov
cmp
lahf
xchg
mov
or
cld
lea
loope
mov
jno
repz
jae
jo
(bad)
aaa
and
jge
add
and
jp
rcr
imul
(bad)
pop
nop
sub
jb
(bad)
out
inc
scas
adc
pushf
scas
repz
mov
inc
sub
int3
dec
jp
ror
test
in
xchg
ficomp
push
inc
mov
cmp
das
movs
hlt
neg
cdq
inc
push
(bad)
repnz
in
sbb
cs
mov
pop
mov
jbe
jl
add
lahf
test
xchg
xchg
iret
mov
js
in
ins
daa
cmp
mov
iret
es
or
cmps
dec
call
cmp
mov
or
pop
push
add
in
adc
jbe
or
jnp
je
aas
cdq
pop
xor
jecxz
movs
add
or
dec
sti
pop
sahf
cwde
mov
(bad)
rcl
jle
push
lods
sub
loopne
fisubr
sahf
push
pop
inc
pop
lods
ds
xor
jl
sub
js
scas
cdq
pop
mov
aaa
les
call
ss
call
dec
pop
(bad)
lods
jae
int
imul
outs
jae
daa
xor
add
cmp
and
or
retf
sbb
cmp
adc
fild
xchg
stos
mov
aaa
sub
pop
das
loop
nop
pop
outs
scas
int
mov
mov
xor
dec
rol
fmul
pop
sar
dec
scas
lock
mov
fld
jle
(bad)
mul
fs
stos
pop
(bad)
cmps
test
ins
loopne
dec
mov
call
dec
jbe
add
in
jo
cdq
jns
hlt
adc
sbb
pop
dec
lods
inc
adc
in
xor
jl
dec
movs
(bad)
xor
dec
mov
mov
jg
pop
test
in
xor
rol
add
(bad)
pop
dec
mov
lods
and
lahf
mov
dec
push
or
mov
sub
adc
jne
dec
retf
inc
or
adc
jb
stos
stos
pop
jle
inc
out
pusha
lods
cld
sub
xchg
ds
jbe
push
pusha
ret
hlt
lock
or
sbb
sbb
fyl2xp1
push
adc
fadd
fist
inc
jae
xor
mul
fstp
ror
and
and
sub
cmp
cld
mov
mov
rol
in
iret
aaa
jae
(bad)
fsubr
out
stos
ins
jl
sub
dec
js
pop
das
dec
loop
mov
and
sahf
(bad)
repnz
shl
in
das
loopne
xchg
cvtps2pd
aas
inc
cmp
inc
cwde
mov
les
mov
ja
add
pop
repnz
sbb
inc
test
jbe
push
push
jl
or
jo
sahf
loopne
xor
pop
imul
cmp
or
sbb
aam
movs
ret
ja
(bad)
push
test
mov
xor
and
xor
pushf
xor
fwait
lahf
dec
dec
movs
imul
es
mul
outs
push
ret
push
mov
push
lods
test
adc
sub
ss
sbb
xor
fucomi
sbb
dec
cld
adc
jbe
mov
mov
out
mov
lods
and
inc
lock
pop
pop
adc
jnp
retf
mov
mov
int3
and
and
scas
or
cmp
int3
retf
mov
cmp
push
outs
xor
jecxz
dec
inc
outs
sub
mov
mov
sub
sbb
dec
sub
pop
outs
les
ss
std
aad
xchg
mov
sub
xor
add
pop
mov
cs
int3
in
jb
out
aam
inc
sub
fucomp
inc
ja
dec
repnz
push
shl
retf
call
xor
(bad)
cmp
(bad)
jb
pusha
xor
cdq
out
enter
and
mov
adc
adc
xor
cli
sub
inc
scas
mov
pop
into
cmp
retf
mov
mov
and
ficomp
adc
sahf
dec
jo
or
jo
loop
mov
ja
add
inc
push
sub
dec
loopne
push
dec
out
inc
pop
push
cmp
addr16
fs
shr
mov
mov
pop
aaa
and
sub
or
adc
jmp
(bad)
sub
pop
cmps
or
sub
add
push
sti
out
dec
add
mov
addr16
gs
adc
or
loope
mov
loope
ins
sub
add
jns
push
outs
xchg
dec
dec
mov
lahf
adc
xor
and
call
call
fidiv
adc
push
mov
popf
jmp
jg
(bad)
mov
fstp
xchg
xor
mov
(bad)
inc
fistp
aaa
scas
scas
in
dec
movs
movs
jb
mov
cmp
fsub
je
push
loop
xlat
movs
inc
retf
mov
jnp
push
fs
test
pop
movs
cmps
xor
or
mov
ins
mov
rol
test
ds
dec
aad
pushf
addr16
(bad)
test
call
inc
xchg
lods
aas
sti
lahf
dec
push
inc
and
out
outs
jmp
ins
ror
xor
aad
imul
inc
mov
mov
sub
sbb
sahf
das
mov
loope
loopne
outs
pop
or
mov
jmp
sbb
mul
not
push
fst
std
xchg
add
push
inc
(bad)
pop
icebp
push
mov
add
dec
repnz
add
adc
fldcw
lahf
jl
push
aad
xchg
ja
and
jne
push
and
mov
sar
cpuid
div
(bad)
dec
cwde
jb
cdq
cmp
pop
inc
mov
popf
xchg
cmps
mov
sbb
fsub
cli
repz
lods
mov
cmp
adc
jl
sbb
and
fwait
inc
mov
inc
xchg
jle
or
mov
mov
mov
mov
inc
cmp
add
shl
call
mov
xor
pop
mov
shl
jno
popa
test
push
in
mov
mov
xchg
fldenv
es
mov
dec
(bad)
fdiv
mov
jnp
push
(bad)
push
neg
test
daa
loope
test
dec
icebp
stos
sub
push
fimul
fwait
scas
(bad)
cmc
cld
(bad)
cld
or
popf
mov
(bad)
popa
cmp
mov
jnp
xor
das
cmc
bound
jge
scas
mov
jmp
adc
rol
arpl
ret
sbb
rcr
or
scas
xor
or
sar
or
clc
xchg
sub
(bad)
and
jecxz
push
sbb
jmp
mov
fs
test
fmul
inc
or
enter
push
inc
fcom
mov
js
xchg
inc
sahf
bound
leave
ror
jp
jbe
lea
sbb
in
iret
sbb
leave
mov
adc
fdiv
push
cmp
enter
ja
mov
add
std
ficomp
cmp
pushf
push
push
ficomp
push
ins
stc
aas
imul
dec
inc
cmp
das
sub
hlt
jp
jle
push
mov
and
pushf
sbb
mov
pushf
outs
add
lock
fistp
out
push
shr
inc
test
sub
inc
fmul
push
push
sub
push
adc
fld
or
sbb
out
cmps
push
mov
adc
ror
pop
in
out
out
bound
dec
lds
scas
fidiv
lock
stos
shl
adc
and
idiv
(bad)
sub
dec
test
sub
xchg
pop
fsub
xor
xchg
inc
inc
in
mov
mov
repz
cmp
(bad)
mov
mov
das
adc
push
add
sub
jg
les
out
test
dec
cmp
test
mov
xchg
lods
xchg
jns
cdq
stc
test
xchg
add
dec
icebp
sbb
fmul
jbe
shr
and
push
pop
hlt
lods
mov
dec
(bad)
jmp
fcom
push
sti
mov
vstmxcsr
out
sub
add
mov
ins
xchg
xchg
(bad)
push
pop
jmp
fmul
xchg
mov
cmp
mov
add
adc
add
pop
xor
popa
push
push
iret
movs
je
and
cdq
mov
popa
pop
xor
add
shr
dec
xchg
inc
xchg
adc
outs
or
push
ds
clc
inc
arpl
sahf
test
or
jle
inc
shl
mov
in
jp
mov
movs
push
mov
clc
imul
xchg
enter
sbb
sti
cmp
mov
stos
ss
repnz
inc
pusha
push
(bad)
fdivr
adc
cmps
sbb
enter
lahf
jle
pop
ds
(bad)
in
aad
mov
rcr
fistp
mov
xchg
add
js
mov
or
outs
xchg
pop
push
cmps
mov
cld
push
cmp
out
sbb
(bad)
(bad)
pop
jl
pop
mov
sbb
stc
lods
mov
jae
push
out
adc
mov
sbb
in
ins
mov
mov
retf
pop
cmp
jmp
div
inc
cmps
sbb
cmc
mov
sub
adc
mov
outs
dec
xchg
xor
fs
aad
mov
bound
cmps
cmp
ds
aas
movs
data16
sbb
cmp
and
cmp
jae
ins
int3
popa
xor
repnz
xchg
inc
dec
inc
mov
xor
fwait
inc
cmps
sub
mov
xchg
test
sub
mov
repz
xchg
or
je
test
mov
push
mov
jae
movs
mov
jae
add
mov
xor
icebp
adc
mov
aas
ss
les
and
divps
loope
into
ret
mov
jmp
push
pop
xor
sbb
pop
and
mov
sbb
pop
repnz
mov
cmp
dec
addr16
(bad)
sbb
and
retf
cmp
lds
nop
aaa
out
cmp
push
icebp
imul
inc
aas
adc
jnp
popf
sbb
into
leave
mul
cdq
sahf
into
inc
cs
mov
sub
and
std
(bad)
and
push
js
popf
xor
cmc
in
cmps
loop
inc
inc
inc
(bad)
mov
js
sbb
repz
retf
xor
push
(bad)
in
xchg
movs
inc
cmc
jl
popa
push
xchg
cmps
xchg
xor
sub
cmp
aaa
rcr
add
pop
or
dec
fimul
xor
inc
mov
lock
mov
and
neg
push
add
push
xor
and
(bad)
cs
mov
sub
jno
mov
inc
pop
jmp
pop
js
daa
mov
jge
push
mov
or
and
or
sub
or
in
add
test
dec
shl
push
loopne
cmp
push
cmp
cdq
loopne
cmps
cmp
movs
and
jne
mov
sbb
push
int
xchg
inc
sub
sub
sub
and
fild
xor
xchg
pop
inc
xor
jg
push
(bad)
rol
std
out
add
sbb
dec
sub
push
adc
and
pushf
xor
mov
mov
out
lds
fisttp
dec
(bad)
aaa
or
cmp
jg
xor
int
jecxz
shl
jle
lea
pop
xchg
xchg
test
int
inc
xor
aam
mov
mov
repnz
xchg
popf
or
jnp
js
mov
cmps
cmc
fnstenvw
stc
cmp
xchg
cmc
dec
cmc
ss
and
sbb
adc
jb
jo
add
mov
jns
retf
sti
movs
adc
xlat
sub
dec
pop
jb
sti
adc
xchg
adc
call
clc
push
inc
adc
in
xchg
adc
push
loop
push
(bad)
out
mov
shl
test
sub
inc
mov
(bad)
sub
fst
adc
dec
btc
into
push
outs
repz
push
mov
outs
xchg
jmp
xchg
jnp
jns
stc
ficomp
or
mov
mov
mov
arpl
and
outs
push
sbb
jmp
cmp
mov
neg
sub
lahf
ret
mov
sbb
push
push
add
cmp
imul
clc
or
pop
mov
es
adc
jae
aas
adc
sub
ds
dec
addr16
sub
repz
sub
sub
jecxz
aas
ds
mov
push
and
or
mov
shl
sbb
jmp
pop
add
imul
xchg
adc
mov
outs
data16
sub
scas
leave
sub
add
fcom
dec
test
ds
cmp
lahf
int3
sahf
mov
jp
and
ss
sbb
push
and
sar
push
adc
lods
(bad)
adc
xor
sbb
adc
push
stc
(bad)
sub
push
and
push
xchg
fs
sub
mov
aas
in
xchg
enter
(bad)
or
cs
retf
xchg
icebp
imul
sbb
adc
mov
into
lods
push
dec
ja
and
js
rol
sti
stc
arpl
lods
(bad)
or
mov
fsub
xor
(bad)
ror
xchg
fwait
inc
mov
out
mov
pop
aam
sbb
mov
mov
outs
jp
mov
inc
retf
(bad)
pop
sbb
inc
scas
push
mov
inc
inc
test
mov
jp
into
inc
sbb
add
mov
jnp
inc
mov
fild
int
gs
out
xchg
xchg
fucom
and
cmp
xchg
pusha
push
sbb
mov
mov
pop
push
push
dec
mov
out
mov
in
mov
mov
inc
jge
cmc
jecxz
lea
ret
inc
sub
test
or
or
push
retf
mov
mov
pop
push
mov
call
sbb
popf
dec
pusha
aad
loope
ja
xlat
in
sbb
jmp
pushf
sbb
mov
cmp
out
xor
cld
push
mov
xor
mov
mov
cmp
pop
push
push
dec
sub
out
cmc
mov
addr16
inc
fisub
or
shr
push
or
inc
popf
push
inc
sub
loopne
clc
sar
clc
aad
out
out
dec
repnz
ja
mov
js
icebp
fst
pop
cdq
push
add
in
pop
push
mov
test
push
add
sbb
test
in
fs
scas
sub
mov
mov
mov
add
(bad)
retf
xchg
sti
and
sub
adc
pop
inc
add
mov
adc
dec
loopne
aas
neg
push
sahf
scas
add
outs
ss
dec
fld
shr
sub
mov
xchg
xchg
inc
mov
not
pop
sub
mov
mov
call
mov
xchg
inc
outs
add
mov
mov
cli
enter
(bad)
jle
xlat
cmc
sbb
or
clc
mov
lea
xchg
dec
popa
inc
and
out
or
dec
sbb
loope
sahf
popf
mov
xor
div
pop
(bad)
stos
fwait
in
or
pop
push
xlat
and
mov
aaa
jae
pop
xor
test
bound
jbe
push
mov
data16
sbb
cmp
jecxz
test
pop
inc
mov
push
sqrtps
push
add
fst
pop
add
or
stos
inc
sbb
popa
ja
xchg
mov
mov
adc
jmp
cmp
jg
mov
and
cmp
fisttp
sbb
nop
scas
inc
push
mov
sahf
fcomi
out
jmp
sub
mov
fsub
jns
movs
mov
jg
push
ror
fs
xor
js
imul
jo
pop
(bad)
xor
shl
xchg
fwait
inc
cli
add
jb
mov
repnz
aaa
xchg
lods
dec
(bad)
cmp
aad
call
inc
push
cmp
gs
lea
or
xchg
pop
xor
adc
jg
in
mov
outs
movs
out
aad
push
cwde
xchg
mov
inc
xacquire
fdivr
mov
dec
jg
(bad)
dec
lock
mov
ds
xor
mov
lea
sbb
sbb
sar
clc
jp
sahf
inc
mov
jmp
out
jmp
xchg
jle
jne
inc
(bad)
push
cmp
sub
push
cld
or
(bad)
push
sbb
jb
cmp
repnz
mov
cmc
dec
cmp
out
out
add
pop
add
sbb
jno
xchg
or
xchg
and
cld
dec
dec
test
stos
jmp
jb
outs
xchg
inc
and
shl
cmp
mov
neg
inc
mov
clc
shl
push
(bad)
and
xor
adc
mov
je
outs
mov
in
push
add
ss
(bad)
jno
lock
inc
push
into
mov
retf
stc
in
push
lock
push
dec
xchg
adc
or
iret
ds
ret
xor
mov
dec
mov
sub
xchg
or
mov
pushf
mov
lods
sub
xchg
or
scas
ror
iret
out
jne
or
pop
test
add
and
leave
or
dec
xor
ret
jg
test
fucompp
push
loop
jp
xchg
pop
jo
push
scas
sbb
jp
add
add
mov
add
cmp
mov
mov
gs
mov
adc
adc
gs
mov
mov
fwait
and
pop
adc
adc
add
xchg
pop
ds
repnz
cli
jp
or
ficomp
adc
lods
xor
icebp
mov
jmp
mov
dec
loopne
(bad)
and
push
add
call
into
and
test
and
stos
or
lock
fsubr
sbb
xor
jmp
push
push
cmp
mov
dec
sbb
ins
mov
push
sub
xor
sub
les
pop
mov
dec
mov
mov
pusha
lods
icebp
cmp
icebp
and
or
dec
cmp
inc
mov
cmc
inc
xchg
xor
movs
inc
ja
or
fs
add
scas
lea
mov
int
mov
add
test
js
stos
in
sub
je
and
inc
pop
mov
out
jecxz
mov
mov
sub
cmp
adc
xor
xor
and
rcr
xchg
mov
cwde
test
xchg
push
sbb
inc
xlat
xchg
ret
not
out
adc
mov
jecxz
nop
jge
dec
test
pop
popa
int3
push
out
sbb
out
les
xchg
cmp
pop
les
mov
lods
ja
out
shl
cwde
jns
pop
sbb
add
nop
loope
cmp
fwait
pop
mov
retf
pop
nop
sbb
cmp
sbb
loope
bound
pop
pusha
push
pop
push
test
rol
add
(bad)
push
lods
js
(bad)
or
cld
mov
inc
ss
mov
sub
inc
adc
daa
repnz
or
mov
adc
or
push
(bad)
popa
jle
mov
jle
and
cmp
lock
pop
pop
pop
cld
imul
adc
or
mov
sbb
jne
lods
dec
sahf
rcr
xchg
pop
call
pop
inc
xchg
mov
jae
mov
jl
adc
mov
and
xchg
lds
fisub
mov
or
dec
dec
sub
sub
mov
pop
dec
or
les
(bad)
inc
mov
dec
in
jp
jne
shr
scas
pop
xchg
inc
out
(bad)
mov
mov
sub
pop
lods
data16
sbb
add
mov
mov
pop
pop
push
mov
in
cmp
xchg
clc
out
mov
adc
pop
inc
pop
jge
iret
mov
leave
clc
sbb
or
outs
cmp
push
lock
arpl
retf
mov
jne
xchg
outs
(bad)
sbb
dec
mov
retf
lock
jo
lsl
pop
mov
outs
les
test
add
stos
pop
inc
sbb
lock
and
jg
movs
popa
xor
or
dec
imul
idiv
inc
xchg
push
pop
cmps
inc
cli
or
mov
mov
sbb
cmp
mov
inc
mov
adc
repz
cmp
retf
data16
scas
ret
test
into
add
in
pop
stc
adc
cld
into
syscall
fidivr
and
stc
fsubr
retf
call
lea
add
or
dec
ds
xchg
dec
fisub
sbb
fdiv
xor
cmp
pop
sbb
mov
sbb
and
daa
call
jae
push
xchg
push
(bad)
adc
and
xor
jns
pushf
inc
ds
and
inc
pop
add
sub
pcmpgtd
movs
scas
cs
mov
inc
aam
cwde
sub
fisubr
fistp
push
retf
les
inc
pop
inc
mov
or
out
test
push
jbe
loop
jecxz
cmp
shl
xor
xor
test
iret
push
xchg
xchg
imul
into
daa
mov
sub
enter
cmc
aam
inc
cdq
out
pop
add
mov
adc
mov
aad
pop
loopne
repnz
mov
in
jne
arpl
mov
jl
mov
in
push
jl
push
ins
push
lea
push
leave
jno
call
call
nop
pop
xchg
sbb
jae
call
inc
fisub
retf
jne
dec
jge
lea
add
xchg
icebp
rol
jo
xor
sbb
imul
fistp
push
imul
movs
mov
lock
outs
or
js
jl
fidiv
retf
jle
or
add
cmps
inc
ficom
into
xchg
popf
sub
mov
icebp
pop
rcl
jmp
lahf
in
popa
sahf
retf
and
sar
icebp
dec
bnd
or
mov
ret
repz
cmp
sbb
jmp
add
mov
mov
and
push
or
ja
cmp
pop
outs
in
xchg
adc
sub
fsub
fisttp
(bad)
cmp
mov
mov
push
in
dec
sub
cmps
xor
mov
mov
lahf
cmc
adc
jb
jmp
push
out
dec
dec
(bad)
mov
mov
cmp
pushf
push
add
cs
xchg
adc
mov
mov
in
aaa
movs
inc
in
movs
push
lods
ret
arpl
mov
mov
adc
retf
mov
pop
fnstsw
mov
test
(bad)
xchg
push
jnp
jmp
and
popf
(bad)
sub
add
aam
dec
call
adc
inc
xor
pushf
sbb
fmul
pop
xor
cld
pop
mov
mov
je
xchg
retf
(bad)
in
add
cmp
cmps
push
test
push
das
test
dec
inc
pop
adc
xchg
repz
xchg
dec
lahf
mov
inc
or
cmc
push
ss
jmp
push
cmps
ror
in
aam
cmp
mov
mov
or
sbb
xor
loopne
add
jns
push
retf
hlt
repnz
pop
push
push
aas
sub
fimul
call
fsubrp
jo
jns
and
sar
enter
xchg
fwait
push
fdivr
mov
push
sub
mov
xchg
out
sbb
mov
adc
loopne
xchg
leave
add
scas
fcmovnbe
fcomp
jae
mov
pop
loopne
inc
cs
mov
sbb
es
xor
out
and
add
cmp
rcl
(bad)
sub
imul
push
imul
(bad)
stc
mov
mov
stc
stos
pop
cmps
mov
inc
fisttp
aas
cmp
adc
and
ds
inc
jns
jb
xchg
aas
(bad)
pop
xor
sub
(bad)
push
loop
and
das
mov
and
test
pop
and
mov
call
sar
xchg
mov
pop
(bad)
xor
lds
adc
add
pusha
loope
loopne
sub
jmp
mov
ins
bound
sbb
mov
lds
inc
xor
sbb
es
cmp
mov
mov
jae
scas
add
call
mov
mov
data16
scas
inc
stos
sahf
icebp
mov
or
not
sahf
adc
dec
mov
fstp
cmp
arpl
sub
xchg
mov
in
mov
adc
and
pushf
cld
js
pop
(bad)
sub
adc
movs
les
scas
lods
mov
xor
pop
shl
push
cmc
cld
xor
in
rcl
aas
ret
iret
je
adc
xor
xor
push
mov
sbb
mov
bound
test
mov
into
pop
xchg
sbb
dec
mov
rol
leave
pop
data16
test
into
push
repz
mov
push
js
mov
push
sub
lods
repz
outs
bound
adc
out
test
push
mov
xchg
lea
(bad)
in
je
pop
bound
imul
and
or
push
cmps
and
inc
jbe
push
popa
mov
xchg
jnp
shr
cmp
pop
or
sub
lfs
jno
cmp
loope
push
sar
jmp
inc
add
fistp
in
and
in
in
outs
hlt
jne
mov
fucom
lea
daa
and
sub
xor
xchg
pop
lods
pop
out
inc
xor
scas
and
cmp
or
xor
adc
xchg
cmp
rcr
test
push
jns
test
pop
je
mov
pop
leave
lods
shr
arpl
not
fs
pop
(bad)
rcr
shr
mov
jg
pop
mov
cs
out
ins
mov
lods
mov
jne
mov
push
ficom
call
xor
and
ss
ja
mov
add
cmp
mov
sub
and
and
(bad)
fnstsw
push
rcr
ds
jb
pop
adc
arpl
or
pop
out
inc
xor
into
lods
xor
mov
jp
sub
mov
push
ins
mov
into
xor
sub
out
das
jb
jmp
sub
out
cmp
ror
adc
mov
fwait
mov
daa
ja
cmc
aam
ret
dec
mov
scas
pop
sub
lods
inc
xchg
fimul
mov
xchg
or
icebp
mov
cld
mov
mov
leave
(bad)
fild
loopne
lods
jmp
lahf
add
aam
test
imul
popf
retf
xchg
aad
xchg
outs
loope
xchg
clc
sub
and
leave
pop
add
mov
das
call
enter
iret
or
in
xchg
cmp
mov
sub
sbb
inc
shr
pop
scas
xor
adc
pop
sub
push
gs
neg
jo
jl
xor
out
adc
sbb
mov
mov
(bad)
xor
cs
call
pop
call
cmc
test
nop
sub
fldcw
adc
cmp
jno
xor
add
test
cmp
and
sbb
xor
in
std
enter
icebp
xor
inc
sub
xor
sub
pop
jne
lock
jne
lock
push
mov
in
mov
add
lods
std
js
das
push
mov
cmp
(bad)
out
fcom
es
jmp
pop
jbe
xchg
pusha
ins
sub
stos
mov
retf
or
inc
adc
cli
dec
and
ss
mov
sbb
inc
scas
shl
sar
es
mov
xor
mov
or
xchg
sbb
out
dec
aas
call
test
mov
mov
or
sub
repz
inc
ret
pushf
jmp
jns
jne
repz
or
in
cmp
imul
mov
ss
adc
test
movs
fist
mov
mov
sub
inc
inc
and
xchg
mov
enter
or
(bad)
jbe
push
out
xchg
pop
ins
mov
and
outs
outs
shr
iret
add
mov
(bad)
sub
nop
mov
mov
mov
repnz
adc
inc
inc
sti
xchg
out
add
adc
push
dec
pop
cld
daa
mov
jp
or
inc
jecxz
and
or
shl
iret
icebp
mov
outs
inc
cmps
adc
aam
xchg
xchg
add
loopne
mov
(bad)
lods
lods
mov
loopne
push
xchg
or
imul
in
mov
fsubr
or
test
mov
xchg
loopne
add
ins
fcomi
loope
aad
rcr
stos
add
inc
call
aas
fisubr
rcr
retf
or
lods
and
pop
xchg
in
inc
jb
fwait
outs
jge
stos
and
sti
inc
std
pop
mov
push
lods
lods
mov
nop
mov
mov
fs
fld
push
test
mov
(bad)
in
ins
jb
sub
ins
mov
daa
sbb
mov
lods
fld
mov
iret
dec
adc
sahf
dec
or
sub
mov
es
or
fst
or
and
es
into
mov
fstp
push
ss
pop
push
sub
test
mov
rcr
aaa
sub
out
ins
jmp
push
mov
adc
cld
scas
cs
lock
retf
push
test
push
clc
inc
pop
out
push
adc
lods
cmp
fdivr
pushf
lahf
pop
out
aas
in
aas
sar
sbb
and
pop
ret
repz
cmc
js
fs
jecxz
xor
test
(bad)
pop
push
aaa
jne
ins
or
mov
add
(bad)
sbb
adc
cs
sub
cmps
in
mov
pop
or
aad
arpl
sub
mov
dec
lods
jnp
pop
push
stos
pop
jmp
pop
movs
pop
cld
dec
mov
jecxz
loope
aam
xchg
into
dec
jmp
nop
clc
loop
js
iret
mov
fdiv
sub
sub
dec
cli
jmp
sbb
(bad)
das
jle
xor
push
loop
test
mov
jge
cwde
int
cmp
or
inc
stc
push
loopne
fdivr
jle
push
call
or
pop
outs
xchg
adc
and
mov
mov
xchg
aam
mov
jmp
add
dec
xor
mov
aaa
stos
repz
clc
jns
cdq
lds
test
or
xlat
call
fild
lds
lods
inc
and
lods
cmp
push
mov
fcomp
push
xchg
mov
dec
lock
cmp
cmps
mov
cdq
repz
aaa
and
mov
fild
push
ja
sub
int
mov
daa
out
movs
push
inc
mov
ror
retf
cmps
js
ror
cdq
test
pusha
add
add
ds
mov
shl
je
or
mov
sbb
push
adc
test
sub
adc
push
test
lods
pop
cs
movs
mov
jo
add
ds
inc
push
arpl
xor
hlt
or
pop
lds
in
xlat
dec
cmp
inc
int
(bad)
mov
pop
in
jo
sbb
std
pop
ret
(bad)
pop
aam
add
neg
lock
cmpxchg
and
fistp
aas
in
daa
in
jne
movs
jo
xor
repnz
scas
popa
pop
jle
repnz
lods
xchg
sub
arpl
mov
int3
cmp
out
and
inc
int3
or
std
or
(bad)
jmp
cmp
sahf
retf
dec
xchg
jle
cli
movs
add
and
push
or
sbb
rcr
adc
xor
fistp
mov
pop
mov
fsub
and
cdq
(bad)
lahf
dec
(bad)
xor
inc
mov
ror
maxps
ds
pop
movs
push
(bad)
stos
mov
adc
sbb
add
pushf
xchg
push
jno
ss
icebp
cmc
pop
add
inc
dec
xchg
push
sar
xlat
hlt
xchg
(bad)
out
call
repnz
movs
movs
ins
mov
sbb
add
or
out
sar
sub
add
pop
in
nop
fld
adc
push
repz
pop
sbb
or
dec
cmp
call
pop
and
push
fnsetpm(287
mov
(bad)
fld
push
mov
pop
dec
and
pusha
ins
fidiv
test
fucomp
shl
fs
imul
pusha
or
mov
inc
test
jmp
inc
push
retf
sti
and
(bad)
xchg
mov
rcr
or
mov
sub
fs
dec
stos
fadd
aad
fwait
add
push
adc
push
inc
jge
xlat
aam
pop
inc
jp
jle
fmul
cmps
mov
xchg
pop
add
cs
inc
dec
jmp
push
lds
out
jae
ss
mov
lea
mov
mov
mov
and
sar
and
pop
clc
xchg
icebp
jnp
(bad)
sub
xor
mov
inc
inc
mov
mov
je
sub
cmp
inc
retf
mov
or
mov
pop
mov
dec
add
jae
js
xchg
ss
and
ss
jo
ja
fiadd
and
mov
dec
test
retf
xor
jge
mov
enter
adc
(bad)
cmps
stos
cmc
retf
mov
push
imul
mov
call
xor
clc
test
lea
adc
inc
std
test
cmps
fs
popa
mov
es
add
xor
retf
inc
xchg
inc
pop
push
iret
fcomp
pop
add
fwait
adc
xchg
std
inc
cmps
pop
popa
out
jl
jmp
imul
sti
imul
mov
out
pop
ficomp
mov
inc
fwait
mov
in
jecxz
into
clc
jl
je
pop
xchg
or
pop
xor
mov
pop
push
int
stos
push
add
in
(bad)
sbb
mov
(bad)
sbb
fiadd
mov
les
repnz
xchg
popa
mov
jne
(bad)
fisub
mov
dec
ret
call
(bad)
imul
xor
adc
mov
pop
stos
bound
data16
mov
fisttp
leave
push
pop
(bad)
enter
mov
xor
pop
xchg
test
arpl
stos
das
(bad)
shl
sbb
fwait
hlt
cmps
cmps
jae
jnp
mov
jecxz
dec
xchg
mov
jne
mov
out
mov
stos
cmp
das
call
aas
mov
movs
imul
mov
push
dec
test
mov
(bad)
sub
sahf
sti
sar
mov
in
test
jno
or
fisttp
mov
rcl
aad
adc
dec
adc
and
mov
mov
stos
pop
stos
loope
pop
jmp
or
adc
mov
ret
test
ror
sbb
jnp
(bad)
and
loope
pop
push
push
addr16
xlat
xor
jge
mov
imul
test
adc
sahf
aas
(bad)
cmp
stc
sbb
js
shl
lods
mov
sub
jl
push
ficomp
pop
pop
xor
cmp
inc
sub
add
mov
push
pusha
and
imul
rol
sub
ds
imul
test
adc
xor
mov
mov
jecxz
cld
and
mov
pop
in
ins
les
push
cmp
aad
mov
or
imul
adc
sbb
sub
and
mov
(bad)
out
in
mov
in
pop
or
not
test
test
push
sbb
pop
(bad)
icebp
shr
mov
sbb
lods
jge
data16
cmp
cmc
push
sub
das
movs
in
test
jo
sti
inc
inc
cs
add
stc
idiv
and
push
add
cwde
mov
sub
les
in
sbb
mov
push
ss
addr16
push
loopne
add
push
xadd
test
xchg
and
or
xor
outs
mov
jge
fwait
dec
xlat
iret
(bad)
gs
shl
fldenv
xchg
movs
pop
repnz
xor
mov
cmp
add
adc
pop
dec
dec
or
test
fsubr
bound
cld
test
jbe
jp
movs
lock
scas
inc
test
daa
push
jge
test
or
in
pushf
inc
cmp
jne
pop
xchg
mov
and
pop
mov
shl
cli
popa
es
and
mov
int3
jbe
addr16
ss
movs
mov
shl
xchg
and
adc
test
mov
inc
mov
push
lods
lods
pushf
out
and
xchg
xlat
push
sub
cmps
dec
pop
fldcw
ficom
clc
sbb
ficom
lods
rcl
cmps
jnp
ins
cmp
inc
pop
mov
pop
jo
(bad)
in
ss
inc
xchg
xchg
retf
mov
ins
and
out
outs
jns
lds
mov
jge
mov
push
pop
hlt
dec
inc
sub
iret
mov
pop
sbb
pop
xchg
std
test
outs
sbb
push
fild
ins
sub
stos
out
fwait
jle
pop
xchg
aaa
mov
cdq
mov
rol
push
xor
inc
inc
mov
jbe
ins
adc
sub
xlat
sub
mov
xor
nop
mov
and
(bad)
or
add
push
sbb
(bad)
jmp
push
mov
repnz
cld
dec
sahf
mov
aaa
loop
aas
pop
fdiv
push
sub
fwait
dec
outs
sub
dec
aad
push
pop
cmp
dec
imul
adc
mov
movs
pop
sub
into
call
cmps
movs
mov
cld
shr
movs
cmps
ficomp
in
(bad)
call
xor
add
loop
pushw
hlt
push
lea
ss
sub
mov
mov
fmul
jmp
push
cmp
dec
jb
je
(bad)
test
add
sub
xchg
mov
call
fdiv
add
test
ins
test
sahf
sbb
lea
sub
add
in
popa
push
pop
into
and
outs
jae
dec
retf
cmp
push
sbb
ins
sti
out
xlat
xchg
(bad)
dec
es
lods
stos
mov
xchg
mov
inc
into
xchg
push
fcom
mov
retf
frstor
adc
bound
jge
mov
push
xchg
cmp
aas
xchg
(bad)
imul
hlt
dec
mov
shr
cmp
sub
dec
idiv
aam
daa
sti
cmps
add
lock
lods
xor
inc
jb
sub
push
dec
fmulp
mov
adc
sub
xchg
jne
cdq
cli
(bad)
jmp
push
add
rcr
lea
out
lods
inc
sbb
iret
(bad)
xchg
mov
push
adc
sbb
jp
cmp
and
in
aaa
cld
rol
xor
ss
lods
int3
and
mov
in
adc
dec
inc
mov
nop
rol
or
fbld
xor
xchg
pop
dec
in
and
cmp
cmp
xor
cld
and
mov
inc
cdq
sbb
xchg
out
cmps
or
mov
jo
inc
mov
(bad)
pop
movaps
jp
sbb
jbe
mov
(bad)
outs
mov
sbb
push
add
stos
stc
aas
adc
jp
aaa
xchg
mov
scas
mov
inc
xor
xor
cmps
idiv
pop
pop
pop
out
popf
pop
inc
inc
dec
mov
out
cmp
lods
pop
scas
jl
retf
xchg
test
mov
test
push
sbb
inc
loop
js
pop
enter
xor
push
xlat
and
pop
cmp
and
mov
cmp
pop
mov
push
int
pop
jbe
mov
daa
xchg
lods
push
rcr
sub
nop
out
jbe
aaa
mov
sub
ss
int3
xchg
xchg
ins
cmc
std
mov
adc
jae
sahf
push
xchg
jbe
push
dec
or
jl
mov
xor
sbb
xor
mov
sbb
push
test
iret
mov
loop
std
push
cmp
bound
inc
stc
imul
mov
scas
test
lock
lahf
addr16
push
dec
mov
(bad)
or
popa
pushf
pop
mul
xchg
adc
mov
jnp
lds
dec
in
outs
sbb
fistp
or
xor
mov
mov
and
jle
or
dec
add
cmp
jbe
xor
adc
into
cmp
xchg
fadd
daa
mov
and
adc
xor
out
and
stc
pop
movs
sbb
js
inc
jmp
test
dec
cmps
fdivr
ja
scas
jns
ret
inc
ja
mov
mov
repnz
dec
imul
xor
rcl
imul
loopne
adc
mov
adc
mov
or
(bad)
sahf
xchg
mov
lahf
(bad)
retf
popa
shl
hlt
je
adc
out
xchg
push
xchg
ror
movs
faddp
cmp
mov
loop
mov
mov
sbb
sbb
mov
fcom
dec
push
arpl
and
(bad)
outs
xchg
ds
adc
and
jo
dec
loopne
std
dec
xor
ret
jno
mov
ds
dec
out
pop
pop
sbb
push
push
lds
xchg
jnp
pop
jecxz
loop
rcr
lidtd
in
call
pushf
(bad)
cmp
jle
sbb
inc
rol
cmp
popa
imul
sub
test
lahf
arpl
cdq
adc
mov
inc
pop
jge
pop
add
jbe
mov
pop
sahf
mov
xor
ds
fbld
sbb
mov
jns
xchg
inc
jne
add
call
ins
cmp
mov
push
sub
loop
(bad)
sub
mov
in
cmp
and
cmc
mov
inc
add
into
adc
popaw
sbb
and
adc
inc
fmul
mov
fwait
cmp
cwde
jle
sbb
add
sub
xchg
adc
cmps
sbb
jecxz
add
push
and
add
stc
clc
jge
jmp
xchg
mov
xor
add
mov
xor
test
adc
scas
dec
xor
call
fimul
(bad)
out
sub
jmp
bound
cmp
jle
inc
(bad)
rol
mov
add
(bad)
int
test
jmp
daa
or
jge
mov
pop
push
popf
addr16
cli
xor
xchg
jge
cwde
adc
clc
ja
lock
dec
rcl
dec
cli
pop
inc
lods
xchg
leave
ss
inc
mov
ficom
out
int
imul
scas
mov
mov
outs
jo
push
ret
sbb
cmp
pop
sbb
mov
sub
(bad)
retf
mov
outs
mov
mov
ret
(bad)
cwde
mov
js
sbb
cs
sub
cmp
mov
lahf
mov
jmp
ret
mov
in
mov
push
jae
(bad)
xchg
data16
mov
dec
in
retf
pusha
frndint
push
push
adc
and
jg
xchg
(bad)
fs
in
dec
clc
mov
push
shld
jmp
out
and
pop
mov
fxch
and
je
cwde
out
aaa
cmp
cmps
and
xchg
jge
jle
in
push
loop
(bad)
xchg
movs
aaa
retf
movs
mov
das
xchg
xchg
call
scas
pop
add
out
ds
rcl
rcr
jmp
stos
mov
call
mov
jo
mov
cli
jbe
xor
(bad)
jl
cmp
or
fsubp
or
xchg
dec
lea
mov
test
jne
inc
das
pushf
adc
mov
ss
neg
cdq
int
push
and
push
repz
out
stos
xchg
mov
inc
pop
push
add
inc
arpl
loope
add
push
add
dec
sub
push
sbb
or
sub
test
and
fcomp
mov
inc
or
iret
or
scas
adc
cli
inc
std
mov
pop
ins
and
mov
cs
mov
cwde
out
inc
and
mov
addr16
outs
scas
push
push
ds
nop
retf
es
inc
xchg
mov
cmps
push
xchg
je
cmp
inc
sub
xor
(bad)
imul
mov
cmp
mov
fdiv
ins
fwait
sub
add
or
test
sub
daa
fisttp
push
sub
push
jns
cmp
xlat
jg
hlt
sub
(bad)
aaa
mov
xchg
dec
and
xchg
push
cmps
cwde
mov
push
inc
lods
lahf
xor
cmps
repnz
mov
add
push
jae
sbb
in
mov
ja
cmp
pop
lahf
mov
test
and
into
scas
mov
repnz
xlat
pop
mov
add
pop
jbe
pop
jmp
sbb
xchg
sub
jp
sub
dec
jne
ficom
cmp
push
(bad)
push
push
xchg
and
cmp
lock
ss
sbb
mov
popa
js
cld
outs
push
xor
or
fbld
and
mov
mov
jge
lahf
sbb
adc
sub
imul
push
mov
repnz
cmp
inc
sbb
adc
lods
cmps
mov
retf
cld
out
cmp
lahf
dec
jno
mov
outs
(bad)
iret
pop
mov
push
test
leave
lods
enter
dec
mov
sub
fmul
and
push
gs
jo
push
cmps
int3
call
cmp
inc
sbb
adc
jg
add
xchg
pop
lea
repnz
push
dec
push
icebp
dec
bnd
icebp
push
mov
mov
inc
jp
adc
adc
inc
iret
or
push
out
fisttp
inc
test
ret
adc
retf
add
test
(bad)
push
enter
pop
dec
dec
ins
mov
cdq
pop
(bad)
rcl
fmul
mov
or
es
cmps
aaa
retf
fucomp
cmp
xchg
cmc
loop
dec
stos
call
loope
and
rcl
push
das
stc
mov
movs
jo
jno
int
aam
push
rol
int
ins
push
(bad)
retf
xor
mov
test
jl
mov
fdiv
jmp
jo
retf
push
sub
leave
jmp
sbb
jl
xchg
pop
or
push
loop
cmc
cwde
jno
stos
cli
aaa
mov
pusha
xor
out
jb
jp
pushf
aas
mov
xor
ja
adc
xor
cmp
inc
inc
ja
sbb
call
pop
lds
cmps
jge
scas
lods
xchg
xor
jmp
mov
jb
stos
ja
mov
mov
adc
loop
das
inc
data16
pusha
retf
scas
push
aad
and
nop
inc
add
sahf
icebp
mov
call
mov
cmp
jnp
and
call
ret
mov
add
jl
or
jne
sub
xchg
dec
imul
jp
mov
mov
or
cdq
cs
ja
xchg
vpandn
xchg
push
mov
aas
adc
or
mov
mov
add
adc
xor
push
imul
fcomi
cmps
and
es
sub
mov
mov
into
movs
or
mov
and
mov
mov
sbb
or
inc
stos
jmp
aas
movs
xchg
pusha
imul
sbb
dec
out
sbb
sti
shr
shl
rol
(bad)
fdivr
clc
movs
cmc
xchg
pushf
jbe
mov
adc
add
dec
mov
xchg
pop
leave
cmp
sbb
icebp
(bad)
mov
in
mov
shl
fld
enter
out
ss
in
cli
adc
xchg
arpl
icebp
and
push
pushf
shl
xchg
scas
mov
jge
movs
cmp
sti
enter
mov
mov
imul
lods
or
cli
xchg
(bad)
sar
xor
test
inc
inc
into
inc
daa
sbb
mov
scas
(bad)
cmc
or
addr16
mov
or
je
inc
clc
jo
add
int
mov
add
push
jbe
add
inc
inc
xchg
stc
dec
loope
pop
inc
inc
ret
lock
inc
fcomip
jmp
jae
lea
or
push
add
mov
jp
inc
aas
dec
ins
push
popa
sub
adc
mov
push
xchg
xor
popf
xchg
iret
cmps
mov
repnz
cmp
inc
sbb
and
popf
fistp
test
xchg
daa
sub
pop
fsub
inc
adc
and
jb
and
mov
jnp
xor
fucom
push
xchg
imul
fstp
movs
aam
adc
jb
push
mov
sbb
adc
imul
pop
inc
xchg
xchg
or
mov
gs
test
nop
sar
int3
inc
or
push
inc
inc
cld
hlt
sub
sahf
mov
sub
popa
mov
and
mov
icebp
mov
loop
(bad)
fidiv
mov
add
mov
xchg
mov
test
adc
jnp
mov
xor
mov
mov
icebp
jb
pop
jno
jns
inc
jle
mov
fisubr
imul
cwde
movs
inc
inc
inc
push
fimul
inc
scas
dec
cmps
sub
lock
fidivr
std
scas
or
inc
sbb
inc
inc
aad
add
mul
mov
mul
xor
repz
pop
scas
arpl
in
nop
xchg
sbb
(bad)
loop
mov
popa
push
add
call
jl
clc
ret
cmp
dec
sbb
push
pushf
sub
dec
cs
jg
mov
dec
mov
adc
add
ins
dec
push
fabs
pop
or
fnstenv
pushf
dec
shr
lods
add
push
jno
xchg
ds
out
add
inc
out
stos
pushf
add
js
test
rcl
cmp
adc
mov
cmp
or
or
xchg
xchg
mov
std
jle
add
out
xchg
pushf
mov
and
imul
mov
dec
or
mov
pcmpgtd
adc
pushf
lahf
mov
adc
sbb
and
pop
mov
mov
out
jecxz
mov
push
fwait
jmp
into
ins
dec
test
jmp
ins
or
xchg
shr
or
cwde
sbb
cwde
mov
adc
inc
(bad)
and
es
test
sub
and
mov
mov
jp
push
clc
push
add
pop
cmp
fidiv
ds
adc
mov
outs
cmp
nop
push
inc
paddb
(bad)
mov
in
lea
or
sar
leave
outs
dec
leave
ins
frstor
jns
xor
cld
mov
cmp
stos
mov
dec
(bad)
cmovne
xor
fs
(bad)
aam
shr
outs
cmp
sub
add
mov
pop
loope
lods
push
mov
bound
jbe
imul
pop
xor
cwde
in
daa
call
pop
ret
aam
or
add
ja
sbb
inc
fdivr
ins
je
(bad)
jl
mov
popa
int3
stos
rol
dec
jns
push
arpl
pop
inc
jbe
mov
jno
iret
sti
cmp
sub
int
ja
inc
jecxz
cli
mov
out
and
add
xor
icebp
(bad)
mov
test
icebp
and
in
mov
test
xor
push
adc
mov
xchg
mov
inc
test
mov
xchg
jecxz
or
test
xor
sub
sbb
mov
jbe
js
ja
dec
stos
xchg
jae
mov
(bad)
test
sub
or
mov
jbe
ret
sub
nop
lds
and
sub
pop
or
mov
mov
or
movs
xor
je
mov
adc
xchg
sub
sbb
add
or
popf
stc
cwde
cdq
push
mov
mov
mov
mov
repnz
cdq
out
push
clc
xor
test
add
dec
xchg
fmul
daa
sbb
enter
pop
cmp
inc
dec
scas
mov
jle
adc
or
loop
pop
(bad)
mov
pop
scas
inc
mov
mov
xor
test
aaa
jle
fs
daa
mov
idiv
cmps
xchg
xor
stos
or
jge
add
mov
and
out
icebp
or
push
std
cs
xchg
mov
scas
pop
mov
dec
push
aad
cdq
sub
cmp
mov
arpl
inc
mov
sub
push
fidivr
sbb
pop
loope
cs
fidiv
or
cdq
out
mov
pop
mov
inc
mov
stc
outs
sar
xor
bsr
aad
adc
mov
dec
not
pop
and
mov
dec
call
sbb
cmp
ds
xchg
cld
not
ret
cmp
mov
pushf
retf
dec
lock
(bad)
arpl
sub
add
jbe
and
ss
cmc
mov
push
sbb
sbb
pop
sti
lds
push
addr16
xor
push
sbb
mov
cwde
jbe
cmp
cs
adc
mov
sbb
and
(bad)
int
push
dec
scas
pusha
shl
lods
ins
dec
sub
jecxz
jmp
cmp
fucomp
stos
in
jecxz
jmp
cmps
pushf
dec
or
mov
imul
dec
add
mov
dec
inc
aaa
xlat
jl
inc
push
data16
adc
inc
xchg
clc
push
xchg
pop
cmp
int3
adc
gs
push
mov
mov
cmps
mov
ss
xchg
mov
sahf
and
mov
outs
in
push
sbb
(bad)
mov
mov
cmp
mov
outs
lea
fcomp
neg
mov
dec
xor
in
sbb
stos
mov
add
jmp
and
ror
jae
sbb
fiadd
(bad)
sub
sub
ret
or
retf
mov
imul
adc
cwde
mov
sbb
bound
pop
and
jno
hlt
xchg
imul
cmp
and
mov
out
mov
cmps
int
rcr
leave
cs
aam
arpl
or
aam
bound
sbb
sbb
retf
jo
ja
fxch
mov
daa
popf
sti
push
ret
xlat
add
repz
or
pop
sub
sti
mov
leave
cld
push
adc
lea
push
movs
ins
or
pop
lods
mov
enter
in
push
jge
adc
lock
and
push
ss
inc
jg
sub
mov
(bad)
push
into
mov
cld
arpl
addr16
test
movs
lods
test
outs
sbb
aaa
mov
mov
or
in
dec
sbb
mov
popf
inc
sbb
sbb
lods
jecxz
pop
jo
and
sub
xor
iret
loope
sub
pop
aaa
int3
(bad)
pop
pop
adc
pop
call
imul
sub
mov
xchg
nop
out
cmp
jmp
inc
rcr
les
popa
stos
test
mov
adc
push
mov
push
fstp
dec
outs
inc
dec
jo
arpl
push
jbe
fsub
mov
mov
jg
aas
test
enter
dec
sar
out
xchg
cmp
jecxz
repz
sbb
pushf
add
enter
mov
ins
pop
cmps
cmp
out
jae
inc
xor
sbb
xor
push
xlat
push
push
pop
xchg
pop
(bad)
dec
jno
add
add
in
jmp
dec
sub
inc
stos
or
xchg
loop
cmc
cwde
test
call
push
psrlq
pop
jmp
daa
out
push
pop
pop
push
push
pop
cld
cmps
lods
ins
rol
pop
mov
ret
bound
cwde
mov
xchg
xlat
fild
or
jb
mov
rol
adc
pop
jns
call
xchg
pop
hlt
xor
mov
stos
xlat
dec
iret
xor
(bad)
mov
test
lahf
add
(bad)
sbb
nop
in
mov
popf
fidivr
push
dec
idiv
mov
cmp
adc
inc
cli
push
mov
(bad)
cmp
jg
cmps
clc
push
xor
je
adc
(bad)
arpl
in
xchg
dec
je
fwait
dec
les
cmp
test
add
and
inc
push
jge
loopne
xor
sub
repnz
in
push
fwait
(bad)
inc
les
enter
jg
push
adc
fidivr
in
outs
imul
in
push
or
push
inc
imul
push
jge
sbb
sub
dec
in
popa
(bad)
or
rol
mov
fist
mov
sahf
bswap
mov
sbb
ss
cmps
fsub
sub
push
fs
inc
or
push
inc
repz
adc
sbb
pop
inc
test
xchg
out
neg
ds
or
ins
inc
out
imul
pop
sub
sbb
ret
in
xor
jg
pushf
jnp
repz
sti
push
sub
dec
xlat
jnp
cdq
lock
pop
mov
sub
pusha
dec
inc
sbb
les
cmp
mov
(bad)
adc
cli
test
push
cmp
jb
mov
pop
cmp
sbb
je
mov
mov
repnz
fimul
pop
retf
mov
enter
add
js
adc
(bad)
push
mov
jnp
test
inc
jb
ret
sbb
sti
scas
mov
push
mov
add
push
clc
sub
mov
dec
push
add
lods
into
loop
jnp
and
das
sub
and
pop
cs
rcr
(bad)
cmp
int
xor
adc
and
leave
push
nop
cmp
inc
pop
std
movs
pop
fwait
sbb
mov
sub
retf
js
push
imul
cmc
xor
pop
or
iret
in
adc
add
sbb
ja
(bad)
ret
pop
mov
mov
call
outs
jbe
leave
mov
es
test
popf
push
mov
stc
push
mov
lds
jle
test
jne
jl
xchg
push
cmps
jge
sti
inc
lea
shl
mov
in
(bad)
sub
ror
xchg
fld
cli
add
enter
imul
cdq
dec
retf
sub
dec
inc
dec
lds
jp
mov
out
out
gs
inc
imul
test
mov
mov
rcl
cld
outs
dec
sub
out
add
xor
xchg
leave
xor
jle
xor
fwait
mov
jecxz
lahf
mov
in
out
pop
add
xor
push
jp
sub
or
mov
jl
sahf
in
in
aam
xchg
push
icebp
cmc
dec
push
repnz
cmp
sbb
out
push
fnstsw
out
retw
mov
add
adc
pop
lods
cwde
sbb
outs
dec
xlat
dec
sub
xchg
xchg
fcmovu
test
movs
clc
add
cmp
jmp
adc
pop
mov
add
fwait
call
mov
es
test
push
adc
mov
push
push
scas
pop
or
or
fimul
jbe
loope
movs
xchg
or
dec
shl
fcom
push
dec
movs
pop
mov
imul
inc
push
pushf
or
imul
push
jmp
push
sar
test
cld
dec
hlt
xor
mov
mov
(bad)
hlt
cwde
lods
scas
retf
femms
mov
adc
and
out
mov
cld
cmp
int
or
jecxz
push
push
jge
imul
das
jmp
add
sbb
push
jne
jo
cmc
fsubp
dec
xchg
and
pop
aaa
and
cmp
xlat
rcl
cwde
pop
pop
ins
lods
cmp
push
xor
inc
das
in
movs
sub
sbb
jmp
push
inc
cwde
jg
lods
add
aaa
mov
xor
lea
add
icebp
jecxz
cvtdq2ps
mov
jge
xchg
scas
jmp
sbb
xchg
add
inc
or
(bad)
adc
gs
mov
shr
ret
fst
mul
xchg
xchg
add
lahf
(bad)
(bad)
imul
retf
jp
mov
jnp
lods
or
call
xor
retf
add
mov
in
aam
push
pop
ret
inc
dec
inc
add
pop
repz
xchg
cli
arpl
cmp
dec
in
leave
and
ins
adc
mov
cmc
add
out
(bad)
scas
or
sbb
xor
add
adc
push
cmp
mov
push
nop
pop
jno
sbb
int
cmp
rcl
std
mov
je
out
out
xor
inc
xchg
das
cdq
retf
popa
mov
iret
mov
out
mov
push
xor
sub
jl
es
push
test
mov
add
fst
aas
push
pop
sub
in
sbb
pop
push
mov
push
or
inc
xchg
cmp
rcl
imul
add
sub
inc
pop
stos
int3
pop
cmc
(bad)
(bad)
fucomp
daa
mov
sbb
jno
sahf
hlt
call
sub
mov
ss
les
jae
push
mov
jbe
push
jmp
jno
(bad)
scas
icebp
mov
jmp
outs
gs
cmp
js
sahf
mov
inc
jae
fxtract
dec
es
dec
and
mov
push
pop
add
nop
in
push
jns
add
cdq
test
adc
fnsave
pop
mov
sub
call
imul
out
(bad)
dec
test
psllw
call
shl
mov
sub
cmp
mov
jg
push
and
jp
sbb
or
xor
outs
fild
sahf
scas
mov
mov
arpl
add
or
adc
out
sub
pop
ins
in
and
and
dec
pushf
mov
mov
fnstenv
pop
inc
mov
or
ins
xchg
aad
push
and
pop
(bad)
out
lods
or
xchg
cmp
dec
aad
popa
xchg
retf
out
loope
push
adc
ret
in
push
inc
and
adc
ret
mov
and
es
mov
dec
iret
(bad)
das
ss
mov
sub
addr16
fnsave
or
fsub
add
shl
div
inc
scas
mov
sar
pop
sbb
ja
cmp
out
mov
or
mov
pop
mov
stos
test
ror
stos
fcmovb
mov
outs
sbb
hlt
pusha
lds
or
jmp
inc
jae
imul
sbb
call
or
fcmovnbe
shl
fnstcw
mov
cmc
loope
jecxz
pop
mov
push
mov
rol
jmp
cmp
jbe
mov
fwait
push
fmul
xor
push
div
sbb
pop
jmp
test
out
xor
mov
push
lods
aad
add
jbe
out
call
jae
sahf
sub
enter
cmp
sub
fisttp
test
sti
jp
xor
mov
inc
repnz
and
lods
mov
dec
xchg
cwde
push
test
jmp
enter
call
add
xor
cmp
mov
icebp
ret
lods
fwait
add
test
lahf
mov
data16
ja
cmps
cmps
xor
sbb
in
jnp
sar
scas
push
cmps
out
jmp
test
push
shl
mov
call
pop
fs
and
xlat
scas
dec
xchg
movs
icebp
in
push
inc
lock
loop
cmp
push
or
sbb
loopne
outs
iret
aaa
xor
sar
and
jmp
sub
or
loope
dec
jno
sbb
push
out
mov
push
push
js
push
dec
nop
and
xchg
mov
jmp
xchg
sbb
fwait
test
xchg
pushf
outs
in
hlt
inc
push
xor
inc
frstor
retf
mov
mov
je
mov
xchg
inc
or
xchg
lock
ret
test
cmp
shl
xor
and
das
add
nop
jl
push
sbb
(bad)
cwde
fistp
dec
cmc
xlat
jecxz
push
repnz
cmp
pusha
rcl
xchg
lahf
es
fsubr
jmp
dec
sub
shr
aas
push
mov
loopne
mov
xchg
pop
adc
fwait
inc
std
dec
dec
mov
pushf
mov
repz
lea
out
jecxz
out
pop
arpl
or
hlt
cld
jno
inc
xchg
pop
out
mov
jmp
shl
and
jo
movs
daa
out
push
in
test
add
fwait
jns
fstp
sbb
push
aam
fmul
jb
mov
add
mov
push
xchg
loop
in
mov
lods
gs
pop
fadd
cmp
push
aam
lea
inc
call
push
xor
cli
sar
cld
(bad)
jb
xchg
mov
popf
cdq
mov
cmp
das
sub
stos
ret
push
mov
leave
jecxz
sub
xor
std
lods
jl
adc
out
leave
sbb
imul
movd
cli
xchg
aas
xchg
rcl
clc
pusha
mov
inc
std
(bad)
inc
lods
(bad)
mov
data16
cmp
test
fild
xchg
popf
sahf
jmp
fstp
sub
and
ins
inc
fstp
xchg
sbb
xchg
call
(bad)
mov
and
pop
int
sti
(bad)
dec
fnstsw
add
mov
jmp
sub
jmp
xor
cwde
ins
jno
jo
jp
xchg
xor
jne
rcr
rcl
or
call
rcl
es
jmp
xchg
stos
dec
pushf
arpl
nop
jb
rol
jl
jle
inc
in
sbb
jg
icebp
sti
add
mov
cmp
pusha
ficomp
sbb
test
loope
jg
dec
out
push
inc
xor
(bad)
ret
mov
xchg
sub
xor
aam
cmc
popa
repz
sbb
cmps
add
jg
jg
(bad)
fidivr
xor
or
pop
ins
psubusw
push
stc
popa
xor
fbstp
sar
pop
pop
sbb
test
pop
arpl
sub
neg
mov
ror
cmps
inc
fwait
cs
std
jno
jge
jb
js
imul
ret
pop
mov
adc
mov
jle
jmp
addr16
clc
jne
sub
mov
adc
xor
in
sbb
mov
loope
mov
out
lahf
out
rcl
mov
push
pop
out
push
add
mov
es
fsubr
mov
dec
xchg
enter
pop
mov
movs
jg
push
or
mov
or
popf
cmc
sub
inc
pop
pop
in
pusha
mov
dec
xchg
xchg
pop
adc
test
ins
or
imul
cmps
sub
mov
shr
pop
cmp
sub
es
pop
jmp
cmp
or
mov
call
sub
xchg
and
gs
sub
test
xchg
cwde
mov
stos
mov
stc
cld
add
sahf
jmp
mov
out
arpl
and
dec
or
test
xor
and
cmp
and
jae
(bad)
pop
mov
lock
mov
inc
pop
movs
into
mov
push
mov
cmps
into
jns
pop
popa
imul
mov
fsubr
push
fstp
xor
jmp
popf
sub
adc
pop
in
ins
jl
cmp
push
jp
xor
(bad)
into
inc
push
and
(bad)
rcr
xor
mov
push
bound
dec
fistp
mov
cmp
jno
iret
pop
push
ins
push
sti
call
mov
jae
or
jl
in
sbb
mov
stc
rcl
pushf
outs
into
es
ins
push
push
push
pop
push
xor
loop
jp
test
fild
aas
cmp
scas
out
ja
mov
movq
test
dec
pop
pop
mov
jbe
sub
inc
mov
xchg
cmc
push
das
sbb
lock
add
aam
fwait
in
add
cmps
cld
test
aam
enter
sbb
movs
push
test
dec
imul
aas
xor
jnp
sub
xchg
dec
outs
add
xchg
mov
nop
std
mov
and
enter
jp
int
or
jl
push
(bad)
xor
add
aad
(bad)
repz
inc
loop
cmc
ds
add
xchg
out
push
addr16
pop
mov
jge
push
jae
sti
add
add
shl
scas
dec
int3
cwde
scas
mov
cwde
adc
xchg
mov
adc
push
sahf
in
sub
pop
aad
xor
fcomi
sub
or
enter
rcr
cmps
adc
lds
std
pop
xchg
sar
sub
xchg
inc
pop
in
cmp
mov
jge
lahf
iret
jne
or
inc
pusha
sahf
iret
xchg
fild
jns
adc
xchg
add
out
sbb
test
cwde
pop
add
popf
adc
pusha
mov
sbb
fiadd
adc
dec
push
and
inc
mov
xchg
ror
push
cmps
ss
push
push
mov
sahf
mov
inc
stos
adc
je
mov
sbb
mov
push
stos
adc
fisttp
push
dec
mov
mov
sub
cli
adc
jo
loop
add
xor
pushf
(bad)
push
scas
inc
xchg
xor
xchg
sbb
pop
xchg
mov
mov
aaa
or
adc
(bad)
scas
xchg
push
int
push
xchg
sub
xchg
cmp
mov
push
cld
out
dec
fimul
or
(bad)
jbe
loop
test
repnz
xor
adc
test
in
int
jno
loopne
hlt
xor
pop
or
xchg
inc
inc
push
bound
xchg
aaa
xor
lods
mov
mov
push
lods
popf
lods
adc
sbb
mov
add
push
loop
sbb
imul
test
mov
push
aas
pop
pop
sub
retf
stos
mov
push
push
retf
fisttp
mov
sbb
test
hlt
loope
mov
push
aas
push
adc
dec
nop
adc
pop
sahf
iret
and
jmp
push
push
mov
and
dec
loopne
and
stos
and
adc
jns
shl
jnp
in
pop
mov
icebp
(bad)
adc
jge
out
icebp
enter
xor
sbb
add
fmul
adc
ret
es
pop
in
int
call
jmp
in
mov
ins
add
xor
adc
movlps
push
sbb
lods
scas
dec
jg
js
sbb
add
add
and
mov
mov
mov
cwde
mov
sub
xor
cmc
sub
jae
loop
int3
push
aad
aam
mov
mov
or
jo
pop
fmul
loope
sub
cs
movs
pop
mov
mov
stc
mov
sbb
cwde
sbb
stos
ds
pop
ja
cwde
lgs
pop
and
jecxz
pop
lock
sub
mov
neg
cmp
cwde
mov
fidiv
pop
adc
push
xchg
pusha
cmp
repz
clc
inc
fwait
popf
and
call
mov
mov
jne
enter
cwde
loope
je
xchg
and
sbb
fstp
sub
cdq
mov
loopne
jb
ret
sub
sar
rcl
fwait
inc
dec
outs
push
movs
pop
mov
lods
shr
jo
repz
jne
pop
adc
xor
nop
dec
scas
cmc
out
pop
sbb
shl
sbb
add
bound
xchg
mov
dec
add
sub
mov
and
and
or
mov
aad
dec
mov
iret
or
mov
mov
and
dec
dec
outs
adc
add
dec
(bad)
push
scas
add
stos
hlt
pop
cmp
mov
sahf
ins
gs
loop
imul
push
and
push
xchg
call
inc
jnp
call
add
in
pop
aaa
in
dec
jb
pop
test
fstp
cmps
xchg
lds
inc
push
gs
mov
or
loop
imul
aam
push
lahf
or
int
repz
arpl
jo
or
repnz
xchg
jae
rcr
add
(bad)
and
in
inc
push
outs
movs
jmp
xchg
out
mov
adc
loop
or
adc
mov
fld
push
sti
xor
test
mov
cmp
and
popf
inc
into
movs
dec
popf
inc
pop
add
and
jne
repz
sub
call
int
aas
fisubr
das
or
mov
cmp
cmps
xor
mov
dec
lds
cwde
xor
iret
retf
(bad)
cdq
jp
add
cmp
adc
pop
lods
jo
inc
out
mov
shl
cmp
lock
daa
sbb
and
scas
push
mov
(bad)
scas
mov
mov
lods
mov
cmp
and
mov
mov
(bad)
in
push
or
mov
xchg
jge
ds
fdiv
ins
jge
and
out
inc
addr16
jecxz
ins
into
mov
adc
fild
xchg
cld
jnp
dec
push
loopne
in
ret
inc
push
mov
outs
in
cli
xlat
loop
lahf
lds
mov
inc
xlat
(bad)
xlat
push
jle
jmp
push
sbb
fisttp
loopne
mov
daa
out
sbb
mov
mov
mov
mov
cmp
fimul
fistp
mov
fcomp
rcr
sbb
mov
mov
ds
ud1
push
pop
mov
cmps
mov
out
push
imul
mov
push
jns
push
mov
xchg
dec
dec
imul
scas
rcr
xchg
jge
xchg
fcmovu
daa
xchg
fs
popa
out
push
push
or
or
mov
and
sub
mov
cdq
xchg
cld
(bad)
lock
mov
cmp
dec
pop
mov
arpl
in
mov
(bad)
cdq
jnp
sub
rcr
test
pushf
jle
push
ss
mov
push
push
xchg
arpl
aaa
mov
push
int3
dec
fstp
or
fnstenv
movs
sbb
ret
shl
add
mov
shl
retf
adc
fdiv
or
or
cmp
out
in
push
cmp
mov
bound
leave
out
dec
shl
fcmovne
dec
cmc
ins
push
fsub
sub
cmps
inc
mov
dec
and
fadd
push
add
ret
mul
and
repz
push
ret
xchg
jp
ret
movs
dec
dec
in
scas
adc
not
dec
mov
add
add
fild
lock
push
call
inc
les
cld
dec
stc
cmps
xor
ds
jge
or
xchg
ret
sbb
pop
adc
xchg
add
mov
mov
test
ja
imul
cli
cmp
data16
jp
test
or
cdq
jl
dec
ret
test
mov
stos
jns
xchg
je
div
scas
ins
mov
imul
sbb
push
inc
in
cld
shl
je
mov
and
pushf
shl
daa
ret
push
push
dec
push
cmc
scas
sahf
adc
xchg
je
stc
pop
jge
push
push
shr
jmp
sub
cmps
leave
xor
dec
daa
cwde
imul
push
mov
aaa
imul
mov
sbb
out
pop
push
ret
retf
clc
xchg
jo
scas
mov
inc
cmp
jmp
or
fs
mov
sbb
mov
jmp
dec
sub
ret
pop
inc
jmp
(bad)
mov
or
lods
les
fadd
pop
xor
jbe
mov
lahf
ret
push
mov
call
adc
call
mov
aaa
int
dec
dec
je
xor
bound
fidiv
sbb
cmp
shl
cli
jne
in
xlat
sub
mov
retf
mov
and
inc
jg
outs
mov
sbb
aaa
int
lahf
add
mov
xchg
aam
inc
scas
push
fdecstp
add
push
xchg
push
mov
xor
xchg
lea
popf
mov
cmps
popa
nop
sub
sub
xlat
popa
hlt
inc
sar
fwait
leave
sbb
push
pop
cdq
shl
lahf
add
retf
mov
mov
jle
xor
test
mov
(bad)
(bad)
dec
jo
clc
sub
jbe
fsubr
mov
jae
cmps
xor
fsubr
jo
sbb
push
adc
lds
ret
shl
retf
retf
add
imul
jl
scas
jbe
jmp
stc
rcl
(bad)
fcom
dec
cmp
rol
mov
mov
addr16
(bad)
daa
jp
pop
ins
mov
push
jmp
fist
jae
cmps
mov
xchg
cmp
push
sahf
mov
add
sbb
cmp
cdq
fwait
ja
pushf
int3
adc
sar
call
jo
ja
(bad)
mov
je
push
outs
push
dec
test
pop
xor
cmc
enter
adc
add
xchg
popf
inc
pop
mov
jbe
outs
ss
inc
adc
inc
mov
hlt
dec
inc
outs
mov
or
call
jmp
sub
ret
push
pusha
jl
and
sti
pusha
fs
mov
and
pusha
and
bound
in
movs
push
mov
push
inc
mov
jp
fistp
sbb
lods
inc
jmp
xchg
ror
pop
cmps
adc
rcl
mov
call
adc
jge
ds
dec
nop
test
cmp
aas
push
repnz
xor
fmul
(bad)
arpl
add
push
add
xor
jmp
sub
jl
aaa
fsubr
xor
inc
add
jmp
push
mov
sbb
out
test
retf
xchg
outs
pop
jmp
cmp
je
nop
sahf
push
or
and
sbb
sahf
lods
fld
add
test
push
push
sbb
movs
cmp
push
lods
cmp
cmp
arpl
aad
movs
sbb
inc
call
movs
mov
push
je
dec
jecxz
(bad)
repz
cmp
or
mov
mov
mov
xchg
dec
cmp
mov
mov
dec
inc
jae
push
jbe
mov
in
ret
or
jo
leave
inc
pushf
mov
jmp
in
pop
mov
call
mov
sub
cdq
add
or
retf
mov
xchg
mov
(bad)
mov
div
(bad)
mov
mov
(bad)
outs
sahf
mov
mov
add
clc
fbld
in
adc
pop
or
cs
sub
out
inc
xchg
loop
cmp
test
mov
ret
in
pop
cs
mov
outs
jae
jns
aaa
imul
lock
scas
stc
(bad)
push
adc
retf
xor
and
stos
mov
pop
out
test
outs
lods
rcl
pop
push
xchg
pop
push
xchg
lahf
jnp
imul
cmp
and
addr16
lods
xchg
shl
add
sbb
lea
mov
adc
sbb
int3
int
push
data16
(bad)
cmp
pusha
fldenv
in
pop
mov
dec
sbb
push
daa
outs
adc
gs
ds
mov
shl
xor
pop
inc
(bad)
sbb
or
push
outs
in
push
int
xor
outs
iret
add
cmps
cdq
aaa
js
stc
and
pusha
pop
pushf
mov
sub
xor
shr
mov
les
fs
bound
sub
adc
test
jle
cmps
int
xor
jne
push
xor
mov
idiv
imul
sar
aas
shl
icebp
push
cdq
sub
cmc
test
cmp
js
aad
jae
les
jbe
and
push
popa
fdiv
or
ret
xor
dec
retf
in
or
pushf
sbb
push
adc
push
lea
mov
outs
push
aas
dec
add
int3
or
xor
cli
lds
or
push
leave
gs
cmp
lods
nop
jno
ins
fnstcw
sbb
mov
mov
jg
test
pop
pop
iret
(bad)
div
scas
je
mov
mov
cli
jg
neg
repnz
mov
pop
mov
test
mov
leavew
sbb
stc
pop
or
std
mov
rol
cmp
(bad)
mov
jmp
mov
mov
cmc
sbb
or
mov
scas
enter
ja
ja
sar
mov
fwait
in
call
dec
and
cmps
jle
ret
mov
scas
retf
push
pop
cmp
cdq
icebp
mov
mov
mov
in
ret
sbb
push
mov
cs
jecxz
jg
mov
cmc
pop
mov
call
test
rol
in
mov
loop
adc
push
push
jb
xchg
dec
push
icebp
pop
imul
hlt
test
dec
push
cld
popa
addr16
retf
leave
outs
sub
pop
in
jle
sbb
ret
push
mov
xchg
icebp
inc
daa
sub
jmp
outs
out
mov
mov
popa
xlat
sbb
jmp
mov
(bad)
aam
dec
inc
int3
outs
nop
icebp
push
popf
mov
cld
clc
xchg
out
imul
xchg
out
fdiv
xchg
or
adc
inc
adc
jge
test
mov
xlat
aas
inc
retf
xchg
int
movs
in
xchg
rcl
or
ret
push
in
dec
xor
sub
hlt
xchg
aam
inc
fwait
call
icebp
repnz
std
cmps
jmp
in
dec
mov
inc
or
mov
xchg
dec
xchg
out
mul
bound
xor
sub
push
(bad)
mov
test
(bad)
sbb
add
sub
push
xchg
xor
sbb
inc
in
xchg
sbb
xchg
repnz
adc
inc
push
pop
fistp
mov
xor
pop
les
mov
imul
xchg
lds
imul
repnz
mov
dec
cmps
cmc
pop
or
adc
js
xor
mov
xor
clc
repnz
adc
dec
mov
cmp
push
int3
inc
ds
sbb
ss
mov
pop
shl
lock
inc
(bad)
cld
add
in
mov
xlat
sub
in
in
add
repnz
out
cmp
fdiv
jp
enter
in
dec
push
xor
cs
std
mov
xchg
(bad)
cld
inc
pop
loopne
or
cmc
lods
cmp
lods
imul
jno
(bad)
(bad)
repnz
cli
movs
add
into
paddusb
mov
adc
adc
xlat
xor
mov
cli
add
sub
push
repnz
fld
xchg
ds
loopne
pop
popa
icebp
enter
aas
ret
loope
(bad)
rcl
pop
xchg
mov
out
xor
inc
fdivr
push
dec
jecxz
xchg
cmp
push
leave
lock
xchg
inc
adc
outs
jae
push
aam
ret
(bad)
push
repz
or
outs
xor
dec
and
loope
xchg
out
sub
xchg
dec
leave
ins
loope
aad
aaa
cmc
ror
sbb
sub
jno
inc
stos
jg
mov
mov
push
lea
mov
dec
adc
cmp
call
cwde
hlt
mov
cmps
rcl
push
mov
or
rol
hlt
scas
into
mov
ss
in
cli
das
push
sbb
add
call
adc
movs
loope
xchg
jb
adc
loopne
ins
jmp
jbe
fcomp
(bad)
out
gs
gs
repnz
inc
dec
dec
and
pusha
addr16
addr16
push
sbb
int3
mov
in
fscale
inc
xor
in
loop
movs
xor
cmps
sub
pop
lods
push
in
ror
sub
fcmovnu
vmread
les
ror
test
pop
(bad)
hlt
inc
adc
push
mov
and
into
(bad)
out
mov
cmp
xor
pop
inc
pusha
leave
shl
loop
mov
daa
cli
cmps
adc
and
retf
outs
sub
nop
push
fisubr
push
jns
std
enter
jmp
btr
retf
push
cmp
cli
imul
add
xor
dec
or
out
push
fs
call
call
mov
jae
cmp
jmp
sti
dec
ins
cld
inc
and
jp
lahf
cmp
(bad)
fs
inc
test
xchg
sub
mov
pop
out
mov
pop
(bad)
addr16
gs
jl
xor
out
out
sbb
mov
sbb
sbb
hlt
int3
or
xchg
jmp
into
mov
sti
jle
outs
stos
fwait
mov
sub
ja
pop
out
bound
sbb
pop
pop
cmp
dec
xor
or
test
xchg
leave
rcr
dec
xor
xchg
mov
pop
push
xchg
pop
aam
mov
inc
sbb
stos
or
jbe
mov
loopne
lds
add
xor
enter
(bad)
ins
movs
mov
cmp
mov
out
mov
add
cmp
into
cmc
bnd
xor
inc
pop
jae
push
push
mov
cwde
sbb
cmc
jae
retf
arpl
xchg
xchg
inc
push
inc
inc
mov
mov
mov
lock
data16
and
mov
ds
mov
mov
cmp
jp
sbb
aad
dec
nop
mov
jne
cs
dec
adc
dec
or
sub
pushf
jnp
lock
cmp
in
fisubr
push
pop
das
pusha
fxch
pop
mov
add
in
clc
xchg
loop
mov
iret
push
cmp
les
or
inc
stos
retf
ret
aaa
mov
ret
inc
sub
xchg
sar
mov
mov
fimul
icebp
(bad)
jne
gs
add
gs
cmp
loopne
jne
pusha
jae
retf
repz
fs
cld
lahf
pop
enter
cmps
inc
xor
bound
sub
ror
aad
movs
cmp
mov
loopne
xor
cmp
dec
add
add
test
pusha
xchg
pop
xchg
pop
jle
shl
sub
dec
call
push
cmp
jo
push
js
cmp
pop
les
sti
bound
mov
lahf
xchg
mov
sub
movs
fidiv
andps
mov
or
addr16
fistp
mov
mov
in
xor
je
add
rol
adc
test
adc
aas
test
dec
jmp
push
jle
hlt
jp
push
fldenv
pushf
ja
loope
int
push
jle
mov
xor
xchg
ins
dec
neg
jo
dec
and
adc
mov
inc
clc
pop
pop
scas
call
inc
inc
add
ja
or
(bad)
pop
cwde
shl
mov
add
or
jg
jne
nop
jmp
jmp
cmp
cmp
idiv
inc
hlt
jecxz
stc
data16
popa
pop
push
mov
ret
mov
xor
pop
sahf
inc
adc
(bad)
cli
in
push
dec
in
push
jmp
and
pop
(bad)
sti
(bad)
(bad)
mov
and
cld
inc
adc
repnz
dec
mov
xor
ret
ret
scas
jmp
push
sub
neg
xor
sub
popa
std
dec
jge
fsubr
and
or
es
jg
clc
inc
xor
xchg
jle
xor
xor
ret
dec
shr
(bad)
push
imul
dec
retf
stos
popf
mov
out
in
imul
out
mov
test
lods
mov
pop
adc
popf
inc
cld
sar
out
bound
xchg
inc
inc
and
mov
jo
enter
jae
sub
mov
ins
xchg
stos
lahf
sahf
adc
xchg
cmp
fs
push
jmp
and
mov
(bad)
jecxz
repnz
xor
shl
mul
scas
pushf
test
sub
ss
test
int
pop
or
pushf
repz
xchg
sbb
add
imul
fwait
lods
adc
mov
int
mov
gs
and
xchg
and
neg
aam
xchg
imul
pop
cmp
iret
test
test
sbb
pop
xchg
iret
int3
mov
push
mov
mov
(bad)
dec
retf
mov
into
lods
jge
dec
mov
neg
fst
mov
push
cmp
inc
(bad)
mov
mov
inc
inc
leave
out
enter
jne
jp
push
push
inc
inc
ss
in
cmp
mov
aas
out
ss
cli
mov
and
out
xchg
cmc
popa
mov
cmp
xlat
iret
in
pusha
shl
call
mov
dec
mov
cmovge
mov
push
jns
push
in
scas
and
jmp
fs
dec
push
cmp
enter
xchg
inc
fist
fsubr
mov
inc
jmp
retf
sub
or
add
enter
inc
mov
dec
scas
dec
and
sahf
lods
pop
stos
xchg
inc
xchg
push
jge
sbb
stos
mov
jge
inc
(bad)
in
(bad)
dec
push
xchg
add
loope
sub
sub
lods
cs
push
loope
mov
scas
test
icebp
xchg
mov
lock
and
push
jne
pop
mov
xchg
dec
xchg
and
aad
or
outs
int
inc
mov
aaa
adc
stos
mov
inc
int
dec
movs
inc
and
(bad)
(bad)
jge
add
inc
inc
adc
push
in
push
retf
lods
sbb
icebp
(bad)
enter
arpl
cmp
cli
xor
mov
xor
shr
fiadd
shr
jle
enter
and
les
shl
jp
pop
faddp
fwait
or
adc
push
sti
push
and
push
shl
enter
or
pop
retf
xor
scas
adc
shl
xor
icebp
outs
dec
sub
xchg
mov
outs
cdq
fsub
(bad)
xor
xchg
cwde
xor
cmc
mov
sti
fbld
clc
bound
pop
push
jns
cmps
xchg
add
ret
es
or
fwait
push
mov
aaa
sbb
push
cld
push
call
scas
mov
sar
or
addr16
idiv
cwde
xchg
call
in
sti
inc
lahf
sub
clc
adc
or
inc
cmp
hlt
jb
in
jno
rcr
mov
jmp
nop
movs
int
sbb
movs
xor
add
mov
dec
leave
dec
(bad)
addr16
pop
stos
jle
push
sub
xor
adc
push
lahf
arpl
jbe
xchg
jae
out
call
jae
mov
jno
mov
mov
sbb
mov
dec
inc
inc
arpl
leave
cmp
(bad)
and
and
mov
pop
in
out
int3
sub
es
mov
pop
pop
ss
xchg
pop
cmp
push
(bad)
leave
repz
movs
int
mov
pop
fs
pop
gs
inc
mov
in
or
and
movs
stos
(bad)
jnp
push
adc
popf
jo
std
cld
push
adc
sbb
popf
inc
clc
push
scas
inc
cmps
lock
jge
cmc
lahf
jno
adc
inc
inc
push
bound
inc
adc
shl
dec
mov
(bad)
xor
aaa
jnp
imul
push
cmp
mov
scas
xor
fisub
or
cmp
ins
adc
add
and
out
leave
jbe
cmp
retf
push
cmp
int
(bad)
in
sbb
cwde
int3
movs
aad
cmp
add
sbb
adc
mov
stc
adc
outs
mov
sub
in
(bad)
repz
in
bound
cmp
stos
cmp
rcl
inc
mov
(bad)
mov
and
dec
mov
out
adc
neg
mov
mov
popf
adc
add
and
adc
repnz
fs
repnz
sbb
adc
in
sahf
mov
xchg
cmp
fsub
bound
lods
outs
mov
jns
xchg
iret
jno
pop
leave
xor
push
xor
push
pushf
arpl
and
(bad)
std
dec
out
data16
pop
call
les
dec
test
and
inc
test
sbb
or
data16
xchg
hlt
mov
out
aam
test
jl
jo
scas
adc
cmp
mov
(bad)
xchg
clc
ins
jbe
loop
sub
inc
mov
(bad)
mov
pusha
jmp
sbb
mov
clc
pop
xor
es
dec
pop
addr16
dec
(bad)
movs
mov
aaa
retf
mov
call
dec
mov
dec
stos
leave
es
arpl
imul
cmp
loopne
jmp
sbb
and
pushf
add
neg
inc
mov
(bad)
iret
ror
(bad)
jmp
jo
sub
sub
xor
rcl
aam
jns
ret
adc
xchg
xchg
test
es
mov
shr
shl
int
dec
mov
mov
and
dec
mov
in
aam
cmp
mov
cmp
mov
mov
loop
enter
xchg
dec
movs
inc
lahf
das
movs
push
mov
cmp
add
or
push
loopne
add
pop
es
cdq
or
jbe
and
sub
cmp
push
repz
or
lods
jp
pop
or
ret
and
fst
enter
lds
sub
mov
fwait
and
mov
cs
or
jmp
mov
inc
mov
mov
out
ret
das
call
mov
shr
pop
push
sbb
xchg
pop
adc
je
jns
mov
jmp
mov
pop
mov
cmps
dec
cmc
jb
iret
add
push
mov
ret
dec
inc
xchg
(bad)
or
fcmovbe
mov
popa
mov
jp
daa
in
addr16
xor
mov
outs
aad
xor
arpl
rol
int3
xor
rol
sbb
adc
pop
cmps
aas
pop
repnz
(bad)
cmp
sub
dec
mov
xchg
into
neg
cs
sub
mov
shl
loopne
or
jmp
pop
jb
fdivr
mov
pop
pop
in
mov
stos
inc
mov
add
cdq
push
ds
adc
jl
add
push
mov
pmullw
cli
sub
js
pusha
sbb
enter
and
mov
scas
mov
inc
lods
or
mov
fdivr
mov
retf
frstor
mov
jne
test
inc
dec
dec
xor
inc
inc
push
(bad)
std
clc
popa
ror
add
sub
sbb
inc
outs
jmp
call
cmp
pop
inc
push
jmp
dec
ins
mov
push
sbb
push
push
add
xchg
and
test
popf
jb
mov
mov
out
out
xchg
popa
cmc
or
out
aaa
iret
mov
stos
loop
fbstp
xor
test
icebp
cs
clc
and
sub
cmp
js
leave
inc
xchg
cmp
out
mov
out
scas
sbb
out
retf
addr16
mov
dec
popa
call
and
mov
iret
and
cmp
add
mov
xchg
add
adc
aad
or
repz
jge
ffreep
inc
jg
neg
icebp
test
test
inc
push
ins
adc
push
dec
sbb
and
sub
cmp
imul
cli
mov
jge
mov
add
mov
nop
in
ins
stos
push
cmp
pop
mov
jae
pop
mov
adc
stos
test
call
dec
int
sub
sahf
ds
dec
inc
cdq
cmp
in
inc
adc
(bad)
mov
(bad)
push
ds
enter
int
xchg
add
pop
das
mov
loopne
lea
aam
xchg
jl
jae
and
leave
mov
cmps
lahf
stos
fbstp
pop
sub
popa
call
jl
hlt
cmp
mov
mov
retf
jecxz
pop
add
pop
lds
or
test
pop
(bad)
repz
aad
xlat
inc
int3
inc
in
inc
sub
sbb
in
ins
call
ss
push
outs
mov
add
pusha
mov
outs
and
xchg
mov
mov
adc
mov
fidiv
pop
enter
fisttp
cmc
neg
or
cmc
dec
inc
push
cld
sti
loope
cvtdq2ps
jae
and
out
mov
js
test
cld
adc
xor
popa
sbb
xor
hlt
xchg
call
adc
sub
xor
push
ins
(bad)
cwde
or
jmp
sbb
jmp
fidiv
or
cmp
pushf
jb
in
clc
or
fsin
cdq
lods
jge
(bad)
movs
mov
xchg
push
scas
pop
stos
retf
mov
mov
dec
cld
add
repz
aaa
jo
aaa
stos
ins
or
pop
ficomp
(bad)
in
shl
stc
loope
mov
fidivr
push
push
xor
in
xchg
inc
dec
sub
lods
ss
dec
mov
test
dec
cdq
jne
xor
cmps
xor
xchg
jmp
inc
sbb
jo
mov
inc
stos
push
xchg
lahf
mov
shl
push
mov
inc
jg
push
cmc
movs
ror
lock
jno
add
dec
repz
enter
sbb
fnstsw
(bad)
or
adc
lods
cmp
push
loop
jo
xor
ja
dec
mov
pop
push
dec
inc
stos
(bad)
(bad)
cmps
mov
(bad)
in
daa
push
adc
dec
add
pop
jp
push
stos
enter
pop
mov
repnz
xor
in
out
mov
test
or
or
inc
inc
inc
fs
rol
call
outs
add
outs
fwait
pop
out
int
xchg
jne
mov
push
xor
out
(bad)
shl
mov
and
out
pop
mov
sbb
cmp
inc
cwde
inc
or
scas
mov
js
test
mov
jno
xchg
dec
add
fbstp
cmp
nop
loop
dec
push
aas
inc
mov
jecxz
call
sbb
scas
out
cmp
ret
aaa
dec
cmp
aam
push
and
mov
lock
mov
jno
jg
mov
fsubr
push
pop
inc
cmp
adc
inc
rcr
(bad)
sti
cld
movs
sub
adc
pusha
mov
xlat
inc
cmp
dec
xor
popf
cwde
cs
fwait
jb
test
loop
and
iret
inc
mov
inc
sub
lds
xchg
mov
jge
push
fs
jnp
in
inc
mov
mov
mov
xor
xchg
ret
stos
ror
out
test
mov
mov
das
(bad)
js
dec
pop
addr16
xchg
jne
nop
mov
push
sbb
mov
aad
fdiv
xor
cmp
(bad)
out
jmp
into
enter
pop
and
cmp
std
fild
jmp
jmp
movs
push
pop
sbb
into
iret
daa
adc
pop
mov
out
(bad)
mov
into
sahf
fdivp
add
(bad)
push
hlt
cmp
sub
xchg
popa
cli
jl
ja
and
inc
jg
cmp
ja
ins
out
mov
ss
lahf
dec
lods
retf
push
pop
xor
xor
jmp
add
movs
repz
mov
mov
es
xchg
jg
xchg
lods
mov
cdq
outs
pop
cld
scas
hlt
adc
les
movs
sub
dec
pop
pop
mov
int3
dec
sub
mov
xchg
push
fwait
leave
sbb
adc
repz
mov
fs
aam
(bad)
and
dec
ds
test
xchg
repz
cmp
jne
ja
scas
je
inc
pop
(bad)
sub
aam
aaa
clc
call
pop
enter
mov
out
sti
push
cmp
loop
push
jae
mov
push
jmp
stos
mov
div
adc
ret
cmps
mov
mov
adc
cwde
(bad)
dec
cmc
retf
mov
jns
pop
mov
jle
fidivr
addr16
stos
xor
jmp
or
cmp
cmp
les
push
in
jecxz
loopne
mov
xchg
or
imul
repz
and
push
add
in
mov
sbb
stos
or
outs
loop
pop
pop
mov
cmps
cmp
add
inc
lds
std
pop
pop
inc
inc
loope
ret
push
ja
mov
shl
cmp
les
dec
jbe
stc
cwde
jecxz
or
cld
sub
movhps
add
in
push
je
outs
aam
inc
cmp
ja
inc
call
ret
shl
scas
or
push
push
and
cmp
xor
or
inc
xchg
mov
sti
push
sbb
mov
sub
mov
cs
in
adc
inc
rcr
daa
mov
sbb
sbb
xchg
cmps
mov
mov
mov
xchg
repnz
test
or
sub
out
jge
cmp
mov
mov
sub
push
outs
ins
mov
enter
push
(bad)
loop
(bad)
out
cdq
repnz
mov
mov
fxch
retf
loopne
cmc
mov
mov
or
outs
pop
push
call
dec
out
psllw
sbb
adc
mov
cmps
dec
jmp
in
dec
pop
mov
int3
adc
pop
jnp
outs
pop
std
lods
gs
push
push
dec
or
dec
outs
xor
xor
aaa
cmp
xchg
sub
jg
push
push
in
(bad)
lds
jmp
jmp
jecxz
or
xor
dec
xor
mov
stos
mov
dec
mov
mov
xchg
mov
hlt
(bad)
push
scas
mov
xlat
and
mov
jmp
mov
mov
aaa
fcmovu
mov
leave
xchg
jno
adc
jmp
dec
xor
daa
xor
fyl2x
ja
popa
dec
dec
push
xchg
mov
ror
xor
imul
pushf
jl
bound
gs
sbb
loop
outs
loopne
or
aas
out
xchg
arpl
mov
rol
mov
inc
push
and
xor
push
nop
mov
shl
xchg
cmp
jbe
sub
ins
mov
ret
pop
or
xchg
or
xchg
stc
arpl
aas
aaa
scas
mov
mov
cs
inc
rol
aas
xor
add
xchg
pop
mov
mov
mov
and
mov
fiadd
fmul
or
mov
idiv
pop
fdiv
outs
lods
dec
data16
jae
fsubr
sub
mov
dec
xchg
(bad)
cmp
xchg
push
inc
test
fmul
fcomp
cwde
repz
inc
test
cmps
push
mov
mov
xchg
mov
xchg
repnz
push
mov
scas
hlt
neg
push
fsub
in
pop
shl
fwait
xchg
jmp
stos
dec
and
out
push
xchg
sti
jo
shl
inc
movs
movs
sbb
not
push
ret
lods
add
cmp
dec
xor
jle
mov
and
fwait
cmp
pop
jmp
enter
cmps
je
shl
test
mov
in
daa
mov
dec
mov
stos
mov
push
or
mov
(bad)
stc
test
outs
leave
enter
enter
or
sub
aas
fimul
fwait
imul
fs
es
idiv
shl
sub
ret
sar
add
jmp
push
pop
cmp
dec
fwait
cmps
ja
aam
mov
fild
mov
jg
and
(bad)
jb
imul
push
push
push
fdivr
push
mov
mov
scas
sbb
mov
retf
cmps
into
add
mov
cmc
adc
pop
mov
mov
mov
movs
pop
pushf
lock
mov
mov
stos
or
mov
jecxz
mov
std
loope
push
mov
xchg
add
pop
clc
hlt
inc
jge
dec
jmp
dec
call
xchg
sub
push
cmps
in
xor
push
add
fmul
mov
mov
mov
jnp
xchg
ja
lea
fmul
add
loope
or
xchg
sub
push
xor
push
mov
jno
nop
dec
ss
scas
cmp
std
mov
fist
mov
push
icebp
mov
mov
sbb
jb
inc
movs
outs
push
imul
push
jmp
add
jns
sub
mov
pop
sar
push
push
in
sbb
fwait
jmp
inc
cmp
push
xor
and
add
cmp
mov
pop
shl
inc
mov
inc
sub
inc
jnp
inc
and
or
push
pop
retf
mov
je
shl
iret
iret
cmc
es
mov
xor
(bad)
inc
dec
je
out
dec
sbb
lock
cdq
pop
cli
inc
aad
repnz
inc
iret
or
inc
jae
ror
fiadd
(bad)
arpl
(bad)
xchg
addr16
outs
jne
mov
pop
dec
stos
add
cmp
ins
xor
je
jmp
test
sub
pusha
xor
dec
jns
fisttp
dec
arpl
mov
push
xchg
dec
push
add
stos
imul
ret
xchg
mov
adc
stos
cmp
add
jns
icebp
add
xchg
fwait
and
stos
xchg
lock
leave
xchg
jb
dec
wrmsr
jae
lds
push
lea
mov
mov
or
mov
mov
mov
(bad)
jo
int
xlat
mov
dec
cli
aas
adc
jnp
jno
test
xchg
or
push
mov
adc
mov
ret
loopne
push
aam
iret
cmc
pop
pop
hlt
cmp
cmp
mov
and
(bad)
or
mov
pushf
jl
lods
add
mov
adc
retf
fisub
dec
jns
in
adc
or
mov
(bad)
(bad)
xor
inc
dec
mov
adc
popa
sub
sar
retf
pusha
ss
push
(bad)
shl
adc
stc
shl
daa
jnp
call
push
popf
cld
and
and
push
sbb
cs
ins
rcl
dec
jns
lods
mov
sbb
dec
fldcw
jmp
mov
pop
jle
and
push
iret
xchg
test
mov
lea
mov
mov
lahf
or
mov
mov
inc
push
jae
out
test
and
fcomp
xchg
test
arpl
fcomp
or
xchg
cmc
sub
sbb
pop
div
les
ins
cmps
out
retf
mov
xchg
xchg
test
or
scas
cwde
imul
mov
cmps
fcomp
add
jmp
mov
movs
imul
pop
fsin
jbe
jl
mov
sti
outs
jp
and
or
xor
mov
imul
repz
or
imul
mov
push
outs
xor
and
add
sub
push
data16
js
test
in
add
jmp
mov
dec
retf
cmp
fistp
ins
imul
mov
rcl
pusha
mov
pop
push
push
jbe
aaa
push
cmp
(bad)
ror
push
retf
sub
cmp
daa
dec
in
pop
jnp
or
xor
mov
xor
pushf
add
jne
add
fs
or
or
adc
js
rol
jne
add
std
retf
aaa
into
jmp
jae
cmps
adc
movs
jo
mov
cmp
std
push
inc
jmp
inc
in
fbld
push
push
call
and
arpl
or
cmc
in
cmps
xor
mov
xchg
sti
xor
mov
aas
sbb
or
pop
mov
pop
frstor
mov
mov
push
push
cmp
mov
fistp
inc
sbb
xchg
div
sti
add
cmps
cld
pop
xchg
outs
dec
jnp
mov
mov
ret
stos
adc
dec
mov
data16
jge
jns
push
fstp
sbb
ror
push
pop
and
(bad)
push
out
data16
push
shr
(bad)
adc
jge
jmp
rol
cli
ins
inc
in
push
adc
fnstenvw
mov
int3
in
push
lods
stos
mov
jno
cld
push
aas
rol
adc
and
push
mov
scas
cld
ins
lods
out
jge
sub
mov
mov
pop
pop
lock
mov
in
mov
and
jmp
adc
dec
int3
(bad)
in
aaa
imul
xchg
push
inc
js
loopne
int3
sub
or
jmp
add
and
repz
scas
jbe
enter
test
cs
leave
in
and
mov
scas
xor
adc
mov
push
cmc
es
shr
push
push
std
dec
pop
adc
pop
or
sub
pushf
push
ds
push
(bad)
shl
adc
sbb
dec
or
sbb
aaa
ins
rol
inc
and
in
adc
dec
fs
repnz
std
or
(bad)
(bad)
and
jp
adc
adc
xchg
lock
jnp
or
or
fisubr
push
fwait
push
frstor
jl
ja
dec
jp
cmp
sahf
jbe
mov
mov
call
cwde
add
loop
push
dec
mov
mov
shl
inc
cmp
es
cmp
inc
pop
shl
jmp
in
mov
xor
loopne
mov
movs
dec
in
cmp
push
ins
outs
push
push
ins
int
outs
retf
push
mov
xor
hlt
(bad)
retf
add
mov
jle
out
jbe
sbb
nop
clc
idiv
sbb
fist
or
xchg
dec
xchg
out
mov
or
sub
pop
dec
dec
test
js
into
loope
mov
fwait
jg
add
jae
fistp
adc
rol
xchg
lods
out
or
fwait
imul
(bad)
mov
mov
out
push
icebp
aam
cmp
push
pop
(bad)
addr16
mov
xchg
out
or
mov
jo
xchg
jmp
jmp
fcomp
fdivr
aam
(bad)
and
cmp
loope
sub
lea
and
mov
loope
add
loop
and
xor
mov
mov
xor
(bad)
jnp
aaa
cwde
das
sub
push
pop
push
(bad)
dec
aas
inc
pusha
movs
stc
xchg
sbb
cmp
shr
(bad)
sbb
test
idiv
gs
add
mov
push
xor
addr16
mov
add
and
cmps
dec
sub
push
adc
pop
or
jl
inc
loopne
pop
jmp
mov
fiadd
mov
into
in
sbb
(bad)
repnz
cmp
mov
push
test
mov
mov
enter
dec
mov
xor
(bad)
outs
sti
push
aam
test
jae
popa
jne
mov
add
xor
xor
in
push
mov
or
mov
xchg
or
push
shl
loopne
scas
clc
dec
jle
mov
or
in
add
bt
retf
not
out
int
pop
push
or
int
mov
retf
js
push
stc
mov
add
push
xor
jmp
inc
icebp
std
or
inc
(bad)
int
mov
sbb
enter
mov
bound
retf
fidiv
test
xor
cmc
repnz
pusha
mov
icebp
dec
test
jnp
pop
push
shl
lea
cmp
mov
and
scas
dec
xchg
shr
mov
push
xor
fucomi
pop
jmp
stos
push
into
dec
jns
rcl
aas
pop
stc
lea
mov
scas
cmp
cmp
(bad)
cmp
sahf
cmp
rol
mov
cmp
popa
inc
pop
jp
stos
adc
retf
push
(bad)
push
stos
rol
jne
dec
fisub
jmp
sub
or
xchg
out
and
sbb
xchg
fbstp
push
push
out
out
jmp
scas
push
sub
or
dec
test
leave
dec
aam
push
adc
movs
clc
jle
addr16
push
test
xor
cmp
dec
pop
dec
dec
push
stos
cdq
add
jbe
inc
dec
sbb
leave
icebp
dec
rcr
sbb
mov
jmp
jo
sub
mov
xchg
mov
jge
hlt
sub
xor
jl
data16
das
and
mov
repz
sub
mov
lods
adc
aas
jnp
inc
xchg
mov
addr16
bswap
xor
mul
mov
shr
lds
test
xchg
adc
xchg
fbstp
mov
xlat
das
jmp
mov
fstp
adc
pop
ret
out
nop
dec
mov
push
imul
add
rol
ror
cli
cmps
into
jecxz
and
mov
mov
sahf
push
inc
jge
inc
loopne
cli
pop
loop
mov
cdq
dec
sahf
loope
mov
sbb
mov
jno
fiadd
and
leave
sti
cmp
xchg
shl
xor
pop
or
add
hlt
mov
lods
inc
and
pop
dec
jge
xor
dec
nop
cmp
std
add
pop
shl
xlat
sbb
rcr
out
out
loopne
inc
xchg
fadd
fwait
adc
lea
sti
hlt
add
ins
ja
ror
sahf
fmul
pop
fdivp
fwait
ins
ror
and
mov
loopne
jns
dec
pusha
jmp
inc
jns
imul
adc
xchg
es
mov
push
mov
addr16
jbe
test
out
js
ins
mov
cmp
or
push
mov
mov
mov
lods
loop
mov
(bad)
xor
sahf
stos
lds
lea
jecxz
cld
sub
xor
cmc
cli
push
jmp
scas
or
pop
js
outs
fcmovb
jnp
cli
hlt
rcl
pop
lods
xlat
sub
or
and
push
adc
mov
scas
addr16
loope
pop
pop
mov
push
es
in
test
inc
mov
ror
clc
jp
inc
pop
mov
add
icebp
shr
dec
mov
ret
fyl2xp1
mov
push
push
or
rcr
mov
mov
sbb
pop
inc
xor
leave
rol
ds
or
hlt
xchg
nop
in
inc
enter
mov
xchg
jae
jnp
shl
lods
pop
fdivr
je
mov
mov
mov
out
pop
inc
gs
popf
adc
lods
std
mov
cs
mov
rcr
inc
inc
cmp
mov
add
cmps
call
xchg
mov
fidivr
sar
add
mov
jmp
inc
fist
mov
adc
(bad)
icebp
out
leave
mov
ret
pop
cli
fsubp
cdq
popf
jmp
dec
cmps
rcl
mov
or
push
gs
leave
dec
push
fcmove
and
sub
jnp
sbb
add
inc
mov
jne
pushf
enter
add
cmc
in
stc
push
cmps
jge
adc
cmp
in
xlat
shl
dec
les
pop
mov
pop
(bad)
je
jns
and
jge
(bad)
neg
adc
stos
sub
push
je
cmp
xchg
outs
dec
call
(bad)
adc
stos
ret
outs
jecxz
push
fcmovnbe
dec
dec
movs
inc
sahf
imul
div
sub
mov
jg
sar
imul
repz
sbb
or
(bad)
mov
test
mov
ins
push
ret
arpl
inc
jecxz
test
pop
mov
ret
adc
addr16
adc
pop
adc
out
inc
gs
sar
or
in
jbe
call
mov
repnz
sar
adc
nop
inc
jmp
cwde
in
ret
rol
xor
sahf
in
loope
add
sbb
fwait
xchg
mov
mov
jp
push
in
jp
shl
fistp
in
adc
je
(bad)
xor
mov
test
retf
sahf
push
dec
mov
out
mov
pop
frstor
push
inc
dec
pop
aad
fcomp
fimul
push
jmp
movs
push
nop
mov
xor
push
pop
cwde
inc
lods
pop
sbb
nop
pop
add
and
cld
adc
xor
and
in
stos
fistp
aas
rcl
out
add
outs
xor
das
stos
clc
xor
adc
rcr
aad
cld
cmp
mov
cwde
sbb
mov
inc
scas
xchg
shl
jg
(bad)
sbb
daa
aaa
leave
sub
(bad)
mov
aas
and
lods
jge
sbb
sub
pop
cmps
test
jno
mov
push
movs
out
jb
pushf
mov
push
xlat
cmp
adc
and
adc
cmps
xchg
jne
inc
pop
push
and
rcr
pop
push
out
repnz
jle
movs
and
adc
push
jnp
and
inc
outs
adc
jns
pushf
cmp
aaa
ja
test
jne
pop
push
xchg
add
mov
imul
iret
inc
cmp
or
(bad)
out
and
pop
mov
enter
aad
cmp
das
bound
aam
in
mov
into
mov
jns
add
pop
lea
ror
addr16
xchg
xchg
push
outs
mov
and
xlat
daa
or
jbe
fcmovne
popf
jno
dec
sbb
cmps
aaa
adc
cdq
loop
mov
popf
pop
pop
popf
inc
stos
jecxz
jnp
dec
scas
jmp
test
ror
enter
ss
adc
arpl
push
mov
movs
iret
push
cmps
data16
gs
test
jmp
push
ja
aaa
sbb
mov
shl
mov
scas
push
loop
vaddsubpd
jecxz
cmp
imul
stos
(bad)
(bad)
loope
jno
jle
mov
push
cmp
mov
sti
(bad)
outs
xchg
(bad)
lds
out
dec
cmp
and
fwait
sahf
jo
or
push
adc
adc
jmp
xchg
push
mov
inc
(bad)
push
mov
inc
adc
push
add
mov
push
mov
sbb
ficomp
jp
sub
mov
push
cs
mov
lds
push
ja
or
push
inc
cmp
pop
xor
out
jbe
and
lods
mov
and
or
mov
push
adc
das
push
pop
lds
adc
mov
or
mov
imul
imul
mov
inc
or
sub
dec
mov
inc
mov
lds
shr
iret
out
lea
cwde
mov
pop
xor
dec
(bad)
dec
add
aam
push
lods
pop
jge
mov
jno
ret
mov
dec
mov
mov
mov
push
ja
jg
repnz
pop
movs
cmp
mov
push
ds
dec
mov
stos
fmul
pop
xlat
out
mov
adc
cmp
gs
mov
dec
ins
add
into
xor
test
push
and
push
sbb
dec
mov
shl
push
xor
inc
or
out
hlt
out
aam
xchg
jne
js
das
jmp
loope
xchg
adc
test
lahf
sub
inc
in
mov
sbb
and
inc
sets
cwde
jmp
(bad)
cs
xor
lods
data16
cmp
retf
cmps
mov
xchg
pusha
js
jecxz
pop
inc
fistp
fwait
mov
fucomip
imul
add
cmp
cmc
or
sbb
inc
cmps
and
dec
or
hlt
xor
pop
test
daa
retf
xchg
loop
enter
repnz
adc
xchg
pushf
sbb
push
fild
push
cwde
mov
test
mov
loopne
ficom
out
loop
push
call
pop
mov
bound
mov
mov
popf
out
inc
mov
and
add
(bad)
xor
(bad)
daa
lods
cwde
xchg
cdq
push
js
bnd
int3
dec
lods
shr
leave
mov
scas
outs
sbb
push
stos
aaa
aam
imul
lea
sbb
sbb
adc
into
aas
sub
mov
fld
sub
das
fidivr
fimul
(bad)
out
in
add
cdq
xchg
jle
xchg
mov
and
mov
sbb
(bad)
div
nop
psubb
arpl
adc
jl
mov
add
and
add
sbb
inc
pop
and
enter
cmp
lds
xchg
mov
adc
mov
test
pop
je
mov
scas
outs
mov
adc
mov
jmp
shr
loopne
cli
lock
mov
xor
pop
add
sahf
mov
mov
loopne
gs
fcomip
clc
outs
inc
ja
dec
lods
inc
push
scas
add
div
mov
(bad)
std
(bad)
adc
adc
aad
test
test
xchg
arpl
jno
pushf
sub
dec
mov
repnz
mov
jmp
pop
loope
cmp
sub
cs
jbe
mov
xchg
pop
test
mov
movs
lea
pop
mov
dec
dec
in
xor
outs
adc
clc
addr16
pusha
fdiv
daa
sub
shl
ficomp
arpl
cwde
dec
mov
cmc
out
add
jp
and
and
pop
loopne
mov
daa
loope
push
ja
mov
(bad)
out
push
cmp
mov
jmp
push
ins
inc
stos
imul
arpl
dec
xor
pop
inc
popf
iret
jbe
sub
sar
scas
jo
mov
adc
jae
pusha
dec
sbb
aaa
mov
inc
dec
or
arpl
xor
mov
call
jg
inc
jecxz
pop
mov
inc
dec
sub
inc
cmp
aas
or
mov
jl
sbb
jmp
sahf
adc
in
mov
mov
pop
dec
xlat
rcl
dec
xchg
pop
inc
xor
jb
popa
fdiv
pop
dec
dec
add
fwait
adc
push
pop
mov
sbb
das
clc
and
scas
xchg
dec
jns
and
pop
ficomp
mov
adc
pop
sbb
add
mov
jbe
mov
enter
cli
das
fs
scas
mov
test
je
repz
test
rcl
into
and
in
data16
pop
sahf
cmc
(bad)
nop
ss
dec
int3
sbb
xor
or
add
cmc
sar
jb
mov
jae
and
or
mov
inc
retf
mov
mov
cmp
mov
mov
pop
arpl
retf
mov
addr16
dec
in
rol
out
aam
add
mov
cli
push
cmc
shr
(bad)
pop
(bad)
hlt
ret
xor
in
stos
sbb
bound
in
sti
test
sahf
xchg
sub
inc
xchg
mov
cld
add
ins
das
pushf
xchg
out
mov
jns
add
adc
in
hlt
stos
mov
sbb
xchg
mov
stos
jne
mov
arpl
cmc
pop
mov
pop
dec
aam
pop
aaa
xchg
sub
loopne
lahf
loope
pop
fmul
(bad)
dec
jge
dec
out
add
pop
fimul
mov
scas
js
mov
mov
sub
xor
fistp
inc
sti
daa
inc
add
stc
xchg
mov
cwde
stc
and
add
jl
fwait
leave
ret
sbb
dec
cld
or
lods
sub
iret
inc
adc
xchg
xor
sub
or
cld
push
mov
add
lock
xchg
ror
jmp
cmc
ins
aad
cmp
pop
(bad)
mov
mov
fwait
test
movs
mov
add
add
push
push
push
aaa
pop
stc
jmp
cmp
xor
imul
jnp
mov
pop
imul
cmps
popf
imul
jecxz
aam
mov
dec
or
xchg
push
fldcw
retf
mov
and
mov
aad
xchg
add
cmp
dec
outs
fstp
cmc
push
fsub
cli
adc
shl
add
gs
arpl
pop
sar
hlt
fdivr
lods
and
cdq
ficomp
or
jns
sti
lods
pop
xor
jnp
mov
jl
jmp
cmp
emms
mov
mov
push
lods
mov
adc
les
xchg
in
fcomp
or
and
sub
and
xor
jge
mov
stc
test
add
sub
inc
cmp
in
cwde
mov
mov
push
mov
lods
test
repnz
sbb
sbb
cs
push
idiv
in
adc
rcr
inc
test
xchg
add
call
inc
rcl
pop
lods
push
out
shl
scas
js
xor
cmp
inc
adc
mul
or
test
mov
stos
jg
cmp
push
aam
test
jmp
dec
loop
mov
push
dec
fwait
cmp
test
rcl
xor
xor
mov
enter
es
daa
inc
pop
retf
and
pushf
dec
out
addr16
scas
jle
and
dec
mov
repnz
test
push
das
cmovo
rdpmc
xor
inc
sahf
push
outs
inc
pop
jge
in
cmps
ins
outs
std
mov
pushf
add
mov
mov
daa
cld
mov
pushf
stos
mov
pusha
xchg
int3
sbb
jae
push
sbb
sub
stc
and
dec
xchg
out
sub
retf
cmp
sbb
clc
jmp
cmp
dec
inc
out
(bad)
cmp
call
nop
aam
and
sbb
enter
fisttp
repnz
dec
push
ss
test
mov
mov
nop
outs
(bad)
cli
repz
sbb
cmps
aaa
or
xchg
push
sbb
pushf
pop
es
icebp
lock
jge
mov
lods
imul
mov
dec
aaa
jne
sbb
in
mov
pop
pop
test
xor
std
test
jno
sbb
out
adc
loope
and
icebp
or
cmps
pop
daa
pop
cmc
sbb
adc
fs
jge
mov
adc
mov
xor
icebp
inc
mov
in
sbb
ficom
stos
pop
lea
push
mov
pop
fimul
mov
sbb
lds
sbb
sub
das
lods
lock
out
pop
adc
xor
dec
jno
adc
jmp
in
xchg
call
into
pop
jmp
imul
cld
push
out
mov
xchg
push
and
iret
mov
mov
sbb
std
inc
sub
ficom
sbb
xchg
sub
fsub
push
mov
dec
fiadd
popf
sahf
xchg
inc
dec
neg
test
mov
fldcw
push
pop
cmp
iret
inc
add
ret
pop
popa
and
imul
outs
push
sbb
push
jge
sub
lahf
(bad)
lods
sub
(bad)
aas
iret
imul
dec
xlat
add
mov
xor
fnstsw
(bad)
jl
xor
test
inc
sub
adc
mov
sbb
push
outs
loope
into
scas
(bad)
ret
pop
arpl
adc
jecxz
jge
adc
adc
inc
jb
xchg
xchg
pop
pop
dec
arpl
inc
icebp
leave
jnp
or
jmp
lock
test
daa
retf
fucomi
jg
push
fisub
adc
cmp
movs
repz
dec
xchg
xchg
jne
xor
push
fsubr
sbb
xchg
dec
cmp
pop
inc
jp
jmp
sub
inc
add
scas
out
call
adc
inc
mov
inc
sub
call
pop
int
xchg
jmp
icebp
cmp
out
aaa
rcr
test
test
aam
and
mov
sub
int
ins
sub
pusha
icebp
or
dec
mov
pop
push
pop
ja
movs
xor
jae
aad
jmp
mov
out
idiv
xchg
xchg
std
cmp
or
push
or
cmp
mov
sbb
lods
dec
jmp
push
mov
dec
retf
cmp
mov
aam
xor
dec
mov
int
rol
mov
cld
ror
(bad)
mov
or
(bad)
fidivr
and
add
(bad)
ror
cwde
pop
and
mov
jb
inc
int3
mov
fmul
cwde
or
scas
das
mov
imul
and
sbb
adc
cmp
adc
xchg
mov
scas
jmp
outs
sub
mov
or
push
shl
lahf
add
aas
or
mov
fcom
iret
pop
idiv
ja
jmp
adc
shl
pop
dec
mov
clc
daa
mov
jne
adc
xor
cwde
aaa
idiv
jns
addr16
xchg
pop
in
call
loope
xchg
sub
xchg
inc
fs
xor
scas
sbb
pop
movs
call
cld
rol
push
cmp
inc
enter
add
xchg
pusha
add
cmps
iret
inc
repnz
ds
mul
push
mov
sub
pop
loope
mov
cdq
adc
inc
int3
test
stos
sbb
ins
sbb
test
pop
mov
sub
nop
shl
dec
mov
int
jo
(bad)
pop
rcl
jle
out
sbb
pop
rcl
repnz
inc
shl
ret
sbb
adc
popf
aam
ret
stos
jg
mov
mov
out
in
cld
push
adc
mov
lea
jae
(bad)
iret
mov
hlt
push
cmp
lods
gs
loope
inc
jge
mov
mov
mov
sbb
mov
jg
push
mov
jmp
pop
push
mov
push
shl
wrmsr
shl
jmp
xchg
mov
stos
sbb
shl
adc
mov
xor
int
cmp
mov
imul
mov
cmp
dec
daa
mov
call
fsub
ja
test
jb
es
call
int3
jno
popf
xor
pop
add
loopne
or
jae
add
retf
sbb
cmp
loope
mov
mov
ds
retf
(bad)
cs
mov
in
test
popa
sub
aaa
sbb
inc
dec
mov
aam
into
add
and
adc
xor
cmp
movs
dec
fadd
xchg
inc
aas
cdq
ins
imul
or
jb
retf
push
movs
mov
js
xchg
jl
jmp
inc
mov
rcr
xor
add
xchg
lock
ficomp
jmp
adc
aam
(bad)
lock
popf
adc
test
in
sbb
mov
inc
daa
jne
xchg
dec
in
fimul
pop
sub
gs
inc
push
sub
js
out
sbb
hlt
je
push
das
mov
add
addr16
out
popa
imul
sbb
(bad)
test
inc
lea
fcmovbe
clc
or
popa
mov
mov
mov
mov
jge
dec
pop
stos
imul
mov
test
movs
inc
jbe
ds
retf
inc
sahf
or
shl
bound
out
inc
cmp
push
movs
pop
stc
retf
addr16
dec
sub
mov
and
scas
(bad)
push
loope
mov
sub
or
nop
xchg
repz
mov
inc
cmps
sub
push
or
add
pop
inc
or
outs
outs
push
push
xchg
test
adc
jmp
and
inc
xchg
pop
enter
call
and
fidivr
jno
xor
ins
(bad)
mov
loop
and
mov
xor
gs
test
dec
pop
sub
outs
xchg
sbb
pop
lods
jnp
data16
mov
sub
add
cmp
mov
push
xchg
shl
ins
jge
sar
cwde
mov
movs
sub
sub
addr16
and
xchg
(bad)
jnp
jl
sbb
pop
jbe
pop
stos
cdq
and
pop
xor
fist
repnz
int
dec
test
sub
(bad)
mov
int
xchg
xchg
dec
iret
dec
mov
xor
dec
dec
pop
xchg
shl
sub
aas
retf
push
sbb
aad
into
mov
dec
loopne
jnp
nop
loope
jb
or
in
adc
aas
out
pop
dec
cmp
sub
clc
pmulhw
pop
sub
ins
sahf
daa
jnp
mov
xor
push
inc
loop
ja
xlat
mov
jbe
xor
xor
(bad)
out
push
xchg
xor
xchg
cmps
lahf
jp
jb
je
pop
mov
mov
mov
cmps
retf
mov
idiv
popa
adc
sbb
xchg
pop
and
inc
push
dec
out
add
cmps
mov
sbb
pop
add
dec
xchg
jge
ficom
leave
out
or
ret
adc
repnz
cld
add
and
pop
dec
push
xchg
pop
lods
inc
icebp
cmp
pop
add
sub
ror
ja
push
shr
dec
or
lods
dec
or
pop
dec
daa
call
and
add
ror
retf
(bad)
push
sub
inc
lahf
int3
sub
and
mov
aam
int
inc
push
fadd
and
lods
cli
sahf
stos
jb
push
dec
shrd
mov
push
jne
pop
sbb
cdq
xchg
push
loope
repz
cmp
pop
cmp
sbb
adc
sahf
push
mov
or
outs
pop
lods
call
sub
lahf
mov
ins
xor
test
rcl
xchg
nop
cdq
dec
sbb
sbb
push
jbe
xchg
sahf
fst
or
fbstp
adc
dec
dec
mov
add
mov
dec
arpl
ror
stc
cs
sbb
xchg
pop
test
lock
push
sbb
pop
sar
call
adc
pop
xlat
jmp
push
pop
inc
leave
sbb
and
inc
inc
imul
cmp
mov
push
loopne
sub
rol
pop
xchg
(bad)
loopne
jnp
enter
lahf
stc
xor
rcr
retf
xor
add
mov
and
clc
push
pop
ja
pop
jne
push
movs
sub
push
iret
or
mov
mov
iret
sbb
outs
rcl
ja
add
popa
inc
jnp
retf
cmp
xchg
jl
dec
adc
popa
pop
sbb
mov
int3
sbb
inc
cmp
adc
xor
clc
or
shl
sbb
stos
imul
jg
dec
ret
jne
(bad)
(bad)
les
sbb
shl
add
add
call
enter
xlat
loopne
xor
cmp
inc
xor
stos
mov
push
loopne
mov
lds
dec
(bad)
jp
jnp
movs
mov
ins
bound
test
fisubr
add
and
cmc
xor
pop
xchg
mov
cli
in
sbb
add
pop
or
call
or
pop
ret
fstp
repnz
add
es
cmp
out
retf
push
dec
outs
add
push
xchg
data16
or
push
ss
mov
repz
jne
xor
add
mov
push
(bad)
mov
(bad)
lods
mov
inc
fld
inc
pushf
push
pop
push
cli
xchg
lods
shl
int3
aad
xchg
push
cmp
out
fdivr
ja
jg
adc
cmp
or
rol
(bad)
shl
pop
sbb
outs
scas
pop
out
jmp
jae
std
mov
or
test
pop
and
and
das
out
inc
test
dec
lods
push
cli
mov
mov
in
call
cdq
cdq
mov
cli
call
xor
sub
mov
addr16
repz
dec
add
add
popf
xor
jmp
clc
jns
loope
stos
xchg
sti
addr16
fiadd
push
mov
xor
add
dec
fild
pop
inc
dec
push
adc
ror
cmp
xor
mov
xchg
mov
stos
jecxz
cmp
ret
push
push
jno
in
jbe
jb
jp
xor
cmp
push
adc
shl
cmp
jnp
ins
mov
in
cmp
jno
inc
pop
aam
mov
push
popf
clc
lods
ror
inc
push
add
fs
stc
sub
xor
(bad)
popf
es
daa
fiadd
outs
push
inc
nop
jmp
or
sub
or
fist
and
cmp
xchg
sbb
cs
xchg
cmp
dec
inc
mov
icebp
loopne
push
mov
(bad)
add
(bad)
daa
outs
pop
adc
stos
ja
dec
movs
jle
sahf
dec
pop
dec
pop
out
dec
es
(bad)
pop
push
mov
xor
sbb
jge
fcomp
push
scas
sbb
fisttp
sahf
(bad)
or
sub
aas
jb
push
lds
sbb
and
jbe
fbld
es
xor
cmps
shl
xchg
mov
sti
push
mov
shr
ins
cmp
cld
(bad)
push
cmps
retf
fcomp
sbb
jbe
adc
adc
push
mov
test
push
mov
adc
in
mov
es
data16
mov
mov
out
fnstenv
pushf
stc
test
mov
fisub
in
push
movs
mov
or
mov
mov
mov
(bad)
hlt
add
enter
jo
xor
call
std
sbb
or
in
xchg
jl
mov
cli
fnstenv
dec
jne
in
popf
retf
pop
fidivr
or
cmc
jb
jo
cs
dec
inc
cs
and
imul
jge
dec
jmp
and
sbb
jmp
leave
repnz
ror
push
xor
jmp
cmp
and
nop
scas
xor
mov
imul
pop
test
pushf
movs
and
shl
xor
(bad)
push
adc
jmp
les
lods
fucomi
or
imul
ja
stc
call
pushf
adc
pop
out
mov
out
stc
pushf
cmp
xchg
pop
das
cmc
int3
add
add
mov
mov
outs
dec
call
je
or
fcom
add
sub
sbb
out
hlt
push
jmp
or
or
inc
pop
mov
dec
mov
punpckhdq
jmp
jl
dec
test
or
xlat
push
cmp
xor
outs
repnz
arpl
out
retf
push
adc
jmp
mov
lds
loopne
sub
sub
sbb
daa
sbb
mov
mov
xor
mov
movs
and
pop
jno
mov
outs
ja
stos
cdq
mov
out
sbb
sbb
adc
inc
sub
sar
adc
cmp
enter
ss
cs
popf
sahf
fwait
adc
and
fsubr
cmp
mov
sub
mov
(bad)
cmp
mov
aaa
inc
arpl
fstp
mov
popa
mov
clc
ret
out
(bad)
pusha
mov
and
stos
pop
addr16
in
jmp
cdq
nop
jmp
mov
dec
sbb
pop
pop
cs
xor
mov
dec
and
jb
push
xchg
leave
pop
pushf
mov
and
addr16
out
ret
mov
imul
ror
push
xor
adc
inc
jae
xchg
imul
xor
xchg
adc
jae
or
sbb
arpl
cmp
fdivr
fld
sub
sub
mov
scas
sub
clc
ret
cmp
jnp
adc
xchg
hlt
mov
fimul
std
add
jo
neg
dec
adc
jbe
test
dec
popa
neg
jmp
jmp
mov
mov
jge
cmp
stos
mov
mov
ficom
ja
sti
dec
jl
adc
fdivr
popa
or
or
es
ret
jnp
cmp
xchg
lahf
jecxz
sbb
cdq
stos
fld
cmp
sub
and
ret
scas
jmp
push
mov
adc
xchg
cli
fstp
dec
xchg
jo
mov
out
push
and
fadd
mov
retf
movs
add
cwde
cld
mov
inc
mov
movs
push
pop
loope
add
sti
cmp
(bad)
lahf
sbb
xchg
ins
push
adc
in
cmp
pop
and
(bad)
jmp
jg
repz
out
mov
scas
jno
or
(bad)
and
jno
mov
sbb
xchg
ror
sub
jmp
mov
and
mov
add
sbb
inc
ds
test
mov
stos
mov
jo
test
call
inc
mov
lds
sub
pop
mov
xchg
jp
or
xor
jmp
addr16
inc
mov
or
inc
adc
daa
dec
int
je
adc
mov
and
into
scas
loope
adc
retf
jnp
rcr
shl
and
cdq
test
mov
leave
int
movs
dec
or
and
retf
inc
popa
jmp
and
mov
cmc
mov
sub
mov
in
cmp
push
sub
imul
sub
jmp
xlat
jb
idiv
sbb
mov
or
dec
pop
(bad)
cmc
sub
pop
not
add
je
stos
sbb
cmp
jo
or
cmp
imul
pop
cwde
call
and
jae
adc
jns
mov
add
retf
ss
ss
stos
pop
or
mov
mov
adc
(bad)
xchg
or
jmp
push
pop
push
int3
movs
in
dec
mov
adc
push
inc
loopne
sbb
sti
jecxz
stos
popf
or
mov
jmp
in
push
into
lods
push
push
adc
cld
sub
jmp
fcomp
add
dec
jno
mov
dec
push
jg
cmp
mov
jge
gs
mov
in
fs
jnp
ss
push
mov
pop
jl
in
rcr
aad
test
ret
sub
cmp
fnstenv
inc
push
sbb
add
adc
aad
dec
xlat
xchg
loopne
inc
aad
jmp
xchg
push
lea
or
jnp
adc
or
dec
add
dec
int
call
push
xor
repz
add
sub
fldcw
inc
outs
dec
cmps
and
xchg
xchg
or
jmp
daa
mov
ja
jns
sbb
mov
pop
stos
xchg
sti
push
retf
(bad)
pop
push
test
fdiv
sbb
retf
fist
push
fcom
scas
call
xchg
xchg
gs
ins
or
xor
aam
dec
xlat
sub
mov
outs
out
(bad)
jno
and
mov
(bad)
mov
outs
and
loopne
(bad)
and
xchg
call
test
adc
out
outs
mov
pop
fdivr
and
pop
retf
inc
mov
stos
es
pop
pusha
in
and
test
push
dec
sub
std
std
cli
jle
lock
je
test
mov
int3
jne
int
ficom
in
add
cmp
call
int3
sbb
jmp
sbb
jp
xor
(bad)
sub
mov
je
out
call
and
mov
and
stc
sti
add
lock
sub
and
jp
sbb
pop
sbb
cmc
jl
cmc
and
add
push
clc
pop
xor
xor
std
imul
push
sbb
enter
mov
hlt
and
xor
pop
push
mov
daa
loop
out
cmp
xor
retf
and
ja
test
icebp
push
sub
test
mov
or
sub
shl
sub
stc
retf
dec
pop
mov
pop
lods
scas
mov
ja
dec
lods
adc
shr
mov
dec
mov
xor
inc
add
or
int
cmp
shr
rcr
dec
repnz
pop
mov
cli
mov
test
jb
jae
mov
je
jg
stos
seta
jmp
push
ret
ins
(bad)
xlat
push
jge
popa
jns
repnz
js
push
mov
icebp
jp
jp
jp
das
jp
inc
jmp
out
mov
xchg
lods
(bad)
pop
ror
mov
pop
ja
mov
lds
cmp
dec
dec
push
xor
repnz
aaa
frstpm(287
outs
cmps
pop
mov
pop
fild
and
stos
iret
iret
loopne
pop
in
or
test
jp
add
sub
rcr
xor
ficomp
in
dec
ins
les
enter
mov
mov
cdq
fincstp
retf
hlt
je
xlat
sbb
je
sbb
inc
stos
aam
(bad)
fcomp
mov
fidiv
pop
imul
cmp
bound
in
test
dec
dec
jp
sub
mov
bound
es
dec
scas
test
push
push
inc
add
push
aad
ja
lods
xor
adc
or
inc
mov
fstp
xor
inc
pop
jmp
pop
mov
xchg
xchg
fst
add
ds
(bad)
push
xor
fcomp
jb
jmp
in
and
call
std
cmps
cmps
in
adc
sub
scas
jle
cmc
mov
ret
les
sahf
add
outs
outs
jb
scas
les
jp
push
fstp
sub
idiv
inc
sbb
iret
bound
push
push
in
xchg
popf
and
and
imul
(bad)
or
es
mov
mov
jne
mov
add
sbb
pop
xor
loop
adc
(bad)
lahf
mov
jp
loop
movs
(bad)
in
adc
lea
sahf
test
hlt
adc
shl
xchg
retf
(bad)
jmp
call
pop
pop
push
ret
lahf
mov
xchg
dec
mov
inc
xchg
out
out
fild
cli
jb
mov
inc
cmp
mov
ret
xor
retf
leave
js
jmp
fsub
push
push
ja
adc
cmp
or
push
pop
adc
dec
stc
movs
push
movs
ret
xlat
loope
push
xchg
cmp
xchg
lds
adc
test
xchg
int
rol
jbe
or
pusha
and
ret
scas
nop
lds
mov
jmp
repnz
sbb
out
jg
jge
ss
xchg
out
(bad)
cmps
js
stc
data16
in
(bad)
sub
xchg
push
nop
dec
pop
dec
aam
xor
mov
sbb
push
pushf
call
call
pop
sar
jge
jb
sub
dec
(bad)
xchg
scas
dec
and
cmp
in
mov
test
inc
aas
icebp
shl
aam
out
lods
cdq
out
inc
mov
cdq
sub
dec
cmp
jl
jae
mov
nop
adc
enter
cwde
mov
push
mov
into
xchg
iret
call
movs
pushf
cmp
pop
data16
mov
mov
mov
sbb
pop
xchg
push
add
cmp
sub
scas
test
and
dec
mov
aam
lods
xor
iret
xchg
jmp
mov
enter
xor
(bad)
mov
enter
adc
(bad)
xchg
pop
(bad)
push
sub
jg
stos
outs
or
cmp
das
pop
aad
push
ins
cmp
ds
hlt
aaa
iret
aaa
push
inc
dec
cld
pop
dec
data16
jbe
imul
into
xchg
sub
push
test
cmp
mov
mov
test
lods
xlat
ret
xor
das
mov
fimul
lods
xchg
mov
mov
mov
and
sbb
ret
mov
push
cwde
gs
jg
xchg
lods
pop
and
lods
add
mov
int3
cs
call
scas
fdivr
adc
fxtract
inc
push
js
push
pop
adc
jp
movs
cmc
add
mov
scas
ret
js
jl
push
ret
jo
loopne
test
inc
sbb
(bad)
or
pop
rcl
clc
mov
std
les
nop
pusha
fs
dec
xchg
inc
(bad)
sub
sbb
xor
xchg
repnz
and
inc
xor
adc
dec
enter
ins
pop
setle
lods
ins
mov
xchg
or
jnp
mov
mov
(bad)
test
movs
test
pop
push
push
shl
fxch
fwait
into
lods
lea
pop
test
aad
icebp
loopne
inc
push
scas
fistp
mov
lods
jb
outs
ds
cmps
imul
cli
xchg
push
mov
into
cmp
std
les
cdq
lahf
or
push
out
ins
test
cmp
cmps
or
sub
xor
in
xchg
cmp
mov
dec
addr16
mov
into
test
xchg
jnp
daa
mov
or
out
push
cmp
daa
(bad)
out
xor
pop
xchg
jae
sbb
and
(bad)
mov
mov
add
sub
ret
stos
mov
and
or
rcr
mov
cmps
dec
dec
ret
mov
fist
scas
aas
and
inc
dec
jp
pop
aad
jb
sbb
ds
push
out
pop
out
add
fucom
sbb
jne
xchg
jge
mov
leave
popa
dec
in
push
ja
scas
hlt
lods
shr
test
ja
test
jbe
add
adc
mov
cmp
sbb
pop
cli
sbb
mov
xor
xchg
xlat
inc
pop
lea
fnstenv
idiv
call
lea
jp
aaa
loop
loope
stc
or
push
shr
xor
xchg
adc
iret
fidiv
out
inc
jb
aad
push
mov
jl
push
in
pop
movs
int3
adc
aad
icebp
nop
ins
dec
xchg
sub
lods
cwde
(bad)
in
dec
fild
movs
neg
and
repnz
fld
test
(bad)
pop
mov
mov
imul
or
pop
adc
cwde
push
mov
popf
or
repz
les
bound
mov
add
jle
sbb
mov
sbb
mov
imul
int
sub
xor
mov
dec
inc
ds
mov
inc
add
fcomip
pop
rol
test
mov
push
push
push
daa
xchg
test
mov
aaa
iret
xor
jmp
ins
arpl
mov
add
push
jnp
shl
addr16
int3
pop
sub
mov
fbld
and
sti
iret
nop
int
fstp
mov
and
stos
fdivr
push
cmp
dec
add
jnp
retf
jecxz
xchg
lahf
inc
arpl
sbb
sub
xchg
lods
fld
out
sub
dec
loopne
xchg
and
cmp
in
push
ror
adc
retf
dec
daa
into
mov
stos
test
jge
dec
mov
inc
scas
mov
ss
xchg
je
(bad)
les
lea
dec
mov
retf
cli
jle
es
and
inc
mov
push
mov
mov
into
movs
call
sbb
mov
rol
cmps
or
fst
xchg
sbb
fdiv
add
in
cmps
jbe
out
add
lods
sahf
jge
jmp
cmp
sub
adc
mov
in
inc
pop
and
in
cmps
inc
inc
sbb
jb
push
jp
clc
cmp
movs
(bad)
shr
test
inc
xchg
mov
in
add
and
mov
and
inc
and
pop
mov
add
pop
pop
pop
jb
inc
int
jl
push
sbb
xchg
repnz
mov
jbe
les
adc
rol
es
push
jbe
pop
push
popa
add
fnstcw
jp
jne
jo
jns
int3
dec
shl
pop
inc
loope
cli
outs
dec
cmovo
fs
mov
dec
or
ins
mov
sub
jecxz
mov
mov
das
mov
push
in
jns
cmp
ror
inc
rcr
call
fdiv
cli
enter
pusha
(bad)
mov
push
sub
xchg
push
pop
push
pusha
jb
leave
enter
mov
cmp
lods
sti
aaa
xor
popa
dec
fsubr
push
adc
(bad)
out
rcr
jb
lods
data16
pushw
jg
xchg
out
dec
mov
or
pop
repnz
in
dec
xchg
pop
(bad)
pop
jge
outs
(bad)
and
jae
cdq
push
inc
ins
mov
mul
dec
push
jns
push
add
sti
push
jmp
jl
adc
cld
and
(bad)
in
retf
daa
es
push
mov
ds
into
push
ret
rol
lock
out
fcom
(bad)
push
cmp
sub
sbb
adc
mov
pop
cmc
mov
stos
mov
cmp
sbb
dec
adc
add
push
(bad)
lea
push
fst
jmp
lock
xor
cmp
push
mov
and
test
in
sub
inc
adc
movs
push
mov
sbb
int
or
push
fistp
and
and
int3
jo
call
sub
adc
or
adc
(bad)
out
daa
(bad)
push
xchg
sar
add
ss
outs
mov
loope
mov
xchg
xchg
lea
xchg
fdiv
sub
pop
(bad)
jp
cmp
mov
adc
xor
dec
jge
push
in
stos
icebp
jne
lea
clc
bound
cmp
push
mov
pop
xor
add
fld
mov
call
mov
cmp
std
jmp
nop
sub
pop
pop
leave
sbb
add
outs
je
add
les
cmp
data16
mov
dec
shl
lahf
out
add
aad
scas
ror
into
jne
push
imul
mov
stos
or
call
cdq
cli
(bad)
fs
mov
sub
jns
mov
stos
dec
sar
jae
aad
jo
inc
pop
lahf
lods
mov
and
daa
fidivr
jg
pop
ss
push
scas
scas
mov
adc
dec
gs
cmp
jbe
(bad)
xor
imul
cli
ds
cmc
xchg
push
cdq
das
js
mov
mov
outs
push
and
and
jnp
xchg
jmp
jns
pop
cmp
xchg
mov
mov
clc
fucomp
add
mov
out
leave
dec
in
out
test
cs
call
loope
inc
sbb
ret
push
and
push
in
lock
sbb
inc
dec
mov
jmp
push
pop
sub
or
mov
out
ss
scas
cmps
in
push
repnz
(bad)
aaa
pop
je
sbb
in
add
shl
jmp
mov
pop
mul
neg
pusha
test
xchg
leave
or
loop
int3
dec
push
cmp
ret
out
sar
xchg
add
or
push
lock
jae
adc
and
sbb
xlat
cmp
add
xchg
sub
loope
push
leave
mov
movs
rcl
icebp
in
sti
pushf
or
retf
movs
xor
pop
rcr
push
cdq
cmp
xchg
popa
jmp
into
(bad)
popf
pop
xor
stos
inc
dec
add
repz
icebp
sub
sbb
fst
adc
scas
mov
les
loop
out
pushf
push
xchg
pop
push
jbe
jg
push
retf
lods
add
lea
lahf
inc
pushf
call
and
xchg
js
xor
loopne
mov
and
sbb
sbb
nop
mov
cmp
fidivr
jg
sti
je
daa
sub
cmp
and
(bad)
jmp
add
pop
jb
fs
cmp
jle
pop
inc
repz
popf
jle
lds
mov
sub
sub
test
fisub
leave
add
mov
push
shl
ficom
pop
popa
mov
std
mov
cdq
push
adc
cwde
stc
cmp
mov
ds
inc
pop
imul
(bad)
pusha
push
jns
add
add
pop
stos
sbb
mov
iret
or
bound
xchg
add
cli
stos
add
fcmovbe
xlat
imul
loop
rcr
add
adc
hlt
inc
xchg
mov
sbb
pop
lods
sar
mov
cld
ja
xchg
ja
mov
movs
dec
ins
sahf
xor
jmp
in
sahf
jns
(bad)
xchg
or
js
imul
pop
push
in
out
xor
loopne
cwde
pushf
enter
or
dec
lods
lea
ffreep
or
fucomp
mov
stc
sbb
and
cmps
xor
dec
movs
scas
jne
inc
iret
xchg
cs
fbld
(bad)
loopne
jecxz
int
jb
pushw
xchg
mov
mov
mov
xchg
les
cli
add
mov
in
xor
pop
mov
mov
push
nop
or
jmp
out
add
and
test
int3
xchg
fwait
and
rol
jns
or
xor
cdq
add
int
test
je
cmp
mov
repnz
stos
retf
xchg
mov
jl
aad
or
pop
or
push
lahf
cli
mov
jbe
cmp
xchg
inc
imul
inc
xchg
pop
pop
jae
enter
rcl
cmp
movs
ds
adc
test
imul
jnp
test
int
xor
add
and
aad
mov
ret
leave
out
rol
xchg
push
push
mov
das
push
aad
jae
and
xor
or
cmp
adc
pop
fdiv
mov
jge
in
xchg
cmp
loope
cmp
adc
add
xor
sub
jo
pusha
xchg
and
orps
test
sub
sub
lea
cmc
ds
lods
sbb
jae
add
dec
mov
les
xchg
fcmovnu
inc
inc
xchg
or
jge
(bad)
icebp
mov
(bad)
loope
push
push
sbb
out
add
nop
int
inc
add
shr
(bad)
add
sub
inc
sub
imul
sub
or
fimul
inc
mov
fcom
jge
std
jo
sar
std
movs
mov
adc
int
sti
jle
push
retf
ins
mov
or
mov
inc
js
push
pop
stos
mov
sbb
jp
in
sbb
add
or
ss
mov
or
into
jbe
pop
or
push
pop
loope
arpl
xor
sbb
and
dec
cmps
sbb
ss
pop
pop
ror
jo
shr
add
pop
and
jae
jecxz
repnz
cs
or
int
int
gs
or
sbb
or
(bad)
mov
inc
inc
push
ficom
popf
sbb
and
mov
(bad)
push
imul
cmps
push
xchg
minps
aad
ins
mov
cmps
dec
into
pushf
fwait
xor
ds
mov
dec
and
sbb
fcomp
lahf
mov
sbb
test
push
xor
jg
adc
jne
mov
mov
jno
mov
mov
jmp
add
pushf
push
aaa
inc
mov
mov
mov
or
loopne
xchg
fsubp
cmp
clc
jmp
pop
call
stos
dec
les
xchg
fisub
add
loop
mov
dec
jp
aas
scas
jo
fsub
dec
inc
out
cmp
sti
sub
xchg
mov
xor
repz
rcl
icebp
or
in
jo
xchg
mov
sub
sbb
cmp
push
add
or
popf
bound
(bad)
fsubr
mov
pop
dec
cmp
test
adc
adc
cs
cmp
(bad)
mov
ficomp
ja
dec
inc
fucomp
sub
retf
inc
add
and
into
(bad)
cld
mov
enter
mov
push
push
xchg
mov
pop
icebp
jmp
inc
test
xor
mov
mov
or
cmp
adc
lahf
ficom
stos
inc
add
and
xor
ins
icebp
sub
pop
pop
mov
jne
das
mov
rcr
ret
(bad)
or
xchg
jnp
fcmovbe
fs
pop
jg
cmp
leave
cmp
in
add
pop
mov
das
mov
cmp
or
(bad)
test
hlt
lea
mov
aam
lods
sbb
int3
mov
inc
cmp
adc
xor
mov
mov
cwde
dec
aam
add
sbb
pop
or
(bad)
jmp
cmc
pop
sub
mov
ret
push
pop
ret
xor
sbb
cmp
push
ret
jne
retf
mov
sub
(bad)
push
push
test
xchg
cmp
enter
pop
xor
dec
dec
daa
pushf
push
pop
xchg
jle
in
retf
mov
add
cmps
sbb
ret
std
sbb
and
sbb
sub
cmc
xchg
jmp
and
add
cmp
xchg
pop
into
sub
mov
mov
sar
call
and
inc
xchg
js
pop
add
push
ja
aas
mov
xor
retf
sbb
inc
pushf
jl
or
or
int3
retf
inc
adc
push
mov
xchg
out
and
xor
(bad)
push
or
add
scas
mov
push
cmps
popf
pop
add
mov
lods
cli
leave
mov
jg
push
xor
fbstp
jne
(bad)
fist
xchg
(bad)
add
hlt
(bad)
loope
inc
in
sar
cmps
repnz
pusha
cwde
xchg
lods
push
push
add
xlat
je
and
daa
or
inc
dec
and
fld
add
inc
adc
in
lea
adc
add
fwait
jae
ins
fimul
jmp
inc
xchg
arpl
push
jmp
(bad)
call
fwait
adc
ins
es
inc
movs
push
mov
dec
mov
add
jne
cmps
leave
(bad)
int
mov
pop
scas
lahf
mov
cmps
sbb
retf
sbb
xchg
mov
ds
movs
outs
call
out
int
adc
int
mov
cs
sahf
loop
jo
mov
js
inc
or
iret
retf
inc
les
mov
pop
add
jae
jo
ins
stc
pop
imul
sub
jp
shr
mov
push
test
jg
addr16
dec
sub
jae
popf
call
xor
or
in
pop
jb
int3
je
push
mov
outs
lods
and
pop
mov
push
xor
add
cld
push
fisubr
and
(bad)
cs
(bad)
sbb
loopne
push
dec
fild
retf
aas
(bad)
ds
aaa
or
sbb
pop
jle
sbb
retf
mov
adc
mov
dec
into
push
daa
inc
cmps
and
data16
data16
add
ds
inc
fs
(bad)
dec
loope
push
jne
dec
test
xchg
jne
loopne
pop
cmps
dec
lds
mov
enter
arpl
xchg
xor
mov
iret
ds
pop
out
pop
mov
inc
push
add
mov
mov
je
mov
mov
cmp
push
lods
popa
(bad)
loop
pop
repnz
or
mov
mov
call
cmps
in
cmp
outs
mov
push
repnz
push
jle
xchg
nop
hlt
cmp
aaa
dec
ds
icebp
pop
repz
call
adc
nop
imul
cmps
lahf
inc
call
sbb
outs
mul
lahf
push
jp
mov
clc
js
inc
in
xchg
movs
pop
cmp
dec
imul
fsub
jbe
add
mov
xor
fistp
sub
mov
pop
and
shl
pop
jp
sub
movs
xchg
adc
(bad)
adc
stos
loop
or
lock
pop
inc
jp
pop
push
and
hlt
rcr
mov
adc
rol
pop
mov
sahf
lods
dec
repz
xchg
mov
dec
aaa
pop
xchg
arpl
movs
push
fwait
in
push
mov
mov
cmp
jecxz
push
lock
fld
clc
int3
add
bnd
mov
not
push
cwde
push
adc
cmps
mov
stc
adc
xor
addr16
mov
or
lock
call
mov
pop
and
add
rcr
out
cmp
mov
fcmovnb
cmps
or
(bad)
pop
jl
or
or
mov
arpl
jbe
mov
cmp
popa
je
ins
cwde
and
cmp
mov
jb
outs
mov
adc
xchg
aam
or
scas
enter
jl
sbb
gs
cmp
push
add
je
cwde
xor
jg
and
jae
outs
pop
das
repnz
imul
jmp
xchg
aad
rcr
xchg
xchg
div
push
into
lds
rcr
(bad)
je
jne
pop
mov
pop
pop
imul
sti
loop
fwait
leave
inc
mov
dec
jb
inc
(bad)
stos
aas
in
pop
sub
mov
push
scas
fld
sub
jo
mov
xor
mov
xor
lock
fbld
add
dec
jecxz
pop
aas
mov
push
add
fisttp
out
and
out
outs
dec
fs
dec
sub
scas
inc
fistp
fs
lahf
pop
fild
mov
push
and
add
mov
inc
fidivr
jns
or
mov
popf
jns
leave
retf
and
lods
fs
je
(bad)
fmul
lds
sbb
jge
xchg
xchg
push
retf
stos
or
ror
sub
push
test
xlat
in
mov
cmps
sub
jbe
sbb
jae
in
call
jno
(bad)
xchg
loope
pop
mov
retf
dec
add
jge
or
sub
add
cdq
pop
xor
or
dec
adc
sbb
or
lods
rol
jp
jns
jge
pop
call
loope
ficom
pop
aaa
gs
cmp
xor
stos
mov
(bad)
rcr
pop
vpavgw
cdq
repnz
div
add
push
adc
data16
cli
enter
jg
sbb
adc
jbe
dec
aaa
xchg
or
xlat
add
enter
mov
aas
mov
aas
lods
aaa
aaa
icebp
sahf
pop
dec
sub
cmp
cmp
loop
jmp
mov
shr
cli
out
iret
sub
outs
mov
adc
or
adc
push
xor
inc
inc
call
jge
test
mov
jmp
pop
jp
or
scas
sub
pop
scas
rcl
lea
dec
frstor
retf
xor
mov
and
adc
dec
imul
push
mov
xchg
dec
xlat
test
mov
pop
stos
xchg
ds
fld1
xor
pushf
pop
sub
test
int
ret
jbe
add
xchg
push
mov
push
pushf
inc
mov
jecxz
popa
enter
movs
mov
ret
inc
std
and
pop
stos
jmp
ins
in
add
aas
push
pop
push
sbb
enter
jg
sbb
mov
cmp
push
fwait
xchg
mov
cmp
jp
jl
mov
adc
arpl
and
mov
aaa
(bad)
pop
mov
neg
sub
mov
push
mov
xchg
inc
mov
mov
adc
lods
xchg
dec
rcr
ret
sar
push
or
in
mov
popa
fstp
xor
cmp
leave
(bad)
mov
loopne
mov
inc
sbb
ss
push
ret
int3
dec
sub
fist
inc
push
fdiv
push
mov
dec
ss
inc
(bad)
sub
cwde
(bad)
sub
jne
imul
xor
push
jecxz
mov
xor
sub
(bad)
call
mov
ins
xchg
mov
in
mov
cmp
xor
mov
push
mov
aad
cmp
pushf
fmul
push
outs
or
repnz
fldenv
pop
mov
pop
lock
inc
adc
xchg
popf
(bad)
por
lods
fmul
xor
sub
adc
mov
push
pop
jbe
std
imul
dec
mov
jb
pusha
cli
fsub
mov
movs
popa
jp
xchg
adc
mov
adc
mov
push
pop
sahf
cmc
cmps
daa
sti
sub
repnz
in
jns
cmp
push
sub
scas
test
dec
outs
aas
(bad)
les
lods
call
js
cs
mov
pop
lock
push
jns
fcom
add
nop
icebp
pusha
(bad)
dec
inc
jge
leave
dec
adc
sub
xor
sub
add
adc
test
dec
push
gs
mov
add
jge
fs
inc
fsubr
lods
and
dec
bound
sub
xchg
test
mov
mov
(bad)
jns
aam
leave
sbb
fwait
xchg
dec
div
scas
inc
sbb
xchg
cmps
int
ins
sar
ds
sub
and
cwde
es
aas
lods
fist
aas
(bad)
ins
icebp
mov
fmul
add
sbb
mov
cwde
xor
add
push
cs
adc
cmc
pop
out
(bad)
mov
xor
out
mov
mov
xor
jp
pop
dec
mov
add
dec
sub
mov
xor
(bad)
fisubr
add
cmc
dec
sbb
sbb
push
dec
dec
out
push
push
dec
pushf
push
cmp
pop
cwde
mov
icebp
jg
aad
(bad)
xor
leave
push
sub
fadd
xor
ja
and
movs
mov
stos
push
popa
and
mov
test
aam
inc
inc
loop
cld
js
push
mov
jl
xchg
into
xchg
xor
fwait
push
mov
sbb
jnp
sub
mov
adc
xor
jmp
mov
repz
loop
scas
in
xchg
data16
clc
js
mov
push
loope
int3
loope
mov
pop
pop
inc
jns
cmc
inc
xor
shr
cmp
mov
leave
mov
or
push
cmc
test
jns
ret
inc
daa
dec
mov
and
jbe
bound
pop
or
push
and
into
pushf
stc
cmp
mov
(bad)
mov
(bad)
mov
nop
add
xchg
ins
cld
ret
push
stos
fnstenv
mov
(bad)
xor
mov
fbstp
aam
daa
xchg
cmps
fimul
cdq
xor
or
pop
dec
and
mov
and
outs
sbb
cdq
in
mov
jge
in
pop
(bad)
hlt
sub
in
or
outs
movs
and
aad
popf
and
fxch
cli
hlt
mov
mov
iret
outs
xchg
and
rcr
popw
(bad)
pop
popa
(bad)
sti
dec
push
push
out
popa
xor
pop
int
jg
mov
repz
mov
imul
pop
(bad)
js
sub
(bad)
or
test
sbb
out
mov
mov
fcomip
fadd
cmp
sbb
fmul
and
or
mov
lahf
cmp
rdpmc
or
adc
bound
imul
and
push
sub
(bad)
mov
stos
fcom
fist
xchg
sbb
sub
mov
adc
(bad)
mov
jl
and
jg
movs
idiv
into
jg
jg
jle
mov
add
sub
cs
inc
das
mov
mov
pop
push
retf
add
stc
mov
xchg
ret
cld
ror
dec
stos
lock
adc
inc
mov
(bad)
jns
imul
xor
mov
adc
or
sbb
jae
retf
and
pushf
xrelease
pop
xchg
ret
jno
ins
cmp
jge
add
xor
mov
xchg
sub
adc
fwait
mov
outs
mov
imul
hlt
les
xlat
push
and
mov
sub
xchg
jle
mov
mov
test
mov
jg
gs
ds
in
mov
xchg
cmps
dec
sbb
add
bound
popa
popf
dec
fld
mov
aad
add
jns
scas
dec
movs
mov
ins
in
sti
xchg
mov
in
data16
std
imul
cmp
adc
loop
jns
into
cld
xchg
pushf
data16
retf
xchg
iret
mov
sub
push
sti
push
pop
dec
scas
daa
pop
imul
pop
adc
push
and
dec
ret
sub
jae
push
push
pop
sbb
xchg
push
xchg
out
sbb
xchg
frstor
ror
inc
call
pusha
add
pop
jno
xchg
add
hlt
adc
xor
fimul
movs
sbb
sbb
loop
out
push
push
mov
adc
or
loopne
inc
nop
or
and
jno
push
enter
mov
adc
jg
adc
fs
and
push
dec
mov
movs
add
xor
cmp
test
dec
data16
stc
test
movs
pop
pop
(bad)
cli
push
jne
add
push
in
inc
ret
push
inc
fcomp
in
xchg
js
mov
jmp
cmp
stos
jmp
imul
jl
mov
icebp
or
add
jge
arpl
mov
push
push
sbb
int3
in
fwait
mov
mov
cwde
icebp
mov
mov
les
adc
cli
rol
pop
and
ins
push
sub
cwde
push
add
push
popf
rcl
inc
aas
(bad)
jmp
fild
mov
test
sar
push
push
pop
(bad)
les
dec
xor
ret
popf
repnz
not
push
sub
stos
out
jb
cmp
adc
jg
gs
addr16
xor
inc
mov
jecxz
pop
movs
ffree
ret
xor
xor
jno
out
sub
mov
(bad)
jecxz
clc
mov
inc
outs
shl
jle
rcl
(bad)
or
pop
jnp
lahf
ja
outs
inc
cmp
loope
adc
pop
gs
cmps
jmp
push
sbb
or
inc
sbb
and
adc
cmp
in
and
outs
sbb
pusha
stos
shld
mov
inc
and
and
push
xchg
aad
mov
shr
loopne
aad
stos
or
jo
fsub
lahf
stos
cdq
mov
xchg
(bad)
ss
xor
lahf
arpl
push
pop
add
mov
shl
mov
cmp
push
dec
jmp
jp
add
push
jb
rcl
xor
cld
jl
ret
mov
aam
cmp
dec
mov
stos
or
xchg
loopne
jae
lea
lods
daa
cld
loop
inc
jg
adc
test
call
in
cmp
aad
and
mov
jge
and
sbb
rol
xor
fidivr
adc
retf
dec
mov
dec
and
dec
fbld
inc
pop
jmp
sbb
add
lock
xor
sbb
mov
add
loope
cld
aad
popa
cmp
push
xchg
ret
push
jo
cmp
push
lea
jg
add
and
dec
dec
pusha
sbb
pop
sbb
aam
mov
cmp
add
jle
push
xor
pop
or
popf
jnp
mov
mov
mov
jb
nop
cmps
and
shr
jnp
jae
mov
adc
pop
leave
jl
popa
daa
mov
dec
(bad)
in
out
mov
and
dec
cli
movs
in
xchg
xchg
fnstcw
(bad)
iret
js
jno
sub
rcl
ja
test
xor
mov
loop
inc
sldt
dec
shl
mov
mov
xchg
sbb
scas
inc
cmp
out
leave
into
outs
dec
mov
pop
cmp
sub
pop
mov
inc
cmps
int3
xchg
addr16
sbb
mov
and
inc
arpl
cmp
bnd
hlt
and
aam
jl
xchg
dec
dec
mov
mov
cmp
test
mov
movs
push
(bad)
icebp
(bad)
call
arpl
xlat
repnz
sbb
sub
adc
lea
jecxz
int3
imul
loope
inc
into
push
sub
sbb
dec
mov
push
jnp
stos
push
(bad)
push
aas
(bad)
jnp
call
pushf
cmp
iret
dec
or
pop
cs
jmp
dec
and
xchg
sti
test
retf
test
mov
and
add
mov
sbb
and
(bad)
hlt
lods
xor
retf
mov
test
jecxz
and
push
dec
ret
pop
stc
add
cmp
jp
clc
inc
rcl
ror
lahf
pop
lods
xchg
das
push
xchg
lods
push
popa
in
xor
cmp
outs
and
fsubr
add
int
or
stos
neg
adc
inc
add
push
hlt
dec
leave
push
shl
cs
push
in
lahf
adc
out
cwde
int
sti
adc
jne
aad
in
pop
add
out
fisubr
dec
cmp
dec
pop
sbb
sti
call
call
mov
mov
call
jp
sub
dec
jle
sub
mov
call
pop
mov
ret
sub
pusha
mov
jns
out
pop
into
jmp
dec
popf
int3
xlat
adc
(bad)
push
dec
fbld
in
loope
push
clc
adc
sub
sbb
ins
stos
inc
fsub
fsubr
add
push
mov
fwait
add
mov
in
sbb
and
ror
fld
imul
out
pop
ja
in
mov
nop
jge
sbb
jp
imul
dec
jns
sub
sbb
stmxcsr
test
and
or
cmp
add
sub
mov
push
inc
push
dec
test
cmp
inc
test
in
jno
stc
repz
ror
fmul
push
push
je
push
add
cmp
and
sahf
push
mov
ret
pop
inc
(bad)
fisttp
(bad)
xchg
dec
push
inc
push
imul
mov
xor
out
jae
push
imul
inc
cwde
mov
cmps
push
add
sar
pop
and
push
sbb
pop
push
mov
sti
pop
mov
cmp
mov
mov
sub
fisttp
js
mov
jmp
add
cmp
sahf
mov
mov
add
not
je
fstp
push
(bad)
jg
or
outs
xchg
jge
mov
jge
test
rcl
xlat
test
xchg
sub
add
mov
(bad)
iret
(bad)
sbb
hlt
push
leave
push
leave
add
ret
popa
mov
add
js
pusha
cmc
xchg
push
or
jl
cmp
sbb
fild
jp
not
and
leave
pop
sbb
popa
loop
and
sub
addr16
xchg
les
xor
mov
das
cmp
inc
fnstcw
repz
call
push
xchg
lea
test
and
ror
inc
shl
call
push
push
push
dec
cs
aaa
xchg
cmp
xchg
ss
mov
sbb
jno
sub
cs
add
sub
jmp
sbb
add
xchg
fsubr
repz
push
mov
sbb
sbb
mov
cs
mov
inc
and
nop
push
sub
adc
(bad)
jle
push
push
les
or
mov
add
pop
lock
mov
sbb
retf
dec
jne
dec
pop
les
mov
call
xchg
jns
xor
psubd
mov
movs
push
dec
xchg
jle
int
sbb
jle
xchg
jecxz
(bad)
and
or
sub
mov
(bad)
xchg
lods
int
aam
shl
jo
push
dec
ja
and
call
cld
sub
call
pop
or
or
ffree
and
fsubr
push
or
shl
inc
adc
mov
aaa
into
fidiv
mov
ret
aas
int3
jmp
lds
jmp
push
and
jmp
inc
cmp
jno
test
inc
fucomp
push
jbe
pop
push
pop
or
lea
icebp
ds
xlat
mov
iret
gs
and
mov
add
mov
addr16
pusha
xor
shl
pop
or
sar
(bad)
and
out
inc
imul
push
cld
jle
or
add
ror
mov
jbe
dec
or
pop
fwait
cmc
xchg
loope
cmp
xor
fldenv
push
les
rol
push
inc
js
popa
cmps
xor
les
int
cmp
mov
push
dec
sub
bound
inc
jno
and
sbb
pop
cld
and
sub
and
in
stos
or
fwait
xor
stos
in
inc
sbb
pop
pop
bound
sbb
pop
cmp
outs
xchg
add
es
and
shr
push
dec
xchg
repnz
fbstp
and
cli
aaa
push
retf
dec
push
daa
mov
jnp
lods
mov
jmp
adc
(bad)
jmp
dec
ret
push
or
inc
loop
inc
dec
ror
xlat
aad
sbb
mov
(bad)
std
push
jnp
mov
(bad)
mov
sbb
retf
(bad)
or
mov
shl
cmp
sub
aas
xchg
xor
(bad)
icebp
or
(bad)
cwde
inc
stos
in
add
pop
cld
ss
lock
fmul
jl
fimul
in
fdivr
out
sar
mov
out
int
lds
jnp
fisub
or
add
mov
push
push
push
jns
ss
test
xor
fs
add
cmps
mov
enter
and
inc
sub
mov
ss
mov
scas
fxch
jl
imul
rcl
or
mov
call
(bad)
iret
ror
sbb
xchg
jns
mov
es
add
add
ja
or
sbb
sbb
xlat
inc
push
fiadd
int
repnz
inc
neg
adc
push
lahf
repnz
jmp
jl
xchg
shl
retf
(bad)
cld
test
xor
cmps
test
int
and
sbb
push
push
call
std
adc
(bad)
sar
pop
imul
pop
daa
jle
jg
sub
aad
jae
hlt
lock
lods
xor
jle
cmp
xchg
dec
inc
dec
jg
push
ds
push
sar
pop
push
sub
or
xchg
es
mov
mov
cwde
xchg
and
push
jns
ins
cdq
and
pop
icebp
out
jg
cmp
(bad)
daa
icebp
arpl
jno
sub
ret
test
and
or
retf
in
sbb
push
lods
add
inc
in
add
scas
add
aas
dec
push
add
fdivr
enter
loopne
popa
dec
jbe
nop
pop
lods
mov
mov
push
arpl
out
popa
inc
or
jmp
retf
dec
ffreep
(bad)
dec
arpl
arpl
xchg
mov
(bad)
(bad)
gs
shr
add
or
popf
cli
ins
pop
cmp
fadd
mov
inc
push
add
xchg
shl
xchg
xor
adc
push
inc
ret
(bad)
div
rol
pusha
mov
mov
mov
dec
xchg
std
push
loope
adc
xor
mov
lock
clc
pop
mov
jmp
push
mov
xor
fdiv
repz
je
loope
pop
and
ss
cmps
adc
pop
dec
popf
addr16
xlat
push
xchg
js
adc
fisub
dec
xchg
addr16
popf
hlt
movs
xlat
js
mov
xchg
adc
aad
push
int3
xchg
in
hlt
or
mov
imul
retf
ficomp
xchg
xchg
in
or
pop
sahf
pop
mov
sbb
or
mov
jnp
dec
loopne
(bad)
pop
iret
mov
pop
or
jmp
jns
mov
jno
cmp
dec
scas
popf
or
cs
dec
pop
jb
lods
sbb
mov
push
pop
shl
data16
in
std
loope
push
mov
ss
mov
in
xchg
push
dec
sbb
pop
push
scas
sub
out
pop
movs
push
push
sahf
inc
and
dec
dec
push
out
push
sub
push
jo
fwait
xor
jge
pop
fcom
dec
sub
mov
or
sbb
inc
sti
lods
dec
cmp
call
cwde
stos
and
xchg
dec
inc
jmp
jmp
retf
sub
sbb
push
adc
sahf
xchg
add
dec
les
lds
loopne
dec
inc
jle
mov
(bad)
(bad)
jecxz
data16
iret
add
ss
xlat
pop
(bad)
test
add
rcr
data16
js
adc
pop
loope
jne
ss
fs
cmp
push
repz
stos
sub
xlat
cmp
gs
xchg
ins
out
scas
test
dec
fld
fdiv
dec
shl
sub
or
fidiv
and
cwde
verr
in
mov
jle
arpl
gs
pushf
loopne
(bad)
enter
dec
ret
test
dec
xchg
arpl
sbb
sub
inc
cmp
bound
sub
pop
ret
xchg
enter
adc
leave
sub
mov
cs
pop
sub
cwde
adc
sar
sti
cmp
lods
sub
(bad)
not
popa
(bad)
sti
pop
mov
aas
outs
and
aas
or
cmps
adc
jo
jbe
repnz
jns
add
mov
fiadd
xor
nop
movs
mov
inc
adc
jno
mov
test
frstor
stos
xchg
mov
push
stc
test
sbb
push
lea
shr
or
inc
xchg
push
sub
lea
stc
push
or
and
loop
in
sti
jne
fisttp
std
jno
popf
les
loop
lods
sbb
ja
icebp
rcr
jge
enter
shl
mov
(bad)
stos
repnz
pop
(bad)
fldenv
popf
in
(bad)
call
xchg
dec
sahf
sbb
retf
mov
xor
ret
mov
clc
imul
mov
mov
xlat
pop
cdq
addps
push
pusha
mov
out
ret
pop
(bad)
in
inc
pop
xor
add
mov
int3
ret
xchg
jo
mov
inc
inc
cmps
call
scas
sub
cmp
out
jecxz
mov
jbe
xor
aad
out
call
jecxz
adc
fist
pop
and
or
pop
div
xor
and
or
push
ror
add
jl
je
popa
test
xor
gs
cdq
add
outs
scas
pop
sub
xchg
enter
enter
retf
dec
fs
xchg
paddusw
lods
ret
xchg
leave
out
pop
pop
nop
cmp
repz
adc
push
cmp
les
ror
aam
or
cmp
mov
fistp
add
fld
push
fsubrp
fnstsw
stos
jp
in
and
out
or
enter
cmp
movs
xchg
loope
pop
cmps
cdq
pop
sbb
cmc
jmp
ja
push
cs
mov
ret
mov
dec
add
xchg
in
dec
mov
fld
std
cld
xchg
loopne
sub
pop
imul
jge
popf
mov
movs
mov
pop
cmps
dec
mov
jns
fnstcw
sti
jae
or
push
aas
mov
inc
loope
lods
in
(bad)
and
inc
lods
jmp
push
gs
outs
push
mov
(bad)
retf
mov
test
sbb
lock
push
inc
lods
sti
outs
mov
mov
rcr
adc
mov
push
stos
int3
or
adc
inc
jmp
mov
cs
dec
in
daa
and
js
inc
xchg
push
sub
mov
in
nop
movs
fiadd
cmp
xchg
cmps
sbb
mov
cwde
inc
mov
iret
int3
in
mov
rcl
les
fisttp
dec
aaa
add
dec
sub
add
mov
sbb
and
mov
stc
xlat
lea
xchg
shl
call
das
adc
loop
call
stc
cli
and
xchg
sub
inc
jbe
xor
ret
dec
frstor
in
sti
mov
enter
mov
ds
in
(bad)
daa
sub
jnp
into
outs
rcl
inc
cwde
outs
jg
cmps
jecxz
test
pop
mov
repz
dec
nop
stos
iret
cdq
lds
sti
inc
ror
test
sub
fiadd
cmps
repnz
lods
add
outs
ficomp
inc
jnp
lahf
(bad)
out
xchg
push
jmp
jbe
lea
sti
in
dec
in
lods
cdq
or
xchg
dec
stc
inc
aam
jp
clc
repnz
adc
test
cdq
adc
mov
fwait
dec
pop
or
xchg
mov
lea
jmp
mov
sbb
sub
xchg
frstor
inc
dec
adc
shl
and
add
cmp
pop
imul
or
cmp
adc
stos
mov
sub
repz
sub
arpl
add
push
cdq
mov
cs
dec
sbb
and
mov
test
mov
mov
xchg
iret
cmp
inc
pop
sbb
sub
push
daa
jle
fbstp
out
clc
sbb
pop
das
or
in
cmp
out
int3
out
cdq
ja
jle
lahf
jecxz
scas
jmp
xchg
stc
popa
shr
inc
sub
les
cwde
enter
lods
cmps
fimul
es
mov
(bad)
fcomp
test
jbe
push
push
cmc
test
ret
xchg
outs
hlt
scas
cmp
mov
(bad)
add
idiv
mov
and
add
push
repnz
cld
cmp
in
or
inc
mov
dec
jmp
cmps
call
xchg
jne
xlat
(bad)
imul
push
pop
loope
stos
test
xlat
xchg
add
loopne
mov
leave
add
pop
arpl
cmp
mov
ror
adc
jmp
sub
mov
push
mov
cld
adc
ja
nop
pop
inc
adc
xchg
in
inc
jmp
sar
mov
aam
mov
dec
sbb
pop
sbb
mov
adc
cwde
aas
stos
and
je
rol
and
(bad)
mov
mov
and
lock
inc
pop
int3
adc
bound
jge
loop
in
jae
lahf
les
call
cs
mov
imul
add
ins
pop
stc
into
add
dec
pop
mov
cdq
ror
repnz
mov
sbb
in
std
mov
scas
sbb
push
and
jo
aas
in
lods
imul
mov
out
or
and
jge
jge
fwait
sbb
and
jp
cmps
mov
das
or
xor
std
test
push
sub
inc
add
loopne
mov
fistp
stos
ds
dec
ds
xor
int3
aaa
xor
xor
clc
ficomp
push
pop
(bad)
adc
cmp
dec
mov
scas
xor
adc
xor
push
pusha
adc
mov
mov
mov
out
adc
cli
xchg
aas
sub
mov
test
in
jge
cmps
scas
int
xchg
jne
ja
push
stos
sar
aam
mov
rcl
enter
mov
jge
xlat
movs
inc
xchg
stos
movs
fs
or
fwait
call
mov
stos
fistp
cld
call
lahf
jp
and
mov
jno
data16
cmc
lahf
xor
mov
mov
ins
xor
scas
dec
and
sub
mov
gs
cmps
sub
ret
enter
sbb
sbb
inc
aaa
pop
(bad)
sub
sbb
cmp
and
aam
leave
fistp
xchg
sti
add
cmp
cmp
in
sub
cwde
repz
push
out
std
lock
dec
imul
mov
push
xlat
shl
in
aad
jmp
out
inc
in
cmp
xor
push
in
(bad)
push
sbb
inc
and
scas
jge
mov
lea
jle
(bad)
fist
cmp
sahf
and
cli
lods
cdq
addr16
mov
jmp
dec
lods
pop
inc
sar
icebp
inc
lock
leave
push
mov
icebp
fdivr
jns
xchg
adc
rol
and
shl
push
mov
in
es
fistp
add
std
sahf
fistp
sti
xchg
mov
nop
pcmpgtb
and
mov
xlat
xor
xor
mov
test
(bad)
xchg
pop
int
jnp
mov
retf
(bad)
xor
test
fld
and
repnz
xchg
(bad)
cmp
fcomp
jne
pop
xchg
and
adc
dec
mov
rol
loope
push
cmp
cmp
repnz
xchg
inc
pop
ficomp
or
pusha
mov
jmp
mov
dec
mov
mov
cld
sar
jae
and
shr
jne
pushf
and
aad
call
sbb
test
popa
mov
push
arpl
xor
mov
mov
call
sub
aad
push
sub
lods
pop
push
sub
inc
rol
mov
and
lds
lea
(bad)
dec
inc
xor
adc
in
cli
mov
(bad)
fidiv
std
aaa
adc
pop
cwde
xchg
ins
mov
inc
inc
out
inc
dec
aaa
in
nop
aam
dec
jnp
push
arpl
ret
mov
ficomp
jl
sub
(bad)
retf
fcmovu
xchg
fimul
jno
stc
(bad)
int3
mov
pushf
xor
and
ror
xchg
or
and
adc
mov
add
scas
ins
mov
ret
sub
mov
div
cmp
and
sub
mov
mov
dec
loopne
stos
data16
push
data16
in
in
jbe
jmp
int
push
jno
dec
test
movs
xchg
rcr
inc
pop
cmp
cli
mov
shl
push
mov
xchg
cmp
(bad)
jp
in
(bad)
js
ins
sbb
shr
xchg
test
jg
test
es
xor
mov
and
xor
jp
icebp
push
and
sbb
popa
push
jmp
ret
in
jbe
sub
dec
sbb
push
xor
scas
fnstenv
sub
adc
mov
push
cwde
sbb
and
mov
retf
sbb
jb
xor
(bad)
jbe
cmp
dec
mov
pop
adc
stos
jg
xlat
(bad)
cld
les
xor
dec
adc
add
sub
setl
add
mov
push
mov
xor
lock
fstp
sub
add
add
dec
mov
std
mov
jnp
inc
enter
les
mov
pop
push
out
inc
add
in
jle
cmp
in
outs
js
daa
out
test
addr16
pop
in
jbe
xchg
or
out
or
es
jp
cld
imul
fsubr
add
pand
xor
fisub
jge
mul
mov
shl
inc
out
xchg
fist
imul
jecxz
test
xchg
fld
sbb
mov
add
stos
shr
ins
cld
xlat
mov
jb
cmp
inc
test
lahf
sub
inc
sub
or
(bad)
jnp
mov
repz
loop
sbb
mov
rol
in
sbb
sbb
mov
inc
pop
xlat
xor
int
bnd
or
pop
or
cmp
test
cwde
sub
imul
in
or
pop
aas
push
lahf
pop
pop
xchg
fprem
in
push
or
push
xchg
xor
std
mov
add
jb
(bad)
sub
dec
loope
ja
and
cmp
fmul
cmp
out
fidiv
sbb
in
data16
fmul
xor
popa
loope
add
popf
or
popf
push
adc
sub
jns
rol
iret
xlat
sbb
add
dec
xchg
jne
fist
and
rcr
mov
shl
push
xlat
xor
inc
dec
das
mov
dec
jp
push
mov
or
mov
sub
das
or
mov
call
sbb
fild
mov
sub
jb
mov
movs
fcomp
stos
cmp
jmp
popf
add
or
sub
popa
push
mov
cs
ret
test
jmp
das
mov
mov
dec
adc
retf
ret
cmp
push
xor
shl
mov
test
push
lods
sbb
mov
std
data16
js
in
stos
loop
inc
movs
mov
iret
push
adc
pop
sub
and
or
cmps
bound
movs
pop
scas
sbb
mov
sar
into
push
dec
xor
jecxz
jns
js
mov
cli
cmc
xchg
ret
ret
jns
in
and
dec
mov
(bad)
pop
lods
loope
into
xchg
aaa
pop
sbb
push
and
iret
loope
js
inc
xchg
int
dec
dec
mov
sbb
mov
repz
mov
jns
aaa
pop
sub
test
push
pop
adc
pop
test
adc
stc
push
shr
jecxz
rcpps
test
test
push
push
or
int
lock
push
test
int3
xor
clc
pop
jp
push
in
jge
ins
shl
outs
shl
icebp
aam
cmp
xlat
aaa
sub
in
cdq
sub
jl
adc
pop
or
test
cdq
inc
popf
inc
ret
xchg
ins
inc
in
(bad)
jbe
out
cdq
(bad)
fdivrp
or
test
stos
xor
outs
add
mov
pop
jle
push
sbb
pop
jle
mov
adc
mov
(bad)
sub
dec
fst
xchg
std
push
push
imul
rcr
arpl
rol
pusha
xor
inc
bound
mov
and
icebp
fs
loopne
cmps
push
add
and
sar
xor
add
dec
neg
dec
test
and
cmps
ds
arpl
mov
int
pop
ret
leave
aas
out
xchg
mov
pop
aas
jne
adc
dec
into
jmp
out
dec
je
hlt
push
sbb
xchg
repz
xor
sbb
inc
or
and
repz
rol
mov
hlt
cdq
call
push
mov
xor
movs
cwde
lea
sbb
imul
jo
retf
add
xor
stos
sbb
mov
int3
inc
jbe
mov
dec
rol
and
push
mov
sub
or
xor
pop
mov
call
mov
cld
sbb
add
adc
stc
or
jmp
mov
outs
jbe
call
std
call
push
daa
push
xchg
xchg
sbb
jae
pop
stos
leave
mov
pop
inc
nop
fldenv
or
lods
pop
add
and
out
add
(bad)
out
mov
cli
add
int
clc
fcmovb
xor
outs
sbb
cmp
test
movs
std
add
add
cmp
imul
dec
sub
imul
aas
cmp
fnstsw
nop
mov
ja
push
into
mov
add
fidiv
int
sahf
jns
mov
xor
js
xlat
mov
fild
nop
jo
fidivr
sub
xor
shl
sub
pop
loop
test
and
icebp
fild
iret
int
out
ret
mov
stos
mov
cmps
das
sbb
inc
sbb
inc
rol
pop
repz
push
scas
inc
xlat
ins
call
or
cmc
jp
sbb
pop
pop
(bad)
int
fmul
aas
iret
or
ja
cmp
lock
jmp
fadd
pop
mov
enter
fdivr
xlat
push
std
fwait
xchg
icebp
out
push
xlat
or
hlt
stc
test
sbb
icebp
and
jo
push
pop
inc
jp
int
push
data16
iret
push
inc
xor
jle
das
stc
or
and
jp
xor
inc
jecxz
popf
dec
sbb
add
sbb
je
inc
dec
movs
jae
lds
sub
inc
call
cmp
(bad)
mov
pop
fwait
sbb
bound
lods
push
jnp
or
push
cmp
jb
aaa
jbe
test
cmp
out
into
dec
inc
xchg
sub
sub
je
sub
lahf
ret
cmc
je
mov
out
js
(bad)
popf
(bad)
sub
jle
fcom
shr
mov
outs
jg
adc
repnz
jmp
mov
mov
std
xor
push
xor
mov
mov
aas
sbb
or
xchg
dec
mov
xchg
ret
(bad)
aad
(bad)
push
ss
and
test
push
push
xchg
xchg
or
xor
ret
js
out
add
mov
inc
cld
jnp
fnstsw
mov
imul
jp
and
rcl
jle
push
cs
leave
dec
stc
call
nop
mov
lds
push
cwde
xchg
and
sbb
xchg
cmc
leave
mov
or
add
shl
xchg
mov
mov
jge
mov
mov
mov
or
ds
fimul
int
into
js
mov
sets
ret
cmp
jno
mov
and
cwde
movs
dec
mov
dec
pop
add
inc
popa
dec
push
push
(bad)
jmp
imul
out
push
imul
xchg
or
ins
xor
mov
rcl
push
cmp
or
fsubr
ret
jp
dec
mov
leave
mov
xchg
cmp
popa
mov
ja
inc
push
or
push
mov
sub
xchg
ror
out
inc
push
aam
jge
daa
pusha
ins
js
sub
mov
sbb
mov
bound
mov
adc
jl
mov
fild
aam
push
pop
pop
scas
cmps
dec
mov
sbb
xor
cld
dec
jno
cmp
lock
or
cwde
addr16
push
jg
dec
add
stos
(bad)
adc
(bad)
mov
lds
or
xor
(bad)
mov
in
dec
pop
jns
bound
ds
retf
movs
and
dec
mov
mov
or
(bad)
ds
rol
dec
ret
and
jecxz
call
out
je
adc
add
mov
dec
xor
(bad)
lods
test
ins
sub
ins
repz
push
scas
out
(bad)
sbb
addr16
pop
std
cwde
movs
imul
or
xor
mov
pop
shl
dec
mov
adc
sbb
adc
mov
fistp
fld
push
sub
pop
cmp
ins
adc
cmp
fild
dec
jo
inc
push
sahf
mov
pop
ins
(bad)
loope
mov
and
shl
cmp
or
fldenv
js
jmp
jnp
repnz
sbb
scas
mov
xor
call
into
clc
pop
xor
xor
es
out
jmp
(bad)
xor
stc
gs
das
ret
mov
(bad)
cmp
sub
xchg
xchg
adc
pop
(bad)
jns
inc
push
or
and
mov
jns
xlat
and
sahf
inc
inc
fld
mov
test
stos
lahf
sub
inc
xor
test
(bad)
popa
sti
loop
xchg
and
and
and
push
addr16
jbe
(bad)
jno
add
hlt
pop
lds
adc
cwde
iret
fadd
(bad)
jb
out
arpl
outs
ins
mov
jo
fmul
cmp
xor
add
loop
or
mov
iret
fsub
or
repnz
pop
mov
add
cli
(bad)
sub
xchg
or
add
add
sub
in
cmps
fld
ja
xchg
(bad)
(bad)
imul
scas
or
adc
int
push
test
arpl
clc
inc
mul
dec
mov
clc
sbb
shr
dec
das
scas
pop
nop
jmp
push
cld
ret
scas
aad
sbb
jmp
scas
cwde
fld
lds
jmp
jp
jge
lea
sahf
add
xor
minps
gs
scas
adc
xor
sbb
fsub
lods
sub
xchg
(bad)
in
lods
add
out
fldenv
pop
ficom
call
jge
jbe
leave
int
mov
sar
leave
inc
gs
pop
popf
ret
sbb
dec
inc
jnp
xor
movs
xchg
test
mov
mov
daa
repnz
ret
xchg
cmps
add
add
xor
hlt
and
lods
les
mov
jle
rcl
sbb
sahf
cmp
stos
and
out
push
test
aaa
and
inc
jb
xor
imul
dec
push
into
ror
inc
xchg
cli
push
cmp
push
clc
cdq
in
int3
dec
cmp
pop
and
and
cmc
popa
cwde
sbb
lds
mov
call
lods
push
(bad)
aaa
or
add
jg
cmp
push
sbb
push
cwde
xor
xor
adc
movs
cld
jle
dec
outs
dec
or
nop
adc
bts
pop
(bad)
(bad)
inc
shl
inc
jmp
or
sub
(bad)
mov
cmp
shl
lock
and
test
out
sbb
fnstsw
popf
and
pop
jmp
xor
dec
cmp
push
jmp
(bad)
stos
or
fprem1
cmp
dec
test
mov
loope
push
mov
inc
adc
xchg
int3
xchg
out
fisub
(bad)
push
aaa
ret
fsubr
lea
cmps
dec
cmp
xor
cs
sbb
or
mov
ret
loopne
cmps
sub
scas
aas
mov
inc
jle
rol
outs
ds
mov
repz
stos
adc
pop
pop
jecxz
les
xchg
movs
fstp
push
outs
add
jmp
inc
sub
or
scas
shr
push
pushf
(bad)
aas
je
test
int
shl
les
popa
sbb
or
jno
and
or
adc
int3
xchg
add
pusha
(bad)
mov
mov
enter
inc
shl
push
cld
jmp
stos
icebp
pushf
jo
push
dec
sbb
scas
sar
clc
mov
fsubr
jecxz
or
mov
add
in
out
mov
mov
mov
dec
das
(bad)
dec
into
cmp
jl
or
xchg
inc
pop
ret
arpl
mov
in
int
xor
xor
jmp
out
dec
jmp
out
sbb
mov
push
lds
dec
mov
fdiv
les
inc
adc
mov
sub
js
es
add
or
ret
add
inc
retf
cwde
jb
fidivr
cmp
push
shl
inc
and
cmps
fild
mov
scas
cmc
outs
je
xor
arpl
and
cmp
out
jno
push
fucomp
xchg
sub
cmp
jg
or
stos
mov
cmc
xor
int
cmp
xor
sbb
jmp
jge
sub
adc
(bad)
hlt
sar
xchg
das
iret
push
div
ds
cmp
aam
cmps
xchg
fwait
sbb
pop
pop
adc
push
mov
aaa
inc
mov
sbb
in
jecxz
hlt
jmp
arpl
hlt
mov
dec
ss
aas
ret
fisttp
dec
into
cmp
stc
cmc
out
sbb
jnp
mov
xchg
mov
pop
xor
dec
stc
jge
ret
rcr
cmp
cs
jnp
sub
shl
mov
add
data16
retf
lods
xchg
mov
xlat
cmp
xchg
xor
mov
xchg
adc
dec
mov
cli
test
dec
sub
fs
dec
cmps
push
mov
movd
mov
stos
sub
jp
cmp
xor
pop
cmp
(bad)
mov
push
xchg
loopne
mov
scas
inc
psraw
call
adc
cli
xor
test
aam
push
rcr
mov
inc
mov
adc
outs
fidiv
hlt
push
shl
xchg
sbb
cmc
(bad)
int3
fcomp
stc
rcl
sub
jo
xchg
test
popa
test
movs
lea
or
cmps
aam
iret
hlt
mov
jmp
xor
loop
jmp
repz
es
iret
cli
cwde
push
sti
mov
int
sub
test
js
mov
sub
test
test
adc
test
movs
pop
jecxz
(bad)
loopne
or
xor
sti
mov
adc
in
sar
mov
cs
inc
or
icebp
popa
mov
push
add
push
repnz
adc
loop
xlat
pop
out
mov
out
fld
or
retf
dec
leave
cmp
lods
fsub
lock
aas
dec
inc
cmp
or
mov
sbb
test
(bad)
lods
jp
aaa
shl
pop
xchg
cmp
jmp
mov
add
and
xor
pop
mov
mov
mov
jecxz
je
js
pop
push
adc
mov
adc
arpl
add
dec
daa
es
(bad)
cmp
xchg
ja
pop
retf
xor
or
xchg
add
and
pop
dec
jb
lea
jnp
dec
sbb
pop
mov
outs
data16
repnz
(bad)
lea
jae
cmp
iret
mov
ret
loop
or
stc
dec
inc
aam
xchg
adc
add
loop
xchg
enter
pop
push
push
and
jnp
mov
or
push
and
shl
xchg
or
xor
push
outs
jmp
push
dec
inc
in
mov
adc
lea
sub
into
inc
sti
and
cmp
sti
imul
out
fwait
push
mov
xlat
fldcw
int
inc
bound
repnz
dec
pusha
push
jmp
out
inc
adc
(bad)
aad
aas
adc
or
mov
ins
ja
mov
xchg
jmp
js
add
cwde
mov
cwde
add
aas
dec
xor
mov
pop
not
jb
pop
lahf
out
pop
cmps
xchg
into
sahf
fiadd
(bad)
outs
imul
vmread
ds
mov
je
out
(bad)
ret
mov
scas
(bad)
mov
mov
bound
jbe
outs
jl
add
xor
dec
xor
mov
pop
jmp
push
fldenv
sbb
sub
into
or
add
mov
sub
and
sub
lea
gs
mov
loopne
retf
adc
mov
xchg
add
scas
adc
inc
shl
push
xor
push
ret
mov
and
xchg
mov
lds
in
retf
dec
inc
dec
pop
std
adc
and
xchg
adc
out
cmp
(bad)
cmc
cmp
jb
cmc
pop
cmp
cmp
or
inc
inc
xor
ss
lods
dec
hlt
rcl
bnd
aas
and
sbb
sbb
mov
jmp
jbe
std
mov
push
mov
inc
add
dec
dec
aas
and
adc
inc
clc
mov
inc
dec
lock
push
ss
and
mov
cmp
or
jae
jb
and
adc
pop
out
dec
ins
or
aad
inc
rol
movs
stos
sahf
mov
imul
adc
int
imul
lock
xor
sub
(bad)
jnp
pusha
data16
add
add
add
sub
imul
hlt
jg
cmp
and
in
xor
cmp
dec
xlat
clc
pop
pop
ins
or
dec
rcl
popa
icebp
xlat
retf
je
jmp
(bad)
jecxz
xor
mov
add
inc
in
inc
jnp
inc
fdivr
loope
inc
xchg
cli
fisubr
loopne
arpl
ret
(bad)
mov
dec
fisttp
add
or
sub
lock
pop
push
dec
cmp
and
scas
out
cld
jmp
xchg
cwde
push
std
xlat
scas
imul
es
call
imul
push
mov
jo
cwde
add
ror
inc
xlat
inc
push
pop
rep
pop
out
ins
cli
jne
call
sub
cmc
dec
sub
stos
add
fs
sar
xor
test
prefetch
xchg
pop
leave
xchg
aas
dec
movs
cmps
out
call
xor
jo
cmp
jmp
mov
xchg
outs
jle
dec
fs
mov
dec
movs
mov
push
std
adc
adc
(bad)
icebp
fcmovnbe
push
icebp
int3
mov
les
pop
or
mov
ret
lea
adc
push
add
aaa
xor
int3
mov
dec
bound
pop
ins
add
sub
push
mov
pop
push
bnd
into
cs
mul
jg
and
mov
sar
add
int3
cmp
fadd
xor
retf
dec
push
jmp
cmp
leave
mov
jnp
les
sbb
or
ret
imul
and
aaa
xchg
inc
adc
es
nop
or
dec
adc
pushf
ins
movs
add
dec
push
ss
leave
jno
scas
mov
xor
add
fdivr
loopne
xchg
jno
adc
lahf
cmc
aad
or
sub
fisttp
mov
dec
sbb
dec
jbe
pop
lea
cmps
bound
out
push
aas
jo
xor
lods
xchg
jecxz
pop
dec
daa
jmp
cmp
jmp
and
mov
jl
mov
aaa
jnp
push
(bad)
jp
push
scas
stos
call
icebp
xor
ret
inc
jns
sti
adc
sbb
test
(bad)
fimul
jp
ins
je
mov
adc
data16
outs
loope
fwait
mov
idiv
lds
fldenv
inc
mov
loopne
int3
std
dec
cwde
cmp
xchg
aas
shl
pop
popa
push
and
(bad)
stc
(bad)
cmp
lea
lahf
cdq
inc
inc
imul
cdq
popf
inc
out
js
fdivr
aas
rcl
data16
push
enter
lods
jo
into
cwde
and
mov
or
test
cmovno
std
xchg
push
call
sbb
mov
pavgw
rol
cmp
adc
inc
pop
cmp
inc
enter
aas
mov
test
pop
jge
fcomp
pusha
fistp
jp
and
pop
imul
adc
mov
push
stc
dec
adc
adc
inc
(bad)
hlt
xor
mov
outs
int3
add
pop
sahf
aam
sbb
shl
sub
popa
inc
cmp
ins
(bad)
je
imul
push
jg
clc
xor
xchg
push
mov
pop
scas
add
adc
fmul
dec
inc
call
arpl
fadd
inc
inc
mov
in
and
pusha
movs
pop
fs
int3
jecxz
mov
adc
repnz
in
or
ffreep
pop
sbb
rol
aas
jle
ja
in
popf
mov
adc
xchg
mov
clc
add
sar
mov
cdq
cmps
js
imul
pushf
ins
xor
test
bound
es
sub
in
fild
aad
cdq
xchg
xchg
call
cld
cmc
xor
jl
fstp
push
ret
fdivr
jns
lods
repnz
jbe
scas
movs
fisubr
ret
pop
pop
mov
mov
or
push
dec
cmp
fidivr
or
cwde
test
imul
jp
inc
cli
jbe
das
push
mov
call
es
pop
in
jnp
loopne
hlt
inc
cmps
imul
jae
and
imul
in
push
dec
or
test
cmp
push
and
add
push
pop
inc
test
test
sti
add
sbb
sub
cmp
mov
cmps
rol
jp
sbb
retf
ins
data16
movs
push
out
mov
fidiv
add
pushf
out
or
pop
mov
lods
test
cmp
push
imul
sbb
(bad)
or
sbb
popa
in
lock
js
es
dec
(bad)
add
cmp
adc
xor
mov
jbe
hlt
or
inc
cmp
inc
mov
jp
cmp
mov
push
fstp
out
dec
dec
xor
mov
sub
inc
sub
je
int3
push
add
imul
int3
xor
mov
mov
lahf
std
push
arpl
pusha
push
das
mov
cmp
and
add
scas
test
inc
out
mov
push
in
adc
sub
sub
movs
lock
ss
inc
dec
jne
je
adc
dec
xchg
sti
imul
imul
mov
(bad)
jmp
mov
out
es
xchg
sbb
jne
shl
shr
inc
add
jmp
loopne
xchg
jmp
fnsave
pusha
cs
or
jg
dec
push
retf
push
mov
mov
idiv
test
add
ins
mov
push
movs
repz
bound
mov
ficom
dec
ins
out
ficom
fidivr
fimul
dec
push
xchg
scas
and
and
and
fidiv
ins
mov
stos
rdmsr
dec
xchg
sahf
pop
(bad)
mov
sbb
cwde
push
int3
scas
nop
sbb
push
adc
push
cmp
ficomp
mov
fistp
imul
(bad)
and
lea
popf
sbb
call
aad
jno
mov
xchg
cmp
add
sub
fnstenv
mov
inc
xchg
cmp
imul
adc
jae
push
mov
push
push
mov
fist
mov
adc
sub
and
and
(bad)
leave
xchg
jecxz
xor
xor
jae
loop
retf
outs
inc
inc
push
test
btc
inc
out
dec
loope
xor
(bad)
cmp
add
add
in
pop
xchg
mov
aad
pop
lock
xchg
fstp
pop
dec
icebp
push
sub
stc
push
addr16
imul
dec
mov
push
out
xor
push
mov
inc
faddp
(bad)
cmps
pop
cwde
mov
add
mov
(bad)
in
mov
pop
lods
inc
sbb
(bad)
pop
and
das
in
aam
adc
jecxz
movs
nop
ror
pusha
in
xor
jmp
(bad)
mov
fcomp
dec
and
add
xchg
les
clc
mov
pop
out
dec
lods
jmp
and
and
cdq
sub
jge
and
dec
mov
out
fwait
push
xor
jae
lods
jae
mov
push
xor
sbb
aaa
cmp
idiv
sbb
mov
mov
ss
add
daa
fld
xchg
cmp
or
mov
inc
in
sub
adc
stc
add
(bad)
ins
hlt
sub
iret
imul
adc
int3
xchg
cld
aam
movs
cli
jb
jne
rol
sbb
(bad)
in
test
sub
jmp
inc
les
push
(bad)
mov
cmp
scas
sbb
nop
mov
sub
or
pushf
shl
fcom
mov
and
ins
mov
mov
fs
jmp
repz
sub
ins
pop
or
rol
mov
int3
clc
imul
xor
(bad)
outs
push
imul
add
outs
fld
cmc
nop
div
adc
adc
into
dec
jecxz
mov
loopne
rcr
sbb
mov
push
stos
dec
and
cmps
sar
push
retf
sbb
jg
xor
(bad)
pusha
inc
inc
ins
cli
fild
xor
jo
dec
xchg
add
sbb
jae
pop
mov
test
outs
and
xor
test
js
mov
cmp
sbb
call
je
xchg
mov
push
sub
into
mov
pop
mov
jp
pop
sub
cmp
jmp
movs
mov
aad
dec
movs
in
sub
or
inc
add
add
js
sahf
sbb
movs
(bad)
push
or
retf
mov
in
push
cmps
fcom
fsub
pop
clc
xchg
add
neg
(bad)
jp
call
cmc
fild
pop
xchg
cmp
hlt
add
pop
add
sub
psrld
aad
and
fadd
popf
adc
sub
cdq
jb
popa
or
je
(bad)
push
pop
jmp
inc
enter
jge
data16
mov
fbstp
addr16
sub
adc
mov
adc
jle
push
dec
pop
xchg
mov
shl
rcr
cmp
(bad)
(bad)
push
sbb
out
cdq
int
stc
(bad)
inc
in
inc
dec
mov
repnz
xchg
outs
mov
sahf
stos
pop
mov
scas
(bad)
sub
lock
or
sti
pop
std
mov
cmc
daa
repnz
sti
mov
mov
add
std
mov
xor
(bad)
jmp
cs
stos
mov
and
and
mov
(bad)
cmc
dec
(bad)
es
or
es
inc
test
dec
pushf
push
mov
in
shl
fstp
rol
pop
fstp
add
ror
fwait
add
inc
out
sub
pop
jns
sti
ret
daa
cmp
mov
inc
into
cmp
lahf
inc
push
jp
(bad)
lds
adc
in
xchg
es
addr16
push
pop
jl
xchg
push
mov
inc
leave
out
(bad)
xor
icebp
xor
fsubr
add
popf
in
pop
inc
adc
jae
test
hlt
sub
add
ds
mov
ror
sub
inc
xchg
sub
add
outs
pop
or
jmp
mov
inc
push
test
aas
jbe
mov
dec
outs
adc
aas
dec
dec
test
or
arpl
push
(bad)
(bad)
push
das
out
call
pop
sub
fcomp
pop
xchg
xor
ins
cmp
sub
pop
inc
push
inc
adc
sbb
mov
mov
mov
sbb
out
loope
jno
adc
popa
popa
mov
cld
arpl
or
loopne
mov
retf
and
xchg
sti
mov
and
test
dec
pop
aaa
movs
lods
shl
les
adc
ss
cmp
test
loope
out
call
push
cmp
(bad)
jle
and
call
sub
lock
or
popa
and
hlt
in
mov
cmps
push
dec
mov
enter
out
pminub
xchg
in
movs
adc
mov
xchg
lods
clc
or
jb
jns
fdiv
out
mov
and
ror
jp
and
mov
dec
inc
add
movs
in
cmc
scas
gs
daa
(bad)
mov
dec
push
inc
sub
dec
cmp
add
loop
xlat
test
je
jnp
in
aas
cmp
aad
xchg
push
and
mov
pop
xor
mov
mov
pushf
je
fsub
mov
ret
es
and
sbb
jno
push
cmp
pushf
popa
loope
dec
sub
adc
shl
adc
and
pop
or
rcr
(bad)
pop
lds
(bad)
inc
bound
(bad)
push
pcmpeqb
inc
xchg
and
addr16
pop
mov
cmp
les
add
ret
mov
(bad)
sub
(bad)
inc
or
and
jo
jge
sub
fiadd
pop
ins
stc
in
or
xor
lods
push
dec
imul
xor
mov
dec
dec
hlt
dec
and
mov
push
adc
ins
push
aas
sub
aas
jge
ror
test
xor
cmp
mov
or
xor
lahf
cmp
aam
jl
adc
inc
(bad)
cmps
adc
call
mov
(bad)
push
xchg
je
adc
jae
test
push
cmc
lods
sbb
into
and
dec
sbb
std
pop
aam
inc
ror
stc
xor
adc
jmp
mov
mov
data16
mov
pop
or
jmp
rol
aam
jae
out
or
(bad)
sub
jns
shl
imul
repnz
outs
lock
mov
sub
ins
enter
aad
psubb
cs
cld
and
mov
add
jno
add
and
jge
inc
mov
movs
pop
cwde
fadd
imul
sub
lds
leave
xor
daa
pop
or
add
out
je
jl
clc
lea
jl
sub
mov
pop
dec
into
jns
mov
mov
fidiv
pop
retf
add
xor
stos
jae
sub
inc
xor
(bad)
pop
fwait
fs
add
pushf
retf
mov
mov
ret
(bad)
icebp
(bad)
push
and
lods
or
xor
outs
gs
loope
add
aam
inc
or
(bad)
icebp
call
add
mov
test
mov
movs
mov
xchg
outs
mov
mov
inc
(bad)
dec
mov
outs
push
gs
xor
outs
xor
fwait
cpuid
sub
imul
or
stc
push
pop
fidiv
les
pop
jnp
add
xor
outs
cmp
sub
popa
sbb
mov
xchg
xchg
jmp
jmp
fisttp
jecxz
dec
lock
fbstp
ficomp
cmp
in
pop
mov
ficom
sti
sbb
cmp
into
addr16
inc
pop
sbb
adc
mov
jle
(bad)
sahf
xor
sub
fwait
pop
jge
adc
sbb
ret
push
or
sbb
or
std
es
iret
ins
std
pop
mov
sub
jmp
int3
xchg
mov
cmp
dec
repnz
jnp
stos
mov
out
xchg
xor
dec
xchg
sbb
cmp
arpl
icebp
fstp
aas
pop
mov
jecxz
scas
mov
jle
imul
inc
sti
mov
sub
mov
jbe
pop
loop
or
or
jl
jne
sub
lahf
pop
pop
mov
add
xor
push
test
dec
cmp
add
or
cmp
push
mov
sbb
cli
mov
cmp
sub
sub
cmp
xchg
lods
push
xor
(bad)
(bad)
outs
xor
aaa
sub
pop
les
inc
test
push
jae
ror
std
in
jae
inc
push
loopne
inc
mov
pop
or
mov
and
mov
icebp
fdivr
cmps
add
jmp
xor
mov
pop
jns
dec
int3
mov
pop
xor
mov
adc
imul
fwait
sbb
jp
add
test
and
(bad)
sbb
not
sbb
push
ds
adc
push
(bad)
retf
pop
cwde
push
or
mov
jmp
jmp
dec
mul
fadd
sbb
xlat
(bad)
pop
mov
cmp
push
in
mov
and
xchg
mov
sbb
or
push
xor
pop
jns
pop
cmp
and
fldenv
lds
into
nop
push
in
or
aas
out
das
mov
sbb
stos
sbb
adc
adc
leave
jno
cli
ds
enter
or
test
pop
push
mov
and
out
pop
dec
mov
mov
mov
dec
sub
or
adc
iret
mov
push
adc
adc
xlat
and
push
stc
xchg
pop
sbb
fwait
jp
pop
sbb
mov
mov
push
sub
movs
inc
scas
and
and
pop
scas
mov
jp
ror
popf
(bad)
loope
dec
xchg
je
pop
push
adc
ret
mov
add
jg
sub
mov
sub
pop
ffree
cld
dec
cdq
push
push
sub
add
jb
stos
jp
and
and
push
push
retf
cmp
jp
push
sub
push
sub
xchg
add
xchg
xlat
mov
mov
call
retf
dec
repnz
xchg
fdivr
(bad)
loopne
aad
and
ret
or
(bad)
cs
sbb
fwait
and
in
inc
xchg
(bad)
mov
pushf
es
(bad)
mov
ss
out
icebp
mov
les
xor
or
push
inc
sub
mov
stos
fild
out
das
pop
ds
iret
mov
ja
or
sbb
add
mov
out
fdivr
cld
cmp
cwde
loop
jo
or
push
cwde
cli
xor
imul
inc
jns
mov
fdivr
pop
mul
hlt
cmp
ret
mov
(bad)
lock
mov
aas
test
imul
sbb
pop
pop
push
in
xchg
and
add
adc
and
das
xchg
add
mov
outs
icebp
cmp
iret
jp
sahf
int
mov
pop
or
and
fdivr
(bad)
in
call
ins
mov
xchg
push
stos
adc
mov
inc
jbe
adc
popa
cwde
push
daa
xor
add
sub
push
jae
in
pop
dec
cmps
test
or
int3
cmp
neg
pushf
and
fstp
popa
cmp
ds
cmps
add
mov
xor
lods
adc
rcr
loopne
cmp
cmp
xor
adc
xor
arpl
retf
pushf
(bad)
mov
dec
mov
dec
fdiv
int3
jp
adc
ss
retf
sbb
mov
push
pop
jmp
and
imul
mov
inc
lods
outs
and
test
mov
push
add
imul
imul
xor
shr
ret
mov
fisubr
pop
xchg
jecxz
dec
call
push
push
xor
fdiv
call
and
add
outs
push
dec
sbb
shl
jle
or
jmp
add
inc
fisubr
std
call
leave
xchg
fisub
repz
jmp
mov
xor
aas
aaa
mov
or
aas
cli
dec
xor
int3
mov
popf
into
addr16
pop
mov
int3
cmp
aaa
jo
mov
inc
or
mov
adc
icebp
mov
sub
mov
mov
and
adc
push
xor
push
cmps
xor
adc
and
sub
enter
cmp
jb
aad
pop
lea
jns
sahf
daa
cmp
loop
xor
cmp
cmps
aas
call
adc
int
adc
rcl
mov
das
popa
mov
jno
es
test
mov
hlt
xor
sbb
cmps
or
pushf
dec
adc
out
jne
retf
popa
dec
fidivr
mov
ins
add
in
dec
fcom
xchg
sub
jne
push
outs
leave
in
add
loopne
xor
inc
mov
jge
mov
retf
add
mov
fs
add
daa
and
xchg
xor
int
add
popa
mov
outs
lea
imul
hlt
rcr
popf
fdiv
loope
das
xor
pushf
cmp
cwde
mov
and
test
sub
ins
ret
movs
xor
pusha
dec
mov
mov
xchg
mov
loope
push
(bad)
lock
rcr
adc
jb
dec
and
mov
jl
push
test
inc
jecxz
dec
and
test
jmp
imul
stc
xor
ror
cwde
(bad)
icebp
dec
ror
mov
loop
pushf
ds
adc
jecxz
arpl
mov
cli
mov
in
xor
pop
adc
cli
dec
jnp
jmp
mov
jb
pop
add
and
add
xor
(bad)
(bad)
daa
sub
icebp
jl
cmp
push
aas
sbb
fldpi
test
mov
mov
adc
cdq
fst
and
shr
je
push
pop
retf
(bad)
xlat
mov
rol
invd
jp
pop
aas
iret
fstp
aas
cmp
sti
xor
out
mov
(bad)
cmp
unpcklps
pop
sbb
aad
call
out
mov
pop
lods
popf
(bad)
ficom
aam
jg
cmp
repnz
pop
add
sbb
cli
call
cmp
push
dec
xchg
loop
(bad)
pop
inc
cmp
sar
dec
les
pop
test
jg
in
imul
das
aaa
cmp
jae
loop
sbb
add
rol
add
pop
dec
test
shr
and
mov
inc
mov
int
fidivr
sub
movs
(bad)
jnp
sbb
test
cmp
add
pop
sub
addr16
cmps
sahf
mov
jae
pop
and
shr
push
or
xchg
rol
dec
inc
loope
cdq
add
jne
loopne
cmps
lahf
int
jns
repz
sbb
xor
imul
mov
mov
imul
int
push
(bad)
in
xor
shr
mov
icebp
add
push
inc
push
fisub
mov
pushf
rcl
mov
xchg
add
add
xchg
bound
je
jecxz
sbb
cmp
mov
mov
push
jae
mov
xlat
sub
push
icebp
lahf
dec
mov
mov
std
inc
mov
xchg
xchg
bound
rol
pushf
jns
mov
sub
and
mov
mov
pop
mov
into
mov
cwde
repnz
sub
arpl
xchg
cmp
xchg
dec
lock
hlt
imul
imul
mov
or
and
loop
cli
mov
push
jae
jns
aaa
clc
xor
sub
sbb
js
inc
mov
sbb
ffreep
inc
adc
loope
jb
push
sti
retf
out
ja
inc
retf
and
ins
loopne
out
dec
clc
pop
test
pop
fistp
push
and
outs
sub
stos
lock
cld
pop
lods
test
jl
sahf
or
repnz
shl
inc
les
jle
jle
or
(bad)
jns
jo
ss
inc
aas
das
clc
xor
cs
dec
and
xor
inc
loope
nop
add
in
rol
pop
adc
lds
adc
xchg
cmp
shl
retf
daa
push
popf
jno
cmp
test
pop
dec
mov
ds
aad
push
dec
ror
dec
sbb
out
dec
pop
repnz
cmp
stc
sbb
test
popa
(bad)
sub
pop
or
dec
outs
ss
jb
je
push
lock
repnz
adc
test
dec
or
cmp
jmp
fisttp
mov
mov
call
adc
sbb
imul
sub
rcl
dec
fs
add
pop
mov
add
xchg
push
fmul
and
sbb
xchg
or
add
(bad)
mov
pop
mov
ror
jb
mov
adc
inc
ds
jl
clc
pop
out
push
mov
dec
and
dec
pop
mov
dec
dec
lahf
pop
push
add
dec
push
jge
ins
mov
loop
shl
stc
sub
inc
sub
in
xor
sahf
mov
push
es
xchg
adc
ds
sahf
mov
sahf
icebp
pop
push
out
rcr
in
cmp
outs
sar
xor
lock
movs
ret
cmp
pop
rcl
push
and
add
fidiv
stc
jae
pop
push
push
push
hlt
shl
xchg
inc
rcl
xor
out
in
inc
stc
dec
mov
push
cli
fidivr
sbb
push
mov
mov
je
jmp
inc
fs
xchg
sti
(bad)
xchg
jne
or
jbe
dec
and
out
call
stos
pop
lods
sbb
sbb
mov
adc
xchg
inc
dec
xchg
jne
mov
mov
mov
das
jle
ret
ds
sbb
mov
sub
pop
xor
arpl
sub
test
rol
enter
stos
mov
add
add
ds
mov
mov
cmp
shl
push
mov
and
ror
sub
repz
imul
push
stos
(bad)
retf
add
and
retf
fsub
cmc
and
loopne
mov
inc
aad
into
mul
xchg
je
adc
pop
cmp
sbb
loope
ins
imul
adc
mov
mov
adc
cmps
or
aaa
in
xchg
jbe
in
jecxz
call
xor
xchg
jecxz
movs
mov
(bad)
fucomp
jne
add
add
push
cmovo
(bad)
out
aas
stos
mov
push
rol
mov
fstp
add
or
pusha
test
mov
fwait
mov
pop
movs
js
jl
pusha
pop
dec
jmp
add
(bad)
shl
or
inc
push
jb
cmc
hlt
push
push
jl
retf
mov
or
cwde
ins
mov
and
or
or
cmp
xchg
test
in
jecxz
shr
or
sub
(bad)
jmp
(bad)
mov
mov
ret
leave
cmc
jmp
xchg
nop
ins
fadd
xchg
jae
movs
jne
xor
mov
jmp
push
cli
mov
shr
mov
jo
mov
(bad)
sti
fwait
mov
jl
mov
hlt
pop
push
fisttp
hlt
sbb
hlt
jl
jmp
movs
and
add
xor
les
gs
xchg
cmps
out
or
cmp
push
test
call
(bad)
pop
mov
pop
push
inc
sbb
jmp
imul
stos
cdq
pop
(bad)
push
mov
cmps
pop
cdq
add
and
stos
into
mov
pop
repz
(bad)
out
add
clc
fdivr
mov
mov
aam
(bad)
movs
or
pop
sub
add
xor
lods
xchg
jns
push
jg
or
cwde
pop
cmp
loop
pop
ds
dec
lods
and
lea
push
sub
popf
jmp
and
and
mov
push
xchg
mov
cmp
cs
inc
xor
rcr
and
sahf
xlat
add
pop
and
cmp
out
rcr
add
aaa
adc
and
push
sbb
fldcw
sahf
js
les
fwait
idiv
mov
push
mov
cmps
adc
or
xor
mov
xchg
out
retf
retf
mov
mov
dec
ret
pop
dec
mov
cmc
ss
and
jmp
cmps
mov
cmp
outs
push
xchg
retf
retf
mov
std
sub
push
jecxz
dec
rol
push
pop
sar
lock
adc
sub
aad
sbb
leave
stc
int
cmps
in
or
adc
loop
or
jmp
test
js
pop
jg
push
sar
cdq
pop
(bad)
clc
cld
call
in
jnp
jmp
jns
leave
jne
fistp
arpl
inc
xchg
arpl
push
gs
pop
xchg
jnp
enter
stc
add
fild
mov
movs
mov
addr16
(bad)
mov
repnz
popf
es
ret
sub
dec
xchg
psubsb
mov
add
cdq
push
dec
push
jl
pushf
nop
or
dec
outs
cdq
xchg
ret
es
outs
push
dec
pop
mov
ja
fimul
push
xlat
mov
xor
mov
shl
dec
cdq
fdiv
add
xchg
xchg
adc
arpl
repnz
mov
xor
add
inc
mov
adc
int
and
out
inc
pusha
jns
xchg
arpl
stos
inc
sbb
cmp
mov
cmps
cld
pop
stos
cwde
popa
dec
jp
cmp
xchg
xchg
outs
cli
pop
repnz
xor
lds
outs
inc
or
popa
or
pop
inc
and
retf
lock
lea
jbe
je
jle
xor
stos
test
lahf
jno
adc
mov
out
jns
pop
pop
clc
mov
nop
inc
aas
jmp
sub
aas
cmps
pop
aaa
add
mov
pop
scas
jno
les
inc
dec
xchg
ret
sub
daa
jmp
sub
cs
ss
add
mov
or
dec
rol
push
adc
mov
ret
jge
cmp
fmul
mov
or
pop
or
mov
dec
cwde
scas
xchg
lods
jmp
lds
mov
xchg
mov
imul
jl
sub
(bad)
ins
and
and
pop
imul
mov
add
rcr
xchg
push
jns
mov
mov
mov
cmp
xchg
xlat
sbb
in
jmp
xchg
xor
mov
mov
repnz
(bad)
repz
sbb
jo
ds
cmp
dec
xabort
xor
push
hlt
and
xchg
fldcw
stos
ins
add
sub
out
and
sbb
gs
test
xor
outs
or
inc
and
fisttp
or
mov
call
pop
sub
data16
mov
fadd
add
gs
and
lods
in
xlat
lock
es
sub
(bad)
daa
mov
cmp
add
sbb
into
pop
bound
push
jb
inc
fwait
out
adc
mov
scas
clc
rcr
stos
fst
add
mov
addr16
sub
dec
jnp
mov
div
cli
xchg
hlt
aaa
cmp
cmp
push
dec
xlat
jbe
mov
sub
lods
lahf
jmp
stos
int
imul
adc
add
je
mov
pop
and
cs
data16
rcl
pop
mul
outs
push
arpl
push
add
or
mov
inc
pop
fwait
inc
test
cmps
mov
ins
push
jle
jge
test
or
push
push
fcom
aas
cmc
out
dec
dec
cmp
cmp
call
outs
clc
xchg
dec
cmp
push
dec
push
dec
pop
movs
jbe
ins
sbb
cmp
push
fdivr
mov
inc
mov
scas
into
inc
add
and
loope
shr
push
ffreep
add
cwde
and
jo
add
xchg
lock
dec
je
js
les
(bad)
push
aam
xchg
push
adc
jmp
add
push
outs
or
push
sub
repnz
push
mov
inc
xchg
xchg
jmp
pop
push
div
pop
(bad)
mov
in
push
outs
push
xchg
cmp
sbb
pop
mov
sbb
mov
outs
popf
addr16
jne
xchg
es
call
jae
push
retf
outs
push
loope
movs
push
js
push
push
pop
jo
mov
fsubr
ret
dec
pushf
mov
xchg
stc
xchg
fmul
cmp
clc
popa
and
or
(bad)
aad
push
int
loop
repz
push
and
outs
daa
jl
push
outs
mov
pushf
cld
jg
mov
push
xchg
xchg
js
lods
cmp
sub
aam
pusha
fiadd
aad
ret
aam
loope
and
xlat
lds
dec
jne
push
fdivr
xchg
retf
nop
fidiv
into
add
dec
ret
pop
add
mov
push
xor
outs
icebp
lock
clc
(bad)
add
xchg
retf
adc
test
inc
or
(bad)
js
xchg
arpl
sub
pop
pop
dec
(bad)
push
xor
(bad)
pop
fmul
stc
push
cwde
push
not
dec
sbb
movs
out
pop
sub
pop
pop
lea
cmp
lods
sbb
lahf
imul
cmp
pop
mov
xor
loope
mov
mov
mov
push
jecxz
fcomp
xchg
lahf
ins
sbb
hlt
push
inc
push
sbb
and
ins
push
mov
popa
xchg
mov
in
sub
test
dec
das
sub
push
push
call
out
dec
into
loopne
cs
out
lods
int3
into
fwait
push
lock
(bad)
nop
loopne
dec
popf
cmpxchg
mov
ficomp
fisttp
mov
ja
fwait
inc
jecxz
xchg
int3
mov
add
sub
pusha
and
mov
cmp
ret
sub
lds
call
push
cmp
sub
loope
mov
scas
jno
(bad)
(bad)
cld
mov
and
(bad)
(bad)
adc
and
inc
pop
pop
sbb
adc
mov
inc
pushf
pop
push
icebp
aaa
and
retf
jecxz
scas
lods
sbb
bound
cmps
jl
add
out
rcl
cdq
mov
out
inc
pop
xchg
movs
add
add
ret
sbb
dec
mov
call
inc
push
push
cmp
popf
int
push
adc
mov
gs
imul
fs
sub
or
add
push
mov
pushf
retf
push
xor
ins
out
add
test
xchg
dec
cs
std
sub
hlt
mov
(bad)
data16
repnz
div
add
mov
mov
sub
jmp
icebp
jae
dec
js
jne
outs
cld
mov
jg
call
mov
ret
leave
sbb
xchg
dec
inc
and
(bad)
mov
jg
shr
inc
lods
das
(bad)
fcmovnu
inc
fs
jmp
xor
std
or
add
scas
xchg
inc
ins
rol
jl
scas
dec
jmp
inc
cmps
dec
es
push
inc
add
rol
outs
aas
or
cmp
sbb
pop
jmp
nop
push
and
ds
sbb
(bad)
and
inc
data16
mov
xchg
mov
cmps
(bad)
adc
cwde
inc
sti
js
inc
jmp
jo
vandnps
mov
lods
fidiv
mov
push
xchg
inc
in
sti
(bad)
cld
in
mov
mov
fnstcw
int3
mov
xor
jmp
dec
movs
adc
repnz
jb
mov
scas
dec
aad
dec
jns
stos
xor
hlt
fcomp
icebp
sar
or
stos
push
into
add
inc
xchg
mov
mov
ins
jl
psubq
daa
fild
inc
sub
add
jge
mov
xrelease
xor
sub
out
in
mov
sbb
dec
and
iret
pop
mov
lds
lods
hlt
inc
sbb
ins
dec
jl
es
ins
push
in
(bad)
mov
cmp
push
xor
or
aad
stos
inc
push
pop
inc
dec
test
push
mov
add
or
push
stos
pop
sub
in
imul
push
cmps
jb
mov
push
mov
mov
lahf
mov
or
add
lods
cld
or
cld
(bad)
fwait
xchg
xchg
mov
cmc
int
or
out
inc
out
fld
pop
sbb
enter
div
div
dec
bound
out
push
cmp
jmp
in
mov
sbb
pop
lock
jb
or
push
jno
xlat
fcmovnbe
xchg
cdq
cmc
fadd
push
mov
les
xor
adc
into
loop
mov
cdq
sub
in
nop
push
fcomp
jae
aam
dec
push
retf
sti
dec
lods
fdivr
retf
dec
adc
jge
or
jne
push
adc
push
sbb
lock
mov
mov
aaa
je
(bad)
lock
sub
rcr
sbb
std
mov
xor
out
clc
dec
add
fsubr
ins
out
das
rcr
test
jb
xchg
jmp
push
mov
xor
lea
xchg
test
loope
retf
sbb
mov
mov
jge
adc
loop
in
xchg
adc
ins
or
and
call
sti
repnz
cld
jb
pop
out
pop
ret
sbb
mov
xchg
push
fmul
scas
xor
or
cld
push
out
sahf
jb
fwait
adc
xchg
mov
out
lods
pop
stos
push
push
test
ror
sub
adc
mov
out
jecxz
jg
mov
fidiv
loope
outs
mov
idiv
xchg
jge
or
(bad)
cmc
pop
mov
cld
adc
jb
or
sti
inc
adc
out
cmp
in
nop
lods
jg
cwde
add
dec
cmps
data16
fisttp
ins
sahf
dec
pop
movs
aas
call
ret
cmp
mov
add
arpl
lds
(bad)
add
(bad)
sub
push
mov
stos
stos
xchg
mov
scas
imul
in
movs
cmps
repz
popa
jne
or
sbb
cld
or
stc
pop
xor
mov
jge
push
or
or
mov
xor
xor
jmp
(bad)
iret
popf
mov
cli
enter
xor
push
or
mov
cmps
mov
mov
adc
or
(bad)
daa
mov
stos
sbb
shl
adc
(bad)
js
cmp
and
mov
or
test
push
push
movs
jne
xor
pop
xor
shrd
loope
cwde
jno
and
imul
arpl
push
outs
retf
dec
xor
jge
pop
or
imul
(bad)
jae
push
sub
xor
jl
jae
push
push
(bad)
dec
and
and
and
std
out
xor
call
mov
inc
leave
jecxz
sub
fcmovb
movs
ins
leave
lea
push
cmps
jbe
scas
enter
into
push
xchg
and
xor
adc
lahf
mov
jbe
das
scas
cmp
xlat
cmps
cmps
add
(bad)
push
scas
cmp
leave
fwait
mov
repz
in
cmps
adc
or
cmc
adc
and
cmp
add
ja
and
push
mov
retf
xlat
and
test
jnp
aas
xchg
xor
pusha
push
push
rcl
jae
cs
xor
add
retf
fst
fild
xor
push
fisub
jmp
xor
xchg
pop
push
loope
mov
jne
mov
call
addr16
fdiv
std
add
stc
dec
mov
ds
sub
inc
lgs
add
les
jae
jns
dec
add
lods
adc
mov
cmps
mov
fmulp
cli
iret
jo
push
shl
loopne
lods
push
xor
ins
xchg
jecxz
xchg
pop
mul
or
sbb
cmp
fldenv
mov
(bad)
and
xor
sub
push
mov
(bad)
push
int
addr16
dec
xchg
xor
cli
(bad)
cmp
je
inc
dec
inc
dec
ds
loopne
inc
xor
test
stos
ret
lods
dec
fadd
add
(bad)
cmp
int3
push
es
jp
xor
sub
xchg
jp
mov
push
add
pusha
mov
cmp
mov
jbe
xor
mov
or
lock
or
and
int
jno
clc
cmp
test
test
icebp
dec
dec
in
and
and
mov
pop
mov
and
mov
das
out
or
inc
pop
call
mov
xor
in
mov
or
jle
nop
mov
sub
frstor
sbb
jecxz
clc
fimul
add
jmp
call
sti
pop
daa
jl
push
dec
jg
aad
add
das
adc
jmp
push
jnp
sar
dec
jmp
mov
les
jmp
imul
push
test
cmp
push
xor
xor
adc
cmp
inc
scas
mov
scas
div
pop
out
stos
shl
and
into
dec
(bad)
sahf
lock
inc
sub
nop
rol
das
test
out
popf
sbb
mov
xchg
or
sbb
xor
dec
xor
psllq
das
outs
sbb
(bad)
push
jnp
mov
or
stc
neg
pusha
adc
xchg
mov
enter
repz
jb
xchg
xchg
fsubr
out
cs
cwde
mov
test
scas
outs
add
or
loope
cld
idiv
jl
cmc
imul
nop
and
test
addr16
xlat
fstp
fnstenv
retf
ins
mov
loope
push
sbb
les
bound
in
outs
iret
adc
mov
cmp
or
fwait
aam
test
xor
scas
(bad)
retf
mov
loopne
mov
mov
add
cmp
int3
cwde
out
sub
retf
pop
adc
mov
clc
or
scas
mov
nop
shl
(bad)
and
scas
sub
pop
inc
add
xor
push
inc
sub
mov
cmp
sbb
int3
cmp
fnstenv
fwait
out
jmp
ja
das
fcmovbe
sub
sahf
jb
cdq
and
aaa
pop
or
xor
pusha
inc
add
jae
mov
aas
lahf
adc
(bad)
scas
inc
dec
retf
popa
xchg
leave
cmps
lea
rcr
out
adc
pop
push
jmp
in
and
sbb
xchg
sbb
test
push
lock
ret
gs
adc
inc
pop
loopne
leave
les
xor
xchg
pop
mov
dec
cmc
movs
fild
ret
adc
push
ret
addr16
test
xor
inc
add
retf
pop
movs
pop
sbb
in
out
jnp
mov
mov
aam
mov
mov
push
test
bound
add
pop
ud2
adc
xchg
sub
sbb
xchg
iret
stos
push
fidivr
xchg
inc
imul
repnz
adc
dec
inc
jb
jo
and
sbb
push
cmps
sbb
jo
test
std
or
gs
jb
adc
loop
sub
retf
pop
or
ret
pop
and
ins
sub
in
daa
mov
mov
jae
mov
(bad)
sbb
daa
repnz
ficomp
mov
mov
sbb
cld
sbb
fsub
sub
lea
mov
jne
sbb
cmp
out
aam
mov
cmps
(bad)
ficom
sub
sub
mov
data16
(bad)
pop
aad
add
out
ret
lods
jo
ret
dec
movs
fldenv
adc
cmp
clc
mov
push
xchg
and
xchg
xchg
dec
movs
(bad)
xor
mov
jl
popf
or
int3
addr16
jns
sahf
xor
and
in
cwde
cmp
pop
pop
mov
retf
adc
arpl
aam
and
(bad)
cs
push
push
(bad)
pusha
mov
sub
ins
test
int
sub
jmp
xor
lds
sub
cmp
call
inc
outs
or
pop
and
inc
call
xchg
(bad)
jmp
(bad)
pop
out
enter
ins
inc
das
xlat
addr16
sbb
das
xor
popf
outs
adc
adc
(bad)
out
mov
test
inc
adc
adc
jle
pop
lock
enter
xor
sub
mov
mov
sbb
add
iret
or
mov
fs
cmps
mov
int
mov
jbe
je
cmps
jbe
je
out
jmp
xchg
pushf
aam
xchg
and
add
jmp
in
mov
adc
xchg
and
jnp
sub
cs
icebp
pop
ins
xor
rcl
or
mov
xor
ror
outs
(bad)
cli
jne
push
sbb
pop
cmp
cmp
jmp
mov
and
dec
push
hlt
mov
mov
dec
retf
retf
add
or
cli
inc
push
dec
push
ret
imul
mov
test
popf
mov
stos
push
adc
mov
(bad)
rcr
jnp
fistp
cmp
in
call
hlt
mov
stc
cmp
mul
adc
jns
retf
mov
add
mov
mov
icebp
xlat
inc
js
xlat
sub
psubq
mov
xchg
push
xor
cld
movs
dec
(bad)
mov
mov
xchg
pop
test
inc
out
xor
mov
cdq
cmp
mov
in
add
xor
sub
sahf
dec
mov
ins
leave
sti
pop
test
add
test
pop
xchg
sbb
sbb
pop
sub
adc
(bad)
lahf
inc
mov
stos
mov
pop
outs
fs
cmp
fsub
cmps
les
xor
(bad)
or
xor
gs
push
stos
mov
in
scas
push
push
pop
and
and
neg
mov
scas
clc
xor
push
or
mov
gs
and
call
(bad)
shl
dec
movs
pushf
sub
les
js
lahf
mov
or
xchg
xchg
into
jae
mov
mov
shl
cmp
cmp
mov
mov
push
(bad)
mov
add
js
loope
sahf
jle
sub
sti
in
xor
xchg
jae
aam
les
push
mov
and
pop
and
shr
int3
pop
jecxz
push
xchg
leave
xchg
cdq
fldcw
dec
sbb
inc
and
hlt
jne
dec
scas
fld
jbe
cmps
cmp
cmp
int3
cmp
repz
xchg
(bad)
imul
jg
jg
mov
or
xchg
ficom
mov
push
mov
jb
pop
and
jmp
inc
push
xlat
push
inc
xchg
out
or
cld
in
imul
outs
xchg
cli
sub
jp
into
repz
dec
mov
inc
inc
call
add
push
lods
arpl
pop
and
stos
ins
lods
movs
and
nop
xchg
mov
jmp
scas
pop
pushf
push
and
mov
or
cmp
imul
pusha
mov
iret
loope
mov
aad
sbb
movs
push
jbe
inc
jne
stos
loopne
adc
or
adc
xor
(bad)
(bad)
ffree
mov
aam
call
dec
stc
mov
add
aaa
iret
lahf
xor
(bad)
leave
into
add
pop
pop
test
scas
jbe
out
and
xchg
iret
sbb
push
pop
cmp
imul
popf
add
mov
stos
jb
mul
xchg
icebp
sbb
in
adc
lahf
cdq
(bad)
(bad)
xor
and
inc
sub
jne
repz
sub
pop
jbe
inc
cmps
aas
sbb
addr16
cdq
icebp
gs
cmp
div
jmp
cmp
or
fbstp
and
lock
call
mov
repz
dec
in
add
and
imul
jno
and
in
sbb
fisttp
pop
push
ret
cdq
mov
pop
xchg
ret
pop
leave
cmc
les
fild
push
push
ins
arpl
sub
push
(bad)
pop
cli
dec
not
mov
mov
and
test
cmc
loop
gs
add
ds
cmp
in
add
(bad)
pop
jnp
mov
sbb
cmp
or
cmps
rcl
sbb
enter
int
ret
mul
popf
fidiv
add
mov
pushf
fdivr
arpl
lahf
fist
(bad)
cmp
sub
xchg
inc
sub
mov
shl
sub
sub
mov
addr16
sub
sub
add
sub
xchg
ret
mov
lahf
mov
dec
sub
call
mov
out
jp
jne
test
rol
aam
outs
mov
xchg
jmp
popa
dec
cmp
push
pop
dec
test
es
or
shl
into
shl
iret
jp
addr16
inc
nop
mov
add
mov
mul
push
ins
enter
out
jge
jae
rcl
jo
pop
mov
adc
pop
inc
inc
jnp
mov
jns
jmp
add
mov
dec
call
mov
push
xchg
jecxz
mov
into
adc
xor
sbb
pop
jmp
and
inc
cmovle
xchg
lea
cmp
adc
add
mov
mov
sbb
mov
sub
dec
sub
cmp
sbb
sub
fwait
push
cli
mov
sbb
push
xor
and
fcmovbe
data16
mov
sub
fxch
push
dec
xchg
adc
cdq
loopne
cmp
mov
inc
inc
and
les
stos
inc
inc
dec
clc
xchg
xchg
pushw
mov
inc
aad
cld
mov
mov
jns
loope
mov
out
pop
or
push
rcl
cli
in
push
movs
jg
arpl
adc
push
add
in
sub
ret
or
(bad)
js
sub
dec
leave
lahf
xchg
iret
push
dec
xchg
imul
cmps
push
popa
mov
lods
nop
push
cli
mov
dec
fwait
jmp
cmp
rep
pop
stc
repz
cwde
mov
jo
fst
and
xchg
xor
jbe
jnp
mov
or
dec
and
cmps
pop
ja
rcl
movs
in
ds
lahf
daa
inc
dec
xchg
adc
icebp
push
sahf
cs
loop
iret
cli
aaa
jns
enter
sub
push
cmc
inc
cmps
fisubr
dec
sub
fadd
add
ficomp
push
pop
push
add
icebp
pop
mov
mov
pop
mov
sub
retf
nop
sub
lea
inc
data16
adc
es
(bad)
sbb
pop
push
add
mov
push
sbb
dec
fs
call
movs
sti
data16
rol
shufps
icebp
mov
icebp
sbb
stos
xchg
pop
iret
aad
fld
push
inc
pop
loope
or
mov
(bad)
cmc
mov
je
out
les
jp
gs
sbb
pop
mov
(bad)
mov
jl
test
dec
(bad)
leave
imul
mov
rcr
sub
hlt
add
enter
pop
ss
mov
stc
lods
mov
shl
dec
mov
loope
jge
addr16
or
dec
jp
fidiv
ret
jo
fwait
inc
idiv
and
vpmacsdql
inc
nop
cmp
cdq
fiadd
inc
out
aaa
cwde
mov
movs
jle
gs
push
cs
test
ss
and
cmp
mov
(bad)
mov
xchg
call
xchg
xchg
sub
sub
in
adc
inc
jl
(bad)
scas
sbb
sub
push
xlat
lea
pop
aam
ss
mov
and
into
sar
xor
pusha
mov
gs
sbb
pusha
ret
shr
ss
jp
stc
repz
add
mov
shl
xchg
iret
ret
movhps
jnp
push
dec
nop
cli
mov
sub
nop
xor
inc
xor
neg
jbe
jae
and
sahf
push
cmc
ja
dec
xchg
dec
ins
retf
ror
aas
fstp
push
mov
ds
pop
mov
(bad)
in
in
jae
and
ja
push
loop
cmps
pop
mov
push
cmc
pop
adc
adc
adc
fisub
mov
mov
mov
(bad)
jg
mov
adc
xchg
push
xchg
shr
int3
adc
aam
imul
imul
enter
enter
scas
cmp
fs
inc
mov
sahf
mov
jne
mov
retf
mov
lods
add
popf
mov
cdq
cmp
adc
popa
ficomp
xchg
shl
fsub
lock
cmp
or
xor
(bad)
movs
(bad)
sub
and
bound
lock
dec
lods
push
xor
je
inc
pop
push
adc
and
(bad)
lea
push
mov
inc
stos
ja
and
sub
cmps
xor
add
retf
jns
(bad)
sti
and
cdq
mov
jne
inc
and
js
mov
call
dec
mov
mov
push
xlat
push
int3
loope
inc
sub
cmp
shl
pop
push
pop
and
mov
push
test
lea
pand
pop
mov
repz
in
fst
mov
dec
fidiv
rol
(bad)
in
cmp
aas
jecxz
cmp
leave
retf
sub
push
and
ret
push
ss
repnz
dec
jg
inc
mov
pop
add
mov
xor
push
push
out
or
ror
cmps
popf
fwait
mov
fisttp
add
sub
or
sub
add
add
sub
outs
fnsave
inc
lea
loop
repnz
fcomp
adc
imul
sbb
movs
jno
js
mov
xor
fsub
push
mov
std
add
sub
jmp
stos
pop
nop
ds
push
es
lea
cmp
inc
push
jo
je
cmp
push
(bad)
xchg
fdivr
mov
pop
sub
dec
inc
jb
repnz
cdq
sub
and
loope
push
mov
sbb
fadd
(bad)
mov
dec
fnsave
sub
in
sbb
sti
mov
pmulhuw
xchg
pop
movs
das
(bad)
jge
pop
jmp
mov
loop
jae
ins
push
and
push
cmp
cmp
cmp
xchg
std
push
test
cvtps2pi
shl
ret
daa
cmp
cmps
or
fmul
inc
sub
sbb
xor
mov
xchg
dec
stos
push
movs
cmps
pop
call
into
xor
ins
fisubr
push
mov
and
sub
adc
mov
pop
jge
lods
rcr
mov
test
pusha
add
push
rol
push
ins
dec
and
scas
mov
je
dec
jmp
fst
sbb
adc
or
cwde
ins
sbb
push
(bad)
xchg
out
dec
cmp
ror
std
es
(bad)
sar
test
cmp
jne
repz
aas
mov
push
push
(bad)
xchg
lahf
fnsave
cld
pop
mov
(bad)
fld
push
jecxz
dec
xchg
fmul
fistp
movs
mov
fs
imul
enter
cmps
inc
(bad)
shl
mov
mov
scas
xor
movs
jmp
sub
jb
push
pusha
mov
dec
cdq
sub
mov
stos
bound
inc
pop
dec
cmp
xchg
rol
jne
fwait
mov
xchg
push
push
jbe
mov
pop
fadd
cmp
ins
cmc
fiadd
(bad)
lock
sbb
adc
ins
inc
dec
sti
and
mov
mov
movs
xor
lods
inc
xlat
(bad)
pop
jl
or
das
mov
ins
hlt
ss
add
aam
dec
ins
repnz
sub
fstp
rcl
stos
pop
pop
js
sub
push
adc
sbb
push
es
adc
cmc
sahf
lock
repnz
push
inc
or
mov
sub
(bad)
frstor
out
out
xchg
jo
xor
mov
mov
sub
xor
push
cdq
pop
mov
dec
push
fisttp
sti
and
or
lods
mov
into
and
in
and
pop
rol
aas
lahf
mov
mov
cmps
(bad)
hlt
mov
int3
cmps
inc
std
rcr
pop
mov
cmps
mov
mov
int3
jecxz
movs
sub
adc
push
fidiv
cmp
pop
mov
das
sbb
adc
adc
add
mov
es
mov
fscale
outs
mov
fld
mov
sar
inc
jb
jecxz
sar
push
hlt
mov
ficomp
inc
cmc
inc
data16
arpl
out
mov
bound
dec
add
jne
lea
xchg
ss
in
js
test
imul
pop
clc
ja
loope
xchg
pop
neg
cdq
jbe
out
mov
aaa
jo
push
dec
mov
xchg
push
mov
popf
mov
aad
add
mov
mov
loopne
jb
mov
test
push
inc
(bad)
aad
jle
xor
jo
fld
in
daa
daa
jge
sar
je
icebp
or
sub
or
sbb
push
dec
ret
mov
dec
adc
jbe
cs
push
test
enter
lds
sbb
cmps
inc
or
loop
out
xor
cs
es
cmp
ret
call
(bad)
sbb
int3
push
dec
mov
pop
jb
out
jo
xor
in
cld
sub
mov
icebp
stos
mov
jmp
shr
cmp
or
int
sbb
and
in
cmc
sub
mov
push
adc
aam
jmp
push
jp
mov
push
cs
cs
cmc
dec
cs
bound
add
xor
in
iret
ins
xchg
dec
and
and
gs
xor
jb
jno
movs
ja
or
(bad)
aas
aam
and
je
cmp
push
mov
sahf
jecxz
in
dec
fcomip
lea
push
cmp
or
addr16
inc
push
and
jb
out
jb
cli
ror
enter
push
iret
cld
and
fs
add
xor
cmps
je
hlt
hlt
mov
and
leave
mov
mov
xor
mov
cmp
das
add
jl
in
pop
jns
es
jne
lds
pop
imul
aaa
outs
out
ins
data16
test
mov
mov
repnz
lock
lods
jae
movs
mov
cdq
xor
repnz
lock
arpl
loop
cli
cmps
mov
aam
add
push
ins
mov
push
mov
sti
data16
call
push
jne
sti
or
fsubr
(bad)
push
cld
cwde
cwde
arpl
mov
jmp
rol
in
dec
ret
mov
rol
sub
leave
sbb
retf
dec
sub
and
bound
and
jge
or
sub
test
pop
push
push
push
cmps
pop
ret
daa
jl
mov
dec
mov
dec
pop
ss
outs
ficom
mov
xor
mov
ror
imul
popa
scas
push
adc
mov
push
sahf
cmp
shr
and
std
adc
mov
out
jb
int3
not
test
push
loop
xor
mov
pop
loopne
push
hlt
lds
ja
lds
(bad)
adc
fmul
mov
dec
in
das
scas
dec
mov
mov
cmps
sub
test
sbb
ds
(bad)
mov
xchg
nop
jns
xor
jb
add
mov
into
xlat
in
outs
pop
daa
pop
jb
inc
push
cld
add
adc
mov
sbb
xchg
cwde
xor
xor
sub
or
mov
test
scas
ss
jno
adc
cmp
sbb
jnp
sub
add
pop
mov
pop
bound
inc
mov
outs
inc
cdq
add
out
mov
movs
xor
pusha
sub
mov
(bad)
mov
dec
call
mov
sahf
imul
mov
or
add
dec
xchg
(bad)
repz
jle
in
(bad)
(bad)
mov
out
clc
adc
int3
add
and
or
mov
js
popa
dec
jp
push
dec
movs
call
fwait
enter
add
xor
cld
dec
mov
ret
pop
mov
sbb
fimul
cmp
gs
sub
cmps
dec
mov
mov
push
pop
push
pop
inc
ficom
in
mov
xchg
popf
mov
loope
adc
scas
add
adc
aas
sbb
mov
inc
lods
loopne
pop
push
retf
adc
dec
stos
and
addr16
and
mov
in
(bad)
jo
dec
xchg
pop
icebp
daa
repz
xchg
nop
inc
pop
xchg
sub
outs
jg
push
(bad)
sub
rol
cmp
adc
scas
jnp
outs
jb
shl
jmp
push
jl
sub
(bad)
clc
add
pop
mov
and
dec
cmp
xchg
cmps
out
icebp
repz
sub
jmp
mov
leave
mov
ins
sub
dec
push
dec
mov
jne
mov
mov
adc
mov
jge
pop
push
dec
ror
dec
or
and
jnp
(bad)
mov
in
mov
jae
imul
sahf
into
cwde
ficomp
jmp
pop
dec
data16
mov
cld
mov
dec
sub
mov
aad
(bad)
pop
adc
ins
inc
add
in
lea
cmp
neg
mov
dec
movs
test
sub
adc
es
push
clc
(bad)
mov
pop
test
or
adc
cmp
sub
sbb
adc
xchg
ret
lds
call
mov
out
pop
cmp
adc
and
cmp
jo
(bad)
iret
or
sub
repz
into
mov
lds
pop
push
out
dec
lods
mov
fild
push
out
push
push
push
cmps
xchg
pop
jmp
data16
mov
fwait
aas
sbb
push
jo
ins
ja
adc
adc
or
or
dec
cmp
stos
(bad)
mov
stos
cli
add
mov
push
xor
jb
scas
out
xchg
movs
sub
xchg
mov
lahf
dec
push
out
loope
add
imul
icebp
and
sbb
jne
and
popa
je
jns
push
cli
sub
xchg
bound
xchg
cmp
(bad)
jns
add
xor
jno
and
pop
jge
cwde
inc
cmp
jno
cli
and
jb
and
and
push
mov
out
push
pop
imul
sub
cwde
inc
je
sub
lahf
mov
mov
mov
sbb
cli
not
das
ret
pop
or
adc
lea
add
jnp
push
idiv
imul
repz
sysret
aad
add
(bad)
fcomp
cmp
mov
dec
adc
ss
in
sub
popf
jne
das
ret
lock
stc
add
mov
into
ud1
inc
dec
aas
addr16
mov
sar
test
pop
push
mov
mov
dec
pop
fidivr
jb
(bad)
rol
add
rcl
ins
sbb
cdq
daa
push
call
pop
das
ret
aaa
mov
xchg
scas
mov
sar
ds
xchg
outs
mov
data16
jmp
leave
jns
xchg
pop
ins
mov
sub
jl
outs
push
jns
xchg
ins
push
daa
xchg
test
mov
out
cmp
sahf
shl
push
xor
sub
jle
add
movs
mov
fcomp
shr
pop
or
nop
jmp
ins
cdq
loope
shl
popf
xchg
push
cmps
test
call
push
(bad)
mov
icebp
hlt
pop
mov
jb
(bad)
xchg
push
xor
popa
sar
pop
leave
cmps
dec
push
xchg
jl
add
sub
ins
cmp
xchg
cdq
into
addr16
out
mov
xchg
inc
es
clc
mov
pop
push
nop
inc
jp
jnp
leave
or
xchg
pusha
hlt
and
je
call
or
int
cdq
pusha
ror
xor
xor
scas
or
test
xor
(bad)
aam
scas
push
(bad)
int3
xlat
jo
and
ds
call
gs
rol
in
push
daa
(bad)
gs
xor
jle
push
iret
stc
and
stos
pushf
or
add
jo
cs
mov
lahf
hlt
mov
int
aam
and
fbstp
bound
and
mov
mov
jl
or
push
jge
mov
mov
into
mov
clc
jecxz
(bad)
xchg
and
add
in
pop
fwait
mov
lea
(bad)
dec
dec
mov
cld
xchg
shr
icebp
fwait
icebp
mov
xchg
adc
push
sbb
jns
sbb
inc
pusha
(bad)
lahf
loope
adc
inc
retf
sbb
add
clc
jno
xchg
push
lea
dec
je
sbb
ds
mov
mov
pop
arpl
xchg
fidiv
adc
add
in
popa
jg
popa
fdiv
out
aad
lahf
dec
ja
mov
dec
cld
lods
stc
mov
aas
adc
cld
inc
gs
popf
push
(bad)
dec
cmps
jb
pusha
inc
dec
pushf
shl
je
sbb
enter
mov
jl
stos
add
lods
movs
cmp
xchg
mov
lahf
popf
add
jns
arpl
mov
fistp
pop
out
retf
sbb
pop
rcr
cmps
sbb
retf
inc
mov
(bad)
jne
inc
aam
sub
pushf
pop
xchg
scas
sbb
cdq
jmp
jmp
inc
mov
mov
mov
fs
inc
repz
adc
stos
lds
add
and
mov
aas
xor
pushf
data16
jecxz
lods
dec
inc
cli
and
int3
pop
add
(bad)
(bad)
xchg
addr16
stc
add
push
sbb
xchg
fwait
sbb
add
dec
aam
stos
iret
out
lods
repz
inc
xor
mov
add
movs
push
xchg
shr
push
(bad)
out
jecxz
test
shl
push
call
adc
lock
int3
xchg
fdivr
mov
ret
ret
mov
pusha
aas
add
xor
(bad)
mov
in
pusha
sbb
sub
dec
pusha
inc
stos
push
mov
jle
sub
push
sbb
inc
shr
adc
call
mov
shl
sub
popf
scas
arpl
js
loope
mov
(bad)
jmp
sbb
aas
(bad)
jb
xchg
enter
arpl
mov
jp
sub
std
pop
out
jmp
cmps
mov
sub
dec
scas
cdq
cmp
pusha
ins
loope
sub
xor
call
push
and
inc
add
jmp
sti
ins
mov
jb
xchg
pop
pop
sub
test
push
ficom
loopne
pusha
loope
cmp
xlat
loop
stos
pop
inc
jnp
jmp
fsub
rcl
xchg
dec
inc
mov
cmp
dec
popa
cdq
jg
lds
cmp
adc
adc
push
(bad)
daa
pop
(bad)
lahf
into
cwde
mov
or
push
fisub
mov
inc
mul
out
push
jge
mov
imul
or
pushf
popa
sbb
bnd
ficomp
jo
xchg
fisub
ds
lds
and
xor
mov
jg
mov
call
dec
sbb
push
cld
mov
mov
daa
ds
or
adc
lods
sbb
jnp
push
cmp
and
pop
mov
cdq
xchg
push
sbb
cmps
xor
in
cmc
loop
scas
add
sahf
test
pop
sub
jne
and
in
pop
xor
xchg
push
pop
test
in
push
pop
and
hlt
aad
loopne
jg
scas
push
xor
movs
clc
fcom
mov
arpl
lods
xor
sbb
mov
jp
das
cmp
clc
mov
pop
push
aam
mov
jecxz
push
cmp
(bad)
(bad)
cwde
sub
inc
sub
hlt
movs
inc
xor
ja
mov
xor
xchg
idiv
clc
mov
and
pop
mov
je
sub
mov
retf
inc
xor
test
mov
push
sbb
dec
jne
xchg
jle
and
outs
retf
adc
(bad)
retf
push
call
and
mov
pop
mov
fwait
push
imul
or
call
dec
sti
add
and
mov
out
or
es
sub
(bad)
push
add
ss
or
xchg
sub
mov
ftst
dec
in
add
xor
xchg
sahf
add
cmp
(bad)
jmp
mov
or
xor
loope
cmps
loope
adc
sub
or
pop
xchg
or
adc
cmp
pop
icebp
mov
mov
mov
inc
push
mov
scas
inc
aas
pop
mov
daa
hlt
lahf
ret
adc
rol
dec
pop
inc
dec
leave
aam
inc
in
addr16
(bad)
jecxz
mov
(bad)
push
test
jle
fimul
mov
mov
call
movs
scas
outs
mov
arpl
nop
out
fs
xchg
scas
imul
add
push
sbb
popa
sub
ror
stos
cli
pop
push
loopne
mov
daa
je
cwde
sbb
sar
cs
sub
sub
sub
das
ds
cmp
fdivp
stc
fstp
and
xor
stos
movs
sbb
dec
pop
pop
les
test
mov
and
loope
jo
push
arpl
jb
mov
lods
out
pop
mov
fcom
fadd
rcr
and
clc
mov
nop
xchg
call
pmulhuw
ficom
dec
loopne
inc
enter
outs
and
sub
shr
in
cmp
mov
out
out
and
ins
or
mov
jb
sbb
push
mov
test
(bad)
and
sahf
sti
sbb
daa
imul
fld
cdq
pop
cmp
inc
or
ins
and
aam
xor
add
cmp
fidiv
inc
(bad)
addr16
das
pusha
sbb
(bad)
and
jl
int3
mov
fdivr
das
mov
adc
inc
sub
test
rcr
rcr
das
dec
les
xchg
popa
out
test
sbb
mov
test
pop
addr16
addr16
retf
lods
mov
leave
mov
cmp
jmp
jb
stos
or
push
mov
dec
dec
adc
stos
inc
dec
push
cmp
pusha
jecxz
fnstenv
jbe
and
outs
dec
push
popa
in
add
xchg
sub
fisubr
ficom
je
inc
push
sbb
fndisi(8087
repnz
js
cdq
add
mov
xchg
sub
cmc
test
fnstenv
xchg
repz
repz
(bad)
mov
test
push
and
pop
test
in
shl
push
or
lea
fnstsw
or
fild
mov
stc
sub
push
adc
push
jo
add
push
lock
xchg
push
jg
push
push
xchg
cmp
daa
xor
es
pusha
test
(bad)
aam
in
push
xor
adc
out
xor
lds
mov
cli
mul
dec
idiv
or
mov
jo
(bad)
test
mov
jle
dec
pop
outs
ins
rol
lahf
dec
ror
jb
mov
retf
mov
dec
jns
retf
rcl
outs
data16
(bad)
mov
popf
sti
dec
sub
aad
push
movs
cwde
push
imul
pop
stc
out
int
dec
or
cdq
xor
outs
and
fiadd
stos
and
jb
aad
sub
sahf
and
xor
jle
jle
int
psllw
and
adc
mov
rsqrtps
out
das
imul
(bad)
pop
xchg
arpl
rol
cmp
fidivr
ins
mov
push
adc
sbb
mov
dec
xor
inc
dec
test
xchg
in
jns
daa
sub
pop
cmp
fnstcw
pusha
sub
mov
sub
rcr
bound
ret
mov
scas
int3
mov
add
adc
add
fwait
mov
or
pushf
push
pop
clts
imul
dec
ds
mov
rcl
call
retf
jne
dec
js
addr16
mov
test
push
sbb
fnstsw
cmp
pop
jge
and
enter
cmc
movs
fistp
jge
outs
add
adc
jl
jecxz
mov
mov
pop
push
mov
ja
inc
lea
cmp
rcr
jle
movs
xor
mov
aad
adc
dec
sub
iret
or
xor
inc
aad
jnp
jmp
cmp
in
imul
jne
push
icebp
test
ja
dec
mov
cs
pop
lea
sbb
mov
(bad)
cmp
pop
jle
jnp
mov
adc
adc
mov
pop
fidivr
adc
div
or
imul
mov
sub
pop
lahf
xchg
enter
call
enter
mov
sbb
push
and
(bad)
es
xchg
imul
cs
jno
das
push
in
pop
jb
sbb
mov
mov
(bad)
icebp
add
push
out
leave
sbb
jg
mov
test
jbe
push
fwait
mov
fidivr
pop
pop
cs
or
adc
lds
cld
loop
(bad)
mov
jb
cmp
arpl
or
jge
xor
leave
arpl
mov
sub
(bad)
popa
(bad)
movs
pop
imul
dec
xchg
inc
inc
push
cwde
imul
popf
gs
push
(bad)
sti
xor
ret
dec
div
xor
or
movs
cmp
data16
test
loope
push
xor
push
xchg
adc
jbe
pop
push
inc
xor
or
cmps
stc
ds
sbb
inc
mov
test
outs
(bad)
jbe
mov
pop
sbb
push
push
add
cdq
rcl
or
scas
pop
fldcw
sub
lea
xchg
inc
xchg
gs
ja
jnp
hlt
cdq
dec
call
adc
pop
sbb
mov
push
cld
ds
or
adc
push
jg
add
cmp
sub
sbb
mov
rcl
cmps
xchg
outs
cmp
cdq
adc
outs
inc
loope
mov
inc
cmp
xchg
loope
pop
or
popf
out
scas
nop
popf
xor
xor
xchg
xor
aam
mov
jecxz
mov
xchg
adc
jne
pop
inc
movs
xchg
in
aaa
cdq
outs
or
js
push
ret
retf
and
sahf
add
lods
and
call
call
sub
shl
push
sbb
rol
(bad)
jmp
xchg
xchg
cdq
jl
dec
adc
cli
mov
and
in
jne
cdq
imul
stos
or
rcr
stos
ins
mov
les
lock
mov
mov
pop
stc
adc
and
(bad)
add
dec
lods
ins
adc
push
mov
inc
adc
mov
cli
mov
sub
mov
or
inc
call
rol
jg
loop
ds
or
adc
add
xor
xor
mov
jl
aad
push
sub
jae
shl
repz
shl
xor
pop
dec
pop
ss
fmul
sbb
fadd
push
sbb
jns
jb
xor
jnp
jmp
xchg
xchg
mov
les
push
sbb
mov
(bad)
sbb
ret
push
xchg
inc
push
xchg
mov
rcl
std
out
aaa
loope
aaa
loope
int
jns
jbe
test
xchg
ja
push
fistp
mov
cmp
or
xor
js
cli
jno
das
and
pop
xchg
test
adc
cmc
addr16
(bad)
cmp
leave
call
pusha
xchg
cmp
push
loop
pop
inc
out
outs
mov
cmps
std
popa
sbb
fnstsw
cmp
ror
cmc
xchg
test
mov
aad
adc
jmp
pushf
enter
das
push
pop
or
add
loopne
je
cld
(bad)
jecxz
retf
add
dec
pop
mov
retf
push
pop
(bad)
push
stos
stos
push
popa
adc
xchg
cmp
rol
int3
test
inc
add
xchg
or
dec
push
test
mov
loopne
int
outs
jmp
leave
aas
hlt
movsx
and
jbe
sahf
outs
cwde
outs
gs
test
xor
lods
fadd
or
inc
in
pop
push
mov
sbb
ins
pop
push
mov
cld
push
xchg
sub
xor
push
das
mov
xchg
mov
adc
dec
add
and
callw
adc
es
cwde
lods
in
and
jo
call
popf
fnstcw
pushf
sti
push
mov
push
pusha
(bad)
sbb
mov
push
push
out
pop
test
push
pusha
jl
cdq
stc
out
mov
pop
cmps
iret
push
push
add
test
cmp
int3
cmps
cmp
int
xorps
mov
xor
adc
ficomp
inc
jmp
mov
sbb
inc
and
add
ins
xor
out
(bad)
inc
pop
cmp
out
inc
pop
ins
pushf
jle
mov
push
test
mov
xor
iret
jge
ret
ror
int3
fdiv
mov
dec
and
sbb
xor
(bad)
std
push
hlt
cmp
jecxz
cs
adc
pop
xor
xor
fistp
arpl
or
stos
push
or
jge
sbb
mov
xchg
cld
cmp
ret
mov
xor
pop
mov
es
cli
rol
sar
push
aam
adc
xor
mov
je
mov
pushf
mov
cld
retw
mov
mov
pop
repz
adc
push
fs
repnz
cli
lea
imul
mov
ins
or
fild
aas
popf
jmp
inc
lock
inc
mov
hlt
in
cs
cmp
sti
test
sbb
dec
mov
ret
mov
outs
push
mov
mov
enter
icebp
xchg
movs
pop
pop
add
add
mov
cmps
shl
inc
iret
retf
push
mov
jae
pop
jne
sti
mov
out
mov
rol
jb
and
loop
fsubr
xchg
fucomip
jmp
pushf
adc
rol
or
add
dec
jne
dec
fs
lods
jo
add
mov
mov
jmp
cld
push
(bad)
stos
cmp
test
adc
sti
sbb
repz
aas
ds
jnp
inc
ja
and
add
pop
xchg
push
in
mov
movs
mov
in
pop
in
test
jp
mov
arpl
xor
xlat
or
or
test
enter
jbe
adc
mov
loope
rcl
pop
out
xor
call
shr
sbb
enter
arpl
das
cmps
mov
cmps
inc
imul
mov
repnz
jno
fdiv
std
sar
add
or
in
jg
arpl
mov
cmps
add
xchg
rcl
sbb
xor
xchg
mov
pop
xor
mov
sbb
call
arpl
add
pop
mov
jmp
(bad)
xchg
cs
sbb
inc
loope
xor
xchg
mov
test
inc
sbb
adc
mov
fild
mov
mov
jmp
rcr
shl
retf
sub
into
lock
jns
and
push
imul
xor
jne
adc
xchg
inc
jg
loopne
push
adc
fcmovne
xchg
jle
dec
jo
out
xchg
sub
mov
ja
nop
jl
mov
loop
cli
xchg
imul
jne
cmps
lds
shr
push
cwde
dec
adc
dec
int3
lods
(bad)
icebp
into
imul
xchg
test
mov
mov
jp
sbb
test
fisttp
in
jnp
jge
mov
fsub
test
mov
bound
(bad)
ss
sar
pop
pop
ja
scas
mul
and
mov
retf
icebp
mov
and
dec
sub
icebp
fs
push
sar
test
out
arpl
dec
cmps
aam
mov
inc
cmps
shl
sub
fnstenv
xchg
(bad)
(bad)
mov
mov
jnp
jg
pop
sbb
fidivr
imul
lods
add
push
push
jo
sub
push
test
mov
fcom
es
cmp
rcr
or
aaa
rcr
inc
(bad)
inc
and
cmps
jle
or
jbe
sbb
inc
and
push
jecxz
jne
fidivr
adc
push
push
mov
or
mov
sti
cmc
dec
cmp
mov
shr
and
mov
call
es
dec
xor
pop
add
(bad)
and
or
pop
scas
mov
ror
fcmovnu
mov
inc
or
jecxz
(bad)
mov
jae
rcl
dec
fs
cmp
jle
push
int3
fist
movs
out
outs
leave
scas
and
pop
adc
sar
sbb
adc
mov
out
fucom
mov
mov
jae
ins
dec
enter
ja
push
jae
mov
xchg
lods
rcr
sti
test
lods
xlat
clc
(bad)
into
imul
popa
fcmovb
cs
sbb
jge
inc
xchg
stos
addr16
jecxz
repz
fdivrp
bound
jns
fcomp
jbe
scas
shr
mov
loopne
cmp
cwde
(bad)
(bad)
cmp
or
out
gs
outs
not
xlat
lock
inc
push
inc
mov
movs
or
(bad)
arpl
and
(bad)
add
push
mov
icebp
retf
iret
push
sub
cmp
lahf
jge
mov
pop
call
jno
sbb
and
jg
pop
sbb
js
aam
fs
imul
sub
int3
dec
lock
sar
sbb
pop
inc
mov
cmp
add
pop
in
mov
cmp
mov
xchg
mul
mov
cmps
pop
mov
pop
jne
adc
(bad)
fcom
je
movs
xor
mov
ins
pop
lods
pop
aaa
add
push
je
fldenv
mov
jnp
xchg
out
mov
xor
xchg
imul
nop
mov
movs
mov
popa
int
cmps
ja
jae
cmp
xor
xor
and
pop
xor
adc
inc
mov
mov
retf
gs
cmp
(bad)
outs
or
cmp
cmp
add
dec
lods
movs
ss
rcr
inc
jp
pop
mov
mov
sub
sub
and
or
add
mov
xor
stos
mov
cmps
xor
mov
aad
test
loop
in
inc
loopne
test
sub
fcmovbe
mov
aaa
pushf
push
stc
fsubr
iret
pop
push
dec
pop
xchg
outs
ds
mov
push
adc
sbb
xchg
jb
(bad)
shl
cmp
xchg
push
popa
jbe
mov
(bad)
jp
mov
and
cmp
and
inc
mov
cwde
xchg
mov
ror
scas
xchg
pop
xor
fs
dec
sub
nop
push
jbe
pop
fild
mov
jae
cmps
addr16
push
fild
sub
lods
dec
repnz
and
(bad)
push
es
mov
int3
cmp
inc
out
cwde
enter
sub
iret
inc
cs
cmc
or
xchg
xor
or
mov
add
sbb
mov
ss
sub
dec
adc
xchg
xchg
arpl
jb
pop
push
(bad)
and
add
sbb
jae
(bad)
sbb
cmps
cmps
inc
pusha
(bad)
movs
pop
adc
pop
popa
arpl
sub
fs
aad
js
ins
and
gs
xor
in
mov
xchg
cmovns
aam
dec
xchg
sbb
jae
sti
stos
(bad)
out
adc
push
push
sbb
fninit
pop
shl
push
ja
cmp
arpl
test
cmps
mov
mov
sub
rcl
ss
sub
pop
test
pop
(bad)
xchg
pop
push
push
(bad)
adc
jl
aam
dec
or
dec
pop
pop
sub
test
mov
test
int3
xchg
into
(bad)
rcl
xchg
in
dec
div
mov
addr16
adc
jmp
fidivr
mov
and
out
test
jb
add
pop
push
int3
ret
call
out
cli
sbb
mov
jle
ds
mov
add
in
dec
adc
mov
jg
dec
push
xor
jns
fimul
fnsetpm(287
lods
in
adc
mov
loop
jo
jns
test
push
and
out
imul
jns
adc
and
loop
push
cli
jbe
iret
stos
add
jecxz
cmp
push
test
adc
(bad)
xchg
sbb
cwde
daa
sub
push
xchg
xchg
push
in
jae
jne
aam
push
pop
not
loope
pushf
(bad)
adc
int
stos
stos
fidiv
lods
and
iret
pop
pop
cmps
xor
repz
and
or
cmp
jmp
adc
fild
jmp
jne
ds
mov
ror
and
daa
mov
add
enter
jge
pusha
pop
retf
fmul
sbb
into
mov
rcr
popf
pop
cmp
inc
cwde
fcomp
je
and
dec
cmp
out
popa
js
or
xor
pop
xor
jg
out
repnz
mov
int
add
sbb
shl
jp
fbstp
add
mov
int3
push
mov
hlt
mov
sbb
sub
mov
fstp
rcr
(bad)
mov
aaa
in
dec
xchg
xchg
push
cmp
(bad)
push
test
movs
movs
call
sbb
movs
shrd
pop
stos
stos
mov
clc
or
fsub
das
scas
imul
push
mov
push
popf
(bad)
repnz
mov
aaa
push
divps
sub
push
mov
retf
mov
inc
cmp
call
rol
inc
xchg
and
mov
xchg
add
add
ret
inc
push
out
inc
cmp
inc
or
add
xchg
bound
pop
test
xchg
adc
push
gs
ds
test
fwait
jecxz
out
dec
ins
mov
push
push
lahf
and
or
add
mov
jb
lock
ss
jmp
jmp
sub
neg
push
sub
push
mov
sub
push
push
aaa
jge
or
jle
mov
or
popa
mov
sub
ins
lds
mov
lods
inc
aam
inc
push
movs
das
in
inc
jl
gs
cmps
xchg
retf
xchg
adc
cmp
inc
inc
push
cmps
sub
and
cmps
and
pop
add
adc
mov
ret
jb
push
mov
lea
nop
push
es
cmp
gs
fst
pop
inc
mov
jle
mov
pop
cwde
xchg
pop
or
test
dec
popa
lea
push
fld
in
icebp
or
mov
out
xchg
sub
xchg
pop
aas
out
movs
ret
push
loope
dec
fistp
xchg
dec
cmp
mov
ret
retf
mov
mov
das
sbb
lock
repnz
jno
arpl
adc
push
sub
(bad)
dec
pop
xchg
xchg
(bad)
shl
test
imul
aaa
jge
push
xchg
mov
mov
call
in
in
sub
adc
fst
fwait
shl
stos
sub
jge
mov
push
movs
leave
add
gs
jmp
fimul
sbb
loope
cwde
xchg
sahf
mov
push
and
push
jb
mov
push
cwde
mov
test
adc
shl
jbe
cmps
fidiv
mov
pop
ins
add
loopne
out
out
ja
or
lahf
rcl
scas
or
je
adc
adc
xor
jge
stos
xor
cwde
add
call
or
pop
push
jle
imul
dec
cmp
(bad)
mov
movs
mov
add
inc
mov
gs
movs
mov
adc
js
js
int
gs
jecxz
or
mov
sub
shl
xor
gs
cmp
pop
fimul
mov
lahf
repz
fisub
jno
ficom
push
movs
xchg
mov
xchg
mov
adc
xchg
mul
cwde
push
scas
jne
mov
shr
push
add
hlt
(bad)
cs
inc
sbb
(bad)
sbb
jne
dec
into
imul
and
cdq
stc
add
fist
push
pusha
in
out
add
xor
push
rcl
int3
sbb
inc
mov
cmp
rol
xor
leave
jmp
and
cmp
xadd
dec
jmp
push
cwde
xchg
call
mov
or
bswap
adc
add
add
dec
das
xor
inc
loopne
ins
pop
(bad)
test
or
imul
lea
sbb
icebp
dec
xor
or
add
cdq
pop
jno
or
pop
xchg
pop
jbe
addr16
mov
xlat
sbb
and
add
mov
push
inc
adc
in
dec
dec
push
pop
xor
jmp
les
adc
pop
imul
push
movs
push
inc
pop
inc
in
mov
ss
das
pop
(bad)
mov
push
or
add
mov
sbb
mov
out
sbb
jmp
aam
mul
test
jmp
pop
gs
shl
and
and
iret
jno
fdivrp
test
in
inc
xor
dec
fadd
stos
sub
pop
cmp
or
add
mov
daa
and
jmp
in
mov
loopne
cld
cld
je
fmul
cwde
sbb
clc
iret
imul
(bad)
mov
jmp
ret
jp
mov
outs
jne
in
arpl
in
ror
cmp
or
inc
mov
xchg
dec
push
imul
xchg
xchg
into
or
jmp
sti
cmp
test
or
jne
push
pop
cwde
mov
imul
mov
mov
add
push
sbb
sub
push
inc
lock
and
xchg
(bad)
jecxz
shl
mul
dec
js
mov
pop
call
push
inc
adc
mov
lods
sbb
fbld
push
and
and
pusha
dec
push
call
push
mov
retf
mov
mov
jns
std
mov
cmps
aad
cli
xor
sbb
ret
idiv
add
repnz
mov
or
xor
add
or
call
stc
xlat
jmp
shl
xor
(bad)
fnstsw
jp
out
es
addr16
add
mov
fadd
test
xor
jno
and
mov
xchg
loop
push
xchg
pop
ins
test
xlat
mov
cmc
mov
adc
(bad)
cdq
pop
push
mov
mov
(bad)
mov
lock
push
adc
sbb
(bad)
f2xm1
stc
hlt
inc
stos
pop
add
inc
das
ins
cli
or
fst
jne
mov
out
aas
not
jns
push
in
test
mov
sbb
leave
sbb
inc
rol
outs
in
test
jb
pushf
or
pop
dec
retf
mov
and
lods
or
dec
repz
mov
jg
push
leave
ins
sub
mov
mul
jge
out
pop
test
add
or
mov
adc
mov
(bad)
ja
sbb
push
ins
adc
sahf
call
mov
mov
pop
xor
mov
pusha
mov
inc
movs
mov
cmp
xor
in
shl
inc
jb
(bad)
cmc
out
daa
movs
xchg
add
push
mov
mov
pusha
enter
adc
cwde
xchg
das
dec
int3
sbb
jae
jge
fnstcw
inc
scas
cmp
pop
ins
ja
loop
dec
sub
jmp
(bad)
into
jae
call
xchg
es
inc
in
xchg
add
or
dec
ja
shl
adc
jo
jbe
ret
mov
cld
inc
sub
arpl
and
(bad)
cmp
iretw
sbb
xchg
jmp
aam
rcr
mov
sub
push
(bad)
movs
popa
sbb
push
add
sub
aaa
inc
mov
cmp
jle
retf
imul
or
out
xor
ins
mov
sbb
xor
mov
mov
mov
inc
data16
aam
es
dec
mov
(bad)
and
lock
jp
and
sub
or
mov
aas
pop
cmp
cvtpi2ps
dec
(bad)
pop
mov
fwait
push
or
cmp
pushf
cmps
sahf
xchg
push
jnp
fidiv
jp
push
sbb
xor
mov
arpl
psadbw
pop
test
inc
push
(bad)
in
pop
sub
and
and
add
ret
xchg
sbb
and
jae
rcl
int3
push
ror
sbb
push
pop
addr16
in
sbb
rol
pop
jecxz
ror
mov
cwde
(bad)
jnp
fmul
pop
add
jmp
out
add
mov
inc
fsubr
jmp
xlat
cld
sub
movs
(bad)
std
push
call
(bad)
xchg
sar
div
outs
and
mov
jge
sar
mov
adc
jmp
call
cld
cli
pop
bound
xchg
adc
xchg
(bad)
(bad)
jp
pusha
sbb
and
cs
out
inc
add
cmovp
pop
pop
out
ret
xchg
pop
hlt
out
jmp
xchg
repz
inc
ds
inc
xchg
push
call
icebp
pop
cmp
jl
retf
jnp
inc
pop
mov
popf
inc
gs
mov
xchg
movs
sbb
xchg
leave
dec
add
cwde
outs
fst
jae
movs
pop
daa
inc
mov
xchg
dec
in
jo
mov
jmp
push
push
lods
dec
pop
aas
xchg
inc
push
xor
ins
pop
adc
inc
sub
and
stos
dec
(bad)
jbe
xchg
lods
lods
xor
mov
ret
lahf
pop
lock
movs
addr16
nop
test
dec
and
dec
xor
inc
pop
bound
adc
xchg
(bad)
shl
cmp
push
rcl
les
xor
std
add
pause
lods
sbb
cmp
outs
rcr
lods
inc
outs
push
scas
sbb
and
sbb
arpl
imul
xor
push
xor
add
shl
addr16
imul
pop
or
cld
mov
pop
dec
inc
mov
jge
addr16
lea
ins
pop
sub
shr
xor
mov
das
fs
fimul
fistp
inc
cmp
sub
fs
xchg
cmp
rcr
add
icebp
pop
lods
jmp
fcom
xor
je
push
mov
scas
mov
jne
test
imul
mov
ret
push
fdiv
test
cmp
movs
add
sti
daa
xor
adc
je
mov
aas
add
hlt
jnp
and
mov
popa
bswap
lock
iret
ret
fcomip
lea
inc
mov
adc
retf
fs
inc
mov
mov
stos
mov
pop
jp
cmps
push
outs
sbb
psllw
mov
inc
sbb
(bad)
mov
in
loop
mov
dec
out
jmp
dec
ret
mov
scas
rcl
pop
pop
and
add
pushf
jmp
push
nop
dec
sar
in
mov
adc
call
or
push
call
scas
inc
add
or
loopne
mov
pop
jno
test
imul
mov
sar
inc
pop
int3
loop
dec
push
in
mov
fdivr
dec
jbe
push
test
adc
sub
lock
imul
iret
xchg
jnp
scas
and
jmp
jo
cmp
inc
retf
aaa
fld
xlat
xor
cli
push
cwde
mov
xchg
pusha
or
in
ffree
dec
xor
inc
push
mov
adc
adc
sbb
dec
scas
mov
mov
in
add
das
dec
and
mov
jge
add
sbb
push
cmps
sbb
in
jb
iret
gs
in
test
add
lock
mov
ss
dec
fcomp
push
push
adc
lea
adc
add
pop
repnz
dec
push
xor
and
mov
mov
in
pop
lods
lods
add
lahf
(bad)
push
mov
lods
cdq
push
xor
retf
sti
test
jmp
lock
add
jns
retf
inc
mov
rcl
and
scas
imul
arpl
xchg
(bad)
out
inc
sub
push
push
cmp
(bad)
mov
xor
and
popf
js
ins
jne
xor
mov
inc
enter
pop
popa
xchg
inc
mov
mov
adc
leave
and
sub
adc
cmp
fidiv
mov
icebp
sbb
(bad)
stc
scas
fistp
sub
inc
dec
and
mov
fadd
mov
fwait
les
aas
xor
jge
adc
adc
mov
mov
out
cmp
dec
ret
aaa
mov
or
sbb
jnp
mov
test
hlt
call
and
sub
mov
xchg
nop
enter
and
inc
shr
jae
ins
mov
jmp
pop
push
cmp
xchg
inc
popa
jp
fisttp
clc
pop
push
cmps
pop
mov
sti
push
popf
jno
add
iret
mov
sbb
mov
mov
rcr
mov
stos
xchg
sub
mov
jecxz
push
mov
push
or
retf
out
scas
xor
cmp
ja
enter
not
add
push
in
mov
add
mov
add
jo
repz
or
mov
xchg
icebp
aas
clc
retf
lds
sbb
push
mov
shr
es
jno
in
push
push
pushf
lods
push
add
pop
push
les
sub
xchg
loop
cmp
pop
js
mov
ja
mov
mov
pop
(bad)
fld
inc
das
fs
ins
imul
sahf
push
adc
cwde
mov
scas
add
mov
mov
xor
lods
nop
pop
ret
push
adc
mov
ficom
jns
lods
add
daa
xchg
sbb
pop
xchg
mov
and
xor
xor
cmp
dec
fdiv
dec
retf
inc
mov
and
pop
pop
add
(bad)
fsub
(bad)
retf
mov
(bad)
jb
inc
cli
sub
mov
jge
sub
stc
popf
scas
fwait
mov
jge
popf
xor
lods
sub
pop
or
fisttp
call
vmovaps
sbb
ja
hlt
inc
cmp
cmps
mov
or
leave
ds
mov
nop
dec
ret
sar
in
xchg
xchg
jp
jg
mov
sub
cmp
jge
jbe
inc
pop
mov
adc
sub
dec
lahf
xchg
neg
push
(bad)
enter
pop
sar
cmc
ret
sbb
mov
ja
and
in
lods
popa
jp
and
mov
pop
rcr
mov
push
(bad)
rcl
ficom
in
ss
inc
movs
push
mov
mov
sub
jle
adc
data16
adc
cli
add
push
mov
and
fadd
pop
cmp
shr
sti
add
fimul
daa
in
(bad)
int
jecxz
xchg
cs
xbegin
mov
clc
sub
mov
fdivr
mov
mov
push
aad
add
aad
inc
sbb
ja
mov
pop
mov
in
or
lds
(bad)
lea
retf
daa
cld
sub
outs
(bad)
cmps
xor
pop
and
jbe
ret
je
and
dec
test
sub
and
push
loopne
hlt
rol
adc
lahf
xlat
outs
dec
inc
in
fdivr
push
test
stc
xchg
sbb
xchg
dec
sbb
out
mov
pop
enter
push
dec
pop
sbb
dec
repnz
sub
out
aam
inc
hlt
pushf
mov
sub
or
cmp
imul
(bad)
pusha
in
sbb
dec
sbb
xchg
aad
pop
push
in
xchg
adc
mov
es
fdivr
in
adc
pop
hlt
ficomp
loope
add
aaa
pop
(bad)
and
test
nop
jmp
pop
sbb
cwde
or
nop
mov
jge
xchg
jbe
ja
stc
out
jmp
jno
out
push
cmps
push
push
pop
dec
pop
mov
mov
lahf
jg
fild
xor
xor
pop
cmps
mov
mov
aam
fisub
aad
or
xor
mov
add
lds
xor
std
push
lods
xchg
daa
hlt
pop
dec
and
rcl
xchg
(bad)
mov
pusha
inc
pop
ja
push
sbb
xor
push
push
fidiv
jmp
dec
int3
cld
push
xchg
movs
xor
xchg
aaa
(bad)
sbb
out
call
xor
imul
fst
addr16
push
pop
cli
mov
push
mov
jmp
hlt
adc
mov
in
clc
mov
cmc
call
cld
push
and
aad
hlt
pop
mov
scas
adc
out
or
sub
and
inc
aas
(bad)
loop
rol
pop
retf
aaa
pop
out
inc
push
das
or
or
jg
jne
int
pop
movs
fs
ficomp
test
into
imul
mov
les
or
cs
sahf
pop
or
shl
bound
jb
inc
rcr
loopne
mov
ja
dec
push
mov
cli
daa
pushf
add
cli
push
push
(bad)
mov
jle
lahf
mov
xlat
and
mov
das
pop
cmps
ds
xor
sub
jbe
(bad)
nop
retf
jb
mov
std
lahf
aaa
jne
and
std
xchg
ins
mov
sub
mov
je
out
shl
xor
mov
fmulp
add
call
push
push
hlt
xchg
add
cmp
mov
daa
sbb
std
add
sub
ins
push
lock
jmp
xor
xlat
push
inc
cmps
xor
mov
mov
(bad)
fnsave
(bad)
mov
out
arpl
push
sub
xor
(bad)
shl
jae
rcl
jbe
ror
xor
outs
xchg
in
sub
leave
pop
cli
nop
dec
lock
gs
or
dec
lock
pusha
ret
mov
ds
cmp
iret
cmp
adc
xchg
push
cmc
inc
mov
or
push
pop
leave
mov
jno
cs
adc
sar
mov
jl
imul
rcl
call
in
ret
sbb
cmp
jge
in
inc
sub
in
(bad)
(bad)
mov
cmp
sbb
and
add
cmp
xor
xchg
mov
lods
jmp
sar
mov
daa
and
out
fsubrp
mov
cmps
xchg
int3
ret
stos
and
iret
push
dec
adc
sar
fstp
mov
mov
out
push
adc
lea
mov
neg
aas
scas
bound
inc
push
mov
gs
or
xchg
out
cmp
fdiv
push
ja
adc
test
ret
pop
xchg
mov
pop
int3
cld
enter
js
mov
mov
inc
in
jl
ins
dec
(bad)
test
push
data16
xchg
inc
adc
mov
pusha
add
xor
addr16
(bad)
or
jne
je
pop
mov
imul
or
sub
xchg
add
das
cmp
push
daa
mov
mov
nop
(bad)
(bad)
and
jecxz
cmp
mov
or
mov
sbb
fidivr
retf
mov
mov
sbb
mov
and
cmp
mov
es
(bad)
jno
and
adc
adc
in
xchg
out
lahf
and
pop
in
pop
jno
pop
xor
sub
ja
wbinvd
pop
movs
cmp
cmc
hlt
outs
ins
dec
jp
sahf
outs
cs
push
fcomp
sbb
imul
xor
push
scas
sti
inc
dec
add
add
(bad)
mov
mov
fs
add
rcr
or
daa
add
test
or
inc
add
cld
mov
push
mov
jae
lea
mov
xchg
neg
movs
mov
sbb
mov
add
loope
push
xchg
adc
cmp
sub
ror
xchg
jns
lahf
punpckhwd
sbb
inc
xor
ss
in
jge
push
add
cli
stos
lock
and
clc
sbb
push
xchg
cmp
lea
popa
shl
or
dec
stc
mov
int
xchg
push
inc
dec
xchg
ja
loop
cmp
fwait
mov
lods
sar
jns
and
or
dec
xor
rcl
sub
mov
push
scas
and
ficom
adc
xlat
shr
test
daa
int3
sbb
mov
mov
cmp
ins
imul
data16
(bad)
xor
xor
xor
ror
and
dec
test
out
repnz
jg
mov
lds
sub
and
lods
push
(bad)
pop
mov
out
(bad)
movs
jmp
mov
cwde
add
ror
push
sbb
cld
inc
popf
bound
pop
dec
ins
push
daa
jae
dec
dec
(bad)
mov
icebp
push
stc
mov
push
cs
aas
cld
add
hlt
call
rcl
and
inc
inc
cmc
jmp
lahf
(bad)
cmp
lock
imul
fcomp
fcmovne
jl
mov
xchg
fmul
add
pop
jge
int
shl
shl
mov
mov
pop
ss
dec
jg
out
clc
es
adc
clc
sbb
pop
and
jnp
clc
mov
int
int3
mov
bound
xchg
mov
and
pop
jae
push
int
pop
pop
inc
(bad)
xlat
sbb
ss
cmps
loop
inc
sbb
stos
xchg
xchg
xor
mov
iret
pop
mov
pop
clc
sbb
call
repnz
add
push
sbb
nop
inc
repnz
adc
xchg
ret
scas
fimul
mov
mov
xchg
shl
inc
ret
cmp
out
jnp
xor
test
inc
or
inc
gs
or
cmp
pop
dec
inc
lods
adc
(bad)
jg
inc
loope
inc
inc
fist
or
mov
dec
sahf
sub
stc
or
xor
xlat
movs
inc
inc
jbe
arpl
or
ins
test
ds
push
add
das
dec
cli
dec
xor
sahf
aad
loopne
inc
test
aas
stos
mov
push
xlat
cli
retf
hlt
test
xor
test
lock
push
adc
data16
out
loopne
mov
push
lds
sub
(bad)
jbe
push
(bad)
push
jno
mov
push
sub
into
gs
(bad)
xchg
mov
jnp
xchg
adc
push
movs
cld
and
push
popa
dec
das
mov
bound
in
push
stos
xchg
mov
loopne
pop
repz
test
jae
push
(bad)
fld
shl
adc
cmp
dec
aaa
ret
adc
dec
std
sbb
jno
outs
xchg
cmps
jnp
dec
dec
out
jle
retf
dec
cmp
bound
sub
not
dec
repnz
mov
inc
call
pusha
aad
repnz
dec
cmp
ss
add
rcl
jo
cld
iret
loope
das
retf
jno
add
(bad)
mov
jnp
(bad)
pop
xchg
(bad)
pop
or
adc
dec
mov
ss
xchg
mov
aas
dec
push
retf
call
neg
pop
imul
pop
imul
fild
daa
mov
or
mov
or
cmp
out
aad
ins
sbb
lods
xlat
mov
dec
cwde
add
mov
hlt
ss
mov
dec
clc
mov
mov
popf
(bad)
leave
out
repz
shr
jmp
xchg
outs
xor
fidivr
icebp
or
inc
loope
js
arpl
xor
xor
cmc
ds
xor
stos
lock
adc
mov
data16
nop
pop
lods
and
addr16
out
mov
rcl
std
ds
out
xor
jno
sahf
mov
cmps
popa
inc
add
pop
jmp
std
push
sbb
xlat
push
and
or
scas
add
sbb
fs
cdq
and
leave
sub
ret
js
ins
fs
sub
cmp
mov
test
cs
arpl
pop
push
cmps
and
out
pusha
dec
leave
daa
jecxz
scas
into
dec
cdq
into
fcom
(bad)
out
jmp
mov
mov
xchg
data16
pop
jl
out
bound
xchg
fcom
mov
push
pop
(bad)
jge
jge
and
mov
shr
sub
add
jge
loopne
les
sub
mov
cdq
cmp
rcl
adc
or
sub
test
xor
inc
xchg
out
stc
push
sub
xor
mov
push
fwait
ins
xor
sub
imul
ds
inc
jne
jns
jg
mov
pop
shl
jns
test
fcmove
jmp
inc
stos
push
sub
fisubr
call
mov
pop
scas
sbb
call
mov
mov
xchg
adc
push
shl
mov
xchg
pusha
(bad)
xlat
xchg
stos
cs
out
sbb
fs
or
adc
mov
xchg
push
sar
test
ss
adc
gs
(bad)
pop
xor
scas
outs
push
out
mov
push
push
sub
es
fsub
sub
(bad)
lock
or
sbb
lods
dec
mov
mov
lods
push
ret
movs
(bad)
jbe
jne
daa
ret
ja
add
and
imul
(bad)
icebp
mov
out
sub
sub
fmul
(bad)
ret
xchg
cmps
sub
data16
imul
jl
(bad)
aad
mov
ror
imul
lds
addr16
addr16
popf
mov
psubsw
ds
dec
ficomp
push
nop
(bad)
or
sti
je
push
(bad)
fistp
and
cmp
mov
sbb
fsub
stc
fadd
or
push
rol
jns
sbb
xchg
in
pop
pushf
jae
inc
mov
sahf
mov
cmp
fldl2t
sub
in
fsub
sbb
add
shl
jnp
in
out
add
(bad)
stc
retf
sti
enter
sbb
fstp
sbb
arpl
sbb
add
dec
fadd
dec
popf
daa
mov
into
call
lahf
out
(bad)
mov
xor
push
push
adc
inc
aam
or
ror
xchg
sub
cmp
test
daa
imul
scas
push
daa
and
(bad)
repnz
mov
xchg
sbb
xor
xor
add
sub
int3
mov
ficom
shl
push
pop
retf
mov
int3
cld
cmc
loop
cs
xchg
inc
push
mov
sbb
pusha
dec
inc
xor
int3
sbb
movs
rcr
push
in
jo
cmps
into
mov
jg
arpl
lock
xor
sahf
dec
out
pop
scas
out
fucomip
out
xchg
xchg
mov
or
scas
xchg
lea
push
xchg
or
js
int
cmp
add
pop
or
adc
es
jecxz
add
adc
jp
lods
xchg
pop
dec
jle
test
stos
pmaxub
cdq
mov
and
in
jg
mov
mov
and
cmp
pop
rcl
mov
or
push
xor
xor
mov
push
inc
iret
push
scas
dec
ret
and
push
clc
repnz
test
jns
retf
test
pop
call
(bad)
cli
or
pop
cmp
cs
dec
jno
inc
ds
xchg
loop
lahf
das
cmp
imul
cmc
enter
sub
stc
int
xor
sbb
xchg
(bad)
lea
pop
sbb
fs
loop
xchg
sub
adc
adc
sub
push
(bad)
sahf
outs
inc
in
ja
stc
cld
push
adc
xchg
dec
cmp
ret
mov
enter
cdq
jmp
es
pop
in
add
xchg
mov
mov
inc
fdivrp
adc
or
sbb
xchg
xor
mov
pusha
rol
push
xor
fist
adc
nop
and
popf
push
mov
and
daa
and
pop
in
or
dec
les
or
xlat
push
(bad)
data16
arpl
loopne
pop
push
sar
fwait
cmp
nop
sti
dec
fsub
jne
push
rcl
xor
shl
lock
out
sbb
push
popf
je
arpl
and
(bad)
xor
push
je
outs
pusha
mov
in
jb
xchg
xlat
sub
mov
adc
xlat
adc
call
idiv
pop
rcl
mov
ret
shr
lock
stc
dec
(bad)
les
dec
sbb
and
or
mov
scas
xchg
aad
in
cwde
test
into
arpl
ret
leave
xor
iret
add
adc
test
or
(bad)
fdivr
sub
ins
aaa
sub
shl
pushf
sbb
(bad)
sahf
and
add
outs
jle
scas
or
inc
mov
and
(bad)
mov
or
dec
mov
pop
sbb
test
imul
je
mov
lea
jo
inc
test
call
pop
and
(bad)
(bad)
jmp
loopne
xchg
outs
sbb
jecxz
sbb
fsubr
inc
dec
sbb
mov
test
bound
mov
psubw
mov
mov
(bad)
shl
fwait
cs
iret
call
mov
jle
mov
xor
hlt
pusha
xchg
aas
adc
aad
out
mov
fisttp
pusha
out
add
xchg
mov
ss
in
rcl
in
jmp
fstp
mov
out
inc
shl
add
icebp
jmp
pop
and
ja
gs
pop
mov
ret
int
in
push
test
aam
call
jb
lods
jl
test
xor
mov
(bad)
pop
and
jle
fild
xchg
scas
mov
sbb
popa
imul
dec
push
cmp
das
mov
pop
popa
mov
cmc
inc
dec
pop
hlt
ret
push
and
cld
mov
jo
xor
jl
test
pop
ja
into
retf
fcomip
jge
mov
push
inc
movs
add
mov
pushf
ds
cmp
sbb
nop
jg
and
add
xchg
test
mov
cdq
int3
(bad)
xchg
xchg
mov
jno
sbb
ins
jmp
jbe
popa
pop
jmp
adc
jmp
int
iret
aam
fwait
xor
cmp
call
lea
mov
xor
add
xor
je
sbb
pop
or
pop
adc
ins
sbb
add
dec
mov
ret
push
cli
inc
push
ret
test
call
stos
mov
les
xchg
adc
aaa
aad
cmp
inc
popf
jbe
movs
cs
les
push
dec
popf
(bad)
xlat
jp
or
pop
add
(bad)
call
and
popa
add
js
rcl
mov
(bad)
mul
xchg
mov
cmp
jmp
test
cmps
and
sub
mov
jns
js
dec
nop
jb
sar
jb
jno
jmp
aad
mov
stos
and
jno
stos
inc
xor
sbb
cmps
int3
xchg
aam
or
ds
jp
xor
leave
mov
pop
dec
xchg
(bad)
clc
cmps
sub
in
pop
push
jmp
xor
sub
int
stos
add
rol
inc
sub
inc
(bad)
or
(bad)
iret
(bad)
(bad)
xchg
inc
in
jmp
(bad)
fnsave
outs
movs
xor
jmp
dec
pop
std
stos
push
xor
ss
push
outs
push
mov
in
mov
cmp
popf
pop
cmp
jmp
test
mov
dec
push
mov
daa
or
push
jle
cdq
int3
sbb
push
dec
sub
movs
mov
push
sub
dec
jge
lock
clc
push
mov
mov
add
xchg
mov
aad
int3
mov
xor
std
mov
mov
aaa
push
outs
cs
int3
push
and
jnp
lods
les
stos
(bad)
stos
test
cmp
mov
or
(bad)
(bad)
mov
and
mov
vmovdqa
xor
add
dec
call
loopne
mov
add
ds
js
mul
outs
aaa
(bad)
push
imul
nop
jg
pop
add
mov
dec
pop
adc
add
jbe
repnz
or
push
add
hlt
push
jle
leave
push
dec
push
lock
dec
xchg
push
mov
inc
and
mov
pop
pusha
(bad)
push
aad
xchg
mov
mov
in
push
pop
mov
jo
xchg
inc
adc
jmp
rcl
mov
daa
mov
sar
out
je
shl
pop
(bad)
je
shl
add
xchg
test
arpl
adc
call
out
das
ins
popf
repnz
shl
jmp
mov
xchg
sbb
adc
js
sub
addr16
push
icebp
loopne
ret
pop
leave
sub
je
(bad)
clc
sahf
and
adc
stos
mov
xchg
stos
cwde
mov
std
rol
outs
clc
cmp
in
icebp
out
xchg
retf
icebp
jns
or
in
cmc
push
xor
mov
loopne
test
in
cmp
add
fnsave
sahf
adc
out
aas
and
xchg
aaa
ins
pop
rcl
cmc
xchg
dec
mov
pop
aad
ret
add
pop
cmovns
faddp
or
sub
es
jg
retf
jle
jmp
inc
dec
pop
push
loop
repz
push
mov
xchg
retf
mov
add
fcom
loop
not
and
xor
mov
pop
adc
xor
xor
jg
dec
jecxz
int
jae
retf
cdq
jge
xor
push
retf
push
sar
jo
in
add
and
xor
les
aaa
jmp
aaa
div
mov
push
inc
outs
mov
cld
push
rcl
pop
and
pop
dec
shl
jo
ja
ss
add
push
sub
hlt
scas
jle
inc
loop
je
aaa
and
add
inc
mov
ds
jecxz
std
push
(bad)
leave
dec
dec
ins
cli
xchg
dec
cld
adc
push
test
inc
mov
xchg
pop
mov
iret
cmp
mov
mov
mov
push
add
add
add
sti
imul
jae
xchg
test
cwde
sbb
adc
sub
push
daa
cmp
add
test
pop
lods
leave
in
mov
mov
lea
adc
adc
mov
mov
and
mov
out
xor
inc
inc
jae
mov
cmp
push
cmp
cmp
push
adc
pushf
jecxz
inc
jo
xchg
lods
outs
stos
std
popf
loop
dec
mov
mov
std
inc
lock
or
or
int
mov
retf
or
scas
inc
fst
xchg
sahf
jle
test
mov
push
adc
scas
adc
or
loop
cmp
fimul
repnz
es
outs
mov
mov
les
fdiv
pop
lods
jnp
pop
sbb
jbe
pop
or
ror
xchg
sub
aaa
ret
mov
inc
(bad)
retf
lea
push
retf
ret
iret
or
cmp
in
scas
cli
inc
jns
cs
mov
lds
js
lds
cld
sbb
stos
push
ins
jb
adc
daa
xchg
push
std
arpl
jno
mov
(bad)
out
push
inc
xor
mov
pop
or
inc
dec
pop
mov
int
jbe
push
jbe
and
xchg
fdivr
retf
mov
and
imul
add
xor
fist
mov
mov
arpl
pop
jmp
mov
fistp
imul
xchg
retf
mov
nop
dec
push
pop
push
hlt
retf
(bad)
les
popf
xor
aaa
xor
adc
sbb
cmps
dec
jg
adc
dec
add
cmp
pusha
std
sbb
sti
stos
jmp
in
adc
xor
xlat
aas
push
pop
lahf
xchg
inc
in
int3
scas
das
dec
xchg
mov
adc
cmps
fs
xchg
stc
and
call
pop
and
retf
stos
and
fiadd
stos
add
mov
(bad)
mov
pop
in
sbb
ins
test
addr16
jno
inc
xor
sub
cmp
mov
mov
push
cdq
jbe
dec
ins
mov
fs
mov
push
retf
mov
pushf
jl
sti
inc
mov
and
mov
push
je
out
arpl
mov
out
jge
pop
jmp
add
test
shl
adc
repz
adc
mov
shl
mov
in
or
pop
or
pop
jb
mov
push
xor
jmp
fxam
mov
push
xor
loopne
into
adc
mov
sub
adc
ins
jl
and
in
adc
xor
pop
add
jge
dec
sbb
mov
call
sbb
adc
pop
adc
pop
fs
cmc
sub
mov
sbb
adc
into
out
ret
retf
xchg
mov
sbb
cmc
mov
lahf
fidiv
jb
and
mov
pop
mov
mov
test
cmp
mov
push
pop
(bad)
xor
sub
mov
in
mov
out
(bad)
and
jmp
jns
icebp
jo
cmp
jmp
or
lahf
(bad)
jo
daa
dec
rcl
les
ss
je
repz
jo
mov
dec
aam
mov
dec
adc
movs
bound
call
xor
push
hlt
seta
mov
mov
movs
push
enter
test
xor
mov
ss
test
cmps
mov
cmp
psubb
into
out
mov
ja
popa
pop
pop
nop
in
sbb
pop
out
bound
jmp
mov
mov
dec
push
cli
sti
lock
pop
and
cmp
add
xor
std
add
push
pop
mov
arpl
mov
inc
inc
mul
inc
gs
jae
stc
mov
push
xchg
inc
jle
jl
out
dec
adc
dec
(bad)
mov
movs
mov
add
mov
jo
dec
in
ficomp
shr
mov
cmp
pop
inc
mov
pop
cmp
jle
test
add
inc
cmp
mov
leave
movs
data16
cmc
or
(bad)
into
or
cmc
xchg
retf
push
mov
mov
outs
inc
sbb
add
add
pop
mov
inc
mov
out
cdq
fild
mov
push
jo
inc
adc
adc
rcr
jl
or
and
cmp
mov
xchg
dec
test
pushf
jmp
(bad)
mov
adc
jp
retf
jge
mov
sbb
and
xor
add
mov
lods
pop
fldcw
xchg
nop
add
(bad)
add
loopne
add
into
jne
aaa
cmp
jae
xor
push
jp
ror
jb
cdq
je
mov
cmps
dec
ret
fist
dec
mov
in
push
or
loope
xor
and
mov
fsub
mov
mov
rcr
mov
lock
test
repz
movs
push
and
(bad)
scas
enter
bound
sti
push
ss
or
ror
cmp
inc
and
sub
pop
pop
lds
dec
inc
push
xlat
in
out
fwait
or
aas
cmp
mov
or
cdq
mov
retf
pop
mov
xchg
add
adc
gs
fldenv
cwde
cmp
mov
pop
(bad)
push
xchg
imul
xchg
xchg
inc
or
sub
pop
pop
or
fimul
cmp
sub
cmps
jne
cmps
mov
je
push
xchg
fld
test
jmp
aaa
icebp
imul
fbstp
or
cmp
xchg
pop
xchg
shl
cld
in
fwait
push
add
out
loopne
scas
adc
cmps
push
mov
stos
mov
test
dec
xor
sbb
mov
iret
dec
movs
jne
fwait
out
nop
stos
rol
std
sbb
dec
pop
sahf
hlt
mov
mov
and
pusha
push
push
(bad)
push
or
xchg
and
mov
xchg
out
or
cmp
lock
pop
jmp
daa
xchg
adc
inc
pop
and
fsubr
(bad)
sbb
sub
aam
daa
jb
enter
and
mov
sbb
xor
jbe
ss
dec
ficom
dec
movs
jl
push
jnp
or
dec
cmp
call
or
outs
push
movs
imul
retf
push
lods
pause
pusha
add
pop
dec
cmp
sub
daa
mov
loop
bound
pusha
mov
fdivr
mov
add
or
jmp
ja
mul
dec
shl
pop
mov
dec
pop
arpl
into
mov
xchg
cdq
loopne
daa
dec
popf
les
sub
(bad)
(bad)
jl
xchg
jae
jle
cmp
es
sti
add
jg
sbb
push
into
pusha
xor
pop
cmc
cmp
neg
repnz
push
shr
retf
daa
mov
jecxz
test
in
(bad)
jp
sub
ds
je
pushf
adc
hlt
cmp
mul
test
mov
out
aaa
iret
cmp
lods
xor
js
pop
add
(bad)
mov
add
or
out
addr16
icebp
dec
xchg
stos
inc
mov
sahf
movs
pushf
ror
rcl
clc
mov
push
mov
push
cmps
stos
mov
mov
lods
inc
jmp
(bad)
mov
in
mov
mov
mov
ret
sti
ja
sbb
adc
xor
and
rcr
and
mov
retf
add
ds
retf
and
pop
and
push
jnp
cwde
inc
ds
xlat
iret
or
dec
call
loopne
pop
test
sub
shl
mov
dec
or
jle
ins
sbb
push
lds
mov
(bad)
fbld
ins
or
pop
scas
cdq
xor
in
int
sahf
mov
stc
loop
out
test
mov
cmc
dec
inc
push
pop
sub
shr
aaa
aaa
cmp
daa
enter
scas
sbb
scas
lods
mov
cmp
mov
push
jge
imul
mov
cmps
sahf
add
mov
leave
ins
(bad)
test
call
(bad)
cmps
leave
out
pop
xor
push
inc
leave
out
jnp
mov
test
je
push
rol
adc
retf
pop
sbb
xor
lahf
dec
inc
pop
add
jo
retf
mov
scas
leave
mov
lods
push
daa
mov
mov
pop
inc
imul
dec
lds
sub
xchg
mov
sub
sti
cmc
cdq
add
mov
jb
cld
mov
add
pop
push
or
jnp
loopne
jae
sbb
pop
sub
adc
vpsrld
and
add
adc
ficomp
clc
jp
outs
xchg
imul
call
pop
out
push
push
xor
xor
xor
je
sbb
xor
popf
call
sbb
retf
or
mov
and
pushf
mov
cmp
xchg
cmps
push
and
ins
daa
jg
adc
sub
inc
and
pop
sub
dec
cmps
add
mov
add
fdivrp
je
jne
mov
push
lahf
mov
outs
sub
bound
or
cmovnp
pop
jg
test
pop
int3
gs
mov
ins
jnp
jne
mov
pop
dec
mov
dec
mov
xchg
mov
rol
fmul
cmps
xchg
cmp
push
add
imul
sub
push
xor
mov
fiadd
mov
repz
mov
hlt
in
push
cmp
pop
imul
mov
and
mov
xchg
xchg
(bad)
push
and
sbb
pop
mov
push
jge
xor
ficomp
fadd
jnp
cmps
dec
pop
cmc
cmp
cld
in
in
cmp
sahf
jg
(bad)
not
xor
aam
jge
mov
js
mov
out
dec
out
inc
fnstsw
fst
lahf
mov
inc
xchg
and
sub
popf
adc
mov
mov
pushf
mov
retf
in
stos
movs
fs
out
fstp
in
into
mov
iret
push
shl
xor
leave
mov
sbb
mov
mov
or
in
out
ss
loope
movs
sbb
(bad)
sahf
loope
or
jmp
dec
mov
pop
adc
fmul
add
movs
jo
xor
sub
outs
imul
and
inc
sbb
pop
outs
adc
je
add
pop
addr16
jbe
jg
add
pop
mov
int3
push
and
cwde
clc
int3
imul
dec
shr
and
int
arpl
rcr
js
movs
fdiv
xor
adc
or
xchg
inc
hlt
fs
push
es
shr
outs
addr16
pushf
nop
or
dec
mov
cwde
(bad)
mov
push
inc
inc
dec
mov
adc
mov
outs
inc
mov
ror
and
out
sbb
mov
pushf
dec
jle
jg
mov
xor
and
xchg
lds
inc
shl
movs
call
dec
mov
mov
(bad)
inc
dec
dec
sub
outs
inc
and
in
mov
out
scas
cld
or
rcr
mov
mov
xchg
dec
in
fisubr
mov
mov
fs
lods
xor
les
inc
in
retf
pop
ret
(bad)
and
popf
push
arpl
push
fcomp
or
mov
sbb
mov
mov
leave
lods
lds
push
lock
fs
mov
adc
cmp
adc
and
adc
popa
push
and
popf
and
movs
lahf
sub
dec
push
cmp
mov
xchg
push
ds
imul
(bad)
arpl
out
test
in
inc
mov
shl
push
jnp
dec
xchg
push
jo
xchg
fs
jne
test
dec
sub
cwde
and
test
loopne
mov
ds
scas
push
mov
popa
aas
test
fs
mov
in
rol
add
scas
retf
or
adc
mov
jp
adc
or
xor
cwde
pop
xor
fidivr
mov
push
sahf
dec
adc
fmul
dec
sub
les
inc
in
jmp
fwait
pop
mov
mov
ret
sbb
lahf
nop
jmp
js
push
xor
cmp
movs
mul
xchg
add
neg
dec
xlat
xchg
inc
setl
fadd
mov
loop
bound
sub
xor
pop
out
loop
cmp
lsl
mov
mov
arpl
xor
(bad)
adc
(bad)
mov
xlat
loopne
stos
cld
xor
and
loop
or
add
rcr
(bad)
dec
jg
mov
scas
or
in
sub
cmp
fwait
mov
(bad)
sub
push
mov
dec
out
mov
stc
mov
in
imul
bnd
jecxz
test
pop
icebp
adc
rol
ja
aaa
xor
push
test
push
cs
clc
daa
ret
lds
jb
mov
test
lods
mov
push
push
push
push
and
int
mov
cmp
mov
lahf
cmps
ret
sub
xchg
cmp
cmp
cli
popf
xchg
xchg
sbb
jmp
inc
mov
and
cld
sbb
cmps
jg
icebp
add
jmp
aad
dec
scas
and
in
mov
ins
retf
mov
push
push
cmp
xchg
out
imul
ss
stos
or
xchg
or
pop
jp
ret
jl
push
sub
adc
jge
lahf
push
inc
pop
xor
or
stos
ins
or
add
cmp
xchg
mov
pop
fwait
add
pop
je
lea
cmps
mov
out
imul
add
pop
jne
mov
stc
add
and
mov
ins
mov
ins
pushf
sar
lea
movs
imul
and
clc
inc
inc
xchg
xlat
cmps
mov
pop
inc
es
add
push
xchg
push
add
es
imul
or
test
lea
adc
mov
sar
(bad)
jp
cwde
int3
loopne
mov
add
mov
ins
xchg
jns
fucomi
test
pop
xchg
ss
xchg
push
(bad)
fdivp
cmp
xchg
mov
and
test
orps
push
jns
imul
mov
mov
and
mov
jmp
dec
mov
ror
(bad)
sbb
push
and
sbb
and
rcr
pop
imul
mov
test
pop
loope
jb
sub
in
dec
scas
inc
sbb
popa
xchg
pop
out
repnz
lods
inc
sbb
in
adc
or
mov
repz
aaa
mov
inc
inc
aaa
jno
pusha
mov
jb
mov
add
pop
xchg
sbb
add
in
das
add
inc
push
scas
or
repz
sub
mov
mov
repnz
xor
out
(bad)
outs
(bad)
mov
or
nop
(bad)
adc
push
xchg
sbb
mov
rcr
outs
inc
les
aaa
dec
jl
rcr
xor
sahf
cmps
sub
dec
aam
cmp
into
mov
push
fdivp
cdq
jecxz
ret
sahf
(bad)
in
xchg
push
bound
scas
xchg
mov
add
or
mov
jbe
ficomp
mov
test
or
leave
mov
arpl
sub
faddp
fstp
rol
icebp
mov
stos
pop
jne
pop
jle
pushf
cmps
iret
stos
cld
dec
in
(bad)
ficom
and
jns
mov
pop
pop
(bad)
sub
jbe
xchg
sub
setp
movs
(bad)
ret
movs
jne
inc
or
sub
(bad)
push
mov
daa
ins
jle
test
and
pop
and
aam
push
shl
adc
out
xchg
mov
sbb
sbb
cli
or
jmp
pop
jecxz
add
adc
(bad)
xor
add
add
or
mov
lds
sub
clc
or
xor
loope
xchg
cmp
mov
fimul
loop
ja
xchg
es
cmps
ret
sbb
sti
mov
imul
mov
dec
or
fsubr
add
dec
inc
cmp
iret
retf
lea
pop
lods
inc
sti
fmul
test
(bad)
mov
popa
xchg
push
aad
aas
inc
mov
sbb
(bad)
jle
aas
sbb
add
pusha
test
out
cmp
jle
ss
scas
jmp
dec
and
mov
xchg
mov
cmp
outs
out
cli
pop
cld
jno
test
mov
jmp
mov
dec
pop
xchg
sub
pop
sbb
adc
popf
cmp
rcl
rol
inc
aas
sub
scas
pusha
push
jmp
xchg
dec
mov
fdiv
jecxz
shl
cwde
(bad)
lea
xchg
mov
loop
adc
add
loope
or
in
push
sbb
inc
call
jge
mov
lea
lds
mov
cmp
mul
clc
inc
lds
xchg
cld
and
adc
sbb
aad
scas
mov
out
jmp
fsubr
lahf
dec
enter
cmp
cmp
imul
mov
sub
fucomi
jae
xchg
shl
les
call
and
aam
pop
retf
test
push
out
push
not
arpl
movs
inc
sbb
stc
adc
pushf
sbb
add
ja
push
xlat
out
xor
test
xlat
out
cld
icebp
shl
push
neg
sahf
cmp
dec
das
test
fist
lahf
and
stos
out
sub
mov
es
mov
repnz
test
dec
icebp
sbb
xchg
xor
popf
adc
pop
mov
push
loop
loope
arpl
mov
mov
out
mov
mov
xchg
cmps
jmp
pop
add
sub
in
or
adc
fild
add
adc
lahf
mov
jnp
dec
sbb
or
mov
stos
test
outs
push
cmp
mov
sub
pop
add
(bad)
aas
and
daa
ret
loop
stc
dec
mov
stc
ss
mov
rcl
sub
pushf
lods
jl
jnp
jecxz
sti
adc
mov
mov
xchg
shl
into
pop
jg
in
xchg
iret
mov
or
jmp
fstp
scas
cdq
dec
lea
add
icebp
aas
mov
clc
xchg
in
jmp
inc
jae
loopne
in
das
mov
xor
pop
mov
jle
es
dec
hlt
ins
movs
jp
pushf
cmc
sahf
push
or
aas
cmp
inc
push
rcl
sub
inc
scas
call
xlat
cwde
sahf
lea
lods
pop
or
js
daa
jns
test
mov
pop
inc
loope
and
push
mov
into
imul
adc
pop
inc
jle
mov
loopne
push
xchg
push
mov
jmp
cmps
(bad)
icebp
push
outs
add
mov
test
jmp
inc
sub
add
loopne
mov
add
jmp
daa
stos
jne
lods
fisttp
test
xor
test
mov
(bad)
sar
xchg
stos
push
push
aas
pop
ret
or
push
mov
loop
jns
or
adc
ins
ins
fdiv
lea
out
xor
pop
inc
inc
xchg
scas
cdq
pop
mov
(bad)
fsubp
lods
push
mov
xlat
mov
stos
jo
into
cs
dec
inc
and
clc
cdq
add
push
outs
dec
mov
shl
xor
inc
rcl
adc
pop
mov
cld
xchg
cmp
aad
cmc
mov
mov
push
int
(bad)
outs
sbb
sar
test
inc
movs
adc
adc
push
jb
mov
aas
sbb
popf
pop
mov
(bad)
xchg
push
fwait
jp
(bad)
sub
jae
mov
cmps
mov
jecxz
or
cmp
adc
jl
test
inc
aas
aam
mov
add
stos
dec
iret
fcmovu
enter
cdq
sbb
sbb
fwait
add
push
das
out
inc
xchg
outs
outs
inc
push
or
sbb
test
call
rcr
aam
cmp
not
lea
cmp
(bad)
xor
test
mov
and
inc
dec
xchg
loop
aas
stc
cmp
and
stc
test
test
lahf
hlt
dec
mov
mov
icebp
sti
cmp
mov
daa
movs
xor
dec
jbe
sbb
aaa
fmul
mov
sbb
loop
xchg
call
in
or
and
jmp
(bad)
mov
ds
cmc
stos
mov
das
mov
and
xchg
rcr
add
pusha
fs
mov
adc
adc
cwde
and
fwait
mov
mov
dec
mov
jns
sub
add
jp
(bad)
pusha
push
loop
test
adc
aam
sti
ret
fcmovu
in
mov
dec
pop
lods
pushf
push
gs
xor
repz
pop
xor
cmp
jbe
add
arpl
rcr
repz
inc
inc
(bad)
retf
loope
(bad)
mov
adc
mov
aaa
mov
lods
xchg
xchg
sbb
les
xchg
in
repz
out
adc
ja
aam
xchg
push
inc
xor
cmp
repnz
test
push
inc
lods
out
mov
inc
mov
fnstenv
and
jbe
push
push
pop
shl
bound
lods
push
add
repnz
cmc
icebp
vphaddubd
fisub
stos
mov
(bad)
mov
add
and
and
(bad)
into
aas
fnsave
push
(bad)
js
mov
mov
test
fxch
stos
pop
js
xor
xchg
movs
retf
leave
cmp
cli
pushf
xchg
push
imul
dec
cld
dec
cmp
out
push
lods
in
test
or
in
jae
addr16
scas
pusha
lock
pop
sub
lock
mov
sbb
dec
popa
mov
and
fbstp
xchg
xchg
fwait
shl
(bad)
push
adc
pop
retf
jmp
das
jl
mov
xchg
icebp
pop
jno
ds
add
repz
cmc
sub
mul
popf
call
push
test
sbb
cmps
cmp
and
cmp
mov
xor
mov
out
rcl
jae
iret
and
mov
fstp
or
mov
add
pushf
xchg
push
or
and
je
stc
outs
and
(bad)
cmp
mov
push
pop
mov
aaa
push
jbe
mov
dec
mov
mov
out
fdiv
pavgw
mov
jge
inc
mov
lds
retf
pop
fistp
movs
lds
mov
push
push
xlat
xor
adc
push
cld
inc
(bad)
mov
packuswb
leave
jecxz
je
sub
push
push
fwait
push
rol
dec
sub
xchg
stos
mov
adc
cmp
stos
mov
jbe
jnp
cwde
das
bound
pop
or
movs
clts
push
cmps
inc
mov
call
fadd
sbb
push
loope
jg
bound
fistp
out
pusha
sub
lock
cmps
iret
daa
arpl
scas
idiv
mov
icebp
or
adc
and
lods
xor
and
in
xor
arpl
dec
fwait
push
icebp
jbe
pop
js
mov
mov
aam
cmp
sbb
mov
call
lock
mov
jmp
cli
daa
imul
mov
jp
jge
xor
mov
pop
mov
pop
es
push
ss
xchg
mov
je
in
mov
in
addr16
pop
cmp
xor
scas
sub
test
adc
mov
xchg
mov
cmps
xlat
add
retf
rcr
mov
jle
lods
or
mov
enter
imul
lds
push
mov
mov
dec
shl
xchg
or
jo
ret
sub
mov
test
in
in
xchg
faddp
ja
inc
sahf
leave
cmp
out
mov
sbb
data16
xchg
add
movs
clc
push
icebp
stos
dec
add
cs
mov
push
mov
sbb
xchg
je
push
aad
(bad)
or
in
jle
stos
mov
sbb
add
cmp
xor
prefetcht0
jl
cmp
ins
jge
adc
push
xchg
inc
out
(bad)
nop
(bad)
add
jne
fstp
fisubr
push
xor
sub
jne
dec
sbb
jmp
pop
mov
lea
ja
push
daa
push
push
pop
mov
dec
and
into
adc
adc
ror
in
les
test
fld
(bad)
pop
push
inc
js
icebp
fs
jmp
pop
in
lahf
mov
sub
pop
inc
mov
cmp
inc
inc
mov
(bad)
neg
les
jp
mov
sub
pop
retf
push
add
inc
add
loope
xlat
test
ror
sbb
push
sbb
sbb
pop
addr16
mov
or
pop
popf
call
mov
or
or
push
dec
mov
std
sub
push
dec
test
sub
fisubr
(bad)
sub
fild
and
push
repz
lea
push
out
xchg
cmp
retf
jae
fs
in
pop
mov
jmp
mov
dec
in
or
aam
or
pop
out
call
push
fild
loop
data16
mov
fbld
mov
xlat
mov
aam
sahf
push
leave
mov
fs
nop
popf
aad
imul
cmp
jb
jmp
out
pop
pop
movs
ds
adc
call
das
sbb
mov
jno
fstp
adc
rcr
out
fidivr
mov
das
xchg
jb
fld1
sub
push
fiadd
xchg
test
inc
das
out
cwde
adc
pop
call
mov
les
adc
bound
mov
scas
jb
in
dec
xchg
cmp
pop
sub
mov
(bad)
mov
cmps
mov
xchg
(bad)
cwde
sti
les
fisubr
mov
fsub
inc
outs
ret
mov
nop
xchg
shl
sbb
lds
test
test
mov
pop
jns
jge
xchg
xlat
jge
loop
pop
jno
push
movs
pop
cmp
mov
cmp
xchg
add
cmp
mov
int3
sahf
nop
add
or
inc
pop
xchg
sub
rol
xchg
sar
or
sar
mov
cdq
pushf
lods
fstp
out
ds
and
adc
lea
inc
jp
xchg
mov
mov
mov
gs
lods
push
xchg
lock
sahf
lods
movs
xchg
bound
stc
fwait
inc
fs
mov
in
inc
outs
mov
ins
push
xchg
js
sbb
jmp
sbb
mov
dec
jmp
inc
dec
mov
inc
popa
sahf
mov
loope
xchg
mov
cmp
test
add
dec
test
add
push
leave
xor
pop
inc
pop
les
ds
gs
pop
dec
aas
push
push
xor
mov
imul
loopne
pop
test
pusha
in
sub
push
lea
ins
rcl
xchg
jecxz
xchg
gs
xchg
push
xchg
mov
xchg
ds
xlat
pop
jge
mov
in
aad
push
dec
jecxz
sbb
xchg
hlt
xor
dec
ret
jle
adc
retf
inc
outs
arpl
dec
retf
out
shl
(bad)
das
ins
and
sub
(bad)
cmp
or
sar
in
pop
cli
xor
(bad)
sbb
mov
js
leave
lock
cmp
and
pusha
and
sub
je
int3
ja
into
es
pop
pop
(bad)
data16
push
jnp
icebp
xchg
popa
repnz
mov
sbb
dec
jno
daa
fidivr
jle
xchg
mov
xor
fild
mov
xor
dec
stos
dec
lahf
push
outs
mov
and
lock
es
jb
imul
xlat
lds
pop
mov
mov
xor
int3
mov
add
push
fisub
jecxz
les
mov
iret
out
fisttp
ins
add
xor
(bad)
hlt
jae
xchg
inc
leave
jle
fxch
xchg
scas
mov
(bad)
push
sbb
(bad)
mov
daa
adc
and
test
clc
out
repnz
std
cs
stc
pop
ret
cmps
inc
xchg
int3
test
sub
fprem
dec
out
or
aas
dec
mov
mov
sbb
and
pop
inc
icebp
aad
ret
jnp
ffreep
ja
stos
add
jmp
(bad)
jmp
xchg
xchg
scas
gs
jp
into
sbb
shl
push
sti
lahf
lods
mov
aad
into
mov
mov
loope
test
pop
loope
test
(bad)
js
(bad)
adc
mov
pop
lods
sub
test
cmp
mov
jns
push
test
cmp
pop
call
pushf
std
jle
cmp
je
or
(bad)
test
test
push
test
push
int
adc
les
or
adc
or
push
jecxz
push
inc
std
or
xchg
cmp
ret
jmp
push
enter
mov
mov
sub
mov
and
or
push
xchg
into
adc
inc
popf
movs
shr
cmp
pusha
add
(bad)
shr
mov
test
bswap
and
cmps
fucom
loop
popf
imul
push
add
movs
enter
cmp
arpl
test
sti
imul
les
cld
add
xchg
lods
call
inc
arpl
ret
mov
pushf
clc
leave
inc
pcmpeqd
cmp
cmp
cmp
xchg
ss
mov
adc
sub
daa
test
push
pop
dec
lds
cmp
aad
out
or
jp
icebp
sub
sbb
sub
and
stos
fistp
and
sub
mov
xchg
ror
pop
fist
add
(bad)
in
mov
mov
adc
aad
dec
and
mov
jg
pop
mov
push
retf
(bad)
out
stc
imul
fist
sbb
js
test
hlt
cmps
dec
scas
inc
adc
pop
mov
jl
shl
mov
dec
sbb
pop
data16
and
and
movs
out
cdq
adc
ret
jae
inc
add
mov
fimul
adc
dec
and
nop
repz
mov
dec
ss
mov
or
and
xor
dec
jno
fcomp
pop
push
lea
inc
adc
dec
add
mov
sub
inc
inc
(bad)
js
push
clc
lds
xchg
(bad)
movs
xchg
sub
pop
xchg
pusha
adc
jg
stc
jecxz
jge
clc
push
je
leave
inc
sbb
inc
cld
les
mov
adc
sub
cli
push
sbb
push
jle
push
and
sbb
push
mov
sbb
add
sahf
sbb
push
nop
aas
sti
and
mov
faddp
jnp
inc
jge
jnp
mov
xchg
shr
inc
leave
add
xlat
mov
add
call
fstp
shl
sub
pop
cdq
imul
fdivr
stos
jge
xor
popa
pop
lods
pop
int3
jge
test
jp
mov
sbb
xchg
inc
inc
sub
inc
call
jns
test
cwde
out
loope
mov
mov
fdiv
ins
and
dec
jns
jmp
ja
jb
inc
bound
lahf
cmp
movs
vmovq
mov
adc
aaa
div
push
cmps
mov
aas
ss
leave
add
aad
std
add
mov
bound
iret
out
mov
sti
in
out
sbb
pop
and
(bad)
jecxz
mov
ss
aad
fmul
and
loope
fidiv
sar
mov
ja
sar
cwde
or
inc
push
push
xchg
push
pop
add
ins
pop
and
xor
jmp
lea
test
push
out
inc
xor
xchg
cwde
dec
or
jmp
rcl
jo
mov
xchg
int
push
mov
push
mov
into
sub
adc
into
into
nop
pop
cmp
stc
xchg
mov
fwait
mov
(bad)
clc
fsubp
mov
adc
xor
mov
add
push
push
stc
mov
outs
add
idiv
out
test
mov
xor
push
push
mov
enter
cmps
pop
lods
loop
jmp
dec
adc
lahf
fdiv
test
mov
mov
push
sbb
push
inc
xchg
call
outs
jl
and
inc
fldenv
and
sub
inc
ret
add
cmp
mov
arpl
fsub
aaa
jecxz
push
cmp
jp
stc
cmps
bound
push
mov
pop
jg
(bad)
push
jb
sub
inc
in
xchg
dec
into
inc
out
fld
(bad)
sti
gs
adc
or
fidivr
fisub
mov
(bad)
iret
add
fldenv
js
pushf
retf
lock
mov
stos
push
repz
adc
(bad)
sub
jo
inc
pop
adc
test
das
cs
jns
mov
cmp
std
aad
shr
sub
gs
test
mov
sub
lock
mov
and
xchg
in
sbb
sub
jo
xor
fidiv
xor
xlat
sub
lods
icebp
inc
bound
add
jg
test
mov
dec
xor
or
mov
adc
cmp
sbb
imul
cmovg
dec
jno
pusha
clc
pop
aaa
clc
pop
push
jl
jl
and
int
repnz
mov
std
or
aam
rcr
lds
lods
pop
pop
mov
repnz
repnz
push
jns
(bad)
(bad)
mov
adc
cs
outs
test
mov
push
mov
sub
mov
push
inc
pop
pop
jns
push
pop
xchg
out
dec
dec
push
js
mov
mov
test
jle
mov
mov
mov
jle
les
(bad)
xchg
scas
daa
icebp
or
pop
mov
jb
mov
and
loop
push
adc
mov
and
or
push
imul
jmp
adc
mov
xor
fild
and
jmp
mov
mov
sub
js
mov
cmp
aad
mov
xchg
add
ret
xchg
or
fst
push
shl
pop
scas
mov
dec
aad
mov
(bad)
into
cmps
mov
pop
nop
shr
mov
jl
lea
add
les
repz
jmp
dec
(bad)
(bad)
loope
cmp
xchg
scas
frstor
mov
jg
mov
jl
or
add
or
ror
jle
in
xor
inc
rol
shl
rcr
out
hlt
push
ret
lds
cmp
je
inc
or
jp
jo
ds
popa
adc
in
loop
xor
xor
or
test
ja
test
ficom
iret
data16
(bad)
cmp
xor
mov
sbb
mov
cld
das
lock
and
sub
fstp
ret
cmp
jnp
push
mov
fdivr
in
mov
dec
xchg
cmps
rol
mov
fst
movs
pop
ins
in
lea
loop
push
shl
bound
cdq
stos
sbb
push
ret
xchg
inc
push
das
imul
xor
(bad)
dec
pop
aas
mov
add
mov
inc
lea
jp
push
(bad)
mov
mov
fdiv
cmp
aad
int
lea
ds
dec
fcomp
nop
addr16
retf
(bad)
cwde
or
test
out
popf
ins
inc
adc
jno
cmps
sahf
jmp
jnp
and
mov
add
jo
jmp
cmps
sbb
mov
jmp
xor
inc
stc
add
imul
nop
pop
cmps
jmp
pop
inc
dec
mov
out
cmps
or
loopne
out
xor
jg
sub
dec
daa
cli
mov
jecxz
jb
sar
ja
dec
pop
cli
nop
pop
and
mov
and
shr
xchg
sub
adc
es
push
int3
loopne
sbb
std
stos
arpl
dec
mov
jo
in
sub
adc
jecxz
dec
repz
hlt
dec
aas
and
jo
icebp
and
lea
inc
cmc
jmp
(bad)
pop
inc
ins
mov
and
aas
mov
seta
push
in
sbb
sbb
addr16
sub
xchg
cmc
mov
stos
ret
rcr
mov
dec
out
rol
mov
pop
jnp
push
push
pop
(bad)
cwde
add
fadd
lock
lods
(bad)
outs
out
repnz
inc
mov
clc
mov
and
cmp
das
in
xor
rcr
call
stc
arpl
not
in
cmp
out
dec
push
xchg
or
retf
dec
xchg
ret
inc
arpl
loope
fnstsw
xchg
call
adc
cmp
inc
or
mov
mov
mov
pop
or
fadd
xor
inc
xchg
lea
dec
pop
out
sbb
inc
(bad)
cmc
mov
and
mov
jp
and
stc
repz
sbb
cmc
fsubr
mov
jmp
fstp
fwait
pushf
dec
aas
or
cli
mov
and
xchg
pop
mov
push
sub
push
mov
es
adc
and
arpl
or
xchg
mov
shr
les
ins
fdivr
mov
and
xchg
(bad)
mov
pop
adc
xor
jno
fimul
jecxz
xchg
add
sub
int
xor
jmp
mov
div
(bad)
sahf
mov
retf
or
adc
sub
outs
push
inc
inc
push
sub
scas
out
mov
cmp
mov
or
jg
sbb
pop
xchg
in
jl
mov
dec
adc
sbb
int
shl
xlat
retf
sbb
add
xor
or
inc
scas
mov
loop
lahf
cmc
test
mov
mov
sub
fdiv
dec
icebp
pushf
mov
stc
mov
pop
mov
sbb
out
sub
push
or
loope
das
xor
ror
pop
cmp
fst
mov
int
adc
test
add
add
scas
cmp
add
bound
pop
test
in
shr
das
icebp
ja
xchg
or
jecxz
enter
adc
aas
fisttp
(bad)
cld
in
pop
mov
jmp
retf
xchg
aam
nop
icebp
add
std
pop
ret
rcr
xor
sub
ins
into
dec
cwde
and
out
push
dec
xor
sub
push
call
cmp
sbb
fsubr
add
fwait
popa
adc
dec
out
mov
xchg
hlt
push
pusha
dec
iret
mov
adc
icebp
inc
test
push
lock
mov
pop
or
mov
pop
inc
pusha
iret
outs
xchg
xchg
push
jecxz
dec
in
mov
rcl
sub
adc
leave
push
inc
jmp
neg
mov
mov
or
xor
adc
and
dec
sub
and
pop
mov
lea
jp
je
and
ins
fmul
cmps
push
xchg
jns
(bad)
mov
ret
inc
or
cmp
mov
mov
pushw
adc
out
icebp
push
xchg
push
fld
jbe
add
sti
lahf
cs
(bad)
mov
inc
xchg
mov
mov
or
or
mov
xor
cmps
or
xchg
mov
xchg
(bad)
adc
mov
adc
pop
sti
xchg
sub
icebp
pop
sti
xchg
test
call
jae
xor
stos
push
jbe
nop
sub
dec
xchg
lock
retf
stc
(bad)
xchg
mov
loop
dec
repz
mov
ret
leave
sar
adc
adc
jnp
in
jnp
xor
or
mov
int3
shl
jae
cmp
punpckhdq
xor
push
add
sar
inc
jb
js
aam
jecxz
sahf
push
sub
xchg
pop
xchg
mov
mov
les
adc
ins
shl
sbb
lea
movs
inc
idiv
push
jg
stos
mov
sub
fild
movs
add
dec
xor
ja
out
fst
int
hlt
push
push
adc
shl
ja
inc
fbld
mov
aad
sbb
mul
(bad)
inc
int
fidiv
pop
push
add
xor
shl
jmp
inc
lea
out
cwde
push
adc
fldcw
shl
xchg
cmps
mov
jb
pop
xchg
call
xchg
dec
aaa
push
aam
dec
add
js
mov
retf
jg
xchg
sbb
xchg
cmps
iret
bswap
jl
mov
or
imul
pop
sar
adc
dec
jno
jae
adc
fidiv
das
ja
cmp
xchg
xchg
(bad)
scas
pop
cmp
lds
cld
lahf
mov
outs
sub
popf
dec
sbb
das
pop
daa
sar
or
sti
sbb
mov
dec
icebp
cwde
mov
out
in
pushf
and
cmp
ins
sbb
sti
jmp
pop
fst
scas
sbb
stc
add
imul
(bad)
int3
pop
lock
xor
nop
or
mov
clc
sbb
push
test
pop
push
and
add
jl
xor
arpl
dec
sub
inc
out
adc
jae
bound
dec
jmp
push
cmps
adc
lea
jmp
int
sub
stos
loopne
ds
adc
cld
in
sbb
push
pop
xchg
dec
inc
push
(bad)
xchg
sbb
aad
sbb
mov
mov
pushf
repz
inc
dec
sub
fst
mov
stc
inc
fs
xor
out
aad
jecxz
add
aaa
jle
sti
push
add
inc
xchg
jmp
push
dec
mov
test
mov
mov
stc
pop
jb
mov
pop
lock
(bad)
jmp
cmp
or
sbb
gs
jae
test
push
sbb
or
adc
dec
push
sub
jnp
shl
jg
cli
xor
aas
pushf
outs
or
xor
sar
mov
mov
inc
pop
pop
into
lea
pop
rcl
or
ins
stos
iret
mov
hlt
sbb
push
pop
stos
fidivr
call
mov
bound
pop
in
(bad)
and
out
xor
push
je
mov
push
call
ss
push
push
mov
jmp
loop
and
cmp
sub
push
sub
xor
movs
ins
jno
test
lock
ret
gs
lods
mov
push
fld
sbb
cmps
ror
adc
movs
inc
setle
mov
cdq
daa
add
jle
in
arpl
sub
(bad)
pushf
stos
or
test
sub
pop
pop
ins
pop
pop
mov
xchg
sub
stc
out
jns
cmp
and
push
adc
jle
pusha
(bad)
les
(bad)
stos
jb
popa
jne
pop
bound
pushf
cmp
call
outs
or
out
sub
dec
push
jmp
xor
xchg
add
jmp
or
outs
mov
movs
je
or
dec
lods
cmp
mov
aad
fnstsw
sbb
into
test
icebp
add
xor
jb
pusha
shr
inc
mov
push
or
push
xchg
nop
jo
pop
mov
std
pop
pop
jbe
pop
jle
movs
popf
lds
ds
xchg
mov
scas
test
es
test
mov
lods
cmp
lods
in
fst
lods
mov
jmp
xlat
cli
jb
iret
mov
rcr
stos
sub
push
fwait
in
push
sub
popf
xlat
pop
push
neg
mov
dec
and
test
call
cmps
or
xor
cld
fidivr
(bad)
mov
aaa
lods
shl
in
mov
and
inc
jb
in
adc
push
loop
daa
popa
dec
fdiv
sub
inc
or
mov
rcr
cmp
jnp
add
add
nop
sub
mov
mov
inc
fild
mov
repnz
inc
mov
mov
and
les
fistp
add
sub
sti
or
dec
call
cmp
rol
inc
mov
xchg
adc
adc
lods
std
add
retf
inc
xlat
rcr
in
xchg
sbb
sbb
xor
lock
fwait
aaa
sub
imul
ret
jl
push
retf
dec
adc
sub
pop
fnstcw
inc
jmp
push
inc
arpl
popf
mov
cmp
(bad)
sbb
lahf
sub
ins
mov
retf
jg
cld
add
mov
dec
das
inc
ss
fadd
scas
pop
sub
out
mov
jl
hlt
add
xchg
sbb
outs
test
or
test
(bad)
mov
mov
and
push
pop
mov
push
cmp
dec
pushf
shl
cwde
mov
gs
xchg
sahf
pop
aas
fadd
call
(bad)
sub
push
xor
ss
jne
pop
lods
mov
mov
jne
inc
fcomp
xchg
pusha
dec
mov
test
adc
mov
jne
or
das
sbb
in
and
cmps
cmp
pop
xlat
mov
cwde
repnz
stc
adc
in
into
mov
in
loope
mov
sbb
pusha
dec
div
fs
dec
shl
adc
(bad)
out
add
(bad)
iret
in
pop
xchg
and
fisubr
loop
inc
jne
pop
out
jbe
jmp
inc
daa
es
sti
jnp
lock
pop
xor
mov
addr16
repz
test
lahf
mov
cli
gs
arpl
fs
loope
hlt
jg
mov
cmp
mov
stos
daa
xchg
rol
jmp
hlt
mov
pop
mov
stos
mov
(bad)
cdq
fisttp
mov
mov
mov
mov
or
iret
xor
test
lods
sbb
popa
lahf
mov
ins
and
std
std
xor
js
fbld
neg
sahf
std
mov
test
inc
sbb
lock
mov
cmp
jmp
mov
fild
xor
push
div
xchg
fld
jg
retf
div
out
mov
call
sar
(bad)
es
bound
fist
mov
jbe
cmp
mov
loope
and
leave
xchg
loop
xchg
enter
push
mov
(bad)
mov
(bad)
scas
rcl
retf
ret
or
mov
and
xchg
sub
pusha
je
adc
sub
mov
pop
push
(bad)
xchg
mov
and
cmps
mov
mov
and
jno
inc
sbb
adc
inc
jle
cmp
dec
movs
(bad)
lock
repz
lahf
inc
push
mov
fs
and
and
xor
rol
ds
popf
pop
or
jge
xor
mov
ror
sahf
mov
stc
jb
daa
pop
imul
(bad)
int
(bad)
iret
fs
movs
sbb
adc
cld
mov
stc
push
pop
imul
push
cmps
(bad)
jmp
cmp
or
imul
jmp
int3
cmp
sub
leave
ds
fcomp
jmp
test
jmp
pop
mov
dec
in
repz
call
bound
(bad)
(bad)
gs
scas
pop
pushf
jo
add
mov
jnp
scas
cli
dec
out
repz
sbb
sbb
push
jecxz
pop
ds
jp
cmp
mov
add
pop
das
mov
mov
popf
mov
jne
xlat
dec
in
mov
or
shl
add
cmp
mov
test
out
sbb
call
movs
jns
push
into
mov
mov
ret
clc
push
inc
ret
push
pop
popa
sub
fs
mov
loope
push
inc
xchg
xchg
push
jp
jmp
mov
pop
fsubr
mov
sbb
fadd
hlt
push
jne
or
pop
push
neg
loopne
add
(bad)
and
sbb
add
in
jecxz
stc
inc
hlt
sti
fstp
lds
jnp
retf
inc
adc
push
aas
cli
std
or
push
ja
push
add
cdq
adc
sub
cmp
jnp
xchg
aad
push
retf
pop
out
cdq
mov
hlt
mov
nop
loop
pop
retf
(bad)
(bad)
stc
mov
push
or
in
inc
test
cmp
pop
icebp
adc
pop
adc
mov
xor
(bad)
cs
in
out
adc
lds
inc
fld
mov
cmp
jle
jl
adc
mov
out
mov
mov
push
ss
and
and
cmp
sub
test
scas
int3
sbb
cmps
xchg
(bad)
ficomp
inc
sbb
movs
test
inc
sbb
xchg
pop
pop
cmp
jae
sar
cmp
shr
xlat
ins
adc
xor
aam
call
cmp
mov
sub
dec
into
fld
xchg
jle
sub
lea
push
mov
jmp
jge
pop
in
pop
push
pop
test
imul
or
mov
add
dec
(bad)
xor
push
xor
mov
inc
adc
lock
xor
aad
mov
lds
mov
fist
mov
lock
mov
loopne
pop
fwait
leave
cld
and
add
add
loopne
enter
js
stc
mov
lods
aad
jge
(bad)
lea
jmp
test
je
ins
out
cmp
sub
jnp
lods
mov
rcl
aas
jp
add
aaa
stos
add
(bad)
and
sub
sbb
pop
inc
push
ret
clc
xchg
dec
mov
daa
das
(bad)
aas
jg
inc
sti
sahf
fnstcw
sub
fcomp
gs
gs
test
mov
jnp
push
sub
cwde
xor
cmp
das
mov
cld
jle
ret
xor
dec
inc
aam
in
sub
aad
push
mov
out
je
xor
movs
ds
clc
mov
jb
std
jmp
gs
mov
mov
ja
stc
jl
push
in
inc
out
mov
pop
test
adc
(bad)
pop
clc
aad
in
ins
js
inc
xor
das
mov
sub
mov
jbe
retf
aaa
pop
xchg
arpl
mov
aad
dec
push
cmp
pushf
sbb
adc
sub
into
mov
cmp
xchg
pop
data16
adc
xor
(bad)
ficom
jnp
sub
dec
pop
mov
sbb
shr
movs
adc
ins
adc
mov
dec
pushf
pop
add
std
and
mov
pop
inc
mov
(bad)
sar
inc
jnp
and
(bad)
jmp
or
ds
xor
hlt
push
jg
aam
lods
cdq
and
dec
and
pop
stc
ja
cdq
sar
pop
inc
or
mov
arpl
add
xchg
adc
adc
test
ss
mov
ficomp
add
add
mov
jno
arpl
sahf
leave
or
mov
pop
jnp
movs
pusha
add
dec
or
and
sbb
movs
mov
(bad)
cmp
cld
pop
and
xchg
test
pop
ret
aad
rol
xor
mov
pop
stos
in
mov
cmp
retf
mul
inc
jbe
push
cld
adc
test
sub
or
add
cmp
out
pop
mov
das
sub
sbb
fwait
je
or
sbb
repz
aam
sbb
arpl
push
ja
repnz
popf
hlt
or
ret
ins
mov
daa
inc
and
push
loopne
cmp
js
popa
cdq
in
cmp
xchg
mov
and
arpl
dec
fst
test
aam
push
mov
sti
xor
out
mov
adc
in
out
repz
mov
or
pop
pop
enter
adc
adc
loope
mov
sbb
push
adc
lods
push
cmp
push
cmps
lea
dec
js
in
int
or
into
mov
test
ficom
mov
mov
mov
movs
jecxz
dec
pop
call
fbstp
(bad)
loope
inc
sub
cmp
pusha
and
or
mov
inc
sub
adc
dec
enter
arpl
mov
adc
mov
loopne
idiv
dec
(bad)
and
(bad)
jmp
jp
mov
jp
inc
mov
xor
cmps
test
ja
inc
push
add
push
cmps
or
xchg
ins
in
cld
stos
cmp
xor
lods
(bad)
movs
std
mov
inc
jnp
sbb
push
int
fisubr
cli
aam
adc
je
icebp
ret
addr16
dec
jp
arpl
aam
sar
call
aaa
loop
fcmovnbe
or
jecxz
iret
jbe
or
mov
push
ja
int
mov
fs
cmp
out
cmp
aad
scas
rol
push
scas
mov
int3
add
or
xchg
and
aad
outs
es
xor
fld
xor
add
push
clc
sbb
test
inc
mov
push
push
pop
arpl
enter
xchg
leave
cld
sub
adc
scas
jg
or
and
sbb
mov
out
and
cmp
(bad)
adc
pushf
or
dec
(bad)
fwait
scas
sbb
fstp
sbb
jl
(bad)
sahf
or
cli
add
in
(bad)
daa
adc
inc
push
sahf
adc
ja
test
jb
inc
cmc
sub
test
cmp
push
dec
imul
arpl
dec
mov
push
ins
dec
in
fidiv
pushf
test
call
and
pop
jge
ds
mov
add
test
xchg
rep
outs
xor
adc
(bad)
(bad)
mov
pusha
sbb
dec
adc
jge
or
cmp
bound
fmul
and
mov
mov
jge
clc
std
or
test
ret
sub
mov
cmp
cmps
sub
sbb
jmp
mov
inc
cli
dec
xchg
mov
xchg
jmp
and
cmp
jge
cli
gs
xor
pop
cmp
bnd
das
cmp
sub
push
sbb
inc
jp
rcr
lea
pop
syscall
mov
and
gs
mov
stos
mov
hlt
rol
and
sub
push
movs
mov
fidiv
xor
pop
into
mov
mov
sbb
xor
std
or
mov
test
fbstp
push
btc
js
xchg
out
arpl
iret
ret
adc
sbb
fadd
fnstcw
call
sub
mov
hlt
fdivr
mov
jo
xchg
repnz
outs
addr16
jmp
jp
fimul
mov
ins
jo
push
inc
push
movs
adc
das
jne
ror
enter
and
fild
loopne
or
add
aaa
push
ret
mov
popa
(bad)
push
loopne
shr
retf
jmp
sub
ss
and
movs
and
sub
pushf
push
fld
out
cld
sbb
and
ret
or
outs
arpl
addr16
sar
fdivr
adc
loop
xchg
pusha
(bad)
mov
test
adc
sbb
pop
cwde
xchg
fstp
(bad)
and
lods
test
js
aaa
adc
dec
stos
sbb
outs
adc
sbb
fsub
lds
call
mov
or
test
mov
hlt
shr
inc
lods
movs
add
scas
mov
xor
or
mov
gs
jbe
shl
jl
jns
xchg
inc
dec
add
xor
dec
jle
adc
cmc
aad
push
sbb
and
inc
pop
pop
sbb
lea
movs
mov
rcl
outs
mov
popa
mov
inc
and
fisub
les
in
cdq
loopne
mov
hlt
dec
movs
bound
dec
or
iret
mov
sbb
or
shl
dec
sahf
pop
(bad)
aam
cmps
stos
sar
sbb
les
nop
test
jmp
pop
ret
xor
pop
adc
jg
adc
scas
mov
lds
and
shr
dec
and
mov
cmp
(bad)
jmp
ins
fisub
jae
in
jmp
daa
sbb
movs
sub
xchg
retf
add
xor
scas
mov
cmc
or
sub
jmp
ins
retf
comiss
dec
std
(bad)
repz
ret
retf
xchg
out
jns
scas
repnz
adc
pusha
jbe
mov
push
dec
jnp
jno
pop
dec
or
addr16
add
inc
or
dec
leave
dec
leave
push
sar
mov
cmp
into
and
sbb
shl
out
neg
pushf
call
shr
es
sbb
cmp
jle
add
or
cmps
fimul
adc
sbb
jecxz
xchg
int3
mov
movs
jge
sbb
aad
push
les
aam
popa
call
sub
rcl
gs
loop
sub
call
in
div
jge
xchg
mov
mov
or
fdivr
imul
mov
mov
sbb
idiv
inc
xchg
push
sub
mov
jl
jb
add
jmp
fstp
imul
bound
push
sub
jbe
and
sbb
xlat
ds
fimul
addr16
xchg
repz
or
xlat
mov
out
push
pushf
data16
sbb
sahf
or
sbb
test
sahf
xor
push
inc
pop
inc
mov
push
jp
cmp
jmp
and
outs
mov
mov
push
pushf
es
sbb
inc
out
bound
rcr
jmp
in
movs
frstor
push
shl
adc
call
out
out
push
inc
mov
push
in
push
inc
push
cmps
pop
inc
shr
cwde
add
mov
sub
push
repz
adc
push
push
dec
dec
out
sbb
add
mov
fnstcw
aam
jp
cmp
aam
movs
pop
dec
(bad)
xor
jnp
es
mov
div
jae
push
mov
movs
or
mov
jp
sti
or
in
mov
pop
mov
or
mov
adc
mov
lea
(bad)
jecxz
push
outs
adc
push
cmp
cmps
mov
sbb
scas
push
imul
les
xor
and
xchg
aad
cwde
jl
jmp
inc
nop
stos
dec
sbb
bound
push
sar
iret
xor
daa
les
outs
cmp
adc
call
in
(bad)
xor
(bad)
jp
jo
xchg
stos
sbb
enter
icebp
xor
mov
and
cmp
jae
sub
push
jae
int3
pusha
push
or
xlat
pop
out
xor
xchg
out
je
adc
shl
std
pop
jp
shr
jnp
push
imul
mov
jl
das
pop
mov
pop
cmp
cmp
inc
or
or
(bad)
pextrw
bound
daa
mov
(bad)
jmp
out
push
adc
or
out
add
ins
push
jl
scas
scas
adc
or
sub
dec
mov
xchg
dec
or
pop
mov
loopne
sahf
arpl
(bad)
and
sbb
and
sub
add
jl
jnp
in
add
pop
shr
hlt
sar
and
sbb
jmp
repz
push
add
mov
jp
and
xlat
loope
cmc
aaa
add
in
dec
xor
ss
or
popf
or
clc
and
je
sub
std
sbb
mov
cmp
in
mov
jno
inc
add
aas
lahf
fbld
or
xchg
mov
pop
aaa
xchg
call
movs
or
int3
add
jbe
add
std
rcl
(bad)
stos
dec
pop
pop
mov
or
enter
es
mov
lahf
(bad)
pushf
popaw
btr
imul
pop
leave
adc
mov
xor
shl
sti
pop
xchg
je
test
and
mov
loop
mov
dec
adc
mov
push
je
(bad)
in
fstp
call
dec
iret
or
jg
pop
add
sahf
push
rcr
jne
dec
or
sbb
in
arpl
push
ds
clc
arpl
je
stos
stos
loope
adc
mov
mov
push
(bad)
sub
pop
js
sti
mov
xlat
(bad)
jmp
pop
jae
cli
xchg
cwde
adc
fbld
xchg
lahf
sti
cmps
(bad)
ss
out
(bad)
jecxz
cmp
push
adc
test
in
sub
add
mov
iret
ins
pop
and
mov
mov
mov
xchg
inc
add
div
jns
out
sbb
add
(bad)
jge
mov
and
or
nop
sub
addr16
cwde
xor
rol
mov
jmp
mov
add
inc
aas
arpl
pop
dec
mov
loope
push
push
imul
sub
dec
jns
add
out
movs
ficomp
cmps
push
fs
inc
in
sbb
mov
jmp
fdivr
xchg
push
pop
mov
mov
test
sub
mov
or
pop
loopne
int
cmps
push
std
in
in
push
add
inc
(bad)
rcr
xchg
leave
dec
aaa
inc
outs
les
xchg
sbb
ret
stc
mov
lea
or
add
test
pop
std
pop
test
mov
pop
les
dec
xor
aaa
jge
popa
dec
in
sub
in
dec
cwde
mov
jne
fld
ret
and
outs
jmp
and
fld
out
dec
out
scas
sbb
cmp
inc
xor
pop
jmp
cmp
push
dec
cwde
push
mov
xor
in
aam
repnz
leave
rcl
retf
push
mov
mov
popa
push
push
sub
fisttp
mov
dec
cs
test
dec
aas
pop
es
and
mov
dec
pop
inc
xchg
and
pop
jo
cmc
adc
rcl
mov
stos
inc
es
push
adc
mov
icebp
scas
push
jbe
mul
(bad)
fisttp
xor
popf
scas
sbb
pushf
ss
pop
test
jmp
cdq
cdq
jle
ret
sbb
push
lea
and
stos
jb
mov
adc
mov
movups
int3
cmp
outs
sub
into
call
mov
mov
fdiv
or
in
outs
sub
xchg
(bad)
loop
pop
sti
and
shl
int3
jecxz
pushf
sbb
xor
(bad)
stos
rol
in
dec
xor
fcom
inc
sub
jge
and
xchg
pushaw
int3
xchg
(bad)
cmps
mov
imul
mov
shl
js
aam
xchg
mov
mov
imul
jb
ins
push
cmp
mov
icebp
xlat
stos
test
leave
aad
cld
daa
xchg
push
inc
(bad)
rsqrtps
xchg
dec
retf
or
adc
and
in
test
sub
sbb
or
arpl
inc
cmps
push
cmp
and
and
jb
cmp
dec
mov
jne
pop
aam
cs
outs
cdq
out
and
cmc
out
mov
jae
add
push
pusha
jge
jae
and
xchg
mov
or
cmp
sbb
adc
push
or
mov
fs
pushf
ins
ins
lds
jmp
push
je
jle
outs
in
dec
or
jl
ja
outs
shr
jl
pop
cmp
fiadd
sbb
dec
push
push
cmp
dec
pop
bound
fsubr
aam
jnp
jnp
adc
idiv
inc
std
or
cwde
(bad)
nop
cld
cmp
dec
jbe
retf
xchg
fisubr
int
xchg
cmc
in
jg
mov
sub
pop
std
lods
int
in
nop
xchg
fidiv
call
and
fdivr
jmp
push
popa
or
push
xor
out
xchg
push
mov
jnp
pop
enter
inc
mov
movs
sub
dec
adc
xchg
repz
add
mov
inc
inc
mov
aas
ja
lock
pop
sub
daa
or
mov
ins
(bad)
enter
jl
test
dec
cwde
es
xchg
sub
sahf
(bad)
es
ror
in
test
out
div
scas
data16
imul
mov
push
cmps
iret
call
punpcklbw
xor
sahf
mov
and
xor
xchg
cmp
std
add
out
scas
adc
xchg
das
fcomp
retf
mov
sahf
jno
or
pop
dec
xor
fimul
ss
sub
retf
out
mov
fstp
ss
jo
mov
push
push
loopne
jmp
adc
mov
dec
mov
mov
es
pusha
out
push
fld
retf
sbb
(bad)
std
jnp
out
mov
adc
push
jbe
iret
hlt
push
fistp
cmp
xchg
push
call
cs
mov
pop
pop
in
add
(bad)
mov
mov
adc
stc
sbb
mov
cmp
ss
imul
add
inc
mov
mov
stos
sbb
lahf
jg
cmps
mov
mov
mov
cmps
out
dec
push
lock
jg
mov
mov
cmp
(bad)
add
jmp
mov
repz
jnp
push
and
push
mov
adc
jp
push
pop
loop
jb
sbb
xor
jnp
ins
jbe
(bad)
push
dec
mov
enter
pop
or
mov
add
dec
jg
pusha
ja
arpl
clc
xchg
idiv
pusha
xchg
(bad)
and
ret
nop
fmul
sbb
leave
fmulp
sbb
jb
(bad)
or
dec
hlt
imul
adc
sti
mov
int3
xlat
mov
lods
mov
push
loopne
pop
cmp
loop
(bad)
xor
push
lea
xchg
sbb
add
or
inc
stos
ror
stos
fst
mov
aam
xor
xor
sbb
popa
dec
sbb
jge
dec
add
mov
in
sbb
jle
ins
mov
leave
mov
loop
pop
or
neg
mov
stos
cmp
retf
mov
(bad)
xchg
outs
push
popa
in
and
es
aad
or
push
inc
ins
or
jl
and
ss
pop
retf
stc
sbb
inc
fdivr
mov
push
mov
outs
sub
stc
mov
rol
test
mov
and
inc
jmp
mov
rol
inc
adc
and
and
mov
pop
test
stc
jno
iret
xor
inc
test
int3
sahf
mov
mov
cmp
or
test
clc
adc
pop
cs
mov
push
pushf
pop
sar
(bad)
inc
inc
cmp
jbe
shl
(bad)
cmp
in
cmc
xlat
jecxz
jecxz
mov
arpl
and
jmp
pop
cmp
xchg
mov
retf
jo
arpl
into
push
mov
jo
inc
adc
je
cmp
sbb
or
call
imul
and
ins
jb
in
pop
xor
daa
xor
in
clc
cmp
push
sub
jo
inc
xchg
popf
(bad)
out
inc
xchg
test
or
dec
and
fsub
cmp
cmps
ss
cmps
out
pop
jl
xor
adc
(bad)
out
out
fs
dec
mov
movs
or
mov
xchg
popa
jmp
es
sbb
addr16
add
add
xchg
cmps
lea
pop
pushf
dec
imul
jmp
mov
push
ins
mov
jge
add
pop
xchg
push
push
pop
rol
xor
add
push
mov
fdivr
inc
ins
mov
loope
or
sbb
mov
pop
test
mov
sub
retf
movs
push
mov
sub
push
pop
or
nop
or
xor
scas
dec
xor
cmp
adc
(bad)
xchg
mov
retf
stos
dec
dec
mov
sub
pop
sub
add
jne
inc
(bad)
int
inc
std
inc
adc
fcom
xor
call
pop
sbb
(bad)
pop
test
cmp
mov
jae
add
dec
test
stos
lods
out
pop
stos
ficomp
inc
shr
int3
push
jnp
sub
les
xor
pop
imul
push
pop
mov
in
aas
outs
data16
dec
mov
fisttp
jo
rol
mov
mov
dec
mov
or
mov
inc
arpl
and
test
fdiv
(bad)
pop
jg
push
sar
(bad)
jns
pop
out
jle
outs
mov
inc
push
inc
scas
fld
in
js
mov
aaa
xchg
test
out
pop
push
or
xor
not
es
repz
fist
stos
js
sbb
mov
sahf
pop
test
and
(bad)
mov
mov
push
fisubr
add
or
mov
pushf
les
inc
movs
cmps
ja
test
das
outs
pop
outs
push
lods
nop
add
mov
adc
jbe
fisttp
inc
adc
mov
fwait
(bad)
ror
inc
fistp
mov
loop
push
inc
iret
adc
fist
movs
mov
in
sbb
push
in
sub
stos
push
lods
mov
clc
lods
stos
mov
in
cmps
jmp
bound
lahf
mov
adc
xor
xchg
adc
jns
int3
sahf
or
sbb
fs
pop
sbb
(bad)
jp
xchg
xchg
xor
fimul
ret
add
push
jo
les
pop
xchg
les
mov
sub
and
cmps
inc
adc
int
shl
(bad)
xor
inc
push
xchg
mov
popf
push
lods
je
jno
mov
popa
sub
inc
adc
jmp
in
push
push
ins
push
int3
retf
mov
push
mov
mov
jl
jne
call
push
jne
cmp
cs
hlt
addr16
dec
mov
imul
pop
je
sbb
int
sbb
cmc
in
push
push
push
push
rcr
das
jp
and
and
push
mov
out
cmp
fisub
ret
push
xchg
push
lock
hlt
popf
test
jmp
movs
or
pop
in
xor
cmp
inc
cmp
pop
sbb
xchg
push
or
out
in
les
icebp
sub
fistp
cmc
sub
sbb
sbb
(bad)
fdivr
mov
ror
lea
mov
js
sub
loopne
ins
stc
rcl
int
ds
mov
sbb
xchg
push
dec
std
(bad)
in
lahf
push
mov
test
sbb
mov
cmp
sub
or
or
adc
and
pusha
(bad)
jl
mov
dec
xchg
in
dec
sub
fadd
dec
daa
and
jle
cld
outs
inc
cmc
test
pop
test
(bad)
xchg
test
xchg
loope
xchg
std
adc
mov
push
xchg
jp
jle
mov
inc
jne
or
mov
(bad)
(bad)
icebp
xor
aam
out
into
scas
xor
imul
sar
in
sub
mov
xchg
inc
shl
test
jmp
dec
pop
loopne
cmp
sbb
dec
ret
repnz
in
arpl
ja
and
jae
int3
(bad)
pop
inc
jmp
jecxz
icebp
adc
sbb
push
mov
or
sbb
(bad)
shl
test
xchg
test
xchg
sub
dec
xchg
outs
dec
out
cmp
xor
scas
dec
mov
cwde
mov
fiadd
(bad)
jbe
out
dec
cmp
daa
jbe
jl
jmp
push
cwde
popa
mov
push
out
icebp
and
sbb
stos
jecxz
stos
xor
repz
jo
rol
sbb
pop
mov
cmp
fsubr
mov
sub
ret
je
dec
cmp
push
mov
xchg
push
xlat
stos
mov
cli
(bad)
sub
dec
jle
mov
(bad)
rcl
sbb
iret
pusha
ja
inc
js
cmp
mov
mov
sbb
mov
jo
cmp
and
mov
scas
unpcklps
dec
mov
cld
int3
xchg
es
test
xchg
fbstp
inc
xchg
repnz
sub
inc
(bad)
lahf
(bad)
mov
jns
and
cmp
sub
(bad)
fdivp
dec
xchg
aad
push
call
mov
das
(bad)
(bad)
dec
xchg
lds
mov
mov
push
inc
mov
movs
sub
sbb
sub
mov
cmp
inc
jp
dec
xchg
outs
sub
(bad)
and
push
(bad)
dec
pop
mov
inc
int3
bnd
inc
dec
cmp
lock
sbb
(bad)
clc
jle
fisttp
call
sub
rol
retf
sub
xor
cmp
test
sbb
ss
out
mov
pop
jmp
adc
jecxz
stc
mov
fisttp
(bad)
sub
outs
inc
(bad)
pop
jg
stos
frstorw
sbb
gs
mov
jmp
sbb
cmp
in
mov
sbb
scas
aam
push
arpl
out
jbe
pop
out
sbb
push
sub
mov
cmp
mov
mov
add
mov
retf
bound
daa
pop
cld
adc
xor
aaa
mov
add
inc
sbb
repz
mov
xlat
(bad)
jae
in
or
mov
sub
mov
(bad)
(bad)
jge
sbb
scas
cmp
jnp
iret
nop
mov
push
dec
jae
popa
jnp
ss
scas
or
sub
ret
add
or
aam
fidivr
mov
push
loope
in
jl
fwait
cwde
(bad)
(bad)
mov
es
inc
js
sub
shr
xchg
adc
jle
dec
sbb
add
fcmovnu
push
xchg
scas
cmp
adc
xchg
add
mov
cmp
fadd
aad
in
inc
cmp
add
jp
shr
repz
arpl
pop
xor
xchg
(bad)
xchg
repz
call
dec
dec
popa
clc
ins
sbb
mov
stos
cmp
loope
mov
fst
push
dec
(bad)
mov
inc
push
add
shl
wbinvd
mov
scas
mov
js
daa
dec
adc
sbb
in
rcl
cdq
sti
mov
fdiv
sub
mov
mov
(bad)
repnz
mov
xchg
js
aam
std
mov
mov
arpl
mov
pushf
out
jmp
mov
test
movs
and
push
repnz
js
enter
xor
or
clc
mov
cwde
cmp
sub
inc
jecxz
mov
in
pop
cmc
xor
imul
mov
sbb
aaa
out
push
test
fidivr
or
call
sbb
jns
rol
xchg
ss
dec
cmp
shr
rcl
stc
rcl
ficomp
popa
mov
jnp
ins
jmp
outs
std
jmp
rcr
into
enter
stc
pop
pop
dec
movs
fcom
cmp
cdq
jbe
pop
jge
xchg
push
nop
mov
lods
fidiv
aad
out
jne
mov
test
int
cmp
pop
sub
pop
aaa
jns
out
cwde
enter
add
dec
aaa
int3
adc
loopne
add
icebp
and
into
jo
jno
add
rcr
and
hlt
(bad)
(bad)
push
in
js
sub
mov
add
or
dec
sbb
arpl
addr16
cmp
xor
and
dec
idiv
icebp
popa
pop
and
das
inc
sbb
fld
jo
sub
popa
xchg
mov
add
popa
sar
cmp
popa
ss
fidivr
out
or
movs
and
retf
cs
push
ficomp
out
jmp
sub
fs
pop
jmp
and
and
(bad)
pop
fld
xchg
add
lods
push
mov
sbb
outs
out
pop
inc
int3
movlps
xchg
test
push
shl
fs
pop
(bad)
pop
mov
mov
sub
mov
push
jmp
out
mov
push
adc
out
pop
adc
and
xor
push
push
xor
sbb
mov
call
mov
stc
div
mov
push
(bad)
stc
out
pop
int
fdiv
stos
xchg
(bad)
fidivr
push
inc
popf
ja
push
and
repz
xlat
or
enter
adc
jne
call
imul
mov
cmp
sub
jecxz
ins
shl
loop
pop
inc
test
stos
or
(bad)
arpl
or
fistp
loop
int3
sbb
ror
push
inc
sbb
pusha
pop
fld
stos
jge
cwde
sub
sbb
(bad)
or
push
sbb
arpl
add
mov
jl
mov
fisttp
xlat
jg
xchg
push
pop
aad
push
sbb
pop
sbb
xchg
xchg
call
mov
ror
in
mov
inc
mov
push
ret
push
lock
leave
inc
add
jbe
mov
test
stos
push
jbe
fwait
sahf
out
movs
adc
mov
in
push
clc
ins
aaa
mov
mov
xchg
cmps
cmp
inc
ds
imul
mov
jmp
leave
mov
ret
enter
retf
mov
pop
mov
and
pusha
dec
add
cmp
stc
xchg
cmp
xor
out
(bad)
jle
cld
inc
dec
in
cmp
popf
sbb
(bad)
(bad)
fild
inc
pushf
daa
xchg
xor
pop
push
jns
call
adc
mov
cdq
pop
pop
inc
jb
leave
push
dec
add
dec
and
push
hlt
outs
outs
and
ror
pop
(bad)
rcl
add
retf
mov
cmp
ss
sub
mov
or
jmp
out
mov
adc
mov
gs
icebp
sbb
inc
mov
iret
and
or
(bad)
jo
cmps
and
mov
xchg
push
sub
add
(bad)
jge
aas
mov
mov
and
rcr
lahf
add
int
js
pop
aam
iret
lods
test
shr
imul
out
inc
aad
xor
push
inc
(bad)
mov
fld
sub
(bad)
std
(bad)
imul
(bad)
sub
sbb
mov
scas
data16
lds
xor
rol
jg
xor
push
or
cwde
stc
cli
(bad)
push
adc
aas
jmp
mov
or
push
call
cmp
pop
jmp
jp
dec
push
xlat
ret
add
movs
pop
cs
xor
cmp
mov
xchg
jg
or
pop
pop
test
repnz
shr
lea
imul
imul
cli
loope
push
ins
mov
inc
fwait
lahf
pusha
jle
mov
mov
aad
stos
and
dec
dec
ret
bound
icebp
and
add
fnstenv
fwait
aam
pop
imul
push
xchg
je
inc
in
lds
cmp
outs
cmc
rol
cmps
test
jl
loope
push
fsub
mov
mov
mov
add
mov
outs
dec
loopne
push
lock
stos
icebp
(bad)
mov
push
and
loopne
add
mov
or
je
repnz
stc
jg
outs
lock
scas
lock
lods
(bad)
loopne
fmul
in
cmp
lahf
xlat
mov
sub
add
xchg
aaa
mov
xchg
mov
pushf
gs
leave
xchg
add
inc
dec
popa
aas
xor
fstp
push
cmp
and
sbb
jns
loope
inc
push
jl
int
adc
retf
nop
dec
and
jl
sub
popa
neg
pop
add
std
jl
into
(bad)
das
call
jb
pop
push
es
cmp
cli
stc
or
out
daa
xchg
ins
xchg
enter
inc
add
or
mov
test
mov
call
imul
and
dec
dec
mov
adc
and
pop
(bad)
nop
cmc
push
leave
xchg
dec
cld
sbb
and
shl
fst
aas
sti
push
xchg
imul
push
jmp
test
int3
xor
sbb
cmp
out
jns
ja
add
push
pop
or
mov
or
dec
dec
inc
or
in
pop
pop
je
(bad)
jge
lods
cmp
sbb
jecxz
adc
and
clc
xor
in
rcl
sub
scas
push
and
shl
aam
and
push
enter
int
sahf
aaa
jg
cmp
loop
lock
cmp
in
sbb
mov
addr16
test
inc
aad
sub
lods
push
(bad)
mov
and
dec
sub
dec
jecxz
dec
cmp
mov
mov
test
fwait
in
sahf
shl
inc
push
cmp
xlat
mov
jp
je
cld
in
pop
dec
outs
inc
inc
lock
mov
pushf
aaa
pop
pop
int
test
dec
jle
pop
test
push
cmps
jns
mov
fst
jg
push
fs
xchg
sbb
jge
ins
add
loop
jecxz
(bad)
dec
stc
inc
clc
iret
pop
shl
rol
rol
xchg
sbb
(bad)
add
loopne
adc
cmc
pop
out
xor
movs
mov
mov
std
rcl
addr16
imul
push
int3
sbb
push
popa
repz
sbb
mov
cmp
jno
dec
and
mov
fst
add
pop
sar
xor
sub
test
push
sahf
mov
push
cmc
jmp
mov
push
mov
hlt
cmps
jge
lods
sbb
xchg
push
nop
(bad)
sbb
inc
jp
addr16
leave
jl
ret
or
mov
and
xor
fsubr
mov
sub
in
imul
push
jl
stc
mov
hlt
stc
dec
rol
stc
mov
inc
dec
mov
ss
das
jae
into
xor
rcl
push
leave
outs
mov
mov
lock
sar
xlat
popf
enter
(bad)
dec
mov
lods
cmp
and
cmp
aad
add
sub
bts
data16
sbb
adc
out
cmp
dec
loop
ror
cld
outs
popf
xchg
mov
cmp
pusha
out
xor
mov
push
adc
cmp
call
fistp
inc
arpl
imul
mov
dec
xor
push
in
jnp
cld
sti
addr16
dec
cmps
push
add
push
out
lahf
jns
cwde
xor
mov
and
in
cdq
je
out
sub
adc
test
mov
cmp
mov
popa
inc
push
xchg
dec
enter
je
and
sbb
outs
mov
sub
sbb
jnp
inc
rcl
fisttp
test
pop
cmp
jbe
jl
and
pop
rcl
sbb
jmp
add
fst
jge
addr16
fld
test
rcr
shr
mov
lods
inc
repnz
movs
dec
idiv
dec
mov
pushf
add
pop
cmps
aad
test
rol
sbb
dec
(bad)
sbb
xchg
loop
out
fsubr
sbb
bound
in
adc
jno
mov
add
mov
(bad)
pushf
add
jne
and
sub
(bad)
and
iret
in
out
cdq
push
jp
(bad)
xchg
inc
adc
daa
and
push
aad
xor
call
mov
xchg
int
jo
and
adc
jecxz
in
test
out
jo
cmp
ja
cmps
inc
pop
cmps
(bad)
stos
pushf
xchg
stos
jb
mov
mov
in
mov
sbb
jl
jecxz
(bad)
icebp
inc
(bad)
cmp
dec
sti
mov
test
out
or
ja
sub
hlt
ret
mov
aaa
xchg
lahf
jmp
icebp
jne
retf
gs
xchg
outs
fs
and
inc
mov
jns
(bad)
stos
je
xchg
jns
cdq
imul
adc
ins
xchg
inc
push
lea
movs
gs
push
rcl
jo
int3
data16
les
ds
shl
hlt
add
sar
or
mov
pop
pop
cmps
add
movs
ins
daa
fcomi
push
sbb
ds
cmp
or
out
inc
adc
pusha
fnstenv
bound
fs
dec
xchg
push
outs
adc
sub
mov
aas
cmps
push
out
jp
mov
int3
pop
aaa
(bad)
and
shr
call
pop
in
sub
or
adc
inc
inc
pop
xchg
mov
in
in
dec
outs
fsubr
sbb
loop
retf
pop
movs
dec
push
xchg
in
mov
lock
xchg
cmps
aad
add
scas
mov
adc
mov
lods
jmp
aam
jg
arpl
lea
mov
fiadd
push
ja
xchg
popa
and
cwde
cmp
scas
push
retf
imul
ss
hlt
lahf
loopne
mov
add
jno
push
jmp
inc
inc
xor
fidivr
scas
in
inc
aas
out
cs
fwait
inc
lods
add
xor
xchg
bound
inc
ret
mov
out
push
fsincos
dec
jae
inc
adc
push
sub
iret
mov
jmp
cmp
dec
arpl
enter
imul
stos
and
xchg
and
cdq
dec
pop
dec
mov
mov
jl
cli
lds
gs
cmp
in
pminsw
dec
pop
int3
jge
pop
cdq
push
iret
mov
fisttp
jne
call
nop
pop
adc
arpl
jae
jge
push
nop
stc
add
outs
fbld
dec
push
aad
push
mov
int
mov
lock
sub
pop
add
retf
fisttp
add
mov
les
pop
(bad)
cmps
jmp
xor
ins
test
loopne
cwde
xchg
les
cmps
fisttp
call
ror
(bad)
(bad)
cwde
adc
cmps
cwde
movs
imul
xlat
outs
mov
mov
scas
pop
aas
lea
add
sub
pop
pop
mov
sbb
inc
sbb
xchg
fisub
jl
mov
or
pop
outs
sub
les
das
pushf
mov
popa
adc
arpl
xchg
adc
cld
sahf
test
rol
ins
dec
push
xchg
pop
sbb
push
cmp
js
ins
inc
into
scas
push
mov
(bad)
cs
xchg
jl
xchg
fild
ds
iret
xor
pop
mov
sub
fnstenv
mov
dec
repnz
mov
mov
inc
jmp
mov
stos
push
jns
shr
es
aad
xchg
pop
xchg
cmp
add
inc
sahf
lds
sbb
adc
cmp
(bad)
push
mov
test
hlt
arpl
js
rcl
push
adc
mov
cmp
xchg
sub
jmp
lods
jecxz
and
push
aaa
sub
pop
(bad)
call
xchg
and
fnstcw
gs
icebp
cmp
loop
add
movs
aas
outs
jmp
xchg
push
rcr
add
mov
cdq
outs
cdq
je
pushf
(bad)
neg
(bad)
pop
xor
fs
cmp
daa
cmp
int
mov
dec
sub
pop
ins
inc
mov
push
fsub
sbb
xchg
cmp
cmps
movs
fld
je
les
mov
(bad)
(bad)
push
sub
and
(bad)
mov
xor
xchg
jno
sbb
das
ja
pop
mov
push
sub
mov
ins
cld
in
pop
xchg
or
jge
pop
cld
cmp
jbe
xor
enter
pop
cmps
sbb
dec
jns
sbb
(bad)
test
or
push
dec
jns
dec
outs
pop
mov
lods
imul
test
sub
sahf
jecxz
sbb
retf
cmps
and
into
movs
lods
pop
in
(bad)
sbb
ja
sar
scas
xchg
int
inc
inc
mov
adc
pusha
stos
retf
jp
cmp
mov
js
pop
sbb
adc
pusha
fimul
push
pushf
mov
sar
xor
pop
ss
cdq
xor
pop
inc
push
jo
std
loop
pop
push
cmc
out
add
lock
mov
xchg
xchg
jmp
cmps
or
cli
outs
hlt
mov
popf
mov
stos
push
pop
outs
(bad)
adc
or
dec
pop
push
lods
cmp
adc
mov
es
mov
add
inc
cwde
rcl
pop
adc
xchg
or
addr16
cmc
jecxz
rcl
rcl
aas
mov
pop
(bad)
jno
mov
out
test
lahf
push
sub
test
inc
dec
pop
push
loop
scas
pop
cmps
mov
lock
xor
lods
mov
dec
jmp
int
arpl
cmp
jnp
push
mov
jns
mov
fidivr
rcr
sbb
jle
scas
fimul
pop
call
imul
jne
xor
aad
imul
loope
jmp
cmp
rcl
xor
fprem1
nop
mov
add
mov
stos
add
into
out
data16
ja
shr
and
dec
jg
leave
daa
mov
fwait
stos
outs
movsx
xchg
ficom
daa
or
mov
mov
xor
lock
shl
add
mov
push
into
mov
xor
das
cmps
add
pop
clc
leave
(bad)
xchg
mov
add
inc
sbb
sbb
pop
in
cmp
rcr
sub
mov
mov
bound
cld
or
cmp
div
jp
scas
mov
inc
sub
pushf
and
outs
mov
fcom
repnz
aad
stos
in
ret
retf
mov
xchg
sub
loopne
pushf
adc
addr16
mov
inc
adc
int3
mov
hlt
(bad)
xor
cld
pop
enter
or
pop
or
lds
icebp
add
cmps
sbb
push
inc
push
cmp
add
repz
xchg
sahf
sbb
imul
icebp
add
sub
shl
push
jg
mov
jp
pop
pop
sub
inc
xchg
sbb
jne
leave
scas
jae
std
pop
jp
mov
push
fdiv
dec
imul
jo
pop
(bad)
jbe
sub
(bad)
jge
out
inc
dec
mov
xchg
pop
jae
inc
mov
push
sub
test
out
mov
or
jge
ret
in
mov
aas
aas
mov
icebp
jecxz
or
es
jo
mov
add
idiv
push
jmp
lods
scas
jae
or
add
aad
aam
mov
das
out
dec
shl
nop
cmp
dec
cmps
mov
pop
shl
push
or
adc
cmp
lock
loope
stos
jmp
push
and
and
pop
mov
pop
cmp
scas
int
pop
popf
lds
push
push
jnp
mov
push
push
xchg
lds
pop
xchg
add
rol
dec
adc
sub
and
xchg
test
imul
push
push
jo
ds
int
in
les
pop
aad
retf
xchg
fwait
cmp
out
push
xchg
mov
scas
cld
jno
rcr
mov
in
sbb
cmps
test
push
cmp
ins
sbb
push
test
mov
(bad)
adc
mov
jmp
call
add
add
lods
add
ret
leave
push
adc
iret
xchg
repnz
push
push
push
pop
pushf
push
inc
jge
mov
sar
mul
mov
cs
push
add
retf
inc
in
adc
stc
cs
and
shr
mov
push
data16
sub
or
out
pop
mov
icebp
sbb
push
into
out
xor
movs
adc
ror
in
cdq
sbb
lahf
data16
pop
loope
mov
push
pop
ja
jnp
xor
(bad)
imul
pop
js
adc
push
adc
push
std
dec
jle
xchg
pushw
fmul
loop
xor
leave
mov
int
repnz
dec
shl
(bad)
mov
dec
das
bound
jle
ret
dec
std
retf
(bad)
out
mov
mov
adc
dec
hlt
jp
les
lock
sbb
and
xor
push
jbe
xor
or
pop
mov
hlt
push
inc
or
mov
test
leave
or
cmp
mov
mov
xor
inc
cld
(bad)
cmc
jb
push
in
push
dec
jb
add
std
call
push
adc
inc
jne
mov
lahf
retf
xchg
repz
sbb
imul
scas
sahf
or
ror
add
loop
fdiv
dec
push
aad
ja
popa
mov
fimul
mov
dec
lea
pop
jb
pop
and
pop
popa
stos
icebp
pop
and
mov
out
ja
push
sbb
cwde
pop
sub
inc
leave
sar
xor
or
sbb
and
lods
inc
jns
addr16
sti
mov
lods
mov
jmp
and
push
cmps
or
push
and
push
fwait
or
pop
fs
clc
jo
pop
xchg
fstp
xchg
and
dec
jecxz
cmp
leave
popf
cmp
inc
stc
stos
push
pusha
push
push
ror
stc
sub
dec
cwde
lock
add
inc
mov
or
fcmovb
or
cld
cwde
dec
int
les
out
push
hlt
popa
xchg
and
push
cld
cmps
dec
stc
and
lods
xchg
lods
sbb
lock
or
stos
mov
dec
sub
imul
movs
rcr
lds
dec
(bad)
test
pop
fstp
jnp
xchg
enter
mov
jb
outs
js
pop
jo
std
jle
jae
inc
mov
scas
mov
fsubr
jge
mov
sub
in
out
pop
out
mov
xor
adc
jmp
pusha
into
xchg
mov
ror
pop
push
retf
push
mov
adc
cmp
or
ins
sub
ss
dec
arpl
sbb
rol
jle
lods
outs
sar
inc
push
sbb
push
out
fwait
jbe
call
cmp
pop
inc
sar
push
cmps
sar
cwde
xor
mov
pushf
mov
scas
fst
inc
xor
call
mov
inc
jmp
mov
push
rcl
and
and
cmp
ins
jmp
cdq
or
push
xchg
loop
pop
data16
push
mov
jo
jno
sub
xor
dec
lahf
test
leave
lds
sbb
add
ss
push
cmp
sar
add
and
iret
push
int3
pop
pushf
cdq
push
and
stc
test
mov
ins
call
out
ins
bound
mov
xchg
das
stos
push
sub
mov
inc
adc
push
mov
add
test
dec
lea
ins
jp
cmp
mov
sub
dec
jecxz
sbb
cld
lds
jl
cmp
and
inc
sbb
sbb
xor
(bad)
(bad)
sti
sti
lods
dec
adc
sti
(bad)
es
adc
(bad)
and
fisub
inc
mov
dec
sbb
dec
aas
fisubr
push
stos
sbb
pop
and
xor
xchg
or
out
sub
lahf
fwait
outs
pop
push
cwde
je
mov
sbb
xchg
sub
mov
dec
add
cld
retf
rcr
xor
sub
out
push
cwde
(bad)
loop
mov
xchg
(bad)
out
aaa
push
jmp
push
pop
repz
cvtdq2ps
loop
mov
mov
mov
cmp
daa
pop
imul
repnz
das
fs
imul
cli
jbe
std
outs
(bad)
and
call
xchg
stos
call
scas
pop
dec
pop
push
scas
inc
xchg
xor
neg
cdq
loop
nop
cld
push
mov
shl
mov
pop
push
sbb
mov
jnp
push
sbb
jmp
pop
and
in
cmp
adc
adc
imul
mov
pusha
fnsetpm(287
cmps
dec
imul
xor
mov
sbb
xor
jno
(bad)
add
and
mov
and
mov
arpl
icebp
dec
je
jno
or
std
push
dec
lock
sub
and
xchg
popa
xor
daa
ret
and
fst
cmp
ins
stos
sub
test
or
mov
mov
cmp
aaa
lock
jp
push
stc
or
xchg
scas
dec
stos
mov
sbb
iret
inc
fnsave
push
jge
xor
dec
mov
rdtsc
cwde
and
dec
movs
sbb
push
push
jne
xchg
arpl
scas
push
aaa
mov
imul
jo
push
(bad)
js
sti
jno
cmp
nop
push
aad
enter
cwde
stos
fisubr
mov
mov
int3
fimul
mov
push
es
sahf
sbb
sub
pop
pop
push
repnz
in
sbb
(bad)
push
lods
cli
inc
imul
shr
call
push
jmp
sti
mov
xchg
sub
aad
fdiv
call
outs
add
pusha
aas
sbb
hlt
push
pop
adc
sub
test
div
bound
nop
sbb
xchg
sub
inc
mov
pop
add
mov
stos
fld
shl
adc
int3
adc
aam
adc
inc
fcom
xchg
scas
jg
(bad)
dec
xchg
mov
ja
cli
pop
dec
and
xchg
shl
jb
hlt
jp
jmp
jae
std
mov
pop
xor
jg
mov
add
and
ins
inc
ja
inc
push
lahf
fist
sbb
enter
bt
in
dec
dec
ds
lds
out
stos
jg
not
or
das
push
cmp
dec
mov
ret
aas
add
push
(bad)
xor
sub
dec
aad
arpl
jg
sub
aam
fdivr
adc
leave
bound
daa
push
lock
std
test
dec
imul
retf
leave
and
dec
push
scas
in
jnp
dec
push
stos
arpl
xchg
mov
mov
repz
push
ins
and
xor
adc
lock
in
aas
jo
dec
test
xchg
ins
movs
xor
jmp
iret
push
or
mov
retf
inc
out
cli
ret
and
data16
xchg
cld
jo
mov
fistp
lahf
popa
cmc
sar
push
add
retf
mov
add
ins
push
sti
mov
mov
mov
dec
retf
js
cld
pop
pop
sbb
mov
(bad)
jns
mov
cmp
dec
and
or
ins
push
and
(bad)
inc
addr16
and
stos
adc
test
cs
rol
xchg
mov
repnz
jmp
ins
retf
je
loope
mov
cld
out
xchg
lahf
mov
lahf
xlat
and
adc
or
push
xchg
fcomi
fiadd
enter
dec
ds
int
pusha
mov
add
adc
inc
push
mov
lock
clc
jge
pop
jmp
repz
mov
retf
xor
sbb
push
test
outs
xchg
mov
iret
jno
add
or
mov
movs
jbe
call
sub
jbe
push
pop
mov
fcom
mov
daa
fidivr
mov
mov
add
icebp
pusha
pop
sub
lods
call
call
mov
int
cld
punpckhdq
lods
int3
(bad)
retf
jl
xchg
call
dec
dec
js
inc
jp
les
jno
mov
and
mov
push
xchg
and
or
aaa
pop
fidivr
clc
add
dec
sahf
xor
xchg
xor
inc
out
push
push
call
mov
enter
les
call
cdq
sbb
sub
and
test
dec
xor
dec
sbb
add
cli
into
cli
pushf
mov
add
out
loop
ffreep
jne
shl
adc
or
xor
test
es
inc
cmp
(bad)
mov
wbinvd
fst
cmps
xor
ficomp
pop
mov
shl
pop
and
imul
or
shl
xchg
cs
test
mov
inc
pop
fcmovnbe
lds
cwde
adc
xchg
cmp
cwde
ja
(bad)
gs
push
jp
test
jb
or
aam
inc
(bad)
call
sbb
dec
ror
cdq
hlt
or
xor
stos
and
xchg
push
mov
test
lods
inc
pop
imul
pop
es
sbb
retf
adc
fiadd
mov
ret
jp
pop
ss
cmp
add
dec
dec
dec
push
xlat
(bad)
(bad)
sbb
es
sbb
pop
(bad)
fwait
popa
jae
mov
ss
das
jne
jmp
popf
inc
cdq
out
(bad)
sub
repnz
in
cmps
je
ret
xchg
lahf
jecxz
push
mov
fwait
sub
push
push
sub
test
in
(bad)
cli
in
adc
jmp
movs
push
push
call
adc
mov
mov
out
or
pop
retf
test
jl
test
xor
mov
cli
cmp
mov
aas
mov
and
(bad)
cmp
adc
xchg
pop
cmp
nop
cmp
(bad)
std
xor
pop
imul
mov
cmp
shl
ds
jmp
das
popa
lahf
mov
scas
hlt
cmps
fs
cmp
jge
lds
(bad)
jmp
cmps
leavew
rcr
fcomp
out
lods
or
loopne
mov
cdq
jp
sub
ins
ds
stos
xchg
jb
or
push
xchg
mov
out
jns
ins
xor
test
and
or
dec
push
inc
xor
mov
dec
cmc
into
xlat
or
(bad)
cwde
mov
xor
les
fs
shr
std
dec
iret
pop
out
inc
aad
mov
sbb
mov
out
xor
push
in
jp
mov
in
pop
retf
sub
lahf
daa
nop
and
cmp
xchg
into
inc
pop
cld
xlat
cmp
sub
inc
fist
push
mov
es
retf
inc
cmp
sbb
sub
jle
sbb
ds
test
push
sahf
xor
mov
dec
call
das
dec
sbb
or
sbb
sbb
push
xchg
sti
mov
or
movs
mov
mov
lea
mov
stc
loope
imul
jl
shr
fmul
jnp
push
cmp
mul
add
inc
jbe
stos
stos
ins
lock
push
test
dec
and
pop
mov
pop
jb
cmp
cmp
sub
inc
sahf
jnp
mov
lahf
push
ja
imul
imul
add
or
int3
pop
out
mov
push
cmps
jmp
(bad)
xlat
ins
sti
test
jmp
data16
shl
fstp
sub
aad
out
xor
cmp
mov
lock
(bad)
icebp
mov
daa
inc
enter
xor
sbb
jge
cmps
call
xor
test
fnstcw
xor
pop
inc
je
fmul
arpl
ret
push
or
adc
xchg
jecxz
scas
fs
sub
dec
cmp
xor
and
aad
shl
lea
test
xor
and
fisttp
je
mov
mov
adc
loopne
push
mov
sub
in
add
jae
(bad)
hlt
and
retf
and
loop
mov
xor
jo
(bad)
xor
sub
push
imul
add
cmp
repz
push
sub
bound
and
jb
pop
aaa
mov
pop
push
cmps
dec
or
out
repnz
mul
lods
add
loope
imul
std
pop
inc
(bad)
push
push
xor
cmps
stos
jns
das
dec
mov
outs
ror
mov
and
gs
mov
push
shl
fisubr
cmp
repz
repnz
mov
mov
sysret
jns
cs
(bad)
hlt
scas
xchg
or
pop
inc
ins
call
xchg
daa
std
jecxz
popf
inc
mov
sbb
pop
and
inc
in
mov
cmps
adc
dec
div
jecxz
pop
mov
jae
add
mov
fsub
and
nop
or
loopne
mov
mov
lea
retf
repz
mov
enter
out
js
jp
mov
push
popf
xchg
inc
inc
push
test
xchg
scas
xor
adc
(bad)
imul
fist
ret
sub
addr16
(bad)
sbb
in
inc
test
je
retf
or
sti
push
loop
push
shl
movs
scas
aad
pop
lahf
mov
mov
fmul
inc
sti
ss
jmp
mul
jae
mov
push
ins
call
idiv
jne
inc
pusha
pop
es
cmps
add
faddp
dec
enter
lock
pushw
(bad)
(bad)
xchg
inc
fwait
stc
jmp
mov
xchg
fwait
cs
vmwrite
div
jmp
xchg
pop
repnz
dec
pusha
bound
pop
pinsrw
cmp
sub
outs
aad
add
gs
sub
adc
mov
(bad)
pop
into
dec
outs
or
in
cld
push
xchg
push
mov
and
sahf
jmp
or
push
imul
push
pushf
hlt
int
rol
call
push
addr16
lods
cmp
xor
mov
and
das
pusha
adc
adc
mov
add
(bad)
daa
pop
mov
lods
sbb
ret
cmp
cs
xchg
and
fwait
push
mov
out
fisttp
cmp
int
sub
in
fmul
inc
outs
jmp
in
or
cli
add
sbb
mov
test
enter
pop
mov
push
add
sbb
rcr
fld
jle
cwde
test
rol
inc
inc
and
mov
dec
outs
sbb
pop
test
mov
bswap
mov
mov
push
enter
mov
and
lahf
mov
loope
fldenv
mov
scas
inc
pop
adc
(bad)
adc
gs
les
dec
div
inc
daa
cmp
sbb
aam
pop
push
stc
xor
pop
mov
mov
ja
inc
sub
adc
shr
mov
in
lahf
ret
and
push
jecxz
xchg
push
shr
mov
and
mov
cmps
dec
push
stos
bound
mov
shl
xor
adc
push
nop
sbb
inc
data16
daa
js
xchg
sti
imul
fbld
or
cld
adc
bound
and
adc
add
std
cmp
je
cs
aad
in
jp
pushf
sub
mov
add
and
out
je
jno
sub
adc
cmc
jl
add
outs
xor
retf
sbb
rol
hlt
in
ret
jno
repnz
aad
aam
arpl
retf
jno
xchg
shl
jle
mov
sub
cmp
inc
pusha
cmp
inc
pop
pop
ins
daa
pop
xor
in
scas
dec
push
pop
stos
xchg
call
clc
push
fwait
in
sub
arpl
repnz
jge
dec
call
fidivr
xor
cmp
(bad)
div
adc
ficom
es
aad
aad
rcr
pusha
mov
cmp
add
sub
pop
iret
jb
sar
push
dec
popa
push
ins
sbb
xor
push
aad
inc
xchg
dec
xchg
cmps
jmp
retf
stos
ret
imul
push
mov
out
cmp
mov
pop
pusha
sbb
je
and
add
sub
repnz
add
and
pop
enter
fistp
mov
outs
enter
cmp
sub
test
scas
push
test
xchg
mov
pop
add
xor
push
jo
mov
add
outs
test
sti
imul
retf
inc
push
in
xor
push
out
loopne
loope
test
out
mov
es
retf
xor
and
adc
push
dec
push
push
das
sbb
mov
ret
jbe
repnz
inc
retf
jns
sbb
dec
gs
retf
cmp
xor
in
cmp
sbb
aam
sbb
arpl
fadd
add
(bad)
mov
push
das
fwait
jge
adc
pop
adc
call
pop
test
cs
xor
pop
jmp
cmc
ror
call
hlt
(bad)
scas
xor
dec
jp
xchg
push
fst
cs
icebp
aam
int
loope
hlt
pop
adc
or
pop
sahf
into
fld
cmp
adc
mov
inc
iret
cld
in
inc
jle
and
(bad)
ds
out
mov
pop
std
scas
sbb
and
not
jae
pushf
test
stc
into
mov
inc
test
int3
pop
push
in
push
push
ins
scas
les
pop
and
xlat
sahf
lock
mov
dec
popf
adc
push
add
retf
pop
clc
or
cmps
loopne
dec
test
inc
ror
sahf
shl
and
or
inc
add
mov
jge
sub
in
or
lock
or
inc
add
jno
xor
add
imul
movs
xor
xchg
mov
pop
addr16
in
cmp
out
(bad)
outs
fwait
and
hlt
popa
aas
pop
sub
test
rcr
and
out
loope
mov
mov
dec
cs
adc
push
ret
neg
pusha
pop
xchg
xchg
sar
mov
pop
jle
lods
movs
aaa
in
inc
cmp
mov
cld
cmps
adc
dec
dec
call
hlt
push
aam
push
aam
cmc
sbb
data16
jmp
addr16
xor
xlat
fcomip
nop
enter
les
loope
das
pushf
dec
cld
add
mov
je
mov
popa
in
mov
mov
shl
cwde
lock
and
adc
dec
adc
mov
es
into
pop
adc
stc
xlat
add
sub
movs
cmp
mov
inc
call
mov
add
into
or
test
popf
out
test
loope
inc
pop
dec
fiadd
mov
push
add
pop
jb
repz
fwait
loopne
push
xchg
aad
in
pop
sbb
(bad)
mov
sbb
mov
rep
or
cdq
jne
jmp
fimul
mov
sub
les
std
push
jns
xchg
out
cmp
push
es
outs
xchg
push
inc
lahf
xor
bound
addr16
stos
stos
cmp
call
cdq
and
and
cli
fsubr
dec
mov
lods
xor
mov
add
pushf
shl
movs
ficom
push
mov
mov
pop
cmp
jo
je
or
cmp
xlat
stos
test
cdq
fnstenv
das
dec
leave
jge
nop
xor
out
rol
inc
push
int3
out
jmp
addr16
add
jo
mov
call
div
pop
pop
mov
sbb
ret
in
mov
inc
in
mov
retf
jmp
xor
adc
ins
xor
aas
mov
pop
(bad)
pop
pop
sub
xor
and
jns
sbb
add
or
pop
add
fidiv
addr16
icebp
push
ins
lods
pop
aas
out
push
and
mov
inc
dec
add
out
das
sbb
int3
sbb
sub
fst
out
pop
popa
icebp
dec
fld
mov
repnz
arpl
nop
add
jle
and
jb
sbb
add
test
fdivr
ds
aas
retf
mov
dec
mov
pop
(bad)
adc
(bad)
jecxz
aam
into
add
sbb
or
ins
inc
ins
xchg
and
(bad)
jecxz
push
mov
and
lods
inc
and
(bad)
call
out
out
(bad)
xlat
mov
test
and
adc
pop
movs
stos
ds
sbb
xor
xor
push
push
imul
xchg
dec
sub
sbb
mov
es
outs
(bad)
aam
xchg
dec
jo
add
cli
sbb
or
cmc
jecxz
jns
rcr
(bad)
push
test
push
popf
pop
or
nop
jecxz
or
bnd
imul
in
cs
xchg
xchg
cs
aas
pop
adc
cmp
es
imul
or
xor
icebp
data16
inc
int
push
jns
ins
das
pushf
mov
daa
adc
xor
push
mov
sbb
xchg
mov
dec
add
not
mov
mov
es
add
inc
cmp
call
daa
mov
pusha
pop
and
jne
stc
out
sbb
dec
ins
test
jnp
popf
iret
daa
fcom
stc
or
iret
pop
mov
sub
jge
cmps
sbb
xchg
push
mov
lahf
pop
mov
lods
fsub
call
leave
or
xchg
cwde
push
and
shl
pushf
sub
out
dec
jnp
mov
or
jbe
(bad)
xor
adc
or
shl
cwde
cli
pop
adc
dec
js
test
jp
mov
mov
inc
pop
les
test
aam
pushf
xchg
cmp
fcom
xor
mov
clc
sbb
mov
mov
push
aas
add
lea
jnp
rol
fbld
(bad)
adc
fcmove
cmps
stc
mov
jp
(bad)
bound
cmp
push
cmps
adc
arpl
ds
jmp
xchg
cmp
jg
(bad)
push
aaa
loop
adc
in
test
mov
jp
xlat
mov
dec
cwde
push
mov
fist
out
nop
je
mov
repnz
jno
add
cld
add
shl
popf
nop
xchg
push
sub
dec
scas
sub
in
lock
icebp
(bad)
jns
sbb
(bad)
sub
fcmovbe
cmp
xlat
mov
test
jbe
leave
ror
ud2
leave
xchg
(bad)
pop
push
and
pop
and
and
rcr
xor
loopne
adc
cmps
dec
jne
stos
push
les
rcl
mov
ins
nop
sub
leave
mov
pusha
jmp
ret
fdivrp
iret
loope
fldcw
cmp
mov
out
add
push
pop
cdq
test
cmp
rol
add
movs
jmp
shl
sbb
push
int
and
mov
int
add
leave
sbb
loop
mov
mov
jae
loopne
inc
xor
jb
add
xchg
adc
mov
jae
pop
test
outs
add
lea
inc
xchg
out
imul
fsub
outs
mov
pop
mov
or
mov
jle
lods
push
es
add
out
mov
outs
push
int
addr16
repz
jae
imul
out
imul
cmc
push
add
jg
xor
and
lock
sbb
rol
mov
xor
pushf
jb
mov
idiv
js
fwait
daa
mov
jb
cmc
ds
push
imul
mov
xor
aas
cmc
rcl
std
fbstp
imul
xchg
add
lock
adc
xchg
cs
cmp
into
iret
and
and
inc
jne
mov
pusha
pop
inc
in
aas
pop
(bad)
xlat
sar
push
pop
dec
or
cmp
stos
outs
xor
cwde
(bad)
cmp
fnsave
je
xor
in
fdivr
xor
mov
xchg
xor
pop
test
push
das
lahf
or
pushf
mov
pop
clc
dec
call
imul
dec
pushf
nop
les
mov
or
jge
mov
xchg
call
mov
cli
sub
loopne
out
xchg
stos
lock
adc
push
mov
stos
pop
jg
adc
mov
out
mov
sti
or
in
push
adc
inc
js
inc
and
sbb
dec
mov
jne
es
sub
jl
int
mov
(bad)
mov
and
sahf
hlt
jne
fist
daa
test
sbb
cs
lahf
mov
fs
nop
mov
jecxz
out
movs
jle
pop
push
out
loop
lods
mov
lds
enter
lahf
adc
jnp
out
xlat
call
inc
pop
jecxz
jbe
shl
out
mov
inc
mov
jo
mov
popf
stos
data16
sti
push
or
adc
mov
loope
pop
fbld
push
lahf
adc
sub
fimul
dec
adc
add
and
sub
aad
jmp
sbb
retf
inc
mov
in
test
(bad)
jg
iretw
movs
mov
(bad)
mov
test
bound
jmp
loopne
or
dec
mov
pop
retf
ret
and
dec
cmp
cmps
idiv
retf
(bad)
cwde
int3
cmp
jbe
pcmpeqb
inc
jecxz
loopne
sub
sbb
jno
stc
xlat
(bad)
jle
hlt
add
repz
mov
lods
xchg
and
aam
sbb
les
loopne
sub
inc
call
xchg
out
xor
add
add
add
int3
jbe
inc
push
jnp
popa
aad
aam
and
and
sub
out
xchg
mov
sar
in
cmp
int
test
add
mov
mov
dec
cmp
hlt
call
aad
add
mov
mov
loop
xchg
sahf
loopne
mov
dec
loopne
cmc
xchg
add
xchg
cwde
xor
push
ret
mov
pop
jmp
jbe
pop
add
outs
push
dec
out
rcl
sahf
jl
sub
jmp
push
popa
ja
test
repnz
xchg
sti
hlt
pop
lods
cmc
mov
sub
or
inc
sub
mov
(bad)
xor
fcmovnu
test
(bad)
mov
into
cmp
enter
imul
push
cwde
cmps
(bad)
fs
outs
mov
mov
ret
push
or
pop
cmp
mov
jge
outs
cmp
iret
stos
inc
popf
mov
mov
jle
cmp
cdq
cdq
mov
mov
retf
jl
loopne
sub
cmc
pop
xchg
(bad)
fs
push
outs
out
fistp
(bad)
cdq
push
xor
push
xchg
inc
sub
jmp
jp
dec
cmc
or
and
xchg
sub
fwait
pop
fcomp
dec
imul
js
fcom
jae
mov
test
icebp
pop
dec
jle
inc
sbb
sahf
push
nop
sub
xchg
(bad)
mov
addr16
sub
stos
scas
push
mov
jno
jne
out
test
sysexit
adc
lea
cmp
cmc
add
cmps
xor
mov
and
jge
jns
adc
psllq
pop
adc
ss
push
test
sar
hlt
push
imul
in
int
xor
and
mov
imul
fild
rcr
inc
add
in
mov
mov
cmp
(bad)
jl
pop
and
scas
loopne
popf
or
mov
push
adc
cmp
inc
out
push
push
or
sbb
ins
repnz
sbb
push
xchg
mov
fsub
cmp
and
pop
sbb
sbb
(bad)
push
mov
popf
or
jb
cdq
jmp
or
pop
sti
out
sahf
mov
cli
mov
(bad)
cdq
mov
jle
push
xchg
xor
js
adc
out
xchg
fld
popa
cmp
je
popa
add
jae
test
mov
mov
mov
add
sar
ret
pop
add
push
push
daa
mov
divps
lea
mov
jecxz
mov
adc
jmp
dec
icebp
and
lock
pop
dec
ret
outs
adc
sbb
jb
aam
aam
add
data16
jne
pop
fcom
js
cmp
(bad)
push
xor
in
pop
mov
sbb
xchg
in
xor
mov
sbb
stos
push
arpl
stos
(bad)
fadd
xchg
leave
push
sbb
mov
jne
mov
cmp
cmp
xor
push
cmc
leave
cwde
test
in
stos
xor
cmp
adc
imul
xchg
iret
mov
ret
push
pop
lahf
(bad)
fiadd
leave
xor
imul
jns
xor
mov
adc
jg
rcr
movs
nop
or
jl
sbb
lock
test
inc
(bad)
adc
repnz
cli
pop
adc
movs
out
aam
push
dec
rcl
and
add
xor
cmp
sub
push
test
test
fdiv
dec
sub
loop
xchg
pusha
sbb
es
rcr
pop
addr16
stos
mov
fisttp
dec
xchg
test
out
mov
fs
adc
push
sub
lods
test
xchg
xor
iret
lock
xchg
imul
add
inc
aad
push
xor
add
(bad)
push
jmp
scas
add
ret
loope
push
fldenv
out
push
adc
mov
sahf
mov
xchg
or
or
lods
scas
out
jno
adc
jp
inc
push
je
lahf
fxch
add
inc
jmp
ret
cli
scas
or
inc
sub
jne
pop
inc
cmp
xor
hlt
addr16
int3
mov
bound
mov
ins
jmp
mov
das
push
cdq
outs
pop
inc
test
jmp
icebp
adc
sbb
scas
pop
sbb
cld
and
mov
xchg
adc
in
cdq
fild
std
cdq
jp
enter
imul
dec
arpl
js
xchg
loopne
mov
(bad)
push
ins
data16
mov
xor
push
xor
jecxz
ja
jne
add
and
jne
outs
push
jno
mov
or
ficomp
push
push
ret
psrlw
mov
mov
cmp
imul
iret
sbb
lock
mov
lock
push
push
out
sub
lds
dec
fsubr
jp
push
leave
stos
cli
cmp
and
jg
dec
test
ins
dec
add
inc
add
retf
test
push
jp
cmp
aad
mov
fs
fwait
(bad)
shr
add
repz
adc
jmp
ss
adc
lods
enter
or
sub
idiv
mov
sub
in
data16
fs
push
aam
jl
jle
out
xor
out
pushf
cmps
sub
xor
outs
mov
out
cmps
out
lahf
jbe
(bad)
sahf
(bad)
jge
pop
outs
mov
shr
cwde
cmp
cld
adc
stc
sti
sbb
inc
fisttp
sti
and
dec
adc
mov
adc
scas
xchg
mov
cwde
pop
and
dec
ins
inc
movs
movs
push
loope
gs
jno
scas
jmp
and
in
adc
fwait
and
sbb
and
xchg
jbe
shl
sti
dec
jge
jmp
loop
or
repnz
imul
jg
test
and
and
(bad)
mov
pop
sbb
ret
add
add
ins
mov
push
hlt
sub
mov
pushf
sahf
pop
and
leave
mov
xor
repz
jmp
pop
jo
fs
pop
lock
push
lock
adc
hlt
or
nop
mov
and
pop
push
data16
pusha
ror
inc
jns
sbb
dec
push
adc
outs
xchg
sahf
(bad)
cmps
jle
push
jnp
outs
test
jecxz
jns
cmp
int3
data16
mov
sub
adc
in
jp
jle
(bad)
lock
mov
cmp
mov
xlat
(bad)
lea
lock
push
sub
inc
adc
call
pop
mov
pop
sbb
(bad)
adc
cdq
xlat
jg
inc
mov
inc
jb
xlat
dec
ret
mov
inc
dec
adc
lock
in
loop
in
daa
adc
(bad)
push
sub
jb
scas
jb
mov
mov
and
adc
inc
outs
pushf
push
out
and
inc
fld
adc
wrmsr
mov
add
mov
adc
sbb
sub
cmp
inc
and
push
mov
mov
push
sub
or
movs
jbe
retf
xor
iret
pandn
or
sub
dec
inc
xor
add
cmps
mov
dec
aas
lods
xor
inc
iret
loop
pushf
stos
mov
aad
dec
push
aad
imul
test
stos
push
add
pop
sbb
scas
fidivr
ins
js
inc
fild
mov
xchg
(bad)
and
xor
jnp
inc
daa
jp
shr
add
aas
lahf
and
adc
mov
test
leave
and
pop
retf
push
xor
fldcw
inc
inc
lock
imul
add
sbb
xchg
sub
xor
std
stc
inc
adc
jl
xchg
push
sub
cmp
lahf
fcom
ret
adc
xchg
fs
rcl
pop
mov
jl
cmp
(bad)
mov
xor
sar
inc
fs
sahf
or
mov
hlt
and
push
sub
shl
rcr
add
jge
cmp
rcr
out
inc
loope
in
sub
sub
retf
xchg
scas
lods
sbb
loopne
lods
int
in
bound
mov
dec
jle
jno
out
push
dec
(bad)
dec
sti
adc
and
pop
inc
sahf
jle
push
fimul
or
(bad)
and
out
test
js
push
movs
call
xor
rol
pusha
(bad)
push
cmc
push
test
xchg
dec
les
in
mov
jno
scas
xor
pop
int
test
loope
ficomp
frstor
jmp
test
cmps
sbb
out
cmp
(bad)
jge
aas
adc
frstor
dec
lds
hlt
je
ret
push
jp
push
retf
shl
jle
jne
fs
mov
pop
cmp
inc
pop
xchg
(bad)
ja
inc
sub
and
inc
arpl
loope
xchg
lods
inc
repz
fiadd
jnp
or
aaa
sub
popf
mov
into
xor
pop
out
test
and
mov
sbb
and
xchg
dec
js
out
mov
cdq
cmps
loop
jb
pop
cmp
in
ja
call
jmp
inc
in
inc
mov
scas
inc
adc
cli
sti
lahf
in
(bad)
cmp
imul
cmp
and
stos
mov
or
xchg
pop
(bad)
dec
stc
aam
jo
enter
sub
cld
jg
fsub
jmp
mov
pusha
add
test
or
popa
fild
fcmovbe
out
imul
imul
cs
xlat
push
rcl
cmp
dec
stos
mov
scas
loope
call
pop
push
int
mov
je
retf
add
xchg
mov
bound
dec
jmp
dec
and
push
mul
and
pop
inc
mov
call
rcl
mov
rol
call
or
fdiv
jg
adc
and
xor
out
test
gs
cli
jno
cmp
mov
cli
stc
mov
jbe
fldenv
rol
aas
stos
sub
jbe
scas
mov
dec
sti
jl
cli
pushf
jmp
or
scas
jnp
push
or
jo
adc
or
xor
and
lods
mov
movs
xchg
jo
add
stc
sbb
xor
sub
out
fs
add
arpl
popf
pop
push
(bad)
sbb
movs
dec
and
inc
dec
pop
or
arpl
mov
test
xchg
stc
jle
xchg
pop
add
in
mov
test
sbb
ficomp
pop
adc
ror
and
out
repz
cdq
sub
or
arpl
push
imul
es
loopne
shl
jge
mov
cmps
xchg
push
jno
xchg
(bad)
cwde
push
cli
enter
scas
cmc
hlt
and
cmp
add
xchg
stos
mov
or
outs
jp
xlat
ins
xor
loope
cmps
jmp
inc
cmc
rol
cmps
mul
sub
popa
mov
push
sub
jae
xchg
add
pusha
jmp
dec
fcmovnb
das
and
cmp
mov
sub
cmp
inc
cmc
inc
jnp
ds
jno
es
jne
mov
enter
ins
pop
gs
fsubr
hlt
sbb
aas
in
inc
xor
test
pop
sub
jne
cs
sub
or
sahf
ins
xor
sbb
cld
enter
push
adc
lock
push
cli
dec
mov
add
inc
sbb
addr16
ds
fnstsw
fcom
sub
add
adc
sub
ja
test
popa
movs
sub
xlat
cld
cmp
sub
and
pushf
fbstp
xchg
xchg
or
cmp
outs
sub
dec
inc
iret
popf
push
ins
mov
mov
ins
mov
lock
shl
xor
pop
xor
in
in
cld
sbb
push
lea
mov
test
mov
pop
js
ins
outs
pop
push
icebp
xchg
call
push
in
mov
jge
adc
lds
xchg
mov
push
in
fstp
and
or
push
(bad)
cmp
push
ss
fwait
pop
add
push
push
mov
es
sub
imul
iret
push
jne
mov
pop
das
and
sub
test
retf
fs
sbb
(bad)
repnz
push
aas
fdivr
or
iret
inc
in
cmps
fcomi
int3
rol
jne
stos
adc
add
(bad)
jmp
sub
test
fidivr
mov
and
cmp
pusha
pop
cmp
test
xor
jg
in
test
xchg
(bad)
fdivr
xor
adc
xchg
(bad)
lock
je
xlat
and
push
xchg
movs
fs
dec
retf
mov
test
adc
jge
and
dec
fs
nop
dec
sub
jg
dec
add
xor
pop
sahf
jnp
adc
and
and
movs
cmp
mov
push
lods
ret
iret
lea
mov
loop
(bad)
ins
ficomp
enter
mov
dec
les
jb
mov
mov
sbb
adc
sub
aam
sub
or
or
fcomi
sub
push
mov
push
arpl
stc
adc
jmp
cmp
cmp
frstpm(287
icebp
(bad)
xor
jge
cmp
inc
loopne
data16
sub
cmps
pop
iret
dec
jns
mov
mov
pop
inc
fidiv
sar
les
std
sub
jmp
mov
xchg
outs
pop
jecxz
mov
arpl
and
jge
sub
(bad)
call
dec
push
add
or
sub
add
neg
add
xor
add
inc
adc
test
sub
std
pop
jge
icebp
fist
dec
cmp
sub
adc
popf
jmp
shl
mov
mov
push
lahf
adc
imul
mov
xchg
xor
mov
test
xor
enter
fidivr
in
jl
aaa
stc
fdiv
xor
rcr
rcr
mov
loop
or
(bad)
pushf
dec
test
xor
cmp
jge
and
inc
push
popa
pushf
test
std
scas
add
ds
dec
std
ds
nop
mov
imul
mov
xchg
inc
jno
js
xchg
popf
(bad)
jmp
pushf
imul
cwde
lods
(bad)
out
movs
(bad)
jmp
and
jno
ins
mov
dec
retf
pop
xor
dec
(bad)
aaa
mov
mov
test
jl
ret
push
stos
mov
ret
sahf
xchg
stos
mov
inc
xchg
xchg
xor
pop
loope
repz
dec
mov
push
mov
ja
gs
ins
jno
jno
hlt
mov
pusha
sub
or
sar
dec
inc
pushf
js
jbe
aaa
push
pop
call
mov
jb
adc
pop
dec
adc
or
gs
aad
jle
jno
call
jle
push
mov
scas
xor
add
jbe
cld
icebp
xor
mov
mov
jg
jne
idiv
inc
in
rcr
and
ins
out
sahf
jns
out
push
cs
mov
xchg
sti
pusha
(bad)
and
cmp
call
adc
in
popa
or
(bad)
je
ret
sub
loope
pusha
clc
sbb
loop
inc
add
jns
jmp
addr16
mov
clc
aas
leave
in
lea
(bad)
stos
loopne
mov
int
adc
and
sub
inc
aad
daa
mov
inc
push
ds
in
xchg
mov
mov
dec
fdiv
pop
sub
xchg
fnsave
gs
xlat
pop
mov
xor
jecxz
push
imul
in
xor
imul
in
imul
imul
cdq
mov
fidivr
in
ret
sti
mov
mov
pop
push
mov
aas
push
xchg
or
cmp
xchg
mov
or
repnz
arpl
call
and
pop
ss
sbb
in
xor
retf
dec
leave
ficomp
jmp
lea
nop
add
out
xor
ret
pop
clc
cwde
cmps
xlat
in
jp
outs
addr16
cs
in
mov
mov
xchg
loop
push
gs
out
push
push
sti
pusha
stos
sub
in
mul
out
inc
and
bound
fwait
mov
pop
iret
enter
pop
cmp
lods
(bad)
push
adc
mov
cmp
nop
iret
add
pop
dec
cmp
retf
xor
movs
adc
fwait
jo
add
ds
fld
fstp
xchg
stos
movs
push
push
cld
sub
sbb
xor
js
sbb
xchg
push
test
push
aad
in
loope
push
cmp
sbb
sar
popa
cmp
loope
cld
pushf
mov
pop
add
inc
lea
inc
lock
mov
push
mov
xchg
sub
and
iret
push
repz
es
test
xor
xor
sahf
jb
pop
mov
mov
adc
int3
mov
inc
leave
mov
(bad)
mov
mov
push
pop
ds
inc
je
mov
mov
xchg
repnz
add
lods
retf
inc
mov
adc
bound
pop
ret
call
push
je
or
mov
out
mov
lea
jl
jl
loope
lahf
dec
jnp
jge
(bad)
mov
mov
add
jae
loope
(bad)
aad
sbb
enter
mov
out
repz
jnp
cld
jmp
cld
pop
mov
dec
jg
inc
sub
pusha
fnsave
dec
pop
sbb
push
push
xchg
fcomi
ret
xor
cmp
pop
out
call
sub
mov
imul
or
adc
popa
or
les
data16
push
lock
pusha
push
push
test
jo
movs
xchg
dec
jae
mov
aaa
jmp
shr
test
xor
and
or
pusha
jmp
adc
pop
pushf
inc
mov
ror
enter
xor
movs
jmp
daa
mov
(bad)
sti
out
movs
sar
inc
ficom
retf
loope
jae
(bad)
fidiv
ror
fwait
push
sahf
or
loopne
sysenter
mov
retf
ret
shl
add
mov
mov
lahf
in
cmp
inc
cmp
mov
and
mov
xchg
popa
mov
xchg
rcr
mov
icebp
cdq
iret
je
aam
retf
rcr
dec
out
stos
xor
mov
add
outs
aaa
sub
adc
jmp
xor
ja
and
cs
es
xor
jo
adc
enter
inc
mov
(bad)
outs
and
xor
push
dec
fcomip
pop
adc
xor
mov
mov
repz
loopne
cmps
je
sub
sbb
xchg
mov
out
mov
ds
retf
inc
ret
push
hlt
inc
(bad)
push
imul
sub
mov
leave
add
pop
sbb
push
adc
cmp
adc
add
loopne
adc
lea
cmps
loopne
inc
into
cmp
pusha
push
mov
das
arpl
aad
fild
add
push
and
add
rol
aas
adc
movs
aaa
fnstenv
lock
jmp
pop
adc
mov
aad
lahf
sbb
sub
xlat
cmp
adc
or
dec
mov
outs
fadd
xor
xchg
pop
leave
sar
iret
or
inc
out
push
in
pop
in
fsubp
and
pop
mov
sbb
sbb
in
inc
(bad)
out
outs
ins
jae
mov
push
inc
jecxz
enter
pop
xlat
add
mov
or
xor
shl
clc
dec
inc
mov
xchg
mov
pusha
sbb
fxch
xchg
rcl
cmp
dec
xor
nop
sub
mov
and
mov
outs
dec
mov
pop
rcl
sbb
addr16
jbe
adc
jns
cmp
loop
and
jl
fbstp
xor
xchg
call
(bad)
cmc
add
fsubr
out
or
mov
icebp
mov
ins
sub
test
sbb
mov
mov
add
lea
and
arpl
call
mov
es
push
sti
in
mov
data16
test
std
dec
ss
addr16
jp
lock
rcl
sbb
adc
inc
int
popa
pop
add
xor
lods
jns
push
fld
jmp
xchg
daa
ins
les
xchg
das
mov
push
xchg
pop
pop
lods
dec
push
mov
push
lods
std
lods
lahf
cmc
jge
push
push
add
test
adc
jmp
xor
add
les
jl
(bad)
push
(bad)
mov
xor
loope
mov
inc
ss
lea
sbb
lahf
adc
(bad)
and
call
mov
rcr
xchg
ret
jae
jae
mov
in
mov
dec
inc
and
mov
mov
sub
and
sahf
sub
inc
rsm
out
pop
cmps
sbb
std
aad
jo
arpl
ss
sub
fsubr
pop
push
cmps
test
adc
aam
sbb
enter
inc
dec
push
cmp
or
mov
inc
dec
mov
mov
push
pop
xor
push
cs
mov
test
sub
cwde
movs
scas
test
retf
jmp
popf
jo
jo
dec
sub
ins
dec
(bad)
sti
push
and
test
nop
sub
int3
ret
xchg
(bad)
(bad)
lock
sbb
aas
xor
jne
and
das
adc
ds
cs
xchg
sti
pop
outs
(bad)
das
inc
lods
xchg
jnp
or
fsub
cmp
fs
jmp
or
push
jo
push
or
lds
mov
and
stos
out
push
sub
adc
mov
sub
test
mov
mov
(bad)
pop
cdq
ret
inc
mov
jp
sub
mov
aas
movs
cdq
sbb
pop
or
in
jmp
mov
mov
inc
push
adc
xor
rcr
bound
je
call
xchg
adc
lea
sbb
inc
imul
cmps
inc
pop
mov
sti
call
hlt
ret
(bad)
mov
sbb
mov
mov
call
mov
xchg
jae
dec
out
rcl
or
inc
in
xchg
xchg
call
sar
xor
ds
mov
xchg
lods
retf
retf
movs
pop
fmul
(bad)
xchg
mov
out
repz
sar
aad
push
dec
pop
jg
jne
lods
mov
movq
lahf
or
push
iret
or
or
(bad)
adc
test
xor
in
or
pop
jle
mov
or
push
(bad)
sahf
mov
xor
jbe
pushf
nop
jg
retf
aam
or
mov
jmp
outs
rcl
rol
pop
stc
jge
(bad)
jle
jmp
fwait
aaa
call
sub
lahf
sti
and
out
and
xchg
int3
daa
cmc
int
(bad)
adc
loope
and
cwde
or
xor
sub
inc
lods
out
shr
(bad)
retf
jbe
xor
out
cmp
mov
cmps
fist
fild
xor
test
popf
add
jbe
mov
cmp
int
and
dec
and
out
ret
push
pop
adc
adc
das
std
xor
call
lock
fs
and
sbb
pop
jmp
inc
xchg
xor
mov
loopne
in
push
push
push
mov
add
sahf
cmp
aad
sbb
sub
add
div
jno
mov
xor
jmp
popf
jnp
repnz
in
jmp
mov
aad
mov
in
jno
push
sub
cmc
out
add
test
mov
dec
loop
inc
mov
leave
inc
(bad)
xor
bswap
or
xlat
xlat
movs
enter
xor
enter
fldcw
mov
fs
(bad)
xchg
pushf
cmp
fwait
jno
(bad)
push
and
inc
jmp
addr16
mov
in
adc
int
and
push
mov
sub
add
out
dec
mov
cmp
push
xchg
fiadd
jns
je
xchg
push
mov
add
pop
inc
imul
out
scas
jl
pop
(bad)
jl
jp
and
mov
and
jbe
fld
imul
add
push
aaa
dec
fnstenv
movs
mov
or
sbb
mov
cmps
jle
(bad)
dec
inc
push
push
sbb
mov
bound
cs
dec
int
mov
cmps
push
push
mov
xchg
or
imul
test
sub
(bad)
mov
mov
(bad)
fcmovne
rcr
xor
dec
aas
rol
dec
sub
mov
lods
pop
push
pusha
xchg
sti
or
jle
mov
ins
mov
fild
sub
and
rcr
or
cmp
mov
xor
mov
sub
jmp
mov
mov
or
hlt
jp
imul
ins
aam
mov
nop
cli
addr16
(bad)
cmc
push
repz
div
inc
mov
stos
cmp
(bad)
mov
push
int
cmp
pop
pusha
fild
(bad)
jge
ins
add
(bad)
adc
pop
fwait
push
js
jp
daa
xor
in
cmp
add
inc
pop
fs
jmp
(bad)
cmc
test
and
and
and
cdq
and
repz
xchg
sbb
jnp
xor
aas
sar
out
add
test
popf
push
loope
leave
jg
aaa
fwait
rcl
adc
push
add
cld
adc
jmp
jae
mov
int3
push
jg
mov
mov
jnp
inc
gs
test
or
mov
ss
aam
mov
jl
inc
jle
pop
bnd
enter
push
shl
cld
gs
je
std
lods
int
sar
fisub
and
jp
adc
add
test
addr16
enter
fadd
inc
out
sbb
daa
mov
(bad)
pop
out
cs
and
adc
dec
aam
and
rcr
and
adc
add
adc
and
mov
and
sahf
out
lds
adc
cmp
sub
pop
or
push
pushf
jecxz
mov
jbe
push
mov
add
enter
pushf
xchg
dec
xchg
fisttp
scas
mov
iret
adc
sbb
adc
mov
imul
push
iret
fpatan
bound
sbb
xor
and
(bad)
sti
cdq
or
sbb
xchg
lock
ror
and
push
inc
cli
pushf
xadd
jne
xor
shr
lock
fwait
ins
push
xlat
dec
and
test
pop
shr
outs
sahf
into
xlat
push
loope
jp
pop
cmp
inc
inc
dec
push
loop
sub
es
pop
cmp
mov
call
(bad)
std
sahf
ins
xchg
jg
addr16
cmp
pop
mov
add
cli
jl
loope
mov
aas
inc
cmc
jmp
aad
ret
mov
mov
mov
cmp
push
dec
stos
add
xchg
push
dec
loope
add
sbb
jae
movs
jmp
and
add
sbb
mov
scas
push
(bad)
out
inc
xor
int3
je
dec
push
push
pop
mov
(bad)
push
icebp
hlt
or
lods
push
inc
jle
mov
xor
test
neg
push
movs
jle
or
ret
push
xchg
sti
in
enter
(bad)
xchg
loope
pop
pop
inc
cmps
cmps
pop
rcl
test
cli
fcom
pop
test
add
mov
retf
sub
popf
imul
push
ds
into
imul
jbe
jae
sbb
and
fwait
iret
sahf
mov
xchg
outs
std
add
js
stos
icebp
or
fcom
and
adc
adc
nop
sahf
dec
loopne
mov
in
pop
stc
cmps
xor
mov
cmp
icebp
pop
sbb
xchg
imul
fs
mov
lods
dec
mov
std
inc
clc
jmp
out
enter
fisttp
bound
add
inc
jl
add
fisubr
add
outs
fisub
sub
sbb
arpl
xchg
and
bound
pop
int3
jno
jp
and
sbb
cwde
jmp
stc
add
xchg
inc
ss
movs
jno
bound
push
dec
int
lds
jo
or
sub
adc
jae
push
jl
pushf
(bad)
in
imul
test
gs
pushf
jp
(bad)
and
cmps
cmp
scas
push
inc
fidiv
je
in
and
xor
stos
cmc
daa
mov
mov
push
inc
mov
das
jns
gs
push
stos
in
mov
adc
in
in
imul
mul
jge
sbb
jo
cmp
adc
adc
mov
mov
cmp
push
xchg
pusha
stos
in
adc
dec
fsubr
xchg
pop
sbb
sub
mov
jecxz
stos
or
addr16
cmp
mov
sub
inc
lods
pusha
in
add
adc
push
dec
in
mov
xchg
pop
repnz
out
mov
fisubr
outs
inc
adc
xchg
xor
pop
fwait
and
cli
int3
pop
mov
xchg
jns
jns
outs
and
test
pop
mov
xchg
call
in
inc
retf
pop
ds
jb
shl
leave
jmp
pop
adc
in
xor
test
mov
mov
call
or
aad
fs
outs
inc
out
das
fimul
fcom
jne
sbb
adc
xchg
int
mov
jmp
call
addr16
add
fwait
pop
repnz
ins
mov
mov
int
imul
es
or
lods
stos
stc
fldcw
add
adc
push
sub
xor
cwde
jmp
dec
and
and
ja
ret
mov
sbb
sub
aaa
sub
test
xor
add
(bad)
retf
pushf
fs
std
jnp
and
push
xlat
movs
cmp
stc
adc
xor
adc
mov
mov
mov
pop
jge
jo
inc
sbb
ret
popa
jno
aas
cli
jg
pop
sub
(bad)
ss
pop
test
mov
in
cld
sti
fs
push
xchg
jae
mov
xor
out
outs
adc
sbb
mov
aam
mov
out
mov
pop
out
fbld
inc
and
jb
ins
shl
xchg
inc
dec
addr16
xlat
mov
pop
(bad)
bound
stc
mov
adc
dec
fs
dec
mov
and
test
mov
data16
jge
xchg
in
mov
data16
sbb
scas
fld
cs
not
jl
stos
jmp
out
aas
lahf
xchg
sbb
mov
out
jl
vmread
cmp
pop
jno
(bad)
push
jns
(bad)
pop
scas
sub
rol
outs
push
inc
cmp
pop
dec
into
imul
mov
repnz
das
mov
and
ins
dec
sub
xor
or
addr16
push
jecxz
imul
sbb
sub
adc
fs
int
lods
mov
jno
mov
cmp
jmp
mov
das
jmp
clc
std
inc
cmps
jge
test
push
ret
sbb
daa
pop
mov
inc
sbb
pop
dec
sahf
sbb
xchg
aad
add
lea
cmp
stc
(bad)
cmp
push
jg
aam
inc
sub
xor
popa
lods
test
loope
shl
les
cld
lds
mov
mov
jge
and
test
fs
mov
mov
mov
daa
jge
pop
sub
ins
inc
push
rcr
push
push
inc
cmp
(bad)
out
push
dec
xchg
jb
aaa
movs
or
sahf
jnp
inc
pop
add
inc
scas
fidiv
mov
stos
iret
hlt
gs
sahf
mov
arpl
xchg
jge
cmp
mov
xor
dec
push
fwait
mov
jge
dec
and
and
pop
xchg
iret
xor
xchg
xchg
add
mul
add
sahf
ret
or
push
fmul
adc
aaa
movs
int3
scas
xchg
cmps
xchg
aam
mov
dec
fild
ja
retf
add
mov
retf
retf
cmc
stos
mov
in
pop
dec
mov
adc
add
js
or
sar
cdq
inc
xor
mul
dec
push
pop
mov
ins
ss
out
jp
div
(bad)
out
iret
pop
sub
ret
push
addr16
fwait
dec
or
mov
mov
mov
imul
sahf
xchg
imul
adc
and
cdq
pop
rol
cmc
mov
stos
ds
inc
addr16
lock
mov
and
loop
cdq
mov
stos
xlat
imul
dec
pop
inc
or
push
mov
pop
cmc
jne
xchg
(bad)
arpl
add
ins
sbb
lock
popa
inc
xchg
test
push
push
mov
(bad)
pop
mov
outs
lds
je
popa
das
loope
outs
mov
jne
addr16
jmp
xbegin
dec
or
ret
cmp
xchg
cmp
jl
add
int
mov
xor
aaa
add
inc
and
(bad)
out
mov
jo
leave
add
aam
out
xor
hlt
adc
and
arpl
test
sub
inc
daa
cmp
or
mov
sbb
es
ins
ja
adc
push
test
mov
jns
mov
cmp
cdq
out
sahf
jmp
lahf
xchg
adc
(bad)
imul
inc
stc
inc
imul
enter
retf
jnp
or
push
ret
nop
sbb
hlt
pop
xchg
ret
in
sub
in
ins
inc
and
stc
call
dec
test
and
jl
gs
movs
cmp
aaa
das
stc
mov
inc
scas
inc
sahf
std
fsub
in
pop
daa
dec
push
push
mov
out
and
inc
cmps
aaa
mov
rcl
xchg
arpl
retf
fcmovnb
into
(bad)
iret
jg
movs
jne
jle
push
rol
sbb
inc
or
add
adc
xor
imul
lods
scas
cmp
cmps
cmc
jecxz
sbb
push
and
inc
aam
pop
sub
xchg
dec
jle
fisub
push
lods
movs
mov
cmps
jne
cmp
fidiv
sbb
xchg
ins
sahf
xor
cmp
arpl
fisub
ret
jmp
mov
mov
imul
jg
jno
mov
and
inc
sbb
retf
fsub
push
(bad)
push
jbe
cmp
pop
outs
inc
push
call
xlat
std
mov
cmp
xchg
sbb
fisub
cmps
cmp
stos
mov
in
jns
lds
mov
imul
daa
out
mov
out
fld
adc
dec
lods
loope
test
call
xchg
out
sbb
sbb
dec
cmp
mov
or
fcomp
dec
ja
cmps
mov
stos
mov
push
shl
push
lods
cmps
sar
jg
icebp
pop
inc
jp
(bad)
mov
or
inc
outs
cwde
arpl
mov
cmp
jle
(bad)
mov
xchg
mov
jae
in
int
jbe
pop
cmps
test
sbb
xor
push
adc
jge
ja
int
xor
fsincos
sub
aam
retf
pop
sbb
nop
mov
loop
adc
mov
stos
xor
dec
sbb
sub
pop
sahf
mov
xchg
leave
add
in
ret
adc
xchg
xor
mov
addr16
rol
stc
jo
or
leave
loopne
inc
test
inc
jmp
fdivr
aam
pushf
out
push
push
mov
ret
xor
lods
shl
xchg
cmp
inc
std
dec
enter
retf
pop
out
push
dec
and
retf
inc
clc
add
fstp
int
adc
dec
adc
xchg
(bad)
jns
lock
test
xor
sbb
in
pop
mov
mov
sub
ds
push
int3
inc
sti
out
push
adc
or
pop
xor
push
fbld
iret
cs
cmp
ja
ds
push
mov
mov
push
test
lods
(bad)
mov
in
psraw
mov
fimul
xchg
loopne
and
cmps
loopne
mov
loop
push
xchg
out
pop
imul
(bad)
aas
das
dec
jecxz
mov
pop
sub
inc
fwait
mov
out
mov
aaa
sahf
outs
test
mov
jae
bnd
scas
mov
aaa
dec
xor
cmp
inc
pop
scas
and
xlat
sti
repnz
out
test
je
in
push
adc
mov
iret
pop
lea
or
jmp
adc
xchg
shr
or
cdq
(bad)
jp
pop
pop
xchg
push
fs
sbb
cdq
sub
out
inc
cli
outs
cmc
jge
add
mov
push
mov
xchg
push
mov
and
push
sub
cmp
and
add
std
nop
jno
mov
fwait
into
sti
sbb
mov
ret
int
cmp
xor
lods
sub
aam
xchg
aam
push
stc
ds
inc
xchg
sub
xchg
xlat
xchg
dec
mov
outs
mov
push
(bad)
xor
push
jo
or
or
ror
sbb
lods
sub
ins
and
int3
jne
inc
mov
mov
push
and
fnop
mov
(bad)
mov
sar
pop
xor
gs
(bad)
repnz
mov
repz
mov
or
push
mov
adc
retf
push
arpl
test
loopne
mov
jmp
pop
popa
popa
arpl
adc
call
nop
sbb
and
and
shr
sbb
mov
mov
fcom
dec
ficom
jne
xlat
jg
xchg
pusha
out
mov
clc
adc
dec
add
adc
sbb
cmp
xchg
call
mul
fwait
test
mov
jae
cwde
push
sahf
add
mov
bound
lods
movs
stos
enter
dec
aas
jne
ins
jnp
cmc
or
push
adc
mov
fwait
out
movs
mov
sub
sub
cld
sub
test
cdq
push
adc
dec
pop
lods
push
mov
xor
bound
(bad)
xor
test
test
pop
outs
rcl
pop
icebp
jno
(bad)
mov
xchg
(bad)
fnstenv
xchg
retf
mov
mov
(bad)
push
inc
jl
(bad)
lods
cmp
scas
rol
sub
nop
cli
pop
retf
test
int3
mov
retf
mov
xchg
sbb
mov
adc
mov
in
lods
movs
outs
cmp
jne
jo
aaa
das
pusha
sti
cmc
sti
adc
(bad)
ds
loop
ret
aam
cli
dec
mov
popf
add
xor
enterw
cmp
push
retf
popf
adc
ds
(bad)
jbe
stos
js
xchg
aam
fsub
cmp
imul
push
mov
mov
ins
cmp
inc
adc
loope
dec
xchg
jo
xor
pushf
fdiv
mov
in
xor
fadd
xchg
push
and
add
sbb
pop
mov
and
(bad)
movs
mov
xor
fiadd
lock
mov
das
rcl
bound
leave
and
repnz
pop
push
enter
pop
loopne
(bad)
icebp
daa
adc
les
aaa
push
lods
out
test
xor
mov
mov
pop
iret
(bad)
clc
add
mov
ror
fs
lahf
sbb
push
aaa
(bad)
push
cmps
pop
clc
pushf
pusha
test
jge
push
sti
sti
enter
fistp
push
bound
ret
pop
dec
stc
jbe
pop
lods
scas
add
enter
pop
test
neg
jno
mov
adc
pop
inc
fs
gs
icebp
add
mov
inc
pushf
imul
jmp
pop
or
jne
cdq
sub
ja
pushf
icebp
sbb
dec
xlat
sbb
push
jbe
inc
(bad)
popa
test
and
jbe
inc
sub
loopne
sub
pusha
daa
sub
stos
int3
mov
mov
out
xchg
cs
retf
pusha
mov
dec
jecxz
shl
mov
xor
aam
scas
dec
retf
or
sbb
mov
test
retf
inc
lea
xlat
in
repnz
bnd
push
in
push
lock
dec
cmp
adc
dec
in
dec
call
imul
add
mov
jne
push
dec
cmp
mov
mov
retf
or
inc
add
retf
fxch
ror
or
lds
fst
adc
sahf
clc
add
adc
and
(bad)
mov
or
pop
cmp
dec
add
add
cmp
dec
xor
cmp
(bad)
mov
push
mov
push
adc
pop
ins
aad
add
in
stos
popa
aaa
(bad)
pop
xchg
outs
icebp
sbb
mov
mul
cmp
sub
inc
fistp
pushf
pop
ja
mov
xor
int
(bad)
aad
scas
setle
(bad)
mov
cmp
int
jmp
inc
ds
push
or
xor
pusha
repnz
adc
out
popa
sub
and
div
mov
xchg
neg
movs
push
mov
sbb
out
jo
imul
and
mov
mov
jge
loop
pop
(bad)
ins
jnp
add
(bad)
sar
out
les
jb
data16
and
xor
fiadd
jns
add
jmp
loopne
or
jno
fdiv
cwde
mov
mov
adc
fsubr
lods
mov
dec
jbe
push
push
jae
xchg
push
shr
aaa
xchg
into
loope
cmp
repnz
(bad)
and
xor
mov
cmp
pop
adc
loope
jmp
push
adc
pop
in
push
enter
lea
int3
outs
xchg
ficomp
pushf
mov
sub
add
push
lahf
or
aaa
mov
pop
ror
test
cmp
(bad)
pusha
std
aaa
test
dec
xchg
xor
repnz
shr
lods
xchg
adc
xor
jmp
daa
bswap
sub
mov
xor
(bad)
shr
fldcw
mov
fwait
in
dec
scas
mov
inc
mov
sub
pop
jl
push
arpl
push
cs
fcomp
jns
cmp
jnp
fld
aas
into
neg
stos
xchg
pop
nop
call
push
adc
sub
xchg
nop
xor
test
or
mov
xor
sbb
std
movs
dec
push
or
add
(bad)
pop
push
cmp
xchg
test
shr
add
cdq
inc
mov
cmp
push
js
sbb
push
out
or
xchg
imul
outs
repnz
xor
sbb
stos
loope
push
ss
inc
movs
mov
stc
rol
cmc
push
test
pop
or
cmc
dec
(bad)
fnstcw
ror
inc
mov
add
call
popa
mov
out
or
dec
icebp
jno
mov
and
mov
iret
rol
add
(bad)
retf
movs
dec
xlat
xchg
inc
out
call
pop
pop
jl
repnz
int3
das
(bad)
pinsrw
in
outs
aad
mov
pop
pop
dec
imul
mov
pop
pushf
cli
or
cmp
jp
mov
ja
pushf
push
leave
inc
fisttp
shr
pop
mov
lahf
retf
in
and
adc
cs
xchg
jnp
xchg
adc
aaa
or
adc
icebp
sbb
lock
mov
push
fcmovb
sub
xchg
and
ins
aad
stos
mov
lock
jmp
lea
adc
xchg
arpl
xadd
nop
inc
data16
dec
adc
and
jmp
aad
gs
sbb
mov
and
inc
xor
jo
aad
bound
jns
aaa
push
jmp
xchg
push
call
xchg
push
pop
hlt
outs
cld
aad
xchg
or
jg
xchg
daa
push
dec
shr
and
mov
int3
jns
mov
inc
adc
fcomi
loop
retf
stos
jnp
in
add
push
mov
mov
out
mov
js
ror
pusha
(bad)
inc
inc
xchg
es
shl
cmps
popf
icebp
dec
dec
push
xchg
fdivr
mov
push
cmp
mov
or
shr
pusha
xchg
or
ds
jmp
push
(bad)
dec
repnz
es
nop
pop
clc
xor
ret
adc
loopne
call
push
add
push
adc
popf
or
popf
shl
stos
xchg
js
or
scas
pop
pop
repz
stc
enter
inc
jecxz
inc
test
(bad)
jecxz
inc
jnp
sbb
outs
(bad)
pop
xchg
lea
outs
adc
and
mov
cmp
fmul
sbb
loope
mov
or
xchg
and
mov
push
xchg
xor
sahf
mov
push
popf
or
push
xchg
loopne
jl
(bad)
lods
dec
mov
cmps
and
fild
cli
mov
out
jne
stos
daa
mov
hlt
cmc
add
imul
mov
test
pop
sar
jbe
rol
test
(bad)
pop
or
outs
fcomp
dec
cmp
aas
push
rcl
ins
cmp
jmp
imul
retf
pusha
fs
ret
ins
js
add
pop
pop
bound
jl
cmp
sti
movs
dec
in
pop
push
push
mov
cwde
mov
out
fisubr
sbb
or
inc
in
gs
pop
ins
mov
pop
sub
xchg
sub
push
cmp
push
fwait
idiv
mov
push
adc
mov
mov
xchg
fist
adc
xor
sbb
pop
pop
xor
jmp
adc
daa
popa
fimul
mov
xchg
xchg
test
mov
iret
les
shl
icebp
add
dec
pop
shl
add
test
pop
push
dec
or
add
lds
adc
call
loop
aad
into
xchg
dec
fcmovnb
call
shl
mov
xchg
sbb
cmps
sub
ins
sub
push
lock
sbb
jae
fcmovbe
xlat
aam
mov
jle
pop
fdivr
adc
push
dec
imul
shl
mov
out
inc
clc
fucom
es
or
sub
lds
cmp
popa
push
push
add
jno
stc
fs
push
or
push
cmc
(bad)
pop
test
mov
mov
xchg
mov
push
jno
sbb
push
stos
xchg
idiv
sbb
jne
pop
(bad)
fst
xor
in
pop
repz
mov
int3
add
mov
mov
sub
gs
xor
sub
aad
inc
xchg
xchg
xor
mov
mov
(bad)
lods
inc
and
hlt
mov
jae
mov
in
xor
adc
aam
jle
pop
adc
jp
out
call
push
mov
adc
call
std
and
push
jbe
rcl
and
jl
cs
cmps
adc
loopne
call
push
mov
cmp
and
std
inc
or
fmul
jmp
sar
out
test
leave
and
aaa
sub
shl
inc
lahf
push
ret
arpl
or
xchg
iret
(bad)
mov
pop
bound
bound
sbb
clc
int3
dec
loop
dec
xchg
xor
xlat
adc
and
movs
push
je
sahf
pop
(bad)
lea
push
push
loope
or
mov
mov
nop
jo
icebp
push
push
mov
cmp
shl
lds
rcl
mov
shr
lods
jecxz
lock
inc
sub
ror
daa
mov
dec
cmps
dec
sbb
outs
mov
inc
jne
inc
adc
out
pop
aas
js
(bad)
pop
cmp
dec
enter
out
inc
hlt
or
ins
stc
(bad)
dec
sbb
cmps
push
cli
pop
jp
bound
lods
and
cwde
inc
(bad)
das
xchg
fwait
and
push
mov
sti
jns
cmp
cmp
(bad)
sbb
inc
out
repz
cmc
sub
mov
jns
inc
xchg
out
pop
movs
ret
and
jne
les
add
arpl
dec
repz
add
out
cdq
push
push
adc
jae
mov
push
or
xor
inc
push
sbb
cld
arpl
outs
fs
cdq
inc
test
jo
fist
pop
call
inc
sbb
xchg
cwde
jo
sub
cwde
data16
xchg
add
out
call
je
sub
mov
outs
pop
adc
je
mov
mov
jge
jp
cmps
mov
add
add
add
outs
pop
aad
in
dec
xchg
fist
push
out
cmp
inc
aaa
jmp
movs
pop
dec
push
dec
cmc
bound
inc
fstp
xor
add
int3
mov
leave
cmp
dec
shl
pop
xor
mov
or
pop
fistp
movs
and
icebp
cmp
inc
dec
paddsw
scas
dec
test
ret
test
sub
call
mov
js
(bad)
xlat
icebp
dec
(bad)
pop
fisttp
and
arpl
push
es
adc
mov
cmp
bound
lods
push
das
jg
or
mov
fisttp
(bad)
xchg
ror
stos
cmc
in
push
inc
or
sbb
test
add
mov
scas
fidiv
loopne
inc
xchg
lea
mov
test
or
pop
(bad)
lods
add
ror
adc
popa
and
jo
xchg
in
pop
or
add
xor
adc
mov
repnz
xchg
mov
in
(bad)
mov
in
mov
sub
cwde
icebp
push
mov
pop
jae
jmp
add
call
pop
push
push
adc
gs
xor
test
add
mov
pop
data16
adc
pop
and
test
(bad)
push
xor
lds
xchg
leave
jg
icebp
jecxz
out
add
lds
adc
int3
xchg
dec
dec
mov
arpl
xchg
cdq
fsub
lods
push
mov
mov
or
ins
pop
js
(bad)
push
mov
add
je
and
popf
dec
sub
je
and
jge
in
clc
add
add
mov
inc
or
js
add
lds
and
xchg
jecxz
mov
sub
cli
in
loopne
pop
mov
sub
test
(bad)
cmp
jp
sbb
es
das
fmul
jne
push
mov
xchg
daa
jns
sub
jns
sar
mov
mov
mov
mov
mov
sbb
mov
adc
jle
mov
add
jb
mov
lds
jmp
and
and
and
xor
mov
xchg
jmp
fwait
mov
push
push
pop
mov
call
fwait
test
xchg
call
adc
fadd
xor
sbb
ret
out
int3
or
mov
shr
jns
jg
adc
xor
pop
outs
push
sti
mov
push
iret
sub
xchg
out
fdivr
mov
mov
pop
xor
xor
mov
or
js
jns
jae
retf
repz
mov
xchg
outs
jno
inc
mov
pop
mov
ffreep
iret
push
lahf
jnp
(bad)
pushf
mov
xor
cmp
outs
xchg
int3
aaa
ret
cmps
popf
dec
or
test
pop
std
xchg
adc
xor
stos
xchg
push
(bad)
in
test
sar
cli
call
rol
aas
sbb
cmps
icebp
aaa
das
popf
and
inc
test
cdq
inc
add
push
loopne
rcl
and
sbb
lods
leave
jns
mov
lods
into
loopne
push
out
mov
in
push
push
sub
xor
scas
fstp
push
or
int3
mov
lock
push
add
mov
outs
jae
cmps
xor
ret
clc
fcmovne
jmp
lock
inc
into
dec
leave
movs
sbb
adc
fs
das
mov
pop
ffreep
test
mov
fcom
fwait
inc
mov
jmp
add
mov
push
(bad)
out
adc
xor
jg
or
lds
popa
xor
mov
repz
pop
out
fisttp
jb
not
not
stos
push
mov
pop
sub
and
ja
shl
outs
mov
fmul
adc
lods
sbb
push
pop
inc
and
(bad)
push
and
jge
mov
mov
fadd
movs
and
int
rcr
xchg
xchg
mov
std
mov
cld
ret
xchg
inc
stos
out
data16
cs
icebp
mov
mul
jns
adc
mov
aaa
jl
push
push
push
mov
jne
push
ins
cdq
push
sar
outs
xchg
pop
jns
xor
or
nop
xor
push
std
and
movs
cs
in
mov
push
imul
push
inc
adc
jge
aam
les
inc
adc
pop
mov
jecxz
(bad)
adc
or
cdq
cmc
shl
(bad)
jecxz
or
std
cmp
movs
fiadd
mov
or
and
lods
xor
mov
xchg
ficom
hlt
mov
cmp
adc
inc
(bad)
test
retf
inc
pop
aad
adc
cmps
jmp
adc
pop
loopne
jmp
pusha
mov
into
cmp
gs
scas
fs
hlt
mov
arpl
int
mov
inc
dec
add
xor
push
sbb
xchg
je
pop
call
jp
push
and
push
mov
stc
or
or
ret
jnp
pop
xor
lahf
loopne
xor
mov
cmc
stos
fwait
push
or
and
repnz
test
leave
add
loope
sub
jmp
iret
retf
sub
ret
or
stos
icebp
lods
test
(bad)
scas
(bad)
ja
push
mov
dec
mov
lock
int
xchg
dec
int3
or
aas
adc
test
jnp
pop
js
mov
scas
shr
icebp
ss
pop
sub
mov
lods
mov
cdq
sub
ins
mov
shr
xchg
mov
repz
mov
dec
fimul
ds
dec
add
sbb
mov
and
adc
dec
imul
mov
popf
ins
push
pop
ficom
mov
inc
mov
cld
jle
cmp
popf
adc
out
cmp
jnp
aam
jl
jg
lea
and
mov
data16
mov
sub
retf
add
fdivp
jno
inc
mov
inc
enter
cmp
sub
movlps
add
ds
ss
cmp
cmp
fcomp
lock
fild
enter
(bad)
je
and
je
in
outs
pop
outs
shl
(bad)
std
add
cs
push
dec
jbe
jmp
popa
cmp
and
jmp
std
or
mov
and
xor
mov
lahf
mov
cmp
mov
xchg
mov
mov
jmp
cmp
inc
fbstp
cli
mov
cmp
stc
inc
sub
gs
push
jns
shl
sub
sbb
shl
(bad)
jo
imul
lea
imul
lods
out
pop
xor
(bad)
call
and
push
mov
push
ret
lods
mov
mov
fst
push
pusha
push
or
adc
scas
cli
jmp
psrlw
pop
mov
sub
imul
sbb
mov
add
mov
sub
ror
mov
outs
popf
cmp
daa
cmps
aad
mov
mov
fisubr
xchg
(bad)
rcl
jmp
jmp
fbld
sub
pop
jge
mov
(bad)
retf
xchg
fisttp
sub
add
aaa
mov
xor
sub
push
outs
cmp
inc
movs
jl
cdq
call
movs
shl
xor
pop
pop
mov
or
mov
dec
xchg
sbb
xchg
into
(bad)
lea
movs
xchg
dec
popf
pop
out
push
pushf
jle
cmps
ja
(bad)
lods
xchg
pop
imul
xor
pushf
sub
cmc
cmp
jle
ror
pop
sub
mov
es
push
scas
jnp
cs
cli
test
push
xchg
cmps
out
nop
mov
pusha
cmp
sub
mov
data16
(bad)
xchg
cmp
pop
stos
jae
popa
shr
loope
js
jge
retf
and
and
pop
xchg
enter
mov
icebp
clc
fadd
push
ss
pop
iret
jb
outs
and
adc
out
and
push
rol
adc
pop
out
scas
fild
sub
retf
push
push
xchg
mov
shr
ds
push
xor
inc
test
sbb
add
jle
pop
xchg
into
out
xchg
inc
push
inc
rcr
push
cli
rol
in
sbb
cmps
ins
push
call
xlat
js
push
nop
jmp
ja
fs
push
daa
adc
mov
jnp
fs
into
sub
jnp
adc
mov
jmp
dec
push
test
pop
out
ins
pop
cld
(bad)
fcomp
pop
into
adc
xchg
neg
xor
movs
pop
mov
mov
jnp
loope
test
lods
dec
ds
jb
jl
es
cmp
outs
and
add
dec
retf
in
jmp
mov
xchg
sub
nop
dec
pop
imul
cli
jae
mov
popw
xor
mov
push
pop
icebp
xchg
dec
fucom
cdq
ret
aad
jmp
mov
or
shl
push
add
jg
jp
mov
mov
push
add
out
ja
cmp
jmp
adc
mov
lea
jns
jg
jmp
sbb
adc
lds
push
mov
push
std
daa
jo
sbb
jb
add
push
dec
stc
into
push
or
pop
mov
xchg
test
xchg
jp
xchg
cmc
mov
push
mov
daa
jnp
or
lea
sub
xchg
xor
bound
jmp
jae
fdivrp
mov
clc
hlt
iret
neg
not
pop
sub
inc
inc
and
or
mov
sbb
stos
xchg
jge
pop
ja
cmps
enter
pop
add
fsubr
sub
js
or
movs
jp
mov
js
fcomi
cmps
xchg
jno
xor
mov
mov
repnz
inc
ins
mov
pop
pop
push
cmc
adc
xlat
and
stos
sbb
and
in
xchg
aas
sti
dec
cmp
mov
add
xor
ss
jb
xchg
in
fistp
pop
sbb
stos
cmp
add
mov
push
cmps
sbb
push
idiv
scas
or
fs
sbb
shr
popf
lds
idiv
sub
ret
and
inc
shl
xchg
jg
psraw
jg
mov
mov
pop
dec
sbb
pop
xor
pop
mov
push
js
adc
nop
in
mov
dec
jp
cwde
cmp
mov
ret
les
adc
mov
dec
in
mov
push
fiadd
or
cmps
adc
dec
mov
sbb
imul
cmp
lea
jbe
pusha
stc
inc
dec
data16
push
and
cmps
and
add
fwait
loope
jb
mov
or
xlat
enter
scas
ficomp
jns
adc
mov
jnp
fcom
jge
test
pop
icebp
mov
pusha
stos
(bad)
fwait
stc
not
mov
cmp
push
xor
push
and
fnstenv
mov
push
cdq
gs
scas
jns
mov
sbb
push
inc
dec
xchg
mov
mov
pushf
je
mov
push
movs
fs
sub
lock
pop
cli
(bad)
adc
inc
std
pop
inc
adc
fimul
mov
outs
mov
scas
fistp
adc
cmps
sti
and
xchg
call
jmp
out
sub
enter
imul
aaa
lock
push
in
(bad)
(bad)
cs
rcl
test
mov
test
and
mov
cwde
aam
loope
dec
adc
mov
pop
mov
mov
shl
xchg
cwde
push
jno
test
movs
les
push
and
lock
lds
fild
inc
out
pop
lods
(bad)
loopne
xor
mov
push
call
into
scas
or
pop
std
hlt
sub
rcr
pop
jle
div
mov
xchg
xchg
push
pop
push
push
inc
fsub
out
arpl
mov
test
xor
(bad)
fnsave
pusha
es
mov
daa
lods
call
xor
mov
fwait
daa
fistp
sub
pop
cmp
push
fimul
push
loopne
mov
add
sub
pop
jnp
movs
push
xor
cmps
sbb
ficom
cli
sbb
add
into
sub
fmulp
and
repnz
imul
cwde
jle
fsin
push
repz
test
fucom
ja
retf
add
shl
arpl
leave
jmp
add
push
nop
adc
mov
data16
je
sub
push
add
mov
stc
push
out
inc
cmp
cmp
sbb
jmp
int3
adc
dec
imul
test
sbb
test
inc
rcl
jl
cs
cli
aam
std
sbb
pop
mov
pop
rcl
fsub
lods
in
add
lea
mov
in
shr
addr16
mov
mov
inc
cmps
icebp
(bad)
jmp
mov
(bad)
inc
mov
les
sub
pop
dec
mov
and
dec
push
call
inc
dec
jp
mov
call
xchg
or
mov
inc
pop
pop
push
ficomp
leave
outs
test
sub
ret
mov
arpl
and
rcr
cmp
sbb
inc
popf
lahf
mov
adc
cmp
gs
inc
dec
loop
jl
inc
fild
sbb
push
or
push
mov
ins
not
inc
loope
js
xor
out
std
das
test
push
test
pop
out
mov
sbb
cmp
push
movs
sbb
shl
out
sbb
inc
cli
mov
or
ds
fsub
stos
fisubr
push
mov
pop
fs
out
sbb
out
mov
dec
lods
neg
in
test
jbe
jge
test
gs
les
mov
adc
mov
pop
push
movs
shr
ror
loop
sbb
push
hlt
shr
dec
shl
mov
sbb
aad
inc
dec
or
jo
rcr
mov
bound
test
call
hlt
jg
xchg
adc
enter
mov
loopne
sbb
add
push
test
xor
ret
inc
test
adc
ins
out
push
and
mov
jmp
mov
fdiv
ja
mov
or
call
fcom
daa
sub
sbb
movs
movs
mov
daa
sbb
or
xor
or
fcmovnb
fdivr
test
hlt
sti
jle
and
leave
sub
vsubpd
scas
dec
inc
push
mov
dec
pushf
dec
inc
mov
stos
push
out
xor
mov
int3
retf
das
jnp
test
movaps
(bad)
sbb
pop
inc
cmp
jge
push
cld
pop
out
cli
dec
inc
jno
dec
leave
push
leave
ja
stc
xchg
or
stc
push
pop
or
lea
pop
xor
mov
xor
jge
stos
sub
lahf
mov
mov
xlat
jge
(bad)
adc
(bad)
(bad)
mov
fs
push
out
inc
and
or
inc
dec
hlt
scas
add
pop
out
imul
mov
mov
fs
sbb
test
ins
and
shl
lahf
outs
into
lods
call
xchg
add
jns
mov
sub
int
jle
imul
fidiv
push
and
push
dec
dec
pop
movs
dec
mov
and
inc
int
in
pop
mov
in
push
add
jle
sti
sbb
pop
inc
or
cmp
clc
sub
adc
cdq
cld
cmps
lock
sub
aaa
inc
xor
adc
retf
xchg
outs
mov
enter
mov
aas
mov
lods
cmp
ror
cld
(bad)
fdivp
mov
xor
xchg
test
(bad)
xchg
push
or
cli
mov
ret
cmp
or
and
inc
lods
jb
enter
push
mov
dec
xchg
std
shl
and
inc
add
cmp
(bad)
mov
jbe
or
dec
push
or
inc
in
(bad)
dec
test
mul
mov
sbb
xchg
cli
ja
pushf
xchg
jge
out
and
jo
pop
jmp
sbb
adc
cmps
out
dec
fiadd
out
push
ja
in
mov
std
retf
jp
fiadd
add
test
fmul
sbb
adc
adc
std
add
push
ret
scas
scas
dec
push
adc
(bad)
in
in
sbb
pusha
sub
and
ror
cmps
pop
cmp
ret
(bad)
cmp
outs
cmp
xchg
and
xchg
out
ins
shl
pusha
adc
adc
push
loope
xchg
pop
sbb
mov
fisub
int3
fdivr
pop
pusha
cmp
fdiv
sub
and
lock
movs
in
fcomp
shl
ret
pop
inc
mov
mov
test
xchg
jmp
add
(bad)
push
sbb
test
cwde
fdivr
pop
adc
call
push
addr16
mov
push
retf
nop
push
push
jg
adc
retf
ja
stos
dec
dec
push
jbe
sbb
or
enter
icebp
mov
loopne
xchg
enter
and
ret
out
inc
ficomp
fdivr
sahf
in
(bad)
enter
cmp
or
push
popa
or
mov
mov
ja
shl
(bad)
jbe
xchg
xchg
xchg
inc
es
mov
sar
lahf
shr
stc
jl
repnz
xchg
or
outs
mov
loope
test
or
jns
and
fisub
loop
in
dec
xchg
ins
and
cs
int3
call
inc
add
ds
adc
imul
mov
adc
cmp
fwait
cmp
mov
std
test
leave
push
bound
jecxz
mov
jmp
test
jnp
cmp
fucomp
movs
sbb
hlt
xchg
out
ja
inc
hlt
stc
pushf
(bad)
das
mov
pop
in
inc
jns
loope
pop
(bad)
jg
sub
sub
xchg
out
cdq
setb
clc
or
fwait
cdq
stc
sub
cmp
out
mov
sub
jae
imul
movs
and
sub
push
imul
push
mov
not
aaa
mov
lahf
cmps
adc
pushf
in
cli
cmp
sub
das
cmp
bound
data16
cld
push
mov
jo
mov
jnp
fwait
jp
movlps
(bad)
inc
(bad)
pushf
push
sub
stc
dec
je
imul
push
push
sub
pop
mov
xchg
adc
das
arpl
pushf
aaa
add
iret
push
test
fld
xchg
loop
loopne
or
addr16
out
ret
cmp
stc
pop
and
and
shl
(bad)
mov
mov
and
sbb
adc
cmp
jecxz
in
in
mov
push
cs
ja
mov
je
mov
mov
sbb
cmps
pushf
cmp
adc
adc
cmp
seta
inc
sbb
jg
dec
add
popa
cmp
cmp
out
jb
add
movs
mov
mov
fwait
and
fldcw
jge
popf
mov
lods
xchg
dec
add
data16
sbb
in
les
add
fild
jmp
(bad)
out
sbb
pop
mov
daa
push
shl
call
adc
sub
cwde
not
jle
xchg
jmp
adc
sub
push
cli
push
call
inc
cmps
adc
inc
fwait
cmps
icebp
pop
mov
or
mov
add
ins
int
cmovo
mov
dec
cli
sbb
mov
icebp
pusha
(bad)
and
sbb
sbb
pop
retf
push
out
and
cmps
push
mov
lahf
mov
sub
xchg
retf
adc
sbb
icebp
sub
mov
fidivr
call
pop
arpl
xchg
loop
or
xchg
push
cmp
pusha
sub
ja
adc
aam
inc
mov
lds
fnsave
push
push
mov
mov
add
inc
loope
nop
gs
inc
in
stos
nop
jno
test
xchg
mov
(bad)
test
dec
rcr
lds
push
ret
lods
cmc
lods
call
aad
push
or
popf
sub
icebp
mov
and
fwait
and
pop
rcl
and
stos
fidivr
ja
inc
mov
push
adc
in
idiv
xor
(bad)
cmp
xchg
inc
mov
shl
mul
mov
mov
mov
leave
push
stc
js
push
push
addr16
aas
add
out
data16
xchg
sti
fnstcw
shr
inc
sub
retf
inc
jnp
lahf
and
push
aam
outs
stos
fwait
cli
mov
sbb
cmp
jp
mov
outs
inc
mov
sahf
mov
jecxz
adc
cmp
daa
div
pop
out
hlt
lds
call
pop
dec
into
jmp
das
and
dec
cli
xchg
loope
pop
push
adc
cmc
in
popf
push
mov
sub
ficom
xlat
push
push
inc
in
jl
rcl
add
sub
jl
in
xchg
retf
jl
add
mov
shl
cwde
mov
mov
or
xchg
mov
push
fwait
dec
xlat
adc
mov
in
rol
mov
mov
popa
xchg
aad
pushf
xor
dec
imul
inc
es
xlat
loope
dec
pusha
test
lock
and
arpl
(bad)
(bad)
retf
push
add
push
mov
and
(bad)
fiadd
(bad)
jae
retw
sub
pop
xchg
(bad)
adc
retf
fcom
(bad)
enter
sub
in
pop
xchg
adc
adc
push
xor
cli
sar
sbb
ss
js
sbb
xchg
iret
ficom
or
out
or
pop
sbb
out
mov
add
sbb
rcl
mov
dec
shr
jbe
ins
xlat
lock
or
(bad)
sti
retf
or
and
or
push
push
dec
lea
int
mov
xchg
dec
cmp
movs
loope
mov
cld
sbb
ins
das
xor
pop
repnz
xchg
pop
and
jno
sahf
xchg
cmc
popf
xor
nop
arpl
iret
or
jl
in
or
dec
inc
iret
sub
outs
call
les
add
sbb
and
lahf
lea
clc
xchg
in
(bad)
cmp
call
fimul
mov
sub
adc
clc
sbb
add
inc
xor
push
mov
mov
add
ins
rcl
in
mov
test
test
cmc
xchg
stos
shl
cmps
scas
cli
test
mov
xchg
and
mov
fcom
xor
inc
cs
out
mov
jne
daa
fimul
out
add
(bad)
aam
repz
psllw
dec
(bad)
mov
ins
out
loopne
test
add
mov
cmp
sub
jmp
inc
mov
mov
inc
push
lahf
xor
loopne
outs
add
fnop
mov
arpl
ins
cmp
adc
lods
mov
nop
add
push
sub
or
nop
aaa
pop
xchg
and
push
imul
clc
mov
ret
mov
sti
xchg
jmp
push
ja
mov
stos
dec
cwde
aas
scas
push
repz
movs
inc
mov
int3
paddq
sbb
popf
xchg
adc
dec
jge
jns
retf
cmp
inc
or
sbb
ins
pop
mov
jns
int
js
das
data16
fs
ret
cmp
inc
shl
cmp
add
sub
push
mov
mov
out
lock
hlt
cmps
jle
xchg
pop
jo
cmc
add
into
dec
xchg
gs
push
js
mov
inc
pop
and
cmp
lods
and
pop
out
cmps
inc
(bad)
outs
mov
push
retf
push
mov
fadd
js
cs
dec
and
xchg
jae
repz
and
cdq
sti
adc
push
enter
lahf
mov
dec
xchg
outs
(bad)
jmp
mov
ja
shr
popf
and
mov
jmp
pop
out
loope
movs
lock
int3
lods
or
fbstp
data16
in
add
mov
cmps
jecxz
dec
sub
push
mov
lock
je
jnp
clc
test
imul
call
xor
in
ss
pop
arpl
cmp
jno
mov
xor
mov
lods
pop
shl
dec
mov
fxch
dec
por
cmp
mov
or
adc
jo
mov
ins
sub
(bad)
push
ror
cmp
sahf
ret
sub
cli
cmp
stos
xchg
outs
movs
bound
jl
loop
stc
hlt
shr
dec
inc
xchg
and
mov
sti
in
retf
push
int
enter
std
mov
mov
pop
cmp
cmp
scas
mov
jmp
push
ficomp
jmp
inc
push
sub
shl
sbb
adc
cmc
pop
ret
and
loopne
jo
add
pop
leave
cdq
mov
test
out
or
adc
in
fwait
icebp
test
out
rol
ret
cmc
pop
pop
or
mov
ins
dec
fcom
int3
(bad)
or
es
mov
push
mov
and
cmp
push
jge
scas
jge
jmp
pushf
push
inc
jnp
shl
fadd
out
pop
jne
sbb
jnp
dec
adc
loopne
scas
xchg
stc
adc
xor
jl
xor
jns
or
jbe
sbb
fmul
cld
aas
pop
or
je
xor
mov
imul
ds
(bad)
fidiv
xor
or
jne
rol
popf
stos
test
scas
adc
imul
adc
mov
shl
xchg
ss
test
push
je
xor
xchg
jno
xor
sub
leave
and
out
xchg
add
inc
push
add
pop
jno
push
lods
mov
in
push
add
call
mov
shl
add
aad
sub
push
ds
inc
pop
hlt
jl
(bad)
repz
je
(bad)
leave
mov
cmp
sbb
cmp
scas
jbe
push
pop
or
and
jmp
add
mov
or
mov
in
jo
call
(bad)
mov
imul
add
add
lods
and
sbb
xor
dec
lock
push
fdivr
push
aam
inc
mov
popa
mov
push
adc
outs
sbb
inc
pop
adc
and
sar
mov
mov
sub
mov
cld
push
and
das
push
stos
in
fs
repz
ror
sub
pop
and
sub
inc
push
stc
mov
loop
out
out
repz
dec
dec
cmp
dec
adc
jg
push
fsubr
pop
and
out
sub
push
nop
dec
add
fldenv
cmp
(bad)
add
je
inc
lahf
inc
fwait
sub
in
cs
push
icebp
movs
retf
cmp
(bad)
out
fdiv
dec
pop
pusha
cmp
mov
out
out
aad
cdq
cmp
mov
fadd
sbb
clc
repz
mov
cld
mov
aaa
unpckhps
sbb
loop
outs
pusha
adc
cmp
xor
xchg
mov
or
bswap
cmps
jmp
ins
(bad)
(bad)
ss
xor
in
nop
pusha
adc
enter
in
imul
push
mov
mov
out
push
mov
out
data16
int3
ja
push
cmps
pop
jmp
gs
call
jae
mov
xchg
add
push
lods
and
in
repnz
in
jmp
pop
mov
popf
add
ror
(bad)
icebp
std
loop
and
mov
out
push
into
sahf
fistp
jp
mov
inc
push
sub
add
dec
mov
jg
lds
in
dec
xchg
call
test
jae
jne
aad
mov
outs
jl
push
sub
cld
sbb
les
movsx
sub
mov
outs
xlat
push
clc
sbb
mov
inc
movs
add
popa
lods
mov
ds
fwait
mov
push
and
add
push
pop
jl
pop
retf
fcom
ret
cmp
out
mov
jecxz
pop
dec
mov
and
dec
nop
imul
mov
dec
or
ins
in
xor
cmp
push
jecxz
fsubr
(bad)
hlt
(bad)
mov
inc
mov
sbb
int
idiv
jae
retf
or
les
rol
outs
cld
inc
jmp
fldenv
iret
and
xchg
pop
es
jbe
xor
inc
dec
je
(bad)
jg
dec
mov
jns
imul
add
jmp
or
mov
add
cmp
mov
outs
or
loopne
adc
das
push
test
not
sub
mov
and
arpl
shl
mov
call
cmp
inc
pop
xchg
ins
pop
sti
mov
push
out
scas
test
fcmovne
lods
pop
inc
call
pop
mov
pushf
neg
sub
test
mov
mov
rol
mov
or
sti
call
(bad)
pop
je
sub
aaa
outs
frstor
dec
cmps
mov
pop
test
add
sahf
push
or
cmp
xchg
or
ss
xchg
xchg
push
xchg
inc
mov
stos
mov
jp
imul
push
dec
sbb
popf
pop
(bad)
out
jmp
jle
icebp
gs
stc
cmp
popf
loope
nop
mov
lahf
push
jnp
pushf
not
das
mov
mov
or
mov
les
mov
cmp
hlt
ins
nop
dec
push
adc
in
mov
test
scas
sub
sbb
jno
xor
pushf
or
xchg
ret
push
fadd
clc
push
movs
fwait
mov
mov
xor
aas
mov
pop
loop
hlt
mov
jecxz
imul
xchg
mul
(bad)
adc
aaa
icebp
mov
movs
add
pusha
test
in
jb
imul
(bad)
test
(bad)
xlat
adc
(bad)
fst
icebp
sbb
jl
shr
aaa
adc
dec
pop
inc
add
xchg
ins
mov
retf
dec
leave
jbe
dec
xchg
sar
mov
scas
div
or
add
cmp
push
xor
pop
je
inc
push
cld
push
push
dec
cmp
jns
ds
mov
inc
cmp
add
mov
adc
add
icebp
call
push
or
clc
stos
fistp
mov
jp
icebp
hlt
jnp
aas
cld
jns
sbb
xchg
sub
aas
iret
das
pop
xchg
xchg
add
jg
std
jno
xchg
jg
sbb
add
stos
add
xchg
adc
push
push
mov
stc
ss
movs
mov
mov
je
sbb
cmp
or
inc
ffreep
nop
(bad)
pop
pop
mov
ja
and
xchg
ret
sbb
cmp
daa
les
mov
mov
and
mov
loopne
jge
sub
mov
mov
jns
sub
cmp
icebp
push
cmp
adc
mov
and
pusha
(bad)
iret
ret
jnp
imul
jmp
mov
(bad)
fist
arpl
nop
push
mov
push
hlt
jno
mov
xchg
shr
test
repnz
es
mov
jne
pop
push
sbb
ficom
imul
imul
fsubr
enter
movs
pop
ss
in
cwde
icebp
xor
mul
ss
jns
jnp
xchg
inc
inc
jmp
test
pop
icebp
adc
and
pop
push
iret
cs
movs
lea
cld
outs
cs
cmp
jle
pop
je
rol
test
mov
adc
jno
lea
mov
aas
xor
aaa
xor
inc
enter
adc
cmp
aad
out
inc
xor
inc
jge
mov
cmp
leave
movs
sbb
sub
outs
cmp
sbb
(bad)
sub
adc
sbb
or
mov
cwde
dec
mov
(bad)
or
cli
out
nop
push
pop
jno
pop
push
add
dec
and
mov
mov
ret
push
sub
mov
push
pop
movs
ret
adc
push
unpckhps
fst
push
lock
adc
add
fstp
adc
hlt
or
nop
pop
sub
adc
jmp
sar
hlt
push
leave
into
push
stos
sub
into
jle
fstp
aad
inc
add
bound
iret
sub
scas
outs
sbb
mov
stos
loop
mov
mov
xchg
outs
mov
fist
in
cwde
gs
lock
mov
stos
xchg
hlt
xchg
cmp
push
inc
and
movs
popf
cmps
iret
fisttp
(bad)
test
(bad)
aam
mov
rol
cmps
mov
popf
repz
in
je
std
cmps
inc
test
sub
(bad)
mov
fistp
xor
clc
xchg
adc
push
dec
test
jge
jmp
xor
loopne
xor
mov
repz
sbb
pop
cmp
shl
icebp
mov
and
mov
xchg
stc
dec
jb
ss
fsubrp
fucomp
gs
pop
sbb
mov
mov
cli
xchg
sbb
sahf
iret
nop
sbb
jle
lahf
out
pop
rcr
dec
sub
mov
or
ins
add
adc
ret
movs
mov
pop
cmc
fs
fst
lea
xchg
xchg
clc
sbb
loop
imul
mov
ins
movs
mov
clc
popf
fld
add
(bad)
shr
inc
cmc
outs
movs
pop
inc
inc
pop
adc
fcmovnb
cmp
and
cmp
stos
ja
loope
inc
inc
xchg
imul
mov
addr16
jg
mov
and
bound
and
pop
adc
packsswb
popa
nop
out
aaa
shr
fwait
push
popa
inc
int3
(bad)
pop
pusha
ins
mov
in
push
adc
out
mov
leave
int
push
rol
xchg
ins
hlt
mov
xchg
int
adc
lea
xor
adc
daa
pop
add
xor
js
js
(bad)
ret
cs
cmp
aam
das
sbb
rol
sbb
and
or
js
call
cmp
test
mov
push
sub
push
pop
into
jbe
jno
sbb
jmp
jg
cmp
inc
sahf
ins
sahf
and
shl
mov
push
xchg
push
dec
cmp
xor
mov
mov
xor
in
mov
mov
mov
push
pop
mov
dec
pop
aaa
ror
xor
fadd
out
mov
pop
push
push
clc
rol
pop
fisub
sub
and
int3
paddw
dec
das
mov
(bad)
sub
int3
and
sbb
jbe
xchg
and
stos
mov
push
jae
pop
aad
jbe
dec
cmp
std
(bad)
scas
cmp
loopne
pushf
xor
cmps
mov
int
sahf
and
call
loop
movs
push
test
js
jmp
inc
sahf
in
pop
test
pop
sub
mov
idiv
jae
icebp
jns
pop
arpl
fisttp
enter
in
dec
test
mov
sahf
shl
ds
add
sub
adc
lock
shl
jecxz
pusha
cmps
or
int
fs
ss
je
data16
add
mov
push
sub
nop
mov
add
xor
js
mov
movs
fcmovu
lea
cmp
mov
movs
add
outs
les
mov
mov
add
fst
gs
add
push
adc
dec
pop
icebp
xchg
into
fwait
pop
sub
aaa
mov
dec
aam
enter
push
bound
xchg
popf
pop
push
and
pop
js
mov
xchg
and
arpl
mov
lods
fisubr
rol
mov
dec
sub
test
and
(bad)
(bad)
int
imul
inc
push
das
xor
mov
js
out
add
mov
jmp
jecxz
movs
push
mov
sub
outs
push
mov
movs
sbb
aam
fdivr
and
adc
or
mov
in
jg
sbb
(bad)
sbb
rcr
cs
in
movs
fdivr
jbe
jge
pop
cmp
popa
or
shr
sbb
sub
mov
xchg
mov
mov
(bad)
jns
jge
sbb
imul
mov
aam
jle
(bad)
(bad)
aad
inc
add
cmps
inc
push
or
and
cmc
loopne
call
add
ror
aas
or
mov
mov
outs
mov
jge
cld
adc
cmp
jns
pop
std
out
push
mov
fisubr
scas
outs
data16
(bad)
sub
and
jle
inc
push
mov
adc
and
xchg
xlat
pop
(bad)
out
aaa
xchg
pop
push
lods
loope
fstp
jns
loop
inc
mov
add
jecxz
iret
lods
lods
push
adc
(bad)
lods
sub
mov
mov
inc
(bad)
nop
mov
cli
cmps
pop
cld
outs
xchg
outs
mov
ins
cmp
add
xchg
mov
mov
dec
mov
inc
mov
cmp
and
pop
push
retf
xlat
mov
pop
add
clc
sbb
sbb
(bad)
xchg
add
test
fnstsw
movs
rcl
js
sub
addr16
sub
rol
mov
pop
icebp
sub
scas
xor
fcmovnb
mov
or
mov
sbb
ds
aas
(bad)
cmp
push
fcom
lea
sub
xchg
icebp
jmp
push
(bad)
or
loopne
test
repz
(bad)
pop
mov
or
adc
lds
pcmpgtw
push
cmps
je
mov
or
fcom
xor
sub
mov
in
pop
adc
adc
xchg
mov
shl
movs
push
(bad)
pop
jns
xchg
imul
movs
xchg
xchg
loope
es
xchg
dec
jg
in
mov
pop
push
int
add
icebp
xchg
int
scas
aaa
inc
pop
repz
xchg
mov
sar
xor
popa
(bad)
leave
test
jne
cmp
into
ret
sub
cmp
add
inc
xchg
adc
dec
push
push
shr
lock
mov
ret
pop
sub
xor
mov
inc
mov
inc
cmp
shl
jbe
ss
or
push
mov
je
jo
ins
popf
inc
pop
and
outs
cmp
imul
(bad)
sbb
push
mov
mov
cmp
mov
xchg
or
call
std
outs
frstor
stos
jge
inc
les
jne
mov
js
pop
neg
mov
in
leave
add
inc
aas
(bad)
mov
mov
adc
fstp
mov
mov
out
mov
xchg
ror
add
popf
cmp
cmp
jg
in
out
push
adc
dec
or
or
mov
out
daa
jecxz
xchg
sbb
jecxz
sbb
jbe
sbb
cld
test
dec
mov
and
mov
add
pop
jge
or
aam
push
cmp
mov
add
and
inc
gs
or
stos
mov
adc
mov
repnz
iret
sub
push
in
dec
push
add
(bad)
ficomp
ds
jnp
sahf
jb
sti
mov
les
xor
xchg
popa
cmp
jl
jp
fsub
and
pushf
shl
movs
adc
or
fwait
rol
push
and
mov
stos
(bad)
fadd
mov
arpl
pop
sbb
addr16
or
add
sar
ror
pop
sub
(bad)
push
push
dec
psubd
cwde
les
(bad)
cmps
mov
xchg
pop
jo
in
in
xor
and
popa
leave
lods
sbb
sahf
fucomp
cs
test
sbb
js
idiv
das
ss
pop
xor
cli
add
lea
push
xor
or
push
sbb
mov
inc
mov
add
mov
dec
jg
sbb
and
mov
les
push
pop
mov
push
int
(bad)
(bad)
add
test
jbe
mov
test
ja
or
cmps
lock
push
jp
adc
sbb
mov
fcom
in
imul
jb
jo
mov
aaa
or
add
scas
push
adc
or
clc
inc
xchg
or
lock
clc
fld
or
adc
adc
es
in
fnsave
cmp
xchg
xchg
leave
adc
ror
repnz
outs
dec
sub
cmp
fs
mov
and
fwait
or
clc
iret
out
push
cld
jbe
cmp
add
jl
mov
pop
jae
mov
imul
ins
shl
jmp
daa
lahf
(bad)
aam
test
leave
repnz
mov
(bad)
xor
or
(bad)
sbb
inc
inc
pop
(bad)
mov
or
or
mov
fadd
adc
mov
daa
xor
adc
lahf
jo
adc
adc
push
popa
sub
adc
mov
jne
ss
pop
out
test
pop
adc
sub
xchg
mov
fs
xchg
add
fadd
out
in
call
xchg
push
(bad)
pusha
mov
or
ds
pop
add
xchg
jge
mov
pop
stos
test
or
jbe
out
push
ret
je
inc
or
xchg
mov
dec
(bad)
cdq
cmp
sti
rol
add
pop
pop
mov
jg
gs
scas
jp
movs
pop
push
movs
arpl
shr
and
cmp
push
mov
aaa
or
dec
or
mov
pop
jne
lock
in
mov
and
mov
fwait
push
aad
popa
pop
repnz
jns
mov
nop
push
loopne
xor
idiv
iret
add
iret
mov
pop
mov
mov
ja
mov
je
cdq
scas
bound
add
outs
call
(bad)
push
mov
inc
mov
ret
pop
mov
and
lahf
test
jbe
retf
push
aad
pop
imul
jg
fwait
adc
jl
sub
cmp
retf
sahf
leave
call
xchg
jg
sub
in
add
mov
and
inc
aam
int3
fisubr
pop
sub
mov
rcl
into
or
call
and
es
sub
arpl
lds
sub
je
cmps
mov
hlt
shl
mov
jecxz
inc
jg
xor
les
sub
ins
mov
int3
adc
xchg
int
sub
cmp
push
in
lock
rcr
push
pushf
inc
sub
add
mov
arpl
cmp
mov
bound
mov
mov
pause
movs
icebp
cmp
pop
ficom
sahf
jnp
mov
push
fisubr
xchg
xchg
jns
rcl
mov
inc
lock
jmp
inc
mov
and
pop
jle
pop
xchg
loop
jno
cmp
into
xlat
popf
and
pop
mov
jb
test
icebp
mov
sub
jno
xchg
mov
cli
sub
adc
mov
jle
in
leave
hlt
jae
hlt
xor
mov
xchg
adc
push
jmp
aad
movs
(bad)
outs
push
shl
inc
(bad)
daa
cmp
jl
or
call
call
ins
sub
sbb
push
jne
mov
test
fcomp
push
add
jl
into
cmp
add
outs
lods
out
sbb
and
mov
inc
jns
aaa
paddsb
jmp
xchg
or
xor
dec
dec
mov
and
pop
sub
sbb
dec
dec
out
pushf
enter
dec
loop
sbb
mov
fmul
jbe
xor
lock
mov
pop
mov
js
imul
aaa
arpl
cmc
dec
fstp
adc
pop
ret
pop
data16
jno
pusha
jb
xor
pop
cli
pop
inc
pop
sub
aas
and
fwait
gs
(bad)
sahf
sbb
fwait
push
fwait
jl
add
cmp
mov
mov
xchg
(bad)
push
inc
jl
add
(bad)
mov
pop
push
pop
out
mov
popa
inc
movs
push
sbb
loopne
test
xor
and
out
xor
xchg
lahf
inc
jp
adc
xor
mov
dec
or
stos
xchg
xchg
ins
fsubr
pop
repz
aam
adc
call
(bad)
icebp
call
fst
ins
push
push
xor
scas
mulps
push
int3
gs
dec
pop
jp
or
ror
mov
call
shr
repnz
and
mov
out
add
mov
add
mov
mov
add
and
xchg
cld
ins
cmp
fadd
xchg
add
pop
es
xor
das
(bad)
jb
jne
lods
mov
pushf
ds
cmp
sub
xor
lds
mov
lods
sahf
jle
fcomp
mov
(bad)
fimul
mov
mov
add
or
std
push
mov
clc
mov
mov
add
pop
inc
push
cli
pusha
push
fdecstp
cdq
sub
imul
(bad)
bound
sbb
(bad)
in
jmp
fdivrp
cdq
imul
mov
jg
repnz
int3
mov
sub
pop
mov
or
mov
mov
stos
xor
clc
xchg
adc
pop
add
xchg
repz
mov
pop
rcr
add
xor
sar
jge
aaa
cwde
out
or
pop
inc
in
in
pop
movs
in
jb
arpl
sahf
jl
mov
hlt
cmp
in
mov
sahf
inc
in
ins
sub
push
add
sahf
mov
mov
dec
jo
sbb
aad
xor
adc
xchg
push
xor
rol
inc
fstp
mov
and
stos
cmc
mov
(bad)
stos
(bad)
ret
sbb
mov
test
mov
or
push
mov
mov
ret
add
xor
fnstenv
jmp
not
(bad)
sbb
retf
and
add
add
test
retf
adc
ins
push
nop
push
jmp
std
and
add
call
retf
daa
jmp
push
popa
pop
jg
mov
sub
mov
dec
test
xlat
jmp
cmp
mov
cmp
xchg
push
xor
into
sub
dec
mov
test
pop
adc
mov
and
gs
xchg
jle
sub
pop
sbb
mov
fldenv
add
cmp
sub
ds
ret
xchg
(bad)
jb
shl
pop
clc
dec
cdq
push
shl
repz
mov
dec
push
jmp
pop
(bad)
xchg
into
xor
das
cmc
shr
test
jo
(bad)
mov
mov
sar
addr16
scas
aas
inc
jmp
es
xlat
xor
sti
mov
mov
push
cs
je
jge
div
mov
jl
enter
fisubr
cmps
xchg
push
push
sbb
mov
and
cmp
push
fsub
out
pusha
cmp
dec
fld
jo
mov
call
ret
mov
add
call
arpl
movs
adc
(bad)
fisub
dec
(bad)
jmp
cld
shl
mov
jb
sub
sbb
add
push
inc
adc
into
out
in
aad
loopne
push
jne
push
push
gs
mov
bound
in
outs
ds
arpl
or
add
imul
enter
cmps
mov
adc
aas
(bad)
(bad)
mov
inc
push
inc
(bad)
cmp
dec
push
aas
cmp
cmp
adc
aad
sub
sbb
pop
add
add
stos
loope
pop
test
clc
in
inc
adc
iret
ret
scas
jae
push
cmps
stos
mov
xchg
sbb
mov
hlt
cmps
and
movs
mov
fcmovb
ret
jns
sbb
out
jns
scas
push
outs
fist
xchg
stos
ins
(bad)
push
add
ja
pop
xor
jg
(bad)
ins
clc
xor
sub
xchg
shl
adc
xchg
shr
out
jno
dec
xor
mov
xor
mov
sti
pop
jle
pop
cmp
hlt
mov
ins
add
mov
mov
(bad)
jge
jmp
mov
frstor
fst
stc
jl
cs
fisubr
cmc
daa
popf
int3
xchg
out
jl
pop
(bad)
inc
test
scas
add
cmp
add
push
sub
mov
outs
ds
lea
or
dec
nop
imul
and
mov
jp
xchg
daa
and
mov
(bad)
and
shl
cmc
and
mov
sub
imul
aas
daa
enter
pop
ss
or
cmp
lock
(bad)
call
iret
mov
rcl
call
sbb
imul
cmp
sahf
push
xor
pop
push
mov
mov
icebp
jge
pop
bound
in
ins
cmp
cmps
push
pop
xor
adc
mov
jo
and
jg
pop
or
mov
mov
(bad)
inc
jge
inc
adc
add
cmc
jne
inc
add
push
or
adc
pop
pop
or
inc
sub
not
or
in
jne
adc
inc
std
push
addr16
daa
imul
and
mov
(bad)
lods
rcl
cld
mov
push
lock
clc
int
mov
mov
push
dec
mov
test
mov
or
dec
std
jmp
jp
dec
shl
push
adc
loopne
xor
cmp
loopne
sub
push
cmc
scas
mov
mov
ins
push
(bad)
std
add
push
xor
ins
mov
leave
clc
sbb
inc
cmp
sub
and
psrld
pop
lds
xor
pop
dec
imul
ror
fucomip
nop
xor
mov
fsub
mov
cmp
adc
rcl
pop
(bad)
pop
or
nop
mov
add
mov
xchg
jo
push
ja
fs
fwait
bound
shl
popa
or
imul
repz
mov
adc
dec
add
push
mov
ret
pop
sti
fcom
jo
jae
scas
nop
rcl
aaa
jmp
retf
ja
out
popa
hlt
(bad)
jecxz
and
lods
xlat
jb
rol
shl
adc
lahf
jge
adc
or
mov
lahf
in
and
jmp
or
dec
xor
das
jp
loope
push
(bad)
xor
xchg
rcr
ins
sbb
hlt
xor
mov
mov
jg
loopne
add
cdq
mov
data16
jge
shl
xchg
fsubr
es
inc
jecxz
std
jno
mov
cmp
inc
cld
push
xchg
int3
ret
lahf
fsub
mov
and
ffree
push
pop
pushf
add
mov
or
pop
loopne
push
les
or
jns
adc
mov
(bad)
inc
movs
sbb
sub
leave
jge
push
stos
jg
rcr
jno
std
adc
data16
sti
fld
imul
scas
jmp
nop
shr
fs
pop
mov
sbb
mov
call
sti
push
mov
repz
and
ja
or
mov
daa
jle
sbb
pusha
pop
xchg
dec
and
test
pmullw
jmp
inc
inc
lods
add
scas
(bad)
fdiv
dec
and
ror
in
shl
std
pushf
and
out
leave
xchg
inc
and
adc
xor
cmp
adc
ja
push
(bad)
mov
cdq
in
test
jge
xchg
lods
paddb
push
cmp
cdq
ja
test
mov
js
fwait
jb
or
jmp
inc
imul
jmp
imul
sbb
sbb
ins
push
sbb
push
add
mov
scas
cmps
popa
lods
in
(bad)
mov
(bad)
sbb
jns
pop
jne
xor
adc
test
popw
pop
dec
mov
and
movlhps
icebp
mov
cmp
xor
sbb
pop
xor
das
push
mov
jmp
es
ja
mov
jle
cmc
bound
cmp
xchg
dec
or
add
add
lea
mov
ss
sub
xchg
inc
ins
sub
dec
lods
add
dec
mov
repz
and
and
neg
push
addr16
fnstenv
cmp
xchg
push
xlat
adc
ja
pop
mov
popf
sub
adc
and
data16
and
cmc
rep
or
add
mov
shl
xor
xlat
xchg
add
(bad)
stc
(bad)
aaa
fs
jae
push
or
and
scas
mov
xor
cmps
scas
outs
mov
cwde
das
cmp
loope
adc
cs
je
lods
adc
cmps
xor
mov
cwde
sub
repz
mov
add
xor
cs
xor
fcom
inc
push
adc
ins
pop
sti
(bad)
push
pop
mov
loopne
int3
xchg
or
nop
cmp
aam
inc
xor
(bad)
push
mov
not
jle
(bad)
into
mov
nop
push
push
pop
mov
or
sbb
pop
call
jae
fdiv
mov
(bad)
bound
outs
test
test
xor
mul
sub
test
out
xor
and
outs
xchg
in
dec
xor
xchg
fcom
xor
lods
(bad)
push
cdq
pop
gs
pop
mov
xor
outs
jns
pop
ja
xor
jb
push
sub
mov
mov
jae
xchg
jnp
dec
and
retf
(bad)
jne
push
sti
pop
xchg
call
shl
pop
popa
loopne
ins
(bad)
inc
lods
add
nop
push
pop
sti
mov
push
scas
aaa
sbb
cmp
sub
retf
adc
and
pushf
dec
es
or
inc
or
mov
ins
test
and
jp
jb
sub
pop
data16
pop
sub
mov
repnz
cmps
sub
out
sbb
xchg
enter
std
adc
push
fimul
push
cmps
inc
or
adc
scas
fidiv
pop
xchg
retf
sbb
popa
and
xlat
mov
inc
adc
stc
add
int3
jle
add
imul
inc
or
fbstp
loop
data16
pop
xchg
sub
popf
sbb
loop
mov
aas
inc
das
xor
shl
jb
ret
popa
cmp
jmp
mov
add
jle
xlat
bound
mov
pop
dec
fwait
ins
sbb
mov
xchg
in
fbld
retf
cli
(bad)
jmp
push
retf
and
xchg
add
cwde
mov
cmps
inc
sbb
jmp
dec
mov
lods
add
sbb
sub
or
push
fucomi
rcr
adc
adc
retf
fwait
and
or
mov
xchg
mov
and
stc
stos
nop
(bad)
jmp
lods
call
mov
add
inc
inc
jb
pop
or
push
int
shl
pavgb
sbb
test
sti
fisttp
adc
lds
push
call
xor
ins
and
punpcklwd
sar
jp
adc
cmp
inc
inc
push
call
xlat
leave
loop
dec
les
sbb
aad
cmp
push
xor
in
mov
mov
ja
into
jno
mov
add
mov
mov
mov
inc
cmp
fisttp
mov
cdq
jne
push
dec
mov
cmp
cmp
ds
pop
jge
leave
adc
cmp
inc
loopne
jl
mov
outs
int3
lds
and
or
popa
shl
and
jg
xlat
mov
cmp
jmp
cmps
ds
fnstenv
inc
outs
cmp
xchg
(bad)
outs
out
repnz
cmp
stc
jge
shl
stc
push
shl
jge
mov
(bad)
loope
adc
dec
ins
xchg
adc
ins
fs
add
lds
xchg
and
xchg
mov
dec
push
mov
lea
mov
out
js
mov
(bad)
jg
retf
stos
iret
or
lods
sbb
outs
retf
dec
hlt
mov
push
out
(bad)
mov
out
jnp
or
or
pop
sub
sub
jne
loopne
popf
add
mov
inc
retf
push
popf
inc
dec
les
div
test
mov
xor
pop
loop
jbe
push
scas
cmp
add
xchg
aam
imul
rcl
mov
sar
and
push
xchg
xchg
mov
pop
jns
or
mov
pop
mov
sub
out
pop
or
inc
pop
add
je
shr
push
repnz
jnp
sbb
enter
bound
mov
inc
push
adc
cmps
outs
loopne
or
dec
xor
into
cmp
mov
mov
dec
mov
test
fmul
div
out
mov
dec
jae
pop
mov
jl
int
and
sub
fs
push
inc
pushf
fs
fisttp
mov
in
retf
in
outs
outs
push
popa
arpl
loope
xor
dec
or
fldcw
sub
mov
cmp
mov
out
shl
add
push
(bad)
cmp
dec
xchg
xor
or
cmp
out
dec
mov
jp
fld
gs
int3
cli
push
sub
jb
jnp
aaa
xor
pusha
sub
sti
mov
out
out
in
mov
inc
jns
sub
mov
mov
mov
(bad)
in
inc
nop
inc
outs
add
mov
xchg
stos
psubd
(bad)
pop
jp
(bad)
jecxz
xchg
fcom
push
cmp
adc
loopne
sub
pop
fcmovnb
fild
pop
jno
ss
pop
dec
lds
aam
mov
jo
in
mov
sub
and
jnp
in
dec
mov
dec
test
bnd
inc
ins
xor
adc
popf
call
mov
jmp
pop
ret
das
jmp
adc
jmp
daa
and
sub
xchg
cmp
lods
cli
mov
inc
sub
call
and
dec
xor
sub
fwait
setge
adc
mov
test
xor
das
cmps
pop
mov
ss
fld
jecxz
mov
mov
and
std
inc
mov
popa
adc
repnz
cmc
and
push
sub
in
gs
dec
in
jge
fdivr
xchg
mov
test
rol
rol
outs
fcmovne
inc
push
push
pushf
int3
retf
xlat
mov
xchg
or
or
add
(bad)
xchg
add
loope
jno
sahf
(bad)
popa
test
cmps
(bad)
setns
icebp
int
jge
xor
jns
cmp
jo
fwait
push
push
sti
(bad)
loope
sub
inc
ret
outs
(bad)
dec
mov
xor
test
out
jmp
outs
outs
xor
jo
jg
pop
lock
pushf
sbb
jp
outs
test
inc
data16
fld
fucom
cld
push
mov
mov
gs
imul
mov
shl
push
out
ins
xchg
movs
inc
jno
mov
outs
das
dec
fdiv
mov
pop
popf
mov
in
jg
mov
scas
xchg
mov
and
rcr
in
xchg
xor
adc
pop
addr16
pop
retf
lea
cdq
pop
(bad)
fst
fs
push
mov
loopne
pop
pop
mul
ja
data16
jecxz
imul
lds
add
daa
inc
push
jno
jo
cmp
mov
enter
sub
mov
push
pusha
loope
jnp
and
inc
retf
adc
leave
dec
fs
pop
ja
add
imul
add
xor
(bad)
cmp
cld
or
gs
cwde
js
push
jae
add
ror
xor
sub
and
jnp
mov
movs
leave
out
lock
jecxz
repz
mov
int3
mov
into
mov
push
mov
hlt
call
jb
xor
dec
ror
rep
stos
test
adc
in
inc
popf
in
and
fs
scas
ret
adc
xchg
adc
fnstsw
push
dec
dec
mov
shl
adc
jae
(bad)
cmp
sti
cmp
scas
movs
adc
xor
fwait
nop
mov
(bad)
jecxz
mov
(bad)
lahf
fmul
fdiv
bound
fbstp
pop
mov
adc
pop
out
leave
jae
idiv
add
in
push
je
xchg
lds
lahf
add
inc
or
out
jb
and
cmp
xlat
fcomp
lds
js
cwde
mov
and
add
(bad)
movs
dec
stos
outs
jb
cld
cmp
pop
inc
cdq
push
repz
jno
pop
cmp
test
scas
jp
in
popa
sbb
inc
out
outs
cld
cmp
retf
test
lahf
cs
xor
cmp
pop
push
ret
mov
lahf
adc
mov
gs
(bad)
mov
movs
stos
xchg
stos
mov
or
imul
push
jmp
push
es
add
lds
rcr
sbb
(bad)
jo
bound
call
xchg
sbb
mov
sbb
sub
rol
fimul
sub
push
inc
(bad)
call
pop
test
in
adc
pop
sti
test
dec
adc
push
cmp
shr
jb
lock
lahf
sbb
cmc
pushf
mov
js
mov
(bad)
and
nop
retf
hlt
aam
jle
adc
or
mov
movs
add
sub
jp
inc
in
pop
(bad)
push
pushf
sbb
pop
pop
(bad)
and
adc
lds
mov
cmc
pop
jae
test
nop
adc
adc
mov
jmp
xor
jnp
xchg
dec
inc
arpl
cwde
outs
add
push
pop
mov
(bad)
or
mov
sbb
pop
into
leave
pusha
dec
push
xchg
stos
js
movs
js
xchg
mov
test
les
fscale
add
inc
push
mov
mov
push
xor
ret
mov
push
and
xchg
das
dec
jae
push
sbb
shr
daa
ds
push
pop
cmps
dec
cmp
into
or
lds
adc
aad
mov
sub
outs
stos
mov
mov
in
pop
ret
xchg
adc
cmps
in
xor
jg
mov
sub
(bad)
leave
imul
push
(bad)
mov
or
mov
jo
jb
xchg
xchg
movs
mov
fs
push
jg
pop
inc
in
dec
out
imul
stos
cli
cli
push
jge
stos
xor
dec
add
pop
repnz
xchg
in
dec
imul
or
ins
jns
je
adc
mov
scas
jno
xchg
pushf
push
(bad)
jo
fcmovnu
mov
lods
out
cmps
adc
pop
gs
loop
push
push
sahf
jmp
inc
iret
hlt
mov
retf
push
or
mov
add
dec
aas
jge
and
sbb
outs
add
jb
in
inc
call
or
shl
sub
jb
pop
xchg
retf
scas
xchg
push
xor
fs
rcr
out
sub
fcomp
lock
pop
int3
jne
in
jo
pop
xor
daa
(bad)
leave
xor
sahf
inc
test
mov
cld
bound
push
cmps
adc
push
sbb
add
clc
or
movs
push
aas
stos
pop
outs
pop
and
inc
loop
jge
xor
stos
aaa
sti
js
pop
retf
repz
retf
push
pop
aas
scas
das
popf
dec
xor
test
rol
pop
mov
inc
jmp
sub
fsub
lahf
icebp
inc
sub
stos
jmp
fcom
add
lods
cmp
test
push
add
repnz
mov
or
js
scas
out
fsubr
mov
ja
sbb
sbb
fld
iret
and
pop
pop
fbstp
xor
cmp
hlt
inc
mov
push
loopne
imul
sub
ret
int3
lods
scas
retf
mov
adc
cmc
sbb
or
and
pop
xlat
and
std
pop
pop
xchg
bound
add
dec
inc
cmp
shl
adc
xor
dec
fwait
push
sbb
(bad)
cmp
retf
shl
push
sbb
fs
inc
psllw
lods
sub
mov
or
fcmovu
ret
mov
jne
sub
addr16
stc
mov
out
lock
push
mov
jb
movs
jp
dec
pop
es
sbb
nop
enter
cwde
xchg
push
jle
scas
xchg
add
shl
push
lea
adc
imul
pushf
out
(bad)
inc
xchg
jp
xchg
fnstcw
adc
imul
add
test
int
repz
iret
test
mov
rcl
int
sahf
outs
push
or
rcl
mov
mov
and
add
and
inc
inc
push
je
aas
repz
and
or
xor
dec
mov
jnp
push
loope
inc
dec
sbb
mov
jo
out
mov
jl
mov
pop
shr
pop
inc
jnp
xchg
pop
push
in
push
ss
jg
mov
into
pop
(bad)
xor
lds
push
sbb
push
je
push
adc
psubusb
jle
mov
sub
push
out
jno
or
fisttp
or
sbb
dec
add
sti
clc
pop
dec
jb
or
ret
mov
outs
adc
xor
cmp
movs
inc
and
not
cmp
fild
ins
call
jno
(bad)
mov
fidiv
pop
or
jbe
pop
mov
into
add
rol
test
jmp
and
sbb
bswap
clc
dec
or
hlt
test
movs
dec
xor
popf
dec
dec
sbb
aaa
int
(bad)
stc
iret
fbld
js
icebp
loopne
xlat
mov
push
pop
lods
mov
ret
adc
in
ss
shl
sbb
fadd
jns
xchg
cmp
adc
scas
prefetch
or
mov
mov
call
loopne
jo
mov
mov
ins
jbe
pushf
fdivr
jne
ret
lods
neg
rol
outs
adc
test
not
cmp
test
cmps
xor
out
sbb
sti
jo
dec
out
(bad)
aas
jecxz
cmp
test
mov
xor
int
jp
test
fwait
push
out
inc
and
cld
xchg
jge
pop
sub
jmp
adc
and
cmp
or
push
out
push
fisttp
sbb
push
xchg
mov
mov
cli
test
push
mov
into
pop
cwde
dec
dec
jbe
(bad)
jecxz
or
mov
jnp
jns
fcomp
dec
cmps
jmp
mov
outs
cmp
mov
in
repz
xchg
ret
xchg
push
xor
pushf
imul
push
call
mov
rol
xor
fnsave
add
sub
call
mov
and
jp
xchg
push
pop
pop
test
rcl
imul
pop
movs
in
lods
xor
push
sub
call
mov
sbb
scas
adc
cld
(bad)
and
and
inc
sub
mov
push
ret
jno
repnz
xchg
add
pop
repnz
frstor
repz
jge
mov
sub
and
fnstsw
lock
sub
cdq
sub
and
lock
fbld
popa
in
cli
fcom
movs
cmp
dec
sub
pop
clc
push
inc
(bad)
hlt
call
and
aam
ret
sub
shr
jno
add
sbb
sbb
das
pop
push
(bad)
jbe
mov
adc
mov
or
sbb
push
xor
mov
in
cs
outs
int3
inc
mov
jge
or
dec
outs
dec
mov
fcom
add
mov
fs
xchg
jmp
ret
mov
push
mov
jl
mov
mov
lahf
rcr
xchg
jl
hlt
xchg
addr16
mov
iret
xchg
xor
stc
sbb
dec
pop
clc
fs
adc
xchg
cwde
xchg
sar
push
mov
cmc
add
jns
push
adc
popa
xor
ret
clc
sub
sbb
das
repnz
in
cmp
pop
lods
xchg
inc
jge
push
call
(bad)
sbb
adc
cmp
jbe
xchg
mul
sub
mov
or
push
inc
(bad)
out
sbb
push
sbb
add
adc
jae
pusha
repnz
mov
jl
rcr
inc
ja
inc
int
push
xor
ja
hlt
mov
inc
and
or
sahf
adc
mov
sbb
(bad)
addr16
int3
fs
rcl
sub
jno
and
or
mov
add
fnsave
add
xor
mov
mov
adc
js
or
xor
fwait
push
cmc
stos
jge
imul
push
ss
retf
popa
push
push
ror
test
in
or
xor
sbb
mov
cmp
aaa
in
jns
mov
pop
out
ins
into
repz
lods
stos
loope
adc
cs
rcl
sbb
mov
loope
lods
jb
mov
push
cli
fimul
shl
ret
pusha
dec
call
fbld
jmp
add
or
xor
fidivr
lea
stos
out
inc
xchg
inc
cmp
pop
push
mov
inc
repnz
mov
out
or
popf
lods
retf
pop
add
pop
loopne
imul
pop
(bad)
dec
mov
ja
sbb
sbb
enter
jl
push
lods
mov
push
xor
je
xor
mov
call
dec
es
bound
jb
pop
xchg
ret
lods
lea
dec
imul
call
rcr
iret
mov
pop
and
aas
ja
add
sbb
int3
jb
jb
jne
add
(bad)
push
stos
mov
push
int
cwde
mov
mov
inc
xlat
test
add
adc
stc
mov
mov
mov
xchg
xchg
not
in
arpl
bound
daa
(bad)
imul
test
in
xchg
dec
enter
xor
push
mov
push
in
mov
sub
mov
loop
or
jp
call
mov
ss
pop
jnp
neg
ins
xchg
or
mov
shr
push
dec
dec
pop
icebp
les
stc
xchg
adc
mov
xor
mov
scas
mov
jnp
and
lods
ins
int
add
dec
fs
xchg
sbb
scas
sbb
and
xchg
lds
stos
mov
ds
xchg
adc
pop
rcr
mov
fs
bound
test
mov
push
leave
jmp
and
ins
xchg
adc
test
sbb
movs
fild
out
lds
rcr
or
jp
push
inc
jp
lock
aad
jmp
fistp
sub
xchg
jmp
stos
adc
aaa
hlt
xor
sub
sahf
nop
in
xor
icebp
sub
mov
ds
movs
cmp
push
pop
or
push
lsl
xchg
inc
dec
add
pop
jmp
js
outs
and
pop
or
arpl
imul
movs
push
jecxz
out
jns
pop
int3
mov
pop
in
xchg
mov
push
or
ret
ret
out
mov
xchg
mov
add
mov
mov
sbb
outs
xchg
(bad)
sbb
push
push
cmp
sub
fimul
into
fbld
sahf
mov
arpl
jp
push
xchg
push
dec
mov
jmp
and
inc
fsub
dec
shl
gs
scas
pop
sub
addr16
mov
and
xchg
jge
xor
xchg
and
push
rcl
sbb
mov
pop
retf
mov
div
scas
call
jmp
test
sbb
sti
pop
xchg
or
into
rol
sub
(bad)
or
aaa
enter
xchg
in
scas
or
inc
and
jg
imul
addr16
mov
iret
inc
adc
push
sbb
adc
stc
lahf
enter
mov
or
outs
xchg
inc
sbb
fidiv
adc
xchg
mov
cmc
mov
mov
mov
test
into
es
dec
xchg
inc
cmp
repz
js
test
adc
cwde
gs
push
imul
bound
cmp
stc
inc
mov
div
push
mov
imul
pop
frstor
adc
or
fistp
xor
stos
ret
mov
push
jbe
loop
daa
mov
push
mov
or
mov
lock
cmp
add
ins
fldcw
lock
mov
jecxz
adc
xor
ret
neg
sbb
cmp
pop
fisub
shr
xchg
not
(bad)
retf
mov
cmp
(bad)
iret
int
and
jp
jmp
or
sbb
pushf
adc
(bad)
std
mov
in
lds
pop
push
out
xor
cmp
pop
or
or
lods
cmp
inc
leave
inc
mov
inc
sbb
mov
je
out
add
lea
lods
js
inc
fmul
pushf
icebp
cmp
pop
and
push
mov
mov
jo
imul
inc
int
nop
mov
adc
jmp
adc
jae
icebp
mov
mov
mov
sub
push
adc
fstp
and
adc
mov
cmp
add
xchg
icebp
or
and
loopne
mov
sub
xchg
sbb
jp
pop
mov
add
cmp
push
xor
cwde
xchg
push
pop
mov
movs
mov
adc
mov
mov
jle
repz
sbb
retf
and
data16
loope
fisttp
cmc
jmp
mov
cmps
pop
xchg
(bad)
inc
bnd
cmps
pop
stos
jns
das
in
ret
push
jne
dec
sar
scas
jb
repz
lea
adc
or
cmps
in
fnsave
or
dec
aam
fadd
cdq
pusha
lea
fistp
mov
bound
mov
loope
enter
xor
sub
loop
stos
push
sub
sar
sbb
cld
inc
shl
(bad)
retf
repz
loope
(bad)
sub
test
push
xchg
cmps
fist
call
push
aam
popf
data16
xchg
outs
loopne
cwde
dec
inc
jle
or
int
in
sar
ror
jecxz
add
inc
xor
repnz
cmc
jp
mov
imul
int3
dec
pop
xor
fnstcw
xor
aad
lahf
adc
or
in
mov
inc
sahf
mov
pop
call
stos
cli
in
test
mov
jns
mov
(bad)
ins
mov
pop
in
imul
xchg
and
sub
popf
(bad)
retf
ja
xor
loopne
and
iret
cmp
jp
dec
sbb
iret
sub
sar
(bad)
pop
xor
call
mov
(bad)
ins
(bad)
sbb
jne
(bad)
fisubr
add
data16
popf
mov
je
mov
cwde
rol
test
in
add
repz
(bad)
cmps
out
fidivr
les
adc
sbb
pushf
aam
jp
xlat
pop
dec
mov
cs
(bad)
sti
fnstcw
mov
(bad)
lahf
inc
mov
mov
dec
das
add
clc
mov
mov
xor
pop
dec
loope
cmp
pop
inc
rcl
ds
jp
adc
xchg
push
dec
mov
xchg
xor
sub
repnz
mov
retf
test
fs
xlat
pop
jle
repz
jbe
(bad)
shl
fstp
dec
std
pmovmskb
jns
xor
push
xor
call
mov
sbb
pop
mov
mov
cld
pop
in
idiv
scas
mov
popa
lock
xor
sub
arpl
pop
mov
adc
lods
push
pop
ins
(bad)
inc
into
ror
pusha
enter
rcl
(bad)
clc
pushf
jmp
int3
stos
out
push
outs
loop
das
sub
xchg
push
dec
dec
pop
adc
daa
or
data16
xchg
lock
leave
add
outs
mov
cmp
pop
div
and
jle
pop
cmp
movs
and
ror
mov
fwait
test
jo
push
add
outs
daa
inc
jo
and
mov
(bad)
pusha
pop
(bad)
popf
xchg
daa
cdq
aaa
pop
call
cdq
retf
ins
sub
dec
popf
stos
sbb
test
xor
cmp
add
inc
call
dec
and
pop
repnz
dec
dec
sahf
xchg
xchg
xlat
mov
cmp
lock
enter
xchg
(bad)
fst
xor
mov
stc
rcl
mov
xchg
popf
cwde
xor
dec
sahf
popf
out
sub
xchg
js
jae
push
jns
jnp
pop
fsubr
test
mov
mov
push
mov
pushf
cvttps2pi
sub
std
xor
aad
ss
leave
or
or
and
push
aaa
push
lea
xchg
xor
pop
movs
ret
or
cmp
mov
leave
test
push
push
ins
pop
adc
cli
retf
sbb
inc
(bad)
ficomp
arpl
or
das
div
sub
rcr
gs
xchg
xor
jmp
adc
push
pusha
push
xor
pop
data16
lods
sub
movd
xor
mov
out
rcl
xchg
leave
push
jecxz
mov
dec
dec
mov
dec
cmc
push
int
and
jmp
sbb
(bad)
std
idiv
push
(bad)
dec
sub
in
sbb
int3
pop
xor
retf
jle
daa
mov
int
dec
in
mov
leave
or
sbb
sub
or
cmps
jl
or
mov
test
out
xchg
out
loope
ja
jae
mov
pop
rcr
cmp
addr16
imul
mov
(bad)
pushf
cmp
sub
nop
ins
inc
fisubr
enter
jp
or
es
xlat
add
sub
stc
shl
in
cmc
mov
ins
sub
scas
(bad)
xchg
ja
sbb
int
xchg
in
cwde
rcl
movs
(bad)
mov
add
inc
or
into
(bad)
push
sbb
xchg
aas
xchg
xchg
enter
mov
mov
xchg
stos
in
arpl
adc
mov
inc
and
xchg
mov
dec
out
sbb
clc
popf
out
add
jnp
fisub
int3
das
retf
rol
mov
or
xor
call
push
lods
loopne
icebp
test
(bad)
xor
fwait
ins
je
adc
inc
in
xchg
pop
les
shl
lods
push
sbb
cmp
outs
lds
shr
push
popa
jle
out
cmp
xchg
je
sub
outs
rol
pusha
jnp
push
call
(bad)
pusha
ja
sbb
pop
push
add
in
dec
fimul
(bad)
mov
cs
sbb
dec
xlat
sbb
jb
mov
retf
dec
ror
test
or
mov
push
xlat
sbb
xor
pop
daa
pop
cmps
jmp
cmp
dec
sbb
(bad)
int3
xchg
fdivr
lods
mov
aad
adc
(bad)
push
das
mov
mov
jae
cwde
addr16
lods
mov
movs
and
iret
popa
adc
fld
(bad)
mov
jae
aam
ins
and
mov
dec
push
lds
dec
mov
push
cmp
pop
rcr
jecxz
rcr
pop
inc
mov
inc
imul
scas
aad
aas
fnstcw
mov
and
rcr
fsubr
call
inc
ja
(bad)
out
cmp
add
sbb
arpl
push
cmp
int3
movs
jnp
jg
cmp
repnz
div
mov
mov
repnz
pop
pop
mov
or
stc
js
ret
adc
out
hlt
rcl
pop
adc
(bad)
repz
sub
loop
in
rol
push
(bad)
mov
mov
add
pop
test
call
imul
test
sub
pop
inc
xor
xchg
xchg
adc
fcomp
add
adc
adc
out
fcom
adc
std
fnstenv
jae
mov
test
and
push
add
xchg
out
(bad)
mov
jmp
pop
dec
inc
xor
rol
stos
jae
das
pop
out
inc
sbb
jno
and
fbstp
int
mov
xor
push
retf
sub
cli
add
xchg
hlt
xchg
inc
stc
xor
loop
add
fst
xor
in
(bad)
jmp
inc
stc
lds
test
push
push
outs
outs
jae
and
shr
inc
mov
mov
xchg
inc
js
imul
xor
adc
dec
scas
outs
sub
(bad)
and
retf
movs
dec
mov
cli
fnstenv
inc
jb
adc
mov
inc
sbb
mov
pop
lea
cmps
outs
mov
add
in
into
bound
xor
jle
jo
aad
inc
ret
push
pop
push
mov
mov
aam
call
adc
fucom
ins
inc
xchg
ds
out
stos
pop
mov
inc
pop
mov
dec
mul
mov
clc
inc
xor
jns
add
test
xor
push
xor
jno
push
lods
jo
aad
retf
daa
jp
addr16
fsubr
push
push
mov
sbb
mov
add
aas
out
add
sahf
adc
pop
iret
in
pop
push
in
push
pusha
in
pusha
fcomp
xchg
lods
adc
jecxz
ret
xchg
aas
dec
(bad)
mov
pop
sbb
cmp
add
mov
inc
cmps
imul
sbb
sub
pop
xchg
sqrtps
scas
or
xor
outs
and
adc
(bad)
push
inc
pop
movs
pop
mov
xchg
adc
lds
xchg
stc
jns
out
xor
add
xchg
cwde
push
rcr
mov
sbb
fsub
mov
movs
dec
sbb
(bad)
dec
popf
pushf
pop
add
jle
or
jae
cmp
mov
into
dec
sub
adc
mov
mov
and
or
jno
and
ins
pusha
fwait
push
xchg
scas
call
or
js
push
imul
and
movs
arpl
xor
push
inc
xor
jo
pop
call
jmp
or
add
sub
out
mov
loop
mov
mov
push
jmp
pop
inc
shl
mov
jp
adc
outs
mov
movs
push
scas
repnz
bound
cmp
iret
pop
into
inc
mov
repz
inc
jmp
gs
and
adc
cmp
out
add
shr
jb
sbb
popf
out
sub
dec
push
out
inc
push
outs
fst
jns
adc
adc
mov
das
xchg
movs
retf
cli
iret
lods
xor
cmp
stc
ficomp
push
lods
mov
mov
pop
pop
sub
test
add
xchg
xchg
push
add
and
in
scas
push
jge
mov
std
hlt
jae
mov
loop
xor
leave
cmc
jg
popa
inc
xor
retf
sbb
and
fistp
jnp
(bad)
enter
hlt
pop
(bad)
push
push
adc
ss
jae
js
xor
cmp
ret
lods
pop
ret
(bad)
push
in
add
and
mov
fistp
data16
xchg
addr16
repz
(bad)
cld
xchg
sub
jb
lea
aad
dec
call
les
adc
inc
mov
sbb
cmp
xor
jae
dec
or
xor
xchg
or
or
scas
sti
and
mov
or
and
fimul
inc
and
dec
bound
je
in
inc
sbb
jmp
aas
test
scas
mov
dec
add
sub
retf
xor
fs
cs
mov
jmp
inc
test
adc
nop
push
mov
ins
mov
cwde
fisub
or
mov
or
mov
retf
les
aas
sar
mov
mov
lahf
xor
pushf
xchg
mov
aas
dec
xchg
mov
sahf
sbb
xchg
adc
mov
cmp
sbb
jns
jecxz
pop
das
repz
cwde
or
pop
enter
loop
rol
or
fsubr
and
xchg
out
es
cmp
rcl
and
out
imul
in
mov
gs
and
xchg
mov
dec
loop
xchg
cmp
xchg
lods
jmpw
cmps
jecxz
das
mov
jne
cmps
mov
data16
mov
test
gs
adc
repnz
shr
ja
enter
sub
xchg
sub
fdivr
loop
ins
jns
daa
ins
hlt
mov
je
xchg
inc
out
in
addr16
push
test
sub
xor
adc
cmp
(bad)
out
(bad)
aad
jmp
repnz
xor
mov
je
mov
and
lock
mov
iret
loop
dec
fldl2e
ja
push
pop
sbb
fwait
retf
lea
stos
mov
pop
or
jnp
cmp
push
cwde
mov
leave
ss
xlat
mov
xchg
(bad)
add
rcr
arpl
push
pop
fwait
push
ds
cmp
ja
add
and
imul
shr
int3
cmp
pop
xchg
aam
push
mov
jp
je
push
iret
fmul
ins
sub
sbb
les
int
inc
fadd
(bad)
hlt
cmp
xor
adc
inc
int
inc
lock
scas
movs
ret
jae
xlat
xor
or
js
xchg
push
gs
rcl
mul
adc
bound
pusha
fiadd
fwait
mov
xchg
cmp
frstor
fisttp
adc
sbb
push
mov
imul
mov
dec
aad
cmc
inc
fwait
lods
pop
mov
jle
ins
cmp
ja
shl
mov
rcl
sbb
jne
xor
inc
pop
inc
icebp
adc
(bad)
popf
mov
cmp
inc
dec
mov
gs
lock
arpl
retf
mov
pushf
sub
add
dec
lods
sbb
adc
cmp
out
aad
fistp
sub
or
ja
jb
jnp
ins
mov
sub
adc
mov
mov
dec
dec
mov
mov
push
dec
(bad)
and
adc
pop
int3
xchg
pop
icebp
adc
iret
jge
push
movs
leave
es
add
sbb
mov
sub
pop
xchg
mov
scas
jle
pop
pop
lds
fild
sbb
xlat
(bad)
jmp
push
shr
xlat
xchg
(bad)
fild
xchg
adc
sbb
dec
pop
popa
and
fsubr
cld
sub
ds
jns
mov
loop
shl
int
movs
mov
mov
(bad)
xchg
daa
pop
fdivr
std
gs
push
add
xor
cwde
or
movs
hlt
mov
std
rol
add
pop
or
push
dec
xlat
or
(bad)
in
shl
jnp
push
cwde
xor
xor
jns
jnp
pop
adc
dec
add
dec
stos
ror
sub
sbb
movs
pop
xchg
jmp
(bad)
ret
aas
stc
loopne
mov
push
or
xchg
mov
or
(bad)
add
or
xor
(bad)
aam
mov
js
cmp
sbb
cmp
mov
retf
fst
dec
stos
mov
mov
scas
in
jmp
mov
jmp
xor
sbb
jl
aaa
jg
xchg
adc
xchg
imul
push
cmps
dec
int3
and
inc
outs
bound
aad
loop
sub
inc
scas
inc
rol
fadd
fwait
cli
movs
iret
jo
jecxz
stos
mov
dec
popa
mov
mov
test
data16
dec
mov
adc
inc
fs
jb
test
or
jns
or
cli
out
cmp
retf
adc
pop
hlt
add
sbb
pop
movs
pop
adc
mov
jnp
bound
jle
xor
(bad)
jmp
mov
jle
aad
cmp
pop
inc
mov
adc
xor
fisub
lock
jmp
cdq
lods
lods
xchg
sub
sbb
cwde
xor
in
test
cmp
xchg
es
in
pop
leave
iret
(bad)
jns
setp
cmps
stos
fcomp
pop
sbb
movs
sub
jl
cmps
jns
rcr
push
xchg
bound
lods
pop
test
or
in
jp
hlt
pop
pop
jo
adc
es
ret
mov
ret
enter
enter
or
pop
jb
mov
push
mov
jl
mov
dec
test
pop
imul
inc
add
retf
sar
pop
bound
cwde
add
jae
pop
sub
dec
pop
and
ss
mov
sbb
(bad)
mov
hlt
out
outs
ja
in
nop
in
out
mov
call
pop
lods
pusha
mov
dec
out
or
mov
outs
push
mul
inc
in
stos
cs
push
dec
adc
out
stos
inc
(bad)
retf
jecxz
sub
push
retf
sub
mov
xchg
xor
dec
idiv
sbb
inc
fsub
(bad)
movs
test
lock
jmp
cmps
cmp
inc
in
pop
cmps
addr16
mov
cmp
mov
pushf
pop
in
(bad)
enter
jne
jp
dec
fmul
ja
cmp
cmp
jg
xchg
jae
dec
add
mov
bound
inc
rcl
imul
aam
stos
daa
xor
ins
jns
sbb
mov
pop
outs
popa
fst
repnz
in
inc
sbb
cmp
push
hlt
jae
jne
xchg
cmps
mov
pop
xor
cmp
cmp
scas
ins
cs
call
push
dec
nop
in
and
retf
jmp
call
mov
(bad)
dec
jl
fist
dec
and
lods
fistp
ins
adc
pushf
scas
inc
or
aad
shr
cmps
lea
sahf
(bad)
pop
aaa
movs
in
xchg
pushf
xor
lea
test
fs
mov
clc
div
jecxz
cli
or
add
sub
cmc
repnz
sbb
jmp
adc
sbb
push
or
xchg
or
inc
xchg
arpl
pop
lods
pusha
gs
fcmovb
les
lahf
nop
push
outs
rcl
mov
push
loopne
adc
sub
call
shl
aas
lea
sbb
imul
sar
xor
pop
adc
xor
fwait
xchg
mov
pmaxsw
pushf
movs
mov
shl
jle
xlat
test
mov
dec
bound
(bad)
inc
xchg
cli
retf
pop
lods
jae
or
xchg
mov
aas
mov
ror
push
loop
shl
or
lahf
xchg
xchg
into
div
jecxz
in
addr16
(bad)
jmp
dec
pusha
repz
sbb
adc
push
nop
jmp
mov
mov
popa
fidiv
call
lds
pop
adc
xor
out
jo
cmp
inc
sub
push
jns
mov
inc
push
xor
fmulp
inc
ret
adc
cmp
or
mov
int
push
mov
imul
cmps
movs
mov
mov
in
movs
jb
jg
jmp
(bad)
pop
xor
or
sub
rcr
retf
push
retf
(bad)
add
or
or
les
adc
xor
fimul
repnz
ret
xor
bound
pop
xchg
fsub
sub
mov
jmp
mov
push
jp
sar
lods
imul
sbb
daa
mov
dec
aas
inc
pop
shl
cli
jg
pop
pop
es
lods
movs
push
push
in
xor
cmps
cwde
mov
cs
add
xchg
add
jb
add
cmp
dec
fcom
and
mov
pop
jl
daa
add
bound
add
mov
data16
jg
fcomp
cmovno
xor
inc
in
cdq
je
(bad)
jecxz
add
mov
call
add
fsub
cmp
pop
stos
(bad)
icebp
mov
mov
in
(bad)
sub
xchg
dec
pop
cmc
jne
jb
mov
adc
cmps
xchg
cmp
add
repnz
ja
cs
ja
sub
out
add
adc
sub
jno
ret
and
retf
das
push
clc
adc
and
ja
mov
mov
test
mov
retf
adc
xor
fstp
or
push
aam
bound
pop
clc
jmp
mov
mov
pop
outs
loope
fwait
repnz
mov
loop
mov
pop
jb
push
mov
add
(bad)
fisub
aad
sub
mov
cdq
not
dec
pop
retf
dec
sbb
xchg
and
push
iret
mov
in
into
push
mov
mov
or
loop
call
pop
add
repnz
add
jmp
mov
or
imul
push
mov
push
mov
loop
sub
xor
cdq
hlt
scas
push
cld
fstp
jp
dec
fs
jmp
loopne
retf
lahf
adc
fsubr
jecxz
mov
(bad)
fdivr
jecxz
(bad)
shr
mov
fld
test
adc
enter
push
pop
cmps
je
rcl
jmp
pop
xchg
bound
je
sar
sbb
mov
das
mov
adc
xchg
sub
out
mov
mov
call
xor
(bad)
(bad)
xchg
mov
jno
inc
mov
cmovp
xor
ret
sbb
jle
jbe
push
pop
movs
inc
inc
adc
sub
rol
mov
xchg
sbb
retf
aas
clc
repnz
test
js
retf
pusha
cdq
repnz
enter
fsub
push
mov
call
jae
xchg
cli
stos
sti
mov
cmp
out
cdq
mov
mov
je
imul
arpl
mov
and
call
add
lods
cmps
adc
cmc
mov
(bad)
loop
mov
sbb
push
loopne
jge
sti
out
iret
or
movs
popf
mov
out
push
push
ret
mov
add
and
mov
std
mov
outs
xchg
mov
jmp
and
jp
mov
fld
faddp
cdq
jmp
mov
pop
push
lock
jmp
scas
xor
adc
jno
ds
dec
fdivr
push
(bad)
mov
sub
sub
jns
(bad)
cmc
jbe
cmp
in
das
adc
dec
dec
loopne
jge
sbb
lods
(bad)
ds
dec
stc
test
arpl
fistp
rcr
adc
stc
daa
xchg
pop
pop
std
imul
in
int3
xchg
push
cdq
sub
lods
mov
addr16
lods
fucom
or
mov
icebp
stos
xchg
sbb
sub
test
mov
ss
gs
jae
movhps
xor
icebp
push
cmp
call
add
mov
cmps
js
aam
jp
xor
movs
dec
mov
paddw
fwait
push
(bad)
or
out
or
(bad)
xchg
and
call
inc
pop
inc
loopne
pushf
dec
jns
jge
icebp
cld
ins
jae
sbb
cld
scas
xor
scas
pop
imul
jmp
(bad)
faddp
ret
cmp
mov
xor
push
int
fcom
adc
push
push
push
pop
idiv
xchg
leave
sub
mov
loope
add
inc
in
cdq
(bad)
adc
inc
push
add
jbe
sub
ins
or
add
retf
retf
call
xchg
ss
in
jg
xchg
(bad)
int3
cdq
xlat
push
loop
sbb
jp
cmp
push
sahf
push
mov
xchg
pop
xchg
sbb
pop
dec
xchg
ja
mov
(bad)
(bad)
std
jo
mov
mov
cdq
mov
aas
loop
cdq
cs
add
aas
add
pop
(bad)
dec
push
jmp
cmp
cmp
pusha
adc
lods
(bad)
nop
jne
test
lods
inc
pop
or
aad
jmp
jp
xor
je
adc
cli
xchg
push
adc
cmp
xlat
test
xchg
sub
fisubr
inc
xor
(bad)
jmp
fmul
out
and
jmp
mov
popa
mov
and
jg
aam
mov
in
mov
jbe
adc
cmp
repz
push
data16
sbb
or
or
adc
inc
cmp
push
cmp
cld
cmps
sbb
cmp
mov
les
mov
ss
mov
inc
in
xor
sbb
fs
adc
std
call
outs
lahf
push
clc
ins
mov
out
sub
mov
jle
(bad)
add
dec
fnstcw
sbb
mov
pop
and
stc
das
loop
xchg
lods
push
imul
add
add
shl
dec
sub
int3
ins
loopne
dec
cmp
jae
pusha
into
adc
cld
(bad)
movs
mov
sar
aaa
xor
shl
popf
lea
out
lahf
addr16
mov
and
pop
mov
ja
inc
cdq
and
mov
mul
push
mov
ins
jbe
loop
(bad)
pop
pop
ficom
fs
test
sbb
icebp
jecxz
pushf
cld
clc
shl
(bad)
push
xchg
out
cmp
adc
addr16
loop
mov
pop
out
in
or
push
sti
sbb
jmp
gs
inc
add
fs
mov
mov
in
sbb
jg
push
adc
dec
sahf
inc
sub
sub
push
ds
int3
mov
jno
imul
xlat
shl
jnp
jle
xchg
cmps
pop
jae
sbb
and
ret
and
sar
sub
xchg
adc
push
and
pop
les
mov
scas
inc
xor
dec
cmp
fsubr
shr
jne
(bad)
div
dec
mov
add
mov
es
dec
xchg
add
enter
popf
jae
push
stc
xchg
mov
dec
sbb
imul
or
xor
mov
and
repnz
cwde
xor
push
mov
out
fwait
cmp
stos
test
imul
fs
iret
jne
adc
xor
dec
add
sub
sub
xor
mov
jbe
add
or
xor
pusha
push
mov
rcr
imul
cmp
mov
adc
(bad)
in
adc
shr
pop
(bad)
mov
sahf
push
call
xlat
push
in
mov
lods
enter
imul
ret
xchg
fstp
popf
dec
pop
adc
mov
cld
test
or
or
add
jns
inc
inc
adc
mov
xor
js
ss
daa
push
fadd
inc
jnp
cmp
aad
sahf
xchg
popf
add
jo
mov
sbb
les
cdq
sub
icebp
xor
xor
sbb
popf
in
jns
mov
hlt
fisubr
pop
in
scas
popf
or
push
(bad)
mov
int3
or
inc
stos
sahf
ror
push
dec
jl
mov
movs
jo
pop
not
mov
retf
cmp
pusha
loope
sub
pop
movs
mov
add
call
leave
popa
sbb
or
mov
sbb
in
icebp
fwait
jmp
jno
jmp
jg
xchg
push
or
shr
std
inc
jae
(bad)
es
mov
ins
xor
inc
aas
shl
call
add
psubd
xlat
sbb
push
das
dec
fs
es
pushf
(bad)
test
rcr
jne
ror
sub
xchg
lods
fmul
sub
sbb
pop
bswap
jp
bswap
push
cli
jle
hlt
(bad)
aaa
outs
add
cdq
test
pop
in
push
pushf
push
inc
hlt
lods
aad
add
dec
into
(bad)
push
xlat
xchg
jae
add
mov
fisub
xor
ret
int
mov
cld
mov
xlat
cmps
cli
outs
sub
xor
loop
sahf
mov
inc
(bad)
lea
cmp
fsubrp
(bad)
adc
mov
in
add
mov
(bad)
fidivr
sub
jb
test
jle
sub
call
pop
jb
push
stc
pop
retf
mov
dec
mov
(bad)
sti
push
and
push
imul
xlat
gs
mov
ror
daa
dec
mov
jno
add
jo
gs
loop
pop
imul
ficomp
xchg
mov
and
sbb
xchg
pop
in
je
jb
jg
bound
xchg
mov
fcmovnb
cmp
rol
mov
sar
jl
loop
scas
int3
push
test
dec
jb
rcl
js
push
sbb
lods
lfs
loop
bnd
sbb
mov
and
retf
rcr
cmp
jbe
mov
xchg
push
add
ss
xor
sub
adc
out
idiv
es
bound
aam
test
aaa
mov
(bad)
lahf
ret
stc
es
and
dec
push
test
rsm
xor
lods
jo
mov
or
cmp
stos
movs
xchg
jl
adc
(bad)
dec
mov
xchg
pop
pop
lods
clc
pusha
push
in
jg
dec
js
push
int
jle
stos
add
jbe
xor
or
xor
add
leave
mov
or
scas
rcl
stc
in
sahf
cmp
loopne
aad
fnstcw
ja
push
sub
pusha
cmp
retf
movs
js
add
mov
mov
sbb
dec
das
pop
leave
mov
sbb
leave
scas
out
scas
aaa
and
xlat
jb
stos
xchg
cwde
and
in
addr16
xor
sbb
xor
sbb
jns
adc
sar
pop
pop
movs
inc
sub
outs
or
test
add
in
pop
lea
call
enter
mov
jmp
mov
xor
and
or
inc
push
sbb
ss
mov
outs
add
repz
dec
in
jg
xor
lock
cld
mov
movs
jne
in
bound
lea
jl
fld
push
stos
jnp
cld
xor
dec
mov
xor
jecxz
dec
cmp
(bad)
in
loopne
push
adc
into
or
mov
out
and
hlt
mov
loopne
push
nop
(bad)
cli
jae
xchg
push
int
jmp
xchg
sahf
dec
cmp
cli
sti
ret
push
sub
push
inc
es
pusha
sub
pop
adc
scas
mov
pop
fwait
cmp
jmp
fidivr
mov
add
imul
or
cmps
ficomp
jbe
mov
mov
adc
test
setns
aad
or
mov
cmp
mov
pop
pusha
jnp
cld
es
sub
pushw
pop
stos
sub
repnz
and
add
int
in
xor
pop
pop
push
mov
xor
clc
in
movs
push
xchg
in
movs
pop
add
ins
std
mov
cmps
xchg
push
push
mov
arpl
jae
xchg
js
outs
lea
and
in
lods
and
icebp
pop
rcr
pop
ja
iret
mov
and
fstp
aaa
sti
xchg
xor
mov
adc
imul
add
cpuid
retf
push
jmp
add
cwde
adc
jp
inc
sub
xchg
cmp
inc
xchg
and
call
xchg
inc
stos
xor
mov
pop
mov
add
mov
out
adc
ret
and
add
mov
push
ds
mov
(bad)
rcr
push
rcl
cli
int3
cmp
jp
sub
push
adc
outs
je
jne
xchg
sbb
jecxz
fsub
sbb
sub
sub
cmp
adc
scas
add
and
test
cmp
and
mov
cmps
daa
inc
retf
ins
dec
rol
jmp
sub
mov
sub
mov
cwde
out
push
je
gs
dec
mov
jns
lods
inc
ret
and
pushf
bound
push
loope
xor
inc
mov
pusha
mov
push
adc
test
sub
fdiv
jns
mov
pop
ja
mov
jl
and
mov
xchg
mov
or
push
ins
pop
movs
stc
test
add
pop
outs
rcl
(bad)
ins
fst
dec
jne
jb
xchg
pop
sbb
sbb
ret
inc
fs
jns
clc
iret
fmul
adc
and
xchg
ror
push
or
push
push
push
cld
fisttp
mov
push
pop
fnstcw
and
add
(bad)
call
sbb
sbb
loope
lods
cmp
adc
pop
pop
ins
push
out
lds
ror
pop
pop
and
icebp
in
stos
ret
lods
dec
dec
jg
add
cmp
xlat
adc
adc
or
not
or
adc
addr16
xor
mov
out
les
popf
rol
dec
mov
nop
xor
sub
inc
ins
inc
lock
icebp
mov
jb
shr
push
sub
bswap
ins
xchg
cli
pushf
mov
mov
sbb
clc
jnp
adc
jmp
xchg
in
cmp
test
xchg
and
jp
into
push
sbb
inc
(bad)
cvttps2pi
jle
sbb
setns
xchg
fist
add
retf
xchg
jg
sahf
jno
icebp
pop
iret
inc
inc
loope
xor
ja
lahf
das
dec
imul
push
jbe
stos
in
lahf
jae
mov
add
jmp
cmp
mov
pop
ss
mov
imul
sub
(bad)
aaa
rcr
fld
shl
sahf
jge
sbb
dec
xor
push
jb
arpl
aas
mov
push
in
mov
movs
enter
loop
sbb
retf
into
rcl
mov
inc
sbb
and
and
or
push
jge
dec
movs
push
sub
not
xchg
xchg
retf
xchg
push
cdq
pop
push
add
sbb
std
push
or
sbb
inc
repnz
aas
sbb
repnz
popf
imul
nop
sub
jle
push
lds
in
imul
sbb
cmp
shr
jle
pop
pop
sar
pop
xlat
mov
scas
aaa
lods
jmp
daa
inc
inc
inc
cmp
montmul
cmps
pop
inc
lods
aad
int3
push
jmp
mov
dec
out
sbb
shl
adc
xchg
xor
adc
xchg
ds
enter
out
or
loop
(bad)
fstp
retf
pop
jo
cmp
xor
pop
iret
xor
out
je
scas
mov
adc
mov
push
pop
mov
inc
mov
push
mov
test
adc
lds
out
mov
loopne
sub
and
jo
and
push
sbb
or
push
paddb
jle
jg
sbb
nop
out
sub
pushf
fdiv
mov
repz
enter
pop
push
jp
sub
fwait
and
jns
out
jl
popa
push
lods
pop
into
ss
or
mov
pusha
ins
inc
jp
or
adc
lods
outs
in
loop
inc
and
pop
pop
add
(bad)
push
outs
jno
sub
dec
lea
fwait
mov
pop
pop
fnstenv
pop
lods
fadd
mov
mov
mov
shl
xchg
repnz
add
push
loopne
aam
adc
pop
adc
setle
xchg
(bad)
adc
pop
cmps
sub
mov
lahf
dec
jle
leave
sbb
pop
test
in
sub
mov
jbe
jo
push
mov
movs
cmps
repnz
jb
mov
pop
mov
lods
sub
dec
pop
lahf
xchg
into
add
push
sub
fdiv
mov
cmp
cmp
dec
out
sub
dec
in
pop
mov
lahf
fsub
iret
xlat
pop
dec
pop
loopne
cwde
mov
pop
stc
pop
sub
push
mov
aas
xchg
pop
imul
mov
fld
dec
scas
clc
stc
and
or
push
aad
mov
in
jl
jo
stc
ss
out
shl
movs
addr16
out
pop
add
push
mov
mov
sub
cmp
cli
jp
fdivr
adc
adc
fld
movs
xor
xchg
jp
jmp
sbb
sbb
jge
jmp
xchg
push
rcl
addr16
inc
mov
xchg
out
pop
sar
out
les
xchg
jg
cdq
in
repz
fsubr
push
dec
and
bound
xchg
or
push
and
push
enter
orps
sbb
xchg
lds
pop
mov
ss
adc
mov
ja
pop
adc
jmp
ret
mov
loopne
repz
(bad)
sub
push
mov
inc
icebp
sar
mov
mov
rcr
or
xchg
add
stos
int3
loop
fisttp
movs
loop
jnp
push
pop
lea
adc
mov
and
test
dec
inc
loopne
repz
loope
ins
mov
mov
mov
out
mov
fcom
mov
cmps
jge
rcl
jmp
in
or
fsubp
out
sti
cdq
xlat
rcl
mov
lods
dec
icebp
retf
aam
clc
push
mov
jmp
aas
(bad)
(bad)
cvtps2pd
hlt
xor
and
std
outs
dec
enter
jge
out
mov
push
clc
jecxz
leave
pop
xor
sbb
mov
cmps
push
stc
inc
fisttp
dec
bound
push
xor
dec
inc
popa
sub
cmp
mov
mov
xchg
lock
fs
cld
out
(bad)
retw
das
mov
loopne
das
fild
mov
mov
and
sahf
lahf
loope
out
dec
lods
push
mov
mov
fdivrp
mov
push
or
es
test
nop
stc
fsubp
rcl
pop
enter
xchg
rcl
mov
(bad)
cmp
sub
xchg
sub
xlat
pop
jge
jge
lock
lods
fidivr
sub
repnz
dec
loopne
xor
inc
(bad)
(bad)
xchg
mov
pusha
repz
ret
inc
stos
test
push
push
or
push
push
pop
les
aad
add
(bad)
xlat
gs
and
mov
push
push
cdq
mov
(bad)
scas
std
in
mov
pop
fimul
xchg
adc
popf
clc
mov
in
mov
aad
mov
push
jl
sub
and
or
ud2
push
add
jg
push
pusha
pop
pop
inc
mov
dec
ins
inc
push
or
lock
push
std
loope
push
add
loopne
aad
(bad)
(bad)
rcl
adc
out
(bad)
jbe
movs
call
push
out
aaa
sub
ss
arpl
sbb
jnp
and
xchg
jno
push
out
xchg
push
rcr
aad
sahf
dec
adc
xor
cmp
aaa
shl
mov
lahf
mov
cmc
rcr
fld
mov
xor
pop
pop
lea
or
loope
push
ss
inc
data16
sbb
ror
jns
inc
sbb
(bad)
xchg
or
mov
jmp
ret
test
inc
leave
cmps
fisub
jae
dec
sbb
push
fcom
std
cmp
mov
dec
or
dec
popa
mov
inc
push
in
cmc
inc
xor
push
xor
vorps
and
mov
add
bound
cdq
ret
fiadd
push
loope
push
test
fcom
mov
adc
in
or
cmp
imul
jo
jmp
mov
(bad)
jle
mov
rcr
xor
push
adc
cmp
cwde
jmp
mov
addr16
fdivrp
fisubr
retf
adc
outs
dec
sub
jno
popa
into
mov
je
xchg
mov
push
pavgb
pop
push
imul
mov
stos
and
cld
in
mov
and
sub
daa
jle
add
out
jnp
mov
fs
sub
aam
call
loop
int
scas
repz
ss
dec
mov
jo
xchg
aad
imul
jmp
call
out
pop
std
out
cld
(bad)
mov
jge
(bad)
iret
cli
scas
int
mov
popa
cld
dec
sbb
and
mov
(bad)
mov
add
adc
out
(bad)
or
push
inc
mov
mov
add
je
test
inc
mov
xchg
or
dec
push
cmp
jbe
cmp
xchg
and
lock
test
ror
movs
push
ss
jno
les
shl
rol
test
jae
in
mov
add
loop
dec
push
sbb
fdivr
std
in
lea
repz
dec
jecxz
xor
jb
jo
xchg
cmp
icebp
sbb
sub
jp
mov
or
leave
pop
retf
sub
mov
sub
pop
push
fcom
aas
xchg
cmp
jne
(bad)
push
sub
dec
push
in
mov
push
aaa
stos
scas
int
outs
(bad)
scas
and
retf
xchg
push
push
clc
mov
loope
inc
inc
xchg
mov
lock
in
das
pop
xchg
lea
mov
xor
cdq
sub
xlat
cmp
loopne
inc
fld
sbb
jnp
or
and
xchg
and
add
pop
mov
cwde
cmp
es
xor
sub
fnstcw
mov
lahf
test
fwait
clc
fwait
stc
inc
fstp
test
dec
add
repnz
movs
dec
sub
xchg
js
aad
push
cmp
jo
les
int
pop
pusha
scas
cmp
or
mov
lahf
pop
mov
add
bound
jnp
jg
xor
in
push
xor
lods
and
out
fwait
add
sub
test
outs
mov
cwde
jmp
and
inc
bnd
aaa
(bad)
cmp
out
cmp
inc
loopne
lahf
jno
retf
pop
jns
xchg
mov
int3
leave
cmp
imul
jmp
xchg
pusha
outs
xor
and
adc
sub
jg
inc
in
ret
or
and
or
mov
push
int
aaa
adc
into
jb
je
in
push
(bad)
push
mov
and
or
not
cmp
cs
jae
(bad)
push
jbe
push
mov
(bad)
in
hlt
inc
jge
xchg
jp
jecxz
jp
call
cmps
cmps
jne
test
ror
mov
add
pop
arpl
jmp
mov
xchg
pop
out
pcmpeqd
fwait
mov
jmp
cmp
scas
dec
(bad)
push
pop
add
dec
(bad)
cld
sub
cmp
sbb
lea
sahf
cmp
in
mov
push
jg
mov
push
je
xor
(bad)
push
adc
mov
sub
jecxz
mov
and
xchg
les
add
inc
out
test
push
xchg
in
js
cmps
xchg
push
pmaxub
cwde
push
les
add
push
push
mov
jecxz
ss
in
retf
shr
scas
adc
test
pop
scas
mov
adc
jnp
push
cmps
shl
mov
jmp
mov
dec
and
mov
push
aaa
aas
lds
push
sub
jmp
mov
xchg
leave
push
push
push
jle
inc
in
lahf
not
xchg
pusha
int3
dec
fsubr
xor
inc
sub
int3
jecxz
jp
outs
sbb
xchg
or
out
push
test
xchg
lahf
ins
mov
dec
je
cmp
jl
test
dec
add
rol
mov
je
scas
add
mov
ret
sbb
loopne
pop
cmc
cli
fimul
jg
cdq
or
pop
mov
gs
dec
add
inc
xlat
inc
stos
dec
and
mov
jae
ins
dec
xor
adc
inc
(bad)
aaa
add
jo
inc
stos
(bad)
xchg
leave
imul
mov
or
push
imul
fwait
adc
cmp
loope
sub
lahf
cmps
sar
sti
jne
pcmpgtw
sub
push
cmp
and
pop
add
jmp
mov
jne
jle
stc
jmp
rcr
or
inc
and
jl
out
add
push
inc
jl
push
jle
cs
cwde
ret
lahf
or
shr
xchg
adc
jge
test
lods
aam
aam
fnstenv
cmp
ror
cmp
pop
out
std
sub
iret
inc
jo
add
rol
cwde
fldcw
ja
mov
movs
clc
or
ja
pop
sti
cmps
mov
ins
addr16
call
jle
mov
cmp
xchg
push
push
sub
std
cmp
pop
inc
cwde
iret
jo
mov
sbb
cmp
iret
ins
dec
cmp
fisttp
lods
inc
pop
or
retf
sbb
ret
jbe
and
out
xor
test
dec
adc
add
adc
repz
retf
jb
inc
ror
lods
bound
jns
xlat
leave
mov
xchg
inc
ficom
hlt
cmp
les
push
or
sbb
pop
mov
and
in
push
imul
loop
mov
(bad)
fst
mov
mov
sbb
fistp
sub
ror
and
stc
pop
xor
dec
mov
push
push
movs
rol
ja
and
add
sahf
fs
dec
pop
fistp
mov
clc
nop
jle
dec
loopne
(bad)
in
xor
jle
loope
pop
sahf
std
pop
pop
xchg
mov
push
sbb
or
int
pop
aam
movs
out
inc
push
jnp
sbb
cmp
scas
cmp
mov
into
jecxz
cli
popf
mov
sbb
in
les
mov
mov
adc
inc
idiv
pop
mov
push
scas
pop
std
cdq
pushf
aam
xchg
inc
or
inc
mov
xchg
icebp
mov
pop
scas
(bad)
rol
push
scas
movs
adc
jo
xchg
inc
outs
shl
or
dec
fnsave
(bad)
je
xchg
sub
pop
enter
and
cmp
rcl
sbb
rcr
stos
jg
adc
xchg
or
imul
jecxz
repnz
xor
aas
aam
(bad)
pop
add
mov
int
xor
pusha
call
add
xchg
not
dec
lock
mov
fsub
pusha
test
push
dec
jl
bound
jge
inc
inc
or
into
ret
mov
jecxz
xchg
mov
out
leave
mov
in
test
and
inc
(bad)
xor
jge
xor
cmp
jae
jl
fnstcw
push
cmp
movs
test
adc
cmp
pop
int
iret
pop
push
push
cmp
mov
adc
xchg
pushf
sub
push
arpl
sub
mov
mov
lds
shl
dec
stos
mov
mov
movs
ror
or
(bad)
adc
jmp
enter
add
pop
adc
inc
xchg
adc
push
stc
jne
int3
int
aad
add
pop
push
cdq
and
cmp
fdivp
int
push
ja
mov
dec
adc
lahf
cwde
inc
xor
jo
adc
retf
pusha
arpl
pop
into
add
pop
sar
loope
jnp
stos
xacquire
jno
cmp
fist
jno
xchg
mov
mov
sahf
lahf
push
xchg
std
inc
add
das
cli
mov
mov
sbb
aas
loopne
lods
mov
cmp
push
cmp
or
(bad)
loop
leave
and
inc
or
jg
daa
dec
jmp
mov
sub
lahf
(bad)
popa
cli
(bad)
call
and
adc
sub
add
xor
mov
mov
nop
das
cmp
les
dec
cdq
sub
dec
fcmovnbe
sbb
xor
arpl
pop
sbb
sub
loopne
add
stc
daa
sub
cmp
add
push
stos
pop
test
jg
pop
je
sbb
or
jg
shr
shl
les
cmps
arpl
fnsave
gs
mov
xchg
cwde
mov
inc
xchg
shr
jne
xchg
cmp
mov
jp
mov
lods
and
icebp
int3
cmp
retf
xchg
lods
xchg
mov
les
(bad)
adc
push
pop
inc
(bad)
imul
dec
js
ja
sub
(bad)
pop
scas
xchg
sub
cdq
iret
jns
(bad)
jno
repnz
lock
cwde
js
scas
cmp
pusha
pop
xor
bound
jle
rcl
out
and
add
sbb
aam
cmp
xor
cwde
(bad)
mov
pop
xor
jo
cmp
sar
pusha
pop
push
outs
movs
fld
add
lods
pop
and
jbe
test
repz
xor
inc
or
pop
(bad)
fld
or
push
or
iret
retf
mov
imul
xchg
in
and
cmp
cmc
addr16
ret
sub
aad
or
mov
cmps
push
daa
fimul
fistp
es
pop
aad
jns
fld
push
cmp
(bad)
es
sub
loop
sbb
pop
daa
in
cmps
push
pusha
cmp
add
adc
std
jbe
lods
xchg
int
inc
retf
add
push
loopne
clc
xchg
leave
or
in
aad
retf
test
in
cmps
ror
xchg
push
les
mov
add
rcr
sub
jb
lods
icebp
loop
dec
adc
jle
adc
mov
jb
or
or
fmul
fld
jmp
adc
in
dec
sar
es
or
xchg
clc
sbb
movs
dec
mov
sub
cs
inc
cli
sbb
rol
adc
loopne
ret
(bad)
inc
fisubr
addr16
call
push
xor
out
pop
jns
fist
pop
cwde
icebp
xchg
ins
cmp
fsubr
xchg
mov
dec
iret
cdq
dec
xchg
mov
movs
xor
lahf
sbb
xor
fadd
stc
rol
adc
js
shr
push
xor
xchg
dec
pop
scas
bound
test
shl
adc
dec
div
push
cld
loop
sub
cmc
xchg
(bad)
call
jae
aaa
xor
mov
retf
push
scas
enter
or
in
das
nop
jb
popa
adc
in
sbb
lahf
xor
xor
(bad)
mov
sbb
add
scas
neg
xchg
or
sub
pusha
mov
outs
fcom
(bad)
push
sub
xchg
ficomp
mov
sub
add
sti
push
inc
or
add
cmp
xchg
cld
lea
ja
or
jae
fdivr
retf
mov
xchg
neg
aad
jle
xor
and
stos
je
cwde
adc
xlat
pusha
dec
in
mov
mov
fdivr
mov
add
sbb
pop
daa
add
xchg
jl
ret
and
fbstp
pop
iret
sbb
cmp
(bad)
nop
push
xor
xchg
jae
jge
mov
mov
jge
xor
sub
dec
pop
add
pop
ins
(bad)
aas
popf
ret
pop
stos
adc
out
std
sub
push
mov
xchg
pop
ret
cmc
jae
out
xor
jns
dec
xor
addr16
push
cmp
xchg
sar
loope
push
push
fmul
stc
sahf
fcomp
and
ror
jb
pop
imul
jo
pushf
jmp
sub
mov
sbb
aas
leave
cmp
in
push
pushf
aaa
and
or
push
dec
add
or
dec
jb
mov
adc
push
mov
(bad)
dec
adc
xor
repz
(bad)
hlt
rol
mov
enter
cmp
fiadd
ret
ret
push
int
adc
mov
lahf
fdivrp
pop
or
sbb
icebp
loopne
xchg
enter
imul
jmp
shl
lock
aad
push
clc
scas
das
cwde
(bad)
out
ret
jae
adc
xchg
fnstenv
in
add
push
jle
inc
outs
(bad)
cld
inc
nop
push
push
mov
in
je
push
and
mov
sbb
mov
imul
or
je
jp
sar
mov
call
lds
shl
fnstsw
xlat
or
scas
daa
pop
sar
dec
jmp
fiadd
fldenv
test
test
fimul
sbb
cmp
mov
xor
pop
mov
pop
out
xchg
push
std
lock
push
sbb
(bad)
or
shr
cmovnp
xchg
xor
in
fimul
push
cwde
or
sub
call
in
push
inc
jno
xor
mov
ja
scas
jg
(bad)
xchg
loop
lods
adc
icebp
pop
xchg
xchg
mov
rcr
(bad)
push
xchg
imul
sub
and
lahf
inc
adc
stos
cmp
cmc
mov
fiadd
and
jae
or
xchg
(bad)
in
xor
ins
lea
mov
mov
or
mov
stos
das
mov
mov
xor
movs
push
sub
cwde
sub
xor
or
shl
mov
call
pop
push
(bad)
jbe
ins
dec
je
mov
dec
and
push
xchg
sti
push
jle
hlt
push
arpl
xchg
and
cmp
sti
sbb
(bad)
clc
xor
das
sub
xchg
inc
jns
nop
(bad)
ficom
(bad)
nop
and
div
jmp
(bad)
out
pop
xlat
mov
pop
in
xchg
mov
mov
fwait
add
dec
sti
stos
cmc
daa
push
dec
push
gs
mov
inc
or
test
repz
cld
imul
mov
or
test
mov
pop
cwde
into
jl
inc
mov
outs
sti
outs
xchg
jo
arpl
jmp
add
(bad)
mov
ss
fadd
sbb
mov
aad
lds
pop
dec
sbb
and
int3
pop
sbb
test
pop
jbe
inc
repnz
mov
loope
ja
dec
push
pop
mov
out
mov
adc
(bad)
mov
pop
cli
bound
sub
int
sub
cmp
mov
outs
dec
out
mov
lds
hlt
sub
lock
fs
test
das
xor
jecxz
sbb
jl
test
dec
ins
sub
mov
fnstsw
popf
mov
mov
sbb
ss
and
dec
daa
mov
mov
or
cs
mov
loope
sub
(bad)
mov
push
iret
cmp
inc
or
mov
popa
mov
outs
mov
sbb
retf
sahf
pop
sbb
dec
popa
out
push
das
cmp
or
rol
sar
push
sub
xor
xchg
cmp
push
push
(bad)
pushf
(bad)
add
push
fwait
add
aam
sbb
repnz
and
push
jl
adc
mov
pop
ficomp
mov
cdq
jo
out
into
push
pop
(bad)
stos
jns
ss
sti
adc
aam
dec
int
cmp
push
cmp
inc
push
clc
sbb
adc
jo
sbb
mov
fwait
push
and
mov
xor
add
mov
sub
fisttp
pop
jge
sub
mov
pusha
mov
mov
sub
mov
popf
push
inc
jmp
sbb
sbb
addr16
xchg
jg
gs
sub
push
fsubr
xchg
mov
xor
sbb
int3
or
or
sbb
aaa
arpl
ds
mov
pushf
add
repnz
into
rcl
stos
enter
push
stos
movs
call
mov
inc
jg
mov
adc
mov
(bad)
sar
fwait
pop
cmp
(bad)
stos
int3
rcr
jmp
out
jmp
adc
jl
lods
pushf
inc
push
pop
mov
in
pop
jne
repz
and
pop
mov
jg
ds
cdq
mov
jmp
daa
(bad)
and
xor
jl
ins
sub
inc
int
js
outs
add
popf
mov
imul
cs
sub
or
movs
dec
xor
(bad)
jnp
lahf
dec
jl
sbb
gs
xchg
jns
xchg
ret
imul
xchg
es
adc
jb
mov
mov
ret
or
and
(bad)
out
push
xor
dec
sub
stos
mov
(bad)
pop
cmp
mov
jp
pop
(bad)
sbb
add
and
in
loop
dec
or
movntps
add
jl
xor
pop
aas
ret
mov
pop
cmp
push
sub
cwde
mov
cmp
inc
clc
fs
call
cmc
ins
sub
xor
stos
mov
arpl
jae
daa
xor
xor
(bad)
dec
ret
aaa
outs
fucomip
jns
push
ror
lock
repz
hlt
sbb
sbb
lods
hlt
jo
jns
push
jns
or
lods
sbb
or
inc
repz
cmps
dec
arpl
call
jbe
adc
pop
dec
inc
jo
out
pop
mov
dec
adc
pop
xchg
mov
scas
xchg
movs
pop
and
repnz
das
(bad)
ja
mov
mov
sbb
fwait
dec
syscall
and
imul
pop
inc
aad
sbb
and
lahf
pop
and
cmp
adc
test
test
pop
jg
mov
jp
test
sub
jae
xor
js
scas
ds
pop
mov
sbb
push
repz
jb
mov
jmp
jbe
sub
add
int3
stos
xor
jecxz
and
inc
int3
jle
gs
add
cld
xchg
test
repz
test
sub
cmp
xor
cmp
movs
inc
pop
or
inc
js
or
into
leave
rcr
scas
push
retf
lods
add
rcl
pop
fidivr
adc
lds
or
fdiv
test
or
out
xor
(bad)
and
xchg
rol
cmps
pop
adc
xchg
push
add
repnz
ja
mov
leave
ja
fbstp
les
jge
jae
push
mov
(bad)
mov
sbb
dec
(bad)
jne
xlat
fsubr
outs
mov
push
jne
and
xchg
or
ret
xchg
push
xor
mov
jl
or
fld
jbe
popa
ret
sbb
push
inc
in
in
sub
call
aaa
(bad)
sbb
xor
repnz
mov
call
repnz
fild
mov
ja
nop
arpl
fcmovb
ds
es
fcomp
jo
push
cmp
mov
fild
cs
pop
push
add
sbb
sub
push
push
sbb
aam
inc
jge
mov
sbb
sbb
xchg
out
pop
popa
pop
mov
ret
rcr
mov
mov
add
cmp
ret
rcl
outs
pop
sub
out
lods
pop
in
aad
xor
add
xchg
test
stos
fiadd
nop
popa
mov
ins
jle
jns
mov
and
fwait
es
stos
cmp
dec
add
sbb
pop
or
gs
pop
js
aad
pop
cmp
sub
mov
mov
cmp
sub
fdivr
push
xchg
aam
or
adc
and
jo
mov
jecxz
(bad)
jne
fld
sub
sbb
into
sti
fld
repnz
mov
jb
dec
(bad)
mov
sub
cmps
jle
cmp
outs
ins
loope
push
(bad)
mov
ss
mov
pop
adc
xor
or
outs
pop
jns
loope
adc
adc
imul
fwait
jnp
call
jmp
nop
inc
fxch
stc
jmp
mov
jg
mov
je
test
lea
aad
fwait
popf
sar
inc
adc
das
add
sbb
or
(bad)
pop
lds
and
xchg
scas
js
lods
sbb
pop
add
xor
mov
lds
dec
mov
xor
and
iret
test
jmp
and
inc
jmp
mov
inc
inc
jne
xor
sub
lods
pop
xor
pop
and
loopne
push
cmp
add
out
sbb
pop
sub
je
mov
sub
fdiv
retf
xchg
cmps
mov
retf
mov
popf
scas
(bad)
out
pop
cmp
out
pop
adc
fild
adc
retf
inc
xor
or
adc
sbb
fnsave
jle
sbb
push
fst
icebp
jae
jnp
push
sub
or
sbb
cmps
and
ja
addr16
adc
loope
clc
sahf
mov
stc
add
adc
mov
cli
jne
inc
ficomp
lods
and
lods
iret
mov
test
dec
stc
sub
fcom
fldenv
jp
sbb
mov
(bad)
repz
mov
xchg
cli
mov
jo
sbb
xchg
sub
stos
fs
jns
xchg
add
xchg
jo
add
and
dec
xchg
sbb
adc
lods
(bad)
(bad)
arpl
xor
idiv
in
xchg
push
push
stc
jnp
cmp
pop
add
rcr
mov
sbb
sbb
add
sub
hlt
cmps
push
mov
or
lahf
test
pop
mov
daa
cmp
arpl
mov
jns
dec
mov
dec
xlat
mov
add
je
adc
cld
xchg
and
cmp
sbb
jg
push
cld
mov
ret
fiadd
ret
mov
xchg
cmp
scas
sub
repz
stos
adc
fld
enter
push
pxor
cmp
jo
rol
push
out
repnz
sbb
inc
ror
inc
sar
fild
push
fdivr
jne
in
or
cmp
std
inc
fnstcw
lock
push
add
mov
test
les
or
aam
mov
jl
fwait
or
movs
dec
xor
push
dec
inc
or
jne
nop
jp
repnz
jbe
sub
rcl
push
lock
inc
ror
dec
xor
inc
aad
lds
loop
js
out
loope
out
mov
sub
sub
mov
inc
loope
cmp
mov
sub
cli
(bad)
or
mov
loop
jns
xlat
adc
mov
fldenv
jne
jnp
xchg
(bad)
push
mov
arpl
mov
sbb
cmps
pop
aas
sbb
loope
mov
xchg
jb
pop
dec
push
push
push
xchg
sub
mov
stos
in
rcr
pop
mov
jmp
add
pushf
fisttp
dec
shr
fidiv
inc
cld
sub
popa
adc
mov
add
out
xor
lock
inc
ja
xor
jl
push
push
pop
dec
mov
(bad)
dec
dec
jne
xor
fld
sub
data16
retf
mov
jmp
inc
dec
mov
xor
mov
mov
mov
cmp
movs
popf
cmp
sub
mov
iret
in
cdq
sbb
and
adc
adc
mov
icebp
pushf
aad
push
les
aaa
jge
shl
sbb
stos
pop
xor
mov
clc
nop
sub
iret
cmps
aaa
ds
sub
push
pop
fcmove
pop
int3
inc
retf
sbb
adc
shr
jb
mul
mov
pop
mov
or
sub
push
mov
ja
idiv
push
add
xchg
les
(bad)
mov
cmps
push
iret
outs
or
jb
and
push
jl
sub
aas
jp
xchg
push
outs
sti
aam
ret
or
call
lea
pop
sbb
jp
popa
shl
fdivr
add
mov
mov
jns
fld
push
lea
daa
xchg
push
jo
sbb
aaa
test
lods
lahf
xchg
xlat
or
lods
bound
or
push
sub
jbe
xchg
dec
call
cmp
fadd
inc
pusha
scas
and
jg
mov
imul
dec
push
sar
out
mov
inc
es
sbb
mov
mov
das
and
int3
out
bound
push
arpl
mov
nop
call
jne
jge
inc
sbb
ret
cmc
dec
adc
cmp
mov
add
jo
mov
ja
arpl
sbb
nop
inc
std
push
pop
out
movs
mov
mul
sbb
mov
mov
leave
cmp
lods
and
jns
(bad)
mov
cmp
xor
fst
retf
lock
in
mov
into
add
into
xor
mov
jo
test
xchg
(bad)
push
dec
imul
mov
mov
loope
sbb
adc
mov
dec
jno
jno
popf
xchg
dec
pop
in
jns
sbb
ins
sti
and
xchg
jge
xor
xor
mov
loope
mov
xor
push
xor
div
scas
or
inc
in
jb
and
loop
(bad)
pusha
mov
inc
out
jb
xchg
out
inc
fld
mov
and
lods
fcomp
shl
pop
mov
push
sub
fcomp
mov
sub
enter
popa
mov
outs
mov
xor
arpl
outs
add
pop
scas
add
gs
inc
mov
je
lods
idiv
push
in
cmc
fstp
inc
mov
mov
setne
arpl
push
mov
mov
les
hlt
mov
cdq
call
push
xor
adc
xchg
jmp
inc
inc
dec
mov
adc
sub
in
pop
in
cmp
jnp
fst
outs
retf
arpl
mov
add
in
add
dec
sub
mov
mov
inc
stos
dec
sbb
xchg
xchg
xor
inc
xlat
shl
clc
lahf
int3
iret
in
int
mov
or
lods
sub
shl
jno
xchg
loop
dec
rol
add
mov
jns
xor
shl
inc
push
and
test
test
and
das
xlat
daa
cmp
cmp
xor
pop
jnp
das
repnz
xlat
cmc
aaa
pop
adc
and
outs
inc
push
adc
jne
in
or
push
imul
add
in
lea
cdq
jmp
(bad)
push
aam
cli
ds
xor
arpl
mov
mov
sbb
jmp
out
ins
cs
outs
add
sbb
popa
pushf
movs
jge
inc
fs
inc
stc
or
adc
in
iret
push
push
and
lea
call
push
shl
xor
outs
cmp
push
adc
or
or
hlt
ins
data16
push
test
mov
rcr
xlat
aam
in
pop
adc
or
or
and
cmp
xchg
aam
mov
mov
add
inc
mov
mov
mov
stos
shl
mov
pop
push
iret
adc
jns
mov
inc
neg
fdiv
mov
(bad)
cmp
shl
es
inc
inc
sbb
les
dec
imul
test
test
xor
cmp
adc
mov
and
xchg
push
jns
es
adc
ret
xchg
out
out
mov
mov
inc
sbb
les
shr
push
and
mov
outs
jae
adc
pop
daa
cmp
add
call
cmps
push
dec
jmp
dec
leave
or
inc
push
in
xchg
std
pusha
aad
popf
pop
aad
and
add
out
fs
mov
jmp
sub
loope
pop
inc
(bad)
jp
xchg
mov
sbb
rcr
inc
outs
in
xchg
dec
jge
test
ss
hlt
jl
push
daa
aam
into
repz
mov
mov
fldcw
mov
and
scas
jnp
push
sbb
pop
mov
pop
dec
fstp
pop
pop
sbb
fwait
adc
outs
(bad)
iret
jp
pop
jnp
and
cs
pop
iret
sbb
inc
dec
icebp
fsubr
mov
mov
mov
pop
xchg
leave
jg
mov
dec
cmp
ror
lods
ret
xchg
inc
ret
cmp
sub
enter
xchg
mov
sbb
(bad)
push
(bad)
mov
push
(bad)
cmc
jmp
jle
into
jp
lahf
mov
add
outs
loop
or
jns
mov
push
adc
xchg
jmp
inc
pop
cmc
ret
gs
aad
test
scas
(bad)
jbe
inc
cwde
xor
jle
cs
or
sti
cs
loopne
xor
(bad)
(bad)
js
mov
pop
in
(bad)
sbb
sbb
ss
imul
mov
sub
push
pop
pop
imul
mov
mov
outs
cmc
or
bound
out
mov
movs
mov
popf
cmp
push
adc
aad
sahf
in
pop
fst
test
push
inc
enter
jmp
dec
test
adc
adc
fwait
pusha
jle
mov
xor
ror
and
sahf
out
sbb
mov
hlt
pusha
pop
mov
jno
push
jnp
fidivr
pushf
sub
add
test
scas
push
std
sub
(bad)
jge
je
out
xchg
popa
call
(bad)
sti
retf
retf
cmps
popf
mov
cs
mov
aas
cmc
sbb
or
movs
mov
das
in
inc
inc
popa
jg
retf
ss
jge
xor
dec
shr
add
mov
xchg
mov
test
or
mov
xchg
adc
dec
mov
fcom
ds
xor
jmp
int
scas
inc
or
das
test
mov
jecxz
cs
cmp
shl
scas
mov
movs
test
(bad)
push
shl
fisub
pop
or
cmp
xchg
xchg
loopne
test
cdq
jae
repnz
add
mov
xor
mov
ins
xor
ror
je
daa
sbb
fldenv
mov
pop
test
cmp
and
cs
in
iret
out
clc
scas
pop
jae
jb
push
imul
fcmovnb
add
movs
push
add
add
shl
imul
dec
mov
iret
jnp
lahf
cmp
dec
mov
cmpxchg
shl
sbb
adc
add
sar
adc
cs
mov
adc
in
mov
outs
test
test
(bad)
(bad)
arpl
rol
in
sar
movs
mov
out
popa
pop
mov
sbb
and
fisttp
inc
imul
je
push
mov
push
repnz
sbb
data16
sub
jne
daa
mov
les
mov
mov
push
and
jl
jnp
mov
or
popa
mov
xchg
in
sub
popa
in
les
inc
movs
daa
int
mov
and
push
jbe
or
ins
dec
lods
mov
xor
and
loope
fist
sbb
mov
(bad)
fstp
dec
add
out
sub
mov
mul
arpl
push
mov
xchg
repz
inc
stos
(bad)
pop
lock
xchg
sub
push
leave
jbe
clc
stos
es
(bad)
push
in
dec
push
add
and
adc
xchg
dec
fistp
hlt
sbb
sbb
and
lds
retf
mov
cmp
lea
jbe
jnp
das
sub
adc
jo
rol
(bad)
test
xor
ror
lods
push
cld
jne
ret
add
xchg
xchg
fs
add
stc
jb
dec
inc
scas
cli
jno
pop
push
dec
jb
or
sub
lea
mov
stos
and
or
in
push
bound
or
push
mov
nop
xchg
test
mov
xchg
scas
push
xchg
popf
and
sbb
test
dec
shl
test
inc
arpl
sub
pushf
jbe
daa
and
adc
mov
daa
out
ret
jge
and
fdiv
dec
jge
adc
fcmovbe
or
xchg
push
test
popa
jecxz
or
out
xchg
or
mov
pop
ins
cmp
mov
stos
lds
aam
pop
in
mov
mov
dec
push
xchg
jns
aaa
scas
(bad)
xlat
fdiv
jno
aas
and
nop
idiv
xor
dec
cmp
jo
cmc
lea
rol
popa
aas
push
bound
push
or
in
xchg
inc
xchg
ds
push
xor
nop
aam
ins
inc
adc
sbb
mov
push
ins
jmp
add
add
jnp
shl
jnp
pop
fwait
inc
popf
inc
mov
dec
shr
hlt
fldenv
stc
push
or
cdq
mov
cmp
dec
jno
jns
xor
imul
enter
xchg
std
(bad)
mov
cmc
cmp
aaa
mov
dec
ins
mov
mov
xchg
fnstcw
es
sub
mov
jle
repnz
and
fdiv
cmp
movs
push
jl
add
xor
ja
add
mov
imul
jae
test
je
shr
cmps
cmp
add
(bad)
cli
xor
(bad)
int
pop
mov
cmp
or
mov
(bad)
ins
cmp
outs
popf
(bad)
in
mov
xor
jno
rol
ins
inc
mov
adc
arpl
ja
mov
ins
jbe
cdq
nop
pop
pop
jmp
fld
xchg
xchg
imul
scas
(bad)
fwait
adc
imul
pop
adc
imul
dec
pushf
and
repnz
in
mov
sbb
inc
call
xchg
cmp
and
les
pop
jmp
cwde
lock
dec
gs
test
pop
inc
push
addr16
pop
das
xchg
jne
lods
icebp
mov
cmp
out
push
cs
or
cmps
(bad)
adc
mov
add
imul
fisttp
and
ja
inc
or
pushf
call
cs
xchg
mov
mov
xchg
mov
sub
jecxz
or
inc
or
sbb
pusha
stos
adc
ss
sub
pop
mov
mov
vshufpd
iret
push
xchg
shr
es
into
mov
mov
or
mov
jno
jmp
movs
ja
cld
or
push
add
add
inc
sub
push
popa
das
jnp
jmp
cmp
adc
cmp
pop
fwait
sub
mov
les
and
push
jno
(bad)
retw
inc
or
or
aam
and
cmc
imul
(bad)
jno
(bad)
fbstp
lock
imul
pop
push
hlt
neg
out
inc
add
mov
shl
mov
shl
icebp
repz
push
rep
repz
aaa
stc
out
dec
ds
scas
pop
push
pushf
pushf
ds
data16
jle
jns
adc
or
xchg
mov
pop
in
and
sub
retf
dec
inc
mov
inc
xchg
mov
cmp
mov
in
retf
push
sbb
(bad)
xchg
fstp
jg
ret
call
pushf
dec
dec
pop
pop
das
out
loop
adc
sbb
cli
leave
cmp
imul
(bad)
int
call
lods
fdiv
(bad)
sahf
aas
mov
ret
mov
jp
test
inc
xor
xchg
jbe
mov
into
gs
(bad)
sub
jbe
addr16
jmp
ret
movs
imul
push
and
dec
ins
cmp
mov
ins
js
pop
ss
rcl
(bad)
and
daa
fidivr
fbld
fwait
mov
aaa
or
ret
(bad)
push
inc
les
(bad)
cli
sub
pop
bound
aam
shl
mov
cld
ins
add
(bad)
int3
mov
dec
loop
or
jbe
xor
retf
neg
ror
cmp
rcr
lock
leave
addr16
mov
sbb
or
mov
push
xchg
push
outs
jmp
add
mul
pop
ds
xchg
stos
out
data16
(bad)
addr16
fild
dec
lahf
xchg
(bad)
mov
add
(bad)
imul
js
inc
popf
mov
cmc
neg
gs
ror
push
jnp
xor
dec
rcr
psllq
jno
add
sub
retf
ficom
mov
xor
mov
add
ins
imul
sbb
adc
mov
clc
mov
inc
addps
call
js
and
mov
lds
jecxz
dec
pop
and
sbb
hlt
xchg
call
fist
scas
or
into
in
imul
dec
mov
nop
pop
imul
xchg
popa
div
clc
test
jmp
and
sti
sbb
aam
test
cmp
ret
scas
mov
jae
and
je
test
add
retf
push
add
xchg
lock
xchg
cmps
inc
mov
in
mov
sub
push
jl
imul
adc
adc
pop
mov
sub
dec
cmp
push
test
mov
lds
hlt
add
dec
mov
hlt
adc
scas
pop
jp
jmp
xlat
fdiv
fld
leave
adc
mov
call
dec
leave
jo
inc
lods
push
dec
mov
pop
sbb
add
add
leave
dec
icebp
aaa
aaa
pushf
and
cmp
xchg
or
push
xor
sti
ficom
bound
adc
int3
(bad)
hlt
loopne
mov
xchg
cmp
sbb
fdiv
push
and
xor
jne
pop
or
call
cli
mov
push
or
(bad)
mov
add
pop
enter
daa
(bad)
cmp
test
popa
daa
add
int
fisttp
iret
push
inc
ds
xor
fcom
fbstp
test
cmp
inc
stos
jo
in
fs
daa
out
push
out
retf
jge
in
fst
mov
data16
dec
rol
loop
and
and
lods
pop
cwde
daa
imul
shl
or
xor
dec
test
pop
test
call
mov
and
jne
mov
mov
(bad)
stos
push
stos
push
popf
aam
loop
pop
pushf
imul
cmp
leave
dec
js
mov
xor
stc
sub
sbb
mul
bound
pop
pusha
mov
xor
ins
and
inc
mov
in
and
lods
call
cli
mov
retf
adc
ja
mov
retf
je
xchg
pop
inc
or
es
aas
inc
pop
jo
(bad)
arpl
(bad)
out
call
xchg
hlt
mov
sbb
push
cld
movs
mov
and
ror
sub
das
cmp
sbb
fcmovb
(bad)
fwait
push
test
mov
push
pop
imul
pop
jg
imul
loop
sti
enter
push
mov
dec
jne
pushf
call
fst
and
in
retf
idiv
test
(bad)
jg
sahf
mov
fsub
fcomp
jo
pop
cwde
pop
xchg
adc
fdiv
inc
leave
pusha
outs
push
aam
fdivrp
(bad)
and
into
mov
add
movs
inc
ss
bound
(bad)
in
(bad)
pusha
outs
popf
push
xor
lock
int
scas
bound
std
jmp
xchg
in
mov
mul
jl
sbb
pop
mov
js
or
push
imul
mov
inc
mov
mov
jmp
ficom
push
fild
jb
jmp
jp
ja
fnstenv
leave
mov
cdq
(bad)
pushf
jnp
pop
jge
rcr
call
push
push
inc
int
ins
stos
push
mov
das
push
and
jno
sub
mov
dec
fisttp
fmul
mov
cmp
jo
sub
jmp
fucomp
leave
outs
pop
mov
faddp
cmp
aad
mov
or
icebp
test
clc
jg
leave
cs
fdivr
mov
mov
mov
jle
push
mov
xchg
test
and
or
test
int
out
fild
nop
push
test
pop
mov
retf
movs
daa
push
fnop
xlat
les
iret
jmp
icebp
(bad)
sbb
movs
(bad)
sub
inc
(bad)
xor
and
mov
cmps
xchg
stos
jge
aad
xor
add
mov
and
jb
adc
stos
sub
xchg
hlt
xor
jmp
sub
mov
dec
ss
cmp
sub
cmps
jecxz
pushf
jl
sbb
pop
aaa
jne
lea
pushf
movs
jb
inc
fstp
lahf
(bad)
fstp
add
mov
inc
pop
jle
lods
mov
add
jp
(bad)
out
jge
das
or
pop
pop
or
and
and
xor
xor
xor
push
xchg
iret
inc
ss
cmp
retf
sbb
mov
bound
jle
xlat
popa
jg
jge
push
cs
es
clc
adc
loopne
jl
(bad)
pop
imul
test
dec
cmp
push
push
mov
cmp
cli
enter
dec
arpl
(bad)
frstor
jl
cmp
mov
or
or
aas
vcvtps2dq
dec
arpl
inc
jno
jmp
movs
rol
pop
cmp
and
lock
int3
cdq
mov
or
stos
cmp
mov
sbb
retf
inc
dec
pop
inc
mov
and
mul
jo
sbb
or
out
push
mov
loop
and
sbb
inc
lock
adc
sbb
in
imul
or
adc
movs
idiv
mov
pop
hlt
(bad)
jmp
sub
pop
sub
add
stc
inc
mov
jge
xor
repz
pop
add
xchg
xchg
mov
dec
ja
push
data16
mov
adc
clc
(bad)
xchg
clc
loopne
or
int3
cmp
xor
or
and
fstp
jne
popf
repnz
dec
sbb
ret
mov
hlt
js
(bad)
cmp
into
and
int
ficomp
stos
cmp
jno
aaa
xlat
and
nop
test
xor
fld
or
js
xchg
cdq
mov
in
loopne
scas
ret
sub
ror
test
outs
(bad)
xor
lods
xor
movs
mul
xlat
dec
sbb
sub
lahf
jo
cmp
and
xor
jmp
sub
fsubr
add
lods
test
cmp
jns
fild
or
pusha
nop
test
or
js
(bad)
add
pushf
dec
(bad)
adc
push
sti
inc
and
xchg
bound
or
cdq
lock
jb
mov
stc
cmp
aas
fs
rol
adc
or
push
cdq
daa
ds
sub
aas
stc
xor
adc
xchg
inc
add
and
mov
mov
out
scas
dec
lahf
cs
pop
int3
cmps
aas
hlt
jmp
mov
lock
pop
jae
cld
std
not
lock
pop
aam
icebp
mov
pop
scas
jmp
mov
dec
cmc
cld
lods
push
push
add
inc
jge
dec
pop
sub
push
pop
mov
imul
push
adc
pop
mov
sub
pop
push
xor
mov
sbb
movs
jnp
shl
jge
iret
and
aad
enter
call
pushf
and
stc
jns
cwde
mov
call
jg
pop
mul
repnz
lods
or
nop
dec
mov
jno
mov
or
cs
lods
ret
sbb
add
ror
xor
inc
xor
cmp
(bad)
fmul
add
stos
xchg
enter
jb
jae
add
jne
or
shl
cmps
pop
jmp
push
sub
xchg
pop
and
inc
push
sbb
ret
xchg
icebp
fsubr
inc
mov
mov
scas
pop
xor
dec
imul
and
popf
xchg
mov
leave
and
push
lods
jo
push
mov
jl
cmp
xor
add
sbb
jp
jecxz
stos
and
loop
push
sbb
in
ins
jno
jmp
and
dec
sbb
pop
mov
std
pop
mov
cs
cmp
jb
sbb
mov
jns
and
adc
add
lock
gs
outs
push
(bad)
add
or
fs
mov
mov
fild
out
fisub
pop
push
xchg
dec
mov
or
stos
ja
mov
sbb
mov
rcr
or
jl
mov
mov
mov
out
cmp
mov
jo
imul
push
push
ret
sub
pop
out
sbb
pop
mov
and
or
jmp
nop
out
sbb
add
mov
scas
jge
call
lods
ins
dec
test
test
xchg
adc
les
out
mov
mov
push
rcl
ret
fcomp
test
sub
nop
js
push
and
lods
enter
xchg
cli
jne
imul
add
fwait
xchg
shl
and
repnz
in
cdq
out
(bad)
xor
dec
adc
fist
sub
out
dec
xor
adc
cmp
inc
in
movs
outs
jne
int3
mov
xlat
call
not
mov
out
dec
lods
push
out
jns
pop
(bad)
popa
call
jl
enter
in
in
movs
xchg
cli
mov
cli
test
aas
pop
mov
(bad)
or
add
addr16
pop
and
adc
adc
xchg
imul
retf
aad
or
retf
cmc
mul
sub
mov
mov
mov
mov
test
ins
add
jbe
lods
jp
cmp
xchg
(bad)
loopne
mul
mov
mov
add
mov
push
dec
jo
rcr
xchg
not
sub
mov
and
shl
shl
inc
and
pop
sub
aaa
outs
adc
std
inc
or
les
mov
aad
adc
push
lahf
sbb
ficom
mov
call
lock
je
int3
retf
pop
fs
add
dec
fcom
jl
push
push
sub
call
jb
icebp
add
push
add
fidiv
or
mov
dec
sbb
ret
in
in
jg
imul
popa
cmp
xchg
dec
xlat
iret
out
or
in
and
xchg
push
pop
ret
adc
daa
test
into
cli
dec
xchg
out
out
sbb
pushf
shr
xchg
xor
or
mov
or
and
cmp
sbb
adc
xchg
add
pusha
add
xchg
nop
dec
push
es
js
outs
jecxz
lock
xchg
hlt
mov
aad
nop
mov
pop
(bad)
xlat
test
xchg
in
sub
mov
jmp
pop
dec
mov
scas
jle
adc
cmp
jmp
div
retf
jne
sbb
fldenv
movs
lahf
dec
jns
and
lods
xor
les
push
mov
fwait
or
xlat
ins
dec
int3
scas
retf
repz
out
(bad)
xor
cwde
mov
jge
int3
fsub
aam
shr
mov
in
mov
mov
push
daa
adc
push
leave
bound
mov
sbb
movs
xchg
adc
test
mov
popa
cmps
cmp
js
and
push
enter
or
icebp
stos
stos
pop
inc
adc
pushf
movs
scas
cmp
mov
lahf
and
sbb
call
sar
xor
ja
scas
fmul
in
cmps
xchg
sub
test
scas
stc
xchg
das
and
lods
adc
sub
imul
or
dec
jmp
mov
ret
mov
push
jmp
lock
jb
xor
fsubr
jg
stc
adc
jnp
out
rol
ffree
ja
jbe
xor
xlat
test
mov
cdq
jno
scas
pop
outs
leave
popa
aaa
cld
pop
mov
xchg
ror
jecxz
sbb
cli
call
push
iret
int
test
sbb
add
cmp
imul
xor
(bad)
jnp
out
ja
aaa
mov
fld
test
(bad)
enter
jbe
xchg
out
dec
(bad)
in
and
ffreep
or
sbb
add
pop
bound
and
and
adc
push
call
sub
jg
fnstsw
jns
retf
pusha
test
mov
jl
fnstcw
inc
popf
das
out
xor
out
jne
lea
in
enter
aaa
cld
adc
mov
ss
or
fdecstp
add
xchg
xlat
inc
mov
loop
iret
ins
mov
pop
or
test
call
aam
imul
cs
or
jb
xchg
sub
lock
ficom
inc
retf
mov
stos
push
shr
mov
xchg
xor
mov
push
aaa
sbb
pop
dec
or
dec
call
nop
mov
shl
xchg
ins
xor
sub
or
mov
test
push
popa
sbb
push
mov
add
aam
push
fstp
dec
mov
in
pop
std
lds
sbb
mov
out
popa
mov
cmp
inc
gs
and
out
and
dec
es
adc
xchg
xchg
mov
mov
push
in
cld
jle
sti
fdiv
cmp
inc
dec
jp
(bad)
iret
mov
pop
cmp
and
jp
cs
jecxz
mov
xlat
out
jle
or
adc
cld
or
cmp
or
pop
cli
and
adc
data16
jge
xchg
fsub
rcl
jae
int3
cdq
stos
xchg
pop
rsm
enter
es
nop
loopne
addr16
jo
pushf
pop
ss
sbb
test
loopne
xor
icebp
or
lahf
dec
push
mov
mov
stos
outs
mov
fidiv
std
cmp
jecxz
enter
jle
popa
rep
fdiv
cdq
in
sbb
push
inc
push
iret
jne
cli
sbb
cli
or
movs
loop
icebp
xchg
dec
mov
in
in
push
mov
inc
adc
push
cmp
pop
mov
push
movs
jnp
cmp
mov
js
jb
xchg
push
sbb
adc
mov
cmp
push
jbe
add
jns
loope
cmp
call
push
fwait
xchg
nop
push
mov
ret
popf
jb
test
rcr
adc
and
inc
cmc
ja
push
and
mov
jl
push
int
call
cmps
pop
nop
jmp
fnstsw
mov
loop
dec
sub
xor
outs
xchg
add
add
xchg
in
push
repz
mov
aas
rcr
or
inc
retf
aad
jl
mov
shl
cld
femms
mov
sar
xchg
add
inc
sbb
sub
adc
pop
ss
sub
push
sbb
mov
add
enter
and
xchg
mov
jne
mov
xor
or
jno
push
std
cmp
fst
pop
addr16
fcomp
repz
(bad)
out
dec
idiv
jnp
nop
cmp
addr16
sbb
or
js
mov
in
fild
aad
dec
inc
movs
jno
in
xor
xchg
js
mov
jecxz
loope
shl
movs
and
xor
cld
push
scas
fiadd
or
jae
ror
push
addr16
pop
sub
test
in
pop
add
mov
shl
adc
arpl
mov
and
adc
mov
sahf
icebp
inc
xor
into
or
jmp
mov
in
or
mov
dec
clc
cmps
add
shr
pop
mov
push
sbb
xor
cmp
dec
sti
out
imul
dec
fs
xchg
jnp
inc
push
loope
mov
xor
movs
lods
push
pop
inc
xlat
out
sbb
mov
sbb
in
and
ins
rcl
retf
mov
dec
cs
in
jmp
gs
ret
mov
adc
sub
jl
add
or
cmc
pop
(bad)
leave
mov
sahf
xchg
imul
fcmove
and
or
or
mov
inc
mov
sbb
jb
push
lar
hlt
xor
in
(bad)
clc
stos
and
jp
push
add
dec
loop
dec
jmp
inc
jne
call
fld
(bad)
arpl
dec
inc
lock
sbb
aam
push
sub
pusha
call
or
cmp
mov
test
jmp
das
or
jp
adc
or
jmp
scas
inc
lods
sbb
test
bnd
leave
xchg
xchg
jecxz
or
pop
cdq
jmp
jmp
retf
and
les
jle
sub
mov
outs
push
pop
popa
push
fcmovb
mul
or
call
test
lds
cmp
sbb
xor
mov
lahf
(bad)
lods
ror
imul
sub
add
jmp
sti
sub
mov
into
xchg
scas
lods
aaa
push
movs
cs
xor
cs
mov
mov
inc
push
push
cwde
pop
fmul
add
xor
stos
dec
adc
enter
xor
push
ret
cmc
jg
push
icebp
fcomp
sti
mov
in
cs
out
in
adc
xor
or
mov
lods
rol
pop
xchg
arpl
mov
std
xor
loope
adc
ret
and
dec
mov
xchg
xchg
cmp
shr
stc
xchg
ins
add
mov
add
mov
xor
fsub
xchg
pusha
bound
bound
lods
mov
xor
jae
push
xor
ds
inc
ficom
adc
sub
imul
lea
add
repz
retf
scas
mov
jae
dec
add
mov
shl
(bad)
arpl
and
mov
test
lds
mov
inc
fwait
inc
sbb
xchg
sbb
mov
loop
sub
and
dec
es
shr
cmps
cmps
jns
mov
div
inc
loopne
fild
(bad)
dec
fwait
test
cmp
inc
mov
pop
inc
rcr
jp
pop
out
arpl
out
push
or
push
dec
icebp
jl
retf
lods
xchg
lods
sub
sub
shl
ret
cmp
mov
stos
xchg
out
mov
movs
sbb
fistp
jae
scas
jnp
push
lods
add
and
test
movs
adc
jnp
ss
call
cwde
xchg
push
imul
sbb
pop
or
(bad)
movs
bound
fbld
pop
nop
push
jmp
xchg
add
xchg
push
das
mov
in
ss
call
cmp
(bad)
(bad)
sbb
cmp
out
in
bound
and
addr16
ret
mov
mov
sub
xor
ins
cld
mov
imul
aam
cmp
lock
pop
pop
je
movs
cs
movs
pop
outs
xor
adc
push
(bad)
rol
inc
jmp
shl
add
pop
scas
lods
fiadd
jl
jle
(bad)
iret
test
fst
pop
out
adc
dec
xor
popf
mov
pop
das
pushf
cmp
lods
jecxz
and
pop
cmc
scas
xor
dec
push
out
cmc
xor
(bad)
in
in
push
ror
adc
(bad)
dec
stc
sbb
pushf
lods
jns
add
scas
inc
sbb
push
call
ja
out
fst
mov
loop
fcomi
inc
jnp
jp
push
mov
mov
or
data16
ror
xlat
sbb
jo
out
mov
mov
adc
or
and
mov
dec
cmps
pop
mov
scas
std
clc
mov
cmp
imul
test
add
xchg
mov
iret
fimul
outs
inc
pop
pop
and
mov
aad
leave
sub
dec
jns
je
push
jmp
stos
push
js
shl
mov
ja
inc
push
push
aad
jle
outs
add
scas
ret
push
(bad)
in
push
or
sbb
pop
in
outs
call
push
imul
enter
into
inc
std
cli
loope
mov
inc
mov
xlat
pop
mul
cwde
cmp
ret
add
shl
adc
aas
and
enter
sub
fs
xlat
cmp
mov
inc
mov
ret
cmp
mov
in
sbb
adc
inc
pop
shl
pop
and
xor
sbb
jne
push
mov
dec
push
inc
iret
xchg
popf
jo
mov
pop
inc
xor
stos
inc
stc
cmp
cdq
pop
sbb
xchg
sbb
call
push
aam
jle
imul
gs
nop
cmc
movs
jno
mov
xor
popf
cmps
psrlw
in
pop
dec
(bad)
out
out
push
push
(bad)
(bad)
shl
rol
mov
and
xchg
add
arpl
ja
or
mov
lods
shl
cmp
sub
or
addr16
sub
mov
xchg
adc
std
iret
inc
cmp
test
cmp
sar
jo
or
popf
xchg
cwde
jge
lods
stos
loopne
jb
dec
and
jmp
outs
mov
call
cmps
xchg
retf
loope
sub
and
outs
test
cmp
add
shl
pop
scas
sub
jp
scas
fdivr
pushf
push
add
xchg
cmp
ds
imul
in
(bad)
jb
push
outs
fdiv
xchg
jno
mov
mov
hlt
outs
add
and
and
and
hlt
or
fnstsw
out
xchg
xor
pushf
inc
out
adc
lods
xchg
enter
mov
pusha
std
push
pop
popf
mov
xchg
test
shl
or
mov
push
enter
stc
mov
shl
mov
mov
xchg
lds
xlat
sub
push
fsubr
ds
lahf
(bad)
scas
ins
adc
jle
fistp
sar
stos
mov
and
aaa
(bad)
and
jae
stc
add
jo
je
sysret
icebp
xor
adc
sbb
mov
push
call
mov
adc
add
sbb
mov
pop
ds
cwde
push
shl
mov
sti
add
mov
outs
sbb
adc
jnp
pushf
fdivr
jp
mov
dec
jmp
pop
pop
xchg
fdivr
pop
aam
pop
inc
adc
xor
mov
or
ins
add
mov
push
inc
pushf
inc
jle
add
icebp
or
mov
jmp
jne
rol
and
adc
nop
mov
pushf
and
push
mov
cmps
int3
jo
add
or
xchg
dec
rcl
pop
sbb
xor
dec
test
mov
inc
call
jnp
push
and
sbb
or
clc
cli
cmp
inc
jmp
std
call
sub
cs
test
and
lods
push
pop
adc
lea
and
ins
mov
mov
fiadd
nop
lods
and
bound
dec
jge
or
mov
sbb
cmp
inc
retf
sbb
inc
mov
out
int
outs
xchg
inc
mov
fbstp
or
dec
adc
push
adc
stos
cmps
or
and
call
(bad)
sbb
mov
pop
(bad)
aad
inc
mov
iret
stc
add
test
addr16
sub
cdq
mov
out
mov
or
jo
push
xor
or
cmc
xchg
mov
or
jmp
stc
pop
(bad)
retf
pop
fwait
sbb
xor
and
xor
mov
cmp
out
mov
or
sbb
xchg
div
xlat
sbb
retf
push
push
inc
mov
lahf
pop
cmp
cli
sar
int
(bad)
gs
aad
jns
pushf
add
(bad)
mov
cmps
xchg
push
sbb
adc
sbb
jb
(bad)
cmc
cmp
pop
mov
jg
test
push
(bad)
adc
jmp
inc
fidiv
loop
aam
and
aas
xlat
adc
inc
es
popa
mov
xor
and
xor
xchg
mov
lock
mov
ror
sbb
push
cmps
stos
sbb
jmp
pop
push
jmp
adc
popa
pop
sbb
push
out
push
adc
add
mov
ret
psubusb
pop
sti
xchg
lea
mov
cmps
mov
xchg
stc
dec
lock
push
mov
test
jecxz
adc
movs
out
ret
mov
idiv
sbb
call
mov
sbb
mov
imul
std
xchg
sti
cli
sub
jnp
aad
scas
ja
mov
and
repnz
dec
sbb
and
inc
push
jo
xor
test
xor
std
cmp
cmc
pop
rcr
mov
mov
sbb
pop
inc
rol
data16
out
pop
jmp
xchg
test
mov
pop
inc
xchg
aam
cmp
xchg
jo
xor
mov
je
jno
sub
push
(bad)
sbb
fst
push
fcomp
pop
je
mov
ficom
hlt
ins
inc
out
mov
pop
mov
pop
sub
js
inc
retf
shr
fs
les
scas
pop
xor
call
and
fstp
sar
push
sbb
jmp
push
jmp
addr16
lods
scas
clc
fdivr
and
fs
adc
dec
outs
jmp
jecxz
pop
jnp
lea
test
or
push
movs
ffreep
imul
or
sub
mov
seto
gs
lds
inc
mov
and
mov
imul
push
les
mov
repnz
dec
jp
xor
jns
xor
neg
inc
addr16
push
js
xchg
pop
mov
scas
sbb
jo
repnz
pop
and
or
lods
es
daa
movs
movs
inc
pop
mov
inc
fs
test
push
push
mov
loope
push
dec
cdq
sub
pop
sub
inc
idiv
xor
inc
jb
movs
cmps
sbb
(bad)
and
leave
rcr
call
dec
movs
xor
or
pusha
(bad)
mov
in
div
fnstsw
call
jg
ret
lock
out
add
push
stos
or
xchg
int3
movs
fs
fcomp
mov
inc
in
add
mov
loop
pop
outs
and
xlat
inc
push
jae
test
mov
imul
test
pop
retf
dec
xchg
add
cmp
or
sti
xchg
push
cmps
add
jno
rcl
mov
jge
ins
add
jae
push
add
xchg
mov
lahf
push
in
fwait
xor
cmp
aaa
push
inc
sbb
js
mov
mov
mov
rcl
loopne
adc
inc
pavgw
push
adc
leave
nop
sub
jp
dec
push
add
cmp
push
dec
jge
enter
scas
prefetchnta
jno
sbb
inc
fsubr
mov
mov
xor
imul
push
fild
sub
outs
push
ror
dec
sbb
ror
cld
mov
scas
mov
pop
aad
sub
sahf
rcr
push
popa
sub
inc
xor
rcr
loope
xchg
clc
mov
add
loopne
push
inc
fisub
pop
mov
sub
fiadd
cmp
cdq
fimul
lds
push
xor
mov
xor
loop
test
xchg
push
outs
dec
inc
lds
sub
js
in
cld
hlt
xchg
popf
stos
lahf
arpl
push
mov
movs
mov
out
cmc
ss
inc
fwait
popf
pop
aas
inc
fldenv
adc
jmp
dec
lea
pop
jg
loope
mov
push
jno
inc
and
pusha
jne
and
stc
xchg
lods
pusha
and
xchg
jle
loop
jle
ins
out
idiv
and
dec
jmp
int
inc
lock
mov
mov
inc
inc
add
xor
sub
test
sbb
mov
enter
in
add
sti
ret
cmp
sbb
pop
xor
lods
inc
(bad)
jb
je
sar
jbe
inc
inc
stc
repz
ret
aaa
out
dec
cmp
out
ins
fadd
and
jnp
push
sbb
push
push
add
jns
adc
add
inc
or
mov
jp
test
mov
dec
dec
imul
test
add
popf
mov
push
fsubr
dec
add
sbb
xchg
sub
cmc
jp
push
ins
(bad)
mov
in
lock
push
inc
push
(bad)
adc
pop
lock
and
sbb
pusha
lock
mov
mov
mov
fdiv
pop
ss
sahf
and
pop
jnp
(bad)
sub
or
or
jno
xlat
pusha
ficom
jl
and
hlt
out
push
test
cmps
test
pop
mov
push
popa
inc
pop
nop
push
jae
adc
xchg
daa
sbb
jge
jae
mov
pop
mov
fwait
or
sub
sbb
cmp
jecxz
cmp
push
pop
push
adc
daa
inc
add
(bad)
fwait
(bad)
push
out
adc
adc
fisub
dec
fcom
sbb
aam
inc
sbb
dec
out
push
jle
ins
loope
inc
test
test
mov
jb
mov
leave
adc
in
sbb
or
mov
sub
jp
(bad)
cmc
outs
inc
sbb
mov
dec
push
cmp
add
mov
fwait
adc
and
xor
inc
movs
neg
and
adc
pop
dec
lods
cs
enter
frstor
xchg
dec
cmp
jae
jl
mov
in
mov
movs
arpl
mov
and
call
push
mov
push
stos
imul
iret
dec
daa
lods
lds
push
fadd
adc
and
loope
imul
adc
hlt
adc
outs
add
mov
dec
enter
cld
mov
cwde
adc
test
arpl
jb
jo
mov
jne
inc
jecxz
fs
adc
inc
cmp
(bad)
scas
mul
jp
ss
adc
cld
xchg
xor
cmps
jbe
push
fcomp
popa
inc
(bad)
call
sub
into
mov
jge
pop
mov
xlat
or
jg
enter
aam
retf
movs
fwait
xchg
mov
les
push
lock
rol
clc
mov
pop
stos
hlt
adc
cmps
lahf
or
pop
cmp
fiadd
cld
add
rcl
mov
frstor
push
sub
lds
jp
xchg
fucomp
pusha
jno
outs
mov
jg
fisttp
arpl
outs
(bad)
aaa
push
aam
(bad)
imul
jmp
in
push
xlat
test
into
jbe
xchg
outs
nop
or
shr
dec
mov
push
mov
cmps
mov
enter
leave
cli
popa
adc
pop
aam
aam
lahf
mov
loop
mov
add
imul
gs
hlt
inc
mov
pop
pop
(bad)
sahf
jo
clc
movs
hlt
xor
sub
hlt
xchg
adc
adc
xlat
add
dec
xchg
fbld
sub
or
mov
mov
lahf
jge
movs
mov
xor
fdiv
jb
das
fbstp
sbb
mov
aad
or
sub
aad
cmc
loop
inc
sbb
sbb
fcomip
pop
jp
dec
push
scas
cmps
movs
cmc
sub
mov
call
js
mov
sub
add
mov
mov
pop
xchg
fwait
mov
mov
mov
mov
mov
xchg
shl
test
mov
xchg
(bad)
aas
xor
and
and
fsub
fsubp
push
adc
pop
mov
(bad)
pushf
mov
test
jo
das
retf
adc
pushf
push
and
retf
fsub
arpl
loop
sub
scas
pop
pop
ret
pop
mov
movs
push
add
mov
sub
out
push
cmps
clc
mov
sbb
mov
mov
inc
adc
pop
mov
xor
or
clc
fist
add
cmp
mov
loopne
fwait
(bad)
cwde
xchg
je
or
mov
inc
nop
add
hlt
cs
loope
mov
faddp
mov
mov
mov
xchg
xchg
inc
sub
and
test
movs
pop
(bad)
in
imul
and
dec
push
mov
in
add
out
imul
jg
sub
or
imul
mov
push
cld
mov
stos
jle
shl
dec
xchg
daa
dec
push
dec
test
cli
out
rcr
adc
jmp
stos
arpl
loopne
push
pop
push
cmp
mov
cmp
mov
fstp
cs
adc
cmps
and
mov
(bad)
gs
mov
pop
test
or
mov
out
lods
pushf
stc
pop
pop
cmp
ret
xor
dec
nop
push
mov
jae
pop
fistp
imul
mov
add
mov
out
lahf
outs
add
into
out
mov
xchg
bound
mov
test
inc
stc
mov
xchg
xchg
xor
and
arpl
fnsave
aaa
rcr
mov
rol
scas
iret
sbb
stos
popa
hlt
lods
push
and
mov
mov
scas
sar
sub
push
pop
or
mov
inc
push
mov
outs
jge
test
inc
jmp
lds
push
pop
mov
test
in
bnd
cdq
ss
arpl
mov
loopne
ss
push
xor
shl
into
mov
cmps
xchg
push
out
sbb
in
(bad)
and
stc
test
cmps
aam
and
scas
in
mov
je
lds
or
push
and
dec
push
sbb
in
pop
fdivr
(bad)
mov
mov
(bad)
shl
fsubr
sub
mov
lock
outs
mov
imul
pop
cdq
fsubr
mov
push
repnz
dec
(bad)
push
mov
dec
mov
fs
pusha
pop
and
or
mov
ficom
mov
inc
push
xor
inc
push
adc
cmp
test
jns
inc
iret
retf
inc
sub
ficom
xchg
leave
fmulp
inc
inc
sub
icebp
inc
mov
push
and
lahf
push
fisubr
retf
sahf
mov
and
std
or
mov
mov
test
movs
std
mov
xchg
adc
xor
mov
lahf
sbb
push
push
sub
mov
out
hlt
push
test
or
nop
aad
int3
and
sbb
test
or
ror
cmp
(bad)
mov
in
cmp
(bad)
and
imul
xchg
add
mov
push
std
dec
movlps
retf
sub
(bad)
or
bound
push
push
jns
icebp
cmp
cwde
xchg
inc
loop
cmp
fisub
mov
cs
repz
mov
dec
fldenv
in
mov
ins
movs
dec
cmp
xchg
retf
jmp
(bad)
not
adc
or
xchg
push
xor
xor
rcr
lahf
in
in
xor
xor
and
xchg
xor
outs
(bad)
or
adc
clc
test
out
jb
retf
mov
adc
aas
pop
ret
rol
popf
sub
push
sbb
xchg
add
test
loopne
mov
loope
jmp
ins
rcr
fcom
scas
push
push
cwde
into
lods
(bad)
jmp
sub
test
hlt
fmul
popf
stc
inc
sub
addr16
(bad)
pop
xchg
mov
(bad)
in
and
(bad)
jmp
ins
sbb
out
cli
ins
pop
jecxz
loop
push
jge
test
xor
push
dec
aas
in
loopne
sahf
into
repnz
xchg
jb
leave
stc
bound
outs
data16
fbstp
pop
rol
inc
(bad)
mov
fild
lock
add
push
push
cmc
cmp
idiv
(bad)
sbb
mov
pushf
push
mov
cmp
push
adc
es
mov
mov
mov
and
push
shr
rcr
push
push
push
test
lds
add
cmc
out
pop
inc
aad
(bad)
cmp
push
xchg
daa
fisub
mov
loope
mov
cmp
xchg
bound
pop
dec
cwde
or
add
push
jns
das
add
add
dec
sbb
les
stos
call
int3
in
mov
inc
bound
pop
imul
mov
ror
or
jge
mov
xlat
xlat
mov
arpl
mov
test
popf
dec
xchg
nop
push
lea
out
add
mov
fwait
das
call
xchg
lods
cmp
dec
or
pushf
or
in
loopne
jmp
add
sub
addr16
xchg
dec
xchg
daa
mov
ror
es
lds
div
retf
add
ja
mov
sbb
adc
cdq
ret
cmp
(bad)
xlat
pop
addr16
xchg
outs
mov
xchg
ss
stos
add
and
push
repnz
dec
and
lock
fidiv
push
ficom
and
add
(bad)
sbb
pop
popf
cmp
cmps
add
pop
mov
push
(bad)
and
loopne
ror
and
popa
mov
lahf
xchg
addr16
dec
adc
inc
xchg
(bad)
add
in
ret
sub
inc
retf
mov
sbb
jmp
nop
loop
shl
dec
mov
test
lds
ins
sub
es
dec
les
xor
scas
out
enter
xchg
dec
xchg
in
lahf
or
jbe
fnstsw
jge
popf
push
cmp
push
std
pop
in
icebp
xchg
rcl
sbb
cs
nop
push
ret
ins
setl
push
or
jae
cmp
sub
lock
add
or
and
rcr
xor
jl
xchg
xchg
cli
sbb
jno
pop
xor
jl
xor
inc
imul
jecxz
cmc
out
mov
nop
inc
push
test
iret
mov
ror
jl
cmp
call
dec
fwait
jge
push
js
dec
mov
jg
cmp
mov
movs
push
xchg
arpl
loopne
jmp
sub
std
out
mov
push
and
adc
sub
xlat
mov
or
xor
dec
mov
mov
sti
pop
sub
aaa
fs
and
adc
mov
dec
ret
rcl
nop
pop
or
adc
fadd
and
jp
push
fcomp
and
sahf
pusha
ins
je
js
jmp
sub
adc
(bad)
retf
add
push
add
stc
fsub
fst
sbb
lea
test
popf
cdq
jl
mov
test
push
adc
xchg
clc
adc
push
sbb
cmove
push
mov
ret
mov
or
out
or
pop
test
jo
dec
clc
add
pop
mov
shl
jmp
add
add
lock
lss
jae
cmp
out
dec
dec
ds
jp
pop
xchg
push
cs
aas
sbb
popf
jo
push
setno
cmps
pushf
retf
push
fmul
xchg
loope
aaa
mov
arpl
adc
ror
mov
xor
xchg
mov
popf
or
imul
pop
mov
add
add
(bad)
or
iret
(bad)
xchg
xchg
cmps
das
js
imul
fidiv
sub
xor
out
inc
push
or
mov
mov
aaa
adc
xor
imul
mov
test
cli
rcl
sub
imul
lock
cmps
adc
out
push
and
pop
cmp
mov
push
dec
je
or
add
stos
adc
mov
jno
mov
test
fwait
cmp
test
sub
or
push
xchg
ror
mov
cmp
out
xchg
dec
pop
adc
jmp
ins
add
les
ror
or
adc
dec
adc
sar
test
mov
ja
rcl
popa
sub
sub
pushf
inc
pop
scas
push
jbe
inc
into
or
xchg
std
hlt
pop
es
(bad)
cwde
push
xchg
cmp
sbb
jae
mov
pop
inc
or
add
das
jg
mov
imul
out
cmp
ror
xchg
xor
mov
mov
ret
mov
rcl
out
scas
test
mov
stc
dec
and
out
and
fisub
and
inc
inc
pop
sbb
call
mov
fcomp
pop
(bad)
pushf
mov
add
in
jmp
in
mov
fstp
int
and
inc
xor
(bad)
mov
jns
test
mov
cmp
push
into
add
mov
inc
mov
loopne
sub
ret
sbb
outs
mov
lds
xchg
je
sub
das
mov
adc
ret
pop
rol
lods
jmp
fldenv
sbb
test
fs
jns
in
jb
fidiv
hlt
jle
mov
and
dec
pop
pop
js
mov
fs
push
iret
jmp
adc
jp
rcr
cmp
xchg
out
jno
adc
or
jns
or
sbb
js
push
xor
dec
jmp
push
jp
mov
cmp
stos
mov
popa
pop
sub
mov
loopne
jg
add
xchg
mov
jb
movs
sub
adc
dec
enter
test
push
mov
dec
js
and
repnz
and
sar
cli
xor
pop
mov
sbb
ror
dec
sbb
mov
ss
fdivp
arpl
fiadd
sub
test
xor
xchg
daa
xor
jns
pop
push
mov
push
inc
push
adc
stc
(bad)
push
fisttp
jae
pop
inc
pop
sub
mul
rol
jns
aad
pop
nop
push
inc
push
push
mov
mov
shl
mov
cwde
sahf
jmp
push
adc
jl
fdiv
lahf
scas
out
cmps
addr16
nop
pop
add
rcr
in
and
call
retf
mov
fisub
mov
retf
xchg
aam
or
and
and
ds
or
cmp
(bad)
jl
pop
mov
and
jg
(bad)
sti
(bad)
push
and
out
cmps
xchg
aam
daa
inc
xchg
leave
addr16
and
popa
cmp
and
mov
sub
jp
push
dec
xlat
imul
out
into
xor
scas
push
daa
mul
xchg
push
jge
movs
fild
ret
(bad)
sub
rol
movs
inc
jle
inc
test
movs
rol
xchg
ficom
mov
scas
mov
mov
aaa
movs
nop
inc
jg
cmp
xor
icebp
hlt
mov
call
adc
in
pop
jmp
cmp
ja
mov
jle
xor
add
movs
scas
lods
push
cmc
mov
cmps
icebp
inc
cmc
stc
in
sti
mov
test
jb
in
cmp
outs
in
add
jle
jnp
push
mov
test
jbe
loope
pusha
ror
int
mov
das
test
aam
sub
loope
xchg
inc
pop
jb
inc
push
jmp
mov
inc
idiv
in
nop
mov
xchg
or
imul
lds
cdq
scas
rcr
in
faddp
and
jmp
add
xor
addr16
sbb
or
and
(bad)
mov
jne
mov
cmp
pop
or
pushf
push
pop
and
stos
dec
ret
cmovg
cli
push
hlt
mov
(bad)
sub
popa
jg
dec
stc
jo
pop
pop
push
ja
mov
mov
leave
sub
mov
mov
cli
dec
xor
ins
loop
popa
call
or
mov
mov
push
pop
div
inc
jno
loopne
sbb
shr
(bad)
push
pop
lahf
mov
cli
jp
mov
inc
clc
inc
(bad)
cmp
push
jmp
jle
je
pop
leave
mov
loop
cmp
or
and
xlat
sti
fld
outs
sbb
push
lds
xor
sub
mov
gs
jecxz
mov
psrld
shl
adc
fwait
int3
mov
push
int3
daa
ins
cmps
and
jne
cmps
retf
xor
stos
inc
adc
imul
dec
sub
add
or
cli
lods
mov
retf
push
pop
mov
pop
das
addr16
popa
push
lods
xchg
jge
xchg
adc
test
lahf
dec
movs
hlt
dec
xor
mov
loopne
mov
adc
fstp
or
and
lods
outs
outs
dec
(bad)
fmul
loop
or
imul
adc
les
mov
leave
mov
popa
push
mov
dec
jmp
mov
nop
push
cmp
dec
and
mov
fs
clc
sbb
cmp
into
sbb
and
sub
add
push
das
adc
xchg
movs
add
sub
xchg
cli
push
arpl
dec
sub
fisttp
cmp
lds
sahf
dec
(bad)
out
push
or
leave
adc
or
in
pusha
fisttp
fsubr
sbb
adc
test
movs
mov
imul
pushf
inc
adc
cmp
mov
outs
call
je
retf
fsubr
pusha
scas
sub
daa
test
jno
aam
fild
pop
push
ror
cdq
mov
pop
ret
(bad)
hlt
or
mov
cmp
dec
jp
repz
popa
dec
cli
mov
xchg
(bad)
mov
add
fld
jae
cli
pop
inc
ins
push
mov
push
push
sub
fist
cmp
cmp
xor
and
cmp
ja
mov
inc
fwait
in
stos
pop
cmp
or
and
pop
lods
and
int
fcom
adc
xchg
xor
les
ficomp
shl
fiadd
sub
call
push
cmp
dec
jmp
add
out
sbb
push
jmp
scas
xchg
pusha
movs
mov
mov
cmp
fistp
push
ror
mov
jmp
inc
fild
xor
imul
mov
test
push
xor
push
adc
clc
call
dec
test
and
mov
(bad)
in
push
adc
jno
or
test
jae
dec
mov
push
adc
aaa
int
lock
(bad)
(bad)
push
aaa
xor
and
mov
je
jne
inc
data16
jns
mov
cmps
push
sub
pusha
push
sub
adc
push
outs
mov
sub
or
and
inc
sahf
scas
aas
xchg
and
jmp
mov
mov
out
ss
lahf
lods
dec
or
jmp
xor
and
jge
icebp
push
inc
or
xchg
sti
mov
retf
or
push
retf
ins
or
cmp
jl
in
jbe
push
add
and
(bad)
call
fisubr
les
inc
mov
inc
sub
mov
adc
lods
daa
out
das
xchg
cld
cdq
inc
ret
loope
sbb
inc
mov
lds
mov
bound
push
loope
les
jno
mov
rcr
enter
jp
(bad)
xchg
mov
xor
retf
imul
fbld
jns
jle
push
pushf
call
dec
or
jge
or
ror
push
div
push
lds
repnz
mov
or
lahf
dec
or
add
in
sbb
addr16
dec
jns
iret
sub
and
cmp
xchg
cmps
mov
cli
xchg
push
xor
inc
bound
lods
lods
pop
sub
mov
jo
mov
pop
sub
pop
adc
inc
shl
xchg
test
xchg
dec
pop
std
rol
test
movs
pop
mov
(bad)
xchg
aas
adc
jns
sbb
fwait
or
jno
cld
dec
not
popf
popf
aam
mov
push
sahf
sub
test
dec
pop
xchg
inc
out
bound
repnz
jno
cdq
pop
stos
pop
mov
push
out
xchg
xchg
jno
jbe
aaa
sbb
push
stos
cmps
sbb
or
bswap
ins
and
out
inc
shl
addr16
mov
xchg
imul
jmp
pop
sub
and
pop
xchg
or
dec
aaa
nop
into
mov
cld
fisubr
xchg
push
mov
sbb
aaa
push
pop
pushw
jg
adc
call
mov
lea
retf
in
repz
and
in
jb
sbb
movs
push
loope
inc
(bad)
pop
repz
jl
clc
cwde
in
ret
movs
enter
sub
mov
iret
xchg
jne
or
jmp
mov
(bad)
and
dec
jmp
add
cmp
mov
pop
and
(bad)
nop
dec
add
lea
sbb
addr16
mov
cmps
test
pop
lods
mov
shl
(bad)
(bad)
cmps
push
scas
mov
add
loopne
mov
stos
sbb
hlt
inc
xchg
ins
int
repz
mov
mov
push
retf
retf
mov
enter
sub
repz
in
lock
push
pop
inc
adc
sbb
mov
iret
sbb
mov
dec
es
xchg
xor
int
sbb
pop
mov
dec
lahf
mov
xchg
mov
mov
stos
dec
mov
popf
lea
jo
inc
push
pop
lods
mov
cmp
mov
jg
dec
inc
out
leave
loop
dec
mov
sbb
mov
movs
xlat
mov
fist
push
ret
jmp
mov
js
mov
int
cmp
mov
sbb
jns
rol
jmp
ror
inc
dec
xchg
pop
dec
pop
movs
lods
out
xchg
push
xor
(bad)
aas
fisub
xchg
sub
push
das
idiv
cmc
fbld
add
xor
pushf
data16
dec
push
add
xchg
dec
int3
inc
loopne
xchg
(bad)
push
adc
imul
adc
or
pmulhw
sbb
(bad)
pop
imul
xchg
outs
xor
lea
lds
das
stos
cmps
into
les
mov
mov
push
lea
xchg
dec
mov
scas
rol
clc
add
cdq
fadd
and
fistp
movs
icebp
inc
fcmovnb
adc
cmp
push
fwait
shl
out
outs
lods
or
retf
ins
jbe
push
loope
test
xchg
movs
into
lahf
shr
cmp
loope
sbb
out
mov
add
or
cmp
in
lahf
stos
inc
fistp
jecxz
ja
sti
(bad)
jg
loop
shl
std
sub
cdq
cmps
mul
outs
jle
mov
leave
aaa
sbb
movs
les
popf
out
and
add
push
aaa
inc
adc
sub
bound
push
stos
icebp
mov
xor
sub
mov
data16
and
xchg
dec
pushf
jno
sbb
sar
fucomp
cdq
ror
add
pop
xchg
test
fidivr
shl
push
or
mov
shr
(bad)
xchg
xchg
out
or
mov
push
jo
iret
ins
sahf
popf
xor
jp
sub
push
icebp
adc
mov
mov
ds
dec
aad
or
xchg
fs
sub
je
add
iret
push
mov
aaa
inc
shr
nop
jmp
pop
cmps
cmp
push
jns
add
inc
and
hlt
xchg
inc
popa
xor
jo
(bad)
in
sbb
(bad)
pop
scas
mov
sbb
mov
int
and
push
cwde
fsubr
push
jecxz
adc
ret
mov
imul
and
(bad)
outs
xchg
cmp
test
(bad)
pop
std
repnz
lahf
cld
les
xor
mov
fild
inc
sbb
jns
addr16
iret
movs
xchg
mov
add
cmps
add
mov
mov
adc
out
cwde
jmp
sbb
das
mov
sub
xchg
fsubrp
adc
adc
adc
fisubr
or
push
loope
pushf
inc
imul
pop
sahf
pop
imul
outs
aam
xor
stos
adc
clc
xchg
lock
in
outs
movs
mov
or
lock
fs
mov
or
test
ja
sbb
repnz
call
push
iret
lds
adc
jno
pop
iret
jbe
pop
out
fdiv
jb
jecxz
fldenv
je
jl
mov
fstp
ja
imul
mov
xchg
pop
sub
(bad)
xor
mov
sbb
or
call
cs
loop
pop
aam
cmp
movs
mov
aam
pushf
and
jae
in
xchg
xchg
out
dec
les
adc
and
mov
mov
sbb
push
outs
dec
es
sbb
int
movs
test
xor
rol
push
mov
and
adc
jb
lahf
xor
push
in
inc
fisttp
mov
xor
adc
mov
jmp
mov
(bad)
sub
mov
cwde
mov
inc
push
lock
inc
push
and
push
popa
retf
fld
imul
das
cwde
push
or
pop
sbb
dec
or
scas
mov
push
sub
sub
jb
sub
xchg
cmp
adc
add
and
loopne
adc
inc
(bad)
mov
xor
shr
mov
push
fsubr
in
fld
ds
push
(bad)
std
je
lock
movs
ror
ret
out
lahf
sbb
mov
mov
sub
fprem
jge
dec
sti
js
xchg
lea
jp
scas
xor
sbb
add
loope
inc
mov
out
xor
in
mul
or
adc
push
nop
mov
stos
mov
push
sbb
fidiv
xor
movs
push
jmp
movs
test
rol
inc
push
sbb
push
push
cmc
mov
fisttp
std
iret
fmul
jne
out
rcl
psraw
cmp
ret
inc
dec
jmp
iret
ret
add
test
pushf
fdiv
hlt
add
das
movs
push
movs
mov
test
jb
jnp
in
or
pusha
stos
or
movs
or
jbe
sub
jle
sbb
jmp
imul
mov
inc
lods
movs
pusha
jne
sti
and
sub
jae
pop
daa
sahf
test
cmps
out
movs
int3
pop
xor
rol
sub
inc
inc
daa
out
jle
call
call
sbb
pop
das
add
sahf
sbb
mov
mov
or
xchg
add
sub
jo
sub
fdiv
leave
mov
xchg
sahf
lods
pop
fwait
xlat
add
mov
ret
jge
dec
popa
mov
inc
gs
es
gs
inc
dec
pop
xchg
mov
mov
adc
(bad)
pop
dec
outs
dec
inc
sub
pusha
dec
ins
dec
pop
xor
mov
retf
scas
aad
mov
inc
xor
push
cmp
call
stos
in
lock
clc
scas
loop
test
fadd
push
fstp
lods
or
jnp
mov
dec
inc
(bad)
mov
cmc
xchg
mov
popf
cld
ins
push
imul
push
pop
jnp
adc
pop
fidiv
mov
mov
sbb
nop
mov
mov
in
mov
dec
loope
mov
mov
sahf
inc
hlt
js
mov
or
cmps
push
aaa
div
int3
shr
fsub
rcr
dec
mov
stos
cmp
out
sbb
xor
cwde
lods
cmp
pop
push
push
cwde
imul
pop
inc
mov
test
adc
mov
add
push
mov
std
fadd
xchg
xchg
aam
pop
push
mov
sbb
cmps
sub
lahf
sar
fimul
add
adc
addr16
ds
rol
add
xor
pop
icebp
xchg
push
xor
push
fstcw
dec
out
out
or
mov
push
or
dec
sbb
cmp
jmp
mov
jnp
add
mov
sub
pop
jo
cmp
sbb
xchg
in
mov
pop
mov
dec
jnp
mov
jmp
mov
jno
ja
(bad)
pop
shr
shl
int
sbb
add
jmp
push
xchg
in
(bad)
lods
in
mov
lds
and
das
into
out
clc
(bad)
neg
or
adc
lods
icebp
push
das
ins
mov
(bad)
test
pop
or
cmps
arpl
add
mov
sahf
dec
retf
ins
mov
push
sub
pop
iret
sbb
fwait
js
xchg
and
pop
or
pop
lock
loopne
push
fidivr
push
add
mov
enter
int
rol
(bad)
cmps
mov
and
cmps
jb
push
sub
(bad)
inc
jmp
test
fs
cmc
lds
pop
sbb
enter
fwait
push
inc
or
add
push
and
call
sub
push
hlt
inc
jle
imul
movs
sub
out
fist
sahf
jecxz
lock
add
mov
sbb
stc
or
and
fidiv
cmp
and
dec
fcomp
mov
enter
loop
rcl
xor
adc
cs
sar
scas
int
inc
daa
mov
push
or
std
or
jp
add
push
data16
or
push
je
mov
(bad)
jg
push
test
cwde
fs
mov
push
nop
xchg
outs
and
ds
out
cmp
jg
jge
cdq
dec
call
mov
stos
jp
mov
pop
push
add
jg
nop
cmp
mov
test
xchg
cmc
lds
jo
cmp
imul
call
mov
mov
repz
test
(bad)
mov
ror
jb
xchg
pop
rcl
lock
clc
mov
jne
fs
sbb
cdq
or
push
add
or
or
adc
cdq
fcomp
mov
in
fdivp
inc
loopne
mov
inc
fsub
xchg
sbb
outs
fdiv
test
dec
mov
into
aas
ss
in
adc
(bad)
retf
jae
pop
inc
loop
nop
mov
in
mov
xor
retf
add
jbe
xor
stc
cmp
jg
xor
fnsave
aas
repnz
cmp
loop
add
or
popf
jmp
push
jnp
or
mov
jns
out
sbb
pop
aaa
ret
cdq
call
movs
in
pop
inc
jp
xor
add
mov
dec
ds
les
pop
pop
mov
cmp
jo
and
inc
test
push
ret
pushf
enter
ret
pop
push
pushf
jbe
out
xchg
fiadd
xor
in
(bad)
xchg
sub
cmp
mov
jno
xchg
jg
pop
lds
or
push
pushf
movs
cmps
enter
add
sub
(bad)
(bad)
mov
mov
adc
or
xchg
mov
pop
mov
pop
cli
cmp
scas
(bad)
adc
outs
imul
loope
daa
enter
in
aam
mov
jg
mov
popa
imul
stc
mov
mov
ins
(bad)
out
inc
stos
xchg
test
je
cmps
inc
mov
pushw
scas
sbb
sti
and
aad
mov
repnz
outs
or
inc
xor
push
and
jno
lahf
les
mov
ss
push
jmp
cdq
pop
xchg
sbb
cwde
cmc
les
lods
and
gs
or
inc
out
or
pop
imul
pushf
sub
fisubr
sub
popa
jge
xchg
dec
repnz
shl
(bad)
ins
mov
lahf
ins
repz
adc
sub
pop
rcr
xor
jnp
xor
mov
les
or
cs
mov
pop
gs
cmp
sub
xchg
in
das
sub
mov
movs
into
sbb
daa
ds
sbb
cwde
and
daa
dec
adc
inc
sub
aam
retf
aam
ds
mov
js
dec
mov
leave
xor
in
ret
popa
xchg
retf
aam
mov
sahf
nop
dec
add
xor
jb
pop
dec
push
ss
out
mov
sub
xchg
push
aam
call
add
jmp
push
aaa
mov
cmp
aaa
inc
imul
nop
rep
mov
and
jb
xor
pop
mov
pop
mov
out
shrd
lock
mov
jne
in
leave
adc
cld
pop
addr16
mov
mov
cwde
jmp
mov
dec
adc
mov
add
push
cmc
xchg
pop
mov
(bad)
test
mov
inc
inc
cli
test
fistp
inc
rcl
cli
data16
and
cmc
fiadd
popf
xor
cdq
mov
fcom
xchg
fdiv
mov
outs
and
call
push
shl
mov
pop
jl
arpl
sahf
pop
jl
mov
shl
mov
jmp
sbb
popa
sbb
mov
scas
std
fsub
jl
ret
xchg
sub
adc
mov
aad
and
adc
sbb
push
mov
pop
fmul
inc
mov
or
mov
ins
push
fldz
push
fild
sbb
mov
sti
retf
sbb
popa
data16
out
je
dec
iret
or
sbb
movs
mov
mov
and
pop
scas
dec
sahf
inc
push
pushf
sbb
sub
mov
xor
sub
pop
pushf
push
retf
dec
das
pop
or
pop
mov
jno
in
jle
das
cmp
sbb
aad
loope
shr
and
sub
ret
fadd
sbb
(bad)
mov
dec
in
fwait
gs
inc
mov
clc
inc
sbb
or
push
pop
jmp
xchg
data16
sbb
mov
outs
mov
mov
push
jle
and
push
loopne
shl
cmps
sub
and
bound
les
push
cli
(bad)
fild
fdivr
out
lods
xor
and
jae
or
icebp
push
xor
pusha
cmp
mov
xchg
loope
(bad)
mov
dec
repnz
in
shl
xchg
(bad)
fcmovb
sbb
jl
sbb
xor
sub
popf
icebp
jp
sub
pop
mov
ss
std
xor
inc
dec
ucomiss
repz
(bad)
mov
dec
jl
repnz
jg
pop
pop
pop
xor
cmp
xor
int
nop
cmc
(bad)
mov
cmp
out
fsub
mov
in
push
and
mov
dec
push
ror
and
cmps
sub
jb
inc
loope
jg
push
fcomp
int
ret
jmp
mov
xchg
aas
or
bound
jne
or
mov
dec
jmp
sbb
inc
or
stc
imul
(bad)
icebp
jb
xchg
cmp
xchg
shr
xchg
xor
sbb
push
test
push
pusha
or
cmp
and
ret
aas
add
adc
cmp
jge
pop
adc
imul
stc
jns
leave
inc
test
pop
add
sbb
loopne
les
iret
movs
leave
cmps
es
in
push
loop
js
jae
add
adc
cwde
mov
mov
push
jbe
fwait
pop
lods
adc
retf
sub
test
loopne
inc
jno
out
inc
sub
stc
push
test
dec
or
rcl
repz
push
xchg
cmp
mov
dec
jecxz
cwde
push
sahf
dec
pusha
cmp
movs
(bad)
or
loop
out
xchg
xchg
push
inc
in
test
ja
cmps
or
ret
popf
jo
jge
data16
pop
(bad)
retf
enter
xchg
add
xchg
ins
sub
rol
js
add
xor
iret
xor
xor
push
sbb
repz
dec
jno
fld
xchg
xchg
xchg
pop
or
inc
mov
xor
mov
popa
mov
jmp
(bad)
in
xor
scas
add
icebp
iret
cdq
vminsd
fstp
sbb
fstp
fmul
test
sub
gs
inc
std
cdq
aam
iret
jecxz
push
lods
push
in
ds
clc
rdtsc
in
sahf
sbb
lea
dec
push
mov
pop
adc
inc
jge
retf
inc
mov
data16
cmp
pop
jmp
sub
je
out
(bad)
stos
cli
xor
pop
pop
add
mov
dec
and
mov
mov
(bad)
jge
push
sbb
je
cmps
sti
mov
call
adc
dec
pushf
mov
mov
call
jecxz
(bad)
hlt
(bad)
mov
aam
xor
or
movs
push
hlt
mov
push
adc
lods
mov
or
or
fwait
cmp
outs
mov
cmp
iret
aam
push
cmp
or
pop
scas
pop
sbb
sub
fldenv
jge
mov
pop
nop
or
jo
sub
mov
push
xchg
inc
mov
pop
mov
adc
add
cmps
jno
xchg
sahf
ret
or
pop
push
ret
test
ret
cs
daa
cli
sbb
xchg
popf
enter
xchg
loope
sbb
inc
add
mov
je
xor
mov
outs
fdiv
ret
sub
mov
call
fnstsw
mov
(bad)
pusha
or
into
pushf
inc
cmc
loope
jmp
sbb
jl
sbb
mov
sbb
retf
outs
movs
dec
mov
movs
pmaxsw
arpl
dec
cwde
mov
pop
fidivr
outs
enter
mov
je
loopne
stos
(bad)
cmp
inc
add
xor
jecxz
cmc
cs
push
mov
inc
adc
clc
test
mov
xchg
lods
stos
gs
cld
jnp
into
sbb
retf
in
js
pop
push
dec
loope
sahf
cmp
retf
icebp
rcl
cs
cmps
or
mov
imul
sub
pop
popf
xor
dec
add
in
jmp
scas
and
cmp
sub
xor
mov
adc
pop
pushf
xor
lods
add
in
(bad)
test
push
aam
arpl
lock
lods
(bad)
(bad)
bound
sar
xchg
gs
pop
mov
and
sub
xchg
popf
lea
add
pop
and
xchg
mov
test
sbb
out
add
xor
add
mov
mov
ja
cmps
xor
xlat
or
call
and
add
jnp
shl
inc
sub
stos
sub
out
outs
xor
pop
xchg
int
rcr
mov
icebp
cmp
push
sbb
mov
xor
hlt
out
(bad)
stos
xchg
ja
xchg
sbb
cmps
jl
pusha
sub
push
xchg
loope
jg
js
inc
xlat
adc
int3
push
cwde
iret
icebp
xchg
lods
pop
jbe
mov
repnz
shl
cld
mov
(bad)
jmp
aad
jecxz
pop
pop
(bad)
into
xor
xor
int3
xor
not
xor
push
mov
loop
pop
sub
stos
lock
push
mov
jae
push
loopne
(bad)
js
jo
mov
repnz
outs
ja
out
jne
dec
add
pop
cmps
jg
add
or
ret
and
shl
ss
int3
pop
outs
div
loopne
cld
xchg
and
add
cwde
icebp
outs
(bad)
push
inc
or
in
mov
jg
sbb
mov
jns
mov
adc
add
sub
jecxz
adc
into
movs
push
jno
adc
sbb
fld
fcmovnb
icebp
(bad)
cdq
or
or
mov
add
loopne
inc
popa
add
(bad)
fs
push
iret
sub
add
mov
test
test
mov
xchg
mov
cmp
add
pop
in
je
xchg
jecxz
lds
cmp
pushf
dec
add
enter
jg
ficom
mov
aas
lahf
scas
xchg
rcr
pop
push
add
gs
popa
pop
leave
js
(bad)
push
mov
ret
dec
data16
inc
mov
sub
push
push
xchg
stos
add
and
std
iret
sbb
inc
ins
pop
cmp
pop
sbb
ins
jmp
add
xor
jae
inc
rcl
fsubr
icebp
adc
add
daa
(bad)
xor
imul
in
sbb
xor
bound
mov
lds
xor
fiadd
adc
cmp
psrlq
sbb
push
mov
fild
jp
js
out
sbb
and
mov
loope
sub
jp
imul
xor
(bad)
mov
fs
ret
inc
icebp
add
test
mov
cmp
mov
adc
xchg
jge
in
push
dec
jne
cmc
fstp
xchg
mov
jecxz
jmp
rol
int3
mov
ins
sub
sub
(bad)
sub
mov
(bad)
stos
or
sub
jmp
scas
jle
mov
test
pop
in
lahf
fadd
stc
xchg
in
sbb
xor
mov
add
ins
push
or
mov
xor
(bad)
add
inc
pop
pop
pushf
add
in
xlat
push
pop
popa
outs
js
sbb
mov
push
shl
aam
cmp
aaa
ja
retf
xchg
xor
rcr
and
push
jl
aas
dec
jge
push
pushf
adc
das
sahf
aaa
(bad)
mov
sbb
icebp
sbb
popa
or
pop
je
mov
jmp
rol
add
sbb
adc
int3
loopne
pop
or
add
and
repz
iret
pop
or
xlat
xor
jbe
dec
mov
xor
rcr
bound
iret
cmp
push
push
pop
rol
shl
cmp
loop
jbe
aad
movs
js
pop
(bad)
adc
test
pop
cs
push
xor
add
fdivr
stos
and
push
add
mov
ret
sbb
jp
sub
shr
pop
test
movs
shl
jbe
push
test
pop
loop
je
scas
out
dec
and
out
sub
inc
(bad)
retf
mov
lock
cmc
mov
xor
pushf
xor
inc
or
retf
in
jecxz
add
js
mov
ror
push
outs
jnp
test
xchg
mov
xor
out
xor
iret
fwait
jae
hlt
mov
pusha
lods
dec
xor
bound
jl
arpl
mov
ret
mov
sub
popa
js
cs
jae
or
scas
(bad)
jle
aad
dec
fmul
push
repz
mov
stos
mov
mov
ret
inc
and
adc
loop
pop
or
mov
test
push
(bad)
in
pop
lods
loopne
adc
adc
push
mov
adc
cli
xor
les
int3
scas
stc
cmps
xor
sahf
(bad)
or
cld
xor
lea
mov
fdivr
and
loope
mov
or
dec
fnsave
(bad)
mov
in
call
pop
add
pop
dec
inc
(bad)
mov
push
out
adc
mov
pop
push
push
and
push
mov
mov
imul
lea
stos
cmp
sbb
(bad)
pop
push
and
popf
jno
aas
jbe
and
in
cmc
mov
popf
stos
xchg
pop
sbb
repnz
pop
cmp
scas
mov
js
mov
es
push
sbb
dec
jmp
inc
pop
out
mov
mov
addr16
xchg
jne
cs
fisub
jnp
aaa
xor
xor
clc
in
(bad)
mov
les
dec
jle
mov
leave
jne
fadd
add
sub
jno
inc
jne
push
aaa
add
nop
das
mov
mov
inc
daa
pop
sbb
(bad)
mov
imul
xchg
xchg
push
mov
and
out
sub
int3
mov
jne
jne
into
int3
adc
stos
dec
push
dec
and
icebp
add
inc
adc
in
adc
cmp
imul
or
cmp
lea
pop
int3
pop
out
mov
xchg
xlat
push
xchg
aam
out
sub
sbb
mov
and
outs
mov
mov
push
jg
push
loop
scas
cmps
cmp
movs
inc
dec
shr
stos
or
cli
jno
movs
push
ror
jp
add
fidiv
mov
imul
add
adc
push
inc
inc
mov
rcl
aaa
xor
adc
test
jb
ficom
popa
push
mov
shl
mov
stos
int3
jns
mov
sub
scas
pop
jl
stc
ficomp
popf
and
cdq
js
mov
das
call
cmp
(bad)
lds
dec
mov
stos
inc
not
inc
push
or
push
dec
loopne
dec
jmp
sbb
jbe
and
mov
push
mov
ins
and
stos
jns
fcom
push
cwde
rcl
mov
ss
out
jbe
xchg
xchg
es
fsubr
mov
pop
ret
mov
shl
inc
lods
mov
ret
xchg
mov
shr
mov
in
xlat
imul
cdq
je
je
leave
nop
ja
or
jns
sbb
lea
mov
push
lods
shr
mov
jo
nop
mov
out
bound
push
cmp
jno
or
xchg
adc
mov
adc
scas
push
inc
(bad)
mov
aas
cmp
scas
mov
mov
xchg
xchg
popa
mov
lods
jecxz
cmp
sahf
mov
push
mov
iret
ss
fsubr
(bad)
xchg
or
pop
adc
fs
lds
adc
stos
gs
call
stc
pop
movs
jle
lahf
ja
xchg
fnstenv
(bad)
retf
push
sub
or
jbe
ret
int3
fistp
pop
(bad)
cmp
jmp
xor
xchg
push
outs
pop
mov
mov
cmps
mov
mov
jecxz
test
mov
pop
rol
js
xor
inc
stc
popa
mov
es
fmul
repz
jg
xchg
mov
stc
ins
xlat
repnz
sbb
shl
jg
add
aad
cmp
push
add
fst
stc
xchg
call
inc
inc
pop
sbb
in
or
repnz
loop
out
dec
sbb
stc
jge
xchg
mov
xchg
push
and
jmp
mov
fcmovnu
push
neg
fnsave
mov
mov
cmp
or
cmp
ret
scas
cld
pop
jle
adc
push
mov
ror
and
sbb
mov
cmps
dec
dec
outs
mov
movs
mov
dec
sub
shr
mov
dec
pop
mov
inc
ret
sbb
out
sbb
push
fld
jle
push
xchg
icebp
fs
mov
cmp
xor
scas
js
adc
aad
or
mov
pop
shl
popa
pop
add
mov
(bad)
sbb
push
dec
sub
mov
popf
test
stc
jp
and
cmps
mov
es
adc
dec
std
pop
movs
pop
lods
lods
sub
retf
lods
mov
push
jb
xchg
mov
xor
sub
xchg
xchg
xchg
inc
sub
adc
leave
rol
add
jb
stc
pop
dec
(bad)
das
out
inc
inc
lods
dec
xchg
mov
stc
push
inc
sahf
cmp
enter
adc
sub
loopne
jle
call
adc
sub
loop
xchg
and
mov
xchg
mov
(bad)
mov
xchg
hlt
mov
daa
call
mov
mov
call
cwde
add
adc
(bad)
sahf
in
popf
mov
jmp
out
xor
push
clc
aad
inc
cmp
or
push
mov
fmul
jge
dec
sbb
test
or
ins
push
movs
imul
test
cli
mov
add
sub
cmp
xlat
lods
fwait
popf
xchg
push
jp
push
lds
pop
jb
xchg
push
gs
jl
ret
scas
mov
inc
lea
ret
dec
pop
and
shr
add
mov
stos
ins
inc
push
(bad)
retf
in
dec
mov
push
mov
ss
mov
stos
pop
lahf
mov
mov
cmp
ret
stos
loope
and
jo
or
in
iret
cdq
(bad)
retf
imul
add
xchg
xchg
lds
jmp
xchg
jb
mov
push
les
jo
pop
dec
sub
fimul
leave
and
push
out
and
fisttp
je
out
dec
fcomip
jl
loopne
jge
int
loop
mov
popf
adc
stc
xchg
and
bound
jmp
arpl
hlt
jl
and
dec
add
mov
das
cmp
xchg
fbld
jecxz
mov
dec
xchg
sbb
scas
or
mov
fnstsw
lods
pop
or
mov
ja
into
nop
mov
addr16
push
jno
dec
icebp
push
fistp
jnp
movs
adc
mov
pop
add
mov
arpl
hlt
popa
push
imul
jo
xchg
and
cld
ffreep
stos
shl
iret
inc
pop
hlt
sbb
std
pop
cmp
loop
in
dec
repnz
lock
ds
adc
fiadd
int3
jae
mov
mov
leave
jae
lds
test
cmps
or
push
out
xlat
mov
cmp
js
daa
outs
jae
test
por
adc
loop
push
lds
imul
jbe
or
adc
movs
jnp
ja
pushf
inc
xchg
xchg
or
pushf
mov
inc
push
push
(bad)
jno
push
outs
adc
inc
and
jl
sar
stc
inc
fcmovnbe
xor
shr
push
inc
or
xor
aam
mov
loopne
icebp
(bad)
or
cli
cmp
pop
xchg
pop
jecxz
ror
xor
popf
dec
mov
mov
lock
xchg
xor
mov
cs
and
mov
adc
add
leave
dec
arpl
mov
pushf
push
shr
ja
cmp
push
xchg
mov
pop
rol
cmps
and
add
sbb
sti
push
cmp
jmp
mov
dec
mov
ss
icebp
push
out
mov
cwde
fucomp
sub
loope
xor
dec
xchg
cmp
add
cmp
dec
ret
repz
sub
stc
out
mov
cmc
test
or
bound
mov
inc
(bad)
cmp
bound
mov
adc
xor
hlt
std
jmp
mov
and
cmp
mov
jae
out
rcr
adc
cmps
dec
mov
jae
int
inc
mov
or
addr16
inc
bound
cmc
test
mov
mov
(bad)
or
ins
inc
jbe
cmps
xor
test
xchg
imul
jp
push
sbb
jne
bnd
test
pushf
(bad)
int
mov
adc
repz
push
dec
and
dec
add
mov
vrcpss
popa
push
aam
or
movd
push
adc
mov
dec
cmp
inc
dec
sbb
popa
add
push
dec
ret
repnz
popa
dec
dec
mov
mov
das
inc
and
cmc
pop
adc
adc
jge
rcr
js
or
aad
daa
mov
adc
xchg
mov
int
lods
sbb
or
jmp
retf
dec
outs
lahf
mov
sub
jnp
aaa
adc
shr
xchg
xor
cmps
and
add
std
pop
jecxz
fisttp
xor
mov
or
out
sbb
add
sub
pop
sbb
jnp
into
adc
ret
in
pop
gs
inc
add
jb
jns
loopne
cmp
imul
dec
cmp
imul
add
sub
add
std
pop
test
addr16
jmp
dec
fcmove
ret
jg
xor
push
mov
pop
mov
dec
xchg
jp
fs
ins
mov
jno
outs
fist
in
pop
aas
pop
fdivr
cld
dec
sub
jg
je
icebp
(bad)
je
sbb
sahf
lods
xchg
mov
je
scas
xor
dec
das
adc
cli
std
(bad)
ja
outs
xor
and
gs
sub
xor
mov
xchg
sahf
xchg
mov
mov
mov
lock
aaa
sub
lahf
popf
adc
in
mov
cmps
lea
int
outs
jmp
call
pop
stos
and
jnp
jg
pop
jg
enter
punpckhbw
adc
push
xchg
imul
xor
push
mov
mov
adc
xchg
enter
mov
or
aam
hlt
ds
mov
jb
dec
push
iret
adc
push
aaa
or
popw
xchg
jns
pop
aas
test
xchg
(bad)
lods
mov
mov
out
mov
mov
clc
aaa
sub
jnp
scas
repnz
xor
pop
adc
jbe
icebp
push
icebp
or
fnstsw
gs
xor
lahf
mov
or
aaa
pop
add
inc
in
cdq
add
adc
pop
mov
test
cmps
cmp
aas
add
and
mov
or
and
inc
ss
in
push
dec
xchg
mov
pushf
into
xor
loopne
pop
or
xlat
mov
mov
jb
enter
xchg
and
add
retf
pop
add
int3
fwait
std
push
fild
xor
jle
in
ret
or
aad
retf
sbb
cmp
mov
sbb
in
retf
test
jmp
out
pop
je
pushf
adc
div
cmps
repnz
imul
mov
mov
inc
cdq
mov
retf
adc
xchg
mov
(bad)
(bad)
xor
xchg
sti
mov
jno
and
sub
dec
xlat
lods
ins
sub
loope
lods
int
sub
add
mov
and
loope
cmp
pop
pop
mov
cdq
fwait
into
pop
mov
sub
mov
adc
xchg
out
push
repnz
lods
adc
mov
enter
lods
xchg
jmp
add
jp
sub
push
pop
push
jnp
pop
mov
test
jecxz
add
or
outs
in
out
arpl
push
out
(bad)
mov
dec
data16
jb
pusha
pop
js
push
pop
pop
dec
jp
dec
push
in
adc
jae
adc
adc
pop
out
adc
jnp
push
or
xchg
mov
(bad)
jge
pop
xchg
outs
or
sub
mov
mov
pop
std
mov
outs
out
shr
sbb
mov
mov
shl
lahf
leave
inc
jns
jmp
xor
or
iret
(bad)
jb
aaa
aas
mov
popa
add
push
imul
inc
aad
(bad)
jle
aad
push
imul
cld
push
xor
add
cmp
push
cmp
jo
jo
fisttp
inc
mov
jae
fmul
out
pop
and
mov
mov
inc
movs
out
add
inc
movs
shr
call
cwde
mov
(bad)
fcomip
(bad)
jmp
frndint
aad
push
frstor
test
cmp
mov
jo
cmps
and
out
inc
pusha
inc
fwait
aas
cmp
nop
jg
dec
xchg
lock
fwait
cmc
and
js
and
cwde
sbb
pop
std
cwde
jo
add
out
rcl
mov
and
ficomp
iret
mov
rcr
icebp
nop
jno
out
es
call
xchg
imul
push
dec
xchg
sub
add
shl
push
jno
pop
and
mov
sahf
in
cmp
ds
jle
das
xlat
out
aad
mov
add
pushf
xchg
mov
bound
fwait
adc
into
jae
(bad)
push
enter
mov
and
imul
cmps
mov
rcl
add
dec
test
aaa
sbb
cld
sub
xor
mov
hlt
mov
pop
(bad)
lock
push
jb
test
add
pop
or
mov
imul
cmp
cmp
jo
sbb
push
gs
mov
inc
push
sub
xor
lea
pushf
int3
jo
push
inc
frstor
in
cmc
push
jmp
inc
push
lea
nop
xor
mov
push
test
mov
outs
sahf
jl
xchg
adc
bound
jne
inc
xor
cmps
sbb
sub
ror
or
sub
test
rol
in
ins
jmp
sti
cmp
pop
test
pusha
add
scas
sbb
ret
repz
in
xchg
dec
retf
xchg
idiv
mov
in
push
jg
ins
cmp
adc
xor
mov
sahf
adc
xor
or
js
pop
add
or
dec
cmp
pop
or
in
adc
and
xchg
xchg
int
test
out
xchg
add
iret
push
pop
inc
pop
or
sub
aad
repnz
dec
stos
cs
inc
inc
xor
push
das
pop
mov
and
and
imul
ss
cmp
xchg
cmp
and
ss
mov
mov
xchg
add
add
push
pop
int
lods
es
popa
dec
mov
mov
out
test
adc
jb
mov
mov
or
mov
mov
les
dec
pop
push
outs
jle
daa
pop
rcr
add
pop
retf
adc
(bad)
sbb
loop
add
xor
pop
xor
mov
adc
jg
(bad)
out
jg
dec
fcmovbe
inc
or
aad
jbe
les
pop
mov
pushf
jmp
pop
dec
shl
sub
repz
dec
loope
addr16
out
mov
or
inc
or
add
mov
jbe
or
imul
push
mov
dec
js
add
jmp
push
data16
xor
bound
pop
and
adc
aas
mov
xor
add
sub
push
dec
imul
ret
and
mov
and
mov
dec
ret
test
pusha
or
sbb
inc
ss
push
and
std
call
rcr
bound
fwait
jnp
clc
mov
lods
mov
ja
jecxz
int3
push
ds
scas
fs
movs
pop
dec
xor
jns
push
idiv
rol
mov
mov
popf
(bad)
mov
or
adc
rcr
jae
cdq
loopne
fsubr
pop
sbb
and
xchg
gs
xchg
cli
test
int3
xchg
mov
mov
inc
(bad)
lods
arpl
jb
sti
outs
fdiv
sbb
adc
shl
inc
lods
nop
inc
jl
dec
shl
mov
xchg
xchg
out
outs
inc
aad
data16
cmp
aam
imul
cwde
ret
gs
inc
add
jbe
pop
cmp
push
arpl
and
rol
push
push
inc
xchg
icebp
fwait
rcr
mov
push
rcl
add
in
jo
stos
inc
xor
sub
lds
cs
cmps
push
pop
mov
mov
xor
gs
test
in
test
dec
add
push
pop
or
jecxz
cdq
shl
js
cmp
loope
ret
mov
jge
dec
inc
push
inc
mov
cmp
pop
fst
xor
js
cmp
mov
fwait
pop
sbb
pusha
pop
inc
push
push
test
or
mov
loop
xchg
mov
movs
jp
adc
inc
adc
fsub
aad
cmp
sti
cmp
jle
rol
dec
call
int3
pop
pop
xor
xor
push
(bad)
jp
fisub
out
scas
idiv
(bad)
sbb
invd
mov
sbb
sub
pushf
xor
scas
sub
clc
pop
cmps
adc
push
popa
and
fbld
cs
aam
js
pop
and
retf
sub
in
bswap
int
retf
jl
push
scas
(bad)
adc
sbb
pop
call
inc
mov
into
shl
shl
xchg
les
mov
pop
jbe
rol
int3
cs
(bad)
jbe
gs
mov
and
add
cmp
aaa
in
retf
popf
and
push
clc
leave
ins
mov
ja
jge
dec
pop
mov
xor
in
jnp
mov
adc
mov
dec
cmp
sub
and
hlt
sub
xchg
clc
retf
mov
hlt
dec
mov
xor
aam
push
fimul
pushf
push
mov
jmp
inc
lock
xchg
dec
add
ins
test
ret
cwde
test
push
or
aas
mov
popf
mov
cs
retf
xchg
dec
adc
dec
dec
mul
and
ret
aad
pop
mov
(bad)
dec
cmp
fisttp
lea
fst
or
jg
scas
loop
retf
jg
call
or
fsubr
fcomip
cmc
and
inc
push
inc
test
loop
xadd
mov
mov
inc
pop
fs
mov
hlt
ret
stos
push
xor
data16
mov
js
mov
push
push
xor
dec
mov
mov
int
pop
icebp
leave
or
push
rol
ret
retf
mov
ret
xor
(bad)
adc
in
js
in
xchg
clc
rcl
cmps
push
push
mov
sti
or
sub
fisubr
cli
outs
jmp
inc
in
pop
jb
out
adc
jnp
stc
into
sbb
adc
int3
jg
adc
sbb
mov
mov
xchg
and
dec
mov
mov
jb
stos
mov
push
adc
mov
aam
not
mov
dec
push
aas
push
inc
aad
and
xor
mov
sar
sub
cmp
pop
ret
(bad)
fnstsw
daa
mov
mov
mov
pop
sbb
pop
and
adc
cmp
sbb
mov
lods
dec
jp
out
ficom
xlat
adc
xor
arpl
imul
xor
jl
cmp
call
sub
sub
sub
aas
push
and
adc
dec
jl
and
add
sub
or
into
or
xor
(bad)
or
popa
xor
xchg
data16
cwde
cmp
and
add
loopne
cmp
out
mov
mov
nop
pop
xchg
cmp
clc
fst
inc
jns
ret
outs
mov
fcomp
mov
sar
into
es
push
je
or
or
fbld
movs
sbb
sbb
fdivr
pop
dec
or
add
or
int3
pminub
mov
mov
sbb
(bad)
repz
push
cli
inc
mov
jb
pusha
shr
mov
int3
rcl
mov
clc
outs
pop
aam
ror
sbb
jns
pusha
adc
loop
push
es
adc
loopne
fwait
pop
xchg
cmps
dec
pop
loope
sub
inc
mov
(bad)
push
call
imul
stos
int
inc
inc
add
scas
xor
adc
push
cmps
nop
shl
inc
bound
fist
out
dec
dec
dec
xor
mov
push
mov
or
cmp
into
xchg
xor
cmp
inc
ins
out
aad
mov
xor
cmps
in
mov
xchg
loopne
movs
imul
inc
das
shl
sbb
stc
out
test
imul
jge
pop
sub
fwait
push
xchg
imul
inc
and
pop
xchg
sub
jns
mov
jmp
jg
das
sub
jg
sar
xor
out
sahf
or
adc
stos
cmp
sahf
mov
xor
wrmsr
lods
xor
xor
into
int3
scas
xor
out
fsubr
aaa
ja
int3
sub
xchg
add
xchg
cmps
sti
adc
ins
or
gs
or
sbb
jno
lea
adc
sbb
push
jp
xchg
jmp
lea
mov
adc
fcom
push
cli
loop
retf
push
das
lods
dec
sub
add
jnp
outs
daa
push
mov
into
mov
das
ins
push
pop
sbb
das
pop
jmp
sbb
xchg
loop
mov
inc
push
adc
ss
fidivr
xor
add
or
add
inc
sub
les
das
ret
pop
ins
lods
retf
add
pop
inc
push
xor
pop
dec
neg
lock
rol
hlt
gs
pushf
mov
sbb
sbb
cmp
adc
or
adc
mov
inc
push
push
mov
call
adc
mov
xchg
pop
stos
sub
jae
jg
or
sbb
add
sti
adc
scas
pop
leave
scas
mov
pop
mov
push
jecxz
or
gs
mov
mov
in
push
dec
outs
jno
shl
das
std
lock
pushf
(bad)
jb
(bad)
dec
mov
sub
pop
cmp
add
add
int3
inc
js
or
adc
add
call
and
data16
(bad)
stc
xor
sub
or
xor
call
cmps
out
add
jg
sub
jae
push
xor
inc
punpcklbw
adc
int3
mov
retf
ds
add
loop
clc
ficom
std
mov
test
inc
in
cmps
(bad)
mov
inc
(bad)
jo
jmp
imul
enter
mov
loopne
movs
stos
inc
or
jo
or
bound
jge
sahf
sub
mov
add
clc
push
ja
call
leave
dec
dec
movs
push
push
dec
pop
shl
sub
mov
rcr
ficomp
inc
(bad)
or
add
cwde
jecxz
fist
add
loopne
and
icebp
xor
in
xor
adc
inc
out
fisub
dec
dec
popf
int3
pop
aas
not
xchg
cmp
pop
dec
mov
aad
out
pop
cmp
mov
test
xor
ins
ds
test
jbe
xchg
add
(bad)
pop
pop
je
mov
addr16
xchg
or
into
mov
fwait
adc
outs
into
mov
jmp
xchg
icebp
and
jg
(bad)
mov
addr16
mov
scas
in
ss
xor
xchg
xor
xor
gs
jns
or
and
adc
cdq
sub
xor
sbb
(bad)
int3
(bad)
movhps
xor
repz
jmp
div
cmp
jnp
xor
aam
fadd
bound
xchg
adc
add
mov
popa
xor
mov
mov
addr16
mov
scas
in
nop
cmps
sbb
enter
dec
cld
fnstcw
xchg
sub
cwde
call
mov
fst
in
jmp
test
mov
stos
movs
pop
jae
and
ja
(bad)
gs
outs
sbb
in
mov
pusha
sbb
in
dec
in
cmp
jo
xor
or
cmps
clc
xor
xor
push
fprem1
(bad)
mov
and
mov
add
les
test
shr
pop
call
fnsave
adc
popa
sub
cld
test
or
push
(bad)
pushf
and
nop
sub
mov
addr16
cli
xor
punpcklbw
pusha
or
sub
xor
mov
int
push
sub
inc
xor
es
retf
gs
push
or
leave
add
gs
pushf
cwde
hlt
xchg
mov
pop
es
dec
aas
shl
rol
mov
mov
pop
adc
jmp
xchg
sub
retf
xchg
inc
test
dec
arpl
mov
jo
(bad)
repnz
mov
das
mov
out
retf
gs
sbb
pop
xchg
jmp
xor
jmp
jmp
xor
pop
mov
mov
icebp
jecxz
push
fldenv
add
lods
mov
ja
dec
fistp
stc
pop
adc
sub
push
add
enter
adc
mov
in
ret
out
fbstp
aas
inc
jg
pop
movs
pop
jp
fidivr
adc
inc
push
fimul
shr
push
xchg
push
in
and
sbb
xchg
shl
or
das
fnstenv
jp
das
add
inc
xor
gs
push
outs
mov
popf
in
xchg
jo
or
enter
pop
dec
and
cmp
cld
ja
adc
and
mov
comiss
(bad)
(bad)
push
rcl
ins
data16
loop
mov
fistp
call
sub
lea
add
sbb
push
imul
or
jne
xor
xor
xor
ins
mov
addr16
push
pop
sahf
es
or
jecxz
icebp
cwde
mov
das
add
inc
jbe
and
jno
sbb
adc
pop
ins
add
mov
jo
aaa
sub
std
in
sahf
mov
jae
addr16
mov
in
cmp
push
push
cs
sti
inc
cdq
mov
cdq
bound
mov
icebp
imul
adc
dec
cmp
test
ins
icebp
pop
inc
mov
mov
mov
xor
xchg
pop
out
xor
shl
mov
(bad)
or
adc
iret
js
rol
int3
mov
mov
cmp
or
test
lods
in
ins
sub
sbb
sub
cmp
push
in
sti
cmp
aam
ror
stc
add
mov
clc
sub
add
(bad)
xor
fmul
add
ja
or
pushf
and
mov
fisubr
sub
adc
and
or
sbb
rcr
and
or
in
ds
inc
rol
mov
xchg
fcomp
push
(bad)
ss
push
mov
and
pusha
jb
or
cmps
stos
sti
(bad)
jnp
adc
mov
dec
mov
iret
mov
inc
dec
xchg
stos
(bad)
lahf
push
test
jle
lods
cs
jl
icebp
test
push
pushf
mov
cmp
add
mov
(bad)
repz
jbe
mov
out
sbb
mov
or
comiss
pop
mov
push
fcomip
inc
sbb
pop
loopne
lods
inc
das
xor
xchg
jmp
data16
test
inc
out
movs
icebp
add
das
aam
xchg
jno
mov
push
or
mov
inc
aaa
mov
scas
inc
sahf
sbb
leave
push
aam
call
jmp
call
fnstenv
icebp
into
cmp
(bad)
in
cli
lock
les
mov
adc
es
test
loop
cmc
adc
das
nop
iret
sahf
(bad)
sahf
shl
mov
imul
nop
jg
pop
loopne
and
mov
lea
sar
or
add
inc
pop
adc
loop
ins
fdivr
mov
xchg
dec
jno
iret
pop
not
adc
or
jno
mov
jg
(bad)
out
cmc
(bad)
jecxz
cmc
cwde
sbb
and
lahf
sub
push
dec
inc
mov
mov
add
cmp
fmul
inc
push
sub
sti
add
shr
add
xlat
shl
inc
mov
aas
fidivr
push
cmp
and
daa
popf
xchg
ret
push
cmp
pop
cmp
pop
out
sub
mov
mov
inc
(bad)
sbb
xor
fwait
retf
test
loop
btc
sub
pop
fimul
mov
dec
or
inc
mov
mov
loopne
ret
int
pop
xchg
bound
cmp
sub
adc
call
stos
mov
or
mov
std
xor
push
xchg
nop
fiadd
fiadd
(bad)
int3
adc
jmp
mov
lods
addr16
xor
ror
dec
push
xlat
dec
mov
push
and
mov
or
popa
outs
mov
pop
ins
mov
add
fs
sub
and
add
push
mov
sub
daa
aam
or
adc
pop
enter
arpl
js
mov
pop
lock
(bad)
cmp
jmp
inc
pop
mov
inc
add
cmp
fbstp
mov
pop
jb
push
fimul
xchg
cs
pushf
inc
pop
push
ss
scas
mov
out
pop
pop
enter
ror
push
(bad)
in
mov
in
fsub
add
xor
mov
mov
xor
adc
inc
push
push
mov
repnz
sbb
xchg
in
(bad)
or
push
sbb
add
loop
cld
ror
pop
je
cmps
adc
pop
test
shl
mov
fmul
shl
mov
and
mov
cmps
push
popa
retf
pushf
daa
icebp
sub
pop
cmps
in
push
add
adc
xlat
mov
cmc
aas
iret
sub
into
sub
cmp
scas
test
jecxz
stc
sbb
mov
or
mov
lock
xchg
xchg
fstp
jmp
sub
hlt
mov
stos
mov
cld
arpl
or
scas
ss
jmp
mov
js
and
inc
dec
mov
push
jp
cmp
sti
cmp
ret
cmc
pop
xor
cwde
xlat
mov
mov
daa
(bad)
ss
inc
(bad)
fldcw
dec
sti
(bad)
nop
les
mov
sahf
out
(bad)
push
xchg
(bad)
call
js
and
push
push
add
bound
hlt
jmp
cmp
or
and
(bad)
xor
movs
push
mov
cmc
cli
mov
push
xchg
repz
push
add
and
jg
adc
cmc
repnz
repz
std
pop
jle
loop
mov
xchg
cs
lods
je
xchg
pop
rol
and
gs
sbb
daa
cmp
pop
xor
xor
adc
test
jnp
mov
add
mov
and
hlt
mov
int3
mov
sbb
jbe
mov
mov
lds
pop
mov
test
xchg
dec
sub
dec
ret
scas
rol
cmc
cmps
adc
out
arpl
outs
bound
or
adc
push
out
hlt
out
mov
shl
inc
and
test
pop
scas
fwait
call
and
fisubr
xchg
(bad)
shr
mov
repz
imul
adc
push
and
ds
or
dec
popa
mov
push
xlat
nop
test
jle
sar
je
sub
ins
clc
mov
stos
cmp
loop
push
in
pop
rcr
imul
repnz
push
enter
lds
(bad)
out
jp
fadd
out
popa
aas
popaw
rcl
fcomp
dec
or
dec
cli
packsswb
pop
into
xlat
fwait
push
ins
mov
add
xor
daa
xor
sbb
adc
(bad)
inc
lds
call
dec
pop
repnz
mov
ret
jge
push
and
pop
dec
mov
jnp
fnsave
mov
dec
and
jg
cmp
xchg
xchg
(bad)
cmp
jecxz
jno
sub
jl
outs
dec
dec
mov
mov
sbb
bound
sbb
jle
pop
movs
enter
push
or
mul
mov
pop
inc
jmp
adc
dec
inc
out
xchg
cld
fstp
and
(bad)
mov
loope
sbb
xchg
jmp
pop
stos
sub
dec
daa
ret
into
xor
ret
sbb
repz
fist
nop
cmp
add
xchg
jmp
repnz
es
arpl
mov
mul
add
lock
fcom
cmc
cdq
fmul
push
jnp
movs
jns
mov
test
adc
movs
xchg
jno
cmp
enter
mov
ret
pop
sbb
jmp
outs
pop
psubsb
cmps
sar
mov
xor
inc
mov
int
mov
sub
dec
cmp
adc
ins
enter
je
push
(bad)
jmp
xchg
loopne
scas
mov
cmp
xchg
in
or
mov
jmp
cmp
or
outs
sbb
cmp
out
ret
mov
sti
jecxz
jbe
bound
mov
movs
es
mov
cmp
mov
loope
pusha
cmps
into
iret
adc
movs
ja
iret
or
call
retf
mov
ins
cmp
gs
sub
mov
(bad)
mov
shr
push
mov
push
sti
leave
push
les
mov
test
xor
aad
sbb
(bad)
loope
dec
out
push
out
push
push
stos
fstp
pusha
sbb
movs
adc
or
ficom
jno
push
jmp
mov
mov
adc
js
sub
dec
leave
mov
dec
ret
push
fnstsw
jmp
stc
and
loope
cmp
in
ins
paddb
pop
hlt
adc
mov
out
data16
mov
xor
call
xchg
(bad)
ds
cwde
inc
inc
cwde
add
out
cdq
rcl
mov
fs
or
lahf
(bad)
(bad)
jge
ins
shl
add
pop
or
jno
pop
mov
or
xchg
push
je
das
(bad)
cdq
add
add
mov
and
pop
or
xor
(bad)
out
fs
mov
es
clc
mov
xchg
(bad)
shr
xchg
mov
out
fs
push
sub
xchg
mov
mov
ret
(bad)
loope
cli
pop
xlat
ja
jge
and
sbb
pop
out
mov
aas
add
pop
push
gs
xor
sti
sub
jl
mov
add
retf
test
or
mov
ror
out
dec
sub
sbb
shl
xor
mov
sub
test
(bad)
aam
mov
xor
(bad)
shr
or
sbb
les
data16
cmp
and
xor
sub
push
outs
pop
mov
outs
lods
inc
inc
dec
mov
fadd
ss
sbb
xor
jl
cmp
inc
mov
imul
aad
rol
repnz
test
add
fcomp
mov
mov
adc
cwde
or
daa
cwde
and
clc
and
push
pop
mov
xlat
inc
jecxz
dec
mov
jmp
outs
into
stos
xor
cmp
iret
sub
add
sub
pop
ss
cdq
cmps
repz
sti
mov
cli
das
xchg
cli
(bad)
cmc
fcom
imul
push
mov
fidiv
arpl
rol
into
arpl
das
lods
and
sbb
xor
daa
inc
cmp
test
pop
int3
add
cmp
iret
pop
call
jnp
(bad)
rcr
pop
add
loop
shl
xor
pop
mov
jne
push
lds
dec
and
loope
aaa
jno
scas
out
xlat
push
in
mov
loope
sbb
int
pop
pop
mov
inc
inc
mov
cmps
std
mov
js
mov
push
jge
ins
stos
retf
dec
jns
dec
dec
push
xor
or
sbb
xor
cmp
xchg
mov
test
mov
sahf
mov
loopne
out
dec
xchg
mov
das
leave
push
jl
pop
or
or
sar
sbb
and
cwde
inc
jb
call
jle
cdq
dec
and
mov
std
test
mov
inc
xchg
mov
dec
pop
pop
jb
nop
pop
xlat
rcr
xor
stc
inc
rcl
test
ret
mov
xlat
jg
and
cwde
pop
retf
jg
pop
fld
rcr
sbb
and
movs
shr
aam
adc
push
mov
lea
hlt
aaa
movs
int
mov
mov
call
mov
and
mov
jle
lds
cmp
add
sbb
mov
pop
xor
dec
or
and
pusha
dec
push
dec
sbb
mov
movs
sub
sahf
pop
mov
enter
ficomp
cmp
into
frstor
call
sahf
dec
mov
pop
jle
pop
and
lods
jle
mov
pop
cmp
test
rol
fbld
movs
mov
cli
mov
rcr
jle
fidiv
pop
inc
xchg
or
mov
push
add
fild
sbb
pushf
cmp
inc
movs
inc
pop
jge
adc
cmp
adc
fcomp
push
pop
(bad)
inc
sub
retf
pop
cmp
std
pop
aas
int
sbb
ret
push
push
sbb
into
or
mov
pop
mul
pop
cmp
in
(bad)
daa
sub
retf
dec
xor
jge
inc
sub
std
dec
out
pop
cli
pushf
adc
and
out
dec
push
cmp
push
fsubp
adc
or
aaa
je
or
rcr
sub
mov
dec
fwait
xor
cmps
mov
out
jge
pop
push
repz
inc
mov
aad
adc
ffree
push
loop
push
gs
xchg
push
xchg
clc
xor
outs
mov
push
jecxz
aad
jb
cmp
push
mov
shr
mov
std
out
(bad)
or
fwait
pushf
bswap
or
fild
ret
int
sub
push
out
rol
and
push
mov
lea
stos
mov
pop
(bad)
and
(bad)
iret
ficomp
ins
fcom
(bad)
(bad)
jns
out
dec
cmp
outs
sub
cs
aam
ror
xchg
cmp
loop
jnp
xchg
mov
cld
mov
test
and
or
aaa
jmp
inc
cmp
retf
and
pop
fdivr
push
sahf
adc
(bad)
test
cli
data16
push
(bad)
pop
pop
push
pop
sbb
stos
jb
(bad)
not
sub
cmp
and
arpl
in
xchg
nop
add
inc
jb
mov
dec
sub
pop
test
je
lahf
mov
iret
dec
push
cmp
mov
or
add
mov
add
cmps
pop
jp
ret
mov
dec
call
dec
dec
pop
test
loop
ror
jb
div
dec
psubw
xchg
clc
mov
imul
adc
mov
fs
xor
cld
xor
lods
jo
xchg
stos
fstp
cld
fcomp
mov
cmp
call
scas
sbb
popf
xor
mov
xor
sbb
dec
push
stos
mov
or
jb
or
sub
cwde
in
ret
lods
pop
dec
add
xchg
push
pop
add
mov
test
test
sub
add
sub
movs
(bad)
fnsave
sub
lods
and
pushf
add
(bad)
mov
mov
or
test
push
int
dec
shl
js
push
sbb
pop
clc
loopne
push
arpl
add
shl
rol
mov
int
jmp
push
cmp
bound
sbb
add
pop
jae
push
or
mov
lods
aas
test
fs
xor
sahf
adc
cli
into
sub
xor
mov
fisub
mov
sbb
movs
loopne
imul
push
test
je
push
fs
mov
xlat
cs
adc
popf
popf
dec
adc
push
jg
scas
push
or
sub
inc
dec
mov
sub
sub
xchg
lock
(bad)
sahf
add
sbb
adc
dec
iret
cmp
fmul
dec
aaa
lods
push
bound
test
mov
cmp
or
cmp
mov
add
fadd
mov
mov
shl
mov
in
cli
mov
into
ss
test
retf
sbb
hlt
sub
pop
push
mov
sub
scas
mov
pop
rol
xchg
lock
pop
inc
shl
mov
jmp
xchg
icebp
popa
les
mov
test
mov
cmp
sub
push
pop
add
and
fwait
mov
arpl
ss
arpl
dec
call
mov
jb
jge
lahf
push
fisttp
or
lea
mov
xor
mov
scas
xor
int3
repz
ins
dec
xchg
ins
enter
xor
out
(bad)
call
mov
pop
sbb
daa
sbb
pop
cwde
jo
cmp
mov
cli
sub
int
out
mov
fidivr
mov
test
test
fisubr
xchg
mov
mov
(bad)
addr16
(bad)
ja
adc
inc
(bad)
(bad)
xchg
hlt
add
add
in
mov
fdivr
sti
pop
fisttp
jle
fsubrp
adc
add
or
xchg
call
cdq
daa
repnz
in
cdq
mov
ret
pushf
popa
mov
and
out
pop
ficom
jmp
mov
and
pushf
ficom
push
fstcw
cmp
push
mov
pusha
ins
iret
sbb
cwde
dec
fistp
movnti
(bad)
daa
loopne
repnz
xchg
and
fucomp
sub
sahf
sbb
ret
add
in
not
int3
add
(bad)
nop
sbb
jae
push
sub
xchg
movs
dec
mov
(bad)
ins
inc
mov
rol
(bad)
or
ins
mov
jbe
pop
inc
push
jne
jb
jmp
fidivr
and
or
sti
push
retf
cmps
xchg
push
out
xor
shl
cmp
xchg
or
ja
ja
add
lods
xchg
out
movs
and
mov
stos
jns
es
ret
jo
fstp
lds
cwde
(bad)
or
mov
ds
lock
jno
in
jmp
inc
xchg
leave
xchg
js
bound
inc
in
test
mov
cdq
retf
jl
inc
int3
mov
or
les
fld
mov
add
in
xchg
enter
leave
push
in
dec
repnz
and
fadd
inc
lds
ins
fnstsw
or
test
dec
mov
shl
(bad)
adc
push
repz
movs
ins
or
fsubr
sub
pop
xor
mov
imul
scas
inc
call
leave
mov
ins
outs
cmp
or
(bad)
fnsave
add
inc
sub
push
shr
mov
pop
stos
dec
cli
push
and
shr
mov
jbe
sub
icebp
retf
aas
dec
mov
clc
int3
stc
xchg
add
int
mov
stos
adc
lea
sub
sub
jbe
push
movs
aad
test
movs
mov
pop
mov
push
nop
iret
es
push
mov
stos
out
xchg
pusha
std
cmps
shr
lock
(bad)
mov
pushf
cmp
cli
stos
adc
add
or
pop
sbb
mov
xchg
mov
pop
adc
adc
mov
dec
cdq
jnp
and
out
inc
jl
dec
cmp
into
in
hlt
or
movs
movs
lds
cmp
or
add
add
and
cmp
jle
pop
pop
daa
daa
gs
xchg
inc
inc
push
xchg
imul
rcr
push
cld
sbb
aaa
inc
or
sub
fmul
lahf
push
or
push
test
(bad)
xchg
setge
mov
adc
daa
mov
je
or
imul
cmp
cmp
ret
add
cmps
mov
mov
cmp
push
lahf
retf
xchg
stc
push
dec
xchg
sbb
xchg
add
lds
not
imul
fild
lahf
jl
ja
call
(bad)
mov
or
add
not
aas
mov
xchg
adc
and
push
or
mov
mov
xchg
xor
adc
pop
inc
and
mov
lock
loop
icebp
xchg
push
sahf
imul
xor
retf
sbb
pop
in
xchg
xchg
or
mov
aad
dec
or
(bad)
pusha
(bad)
mov
sbb
sbb
cmp
mov
popf
lods
or
mov
div
push
mov
cmp
shr
adc
clc
mov
loop
xor
add
arpl
not
in
push
sub
in
push
(bad)
lahf
inc
xchg
enter
push
xor
pop
les
inc
pop
loop
mov
adc
mul
push
hlt
mov
push
movs
cmp
fadd
in
mov
mov
jmp
jne
add
and
(bad)
out
sbb
add
adc
adc
rcr
shl
xchg
push
sbb
scas
shl
test
xchg
and
or
call
mov
cdq
xor
(bad)
lock
and
iret
ss
cmp
xchg
es
and
push
sbb
cli
lahf
jl
dec
test
popa
mov
sub
jo
mov
cmp
cld
data16
add
add
call
and
pop
jmp
mov
cmc
push
or
pushf
jecxz
cs
pop
mov
fdiv
mov
fiadd
int3
(bad)
dec
hlt
iret
nop
(bad)
jne
xor
outs
call
pop
ja
pop
movs
xchg
fsub
mov
(bad)
mov
ss
xor
repnz
and
cmps
xor
bound
cld
lahf
fcompp
stc
cld
cmps
pushf
sar
int3
sbb
jae
retf
(bad)
cmp
out
jb
add
mov
mov
push
push
or
ret
les
fs
push
stc
(bad)
lods
ja
sbb
stos
dec
jp
not
out
mov
sub
in
sub
push
adc
int
cmc
ins
movs
push
pop
xlat
jns
mov
(bad)
out
cmp
cmp
mov
adc
gs
mov
retf
mov
test
or
xchg
dec
xchg
imul
dec
sub
cdq
fiadd
and
adc
push
retf
inc
sub
inc
pop
into
cmp
imul
mov
or
not
jmp
sub
push
ror
mov
scas
pop
stos
jnp
mov
clc
in
inc
fbstp
cmp
mov
pop
dec
fst
sub
mov
pop
mov
jnp
loope
and
jmp
inc
in
(bad)
std
or
pusha
add
iret
jo
add
cmps
jne
fs
mov
fwait
(bad)
dec
xlat
adc
xor
add
pop
out
es
mov
cdq
ja
arpl
rcl
jb
xchg
outs
xchg
rcl
aaa
jp
and
call
loope
cmp
mov
shl
ja
call
push
pcmpeqw
cmp
stos
fld
xchg
cmps
into
popf
mov
aam
jb
sub
push
call
push
add
scas
push
mov
outs
cdq
jae
push
add
and
sub
lds
cmp
imul
and
jmp
jl
ins
outs
fwait
lods
dec
pop
inc
shl
mov
leave
jb
mov
sti
jb
xchg
outs
in
pop
dec
pushw
ins
sbb
or
mov
out
cld
lods
aad
sahf
cmps
ja
test
ret
lahf
mov
pop
xor
sub
sub
xchg
mul
(bad)
loopne
push
and
je
mov
ja
outs
push
aas
test
pusha
aam
pop
pop
movs
jp
lods
add
jb
movs
fld
cmps
mov
cmp
pop
push
sahf
sub
push
push
push
xchg
mov
(bad)
xor
ror
pop
inc
pcmpeqb
test
push
(bad)
xor
test
popa
dec
jnp
inc
adc
sub
retf
push
adc
push
jne
inc
pushf
push
jns
sar
mov
outs
pop
inc
pop
pop
test
div
mov
and
neg
enter
and
imul
mov
loopne
ds
and
pop
add
in
loop
and
jns
rol
or
push
jmp
cmc
ror
call
in
in
repnz
or
and
mov
xor
int
pusha
xlat
push
jns
dec
rcl
jl
jns
aad
aaa
xlat
fiadd
dec
inc
call
add
pop
pushf
dec
leave
pop
add
cwde
lock
nop
jbe
mov
ror
icebp
outs
loop
add
fistp
cmp
int
jbe
inc
inc
or
dec
stos
push
and
lods
shl
push
cs
out
jp
jmp
xor
ror
movs
fisttp
jnp
cmc
cld
adc
test
pop
ins
pop
mov
mov
cld
sti
fsub
sub
add
lea
push
loopne
mov
rcr
inc
in
ja
arpl
mov
xor
mov
xor
test
pop
sbb
cmp
std
out
dec
push
or
xchg
or
sub
jg
fst
inc
div
shr
xchg
ja
and
push
pop
cdq
push
call
test
jle
jl
adc
mov
cdq
adc
test
cmp
leave
dec
scas
fcomp
popf
lods
xchg
pop
and
jl
out
cmp
push
lods
cmp
pushf
pop
and
cmp
aaa
mov
aam
or
jg
out
mov
and
xlat
sub
cmp
cmp
das
scas
dec
or
std
fldenv
mov
mov
dec
rcl
adc
out
mov
jge
jecxz
xor
xchg
mul
xor
sub
xchg
inc
pop
in
push
aad
bnd
or
sub
jp
inc
addr16
xlat
fucomip
fdivr
mov
mov
add
idiv
xor
mov
and
(bad)
cmc
and
into
jge
fimul
movs
(bad)
es
mov
mov
push
dec
fs
xlat
lods
fstp
pusha
loop
jg
mov
es
sbb
adc
sbb
mov
mov
popa
xlat
mov
sbb
xchg
cvtpi2ps
dec
dec
jp
(bad)
hlt
adc
jae
mov
or
and
jmp
mov
leave
push
pop
outs
gs
cs
out
mov
xor
dec
xor
push
ss
enter
add
(bad)
stos
sbb
jmp
pop
loope
sbb
ja
out
je
cmp
mov
nop
movs
and
pop
test
fsubr
pop
pop
inc
or
cmp
push
push
xchg
ins
(bad)
aaa
sahf
add
cmp
inc
mov
sti
cs
mov
call
xchg
js
or
jns
pop
fcmovu
cmps
outs
mov
cli
mov
mov
pop
or
add
dec
cs
mov
or
sub
ins
daa
mov
dec
mov
dec
xor
rol
inc
call
test
pop
aam
xchg
aaa
in
enter
mov
sub
adc
loope
es
jbe
or
mov
push
sub
int3
xor
and
sti
aas
(bad)
sti
ja
scas
imul
pop
push
cmp
xor
cdq
sub
imul
adc
or
jne
xlat
dec
jge
ficom
(bad)
stos
adc
or
sbb
xchg
dec
pop
ror
jg
pushf
or
mul
test
sti
popf
inc
adc
dec
gs
(bad)
xlat
leave
mov
(bad)
popf
fisttp
xchg
scas
ret
xchg
(bad)
aad
mov
stc
rol
in
(bad)
fdiv
xchg
iret
mov
aas
outs
loope
push
cmp
dec
movs
mov
loope
fsubr
add
sub
push
sub
repnz
fs
pusha
cmp
in
(bad)
clc
shr
out
call
popf
fst
int
(bad)
rcl
shl
int
pop
pop
fcomip
adc
pop
or
test
add
in
sub
jo
(bad)
mov
leave
push
shl
jno
cmc
mov
push
cmp
sub
inc
mov
idiv
stos
cmc
inc
xchg
popa
outs
rol
lods
in
cld
sbb
or
adc
(bad)
lods
mov
pop
repz
sbb
cmp
ds
(bad)
jno
scas
shl
test
and
fs
lds
add
imul
jp
js
fcom
shl
xor
pop
xchg
sahf
xor
sub
pop
lea
mov
adc
fs
sub
mov
clc
mov
inc
cmp
(bad)
mov
fstp
(bad)
clc
stc
ins
addr16
int3
xor
push
pop
jecxz
int3
cmc
adc
fmul
mov
mov
mov
xor
popf
gs
out
push
mov
cli
loop
ror
xor
jne
popf
fldcw
ret
pop
out
es
sub
push
lods
push
or
pop
push
pop
shl
rol
retf
movs
and
xlat
pop
fcmovnu
enter
aas
jle
sub
fcmovne
inc
mov
pop
cld
test
fwait
dec
inc
mov
jg
pop
mov
mov
imul
add
push
repz
ret
ja
ror
push
sbb
mov
test
test
jno
cmp
jo
in
jae
stos
pusha
adc
cmc
out
clc
xchg
in
repnz
les
dec
xchg
pop
loope
adc
lahf
jmp
adc
dec
mov
xchg
ret
dec
sub
fldenv
cld
pop
jle
jp
xor
adc
pop
xchg
jge
xlat
pop
icebp
in
pop
add
sub
or
leave
inc
dec
test
psrld
jl
push
mov
mov
in
call
xor
mov
sub
jge
jl
mul
xor
sbb
pop
idiv
push
cdq
cmp
push
in
ss
ds
arpl
retf
jbe
jle
pop
ret
push
mov
fdiv
jle
aam
iret
popa
daa
clc
loop
pusha
popa
and
lea
jge
js
mov
or
ffreep
jl
das
or
movs
das
cmp
push
mov
add
fild
sub
(bad)
dec
repnz
lods
xor
mov
push
jae
test
lea
movs
bound
ins
retf
sub
jnp
inc
cmp
test
stos
cli
push
pop
(bad)
test
add
dec
rcr
sub
out
pop
out
xchg
xchg
and
cmps
sbb
je
mov
mov
out
fnsave
dec
sbb
inc
sahf
gs
and
xor
mov
repnz
loope
pop
adc
mov
sar
sub
adc
pop
xchg
and
test
pop
cmps
push
arpl
or
popa
rol
repz
adc
outs
sti
cld
jp
mov
aad
pushf
fdiv
inc
dec
pushf
sbb
and
mov
and
div
loopne
jne
jb
dec
adc
sbb
aas
call
mov
xlat
scas
jo
test
xor
sub
repnz
(bad)
clc
ins
shr
ret
sbb
and
aad
loop
push
xchg
clc
int3
jmp
mul
xor
xchg
ds
and
retf
lods
dec
aas
(bad)
jmp
dec
sahf
call
push
sub
xchg
push
jne
outs
jl
jge
fdiv
in
cmp
pop
cli
mov
sub
ret
stos
in
fild
xchg
call
jle
sbb
mov
sub
sbb
cmp
jmp
mov
add
pop
mov
lods
mov
inc
iret
adc
imul
int3
test
pop
rcl
adc
mov
movs
push
xchg
jne
inc
inc
out
cmps
push
pop
mov
test
stc
inc
fild
pop
icebp
mov
adc
xor
(bad)
xchg
adc
dec
inc
push
xchg
in
clc
or
and
xor
adc
push
mov
cmp
inc
lds
ret
hlt
out
add
sub
shr
fwait
sub
fldpi
ds
mov
arpl
shr
int
adc
sbb
mov
je
out
arpl
push
fistp
mov
mov
jp
aam
pop
dec
loop
mov
(bad)
adc
(bad)
mov
outs
mov
out
inc
shl
sahf
enter
nop
jecxz
pop
jge
(bad)
adc
aaa
sub
pop
pushf
xlat
mov
fcom
jmp
inc
cli
ret
pop
jae
in
dec
and
mov
cli
imul
aam
push
sahf
inc
int
inc
jo
pop
or
in
adc
mov
in
movs
aas
and
(bad)
cmp
lods
mov
adc
rol
adc
fcmove
pop
int3
or
push
inc
push
pop
dec
inc
aaa
popf
push
pop
jecxz
repnz
inc
pop
popa
or
inc
test
lea
shl
xchg
add
mov
xchg
aad
sbb
add
or
jecxz
js
daa
push
cmp
mov
ror
aas
xor
pop
sub
(bad)
adc
outs
mov
aam
jne
add
sbb
sub
dec
pop
and
int3
xchg
ss
aaa
int3
in
mov
inc
loop
sub
jne
cwde
scas
je
in
jl
cmp
pop
imul
push
cmp
sub
cmc
jecxz
dec
cmp
and
xor
push
call
or
or
data16
(bad)
addr16
add
lods
icebp
mov
movs
movs
hlt
jp
dec
xchg
sub
ffreep
sahf
nop
jns
pop
(bad)
jbe
fstp
icebp
imul
in
pop
cmp
rcl
dec
test
fsubr
jl
or
add
std
mov
fist
ret
das
cmps
mov
div
mov
xor
sub
je
stc
add
pop
ja
or
push
lods
stos
shl
and
out
push
adc
mov
xor
and
iret
std
adc
push
sbb
call
in
jg
push
add
push
out
sti
pop
mov
call
fst
sub
imul
ss
dec
xchg
add
div
lock
push
dec
sub
(bad)
loop
xchg
mov
mov
cmc
loop
fldcw
adc
movs
std
cmp
xor
jae
dec
adc
stc
xor
dec
pushf
scas
push
and
mov
ds
inc
movs
jg
mov
dec
push
rcr
adc
sub
mov
mov
xchg
ror
call
movaps
adc
sbb
in
(bad)
(bad)
pop
push
pop
mov
mov
ret
aam
mov
mov
mov
dec
ffreep
xor
adc
test
cmps
nop
shl
dec
sub
xchg
sbb
push
sbb
and
and
add
ret
retf
xor
and
out
or
push
xchg
jo
mov
clc
es
push
std
pop
xor
shl
div
or
(bad)
sti
add
adc
adc
push
push
scas
leave
sbb
fsubr
cmp
mov
sub
stos
xor
imul
loop
mov
ins
pop
aas
cwde
loope
push
sbb
lock
cwde
adc
test
les
push
jb
mov
add
(bad)
fidiv
into
test
sahf
inc
xchg
xor
(bad)
adc
jle
mov
loopne
jnp
pop
pop
std
in
lock
mov
mov
(bad)
or
pusha
repz
pop
inc
jae
or
dec
sub
stos
cwde
sbb
pop
icebp
pop
iret
div
xchg
(bad)
cdq
dec
ins
mov
inc
ss
mov
ins
loope
cmp
adc
adc
or
(bad)
xchg
adc
push
ins
fdiv
jmp
push
pusha
dec
sub
arpl
daa
arpl
retf
in
inc
inc
aas
fidivr
inc
int3
mov
lahf
adc
pop
cwde
cli
in
adc
jo
dec
xchg
and
out
xor
adc
adc
mov
gs
clc
fs
mov
in
or
jle
stc
pop
pop
mov
pop
xchg
jl
stos
fadd
jb
mov
ret
or
sbb
test
dec
cli
jnp
mov
mov
aam
xor
dec
fsubr
sub
or
loopne
icebp
adc
jmp
inc
xor
dec
mov
jnp
neg
sub
arpl
clc
shr
cwde
scas
in
sbb
sub
pop
test
xor
mov
xor
xor
sbb
mov
sbb
pop
das
dec
cli
jbe
add
adc
xchg
cmps
dec
out
(bad)
repz
jecxz
adc
adc
pop
paddb
adc
or
xchg
aam
loop
jmp
jl
add
pop
movs
div
or
ins
scas
inc
and
mov
std
aam
clc
pop
loop
popa
(bad)
pop
shl
imul
sbb
xchg
xchg
and
adc
pop
retf
les
ins
mov
cld
pop
fld
sbb
push
xchg
aaa
dec
ret
mov
add
and
mov
stos
das
pushf
fsubr
gs
mov
inc
add
jmp
fsubr
mov
adc
dec
inc
jmp
cmps
mov
out
hlt
mov
mov
(bad)
mov
imul
cmp
add
gs
cwde
xor
mov
(bad)
jmp
mov
sub
movs
mov
bound
cmp
adc
inc
cmp
ret
pushf
loope
daa
sar
mov
sub
xchg
push
add
retf
repnz
in
inc
popa
int3
lods
js
dec
add
ss
ins
cmp
mov
in
inc
mov
adc
xor
pop
cmp
nop
xchg
nop
cmp
xchg
pop
std
imul
mov
outs
aaa
mov
(bad)
mov
push
neg
ret
aad
mov
inc
sub
mov
pusha
fucomi
cmps
dec
lahf
jno
(bad)
daa
sbb
jmp
sbb
inc
xor
(bad)
mov
mov
imul
dec
push
out
outs
inc
xor
add
jle
or
frstor
or
xor
test
call
pusha
xor
adc
cmp
dec
adc
mov
fwait
cmp
pop
not
push
sbb
out
mov
jne
sub
push
mov
cmp
aaa
or
hlt
jae
jmp
adc
shl
mov
push
pushf
iret
jle
fxam
pop
push
cmps
or
add
sub
cdq
push
mov
rcr
cmp
mov
jo
mov
dec
xchg
out
out
test
enter
mov
ins
nop
jl
or
mov
push
push
or
cmp
or
sbb
aaa
ins
std
dec
mov
or
dec
int
sbb
mov
push
ret
enter
ss
cmp
inc
les
xchg
xchg
ror
jb
add
cmp
xchg
jns
jbe
or
into
cmc
and
in
xchg
push
in
sahf
inc
out
cmps
push
add
cwde
push
mov
call
test
out
or
sbb
repz
test
clc
inc
adc
cmps
push
xor
ret
xchg
jnp
test
aam
or
imul
data16
cmp
cs
leave
cmp
cmc
and
adc
ss
js
in
xchg
nop
(bad)
mov
in
sub
pop
pop
push
push
mov
arpl
xor
dec
mov
daa
idiv
xchg
call
xchg
sbb
stc
push
cmp
loopne
mov
das
xlat
in
mov
dec
xor
cmp
mov
sub
adc
(bad)
into
dec
jb
ror
add
bound
mov
dec
jnp
retf
sub
mov
mov
jl
adc
and
loop
imul
mov
repz
out
in
add
inc
call
mov
loope
out
add
jmp
xchg
retf
xor
jecxz
test
pop
push
inc
cmps
nop
fldenv
sub
xchg
imul
and
(bad)
jmp
adc
pop
mov
jb
leave
stc
ficom
ret
adc
cmp
sub
cmp
or
ins
cmp
jecxz
sbb
mov
inc
push
or
dec
lahf
shr
or
shl
sahf
movs
jle
jmp
out
js
mov
xchg
dec
enter
dec
ret
push
sbb
mov
xchg
sbb
int
cmp
inc
ds
adc
aaa
sbb
mov
rol
mov
jb
mov
movs
dec
outs
xchg
aas
das
inc
add
cdq
and
in
fcom
mov
int
fcom
sahf
push
inc
pop
mov
sbb
and
mov
adc
movs
and
cmp
mov
imul
pop
repz
mov
mov
dec
in
mov
shr
jp
jbe
sbb
stos
hlt
sub
jl
push
sbb
xor
call
jle
ror
call
fidivr
cmp
jb
ins
(bad)
adc
mov
cdq
ja
push
cmp
out
clc
sbb
or
sti
test
cmp
leave
xchg
enter
out
xchg
mov
xor
mov
aad
sahf
aam
test
mov
add
mov
sub
push
(bad)
adc
lods
scas
jmp
xchg
add
sbb
sbb
add
and
sbb
and
hlt
adc
inc
(bad)
das
dec
and
cs
out
push
ret
stc
lods
mov
data16
fisttp
imul
scas
test
pop
mov
retf
mov
sub
push
mov
inc
or
retf
test
or
xchg
leave
(bad)
aam
js
in
enter
popf
arpl
jg
lock
pop
mov
sbb
pop
(bad)
mov
fs
loop
imul
sub
das
into
clc
push
push
mov
inc
(bad)
mov
xor
pop
shl
push
xchg
dec
pop
inc
dec
push
and
pushf
inc
dec
popa
fldcw
dec
arpl
sbb
push
or
jnp
add
enter
cli
xchg
mov
and
and
pop
inc
mov
or
mov
mov
fisubr
movs
retf
jg
aad
push
mov
sbb
(bad)
and
sub
arpl
sub
ins
ss
into
cmp
xor
loopne
lea
mov
dec
loope
stos
shl
inc
(bad)
enter
(bad)
mov
pop
out
test
das
int3
xor
aam
rcl
ins
enter
mov
jmp
scas
ret
je
mov
ins
fstp
ds
adc
ja
aam
jbe
xchg
daa
daa
test
(bad)
fidiv
inc
ins
movs
scas
xchg
pop
mov
popf
mov
xchg
(bad)
test
xor
inc
xor
inc
test
dec
cmp
push
test
mov
mov
push
adc
mov
push
emms
xchg
mov
(bad)
mov
cli
(bad)
hlt
cmp
mov
stos
cmp
mov
jnp
fucomp
stc
xor
mov
daa
pop
jl
in
or
daa
jmp
and
mov
jns
mov
push
xchg
mov
repz
je
push
out
(bad)
ja
fs
xor
mov
retf
xor
out
imul
sub
cmp
sub
cmp
adc
call
sub
rol
sbb
fidivr
fstp
retf
repz
pmullw
(bad)
dec
mov
mov
gs
mov
pop
mov
sub
call
test
shr
cld
xor
adc
add
les
outs
addr16
cmc
mov
(bad)
jb
jp
mov
inc
cmc
push
stos
int
pop
pop
jbe
inc
imul
inc
mov
loopne
out
pop
ins
iret
bound
mov
push
mov
iret
data16
inc
xchg
imul
jne
(bad)
push
(bad)
cld
mov
je
or
push
mov
div
hlt
mov
jg
mov
sbb
mov
bound
pop
push
xor
test
test
nop
mov
pop
repz
inc
into
dec
add
daa
outs
mov
jne
arpl
mov
inc
jmp
mov
fmul
psubb
push
mov
fild
push
or
pop
cdq
sti
sbb
push
mov
mov
cwde
mov
jmp
dec
test
mov
jb
adc
xchg
jno
cmp
imul
push
outs
iret
hlt
cli
icebp
dec
xchg
dec
cli
ja
push
jnp
pop
lock
call
adc
seto
stc
rcr
sbb
gs
jg
xchg
xor
dec
popf
inc
gs
jo
js
adc
aaa
mov
add
push
sub
pop
mov
jecxz
xor
arpl
mov
pop
mov
les
or
lahf
std
rol
fnsave
add
jmp
icebp
dec
outs
scas
call
and
add
cdq
xchg
ins
jp
push
adc
sub
loop
jmp
fcom
push
bound
icebp
out
or
mov
or
add
or
push
cmp
inc
sti
mov
or
test
sub
and
xor
sbb
push
movs
retf
jno
or
out
cmc
retf
addr16
sbb
adc
push
sub
xchg
jbe
adc
lea
in
add
mov
jnp
jmp
retf
cmc
cmp
out
icebp
aam
inc
daa
add
leave
aaa
mov
mul
mov
stos
aas
inc
in
mov
and
sbb
loopne
xor
xchg
call
mov
pop
sub
cmp
inc
mov
popa
popa
mov
ds
(bad)
call
lock
jmp
retf
and
xor
aad
mov
test
mov
test
mov
pushf
arpl
lods
xor
push
mov
cmp
push
adc
cmp
leave
jge
and
sti
adc
dec
movups
(bad)
adc
movs
clc
mov
into
xor
fsubrp
xchg
push
mov
(bad)
mov
pop
neg
sub
(bad)
in
fadd
arpl
and
mov
push
jno
and
pop
ss
fidiv
mov
pushf
mov
icebp
int
add
aad
xchg
mov
jo
dec
(bad)
aas
inc
mov
xor
sbb
mov
retf
imul
cli
gs
sbb
cwde
daa
xchg
stc
mov
adc
mov
sbb
iret
repnz
xchg
add
mov
sti
mov
call
or
jle
fst
push
out
imul
std
clc
stos
and
outs
push
enter
cmp
dec
js
jae
ss
(bad)
shl
cmps
xchg
inc
mov
scas
jns
dec
pop
jmp
jecxz
and
cmp
pop
add
sbb
mov
faddp
mov
mov
mov
mov
fdiv
mov
test
push
mov
test
test
lods
xor
test
mov
pop
pop
stos
sub
inc
xor
or
jmp
bound
clc
in
rol
cmp
loope
jmp
pop
mov
gs
or
cwde
push
mov
xchg
retf
in
fsub
outs
stc
in
mov
test
xor
xchg
pop
mov
aad
or
shr
adc
add
sti
rcr
xor
xchg
xchg
lds
aaa
sbb
sti
jae
jp
push
jg
cmp
mov
sub
jge
imul
mov
emms
in
adc
out
push
jg
push
sbb
stos
int
sub
xor
or
mov
xchg
push
xor
lods
repz
aas
dec
test
(bad)
rcl
mov
push
mov
fild
sub
adc
call
in
popf
daa
fs
dec
inc
cs
xchg
xchg
push
aas
cmps
push
sub
cdq
dec
je
push
mov
jl
call
jecxz
lds
dec
test
xchg
imul
or
int
shr
pop
cli
retf
sbb
add
cmp
or
std
loope
pop
cmp
sbb
lds
cmps
cmp
push
add
test
and
fs
cmps
bound
aad
fdiv
xchg
or
popa
mov
pop
sub
loope
movs
bound
mov
pushf
add
and
jnp
and
mov
mov
fwait
lods
pop
jnp
jle
je
dec
push
dec
and
js
lock
iret
mov
out
ret
enter
sahf
loop
scas
mov
sbb
mov
sbb
xchg
loope
into
nop
mov
adc
add
sbb
ret
sub
stc
xor
sub
pop
xor
stos
xor
out
jmp
xor
cli
xchg
add
sub
ret
sbb
jle
dec
dec
sub
xor
lock
pop
adc
sub
sbb
scas
fwait
mov
aam
push
xchg
xchg
lods
cmp
out
(bad)
xor
fdiv
xor
je
out
daa
jg
inc
pop
sub
in
enter
push
fcmovu
or
(bad)
out
jp
loop
js
xlat
dec
data16
push
inc
in
sub
pop
xchg
int3
pop
lods
mov
adc
test
ror
mov
push
and
jmp
test
xchg
dec
out
es
mov
mov
sub
retf
popa
scas
pop
shl
jnp
(bad)
xor
repz
cld
pop
rcr
mov
imul
sub
push
push
mov
add
dec
jg
arpl
cld
jecxz
sub
sbb
xor
stc
pop
lods
es
test
es
xchg
bound
stos
adc
mov
dec
popf
cmc
push
inc
pop
or
and
push
das
and
jbe
je
fbld
pusha
xchg
pop
leave
sahf
mov
mov
sti
(bad)
retf
je
daa
retf
dec
scas
daa
xor
pushf
ins
and
movs
mov
xchg
shl
aaa
add
sbb
adc
mov
and
int
and
push
push
stc
mov
not
cmp
fcmovne
sbb
push
enter
call
icebp
cld
inc
add
test
ins
imul
in
push
xchg
mov
jle
add
paddsw
sbb
stc
stc
std
xchg
aad
dec
and
cwde
jp
xchg
and
mov
daa
mov
or
push
dec
inc
iret
sbb
scas
das
(bad)
into
xchg
mov
sti
push
push
shr
xor
push
mov
inc
push
push
pop
cmp
cmc
adc
jne
repnz
inc
dec
jecxz
xor
jno
cld
enter
push
cli
les
(bad)
fld
pushf
sar
ss
rcr
and
mov
xchg
fmul
or
retf
in
cli
pop
mov
ror
enter
div
mov
jae
call
(bad)
das
ret
mov
xchg
inc
je
pop
clc
pop
push
inc
loopne
cli
inc
mov
mov
mov
cmp
lds
fs
mov
adc
stos
ret
sub
push
push
and
mov
test
rcl
push
out
ficom
test
pushf
inc
and
sub
mov
sti
cld
push
sub
jo
fild
int3
xchg
pop
cmps
dec
sahf
imul
es
stc
sub
jl
shr
aas
xchg
int3
cmps
cdq
test
test
xor
and
movs
add
pusha
into
xchg
loop
cmp
xchg
adc
ret
lahf
out
inc
bound
add
adc
scas
hlt
call
adc
mov
shl
sub
pop
mov
push
leave
cmps
ret
fisubr
inc
sbb
or
in
loop
in
shr
jb
int3
pop
out
ins
or
xchg
test
xchg
sbb
les
sbb
or
out
and
jp
jge
xchg
mov
les
add
jecxz
(bad)
push
xchg
stos
cmps
mov
pop
jl
add
pop
push
push
(bad)
fdiv
sub
add
jl
xlat
inc
hlt
bswap
jl
xchg
fs
mov
or
push
je
jmp
jmp
add
mov
into
jo
test
mov
rcr
add
lahf
pop
inc
loop
stos
aam
jno
cmovge
ds
adc
(bad)
lock
mov
mov
mov
sbb
jle
sbb
cs
sub
pop
sub
xchg
xor
pop
push
lods
lea
mov
(bad)
cmp
wbinvd
and
(bad)
js
js
and
xchg
fwait
lods
adc
mov
icebp
cmp
or
jo
add
jno
xlat
sub
sub
jmp
and
shl
dec
add
sbb
in
pushf
cld
jl
push
inc
test
out
dec
dec
adc
mov
mov
outs
xchg
sub
jp
xchg
fs
push
pop
es
mov
inc
push
pop
pushf
gs
or
jnp
aam
gs
into
cmp
mov
(bad)
jns
mov
movs
push
pop
cmps
int3
outs
or
outs
or
push
jp
xchg
or
mov
xchg
push
rol
aaa
sbb
fadd
test
dec
mov
repz
sbb
(bad)
sub
mov
inc
xchg
out
retf
mov
add
popf
ret
popf
repz
and
dec
push
adc
fist
dec
and
xchg
daa
inc
sbb
mov
ins
add
cdq
sbb
mov
movs
lods
xchg
or
pushf
dec
aam
pop
adc
mov
lahf
out
fild
popa
punpckhdq
adc
or
jns
ins
nop
loope
adc
inc
jecxz
cmp
fldcw
cdq
in
xchg
sbb
inc
in
stos
push
fdiv
sti
inc
mov
cmp
sbb
dec
or
movs
cdq
inc
test
pop
out
lock
xchg
in
fcmovnb
mov
sbb
xor
int3
jo
add
in
or
push
pop
not
cmps
push
or
out
sbb
iret
div
jnp
outs
mov
cmp
xor
inc
pop
iret
js
sbb
xor
cmps
test
and
sub
add
cld
add
xor
or
push
inc
push
mov
dec
fnstenv
xor
loope
ffree
fsub
and
lock
inc
js
jmp
inc
push
jg
add
retf
jne
movs
shl
or
or
retf
fst
bswap
inc
jns
fucomp
bound
dec
clc
retf
xor
push
jno
je
ins
inc
mov
cli
sub
or
mov
imul
in
scas
xchg
pop
outs
(bad)
mov
arpl
xor
cmp
loope
and
(bad)
retf
pop
ins
int3
cmp
fs
nop
mov
mul
xchg
add
mov
jecxz
movs
lds
repnz
test
cmps
inc
lods
mov
or
push
fsubr
(bad)
popa
gs
daa
stos
sbb
jmp
and
sub
pop
push
inc
pop
jno
add
sub
adc
xchg
jp
jge
in
fstp
out
adc
cmp
ins
das
mov
lods
in
sahf
dec
sbb
dec
fadd
xor
push
xor
aam
jle
adc
mov
xchg
fiadd
aaa
adc
arpl
jecxz
adc
fistp
nop
push
fild
xchg
sub
ret
jp
mov
sahf
mov
ficom
cli
or
nop
cmp
sbb
push
sub
xchg
and
pop
push
push
inc
jb
mov
hlt
sub
fcom
xlat
inc
mov
adc
push
sti
pop
jle
popa
out
and
pop
sub
mov
data16
cdq
vmread
jp
rcl
outs
mov
bound
push
inc
stos
js
(bad)
push
ja
and
xlat
pop
inc
adc
pop
xchg
mov
sar
mov
jp
ja
call
pusha
mov
cld
push
mov
nop
(bad)
bound
sub
or
cdq
and
maskmovq
neg
loop
out
xchg
mov
inc
shr
sub
inc
int
lea
fmul
icebp
push
aaa
sbb
jg
imul
jnp
inc
sub
es
dec
or
ins
mov
lahf
cmp
movs
dec
fsin
fs
sbb
cmp
pop
das
inc
ret
cmps
ins
xchg
xchg
out
jnp
mov
jb
in
lahf
ret
sub
jge
xor
xor
sbb
adc
xor
das
gs
int3
mov
in
sub
jae
enter
shl
inc
std
or
bound
adc
psubb
adc
imul
inc
lahf
scas
mov
or
cmp
and
inc
jmp
aam
lea
xlat
or
dec
sar
sub
jbe
(bad)
out
cli
imul
or
sub
or
sub
mov
sub
rol
scas
jle
or
xchg
nop
sbb
dec
dec
mov
pop
jns
jmp
sbb
xlat
(bad)
out
mov
xchg
push
ret
pop
push
call
cdq
jp
outs
jne
out
cmp
and
lods
add
in
pop
inc
inc
mov
pop
leave
cmc
sbb
loopne
push
pop
pop
mov
jp
cmp
fistp
call
jmp
and
ret
imul
inc
scas
xchg
mov
jbe
or
cwde
jecxz
fcom
fld
cmp
lahf
sub
xor
xchg
repnz
jo
ffree
icebp
ins
xor
xchg
mov
mov
add
loopne
or
dec
nop
rcl
mov
xchg
or
stc
pop
shr
clc
xor
aam
cdq
test
out
iret
lea
cmp
push
inc
fdiv
sub
pusha
icebp
pop
jp
dec
or
in
ja
(bad)
cmc
dec
pushf
cmp
lock
test
mov
push
mov
loopne
add
dec
cmps
push
rcr
push
daa
add
mov
push
inc
push
cmp
sysexit
xchg
ins
mov
(bad)
sub
es
dec
mov
scas
call
push
shl
pop
fcom
mov
in
call
push
ins
rcr
or
cli
cmps
cmp
jbe
pop
mov
repz
pop
or
xor
dec
cmp
scas
xchg
mov
add
out
in
mov
mov
into
mov
(bad)
mov
xor
sub
cmps
in
add
ror
call
jge
shl
mov
fld
in
add
mov
popf
test
push
sti
fisttp
or
inc
jl
mov
or
inc
test
lock
mov
add
mov
rcl
jbe
push
xchg
cs
pop
movs
jo
es
ins
ss
(bad)
jle
push
addr16
dec
loopne
loop
jge
fstp
mov
leave
stc
cmps
ror
popf
fistp
mov
les
inc
xlat
sbb
in
add
or
adc
add
xchg
repnz
(bad)
ficom
mov
mov
ins
mov
pop
(bad)
xor
xor
arpl
aam
sbb
data16
test
shl
mov
cmp
sbb
mov
inc
jb
lock
push
ins
ret
retf
cmp
inc
jne
aam
mov
gs
stc
enter
sahf
xchg
mov
sbb
mov
scas
pop
sbb
cmp
xchg
or
pop
pop
jnp
dec
cs
shr
aad
adc
cmp
dec
cs
gs
ror
adc
pop
cs
xor
xchg
pop
out
pushf
scas
mov
adc
mov
imul
shl
js
pop
and
cli
cmp
mul
adc
cmc
mov
inc
mov
pop
jno
out
nop
mov
add
jmp
cmps
sbb
stc
cdq
call
jle
add
inc
pop
mov
push
adc
xchg
sbb
inc
(bad)
sahf
sbb
loope
test
(bad)
cmp
scas
add
add
jp
std
sbb
retf
mov
ret
test
cli
fdivr
sahf
jb
stos
scas
icebp
sub
call
xchg
repnz
test
shl
fcmovnb
es
jecxz
or
mov
stos
mov
(bad)
popa
pop
jg
push
loope
push
push
adc
cdq
xchg
ret
in
iret
ret
gs
cdq
rcl
sub
addr16
scas
(bad)
dec
ret
jnp
test
fnstenv
push
std
inc
mov
push
nop
sbb
je
or
lds
jbe
mov
(bad)
mov
and
into
arpl
(bad)
xchg
(bad)
call
les
and
xchg
cmps
cmp
mov
jb
dec
lea
stos
jl
xchg
sub
add
sar
xor
dec
dec
jno
lods
lahf
jle
fwait
push
or
push
xor
sub
dec
or
loope
mov
lahf
dec
dec
push
cmps
sbb
movs
lds
add
shl
clc
(bad)
cmp
test
and
push
lods
les
and
movs
movs
loope
push
jge
or
mov
out
dec
xlat
pusha
mov
xchg
or
and
push
bt
iret
test
inc
sbb
push
mov
adc
ins
dec
push
sbb
xchg
mov
mov
mov
sbb
movs
imul
mov
or
repnz
sub
lea
int3
mov
in
push
mov
std
(bad)
jae
out
jg
mov
xchg
inc
pop
data16
loopne
adc
ss
mov
push
mov
pop
jecxz
or
inc
stos
das
call
pop
shl
adc
xor
xchg
dec
xchg
xchg
(bad)
daa
outs
inc
pop
xchg
jbe
or
or
leave
add
lds
dec
loope
adc
dec
hlt
cmps
xchg
lahf
or
xchg
xor
mov
icebp
pop
call
stc
xor
mov
lock
cmc
hlt
ret
jl
ret
pop
mov
lahf
repz
cmp
mov
aam
popa
leave
rcr
in
pop
inc
outs
shl
icebp
and
fstp
mov
nop
lods
imul
je
retf
std
dec
adc
jmp
push
pop
cmc
paddsw
xchg
jecxz
mov
dec
dec
add
jo
and
xchg
dec
cli
cdq
aam
out
pop
ficom
cmp
fld
add
popa
inc
fiadd
jecxz
dec
jmp
xor
bound
fwait
popf
mov
dec
pop
jnp
add
inc
out
xchg
rol
inc
mov
mov
jmp
stos
adc
repnz
sbb
outs
push
xchg
cdq
sbb
add
mov
jne
out
cwde
scas
or
adc
pop
jp
sbb
outs
sbb
adc
outs
nop
std
cmps
jno
ret
fwait
rdtsc
mov
cmps
pop
paddw
ret
adc
xchg
lock
xchg
pop
mov
out
xor
into
push
sbb
movs
arpl
jle
mov
loope
jge
mov
inc
cmp
lea
sahf
sub
adc
lds
inc
dec
retf
call
shl
fs
outs
cld
lods
aam
dec
or
jne
mov
sbb
shl
(bad)
push
dec
push
jmp
pop
xchg
int3
dec
inc
jg
cmp
xchg
mul
nop
idiv
out
xchg
retf
pop
addr16
xchg
imul
xlat
in
dec
mov
hlt
pop
movs
repz
mov
(bad)
pop
push
popf
mov
rol
pop
fstp
test
adc
jle
daa
repz
pop
test
xor
mov
(bad)
ror
jle
jns
cmp
das
cmc
mov
jg
inc
adc
jnp
mov
mov
push
jecxz
dec
scas
(bad)
out
mov
jbe
imul
sub
and
cdq
test
sub
and
mov
jns
jno
push
inc
loope
faddp
mov
fistp
rcr
and
out
push
xchg
add
cld
fst
arpl
cmp
push
sub
xor
cmps
stc
sub
push
ja
push
cmc
sbb
cld
test
push
es
ss
mov
fcomi
pusha
push
xchg
retf
mov
rol
jne
mov
inc
int3
inc
inc
add
xchg
mov
jecxz
cwde
xchg
ss
add
cmp
sub
adc
sub
or
sar
cmp
inc
inc
jo
repnz
pop
mov
pop
jno
inc
xor
jae
cmp
repz
add
xor
iret
pop
call
aaa
dec
test
in
loopne
xor
sbb
dec
int
jne
push
sub
movs
inc
in
pop
sbb
push
jo
cmp
cmp
cs
push
out
in
mov
pop
inc
les
xor
inc
and
test
pop
stos
out
jns
das
movs
cwde
das
in
cmps
(bad)
xor
jnp
in
mov
jge
pop
lock
adc
(bad)
pusha
ror
or
(bad)
arpl
xor
fdivr
in
aas
pop
sahf
cmps
and
xchg
push
ror
loopne
mov
push
cmps
ja
jle
push
sti
adc
jge
sbb
push
xor
pop
cdq
and
dec
pop
or
xchg
cmc
mov
xor
aad
jecxz
leave
ror
div
aad
ja
adc
push
mov
dec
leave
iret
sub
scas
fbld
retf
adc
sbb
out
xchg
push
mov
sbb
out
lock
dec
inc
bound
mov
loopne
jo
mov
int
dec
mov
or
xchg
pop
repnz
mov
(bad)
xchg
les
scas
mov
int3
addr16
xchg
or
imul
xor
and
jns
in
dec
retf
mov
mov
in
fisttp
or
div
fcom
in
sbb
in
adc
cmp
sub
cmp
scas
mov
test
dec
fwait
add
pop
(bad)
xor
jo
xchg
mov
(bad)
test
icebp
js
in
sbb
(bad)
or
imul
pop
mov
movs
loope
or
fmul
push
loop
popf
mov
sahf
pop
pop
ficomp
adc
(bad)
in
dec
outs
gs
or
adc
xchg
or
xchg
inc
das
inc
shr
mov
add
cmp
ror
adc
sbb
xchg
neg
mov
xlat
popa
out
mov
dec
fld
stos
cmp
jmp
aam
push
nop
fcomp
(bad)
push
mov
pop
lea
jbe
dec
dec
fbld
xor
fnstcw
sti
es
cmp
mov
aam
adc
popf
adc
imul
adc
and
add
push
cmp
and
jnp
cmc
je
nop
xchg
int3
rcl
push
scas
(bad)
mov
sbb
push
push
mov
adc
out
(bad)
div
stos
xor
mov
enter
mov
adc
enter
in
imul
inc
and
repnz
mov
cdq
push
test
leave
xchg
ret
mov
mov
inc
jmp
jmp
mov
outs
pusha
ret
mov
and
inc
div
retf
add
lods
mov
iret
and
push
push
call
push
dec
xor
inc
sbb
adc
mov
aam
loope
ret
dec
mov
hlt
mov
es
leave
jae
sbb
sub
fsubr
push
mov
xchg
mov
pop
pop
sbb
shl
xor
push
nop
inc
cmp
sti
mov
sub
dec
xor
xchg
sbb
mov
pushf
and
mov
dec
xchg
scas
enter
adc
jecxz
cwde
in
mov
pop
(bad)
xchg
fbld
add
sbb
(bad)
cmc
kandw
xchg
scas
mov
mov
cli
xchg
add
inc
mov
and
dec
adc
inc
(bad)
in
jg
enter
jg
pop
lock
jp
inc
xor
mov
sbb
adc
or
enter
imul
sub
retf
gs
pusha
push
imul
cmp
sub
retf
adc
push
jle
je
outs
pop
xchg
mov
inc
mov
out
out
aam
xor
stos
std
in
inc
xchg
scas
sbb
or
lock
jge
js
mov
rep
retf
lea
push
and
adc
inc
jle
test
es
lods
push
out
or
push
push
int
clc
enter
adc
or
fistp
pop
jmp
mov
loopne
shl
js
inc
enter
mov
jp
xor
adc
or
xor
push
arpl
jg
or
(bad)
push
test
test
daa
or
mov
dec
add
mov
mov
rcr
sahf
int
and
jns
xor
push
mov
jo
je
jg
sbb
pushf
and
xor
out
mov
clc
pop
dec
inc
retf
sub
imul
shl
and
gs
scas
push
adc
inc
sbb
out
push
imul
cmp
push
push
mov
sbb
aam
ins
std
ss
ret
outs
call
stc
mov
aas
xor
retf
mov
push
sbb
push
(bad)
sbb
dec
call
in
jecxz
cdq
dec
jae
or
loop
dec
mov
leave
add
int3
ja
loop
stos
cli
push
mov
repz
push
jns
mov
mov
ret
or
or
not
jbe
push
shl
stos
pop
jp
mov
adc
inc
pop
retf
in
inc
nop
dec
cmp
into
cmps
pop
dec
ds
jecxz
push
mov
out
add
aas
cmps
or
stc
iret
cmc
cmc
rol
jb
or
push
ss
cli
ror
jmp
cmp
mov
movs
dec
mov
aaa
jno
icebp
aaa
dec
outs
sbb
sti
mov
call
lods
les
cdq
popf
(bad)
pop
pop
mov
mul
add
and
call
sub
add
xchg
cmp
rep
and
loop
mov
jnp
adc
dec
call
popf
mov
enter
dec
in
sbb
int3
repnz
pop
clc
outs
repz
rcr
in
adc
mov
ins
xchg
add
pop
out
inc
mov
push
int
xor
mov
pop
mov
add
add
call
mov
out
pop
cmp
pop
test
iret
jo
(bad)
xor
mov
xor
(bad)
push
imul
inc
push
adc
dec
fcomi
jmp
fadd
pop
xor
mov
(bad)
add
popf
jns
cld
test
or
mov
add
int
and
scas
call
ret
retf
jge
test
lahf
out
sbb
push
xor
rol
mov
jecxz
mov
popf
mov
inc
int
pop
out
inc
add
adc
retf
stos
out
sub
repz
shl
sub
hlt
mov
stos
fwait
aas
xor
xor
xchg
ds
movs
mov
enter
das
call
sbb
sbb
inc
cld
sahf
and
ror
gs
ror
and
sbb
fmul
(bad)
sbb
xchg
call
js
dec
cmp
repz
dec
add
dec
mov
sbb
push
cs
mov
cmp
pop
push
jns
dec
mov
sub
retf
sbb
lea
stos
and
jmp
popa
jnp
pushf
das
jle
sbb
cmp
out
sub
xchg
popa
mov
sar
push
jecxz
cmp
adc
xlat
cmp
(bad)
adc
pop
das
mov
mov
std
das
cmc
les
or
adc
inc
movs
or
push
cmp
xchg
daa
gs
cs
mov
cli
pusha
dec
mov
jne
dec
dec
es
movs
xchg
pop
cmp
in
adc
in
ret
loop
pop
dec
dec
sahf
xchg
or
inc
in
mov
ds
xor
fcomi
out
xchg
jno
mov
mov
inc
jne
movs
dec
mov
cld
jns
adc
lahf
stos
adc
call
push
(bad)
call
jo
add
push
mov
repnz
xchg
mov
ret
and
push
mov
lahf
jecxz
add
movs
lods
mov
and
(bad)
popa
mov
(bad)
ins
in
fmul
and
icebp
imul
leave
iret
loopne
xchg
jno
sub
push
xchg
or
test
push
jmp
mov
xor
and
stc
pushf
inc
lahf
xchg
scas
test
sbb
cs
cmp
push
pop
dec
call
mov
xor
sub
popa
mov
mov
and
xor
jmp
jnp
out
cmp
call
mov
in
sub
jns
jmp
(bad)
push
xchg
xor
call
add
sbb
pushaw
in
mov
ss
ins
mov
mov
sbb
mov
inc
(bad)
dec
cmp
pop
pop
jmp
mov
jb
in
(bad)
cmc
xor
sbb
fisub
(bad)
mov
or
addr16
jnp
mov
ins
dec
fwait
sbb
in
push
iret
xchg
sbb
adc
push
clc
lds
cmp
push
sbb
dec
out
sahf
cld
ret
sbb
sbb
push
push
ror
lock
adc
push
sbb
movs
mov
clc
inc
andnps
pop
data16
sub
jmp
push
retf
scas
pop
fidiv
dec
xchg
rcl
stc
lea
mov
and
in
and
hlt
xchg
and
(bad)
rcr
sbb
test
aaa
inc
or
sub
mov
fcom
mov
mov
xchg
repz
(bad)
pop
clc
push
in
iret
fsubr
add
scas
test
mov
sahf
pop
or
inc
fcmovu
pop
mov
fs
lods
inc
cmp
add
cs
mov
jnp
sub
inc
sahf
das
enter
jae
sub
js
xchg
call
mov
addr16
test
jg
or
fidiv
and
xor
fild
es
push
and
data16
leave
popf
repnz
adc
jp
mov
sub
mov
xchg
fmul
scas
dec
ret
add
stc
mov
jnp
push
sub
fist
push
les
xchg
mov
fs
fisubr
std
nop
mov
push
jecxz
mov
and
in
xchg
aas
mov
cli
aas
pop
faddp
pop
dec
or
out
xor
into
jb
arpl
out
neg
clc
je
inc
(bad)
xchg
aam
or
jge
(bad)
lahf
xchg
adc
idiv
pop
mov
push
adc
mov
inc
pop
fiadd
sbb
pop
movs
xlat
mov
stos
xchg
hlt
pop
push
mov
inc
cmp
(bad)
fcomp
mov
int
xor
cdq
test
inc
cmps
test
sahf
xor
fisttp
out
inc
mov
outs
sub
xchg
mov
out
popf
lahf
(bad)
lods
idiv
inc
les
int
es
adc
pop
cmps
or
xchg
jl
xchg
fsub
or
jmp
jnp
dec
call
xchg
and
in
mov
push
and
sub
jl
cwde
jns
xor
adc
push
imul
leave
jge
adc
pop
push
cwde
aam
lea
adc
icebp
push
scas
(bad)
out
sbb
sahf
in
add
cmps
jbe
das
mov
movs
mov
nop
cmp
fisub
bound
pop
push
inc
not
mov
ret
aad
add
loop
xlat
test
dec
loop
and
push
sub
jmp
aad
adc
fst
jne
cmps
sbb
xlat
repz
add
add
sahf
mov
scas
mov
movs
or
jmp
jmp
push
pop
xor
ficomp
fldcw
pop
repz
and
xchg
fldcw
fs
test
adc
cmps
popa
sbb
or
add
sub
mov
aad
lds
leave
inc
stos
cmc
mov
push
adc
(bad)
jecxz
outs
and
add
pop
(bad)
jae
dec
mov
push
icebp
cmp
pusha
xchg
shl
in
push
mov
dec
or
pop
daa
mov
clc
push
jl
stos
sbb
sbb
jnp
sbb
mov
add
sub
mov
loope
scas
std
fadd
fst
jo
push
loopne
stc
daa
cmp
push
(bad)
cmp
cli
aam
retf
dec
xchg
je
sub
jge
jecxz
fimul
xchg
sub
fdivr
mov
cmp
ret
ror
cmp
test
push
movs
retf
paddb
lods
sbb
outs
dec
cmp
loope
sbb
ins
cmp
and
pushf
sbb
out
push
mov
mov
fiadd
push
mov
dec
fwait
mov
xor
lods
mov
xor
push
mov
icebp
xchg
in
mov
movs
jp
movs
jb
sub
inc
cmp
les
out
add
dec
cmp
clc
mov
pop
lock
or
addr16
mov
push
add
xchg
push
xor
or
jns
sti
or
mov
mov
sub
daa
arpl
cmps
outs
clc
out
xchg
mov
imul
in
dec
in
push
daa
add
lds
stos
jg
mov
je
push
xor
data16
xchg
(bad)
sti
js
fs
push
aad
pop
sbb
stc
movs
xchg
xchg
repz
adc
and
repz
mov
pop
cmps
dec
fisubr
sbb
icebp
push
rcr
mov
aaa
push
int
fdiv
push
outs
mov
lods
pop
dec
push
xor
ins
xchg
lods
add
mov
jg
imul
cdq
stc
jle
dec
xchg
sub
sub
pop
in
dec
add
adc
inc
ins
leave
leave
lods
into
xor
arpl
jno
test
stos
out
or
div
into
cmp
ret
sub
xchg
add
sub
dec
es
das
test
jl
pop
xchg
or
std
(bad)
outs
in
fdivr
scas
push
addr16
cmp
xlat
test
pop
mov
in
xchg
or
repnz
imul
lea
bound
jmp
scas
call
jmp
adc
adc
jbe
test
xlat
jg
add
in
dec
in
sbb
movs
cmp
push
lea
dec
mov
xor
repnz
sti
mov
rol
adc
xor
ins
or
fld
faddp
pop
call
addr16
xor
je
shr
fstp
and
rcr
int
xor
jmp
cs
sub
aad
cs
movs
push
dec
dec
mov
inc
fcomp
add
jl
sbb
sub
push
scas
dec
jnp
(bad)
dec
int3
pop
and
in
mov
jb
icebp
les
daa
gs
mov
mov
shl
test
fdiv
mov
push
jge
and
cmp
pusha
push
xor
adc
je
sbb
rcl
dec
sbb
bound
inc
shl
mov
xchg
call
mov
fs
int
sbb
add
shl
gs
jmp
dec
call
fld
inc
aad
sub
clc
sbb
dec
push
sub
mov
std
cli
push
pop
retf
mov
cmp
mov
hlt
enter
pop
gs
(bad)
fnstsw
cmp
push
inc
push
push
outs
pop
fwait
or
jle
pushf
and
sub
cmc
push
jge
cmp
leave
leave
dec
out
into
pop
mov
push
cmps
sub
adc
shl
mov
mov
xchg
cmp
in
cdq
retf
repnz
sbb
xchg
cdq
pop
sub
mov
mov
sbb
mov
repz
std
dec
repz
xor
loopne
add
ja
shl
sahf
mov
add
ret
adc
add
imul
jb
arpl
mov
(bad)
rcl
fcmovb
std
dec
jecxz
cmps
cmp
inc
push
fnstcw
mov
inc
gs
cmp
push
xchg
cmp
repz
or
xor
cmp
dec
add
jg
js
xor
adc
fist
pop
aaa
inc
mov
cmp
(bad)
xor
addr16
pop
cmp
stos
mov
leave
sub
jo
fld
adc
iret
cs
adc
and
mov
pop
mov
and
mov
pop
mov
dec
daa
sub
scas
mov
dec
mov
jecxz
mov
(bad)
int
(bad)
lods
std
(bad)
cmp
sub
pop
imul
jns
retf
xchg
cmp
pop
xchg
push
sub
jg
cmp
cmp
mov
fld
and
gs
sbb
(bad)
sbb
push
das
xlat
cmp
mov
cs
dec
mov
inc
or
outs
mov
push
rcl
mov
inc
pop
jp
add
test
push
std
int
jp
mov
mov
scas
dec
jns
ins
or
mov
dec
enter
in
xchg
xor
mov
sub
mov
mov
pop
mov
sbb
jno
sub
ror
mov
aas
xor
add
mov
cs
call
jmp
int3
jno
daa
pop
pop
mov
add
add
xor
xor
add
mov
xchg
ds
mov
ja
jno
rcr
fstp
xor
add
sub
cli
dec
adc
mov
cmps
(bad)
mov
mov
out
or
mov
repz
test
cwde
jecxz
xchg
test
es
mov
sbb
lods
or
jbe
leave
and
popf
scas
push
arpl
or
inc
in
xchg
shl
xchg
outs
sti
jmp
xor
out
dec
xor
int
test
test
mov
stc
add
fstp
sub
aad
daa
sti
repnz
test
aas
fiadd
out
idiv
mov
and
cld
mov
rol
mov
and
addr16
ret
out
mov
lahf
test
ror
sub
ja
in
in
and
and
xchg
mov
mov
cld
add
xor
jb
cmp
ins
jle
dec
sbb
cmp
xor
mov
pop
adc
outs
fild
sbb
retf
xchg
jb
mov
dec
cmp
push
dec
push
dec
push
popa
aaa
in
pop
sbb
lods
push
xchg
out
pop
out
das
mov
in
rol
inc
add
fcomp
pop
leave
sbb
(bad)
xchg
xchg
sbb
(bad)
cmp
xlat
push
xchg
pop
call
xor
sti
cmp
sub
jle
xor
or
or
jne
movs
and
sti
inc
mov
push
daa
mov
rcr
js
(bad)
fwait
rcr
hlt
sub
stc
jbe
push
mov
(bad)
jb
call
mov
sub
inc
loop
mov
or
ret
cmp
adc
jle
ret
sub
jle
ins
push
sub
stos
adc
loope
(bad)
sbb
mov
test
out
lock
sub
loope
jmp
push
rcl
hlt
pop
es
and
lods
fs
add
rcr
mov
aam
mov
fs
mov
sub
movs
jbe
clc
mov
sahf
push
out
sbb
jmp
rcr
adc
outs
add
icebp
addr16
xchg
push
outs
push
mov
mov
test
mov
push
cld
retf
hlt
clc
inc
call
mov
or
pop
mov
(bad)
xor
mov
out
push
sbb
push
test
jge
sub
cmp
mov
cdq
cdq
repz
scas
in
sahf
int
cmp
sub
sub
and
jb
repz
or
and
pop
xor
jbe
jnp
imul
adc
sub
jae
and
nop
int
imul
or
fsub
fst
xlat
loope
loope
cmps
mov
or
or
test
stos
dec
cmps
jl
ror
in
popa
mov
in
dec
inc
inc
pop
dec
adc
stos
xchg
(bad)
pop
bound
dec
xor
push
not
adc
int
jns
jne
sbb
jmp
cmc
imul
aam
scas
scas
mov
fild
xor
icebp
cs
movs
and
in
xor
cmp
gs
js
outs
cld
inc
sbb
fstp
(bad)
or
cdq
cmp
cli
cmp
mov
adc
call
sbb
popf
cli
mov
jbe
cmp
pop
popa
mov
mov
and
mov
sahf
mov
sbb
popa
mov
adc
add
outs
jno
int
xlat
mov
maxps
or
sub
(bad)
mov
scas
inc
mov
mov
sbb
jno
dec
retf
xor
test
sbb
pushw
cmp
das
cmp
into
sub
retf
jne
and
dec
add
and
sahf
cmp
inc
fld
add
arpl
test
loopne
inc
or
sub
sbb
test
retf
out
dec
jl
dec
aas
(bad)
mov
into
pop
stos
and
and
(bad)
imul
fdiv
pop
fmul
dec
pop
mov
xchg
ret
pop
push
inc
push
add
aas
push
fadd
stc
fsub
inc
test
ja
jge
jae
add
add
outs
jl
in
loop
(bad)
test
js
ret
cmp
fnsave
xchg
sti
cwde
xchg
or
fisubr
fnsave
(bad)
push
mov
mov
adc
mov
stos
sub
jb
jne
inc
push
mov
bnd
addr16
mov
push
jo
mov
movs
dec
xchg
adc
aad
clc
das
xchg
xchg
push
push
retf
pop
repnz
cmp
mov
mov
add
sar
pop
retf
test
pop
cli
push
or
leave
xchg
mov
pop
pusha
jbe
adc
jmp
mov
pop
test
xor
inc
cld
push
jp
call
sbb
int3
push
cld
sub
add
ins
push
inc
pop
mov
mov
es
push
fisub
sahf
or
pop
adc
scas
dec
ss
retf
lahf
pop
loop
lods
jecxz
add
ficomp
(bad)
stc
and
(bad)
mov
cs
loop
mov
push
ret
xor
adc
mov
mov
mov
stos
aad
mov
push
cwde
in
and
pop
sub
jge
cmp
jns
not
mov
movs
add
imul
jno
sbb
dec
pop
pop
adc
loopne
cmps
dec
loop
and
adc
pop
loop
jp
in
cs
fldenv
mov
into
mov
jmp
mov
sti
or
repz
ins
mov
call
imul
push
mov
cdq
cmp
push
loope
div
fisubr
xchg
pop
lods
outs
fwait
or
add
sub
(bad)
gs
je
in
into
mov
fstp
add
sub
sbb
sub
popa
out
mov
aaa
add
fstp
dec
pop
pop
inc
adc
fnsave
inc
jle
shl
push
js
mov
mov
or
mov
or
sub
adc
pop
xchg
dec
(bad)
sub
jle
popf
jg
inc
inc
arpl
xchg
rcl
lock
add
mov
stos
imul
scas
push
ins
mov
xor
xchg
add
mov
or
xor
aas
stc
out
or
dec
push
sbb
pushf
out
inc
lds
or
ins
jecxz
(bad)
js
xchg
pop
cmp
inc
ja
leave
out
sub
push
fdivr
(bad)
xor
imul
rol
in
cmc
push
inc
dec
aam
mov
movs
push
ds
dec
pop
nop
push
inc
fwait
add
cs
xchg
adc
pushf
xchg
inc
pop
pushf
aaa
push
pop
imul
cmp
jo
inc
pop
enter
mov
inc
adc
sub
jns
loop
mov
ficom
jmp
inc
cld
movs
dec
inc
jle
sub
enter
mov
xor
pop
ret
retf
popf
ret
shr
jb
outs
mov
mov
pop
cmc
or
clc
outs
mov
jo
inc
dec
jnp
push
test
pop
rcr
pushf
mov
fwait
xlat
jne
mov
cwde
inc
(bad)
call
rcl
(bad)
jne
cmps
int
sbb
and
add
sub
sub
xchg
mov
mov
leave
or
xchg
pushf
mov
inc
push
jg
dec
cli
data16
cli
and
mov
(bad)
cmc
scas
cmp
das
ja
and
push
repz
bound
outs
sbb
(bad)
sbb
aaa
int3
mov
add
jmp
imul
loopne
inc
jno
cdq
adc
sub
retf
jae
lahf
stc
mov
or
or
and
pop
adc
das
(bad)
cmp
add
jmp
xlat
loop
nop
xchg
or
sub
mov
or
pop
xchg
aad
(bad)
(bad)
jmp
adc
(bad)
(bad)
push
jno
jg
sbb
in
shl
push
xor
push
es
push
cli
pop
stc
jo
lods
jmp
sub
dec
test
in
or
(bad)
cmc
cmp
fcmovb
cdq
(bad)
shl
enter
leave
or
sahf
cmp
push
repnz
int3
lea
icebp
arpl
xchg
scas
mov
pop
xor
pop
xchg
pop
out
mov
or
addr16
(bad)
mov
(bad)
js
rol
je
jmp
ret
mov
xor
out
and
add
jb
inc
xchg
cmp
cmps
sbb
(bad)
popa
adc
jg
stos
xchg
enter
cmps
xchg
cld
mov
cli
xor
jno
pop
xchg
fidivr
cmps
lea
xabort
push
xchg
and
xor
xor
imul
out
sbb
repnz
das
fimul
jmp
push
sub
xor
and
add
stos
push
fld
test
mov
cmc
bound
jae
dec
aad
jb
icebp
not
cs
inc
call
mov
fucomip
aas
sbb
adc
shl
jns
addr16
ins
or
xor
xor
outs
cdq
sub
fidivr
jb
mov
and
imul
mov
ror
pop
lods
cdq
mov
mov
(bad)
or
rcl
push
add
stc
in
inc
test
in
or
mov
xchg
jb
fwait
push
pop
loope
popf
and
frstor
sti
xor
in
loope
outs
not
xlat
aaa
dec
test
push
and
inc
mov
rcr
xor
hlt
lods
dec
fidivr
pmulhw
mov
test
ins
scas
lahf
scas
mov
aad
nop
cmp
inc
data16
fmul
mov
sbb
int3
into
push
fidiv
imul
mov
cmp
jno
mov
xor
xchg
shr
sbb
pushf
and
fcom
push
dec
(bad)
retf
mov
rol
call
fld
in
stos
stos
(bad)
sbb
sbb
push
inc
mov
or
sub
jmp
retf
mov
scas
pop
jae
stc
xchg
add
popf
inc
dec
cmc
xchg
mov
sub
push
shr
(bad)
outs
adc
rcr
(bad)
stos
ror
ror
mov
inc
neg
push
push
(bad)
mov
and
sti
sti
popa
cmp
inc
mov
push
and
xchg
mov
rol
dec
or
fs
retf
mov
sbb
push
sbb
ja
mov
fs
push
push
cmp
outs
ins
sti
ret
or
lock
imul
ret
out
inc
ds
sbb
push
das
or
call
sbb
ret
icebp
movs
sti
fimul
test
cmc
mov
sbb
out
sahf
cmp
sbb
data16
ins
or
in
pop
fbld
cmps
daa
pop
js
and
jl
jg
into
or
mov
test
or
jg
movs
inc
jae
mov
lods
inc
shl
jo
mov
addr16
or
bound
mov
pop
in
add
pop
sub
lods
add
arpl
ja
outs
in
es
mov
cmc
inc
ins
into
emms
js
pushf
jns
inc
mov
fnstcw
js
mov
xchg
lea
sahf
clc
cmp
movs
add
lahf
movs
push
xchg
push
push
adc
sbb
cmc
pop
cmp
or
aas
or
(bad)
mov
and
and
and
mov
enter
mov
into
pinsrw
shl
mov
ja
xchg
out
sbb
enter
add
(bad)
(bad)
cli
mov
test
push
rol
pusha
mov
sub
cmp
leave
mov
ins
enter
mov
sub
ja
in
in
(bad)
pop
mov
cmp
jne
mov
movs
fs
mov
popf
cdq
add
mov
jns
xor
pop
jo
cmp
or
inc
sub
dec
(bad)
xor
int3
retf
inc
sbb
mov
inc
pop
cmp
rcr
mov
mov
jmp
push
out
iret
test
in
fs
adc
jns
mov
and
mov
inc
out
aaa
ret
pushw
push
cmp
mov
test
aam
or
xchg
stc
pusha
mov
jmp
mov
std
dec
cs
ds
mov
mov
retf
mov
or
scas
jnp
sub
mov
and
xchg
xor
inc
out
scas
and
sar
ret
pop
movs
call
in
shl
rol
mov
(bad)
in
mov
aad
inc
hlt
or
jge
adc
cdq
hlt
ja
stos
std
in
sbb
aam
mov
(bad)
aaa
or
ss
(bad)
jno
adc
mul
mov
add
xor
sub
and
icebp
rol
mov
aam
mov
lock
jae
cs
ja
js
ffreep
daa
sahf
scas
jae
mov
scas
jp
xchg
add
xchg
fld
mov
outs
sub
sbb
inc
aam
push
cmp
lods
lock
fcom
mov
(bad)
clc
or
mov
inc
xor
mov
test
inc
and
mov
dec
jae
and
rcr
or
xchg
aam
add
fldenv
push
scas
mov
mov
retf
(bad)
call
bound
xor
sub
out
jnp
xchg
enter
sub
es
bound
popf
in
jns
aam
cmp
sub
movs
repz
loope
xchg
das
loop
mov
and
inc
add
pop
repnz
test
sbb
mov
hlt
(bad)
or
adc
sbb
mov
mov
cmp
inc
xchg
adc
lds
nop
sahf
or
and
sbb
pop
loop
xchg
cli
cmps
retf
rcl
into
or
and
jno
cwde
sub
in
xchg
adc
xor
mov
lods
inc
xchg
push
sbb
lea
mov
fsubp
int
mov
or
mov
test
test
sti
repnz
push
push
push
xchg
inc
mov
dec
mov
in
jb
push
loope
popf
push
cdq
int
xor
ja
lahf
mov
mov
clc
add
(bad)
hlt
ja
and
jg
and
dec
mov
je
cwde
pop
jnp
fmul
adc
pop
mov
loop
ins
(bad)
jp
mov
cdq
in
je
cmp
aam
jae
jnp
int3
or
jecxz
loope
pushf
add
inc
mov
jnp
xor
movs
jmp
repnz
push
inc
sbb
jb
pop
or
or
outs
fld
inc
stos
fcom
repz
cli
icebp
cmp
enter
xchg
sub
hlt
arpl
push
lods
mov
in
dec
fcomip
aam
jecxz
int3
push
push
jmp
pusha
xor
dec
hlt
cwde
lea
pop
xchg
mov
je
lods
das
addr16
fwait
in
inc
shr
xor
add
retf
xor
pop
int
xor
jle
leave
retf
pop
push
sbb
mov
sub
pop
push
rol
jecxz
das
je
add
movs
sub
mov
push
and
test
jmp
mov
dec
cmp
sahf
dec
pop
cmps
(bad)
(bad)
cli
mov
sbb
mov
out
mov
int3
add
mov
jge
push
mov
pop
jne
mov
mov
(bad)
jmp
mov
fsubr
(bad)
popa
push
test
sahf
(bad)
jg
xor
lea
daa
fild
adc
mov
or
test
hlt
int3
in
inc
clc
(bad)
xchg
sbb
imul
push
pop
daa
imul
cmp
mov
call
xchg
cmps
ret
sub
push
sub
mov
pushf
xor
and
call
xchg
jl
push
mov
mov
(bad)
scas
sbb
enter
jns
idiv
data16
bound
push
clc
xor
xchg
and
mov
and
dec
mov
mov
add
outs
cmps
in
not
xor
sub
fadd
stos
xchg
add
data16
jge
jmp
nop
xchg
test
pop
mov
dec
adc
ds
sub
into
out
pop
and
inc
dec
aaa
mov
and
xchg
scas
(bad)
(bad)
js
and
sbb
jecxz
dec
call
jnp
rcr
aaa
(bad)
stc
movs
test
mov
(bad)
repnz
js
sbb
push
lods
dec
scas
adc
and
xor
and
imul
icebp
stc
loopne
xchg
pop
add
xor
adc
jb
mov
out
inc
shl
imul
pop
push
imul
fcom
xor
test
aad
lods
ror
(bad)
pop
jo
mov
dec
mov
in
cs
or
or
js
pop
xor
(bad)
mov
shr
xor
rcl
loope
addr16
out
cmps
add
jno
pop
rol
fidiv
call
cld
ret
dec
or
mov
and
out
aad
scas
outs
mov
jo
mov
mov
(bad)
push
sbb
sbb
sub
lock
and
into
cmp
retf
ret
adc
jg
dec
popa
das
pop
xchg
xor
inc
mov
jmp
ja
mov
mov
cli
ins
jae
(bad)
mov
xchg
fdiv
lahf
jb
in
shr
ins
test
push
(bad)
sub
sbb
mov
dec
in
cmps
pop
repnz
sbb
in
fndisi(8087
in
in
sub
jns
cli
sub
mov
(bad)
pop
and
or
jp
aam
push
mov
pop
pinsrw
add
fcmovnbe
imul
pusha
push
add
stos
xchg
jno
xor
sbb
aad
dec
loope
cmp
iret
pop
lahf
mov
or
jne
mov
dec
je
mov
xchg
cmc
mov
sub
pop
pop
xor
rcl
(bad)
stc
std
or
inc
pop
cdq
clc
nop
sub
cmp
fsub
fild
or
cmp
add
inc
popf
xchg
or
xor
xor
std
mov
dec
jmp
scas
cmp
cmps
pop
inc
cmp
sbb
fild
fist
cmp
dec
aam
pop
ins
push
std
mov
loopne
push
stos
ror
mov
pop
retf
cmc
test
nop
sbb
iret
rol
adc
lods
inc
out
gs
(bad)
aam
movs
(bad)
rol
sbb
sub
mov
xchg
stos
add
push
mov
int
sar
and
cld
mov
cli
jp
mov
repz
shl
setns
mov
xor
dec
outs
mov
cmps
idiv
shl
clc
xchg
popf
fwait
lahf
aam
sub
add
ja
in
adc
stos
and
xor
stos
jmp
jle
mov
call
in
js
pop
sub
loopne
jns
loope
mov
jp
lahf
ins
inc
push
shr
dec
xchg
ins
jg
and
fdiv
mov
mov
pop
sub
mov
cdq
les
sub
ds
cmp
cdq
ret
cmp
loopne
or
and
sub
add
mov
bound
mov
stc
mov
call
sub
clc
jb
aas
cmp
add
push
dec
push
push
test
popa
mov
test
aas
arpl
int3
mov
or
dec
aam
add
sti
adc
fldcw
cmps
xchg
and
mov
jns
ja
xchg
adc
sub
fsubrp
xchg
pushf
in
xchg
mov
aam
jnp
das
sub
push
cld
movs
xchg
int3
cmps
leave
pop
js
ss
rcl
stos
repnz
sub
js
imul
inc
adc
xchg
mov
mov
fild
gs
mov
mov
bound
ins
jmp
sub
xor
push
ins
mov
rcr
test
aaa
fidiv
inc
add
rcr
jmp
es
dec
mov
push
pop
test
cmps
lods
jle
inc
xor
call
jmp
fwait
loope
adc
not
inc
and
mov
icebp
test
pop
in
mov
inc
cmps
mov
jo
clc
jge
jb
ins
test
pop
mov
push
cdq
cld
ficomp
xchg
pmaxub
out
lods
cwde
xchg
dec
mov
fsubr
xor
dec
mov
or
mov
fsub
xor
arpl
jne
in
test
xchg
(bad)
push
xor
pop
jbe
mov
jns
dec
cmp
lock
mov
pushw
or
sub
xchg
pop
(bad)
push
and
das
xor
in
loop
lds
les
cmc
pop
mov
js
lahf
mov
mov
ss
jecxz
jl
jge
rdtsc
inc
popf
js
ds
shl
mov
(bad)
(bad)
jmp
and
pop
loope
jno
xchg
xchg
add
sbb
gs
xor
sub
adc
xor
fld
push
aam
xchg
cmp
or
fistp
jg
lea
lahf
lock
jg
jb
mov
syscall
shr
push
add
outs
fsubr
mov
aaa
adc
adc
or
ret
ret
add
mov
cmp
sub
push
add
and
mov
clc
adc
sahf
call
mov
sub
aad
adc
lods
icebp
es
xchg
cmps
jge
xor
sbb
(bad)
push
loop
in
mov
aam
jo
inc
push
jb
and
or
xor
stos
pop
scas
mov
mov
js
push
pop
ret
call
dec
in
in
jae
xchg
outs
push
jbe
rcl
bound
jno
jge
push
and
mov
adc
cmp
loopne
in
leave
inc
dec
inc
and
or
push
add
jbe
mov
stos
mov
dec
out
call
pop
test
outs
sti
mov
cmc
lea
jp
and
jo
inc
int3
cli
mov
cdq
retf
ja
jp
(bad)
mov
jg
cmp
pop
jge
rcl
cdq
test
xchg
loop
jno
cmp
repnz
mov
call
imul
jns
jae
xor
aas
cmp
pop
xor
aaa
icebp
pop
nop
not
repz
and
in
pop
inc
stos
icebp
cwde
jbe
popa
and
loop
jmp
mul
xchg
pop
mov
adc
cwde
add
into
dec
xchg
ret
and
hlt
imul
adc
cmp
xor
pop
movs
jle
pop
aas
add
jb
xchg
or
lock
dec
and
pop
repz
mov
les
out
push
xor
iret
or
xor
mov
add
lods
je
call
mov
pop
fcmovnu
pop
imul
mov
jo
adc
test
cld
dec
ins
gs
fadd
in
xor
add
inc
and
js
xor
ds
jb
test
dec
dec
sbb
mov
repnz
cwde
fsqrt
push
jae
fbstp
pop
cmp
shl
push
fistp
add
pop
or
stc
sbb
sbb
fmul
call
xor
mov
pop
ins
dec
out
cmp
imul
add
lods
pop
movs
ficomp
daa
cmp
fld
jne
mov
xor
push
or
loope
jno
add
cmp
mov
ins
bnd
pop
inc
cmps
loop
iret
retf
popa
scas
stos
hlt
jg
mov
mov
jg
sub
pop
test
push
in
repnz
mov
sbb
test
pop
pop
mov
test
mov
cmp
pushf
jns
dec
sub
gs
xchg
(bad)
sbb
lods
retf
jno
fldenv
repz
mov
mov
cmp
sub
in
jae
sbb
fcom
cwde
into
and
push
inc
mov
add
cld
sub
and
and
cmps
dec
mov
dec
mov
mov
test
movs
jns
adc
es
sub
clc
mov
popa
popf
adc
pop
and
(bad)
mov
mov
shl
(bad)
mov
and
xchg
push
(bad)
data16
sahf
shl
addr16
scas
mov
push
or
add
sbb
inc
or
sub
pop
adc
mov
sbb
adc
pop
and
inc
out
es
pop
sbb
pop
mov
ins
sub
data16
movs
sbb
fidivr
fiadd
cs
ret
inc
stos
mov
stos
adc
(bad)
scas
push
mov
xchg
inc
rol
and
xor
scas
std
cmc
pop
mov
sub
stos
cmp
int3
pop
jge
and
pusha
inc
cmp
and
mov
cwde
addr16
inc
cmps
dec
test
mov
pop
dec
cld
sub
push
sbb
mov
(bad)
and
mov
pop
mov
int
push
movs
mov
cmps
or
adc
gs
in
xchg
js
cmps
dec
cs
push
jae
fistp
ss
stc
mov
xchg
xchg
outs
xchg
fxam
outs
stc
aaa
mov
add
lahf
dec
sub
cmp
pop
add
lock
mov
iret
pop
add
rol
jmp
jae
aad
sbb
sahf
add
pop
or
jmp
sahf
jo
fiadd
pop
les
cmc
mov
cli
in
mov
xor
enter
mov
test
pop
outs
out
inc
or
jo
mov
stos
mov
in
movs
mov
mov
in
stc
test
and
adc
or
pop
scas
fwait
adc
push
push
sub
cmp
das
call
movs
jne
xor
retf
mov
mov
movs
and
imul
push
mov
jge
pop
stos
inc
cmp
pop
std
jns
pand
cli
cvtps2pi
dec
inc
sti
in
in
pop
fwait
in
or
push
mov
pop
sub
mov
fdiv
mov
push
inc
dec
mov
jb
sbb
jb
fcomp
in
mov
out
xchg
adc
dec
or
dec
aad
and
or
call
loop
mov
fistp
cmps
inc
sbb
adc
test
adc
aad
push
xor
pushf
sub
(bad)
jnp
jmp
dec
jmp
cmps
mov
das
daa
or
mov
xchg
bound
scas
popa
imul
jl
out
push
push
inc
mov
cmp
pop
loopne
outs
cwde
mov
sbb
pop
xor
jbe
push
(bad)
(bad)
dec
jecxz
dec
or
mov
mov
cmp
es
retf
add
xchg
cmp
repz
pop
(bad)
in
dec
add
fcompp
mov
jne
pop
inc
ja
add
xor
xchg
in
cmp
push
or
(bad)
imul
jnp
fimul
fiadd
in
out
mov
movs
stos
inc
fld
push
pop
shr
adc
or
xchg
shl
dec
cmp
call
mov
mov
ret
dec
ds
loopne
call
mov
cmps
or
pop
mov
jp
adc
mov
xchg
jae
and
mov
add
jb
aam
dec
rcl
lods
fst
pushf
(bad)
in
rcr
das
sub
xchg
repnz
jo
inc
or
fidiv
add
pop
cli
jl
rcl
sub
push
lods
mov
loope
out
jge
adc
loope
lds
stc
arpl
scas
ret
jnp
and
inc
jle
push
ja
and
scas
ja
mov
enter
(bad)
ds
aam
xlat
call
xchg
jg
aaa
nop
mov
mov
xor
fsubrp
xor
dec
or
mov
sub
add
pop
pop
nop
cdq
pusha
in
cmps
fs
nop
adc
js
addr16
cmp
daa
sbb
loopne
imul
adc
shl
das
les
shr
daa
jp
adc
out
mov
ins
or
push
and
adc
or
mov
lods
xchg
in
retf
scas
retf
imul
pop
xlat
mov
mov
div
mov
loopne
lods
int3
sbb
dec
fldcw
cwde
mov
sbb
aas
icebp
mov
fcomp
imul
mov
mov
rcr
xor
shl
mov
cmp
pop
dec
(bad)
dec
xchg
int
call
test
xor
fwait
xor
aaa
je
inc
popa
push
xor
dec
in
cmp
ffreep
sub
and
dec
jle
inc
enter
movs
sahf
cmc
xor
xor
jb
scas
into
mov
iret
mov
sub
fs
mov
loope
add
jne
sbb
out
push
inc
ins
mov
mov
pop
push
inc
test
push
adc
add
loopne
fisttp
xchg
cmp
jle
dec
ficomp
and
push
in
out
(bad)
das
cmps
ficom
sbb
gs
lods
inc
push
rol
es
adc
ror
jbe
pop
xchg
mov
xor
xchg
movs
inc
nop
xor
jge
(bad)
out
into
retf
sub
mov
adc
test
sbb
call
sbb
add
stos
dec
dec
retf
test
cmp
xor
data16
xchg
jnp
into
mov
idiv
jmp
jbe
cmp
cli
ja
sahf
shr
ins
fild
mov
fmulp
jge
or
cmc
neg
repnz
inc
dec
sar
push
in
pusha
imul
jge
lds
mov
and
cdq
push
aaa
jp
in
mov
leave
out
loopne
dec
or
movs
sbb
cld
dec
loopne
inc
xlat
push
dec
sti
arpl
dec
scas
jecxz
in
addr16
stc
mov
addr16
jns
int
cld
pop
mov
popa
or
shl
push
pop
push
gs
pop
jae
shl
enter
lods
mov
adc
fstp
or
and
adc
or
or
mov
lods
hlt
or
hlt
pop
lahf
mov
inc
sbb
pop
mov
sub
sub
cmps
cmc
loopne
fild
imul
int3
movs
push
shl
mov
xor
xlat
clc
ins
loop
sub
mov
add
cmp
sub
jg
mov
jne
test
mov
cdq
push
maxps
xor
and
xchg
add
mov
inc
lea
nop
js
lods
push
inc
mov
gs
jp
aam
cmp
cmp
fiadd
dec
outs
xchg
dec
lock
mov
xchg
ret
push
repz
and
and
add
mov
movs
sbb
(bad)
dec
adc
or
(bad)
sbb
sar
cmp
lock
and
cmp
call
jecxz
mov
ins
mov
shr
push
stos
jae
sbb
stc
popa
or
and
popf
ins
add
sub
sub
and
push
stos
neg
gs
imul
cdq
push
int3
xor
jnp
pop
or
addr16
into
xchg
movs
adc
xor
cmp
push
pop
sti
cmp
fadd
sub
(bad)
sbb
cwde
fs
push
sbb
lea
add
aas
mov
xchg
push
dec
pusha
mov
not
add
add
mov
pushf
in
arpl
mov
in
lods
in
daa
inc
hlt
pushf
push
mov
xchg
cdq
test
enter
jmp
and
mov
sbb
dec
dec
mov
bound
nop
mov
jmp
scas
cmps
ret
push
jmp
add
jmp
push
out
imul
call
xor
popf
adc
test
sar
call
hlt
sub
shl
rol
into
cld
adc
pushf
sbb
or
adc
jno
adc
or
aas
mov
ins
mov
mov
fwait
ret
mov
(bad)
sbb
jp
fidivr
cs
mov
mov
jns
fs
or
(bad)
dec
pop
ds
lods
inc
or
cmps
sub
sub
mov
ins
aam
out
(bad)
mul
ins
mov
mov
cs
imul
int3
mov
jp
sub
inc
pmulhw
mov
jb
dec
repnz
adc
sti
shl
add
jns
ret
mov
out
sbb
popa
std
ins
mov
jmp
and
outs
mov
lock
xor
pop
sub
mov
xor
or
mov
fs
xchg
pop
sbb
dec
and
pop
sar
xor
scas
(bad)
gs
out
fwait
mov
mov
cmc
pop
jge
jno
ret
mov
mov
xchg
das
pop
scas
std
(bad)
pushf
stos
(bad)
(bad)
cmp
xchg
imul
pop
movs
jo
je
sub
pop
test
and
loopne
adc
jmp
lahf
fdiv
mov
add
lock
or
pop
loop
(bad)
pop
sar
xchg
mov
jno
xor
hlt
sub
inc
jmp
dec
retf
inc
sbb
jo
or
sub
aad
inc
cmp
mov
sbb
ficom
daa
(bad)
jnp
sub
xchg
fsubr
and
iret
or
movs
push
sar
sub
dec
mov
add
jg
xchg
shr
jns
aaa
popf
jecxz
xor
mov
xor
cmp
dec
aad
cmp
push
jno
pop
sub
das
xor
cli
jbe
jne
scas
xor
js
jne
push
xchg
cwde
jne
loopne
rol
ror
leave
sbb
pop
sub
jbe
test
mov
clc
mov
pop
jnp
adc
inc
enter
mov
sahf
xchg
das
rcl
fild
movs
fs
sti
sar
mov
jecxz
out
ja
(bad)
icebp
leave
lods
xor
sbb
movs
or
movs
or
or
pop
fsubrp
add
sub
into
mov
xor
sub
xchg
ins
sahf
mov
mov
out
scas
jne
mov
daa
xchg
sbb
or
jmp
fst
pop
pop
or
fwait
call
fistp
adc
scas
sbb
xchg
aad
sar
mov
or
mov
retf
dec
jp
daa
cdq
mov
loope
cmps
jle
not
fwait
ja
lods
add
call
mov
xor
mov
repz
out
mov
sahf
mov
mov
cmps
and
loope
lds
sbb
pop
gs
mov
lahf
and
aas
dec
(bad)
ror
mov
nop
(bad)
xchg
shl
(bad)
in
sbb
retf
int3
repnz
mov
jb
addps
pop
push
lods
mov
xor
fadd
adc
cdq
mov
xor
shr
ret
jmp
push
xlat
outs
push
mov
lds
(bad)
sub
mov
or
(bad)
push
inc
adc
push
mov
cmp
jmp
retf
dec
mov
sbb
add
push
call
call
inc
pop
in
call
icebp
pop
push
sbb
shr
lds
pop
sub
cli
dec
ins
outs
lock
fsub
push
cmc
jo
ss
push
xor
mov
cmps
les
pmaddwd
mov
mov
fisub
xchg
inc
pop
outs
adc
sub
test
cmp
mov
pushf
sbb
sub
lods
xor
adc
mov
movs
or
movs
and
(bad)
jg
adc
sbb
stc
call
test
or
fnstenv
xchg
outs
jg
or
inc
cmp
popf
push
push
mov
inc
push
mov
mov
jmp
pop
sbb
and
inc
or
test
pop
mov
imul
retf
adc
pop
dec
dec
pusha
imul
adc
pop
iret
bound
sbb
repnz
xchg
cmp
jmp
xchg
sbb
pop
(bad)
je
xchg
rcr
popf
add
and
pusha
add
jl
dec
mov
adc
add
outs
push
or
xchg
es
inc
xor
pusha
mov
add
aad
arpl
outs
repz
frstor
int3
or
jae
cmp
xor
in
add
push
add
fdiv
popa
lods
add
nop
out
outs
test
in
xchg
aam
jg
pusha
pop
jns
aam
test
inc
lds
les
jne
inc
pop
jl
sbb
mov
cmps
les
mov
clc
jmp
aad
into
aam
xchg
sahf
jne
dec
adc
xchg
repz
mov
cmp
mov
mov
rcr
jmp
jo
pushf
xchg
xor
push
cmp
adc
in
jl
lea
(bad)
xchg
aad
inc
lock
dec
xchg
hlt
sub
cld
retf
cdq
jnp
jbe
lods
add
mov
dec
sub
dec
fisttp
push
repz
rcl
add
inc
jl
jno
add
xchg
cmc
mov
ficom
dec
movs
outs
movs
call
inc
xchg
mov
test
mov
jo
jmp
(bad)
xchg
inc
pop
ins
pop
dec
popa
stos
xor
push
push
pop
push
movs
jns
iret
scas
mov
sahf
scas
xlat
inc
and
dec
or
push
push
in
retf
ret
pop
ss
push
fwait
dec
aad
sub
mov
outs
xchg
ret
cmp
xlat
xchg
ja
xor
jnp
mov
pusha
push
into
or
aas
sbb
inc
scas
push
inc
mov
push
sub
mov
pop
and
int
xchg
jmp
test
repnz
lds
int3
bound
sbb
call
dec
dec
and
dec
fbstp
jbe
xchg
mov
mov
xlat
std
sub
in
cli
mov
jno
ds
xchg
adc
or
ret
call
imul
push
xor
cmp
pop
fs
fild
in
pushf
das
inc
loope
xor
nop
sti
inc
pop
fs
sti
retf
or
pop
xor
out
mov
mov
popa
or
mov
mov
cmp
push
mov
scas
mov
cmp
jb
jmp
(bad)
repz
xor
and
mov
cmps
nop
mov
mov
cmp
xchg
int
adc
mov
das
add
mov
ror
sti
enter
cmp
rol
inc
(bad)
cmp
fs
adc
cmp
and
imul
scas
fidiv
jp
mov
aas
psubusw
mov
(bad)
cmps
nop
inc
into
jl
lods
dec
lods
sbb
sbb
adc
mov
jne
mov
lods
cmc
cmp
push
jl
sub
jmp
(bad)
push
add
shr
mov
xchg
sub
pop
fbstp
mov
test
fist
or
mov
lds
jo
xchg
out
clc
adc
add
adc
retf
fidiv
inc
int3
xchg
cmp
pop
imul
push
xor
test
jecxz
outs
in
hlt
xchg
movs
or
aaa
mov
mov
lods
test
fwait
xadd
sub
cdq
pusha
iret
push
sub
mov
imul
ja
push
inc
in
test
push
pop
jo
fs
gs
pop
in
fld
fs
adc
cmp
test
retf
dec
cmp
sub
leave
cmp
dec
jae
in
lods
cmp
(bad)
stos
sub
add
into
lods
mul
jle
retf
pop
pop
repz
sahf
scas
stc
xchg
jg
cdq
cld
outs
ins
nop
mov
pushf
push
cli
pop
stos
inc
xor
je
aas
pusha
sti
loop
lds
dec
push
(bad)
shl
mov
jecxz
and
dec
lahf
iret
xchg
inc
scas
add
pop
(bad)
out
cli
fstp
xchg
ret
adc
loopne
inc
push
lea
mov
test
dec
sub
mov
clc
fdivr
dec
stos
pop
not
mov
fnsave
and
mov
mov
out
ja
enter
inc
test
xchg
mov
cld
repz
xlat
mov
ret
dec
xor
scas
mov
loope
pop
retf
mov
inc
and
pushf
jb
out
fucomip
arpl
xor
pop
jmp
stos
mov
in
mov
dec
sahf
(bad)
push
cmps
add
or
mov
lods
sub
xor
mov
loope
and
mov
(bad)
loop
or
dec
mov
lea
inc
in
movs
lods
mov
fmul
pop
xchg
xor
outs
push
push
pop
inc
and
popa
(bad)
push
lods
rcl
sbb
fld
cmp
mov
xlat
movs
push
outs
pushf
jno
retf
add
mov
out
(bad)
dec
leave
test
and
sbb
cmps
push
and
in
test
lods
dec
fsub
dec
dec
and
adc
jl
dec
cmp
pusha
idiv
daa
xor
cmps
sbb
sbb
push
call
xor
movs
shr
jmp
into
lahf
lea
inc
test
aam
hlt
enter
(bad)
(bad)
cmp
lahf
sbb
pop
mov
pop
ret
mov
jge
push
fcomi
in
call
(bad)
pop
or
add
aad
mov
xor
es
adc
in
gs
or
mov
add
adc
lods
int3
jnp
mov
sbb
jl
ja
addr16
aad
ja
popf
les
pop
loop
outs
je
fs
nop
dec
adc
fimul
push
mov
mov
pop
fbld
inc
xchg
lea
add
popa
jmp
(bad)
out
mov
mov
aaa
movs
(bad)
fcomp
adc
sub
adc
push
movs
sub
adc
push
loope
fist
and
das
pop
jno
or
or
popf
lods
mov
(bad)
dec
repnz
mov
rcl
xlat
pop
call
sbb
inc
sub
pop
daa
jns
into
cdq
ins
clc
jnp
(bad)
push
mov
xchg
das
adc
or
call
popa
hlt
mov
mov
imul
movs
adc
out
mov
leave
fidivr
aam
test
adc
inc
(bad)
xor
cmp
mov
sbb
sub
inc
xchg
jb
sbb
movs
imul
and
push
jmp
pop
mov
jmp
out
pop
fdiv
xor
pushf
adc
jecxz
xchg
lds
scas
mov
jbe
shr
stos
out
fbld
cmp
add
pop
ss
fcomp
pop
adc
jmp
aam
scas
mov
mov
dec
push
lock
test
inc
xchg
gs
jbe
pop
dec
adc
sub
fs
inc
enter
sahf
pop
add
lahf
clc
sub
outs
cdq
fisubr
icebp
push
in
and
sahf
in
inc
xor
pop
xchg
add
in
inc
cmp
mov
pushf
sub
pop
call
aam
jg
and
jle
ror
push
pop
repz
repnz
add
mov
repz
ins
div
xchg
js
icebp
inc
and
clc
sbb
rcr
and
xchg
xchg
mov
mov
mov
add
xchg
outs
test
and
into
add
neg
add
movs
ss
test
hlt
cmps
cmps
loope
(bad)
mov
out
fcomp
xchg
movs
jp
repnz
movs
xor
mov
mov
jl
clc
loop
push
ficom
fld
sub
(bad)
jmp
mov
mov
mov
mov
add
inc
popa
movs
or
pop
jno
jg
(bad)
xchg
push
fsubrp
xchg
test
(bad)
adc
jecxz
pop
mov
(bad)
mov
jmp
sbb
addr16
push
xchg
pop
popf
sub
push
int3
sbb
loop
sbb
js
pop
pop
xor
cmp
mov
push
ds
adc
mov
(bad)
leave
cmp
stos
mov
jmp
jbe
stos
mov
hlt
in
sbb
out
mov
push
adc
pop
and
popf
xchg
or
stc
jecxz
jp
xchg
popf
xchg
jb
and
ins
cmp
mov
inc
lods
(bad)
xor
lock
mov
movs
jnp
xchg
cs
shr
pop
push
jle
xlat
lahf
cmp
pop
inc
sti
je
cmps
shr
pop
add
inc
icebp
leave
int
leave
and
mov
sub
and
shl
cwde
cmc
xchg
ret
lock
jp
neg
push
mov
push
std
lods
xchg
sbb
mov
retf
ret
(bad)
push
rol
and
jge
test
je
neg
or
cmp
add
ja
add
adc
vshufps
mov
bound
cmp
adc
cli
out
stc
sub
imul
add
or
pop
pop
sbb
lods
xchg
xchg
mov
retf
int
sub
stc
mov
or
retf
or
pop
shr
mov
pop
adc
stc
mov
nop
mov
dec
repz
pop
addr16
add
scas
addr16
mov
call
in
imul
mov
popf
cli
pop
lods
push
mov
cs
bound
ret
fild
cmp
arpl
add
mov
(bad)
mov
xchg
ja
jno
mov
inc
adc
mov
xor
cmc
cmp
push
rol
pop
pop
push
ret
(bad)
ja
les
cmp
(bad)
jle
add
jge
dec
(bad)
scas
mov
xchg
push
push
test
dec
ficom
fcom
mov
push
sub
adc
add
into
xchg
or
xchg
pop
arpl
mov
int
sti
fs
push
and
adc
sbb
(bad)
nop
ins
sbb
mov
pop
rol
in
loope
jno
mov
jecxz
fcmovu
mov
in
dec
pop
lahf
adc
xchg
xor
jne
(bad)
stc
xchg
sub
loope
cwde
cdq
mov
scas
mov
test
xchg
fsubr
sbb
rcr
int
sbb
sub
sub
add
xchg
inc
cmp
and
inc
adc
cmp
adc
jmp
pusha
xchg
out
or
(bad)
(bad)
fs
cmp
dec
mov
push
xor
push
and
mov
inc
fwait
push
mov
push
add
push
(bad)
stc
sar
fst
push
jmp
cwde
ins
fxch
push
lock
rol
pop
faddp
mov
int3
and
popf
add
mov
imul
dec
aad
call
jmp
stos
pop
hlt
sahf
add
push
mov
arpl
inc
scas
sar
stos
cdq
and
outs
add
hlt
xor
js
sub
or
clc
idiv
lods
fistp
into
cmp
cmp
aam
xor
cld
leave
sub
in
jp
mov
sub
xchg
jl
test
mov
imul
mov
jb
push
inc
inc
add
rol
mov
sbb
loopne
(bad)
mov
pop
xchg
dec
cwde
std
jo
or
jno
pop
loope
dec
movs
or
pop
rcl
xor
push
retf
sbb
stos
cmp
dec
fucomp
add
pop
push
test
and
in
rcr
popf
sbb
sbb
dec
pushf
or
pop
and
xchg
mov
mov
call
cld
sbb
inc
xor
ins
xor
test
leave
mov
or
mov
pop
imul
cli
(bad)
or
aas
ss
shl
outs
or
hlt
lds
cmp
mov
pop
xor
xor
jns
rcl
xchg
jns
push
adc
mov
sbb
mov
cdq
push
fs
in
stos
movs
cmp
lock
and
loop
fmul
ret
hlt
idiv
add
push
or
push
jnp
cmps
hlt
icebp
dec
div
pop
outs
cmp
in
rcl
sbb
mov
fdivr
xlat
mov
in
lock
cmp
and
push
add
and
(bad)
int3
fsub
mov
push
mov
not
inc
jb
lds
test
inc
mov
fcomp
in
cdq
repz
js
jmp
mov
fcmove
mov
xor
dec
xor
shl
rcr
push
fscale
xchg
mov
mov
retf
jbe
jle
xor
mov
das
push
loop
mov
sbb
pop
push
sbb
mov
out
pop
nop
sti
sbb
lahf
shl
lods
and
push
cwde
les
(bad)
clc
push
cmp
dec
addr16
or
sub
retf
mov
or
fidivr
cld
sahf
pusha
pop
push
pop
popa
dec
sub
pop
pop
shr
ret
dec
xchg
xor
sbb
jb
pop
sbb
ret
jb
ror
inc
xchg
fstp
leave
outs
fimul
mov
popf
pop
jecxz
movs
cmc
sbb
ret
or
cli
in
jns
push
in
inc
fs
jl
in
push
(bad)
in
scas
mov
inc
push
aas
sub
xlat
fstp
clc
jg
sbb
pop
jle
pop
xchg
cld
popf
fadd
or
(bad)
shr
mov
mov
cmp
adc
call
mov
sbb
inc
fdiv
add
jmp
repz
test
jp
outs
std
xchg
cmps
hlt
shl
gs
or
retf
sbb
and
adc
fucomp
jne
imul
cmp
cmp
out
addr16
mov
xchg
xchg
aam
sub
jno
and
pop
test
sar
xor
cmp
enter
adc
in
mov
retf
es
and
js
test
push
adc
sub
add
es
inc
dec
cwde
mov
sbb
adc
jmp
sbb
enter
pop
stc
and
inc
(bad)
xchg
xchg
in
in
sbb
ss
imul
pop
jbe
or
xchg
push
jo
or
mov
and
add
push
int3
and
into
adc
(bad)
mov
shl
outs
push
int3
scas
cmp
sub
or
(bad)
xchg
cmp
mov
add
loop
xchg
out
and
add
mov
(bad)
and
fist
ror
hlt
(bad)
sub
cmp
adc
jecxz
inc
cld
sub
jl
js
fs
cmp
sbb
jecxz
mov
mov
push
std
add
std
xchg
cwde
jnp
or
enter
xchg
dec
and
dec
outs
ins
jb
mov
mov
xchg
xchg
gs
inc
call
cmp
popa
shl
xchg
pop
ja
or
xchg
xor
mov
(bad)
xchg
adc
imul
(bad)
icebp
int3
push
fiadd
and
mov
in
cmp
adc
out
xchg
pop
xchg
int3
lock
inc
pop
push
mov
cmp
inc
and
xchg
aaa
test
mov
mov
sbb
inc
xor
out
enter
(bad)
icebp
je
leave
mov
sbb
jnp
xchg
retf
and
push
adc
test
(bad)
fist
test
sbb
iret
cmps
jp
fndisi(8087
push
imul
sbb
pushf
inc
gs
jmp
call
les
rol
push
or
(bad)
and
dec
iret
sbb
lds
fld
call
xchg
cmp
nop
repz
(bad)
mov
lods
pop
adc
je
hlt
fisttp
into
lods
in
das
lahf
call
xchg
xor
enter
xchg
mov
in
sub
(bad)
fisub
outs
in
enter
inc
stos
ja
aaa
mov
push
int
aad
push
add
ds
xor
push
arpl
mov
icebp
cmp
push
jne
inc
hlt
dec
jmp
aad
out
push
xor
dec
xor
inc
adc
adc
mov
cmp
jp
push
cmp
jmp
jnp
fs
adc
pop
xchg
mov
mov
ins
mov
iret
out
imul
push
ret
fcom
fsubr
xor
xor
out
xor
test
push
shr
or
and
push
or
adc
jns
mov
sub
xor
sbb
add
xor
cld
jmp
or
les
mov
ins
push
in
adc
dec
xor
mov
jge
aas
sub
pop
inc
movs
popf
mov
xlat
ret
pop
std
jae
sti
dec
inc
inc
leave
(bad)
fsubr
mov
retf
ds
loope
and
inc
mov
add
fwait
and
dec
jbe
stos
pop
or
cmp
inc
sub
mov
out
xor
movs
mov
fist
imul
icebp
jo
jmp
loopne
mov
mul
push
daa
inc
popf
out
xchg
sahf
and
sub
inc
and
dec
mov
dec
inc
sub
inc
adc
fmul
test
and
or
inc
jmp
imul
mov
aas
scas
imul
adc
data16
xor
cdq
jmp
pop
xchg
pop
div
mov
fsub
mov
sbb
dec
jmp
clc
mov
xor
xor
jo
iret
jne
jb
sbb
bound
add
and
jo
sahf
jmp
xchg
pusha
xor
hlt
(bad)
addr16
sbb
jmp
les
std
push
or
arpl
cmps
jp
(bad)
cmp
jnp
mov
pop
in
repnz
fs
pop
addr16
loopne
cdq
int
xor
mov
cmp
push
adc
mov
mov
pushw
sub
out
jo
pop
sar
inc
out
test
mov
js
mov
in
lock
dec
(bad)
or
lea
aaa
push
mov
call
push
(bad)
ja
repz
in
fist
inc
out
ret
hlt
int
arpl
mov
inc
mov
adc
sub
inc
mov
in
xlat
iret
pop
movs
nop
pop
sub
xchg
test
fmul
test
jecxz
jno
imul
lea
xchg
xchg
cmp
sub
mov
inc
xchg
dec
mov
shr
fnstsw
retf
imul
rcr
out
nop
aaa
loope
nop
xor
cmp
mov
mov
je
xchg
cmp
sahf
ins
hlt
mov
mov
jb
inc
adc
fbld
js
ins
and
adc
cwde
aam
jg
xchg
in
and
out
xchg
mov
daa
hlt
ins
scas
dec
rcl
aas
xchg
cmp
ds
jp
jle
inc
xchg
mov
dec
mov
and
jbe
jle
(bad)
leave
(bad)
mov
(bad)
cmp
push
repz
jecxz
xor
nop
jno
loope
pcmpgtw
fld
cdq
xchg
dec
fmul
jae
mov
out
hlt
repnz
inc
dec
pmulhw
daa
sbb
xchg
push
jg
mov
push
sub
mov
mov
inc
test
or
or
pop
ja
push
jno
xor
sub
stc
mov
stos
dec
sub
test
add
sbb
div
push
cmp
fs
cld
aas
es
(bad)
fnsave
sbb
mov
adc
stos
or
ss
(bad)
xor
add
or
ret
pop
nop
stc
(bad)
sbb
es
inc
mov
or
fwait
scas
pop
lods
enter
mov
mov
fcom
push
addr16
pop
(bad)
mov
pop
(bad)
(bad)
fadd
or
sub
shl
xchg
pop
fstp
xor
mov
jns
xor
dec
mov
adc
bound
push
mov
or
mov
xchg
lahf
popa
call
cmovg
int3
and
stc
shl
fcmovnbe
mov
(bad)
xchg
add
mov
ds
xchg
mov
pop
out
shr
rcl
shl
push
sub
mov
fcos
call
popf
mov
ror
jbe
push
fcom
aaa
or
jb
aaa
iret
arpl
push
popf
scas
sahf
addr16
out
stos
sub
in
xor
or
outs
in
(bad)
fistp
pop
popa
jmp
push
and
lods
test
and
div
mov
ja
inc
call
loopne
iret
repnz
sub
lea
adc
repz
cmp
mov
cli
xor
dec
int
neg
ins
sbb
push
ret
ja
pop
and
mov
scas
cmps
sahf
fidiv
and
stos
out
jge
mov
repz
cs
jnp
popf
or
cld
jle
jns
stos
ret
and
aad
loope
pop
into
jmp
cmps
lds
test
test
lods
inc
gs
dec
push
scas
test
and
ficom
jmp
mov
iret
xchg
xor
in
mov
mov
jbe
push
pop
or
sub
jmp
jae
cmp
pusha
(bad)
cmp
pop
mov
iret
inc
mov
ds
xchg
ja
call
push
mov
nop
push
adc
pop
mov
(bad)
jno
xchg
idiv
sbb
jbe
sbb
mov
pop
sahf
xor
test
lds
sbb
sbb
enter
hlt
xchg
mov
cmps
sahf
das
(bad)
cs
or
addr16
loopne
mov
aam
dec
lea
pop
add
sub
in
das
test
rcl
add
xchg
add
jle
jp
je
daa
loop
and
push
ret
test
(bad)
idiv
jns
in
add
in
movs
jo
mov
popf
mov
mov
mov
fild
mov
and
cmc
iret
pop
out
or
cmp
sub
xor
sbb
push
shr
dec
out
dec
push
daa
rcl
mov
test
add
nop
pop
xor
(bad)
(bad)
sub
mov
bound
mov
xor
ret
daa
and
xchg
aaa
sub
leave
xchg
fld
add
or
jmp
arpl
in
sub
sub
mov
test
add
xchg
inc
pop
clc
inc
and
xor
fisttp
push
or
add
pushf
mov
mov
aas
dec
pop
and
pop
pop
pop
loop
dec
rcr
push
or
cli
rcr
mov
adc
xchg
fstp
sub
fnstcw
xchg
mov
jecxz
xchg
or
mov
xor
scas
cmp
xor
stos
mov
dec
(bad)
movs
and
push
mov
jns
nop
sub
aad
shl
jbe
stos
jno
dec
cmp
bound
push
ret
add
popf
pop
iret
push
icebp
(bad)
mov
bound
mov
mov
sahf
bound
mov
jns
cmc
(bad)
cmp
sti
push
cmps
adc
call
out
data16
mov
add
cmp
cmps
mov
out
fldenv
(bad)
push
adc
rcl
pop
dec
fs
scas
add
and
lahf
push
sub
ja
sahf
jmp
scas
popa
adc
jecxz
xchg
xlat
icebp
in
sub
out
das
inc
xor
xchg
mov
mov
ja
xchg
mov
les
rol
fwait
mov
aas
jl
scas
jl
sbb
enter
popf
test
test
in
stos
sahf
cmc
pop
lock
mov
idiv
ret
mov
lods
idiv
mov
pop
add
push
sar
fidiv
jno
in
pop
data16
and
sub
mov
cmp
lea
push
jo
cmp
push
enter
pop
loopne
fsubr
adc
add
into
adc
and
shr
scas
test
pop
push
fidivr
inc
fsubr
cli
cmp
ins
scas
xor
mov
cmp
divps
test
pop
dec
lock
mov
push
iret
in
inc
(bad)
frstor
ret
mov
repz
ja
pop
fwait
mov
jge
nop
cmp
jecxz
dec
sub
loop
mov
nop
mov
icebp
(bad)
cld
or
scas
pop
pop
loop
lds
cmp
mov
call
mov
fcom
pop
shl
test
dec
jmp
mov
shl
jnp
ds
aam
pop
sbb
lods
repnz
pop
ret
clc
pusha
sbb
outs
fbstp
push
retf
inc
ror
into
push
jecxz
cwde
loopne
cmp
jno
inc
inc
test
inc
push
fcom
movs
pop
mov
into
std
sahf
shl
clc
sti
out
add
xchg
ss
cmp
aam
sub
xchg
jbe
mov
pop
mov
xchg
cmc
inc
jb
loopne
jne
out
push
mov
jo
cli
cmc
test
fisttp
xchg
shl
mov
lea
jb
adc
sbb
mov
dec
test
pop
sbb
inc
stc
setnp
sbb
in
push
stc
inc
ds
xchg
mov
jle
and
cmp
or
xchg
inc
(bad)
enter
in
adc
or
aam
stc
add
mul
(bad)
cmps
and
or
sbb
sub
dec
pop
xchg
ins
add
fild
ret
add
cmp
mov
cmp
stc
push
jns
fidivr
xor
stc
mov
jo
inc
adc
inc
cwde
data16
jae
int
push
stos
sbb
jo
jmp
(bad)
(bad)
pop
stos
and
xchg
add
jle
ds
push
xchg
gs
lea
test
cld
mov
shr
push
test
fbld
stc
inc
jge
hlt
and
pop
push
out
cmps
popf
inc
adc
stos
jmp
cmc
mov
(bad)
mov
call
fwait
push
idiv
add
mov
test
dec
(bad)
xchg
shl
push
cs
pusha
(bad)
arpl
mov
fld
cmp
les
das
shl
cmps
je
ret
shl
xchg
ds
xchg
mov
mov
retf
inc
pop
dec
icebp
data16
xor
or
mov
mov
or
mov
div
dec
pop
iret
adc
jnp
jo
add
xchg
das
inc
ret
hlt
imul
xor
leave
push
xor
and
jg
xchg
imul
fisubr
xchg
xchg
push
mov
retf
daa
and
out
jns
mov
dec
fcmovnbe
fistp
pop
in
add
in
mov
push
fmul
cs
jge
cmps
inc
add
jmp
and
mov
or
out
shr
and
and
loop
push
adc
jge
push
mov
dec
ja
inc
out
out
pextrw
or
push
in
ficom
cs
jns
mov
adc
adc
jle
or
ds
sbb
and
je
fdivr
int3
xor
aam
mov
and
test
inc
aam
mov
faddp
dec
ror
push
jne
hlt
sahf
test
push
fbstp
stos
popa
fbstp
inc
shl
mov
cli
out
sub
push
pop
or
adc
scas
xchg
loope
test
movs
outs
or
pop
and
jg
sbb
xchg
xor
shl
jle
test
jo
dec
mov
loop
mov
sbb
xchg
cwde
xchg
push
xchg
loope
out
cld
pop
sub
pop
xlat
fs
cmp
push
dec
lea
pushf
sbb
xor
cmps
out
or
push
in
cmp
(bad)
fist
test
out
or
aas
jge
xchg
std
test
push
inc
in
mov
inc
and
cmp
jnp
push
push
ja
in
jp
shl
adc
cmp
lock
adc
test
or
call
lock
jae
jge
sbb
dec
dec
sbb
sbb
cmc
es
dec
pop
xchg
mov
out
xchg
pop
loop
mov
xor
push
pusha
out
pop
dec
jmp
out
xchg
shr
ins
pop
adc
add
int3
mov
repz
test
(bad)
mov
dec
sbb
push
pushf
adc
inc
or
or
mov
out
repz
jmp
test
stos
and
fbstp
or
mov
lahf
push
mov
sub
inc
mov
imul
shl
add
fdivr
stos
xor
push
mov
mov
in
pop
sahf
cli
out
jmp
xor
int
ins
mov
cmps
out
call
aad
cmps
cmps
gs
fdivr
adc
push
pop
(bad)
popa
or
cs
xchg
push
inc
mov
push
loope
mov
xchg
sub
imul
push
inc
jbe
gs
mov
cmp
jbe
mov
(bad)
sub
daa
or
jne
cwde
add
cmp
jno
and
mov
and
xchg
xor
push
ss
mov
cmps
(bad)
push
ins
lds
enter
into
(bad)
shl
popa
ins
xor
movs
jl
retf
lock
or
icebp
pop
adc
mov
pop
repnz
mov
pop
das
sub
and
dec
iret
xlat
cmp
dec
mov
ret
pop
jecxz
inc
cmp
jecxz
test
mov
into
sbb
adc
outs
inc
loop
stos
fld
adc
dec
push
daa
imul
pop
dec
call
mov
sub
loopne
xchg
fadd
mov
and
add
inc
popf
addr16
xor
neg
and
xor
xchg
imul
mov
shr
mov
adc
push
xor
movs
xlat
imul
xor
dec
jbe
in
cmp
mov
mov
or
daa
pop
sub
add
jo
jbe
dec
(bad)
fucompp
add
inc
mov
clc
out
dec
movd
push
and
sbb
jb
or
push
add
mov
sbb
retf
push
push
sbb
mov
(bad)
xchg
popf
add
jle
js
xchg
inc
pop
mov
and
stos
pop
out
dec
(bad)
aam
mov
adc
xlat
jp
ss
dec
loope
aaa
(bad)
mov
sub
xor
cmp
add
push
mov
into
mov
adc
jne
ret
or
lds
in
lea
lods
data16
add
and
jns
mov
inc
dec
push
mov
jle
in
aam
jmp
adc
ss
jecxz
push
cs
rcr
xchg
jecxz
mov
ret
cdq
es
pop
push
and
xchg
out
out
adc
or
or
cmp
dec
ror
gs
in
ror
es
fbld
popa
jge
lds
push
jmp
jbe
jnp
adc
stos
jmp
aam
ror
dec
xlat
xchg
cmps
inc
jge
test
outs
inc
pop
or
test
pop
ret
std
jg
call
cmp
popa
sub
mov
fist
call
jo
jnp
cmp
pop
mov
iret
cmp
faddp
sub
mov
stos
js
les
pop
or
add
jno
mov
pop
dec
int3
arpl
scas
fisttp
movs
dec
or
imul
xchg
movs
mov
frndint
jmp
xor
into
inc
inc
retf
cdq
in
or
fs
xor
sub
jnp
xor
and
jne
aaa
xchg
sbb
int3
out
xor
shl
xor
sbb
mov
lods
adc
push
mov
ja
or
push
xor
dec
rol
aad
dec
(bad)
cmp
ins
add
cmp
mov
push
ja
aad
loop
cmp
fimul
xchg
lods
and
push
and
mov
inc
mov
dec
mov
cmps
ins
jo
inc
retf
sbb
xchg
cs
or
cmp
cmp
data16
sti
dec
jle
xor
and
mov
mov
stc
jns
sub
call
loopne
and
mov
(bad)
jp
aas
stos
ror
adc
scas
mov
out
cmp
rcl
aaa
jns
arpl
pop
aas
ret
mov
or
xlat
sub
inc
retf
int3
mov
call
fwait
mov
ret
or
sahf
xchg
imul
test
sub
lds
(bad)
push
gs
adc
mov
std
in
mov
retf
ror
mul
sahf
add
dec
inc
mov
(bad)
test
bound
mov
cmp
mov
(bad)
sub
push
sbb
pusha
dec
mov
cmps
das
enter
mov
add
mov
jge
inc
out
fsub
fs
(bad)
mov
mov
aam
(bad)
xlat
rcl
enter
(bad)
(bad)
dec
push
mov
ja
xchg
rcl
mov
and
sbb
stc
loopne
test
push
sbb
push
push
inc
jmp
inc
lahf
aam
in
adc
jmp
sysexit
js
(bad)
call
fmul
xor
mov
test
scas
ds
lahf
cmp
add
retf
pop
add
sbb
add
out
sub
outs
pop
stos
jb
mov
aas
push
xor
pusha
ds
test
out
in
sbb
fmul
sbb
mov
xor
stos
rcl
pop
push
inc
jmp
xor
ret
pop
addr16
inc
popf
imul
sbb
sub
cmps
sbb
jns
cmp
imul
fidivr
xchg
dec
add
out
es
push
mov
dec
div
fld
(bad)
retf
(bad)
cmp
jge
lea
or
aas
addr16
push
test
xchg
and
daa
scas
(bad)
xlat
shr
push
or
pop
(bad)
push
cmp
inc
inc
pop
push
inc
push
shl
cdq
call
rol
ds
rol
nop
adc
sub
inc
int3
adc
xor
dec
jge
mov
out
sub
leave
jae
fs
jmp
sar
cmp
clc
pop
fs
addr16
mov
ss
cmp
ins
(bad)
enter
addr16
xchg
jno
cmp
xchg
movs
icebp
ja
xchg
lods
and
paddusw
int
and
std
mov
js
dec
adc
adc
ins
ret
and
xor
mov
push
mov
xlat
int3
fwait
push
ins
scas
mov
xor
ret
fisttp
bound
mov
add
xor
or
jp
mov
gs
loope
cli
mov
pusha
mov
pop
dec
lea
in
inc
aam
inc
cmp
adc
sub
ins
in
jmp
lods
sti
jmp
addr16
cs
mov
inc
pop
daa
jo
out
dec
pop
cmc
adc
add
(bad)
loop
clc
cmps
rep
cld
xor
fisttp
fxch
xchg
rcl
xor
sub
js
ja
sub
aad
sub
add
mov
cmps
clc
push
dec
pop
pop
jns
add
xchg
sahf
pop
add
mov
jbe
repnz
or
mov
fdiv
jb
xchg
sub
repz
movs
cmps
std
push
repz
test
sbb
push
xchg
dec
pop
das
call
addr16
les
or
or
sbb
dec
sbb
je
outs
ds
adc
repz
push
out
test
pop
(bad)
das
adc
aas
ret
sub
call
jle
and
aaa
or
cmps
mov
sub
popf
add
loop
jl
mov
mov
add
cs
fs
push
mov
xchg
pop
movs
adc
jmp
cmp
inc
retf
leave
ins
jns
pusha
inc
xor
cli
jo
cli
dec
into
stos
xor
and
sbb
loopne
out
aad
push
mov
or
in
cmc
addps
push
xchg
(bad)
sti
into
and
pop
fimul
mov
and
xchg
ret
out
jno
jne
in
ins
mov
sbb
sub
fcom
mov
call
ins
(bad)
bswap
xor
lea
sbb
xchg
and
mov
fwait
adc
or
js
mov
mov
mov
xchg
icebp
sbb
push
pop
aam
inc
mov
jne
jbe
mov
test
icebp
pop
cli
(bad)
dec
push
pop
lock
je
rcr
xchg
adc
aas
mov
pop
call
and
aam
push
push
sub
push
push
xchg
sbb
fisubr
dec
fdiv
cmps
sti
xor
nop
js
mov
jl
stos
adc
mov
push
ret
cmp
cmps
pop
or
jno
mov
add
sbb
fsubr
js
or
xchg
pushf
adc
sbb
cs
hlt
or
push
fwait
mov
dec
adc
mov
xchg
cmp
js
cs
push
inc
jns
test
pop
fidiv
and
fld
pop
stos
icebp
push
ret
mov
fist
fisub
daa
je
dec
jecxz
or
jmp
sub
lods
out
cmp
das
sbb
sub
push
sbb
push
imul
data16
xor
jp
sar
sub
pmaxsw
mov
or
pop
movs
fnsave
xor
arpl
add
out
or
mov
mov
bound
adc
jbe
sahf
mov
mov
cmp
gs
aad
xchg
sub
jbe
jg
xchg
xlat
ins
test
dec
scas
fidivr
fdivr
cmp
dec
and
push
aam
push
mov
jb
cmp
or
in
cli
push
imul
jae
les
shr
mov
fcmovnu
push
xchg
sub
and
mov
dec
jno
sbb
mov
push
add
addr16
xchg
push
mov
add
jg
push
out
cmp
mov
mov
mov
ret
test
dec
(bad)
cmp
aad
sub
or
jmp
mov
std
test
push
sub
jns
test
inc
xor
inc
mov
(bad)
mov
or
mov
leave
xchg
aad
jg
scas
in
pop
shr
jl
mov
adc
xor
in
mov
jp
inc
pop
(bad)
cmp
cmp
dec
mov
cli
cmps
fsubr
mov
mov
cli
fwait
lea
adc
sbb
mov
adc
imul
adc
inc
jb
or
div
pop
or
jae
sbb
mov
cwde
or
div
mov
es
call
sbb
fist
faddp
lods
mov
push
inc
xchg
push
out
xor
ret
xchg
aad
out
inc
add
inc
pop
test
adc
retf
aam
stos
clc
(bad)
add
leave
pop
xchg
addr16
jmp
sub
dec
popa
dec
xchg
mov
pop
cwde
dec
fyl2x
in
lods
mov
mov
nop
test
xlat
mov
sbb
mov
lods
arpl
mov
pop
gs
aas
or
mov
cmp
fcmovu
js
inc
sub
(bad)
je
dec
pop
jne
or
mov
cld
and
add
ffree
inc
stc
cwde
xor
es
and
sbb
out
jp
dec
add
jge
adc
fsubr
inc
ss
add
cli
out
shl
mov
gs
loop
loop
rol
aam
dec
dec
pop
jae
push
and
outs
dec
push
ss
sbb
mov
mov
push
pop
mov
mov
(bad)
lock
lock
div
in
scas
cmps
ins
int3
xchg
sub
mov
daa
and
xchg
cwde
das
imul
xchg
mov
dec
jnp
fs
jecxz
lahf
out
gs
(bad)
aad
jp
pop
and
int
in
xchg
or
sbb
dec
push
sub
add
ss
push
jno
ret
es
shr
xchg
adc
stos
fidiv
mov
mov
stos
int3
int3
cmc
mov
sub
dec
push
out
iret
lahf
add
pushf
dec
aaa
sub
(bad)
test
pop
iret
mov
lods
xor
sub
ficom
push
aad
pop
jmp
jg
add
mov
lds
(bad)
retf
vmaxps
pop
adc
aas
test
int
mov
pushf
push
(bad)
adc
aad
cmc
push
mov
inc
popa
mov
mov
out
push
jg
retf
sahf
hlt
xchg
xor
dec
enter
sahf
pop
cdq
lods
and
lods
push
(bad)
cld
jbe
test
add
jbe
pop
loop
mov
dec
mov
dec
shl
(bad)
jmp
repz
push
nop
test
movs
cmc
mov
and
sbb
xor
push
loopne
das
add
sub
cmp
imul
test
and
sub
pop
mov
or
dec
dec
into
fimul
js
shr
sar
xchg
clc
lods
pop
push
xchg
jle
mov
jne
mov
fiadd
and
pusha
mov
mov
mov
rcr
stos
add
adc
inc
dec
test
cdq
and
xchg
mov
adc
je
je
adc
mov
xor
xor
(bad)
arpl
ss
in
jmp
or
mov
mov
rcl
inc
shl
pop
stc
mov
pop
cmp
cmp
dec
cli
xchg
rcl
push
int
xchg
sub
loop
popf
and
sti
and
sahf
iret
push
mov
lods
adc
cmp
sbb
test
jge
pop
inc
sub
mov
or
repnz
outs
inc
push
dec
popa
mov
mov
daa
mov
sub
push
popa
sbb
jecxz
adc
rol
iret
sbb
dec
out
aad
scas
adc
jae
inc
and
das
cld
mov
add
outs
dec
adc
lea
mov
test
aam
fstp
or
sbb
dec
bound
test
jo
mov
adc
in
fmul
shr
popf
test
(bad)
xor
mov
and
push
nop
in
push
(bad)
sti
fwait
mov
outs
or
and
aas
iret
jne
xchg
loopne
sahf
popa
xor
mov
outs
and
out
loope
xchg
test
xchg
inc
ret
inc
cmp
mov
mov
cmps
mov
xor
cmp
cmps
push
daa
test
lods
cmp
les
test
push
xchg
mov
popf
pusha
lods
fistp
lahf
arpl
retf
mov
ret
xchg
enter
mov
mov
mov
lods
(bad)
ffree
adc
cli
call
daa
pop
bound
mov
inc
mov
push
jnp
xlat
movs
adc
inc
aaa
in
adc
and
call
dec
and
sbb
call
fucom
out
pop
dec
shl
jle
inc
mov
fstp
lahf
jl
jae
xchg
scas
call
cld
in
sub
imul
ret
ins
sbb
(bad)
mov
(bad)
push
arpl
sbb
fnsave
neg
mov
sub
push
cld
pop
in
dec
sahf
jbe
add
adc
scas
mov
enter
retf
inc
fst
lds
and
jne
xor
test
test
sahf
(bad)
cmp
sub
(bad)
mov
cmps
not
dec
xchg
push
shl
cmp
sahf
ja
retf
push
test
arpl
(bad)
icebp
outs
cmp
sahf
not
loop
daa
addr16
or
mov
rol
mov
mov
cmp
cwde
pop
jb
shr
bound
mov
sahf
adc
or
repnz
mov
in
dec
out
lsl
iret
out
ins
in
mov
inc
add
adc
imul
add
cld
ret
xchg
xor
test
sbb
movs
sti
pop
xchg
adc
jp
or
push
pop
mov
cmc
adc
mov
es
(bad)
jnp
lds
pop
loopne
pop
leave
cmps
inc
lock
lods
in
mov
stos
adc
jae
sahf
xor
retf
std
xor
aaa
or
or
jecxz
mov
retf
shl
jo
loope
or
stos
add
jb
leave
push
inc
imul
aaa
mov
cmp
ret
aas
push
fidiv
dec
iret
imul
in
sub
nop
mov
inc
mov
xchg
mov
jnp
jb
jl
jnp
sbb
fnstsw
mov
iret
mov
ds
add
cwde
jnp
imul
push
ins
sbb
packssdw
test
xchg
jge
inc
loopne
add
pop
jl
lds
xor
push
xchg
arpl
sub
loope
repnz
cmps
pop
or
test
mov
xchg
dec
jae
mov
mov
xlat
adc
mov
adc
fidivr
lods
lods
out
sti
test
or
(bad)
loop
mov
and
aaa
loop
dec
and
mov
call
mov
pop
out
lods
pop
inc
jl
lea
dec
adc
cmp
mov
ja
adc
ror
bound
push
loop
retf
fdiv
in
xchg
mov
xchg
xor
js
jle
into
dec
mov
mov
ss
mov
jne
gs
dec
sub
dec
xor
xchg
cmp
xor
repz
mov
jne
mov
ins
int3
mov
xchg
adc
jle
int
pop
adc
or
inc
les
inc
add
lahf
enter
int3
xor
(bad)
jbe
shr
pop
xor
call
push
sub
xchg
nop
jle
jnp
shr
iret
enter
sbb
lds
cwde
repz
add
loop
ja
scas
jae
inc
mov
xlat
bts
xchg
pop
in
stc
xchg
mov
adc
jns
lds
js
sub
repz
inc
ret
dec
mov
clc
fwait
inc
bound
push
pop
cs
out
mov
xor
mov
sbb
loopne
or
cs
int
pushf
cmp
dec
int3
and
mov
mov
or
ret
inc
xor
sbb
inc
cwde
scas
inc
xlat
test
addr16
lds
hlt
adc
lods
int3
xor
and
mul
sar
add
cdq
sbb
ss
test
fdivr
cmp
push
sbb
or
xor
jo
xchg
or
movs
pop
adc
aam
xor
push
add
push
xchg
add
je
or
out
mov
cmp
inc
inc
mov
rcr
cmps
cmps
inc
mov
fidivr
stc
scas
out
out
retf
and
inc
push
sub
mov
jge
mov
test
sub
invd
mov
push
rcl
cwde
pop
add
ss
dec
mov
pop
test
push
pop
xor
sub
pop
xchg
mov
popf
jne
icebp
xor
cdq
xchg
xchg
inc
sbb
pop
rcl
jbe
mov
dec
sbb
stc
iret
(bad)
retf
jge
jae
in
not
mov
xlat
mov
push
mov
sub
sub
mov
mov
jns
jbe
inc
mov
aaa
mov
cdq
mov
inc
not
pop
and
out
adc
fwait
into
icebp
imul
(bad)
mov
fidiv
xlat
xchg
cmc
outs
mov
lock
xchg
pop
dec
push
shr
stc
cmp
cli
push
pop
or
cmp
loop
in
xchg
and
cmps
lea
adc
push
lods
outs
or
mov
mov
and
push
hlt
xchg
xor
xchg
push
arpl
xlat
sbb
or
inc
in
pop
dec
in
repz
(bad)
xor
ret
movs
test
mov
addr16
xchg
outs
xor
inc
add
mov
(bad)
dec
pop
or
mov
and
(bad)
mov
call
and
ret
daa
mov
ror
ret
out
or
sbb
cdq
inc
in
mov
dec
push
in
sar
mov
pop
sbb
arpl
sahf
ja
call
movs
(bad)
jo
mov
jmp
push
adc
push
stos
std
push
jno
dec
pusha
mov
xor
dec
sbb
push
mov
popf
push
imul
and
in
inc
mov
mov
ins
pop
mov
jne
movs
cmps
sbb
push
and
in
and
push
test
add
iret
or
jnp
loopne
and
jge
adc
out
lahf
pop
fisttp
pop
daa
shr
sbb
adc
scas
pushf
sub
add
sbb
mov
cli
cwde
jle
jmp
adc
push
das
cmp
add
and
push
pop
ret
xchg
push
sub
xchg
(bad)
pop
sbb
or
shl
dec
not
stos
push
out
test
pop
mov
dec
mov
lods
fcmovnb
pop
jne
mov
pop
mov
dec
xor
scas
adc
xchg
mov
xor
les
dec
cmp
or
sbb
ja
jge
in
out
adc
or
dec
jns
repnz
adc
add
adc
data16
xor
jl
pop
push
mov
outs
test
fisub
pop
(bad)
pop
test
and
push
add
sub
imul
mov
popf
lods
inc
sbb
or
mul
cmp
add
mov
mov
jp
aam
outs
push
call
scas
fadd
test
mov
mov
add
es
cli
dec
jecxz
loope
retf
je
mov
sahf
in
jb
pop
scas
add
adc
daa
adc
push
rcr
pop
xor
and
push
xchg
add
fbstp
mov
lahf
dec
or
dec
ret
popf
popa
sub
nop
fsubr
stos
jle
push
leave
mov
push
and
gs
fnstsw
pop
ja
je
ja
xchg
lahf
pop
into
lods
jecxz
into
adc
imul
mov
inc
jne
add
push
es
xor
mov
aaa
in
sub
dec
xchg
sub
mov
nop
repnz
and
imul
and
mov
mov
(bad)
dec
mov
into
lds
mov
mov
inc
jp
and
enter
call
loop
(bad)
sub
lahf
add
jno
stos
(bad)
sbb
adc
jae
inc
call
jb
pop
pusha
mov
push
pop
scas
jecxz
push
add
or
inc
mov
iret
mov
ins
mov
mov
mov
(bad)
inc
dec
push
adc
out
xor
(bad)
call
shr
scas
pop
(bad)
sub
into
jbe
push
das
into
sub
mov
mov
adc
dec
jg
in
imul
mov
mov
jge
cmc
lahf
pop
rcl
enter
and
imul
xor
fdiv
add
dec
push
sti
and
fsubr
fisubr
fsub
and
cdq
mov
bound
mov
dec
lods
inc
dec
sti
jae
in
sti
cmps
push
sbb
(bad)
(bad)
xchg
popa
test
mov
mov
ret
cmps
mul
sbb
push
shl
ss
fcmovnbe
call
push
test
test
loope
and
mov
(bad)
loop
out
or
jmp
dec
mov
ds
fnsave
rcl
retf
xor
xor
(bad)
pop
(bad)
lods
adc
fisttp
retf
inc
mov
push
push
jbe
dec
cmps
xchg
xor
ja
sahf
mul
cmp
sub
jns
fdivrp
arpl
out
loop
(bad)
jmp
and
add
iret
mov
and
fmul
xchg
and
push
pop
push
fwait
lods
sahf
sbb
inc
mov
movs
pop
lock
sbb
loop
jmp
jmp
xor
pushf
lods
mov
retf
and
mov
imul
loope
out
mov
in
iret
stos
push
jnp
hlt
call
and
xchg
sar
jo
push
pusha
mov
push
jg
int3
jp
es
push
sbb
dec
out
cmp
xor
pop
call
lock
dec
mov
aas
sbb
js
push
dec
aam
leave
scas
out
sbb
aad
jno
(bad)
icebp
sbb
repnz
pop
or
or
imul
fidiv
test
ja
mov
add
jge
nop
dec
inc
push
(bad)
int3
or
mov
mov
add
jle
shr
add
shl
add
imul
and
ins
adc
lods
shl
push
shl
push
(bad)
ins
sbb
dec
and
mov
adc
popa
dec
(bad)
(bad)
xchg
or
nop
out
scas
and
mov
and
mov
nop
test
cdq
push
rol
ja
fstp
sub
push
dec
xchg
sbb
outs
adc
out
in
and
ror
in
ficom
sbb
pushf
jmp
jb
das
popf
std
into
push
stos
dec
pop
mov
ins
xchg
daa
sub
mov
icebp
jo
enter
sub
cmp
test
int
js
test
out
mov
add
mov
sbb
cmp
or
ret
cmc
pop
ins
mov
add
lods
test
cmps
mov
mov
repz
jns
popf
loopne
xor
jmp
les
(bad)
cmp
ja
jmp
mov
mov
dec
je
and
cmp
mov
leave
leave
ret
jne
retf
fisubr
or
icebp
nop
jno
and
mov
out
mov
push
inc
sub
push
stc
or
not
push
push
dec
in
push
sbb
adc
adc
popa
sub
sub
push
ret
mov
dec
inc
test
sti
push
js
in
cmp
movs
mov
mul
ja
lock
pop
and
in
pop
in
dec
jne
or
jns
mov
scas
sti
test
jb
mov
sbb
not
das
scas
pop
mov
mov
cmc
leave
xchg
mov
push
aam
push
cli
xlat
push
sub
push
aam
push
fdivr
ret
push
pop
add
xchg
fcomp
jge
retf
cli
mov
data16
jl
in
inc
out
push
pop
mov
fild
aas
(bad)
(bad)
dec
and
les
jecxz
(bad)
fsub
cs
dec
xchg
mov
dec
xor
sbb
lds
sbb
mov
(bad)
sub
xor
cld
sub
lock
hlt
int
inc
je
pusha
mov
push
stos
jle
inc
stos
jl
fs
adc
aad
scas
xchg
fimul
xchg
pop
push
xor
pop
jae
out
and
push
mov
inc
fiadd
in
mov
scas
leave
das
(bad)
fucomi
add
mov
(bad)
jbe
outs
mov
or
or
stos
xchg
push
sar
fbstp
gs
aas
adc
cmp
pop
cli
sub
dec
or
int
fdiv
sbb
ins
pop
adc
retf
lahf
fs
cwde
mov
cmp
sub
das
(bad)
mov
mov
push
out
sub
jle
xchg
and
sub
stos
xchg
jp
stc
add
adc
inc
jnp
xchg
add
pop
aad
fs
and
rol
ss
mov
and
sbb
imul
out
dec
jb
jl
pop
mov
inc
test
inc
aaa
gs
enter
ja
stos
jle
push
aad
ss
sbb
loop
jnp
stc
imul
jmp
jecxz
cmp
movs
mov
in
cmp
fmul
jp
dec
dec
and
aaa
bnd
xor
jge
cmc
mov
jmp
aam
pop
jb
xor
cmp
pop
xchg
outs
pusha
cmp
hlt
inc
mov
and
push
mov
ficom
and
fld
jecxz
pop
pop
sub
aam
daa
pop
push
pop
mov
inc
add
adc
xchg
mov
cmps
mov
cmps
int3
pop
scas
pop
out
push
or
and
adc
sti
fcom
stc
imul
leave
shl
xchg
jmp
out
dec
fucomip
xor
adc
sbb
sbb
cld
lods
scas
and
cwde
mov
aaa
stc
pop
adc
jle
add
jg
inc
sub
push
(bad)
mov
add
cs
mov
and
adc
(bad)
cmp
clc
nop
push
shl
fwait
cmp
call
js
dec
pusha
xchg
xchg
popa
and
push
pop
js
mov
inc
or
shl
lahf
cmp
jge
sbb
adc
test
cmp
push
add
int3
dec
cld
pop
sub
adc
push
adc
mov
aam
lds
fucomi
enter
xor
mov
or
adc
add
mov
mov
xor
inc
outs
xchg
das
test
push
loopne
mov
dec
adc
adc
imul
mov
fst
push
xor
arpl
je
lds
fild
std
jno
popf
jae
in
(bad)
push
out
adc
xchg
iret
hlt
dec
inc
mov
shl
out
mov
and
mov
adc
mov
out
lods
mov
(bad)
jno
mov
mov
jmp
mov
je
mov
movs
dec
inc
aam
dec
lea
jp
leave
clc
popa
dec
or
mov
into
aad
sti
ins
xchg
xchg
mov
inc
daa
(bad)
lds
jae
add
arpl
and
mov
les
inc
sbb
add
dec
scas
pop
push
xchg
push
jno
add
les
xchg
scas
outs
js
sahf
jno
fdivr
pop
and
dec
xchg
mov
adc
push
(bad)
mov
loope
mov
arpl
jg
jnp
mov
jmp
stos
in
jnp
cwde
inc
sahf
xchg
(bad)
add
push
daa
jne
mov
stos
inc
sub
xchg
ja
pop
pop
stos
push
sub
aam
push
pusha
add
lods
jmp
gs
mov
and
mov
int3
fadd
jg
arpl
sub
and
rcl
xchg
pop
push
outs
xor
sahf
mov
inc
sbb
or
xor
loop
add
dec
jno
and
jno
inc
push
lock
fcomp
pop
int3
dec
mov
out
fadd
mov
mov
fnstcw
push
jecxz
pop
jmp
mul
mov
mov
cmp
mov
xchg
mov
jecxz
retf
jo
sbb
stos
popa
out
(bad)
dec
stos
aam
xchg
call
xchg
mov
adc
jecxz
sub
aas
(bad)
push
sbb
adc
inc
and
test
sbb
push
sbb
mov
xor
sbb
cmp
(bad)
jg
scas
mov
daa
jns
pop
loopne
push
adc
jecxz
jbe
sub
sbb
mov
(bad)
adc
add
xchg
sub
loope
iret
jge
sbb
xor
fsubr
dec
mov
mov
push
xchg
fld
xchg
movs
enter
cwde
jmp
jg
in
ins
lahf
xchg
cmp
mov
adc
cmp
xchg
xchg
push
xor
sbb
jb
in
xor
in
push
add
sbb
sbb
repnz
push
pop
add
lods
inc
mov
or
test
xor
lds
retf
lds
inc
in
mov
cmc
lods
sar
ins
popf
lahf
fucomi
cwde
mov
leave
(bad)
in
idiv
xchg
dec
inc
outs
pop
sbb
cmp
pop
mov
push
inc
(bad)
mov
and
sub
mov
int3
mov
loope
mov
push
xor
call
or
pop
in
inc
sbb
xchg
mov
cmp
jne
(bad)
(bad)
fmul
cld
mov
cdq
cvtps2pd
hlt
loopne
inc
ret
sbb
cdq
fimul
fimul
push
xchg
jge
mov
xchg
push
cmps
test
(bad)
movs
stos
(bad)
xchg
jnp
ja
(bad)
mov
mov
in
mov
imul
cld
adc
pop
pop
fs
mov
pop
adc
scas
popa
out
and
lea
adc
lock
ret
sti
dec
jg
sub
cld
popa
fcomp
mov
std
fwait
(bad)
std
lods
jae
cmps
sub
mov
cdq
and
fisub
in
push
lahf
pop
jb
add
out
adc
mov
mov
push
xor
push
push
mov
jg
ins
cwde
loope
sbb
mov
out
imul
es
sbb
cmp
lods
fisub
scas
xchg
inc
ffreep
adc
mov
test
inc
mov
ret
cdq
dec
call
jecxz
dec
adc
cli
push
icebp
nop
sar
fwait
and
imul
daa
shl
fwait
pop
jmp
stos
jge
lods
add
mov
jnp
fiadd
ins
jmp
xchg
xor
inc
clc
stos
cld
jae
pop
jae
retf
daa
dec
repz
int3
enter
adc
inc
loopne
xchg
fistp
sbb
mov
jmp
xchg
in
outs
int3
inc
shr
pushf
das
ss
pusha
push
loopne
jo
cmp
ins
addr16
xlat
je
dec
(bad)
in
dec
sbb
add
inc
fcomp
int3
xchg
xchg
xor
xchg
fild
div
xor
dec
add
lea
xchg
cmp
retf
sbb
int
pop
pop
cmp
retf
(bad)
push
inc
ja
rcl
int3
cdq
icebp
mov
sar
sbb
jns
adc
daa
popf
and
inc
jmp
(bad)
frstor
add
cmp
out
sub
mov
jb
xor
mov
loop
fdivr
xchg
and
fsubr
xchg
fisub
adc
pop
lods
(bad)
mov
mov
push
out
mov
stos
add
das
adc
and
mov
mov
jg
cmp
retf
stos
jecxz
adc
shl
sub
scas
es
dec
dec
adc
add
add
loope
mov
mov
sub
fldcw
push
pop
(bad)
pop
loop
(bad)
xor
je
fcom
movs
or
jns
sbb
inc
xchg
mov
ds
lds
push
add
mov
std
push
adc
xchg
add
stos
jo
ficomp
stos
adc
test
or
in
test
(bad)
jae
arpl
fstp
daa
xchg
sti
push
fbstp
xlat
fisttp
add
cmc
fs
iret
lods
sbb
arpl
ins
jb
sbb
ror
outs
std
rol
push
cmp
mov
push
ins
fldenv
loop
ret
pop
inc
xchg
xor
add
pop
inc
dec
xchg
stc
aaa
jp
adc
es
pop
or
add
arpl
or
mov
arpl
das
fcomp
les
xchg
(bad)
mov
sbb
ds
inc
jl
fsub
cmc
rcl
or
pop
(bad)
out
int
js
movs
xor
push
inc
aam
js
in
in
sahf
mov
xchg
sbb
pop
call
push
test
out
nop
dec
dec
sbb
mov
das
scas
adc
rcl
mov
cld
or
ficomp
stos
add
pop
fldenv
push
pop
mov
call
in
fbstp
adc
jnp
jle
adc
xchg
push
and
lahf
cmp
sbb
retf
stc
mov
call
dec
shl
dec
int3
or
cmp
test
mov
pop
mov
test
fsubr
dec
in
in
(bad)
stc
mov
pusha
jmp
(bad)
dec
cmp
fist
inc
jbe
xor
cmp
and
add
xchg
or
bound
arpl
cmp
out
ins
and
jo
xor
das
mov
dec
mov
dec
outs
jecxz
mov
test
ds
xor
in
mov
sar
ins
fdivr
jnp
mov
mov
enter
stos
mov
xor
push
jmp
add
(bad)
je
push
fistp
sub
retf
out
add
out
xchg
movs
add
xchg
mov
int
jp
mov
(bad)
mov
js
and
mov
sub
cmps
call
xchg
ja
or
pop
leave
enter
pop
inc
pop
cld
push
aad
sbb
jle
lea
cld
aam
adc
and
sub
sbb
inc
fadd
dec
mov
push
psadbw
stos
push
in
das
sbb
test
xor
mov
cmps
push
retf
lahf
loope
adc
outs
rcl
cmp
test
popa
repz
jg
and
mov
adc
sbb
push
sbb
mov
xchg
fwait
dec
pop
stc
cmp
pcmpeqd
in
popa
pop
imul
shl
test
sbb
cdq
mov
das
jge
in
mov
add
std
lea
and
mov
retf
scas
shl
dec
push
and
popa
rcl
inc
pop
dec
mov
call
retf
pop
stos
jmp
mov
ss
sub
int
lds
fsubr
add
movs
push
xor
mov
adc
mov
shl
xchg
sbb
mov
push
lock
adc
jge
and
aas
ret
in
dec
mov
pop
retf
jl
stos
jo
xor
pop
popa
mov
mov
adc
addr16
sub
imul
sub
pop
call
retf
movs
lea
call
mov
xor
adc
mov
out
and
mov
les
push
mov
daa
(bad)
icebp
and
lods
dec
imul
test
imul
aam
mov
ror
inc
(bad)
in
es
add
cdq
jo
popf
push
sub
daa
push
out
dec
mov
sbb
fstp
pop
inc
mov
fisubr
stos
call
xchg
aas
test
in
pop
stos
dec
xor
mov
xor
fcom
test
call
cli
lds
sub
cmp
adc
adc
call
jo
fucom
fsub
pop
inc
cmp
push
add
fwait
xchg
jns
fisub
inc
adc
jge
(bad)
int
sbb
sub
out
lock
ds
je
xor
jno
jmp
add
jp
push
fstp
icebp
into
in
je
cmp
movs
xchg
out
jb
aad
mov
cs
shl
jmp
dec
addr16
mov
inc
lods
cmp
inc
out
add
mov
mov
loope
adc
fnsave
xor
gs
pop
push
jmp
jl
(bad)
cmp
pop
xor
cmp
pop
jnp
sti
test
mov
jecxz
adc
jg
add
mov
sub
(bad)
sti
ins
ror
lods
(bad)
call
gs
scas
jg
push
sbb
mov
bnd
adc
dec
add
fwait
test
jmp
popf
outs
(bad)
jmp
or
pop
aad
add
out
push
pop
sub
xchg
jae
ja
loop
jno
push
and
pop
pop
cli
pop
mov
pop
adc
adc
inc
cmp
data16
gs
xor
push
mov
(bad)
pop
bound
movs
add
and
aaa
fmul
jb
jae
mov
pop
pop
not
fnstsw
xchg
pop
(bad)
and
(bad)
pop
dec
add
adc
jmp
push
and
cli
add
xchg
add
inc
mov
push
shr
jle
mov
stos
out
pop
fwait
clc
sar
in
leave
hlt
paddsw
jecxz
sub
push
pop
out
mov
imul
mov
xor
pop
lar
enter
push
loop
and
cld
imul
mov
add
jae
add
adc
popf
mov
iret
movs
js
xor
arpl
xchg
shl
outs
ja
nop
pop
repz
pop
sbb
daa
add
dec
imul
xchg
xchg
adc
adc
fistp
dec
mov
loop
ins
jmp
mov
dec
cmps
inc
stos
(bad)
and
jns
push
cmp
fist
mov
jbe
pop
push
stos
jmp
fcomp
je
mov
mov
neg
shr
je
mov
std
and
jmp
pop
(bad)
ja
mov
add
push
inc
pop
ins
mov
jo
aad
sbb
imul
in
push
pushf
out
scas
call
leave
mov
ds
dec
inc
shr
jmp
clc
(bad)
shl
div
arpl
add
cmp
call
xchg
jnp
stos
or
in
cmp
adc
or
mov
xchg
in
xchg
sub
push
push
pop
xchg
sub
sar
mov
sbb
test
mov
rcl
pop
pop
nop
and
xchg
scas
scas
out
jne
(bad)
scas
pop
es
retf
in
aam
dec
cld
mov
adc
inc
mov
mov
mov
lahf
mov
retf
inc
cmp
out
out
data16
outs
vfmsub132sd
cs
dec
pop
movs
xlat
xor
(bad)
frstor
popa
inc
sbb
gs
sti
imul
arpl
mov
mov
sbb
int3
bnd
sahf
and
sbb
push
inc
addr16
dec
xchg
xchg
pop
hlt
sbb
xor
mov
pop
ret
iret
sbb
or
sbb
sub
cs
mov
xor
hlt
ja
pop
push
aad
sar
mov
in
or
outs
inc
imul
shl
pop
or
icebp
ret
imul
xchg
rcl
test
adc
lods
pop
lock
jge
loop
popa
or
test
dec
mov
or
ins
inc
pop
popf
stc
(bad)
out
(bad)
repnz
or
dec
and
xchg
cmp
outs
jmp
test
lea
cmc
mov
mov
out
push
call
and
xchg
xchg
ret
mov
iret
push
leave
xchg
sbb
mov
add
iret
sub
sub
stos
fbld
pushf
mov
cmp
ja
fbld
pushf
mov
mov
lahf
xchg
push
cld
imul
in
mov
int
xor
inc
sub
in
or
or
or
push
(bad)
sub
retf
test
inc
adc
iret
and
push
add
or
loop
sub
in
pop
aas
shr
into
xchg
mov
dec
add
mov
inc
call
or
and
add
pop
mov
xor
jo
jmp
adc
cmps
xchg
setae
inc
adc
xchg
imul
xor
fadd
(bad)
(bad)
inc
pop
xchg
lods
bound
cli
lds
repnz
setle
(bad)
inc
cmp
or
mov
jle
mov
mov
add
and
mov
mov
enter
xor
cmp
mov
cmps
mov
es
iret
xor
in
jmp
loopne
stc
push
rcl
pop
mov
inc
lds
gs
xchg
lods
ds
inc
cmp
jnp
add
xchg
hlt
push
(bad)
retf
pop
and
lods
retf
or
xchg
jnp
movs
popf
dec
cld
mov
fadd
das
or
adc
add
mov
jmp
pop
adc
lds
cmp
xchg
mov
adc
sub
repz
add
mov
add
loopne
xchg
mov
stc
out
cmps
jns
xchg
aas
into
and
pop
sar
scas
adc
bound
repz
mov
movs
fwait
into
push
sbb
mov
mov
push
mov
icebp
jbe
or
ret
outs
jns
aam
pop
(bad)
xlat
call
xchg
jbe
pop
mov
sub
je
ja
stos
xor
ror
lods
shr
lods
ins
int3
je
enter
rol
ror
cs
imul
cmp
rol
mov
or
add
mov
cmp
imul
ins
and
hlt
outs
inc
mov
add
outs
or
imul
push
sub
test
pop
ficom
push
mov
jecxz
mov
xchg
hlt
loopne
pop
pop
and
jg
ret
or
std
jp
push
mov
sahf
and
not
jae
ret
pop
push
popa
mov
mov
or
cld
adc
xchg
test
bound
cmp
sbb
or
fnstcw
mov
xchg
jae
cs
pop
sahf
pop
sub
sahf
out
xor
ja
fs
jo
ds
inc
mov
add
popf
xchg
adc
cli
in
jl
fsub
push
sub
jecxz
inc
js
ins
dec
lods
xchg
dec
pop
into
je
pusha
add
out
mov
or
rol
mov
jbe
cli
mov
jno
xor
and
loopne
xchg
and
mov
aas
xor
cmp
add
add
pop
push
sahf
mov
add
(bad)
loopne
xchg
inc
hlt
faddp
push
mov
xchg
xor
or
mov
sahf
ss
pop
les
pop
mov
test
out
fadd
sub
adc
mov
and
adc
mov
push
mov
repnz
pusha
frstor
fidiv
fwait
jmp
jge
cwde
(bad)
shr
inc
cmp
nop
sbb
adc
dec
sub
lods
cmps
aaa
add
ds
adc
jmp
xor
dec
adc
mov
xchg
mov
stos
cwde
xchg
test
mov
(bad)
movs
adc
add
pop
jl
pop
push
cdq
lea
mov
cs
push
xchg
clc
dec
mov
retf
call
(bad)
loope
cdq
and
fwait
cmp
push
dec
fidiv
jle
lahf
jle
jno
sub
jge
jmp
fs
sbb
fmul
loope
push
xchg
iret
(bad)
hlt
popf
jmp
sbb
ds
and
add
mov
cmp
mul
lea
test
jg
jl
repz
int3
mov
data16
leave
daa
sti
popf
faddp
jl
sub
mov
jbe
push
jbe
test
rol
mov
pop
pop
mov
adc
or
mov
jge
sbb
mov
mov
or
ins
ja
retf
scas
mov
mov
call
sub
jmp
je
xlat
fnstenv
rol
push
fmul
test
aas
mov
and
sahf
idiv
jne
test
fld
in
popf
pusha
add
fld
push
or
inc
jp
sub
jnp
test
cmps
not
push
mov
test
push
jge
jg
das
es
push
adc
sub
sbb
scas
clc
imul
scas
(bad)
xor
or
lock
sub
cmp
pop
xchg
or
in
or
shl
and
addr16
retf
cmp
mov
pop
sbb
cdq
add
nop
jle
repnz
xchg
xor
je
in
jle
std
dec
jbe
dec
pop
jns
mov
xchg
pop
fimul
stos
xchg
xchg
inc
js
mov
(bad)
fistp
addr16
jecxz
add
aad
es
jbe
inc
add
or
inc
or
xchg
retf
scas
mov
adc
pop
loop
aaa
cmp
add
(bad)
or
lods
sbb
(bad)
mov
xor
out
jp
ds
xchg
addr16
xchg
lds
pop
add
push
sbb
adc
test
mov
ret
mov
pop
mov
loop
and
cmp
out
mov
pop
bound
enter
scas
pop
retf
cdq
sahf
jae
(bad)
fnstenv
push
lods
fs
test
outs
jns
push
adc
pop
std
push
dec
std
push
ins
leave
mov
cmp
or
push
fimul
push
cmp
inc
imul
sti
xchg
or
dec
xchg
inc
enter
(bad)
pop
adc
jns
xor
cmp
lds
mov
xor
je
gs
aaa
mov
xlat
add
ins
loop
push
mov
push
pop
mov
test
lods
push
adc
arpl
or
adc
test
aas
inc
and
dec
inc
xor
test
xchg
cmps
mov
and
(bad)
addr16
mov
or
add
loop
add
dec
jmp
hlt
mov
mul
jg
popa
jmp
cdq
mov
rcl
daa
out
or
fisub
adc
jmp
inc
(bad)
gs
xchg
pusha
retf
mov
xchg
in
jp
xchg
xor
mov
test
outs
nop
(bad)
cs
or
lea
or
out
xchg
dec
into
and
xchg
push
into
int
dec
mov
sub
sar
push
adc
jp
(bad)
loop
push
cmp
jo
lock
aad
lea
ret
dec
int3
mov
ror
push
xor
mov
mov
retf
popa
cmps
xchg
add
xchg
and
pop
in
jae
xchg
fs
push
into
stos
jp
mov
pop
sahf
setbe
sub
in
mov
inc
mov
lods
pop
enter
repz
iret
and
adc
daa
add
fnstsw
pop
inc
js
lds
mov
mov
aas
mov
and
mov
(bad)
in
addr16
push
xchg
push
rcl
mov
pop
cmp
in
shl
fcmovnu
cmc
(bad)
fisttp
sbb
jbe
shl
pushf
test
int3
pop
add
add
push
xor
xor
jns
mov
mov
(bad)
mov
repnz
pop
int3
shl
xor
inc
fdiv
retf
stos
in
enter
imul
xlat
cmp
adc
lods
mov
sahf
adc
lahf
push
xor
cdq
rcr
leave
into
lahf
and
clc
scas
cld
in
loopne
cmp
xlat
push
jnp
je
mov
fistp
(bad)
dec
pop
mov
or
xor
jne
inc
rcr
loop
inc
pop
loopne
lods
or
push
xor
mov
mov
or
outs
xor
cmp
sub
cmp
mov
adc
dec
adc
dec
rcl
jnp
add
or
cmp
retf
fist
stos
adc
dec
xchg
pop
(bad)
into
test
in
cmp
sub
dec
mov
and
pop
or
(bad)
das
mov
mov
addr16
mov
jmp
mov
(bad)
(bad)
push
push
xchg
mov
push
xor
cwde
sar
adc
adc
inc
xchg
adc
xor
jmp
xchg
jb
fisttp
enter
adc
lock
pushf
adc
je
in
sbb
push
mov
pop
push
into
nop
mov
int
rcl
cld
jae
push
and
ret
dec
pop
sbb
gs
rcl
test
mov
mov
xchg
les
lock
pop
sub
sbb
pop
mov
add
loop
cdq
(bad)
mov
es
jle
xchg
out
sti
push
jae
rol
fdiv
xchg
jns
outs
dec
cmps
add
mov
mov
cmp
sub
dec
add
mov
jle
pop
mov
test
mov
pop
icebp
jle
cmp
or
push
inc
imul
icebp
mov
scas
mov
movs
push
mov
jg
in
ins
jle
out
dec
imul
aad
loope
nop
rcl
xchg
popf
cs
mov
fstp
dec
stos
lea
or
dec
dec
repz
and
sub
inc
jl
pop
xor
fwait
jmp
(bad)
fnsave
add
sub
push
mov
mov
cmp
test
daa
cli
mov
aam
and
jmp
push
seto
mov
sub
and
jg
xchg
nop
(bad)
xor
add
jecxz
bound
bswap
dec
xor
sbb
bswap
xor
dec
retf
popa
xor
stos
cmp
fld
repnz
iret
imul
adc
inc
pop
imul
ss
add
loope
inc
mov
inc
das
sbb
cmp
sbb
xor
dec
retf
enter
cmp
cmps
sub
mov
es
cmc
sbb
rcr
jmp
loopne
int
div
mov
out
xchg
(bad)
in
jns
push
cs
push
lahf
mov
in
inc
pusha
outs
add
mov
sub
test
cmps
lods
dec
and
pop
retf
movs
adc
nop
jl
sbb
scas
out
sti
jae
fcmovnu
les
jg
mov
add
cmp
lods
inc
add
fxch
or
das
pop
pop
inc
in
das
cmc
mov
pop
pushf
call
retf
jae
ficom
sub
push
mov
loopne
pop
cld
cmc
neg
dec
and
jg
inc
jmp
out
ds
std
add
mov
inc
lds
mov
loopne
xor
test
shl
das
ds
xor
add
mov
add
sbb
out
lods
frstor
bound
or
(bad)
cwde
test
out
dec
aas
jno
push
pushf
pop
int3
mov
repnz
jecxz
cmp
std
gs
push
jmp
push
call
push
pop
cmp
mov
jb
ja
add
sar
fs
mov
(bad)
addr16
mov
dec
inc
push
fwait
pushf
test
ins
xor
ins
xchg
pop
cmc
ret
cmp
jns
xor
mov
xchg
sahf
pop
sub
dec
js
and
mov
lds
pop
inc
mov
pop
scas
ja
les
fldenv
xor
jg
push
cmp
hlt
fcomi
jns
pop
std
jmp
adc
jo
mov
push
daa
jns
jmp
jecxz
and
cmps
bound
and
dec
dec
scas
je
jbe
push
xor
mov
stos
jle
push
add
xor
pop
or
add
sahf
pushf
(bad)
int
test
xlat
ror
xor
sbb
test
mov
(bad)
imul
sub
pop
jae
push
sub
dec
iret
mov
push
imul
lock
ficomp
pop
xor
adc
out
sbb
mov
cmc
pushf
hlt
popa
daa
cli
cld
rcl
and
mov
xchg
cmps
adc
and
mov
fwait
movs
sub
dec
repnz
cmps
sbb
xor
ds
mov
stos
cdq
mov
stos
jmp
hlt
jle
nop
inc
adc
add
sbb
fmul
and
ins
mov
cmp
int3
push
test
in
rcl
pop
inc
and
jmp
arpl
ficom
push
(bad)
xor
mov
aad
loope
popa
mov
mov
es
dec
jne
xor
ret
ret
mov
popf
ret
out
mov
xchg
lea
mov
mov
cdq
or
mov
jne
in
outs
mov
jno
dec
outs
mov
retf
in
inc
repnz
push
dec
lea
sbb
push
sbb
and
ds
and
pop
or
repz
addr16
add
retf
lock
aam
inc
dec
jg
sbb
loop
test
cwde
pop
jmp
pop
(bad)
inc
mov
mov
mov
pop
in
data16
imul
sbb
adc
fimul
push
outs
lock
lods
xchg
push
lahf
popa
(bad)
jo
cmp
aas
cmp
pusha
rcr
pop
and
mov
std
pop
aad
retf
pop
imul
jmp
adc
sti
xchg
pop
xchg
test
sbb
mov
es
fidiv
repz
movs
clc
movs
in
(bad)
ins
xor
cmps
jmp
popf
nop
mov
retf
and
cmc
call
inc
std
push
cld
pop
(bad)
mov
mov
hlt
xchg
outs
leave
sahf
fld
cmp
popa
mov
sub
add
inc
in
nop
add
retf
jne
loop
and
stc
jp
enter
pushf
movs
repnz
repz
int3
pop
or
scas
outs
cmp
xchg
cmp
push
add
xor
(bad)
ret
and
or
xlat
mov
push
enter
mov
inc
mov
movs
xor
pop
adc
aaa
sbb
int3
add
cmps
int3
jp
or
ret
hlt
in
or
jmp
scas
cmp
cmps
call
mov
adc
fs
hlt
nop
mov
(bad)
fwait
scas
ret
cld
mov
pusha
fidiv
lods
call
cmc
jmp
stos
push
in
mov
adc
pop
cmp
cmp
cdq
es
test
add
mov
clc
(bad)
dec
(bad)
aad
or
in
or
sub
sub
pop
imul
xchg
mov
cmp
dec
nop
lea
sub
inc
sub
sub
rol
in
dec
mov
inc
mov
icebp
mov
scas
ss
fstp
mov
lock
sbb
dec
aad
aaa
jp
jl
jg
lds
(bad)
inc
inc
ds
fimul
pop
dec
arpl
cdq
pop
push
bnd
xor
shr
icebp
test
inc
cmp
xchg
mov
cld
adc
in
cdq
jl
sbb
sti
xchg
rcr
(bad)
push
sub
pop
test
jmp
or
mov
mov
pop
push
add
out
retf
cld
inc
je
sbb
movs
out
jnp
(bad)
mov
mov
add
pop
imul
ins
mov
add
mov
jo
jg
add
ret
sub
sub
adc
jns
xor
xor
cmp
cmp
pushw
and
and
jp
(bad)
gs
imul
sahf
push
push
push
push
fist
idiv
nop
sub
cld
xor
gs
xlat
cdq
add
sub
mov
addr16
cmp
outs
sub
in
leave
out
test
or
sbb
retf
(bad)
lahf
out
(bad)
push
jl
mov
(bad)
sub
add
adc
js
test
outs
neg
push
into
inc
mov
push
add
ss
js
ret
mov
or
movs
and
jnp
push
pop
sbb
or
jns
retf
frstor
aad
xor
dec
or
push
repz
ds
cmp
dec
inc
(bad)
mov
add
(bad)
je
aam
fwait
in
call
(bad)
adc
add
adc
mov
sbb
std
xchg
ins
stc
jmp
stos
in
mov
in
iret
ror
retf
mov
cmp
ins
lahf
mov
jne
mov
mov
push
xor
iret
jns
xor
xor
es
jg
and
pop
push
sbb
push
repnz
xchg
xchg
adc
fnstenv
pushf
enter
in
cdq
adc
xor
mov
jno
xor
ss
mov
fnsave
sub
fbstp
test
jle
jg
fmul
int3
ins
push
sbb
xor
pop
call
stos
fdiv
dec
adc
push
add
(bad)
test
pop
xchg
loope
mov
cmp
adc
mov
xor
in
inc
retf
das
rol
mov
mov
mov
ror
test
mov
cmp
cdq
sub
pop
pop
push
sbb
es
push
xlat
ret
cmp
dec
sub
mov
dec
dec
test
cmp
and
mov
jns
shl
ret
(bad)
fs
movs
(bad)
and
add
into
cmp
or
fldenv
and
push
ins
pop
(bad)
or
push
lea
push
xor
sar
jle
ins
popf
loopne
and
lea
in
repz
(bad)
in
push
lock
pop
sbb
pop
mov
mov
mov
mov
add
mov
aad
mov
sub
je
mov
mov
and
cmp
inc
sub
imul
lahf
cs
push
(bad)
jne
and
mov
data16
fsub
outs
cli
sbb
cmp
xchg
jmp
pop
out
mov
push
enter
push
ds
aaa
enter
add
fiadd
and
sbb
add
lods
cmps
dec
cmp
dec
test
mov
dec
add
push
(bad)
stc
inc
mov
ret
mov
xor
or
cmp
out
sub
inc
shr
rol
jmp
mov
lods
sbb
push
movs
push
mov
mov
pop
mov
movs
retf
mov
call
ins
lods
call
adc
dec
fsubr
ins
(bad)
out
mov
stos
fist
mov
mov
push
sub
pushf
fcom
dec
jbe
mov
adc
dec
pop
dec
icebp
popf
popf
je
das
retw
les
dec
sbb
or
push
dec
mov
(bad)
adc
cld
add
push
xchg
ficom
jo
nop
and
pop
xchg
push
pop
ja
jecxz
mov
sahf
stos
bound
mov
mov
fmul
mov
lea
cmc
data16
in
push
pop
call
dec
sub
out
(bad)
imul
int
or
rcr
xchg
adc
xor
sub
dec
data16
lock
dec
out
inc
pop
les
adc
les
push
cli
loop
fs
sbb
(bad)
and
pop
popf
add
or
add
into
and
cmp
inc
(bad)
push
push
arpl
dec
into
cmps
pusha
mov
jmp
out
mov
mov
add
loope
adc
in
out
stos
loop
int
mov
in
jne
or
add
jne
jmp
xchg
pop
adc
repz
lahf
dec
fisttp
and
cmp
clc
pop
pushf
test
mov
neg
in
cmp
repz
arpl
nop
call
mov
xor
mov
retf
dec
xor
fcom
sub
jge
ret
jmp
or
data16
push
sbb
frstor
iret
jle
js
ds
(bad)
mov
inc
retf
test
xor
mov
add
xchg
ins
xchg
ins
or
mov
adc
lods
shl
or
adc
dec
adc
mov
mov
outs
adc
call
enter
mov
in
in
and
outs
daa
pop
add
imul
shl
sub
cmp
jecxz
ds
in
and
loopne
or
or
ficomp
jns
mov
imul
ror
out
xor
bound
inc
icebp
mov
pushf
xchg
lods
mov
adc
adc
inc
push
ds
iret
adc
sahf
push
and
repnz
fld
mov
xchg
mov
push
popf
ins
das
xor
dec
inc
add
xor
ss
adc
stc
xchg
push
aam
imul
(bad)
dec
mov
sub
cli
sub
sbb
xor
sub
mov
and
jbe
cwde
(bad)
xor
iret
push
int3
sbb
cmp
in
ds
sahf
loop
push
stos
je
or
icebp
cli
imul
dec
pushw
pop
jbe
mov
push
add
rol
ja
pop
pop
pop
fs
sbb
lods
pop
adc
idiv
stos
mov
mov
cmp
adc
xchg
jmpw
lock
pop
jmp
push
add
or
cdq
add
(bad)
inc
retf
leave
sbb
js
imul
cmp
xchg
push
push
mov
sub
jbe
bound
pusha
and
add
sub
cdq
lods
nop
xlat
mov
mov
sub
hlt
adc
mov
mov
scas
mov
cli
mov
jns
out
mov
dec
mov
and
lea
mov
rcl
jg
std
test
adc
push
inc
jmp
jle
loope
inc
icebp
xor
sub
jb
xchg
sub
imul
push
mov
(bad)
cs
xchg
shl
fisubr
jmp
je
in
and
pop
push
out
es
loope
push
jp
sub
or
jbe
(bad)
gs
jns
movs
imul
sahf
in
clc
mov
inc
add
dec
jo
das
pop
xor
movs
mov
push
movs
mov
das
(bad)
into
or
cmp
into
int3
lods
je
ret
test
(bad)
sbb
mov
in
hlt
movs
push
pop
ret
adc
repz
push
pop
adc
mov
inc
les
sar
call
mov
inc
in
pop
or
mov
mov
pop
sub
ret
push
adc
push
mov
(bad)
ins
sub
into
addr16
fwait
lds
mov
mov
pop
sbb
jb
mov
jge
sbb
inc
scas
nop
xor
addr16
push
mov
arpl
enter
xor
dec
or
add
push
dec
sub
fsubr
mov
pop
lds
pushf
or
mov
aam
aad
sub
push
push
pop
lods
and
je
add
sbb
test
and
xlat
jmp
adc
pop
jo
test
pushf
jbe
out
stc
adc
pop
pop
ds
or
pop
sbb
into
cmp
mov
pop
cwde
push
xor
mov
cwde
mov
mov
pop
add
out
pop
cmp
inc
add
cmp
ret
fdiv
test
adc
movs
mov
int
ret
test
fadd
push
fbld
into
cmp
sub
add
das
or
(bad)
pop
aaa
movs
push
fwait
retf
stc
test
cmp
sbb
xchg
mov
cmps
es
push
push
mov
stos
push
sahf
inc
mov
cli
xor
fdivrp
adc
test
mov
bound
sub
(bad)
fisttp
or
scas
and
xor
jmp
adc
xlat
add
shr
mov
aaa
ja
inc
js
and
repz
ret
test
push
(bad)
push
stos
sub
push
push
movs
test
les
pop
neg
mov
in
mov
xor
(bad)
inc
mov
dec
imul
int3
inc
fdiv
fdiv
dec
mov
add
inc
loope
mov
aaa
(bad)
xor
sub
cmp
xor
push
icebp
cmps
push
jnp
jecxz
cmps
jmp
imul
cs
dec
push
fild
retf
call
fsubr
add
or
and
add
cmc
mov
xchg
add
shr
cmps
xor
and
add
xor
adc
lar
(bad)
scas
repz
out
or
mov
or
push
test
fcmovnb
aaa
fwait
(bad)
leave
adc
lock
pop
sbb
pop
mov
jp
inc
push
retf
pop
jp
xor
imul
pop
pop
sahf
dec
sbb
lea
cmp
pop
jecxz
cmp
pop
jb
xchg
push
pop
push
imul
imul
mov
pop
xchg
sbb
mov
cwde
cmp
sub
or
or
sub
and
sti
mov
arpl
add
sub
adc
push
sbb
bound
xor
or
mov
lahf
call
je
dec
iret
pop
or
xor
out
sahf
jg
lds
and
or
retf
fisttp
fs
mov
xchg
mov
xor
cld
dec
imul
(bad)
sti
scas
in
aas
popa
imul
and
mov
or
pusha
dec
xchg
cld
or
dec
cs
cdq
and
add
cmp
enter
mov
scas
cmp
aad
and
lea
mov
sti
retf
mov
inc
sbb
sbb
stc
cmp
les
je
mov
in
mov
cmps
xchg
imul
inc
xor
push
mov
shl
loopne
or
inc
js
sbb
or
neg
out
loopne
fimul
pusha
movs
push
dec
xor
js
cli
mov
push
div
mov
inc
and
and
mov
lods
loope
neg
lahf
cdq
pop
fs
leave
jns
fcomp
test
outs
or
adc
jno
lods
dec
test
push
jge
mov
(bad)
(bad)
jmp
mov
pop
inc
lea
movs
mov
sbb
retf
retf
add
dec
rcl
hlt
retf
ins
fnsave
aaa
pop
movs
lahf
jg
sbb
repnz
loop
(bad)
out
imul
data16
xor
xor
popa
ret
ret
call
jo
shl
mov
fiadd
add
sbb
mov
(bad)
shr
cmp
fst
arpl
pop
fdiv
jg
mov
shr
push
mov
aaa
fdivr
mov
les
bound
stc
dec
repz
sub
cmc
push
inc
fnstsw
cmp
or
add
push
pop
jno
imul
out
icebp
mov
aas
test
dec
loop
xor
cmp
ss
cmp
sbb
das
clc
add
push
popf
sub
cwde
pop
xchg
mov
adc
sbb
fidivr
xchg
adc
xchg
pushf
std
mov
xchg
je
retf
and
aam
push
mov
or
daa
test
push
into
enter
cdq
mov
out
in
inc
leave
jae
push
inc
jecxz
sahf
adc
push
push
outs
js
jle
or
xor
jo
dec
stos
or
iret
xchg
shl
adc
je
mov
mov
jae
adc
int
adc
daa
mov
xor
arpl
add
cmps
jmp
xchg
or
and
movs
mov
pushf
dec
stc
mov
aad
mov
out
std
in
and
je
sub
jne
rcr
je
pop
ds
mov
or
or
inc
mov
in
jns
xchg
or
sahf
mov
ds
call
fst
adc
sbb
xor
and
movs
add
repz
sar
fadd
or
dec
inc
test
push
aas
mov
cmp
imul
out
push
mov
cmp
sub
xchg
outs
pop
mulps
inc
or
sbb
enter
sti
cmp
(bad)
fiadd
add
aam
jecxz
aam
or
aad
dec
mov
sbb
and
xchg
mov
sbb
ins
pop
pop
arpl
dec
push
mov
sbb
cmp
pushf
retf
xlat
gs
push
sub
push
mov
push
ret
cmp
(bad)
cmp
or
test
es
add
icebp
sbb
cmp
fistp
(bad)
or
in
cmp
mov
mov
cmp
jge
(bad)
out
mov
jae
movs
pop
sbb
outs
clc
cld
cmp
add
jnp
call
(bad)
xor
dec
pop
stc
xchg
xor
lock
cmp
test
sub
inc
xlat
or
and
int3
mov
cmps
xor
ins
cld
sbb
mov
and
push
or
loope
dec
pop
mov
mov
mov
jb
and
sub
sbb
es
mov
push
imul
leave
int3
(bad)
or
jb
ret
outs
cmp
lods
(bad)
jbe
cwde
popf
inc
(bad)
imul
and
mov
int3
pop
aaa
jmp
sahf
or
in
ja
push
call
test
icebp
out
xchg
mov
ds
aam
adc
scas
adc
loopne
dec
cmp
mov
adc
in
std
cmps
aaa
mov
imul
(bad)
jns
pushf
test
imul
sub
add
call
mov
mov
out
outs
fxch
sub
push
shl
mov
test
loop
push
inc
call
in
pop
mov
mov
dec
mov
push
es
fild
adc
cs
and
push
test
cli
sahf
and
in
pop
ins
cmp
bound
xor
pop
jae
pop
push
mov
xchg
loopne
inc
ja
imul
test
or
mov
jb
test
ds
pop
sbb
dec
test
jne
test
movs
fwait
pop
test
fstp
add
jns
jnp
dec
inc
hlt
(bad)
cmp
xor
adc
out
icebp
scas
pop
loop
clc
sub
(bad)
out
loop
lea
or
jmp
inc
pop
inc
fdiv
enter
ret
pushf
add
xor
out
sahf
dec
mov
pop
xchg
mov
lahf
inc
dec
in
jns
adc
inc
dec
push
rcl
add
jbe
lock
pop
mov
das
pusha
daa
mov
sbb
push
inc
sub
aaa
adc
mov
mov
dec
xor
dec
dec
nop
loope
push
pop
sbb
and
push
dec
or
pop
ret
push
loope
into
jmp
addr16
lods
sbb
cwde
jnp
loopne
adc
sbb
int3
push
test
(bad)
imul
cmp
and
adc
push
jne
out
and
js
mov
lds
rol
out
inc
mov
dec
cmps
xlat
push
in
dec
pop
stos
dec
adc
fs
pop
mov
fnstsw
add
jne
mov
dec
pop
inc
add
sbb
(bad)
jmp
int3
dec
shr
jge
mov
mov
push
scas
aas
fisttp
and
xchg
addr16
mov
mov
add
xor
dec
stc
or
push
jmp
ins
push
adc
and
xor
and
daa
inc
xchg
add
add
xchg
jnp
jne
push
cmp
lea
sti
lods
or
push
(bad)
lahf
inc
mov
and
cmp
aam
out
lahf
add
xor
arpl
bswap
test
adc
(bad)
xchg
pop
std
xchg
repnz
pop
mov
call
sub
jl
xchg
in
or
jle
gs
push
(bad)
(bad)
push
sbb
(bad)
inc
in
das
mov
lods
and
je
mov
cmp
aad
je
or
ret
adc
jecxz
inc
xor
rol
fld
movs
cdq
repnz
mov
sbb
mov
jmp
sbb
mov
and
pop
dec
sub
shl
in
enter
pop
das
scas
icebp
out
lock
push
add
loopne
cmps
shl
cmp
and
dec
lods
xchg
imul
mov
loop
test
add
mov
or
push
push
out
mov
aaa
mov
mov
stos
mov
jl
fucomi
mov
push
and
inc
cmp
mov
dec
movs
cmp
mov
lea
mov
js
popa
adc
ror
mov
fild
aad
sub
mov
jmp
push
jle
call
sahf
aad
mov
jge
(bad)
stc
jo
pop
dec
sbb
xchg
mov
and
test
inc
rcr
es
fadd
int3
and
add
js
sbb
stos
sbb
push
push
outs
mov
sub
cdq
add
imul
leave
cmps
and
jg
sbb
arpl
add
dec
cmp
mov
fnstsw
jp
outs
inc
jno
lods
sub
addr16
add
mov
scas
jp
mov
sbb
(bad)
pusha
arpl
(bad)
fdiv
add
data16
or
push
dec
lock
sbb
pop
mov
(bad)
aas
sbb
rcl
xchg
fs
icebp
dec
dec
adc
xor
pop
rcl
sub
sub
sahf
mov
aas
pop
leave
jnp
sbb
stos
mov
fsub
call
mov
add
loope
leave
pop
test
xlat
jl
xor
add
sti
aad
sbb
push
adc
add
adc
(bad)
dec
or
mov
cs
clc
mov
xchg
aad
out
cmp
mov
push
mov
iret
sar
lahf
inc
jne
mov
add
(bad)
and
push
in
ins
fs
shl
dec
mov
dec
lods
aaa
adc
dec
aas
jp
jge
pop
cmc
dec
sbb
rep
adc
lds
(bad)
dec
inc
push
dec
jns
ficom
outs
sub
out
xor
jmp
xlat
sbb
adc
dec
cmps
ja
retf
pop
jge
bound
ins
inc
sbb
jnp
pop
leave
(bad)
fld
ja
mov
xor
sahf
dec
popa
gs
out
cdq
pop
imul
je
pop
and
hlt
(bad)
sar
aad
cli
jmp
and
dec
sbb
push
jg
fs
mov
inc
xchg
mov
loop
inc
div
stc
xor
(bad)
neg
cmp
stos
idiv
push
fstp
cmp
leave
(bad)
std
jmp
sbb
sbb
ins
jno
dec
cmp
adc
mov
push
sub
mov
gs
push
mov
test
pop
push
nop
dec
cmp
data16
pop
xor
cmp
cmp
xchg
cdq
adc
jmp
mov
mov
int3
nop
jge
and
call
cmps
fsub
jle
neg
jge
test
pop
loop
jo
mov
jno
adc
pop
push
retf
cld
jp
mov
inc
inc
or
mov
add
sbb
cmp
lods
and
jbe
pop
dec
sbb
inc
in
sbb
sbb
rcl
dec
sub
call
repz
cmp
dec
cli
pop
inc
jne
add
ins
mov
sub
ror
xor
aas
jmp
xor
push
cld
out
pop
ss
dec
xor
adc
xchg
call
popa
inc
mov
dec
js
adc
lahf
aam
and
daa
xor
cli
mov
cmps
cld
push
mov
dec
fdiv
ins
xchg
int3
or
adc
cmps
mov
mul
push
ja
stos
cmp
xchg
inc
sub
cmc
popf
dec
(bad)
ins
ins
int
stos
sbb
lods
bound
sub
sbb
pop
icebp
in
call
and
inc
cmp
icebp
pusha
and
lds
inc
push
or
dec
dec
out
(bad)
enter
clc
je
icebp
mov
or
ret
sbb
xor
inc
lock
sbb
jnp
fistp
fcomp
cdq
hlt
mov
jb
data16
add
pushw
cld
mov
rcl
aas
sar
xchg
imul
push
test
sub
dec
imul
sbb
jnp
and
jge
jne
push
mov
jns
fcom
cli
pop
repnz
push
lds
pop
loop
mov
mov
xchg
fs
ret
imul
jbe
fisubr
mov
movs
test
sub
inc
jge
adc
shl
mov
xor
mov
in
dec
inc
xchg
mov
xor
jmp
dec
dec
cmp
ss
(bad)
mov
rcr
pop
cmps
mov
jg
clc
or
lahf
jo
stos
cld
ds
enter
mov
fsubr
jg
inc
mov
aam
mov
div
cmp
je
fsub
lock
and
sahf
inc
dec
sbb
xor
xlat
cmps
and
loopne
out
imul
ret
mov
stos
push
pop
mov
pop
iret
add
aam
call
xor
mov
inc
push
sbb
repz
stos
mov
lods
push
pop
mov
and
(bad)
xchg
fdivr
test
(bad)
stos
add
sbb
pop
sbb
aam
xchg
lods
pop
pop
outs
stos
mov
push
add
lock
mov
shr
mov
pop
addr16
(bad)
aaa
mov
cmps
dec
imul
jbe
mov
test
das
xchg
sbb
mov
enter
mov
hlt
dec
rcl
jb
aam
mov
adc
movs
shr
leave
cvtdq2ps
jne
push
jge
inc
ret
pop
and
inc
push
cs
push
int3
ret
hlt
jbe
inc
movs
dec
ins
(bad)
imul
xchg
mov
clc
or
(bad)
rcr
ja
call
push
not
sub
(bad)
in
or
mov
and
push
jle
in
in
enter
jmp
jl
clc
stos
sub
sahf
sbb
and
fst
dec
repnz
je
test
hlt
adc
pop
dec
sbb
push
loop
cmp
out
inc
int3
and
adc
jmp
in
inc
rcl
clc
pusha
int3
loopne
lahf
adc
(bad)
jne
leave
sbb
dec
add
jp
lods
mov
test
loopne
sub
clc
push
push
(bad)
adc
ret
push
xchg
pop
jp
pop
cmp
(bad)
cld
or
fbstp
or
sahf
icebp
xchg
jmp
mov
div
pop
pop
loopne
ss
fwait
iret
ffree
mov
shr
adc
lds
mov
pop
pop
pop
push
cmp
test
jmp
ficomp
mov
mov
ficom
adc
xlat
mov
sar
ins
fist
rcl
outs
das
sti
xchg
jo
shl
xor
leave
dec
loope
mov
cmps
jbe
repz
clc
add
repnz
xor
add
je
add
cdq
cmp
(bad)
cli
inc
push
xchg
in
mul
adc
mov
pop
cdq
jmp
std
ficomp
fadd
mov
dec
retf
or
xchg
xor
sar
std
cmp
mov
fiadd
push
popf
imul
pushf
cmps
data16
add
fiadd
sti
aad
push
or
nop
sar
adc
push
adc
fld
pop
push
clc
and
scas
sar
mov
out
add
rcl
mov
jo
scas
and
xchg
mov
aam
sbb
cli
mov
jmp
mov
stos
mov
adc
inc
ret
into
push
xchg
jmp
(bad)
inc
jns
or
pop
xor
aam
je
imul
sar
lods
dec
sbb
shl
mov
sub
push
dec
shr
inc
(bad)
cmp
mov
xor
xchg
lods
add
cmps
dec
sti
popa
pop
loope
lock
sbb
and
repnz
push
fadd
inc
jns
inc
(bad)
pushf
mov
or
pop
sub
fisub
scas
sti
fild
inc
and
adc
sbb
mov
inc
jne
push
xchg
mov
jmp
rol
(bad)
retf
push
xor
icebp
mov
(bad)
jnp
ficom
or
push
mov
das
stos
ror
push
dec
mov
adc
pop
repnz
lds
in
mov
das
sub
adc
ins
dec
mov
add
imul
ins
stc
ins
aaa
mov
push
add
push
jl
jns
pusha
int
cs
push
jne
clc
or
out
mov
sbb
jne
xor
mov
in
ss
mov
idiv
push
fcmovu
imul
repnz
jne
and
jp
outs
push
xchg
sbb
loope
push
fnstenv
cmp
(bad)
jmp
adc
in
sub
ds
jmp
shr
cmc
push
outs
test
jbe
xchg
enter
mov
sbb
or
movs
adc
push
xlat
mov
cmps
cmps
mov
cmps
(bad)
adc
in
push
or
into
sbb
xor
inc
jecxz
pushf
icebp
cmp
mov
mov
add
in
mov
xor
daa
dec
push
(bad)
inc
add
xchg
xchg
and
in
push
cmp
retf
dec
aas
pop
jno
stos
fmul
jo
pop
(bad)
fisttp
bound
dec
xchg
adc
loop
push
inc
ins
lahf
cmp
xor
xchg
popf
dec
repnz
test
cmp
lods
push
fimul
push
aaa
aad
mov
xor
dec
and
call
push
dec
lahf
stos
adc
sbb
retf
stc
dec
fcomp
sti
xchg
push
or
jecxz
jge
mov
sub
mov
mov
scas
ds
sub
cmc
loopne
lea
out
xor
cmp
ds
not
aas
xchg
and
(bad)
cli
jecxz
jge
aaa
das
js
(bad)
rcl
xor
push
(bad)
mov
mov
xlat
aas
add
sbb
int
test
ficomp
inc
push
pop
imul
leave
sbb
sbb
mov
aam
push
xlat
jle
pop
in
mov
jp
inc
call
inc
bound
or
cmp
lods
cmc
xor
dec
sbb
loop
cs
jl
mov
fcomi
vmovapd
jb
js
cmc
add
(bad)
xor
in
stc
int3
movs
add
jecxz
ins
cli
xchg
loop
hlt
or
jmp
pop
xor
jo
push
repz
add
or
pop
ins
sub
jb
pop
jne
das
mov
std
imul
xor
loopne
push
aaa
push
xchg
pop
mov
test
pcmpeqd
pushf
jle
sbb
retf
stos
add
push
push
cmp
sub
js
push
mov
xchg
(bad)
movs
mov
mov
xor
int3
adc
ret
and
pop
(bad)
(bad)
daa
imul
pop
(bad)
rcl
mov
fs
sub
dec
shl
pop
jl
les
xor
not
stos
(bad)
or
mov
(bad)
stc
or
sbb
cdq
(bad)
popa
pop
add
out
shl
loope
bound
sbb
mov
imul
hlt
mov
add
mov
xchg
into
sbb
add
or
stc
in
je
sbb
ds
(bad)
ficom
xchg
xor
addr16
ret
into
hlt
push
(bad)
inc
(bad)
xchg
sub
test
loopne
add
xlat
mov
or
(bad)
xchg
jbe
ds
clc
out
movs
cmps
call
xchg
sub
mov
mov
cmp
stos
and
jle
push
sbb
nop
(bad)
loopne
fwait
mov
and
mov
div
cmps
(bad)
lods
sbb
aad
ins
dec
icebp
cmp
cmp
inc
push
cs
add
lock
ror
out
scas
into
pop
mov
mov
out
cld
hlt
gs
jns
in
sbb
xchg
inc
ins
xchg
gs
out
inc
into
jne
shr
pop
sub
adc
dec
out
jne
adc
jg
inc
jmp
and
movs
xor
jle
xchg
pop
loop
fs
lea
dec
or
jecxz
out
xchg
in
shl
fwait
ja
xor
fidivr
sti
cmps
jns
mov
push
ret
jne
imul
jns
pop
mov
icebp
lock
fiadd
mov
push
cmp
lock
ret
mov
std
sub
inc
cmp
stos
popa
jbe
mov
adc
push
push
movs
enter
jmp
inc
das
or
hlt
mov
imul
jge
cmps
jl
call
and
arpl
sbb
jge
xchg
popf
fwait
ror
aam
jae
inc
jo
mov
stos
out
sbb
enter
scas
mov
mov
test
pop
or
repnz
fwait
stos
popf
ror
out
push
mov
retf
ror
xchg
jmp
xchg
int
pop
xchg
stos
push
add
push
mov
call
mov
ja
cld
std
sub
sbb
adc
pusha
aas
adc
lock
(bad)
gs
mov
aaa
lock
dec
jnp
les
pop
pop
cmp
(bad)
sbb
out
dec
xchg
inc
ror
push
aas
mov
shr
ret
lahf
fbld
sbb
mov
cmc
jmp
mov
sbb
sub
and
cmps
mov
pop
test
sub
cmps
pop
xor
cs
mov
pop
pop
and
ins
mov
push
add
jl
sti
ins
lahf
jo
test
jmp
jns
iret
add
cmps
xor
jae
nop
cs
sbb
inc
push
add
sbb
je
pop
inc
int3
ror
fwait
cwde
scas
cli
out
mov
mov
rol
xchg
or
fs
jle
fcmovnb
add
fld
xchg
test
int
es
test
out
and
and
xchg
mov
test
les
aam
stos
jno
enter
xor
test
ins
repnz
pop
in
ja
jge
arpl
movs
leave
inc
push
push
rol
cmp
push
fst
mov
int
sbb
sub
xchg
rcl
jge
push
enter
int
jbe
inc
sbb
dec
mov
mov
adc
jmp
lea
ss
call
push
push
or
dec
test
repz
fadd
adc
retf
cmp
test
mov
sub
mov
push
xchg
movs
mov
sub
movs
push
(bad)
es
push
mov
xchg
movs
and
xor
scas
fnstenv
add
icebp
fdiv
cmc
push
out
dec
mov
call
into
enter
push
mov
push
aas
ret
enter
jo
mov
mov
movs
add
int
push
ss
loope
adc
lds
(bad)
jmp
adc
pop
cmp
fsubp
adc
mov
xchg
mov
jne
js
out
xchg
iret
sbb
xchg
inc
cmp
and
sti
and
in
pop
mov
sub
(bad)
(bad)
out
cli
jl
or
or
scas
clc
jbe
adc
xchg
dec
adc
pop
jne
xchg
xchg
push
cmp
push
pop
adc
pop
jecxz
ja
cwde
cmp
adc
aam
xchg
cmc
mov
out
mov
jmp
dec
push
xor
iret
mov
jne
retf
retf
mov
imul
and
pop
call
stc
xor
shl
in
mov
sub
cmps
imul
jge
and
pop
xchg
(bad)
pop
and
dec
push
ret
popa
aaa
outs
jge
sub
jae
xor
sbb
je
mov
mov
xor
cmp
adc
mov
mov
(bad)
shl
es
mov
pusha
fs
pushf
jbe
leave
sbb
jne
adc
cmps
lods
lods
fisttp
shr
cmp
dec
add
pusha
cmps
adc
dec
pop
ds
jbe
shr
enter
test
xchg
lea
out
mov
push
neg
xchg
sar
cmps
pop
pusha
adc
inc
shl
dec
ret
pop
pop
adc
dec
pusha
repz
outs
ins
addr16
shr
or
lock
mov
lods
repz
xor
cs
jp
(bad)
and
clc
mov
push
mov
sbb
(bad)
cld
and
shl
mov
add
idiv
pop
ja
repz
icebp
fcom
cmp
lods
outs
push
cmp
mov
test
mov
test
lds
sbb
(bad)
ja
out
jo
cld
rcpps
jno
cld
iret
dec
mov
loopne
clc
or
xlat
imul
add
aaa
jo
stos
sub
int
add
div
leave
and
je
lock
das
xchg
mov
sub
lods
jno
arpl
add
jne
mov
mov
in
stc
sub
leave
xchg
ret
es
les
fsub
mov
mov
stos
cmp
ud1
dec
movs
gs
aas
ror
cmp
xchg
jns
and
push
mov
and
cmp
mov
adc
fwait
adc
fmul
or
es
mov
dec
adc
xchg
test
(bad)
and
sahf
ror
fdivr
xchg
jp
mov
or
push
repz
cld
ret
inc
inc
mov
jmp
fnsave
push
or
jge
mov
mov
sbb
and
lods
adc
xchg
inc
icebp
fsubp
or
push
sub
shl
dec
jmp
adc
call
jbe
(bad)
stos
push
and
stos
ret
mov
outs
adc
xchg
test
popf
arpl
cmp
not
inc
xor
or
repz
dec
adc
leave
imul
arpl
test
fcmovnb
xor
dec
cld
mov
movs
(bad)
xlat
test
sbb
mov
mov
add
inc
adc
sbb
in
daa
fstp
cs
mov
or
push
cmp
pushf
mov
leave
outs
stc
adc
fdivr
pop
stos
xchg
inc
ja
add
cmps
cmp
lahf
mov
mov
sahf
and
or
fsub
inc
sub
jmp
mov
out
and
xchg
pushf
cmp
jp
in
jnp
iret
nop
adc
pop
jmp
nop
fistp
mov
cwde
mov
mov
aas
cmp
mov
pop
jae
cmps
inc
dec
inc
inc
sbb
cmc
lahf
bound
xlat
push
sub
int
pusha
aam
ret
jmp
ja
sbb
fcom
xchg
jae
pop
add
idiv
iret
sbb
call
inc
retf
mov
jmp
push
clc
adc
les
cmp
shl
push
sbb
ds
pop
push
mov
or
xor
and
nop
xor
stc
rcl
stos
sbb
pop
xchg
sub
popf
(bad)
mov
cmp
adc
rcr
(bad)
cwde
mov
xlat
pop
ret
std
sbb
push
xor
or
mov
ror
jno
xor
sar
xchg
out
or
pop
pushf
inc
dec
fisub
cmp
fld
pop
nop
(bad)
popa
mov
imul
lods
fistp
(bad)
aaa
jo
iret
repz
jo
call
test
cmps
cwde
xchg
test
das
les
pop
mov
push
shl
cmp
cwde
mov
push
mov
xchg
adc
and
in
data16
xchg
sub
dec
push
sbb
jmp
neg
sub
fdivr
clc
sbb
add
mov
test
cmc
or
repnz
fcos
sbb
and
repz
(bad)
sbb
sub
cs
ror
rol
mov
jle
and
int
aad
int3
lods
nop
and
mov
mov
mov
sbb
dec
xlat
cmp
test
idiv
ficom
mov
fisttp
lods
cmp
pop
add
jae
jg
push
push
sbb
cmp
mov
pop
jns
jno
test
mov
outs
jmp
mov
popf
cmp
xor
outs
mov
adc
jne
aas
jo
xor
add
mov
xchg
jecxz
mov
cdq
adc
and
out
sub
enter
cmp
retf
in
out
inc
iret
adc
retf
out
adc
sub
icebp
cmc
fmul
xchg
mov
sub
std
fucom
cmps
and
popf
push
pop
clc
or
or
sbb
test
das
jo
jne
dec
psubsb
jns
out
xor
pusha
mov
jnp
mov
push
and
nop
add
pop
aaa
or
call
in
push
test
in
pop
ja
inc
out
mov
(bad)
cmc
mov
xchg
arpl
ret
ja
sbb
data16
mov
xchg
or
(bad)
sbb
je
or
xor
lods
addr16
sar
retf
cmc
inc
jnp
cli
jae
mov
lods
and
add
push
mov
daa
or
xchg
cld
bound
mov
pop
push
push
in
shr
xor
cmp
add
adc
cmp
push
fmul
js
push
bound
aas
and
adc
ds
adc
sbb
xchg
lods
push
jle
inc
arpl
iret
scas
cmps
and
int
test
sbb
outs
xor
add
loop
scas
movs
daa
xchg
add
fld
lods
xadd
xor
call
xchg
dec
pop
jecxz
out
jae
in
mov
sbb
sbb
adc
in
xchg
or
lea
sar
mov
mov
adc
xchg
jecxz
mov
cmp
and
into
shr
jne
xchg
shl
lea
gs
inc
scas
xchg
xchg
imul
mov
sbb
test
cmp
mov
inc
mov
cwde
fsubr
ds
loope
pop
cmps
adc
mov
mov
or
and
push
and
mov
jns
pop
and
add
mov
loopne
dec
pop
sahf
mov
sbb
or
dec
pop
xor
out
arpl
dec
dec
adc
sbb
shr
ret
xor
jmp
xchg
daa
cmp
retf
int
cmp
xor
xchg
sbb
push
ror
repz
loope
xchg
mov
push
call
lock
dec
push
out
test
movs
scas
xchg
addr16
sub
in
shl
pop
(bad)
in
aam
add
push
xor
or
call
sub
fcmove
or
adc
int3
ja
pop
in
sub
neg
mov
xchg
arpl
scas
dec
add
daa
add
cmp
loop
pop
push
(bad)
sub
mov
arpl
jns
test
mov
or
jno
sub
adc
add
scas
out
jbe
jb
lock
sbb
push
gs
inc
ja
or
sbb
and
push
inc
inc
sub
jo
call
xchg
into
adc
inc
js
or
jbe
(bad)
push
mov
hlt
or
pop
and
fadd
dec
cmp
int3
mov
retf
rcl
mov
cwde
das
jne
dec
je
cwde
and
jmp
sti
cmp
pop
and
test
outs
aam
add
pop
mov
pop
call
pop
arpl
arpl
and
pop
fstp
shr
sbb
popa
ja
cmp
(bad)
mov
add
cs
inc
push
sbb
fwait
add
int
call
fistp
jo
ds
retf
mov
push
pop
loop
imul
shl
sub
xchg
mov
cmp
test
push
sub
mov
in
jo
lea
push
inc
fld
and
lods
ds
fwait
xor
dec
mov
sbb
pusha
adc
xlat
and
push
lods
and
sub
mov
adc
mov
hlt
adc
call
mov
adc
mul
popa
jo
call
ds
int3
scas
xlat
rol
adc
(bad)
fsubr
jae
inc
mov
fwait
mov
fistp
jp
call
push
cs
jle
ds
retf
push
pop
js
mov
pop
sub
jg
arpl
jbe
leave
xlat
test
mov
ss
jmp
and
xchg
loope
cdq
ja
int3
stc
xchg
pop
or
xchg
xchg
fwait
adc
hlt
fdivr
bound
pop
adc
xor
fucom
shl
mov
mov
mov
mov
rcr
inc
sbb
push
cmp
test
loop
add
jecxz
xchg
jle
adc
or
mov
xchg
mov
jmp
or
ins
sti
daa
push
repz
jae
fisttp
aad
scas
jb
sub
call
cs
push
push
cli
pop
(bad)
xchg
push
fimul
xor
mov
loop
and
arpl
mov
mov
mov
mov
mov
loope
outs
xrstors
outs
mov
sub
push
mov
into
jg
xor
(bad)
and
sbb
dec
mov
es
pop
mov
retf
sar
scas
adc
outs
and
adc
or
stc
mov
or
pop
push
je
push
in
ins
push
mov
retf
adc
dec
(bad)
sbb
stos
xchg
aas
icebp
pop
inc
aad
mov
loopne
(bad)
iret
outs
jmp
jg
mov
mul
pop
xchg
sub
clc
lods
cmps
and
daa
xlat
cli
mov
mov
mov
and
mov
(bad)
dec
outs
or
mov
mov
mov
repz
cmc
mov
ret
pop
ss
pop
cs
inc
adc
aam
add
or
sbb
movs
or
xor
movs
es
inc
shl
in
push
into
xchg
mov
in
adc
xchg
aas
iret
sbb
sbb
test
fimul
pop
cli
aam
outs
inc
aaa
pop
xchg
dec
retf
loop
fbld
pop
xor
sub
xor
dec
sub
push
cmp
add
pop
mov
adc
add
pop
and
cmp
outs
stos
ret
int
jno
movs
sub
xor
push
mov
inc
leave
sub
jno
inc
adc
xchg
shr
xor
outs
fmul
add
leave
or
mov
adc
sti
je
out
sbb
mov
or
add
cs
mov
loop
sbb
nop
mov
jmp
std
out
fdiv
retf
add
jnp
outs
sbb
aad
jbe
mov
jmp
jbe
ins
test
inc
add
repz
xor
xchg
scas
jecxz
jg
(bad)
clc
das
jecxz
push
xor
leave
add
js
dec
rol
jge
add
inc
dec
jae
cmp
lds
scas
test
jns
inc
sub
iret
call
xor
in
mov
xor
push
loope
test
mov
cwde
mov
repnz
push
sub
fstp
fimul
mov
call
inc
repz
push
dec
sbb
outs
(bad)
mov
xchg
mov
jo
sbb
xchg
loop
and
(bad)
in
mov
push
sbb
sub
mov
ficomp
pusha
(bad)
cmp
push
xlat
sahf
(bad)
fcmovnb
in
and
mov
ficom
xlat
sub
jecxz
fistp
dec
jle
inc
mov
(bad)
(bad)
bnd
mov
in
jge
and
dec
dec
jmp
lods
out
icebp
movs
test
sub
icebp
les
adc
jmp
mov
cmp
mov
int
dec
out
mov
mov
imul
add
mov
sbb
loope
test
add
mov
pop
add
add
fnsave
and
es
pop
fwait
mov
sbb
mov
jbe
or
rcr
or
shr
std
jne
in
mov
pop
cdq
mov
add
or
(bad)
pop
das
sbb
push
clc
jl
add
mul
cmc
std
ds
push
in
sub
push
mov
fstp
data16
fs
or
pop
add
mov
push
fadd
cmp
jle
das
dec
mov
or
test
dec
xor
fisttp
test
cmp
shl
mov
add
test
sub
sbb
mov
or
mov
aam
dec
dec
test
sub
lea
jo
(bad)
jp
lds
into
adc
xchg
sbb
mov
addr16
frstor
dec
inc
loop
daa
xchg
sub
push
sbb
icebp
pop
xchg
loop
push
jp
out
xchg
dec
call
cmp
cmps
data16
lods
out
test
push
push
das
in
sar
xchg
xlat
stc
inc
mov
int3
fdiv
addr16
mov
imul
(bad)
mov
push
shl
push
shr
push
add
pop
stos
jle
push
cmp
in
test
pusha
ins
in
lock
in
cmps
pop
mov
dec
jecxz
pop
pop
mov
add
inc
xchg
or
inc
pop
lds
pop
add
pop
dec
(bad)
jmp
push
call
inc
mov
ins
fstp
in
les
inc
fist
fwait
pop
daa
rcl
jmp
xchg
mov
pop
shl
cli
ret
add
inc
fnstcw
pop
(bad)
cs
rol
xlat
pop
dec
add
scas
addr16
iret
stc
adc
fild
je
jo
(bad)
push
fimul
or
lea
inc
cmp
loope
into
lds
test
adc
in
scas
lods
ror
sbb
clc
in
add
push
dec
icebp
sub
loop
shl
mov
movs
xor
pop
cld
je
cmp
xchg
dec
fnsave
int
jmp
pop
call
xchg
ja
iret
cli
shl
cmp
xor
mov
xchg
inc
add
ins
jbe
hlt
sbb
pop
std
imul
lods
rcl
in
test
push
fistp
dec
stos
xchg
sbb
jge
pop
mov
lock
popf
call
dec
adc
rcl
add
pushf
popf
aas
cmp
loop
popa
mov
pop
in
xchg
mov
adc
add
int
test
(bad)
and
push
xchg
push
inc
or
out
dec
jo
lods
pop
lods
inc
or
mov
test
loope
div
xchg
test
mov
jge
movs
push
lods
xor
call
ss
push
jecxz
dec
pop
stos
mov
fld
shr
div
and
je
adc
pop
sbb
dec
push
jo
cmps
xchg
pop
nop
lds
cmps
popf
repz
iret
mov
adc
faddp
rol
xor
ins
pop
lahf
dec
xor
add
test
ss
into
xchg
mov
or
mov
pop
ja
mov
in
dec
mov
pop
or
sbb
and
push
jo
mov
in
adc
push
push
shr
cli
in
cli
sbb
aad
stos
and
push
test
dec
imul
jge
scas
adc
add
pop
aam
test
(bad)
sbb
daa
adc
std
adc
les
outs
sbb
adc
(bad)
pop
ficomp
dec
push
dec
or
pop
mov
mov
dec
jle
mov
std
or
push
sub
repz
mov
test
push
sbb
xchg
jns
test
add
mov
push
imul
xor
sub
add
pop
sbb
mul
dec
jle
shr
dec
in
cmp
lock
cmp
gs
retf
stc
iret
dec
ret
xor
and
scas
jne
push
ror
sbb
fcmovu
cmp
loopne
imul
push
cdq
mov
cmp
mov
adc
popa
sar
adc
test
jne
clc
mov
ds
mov
clc
jle
ss
xchg
leave
inc
add
rcr
jmpw
adc
ret
pop
and
scas
je
leave
clc
sbb
xor
(bad)
(bad)
pop
and
mov
gs
fcom
sbb
sbb
add
jecxz
hlt
clc
push
push
add
mov
push
aad
xchg
xchg
imul
jmp
mov
hlt
sar
xacquire
dec
emms
ret
cmp
cmp
sub
push
pop
into
test
jmp
popa
dec
loopne
enter
into
add
repz
pop
call
call
mov
pusha
jae
xor
inc
cmp
(bad)
sbb
sub
dec
scas
sub
adc
loope
mov
scas
mov
xchg
out
dec
js
cmc
je
pop
hlt
add
sbb
jae
push
popa
and
mov
mov
add
dec
ins
inc
sub
mov
inc
inc
pop
push
xchg
jae
jge
loope
mov
mov
pop
cs
dec
mov
or
shl
add
sti
pusha
mov
add
or
test
or
popf
mov
sbb
xor
aaa
pop
pop
aaa
das
jge
in
lahf
sub
into
dec
xor
dec
bnd
in
sbb
aad
pop
add
cs
jg
xor
xchg
cmps
mov
call
imul
jl
sahf
stos
xchg
sbb
push
pop
push
shr
xchg
shrd
ja
mov
std
xchg
fidivr
jl
out
in
fist
(bad)
mov
out
mov
out
pop
add
and
rcr
dec
mov
mov
in
outs
jle
add
dec
test
xchg
pop
or
rcr
jbe
xchg
push
idiv
inc
enter
lods
shl
repz
add
repnz
aas
push
das
lods
lods
xchg
sub
dec
sub
sub
pop
add
aad
dec
into
imul
pop
inc
adc
mov
pusha
jl
pop
iret
daa
xor
cmp
stc
aam
xchg
add
mov
pop
xor
(bad)
out
cmps
outs
cmps
add
pop
clc
sbb
jmp
jl
in
sbb
mov
call
add
adc
adc
push
sub
jl
sub
rcl
iret
arpl
sub
add
adc
pop
push
dec
xor
xchg
int3
pop
(bad)
nop
loop
sahf
or
scas
mov
cmp
fnsave
xchg
fbld
pop
test
inc
enter
jge
add
es
xchg
test
scas
shl
fadd
lea
icebp
adc
cmps
pop
or
aaa
mov
aaa
mov
add
shl
(bad)
out
add
adc
mov
shr
push
cmps
pushf
pushf
mov
sbb
adc
stc
sub
ja
push
movs
adc
ins
ja
cli
and
mov
ins
call
mov
fs
call
aad
aad
sbb
je
and
ins
sub
cwde
imul
and
retf
ds
iret
and
lahf
test
xchg
pusha
test
inc
sti
ret
fdiv
neg
push
mov
nop
scas
sti
fidivr
push
sub
pop
shl
popf
pop
xlat
mov
cmp
push
aaa
jbe
cmp
out
gs
mov
cmp
pop
sar
pop
mov
loop
jnp
cmp
jno
ins
call
push
stos
fsubr
jae
mov
leave
adc
call
stc
daa
aam
sbb
inc
aam
pusha
gs
jl
mov
sub
or
sti
jl
cmp
and
imul
mov
add
add
jg
pop
ins
pop
test
mov
call
std
sar
repnz
retf
inc
push
sahf
sub
mov
cmp
imul
div
into
cmp
pop
mov
mov
mov
mov
fbstp
sub
sbb
fs
mov
sbb
push
pusha
daa
lahf
sub
xchg
inc
sbb
pushf
mov
xor
push
mov
add
(bad)
shl
arpl
in
test
test
in
mov
xor
dec
mov
xor
pop
shl
shl
add
jbe
fisttp
jl
cmp
iret
mov
xchg
mov
xor
xor
jae
jle
push
inc
cdq
fisttp
xchg
sub
test
shl
fsub
xchg
inc
mov
jbe
test
repnz
jp
imul
jl
jmp
and
jge
mov
push
aas
mov
imul
mov
cmps
sub
jo
(bad)
jmp
or
push
xchg
jmp
mov
pop
and
pusha
hlt
or
cmps
or
pop
pop
ret
push
or
add
and
mov
pop
push
sub
mov
lock
push
inc
push
jo
std
test
cwde
push
mov
sti
mov
aam
mov
pop
sti
sbb
loope
imul
mov
icebp
fs
pop
out
lods
into
pop
mov
faddp
pop
dec
xor
xor
dec
mov
xor
or
and
retf
mov
add
or
mov
mov
data16
imul
addr16
ds
pop
mov
mov
stos
or
sbb
mov
ss
movs
push
mov
retf
mov
retf
cmp
imul
cmc
aaa
imul
jno
icebp
jns
sti
pusha
ds
push
adc
loopne
jmp
sti
icebp
rcl
nop
inc
xor
jo
inc
mov
ss
mov
or
xchg
pop
pop
or
pushf
push
cli
ror
in
and
xchg
push
sbb
in
out
xor
sub
xor
fld
mov
icebp
icebp
mov
int3
fcomi
and
ins
mov
mov
push
test
out
jg
test
int
push
test
aas
jo
mov
cdq
mov
ins
mov
add
nop
push
inc
lahf
mov
or
cwde
jbe
sub
push
inc
sbb
lahf
sub
outs
add
xchg
pusha
stos
out
adc
in
jnp
lock
cmp
movs
in
mov
out
cli
or
sub
sar
fisubr
xchg
push
xor
push
jo
ins
push
xchg
xchg
icebp
push
bound
and
push
push
call
mov
ja
pop
mov
jg
jl
in
mov
lods
sbb
cwde
sar
div
movs
jne
retf
stos
sar
sub
and
loopne
bound
push
std
inc
addr16
outs
xor
push
jecxz
adc
ret
dec
loop
fcomip
xchg
nop
jb
(bad)
icebp
mul
jmp
sub
sub
inc
add
or
pop
and
jnp
pop
(bad)
test
jb
add
jmp
jno
lods
mov
xchg
into
stos
jne
or
and
outs
lea
xor
xor
mov
push
jo
lds
jne
out
sahf
inc
addr16
sub
xchg
lds
adc
xchg
cmp
shr
cdq
mov
add
and
jg
pop
rcl
scas
shl
daa
loope
add
test
add
push
repnz
mov
fwait
es
cmp
call
cmp
jae
loope
adc
mov
cmp
sbb
fidiv
movs
fs
pop
pop
jmp
adc
mov
loope
sbb
jb
jno
or
ins
retf
push
and
mov
sbb
dec
lods
ins
call
cmp
adc
mov
xlat
pop
xor
fiadd
pop
xchg
mov
and
xlat
clc
std
mov
mov
mov
xlat
and
push
lods
add
lods
sbb
adc
or
ins
sbb
neg
je
sub
push
ds
or
inc
(bad)
or
cmp
popa
cmp
shr
loop
adc
jns
mov
popa
ja
movs
inc
adc
mov
int
call
xchg
cmp
add
mov
fs
mov
iret
xlat
pop
push
ror
and
test
mov
aam
clc
sar
stc
test
out
add
push
lea
jge
adc
pushf
pop
aam
and
inc
outs
add
jecxz
loop
mov
mov
(bad)
push
push
out
mov
jns
test
jne
mov
jns
bound
jmp
sbb
xor
push
nop
pop
jl
daa
dec
sar
xor
and
pop
mov
push
mov
cmp
in
sub
fisub
inc
pop
popa
jns
mov
xchg
sbb
adc
es
push
call
or
cmps
cld
pushf
fcom
mul
call
stc
rcl
pushf
scas
pop
mov
(bad)
push
cmp
lds
xor
lock
out
cli
ss
cld
ss
cmc
pop
mov
leave
xlat
sti
pop
fist
xchg
adc
push
int
inc
xchg
jns
mov
mov
mov
cmps
neg
inc
dec
in
cmps
mov
cmp
inc
test
popa
arpl
call
lahf
cs
mov
mov
mov
sar
jle
sub
dec
mov
adc
ret
call
mov
sar
or
dec
ror
and
sbb
dec
add
xchg
stos
push
mov
fiadd
sbb
fsub
ficom
aaa
bound
dec
test
mov
xor
lea
xchg
test
(bad)
dec
mov
push
mov
xor
jl
xchg
les
fsubr
xchg
sbb
mov
into
pusha
outs
xchg
push
ja
jecxz
mov
cmps
je
inc
fadd
cld
inc
fdivrp
mov
or
(bad)
dec
dec
out
adc
pop
sub
aaa
mov
inc
sbb
and
or
mov
jns
es
inc
pop
mov
sbb
popf
jecxz
fs
daa
xchg
lods
lock
xchg
fs
test
(bad)
fstp
imul
push
pop
aam
inc
mov
xor
jmp
push
mov
das
sahf
cmp
add
scas
fucomi
jmp
jp
pop
push
lea
pop
inc
mov
push
jmp
jns
pop
scas
jne
jecxz
fistp
push
xchg
push
es
test
xchg
jmp
pop
dec
jbe
jecxz
dec
imul
push
ja
int3
movs
and
repnz
lock
xor
xor
jecxz
test
add
xor
sbb
cs
jbe
dec
ret
int3
push
add
shl
xor
push
test
dec
fwait
jo
popaw
aam
mov
or
add
hlt
not
adc
xor
ficomp
ror
mov
jns
jecxz
pop
movs
push
jns
movs
push
enter
iret
mov
retf
inc
jmp
repz
push
sbb
test
add
mov
in
jecxz
ficom
inc
jge
addr16
sub
mov
retf
call
rcl
cmps
sbb
neg
jge
jecxz
call
sbb
sub
shr
repz
push
push
mov
sbb
pop
fistp
or
and
ret
sub
cmp
pop
cmp
fild
leave
js
(bad)
push
pushf
int
push
mov
out
addr16
push
add
mov
push
and
dec
imul
and
pop
sub
mov
movs
es
(bad)
cmp
add
cmp
(bad)
loopne
or
inc
pop
shl
mov
mov
pusha
xchg
add
in
lods
push
movs
xor
adc
jb
mov
pop
sbb
push
jns
mul
push
arpl
cwde
pop
or
cli
cmp
clc
xchg
cmp
add
mov
ret
ret
inc
sub
dec
ret
xchg
mov
push
(bad)
outs
or
ds
pop
sbb
ret
and
fwait
mov
mov
push
cmps
outs
mov
adc
xlat
test
add
lods
jge
imul
scas
cmp
call
sub
inc
scas
mov
shl
ret
mov
adc
test
cmp
popa
pop
movs
repz
mov
ror
fidiv
icebp
add
push
cmp
dec
push
and
mov
jg
or
xchg
rcr
mov
popf
sbb
pop
leave
jl
in
xor
rol
jmp
loope
mov
mov
or
scas
jmp
jnp
jne
pop
xor
and
loop
add
movs
mov
fcomip
inc
mov
cmp
out
outs
push
sahf
sbb
jae
cmp
aaa
lods
xor
aam
pop
jmp
push
xchg
int3
aad
daa
gs
ins
cmps
stos
pop
cmc
or
fs
pop
mov
stc
hlt
cmp
fcomp
push
jnp
sub
ficomp
xacquire
jmp
shr
in
das
fsubp
xchg
imul
repz
data16
fcmovb
ds
div
ja
mov
scas
cmp
push
jp
push
aaa
inc
jmp
lods
xor
and
mov
cmp
xor
cmp
sub
fimul
pop
xchg
push
jne
or
repz
fdiv
pushf
into
jmp
out
cmp
outs
push
pushf
sahf
mov
aas
push
or
int3
call
mov
xchg
js
popf
shl
mov
inc
pop
fst
sbb
jae
cmp
fmul
ins
js
test
(bad)
sbb
jb
mov
and
jmp
mov
mov
inc
icebp
mov
jge
stc
test
ja
push
sbb
push
jo
loop
adc
sub
outs
and
add
pop
(bad)
fsub
mov
lock
sub
xchg
cdq
pop
imul
mov
sbb
repz
sbb
addr16
and
(bad)
(bad)
aaa
mov
push
adc
xlat
movs
cmp
dec
sbb
clc
xchg
retf
xchg
xchg
test
add
ret
push
mov
or
aaa
(bad)
outs
push
sbb
and
mov
add
leave
dec
in
lods
iret
adc
jle
rcl
push
adc
ins
fstp
pop
hlt
sbb
push
out
(bad)
je
aas
cmps
adc
arpl
jnp
ficomp
out
in
jae
xchg
fnsave
mov
ss
mov
(bad)
and
jbe
cmp
push
pop
pop
sbb
les
dec
(bad)
fsubr
stc
fadd
mov
inc
outs
mov
ja
sbb
dec
jmp
stos
repnz
push
sar
sahf
xchg
xchg
and
in
cld
out
cmps
imul
mov
cwde
inc
xor
(bad)
test
cmp
loop
mov
stc
mov
dec
adc
lea
mov
loop
aas
inc
mul
dec
aad
pushf
call
mov
mov
xor
ror
or
dec
popa
cdq
sbb
aas
out
xchg
rcr
xchg
pop
pop
sbb
shr
push
xchg
aaa
mov
pop
push
push
xor
xchg
imul
push
adc
int
mov
shl
xchg
mov
adc
jns
scas
fsubr
inc
adc
pop
repnz
pop
mov
xchg
in
stos
lock
gs
ret
adc
pusha
cs
add
sub
test
xchg
xor
sahf
and
mov
adc
dec
sub
push
add
or
adc
xlat
sub
call
dec
fidiv
pop
rcl
in
mov
mov
test
mov
ret
xchg
mov
sbb
ins
and
push
sub
add
xchg
outs
mov
mov
xor
and
lock
ret
push
and
int3
les
cdq
sahf
int3
and
(bad)
jge
jge
jl
das
outs
xchg
add
in
out
jb
or
mov
inc
dec
inc
movs
cdq
mov
mov
or
fwait
sar
test
into
push
cmp
or
test
sub
adc
dec
inc
jge
mov
inc
and
dec
mov
mov
jmp
add
cld
aaa
add
lahf
adc
inc
out
out
push
xchg
adc
adc
mov
push
ins
imul
mov
loope
jno
out
dec
fs
leave
mov
in
jno
cmps
in
test
jp
xchg
popa
mov
or
jo
or
cmp
retf
sbb
out
xchg
stos
aam
adc
push
inc
imul
xor
push
ror
(bad)
mov
mov
test
test
test
loopne
sub
and
das
sub
push
xor
pop
ja
mov
xor
into
adc
aas
dec
stc
fisttp
js
sub
lods
pop
cdq
imul
add
lods
fwait
mov
shl
adc
outs
in
repnz
cmp
cld
jb
leave
mov
loope
daa
push
mov
dec
jbe
cmp
xor
bound
sbb
mov
inc
sbb
xchg
test
fsubr
lds
movs
xchg
scas
hlt
lods
mov
pop
std
mov
add
push
cmp
loop
sub
loop
push
out
pop
sub
jo
push
xor
adc
and
sbb
xchg
fld
inc
inc
mov
clc
xchg
retf
dec
or
mov
pop
outs
pusha
ins
call
add
sbb
ins
in
adc
adc
add
cmp
adc
lods
pop
retf
enter
data16
dec
push
and
shr
or
inc
jge
arpl
imul
(bad)
xchg
mov
je
add
(bad)
cs
dec
pop
mov
and
cld
cmp
call
jmp
lea
sub
jns
dec
clc
jl
mov
sti
xor
mov
xor
cmp
jno
push
(bad)
popa
and
adc
js
xor
sub
fdiv
pop
cmp
jmp
in
inc
(bad)
jo
mov
sbb
sbb
sbb
or
fsubr
push
cmp
test
dec
and
(bad)
(bad)
lods
pop
imul
dec
cmp
je
std
xor
outs
sub
dec
out
in
enter
jecxz
push
rol
jl
add
repz
push
aad
es
fld
test
or
into
in
sahf
jns
or
lock
xor
sbb
adc
mov
push
jo
je
in
es
cs
repz
in
inc
aas
sbb
adc
adc
push
inc
popf
inc
inc
cs
push
les
inc
mov
bound
call
add
or
popf
(bad)
cmp
mov
pop
and
hlt
jno
or
test
mov
mov
test
and
scas
repnz
sahf
int
ins
sbb
cmp
jns
mov
fcom
in
fidiv
ins
cmp
sub
ret
(bad)
test
jmp
push
sbb
rcr
psllq
outs
jmp
cmp
or
lahf
rcl
mov
inc
cmp
loope
and
mov
jae
shl
test
cmp
daa
test
dec
sub
pop
push
xlat
ds
xchg
into
sub
movs
(bad)
dec
scas
ds
mov
arpl
sub
sub
xor
jo
movs
cmps
jmp
add
jmp
add
mov
jne
ret
mov
pop
fcmovu
sbb
push
sti
iret
cld
ficom
dec
out
mul
ficomp
xchg
les
jb
xchg
or
inc
movs
sbb
imul
fchs
outs
inc
sbb
mov
mov
push
loop
dec
mov
loop
in
mov
jb
pop
jecxz
xchg
mov
pop
pop
stos
xchg
add
xor
lock
push
dec
and
test
fs
ror
call
outs
imul
pop
adc
xchg
adc
push
rcr
addr16
add
cwde
mov
(bad)
xor
jp
jmp
adc
xor
shl
into
add
ja
xchg
sub
or
dec
(bad)
jmp
mov
iret
dec
mov
and
(bad)
inc
push
shr
enter
repz
fwait
int3
call
daa
sbb
(bad)
adc
retf
in
imul
mov
sub
movs
inc
and
sub
inc
mov
push
add
addr16
iret
movs
jbe
in
test
fimul
mov
jo
add
popa
dec
outs
addr16
test
mov
ja
xor
mov
repnz
out
cs
in
dec
call
and
into
jbe
mov
cmps
cmps
shl
and
xchg
push
ss
jmp
stos
int3
jns
test
jecxz
cld
popf
or
addr16
xchg
call
mov
xchg
inc
sahf
pop
nop
repnz
ret
mov
ja
mov
pop
jo
add
adc
aaa
nop
or
or
push
and
jecxz
data16
das
fwait
xor
sbb
retf
pop
jns
aaa
cwde
jle
sti
rcl
mov
push
sahf
cmp
sahf
outs
imul
les
sub
lods
and
ins
test
push
shr
mov
inc
pushf
mov
cld
lods
xor
xor
outs
mov
xchg
and
imul
adc
imul
std
sub
mov
mov
xor
lods
fsub
(bad)
lock
daa
xchg
mov
add
push
test
mov
rcl
imul
and
mov
mov
mov
pop
jp
fisubr
rcl
pop
in
cmp
ins
xor
pop
retf
sub
in
das
je
cmp
cmp
ds
mov
int
cmps
loop
xchg
iret
test
dec
sti
lods
test
cmp
call
xchg
fs
mov
mov
jnp
gs
mov
add
cmp
mov
push
in
das
int
mov
add
icebp
cmp
inc
hlt
jp
in
(bad)
dec
cmp
sub
sbb
aad
push
aad
loopne
mov
jp
mov
fwait
add
into
js
xchg
(bad)
push
popf
mov
jo
outs
inc
js
not
sti
leave
movs
xor
sub
test
or
xor
xchg
jns
sahf
addr16
rcl
xchg
sub
jbe
fdiv
imul
and
aad
movs
jnp
xchg
enter
ins
dec
add
ficomp
or
inc
sub
mov
fs
add
addr16
xlat
out
pushf
adc
nop
(bad)
and
dec
lods
dec
xchg
push
je
push
sar
mov
les
sbb
addr16
or
dec
mov
(bad)
jmp
pop
int
mov
mov
push
bound
pop
aam
add
das
call
mov
into
cdq
call
neg
mov
cli
adc
jo
mov
pop
xchg
call
inc
enter
fsub
jns
mov
push
cld
aam
sub
lods
sub
or
ret
jmp
adc
xchg
xor
adc
sar
cmp
(bad)
and
xor
(bad)
xor
ins
test
repz
and
scas
adc
sub
inc
popf
mov
xchg
test
ror
inc
out
fsubr
dec
pop
jle
test
mov
lea
and
pop
dec
stos
xchg
lea
cmps
lods
int
xchg
cmp
xchg
rcl
aas
(bad)
sub
sbb
fcmovne
jns
test
fimul
pop
fwait
mov
test
and
mov
pushf
pushf
inc
sub
xchg
out
cli
and
dec
add
dec
mov
mov
push
add
and
fdiv
imul
pusha
mov
mov
xchg
mov
sub
sti
aad
xchg
sbb
(bad)
std
ret
cmp
arpl
mov
inc
jmp
pop
test
test
lock
outs
add
rcl
cmp
jb
in
jmp
push
mov
adc
push
push
and
adc
push
sub
ret
push
outs
mov
pop
adc
sar
xchg
cld
fistp
jle
xor
out
(bad)
cmc
xchg
std
sub
pushf
mov
adc
cmps
jg
mov
jbe
mov
ja
xchg
cdq
ins
stc
inc
out
movs
mov
mov
retf
popf
or
fwait
add
or
sbb
push
push
sub
les
sbb
ficomp
or
out
popf
adc
sbb
int3
lock
adc
aad
push
imul
push
xchg
add
mov
cmp
ss
loop
sbb
movs
movs
add
nop
inc
add
xor
mov
scas
mov
cmp
xchg
shr
mov
test
sahf
ja
and
lds
mov
adc
xchg
lds
jns
xlat
ds
out
ja
xchg
cmp
out
adc
mov
or
aas
mov
add
xchg
or
pop
movs
test
fwait
pop
(bad)
in
dec
mov
mov
jnp
cmp
adc
xor
xchg
jno
push
es
outs
call
std
mov
into
inc
and
lods
(bad)
pop
stc
je
in
sbb
adc
inc
mov
sub
mov
mov
xor
sub
icebp
xchg
mov
pop
and
push
push
mov
dec
sub
cdq
or
mov
mov
sbb
imul
lahf
pop
inc
mov
and
sahf
sar
cmp
cmp
mov
ret
mov
pop
inc
addr16
xchg
rdpmc
and
sbb
test
xor
ins
movs
push
xor
or
mov
dec
sub
aaa
cmp
xor
mov
(bad)
fwait
lods
lahf
mov
addr16
or
je
retf
xor
ins
inc
mov
sub
inc
loopne
mov
nop
les
repnz
jge
sub
loopne
push
inc
mov
add
jmp
lahf
inc
out
xlat
hlt
fsubr
adc
loopne
fcom
sbb
inc
cmp
push
popa
ja
push
aas
gs
or
test
or
fdiv
dec
cmp
cdq
pop
pop
daa
sbb
xchg
jle
lods
pushf
ret
push
aad
scas
pop
in
adc
push
adc
jp
mov
sbb
aas
ss
out
cld
sub
mov
stc
test
push
stos
ret
add
ins
push
dec
dec
jecxz
mov
push
mov
mov
aaa
adc
push
movs
scas
jno
inc
cmps
imul
pop
out
mov
or
mov
jle
xchg
xor
inc
pop
xchg
xor
cmp
add
push
mov
test
mov
neg
out
push
cmp
sahf
je
adc
enter
push
je
push
jnp
cmp
inc
mov
sbb
inc
scas
xchg
and
clc
inc
jle
mov
jmp
xlat
push
jne
xchg
cmp
dec
jl
mov
fwait
int3
pushf
outs
mov
add
xchg
jmp
imul
jmp
mov
sbb
and
push
add
push
mov
popf
jecxz
mov
and
sbb
adc
jge
sub
addr16
shl
sub
pop
mov
outs
call
in
xor
aaa
add
mov
cmp
(bad)
adc
mov
xchg
fs
lds
daa
das
mov
dec
push
pop
ins
sti
mov
and
pop
jg
(bad)
dec
mov
cli
in
pop
loopne
xor
scas
push
rcl
lea
jmp
fs
jecxz
jge
lds
adc
add
fucom
push
sahf
inc
(bad)
pop
inc
add
push
pop
call
and
cs
inc
sub
jg
sub
sti
repnz
push
xor
test
push
test
fstp
sbb
std
xchg
mov
jge
sbb
icebp
popf
push
pushf
clc
in
bound
jg
xor
inc
mov
icebp
xchg
cmp
mov
popa
mov
adc
mov
loop
out
jmp
fld
in
test
and
call
shr
push
call
and
push
cli
push
and
xchg
pop
iretw
jnp
xchg
jecxz
jns
hlt
mov
test
or
out
ret
je
popf
es
mov
(bad)
sahf
in
in
mov
cmp
aad
push
sbb
repz
in
sbb
cmp
test
out
stc
sub
jne
mov
ret
dec
inc
mov
pop
adc
movs
addr16
adc
mov
add
call
(bad)
dec
ror
cmp
ds
push
out
sub
mov
out
or
jno
enter
sub
push
in
push
mov
jcxz
adc
mov
iret
add
ss
cmps
pop
mov
movs
push
fwait
xor
push
inc
inc
scas
add
(bad)
ret
push
jg
mov
mov
lods
cmp
je
rol
std
mov
scas
mov
repz
dec
xchg
out
fimul
mov
repz
mov
rcr
jmp
push
mov
mov
cmc
mov
mov
mov
movs
scas
xchg
pcmpeqb
inc
(bad)
cs
or
adc
pop
leave
push
adc
aas
rol
div
(bad)
cmp
xacquire
imul
cmp
inc
sbb
adc
pop
pop
mov
mov
jbe
imul
mov
jae
in
mov
loopne
aas
sub
aad
mov
mov
mov
pop
mov
scas
rol
dec
sub
inc
mov
into
ficomp
sub
je
push
arpl
xor
into
mov
jmp
mul
aad
pop
out
push
mov
sub
jbe
cmps
test
inc
int3
inc
mov
sbb
mov
cld
jmp
repz
sti
jp
data16
mov
sahf
mov
pushf
sbb
xor
jne
sub
test
inc
movs
xchg
adc
hlt
jmp
cli
sahf
mov
loopne
ja
cld
daa
cmc
pop
call
gs
and
aam
out
out
xchg
not
sar
int3
or
scas
out
sub
out
jp
hlt
in
cmp
aam
adc
mov
inc
jle
sbb
xor
mov
mov
pop
out
dec
jl
sbb
dec
ret
xchg
jmp
or
sbb
xchg
mov
mov
mov
out
fxch
dec
iret
sbb
xor
mov
push
(bad)
xchg
repnz
add
xchg
test
shr
xor
int3
jp
das
dec
dec
pusha
xchg
sbb
js
cs
jne
aad
cmp
test
adc
nop
ror
jnp
pop
jns
dec
or
nop
test
mov
dec
arpl
call
or
lds
adc
sbb
fldenv
push
xorps
mov
outs
mov
scas
push
std
(bad)
sub
xchg
push
adc
fwait
(bad)
xor
sub
mov
inc
idiv
shl
scas
mov
out
popa
stc
fcomp
test
jnp
icebp
sub
sbb
xchg
inc
adc
rcl
mov
jl
out
shl
jbe
or
(bad)
test
and
ss
fwait
std
shl
ror
mov
mov
ins
pop
add
push
fidivr
cmc
out
adc
movs
sbb
scas
mov
adc
fisttp
lds
pop
cmp
inc
sbb
pop
jmp
aas
jp
test
fimul
inc
rcr
mov
stc
mov
xor
ja
les
jmp
mov
js
cmp
or
jbe
or
stc
(bad)
dec
loope
emms
dec
sbb
data16
retf
pushf
jecxz
jno
inc
icebp
xchg
cmp
or
daa
or
or
mov
pop
leave
aam
out
mov
sti
into
int3
rol
pop
test
xchg
std
fist
dec
cmc
fwait
ret
das
les
push
xchg
cmp
xchg
(bad)
and
inc
je
lea
sbb
call
fidiv
jb
sub
das
call
sahf
sahf
pusha
retf
mov
movs
ret
push
push
pop
jmp
in
mov
aad
loope
das
lds
mov
int3
outs
ja
or
cmc
jb
or
das
stc
sbb
sahf
mov
jbe
les
lds
push
rol
or
rcr
xor
movs
and
mov
mov
repz
cmc
and
sbb
outs
or
adc
mov
jno
dec
(bad)
fidivr
sub
rol
or
and
in
xor
jo
(bad)
pop
ins
ror
or
xchg
mov
popa
js
inc
pop
push
dec
push
ja
sahf
push
mov
mov
dec
adc
push
xchg
pop
add
test
push
icebp
jbe
xchg
ret
jmp
xor
and
les
jp
push
push
jl
xor
mov
and
js
test
shl
or
out
scas
int
pop
jno
inc
push
push
mov
mov
imul
xchg
cs
jo
mov
dec
xchg
daa
fst
fwait
cmp
cmp
inc
jecxz
inc
enter
fstp
daa
or
fiadd
pop
or
adc
stc
xor
shr
mov
cmp
int
pushf
ror
addr16
idiv
pop
lahf
pushf
call
sahf
cwde
sbb
mov
fcomp
adc
mov
adc
inc
ficomp
lods
dec
(bad)
ins
stos
mov
mov
cs
add
sub
push
pushf
fs
and
inc
inc
and
cmp
sahf
pop
xchg
and
xchg
sub
bound
push
(bad)
dec
fdivrp
je
cld
mov
in
cdq
mov
aas
inc
fsub
push
(bad)
ins
mov
repz
pusha
sti
(bad)
fiadd
das
jns
inc
xlat
mov
mov
nop
clc
sub
lahf
movs
stos
push
fmul
neg
(bad)
pop
xchg
xchg
cwde
cmp
test
xor
push
adc
sar
cli
enter
mov
mov
jmp
(bad)
jge
jl
jl
test
jo
jb
clc
aaa
fnstcw
fwait
mov
dec
and
shr
(bad)
mov
mov
cmp
mov
pop
jle
cs
xor
mov
inc
iret
cmp
or
dec
cli
pop
mov
jnp
sti
cdq
add
lock
pop
loop
sbb
pop
xor
xchg
jns
push
sbb
das
call
lods
mov
and
inc
push
sub
call
mov
xor
add
icebp
scas
pop
fiadd
fs
aam
ret
mov
ret
outs
jne
ret
aam
call
popf
fwait
cld
xor
fs
and
repz
pop
cmps
inc
stos
pop
adc
mov
mov
bound
jnp
stos
jns
push
ja
sbb
inc
pop
pop
aaa
jmp
test
mov
jns
sbb
xchg
clc
fs
aad
cmp
lea
loope
ins
adc
add
or
retf
xor
mov
or
lods
aad
sbb
or
push
movs
adc
and
mov
dec
test
inc
dec
xchg
fistp
sti
mov
add
mov
retf
pop
jp
mov
rcr
push
push
and
mov
fsubr
add
pop
scas
dec
xchg
push
mov
xchg
and
and
jp
xchg
retf
cdq
inc
mov
jb
dec
xlat
sbb
je
loopne
pushf
jge
or
leave
sar
pop
sub
inc
mov
popf
mov
aaa
aad
adc
popf
jg
lods
adc
mov
pop
outs
cld
hlt
daa
adc
mov
fistp
cmp
jnp
cld
cs
sbb
push
call
test
pop
adc
mov
add
fild
call
movs
fs
dec
mov
mov
cdq
aas
adc
psubw
ror
xor
rol
fsub
rcr
(bad)
aam
xor
pushf
cmp
cmps
ds
mov
jmp
dec
dec
aad
data16
jmp
mov
mov
retf
cmpxchg
sub
cmp
dec
ins
or
dec
mov
clc
cld
retf
fnsave
xor
aad
(bad)
shl
dec
adc
data16
xchg
adc
sbb
push
fcom
scas
and
mov
dec
fs
and
push
xchg
xor
xchg
cmp
imul
daa
cs
scas
xchg
rcl
outs
inc
push
inc
sar
int3
stos
mov
cld
cmps
scas
adc
adc
loop
int
xlat
sbb
mov
add
or
rcr
xor
or
loop
mov
or
popa
mov
into
cmp
cs
xchg
adc
stos
shl
sbb
loope
imul
jp
lahf
mov
ret
leave
add
mov
je
retf
cmp
push
les
movs
rol
jnp
xchg
push
leave
dec
mov
sbb
xor
mov
mov
(bad)
nop
sbb
jle
dec
inc
xor
das
sbb
cdq
mov
jbe
jp
rol
dec
movs
push
adc
push
push
(bad)
sbb
xlat
aas
adc
jbe
icebp
mov
mov
pop
adc
pop
shl
push
sub
addr16
pop
lods
jle
push
shl
add
(bad)
test
push
jge
xchg
jg
out
inc
jo
sbb
push
sbb
cmp
sbb
arpl
mov
mov
mov
pusha
xor
retf
pop
jo
xchg
mov
in
int
repz
xor
jge
push
js
mov
sub
dec
or
loope
push
mov
xchg
jge
aas
enter
lods
imul
dec
test
fs
adc
fs
mov
out
int
leave
pushw
xchg
ret
push
loop
adc
mov
cli
lock
shl
arpl
sbb
jmp
and
inc
cdq
pop
ja
dec
sub
pop
popfw
(bad)
xor
push
mov
icebp
jo
mov
inc
sub
test
sub
popf
shl
cmp
adc
pushf
int
adc
pop
loop
rol
sub
mov
adc
xor
jne
sahf
pushf
stc
push
cmp
inc
out
call
push
in
loopne
sbb
fdivp
nop
and
mov
jmp
sub
ficomp
push
xor
xchg
into
dec
outs
fs
fimul
(bad)
xchg
sbb
sbb
stos
aad
xor
cld
push
movs
sar
mov
xlat
pop
mov
movnti
add
jae
gs
cmp
mov
(bad)
mov
shl
fcmovnu
adc
out
retf
push
xchg
xchg
adc
mov
jns
mov
sub
pop
out
ret
lahf
dec
push
scas
push
sub
or
or
mov
dec
cld
pusha
imul
inc
int
sbb
leave
inc
lahf
movs
add
inc
jmp
xchg
aad
out
les
fcmovbe
hlt
mov
push
iret
cdq
jo
pop
call
or
imul
out
xor
test
popa
les
arpl
mov
int3
lods
mov
sbb
cmp
pop
movs
jb
loopne
dec
not
movs
stos
mov
aas
and
pusha
mov
lds
jb
xchg
push
inc
xor
add
cmp
fstp
dec
std
iret
pop
jb
lds
cmps
movntps
inc
mov
mov
mov
or
add
outs
dec
sbb
push
das
dec
stos
mov
adc
in
adc
mov
dec
iret
mov
cmp
push
and
pop
xchg
fistp
bnd
adc
retf
call
add
and
sahf
retf
xor
packsswb
pop
mov
mov
mov
imul
mov
imul
inc
push
xchg
cmp
dec
(bad)
and
adc
mov
jae
cdq
stos
xor
jle
and
test
jns
cmps
test
das
out
mov
arpl
adc
jl
aaa
ret
jmp
aad
or
xchg
mov
jmp
shl
movs
jmp
bnd
in
movs
gs
or
out
cmps
push
jmp
xchg
adc
mov
nop
xor
xchg
and
pusha
inc
or
and
sti
les
pop
mov
std
lea
inc
push
cs
pop
cmp
push
xor
aas
movs
rol
gs
mov
dec
sbb
movs
test
das
jecxz
retf
or
xchg
mov
mov
stos
jmp
sub
cmc
ins
enter
mov
xor
sbb
mov
mov
repz
data16
test
fstp
int3
sub
stc
cmps
mov
mov
in
enter
sbb
enter
pop
or
and
mov
imul
or
sbb
push
sub
jmp
fsqrt
call
fistp
lahf
mov
xchg
fistp
dec
or
mov
pusha
(bad)
stc
or
jl
xor
mov
bound
jnp
lock
vmovshdup
dec
sub
or
cmps
imul
ret
dec
push
mov
pop
daa
pop
hlt
mov
fdiv
iret
jle
adc
push
daa
push
xchg
shl
cmps
mov
movs
mov
(bad)
xlat
jo
sbb
cmps
fisub
aam
cmp
in
jo
or
out
xchg
jp
inc
jno
xor
scas
mov
push
mov
lods
add
sbb
mov
lds
inc
jmp
ss
xchg
jns
push
pop
mov
push
popa
push
and
lahf
aad
add
lods
adc
out
add
jmp
ins
and
add
adc
fsubrp
lahf
call
dec
call
(bad)
stc
sar
push
das
retf
xchg
mov
xor
and
stos
jnp
jmp
mov
add
dec
sbb
daa
(bad)
popf
cdq
inc
fwait
jl
mov
fild
mov
and
jnp
movs
rol
jbe
(bad)
out
movs
pusha
int3
jno
ins
rcr
pop
loop
push
rcl
mov
cmp
je
mov
pusha
retf
sbb
cmp
imul
and
icebp
add
or
dec
mov
sbb
(bad)
mov
out
pop
and
in
sbb
enter
cli
jmp
cld
cmp
or
pushf
xchg
push
and
jns
mov
cli
push
jecxz
into
retf
sub
mov
jp
or
repnz
outs
push
into
sub
(bad)
pushf
xchg
xchg
xor
fst
xchg
or
dec
movs
call
test
dec
or
mov
in
dec
scas
dec
sub
xor
sahf
push
or
xchg
dec
pop
out
int3
(bad)
ins
mov
and
mov
into
(bad)
sub
and
cmp
daa
out
int3
xchg
je
mov
popa
pop
dec
in
inc
retf
neg
je
ror
sbb
and
jmp
repnz
call
les
mov
shl
cmps
mov
movs
inc
xor
in
(bad)
hlt
adc
bound
cs
cmp
fstp
pop
add
scas
data16
inc
sbb
push
(bad)
iret
iret
or
cld
popf
pop
aaa
leave
jmp
add
(bad)
(bad)
clc
loope
mov
std
retf
xchg
dec
mov
cmp
and
add
cmovb
xchg
mov
mov
(bad)
dec
mov
cmp
sbb
mov
inc
pop
pop
push
popf
and
add
lods
adc
jle
xchg
or
(bad)
push
push
or
xchg
sub
je
cwde
fiadd
in
cld
sbb
in
call
fidivr
push
int3
sbb
test
pop
xchg
repnz
sub
lods
pop
jo
aaa
dec
ror
inc
mov
div
xor
sub
loop
sar
gs
cli
pop
or
scas
fs
rcr
jmp
daa
je
lea
pop
test
out
aad
dec
rcl
iret
(bad)
adc
es
add
std
into
jg
add
xlat
xor
push
adc
(bad)
in
push
cmp
and
sbb
and
inc
(bad)
inc
cmp
outs
aad
loopne
mov
iret
sbb
bound
xor
push
xor
add
and
das
or
loope
pop
pop
pop
xchg
mov
ret
push
in
lahf
adc
xor
xor
repnz
xor
ret
push
mov
pop
xchg
ror
cs
pop
call
jmp
xor
imul
retf
cmp
scas
mov
dec
popf
mov
mov
lahf
ins
iret
dec
ss
cmps
daa
dec
sub
inc
sbb
mov
fsub
mov
loopne
lods
push
call
cmp
xor
inc
cmp
sub
cmps
ret
pop
adc
cmpps
sti
std
mov
sub
cmc
in
(bad)
inc
outs
adc
xchg
retf
pop
cmp
push
retf
xchg
sub
jl
inc
int
xor
rol
movzx
pop
dec
fs
(bad)
shl
sti
aam
cmp
bound
dec
ds
aaa
pop
and
mov
jecxz
mov
cmps
mov
out
cmp
dec
xchg
dec
out
mov
call
cmp
lea
sbb
retf
mov
jnp
test
sbb
into
add
popf
cmps
push
push
mov
pop
add
pop
mov
pop
ret
xor
adc
pop
jno
int3
shr
ret
xor
push
cmc
out
dec
(bad)
std
outs
das
mov
loopne
fsubr
(bad)
xchg
dec
nop
and
xor
push
les
dec
mov
loopne
xchg
pusha
cmps
dec
enter
dec
cmps
loope
lock
retf
aaa
xor
aam
pop
(bad)
das
or
mov
pop
lea
sub
mov
inc
pop
test
sbb
(bad)
ds
out
mov
push
test
add
jae
pop
push
or
dec
cdq
mov
push
in
(bad)
lods
repz
adc
std
push
addr16
mov
lock
adc
test
stos
aas
aas
rol
xchg
jg
and
pop
pop
cdq
adc
repz
jecxz
in
add
test
cmp
nop
sub
call
xor
daa
jmp
pusha
xor
std
test
pop
xor
sbb
sub
imul
outs
ja
pushf
fcomp
call
jnp
and
sub
pop
sub
jg
out
cld
cmp
icebp
(bad)
shl
inc
xchg
xchg
mov
mov
iret
loopne
pop
jns
rcl
jp
mov
sbb
jb
push
gs
inc
lock
jp
cwde
movs
jge
sub
add
call
inc
rcr
inc
push
xchg
jl
daa
fisub
enter
push
sub
sbb
rcr
push
scas
test
inc
push
mov
jp
js
lea
and
rol
jp
rcl
cdq
cmp
scas
(bad)
cmp
dec
dec
rcl
mov
and
and
repnz
and
sbb
adc
fwait
cmps
xchg
lock
scas
jge
xchg
add
jp
out
or
retf
jmp
lods
mov
inc
pop
fwait
mov
mov
mov
cmps
sbb
xchg
push
scas
mov
bound
ret
mov
fldenv
imul
loop
aad
adc
or
js
setae
adc
xor
mov
add
ins
leave
loop
inc
lock
test
fisttp
ror
fs
jmp
jo
setns
cmc
jecxz
retf
xor
or
int3
sbb
popf
out
push
fist
mov
xor
fist
neg
mov
(bad)
push
loop
mov
test
or
or
push
les
lahf
or
or
push
scas
adc
stos
push
leave
dec
jl
mov
pop
outs
inc
cmp
mov
or
fdiv
add
stos
cmps
add
fcmovne
out
je
adc
push
push
xchg
fstp
shl
cmps
or
xchg
sbb
and
mov
cmp
test
xchg
sub
popf
push
push
xchg
sti
rol
outs
inc
mov
pop
mov
(bad)
ficomp
mov
pop
xchg
iret
addr16
dec
sbb
loop
movs
adc
scas
push
push
mov
in
xor
arpl
mov
fldenv
push
leave
sbb
(bad)
mov
cmp
dec
clc
(bad)
mov
and
xchg
call
adc
fldcw
ins
rol
mov
ja
fdivr
outs
sbb
cmp
dec
xor
adc
add
xchg
pop
mov
cs
scas
xor
add
inc
mov
or
lahf
sub
add
push
push
adc
mov
adc
inc
stos
call
clc
pop
fstp
pop
jmp
rcr
inc
jns
xlat
pop
cmp
mov
or
test
inc
fsubr
call
retf
pop
fild
or
sub
fidivr
fs
int
int
mov
jp
sbb
ja
sti
fld
sbb
inc
ss
call
dec
retf
cld
lahf
fsubr
xor
stos
jo
movs
aaa
or
in
loopne
pushf
lock
popa
sbb
xchg
sub
int3
enter
hlt
mov
mov
mov
scas
addr16
data16
dec
push
add
int3
out
cmc
scas
mov
cmc
test
mov
xchg
call
daa
or
and
fdivr
or
(bad)
fucomip
(bad)
mov
mov
retf
jb
(bad)
fdiv
jp
retf
inc
push
leave
jbe
push
cmp
mov
dec
das
sub
mov
or
pop
and
mov
fild
cmp
adc
in
inc
cmp
sub
mov
xchg
cs
push
dec
push
mov
(bad)
xlat
and
ja
leave
loope
into
push
add
test
sbb
cmp
js
out
rcl
(bad)
call
mov
push
(bad)
(bad)
adc
mov
push
add
add
(bad)
xor
and
dec
out
div
aaa
fbld
sbb
cmc
jecxz
sbb
sub
lahf
jp
pusha
lods
ins
mov
xchg
adc
push
or
aam
mov
jns
div
xchg
add
(bad)
ficomp
(bad)
lods
xor
imul
adc
lea
daa
sub
in
jl
jmp
xor
pop
add
xchg
inc
call
ins
push
pop
sub
sbb
lds
les
mov
push
push
ss
xor
dec
imul
dec
cdq
dec
ins
sbb
stos
jb
(bad)
sahf
push
(bad)
sti
pop
inc
mov
test
out
mov
shr
es
and
mov
sub
dec
and
rcr
mov
mov
mov
call
pushf
ret
mov
ja
(bad)
or
xor
adc
pop
addr16
les
shl
dec
jne
aas
test
out
or
or
jmp
es
(bad)
nop
push
sbb
sbb
xchg
inc
add
xchg
jae
sahf
pop
xchg
iret
mov
popa
shl
clc
sbb
out
leave
fnstenv
adc
out
cmp
popf
fbstp
jg
(bad)
jp
adc
test
icebp
pop
dec
mov
and
dec
loop
call
jnp
stos
addr16
push
(bad)
sbb
outs
scas
aas
add
sahf
lods
cmps
retf
jmp
aas
mov
loop
out
pop
into
sbb
ins
xchg
pop
mov
push
xor
jbe
mov
aas
jmp
mov
sub
adc
mov
sub
pusha
les
enter
dec
cwde
ss
inc
add
cmc
movs
adc
imul
fsubr
cmps
jge
es
dec
sub
mov
add
(bad)
mov
pop
loopne
(bad)
fxch
in
dec
jle
test
scas
add
test
jnp
mov
cli
aaa
inc
cmp
cli
ret
add
pop
xor
sbb
add
popf
sbb
pop
xchg
push
pop
outs
push
adc
adc
jno
mov
mov
mov
xchg
popf
lahf
jb
xor
sub
sbb
jnp
mov
push
loop
shl
xchg
xlat
lods
push
test
push
push
call
push
adc
pop
add
pusha
fistp
add
pop
ds
clc
ds
push
scas
fist
pop
mov
fist
add
cmps
push
hlt
enter
xchg
iret
in
rol
mov
jecxz
mov
fucomp
(bad)
ss
add
cwde
idiv
add
call
lods
jbe
mov
push
outs
xchg
adc
int
ja
dec
pop
rcr
add
mov
pushf
sub
sbb
hlt
pop
and
test
xchg
cmp
aam
(bad)
loope
add
sar
in
imul
std
bound
mov
push
test
jb
xor
sbb
retf
mov
push
pop
adc
(bad)
adc
fisttp
jp
xor
cmp
(bad)
xlat
xor
(bad)
jne
or
adc
adc
frstor
sub
bound
mov
jbe
int3
sbb
and
popf
vmread
pop
add
dec
ret
dec
sbb
pop
loope
iret
shl
jp
call
mov
fcmovnbe
fiadd
adc
adc
dec
and
sbb
daa
sub
pop
sub
jb
xor
pop
dec
xor
adc
les
test
in
sbb
lds
mov
sbb
or
test
in
and
js
xchg
adc
pop
gs
jb
sub
xchg
xchg
push
mov
shr
ins
xchg
lods
cwde
retf
retf
push
sub
pop
dec
cli
sti
out
cmps
popa
xchg
jmp
aam
sti
ss
xchg
and
test
push
imul
sbb
push
jmp
sub
repnz
hlt
or
dec
cmp
push
test
jne
addr16
push
xor
dec
fcomi
clc
inc
cmps
push
pop
into
in
jb
mov
call
lahf
cmp
test
inc
mov
sub
fs
jmp
mov
clc
cdq
dec
out
stos
(bad)
push
ss
ds
pop
js
repnz
(bad)
push
iret
adc
mov
cwde
ss
or
ret
into
in
(bad)
sub
adc
cmp
xchg
add
int3
outs
pop
js
icebp
or
jns
push
dec
mov
mov
int3
(bad)
sar
enter
arpl
xor
(bad)
not
cmps
fs
out
loope
mov
mov
and
jb
mov
mov
cmps
push
bound
inc
push
add
sti
cld
ret
loope
or
xor
xchg
out
push
movs
outs
pop
jle
shl
mov
mov
dec
adc
push
test
dec
push
mov
ss
aas
mov
iret
retf
outs
push
cmps
jmp
mov
or
test
(bad)
(bad)
cdq
and
loopne
or
adc
xlat
(bad)
adc
push
cmc
int
out
dec
and
rcl
cdq
inc
pop
lods
mov
shl
pop
adc
push
sar
int
jle
bound
push
jnp
mov
inc
sub
cmp
jo
fadd
shr
std
(bad)
aad
push
cmp
pop
cld
push
icebp
or
mov
xlat
cmp
mov
add
arpl
scas
daa
(bad)
clc
jg
adc
out
in
aas
or
pop
push
ins
(bad)
movs
clc
mov
dec
mov
add
mul
retfw
jle
mov
lea
xchg
addr16
ror
mov
jns
xor
popa
jne
int
xchg
jne
repz
push
pop
cmp
push
dec
leave
and
mov
xlat
das
fisubr
xor
das
aad
xchg
(bad)
cmp
inc
hlt
in
adc
mov
bound
(bad)
mov
ds
fcmovne
mov
mov
sub
aaa
scas
xchg
out
daa
mov
or
mov
and
retf
jl
xchg
pop
data16
dec
push
pop
arpl
add
in
pusha
iret
mul
(bad)
or
xchg
jnp
pop
mov
mov
inc
in
into
outs
xchg
jmp
js
repz
pop
add
loope
push
into
ror
stos
dec
jb
dec
push
cld
and
retf
mov
mov
(bad)
jae
ds
xlat
fisub
repnz
xor
shl
loope
sub
cmp
shl
dec
dec
mov
jp
jg
and
ins
or
sbb
shl
xor
mov
jmp
xchg
pop
out
leave
and
lahf
jmp
int3
push
lahf
xchg
ficomp
sbb
dec
daa
add
inc
pop
cmp
add
es
fstp
popa
ret
and
xor
popf
pop
(bad)
jmp
mov
dec
inc
xor
out
nop
fwait
adc
jnp
outs
call
loope
xchg
(bad)
mov
mov
push
scas
cmps
outs
pushf
and
gs
sub
or
fwait
jns
leave
sbb
fstp
xchg
xchg
mov
scas
arpl
retf
repz
js
and
ins
jae
nop
cdq
push
fldenv
repnz
pop
iret
cmp
mov
dec
repnz
cmc
inc
mov
mov
xor
lds
pop
push
jns
aas
retf
push
loope
js
or
push
in
jb
es
mov
nop
sbb
into
or
ret
loope
and
stc
sbb
test
popa
jle
ins
aam
imul
test
and
jb
ficom
push
push
outs
or
loopne
aam
int
jae
mov
in
cmc
sbb
(bad)
adc
mov
out
out
or
mov
pop
pop
test
and
cmps
fisub
and
adc
rcl
fidivr
xor
pop
test
push
jg
stos
mov
test
enter
xchg
dec
push
sbb
pop
mov
dec
pusha
dec
mov
daa
sbb
fld
ja
mov
dec
ins
push
int
mov
in
leave
jb
fdivrp
cmp
pushf
call
mov
mov
push
pop
adc
ret
cmp
cmp
xchg
out
add
gs
dec
stos
cdq
ins
add
sti
jle
cdq
xor
loop
call
mov
dec
fld
xchg
jp
xlat
inc
dec
jb
mov
cmp
jmp
push
out
cmp
scas
(bad)
push
sar
out
popa
lahf
outs
les
dec
xchg
or
(bad)
sahf
sub
xor
jg
ins
jmp
outs
mov
jmp
mov
aam
mov
inc
or
outs
retf
pop
xlat
adc
ret
ja
mov
stos
adc
mov
ret
push
iret
outs
addr16
test
out
cmp
call
push
nop
fcomp
cdq
test
sub
dec
fs
out
cld
iret
sub
mov
dec
unpcklps
les
push
fisttp
adc
xor
repnz
scas
outs
adc
call
xor
js
aam
xor
stos
test
imul
mov
fs
imul
pop
in
loope
or
popa
push
(bad)
gs
xchg
nop
sbb
jmp
lds
push
jo
cmp
hlt
leave
jmp
mov
xchg
leave
into
and
or
nop
mov
push
inc
fdivr
in
ds
cmp
cmp
jns
push
aas
push
add
push
data16
push
adc
push
test
dec
aad
and
jb
test
jl
ss
add
out
loope
mov
sub
mov
jo
or
ins
ds
cmps
mov
sub
jecxz
shl
adc
jne
xchg
sbb
(bad)
sti
cs
out
xor
xor
jnp
sbb
jecxz
cmp
fdiv
sub
and
icebp
sub
imul
mov
xor
test
out
aaa
push
pop
jl
fstp
sti
sbb
dec
out
xor
jmp
jne
ror
fs
xchg
jbe
int
jle
loope
jb
aaa
xchg
mov
scas
loope
dec
lea
enter
jbe
pop
jge
xchg
mov
frstor
in
dec
xor
fstp
pop
mov
dec
in
push
xor
fdivr
cmc
inc
ss
ins
outs
adc
add
jb
sbb
bound
jge
pop
loopne
shl
mov
test
ins
pop
sbb
les
ds
sar
out
rcl
cmps
loopne
xlat
jno
add
ret
(bad)
rcr
into
dec
jns
inc
fs
sub
rcr
mov
mov
sbb
lods
add
stos
adc
lods
cmps
dec
jle
jae
popa
adc
cld
popa
cmc
loop
dec
ds
and
jbe
and
jmp
xchg
stc
cmp
dec
data16
mov
mov
shl
cmp
in
in
sub
movs
popa
out
or
mov
les
sub
test
dec
sbb
int3
(bad)
lods
(bad)
in
sti
pop
push
imul
scas
xchg
sbb
xchg
pushf
paddq
stos
lahf
jp
xor
push
cwde
loope
mov
cdq
sbb
and
cwde
ret
mov
das
xchg
cmp
inc
adc
or
xor
push
icebp
ret
inc
mov
je
clc
std
loopne
pop
jge
inc
jnp
jl
repnz
mov
fnstcw
repnz
test
shl
out
rol
jno
cmp
or
(bad)
loope
xchg
and
lea
pushf
mov
jns
jno
jecxz
retf
addr16
and
popa
out
mov
idiv
test
idiv
scas
pop
pop
mov
and
xchg
psubsb
jle
jo
pop
pop
(bad)
out
ins
pop
in
mov
mov
data16
jnp
add
mov
jge
pop
mov
pushf
or
inc
jmp
fs
retf
push
movups
adc
or
cmc
mov
push
mov
movs
repnz
ins
xchg
pop
mov
mov
mov
mov
xchg
mov
pop
push
mov
or
fstp
enter
xor
mov
mov
inc
nop
ins
jmp
jmp
fisub
sbb
xor
and
sahf
fwait
dec
mov
cmp
push
icebp
adc
shl
cli
fist
jmp
ret
out
mov
xchg
dec
cmp
imul
iret
push
cmc
jns
aas
jne
xor
mov
sub
jecxz
cmp
or
or
push
add
outs
xchg
sbb
inc
in
add
and
ror
or
or
ja
or
repnz
cmc
in
push
xlat
mov
sbb
push
ficom
push
test
inc
xor
cmp
jge
sub
ja
out
push
in
sbb
push
sbb
in
pop
mov
cld
sbb
daa
lods
retf
sti
stos
push
cmps
sub
lds
test
pushf
out
inc
add
add
mov
inc
rcl
dec
call
ss
xor
lock
int3
cdq
add
sbb
cmp
mov
cmp
pop
adc
pop
mov
mov
or
adc
in
adc
outs
adc
shl
sahf
ss
xchg
stc
pop
push
fs
movs
retf
mov
inc
sbb
cld
(bad)
ret
dec
cmp
xor
sbb
jle
add
mov
inc
inc
sahf
add
adc
pop
xor
adc
cld
or
jle
cdq
cmps
push
jmp
jo
arpl
or
mov
repnz
mov
rcl
fcomp
mov
xchg
push
pop
lds
add
imul
inc
in
nop
out
(bad)
sti
stos
scas
adc
cmps
push
inc
test
clc
int3
loope
sar
retf
aaa
inc
cdq
fld
jle
mov
inc
cmp
adc
icebp
test
adc
xor
aaa
push
push
ret
pop
test
cwde
pop
mov
jecxz
aam
ret
sbb
sar
neg
or
retf
shr
adc
test
and
mov
ret
pusha
dec
sbb
xchg
or
sub
lea
push
pop
sub
jo
xchg
or
lahf
repnz
inc
dec
mov
jp
jns
lods
and
lahf
add
jne
das
loop
pop
popa
mov
jo
in
xor
push
pop
cs
ficomp
pop
(bad)
jge
and
lods
outs
cmp
ja
xor
in
cwde
xchg
into
xor
sbb
jmp
bswap
sub
mov
add
mov
push
mov
movs
test
sahf
clc
push
sti
cmps
pop
cmp
inc
mov
push
jns
add
sbb
push
push
inc
popf
lea
pop
pop
shr
scas
mov
push
imul
push
es
and
movs
sbb
mov
bound
mov
pop
cmp
iret
sbb
pop
lock
lea
dec
push
mul
outs
pop
xchg
sbb
(bad)
mov
iret
sub
and
fs
pop
iret
mov
ja
daa
mov
sub
mov
sub
in
xchg
mov
jl
inc
cmp
pop
cld
mov
fild
lahf
(bad)
adc
(bad)
ins
mov
(bad)
rcl
cld
(bad)
pusha
or
jl
ds
push
iret
push
xlat
in
data16
inc
mov
push
addr16
gs
rol
xchg
pop
inc
(bad)
rcr
add
mov
lods
mov
lods
in
sbb
add
arpl
mul
cli
push
es
enter
inc
adc
push
lods
push
add
dec
add
push
mov
(bad)
cs
inc
cmc
movs
add
jg
loopne
mov
movs
fcomp
jbe
out
sbb
fucom
dec
inc
sbb
dec
dec
and
xlat
in
mov
jnp
cli
call
ja
ins
xor
inc
dec
pop
mov
(bad)
xchg
cmp
mov
xchg
xor
mov
mov
mov
stc
mov
inc
daa
cmp
enter
mov
psadbw
out
push
or
loopne
mov
jnp
and
inc
repnz
jno
in
cs
pop
xor
adc
cmps
popf
shl
xor
adc
jmp
test
or
pop
add
mov
xor
lock
xchg
out
cld
pop
imul
mov
bound
sar
iret
pop
and
dec
scas
xlat
out
jmp
cmp
addr16
ret
cmp
in
int
sbb
or
push
push
out
sar
retf
pop
fwait
jl
repz
push
fcmovnbe
cs
cmp
stos
mov
in
dec
fcomp
add
js
mov
pop
mov
pop
or
retf
int3
push
push
repz
mov
mov
xchg
mov
jmp
or
push
outs
sub
inc
outs
loop
cwde
lock
mov
and
cmp
cmp
les
daa
popf
push
es
loope
call
stc
not
jp
cmp
mov
sbb
cmp
call
xchg
aad
lea
pop
push
aad
fcmovbe
cmp
hlt
sti
pop
sbb
lods
mov
or
aam
inc
pop
mov
pop
push
(bad)
adc
shl
fisubr
(bad)
dec
call
jl
sbb
lock
mov
out
retf
cmp
sub
mov
inc
punpckhbw
(bad)
div
fisttp
call
mov
es
jne
push
test
sbb
imul
jbe
xchg
imul
shr
and
push
stos
bound
mov
jne
frstor
cdq
cmp
inc
sbb
jecxz
jg
(bad)
dec
jb
push
scas
gs
sbb
fldenv
cs
outs
sbb
jmp
es
in
dec
mov
pmaxub
pop
into
and
adc
data16
mov
rcl
popa
aaa
sbb
mov
xchg
mov
and
sbb
mov
cmp
fdiv
nop
shl
jnp
mov
xor
and
out
call
mov
not
rol
imul
push
les
add
push
icebp
jnp
push
mov
mulps
outs
scas
push
sbb
lahf
inc
inc
js
fbstp
dec
(bad)
es
adc
pop
imul
movs
or
and
mov
pop
dec
int
test
in
xchg
push
out
fwait
hlt
ret
scas
movs
add
nop
xchg
aam
inc
int3
jmp
popa
std
ja
popf
inc
push
cmp
xchg
push
mov
fst
(bad)
mov
in
repnz
(bad)
jb
sbb
jb
dec
push
jo
xor
push
fwait
push
js
jne
out
hlt
pop
(bad)
int3
jecxz
sbb
lods
jmp
sub
mov
and
mov
push
and
sub
xchg
fdivr
add
jne
cdq
enter
sub
mov
xchg
xchg
clc
xchg
in
ins
mov
sub
stc
sahf
lea
dec
push
fdecstp
add
xor
push
mov
mov
pop
popa
mov
fs
xchg
inc
push
jmp
into
ret
lahf
fcom
push
out
lea
xchg
xor
inc
lods
sub
aaa
sub
jge
(bad)
sbb
pop
ret
ss
push
sub
fs
scas
aad
sub
std
lods
pop
mov
jle
cli
idiv
dec
fldpi
mov
or
cmp
cmp
addr16
dec
push
(bad)
cmps
in
pop
cmps
cmc
jmp
or
add
test
das
dec
cli
jmp
stc
jo
sub
pop
in
inc
or
lods
dec
mov
outs
aam
add
pop
jmp
movs
div
jae
jae
cwde
(bad)
jmp
inc
mov
jp
(bad)
cld
mov
dec
cmps
xchg
mov
mov
inc
outs
shl
out
pop
movs
pop
cmp
mov
mov
mov
ds
pop
inc
retf
mov
imul
add
inc
xor
les
into
lea
xor
xor
mov
dec
out
int3
sub
retf
sbb
pop
clc
out
push
repnz
clc
jmp
mov
loop
cmp
repnz
sar
push
jnp
in
push
data16
adc
push
sbb
mov
inc
xchg
es
popa
cmp
inc
call
adc
ror
inc
(bad)
cmp
in
jmp
lods
adc
xchg
ins
mov
mov
pop
out
and
push
sbb
push
lock
cmp
shl
mov
je
int
push
jb
xchg
xor
mov
add
mov
add
mov
hlt
pop
and
(bad)
add
lahf
mov
shl
cmp
push
mov
call
xor
push
sub
xlat
push
jg
out
shl
movs
fcmovnbe
pop
ja
mov
mov
sbb
dec
and
inc
jnp
popf
mov
mov
xchg
ja
pop
and
sbb
xor
mov
rcr
or
in
cli
cmp
dec
xchg
mov
jno
pop
sbb
and
add
xchg
shld
ficom
lea
sahf
mov
pop
and
xchg
sub
cmp
psraw
dec
inc
xchg
mov
push
stc
ss
jno
mov
jno
lock
out
jns
or
sub
push
mov
(bad)
fiadd
inc
mov
inc
iret
mov
push
xchg
imul
or
push
jl
lock
xchg
das
jns
aad
inc
into
sbb
xor
sbb
nop
add
xchg
cli
xor
cli
push
loopne
shl
cs
in
je
xlat
hlt
fld
or
icebp
sti
fisub
aad
mov
(bad)
(bad)
push
in
sub
jns
push
pushf
call
jp
test
push
inc
pop
jno
pop
adc
jno
xchg
mov
inc
mov
pushf
mov
mov
mov
jg
cli
fistp
mul
ds
fdivrp
jb
inc
fcom
lds
cdq
shr
sub
mov
adc
dec
je
xchg
shl
xor
ret
repz
enter
out
iret
jl
clc
call
push
retf
mov
jb
ins
adc
sahf
popa
div
cmp
pop
add
add
lahf
out
retf
xor
push
inc
std
adc
clc
push
movs
int3
sbb
push
xchg
fld1
aaa
int
aaa
repnz
jmp
sbb
sub
dec
dec
pushf
add
test
sar
inc
ins
mov
mov
or
jbe
push
dec
adc
sbb
pop
lahf
mov
cmp
rcl
jbe
jmp
cmp
and
push
sub
add
retf
or
(bad)
cmp
ret
fstp
clc
sti
js
mov
fistp
gs
imul
cmp
out
dec
mov
mov
inc
mov
mov
jl
and
pop
or
jnp
mov
inc
xor
and
xor
ins
sub
inc
sbb
ret
mov
loop
ffreep
inc
push
xor
jmp
sbb
(bad)
out
cmp
mov
mov
call
jecxz
ss
leave
movs
mov
jae
repz
scas
mov
mov
(bad)
xchg
outs
(bad)
inc
scas
shl
inc
clc
sahf
lahf
cmp
mov
(bad)
xor
mov
pop
fmul
in
add
mov
dec
push
jnp
inc
idiv
and
mov
adc
jae
popa
xchg
(bad)
mov
push
lds
aam
mov
xor
pop
or
or
aaa
test
push
inc
pop
pop
cmp
popf
clc
cmp
jecxz
xchg
ret
jl
ja
fbstp
fmul
xchg
mov
sbb
add
(bad)
jl
mov
sub
fs
sbb
dec
mov
fcomp
arpl
or
ins
lods
sahf
push
imul
jbe
xchg
mov
xchg
mov
xchg
test
or
mov
push
hlt
jg
sub
cmp
repz
push
pop
xor
nop
push
push
mov
mov
in
outs
scas
mov
aas
test
test
xchg
fcom
and
hlt
add
add
push
movs
sbb
(bad)
enter
ror
inc
shl
mov
xchg
imul
fld
sti
push
jo
pop
mov
scas
stos
add
stos
and
dec
scas
les
cld
ds
jp
jnp
pop
sub
or
push
mov
repz
jp
push
scas
scas
lea
push
iret
mov
mov
jmp
hlt
pop
arpl
scas
xor
push
retf
and
jb
js
jb
aam
test
dec
inc
pop
and
loope
in
ficomp
and
outs
icebp
mov
gs
sbb
mov
jmp
jge
and
sbb
inc
les
xor
(bad)
sar
leave
sbb
mov
(bad)
in
push
mov
add
scas
add
pop
test
movs
pop
je
outs
push
and
add
dec
mov
test
push
ret
pop
sbb
adc
mov
movs
and
xor
ret
cmc
mov
popf
sub
xor
int
(bad)
(bad)
xor
out
out
mov
xor
inc
inc
(bad)
out
dec
mov
and
cmp
dec
fnstenv
enter
jmp
xchg
sahf
sub
lods
sbb
movs
pop
stos
pop
mov
cld
dec
cmps
pushf
imul
dec
je
mov
sbb
lahf
arpl
sub
ds
aas
in
xchg
jbe
sahf
mov
aad
ss
rol
adc
xchg
fsubrp
cmp
gs
lods
jp
xlat
ins
loop
adc
out
ins
je
ss
inc
jecxz
sbb
push
mov
aaa
test
imul
lahf
mov
lock
retf
fiadd
mul
push
inc
into
inc
jl
fdivp
xor
aam
fisub
pushf
aad
xor
je
shl
cmp
sbb
jne
daa
dec
jo
adc
or
call
pop
sub
popa
dec
mov
mov
pop
sub
(bad)
iret
cmp
(bad)
cmp
pop
mov
xchg
push
mov
xchg
jge
pop
jne
xlat
xchg
jmp
cmp
movs
jb
ins
push
xor
dec
sbb
pushf
mov
push
dec
addr16
stos
or
les
jge
mov
lock
cwde
repnz
mov
sbb
jg
xor
adc
sbb
and
push
fs
fst
cwde
mov
mov
inc
and
lods
(bad)
in
jecxz
into
ret
sub
test
daa
iret
test
pop
retf
cmp
mov
xchg
test
sbb
cmps
cmp
clc
xor
(bad)
and
lahf
ror
xor
mov
es
popa
pop
push
mov
adc
fcom
inc
fdivr
sub
jmp
mov
lods
mov
push
pop
or
cmps
cmp
fidivr
mov
push
dec
or
aad
test
nop
xchg
jb
or
aas
adc
jae
iret
nop
hlt
push
mov
fcmovnu
add
mov
loop
inc
jne
loop
sub
cmps
xchg
inc
cmps
popa
mov
dec
stc
and
dec
pusha
pop
mov
sbb
jne
lea
adc
sub
pop
adc
push
mov
push
mov
mov
jmp
je
test
popa
push
dec
sbb
jae
xor
fdivp
popa
adc
push
lea
or
xor
lea
fs
bnd
push
mov
or
or
mov
pop
mov
dec
out
xchg
inc
mov
sbb
(bad)
pop
cmp
addr16
fmul
pop
push
bound
adc
or
push
lock
add
shl
lahf
fidivr
jae
sbb
stos
cli
jmp
ror
xlat
out
push
ja
adc
push
rcl
mov
sbb
mov
jne
jle
xchg
mov
or
(bad)
(bad)
out
push
dec
pop
xor
cdq
sbb
jne
icebp
inc
das
mov
or
push
fidiv
sub
enter
push
xchg
ror
dec
xor
ficom
imul
cs
jge
inc
(bad)
push
mov
fild
dec
jp
sub
aaa
in
or
nop
aam
dec
sub
sub
out
jecxz
inc
or
fld
add
cmp
push
adc
mov
and
jb
nop
or
in
jns
fst
pop
jae
imul
rcr
mov
push
dec
pxor
sub
(bad)
or
out
cmp
lea
push
imul
mov
cs
fidiv
jg
push
pushf
xchg
int
add
stos
les
inc
sar
int
dec
ds
jno
popf
push
je
mov
cmps
mov
cmp
rcl
(bad)
xchg
dec
xor
cwde
test
push
push
(bad)
test
xchg
add
jbe
jnp
clts
push
sbb
ret
push
push
sbb
cmp
inc
adc
xchg
jmp
sahf
xchg
mov
icebp
aad
or
jmp
jecxz
mov
sbb
cmp
mov
inc
mov
fidiv
cmc
mov
pop
xor
or
div
rol
out
or
pop
shl
push
pop
inc
pop
cmc
mov
mov
leave
push
or
mov
aas
mov
out
jbe
sub
test
sti
out
call
fnstcw
pop
mov
and
clc
jns
dec
xchg
cli
and
pop
lea
sbb
sub
dec
jp
sub
jno
jb
mov
pop
cmp
inc
push
jno
in
pop
imul
jmp
fist
and
fisttp
cmps
ja
and
xchg
lea
sub
test
mov
push
cmp
adc
int3
popa
mov
or
sahf
in
and
mov
xchg
push
les
cmp
xor
in
or
jmp
shl
je
jae
dec
xor
shl
or
xor
mov
fld
or
cmp
mov
push
xor
imul
xchg
or
xchg
call
mov
adc
mov
hlt
mov
(bad)
call
stos
xor
add
mov
xor
aam
iret
add
aaa
imul
add
call
push
mov
rcr
mov
ja
in
mov
inc
and
xchg
xor
popa
neg
xchg
sbb
test
dec
pop
or
hlt
dec
clc
es
mov
pop
add
retf
push
cmp
scas
add
and
pop
or
push
inc
js
dec
cmp
mov
jo
je
pop
xchg
int3
xchg
es
push
dec
scas
enter
pop
in
fistp
aam
jnp
fcom
sbb
push
das
cmp
cmp
aas
mov
cmp
in
(bad)
add
pushf
sbb
mov
movs
jmp
cdq
cmp
and
bound
popf
stc
mov
or
sbb
movs
daa
xchg
push
xchg
xchg
add
dec
rol
jns
int
inc
cmp
movs
xchg
stos
xor
nop
cld
add
and
jle
mov
push
sti
mov
pop
adc
dec
mov
mov
jmp
cld
sar
test
mov
sbb
fs
pop
push
pop
mov
adc
aam
push
sbb
jp
ins
jnp
stos
sub
call
stc
inc
movs
nop
nop
dec
clc
mov
ror
adc
inc
les
adc
dec
(bad)
sbb
cdq
push
pop
rcr
lods
pushf
push
ret
das
cmp
icebp
cmc
es
(bad)
cwde
cli
mov
retf
(bad)
div
cmps
fwait
cmp
xchg
ds
jbe
lods
push
jl
push
inc
or
xchg
jne
pop
repnz
dec
movs
push
imul
movs
js
mov
mov
int
pop
hlt
frstor
imul
jno
hlt
xor
scas
push
test
xor
shr
sbb
jge
shl
std
fsubr
repnz
jae
retf
mov
pop
pop
xchg
and
repz
xchg
in
jne
sub
sub
loop
cli
mov
pop
daa
push
jns
sbb
adc
das
push
cmp
jne
mov
fist
add
xor
inc
adc
in
xchg
sbb
push
mov
mov
sub
sti
mov
nop
dec
out
mov
sub
jmp
push
xlat
in
out
clc
outs
cmp
ror
leave
test
out
gs
mov
cmp
push
push
pop
ss
add
stos
add
xchg
movq
push
pop
xor
stos
jl
jae
adc
scas
(bad)
push
xchg
fcom
(bad)
adc
push
scas
and
pop
test
fnsave
ret
fst
(bad)
xor
fwait
lahf
stc
aas
mov
imul
sahf
cmp
in
xor
push
jge
mov
adc
jbe
mov
jmp
dec
jae
jns
sbb
repnz
add
pusha
sbb
shr
pop
xchg
adc
cmps
dec
dec
mov
in
add
mov
test
jo
xor
mov
fcmovbe
or
mov
(bad)
pop
fdivr
pusha
sar
pusha
xchg
mov
xchg
cmc
xchg
cmp
add
aas
aad
mov
cmp
int3
lar
fbld
mov
lock
sbb
and
in
xchg
jnp
jmp
push
rcr
xor
test
sub
sbb
cld
push
cs
fs
test
push
mov
push
bound
add
sub
push
call
fsub
mov
fmul
mov
int3
and
or
pop
test
mov
jnp
sub
add
jmp
push
mov
cs
mov
jo
leave
addr16
(bad)
cmc
jb
push
xor
adc
push
clc
retf
rcr
jg
inc
movs
sbb
and
shl
push
scas
inc
aam
or
xor
mul
repz
add
jnp
inc
sub
sahf
pop
jg
mov
pop
ins
mov
popf
sub
int
imul
ja
fnstenv
popf
jp
repnz
xchg
les
imul
int
scas
retf
mov
ds
inc
mov
adc
std
xor
jb
dec
add
ret
fwait
xor
sbb
cs
daa
pop
cmp
jmp
jno
add
fwait
and
sbb
xchg
ins
mov
or
cmp
push
add
ja
ss
mov
xor
mov
into
popf
mov
or
pop
xchg
scas
leave
test
enter
push
imul
loope
pusha
mov
(bad)
mov
mov
shr
xlat
jb
mov
scas
sti
shr
push
inc
sbb
dec
cli
sub
lahf
mul
test
sbb
(bad)
add
repz
xchg
sub
js
mov
in
jmp
repnz
mov
in
(bad)
ror
pop
jae
es
imul
and
inc
mov
xor
mov
stos
into
mov
mov
mov
inc
mov
inc
(bad)
cld
adc
jo
stc
out
cmp
jge
xor
jp
sbb
mov
aaa
mov
repnz
out
rcl
inc
jne
xor
clc
push
movs
mov
mov
lahf
push
int3
xchg
and
sbb
aaa
xchg
fimul
leave
movs
cli
mov
jne
or
push
or
sub
adc
mov
(bad)
jbe
jo
adc
jecxz
xor
jb
sub
lods
fisub
inc
shr
mov
outs
test
retf
out
mov
adc
mov
outs
lods
add
and
loope
je
and
shl
into
aaa
fcmovbe
cwde
mov
push
loope
mov
and
cmps
out
out
dec
(bad)
jb
movs
popa
(bad)
(bad)
pop
inc
ror
gs
retf
add
pop
lods
mov
pop
pop
inc
out
xlat
in
mov
push
inc
lods
sub
push
scas
rol
jecxz
pop
jp
arpl
and
test
and
add
sar
fwait
dec
or
cmp
scas
jmp
cmp
or
jno
jne
pushf
push
sub
mov
sbb
xchg
repz
movmskps
movs
jge
and
xor
sbb
push
adc
inc
sub
clc
mov
dec
out
dec
mov
pop
xchg
cmc
sub
push
push
cdq
xchg
popf
ficomp
mov
inc
xor
sbb
jecxz
loop
mov
xchg
outs
loop
xchg
cmps
add
arpl
sbb
or
and
adc
cmps
adc
mov
jp
outs
pop
retf
sub
(bad)
dec
das
out
enter
xor
add
mov
lods
ficom
xor
jns
jecxz
xchg
cmps
pop
adc
jbe
lahf
sti
(bad)
leave
mov
dec
repnz
stc
or
cbw
test
movs
and
fldcw
pop
mov
das
out
je
jo
or
(bad)
add
test
popa
push
fcomp
ja
stos
jno
clc
aaa
test
sti
jecxz
lods
inc
fs
adc
mov
push
cmps
pop
pop
imul
ret
xor
cwde
inc
xchg
daa
inc
in
rcr
push
sbb
xchg
add
pop
xor
jo
push
bound
daa
sub
sub
push
push
cmp
cli
ror
repz
jbe
stos
outs
fistp
inc
in
add
cmp
cmp
pop
movs
pop
jge
xchg
ds
ret
out
pop
jp
lahf
(bad)
jmp
in
pusha
xchg
pop
(bad)
sbb
cld
fisttp
push
ins
rcl
mov
mov
mov
out
xchg
sbb
dec
ss
ret
jmp
aad
arpl
xor
push
mov
cmps
push
pop
fs
xor
xor
fucomp
cmp
adc
pusha
jno
push
je
inc
jnp
pop
jl
pop
xchg
(bad)
dec
mov
mov
std
add
dec
iret
push
push
lock
in
mov
(bad)
fmulp
pushf
push
pop
mov
push
push
pop
fdivr
ja
js
(bad)
loop
dec
mov
jmp
shr
jo
outs
enter
xchg
and
adc
ds
ins
iret
pop
pusha
jle
adc
into
aaa
push
test
sub
push
inc
dec
or
das
(bad)
jle
jp
xor
add
paddusb
cmp
and
add
sbb
pushf
jo
jnp
je
push
jge
out
adc
add
repnz
lahf
aam
cwde
(bad)
cmc
push
jmp
inc
mov
push
mov
popf
xchg
adc
sbb
int
fistp
cmps
in
ds
jmp
cmp
(bad)
xchg
mov
push
fdivrp
lahf
cmp
nop
sub
cmp
shr
mov
adc
outs
imul
retf
retf
xor
(bad)
cs
mov
movs
ror
or
pop
mov
retf
imul
add
gs
outs
mov
xchg
das
scas
ror
cvtdq2ps
out
adc
in
and
hlt
cmp
repnz
arpl
mov
sbb
shl
or
add
or
mov
fdivr
push
pop
bound
adc
or
sbb
cld
push
pop
shl
inc
inc
loopne
xchg
imul
jmp
add
push
jl
lods
cwde
out
push
adc
push
mov
mov
jbe
int
cmps
sub
jnp
clc
dec
mov
sbb
cmp
jbe
add
push
jmp
shr
test
push
repz
div
into
loope
data16
mov
dec
out
mov
imul
not
xchg
sbb
fwait
retf
es
out
mov
mov
ins
test
scas
xchg
mov
es
mov
movs
and
mov
loopne
or
ja
adc
xchg
fistp
loop
sbb
sub
mov
in
js
lods
inc
cmp
sub
add
inc
mov
dec
in
or
retf
into
vpshuflw
(bad)
ss
sub
lock
ficom
mov
xchg
call
nop
adc
mov
pop
adc
mov
hlt
out
xchg
call
xchg
shl
adc
mov
jp
mov
aad
push
test
stos
xchg
xchg
add
cmp
jp
mov
pushf
popf
imul
popf
or
cld
imul
dec
in
push
int3
mov
xor
jle
jmp
enter
or
jp
inc
inc
sbb
lea
mov
pusha
fsubr
adc
sub
inc
xor
dec
(bad)
and
mov
ja
xchg
or
pop
xor
jbe
pop
and
ret
mov
das
inc
rcl
(bad)
cli
(bad)
mov
std
test
push
clc
and
(bad)
fisttp
ins
xor
jmp
mov
ja
retf
shl
jb
scas
sub
pop
inc
std
jae
dec
jge
in
mov
pushf
ins
mov
push
(bad)
adc
adc
in
mul
add
jbe
aaa
xchg
push
xchg
std
shr
cmps
adc
pcmpgtd
stos
jle
xchg
rol
pop
fcom
inc
or
in
lea
and
daa
add
sbb
movs
dec
and
adc
pop
push
loop
xchg
clc
mov
xor
ret
daa
cmp
imul
xor
inc
jne
jl
or
popf
ds
jo
xchg
push
sub
jecxz
pop
in
js
push
pop
daa
jmp
mov
xchg
dec
pop
dec
pop
mov
iret
dec
jge
push
or
push
iret
pop
mov
(bad)
and
leave
loope
jle
jle
loope
in
(bad)
arpl
jecxz
sub
mov
jbe
sti
inc
mov
pop
cmps
into
js
inc
pop
ret
lea
adc
mov
mul
cwde
push
jbe
adc
fimul
mov
out
call
out
lods
jecxz
inc
sbb
push
icebp
test
cmp
xor
out
sub
popf
mov
mov
clc
icebp
xchg
xor
repnz
imul
xchg
push
jge
sub
shl
push
ret
and
xchg
mul
jns
jmp
enter
and
inc
mov
sub
fwait
mul
cmps
aaa
aam
sbb
mov
sub
jmp
int3
arpl
mov
cmp
pop
std
or
cdq
jmp
sub
jo
add
pop
sub
das
lods
in
shl
retf
cmc
cmp
clc
mov
mov
int3
xchg
push
lea
out
sub
mov
pop
cmp
mov
sub
rcr
pusha
add
ret
aad
mul
or
jg
jb
adc
push
movs
loop
es
(bad)
dec
push
xchg
xor
jle
das
and
xlat
shl
ret
adc
call
or
ins
sub
into
(bad)
mov
ds
xor
and
push
test
aaa
cmp
nop
test
dec
sbb
pop
lea
xchg
jne
out
mov
ffreep
jl
and
cdq
add
clc
retf
pop
push
add
sar
repz
dec
inc
dec
xchg
pop
das
jp
addr16
into
push
call
or
mov
sbb
or
std
loope
jmp
add
push
xchg
push
push
mov
(bad)
inc
add
aaa
and
add
jmp
cmc
stos
sbb
(bad)
(bad)
mov
mov
imul
sub
sbb
inc
push
cmp
js
xor
test
je
sbb
mov
jg
fild
loop
aad
pop
imul
in
ror
inc
repnz
mov
pop
fst
movs
adc
aam
sub
cmp
mov
addr16
add
cmp
adc
xchg
popf
xchg
lods
push
and
mov
sub
scas
adc
xlat
in
test
lahf
mov
pop
xchg
sbb
cwde
dec
mov
movs
bound
fcom
sbb
(bad)
jl
mov
push
jmp
sbb
popa
daa
nop
fmul
(bad)
cli
(bad)
sbb
popa
sub
jmp
push
jae
adc
(bad)
dec
mov
sub
arpl
and
xor
fnstenv
jno
dec
mov
or
cli
shl
xor
mov
mov
dec
psubw
push
mov
mov
or
push
test
fnstsw
jmp
mov
xchg
dec
mov
jb
repz
fadd
and
pop
and
mov
cwde
or
and
sbb
(bad)
jnp
jns
pop
shr
push
(bad)
neg
imul
dec
call
pushf
add
xchg
out
stos
pop
in
es
(bad)
pusha
rcr
hlt
adc
sub
scas
inc
ins
pop
mov
ins
inc
xchg
jns
push
aad
jmp
in
jecxz
and
or
shl
mov
jne
xchg
ins
fisub
bound
fld
or
xchg
lahf
dec
outs
pop
mov
xor
mov
inc
inc
push
mov
(bad)
popf
inc
ja
pop
ror
shl
jg
fdivr
sbb
push
shr
xor
popf
pop
ret
into
outs
xchg
xchg
int3
push
dec
xchg
push
push
pop
mov
sahf
adc
sub
retf
out
and
fwait
aam
in
arpl
retf
in
and
mov
push
jp
push
pop
xchg
inc
sub
jae
cmc
cmps
daa
nop
jmp
ret
dec
scas
sub
xchg
into
and
mov
sahf
mov
repnz
add
pop
(bad)
xchg
test
call
cli
shl
lahf
into
or
push
cmp
mov
leave
sbb
fmulp
sahf
pop
in
push
(bad)
mov
pop
xor
gs
in
imul
inc
push
scas
xchg
fwait
mov
pop
xchg
stos
cmp
loope
sbb
ss
dec
mov
popa
mov
or
enter
mov
iret
cmc
xchg
(bad)
div
sbb
test
fidiv
into
scas
sbb
and
int
push
pop
jo
inc
mov
clc
xor
adc
cmp
cmp
sub
scas
adc
push
jns
jge
mov
scas
xchg
xchg
outs
mov
repz
fcmovnb
or
and
xchg
sbb
sbb
jmp
jo
and
mov
ret
cld
inc
jecxz
and
loop
js
and
pushf
retf
daa
cli
sbb
fild
mov
in
loop
sbb
call
xchg
xor
test
mov
xchg
mov
pop
fidivr
dec
pop
enter
xor
enter
cli
retf
jmp
es
lahf
pop
(bad)
ds
sub
mov
push
inc
jmp
push
add
sbb
jnp
imul
xchg
loop
sub
les
add
add
nop
mov
dec
fisttp
push
cld
int
data16
mov
std
into
jb
dec
add
outs
sub
in
in
mov
ret
add
sub
lea
loop
mov
mov
mov
les
jecxz
(bad)
fcomip
sbb
and
mov
movs
xchg
fimul
addr16
shl
fst
ja
fimul
jp
aam
shl
cmp
sar
push
jbe
fadd
xor
inc
push
jmp
jns
cmps
sub
mov
fisub
lods
pop
mov
mov
aam
mov
scas
nop
or
out
cmp
xor
push
cli
(bad)
movs
dec
retf
cmp
stos
test
daa
xor
pop
fimul
sub
mov
ret
retf
out
pop
jecxz
inc
jb
sub
xchg
push
lea
and
cmps
jb
rol
or
cmc
mov
jl
xor
jo
or
jnp
mov
sbb
out
fstp
mov
push
leave
push
scas
and
movs
pop
xchg
arpl
fwait
adc
push
lods
mov
mov
cmp
jle
cmp
jl
mov
xor
inc
push
sub
sub
push
outs
lds
mov
add
popa
cmp
jle
xchg
imul
shl
mov
mov
push
jmp
push
and
pop
xor
retf
dec
scas
push
call
idiv
sbb
ss
retf
mov
sub
lea
sbb
push
mov
pop
or
sahf
js
out
into
hlt
iret
dec
repz
in
fidivr
jno
test
cmp
xchg
mov
pop
push
fist
shr
add
pop
mul
xchg
loop
(bad)
and
sub
fld
mov
mov
(bad)
xchg
xor
icebp
mov
and
mov
mov
lods
adc
pop
dec
nop
push
fld
jmp
cwde
xor
cdq
xor
cmp
aaa
pop
ret
mov
or
popa
jae
mov
and
add
retf
and
sbb
hlt
lock
clc
ins
pop
in
pop
lock
mov
in
push
cli
mov
cli
pop
mov
dec
cmp
jo
in
add
sti
xchg
data16
cli
inc
pusha
in
dec
inc
outs
jnp
(bad)
call
mov
jae
call
push
mov
dec
ins
xchg
xor
push
std
inc
inc
xlat
mov
cmps
jle
(bad)
mov
cmps
stc
adc
xor
pop
cld
sbb
cwde
or
ret
cmps
std
jmp
push
push
inc
ss
pusha
xchg
inc
test
jp
ret
mul
stc
jb
hlt
cmp
mov
pop
pop
aad
mov
sub
dec
inc
daa
sbb
xchg
adc
dec
movs
xchg
inc
test
push
mov
mov
mov
retf
test
sub
aas
adc
sub
push
inc
sub
push
pop
push
(bad)
jge
mov
lea
mov
jp
mov
and
pop
add
sbb
and
in
loop
lea
outs
and
push
mov
mul
and
aas
(bad)
or
cmp
test
pop
punpckhwd
mov
jnp
push
test
jb
cmps
out
inc
lods
fmul
push
stos
pop
jl
mov
cmp
sbb
cdq
push
and
lea
or
pop
xor
jmp
add
and
jae
cwde
out
sbb
and
push
fsubrp
movs
fwait
adc
push
dec
mov
push
cwde
mov
lea
pop
ret
mov
(bad)
dec
xor
sub
push
push
xchg
inc
lahf
mov
mov
sti
xor
mul
xchg
clc
sbb
pop
jo
adc
or
xchg
or
pop
and
pop
mov
mov
fadd
arpl
xor
stos
cwde
ret
repnz
cmps
stos
sub
dec
dec
xchg
xchg
lock
sbb
mov
inc
or
std
pusha
jnp
mov
stos
jns
jb
xchg
cmc
mov
in
jns
xlat
loopne
xchg
xor
push
aam
cmps
sbb
mov
jbe
int3
push
inc
sbb
sbb
jmp
pushf
je
mov
sbb
ja
std
mov
fdiv
test
push
xchg
mov
test
or
mov
(bad)
sub
vandpd
test
cdq
mov
push
add
scas
or
add
pop
xor
sub
mov
sbb
pop
ins
xor
aaa
mov
mov
fidiv
outs
sbb
dec
ror
push
stc
in
adc
imul
dec
sbb
xchg
rcr
mov
pop
mov
and
clc
xchg
push
adc
jge
cmp
jg
(bad)
push
imul
outs
mov
sar
call
cwde
cmp
xor
jb
push
xlat
loopne
into
jge
mov
fsub
add
sub
arpl
dec
dec
sar
cmps
jnp
test
sbb
hlt
stc
xchg
rol
mov
js
mov
mov
cmp
push
push
(bad)
in
bts
jns
pushf
pop
add
ins
and
daa
xchg
repz
repnz
mov
hlt
xor
mov
fisttp
inc
or
in
out
fild
idiv
popa
jb
and
int
or
mov
jbe
sub
mov
sub
mov
sub
push
mov
es
and
pop
jnp
jge
xchg
jp
mov
popf
ins
jmp
add
adc
adc
sub
inc
in
adc
dec
mov
fisttp
lods
sub
push
ficom
js
ja
pop
in
or
push
xor
not
popa
movs
ror
(bad)
pop
repnz
add
lahf
rcr
dec
mov
out
ror
enter
inc
dec
jbe
jne
push
mov
jbe
sbb
inc
pop
enter
jge
fldcw
repz
or
out
scas
push
sbb
pop
sbb
jmp
retf
push
hlt
dec
pop
pop
inc
ja
or
pop
pop
aam
imul
sbb
pop
xchg
stos
iret
add
inc
mov
loopne
inc
jno
xchg
dec
repnz
pop
push
add
cmc
mov
push
push
jp
mov
mov
jle
leave
adc
mul
fadd
cmp
aaa
daa
xor
arpl
add
jmp
or
mov
stos
push
inc
xor
sub
shl
cmp
sbb
pop
repnz
maskmovq
idiv
call
xor
enter
out
jne
out
jno
jns
je
imul
mov
mov
out
ins
jmp
mov
rcl
mov
pop
pop
mov
mov
push
rcr
push
adc
xor
je
popa
mov
aaa
ins
push
repz
sub
add
pop
mov
int3
pop
push
adc
stos
adc
shl
(bad)
rol
inc
shr
push
pop
mov
or
mov
ja
sub
pop
(bad)
out
scas
xor
test
fadd
aaa
xor
jecxz
mov
imul
xor
cmp
pop
xchg
gs
jg
(bad)
(bad)
cli
adc
pushf
and
loop
jecxz
popf
mov
mov
and
sbb
or
std
adc
jp
inc
xor
and
pop
jne
das
mov
adc
ret
(bad)
fld
mov
pop
xchg
mov
jmp
xchg
test
pop
lea
dec
ins
outs
aad
dec
(bad)
mov
cmp
idiv
mov
jbe
imul
sub
xchg
mov
cs
dec
dec
sbb
push
cmp
adc
inc
call
ins
mov
inc
inc
arpl
test
dec
sub
neg
push
lea
dec
test
repnz
inc
mov
ficomp
inc
or
adc
test
test
mov
inc
or
jb
mov
xchg
retf
test
inc
mov
mov
adc
mov
jecxz
add
arpl
pop
movs
test
leave
mov
and
dec
jae
xor
(bad)
sbb
repnz
enter
and
call
cmps
jp
fdivr
mov
cmps
mov
fwait
lods
xor
lods
bound
dec
xor
xchg
dec
add
mov
push
add
mov
push
jl
pop
jne
pusha
xor
scas
mov
sub
cmps
xchg
xchg
scas
sar
jp
cmp
push
test
daa
inc
pop
test
ret
mov
xor
cdq
add
xor
pop
(bad)
and
outs
ret
ror
or
pop
adc
cli
push
retf
out
lahf
push
pop
xchg
xchg
inc
setbe
push
cmp
jno
push
in
movs
pusha
cmps
dec
and
push
test
arpl
mov
in
inc
push
(bad)
jbe
(bad)
movs
shr
ds
fistp
gs
movs
push
mov
or
or
fstp
ins
or
clc
mov
or
and
mov
inc
push
arpl
inc
lock
mov
call
xchg
mov
jno
cmps
pop
sbb
or
push
fisub
loopne
iret
fnsave
popf
test
mov
leave
inc
enter
rcl
jg
sub
lods
xor
movs
mov
and
sub
or
pushf
sub
ror
shr
xor
scas
adc
mov
shl
aas
xor
xor
aad
ja
mov
(bad)
icebp
sbb
jne
add
lahf
ss
push
lds
xchg
dec
xor
mov
jae
gs
test
fs
jo
ret
mov
and
inc
adc
inc
div
cs
inc
mov
jg
jb
push
sar
or
ins
daa
dec
cs
jb
mul
mov
jp
pop
inc
jg
leave
test
in
out
outs
fldenv
movs
inc
pop
jno
adc
pop
in
xchg
rcl
xchg
mov
mov
add
or
movs
jo
mov
ret
ror
mov
in
loope
dec
jno
addr16
sbb
inc
loopne
mov
xlat
test
mov
ins
xchg
xlat
sbb
arpl
cmps
and
mov
jb
mov
fcom
dec
inc
mov
xor
xor
pop
(bad)
sti
sahf
jmp
push
lds
inc
jl
retf
shl
xchg
dec
imul
(bad)
fldenv
xor
dec
cmc
cld
push
lock
sbb
lock
push
adc
jmp
int
and
ss
mov
aad
xlat
jl
cmp
shr
(bad)
int
mov
daa
and
cli
fist
mov
mov
ins
pop
mov
or
mov
and
sub
jns
fwait
push
and
sub
sub
sbb
mov
fisttp
and
(bad)
push
add
sub
and
add
cmps
aad
push
loopne
xchg
(bad)
mov
je
scas
loop
adc
dec
xchg
dec
dec
cli
or
movs
push
shl
jp
stos
xchg
loop
add
fs
call
inc
scas
sbb
mov
add
push
jnp
add
out
or
or
shl
fisub
or
repnz
loopne
add
jno
ret
xor
addr16
add
les
repz
pop
and
dec
xor
cmp
sahf
lea
pop
fwait
jl
push
cmp
ds
leave
in
cmp
sbb
xchg
adc
push
(bad)
ficomp
jae
in
(bad)
mov
out
mov
js
add
jo
dec
cmp
lods
xchg
inc
sahf
mov
test
cld
dec
xor
mov
fild
(bad)
adc
and
sti
sti
sub
dec
jg
ins
xor
lea
sahf
mul
jmp
movs
in
fst
pop
mov
xor
pop
jg
add
syscall
repnz
or
adc
pop
pop
mov
(bad)
pop
or
scas
jae
xor
iret
jb
cwde
push
sbb
jae
inc
cmc
dec
inc
adc
jb
sbb
fisub
xor
adc
aaa
add
sub
push
in
jo
bound
repnz
pop
or
mov
mov
scas
jp
jne
cmp
jg
adc
leave
dec
or
cmp
mov
dec
xchg
add
ss
mov
cld
pop
lds
push
push
push
icebp
leave
xlat
nop
xchg
jbe
mov
fisttp
(bad)
int3
vmovlps
test
aad
bound
sbb
or
push
lods
mov
xor
rol
push
xor
pop
push
or
mov
xchg
jge
sar
inc
or
cmp
mov
in
xchg
xchg
call
sub
mov
lahf
adc
mov
push
les
sub
adc
out
loopne
adc
fsub
jno
adc
inc
add
dec
pop
lahf
mov
mov
or
fdiv
xchg
pop
sub
and
inc
cld
aaa
mul
and
jae
rcl
add
mov
jb
and
sub
sub
jecxz
inc
pop
add
rcl
sub
movs
dec
or
fist
nop
xor
je
dec
das
push
xchg
mov
mov
out
pop
add
outs
shl
mov
test
cwde
aas
in
jp
mov
cmp
pop
arpl
jl
es
retf
mov
aas
fcomp
jge
xor
dec
add
mov
les
pop
push
sbb
mov
test
push
inc
sar
cli
xchg
adc
enter
add
jge
adc
inc
sub
jecxz
fbstp
clc
xlat
jnp
out
std
jno
xchg
ja
xchg
sub
push
pop
and
mov
out
lock
cmp
inc
jp
ret
adc
mov
jmp
fidivr
call
mov
pop
js
fwait
mov
mov
add
xchg
bound
dec
jo
shl
arpl
loop
cli
xor
mov
cwde
out
or
out
xor
push
adc
xchg
call
lea
jne
xchg
inc
mov
in
mov
stos
pusha
xchg
aas
sti
daa
jne
lods
adc
stc
pop
cmp
sbb
push
add
push
daa
cmp
lds
scas
sbb
shr
adc
icebp
(bad)
lods
in
sti
or
test
inc
test
inc
fdivp
test
push
xchg
mov
stc
mov
clc
pop
add
stc
imul
sbb
scas
clc
iret
mov
mov
outs
and
sbb
in
aas
fiadd
ss
mov
in
xchg
push
cmp
outs
adc
das
mov
xchg
fst
push
jnp
retf
inc
(bad)
pop
mov
adc
mov
mov
movs
push
ins
or
(bad)
ss
arpl
xor
(bad)
xchg
mov
xlat
sbb
scas
es
scas
popa
mov
jmp
sub
cwde
pop
xlat
cmp
into
lea
sub
push
loop
das
push
daa
rol
dec
push
cmp
(bad)
int
jne
(bad)
nop
xchg
fsubr
jae
adc
mov
inc
jge
in
lahf
shr
xchg
imul
push
cs
stc
mov
movs
and
or
mov
adc
add
pop
push
sub
icebp
jb
push
enter
mov
dec
dec
adc
xchg
sbb
ds
sub
int3
sti
addr16
cdq
in
gs
jmp
inc
dec
sti
and
push
fs
or
fcomp
stc
push
push
fisttp
push
adc
(bad)
in
(bad)
fcom
mov
aad
loope
inc
inc
mov
xchg
call
aam
test
pop
sti
cmp
mov
cmp
push
xchg
enter
sbb
jecxz
push
push
add
dec
femms
mov
imul
and
je
test
je
mov
cmps
cmp
fimul
add
push
cwde
add
xor
stc
fcomp
out
ins
sub
cmps
sbb
outs
ja
outs
(bad)
shr
movs
call
jbe
pusha
fwait
enter
sbb
pop
rol
imul
xor
ror
test
cmp
mov
add
xor
outs
jns
fldcw
mov
and
gs
retf
retf
adc
repnz
sub
mov
js
xor
pop
outs
adc
mov
icebp
sub
add
loop
mov
mov
bound
add
(bad)
sub
xchg
rep
dec
hlt
inc
arpl
push
mov
cmp
(bad)
xor
mov
aas
adc
push
ss
outs
mov
or
jns
call
in
cmps
arpl
popa
lock
inc
psrlq
ret
test
or
jp
jnp
out
mov
push
lock
inc
and
arpl
xchg
aam
retf
test
xchg
sub
in
std
outs
xor
mov
stc
cwde
pop
mov
lods
jp
xlat
call
mov
outs
clc
call
outs
xor
mov
sbb
addr16
sub
aas
icebp
call
icebp
cmp
fidivr
test
sub
or
inc
ins
fimul
addr16
mov
pop
pop
nop
(bad)
outs
add
lods
dec
dec
pop
fidivr
mov
pop
adc
(bad)
clc
(bad)
sbb
add
test
inc
in
retf
(bad)
icebp
jp
sahf
dec
retf
or
push
shr
sbb
stc
push
mov
xchg
jl
inc
js
rcr
pop
cld
jnp
xchg
inc
adc
ret
outs
pop
ins
aad
fwait
repz
call
test
xchg
fld
adc
jg
int
pop
ins
scas
mov
adc
stos
ss
jb
sub
lods
lods
daa
ss
arpl
mov
xor
popf
pop
shr
jge
imul
xchg
or
retf
mov
sub
mov
dec
mov
push
cmp
fld
cs
cmp
jnp
cmp
pop
push
sub
mov
sbb
stc
pushf
adc
add
sahf
sbb
mov
pop
in
test
jl
jmp
setnp
clc
fstp
pop
dec
add
lods
dec
dec
retf
xor
add
jno
or
cdq
xor
js
push
or
pop
pop
aam
aad
ins
sub
add
and
mov
push
jno
mov
es
mov
pop
ins
retf
xchg
jmp
outs
out
into
xchg
jl
shl
out
xlat
push
test
mov
pop
lds
icebp
jb
jbe
dec
test
dec
dec
fsubr
inc
push
sub
scas
(bad)
push
pop
xchg
push
sub
jb
cmc
mov
dec
idiv
jg
fdivr
inc
int
jecxz
mov
add
call
sbb
and
jl
jmp
ds
inc
and
movs
es
cmp
mov
lds
fmul
sub
pop
mov
jne
aam
lods
or
push
out
movs
cli
retf
inc
jecxz
(bad)
aad
addr16
cwde
in
dec
sar
les
pop
pop
lods
or
mov
test
je
xchg
imul
cmps
daa
ror
xlat
mov
mov
sub
jns
int3
ds
inc
je
and
aam
popf
jmp
and
movs
jecxz
outs
push
int
fidivr
cld
dec
es
ds
les
(bad)
or
jmp
inc
add
icebp
add
ret
repz
push
dec
jmp
pop
and
pop
sbb
or
mov
xor
sqrtps
aam
ja
push
into
xchg
ret
dec
outs
lods
push
xor
fwait
cmp
jge
fimul
in
(bad)
out
int3
scas
jae
sub
mov
mov
mov
mov
xor
jns
aas
movs
pop
aaa
lods
mov
sahf
push
sbb
gs
lods
mov
sahf
ja
push
inc
lock
inc
inc
inc
mov
and
je
sbb
jecxz
fnstsw
ins
cmps
mov
lds
pop
or
retf
sti
cmp
jns
xchg
xchg
cmc
jae
adc
xchg
lock
push
int
dec
push
sahf
out
bound
add
or
sti
jb
out
ss
data16
(bad)
nop
push
std
les
aam
in
xchg
in
sar
int3
cmc
push
xchg
xor
push
loop
xchg
and
repnz
retf
arpl
sub
push
test
lock
xchg
and
jbe
mov
jae
aaa
xchg
mov
test
inc
mov
fmul
mov
inc
ficomp
sti
xor
(bad)
ss
mov
int
sbb
and
adc
fs
(bad)
or
push
fidivr
pop
pop
fst
add
push
push
aad
adc
push
test
dec
hlt
add
fbld
adc
stc
hlt
mov
and
adc
jg
scas
outs
ins
popa
outs
fnstsw
test
(bad)
arpl
(bad)
(bad)
aam
cmp
maxps
out
test
jmp
jne
(bad)
push
adc
xchg
std
pusha
jecxz
lods
push
out
xor
jmp
std
fist
call
pop
nop
jno
daa
out
xchg
and
sbb
out
add
pop
inc
iret
pop
cmps
test
in
aam
(bad)
aas
mov
push
or
inc
cmp
mov
fsubr
(bad)
jecxz
mov
repz
xor
add
imul
pop
std
pop
xchg
push
repnz
loope
dec
inc
and
cmp
pop
fisttp
or
pusha
into
push
in
jmp
cmp
xor
cmc
pop
in
nop
int3
mov
cmp
outs
or
xchg
jns
mov
nop
aam
or
jbe
and
add
mov
xor
sar
test
mov
(bad)
mov
std
test
pop
stc
or
ins
sub
and
add
test
xor
(bad)
inc
adc
popf
cwde
pop
sub
jmp
pop
fld
push
out
mov
sbb
enter
loopne
or
pop
add
out
outs
or
ins
pop
add
fadd
popf
call
retf
mov
xor
dec
cld
call
jne
push
ret
dec
js
sub
xchg
lock
std
or
jne
frstor
mov
pop
aam
test
dec
ss
jmp
sbb
pop
outs
mov
out
fs
mov
push
or
jne
ficomp
shl
mov
mov
repz
xlat
mov
cmp
inc
push
mov
sub
push
scas
les
test
in
rol
mov
or
mov
imul
cmp
jnp
(bad)
mov
sbb
iret
xor
jecxz
mov
mov
aad
ins
push
in
(bad)
sub
and
adc
cli
sub
xlat
loopne
mov
jecxz
iret
xchg
sub
imul
xchg
push
inc
shl
push
iret
fs
ss
dec
cld
jb
push
fwait
js
test
fadd
repnz
push
adc
adc
jg
in
imul
dec
clc
mov
xchg
test
aam
mov
xchg
sbb
or
xor
jp
or
pop
lods
jmp
jno
sub
sub
jo
outs
and
jae
lock
and
sub
mov
sbb
xchg
push
sub
cmp
pop
lds
pop
sub
push
mov
ror
ins
das
jo
or
push
rol
pop
sti
sub
cmp
pop
push
pop
sub
add
mov
sti
xlat
ins
mov
and
pop
mov
pop
mov
adc
xchg
sbb
call
mov
ret
mov
repnz
mov
jmp
inc
add
pop
dec
imul
imul
(bad)
fist
retf
outs
jno
xchg
xchg
aad
xor
sbb
sbb
cmp
inc
cmp
ror
and
and
push
mov
dec
mov
mov
test
jae
shl
push
psubb
(bad)
jo
cmovge
int3
test
repz
movs
xchg
jle
cwde
shr
out
push
inc
in
mov
sbb
fdivr
sbb
or
fsubr
push
test
imul
mov
mov
jl
cmps
add
or
push
mov
push
mov
fidiv
retf
stc
push
mov
xor
inc
adc
dec
stc
mov
out
dec
ret
(bad)
scas
add
jg
fimul
inc
inc
shl
ins
mov
mov
xchg
stos
mov
shl
mov
dec
adc
es
xor
push
pop
sbb
cmc
jae
es
mov
cmp
mov
push
mov
xchg
push
xchg
(bad)
aad
es
stc
and
fucomp
mov
es
inc
sti
add
lods
les
mov
pop
push
cmps
adc
inc
loope
mov
cmp
(bad)
in
inc
cmps
sahf
scas
or
add
sub
aad
xlat
(bad)
fmul
sbb
and
jge
sti
pop
lods
loop
lea
retf
inc
pop
cmp
jmp
cmc
mov
cmp
pop
loope
adc
rcl
push
jb
mov
and
leave
and
inc
daa
into
loopne
push
pushf
push
xor
fcmovb
add
mov
add
jge
mov
jbe
mov
mov
movs
cmp
(bad)
jns
pop
xlat
jno
xor
aam
js
cmp
xchg
mov
repz
mov
mov
mov
sbb
push
ins
mov
push
jg
sbb
pop
add
cmp
ret
push
test
out
push
or
mov
mov
ror
aaa
mov
cdq
or
cmp
mov
sahf
inc
adc
or
mov
push
ins
cmp
repnz
xchg
arpl
imul
leave
pop
add
pcmpeqb
add
repnz
lahf
sbb
push
sbb
dec
int3
mov
test
jb
jne
(bad)
hlt
pop
ror
mov
add
mov
mul
mov
call
lds
sbb
call
(bad)
mov
push
or
xor
xchg
in
inc
mov
dec
mov
mov
pop
xor
lods
pop
jmp
mov
fist
loope
neg
and
and
int
popa
stc
mov
rol
js
mov
and
mov
idiv
add
int
and
sub
nop
ds
lock
hlt
push
mov
(bad)
or
inc
(bad)
std
not
mov
pop
idiv
fistp
test
and
sbb
addr16
lahf
shl
sar
mov
inc
push
mov
daa
fdiv
cmp
add
ror
nop
lahf
out
ins
call
cmc
lahf
pop
iret
rcl
mov
dec
dec
loop
dec
cmps
movs
xor
xor
test
jb
call
inc
or
fs
cmp
shl
lock
mov
stos
ds
sbb
aaa
dec
call
mov
in
or
push
inc
unpcklps
pop
clc
or
les
retf
pop
call
and
scas
enter
rcl
dec
push
inc
add
lods
imul
das
fist
add
xor
ficom
jg
sub
movs
pop
jmp
fst
jecxz
mov
fldcw
dec
mov
arpl
(bad)
(bad)
adc
scas
(bad)
std
stos
adc
test
mov
dec
mov
or
cmps
mov
je
mov
sbb
cmc
jecxz
push
mov
(bad)
arpl
mov
cmp
bound
push
ss
cmp
call
jecxz
jns
mov
int3
out
dec
xchg
dec
cli
pop
stos
(bad)
mov
pop
pushf
jle
je
mov
pcmpgtw
cmps
(bad)
and
mov
(bad)
dec
xchg
repnz
jge
outs
xchg
pop
mov
pop
repnz
das
mov
add
mov
and
in
ret
sbb
bound
inc
call
add
sbb
rol
cmp
lds
sbb
mov
and
sbb
push
add
in
sub
retf
mov
mov
addr16
sub
cmp
cld
ins
lds
xlat
push
fist
neg
ja
ja
cmp
push
out
push
mov
mov
ja
aam
and
adc
popa
mov
jne
das
test
sbb
xchg
mov
adc
dec
sub
cdq
movs
inc
loop
inc
stos
push
je
xchg
addr16
lea
pushw
jno
or
inc
popf
push
ror
cmp
push
hlt
(bad)
retf
rcr
cs
or
cmps
mov
movs
pop
aas
adc
adc
retf
aaa
adc
in
setp
pop
aam
loope
std
inc
and
xor
(bad)
adc
mov
inc
xor
mov
xor
aad
sti
sahf
scas
pushf
or
xchg
jmp
pop
pop
sub
pop
imul
inc
adc
retf
cmp
dec
xor
xor
retf
push
xor
add
aad
je
cwde
jnp
cmp
jecxz
nop
inc
sbb
ss
fidiv
not
int3
std
jmp
add
jae
jno
fnstsw
mov
pop
mov
push
or
enter
enter
lock
and
ja
sbb
xchg
pop
xchg
mov
push
jbe
arpl
sub
xor
in
xor
jmp
je
sub
lds
retf
sbb
adc
icebp
mov
xchg
pop
and
push
sbb
loopne
mov
add
cmp
dec
inc
or
data16
mov
rcr
mov
add
out
sub
mov
dec
cdq
jp
dec
(bad)
push
mov
add
test
jns
lahf
mov
dec
(bad)
gs
mov
push
loop
cmp
test
jl
(bad)
xor
test
nop
and
add
loope
test
(bad)
pop
imul
push
(bad)
popa
add
dec
call
retf
in
xchg
xor
adc
add
and
ror
out
adc
sub
jp
mov
movs
dec
or
sti
mov
out
out
fld
sub
loop
jp
repnz
jp
inc
rol
in
pop
bound
hlt
inc
mov
pop
mov
movs
jg
jg
rol
cmc
repz
pop
inc
scas
jne
mov
scas
not
dec
sets
cmps
xor
fsub
in
shr
xchg
mov
and
or
or
cmp
cmps
lods
pop
ret
push
leave
jle
daa
push
cmp
call
cvttps2pi
or
push
loop
inc
push
push
cmp
mov
push
mov
dec
pop
fwait
fwait
ror
xlat
pusha
test
sbb
cmps
inc
test
sbb
mov
inc
and
xlat
add
mov
out
cmp
cmp
sbb
adc
popa
and
xchg
dec
sub
shr
sahf
shl
add
and
and
push
or
dec
dec
jns
(bad)
shl
cmp
test
and
mov
retf
mov
mov
xchg
mov
(bad)
clc
(bad)
cmp
leave
jmp
fisub
jno
pusha
pop
ret
cmc
adc
std
and
nop
js
in
xchg
cmp
pop
xor
jae
and
lods
les
aas
into
or
ficomp
into
test
push
imul
mov
mov
mov
sbb
xor
or
mov
mov
add
neg
loopne
ret
jge
pop
xor
in
icebp
bound
data16
adc
xlat
push
sbb
call
ret
inc
cmp
push
test
mov
sahf
test
pop
imul
jae
or
dec
or
push
cwde
cmp
xchg
pushf
cmc
mov
push
jbe
je
cs
fs
push
retf
push
(bad)
push
cmp
sbb
test
loope
pushf
ins
cld
addr16
in
mov
popf
call
xlat
mov
jmp
xchg
fsub
cmps
fisubr
pop
mov
mov
fsubr
repnz
jmp
sub
loop
mov
icebp
iret
jge
cmps
psrad
jno
popa
clc
cdq
push
pop
inc
lds
inc
dec
add
push
xchg
test
outs
xor
rcl
out
fiadd
mov
adc
push
or
in
hlt
mov
std
jno
scas
mov
jmp
mov
call
cmp
mov
in
fs
cmps
push
pop
mov
fisub
fwait
mov
sti
jo
test
fiadd
(bad)
js
aad
fstp
add
and
mov
aad
lahf
out
cmp
mov
imul
mov
pop
inc
shl
cld
out
inc
jnp
test
mov
int
dec
and
or
sub
mov
jnp
adc
test
aad
test
or
mov
jl
repz
ss
clc
mov
xchg
retf
nop
cld
xchg
movs
push
and
icebp
rcr
rol
fimul
out
inc
add
mov
dec
jl
xchg
mov
push
cmp
or
(bad)
int
mov
pop
xchg
in
mov
and
out
push
xchg
stos
fs
out
push
or
add
cld
outs
jg
out
daa
sub
stos
cmp
and
cmp
inc
mov
stc
mov
or
or
sub
imul
mov
cmp
(bad)
adc
mov
dec
call
inc
mov
pop
mov
mov
xchg
mov
cdq
lea
fstp
cli
adc
xor
ror
push
movs
pop
mov
mov
mov
xchg
cmp
stos
daa
cmps
cmovge
dec
push
jno
(bad)
aad
or
mov
test
jmp
xor
dec
sbb
mov
into
out
(bad)
sti
mov
mov
pop
sar
fs
scas
or
cwde
movs
and
mov
fiadd
and
and
fs
aam
popf
adc
xor
push
jg
dec
lock
jp
mov
dec
pop
test
jmp
jl
pushf
fcom
pop
sbb
sbb
or
nop
sar
xchg
stos
movs
inc
aaa
cmc
mov
dec
jo
inc
cwde
fsub
test
cmps
pusha
aad
pusha
adc
sbb
ffree
add
xchg
and
das
dec
pop
cwde
and
mov
js
outs
retf
xor
xor
std
aam
mov
icebp
or
movs
stos
int3
xchg
mov
cmp
push
xor
push
push
push
sub
pop
loop
jbe
mov
dec
push
mov
div
pop
arpl
dec
cmp
lds
push
or
mov
xchg
(bad)
in
add
movs
test
ret
iret
sbb
mov
stc
xor
jge
mov
ins
test
sub
(bad)
lock
(bad)
(bad)
sub
ins
out
add
xor
fwait
ds
mov
cmps
imul
mov
add
movs
shl
cmp
lea
aam
or
cmp
movzx
call
sub
sbb
scas
clc
stos
mov
xchg
pop
or
and
jne
cmp
push
mov
adc
ret
out
or
ja
xchg
push
shl
inc
out
aad
sar
movs
and
and
pop
cmc
or
jl
or
je
in
cs
mov
and
mov
stos
enter
mov
mov
xor
mov
xchg
cdq
mov
leave
inc
inc
inc
out
mov
enter
mov
pop
call
adc
and
mov
js
and
cmovg
(bad)
pop
pop
pop
add
xor
bound
adc
gs
cmc
cmc
lahf
adc
mov
mov
push
sbb
cmp
loop
jno
lods
in
sahf
sbb
jae
xchg
cmps
or
out
dec
ins
out
dec
ds
call
xchg
sub
pushf
add
and
out
vpavgw
dec
jae
cli
fs
out
(bad)
jmp
in
fstp
fwait
mov
push
push
or
out
inc
push
xor
lahf
fnstcw
xor
(bad)
push
arpl
pop
popa
loope
lahf
rcl
sub
loopne
inc
sub
outs
mov
xchg
add
cmps
mov
sub
popa
jle
pop
sar
nop
sbb
fld
outs
sub
in
scas
xchg
jle
imul
or
mov
mov
inc
stos
imul
out
leave
jo
sbb
push
fisttp
pop
mov
push
mov
mov
pop
and
jo
dec
fwait
(bad)
sbb
push
lods
dec
inc
and
xchg
das
in
fsubr
fcom
rcl
cmc
mov
xor
xor
in
sahf
loope
loopne
mov
int
inc
mov
pop
aad
adc
push
add
pop
lods
pop
nop
aad
pusha
out
out
fsubr
lock
lea
dec
pop
push
test
and
push
addr16
pushf
inc
ins
mov
or
pop
jg
call
mov
jnp
or
or
test
aad
lahf
sbb
pop
push
sahf
xor
aaa
mov
icebp
or
cmp
xchg
iret
outs
cs
jb
mov
add
xchg
sbb
cmp
or
mov
(bad)
push
adc
mov
aad
jne
cmps
add
pop
pop
jns
sub
fstp
add
add
push
mov
push
je
icebp
call
jle
jns
lea
fcomp
je
dec
sub
es
jns
addr16
push
jl
mov
arpl
jmp
jae
cwde
mov
cli
cmc
mov
dec
in
arpl
in
arpl
and
and
push
nop
jge
mov
lahf
mov
sub
call
add
shr
lods
scas
(bad)
mov
push
stc
ret
jp
add
out
imul
ds
loope
cmps
jmp
stc
jbe
jg
shr
add
sbb
or
data16
pushf
push
sar
stos
or
cmp
inc
xor
gs
sub
jmp
push
and
idiv
pop
(bad)
in
test
mov
fadd
and
push
stos
mul
mov
mov
sar
cmp
pop
jo
frstor
dec
add
sbb
jnp
sbb
xor
lea
ss
cmps
iret
adc
xchg
das
std
mov
or
mov
xchg
ret
xchg
mov
retf
sbb
pop
inc
fiadd
lea
fisttp
mov
mov
sbb
add
inc
neg
mov
pop
aas
mov
inc
out
fisttp
fwait
mov
jns
lock
xlat
add
(bad)
cdq
ss
pop
hlt
jmp
in
(bad)
sub
or
add
sub
mov
out
sub
dec
stos
mov
inc
xchg
enter
pop
fcomp
test
adc
movs
pop
jne
fisubr
xor
(bad)
push
stc
inc
xchg
test
mov
ror
inc
fcomp
pop
lods
out
pop
sub
gs
cmp
in
lods
data16
xchg
mov
in
ss
jge
in
push
mov
(bad)
sub
mov
sbb
dec
push
pop
cmp
or
add
retf
rep
add
cmp
dec
bound
out
and
enter
jp
fld
fstp
ret
clc
ins
adc
mov
add
fnsave
in
cmc
sub
cld
neg
push
mov
movs
mov
add
mov
inc
fist
mov
(bad)
mov
push
sbb
dec
dec
and
sbb
je
push
out
xchg
es
push
retf
call
cmc
jp
std
ret
sub
icebp
(bad)
and
jo
xor
fxam
xchg
mov
mov
test
ins
mov
mov
xchg
sub
mov
(bad)
clc
ret
sub
mov
pop
out
xchg
or
and
and
mov
imul
dec
out
mov
sbb
jnp
cwde
push
loop
sbb
pop
lds
movs
cmp
mov
pop
and
pop
adc
mul
sbb
mov
or
inc
loopne
pop
jmp
int3
xchg
inc
in
and
sub
lods
push
push
ret
addr16
(bad)
jg
dec
cs
jnp
sbb
leave
punpckhdq
(bad)
outs
mov
xor
int
xor
pop
stos
cmp
pop
mov
sbb
clc
pusha
aaa
cld
pop
daa
cmp
icebp
pop
sbb
fadd
mov
push
and
dec
lds
dec
out
push
inc
jo
add
cmp
adc
stos
and
xor
movs
in
rol
shl
cmp
imul
push
shr
or
push
(bad)
mov
adc
ins
popf
clc
shl
lods
lds
mov
outs
push
out
xchg
xor
jle
js
adc
pop
daa
int
movs
loopne
(bad)
sbb
rcr
push
cmps
mov
jnp
add
div
retf
push
call
aas
add
adc
cmps
popf
inc
mov
and
std
sbb
iret
mov
fwait
fwait
test
out
cmps
jbe
mov
cdq
or
mul
rcl
in
add
fbstp
pop
stos
pop
cmps
jno
pop
(bad)
out
dec
xor
mov
enter
fsubr
push
mov
lea
pop
cdq
das
fbstp
push
jge
inc
inc
gs
js
fsub
out
not
(bad)
hlt
xor
out
cmps
sub
aad
pop
adc
ins
(bad)
daa
dec
and
push
sub
(bad)
call
in
mov
sbb
and
pop
frstor
out
std
cmp
dec
ret
adc
pop
push
pusha
les
in
loop
sbb
cmp
in
or
test
stos
adc
jp
lahf
(bad)
inc
rcr
or
adc
ins
mov
mov
mov
pusha
pop
lea
call
inc
add
daa
imul
mov
outs
mov
mov
add
push
push
and
sub
xchg
jae
data16
jecxz
push
inc
icebp
dec
ror
jb
push
test
das
arpl
cmp
and
push
dec
push
dec
dec
sti
rol
xchg
xchg
cmp
or
(bad)
arpl
dec
sub
cwde
sub
inc
imul
mov
and
xor
fnsave
sub
cmp
rcl
into
inc
jmp
fwait
push
jp
push
and
xchg
mov
test
adc
test
repnz
pop
fisttp
gs
add
rcr
adc
push
fild
in
xchg
cmc
push
iret
js
jmp
mov
add
jb
push
ss
cdq
jmp
rcr
outs
jns
aad
adc
adc
fcos
shr
inc
js
jge
mov
push
jg
(bad)
xchg
cmps
mov
fucomp
repnz
rcr
das
dec
ja
or
outs
leave
(bad)
cli
sub
call
rcr
mov
int
push
sub
sub
lds
sbb
(bad)
mov
adc
pusha
pop
lahf
js
je
push
(bad)
or
add
repz
sbb
shr
pusha
loop
cmp
pop
out
cmp
jmp
nop
add
mov
les
ins
fwait
ja
ret
test
xchg
stos
dec
lods
push
mov
sti
add
pop
and
mov
test
fdiv
fidivr
add
aad
and
sbb
mov
out
adc
cmp
pop
sbb
sub
mov
mov
adc
std
(bad)
xchg
jnp
inc
mov
inc
xlat
cmps
inc
xchg
or
cmc
pop
aaa
ret
cmp
or
ins
ret
ficomp
movs
sub
cmp
std
inc
pushf
mov
mov
push
dec
jno
add
dec
xchg
sub
and
cmp
dec
cmps
mov
mov
jbe
cmp
jb
xor
fidiv
xchg
aas
mov
fs
aas
push
out
imul
mov
pxor
ficom
into
mov
cmc
stos
adc
mov
lock
(bad)
pop
enter
test
int3
ds
in
xor
mov
aaa
cld
clc
pusha
mov
js
xchg
dec
ret
ja
mov
movs
cmps
sub
ss
sbb
push
inc
js
and
aas
push
cmps
push
push
xchg
xchg
iret
nop
adc
fdiv
int
pop
sti
icebp
scas
leave
xlat
pusha
inc
cmp
arpl
push
bound
or
xor
mov
ins
call
in
ss
sub
mov
gs
add
sub
scas
repz
and
xchg
xor
xor
jno
std
in
jne
sub
add
cmc
sbb
ins
mov
jmp
rcl
fwait
sub
inc
jmp
cmc
push
ret
inc
call
in
xor
add
pop
pop
adc
xchg
sti
ins
jmp
movs
ret
or
data16
sbb
push
add
xchg
xor
enter
lahf
xchg
sbb
ins
shl
inc
call
(bad)
jns
xor
sub
out
jb
pop
pop
clc
xchg
call
inc
cli
push
jge
pop
mov
cdq
xlat
mov
push
pop
popa
push
jae
test
popf
push
pusha
push
dec
int
lahf
inc
dec
dec
cmp
xchg
jns
pop
sub
daa
cmp
fsub
mov
jg
bound
shl
sbb
cmp
mov
test
xor
add
jmp
jne
adc
test
ins
push
add
push
push
test
push
fnsave
imul
in
aam
jo
call
fcmove
lea
retf
dec
jb
push
cmp
shl
scas
add
(bad)
or
pop
cmp
ja
arpl
(bad)
sub
or
ins
or
jno
shr
adc
inc
iret
mov
push
lea
sbb
mov
ds
in
add
mov
mov
xor
pop
out
adc
sub
jl
xchg
jo
hlt
aad
sub
sbb
test
xchg
dec
cmp
mov
xchg
sahf
sar
stos
or
iret
sahf
or
inc
aam
imul
mov
xchg
ins
jae
mov
call
sbb
(bad)
movs
in
loope
mov
mov
push
and
scas
out
jecxz
jmp
dec
sub
dec
cmps
xchg
mov
clc
add
data16
pop
popa
repnz
arpl
or
xchg
repz
jb
xchg
sub
add
fadd
mov
loop
sti
icebp
mov
test
dec
mov
dec
cmp
mov
xor
mov
es
int3
xor
sbb
outs
retf
sbb
neg
iret
cmc
cmp
sbb
in
rcl
in
push
std
mov
mov
mov
mov
test
mov
test
push
cmps
xor
push
mov
into
in
dec
ins
inc
call
stos
push
sbb
xchg
mov
and
push
inc
or
lea
jecxz
sub
(bad)
aad
pushf
data16
lock
fldcw
daa
ret
mov
xchg
mov
sti
push
jmp
sbb
into
pop
xchg
frstor
mov
fldenv
pop
lds
xchg
fs
or
add
sub
push
daa
mov
mov
outs
daa
jmp
sbb
mov
movs
test
xor
cmp
fisub
jne
shr
sbb
xor
dec
jge
lds
loope
jl
daa
fld
lahf
(bad)
push
(bad)
lahf
mov
mov
loop
fcmovnb
leave
jns
inc
ins
aas
dec
jle
in
es
xchg
and
sub
stos
inc
ins
cld
mov
jno
add
xchg
push
push
jmp
inc
xor
sub
xlat
inc
and
out
fnstenv
test
or
jo
fadd
sub
call
scas
or
xlat
ret
xchg
mov
or
sub
out
jecxz
push
inc
js
inc
aaa
sub
sbb
dec
sub
pop
je
inc
iret
jmp
xchg
ja
jbe
and
retf
sbb
dec
cmps
sub
jl
push
nop
loopne
cmp
sbb
jmp
outs
or
cli
fdiv
dec
xchg
shl
imul
sbb
shl
call
dec
sub
in
fwait
push
aas
(bad)
into
push
and
repz
and
stc
in
in
loope
test
mov
push
test
pusha
mov
(bad)
popa
cmp
movs
pusha
cmp
ins
out
mov
sub
nop
iret
fiadd
dec
sbb
mov
and
shr
inc
bound
(bad)
fdivr
cmp
or
and
ja
sub
in
cmp
xchg
add
mov
les
imul
jb
and
dec
cli
xchg
mov
aam
pusha
add
cmp
mov
(bad)
xor
xchg
icebp
xor
inc
mov
retf
je
and
rol
fnstcw
in
ja
ficomp
or
or
mov
icebp
add
pop
mov
xchg
mov
mov
loop
sub
pop
in
lods
ffree
(bad)
sub
in
mov
aam
pop
jmp
(bad)
or
fcomp
sub
and
push
(bad)
(bad)
lds
imul
in
sub
and
jmp
pop
mov
push
mov
arpl
bnd
retf
inc
and
cmp
jb
call
test
shr
adc
in
inc
(bad)
fwait
pushf
in
xor
iret
sub
push
in
je
sbb
or
pop
les
cwde
pop
loope
lock
dec
jb
(bad)
and
push
jp
or
jno
mul
sbb
dec
lahf
cs
push
xchg
adc
inc
cmp
or
sbb
pop
stos
and
(bad)
sbb
jae
push
jo
jge
cld
sbb
cs
shr
xchg
push
xchg
jmp
pop
mov
int
movs
outs
call
cdq
jge
ret
push
mov
fwait
test
or
cli
call
sar
or
cmp
push
test
jbe
mov
or
inc
aad
and
ja
pop
push
enter
and
test
sub
fcom
es
pop
inc
jp
add
(bad)
aas
int3
jle
jne
and
scas
cmp
pusha
xchg
outs
mov
fiadd
(bad)
clc
or
mov
inc
pop
clc
dec
add
ss
xor
mov
push
sbb
mov
into
fidiv
jmp
stos
ss
pop
das
ins
add
mul
mov
jl
leave
sbb
mov
(bad)
and
pop
mov
xchg
lods
repnz
ins
dec
sbb
xor
icebp
inc
cdq
imul
xchg
ins
bound
inc
adc
jns
sbb
mov
xchg
mov
in
movs
jbe
add
xor
inc
les
pushf
pop
xchg
or
sub
(bad)
dec
ins
outs
cld
popa
xlat
popf
push
pop
inc
add
inc
movs
mov
push
jg
bound
mov
or
out
or
loop
adc
mov
push
fwait
inc
adc
lock
sbb
or
retf
xlat
xchg
xchg
push
mov
into
dec
imul
xchg
mov
dec
mov
(bad)
push
call
pop
fidiv
sbb
popf
pushw
mov
bound
push
cmps
out
mov
stc
xchg
pop
ret
inc
inc
stos
lahf
add
lea
cmc
inc
add
push
cmp
sbb
mov
and
and
aas
mov
mov
and
dec
fninit
leave
xchg
push
ret
aas
xchg
inc
mov
mov
or
dec
fild
(bad)
hlt
sbb
mov
sub
or
or
mov
pusha
mov
mov
call
xchg
xchg
arpl
mov
test
adc
das
push
push
shl
and
jmp
rol
mov
int3
push
xor
(bad)
je
jecxz
mov
push
(bad)
fwait
mov
shl
adc
test
push
xor
xor
and
mov
dec
ja
aas
inc
push
jb
adc
mov
pop
push
and
or
rcl
xchg
inc
std
imul
xor
retf
jle
add
add
ds
dec
leave
stc
mov
outs
stos
add
xchg
cmp
idiv
jno
enter
cmp
sar
pop
sbb
add
push
xor
pop
mov
xchg
and
aam
repz
stc
cmps
in
xchg
int3
fisubr
or
dec
jl
fsubrp
sub
aas
mov
call
clc
pop
and
icebp
mov
inc
cld
icebp
je
push
xchg
repnz
out
cmc
aam
jle
fild
xor
push
cmp
int
mov
and
repnz
jg
sub
cmp
or
iret
lahf
sub
or
es
inc
jmp
pop
and
or
mov
inc
lods
bound
and
fisttp
add
daa
add
int
jns
cmp
rol
sub
pop
rcr
sub
mov
xlat
fstp
and
adc
mov
jg
shr
sbb
pushf
cmp
arpl
mov
mov
jnp
arpl
xor
push
xchg
cmc
sbb
sub
call
or
xchg
add
ret
in
fist
xor
cs
aaa
jne
pop
mov
fbstp
movs
ret
xchg
xor
sbb
rol
inc
scas
cwde
or
std
aaa
ins
xor
sbb
dec
in
pop
adc
jne
stos
fcom
dec
out
mov
fucomi
ror
int
sub
(bad)
repz
pop
and
and
mov
adc
retf
ins
fnstenv
lds
rcl
jmp
pop
fidivr
test
enter
dec
gs
(bad)
popa
stos
jns
rcl
stc
pop
mov
cwde
pop
sbb
push
push
mov
fistp
mov
js
aad
sub
dec
mov
aad
xchg
jge
pushf
cld
add
cmp
mov
je
cmps
aaa
jl
pushf
lahf
sub
cmps
dec
cmp
add
dec
mov
lock
test
jno
jae
pop
cmps
xchg
pop
and
adc
and
adc
stos
add
and
bound
cs
jle
(bad)
push
rcr
lds
(bad)
sbb
or
mov
cmp
mov
loopne
push
dec
hlt
push
xchg
stos
(bad)
cli
lds
sub
or
mov
xchg
push
icebp
movs
stos
sar
(bad)
out
mov
out
push
lods
or
jae
stc
jmp
into
hlt
mov
lods
ins
das
loope
(bad)
jmp
icebp
push
loope
adc
adc
jmp
in
sub
repnz
(bad)
cld
rcr
dec
adc
cs
add
mov
pop
inc
(bad)
pop
mov
div
add
cmp
popf
push
ins
push
mov
sub
mov
loopne
shl
adc
dec
pop
fs
fdiv
retf
inc
ja
pop
xchg
test
xor
cmovbe
ror
std
enter
dec
cmp
clc
cmp
cmp
(bad)
xor
xchg
mov
sar
outs
inc
inc
inc
inc
mov
dec
mov
mov
sub
ins
hlt
mov
jmp
aam
pop
or
or
and
sbb
dec
ss
jp
ror
addr16
xchg
pusha
pop
loopne
sahf
push
test
pop
stc
jnp
arpl
jg
jns
ss
and
cmp
mov
movs
cmp
push
ins
fimul
adc
out
pop
out
mov
cs
ss
sbb
mov
lock
xor
shr
pushf
outs
xor
punpckhdq
pusha
xchg
mov
mov
push
push
xor
add
lea
xchg
leave
aaa
cmp
loope
fnsave
cli
mov
cmp
sbb
jl
outs
jp
push
push
inc
pop
pop
push
sahf
inc
push
push
xchg
aas
cmp
fwait
rcr
push
shr
call
stc
push
ss
in
or
pop
inc
or
xor
sti
xor
stc
int
hlt
add
or
xlat
fs
mov
addr16
in
push
fcmove
inc
push
inc
mov
leave
cmp
cmp
ins
imul
xchg
loop
xchg
je
mov
bound
sbb
ror
movs
stos
ins
mov
mov
push
test
in
call
ror
mov
les
daa
push
leave
repz
into
cmp
or
adc
mov
scas
xchg
inc
add
sbb
mov
or
add
je
sti
dec
mov
add
call
pop
sbb
fstp
cmps
ficomp
test
pop
adc
sbb
loopne
loopne
inc
mov
jb
jnp
xor
punpckhwd
sub
fwait
mov
stc
mov
sbb
or
je
(bad)
pop
jp
pop
xlat
mov
pop
and
mov
or
icebp
jbe
cmp
leave
out
nop
mov
adc
jne
adc
adc
push
data16
arpl
xor
hlt
hlt
std
stos
fptan
dec
push
cmps
sar
sbb
(bad)
and
daa
or
(bad)
jmp
cmp
mov
or
mov
sub
jmp
xchg
retf
xchg
sub
popf
cmps
jp
lock
sbb
pusha
or
dec
xchg
fs
outs
(bad)
vmovsldup
test
jle
test
sub
add
push
inc
js
das
(bad)
push
ins
mov
outs
jg
cmps
pop
pop
out
ins
jbe
add
in
outs
push
or
aas
mov
mov
jbe
fistp
add
cwde
fwait
cmp
into
adc
lods
mov
dec
mov
aaa
or
inc
sbb
add
adc
in
mov
xchg
push
sti
adc
fadd
scas
pop
pop
mov
jecxz
add
fmul
repz
add
lods
xor
sbb
mov
(bad)
(bad)
mul
dec
in
push
aaa
fs
adc
mov
in
jno
test
adc
dec
mov
es
stos
or
push
daa
(bad)
jae
and
jmp
fadd
mov
xchg
and
int3
sub
cmp
sbb
sub
jg
mov
jb
in
(bad)
aam
xchg
mov
gs
pop
fdiv
not
inc
push
cmc
jns
push
push
clc
mov
inc
das
ficomp
test
push
out
sub
jmp
mov
ins
dec
xchg
popf
imul
les
(bad)
sar
(bad)
mov
dec
sub
dec
or
mov
jmp
jae
les
loope
mov
rcl
out
adc
xor
fist
(bad)
ja
cld
push
pop
mov
push
sbb
adc
sub
xor
out
imul
aas
fwait
jge
lods
out
jmp
sub
adc
sahf
outs
dec
push
xchg
inc
cli
stc
mov
call
arpl
sub
mov
mov
imul
loop
dec
or
mov
nop
cmp
xor
into
loop
pop
ins
call
xchg
inc
test
jge
jno
dec
addr16
pushf
movs
jb
mov
xor
inc
and
dec
scas
sub
gs
add
sub
cld
retf
(bad)
mov
cs
sbb
pop
mov
push
cwde
pushf
add
aas
mov
jns
imul
add
addr16
cli
jno
fistp
cs
add
(bad)
pop
inc
ror
out
in
das
outs
mov
arpl
mov
out
and
sbb
adc
or
pop
jmp
call
in
fsub
popf
cmp
sub
pop
mov
fs
dec
xchg
ins
jae
xchg
idiv
movs
mov
loope
daa
movs
pusha
mov
mov
adc
sbb
mov
dec
push
clc
sbb
inc
ret
repnz
pop
loopne
fisub
mov
inc
mov
adc
inc
xchg
mov
rcl
test
jmp
cmc
and
retf
sti
stc
sar
cmp
mov
pop
maskmovq
div
add
xchg
xchg
xchg
sub
shl
mov
inc
inc
jne
mov
push
test
or
sub
cmps
and
test
enter
inc
mov
sti
xchg
mov
inc
cdq
mov
sbb
test
dec
stos
adc
or
xor
(bad)
push
outs
mov
xor
fild
or
jo
mov
or
sub
outs
mov
mov
test
mov
add
ins
sub
fstp
and
mov
lods
pop
pusha
xor
inc
fild
sahf
push
neg
adc
and
into
outs
retf
jb
xchg
pop
mov
mov
movs
loope
sbb
sub
mov
mov
xchg
mov
lods
jg
test
and
and
lods
in
xor
sahf
cmp
ins
pop
popf
add
(bad)
pop
stos
xchg
cmps
mov
jg
pop
ins
push
out
add
and
cmp
hlt
mov
adc
mov
pop
jl
loope
push
popa
jae
sbb
sbb
out
pop
(bad)
fisttp
test
sub
sub
(bad)
and
fmul
aam
sbb
(bad)
test
xchg
adc
call
xor
jb
add
shr
(bad)
and
jo
stc
jb
inc
cmp
add
jo
clc
paddb
mov
(bad)
lods
inc
ss
xchg
icebp
lods
cmp
call
and
or
call
fst
inc
push
scas
pop
or
or
in
or
clc
shl
mov
fnstsw
cmp
xchg
(bad)
fcmovu
mov
mov
inc
in
push
jmp
sub
fsubr
inc
inc
cmpxchg
sbb
aas
sahf
and
cli
mov
iret
mov
cmc
retf
hlt
pop
sub
pop
mov
mov
xor
cdq
loopne
lds
mov
(bad)
mov
jno
pop
adc
inc
inc
jnp
mov
packsswb
push
aam
xchg
cwde
sbb
mov
add
xor
aas
jl
clc
mov
dec
adc
call
jno
movs
test
add
mov
pushf
mov
rcr
ss
xchg
mov
icebp
ret
cmp
mov
aas
and
sub
sbb
call
dec
push
dec
inc
mov
cmp
mov
xchg
push
sub
ins
int3
ins
mov
scas
add
jle
(bad)
iret
adc
aam
jmp
std
ret
nop
es
and
mov
sub
arpl
sbb
icebp
jmp
xchg
add
mov
pop
fst
dec
mov
sbb
dec
mov
loopne
mov
mov
mov
sub
jne
inc
clc
in
pop
std
jno
mov
imul
adc
std
inc
pop
movs
add
dec
adc
sub
loope
popa
cmp
push
lea
fs
mov
or
xchg
sti
xlat
adc
or
scas
mov
or
jns
hlt
mov
xchg
or
add
mov
dec
nop
adc
call
loope
fwait
and
and
dec
cmp
and
pushf
or
pop
arpl
lahf
retf
retf
cmp
sbb
ret
imul
push
outs
stc
sti
std
mov
jae
in
cmps
outs
lds
scas
lock
punpckhwd
int3
mov
jmp
inc
add
call
outs
hlt
pop
daa
(bad)
retf
mov
inc
adc
gs
jecxz
xchg
sbb
pop
jle
xchg
xor
pusha
(bad)
fwait
in
mov
mov
or
(bad)
in
xor
jb
push
call
test
xor
jle
sbb
sub
or
cmp
inc
mov
jns
in
mul
loop
mov
sar
outs
mov
pop
pop
xor
test
sbb
mov
and
mov
ins
repz
lea
jno
add
xor
dec
mov
sbb
mov
gs
and
mov
pop
pop
mov
pop
(bad)
pop
adc
mov
aaa
and
jp
pop
inc
add
test
hlt
inc
sub
hlt
out
fdiv
mov
lods
inc
sub
cmps
mov
sar
stos
mov
push
pushf
loopne
stos
mov
lods
push
pop
rcr
arpl
rol
retf
retf
scas
(bad)
jb
and
adc
lock
and
adc
pop
call
adc
inc
outs
sbb
sub
jp
inc
fcomp
fs
xchg
mov
xchg
out
mov
loopne
std
scas
jnp
jne
arpl
xor
mov
adc
cld
mov
xor
jecxz
xchg
ret
sub
mov
xchg
pop
dec
dec
mov
or
jnp
arpl
mov
int
mov
ret
and
push
cmps
push
xchg
sahf
sub
in
push
xor
int3
popa
mov
pop
daa
jp
sbb
xchg
gs
ret
mov
cmc
jmp
push
sbb
push
loope
mov
mov
adc
or
cmps
leave
adc
jo
rcl
xor
iret
enter
sbb
xchg
movs
pop
push
jno
pop
sbb
retf
popf
mov
scas
das
icebp
call
inc
sub
clc
cmps
pop
inc
push
jmp
push
movs
mov
add
jg
lods
jecxz
int
push
pop
xor
ror
xor
cmp
inc
fnstenv
mov
ficom
fwait
xor
test
mov
and
or
inc
lock
cs
fisubr
fcom
mov
and
push
mov
jae
pusha
aaa
fld
jg
xor
dec
adc
mov
or
sub
push
jmp
pop
mov
sub
or
push
sub
xor
adc
retf
mov
cmc
jge
cmp
jmp
add
mov
inc
scas
adc
mov
add
cmps
test
xchg
fwait
push
fwait
mov
dec
stos
inc
gs
retfw
xor
mov
pop
lds
jg
mov
rol
in
idiv
movs
xor
es
mov
dec
mov
ret
sbb
push
inc
test
add
and
mov
dec
and
je
fcomp
add
mov
stc
int3
mov
hlt
aad
repnz
test
push
ds
test
sub
jg
sub
sbb
xchg
mov
sbb
mov
pop
inc
xor
xchg
jbe
push
push
out
lods
mov
sbb
inc
and
nop
jbe
pop
rcl
in
and
or
mov
cmp
outs
sar
add
imul
mov
mov
in
dec
and
(bad)
popf
popf
xlat
push
frstor
push
add
mov
sub
aas
lods
push
xor
in
dec
icebp
into
leave
and
(bad)
rcl
fsubr
nop
pop
call
sbb
popf
in
cwde
pop
test
cmp
stos
push
sub
cwde
loopne
push
(bad)
jo
loopne
repz
mov
push
jbe
xchg
das
dec
xchg
xchg
push
sub
ret
fimul
out
lea
push
or
adc
xor
pop
push
cmp
mov
je
cmp
bound
or
pop
clc
in
mov
push
xchg
test
(bad)
mov
push
xchg
mov
push
push
adc
lods
outs
imul
sahf
sub
ja
ror
dec
push
adc
data16
mov
ins
in
xor
gs
test
mov
jnp
pop
ins
ror
mov
in
fisttp
sbb
mov
add
jecxz
push
xor
and
pop
in
jge
cmp
nop
dec
js
xor
xlat
das
mov
pop
cdq
adc
mov
sbb
push
jecxz
sbb
or
mov
xchg
cmp
lods
shl
pop
mov
dec
push
clc
hlt
hlt
in
push
arpl
inc
out
shl
stos
sti
shr
addr16
mov
pop
movs
or
sub
push
mov
retf
sub
jmp
ds
int
int3
xor
xor
fistp
out
push
pop
cmp
das
es
pop
adc
jne
push
push
cmp
inc
mov
int3
push
sbb
pop
(bad)
push
imul
je
std
div
adc
nop
in
cmp
je
int3
dec
jle
dec
xchg
jg
jmp
or
sahf
int3
call
jae
xlat
pop
loopne
lar
retf
pop
xchg
mov
fiadd
sub
enter
mov
inc
push
call
adc
cmp
ins
pop
cmps
hlt
cli
ja
mov
lods
inc
push
mov
mov
jae
mov
aam
xchg
xor
inc
hlt
pop
xor
pushf
jns
scas
not
push
jmp
add
jno
cdq
sbb
imul
jmp
inc
outs
repz
lods
test
mov
imul
dec
lods
dec
sub
popa
cmp
inc
cmp
pop
sbb
or
shr
xchg
mov
in
mov
call
push
mov
dec
cmp
or
mov
jo
jl
xor
out
retf
mov
icebp
dec
inc
pop
shl
call
fld
add
inc
pop
enter
mov
and
repnz
mov
adc
ror
dec
mov
dec
retf
rcr
xchg
mov
xor
in
jbe
jmp
mov
cs
daa
movs
jns
loop
cmc
jno
lock
adc
sub
add
jle
in
dec
adc
pop
cwde
inc
push
inc
push
mov
and
mov
mov
sub
xlat
push
out
aaa
sbb
jl
sub
adc
dec
sub
pop
sub
adc
sub
hlt
pop
pop
mov
inc
movs
dec
pop
sbb
jns
iret
aam
imul
loope
lock
push
cmps
adc
mov
push
xchg
retf
inc
and
jne
or
push
sahf
retf
and
adc
iret
aaa
lea
sub
cmp
mov
outs
jle
jle
cld
cwde
sahf
adc
nop
pusha
(bad)
ret
cmp
pop
test
test
mov
fist
dec
xchg
jge
(bad)
fisub
test
scas
jmp
push
xchg
ja
and
cmps
mov
mov
jmp
stc
shl
in
in
mov
fisttp
push
(bad)
fdivr
hlt
sbb
shrd
pusha
mov
mov
jecxz
(bad)
clc
xchg
cmp
mov
lods
leave
xor
test
dec
mov
inc
rep
icebp
(bad)
sbb
arpl
jo
dec
outs
mov
dec
mov
jmp
fisttp
enter
add
dec
enter
sub
or
sub
inc
dec
in
dec
rcl
sub
js
inc
(bad)
jl
or
das
mov
sbb
dec
mov
fadd
and
sub
bswap
inc
stos
out
jo
lds
adc
into
pop
mov
mov
lahf
mov
pop
out
lock
xchg
(bad)
or
dec
movs
adc
mov
int
(bad)
sub
out
xor
call
xchg
(bad)
in
lock
adc
pushf
inc
mov
sbb
mul
and
xor
scas
hlt
gs
fistp
add
cmc
arpl
ja
jge
mov
push
test
adc
imul
fstp
call
push
loop
sar
mov
push
loope
add
ret
dec
or
xchg
inc
push
mul
(bad)
adc
pop
jb
les
or
xchg
sub
std
jge
dec
add
or
push
xchg
mov
push
cmps
jnp
push
(bad)
mov
aad
add
repz
xor
int3
or
xchg
mov
outs
adc
and
mov
push
loop
cs
mov
adc
add
push
aam
sub
out
push
jp
int
in
jge
nop
pop
and
or
pop
mov
pop
add
hlt
push
and
cmp
std
imul
ret
aam
aaa
push
xchg
jge
(bad)
leave
xchg
cmp
mov
mov
lea
imul
xlat
add
cld
lods
sub
popa
and
imul
xor
adc
je
out
retf
lea
mov
adc
std
shl
inc
lods
mov
call
mov
adc
cmp
cli
retf
outs
sbb
mov
ret
in
sbb
push
in
xchg
or
gs
int3
jl
xchg
shl
clc
ss
(bad)
mov
pop
or
data16
outs
fiadd
jnp
pop
outs
xor
pop
test
add
cmp
pop
shl
(bad)
mov
jnp
std
out
mov
cmp
xor
mov
or
into
xchg
(bad)
push
add
out
cmp
mov
fs
sar
outs
and
adc
add
xor
sbb
push
imul
loope
loopne
ja
xchg
sbb
lock
push
jmp
sbb
fwait
or
dec
add
loop
loope
enter
call
mov
lahf
jae
ins
repz
in
test
ret
xchg
xor
ja
jbe
sub
outs
push
ins
cwde
into
push
rcl
std
inc
fbstp
dec
mov
(bad)
(bad)
out
cs
loope
arpl
int3
into
pop
mov
out
fucomi
sti
(bad)
aam
sub
mov
mov
pop
add
movs
repz
cdq
ficom
xchg
jg
and
sbb
mov
or
push
and
push
inc
mov
test
aam
sbb
cld
in
pop
dec
div
neg
push
enter
push
adc
xchg
icebp
sahf
xchg
dec
popf
out
nop
bound
fiadd
pushf
inc
stc
adc
cmps
jle
popf
scas
mov
call
pop
fwait
shl
xchg
rcl
addr16
and
inc
mov
sbb
loopne
lock
ret
or
lea
ja
push
out
cld
sti
ins
movs
pop
pop
mov
cs
call
movs
mov
je
loope
das
dec
(bad)
mov
jmp
xor
rol
pop
inc
push
adc
xor
cmp
jmp
pop
cdq
cwde
icebp
push
and
jne
cmps
xor
mov
aam
shr
adc
cli
add
sbb
jecxz
es
fdivrp
outs
cmp
int
arpl
mov
mov
cdq
sub
fcomp
push
jno
and
jbe
popf
jp
enter
add
or
pop
fsubr
fsub
das
ins
jae
jo
imul
ror
adc
sbb
icebp
(bad)
xchg
sbb
sbb
leave
ficom
add
xchg
fadd
adc
icebp
add
addr16
lods
inc
jnp
push
outs
or
int3
jl
add
hlt
pop
ss
call
mov
mov
push
stos
es
sub
xor
stc
mov
mov
in
or
and
std
js
hlt
shr
in
clc
bound
add
or
inc
cdq
pop
imul
cmc
pop
les
(bad)
jl
loopne
cmp
mov
ins
int
inc
das
lds
xor
stos
xor
adc
(bad)
mov
clc
xchg
out
jl
test
scas
add
std
hlt
arpl
test
mov
mov
cmp
jae
das
sbb
adc
xchg
lock
lahf
nop
das
mov
mov
xchg
loope
iret
in
fcom
rcr
mov
cmp
sbb
push
xor
repnz
mov
push
jbe
clc
pop
call
pop
std
xchg
lea
sub
scas
push
imul
push
jo
addr16
cmp
xchg
ds
inc
lahf
lea
pop
arpl
mov
fs
push
ins
xor
jmp
xor
test
mov
adc
je
loope
sub
jl
mov
fcomip
mov
mov
add
out
ds
loopne
icebp
jb
sbb
cmps
ss
sbb
in
loop
pop
pop
lods
fistp
xlat
mov
or
call
sti
mov
mov
cmps
add
sub
jmp
(bad)
mov
or
or
into
stos
or
popa
jge
in
jp
adc
stos
mov
dec
loop
mov
xor
cdq
cmp
repnz
and
shl
ret
outs
dec
outs
xlat
loop
call
mov
fisub
cdq
jge
jge
dec
movs
jae
sub
in
ficomp
add
mov
push
inc
sub
outs
aam
out
sub
or
or
sbb
ffreep
cmps
inc
lods
popf
out
push
mov
scas
jle
loop
push
(bad)
aad
jne
in
sbb
add
cli
pop
clc
stos
xor
mov
aas
adc
cmp
fild
jle
mov
push
jge
imul
pop
sbb
cmc
add
and
lea
inc
fsub
push
mov
mov
cmp
sahf
mov
movs
adc
fcomp
loop
bound
test
xor
outs
imul
push
cmp
or
push
inc
cld
xor
lea
ins
or
lods
cmp
dec
jmp
dec
add
jne
ins
jl
jmp
mov
mov
xor
cmp
and
jmp
push
xlat
and
xchg
and
sub
and
cmp
mov
dec
and
fsubr
rol
loop
lahf
ret
into
add
es
je
cmc
xor
jnp
ss
les
xlat
add
mov
dec
fstp
outs
fmul
ror
out
jp
inc
mov
outs
scas
ret
es
xchg
(bad)
test
sbb
add
pop
mov
or
fbld
jno
inc
pop
mov
dec
repnz
dec
xchg
xor
fcmovbe
cmp
popf
fcomp
aas
adc
mov
xor
sbb
xor
dec
lock
test
mov
mov
jge
or
into
mov
pop
cmp
loop
xor
push
mov
div
xchg
lahf
xlat
xchg
fnsave
pushf
shl
mov
xor
xchg
les
das
jmp
popa
fs
push
shl
push
pushf
jmp
mov
in
cdq
(bad)
and
test
pop
sbb
sbb
cs
(bad)
loope
pop
adc
sti
mov
(bad)
pop
ss
shr
xor
add
ret
loop
or
mov
xchg
mov
fisub
jmp
popa
fnstcw
iret
in
out
or
or
inc
call
stos
pop
popa
jecxz
test
inc
mov
mov
pop
stc
test
xor
in
xchg
mov
push
fdiv
(bad)
je
add
push
sub
jmp
mov
push
pop
sub
xchg
mov
xor
popf
mov
fcomp
(bad)
push
dec
xor
jle
je
dec
pop
sub
fisubr
xor
test
sub
cld
and
add
mov
loopne
pop
xchg
add
lock
lock
cmps
cld
dec
pop
es
push
out
inc
mov
mov
jecxz
dec
pop
cli
push
iret
pop
jle
push
or
mov
and
push
xor
cmps
pushf
jo
cmc
cmp
fld
stos
mov
or
add
mov
mov
aas
test
sar
mov
cmp
xor
xchg
loopne
sub
pop
cmc
sbb
sub
lock
in
loope
and
inc
sbb
sub
pop
mov
mov
cwde
fwait
retf
pop
fild
adc
add
mov
call
ins
rcl
(bad)
dec
or
mov
aaa
dec
stos
jp
cmp
xchg
cmp
mov
xor
mov
push
sbb
pushf
jnp
add
xchg
mov
xor
inc
js
inc
shl
popf
dec
pushf
mov
inc
sub
ins
jb
inc
adc
aam
iret
sbb
daa
or
popf
inc
imul
xor
jno
mov
out
ss
ds
ins
movs
outs
dec
inc
call
fs
addr16
push
into
mov
inc
sub
cmp
adc
adc
pushf
xchg
mov
test
loop
aas
push
jmp
mov
jmp
scas
out
jnp
sbb
or
dec
mov
jnp
aad
iret
sub
sub
add
sbb
pop
xchg
fs
fdivrp
cmovo
push
sbb
xchg
adc
jp
and
or
or
push
mov
adc
jp
add
push
and
lock
cli
hlt
scas
fs
xchg
adc
sbb
daa
xchg
and
pop
repnz
lods
cmp
gs
ins
in
and
jle
cld
push
inc
lea
xchg
je
adc
(bad)
mov
dec
pop
sub
adc
ret
into
push
retf
(bad)
repnz
pop
dec
mov
ins
jnp
dec
fcomp
push
in
aaa
mov
sub
in
push
mov
add
arpl
jmp
inc
je
and
push
add
ds
(bad)
(bad)
mov
sub
stc
jb
imul
lods
and
ret
mov
xchg
lea
xor
mov
push
pop
fsubr
add
dec
pusha
jae
(bad)
sbb
pop
jnp
addr16
adc
sub
call
dec
xchg
aaa
xchg
daa
outs
jno
or
push
das
stos
pop
jp
xor
sub
and
lahf
mov
jmp
cmp
pop
jge
cld
and
dec
lea
add
loop
rcr
xlat
dec
je
pop
std
inc
ins
mov
inc
mov
das
mul
movs
test
mov
xchg
cmovle
in
cmps
push
je
push
mov
outs
dec
test
or
mov
xor
clc
push
movs
mov
in
add
cmp
xchg
bound
in
sub
test
or
add
adc
mov
cwde
outs
xor
jns
popa
mov
ret
mov
and
je
push
xor
dec
jle
pop
or
push
and
mov
dec
lahf
inc
aas
js
pop
dec
jnp
dec
dec
jmp
mov
mov
mov
jae
xchg
inc
pop
pop
or
ror
cmp
xor
ins
pop
mov
xor
push
leave
ror
jae
jmp
(bad)
mov
add
in
repz
in
fdivrp
std
lods
mov
xor
add
pop
and
gs
inc
popa
(bad)
jns
or
call
cmc
in
iret
int3
mov
clc
out
ret
inc
(bad)
ja
mov
aad
sub
pop
adc
mov
jecxz
scas
je
loopne
cmps
push
adc
gs
test
retf
leave
hlt
push
mov
dec
push
push
inc
or
add
fnsave
bound
pusha
lea
jg
or
outs
mov
xchg
es
jno
jmp
jbe
rcr
lods
push
cdq
mov
ret
(bad)
neg
jnp
shr
imul
inc
scas
movs
jmp
push
adc
mov
and
push
retf
pusha
jae
ficom
xchg
or
fs
jbe
fstp
mov
jno
dec
(bad)
jns
in
sti
dec
push
pop
jle
div
gs
sbb
mov
ins
fist
bound
aam
arpl
test
fisttp
pop
adc
dec
popf
push
and
jp
jge
outs
pop
jb
cmp
sub
jg
dec
dec
dec
push
xchg
ds
stc
out
fidivr
cmp
xlat
cwde
aas
fcom
fisubr
xor
lea
pop
outs
sbb
pop
cmp
add
jg
lea
mov
push
mov
test
outs
xchg
mov
mov
aad
(bad)
xor
int
les
dec
es
push
les
mov
inc
jmp
out
loop
addr16
out
dec
jbe
inc
jge
rep
les
xchg
mov
aad
or
xor
dec
addr16
cmc
mov
cmp
dec
repz
nop
pop
ja
xlat
pop
call
(bad)
popa
test
jecxz
loop
mov
rol
in
std
pop
jl
mov
sub
inc
ds
or
retf
jp
xor
clc
push
xchg
ror
stc
outs
mov
dec
(bad)
rcl
adc
dec
push
xchg
(bad)
test
mov
jmp
imul
lods
in
xchg
repnz
aaa
mov
jmp
aam
sub
enter
imul
das
jno
jbe
and
add
and
xor
push
mov
mov
icebp
or
adc
sahf
mov
loop
iret
stc
mov
aaa
xor
and
cli
dec
add
adc
call
cmc
stc
je
mov
jmp
cmps
mov
cmp
sub
mov
ror
sub
enter
arpl
sar
mov
lea
sub
imul
call
cmp
aaa
add
sub
sbb
inc
popf
jecxz
adc
test
sub
clc
daa
push
nop
jp
(bad)
cmp
inc
xchg
call
lods
dec
inc
sbb
mov
loopne
xor
cmp
movs
push
xor
loop
sbb
cmp
add
mov
loopne
add
ret
xchg
sbb
add
mov
(bad)
repnz
mov
mov
ins
arpl
in
adc
jbe
and
ret
adc
out
inc
test
int3
xor
mov
daa
xor
arpl
jp
xchg
imul
fdivr
jl
inc
test
aaa
(bad)
mov
xchg
mov
aam
les
icebp
adc
sub
xor
cs
gs
push
lods
cli
(bad)
xor
xchg
mov
shl
add
adc
arpl
mov
xor
mov
xchg
add
sbb
cmp
pop
mov
xchg
mov
mov
sub
inc
outs
mov
mov
stos
shl
xor
dec
rcr
mov
mov
rcl
mov
pop
and
sbb
jecxz
xor
xor
psrld
and
mov
stos
iret
lds
ret
sbb
into
sub
in
mov
stc
add
xchg
jecxz
xchg
in
ret
call
sub
dec
cmp
dec
cmps
das
add
inc
scas
bnd
pop
or
xor
jo
cmp
or
or
xor
mov
sbb
ins
xor
push
mov
aaa
adc
jae
xor
push
(bad)
loop
aas
call
movs
adc
out
into
mov
(bad)
sub
cmp
mov
cmc
inc
push
lahf
stos
(bad)
fcomip
popa
iret
pop
(bad)
icebp
add
push
fmul
sbb
imul
sbb
fld
fiadd
pop
pop
movs
das
or
adc
xchg
aad
and
dec
and
cmps
std
les
les
scas
mov
pusha
cmp
add
addr16
xor
adc
or
cmp
add
or
call
adc
adc
leave
retf
lods
in
fwait
mov
adc
push
int
push
cdq
cld
in
mov
jmpw
inc
sbb
scas
aaa
mov
pushf
lods
enter
mov
aam
pop
cmps
jno
add
and
push
sub
sub
ficomp
push
adc
bound
enter
inc
sbb
aam
popa
adc
sub
in
(bad)
stc
jb
lea
ror
pop
ins
or
push
call
pop
inc
mov
jb
xor
sbb
inc
fimul
lea
push
sub
outs
adc
sahf
aad
sbb
sub
movs
es
(bad)
xchg
imul
xor
xchg
dec
dec
dec
out
aad
scas
xor
mov
lods
sbb
popf
mov
call
or
ror
mov
mov
lock
add
xor
xchg
or
mov
movs
fwait
movs
into
cmp
xchg
pop
mov
pop
adc
stos
dec
jns
data16
sbb
cli
in
mov
sub
jmp
xlat
dec
xchg
(bad)
stos
pop
call
sub
das
pusha
ficom
sbb
mov
repz
bound
push
mov
inc
sbb
mov
jmp
stc
dec
mov
call
sbb
inc
sbb
das
cmp
xchg
cli
cmovl
xor
mov
jg
call
push
cwde
sbb
push
xor
imul
push
mov
mov
mov
fistp
sbb
jo
pushfw
jne
cmp
sbb
or
je
push
jmp
mov
xor
mov
leave
mov
inc
bswap
xchg
int3
add
sti
or
leave
push
daa
push
fdivr
pop
xor
or
jae
xor
inc
dec
loopne
mov
sub
fisub
dec
xchg
loope
xchg
jo
push
mov
sbb
mov
cmp
scas
fdivr
jmp
mov
div
sbb
in
mov
cmp
pop
sbb
push
js
and
sahf
cmc
shr
push
cmp
cld
in
sub
lahf
adc
push
jnp
sub
adc
pop
pop
jnp
dec
push
bound
inc
pop
xchg
xchg
cmc
sub
jmp
ds
sar
pop
push
std
add
hlt
or
push
adc
adc
mov
push
(bad)
xor
xchg
(bad)
sti
jmp
mov
push
mov
push
xchg
mov
lahf
add
neg
push
inc
bnd
neg
outs
rcl
cmp
out
or
(bad)
in
test
arpl
mov
in
push
mov
mov
and
push
and
mov
jns
or
ror
mov
jns
and
gs
test
fdiv
fisubr
iret
pop
sbb
test
add
(bad)
pop
xlat
pop
lods
dec
push
loopne
(bad)
xchg
ss
jbe
iret
jp
retf
cmp
pop
hlt
adc
out
in
mov
and
arpl
jno
loop
sbb
ret
jne
(bad)
clc
retf
jecxz
out
and
call
cmc
loope
int
xchg
out
lods
jecxz
xchg
xor
push
cmp
xchg
push
cld
sub
aad
push
stos
or
mov
xchg
ins
adc
iret
pop
stos
pop
scas
in
stos
(bad)
enter
inc
mov
out
sbb
or
adc
mov
jmp
jne
loopne
lea
fdiv
hlt
sub
dec
retf
adc
int3
and
mov
repnz
and
inc
inc
add
xor
pop
call
sub
mov
jp
and
leave
or
ins
out
sbb
nop
or
jg
cld
xor
das
ret
call
lods
cli
stos
(bad)
sar
cmc
stc
xchg
cmp
adc
addr16
xchg
ror
addr16
adc
cld
adc
repz
adc
mov
cmp
mov
sbb
adc
cmps
movs
inc
xor
cmp
cmp
dec
popa
fwait
ds
adc
mov
inc
push
ja
mov
dec
test
(bad)
stc
test
jmp
cmps
xchg
and
push
xchg
je
xchg
lods
dec
mov
fwait
pop
mov
cmc
in
iret
add
or
adc
scas
imul
(bad)
loopne
int
sahf
cmp
and
daa
test
xor
pusha
mov
push
pop
mov
cld
cmp
xchg
push
in
fisttp
das
add
stos
mov
icebp
pushf
mov
retf
cmp
out
push
mov
cs
jno
cli
adc
outs
mov
test
inc
shl
inc
sub
mov
inc
aad
jno
inc
mov
cmp
ret
dec
fistp
es
mov
mov
xor
into
loope
jle
retf
pop
dec
lahf
hlt
rcr
pop
aad
out
aas
push
test
cli
js
out
and
mov
xchg
pop
xor
popf
hlt
push
fstp
jb
xor
sbb
jmp
test
push
xchg
or
stc
inc
sub
in
sub
outs
push
pushf
fiadd
std
hlt
mov
ret
fs
cwde
jmp
add
jmp
aad
je
xchg
enter
xor
push
jnp
push
pusha
push
fstp
jae
xlat
rdtsc
lds
mov
mov
icebp
xchg
dec
(bad)
hlt
mov
mov
lahf
push
mov
les
push
or
mov
push
cmp
jle
xchg
stos
mov
dec
test
(bad)
sbb
xor
ins
test
rcr
adc
mov
movs
popf
scas
pop
or
dec
shl
sbb
stos
sbb
jge
fwait
push
mov
cmc
into
popf
fstp
jae
and
xor
je
les
sbb
sub
(bad)
push
xor
fsub
sbb
inc
nop
data16
sub
cmp
mov
std
mov
clc
call
mov
mov
cmps
out
nop
mov
stos
adc
aaa
int3
int3
outs
into
or
ss
rcl
or
sahf
pop
jp
rol
movs
fldenv
adc
arpl
xchg
iret
fwait
xchg
xchg
pop
arpl
pushf
arpl
je
sub
ss
loope
cmp
xor
mov
stc
neg
ins
dec
jmp
jle
out
cmp
inc
ror
jmp
jnp
sub
xchg
xor
jb
pusha
sub
out
or
pop
ins
xchg
loope
pop
int3
test
cld
jecxz
pop
dec
pushf
push
stos
ja
mov
adc
fmul
mov
call
jle
je
jl
popf
cmp
xchg
xchg
lds
inc
push
das
push
jnp
push
scas
(bad)
xchg
nop
dec
imul
popa
mov
sub
mov
adc
mov
push
scas
cmovl
not
std
push
cmp
daa
sbb
jne
inc
int
add
pop
mov
(bad)
(bad)
xchg
inc
jbe
xchg
test
mov
out
rcl
cmps
sub
leave
icebp
scas
imul
jl
jbe
cmc
sub
add
cs
jle
add
lods
mov
cli
jge
icebp
dec
or
xchg
xchg
bound
nop
stos
mov
push
cmp
sub
xchg
mov
sar
mov
mov
xor
and
mov
inc
push
js
fsubr
xchg
test
scas
jae
sahf
or
xchg
shr
out
xchg
stos
push
sbb
sbb
push
xchg
shl
(bad)
stos
cmc
mov
xchg
and
rol
or
cdq
and
imul
lahf
inc
jo
(bad)
xchg
mov
or
js
jl
cld
or
lds
sbb
je
dec
fiadd
mov
mov
mov
sahf
js
sub
movs
cdq
mov
leave
std
jno
pusha
imul
fsub
pop
pop
inc
call
or
inc
jnp
sub
fcomp
push
das
(bad)
dec
int3
rol
inc
cmps
cmps
dec
and
jg
push
dec
xor
adc
int3
dec
dec
cpuid
adc
sbb
hlt
clc
loopne
loop
out
(bad)
leave
mov
jno
xor
int
rdtsc
sbb
jmp
mov
int3
or
and
into
cmps
mul
int3
inc
mov
mov
mov
push
cmp
in
call
mul
leave
jno
js
mov
in
out
lahf
repz
xor
dec
into
arpl
shr
je
xchg
mov
and
or
inc
xlat
adc
jae
inc
cmp
nop
sti
adc
mov
(bad)
pushf
add
mov
mov
outs
gs
xchg
sub
xor
sbb
(bad)
fidiv
clc
add
push
test
aad
mov
adc
jb
xor
sub
lahf
scas
lock
mov
daa
dec
adc
jmp
fisub
loop
fisubr
(bad)
mov
shl
fs
add
scas
push
add
push
mov
dec
xor
adc
dec
(bad)
dec
and
pandn
test
and
push
fisub
das
call
repz
pop
mov
and
sub
push
fcomp
and
cmp
addr16
retfw
jne
sub
dec
repz
test
xlat
or
out
inc
ret
fadd
repnz
xchg
sbb
(bad)
fimul
outs
mov
push
mov
and
sbb
xchg
xor
test
loopne
xor
or
popa
sbb
jmp
mov
sbb
lods
cmps
in
mov
cmc
push
xchg
popa
retf
cmp
cmps
into
and
xchg
lods
add
ret
out
fiadd
jnp
bound
inc
dec
test
sar
xor
mov
dec
mul
leave
push
jnp
xchg
jmp
jno
adc
call
sbb
jecxz
ret
(bad)
fucomi
cwde
test
pop
adc
(bad)
out
adc
or
pop
mov
fistp
std
and
inc
cld
inc
cdq
pop
mov
mov
dec
shr
adc
dec
mov
xchg
adc
pop
outs
cld
repnz
dec
push
movs
or
inc
or
push
xor
xchg
jg
push
pusha
fidiv
cmp
and
movs
adc
mov
add
lea
dec
sbb
(bad)
pop
xor
addr16
jmp
rol
cld
sub
jle
call
add
addr16
js
and
aaa
lods
cmc
ret
je
ds
push
adc
in
jle
fsubrp
xor
pop
aas
ja
gs
jge
push
enter
push
std
xor
cmp
mov
pop
icebp
lods
cmp
fidivr
into
(bad)
stc
icebp
mov
sbb
icebp
sbb
sbb
int3
push
pop
jbe
push
sbb
(bad)
jnp
idiv
dec
test
imul
neg
repz
nop
sar
inc
sbb
(bad)
rcr
cmp
jecxz
repz
pop
mov
xchg
jno
adc
imul
sbb
pop
fnstenv
into
aaa
push
mov
or
test
or
mov
inc
xchg
loopne
xor
lods
inc
xor
mov
fisub
mov
lahf
jmp
jne
in
loope
xor
movs
in
and
xchg
pop
aam
dec
sar
sbb
inc
fwait
arpl
out
add
xchg
push
lea
out
in
js
sbb
repnz
das
lea
mov
jmp
xchg
or
mov
xor
lods
das
mov
or
mov
jnp
shl
mov
cmp
add
mov
jne
xchg
ret
mov
repnz
cmp
cmp
dec
add
xlat
xchg
and
shl
dec
inc
mov
in
repz
mov
(bad)
mov
(bad)
or
lock
fidivr
xchg
mov
loopne
fsubr
test
adc
jae
push
movs
mov
and
shr
jo
push
test
daa
int
or
and
xor
adc
adc
cmps
rol
sahf
xor
mov
push
gs
(bad)
bndldx
mov
jecxz
mov
xor
xchg
scas
pop
adc
cmp
sar
xlat
icebp
push
cmps
inc
jb
and
test
iret
ins
pop
xor
mov
jbe
aam
pop
popa
addr16
shl
lock
push
cld
and
clc
jl
pop
or
imul
dec
sub
dec
xchg
jg
aam
xor
and
das
mov
(bad)
dec
sbb
push
arpl
push
les
cmp
add
xchg
add
aad
shr
xchg
mov
(bad)
pop
fcomp
dec
add
mov
adc
add
jno
call
push
pop
in
and
cli
ror
shr
xor
fld
mov
leave
sbb
or
mov
mov
mov
cmps
mov
les
push
xor
out
jb
sbb
push
adc
dec
enter
xchg
test
ret
imul
call
icebp
cdq
outs
sbb
add
out
jle
rcl
cs
ret
inc
mov
or
fild
and
das
jg
bsr
cld
xchg
and
movs
xchg
daa
mov
dec
movs
add
loope
fst
fidivr
push
jnp
jo
add
je
not
jno
sbb
loope
fbstp
mov
pushf
fldcw
cli
adc
jecxz
mov
jmp
xlat
mov
pop
mov
fdivr
test
int
add
dec
pop
nop
out
movs
shl
shl
jns
fstp
sub
sti
pop
push
xchg
push
enter
repz
dec
rol
mov
adc
jecxz
inc
aas
adc
and
push
cwde
aaa
jg
or
jp
sub
mov
adc
mov
xchg
mov
js
cmps
sbb
imul
in
jo
mov
scas
jns
xchg
push
adc
out
mov
inc
or
stos
dec
ret
and
fsubr
pop
sub
add
cmp
popa
push
cs
ret
test
js
in
adc
test
cmps
inc
sub
xchg
jmp
mov
mov
xchg
mov
ja
out
cmps
mov
or
(bad)
call
push
cmp
lds
pushf
sbb
lea
pop
pop
imul
adc
ret
xchg
fst
pop
call
cwde
out
push
add
rcl
stos
inc
fld
jg
out
and
or
mov
dec
dec
ret
loop
movs
mov
jnp
rcr
jnp
xor
enter
pop
jl
call
arpl
iret
out
ret
call
jmp
push
xor
adc
aam
mov
jno
add
scas
mov
mov
push
in
pop
out
ins
mov
js
ins
popa
popf
shl
inc
cmp
iret
lods
stos
aad
dec
pushf
jp
movs
ins
xor
push
ins
xchg
cld
mov
inc
pop
push
je
test
mov
repnz
mov
pop
pop
jne
xchg
stc
adc
gs
or
leave
mov
pushf
or
xor
in
aam
jne
ins
retf
xor
mov
xchg
and
outs
sbb
inc
addr16
mov
leave
(bad)
aas
jo
cmp
out
popf
(bad)
jmp
leave
lock
sbb
cmps
ins
mov
cmp
cmc
fst
shl
pop
fsubp
out
(bad)
jp
pop
inc
and
xchg
jno
push
test
ret
shr
mov
sub
jg
push
int
xlat
cmps
add
dec
(bad)
icebp
aam
adc
fs
enter
xlat
lahf
sub
aad
xchg
mov
retf
xchg
push
out
(bad)
jmp
aaa
pop
test
pop
mov
(bad)
int3
retf
sbb
(bad)
xchg
(bad)
es
inc
mov
pop
mov
inc
sbb
in
sbb
push
lds
ror
and
fstp
pusha
sbb
pushf
xor
ins
stos
pop
and
adc
sbb
mov
lock
push
arpl
and
push
hlt
sar
and
xchg
push
lahf
ja
jg
imul
mov
push
cmps
xor
fwait
mov
stos
outs
stos
cwde
mov
add
bound
cmp
sahf
test
movs
xor
clc
call
lds
xor
retf
sub
fwait
or
loope
in
xchg
sbb
test
test
loopne
adc
push
outs
popf
push
pop
mov
pop
inc
imul
cmps
lds
rol
call
outs
retf
add
scas
call
jnp
push
clc
jmp
stos
sbb
or
cld
loopne
sti
mov
jmp
push
scas
ins
pop
pop
ror
rcl
inc
push
je
(bad)
sub
mov
and
loope
and
pop
push
inc
jp
mov
sar
rcl
push
push
inc
(bad)
lock
jo
gs
xchg
(bad)
push
or
sbb
repnz
clc
sbb
jne
sbb
jp
loopne
jne
sbb
repnz
adc
es
sahf
jg
mov
add
adc
arpl
push
xchg
mov
xor
push
retf
cmp
push
jle
out
ins
push
outs
(bad)
aaa
inc
int3
sahf
xchg
out
iret
and
pop
leave
sar
icebp
mov
push
xor
jmp
je
shl
mul
and
stc
rcr
push
sbb
pop
imul
xor
test
movs
inc
stos
fs
mov
sub
and
std
mov
fld
and
popf
mov
inc
pushf
bound
int
dec
stos
jl
inc
push
pop
and
jge
mov
push
cmp
les
aad
pop
xchg
(bad)
and
mov
movs
sub
fdivr
dec
les
mov
mov
jno
(bad)
ret
jp
mov
clc
pop
gs
adc
jl
mov
xor
retf
test
dec
sub
pop
sub
enter
cmp
popa
inc
cmps
stos
and
pushf
mov
std
ins
aad
mov
loop
mov
add
outs
lods
mov
push
out
mov
jne
cmp
(bad)
cmp
adc
leave
push
pop
sbb
xor
arpl
xchg
(bad)
cmc
fild
cmc
(bad)
xor
or
cmp
out
sub
mov
pushf
loope
call
icebp
out
xchg
nop
sahf
adc
test
sbb
pop
jl
cmp
jbe
jmp
sbb
sahf
and
xor
mov
mov
sub
pop
xchg
jb
adc
das
clc
push
das
push
in
loopne
ja
xchg
test
repz
xchg
mov
inc
or
clc
adc
dec
clc
pop
adc
test
aaa
push
cs
ret
jne
pusha
or
lods
xchg
xor
adc
cdq
outs
(bad)
test
in
xchg
pop
jecxz
das
push
in
and
repz
out
cmp
and
mov
and
int
sbb
movs
jmp
add
lods
inc
xchg
xadd
and
repz
sub
jmp
iret
mov
dec
ret
mov
mov
jns
fidivr
div
in
es
fwait
inc
popf
add
mov
jecxz
add
iret
test
push
cmps
movs
or
loop
add
hlt
scas
loop
push
add
test
imul
sbb
ret
ds
(bad)
cli
adc
leave
stos
stos
mov
fisub
cmp
jmp
push
and
scas
inc
mov
loop
aaa
mov
xchg
and
loope
mov
into
inc
data16
out
sbb
or
xchg
pop
mov
and
pop
sub
mov
jb
xchg
pop
adc
inc
mov
add
xchg
or
mov
dec
sub
sub
popa
jne
sub
or
jp
bound
jns
out
pop
xchg
retf
jno
add
into
jb
or
mov
loop
xor
mov
and
sub
pusha
xchg
fnstenv
sar
pop
loopne
aam
out
mov
push
xor
mov
stos
dec
sub
(bad)
lea
xor
and
inc
push
aaa
int3
shl
mov
adc
push
jl
pushf
jge
add
call
xchg
dec
or
adc
push
sahf
sar
xchg
dec
adc
adc
test
call
mov
aas
jle
sbb
jb
mov
shl
mul
inc
ds
popf
xor
popa
shl
adc
ja
cmc
pusha
add
aaa
xchg
shr
cmps
scas
es
and
push
mov
inc
fimul
cmp
rep
mov
pop
mov
adc
cdq
std
ret
data16
add
jae
jmp
pop
push
mov
inc
pop
pop
dec
loop
cmp
push
mov
inc
mov
loopne
shr
scas
cld
dec
mov
jl
icebp
jno
mov
ret
xchg
sti
or
(bad)
(bad)
enter
push
mov
dec
jge
xor
and
loop
cmp
retf
into
iret
pop
into
call
test
(bad)
(bad)
and
movs
inc
xchg
mov
cmp
retf
cli
dec
lea
icebp
adc
pop
xchg
and
ficomp
jo
scas
xchg
push
(bad)
cs
pusha
rcr
jo
inc
dec
mov
mov
pop
jmp
dec
aad
das
lahf
push
jge
in
mov
dec
sub
cld
sti
lock
add
aas
or
aaa
push
push
outs
into
retf
pop
inc
test
sub
(bad)
aas
sub
pop
les
jmp
pop
test
add
fisub
sub
movs
pushf
(bad)
xor
pop
mov
mov
push
pop
mov
aam
inc
aam
push
(bad)
ds
pop
cmp
push
sub
test
rol
inc
xchg
scas
push
mov
pushf
pop
ffree
jecxz
add
jnp
test
dec
xor
(bad)
xor
or
sbb
dec
fucom
iret
loopne
popa
xor
mov
or
es
in
mov
mov
or
stos
dec
pop
cmp
gs
ret
in
icebp
stos
xchg
loope
loope
ja
std
cdq
add
clc
push
jb
cwde
and
std
add
jg
push
fbstp
ret
adc
inc
rcl
lea
xor
cs
in
inc
adc
repnz
push
sub
xchg
cmp
jnp
sub
cmp
inc
dec
push
and
push
pop
ins
inc
cdq
fwait
add
pop
aam
outs
xchg
and
xchg
cmp
and
out
fisub
dec
mov
cmp
xor
arpl
xchg
jl
and
and
adc
mov
imul
stos
push
adc
(bad)
jl
push
and
sahf
es
push
das
dec
adc
sub
div
push
jns
loope
push
gs
sub
mov
or
xor
cmp
daa
outs
sub
and
rcl
xchg
xor
ror
xchg
subps
xchg
push
pop
movs
fs
xchg
xor
cmp
call
and
cwde
cmp
and
nop
cmp
pop
push
inc
je
stos
dec
cdq
add
pop
xor
idiv
sub
pop
cmp
les
btr
es
(bad)
jno
mov
lock
in
jbe
into
mov
addr16
ret
mov
fs
(bad)
xchg
push
(bad)
cli
cmp
jne
call
mov
push
and
dec
out
movs
imul
outs
cmp
ss
outs
push
dec
pop
fist
jmp
std
cld
sub
jno
pop
jp
jle
bndldx
xchg
jno
push
iret
inc
(bad)
mov
adc
xchg
jnp
pop
mov
aaa
nop
mov
add
test
or
mov
xchg
rcl
(bad)
test
jb
pop
mov
test
pop
push
dec
add
mov
outs
jns
test
and
jae
test
pop
fimul
push
mov
mov
sbb
sbb
jmp
xor
sbb
popf
adc
add
sbb
push
test
(bad)
or
mov
sbb
mov
stos
xlat
(bad)
jge
(bad)
or
mov
or
imul
loop
dec
push
bnd
jb
mov
xor
fld
and
fsub
sub
xchg
sub
jns
lds
cmp
xor
neg
aaa
jmp
mov
pop
or
jno
cwde
add
dec
or
dec
xchg
jl
ja
pop
arpl
daa
mov
arpl
ret
add
push
mov
call
ins
mov
aam
inc
fs
and
jmp
cs
scas
leave
sub
adc
cmp
pop
test
je
ret
adc
ins
sahf
leave
enter
movs
and
pop
push
enter
pop
jne
adc
cmp
adc
push
mov
enter
xor
popf
pushf
pushf
mov
cld
inc
sub
scas
mov
ret
cmp
mov
lods
stos
ficomp
hlt
ins
cmps
sar
and
stc
jecxz
cmp
jl
lahf
fmul
test
push
push
add
sbb
retf
call
xor
add
nop
aas
sar
pop
push
sub
or
repz
mov
dec
jge
and
or
cli
push
sub
xchg
repz
dec
test
cmp
push
neg
fisubr
sahf
leave
mov
mov
int
inc
pop
xchg
lahf
mov
and
or
and
dec
lahf
cmp
push
out
pop
cdq
cmp
jb
add
and
outs
adc
pmulhw
cwde
fadd
and
(bad)
and
fldcw
sbb
mov
(bad)
adc
bound
pop
ficomp
sbb
fwait
sbb
das
addr16
ret
pop
ret
stos
jle
cmps
ja
jo
(bad)
push
and
shr
pop
fisubr
loopne
mov
or
adc
scas
dec
xor
xchg
test
sbb
(bad)
loop
and
push
jmp
jg
cmp
jns
adc
fs
mov
push
mov
or
adc
out
jl
xor
and
aam
dec
ds
lock
(bad)
fcmovnb
or
adc
pop
jecxz
les
cmc
pushf
and
mov
in
rep
xchg
jp
mov
popa
add
movs
inc
and
xor
inc
outs
xchg
jns
sbb
mov
xor
in
cwde
jge
adc
push
push
mov
pop
lahf
mov
arpl
push
(bad)
mov
xchg
out
stos
adc
xor
jbe
jl
aaa
and
loopne
jl
leave
fs
fist
popf
inc
shl
add
or
mov
loopne
aad
pop
inc
adc
outs
inc
push
lds
vshufps
jp
sbb
sbb
int3
mov
sbb
push
cmc
sbb
jmp
sub
(bad)
xor
cmp
xchg
pop
or
scas
mov
mov
sbb
into
stos
imul
xchg
sub
or
icebp
push
fimul
imul
mov
sti
xchg
inc
cdq
cwde
aad
jg
ins
ins
sbb
pop
and
ins
add
jae
cmc
js
out
das
push
jb
in
adc
mov
aam
lock
mov
iret
and
sahf
sub
push
pop
xor
jmp
cmc
outs
and
popa
or
sub
fstp
lods
not
push
mul
sub
xor
jle
mov
pop
dec
push
or
xchg
mov
jle
neg
push
lods
outs
lock
rcl
sub
das
or
cmp
dec
dec
movs
adc
das
inc
jo
inc
fbld
cmp
inc
push
jno
leave
aaa
ficomp
jnp
mov
addr16
(bad)
and
daa
push
mov
lods
jbe
hlt
scas
pop
xor
int
dec
sbb
in
repnz
inc
stc
int
in
xor
xchg
ins
fucomp
icebp
out
cld
ds
cmp
mov
lods
xor
pop
out
es
dec
mov
push
loope
test
imul
shl
pop
lahf
xchg
jmp
out
in
imul
aaa
jno
push
add
and
mov
repnz
aad
aam
sbb
repnz
and
or
xor
sub
mov
mov
test
popf
cdq
jbe
repnz
daa
popf
mov
xchg
dec
or
in
add
pusha
into
xchg
leave
ins
pop
cmps
(bad)
ret
outs
xchg
push
dec
loopne
pop
aas
pop
loop
xchg
xor
(bad)
int3
nop
icebp
mov
mov
lods
mov
inc
test
dec
ins
pop
iret
lock
mov
sbb
dec
cmps
jmp
(bad)
cmp
inc
sub
ret
(bad)
sub
inc
add
cmp
and
cdq
aas
rcr
push
or
outs
(bad)
fcmovnbe
push
test
jle
jne
push
in
out
xchg
mov
mov
jnp
or
sbb
xor
imul
shl
mov
lahf
xchg
xchg
sbb
push
mov
push
or
movs
nop
pop
xchg
out
jge
inc
dec
aaa
dec
out
pop
and
in
cmp
sub
mov
push
jne
dec
lahf
push
outs
jne
imul
fwait
and
scas
cmp
pop
and
icebp
sub
sahf
pop
or
iret
push
std
js
mov
cmp
add
not
adc
push
xchg
ja
nop
cmp
(bad)
sbb
in
mov
ret
ror
iret
jmp
ss
mov
cmp
aam
push
call
pop
aad
and
pop
(bad)
sub
cld
test
les
(bad)
push
pop
ja
pop
jp
shl
mov
sbb
xlat
in
mov
inc
call
xchg
lahf
(bad)
adc
xor
repz
retf
ins
lock
ret
cmp
iret
sub
fs
inc
mov
sahf
les
sbb
mov
js
(bad)
xchg
push
je
mov
retf
(bad)
jb
out
jnp
mov
cli
js
xor
repnz
xchg
cmp
and
push
and
fdiv
pop
sahf
and
mov
mov
loop
mov
cmp
stc
movs
mov
inc
xchg
fwait
imul
push
pop
ret
data16
into
ss
(bad)
jmp
sti
jnp
jb
fcomp
(bad)
adc
adc
stc
xchg
xchg
cmp
mov
sbb
push
and
(bad)
mov
mov
in
cmp
jnp
jns
dec
ss
lods
dec
mov
rcr
and
push
and
cwde
jmp
fsubr
pop
jne
pop
cmp
aam
ret
repz
cmp
(bad)
pop
jp
jnp
sub
push
(bad)
dec
jbe
mov
(bad)
icebp
cmp
inc
lods
xchg
fist
rol
add
dec
bound
(bad)
adc
mov
push
sbb
scas
pop
rol
nop
jae
aaa
mov
test
push
or
imul
jp
jo
jno
jno
cmps
adc
mov
ret
cmps
pop
sbb
sbb
and
cs
add
adc
cmps
xor
inc
test
sub
cld
adc
xor
inc
push
jl
push
pop
shl
loope
pop
ret
aam
dec
adc
int
cmc
out
and
inc
mov
retf
push
aad
movs
(bad)
cmp
cwde
jae
ror
sti
rcl
adc
outs
leave
jmp
ret
push
push
and
arpl
fisttp
aaa
ret
leave
cmc
jmp
aam
fstp
mov
or
mov
mov
mov
cs
lea
(bad)
sbb
mov
xchg
jmp
scas
pop
inc
fisubr
adc
push
jns
inc
repz
retf
jmp
cmps
icebp
int3
and
xor
mov
xchg
or
xlat
mov
pop
into
jmp
push
(bad)
pop
aas
pop
mov
mov
push
add
mov
ret
push
xchg
rcr
mov
in
mov
mov
sub
adc
jae
pop
mov
pop
and
sbb
ss
jle
dec
and
and
xchg
push
fisttp
test
xchg
adc
or
or
and
sub
pop
jmp
mov
(bad)
or
mov
inc
jnp
jae
cwde
fidiv
lea
and
in
jge
push
lea
cli
push
fist
dec
in
xchg
inc
jl
or
hlt
ret
clc
cmps
mov
adc
push
aam
enter
inc
cmp
adc
jb
mov
cmp
imul
mov
nop
pop
int
jl
adc
mov
daa
push
clc
out
mov
retf
cmps
inc
ja
push
lods
mov
inc
daa
test
mov
pop
imul
in
xor
pop
or
cmc
popa
xchg
lods
lahf
pop
fs
inc
xchg
movs
sbb
push
inc
popf
push
cmp
loop
mov
dec
xchg
and
fistp
jae
mov
add
imul
mov
inc
xor
(bad)
neg
retf
or
push
inc
lahf
ins
data16
inc
mov
pop
jae
inc
pop
sar
pop
xor
daa
mov
inc
lods
popf
dec
into
sbb
jmp
sbb
and
inc
not
push
push
or
cmp
push
in
cmp
dec
mov
pushf
dec
push
cmp
icebp
dec
jp
jno
jae
call
sub
mov
mov
lods
popf
out
icebp
xchg
mov
test
add
ins
push
shl
(bad)
imul
scas
sbb
sbb
lods
test
push
fist
push
sbb
sti
cdq
mov
fptan
push
loop
pop
push
hlt
mov
mov
aas
push
mov
sub
cmps
xlat
(bad)
cmps
or
sbb
push
mov
jo
inc
dec
jns
dec
mov
mov
test
out
lock
adc
and
in
or
pop
cmp
mov
hlt
pusha
dec
xor
push
push
sub
sbb
mov
call
mov
jno
inc
ror
aad
push
ds
ins
dec
dec
sub
sti
sbb
or
daa
pop
movs
mov
inc
out
mov
jb
pop
fstp
pop
pop
xor
cmps
fisub
fld
je
iret
xchg
sbb
mov
out
adc
cmp
scas
div
mov
outs
dec
push
and
sbb
xor
push
call
(bad)
sbb
and
and
dec
mov
mov
cmp
imul
fstp
push
pop
in
icebp
or
(bad)
clc
and
fisttp
and
lods
mov
js
cmp
imul
adc
mov
mov
mov
cmp
pop
xor
fldenv
fwait
xor
or
push
std
sbb
cld
adc
popf
mov
xor
sub
rol
sbb
cmp
mov
fsub
adc
data16
mov
sub
mov
sbb
icebp
pop
(bad)
pop
mov
pop
push
in
and
call
mov
shl
xchg
push
mov
add
xor
call
out
iret
imul
xor
cdq
mov
xlat
loop
fdivr
inc
dec
enter
dec
mov
and
out
mov
sar
pop
rcl
test
xchg
pushf
add
scas
into
fimul
inc
pop
jbe
sub
or
rcl
jl
adc
mov
inc
mov
or
lock
or
jecxz
sbb
xchg
push
pop
clc
hlt
sub
fld
xor
jno
pop
lods
inc
pop
sbb
mov
outs
xchg
jae
adc
cli
not
cmp
pop
dec
movs
test
mov
icebp
repnz
cwde
inc
call
fcom
int
pop
mov
jge
cmps
xor
dec
sub
out
add
fidivr
stc
shl
push
iret
jmp
not
sbb
hlt
jo
dec
dec
clc
adc
push
cmp
cld
jo
push
push
rep
adc
sbb
mov
stc
adc
jmp
cmp
out
mov
push
es
cdq
aas
rol
int3
test
jne
dec
ror
xchg
out
and
rcr
push
sub
jge
sub
sub
enter
xchg
jg
imul
sub
cmp
xchg
popa
aad
sub
mov
sub
sti
xor
hlt
or
shl
mov
ficomp
fidivr
scas
mov
mov
les
fcom
ja
sbb
xchg
sub
cld
movs
cwde
jns
jo
lahf
(bad)
pop
pop
ret
add
mov
pop
and
test
jnp
ja
inc
xor
nop
pop
sbb
sahf
mov
int
mov
in
pop
xor
or
xchg
imul
dec
cli
pop
fld
dec
mov
adc
push
and
add
and
xor
(bad)
inc
inc
pop
inc
sbb
fstp
pop
mov
and
mov
or
pop
xor
push
pop
pushf
jmp
fwait
(bad)
cmc
cli
push
outs
rol
das
and
in
inc
push
icebp
and
dec
add
ja
repnz
inc
xchg
push
mov
xor
pop
popa
push
or
mov
dec
jnp
sub
fldenv
pushf
xchg
lock
cli
mov
(bad)
dec
jnp
cmp
div
cmp
cmp
popa
xchg
fs
sbb
lods
pop
add
mov
xchg
lods
aas
pop
mov
add
into
push
pop
shl
jns
push
inc
stc
sar
nop
stos
adc
inc
lahf
inc
fidiv
imul
or
(bad)
jo
xlat
ins
and
retf
mov
jmp
gs
add
clc
mov
sub
les
rcl
rcl
shr
jmp
(bad)
lahf
mov
jo
add
jno
dec
out
out
ins
loop
pushf
xor
scas
call
(bad)
shl
inc
pop
xchg
xchg
(bad)
popa
inc
cmp
adc
nop
sub
and
js
fdiv
and
les
sub
clc
mov
fdiv
jbe
int3
dec
adc
rcr
xor
call
in
out
jge
ds
cmps
aad
mov
cmps
sbb
inc
(bad)
mov
daa
outs
mov
outs
or
(bad)
xchg
pop
dec
retf
dec
std
push
mov
mov
mov
xor
cwde
aad
add
push
fcmovu
mov
mov
cmp
inc
mov
fmul
sbb
ja
(bad)
push
daa
call
std
aad
loope
xchg
sbb
mov
retf
and
sahf
pusha
in
and
jge
popf
and
mov
jno
imul
repz
pop
sub
lock
and
sub
mov
out
int3
enter
retf
adc
(bad)
popa
cmp
arpl
not
mov
mov
pop
xor
ds
ror
add
cwde
mov
add
stos
inc
mov
in
aam
loope
pusha
mov
mov
aas
or
stos
loope
sub
sbb
stos
lods
xor
adc
sub
ds
mov
sub
aas
(bad)
jmp
mov
mov
(bad)
mov
mov
inc
out
cmp
test
adc
imul
xlat
gs
jmp
pop
(bad)
pop
lock
xchg
cmp
jp
sbb
cs
sub
scas
lahf
iret
pop
xor
xchg
and
inc
sub
adc
ss
push
sub
test
and
inc
scas
(bad)
dec
sub
dec
inc
or
jle
leave
neg
je
jbe
and
retf
adc
sbb
pop
fstp
inc
data16
aaa
stc
out
es
div
out
cli
hlt
jmp
fld
dec
retf
xor
std
faddp
ror
add
jbe
pusha
mov
fnstsw
xchg
aaa
mov
leave
jmp
mov
mov
xor
daa
xchg
pushf
and
push
xor
retf
sub
fmulp
adc
sub
cmp
jmp
mov
pop
add
sbb
add
push
imul
inc
in
mov
loopne
xchg
cmp
lahf
shr
out
and
jno
repz
mov
mov
cwde
jmp
into
hlt
movs
push
loopne
rcl
cli
push
pop
scas
add
jmp
pop
lods
clc
or
imul
pop
inc
dec
dec
xchg
ja
pop
push
push
mov
cdq
leave
loopne
test
pop
push
pop
jae
cmp
shl
cmp
sti
push
add
pop
xchg
and
daa
data16
into
dec
or
mov
mov
loope
mov
cs
in
xchg
pop
sbb
pusha
jmp
mov
mul
xor
into
add
mov
cmp
sbb
sub
sti
int
xor
sbb
daa
nop
and
mov
jmp
jl
cs
out
inc
adc
repnz
pop
mov
cmp
jae
daa
ss
ds
inc
push
leave
div
loop
and
out
dec
cli
cld
retf
cmp
loopne
xor
jmp
jmp
dec
xor
jp
rcl
pop
popf
sub
push
inc
cmp
ins
adc
sub
mov
cdq
nop
ds
outs
inc
repz
dec
xchg
mov
int3
push
push
sbb
jmp
aaa
in
cmp
cmp
cmp
stos
ret
mov
sub
push
jge
xor
inc
dec
jae
cmc
into
repnz
pop
push
out
cmp
mov
sbb
lods
clc
mov
xchg
xor
cs
mov
mov
add
mov
ret
add
pop
or
test
fidiv
shl
outs
(bad)
scas
dec
out
dec
ret
aaa
sbb
sub
mov
aas
and
cmp
pop
push
int
mov
scas
movs
cmp
cs
sar
stos
scas
in
sub
(bad)
int3
fldcw
sbb
sbb
cmp
mov
mov
add
scas
ins
push
ja
or
dec
adc
(bad)
js
sbb
xor
popf
mov
iret
or
push
sub
mov
cs
push
pop
cli
jne
mov
ret
xlat
dec
ret
fcom
popf
push
and
aad
test
cmps
nop
jle
push
outs
ins
pop
or
imul
xchg
stos
(bad)
mov
fadd
les
ret
in
popf
es
inc
scas
sbb
or
clc
or
cmc
lahf
dec
xchg
or
jne
add
mov
sub
jnp
inc
push
mov
imul
std
xchg
adc
xor
out
lahf
mov
sbb
imul
shl
into
jp
sub
push
stos
movs
dec
pop
jno
hlt
mov
aad
cld
push
jmp
loope
addr16
jg
(bad)
jp
aad
ja
xchg
outs
and
mov
mov
jle
push
outs
loope
pop
xchg
fs
outs
push
test
mov
mov
add
(bad)
pop
loope
inc
pop
jns
dec
scas
in
lods
cmp
jno
mov
xor
outs
mov
in
nop
daa
cmp
(bad)
ja
mov
mov
mov
inc
icebp
out
icebp
mov
xchg
lahf
cs
outs
repnz
inc
cs
mov
repnz
cmp
jbe
cdq
or
inc
pop
pop
cmps
lods
sbb
push
jmp
push
or
pop
mov
das
xchg
mov
push
adc
adc
xchg
es
es
pop
nop
push
(bad)
and
scas
ret
int
(bad)
cld
fldenv
jecxz
or
retf
or
mov
daa
or
fiadd
adc
sar
inc
rcr
adc
cli
retf
ds
pushf
dec
adc
out
xor
xor
popf
jb
push
mov
pop
aaa
mov
sub
jecxz
or
jnp
into
cmp
pusha
mov
adc
stc
pushf
sub
dec
push
mov
repnz
movs
pop
pushf
mov
xor
sahf
xlat
push
sub
xchg
dec
cmc
sub
sub
mov
mov
out
lds
fwait
icebp
xchg
inc
out
mov
mov
fcomi
out
sbb
mov
push
xchg
test
loop
jo
daa
xor
pcmpeqb
mov
fsubr
add
mov
popf
mov
test
fsub
test
fidiv
jg
dec
xchg
jnp
out
dec
jle
cmp
mov
cwde
push
mov
or
cwde
mov
sbb
xchg
clc
xor
(bad)
aas
lock
jns
ins
jge
mov
ret
mov
stos
jnp
jne
sbb
adc
mov
dec
jecxz
mov
mov
mov
call
mov
xchg
push
push
cld
scas
lods
enter
xchg
mov
jae
jno
or
inc
shl
xor
imul
mov
adc
icebp
aaa
add
fdivr
shl
lods
pop
mov
mov
ins
sub
(bad)
leave
push
and
bound
mov
dec
lahf
enter
(bad)
icebp
pop
test
bound
pop
outs
mov
sub
push
add
movs
arpl
scas
mov
adc
cmps
and
shl
scas
shl
enter
push
mov
sbb
clc
xor
cli
cwde
pushf
dec
sub
stos
(bad)
je
add
push
jl
mov
imul
adc
pop
fisttp
dec
ret
cmp
fild
add
lods
mov
bound
cli
movs
nop
je
push
and
das
cmps
push
or
div
dec
pop
(bad)
jmp
or
mov
iret
sbb
xchg
pop
mov
jbe
xchg
sbb
leave
push
clc
and
test
sub
mov
in
mov
cmp
sub
scas
mov
cmp
cmps
cmc
xor
adc
cdq
in
(bad)
sub
mov
(bad)
inc
mov
inc
out
sub
pop
sbb
pushf
test
add
arpl
out
adc
(bad)
dec
push
ins
jbe
cmp
push
inc
ficomp
fmul
scas
sbb
and
sub
sub
ins
ja
mov
mov
loope
and
icebp
repz
lods
ja
outs
mov
mov
inc
(bad)
and
adc
inc
retf
mov
aad
adc
and
push
push
imul
push
or
sub
and
aam
nop
xchg
test
cmc
and
sbb
int3
loop
test
jo
push
xor
push
mov
jge
mov
cld
icebp
(bad)
retf
inc
dec
sub
lods
stos
nop
mov
push
xor
or
inc
adc
cwde
inc
js
retf
fidiv
(bad)
mov
pop
cmp
aad
fisub
push
jae
jmp
inc
sar
mov
sbb
sti
pop
int
or
aas
(bad)
(bad)
dec
push
in
scas
mov
add
rcr
ror
test
adc
rcr
sbb
loop
or
lds
and
xchg
out
std
cmp
ret
cmp
mov
push
pop
mov
dec
call
stos
mov
(bad)
lock
cmc
sbb
leave
xchg
call
adc
push
xor
push
xlat
xchg
push
std
loopne
gs
mov
cwde
rcr
fs
pop
xchg
div
pop
sbb
out
cmp
or
add
adc
test
mov
jl
iret
push
inc
repz
cmp
retf
ja
dec
iret
xchg
and
minps
xchg
(bad)
adc
inc
push
call
mov
cmp
ficom
les
clc
popa
adc
inc
push
mov
xor
sbb
cmps
into
or
mov
jnp
shr
dec
adc
int
ins
call
sar
push
rcr
arpl
xchg
mov
pop
mov
bound
fldenv
push
cmp
in
cmp
inc
add
mov
xchg
lahf
push
inc
test
sar
pop
mov
fwait
ins
jns
data16
ficomp
call
in
push
sbb
sbb
push
xor
sub
xor
or
xor
inc
jmp
jg
xor
inc
fidiv
xlat
imul
jmp
stos
retf
push
pop
ret
xchg
xor
mov
popa
retf
sub
gs
(bad)
mov
ins
sub
outs
enter
shl
(bad)
in
pop
add
out
gs
cmp
retf
lods
shr
js
lods
sub
sbb
dec
dec
push
add
and
xchg
xchg
sti
out
push
mov
sbb
jne
add
stos
fistp
pop
push
jne
push
lods
cmp
jb
jb
xor
mov
or
mov
retf
ror
sbb
jge
scas
aam
(bad)
pop
and
stos
add
test
jnp
dec
loop
mov
push
mov
xchg
pop
mov
sub
imul
push
outs
scas
fidivr
repnz
cmps
das
aas
jae
jmp
jo
cmps
xor
adc
cmp
sbb
and
lea
inc
dec
push
out
cmp
stos
inc
faddp
cmp
lods
push
les
or
mov
mov
test
jo
push
lods
out
movnti
mov
aaa
in
(bad)
out
fnsave
add
mov
lds
pusha
sti
adc
mov
ins
jmp
mov
mov
mov
ins
(bad)
enter
in
and
pop
loopne
jmp
cmp
push
aas
inc
(bad)
xchg
jmp
or
adc
imul
mov
push
stos
push
dec
adc
scas
sub
repz
mov
dec
jmp
mov
push
arpl
adc
mov
imul
jns
pop
push
push
sub
jbe
aam
inc
fwait
xchg
adc
push
mov
ror
(bad)
in
loope
or
pushf
adc
imul
test
adc
dec
pusha
mov
cmp
sbb
xchg
stos
sub
enter
dec
mov
call
pop
shl
adc
and
xlat
adc
jge
jecxz
sbb
xchg
(bad)
iret
das
imul
add
push
mov
jno
cmpps
out
jmp
push
aaa
pop
push
push
jg
cmps
icebp
out
jmp
sub
mov
dec
test
rol
fist
jns
icebp
push
sbb
mov
loop
call
mov
inc
push
ret
bound
dec
or
xchg
in
or
imul
mov
mov
mov
repz
pop
jns
sti
leave
bound
int3
add
jae
xchg
rcr
mov
push
or
je
ret
dec
iret
scas
xor
pop
xchg
pop
or
push
fmul
adc
fsubr
and
(bad)
sub
test
mov
pop
sub
mov
rcl
add
sub
sahf
aam
mov
inc
sbb
scas
sbb
lock
fdiv
inc
sub
cmps
inc
fistp
imul
add
jbe
test
sub
scas
jl
addr16
mov
ins
hlt
aas
inc
xlat
and
outs
jno
jge
dec
xor
or
adc
loopne
icebp
test
add
push
inc
jge
pop
and
iret
xor
jge
test
inc
pop
shr
mov
dec
push
xor
je
xchg
jo
adc
fsubr
jbe
pop
retf
sub
es
jp
lods
mov
cmp
jmp
and
push
push
dec
pop
rcr
sub
das
or
sbb
iret
jne
aad
in
in
pop
stos
sahf
idiv
mov
sahf
call
cs
pop
xchg
call
adc
mov
jmp
cmp
lds
and
movs
add
cmp
stos
sub
test
adc
repnz
cli
fcomp
shl
iret
test
mov
out
jb
mov
and
ins
adc
mov
popa
inc
dec
mov
or
inc
fidivr
jns
push
in
(bad)
xlat
imul
lods
push
out
aas
stos
push
pop
pop
or
push
fimul
or
sbb
cmp
sub
mov
pop
mov
test
inc
loope
pop
sti
mov
out
cmp
or
pop
mov
arpl
aad
xor
lock
push
push
jmp
cmps
dec
xor
mov
mov
popa
pop
dec
jne
mov
mov
(bad)
cld
jl
pop
in
(bad)
sahf
imul
mul
xchg
adc
push
xchg
cmp
sbb
fwait
cli
pop
cli
cmp
adc
fsub
mov
arpl
fcomp
fcom
outs
or
sub
jmp
push
imul
in
loope
into
cmps
push
je
push
fisubr
and
pop
push
(bad)
lea
daa
hlt
popa
fmul
and
stos
push
(bad)
jg
in
jnp
inc
imul
shl
jo
or
push
and
xor
pusha
scas
adc
push
stc
xor
dec
mov
jae
pop
cmps
xchg
push
test
jecxz
pop
sar
sub
adc
push
jne
dec
clc
fiadd
jne
cmp
xor
scas
adc
jns
xchg
std
mov
loop
mov
loope
inc
pusha
imul
jp
push
imul
cmc
lods
into
pusha
pop
dec
bnd
cmp
mov
mul
call
dec
fnsave
out
pop
or
cmps
ret
jnp
push
adc
xor
dec
rcl
das
int3
mov
loopne
popf
pop
neg
(bad)
shrd
bound
xlat
das
hlt
scas
or
dec
cmps
popf
cs
fdivr
sub
std
push
sar
out
xor
jbe
ror
aas
jbe
push
sub
pusha
and
dec
xor
retf
dec
retf
shr
push
jl
cmps
sbb
push
jbe
rcr
sub
ins
cli
add
mov
jae
mov
dec
push
repz
mov
push
icebp
add
fmul
int3
aaa
cmps
test
test
cdq
mov
int
sbb
aaa
xor
daa
mov
shl
add
mov
xchg
dec
loopne
mov
movs
or
mov
js
ins
ret
lds
jmp
xor
in
int3
mov
es
push
fstp
fiadd
loopne
mov
fsubp
mov
jecxz
pop
push
pop
inc
scas
or
pusha
xor
push
fs
and
icebp
(bad)
fucomi
(bad)
ins
test
mov
cmps
gs
idiv
addr16
stos
or
cmp
lock
iret
jecxz
je
lods
mov
fiadd
stos
fdivr
shl
xchg
xor
fs
fisttp
scas
arpl
pop
lods
mov
dec
mov
movs
inc
xchg
mov
cld
inc
popa
mov
push
out
popa
aaa
int
jle
jp
leave
loop
mov
cdq
mov
jmp
ret
dec
push
xchg
xor
mov
sbb
jbe
nop
cmp
add
cli
inc
ins
push
sub
mov
fwait
cmp
(bad)
gs
inc
in
loope
in
jb
jno
mov
int
inc
neg
repnz
sahf
or
push
inc
cmp
pushf
cmp
mov
adc
mov
mov
hlt
add
cmps
jno
mov
fadd
sti
cmp
stc
pop
adc
push
mov
shl
(bad)
fcomp
cmp
stos
jbe
cmps
jo
in
add
sub
rcl
jge
xchg
adc
or
push
pushf
cmp
(bad)
jmp
mov
jp
pop
xor
scas
das
mov
xlat
mov
sub
aad
pop
lods
out
cli
fst
pop
or
add
jp
lods
std
xchg
fstp
mov
sbb
and
pop
mov
cmp
pop
not
jle
or
pop
add
iret
xchg
aad
ins
pop
xor
sti
rol
jne
dec
xchg
xchg
cmp
addr16
repnz
mov
nop
push
retf
je
cs
pop
test
int
mov
and
or
dec
push
test
xor
bound
mov
sub
nop
jo
xor
xor
cmps
mov
jg
and
mov
mov
loope
mov
dec
or
cmp
cwde
pop
loope
inc
jbe
pop
bswap
cmp
add
gs
mov
mov
jo
(bad)
shr
shl
enter
cmc
mov
cmp
pop
cmps
das
ret
inc
pop
add
cli
xor
aaa
aam
sub
sbb
cmc
ret
daa
clc
xlat
sahf
xchg
imul
push
pop
adc
mov
jg
mov
and
rcl
inc
inc
mov
adc
out
popa
add
dec
pop
jg
or
mov
jl
inc
xchg
out
mov
es
scas
js
cmps
in
or
xchg
push
pop
or
or
cld
adc
mov
sar
cwde
popa
and
lahf
pop
pop
dec
bnd
mov
imul
cmps
dec
mov
xor
fadd
lea
loopne
push
test
add
dec
cmp
cmc
lock
sbb
xor
inc
fcom
jne
js
sub
call
add
jbe
pop
mov
addr16
xor
aas
mov
pop
pusha
mov
sub
sbb
int
add
xor
movs
data16
test
popa
jbe
js
int3
sar
push
in
out
fs
test
lods
mov
jmp
or
xchg
(bad)
sbb
stos
call
js
(bad)
icebp
dec
jp
or
jbe
xchg
pusha
jle
ret
pop
sbb
jb
aas
pop
les
ja
out
(bad)
movs
jo
sbb
ret
and
imul
pop
xchg
in
loop
stos
ror
mov
imul
mov
dec
scas
aas
stc
and
loopne
xor
and
movs
fmul
iret
xchg
dec
xor
mov
push
mov
nop
leave
push
fs
mov
jb
cs
sub
inc
xchg
imul
jmp
sub
sub
inc
jns
jle
push
xchg
sub
repz
dec
xor
nop
push
push
aad
enter
fiadd
mov
xor
push
movs
and
sbb
ins
mov
jo
sbb
jle
gs
mov
xchg
stc
loope
sbb
fs
push
jmp
fnstsw
hlt
jo
push
shl
neg
bound
stos
sub
sbb
scas
sbb
adc
xor
push
add
sub
cs
in
pop
aas
mov
jecxz
cdq
xchg
mov
imul
and
pop
ja
sbb
sub
jno
jnp
adc
stos
test
jns
sub
fnsave
cmp
int
mov
mov
xor
repz
outs
ins
mov
xchg
aas
idiv
mov
inc
mov
adc
mov
and
lods
or
cmps
sbb
push
adc
xchg
shr
aaa
scas
icebp
mov
in
call
mov
mov
fdiv
mov
cdq
jmp
and
call
jb
adc
xor
jp
cmc
lock
adc
fisttp
pusha
jp
inc
fs
rcl
inc
sti
jl
fyl2x
jmp
iret
and
out
pop
cmc
mov
xor
xchg
popf
xor
hlt
jo
and
(bad)
ds
jl
xchg
xchg
call
out
jmp
sahf
inc
push
mov
inc
cmps
push
adc
lods
je
sub
dec
mov
stc
or
imul
loop
dec
push
daa
jmp
sub
mov
sub
cmp
pushf
jl
mov
mov
mov
cmps
sbb
jle
inc
jl
mov
jb
fst
inc
sub
mov
sbb
fisub
and
ror
adc
outs
int
pop
aaa
dec
fistp
aas
sub
leave
jns
jle
shr
push
fld
cmp
cld
cmp
bound
xchg
lea
push
cmp
xor
mov
js
push
in
dec
(bad)
or
sbb
fdiv
idiv
add
pop
enter
add
push
pushf
adc
ror
or
cmc
dec
pop
cmp
xor
sar
arpl
arpl
(bad)
sbb
dec
adc
cld
fnstenv
mov
adc
push
fiadd
mov
std
or
cmps
sbb
mov
pop
aas
mul
cmp
push
pop
push
pop
jle
in
or
push
and
add
push
or
jecxz
cld
stc
pop
jnp
rcl
ins
xchg
jecxz
nop
jns
mov
mov
(bad)
movs
out
push
mov
in
sub
adc
dec
pop
jl
jno
movs
sbb
xor
adc
push
loope
inc
mov
cmps
je
punpckhdq
push
rcl
retf
jo
ins
push
mov
cld
or
pop
pop
sar
xchg
pop
adc
sbb
pop
or
cmps
movs
movs
fidivr
test
add
pushf
push
jnp
sbb
or
loop
mov
nop
in
out
mov
out
pushf
bound
div
xlat
mul
shr
stos
fcomi
into
lds
iret
pusha
leave
mov
push
repnz
leave
adc
xlat
jmp
lock
jb
pop
or
lds
xchg
mov
mov
js
xlat
fiadd
sti
mov
fwait
dec
wrmsr
dec
xchg
pop
fadd
(bad)
rep
in
xchg
inc
and
sub
out
sub
xchg
es
out
mov
out
sahf
cmp
add
push
lods
inc
mov
in
shl
sub
or
and
jbe
(bad)
(bad)
popa
inc
pusha
mov
ins
or
jb
xchg
fwait
call
and
fdiv
ds
stc
push
jno
out
enter
or
ins
sbb
mov
adc
mov
aas
out
mov
xlat
loopne
ja
sub
imul
push
adc
or
cmp
pop
push
sbb
dec
adc
loope
shr
or
push
mov
nop
fidivr
fstp
mov
js
fs
and
mov
rol
cwde
sbb
mov
popf
adc
adc
xor
and
adc
imul
dec
scas
sahf
js
jnp
jb
mov
cmp
stos
mov
sar
jnp
leave
fwait
inc
sahf
popa
mov
adc
mov
xchg
repnz
and
inc
mov
xor
call
xchg
imul
xchg
(bad)
ds
or
xor
mov
or
scas
push
inc
xchg
dec
pusha
cmp
ror
movs
inc
xor
out
mov
js
out
mov
mov
jmp
xchg
xor
loope
xchg
mov
push
push
in
lahf
loope
dec
cwde
dec
sub
lea
xchg
je
ror
in
mov
(bad)
jp
in
mov
(bad)
pop
sub
test
into
mov
jnp
cwde
test
mov
and
pusha
or
test
fstp
js
or
outs
shr
push
mov
mov
push
jmp
clc
mov
in
ret
js
push
inc
sbb
xlat
pop
pop
out
in
cld
or
movs
mov
loop
sub
inc
fwait
rcl
leave
mov
(bad)
ficomp
inc
push
movs
mov
dec
arpl
icebp
inc
mov
add
nop
enter
fist
push
jl
dec
(bad)
mov
jne
retf
loop
jnp
adc
mov
cmp
dec
push
or
xor
stc
jle
push
paddb
fidiv
pop
cmp
mov
jmp
scas
loop
and
inc
sbb
mov
mov
add
cdq
cmps
jae
sbb
and
xchg
push
jmp
mov
imul
add
mov
dec
mov
loopne
push
or
push
xor
mov
cli
out
sub
in
jno
jae
loopne
loop
outs
adc
push
lds
ins
ret
out
sub
call
push
jl
daa
fldenv
bound
scas
jg
pop
mov
jno
pop
arpl
and
cs
dec
push
mov
xlat
movs
imul
jle
es
pop
movs
push
sub
jnp
xchg
mov
test
dec
cmp
push
or
fdivr
mov
test
push
add
gs
(bad)
inc
pushf
push
cmp
pop
call
popf
pop
dec
sbb
out
or
stos
test
sbb
ror
fcompp
cwde
sub
movs
sub
mov
dec
xchg
push
cwde
mov
(bad)
in
shr
(bad)
mov
xlat
ins
arpl
mov
rol
bound
cwde
enter
xchg
xor
adc
shl
out
jg
jmp
hlt
ror
rcl
in
dec
call
sub
mov
shl
movs
shl
push
shr
cli
hlt
mov
mov
lahf
mov
addr16
jno
mov
mov
sar
div
retf
hlt
data16
sbb
cmp
les
fild
pop
sub
mov
jo
jno
push
(bad)
addr16
dec
xchg
in
(bad)
js
bound
popa
xlat
pop
movs
fistp
dec
fnclex
jle
daa
cmp
pop
mov
push
call
fidiv
rol
ret
in
mov
les
inc
sbb
das
mov
fninit
sub
test
inc
js
xor
dec
xchg
ja
(bad)
cld
and
jg
xor
aad
xor
xor
jmp
retf
cs
dec
stos
mov
cmp
dec
lods
jne
rcl
jne
and
js
popa
cli
shr
fld
fisub
movs
scas
mov
pushf
xlat
push
sbb
retf
and
push
jmp
aad
adc
mov
loope
pop
mov
xchg
push
outs
mov
sbb
xchg
cmps
push
cmps
pushf
movs
cmp
inc
dec
mov
sbb
(bad)
mov
aaa
(bad)
adc
or
arpl
adc
mov
imul
ds
scas
sbb
int
mov
loopne
adc
mov
daa
loopne
jb
push
hlt
clc
dec
ret
and
sub
shr
sahf
pop
cld
and
or
mov
scas
inc
shr
push
rcl
repz
cld
mov
dec
in
popf
into
dec
push
int
les
inc
cmps
retf
(bad)
pop
(bad)
jmp
ins
pop
icebp
xchg
call
xchg
cmp
aas
out
lds
scas
pop
pop
jmp
dec
loope
add
sbb
mov
xchg
loopne
lods
sbb
ins
das
xchg
adc
push
xchg
sub
adc
repz
cmp
cmp
(bad)
test
add
sbb
or
mov
push
js
sub
(bad)
cdq
inc
js
test
out
dec
inc
popa
lahf
jns
es
jno
add
rol
add
pop
into
fst
arpl
mov
mov
stc
xor
xchg
add
jge
or
ret
inc
and
mov
les
push
mov
or
mov
xchg
call
nop
push
mov
jno
cmps
aaa
pushf
dec
dec
pop
push
cmps
xchg
addr16
mov
xchg
push
mov
retf
fwait
scas
xlat
or
and
loop
push
loop
in
xchg
jnp
outs
clc
les
and
jl
pusha
push
sbb
or
loopne
ss
xacquire
mov
imul
scas
iret
xlat
movs
das
retf
or
jmp
hlt
xchg
xor
stos
fiadd
push
dec
jae
ret
pusha
aas
inc
sahf
cld
ds
mov
jp
div
dec
mov
push
aaa
adc
sbb
scas
adc
inc
iret
sbb
sub
out
gs
push
es
sub
cmps
clc
idiv
or
inc
lock
fldenv
or
push
pop
mov
rcr
lods
mov
adc
cdq
enter
pushf
pop
jbe
loopne
xchg
or
jne
inc
popf
out
rcr
sub
mov
xchg
mov
mov
mov
scas
rcr
test
xchg
fld
pop
push
leave
aam
dec
out
jae
add
cmp
and
mov
sub
leave
icebp
xchg
adc
popf
out
in
arpl
in
push
push
jb
sub
adc
(bad)
aad
jnp
sti
fs
ror
in
sbb
fbstp
cmp
or
rol
imul
xlat
aaa
xchg
imul
push
dec
add
push
xor
pushf
jp
push
xor
push
jmp
dec
lds
fstp
cmp
mov
add
or
fwait
test
mov
scas
and
mov
mov
(bad)
dec
mov
xor
sub
stos
sub
xor
aad
aam
xchg
dec
in
mov
jmp
movs
mov
aam
les
test
rcr
sub
push
or
fmul
xchg
js
adc
xchg
jo
mov
cmp
push
adc
adc
nop
push
xor
cdq
inc
loope
jne
push
in
(bad)
loopne
fidivr
addr16
fisttp
pop
pop
(bad)
push
je
push
jecxz
out
push
pusha
cld
dec
fidiv
in
fisttp
mov
mov
pop
push
adc
cmc
lea
xlat
and
sbb
stos
mov
jmp
pop
mov
mov
lds
lahf
fcmovnu
cli
sub
adc
pop
jns
jle
test
cmp
sbb
hlt
xlat
rcr
xlat
xchg
hlt
rcl
mov
in
cmp
lock
cdq
ret
inc
fisub
ret
(bad)
sbb
add
loopne
jo
(bad)
dec
mov
retf
icebp
icebp
(bad)
movs
pop
ss
sub
xor
mov
(bad)
not
pop
mov
pop
dec
xchg
in
pop
mov
call
ret
dec
scas
lea
adc
mov
mov
xchg
fimul
mul
jbe
push
mov
lahf
jle
cmp
(bad)
jl
jle
mov
(bad)
xchg
pop
jg
lea
ds
inc
or
daa
je
ror
sub
mov
jbe
movs
(bad)
xchg
mov
sbb
adc
or
push
mov
dec
rol
xchg
inc
dec
shr
push
mov
and
lahf
jmp
xchg
and
adc
fwait
out
es
ds
retf
mov
jg
pop
in
lea
dec
push
leave
dec
repnz
push
ss
and
jmp
and
pop
jecxz
lds
fcom
inc
sahf
mov
shl
js
ja
jmp
sti
popa
rol
jns
sar
ins
aam
inc
xchg
sub
retf
(bad)
fisttp
jno
cmp
xchg
add
aas
in
xchg
jne
gs
fistp
sub
push
or
mov
push
bound
fbld
movs
movs
mov
retf
sub
ror
xchg
adc
icebp
mov
dec
iret
push
mov
mov
stos
mov
mov
pop
mov
mov
dec
sub
(bad)
inc
in
mov
sbb
push
shl
test
out
repz
out
cmp
ss
xor
mov
cmp
and
out
mov
pop
mov
cmps
mov
es
ds
mov
aas
cli
or
movs
jb
xchg
arpl
(bad)
xchg
(bad)
xor
push
sbb
adc
test
movnti
sub
fsub
mov
test
(bad)
pop
or
mov
movs
inc
and
fiadd
ret
test
test
sbb
hlt
mov
es
aaa
pop
mov
push
mov
mov
add
adc
leave
loopne
jo
pop
xchg
jne
pop
gs
cli
adc
lods
shl
loopne
(bad)
or
imul
add
adc
fld
stos
lea
movs
sbb
fnstsw
and
imul
(bad)
ror
std
cdq
(bad)
mov
ret
cmps
or
cmp
cmp
jne
mov
pop
pop
cmp
add
icebp
div
add
loope
push
push
leave
test
(bad)
femms
call
mov
add
scas
add
(bad)
and
bnd
sub
cmps
adc
and
adc
push
xchg
fistp
jbe
cmps
pop
(bad)
and
mov
adc
pop
sbb
jmp
xor
cmp
xchg
ret
mov
and
loopne
sti
(bad)
mov
xchg
popa
stc
push
repnz
sbb
(bad)
add
or
bound
enter
mov
push
add
push
push
sbb
fcom
xor
sub
cmps
retf
fistp
das
push
dec
or
mov
retf
inc
push
bound
sbb
cdq
push
shl
call
fidiv
(bad)
pop
js
ss
push
(bad)
jmp
mov
sti
scas
movs
xor
scas
popf
loope
and
dec
mul
dec
loope
cmp
inc
out
out
imul
sar
and
sub
mov
loopne
ss
adc
leave
pusha
adc
aad
xchg
pop
mov
test
add
shr
push
xor
inc
inc
add
mov
mov
or
xor
retf
xchg
addr16
bound
fwait
mov
dec
mov
imul
ret
scas
imul
push
mov
div
shr
push
lahf
fwait
call
sbb
adc
movs
mov
mov
cld
xchg
stos
pop
mul
and
mov
pusha
or
xchg
push
push
jge
shl
arpl
push
cmps
out
push
mov
mov
paddb
add
fcmovnbe
fdiv
mov
xor
mov
push
cmp
mov
jge
cmp
call
out
(bad)
mov
push
cmp
mov
cwde
call
fist
or
jmp
add
stos
xchg
mov
add
das
test
push
mul
scas
ficom
sub
jge
xchg
push
pop
dec
cld
mov
jmp
inc
in
(bad)
mov
or
jns
test
imul
movs
dec
dec
(bad)
pushf
mov
popa
sbb
dec
and
scas
jmp
out
fdivr
mov
aas
ret
mov
dec
push
adc
push
jmp
cli
push
and
and
dec
add
and
in
cmps
and
jmp
pop
stos
and
je
sbb
pop
pop
jge
cmp
push
out
gs
bound
mov
sahf
dec
and
std
xchg
xchg
int3
in
(bad)
dec
fidivr
add
(bad)
(bad)
xor
cmp
sbb
mov
mov
and
sbb
out
sbb
mov
or
ds
jnp
call
or
in
inc
mov
addr16
ja
mov
mov
in
push
ds
ds
dec
sub
ja
rol
or
test
mov
lds
dec
(bad)
into
sar
sbb
inc
stos
stos
lock
int3
movs
or
lds
dec
or
jns
pop
imul
bound
and
cmc
icebp
cmp
sub
rcr
mov
xor
outs
cmp
test
dec
push
cmp
imul
outs
push
mov
or
in
push
psubusw
das
lock
ja
xor
leave
push
mov
popf
adc
ds
push
stos
pop
sub
xchg
dec
sub
retf
push
das
push
pop
pushf
mov
enter
dec
mov
inc
jle
xchg
add
pop
mov
add
pop
cs
mov
fst
js
cmps
push
(bad)
xor
sub
add
imul
fidiv
jb
fyl2x
(bad)
retf
movs
test
scas
push
ins
icebp
mov
ret
pop
stc
adc
jmp
mov
sbb
push
stos
pop
dec
adc
jns
addr16
sub
aas
push
xor
xor
jne
lods
and
sbb
lea
loop
xor
mov
outs
scas
mov
in
into
push
mov
sar
pushf
xchg
ins
int3
retf
xchg
aad
xor
or
xchg
je
stos
and
xchg
idiv
out
das
cmp
cld
cmc
sub
adc
shl
pop
pushf
adc
cwde
stos
es
mov
push
repnz
scas
stos
mov
mov
inc
pop
fs
loopne
pop
fs
movs
lock
movs
popa
(bad)
mov
aaa
in
cwde
mov
test
fdivrp
stos
cmps
aam
adc
cmp
push
stos
int3
inc
sti
into
or
jo
jb
jmp
inc
repnz
mov
mov
leave
jecxz
and
fnstenv
(bad)
push
mov
add
xor
movs
pop
daa
and
cmp
es
fwait
xchg
and
lahf
or
jp
call
mov
pop
js
cdq
xchg
push
aam
push
cmp
mov
adc
or
add
xchg
je
addr16
call
bnd
ins
and
mov
pop
loopne
es
push
hlt
test
mov
cmp
and
adc
in
je
in
xor
arpl
mov
adc
dec
int
cmp
adc
push
pusha
(bad)
xor
es
push
(bad)
adc
xor
(bad)
cmp
arpl
and
out
(bad)
(bad)
cmps
sub
ss
adc
imul
sub
ret
popa
lds
aas
bnd
dec
arpl
daa
call
jge
mov
or
imul
sub
fwait
imul
ret
out
ror
stc
mov
sub
fisttp
mov
push
dec
pop
add
test
dec
mov
jg
popa
(bad)
xchg
cmp
and
fsub
call
aaa
sub
and
fdivr
mov
xchg
cmp
cmps
adc
mov
into
xor
jge
xor
fnsave
pop
hlt
shr
arpl
mov
pop
mov
in
xor
xor
mov
lods
push
inc
sub
iret
mov
jge
sub
inc
xchg
adc
and
in
(bad)
hlt
inc
ret
mov
out
or
pop
sahf
inc
pop
dec
sbb
xchg
out
inc
inc
push
mov
arpl
mov
pop
sti
jae
movs
retf
inc
push
mov
xchg
stc
push
jo
xor
out
scas
fldcw
push
outs
pop
dec
sbb
jae
lea
inc
mov
xchg
fcom
or
push
sbb
stc
add
jae
mov
sub
retf
rcl
rcl
or
rol
ret
push
(bad)
push
dec
push
ficom
sub
out
mov
sub
pop
lock
lods
xor
gs
push
and
pop
popf
or
popa
sbb
rcl
mov
pop
or
mov
sbb
and
adc
pusha
fstp
movs
dec
in
(bad)
je
dec
mov
inc
or
rcr
jge
fdiv
retf
cmps
sub
test
pop
adc
mov
and
int3
xlat
jne
inc
into
scas
in
inc
lods
jno
jnp
cmp
mov
inc
cli
pop
jae
icebp
sbb
or
mov
stc
adc
pop
(bad)
shl
sbb
xlat
ja
xchg
mov
mov
pop
ret
setg
gs
stos
cmps
mov
or
shl
push
jb
bound
xchg
cmc
cmp
lahf
pop
lods
dec
add
fcom
fs
mov
outs
repnz
ret
sub
aas
ins
fld
jmp
fsubr
nop
xchg
imul
mov
and
push
dec
xchg
or
xor
jbe
mov
jno
jne
dec
daa
jp
loop
or
addr16
sahf
out
or
and
mov
ins
push
cmps
mov
or
pop
gs
inc
sbb
mov
push
(bad)
in
xchg
(bad)
icebp
jp
out
adc
mov
pop
xor
fwait
or
jmp
js
or
push
test
mov
push
or
clc
jecxz
lea
lea
dec
mov
enter
je
cdq
jbe
sbb
test
test
dec
adc
add
cwde
repnz
stos
shr
xchg
imul
pop
push
jg
clc
sub
repnz
push
sub
add
jge
jbe
or
shl
fcomp
sahf
adc
mov
adc
inc
ret
jne
in
pop
mov
pop
cmps
pop
mov
mov
lods
mov
push
push
mov
mov
out
outs
leave
push
jle
iret
imul
fisubr
sbb
shl
imul
mov
jae
push
pop
lds
into
mov
and
fnstsw
sub
iret
xchg
dec
(bad)
mov
mov
stos
mov
out
dec
pop
loope
mov
xor
call
cs
mov
loop
sbb
sub
xchg
or
dec
sub
ds
push
xor
retf
adc
and
jmp
and
mov
mov
in
test
inc
neg
dec
xor
scas
mov
mov
out
xchg
pop
add
cmp
iret
lea
push
push
and
adc
fdiv
gs
and
and
sub
and
das
rcr
imul
add
std
mov
lea
(bad)
dec
nop
cld
cs
jns
repz
mov
or
mov
outs
fcom
paddb
mov
out
adc
mov
test
data16
sar
mov
ret
push
add
mov
stos
jae
jo
inc
arpl
push
jmp
imul
sub
out
xchg
xlat
xlat
jecxz
call
cld
pop
fistp
jg
mov
test
cmps
out
or
inc
sbb
inc
movs
mov
sbb
jne
rcr
scas
inc
xchg
test
fild
fwait
mov
xchg
jne
pushf
jmp
sbb
in
scas
cdq
loopne
push
sar
sub
sbb
xchg
mov
test
dec
mov
or
sub
adc
mov
cwde
push
or
push
jae
aaa
icebp
shl
inc
out
mov
repnz
in
cmps
inc
mov
jmp
ror
or
jnp
mov
stc
and
push
je
(bad)
mov
or
mov
loopne
jbe
push
pop
stc
mov
jbe
xchg
inc
into
sbb
jo
mov
mov
sub
push
push
push
jno
jne
jns
repz
(bad)
pop
xchg
leave
dec
pop
aas
aam
inc
movs
cmp
add
pop
pop
test
repz
call
mov
lea
daa
cmp
imul
rcr
arpl
stc
mov
adc
mov
inc
ret
jbe
xlat
or
shl
fs
jg
xchg
dec
js
cmc
xchg
mov
add
cdq
dec
mov
cdq
push
and
jo
xor
sbb
mov
mov
lods
push
setb
gs
pop
out
dec
lahf
and
ss
pop
inc
jb
jge
or
gs
mov
fnstsw
mov
mov
es
sbb
ins
imul
loopne
cwde
mov
xlat
bound
and
and
jp
out
push
lds
pop
mov
xchg
sbb
cmp
jmp
dec
(bad)
sbb
rcr
jmp
or
fcomip
cmc
ss
push
xor
fs
mov
ds
ror
mov
adc
adc
(bad)
into
lods
loopne
push
test
mov
test
xchg
rol
mov
cmp
ins
mov
ins
(bad)
fidiv
out
sub
mov
fcom
inc
mov
daa
push
aas
jnp
jae
jmp
jb
popa
mov
fs
push
push
(bad)
shr
jle
jge
cmps
ror
inc
mov
mov
mov
jp
jo
add
out
outs
pop
hlt
add
mov
or
imul
(bad)
retf
fdivp
and
cli
loop
fst
cmp
inc
xor
(bad)
test
or
jae
sbb
push
sbb
fdivr
jg
and
xchg
mov
jp
pop
push
sub
dec
ins
fisub
(bad)
(bad)
pushf
cmp
jno
mov
mov
jmp
ficom
xchg
dec
das
scas
xor
aaa
arpl
movs
mov
dec
shl
(bad)
(bad)
out
mov
sbb
imul
test
push
bound
xor
aad
cmp
(bad)
sar
and
hlt
inc
cwde
(bad)
repz
or
mov
xlat
or
data16
and
adc
sbb
cli
inc
loopne
mov
or
div
dec
or
or
adc
arpl
or
mov
or
fs
fld1
stos
mov
fld1
je
scas
(bad)
ja
mov
xchg
push
push
je
jge
dec
(bad)
fnstenv
or
add
loope
push
xor
jae
div
jmp
mov
mov
jl
cmp
jle
push
mov
mov
shl
js
int3
mov
cmps
call
js
xchg
mov
mov
imul
or
and
(bad)
mul
loope
mov
shl
mov
or
xor
(bad)
push
xchg
inc
inc
daa
and
loopne
or
cli
cmp
mov
rcl
inc
pop
pop
out
mov
sahf
lods
cmp
fwait
pop
xchg
or
out
inc
arpl
push
fstp
call
push
pop
sub
mov
lods
or
std
xor
pop
pop
dec
stc
std
cmps
ins
push
xor
repnz
loope
inc
arpl
pop
scas
dec
clc
mov
mov
mov
xchg
loope
and
ss
loop
lods
cmp
push
xchg
inc
push
mov
dec
sbb
cmp
pop
loopne
addr16
sub
xor
cmp
or
ja
arpl
push
push
dec
inc
(bad)
mov
(bad)
test
fisub
sub
adc
rol
das
mov
std
mov
(bad)
sub
jmp
cmps
test
adc
movs
sahf
jmp
test
xchg
hlt
sub
push
push
sub
mov
int
clc
jmp
cmp
or
lods
xor
in
in
xchg
fs
stos
mov
loopne
push
adc
pop
fdiv
mov
scas
test
stos
xlat
repnz
jne
outs
add
outs
data16
xor
mov
cmp
add
sub
sub
xchg
retf
push
in
cmp
jo
dec
popa
xchg
repz
(bad)
inc
arpl
je
mov
leave
inc
cmp
mov
pop
push
stos
out
int3
popf
das
sbb
jecxz
ror
add
mov
mov
mov
loopne
imul
pop
pop
pushf
pop
jecxz
xchg
addr16
out
push
dec
popa
ror
pushf
shr
push
add
sbb
and
cmp
inc
and
arpl
inc
mov
mov
mov
jne
cmp
push
call
cmp
enter
lods
in
in
pop
cmp
sbb
shl
jae
mov
mov
xchg
popf
aas
fnstcw
stos
mov
stos
lahf
or
mov
cmp
jns
mov
iret
or
aad
arpl
push
(bad)
push
dec
js
bound
ds
call
into
sub
push
cdq
xchg
test
push
inc
aas
dec
pop
mov
daa
jge
sbb
fmul
cmc
cmp
std
inc
xchg
cmp
add
xchg
cmp
lahf
and
fmul
pushf
cmp
and
stos
jne
and
dec
jns
jns
fisub
mov
shl
inc
adc
pop
or
bound
xor
jno
ds
stos
or
xchg
push
cli
sbb
dec
jo
fs
pop
dec
(bad)
jge
xor
mov
call
pop
sti
pop
push
jae
sbb
in
adc
mov
int
jp
jbe
jmp
or
and
jecxz
test
retf
or
or
movs
or
pop
rcl
pop
dec
outs
imul
add
or
cmps
or
jmp
scas
jnp
sbb
div
push
scas
xchg
jns
loop
cmp
pop
mov
xlat
cli
iret
push
sahf
mov
mov
pop
int3
jmp
test
(bad)
mov
xlat
ret
mov
or
or
cmp
mov
jp
mov
jno
push
jl
or
adc
adc
and
movs
mov
mov
(bad)
sbb
ret
cmp
movs
jmp
push
jmp
ret
les
or
(bad)
jmp
js
mov
pop
cmp
mov
cs
cdq
aam
iret
fdivr
dec
je
add
fldl2t
mov
adc
ss
jl
stc
int
or
xor
pop
jmp
ror
cmps
cld
idiv
les
jnp
push
jmp
adc
int3
enter
jg
jne
xchg
shr
inc
cld
test
or
or
cmps
repz
pop
inc
xor
mov
dec
and
fild
mov
stos
push
inc
out
out
push
out
mov
xchg
mov
rol
and
ret
out
mov
cdq
add
cli
push
mov
popf
sbb
mov
adc
jnp
pop
dec
cmp
mov
repz
mov
in
or
mov
inc
sahf
pop
mov
retf
into
cs
cmp
fcom
lds
sub
loope
dec
iret
sbb
std
in
daa
xchg
jnp
pop
les
fisttp
sbb
push
push
push
push
xchg
retf
ret
repnz
adc
dec
arpl
adc
mov
push
cmp
shrd
adc
jecxz
and
push
and
cmc
cmp
mov
je
and
cmp
push
or
inc
cwde
jne
or
aam
lahf
ins
addr16
sub
sbb
sub
mov
fld
mov
push
pop
push
dec
sbb
jno
sti
das
lods
mov
scas
shl
mov
daa
sub
fprem
ret
mov
pop
(bad)
ret
mov
stos
xchg
or
jne
js
xchg
sbb
icebp
sbb
mov
rcl
pop
adc
adc
aam
ficomp
stc
and
ins
nop
sub
mov
cmp
pop
jg
jae
lahf
dec
xor
jae
dec
or
in
push
mov
sub
es
outs
and
in
bound
sti
(bad)
das
cmps
sti
rcr
lods
in
fisub
mov
jecxz
cs
aaa
out
and
mov
and
mov
mov
pop
cmp
fs
int
fcmovu
or
inc
dec
push
push
xchg
test
mov
and
sar
shl
mov
sbb
inc
cmp
add
xchg
or
inc
mov
pop
inc
mov
mov
push
cmp
sub
inc
outs
sub
or
or
cmps
pusha
add
sub
mov
push
xor
in
(bad)
pop
cli
loope
mov
cmp
cmp
(bad)
jno
jle
push
imul
pop
fmul
sbb
jbe
mov
enter
sbb
mov
inc
jmp
cwde
jns
ja
adc
cmc
ret
cmc
mov
add
sbb
rcr
(bad)
movs
dec
pop
jae
inc
sub
into
inc
push
pushf
xchg
add
and
dec
daa
data16
dec
add
cmp
cli
fisub
das
js
jns
addr16
mov
cld
push
pop
jae
xor
jg
jnp
push
dec
push
jns
xchg
hlt
xor
jl
cs
addr16
(bad)
retf
repnz
fiadd
xor
mov
(bad)
mov
out
pop
call
and
mov
xchg
or
je
mov
sub
imul
adc
ss
ret
gs
pop
push
and
and
sbb
push
mov
outs
test
fidiv
mov
data16
mov
fcom
mov
xchg
mov
adc
pop
push
pushf
mov
out
popa
clc
dec
ret
mov
xor
xor
dec
aam
sub
data16
dec
xchg
shl
in
adc
clc
aaa
popf
or
test
scas
loop
add
popf
or
es
enter
arpl
mov
into
jl
shl
push
paddsw
or
dec
push
(bad)
dec
inc
xchg
xlat
add
mov
push
sbb
ins
in
mov
ss
dec
jbe
jo
cli
inc
jb
loope
push
cmp
sub
push
pop
mov
jne
and
jnp
popa
pop
out
add
cmc
test
iret
or
jnp
fcomi
jne
inc
out
imul
shl
call
mov
lods
(bad)
lods
iret
mov
imul
or
mov
adc
popf
std
mov
hlt
je
cmp
(bad)
aad
jns
mov
shl
retf
mov
and
xchg
in
xor
add
outs
je
inc
pop
cmps
jg
movs
mov
xchg
addr16
lds
add
pop
add
outs
call
ja
retf
in
jne
cmp
sahf
inc
(bad)
dec
jle
cs
sahf
bound
icebp
xor
dec
xchg
fist
test
sbb
pop
dec
adc
cmp
jne
ss
das
cmp
mov
hlt
(bad)
movs
(bad)
sub
push
dec
xchg
push
adc
and
stos
nop
sub
adc
inc
adc
cdq
in
and
push
out
cdq
xchg
gs
fiadd
mov
dec
pop
mov
and
test
push
add
in
aam
aas
imul
test
fs
popf
push
jge
jbe
les
inc
sti
icebp
mov
mov
lock
test
add
movs
test
je
call
test
ror
and
xor
sbb
cmp
or
repz
cwde
push
sbb
stos
stos
mov
addr16
and
ret
cmps
lods
push
(bad)
xor
xlat
cwde
cwde
pop
repnz
sbb
out
and
into
push
inc
and
repz
sbb
and
cmp
mov
stos
js
ret
fucomi
xor
lock
out
pop
mov
scas
sub
pop
push
cdq
jnp
cmps
test
pop
push
out
sbb
adc
call
push
push
add
xchg
cmp
add
and
pop
mov
ret
outs
cmc
pop
lds
aad
xor
pusha
push
push
les
fdiv
push
frstor
sbb
repnz
sar
lock
mov
push
pop
repnz
inc
lods
add
jmp
and
pop
or
mov
pop
cmp
xchg
jae
mov
shl
dec
(bad)
xchg
push
xchg
cmp
cmp
xchg
outs
cmp
jmp
or
jbe
cmps
in
push
mov
jmp
imul
inc
test
test
sbb
mov
mov
add
maskmovq
idiv
ins
enter
shl
add
loopne
outs
sub
mov
or
ss
adc
push
retf
or
shl
iret
push
jnp
dec
fdivr
test
daa
ret
and
sbb
jmp
repz
test
lock
test
imul
pop
and
sahf
sub
adc
into
sbb
daa
push
adc
adc
cmp
jmp
cmp
fcomi
ss
scas
lods
cmp
and
cmp
in
out
test
(bad)
aad
cwde
inc
(bad)
rol
xchg
cdq
xor
rsqrtps
test
mov
(bad)
pusha
pabsd
inc
mov
dec
(bad)
jp
sbb
xchg
pop
sti
mov
mov
sub
inc
pop
xchg
in
ss
and
icebp
xchg
js
pop
fiadd
xor
das
stc
mov
cmc
jmp
xchg
pop
mov
sbb
arpl
pop
pop
retf
sar
jae
std
pop
xor
aam
shr
jmp
rol
add
adc
jle
dec
mov
inc
sbb
movs
fstp
pop
inc
movs
and
pop
or
or
jae
add
mov
push
mov
ins
adc
pop
int
adc
ret
ss
pop
and
sbb
mov
mov
test
push
adc
sub
or
mov
imul
sti
mov
and
out
and
push
out
jge
pusha
add
sbb
popf
mov
ins
loope
push
nop
repnz
mov
dec
fbld
test
loope
pusha
cmp
dec
(bad)
xor
mov
cli
adc
mov
fdivr
not
arpl
sbb
jmp
xor
push
je
sub
retf
sub
call
dec
stos
mov
neg
leave
iret
outs
(bad)
mov
mov
sbb
fwait
cmps
mov
xchg
icebp
pop
pop
sbb
xor
jnp
xchg
repz
adc
sub
dec
cmp
inc
mov
xchg
aaa
push
out
je
pmaxub
popa
xor
or
aas
aam
jg
and
xchg
add
inc
mov
stos
pop
(bad)
mov
jl
jno
or
add
push
mov
outs
out
stos
push
jo
and
or
pop
sub
cmps
cld
xor
addr16
mov
stos
xchg
pop
inc
scas
sbb
pop
sbb
dec
jb
(bad)
mov
inc
daa
xchg
cs
and
adc
imul
inc
push
je
push
adc
mov
lods
dec
or
cmps
or
dec
xchg
je
std
push
mov
push
cmp
fimul
fld
int3
sub
ins
push
pop
xor
push
and
pop
lea
into
fidiv
sub
push
adc
mov
test
dec
xchg
daa
lods
into
xchg
cmp
jg
and
add
retf
add
ds
in
mov
inc
xor
mov
rol
shl
sub
cli
mov
mov
cmps
test
xor
ja
retf
push
cmps
mov
movs
pop
jbe
cdq
inc
push
lods
jns
sub
sbb
int
(bad)
cld
xor
test
outs
sbb
pop
fs
(bad)
retf
mov
out
js
jae
nop
mov
mov
dec
mov
and
movs
and
xor
sub
or
test
cdq
push
call
retf
lods
enter
call
mov
mov
rcr
sbb
pop
stc
ins
in
or
nop
inc
imul
ins
mov
jns
dec
sub
cmc
(bad)
sub
push
push
fidivr
lods
push
cmp
fisub
ficomp
jge
(bad)
jecxz
in
neg
xor
jo
mov
int
retf
icebp
or
push
dec
xor
(bad)
cmp
add
push
pop
dec
stc
add
mov
and
bound
pop
pop
call
fdivr
or
aaa
dec
add
jecxz
loop
and
shl
pop
mov
jge
pop
ret
sub
ja
mov
ja
xchg
mov
jbe
push
(bad)
push
leave
or
pop
in
retf
push
adc
stc
int3
inc
nop
ss
lods
rcr
jbe
repz
adc
icebp
call
jae
jae
repz
shr
stos
sbb
xchg
sar
hlt
xchg
lods
in
pop
addr16
out
popf
jno
xor
mov
fdivr
dec
shl
mov
stos
icebp
push
adc
fdiv
inc
sbb
sub
or
push
cs
jb
pop
dec
add
sub
ss
push
mov
scas
imul
add
jb
mov
add
call
adc
mov
call
(bad)
popf
mov
push
hlt
movs
loop
cmp
mov
dec
pop
push
dec
test
or
sub
dec
inc
arpl
inc
shl
aad
sti
inc
mov
jp
xor
test
cmc
loope
mov
fxtract
test
(bad)
jbe
ins
icebp
popa
(bad)
in
ret
not
mov
(bad)
int3
cmp
xor
cwde
cmp
loopne
lds
stos
js
mov
or
imul
shl
dec
jg
adc
stos
mov
icebp
sbb
dec
or
add
cmp
mov
mov
adc
xchg
dec
xor
push
mov
jne
(bad)
std
movs
mov
sbb
imul
inc
dec
sbb
mov
adc
jecxz
test
adc
sub
pop
rcl
stc
mov
jecxz
jnp
ror
mov
xor
or
add
pop
ror
xor
in
jns
push
fadd
jns
mov
in
or
mov
mov
inc
shr
sbb
scas
addr16
lods
add
aas
test
pushf
sbb
mov
and
int
mov
(bad)
jb
fnstcw
jo
(bad)
adc
(bad)
retf
hlt
jg
cld
cld
mov
mov
cmps
cmps
xchg
js
retf
data16
retf
mov
pop
dec
shl
into
lods
adc
cli
fstp
cwde
(bad)
inc
dec
sti
(bad)
pop
ds
mov
cmp
dec
outs
sbb
pop
inc
and
pop
imul
(bad)
fdivr
ret
pop
fadd
out
mov
hlt
clc
popa
jecxz
mov
aaa
scas
gs
stos
jmp
and
outs
aaa
jno
out
cmp
stos
pop
cmp
sub
ss
iret
stc
mov
mov
xor
(bad)
mov
sub
mov
push
fisttp
test
push
in
mov
jl
sub
mov
dec
ret
dec
mov
cmp
mov
scas
bnd
mov
ficom
lahf
adc
and
xchg
into
push
jb
adc
neg
scas
call
push
dec
cmp
retf
jmp
sbb
leave
mov
icebp
stos
repnz
sbb
pop
nop
cmp
sbb
aaa
dec
push
mov
jl
add
jl
jmp
movs
movs
cmp
not
clc
mov
sbb
fmulp
sbb
sbb
or
inc
in
pusha
mov
jmp
mov
sbb
xchg
mov
dec
jmp
ja
push
jo
sbb
xchg
lahf
mov
jmp
dec
push
cli
push
mov
mov
xchg
cmp
mov
sbb
mov
sub
(bad)
outs
rcr
mov
aas
out
aas
out
xchg
or
(bad)
cmp
and
mov
add
push
push
fmul
jae
stos
add
sbb
dec
push
sbb
cs
xor
xor
jns
bound
bound
jne
push
aaa
mov
jg
aam
pop
cdq
sub
pop
in
cmp
es
inc
out
stos
mov
inc
jmp
std
aad
test
push
jmp
xchg
hlt
and
pop
inc
ret
xchg
mov
mov
inc
jno
movs
push
test
ins
shl
imul
pop
mov
mov
xlat
maxps
rcr
cmp
dec
sub
repz
jmp
push
jbe
and
pop
sbb
or
fnclex
test
push
mov
inc
stos
jb
pop
loope
xor
retf
test
bnd
sahf
out
cmp
iret
push
push
jne
iret
hlt
aas
stos
shl
out
cli
clc
pusha
nop
mov
pop
push
xchg
sub
push
inc
daa
cmp
int
mov
dec
inc
xchg
test
popfw
pop
(bad)
pop
mov
sbb
(bad)
enter
adc
mov
jbe
xchg
xor
mov
and
mov
pop
pop
jmp
adc
test
ja
pop
ret
dec
scas
lods
out
mov
stos
push
sbb
pop
mov
mov
je
adc
xor
mov
inc
(bad)
pushf
imul
bound
xor
sub
adc
jle
ja
sti
mov
inc
fnstenv
jnp
scas
hlt
mov
mov
mov
addr16
shl
and
cmps
mov
loope
mov
mov
retf
jl
aaa
jmp
lds
dec
push
and
test
xchg
mov
into
jo
scas
cli
frstor
je
push
fadd
add
xor
xchg
cmp
pop
out
lds
xor
(bad)
lds
cld
cmc
and
xor
shl
mov
call
lahf
jg
push
fimul
jnp
push
inc
sti
lea
repnz
adc
test
loope
mov
add
dec
cmp
adc
fs
cmp
push
test
ss
cmp
and
push
inc
mov
(bad)
in
in
call
dec
jae
cs
xor
mov
sahf
mov
inc
sub
dec
les
hlt
pop
and
fadd
shl
loopne
iret
in
sub
mov
arpl
sbb
dec
repz
inc
daa
cmp
lea
movs
enter
lahf
mul
dec
rol
leave
inc
ret
test
xor
jne
enter
pusha
pop
jmp
xchg
std
dec
pushf
cmps
inc
jbe
jnp
add
cwde
cmp
dec
in
pusha
aaa
xchg
push
add
xchg
fld
fstp
retf
jbe
jl
rol
mov
jo
push
or
aas
retf
repz
and
adc
sbb
(bad)
loop
(bad)
outs
push
pop
dec
adc
mov
mov
sub
sub
xlat
mov
jno
mov
jg
and
pop
leave
test
dec
pop
or
pop
jg
xor
loope
or
mov
neg
jnp
aam
mov
js
clc
not
jbe
cld
hlt
mov
cmp
scas
dec
fistp
xchg
inc
fs
popf
sub
add
cwde
mov
mov
xor
mov
inc
xchg
test
in
or
fistp
cmp
cmp
jg
inc
dec
mov
aad
mov
pop
nop
fild
inc
add
jecxz
movs
or
push
pop
xchg
mov
imul
sbb
int
mov
push
pop
mov
out
sbb
imul
pushf
cmps
xor
add
std
addr16
pop
(bad)
cmp
bound
mov
mov
mov
add
je
and
iret
shr
add
hlt
adc
or
add
pop
shl
outs
movs
out
aam
mov
xor
mov
retf
sub
xor
inc
jnp
cmp
ins
mov
sahf
mov
xlat
jg
stos
inc
xchg
xchg
sbb
aad
xor
pop
mov
sbb
jge
jb
cld
cld
ret
ret
call
pop
or
ret
push
ror
mov
mov
add
aaa
xor
int
shr
jns
xor
pop
xchg
xor
dec
retf
cmp
mov
jecxz
xchg
mov
addr16
mov
xchg
(bad)
outs
dec
les
pop
or
push
or
retf
inc
push
sbb
repz
jmp
test
std
jnp
dec
push
retf
mov
mov
cmps
mov
adc
xchg
(bad)
pushf
addr16
push
(bad)
retf
dec
or
mov
xor
mov
movs
sahf
mov
fild
mov
mov
cwde
xor
mov
sahf
and
and
push
sahf
icebp
mov
pop
outs
mov
add
fcomi
add
jge
mov
jb
push
xlat
or
iret
adc
lods
les
dec
hlt
jne
pop
jb
or
sub
or
xor
push
gs
fld
hlt
scas
(bad)
fcomp
xchg
mov
add
jge
cwde
(bad)
push
rcl
cs
sbb
ins
or
mov
push
test
sbb
fiadd
in
adc
jle
cmps
ret
in
ja
cmp
mov
cmp
mov
vmovd
retf
push
xor
nop
xor
mov
pop
sbb
inc
xchg
icebp
repz
lock
not
ror
pusha
push
rcr
dec
das
imul
or
adc
xchg
xchg
and
mov
aas
test
mov
adc
call
mov
dec
or
jmp
xchg
lea
not
in
js
dec
mov
adc
push
retf
adc
(bad)
cmp
shl
out
inc
ds
retf
sar
out
mov
outs
push
cmps
fisttp
and
xchg
dec
jbe
mov
nop
mov
neg
mov
aam
(bad)
lods
repnz
stos
imul
mov
jbe
(bad)
(bad)
fwait
popf
test
add
pop
sbb
add
mov
inc
push
sbb
movs
movs
dec
inc
or
pcmpgtw
adc
jo
xor
dec
lods
xchg
leave
mov
cmp
das
adc
(bad)
adc
jge
xor
sub
popa
mov
add
pusha
leave
imul
into
imul
loop
cli
scas
sbb
out
push
mov
ds
es
nop
jmp
fwait
(bad)
not
inc
jecxz
aaa
in
sub
div
(bad)
lods
jnp
mov
pop
xor
std
pop
xchg
dec
ins
pop
call
jns
dec
sub
out
cmp
outs
dec
xchg
pop
(bad)
movs
sbb
loope
sbb
fs
shr
cmp
js
mov
xor
fs
cmp
shl
pop
push
mov
jmp
push
cli
pusha
mov
stos
xor
imul
jns
xchg
jmp
iret
lock
sub
movsx
xchg
pop
ja
dec
inc
xchg
retf
data16
ds
adc
jnp
enter
inc
mov
outs
xchg
sub
pop
test
pop
add
mov
jp
jl
dec
js
sub
adc
and
adc
sub
mov
(bad)
sahf
(bad)
push
ins
cli
into
sub
scas
adc
sbb
sub
aaa
mul
xchg
test
lock
dec
mov
lods
jbe
push
push
or
inc
out
das
popa
cmp
cld
add
mov
pop
nop
adc
pop
and
sub
pop
sub
in
out
mov
and
mov
sub
mov
sbb
cmp
sub
adc
mov
xchg
pop
je
sahf
out
mov
aad
mov
fdiv
push
clc
or
pushf
fild
retf
popf
cmp
lods
add
or
jl
adc
or
jle
mov
test
push
mov
push
sbb
in
js
retf
stc
out
dec
add
pop
xchg
(bad)
sub
mov
stc
std
cdq
loopne
push
cmp
inc
call
loop
adc
lahf
sub
iret
(bad)
mov
xchg
outs
sub
dec
int3
sbb
sbb
xchg
dec
icebp
enter
outs
inc
sub
pop
push
clc
pop
or
shl
ds
loop
pop
or
ins
les
ror
push
mov
popa
out
sbb
push
dec
cdq
adc
dec
jnp
imul
xchg
cmps
sub
lds
add
xchg
sub
push
test
jge
adc
cmps
and
outs
mov
dec
lahf
adc
(bad)
push
xchg
xor
leave
xor
movs
lea
not
lds
out
xlat
mov
rcl
adc
and
sub
xchg
in
hlt
(bad)
in
into
push
xchg
arpl
push
jbe
repz
adc
jns
int
outs
xor
retf
dec
popa
aaa
loopne
push
lock
mov
stos
rcr
dec
mov
push
rol
dec
pop
(bad)
aas
data16
fwait
sqrtps
and
and
xchg
(bad)
and
in
fisub
je
dec
and
int
push
mov
cmps
jbe
stos
ins
push
jne
int
and
in
fmul
add
in
jnp
mov
inc
ins
bound
call
mov
bound
fiadd
mov
xchg
cmps
jle
(bad)
push
adc
mov
lahf
add
outs
mov
or
es
not
ret
scas
inc
inc
out
(bad)
mov
push
pop
out
mov
sbb
fstp
push
xchg
add
dec
cmp
adc
adc
sub
jne
fld
mul
push
dec
mov
and
cwde
push
(bad)
xlat
adc
test
adc
pop
mov
popf
xor
sbb
add
int3
mov
dec
push
push
daa
jecxz
jg
leave
imul
sub
push
add
mov
enter
xchg
rol
inc
xor
out
imul
call
sbb
mov
push
push
push
mov
and
mov
push
sub
(bad)
cli
mov
mov
or
xchg
mov
xchg
cmp
ret
ror
rcl
js
inc
jo
ins
add
lock
mov
or
cli
jmp
mov
xor
push
loop
jbe
jne
dec
repz
or
and
dec
sub
jns
popa
lea
fwait
int3
pop
sub
push
mov
mov
adc
or
jle
movs
push
dec
push
mov
addr16
lahf
aas
imul
lock
loop
pushf
dec
pop
inc
dec
mov
cmp
arpl
popf
(bad)
mov
xor
push
aad
sbb
in
mov
push
inc
or
and
sub
dec
test
es
fcmovne
xor
pop
cmps
aam
inc
fstp
jbe
jo
mov
and
mov
mov
cdq
clc
push
enter
imul
jae
pusha
mov
outs
sbb
add
pop
push
rcl
pop
sbb
nop
pop
je
jg
mov
cmps
hlt
jg
sbb
add
inc
sahf
mov
or
jbe
pop
mov
popa
mov
(bad)
cmp
sbb
cdq
stc
push
add
int3
push
mov
inc
cmp
mov
inc
in
jmp
push
push
test
imul
push
sub
adc
aam
cwde
mov
ret
aad
xor
dec
sti
(bad)
mov
jb
adc
pop
stos
xchg
push
adc
sbb
xor
sub
xor
sub
jmp
or
das
xor
push
or
and
and
push
cmp
push
neg
mov
cmp
push
ret
pop
dec
pop
cs
in
mov
xchg
frstor
fisttp
mov
mov
jecxz
pop
jo
mov
cmp
mov
out
push
mov
aad
jnp
iret
fild
and
adc
rcr
rcr
mov
scas
or
jns
sbb
aas
call
imul
pop
mov
mov
xchg
dec
pop
sbb
mov
pmaxsw
bound
inc
inc
and
in
inc
outs
mov
in
jb
mov
fldenv
mov
fldcw
test
sar
data16
fcom
dec
mov
(bad)
cs
lods
inc
add
shl
fnstsw
sub
add
jo
mov
jnp
iret
inc
add
imul
and
push
add
fwait
push
lock
xchg
cmp
pop
cmps
sahf
push
int3
pushf
daa
xchg
mov
out
dec
pop
rcl
dec
sbb
push
dec
iret
ins
aad
or
pop
add
out
or
and
clc
ss
ficom
push
pop
pop
and
pop
dec
mov
jge
or
mov
push
js
ins
adc
dec
cli
loopne
lahf
in
mov
es
popa
shl
push
test
adc
add
cmp
push
psubusb
dec
imul
pop
iret
(bad)
in
and
cmp
call
fbstp
push
hlt
mov
fwait
mov
or
jno
add
adc
adc
ds
jns
mov
inc
in
retf
push
je
mov
scas
bndldx
loope
dec
mov
das
stos
adc
shl
imul
mov
data16
mov
lock
xchg
jo
dec
xchg
in
push
adc
mov
sub
dec
xor
or
loope
inc
in
mov
sub
movs
jbe
shr
jg
xor
add
je
arpl
cmp
cmp
mov
inc
addr16
cs
xlat
dec
mov
cmps
sub
je
js
int
push
dec
outs
mov
enter
iret
fdivr
shr
push
ins
lods
push
mov
adc
jmp
fistp
xor
out
sahf
or
push
enter
outs
mov
fadd
ins
fwait
inc
jmp
out
jl
mov
add
cmp
out
mov
inc
or
xor
mov
cmp
cs
push
lods
jl
mov
or
call
and
adc
aad
(bad)
and
imul
int3
xchg
xchg
adc
sti
into
mov
jmp
jmp
cs
stos
cdq
sar
and
and
movs
and
sbb
or
in
push
arpl
mov
movs
cmp
je
jl
ins
sbb
fs
scas
in
sbb
je
mov
lods
movs
cmp
and
cmps
nop
dec
add
jp
adc
and
xchg
push
test
add
jl
fnsave
popf
loop
pop
nop
rol
sbb
call
lahf
pushf
fsub
and
stos
(bad)
inc
ins
push
(bad)
popf
mov
jmp
lock
mov
cmp
and
xlat
iret
or
mov
jmp
test
hlt
test
jo
loop
mov
or
jmp
push
mov
pusha
aas
cmps
ds
mov
inc
call
inc
xchg
aam
fdivr
jbe
add
loopne
std
pushf
and
push
test
mov
nop
gs
hlt
mov
jl
adc
mov
fwait
push
lahf
je
mov
sub
pop
aad
(bad)
sbb
mov
and
movs
scas
mov
jbe
jb
cmp
loope
test
mov
int
add
xor
jns
outs
pop
mov
mov
xor
cdq
(bad)
cwde
cmp
loop
fbld
jnp
and
in
imul
mov
sub
fild
and
xor
nop
(bad)
call
mov
sub
ss
sbb
jmp
dec
jbe
xor
pop
xor
sub
push
adc
mov
or
xchg
push
xchg
test
mov
adc
hlt
loop
and
cmp
into
fadd
setge
in
mov
retf
xlat
loopne
mov
cmp
and
nop
imul
aas
sub
adc
fmul
fs
fstp
dec
mov
rcl
cmps
and
dec
pop
add
xchg
xor
add
pop
std
inc
jo
popf
add
sbb
mov
cld
push
sub
dec
pop
out
in
fs
mov
adc
(bad)
out
dec
xor
ror
jmp
mov
push
sub
and
and
sbb
jae
push
xor
in
hlt
inc
and
push
aaa
jecxz
pop
unpcklps
sbb
fs
add
pushf
add
xchg
fs
gs
int3
cmp
adc
sahf
lock
add
inc
xchg
dec
sbb
aaa
and
les
in
(bad)
sub
jecxz
fmulp
mov
nop
pop
sti
pop
jnp
inc
push
cmp
mov
push
loope
mov
mov
hlt
inc
pop
xchg
jne
in
test
push
test
jmp
bound
(bad)
cmc
cld
mov
xor
stos
fist
xor
mov
fisub
dec
pop
xchg
scas
jb
or
lahf
push
xor
lea
sbb
pop
cwde
jmp
inc
fisub
jmp
inc
jbe
movaps
ss
icebp
add
xor
bound
or
push
jnp
pushf
rcr
dec
shr
test
jno
enter
inc
mov
jae
jb
psubw
adc
sbb
mov
sar
cmp
dec
xchg
(bad)
mov
mov
fs
mov
lea
and
dec
sub
ret
aaa
add
fwait
xor
cld
dec
pop
inc
les
mov
sti
sub
cmps
in
dec
repnz
cmps
xchg
inc
ret
frstor
jnp
jns
pop
aam
pop
std
cmp
not
dec
cmps
dec
push
pop
inc
test
xor
xor
sub
sub
add
cwde
aas
inc
sahf
int
repz
enter
cld
sbb
scas
cmp
cmc
inc
ds
dec
retf
push
sbb
inc
cdq
test
sbb
and
push
adc
or
add
xchg
das
inc
jne
(bad)
mov
inc
(bad)
les
cmp
pop
add
fdivr
fidiv
mov
in
mov
cmp
sub
repnz
mov
out
cmps
lods
mul
(bad)
stos
in
xchg
sar
xor
push
sbb
cmovge
xor
(bad)
and
in
mov
mov
clc
push
mov
adc
xchg
fs
dec
adc
leave
mov
fwait
jp
fnstsw
shl
jmp
jnp
loope
sub
jp
sbb
fcomip
add
sub
and
lea
xor
rol
cli
pop
dec
add
lds
loope
pop
dec
fcomp
repnz
jo
xchg
les
in
sub
cld
cld
mov
pop
and
loope
std
jecxz
fisub
xchg
test
add
fidiv
pop
mov
xlat
hlt
enter
je
hlt
cmp
mov
dec
js
test
pop
mov
fimul
scas
cmp
jmp
sbb
cld
mov
cmp
mov
xchg
lahf
scas
mov
add
call
dec
mov
popf
std
mov
xchg
cli
push
daa
add
add
and
mov
ds
pop
dec
push
stc
cli
xor
sub
xor
fmul
lock
movs
xor
fisub
mov
mov
(bad)
(bad)
(bad)
cli
and
jb
into
scas
push
mov
test
add
cmps
fucomip
pop
dec
mov
fsubrp
cdq
dec
dec
xchg
and
pop
mov
scas
mov
fyl2x
jbe
cmp
jae
adc
aas
sbb
sub
pop
iret
jmp
out
lock
inc
mov
mov
fwait
cmp
mov
cmps
outs
mov
sub
mov
jno
sbb
pop
push
pop
dec
push
mov
dec
pop
mov
iret
rcr
sahf
lods
aaa
sbb
test
(bad)
fcomp
dec
mov
jae
outs
call
test
arpl
sub
adc
jp
jae
and
outs
in
xchg
sbb
or
cdq
imul
and
push
and
jns
std
fcom
or
lock
dec
jle
jmp
sar
bound
inc
or
cmp
loope
js
test
jns
loope
xlat
inc
jmp
mov
loope
inc
jno
aad
jp
fst
push
mov
test
(bad)
retf
ins
push
jge
mov
xchg
xor
mov
or
lds
push
sub
gs
js
mov
fucomi
out
ins
dec
pusha
test
(bad)
add
retf
mov
xchg
div
sar
les
hlt
mov
mov
cmp
sti
cld
push
cmc
loope
jb
mov
mov
(bad)
and
repnz
test
cmps
(bad)
sbb
ss
inc
xchg
int3
cmp
mov
arpl
add
das
adc
xor
fimul
test
scas
popf
add
fld
push
imul
add
inc
add
sbb
jmp
cli
xor
rcl
sbb
mov
add
and
retf
int
jns
sbb
adc
hlt
sbb
fsubr
setg
xlat
test
fdiv
mov
jmp
repz
mov
push
dec
es
cmps
das
or
mov
outs
pusha
das
and
jp
cmp
sub
iret
sbb
sub
test
push
(bad)
call
pushf
jmp
stos
scas
loopne
push
ins
popf
mov
cmps
lods
call
sub
push
outs
iret
mov
cmp
hlt
pop
jmp
push
es
ror
fdiv
in
lds
push
inc
xchg
aam
jge
jnp
(bad)
jl
xchg
cmc
in
sti
mov
les
lds
xchg
dec
les
push
loopne
div
(bad)
fdivp
or
cli
push
lock
push
and
jge
adc
mov
jne
das
sub
sub
gs
sbb
sbb
out
test
mov
mov
xchg
sahf
cmp
stc
dec
inc
ins
mov
(bad)
jecxz
mov
(bad)
adc
cmp
adc
ja
mov
arpl
scas
test
ss
xor
hlt
inc
mov
jl
cmp
retf
dec
sub
es
pop
jne
les
jno
(bad)
shl
in
mov
pop
mov
jle
inc
retf
add
or
icebp
jnp
popf
movs
cmovg
xchg
and
test
and
outs
lods
and
(bad)
fldcw
repz
dec
cmp
scas
xchg
pop
add
mov
popf
dec
cmc
in
mov
cmp
xchg
cld
mov
mov
xor
cmp
out
mov
stc
shl
jmp
adc
cdq
scas
add
cs
or
in
cmp
fisttp
out
mov
cs
dec
push
daa
mov
vpsubusb
in
retf
push
xchg
xchg
lds
loope
push
out
jae
(bad)
xlat
(bad)
or
mov
call
push
mov
mov
mov
out
retf
fld
aas
xor
jae
mov
stos
push
sub
jmp
out
adc
in
in
pop
mov
inc
or
or
sbb
add
or
bound
cwde
pop
push
std
enter
mov
hlt
sub
mov
sbb
out
bound
xor
pusha
mov
(bad)
test
push
push
(bad)
sub
jmp
jl
popf
jg
cmps
std
mov
xchg
inc
adc
push
pusha
mov
(bad)
repnz
fld
rcr
pop
std
jb
das
in
xchg
repnz
pushf
mov
dec
adc
pop
mov
sti
lods
mov
jp
out
lea
dec
pop
into
rcl
shl
jo
test
dec
sub
inc
outs
xchg
in
popf
inc
fnstsw
scas
scas
js
pop
cmp
xchg
xor
cs
mov
pop
gs
adc
and
(bad)
xor
cli
jmp
stos
movs
bound
xchg
call
js
or
stc
mov
and
and
and
loopne
inc
mov
icebp
mov
add
dec
dec
pop
inc
lahf
mov
jbe
or
cs
mov
mov
and
and
loope
(bad)
jne
and
dec
js
out
movs
add
cli
push
fidivr
test
jp
fild
loop
push
xchg
(bad)
xor
jle
not
jns
std
push
rol
add
pop
mov
mov
sbb
xor
and
xlat
or
mov
test
and
sbb
adc
or
jecxz
movs
fisubr
in
mov
mov
xor
xor
ret
fstp
pop
or
adc
or
mov
das
sub
ret
mov
call
imul
addr16
xchg
push
popf
add
dec
mov
pop
sub
sbb
fs
xchg
adc
int
dec
mov
ins
enter
(bad)
jo
and
or
xor
sbb
sti
in
pop
mov
xor
or
ret
dec
iret
inc
stos
push
mov
fcomp
ss
fsubr
outs
outs
imul
neg
push
xchg
add
sub
xlat
sbb
lea
jle
cmc
jle
les
int3
sbb
(bad)
sub
aas
cmp
pop
xchg
fnstcw
adc
ss
rcr
and
iret
pop
cmps
cmc
enter
push
fild
mov
bound
add
push
inc
(bad)
sub
imul
imul
adc
cmc
inc
repz
push
sub
cmc
adc
fcom
or
mov
scas
jae
xchg
mov
push
xchg
pop
jl
idiv
mov
call
scas
dec
fnstsw
lock
pop
dec
inc
sub
outs
movs
sub
mov
scas
ja
cwde
xchg
out
jb
sbb
jecxz
adc
movs
mov
cmp
rcr
adc
sti
or
mov
lock
pop
cmp
or
xchg
mov
sahf
adc
mov
je
jmp
(bad)
scas
ret
mov
scas
xor
scas
push
ja
mov
(bad)
push
stc
loop
xchg
sub
jns
push
pop
xor
or
cmp
ja
pop
xor
sbb
adc
mov
lods
mov
ja
lea
ret
cmp
fld
jg
lea
jbe
jp
cli
cmps
inc
mov
test
sbb
xchg
lock
inc
push
ins
xchg
jnp
imul
popf
push
cs
push
pop
push
into
push
sbb
add
mov
loop
sar
cmp
jne
jmp
xor
gs
div
shl
(bad)
ds
add
mov
aad
pop
repnz
(bad)
in
ficomp
add
lods
sbb
and
repz
fstp
in
bound
jle
pop
xlat
aam
enter
test
mov
xchg
fist
sub
and
retf
data16
popa
sub
pop
or
pop
pop
mov
fcomip
sub
jae
add
jo
cmp
xor
mov
jl
sub
cld
xor
cmc
not
aaa
enter
mov
sbb
lds
fistp
pop
popa
mov
add
adc
outs
ins
pop
popa
rcl
aam
add
(bad)
sbb
mov
and
xchg
call
leave
inc
div
movs
and
xlat
stos
xchg
ss
cmp
js
adc
mov
push
dec
add
jbe
bound
(bad)
outs
pop
jmp
pusha
outs
pop
push
sub
inc
cmps
xlat
daa
retf
and
adc
dec
(bad)
sbb
cli
jo
dec
add
test
mov
xchg
sbb
push
js
sub
out
cdq
lods
push
mov
push
loope
jp
mov
sbb
test
out
push
add
mov
cmps
mov
sbb
fcom
ret
int3
and
(bad)
push
jbe
jne
mov
dec
in
aaa
loope
pop
out
jbe
add
xchg
or
into
cmps
test
xlat
jecxz
aaa
jecxz
std
push
and
fld
mov
push
in
dec
xchg
ins
in
into
add
ins
mov
fs
pop
rcr
sbb
cmp
pop
sbb
data16
lods
outs
xlat
stos
(bad)
lock
mov
ret
jg
cmp
fnsave
dec
inc
or
adc
lods
pop
sub
dec
pop
ret
or
fisttp
xlat
cmp
adc
fwait
sub
lods
js
push
mov
fisub
sub
push
test
test
outs
jle
mov
push
adc
or
int3
imul
mov
mov
cli
out
scas
imul
or
fidivr
fdiv
(bad)
int3
sub
jg
in
adc
in
retf
or
fsub
(bad)
popa
stc
xchg
mov
scas
cmps
inc
shl
sub
adc
inc
sub
and
or
out
inc
sub
mov
xchg
xor
inc
xchg
out
dec
lahf
popa
mov
cld
pushf
xor
mov
sar
xor
aas
jae
push
fdivr
inc
cmp
jecxz
scas
jo
or
pushf
cwde
mov
ins
push
cmp
mov
int3
in
adc
xchg
push
cmps
mov
gs
aam
inc
ja
scas
scas
push
adc
jg
jp
xchg
mov
pushf
sar
enter
mov
int3
xchg
xor
or
adc
mov
push
pop
pop
pop
in
ins
cmp
popf
leave
jp
jmp
xchg
push
jns
mov
jne
aaa
pop
sub
arpl
cld
xchg
or
std
xchg
pop
retf
movs
sub
jo
loop
movs
aaa
jg
lods
xchg
or
hlt
(bad)
clc
push
ror
sbb
lods
pop
int
xor
frstor
sbb
xchg
out
mov
xor
mov
cmp
jbe
mov
and
cmp
aam
mov
mov
adc
mov
add
mov
push
addr16
pop
fmulp
xchg
pop
and
sbb
sahf
inc
mov
jbe
xchg
sub
add
sbb
scas
das
jg
ins
ret
call
jmp
loopne
xor
movs
mov
fistp
repz
inc
jbe
jl
push
popf
mov
xchg
inc
in
(bad)
pop
es
sti
retf
leave
xor
mov
add
gs
ret
dec
je
jae
fcmove
repnz
sub
mov
adc
(bad)
loope
mov
push
sbb
in
jnp
(bad)
xchg
xchg
dec
stos
cld
repnz
dec
pop
cdq
pop
aaa
xor
pusha
pop
rcr
mov
cmc
push
pop
pop
xchg
sbb
test
pop
mov
inc
adc
mov
inc
mov
popf
pop
cli
xchg
mov
jg
pusha
(bad)
jmp
fsub
jnp
cmp
frstor
loope
hlt
call
das
jno
popa
ret
xor
addr16
dec
xchg
mov
jmp
call
mov
test
pop
mov
push
sbb
stos
sub
outs
pop
add
mov
clc
pop
retf
ds
dec
inc
mul
ds
mov
and
dec
mov
lahf
les
rcr
fistp
inc
in
or
adc
sbb
outs
es
cdq
pop
sub
xchg
pop
xlat
ss
loopne
and
xchg
ror
jnp
jne
sbb
inc
mov
cmp
sbb
xlat
mov
out
iret
mov
inc
pop
add
mov
(bad)
loopne
mov
cmp
ror
loopne
(bad)
push
xchg
fisubr
jmp
jmp
sub
pop
out
int3
stos
adc
add
mov
popa
(bad)
jecxz
jmp
inc
js
sti
icebp
(bad)
retf
cmp
hlt
out
scas
or
pop
dec
and
sar
fxch
aad
js
ret
cli
es
sahf
lea
gs
imul
sahf
dec
test
lahf
fstp
imul
out
and
ret
sahf
pushf
(bad)
jae
mov
lds
js
ds
(bad)
dec
push
jle
xchg
adc
mov
inc
rcl
popa
sub
inc
add
jae
fs
je
fwait
mov
pusha
cmc
add
bound
xor
push
or
cs
ins
repz
and
inc
sti
repnz
fwait
jae
stos
stos
cmp
push
fnstsw
mov
icebp
les
cmp
push
mov
mov
jmp
mov
leave
lahf
xor
jge
aas
xchg
sbb
aaa
clc
lock
cmp
pop
or
fdivr
loopne
arpl
movs
imul
mov
test
sbb
imul
lds
rcr
movs
dec
out
add
cdq
push
prefetch
inc
mov
jg
lahf
ret
sbb
inc
aad
popf
add
mov
mov
in
fld
rcl
enter
jp
gs
sbb
popa
rcl
in
shr
repz
push
test
mov
cmc
icebp
(bad)
adc
not
rcl
sub
xor
dec
out
and
stc
popa
inc
retf
jnp
add
sub
mov
hlt
lods
add
ret
hlt
jg
jae
lahf
and
ffreep
cmp
xor
mov
xchg
pusha
dec
or
mov
or
mov
ror
mov
or
stc
dec
and
cmp
pop
test
in
and
loop
ret
jns
shr
fs
cld
and
xlat
or
loopne
adc
add
daa
add
mov
(bad)
das
aas
loop
sub
iret
loop
push
pop
cs
popa
lods
bound
mov
arpl
mov
xchg
sub
cwde
lahf
inc
imul
int3
push
mov
clc
rcr
retf
in
std
ror
(bad)
fisttp
test
xchg
rcr
jne
pop
out
sahf
jo
fist
ss
cmp
sub
nop
sbb
mul
mov
stc
cmp
out
in
xor
in
lods
mov
mov
call
in
aaa
or
repz
xchg
pop
inc
pop
fidiv
gs
in
mov
cmc
mov
fucomp
test
ins
sub
mov
ins
in
jno
ret
fcom
inc
data16
pushf
sub
into
sub
ss
dec
mov
lods
cmc
pminub
push
je
mov
xchg
or
push
push
(bad)
mov
sub
test
sub
and
inc
cmp
dec
gs
int
mov
cmp
add
movs
and
cdq
adc
sbb
cmc
cs
fadd
sbb
mov
dec
cmps
shl
pop
shl
out
sub
mov
or
inc
lock
(bad)
inc
bound
mov
push
pop
jmp
or
idiv
mov
repz
jbe
test
xor
mov
jo
xor
enter
cmps
stos
daa
or
add
movs
sub
shr
push
ret
dec
mov
daa
dec
cmp
ss
dec
test
mov
ret
stos
daa
adc
push
sbb
icebp
shr
and
mov
sbb
lock
adc
into
idiv
nop
hlt
int
dec
shl
or
lock
sub
xchg
(bad)
mov
xor
pop
in
jns
mov
enter
or
or
xor
xchg
pop
mov
test
ds
ins
push
(bad)
mov
test
xchg
mov
xor
pop
loop
dec
jmp
jns
add
(bad)
mov
and
les
jg
into
pop
sti
movs
dec
mov
push
ins
xor
bound
cmp
hlt
lea
cld
xchg
mov
sbb
int
icebp
push
mov
push
sub
mov
xchg
fwait
aad
dec
pop
pop
jg
push
int3
jbe
addr16
sub
loope
vrsqrtss
mov
lods
push
mov
mov
mov
stc
bnd
jl
or
and
mov
pusha
sbb
leave
ficomp
popa
xchg
jl
jg
xchg
jp
(bad)
xor
sbb
mov
inc
xlat
jg
leave
dec
adc
jl
jmp
add
mov
or
repnz
add
repz
adc
movs
repnz
xor
mov
cmc
inc
xor
shl
call
sbb
pop
loope
mov
mov
or
es
(bad)
pavgb
into
outs
push
add
stos
addr16
push
dec
pushf
fucom
les
mov
jns
adc
cmp
mov
test
mov
int
jno
ror
js
in
cmc
inc
pop
inc
rcl
cmp
mul
iretw
xchg
imul
xor
dec
push
iret
or
int3
(bad)
popf
sbb
pop
icebp
pop
in
inc
or
fist
push
inc
sub
mov
pop
aam
test
outs
mov
xchg
push
(bad)
mov
xlat
mov
xchg
rcr
pop
rcl
shr
push
addr16
add
out
fs
(bad)
stos
dec
cmp
and
mov
mov
push
xchg
sbb
ret
leave
mov
addr16
fsubr
sbb
gs
int3
int
faddp
pop
pop
dec
out
xchg
sar
mov
xchg
xchg
inc
repz
mov
push
push
in
push
cmp
pop
(bad)
cmp
lock
push
dec
stos
loope
ret
xchg
and
out
add
xlat
add
dec
jecxz
sbb
scas
daa
test
ror
or
aas
dec
push
dec
stc
ins
out
fcomp
xor
stos
(bad)
push
and
jae
pusha
add
adc
mov
jmp
xor
ficom
or
ret
lahf
cmp
cli
movs
rcl
les
mov
stc
daa
ds
leave
pop
add
xor
jmp
dec
je
jbe
retf
imul
stc
into
mov
or
(bad)
push
icebp
cmp
xchg
pop
sub
lods
push
inc
adc
ja
lods
sbb
ficom
cs
in
push
and
push
mov
out
pop
push
push
stos
pop
in
mov
repnz
inc
lods
xchg
das
push
push
in
pusha
lods
and
dec
pop
pushf
jno
cmp
xchg
jmp
and
and
pop
fsub
pop
xlat
pop
iret
ins
pop
stos
mov
stos
add
loope
test
and
cwde
stos
fwait
ja
mov
sbb
and
pop
push
fwait
ins
fadd
icebp
mov
popa
mov
push
jns
jno
dec
pop
xchg
(bad)
ins
jbe
inc
cs
sub
add
pop
cmps
ret
int
outs
mov
adc
icebp
cdq
sub
fild
daa
jg
push
call
pop
push
(bad)
or
xchg
xor
hlt
nop
in
mov
xor
daa
mov
xchg
cdq
in
xchg
mov
jle
not
bound
sub
aas
and
enter
push
(bad)
(bad)
mov
fld
and
into
nop
mov
mov
pop
cmp
xchg
rol
mov
mov
inc
pop
adc
or
sbb
frstor
mov
(bad)
mov
lea
mov
jns
xlat
inc
inc
fs
lods
mov
dec
(bad)
cs
out
mov
shl
push
enter
push
ds
ror
and
pop
mov
test
pop
(bad)
mov
cld
ins
mov
jo
or
pop
jb
loopne
stos
cs
aam
and
jge
stos
sub
push
inc
dec
mov
and
jmp
out
jmp
xchg
test
and
push
mov
adc
and
in
fisubr
pop
int3
adc
mov
nop
cs
mov
jg
dec
stos
addr16
cmp
call
sti
cmp
cmc
fnstenv
arpl
cmps
test
daa
xchg
out
test
call
push
ins
inc
ret
pop
add
push
scas
test
mov
jecxz
fbstp
push
xor
cmps
int
or
outs
xor
push
pop
fsubr
inc
xor
xor
aas
mov
pop
xor
sbb
push
(bad)
cmps
mov
mov
add
repnz
inc
cmps
jno
sub
stos
js
add
inc
loopne
push
mov
mov
mov
sbb
or
xchg
dec
out
cli
dec
jns
push
stos
int
repz
ins
mov
rcl
sbb
cmc
xor
into
xchg
mov
js
mov
or
add
fistp
mov
sub
arpl
inc
ficom
add
rol
jmp
(bad)
sbb
not
and
int
repz
jp
sub
push
jb
(bad)
call
pop
xchg
mov
ins
jecxz
mov
and
gs
sub
add
adc
popa
je
inc
inc
xchg
xor
lds
xchg
pop
jmp
sahf
cli
adc
aad
xchg
mov
test
outs
scas
add
mov
mov
test
out
mov
hlt
push
cmp
and
sbb
mov
daa
cmp
popa
icebp
sahf
xor
push
or
iret
inc
jge
jns
pop
pop
clc
(bad)
xlat
cmps
add
cld
fild
cmp
jno
and
pop
dec
fdivr
or
retf
xchg
div
mov
mov
dec
inc
mov
push
mov
retf
mov
shl
sbb
fldenv
pop
dec
dec
cld
or
sbb
clc
shr
imul
test
dec
add
mov
loopne
jae
dec
(bad)
sbb
and
movs
xchg
mov
adc
xchg
sbb
lods
popa
dec
je
out
add
cmp
fdiv
mov
inc
leave
enter
sti
dec
xchg
cmc
push
sub
xchg
dec
push
sub
add
les
fcom
out
pushf
ret
mov
and
repz
repz
and
xchg
inc
clc
jg
push
stos
xchg
stc
out
pop
mov
pop
sub
dec
xchg
xor
dec
mov
xchg
push
(bad)
mov
mov
in
mov
cmp
add
mov
add
cmp
jl
cld
mov
and
je
cmp
lahf
or
ins
xor
out
test
into
xor
ror
adc
in
loopne
sbb
sub
repz
and
mov
test
xor
out
out
xor
mov
cli
push
leave
xor
out
jbe
and
xchg
dec
pop
cmp
cdq
out
dec
inc
lea
or
inc
cmp
shl
jge
gs
jle
(bad)
mov
or
inc
jmp
sar
out
es
add
mov
mov
pop
adc
jmp
out
adc
jbe
(bad)
sbb
and
add
outs
xor
push
or
inc
mov
sub
dec
sub
retf
ins
je
aad
fidiv
mov
(bad)
or
push
xor
sbb
inc
pop
adc
fimul
test
add
and
dec
adc
xchg
aad
cmps
arpl
popa
arpl
movs
ret
pushf
dec
mov
cwde
stos
les
(bad)
sbb
int
sahf
and
call
leave
dec
ins
lea
push
hlt
lods
loopne
jo
int3
mul
ins
sbb
inc
mov
mov
push
mov
loope
movs
lea
dec
out
mov
or
imul
mov
(bad)
add
pop
jae
inc
inc
in
int
vmaxss
push
add
imul
xchg
fidiv
sub
fisub
sbb
clc
or
ret
or
add
or
leave
es
lahf
jne
xchg
test
adc
add
aaa
add
inc
mov
pop
sbb
mov
pmulhuw
xor
xchg
dec
call
scas
pushf
dec
mov
pop
mov
ss
(bad)
mov
push
ss
mov
aam
mov
push
leave
cmps
fsubr
scas
mov
fadd
test
sub
mov
xor
out
dec
ret
push
in
sbb
aaa
mov
ret
mov
jnp
sub
and
sub
sbb
jg
pop
fs
jmp
mov
jge
jp
ror
mov
fidivr
and
mov
xor
add
movs
retf
test
out
retf
or
ror
ja
or
mov
ins
mov
mov
ins
sbb
imul
aas
or
xor
rol
movs
and
dec
pop
aam
cmps
(bad)
dec
and
mov
dec
icebp
xor
idiv
movs
dec
or
or
jge
inc
dec
jl
in
xchg
cwde
xchg
xor
ror
ret
mov
cmp
cmps
stos
push
cmps
xlat
sbb
inc
cmp
inc
cmp
inc
mov
lods
inc
cmp
sub
int
mov
jno
push
inc
add
in
sub
(bad)
push
cmp
repz
(bad)
std
bound
and
fist
jb
pop
push
push
inc
retf
cmp
std
add
bound
mov
mov
pop
ss
adc
jno
sub
xchg
cmp
mov
add
inc
(bad)
jbe
bound
add
data16
mov
adc
gs
jne
div
(bad)
data16
mov
out
dec
ins
mov
push
jno
enter
pop
fsubrp
pop
pop
lods
pusha
jnp
pop
pminsw
sahf
std
dec
std
mov
scas
inc
push
movs
jmp
mov
retf
aas
mov
mul
sub
cdq
jno
push
enter
cmp
xchg
xor
inc
repnz
mov
add
push
fisttp
inc
dec
pop
dec
(bad)
mov
shl
jmp
cld
scas
xor
(bad)
mov
or
ins
call
aaa
pop
aas
pop
lea
pusha
push
outs
(bad)
pop
sar
ja
bound
stc
pop
mov
jnp
sub
pop
sbb
mov
pop
repnz
push
and
cmp
or
je
hlt
(bad)
push
fs
ret
dec
mov
aaa
mov
and
adc
fdivr
rol
mov
nop
lds
data16
and
jmp
test
shl
inc
xchg
dec
sub
ja
xchg
xchg
fild
aad
rcl
cmp
iret
inc
jne
call
mov
push
dec
cmp
inc
dec
je
dec
outs
add
xlat
ds
jne
icebp
xchg
mov
or
out
imul
jecxz
dec
and
retf
mov
mov
adc
jmp
push
jae
imul
scas
test
out
jl
pop
fldenv
sbb
movs
bound
hlt
outs
rcl
pop
cmp
repz
inc
aad
fdiv
retf
ret
add
(bad)
fs
leave
(bad)
cmp
fist
in
dec
aas
jmp
test
cmp
mov
std
std
xor
div
std
out
rcl
sbb
ss
mov
das
mov
xor
push
call
mul
pop
cmps
(bad)
hlt
adc
sbb
stc
fiadd
jmp
imul
sub
mov
ds
xchg
sub
outs
add
and
das
dec
pop
(bad)
mov
jno
dec
mov
sub
xchg
cmps
sub
mov
rcl
ret
test
rol
inc
jmp
xlat
adc
outs
xor
add
mov
cmp
push
sbb
test
pop
sbb
aam
and
or
in
test
mov
xchg
inc
adc
movs
repnz
push
arpl
jecxz
retf
add
bound
(bad)
cmp
pop
xchg
mov
inc
mov
cmp
or
cmps
adc
adc
dec
lds
test
xor
push
or
cmp
movs
loope
call
ror
mov
sbb
sbb
movs
repnz
cld
scas
xchg
out
xchg
mov
mov
jne
xchg
jnp
ds
stos
popa
addr16
jae
popa
add
inc
add
pop
sbb
mov
pop
stos
(bad)
cmps
sub
cmp
cmc
adc
rcl
dec
push
inc
add
shr
or
adc
gs
mov
push
mov
enter
add
xor
mov
lock
lods
test
sbb
imul
adc
cdq
lods
adc
pop
adc
pop
leave
mul
push
test
adc
xchg
mov
loope
inc
jge
movs
jge
mov
jmp
cmps
add
xor
and
xchg
aas
js
cmp
jmp
or
push
inc
dec
pusha
(bad)
dec
mov
and
pop
sahf
repz
sub
add
enter
mov
pop
and
xchg
xor
aas
mov
dec
mov
retf
add
gs
dec
fsubr
jbe
pop
das
lea
sbb
push
add
xchg
mov
and
add
ret
les
xor
scas
mov
sbb
sub
mov
add
scas
rcr
mov
mov
lss
adc
xor
push
pop
or
aad
pusha
or
pop
push
out
sbb
mov
jmp
jnp
icebp
aam
les
ds
push
pop
fwait
lahf
inc
cli
mov
or
stos
loope
sar
aam
jmp
push
int3
test
je
and
adc
outs
inc
in
adc
lods
lock
cmp
aad
dec
jmp
sub
dec
call
fistp
jns
jne
xor
pushf
pop
jmp
popf
out
stc
push
sar
mov
dec
stos
cmps
mov
test
pushf
add
sub
xchg
(bad)
cmovae
pop
cmp
pop
retf
scas
mov
xor
xor
dec
aas
(bad)
adc
call
xlat
add
stos
mov
mov
or
movs
or
fdivr
out
jp
push
cld
jnp
sbb
adc
(bad)
mov
lahf
pop
mov
(bad)
stos
sti
ja
mov
adc
xor
mov
mov
mov
inc
(bad)
jmp
test
sti
and
and
lock
and
jae
int3
pop
cmp
push
cli
lods
pop
(bad)
sub
cli
and
in
ss
mov
clc
cmp
cmc
std
mov
bnd
mov
xor
jmp
sub
mov
lods
mov
loop
mov
push
push
neg
and
mov
cmps
mov
push
cmp
cmps
int3
pusha
jbe
pop
inc
push
ss
push
icebp
mov
sbb
cmp
cmp
outs
outs
std
imul
hlt
scas
outs
push
retf
add
dec
inc
popf
adc
std
pop
test
test
add
outs
sbb
aas
bound
pop
(bad)
out
xor
sbb
and
lods
repz
scas
jmp
cmps
bound
dec
out
push
push
je
arpl
xchg
jo
cld
dec
adc
das
jp
xchg
cmps
scas
ror
cmp
dec
mov
lea
xlat
dec
(bad)
sbb
add
mov
enter
mov
adc
mov
mov
ror
nop
enter
stos
nop
test
stos
lock
retf
adc
shl
lock
lahf
or
xchg
out
loop
jl
imul
iret
sub
push
xchg
inc
or
into
(bad)
jbe
shr
add
dec
xchg
mov
or
mov
ret
retf
push
xor
xchg
loop
or
cmp
popa
or
mov
ds
xchg
inc
ss
pop
adc
lahf
mov
add
pop
leave
sub
mov
scas
pop
lea
jmp
mov
jle
lahf
popa
push
jl
mov
sub
mov
arpl
aam
add
sbb
imul
mov
xlat
pop
ret
mov
daa
jmp
stos
jnp
or
ficom
dec
mov
cmps
sbb
hlt
dec
(bad)
fldcw
or
or
outs
sbb
into
sbb
and
ror
std
adc
sub
(bad)
xor
fs
out
call
int3
jmp
sub
ja
sbb
dec
mul
xlat
call
mov
pop
test
jne
mov
clc
scas
and
cmps
cmps
push
pop
jae
or
add
inc
enter
push
xchg
mov
lods
pop
inc
les
pop
loopne
lahf
into
push
(bad)
xor
stos
jne
pop
xchg
add
pusha
jne
pushf
iret
retf
jmp
enter
loopne
stc
mov
add
imul
jno
xchg
fidivr
rol
sbb
and
out
mov
scas
pop
aad
adc
sbb
outs
push
jge
jno
inc
mov
jmp
ja
in
mov
pushf
mov
push
mov
stos
or
xlat
imul
out
cmc
daa
xor
dec
mov
out
push
push
mov
loope
shl
cmps
push
mov
fwait
and
ins
sbb
inc
jmp
stc
stc
push
call
jae
fcom
sub
inc
mov
sub
dec
shr
push
(bad)
push
iret
loopne
inc
jmp
mov
les
lds
and
ret
sbb
adc
lea
add
sbb
xchg
hlt
mov
retf
data16
fidiv
pop
xor
jnp
fisttp
xchg
pop
adc
push
or
std
push
mov
enter
ds
(bad)
push
mov
ficomp
ret
sti
jo
scas
stc
scas
pushf
and
xchg
and
jp
icebp
int
in
xchg
dec
push
pop
sub
add
lahf
or
xor
push
dec
(bad)
in
repz
add
(bad)
(bad)
xor
repz
inc
int3
mov
push
mov
adc
in
ja
clc
mov
jmp
cmp
icebp
ja
out
or
ins
mov
in
xor
ins
jmp
adc
add
test
idiv
mov
dec
push
mov
shl
inc
mov
outs
mov
inc
repnz
sub
sahf
add
(bad)
mov
test
inc
dec
jmp
fs
mov
inc
sbb
push
mov
dec
cmp
into
(bad)
test
jbe
lock
xchg
ss
pop
imul
push
stc
movs
xor
mov
push
adc
das
shr
cwde
mov
retf
mov
mov
aad
fsubr
leave
pop
das
jecxz
pop
mov
(bad)
out
cdq
ds
pop
(bad)
inc
jnp
mov
cmp
mov
pop
cmp
fstp
out
jmp
mov
pop
sub
loope
imul
stc
add
xchg
sub
inc
popa
xor
lods
jp
out
outs
(bad)
push
nop
sbb
mov
push
mov
mov
shl
scas
pop
call
jmp
add
ret
ror
or
popa
out
shl
ss
call
xchg
push
loopne
icebp
ret
repnz
push
lock
sbb
sti
push
mov
adc
xchg
jmp
and
ja
mov
stos
mov
ret
ror
cmp
(bad)
pop
movs
fld
pop
mov
fisubr
test
push
or
inc
(bad)
xlat
fst
lea
mov
dec
mov
mov
mov
and
mov
imul
mov
fsub
pop
cdq
je
inc
lock
hlt
outs
pop
mov
mov
movs
ret
xchg
lods
retf
xor
dec
sbb
mov
adc
dec
xchg
adc
stos
jb
pop
or
cmp
call
push
push
push
xor
std
cdq
jmp
clc
lahf
jmp
cmp
repz
mov
loop
jge
xchg
daa
mov
push
xor
cmp
adc
lock
ins
(bad)
fldenv
icebp
sar
movs
lea
shl
dec
iret
xchg
js
sub
fldcw
stos
mov
dec
and
mov
ror
imul
mul
push
repnz
push
push
inc
stc
sub
imul
je
hlt
loope
pop
sub
mov
movaps
inc
outs
push
push
scas
sbb
nop
cld
jbe
pop
les
mov
in
inc
test
mov
or
inc
pop
(bad)
and
ja
nop
mov
(bad)
mul
(bad)
movs
dec
pop
out
movs
inc
ins
cmps
xchg
ret
xchg
mov
es
repz
sbb
lods
or
test
gs
out
gs
or
adc
push
cdq
sub
mov
(bad)
cmp
das
aas
aam
dec
dec
sub
pop
jae
cmp
xchg
fild
dec
sub
fdiv
push
mov
push
sub
movs
fidivr
inc
xchg
call
mov
mov
jle
xchg
scas
sbb
jle
movs
ffreep
mov
cmp
xor
mov
or
shl
outs
xor
(bad)
xchg
or
gs
xchg
ins
mov
adc
and
xor
(bad)
fsub
pop
je
imul
pop
bound
xor
mov
add
loope
int
sub
fdivr
mov
xchg
add
push
push
xor
paddd
mov
jmp
cmp
sub
add
fsubr
lods
cmp
enter
pop
jns
int3
pusha
xchg
stos
lods
out
jb
fwait
in
pusha
cmp
cmps
cmp
xchg
mov
and
out
je
or
pop
xor
sub
ins
mov
wbinvd
(bad)
in
adc
adc
loopne
jg
data16
leave
fnstcw
push
pop
push
out
aam
jle
jb
cli
dec
push
jmp
or
dec
mov
fmul
aad
cmp
sub
jle
sbb
icebp
rcr
xchg
mov
es
push
and
mov
xchg
pop
mov
fidiv
fs
push
add
mov
imul
mov
mov
mov
mov
mov
test
pop
ja
jecxz
cmp
sub
call
adc
out
pop
dec
adc
jl
push
adc
ins
scas
test
in
inc
in
adc
or
das
je
ja
cmc
cli
aam
lea
test
jecxz
pushf
addr16
(bad)
sub
push
push
xor
jl
je
stc
add
xchg
out
push
scas
mov
inc
in
fs
jns
out
mov
push
mov
jl
pop
sub
mov
icebp
out
in
shl
xor
fucomp
arpl
jle
popf
ins
aad
cld
fidiv
mov
je
test
add
inc
pop
fsubrp
jmp
mov
ret
cmp
cli
stos
jle
fistp
jns
mov
pop
jo
push
mov
in
pop
bound
ins
sbb
pushf
retf
jae
enter
test
mov
inc
mov
cmps
dec
mov
hlt
imul
inc
push
cmps
outs
push
sbb
ret
and
mov
cs
pop
mov
jle
rcl
movnti
push
test
jg
cmps
pop
mov
retf
jae
sub
push
enter
or
pusha
add
mov
inc
movs
stos
and
mov
push
ret
out
sub
movs
or
inc
(bad)
ds
pop
inc
adc
sbb
(bad)
fdiv
push
xchg
jl
aaa
mul
sub
inc
int
and
cli
aas
inc
outs
out
repnz
cld
or
hlt
ret
sbb
jmp
jmp
mov
ja
rcl
rcr
ins
and
ret
lahf
jmp
adc
fidiv
dec
hlt
cmps
loope
push
dec
sbb
add
popf
popf
int
fwait
and
adc
in
retf
cmps
pop
push
push
pop
fst
add
cmp
retf
(bad)
jbe
fbstp
or
aaa
jg
jmp
out
das
cmps
xor
mov
jmp
push
adc
or
sbb
out
jns
clc
fwait
pushf
adc
out
cmp
into
mov
or
xor
mov
popf
stc
push
cmp
push
adc
and
mov
sbb
rcl
(bad)
jl
cmp
imul
mov
add
add
lds
pop
lods
outs
mov
sbb
(bad)
shl
repz
inc
mov
lahf
outs
pop
xor
dec
sbb
repz
sahf
outs
dec
iret
fbstp
mov
ja
call
sbb
rcr
mov
movs
push
retf
in
ror
sbb
mov
pop
loopne
dec
(bad)
out
mov
aam
add
lds
call
stos
xchg
or
ja
inc
fldenv
push
xor
in
add
loop
push
outs
adc
xor
js
mov
add
(bad)
cli
cli
inc
fidiv
jmp
or
cmp
stos
mov
shl
sti
mov
es
sbb
cdq
outs
jno
xchg
test
gs
out
push
push
mov
mov
sbb
(bad)
xor
push
out
dec
mov
es
push
rcr
inc
inc
adc
sub
or
aaa
rcl
jl
shl
mov
xor
sbb
lock
stos
ret
(bad)
cli
shl
cli
cmp
push
imul
dec
push
cmp
das
sbb
mov
aas
xchg
xchg
scas
rol
mov
cmps
test
or
mov
lds
xchg
out
mov
push
(bad)
popa
sti
dec
xchg
jb
xor
cmp
in
jg
pop
lods
mov
nop
adc
xchg
popf
outs
or
bound
xor
xchg
adc
push
lods
and
nop
les
iret
aam
mov
push
xor
aaa
mov
mov
mov
fisubr
inc
out
jne
test
(bad)
int
cdq
jo
push
jns
out
mov
neg
pop
sbb
and
adc
std
ja
dec
xchg
lods
leave
adc
add
adc
mov
sbb
test
inc
mov
movs
xor
rol
repz
dec
push
aas
push
mov
inc
jae
or
adc
retf
in
jb
rcr
mov
inc
sub
mov
adc
sbb
mov
popa
inc
into
push
cwde
(bad)
std
push
add
inc
pusha
push
repz
xchg
mov
sub
dec
xor
mov
mov
frstor
pop
xchg
inc
ds
mov
and
jae
add
gs
mov
add
out
pop
xor
cdq
std
xor
pusha
jecxz
mov
js
pop
add
scas
fnstenv
popf
shl
jno
add
scas
sbb
out
pushf
push
mov
fisttp
stos
or
dec
mov
pop
pop
je
dec
jg
clc
sub
inc
push
test
jnp
cmp
les
pop
rcr
fstp
mov
fsub
mov
mov
add
jg
add
jne
fwait
xchg
and
pop
outs
mov
(bad)
cmp
ret
sub
jbe
lahf
dec
rcl
mov
adc
push
jb
jb
dec
push
adc
mov
ffreep
pop
pop
scas
int
(bad)
into
cmp
cmp
xchg
sar
(bad)
test
add
pop
cli
xchg
mov
or
mov
stos
push
dec
sub
jg
mov
ds
scas
jmp
sub
mov
xor
lea
hlt
pop
jmp
sbb
nop
jae
add
adc
ins
cwde
cmp
mov
maskmovq
neg
sub
mov
xchg
mov
fidivr
xchg
or
jge
mov
cmps
mov
aaa
psrad
dec
js
cmp
cs
test
(bad)
mov
inc
addr16
or
stos
stc
xor
enter
mov
mov
test
sbb
pop
xchg
and
jl
shl
sbb
repnz
mov
mov
popf
mov
loopne
sub
popf
add
jmp
push
dec
push
jmp
or
lahf
or
xchg
retf
sbb
dec
mov
inc
add
repz
leave
inc
cmp
ins
fimul
dec
mov
xor
mov
sahf
jne
fmul
push
mov
or
scas
mov
data16
cdq
sti
ins
jmp
xchg
outs
loopne
ins
push
pop
test
push
sti
sub
xor
add
or
pop
repz
call
jecxz
jns
add
xor
mov
mov
scas
sbb
pop
popa
cmps
mov
sub
ficom
sar
aad
and
pop
in
xor
movs
sbb
(bad)
mov
rcr
out
xchg
mov
sbb
and
jbe
jl
sub
cmp
pop
(bad)
popa
out
and
not
mov
out
lods
push
add
mov
mov
pop
nop
idiv
xor
pushf
jl
jmp
cmps
jns
mov
cmp
mov
mov
idiv
mov
jle
cmps
or
xchg
push
or
retf
add
pop
sub
je
ret
push
stos
adc
inc
lock
jbe
int
push
cdq
sub
push
add
adc
mov
mov
fsubp
push
enter
aaa
and
lds
push
shr
fisttp
cs
dec
mov
mov
xadd
shl
ins
jbe
bound
popa
xor
bound
inc
xchg
sub
cmp
pop
shl
add
loopne
jg
adc
inc
out
xchg
ins
ret
add
ins
jge
aaa
jg
iret
jge
push
(bad)
shr
dec
sbb
mov
cmc
movs
pop
adc
in
xchg
pop
jmp
and
push
adc
or
cmps
xor
sub
mov
and
imul
push
xor
jg
dec
mov
mov
push
test
mov
inc
(bad)
jns
xchg
fdivp
xchg
scas
cld
push
push
imul
push
pop
ret
sub
add
add
dec
(bad)
retf
adc
clc
add
push
loope
daa
popa
arpl
or
or
xor
lds
sbb
jmp
pop
jecxz
out
loop
sub
jae
mov
sub
sub
sub
xor
mov
xchg
call
call
pushf
inc
cmp
adc
test
ror
and
movs
fcom
and
shl
in
fbld
jne
loop
cs
and
maskmovq
idiv
inc
retf
hlt
dec
inc
iret
add
push
ins
push
adc
adc
mov
idiv
pop
ins
ficomp
push
lds
enter
add
inc
fldcw
cli
jecxz
xlat
out
shl
mov
cmp
mov
lahf
loop
inc
xor
fcomp
pushw
cmp
pushf
std
mov
test
xchg
xchg
ja
outs
cli
push
test
data16
movs
sahf
mov
clc
mov
push
scas
test
jg
push
jp
and
mov
mov
adc
xchg
mov
push
adc
jno
add
pop
mov
data16
add
lahf
sub
xchg
or
outs
dec
test
cwde
in
jecxz
and
in
cmp
mov
les
xchg
mov
or
das
call
push
aaa
inc
iret
sahf
fsub
or
add
arpl
addr16
mov
cmp
add
fimul
xor
push
and
mov
cmp
push
xchg
lods
jne
add
dec
mov
imul
in
dec
sub
loope
jns
mov
scas
and
jne
repz
int
cmp
sub
test
mov
rol
inc
in
cmps
cli
sub
adc
pop
(bad)
(bad)
inc
les
loopne
add
jbe
sbb
fadd
jbe
dec
pop
fstp
out
cmps
bound
inc
pop
imul
call
movs
test
jae
loop
jp
sbb
daa
fwait
cmps
inc
pop
inc
inc
fisub
js
jns
test
and
lds
pop
cmp
cld
aas
(bad)
mov
scas
mov
mov
stos
xchg
add
xchg
rcr
inc
pop
scas
cli
cmp
jno
cli
ins
adc
ja
inc
pop
leave
fsincos
sbb
jmp
popf
movs
pop
scas
stc
scas
push
data16
xchg
jae
or
mov
pop
bound
in
mov
cmp
sub
dec
sbb
imul
jle
in
xchg
jle
dec
cmc
scas
xchg
data16
outs
mov
xchg
retf
sbb
push
les
push
add
add
inc
mov
movs
mov
test
mov
xor
es
test
jb
retf
mov
idiv
or
sbb
ins
and
or
outs
push
pop
fidivr
cs
(bad)
out
cmp
jbe
jmp
mov
ret
and
scas
repz
inc
xor
mov
sub
sar
inc
movs
aad
xor
jo
push
add
es
outs
fist
popa
pop
out
jb
jge
push
inc
jg
or
(bad)
cmp
mov
sahf
cmp
mov
push
out
mov
inc
outs
pop
or
(bad)
or
sbb
jmp
test
lea
call
aad
jp
mov
ins
sub
call
jbe
ror
sub
push
div
cmp
retf
dec
(bad)
in
jge
dec
jl
mov
imul
or
out
aaa
in
idiv
cmp
add
imul
jecxz
xchg
scas
jge
sar
in
inc
scas
xor
mul
inc
pop
xchg
in
sub
push
ja
mov
jge
inc
inc
pop
cmc
ja
xchg
ins
push
lock
(bad)
(bad)
and
fmul
outs
clc
inc
jne
mov
adc
arpl
aas
jp
fist
sub
mov
stc
fnstcw
arpl
rcl
pop
jo
je
jmp
loopne
inc
mov
sbb
aad
int
ds
lods
add
mul
repnz
(bad)
dec
sbb
mov
adc
ret
fmul
sub
in
lods
jge
out
out
and
mov
push
inc
repz
sub
pop
or
adc
push
cmp
enter
jo
sbb
int3
mov
aaa
mov
inc
jne
ret
les
sub
outs
xlat
dec
mov
add
mov
das
ss
fadd
fwait
cdq
mov
mov
pop
push
inc
sub
inc
and
fisubr
in
lock
aas
inc
and
pop
mov
cs
icebp
sbb
jns
pop
(bad)
rcl
xchg
inc
(bad)
xor
stos
(bad)
test
imul
mov
inc
lods
iret
shl
shl
cmc
add
mov
sti
rol
leave
add
(bad)
cs
dec
and
cwde
push
sahf
mov
jg
jbe
stc
pop
leave
das
mov
jmp
xor
mov
jo
jg
fcmovne
lds
and
popa
add
cmp
xchg
xchg
dec
pop
iret
inc
pop
jp
mov
je
shl
xor
jbe
int3
and
pop
xor
div
push
shr
and
aaa
nop
cmps
(bad)
cmc
adc
stc
mov
leave
out
call
mov
pop
lea
add
jnp
loopne
test
mov
js
in
mov
fsubr
sahf
outs
xor
in
jp
and
ret
adc
adc
xor
cmp
retf
adc
sub
fwait
lea
ss
(bad)
in
xor
out
stos
push
mov
adc
not
mov
or
mov
retf
inc
sub
sbb
popf
jmp
popf
ins
jg
mov
and
inc
mov
ja
pop
adc
ja
outs
xchg
nop
jno
mov
fstp
rcl
push
loop
xchg
sbb
out
aad
test
(bad)
mov
sti
fsub
jns
jmp
cdq
fiadd
call
mov
rcr
and
adc
rcl
adc
ja
adc
not
inc
sahf
pop
into
sbb
sbb
sub
(bad)
lods
aam
pop
adc
cmp
pop
push
ss
shr
aaa
jle
pop
movs
push
adc
(bad)
cmc
mov
xchg
sti
or
or
addr16
dec
sub
lahf
push
inc
leave
mov
xor
xor
mov
xchg
pop
push
dec
ins
shl
call
sub
leave
dec
fnstsw
arpl
pop
or
(bad)
push
add
push
inc
jbe
xor
inc
les
dec
and
and
push
pop
aad
inc
cmp
fwait
mov
jno
add
add
lahf
xlat
sbb
call
sub
mov
(bad)
sahf
and
scas
jae
adc
xchg
shr
mov
dec
xor
or
or
pop
sub
sbb
mov
dec
xlat
mov
fwait
cmp
cmp
inc
sub
sub
pop
les
or
daa
pop
addr16
arpl
mov
cs
movs
adc
adc
bound
pop
aad
push
jmp
push
jg
mov
jmp
mov
rcr
imul
jne
clc
jnp
mov
xchg
jae
jecxz
test
and
pushf
add
dec
das
mov
push
push
jge
adc
and
hlt
lds
aas
xchg
mov
or
jmp
data16
jne
mov
jge
(bad)
xchg
mov
les
emms
fwait
push
test
mov
dec
daa
and
dec
test
push
jmp
retf
push
xor
jmp
or
ds
and
mov
adc
pop
pop
or
jg
cmps
lea
mov
sti
or
or
ficom
adc
fidivr
jbe
rcr
sti
(bad)
loop
mov
pop
mov
loop
push
mov
scas
fild
mov
jae
xchg
sbb
push
movs
enter
mov
imul
cli
mov
popa
jno
adc
xchg
call
cdq
je
es
fld
push
jmp
or
dec
jae
mov
adc
xor
icebp
maskmovq
pop
jo
lock
mov
xchg
in
std
cmp
(bad)
add
jg
xor
in
inc
add
sub
sub
sbb
add
and
ds
loop
sub
imul
xor
cmp
fbld
(bad)
mov
inc
push
and
and
or
fsubrp
push
lods
mov
cmps
cmp
mov
jge
mov
inc
mov
jnp
enter
sub
xor
jl
jl
jb
(bad)
out
nop
daa
inc
cld
adc
(bad)
dec
mov
sti
repnz
or
and
(bad)
test
adc
dec
ror
syscall
or
jmp
into
das
mov
xchg
mov
out
jl
inc
addr16
or
adc
pop
je
test
dec
retf
dec
pop
sti
pop
cmps
xchg
in
popa
jmp
jno
and
sub
fdivp
dec
dec
stos
and
popa
inc
call
ds
pop
sub
mov
jp
xchg
dec
stos
jno
add
sbb
imul
xor
in
xchg
std
(bad)
mov
shl
sbb
jbe
jnp
cmp
cmp
test
in
movs
jg
loope
xor
jecxz
xor
in
xor
mov
fist
fmul
sbb
es
cli
fwait
mov
iret
xor
outs
psubsb
ret
pop
push
mov
sub
inc
add
mov
cmp
add
sbb
mov
and
out
inc
div
add
pusha
or
mov
dec
cmp
mov
out
fdiv
sbb
and
fwait
mov
xor
add
jbe
lock
mov
gs
in
cmp
imul
leave
fbld
sahf
xchg
or
iret
retf
dec
std
iret
iret
fild
je
cmc
mov
cmovne
and
pop
call
mov
and
adc
lds
shl
and
daa
sbb
mov
sub
dec
jecxz
hlt
inc
sti
cmc
bound
test
xor
mov
mov
into
sub
xor
outs
mov
mov
rcl
test
and
mov
push
sub
jmp
ret
and
cld
push
mov
inc
ficomp
xchg
aad
push
push
dec
xor
add
aaa
xchg
cwde
dec
add
lods
pushf
sub
pop
ret
dec
push
aad
mov
cmp
cmps
sahf
movs
mov
push
mov
fwait
loopne
repnz
or
inc
fidiv
(bad)
repnz
xchg
pop
sub
out
push
outs
xor
inc
sub
es
fistp
cwde
cli
in
leave
ins
or
cmps
dec
fld
xchg
sahf
cli
idiv
lahf
xor
shl
add
cmp
jmp
pop
push
ins
fild
fxch
or
sub
into
repz
lea
(bad)
mov
sub
leave
pop
rol
icebp
mov
cmc
ret
jns
retf
out
out
int
in
adc
jmp
gs
jmp
xchg
push
mov
and
jne
xchg
or
in
jb
push
or
and
jne
pop
rcl
in
add
dec
dec
fnstsw
pop
int
cmp
jns
into
xchg
fmul
jmp
aas
add
mov
sbb
retf
data16
lods
push
cmp
xor
xchg
sub
pop
int
pop
mov
adc
int
add
pop
sub
mov
fdivr
loope
mov
jge
stc
adc
cmc
(bad)
out
jecxz
loop
js
sub
or
retf
push
retf
xchg
mov
aad
sub
xor
jno
fnstsw
mov
cmp
sbb
push
nop
or
sub
rol
add
shl
cwde
mov
ins
scas
nop
lods
aaa
jae
lea
imul
leave
mov
(bad)
jmp
scas
sbb
xchg
dec
sldt
div
push
retf
test
mov
in
xchg
xchg
pop
or
dec
jge
aam
pop
mov
adc
add
or
outs
adc
movs
mov
push
dec
xchg
and
movs
sbb
dec
fs
cmp
inc
std
mov
test
jmp
call
jl
inc
push
add
jecxz
push
stos
xchg
ror
jmp
mov
jne
int3
imul
addr16
enter
mov
jne
push
aad
fwait
dec
movs
fs
xchg
out
pop
out
and
outs
icebp
add
xchg
sbb
popf
cmp
jae
mov
mov
mov
retf
fdivr
xchg
in
xor
and
fwait
xlat
or
sbb
sub
mov
stos
sbb
sbb
xchg
cmps
and
cmps
add
jge
xchg
mul
sub
ss
cmp
js
push
ja
push
outs
jnp
push
les
imul
lock
repz
push
adc
aas
outs
std
pop
loopne
je
and
sbb
stos
out
mov
xchg
out
mov
add
push
inc
jb
rcl
test
mov
mov
mov
mov
xchg
mov
in
jmp
stos
pop
fisttp
dec
int3
imul
jge
loope
(bad)
pop
sub
jne
cdq
jnp
mov
out
sub
cdq
cmp
das
sub
sbb
ror
push
cdq
sahf
sbb
cli
in
mov
int
jbe
jmp
adc
pushf
pushf
aam
pop
cmps
movs
mov
clc
and
and
mov
or
sahf
jns
(bad)
jb
jmp
mov
cli
cmps
mov
loop
test
in
shl
inc
pop
sub
xchg
popf
ret
xchg
repz
jecxz
jp
add
pop
jnp
inc
call
mov
mov
push
bound
push
cmps
mov
xor
rcl
or
xchg
xor
and
mov
sbb
mov
outs
xchg
out
push
and
push
push
pushf
ror
dec
daa
ja
xchg
fbstp
ja
adc
jp
sbb
jne
or
in
(bad)
mov
dec
rcl
pop
fist
jmp
aad
sbb
jge
gs
push
cmp
inc
fnstsw
and
mov
cmp
push
arpl
lea
sbb
pop
cdq
std
lea
movs
sub
(bad)
xchg
adc
ret
(bad)
scas
mov
dec
pop
ja
fucomp
cmp
mov
in
jns
pop
ret
(bad)
xchg
mov
call
or
sbb
adc
shl
jp
in
add
xchg
sbb
test
popa
cdq
cmp
pusha
inc
in
jbe
sbb
and
or
sbb
xchg
and
frstor
stc
sbb
dec
cmps
pop
mov
dec
clc
ret
push
rol
adc
sub
(bad)
xor
popa
add
mov
iret
imul
xor
hlt
jle
int3
mov
lock
mov
jge
pop
and
jg
jmp
aam
sbb
sub
mov
sub
jp
js
cmp
xchg
and
cmps
pusha
jns
sti
mov
jecxz
outs
cmc
cmp
and
adc
adc
clc
ror
cmps
adc
mov
loop
(bad)
fstp
or
les
in
fcmovbe
loop
daa
sub
push
inc
fs
cmps
lods
test
ret
call
adc
cmp
scas
imul
cmps
xor
in
or
daa
push
jo
(bad)
popa
pop
mov
movs
aam
jns
imul
add
mov
lods
xor
aam
outs
jns
es
or
daa
jmp
adc
mov
sub
in
mov
cmp
or
in
mov
cmps
test
popa
jecxz
push
pop
mov
cmp
ret
mov
(bad)
adc
cli
into
shl
cmp
xor
popf
gs
fs
sbb
inc
pop
and
dec
(bad)
or
shr
inc
cmp
jmp
xchg
jns
push
les
adc
fnstenv
je
mov
push
xchg
adc
pop
scas
adc
mov
mov
cmp
fsub
std
lods
cmp
and
mov
loopne
jle
fst
inc
stc
pop
jbe
dec
outs
std
push
dec
mov
pop
imul
lock
fwait
pop
lea
xchg
inc
ficomp
ret
scas
push
mov
cmp
mov
js
adc
(bad)
mov
add
pop
mov
call
sub
imul
mov
cmp
iret
inc
repz
stc
retf
jae
(bad)
mov
jnp
mov
retf
retf
rol
jg
test
mov
mov
mov
dec
or
pop
scas
cmp
push
outs
jmp
aas
mov
jle
inc
or
push
adc
je
jl
dec
xor
fsubrp
sbb
jnp
scas
jp
mov
cli
ins
out
xor
jns
pop
push
es
dec
mov
aam
inc
shr
scas
cmp
xor
adc
movs
lods
out
(bad)
pop
leave
out
(bad)
push
mov
jle
pop
clc
retf
pop
adc
xchg
sbb
xor
xchg
mov
pop
jecxz
fistp
repz
mov
sbb
xchg
sbb
je
cld
daa
mov
sbb
ins
test
loopne
ficomp
mov
pop
sbb
retf
das
lds
mov
lods
mov
pop
xchg
add
out
add
js
ficomp
pop
test
rol
xchg
scas
in
adc
iret
rol
fnstenv
sub
sub
sub
mov
ds
push
stos
mov
fistp
sbb
push
mov
rcr
in
repnz
cmp
mov
add
jno
lock
mov
and
bndstx
ss
adc
cdq
xor
sbb
mov
(bad)
jae
lds
js
ins
outs
popa
popf
fs
mov
pop
ret
cli
mov
jg
jb
adc
and
mov
lahf
lahf
cld
std
sub
inc
stos
jle
out
ds
sbb
add
and
psrad
out
pop
jb
cmps
daa
mov
ins
xchg
loope
cmp
sbb
and
fld
dec
pop
adc
sti
sub
mov
mov
jbe
test
cmc
mov
fcomp
in
es
into
or
loopne
inc
mov
in
adc
gs
stos
push
dec
push
imul
jbe
push
lods
je
fwait
in
scas
in
cwde
pop
and
pop
out
add
pop
fwait
jmp
pushf
daa
out
add
lods
jb
ret
lock
push
sbb
scas
xchg
adc
sub
xchg
mov
(bad)
bound
dec
ins
pop
cli
lock
mov
mov
mov
sti
dec
pop
sub
push
xchg
mov
xor
and
ret
cmp
cmp
push
gs
fstp
test
mov
mov
sub
outs
add
or
sbb
mov
and
or
push
loope
shl
addr16
add
xchg
or
mov
sbb
jl
in
dec
mov
xor
inc
shr
imul
push
mov
fwait
lods
sub
xlat
rol
aad
pop
cs
adc
rol
clc
aas
push
stos
dec
(bad)
bound
imul
mov
mov
mov
push
int3
fisubr
mov
jno
sbb
daa
test
stos
stos
js
push
cmp
cld
movs
and
shr
cdq
mov
mov
fcomip
ror
push
inc
int3
mov
fist
cmp
xor
popa
rcr
inc
mov
mov
xchg
idiv
das
and
mov
mov
clc
cmp
add
pusha
push
inc
xor
test
mov
scas
jg
mov
push
pop
inc
sub
fsub
ficom
add
mov
popa
adc
cmps
pop
dec
daa
cdq
test
push
inc
les
dec
(bad)
cli
or
mov
stos
xchg
sahf
adc
cmp
adc
popf
pop
sub
imul
sar
(bad)
xchg
dec
mov
stc
pop
enter
mov
push
push
cwde
lds
idiv
cdq
mov
test
(bad)
sbb
mov
mov
xchg
push
push
ror
repnz
inc
cmps
xor
mov
mov
test
sbb
(bad)
push
ficom
in
cmps
dec
sbb
mov
jne
mov
gs
lock
data16
jb
gs
mov
or
and
aaa
neg
enter
inc
arpl
sti
retf
aam
inc
pop
jl
mov
xor
das
push
jmp
jnp
loope
dec
mov
inc
repnz
movs
popa
sbb
or
cld
xchg
aaa
scas
push
sbb
ss
xchg
pop
sbb
push
dec
(bad)
pop
test
xor
push
and
outs
data16
mov
dec
sub
ret
ror
push
fnstsw
sbb
pushf
into
icebp
and
dec
add
inc
adc
jnp
sub
cwde
pusha
add
add
mov
sti
fs
sub
jecxz
in
sub
cmp
pop
mov
xchg
data16
mov
retf
rcr
fld
mov
cmp
fld
(bad)
in
scas
mov
out
push
test
and
pop
push
iret
cmp
ficomp
xchg
fistp
sub
inc
mov
cli
ret
out
jb
cli
cmp
stc
pop
mov
fisubr
sub
movs
push
xor
pushf
cli
or
inc
push
mov
mov
sbb
mov
shr
popa
ret
popa
ror
jno
sub
fiadd
jle
ins
pop
mov
mov
cmp
scas
gs
fld
xchg
jo
ds
push
(bad)
adc
pop
adc
xchg
mov
sub
push
stos
jl
cmp
mov
lahf
mov
add
cmp
inc
rcl
mov
es
inc
sti
mov
jnp
push
dec
sub
test
mov
cmps
mov
pop
rol
mov
pop
lock
xor
xor
xchg
fsub
fs
(bad)
fnstenv
aaa
or
mov
mov
call
loopne
cli
cwde
jp
cmp
rol
mov
lods
mov
mov
aam
fdiv
mov
pop
mov
das
dec
or
xor
mov
jne
retf
cmp
jle
mov
ss
ja
sbb
xor
sub
bnd
xor
push
daa
jns
lahf
lds
lahf
out
das
jbe
sub
push
in
mov
sbb
cli
sbb
inc
test
test
aaa
pusha
add
cmc
adc
pusha
aaa
add
xor
int3
adc
outs
rol
fs
or
pop
jmp
mov
adc
call
or
and
(bad)
or
or
aaa
sbb
mov
mov
sbb
sub
pop
add
inc
fcmovbe
xor
mov
cmp
cmp
mov
pop
cmc
mov
push
cmp
loop
dec
mov
(bad)
mov
test
ret
(bad)
rol
in
or
imul
xchg
fiadd
jb
xchg
fld
shl
into
shl
sahf
jae
dec
and
adc
push
js
cmc
cdq
or
fadd
inc
jnp
sbb
icebp
and
in
cmp
retf
icebp
leave
pop
addr16
xor
(bad)
xchg
cmps
push
or
fistp
scas
fisttp
xchg
sub
mov
inc
push
int
lods
ds
dec
cld
add
pop
xor
out
outs
xchg
int
jo
inc
lods
nop
sbb
lea
out
setle
xlat
jb
das
dec
jl
call
out
adc
push
mov
sub
mov
adc
adc
adc
jns
ss
dec
enter
into
movs
cs
jb
mov
inc
adc
popf
xor
ss
jecxz
jae
cmp
pusha
scas
mov
outs
call
imul
jae
cli
std
xor
pop
mov
cmp
or
loope
fistp
pop
leave
pop
paddw
xchg
fild
lods
push
retf
jno
fbstp
add
xlat
cmps
scas
and
xor
push
sbb
retf
adc
stos
das
sub
dec
inc
call
mov
test
pushf
or
sbb
ret
fisttp
inc
xchg
sahf
jg
lds
pop
cld
adc
fdiv
scas
cwde
jb
xor
stos
jg
mov
(bad)
dec
mov
sub
inc
ror
xor
cmp
movs
ja
mov
fsub
xchg
dec
xchg
or
in
mov
sbb
mov
mov
test
pop
call
ret
pop
lods
std
sub
mov
pushf
and
fcom
imul
ja
cmp
loope
ret
fdiv
out
sub
add
inc
adc
adc
and
ja
lahf
xchg
les
xor
popa
fidiv
fs
ret
and
or
aas
in
ret
cmp
jmp
leave
mov
ins
add
adc
ror
fcomp
cmp
pop
repnz
loopne
aad
nop
out
mov
mov
add
cmp
jmp
pop
sbb
outs
jno
pop
cmp
adc
pop
test
ficomp
xor
retf
and
repz
sar
push
stc
loopne
add
and
push
cmp
cdq
int3
mov
iret
mov
push
imul
ret
mov
mov
mov
imul
inc
test
rcl
js
cdq
rol
lock
ds
jno
fisubr
shr
xor
and
mov
sub
xor
gs
add
lds
xor
jmp
outs
out
xor
ss
pop
and
jne
scas
div
dec
enter
dec
inc
pop
(bad)
int
std
lahf
jecxz
ret
xchg
or
or
hlt
mov
mov
add
aaa
dec
sbb
push
mov
ret
iret
(bad)
push
mov
ja
ins
dec
sti
out
jecxz
dec
push
push
mov
adc
mov
cli
mov
outs
push
xchg
push
mov
pop
cmp
dec
and
or
push
test
add
or
mov
test
inc
pop
or
pop
inc
or
xchg
shl
cmp
nop
adc
sub
repz
pop
adc
fmul
add
jg
add
mov
pop
or
(bad)
cli
aas
push
cmp
inc
lea
push
xchg
retf
call
sar
leave
jnp
lds
mov
dec
dec
js
push
scas
mul
repz
test
adc
movs
mov
push
lods
fbld
mov
ins
ss
iret
and
xchg
test
aad
add
mov
rol
jno
aad
std
cld
stc
or
call
push
mov
aaa
ja
jns
and
mov
jo
(bad)
pandn
jecxz
(bad)
int3
aas
dec
adc
jmp
fbld
sbb
cmc
lods
fadd
setl
push
outs
push
es
xor
adc
aaa
dec
cmp
inc
pop
fst
jg
and
popf
pop
push
cmp
and
add
cmps
pop
add
xchg
dec
adc
ja
xor
mov
fld
jecxz
mov
jb
out
repnz
lahf
adc
and
pop
out
je
mov
mov
add
pop
inc
call
rol
jge
or
add
repnz
popf
jmp
mov
je
in
mov
xchg
jge
add
outs
repz
out
mov
(bad)
sbb
lea
mov
mov
adc
pop
jno
dec
and
or
sbb
(bad)
(bad)
pop
cmp
jmp
and
xor
lods
xchg
out
pop
jb
jbe
xlat
adc
and
inc
aad
psllw
sbb
mov
jne
cmp
push
push
cmp
pop
xchg
pusha
xchg
xchg
pop
sub
xchg
out
and
addr16
daa
fisub
mov
pop
out
arpl
mov
mov
mov
mov
cmp
sbb
push
into
pusha
out
(bad)
cdq
stc
dec
inc
shl
cmc
lock
cmp
add
and
jb
mov
dec
or
jecxz
scas
mov
pushf
shr
mov
ja
mov
mov
cdq
popa
sbb
push
aam
sub
addr16
adc
push
push
sbb
data16
push
out
xchg
repz
leave
clc
stc
nop
jp
out
mov
dec
div
addr16
sbb
sub
lea
fst
cmps
(bad)
push
mov
jo
push
or
sub
pop
fst
cmps
and
jmp
leave
mov
and
stc
nop
pusha
pop
in
(bad)
rcr
mov
loopne
ja
xor
das
xchg
imul
sub
cwde
imul
sbb
xchg
cmp
jmp
push
push
imul
popf
add
adc
int3
mov
repnz
test
xchg
fs
in
mov
outs
pop
aaa
lds
xchg
xor
cmc
mov
xor
add
push
out
popf
addr16
shl
fstp
xchg
into
cmp
pop
inc
sbb
inc
imul
int3
mov
repz
scas
movs
jge
mov
and
das
mov
push
imul
and
outs
sbb
jle
test
xor
mov
add
es
pop
sbb
or
dec
xchg
mov
cwde
mov
xor
imul
dec
in
xchg
mov
xchg
lods
pop
scas
pop
jae
sti
movs
push
add
pusha
pop
inc
xor
int
sub
rcr
(bad)
jmp
pop
sbb
std
push
pop
mov
push
xor
mov
xchg
add
ins
sub
pop
test
dec
ret
xor
ds
gs
cmps
xchg
inc
mov
xchg
push
xor
mov
mov
mov
mov
and
pop
mov
xchg
push
pop
cld
and
adc
kmovb
std
and
test
loope
imul
dec
mov
pushf
cld
jle
sbb
pop
out
daa
xor
cmps
out
test
js
pushf
pop
in
pusha
sbb
loopne
dec
mov
scas
fnsave
out
pop
ins
stc
fldenv
into
sbb
mov
lods
sub
test
and
sbb
jle
push
mov
int
and
or
push
mov
scas
mov
pop
push
adc
sbb
ss
or
call
jmp
setge
addr16
mov
call
push
shr
loope
ror
pop
pop
push
push
out
sbb
jns
mov
loope
mov
inc
es
push
jp
jo
mov
mov
and
pop
push
push
rol
lods
mov
outs
adc
clc
(bad)
ja
xor
and
mov
cmps
imul
push
cmps
xchg
jnp
fmul
movs
das
cli
push
mov
sbb
les
mov
mov
and
shl
mov
mov
jae
sub
mov
rol
js
xchg
ror
inc
xchg
out
pop
push
xchg
fs
mov
lea
mov
mov
inc
cwde
mov
arpl
out
cli
or
inc
les
sub
or
mov
lods
ret
add
retf
shl
sbb
bnd
lds
xor
das
(bad)
call
cmp
sub
inc
or
jl
aas
xor
xchg
and
jbe
cmp
out
(bad)
xchg
or
sub
in
add
xlat
cmp
xlat
packssdw
mov
xchg
out
rcl
pop
jno
aad
aas
sbb
pop
test
repz
mov
jnp
lods
scas
and
mov
jl
int
aad
movs
xchg
add
cmp
mov
fwait
gs
cmp
xor
sbb
pop
push
int
cmp
shrd
cmp
mov
test
xchg
add
or
(bad)
or
nop
out
inc
lea
add
push
jne
sbb
pop
push
stc
test
das
dec
stc
jbe
sbb
stos
vprotw
adc
sbb
cmp
retf
inc
mov
out
bound
sub
test
loope
lahf
add
(bad)
xor
leave
arpl
rol
mov
add
jbe
jmp
sbb
jp
fld
es
mov
mov
sbb
xor
je
sti
push
aam
jbe
imul
push
or
lock
mov
xchg
jecxz
mov
shl
or
push
xor
pusha
movs
adc
shr
dec
(bad)
cmp
lea
jmp
loopne
pop
add
lahf
ins
shl
xchg
mov
jae
mov
xor
mov
scas
dec
call
iret
mov
mov
inc
xchg
rcr
call
inc
inc
iret
shr
push
sub
push
or
push
test
sahf
ja
out
in
and
adc
mov
xchg
in
rcl
jb
mov
add
or
hlt
(bad)
mov
sbb
adc
cli
loop
xor
out
fwait
inc
push
lods
mov
cmp
push
jno
test
cdq
jae
in
mov
rcl
dec
dec
movs
jbe
int3
sahf
js
inc
cmp
mov
xor
xchg
leave
(bad)
pop
outs
loopne
cdq
add
ins
out
test
inc
add
fst
or
mov
sbb
mov
xor
shl
(bad)
pushf
fmul
dec
shr
movs
fsubr
lods
call
or
cld
mov
sub
movs
adc
jecxz
add
push
mov
sub
or
mov
fcom
sbb
xchg
lods
inc
fiadd
in
imul
ins
imul
mov
jbe
or
pop
mov
fst
bound
clc
and
dec
lods
pop
jl
call
sbb
mul
pop
mov
cmp
rcl
xchg
push
push
aam
sbb
pop
pop
std
jge
pop
cld
push
sbb
xlat
shl
xchg
dec
and
ss
add
movs
cmc
stc
cmp
lods
dec
dec
jnp
mov
neg
aam
mov
sub
sub
pushf
and
adc
mov
or
ret
loope
xchg
jg
fsin
push
xor
loope
pushf
call
arpl
inc
lods
cwde
inc
shr
ret
das
lods
rcr
(bad)
cs
je
pop
add
bswap
scas
mov
popa
loope
(bad)
lock
shl
cmps
dec
mov
add
adc
sub
pop
cs
xchg
mov
or
mov
ins
lahf
sbb
ret
dec
push
jae
(bad)
das
jo
mov
pusha
pop
jb
lock
jl
imul
push
dec
shl
inc
fisttp
jmp
inc
scas
inc
fadd
daa
stc
xchg
pop
jbe
mov
mov
in
test
and
sbb
(bad)
(bad)
out
pusha
push
mov
jbe
jg
push
mov
inc
jno
icebp
mov
retf
scas
ins
jecxz
test
add
imul
fmul
jge
jno
scas
pop
(bad)
jmp
inc
jg
jecxz
dec
add
xor
aam
xchg
cdq
mov
and
xchg
add
call
inc
jae
stc
xchg
sub
test
push
cmps
sbb
test
push
aam
dec
das
add
dec
cmc
cdq
call
pop
ss
cmp
movs
or
in
push
(bad)
fcomp
mov
shl
dec
adc
jbe
rcl
xor
xchg
push
push
push
pushf
daa
and
jae
xchg
dec
(bad)
add
clc
fdivrp
movs
idiv
jno
lods
lods
jmp
(bad)
repz
rcl
fidivr
push
and
in
push
outs
ins
sti
mov
ret
jae
or
jecxz
fucom
mov
add
sti
sbb
cmp
jae
jbe
lock
cdq
sub
adc
test
and
ret
pop
in
movs
jecxz
mov
or
mov
pop
stos
cmp
(bad)
mov
xchg
dec
test
cld
(bad)
cmp
pop
ror
test
pusha
xor
mov
je
adc
push
adc
fcomp
(bad)
jecxz
in
mov
bound
jge
into
rol
or
out
cmps
mov
and
add
push
add
push
pop
ins
cmp
sbb
xchg
(bad)
and
lea
mov
pop
or
stos
mov
mov
out
mov
add
es
mov
and
mov
adc
cmp
mov
dec
cmps
fwait
pusha
outs
icebp
pop
sub
mov
(bad)
fistp
scas
jne
inc
shr
ja
jnp
and
das
push
mov
mov
inc
mov
ins
lahf
imul
add
stos
test
ficom
adc
push
mov
add
popa
stc
in
jmp
gs
or
add
daa
xor
add
call
push
test
shl
ins
mov
cwde
fcom
pop
popf
xchg
mov
iret
gs
fmul
imul
xor
and
jo
fdivr
mov
mov
mov
jle
dec
rcl
(bad)
dec
mov
jp
xchg
and
jb
in
clc
mov
aaa
pop
xlat
inc
add
int3
ja
sub
rcl
ja
dec
rdmsr
cmp
mov
add
aaa
loope
adc
in
out
pop
mov
leave
xor
mov
add
push
sub
sbb
jbe
ret
loopne
xor
adc
rol
xchg
xchg
les
xchg
retf
mov
loop
into
test
add
xchg
dec
mov
push
in
das
stos
inc
mov
out
sub
scas
mov
imul
xchg
xor
adc
scas
push
push
and
sahf
repnz
push
xor
push
xchg
mov
cs
sub
or
pop
mov
and
ins
sub
imul
push
xor
jae
push
xchg
inc
mov
adc
inc
pop
ins
aas
push
loope
cmp
leave
mov
into
test
je
fsub
jne
cmps
sub
cmp
cmp
data16
jnp
pop
sti
in
and
jb
xor
push
jge
sar
iret
aaa
inc
jmp
out
dec
mov
fiadd
repnz
scas
mov
shl
loope
sti
retf
jge
inc
cmps
add
iret
into
popf
das
(bad)
inc
pop
repnz
hlt
icebp
jnp
or
or
and
out
xchg
and
in
push
mov
(bad)
ficom
rol
iret
mov
sbb
fs
adc
jmp
popa
or
(bad)
sbb
(bad)
fdivr
ins
aad
mov
aas
rcr
outs
ficomp
push
cmp
or
fld
mov
cmc
mov
movs
and
add
cmp
sbb
dec
repnz
jecxz
mov
and
ins
mov
or
cwde
into
xchg
ret
setae
mov
iret
sahf
fldenv
mov
or
popf
int
xchg
stos
fcomip
ficomp
iret
cmp
cdq
and
(bad)
das
xchg
jnp
jecxz
pop
pop
push
dec
clc
bound
fwait
push
(bad)
test
adc
add
outs
out
mov
in
test
(bad)
out
or
js
fmul
and
sub
mov
(bad)
and
or
inc
mov
sbb
mov
cli
xor
movs
mov
xor
xor
pop
mov
stos
mov
lods
shl
das
sub
mov
and
shl
sbb
ja
jno
push
addr16
(bad)
mov
pusha
cmp
sar
jp
push
sbb
xor
test
mov
cmc
sub
mov
adc
add
mov
(bad)
mov
mov
outs
sub
iret
aaa
xchg
xor
jno
sbb
ins
imul
xchg
mov
sub
jl
push
popa
popf
jecxz
sar
shl
dec
mov
xor
and
jne
or
mov
(bad)
into
ret
ins
cwde
ins
ja
fs
(bad)
xor
aam
mov
(bad)
ins
or
jae
jecxz
mov
mov
ds
cmp
or
shr
mov
imul
push
in
or
inc
mov
jo
mov
xchg
inc
adc
xor
mov
jo
ins
add
inc
test
push
sbb
and
sbb
mov
push
xchg
test
sahf
hlt
shl
push
xchg
adc
push
out
sub
cmps
jmp
(bad)
adc
in
or
ins
imul
pop
xchg
retf
ins
push
fxam
movs
addr16
inc
(bad)
in
jbe
mov
cmp
add
add
mov
fdivr
mov
push
dec
mov
or
cwde
and
mov
lock
lods
adc
jp
xchg
imul
icebp
inc
ret
imul
mov
pop
push
push
dec
mov
sbb
mov
in
or
push
pop
in
in
jno
jns
adc
ss
xchg
cmp
enter
pushf
sbb
add
xchg
dec
add
aaa
dec
push
jo
popf
add
dec
js
dec
or
lods
retf
out
repz
mov
sub
out
xor
adc
stos
stos
retf
xchg
cmps
sbb
outs
scas
cmp
clc
in
sti
jbe
xchg
mov
das
mov
jp
or
(bad)
(bad)
call
adc
mov
inc
xor
stos
pop
xchg
mov
ror
sub
xor
addr16
jmp
popf
sub
jl
retf
xchg
adc
xchg
push
je
inc
adc
xor
pop
or
inc
sbb
jno
test
push
mov
adc
or
int
mov
or
stc
shl
scas
nop
call
test
mov
and
inc
sub
sahf
lock
push
sub
pusha
jecxz
xchg
lods
mov
das
stos
cmp
xchg
and
inc
call
mov
adc
sub
stos
or
mov
jbe
pop
(bad)
sahf
or
and
xor
loopne
inc
adc
mov
sbb
adc
pop
pop
shr
cmc
dec
xchg
push
jno
pop
mov
push
ret
push
sbb
in
mul
dec
push
dec
sub
pop
scas
xor
loop
stos
popf
pop
sub
(bad)
mov
test
mov
rol
retf
ret
(bad)
mov
push
sub
fisub
or
add
test
push
xchg
hlt
xor
ss
inc
imul
push
loopne
or
int
stos
(bad)
sub
loop
fadd
mov
adc
dec
dec
int
inc
jnp
cmp
in
jns
pop
(bad)
test
test
mul
adc
call
adc
(bad)
fld
pop
loopne
fcom
and
mov
inc
xchg
jb
mov
mov
inc
sub
jbe
push
cmp
sbb
add
fsub
not
mov
stc
cwde
adc
call
push
add
ret
xor
xchg
jae
add
sbb
aam
ficom
sub
mov
push
push
xor
idiv
inc
mov
adc
sbb
inc
xchg
mov
xchg
and
ret
aas
pop
mov
cmp
sbb
rcr
aad
pop
push
and
pop
shl
adc
mov
cmps
inc
outs
pop
or
pop
jnp
push
loop
lods
fwait
mov
pop
mov
xchg
jmp
lahf
jb
add
imul
movs
dec
iret
or
cmp
and
les
adc
mov
into
add
fldenv
mov
int
mov
xor
arpl
mov
test
lods
clc
sbb
lods
dec
inc
aaa
inc
into
pop
push
cld
ins
in
inc
gs
pop
rcl
sub
inc
cs
loopne
mov
sbb
pop
pop
not
mov
fdivr
mov
stos
popa
pop
mov
xchg
test
and
test
jb
inc
jge
add
jo
xchg
daa
(bad)
cmps
int
hlt
adc
loopne
push
add
aas
sbb
dec
fstp
push
add
rcl
push
pop
popf
hlt
lods
xor
nop
or
(bad)
fsub
mov
test
adc
mov
out
daa
ja
clc
stos
aam
pop
or
lods
rcr
retf
xor
in
sub
into
int3
pop
jae
adc
jmp
sbb
pop
push
daa
or
ins
jecxz
sub
mov
(bad)
sbb
repz
inc
and
push
xchg
add
xlat
cmp
mov
pop
popf
or
mov
pmulhuw
mov
int
iret
adc
ja
dec
dec
add
pop
jnp
lea
fiadd
aaa
(bad)
jle
outs
xor
sub
out
dec
aam
xor
fmul
jmp
sub
push
(bad)
inc
push
dec
es
xchg
mov
sbb
cmps
mov
loope
dec
cmc
cld
fldcw
inc
xchg
mov
pop
bound
fdivrp
dec
xchg
pop
xchg
jmp
aaa
retf
sahf
and
sbb
fidiv
pop
mov
cld
jae
out
js
or
mov
and
jnp
inc
out
std
daa
jle
add
push
sar
add
pop
sti
mov
mov
out
push
mov
ja
into
mov
cmps
dec
inc
into
xchg
(bad)
cli
movs
lea
scas
pop
ds
fistp
dec
imul
ins
lods
call
ret
pop
adc
add
cld
cli
jmp
fs
xlat
(bad)
test
sub
fcmovu
cmp
(bad)
sub
shl
and
das
inc
stos
sbb
xchg
neg
add
scas
or
scas
push
mov
sbb
lds
adc
cdq
sbb
outs
dec
scas
push
push
jecxz
adc
mov
mov
pop
jne
gs
pop
mov
cmps
mov
sahf
pop
fcom
stos
inc
into
dec
jo
arpl
dec
jno
(bad)
mov
adc
shl
xor
sahf
push
into
loop
loope
mov
mov
addr16
jno
sbb
inc
imul
icebp
(bad)
mov
cdq
js
mov
leave
pusha
dec
(bad)
fist
inc
les
(bad)
mov
cli
xchg
push
mov
or
add
xor
popa
mov
cwde
xchg
daa
repnz
fstp
test
add
push
mov
and
or
test
pop
scas
call
popf
repnz
xchg
lods
add
mov
add
mov
xchg
data16
pop
mov
fistp
shl
es
or
adc
and
fdivr
mov
retf
aas
icebp
fisttp
adc
xor
(bad)
mov
call
jp
out
sahf
test
jb
mov
icebp
(bad)
mov
mov
cmc
sbb
mov
jg
aas
lods
add
sbb
std
dec
xchg
inc
sub
push
scas
and
gs
sub
loope
mov
or
mov
adc
and
push
aaa
push
cmp
xchg
stc
(bad)
push
in
scas
leave
dec
mov
mov
cwde
jo
inc
sub
icebp
xor
test
aam
cmps
enter
xor
xor
out
mov
aam
data16
pop
push
or
adc
pop
loop
xor
outs
inc
mov
ret
shl
cmps
sub
sbb
dec
std
scas
dec
or
dec
movs
std
enter
(bad)
pop
sar
or
sbb
push
cwde
aaa
imul
fwait
aaa
test
adc
push
ret
jae
push
es
imul
pop
adc
xlat
adc
loope
jnp
mov
jmp
imul
cmp
repnz
jle
stos
in
mov
mov
inc
outs
test
scas
pusha
(bad)
add
pop
push
cmc
enter
and
mov
nop
push
jo
sbb
jge
shr
out
add
dec
jo
pop
inc
jp
dec
and
sub
fidiv
xchg
pushaw
push
std
fidiv
pop
cmp
pusha
cmp
es
cmp
xchg
icebp
call
loope
xor
dec
mov
ror
pop
shl
ret
mov
je
jns
cmp
cmp
adc
popf
cs
xchg
and
(bad)
xor
je
pusha
cwde
cli
es
or
popa
mov
or
aam
add
cmp
add
fidivr
push
sub
lds
cmps
mov
test
fst
mov
(bad)
fnsave
and
int
pop
lds
push
adc
imul
dec
call
movs
or
xor
sbb
(bad)
(bad)
pop
cmp
enter
(bad)
or
js
outs
std
pop
fwait
aas
es
or
adc
rsqrtps
adc
mov
in
lods
test
dec
and
xchg
jb
ja
sbb
sub
ins
push
add
ror
stos
mov
pop
inc
out
xor
jo
or
add
mov
and
stc
scas
jl
push
add
pop
jae
pop
add
and
jg
xor
mov
popf
retf
mov
dec
push
arpl
xor
mov
xchg
fs
(bad)
sbb
xor
outs
mov
push
loope
add
gs
sub
dec
sar
mov
dec
cmc
dec
push
jge
loope
dec
ret
out
(bad)
lods
add
jae
pop
lea
push
sti
stos
scas
and
(bad)
leave
sbb
cmp
xor
(bad)
out
repnz
mov
inc
sbb
popa
call
push
imul
fmul
inc
adc
sbb
test
outs
daa
aam
ret
nop
sub
or
xchg
aaa
xor
cld
xor
push
push
(bad)
sti
(bad)
push
movs
aad
cmps
xchg
(bad)
int
sbb
test
dec
test
hlt
les
aaa
sbb
outs
ror
pop
adc
jmp
in
fwait
or
icebp
mov
inc
pop
in
fdivr
call
cmp
and
dec
loope
dec
and
sub
sbb
jmp
jge
push
xor
add
sbb
xchg
adc
mov
sub
fidivr
test
(bad)
fist
dec
mov
lods
imul
ret
outs
(bad)
adc
(bad)
fs
rol
and
mov
call
iret
and
rol
enter
sahf
cmp
fwait
or
das
jno
sbb
dec
loopne
push
mov
push
inc
sbb
and
add
inc
jae
stos
sahf
add
push
ss
lds
push
xor
out
mov
movs
lds
jecxz
xchg
or
cmp
lock
jbe
mov
cld
fmul
push
sar
xchg
test
inc
fs
sbb
xor
fidiv
pop
or
xlat
inc
cmc
ins
pop
mov
leave
push
adc
ins
aas
push
idiv
fldcw
callw
aam
add
pop
fcmove
pop
mov
cs
xchg
retf
out
xchg
and
pop
aam
daa
(bad)
sti
inc
mov
cmp
cmp
jbe
xchg
mov
sbb
mov
sbb
xchg
mov
aad
sub
stc
mov
pop
(bad)
sub
dec
push
das
clc
out
jmp
stos
pushf
inc
pop
push
imul
dec
xor
dec
push
mov
xor
push
xlat
out
enter
sbb
rcl
repnz
je
xchg
movs
dec
cmp
or
mov
jb
mov
add
clc
dec
adc
add
addr16
in
jno
ins
sub
movs
mov
or
out
xlat
mov
push
test
jnp
inc
int3
retf
mov
clc
xor
jbe
das
fcomi
add
sbb
add
xor
test
out
movs
jmp
mov
pop
hlt
dec
pop
addr16
lds
mov
pop
push
push
or
fsubr
cmp
xor
fisttp
mov
repnz
repnz
ret
mov
or
push
repnz
popf
mov
and
mov
add
(bad)
mov
or
jl
mov
stos
rcr
je
mov
addr16
retf
mov
dec
call
inc
std
mov
fisttp
and
mov
in
push
pop
(bad)
pop
adc
fstp
imul
int
pusha
pop
pop
repnz
imul
xor
fcomp
out
jnp
mov
aad
(bad)
fneni(8087
jmp
sub
jnp
outs
fdivr
pop
jle
enter
imul
rcl
iret
daa
sysret
cld
scas
cmp
cld
mov
xchg
stos
or
stos
cmps
push
cs
movs
add
xor
fdiv
(bad)
xchg
dec
jns
enter
xchg
and
in
les
pop
popa
outs
hlt
push
pop
push
jo
adc
dec
cmp
mov
mov
enter
cmp
outs
sub
out
push
loopne
sub
sbb
fwait
in
movs
dec
enter
pushf
xchg
add
std
pusha
add
mov
cmp
adc
sti
out
and
fs
xor
mov
test
test
retf
sbb
xchg
cmps
sub
fistp
push
ja
pop
push
xlat
dec
loope
fcmovnu
inc
call
les
mov
add
mov
add
leave
and
sub
push
popf
sub
mov
sahf
dec
push
push
or
bound
es
jo
sbb
mov
push
lahf
stos
dec
lock
add
gs
je
cli
loope
add
pop
jge
js
xchg
mov
cmp
idiv
and
(bad)
idiv
adc
leave
cld
adc
aad
imul
inc
jg
lock
movs
push
jmp
mov
dec
sub
jo
cmp
xor
popfw
xor
pop
cmp
scas
dec
xchg
dec
mov
dec
mov
and
jp
xchg
pop
add
pop
mov
push
adc
fldcw
cli
cmp
not
call
inc
(bad)
dec
push
adc
(bad)
sbb
dec
dec
xchg
clc
movs
xchg
aam
addr16
nop
sub
les
xchg
arpl
jb
mov
fdiv
mov
cwde
push
into
scas
jp
pop
push
mov
cmp
jle
inc
cmps
cmps
add
mov
fild
add
mov
fisttp
scas
or
ins
mov
inc
cld
and
je
mov
imul
cdq
xor
bound
aam
js
loop
(bad)
ins
mov
ret
lea
shr
jmp
ja
test
popa
iret
into
pop
mov
adc
jmp
cmp
xchg
stc
dec
loopne
sbb
imul
lods
push
mov
add
dec
outs
(bad)
add
mov
sub
pop
adc
mov
pop
sub
ret
call
xchg
sbb
push
xor
vhsubpd
lock
xchg
push
fadd
ret
(bad)
cdq
cwde
cmp
jg
call
jne
fucomi
movs
imul
mov
xor
jb
sbb
xor
popf
mov
in
fld
das
nop
gs
int3
ja
push
xchg
in
add
mov
push
pop
imul
mov
lahf
loope
cmp
mov
imul
je
loop
jmp
ret
cld
mov
pusha
mov
xchg
pop
xchg
inc
shl
and
mov
add
xor
or
push
xor
aad
es
adc
retf
inc
pop
push
mov
int
sub
fdiv
les
pop
jne
aam
jmp
mov
int3
out
call
mov
vpunpcklwd
mov
mov
and
jns
mov
pop
test
or
or
push
neg
dec
and
cmp
retf
xor
(bad)
jmp
retf
stos
std
sub
sub
stc
and
sub
cmp
das
ins
sub
mov
aad
outs
nop
dec
xchg
in
mov
or
inc
pop
rol
push
lahf
mov
in
pop
fxch
inc
pop
mov
inc
cld
dec
inc
xchg
popa
pop
fisubr
call
aas
jns
mov
punpckhdq
ficom
xchg
or
in
push
clc
adc
adc
or
jno
xchg
xchg
or
call
mov
cmp
(bad)
cld
mov
aam
sbb
jbe
lds
cmp
sub
cld
psrld
scas
bound
xor
daa
cmp
stos
dec
push
cli
add
fstp
mul
test
addr16
mov
call
adc
out
retf
sbb
(bad)
aad
ds
jl
les
data16
add
dec
mov
mov
pop
repz
mov
jmp
out
mov
shl
and
mov
bound
lods
dec
shr
adc
or
push
dec
imul
inc
in
push
adc
xor
ins
pop
mov
cmp
add
or
add
sahf
or
lock
das
mov
xchg
mul
ret
hlt
inc
movs
xchg
pop
mov
loopne
clc
inc
or
push
jne
cs
iret
xchg
push
mov
and
cmps
cmp
pop
and
fwait
out
or
iret
(bad)
ins
repz
rol
repnz
aaa
pushf
mov
jg
jnp
out
sub
les
xor
test
pop
cld
jb
dec
add
dec
fstp
adc
je
loope
xchg
jbe
(bad)
jecxz
inc
pushf
push
mov
test
out
dec
fs
jo
bound
mov
ins
pop
xor
jbe
dec
and
adc
cmp
fild
outs
or
mov
lds
retf
xchg
push
aad
outs
outs
sbb
xor
or
test
cmovg
add
mov
xor
adc
pop
sbb
dec
mov
loope
(bad)
xor
xor
and
mov
inc
js
cmp
and
sbb
das
outs
bound
pop
in
mov
(bad)
repz
lods
add
int3
jmp
mov
xor
lods
mov
inc
push
mov
rcr
inc
sbb
pop
les
mov
sti
adc
movs
inc
dec
adc
and
xor
add
lock
and
push
push
pop
jmp
mov
push
arpl
loop
lahf
pop
arpl
(bad)
push
xor
sub
mov
xchg
xlat
and
ins
and
pop
push
xchg
inc
or
mov
push
and
add
pop
pop
mov
stc
dec
mov
enter
dec
icebp
mov
xor
js
in
ins
std
jns
jg
xor
xor
mov
sti
push
or
popa
adc
rcr
jg
cmp
inc
cmc
sub
jl
loopne
outs
inc
inc
xchg
cs
cdq
pop
mov
xchg
call
call
fsub
inc
popf
jmp
lds
cmp
in
in
adc
pop
aam
inc
adc
xor
dec
jns
ins
xchg
sahf
loop
mov
mov
sti
or
das
adc
add
arpl
cs
dec
and
inc
or
mov
inc
fwait
and
in
adc
(bad)
xchg
xadd
cmp
and
sbb
movs
nop
pop
xlat
cmp
std
cmp
(bad)
cmp
ja
xor
xor
pop
adc
sbb
dec
(bad)
jmp
(bad)
daa
ficomp
ss
cmp
jl
(bad)
out
call
xor
repz
mov
or
(bad)
aas
dec
inc
jo
pop
(bad)
call
jl
ss
pop
enter
in
add
mov
xchg
scas
inc
mov
and
pop
push
adc
adc
mov
or
(bad)
cmc
inc
fs
call
in
cmp
sbb
mov
fbstp
cmp
cld
retf
cmp
sub
cdq
rcl
or
push
inc
xlat
mov
lock
cmp
data16
push
hlt
mov
lods
call
fisubr
jnp
dec
jle
dec
xor
pop
mov
(bad)
ret
pop
outs
(bad)
inc
jge
jecxz
out
xchg
lock
cs
ins
pop
(bad)
fdiv
or
pop
into
cmc
add
add
out
test
fadd
xor
out
ss
ss
or
cmp
std
mov
and
adc
dec
xor
faddp
jp
pop
mov
ret
pop
retf
call
jge
or
xchg
cmp
rcr
cmps
or
loope
mov
fcmovb
out
imul
or
dec
and
cmc
ins
clc
and
retf
and
jbe
xor
stos
jmp
push
jmp
push
and
sar
adc
gs
add
scas
or
jg
lea
cmp
mov
mov
ins
mov
retf
arpl
mov
ret
dec
popf
xor
sbb
les
fwait
repz
out
adc
stos
push
or
aaa
fist
xchg
data16
int
and
push
jl
pop
mov
ficomp
or
cmps
xchg
lahf
sub
or
pop
out
xor
inc
sbb
sub
iret
mov
(bad)
ja
push
add
icebp
fst
into
or
mov
dec
sti
mov
jl
arpl
mov
add
jo
push
loope
rcr
xchg
mov
pusha
hlt
aaa
outs
je
mov
mov
imul
push
into
mov
mov
sbb
rcl
shr
mul
add
mov
xchg
inc
movs
ins
and
call
aas
neg
xchg
cmp
(bad)
popa
pop
mov
xchg
dec
out
jmp
pop
outs
fist
(bad)
mov
daa
pop
jb
mov
jne
or
mov
fs
ss
add
sub
icebp
sbb
jnp
mov
push
jmp
adc
sub
cmp
pop
cli
js
cmps
loope
and
(bad)
sub
fwait
call
sbb
call
cmp
cmp
cld
and
aas
mov
loope
mov
jno
cmp
std
pop
popa
and
sbb
add
jecxz
(bad)
xor
sbb
push
push
jns
inc
popa
add
or
xchg
(bad)
loop
fld
cs
not
xor
push
sti
mov
dec
inc
je
push
xchg
pop
push
(bad)
xor
xchg
call
fidiv
inc
cmp
mov
(bad)
sbb
xchg
sbb
cdq
aas
cmps
push
mov
sub
or
mov
push
fist
(bad)
out
sbb
add
les
sti
sub
cmp
mov
es
pop
call
mov
cmps
sbb
fnstsw
xchg
mov
jmp
dec
jmp
inc
lock
into
ss
adc
iret
out
xor
shl
hlt
out
popf
bound
mov
rcl
pop
xor
and
push
fs
push
in
ja
push
repnz
movs
push
xchg
ss
stos
xlat
repz
push
icebp
mov
shl
fidiv
jb
sbb
sbb
(bad)
mov
adc
retf
call
sbb
pushf
pusha
out
ins
adc
cmc
cmc
ja
cwde
sti
(bad)
leave
call
test
(bad)
cmp
clc
adc
pop
into
gs
aam
xor
and
dec
jmp
fnstsw
out
cwde
sbb
pop
wrmsr
inc
xor
xor
xor
or
jb
test
jg
mov
icebp
stos
fwait
popf
js
fsubr
les
xor
cmp
shl
sbb
push
jmp
mov
pop
sub
mov
mov
sub
push
(bad)
xor
xchg
scas
jae
loop
push
(bad)
push
dec
xadd
pop
push
test
xchg
fmul
inc
jg
dec
xor
jle
ja
sub
cs
push
mov
jl
xor
mov
clc
xor
daa
(bad)
int3
mov
inc
(bad)
mov
ja
adc
dec
or
jns
inc
aaa
sub
clc
retf
out
push
mov
xchg
loope
repz
les
mov
push
imul
push
sub
push
xor
xchg
fisub
sub
icebp
add
mov
or
outs
mov
and
sbb
or
mov
inc
mov
hlt
xor
mov
retf
jmp
into
inc
jg
cmp
or
xchg
xor
ds
outs
xchg
xor
sub
or
jmp
movs
ficomp
retf
and
pushf
stos
and
pop
push
lds
imul
(bad)
stos
out
loop
rol
xor
mov
out
push
add
dec
sbb
cmp
iret
add
mov
cld
test
cli
mov
daa
cs
outs
sar
sub
std
sbb
rep
sbb
loope
scas
mov
das
js
jo
(bad)
cs
add
sub
sbb
sar
jg
ror
adc
sub
(bad)
jle
jne
into
mov
push
jmp
popa
sub
sahf
sbb
idiv
sub
cld
std
ret
mov
push
(bad)
stc
pop
in
clc
pop
loop
imul
xlat
in
ret
push
imul
mov
rcl
mov
mov
enter
pop
pop
gs
xchg
scas
leave
mov
inc
push
cmp
xchg
jge
inc
add
cs
les
stos
sub
dec
add
outs
in
lods
sbb
data16
inc
mov
xor
mov
call
sbb
rep
dec
sub
retf
mov
idiv
sar
movs
scas
xor
xchg
popa
cmc
inc
jle
ins
or
mov
or
iret
push
sbb
lea
xchg
cmp
push
mov
cli
cld
dec
sub
pop
pop
imul
or
test
jle
jmp
pop
jge
mov
in
(bad)
ins
imul
jne
add
jmp
adc
mov
hlt
lock
call
ss
add
jge
clc
jmp
sub
movs
inc
cld
adc
xchg
adc
ffreep
fdivr
out
outs
xor
adc
(bad)
scas
jns
data16
out
push
ret
loopne
lock
scas
test
xchg
aam
ret
(bad)
(bad)
jbe
inc
mov
shl
sbb
into
jae
iret
daa
(bad)
(bad)
mov
xchg
sbb
int
mov
mov
push
stc
or
out
pop
addr16
add
jnp
test
pop
outs
repz
mov
in
shr
cmp
lahf
jne
repnz
dec
loopne
test
sbb
pop
shr
outs
dec
dec
mov
dec
loop
sub
les
aam
xor
mov
stos
jmp
gs
ficom
fist
arpl
fistp
sub
dec
adc
dec
add
icebp
movs
out
test
pop
idiv
add
xchg
inc
fwait
aam
mov
loopne
sbb
jae
adc
ror
xchg
push
sar
dec
mov
in
loop
cmp
or
and
push
jmp
mov
push
in
mov
scas
mov
pop
mov
xor
dec
dec
mov
cmp
(bad)
add
mov
mov
dec
or
xchg
mov
sbb
add
pop
out
movs
pop
mov
dec
mov
sub
pop
push
fdivr
les
push
cwde
arpl
mov
movs
shl
sub
and
and
mov
inc
add
test
aad
fcmovnu
aam
inc
cmp
stos
fwait
imul
mov
mov
(bad)
and
mov
sbb
ror
test
pop
fadd
(bad)
jmp
jge
adc
and
(bad)
cmp
retf
stos
push
stc
jle
mov
sub
lods
lods
push
adc
sub
jns
cmp
or
fild
cmp
mov
pop
inc
out
sbb
inc
xchg
mov
mov
es
scas
in
mov
dec
push
retf
ss
jmp
xor
outs
xchg
test
xchg
clc
daa
in
movs
push
lds
call
pop
ins
push
jb
or
imul
dec
rcr
rcl
xchg
outs
mov
push
nop
ds
lock
test
lahf
fsub
fucomip
test
inc
xchg
pop
xor
inc
int3
push
or
iret
xor
(bad)
loopne
cmp
or
outs
fisttp
or
repnz
fbld
push
pop
outs
mov
ss
mov
pop
fdivr
shl
aas
ret
and
dec
push
adc
dec
mov
push
shr
mov
push
cmp
out
scas
ret
pop
adc
push
push
clc
fmul
or
mov
mov
mov
adc
mov
cmc
xchg
in
push
test
lock
mov
sub
pop
loope
outs
shr
pop
nop
(bad)
je
xchg
lods
aad
aam
sbb
retf
or
sbb
or
test
mov
xor
ja
mov
stos
out
and
add
mov
push
adc
fwait
lods
push
out
outs
pop
popf
outs
or
lods
mov
sub
adc
mov
cmps
(bad)
jmp
push
add
adc
mov
call
mov
loope
adc
sti
xchg
mov
xor
pop
cmp
addr16
push
xor
fs
mov
or
mov
cmp
ret
fsub
dec
loop
outs
mov
mov
repz
ins
clc
jecxz
stc
outs
icebp
mov
lahf
jmp
fisub
sbb
fcmove
push
(bad)
enter
daa
jb
jo
xchg
xor
pop
test
push
call
push
jo
inc
aaa
leave
cmps
push
popf
jmp
xor
adc
dec
gs
rcr
push
add
lods
fmul
popa
jp
es
aas
popa
mov
add
test
push
rcl
pop
inc
ret
adc
add
cmps
push
or
pop
outs
sub
pop
adc
sbb
iret
xor
es
jmp
mov
xor
pop
in
clc
aam
movs
push
ret
sub
iret
(bad)
xor
outs
bound
mov
imul
adc
xchg
test
or
jge
sahf
shr
push
stc
push
pop
cld
adc
lods
jle
cmps
or
(bad)
sub
je
pop
into
xchg
jmp
dec
add
cmp
clc
addr16
mov
loop
mov
push
inc
mov
das
add
ret
leave
test
xor
or
out
mov
and
adc
inc
ds
mov
mov
ss
jl
lea
arpl
pop
and
xor
sub
cmp
mov
stos
sti
pop
sub
xchg
in
jmp
add
sbb
sbb
xlat
dec
xchg
call
outs
(bad)
out
call
test
xchg
mov
xchg
movs
lods
xor
mov
mov
imul
adc
cld
sti
ins
xor
in
stos
ss
jmp
push
fcomp
inc
call
jl
xchg
or
repz
ror
arpl
cmp
jmp
ror
cmc
jb
dec
dec
(bad)
fldenv
xor
sub
out
fcomp
(bad)
cmps
test
mov
lock
inc
hlt
mov
test
cli
jg
xlat
(bad)
pop
les
retf
sub
add
inc
inc
out
xlat
push
popf
gs
add
ret
cld
adc
jl
in
jnp
dec
out
fstp
pushf
xlat
jnp
scas
xchg
ss
je
mov
fimul
mov
or
test
in
dec
sbb
test
fcom
mov
les
cmp
sahf
sbb
xchg
jns
inc
jmp
das
push
inc
int3
cmp
pop
or
mov
mov
add
jecxz
icebp
(bad)
jecxz
movq
es
inc
mov
fld
push
mul
mov
lds
sbb
jge
push
or
add
push
and
pusha
or
cmps
scas
scas
in
stc
mov
(bad)
enter
cli
dec
mov
dec
test
movs
mov
cmp
jne
inc
sub
push
mov
mov
shl
add
in
cmps
jnp
sub
loop
inc
ja
fisub
fld
jl
sbb
test
sub
mov
test
jmp
shl
push
mov
sbb
sbb
into
daa
(bad)
jnp
lods
inc
lea
es
ins
sbb
(bad)
into
dec
push
sub
in
arpl
stos
sbb
jle
sub
fisttp
jecxz
push
repz
addr16
fadd
dec
xor
cs
lea
(bad)
retf
leave
jge
sub
cmp
ins
mov
std
cdq
xchg
arpl
xchg
mov
jle
sbb
daa
push
shl
retf
rcr
aaa
xlat
rol
mov
push
mov
das
add
and
jle
shl
outs
or
xor
jmp
sbb
adc
xchg
xor
sbb
int3
inc
dec
mov
repnz
adc
inc
iret
scas
adc
(bad)
gs
xchg
jne
test
clc
je
repnz
add
outs
cmp
in
jl
mov
mov
and
xchg
pop
cmp
out
cmps
xchg
sub
sbb
das
xchg
xor
and
shl
aam
stc
aad
adc
test
mov
loop
es
mov
es
or
jecxz
mov
jns
sbb
div
mov
push
mov
pop
sub
dec
jns
sbb
xlat
xchg
lahf
test
and
clc
retf
xchg
pop
aaa
test
movs
clc
fistp
mov
mov
add
push
sti
lods
int3
xor
xor
mov
jmp
jmp
not
jmp
adc
cmps
or
sbb
xor
aaa
clc
mov
jg
push
cmp
fidiv
movs
jbe
sub
jnp
or
sub
push
stos
xchg
push
push
jo
mov
dec
mov
stos
data16
pusha
jecxz
jns
mov
inc
sub
dec
jmp
and
into
jl
mov
inc
aam
push
mov
cli
mov
shl
push
cmp
popa
sar
leave
inc
stc
mov
addr16
push
jmp
push
leave
shr
or
jae
repnz
mov
pop
inc
cmp
out
jmp
ins
cmps
fcmovnu
pop
fcomp
das
adc
loope
retf
es
retf
adc
sbb
inc
call
sub
rcl
mov
pop
mov
cs
add
jae
aam
rcr
or
add
push
mov
mov
cli
setp
xor
add
adc
xchg
stos
int
mov
adc
cdq
push
dec
retf
fmul
and
push
(bad)
cmp
or
add
out
push
xor
ror
aam
inc
xchg
retf
sbb
jno
and
or
push
in
mov
adc
sar
add
sub
clc
(bad)
popf
add
(bad)
push
jbe
push
cmp
aam
xchg
cmps
sbb
push
xor
push
dec
in
xchg
lock
clc
in
test
ins
mov
in
jmp
mov
std
fsubr
xchg
add
pop
inc
cmp
push
and
repnz
pusha
js
(bad)
jbe
test
test
js
jg
imul
sub
je
push
retf
fst
ret
fistp
push
mov
(bad)
cld
cmp
fadd
(bad)
icebp
jmp
adc
sbb
dec
popf
dec
mov
xor
cmp
rcl
leave
mov
add
hlt
sti
inc
cmp
mov
(bad)
pop
push
(bad)
stos
jne
icebp
icebp
or
and
in
sbb
mov
push
inc
or
outs
nop
sub
je
arpl
or
cmp
jecxz
adc
jne
xlat
ret
call
mov
jmp
movs
cs
daa
les
mov
jp
test
adc
jbe
mov
mov
pop
mov
and
push
sahf
sar
popa
loopne
jge
add
out
mov
lea
(bad)
scas
jmp
aas
xor
shr
retf
gs
in
mov
adc
xchg
dec
je
repz
cli
push
xor
inc
jmp
adc
pusha
cld
jnp
cs
xchg
mov
out
inc
mov
clc
xor
ret
mov
xor
push
mov
test
loope
pop
int3
dec
out
ret
(bad)
dec
mov
add
mov
pushf
lods
dec
mov
mov
aam
inc
adc
imul
jbe
pop
out
jmp
and
aas
jo
mov
out
sbb
cmp
popa
inc
data16
cmp
xchg
dec
or
jmp
stos
jno
mov
cdq
cmp
inc
out
popf
je
sub
or
jae
fcomp
pop
fidivr
mov
mov
and
mov
pop
(bad)
retf
xchg
fwait
rcr
repnz
shl
bound
loope
in
enter
fs
fld
cmps
shl
cmp
mov
test
loopne
xchg
(bad)
jecxz
mul
je
test
and
cmp
push
push
dec
jp
xlat
and
retfw
nop
icebp
mov
xchg
je
or
hlt
push
xlat
(bad)
add
cmp
mov
clc
cli
(bad)
ss
mov
or
sbb
mov
ror
outs
inc
(bad)
call
mov
js
test
ret
dec
(bad)
(bad)
cmp
push
jo
aad
in
cli
repnz
hlt
add
loopne
popf
fild
lahf
dec
test
or
xor
call
mov
in
cs
sbb
push
jb
mov
xlat
mov
dec
mov
in
pop
inc
pop
mov
and
inc
ficomp
mov
xchg
add
test
jns
ss
and
je
jo
sbb
das
fwait
cli
das
push
aam
sub
adc
ds
inc
cmp
cld
dec
sub
mov
or
push
inc
dec
adc
and
cli
push
push
inc
shl
push
movs
js
xchg
xchg
inc
lahf
mov
push
mov
cli
xchg
mov
aam
ret
out
rcl
cmp
xchg
imul
dec
sub
jb
and
sbb
add
(bad)
fcom
add
repz
pop
push
dec
inc
punpcklwd
loop
xor
sub
sub
movs
cmp
xchg
iret
out
fistp
add
popa
scas
dec
das
jae
call
(bad)
xchg
mov
xor
mov
and
jae
pop
sub
mov
and
int3
adc
sub
ins
push
jne
mov
xlat
mov
or
mov
mov
push
adc
mov
stos
xchg
sub
sbb
jmp
jp
jmp
add
ud0
ja
fistp
(bad)
push
std
or
int
dec
xchg
sbb
mov
add
mov
int3
popf
push
mov
sbb
ds
adc
mov
idiv
xlat
ret
ss
or
mov
push
jge
pusha
xor
cs
pusha
cdq
outs
pop
mov
inc
push
push
jle
mov
push
jle
sub
or
mov
push
xchg
in
jle
inc
fld
int3
adc
fst
dec
sbb
dec
jne
dec
dec
jns
cmc
adc
ret
test
loope
call
loop
push
ret
aam
fsubr
xchg
jl
xor
mov
or
pushf
push
call
jmp
call
ret
sbb
sub
xchg
punpcklbw
imul
push
inc
daa
cli
std
dec
or
push
pop
call
jae
bound
popf
jl
push
add
jne
in
adc
call
sbb
jns
sbb
dec
setb
stc
test
cli
retf
cdq
cmps
outs
xchg
inc
pusha
adc
es
mov
mov
(bad)
lahf
add
xchg
jno
imul
leave
mov
add
(bad)
jp
adc
and
mov
pushf
inc
das
in
rol
pushfw
call
and
jle
aad
mov
fs
shr
movs
fs
jb
adc
aas
sar
and
int
mov
jno
jge
fs
fcmovnb
cmp
mov
mov
inc
rol
xor
push
fwait
cld
inc
in
repz
adc
push
je
aaa
mov
xchg
out
sbb
rcr
dec
jno
retf
adc
xor
cmp
fidivr
(bad)
aad
stos
jl
pop
xchg
rol
neg
jno
ins
mov
push
mov
aad
push
cld
xchg
ds
xchg
mul
or
sbb
adc
jp
cmc
xor
aaa
lock
scas
out
cli
icebp
inc
add
jmp
inc
aaa
popf
out
inc
sar
mov
(bad)
ds
cli
mov
xor
xchg
mov
or
(bad)
xchg
popa
jo
imul
adc
jl
pop
inc
ds
(bad)
fild
enter
sub
in
jl
div
push
pop
outs
or
shr
mov
sbb
sub
loopne
popf
sub
mov
push
adc
dec
setl
xchg
lea
push
dec
sar
sub
ss
sub
cmp
cmps
or
adc
and
pop
into
cwde
lods
fld
popa
fnstenv
pop
xor
and
retf
xchg
repnz
int
pusha
iret
and
pop
mov
and
mov
jle
pop
mov
cmc
aad
pop
clc
je
out
outs
xchg
cmp
sub
pop
push
dec
cmps
jecxz
xchg
push
lock
jmp
and
fdivr
jae
je
push
add
mov
push
jne
(bad)
adc
jb
sub
fwait
add
test
sbb
pop
inc
out
sub
mov
sbb
push
test
xor
fild
jle
and
add
test
repz
lods
jne
cdq
pop
xchg
loopne
mov
push
push
stos
add
ror
add
mov
hlt
aam
mov
nop
mov
xchg
lods
nop
sbb
loop
aas
cld
add
mov
in
mov
nop
ss
jno
cmp
pop
and
dec
jge
lock
retf
dec
pushf
ja
dec
fisttp
inc
mov
mov
fwait
sbb
sbb
mov
iret
std
cmp
dec
fisttp
jmp
jp
sub
fcomp
retf
inc
xchg
das
push
pop
mov
aad
inc
out
out
fsub
mov
ins
std
test
pushf
mov
cwde
mov
pop
add
pop
xor
nop
imul
lods
arpl
mov
sbb
repz
add
jmp
mov
bound
mov
es
pop
dec
jl
das
rcl
(bad)
mov
das
mov
sub
dec
cmp
mov
sbb
retf
mov
add
sub
and
cmp
ja
xchg
repz
sub
xor
imul
dec
call
in
pop
aas
jno
pop
scas
pop
fild
test
pop
mov
cmp
ja
addr16
gs
cli
loope
add
bnd
dec
addr16
rcr
pop
nop
call
xor
adc
jmp
add
pop
mov
les
out
out
mov
fadd
in
xchg
xchg
sar
adc
or
mov
inc
pop
pop
sbb
mov
adc
or
retf
push
retf
dec
and
add
or
mov
outs
cld
pop
loope
mov
mov
daa
retf
add
(bad)
(bad)
xor
jl
cmp
repz
pop
xchg
cwde
sti
jne
push
cmps
add
push
cmps
dec
pusha
mov
mov
bswap
push
clc
pop
popf
sahf
jae
fwait
mov
add
jmp
xchg
rol
add
add
cwde
popa
or
js
jmp
fnsave
mov
mov
push
push
dec
inc
and
xor
mov
sub
mov
inc
jbe
ror
sub
stos
push
call
scas
mov
ror
xor
add
push
jle
fstp
inc
xor
test
imul
add
mov
xchg
out
test
data16
and
sub
jno
lods
mov
xor
or
push
mov
mov
mov
pop
push
(bad)
enter
jno
adc
inc
(bad)
sub
aas
cdq
in
data16
inc
jno
aam
leave
add
scas
jl
fimul
aam
cmps
adc
shr
push
jge
popf
lock
je
test
shr
loope
xchg
mov
repz
push
push
imul
adc
adc
lea
and
adc
mov
inc
lods
call
xchg
xor
clc
and
sub
gs
jl
push
lahf
fldenv
inc
xchg
retf
jo
stos
jmp
(bad)
fbld
add
bound
aad
ret
xchg
loop
outs
js
test
enter
mul
mov
call
dec
push
dec
sbb
rcl
aam
aaa
sbb
jle
retf
out
push
leave
or
ret
aas
fyl2xp1
out
inc
in
mov
adc
mov
rcl
les
jnp
pop
(bad)
add
xor
pop
psubsw
cs
into
call
fwait
pop
nop
das
std
and
cmps
xor
sysenter
or
sub
sbb
out
add
shr
ror
js
adc
xchg
in
adc
test
in
pop
push
aam
inc
ins
fucomi
enter
cld
hlt
in
rcr
icebp
arpl
cmp
or
ret
retf
jns
push
call
imul
pop
aaa
sub
(bad)
fwait
ds
in
add
jne
mov
(bad)
push
pop
nop
mov
and
xor
xor
in
cmc
call
cmp
fbstp
xchg
cs
(bad)
loopne
fidiv
mov
(bad)
jne
call
push
dec
fdiv
hlt
hlt
adc
into
cmp
xchg
mov
(bad)
es
mov
xchg
xor
aam
cs
push
adc
(bad)
xor
xchg
push
enter
lods
xchg
popa
jp
inc
push
and
dec
dec
cmp
push
repz
fcomi
adc
mov
mov
into
cmp
adc
push
mov
inc
push
mov
sbb
in
cmp
ficom
cmp
and
fst
xchg
inc
xchg
hlt
loopne
out
rcl
sar
test
hlt
jmp
pop
add
xor
repnz
cmps
or
aaa
sbb
fidivr
push
pop
mov
jp
inc
dec
pop
pop
pop
or
add
dec
mov
(bad)
xchg
in
pop
add
inc
adc
xlat
ret
sar
gs
sbb
inc
mov
mov
mov
add
in
cs
stos
cmp
les
(bad)
int3
inc
cld
retf
stos
retf
jecxz
imul
or
sub
sub
sub
pushf
dec
(bad)
push
and
push
xchg
push
jne
and
adc
or
mov
shl
jmp
mov
mov
scas
loope
arpl
sub
mov
bound
adc
push
cmc
cmp
cmps
retf
inc
jns
clc
js
inc
ds
push
test
xchg
mov
dec
cld
dec
xor
jo
inc
xor
or
(bad)
retf
sub
shl
jmp
rdmsr
lods
mov
adc
lods
stos
and
or
inc
cs
int
sbb
push
fld
data16
imul
xchg
aam
mov
not
cs
rcl
pop
in
stc
addr16
and
inc
adc
adc
mov
add
ficom
sbb
mov
xchg
mov
dec
push
inc
test
mov
jp
mov
or
cmp
jl
adc
inc
jle
daa
sbb
gs
or
and
fist
jmp
pop
fst
js
rcr
pop
xchg
push
dec
rep
test
jnp
fs
nop
in
mov
pushf
int
(bad)
adc
push
sti
mov
call
mov
xor
add
mov
cli
xor
cmp
sbb
movs
imul
stc
mov
cmp
push
adc
xlat
add
cmp
in
adc
jne
push
ja
fisttp
dec
icebp
fs
xor
pop
(bad)
inc
dec
movs
dec
enter
psubq
mov
xor
mov
stos
and
inc
or
cmp
lgs
js
ins
add
inc
es
scas
test
in
lock
loop
mov
xor
push
sbb
ins
inc
(bad)
ins
push
mov
sbb
shr
or
(bad)
and
data16
outs
and
retf
or
inc
push
data16
mov
push
cmps
inc
mov
add
inc
sti
inc
les
xor
iret
jecxz
pop
aas
inc
mov
mov
mov
mov
jnp
add
inc
enter
test
xchg
mov
bound
sbb
pop
fist
ret
dec
fnstcw
clc
mov
jl
adc
shl
out
jp
popf
jne
ja
fisttp
leave
(bad)
mov
jno
or
(bad)
sbb
ds
or
mov
dec
mov
push
push
dec
gs
pop
mov
xchg
jle
jae
lods
adc
dec
int3
inc
sub
sti
scas
jl
and
add
loope
movs
arpl
or
aad
adc
sub
jbe
test
jno
call
out
sbb
lods
sbb
jmp
cmp
sub
inc
outs
stc
popa
retf
mov
popf
jp
add
int
jl
push
or
add
mov
(bad)
fistp
and
loopne
popa
inc
stos
pop
outs
lods
mov
and
mov
in
adc
test
push
push
push
dec
inc
(bad)
push
(bad)
ins
push
nop
add
push
inc
xchg
adc
sub
xor
xchg
dec
or
mov
enter
fdiv
xor
mov
inc
and
push
(bad)
mov
out
and
clc
aad
and
inc
imul
mov
fmul
lods
or
pop
fdivr
out
xchg
jne
ret
push
mov
nop
jmp
mov
adc
or
sbb
fsubr
div
arpl
ret
sbb
dec
cmp
popa
or
retf
int3
jno
pop
rcr
adc
out
int3
das
mov
stos
repz
jbe
and
test
lods
xchg
sbb
jmp
and
iret
xchg
mov
sahf
test
shr
pop
sbb
inc
and
loopne
xchg
ja
ins
int
xor
leave
je
pop
inc
cmps
loopne
shr
or
add
test
mov
mov
pop
jl
shl
shl
cmps
(bad)
into
mov
xchg
or
fs
lods
mov
cmp
std
stos
repnz
mov
mov
ret
leave
adc
jp
fstp
dec
leave
inc
or
sbb
jg
xor
or
cmps
fsub
mov
dec
jnp
mov
dec
ret
inc
sub
loope
inc
addr16
push
jl
xor
ins
xor
push
adc
push
scas
mov
mov
mov
loop
scas
ret
out
push
test
pop
inc
jns
je
xchg
sub
test
xchg
stos
stos
cld
stc
pop
sub
mov
loopne
cmp
clc
add
and
xchg
scas
lahf
into
add
ins
adc
pop
dec
aas
(bad)
int
adc
fistp
xchg
jnp
cwde
add
or
call
pop
stos
(bad)
dec
pop
xchg
scas
jb
not
ins
(bad)
std
xor
pop
sbb
imul
inc
jge
jp
fnsave
test
xor
fmul
mov
sub
xchg
fist
es
cmp
in
dec
xor
xchg
push
retf
xchg
cmp
cmp
dec
popa
or
inc
add
lds
dec
nop
cmc
js
bound
imul
and
xor
push
xor
lahf
mov
dec
push
js
test
adc
sbb
or
sub
pop
xor
add
sti
pop
pop
dec
push
dec
dec
sub
pushf
inc
sub
bound
mov
and
sbb
cdq
adc
and
xor
jle
sar
adc
pop
int3
loop
pusha
mov
arpl
sbb
adc
ss
mov
adc
inc
ss
js
lock
jnp
call
inc
ins
push
repnz
ins
retf
push
inc
sub
rcr
cdq
lea
hlt
mov
xchg
ins
push
sti
fsubr
jle
pop
inc
push
mov
sbb
(bad)
xchg
sub
inc
push
in
(bad)
jb
xchg
les
(bad)
int
stos
and
and
jns
dec
sub
mov
push
add
stos
call
sar
push
and
test
pop
cwde
aam
popa
push
(bad)
jmp
enter
je
psubusw
xor
or
pop
test
push
scas
mov
lods
dec
jle
pop
mov
(bad)
fcomp
adc
pop
lods
cdq
movs
jno
sbb
(bad)
frstor
push
data16
(bad)
sub
(bad)
mov
and
fs
fadd
mov
push
jne
and
int
clc
sub
out
or
mov
in
fs
or
xlat
mov
dec
add
dec
test
lock
(bad)
sahf
mov
call
cwde
push
ins
jnp
adc
and
inc
imul
and
test
pop
test
pop
and
loope
push
pop
stos
(bad)
jge
sub
repz
jbe
idiv
scas
dec
cmps
dec
sub
mov
test
adc
cmp
xchg
call
scas
push
push
div
repz
mov
jl
test
neg
in
aad
mov
in
fcomp
fdivr
int3
pop
jo
test
fmul
inc
mov
pusha
jl
dec
push
cli
pusha
sbb
jge
adc
iret
mul
into
lahf
addr16
imul
jne
mov
cmc
in
hlt
xor
faddp
jne
fsub
lods
cmps
sti
mov
ins
xchg
scas
inc
jmp
xchg
test
inc
scas
push
inc
mov
mov
sahf
xchg
pop
ins
pop
cmp
lock
pop
jl
sub
mov
fadd
stos
(bad)
or
cdq
(bad)
aad
xchg
jmp
out
mov
sar
xor
test
add
in
add
pop
mov
xchg
or
fs
mov
mov
jp
daa
xlat
or
imul
add
fisub
push
or
adc
shl
enter
test
mov
test
test
movs
lods
out
adc
call
sbb
pop
test
xor
hlt
add
dec
stc
mov
pop
mov
fwait
xor
or
adc
icebp
lahf
dec
xchg
push
jae
in
clc
or
ins
push
xchg
and
mov
fiadd
mov
mov
rcr
ret
inc
jnp
xor
in
out
sub
sub
lahf
xchg
js
and
(bad)
sub
stc
jno
jl
cmp
shl
outs
mov
jge
mov
mov
retf
xor
int3
sub
jmp
xlat
sub
lahf
mov
dec
ficom
mov
dec
shr
outs
inc
scas
in
or
mov
cmp
sbb
ret
idiv
push
std
pop
jg
dec
sub
repnz
retf
in
cli
or
rol
push
jno
dec
inc
repz
add
mov
mov
inc
cmp
shl
out
mov
(bad)
stos
fstp
daa
inc
ins
add
mov
not
mov
jnp
leave
pushf
call
iret
pop
sub
pop
adc
dec
and
mov
mov
scas
aaa
jl
test
mov
(bad)
data16
add
ss
ror
push
push
and
jecxz
loop
pusha
iret
dec
out
pushf
pop
(bad)
and
hlt
adc
jno
(bad)
retf
jno
jbe
cmp
pop
mov
mov
inc
pop
and
jmp
in
add
sub
and
movs
mov
jmpw
mov
iret
pop
push
lea
out
stos
add
push
js
xchg
xor
imul
inc
mov
stos
and
jecxz
cmp
and
sbb
ins
pop
or
(bad)
shl
cwde
arpl
scas
pop
ret
repz
rcr
aas
mov
(bad)
xor
clc
and
inc
cmps
sbb
pop
push
enter
nop
scas
sub
inc
arpl
int
and
or
xor
cmp
inc
loopne
ins
aad
stos
mov
popa
test
jnp
arpl
xor
nop
in
data16
popf
xor
push
pusha
pushf
sti
xchg
mov
in
fldenv
cwde
push
cmp
sub
push
rcl
mov
jae
cmp
adc
and
data16
inc
mov
lds
inc
das
mov
ss
pop
int
cmp
int
jae
imul
or
bound
dec
scas
fisttp
xor
dec
mov
(bad)
(bad)
xchg
movs
mov
fnstenv
data16
pop
stos
xlat
and
cmp
add
fimul
mov
xor
int3
bound
xchg
sub
in
jle
or
sar
and
loopne
pop
mov
dec
add
loopne
cli
inc
stc
imul
or
or
and
leave
jo
pop
in
in
jmp
fwait
dec
pop
enter
push
dec
add
jecxz
and
inc
push
jmp
xor
fucom
lahf
call
ret
mov
daa
mov
mov
mov
dec
lds
or
(bad)
jecxz
fild
push
test
out
dec
adc
or
mov
idiv
icebp
cmps
push
lock
sbb
xlat
test
out
mov
jmp
and
popa
repnz
or
sbb
sub
cld
(bad)
dec
add
mov
je
leave
call
fs
std
shl
mov
int
pushf
ret
lods
xlat
clc
push
rcl
fbld
in
movs
ret
cli
pop
xchg
(bad)
mov
mov
dec
mov
adc
in
mov
(bad)
mov
daa
in
mov
shr
xchg
addr16
test
adc
data16
test
dec
dec
pop
jo
repz
js
mov
outs
cmp
out
or
pop
mov
ja
dec
or
mov
outs
sbb
jp
xor
test
shl
stc
or
out
push
fwait
pop
ins
loop
arpl
pop
jge
or
sbb
xchg
add
or
mov
ds
push
pop
adc
cmp
jmp
int
xor
out
jge
call
mov
in
(bad)
pop
mov
(bad)
mov
neg
(bad)
mov
pop
icebp
mov
xor
mov
dec
mov
push
stos
cmc
scas
xchg
in
add
test
jbe
dec
test
mov
xchg
sar
pop
movs
call
jb
repnz
cmp
pop
adc
pop
cli
inc
arpl
nop
xor
cdq
std
xor
sbb
inc
and
ss
jecxz
jno
push
mov
xlat
mov
sub
pop
data16
lods
mov
or
dec
aaa
mov
cmps
pop
je
loope
adc
pop
lods
hlt
pop
fcomp
clc
in
mov
dec
rcl
cmp
ja
mov
test
push
inc
xor
or
sub
(bad)
jl
and
ror
and
jbe
in
adc
xchg
mov
mov
inc
fcom
jle
cmp
dec
scas
fwait
dec
cmp
jae
push
push
xor
pop
mov
call
lods
xor
xor
cmps
xor
sbb
outs
test
xor
out
scas
dec
div
jns
xchg
push
in
xchg
push
mov
adc
inc
hlt
scas
push
jl
scas
or
out
mov
and
sbb
movs
xchg
cmps
outs
push
jb
mul
or
loop
cmp
stos
mov
dec
add
stos
loope
shr
dec
push
sar
and
aas
add
inc
ret
and
lods
test
mov
add
retf
jle
sbb
nop
pop
and
sbb
popf
dec
call
sub
sbb
pop
(bad)
sbb
or
pop
shl
aaa
lods
jnp
and
push
jne
push
neg
dec
sub
bound
pop
aaa
push
pop
aas
dec
jb
lea
fs
push
jge
add
and
sbb
retf
cmp
pop
imul
popf
push
cmps
ins
pushf
shr
aad
inc
inc
scas
(bad)
cmp
sub
icebp
imul
test
pop
adc
lahf
xor
or
pop
or
sbb
in
jnp
pop
mov
mov
call
add
call
lock
imul
adc
popa
cmc
or
fsub
adc
(bad)
out
sub
cli
add
lods
add
call
out
nop
neg
sbb
xchg
dec
addr16
push
sbb
push
arpl
mov
sbb
or
in
adc
imul
test
aam
dec
data16
dec
loope
cmp
imul
stos
out
pop
cmp
jg
cmp
push
(bad)
pop
add
nop
stc
in
mov
hlt
addr16
dec
cmp
les
pop
fisub
push
hlt
mov
xor
mov
pop
cmps
xchg
xchg
jae
push
add
stos
(bad)
add
mov
inc
add
push
jns
loopne
xchg
daa
cmp
sub
dec
push
mov
fld
sbb
std
sahf
mov
lds
test
pop
sub
dec
fstp
add
sub
bound
or
stos
retf
aaa
neg
in
cmc
int
mov
jmp
push
fisttp
inc
iret
cli
or
mov
add
xor
(bad)
cmc
lods
aam
inc
ja
mov
add
cmp
enter
sub
pop
xchg
ins
inc
jae
cmp
imul
xchg
inc
lea
inc
out
xor
fdivrp
sti
in
pop
pop
ss
jae
xchg
xor
or
cmp
aam
mov
xor
cmp
test
cli
dec
fst
sti
in
in
or
jmp
jb
iret
ror
nop
jp
mov
dec
enter
inc
fcomi
jg
lock
mov
cmps
push
cmps
enter
xchg
or
mov
(bad)
out
loop
lods
sub
xchg
cmp
sub
jle
pop
lahf
inc
jg
push
in
jge
in
(bad)
jge
scas
mov
mov
fscale
jp
js
and
rcl
shl
inc
(bad)
jp
dec
shl
popa
in
sbb
aam
sub
jle
sar
ins
mov
test
(bad)
shl
mov
jb
popa
push
out
jnp
fdivr
loope
daa
sub
in
fdiv
mov
sub
adc
iret
sub
daa
and
lods
push
xor
retf
fmul
lock
repz
jns
mov
(bad)
not
mov
(bad)
mov
ja
mov
inc
xor
in
mov
push
or
test
xchg
inc
outs
jg
sub
mov
loopne
xlat
ja
and
jmp
fs
clc
stos
pop
movs
xchg
in
inc
or
cmps
inc
pop
adc
lock
aas
mov
icebp
pop
sahf
pop
sahf
push
retf
xchg
dec
or
xor
shl
shr
fiadd
clc
push
pop
ja
add
inc
xchg
ins
daa
sbb
cmps
cmp
cmp
leave
cli
in
push
loopne
shr
push
mov
sub
stc
fst
push
ins
adc
in
rcr
ret
neg
pop
sub
mov
inc
cmp
or
pop
xchg
fldenv
jg
in
sub
retf
mov
mov
mov
stos
ins
adc
jb
imul
out
pushf
xchg
dec
or
out
dec
mov
push
mov
or
leave
repz
inc
fisub
adc
jno
mov
and
mov
call
mov
cs
retf
pop
dec
dec
test
(bad)
jl
push
and
mov
and
push
jns
or
cdq
in
data16
pusha
inc
cmps
fwait
mov
and
add
jns
gs
add
(bad)
dec
sbb
adc
push
js
mov
xor
movs
inc
rcl
fbld
in
in
dec
loope
mov
shl
adc
mov
pusha
cmps
or
push
sbb
mul
adc
in
adc
xchg
stc
or
xor
in
pop
add
mov
add
pop
push
rcr
push
jmp
inc
adc
out
sub
or
imul
stc
jne
mov
scas
xchg
mov
das
(bad)
out
push
pop
imul
mov
std
cmps
jle
mov
sbb
sbb
inc
fmul
test
pop
jmp
or
add
pop
xchg
pop
mov
mov
popf
add
in
(bad)
mov
aam
pop
adc
xchg
or
mov
addr16
jmp
jmp
ret
ins
cmp
scas
mov
psubd
xchg
(bad)
jmp
fwait
pop
fbld
xchg
ds
fdivr
popf
loopne
pop
adc
mov
clc
dec
xor
pop
cmc
dec
mov
and
pop
dec
dec
lea
lock
add
lea
fcom
(bad)
in
mov
call
push
push
stos
dec
mov
or
(bad)
inc
imul
jl
subps
dec
cwde
push
mov
adc
shl
xchg
dec
push
ss
mov
into
mov
add
jbe
mov
xor
dec
stos
jbe
mov
ins
imul
fbstp
inc
jmp
shl
ret
mov
in
in
sbb
jae
retf
inc
and
dec
sbb
or
mov
or
mov
jae
cmp
retf
lods
loope
aaa
push
nop
out
movs
movs
xchg
mul
mov
cmp
adc
sub
cld
pop
aaa
jnp
cdq
shl
popf
retf
int3
repnz
dec
dec
loopne
aad
test
or
push
test
xchg
mov
mov
mov
cmps
dec
ss
aam
aam
movs
mov
cli
retf
ret
shl
add
adc
mov
pop
call
push
out
(bad)
rol
stos
imul
icebp
es
fistp
push
(bad)
xchg
mov
mov
and
sub
bound
push
xor
xchg
mov
popf
jmp
adc
and
mov
xor
sbb
add
ds
xor
push
cmp
aad
and
sbb
pop
mov
cdq
cmp
sti
(bad)
js
mov
push
sub
test
xchg
jle
push
ins
lods
fsub
(bad)
xor
dec
xchg
test
add
int3
pop
add
xlat
sbb
call
push
(bad)
sub
and
(bad)
xchg
pop
retf
fst
push
xchg
xchg
ret
es
mov
xor
hlt
in
xor
cs
arpl
or
jo
pop
daa
(bad)
fadd
rcl
lods
stos
pop
mov
pop
sbb
dec
lods
enter
fdivr
es
cmp
push
xor
sub
adc
mov
mov
jnp
pop
int3
fdivr
push
xchg
sub
xlat
in
std
mov
pushf
jnp
and
(bad)
aas
sub
push
xchg
add
push
ficomp
mov
mov
out
fisttp
shl
push
stc
ins
dec
or
xor
sar
lods
dec
out
sub
xlat
call
int
cmp
stos
je
cmp
mov
add
ins
xchg
mov
inc
jge
scas
pop
repz
(bad)
adc
jo
je
push
pop
out
call
movs
lea
sbb
fwait
clc
inc
jnp
imul
sub
addr16
cmp
imul
or
test
cmp
lahf
inc
xchg
outs
dec
stos
mov
test
jge
sub
ss
pop
dec
test
out
hlt
ret
retf
je
xor
aas
ret
into
mov
xchg
cdq
pop
mov
shl
in
inc
adc
push
xchg
jno
add
bound
inc
pop
and
jnp
push
xchg
xor
dec
int
inc
adc
xchg
add
cmc
aad
ss
mov
mov
adc
or
outs
cmp
int3
outs
push
test
loope
repnz
out
cmp
xor
inc
jge
push
push
mov
adc
or
and
jmp
and
jg
(bad)
mov
jecxz
inc
out
cmc
xor
ror
es
xor
in
mov
inc
or
cmp
jp
mov
test
test
mov
clc
aas
lds
adc
dec
imul
mov
sbb
sub
das
pop
dec
xor
jg
sar
lds
mov
loope
gs
xchg
inc
add
cld
lds
lds
inc
lock
leave
(bad)
les
in
cmps
cmps
loop
dec
enter
mov
dec
enter
sbb
gs
rol
test
call
xor
jmp
pusha
and
and
mov
mov
mov
mov
inc
cmp
cmps
pusha
sub
add
jns
ret
cmps
mov
jno
sti
mov
into
fwait
out
in
inc
inc
out
les
shr
mov
pop
ins
test
les
mov
or
cmps
push
jae
inc
test
inc
pop
dec
ret
popa
shr
lahf
mov
jecxz
mov
adc
pop
vunpckhps
xlat
mov
xchg
es
dec
std
mov
inc
shl
shl
pop
mov
pushf
cdq
mov
int3
aam
dec
test
and
jmp
test
je
and
es
sbb
xchg
dec
popa
add
inc
mov
push
adc
in
xor
xor
retf
and
push
mov
inc
xchg
cmps
adc
push
cmps
mov
fwait
and
sbb
out
and
test
ror
pop
mov
inc
push
icebp
cmp
cdq
mov
push
aaa
xor
pop
cmp
pop
retf
into
push
out
sbb
pop
xchg
cmp
(bad)
push
mov
mov
test
aad
test
and
pushf
inc
xchg
iret
inc
stos
and
push
shr
lods
cmp
call
div
lods
inc
mov
mov
adc
inc
adc
and
xchg
popa
pop
imul
push
les
popf
sbb
lock
inc
xchg
push
push
in
movs
or
sbb
stc
clc
(bad)
dec
sbb
pop
lods
push
stos
lahf
mov
loopne
mov
inc
int
test
and
nop
repz
cmp
(bad)
cli
push
inc
aad
mov
movs
shl
fld
stos
cmp
mov
inc
imul
inc
imul
cmc
xor
movs
popa
xchg
cmp
pop
stos
and
xor
or
jl
xchg
mov
stos
pusha
addr16
adc
adc
sbb
cmovbe
pop
sub
xchg
jno
sub
xchg
jmp
fidiv
or
sub
xchg
jmp
in
es
push
sbb
cmp
mov
push
push
call
dec
lds
rcl
push
or
aaa
cmp
mov
fidivr
push
out
mov
cld
mov
out
cmps
xchg
push
sahf
push
and
call
addr16
fucomi
(bad)
pop
test
mov
test
outs
pusha
fisubr
push
ss
lahf
loop
fbld
ja
ror
dec
repz
addr16
aam
cmps
and
cdq
punpckhbw
jnp
push
mov
(bad)
sbb
dec
ret
aaa
out
stc
xchg
or
add
pop
cs
rcl
lock
or
sub
mov
push
cmp
sbb
mov
sub
jge
in
dec
push
stc
fld
mov
mov
stos
movs
mov
mov
cs
jmp
lods
loopne
fsub
inc
pop
cs
cmp
mov
retf
sbb
adc
loope
retf
inc
mov
xchg
and
mov
pop
in
jecxz
cdq
daa
push
shr
cwde
pop
imul
sub
dec
dec
push
iret
mov
push
fisub
aam
retf
stos
fmul
push
div
jmp
aaa
xor
push
lds
icebp
retf
or
dec
movs
xor
pop
(bad)
xor
ret
jp
add
hlt
jnp
mov
scas
clc
inc
pop
or
retf
je
jge
jne
ds
sub
sar
dec
test
cli
sub
sbb
jb
fimul
lods
jne
add
idiv
ror
sbb
int3
pop
mov
cmp
leave
pop
js
arpl
cmp
loope
lds
mov
sub
jbe
loopne
sub
inc
call
pusha
pop
lahf
stos
xlat
ret
(bad)
sahf
pop
pop
jo
sub
mov
mov
or
mov
imul
pop
xor
push
inc
(bad)
ja
xchg
imul
push
scas
jl
dec
pushf
mov
loopne
shr
rcr
dec
jae
test
pop
mov
mov
add
adc
jmp
jg
or
inc
pop
(bad)
ins
adc
or
fwait
adc
int3
or
scas
bound
fdivr
sbb
push
xor
adc
jp
mov
popf
ds
or
iret
sar
dec
cdq
call
fwait
mov
in
sub
dec
mov
push
jmp
in
int
sti
jmp
retf
fisub
imul
xor
idiv
sbb
ret
xchg
xor
mov
mov
or
loop
sbb
cmp
test
(bad)
jge
popa
jmp
mov
pop
rcr
pop
xrelease
pop
in
mov
jecxz
push
jmp
popf
shl
(bad)
icebp
outs
inc
inc
daa
and
mov
stos
jae
jl
scas
daa
push
mov
add
into
mov
test
rol
fcmovne
ins
xchg
xchg
(bad)
xchg
fistp
jno
std
jno
cmp
leave
(bad)
in
jnp
xor
retf
adc
frstor
mov
into
fisttp
adc
call
es
dec
mov
test
jnp
sbb
sbb
mov
es
jg
xchg
xchg
cld
test
sub
in
jl
and
(bad)
sub
jae
and
loope
in
xchg
pop
push
cli
fsubr
jb
lds
jge
dec
jecxz
fdivp
shl
pusha
or
push
add
cmp
ins
inc
pop
es
sbb
js
and
scas
push
cwde
ss
icebp
not
push
mov
je
ret
cmp
ins
popa
aas
test
cmc
pushf
stc
cmp
jge
bound
jnp
sbb
add
fstp
hlt
xchg
pop
dec
cld
push
outs
add
cmp
push
popf
in
xor
xor
cld
add
cwde
adc
add
jae
jp
jle
or
mov
inc
jle
les
out
jo
inc
aas
je
xor
add
fisttp
sbb
push
push
jb
or
pop
pop
or
rcl
pop
stc
int
and
mov
pop
jne
aad
fstp
jle
subps
mov
sub
neg
jns
movs
in
pop
jnp
dec
and
xor
jl
and
cmc
push
mov
xchg
int
enter
mov
adc
add
outs
mov
sbb
(bad)
fnstenv
dec
nop
stc
out
jnp
ins
ret
jge
xlat
loopne
pop
jp
sub
ret
sbb
lock
fcomi
push
lods
inc
enter
mov
and
pusha
bound
mov
int3
outs
dec
(bad)
repnz
pop
push
ins
jmp
(bad)
cdq
dec
stos
cmps
imul
dec
fsubr
or
stos
fwait
call
xchg
jmp
jbe
scas
scas
ins
sbb
out
xor
rcl
inc
dec
cmp
mov
test
mov
in
aad
xchg
mov
add
retf
push
mov
imul
inc
push
pop
mov
jmp
push
mov
int
pushf
inc
inc
retf
pop
lock
xor
dec
aam
div
mov
pop
push
ret
and
gs
fdivr
push
xor
push
lods
rcr
inc
jnp
repz
out
test
rol
fst
dec
cmp
cmp
mov
loopne
int3
adc
test
in
push
mov
imul
dec
xor
and
sbb
xchg
and
and
pop
lahf
movs
adc
loopne
xchg
push
movs
loop
dec
inc
ret
lock
fld
stc
scas
pop
addr16
shl
and
pop
xchg
test
stos
xor
inc
and
aaa
fldenv
push
adc
aaa
pop
xchg
or
test
cmc
cwde
and
inc
inc
push
mov
outs
int3
stos
push
sub
dec
scas
fadd
movs
push
(bad)
(bad)
nop
dec
cmps
loopne
lds
push
jmp
adc
xor
xor
movd
xor
mov
in
and
mov
push
jmp
cli
repz
mov
test
mov
adc
jl
inc
in
cmp
ficomp
repnz
jmp
fld
cmp
(bad)
cdq
int3
xchg
fisttp
fcmovu
mov
call
mov
xchg
movs
fs
mov
mov
fidiv
push
shl
mov
or
lods
es
xor
cmps
adc
stos
aad
xchg
std
dec
cli
xchg
xor
repz
mov
mov
mov
(bad)
jmp
loope
jl
or
add
js
bound
rol
inc
(bad)
and
pop
js
cmp
movs
repnz
sub
xor
jbe
aad
adc
or
cdq
retf
test
imul
cmp
jb
adc
cmp
push
push
cmp
mul
rol
mov
imul
and
inc
bound
dec
prefetch
(bad)
cmps
mov
int
lahf
pop
or
mov
jge
retf
sub
shl
int
mov
push
lea
scas
xchg
jmp
mov
ins
jnp
pop
dec
in
imul
mov
dec
stos
stos
test
push
fdivr
jecxz
push
adc
leave
push
push
pop
js
push
mov
mov
movs
test
popf
inc
lahf
sub
inc
pop
in
int3
push
pop
push
inc
sbb
add
cmps
aad
mov
or
(bad)
jns
jno
push
jo
xor
inc
and
(bad)
xor
xchg
stc
test
shl
xor
std
push
pop
lock
or
xchg
add
jae
in
sahf
xchg
jne
(bad)
jmp
and
scas
inc
dec
cmc
jne
int
lock
lods
popf
cld
ret
loope
and
push
or
pop
jmp
aas
(bad)
cld
das
cmp
shl
dec
jecxz
es
mov
dec
inc
rcr
inc
inc
jnp
push
into
dec
sub
mov
inc
sti
lods
loop
gs
imul
cwde
mov
fwait
out
daa
out
icebp
pop
push
(bad)
adc
sbb
and
push
and
lfs
call
sbb
or
imul
mov
scas
jmp
mov
adc
rcl
cmp
add
daa
xor
mov
aas
cmp
jp
sbb
jg
data16
xor
xchg
or
sahf
fsub
arpl
mov
mov
xchg
jge
cwde
adc
adc
push
mov
jge
lahf
psubb
xor
pop
mov
test
add
pop
clc
adc
pop
dec
mov
cmp
sbb
shr
movs
sbb
rol
mov
aad
ins
and
daa
sti
lock
sub
inc
or
mov
sahf
stc
(bad)
dec
mov
fistp
xchg
pop
cmp
add
int
jmp
pop
imul
jle
fstp
es
outs
pop
pop
jb
jae
stos
adc
jne
pop
(bad)
stc
jae
adc
fwait
or
aad
xor
out
jmp
(bad)
loop
cmp
cmp
and
aad
(bad)
jb
lds
mov
mov
xchg
dec
mov
pop
mov
test
loop
pop
jb
imul
lock
pop
add
(bad)
loopne
ja
sub
add
mov
aam
aam
push
inc
adc
test
(bad)
ss
xchg
add
jmp
mov
out
xchg
ret
retf
ins
xchg
cmps
jae
cmp
clc
mov
not
movs
mov
call
stc
jo
cmp
scas
retf
pop
and
mov
cld
int
int
push
lock
push
outs
sar
and
xor
push
lea
cmps
mov
inc
sti
lock
pop
xlat
out
les
cmp
sbb
shl
shr
or
ret
fist
je
aam
xor
repnz
and
or
sbb
or
dec
push
stos
mov
es
ja
ins
jae
push
leave
lods
dec
mov
jge
mov
xchg
mov
inc
out
cs
pop
sub
ret
mov
rcl
daa
jne
inc
dec
xor
aad
pop
push
mov
jge
lods
xchg
mov
(bad)
dec
aas
movs
push
mov
push
imul
es
sub
test
jnp
push
scas
xchg
cmp
or
fmul
push
inc
cdq
ins
aam
push
adc
push
dec
lahf
mov
xchg
xchg
dec
sub
std
pop
mov
cli
sub
fidivr
jge
push
push
sub
pop
(bad)
cmp
inc
retf
xor
fmul
scas
xor
fstp
pop
add
pop
stos
test
jo
std
xor
aas
push
adc
out
gs
push
iret
jo
loopne
mov
shr
mov
mov
xor
test
(bad)
push
fdivrp
les
aad
push
and
push
adc
leave
(bad)
(bad)
(bad)
int
or
js
rcr
sub
retf
adc
dec
xchg
rcr
aas
cmp
pop
mov
ja
add
cwde
repnz
pop
mov
cmp
mov
outs
call
inc
dec
jb
mov
pop
push
cdq
push
and
mov
aam
push
inc
and
lds
dec
xchg
stos
jl
and
test
mov
movs
ins
or
mov
lahf
(bad)
scas
scas
jae
aaa
add
adc
mov
cmp
xchg
xor
out
mov
push
push
rcr
jmp
mov
lds
inc
aam
gs
push
(bad)
popa
and
inc
pop
pop
lea
retf
xchg
les
imul
adc
mov
cli
das
xchg
mov
(bad)
stos
inc
int3
mov
das
cmovae
add
mov
sub
jmp
jle
jmp
test
mov
arpl
dec
cli
or
sbb
mov
dec
les
lods
gs
aas
pop
loope
popa
jmp
push
mov
cwde
fdivr
in
sbb
and
add
sbb
movs
addr16
mov
adc
retf
neg
test
int
stos
idiv
nop
push
xor
xor
xchg
(bad)
mov
imul
and
(bad)
dec
das
dec
jb
sbb
or
pop
inc
lods
cmp
mov
xchg
arpl
mov
das
data16
(bad)
jg
mov
fdivr
cmp
mov
push
jmp
sub
repnz
or
mov
sbb
jo
push
fcomp
sti
pop
or
sbb
inc
mov
mov
or
inc
test
clc
lahf
sti
jl
retf
mov
jmp
lods
cdq
cmp
mov
enter
sti
mov
popa
daa
addr16
or
test
stos
or
mov
imul
push
ss
or
arpl
xchg
mov
xchg
jns
or
jb
cmc
imul
push
mov
in
in
stc
pop
fistp
xor
jae
push
int
push
pop
adc
sub
inc
mov
push
push
xor
out
mov
inc
cld
and
push
cs
or
pop
cmp
xor
div
mov
sbb
mov
scas
dec
popa
and
sbb
icebp
fwait
cmp
pop
or
fadd
push
scas
or
es
call
or
add
std
fsubr
cmp
push
xor
mov
(bad)
int
(bad)
std
gs
mov
in
sbb
ss
popf
out
pop
pop
push
sub
xchg
adc
popa
shl
inc
icebp
mov
dec
ficom
pop
loop
cmp
push
pop
(bad)
enter
mov
das
sbb
sub
mov
cmp
out
cdq
inc
ss
mov
xor
and
jno
hlt
add
cmc
push
aad
rol
mov
or
sub
mov
pause
ret
mov
stos
je
sbb
add
jb
movs
cli
cs
in
(bad)
gs
push
jo
or
xor
fild
mov
icebp
and
mov
ds
out
lods
mov
int3
add
shl
pop
ffree
xor
mov
ret
lock
iret
call
fdecstp
inc
ss
sbb
cmp
pop
and
js
sar
mov
test
pop
mov
push
inc
mov
out
movs
je
inc
sbb
mov
mov
outs
dec
pop
mov
xor
es
dec
fldl2t
mov
push
adc
sbb
out
fistp
push
fcmovne
mov
aam
push
and
jae
or
lods
and
mov
fild
idiv
mov
jb
pop
sub
sahf
xor
fnstcw
mov
addr16
(bad)
mov
adc
adc
xor
cmp
sub
fisttp
push
and
mov
xchg
(bad)
cmp
out
sub
sub
adc
in
inc
int3
out
jp
cdq
ins
adc
dec
push
call
pop
leave
rcr
pop
inc
adc
cmp
mov
dec
(bad)
and
mov
jmp
ja
add
mov
test
test
jo
rcr
test
xor
mov
mov
add
cmp
dec
test
daa
inc
dec
adc
adc
or
aas
jmp
shr
ss
arpl
xchg
or
sar
push
pop
(bad)
sub
lods
lahf
fdivr
les
mov
and
mov
das
add
je
jns
aas
cdq
ret
ins
or
fdivr
or
out
add
cli
jle
nop
dec
jle
pop
mov
aad
adc
mov
hlt
jnp
loop
ins
dec
stc
and
pushf
(bad)
push
add
ret
das
sbb
loop
pop
jae
xor
pop
test
pop
scas
nop
lods
sub
(bad)
rcr
inc
cs
mov
cmp
ins
jae
xlat
das
cwde
xchg
in
mov
xchg
daa
mov
push
pop
movs
(bad)
mov
out
jns
xchg
jns
push
xchg
and
in
pop
mov
sbb
push
imul
and
test
or
or
repnz
cmp
repz
or
inc
ins
jp
out
fnsave
push
inc
jge
cmp
mov
repz
mov
adc
xor
les
inc
mov
gs
repz
scas
imul
or
stos
repz
in
lock
(bad)
jg
fimul
aas
jmp
adc
jmp
dec
push
push
cwde
rcr
sahf
lods
and
cmp
(bad)
aad
add
dec
sbb
jnp
mov
cmps
xchg
fstp
out
dec
sahf
dec
xchg
test
outs
clc
dec
enter
adc
sub
and
loop
mov
cwde
repz
pop
push
test
fnstsw
repz
dec
push
push
shl
gs
cmps
rol
pusha
dec
dec
stc
cmp
lods
mov
mov
lock
les
sahf
add
xor
aam
sub
jecxz
jp
and
ss
adc
inc
add
jmp
adc
mov
adc
dec
in
push
pop
xchg
repz
fmul
mov
mov
(bad)
xor
xor
sub
pop
pop
pop
lds
cld
scas
stos
pop
or
jmp
ror
mov
lahf
cld
(bad)
mov
dec
test
xchg
imul
pop
(bad)
fimul
popa
out
mov
jo
pop
stos
cmp
push
loopne
mov
push
xchg
aam
sub
fldcw
fnstcw
pop
adc
and
and
fsubrp
pop
jnp
hlt
mov
pop
and
mov
sub
mov
ret
arpl
in
test
dec
ss
cmp
and
ffreep
adc
or
call
rol
push
shl
scas
and
or
mov
mov
out
pop
ins
xchg
cmp
mov
call
sub
clc
ins
push
cdq
xchg
movs
enter
test
mov
adc
fisttp
movs
pusha
lds
or
call
jnp
adc
jge
jmp
lahf
and
in
push
addr16
jb
xchg
cwde
(bad)
enter
push
outs
retf
mov
sbb
jp
outs
xchg
mov
pusha
push
int
add
fnsave
cmps
call
sub
dec
dec
(bad)
ins
data16
push
dec
ins
(bad)
aad
lahf
adc
jg
loopne
inc
sti
sub
cmp
icebp
pop
and
(bad)
xchg
mov
cwde
jnp
dec
xchg
adc
dec
sub
dec
sti
(bad)
push
div
xor
call
and
shr
xchg
cmp
sbb
sub
xor
add
jns
push
jl
mov
sub
pop
cld
xor
aas
jle
dec
scas
icebp
ins
lahf
ja
pop
jle
hlt
fcomp
arpl
aam
sti
inc
add
mov
sub
pop
mov
or
mov
movs
(bad)
inc
pop
cmp
jns
shl
rcl
aas
imul
shl
stos
inc
push
inc
es
sti
minps
sub
pushf
push
call
js
shr
xor
sub
cwde
lods
popf
xor
call
cld
pushf
jmp
cmps
or
jecxz
pop
ja
cs
dec
xor
mov
dec
aas
rol
pop
sub
sahf
sbb
pop
dec
mov
mov
stos
push
and
je
ins
imul
jecxz
sbb
cld
adc
sbb
loopne
cli
pop
cmps
ss
mov
pop
dec
inc
ins
inc
xchg
movhps
cwde
test
adc
mov
ret
test
cwde
cwde
dec
xchg
jp
into
sbb
push
cmp
add
(bad)
or
push
mov
push
push
cdq
(bad)
retf
xchg
add
outs
mov
or
jae
and
shl
dec
rcr
adc
cs
or
dec
mov
out
push
daa
mov
les
inc
es
cmc
mov
inc
mov
ret
mov
fcmovu
int3
sub
push
inc
add
neg
adc
icebp
adc
es
jno
shr
jg
pop
movs
out
ins
movs
fisubr
or
stc
(bad)
test
xchg
repz
cmp
cmp
or
imul
clc
add
or
fs
sbb
imul
lds
mov
daa
inc
and
pop
aas
cmc
retf
inc
xchg
mov
lds
jbe
shr
gs
lahf
fstp
inc
popa
mov
adc
lods
enter
and
sub
bound
mov
xor
enter
cmp
xor
mov
mov
les
fidiv
fsubr
or
ins
outs
out
mov
sub
mov
push
enter
sbb
sar
push
pop
adc
lock
movs
mov
xor
test
mov
mov
mov
jne
lock
cmps
mov
cmp
mov
jb
jmp
or
xor
jecxz
imul
xor
int3
inc
fstp
ficomp
xchg
mov
xor
jl
sub
mov
mov
scas
rcr
in
in
sub
xor
mov
das
mov
pop
addr16
or
dec
mov
pop
push
mov
lds
pushf
rol
jmp
pop
xor
repz
das
stc
add
fmul
loop
fcomp
dec
add
push
call
pop
push
xor
xchg
sub
jle
jecxz
je
fucomip
lahf
xor
sahf
test
cs
pop
cld
xchg
icebp
xor
xor
pop
aaa
inc
int3
(bad)
xchg
test
(bad)
hlt
xchg
mov
and
mov
stos
fidivr
shl
retf
jge
ds
stos
ret
or
fst
(bad)
cmp
icebp
mov
jo
sbb
call
push
pop
xor
adc
(bad)
and
sub
fmul
and
test
inc
mov
out
pop
mov
inc
push
data16
mov
lock
das
push
sahf
xchg
in
push
hlt
mov
dec
test
dec
mov
adc
shl
out
push
out
cmps
loop
xor
addr16
push
mov
int
cmc
add
in
inc
jns
int
icebp
push
jg
xchg
jmp
das
loop
adc
gs
lahf
mov
pop
les
add
push
and
xor
(bad)
fwait
ror
arpl
push
mov
mov
adc
mov
mov
mov
pop
nop
in
idiv
pusha
repnz
cmp
or
mov
mov
test
inc
inc
mov
sar
fistp
xlat
cmp
push
push
paddb
fidivr
xor
pusha
bound
inc
sbb
xor
mov
fcmovb
jle
ret
or
mov
push
inc
sub
sbb
jne
call
fsubr
cmp
xor
and
add
out
adc
dec
adc
out
movs
lods
loope
call
jmp
aam
push
xchg
jno
mov
cmp
loope
test
ud1
inc
xchg
jae
sbb
jo
daa
or
push
sahf
inc
cmp
pop
aaa
out
pushf
dec
xor
mov
inc
jno
pop
push
mov
js
xchg
in
cdq
sti
ja
mov
ja
jg
jb
sub
sub
retf
sub
and
mov
sbb
inc
fs
shl
and
inc
jo
fsub
xor
cmp
test
mov
pop
add
jecxz
dec
xor
dec
dec
out
int
test
add
lea
ins
inc
mul
test
add
and
(bad)
enter
in
jmp
inc
test
and
cmps
mov
mov
jp
cmp
dec
pop
in
pop
cld
and
or
add
push
jmp
xor
into
xor
stos
mov
nop
jp
pop
div
mov
push
cdq
pushf
ins
pop
int
sub
or
jne
dec
movs
xchg
scas
mov
dec
sti
mov
mov
adc
arpl
leave
mov
add
fdiv
pusha
cmp
fisttp
fwait
mov
xor
ins
mov
fild
test
jmp
js
es
aas
ret
icebp
sub
inc
out
adc
cwde
fs
adc
cmp
add
push
(bad)
repz
jmp
adc
jbe
push
les
sbb
bound
cmp
add
xlat
repnz
das
js
out
and
jb
xchg
cld
jnp
int
ds
enter
addr16
test
mov
mov
push
(bad)
jmp
jne
cs
fcmove
sub
pop
sahf
loopne
pop
call
ret
push
add
enter
loope
cmc
test
xor
mov
cmps
sub
cli
dec
pop
adc
movs
or
cmp
lods
xchg
mov
sti
jne
jno
xor
loope
imul
aad
xor
lods
jl
dec
sbb
test
pop
mov
sub
movs
es
mov
add
aam
or
sub
push
add
adc
movs
and
sbb
ficomp
adc
pop
dec
or
je
inc
mov
sbb
xchg
inc
scas
loop
jae
xchg
lock
pop
ins
lahf
sub
mov
lods
xchg
mov
in
mov
cmp
jbe
shl
pop
neg
mov
pop
fs
adc
(bad)
cld
jmp
mov
xlat
sbb
push
pop
cmp
xchg
jo
cdq
js
nop
call
xchg
cmc
pop
outs
into
sbb
dec
jne
test
add
push
jmp
mov
sub
and
and
jo
and
sbb
retf
gs
mov
cmp
clc
xchg
test
or
push
pop
sbb
ds
pop
in
mov
retf
mov
xchg
popf
jne
stos
mov
neg
dec
push
ret
pop
add
sbb
scas
call
xor
mov
and
scas
xor
and
shr
jnp
xor
jmp
arpl
iret
imul
sub
int3
jbe
cmp
mov
dec
ficom
rol
popa
sub
std
(bad)
cmp
pop
cmp
and
(bad)
and
lds
jle
outs
sbb
mov
jle
test
fnstenv
(bad)
pop
mov
mov
sub
ins
pop
xor
pusha
cwde
retf
push
ins
lds
mov
mov
push
sbb
jne
dec
sub
dec
dec
rcl
push
bound
test
std
mov
pushf
inc
popa
lds
ror
inc
jae
mov
stos
push
les
das
loope
adc
push
imul
mov
jno
jbe
pop
pop
cmps
push
int
pushf
(bad)
jle
and
inc
or
addr16
mov
repz
fst
jge
xor
fstp
outs
or
pop
pop
mov
pop
outs
xor
bound
out
call
mov
xchg
lock
mov
xor
pop
push
ret
jo
mov
fistp
in
out
stc
(bad)
or
sti
outs
lods
lds
mov
mov
mov
sub
pop
jo
cmps
push
(bad)
stos
ins
fstp
mov
xor
ins
xor
iret
push
lods
adc
ins
lahf
inc
xchg
mov
retf
xor
sbb
fadd
int
arpl
into
pop
mov
and
sti
sbb
or
xchg
arpl
int3
inc
xchg
pop
push
and
inc
mov
jnp
scas
sub
ds
sbb
fsub
stos
ret
in
sbb
pop
cmp
pop
push
and
pop
fwait
ret
jbe
inc
dec
bound
sahf
out
and
and
mov
mov
loope
push
mov
jmp
xor
mov
pop
jbe
mov
(bad)
and
xor
ficom
adc
loop
(bad)
(bad)
dec
loope
repnz
pop
add
mov
sub
addr16
cmp
add
aam
push
sub
jnp
mov
es
pop
sar
inc
lods
fld
xchg
(bad)
pop
pop
pop
call
into
xchg
lds
sti
retf
mov
sbb
or
(bad)
fwait
test
and
jnp
fmul
imul
mov
push
out
xchg
inc
xor
(bad)
cmps
retf
call
mov
dec
js
mov
mov
dec
jmp
pop
sbb
mov
add
gs
adc
in
mov
pushf
adc
dec
cmp
mov
loop
nop
ret
and
jb
into
dec
test
push
rol
and
push
daa
dec
xchg
repz
inc
ins
int
xchg
popf
adc
jnp
xchg
in
stos
pop
mov
jns
mov
je
fimul
pop
mov
dec
ins
lahf
dec
icebp
fidiv
mov
cdq
(bad)
leave
test
jg
push
or
sbb
cmps
into
lods
cmps
call
adc
or
(bad)
mov
mov
add
in
cli
popf
(bad)
push
mov
mov
call
xor
sbb
pop
xchg
daa
sub
xchg
inc
fs
imul
(bad)
sub
cmp
jns
sub
pusha
popa
ret
adc
push
and
faddp
cld
repz
mov
ds
ja
pop
mov
ror
cwde
pop
ret
push
pop
mov
add
sbb
call
sub
lahf
out
ds
cmp
xor
fmul
sbb
arpl
das
push
pop
gs
adc
xor
cmp
push
xchg
shl
sbb
(bad)
das
and
pushf
and
mov
lahf
in
mov
repnz
mov
sub
test
mov
dec
ror
push
xchg
cs
iret
and
inc
xchg
pop
ret
mov
ret
pop
xchg
fisubr
push
aas
add
cwde
test
rol
inc
push
and
mov
cli
int3
aam
(bad)
push
outs
adc
loope
scas
cmp
mov
(bad)
out
push
mov
fsubrp
sti
ins
(bad)
or
xchg
ds
dec
or
imul
pusha
sub
repz
pop
aad
sar
dec
pop
loopne
adc
cmps
sti
data16
adc
mov
cmp
mov
(bad)
push
adc
or
pop
(bad)
scas
int3
and
sub
xor
sbb
add
std
mov
inc
div
out
pop
mov
loopne
ret
push
fldenv
cwde
push
xor
cmp
push
cs
push
fimul
test
js
dec
cld
mov
push
inc
jnp
aas
push
rol
aad
inc
aad
in
cwde
xor
stos
sub
xchg
int
inc
sahf
scas
mov
and
pop
outs
sar
and
push
push
push
jge
cdq
sbb
test
push
lahf
call
fimul
or
jmp
jmp
out
call
mov
lds
fisttp
xchg
call
cld
inc
mov
sti
xor
jb
mov
(bad)
iret
dec
sbb
ficom
pop
push
frstor
mov
cmps
fsub
mov
ins
aad
retf
inc
jge
dec
jp
std
test
xor
mov
sahf
xor
jl
mov
stc
xchg
xor
and
call
xor
xchg
(bad)
cmp
xchg
mov
(bad)
push
(bad)
xor
dec
popf
arpl
in
mul
sbb
xchg
dec
ds
mov
outs
sbb
repnz
stos
xchg
and
out
das
push
mov
sbb
jno
xchg
div
mov
in
sbb
pop
stos
(bad)
hlt
mov
inc
push
stc
xchg
push
fidivr
jg
out
ss
es
rol
inc
push
jae
xor
repnz
cmc
sar
jmp
iret
xchg
shr
icebp
and
test
and
leave
dec
and
aas
cmc
jns
fnstsw
or
mov
sbb
dec
adc
xor
add
mov
xchg
lahf
fst
imul
arpl
repnz
enter
out
int
push
xlat
or
imul
ret
test
mov
or
push
mov
fcom
imul
mov
and
(bad)
push
neg
inc
push
or
not
movs
or
jb
dec
cmp
push
push
mov
test
mov
adc
mov
int
in
sbb
mov
inc
enter
push
rcl
call
fild
adc
jnp
das
retf
cmps
icebp
ss
ja
pop
pop
test
lock
mov
push
push
inc
inc
cmp
psrld
movs
jmp
nop
cmp
push
ficomp
mov
mov
pop
xchg
pop
jle
jo
dec
jg
sbb
cld
data16
icebp
jecxz
call
mov
daa
lds
ret
(bad)
push
jo
add
or
int3
in
mov
out
fst
out
fcomi
pop
je
cld
jns
les
fimul
sar
add
enter
retf
add
xor
mov
dec
js
pusha
add
ret
(bad)
inc
cld
pop
out
jno
xchg
ja
mov
push
cmps
in
push
pop
mov
into
push
loope
ins
sub
mov
jno
add
inc
nop
(bad)
outs
mov
lds
push
push
popf
pop
adc
mov
sbb
add
xchg
xchg
lds
fdivr
fild
std
mov
test
addr16
repnz
lea
jbe
movd
aad
add
pop
pop
lahf
das
xchg
mov
add
fsub
lock
outs
lea
mov
xor
sbb
pop
xchg
cmp
lods
sahf
inc
sub
fdiv
and
int
push
(bad)
popf
inc
mov
bound
push
rol
cmp
mov
out
int
mov
hlt
xchg
mov
shl
or
aad
in
(bad)
aad
mov
mov
and
dec
hlt
jbe
sti
hlt
and
and
int
jge
mov
add
fdivr
mov
inc
mov
sub
mov
xchg
and
test
dec
jnp
mov
into
outs
sub
cmps
fld
pop
xor
fdiv
int
adc
cli
(bad)
fcomip
adc
enter
call
lods
xor
dec
stos
pop
call
jne
test
movs
sub
inc
jo
lods
lahf
cmp
aad
imul
cmp
fwait
jne
jge
retf
push
and
ror
popf
outs
push
sbb
adc
daa
sub
cmp
add
lahf
xchg
pop
jno
push
cwde
daa
lods
ror
add
ret
(bad)
or
inc
jne
ss
push
loopne
pop
push
mov
loopne
icebp
push
mov
xchg
cwde
dec
jbe
cmp
push
xchg
sub
or
rcl
fwait
mov
(bad)
dec
adc
retf
shl
lahf
retf
(bad)
mov
push
int
and
fld
in
sbb
cmps
dec
sub
aam
mov
test
sub
pop
movs
lods
fisttp
pop
sub
fisub
mov
in
push
sbb
rcr
xlat
jp
cmps
mov
test
dec
bound
out
and
clc
test
adc
aam
repz
ja
pop
push
out
mov
pusha
pop
xchg
lea
mov
(bad)
call
std
fst
and
pop
inc
push
pop
into
aaa
std
iret
(bad)
mov
in
repz
daa
inc
add
popa
xchg
enter
jmp
stos
inc
lds
and
icebp
xor
and
lea
loope
lods
push
lock
dec
mov
loopne
push
call
adc
addr16
mov
add
jp
ret
das
retf
jg
mov
xchg
(bad)
dec
aaa
jmp
jmp
mov
sub
imul
js
push
and
and
mov
stos
enter
(bad)
mov
push
popf
in
and
xchg
jne
cmps
icebp
lods
(bad)
push
mov
mov
addr16
cmp
mov
ret
lods
scas
(bad)
notrack
mov
mov
mov
or
jbe
arpl
sub
mov
lods
pop
into
(bad)
ds
aaa
fsubr
in
sub
pop
pop
loopne
aaa
sub
movs
push
stos
lahf
inc
daa
scas
lods
xor
sbb
push
mov
data16
jno
inc
xchg
sub
jo
(bad)
xlat
stos
sbb
jbe
in
retf
xor
popa
xchg
mov
fistp
(bad)
cmps
gs
mov
shr
adc
inc
add
(bad)
add
inc
stos
cmp
stos
sbb
and
rcr
dec
jnp
mov
test
pop
xor
bound
cmp
in
out
add
lock
test
sti
mov
sub
adc
mov
adc
mov
aaa
jecxz
and
and
cli
aam
inc
mov
cwde
imul
cmp
push
mov
pop
(bad)
mov
dec
(bad)
jl
daa
jmp
call
and
sub
cmp
ins
clc
push
movs
and
das
mov
rcr
jmp
in
lods
jecxz
jle
pop
push
sub
jmp
and
pop
fadd
and
jge
add
fmul
push
imul
adc
xchg
ja
fwait
dec
std
mov
dec
jnp
cli
adc
pop
inc
jmp
enter
adc
mov
cdq
sbb
add
xchg
or
push
imul
aad
jae
mov
out
hlt
push
jecxz
jae
mov
jmp
jae
add
and
scas
or
xchg
mov
scas
adc
repnz
cmp
cld
add
jg
movs
xlat
inc
cdq
je
inc
in
or
fisub
leave
pop
jle
mov
mov
ret
scas
push
and
and
fist
add
fstp
cwde
fist
sub
js
ins
jp
loopne
sbb
or
aam
and
out
sbb
or
or
daa
in
mov
in
clc
je
mov
shl
hlt
clc
sub
mov
adc
bound
daa
sbb
push
cmp
cmp
hlt
leave
jle
mov
sbb
inc
mov
push
xor
fst
call
(bad)
shr
dec
call
(bad)
xor
adc
add
push
push
xchg
push
inc
dec
ss
aaa
xchg
cdq
mov
sbb
cmp
movs
sbb
ret
adc
hlt
lock
(bad)
imul
or
rcr
adc
pop
push
cmp
xchg
lods
call
rcl
ds
dec
jecxz
adc
enter
sahf
popf
out
daa
pop
pop
push
xor
mov
jecxz
add
ja
push
enter
adc
in
xchg
js
es
mov
jae
imul
cdq
nop
sbb
mov
ins
xchg
cmp
leave
sbb
dec
mov
pop
pop
movs
mov
loop
and
adc
pop
xchg
jl
fild
and
mov
lds
xor
ss
sub
push
ins
pop
jp
cmp
out
inc
shl
mov
int
out
cs
jne
sub
sbb
push
in
leave
(bad)
enter
jnp
(bad)
add
call
loopne
mov
mov
mov
fbstp
and
repz
jo
mov
pop
loopne
push
mov
xor
xchg
ins
sub
mov
pop
add
popf
pop
sbb
cwde
rcl
imul
outs
data16
test
push
stos
and
mov
sbb
sti
jb
pop
pushf
aad
cmp
fmulp
retf
les
or
nop
js
dec
sub
ds
xchg
mov
int
dec
popf
fs
jg
pop
lds
cmps
pusha
push
jne
stos
stos
daa
inc
aam
inc
(bad)
aam
or
pop
xor
push
shl
xor
rol
cmp
rcl
sbb
jg
xor
adc
xchg
or
dec
(bad)
repnz
in
lock
inc
sar
push
ret
cmp
shr
icebp
loop
ja
sbb
or
cs
test
daa
xchg
jno
pop
dec
leave
bound
addr16
jg
mov
test
stos
pop
mov
test
shr
addr16
add
outs
leave
mov
xchg
jmp
jnp
jnp
cmp
xchg
cmp
jmp
dec
xchg
in
pop
mov
pop
pop
mov
xchg
stos
out
in
pusha
mov
xor
push
mov
lds
and
call
popa
fs
cmps
add
and
pop
bound
inc
out
js
pushf
xchg
dec
or
push
mov
dec
ins
(bad)
mov
sbb
sbb
and
pusha
outs
jl
loopne
mov
test
imul
sbb
rcr
jmp
mov
push
ja
(bad)
in
rcr
or
cmp
rcl
xor
je
stos
inc
pushf
mov
and
push
xchg
jmp
mov
xor
loope
daa
ja
fild
adc
mov
sahf
test
cmp
cs
not
inc
jmp
dec
xchg
cmp
shl
jmp
push
mov
jbe
mov
daa
or
or
push
movs
rcr
mov
test
add
(bad)
not
jmp
fstp
pop
add
cmp
lock
rcr
int3
aaa
ficomp
inc
sbb
add
scas
mov
mov
repz
push
mov
mov
add
xor
outs
aas
mov
add
mov
dec
in
xchg
(bad)
push
jmp
daa
sbb
or
(bad)
and
rol
scas
in
cs
(bad)
fwait
push
jmp
out
cdq
bnd
inc
fst
and
jmp
nop
mov
pop
sqrtps
aad
xor
mov
outs
jbe
ret
mov
sbb
outs
adc
mov
mov
fld
inc
add
ret
and
jmp
add
mov
push
add
push
aaa
or
pusha
pushf
pop
push
pop
movs
out
or
mov
retf
or
cli
add
xor
inc
sbb
mov
mov
test
jno
add
jo
push
sub
cmp
ss
aas
lods
xor
in
mov
test
add
ja
inc
adc
enter
pop
outs
and
call
retf
pop
or
and
xor
rol
push
cdq
adc
xor
fiadd
jns
pop
mov
lahf
jle
(bad)
xchg
push
fs
and
pop
mov
jecxz
(bad)
push
ret
push
and
(bad)
(bad)
out
jecxz
lds
jecxz
mov
enter
cmp
mov
mov
les
cmp
push
test
fs
sub
add
repz
sahf
scas
(bad)
(bad)
lods
clc
xor
xor
or
aas
in
ins
ds
xchg
xor
movs
cdq
cmp
lds
mov
clc
and
push
popa
movs
adc
mov
xchg
pop
data16
int3
sbb
repnz
dec
add
shl
or
(bad)
cmp
jo
bound
cmp
mov
icebp
mov
push
sbb
inc
ins
mov
mov
shl
push
sbb
mov
and
in
pushf
loopne
std
push
stc
retf
out
sbb
pop
lds
ret
movs
push
ja
jle
movs
mov
dec
icebp
sub
adc
cld
pop
shr
nop
in
call
cmps
loope
(bad)
xor
pop
or
push
mov
dec
push
xchg
ret
and
xor
sbb
and
pop
ret
shl
mov
int3
sbb
fisttp
mov
cli
mov
mov
pop
scas
popa
adc
loope
mov
out
and
mov
ds
pop
into
sub
push
cwde
jns
test
pop
inc
adc
ret
mov
cdq
sar
loop
sub
rcl
shr
arpl
ja
cmps
add
test
popf
cmc
cmps
test
push
inc
movs
loop
mul
int
sub
cmp
jmp
bound
adc
ins
fisubr
jns
jo
inc
mov
nop
retf
mov
mov
call
sub
sbb
and
pop
imul
lea
ret
es
(bad)
sub
stc
add
sub
leave
repz
bound
inc
emms
out
jp
jmp
icebp
leave
fisttp
dec
in
sbb
aaa
xchg
mov
jl
cmps
add
jp
ret
fs
rcl
inc
and
test
sub
call
push
cli
or
ds
jnp
jecxz
jp
test
adc
ss
add
pop
in
loopne
mov
outs
ret
sti
mov
dec
mov
and
out
or
mov
mov
gs
jnp
rdpmc
rcr
add
cwde
xor
pusha
ss
lods
(bad)
(bad)
gs
scas
sti
xchg
or
call
push
arpl
adc
or
mov
xchg
sbb
sbb
push
xchg
repnz
mov
sub
push
ss
out
pop
ficom
test
daa
mov
or
test
adc
sahf
loopne
sub
mov
xor
pop
cmc
loop
xor
adc
mov
push
stos
mov
mov
test
sub
add
mov
cmps
jle
mov
icebp
pop
jle
out
enter
jno
inc
add
in
ror
push
daa
or
pop
pop
add
(bad)
push
sbb
push
xor
(bad)
mov
shl
dec
arpl
dec
cmps
inc
aaa
lods
pushf
or
sbb
in
repz
mov
cmps
dec
sub
jns
test
call
pop
fcomp
adc
pushf
and
cmps
or
in
mov
(bad)
in
popa
sub
mov
cmps
xchg
clc
sar
push
and
dec
js
mov
pop
repz
mov
hlt
int
xor
sub
mov
push
or
test
fstp
outs
cli
in
cmps
mov
lahf
fnstenvw
(bad)
scas
std
jbe
mov
jbe
stc
ds
and
stc
cdq
js
mov
(bad)
mov
inc
and
je
pop
xor
mov
cli
sub
mov
je
fpatan
xlat
fcmove
fnsave
leave
xchg
add
(bad)
and
stc
in
add
ds
pop
in
outs
sbb
mov
popa
loope
push
pop
outs
pop
push
sub
out
fdivr
mov
mov
shl
scas
gs
push
adc
adc
comiss
sbb
mov
jmp
mov
shr
xor
inc
pop
push
cs
outs
ret
ror
icebp
mov
jo
retf
mov
sbb
and
iret
pushf
rcr
call
cmps
push
bound
bound
imul
add
xlat
jne
xchg
clc
mov
jl
(bad)
mov
pop
and
retf
sbb
lods
sti
adc
inc
mov
iret
int
outs
mov
hlt
dec
mov
dec
inc
or
push
adc
inc
cmp
je
inc
dec
xor
adc
in
daa
ror
push
lods
leave
retf
aas
mov
adc
mov
mov
stc
xor
mov
cmp
leave
retf
call
stc
in
inc
pop
fadd
loop
add
outs
push
jbe
mov
jmp
cld
into
xchg
test
aad
sub
adc
fild
pop
arpl
fisubr
mov
add
push
cwde
push
push
mov
les
add
mov
jl
stos
mov
jecxz
lahf
inc
repnz
mov
rcl
and
aaa
jno
sbb
jmp
es
rcl
inc
jmp
cmp
lods
rcl
mov
out
out
scas
push
cli
sub
jb
in
mov
mov
ds
popf
fld
cdq
loopne
jnp
pop
sbb
inc
ja
dec
cmp
or
fisttp
outs
mov
into
push
cmp
sbb
dec
mov
call
and
ins
loop
cs
aas
es
shr
div
addr16
rcl
xor
or
dec
xchg
sahf
data16
pushf
shl
push
and
pop
jb
fnstcw
push
ror
retf
jb
sub
cmps
push
lock
adc
add
dec
mov
out
or
ret
inc
div
js
(bad)
outs
push
add
lea
cmp
sbb
(bad)
jg
and
adc
sahf
movs
(bad)
or
imul
stos
pop
retf
xchg
movs
cld
cdq
mov
push
pop
xchg
adc
ins
mov
test
stos
mov
cmps
fmul
add
imul
lahf
out
cdq
test
fldenv
jp
jnp
cmp
test
inc
icebp
std
xor
popa
mov
std
les
xor
mov
push
jns
push
or
rcr
dec
sahf
push
fwait
inc
lock
loope
neg
retf
xor
cld
push
test
dec
push
pop
outs
adc
mov
sub
(bad)
fwait
cmps
das
stos
mov
mov
fild
sahf
mov
jmp
data16
mov
bound
out
ds
mov
mov
jmp
enter
daa
xchg
adc
call
mov
jns
shr
adc
add
cmp
dec
xchg
mov
or
addr16
sub
mov
inc
jmp
mov
test
sbb
ins
or
pop
test
hlt
cmp
fs
pop
lahf
xchg
shl
call
mov
push
repnz
add
pusha
imul
cmps
sub
(bad)
fld
ret
(bad)
xor
or
int
imul
xchg
push
add
mov
es
mov
inc
imul
xor
mov
fidivr
or
jno
jne
sbb
cmps
add
fidiv
sub
leave
stc
inc
inc
xlat
ins
push
xor
xor
sbb
jne
fidivr
stc
mov
test
mov
xor
test
xchg
adc
cmp
pop
gs
in
pop
out
into
add
mov
sub
fistp
xchg
in
xchg
sbb
jo
dec
dec
sub
sub
and
xor
pop
mov
mov
push
clc
dec
shl
mov
movs
sub
cdq
mov
int
ins
ds
sub
push
pop
sub
scas
out
adc
xor
xchg
sub
xchg
sbb
mov
(bad)
jmp
fs
call
sub
and
pop
mov
mov
fdiv
stc
retf
rcl
jae
out
mov
fdiv
cmp
adc
and
mov
jo
pop
mov
movs
mov
clc
call
pop
xchg
xchg
adc
pusha
cmps
mov
mov
test
fyl2xp1
push
enter
ror
repz
mov
aad
lds
jg
test
rcr
fisubr
out
cmp
xchg
sub
sub
xchg
rcr
jns
pop
sbb
sub
push
xor
adc
sti
xchg
call
inc
(bad)
pop
lds
cmp
adc
and
outs
and
or
cmp
fwait
jmp
or
pushf
push
jns
sub
push
imul
je
xor
arpl
push
dec
xchg
xchg
xchg
lds
cdq
loop
and
test
jmp
inc
out
dec
jmp
or
or
xor
adc
(bad)
jne
hlt
pop
xor
push
je
xchg
or
or
nop
push
mov
xchg
pop
addr16
adc
sub
and
cmp
loop
dec
les
sbb
int
xchg
imul
call
jge
and
ins
cmps
sbb
inc
ret
pop
mov
mov
add
std
(bad)
rcr
cli
cwde
out
iret
push
rcl
jle
test
lea
cmp
fldenv
cwde
and
fdivr
cmp
xor
inc
push
jle
xchg
xor
or
pop
outs
inc
jl
mov
jb
xchg
or
mov
ret
bnd
in
pop
test
out
jnp
mov
sbb
rcr
dec
mov
test
add
and
es
push
(bad)
push
add
push
add
pop
dec
sahf
adc
sbb
icebp
cmp
ss
and
ficomp
sub
push
jmp
(bad)
cmps
ror
scas
or
pop
push
push
or
aam
fcmovnbe
push
ds
cmp
mov
ret
and
xchg
es
mov
test
ds
sbb
mov
jnp
(bad)
rol
test
cmc
dec
scas
into
scas
jnp
sub
jne
pop
xor
iret
mov
jmp
jge
inc
mov
xor
lock
data16
scas
dec
mov
sub
mov
clc
sbb
out
in
and
movs
jp
int
jne
inc
and
or
add
cwd
fmul
mov
cmp
popa
mov
and
js
adc
gs
lock
sbb
pop
popf
push
or
xchg
xor
test
call
iret
xlat
stos
cmp
sahf
pop
ins
cld
call
inc
inc
test
test
sub
pop
retf
mov
inc
pushf
sbb
cli
jle
or
or
sbb
jno
sbb
fld1
std
sub
inc
popf
xor
lds
icebp
rcl
bound
in
shr
mov
and
leave
sub
xor
sbb
pop
(bad)
dec
loope
mov
clc
imul
test
add
idiv
cwde
lea
fs
std
pop
(bad)
scas
push
xchg
push
dec
inc
sub
rol
das
test
cmp
mov
inc
lea
movs
shl
sbb
xor
in
popf
cld
cmp
pop
int3
jge
cmp
jae
(bad)
jl
std
test
imul
mov
xor
popf
mov
mov
outs
fdivr
nop
push
std
mov
idiv
cmp
arpl
inc
inc
out
fild
xor
cmp
mov
pop
jb
std
sbb
pop
int3
fwait
sti
sbb
or
stos
inc
leave
arpl
mov
xchg
adc
sub
sbb
jne
div
mov
lods
cmp
mov
mov
sub
and
mov
outs
and
(bad)
jnp
(bad)
jno
mov
push
adc
and
pop
push
ret
repnz
pop
(bad)
mov
fisttp
(bad)
mov
push
xor
sar
and
push
fbld
mov
sahf
ffreep
dec
ins
loopne
loope
out
xor
mov
or
mov
call
pusha
aas
xchg
inc
call
jno
lds
nop
jne
rol
fs
cld
sbb
push
leave
adc
(bad)
call
mov
add
bound
push
movs
pop
repz
pop
sbb
or
pushf
sub
xchg
ror
xchg
jae
jno
mov
test
sbb
push
dec
lock
jbe
test
sbb
ror
xchg
jne
pop
imul
fs
lods
sub
movs
sub
lods
shl
mov
mov
push
push
mov
rcr
sbb
stc
dec
ficomp
retf
mov
mov
iret
adc
scas
cli
dec
int
jge
sbb
fdivr
pop
push
adc
sti
add
push
pop
in
movs
imul
cmp
xor
dec
mov
lahf
movs
push
xor
lds
test
cs
rol
pop
mov
mov
sahf
jmp
ret
emms
(bad)
fmul
in
sbb
jecxz
test
lea
cmp
dec
add
dec
pop
scas
cmp
cmps
fadd
(bad)
movs
push
dec
stos
mov
dec
inc
addr16
push
ret
inc
mov
movs
add
dec
(bad)
push
stos
push
adc
adc
pop
hlt
jae
sbb
loop
pop
xchg
arpl
mov
mov
jl
jo
pop
fstp
sbb
jnp
cmp
cmp
mov
inc
or
inc
push
sub
mov
jge
mov
retf
out
pusha
xchg
push
xchg
fisttp
jnp
or
lea
call
push
lock
adc
scas
mov
mov
lods
xchg
xchg
stc
imul
ds
ds
jp
ds
loopne
icebp
mov
or
clc
and
xchg
repz
jmp
icebp
(bad)
int3
adc
mov
cmp
jb
loopne
mov
jecxz
ins
sub
jmp
pop
in
lods
loop
out
pop
mov
mov
jno
mov
mov
movs
out
jae
cs
jmp
mov
add
loopne
push
lea
rcl
(bad)
cmp
jno
mov
cmp
add
repz
and
out
jg
nop
sbb
pop
addr16
ja
loopne
push
add
adc
dec
pop
xchg
dec
jns
cs
dec
into
mov
dec
outs
pop
inc
cdq
pushf
sbb
das
rol
(bad)
pop
jno
outs
clc
mov
fldl2e
pushf
sbb
mov
ror
scas
jmp
nop
mov
push
add
mov
adc
in
sub
inc
cs
call
or
dec
inc
icebp
cmps
imul
or
cmp
in
xor
scas
cmp
adc
xchg
or
add
sub
inc
out
popa
ja
(bad)
sbb
and
ins
mov
retf
scas
not
call
aam
sub
outs
mov
push
jbe
outs
mov
adc
push
add
fbstp
mov
lods
mov
xchg
sub
out
movs
ret
pop
retf
call
retf
fist
popf
lock
nop
or
vdivpd
cld
icebp
sbb
and
cmp
push
aad
popf
xchg
mov
mov
test
sbb
(bad)
adc
je
je
sub
add
add
in
add
sub
sub
test
ds
(bad)
(bad)
scas
sub
scas
mov
fs
mov
xchg
ret
test
dec
and
add
lods
nop
sub
fld
cmps
jg
pop
mov
jecxz
xlat
test
inc
dec
mov
sub
pop
jmp
aam
mov
imul
arpl
mov
rcr
jmp
and
jo
pop
outs
mov
jne
push
mov
sbb
push
pop
rol
scas
cs
mov
mov
mov
xor
addr16
out
inc
sbb
(bad)
mov
ja
cwde
dec
lahf
add
sar
xchg
fdiv
jno
pop
fldcw
pusha
rol
rcr
popa
cmps
pop
mov
outs
imul
addr16
xchg
popa
loopne
mov
jo
pop
lds
lock
rcr
jmp
dec
scas
(bad)
adc
add
test
loope
dec
mov
mov
mov
push
test
xchg
xor
maxps
push
mov
mov
jmp
mov
jge
jne
div
mov
mov
popf
cmp
pop
push
xor
sti
fild
addr16
cs
adc
imul
mov
inc
ret
addr16
cmp
xor
xchg
fsubr
nop
jmp
mov
dec
xchg
lds
xor
neg
out
ss
and
les
xchg
push
xchg
fdivr
add
mov
ret
int
popf
lahf
stos
stos
inc
pushf
fdiv
mov
sbb
pop
test
push
adc
mov
or
jp
mov
lahf
int
pop
dec
iret
popf
scas
mov
(bad)
dec
sbb
fnstenv
bound
and
mov
das
mov
bound
fnstsw
daa
outs
mov
std
or
icebp
repnz
scas
shl
div
cli
xlat
jmp
inc
retf
pop
ja
add
add
or
or
ds
xchg
jae
call
xchg
jo
cmp
stos
cmp
stc
int3
pop
int3
xor
int3
adc
and
aad
gs
push
ficomp
pop
fidiv
mov
cmp
dec
fdivr
push
aas
jg
call
lods
iret
mov
jmp
xor
in
call
stos
jge
outs
mov
xlat
icebp
pop
fadd
(bad)
cmp
retf
dec
ss
mov
fsub
or
xchg
jb
enter
sub
out
pop
pop
or
lds
push
lahf
sub
sbb
ss
inc
jno
stos
std
xchg
data16
jmp
adc
sub
ja
in
mov
sub
movs
call
out
xor
sub
test
adc
fld
xchg
or
aas
mov
loope
mov
stc
add
mov
adc
xchg
add
mov
add
add
jb
fwait
push
mov
add
sbb
stos
xchg
push
enter
sahf
push
ficom
jge
xor
aam
outs
xchg
cwde
push
pop
inc
in
sub
mov
mov
rol
es
test
lea
mov
xor
mov
in
or
jb
xor
ins
mov
pop
test
lahf
clc
pop
ret
je
test
outs
icebp
mov
ret
out
pop
mov
fldcw
(bad)
cmp
xchg
mov
jns
mov
inc
fld
mov
mov
sub
push
pusha
push
(bad)
pop
mov
mov
fmul
out
pop
push
mov
and
push
mov
mov
mov
repz
mul
cmp
mov
push
jl
mov
rcl
jns
(bad)
mov
pop
and
push
cwde
dec
xchg
pop
test
xor
repnz
sar
pop
retf
xchg
pop
sbb
sbb
pushf
mov
les
sahf
mov
mov
pop
ins
xchg
push
sti
rcl
stos
and
addr16
mov
mov
ins
call
and
nop
inc
adc
cmps
daa
pop
in
fimul
dec
sub
in
sub
bound
jmp
stc
xor
std
sub
idiv
sbb
add
loope
dec
mov
ret
jl
aas
cld
jno
push
sti
imul
mov
jle
stos
fs
repz
and
jle
ins
cmp
jp
fist
mov
(bad)
sbb
int
jno
or
push
ror
jge
fwait
xchg
sti
sub
out
add
jle
outs
xchg
pop
movs
jo
pop
mov
push
xchg
sahf
jg
imul
push
and
add
inc
into
cdq
pop
outs
inc
fdivr
shr
mov
dec
ins
pop
rol
in
or
loope
in
sub
test
pop
pusha
dec
repz
and
mov
jmp
call
sub
adc
mov
pushf
cdq
test
fnstenv
ds
(bad)
mov
not
fld
sbb
gs
push
mov
ds
fstp
ins
fadd
into
mov
cmps
test
jle
or
sbb
jmp
call
fnstenv
ret
loopne
aad
lea
add
cmp
mov
xchg
ja
ins
stos
sbb
cmp
adc
push
pop
inc
sbb
outs
xor
dec
mov
dec
(bad)
mov
repz
movs
loop
adc
jmp
(bad)
push
add
lock
fsubr
ss
add
pop
sar
fsubr
daa
xor
mov
jmp
or
add
test
add
scas
dec
mov
xor
cmp
or
(bad)
stos
add
push
push
mov
mov
mov
shr
sbb
out
rcr
mov
jne
pusha
cmp
xchg
jnp
pop
test
popa
loop
(bad)
cli
sbb
in
xchg
sbb
les
fstp
mov
adc
test
cmp
dec
push
fdiv
enter
daa
sub
(bad)
cmp
iret
push
xor
in
xchg
push
mov
and
add
rcr
inc
cmc
shl
inc
xchg
xor
loopne
retf
cmps
ror
mov
cs
ins
inc
scas
popf
outs
pop
(bad)
or
xchg
mov
ret
jge
lahf
mov
test
(bad)
in
and
mov
aas
xor
enter
loop
repz
mov
pop
div
test
fcomp
fidiv
call
imul
retf
xchg
push
adc
scas
test
call
jne
es
sti
jp
dec
mov
rol
call
inc
dec
ja
cli
adc
aad
jl
mov
and
sti
inc
pop
and
fadd
cdq
popf
imul
sub
addr16
lods
addr16
gs
xchg
fwait
call
lahf
cwde
add
lods
adc
rcr
xchg
jge
mov
(bad)
mov
adc
mov
push
adc
push
loope
jae
out
pop
in
fisub
jnp
aad
iret
inc
push
push
push
movs
mov
adc
ja
adc
sahf
sub
push
inc
mov
xor
loope
rcr
loope
test
retf
ja
adc
fwait
cdq
arpl
jne
aad
sub
pop
adc
icebp
and
stos
shld
mov
jno
sar
int3
mov
dec
jp
push
shl
loop
mov
xor
sbb
mov
adc
cmp
mov
pop
fptan
mov
sbb
loop
inc
jns
sub
ret
jno
call
int
fistp
or
xor
jl
push
(bad)
xlat
ds
pusha
dec
mov
imul
dec
cdq
and
xchg
test
data16
adc
pop
outs
stos
loope
out
jo
mov
pushf
mov
and
sbb
sbb
daa
into
retf
sbb
and
aas
lahf
out
stc
in
pushf
jmp
xchg
es
sbb
js
mov
mov
push
push
push
cmps
jno
xchg
call
cmp
pop
sub
push
arpl
adc
sbb
push
pop
cmps
inc
xor
imul
shr
dec
or
or
in
pop
push
dec
cli
pop
(bad)
aam
daa
mov
adc
sub
cwde
and
frstor
dec
or
inc
outs
inc
mov
jecxz
movs
add
stos
les
loope
sahf
adc
jecxz
xor
mov
xor
dec
shl
adc
xor
cmp
xor
out
jb
dec
dec
pop
imul
mov
aad
mov
leave
inc
mov
out
xor
cmp
fnstenv
push
xor
sti
repnz
add
mov
div
ja
scas
mov
movs
jecxz
dec
pushf
xchg
icebp
shl
sub
popa
pop
fcmovnu
xor
jmp
fpatan
xor
mov
fucomip
mov
xor
jne
xlat
movs
loop
pop
sub
inc
mov
dec
xor
fnstenv
mov
and
retf
gs
mov
stc
and
jge
or
sbb
xchg
stos
jne
loope
adc
int3
lods
out
ins
and
sub
dec
xchg
outs
dec
test
xchg
and
fwait
cmp
shl
cmc
inc
dec
jp
mov
out
js
(bad)
and
pop
xchg
inc
xchg
fmul
xor
cmc
inc
push
cdq
adc
enter
gs
mov
xchg
mov
aam
xlat
pop
repnz
retf
pop
adc
test
shr
jecxz
or
mov
dec
es
test
dec
sbb
mov
movs
and
packuswb
push
dec
mov
xchg
or
xchg
mov
inc
ds
mov
mov
aam
bound
ret
ja
pushf
fwait
test
add
fsub
mov
pusha
(bad)
mov
aam
aad
sub
(bad)
imul
loope
sbb
iret
lds
sbb
aas
and
push
push
mov
xor
adc
xchg
and
cpuid
das
mov
arpl
push
dec
push
push
mov
loop
pop
adc
iret
mov
mov
ins
push
cmp
mov
test
pop
jle
add
push
inc
leave
sar
mov
ss
jp
cmp
jg
leave
sbb
adc
add
xor
mov
mov
mov
lahf
or
(bad)
pop
xor
pusha
(bad)
mov
iret
add
scas
cli
xchg
aam
into
pop
stc
fcom
je
xchg
es
adc
mov
push
xor
and
push
dec
or
icebp
or
outs
fimul
cmp
push
sbb
outs
sub
aas
inc
idiv
xchg
jecxz
gs
cli
call
mov
cmp
jle
or
enter
aad
pop
lock
sbb
cmp
call
sub
mov
call
xchg
sbb
fbld
jl
cs
lahf
fdivr
jp
xchg
stc
mov
sub
sti
push
shl
lds
or
mov
adc
fistp
in
mov
repz
cmps
daa
xchg
jmp
std
xchg
mov
xchg
and
xchg
dec
add
daa
add
test
pop
pop
sub
dec
add
pop
in
gs
fnstenv
mov
jno
inc
dec
out
inc
mov
sbb
push
stos
rcl
and
xchg
ins
inc
les
pushf
int
rcl
ja
fs
sbb
movs
pop
bound
ficomp
jmp
out
in
sti
xor
loope
xchg
xlat
aaa
xor
repz
scas
cmp
(bad)
mov
push
cmps
mov
dec
sbb
lahf
mov
pop
lock
push
and
daa
aas
mov
cli
push
mov
iret
mov
add
jle
pop
sar
stc
and
adc
dec
(bad)
lods
and
ja
scas
imul
movs
cmc
sbb
out
xchg
pop
pop
rcr
sti
loope
jecxz
xor
stos
xor
(bad)
jg
es
pop
and
mov
jge
mov
add
nop
scas
push
mov
lds
aam
mov
fld
adc
lock
mov
push
cmp
xchg
xchg
stos
adc
push
dec
jg
fsubr
jl
arpl
or
movs
arpl
mov
mov
jl
cwde
adc
pushf
out
add
adc
and
adc
loope
ror
(bad)
pop
push
inc
repnz
xchg
mov
xor
stos
adc
cmp
call
les
xor
mov
daa
xor
dec
xor
(bad)
dec
mov
popf
mov
xor
test
(bad)
rcr
cdq
push
pop
int3
mov
push
loope
ret
retf
cwde
cmp
push
mov
fdivr
mov
mov
or
cmp
mov
div
dec
adc
enter
jg
in
inc
bound
mov
scas
dec
lahf
jp
push
jge
mov
imul
push
mov
dec
sbb
shr
ret
mov
or
out
fs
sub
aad
pop
dec
mov
std
mov
sbb
shl
in
xor
fucomp
jl
sub
ret
mov
(bad)
out
mov
dec
add
in
icebp
add
or
aas
repz
mov
daa
push
imul
xor
xor
dec
and
cmp
push
cmp
fwait
popf
mov
xchg
jecxz
cld
mov
or
retf
in
shl
mov
jo
shl
test
or
xchg
cli
mov
test
js
enter
mov
mov
clc
div
jmp
xor
push
adc
xor
clc
retf
sbb
sbb
movs
sub
xchg
inc
sti
adc
add
ret
fs
dec
push
push
lds
jge
cmp
cld
(bad)
sbb
fcmovne
pop
shr
fnstcw
out
and
ins
stc
jp
pop
push
out
das
out
gs
inc
dec
pop
arpl
sbb
xor
(bad)
pop
add
scas
jge
sub
push
pop
jecxz
ss
movs
or
iret
and
out
es
mov
lea
mov
les
mov
test
mov
and
cmps
xchg
jg
push
sub
and
push
push
inc
fld
mov
cdq
or
adc
movs
pop
cwde
and
push
mov
xchg
push
jb
mov
dec
div
mov
hlt
push
test
jmp
inc
xchg
sbb
outs
mov
mov
pop
jg
pop
push
and
fistp
cmp
ror
das
ja
xchg
js
cwde
test
scas
sub
out
xor
setp
and
inc
fwait
inc
ss
ss
imul
sbb
in
sbb
pop
scas
and
and
(bad)
pop
mov
cmp
inc
out
clc
in
bound
push
movs
lahf
add
mov
aaa
fs
test
inc
mov
leave
push
mov
adc
fwait
or
pop
mov
sbb
jl
cmp
or
jne
or
mov
ja
test
js
movsx
imul
sub
out
jbe
in
pop
jns
out
cmps
repnz
adc
xchg
inc
xor
scas
loopne
dec
jmp
aam
aad
dec
pushf
pop
daa
adc
cmp
xor
xor
xchg
(bad)
pushf
int
and
inc
xor
jmp
inc
lds
xchg
or
pop
xchg
imul
mov
repz
pop
mov
call
stc
ja
repnz
int
mov
nop
dec
pop
dec
int
sub
gs
out
pop
out
xchg
mov
repnz
xor
inc
push
sub
call
jb
adc
imul
rcl
xor
inc
aaa
aaa
xor
add
clc
mov
scas
les
inc
sbb
cmc
outs
daa
and
stc
int3
cld
jmp
cwde
inc
rcr
push
into
aaa
das
or
aaa
pop
dec
inc
xchg
or
test
add
test
jbe
jge
div
(bad)
ficom
jl
ret
scas
ins
out
icebp
cmp
movs
int
push
pop
mov
push
push
ds
lods
out
jo
and
jbe
daa
lock
xchg
and
(bad)
mov
inc
inc
pop
jns
pop
fidivr
aaa
fdiv
scas
movs
xchg
sbb
jbe
nop
mov
sbb
mov
jmp
jp
icebp
int
mov
cmp
dec
push
movs
push
pushf
adc
or
sahf
in
(bad)
cld
mov
retf
mov
test
enter
push
xchg
out
les
or
inc
push
xchg
push
(bad)
pop
xchg
test
push
sahf
in
pop
pop
test
rol
imul
cmp
mov
outs
xor
out
test
scas
adc
pop
inc
add
aas
and
mov
push
outs
push
(bad)
(bad)
nop
lock
ret
sbb
lahf
add
mov
lock
iret
stos
dec
stos
xchg
pop
ja
rcr
cmp
sbb
push
pop
aaa
mov
stc
outs
push
push
aaa
clc
fistp
adc
pextrw
jne
cmc
and
push
push
pop
xchg
dec
mov
and
addr16
cmp
addr16
mov
test
sbb
icebp
or
sbb
lock
jbe
sub
mov
das
push
jmp
adc
mov
add
mov
mov
inc
or
leave
xchg
ja
(bad)
sbb
clc
add
cmc
fs
jp
(bad)
sub
in
rcr
es
dec
push
sar
cmps
mov
mov
and
or
push
call
fwait
jge
sti
cld
add
sub
mov
mov
adc
mov
adc
add
imul
ins
(bad)
das
mov
js
dec
dec
leave
adc
jo
jae
fist
sub
test
in
movs
jne
mov
shl
cmp
shl
enter
dec
mov
rcr
test
dec
xor
(bad)
push
popa
imul
shl
outs
sahf
(bad)
fsubr
stc
mov
bswap
(bad)
jp
cmps
jae
mov
je
jnp
mov
(bad)
pop
pop
aad
mov
pusha
jp
push
inc
out
mov
cmc
pusha
mov
inc
xor
stc
inc
pop
xor
(bad)
mov
imul
fdivr
xor
xlat
pop
daa
adc
pop
or
in
mov
neg
aas
loop
(bad)
movs
mov
or
(bad)
(bad)
lods
push
call
in
(bad)
mov
sbb
call
fs
(bad)
pop
or
push
loopne
cli
sub
xchg
jmp
leave
test
(bad)
mul
sahf
jo
inc
cli
in
push
scas
aam
mov
ins
pop
icebp
stos
test
inc
inc
xchg
pop
and
scas
shl
mov
jl
jne
cmp
and
xchg
inc
mov
cmp
push
sbb
inc
aaa
gs
es
inc
pop
sub
xlat
jp
jb
cmp
mov
sub
bound
adc
cmc
xor
push
xor
movs
ficom
int
xchg
xor
xchg
test
fistp
sbb
xor
cli
outs
mov
cld
mul
jo
xor
and
add
xor
xor
fistp
sahf
pop
xchg
adc
mov
inc
pop
or
call
cmp
jge
xchg
loop
fdiv
push
call
jno
mov
inc
jae
sbb
push
jno
mov
push
aaa
mov
jnp
jne
mov
or
stos
push
cmc
out
jmp
shr
mov
jno
les
loope
push
or
iret
push
sete
dec
into
or
push
pop
mov
into
hlt
test
jecxz
in
xchg
mov
inc
add
xchg
inc
cmp
xchg
and
jmp
dec
xor
jge
adc
cmp
sar
imul
mov
jge
adc
jne
aad
add
pop
mov
cwde
(bad)
fisub
mov
out
mov
pusha
jp
mov
and
and
movs
test
frndint
fild
mov
aam
cli
fs
loop
sbb
hlt
cmp
cmp
dec
sub
retf
mov
pop
mov
and
xchg
dec
add
in
mov
daa
sqrtps
leave
add
aaa
adc
in
or
push
sbb
mov
and
mov
and
pop
mov
les
pop
rcr
cmp
xchg
out
mov
cwde
mov
xor
cmp
xchg
addr16
push
test
scas
addr16
push
scas
cli
bound
pop
cmp
jp
sbb
add
call
add
xor
or
into
mov
xchg
(bad)
hlt
jno
adc
pop
bound
adc
clc
xchg
in
int
add
jns
int
arpl
cmc
sub
cld
xor
stc
(bad)
sbb
or
jl
adc
rcr
jmp
sbb
mov
fwait
push
sbb
(bad)
imul
cld
aaa
xchg
adc
int
jp
sti
or
repnz
mov
sbb
ins
fistp
push
cdq
xor
enter
mov
test
xchg
xchg
mov
add
push
aad
or
mov
mov
or
and
dec
add
sbb
ret
sbb
dec
out
mov
test
mov
inc
mov
in
fwait
sti
jns
and
sbb
sub
mov
aas
jmp
mov
sbb
add
aas
sbb
sub
add
or
push
je
pop
retf
xor
cmp
mov
outs
jg
inc
ror
mov
retf
or
aad
nop
call
(bad)
mov
sub
movs
fwait
in
adc
cwde
mov
cmp
sub
lods
mov
xchg
mov
data16
mov
test
jo
popf
xchg
int
pop
mov
sahf
mov
mov
jmp
fld
xor
aad
cmp
add
dec
dec
cmp
stos
in
(bad)
push
test
repnz
sahf
lea
jge
sti
sbb
fadd
sub
xchg
sub
and
out
sbb
pop
xor
test
cld
push
xchg
cld
xchg
in
fucomip
push
aaa
push
sub
xor
in
cmps
jo
sub
or
cmp
rcr
adc
pop
lock
inc
jmp
xchg
sub
mov
call
(bad)
jle
(bad)
adc
adc
sbb
je
(bad)
dec
lods
test
and
in
shl
int3
mov
pop
test
es
inc
mov
inc
xchg
xor
mov
call
aaa
pop
sbb
ffreep
mov
xchg
hlt
mov
push
adc
and
(bad)
pop
in
fimul
hlt
clc
in
dec
outs
clc
xchg
movs
mov
sub
cmps
pop
repnz
dec
movs
push
and
rcr
xor
adc
cmp
xchg
xchg
outs
lods
mov
je
adc
cmp
add
adc
lds
imul
call
push
sbb
mov
xchg
mov
or
add
dec
call
xor
xor
inc
and
popf
add
addr16
mov
aaa
idiv
dec
mov
in
xor
ror
punpckldq
mov
into
mov
cmp
cdq
mov
inc
dec
dec
neg
test
in
xchg
adc
adc
xchg
enter
mov
sub
dec
push
sti
and
cmp
and
add
xor
push
arpl
push
(bad)
mov
inc
pop
rcl
pop
and
(bad)
lods
loope
mov
mov
xchg
lds
push
int3
xor
loopne
ret
dec
jmp
stos
rol
jmp
fcomp
xor
gs
fcmovnbe
dec
pop
add
jp
pop
adc
pop
jecxz
movs
bound
mov
jl
std
out
and
outs
lock
mov
jge
fnclex
dec
mov
dec
mov
fld
scas
int
outs
jne
ret
sbb
aad
sar
add
jle
mov
adc
outs
xchg
xlat
in
adc
lahf
xor
mov
pop
cwde
movs
stc
mov
jle
jp
pop
dec
icebp
dec
lods
fcmovnbe
movs
mov
mov
out
pop
loop
je
out
adc
push
jns
test
call
push
jb
push
pop
and
or
retf
push
out
ins
mov
jbe
popf
ins
inc
pop
xchg
cmp
inc
mov
or
(bad)
fdiv
sbb
daa
jle
xchg
adc
cmp
fwait
sbb
mov
adc
cmps
addr16
cmp
mov
stos
mov
pop
pop
mov
in
adc
pop
pusha
jnp
ror
adc
add
mov
and
daa
imul
movs
mov
or
lock
ja
jns
inc
push
xchg
push
sub
pop
mov
adc
ja
fwait
mov
aaa
lods
xchg
nop
nop
call
cmp
out
jmp
shl
inc
maskmovq
mul
ins
outs
mov
sub
cs
movs
clc
inc
test
pusha
fsubr
and
repz
dec
repnz
fsubr
mov
scas
mov
cs
in
or
dec
es
pop
mov
inc
(bad)
in
and
das
pop
inc
mov
(bad)
xor
sub
cdq
adc
or
fcomi
lds
ret
inc
dec
arpl
das
add
into
push
add
jo
xor
mov
jmp
sub
pop
lea
cmp
shl
in
fsubr
pop
cmc
xchg
gs
jbe
fcmovu
js
call
sti
jmp
mov
mov
cli
inc
mov
fwait
movs
sbb
pop
adc
cmp
xlat
push
dec
std
ins
push
cmp
test
inc
pop
lock
adc
pop
inc
pop
inc
push
jp
xchg
fcmovb
sub
cli
ret
int
xor
mov
mov
scas
xchg
aas
jb
mov
mov
enter
push
ror
push
shl
sti
les
int
js
mov
retf
jmp
xchg
inc
xchg
pop
pop
rcl
add
out
add
mov
jl
xchg
shl
adc
add
aas
cmp
mov
add
xchg
lods
jne
ret
rcl
repnz
stc
pop
jmp
test
enter
pop
xor
pushf
enter
cld
adc
je
mov
add
and
push
mov
adc
jg
mov
in
das
test
cmp
push
mov
mov
and
out
sbb
stos
cmc
les
mov
dec
aam
jmp
lock
xor
sbb
push
inc
call
cmp
inc
mov
jmp
pushf
jmp
jle
pop
stos
mov
mov
cmp
pop
or
ja
repz
mov
fadd
xor
mov
retf
xchg
dec
sub
adc
cmc
xlat
loopne
jbe
icebp
test
(bad)
jle
loopne
push
ret
rcl
icebp
loopne
icebp
adc
ja
jl
leave
dec
aaa
(bad)
lahf
test
cld
imul
dec
sub
mov
leave
cs
(bad)
loope
(bad)
xor
ins
push
push
jmp
retf
std
jmp
or
cmp
and
mov
ss
adc
lods
pop
aas
inc
mov
jmp
mov
jmp
cmc
mov
inc
fcomp
jl
add
sub
mov
dec
adc
cmp
mov
dec
and
nop
shl
ret
push
repz
dec
push
mov
popf
dec
xor
lods
jbe
mov
cmp
clc
int
inc
mov
pusha
aam
jecxz
xchg
mov
pop
mov
xor
dec
les
dec
(bad)
(bad)
jg
dec
mov
mov
sub
push
mov
je
mov
push
test
arpl
ins
cwde
test
(bad)
fmul
jne
cli
inc
cmp
test
adc
sub
xchg
daa
inc
ror
imul
(bad)
xor
shr
int3
fdivr
jno
inc
lods
or
jmp
mov
mov
xchg
outs
xor
fld
js
mov
push
scas
lds
xchg
shl
cmp
shl
ja
(bad)
mov
pmulhw
daa
ret
lods
retf
xchg
dec
xor
aaa
adc
fcom
xor
out
cmps
add
mov
or
push
xlat
sti
out
(bad)
or
sar
mov
jmp
push
lahf
cmp
mov
sub
inc
dec
pop
xor
pop
mov
mov
mov
mov
and
popf
ret
mov
outs
dec
cmp
test
xchg
sub
add
cli
clc
shr
scas
pop
jl
sub
adc
sbb
inc
push
in
enter
and
not
repnz
repz
movs
inc
enter
mov
mov
mov
pop
fnstenv
jbe
mov
shr
add
adc
xor
out
mov
push
mov
push
test
xchg
out
mov
leave
ja
(bad)
inc
(bad)
out
popf
dec
jo
repz
loop
pop
push
xchg
in
int
js
lds
sub
frstor
aaa
lock
adc
lods
icebp
pushf
gs
(bad)
mov
scas
pop
mov
add
pusha
lea
inc
xor
add
stos
and
push
jmp
or
mov
outs
sbb
and
xor
pop
add
pop
in
xor
add
outs
dec
mov
jp
mov
cmp
mov
cmp
movs
xlat
lahf
inc
pushf
or
push
gs
test
ror
cmp
mov
xchg
jno
jg
xchg
out
sub
dec
scas
jmp
repnz
add
test
into
jmp
ret
jl
aad
xchg
lock
iret
push
xchg
cmps
pop
fwait
inc
in
pop
shl
sub
addr16
ret
pop
int3
push
mov
push
test
je
or
xchg
call
push
and
cmps
(bad)
je
inc
and
xchg
fnstenv
cmp
ja
push
mov
addr16
adc
sub
pop
push
outs
adc
sahf
sbb
add
les
ror
and
gs
aaa
fwait
cld
mov
bound
rcr
loope
sub
mov
lods
add
inc
into
sbb
mov
dec
push
daa
xor
adc
call
push
jbe
loop
cs
dec
sbb
test
xchg
push
push
scas
push
out
test
xor
sub
mov
jg
lar
loop
mov
adc
adc
mov
int
lea
sub
inc
mov
or
movs
sub
push
pop
movs
pop
adc
mov
daa
mov
pop
loop
mov
mov
sahf
xor
mov
ds
scas
jne
rol
cmps
jo
dec
icebp
and
retf
fmul
mov
jmp
mov
sub
ret
and
neg
pusha
pop
not
cmps
enter
jns
mov
loope
dec
cwde
add
test
dec
jecxz
pop
ss
add
sbb
xchg
icebp
dec
xlat
push
call
dec
and
es
add
xchg
xchg
mov
ds
aas
rcr
push
mov
nop
mov
mov
sbb
adc
mov
and
clc
pop
shr
stc
rol
sub
stos
arpl
out
and
imul
js
push
xor
sbb
fld
cmps
lahf
pop
jnp
xchg
add
add
clc
push
jae
(bad)
test
in
(bad)
repz
test
int
outs
push
ds
retf
jp
and
jo
jmp
jmp
pop
dec
mov
popa
mov
jb
repnz
pusha
sub
mov
mov
jp
(bad)
pusha
(bad)
nop
cmp
and
bound
add
aad
add
push
mov
fdivr
ja
jg
fs
cdq
loopne
outs
cdq
cmovns
nop
pop
cmp
cmp
mov
inc
mov
adc
hlt
pop
jmp
dec
and
cs
xchg
and
jnp
push
(bad)
jle
inc
mov
ja
push
jb
xchg
scas
in
mov
mov
push
mov
mov
adc
inc
and
cmps
retf
les
push
dec
or
inc
push
mov
(bad)
jne
mov
gs
and
aam
je
sub
dec
mov
adc
xor
into
iret
out
xchg
add
es
fdiv
mov
push
sub
dec
rep
mov
cmp
daa
adc
sbb
int
xchg
sbb
pop
jns
and
push
cmp
jb
mov
inc
push
adc
bound
mov
mov
mov
fcmovne
or
inc
or
popa
fist
addr16
inc
retf
(bad)
sar
dec
pushf
shl
pop
or
les
mov
ret
movs
push
lods
nop
aam
es
ja
cmp
mov
ja
stos
out
xchg
mov
enter
sbb
and
pop
test
lock
jae
ror
sub
fild
imul
fistp
mov
pop
adc
xchg
stc
popf
pop
(bad)
call
push
or
xor
neg
cmp
mov
int
std
dec
inc
jecxz
je
xchg
enter
sbb
out
mov
shl
(bad)
add
inc
popf
or
adc
fild
mov
lods
jnp
iret
and
add
push
xor
sub
jmp
sub
mov
aas
xor
outs
mov
out
test
pop
mov
xchg
pop
jnp
cmp
clc
cmp
ins
jae
(bad)
aam
aas
in
hlt
pop
adc
enter
pop
xor
pop
pop
shr
(bad)
or
inc
xor
push
push
les
pop
push
mov
scas
mov
push
sub
pushf
mov
data16
pop
jns
and
xchg
push
mov
pop
lea
adc
push
inc
mov
cmp
rcl
daa
rcl
cmc
fisttp
add
xchg
aaa
and
or
inc
rcr
test
dec
pop
and
mov
sbb
stos
(bad)
mov
inc
dec
sub
add
arpl
icebp
sub
dec
adc
xor
push
mov
(bad)
xchg
popf
sub
inc
lock
sbb
mov
sub
test
or
xor
pop
pop
inc
cmp
arpl
push
jnp
(bad)
sar
loope
enter
scas
popa
jecxz
nop
jecxz
das
in
popa
fs
dec
adc
adc
lock
je
mov
aaa
jp
xchg
fmulp
mov
add
es
inc
ror
movs
dec
adc
xchg
loope
movs
ja
mov
aam
push
mov
cmp
test
mov
call
lea
(bad)
lock
popa
mov
sbb
xor
scas
jnp
sub
xchg
push
in
xor
lahf
xchg
xor
jmp
in
cmc
fcmovnu
dec
mov
lahf
and
push
pusha
sub
je
or
ja
jg
mov
pop
sub
hlt
push
push
scas
and
int3
jb
and
mov
sbb
int3
das
inc
pop
popa
pop
inc
pop
add
enter
loop
adc
mov
icebp
mov
push
dec
dec
add
test
dec
xor
call
gs
cmps
hlt
push
cmc
int
and
cmp
mov
js
repnz
pop
push
leave
lods
xor
xor
fnstsw
fwait
pop
ins
arpl
dec
sub
fcom
pop
sub
cmp
pushf
jmp
rol
jge
sahf
clc
cmp
inc
sahf
inc
aaa
pop
pop
jne
mov
xor
imul
jle
mov
daa
and
dec
ds
ins
or
push
jmp
inc
pop
adc
les
mov
mov
ret
sbb
add
sbb
cdq
out
mov
ror
sub
or
dec
and
int3
arpl
pop
out
xor
cmp
and
xchg
push
lds
push
clc
xor
(bad)
fsubr
pop
adc
clc
(bad)
mov
in
and
or
push
adc
jns
or
sar
data16
xchg
ficom
add
mov
fdivp
pop
dec
xchg
cmp
push
aam
push
and
jle
xchg
add
mov
sub
and
nop
cmc
jl
out
movs
inc
jno
call
mov
or
adc
and
push
adc
lods
mov
in
jae
mov
in
in
adc
cli
xchg
mov
outs
jmp
sub
lods
cwde
fidiv
xchg
push
outs
jg
out
(bad)
and
std
inc
lock
mov
fist
fucomi
add
test
hlt
sahf
je
sbb
jae
pop
das
rep
aad
mov
inc
out
pop
(bad)
fisttp
mov
scas
ss
popa
dec
(bad)
mov
push
jae
aas
call
in
rcl
test
popa
faddp
fwait
lods
pop
call
pop
pop
xor
xchg
sub
rcl
enter
sub
in
push
sub
jno
fcomi
stc
call
mov
xor
push
fst
call
call
mov
call
jo
pop
ret
(bad)
daa
dec
js
in
and
mov
loope
(bad)
mov
sbb
xchg
or
adc
mov
xchg
push
jo
jecxz
or
jne
retf
cmp
cmp
dec
add
ja
cmp
shl
imul
xchg
aad
cmc
pop
pop
popf
xchg
inc
shl
jns
push
out
mov
jg
mov
std
bound
loopne
xor
pop
test
nop
push
adc
sahf
sub
aaa
fwait
mov
jge
mov
enter
in
icebp
jl
in
out
cmp
inc
push
or
dec
addr16
ds
gs
out
daa
das
or
push
lods
jnp
ret
pop
sar
or
cmp
(bad)
mov
out
push
in
push
mov
xor
nop
test
jp
daa
aad
jecxz
retf
push
fist
mov
cmps
(bad)
mov
jmp
fs
jg
xchg
add
shl
idiv
fstp
mov
xchg
aad
stc
add
andnps
ja
movs
ins
pop
scas
cmp
push
fcom
and
xor
push
or
int3
jne
outs
add
in
and
jns
ss
push
cmp
ins
cmp
sub
adc
retfw
cmp
or
adc
pusha
sub
lahf
and
in
adc
call
popa
mov
push
dec
and
mov
cmp
pop
fisttp
or
xor
sti
ss
psubsw
inc
rol
(bad)
mov
push
pop
retf
ja
xchg
fs
pop
adc
dec
stc
test
push
jl
pop
mov
inc
mov
cmps
pop
or
movs
adc
pop
push
push
lock
jecxz
pop
mov
xchg
leave
jnp
movs
inc
imul
retf
mov
jnp
fisttp
stc
sbb
push
call
inc
sbb
(bad)
xchg
int3
enter
mov
dec
lahf
add
push
xchg
ret
setbe
pop
mov
cmp
pop
xchg
bound
out
stos
inc
into
ret
call
movs
pop
jmp
xchg
int3
ret
addr16
nop
pop
cli
push
mov
icebp
cmps
xor
push
mov
mov
jle
int3
sub
xor
pop
mov
in
scas
cli
inc
ins
fsubp
fwait
push
push
lods
lds
hlt
jb
fdiv
xchg
into
inc
sbb
std
out
movs
retf
cmp
(bad)
bound
add
inc
add
push
mov
add
ror
shl
frstor
cmps
inc
cmp
ss
stos
jecxz
push
lahf
rcr
scas
inc
mov
lods
jle
lahf
in
jbe
pop
icebp
(bad)
pop
xchg
stos
popf
leave
jbe
retf
retf
mov
mov
ror
test
out
xchg
inc
outs
clc
fcom
ins
pop
idiv
jmp
rol
rcl
call
xchg
ins
xor
popa
in
mov
daa
ds
jp
(bad)
cld
dec
out
retf
adc
jnp
xchg
add
mov
and
lods
mov
fwait
mov
inc
and
push
sub
scas
addr16
sub
and
pop
xchg
sar
fld
mov
test
xchg
sub
or
inc
in
or
retf
sbb
dec
lock
push
shl
mov
int3
loope
jmp
sub
cli
rcl
add
data16
mov
(bad)
outs
in
jb
test
sahf
xchg
or
cwde
add
(bad)
fld
cmps
xchg
movs
jae
and
dec
xchg
test
dec
test
xchg
sbb
push
cwde
xor
imul
mov
sbb
fwait
neg
mov
adc
dec
iret
ret
mov
fdivrp
mov
clc
jecxz
mov
mov
mov
stos
fisub
call
cli
dec
loop
jbe
cmp
pusha
fcom
outs
adc
rcr
jne
cmps
jecxz
pop
jmp
ret
fld
adc
icebp
mov
xor
in
popf
imul
dec
call
ins
cmp
icebp
jl
cld
inc
xchg
xchg
mov
and
cdq
jge
out
ins
lahf
out
ins
loop
std
xor
fcmovbe
sti
gs
imul
dec
cmp
popa
aam
mov
pop
dec
or
cmp
in
and
movs
idiv
mov
rcl
mov
xor
test
and
test
test
mov
ret
ret
xor
cmp
xchg
out
mov
leave
cld
lock
mov
ret
inc
outs
and
jno
sbb
in
dec
ds
push
push
push
addr16
test
mov
push
pushf
pop
shl
sub
sbb
and
sub
xchg
mov
sub
iret
fsubr
jl
psrlq
mov
add
xchg
cmp
dec
mov
pushf
mov
in
(bad)
movs
mov
pusha
retf
and
call
jns
cmp
ds
push
test
cs
pop
sub
mov
sub
rcl
pop
sub
and
adc
shl
jle
repz
cdq
sub
fs
jl
inc
mov
mov
imul
in
ror
dec
out
rcl
sub
xor
jecxz
lods
push
enter
ja
add
hlt
cmp
js
fwait
mov
int
fnstcw
daa
cmp
sbb
int
jmp
cmps
xchg
xchg
dec
push
mov
and
dec
cmps
inc
ror
push
imul
sub
adc
out
and
mov
aam
mov
fsub
cmps
in
outs
lea
sub
test
jae
sti
push
mov
pop
and
sub
ins
mov
jae
inc
jl
push
or
repz
data16
mov
adc
mov
movs
shl
ret
push
std
or
cdq
arpl
push
cld
add
pushf
lods
inc
mov
pop
jo
idiv
rcl
pop
inc
cmp
fwait
push
movs
cld
or
and
data16
jge
nop
cmp
lods
fs
xchg
adc
jl
stos
in
aad
xchg
mov
aaa
cmp
inc
loope
add
sub
stos
stos
xchg
jp
mov
call
xor
sbb
movs
pushf
and
fadd
in
ins
xlat
neg
(bad)
sti
sub
call
add
retf
and
jmp
ja
mov
pop
adc
outs
sbb
ret
adc
in
call
ins
les
test
clc
stos
pop
inc
push
pop
inc
jl
out
imul
imul
push
add
cmp
inc
jg
lock
imul
call
ins
(bad)
fisubr
mov
ret
cmps
test
xor
xor
add
adc
xor
aam
dec
push
and
mov
xchg
mov
xor
push
and
jo
pop
mov
mov
inc
cmp
scas
call
scas
scas
dec
ds
cmps
fwait
outs
mov
das
and
ret
pusha
mov
leave
sbb
add
lods
xchg
add
ret
test
mov
sub
xchg
mov
sti
das
push
adc
pop
repnz
xor
movs
push
ficom
push
jno
xchg
pop
xchg
nop
mov
stos
ins
in
xlat
mov
mov
xchg
jg
test
or
in
cmc
jmp
xchg
or
jp
and
shl
shr
scas
push
dec
push
mov
and
cmp
jbe
add
and
out
mov
jne
lock
rcr
cmp
xchg
xor
add
jb
iret
enter
jb
adc
stc
xchg
dec
outs
xchg
imul
(bad)
dec
ret
es
adc
ins
jo
inc
add
jo
sbb
sbb
fild
sti
mov
add
leave
jbe
add
push
mov
ins
(bad)
inc
push
jo
retf
or
(bad)
jg
mov
shr
xor
jg
pop
inc
mov
movs
mov
sbb
or
cmp
push
shr
in
dec
mov
and
adc
into
adc
test
shl
fmul
cmp
xchg
mov
mov
loopne
push
or
dec
dec
and
call
ret
jo
pop
outs
mov
fiadd
scas
cmp
inc
pop
pop
mov
push
mov
sbb
inc
pop
nop
adc
xchg
add
adc
pop
daa
pushf
push
and
or
fisubr
test
test
shl
arpl
sbb
hlt
and
and
mov
cli
stc
(bad)
jo
aaa
push
push
fldenv
and
push
jmp
dec
xchg
inc
push
into
mov
mov
mov
mov
shl
cs
or
cmp
int
xchg
adc
jp
mov
fsubr
vrsqrtss
add
inc
(bad)
in
lods
bound
mov
sub
scas
fwait
adc
in
pop
es
test
int3
stos
push
in
xor
fcomp
int
mov
std
adc
mov
mov
mov
add
outs
popf
cmp
mov
call
xchg
(bad)
mov
lock
xchg
push
jg
add
jb
dec
clc
push
out
xor
xchg
in
fadd
shl
jl
out
pop
int
xchg
mov
into
call
and
xlat
scas
movs
add
sbb
push
jbe
test
push
rol
into
imul
dec
xor
mov
cmp
pushf
or
or
lods
cmps
pop
jl
sub
jge
mov
cmp
scas
and
jnp
ret
xchg
jg
cmc
js
ret
push
mov
pop
leave
test
and
addr16
jne
in
mov
cmp
lods
and
dec
xchg
push
xchg
mov
dec
or
jmp
mov
pop
test
arpl
mov
sbb
mov
inc
jmp
arpl
inc
clc
or
stos
lahf
ficomp
and
ffreep
pop
and
mov
ins
cmp
rcl
jp
push
xor
in
sbb
ins
or
lods
mov
repnz
mov
mov
xor
add
mov
cmps
(bad)
xor
xor
add
mov
push
mov
mov
retf
jge
call
mov
adc
mov
xchg
rcl
stos
ss
xchg
div
lea
pop
fninit
dec
dec
out
push
pusha
faddp
(bad)
push
sub
inc
xchg
in
dec
scas
sub
dec
inc
push
push
mov
ret
push
xchg
cmp
test
pushf
cmp
call
or
sub
daa
or
mov
mov
pop
ss
popf
xchg
push
shl
push
mov
dec
retf
adc
and
outs
pop
cmps
push
in
adc
scas
call
ret
pop
sti
pop
mov
(bad)
jns
int
lahf
int
mov
popf
nop
daa
cmp
jl
push
pop
loop
cmc
int
push
sub
sbb
add
push
mov
into
xchg
jb
jae
retf
iret
jbe
mov
test
xor
outs
inc
xor
add
jbe
push
push
sahf
test
xor
test
int3
outs
fwait
jecxz
push
jmp
scas
sar
clc
lahf
inc
mov
into
dec
mov
jno
dec
xchg
ret
daa
ja
pusha
stos
mov
mov
shr
imul
es
add
cmps
pop
pop
add
scas
repz
lea
inc
sub
inc
pop
das
sahf
mov
ficom
add
jmp
(bad)
out
xor
push
or
daa
and
shl
sahf
or
inc
cs
push
data16
iret
(bad)
jno
jge
xor
scas
ins
and
cmps
addr16
cmp
sbb
sbb
jmp
cmp
gs
lods
sbb
shr
inc
push
rol
rol
fcom
dec
test
frstor
fs
jle
int
xchg
or
ror
jmp
adc
daa
pusha
inc
iret
jecxz
xlat
inc
fldenv
call
icebp
push
mov
(bad)
idiv
xchg
push
(bad)
fwait
jo
push
sub
int3
mov
push
pop
mov
push
scas
cmp
sub
xchg
xlat
ins
jmp
or
test
sub
pushf
sti
mov
ins
jg
sti
add
push
in
add
cmc
sbb
cmp
inc
mov
add
sbb
adc
fdivrp
retf
ja
cli
xchg
mov
xchg
add
dec
ins
pushf
xchg
sahf
inc
daa
popf
sub
push
out
(bad)
(bad)
fadd
push
sub
push
xor
les
inc
cli
sub
pop
leave
cmc
xchg
lahf
mov
(bad)
mov
in
repnz
mov
icebp
outs
add
je
pusha
pop
call
lods
xor
sub
sub
aad
mov
movs
push
iret
cmp
test
nop
je
jnp
ficomp
gs
mov
aaa
mov
ds
clc
xor
dec
ror
push
leave
and
xor
push
dec
dec
iret
xor
daa
mov
mov
cdq
outs
mov
pop
sub
pop
mov
xor
into
into
fbstp
xchg
mov
pushf
icebp
xchg
std
cmps
mov
lods
jae
mov
dec
pop
lods
xor
jnp
movs
cmps
frstor
cmps
loopne
movs
sbb
push
outs
push
test
push
neg
and
(bad)
sub
outs
jge
pop
mov
push
xchg
mov
popf
(bad)
(bad)
mov
add
xor
mov
idiv
push
and
mov
cmps
inc
cld
jns
xchg
jnp
add
ffree
mov
aam
jae
std
sub
nop
mov
push
sbb
fwait
clc
mov
dec
jne
or
or
int
fisubr
xor
outs
mov
into
jecxz
dec
cmp
ret
xor
(bad)
std
sub
inc
and
jl
outs
adc
rcl
leave
push
out
jnp
lods
cmp
aad
retf
gs
mov
sub
cmps
inc
(bad)
fcom
(bad)
not
xchg
push
push
jmp
mov
mov
es
aam
cli
dec
inc
cmp
fdivr
das
out
or
fld
xchg
push
jmp
retf
(bad)
cwde
daa
fisub
jnp
call
addr16
mov
xor
retf
add
les
jne
jge
mov
or
push
in
scas
xchg
inc
mov
and
cmp
mov
or
test
jmp
inc
in
stc
dec
imul
cmps
(bad)
(bad)
(bad)
int3
out
movs
sti
xchg
or
sub
inc
adc
or
in
push
jne
jmp
push
enter
popw
sbb
jmp
aad
bound
out
sub
leave
ret
pop
xchg
sub
or
or
nop
mov
out
(bad)
popf
sbb
push
scas
aas
xor
loop
ins
xchg
mov
push
xchg
lods
imul
dec
sbb
daa
(bad)
daa
push
stc
fcmovnu
inc
or
sti
(bad)
jb
imul
mov
push
ds
xchg
xchg
jp
sub
and
icebp
jl
dec
cmp
dec
test
test
dec
ds
mov
retf
(bad)
rol
pop
dec
icebp
nop
(bad)
fmul
adc
ficomp
shr
and
cld
cmp
xor
mov
sub
cmc
jno
or
mov
fistp
nop
pop
ds
retf
pop
dec
dec
xor
fadd
add
mov
cmp
call
iret
jp
adc
dec
dec
xor
push
retf
iret
shl
(bad)
stc
fidiv
jmp
push
sar
sbb
enter
jmp
pop
aad
fwait
inc
repz
add
lds
mov
sar
js
movs
lea
pop
sub
movzx
pop
and
(bad)
mov
ins
enter
fbstp
xchg
or
jle
(bad)
shl
sub
shl
jnp
mov
loopne
daa
(bad)
jo
in
(bad)
fwait
mov
imul
movs
dec
not
lods
fcomp
xchg
xchg
fwait
(bad)
jge
add
ins
mov
sar
enter
stos
retf
(bad)
add
popf
ins
ret
(bad)
cmc
jnp
or
movs
push
xor
mov
retf
rol
in
xchg
pushf
out
push
sub
or
cmp
js
lods
retf
mov
cli
fnstenv
mov
xlat
jno
cmp
stos
or
movs
cmp
jnp
sub
push
mov
fdiv
retf
pop
push
mov
addr16
fucom
in
sbb
pop
jecxz
lea
icebp
jns
mov
sub
inc
sar
dec
push
retf
sub
int3
and
cmp
clc
mov
or
add
sbb
cmp
add
retf
(bad)
inc
xor
cmp
dec
inc
and
push
les
pusha
mov
and
inc
jae
pop
mov
dec
or
fadd
pop
mov
addr16
mov
arpl
out
stos
test
add
or
popa
cmps
jle
(bad)
push
dec
icebp
jmp
sbb
pop
xor
sahf
popa
or
idiv
(bad)
jp
movs
fucomp
add
fwait
jbe
adc
jns
lock
or
xor
jg
adc
cmc
pop
or
sub
mov
out
and
and
mov
retf
cmps
stos
popa
outs
sahf
pop
stos
ror
xchg
mov
popf
sahf
cwde
(bad)
repnz
and
aas
in
pop
mov
adc
test
in
ja
sbb
mov
add
inc
push
test
sbb
sub
pop
xchg
test
xchg
ss
outs
dec
cmc
push
sub
cdq
mov
int3
jmp
imul
sbb
adc
inc
(bad)
sar
outs
repz
sub
push
xchg
jbe
rcl
cmp
add
pop
test
shl
and
dec
mov
jnp
lock
daa
add
inc
retf
cmps
inc
repnz
jecxz
xor
pop
push
jp
add
test
lahf
mov
adc
out
jmp
lds
das
mov
(bad)
jnp
pop
enter
xor
pushf
inc
cmps
or
pop
and
imul
lods
ss
retf
xchg
inc
cmp
in
jecxz
push
fsubrp
pop
(bad)
push
in
xchg
cmp
push
mov
sub
adc
inc
jno
cmp
sbb
inc
jno
mov
add
mov
mov
sbb
push
dec
movs
push
push
cli
fiadd
jne
ror
xor
or
add
popf
dec
pop
push
sbb
mov
xor
(bad)
and
mov
mov
push
loopne
in
scas
(bad)
hlt
stos
mov
test
clc
rol
sub
retf
fidivr
add
outs
inc
mov
movs
push
out
dec
inc
add
xchg
mov
cmp
add
xor
dec
jge
add
pop
jmp
inc
rcr
push
jle
cdq
mov
mov
push
(bad)
sub
mov
mov
xchg
mov
push
js
aaa
mov
or
pushf
add
mov
jmp
std
or
push
mov
mov
add
dec
pop
mov
push
xchg
ret
mov
mov
fucomp
(bad)
mov
das
push
cwde
loop
ins
cmps
imul
shl
inc
push
(bad)
fld
push
inc
lods
cmp
icebp
push
(bad)
mov
js
sti
jae
push
(bad)
xor
psrad
hlt
dec
or
jecxz
jbe
mov
push
or
cmp
jmp
shl
out
fsubr
in
ror
dec
xlat
dec
xor
lds
xor
jmp
pop
add
dec
inc
in
lods
sbb
loope
(bad)
xchg
mov
aas
mov
jmp
push
in
push
out
pop
repz
fs
inc
adc
test
push
into
fs
xchg
cmp
jns
call
dec
lods
les
icebp
(bad)
adc
mov
mov
scas
cs
mov
stc
sub
push
movs
aam
sub
sbb
add
push
test
mov
(bad)
sbb
mov
aad
lods
pop
xchg
stos
or
popa
xor
push
cdq
jbe
rcl
loope
mov
cmp
cdq
inc
mov
sub
jecxz
or
pop
es
cmp
or
mov
jb
(bad)
leave
jge
xchg
push
cmps
fmul
inc
aaa
mov
xchg
and
sbb
add
mov
loop
stos
xchg
xlat
xchg
fstp
mov
lods
inc
xor
fwait
add
movs
je
cs
pop
jbe
loopne
or
sub
int3
ins
dec
sti
sub
mov
xor
pop
cwde
into
inc
jmp
and
add
jmp
jmp
leave
mov
out
sti
inc
outs
ja
fidiv
sbb
icebp
scas
or
in
xor
repz
neg
ja
mov
sbb
pusha
enter
xchg
sub
inc
sar
mov
call
mov
xchg
mov
push
mov
ins
movs
add
ins
fidiv
mov
mov
arpl
retf
(bad)
loope
push
out
leave
bound
adc
jo
and
adc
cmp
push
(bad)
mov
enter
sbb
dec
ins
cmp
jp
outs
inc
xchg
lock
ins
call
jl
mov
daa
sti
pushf
sbb
and
ins
retf
dec
inc
into
cdq
ror
scas
repnz
inc
sar
mov
pop
mov
fdiv
xchg
fcom
jbe
mov
neg
(bad)
sbb
stos
cmp
movs
into
push
xchg
test
pop
jno
call
and
jno
das
pop
lgs
mov
xlat
bound
jo
mov
retf
ins
in
lods
aas
xchg
call
cmp
push
adc
retf
repz
mov
lds
mov
je
call
fstp
add
cld
out
dec
out
add
sbb
imul
sahf
int
jmp
retf
xor
in
sub
push
test
pop
inc
out
shl
jb
mov
push
inc
je
test
push
lock
ror
es
(bad)
imul
mov
std
call
mov
jl
iret
inc
and
xchg
cmps
lods
jg
cmp
movs
add
rcl
aas
repnz
imul
ja
xchg
cmps
pop
lds
leave
jmp
xchg
pop
mov
xor
mov
hlt
mov
pushf
outs
pop
xchg
or
daa
sbb
imul
adc
xchg
sbb
mov
loop
daa
mov
cmps
mov
sbb
sub
cli
scas
sbb
mov
cli
lds
cld
ror
sub
les
aad
fcmovne
(bad)
(bad)
dec
repnz
in
inc
sbb
rcr
jle
inc
nop
cmp
mov
popf
cmp
shr
dec
fisubr
test
mov
out
add
jmp
test
add
jbe
xor
pop
mov
mov
fsub
push
add
push
mov
fadd
mov
inc
xor
jle
lods
enter
movs
cmp
call
(bad)
jl
mov
dec
xchg
popf
lea
cmp
stos
or
dec
ins
pop
push
cwde
movs
inc
js
push
and
je
xorps
or
mov
retf
not
outs
push
and
and
mov
fidivr
out
jbe
movs
sbb
mov
retf
add
outs
dec
cld
mov
cs
mov
test
(bad)
mov
inc
in
stos
jb
stos
std
iret
scas
push
push
xor
test
stos
lods
(bad)
xchg
jge
push
cli
in
jp
sbb
lock
jp
cwde
imul
sub
mov
cli
ins
xor
sub
addr16
xlat
cmps
int
and
pushf
lods
cmp
add
adc
sub
stc
ss
and
pop
mov
or
pusha
pushf
(bad)
out
pop
sbb
or
in
gs
aam
xchg
pusha
daa
mov
jae
adc
lods
jl
sub
outs
(bad)
out
fbld
popa
jg
js
scas
addr16
ins
or
adc
mov
retf
mov
mov
jmp
xlat
push
adc
outs
jle
ins
mov
inc
ja
add
jmp
dec
cmp
and
fldcw
ins
cmps
clc
inc
xchg
xor
jle
in
xchg
mov
pop
fiadd
or
jno
mov
ja
sub
pop
xchg
add
fcomp
xor
in
(bad)
int3
xchg
mov
mov
ins
retf
mov
mov
test
xor
mov
(bad)
jnp
adc
and
repnz
jecxz
jmp
add
adc
or
leave
dec
cmp
dec
jecxz
ret
clc
mov
inc
and
dec
enter
adc
xchg
rol
outs
les
xor
add
pop
mov
mov
stc
pushf
inc
and
cmp
mov
aaa
or
dec
push
imul
addr16
data16
dec
sahf
xor
sub
aas
cmps
cmp
mov
and
xor
or
iret
bound
sbb
mov
jno
sti
adc
mov
out
loope
addr16
aad
mov
pop
sub
movs
sbb
pusha
pop
sbb
icebp
nop
jmp
shr
mov
sar
loope
test
or
retf
je
mov
push
pop
xchg
das
(bad)
neg
loopne
fist
sbb
mov
adc
dec
popa
sbb
pop
jb
jecxz
jae
sahf
imul
xchg
stc
call
test
and
sbb
les
sbb
jg
movs
retf
or
retf
adc
xor
retf
xor
sub
pop
repz
inc
popf
xor
mov
sbb
dec
push
mov
dec
(bad)
into
fadd
je
cld
rcr
xchg
test
test
(bad)
pushf
js
cmp
jecxz
jb
mov
lock
xor
int3
lock
aad
fistp
mov
call
mov
sub
cmp
out
icebp
(bad)
daa
loop
ret
xor
lahf
test
mov
loop
cwde
cmp
mov
and
jo
call
fmul
add
cmp
push
shl
das
adc
(bad)
addr16
pop
rcr
jmp
dec
mov
pushf
out
fimul
xchg
movaps
inc
shl
fimul
mov
cmp
inc
ficom
push
fwait
push
stc
xor
mov
cmp
je
mov
fist
mov
and
push
xor
jg
and
test
int
push
(bad)
adc
dec
das
fs
inc
dec
lock
xor
bnd
inc
pop
inc
in
and
push
mov
xchg
dec
sti
xchg
aaa
jge
out
cmp
cmc
pop
sbb
push
jbe
mov
mov
(bad)
stc
imul
(bad)
cdq
jp
pop
jnp
dec
repz
inc
loope
cwde
arpl
pop
pop
sbb
jge
dec
mov
out
sbb
fldenv
sbb
mov
mov
dec
icebp
cdq
push
jmp
jb
dec
mov
cld
cs
cdq
pop
or
or
out
and
dec
xor
in
cmp
mov
add
pop
adc
(bad)
in
fmulp
test
jne
pop
push
push
add
xor
or
in
jns
(bad)
aam
jge
cli
and
in
into
fidivr
pop
mov
call
cmp
mov
mov
cmps
inc
add
scas
push
enter
sbb
test
pop
or
mov
xchg
pop
jae
int3
out
int3
fcmovu
cmp
shl
movs
adc
ret
pusha
das
mov
lods
jae
mov
cmp
loop
fs
std
add
rcl
test
call
cmps
adc
dec
ss
fwait
sbb
and
adc
cmp
cmc
mov
imul
mov
jmp
test
imul
xchg
sbb
mov
or
mov
inc
sti
in
loope
dec
dec
adc
shl
aam
jnp
lock
fs
fistp
xor
inc
cli
jge
sahf
cmc
jno
aaa
cmp
(bad)
scas
fst
ds
adc
cmc
mov
and
mov
inc
in
pop
and
jg
les
int3
mov
push
xchg
fsincos
cmc
movs
fimul
xor
sbb
push
mov
cmps
mov
pop
retf
aaa
aad
stos
add
ss
cmp
xchg
in
adc
push
sub
cmp
xchg
(bad)
loope
out
fucomip
gs
xchg
and
es
xchg
arpl
xchg
repnz
jecxz
int3
sbb
in
popf
in
rcr
inc
push
mov
test
into
hlt
sahf
ret
mul
sahf
cs
xchg
in
adc
push
data16
sbb
retf
sbb
(bad)
in
(bad)
pop
xor
jo
adc
push
xchg
mov
dec
repnz
ficomp
lea
pop
cmc
xchg
sub
push
pop
sub
out
inc
movs
and
pop
(bad)
(bad)
pop
cmc
jns
ret
ret
das
ds
daa
add
mov
mov
add
jns
push
call
cmp
das
pop
stc
add
add
in
test
arpl
test
(bad)
mov
das
push
pop
popa
jno
sub
and
and
mov
aad
int
push
dec
push
sbb
in
xchg
test
outs
xchg
dec
cmp
inc
adc
adc
(bad)
scas
push
jo
call
test
dec
xchg
jl
push
popf
inc
xor
pop
xchg
sub
push
icebp
stos
scas
sbb
ja
jl
test
inc
cmp
std
adc
cwde
call
cli
pop
movs
mov
push
push
(bad)
scas
cli
sti
add
out
jmp
arpl
sub
jmp
rcr
popa
arpl
gs
inc
pop
and
neg
stc
nop
je
in
mov
in
mov
pop
xor
inc
shl
sbb
and
cmp
(bad)
(bad)
jnp
les
xchg
into
stos
dec
(bad)
add
or
xchg
mov
push
cmps
cwde
and
xchg
and
shr
xor
or
and
shl
arpl
in
jmp
retf
in
mov
xchg
mov
push
mul
shl
clc
es
mov
icebp
and
mov
call
push
retf
lds
je
addr16
mov
sub
add
mov
or
xchg
xchg
(bad)
(bad)
mov
push
and
movs
imul
push
lahf
mov
pop
jnp
mov
out
test
aas
add
sbb
ds
loope
pushf
aam
mov
add
(bad)
fisttp
mov
mov
inc
jno
and
push
pop
shl
mov
or
addr16
sub
xor
test
push
xchg
js
(bad)
pop
retf
clc
icebp
add
jle
push
mov
stos
mov
data16
adc
mov
(bad)
mov
adc
outs
sbb
mov
enter
push
xor
call
sar
or
movs
xchg
leave
cmc
cwde
push
sbb
inc
and
xor
sti
push
mov
ffree
push
mov
or
aam
or
fstp
mov
jl
push
call
fdivr
jb
xor
rol
xor
popa
inc
xor
popf
lock
xchg
jns
cmp
xchg
push
aaa
mov
push
inc
jl
test
push
dec
or
test
inc
lahf
ss
xor
or
sar
and
and
cmp
dec
shl
js
lea
inc
movs
xor
push
jge
mov
outs
lods
xchg
cmp
dec
enter
arpl
mov
lahf
mov
xchg
in
sbb
xchg
push
cs
clc
mov
jae
rep
daa
jmp
cwd
addr16
mov
pop
sahf
lock
cmp
push
pushf
jle
aas
xchg
ja
dec
shl
xor
jmp
sub
in
call
add
xchg
adc
stos
mov
test
retf
push
arpl
or
stc
or
das
mov
xor
in
scas
not
xor
call
ss
sbb
or
jmp
xchg
mov
xor
jae
aaa
and
push
xchg
mov
dec
out
inc
jge
or
and
adc
ret
add
shr
push
or
pop
test
adc
scas
mov
addr16
in
adc
lds
std
scas
dec
or
cmps
cwde
mov
jb
popf
repz
enter
adc
ins
mov
pop
cmp
xor
xor
mov
mov
jl
aam
mov
popf
(bad)
push
nop
in
push
dec
(bad)
in
int
or
inc
dec
outs
es
aam
(bad)
mov
int
lds
lahf
loop
movs
jmp
mul
test
repnz
xchg
cs
cmp
mov
sub
shr
cs
xchg
add
mov
loop
adc
sub
stos
push
push
push
mov
psubd
xchg
fistp
dec
fdivp
fidivr
jmp
jbe
mov
jo
push
pop
sbb
out
bound
sti
xor
mov
mov
rcr
pop
mov
push
pop
mov
add
jnp
test
scas
mov
shr
arpl
adc
push
inc
out
add
and
nop
xchg
cmps
and
test
or
aas
iret
cld
sub
and
mov
mov
call
rol
mov
shl
push
cmps
imul
shl
jp
icebp
mov
inc
lds
jae
cmc
out
retf
imul
inc
jae
jp
jbe
jle
push
aad
jmp
pop
add
mov
ret
cmp
pop
mov
dec
add
mov
out
jp
pop
div
ins
pop
mov
jle
push
dec
sub
xchg
ss
aam
scas
mov
nop
sbb
push
and
mov
add
pop
xor
(bad)
xchg
sbb
shl
mov
sub
stos
loopne
push
pop
rcl
inc
mov
retf
adc
push
dec
push
shr
mov
xchg
int3
das
push
adc
shl
and
in
xor
adc
fwait
pop
mov
jb
fdiv
mov
lea
mov
xchg
lods
jbe
mov
mov
lock
and
nop
sbb
mov
jmp
(bad)
push
arpl
ret
leave
jmp
scas
mov
loope
jne
xor
mov
and
dec
lods
fdiv
cmp
inc
stos
cmp
add
mov
retf
dec
or
shl
inc
(bad)
add
stc
jo
aaa
jl
xor
das
xor
jno
hlt
mov
fild
add
iret
div
xchg
(bad)
out
hlt
cmps
icebp
sbb
add
mov
mov
in
cmp
addr16
fild
mov
push
(bad)
push
or
xchg
mov
into
dec
int3
mov
jb
xor
icebp
fsubr
sti
jle
iret
pop
cld
ds
fcmovne
(bad)
sub
xor
mov
retf
ds
inc
les
movs
rcl
and
(bad)
and
adc
in
xchg
xlat
repz
and
inc
mov
nop
pop
cmp
(bad)
xchg
punpckhdq
mov
les
pushf
push
scas
cmp
mov
jmp
out
es
mov
push
ja
int3
pop
je
jbe
fldcw
lods
ret
repz
ds
stc
inc
push
or
ss
ret
inc
push
push
data16
pop
ss
push
mov
fst
xchg
lods
inc
daa
xchg
add
or
dec
mov
push
cmc
or
data16
lods
aaa
cwde
inc
aam
inc
mov
fcmovnb
inc
xor
dec
cmp
or
pop
sub
xor
test
pusha
mov
inc
add
sbb
push
in
inc
mov
inc
gs
sbb
xor
(bad)
xchg
aas
mov
push
rcl
cmps
push
push
daa
dec
lods
loope
loope
xchg
sbb
inc
push
mov
(bad)
push
pop
adc
mov
int3
mov
mov
rcl
pop
cmps
xor
ret
jae
mov
mov
mov
ror
fwait
int3
fisttp
cmc
mov
sahf
popf
dec
xor
add
mov
xchg
jmp
dec
jae
sti
stos
cmc
and
adc
add
mov
pop
test
retf
inc
bound
jnp
xor
sub
loope
arpl
pop
sub
push
inc
scas
sub
and
and
call
sub
inc
dec
or
stos
ficomp
adc
js
dec
add
fild
mov
aaa
push
cmp
aam
pop
mov
sbb
cmp
in
pop
imul
jmp
jle
push
pop
inc
aaa
movs
jge
add
mov
jns
iret
iret
sbb
inc
aaa
in
sbb
xchg
mov
adc
jb
sbb
movs
adc
pop
sbb
sar
in
clc
sar
xor
loopne
jl
aaa
data16
and
xchg
fsub
call
xor
in
mov
xchg
addr16
std
enter
mov
adc
bound
inc
or
cwde
popf
pop
jae
std
sbb
pop
cmp
fcom
ret
mov
sbb
mov
xor
xlat
xor
mov
xchg
jecxz
or
xor
fisttp
stos
std
pop
mov
xrelease
and
out
(bad)
repz
pusha
cwde
mov
lods
jmp
lahf
jl
inc
fistp
repnz
clc
mov
(bad)
daa
jecxz
mov
xor
cli
enter
inc
dec
mov
push
int
pop
and
adc
shr
mov
loopne
push
xor
sahf
xchg
(bad)
popa
xor
fidiv
push
adc
mov
and
iret
out
mov
and
pushf
repnz
je
xlat
lahf
les
inc
inc
sti
fcom
lds
inc
xchg
mov
rcl
push
je
bnd
mov
fs
std
out
gs
xchg
cmp
add
xchg
xchg
sahf
xlat
xchg
cwde
and
sub
and
cli
fisttp
js
push
fiadd
push
mov
aad
js
and
out
ins
int
xchg
fsub
fsubr
jp
fisttp
sbb
loopne
(bad)
aam
mov
dec
add
sbb
mov
add
xchg
inc
mov
mov
cs
imul
outs
fcomp
fbstp
xchg
enter
data16
ret
cmps
out
mov
cmc
pop
nop
and
fstp
inc
cmp
and
cmps
test
ret
jae
add
sub
aas
cmp
test
call
sar
scas
mov
sub
ja
shl
in
push
dec
rol
cmp
lock
(bad)
push
fld
add
add
or
add
xlat
enter
push
cmp
fwait
in
xchg
mov
mov
stos
repz
ins
push
lods
sbb
test
mov
adc
mov
xchg
inc
(bad)
out
cs
idiv
aam
xor
xchg
sub
loop
xor
xchg
pop
movs
cdq
into
test
icebp
lods
mov
push
das
mov
(bad)
out
pop
sub
bound
mov
ret
push
repnz
fst
stos
fstp
sub
push
pop
loopne
mov
je
mov
das
aad
mov
pop
pop
or
sbb
mov
das
push
mov
mov
fwait
cmc
push
outs
sar
add
xor
stc
jmp
inc
push
popf
cmp
dec
ret
ins
call
push
leave
and
sbb
jo
fstp
in
jo
std
jns
aas
pusha
jbe
add
dec
cmp
jo
pop
mov
fbld
cmps
(bad)
xlat
call
and
or
or
hlt
xchg
sub
ret
xor
jp
sbb
inc
push
shl
push
scas
mov
xchg
mov
dec
adc
add
lahf
pop
xchg
adc
pop
mov
mov
(bad)
sbb
ins
pushf
xor
jle
test
adc
cmp
jbe
loop
loop
add
test
push
iret
and
sub
imul
ret
cmp
das
inc
lods
loope
into
inc
pushf
mov
inc
add
lea
xchg
scas
movs
shl
sub
test
sub
pushf
popa
sub
out
sahf
into
add
cmp
ss
out
and
add
mov
add
imul
jno
sub
sbb
lods
pop
es
cmc
sbb
call
push
xor
pop
and
mov
movs
cdq
pop
dec
ins
lods
jbe
mov
cmps
into
retf
jmp
fs
nop
push
in
ja
cmps
hlt
(bad)
ret
adc
and
gs
add
cmp
das
call
fnstcw
mov
or
inc
push
arpl
xor
test
shl
xchg
lods
lods
pop
sub
lds
lds
jge
cdq
adc
sahf
lahf
(bad)
sti
push
stos
cmps
inc
scas
mov
fmul
pop
sbb
mov
add
jo
cmps
sub
adc
hlt
sub
jb
sub
cmps
pop
fidiv
fs
sub
sub
and
bound
cmps
shr
pop
push
loope
retf
sbb
aam
sti
out
push
add
call
seto
jcxz
xor
imul
iret
lds
ret
retf
jno
xchg
mov
push
and
addr16
mov
int
cdq
imul
inc
retf
jg
ficomp
dec
lods
aad
and
pop
test
sbb
and
(bad)
or
sub
out
aad
mov
popa
repz
cwde
loopne
mov
ror
inc
hlt
pop
jb
mov
sub
repnz
jnp
aam
jb
cmc
jnp
lds
push
mov
lea
loop
push
fwait
xor
push
push
xor
sahf
dec
icebp
sti
jno
and
jg
jecxz
nop
iret
(bad)
pop
leave
loopne
push
and
jmp
outs
add
mov
outs
add
xchg
jmp
jmp
lock
xchg
iret
mov
adc
icebp
xchg
lahf
int
shl
retf
repnz
pop
mov
mov
mov
hlt
push
push
add
lock
cli
adc
add
push
xor
inc
bound
mov
pop
loopne
or
ins
ror
pop
push
push
push
jmp
sbb
test
aam
repz
sbb
arpl
out
stc
fidiv
inc
in
dec
ins
jo
js
pop
pop
inc
shl
xchg
dec
or
mov
cmp
jae
push
test
repnz
or
ss
adc
sub
daa
adc
daa
mov
(bad)
push
pop
icebp
rol
fmul
mov
mov
sub
mov
ret
xor
(bad)
imul
add
int3
pop
test
push
loopne
mov
fbstp
push
movs
cld
mov
or
push
sub
mov
aad
in
pushf
xor
mov
mov
ja
out
adc
adc
or
adc
or
add
or
out
hlt
inc
mov
test
xchg
pop
aad
sub
loop
cmp
cmp
cmp
fst
add
mov
jae
xor
ja
fs
adc
xor
and
mov
or
sub
btr
outs
mov
push
xor
push
outs
stos
dec
pop
daa
(bad)
push
adc
and
add
sub
cmps
or
sbb
jecxz
sbb
xor
mov
mov
jbe
je
mov
sbb
adc
cmc
dec
push
push
inc
xchg
loope
fcomip
mov
hlt
pop
jmp
and
dec
jecxz
(bad)
repnz
sub
jo
mov
push
sbb
rcl
test
(bad)
dec
loop
icebp
push
shr
or
push
cmps
sub
(bad)
jmp
dec
cmp
fdivr
in
push
cmp
xchg
mov
add
jle
push
dec
add
cs
popf
mov
sbb
lods
cmp
das
and
dec
outs
pop
add
icebp
and
aam
mov
pop
sub
and
mov
mov
ins
ins
jl
adc
pop
sar
mov
mov
and
dec
inc
test
push
jns
mov
adc
jmp
cmp
mov
icebp
hlt
loope
into
sub
mov
mov
add
popf
mov
imul
xor
test
jecxz
enter
push
popa
jne
sbb
push
mov
push
shl
sbb
enter
push
add
adc
xor
sti
cmp
in
dec
xlat
loop
xchg
push
es
or
sub
les
xor
sub
or
(bad)
fs
jbe
or
sub
out
fcom
lea
fadd
dec
(bad)
xlat
sbb
scas
mov
test
sub
out
call
test
stc
push
shl
sbb
sbb
jns
mov
sbb
cmc
add
scas
dec
test
scas
inc
sbb
cld
mov
adc
lock
add
bound
mov
nop
push
and
es
repz
push
inc
test
mov
sub
sar
inc
(bad)
std
shl
push
dec
xchg
test
xchg
cmc
mov
sub
call
bound
test
pusha
fld
add
dec
arpl
and
sub
cs
outs
xchg
mov
movs
cmps
xor
jecxz
mov
and
fstp
xchg
mov
jge
xchg
ss
int3
cld
sbb
or
in
cmp
aaa
(bad)
mov
pop
icebp
jle
and
(bad)
shl
mov
inc
cmp
rcr
mov
xchg
iret
sub
mov
loopne
jae
jmp
cs
loopne
mov
(bad)
loopne
mov
hlt
mov
ficom
add
enter
cdq
mov
jne
add
pop
push
jp
loope
add
adc
cli
pop
xlat
mov
or
and
cmp
or
mov
or
stos
aaa
mov
fldenv
mov
xor
mov
jge
(bad)
xor
xor
jbe
sub
and
and
aas
aas
(bad)
cmp
jmp
push
aad
test
outs
add
(bad)
imul
rol
mov
mov
add
arpl
sbb
jle
aam
or
inc
fcmove
(bad)
fld
clc
jne
aas
jmp
sahf
bnd
arpl
jmp
mov
push
mov
sbb
hlt
jae
or
jno
jb
mov
(bad)
pop
div
out
add
mov
mov
push
test
xor
fwait
scas
dec
neg
jne
outs
std
mov
or
(bad)
je
fdivr
mov
pop
or
inc
inc
inc
or
imul
adc
movs
hlt
adc
enter
mov
pop
pop
mov
jnp
push
add
pop
jmp
mov
fld
pop
scas
sbb
popa
fcomip
into
push
mov
cmps
pop
mov
out
sbb
(bad)
clc
mov
or
cmp
fidiv
jno
push
dec
jo
mov
push
pop
test
mov
cmp
push
ins
fistp
test
mov
mov
test
pop
dec
fs
shl
push
inc
pop
pop
cmp
fs
leave
iret
jnp
mov
nop
repnz
cmp
out
aam
cmp
inc
adc
jg
push
(bad)
xlat
ins
dec
out
aaa
xor
aas
sbb
mov
mov
jno
pop
imul
jmp
push
jg
and
lahf
jecxz
repz
fucomi
or
or
mov
ret
jmp
cs
mov
ss
adc
xchg
(bad)
dec
adc
mov
outs
aam
mov
mov
ret
inc
mov
movs
jp
and
dec
je
leave
adc
or
add
push
xchg
std
xchg
ins
nop
sub
ficom
cmps
(bad)
push
movs
es
adc
jb
repnz
scas
and
(bad)
xor
pop
rcl
cmp
xor
dec
xor
xchg
dec
lods
std
cmp
fs
push
push
xlat
or
sti
adc
xor
push
popa
call
push
shrd
call
lahf
cmps
or
rcr
dec
(bad)
or
jb
hlt
ficomp
dec
jg
fild
cmc
(bad)
adc
xor
js
aam
mov
pop
dec
mov
push
je
cmp
leave
sub
repz
jae
inc
jle
xor
stos
cld
stos
fs
jmp
sbb
outs
sub
arpl
mov
js
rcr
fdiv
mov
cmps
and
scas
mov
push
pop
adc
(bad)
xchg
inc
dec
mov
jbe
mov
inc
retf
push
and
xchg
push
addr16
pop
jmp
push
jmp
popa
fnstenv
rcr
inc
mov
cmps
jmp
mov
rcr
ins
cmp
cmc
mov
popf
or
mov
sub
neg
rcr
add
jecxz
in
or
sub
xor
mov
das
cmc
cwde
jnp
pop
in
nop
int
bound
retf
push
sti
sbb
inc
test
jnp
sbb
add
pop
(bad)
add
out
cmc
cmc
inc
arpl
jg
ss
xchg
rcl
dec
in
and
add
mov
dec
or
jns
loope
jle
hlt
aaa
clc
test
ficom
and
repnz
movs
aad
js
push
hlt
test
fst
loopne
sbb
dec
adc
push
or
and
or
pusha
mov
jns
adc
(bad)
cmp
(bad)
ficom
sbb
lahf
mov
inc
not
leave
mov
ins
sbb
cmps
dec
outs
mov
xchg
shl
jl
inc
shl
(bad)
jle
cmp
push
leave
shl
mov
add
xor
in
pop
mov
mov
xchg
test
clc
dec
jmp
iret
xlat
push
sub
mov
and
push
xor
inc
push
push
jmp
ss
adc
iret
pop
sar
popf
int
mov
mov
push
push
inc
cmp
and
(bad)
leave
cli
push
out
mov
push
xchg
mov
test
aas
scas
fcomp
push
pop
push
sbb
test
ror
xchg
xchg
jmp
test
out
sub
or
ret
nop
or
stos
nop
mov
in
or
nop
xchg
nop
pop
pop
call
adc
add
repz
sahf
xchg
sub
or
sbb
loope
(bad)
xchg
lock
icebp
(bad)
jl
loop
mov
sahf
jo
outs
jmp
sub
mov
jge
or
ds
ret
stos
cmp
cmp
aam
lock
mov
pop
mov
xchg
sub
and
dec
test
sbb
add
mov
add
cmps
cld
fwait
dec
mov
cmp
inc
mov
aad
dec
mov
push
bound
inc
js
mov
enter
cs
xchg
push
dec
icebp
mov
inc
popa
popf
push
out
xchg
pusha
adc
jl
mov
or
inc
mov
retf
mov
not
in
outs
cmc
fdivr
cmovae
cmp
das
cwde
dec
neg
dec
popa
pop
add
out
gs
es
mov
add
das
cmp
movs
les
inc
bound
and
mov
xlat
jb
(bad)
cmp
or
int
fistp
icebp
xchg
inc
or
jne
mov
(bad)
sbb
mov
jbe
cmc
mov
stos
sub
ins
cs
in
mov
and
add
stc
or
xor
push
and
cmp
sub
shl
sub
jmp
mov
(bad)
mov
mov
mov
dec
ja
dec
test
add
xchg
adc
pusha
pop
(bad)
cmp
mov
mov
aam
popa
repz
xchg
mov
sbb
mov
xchg
dec
sbb
xchg
mov
sub
test
(bad)
sub
aad
(bad)
pushf
xor
push
mov
add
hlt
shl
cmps
sti
lods
dec
ins
add
inc
shr
cmp
imul
inc
test
lods
push
sub
movs
lds
push
(bad)
bound
cs
pop
and
sub
inc
or
xor
sub
cmps
push
int
xor
or
xchg
fwait
repz
mov
data16
pop
int
or
leave
sub
add
dec
xlat
ins
pop
jp
sbb
sub
jmp
in
sbb
adc
cdq
jo
mov
stc
inc
jge
repnz
push
test
push
cmps
adc
ret
shl
mov
jae
aaa
jmp
aas
pop
mov
pop
cld
jns
inc
and
cwde
call
popa
shl
call
push
cdq
jnp
test
xor
sbb
jo
cmp
repz
add
in
sub
push
loope
and
pop
iret
jmp
mov
out
xchg
lock
push
pop
scas
int3
pop
sbb
arpl
mov
dec
jnp
fnstsw
add
add
sbb
push
sahf
dec
push
and
daa
out
popa
pop
pusha
mov
xchg
in
mov
push
sbb
(bad)
add
dec
dec
imul
add
cli
add
leave
dec
mov
xchg
aad
adc
adc
adc
outs
pop
loope
push
ss
je
or
loopne
lock
pop
push
xor
pop
push
pop
push
push
aas
xor
in
pusha
call
int3
ret
jl
cmp
and
sbb
mov
(bad)
outs
call
repz
shl
dec
cwde
xchg
cs
pop
cli
push
push
cmps
pause
aam
pop
inc
scas
or
fs
sub
stos
dec
sub
mov
gs
(bad)
jge
pop
push
add
push
fisttp
dec
cmp
mov
dec
syscall
sahf
mov
pop
jns
jmp
out
mov
pusha
pop
inc
xchg
mov
cmp
push
push
in
xchg
add
(bad)
dec
mov
dec
(bad)
sbb
repnz
push
cmp
push
stos
shr
or
mov
mov
mov
repz
aad
or
cmp
fistp
test
sbb
out
shl
mov
test
push
in
rol
pop
mov
or
pop
sub
pop
cmp
arpl
mov
lock
mov
int
out
in
mov
popa
sub
idiv
jne
stos
ins
nop
lds
aad
pop
inc
jo
ss
into
mov
bound
mov
mov
lods
(bad)
or
xchg
movs
arpl
xor
ret
call
retf
fnstsw
int
test
sub
push
cmps
or
mov
jnp
pop
xor
rcl
and
ds
pop
lock
add
lods
jge
jns
imul
addr16
sbb
and
vpmuludq
jl
cmp
hlt
hlt
loope
into
xchg
pop
stc
in
shl
cmp
lahf
(bad)
cmp
push
pop
adc
xchg
jae
jbe
mov
aad
sub
mov
mov
out
mov
ror
sbb
aaa
shl
sbb
push
les
add
cld
ret
sahf
adc
dec
adc
jns
mov
imul
add
fistp
push
push
dec
xor
in
cmp
stos
cmp
and
aaa
cmp
lock
out
xchg
pushf
pop
xchg
js
and
mov
js
out
jb
jmp
adc
out
cld
ret
xor
cmp
add
pop
xchg
mov
out
cwde
outs
mov
scas
outs
rol
bound
cwde
(bad)
fsub
ror
xor
and
(bad)
push
js
or
psubw
aas
in
in
jbe
sbb
out
pop
jnp
push
loop
push
iret
jae
jb
fadd
mov
pushf
cmp
sub
pop
or
pop
movs
and
cdq
retf
mov
jnp
xor
mov
leave
shl
mov
xor
cmc
dec
mov
ja
sbb
sti
cld
jb
jae
jno
adc
mov
or
out
dec
push
mov
scas
lahf
enter
inc
and
pop
adc
xlat
and
push
xor
mov
fidiv
fs
ss
pop
ja
xchg
cmp
pop
push
rol
mov
mov
into
ret
mov
ins
lods
jns
or
jno
ins
mov
mov
push
out
in
out
lods
mov
mul
(bad)
aaa
adc
call
xlat
in
daa
daa
imul
xchg
scas
fwait
inc
iret
leave
sbb
mov
mov
mov
inc
add
out
mov
scas
cdq
add
fist
aam
out
es
adc
mov
and
fimul
nop
mov
mov
or
adc
enter
mov
rcr
cmps
shl
jl
dec
test
add
mov
pop
push
add
cmp
dec
mov
ficomp
pop
push
out
fcom
jnp
adc
ins
(bad)
ret
xchg
mov
cmp
mov
and
jo
call
mov
add
and
and
rcl
add
dec
pop
js
dec
add
mov
stos
inc
cmp
adc
mov
jle
mov
lods
aam
cmc
xchg
and
xor
sub
sbb
sbb
fwait
pop
ret
leave
stc
in
stos
shl
mov
jmp
scas
sbb
and
or
inc
lahf
dec
push
mov
movs
jmp
adc
add
push
pop
jle
jne
push
push
jb
xchg
mov
inc
call
mov
xlat
mov
pop
inc
pop
fsubr
mov
les
mov
test
movs
xchg
mov
repnz
popa
rcr
stos
sub
les
out
call
hlt
dec
mov
sub
jmp
mov
sub
jo
fist
xor
icebp
lea
shl
and
shr
sub
adc
enter
xor
xor
sbb
mov
xchg
pop
ficomp
fisttp
push
outs
in
fptan
(bad)
mov
ror
jmp
rcl
sbb
inc
dec
(bad)
(bad)
mov
aam
and
mul
lahf
jl
dec
jg
sbb
push
addr16
push
(bad)
outs
loopne
sahf
lock
push
add
push
push
push
cmp
adc
rcl
push
dec
hlt
je
sbb
dec
mov
mov
push
adc
into
sbb
cmps
mov
jmp
cdq
mov
pop
les
pop
mov
mov
push
xchg
cmp
mov
cmp
out
lods
outs
xchg
sbb
mov
call
lods
inc
dec
cmp
cwde
cmp
mov
enter
sti
mov
xor
cmp
sub
adc
cmp
sahf
sbb
or
jmp
inc
popw
add
and
jno
inc
std
ins
mov
ror
cmp
cmp
xor
int
mov
into
or
mov
shl
nop
test
cs
inc
inc
cmps
mov
inc
cs
pusha
fisubr
xor
div
xor
sub
push
cmp
push
jecxz
xor
add
les
repz
daa
fnstcw
xchg
sahf
xchg
int
enter
push
sbb
es
or
xor
cld
jmp
lds
mov
ror
and
and
data16
ret
push
or
ds
jae
scas
inc
sar
jmp
inc
push
fdivr
mov
ror
sub
adc
adc
pushf
ds
aaa
dec
cmp
xchg
xor
pop
jmp
lock
hlt
inc
movs
jg
mov
xor
out
aad
ins
push
fmul
loop
xor
add
mov
fdecstp
js
outs
dec
fwait
aaa
mov
lahf
jno
les
lods
shl
dec
push
jnp
ds
mov
nop
add
and
or
adc
cmp
or
aaa
in
rcr
and
push
in
test
popa
test
inc
mov
fninit
cmp
pushf
sub
jle
movs
xor
mov
pop
loope
ret
xchg
lea
inc
mov
xchg
popa
leave
jg
or
int3
jp
push
dec
dec
inc
dec
fidiv
aas
pop
dec
xor
add
add
push
jne
mov
xchg
fst
fiadd
adc
jp
xor
push
int
mov
je
jge
sub
mov
das
add
adc
cmp
push
sub
nop
call
adc
and
mov
cmp
jne
ins
or
jecxz
stos
std
pushf
pop
push
in
ret
jl
popa
rol
pop
das
stos
push
bound
ret
cmp
ret
jl
adc
push
in
jo
popa
out
cmp
fisubr
pop
cmp
aam
mov
adc
(bad)
inc
sti
daa
sbb
jnp
add
test
std
out
jecxz
xor
cdq
or
ficom
push
sahf
add
pop
inc
stos
adc
push
daa
movs
test
jmp
mov
ins
in
cmp
aaa
(bad)
pusha
dec
sub
outs
mov
mov
cdq
daa
ret
sbb
nop
jo
ja
or
addr16
lods
xrelease
bound
xchg
adc
test
call
(bad)
or
push
jno
push
sahf
scas
inc
jb
int
in
std
(bad)
mov
mov
sahf
and
std
mov
sar
add
push
or
scas
fwait
test
sbb
imul
(bad)
or
mov
push
mov
mov
and
dec
add
lahf
add
ins
xlat
adc
mov
cwde
mov
repz
add
jne
or
mov
mov
add
outs
cmp
pop
bound
lds
dec
call
jmp
mov
mov
mov
jle
dec
fstp
les
and
es
mov
ror
stos
mov
push
push
mov
jl
lea
rcl
mov
test
sbb
xor
adc
adc
out
retf
dec
shr
mov
dec
xor
jp
ja
or
pusha
jo
lds
add
jbe
sbb
popf
enter
repnz
adc
and
call
lods
cmp
stos
push
ret
cwde
xor
shl
sub
fcomip
sub
mov
in
out
mov
xchg
jecxz
sub
out
push
gs
sub
shl
cmp
jmp
and
mov
(bad)
mov
or
in
xor
sub
out
pop
dec
(bad)
mov
xchg
sub
push
aas
xor
cli
xor
mov
jg
out
(bad)
outs
retf
cmp
fdiv
inc
popf
inc
pop
xchg
xchg
retf
lahf
adc
movs
mov
push
and
adc
and
loope
xchg
and
cmp
rep
stos
sbb
pop
xor
push
xor
push
lahf
sub
and
inc
fidivr
pop
aam
dec
(bad)
xchg
(bad)
xchg
mov
jns
retf
ins
mov
pop
inc
scas
(bad)
lock
mov
jne
adc
int3
sbb
push
adc
cli
test
fistp
pusha
retf
dec
(bad)
aad
mov
in
loop
std
jmp
xchg
lahf
leave
rol
fadd
pop
lahf
sub
push
xchg
call
mov
scas
mov
xchg
into
loopne
jp
call
sbb
das
cmp
shl
in
jg
aaa
mov
nop
lahf
push
hlt
pushf
mov
iret
inc
movs
retf
and
aad
push
imul
and
jo
mov
ss
(bad)
call
push
mov
add
mov
test
sbb
and
xchg
repz
add
fld
outs
std
pop
rcr
or
leave
xchg
clc
xchg
push
sub
sub
pop
adc
pop
inc
in
sub
xor
xchg
mov
fcomp
fild
sbb
leave
jl
jecxz
dec
out
pop
jg
sub
dec
inc
dec
stos
arpl
popa
call
sar
out
movs
iret
xor
cdq
sbb
or
lds
cmp
aad
in
and
stc
add
inc
sub
add
lods
pop
test
dec
out
mov
push
mov
mov
push
fwait
add
xchg
out
jecxz
imul
aam
push
or
inc
movs
or
cmp
xor
jbe
fucomp
pop
sbb
das
pop
test
je
aam
ja
adc
nop
adc
in
mov
xor
nop
pushf
xlat
fcmovnbe
bound
mov
xor
and
push
shl
and
rol
dec
sbb
fwait
daa
jne
test
(bad)
ficomp
jg
daa
in
push
jmp
adc
ins
add
mov
xchg
push
neg
mov
and
jnp
lods
inc
adc
dec
sub
jecxz
retf
cmp
ret
mov
xor
and
aam
jmp
stc
inc
or
(bad)
cmc
or
mov
pop
mov
adc
inc
gs
jno
(bad)
jne
(bad)
sbb
daa
mov
clc
jbe
push
les
retf
pop
sub
xor
xchg
ins
add
cwde
outs
mov
push
pop
outs
into
pop
pop
inc
sbb
fcomp
(bad)
cmp
jecxz
xor
mov
arpl
icebp
std
int
inc
test
inc
in
push
push
popf
pop
les
dec
or
gs
or
xor
fimul
mov
std
push
sub
retf
mov
aam
or
sar
pop
fadd
pop
or
fs
dec
mov
jno
jae
cmp
sbb
pushf
mov
jb
rol
bound
(bad)
in
and
pop
iret
dec
jbe
push
inc
popf
cdq
scas
mov
fistp
mov
jno
pop
mov
sar
lds
jae
push
int3
nop
movs
movs
imul
add
xor
xlat
cwde
addr16
pop
push
movs
out
in
dec
mov
sbb
aam
cmp
jmp
in
mov
enter
loop
sub
test
mov
and
fwait
rcr
adc
fs
fst
jno
adc
scas
xor
or
xor
jmp
mov
enter
mov
add
fwait
scas
or
dec
std
sahf
hlt
ins
in
xchg
dec
icebp
retf
mov
adc
and
out
mov
jp
push
in
shl
xchg
or
adc
and
fwait
mov
pop
or
jmp
movs
int3
pop
in
mov
scas
ins
mov
test
das
fld
into
push
inc
push
cmp
cmp
aaa
adc
fsubr
sbb
pop
fwait
dec
(bad)
pop
pusha
xchg
mov
imul
scas
fsubr
in
(bad)
mov
cwde
mov
cmp
(bad)
aas
push
mov
loopne
xor
loopne
aas
push
popf
mov
pusha
icebp
repz
push
retf
stos
outs
mov
popf
addr16
inc
in
(bad)
out
adc
inc
leave
pusha
sub
in
sbb
stos
dec
mov
push
jne
cli
mov
pop
jmp
dec
loopne
test
jmp
xchg
shl
(bad)
imul
jno
and
mov
jge
or
std
shl
dec
fiadd
ret
movs
into
out
push
shl
and
jl
test
je
xor
cmp
xchg
retf
mov
(bad)
sub
stos
sub
xor
dec
cli
cmp
dec
nop
push
and
arpl
inc
xor
cmps
jle
in
cmp
in
lods
fwait
scas
xchg
sti
add
inc
push
out
imul
bound
add
xor
mov
push
dec
inc
imul
ds
das
fmul
mov
int3
adc
or
push
or
lock
outs
or
dec
sbb
xchg
add
loope
fistp
ins
(bad)
push
repnz
fcom
les
out
movs
mov
outs
fdivr
mov
mov
mov
jns
ja
jg
dec
mov
iret
inc
or
pop
mov
lock
daa
and
pop
imul
retf
fiadd
lock
int3
pop
movs
data16
std
retf
push
(bad)
xor
push
inc
push
add
fst
out
pop
test
jno
dec
and
ins
pop
inc
mov
cmp
xchg
fsubr
jae
inc
jecxz
xor
hlt
sub
in
es
jo
in
cwde
mov
scas
call
fucomp
xchg
and
mov
aas
sub
dec
out
push
mov
dec
pushf
fild
(bad)
(bad)
xor
lods
rol
pop
scas
jmp
mov
fs
mov
adc
ret
rcl
jmp
mov
jne
(bad)
(bad)
mov
adc
and
(bad)
aas
fisub
or
xor
or
and
push
xchg
xor
retf
ret
jle
jmp
fstp
imul
inc
int3
(bad)
sub
push
jle
lock
pop
mov
movs
aas
fcomp
jns
jb
and
call
sub
add
cdq
repz
jp
cmps
(bad)
inc
add
jge
add
jbe
aad
xor
mov
out
push
repnz
jae
xlat
jl
lds
shl
dec
(bad)
rcr
loop
or
stc
inc
out
jmp
jge
jno
jo
retf
jecxz
xchg
jne
mov
xchg
cdq
adc
inc
cmp
xchg
icebp
shl
dec
scas
addr16
cmp
aad
inc
inc
add
stos
and
and
jg
shr
adc
jb
xchg
sbb
ja
hlt
xor
test
ins
adc
or
cmp
adc
addr16
mov
mov
clc
movs
inc
push
popf
jns
adc
enter
stc
loop
xor
cwde
dec
push
jmp
cs
and
cmp
mov
xor
cdq
add
enter
imul
push
sub
cwde
push
sbb
leave
sti
aaa
hlt
imul
lahf
add
cmps
dec
cmp
in
xchg
lods
(bad)
pop
inc
mov
inc
mov
xlat
fadd
popa
push
ins
or
xlat
fisttp
push
inc
out
push
mov
cli
out
int
sbb
ret
sub
loope
in
mov
push
mov
cmp
das
jge
or
push
xchg
lea
jg
pop
jge
in
xchg
outs
cld
pop
ret
out
mov
pop
leave
add
xlat
sbb
xchg
pop
dec
push
mov
or
pop
add
mov
imul
cmp
adc
call
mov
or
gs
and
cmp
jg
inc
imul
sbb
outs
add
data16
test
push
push
out
nop
mov
into
and
mov
or
push
fistp
jp
mov
fs
inc
mov
ins
test
shr
daa
ja
adc
mov
push
add
dec
ins
int
icebp
je
push
push
es
sar
outs
frstor
in
sbb
push
add
(bad)
mov
push
mov
cmp
sbb
xchg
sbb
rol
xchg
and
xchg
sbb
repnz
jecxz
xchg
and
nop
lahf
and
mov
and
pop
rcr
jp
ret
add
push
cmc
jbe
stos
aad
aad
inc
and
ins
push
xchg
cmp
jle
cli
lea
out
and
mov
aam
or
leave
jbe
std
inc
leave
push
retf
sti
mov
inc
mov
xchg
daa
xchg
xchg
(bad)
sbb
push
mov
mov
out
push
in
jp
cmp
loopne
dec
jl
push
push
xchg
lods
fmul
sbb
test
jnp
push
aas
dec
sub
repz
jb
or
(bad)
out
pop
pop
xlat
lods
mov
adc
sub
xor
es
and
jo
out
cmps
hlt
es
cs
mov
outs
cmp
pushf
popa
je
in
pop
dec
mov
call
mov
push
pop
xor
jmp
push
int
cld
push
sbb
je
jb
sbb
gs
jo
ins
mov
ret
dec
push
push
dec
mul
adc
mov
push
sbb
imul
(bad)
fdiv
inc
push
call
push
sar
or
pop
sbb
gs
jb
adc
ins
shl
xchg
loope
push
add
arpl
fisttp
test
pop
movs
or
lea
push
mov
or
out
dec
shl
sbb
and
ds
test
imul
jle
dec
mov
jl
lods
sbb
loope
hlt
jmp
in
outs
inc
inc
(bad)
jmp
pop
push
lock
mov
or
stos
adc
pop
loope
not
sub
aad
data16
sub
jle
jns
shr
adc
je
es
mov
sbb
(bad)
out
idiv
push
aaa
dec
xor
cmp
int
mov
add
inc
popf
pop
pop
xchg
dec
test
cmp
push
(bad)
push
sbb
jo
retf
dec
outs
sub
aaa
add
jns
push
rcr
call
add
test
jae
push
xor
popa
xor
sahf
and
imul
cmp
jl
in
sub
mov
sub
dec
test
pop
icebp
pushf
mov
inc
(bad)
aam
sub
push
cmp
rcr
jb
push
pop
cmp
shl
ror
gs
cld
shl
in
jb
xchg
or
es
mov
add
cwde
shl
pop
sub
or
scas
movs
inc
push
jmp
lods
std
sub
repz
push
imul
out
fwait
cmp
int
push
xor
scas
repz
mov
aaa
loope
adc
push
dec
jno
loop
sub
out
pop
mov
div
push
adc
sub
and
mov
dec
adc
dec
and
sbb
sbb
stos
dec
cmps
jnp
or
adc
(bad)
or
rcr
cmc
dec
push
ss
scas
jmp
push
scas
xor
repz
scas
movs
out
popf
sbb
imul
mov
pop
and
pop
ja
mov
push
adc
shl
aas
xchg
(bad)
loopne
out
jo
pcmpgtw
(bad)
movs
fimul
popa
ss
cmps
repz
retf
out
test
jp
enter
mov
call
or
aas
adc
aad
pop
inc
jmp
push
cmp
or
lahf
ins
inc
or
inc
pusha
out
ds
in
fidiv
cmp
rcl
or
cs
retf
pop
push
mov
sbb
fmul
fstp
or
fbld
hlt
or
cmps
inc
cmps
pop
stc
fcomp
push
arpl
or
adc
test
sbb
push
call
sbb
shl
jns
xor
xor
xchg
or
pop
sub
or
(bad)
dec
push
jmp
xchg
retf
bound
xor
jbe
cs
stos
jo
mov
and
push
jle
or
xchg
jne
scas
cmc
(bad)
push
(bad)
jmp
and
loopne
fidivr
mov
(bad)
fdiv
(bad)
sbb
ins
movs
jge
popa
xor
sub
in
movs
inc
retf
pop
lock
mov
pop
jbe
ins
les
xlat
mov
dec
icebp
pop
xchg
cli
mov
movs
mov
cs
addr16
push
lds
std
jecxz
rcl
fild
loopne
call
leave
jb
jnp
test
and
pop
stc
loopne
and
movs
add
pusha
arpl
push
and
out
test
(bad)
repz
cmps
jae
lods
je
fidivr
arpl
dec
outs
inc
(bad)
cld
jbe
jno
cdq
inc
push
mov
sub
or
popa
mov
ds
gs
and
outs
adc
push
adc
aam
es
sbb
push
outs
xor
scas
mov
xchg
in
out
cmp
cmps
movs
call
das
ss
in
jecxz
loope
pusha
dec
dec
sbb
and
adc
pop
pop
adc
mov
push
pop
lock
test
int3
dec
pop
mov
jecxz
xor
xor
sub
cdq
repnz
shl
mov
js
in
clc
fistp
in
dec
in
cmp
leave
mov
jbe
xor
cmps
add
xor
cld
shr
and
or
sub
daa
xchg
mov
in
(bad)
outs
adc
pop
lock
fstp
mov
push
adc
mov
jmp
cmp
leave
sbb
sub
xor
loopne
cmp
test
fs
test
jg
add
imul
push
xor
mov
ins
mov
and
dec
es
inc
stos
test
mov
lods
(bad)
jle
mov
lods
daa
leave
sahf
inc
sub
and
push
adc
or
pop
out
mov
xchg
je
mov
add
ins
cli
gs
jmp
sub
or
loopne
dec
mov
xlat
movs
aaa
jmp
mov
cmp
data16
scas
push
aaa
cmp
fs
or
push
mov
xchg
inc
ror
nop
popf
(bad)
outs
mov
cmp
fdiv
test
(bad)
outs
jno
or
xlat
add
adc
sbb
test
inc
std
xor
inc
aad
int3
cmp
push
out
pop
xor
ret
js
je
pushf
ror
aad
jns
test
fdiv
and
pop
or
mov
jle
ret
ds
adc
inc
mov
xchg
adc
outs
imul
sbb
(bad)
and
cmc
mov
outs
mov
adc
popa
jl
imul
pop
jnp
mul
jnp
loop
jg
aad
pop
and
mov
cli
sub
je
dec
enter
mov
scas
and
adc
mov
ret
sub
pop
mov
push
add
shr
mov
outs
push
pop
cld
fwait
jmp
stos
adc
xchg
sbb
hlt
std
add
int
mov
add
push
and
ret
data16
jo
sub
inc
lds
cmp
inc
mov
ror
fucom
adc
cs
adc
add
push
sbb
sti
mov
movs
cmps
ds
mov
repz
push
pop
repnz
mov
cmps
push
cmp
aad
push
into
xchg
pop
xor
jno
je
mov
sbb
pop
lds
and
sub
pop
ror
mov
mov
pop
idiv
movs
jp
or
pushf
or
loop
mov
mov
inc
mov
push
out
mov
les
push
ins
push
mov
xchg
adc
xchg
inc
cmp
xchg
outs
adc
xor
sahf
jge
mov
cwde
push
ja
inc
jbe
lods
sub
pushf
add
test
or
inc
fs
jne
xchg
es
push
jae
sub
aas
push
push
cmp
int3
adc
adc
xor
add
and
std
fs
jmp
mov
inc
loope
dec
push
xchg
lds
loope
out
in
fs
retf
pusha
fsub
add
mov
pop
cmc
scas
inc
jge
ins
xchg
sub
xor
and
cmc
imul
mov
inc
fnstsw
adc
mov
jl
mov
push
leave
mov
xchg
data16
mov
in
cmp
adc
xchg
inc
cmp
inc
imul
mov
push
icebp
mov
jge
xchg
mov
push
xchg
div
nop
ret
ins
(bad)
shl
sbb
sti
scas
adc
(bad)
dec
xor
inc
pop
mov
ins
fist
fwait
fwait
sub
jae
jbe
and
cmc
aam
mov
gs
test
fucomip
imul
mul
dec
je
push
push
retf
stc
repnz
mov
repnz
mov
xor
and
pop
cli
inc
iret
in
mov
mov
sub
rol
loop
or
dec
into
popf
sub
xor
fwait
mov
les
mov
xchg
xchg
das
mov
pushf
pusha
sub
mov
not
push
hlt
xchg
jno
shl
int
loopne
mov
test
add
shl
sbb
mov
imul
jg
cs
shl
add
es
sbb
mov
and
test
icebp
add
nop
cmps
ror
int
mov
pusha
and
push
mov
in
fdivr
mov
(bad)
pop
cmp
add
scas
in
dec
push
jne
or
pushf
jno
aad
jg
test
cmps
mov
neg
sbb
popf
aam
jl
xchg
fidivr
ds
cli
push
out
dec
or
mov
add
pop
sti
pop
sbb
sub
rol
cmp
in
mov
ja
mov
lods
push
and
mov
dec
inc
sbb
inc
push
pop
jno
icebp
mov
xor
jge
into
lds
pop
cmc
cmp
outs
xchg
xchg
aam
sbb
(bad)
fadd
jge
pop
fstp
xchg
jns
xchg
xchg
mov
dec
scas
call
(bad)
jns
int
and
aad
add
mov
(bad)
pop
lahf
sbb
rol
push
icebp
add
adc
test
ins
mov
int3
fisttp
jnp
push
sub
(bad)
stos
inc
pop
cmps
cmp
sbb
sub
pop
repz
cmps
mov
adc
jno
jns
not
mov
call
push
sub
into
ja
bound
inc
das
sub
or
and
inc
add
xor
xor
inc
mov
sub
fwait
mov
aaa
jge
pop
addr16
pop
dec
movs
cmp
or
imul
sar
cmp
sub
adc
ss
(bad)
out
sbb
div
(bad)
enter
test
ret
mov
ja
add
xchg
xchg
mov
sbb
arpl
icebp
int
sub
test
cmp
arpl
inc
push
mov
std
fucom
jbe
mov
lock
sbb
jns
stos
psubusb
sti
push
xchg
call
xor
popa
fist
mov
mov
inc
adc
mul
push
call
adc
push
pop
adc
das
mov
dec
mov
xor
push
es
inc
jb
inc
mov
movs
jecxz
dec
xlat
jnp
push
stos
je
mov
imul
rcl
dec
add
xor
cmc
or
lds
addr16
and
mov
pop
adc
mov
in
mov
sub
rcl
or
cmc
das
xor
popa
xor
repnz
dec
js
stos
xchg
iret
dec
mov
shl
add
lods
adc
in
(bad)
loop
stc
push
and
xchg
adc
jo
add
lods
push
dec
xchg
mov
iret
sub
inc
jbe
cli
adc
adc
xor
ret
(bad)
dec
xchg
dec
adc
add
jb
(bad)
or
xor
repz
sbb
stos
adc
sahf
dec
cmp
sbb
xor
lods
(bad)
mov
mov
jl
pop
ins
icebp
(bad)
aam
mov
xor
(bad)
aam
sbb
xchg
xor
cmp
outs
adc
sub
mov
push
mov
push
jmp
ins
sahf
xchg
shl
jle
adc
gs
ins
das
out
mov
hlt
cmp
xor
and
ret
mov
dec
imul
arpl
mov
mov
lock
leave
(bad)
jle
je
div
jmp
test
fdivr
xchg
hlt
cmp
imul
add
ja
out
(bad)
mov
(bad)
pop
jnp
lods
jns
push
iret
js
mov
dec
mov
cmps
lods
movs
xor
dec
jmp
mov
repz
jge
or
add
(bad)
adc
mov
dec
jo
mov
push
loope
iret
stos
jp
xor
(bad)
std
xchg
hlt
sub
out
xchg
fnsave
cmp
mov
fld
in
xchg
sub
pop
push
jns
mov
xchg
pop
and
sub
es
cld
jae
push
mov
add
enter
sub
push
cmp
and
mov
xlat
push
not
xchg
mov
xor
adc
dec
into
cli
repnz
shl
xchg
lea
faddp
test
adc
stc
and
(bad)
dec
jo
mov
and
mov
xor
mov
xor
popf
adc
ja
or
mov
cmp
and
adc
fldenv
test
push
mov
and
xchg
es
sub
add
jo
addr16
aas
push
inc
cmp
mov
xchg
nop
dec
lds
shl
cmp
loope
sbb
sbb
fistp
pop
pushf
ss
or
mov
and
jb
jmp
popa
adc
xchg
in
into
dec
mov
fcomp
or
mov
adc
int3
jns
cld
jo
mov
jne
xor
xchg
js
pop
pop
ret
or
int
jp
add
test
movs
and
or
lock
pop
inc
repz
jo
pop
jnp
xor
jns
mov
mov
jecxz
sti
sbb
push
imul
sbb
mov
repz
add
call
cdq
in
sub
jno
pop
mov
push
rcr
ror
cli
pop
sub
aas
inc
jg
xchg
in
jb
out
pusha
in
call
fs
idiv
fdiv
jne
dec
xor
dec
fwait
and
mov
mov
bound
jae
imul
ins
mov
jge
or
push
out
or
mov
rcr
(bad)
push
dec
(bad)
mov
jnp
pop
add
es
fcmovb
inc
sbb
cs
mov
or
adc
cwde
sbb
xor
jnp
jmp
dec
ss
(bad)
sbb
(bad)
stos
mov
mov
pop
sbb
push
push
jl
push
arpl
in
mov
xor
sub
ds
xchg
sub
jmp
jno
push
sbb
dec
add
das
sbb
(bad)
gs
ret
mov
retf
dec
call
shl
ret
xchg
jmp
retf
arpl
repnz
push
cli
cwde
mov
jne
clc
xor
xor
xor
stc
cmp
int
adc
xchg
add
push
pushf
movs
out
sbb
mov
mov
int
fs
rol
xchg
mov
jmp
push
adc
pop
popf
jp
xchg
je
js
je
inc
and
jns
push
ficomp
cli
sbb
repz
jl
mov
push
lods
add
jle
js
mov
popf
loope
mov
jae
inc
mov
or
in
out
bound
adc
aaa
jle
mov
xlat
ds
test
xor
call
out
sbb
mov
sar
test
add
shl
faddp
rcl
xchg
ret
divps
xchg
push
jl
cdq
and
mov
mov
and
js
xchg
jecxz
fnstenv
add
pop
dec
sub
scas
push
dec
cdq
loope
scas
sbb
dec
sbb
push
cli
inc
out
rcl
ror
idiv
aaa
js
iret
outs
or
(bad)
icebp
ins
sub
fimul
add
mov
hlt
xchg
sub
mov
mov
cmp
push
or
or
ja
(bad)
push
stc
xchg
cmp
(bad)
iret
loopne
stos
not
imul
jmp
mov
add
xchg
and
mov
iret
xchg
icebp
sub
cmp
(bad)
icebp
mov
add
loop
mov
ja
pusha
jecxz
jmp
sub
nop
mov
ret
xor
sbb
out
push
or
cli
mov
call
push
xchg
test
fwait
mov
and
and
xchg
adc
ds
xchg
xchg
xchg
add
xchg
pop
xchg
test
dec
mov
test
lea
pop
icebp
cmp
mov
leave
and
pop
rol
mov
mov
in
lods
mov
xchg
xor
jae
inc
mov
mov
mov
je
xor
mov
xor
retf
fld
jnp
icebp
cmp
ins
jno
pop
inc
jae
stc
sbb
cmps
xchg
bound
sar
dec
(bad)
lea
add
dec
dec
sub
mov
mov
cmp
or
lock
add
xor
scas
sar
ss
jno
les
shl
nop
in
pop
cwde
adc
and
sub
pop
push
dec
mov
fmul
call
push
mov
dec
xchg
mul
pushf
cmp
xchg
jge
lods
sub
loopne
mov
in
xchg
repnz
pop
outs
call
popa
cdq
mov
pop
popa
dec
adc
push
bound
xchg
push
movs
xor
ins
mov
es
mov
sbb
and
cmovl
ins
jae
push
or
xchg
pusha
add
arpl
mov
retf
pop
(bad)
jp
add
bound
mov
dec
add
in
dec
ret
pop
pop
imul
sbb
rcl
sub
ins
test
push
iret
mov
cs
mov
inc
int3
dec
cmp
add
jae
stc
enter
rcr
jp
imul
ins
lahf
cdq
mov
mov
push
(bad)
push
adc
xchg
retf
dec
sub
add
xor
push
and
cmp
call
xchg
adc
jmp
adc
sub
loopne
cmp
loop
mov
mov
arpl
test
push
les
mov
pop
and
xlat
test
les
push
es
aam
adc
mov
jnp
hlt
jmp
add
mov
cmps
cld
xlat
cmp
jbe
inc
mov
jmp
pop
div
or
inc
sub
shr
mov
rcl
int
dec
imul
inc
jmp
hlt
rcl
(bad)
imul
jbe
mov
inc
mov
jno
inc
(bad)
into
pop
pop
pusha
iret
jg
or
xchg
outs
cmc
push
cli
mov
adc
sub
scas
mov
pop
cmc
xchg
into
sbb
fimul
popa
repnz
hlt
adc
xchg
nop
call
or
inc
lods
mov
sti
jmp
call
xor
(bad)
cmps
sbb
in
ret
push
neg
mov
repnz
mov
cmp
les
xor
mov
sbb
push
aaa
mov
in
mov
ins
clc
push
ror
mov
(bad)
addr16
dec
repz
dec
ja
(bad)
mov
scas
xchg
cmp
rol
fwait
js
cmp
mov
jg
movs
aad
mov
jns
xor
and
aam
leave
sar
pop
bound
cmp
mov
dec
rcr
repz
inc
jbe
daa
cmps
pop
out
push
daa
clc
jno
push
stos
sub
jns
lea
cmc
dec
sti
push
xchg
and
(bad)
gs
jge
xor
inc
jne
imul
in
jg
cld
mov
add
das
and
mov
retf
add
(bad)
idiv
out
fwait
adc
jecxz
pop
cwde
test
dec
and
pop
sub
sbb
add
inc
in
je
push
jnp
jo
in
push
cmp
nop
mov
movs
dec
jnp
addr16
jne
jp
inc
and
out
and
arpl
shl
mov
jb
pop
clc
loope
mov
leave
pop
xchg
pop
mov
dec
aaa
inc
rol
(bad)
out
fmul
xor
mov
jno
sbb
xor
push
mov
xlat
loopne
xchg
jne
cmp
jne
mov
sbb
cmps
popa
push
xchg
jo
push
adc
jo
jns
sub
mov
cmp
inc
pusha
repnz
(bad)
and
and
stc
nop
cmp
in
mov
int3
mov
les
ja
pop
lods
cmp
and
(bad)
loopne
mov
test
push
dec
or
retf
dec
or
fcmovu
dec
jno
aad
adc
(bad)
mov
pop
mov
pop
cs
dec
aas
jnp
push
outs
das
add
push
cmp
jno
cli
ins
sti
cmp
aad
jnp
loopne
fucom
pop
pop
lock
or
fndisi(8087
mov
cmp
sar
sub
push
pop
js
cmp
retf
stos
leave
push
test
retf
popa
imul
(bad)
or
repnz
in
mov
mov
dec
(bad)
cmp
stos
jbe
pop
dec
pop
add
adc
lahf
aas
pop
popa
add
popf
sub
mov
sbb
or
pop
int3
lods
mov
inc
clc
add
addr16
push
cwde
lahf
inc
leave
inc
jo
repz
sbb
rcr
jo
or
pop
inc
push
xchg
add
push
jae
mov
inc
std
xchg
xchg
nop
and
movs
in
ss
xor
sti
pop
ss
push
jmp
pop
cmp
out
imul
mov
push
cmp
cmp
loope
sub
xchg
push
aaa
push
ret
push
jae
jno
jbe
repz
dec
pop
loop
push
inc
mov
enter
movs
sbb
xchg
inc
test
pushf
or
mov
jo
outs
in
xor
ss
cmp
ja
jbe
pop
inc
mov
dec
cmp
fisttp
adc
dec
in
pop
leave
es
lock
mov
add
push
mov
mov
mov
or
push
pushf
jbe
cmp
sub
mov
sbb
xchg
lods
test
jne
int3
call
popf
sub
into
jmp
jno
fmul
movs
push
pop
shr
(bad)
test
ss
arpl
adc
inc
mov
pop
cmp
and
jns
and
and
mov
cs
adc
cwde
mov
xchg
hlt
push
mov
popa
out
xlat
sahf
cdq
call
add
mov
lock
and
fsub
and
dec
xor
cs
sbb
add
aaa
and
pop
pusha
call
mov
mov
fnsave
mov
mov
stc
imul
cmp
sub
loope
fisttp
xchg
imul
(bad)
repnz
nop
push
push
mov
jbe
popf
mov
dec
retf
or
xchg
sbb
stos
add
mov
aaa
jmp
xchg
movs
xchg
pop
inc
mov
in
test
cli
xchg
jg
arpl
(bad)
jmp
ror
das
fsub
adc
cs
adc
xlat
push
jno
push
dec
or
rcl
push
ret
int3
mov
push
cli
cmp
cmp
pop
xor
or
xchg
rcl
xor
hlt
js
mov
lock
test
adc
rcr
jns
hlt
push
mov
jne
stc
or
sub
shl
in
ret
jo
push
cs
and
xor
(bad)
jb
inc
or
bound
mov
inc
test
xor
popf
cs
inc
dec
sbb
adc
cmp
dec
test
scas
push
jb
call
cwde
pushf
test
stos
nop
sbb
mov
sbb
mov
or
add
jge
cmp
pop
mov
jl
hlt
mov
inc
scas
lock
mov
mov
jnp
cmc
out
jmp
in
call
and
mov
fnstsw
call
add
in
out
xchg
or
loop
addr16
retf
jno
fsubrp
cmps
cmc
add
out
ins
outs
sub
sbb
mov
mov
cmps
loope
out
sbb
adc
add
lock
push
icebp
jmp
jne
add
scas
cwde
cmp
xor
mov
sar
lods
fwait
loopne
stos
push
push
je
push
or
in
cld
test
shl
push
xor
retf
xlat
sub
jg
jo
imul
pop
aas
and
dec
mov
sub
cmp
ins
inc
and
aaa
jmp
push
retf
pop
je
mov
fidivr
sub
push
out
mov
pop
push
mov
mov
scas
loop
pop
rcr
mov
pop
fwait
lods
sar
test
push
jp
and
add
frstor
mov
sbb
inc
cdq
dec
imul
fadd
mov
push
pop
(bad)
outs
lods
cli
outs
loopne
inc
and
out
ror
pop
out
mov
nop
fcomp
dec
cli
loope
xchg
stc
mov
lea
jo
dec
dec
jbe
je
pop
sti
int
inc
outs
fstp
inc
pop
jecxz
push
je
sub
add
mov
mov
test
je
mov
imul
mov
sbb
sub
shr
cs
sub
ins
std
push
jnp
iret
ret
rep
enter
xchg
lock
retf
pusha
repnz
jg
jmp
jp
or
test
mov
fist
ror
arpl
aad
mov
icebp
sub
mov
push
cmps
xor
jg
inc
cld
aaa
dec
pop
std
mov
das
scas
les
arpl
mov
cmps
fst
cmc
xchg
dec
sbb
aaa
mov
and
repz
repz
xchg
xlat
sbb
mov
push
push
push
add
mov
xlat
stos
jne
pop
add
pop
leave
hlt
aam
mov
jne
inc
jbe
aam
shl
inc
push
daa
shr
enter
sbb
jg
xor
mov
and
mov
ret
fcom
mov
add
inc
mov
in
fisubr
int3
sub
pushf
cmp
mov
sbb
sbb
mov
jmp
xchg
xchg
repz
cmc
jmp
xchg
add
push
add
aam
test
dec
fst
push
pop
dec
dec
pop
repnz
shl
sub
xchg
push
leave
cmp
addr16
retf
add
fisttp
jmp
push
inc
xchg
enter
ja
cdq
sub
xor
shl
push
into
cwde
mov
xchg
and
sbb
xor
sar
pop
pop
adc
add
addr16
xchg
sub
sbb
mov
lock
test
iret
inc
mov
rcl
sbb
(bad)
mov
dec
adc
xchg
fld
mov
xchg
shl
fwait
xlat
and
and
sahf
out
jle
repnz
adc
xchg
es
sbb
adc
icebp
in
dec
xor
fst
cmps
or
jbe
push
xchg
jmp
cmps
mov
mov
(bad)
jmp
imul
adc
hlt
je
in
dec
fwait
push
daa
or
sbb
mov
cmc
bound
adc
inc
cld
retf
jne
dec
ret
ffreep
pop
dec
cmc
fidivr
sub
inc
std
xchg
jmp
mov
ret
cwde
jnp
adc
mov
mov
cmp
sahf
rep
push
inc
cmc
adc
stos
jmp
lods
dec
rol
sub
push
fs
sub
inc
ins
dec
mov
mov
sub
push
cmps
adc
pop
lods
mov
xchg
and
fst
jbe
iret
cli
daa
movs
inc
fisub
in
sbb
sub
call
add
cwde
int
div
pop
sbb
loop
dec
push
je
test
mov
and
xchg
adc
(bad)
(bad)
xor
int
rcl
mov
jne
ins
xchg
cwde
push
pop
add
xlat
xchg
aaa
sbb
movs
xchg
or
aas
pop
fdiv
mov
xor
or
in
dec
push
es
jge
call
inc
imul
push
xor
and
sahf
call
cmp
mov
pop
lods
cli
jmp
loopne
addr16
ins
add
xchg
lds
test
cmp
and
popf
inc
pushf
xchg
shl
out
mov
push
fsub
xor
loopne
xchg
sbb
inc
sub
icebp
jl
pop
es
and
loope
mov
inc
aaa
mov
(bad)
stos
mov
xor
or
jp
mul
lods
jns
fidivr
bswap
hlt
les
add
ins
out
daa
lahf
sub
sldt
mov
mov
(bad)
pop
dec
sti
rcr
sub
lods
dec
jb
mov
push
xchg
jb
pop
mov
cmp
cmps
jmp
pop
cmp
xchg
out
lock
sar
push
(bad)
or
daa
into
and
lds
fdiv
mov
xlat
iret
and
push
inc
push
sti
out
test
cmc
pop
shr
dec
les
jbe
nop
sub
shr
test
dec
ror
xor
mov
out
(bad)
out
dec
jb
ins
adc
xlat
cmp
jb
sbb
pop
lods
cmp
dec
loope
lea
int
call
push
retf
mov
lea
shl
xchg
sbb
inc
lock
pop
test
(bad)
call
enter
call
mov
pop
cld
and
(bad)
loopne
and
mov
scas
mov
jge
jb
shr
ret
jo
jmp
(bad)
sti
cs
jmp
cld
std
fld
and
ins
sub
frstor
inc
lea
repnz
hlt
xchg
jp
mov
mov
mov
or
(bad)
xchg
cmp
and
ret
cmp
mov
sbb
lock
xchg
add
sub
adc
mov
xor
inc
fimul
dec
mov
pop
call
jp
dec
sbb
mov
rcl
and
cmp
and
scas
ss
pushf
pop
cld
sbb
and
in
jl
rcl
out
dec
cli
mov
add
lds
(bad)
(bad)
mov
xchg
mov
sub
mov
sar
inc
adc
add
xchg
ds
sar
adc
jnp
sbb
dec
aam
or
js
jae
and
daa
call
xchg
cdq
test
push
enter
outs
popa
dec
or
ret
push
lds
test
pop
adc
xchg
shl
in
xchg
adc
(bad)
shl
mov
push
or
mov
call
xor
mov
loope
inc
mov
ret
adc
(bad)
pop
sbb
mov
xor
mov
pop
imul
daa
(bad)
in
rol
ins
and
adc
imul
adc
ins
sub
stos
push
mov
call
aas
mov
add
dec
add
dec
cmp
mov
dec
mov
sbb
std
ret
(bad)
scas
in
sbb
repz
xchg
shl
stos
out
and
pop
jbe
loop
mov
cmp
gs
rcr
addr16
fs
pop
jae
mov
cmp
and
scas
pop
mov
test
test
pop
dec
fdiv
sub
fnsave
(bad)
bound
iret
xor
loopne
jbe
push
loopne
dec
jecxz
out
sub
into
pop
shl
jo
xchg
jo
jl
arpl
fdivp
xchg
adc
cmp
xchg
sub
loopne
pop
fstp
xchg
mov
mov
lods
xchg
cmps
ins
rol
or
jns
mov
jp
es
adc
es
mov
enter
pop
sbb
xchg
sbb
lahf
mov
and
sbb
cmc
mov
es
into
fiadd
cdq
xlat
inc
mov
sahf
sbb
add
shr
fwait
es
pop
mov
pop
fdiv
rcl
mul
mov
fstp
adc
inc
ds
stos
repnz
sbb
test
aad
aaa
imul
sbb
mov
das
push
dec
int3
in
jmp
jle
into
cmc
xor
fld
dec
mov
sub
jecxz
int3
(bad)
imul
dec
sub
sar
(bad)
push
stos
mov
cmp
jmp
out
fnstcw
lds
ja
lock
nop
neg
icebp
out
rcl
lahf
mov
ins
xchg
cdq
adc
test
xchg
xor
sub
hlt
scas
sahf
xchg
jecxz
push
or
in
sbb
jl
mov
xchg
mov
cmp
cmc
add
xchg
shr
adc
cwde
or
popf
push
pop
lods
stos
mov
ss
jmp
pop
ror
aam
xchg
out
pusha
or
inc
addr16
push
add
mov
adc
push
jmp
hlt
ins
lds
rcr
ret
and
cmps
xor
xchg
jmp
retf
and
mov
ds
scas
das
fs
pop
cmp
(bad)
lds
mov
mov
ret
(bad)
cmps
cdq
inc
dec
xor
cmc
out
xchg
pop
pop
mov
inc
inc
into
rcr
mov
jg
pop
cmp
jae
mov
mul
push
push
cmp
xchg
aaa
retf
aaa
imul
inc
(bad)
loop
mov
dec
mov
int
sub
ss
(bad)
js
stos
push
mov
inc
call
sub
lahf
add
sbb
paddsb
stos
pop
mov
mov
es
push
xor
retf
sti
jae
pusha
movs
adc
sub
(bad)
aad
dec
test
mov
in
(bad)
aam
out
xchg
enter
retf
ja
push
or
es
add
inc
pop
pop
lock
loope
xchg
mov
test
dec
shr
cmp
cmp
les
xlat
pop
mov
add
sbb
fcmovnbe
cmc
xor
aas
(bad)
dec
push
data16
mov
mov
xchg
in
push
jno
sub
cmp
cli
sbb
cmc
or
pop
aaa
popa
pop
xchg
or
xchg
je
aam
pop
or
fldcw
fisttp
ss
xor
or
inc
or
adc
push
fist
mov
inc
mov
cwde
sti
and
call
aas
(bad)
xchg
sahf
daa
xchg
and
(bad)
push
mov
ret
add
out
push
fwait
mov
and
mov
jae
out
or
inc
sub
dec
or
and
sub
scas
test
(bad)
xor
or
dec
es
or
movs
ret
sub
mov
mov
adc
cli
or
and
xchg
push
out
dec
inc
shl
arpl
in
hlt
bound
jo
lea
icebp
mov
dec
cwde
call
jmp
or
retf
xchg
mov
loopne
adc
adc
daa
cdq
xchg
push
cmp
outs
repz
les
mov
popf
cmp
in
sbb
or
fdiv
sbb
or
loopne
lock
xor
jl
leave
dec
inc
xlat
daa
stos
imul
mov
and
ins
mov
ss
push
mov
cmps
pushf
aad
jnp
sub
jnp
(bad)
xor
sub
mov
or
in
mov
and
loop
xor
dec
ficomp
add
pop
or
movs
adc
add
std
pop
nop
cwde
pop
jmp
add
xlat
in
jne
cmps
push
dec
ins
shl
dec
ja
mov
aam
mov
ror
adc
movs
dec
out
aad
mov
cmps
sbb
push
out
mov
mov
xchg
fiadd
xchg
inc
fstp
aaa
lock
stos
sbb
jmp
or
sub
pop
ja
sbb
mov
fidiv
lahf
adc
cmps
data16
adc
test
sbb
xchg
data16
sbb
push
sbb
push
dec
imul
mov
pop
jmp
cmp
add
cdq
dec
fwait
nop
lods
add
pop
imul
cmp
out
gs
pop
loopne
lods
push
pop
pop
in
mov
mov
ds
or
frstor
shl
repz
push
cmps
mov
push
pop
add
and
pop
adc
call
(bad)
xchg
shl
push
fwait
xor
sbb
mov
pop
push
(bad)
push
push
in
ret
jp
into
loope
shl
xacquire
sub
or
xchg
ficom
inc
mov
inc
xchg
mov
lods
sub
mov
inc
cmp
ret
shl
cmp
cwde
in
outs
les
xor
sbb
push
xor
bound
cld
gs
cmc
div
jnp
xchg
inc
in
ds
mov
dec
cmp
pop
mov
pop
pusha
movs
nop
mov
jo
sbb
fcmove
mov
cmp
mov
into
test
xchg
out
jnp
xchg
jp
not
out
stc
cmc
add
repnz
lahf
mov
hlt
retf
add
xchg
mov
xor
dec
(bad)
call
mov
ins
ins
adc
jle
jl
cmp
sbb
mov
cli
cmps
cmp
adc
out
cld
xchg
mov
shr
push
jle
lods
xchg
ss
inc
aaa
fist
pushf
mov
scas
inc
cmp
push
sti
push
sub
mov
mov
outs
cmp
jmp
xchg
lahf
imul
aas
pop
mov
dec
jne
outs
add
cmp
mov
stc
dec
cmp
arpl
rcl
gs
dec
dec
ror
mov
cdq
xchg
pop
(bad)
repz
push
inc
xchg
iret
movs
jge
mov
add
push
gs
push
adc
stos
test
inc
aad
lock
jmp
add
sbb
xchg
mov
push
mov
or
sbb
aaa
push
into
push
pop
mov
ret
addr16
cmp
gs
jns
pop
or
sub
(bad)
lahf
adc
icebp
repz
sbb
test
xchg
push
in
dec
or
jbe
repz
(bad)
sub
scas
add
and
call
imul
jmp
lds
sbb
enter
lods
inc
sub
xchg
xor
bound
cmp
sbb
sub
adc
jge
pop
and
push
push
test
xor
mov
add
fs
inc
and
mov
jge
shl
enter
cmp
pushf
stos
mov
cdq
fbstp
aad
pop
sbb
lods
retf
xchg
jle
cmp
xchg
movs
out
les
dec
data16
inc
loope
lahf
inc
sub
fs
ret
xor
cwde
sbb
ins
fs
jp
out
cmp
shl
sbb
rol
sub
dec
pop
pop
lods
(bad)
stc
sbb
mov
aas
push
pop
fldcw
add
jbe
push
dec
cli
mov
popw
inc
adc
xchg
xchg
mov
or
add
cli
dec
add
ss
enter
pusha
shl
jno
iret
inc
enter
pop
ficom
iret
div
(bad)
and
retf
jge
imul
cmc
jecxz
sub
out
test
lahf
mov
mov
mov
imul
sahf
cdq
aaa
cmp
add
mov
mov
std
jecxz
xchg
ja
cmps
pop
mov
push
jbe
push
leave
cmp
sbb
pop
dec
add
mov
xchg
dec
mov
pop
repnz
scas
cmps
push
(bad)
loopne
std
(bad)
jns
pop
jmp
xor
push
dec
(bad)
xchg
inc
ficom
push
arpl
stc
arpl
pop
frstor
mov
in
ds
cmp
ficom
ds
popa
sti
loope
xor
test
sar
jmp
xlat
jnp
popa
sub
mov
pushf
repnz
inc
cli
pop
dec
bound
scas
adc
sar
pop
std
addr16
sti
adc
adc
or
ror
xchg
jle
push
(bad)
in
xchg
mov
cmp
mov
or
retf
jecxz
jne
xor
pop
jae
jp
cmp
push
cmp
jnp
retf
pusha
mov
sbb
ret
adc
add
jno
adc
xchg
adc
js
cwde
call
into
scas
cdq
pop
pop
or
jl
hlt
fmul
xor
movs
xor
fs
mov
mov
stc
inc
sub
in
sbb
jnp
mov
push
iret
hlt
xchg
push
cmp
pop
retf
ret
mov
inc
jg
mov
cmps
mov
jno
dec
jp
and
test
into
out
int3
jmp
in
mov
(bad)
aam
fwait
test
lahf
popa
mov
rcr
adc
xchg
mov
or
test
xlat
cmp
popf
pop
xchg
cmp
and
hlt
ds
cs
idiv
inc
push
mov
test
add
inc
push
ret
mov
xlat
jmp
adc
mov
scas
enter
adc
test
movs
add
in
inc
in
shl
jne
fucomp
adc
mov
xchg
test
popa
add
fs
jns
mov
fcmovu
or
xor
adc
inc
int
pusha
mov
mov
rol
sbb
or
movs
lods
push
outs
or
xchg
pop
push
imul
out
mov
out
mov
add
in
(bad)
into
mul
je
mov
nop
(bad)
jp
xchg
shr
sti
add
(bad)
sbb
or
xor
xchg
fmul
daa
or
js
rcl
das
xor
imul
dec
idiv
stos
and
mov
aas
or
mov
hlt
popa
not
jmp
aas
mov
xor
(bad)
xchg
retf
mov
jmp
call
push
jp
cmp
xor
inc
out
jge
mov
dec
cmp
xchg
sub
jg
xchg
cmp
cs
pop
lahf
mov
mov
in
xchg
pop
push
(bad)
hlt
dec
dec
pop
sub
daa
in
mov
out
pop
andnps
jecxz
fisub
add
in
(bad)
ss
shl
cmp
mov
sbb
add
les
sbb
push
xchg
cmp
cmp
sub
or
imul
jge
or
sbb
adc
mov
fsub
mov
pop
add
pop
add
inc
jno
shl
mov
ds
ds
mov
cmp
sub
movs
mov
cmc
xor
mov
pop
int
mov
mov
adc
push
sbb
xor
cs
mov
imul
mov
dec
std
addr16
loop
dec
inc
dec
loopne
xor
loopne
imul
ins
test
imul
adc
(bad)
ss
jmp
cld
adc
cmc
mov
push
or
and
ds
out
ins
adc
neg
adc
les
(bad)
popa
clc
or
fs
inc
push
push
(bad)
pop
mov
cdq
adc
leave
movs
pop
cld
scas
das
mov
mov
mov
xor
(bad)
push
sbb
sub
scas
(bad)
and
lods
into
and
jmp
and
push
inc
aam
mov
out
(bad)
into
pusha
dec
cmp
fldl2t
loop
movs
add
movs
jge
out
gs
adc
loopne
aaa
xor
sbb
mov
or
cwde
outs
xchg
pop
stc
xor
mov
inc
nop
pop
or
rol
jmp
and
and
pop
sbb
leave
popa
mov
int3
out
dec
cmp
add
scas
and
loopne
sahf
lea
fist
and
push
jle
ja
cmp
pop
fdivrp
cmps
lea
dec
mov
outs
mov
xor
push
mov
jmp
push
pop
imul
xchg
mov
jo
(bad)
xchg
dec
mov
sub
sbb
mov
dec
fwait
push
sbb
cmp
xchg
sahf
jmp
xchg
or
inc
xlat
mov
cmp
cmps
and
xchg
std
and
in
mov
jbe
mov
mov
sar
out
(bad)
int3
mov
add
mov
stc
sbb
data16
jmp
inc
pushf
pop
(bad)
push
lea
jnp
scas
sbb
stos
bound
push
or
js
sub
push
fidiv
lds
push
out
pop
adc
sar
push
inc
cmp
test
jbe
jns
sub
lahf
pop
adc
es
and
sub
test
mov
cmp
test
iret
jle
ds
jae
dec
cwde
jnp
adc
xlat
pop
popa
inc
mov
jmp
mov
popf
sti
cmc
pop
cmp
pop
popa
fild
and
clc
jno
cmps
fbld
mov
jne
pop
clc
jl
mov
outs
call
scas
je
sub
pop
cmp
push
inc
sub
lds
add
push
cmp
gs
push
jo
ror
xchg
mov
mov
mov
retf
ins
sbb
sbb
dec
mov
dec
mov
setbe
aas
les
jno
lahf
mov
sti
jns
movs
into
pop
inc
xor
xchg
std
pop
pop
jg
mov
cmp
fistp
xchg
jg
popf
jnp
inc
icebp
inc
test
loop
out
lahf
shl
mov
popa
rcl
jle
fldenv
mov
push
cmp
pop
in
icebp
enter
jg
add
mov
and
loope
xor
loopne
ja
sbb
(bad)
fmul
cmps
dec
push
fdivr
addr16
xor
or
sub
(bad)
xchg
mov
dec
jecxz
jmp
pop
movs
xor
hlt
inc
xor
leave
jp
out
imul
mov
fwait
sub
pop
mov
mov
or
xchg
stos
pop
xchg
test
mov
jno
(bad)
mov
(bad)
cmp
jmp
pop
xlat
repnz
or
in
pop
xchg
pop
add
nop
mov
(bad)
push
sbb
je
dec
out
mov
in
mov
(bad)
jo
test
stos
enter
gs
pushf
mov
int
xchg
or
and
nop
push
fld
jecxz
sub
mov
jle
adc
retf
mov
sbb
mov
mov
scas
out
or
mov
fs
out
add
leave
inc
jae
inc
ss
sub
cmp
pop
jle
pop
not
sub
cmp
iret
jle
and
test
int3
sbb
sbb
shr
dec
aas
ins
in
rol
push
xor
jecxz
out
mov
sub
pop
cmps
aad
push
jge
and
pop
sub
call
push
adc
mov
sub
int3
in
jne
ret
cwde
mov
jmp
fist
push
sub
inc
shl
or
jae
mov
inc
lahf
cmp
imul
clc
jne
scas
pop
jg
sub
pop
push
cmp
pop
mov
mov
in
(bad)
mov
pop
retf
addr16
ret
test
int3
sbb
and
jnp
mov
je
jne
cmp
xor
scas
xchg
das
cmp
dec
sub
(bad)
jb
sbb
mov
sbb
add
icebp
rol
stos
inc
jns
jbe
sahf
mov
iret
mov
mov
pop
mov
scas
push
or
out
cmp
pop
lods
retf
xlat
call
push
movs
cmps
push
pop
sbb
loopne
xchg
inc
adc
sub
jbe
les
pusha
movs
pop
fs
and
mov
pop
xor
and
les
adc
add
mov
mov
(bad)
cmp
inc
xor
xchg
fcom
(bad)
pop
sbb
das
js
out
call
lahf
mov
xchg
fbld
(bad)
addr16
in
mov
ins
dec
sbb
push
ds
and
or
loope
test
mov
mov
cmps
je
fwait
cmp
jno
aad
cmp
stos
(bad)
sub
fsubp
inc
retf
loop
movs
jmp
jns
cld
repz
jle
mov
in
adc
lock
fwait
or
std
stos
pop
retf
mov
aad
call
mov
imul
adc
pop
(bad)
xchg
mov
and
shl
jmp
ret
pushf
and
fsubr
inc
xor
jecxz
retf
sar
dec
cmp
jns
loop
clc
int
or
mov
sahf
sub
ret
call
call
jb
(bad)
or
popa
(bad)
pusha
dec
or
xchg
lods
sub
mov
icebp
movs
test
loopne
push
or
retf
sar
movs
test
nop
mov
inc
sbb
daa
xor
or
in
bound
daa
inc
loopne
fimul
xchg
les
mov
xchg
pop
rcl
or
icebp
pop
cmps
call
jmp
repnz
sbb
sbb
adc
adc
popa
cmp
or
sub
jmp
mov
mov
bound
pop
dec
xor
and
imul
aaa
or
les
or
xchg
jle
adc
(bad)
aam
shl
scas
jmp
scas
pop
add
pop
inc
jge
xchg
push
hlt
sbb
jl
retf
and
mov
push
jno
aad
sbb
sar
or
xchg
rcr
mov
scas
mov
and
inc
and
pop
retf
cdq
arpl
lahf
lds
gs
cmp
and
add
mov
mov
fild
push
sbb
add
add
and
mov
jo
mov
call
xlat
cs
push
hlt
inc
aad
enter
outs
adc
sbb
adc
inc
and
xchg
lods
jne
call
nop
lods
dec
dec
inc
cmp
mov
cmp
pop
pop
hlt
test
sbb
ror
push
and
data16
inc
cmp
add
popf
cwde
fptan
les
xchg
ret
push
std
int3
pop
jo
adc
or
gs
cmps
cmps
leave
add
fwait
jge
aam
scas
retf
pop
and
sbb
mov
jo
pop
dec
data16
jae
mov
(bad)
adc
bound
xor
lock
mov
outs
ss
cmp
xchg
mov
mov
stos
fwait
loop
test
or
lods
ins
fld
mov
in
int
sbb
mov
pusha
cdq
adc
jnp
test
movs
mov
fnsave
test
cmc
lds
jnp
sar
dec
xchg
dec
in
mov
lahf
fild
adc
mov
div
inc
mov
retf
mov
cwde
push
jp
pusha
sub
pop
jl
rol
sbb
mov
repnz
stos
mov
adc
inc
xchg
add
add
dec
xor
sub
rcr
jns
pop
xchg
jbe
dec
ss
lods
outs
push
mov
je
leave
jp
jmp
mov
cmc
push
and
pop
adc
push
mov
jge
jl
cmp
push
pop
mov
cmps
jae
cmp
pop
fs
les
imul
fimul
je
jge
cmp
mov
add
pop
hlt
mov
out
or
mov
xchg
push
rol
retf
je
outs
leave
test
xor
xchg
cwde
xor
out
cmp
jne
mov
(bad)
inc
(bad)
cmps
mov
movs
repz
inc
mov
push
scas
jle
xchg
fisub
xlat
stc
jnp
pop
leave
inc
pop
xchg
pusha
fnstcw
sbb
adc
inc
jnp
outs
call
adc
dec
push
jb
sub
jo
mov
cs
jae
iret
mov
or
dec
icebp
cdq
jae
(bad)
jns
test
not
mov
es
rol
push
retf
jecxz
clc
xor
push
pop
jbe
in
mov
xchg
int
xchg
ss
mov
inc
cmp
xchg
mov
dec
mov
xor
xchg
ret
sti
(bad)
push
dec
pop
jmp
adc
jmp
xor
data16
or
frstor
jbe
mov
addr16
out
pop
cmp
(bad)
rcr
cmp
or
ss
sbb
pop
add
loopne
adc
outs
jg
add
lahf
jb
xchg
das
push
neg
mov
div
or
push
jge
or
out
int3
pop
cdq
js
les
ror
mov
mov
nop
sub
std
and
mov
fwait
jb
jl
fnstsw
and
mov
(bad)
jo
mov
popf
mov
push
fadd
mov
dec
inc
stos
into
xor
cmp
pop
push
mov
adc
mov
mov
and
xor
arpl
mov
and
mov
repnz
imul
aad
das
lods
inc
je
ror
xchg
jg
aaa
stos
xchg
mov
hlt
jmp
cmp
mov
mov
mov
sbb
das
and
xchg
je
xor
std
(bad)
jle
dec
out
pusha
fsub
ficomp
stos
stos
into
mov
adc
mov
jg
gs
pop
or
(bad)
sub
pushf
dec
fs
cmp
iret
les
movs
and
popf
push
leave
stos
mov
cmps
cmp
in
or
std
sub
cmp
cli
fidivr
xchg
mov
scas
and
add
inc
stos
scas
lock
sub
jecxz
add
jmp
mov
retf
inc
mov
hlt
in
popa
lods
mov
push
mov
inc
xchg
mov
fcmovnbe
les
lds
adc
push
push
aaa
popa
in
xchg
repnz
dec
mov
adc
repnz
xchg
imul
adc
div
not
out
mov
adc
lods
cmp
pop
lods
loope
and
rcr
cld
push
test
mov
or
repz
pop
stc
add
out
dec
push
dec
(bad)
out
daa
jmp
cmp
movhps
out
push
dec
rol
neg
test
dec
scas
mov
jecxz
sbb
test
cld
and
and
arpl
cld
add
inc
mov
mul
aas
mov
or
mov
sbb
aaa
mov
(bad)
int3
and
div
jno
bts
jne
clc
push
ds
jmp
mov
pop
clc
cwde
inc
dec
mov
mov
adc
repnz
inc
scas
or
js
icebp
shl
test
mov
cdq
call
or
adc
sbb
jecxz
stos
in
xor
rcl
stos
in
scas
push
mov
idiv
add
out
fwait
daa
sub
jle
adc
jl
retf
push
test
ror
dec
cmp
daa
add
mov
dec
and
mov
fld1
popa
cld
sbb
or
push
xchg
jb
addr16
mov
jo
movs
lods
stos
ja
dec
stc
xchg
cli
lods
lods
jl
adc
fwait
test
in
icebp
and
and
adc
push
ret
hlt
jle
ret
cmps
mov
lahf
cli
mov
cmc
hlt
daa
dec
cmp
inc
sub
mov
mov
das
sub
sbb
mov
sar
cmp
pop
mov
fimul
adc
sahf
pop
test
jbe
push
add
test
add
mov
lock
jl
fsubr
fdiv
sbb
pop
dec
sub
jp
push
mov
(bad)
lods
pcmpgtw
mov
(bad)
jb
mov
sub
stos
stos
pop
sbb
rcl
add
clc
mov
prefetch
xchg
mov
mov
adc
imul
mov
ror
fnsave
test
xor
sbb
push
inc
ins
sbb
hlt
aaa
dec
pop
pop
push
(bad)
retf
mov
push
je
fadd
imul
mov
call
fld
test
lods
out
rcl
dec
outs
inc
push
jnp
jne
les
into
lahf
mov
and
xlat
push
inc
lea
nop
mov
xchg
xchg
(bad)
pushf
addr16
fild
fnsave
call
fisttp
ins
into
pop
push
pop
(bad)
xor
or
repnz
sbb
or
dec
jl
cmp
cmc
dec
fisubr
xchg
dec
sbb
fild
cmps
int3
or
jbe
fs
lahf
loopne
movs
mov
aas
(bad)
mov
cmp
inc
dec
sahf
mov
test
rcr
into
inc
inc
xchg
outs
iret
out
jmp
test
sahf
cwde
mov
lock
mov
nop
cwde
lea
int3
cmps
aaa
pop
ds
leave
pop
cmp
and
mov
fst
cmp
loopne
ins
xor
loope
inc
xlat
test
(bad)
pop
xor
imul
mov
sub
int
lahf
je
inc
and
jmp
and
mov
xor
test
xchg
test
or
jmp
cmp
jmp
or
dec
cmp
sti
xor
add
loopne
ret
das
add
fld
pop
outs
das
stos
pusha
mov
popf
xchg
fidivr
rcr
push
ins
out
sar
jae
nop
mov
adc
test
mov
loop
inc
sub
mov
xchg
mov
popf
bound
fistp
sbb
out
push
leave
and
dec
out
add
movs
or
mov
push
push
movs
mov
push
adc
retf
cmp
push
and
adc
mov
pushf
mov
xchg
and
js
mov
call
adc
lds
mov
inc
pop
in
mov
adc
iret
sbb
add
push
push
inc
in
jg
inc
xrelease
arpl
cmp
inc
pop
js
mov
sbb
std
int3
sbb
dec
cli
outs
ror
loop
add
push
sub
and
(bad)
pop
push
mov
loop
cmp
pop
mov
(bad)
iret
push
or
push
jo
fwait
jae
in
(bad)
cmp
sub
dec
test
out
jl
lods
mov
sub
jbe
(bad)
pushf
sbb
out
pop
adc
dec
aaa
jmp
mov
cmp
xchg
iret
sbb
test
inc
sbb
mov
mov
xlat
int3
xchg
pop
aaa
jnp
push
mov
push
inc
add
dec
lds
mov
jnp
xchg
xor
mov
je
sbb
loopne
xchg
into
out
fcomp
mov
aad
xlat
sti
mov
adc
call
repz
jmp
stos
mov
imul
push
jno
out
mov
sub
cmp
test
push
scas
xor
mov
out
mov
push
or
out
xchg
int3
and
sbb
aaa
xchg
leave
xchg
sbb
sbb
push
dec
ret
(bad)
fdiv
or
fwait
imul
fsub
mov
jl
pushf
jo
push
jns
sbb
arpl
or
addr16
fsub
repz
mov
or
inc
and
fs
cwde
add
cdq
outs
pusha
scas
cmp
in
cmps
(bad)
retf
dec
call
jae
ficomp
xor
rcl
mov
cmp
pop
fnstenv
push
cmc
dec
push
pop
dec
add
inc
adc
mov
mov
dec
sbb
lods
sub
add
stc
test
mov
pop
sub
mov
sub
das
pusha
inc
mov
popa
cmp
pop
mov
rol
fwait
inc
sbb
shl
js
rcl
cld
retf
mov
lods
push
mov
test
xchg
inc
into
into
and
je
mov
push
xchg
fidivr
fwait
hlt
stos
push
daa
inc
das
mov
jb
adc
push
pop
jae
sti
mov
movs
adc
fldcw
or
loope
sub
sbb
cmp
xor
aad
cdq
cmp
lds
inc
outs
aas
aas
test
xchg
mov
es
jg
fldcw
cmp
movs
cdq
add
repnz
push
xchg
mov
aam
adc
rol
cmp
sbb
pop
out
mov
ror
repz
mov
push
je
mov
bound
rol
xor
addr16
int
loope
add
mov
xor
jp
adc
fld
mov
inc
mov
ret
hlt
sub
cmp
(bad)
push
mov
call
mov
mov
mov
jno
(bad)
push
cmp
add
sar
jno
je
jno
mov
ret
push
push
cdq
outs
inc
fild
js
maxps
cmp
jmp
or
and
arpl
adc
dec
cmps
fmul
xor
sbb
in
fnstsw
inc
mov
cmp
movs
xor
cmps
add
icebp
adc
imul
inc
sub
cmc
jo
cld
mov
sub
jg
lods
inc
(bad)
clc
shl
test
pop
mov
sub
enter
movs
or
xchg
neg
test
stos
dec
inc
outs
or
inc
push
(bad)
pop
jecxz
sub
cld
inc
rcl
test
adc
retf
mov
sahf
das
mov
jmp
dec
and
(bad)
sti
pop
mov
popf
sbb
ss
outs
out
cmp
pushf
jp
dec
add
mov
shl
outs
mov
das
ja
outs
in
clc
out
les
adc
movs
addr16
(bad)
or
sub
shr
sub
push
(bad)
sbb
cmps
push
cmc
mov
push
int3
mov
jo
int3
mov
movs
jne
push
xor
scas
pop
adc
loopne
div
stc
cmp
retf
cs
mov
mov
das
popa
mov
ds
jns
cmp
sub
stc
stc
xlat
out
pop
mov
mov
jb
popf
repnz
pusha
outs
fsubr
dec
mov
jnp
add
ret
xchg
fisubr
add
mov
fnstsw
loope
fild
inc
xlat
cs
mov
xor
mov
push
jb
(bad)
das
jo
sti
and
sub
xor
mov
xchg
aaa
xchg
mov
stc
cld
jo
shl
mov
push
push
cmp
sti
xchg
test
std
ret
in
push
sbb
js
pop
sub
inc
jb
push
xor
call
push
movs
mov
adc
int3
jne
jmp
sar
jmp
cmps
cmps
pop
pop
add
es
rol
loope
xor
in
add
fmul
dec
stos
push
jnp
pop
cmc
(bad)
(bad)
mov
lods
jne
mov
jmp
aas
js
in
out
xor
in
ret
js
mov
mov
pop
cmp
mov
sbb
mov
imul
mov
inc
aas
jge
fdivr
adc
ret
sub
stos
and
(bad)
mov
xchg
mov
pop
cmc
mov
outs
pop
push
(bad)
jge
js
or
adc
sub
and
scas
inc
push
int
dec
lods
or
xor
fsub
or
and
cmp
push
jl
jg
cs
push
pop
retf
add
aam
adc
fs
ja
sar
movs
je
addr16
push
mov
sahf
jg
int3
fisttp
(bad)
mov
adc
retf
imul
jns
fld
xor
jnp
dec
adc
xor
or
inc
add
mov
xor
pop
cmp
cdq
(bad)
dec
sbb
ss
mov
ins
adc
stos
push
aaa
call
ja
mov
xchg
or
cwde
out
dec
inc
adc
cmp
adc
mov
mov
(bad)
push
cli
adc
xor
into
movs
fnstsw
pop
test
in
jns
les
fcom
sbb
and
cmps
enter
add
cdq
jns
int
icebp
mov
inc
sub
sub
pop
fs
(bad)
imul
cs
push
or
vpmaddwd
jp
repz
imul
push
or
cmps
rol
out
cwde
xchg
pop
adc
cmc
cmps
cmp
and
jne
ins
repz
mov
dec
fstp
adc
out
push
stc
jge
push
aad
sub
rcr
sbb
gs
pop
out
rcr
adc
or
dec
and
in
in
jno
ret
or
inc
mov
jbe
jmp
aas
dec
jle
fdivr
pop
and
xor
mov
xor
test
and
mov
cs
dec
(bad)
fs
dec
adc
inc
pop
call
fidivr
pop
gs
xchg
arpl
fcomi
pusha
jb
(bad)
mov
or
arpl
adc
out
out
test
mov
scas
xchg
repz
dec
dec
call
sbb
(bad)
test
mov
aas
jae
pop
mov
rcr
sbb
mov
push
inc
sti
fsubr
or
or
xchg
in
cmp
ror
sti
add
mov
popa
(bad)
out
test
mov
jbe
adc
ss
pop
sub
cld
lea
mov
clc
mov
mov
add
push
mov
les
rcr
mov
mov
aad
sbb
push
sar
lods
jnp
pusha
dec
or
push
cmc
jb
dec
cmp
imul
sub
sbb
cmp
adc
jp
aaa
push
bsf
sub
inc
jns
shr
inc
or
aaa
push
xor
and
sbb
jmp
sbb
sbb
fst
cld
jb
xor
rol
sbb
mov
jno
sub
fsubr
outs
stos
push
jp
mov
push
popa
or
iret
push
inc
pop
cld
and
bsf
add
repz
pop
scas
ins
add
cmp
cmp
daa
arpl
inc
mov
add
push
in
daa
xchg
adc
or
imul
jae
mov
add
mov
and
les
(bad)
xchg
lock
test
mov
imul
adc
or
fcom
jmp
loope
les
rcl
jns
or
push
or
les
dec
es
push
dec
movs
(bad)
mov
stc
imul
mov
out
daa
dec
cmp
int
and
call
xchg
clc
fst
jmp
ss
add
fist
xchg
retf
mov
jle
mov
xchg
ins
or
xor
mov
jb
out
jmp
lds
and
inc
pop
pushf
js
repnz
xchg
xchg
(bad)
sbb
and
enter
sbb
arpl
sbb
sbb
ret
cmp
mov
dec
xor
xor
jle
and
js
rcl
ret
fs
mov
mov
addr16
xor
mov
gs
xor
jmp
shr
dec
mov
inc
xchg
clc
shr
fcomp
cmp
outs
test
je
das
sub
or
push
push
jecxz
loope
imul
sbb
clc
dec
xchg
je
pop
cmp
mov
cs
fs
fwait
push
iret
loope
ja
out
dec
mov
inc
xor
xor
adc
jo
jo
adc
xor
mov
cmps
js
jg
cmp
inc
loop
xor
scas
(bad)
mov
fst
test
push
push
fstp
cdq
push
pop
(bad)
test
stos
stc
and
movs
iret
into
xor
add
inc
push
pop
and
es
ds
sbb
mov
xchg
loopne
and
hlt
mov
dec
xchg
(bad)
(bad)
adc
ins
sub
dec
pop
and
outs
pop
cwde
pop
cmp
xchg
mov
pop
push
mov
shl
push
xor
mov
pusha
xor
clc
in
dec
push
cwde
push
pop
inc
scas
dec
retf
imul
stc
cmp
dec
mov
mov
std
cs
push
mov
xchg
cli
scas
movs
cwde
dec
xchg
in
and
jecxz
sbb
repnz
xchg
data16
dec
lds
scas
pop
test
push
pop
mov
shl
xchg
int3
and
or
mov
int3
fadd
fwait
test
aas
ins
addps
mov
mov
adc
les
sub
fmul
in
les
mov
xor
(bad)
int3
mov
or
adc
dec
rcl
push
xchg
pop
cmp
sbb
ficomp
dec
fcmovnb
cs
paddq
loop
clc
les
push
push
repnz
cmp
or
fldenv
xor
cmp
xlat
and
cmc
sub
adc
xor
popf
(bad)
adc
add
mov
xchg
push
push
jo
into
les
inc
movs
test
imul
outs
(bad)
leave
sbb
mov
mov
adc
test
jle
cmps
pop
jnp
xchg
or
call
out
xor
pop
mov
in
push
or
(bad)
jecxz
or
out
retf
femms
mov
adc
mov
popf
clc
out
push
aad
fldln2
cli
popf
or
mov
int3
jo
xor
and
data16
cmp
(bad)
mov
sbb
test
inc
loope
xchg
repz
mov
retf
adc
gs
xor
jne
nop
call
ins
inc
aam
cld
popf
adc
stos
xchg
jg
push
lods
mov
das
xchg
ror
jb
jnp
nop
mov
xchg
fsubr
cmp
mov
or
jns
das
bound
shl
dec
scas
inc
icebp
sub
mov
sti
stos
pop
mov
jl
imul
enter
aam
cmp
xchg
in
fcomp
fadd
add
loop
jne
cli
and
dec
jne
and
mov
int3
mov
fldenv
lods
inc
mov
ficomp
lods
adc
cdq
movs
mov
cmp
mov
out
fidivr
cmp
ret
inc
inc
out
cdq
repz
mov
push
push
rcl
ret
pop
icebp
cmp
push
adc
dec
retf
cwde
dec
or
dec
daa
mov
in
movs
xlat
mov
cmpps
in
inc
add
add
(bad)
cmps
int3
xchg
xchg
jae
and
mov
sub
adc
inc
test
jecxz
addr16
int3
xor
jb
and
adc
inc
les
das
jns
xchg
test
lea
nop
imul
adc
xchg
dec
bound
pmulhuw
mov
movs
test
lock
(bad)
xchg
in
dec
movs
ja
mov
push
mov
inc
dec
int3
imul
int3
xor
xchg
add
fwait
xchg
mov
(bad)
jecxz
ret
jnp
dec
push
cmp
xchg
lds
inc
or
mov
adc
js
repnz
ret
hlt
sub
fucomi
cmp
jge
shr
jmp
sub
fisubr
and
cs
or
loop
fsub
out
outs
sbb
mov
inc
and
mov
retf
sahf
(bad)
pop
sti
cld
and
or
adc
sub
xchg
out
xor
sbb
rol
adc
xchg
inc
or
sub
lahf
test
jmp
mov
lds
rcr
cmps
mov
adc
jne
jb
outs
mov
dec
xchg
dec
out
xor
inc
push
cdq
push
add
sub
mov
xchg
mov
add
and
push
fdivrp
xor
int3
je
mov
push
cdq
ficomp
scas
pop
adc
aaa
fiadd
sub
mov
jo
dec
addr16
xlat
xchg
enter
push
lea
in
outs
xor
jle
jp
push
dec
push
cmps
cmc
call
nop
or
cmp
inc
xchg
push
jmp
pop
push
leave
dec
ins
addr16
jge
cmp
ret
xor
std
mov
lods
test
fisubr
mov
fbstp
pop
sub
loop
out
int
push
xlat
dec
cmp
inc
cmps
cdq
shl
adc
sub
mov
ins
mov
add
cmc
pop
sub
sbb
mov
enter
mov
cmp
cmp
dec
into
xor
pop
out
aas
(bad)
mov
das
leave
sbb
ds
add
xchg
ins
xor
outs
sbb
out
or
push
pushf
frstor
aam
dec
pop
sub
aad
lock
dec
sbb
sub
loope
inc
cmps
sub
xchg
ins
daa
cld
cmp
hlt
or
push
lahf
dec
std
movs
lahf
sbb
inc
sub
arpl
(bad)
cli
mov
jl
push
fwait
pusha
xor
mov
ss
sub
movs
fiadd
(bad)
ror
popa
dec
jb
mov
int
loopne
jns
pop
dec
xor
(bad)
shr
iret
test
test
int3
dec
int
aam
dec
pop
mov
dec
sbb
jb
jecxz
xor
lea
cmp
(bad)
cmp
cmps
daa
push
lods
mov
into
add
xor
pop
sbb
pop
ins
mov
and
inc
cmp
sar
(bad)
shl
test
mov
ins
add
add
or
ins
in
inc
dec
jbe
and
popa
rol
sbb
out
xor
jns
leave
rcr
arpl
bound
stc
loope
movs
idiv
pop
fidiv
push
fcomp
dec
lods
mov
sub
in
mov
imul
add
cmps
push
loop
push
es
adc
mov
lea
or
dec
dec
sbb
fmul
cmp
mov
repnz
sbb
mov
push
dec
daa
daa
cmp
loopne
fs
xor
ins
sub
mov
cmp
inc
xor
mov
clc
repz
push
inc
mov
stos
jno
mov
pop
std
push
mov
cwde
fistp
dec
pop
test
xchg
fadd
mov
outs
stos
inc
pop
test
sub
retf
push
fwait
and
(bad)
cmp
outs
mov
rol
jle
add
pop
jge
mov
pushf
clc
fnstcw
push
push
jae
icebp
daa
movs
data16
sbb
jmp
adc
push
mov
add
sub
out
retf
rol
fild
cmps
imul
dec
gs
movs
hlt
jnp
cs
xchg
bound
pop
sbb
push
and
lahf
xlat
fldcw
mov
(bad)
movntq
push
mov
pop
mov
aam
loop
lods
push
mov
sbb
xchg
push
push
mov
outs
stc
call
sbb
pop
mov
es
rcl
(bad)
push
jo
jnp
adc
repz
pop
mov
pop
and
jle
loope
(bad)
jle
xor
mov
mov
std
test
cmps
push
out
mov
xor
mov
xchg
cmp
push
adc
xchg
inc
cs
test
sbb
xchg
xor
lock
mov
lds
ss
scas
(bad)
rcr
sub
or
retf
cmp
fdivr
ds
retf
loope
mov
ja
cmps
cmp
repz
imul
ss
cmps
(bad)
out
mov
dec
xchg
and
or
push
jg
lea
sbb
icebp
imul
sbb
push
add
repnz
push
push
js
sub
sbb
stc
call
push
cwde
sbb
shl
or
fucom
push
ret
ret
adc
mov
add
movs
movs
test
inc
pop
test
ret
into
inc
(bad)
adc
cmps
fld
hlt
sbb
or
into
les
mov
mov
in
dec
mov
cmp
test
cmp
int3
outs
lea
iret
iret
je
xlat
adc
or
in
or
hlt
pop
or
and
sti
std
cmp
add
xchg
pop
mov
jge
pop
out
sub
add
push
fiadd
outs
sub
mov
test
fsub
add
in
bound
test
stc
shl
sbb
mov
repz
mov
xor
fcom
fs
jnp
test
lods
and
les
mov
(bad)
scas
xbegin
mov
popf
into
jo
fwait
pusha
sahf
adc
xchg
shl
int3
or
(bad)
in
mov
leave
xchg
mov
jge
test
test
jmp
fisttp
ins
pop
mov
pop
fldcw
push
not
fldenv
nop
leave
enter
jl
mov
and
iret
push
pop
mov
lahf
imul
sub
call
fild
cmp
(bad)
or
imul
shl
xor
daa
fidivr
push
jns
lea
add
add
inc
or
(bad)
add
pop
adc
imul
cwde
(bad)
xor
cmp
(bad)
loope
adc
jae
loop
js
pop
inc
cmp
daa
jg
cmps
(bad)
mov
imul
cdq
pslld
dec
les
adc
lods
in
mov
loop
daa
xchg
add
add
fwait
aam
icebp
cdq
call
ret
call
pop
jne
jbe
(bad)
popf
pushf
out
loopne
cli
mov
xchg
iret
dec
mov
mov
push
push
pop
jmp
je
mov
in
popa
shr
mov
fnstenv
xchg
retf
enter
sub
iret
fs
adc
test
cmp
add
sub
dec
js
xchg
sbb
cmps
and
xchg
xchg
mov
popf
push
(bad)
pop
or
mov
sbb
in
sub
push
test
push
mov
xor
add
pop
cld
mov
jl
scas
push
inc
xor
pop
cmp
and
lods
mov
xchg
pop
push
arpl
jecxz
fld
fwait
and
test
leave
out
dec
stc
xchg
les
movs
aaa
fst
pop
sbb
mov
ja
cmp
sub
push
cmp
add
cdq
pop
movs
inc
div
out
inc
sbb
les
add
sbb
pop
adc
adc
and
lahf
jo
or
inc
jbe
jo
test
out
add
or
jo
xchg
pop
mov
push
push
dec
add
stos
sub
jmp
mov
and
ins
clc
fwait
inc
push
mov
aaa
jns
popf
inc
cmp
std
and
inc
nop
fs
imul
out
xchg
aaa
pop
les
mov
retf
(bad)
rcl
enter
mov
and
in
add
aam
mov
mov
stos
(bad)
xchg
jne
je
(bad)
ds
ret
loope
fidivr
leave
iret
(bad)
cwde
mov
(bad)
leave
xor
in
(bad)
mov
jnp
xor
lea
xchg
test
sar
push
fisub
cmp
xchg
clc
in
push
in
sahf
enter
pop
jle
sbb
cmp
jns
into
in
or
jae
add
inc
or
ds
nop
in
out
cwde
mov
imul
push
mov
cli
dec
pop
pop
dec
dec
outs
sub
popa
cmp
and
sub
xor
pop
fstp
jl
shr
add
jmp
(bad)
sbb
pop
fcmovnb
inc
sub
and
pop
neg
xchg
mov
mov
adc
xor
adc
sbb
lea
fild
jno
fst
lock
cwde
cmp
jae
imul
xchg
aam
in
leave
mov
enter
ficomp
fwait
call
not
and
jbe
add
lods
jp
inc
imul
inc
jmp
dec
adc
and
pop
xchg
pop
xor
ret
mov
mov
or
inc
push
test
rcl
ins
repnz
xor
dec
scas
retf
test
(bad)
loopne
sub
sbb
inc
and
ror
loope
inc
inc
or
nop
or
jmp
ins
push
stc
ja
je
or
add
fcmovnu
rcr
mov
xchg
pop
aad
mov
test
gs
add
popa
shr
add
or
inc
inc
fldcw
in
hlt
adc
into
arpl
or
add
loop
or
das
fiadd
xor
push
bound
cdq
ins
mov
test
neg
bnd
xchg
fmul
cmp
mov
jmp
pushw
lds
push
and
jnp
mov
in
cwde
frstor
shl
int
shr
outs
imul
pusha
mov
jl
or
push
pop
push
fisubr
xlat
cmp
xor
adc
mov
jecxz
lahf
fcom
enter
mov
jns
call
and
adc
dec
dec
jae
pop
mov
out
(bad)
pop
push
dec
enter
fwait
in
int3
mov
pop
les
scas
inc
adc
retf
out
pushf
sti
push
inc
xor
push
sub
sahf
cmp
cmp
shr
cmp
fs
push
rol
lock
out
idiv
mov
sbb
std
mov
(bad)
shl
sbb
lea
xchg
out
mov
pop
mov
sbb
out
push
cs
lds
aas
test
jno
dec
(bad)
or
push
mov
adc
xor
push
inc
xor
pop
dec
ja
fdiv
jl
mov
mov
(bad)
lods
and
add
inc
popa
cmps
das
push
mov
push
and
lods
xchg
sub
cld
ret
inc
pop
mov
in
xchg
cmps
jecxz
popa
add
call
(bad)
and
clc
push
in
pushf
pop
loopne
ffreep
xor
(bad)
stc
addr16
in
fst
jle
es
sar
xor
pop
pop
outs
dec
inc
push
mov
scas
adc
out
test
retf
les
jecxz
aaa
stos
jp
jl
std
inc
(bad)
jo
js
push
push
pop
pop
dec
not
sub
rcr
das
push
enter
scas
mov
fdivr
test
push
push
mov
test
imul
popf
sbb
into
pop
dec
xchg
xchg
mov
sbb
add
lahf
in
push
cmp
xor
aad
cmp
cmps
int3
movzx
sar
rol
xor
jmp
sbb
sub
add
icebp
sub
sub
adc
jb
repz
(bad)
and
pop
rcr
loop
jns
(bad)
dec
adc
ret
aas
mov
pop
mov
sbb
push
sub
and
xor
js
sbb
out
inc
pop
pop
dec
in
call
mov
fnstsw
mov
je
inc
xchg
jmp
js
push
test
es
sub
ret
jno
xlat
mul
jmp
mov
jle
(bad)
gs
push
jg
(bad)
pop
ja
retf
dec
aaa
fdivr
movs
ds
mov
or
xor
enter
loope
lods
repnz
mov
add
loop
push
rcr
pop
test
xchg
mov
jno
cmc
sahf
add
ins
sub
adc
retf
outs
add
xchg
dec
fcom
inc
pop
mov
sub
mov
pushf
jg
and
in
inc
add
add
aaa
and
icebp
mov
iret
xchg
push
dec
jnp
adc
test
ja
ret
(bad)
adc
jno
les
cmp
cmp
lea
(bad)
jmp
mov
add
mov
jp
mov
fs
es
in
add
je
ret
jmp
(bad)
xor
outs
mov
dec
xchg
sub
mov
imul
inc
jmp
push
(bad)
je
gs
pop
push
fnstsw
pop
xchg
int
and
retf
out
(bad)
jo
pop
movs
push
add
lock
cmp
mov
and
mov
or
pop
sbb
and
and
cdq
sbb
in
fwait
outs
dec
cmp
std
and
sbb
ja
retf
cmps
int3
ret
mov
fnstenv
(bad)
outs
icebp
ret
pushf
push
js
xchg
cdq
xchg
pop
xchg
(bad)
mov
fdivr
fistp
push
int
sbb
mov
inc
xlat
cmc
lods
(bad)
test
fs
jnp
aaa
add
xchg
add
cmc
mov
in
into
inc
xchg
popw
jb
ss
repz
adc
cld
(bad)
(bad)
mov
sub
mov
ja
xor
jns
cmp
push
adc
and
sbb
out
es
pusha
pop
ins
retf
sar
pop
mov
mov
push
pop
movs
push
or
dec
mov
mov
pop
pop
xor
pop
lods
jae
in
in
repnz
xchg
sub
jmp
add
lock
dec
jmp
imul
push
bound
or
aad
push
dec
dec
aam
cmp
and
mov
mov
xor
test
cmp
jb
push
sar
or
scas
cld
jb
movs
sbb
pop
mov
dec
xlat
push
adc
add
add
jae
push
popa
enter
fmul
adc
mov
jbe
push
sahf
retf
stos
add
in
pop
sahf
in
out
shl
fsubp
sbb
daa
rcl
pop
dec
mov
dec
test
out
idiv
enter
dec
stc
mov
sub
mov
push
rcr
pop
fdiv
jnp
pop
in
add
jecxz
mov
mov
mov
movs
or
aam
add
xchg
mov
nop
sub
and
pop
ja
stc
cmp
xchg
mov
cmps
dec
test
jle
int
or
xchg
ins
jo
enter
or
lods
xchg
fwait
push
push
sahf
std
pop
ss
mov
ins
dec
imul
mov
xchg
div
test
mov
dec
mov
dec
cmp
cdq
idiv
add
cwde
mov
jecxz
fwait
(bad)
jecxz
aas
mov
add
frstor
pop
shl
push
xchg
pop
sbb
jno
cmp
pop
test
jle
mov
outs
or
loop
add
stos
in
cmp
iret
sbb
pop
sti
imul
pusha
xor
push
push
jne
hlt
sub
cs
xchg
movs
test
or
mov
ins
add
repz
or
pop
add
xor
pop
jge
cmp
pop
push
out
enter
cwde
and
popa
adc
jne
mov
cli
fdivr
pop
jbe
xchg
lahf
js
les
dec
js
and
loop
ja
fsubp
push
cdq
repnz
mov
cmp
iret
xchg
loopne
out
jmp
data16
sbb
inc
stos
imul
mov
and
(bad)
mov
test
lock
xor
(bad)
mov
shr
xor
lds
popa
cmps
mov
mov
push
sbb
sti
mov
adc
pop
cvtps2pi
retf
fs
sbb
fbld
fisttp
shl
cld
jp
push
adc
stc
or
(bad)
out
jecxz
outs
rol
mov
nop
or
pop
loop
xchg
pushf
div
ins
stos
in
call
call
xor
daa
cmps
mov
jecxz
add
call
and
test
cdq
movs
enterw
jl
(bad)
(bad)
mov
inc
push
rcl
sub
sbb
imul
mov
push
mov
mov
push
xchg
mov
add
int
push
sub
cld
into
ins
cdq
dec
jle
xor
imul
or
cli
call
xchg
pop
push
iret
mov
loope
inc
lods
mov
cmc
mov
push
inc
aas
cmp
pop
mov
les
gs
adc
stos
sub
mov
mov
mov
lds
adc
retf
es
cmp
mov
popf
mov
xadd
xchg
add
scas
inc
mov
push
inc
fistp
sbb
imul
inc
dec
in
dec
and
lds
ins
hlt
mov
aad
outs
push
cwde
xor
out
jmp
mov
das
sbb
retf
mov
scas
ins
pop
mov
push
or
and
pusha
mov
int3
pushf
out
xchg
movs
outs
add
or
rol
enter
push
loopne
xchg
xchg
or
fst
adc
sti
xor
sbb
scas
pop
adc
push
in
and
mov
and
daa
cs
push
add
(bad)
pop
mov
push
test
xchg
or
popf
add
arpl
xor
je
bound
dec
jmp
out
push
(bad)
and
cmps
fldenv
mov
push
jl
jae
mov
inc
and
dec
and
in
mov
sbb
mov
dec
test
mov
xchg
push
push
stos
call
push
and
test
bound
add
dec
adc
(bad)
mov
push
(bad)
jno
pop
pop
xchg
push
jmp
pcmpeqd
or
shl
push
add
push
sahf
daa
ja
pop
jnp
cs
leave
inc
mov
cmp
jg
scas
mov
or
mov
shl
jae
jo
pop
rcr
out
push
jp
mov
mov
lea
test
xchg
imul
xor
sub
ins
out
mov
mov
sub
shl
jecxz
add
stc
test
out
fild
pusha
jp
sub
adc
test
fsub
cmp
pop
mov
sub
fldenv
sbb
jo
jno
pop
loop
lods
sub
cmc
cld
cld
sti
cmp
test
js
push
neg
ror
jge
scas
enter
mov
repz
cmp
xchg
sbb
retf
in
stc
pop
sbb
repnz
inc
xchg
push
loop
or
popf
jns
cli
and
sbb
(bad)
cmp
or
rcr
jmp
fucomi
mov
pushf
push
jmp
in
aad
jno
js
sahf
imul
jb
pushf
nop
stos
jp
cwde
jb
loop
imul
xchg
(bad)
fs
xchg
adc
xchg
rcl
test
inc
imul
adc
lods
cmps
cli
hlt
sub
cmc
mov
in
lods
rcr
lods
leave
pop
and
ja
jo
push
dec
add
arpl
ja
jge
ins
jmp
xor
sbb
imul
retf
in
cs
in
jne
dec
inc
sbb
inc
cmp
cmp
inc
add
mov
jl
out
call
outs
push
pusha
pop
jl
cmp
(bad)
cwde
(bad)
ds
mov
nop
aaa
rcl
loop
aad
dec
scas
pop
cmp
lock
shl
(bad)
imul
out
sbb
jmp
pushf
(bad)
loop
repnz
out
sbb
jo
jae
fisttp
les
xor
(bad)
inc
test
mov
nop
out
loope
add
mov
int
cmp
mov
addr16
mov
xor
sub
aad
in
mov
lock
and
fs
xchg
xor
dec
push
dec
rcl
xchg
loope
mov
jo
sbb
xchg
ret
je
jbe
ret
mov
and
bound
outs
push
mov
rcr
sub
ret
gs
mov
nop
mov
jp
xchg
es
lods
push
sbb
push
mov
test
fdivr
cmp
cmp
xchg
outs
cmp
stos
sahf
cmp
pop
push
nop
mov
imul
lods
jmp
in
hlt
repnz
dec
mov
call
mov
(bad)
gs
or
popa
pusha
pop
int3
or
push
sti
fstp
mov
mov
mov
lods
sbb
mov
mov
je
rcl
nop
clc
push
das
sub
test
push
leave
aas
pop
leave
pop
push
sub
mov
enter
pop
lods
(bad)
fwait
test
enter
es
fisttp
mov
xchg
mov
sub
cmc
jg
add
adc
push
add
scas
clc
add
(bad)
sbb
dec
push
xor
adc
inc
fisub
xlat
ss
not
add
dec
pop
pushf
(bad)
clc
pop
pop
xor
retf
cdq
daa
inc
mov
add
lea
out
setp
jg
push
dec
mov
dec
mov
pop
xor
(bad)
dec
jecxz
xlat
popf
mov
cmp
or
sub
std
or
cmps
icebp
pop
fdiv
jecxz
loope
loop
(bad)
jno
mov
and
lds
jno
shl
jmp
daa
imul
mov
sti
pop
nop
add
jl
and
fcmovnu
inc
and
mov
lds
dec
mov
mov
and
pop
iret
mov
dec
nop
into
cmp
or
leave
or
repz
popa
movs
dec
jns
leave
pop
sbb
xor
ss
icebp
js
dec
dec
leave
stos
ret
pop
sbb
jg
cmp
mov
mov
push
ror
retf
inc
das
clc
mov
std
xchg
and
outs
and
dec
pop
(bad)
pushf
aas
and
mov
sbb
adc
dec
out
xor
pop
sahf
mov
jae
int
mov
mov
jmp
retf
imul
repnz
das
push
(bad)
sub
adc
mov
lods
mov
mov
(bad)
sub
mov
dec
cmc
add
jge
outs
xor
into
mov
dec
add
push
cdq
mov
pop
in
jmp
sub
fucom
(bad)
inc
in
cs
inc
push
daa
jno
retf
(bad)
xor
cmp
cmp
leave
xor
sbb
outs
cwde
aad
inc
xor
mov
inc
test
or
push
mov
loop
call
pop
dec
mov
mov
ins
cmp
outs
xor
or
call
cwde
and
inc
(bad)
cmps
retf
retf
sbb
mov
jge
mov
add
cmp
mov
mov
xchg
test
jbe
xor
pop
jmp
loope
sub
mov
and
aam
(bad)
sar
aas
xor
adc
or
sub
out
mov
sbb
push
(bad)
in
in
dec
icebp
stos
sbb
xchg
popa
inc
(bad)
gs
cld
test
cmp
dec
test
rcr
mov
movs
arpl
lods
jmp
dec
das
mov
sub
mov
stos
loopne
push
dec
jno
lahf
lea
into
pop
mov
les
fldcw
clc
and
push
into
mov
inc
cld
and
sub
cmp
loope
pop
gs
or
rcl
repnz
outs
fild
test
mov
sub
das
std
add
cmp
push
sub
cld
or
sub
jno
mov
(bad)
scas
aaa
or
loop
jecxz
rcl
hlt
jle
jecxz
or
mov
stos
js
adc
int3
in
sbb
push
mov
ins
int
jb
fist
mov
cmp
and
mov
sar
or
(bad)
jnp
loopne
or
push
mov
div
les
and
pop
push
xchg
lods
ds
mov
or
mov
aam
adc
adc
xor
add
imul
dec
add
fistp
inc
popa
jg
push
cli
nop
sub
cmps
jge
and
inc
or
adc
in
mov
daa
xchg
test
test
mov
mov
sub
outs
xchg
mov
fs
lods
lahf
push
jae
out
sub
ss
inc
jae
sbb
rcr
popa
sti
mov
int3
add
xchg
push
add
shr
dec
(bad)
and
mov
mov
push
movs
jae
xor
xor
add
add
bound
fist
or
xchg
(bad)
lods
(bad)
xor
jle
stos
dec
xchg
sub
pop
and
popf
and
xor
fwait
lods
add
int3
pop
test
mov
xor
pusha
push
cmp
adc
retf
cld
xor
add
dec
sbb
push
mov
fnstenv
addr16
(bad)
call
cmp
std
jle
mov
xor
adc
pop
cmc
sbb
jl
push
outs
inc
fidiv
inc
sub
arpl
xor
(bad)
pop
or
mov
mov
(bad)
addr16
jl
mov
mov
ror
xchg
aas
jle
fild
addr16
(bad)
test
push
std
repz
mov
push
mov
hlt
push
retf
pop
xchg
popa
mov
test
imul
rcr
mov
mov
in
ficomp
sbb
gs
mov
push
loope
outs
add
mov
push
pop
cmp
pop
jno
idiv
inc
in
sub
push
aad
mov
or
push
fild
push
jge
unpcklps
inc
nop
std
aam
into
inc
pop
ds
(bad)
aad
leave
xchg
out
fbld
xchg
mov
bound
push
mov
mov
retf
push
add
mov
push
xchg
retf
mov
jns
cmc
(bad)
int3
xchg
in
jle
and
(bad)
daa
ss
xor
rcl
cld
xor
ins
or
jno
dec
inc
sub
xor
mov
call
adc
xor
push
adc
sub
lock
jmp
in
and
cdq
mov
xor
xor
add
pop
mov
sub
icebp
out
cmps
jbe
stos
popa
xor
std
mov
xchg
addr16
icebp
inc
out
sub
mov
(bad)
adc
aas
bound
dec
retf
call
push
xor
in
mov
test
mov
out
(bad)
pop
retf
xchg
pop
shr
ins
aam
cmp
jne
nop
sbb
inc
(bad)
dec
push
push
adc
add
shr
movs
mov
mov
adc
js
or
stos
or
stos
sbb
bound
inc
(bad)
scas
jmp
mov
mov
in
(bad)
(bad)
jnp
jae
daa
arpl
xor
cmp
xlat
mov
mov
mov
add
loop
in
enter
mov
je
imul
dec
xor
sub
fcom
or
je
(bad)
fstp
fldcw
loopne
call
or
push
sbb
jb
add
adc
lds
clc
pop
lods
push
pop
xor
jae
out
das
call
aaa
sub
push
mov
retf
shl
xchg
xrelease
push
jp
xchg
jge
ss
push
pop
mov
lods
std
mov
jg
in
mov
pop
adc
adc
sbb
pop
aaa
mov
ds
shl
int3
lock
out
and
pop
ins
lahf
adc
inc
mov
popf
mov
out
xor
test
jo
cmp
push
cmp
stos
rep
(bad)
cld
int
mov
dec
loopne
rol
arpl
or
mov
push
cmp
js
je
xchg
inc
pop
adc
push
rol
or
or
pushfw
jno
jecxz
into
neg
repnz
lods
fwait
mov
mov
and
aas
imul
pop
push
ins
xor
(bad)
push
or
push
(bad)
dec
xor
push
icebp
test
fwait
enter
fldcw
or
ret
cmps
stos
mov
rcr
mov
ror
push
fwait
mov
out
mov
xchg
dec
push
or
addr16
retf
(bad)
push
rcl
mov
fstp
in
pop
aad
lods
test
sub
call
cmp
mov
xor
adc
(bad)
(bad)
(bad)
mov
ror
jl
ror
and
div
jg
out
xchg
addr16
mov
mov
jne
sahf
sti
rcl
mov
(bad)
es
rol
int
icebp
mov
and
imul
lock
add
push
and
or
ss
xchg
push
adc
enter
repnz
jg
data16
mov
es
cmp
retf
jle
cmp
adc
jnp
xchg
xor
xor
aas
pop
mov
sbb
pop
sbb
bound
adc
icebp
push
test
push
adc
ret
mov
sub
scas
push
mov
(bad)
fsub
je
xor
es
shl
pop
shl
push
repnz
cmp
rol
popf
daa
jl
xor
pop
jge
cli
dec
sbb
pop
ja
jmp
aad
mov
cwde
xchg
hlt
stos
stos
(bad)
(bad)
push
std
pop
sbb
mov
lods
mov
addr16
mov
push
int
sar
add
out
push
mov
jl
jp
dec
dec
imul
movs
iret
ja
and
int3
push
(bad)
mov
or
pop
mov
fild
lds
cld
sbb
enter
(bad)
pop
and
lods
fsub
sbb
push
add
and
imul
lds
data16
sbb
or
and
inc
sbb
retf
call
retf
or
and
push
je
rcl
cld
mov
adc
mov
pop
(bad)
cmps
mov
sahf
call
mov
jnp
pushf
outs
and
push
jmp
out
mov
test
cmp
push
xor
div
ficom
jg
adc
jne
inc
aam
pop
pop
and
gs
mov
xchg
inc
dec
add
cmp
cmp
leave
push
jnp
cmc
push
or
ins
inc
pop
jnp
scas
mov
push
sub
cwde
or
or
sbb
jmp
jmp
(bad)
dec
inc
xchg
xor
push
jb
ds
inc
sub
mov
cli
adc
(bad)
out
mov
xchg
jg
add
lds
ret
mov
mov
cld
pop
pop
jb
pop
cmp
jae
test
cwde
xor
clc
and
stc
in
(bad)
fisubr
xor
aam
out
fst
xchg
ins
repnz
jbe
xor
sub
mov
shr
sub
(bad)
repz
push
test
fs
cdq
shr
dec
cmp
fwait
push
in
jmp
test
mov
pop
hlt
adc
jno
test
pop
xor
jp
jne
movlps
sbb
cmp
rcr
sar
je
push
in
dec
adc
cmc
stc
stos
nop
and
in
ss
loopne
clc
rcl
rol
push
or
cmp
cs
xchg
daa
sbb
mov
xchg
mov
sub
rol
(bad)
sbb
cmp
sub
push
jb
add
push
or
pushf
jno
movs
cmp
stc
cli
fdivr
stc
push
and
jne
jmp
dec
and
fcmovnb
mov
scas
push
and
retf
test
xor
outs
pop
(bad)
stos
stos
addr16
in
lods
and
int3
jle
dec
lahf
cs
in
xchg
pop
sbb
sbb
mov
adc
iret
xchg
and
in
mov
lock
mov
lds
(bad)
pop
and
inc
shl
or
add
das
(bad)
or
pop
test
cmp
mov
daa
and
mov
int
iret
jg
cmp
pop
jp
into
push
popa
int3
sub
adc
mov
inc
fadd
cmp
cmp
adc
pop
gs
jmp
mov
repnz
mov
ret
xor
push
mov
add
mov
retf
popa
xchg
push
jae
hlt
mov
scas
cdq
pop
aad
and
into
xchg
xchg
sub
inc
ret
ss
test
cmps
inc
dec
daa
ret
add
(bad)
mov
mov
push
pop
bound
ins
mov
inc
mov
sbb
pop
clc
bsf
aas
pop
vminpd
sbb
jp
sub
inc
fwait
sub
das
test
nop
ret
fmul
jb
sar
adc
in
inc
sub
or
aam
push
fnstenv
adc
arpl
arpl
ins
fidivr
cwde
lock
(bad)
adc
int
jb
push
ja
sub
into
out
sahf
fidiv
fnstenv
shr
in
add
cli
inc
iret
adc
cs
stos
sbb
jecxz
mov
cdq
mov
jge
lods
jae
retf
mov
add
or
inc
xchg
setno
movs
jle
das
xchg
fbld
mov
test
popf
pop
jns
(bad)
fmul
loop
cmp
loopne
push
or
(bad)
hlt
stos
fadd
out
pop
push
xchg
out
push
loop
shl
inc
(bad)
fadd
inc
and
cmp
jne
xlat
(bad)
outs
cmps
cs
ret
jae
fdiv
and
lds
pop
jno
mov
or
or
push
xchg
pop
sub
outs
jbe
cmps
movs
cmp
pop
int
cmps
mov
pop
push
idiv
dec
push
mov
lods
mov
(bad)
(bad)
mov
lock
fdiv
icebp
retf
xchg
inc
sahf
dec
hlt
fidivr
fnstsw
ins
fbld
push
xchg
(bad)
test
mov
retf
mov
lods
xchg
into
sub
test
rcr
icebp
loopne
push
pop
enter
(bad)
loop
cmp
call
dec
stos
ds
add
lea
add
sbb
test
xlat
fisubr
and
lods
and
jbe
bnd
mov
dec
repz
sub
xor
movs
cmp
mov
(bad)
popa
data16
and
dec
inc
cmp
stc
cmp
movs
add
push
mov
cmp
mov
aad
stc
hlt
and
mov
jg
jmp
inc
stos
push
mov
test
inc
sbb
pop
out
cmp
inc
jg
loop
(bad)
sbb
ret
lahf
xchg
jmp
pop
int
inc
fist
repz
das
and
loope
ret
es
add
push
hlt
shl
xchg
sub
dec
push
add
cmps
into
cmp
xor
cmp
xor
outs
out
inc
fbld
iret
add
popa
jno
ja
xchg
ret
dec
jo
cs
outs
pop
inc
inc
cmp
enter
mov
aaa
mov
pop
sar
xor
sti
pop
add
mov
push
mov
mov
in
mov
or
in
sahf
fstp
cmps
dec
loop
scas
ja
movs
lock
or
(bad)
xchg
fdivr
jno
sbb
adc
xchg
sub
add
and
ds
sbb
repnz
out
or
(bad)
in
sub
out
dec
add
sub
mov
aas
daa
stc
sbb
and
xor
cmp
add
ds
mov
scas
inc
fsubr
cmp
lods
pop
dec
ja
xchg
xor
jnp
xchg
mov
out
loope
mov
and
push
jmp
pop
in
cmp
inc
push
popa
mov
out
std
std
leave
call
mov
sub
push
movs
or
push
icebp
mov
loopne
test
sti
dec
jae
mov
fld
or
mov
stos
xchg
and
cwde
hlt
jns
and
mov
pop
add
and
or
xchg
xor
add
jge
xlat
inc
repz
out
mov
pushf
into
dec
mov
paddsb
fisubr
sub
in
movs
lods
dec
in
jnp
sub
adc
pop
mov
cwde
ss
enter
ds
mov
dec
xor
mov
dec
pop
mov
leave
mov
jo
dec
or
xor
dec
loop
mov
rol
into
or
je
pop
int3
pushf
mov
add
add
outs
jmp
out
stos
out
out
arpl
(bad)
icebp
dec
add
jnp
cdq
inc
mov
imul
jb
xor
push
pop
daa
movs
xchg
jo
sub
xor
mov
dec
mov
in
stos
jne
leave
data16
inc
add
add
mov
mov
pop
cmp
xor
scas
jle
mov
sub
adc
sahf
dec
push
inc
inc
sahf
push
cmp
shr
bnd
sbb
jecxz
and
add
lods
pop
inc
xchg
mov
push
and
sub
sub
movs
aad
or
sbb
xlat
icebp
mov
rcr
arpl
and
mov
shr
mov
cmps
xchg
xchg
mov
inc
pusha
retf
pop
cmp
loop
loope
jb
mov
popf
cmp
or
int3
ja
add
push
sub
xor
dec
push
jg
mov
push
inc
mov
add
mov
test
sbb
jnp
scas
ret
add
loop
xchg
cld
inc
add
dec
ret
ret
ins
lea
jae
jnp
cld
nop
inc
jnp
inc
mov
shl
adc
mov
adc
imul
iret
mov
push
rol
cmps
loope
popf
xchg
lock
inc
fwait
ins
aad
cmp
inc
or
pop
push
movs
jns
rol
jge
inc
inc
retf
inc
repnz
popa
mov
pop
sbb
pop
repz
mov
jl
xor
dec
dec
sub
cmp
mov
xchg
mov
pop
sbb
cmp
add
sbb
in
and
dec
cli
sub
add
into
push
push
rcl
je
mov
or
jno
scas
dec
xchg
and
dec
es
sbb
cmp
sub
sbb
movs
fiadd
fwait
jns
xor
shl
push
jg
fistp
xchg
cmps
adc
clc
xchg
pop
std
cmp
mov
pop
popf
retf
(bad)
fiadd
push
and
aaa
mov
sar
(bad)
(bad)
push
and
cmp
mov
movs
fisttp
cli
lds
push
mov
add
stc
mov
mov
jb
cs
popf
and
pop
stc
sbb
ret
cmps
mov
inc
in
push
mov
in
and
out
mov
pop
dec
dec
dec
xor
hlt
xor
sbb
adc
sbb
aas
into
xor
enter
add
loop
sub
adc
sub
xchg
inc
aaa
dec
or
shl
bound
ror
pop
out
test
and
outs
xor
fsubr
movs
push
stos
inc
dec
jno
sub
push
fimul
add
push
ret
shl
jle
xchg
lahf
cli
inc
mov
xor
adc
nop
(bad)
or
fiadd
inc
push
xor
mov
imul
and
adc
not
add
ins
cdq
xor
cdq
mov
add
stos
cmovns
or
inc
shl
jnp
retf
(bad)
hlt
shr
dec
or
sbb
and
mov
jmp
outs
jno
dec
inc
dec
sbb
popf
aam
in
jp
rcl
loopne
mov
or
pop
push
jae
pop
aas
retf
(bad)
cmp
adc
jmp
into
jp
stos
imul
push
and
faddp
mov
sbb
inc
imul
inc
addr16
push
mov
std
stc
mov
xor
and
nop
push
adc
pop
xchg
pop
test
pop
loopne
ret
sahf
aas
push
jbe
call
test
or
mov
push
or
cmc
fimul
xor
out
sbb
(bad)
or
adc
div
pop
fisub
xchg
jmp
pop
sbb
in
gs
xor
mov
adc
dec
jae
retw
jle
icebp
sbb
fldenv
sub
rcl
sub
pop
(bad)
fwait
mov
cmp
and
popa
(bad)
cwde
ds
mov
and
push
push
push
aaa
mov
ror
ret
adc
scas
or
add
(bad)
fs
adc
sahf
cwde
xchg
movs
cld
fsubr
loope
gs
fcmovnb
add
mov
int
mov
mov
add
mov
pop
ins
int
lahf
sbb
xchg
mov
fistp
jns
rol
aas
movs
ins
ins
leave
and
push
ss
push
aaa
fbstp
jns
adc
loope
jae
xor
ins
sub
xchg
mov
sbb
jecxz
int
scas
push
mov
es
outs
sbb
movs
mov
arpl
in
int3
xor
pop
xor
(bad)
jnp
sub
jo
shl
dec
xor
xor
lea
adc
vpaddusw
mov
(bad)
jge
jmp
adc
addr16
stc
dec
push
int
inc
jnp
repnz
fimul
and
xor
fs
mov
ss
lods
dec
lds
leave
fstp
addr16
movs
cmp
icebp
inc
jmp
stos
lds
or
jns
cs
(bad)
adc
(bad)
div
into
fbstp
cmp
sti
xchg
or
jg
or
or
mov
mov
push
mov
sbb
mov
sbb
in
add
outs
ror
cmp
xchg
popf
test
js
dec
mov
arpl
pop
jge
mov
push
in
jg
test
hlt
and
out
lods
daa
mov
fcmovu
fidiv
pop
cwde
popa
scas
sub
pop
dec
cmp
sbb
add
jne
fiadd
xor
push
rcr
xchg
push
jp
jl
cmc
inc
xchg
xor
xchg
inc
pushf
mov
rcl
test
sub
ins
test
mov
mov
shr
in
jns
sub
test
lods
sahf
lods
fucomp
enter
in
push
push
lea
xchg
mov
adc
jl
lods
add
add
daa
repnz
std
mov
stos
(bad)
fidivr
in
dec
gs
mov
sbb
push
ins
jo
clc
rcr
sub
aaa
pusha
mov
loope
inc
dec
cmps
inc
shl
xchg
xchg
out
xor
test
inc
jge
outs
adc
sub
lods
xchg
jno
and
jmp
pop
sub
push
ins
adc
test
adc
(bad)
call
jae
pop
ror
mov
rol
push
jmp
mov
add
ret
cmps
fcom
lock
in
fcmovne
or
push
pusha
inc
das
push
and
lods
push
stos
dec
aaa
loop
push
neg
sbb
pushf
div
cmp
push
lds
pop
jne
js
push
ret
movs
inc
xchg
enter
repz
mov
cli
add
cmp
mov
(bad)
(bad)
outs
ins
into
mov
in
adc
js
xchg
push
loope
je
mov
(bad)
mov
sahf
fst
xchg
inc
iret
retf
addr16
xor
sti
sbb
adc
jl
das
mov
sbb
rol
ins
pop
sbb
jmp
les
inc
rol
adc
push
xchg
(bad)
(bad)
pop
in
adc
xchg
add
sbb
pop
mov
ss
pop
xchg
jmp
mov
jecxz
lea
mov
aad
adc
retf
nop
adc
mov
cdq
pop
jmp
add
xchg
cmp
jecxz
loopne
inc
in
sub
jle
sbb
pop
push
loop
inc
into
lahf
fnstenv
mov
mov
popa
inc
push
cdq
cmp
std
push
push
call
mov
mov
push
mov
and
fnstsw
rcr
outs
add
and
je
std
sbb
sub
cmp
xchg
xchg
cs
(bad)
shr
cdq
push
adc
std
mov
inc
test
mov
and
pusha
mov
xor
add
(bad)
jo
dec
and
int
stos
mov
(bad)
rcr
sar
ja
inc
adc
aam
retf
pop
daa
dec
call
adc
js
mov
loope
loopne
adc
mov
lods
ss
test
movs
mov
and
imul
call
dec
mov
mov
dec
out
adc
out
movs
jns
pop
and
(bad)
repnz
xchg
xor
dec
cwde
inc
mov
lea
inc
and
ja
sub
cwde
ins
dec
dec
mov
dec
sub
and
outs
hlt
pusha
pop
or
daa
pop
cmp
arpl
sti
mov
stos
or
mov
imul
fmul
ins
adc
mov
mov
xor
pmullw
adc
bound
push
jae
mov
ja
movs
iret
jno
xchg
pushf
fs
ja
fidivr
cmps
lea
cmp
push
(bad)
jae
out
jle
or
push
stos
jmp
mov
outs
adc
adc
and
adc
push
xor
idiv
pop
shl
inc
loop
loopne
(bad)
ja
int
pop
or
in
inc
outs
outs
sbb
adc
frstor
mov
repz
add
mov
inc
mov
lds
(bad)
sub
inc
xchg
cmps
in
(bad)
in
cmp
scas
gs
fsubr
call
jmp
push
cld
cmps
mov
ret
daa
pop
push
bound
cmp
lock
rol
xlat
xchg
movs
add
(bad)
mov
je
inc
adc
mov
jecxz
adc
sti
idiv
jp
mov
loope
test
add
bound
adc
mov
ins
enter
xchg
mov
jl
lods
pop
out
cli
(bad)
jbe
sub
mov
dec
jne
mov
pop
gs
add
jp
push
stos
pop
out
nop
xor
out
idiv
in
and
push
inc
repz
cmp
enter
jbe
inc
pop
push
jmp
(bad)
sbb
(bad)
aaa
mov
call
cmc
leave
ds
nop
pop
pop
push
add
pop
sar
fdiv
push
aaa
and
adc
inc
add
jb
leave
mov
ins
int3
in
aaa
imul
fstp
out
ja
iret
push
mov
ret
pop
jnp
pop
data16
dec
sahf
dec
jne
loope
fcomip
fisubr
jmp
addr16
(bad)
std
daa
dec
dec
xchg
push
icebp
out
data16
fnstcw
jp
jne
cmps
mov
add
int3
stos
pop
enter
movs
cs
pushf
enter
push
sub
dec
lods
aad
xchg
popf
mov
(bad)
sbb
dec
mov
shl
sar
push
int
xchg
jl
clc
pop
cmp
xchg
xchg
arpl
mov
(bad)
jmp
test
aaa
lock
mov
les
cmp
xchg
call
ja
sub
jge
xchg
xor
sub
movs
mov
inc
stos
in
mov
and
jnp
sti
cmc
inc
dec
jnp
test
mov
(bad)
in
jne
cmp
es
xor
stc
sbb
jnp
lock
ret
popf
pop
not
adc
xor
loopne
popa
cld
mov
test
mov
adc
add
and
cmp
sbb
dec
or
xchg
add
mov
push
ffreep
cmp
dec
mov
mov
jnp
andnps
sub
iret
sub
and
movs
lds
inc
cs
cmp
mov
test
stc
sbb
mov
jo
out
enter
mov
push
repz
ins
and
fwait
adc
rcr
loop
pop
push
mov
add
push
scas
daa
inc
test
and
and
fst
arpl
shl
jmp
imul
xlat
pusha
mov
out
dec
movs
inc
and
or
push
fisubr
add
push
cmc
adc
inc
jle
out
mov
dec
es
jo
pop
mov
test
data16
nop
loopne
xchg
test
xlat
arpl
inc
pushf
je
stos
pop
fisttp
cmp
stc
les
fdivr
stc
xchg
mov
fnstcw
nop
stc
add
dec
xlat
fild
xchg
xchg
mov
mov
jle
xchg
mov
test
pushf
sar
cmp
and
mov
sub
inc
cmps
pop
mov
lods
dec
and
mov
je
or
xor
lds
xor
test
or
enter
dec
ins
push
mov
cmp
cmps
out
cmp
aaa
add
xchg
sub
sub
inc
mov
sar
and
js
ss
cmp
(bad)
xor
cmp
cdq
mov
fldcw
xchg
xchg
adc
in
popa
call
enter
jle
hlt
xchg
mov
movs
pop
adc
imul
jecxz
ret
inc
or
int3
jae
pop
inc
out
mov
ja
hlt
adc
inc
lea
dec
ss
cmps
adc
or
sub
adc
xchg
pop
and
dec
mov
out
mov
add
and
mov
clc
dec
xchg
push
shl
xor
push
jmp
inc
dec
scas
or
in
push
retf
pop
loopne
movs
ins
icebp
jecxz
out
sysexit
lods
add
mov
fisubr
inc
pop
stc
aaa
cdq
sbb
mov
or
inc
dec
add
in
jno
mov
(bad)
xchg
rol
cmp
jl
ror
js
cdq
ss
mov
dec
imul
jmp
rcl
out
mov
jns
shl
sbb
mov
punpcklbw
cmp
mov
popf
fs
cmps
push
ret
popf
fidivr
dec
pop
mov
pop
popf
rol
xchg
mov
add
shl
daa
bound
fstp
or
call
inc
das
imul
pop
popa
xor
scas
xor
mov
out
out
lock
mov
data16
mov
test
je
dec
jmp
pop
sbb
jecxz
sbb
repz
xor
out
fmul
inc
bound
xor
repnz
ficom
inc
lods
repnz
imul
call
pop
xchg
sbb
dec
sbb
das
pop
neg
aam
jo
cmp
enter
push
test
aam
mov
xlat
in
pop
or
push
push
adc
scas
in
test
shr
and
dec
jle
sub
cmp
add
fld
lahf
mov
jmp
mov
shl
sar
outs
pusha
jmp
xchg
nop
in
and
cmp
and
or
pop
push
in
idiv
gs
jl
(bad)
and
out
aaa
jno
retf
retf
nop
mov
mov
shl
les
push
cdq
and
iret
xchg
mov
adc
and
push
sbb
push
jmp
add
lahf
mov
sbb
call
or
mov
jb
inc
into
xchg
scas
gs
xchg
imul
push
sbb
mov
adc
jp
dec
movs
sar
scas
pop
jne
inc
outs
adc
sub
shl
or
adc
mov
out
sbb
les
fs
call
mov
or
lods
push
mov
sahf
pop
lock
jle
cmp
add
pushf
mov
movs
pop
and
fmulp
sbb
popw
jp
inc
test
call
sahf
xchg
pop
and
ss
mov
mul
mov
adc
jns
dec
mov
movs
or
xchg
(bad)
gs
jo
jmp
pop
mov
adc
xor
aas
jp
sbb
and
shl
js
daa
jp
in
mov
mov
cmp
and
adc
fisttp
mov
retf
mov
mov
mov
popf
xor
cld
(bad)
jnp
or
addr16
test
int3
fiadd
inc
repz
sub
xor
xor
repz
inc
icebp
inc
sub
sahf
mov
sbb
add
xchg
movs
cmp
scas
push
test
pop
jno
sub
aaa
call
dec
loope
mov
or
pop
(bad)
and
dec
jmp
adc
(bad)
jge
xchg
pushf
jecxz
leave
push
cs
inc
inc
push
sbb
lea
stos
push
xor
inc
push
int
loope
cmp
push
xlat
ins
and
dec
out
fdivr
mov
inc
sub
push
xchg
mov
rcr
nop
adc
jle
int
movs
xchg
jb
mov
stos
loop
int3
lods
lods
xchg
mov
stos
rol
mov
pop
adc
and
rcl
aad
cmps
and
mov
adc
xchg
sbb
mov
cs
mov
mov
jmp
mov
xchg
scas
mov
adc
aaa
mov
test
int
mov
sub
add
inc
inc
ret
ficom
(bad)
cmp
fcmovu
mov
es
dec
mov
fnstcw
sbb
cwde
jl
lock
pop
lea
call
and
js
test
push
and
cmp
lods
inc
imul
fsubr
or
mov
test
aad
outs
ds
mov
and
js
test
movs
movs
mov
fsubr
cmp
test
int3
cmp
mov
aam
sub
cvtpi2ps
arpl
adc
cmp
dec
xchg
adc
xor
cli
mov
ins
push
loope
imul
dec
mov
xchg
lods
cmp
push
adc
sahf
xchg
in
popa
jle
dec
and
xlat
(bad)
and
push
mov
jne
mov
or
leave
xchg
inc
inc
jmp
push
loope
into
jp
in
imul
cmp
jmp
aaa
or
(bad)
lods
mov
ss
pop
cmp
push
dec
in
mov
ror
inc
in
jb
jbe
mov
popa
xchg
(bad)
jo
jg
jg
sbb
js
sub
jl
mov
mov
mov
push
scas
or
pop
retf
sub
in
push
jp
lea
mov
or
fist
pop
push
mov
retf
adc
adc
push
int3
mov
dec
inc
not
xchg
lea
inc
loope
fmul
sub
lahf
and
fimul
xchg
out
data16
out
iret
push
mov
jb
and
(bad)
test
inc
int
or
mov
inc
push
fwait
aam
aam
nop
adc
repz
push
sub
loop
out
xor
in
jae
mov
sub
pop
mov
mov
or
cdq
mov
ss
lea
mov
push
push
cld
(bad)
lods
mov
sub
shl
inc
jg
mov
cli
mov
lods
cmp
jle
pop
jne
daa
cmps
pushaw
push
jmp
jae
mov
scas
scas
aaa
leave
stos
push
pop
in
(bad)
ficom
inc
add
and
in
ret
xchg
jne
sbb
lds
out
lock
xor
mov
and
sub
addr16
jge
push
jb
jo
loop
adc
push
call
jmp
sbb
sti
pop
add
cdq
(bad)
in
mov
fadd
lods
mov
outs
int
into
(bad)
push
mov
out
adc
pop
jg
test
es
(bad)
dec
push
in
cmp
cmp
xchg
add
test
adc
push
push
mov
nop
stos
add
adc
and
pop
jmp
push
dec
sub
push
push
adc
cmp
mov
pop
adc
mov
test
sahf
jbe
pop
push
mov
retf
xor
fld1
xchg
dec
popf
push
test
adc
mov
fbld
addr16
xchg
nop
xchg
stos
rcl
mov
addr16
call
push
stos
into
stos
mov
mov
(bad)
iret
sbb
mov
or
outs
add
dec
and
and
stos
ins
popf
cmp
call
mov
scas
sub
jb
shl
enter
enter
sbb
xor
out
rcl
pop
inc
les
adc
mov
mov
sbb
test
jg
cmp
movs
mov
test
iret
inc
and
inc
dec
jle
xor
jp
jae
fs
das
(bad)
loop
pusha
fmul
xchg
not
mov
xor
xor
aaa
xchg
adc
mov
(bad)
jl
icebp
aad
add
mov
sbb
shl
pop
dec
xchg
inc
and
mov
imul
add
mov
mov
enter
inc
int
mov
shl
adc
sahf
iret
fcom
jmp
aad
sub
popf
jge
(bad)
sbb
and
cld
push
mov
sbb
jno
add
adc
jecxz
mov
sub
and
pusha
out
mov
js
in
mov
xchg
mov
ficomp
cwde
enter
ror
pop
test
xor
call
inc
sbb
xor
fild
sub
jmp
(bad)
cli
ror
xlat
in
scas
or
add
push
cmp
or
ficom
popa
cli
pushf
push
int3
inc
lea
jbe
sti
dec
xchg
mov
jb
fcmovnb
lock
aam
xlat
push
jae
xchg
inc
sub
test
jb
rsqrtps
mov
cs
and
pusha
mov
mov
sbb
sahf
add
jl
ss
ins
mov
jbe
jmp
nop
mov
mov
adc
lahf
test
adc
cs
or
(bad)
cwde
enter
(bad)
(bad)
jp
sub
or
jecxz
call
aad
imul
ds
je
les
out
sbb
xor
xchg
xlat
inc
imul
push
jle
adc
inc
hlt
scas
xor
fimul
jmp
movs
test
js
sub
call
jmp
mov
dec
mov
jb
dec
jp
mov
sub
xchg
inc
add
and
imul
retf
(bad)
sub
mov
inc
call
into
xor
rcl
jp
imul
push
aam
xchg
aaa
xchg
and
loop
or
push
icebp
adc
or
mov
mov
stc
mov
cdq
jp
sub
ret
or
and
mov
pop
aaa
into
call
loop
rol
jns
bound
popf
cmps
ja
mov
pop
and
mov
icebp
adc
dec
jp
push
inc
(bad)
jnp
xchg
and
aaa
call
fdivr
jns
cmp
inc
inc
mov
adc
cdq
popa
ins
sar
leave
or
mov
sub
xor
dec
in
mov
pushf
add
cmp
hlt
call
les
jae
fwait
mov
mov
clc
jbe
jb
js
push
mov
inc
je
cmp
imul
or
mov
sete
and
sti
sahf
clc
outs
adc
imul
mov
fistp
ficomp
idiv
pop
mov
shr
sbb
popf
sub
sbb
xor
fsubp
loope
pop
jo
mov
cmp
(bad)
in
bound
inc
xor
jmp
inc
xor
dec
hlt
loop
fstp
js
nop
cmp
(bad)
add
or
lahf
xchg
push
mov
dec
test
out
cmp
and
lahf
inc
mov
xchg
sbb
mov
push
and
mov
movs
test
push
das
inc
mov
arpl
add
pusha
rcl
mov
dec
push
jp
fcmovb
pop
je
test
(bad)
ins
sub
fld
retf
push
adc
and
fcom
inc
sbb
cld
sbb
test
call
dec
pushf
jmp
adc
push
add
leave
xchg
fsubr
(bad)
xchg
(bad)
retf
int
jnp
int
stos
shl
popf
aam
cli
pop
jbe
dec
popf
aad
jl
ja
pop
fwait
sub
in
pop
ss
adc
mov
dec
rcl
jae
pop
out
add
aad
sbb
int
pop
add
aam
adc
cmps
sub
out
mov
mov
xor
int
sub
movs
call
cli
ret
jge
lock
xchg
movs
sbb
fld
adc
enter
stos
mov
push
(bad)
sub
fistp
inc
in
repnz
imul
push
mov
stos
push
fist
cwde
pop
xor
sahf
arpl
aam
xchg
and
pusha
call
xor
fs
vmwrite
push
push
xor
ins
xchg
pushf
xor
ret
jmp
retf
inc
sysenter
jnp
enter
pushf
aam
push
repz
mov
test
pop
mov
jge
das
daa
ret
ficom
cmp
das
mov
add
or
xchg
sbb
xor
dec
shl
gs
xor
jl
xchg
adc
sbb
cmp
adc
xor
push
cmp
outs
push
test
sub
into
ds
stos
test
dec
rcr
ins
fisubr
push
popa
(bad)
sub
add
pop
xchg
cwde
hlt
hlt
stc
add
jno
mov
frstor
addr16
or
imul
adc
mov
(bad)
cmp
mov
shl
gs
ficom
cmp
sahf
rcr
adc
xchg
sbb
sub
cld
fucom
iret
test
push
leave
call
dec
fnstenv
inc
mov
mov
mov
out
cmps
es
mov
push
push
pop
or
cld
xor
stc
sbb
repnz
sbb
push
in
(bad)
shr
daa
adc
xor
lock
js
int3
sbb
jne
inc
test
faddp
add
mov
cs
lock
push
in
in
test
mov
sbb
repnz
mov
xchg
add
repz
out
cwde
cmc
pop
push
retf
lock
(bad)
(bad)
push
mov
cmp
ja
add
jmp
jo
les
cmp
lods
test
push
bound
or
or
retf
in
xchg
mov
or
idiv
popa
nop
sbb
push
fs
rcr
mov
rol
vpsubq
lods
inc
pop
adc
int3
ficomp
xchg
pop
mov
pushf
push
mov
pop
aaa
int
add
jo
adc
aam
adc
jg
sub
push
dec
into
fldcw
jno
sar
mov
xchg
or
sub
(bad)
jl
or
int3
inc
shr
cmps
test
jl
clc
pop
pusha
fdivp
jmp
and
out
inc
and
push
test
mov
inc
sbb
push
pop
mov
xor
nop
xor
mov
outs
lock
jo
jb
mov
imul
or
cld
mov
and
xchg
adc
repz
js
call
lods
shr
mov
ins
inc
aad
inc
cmp
jns
dec
test
sbb
pop
imul
mov
mov
cwde
cmp
lea
das
pop
mov
lea
inc
aas
push
mov
out
xor
or
add
js
or
add
scas
shr
scas
outs
jne
xor
icebp
imul
jecxz
lahf
out
jbe
(bad)
and
add
imul
daa
and
retf
sub
pop
mov
mov
or
inc
ins
and
lods
aam
nop
inc
mov
dec
outs
imul
scas
mov
inc
into
xchg
inc
and
sbb
gs
xlat
xchg
bnd
inc
sti
int
sub
sub
call
jmp
mov
rol
push
(bad)
ret
jne
jp
or
pop
cmc
pop
aas
jecxz
fcmovnu
test
jne
daa
mov
jecxz
pop
mov
repnz
jmp
pushf
dec
mov
xchg
lahf
mov
fst
inc
aaa
rcl
mov
xchg
xor
test
sti
mov
pop
aaa
and
cmp
fcom
test
and
jg
sbb
addr16
mov
xchg
je
and
cmp
(bad)
or
add
jge
and
dec
ins
mov
cs
(bad)
xor
icebp
mov
dec
cmps
stc
inc
sub
retf
mov
inc
fdivr
pushf
push
xor
jo
(bad)
(bad)
scas
das
test
dec
(bad)
lods
mov
enter
or
cmp
xchg
xor
call
jg
xor
into
add
and
shl
stos
mov
dec
call
sbb
push
fs
pop
test
jecxz
sbb
ss
xchg
mov
test
js
call
cmp
adc
rol
fnsave
inc
sub
add
fwait
jle
inc
fimul
dec
jmp
sbb
pop
xchg
pop
fcom
sbb
shl
push
xor
rol
shl
fs
pop
dec
adc
in
push
pop
and
xchg
add
push
dec
pop
jbe
inc
and
hlt
xor
adc
mov
(bad)
mov
push
push
push
add
mov
dec
dec
dec
mov
mov
pop
sti
movs
sbb
lods
sbb
mov
rol
jp
pop
adc
inc
push
ror
ja
outs
or
ret
inc
rcl
loop
nop
lods
sub
imul
ret
or
fadd
pop
push
data16
or
popa
pushf
xchg
adc
pusha
xchg
mov
mov
jg
shr
out
out
lock
mov
fwait
or
cmps
sti
out
dec
or
imul
(bad)
fstp
push
jb
and
dec
sbb
rol
loopne
xlat
(bad)
addr16
xchg
lods
mov
jnp
push
movs
(bad)
pop
arpl
(bad)
rol
sbb
jae
rol
jno
ds
(bad)
es
(bad)
mov
sahf
outs
or
ins
mov
ja
xchg
popf
add
hlt
gs
and
stos
stos
adc
jg
ror
mov
xor
xchg
mov
pushf
or
sub
sbb
xorps
adc
sub
imul
xchg
mul
push
icebp
gs
cmps
mov
shl
fimul
dec
lea
cmps
sub
sbb
add
push
mov
sbb
nop
jae
icebp
aas
(bad)
xchg
xchg
or
mov
iret
fld
movs
pop
lods
xchg
shl
ja
cli
mov
shl
into
push
imul
ins
xor
lds
fs
xlat
pop
sti
mov
jb
add
dec
int
xor
mov
inc
ret
(bad)
push
push
mov
pop
ja
movs
xor
(bad)
jl
xor
sbb
shl
(bad)
cmp
fiadd
push
inc
stc
(bad)
mov
mov
mov
mov
sbb
mov
xor
xor
movs
imul
cmp
inc
push
fadd
rol
mov
addr16
aaa
imul
pop
sbb
jnp
jb
cmp
lea
cmp
jle
sbb
push
ja
lods
dec
loope
ror
mov
mov
es
aaa
xor
mov
mov
sar
movs
add
sub
adc
and
mov
lods
mov
sbb
sub
call
xor
pusha
jecxz
mov
xchg
jns
cdq
inc
stc
bound
rol
adc
(bad)
arpl
sti
push
js
mov
jmp
imul
jno
inc
push
or
xchg
cmp
jne
bound
fisubr
je
arpl
pop
sbb
shl
add
push
sub
dec
fst
(bad)
jmp
push
mov
dec
test
mov
in
jmp
and
xchg
xor
mov
xor
jge
or
rcl
mov
mov
(bad)
dec
mov
jecxz
mov
mov
sbb
pop
xchg
jnp
jmp
outs
inc
bound
sub
test
pop
jge
lods
or
cs
and
mov
movs
loope
(bad)
cs
xor
stos
push
rol
push
imul
std
mov
js
add
push
lods
daa
inc
or
je
ret
jmp
cmp
bound
faddp
icebp
faddp
inc
pop
add
inc
mov
mov
push
cmps
(bad)
dec
faddp
in
fadd
(bad)
pop
jmp
iret
jge
(bad)
sub
cmps
pusha
lods
or
xor
outs
xor
scas
sahf
out
sbb
pop
loop
jno
(bad)
popf
inc
sbb
int3
iret
repz
jnp
mov
sahf
stos
adc
jmp
adc
inc
lahf
jnp
pop
loopne
shl
xor
mov
ja
int3
pop
jmp
rol
repnz
pop
xchg
fdivr
mov
jbe
scas
jne
or
call
push
xor
jmp
and
dec
or
ror
mov
sub
push
stc
inc
push
in
popf
fwait
pop
data16
frstor
jmp
test
(bad)
scas
leave
push
push
ror
es
jp
loopne
lea
add
mov
std
sbb
and
adc
mov
dec
jp
add
mov
mov
enter
adc
call
(bad)
mov
or
mov
mov
lahf
add
jecxz
jne
pop
dec
dec
mov
pop
shl
add
or
push
ins
jecxz
dec
icebp
mov
xor
sbb
jmp
and
pop
pop
mov
dec
outs
mov
sub
in
jns
adc
sbb
fidiv
sbb
fwait
(bad)
lods
jne
adc
cmps
xchg
sbb
mov
sub
outs
clc
retf
pop
sbb
and
dec
lahf
pop
bound
fs
(bad)
mov
arpl
sar
push
dec
into
pop
inc
jmp
mov
mov
jns
mov
jno
pop
cmp
mov
jmp
shl
pop
mov
pop
xor
adc
aam
aam
jnp
inc
and
sbb
sbb
aad
lods
inc
sub
ror
dec
outs
mov
aaa
cdq
inc
data16
loope
or
aad
std
icebp
add
and
ror
mov
pop
ins
movs
add
mov
pop
jns
cmp
std
mov
sub
inc
(bad)
loope
cmp
and
mov
mov
es
int
cmps
xchg
push
fwait
xchg
mov
xchg
addr16
push
pop
retf
lahf
nop
push
cld
(bad)
inc
jecxz
retf
jl
lock
sar
into
(bad)
cld
ret
(bad)
mov
(bad)
jle
jecxz
or
sbb
das
jae
jnp
and
mov
or
ja
into
lods
xor
pusha
dec
sbb
rol
pop
lds
xchg
fs
iret
ins
sub
pop
aas
push
retf
sub
cmp
inc
inc
in
les
stos
xor
add
lods
adc
inc
ds
sub
shl
mov
aaa
pop
lea
jae
or
idiv
lahf
les
mov
leave
ds
loopne
dec
mov
test
jns
cs
xchg
test
fs
adc
sbb
mov
add
std
dec
push
or
push
ret
(bad)
jbe
ss
mov
enter
cmp
or
shl
and
adc
xchg
push
dec
(bad)
aaa
movs
aaa
shr
pop
add
adc
ss
xchg
add
(bad)
arpl
out
fwait
dec
or
pusha
add
shr
push
mov
mov
sub
stos
sbb
mov
sbb
stc
ret
fcom
jno
jne
mov
mov
ds
rcl
inc
mov
mov
movs
push
inc
call
stos
jb
pop
dec
enter
enter
retf
pop
sub
push
and
inc
fbld
sahf
push
jl
jae
push
push
mov
sub
pop
jg
cmps
mov
sbb
fnsave
xchg
add
or
test
dec
push
cmps
and
out
push
sahf
inc
movs
dec
dec
mov
test
ret
mov
add
loop
dec
out
cmp
repnz
fcom
mov
(bad)
add
cmp
and
mov
and
adc
and
sub
push
shr
mov
out
sar
inc
or
inc
cmps
xchg
and
sub
add
test
pop
push
mov
mov
mov
cdq
cdq
mov
mov
mov
scas
ficomp
(bad)
mov
xlat
in
cmp
jo
ror
sbb
in
into
ret
mov
ja
add
sub
mov
(bad)
lods
dec
push
add
push
les
imul
inc
dec
cvtps2pi
aaa
inc
dec
clc
push
jmp
pop
mov
sub
xor
push
mov
fwait
xchg
add
and
sub
(bad)
ficomp
jae
mov
enter
pop
jmp
out
and
xchg
enter
mov
cmps
mov
cld
mov
imul
nop
pop
push
push
movs
rol
jecxz
stos
jno
mov
std
xor
or
or
test
je
ss
mov
pop
outs
outs
cmc
mov
(bad)
adc
or
in
into
xchg
push
call
xor
call
lds
mov
add
xchg
jmp
and
pop
cwde
xor
ds
push
xor
ds
jmp
fnsetpm(287
jmp
cli
fdiv
fdiv
into
bnd
xor
(bad)
(bad)
jmp
imul
nop
retf
sub
mov
call
jno
jg
iret
mov
cmp
inc
out
push
and
cmp
mov
lods
jne
inc
stos
pop
lock
push
adc
xchg
cld
je
xchg
sbb
and
repnz
out
jae
in
mov
pop
test
test
inc
pop
dec
push
or
repnz
mov
adc
ror
cmp
imul
adc
imul
pop
call
jb
jg
test
jae
mov
bound
in
cdq
cmp
scas
in
xchg
xchg
push
xchg
mov
pop
(bad)
dec
ins
cs
pop
(bad)
cmc
int
mov
imul
pusha
jecxz
cmps
push
or
jp
or
xchg
imul
jbe
popf
sbb
(bad)
cmp
test
daa
push
retf
push
(bad)
(bad)
out
and
mov
xchg
test
and
jl
shl
xor
cmp
es
into
js
cmp
push
stc
out
shl
fild
stos
loopne
dec
add
mov
xchg
repnz
sub
xor
jne
xchg
jns
cmp
fnstenv
add
sahf
mov
push
clc
pusha
mov
bound
in
imul
xlat
test
xor
or
or
lds
sub
mov
mov
mov
mov
sub
cmp
imul
xchg
ins
arpl
xor
fwait
enter
mov
data16
idiv
dec
test
dec
jae
movs
cli
xchg
push
pop
jmp
ror
adc
lods
mov
xchg
add
call
xchg
inc
je
inc
and
retf
leave
fwait
shl
xchg
ins
and
push
pop
xchg
clc
dec
mov
dec
adc
into
dec
(bad)
rol
cs
(bad)
and
out
test
retf
xchg
inc
addr16
mov
dec
push
push
mov
arpl
xor
pop
adc
dec
iret
xor
pop
cmp
out
inc
adc
xchg
retf
shr
adc
loop
sbb
or
and
hlt
aaa
push
shl
fs
out
movs
push
test
mov
and
add
inc
xchg
mov
call
pop
push
and
and
pop
mov
mov
mov
add
sub
xchg
or
(bad)
dec
int3
xor
jae
xor
pop
ret
lods
addr16
inc
xchg
add
dec
mov
sbb
je
(bad)
js
pop
mov
bound
xchg
pop
jg
or
bound
mov
int
inc
pop
repz
cmp
or
lea
or
mov
pop
xchg
sub
sbb
test
sar
int3
dec
jnp
iret
mov
and
sub
and
push
push
ja
adc
pop
xor
xchg
dec
fs
push
xchg
dec
loopne
stos
mov
dec
loop
adc
movs
cmp
sub
pop
repz
sub
pop
loop
rcr
nop
retf
scas
inc
call
test
rcl
pop
outs
mov
adc
push
loope
movs
pop
imul
mov
daa
xor
sbb
jge
out
int
lock
mov
push
xchg
or
mov
in
mov
add
ret
add
aad
inc
cwde
pop
mov
adc
data16
mov
xchg
in
lods
(bad)
push
inc
out
lds
mov
dec
or
pop
cmc
and
rol
or
jl
or
mov
mov
push
shr
mov
and
ds
fst
ds
sbb
inc
mov
je
aaa
mov
cli
cmp
pop
jg
ja
ins
mov
nop
sbb
pop
sub
in
cmp
sub
not
daa
hlt
std
ja
fdivr
popa
ror
add
push
xor
xchg
and
push
push
xor
xor
out
or
xchg
mov
sub
mov
cli
push
mov
mov
mov
sub
inc
dec
add
jns
sbb
(bad)
pop
out
hlt
sti
loopne
xchg
xor
sub
pop
xlat
mov
mov
outs
(bad)
clc
mov
aad
cmps
ret
into
shl
test
hlt
jnp
(bad)
add
mov
ins
mov
ins
sbb
jnp
xchg
or
(bad)
xor
pop
mov
cmp
add
xor
or
stos
shl
add
ret
xchg
adc
jp
mul
ins
scas
imul
inc
mov
aaa
pop
dec
cmps
sahf
test
or
sar
imul
adc
fist
mov
ins
push
xor
fst
jae
cwde
inc
push
push
bound
sar
inc
sar
adc
and
int3
adc
test
aad
aam
cli
pusha
inc
test
ret
mov
(bad)
imul
ja
sbb
jg
les
fimul
mov
jp
ror
jmp
xchg
xor
sbb
enter
fbstp
mov
loope
or
pop
mov
test
pop
pop
dec
push
adc
sub
jb
jmp
jmp
pop
mov
pop
test
xchg
jnp
jp
pop
dec
fadd
or
xor
pop
or
out
popa
ins
fnsave
gs
jle
push
mov
push
sbb
mov
(bad)
adc
sub
inc
fucom
(bad)
out
mov
mov
(bad)
jmp
sub
ss
hlt
mov
(bad)
lahf
push
adc
cmp
jp
sbb
xchg
push
mov
and
mov
jmp
lahf
jns
and
stos
inc
inc
sub
ret
addr16
or
aaa
mov
xlat
addps
jmp
xchg
pop
jns
in
sar
js
or
test
aad
lahf
je
stos
push
mov
mov
(bad)
fisub
sbb
adc
inc
sahf
mov
xchg
xchg
(bad)
pop
jg
leave
ds
push
leave
fwait
fwait
dec
push
lods
nop
or
icebp
(bad)
inc
mov
in
ins
popf
push
fcmovnb
mov
loop
jb
sbb
daa
mov
pop
cmp
inc
movs
jb
cmp
or
ins
cmp
and
jnp
jecxz
sub
pop
out
pop
mov
pop
cmc
sub
loope
icebp
pop
pushf
sub
js
shl
test
aaa
xchg
fmul
rol
push
loope
pop
sahf
jmp
xchg
jno
mov
push
xchg
addr16
mov
and
sbb
in
cmps
sub
(bad)
jae
add
push
dec
push
ret
mov
ret
sbb
push
loop
ret
mov
cli
add
add
pop
push
jp
mov
jae
ficom
lods
jmp
push
jbe
loopne
mov
stos
shl
fcomp
mov
jno
loop
loopne
ret
sub
imul
xor
in
je
pop
ja
and
inc
fiadd
ds
cmp
jmp
xor
scas
pop
or
jle
cdq
ja
in
(bad)
shl
mov
in
adc
push
out
addr16
xor
or
adc
xchg
cli
jmp
inc
fld
mov
push
cmp
fstp
pop
adc
mov
push
xchg
std
aaa
add
inc
push
push
out
cmp
push
into
and
add
dec
jmp
pop
mov
cmps
arpl
sub
aam
jge
mov
(bad)
sub
inc
das
pop
icebp
sub
mov
ret
xor
cwde
aad
xor
mov
cmps
add
test
dec
add
lods
das
dec
shl
mov
mov
aaa
cmp
inc
in
adc
cwde
movs
(bad)
cld
into
frstor
push
add
loope
inc
mov
(bad)
call
cs
fs
sbb
mov
ins
mov
add
mov
cmp
in
xchg
jae
adc
rcl
std
dec
gs
loope
aam
dec
xchg
push
leave
pop
sti
jb
movs
adc
mov
hlt
jns
test
std
push
cmp
jae
mov
push
repz
mov
jg
mov
test
outs
fs
rol
in
dec
dec
mov
push
outs
ins
sub
arpl
(bad)
fcom
out
and
pop
sar
test
pop
mov
cmp
pop
mov
push
test
mov
push
movs
das
std
mov
pop
and
imul
loope
ror
mov
test
call
aam
dec
packssdw
push
gs
push
or
out
jle
enter
push
call
ret
or
into
sbb
mov
lock
(bad)
(bad)
fdivr
repz
xor
repz
or
sbb
inc
enter
ror
jno
xor
out
sbb
inc
jmp
mov
inc
dec
inc
fnstcw
stos
dec
outs
cmp
inc
add
int3
mov
cwde
sbb
test
in
mov
adc
jg
mov
retf
bound
in
inc
mov
jae
fld
dec
mov
push
sbb
sbb
popa
inc
fnstsw
add
cdq
or
je
loope
movs
std
xchg
into
ret
sbb
and
dec
mov
dec
xchg
mov
(bad)
retf
inc
and
sti
in
cmp
mov
inc
and
je
ret
bnd
fidivr
rol
out
outs
sub
in
popa
lahf
cld
fadd
stos
sub
or
pusha
and
(bad)
mov
mov
jb
ins
ffree
shl
dec
pop
sar
adc
jae
pop
inc
sti
adc
cli
add
adc
movs
jmp
rcl
adc
call
enter
pop
lds
lea
sbb
retf
pop
aas
cmps
xor
pop
xor
imul
stos
and
movs
mov
fisub
shl
cmp
add
nop
out
mov
test
aas
adc
or
jecxz
mov
push
(bad)
mov
outs
add
aam
mov
mov
sbb
fwait
inc
popa
push
push
jp
(bad)
jmp
push
sbb
mov
xchg
jp
into
sbb
js
dec
fcom
push
pop
push
aad
inc
aaa
test
pop
adc
stc
cmps
pop
imul
test
ja
adc
retf
ss
cmp
jge
mov
pop
fs
test
repz
pop
rol
adc
retf
pop
aas
inc
jg
pop
ret
mov
ins
popa
stos
das
adc
jle
shr
call
inc
shl
push
jmp
mov
lods
and
in
(bad)
mov
mov
mov
add
sub
stc
sbb
jns
imul
hlt
mov
outs
bound
mov
test
jbe
dec
mov
mov
mov
adc
pushf
out
mov
jnp
ror
sub
repnz
mov
sbb
sub
inc
mov
dec
push
sbb
call
inc
pop
pushf
sub
shl
mov
or
xchg
loopne
cmps
pop
mov
mov
xchg
fmul
xchg
mov
jbe
es
adc
cmp
mov
jmp
and
cmp
sub
shl
ss
sub
pop
fadd
cmp
jns
lds
pop
pop
test
adc
(bad)
mov
jns
pop
push
add
or
pusha
sti
pushf
cmp
mov
mov
sbb
sbb
inc
aaa
adc
mov
fstp
mov
or
push
fldcw
repz
sub
xor
arpl
mov
pop
hlt
sub
rol
or
sub
movs
cwde
push
out
cmps
sbb
pop
push
or
push
(bad)
js
test
jecxz
daa
addr16
mov
push
in
push
rcr
repz
or
out
mov
js
loopne
stos
dec
dec
shl
test
int
loopne
mov
enter
movs
xor
xor
adc
mov
and
sub
movaps
inc
jae
into
inc
(bad)
xor
and
gs
jns
loope
aas
sbb
mov
call
add
jg
ficomp
and
addr16
ror
(bad)
cmps
leave
vfnmsub231sd
loop
fnstsw
mov
cmp
dec
mov
int3
and
push
(bad)
icebp
xor
push
or
sbb
xor
aam
fsubr
mov
pop
dec
aad
aaa
add
mov
dec
fmul
xchg
and
jne
test
(bad)
out
push
movs
jae
jg
bound
mov
inc
pop
call
int
movs
loop
cwde
xor
mov
inc
xor
(bad)
(bad)
push
xchg
xchg
add
sbb
sbb
push
push
movs
jmp
xchg
mov
xchg
sahf
cld
push
cmp
mov
popa
(bad)
ret
pop
inc
adc
push
or
cli
add
das
in
loopne
test
popa
and
and
dec
pop
add
cld
not
scas
push
dec
cld
jl
cmp
iret
jg
ficom
pop
adc
out
jle
mov
xor
jp
add
in
inc
xor
or
cmp
fidivr
retf
push
lock
mov
xchg
ja
test
xchg
dec
sbb
mov
addr16
mov
dec
mov
cs
call
leave
push
test
je
mov
cmps
icebp
jmp
cmp
jns
out
xor
push
mov
or
cwde
mov
arpl
das
lea
push
dec
mov
push
leave
gs
scas
in
inc
rcr
call
pop
push
call
xchg
mov
and
push
add
ret
push
paddsb
out
not
mov
call
addr16
fucomip
jecxz
in
mov
push
xchg
je
jl
sbb
repnz
lahf
jl
les
xchg
je
push
xor
push
fcmovu
add
mov
push
test
cmp
pop
sub
xor
movs
call
mov
jle
add
cmp
clc
mov
mov
into
jne
fld
in
rcr
push
cmps
mov
dec
xchg
inc
jno
clc
xor
fs
rcl
fucomp
fnstenv
cmp
xchg
mov
in
mov
push
(bad)
sub
rcr
push
pop
add
repnz
and
mov
push
fdivr
sub
lds
push
imul
popf
cs
pop
xor
in
into
jb
jle
int
into
ins
dec
(bad)
fnstcw
adc
jg
pop
fisubr
or
mov
add
jmp
xchg
mov
push
cmp
out
div
pop
and
cs
retf
outs
xor
push
or
(bad)
and
xchg
pushf
popa
sbb
jo
js
dec
adc
mov
shl
jmp
xchg
cwde
jbe
add
das
je
ficomp
cmps
or
cmp
pop
(bad)
xchg
cmp
fcmovnb
xchg
xor
retf
mov
push
inc
adc
lods
nop
sbb
outs
dec
mov
repz
cmps
addr16
jmp
mov
fwait
inc
adc
bound
and
cs
jmp
stc
adc
not
xor
fnstcw
outs
pop
push
movs
mov
mov
mov
call
fisttp
xchg
cli
aad
fs
cmp
mov
pushf
and
xor
cmps
int3
mov
stos
out
icebp
aad
int
add
cmp
sbb
jbe
(bad)
cmp
jbe
mov
push
inc
mov
jno
sub
outs
jno
inc
stos
inc
sub
ror
in
cmps
pusha
lea
xrelease
jmp
mov
movs
lahf
cwde
dec
inc
and
aas
adc
sub
test
pop
int3
std
sbb
mov
inc
cmp
jmp
das
sbb
mov
data16
adc
mov
jns
test
mov
add
xchg
movs
lods
ins
adc
jne
aad
adc
lods
xor
lods
imul
js
setle
into
out
sub
in
hlt
or
or
nop
xor
push
icebp
dec
scas
call
in
jb
pop
sbb
outs
scas
cmovne
jns
pop
(bad)
or
xor
add
repnz
icebp
pushf
push
sti
pop
retf
push
mov
inc
mov
iret
add
pop
sbb
sbb
mov
mov
or
cmp
stos
inc
mov
gs
scas
into
repz
cld
mov
dec
sub
pop
shl
repz
js
popa
pusha
ret
add
arpl
daa
test
jle
movs
mov
in
out
lods
es
dec
mov
pop
outs
in
mov
adc
mov
mov
mov
in
hlt
cmp
fbld
(bad)
inc
or
inc
and
ins
push
mov
cmp
xchg
movs
mov
xchg
fisttp
jecxz
ds
aaa
jb
pop
arpl
cmp
mov
xor
fld
scas
(bad)
in
adc
pop
mov
mov
test
je
pop
ud2
test
aaa
cld
and
mov
jmp
fnstenv
cmps
cmp
mov
fisub
push
cld
inc
fwait
test
xor
cli
xlat
sbb
iret
or
adc
aas
mov
sbb
push
adc
or
jmp
add
loopne
addr16
add
cmp
pop
jo
mov
xor
or
and
(bad)
in
mov
mov
mov
rcl
out
dec
cdq
inc
mov
in
xor
stc
jbe
test
add
or
xlat
sahf
mov
pop
test
dec
dec
mov
psubd
hlt
inc
pop
dec
inc
fistp
popa
pushf
or
(bad)
jns
push
cdq
int3
cdq
es
movs
inc
mov
xor
rcr
jl
ficom
mov
jmp
push
outs
sbb
aad
gs
pop
mov
cmps
test
in
addr16
stos
test
add
push
mov
fiadd
xchg
shl
mov
add
repz
jbe
icebp
xchg
add
mov
mov
jbe
dec
xchg
push
adc
fisttp
mov
(bad)
aas
stos
jns
adc
jae
popa
mov
mov
push
pop
fidivr
repnz
sbb
xor
inc
shld
sbb
xchg
adc
jecxz
mov
and
clc
mov
dec
loopne
mov
xchg
sahf
loope
push
stc
dec
xor
das
in
pop
add
ret
repz
and
test
xchg
jmp
pop
sub
iret
stos
xlat
(bad)
mov
push
out
pop
add
adc
fadd
jmp
fbstp
hlt
adc
scas
push
inc
lods
ficom
bound
pop
cmps
add
xchg
push
cdq
mov
lock
setl
sbb
mov
and
xchg
jp
sbb
stos
adc
mov
leave
mov
rcr
dec
repz
cmp
jecxz
or
pop
or
mov
call
sti
mov
call
in
sub
push
push
aas
pop
pop
jb
xor
xchg
retf
push
inc
mov
arpl
cmp
mov
out
sar
xchg
fwait
xor
push
pop
inc
cmp
mov
sar
mov
sahf
aaa
jo
rol
fcomp
aam
xchg
pop
push
mov
addr16
and
jbe
mov
in
xor
mov
xchg
mov
dec
test
dec
push
mov
dec
mov
mov
jl
mov
fwait
cmp
xchg
aas
push
mov
imul
ror
adc
cdq
pop
std
and
pop
add
xor
cmp
mov
mov
dec
(bad)
ret
and
stos
add
outs
mov
leave
lea
pop
pop
mov
pop
cmps
cmp
dec
inc
not
test
push
mov
in
dec
mov
inc
cld
ins
sbb
cdq
pop
fucomp
mov
cwde
sahf
outs
jmp
test
inc
jmp
imul
jo
je
movs
icebp
rep
mov
push
cmp
or
or
scas
jns
jo
push
xor
(bad)
mov
mov
ds
dec
out
in
leave
mov
sub
inc
add
pusha
adc
or
push
or
outs
pop
xchg
and
test
mov
aaa
shl
(bad)
push
test
rol
adc
mov
xchg
fcomp
enter
loope
mov
(bad)
outs
inc
test
out
push
mov
ins
cmp
data16
xchg
add
clc
push
cli
cs
add
inc
rol
sub
ds
sub
cwde
or
sbb
pop
sbb
mov
sub
mov
retf
cdq
aad
inc
retf
outs
enter
cmp
pop
push
leave
aad
mov
xor
dec
jge
mov
pop
jne
cmp
sub
rcl
scas
ud0
stos
pop
cs
cmp
cli
data16
jge
pop
pop
xchg
les
pushf
loop
add
xchg
cmp
add
mov
cmp
test
int3
arpl
or
shl
add
lea
xor
jb
sub
enter
mov
add
cmp
aad
mov
aam
cmp
aaa
shr
cwde
(bad)
jae
and
in
fs
popf
sub
pushf
stos
repz
aam
mov
and
aad
cmp
pop
fnstcw
ret
inc
sar
mov
addr16
mov
mov
cld
dec
movs
test
push
xor
jno
lods
mov
push
mov
test
lock
and
gs
pop
(bad)
adc
cwde
inc
inc
dec
imul
fucom
mov
sti
add
mov
jg
in
jns
sbb
xchg
pushf
cli
unpcklps
jnp
adc
push
daa
pop
jg
vpsrad
popf
ss
cld
adc
xchg
stos
in
adc
or
cmps
rcl
mov
psllw
jnp
scas
into
sub
push
lds
movs
sar
and
call
adc
lds
jne
jb
je
sti
cmp
mov
into
push
adc
mov
push
add
push
in
jl
sub
xchg
mov
mov
xor
lock
mov
or
dec
cld
cmp
hlt
loopne
in
pop
or
inc
jo
lods
arpl
mov
jmp
rcl
or
out
enterw
dec
sbb
or
in
lahf
(bad)
je
xchg
stos
mov
je
inc
scas
mov
lock
adc
out
sub
in
add
adc
pop
shr
js
mov
mov
xchg
push
sti
cli
mov
test
inc
or
add
out
lahf
sbb
xchg
push
or
call
enter
cmc
inc
and
ins
pop
jecxz
mov
push
lds
push
mov
and
push
lock
mov
imul
xor
addr16
pop
pop
or
push
mov
inc
push
jmp
or
cwde
mov
adc
mov
or
test
jns
imul
fnsave
(bad)
cmp
xor
xchg
cmp
dec
shl
not
xor
sbb
mov
pop
mov
cld
adc
nop
push
into
retf
fwait
cmps
xchg
pop
push
mov
nop
stos
and
jl
mov
dec
sahf
outs
jmp
jp
call
add
clc
data16
fcmovnbe
adc
out
push
imul
jg
mov
and
shr
leave
jmp
mov
out
dec
pop
mov
cld
mov
ja
cdq
inc
jo
jle
sub
cmps
adc
cld
and
stos
unpcklps
inc
or
retf
xchg
pop
jno
fisub
cmp
jmp
enter
adc
adc
out
jl
nop
jne
mov
scas
in
cmp
jle
movs
clc
xchg
pusha
add
xchg
pop
fist
lea
out
in
(bad)
popa
jg
mov
sbb
test
rol
icebp
movs
push
inc
jl
gs
dec
ins
out
(bad)
mov
jb
not
push
xchg
push
aad
out
das
sub
outs
and
hlt
and
lahf
sub
cs
ins
push
xchg
mov
xor
mov
adc
and
sbb
mov
jae
outs
scas
jmp
out
push
add
or
movs
push
stos
cmps
sub
sbb
test
pop
test
inc
push
out
sar
inc
push
in
push
mov
dec
dec
pushf
xchg
dec
push
mov
mov
sbb
std
out
std
inc
add
push
sub
sbb
stos
jp
ret
mov
cmp
xchg
mov
fadd
je
ja
mov
mov
pop
push
push
xor
cmp
lock
std
adc
retf
lds
xchg
mov
jae
push
out
aad
add
lahf
or
mov
add
sahf
lds
jo
out
in
and
xchg
(bad)
fstp
xor
pop
int3
mov
ret
in
pop
push
movs
inc
loope
adc
pop
clc
sbb
mov
pop
jle
adc
and
aaa
fist
ficom
xor
arpl
stos
sub
push
mov
mov
mov
js
test
xor
ins
adc
das
stos
and
cdq
mov
popf
pop
cmp
or
inc
arpl
cmc
mov
cmps
mov
adc
scas
arpl
xlat
cld
push
fst
push
jg
xchg
hlt
aad
pusha
scas
mov
addr16
and
ret
pop
loope
pop
mov
ins
adc
gs
psllq
inc
in
fucomi
jns
aas
cdq
pop
push
mov
aad
test
pop
jge
cmps
retf
jb
pop
or
mov
out
xchg
js
push
add
outs
pop
mov
xor
(bad)
stc
mov
inc
sar
mov
sub
sahf
sub
mov
fwait
call
out
mov
push
mov
jg
or
enter
push
jmp
dec
jbe
add
std
cmps
add
dec
jne
dec
jl
ret
repz
test
pop
jmp
adc
std
clc
call
jge
dec
sub
cld
mul
cmp
rcl
pop
push
adc
cwde
adc
cwde
call
sbb
xchg
in
mov
shl
inc
jbe
stos
outs
or
cmps
xor
ret
das
dec
and
sbb
push
push
cli
and
cmp
sti
xchg
add
push
jecxz
and
add
or
add
ror
iret
mov
imul
dec
fisubr
sbb
xchg
dec
outs
fcmovb
mov
inc
dec
hlt
xchg
and
popf
xor
dec
jbe
add
pop
js
int
cld
mov
add
pushf
pop
jae
adc
cmc
out
int3
jge
sub
mov
jge
xchg
cmc
daa
pop
movs
lds
sbb
je
ja
leave
loop
jb
pushf
dec
cmps
add
rcr
inc
int
push
or
lods
cmp
cmp
sbb
imul
cmp
mov
cmp
movs
pop
ret
sub
xor
aas
push
icebp
sub
(bad)
test
xor
addr16
repz
(bad)
mov
mov
pop
push
outs
jp
jns
sub
mov
push
iret
stos
(bad)
xchg
mov
movs
into
and
dec
sub
iret
mov
mov
lea
cmp
ins
jle
cdq
dec
in
dec
xor
push
xlat
call
cmp
mov
(bad)
shr
clc
(bad)
cmps
pop
lock
imul
mov
pop
mov
xor
push
ret
mov
icebp
cmp
call
push
cmc
and
and
and
sbb
dec
push
jne
stos
add
mov
out
mov
xor
sahf
sbb
icebp
stc
ret
mov
adc
movs
js
adc
xchg
hlt
les
call
fs
sbb
cmp
pop
popf
inc
jge
or
inc
stos
outs
cs
add
xchg
mov
mov
ret
cmp
imul
adc
dec
(bad)
loop
std
mov
(bad)
xor
hlt
cmp
movs
fdivr
retf
sti
push
retf
(bad)
sub
xchg
push
sub
mov
movs
out
mov
out
jmp
icebp
rcr
leave
test
xor
std
test
cld
stos
imul
xchg
ss
jns
and
dec
sub
in
out
fwait
leave
jne
sbb
and
(bad)
mov
ss
cmp
push
in
cmc
cmp
xchg
mov
cmp
(bad)
xchg
lea
xor
cmp
mov
push
fstp
loopne
imul
or
int
or
add
fst
pop
gs
or
pop
stos
cld
repnz
retf
xchg
pop
mov
pop
sbb
bndldx
dec
sub
pop
add
mov
jecxz
mov
dec
xchg
in
and
cmp
into
jle
dec
xlat
sahf
out
push
cdq
call
mov
mov
(bad)
ror
jae
jae
cld
xchg
jo
stc
add
dec
(bad)
rcr
pop
clc
imul
mov
or
retf
xlat
js
lahf
addr16
add
push
xchg
inc
and
(bad)
aam
cmps
jmp
fwait
cld
xchg
jp
inc
fstp
xchg
jle
adc
adc
fadd
in
adc
xor
dec
inc
mov
mov
test
mov
jmp
jp
shl
popa
or
xchg
mov
pop
sbb
xor
dec
loopne
aad
adc
push
ffree
adc
cmp
or
mov
cmc
xor
rcl
cmps
xchg
pop
lods
xor
iret
pop
push
add
scas
inc
inc
sbb
push
inc
pop
cs
data16
(bad)
std
icebp
dec
cld
sub
ins
loope
sub
mov
mov
pop
ret
sbb
jae
mov
icebp
sbb
dec
mov
shl
mov
into
mov
out
jnp
dec
call
mov
xchg
(bad)
ins
(bad)
iret
aad
mov
sbb
push
push
iret
fist
dec
dec
add
mov
pop
cmp
fld
fdiv
dec
test
sbb
add
xchg
sub
mov
xor
sbb
jnp
jns
sub
cmc
or
sbb
std
xchg
dec
push
stos
and
adc
jae
inc
(bad)
push
cmc
inc
inc
enter
hlt
or
xor
pusha
mov
stos
stos
jnp
in
movs
pop
mov
cwde
mov
retf
loopne
xchg
lods
mov
sbb
in
cmp
ds
fbstp
pop
mov
inc
add
push
xor
aam
ficom
daa
out
shl
push
adc
das
pop
jge
(bad)
(bad)
gs
bound
cmp
jbe
je
jge
fmul
jae
setge
pop
call
out
sub
in
pop
scas
aad
push
dec
dec
aas
dec
or
push
mov
pop
push
ror
ins
cdq
movs
inc
fstp
rcr
mov
outs
sbb
push
cmp
arpl
xchg
popa
les
sar
inc
ror
mov
stos
mov
fwait
mov
pop
int3
iret
jno
dec
pop
pop
cmp
sub
add
xor
push
add
or
outs
repnz
dec
mov
imul
fstp
jmp
hlt
pop
popa
rcl
pop
mov
inc
pop
ret
shl
push
ins
or
lea
mov
add
adc
jmp
imul
and
popf
mov
retf
add
cmp
lods
sbb
fwait
sti
lock
mov
and
xchg
sti
pop
fwait
stos
mov
jns
jge
ins
data16
test
rcr
sahf
popf
test
and
mov
and
pushf
das
and
jle
outs
inc
mov
push
addr16
call
sbb
mov
jmp
adc
pop
sub
cmp
aad
or
fmul
xchg
mov
rcl
sbb
push
fucomp
out
sbb
push
mov
pop
cld
inc
mov
pop
inc
add
and
mov
pop
or
mov
push
xor
adc
dec
lds
mov
les
dec
dec
mov
xchg
(bad)
dec
dec
(bad)
(bad)
popa
cmp
mov
jmp
mov
data16
and
retf
inc
adc
movs
mov
dec
mov
sbb
jg
sbb
jge
mov
cmp
or
popa
fwait
stos
adc
jg
add
gs
sbb
cld
jae
stos
and
in
dec
stc
mov
mov
pop
mov
and
mov
mov
ins
pop
fsubr
dec
adc
jne
stos
inc
icebp
mov
adc
cs
mov
popf
pop
dec
add
mov
je
or
mul
mov
push
lds
and
mov
sub
dec
(bad)
ret
loop
call
(bad)
pop
xor
xor
int
enter
mov
mov
add
push
(bad)
and
scas
xor
mov
pop
movs
mov
imul
add
imul
mov
dec
scas
std
xchg
add
cmp
ficomp
mov
popa
vphaddbq
xchg
call
xchg
popf
rdpmc
add
ret
je
mov
enter
call
in
lea
inc
(bad)
in
cld
ja
jecxz
js
sahf
push
jmp
sub
shr
adc
daa
push
inc
mov
sub
es
je
(bad)
cmps
popa
and
pop
retf
xlat
(bad)
ja
jns
mov
(bad)
sbb
(bad)
repnz
inc
fiadd
add
mov
cmp
repnz
and
das
inc
cwde
jp
retf
scas
dec
mov
mov
scas
or
jbe
lods
stc
and
and
jae
les
mov
adc
cmp
mov
sbb
mov
call
push
(bad)
mov
xchg
stos
(bad)
cmp
(bad)
js
stos
push
repz
ins
sbb
inc
and
in
push
push
leave
jle
push
jnp
shr
ret
aad
push
xor
shl
add
push
repnz
inc
sub
adc
mov
mov
cdq
push
xchg
idiv
out
pop
inc
mov
sbb
and
stos
or
stc
js
push
lock
cmp
xchg
scas
dec
mov
mov
lds
xor
cli
add
sbb
add
dec
jbe
(bad)
cmc
adc
xchg
retf
mov
sub
sbb
enter
lock
daa
fcmovu
imul
test
mov
fist
mov
jmp
(bad)
sahf
push
cld
je
jle
and
xchg
dec
int
mov
jp
xchg
sbb
mov
mov
inc
movs
rcr
xor
cmps
in
dec
xlat
inc
inc
fisttp
dec
cld
dec
pop
into
push
fnstenv
call
add
pop
cmp
repnz
sar
lods
adc
(bad)
cdq
xor
jl
xchg
push
(bad)
pop
int3
test
ficom
aad
xor
xchg
xor
sub
adc
sbb
(bad)
ds
jmp
cld
sar
xor
sbb
or
rcl
ins
cmp
hlt
jp
test
jg
call
ds
jne
fidivr
push
imul
mov
je
push
iret
pop
pop
repz
inc
ss
cli
fbld
(bad)
cmps
sbb
dec
gs
or
xchg
push
test
sub
pusha
movs
sbb
pop
fcomp
mov
inc
fsubr
mov
xchg
mov
jae
loopne
sahf
jmp
and
push
aas
test
cdq
pop
das
inc
jmp
test
or
ret
and
and
and
jne
jmp
or
nop
scas
int3
mov
mov
xlat
in
in
ret
in
mov
cmps
jmp
jge
lods
pop
fisttp
add
cmp
cmps
add
cmps
pop
push
(bad)
jmp
mov
dec
cmp
inc
and
mov
xchg
dec
into
cwde
pop
ins
popf
jae
push
sbb
pop
rol
add
repz
inc
rcl
imul
mov
xchg
sub
out
xchg
xchg
call
les
and
mov
xchg
mov
js
(bad)
cdq
cmc
inc
xchg
retf
daa
pop
xor
pop
inc
pop
xlat
movs
mov
xor
lods
pushf
aad
xchg
fs
jl
and
sti
imul
mov
xchg
pop
xchg
inc
lahf
jae
sbb
fcomi
clc
rol
aad
or
pop
lock
sbb
cmps
xchg
inc
ds
inc
aad
or
and
sar
mov
mov
inc
pushf
sub
cmp
stos
std
and
repnz
retf
pop
or
push
pop
pop
ins
sub
repz
or
test
push
imul
dec
vmptrst
mov
xchg
inc
mov
jl
data16
test
inc
jmp
push
nop
fsincos
shl
inc
jbe
dec
fadd
call
sub
je
bnd
adc
lock
xchg
add
adc
loop
pop
sbb
call
push
popa
call
pop
xor
cmp
xchg
repz
in
aaa
cld
and
iret
pop
repnz
dec
or
lahf
push
jmp
stos
jnp
enter
jo
clc
imul
pop
scas
sub
(bad)
xchg
dec
rol
pushf
repnz
mov
inc
scas
push
sahf
sahf
and
pop
push
and
imul
rol
sbb
jge
in
pop
(bad)
or
sahf
into
mov
shr
cmps
pop
ror
sub
jo
(bad)
(bad)
mov
ins
movs
dec
lahf
jae
mov
pop
pop
add
lods
mov
aaa
add
push
push
int3
fsub
push
pop
pop
cmp
xchg
in
imul
and
xchg
pop
arpl
enter
jnp
loope
in
sbb
xchg
and
fs
aas
(bad)
xchg
mov
movs
sbb
push
shl
ret
test
and
mov
add
jne
into
pop
dec
push
out
fbld
adc
mov
addr16
jl
sbb
inc
ret
jb
jmp
and
in
fnsave
adc
leave
iret
mov
outs
push
stos
outs
add
xor
sub
mov
xor
or
mov
lea
int3
dec
dec
nop
in
and
scas
xor
nop
mov
lods
sub
clc
in
out
and
sub
mov
ja
clc
je
shl
sbb
jns
repz
gs
xor
or
ins
in
(bad)
iret
daa
cmp
scas
add
js
jns
xor
jmp
scas
mov
or
dec
adc
hlt
pop
cli
lods
jmp
mov
and
rol
pop
add
adc
retw
xchg
add
mov
ret
daa
mov
(bad)
mov
mov
and
cmps
sbb
in
push
mov
mov
dec
add
clc
inc
ss
mov
in
or
stos
cld
ror
sbb
push
scas
fst
test
stos
sbb
push
repz
scas
mov
hlt
xlat
mov
frstor
mov
jo
aas
inc
ss
jmp
pop
std
and
out
xchg
fs
pop
cli
pop
pushf
cmp
pushf
rcl
in
pusha
ret
fdivr
pop
out
sbb
cmc
xchg
mov
jmp
jnp
stos
push
out
retf
es
loop
leave
retf
xchg
fcom
stc
cmps
sub
push
icebp
pop
je
pop
lea
and
sub
mov
push
jecxz
icebp
adc
push
push
movs
or
jg
or
ret
mov
sub
sbb
jns
cmp
lahf
sbb
test
iret
cld
pmaddwd
loope
mov
and
and
(bad)
fidiv
and
and
xor
cmp
out
inc
jge
sub
test
jae
inc
jecxz
pop
xlat
pushf
xchg
mov
add
loope
nop
pop
xchg
std
inc
mov
out
sub
aam
ss
or
pop
xor
cdq
pop
jbe
mov
jmp
mov
idiv
sub
inc
(bad)
call
fsub
inc
std
out
lea
pop
pusha
scas
adc
inc
into
xchg
dec
fisubr
dec
or
xor
and
pop
(bad)
fstp
jp
push
ror
xlat
inc
jl
xchg
cmps
inc
faddp
(bad)
jmp
adc
cmp
cmc
in
mov
call
jo
jns
mov
daa
iret
scas
mov
adc
aad
(bad)
out
jle
cmp
lods
xor
in
inc
stos
cmp
test
jp
retf
in
mov
fstp
cmc
icebp
adc
push
dec
icebp
xor
repnz
loope
add
sahf
inc
push
sahf
push
(bad)
cmp
test
std
stos
adc
push
shl
test
mov
xor
push
inc
out
out
test
repz
push
dec
stc
retf
xchg
inc
sub
loope
mov
mov
jp
sar
and
sbb
push
test
call
rol
xchg
jo
call
sbb
mov
ret
mov
cmp
bound
dec
fild
and
retf
xor
inc
inc
imul
dec
xlat
sub
int
jp
out
mov
retf
aad
in
mov
leave
pop
repnz
mov
out
out
loop
and
test
dec
xchg
mov
pop
addr16
or
mov
ja
add
jbe
cmp
popf
jecxz
cmps
xor
jmp
out
(bad)
and
xor
scas
hlt
dec
pop
jns
push
aaa
mov
sahf
pushf
or
shr
outs
push
inc
and
mov
outs
not
push
add
jp
hlt
add
fist
ret
daa
aam
loop
cli
xchg
xor
dec
dec
mov
(bad)
jne
push
out
add
push
inc
pop
(bad)
or
pop
aad
clc
rcl
xchg
loop
or
or
xlat
clc
pop
fld
push
sbb
xchg
mov
xor
sub
scas
shr
mov
push
xchg
mov
pop
std
cmc
xchg
jp
test
pop
mov
inc
fist
cmps
mov
loope
push
cmp
pop
mov
gs
popa
pusha
and
jnp
(bad)
xchg
cmp
push
cmps
xor
cmp
mov
push
sbb
sbb
aam
mov
jmp
xor
and
mov
(bad)
cmc
sub
jg
pop
mov
aaa
out
test
leave
mov
fnsave
xlat
(bad)
int3
mov
jbe
gs
xchg
frstor
push
and
xchg
or
fdivr
in
sub
sahf
jl
(bad)
mov
cwde
mov
adc
mov
jmp
fdivr
stos
pop
xchg
jmp
lds
push
movs
pop
push
jmp
(bad)
cld
pusha
cdq
daa
enter
hlt
and
mov
scas
ror
xchg
div
aam
test
cmp
dec
sbb
arpl
gs
ins
fstp
call
iret
xor
add
gs
out
add
aas
inc
aam
mov
aaa
dec
in
fidivr
push
mov
outs
pop
push
lds
repnz
inc
and
aam
add
rol
push
enter
and
test
cmc
(bad)
mov
add
cwde
add
ins
inc
ss
adc
lods
mov
lods
test
mov
jp
jb
xor
enter
pop
pop
xor
adc
jecxz
movs
jmp
(bad)
(bad)
icebp
sahf
add
add
cmp
fs
adc
push
sub
dec
jb
jmp
repnz
mov
mov
shr
jle
out
jb
test
retf
lods
mov
mov
push
bound
cmp
cdq
sbb
jmp
cwde
pop
les
sub
adc
jbe
push
outs
pushf
push
inc
dec
mov
mov
fs
les
shr
dec
push
call
in
pop
nop
hlt
add
push
int
loop
xchg
mov
gs
cmps
adc
aad
mov
loopne
lock
out
test
nop
inc
mov
add
jp
je
or
cmp
pop
pop
loopne
pop
pop
mov
js
cli
cld
dec
sahf
mov
js
aad
es
jecxz
mov
add
mov
jne
mov
lahf
mov
xchg
es
jmp
pusha
add
in
cmp
dec
push
icebp
jmp
pusha
sub
leave
aam
and
inc
fst
in
push
and
sub
or
xchg
repnz
in
xchg
retf
sub
push
mov
in
xchg
out
das
sbb
cmp
or
and
xor
stos
shl
into
xchg
lods
je
ret
pop
push
dec
cmp
out
outs
adc
adc
mov
shr
clc
std
arpl
mov
(bad)
pop
sbb
adc
and
pop
test
stos
jne
push
lods
add
jns
mov
push
push
inc
cmp
daa
loopne
aas
cli
jmp
call
js
dec
cmp
nop
jl
inc
mov
(bad)
adc
xchg
inc
div
mov
cmp
(bad)
int
out
jle
retf
add
xor
std
pop
mov
bound
dec
fneni(8087
fcmovnbe
xchg
xor
push
jmp
ds
test
dec
in
lds
pop
fnsave
adc
dec
or
jg
add
mov
mov
imul
out
and
scas
repz
imul
push
loop
sub
cli
scas
or
ss
pop
fwait
jl
mov
xchg
add
fldenv
cs
adc
mov
jne
aad
add
fsubrp
mov
imul
add
outs
rcl
mov
in
sbb
ds
(bad)
push
inc
xor
(bad)
dec
mov
aaa
mov
pop
jge
outs
and
xchg
add
in
push
icebp
ret
jb
aaa
xor
sub
repnz
or
div
dec
and
pushf
jmp
cmc
mov
(bad)
cmc
dec
loope
popf
xchg
sar
bound
mov
imul
cli
mov
aam
push
jo
loop
test
mov
sub
mov
xchg
mov
cmp
(bad)
outs
inc
data16
popa
lahf
hlt
test
ins
out
and
mov
pop
xchg
push
inc
outs
push
dec
stc
lahf
mov
dec
xchg
add
pusha
sbb
pop
mov
lods
add
stos
push
pmulhuw
mov
gs
lahf
inc
add
pop
inc
pushf
dec
dec
add
sub
aam
arpl
ror
inc
outs
aam
adc
clc
jmp
inc
fwait
mov
ja
xchg
scas
jmp
and
pop
jae
xchg
add
and
js
sbb
mov
jne
mov
(bad)
mov
mov
(bad)
fdiv
cmps
cdq
imul
aas
xchg
add
adc
sub
fiadd
sbb
mov
in
pop
pop
xlat
and
cmc
lods
stos
adc
in
xor
mov
rcl
scas
sub
icebp
jnp
or
sub
dec
or
stos
push
icebp
push
mov
adc
in
repnz
(bad)
mov
adc
adc
mov
fst
(bad)
sbb
cmp
sbb
(bad)
movnti
sbb
shl
xchg
shl
xchg
or
dec
jno
mov
dec
lahf
dec
loope
(bad)
out
imul
and
dec
cmc
xchg
(bad)
in
lods
dec
dec
out
adc
cmp
inc
imul
inc
jp
mov
in
xchg
xchg
vpunpcklwd
cli
sub
mov
mov
aam
iret
add
sbb
or
fcomp
pop
inc
push
mov
inc
sbb
les
shl
cmp
mov
int
sbb
cmc
jmp
xchg
movs
jl
sub
loopne
mov
dec
addr16
or
je
inc
push
and
loope
fs
repz
iret
cmps
push
inc
(bad)
out
mov
pop
cmp
lods
jp
ins
or
pop
dec
sub
out
mov
xchg
and
add
outs
dec
icebp
cmp
ret
(bad)
aad
pop
xor
xor
inc
fdiv
rcl
popf
inc
and
fs
mov
ss
push
xchg
push
push
xchg
gs
shr
shl
enter
sbb
xor
out
and
hlt
and
mov
xor
movs
ret
fmul
sub
setge
sbb
push
jle
fstp
jl
fstp
rcr
mov
cmc
leave
cmc
ins
mov
in
test
outs
sti
call
and
popa
cld
aas
cli
jb
add
test
movs
daa
sbb
inc
dec
aad
iret
adc
add
cs
stos
cmp
and
sub
and
shr
int3
(bad)
mov
cmps
inc
inc
dec
mov
mov
mov
lahf
mov
push
mov
mov
int3
mov
call
daa
lahf
push
sti
pop
jle
and
sbb
out
or
in
retf
jge
and
fistp
mov
adc
pushf
jbe
ret
xchg
in
sub
in
jl
and
ins
add
je
test
xchg
or
fcmove
dec
add
int
pop
push
scas
cmp
cmp
lods
sub
lahf
cmp
lock
xchg
or
in
or
mov
push
popf
(bad)
out
mov
addr16
xchg
pushf
rcr
scas
fistp
popa
in
push
mov
and
xchg
xchg
(bad)
popa
(bad)
or
arpl
inc
(bad)
js
cmp
lock
xchg
cmp
dec
enter
(bad)
push
adc
adc
dec
mov
jecxz
hlt
mov
pop
call
xchg
push
mov
int3
xor
lds
hlt
pop
stos
sbb
retf
jns
repz
stos
ret
sub
int
sar
ins
sub
mov
inc
int
and
xchg
enter
icebp
jg
test
adc
add
push
jbe
dec
popf
adc
jp
leave
rcl
pop
cmp
iret
jno
sub
dec
(bad)
fdivp
lahf
dec
or
loope
fwait
pop
clc
push
popf
xor
sbb
pop
lock
or
pop
jmp
dec
outs
and
jnp
mov
scas
cmp
loope
xor
inc
or
mov
mov
fist
jns
push
pop
out
jns
(bad)
loopne
xchg
xchg
pop
fld
mov
cs
mov
cmp
ins
aad
add
sub
cmps
mov
sub
test
retf
rcr
leave
mov
xchg
addr16
repz
cli
adc
scas
lods
les
fist
xchg
cdq
sub
(bad)
bound
in
jge
mov
push
retf
in
(bad)
mov
pop
popf
xchg
xlat
sub
mov
aad
(bad)
cld
std
push
mov
push
or
clc
push
xchg
jecxz
fwait
xchg
push
add
and
cs
xchg
xchg
ds
cmps
add
popa
xchg
or
jno
adc
pop
pop
jle
sbb
mov
test
enter
repnz
inc
push
xchg
fmul
push
out
cwde
cmp
cdq
pop
or
xchg
and
mov
push
test
sub
das
mov
hlt
les
lahf
and
dec
push
inc
jecxz
sbb
out
pop
fs
pop
ficom
inc
punpckhbw
gs
shl
shl
jno
jmp
jecxz
mov
loopne
scas
rol
je
sbb
cmps
icebp
movs
push
mov
sbb
sar
hlt
dec
or
and
fdivr
retf
mov
push
not
pop
pop
add
gs
xchg
inc
jecxz
adc
jmp
push
push
je
lds
cmp
outs
jo
jnp
das
or
xchg
adc
or
nop
or
popa
jae
leave
mov
fcomp
(bad)
jo
cmc
aas
mov
ret
scas
std
addr16
test
jb
lea
retf
mov
shl
push
dec
pop
xchg
mov
(bad)
(bad)
(bad)
out
mov
xor
loopne
enter
movs
xchg
pop
mov
adc
dec
inc
inc
jns
add
fwait
adc
jge
(bad)
xor
or
cli
ss
jae
dec
xchg
out
jge
sub
out
mov
mov
xchg
and
pop
ret
or
iret
bound
daa
fstp
add
(bad)
icebp
(bad)
pop
cmp
add
idiv
sahf
stc
push
mov
add
jl
movs
je
les
scas
les
movs
test
int
push
icebp
jecxz
mov
wrmsr
jg
push
xchg
jns
gs
ja
sbb
or
adc
push
test
rcl
push
rcr
lods
ret
enter
pop
retf
push
dec
fisub
add
es
xchg
jmp
test
inc
push
lahf
mov
dec
xchg
and
or
and
retf
cdq
loopne
push
repnz
int3
outs
aad
sti
dec
xchg
cmps
scas
sub
dec
es
mov
dec
rdpmc
in
out
sbb
and
push
sub
jecxz
pop
cdq
shr
pop
push
test
push
ins
cld
aam
pop
je
jmp
stc
push
cmp
ds
jmp
inc
jns
adc
pop
mov
sub
cmp
retf
pop
mov
lds
sub
push
movs
dec
mov
cdq
stos
dec
inc
add
inc
lods
shl
pop
lods
add
div
inc
sub
fs
clc
jno
popf
fidiv
mov
fdivr
push
mov
add
jp
sbb
jl
xor
out
(bad)
adc
jp
sbb
out
lods
xor
mov
or
mov
xor
push
cdq
call
mov
les
sub
mov
add
pop
popa
inc
mov
sub
repz
add
imul
vmovshdup
adc
jmp
(bad)
jl
fsubrp
jb
xchg
xor
mov
sub
add
test
inc
sub
mov
fmul
inc
jmp
sar
out
sti
sub
nop
shl
(bad)
add
popf
adc
add
mov
xchg
mov
push
or
into
fist
shl
(bad)
and
cmp
push
jne
add
or
test
mov
(bad)
sbb
push
jp
dec
sub
lds
push
repnz
mov
and
dec
mov
(bad)
fwait
stc
test
jmp
adc
jne
mov
jno
cmp
and
leave
inc
add
iret
jne
out
loopne
mov
ins
sub
mov
dec
sbb
popa
retf
add
inc
loopne
mov
or
add
and
call
loope
mov
(bad)
jmp
or
cmp
xchg
mov
pop
add
dec
and
add
pop
dec
popf
aam
dec
and
imul
xchg
repz
in
aaa
and
mov
pop
cmp
sbb
push
pop
dec
test
lods
cmp
push
cmps
(bad)
popa
jae
push
or
xchg
ds
loope
loopne
rol
xchg
xor
add
push
sub
cld
lahf
js
cmp
fwait
lock
mov
fs
rol
leave
ins
out
mov
jne
xchg
aaa
mov
cld
movs
repnz
mov
fmul
repnz
adc
imul
in
dec
test
pop
dec
ror
(bad)
into
scas
mov
jo
jb
leave
retf
jmp
pusha
fcmovu
imul
mov
mov
push
cmp
xchg
xor
mov
leave
cwde
fimul
rcl
sub
xor
pop
jns
dec
adc
push
xor
jno
sub
fs
pop
mov
fidiv
shr
jb
and
mov
pop
scas
shl
shr
mov
stos
das
dec
sub
into
in
xor
push
mov
cmc
cmp
xchg
std
inc
mov
push
jns
push
cwde
jmp
pop
call
adc
outs
push
cmp
sti
cmp
mov
repz
xlat
jae
xchg
push
cmp
jmp
ds
cli
add
ss
mov
imul
mov
push
out
jmp
sti
dec
cmp
(bad)
lock
mov
mov
mov
adc
mov
inc
or
and
lods
mov
sub
sbb
sub
pop
sbb
repnz
cdq
out
and
pop
xchg
push
js
inc
fdivr
and
inc
add
fucomip
repnz
in
push
lds
ja
inc
mov
fdiv
lock
xor
adc
inc
iret
in
int3
ret
push
or
mov
xor
test
cld
jle
and
test
mov
(bad)
mov
add
xor
lods
inc
data16
(bad)
or
pop
ins
cmp
inc
out
loopne
and
dec
push
adc
pop
sbb
jb
mov
mov
das
push
or
call
xchg
imul
xor
and
inc
cmp
ret
adc
xor
leave
(bad)
call
fmul
in
dec
mov
(bad)
mov
popf
cmp
cwde
rol
lahf
movs
call
fcmovb
add
sub
mov
mov
and
in
cmp
stc
and
test
jp
ins
inc
int
cmp
les
sar
out
shl
lods
mov
jne
cld
stos
xchg
addr16
jbe
call
cmp
dec
les
xchg
pop
push
inc
fisub
fst
sub
add
cmc
cmp
jbe
pusha
add
sub
dec
or
push
nop
xlat
pop
mov
mov
xchg
sbb
std
adc
inc
imul
cmp
xor
sar
dec
push
outs
sub
aam
aam
aam
sub
jno
sub
cmp
sub
inc
or
nop
pop
push
cmps
mov
and
sub
in
(bad)
pop
xor
xchg
pop
mov
repz
sbb
int3
push
push
out
dec
mov
sub
test
iret
test
xor
push
fnstcw
or
mov
add
cs
pop
push
pop
(bad)
into
xor
call
push
or
imul
sbb
mov
xor
dec
jno
and
cmp
sub
jmp
dec
mov
mov
lods
dec
dec
into
popf
mov
cmp
aad
cmp
ins
(bad)
jmp
or
lods
(bad)
pop
fmul
aas
xchg
int
sbb
(bad)
es
daa
cmc
(bad)
fdivp
sbb
pop
cmps
stos
sahf
mov
in
add
jns
adc
aas
inc
cmp
jge
sub
cmp
leave
pop
movs
mov
push
mul
cmp
addr16
(bad)
sub
add
cmp
push
ret
mov
push
mov
hlt
addr16
xor
es
inc
lods
lods
cmp
xor
iret
mov
stos
and
dec
je
add
adc
and
sar
fld
(bad)
mov
mov
in
xchg
in
add
aas
test
(bad)
dec
test
(bad)
leave
jnp
lea
fidiv
fxch
xor
fistp
sbb
addr16
dec
jge
cli
popa
xor
(bad)
nop
fldcw
and
pop
in
ja
xchg
or
mov
mov
dec
adc
xor
test
call
xor
push
out
les
test
lods
jmp
pop
(bad)
cmp
jge
sub
mov
mov
mov
popa
jecxz
jp
xor
retf
jns
outs
cdq
loope
ins
in
loopne
outs
dec
pop
inc
fidivr
xchg
and
cmp
push
scas
mov
push
cmc
add
sbb
xchg
xchg
ret
add
inc
jns
movs
aam
sbb
and
or
(bad)
stos
or
fmul
cmps
lds
or
iret
iret
stc
pusha
clc
pusha
imul
push
cmp
(bad)
and
xchg
mov
dec
sbb
cmps
movs
fidivr
shr
and
mov
or
cli
ja
lea
mov
mov
push
adc
retf
adc
fist
dec
pop
das
jb
xor
pop
repnz
dec
pop
mov
xor
or
pop
add
fucom
cmp
mov
pusha
add
fisttp
dec
sub
jb
addr16
loop
repz
jge
cmp
gs
fcomp
and
movs
popf
inc
mov
iret
or
and
(bad)
outs
scas
fbld
movs
jmp
dec
test
adc
sti
or
loop
out
imul
adc
push
(bad)
mov
add
enter
ins
mov
adc
mov
cmp
movs
(bad)
cwde
ss
data16
xchg
jb
rol
jmp
inc
push
out
jbe
(bad)
jmp
xchg
inc
in
in
xchg
mov
in
hlt
ds
xchg
and
(bad)
in
mov
and
mov
test
jno
mov
sbb
mov
pop
mov
enter
xchg
mov
or
(bad)
loop
loopne
and
add
push
dec
sub
(bad)
push
mov
addr16
retf
daa
sub
cmp
or
mov
mov
and
push
fild
outs
div
aad
cmc
sbb
shr
mov
mov
mov
ds
pop
inc
popf
(bad)
fcomi
fistp
mov
test
test
jle
add
inc
imul
clc
dec
rol
pusha
or
in
or
addr16
fcom
and
outs
sbb
xchg
(bad)
ins
retf
push
fild
pop
pop
pop
out
neg
mov
aam
popa
mov
lods
inc
je
push
cmp
int3
rcl
sub
pop
setae
and
sbb
pop
jle
pop
adc
daa
inc
or
out
add
cmps
ins
cmp
js
aaa
mov
mov
jmp
mov
pop
xchg
dec
iret
aam
sub
jo
daa
inc
xchg
adc
pusha
int3
adc
out
sbb
dec
xchg
(bad)
push
add
aam
inc
and
adc
jecxz
iret
out
movs
pop
out
or
sub
mov
fsub
bswap
cs
mov
push
imul
mov
sbb
cmc
xchg
jno
(bad)
mov
sar
push
mov
xchg
fisttp
fistp
or
push
lock
push
mov
mov
jl
(bad)
pop
cwde
jne
jo
pop
mov
or
scas
jmp
mov
push
scas
leave
add
mov
ror
cmp
mov
sub
adc
mov
inc
lahf
push
pusha
jmp
dec
shl
lds
mov
ins
pop
pop
cdq
pop
enter
scas
cdq
add
jge
call
addr16
jbe
and
adc
fbstp
xlat
xchg
ds
add
lods
imul
jbe
clc
xor
sti
pop
jb
mov
mov
out
inc
mov
pushf
sub
push
cld
bound
pop
mov
jne
push
ins
mov
shl
jecxz
or
or
add
xchg
rol
cmp
retf
dec
push
fwait
sbb
jno
je
xchg
mov
jns
repz
mov
not
inc
jle
jl
xor
cmp
pop
mov
and
mov
push
jbe
(bad)
loop
pop
inc
xlat
(bad)
push
jge
or
push
xchg
dec
cmp
add
retf
lods
call
stos
jge
jp
test
jmp
mov
xchg
add
in
mov
arpl
sbb
out
cmc
retf
cld
inc
mov
aad
push
ret
lds
dec
adc
aaa
sbb
ror
shl
mov
inc
dec
out
mov
jne
sahf
shl
mov
xchg
sub
inc
movs
xchg
cmp
pop
out
mov
daa
jmp
sub
lsl
mov
retf
cmps
enter
jne
sub
outs
icebp
pslld
addr16
adc
shr
cmovne
add
test
data16
jp
sbb
inc
ins
pushf
hlt
xchg
sub
cwde
out
sbb
outs
retf
mov
gs
mov
int3
mov
xor
nop
in
retf
inc
and
mov
mov
jp
mov
and
cwde
lea
pop
or
jle
ret
or
cdq
mov
in
cmps
dec
dec
out
lods
loope
(bad)
retf
mov
loop
mov
gs
or
and
repnz
(bad)
push
test
out
(bad)
sbb
lock
in
aaa
not
stos
dec
mov
pshufw
sti
push
add
pop
fs
ret
sbb
and
test
je
sbb
pop
push
adc
cmp
adc
mov
ret
mov
fld
inc
fnstcw
jnp
(bad)
out
sar
pop
jle
inc
into
xor
adc
(bad)
mov
mov
sbb
ins
adc
sub
mov
ret
sbb
test
pop
aas
stos
jns
mov
imul
call
or
ficom
call
mov
fidiv
or
popa
add
dec
or
int3
inc
out
sub
and
rcl
jbe
out
daa
sub
mov
sahf
mov
mov
test
mov
jl
adc
in
pop
call
arpl
cmp
fist
dec
or
xchg
into
push
adc
xor
rcr
xchg
(bad)
loop
js
adc
push
std
or
pop
inc
out
jl
mov
mov
scas
sbb
repnz
ins
jl
mov
xor
jle
mov
inc
mov
or
push
mov
pop
repz
sbb
call
idiv
popf
add
in
jb
pop
and
add
mov
repnz
data16
xor
xchg
outs
(bad)
bound
xor
mov
mov
jecxz
(bad)
or
sbb
aam
in
data16
mov
mov
mov
jne
push
mov
cwde
or
std
xor
mov
(bad)
cs
or
fmul
stos
fucom
gs
adc
push
sub
pop
iret
sub
sub
nop
lahf
out
retf
sub
push
fld
clc
add
push
je
retf
pop
repnz
sub
out
and
call
mov
daa
mov
push
mov
pop
stc
(bad)
push
lds
mov
fs
call
enter
add
in
push
jg
rol
ret
add
push
sub
icebp
cmp
xchg
cdq
scas
push
outs
xchg
sub
cmp
adc
inc
mov
repz
iret
cmc
jno
ror
pop
cmps
inc
dec
and
pmullw
pop
daa
push
inc
inc
out
push
cmc
xchg
mov
int3
mov
test
fnsave
(bad)
call
or
fstp
cmp
dec
loopne
sbb
cmp
aam
or
daa
ja
mov
inc
icebp
fdiv
cmp
xchg
aas
cmp
add
and
jbe
mov
sahf
shl
je
jo
adc
lods
imul
je
bound
add
inc
gs
mov
cmp
(bad)
out
test
jmp
(bad)
mov
cmp
ret
adc
mov
(bad)
jmp
mov
mov
repz
pushf
dec
in
call
aas
dec
push
(bad)
mov
pop
xchg
popa
add
sub
adc
popa
pop
or
mov
jo
fcmovne
(bad)
push
xchg
mov
(bad)
cmp
adc
mov
and
push
js
aad
scas
(bad)
push
sub
mov
mov
int3
add
rcl
xchg
les
add
dec
mov
and
cmp
mov
gs
inc
dec
pop
lahf
(bad)
mov
stos
cdq
sub
jo
sbb
icebp
jae
cmc
jbe
mov
imul
xor
cmp
repnz
(bad)
push
push
dec
cs
mov
daa
push
adc
sbb
repz
jae
cld
iret
add
(bad)
cwde
movs
cmps
aad
in
(bad)
ja
mov
ins
fwait
add
xchg
pushf
lds
push
sub
ds
cmp
push
sti
mov
push
sbb
pop
ja
les
mov
in
cld
mov
outs
cmps
pop
and
(bad)
push
push
mov
outs
js
out
(bad)
das
sbb
outs
inc
push
and
shl
gs
mov
aas
push
rol
or
pop
add
not
retf
rol
jb
push
cmp
or
add
xor
sahf
jg
fs
add
aad
sahf
sti
shl
sbb
jmp
mov
add
movs
ins
adc
xor
xlat
ds
mov
mov
(bad)
dec
cmps
js
add
in
fdiv
xor
sub
outs
push
mov
mov
inc
xchg
imul
jmp
mov
pop
mov
or
mov
nop
xor
js
xchg
in
pop
int3
push
xchg
lea
(bad)
pop
pop
repnz
sbb
fcmovb
stos
or
(bad)
jle
enter
xchg
adc
clc
push
lea
shl
scas
(bad)
data16
rcl
push
adc
and
hlt
or
add
mov
outs
addr16
fistp
sbb
data16
cmp
rol
clc
sbb
mov
add
inc
outs
xor
xchg
xchg
mov
add
sbb
adc
dec
call
retf
cld
sub
push
dec
(bad)
mov
stos
inc
dec
sbb
sbb
pop
das
mov
shr
aad
ret
add
pop
shl
add
dec
inc
and
aad
nop
(bad)
call
xlat
jne
jmp
ret
test
movs
pop
clc
sbb
out
cmps
cwde
ins
ficom
or
adc
inc
push
aas
xor
sub
inc
stos
dec
and
xor
in
mov
gs
(bad)
mov
mov
sti
ins
push
mov
jl
or
cmp
push
inc
test
out
push
fmul
pushf
push
fist
cmp
sbb
cmp
cli
cwde
pop
iret
push
jp
jno
mov
dec
into
sahf
(bad)
push
fld
xchg
sbb
xchg
mov
(bad)
out
je
das
(bad)
push
and
lods
fbld
push
mov
pop
cmc
adc
sbb
mov
loop
into
imul
xlat
adc
sbb
sub
push
sub
cli
pop
xchg
outs
cwde
cmp
ss
or
test
out
out
fisub
pop
mov
sub
dec
add
xchg
inc
sub
xor
xchg
loop
adc
adc
or
(bad)
mov
xor
jmp
cmp
lahf
push
test
(bad)
push
xchg
lahf
inc
jle
lahf
jecxz
dec
(bad)
mov
and
pop
mov
pop
mov
push
(bad)
adc
pop
test
mov
cmps
xchg
retf
push
and
lods
cmps
mov
add
adc
in
xor
xor
jno
mov
pop
inc
idiv
inc
jno
push
push
add
cmps
mov
call
mov
sbb
fbstp
jbe
sar
sub
mov
mov
mov
inc
mov
in
imul
lahf
dec
or
std
movs
ss
sub
add
retf
mov
dec
mov
pop
mov
cmps
outs
mov
int
in
inc
xchg
or
retf
lea
or
push
leave
jo
out
lea
push
je
sbb
sub
aam
in
jmp
mov
sbb
scas
mov
xor
sub
leave
or
pushf
retf
push
arpl
icebp
das
sti
stc
jle
cli
shr
(bad)
int3
adc
cmps
dec
inc
mov
fyl2x
aaa
cmc
mov
adc
cmp
imul
and
stc
cmps
out
and
arpl
cmp
daa
fbstp
les
and
dec
mov
pushf
adc
push
pushf
movs
cmp
mov
fwait
mov
and
popa
inc
and
xchg
fs
jne
xchg
sahf
(bad)
loopne
mov
aad
push
cdq
xchg
adc
dec
jg
lds
mov
mov
dec
cwde
mov
push
mov
jae
xchg
jmp
dec
cmp
mov
push
sub
clc
sbb
sub
xor
mov
retf
or
lods
nop
fcom
js
add
push
(bad)
and
test
(bad)
sahf
sti
pop
mov
and
push
out
jge
add
sub
xchg
xor
sbb
shl
and
fnsetpm(287
dec
mov
and
or
popf
or
std
pusha
mov
sub
popa
push
cmp
adc
adc
push
mov
mov
int
jle
in
aam
xchg
xor
out
nop
arpl
stos
inc
arpl
push
scas
jp
push
fcom
outs
in
fist
mov
dec
dec
and
push
pop
fwait
add
sbb
pop
out
bound
fbstp
xchg
mov
mov
cmp
sub
movs
aad
dec
or
xchg
dec
fidivr
jno
sub
cdq
sbb
ins
sbb
pop
ficom
mov
clc
sbb
push
mov
pop
(bad)
popa
ret
cli
rcr
push
xor
and
push
mov
pop
cmp
ja
pop
fiadd
inc
cli
adc
(bad)
and
dec
push
push
push
dec
mov
pop
aam
fwait
sbb
sar
stos
mov
fmul
inc
push
outs
addr16
scas
adc
addr16
sar
jbe
mov
sub
ror
and
xor
in
sbb
jo
jmp
call
pusha
and
iret
jg
in
and
sahf
adc
and
cld
sub
movs
add
inc
pop
xchg
ds
sbb
leave
mov
(bad)
mov
iret
(bad)
gs
aaa
push
push
mov
sbb
xchg
pop
mov
cmps
mov
inc
dec
add
fisub
mov
dec
mov
add
and
test
retf
cld
scas
mov
sbb
sbb
push
fs
call
push
push
mov
in
and
cmc
movs
inc
ja
mov
xor
adc
(bad)
fmul
repnz
aad
ss
xor
sub
push
fs
in
adc
test
adc
inc
sub
fimul
movs
ins
jge
mov
mov
xor
ret
and
xchg
xor
inc
sbb
call
jp
idiv
pop
mov
push
xchg
scas
push
aaa
cmp
int
and
push
mov
xchg
ret
inc
nop
or
xor
ins
imul
call
push
cmp
hlt
xchg
mov
outs
pop
mov
cmp
mov
mov
cmp
mov
cdq
xchg
les
xor
jne
fcom
dec
add
sub
icebp
mov
(bad)
cs
clc
adc
(bad)
mov
mov
out
cmp
cmc
mov
add
or
mov
ins
dec
fidiv
jo
inc
push
xor
sub
cmp
dec
scas
into
sub
pop
fstp
push
sbb
movs
enter
stos
test
jne
stos
dec
fidivr
lds
push
fldz
cmp
rcl
jb
js
es
jno
pop
push
sbb
sahf
jne
pop
(bad)
icebp
ins
push
and
hlt
les
adc
pop
fstp
(bad)
xchg
jle
mov
add
mov
fdivr
mov
std
sbb
ret
(bad)
push
push
lods
sbb
dec
pop
ins
sub
movs
and
pop
jo
dec
cli
lock
mov
cmp
pushf
or
xchg
or
test
pop
add
(bad)
sub
sbb
sub
lock
pop
adc
pop
stc
mov
pop
adc
cs
stc
test
mov
xor
jbe
push
ffree
jg
into
or
ds
out
loop
mov
dec
daa
push
aaa
pop
cmp
nop
jns
sbb
mov
add
xlat
in
xchg
std
xor
xchg
jg
jb
repnz
fdiv
das
mov
stos
out
dec
or
xor
add
icebp
sub
ja
push
pop
dec
jo
aaa
aaa
jg
cmp
das
adc
push
push
cwde
pop
mov
out
adc
pop
lods
aaa
jp
mov
hlt
repnz
jns
pop
dec
xchg
enter
pop
dec
aas
(bad)
pop
fwait
and
add
(bad)
jl
pop
loopne
mov
mov
and
popf
mov
cmps
in
cdq
cmp
xchg
jae
loopne
dec
outs
lds
gs
push
pop
(bad)
jae
xor
jecxz
sub
xchg
fisub
sahf
pop
sbb
dec
mov
sub
clc
jo
movs
and
imul
sub
pop
xchg
aad
and
icebp
nop
mov
fwait
sbb
push
jne
sub
aas
pop
mov
cmp
dec
not
jg
mov
cmps
adc
aad
or
and
neg
fwait
shl
loop
pop
shr
sub
popf
stos
add
mov
inc
xchg
hlt
inc
out
dec
push
imul
outs
jl
xor
ret
mov
and
jne
jae
push
stos
das
ret
adc
fwait
mov
add
inc
push
jp
fstp
xor
dec
rcr
popf
je
pop
retf
ins
les
xchg
add
and
push
repz
dec
test
pop
cdq
jmp
retf
mov
leave
std
int
and
aam
push
xchg
or
repz
jp
test
gs
sahf
aaa
out
cmp
jae
iret
out
icebp
push
cmp
xchg
ret
jns
lahf
cmp
jns
inc
add
inc
mov
cmps
push
inc
cld
add
xchg
cld
(bad)
xor
pop
pusha
out
ficom
pop
pop
in
add
out
xchg
call
dec
lods
(bad)
pushf
xor
mov
inc
test
enter
mov
repz
and
cmc
push
(bad)
lahf
ins
jle
scas
idiv
jae
fcomp
sbb
daa
fsubr
sbb
inc
retf
and
xchg
fucomip
stc
sub
jmp
outs
xor
mov
loope
xchg
mov
pop
fistp
or
cmps
fucomi
int3
mov
push
pop
mov
ja
call
ja
fldenv
mov
aas
retf
mov
xchg
pop
adc
into
retf
or
add
cmp
fwait
jno
add
pop
add
cmps
sbb
sar
pusha
sbb
retf
inc
outs
xchg
add
jecxz
mov
xor
pop
jle
ret
(bad)
push
nop
add
push
pop
jb
mov
std
xchg
mov
inc
sbb
inc
adc
push
out
test
add
cld
(bad)
xchg
fnsave
popa
xchg
mov
rcr
repz
mov
leave
das
xor
sbb
sub
lock
lock
xchg
(bad)
cmp
or
fisttp
lds
hlt
(bad)
pop
lahf
sti
rcl
and
or
inc
xlat
test
hlt
sub
xor
xchg
stc
ror
mov
xchg
data16
call
mov
loopne
mov
scas
pop
sbb
push
sub
cwde
fadd
pop
push
push
jl
inc
xlat
pop
leave
mov
js
lods
jno
test
cmc
pop
push
add
fadd
aam
lock
popa
mov
ficom
inc
dec
jae
lea
repnz
icebp
pop
data16
into
test
add
xchg
add
call
mov
cmp
xchg
(bad)
sbb
mov
xchg
in
sbb
cdq
das
imul
popf
data16
fisubr
cs
mov
mov
jns
(bad)
into
jmp
sbb
mov
call
js
js
call
retf
stos
dec
leave
add
or
imul
pop
add
xchg
jl
(bad)
in
fsubp
mov
clc
aas
call
mov
xlat
ins
fs
adc
jb
or
add
cs
xor
leave
jns
aaa
aam
dec
mov
sti
add
mov
mov
hlt
daa
push
clc
rcr
sbb
jno
jnp
xor
retf
sub
fsubrp
xchg
cmps
imul
popa
push
loope
sbb
setns
retf
dec
in
push
add
shr
push
pop
or
cmp
daa
mov
(bad)
mov
push
dec
cmp
add
arpl
xchg
fimul
inc
xchg
cld
ins
(bad)
lods
dec
stc
pop
out
xchg
push
sub
inc
ins
das
fnstcw
sbb
jnp
aad
out
call
or
retf
jns
mov
dec
inc
sbb
fld
mov
and
movs
mov
out
out
cmp
or
cmp
mov
sahf
int3
in
sub
in
xor
in
mov
dec
ss
add
fs
fdivr
mov
shr
dec
ficomp
mov
xor
and
xor
jle
sub
jle
sahf
and
leave
add
adc
sbb
cwde
pop
lds
cli
jl
push
sub
sbb
loopne
cmc
imul
fsubr
mov
adc
retf
cmp
add
mov
push
and
fcomp
(bad)
daa
imul
(bad)
arpl
mov
jne
jns
mov
mov
xor
js
cmc
xchg
into
adc
fcom
xor
je
pop
shr
cmp
pop
retf
sub
scas
adc
sbb
xchg
add
xchg
jge
mov
adc
sahf
in
mov
in
inc
cwde
int3
ficomp
and
push
cmp
test
or
bound
mov
push
mov
mov
les
fist
xchg
or
hlt
aas
jle
push
cs
cmp
in
in
mov
xchg
lahf
scas
jno
push
push
add
cmp
push
add
(bad)
sbb
pusha
push
std
sub
xchg
mov
repnz
enter
ret
out
pop
and
pop
movs
mov
xor
adc
aad
sar
stos
mov
fwait
cmp
or
pushf
inc
aad
sbb
mov
mov
outs
je
or
sahf
loopne
push
ins
mov
pop
(bad)
js
push
push
push
mov
dec
jl
test
adc
or
sti
test
aam
add
or
idiv
jl
adc
rol
lahf
jo
mov
xor
cmp
sbb
(bad)
loop
and
fdivr
iret
ds
dec
arpl
sub
loope
mov
test
push
push
mov
inc
lds
lea
aaa
mov
adc
mov
mov
cwde
pop
mov
out
retf
cmps
popa
mov
test
inc
in
mov
pop
cmp
sub
adc
add
sub
sti
lods
jp
sub
pop
xchg
adc
lea
jno
int3
inc
gs
push
inc
cmps
fild
dec
addr16
mov
ret
sub
dec
or
repz
inc
fisttp
push
mov
aaa
gs
mov
jl
xchg
inc
push
cwde
loop
icebp
outs
sub
pop
mov
(bad)
ficomp
out
data16
cmp
ficom
nop
into
pop
out
and
pushf
mov
inc
fisubr
es
retf
pushf
not
rcl
jl
mov
mov
(bad)
push
jp
inc
aaa
xchg
mov
aas
inc
or
(bad)
push
pop
cmp
sub
add
mov
iret
mov
jae
popf
cmp
and
or
call
inc
inc
lods
mov
pop
retf
pop
sbb
pusha
push
dec
enter
sub
pop
add
stos
hlt
cmp
or
sbb
dec
pop
repnz
mov
fs
push
push
cmps
push
outs
ror
enter
lods
mov
jecxz
cmp
jl
out
push
pop
jae
mov
jmp
mov
and
push
repnz
mov
cwde
cmp
daa
aas
test
outs
xor
pop
and
adc
popf
mov
mov
and
fwait
dec
outs
ret
retf
pushf
adc
sahf
stos
pop
mov
jmp
cmp
ret
inc
movs
jg
or
jge
inc
shl
inc
std
cld
pop
push
inc
movs
mov
std
mov
nop
and
mov
call
xor
xchg
arpl
fisub
sub
sahf
es
or
les
cmp
jnp
mov
rcr
jge
mov
loop
mov
das
test
dec
outs
push
adc
sbb
enter
call
imul
test
pop
inc
sbb
(bad)
std
(bad)
fcom
push
sar
loop
mov
lods
sub
mov
jmp
pop
pop
or
stos
fcomp
(bad)
mov
cmp
clc
pop
cld
inc
sub
stos
fwait
cmp
(bad)
fisttp
pop
xchg
mov
and
in
or
jp
into
add
jmp
add
lahf
and
fisttp
mov
mov
mov
sbb
adc
lahf
call
mov
not
sbb
ins
adc
pop
sbb
mov
add
add
cmp
dec
mov
cmps
xchg
repnz
shl
aad
mov
lea
sbb
mov
xchg
inc
lock
xchg
(bad)
lods
xor
pop
adc
sub
adc
sub
sub
dec
pop
ror
jmp
push
dec
inc
mov
shl
(bad)
adc
sahf
aad
fwait
push
mov
sar
cwde
xchg
inc
imul
jae
mov
adc
test
xor
jp
ins
inc
pop
inc
push
scas
mov
pop
dec
pop
gs
out
cmp
push
and
int3
dec
ret
jae
call
sbb
or
iret
mov
add
popf
jne
arpl
call
mov
out
cmp
pop
fiadd
sub
jmp
pop
mov
push
test
push
addr16
out
cmp
adc
loopne
adc
and
aas
mov
push
pop
pusha
xor
sub
push
pop
cmp
nop
pop
mov
inc
scas
popa
mov
and
sub
dec
adc
dec
cld
enter
loopne
xchg
(bad)
scas
sub
mov
xchg
enter
and
xor
loopne
mov
aas
or
dec
push
call
xchg
xor
jbe
pusha
cwde
test
scas
(bad)
jecxz
cmp
test
jmp
inc
and
mov
ror
cmp
ins
hlt
movs
cld
pop
sbb
mov
and
out
les
retf
sub
icebp
mov
btc
mov
shr
in
aad
push
or
dec
in
arpl
icebp
fistp
lods
imul
jnp
ret
mov
mov
test
jnp
sbb
mov
sbb
ja
xchg
out
and
imul
mov
repnz
mov
or
cld
jmp
loop
div
mov
movs
in
inc
pop
mov
ins
rcl
add
nop
mov
pop
into
loope
mov
push
js
retf
mov
sub
sub
jecxz
or
aam
sbb
cdq
in
lea
xchg
and
jae
rol
(bad)
aam
sub
sbb
shl
sbb
mov
or
stos
jnp
sub
push
pop
cli
mov
and
les
adc
pop
pop
iret
movs
xchg
push
in
call
popf
fimul
or
ja
xlat
pop
pop
pusha
cwde
sub
(bad)
xor
and
in
cmp
(bad)
dec
ins
xor
add
fiadd
mov
mov
popa
sar
inc
loope
les
out
(bad)
mov
sub
stos
retf
adc
dec
ret
sub
stc
cmp
clc
push
movs
inc
xchg
ret
mov
dec
or
imul
xor
inc
mov
pusha
jb
imul
sar
in
pop
daa
fcom
mov
les
or
jle
push
jno
push
fbld
clc
rol
dec
int3
xor
pop
add
xchg
mov
outs
dec
mov
dec
xchg
add
scas
sbb
xlat
ror
jmp
iret
(bad)
clc
jne
and
ins
or
lods
add
or
js
call
shl
repnz
push
mov
bound
iret
aas
(bad)
sub
jae
push
hlt
ror
dec
bound
xchg
retf
xor
or
sbb
cld
ror
xchg
xor
jp
mov
mov
leave
ins
inc
hlt
in
add
ror
push
dec
test
add
add
or
cli
int3
and
ss
push
and
dec
add
mov
sahf
mov
push
inc
and
ret
pop
sub
je
data16
xchg
jo
ja
inc
pushf
leave
ret
out
push
clc
xlat
inc
fist
jno
movs
scas
mov
or
mov
stos
dec
jl
out
or
xor
add
xchg
inc
xor
or
int3
rol
jne
mov
pop
fbld
sub
mov
mov
leave
inc
int3
push
xor
in
pop
aam
fcomp
loopne
mov
pop
ficomp
jmp
mov
and
gs
mov
in
sub
add
inc
inc
aas
inc
(bad)
add
das
dec
dec
cld
mov
pusha
and
xchg
sbb
out
jge
(bad)
mov
add
idiv
out
(bad)
cmp
pop
xor
shl
(bad)
nop
loop
in
add
in
imul
sbb
sti
mov
push
movs
adc
mov
mov
retf
push
in
(bad)
sub
sub
leave
push
mov
jl
(bad)
adc
xchg
pop
sub
jmp
mov
cmc
xchg
inc
fisttp
pusha
mov
sbb
mov
or
rcl
dec
mov
in
push
pop
lods
push
out
lds
add
adc
xor
ret
pop
enter
test
fstp
test
imul
stos
or
xor
fs
inc
(bad)
xchg
(bad)
out
mov
pop
mov
in
scas
xchg
xchg
int3
pusha
pop
push
lahf
(bad)
movs
push
sbb
icebp
pop
dec
popf
dec
loop
push
xor
scas
scas
xlat
ss
cmps
repz
retf
pop
push
repnz
xor
in
mov
push
cmp
or
xchg
adc
jg
imul
mov
ret
stc
mov
xor
mov
or
sbb
add
xchg
cmp
sub
stc
push
int
into
jnp
(bad)
ins
push
or
inc
sub
adc
xchg
in
rcr
inc
mul
es
inc
sahf
fimul
mov
movs
mov
mov
and
arpl
(bad)
fst
and
test
add
movs
push
loop
pop
cmc
mov
sbb
cmc
sub
mov
jmp
dec
add
jmp
punpckhwd
cwde
outs
cs
ret
int3
daa
jns
pop
stc
pop
sub
cmps
cli
scas
inc
loop
mov
or
xor
push
sbb
add
fwait
mov
pop
xor
jg
jnp
inc
mov
dec
inc
xchg
mov
mov
xchg
pop
sbb
jae
and
outs
jmp
jg
ret
adc
push
pop
mov
setnp
add
or
lods
fnsave
out
ss
dec
mov
or
inc
hlt
jnp
add
inc
cwde
push
icebp
mov
add
xor
out
jns
mov
cmc
pop
mov
aas
dec
pusha
mov
mov
retf
ds
mov
adc
pop
push
jno
push
aad
jecxz
cwde
mov
jnp
inc
sahf
xchg
dec
dec
and
lds
aas
adc
sub
lods
ret
iret
sbb
pop
mov
and
out
test
shl
cmp
cmp
ret
scas
jmp
int3
test
jbe
jb
es
fiadd
push
jno
das
sbb
xor
fsubr
fcomp
adc
push
mov
adc
repz
daa
gs
cmp
stc
sbb
mov
cwde
scas
in
mov
out
dec
mov
mov
jp
in
push
xchg
inc
jns
in
mov
call
xor
retf
jno
sbb
or
cmpxchg
sti
sub
(bad)
add
jae
mov
jg
jg
stos
out
cmc
(bad)
dec
xchg
(bad)
add
push
mov
add
jmp
pmaddwd
xchg
push
repz
lods
jbe
mov
cmps
adc
mov
loopne
xor
mov
mov
out
add
icebp
or
or
cdq
jo
push
mov
into
pop
xchg
jmp
scas
inc
pop
push
not
mov
sahf
ss
xchg
test
aaa
fs
repnz
dec
mov
data16
cmp
push
and
(bad)
mov
dec
enter
cld
mov
mov
inc
out
out
push
mov
int3
mov
cmp
cmp
ficom
(bad)
mov
ror
dec
push
ret
outs
fs
cld
shl
(bad)
in
cdq
and
stos
loope
test
mov
and
(bad)
(bad)
mov
add
push
sub
xchg
mov
mov
mov
adc
and
retf
dec
jecxz
dec
shl
imul
xchg
push
daa
or
arpl
fsub
cdq
jno
push
scas
push
jle
sti
xchg
cmp
push
and
out
jge
pop
jle
sti
sbb
push
sahf
xlat
fimul
hlt
jmp
fadd
xchg
pop
adc
adc
vpsadbw
ss
xchg
push
bound
add
stos
push
dec
dec
mov
fiadd
dec
xlat
fnsave
scas
mov
adc
mov
sub
xchg
scas
sbb
arpl
retf
cmp
int3
push
sub
fs
clc
or
into
lock
arpl
test
lahf
pushf
xchg
jge
(bad)
call
loop
jb
leave
sub
push
test
pop
and
repz
push
icebp
xchg
mov
add
mov
dec
js
mov
sahf
mov
pop
xchg
adc
imul
js
iret
mov
cli
push
iret
call
xor
push
cmps
sub
pop
xlat
cdq
dec
stos
call
dec
push
or
outs
pop
xlat
push
cmp
add
cmp
sub
mov
repz
xor
mov
xor
push
mov
xchg
sub
mov
rol
cmc
test
enter
popa
cmc
push
pop
ins
cmp
mov
shr
scas
mov
mov
dec
lahf
cmps
sub
xor
mov
repz
pop
(bad)
fdiv
clc
mov
in
dec
cmps
xor
adc
inc
sub
je
mov
and
or
jge
pusha
(bad)
mov
(bad)
leave
or
dec
fs
xchg
arpl
cmp
test
push
pop
jne
stos
xlat
push
out
mov
push
inc
daa
inc
fstp
test
shr
call
test
push
into
inc
lock
pop
jno
or
inc
dec
scas
neg
in
inc
xchg
dec
xor
fiadd
mov
mov
mov
or
mov
push
or
or
dec
or
inc
xor
or
pop
jmp
(bad)
gs
div
pushf
leave
adc
fwait
sbb
sub
(bad)
xor
mov
fsubr
adc
movs
sub
ja
das
xchg
and
aaa
cli
xchg
ins
jl
lea
pop
xchg
mov
pop
jne
das
inc
cdq
push
stc
xor
adc
xchg
xor
test
mov
mov
jmp
pop
fstp
and
jne
(bad)
pushf
frndint
inc
and
xchg
and
mov
retf
mov
les
push
adc
sahf
add
repnz
sbb
dec
imul
jns
inc
or
stos
shr
sbb
xor
mov
cmp
sbb
hlt
mov
rcr
add
dec
push
sbb
cmps
cmp
outs
scas
shl
mov
inc
idiv
in
enter
inc
jne
xchg
out
pop
movs
jg
mov
push
out
(bad)
(bad)
adc
jae
xor
(bad)
enter
sub
fcom
jl
hlt
les
cli
mov
jge
out
setno
mov
mov
xor
ficomp
pop
or
xchg
xor
xchg
dec
rcl
adc
jo
inc
not
or
in
sar
inc
push
inc
pop
shl
out
or
lods
jmp
pop
movs
(bad)
dec
push
scas
jg
mov
shr
ficom
dec
mov
inc
mov
sub
or
test
xchg
jmp
add
ins
test
mov
pop
ds
(bad)
dec
dec
dec
test
cdq
cmp
sbb
xchg
cvttps2pi
fisub
out
in
add
cmp
pop
dec
lods
push
ins
adc
cld
dec
push
dec
mov
inc
xchg
sub
add
daa
push
lods
jnp
fldenv
pop
mov
cmp
xor
dec
loopne
repnz
mov
aad
xchg
xor
ss
into
(bad)
fsubrp
mov
mov
cld
cmc
je
xor
cmp
pusha
or
inc
test
lahf
jnp
adc
lock
outs
cmp
je
inc
adc
call
xchg
imul
xchg
repz
push
inc
add
fst
(bad)
fild
test
imul
fidiv
cmp
jle
ftst
add
push
dec
xor
xor
and
mov
(bad)
jle
loop
pop
xor
cli
imul
or
test
push
iret
push
clc
add
clc
leave
cmp
mov
lock
xor
or
cmp
shl
repz
xchg
stc
out
xor
push
fwait
or
imul
xchg
jo
leave
rcr
add
inc
int3
xlat
xlat
enter
mov
xchg
inc
pushf
sub
retf
repnz
adc
xlat
aas
sub
xchg
mov
mov
nop
xchg
push
push
add
jp
je
cmps
or
call
push
or
loope
cmp
dec
push
jg
lods
mov
addr16
repz
dec
outs
arpl
adc
jl
sbb
ins
mov
or
mov
js
ins
inc
adc
retf
or
hlt
sbb
add
retf
cmp
cwde
std
outs
mov
call
xor
add
mov
sub
and
mov
push
into
push
sub
std
sub
sbb
(bad)
mov
bound
pop
mov
mov
ds
mov
lods
and
sti
test
fcomp
ror
lods
(bad)
aam
dec
ret
fstp
inc
ja
loop
xchg
icebp
popa
aam
mov
sbb
pop
inc
int3
leave
mov
je
aam
cmps
xor
lea
xlat
icebp
mov
sub
xchg
add
xor
rcl
fwait
push
out
mov
push
inc
ror
jnp
pop
sbb
sbb
test
push
xchg
mov
ds
push
fmul
xchg
stos
add
adc
jg
push
cld
mov
jmp
jb
test
(bad)
jno
ret
pop
pushf
lds
sar
sbb
ret
ds
dec
lods
mov
xchg
(bad)
out
add
sbb
cmc
or
es
pop
or
outs
pop
sub
add
cmp
aad
stos
jb
es
ins
in
in
mov
add
jmp
stc
fidiv
test
and
or
mov
fist
fstp
dec
push
movs
and
call
loope
sbb
call
inc
fdivr
aaa
and
scas
sub
add
aaa
jnp
xor
mov
mov
arpl
fsubp
mov
adc
ror
add
xchg
out
adc
dec
cmp
mov
add
(bad)
out
loope
fcmove
mov
lods
cs
mov
adc
aam
fwait
(bad)
(bad)
and
addr16
adc
pop
inc
jg
fwait
cld
cwde
(bad)
aad
mov
mov
mov
push
ds
adc
dec
inc
scas
mov
in
mov
mov
add
cvtps2pd
push
adc
loop
popa
mov
jg
add
push
xor
mov
mov
xor
aad
add
sub
dec
push
pop
lock
test
jnp
jns
scas
movs
jge
test
pop
inc
adc
mov
push
popa
cwde
dec
ins
jmp
lahf
cmp
mov
jge
add
or
into
xchg
mov
cmp
sub
test
mov
cld
cdq
pop
xchg
(bad)
(bad)
cmp
je
cmp
cmp
out
fiadd
int3
add
stc
fucomi
ss
sub
mov
mov
ror
pop
clc
inc
mov
cmp
sbb
fmul
jbe
cmp
mov
(bad)
fbld
mov
pop
mov
stos
in
ret
stos
sbb
cli
dec
clc
xchg
push
ret
sub
jg
sbb
mov
xchg
in
mov
and
sahf
scas
gs
sub
loope
mov
(bad)
in
(bad)
xor
nop
mov
inc
imul
xchg
xor
(bad)
xchg
into
sub
cmc
rcl
call
inc
pop
xchg
push
(bad)
cwde
rol
pop
add
and
les
dec
rcr
push
push
call
cmp
add
pop
sbb
jb
sub
(bad)
and
push
and
xchg
repz
push
daa
cmp
je
inc
cmp
mov
pop
cli
ret
add
mov
in
rcl
int
cld
sub
mov
push
ins
adc
cmp
xchg
mov
ror
push
jmp
push
fs
add
sub
pop
push
sub
adc
mov
out
add
push
xor
push
scas
inc
adc
mov
add
fcmovnbe
into
repz
out
retf
enter
movs
stc
or
jmp
out
dec
jns
mov
mov
pushf
popa
sbb
mov
add
in
push
push
js
dec
ja
push
dec
pop
mov
cmp
imul
mov
cmp
adc
lock
sub
int
in
out
imul
stos
les
inc
sar
ins
mov
sub
dec
aam
pushf
iret
dec
out
mov
xor
jle
pop
ins
cmp
mov
nop
imul
mov
inc
mov
or
(bad)
mov
cmp
fild
addr16
sti
inc
out
je
loope
xor
lock
(bad)
movs
jae
jecxz
enter
aam
fwait
cld
icebp
stos
jne
jg
sbb
add
scas
and
push
mov
ss
movs
pop
xor
(bad)
rcr
test
mov
mov
(bad)
mov
cld
pop
sbb
loop
and
push
mov
mov
push
lods
or
ins
or
popf
inc
daa
adc
sub
repnz
push
mov
push
and
push
int
and
or
icebp
cmp
fsincos
shl
and
hlt
cmp
enter
push
or
cmovo
jbe
mov
fcomp
ins
mov
jecxz
out
adc
mov
cs
cmp
dec
push
adc
es
stos
scas
jecxz
mov
xchg
gs
push
sbb
stc
sub
mov
lock
jmp
inc
mov
xchg
fwait
cs
nop
adc
fs
mov
std
push
das
add
out
retf
sub
or
hlt
and
scas
loope
xchg
retf
(bad)
xchg
cmp
fstp
int
xor
enter
and
cmp
nop
cmp
jnp
jp
retf
and
push
or
cmp
xor
jns
sbb
ins
xchg
cmp
cmp
stos
int3
pop
es
xchg
mov
cwde
les
adc
push
jns
out
xor
std
pop
es
adc
test
fcos
push
jns
jmp
lea
jl
(bad)
fbld
or
lahf
(bad)
sbb
in
stc
aam
das
mov
push
adc
outs
adc
pop
in
aad
dec
mov
push
sbb
outs
jo
pushf
inc
jo
push
loopne
ins
xor
sbb
or
jmp
lock
mov
pop
mov
shl
inc
scas
iret
mov
xchg
fisttp
icebp
out
or
rol
(bad)
or
in
das
cdq
pop
pop
pop
sar
xor
inc
inc
(bad)
jg
fbstp
jle
dec
pusha
inc
mov
cld
push
sub
adc
int
fbstp
and
sbb
jno
jo
cmps
dec
rol
inc
retf
jge
inc
push
into
jg
cmp
int3
out
repz
jo
iret
dec
jne
(bad)
sar
dec
sbb
adc
and
test
jbe
xchg
(bad)
dec
mov
stc
jne
xchg
xchg
and
lahf
xchg
adc
lahf
fist
xchg
scas
push
das
stc
push
out
sbb
and
sub
ja
je
push
(bad)
pop
or
in
pop
in
push
repnz
mov
fsubrp
cmp
or
in
sbb
(bad)
xlat
out
mov
add
or
jns
pop
hlt
(bad)
cmp
aas
push
pop
dec
cmps
mov
stos
or
xchg
pop
push
(bad)
or
xor
scas
inc
data16
dec
pop
idiv
mov
or
rol
jecxz
(bad)
inc
add
inc
xrelease
arpl
stc
test
and
popf
jmp
pop
push
pop
cmps
pop
jne
or
xor
sbb
mov
gs
mov
adc
in
shl
pop
outs
arpl
inc
ds
aas
and
adc
int3
test
add
or
mov
(bad)
cmp
fwait
sbb
cmp
pop
xchg
arpl
movs
push
cmp
(bad)
cld
out
idiv
push
iret
pop
xor
(bad)
(bad)
loop
sub
in
sbb
fcomp
push
aas
and
mov
dec
jne
sub
mov
push
cmp
cmps
hlt
mov
pushf
push
retf
cdq
sbb
jns
cmps
fs
pop
mov
mov
dec
and
xor
test
add
stos
and
xchg
push
mov
pop
dec
adc
xchg
fst
sub
cmp
imul
(bad)
mov
and
mov
js
sti
test
pop
call
adc
sahf
stos
push
dec
or
push
sub
xlat
xor
jo
cld
test
or
cli
in
mov
xor
test
ja
enter
aam
aad
xchg
hlt
xor
cmp
jae
adc
push
(bad)
leave
push
push
and
outs
or
xchg
stc
xchg
push
mov
fisubr
test
push
mov
sahf
jnp
icebp
inc
or
mov
repz
jb
sub
inc
bound
ret
cmp
cmp
rcl
or
fmul
stos
push
es
push
push
cwde
fsub
aad
fadd
(bad)
xchg
fstp
lock
xor
sub
inc
dec
dec
in
or
imul
outs
cmp
xchg
sub
ret
outs
push
test
in
rcl
xchg
clc
fsub
push
clc
ret
push
inc
fstp
stos
jle
rcl
sbb
outs
pop
movs
enter
pop
(bad)
dec
es
jo
imul
xor
push
std
push
movs
xchg
cdq
lods
clc
(bad)
lss
lods
mov
mov
mov
pop
mov
mov
outs
ins
enter
jmp
hlt
pop
sahf
sbb
lods
cmps
rcl
ret
sti
out
retf
cmps
adc
jae
and
jmp
sbb
mov
push
mov
cdq
pop
mov
in
inc
or
cmp
addr16
jecxz
cmp
xor
mov
test
pushf
ret
retf
sub
sbb
mov
or
xchg
in
cmp
xor
or
sbb
pop
push
addr16
mov
push
push
inc
jnp
xchg
mov
add
in
jl
cli
pop
mov
icebp
mov
lods
int
ror
jns
test
mov
mov
adc
and
arpl
jp
stos
enter
call
mov
ins
pop
dec
xor
jbe
fisubr
mov
sub
mov
into
mov
repz
mov
inc
adc
inc
sbb
jbe
cli
(bad)
xchg
cmp
dec
or
sahf
mov
jb
call
les
mov
push
pop
mov
xor
xchg
ret
movs
int
jbe
in
push
loop
retf
in
push
and
imul
arpl
jmp
mov
dec
lock
sbb
sub
sbb
add
jbe
adc
int
fnsave
jb
jns
out
or
das
out
test
into
arpl
loope
fstp
in
or
xor
cmp
into
pop
xchg
or
mov
sbb
cmps
xor
(bad)
lahf
sti
dec
in
cmp
js
(bad)
mov
popa
pop
lahf
test
xor
sub
jmp
stc
hlt
sub
clc
and
cmps
int3
adc
ins
loopne
xor
les
loopne
add
inc
cmp
mov
je
mov
xor
out
mov
popf
dec
sahf
cdq
pop
aad
and
dec
jmp
xchg
dec
push
scas
dec
cli
fld
mov
(bad)
push
movs
sti
xor
(bad)
pop
fwait
(bad)
adc
mov
rcr
cld
shl
fst
mov
sbb
jecxz
fidiv
sar
adc
cmc
pop
stc
dec
inc
ins
mov
gs
jns
mov
and
jl
jae
or
repz
in
cld
xchg
daa
jg
mov
cmp
arpl
sub
inc
or
sub
mov
sti
xor
outs
ins
xor
cmps
adc
adc
sub
bound
dec
xchg
aad
cmp
jnp
pop
das
xor
punpcklbw
sub
into
in
xchg
jmp
enter
in
mov
inc
xchg
lahf
sub
test
or
sti
sub
mov
dec
ins
jnp
adc
mov
ret
jecxz
cmps
cli
push
adc
or
jnp
pop
aad
dec
dec
jmp
pop
mov
inc
xchg
pusha
iret
add
ss
fwait
jns
dec
ficomp
ss
dec
hlt
mov
mov
sub
lods
sahf
pusha
js
cmovno
ins
aam
das
sbb
push
pushf
cmp
push
arpl
pop
inc
jmp
cmc
cmps
cs
shl
out
xchg
lahf
loop
imul
mov
aas
mov
push
push
stc
stos
hlt
call
cmp
mov
sbb
popf
sahf
sahf
mov
mov
or
xor
xchg
lock
or
gs
xchg
daa
push
mov
dec
ret
inc
mov
je
add
cmps
jb
cmp
jle
int
xor
sub
cld
sub
in
into
cmps
inc
or
cmp
xor
ret
mov
imul
pop
rcr
jmp
add
fiadd
movs
lea
adc
dec
xchg
sbb
gs
inc
test
outs
xchg
or
loope
stos
in
rcl
cld
sti
loope
pop
dec
das
outs
(bad)
xchg
icebp
push
nop
jb
arpl
mov
ror
movs
xor
xchg
mov
adc
arpl
xchg
inc
or
mov
push
inc
cdq
cmp
add
fcmove
xlat
loope
and
(bad)
xlat
scas
add
mov
jl
mov
loop
or
mov
push
fs
les
add
std
cmp
push
and
sar
rcl
jb
loope
jbe
mov
sar
xor
outs
xlat
shl
dec
mov
xchg
dec
loope
mov
ret
(bad)
push
pusha
or
xchg
sub
jl
cmp
inc
hlt
push
jo
int3
enter
scas
push
ror
sti
das
scas
sub
dec
jno
mov
jmp
scas
jmp
call
mov
xor
sti
mov
lea
dec
movs
add
dec
js
sbb
jp
rcr
rol
jne
or
mov
sbb
cs
xor
dec
(bad)
pop
ret
mov
(bad)
outs
enter
or
mov
adc
xchg
push
outs
sti
cmp
jae
xchg
addr16
imul
mov
mov
push
stos
mov
test
lods
pop
or
and
fldcw
pop
(bad)
in
adc
push
in
retf
sub
mov
jo
out
fcomp
jp
retf
push
xor
jmp
pop
clc
mov
sbb
fnstenv
and
push
fadd
add
mov
jmp
call
inc
ja
or
mov
mov
inc
loopne
sub
fstp
xchg
mov
xchg
sub
popf
sbb
fimul
jae
iret
mov
push
dec
pop
or
cmp
popa
cli
fimul
jmp
push
test
sar
lods
fiadd
push
add
aam
in
sub
jmp
adc
dec
push
sub
jo
imul
sbb
adc
std
popf
mov
sub
pop
in
add
cwde
ins
push
sbb
fsub
dec
mov
lods
jb
add
test
xchg
sbb
adc
loope
ret
std
cmc
shr
or
dec
lods
or
fsubr
xchg
dec
xor
ja
or
and
mov
clc
rcr
loopne
(bad)
and
sbb
iret
popf
les
inc
cmp
inc
mov
mov
or
dec
or
dec
sub
(bad)
fldcw
cli
jb
xor
push
imul
call
or
outs
inc
test
(bad)
pop
pop
addr16
lock
push
dec
mov
ja
fwait
pushf
push
ins
popf
add
shl
fs
fmul
sub
jmp
mov
inc
hlt
xchg
inc
out
cmp
push
call
xchg
jmp
jnp
cmp
gs
jge
xchg
fwait
sbb
pop
fwait
xchg
and
jle
or
add
addr16
ss
inc
push
shl
ins
sbb
xchg
int
push
imul
lds
mov
jno
inc
dec
inc
movs
test
adc
fld
loop
mov
pushw
push
mov
test
pop
inc
mov
cli
push
shl
mov
xor
sub
into
jmp
push
push
or
fdiv
sub
mov
ins
je
xor
int3
sbb
jb
cs
test
pop
test
xchg
leave
dec
outs
lock
pop
int
xchg
fmul
lods
cmp
jge
mov
xor
dec
test
add
repz
pop
dec
fsub
add
pusha
test
mov
ins
fsub
cmp
and
aam
stc
data16
cmp
mov
xor
mul
fincstp
fwait
outs
fisttp
dec
cmp
(bad)
sub
into
setnp
inc
imul
sbb
mov
mov
out
xchg
push
repnz
and
push
int
jmp
jg
push
fimul
push
jo
popf
adc
addr16
sub
popf
and
add
nop
je
popf
bound
xor
fs
ret
xchg
pop
lock
jmp
ror
xchg
adc
push
loope
mov
popa
or
aas
xchg
and
xor
(bad)
push
mov
add
mov
loope
dec
popa
fsubr
jb
icebp
in
or
jbe
inc
push
inc
xor
mov
hlt
push
std
jae
cmps
push
xchg
mov
jnp
je
adc
xchg
jno
mov
mov
fdivr
jge
adc
retf
cmps
dec
in
stos
aam
xchg
pop
adc
mov
mov
in
pop
icebp
aas
jl
retf
or
fiadd
in
sub
dec
mov
loop
mov
sbb
sti
inc
push
xor
repnz
adc
out
mov
inc
push
pop
pop
mov
add
hlt
mov
(bad)
mov
call
dec
ds
sub
mov
movs
and
mov
jne
pop
clc
xchg
add
(bad)
and
pop
dec
and
mov
pop
mov
inc
ja
mov
aam
loope
mov
(bad)
pop
int3
fild
icebp
mov
cmps
push
arpl
(bad)
jmp
or
and
xchg
push
add
arpl
cs
mov
pop
repz
xchg
repnz
aaa
mov
xor
out
jae
test
call
mov
shl
and
xchg
pop
and
xchg
add
mov
sbb
jno
ror
and
shl
dec
lds
inc
es
add
movs
dec
inc
fistp
mov
fdiv
pushf
xlat
cmps
imul
test
dec
xor
call
jo
ret
push
mov
sbb
loopne
cmp
xor
xchg
les
adc
xchg
xor
icebp
das
xchg
and
outs
dec
sub
in
inc
nop
fidivr
hlt
fcom
pop
ret
jne
lea
ja
mov
adc
mov
shl
jp
loopne
(bad)
mov
fild
mov
(bad)
loope
call
mov
mov
popa
mov
cdq
in
jb
mov
mov
out
test
sbb
jmp
or
rcl
aad
and
test
adc
adc
dec
xchg
xor
(bad)
and
push
xchg
aad
cmp
iret
mov
pop
cli
mov
and
bound
mov
mov
add
sbb
xlat
cdq
push
sar
hlt
mov
mov
cs
(bad)
pusha
aad
cmp
lea
int
lock
mov
shr
arpl
outs
sub
ds
xlat
sar
dec
inc
(bad)
and
sub
or
mov
out
cmp
sahf
cmp
addr16
pop
je
mov
pushf
or
push
or
mov
jne
sar
test
lods
mov
mov
xor
adc
sbb
je
add
sbb
sbb
inc
jp
jne
into
mov
std
movs
iret
hlt
xor
jne
neg
ror
jp
mov
cmps
(bad)
mov
popa
inc
and
je
(bad)
idiv
cwde
inc
mov
lds
push
push
(bad)
jb
call
mov
add
nop
sub
mov
std
xchg
xchg
xchg
cmp
push
repnz
loope
sbb
mov
rol
cli
cmps
jb
or
(bad)
pushf
add
cli
dec
push
or
rcl
pusha
popf
and
push
neg
pop
scas
mov
mov
mov
jge
xchg
aam
imul
jbe
stos
lods
fs
call
lds
test
pop
add
cdq
mov
mov
add
cli
mov
mov
sbb
addr16
js
mov
hlt
imul
repz
das
loop
dec
push
lods
repnz
xor
data16
add
mov
ror
das
popf
push
mov
dec
cmp
inc
sub
lock
outs
inc
jle
pop
cmp
dec
push
or
lods
lods
test
and
push
add
xlat
test
xor
mov
or
lods
ins
jmp
rcr
addr16
push
mov
sti
xor
pop
sub
movs
jge
std
cmp
or
push
jbe
aam
jb
call
test
sub
sbb
lods
call
cmc
int
pop
cli
pop
add
ds
leave
loop
add
cmc
cmp
push
nop
sbb
into
test
xchg
dec
push
jns
movs
fst
inc
test
dec
popf
and
sbb
jecxz
dec
jmp
stos
stos
xchg
cld
dec
scas
mov
iret
jo
enter
adc
and
shl
mov
mov
mov
mov
mov
in
xchg
sub
fsubr
inc
jbe
test
mov
mov
jle
mov
xor
cmc
fistp
mov
aam
cmps
mov
(bad)
test
cld
retf
loop
mov
mov
fadd
imul
push
test
fnstenv
fdivr
xchg
lds
and
loope
ficomp
std
jmp
lahf
mov
pop
adc
aam
or
xor
mov
cmc
(bad)
loopne
mov
int3
push
ins
out
sbb
jle
loope
clc
add
and
(bad)
jg
cmc
pop
repnz
dec
add
push
lds
xor
jmp
and
pop
pop
pop
iret
or
pop
cmp
inc
mov
test
cmp
movs
or
out
scas
pop
sti
and
lahf
inc
sub
mov
mov
adc
out
dec
je
pop
pop
push
and
mov
popa
or
dec
lea
dec
fistp
mov
dec
(bad)
jecxz
sub
inc
dec
sub
push
mov
push
lds
cmp
rcr
pop
ja
adc
cs
in
test
pop
mov
stos
push
mov
mov
or
test
xchg
adc
inc
aas
mov
test
pop
jns
jmp
(bad)
sbb
call
ret
(bad)
cmp
ja
sbb
mov
cli
ror
mov
bound
leave
(bad)
popa
inc
aad
pusha
add
jge
pusha
repnz
cs
into
test
popf
es
mov
lods
nop
cmp
fucomp
stc
dec
push
mov
shr
pop
jmp
imul
addr16
dec
imul
cmp
cdq
nop
es
out
dec
mov
cmp
xor
(bad)
movs
xchg
je
mov
mov
test
dec
sub
inc
and
inc
cld
in
jmp
movs
loop
movs
pop
mul
retf
mov
mov
nop
mov
pusha
sub
dec
jns
test
sbb
xor
repnz
in
and
inc
push
popa
movs
stos
cwde
mov
out
cmp
into
mov
outs
in
in
mov
xor
scas
dec
(bad)
mov
in
xor
int
in
ins
aad
loopne
dec
outs
sub
shr
or
pop
data16
lahf
rcl
jle
sti
mov
cmp
jns
mov
push
test
aad
mov
les
sub
scas
cmp
nop
outs
repz
scas
(bad)
jmp
pop
stc
popa
mov
jns
(bad)
jo
int
mov
jl
lods
out
mov
shl
test
adc
or
ficom
sub
and
adc
mov
and
mov
sub
test
push
adc
lahf
aaa
mov
int
not
jl
and
xor
mov
into
pop
dec
je
or
cdq
jg
mov
outs
xor
fs
jge
dec
push
test
aas
fnstcw
loope
mov
push
pop
inc
aas
mov
stos
std
mov
sub
xchg
(bad)
dec
mov
inc
and
mov
into
sub
xchg
sub
stc
xchg
jbe
xchg
jmp
xor
fnsave
div
fistp
rcr
pop
imul
and
mov
cmp
mov
rcr
sbb
mov
dec
mov
bound
outs
fcomp
rol
push
add
fwait
push
mov
adc
jg
ror
repz
xchg
pop
mov
push
xchg
(bad)
out
or
mov
call
xor
cwde
maskmovq
pop
and
sahf
retf
lea
jmp
xchg
push
int
popf
in
iret
ja
mov
adc
jae
cdq
xor
popa
cmc
inc
xchg
bound
es
xchg
and
sti
adc
out
pop
lea
pop
xlat
loopne
fwait
xor
add
in
fld
adc
mov
dec
jmp
mov
dec
sbb
inc
std
retf
xchg
call
mov
sub
pop
ins
pushf
jp
jns
daa
mov
leave
push
call
es
inc
mov
and
xchg
push
cmp
lods
ins
xchg
xchg
shr
ja
jns
add
ret
movs
aas
ret
sbb
arpl
test
nop
inc
add
xchg
aas
jecxz
sub
jmp
mov
and
sub
sub
sub
xchg
lahf
mov
inc
fisttp
xchg
sub
push
mov
pop
mov
cmp
mov
daa
(bad)
fisub
xchg
or
mov
or
fadd
jne
lods
jecxz
out
cmc
fistp
xchg
sub
xor
adc
clc
xchg
icebp
xchg
retf
mov
pusha
in
cdq
daa
jns
movs
mov
add
retf
or
mov
adc
jl
dec
(bad)
ficomp
jp
push
dec
jp
inc
mov
das
es
xchg
faddp
sbb
outs
or
sub
xlat
test
adc
les
add
dec
dec
and
nop
retf
jb
xchg
or
mov
std
aas
ror
aam
into
test
sbb
cmps
inc
fldcw
dec
mov
xchg
mov
adc
mov
fadd
(bad)
jp
lds
xor
push
xor
lods
sar
add
retf
xor
dec
inc
rcl
push
nop
addr16
mov
lods
enter
imul
adc
inc
movs
(bad)
in
aaa
outs
dec
test
add
hlt
ret
mov
cmps
mov
add
retf
in
xchg
sub
or
lahf
popf
add
ja
cmp
mov
mov
adc
mov
test
jnp
loop
test
loopne
call
dec
inc
das
fmulp
cld
adc
push
inc
mov
add
and
(bad)
hlt
outs
int3
jno
dec
ret
ins
adc
dec
enter
call
push
loopne
call
retf
and
mov
mov
jg
repz
push
inc
mov
mov
repnz
jae
cmp
pop
mov
xor
adc
xor
leave
stc
jge
xor
lods
cmp
(bad)
jge
mov
hlt
cmp
into
sub
and
fimul
jo
movs
push
arpl
adc
test
in
adc
cmps
and
inc
xchg
mov
mov
je
out
scas
cmp
push
mov
adc
shr
icebp
mov
jge
push
pop
or
push
jmp
mov
out
add
dec
mov
push
cmp
retf
pop
sbb
mov
(bad)
cmp
add
jp
cmp
mov
sub
(bad)
aas
mov
mov
xchg
hlt
repz
jl
fiadd
imul
sub
stc
in
sub
xchg
retf
add
fldenv
adc
test
das
or
clc
mov
addr16
(bad)
push
pop
inc
sub
sbb
cmp
lahf
add
mov
push
std
cld
push
lds
bnd
inc
mov
(bad)
(bad)
xchg
adc
fst
cwde
jecxz
xchg
add
outs
or
pusha
cmp
dec
mov
adc
les
pop
jp
loop
ror
push
fdiv
mov
pop
fnsave
push
cmp
xchg
out
rcl
or
xchg
gs
sub
mov
ror
(bad)
loope
or
push
shl
call
mov
pop
test
push
cld
cmp
pop
adc
add
dec
fstp
ret
xor
out
adc
cmp
outs
adc
push
mov
shl
sahf
std
ror
inc
in
xchg
inc
jge
iret
cmp
les
sub
adc
mov
dec
push
sahf
and
adc
jmp
mov
mov
es
inc
sbb
mov
adc
push
stos
mov
jbe
cmp
sti
(bad)
test
inc
inc
add
ret
dec
test
sub
mov
adc
mov
call
in
retf
std
cdq
xchg
lods
xor
int3
pop
outs
and
enter
or
ja
(bad)
mov
mov
jg
or
call
stos
iret
push
or
add
dec
pop
inc
jne
arpl
xchg
pop
mov
xor
adc
jecxz
test
adc
sub
and
mov
loop
fiadd
cmp
ffree
jbe
mov
jne
popw
sub
cmp
sub
movs
and
push
dec
mov
ins
cmp
sub
sub
mov
(bad)
int
(bad)
(bad)
inc
jecxz
shr
inc
inc
inc
inc
mov
xor
iret
sub
xlat
loopne
add
fs
mov
and
clc
outs
test
add
xchg
cld
(bad)
adc
cli
or
pop
stos
dec
push
or
sbb
pusha
push
inc
push
xchg
retf
aam
push
popa
enter
out
popf
xor
addr16
cmps
cmp
dec
and
xchg
(bad)
cmp
std
cmps
jmp
lock
arpl
inc
test
sbb
das
ins
mov
xchg
sahf
xor
and
mov
lods
arpl
jp
hlt
sub
js
test
jb
inc
push
(bad)
scas
xor
jle
fcom
stos
sub
jl
dec
scas
sub
aad
aaa
mov
cmps
call
jb
pop
pop
out
in
ja
adc
pop
movs
and
cmp
sti
sub
push
cmc
ss
dec
cmp
ds
iret
xchg
adc
mov
(bad)
out
xchg
dec
aas
or
or
out
sbb
stos
add
hlt
repz
xchg
out
je
mov
ss
add
es
pop
mov
push
adc
outs
cwde
fld
jmp
jg
xchg
aad
xchg
ret
je
je
icebp
sar
loopne
push
mov
not
clc
lods
(bad)
xor
pop
iret
mov
in
imul
push
popf
cdq
mov
mov
dec
jecxz
sbb
retf
mov
adc
mov
pop
add
dec
lods
fmul
neg
sti
pushf
or
(bad)
out
sbb
push
jae
ds
xchg
std
pop
and
or
mov
jb
retf
call
jg
xchg
cmc
(bad)
mov
test
add
pop
aas
adc
fidivr
mov
dec
adc
inc
out
(bad)
mov
xor
sahf
daa
cs
cs
cmps
push
xor
jle
je
dec
repnz
psubq
jo
cmp
outs
out
bound
jbe
push
xchg
cmp
aaa
scas
ss
aaa
push
or
pop
daa
sbb
in
jb
mov
or
out
mov
and
xor
repnz
mov
sub
loope
cmp
jb
imul
in
aad
dec
(bad)
sbb
or
inc
(bad)
xchg
add
cmp
or
int
cmp
gs
int3
push
push
mov
and
xchg
jae
mov
xchg
into
je
xchg
dec
sbb
mov
jge
adc
lahf
pop
mov
push
and
jmp
in
add
xchg
outs
push
add
fimul
sar
mov
fs
ins
movs
mov
fimul
or
retf
movs
pusha
or
mov
xchg
lahf
adc
push
jno
inc
call
fmulp
aad
push
xor
sbb
movs
into
jl
or
sub
hlt
iret
daa
and
popa
repz
cwde
jge
outs
int
xchg
and
mov
sbb
loop
gs
mov
xlat
inc
retf
repz
imul
nop
cmp
inc
jmp
out
cs
jle
dec
(bad)
and
mov
add
outs
cmc
test
sub
iret
das
out
js
push
dec
add
retf
sbb
arpl
adc
nop
mov
pop
xchg
cli
out
sbb
jge
nop
push
pop
and
dec
mov
mov
or
cmp
jb
fisubr
loope
xor
pop
adc
xchg
ss
adc
loop
nop
sub
scas
or
fsubr
xor
cdq
out
fdiv
sbb
add
jns
jno
movs
mov
mov
push
jl
add
sbb
sub
scas
push
add
ret
clc
movs
add
mov
fs
out
xchg
pop
enter
data16
xchg
pop
out
lods
and
mov
add
out
mov
push
lods
js
xchg
lahf
pusha
dec
or
mov
aad
imul
sbb
push
xor
(bad)
sub
cmp
es
inc
(bad)
sar
pop
not
sub
ss
sar
inc
mov
xor
int
push
mov
rcr
in
cmc
stos
inc
std
scas
sti
adc
dec
fnsave
xor
imul
xchg
fild
mov
xor
fisubr
dec
call
pop
(bad)
xchg
outs
xchg
pop
jno
popf
push
loopne
(bad)
outs
jns
or
lock
dec
dec
out
mov
sub
addr16
fneni(8087
jge
das
xor
push
test
or
mov
pop
sub
cmp
jbe
mov
mov
leave
stc
js
jmp
out
inc
mov
add
in
enter
loopne
imul
xchg
hlt
in
test
xor
jmp
call
clc
addr16
lds
adc
movs
sub
stos
sbb
shl
(bad)
push
sar
adc
sub
mov
cmps
add
pushf
mov
sbb
and
out
addr16
icebp
xchg
push
add
push
mov
push
xor
jle
or
jmp
(bad)
loopne
xchg
pop
call
push
stos
loopne
pusha
mov
push
jl
push
rcr
pushf
or
popa
shr
ja
fsub
js
pop
xchg
test
or
shl
cmp
mov
push
hlt
sbb
out
das
dec
(bad)
int3
shl
imul
mov
addr16
add
xlat
and
aas
mov
sbb
loope
sub
stc
fnstenv
mov
in
inc
pushw
leave
mov
inc
pop
xchg
mov
test
mov
pop
add
sub
or
sbb
or
(bad)
cmp
je
and
sbb
add
iret
lea
xchg
add
cwde
je
adc
add
(bad)
dec
pushf
ror
add
add
(bad)
xlat
add
xchg
inc
pop
jle
das
sbb
call
bound
in
cdq
xchg
lea
ss
fbstp
push
dec
cmp
test
rcl
das
in
cdq
cmps
cmps
pusha
shl
retf
arpl
xor
mov
gs
xlat
scas
pop
arpl
and
ret
mov
jno
xor
pop
pop
mov
lock
cmp
push
jns
mov
xchg
mov
fstp
dec
cmps
xchg
or
cmps
ja
xor
outs
sar
xchg
nop
sar
jno
lds
mov
fld
cld
or
outs
dec
test
imul
lods
or
inc
hlt
sbb
test
and
xor
dec
popfw
fimul
and
lea
fisub
shl
mov
jae
push
mov
mov
imul
call
cmp
sub
cmp
xchg
jnp
mov
cmp
les
and
xor
iret
int
jmp
popf
cwde
mov
mov
cdq
pop
repnz
or
mov
add
push
scas
pop
pop
pop
push
cmp
and
(bad)
xchg
pop
add
fcom
xchg
mov
fcom
bound
mov
clc
daa
(bad)
inc
xchg
add
hlt
int3
jne
sbb
or
xchg
mov
and
or
xchg
sbb
mov
cs
neg
nop
mov
sbb
jmp
dec
shl
dec
arpl
push
(bad)
in
mov
mov
sbb
push
mov
call
xor
dec
jne
adc
or
ds
add
daa
sbb
xlat
pop
jmp
out
repz
out
push
cdq
pop
mov
xor
mov
shl
mov
sahf
add
mov
sbb
push
ins
dec
mov
xor
xchg
daa
std
or
xchg
xchg
pop
cmc
xchg
fistp
pop
and
jl
xor
inc
mov
inc
push
in
or
loopne
not
clc
lods
jg
push
mov
(bad)
test
iret
jecxz
outs
xchg
jbe
lea
out
jbe
loop
in
jno
mov
xchg
jecxz
les
aam
or
out
ins
and
or
pop
js
fld
xchg
jg
jae
cs
cmp
xchg
push
pop
mov
sbb
aad
xchg
inc
dec
add
repz
and
jno
jae
jg
mov
or
xchg
sub
ds
jae
das
hlt
jg
jae
and
jbe
lods
retf
dec
jge
inc
jbe
call
mov
retf
push
mov
je
mov
jno
inc
inc
mov
jle
pusha
js
daa
xchg
xchg
xchg
fcmovnbe
and
or
and
jae
jmp
add
into
adc
mov
cli
stos
int3
mov
cmp
jne
faddp
aaa
sbb
stos
ja
and
out
push
scas
frstor
rcl
(bad)
mov
or
jmp
in
fwait
cmp
mov
loopne
xchg
test
or
xchg
cmp
cdq
push
je
mov
lahf
mov
pop
addr16
push
test
xchg
push
pusha
pop
add
int3
push
xchg
mov
push
loope
movs
inc
jne
inc
loop
xchg
dec
cld
ins
push
mov
scas
mov
test
push
jnp
fsub
in
inc
inc
adc
addr16
mov
xchg
popa
jecxz
ja
and
cld
in
loop
es
mov
stos
add
jle
push
push
mov
clc
(bad)
in
inc
sub
mov
sbb
mov
test
xchg
lahf
jl
add
sub
mov
arpl
dec
mov
cmp
and
sti
mov
sbb
fdivrp
(bad)
cli
mov
int3
sub
mov
js
dec
pop
loop
loope
sub
xor
test
push
ins
xchg
xlat
mov
ror
aad
and
mov
movs
or
ja
mov
in
add
push
fdivr
cmps
cs
rcl
push
sub
ja
adc
cld
mov
dec
outs
fisttp
push
mov
fcom
inc
xchg
clc
je
mov
mov
bound
ja
cld
ins
(bad)
mov
dec
xchg
fadd
inc
add
std
pop
sbb
or
js
sub
adc
icebp
adc
mov
mov
push
dec
xor
xchg
popa
movs
mov
jl
repz
or
mov
push
aas
iret
pop
pushf
(bad)
xlat
jl
aam
adc
idiv
iret
xchg
test
les
pop
or
arpl
repnz
push
xchg
pop
push
mov
idiv
xor
inc
xor
add
cli
ror
enter
jl
mov
cmp
ds
mov
push
cs
jle
int3
ret
and
mov
jle
push
push
add
inc
sub
xor
repnz
loope
mov
and
popa
mov
xor
mov
hlt
in
out
mov
mov
dec
shl
es
xor
jle
xor
dec
(bad)
jmp
out
clc
rol
xor
inc
out
arpl
lods
into
pop
sub
xchg
or
jp
cmp
fcom
int
int3
sub
fldenv
jnp
mov
ja
movs
jl
xor
mov
jns
lahf
xchg
dec
call
ret
repnz
(bad)
mov
jp
inc
iret
clc
and
div
ja
data16
jp
cmp
hlt
or
cmp
xor
in
pop
mov
in
push
repnz
add
into
or
mov
dec
rol
scas
pusha
(bad)
pop
dec
add
pushw
in
nop
(bad)
push
xchg
jge
xchg
mov
cmp
mov
mov
xor
je
fnsave
mov
cmp
out
mov
out
push
dec
ss
mov
ds
cmp
push
and
or
lods
or
sbb
dec
add
adc
ror
popf
mov
push
sbb
lock
pop
lahf
push
or
dec
aaa
sub
fdivp
mov
mov
fst
and
jbe
in
daa
shl
xchg
int
and
or
xor
scas
cmp
jl
nop
xor
xchg
sub
lock
and
fstp
add
(bad)
loope
add
loop
(bad)
aas
push
sub
repz
inc
movs
cmc
lahf
(bad)
movs
fcmovb
cmp
cmp
add
mov
in
xchg
leave
mov
jp
pop
or
pop
jo
cld
in
les
jno
movs
pushf
mov
test
jns
mov
sub
or
sub
outs
or
in
dec
mov
mov
retf
inc
xor
inc
in
or
in
pop
cmp
inc
dec
dec
outs
icebp
push
test
mov
fimul
dec
xchg
cdq
inc
add
xchg
ss
imul
sbb
sbb
sub
jle
fs
mov
jle
arpl
inc
mov
or
sbb
repnz
cmc
sub
sub
push
out
inc
jb
outs
push
cdq
jns
pushf
and
or
neg
sti
sbb
call
push
int
mov
dec
daa
cmp
int
jecxz
cli
push
in
cmp
lods
cmp
jp
inc
xchg
and
pushf
xor
fidivr
inc
jae
movs
jnp
and
or
popf
adc
shr
and
push
fwait
xor
jmp
jp
and
or
dec
cmp
xchg
pop
mov
xor
push
ds
xchg
test
std
dec
inc
add
xchg
sbb
mov
or
jl
cmp
xchg
cmp
sti
jae
daa
adc
call
mov
movs
adc
mov
das
inc
mov
out
daa
dec
push
test
jl
outs
inc
fstp
(bad)
mov
sub
cmps
cdq
inc
or
bts
(bad)
std
dec
cmp
sahf
lock
das
js
fcomp
cdq
sbb
sar
cwde
loop
aaa
mov
ds
retf
ror
cli
mov
ins
jnp
sbb
pop
lds
mov
sbb
dec
stos
mov
mov
inc
ret
sahf
inc
mov
cmp
jmp
test
cmps
int3
dec
pushf
jnp
xchg
movs
inc
dec
and
loop
xchg
sbb
adc
(bad)
in
add
mov
sub
push
dec
cld
sbb
xor
loopne
add
jne
ja
inc
scas
add
leave
stc
loopne
out
sbb
mov
inc
jne
shr
jbe
adc
push
inc
cmp
lods
stc
(bad)
sub
(bad)
push
inc
icebp
fmul
mov
pusha
push
adc
push
lods
push
xchg
in
in
lods
into
retf
sub
data16
call
sub
enter
xchg
jge
mov
call
ror
sti
xchg
sub
retf
hlt
lds
lea
xor
stc
mov
push
add
mov
or
cmp
mov
repnz
cmp
int3
adc
cmps
call
push
bound
call
not
cmp
ds
mov
pop
lds
push
mov
sub
mov
imul
cmp
ja
in
mov
scas
sub
or
inc
mov
cmp
jmp
(bad)
out
add
(bad)
bound
inc
inc
scas
cld
or
out
(bad)
and
jne
or
mov
adc
jl
xchg
sbb
into
jae
ret
(bad)
xchg
jmp
xor
rcr
adc
mov
outs
(bad)
mul
add
push
(bad)
jmp
stos
test
cmp
xchg
push
es
lods
stc
mov
sub
sub
push
jge
sub
hlt
xchg
cmp
fdivr
mov
(bad)
stc
push
mov
push
inc
ins
dec
and
push
test
das
in
sub
push
arpl
xlat
call
pop
imul
inc
jb
neg
fwait
cwde
cmp
addr16
cs
sbb
xchg
icebp
cmp
imul
dec
mov
cwde
in
in
scas
xor
out
fs
and
js
repz
mov
sbb
xchg
inc
or
pop
pop
add
xor
lahf
inc
lea
ret
push
push
inc
push
sub
dec
pushf
cmp
jmp
mov
mov
fidiv
(bad)
sti
sbb
sbb
jp
cli
fwait
ins
cmp
xlat
out
shl
fst
jb
lods
hlt
(bad)
pop
fmul
adc
test
or
ret
jno
pop
lock
jnp
inc
add
fdiv
adc
(bad)
into
ins
xor
xchg
test
mov
repnz
xchg
idiv
pop
xchg
cmp
mov
iret
or
sti
es
add
or
outs
loop
adc
jg
jmp
es
stos
(bad)
jmp
into
out
aam
xchg
cdq
outs
retf
mov
mov
inc
les
jnp
sub
shr
add
xor
mov
sti
cmps
ror
cmc
xlat
cmp
push
and
jo
mov
icebp
lds
jns
and
xchg
rol
xchg
icebp
and
retf
pop
hlt
in
sub
fild
mov
lds
cs
in
ja
inc
dec
cmp
mov
inc
(bad)
fcmove
dec
xchg
call
(bad)
stc
sub
stos
pusha
rol
in
mov
xchg
mov
hlt
xchg
scas
ins
mov
fcmovbe
pop
sub
jge
(bad)
jg
push
cdq
clc
sub
fsubr
dec
loope
mov
mov
test
jno
cli
(bad)
mov
sbb
out
test
sahf
data16
push
adc
lods
cmp
pop
jb
push
fstp
pop
mov
jbe
mov
ficomp
sbb
mov
stc
adc
inc
cmp
mov
and
add
sub
push
scas
xor
sub
in
popf
stos
sub
mov
(bad)
pusha
into
outs
ret
lock
aad
mov
out
scas
jl
push
cwde
(bad)
shl
mov
pop
dec
ja
mov
dec
adc
push
inc
out
dec
ror
inc
scas
call
pop
pop
sahf
add
xchg
ins
xchg
aad
mov
test
mov
enter
std
cmc
addr16
outs
or
les
sub
imul
adc
mov
dec
cs
push
fbstp
xor
stc
pushf
pushf
or
jmp
das
test
ins
xchg
push
adc
fist
cwde
sub
jecxz
jno
inc
rcr
sub
stc
ja
push
stos
movs
aas
das
xor
popf
jmp
and
test
inc
jbe
fidivr
sub
mov
inc
mov
push
jne
pop
dec
aam
adc
int3
jmp
(bad)
jns
(bad)
pusha
mov
mov
icebp
aas
arpl
or
in
fcom
jo
je
dec
dec
lods
ss
aad
pop
inc
aad
cmp
(bad)
push
xor
outs
in
mov
push
and
and
repz
icebp
jno
add
jae
cmps
xchg
(bad)
adc
lock
in
shr
popf
movs
inc
adc
adc
ins
cmp
push
push
push
mov
xchg
sub
nop
dec
iret
cmp
push
push
xor
test
xchg
xchg
fldz
inc
jo
shl
pop
repz
iret
mov
loop
outs
or
cmp
inc
cmp
push
aas
cmp
push
popa
mov
mov
xchg
lock
(bad)
cmc
mov
adc
in
adc
add
jecxz
xchg
adc
pushf
adc
mov
je
dec
rcl
xor
pop
imul
fisttp
ja
dec
test
leave
daa
rol
in
pusha
je
mov
pop
pop
scas
test
outs
sub
jp
in
pop
mov
das
jno
sbb
repz
mov
lea
cli
pop
cmp
in
mov
adc
mov
xchg
fisub
adc
ret
xchg
retf
xchg
(bad)
or
repz
test
jnp
pop
sti
inc
lahf
(bad)
(bad)
in
inc
hlt
pop
sahf
pop
xchg
inc
std
ja
jne
sub
sub
nop
addr16
aas
dec
loop
sub
xchg
xor
cld
ret
pop
sub
das
xchg
das
cmp
cmps
call
pop
data16
and
lods
mov
repnz
mov
jmp
pop
jg
scas
jno
push
pop
mov
shl
ja
in
push
mov
sub
inc
mov
push
jb
push
(bad)
out
out
jae
add
int
clc
sbb
dec
sub
ins
mov
xchg
push
cmps
add
dec
sub
inc
arpl
mov
mov
and
dec
cmp
pop
cs
xor
sbb
pop
xor
sbb
mov
xor
push
xor
jnp
stc
lahf
mov
inc
les
cmp
shl
outs
dec
arpl
jg
jl
sbb
mov
or
in
cld
nop
test
mov
retf
out
push
ja
xchg
push
pushf
xor
cld
and
loop
push
lock
fwait
inc
clc
add
bound
in
hlt
pop
pop
repz
jnp
or
xor
adc
rcr
dec
mov
aaa
mov
pop
inc
sti
pop
push
pop
and
outs
in
push
std
aas
rcl
icebp
sub
test
loop
pop
js
jbe
mov
icebp
dec
test
and
shr
add
jns
shr
aad
test
push
into
xchg
repz
or
outs
lods
jp
dec
cmp
or
jl
ret
(bad)
aas
inc
cmc
data16
adc
pop
jmp
and
cwde
call
cld
out
cmps
jno
test
test
adc
addr16
aam
mov
lea
cs
cmc
add
shl
test
xchg
sub
mov
jbe
xor
ret
xor
push
out
lea
mov
sbb
mov
mov
inc
(bad)
sub
das
inc
mov
add
xor
cmps
pop
adc
mov
ds
retf
or
js
mov
mov
mov
ja
inc
push
and
xchg
sbb
ds
sbb
push
jge
iret
pop
mov
out
bound
pop
iret
sahf
inc
push
xchg
retf
push
(bad)
out
sbb
(bad)
sahf
jmp
pop
sbb
push
movs
(bad)
fcomip
cwde
lods
ret
and
mov
xchg
pop
push
data16
out
jne
movs
mov
lahf
test
or
jmp
mov
mov
xor
and
cdq
xchg
out
or
ins
adc
xlat
jge
lahf
(bad)
retf
sti
stc
dec
(bad)
sbb
out
add
leave
retf
dec
jmp
xor
jo
push
add
fdiv
jb
mov
popf
push
mov
mov
out
or
arpl
icebp
dec
lods
icebp
fisub
bound
xchg
jecxz
lods
int
ror
popf
sbb
sbb
xchg
xchg
mov
jbe
adc
out
enter
push
xchg
dec
add
inc
sub
in
pop
adc
lods
jnp
pop
inc
lods
test
inc
mov
mov
je
pop
dec
push
and
bnd
ret
and
jns
and
xor
push
pop
mov
in
ss
sbb
outs
xor
std
js
and
adc
adc
sbb
xor
test
stos
or
(bad)
push
push
pop
das
dec
daa
sbb
adc
push
icebp
out
mov
and
adc
es
mov
inc
xor
lahf
sbb
sub
push
sbb
xor
(bad)
jo
push
les
or
mov
jge
out
cmp
ds
push
sbb
loopne
mov
sti
sub
in
push
push
inc
mov
ds
and
and
in
cmps
or
leave
push
adc
push
and
(bad)
cmc
inc
xchg
xchg
dec
jg
mov
pop
repz
std
or
push
mov
cmp
mov
shl
icebp
or
(bad)
mov
mov
or
pop
pop
jp
ja
rcl
inc
test
cmp
vmread
cmp
jg
mov
mov
rcl
xchg
cs
xor
rcl
mov
push
shl
fcomp
retf
sub
icebp
fild
loopne
enter
cmc
jbe
test
cld
push
xchg
mov
xchg
int
enter
xor
test
xor
daa
shl
shr
pop
push
sbb
inc
xchg
or
sti
pushf
popa
mov
stos
mov
jmp
sbb
shl
xchg
mov
ins
and
mov
mov
je
fisub
jg
mov
and
push
xchg
jne
cmp
js
mov
cld
loop
stos
icebp
push
add
sub
sub
(bad)
repnz
xchg
mov
sbb
push
aam
shr
lock
outs
leave
xchg
out
xor
inc
pop
jp
imul
outs
dec
and
fs
pop
stc
fxch
enter
nop
(bad)
cmp
dec
outs
jp
sbb
mov
sub
sub
adc
xchg
xchg
mov
out
dec
inc
(bad)
sbb
fistp
mov
data16
xor
dec
adc
shr
cmp
xchg
pop
mov
js
push
pop
lea
mov
das
daa
out
cmp
nop
mov
inc
mov
(bad)
fistp
and
inc
rcl
xlat
push
cmp
je
pop
pop
cmp
jp
aam
ins
les
fisubr
gs
mov
out
js
lods
rcr
addr16
into
or
pop
or
outs
ror
push
mov
rol
fs
add
xor
lods
xlat
lahf
ret
mov
inc
mov
aas
mov
sub
dec
dec
xchg
imul
idiv
push
xchg
xchg
sbb
jae
mov
xor
adc
add
xor
enter
lods
(bad)
rcr
inc
jp
fdiv
dec
mov
fwait
ror
xor
jecxz
cdq
or
add
adc
add
(bad)
inc
inc
pop
leave
cmp
dec
or
mov
scas
stos
jne
jno
iret
fimul
push
push
jns
xor
mov
push
test
push
adc
dec
sbb
sub
shr
jnp
shl
dec
ins
mov
adc
imul
xor
sub
xor
cmps
xchg
jmp
repz
scas
cmps
out
xor
out
icebp
arpl
mov
clc
xchg
adc
jl
mov
inc
call
js
jne
dec
out
stos
mov
test
inc
or
dec
outs
mov
lea
mov
jp
cli
cmp
jecxz
inc
test
and
in
pop
aaa
ror
pushf
mov
fbld
das
mov
sti
(bad)
retf
dec
jae
pop
bound
add
les
sub
inc
sbb
push
das
pusha
das
fbld
mov
or
int
pusha
sub
cli
ret
cmp
xchg
cmp
sub
xor
jg
call
dec
jge
enter
and
out
mov
in
pop
(bad)
pushf
cmp
mov
inc
mov
rcl
xor
test
mov
shl
(bad)
ror
mov
mov
mov
in
cwde
mov
jmp
mov
pop
gs
lea
out
xor
jecxz
out
adc
cmp
xchg
adc
(bad)
fisub
shr
pusha
test
lods
sti
or
sbb
dec
(bad)
test
fwait
inc
adc
sub
mov
ret
test
xor
mov
outs
ins
dec
call
mov
push
repnz
fucomip
shr
in
mov
(bad)
mov
sbb
lock
mov
inc
or
sub
loop
ret
adc
lahf
call
mov
rol
sbb
pop
mul
movs
pop
sub
mov
xor
sbb
push
std
fist
inc
mov
movs
outs
dec
adc
pop
(bad)
push
push
enter
cmps
out
inc
shr
pop
mov
xchg
mul
mov
and
jne
mov
out
ins
adc
jb
mov
dec
cmps
adc
dec
das
mov
or
mov
popf
inc
sbb
xchg
cli
into
sbb
jp
add
cmps
std
or
mov
movs
cs
cmc
inc
xor
loope
and
inc
sub
cmps
cmps
jns
jne
fsub
mov
adc
fdivr
inc
sub
sub
sbb
jmp
mov
pop
or
add
jmp
inc
pop
stc
loopne
jnp
leave
aam
xchg
sahf
cmovo
pop
stc
mov
add
leave
xchg
movs
cmp
pop
mov
sub
sbb
add
imul
and
pop
fnstsw
mov
rol
pop
jle
cmp
pop
pop
popa
mov
lds
aad
dec
lock
jmp
sahf
enter
cwde
mov
ds
cmp
out
inc
sub
(bad)
cld
(bad)
test
xor
pop
mov
dec
xchg
inc
sub
dec
sub
cdq
adc
arpl
(bad)
mov
retf
fdiv
in
pop
ss
ret
rcr
push
jae
repnz
inc
loopne
cdq
push
inc
pop
mov
loop
mov
mov
cld
les
mov
push
std
mov
in
(bad)
and
add
fcmove
sbb
sbb
xor
js
jg
xchg
sbb
sub
inc
or
xchg
inc
jecxz
imul
scas
mov
cmps
and
iret
xchg
jmp
call
mov
pop
(bad)
aad
les
mov
jmp
fld
mov
int
call
mov
and
int3
sbb
ja
jl
mov
fld
inc
jmp
mov
sub
cmps
jnp
push
pop
mov
cdq
xchg
jl
cmp
jg
stos
dec
ds
popf
push
gs
mov
jecxz
test
cmp
adc
out
ffreep
lock
lods
stos
(bad)
cmc
cwde
inc
mov
jno
dec
icebp
bound
fisub
or
popa
pop
retf
xchg
and
cmp
fcom
fnstcw
push
mov
pop
fcom
jne
and
gs
jle
fwait
sub
repnz
out
pop
out
imul
or
outs
cs
(bad)
xchg
out
or
mov
ins
sbb
stos
test
mov
fwait
xchg
data16
sbb
cmps
or
(bad)
movs
movs
data16
lds
outs
call
mov
adc
dec
into
jp
call
arpl
adc
shl
out
mov
mov
xor
jmp
mov
mov
inc
mov
daa
jle
dec
cmp
dec
jmp
jp
jmp
inc
xor
jbe
inc
ret
mov
and
mov
cld
arpl
inc
jo
xchg
pusha
(bad)
icebp
inc
stos
shl
mov
and
fdivrp
push
xor
dec
mov
mov
cmp
xchg
mov
mov
dec
xchg
xchg
mov
push
fxch
push
cwde
add
or
inc
xor
cmps
ret
je
and
mov
out
fwait
sub
je
cld
sbb
adc
clc
stc
push
fild
xor
out
jg
imul
push
jg
lds
pop
xchg
dec
add
and
and
or
sbb
dec
cmp
mov
sbb
mov
xor
cmp
lds
xor
sub
scas
mov
adc
retf
and
fnstsw
xchg
dec
out
cmp
add
scas
bound
and
pop
or
fdivr
or
add
inc
inc
adc
rcr
push
daa
push
xor
mov
dec
push
push
cmc
(bad)
pop
or
cs
pop
icebp
inc
pop
dec
cmps
ss
inc
cmp
outs
jecxz
xor
adc
inc
outs
js
mov
or
mov
pop
cdq
mov
sbb
cmp
dec
call
push
jle
shl
ret
push
cs
add
ss
sub
lods
fcmovne
xchg
jecxz
and
inc
in
out
cwde
cmp
(bad)
cmps
call
fmul
mov
sar
repz
fwait
rcr
mov
loopne
or
in
nop
adc
fdiv
jg
xchg
cmp
stos
mov
jp
or
lock
pop
sbb
imul
adc
retf
icebp
sub
push
mov
pop
dec
sub
xchg
or
int3
daa
sbb
lds
sbb
adc
mov
lahf
leave
cmp
inc
fnstsw
cmp
in
(bad)
clc
ja
jl
imul
or
aam
adc
add
mov
jno
and
xchg
(bad)
sub
push
sbb
cmp
outs
xor
add
jo
jg
mov
lods
fldcw
xchg
or
xor
jmp
mov
or
(bad)
repz
sti
les
sub
sar
jg
add
and
or
ja
scas
mov
ffree
(bad)
mov
mov
sub
(bad)
dec
mov
and
ror
adc
sbb
pop
out
xchg
lock
mov
test
cld
xchg
sbb
retf
pop
mov
mov
push
push
mov
daa
retf
and
imul
sub
out
je
out
outs
pusha
or
xchg
fldcw
jne
mov
sbb
repz
cmp
fs
in
or
mov
xchg
and
and
sub
pop
pop
popf
call
jl
sbb
call
(bad)
aaa
xor
jae
push
je
sub
xor
out
loopne
(bad)
mov
mov
xor
cmp
dec
pusha
jl
inc
ja
lods
mov
xchg
cmps
ror
sbb
retf
sbb
aaa
mov
inc
in
arpl
movs
es
inc
ins
mov
ficom
cmp
dec
push
sub
pop
sbb
ins
cmp
add
push
je
sbb
adc
or
sub
shl
jmp
cmp
sbb
xlat
dec
test
aaa
int3
pop
add
imul
arpl
jne
adc
jnp
dec
ret
retf
push
sub
sub
lock
out
lods
sbb
xchg
adc
stc
fs
adc
jbe
mov
int
(bad)
or
fsincos
xor
dec
movs
xchg
les
push
pop
lsl
and
call
mov
jl
adc
cdq
popw
mov
dec
mov
movs
ja
mov
icebp
mov
nop
dec
sbb
shl
mov
shr
jno
gs
fstp
sub
shl
call
ret
sub
push
lock
jno
rcr
push
lds
cmp
arpl
test
inc
pop
ja
mov
adc
mov
jl
sub
jg
cmp
xchg
nop
inc
fwait
push
jae
fistp
ret
fwait
add
scas
xchg
jle
in
add
test
and
outs
mov
inc
loopne
mov
out
(bad)
(bad)
int
or
mov
aam
imul
and
cli
das
and
ror
add
std
adc
xchg
sub
test
into
jo
fcom
xchg
mov
leave
ror
or
dec
mov
sub
jmp
adc
push
sti
cmps
outs
or
xlat
pop
scas
gs
pop
cwde
dec
inc
jmp
in
lea
and
xor
add
imul
into
leave
pop
call
frstor
dec
es
out
outs
mov
std
adc
fdivr
inc
daa
je
(bad)
pop
mov
xchg
mov
pop
xor
jmp
int3
add
add
jle
ss
add
adc
inc
add
push
pop
pusha
xchg
mul
or
adc
or
enter
push
jl
lock
rol
jecxz
test
sub
in
or
adc
loope
iret
mov
and
idiv
cmps
dec
(bad)
imul
mov
push
mov
(bad)
sub
pop
pop
push
dec
popa
int3
cmc
add
fidivr
pop
jns
(bad)
mov
push
sub
mov
push
outs
ret
or
jp
mov
mov
and
ds
mov
das
mov
push
sahf
inc
inc
inc
push
jp
pusha
or
cmp
sti
ret
inc
daa
mov
call
and
inc
fist
jns
sbb
mov
sub
sti
rol
jbe
push
lea
sar
or
pop
add
cmps
dec
mov
inc
out
lds
loopne
int3
cmp
adc
xor
cmc
(bad)
ja
xchg
(bad)
sbb
xchg
pop
jecxz
sbb
into
nop
sub
gs
out
xchg
jg
outs
sbb
or
and
sbb
mov
call
jnp
shl
aas
scas
pop
(bad)
in
or
mov
lea
inc
sbb
xchg
jmp
and
das
test
(bad)
(bad)
jno
retf
(bad)
pop
jne
cmp
mov
dec
adc
fdivp
sbb
mov
sub
and
fist
pop
stos
out
jae
pop
ret
fisubr
mov
scas
inc
stos
push
mov
cmc
stos
test
mov
pop
popf
aam
cld
inc
out
or
loop
retf
test
inc
fild
into
jne
xchg
je
push
adc
mov
int
pop
fist
inc
mov
and
sub
push
je
sbb
loope
jb
mov
dec
repz
mov
cmps
jge
jge
js
inc
and
xchg
cmp
mov
in
push
clc
xor
mov
add
test
adc
xchg
sbb
xlat
out
outs
cmps
xchg
mov
mov
enter
mov
iret
jmp
js
ret
mov
pushf
pop
cmp
inc
dec
test
pop
sahf
dec
imul
mov
fadd
or
mov
adc
pop
cmc
jnp
and
sub
adc
in
test
jmp
cmp
(bad)
aam
fistp
outs
in
push
push
fwait
scas
js
aam
and
push
push
jge
jmp
and
add
xchg
ds
pop
fstp
outs
mul
and
mov
jmp
dec
test
rol
dec
and
vpandn
es
fwait
movs
mov
loopne
int3
mov
mov
popa
mov
mov
add
daa
dec
in
jmp
(bad)
adc
sti
xchg
sub
push
add
sbb
mov
repnz
outs
test
jl
sbb
or
jae
and
mov
retf
cmova
cmps
adc
xor
xor
sub
mov
jne
movs
fnstcw
iret
out
add
shl
xor
mov
fidivr
xchg
pushf
cmps
outs
in
sub
dec
mov
jo
ins
mov
ins
xor
or
add
jbe
ins
cmp
mov
cmps
lahf
xchg
adc
test
cmp
int3
enter
lds
mov
iret
pop
and
dec
ds
push
loop
mov
mov
inc
push
cdq
jl
bound
add
push
lods
jb
lds
add
mov
retf
out
sub
pop
push
kmovw
inc
push
and
cdq
xchg
xchg
xchg
(bad)
dec
and
push
rcl
mov
adc
mov
add
test
leave
mov
add
popf
cmps
fs
pop
enter
mov
xor
ins
cmp
ja
aas
dec
mov
fstp
cmps
dec
sbb
xor
xor
into
add
ror
jmp
dec
jmp
cmc
cld
cmps
lea
jo
add
cdq
in
cmp
stc
repnz
ror
outs
enter
push
stos
jbe
mov
clc
sbb
std
mov
int3
and
(bad)
jmp
fbstp
pushf
jg
ror
xchg
imul
movs
sub
or
(bad)
shr
adc
inc
ins
fs
out
adc
xchg
icebp
scas
sub
adc
cs
test
repz
iret
fcmove
out
sti
inc
add
repnz
lea
(bad)
jmp
sar
pop
pushf
push
and
sbb
push
cdq
int3
or
mov
jmp
cdq
mov
aaa
add
repz
mov
xor
mov
mov
adc
dec
mov
dec
mov
leave
pop
mov
add
jno
sbb
xchg
shl
cmp
call
push
stos
adc
pop
adc
add
inc
push
jae
repnz
inc
ror
push
lods
out
enter
and
push
xchg
push
jo
and
inc
add
outs
loope
int
mov
sahf
repnz
sub
mov
mov
mov
jns
imul
or
leave
fnstenv
sub
mov
xor
xchg
int3
not
js
addr16
mov
or
xchg
push
jno
dec
mov
daa
sbb
or
push
into
adc
sbb
das
xor
hlt
and
bound
scas
out
cmps
dec
nop
sub
enter
xchg
ds
ss
cmps
jl
dec
jl
(bad)
xor
jae
mov
fst
lea
or
fld
push
(bad)
sbb
and
adc
xchg
mov
pop
mov
sbb
jecxz
push
cld
js
shr
ins
sub
xor
push
call
inc
adc
cld
cmc
mov
pop
fwait
mov
adc
jmp
test
ror
mov
lea
pop
and
int
dec
jecxz
xchg
cmps
cwde
xchg
and
in
mov
fisttp
fidiv
pop
mov
clc
out
dec
pusha
mov
sub
out
fadd
pop
cdq
mov
push
or
(bad)
fisttp
xlat
push
lock
test
mov
std
popa
test
cmp
stc
sub
jge
mov
(bad)
cmp
ret
lds
leave
hlt
ds
xor
sbb
adc
iret
or
pop
aad
imul
pop
dec
dec
pop
xor
push
mov
cs
sar
(bad)
xlat
sti
xchg
sbb
bound
fchs
xchg
and
cmps
xchg
cmp
gs
push
into
xchg
pop
mov
test
cdq
adc
aaa
adc
dec
movs
test
fcom
bnd
dec
sbb
ret
(bad)
ins
pop
push
sbb
fisub
lds
rcl
mov
fs
jae
popf
in
arpl
inc
pop
adc
dec
sub
test
cwde
fmul
sub
movs
inc
in
inc
out
xchg
jne
pop
and
pop
(bad)
pop
div
push
ret
scas
lds
or
jne
ret
jg
push
mov
cmp
mov
test
sbb
mov
cmps
xor
sbb
std
enter
xchg
(bad)
iret
xchg
xchg
fmul
aad
mov
nop
aas
sbb
pop
std
jno
push
add
push
dec
sub
ret
cmps
pop
cmp
shl
popa
aad
mov
stos
popa
out
inc
cmp
jmp
enter
push
clc
or
xor
test
(bad)
inc
jmp
(bad)
cdq
mov
sbb
out
fadd
loope
stc
sar
lea
cmps
movs
aas
push
cmp
dec
inc
loope
cmp
loope
push
and
mov
mov
mov
add
scas
mov
add
mov
add
jmp
enter
aas
(bad)
sar
nop
jmp
fdiv
push
not
dec
cwde
push
jbe
lods
(bad)
cmp
clc
xchg
push
out
pop
jmp
lods
adc
sbb
ds
dec
das
lods
cmps
outs
jp
in
ret
repnz
or
push
popa
adc
out
mov
pop
xor
in
mov
data16
mov
ds
(bad)
es
in
sbb
fwait
mov
dec
neg
inc
add
sub
daa
in
ds
mov
push
mov
mov
jnp
xor
shr
inc
or
dec
jno
mov
inc
scas
push
test
xor
test
lods
xchg
dec
push
and
pop
fst
cs
sbb
sar
ret
dec
jmp
retf
or
mov
push
mov
scas
cdq
or
imul
xchg
sub
mov
xchg
movs
sbb
stc
ins
(bad)
jecxz
jge
popa
leave
pop
cmp
jl
jne
sar
arpl
inc
jmp
sub
repnz
jl
sub
ins
add
jo
and
(bad)
imul
mov
imul
push
std
sbb
add
or
rol
(bad)
shl
add
xor
das
mov
sub
shl
loop
jmp
dec
mov
out
jp
xchg
add
jecxz
or
jns
jb
(bad)
cmp
xlat
cmps
mov
iret
lahf
sub
mov
pop
mov
cwde
out
shr
les
xchg
retf
add
fild
sbb
imul
in
jne
fidivr
aas
dec
mov
stos
pop
sbb
out
inc
outs
or
out
push
pushf
les
jecxz
(bad)
adc
xchg
ret
ss
cmp
sbb
push
int
sbb
jecxz
push
int3
dec
push
xchg
aam
movs
out
mov
inc
call
inc
inc
jnp
std
push
jg
rcr
mov
push
jns
or
pop
adc
ret
xor
retf
inc
xor
cmp
aad
ret
int3
add
jnp
popa
lods
in
fist
stos
xchg
inc
jl
mov
mov
add
mov
cli
les
mov
ja
loop
(bad)
pop
(bad)
rol
mov
inc
jbe
shl
stos
sar
xchg
rcr
xor
inc
test
jno
mov
(bad)
mov
ins
add
popf
sbb
movs
outs
mov
call
sbb
mov
(bad)
xchg
aaa
sahf
lods
push
push
xchg
(bad)
mov
push
aam
repnz
sahf
dec
push
jmp
into
cmp
loop
and
jge
int3
stos
cld
add
adc
out
loopne
rcl
xchg
cmps
js
jbe
jecxz
pushf
and
sbb
into
in
mov
sbb
hlt
arpl
xor
fisubr
ds
daa
push
push
aas
lock
fst
out
nop
or
lock
mov
mov
xlat
outs
lea
imul
ds
and
add
mov
push
enter
shr
cmp
push
fldcw
xor
mov
cld
cmp
xor
fnstcw
(bad)
fnstcw
adc
mov
mov
cmc
fwait
cwde
inc
out
call
movs
xchg
cmp
not
push
push
in
ss
ja
mov
push
xchg
mov
sbb
ins
jb
sub
popa
mul
sbb
lahf
imul
popa
pop
mov
push
pop
pop
lahf
or
pop
pop
test
bswap
xor
mov
mov
aad
jg
mov
mov
and
inc
fiadd
or
push
mov
mov
lahf
lea
mov
sar
jle
and
jecxz
jl
ds
call
mov
stc
repz
psubusb
loop
xor
sub
ja
dec
leave
enter
movs
xchg
add
movs
inc
in
aam
stos
pop
mov
stos
xchg
inc
jae
xchg
aad
into
mov
pop
xor
addr16
push
push
cmc
mov
leave
int3
add
add
retf
adc
punpcklwd
stos
push
adc
push
xchg
push
sti
outs
or
dec
jg
sbb
pop
lods
mov
sbb
retf
jl
inc
sub
push
icebp
pop
pop
rcl
adc
in
or
pop
dec
test
xchg
cmp
adc
mov
pop
fild
xor
lock
dec
test
out
cmp
in
ret
push
cmp
push
cs
imul
sbb
push
sbb
aad
icebp
xchg
outs
adc
aam
(bad)
popa
pop
pop
mov
mov
sub
call
pop
out
fwait
stos
jae
pop
pop
imul
mov
cmp
or
sub
sbb
inc
pop
push
les
jnp
xchg
imul
loop
mov
or
prefetch
or
repnz
adc
xchg
xlat
stc
sbb
mov
lahf
or
or
icebp
inc
sbb
mov
and
out
movs
sahf
xchg
sar
push
loopne
push
pusha
dec
push
push
mov
rol
mov
test
test
jl
mov
(bad)
adc
jns
push
inc
pop
mov
ficom
pop
bnd
ret
fcmovnu
adc
movs
adc
dec
add
clc
jmp
jge
push
cmp
icebp
or
out
sub
cmps
mov
pop
imul
retf
jo
push
sbb
cdq
mov
shl
add
push
aaa
stos
xchg
ss
and
int
cmp
sbb
in
mov
cmps
inc
adc
and
call
shr
sbb
add
pusha
imul
rcr
test
in
and
jne
in
popf
push
jae
(bad)
jl
adc
fs
push
(bad)
(bad)
call
out
fsubr
cmps
and
fwait
outs
data16
inc
sbb
jl
fimul
je
sub
and
fnstenv
fnstsw
or
sub
(bad)
fprem1
push
push
dec
add
push
sbb
out
xor
call
mov
es
in
stos
dec
(bad)
mul
leave
adc
adc
push
jns
mov
adc
mov
in
mov
inc
jbe
clc
stc
in
adc
jno
xchg
adc
lods
xchg
mov
pusha
xchg
cmp
cmp
ja
ret
xchg
sub
sub
or
std
sahf
les
mov
sbb
jp
and
shl
jbe
fmul
imul
mov
cmps
xchg
mov
sub
jnp
xor
test
mov
dec
xchg
addr16
push
ins
mov
gs
repz
icebp
inc
cli
mov
and
mov
fsubr
test
call
sti
stos
mov
inc
add
add
sub
int3
(bad)
je
jmp
jmp
clc
dec
ror
jmp
std
fild
dec
stos
jg
rol
int
xor
lods
test
sub
fimul
mov
sub
iret
add
push
adc
or
daa
cwde
and
dec
jb
ins
push
xchg
call
or
sub
jmp
sti
icebp
(bad)
adc
mov
mov
enter
or
jmp
ficom
push
jmp
lods
inc
mov
or
cmp
test
in
mov
cld
dec
adc
jecxz
pop
clc
jb
test
xchg
(bad)
arpl
scas
dec
mov
add
lock
push
in
or
pop
lea
scas
xor
iret
movs
(bad)
inc
cs
(bad)
mov
add
mov
xor
test
lahf
push
mov
scas
aaa
inc
mov
rcr
lods
ds
loope
xor
mov
nop
xchg
ror
mov
jl
pop
jb
sub
ror
stc
sbb
sbb
mov
sbb
mov
xchg
sbb
cs
add
or
loope
push
mov
cld
cmp
mov
mov
xchg
test
out
sbb
mov
mov
(bad)
sti
cli
xor
repnz
mov
lods
or
mov
mov
ja
dec
inc
sahf
test
out
aaa
xchg
pushf
lods
or
pop
int3
(bad)
scas
shr
mov
sbb
fbstp
adc
mov
inc
xchg
int
jb
sub
push
iret
nop
imul
cmc
aam
arpl
in
ret
xchg
xor
mov
sbb
sbb
jp
lahf
mov
ins
jae
or
pop
cld
xor
xchg
xchg
or
sub
xchg
fcos
cdq
fist
or
in
mov
fnstenv
cs
mov
jmp
loope
imul
dec
sbb
sub
jmp
aad
mov
rcr
(bad)
call
mov
addr16
mov
dec
out
sub
cwde
mov
jbe
mov
(bad)
and
xchg
scas
pop
dec
clc
cld
pop
or
(bad)
test
and
fidivr
hlt
test
gs
jno
mov
xchg
pop
sbb
scas
dec
mov
mov
dec
pop
aam
cmp
mov
das
xchg
rol
push
ja
movs
xor
imul
or
shr
adc
cdq
jg
fwait
aam
push
ss
in
xchg
lds
(bad)
mov
xor
sub
arpl
or
add
xlat
xor
add
rol
nop
sbb
add
jmp
test
and
push
pushf
mov
mov
mov
jmp
add
lea
mov
mov
cmp
sbb
std
adc
jle
ret
repz
fs
mov
and
in
pushf
std
dec
adc
add
and
addr16
ss
mov
leave
add
adc
xchg
popa
inc
mov
cmp
sub
push
outs
xchg
mov
mov
push
lahf
push
mov
inc
clc
pop
jl
fisttp
jp
inc
sar
clc
aad
out
jb
cmc
in
mov
jbe
fistp
test
and
jge
add
pop
sbb
into
mov
loopne
enter
pop
lods
mov
add
fcom
test
or
nop
(bad)
std
cmp
sub
mov
pop
(bad)
cli
inc
xchg
mov
aas
mov
inc
fs
add
mov
pop
mov
icebp
ret
sbb
inc
stos
fadd
sbb
adc
fsubr
ret
out
sub
pop
or
pop
sub
fadd
loop
addr16
or
clc
loop
cdq
cli
ja
test
int
js
jg
jecxz
movntps
xchg
(bad)
out
inc
ds
daa
cmps
jo
cmp
fmul
jmp
pop
stos
(bad)
adc
mov
xchg
pop
or
add
push
dec
out
mov
std
sbb
push
rcr
stos
(bad)
mov
addr16
arpl
adc
pop
sub
sub
in
push
xchg
stos
adc
icebp
xchg
js
stos
jl
mov
push
repnz
xchg
mov
jecxz
stos
(bad)
stc
pop
sub
mov
movs
mov
fcmovb
sub
jb
mov
xchg
and
jo
out
or
shr
popf
mov
pop
xchg
or
ret
and
dec
mul
mov
xor
xchg
cmp
xchg
ss
stos
inc
jl
or
jle
lods
out
or
in
arpl
cdq
sbb
pop
xchg
js
(bad)
test
push
in
xor
mov
lock
std
sti
push
inc
jne
inc
mov
iret
sbb
mov
aam
enter
jb
movs
test
sbb
ds
mov
pop
ja
pop
lods
push
sbb
ja
mov
lods
data16
into
inc
and
movs
mov
ins
test
mov
fdivr
xor
mov
neg
sub
jle
dec
xor
dec
scas
jl
inc
in
(bad)
jg
cmp
int3
lods
pop
fist
sub
stos
push
and
bound
xchg
inc
mov
in
out
or
jecxz
jle
jae
jge
into
lods
adc
jns
out
cld
in
jecxz
mov
mov
push
xor
test
mov
js
les
xor
nop
into
(bad)
out
push
cmp
dec
and
dec
xchg
rcl
jg
call
mov
inc
or
aam
or
push
mov
popf
pop
dec
jb
jne
mov
(bad)
sbb
lods
fcmovnu
jae
pop
fs
adc
stos
(bad)
push
mov
aaa
dec
mov
jbe
or
cmps
and
pop
fist
call
fsubr
fbstp
les
ja
dec
mov
(bad)
or
outs
scas
mov
pop
adc
fcmove
dec
daa
and
dec
adc
ret
iret
xor
or
stc
push
test
aad
test
sti
mov
movs
mov
sub
jnp
pop
pop
fwait
std
call
call
outs
aas
cmp
and
ret
je
or
dec
jp
pusha
xor
div
ins
push
mov
outs
or
data16
loop
cmp
test
(bad)
xchg
test
push
or
rcl
les
ss
cmps
fcmovbe
stos
mov
loopne
xchg
cmps
ja
popf
inc
mov
sti
fcmovnb
out
pop
hlt
out
mov
fscale
mov
cdq
mov
fbstp
fadd
mov
in
cmp
ret
add
stos
imul
mov
push
push
and
dec
shl
gs
cli
xchg
clc
in
jo
inc
push
pop
call
jne
loop
jg
repnz
fsub
cli
dec
mov
and
call
jo
pusha
or
mov
cmp
aas
test
xchg
test
mov
mov
xchg
mov
(bad)
cwde
lahf
push
mov
rcr
lahf
out
int3
add
add
shl
cmp
inc
jmp
pushf
adc
cmp
cmp
aad
fld
sub
pop
push
cmp
or
dec
cdq
cmp
and
mov
ret
xchg
jle
cmp
adc
or
mov
jbe
jnp
jne
push
bts
pop
movs
fist
stos
push
out
into
jmp
pusha
mov
dec
pop
into
jo
scas
jmp
inc
test
call
ins
(bad)
push
pop
outs
cwde
pop
pop
dec
inc
mov
or
leave
enter
rcr
push
xor
jle
dec
fucompp
jnp
fadd
push
or
inc
aas
je
jnp
pop
xor
fsubr
sbb
sub
xor
adc
hlt
xor
in
test
mov
jmp
outs
or
and
cmps
pop
inc
stc
push
cmps
and
inc
pop
ins
fisubr
test
adc
and
call
imul
in
test
in
hlt
fwait
push
mov
pop
xor
xchg
mov
stc
mov
imul
call
jmp
fist
sub
xor
test
mov
ja
mov
cli
imul
and
std
je
mov
xchg
and
fimul
mov
jle
scas
test
mov
aad
add
cmp
xchg
loope
mov
lods
jg
mov
sbb
mov
fld
cmp
sub
test
aam
lds
mov
xchg
inc
mov
aam
ficomp
loope
lock
sub
nop
int3
call
es
dec
sub
(bad)
or
jns
jge
jb
retf
(bad)
pushf
out
push
mov
(bad)
xlat
xchg
addr16
std
dec
push
inc
push
and
in
aaa
mov
pop
jns
dec
test
cmp
cmp
or
fmul
(bad)
add
xor
jle
dec
cmp
mov
int
mov
dec
mov
lea
mov
cmp
test
lods
pushf
(bad)
rol
int3
adc
and
popa
inc
add
lahf
or
adc
xchg
xchg
sub
jecxz
push
je
inc
imul
inc
jmp
ficomp
xor
(bad)
call
(bad)
fisub
lahf
in
retf
ins
add
aas
mov
movs
into
xchg
retf
test
test
cmp
dec
cmc
dec
fcomp
mov
daa
mov
cmps
mov
mov
ds
xor
pop
mov
repz
mov
pusha
fsubr
push
outs
push
dec
mov
sub
jmp
mov
dec
pop
popf
rol
cdq
mov
dec
fadd
xor
out
pop
call
cli
sub
sub
jmp
xor
pop
pop
mov
adc
movs
push
ins
mov
cwde
add
jns
xchg
jmp
sub
je
fsub
sub
ret
inc
in
cmp
cld
adc
push
mov
or
js
mov
retf
jp
mov
sbb
add
jne
sub
addr16
jle
or
retf
(bad)
xor
or
stos
jo
xchg
or
test
(bad)
(bad)
mov
iret
xor
xchg
jecxz
out
mov
jp
popa
lea
mov
cmc
add
shr
retf
push
test
sbb
leave
xor
adc
sar
mov
(bad)
and
cli
out
fisubr
jnp
sub
mov
fs
fwait
jge
or
sbb
call
xchg
xchg
mov
push
retf
xor
stos
xor
mov
xchg
popf
ds
je
lods
jmp
loopne
or
ror
jb
mov
sub
add
jl
add
xor
test
mov
add
adc
mov
jbe
pop
pop
movs
mov
(bad)
call
add
mov
das
xchg
popa
adc
in
sbb
into
ins
push
js
ds
lds
ins
push
lahf
pop
and
push
and
mov
sar
push
push
mov
mov
jle
stos
jno
sahf
mov
adc
sbb
push
ficomp
pop
mov
inc
inc
mov
ins
(bad)
jmp
sub
dec
adc
scas
inc
rol
arpl
inc
inc
jo
stos
xor
push
lods
(bad)
(bad)
ret
idiv
js
(bad)
inc
loope
aaa
(bad)
dec
mov
in
js
xchg
cmc
pop
pop
cmp
xor
cmp
jge
out
sub
pop
or
push
adc
xor
aam
out
pop
pushf
ret
out
cwde
std
fwait
lea
test
xchg
fbld
icebp
push
call
rol
hlt
mov
pop
and
xor
out
push
mov
jp
nop
in
mov
ficom
scas
fldenv
add
call
call
mov
aas
(bad)
fsub
push
xor
or
cwde
cmp
sti
addr16
inc
pop
mov
ds
je
jp
mov
jne
pop
(bad)
(bad)
cwde
scas
(bad)
(bad)
rcr
rcl
sub
rol
jbe
out
clc
aas
sti
jnp
add
cmp
leave
mov
mov
aas
enter
iret
popf
cmp
mov
fs
pop
adc
or
lock
cmp
into
inc
jge
sub
mov
iret
or
fucom
add
loop
cmp
and
mov
test
aaa
sub
push
fstp
mov
xchg
paddusb
movs
arpl
pop
mov
loope
arpl
fld
push
adc
sub
iret
es
shl
sub
mov
push
jb
mov
jge
arpl
test
ret
mov
inc
loop
inc
pop
(bad)
cmps
daa
cmc
mov
mov
cmp
test
mov
shr
pop
nop
aas
mov
ror
cmp
cmps
push
mov
jg
xchg
arpl
daa
xchg
sbb
ja
mov
fldenv
repz
fld
push
jp
xor
add
xchg
cmps
cmp
dec
sub
and
aaa
das
and
mov
addr16
jne
xor
inc
daa
add
and
fistp
xor
les
lods
dec
lods
and
jmp
loope
cmp
(bad)
mov
call
pop
sbb
and
mov
lods
pop
jae
push
movs
inc
das
xor
icebp
jne
retf
ins
bound
fisubr
xor
sub
push
mov
je
inc
fiadd
xchg
xor
lea
fadd
call
add
pop
dec
sbb
les
add
out
arpl
xchg
inc
shl
dec
cmps
dec
xor
lahf
mul
lods
fs
pushf
push
stos
mov
xchg
dec
movs
xchg
dec
pop
sti
xor
push
push
push
imul
test
or
mov
addps
jo
mov
adc
int3
mov
xlat
or
or
inc
pop
mov
mov
(bad)
jmp
lds
stc
cmp
cli
mov
out
lods
popa
call
pop
xchg
and
lds
adc
cwde
or
adc
push
shl
(bad)
jmp
mov
sahf
ficomp
cmp
mov
ret
leave
daa
shl
mov
arpl
xchg
test
pop
dec
call
jae
sbb
(bad)
adc
fdivp
push
pusha
mov
adc
xchg
popa
jbe
stos
mov
jnp
jl
in
das
cmp
pop
ja
and
push
and
ror
cli
sbb
cld
sbb
pop
retf
addr16
mov
test
cmps
cmp
addr16
mov
pop
xor
mov
fistp
lods
and
inc
pop
pushf
(bad)
lahf
or
xchg
jno
jae
xor
jmp
stc
mov
add
mov
cmp
fdiv
in
stos
adc
jmp
mov
dec
jle
hlt
aad
sub
push
or
push
pop
es
jg
xchg
fs
mov
or
xchg
dec
test
jl
daa
lds
push
or
mov
call
fsubr
jg
imul
es
mov
mov
fs
dec
scas
sahf
cmp
xchg
xor
sub
push
mov
and
in
leave
xlat
loop
push
ja
inc
inc
pop
gs
and
sub
add
movs
jge
jbe
popf
loopne
ins
cmps
xlat
(bad)
iret
pusha
pop
push
jns
push
jmp
arpl
push
(bad)
movs
mov
cdq
leave
sbb
xchg
test
push
je
pop
retf
sbb
sahf
scas
repz
test
test
push
jecxz
stos
fmul
out
cwde
lss
in
dec
mov
cmp
sub
dec
mov
(bad)
or
push
repz
add
loope
sbb
inc
inc
sub
inc
jmp
scas
loope
mov
sub
ss
outs
js
cld
xor
pusha
dec
mov
aas
int
inc
cdq
lock
push
int3
test
sbb
jo
(bad)
mov
mov
enter
cwde
pop
ins
xor
push
mov
aam
and
pop
mov
push
movs
cwde
cmp
xchg
movs
std
pop
inc
dec
rcr
icebp
xchg
cmp
pop
clc
test
loopne
xor
add
out
xchg
xor
test
push
and
sahf
mov
sub
test
test
pcmpeqw
jg
mov
jmp
scas
clc
je
and
inc
add
loopne
adc
adc
cs
push
xchg
mov
mov
movs
pushf
push
add
or
not
or
je
test
ficomp
into
(bad)
and
pop
push
pop
dec
pop
push
shr
add
fwait
in
sti
ret
add
sahf
jne
add
test
lods
jecxz
xchg
and
mov
adc
dec
dec
test
pop
add
dec
mov
push
aaa
mov
mov
out
mov
pusha
test
mov
jae
sub
and
sbb
in
or
dec
repz
cmp
xchg
push
mov
pop
push
mov
ins
dec
adc
int3
and
mov
sbb
in
inc
sub
and
cld
mov
mov
xchg
fcmovbe
mov
clc
pop
ret
lods
cmc
mov
in
push
xor
mov
xchg
int
shl
sub
adc
sahf
add
ror
jo
mov
add
test
lea
pop
je
sbb
fidivr
outs
mov
dec
jbe
mov
add
pop
sbb
dec
mov
lea
cmp
or
mov
xor
test
xchg
push
lods
lock
mov
test
out
mov
inc
jns
test
outs
fs
push
cmp
push
lods
add
push
pusha
or
jmp
cli
jb
outs
dec
jbe
mov
dec
push
mov
adc
mov
mov
lods
test
mov
and
fiadd
jp
jg
retf
ficom
aas
fidiv
ffreep
int3
and
sub
call
pop
sub
add
mov
sbb
adc
xor
mov
test
fisttp
xchg
fwait
pop
xchg
add
xor
or
mov
push
jle
popa
loope
inc
daa
imul
cmp
jl
call
add
jnp
test
(bad)
xor
out
adc
or
mov
jne
in
xchg
test
push
jno
push
push
and
dec
int3
mov
dec
mov
add
iret
std
cmps
pop
mov
cmp
sub
xchg
shl
add
pop
(bad)
nop
sub
cmps
pop
cmp
mov
or
fdivr
js
jmp
xchg
inc
sub
addr16
jmp
daa
fwait
inc
or
call
ins
xchg
ins
inc
inc
icebp
sbb
sub
jno
jmp
and
adc
sub
movs
ja
lea
pop
push
cmp
mov
push
repz
mov
push
(bad)
call
cmp
pop
xor
pop
fiadd
push
sbb
jmp
xchg
sbb
add
sbb
in
pushf
jge
in
ins
ss
and
pop
inc
jecxz
aas
loop
cmp
and
sub
pop
aaa
mov
shl
mov
shl
popa
gs
and
push
jl
shl
cmp
ds
mov
mov
jg
sar
cli
fimul
mov
xchg
not
or
jns
inc
ss
or
cmp
call
dec
int3
fstp
repz
jmp
movs
inc
cdq
repnz
or
mul
sbb
in
inc
jns
dec
ds
out
daa
dec
retf
fwait
sar
or
out
add
leave
xchg
adc
fwait
pusha
pop
cmp
ins
loop
xor
pusha
leave
add
movs
xor
cwde
xlat
idiv
shr
push
jl
sbb
int
xchg
popa
outs
call
adc
dec
mov
ss
fs
sbb
repz
test
std
daa
mov
sub
(bad)
cli
call
mov
xor
or
lock
cmp
lock
icebp
scas
or
stc
cmps
fidivr
fdiv
add
pop
mov
adc
jo
(bad)
imul
add
out
test
rcl
(bad)
hlt
pop
neg
add
les
sub
std
and
inc
cmp
xchg
add
mov
les
data16
das
xchg
imul
inc
clc
jmp
add
xchg
mov
mov
(bad)
loope
popf
sbb
shr
cmp
adc
das
jg
jae
ret
mov
pusha
and
pop
les
inc
or
scas
nop
mov
dec
dec
inc
adc
push
adc
adc
cmp
jno
lods
pop
push
xor
inc
mov
add
leave
in
mov
sbb
movs
inc
dec
xor
retf
add
popa
jmp
ror
add
(bad)
or
test
cmp
mov
add
ins
shr
in
repnz
mov
mov
pusha
stos
jnp
gs
ins
lock
dec
addr16
mov
(bad)
and
mov
and
xchg
sub
imul
push
dec
leave
xor
inc
ja
or
cmps
call
inc
ss
jmp
mov
loop
in
test
mov
in
xchg
xchg
dec
dec
call
push
dec
adc
in
scas
fsubr
sub
and
push
jae
movs
mov
sub
jp
mov
ins
adc
fdiv
in
jo
lods
mov
fwait
shr
rol
test
mov
dec
ja
clc
mov
movs
rcr
push
scas
pop
fwait
loop
in
adc
bound
fmulp
rol
or
imul
jle
mov
inc
mov
adc
inc
sbb
mov
fidivr
in
retf
mov
pop
out
pusha
pusha
jno
xor
mov
arpl
mov
(bad)
aas
call
push
lds
xor
loop
jl
xchg
jno
xchg
xchg
js
and
ja
adc
sub
inc
sbb
in
mov
sbb
push
mov
iret
mov
iret
dec
sbb
jecxz
sub
cmp
jecxz
and
mov
jns
addr16
mov
popa
jg
scas
or
ins
dec
call
mov
jecxz
int3
mov
arpl
loope
mov
call
lea
jno
push
mov
(bad)
adc
and
retf
jle
aaa
inc
adc
xchg
jmp
sbb
(bad)
cmps
push
test
call
jmp
jbe
shl
jne
mov
inc
adc
xchg
ds
xor
sbb
dec
cmp
icebp
jnp
sub
adc
push
pusha
adc
sbb
or
or
jmp
jmp
mov
jmp
dec
js
stos
adc
add
int
pop
mov
in
or
ds
scas
or
pop
(bad)
push
sar
out
in
pop
repnz
mov
imul
bound
lock
cmp
and
and
popf
pop
arpl
inc
inc
aaa
pop
adc
adc
mov
inc
sar
add
(bad)
aas
ja
mov
jo
jno
(bad)
nop
lahf
outs
adc
sti
test
jnp
inc
inc
aam
movs
pop
into
mov
mov
call
cs
xlat
hlt
fisttp
ficom
cmp
call
addr16
sub
ds
and
sbb
shl
sbb
call
cmc
dec
dec
push
mov
iret
jge
pop
jg
mov
movs
(bad)
psubw
jns
mov
int3
std
push
sub
loopne
cli
inc
xchg
mov
mov
dec
(bad)
scas
daa
movs
cmps
pushf
into
dec
dec
in
shl
rol
push
push
in
loopne
dec
jne
dec
add
fwait
pop
cmp
retf
sbb
rcl
pushf
xchg
fld
xchg
and
cdq
jb
pop
outs
inc
jp
ret
adc
add
imul
das
or
in
inc
ror
data16
adc
add
push
pop
cmp
hlt
add
pop
in
pop
adc
std
mov
jb
out
jbe
call
mov
retf
cmp
scas
push
pop
jmp
out
test
cmc
xlat
pop
js
shr
inc
cmp
add
inc
in
pop
fld
out
das
imul
ss
js
seta
pop
test
loopne
inc
sub
mov
jmp
shl
test
adc
daa
popf
retf
sar
mov
lods
ret
int3
add
xchg
sub
sub
push
mov
lods
jg
cld
cmp
add
leave
adc
xlat
das
mov
pop
stc
push
fidiv
fnstsw
inc
ja
and
mov
mov
stc
dec
jb
mov
stc
push
scas
xor
push
mov
pop
fwait
xor
loop
jne
sbb
mov
dec
inc
lock
cld
mov
inc
inc
xchg
(bad)
mov
sbb
pop
push
push
bound
mov
inc
pop
xor
dec
mov
mov
adc
mov
jl
mov
iret
xchg
push
imul
sbb
pusha
or
lea
repnz
xor
test
mov
push
aad
movs
jecxz
sti
jg
imul
dec
cmps
mov
xor
push
jecxz
fdiv
pop
xor
inc
test
int3
stc
adc
retf
scas
or
ret
sub
jbe
lods
sbb
add
jbe
cli
int
add
aad
jns
mov
movs
jl
sar
sbb
lar
sbb
aam
test
idiv
jne
(bad)
xchg
mov
mov
les
mov
mov
mov
inc
movs
pop
cs
or
test
mov
push
ret
mov
and
jb
cmp
iret
jae
xchg
pop
mov
rol
ficomp
call
sub
stc
std
cmp
jno
add
or
xor
cli
cdq
sahf
lahf
or
mov
pop
repz
mov
pusha
mov
bound
adc
mov
jmp
fisubr
pop
jae
sub
inc
repz
jo
js
mov
jmp
push
addr16
adc
je
push
maskmovq
imul
xor
xlat
out
mov
cmps
adc
mov
out
jns
push
mov
mov
inc
pop
xor
mov
rcr
pop
pop
dec
call
mov
test
fdivr
dec
mov
xchg
mov
cmp
xlat
call
div
stos
adc
rol
fisttp
retf
ins
(bad)
jmp
jle
mov
or
fidiv
and
dec
xor
pop
inc
pushf
mov
adc
les
pop
push
imul
loopne
ds
hlt
push
xor
popf
or
fild
cdq
mov
xor
inc
retf
repz
int3
shl
xor
sar
nop
xchg
jae
inc
outs
aad
jns
fdiv
sbb
xor
daa
rcl
inc
cwde
push
lahf
test
and
mov
mov
xchg
and
jl
and
cli
jle
mov
out
into
imul
js
mov
mov
je
add
out
test
cmc
sub
pop
leave
add
or
adc
pop
ins
loopne
xchg
fmul
cli
sbb
rol
das
paddusw
cmp
dec
es
fdiv
jge
ret
cwd
dec
test
out
and
aam
in
pop
jo
mov
add
mov
sub
retf
jnp
push
adc
inc
inc
in
add
push
clc
call
mov
ss
adc
bound
mov
mov
popa
inc
movs
pop
dec
sbb
and
xor
inc
jg
and
adc
mov
(bad)
or
sub
mov
icebp
aam
call
push
lods
bound
mov
or
outs
mov
frstor
(bad)
cmps
xchg
iret
es
je
inc
xor
retf
and
repz
lock
pop
pop
and
test
daa
jnp
test
lods
mov
shr
test
test
cdq
or
mov
cmp
jbe
adc
jle
out
fstp
dec
outs
repz
fdivrp
bound
es
dec
sub
cmp
pop
pop
stos
test
aas
outs
sbb
cli
cmp
cld
and
int3
or
xchg
ror
and
(bad)
int
and
aaa
cli
rcl
mov
hlt
out
rol
iret
sbb
sub
xchg
gs
jmp
or
pop
pop
jmp
shl
sub
cmp
call
ins
mov
inc
sti
add
adc
dec
(bad)
test
mov
scas
out
xchg
cwde
stos
xor
inc
ret
cs
inc
dec
cs
adc
push
ror
add
jo
adc
adc
mov
fisub
push
std
in
add
inc
loope
cmp
stos
mov
movs
add
ins
mul
inc
adc
lds
hlt
jmp
(bad)
sbb
repz
in
mov
cmps
aas
xor
xor
fisttp
dec
jle
cs
sar
jo
xchg
ja
mov
int3
mov
mov
inc
cmc
and
or
push
mov
in
cmp
and
ins
je
mov
sti
bound
call
pop
sub
pop
cdq
bnd
lods
xlat
inc
pop
xchg
pusha
dec
sbb
cmp
mov
shl
push
pop
dec
dec
cmp
loopne
push
jle
stos
jb
dec
jmp
aaa
ss
sub
xchg
les
sub
daa
mov
inc
xchg
and
retf
xchg
jle
jnp
call
out
out
into
push
lahf
sbb
and
jg
aas
dec
xchg
movs
retf
daa
clc
lea
adc
mov
int
jae
lds
aad
add
repz
xor
ss
push
sbb
cmp
pop
ins
inc
cmc
popa
sbb
retf
pop
es
xor
pop
(bad)
aam
test
mov
sar
inc
cmp
lock
iret
mov
ds
popa
lea
loop
inc
lods
jno
sub
das
push
std
xor
push
or
sbb
es
in
mov
pusha
cmps
fidivr
mov
sti
push
hlt
pop
pop
and
sti
cmc
cmp
sahf
ss
cmp
inc
ret
fbstp
mov
call
jmp
xor
mov
cmp
ins
mov
repz
sbb
sub
fsub
add
fst
jl
pop
test
(bad)
aad
xchg
mov
jle
neg
daa
mov
ror
adc
xchg
out
inc
fdivr
je
cmp
inc
cld
movs
enter
xchg
cmp
mov
xchg
push
jg
mov
cwde
fcomp
sar
jmp
mov
push
je
(bad)
jns
cmp
outs
bsr
or
fs
out
nop
ss
lahf
loop
fisttp
cwde
push
or
(bad)
(bad)
movs
in
xlat
push
xlat
push
inc
call
inc
or
push
js
add
js
out
sub
iret
and
pop
mov
cmc
fs
or
pop
(bad)
fnstcw
retf
(bad)
sar
sbb
sub
add
clc
mov
xchg
add
inc
lods
push
das
aad
test
or
fs
or
outs
cmp
hlt
repnz
cdq
and
mov
shr
push
pop
les
mov
jp
pop
fisubr
retf
sbb
and
xor
pop
icebp
xor
retf
std
push
or
xor
cwde
push
sub
sbb
pusha
add
cmp
sbb
sti
inc
mov
jp
and
stos
out
fstp
cmp
or
jbe
pushf
ins
adc
adc
fistp
mov
bound
push
ins
std
jmp
pusha
cmp
pop
jge
sbb
jecxz
int
cmp
fcmove
adc
xlat
retf
pushf
retf
pop
ja
cmp
sahf
nop
pop
jg
sti
and
or
pop
mov
pop
out
push
xor
retf
test
rol
mov
cdq
xchg
xchg
push
mov
xchg
in
fcomp
idiv
neg
xlat
inc
jno
lahf
es
cmp
hlt
push
jmp
push
and
jne
inc
fdivr
xor
push
lods
in
dec
jecxz
push
movs
imul
cs
pop
add
out
sbb
fisttp
pop
aaa
jns
mov
imul
cmp
mov
idiv
xchg
shl
xchg
push
fmul
ficom
addr16
clc
and
inc
add
shr
mov
xchg
push
clc
sbb
leave
ret
mov
jl
jmp
and
add
push
in
in
fsubr
pop
test
icebp
jbe
lods
into
inc
and
pop
xor
aam
xchg
mov
cmp
jmp
push
test
icebp
stc
leave
in
or
or
xor
push
xor
push
sub
aaa
arpl
push
outs
sub
(bad)
pop
(bad)
repnz
scas
sbb
cmp
in
retf
stos
sbb
scas
push
xchg
retf
xchg
or
hlt
lods
push
xor
aam
les
gs
scas
mov
loope
out
xor
jmp
jg
cwde
inc
loope
cmp
lahf
js
movaps
cwde
cmp
jp
cmc
stc
int
les
xor
dec
or
xlat
or
mov
loop
xor
mov
scas
sbb
xor
mov
add
mov
je
ficom
pop
adc
int
aas
enter
inc
cs
push
or
or
cs
push
stc
pop
mov
js
jp
movs
fnstcw
or
add
and
fisubr
add
ret
lds
fstp
xchg
scas
ss
and
dec
mov
nop
sub
and
stos
ss
test
lods
mov
or
dec
xor
jb
pop
je
cmp
xor
ret
mov
outs
iret
or
adc
add
or
ror
add
popa
inc
sbb
fdivr
int
xor
mul
mov
mul
mov
xchg
aas
sbb
pop
mov
adc
cmps
int3
inc
mov
call
sub
fmulp
fst
test
sbb
xchg
sub
aad
sbb
test
in
add
(bad)
cli
fadd
das
mov
xlat
les
mov
cmp
call
or
push
add
or
or
mov
mov
inc
push
int3
pop
mov
js
int3
rcr
pop
jmp
fwait
or
cmps
mov
ins
inc
fucomi
push
cmp
mov
xchg
shr
int3
dec
ret
mov
rol
(bad)
xlat
xchg
aad
mov
add
ror
mov
sbb
push
in
mov
mov
cmc
(bad)
ss
test
stc
nop
pop
jecxz
iret
popf
mov
sub
jmp
div
sbb
xchg
xor
leave
call
data16
retf
lds
inc
mov
mov
fistp
cs
pusha
retf
lock
mov
imul
xchg
mov
clc
sahf
popa
fldcw
mov
jae
lea
xor
jmp
sub
cmc
push
icebp
mov
pushf
dec
mov
jecxz
fwait
add
pusha
shl
lea
ss
pop
jmp
mov
jecxz
pop
pmaxub
mov
movs
ret
jmp
mov
sub
jno
or
fcom
stc
add
push
and
mov
mov
mov
not
sbb
outs
dec
sbb
sbb
adc
jbe
mov
jl
test
nop
ret
pushf
push
(bad)
je
lods
pop
push
gs
ss
sti
push
dec
adc
mov
mov
mov
pusha
std
aas
sbb
fisttp
push
jno
xor
hlt
or
retf
ins
call
mov
lods
stos
pusha
pop
cmp
lds
js
mov
retf
sub
pushf
ret
jbe
(bad)
cmp
div
cmps
stc
inc
jo
(bad)
xchg
sub
mov
push
inc
mov
mov
dec
mov
mov
stc
inc
mov
dec
and
xor
test
loope
fist
call
and
(bad)
jb
or
out
nop
jbe
cmp
mov
pop
cmps
jno
dec
jge
rcr
fiadd
xchg
sub
push
mov
je
cmp
add
mov
pop
mov
fistp
sub
aaa
cli
sub
inc
outs
xchg
(bad)
sub
push
ja
idiv
mov
sub
or
stc
test
xor
and
lock
mov
inc
ficom
add
shr
mov
jns
repnz
jmp
adc
(bad)
push
cwde
jmp
loope
cmps
ds
add
mov
push
jl
fild
data16
inc
test
mov
inc
mov
nop
pop
inc
in
pop
dec
sub
jo
lahf
and
mov
pop
dec
or
je
ja
pop
aam
or
out
push
popa
int3
push
out
xchg
jbe
sbb
into
adc
xchg
xchg
fimul
movs
das
adc
xor
xchg
ins
clc
add
ins
ins
jl
enter
add
sub
jo
mov
ret
push
cmc
cld
add
jecxz
inc
pop
fs
jl
sbb
mov
mov
sub
test
in
call
xor
push
(bad)
out
jne
scas
dec
xchg
xor
and
pop
push
les
add
aad
out
xor
push
mov
inc
ja
in
xchg
jl
sub
fist
je
inc
xchg
xor
cli
xchg
mov
cmovl
jl
repnz
xchg
jle
xor
dec
jo
stos
cmp
and
das
cmp
ret
mul
mov
and
das
inc
fsubr
xlat
sub
jecxz
out
jb
push
les
pusha
imul
or
shr
ds
mov
jp
fs
push
pop
fisttp
fnstenv
push
push
into
lods
mov
repnz
das
mov
aam
adc
and
lods
out
imul
enter
and
mov
gs
pop
add
jg
dec
cmp
or
loopne
mov
stc
bound
stos
cld
pop
sub
cld
jns
ror
xor
fiadd
inc
jne
xchg
das
(bad)
int
rol
aam
int3
cmp
and
mov
xor
cmp
xchg
mov
jns
ins
xor
mov
mov
sub
das
cld
jne
sub
(bad)
mov
push
mov
jge
sub
addr16
imul
cdq
mov
xchg
pop
gs
int3
popa
out
not
fmul
mov
or
sbb
stos
mov
mov
push
clc
inc
dec
and
dec
jecxz
loop
sub
dec
js
pop
mov
inc
out
inc
and
adc
dec
inc
out
jnp
cmp
gs
pop
dec
(bad)
ja
jp
mov
fild
mov
jl
test
dec
or
imul
vaddpd
daa
cwde
adc
inc
fcom
sbb
enter
jbe
loop
jle
add
xor
sub
in
movs
jg
cmp
sbb
lods
loop
xchg
pop
jmp
add
jmp
ja
pop
(bad)
clc
and
jle
add
sub
mov
mov
ret
adc
dec
mov
sbb
(bad)
jb
push
es
xchg
xor
outs
or
(bad)
pop
mov
push
cwde
inc
pop
dec
cmp
scas
cmp
jp
adc
bnd
pop
xchg
dec
mov
pop
scas
or
fs
xlat
sahf
sbb
mov
rcl
fwait
loopne
push
pop
inc
repnz
pop
pop
jbe
rol
pop
xchg
mov
sbb
push
sub
or
jnp
or
daa
xor
shl
dec
test
jp
or
rcl
enter
imul
sub
cmp
(bad)
cli
call
dec
fistp
lods
mov
xor
in
inc
loope
jae
sbb
not
cli
loope
test
loopne
xor
xchg
inc
and
jge
and
cmp
hlt
lods
nop
cwde
adc
cmp
lods
jne
or
sbb
mov
xchg
stos
test
loope
fucomp
call
scas
stos
mov
(bad)
mov
cmp
pop
adc
mov
add
(bad)
lock
push
ss
add
or
shl
or
mov
push
mov
pop
add
imul
je
loope
mov
push
push
mov
mov
push
dec
cmp
imul
lock
(bad)
pop
push
sub
ins
and
jb
cli
xchg
ins
jp
push
xchg
test
jo
(bad)
rcr
rol
add
jp
sub
pop
test
(bad)
out
inc
push
add
sar
sbb
std
xor
inc
ss
out
push
sub
das
popf
shl
inc
jmp
sub
addr16
push
ror
pop
xor
jp
pushf
or
inc
sbb
sbb
rcr
outs
push
mov
lods
clc
push
dec
(bad)
mov
xchg
xor
and
add
leave
jae
sti
shl
mov
sbb
daa
stos
ins
int3
or
xor
xchg
mov
scas
retf
loop
js
add
scas
xor
jb
inc
gs
hlt
xor
test
adc
pop
daa
inc
fwait
sahf
xchg
cdq
fidiv
mov
(bad)
sahf
adc
lods
pushf
and
out
dec
(bad)
xor
mov
pop
xor
lods
xchg
cmp
cli
cmp
xchg
push
int
leave
in
mov
in
(bad)
aas
fs
cmp
inc
mov
popa
inc
inc
dec
mov
adc
psubb
retf
das
mov
push
lea
mov
pop
and
hlt
clc
scas
push
push
int3
popa
jp
ret
repnz
mov
cmc
ja
jge
push
inc
adc
loopne
mov
or
aad
mov
(bad)
mov
fmul
idiv
imul
jns
mov
dec
push
mov
mov
mov
aas
gs
jne
in
pop
cmps
dec
jg
sub
inc
xchg
mov
xor
mov
jnp
cmp
xlat
pop
and
cld
and
xchg
cli
ret
sbb
mov
les
sub
add
int
xchg
loope
pop
dec
pop
adc
mov
push
jno
jns
and
adc
pop
fwait
jno
(bad)
sub
add
inc
or
je
mov
mov
je
mov
fcomp
test
test
xchg
pop
xchg
jo
inc
addr16
xchg
int
jbe
outs
mov
retf
push
in
es
mov
pop
pop
nop
mov
popf
ss
in
data16
retf
add
cmps
xchg
and
ror
ins
push
mov
in
in
cmps
push
sub
in
pushf
stos
scas
mov
in
nop
int3
or
mul
mov
cmp
xor
mov
enter
ficomp
sbb
cli
xor
sbb
in
mov
cmc
sbb
int
xchg
sub
retf
stos
mov
adc
adc
jnp
repnz
sub
xchg
adc
jbe
or
idiv
and
dec
mov
out
arpl
adc
daa
push
int
loope
les
sahf
mov
scas
xchg
call
aas
mov
repnz
pop
mov
xlat
in
mov
pop
outs
shr
enter
xor
push
push
pop
test
xchg
xchg
adc
ins
sub
mov
and
jp
(bad)
mov
stos
xchg
sbb
mov
pop
cld
(bad)
call
sbb
sbb
cmps
jge
sub
scas
push
push
mov
and
lock
fcmove
dec
xchg
ret
dec
test
xchg
inc
retf
rol
pop
fcomp
dec
imul
ins
fucomi
sbb
push
fcmovu
std
push
addr16
mov
sbb
xor
cdq
(bad)
mov
add
push
pop
(bad)
push
mov
jno
xchg
jecxz
test
(bad)
mov
cmp
mov
fisttp
movs
int
shr
mov
cmp
xchg
es
mov
or
push
lahf
mov
pop
sbb
sbb
or
inc
jb
outs
mov
mov
xchg
stos
mov
mov
xchg
loope
jecxz
dec
mov
out
pop
scas
idiv
rol
add
xchg
push
push
imul
sbb
push
mov
pop
mov
sbb
lods
mov
pop
add
mov
icebp
mov
ja
xchg
dec
adc
push
ss
mov
js
jne
mov
inc
push
arpl
sub
addr16
dec
or
sti
mov
sahf
add
ja
loopne
and
push
retf
jno
jbe
loop
dec
jge
repz
int
int3
mov
mov
pop
and
xchg
ins
fcom
ja
ror
cmp
jge
sub
sub
into
sbb
xchg
js
imul
aad
xchg
sub
xor
rcl
jo
call
fmul
jb
mov
or
inc
sbb
add
dec
mov
xor
mov
lock
bound
stos
ins
outs
jmp
xchg
xor
scas
jecxz
test
repnz
ret
xchg
xchg
mov
mov
push
xor
mov
jge
xor
sbb
mov
sub
push
retf
clc
daa
cmp
jmp
call
scas
nop
cmp
jns
jmp
cli
aas
and
lock
mov
clc
mov
jns
ins
jmp
mov
mov
call
or
adc
add
popf
fisttp
and
out
or
mov
retf
pusha
daa
push
retf
cmp
stos
outs
dec
xchg
scas
fld
adc
and
inc
inc
inc
fst
mov
pop
pop
rcr
je
les
mov
out
dec
dec
lods
push
mov
faddp
adc
jbe
leave
mov
or
jge
or
imul
adc
shl
jp
mov
ror
push
xlat
jb
test
popf
sbb
push
inc
test
test
or
mov
sbb
(bad)
mov
aad
xchg
addr16
push
and
fs
sahf
fsub
jle
dec
pop
mov
pushf
adc
mov
(bad)
mov
pop
fidivr
lods
mov
dec
stc
mov
push
xchg
pop
(bad)
in
pop
mov
(bad)
jmp
push
call
dec
push
mov
fidiv
xor
popa
adc
mov
jge
lock
push
dec
loope
cmp
jg
push
jle
test
in
in
mov
cmp
jge
mov
jnp
sbb
mov
rcl
jae
push
hlt
fdivr
xor
movs
jae
mov
fmulp
sbb
or
or
cmc
das
push
cwde
pop
not
loope
xchg
retf
push
leave
jmp
ins
add
ins
push
dec
pop
push
cmp
add
jmp
ret
mov
cmps
fcomip
sbb
dec
cli
test
shl
pop
out
mov
and
imul
mov
aas
data16
cmps
aas
in
pop
out
dec
sub
mov
(bad)
or
inc
fld
cmp
push
lds
cmp
xchg
mul
inc
inc
push
mov
lods
inc
shl
adc
jbe
and
js
stos
mov
jmp
xor
sti
arpl
jle
call
cmp
pop
ret
push
and
test
out
dec
lea
inc
test
lock
cmp
out
repnz
inc
into
jo
aam
cmps
dec
mov
inc
dec
xchg
inc
scas
and
adc
adc
push
das
fidivr
popf
push
or
bound
scas
cld
and
fadd
fs
in
pop
aaa
das
sti
sub
sub
ins
popa
repz
mov
inc
inc
mov
mov
loope
fcmovnu
rcl
stos
shl
call
ins
adc
lods
lock
mov
mov
int
push
fs
int3
xchg
pop
push
pop
mov
addr16
push
(bad)
out
push
dec
loop
test
(bad)
inc
push
add
mov
ja
add
idiv
inc
iret
jge
xchg
in
pop
xchg
mov
mov
sub
mov
pop
jns
repnz
fistp
loope
rcl
cld
mov
and
mov
mov
aad
call
inc
sub
push
(bad)
int
dec
repz
push
stos
sub
jp
daa
(bad)
jle
jmp
push
xchg
pusha
cmp
mov
mov
mov
mov
out
sub
or
fs
push
add
cmp
ror
mov
xchg
xchg
pop
popf
mov
(bad)
push
(bad)
(bad)
iret
jbe
retf
mov
cmc
in
jne
inc
mov
xor
scas
jb
push
adc
xchg
or
mov
pop
mov
aam
push
rcr
aas
test
sub
mov
inc
sbb
pushf
mov
icebp
sti
stos
mov
ins
shl
lahf
mov
xchg
sub
cmp
dec
fucomip
pop
fwait
cwde
jmp
push
adc
sahf
nop
(bad)
sub
push
out
xchg
xchg
imul
fsubr
or
out
push
fnsave
out
dec
xor
sbb
pop
(bad)
add
pop
pop
sti
js
xor
shl
movs
imul
sti
test
mov
lods
lds
pop
mov
movs
mov
stos
pop
xchg
mov
or
stos
pop
mov
mov
mov
sbb
dec
repnz
push
sub
inc
mov
jmp
jnp
push
mov
mov
dec
mov
push
and
sub
out
retf
aam
push
pop
pop
mov
in
pop
pop
sub
mov
mov
xchg
fdivr
pop
inc
lock
leave
add
retf
cmp
shl
sbb
lods
call
mov
jb
mov
and
test
retf
jnp
mov
nop
in
pop
cli
clc
sahf
mov
scas
dec
pop
pop
inc
scas
ds
loope
inc
dec
push
mov
or
mov
pop
push
push
(bad)
fidivr
mov
push
movs
adc
and
cmps
pop
fdivr
xchg
add
ret
cdq
and
jb
push
fdivr
push
sub
ror
xor
sub
loop
cld
aam
dec
or
xchg
cmp
cmp
ja
addr16
mov
mov
arpl
pop
pop
add
cli
shl
call
shl
and
loopne
and
jbe
sbb
out
sahf
ret
jbe
jge
or
fnsave
outs
(bad)
in
cwde
xchg
(bad)
xchg
outs
adc
push
add
ja
fstp
sbb
cmps
jmp
inc
push
pop
test
jmp
enter
out
lahf
sti
outs
imul
jns
sub
jb
repnz
(bad)
shl
fs
mov
dec
mov
fwait
mov
imul
pop
repnz
add
or
dec
mov
(bad)
sar
shr
adc
push
adc
sub
shl
mov
mov
sub
pusha
dec
pop
das
push
and
ror
je
inc
lahf
fidivr
movs
enter
(bad)
std
cmps
cs
ret
sbb
dec
js
pop
out
mov
das
movs
stos
hlt
fistp
fisub
stos
add
call
fwait
movs
xchg
das
jnp
and
cmps
lods
lds
push
pop
jne
jle
ror
stos
jno
imul
movs
xchg
loopne
loop
mov
retf
mov
cld
sub
mov
jo
shl
jg
sbb
mov
pop
movs
cmp
stc
les
in
push
les
cld
pop
cmc
pop
bound
cmc
clc
sbb
popa
movs
mov
mov
sub
ja
xor
retf
fcmove
idiv
test
cmp
(bad)
adc
dec
or
or
pop
not
cmp
shl
xchg
add
fadd
pop
mov
aam
ins
xchg
xchg
daa
or
cmps
test
out
or
push
xor
outs
out
mov
pop
bound
adc
inc
js
dec
fsub
xor
sbb
enter
mov
fimul
xor
mov
(bad)
test
fdiv
xchg
jo
cmps
push
mov
dec
pusha
mov
hlt
jae
or
out
test
inc
and
dec
in
xchg
mov
adc
inc
mov
test
cmp
push
xor
jg
iret
xlat
jo
dec
out
loope
out
xchg
pop
cmp
shl
test
sbb
mov
out
pop
stos
loop
out
push
std
mov
enter
push
mov
mov
push
aas
jno
jb
cmp
sub
mov
cwde
dec
push
xor
loop
jne
push
fdiv
fistp
xchg
xchg
push
inc
movs
mov
push
inc
or
sbb
hlt
jae
or
xchg
mov
push
movs
pop
add
xchg
adc
jg
mov
or
xchg
push
dec
addr16
or
add
mov
sbb
mov
rcr
mov
jp
push
jb
fsubr
outs
fstp
xor
lahf
mov
lock
pop
fdivrp
push
fcomp
pop
adc
stos
sar
pop
cs
mov
mov
rol
in
sbb
daa
lahf
pop
pusha
int3
adc
js
rol
inc
retf
sahf
push
sub
pop
shl
mov
push
int
cmp
inc
out
xchg
(bad)
in
ins
mov
enter
js
fisubr
push
out
inc
jge
in
test
dec
cmps
je
gs
sbb
shl
cdq
sbb
pusha
inc
lods
sbb
inc
int
mov
fldenv
cdq
and
aaa
cmp
retf
ror
and
movs
mov
dec
icebp
int3
mov
je
push
sbb
and
call
mov
mov
mov
cmps
sti
and
or
out
fsubr
neg
adc
xchg
(bad)
scas
add
mov
shr
adc
mov
mov
imul
arpl
inc
inc
daa
cmc
mov
jge
mov
sub
icebp
adc
mov
cmp
sbb
fdivr
retf
xchg
test
xor
or
scas
add
inc
jp
rcl
imul
outs
retf
pop
call
ret
imul
mov
or
test
adc
emms
pop
hlt
xor
xlat
fwait
lods
repz
cwde
imul
mov
pop
and
push
aaa
ss
mov
jl
mov
inc
ins
inc
fwait
push
mov
jae
nop
cmp
cmc
pushf
fidiv
cmps
loop
jb
mov
rcr
mov
repz
pop
inc
fs
and
movs
ja
inc
push
xchg
mov
retf
xchg
loop
sbb
xchg
neg
movs
ins
sbb
fmul
push
adc
jg
scas
pushf
xchg
sbb
bound
push
sar
das
cdq
jne
cdq
jae
(bad)
jmp
icebp
pop
sub
shl
sub
(bad)
dec
push
sbb
ja
mov
shl
push
cmp
and
sbb
jno
call
test
cwde
rcl
scas
imul
test
pop
pop
jl
inc
daa
(bad)
and
loopne
inc
adc
jne
enter
ja
cld
icebp
aaa
(bad)
mov
sahf
pop
push
or
mov
shr
sbb
das
(bad)
stc
or
mov
sbb
nop
xchg
aaa
or
push
pop
aaa
sbb
mov
push
(bad)
les
mov
push
cmc
jae
mov
pop
xchg
jno
stos
sbb
cmp
scas
(bad)
ins
cmp
adc
and
pop
aaa
sbb
push
bound
int
push
cmc
outs
sub
inc
mov
inc
sub
jg
fstp
sbb
xor
mov
mov
push
shl
aaa
int
jb
or
sub
ss
sti
jne
(bad)
mov
lahf
das
adc
adc
lods
(bad)
fdecstp
neg
or
(bad)
icebp
das
int
sbb
in
adc
das
sahf
mov
int3
pop
xchg
jmp
cmp
xchg
cmp
(bad)
retf
bound
(bad)
cmp
addr16
adc
das
sbb
adc
fs
aad
dec
rcl
xor
iret
and
push
dec
mov
addr16
xchg
sub
imul
or
int3
xchg
inc
jne
fsub
int
icebp
push
ss
mov
jge
mov
cmp
dec
adc
mul
add
push
stos
sub
cmps
iret
out
popf
mov
mov
outs
(bad)
inc
int3
dec
sub
mov
jle
in
imul
or
pop
cwde
xor
or
mov
sub
out
cmp
jp
mov
mov
dec
lods
imul
inc
or
push
es
fwait
cmp
int
sub
lea
hlt
sub
outs
sub
and
(bad)
sub
adc
pop
lahf
xchg
sbb
movs
xchg
jmp
imul
stos
dec
sub
ds
jbe
sti
aaa
sti
sub
mov
xchg
push
mov
lahf
nop
sub
(bad)
pop
lock
aaa
sbb
mov
retf
stos
imul
adc
(bad)
nop
imul
xor
inc
jp
ror
inc
adc
xor
sbb
or
fcomi
lock
outs
xor
jnp
mov
les
hlt
outs
add
push
int
in
push
dec
pusha
(bad)
and
sbb
(bad)
addr16
mov
lock
retf
mov
mov
cs
movs
mov
mov
cmp
addr16
enter
cwde
lods
out
inc
(bad)
dec
jo
adc
daa
clc
int3
jg
cmp
loop
xchg
adc
pop
jae
jmp
and
xor
sbb
pop
jo
sahf
mov
cmp
sar
pop
mov
and
sbb
jmp
mov
xor
lods
or
jbe
bound
aam
mov
popf
aas
fdivr
pop
js
push
push
lahf
dec
add
mov
mov
push
cmp
mov
inc
outs
fldcw
inc
stc
pushf
push
or
mov
and
int3
out
sbb
and
fs
repnz
mov
pop
mov
lods
xor
nop
scas
movs
scas
cmp
ins
xor
in
dec
mov
xchg
jns
in
mov
push
xchg
in
sahf
xchg
push
add
mov
push
xor
dec
shl
jae
cli
jbe
mov
outs
stos
pop
fs
(bad)
lds
loope
and
lds
(bad)
fmul
pop
sub
addr16
sbb
mov
fsub
addr16
mov
sbb
jmp
dec
aas
cmp
xchg
sub
aam
cmp
rol
sbb
adc
dec
pop
and
imul
add
call
mov
xor
outs
aad
xchg
pop
push
sbb
imul
fild
(bad)
in
test
es
jmp
add
xor
in
fstp
call
dec
sub
fist
fldcw
fidivr
ret
push
cmps
in
sub
jg
shr
xchg
push
mov
fsubr
(bad)
xchg
ss
dec
xor
xchg
cmp
xchg
push
out
sbb
jns
xor
das
xlat
adc
arpl
push
jle
cmp
dec
sbb
test
or
retf
mov
and
data16
sbb
sub
mov
inc
leave
repnz
sbb
(bad)
(bad)
pop
xchg
fstp
dec
xchg
(bad)
pop
call
je
mov
and
test
lahf
aam
es
jmp
inc
bound
jnp
jne
js
sub
push
div
xchg
repnz
mov
or
sbb
dec
push
xchg
dec
nop
mov
xor
mov
push
mov
ror
imul
cmp
mul
arpl
ret
push
jmp
pop
call
add
fwait
mov
shl
pop
jae
xor
adc
mov
mov
add
cmp
push
popf
icebp
stos
sub
fstp
cwde
mov
sub
and
push
(bad)
cmp
or
mov
shl
or
out
scas
sti
fwait
scas
repnz
cld
ss
adc
dec
push
imul
inc
sub
dec
sbb
jns
(bad)
push
idiv
mov
adc
movs
fwait
pop
jnp
arpl
ds
jne
sbb
mov
ficomp
retf
popa
movs
pop
and
hlt
out
cmp
js
outs
and
out
jno
cs
call
mov
add
scas
int
sub
mov
vrcpss
stos
sub
dec
(bad)
mov
(bad)
shr
pop
xchg
mov
ins
clc
dec
inc
ror
adc
or
fst
dec
mov
mov
mov
call
xor
pop
fs
rcl
xchg
mov
pop
push
mov
pop
xor
sub
add
js
pushf
ins
mov
push
mov
ss
push
push
jbe
fimul
pop
mov
pop
ja
imul
call
cmp
dec
adc
aas
fwait
dec
test
inc
mov
and
mov
cmp
push
pop
ins
push
cmps
cmp
or
lahf
loop
int3
push
jb
in
(bad)
xchg
mov
cli
out
push
inc
ds
mov
loop
xchg
ins
into
mov
inc
jns
fdivr
dec
sar
inc
jns
arpl
xchg
pusha
mov
dec
or
push
mov
and
hlt
jecxz
ret
and
xchg
mov
iret
fwait
lahf
jecxz
or
imul
pop
sbb
and
fwait
lods
mov
add
call
data16
add
xor
jno
fmul
(bad)
mov
outs
mov
dec
mov
or
int
rcr
push
sub
aad
push
jp
cmps
lock
sub
jle
pop
inc
ror
push
add
pop
in
imul
jge
in
repz
scas
mov
add
add
or
lahf
cmp
fld
xor
cmp
pop
mov
outs
or
test
int
aaa
(bad)
fstp
xlat
in
cmp
jl
and
mov
pop
push
shr
(bad)
out
xchg
or
retf
adc
js
jno
mov
rep
lds
dec
push
outs
mov
xor
mov
mov
test
mov
xchg
loop
sbb
cs
nop
mov
jge
inc
xor
pop
lahf
xchg
div
jmp
jbe
int
cmc
push
mov
mov
out
and
push
xchg
test
shr
add
enter
dec
mov
mov
inc
mov
inc
add
push
jbe
cmps
fs
scas
cmps
or
pop
dec
fs
sbb
std
add
movs
out
pop
int3
jge
inc
ss
or
mov
and
fadd
repz
dec
xor
cmps
or
ins
xchg
xchg
pop
scas
call
mov
mov
inc
jmp
std
xchg
dec
popa
fidiv
sahf
adc
in
cmc
pop
(bad)
adc
mov
inc
test
jno
add
and
mov
and
movs
sub
jb
pop
xor
adc
lock
jge
ins
mov
lods
inc
xchg
pop
push
int
and
inc
add
out
xchg
sbb
dec
and
test
leave
mov
adc
push
mov
shl
dec
int
mov
das
cmp
es
fcom
inc
movs
pushf
cmp
fnstcw
cmp
addr16
inc
scas
mov
test
test
xor
aam
push
shl
mov
mov
fist
or
in
jne
inc
mov
movs
inc
lahf
add
leave
je
leave
sub
xchg
mov
push
(bad)
mov
icebp
ja
mov
add
jne
xor
hlt
ds
fstp
call
sub
loop
pop
pop
inc
ret
test
das
jne
mov
lds
mov
out
pop
icebp
adc
mov
jnp
pop
(bad)
jmp
lahf
shr
and
add
bound
jg
ins
push
adc
push
pusha
in
inc
repz
jns
popa
inc
or
or
or
mov
ret
cwde
and
(bad)
pop
ror
fadd
repnz
mov
pushf
js
mov
pop
inc
test
icebp
pop
mov
repz
dec
jo
ja
and
adc
ror
popf
push
rcl
dec
inc
ss
jae
inc
fsubr
or
xchg
aas
int
mov
dec
out
cs
push
cld
jb
sbb
or
add
out
sbb
push
jbe
(bad)
cmp
rol
push
and
jb
fisttp
sbb
retf
mov
mov
jb
call
sbb
je
jns
jp
push
adc
ret
xor
popa
frstor
or
sbb
outs
in
pop
pop
shr
cdq
outs
push
test
lock
aad
fld
call
pop
fidiv
xor
nop
xor
mov
pop
arpl
(bad)
movs
push
jno
addr16
xchg
inc
aad
lds
fistp
lds
xor
cli
or
shr
stos
jl
stc
add
dec
xor
outs
scas
loopne
inc
(bad)
mov
pop
or
sbb
add
adc
lea
iret
mov
adc
push
xor
arpl
out
dec
dec
and
pop
in
sbb
retf
in
clc
jbe
bound
fistp
dec
repz
lods
xchg
fcom
repnz
ins
pop
mov
out
aaa
dec
fwait
(bad)
mov
push
jnp
shr
sbb
(bad)
dec
mov
paddusw
xor
dec
jno
sti
xchg
pop
mov
xchg
hlt
movs
mov
outs
push
cmps
scas
mov
dec
mov
pop
into
add
bound
adc
or
mov
push
pushf
cmp
sub
mov
imul
jno
xor
ss
dec
fimul
xor
in
sbb
mov
dec
leave
ss
xlat
out
rcr
mov
retf
les
add
sub
mov
jmp
dec
scas
nop
pop
inc
fiadd
jnp
outs
ins
xor
jnp
les
mov
lahf
je
inc
popa
jnp
add
jge
sbb
dec
jmp
sbb
inc
out
jge
pop
mov
cld
pop
cmp
call
mov
sbb
lea
pop
lahf
(bad)
popf
adc
push
enter
(bad)
mov
jns
scas
mov
mov
cmp
mov
adc
int3
mov
jp
dec
loope
nop
push
cmp
stos
jb
mov
adc
out
retf
sbb
mov
xor
ret
xor
test
data16
pop
and
test
scas
add
or
or
dec
pop
das
sub
push
pop
call
cwde
and
das
cli
pop
push
lea
fldenv
jle
inc
lock
es
push
cmp
retf
popa
jmp
gs
mov
mov
repnz
retf
push
adc
fldenv
push
xchg
loop
push
repz
ss
inc
das
mov
fs
mov
mov
or
xchg
mov
idiv
pop
jp
sbb
mov
cmp
cdq
jnp
inc
xchg
shl
sub
aas
lahf
jecxz
adc
loope
xchg
xor
leave
mov
icebp
ret
sub
jmp
jno
addr16
mov
pop
jb
or
push
jns
scas
popf
shl
sar
js
call
add
jno
loopne
daa
sti
inc
and
mov
repz
in
pop
pop
fdiv
jp
retf
add
xor
sbb
cdq
pop
inc
repz
test
mov
pusha
inc
jp
ret
imul
ins
jae
mov
cwde
sbb
call
xchg
cdq
push
imul
bound
mov
gs
add
shl
xchg
scas
in
sti
push
pop
loope
clc
jge
dec
in
cs
push
bound
or
mov
mov
js
inc
pop
mov
or
aam
mov
popa
sbb
fild
mov
xchg
(bad)
xor
bound
push
cwde
cmc
xor
in
call
das
xor
sbb
retf
jnp
cmps
add
push
jle
mov
sub
mov
push
cmp
mov
mov
jb
jle
ret
out
in
lock
xor
and
fst
dec
mov
les
jno
aaa
mov
push
xor
and
hlt
je
inc
or
sbb
push
xor
cdq
add
jg
cs
dec
loop
xlat
mov
stos
pop
dec
sub
in
in
in
inc
dec
sbb
pop
sahf
inc
aas
push
cld
adc
cmp
xchg
std
int
neg
inc
xor
push
mov
push
sub
(bad)
je
cwde
dec
inc
add
jl
adc
mov
fs
loope
mov
retf
in
xor
adc
scas
fcom
inc
ja
cmp
retf
mov
mov
test
xchg
xchg
mov
test
sub
jb
xor
lods
(bad)
ins
mov
icebp
fstp
add
outs
jo
loopne
pop
out
pop
lock
sbb
inc
cli
and
lods
inc
mov
and
adc
fwait
out
dec
sub
call
or
dec
jl
jmp
and
sbb
inc
xchg
mov
(bad)
stos
and
(bad)
cmp
test
add
push
sbb
pop
stc
fldenv
clc
jmp
mov
clc
rcl
div
icebp
test
cmps
add
popf
dec
in
adc
dec
sbb
popa
add
and
bound
sbb
scas
dec
pop
cli
mov
ja
stc
cmp
lock
or
out
sbb
js
mov
sbb
dec
jb
cmp
test
cmp
aas
add
cwde
popf
fisubr
inc
test
ret
sahf
add
ins
lds
mov
cmps
in
fwait
add
sbb
push
push
xchg
imul
fbld
mov
push
inc
pop
ins
inc
stos
mov
in
bound
test
push
sahf
mov
xor
jns
push
jae
(bad)
into
int
push
push
mov
dec
out
mov
out
pop
sbb
aam
jp
push
pop
xor
es
xor
jmp
imul
(bad)
test
(bad)
into
cs
cmc
aaa
add
call
adc
repnz
add
mov
xchg
sbb
mov
(bad)
xchg
(bad)
leave
adc
call
jmp
fnstenv
test
fwait
and
and
movs
cmp
inc
test
dec
enter
out
cmc
(bad)
jmp
mov
push
adc
xor
mov
fisubr
xchg
cmp
je
into
es
mov
or
lea
leave
cmp
inc
mov
push
stos
sub
dec
in
fstp
cmps
cmp
jmp
xchg
sbb
in
xchg
stc
out
aam
cmps
stos
sbb
mov
nop
jb
inc
dec
and
outs
xchg
sub
jg
xor
dec
loop
adc
or
lods
jmp
jecxz
pusha
movzx
xor
shl
xchg
cmp
add
in
mov
and
out
retf
fsub
mov
mov
and
dec
jmp
out
stc
push
repnz
icebp
adc
arpl
push
jmp
cmp
arpl
out
shr
dec
fwait
dec
inc
addr16
into
adc
clc
dec
xor
push
push
loopne
mov
jmp
mov
dec
push
mov
cwde
cld
(bad)
loope
mov
add
xchg
int
in
add
xchg
outs
sbb
addr16
mov
pop
xchg
pop
shl
pusha
iret
icebp
enter
fsub
adc
push
addr16
inc
mov
jle
xor
call
mov
mov
ret
or
shl
or
or
jns
sahf
cli
xor
imul
inc
fnstcw
mov
sub
push
xor
ja
loope
loopne
ss
retf
push
mov
mov
pop
sub
sbb
xor
cmp
in
cmp
fsubr
mov
pop
das
push
mov
inc
mov
mov
fs
jp
xchg
sbb
and
fcomp
icebp
pop
cld
jno
xor
mov
sahf
test
sub
jnp
xor
push
test
or
out
xchg
push
sbb
add
xchg
ds
ficomp
cs
imul
adc
cmc
cli
out
push
pop
mov
or
mov
sbb
aam
shl
clc
xchg
and
sbb
push
sahf
leave
pop
fcom
(bad)
rol
scas
int
idiv
sbb
xchg
inc
out
adc
fadd
ja
imul
sti
jo
ret
fcomp
add
xor
jns
jle
mov
mov
mov
fwait
xor
jo
dec
in
sbb
popf
into
dec
sti
outs
fdivr
jmp
mov
cmp
inc
mov
addr16
and
in
or
ds
ss
cmp
add
hlt
mov
jne
jle
sub
je
rol
cmp
jp
ja
cmp
cmp
add
not
cdq
dec
pusha
fst
pop
xchg
in
popa
hlt
jns
mov
imul
sar
mov
sar
mov
and
add
and
jmp
jl
(bad)
sahf
clc
cdq
ds
push
int
in
(bad)
sub
jno
dec
mov
inc
sbb
xor
push
jbe
shl
xchg
icebp
cmp
and
test
fld
dec
enter
rcr
add
pop
retf
cmp
push
add
scas
sub
jno
ja
arpl
jge
cmp
into
sar
adc
dec
or
add
cdq
je
pop
inc
jo
arpl
jnp
add
adc
and
shr
adc
jmp
lock
aas
push
(bad)
pop
and
jns
fstp
inc
xchg
mov
mov
pop
fidivr
pop
out
jb
test
xchg
adc
popa
xchg
mov
mov
dec
and
jo
mov
ret
dec
mov
scas
movs
nop
or
js
iret
ja
push
xor
xor
mov
retf
scas
gs
bound
xor
out
movs
cmp
aas
add
and
cli
xchg
jne
shr
addr16
call
push
rcl
int3
push
jbe
xchg
or
pushf
pop
adc
fucom
bnd
loop
or
add
fild
cmp
ins
pop
mov
xchg
sub
jns
popa
inc
es
stos
retf
adc
fwait
adc
in
cmp
enter
sbb
inc
mov
outs
pop
fisubr
iret
inc
aad
pop
adc
aad
std
(bad)
sub
jmp
rol
addr16
data16
mov
cmp
lods
adc
mov
test
inc
mov
xor
lea
push
push
bound
jl
in
pop
int
inc
cmp
jbe
sub
xchg
out
scas
data16
sahf
test
lods
aaa
hlt
clc
xchg
add
mov
ins
movs
leave
xchg
pop
call
pushf
rcl
ds
(bad)
out
cld
dec
stos
mov
xchg
inc
loope
cmc
out
jle
lock
dec
repz
jbe
push
mov
sbb
fdivr
push
xor
repnz
pop
ins
(bad)
sub
xchg
mov
rol
fisubr
mov
dec
jmp
cmc
cmp
out
sbb
cmp
pop
xchg
cmps
dec
test
cmc
mov
loop
daa
leave
jae
or
sub
mov
dec
mov
out
sbb
adc
dec
mov
cmps
sbb
stos
inc
or
out
jnp
addr16
or
sbb
and
xchg
aaa
sbb
sti
cld
mov
cwde
ret
sub
test
fwait
or
mov
push
xchg
xchg
xor
jl
ja
out
data16
or
in
call
xor
(bad)
loop
je
inc
scas
pop
cmc
lahf
retf
xor
adc
inc
mov
fild
repnz
mov
pop
call
pop
xchg
add
out
aad
(bad)
sar
xor
adc
inc
ins
movs
push
or
inc
loope
push
add
mov
and
jp
pop
mov
ret
mov
cld
fild
in
sub
stos
popa
div
xchg
in
std
adc
mov
ss
in
in
cmp
in
xchg
std
adc
imul
mov
aad
sbb
arpl
test
jl
inc
xor
clc
xlat
xor
xor
imul
cmp
fsub
call
dec
pop
xchg
jp
push
loopne
mov
test
and
outs
pushf
popa
mov
adc
inc
ss
sahf
fcom
pop
pop
loope
xor
xor
add
mov
ret
rcl
(bad)
pop
outs
pop
ja
push
jns
push
bound
fiadd
sti
movs
and
sub
sbb
push
dec
xlat
loope
sar
lahf
fwait
pop
xor
(bad)
jmp
push
adc
push
cwde
jl
bound
and
xchg
xchg
icebp
das
cmp
xchg
(bad)
cld
js
pop
push
sub
and
imul
lods
and
scas
je
repnz
mov
enter
lods
jno
xchg
lods
cmp
es
pushf
gs
mov
stos
gs
retf
jnp
and
lods
fxtract
sub
mov
out
pop
(bad)
xlat
in
call
mov
push
push
retf
jbe
or
or
movs
sbb
xor
js
sahf
rcr
xchg
in
repnz
sub
jbe
mov
arpl
sti
test
inc
sti
sti
pop
iret
mov
xor
shl
popf
(bad)
xchg
mov
add
inc
or
pop
scas
ja
add
add
mov
xchg
push
or
jae
pop
inc
mov
je
popf
into
je
dec
in
ins
and
jne
repnz
mov
xchg
jo
push
inc
push
mov
jb
inc
in
pop
inc
ins
jg
jge
cdq
pop
jecxz
repnz
in
shl
popf
inc
push
or
jne
imul
ins
cmp
and
cmp
adc
test
xchg
mov
sbb
jmp
enter
ins
xchg
shl
sub
jns
sbb
add
test
push
mov
das
cmc
daa
xor
je
or
pop
cmps
mov
les
cdq
pop
pop
inc
nop
jne
mov
adc
les
xchg
(bad)
fisub
pushf
test
shr
and
dec
std
push
cmp
popf
ret
popa
push
cwde
xlat
mov
mov
cwde
xor
out
outs
test
fsub
sbb
aam
sub
push
inc
jecxz
int
inc
enter
ins
icebp
mov
and
scas
adc
call
pop
std
sbb
aad
int
sbb
call
arpl
pop
jp
in
(bad)
pop
fst
xchg
das
fisubr
loope
mov
xchg
clc
hlt
mov
xchg
xor
pusha
dec
and
inc
cmp
out
mov
pop
hlt
sub
icebp
cmp
call
(bad)
gs
jo
adc
in
lds
jl
(bad)
adc
out
xor
mov
hlt
mov
mov
jo
int
jb
das
call
inc
push
ror
jp
xor
dec
jge
xlat
retf
(bad)
arpl
stos
jns
jmp
mov
or
sbb
jno
pop
sbb
jb
sub
dec
loopne
or
push
in
inc
mov
sub
and
call
dec
sbb
je
lea
ret
cli
add
lds
push
jl
rol
in
dec
shl
hlt
fnstcw
cwde
sbb
stos
and
bound
rol
movs
rcr
ins
or
out
xchg
mov
inc
in
jmp
call
pop
sbb
pusha
push
repz
push
adc
inc
xor
add
daa
xchg
cmc
mov
call
xor
popf
mov
aam
xor
cli
cmps
mov
test
inc
xor
fnstsw
mov
out
pop
pusha
xlat
or
mov
mov
push
mov
adc
mov
adc
inc
fwait
adc
mov
dec
bound
add
xor
dec
movs
loop
inc
in
dec
cmp
imul
and
mov
inc
dec
and
adc
push
mov
aad
mov
adc
mov
(bad)
fisttp
xchg
icebp
cmp
fnstsw
sub
pmulhw
std
add
inc
jecxz
fisttp
rcl
sub
cwde
popa
inc
inc
pusha
int
prefetchwt1
dec
rcr
xchg
jo
sub
lea
mov
sbb
add
retf
cmp
out
mov
loop
cmc
mov
vandnpd
pop
test
sbb
mov
stos
int3
sti
ins
push
pop
mov
jge
add
sti
or
das
xor
aaa
adc
adc
icebp
push
les
sub
sub
dec
sbb
xor
add
lods
rcr
dec
jp
bound
cmp
dec
sub
cmps
adc
mov
sbb
and
(bad)
adc
push
push
into
outs
inc
cmps
xchg
dec
imul
pop
xor
xor
jg
fistp
mov
bound
push
pop
inc
xor
sbb
sbb
mov
or
xchg
cld
jno
(bad)
arpl
inc
xchg
lods
(bad)
sar
sbb
cdq
outs
jle
leave
(bad)
imul
mov
sahf
into
jle
sar
inc
mov
or
in
push
mov
xchg
xchg
rcr
mov
fs
add
clc
shl
xchg
jl
ret
add
ror
xor
(bad)
adc
jmp
cs
bound
aam
and
ins
iret
hlt
fadd
jo
inc
(bad)
or
jl
(bad)
xchg
jl
enter
ins
cdq
leave
add
ins
aad
leave
(bad)
mov
std
stc
leave
jmp
xchg
jge
sub
(bad)
adc
jo
adc
int
pop
test
lock
mov
ins
or
pop
retf
jnp
push
cmp
xor
mov
dec
xchg
movs
dec
pop
xchg
sub
int
xchg
popf
mov
rcl
sbb
jmp
and
push
mov
cmp
cmp
jmp
scas
push
pop
fimul
nop
inc
shl
inc
shl
ret
jecxz
ins
cmp
fs
jg
leave
adc
sti
stc
stc
adc
fimul
out
jae
xor
pop
int
outs
inc
add
sbb
jg
jns
pop
imul
jmp
iret
out
push
popa
cmp
or
sbb
dec
in
aas
xchg
daa
jmp
add
(bad)
mov
enter
xor
pop
outs
in
mov
cmps
aam
test
js
mov
ins
test
int
clc
inc
jno
sahf
cmp
cmc
cli
test
jecxz
mov
mov
cdq
mov
jnp
mov
ja
sbb
arpl
jns
test
sbb
jbe
ja
push
xchg
jge
jp
repnz
xchg
cmp
leave
push
mov
lods
mov
push
cld
es
dec
rcr
pop
mov
ins
mov
xlat
push
mov
mov
adc
and
into
mov
sti
or
outs
inc
(bad)
dec
adc
xor
mov
call
cld
xor
sbb
lds
adc
mov
inc
sti
adc
inc
dec
xor
adc
addr16
stos
sahf
lahf
adc
lea
sub
sbb
inc
cmp
popa
imul
fst
lds
retf
lods
arpl
leave
mov
or
and
mov
cwde
imul
loop
xor
dec
ins
mov
(bad)
imul
push
mov
xchg
mov
movs
fstp
inc
pop
cmp
test
out
dec
jg
mov
ret
sar
loop
icebp
jle
jnp
repz
xor
fadd
call
repz
mov
mov
(bad)
mov
push
repz
push
push
push
outs
cmp
int
dec
pusha
fistp
(bad)
mov
xor
xor
in
mov
add
sti
call
rcl
and
mov
sub
fldenv
pop
mov
mov
(bad)
sbb
js
mov
das
pop
xchg
test
scas
cmp
cmp
push
sbb
aam
gs
mov
and
movs
xchg
inc
cmp
imul
inc
push
push
stos
cwde
dec
mov
cmps
push
mov
xor
cmps
cdq
push
jmp
scas
test
xlat
outs
inc
out
int
in
(bad)
(bad)
add
outs
mov
mov
rcl
lahf
loopne
dec
scas
inc
sub
imul
push
add
xor
dec
iret
cmps
inc
xor
xchg
cmp
imul
sbb
adc
aam
and
jno
nop
add
dec
push
mov
cmp
mov
and
es
adc
scas
dec
dec
pop
retf
jecxz
bnd
xor
dec
cmp
push
add
shl
sbb
imul
push
adc
mov
jb
push
inc
jge
push
loopne
cmp
shl
pop
xor
sar
(bad)
in
mov
sbb
inc
mov
and
dec
adc
sbb
mov
mov
out
fld
xor
mov
and
fwait
xor
adc
jne
xchg
jl
stc
clc
out
popa
outs
xor
jmp
sub
sub
xchg
popa
or
dec
int
cmp
jnp
push
jne
mov
cwde
popf
je
fist
mov
imul
sahf
out
jo
xor
mov
aad
mov
shr
sar
jns
fistp
pop
xor
jmp
retw
xchg
pop
jnp
and
in
lea
movs
mov
push
(bad)
jbe
pop
dec
or
mov
cdq
cmp
push
int3
movs
and
jns
sub
fwait
mov
cmp
push
aad
dec
push
xchg
mov
cmp
(bad)
pop
jge
adc
and
mov
imul
je
jno
hlt
out
mov
pop
leave
mov
int
sub
push
xor
push
cmp
outs
dec
push
shl
cmp
(bad)
lahf
dec
adc
aaa
xchg
sub
ficom
cmovae
xor
sub
dec
cmc
xchg
add
jae
push
ss
inc
pusha
je
sub
lods
lods
sub
pop
mov
pop
xor
mov
xor
cmp
enter
in
push
mul
mov
push
dec
jne
scas
js
xchg
add
inc
push
dec
call
push
test
or
xchg
or
jno
iret
sti
add
inc
add
mov
lea
outs
push
pop
xor
mov
daa
sbb
int3
sub
jmp
ins
test
scas
cmp
add
and
ds
jns
sub
sub
push
cmp
jbe
mov
push
pop
sbb
jnp
xchg
add
cmp
lock
cmps
sbb
loop
nop
int3
test
sti
ss
adc
pop
dec
imul
mov
or
jo
or
mov
mov
sbb
sub
xlat
dec
imul
mov
pusha
je
out
stc
jle
jge
mov
adc
adc
add
mov
outs
mov
retf
pop
adc
or
mov
push
pop
into
xor
push
scas
or
jns
pop
adc
xor
pop
jmp
xchg
push
cmp
cmps
sbb
sbb
or
pop
inc
fidiv
mov
lock
push
sar
repz
dec
cld
or
cmp
lods
inc
mov
ds
push
sbb
mov
adc
xor
adc
sub
les
out
mov
movs
mov
fnstenv
xor
cmp
jb
fwait
inc
inc
mov
cmc
cmp
movs
int3
mov
js
icebp
addr16
outs
stos
fcomi
fs
fiadd
xchg
fstp
loopne
out
or
mov
jge
xchg
mov
in
add
mov
add
inc
pop
gs
cmp
in
loope
movs
arpl
mov
push
inc
mov
push
ss
push
movs
in
mov
inc
jo
cmps
mov
push
and
xor
pop
out
inc
and
adc
jle
push
in
aas
push
out
mov
and
ret
retf
jmp
push
retf
pusha
dec
bound
push
imul
rcl
ret
inc
ins
jae
imul
jg
mov
and
fsubp
push
dec
cmp
sub
iret
ds
add
cmp
xchg
shl
shr
cmp
test
jmp
push
dec
pop
sti
into
xchg
lock
leave
cmp
pusha
mov
sub
cmp
loope
cmps
pop
out
add
stos
push
mov
jp
mov
sub
lea
mov
pushf
push
sub
ja
scas
sub
jge
ret
les
push
pop
(bad)
clc
mov
mov
js
movs
les
ds
xchg
sahf
les
or
jle
mov
mov
aam
test
sbb
sbb
xchg
(bad)
enter
aas
pusha
dec
lds
push
cmp
cmp
cmp
(bad)
aad
adc
dec
inc
push
stos
fwait
daa
mov
repnz
add
push
test
(bad)
sbb
and
mov
lds
imul
sti
mov
sbb
cld
stos
arpl
cmp
add
push
inc
xchg
test
scas
sub
pushf
sub
lds
push
idiv
sar
pop
aam
xchg
das
mov
sbb
dec
mov
loope
icebp
push
jge
push
shr
in
div
push
out
sub
or
aas
push
pushf
adc
lahf
(bad)
mov
dec
popa
inc
mov
arpl
test
dec
xlat
mov
fsubr
pusha
adc
repz
mov
pop
jecxz
cli
push
mov
ins
mov
enter
(bad)
mov
(bad)
fisubr
arpl
call
out
add
scas
imul
fbld
in
into
jno
orps
or
push
cld
sar
or
leave
cdq
repz
xchg
mov
mov
gs
jo
enter
mov
inc
(bad)
mov
nop
lds
in
shl
adc
or
push
or
stos
mov
add
mov
adc
gs
push
dec
int
mov
cmp
fs
or
lea
aas
iret
scas
gs
jbe
(bad)
ror
cli
mov
arpl
test
test
icebp
int
dec
add
cmp
dec
movs
pop
leave
mov
jle
add
pop
daa
mov
push
lds
adc
adc
test
out
jnp
setge
sar
xchg
dec
ins
xchg
inc
push
movs
in
xor
mov
pop
(bad)
and
jecxz
enter
ret
idiv
sbb
jb
retf
adc
mov
jno
mov
mov
repnz
leave
cmps
adc
jle
test
mov
mov
scas
inc
daa
mov
test
push
dec
jno
das
mov
mov
mov
fistp
xor
xor
rcr
or
(bad)
mov
push
imul
scas
ficomp
dec
xchg
push
rol
arpl
push
mov
lds
mov
fxch
das
inc
das
mov
pop
xor
sub
iret
mov
icebp
mov
into
test
popa
popa
adc
pop
mov
jne
iret
adc
push
pop
and
ret
retf
icebp
cmp
fwait
dec
push
lock
dec
rcl
je
sbb
int3
sti
(bad)
jmp
pop
mov
sbb
cmc
fist
data16
inc
mov
jmp
or
or
outs
sbb
push
sbb
leave
jmp
add
rol
cdq
sbb
jb
pop
sahf
push
aas
or
retf
mov
jo
sbb
sub
mov
mov
loopne
dec
pop
mov
repz
cmps
popf
push
daa
xor
mov
inc
aaa
pop
mov
add
enter
(bad)
sub
(bad)
mul
les
jno
imul
jecxz
pop
inc
fs
fwait
pop
in
and
xlat
hlt
retf
ret
enter
ret
xchg
js
fnstsw
or
mov
ret
fcomp
jge
gs
xchg
(bad)
xor
iret
and
or
pop
fdiv
sub
xchg
enter
and
bound
jb
mov
into
cs
mov
cmps
mov
jmp
in
jo
add
je
inc
fldenv
dec
xchg
rol
or
mov
jns
mov
scas
aam
push
xchg
adc
sbb
push
ficom
inc
enter
jno
xor
cmp
inc
mov
cmp
add
mov
cmp
call
or
mov
or
stc
jno
xor
jmp
rcr
lds
icebp
sti
cmp
in
bound
cwde
loope
or
xchg
repnz
pop
pop
ins
loop
pusha
out
xchg
and
not
sbb
sub
push
aad
cmp
lds
loopne
and
int3
in
pop
dec
xor
out
pop
lock
jg
jne
adc
mov
mov
xchg
sbb
fs
pop
push
dec
mov
lea
ins
pop
lods
mov
mov
imul
(bad)
add
pop
out
stos
nop
xchg
pop
les
and
test
mov
retf
jg
sub
sbb
push
dec
push
dec
cli
inc
ficom
jge
and
fcom
rcr
xor
inc
push
xor
cmp
xor
hlt
rol
xor
lock
xchg
sub
stos
or
mov
(bad)
xlat
mov
f2xm1
mov
es
adc
out
test
mov
mov
or
push
inc
pusha
sbb
mov
pop
retf
retf
push
js
outs
jb
shl
sbb
pop
mov
xor
add
fst
mov
mov
(bad)
mov
jge
ficomp
inc
jno
cwde
cmp
into
in
(bad)
jno
or
iret
cmp
pop
jl
out
push
lock
stos
clc
mov
jp
pop
mov
push
unpcklps
dec
fdivr
out
xor
test
or
ss
push
xchg
add
pusha
movs
push
leave
call
repnz
cmp
mov
dec
sbb
stos
cmp
test
enter
mov
cmp
sbb
aam
jge
shl
jge
in
or
movlps
fsubr
stos
aad
pop
shl
pop
stos
call
cwde
(bad)
jo
push
ins
mov
mov
pop
mov
jecxz
cmc
shl
cmp
push
test
push
int3
sbb
fdivr
das
mov
cmps
pop
or
mov
mov
(bad)
in
pop
inc
mov
push
into
fsub
add
lods
and
mov
jmp
fild
jne
aaa
xchg
sbb
outs
nop
mov
xor
inc
cwde
cli
(bad)
outs
jbe
inc
inc
lods
fdivr
fmul
or
cwde
neg
cld
and
shr
movs
sahf
mov
push
jle
pusha
in
scas
pop
inc
and
dec
mov
pop
pop
faddp
inc
lea
sub
hlt
xchg
fsubr
sbb
push
ss
mov
adc
outs
jnp
out
retf
cdq
sub
js
xchg
xchg
psubw
mov
cli
mov
retf
add
in
ins
aam
gs
sbb
xchg
or
sbb
or
int3
shl
fisubr
add
xchg
pop
(bad)
mov
cmp
adc
dec
push
out
or
pop
jne
jp
sbb
push
cmp
jb
icebp
not
pushf
retf
lods
aaa
add
loope
aam
les
jnp
stc
push
adc
jbe
push
xor
or
xchg
mov
push
movs
dec
(bad)
repnz
xor
jnp
stos
push
or
dec
fwait
jb
cvtpi2ps
popf
mov
das
out
inc
sbb
sub
xor
retf
test
inc
adc
loope
add
dec
add
dec
fild
mov
ret
ja
nop
xchg
mov
in
bound
out
xchg
sub
pop
dec
mov
xor
jle
fcom
gs
jmp
inc
mov
xor
sub
cmp
test
fwait
sbb
or
sub
(bad)
push
cwde
out
leave
inc
dec
mov
cmp
jmp
aad
sbb
rcr
js
xor
jae
push
sub
stos
cli
mov
push
sar
cmp
(bad)
dec
mov
mov
cmps
jmp
call
cmp
test
aad
xor
scas
(bad)
(bad)
fadd
push
ds
outs
adc
jmp
jo
shl
outs
and
movs
or
sbb
dec
jne
sub
(bad)
cmps
add
mov
les
adc
inc
mov
in
cmp
out
lods
gs
daa
int
jg
lock
iret
xchg
jo
cmp
pop
add
dec
cmps
push
iret
and
and
sbb
bnd
jae
or
mov
mov
ss
and
mov
xor
pop
jno
mov
jmp
add
sahf
dec
sbb
mov
dec
(bad)
movs
sbb
lods
bound
test
and
pushf
bound
ins
jg
test
cld
js
xor
xor
ins
out
mov
xor
push
jno
jecxz
cmp
push
mov
sbb
adc
push
pop
icebp
pop
mov
je
push
lahf
fisttp
sbb
bound
retf
pushf
out
fwait
nop
dec
xor
push
pop
(bad)
xchg
and
cmp
repz
ins
ret
xor
or
or
aam
inc
and
sti
sbb
mov
jmp
std
adc
stos
ja
js
mov
mov
fwait
adc
inc
mov
and
push
pop
rcr
fwait
cmp
ins
call
call
pop
xchg
push
and
rcl
dec
adc
jbe
pusha
jmp
lds
in
fwait
movs
cmp
pushf
push
push
cld
cdq
imul
cs
add
or
add
xor
jbe
and
xor
jmp
or
shl
and
jo
mov
add
inc
out
aam
dec
xchg
imul
xchg
add
pop
aad
test
mov
adc
adc
mov
sub
int
(bad)
mov
sti
(bad)
mov
dec
rcr
in
lea
push
aas
fisubr
ins
int3
mov
mov
fiadd
xchg
scas
fld
fdiv
adc
ss
stos
mov
mov
or
cmps
sub
(bad)
sti
mov
pop
aam
imul
sbb
xor
hlt
push
popf
cld
and
jae
or
mov
sahf
bound
mov
cmp
and
stc
jmp
mov
lock
out
in
lods
or
pop
dec
psrld
sub
js
retf
out
push
ret
dec
push
push
sbb
cwde
pop
dec
lds
aam
fistp
loopne
test
pusha
call
cwde
xchg
outs
fstp
rcl
or
inc
cmp
shr
or
add
sbb
rcl
add
inc
dec
xlat
dec
movs
mov
retf
cdq
push
loopne
push
mov
pusha
ja
mov
sbb
xchg
stos
out
nop
enter
sub
call
clc
into
lods
or
clc
sub
scas
(bad)
fimul
mov
sar
fsubp
pop
cmps
arpl
cli
jmp
sti
pushf
add
out
jg
adc
ins
lea
mov
in
pop
push
test
jnp
int
pop
pop
add
movs
fst
lahf
inc
xor
jno
ja
inc
iret
dec
sub
or
icebp
cwde
fidivr
jl
mov
clc
movs
mov
bswap
push
add
dec
in
mov
fbstp
xor
sub
push
or
std
sbb
cli
sbb
cmp
mov
pop
cmp
cmp
push
(bad)
push
fst
push
stos
bound
add
add
cmc
cwde
mov
push
cmp
cmp
mov
dec
sbb
cmp
dec
rcl
jp
imul
(bad)
jbe
rcl
cmc
or
sti
out
or
je
pusha
cdq
add
stos
mov
xchg
lods
fsubr
xchg
xchg
mov
adc
adc
jge
or
mov
call
adc
imul
aad
dec
shr
in
fadd
cdq
pop
sbb
test
jnp
jle
aad
(bad)
pop
adc
jo
je
in
addr16
jmp
adc
push
pusha
mov
mov
adc
xchg
jl
push
mov
stos
int3
les
repz
pusha
cdq
push
push
adc
repnz
dec
dec
(bad)
aad
in
push
jle
mov
sbb
sbb
call
cmps
popf
cli
lahf
outs
dec
xchg
inc
push
aad
retf
adc
pop
pop
jb
dec
scas
sar
mov
call
mov
into
outs
dec
sti
dec
out
je
pop
iret
add
cmp
push
or
mov
cli
sahf
pop
loop
out
test
mov
mov
inc
mov
pusha
sbb
jnp
push
fnstcw
sbb
mov
sub
mov
jnp
xchg
aas
sbb
clc
or
data16
xor
mov
and
fwait
ss
mov
bound
add
dec
mov
shl
iret
outs
jb
cmc
push
add
(bad)
xor
jmp
stos
xchg
mov
adc
xor
sub
test
dec
rcl
lahf
dec
hlt
scas
mov
jnp
das
mov
mov
inc
icebp
mov
add
cld
mov
cmp
(bad)
ja
xor
es
(bad)
add
xchg
jnp
mov
(bad)
jmp
cld
stos
outs
retf
stos
(bad)
dec
lods
out
pop
mov
mov
mov
clc
fcomip
jg
lock
inc
xchg
daa
pop
or
loop
movs
jno
mov
les
xor
sub
mov
xchg
(bad)
shl
jge
jge
iret
mov
mov
mov
dec
and
test
addr16
xchg
mov
out
cmp
sar
outs
leave
pop
dec
cdq
in
sbb
call
or
push
adc
dec
ins
lods
fucomp
mov
popa
(bad)
pop
repz
sbb
jg
sbb
(bad)
shr
pop
mov
ds
push
outs
mov
shl
adc
(bad)
sti
test
lahf
arpl
out
or
pop
in
pusha
ret
mov
push
fist
(bad)
cmps
inc
idiv
jg
push
mov
popa
rol
mov
cwde
inc
sub
cmc
xchg
fisubr
pop
cmp
pop
aam
fiadd
jge
enter
addr16
jle
add
mov
cmp
inc
(bad)
dec
sub
test
fdivr
and
cli
pop
mov
ins
mov
dec
(bad)
mov
mov
popa
inc
xor
movs
out
ins
push
(bad)
fimul
or
sar
(bad)
mov
jl
enter
dec
sbb
clc
push
cmp
sub
mul
clc
repnz
jns
cmc
fist
xchg
jmp
iret
dec
mov
mov
fild
jbe
sub
movs
test
mov
mov
cli
cmp
(bad)
pop
and
add
test
lea
sub
aam
movs
js
dec
xor
movs
and
cdq
aas
adc
xor
push
test
fisub
arpl
leave
loopne
mov
sub
mov
mov
test
push
cld
int
xchg
mov
sbb
push
xchg
or
or
nop
fisubr
xchg
ret
inc
call
out
or
imul
pop
fild
mov
dec
movd
cmps
push
stc
loopne
push
jns
lahf
clc
or
add
sbb
dec
pop
(bad)
fadd
aad
stos
add
sbb
test
outs
imul
mov
lds
cmp
mov
jle
not
xchg
das
ins
ror
icebp
xor
loope
cmp
mov
cmp
cdq
xchg
sbb
clc
scas
xor
aam
mov
ret
push
cmp
pusha
jg
mov
ficomp
es
cmp
ficom
cmp
pop
mov
mov
adc
push
xchg
int3
push
inc
adc
ret
mov
xchg
fistp
push
(bad)
pushf
mov
arpl
push
mov
add
cwde
mov
add
cmp
fisub
jo
mov
rcl
test
xor
mov
xchg
sahf
test
add
cmp
sbb
xchg
mov
dec
dec
mov
cld
jmp
retf
shl
(bad)
leave
cmc
mov
lock
cld
fcomp
xchg
xor
or
jb
dec
loopne
iret
mov
popa
pop
outs
pop
dec
inc
cmp
ds
jecxz
or
add
cwde
adc
mov
(bad)
jl
xchg
test
stos
or
pop
icebp
mov
test
inc
sub
daa
and
push
push
(bad)
xor
iret
sbb
data16
adc
(bad)
mov
inc
nop
jecxz
(bad)
int3
jle
xchg
or
out
sar
jge
push
pop
mov
fwait
or
out
ds
in
or
mov
test
shr
gs
fnstcw
jmp
dec
push
jae
push
mov
ret
std
xor
test
or
or
lods
mov
adc
mov
or
pop
shl
std
cmp
fisubr
sbb
xor
cmp
clc
xchg
push
cmp
sbb
out
mov
dec
fidivr
mov
jnp
inc
jecxz
sub
dec
xchg
les
jg
sub
mov
call
mov
(bad)
out
stos
outs
cli
jmp
fmul
js
or
push
or
in
stos
cmps
xchg
ins
adc
xchg
mov
push
mov
cmps
sbb
sub
ficomp
xor
int3
xchg
fs
jl
mov
int3
sub
mov
cmc
(bad)
(bad)
sub
fcomp
shr
scas
push
xchg
pop
fild
lods
inc
push
mov
out
in
cmp
mov
sub
sbb
test
into
push
jmp
les
or
or
pop
or
movs
imul
dec
xor
adc
lock
sbb
icebp
inc
std
(bad)
icebp
mov
xchg
mul
xchg
div
inc
xor
shl
(bad)
jp
sbb
or
add
arpl
sbb
test
push
imul
cmp
call
sbb
fisttp
nop
aam
outs
arpl
or
cld
sbb
mov
jge
dec
iret
inc
sub
mov
fisub
scas
adc
pop
sub
scas
and
mov
dec
in
sbb
sub
es
xor
sbb
mov
addr16
mov
fnstcw
mov
sbb
add
ins
dec
or
mov
push
inc
jle
jg
je
(bad)
cdq
daa
cmc
(bad)
jnp
sub
call
test
pop
fs
je
mov
add
movs
imul
ds
sbb
into
mov
pop
les
mov
or
movs
jae
cmc
jnp
cmps
jmp
outs
movs
add
fadd
out
retf
xchg
hlt
jmp
and
aaa
ins
sahf
jl
retf
or
mul
push
test
add
mov
leave
cwde
pop
test
and
cli
out
popf
scas
inc
(bad)
cmc
shl
jecxz
push
sar
sub
mov
pop
aad
daa
jo
adc
mov
mov
add
mov
inc
call
stos
aaa
adc
rcr
cmp
outs
dec
sub
mov
xlat
push
test
mov
push
cmps
je
out
xchg
pop
pop
xor
add
jge
sahf
fcomi
push
adc
lds
adc
jo
aaa
push
mov
fdivrp
push
xor
popa
gs
push
ror
mov
ins
mov
xor
cmc
(bad)
add
jmp
mov
cmp
jb
out
push
into
(bad)
clc
push
fwait
mov
test
sub
pop
sub
sub
push
imul
adc
or
adc
ja
aad
call
mov
call
xlat
cmp
mov
leave
sbb
dec
mov
push
bound
je
adc
or
adc
ins
icebp
pop
pushf
sbb
push
push
movs
inc
pop
adc
pop
mov
push
lock
adc
jnp
jmp
lea
pminsw
jns
jno
push
cld
sar
sbb
pop
cdq
push
stos
mov
jnp
mov
lods
es
js
and
out
mov
dec
mov
dec
out
int
dec
out
scas
jl
in
inc
and
ja
jmp
push
or
push
jecxz
sbb
int3
or
push
sub
fdiv
jl
pop
inc
adc
dec
cmp
das
js
rcl
sub
cmp
(bad)
mov
xchg
pop
jb
pop
xchg
test
add
add
icebp
(bad)
lock
(bad)
jns
mov
mov
or
pop
scas
xor
pop
repnz
dec
rcr
xchg
sbb
ss
(bad)
cmc
inc
and
clc
mov
mov
cmps
(bad)
cmps
aam
pop
jecxz
and
fcomp
push
adc
aam
ret
jle
fild
push
movs
sub
push
mov
int3
dec
daa
add
xchg
jno
add
pop
jge
mov
sbb
pushf
mov
in
push
sbb
test
test
fs
sub
adc
cld
push
addr16
pop
aaa
sahf
rol
jmp
mov
cwde
and
cmp
and
out
mov
dec
or
inc
inc
inc
fisttp
jne
popa
lea
push
adc
xlat
jns
into
das
push
call
test
je
or
or
lock
int3
xor
adc
xchg
fist
sti
inc
jns
adc
call
push
xchg
call
call
leave
inc
mov
retf
pop
fcom
xchg
addr16
ins
in
cwde
jmp
dec
ja
in
fcom
les
and
jmp
out
push
push
cmps
inc
or
mov
arpl
mov
inc
aad
cmps
xor
pushf
sbb
addr16
cdq
sub
in
adc
pusha
or
inc
arpl
dec
or
clc
jecxz
dec
out
sub
fcom
jmp
cmc
dec
fadd
loop
aam
dec
mov
daa
fadd
mov
dec
sub
ds
and
jne
inc
loopne
(bad)
and
mov
cmps
lahf
les
scas
bound
ror
push
(bad)
pop
mov
pop
or
inc
push
pop
adc
leave
push
pop
jmp
sbb
dec
mov
ja
and
fild
stos
cmp
and
jns
(bad)
pop
les
shl
out
stos
jl
dec
clc
push
sub
fdiv
lahf
pop
inc
push
js
inc
int
scas
in
loope
push
loop
(bad)
push
lahf
pop
daa
xlat
stc
imul
inc
add
out
loope
mov
or
getsec
adc
cmps
ja
movs
pop
or
loop
jno
loopne
dec
mov
dec
mov
mov
sbb
add
push
jmp
hlt
iret
dec
push
aad
dec
jno
push
lods
dec
call
outs
shl
leave
stos
lock
mov
inc
sbb
mov
push
fisubr
retf
jge
loop
xchg
xchg
(bad)
call
cmp
mov
nop
popa
mov
push
clc
pusha
fwait
cmp
call
call
cmp
mov
cmp
pop
call
cmps
mov
nop
sti
mov
das
bound
add
test
pop
sahf
xchg
push
mov
fdiv
gs
(bad)
pop
mov
loopne
lahf
jl
dec
xchg
ror
jl
lods
cmc
pop
(bad)
adc
mov
sbb
push
int
sbb
jp
mov
mov
mov
fdivr
mov
jg
mov
aam
in
je
push
(bad)
mov
lods
sar
mov
icebp
stc
cmp
push
sahf
loope
jge
out
mov
xchg
jecxz
pop
rcl
cmc
inc
mov
ss
jnp
dec
xchg
mov
dec
in
jmp
jns
iret
add
imul
sub
in
cmps
push
xchg
mov
pop
push
cmp
push
out
(bad)
aas
pop
bound
push
nop
repnz
jnp
cmp
sub
add
mov
ror
cmps
push
rcr
hlt
sub
mov
jg
adc
push
and
mov
dec
mov
mov
(bad)
aad
mov
sub
sbb
lock
stos
cmp
movs
sti
xchg
outs
das
jae
dec
inc
cmp
popf
int
retf
pusha
sub
cwde
iret
add
pop
int
call
pop
sti
arpl
and
and
icebp
sub
das
cmp
add
movs
jo
push
push
dec
ja
jg
sahf
jle
jl
out
cmps
out
push
xchg
mov
lahf
mov
outs
push
lea
imul
mov
push
jb
loop
in
retf
sbb
mov
ss
clc
cs
adc
(bad)
cmp
jo
outs
and
xor
mov
jo
mov
add
(bad)
retf
movs
lods
retf
sub
push
scas
sbb
leave
cmp
popf
rcr
xor
std
pop
lods
mov
mov
test
xor
push
jg
dec
cmp
out
sbb
dec
pop
mov
xor
out
shl
out
call
retf
test
adc
add
int
pop
mov
aad
rol
pop
inc
sbb
and
fnstcw
mov
ror
cmc
cmc
(bad)
shr
retf
icebp
sub
cmps
ja
inc
(bad)
repz
xchg
jnp
pop
xchg
ins
add
lea
mov
ins
add
xchg
out
(bad)
hlt
add
(bad)
dec
inc
sbb
cmp
sbb
test
mov
pop
cmps
dec
pop
inc
and
jb
loope
xchg
xor
loopne
pop
push
jbe
out
xchg
dec
ins
or
dec
ret
push
sub
popa
sub
push
mov
push
jmp
xchg
test
inc
(bad)
pop
push
xor
mov
div
xor
xor
xchg
mov
pop
(bad)
in
test
dec
shl
add
fwait
(bad)
in
adc
pop
mov
adc
fild
loopne
data16
pop
or
test
loope
data16
xor
or
imul
leave
mov
inc
cmp
std
fisub
mov
ds
push
aam
retf
cmp
popa
push
test
push
and
and
xchg
fdivp
and
outs
mov
xor
stos
inc
push
repnz
mov
pop
ss
test
inc
ret
scas
aas
lock
mov
adc
fcomi
push
sub
popa
or
mov
ret
clc
push
into
out
dec
xchg
dec
cmp
pop
jle
cmp
jmp
cmp
iret
data16
adc
xor
lea
push
or
sub
mov
jb
push
sub
jb
sub
ret
dec
nop
cld
je
aas
loope
lods
mov
icebp
scas
std
test
fimul
and
and
jo
sahf
aam
dec
outs
out
rol
pop
push
xchg
push
rep
lds
rcl
mov
mov
gs
or
cwde
lea
xor
push
xchg
test
and
or
inc
ror
and
xchg
or
sbb
mov
push
pop
ror
sahf
mov
add
mov
cmps
loop
(bad)
bound
loop
data16
jno
test
(bad)
xor
icebp
arpl
dec
pop
cs
popa
pop
dec
pop
nop
and
pop
pop
jb
ret
mov
and
arpl
add
dec
rcl
jns
data16
test
jns
ins
xchg
pop
jle
(bad)
fwait
neg
fs
cmps
inc
push
push
dec
sbb
or
pop
(bad)
mov
inc
popf
mov
jle
js
das
push
pop
(bad)
int3
fldcw
mov
(bad)
xchg
pop
cwde
jmp
icebp
xchg
mov
and
mov
fdivr
out
test
mov
ins
cmp
imul
sub
(bad)
cmp
sbb
inc
dec
aad
movs
es
pushf
jno
push
outs
fld
push
pop
repz
add
mov
shl
shr
and
jge
enter
lods
sbb
(bad)
movs
ja
stos
retf
ds
fs
leave
or
test
add
pop
hlt
mov
sbb
retf
sub
jb
xor
sbb
mov
cdq
in
in
mov
call
mov
or
xchg
js
mov
fidivr
fucomi
(bad)
and
sub
mov
mov
pop
push
dec
or
stc
not
(bad)
movnti
xchg
pop
jb
lods
or
loop
or
and
push
ret
fild
and
je
xchg
das
imul
inc
xor
ja
dec
in
and
pop
test
sub
mov
cmp
leave
jb
xchg
dec
shr
xchg
add
mov
xlat
or
mov
mov
iret
mov
ret
mov
cmc
adc
enter
adc
sbb
in
mov
push
rcl
loop
call
cmp
dec
outs
in
add
and
mov
inc
mov
pop
or
mov
and
push
imul
popf
mov
cs
je
xor
js
push
or
sub
push
mov
push
xchg
jns
fs
mov
call
pop
inc
mov
movs
lock
(bad)
mov
sub
scas
sbb
mov
test
jne
sbb
inc
sti
mov
push
cdq
mov
push
cmp
outs
ds
mov
(bad)
push
icebp
mov
mov
cmps
stc
cdq
test
add
stc
mov
pop
mov
push
popf
inc
or
(bad)
cmp
pop
xchg
push
push
xchg
and
mov
or
mov
mov
and
loop
sub
sbb
pusha
fisubr
mov
push
pop
jp
ja
inc
inc
pop
push
mov
pop
and
cmc
iret
jns
push
jmp
lahf
stos
out
out
mov
jl
enter
cmp
mov
jg
and
adc
xchg
(bad)
pop
dec
sub
retf
cmc
mov
mov
xchg
inc
das
or
out
stos
push
or
inc
jg
lahf
aas
cmps
sub
sbb
dec
push
push
das
sbb
lahf
ins
adc
sti
rcr
mov
movs
pop
sbb
adc
xor
xchg
sti
gs
mov
sbb
mov
fcmove
sub
call
push
ins
mov
movs
add
jae
bound
pop
ficomp
sbb
pushf
xchg
and
push
sub
rcl
fst
outs
ins
push
inc
xchg
adc
xchg
in
int3
dec
cld
inc
aam
jb
dec
(bad)
mov
jmp
dec
cmp
dec
and
pop
rol
aad
test
mov
pop
jno
iret
stc
icebp
sbb
adc
les
xchg
add
sbb
adc
mov
sub
mov
sbb
mov
lahf
das
jmp
push
call
mov
sub
or
adc
popf
sub
mov
jb
movs
mov
add
cdq
sub
sbb
cld
adc
cmp
das
loope
leave
not
push
inc
lds
xor
sub
int
jmp
lds
mov
mov
or
xchg
ret
sahf
inc
push
fistp
int
xchg
or
inc
or
cld
pop
rcr
or
lock
inc
jle
jne
push
mov
add
sub
mov
jne
imul
ja
mov
jle
push
or
and
sbb
xchg
shl
or
out
fild
jno
clc
cs
into
dec
inc
imul
adc
test
push
add
iret
bnd
inc
nop
cmp
mov
jno
mov
outs
inc
outs
mov
cwde
dec
ret
add
jmp
test
shl
retf
add
lahf
jp
pusha
xor
jmp
int3
pusha
jne
into
mov
sub
sub
xor
add
icebp
mov
xlat
push
std
and
push
bound
push
test
cmps
call
imul
mov
aas
movs
arpl
push
call
inc
inc
fsubrp
sub
out
pop
mov
and
scas
pop
pminsw
(bad)
out
retf
adc
mov
cmp
aas
pop
je
adc
ins
bound
dec
out
les
xchg
adc
loope
inc
mov
mov
shl
test
cli
cmps
mov
add
cli
adc
pusha
mov
jns
shr
inc
movs
mov
push
and
call
or
repnz
sti
sbb
ror
adc
pop
fnstenv
shr
aas
pop
push
daa
int
ins
push
arpl
pop
sbb
cdq
xor
cmps
jno
scas
sub
in
int
and
aam
cmp
jb
xchg
retf
hlt
(bad)
inc
add
lock
sub
pop
sbb
sbb
sahf
nop
push
popf
or
fcom
cmp
and
add
adc
or
pop
inc
movs
test
bound
dec
dec
push
enter
xor
adc
inc
mov
xchg
sub
or
pop
jne
dec
fcom
scas
div
inc
repz
movs
cmp
popf
je
adc
push
adc
sbb
les
pushf
inc
scas
cmp
test
andnps
aas
xchg
ins
sahf
mov
fld
stos
pop
lea
pop
pop
mov
mov
xchg
stc
or
cmp
pop
cld
adc
shl
fisttp
repnz
dec
out
dec
loope
cmp
dec
jbe
lea
mov
xor
les
pushf
in
movs
scas
fucomp
and
dec
sub
out
call
mov
mov
rol
cdq
or
add
and
clc
xor
hlt
jmp
enter
sbb
xor
clc
or
mov
sbb
cwde
(bad)
lods
sub
mov
fist
jmp
sbb
sub
leave
cdq
cmp
mov
into
lea
enter
js
adc
push
or
xor
xor
retf
cli
push
fistp
ret
jg
sahf
test
pusha
test
es
int
(bad)
mov
mov
cdq
iret
loopne
pop
xor
and
rcl
fdiv
jg
push
xlat
push
push
pop
xchg
inc
jb
dec
in
out
xlat
test
xchg
xchg
dec
stos
bound
out
div
rcl
sbb
iret
fwait
add
scas
inc
xchg
adc
rcl
scas
dec
mov
mov
mov
pop
dec
bound
push
jmp
mov
xchg
jl
sbb
jmp
mov
jae
jne
cmp
adc
in
mov
adc
fdivr
sbb
clc
sub
jns
or
xchg
push
mov
aaa
fdiv
dec
(bad)
dec
das
cmc
jnp
adc
adc
pop
mov
mov
aad
popa
sub
std
inc
mov
out
xor
mov
loop
and
and
data16
data16
ss
dec
in
pop
imul
pushf
adc
jno
sub
mov
cli
xchg
and
cmp
into
ins
lods
sar
loop
imul
jecxz
push
sub
mov
aad
das
in
repnz
jns
fadd
adc
inc
add
out
add
ror
xchg
mov
inc
enter
cmc
neg
xchg
cmp
jbe
mov
or
pop
lods
or
jne
cli
fld
scas
jbe
jo
push
pushf
std
mov
and
stos
and
repz
lock
leave
xchg
cmps
popa
rcr
mov
cmp
sub
mov
clc
fstp
mov
leave
sbb
adc
lds
les
push
icebp
jae
sar
sti
bound
sbb
jmp
enter
mov
shl
bound
mov
dec
outs
lock
inc
jnp
aam
mov
cdq
das
test
dec
pop
lds
dec
jmp
push
mov
ret
add
retf
fbld
mov
cmc
sti
fldenv
or
xor
ja
mov
xchg
rcr
pusha
and
push
mov
retf
push
inc
fsub
test
add
ss
popa
mov
push
pop
xor
leave
jmp
add
mov
push
rol
push
or
and
rcr
jecxz
movs
or
adc
inc
repz
xchg
cmp
fild
ins
call
jae
cmp
dec
jne
in
lahf
sbb
push
dec
xchg
and
cld
fwait
or
es
shl
push
popf
mov
add
fisttp
mov
ins
xchg
inc
xchg
sti
cs
dec
dec
loop
mov
xchg
outs
aad
pop
aam
xor
or
scas
sbb
icebp
cmp
mov
imul
mov
mov
mov
loop
add
mov
dec
mov
sar
cs
mov
pop
std
xchg
pop
retf
stos
xchg
hlt
inc
in
dec
inc
adc
xor
fnstenv
mov
mov
dec
xchg
loopne
int
push
pop
fsubr
outs
and
pushf
cmp
cmp
lods
retf
aas
scas
adc
aam
cdq
ror
retf
and
mov
popa
pop
bound
(bad)
in
test
pop
fwait
mov
sar
push
pusha
out
retf
mov
jnp
call
fucomi
call
fisttp
stc
shr
pop
cli
movs
ret
inc
xlat
mov
cmc
and
das
clc
xor
in
fistp
es
push
mov
(bad)
clc
jb
fwait
call
cmp
in
cmp
stos
pop
dec
dec
or
test
adc
dec
add
imul
jecxz
dec
outs
enter
xchg
mov
in
ret
xor
xchg
aam
cmp
or
lods
jmp
test
xor
or
mov
inc
sbb
mov
push
in
mov
jb
ja
or
(bad)
mov
movs
sti
sub
fld
inc
aam
xchg
hlt
or
fwait
sbb
jl
mov
jge
fsubr
fwait
dec
mov
push
mov
mov
and
inc
mov
shl
fldpi
push
jnp
mov
(bad)
and
hlt
lahf
sub
push
outs
xchg
cld
sbb
mov
pop
add
scas
mov
shl
inc
xchg
jp
arpl
fnsave
mov
pop
mov
fwait
lea
mov
or
int3
inc
dec
inc
cwde
into
call
test
fldenv
sti
adc
scas
out
inc
pop
jne
jns
ss
test
pop
sub
mov
sub
in
sub
mov
cmps
in
push
lods
mov
scas
inc
cmc
mov
nop
mov
bnd
stos
inc
cmps
into
dec
fadd
ror
test
out
ins
adc
lock
shl
mov
cmc
jns
adc
int3
push
mov
les
cli
(bad)
mov
xor
popf
mov
sub
sub
int
arpl
adc
out
cmps
dec
jl
mov
aad
sbb
add
or
jns
dec
dec
ret
cmp
xlat
add
retf
idiv
cld
dec
movs
pop
cs
sahf
push
inc
jno
xchg
mov
lahf
movs
imul
cmps
cmps
mov
cld
mov
mov
loop
adc
and
pop
repnz
or
(bad)
jle
cld
adc
icebp
sbb
xchg
(bad)
call
(bad)
dec
pop
dec
stc
idiv
inc
arpl
mov
push
lods
sub
pop
push
push
test
adc
in
adc
outs
inc
adc
push
jno
aas
(bad)
leave
aad
cmp
inc
adc
inc
inc
sbb
sti
or
loopne
test
inc
icebp
popa
sbb
fisub
pusha
sub
imul
std
jbe
inc
xchg
fsub
js
mov
push
add
inc
xchg
mov
push
push
retf
aam
not
data16
ret
mov
enter
mov
or
pop
test
inc
push
pop
adc
leave
cmps
jns
sub
mov
or
mov
pusha
leave
cli
xchg
pop
jbe
cmps
adc
mov
sub
pop
mov
popa
bound
pop
mov
pop
pop
fwait
scas
xor
and
daa
mov
aaa
sbb
repnz
loopne
xor
and
add
xchg
cwde
mov
dec
data16
(bad)
jmp
shl
jmp
inc
stos
sub
mov
xor
or
push
imul
sub
clc
mov
xor
add
cmp
mov
pop
add
sub
sbb
popa
adc
test
lds
movd
pop
sti
push
stos
cmp
jno
retf
call
into
mov
jle
out
sar
sbb
xor
mov
icebp
xor
retf
xchg
imul
into
(bad)
push
js
jns
and
shl
mov
dec
fcom
cmp
mov
cmp
shr
inc
lds
sub
xlat
xchg
repnz
adc
cmp
ror
repnz
adc
pop
ja
dec
(bad)
ss
leave
out
fiadd
pop
mov
retf
in
aam
mov
rol
dec
repnz
ficom
push
in
pop
pop
add
clc
mov
je
cmc
lock
clc
int
jo
mov
or
outs
add
(bad)
int
push
pop
int
xchg
push
sbb
and
sub
cmps
add
dec
sub
inc
cmp
xor
ror
pop
xor
inc
lea
lock
(bad)
sbb
xchg
cmps
repnz
and
int
scas
push
adc
push
mov
jb
ins
rcr
not
or
mov
and
movs
movs
cld
into
lock
shl
inc
and
mov
push
sub
addr16
adc
sub
lds
loopne
imul
xchg
mov
gs
or
push
and
nop
not
pop
dec
dec
test
inc
shl
rcr
add
pop
js
cdq
hlt
jns
jae
push
shr
test
push
push
cwde
pop
mov
cmp
outs
mov
mov
rcl
or
popa
mov
cdq
xchg
dec
fwait
xchg
jp
jle
xor
push
daa
fdivr
out
into
shl
add
adc
xor
and
cs
inc
fld
std
shl
mov
cwde
sbb
xchg
daa
fchs
push
test
mov
add
ins
push
ret
pop
(bad)
(bad)
pop
ins
jle
mov
in
mov
sbb
push
repnz
inc
fsub
out
in
push
out
mov
mov
cwde
stc
rol
(bad)
inc
call
js
inc
pop
js
fidivr
out
inc
fdivr
cmps
jne
mov
sbb
fisttp
mov
dec
clc
xchg
into
mov
sti
mov
cmp
dec
push
cwde
dec
mov
repnz
cdq
mov
or
adc
dec
lds
je
mov
or
or
imul
jae
imul
aas
enter
stos
mov
mov
and
push
jno
and
daa
in
mov
mov
push
fisubr
(bad)
push
out
std
sbb
imul
(bad)
daa
into
movs
xchg
mov
enter
scas
cmp
xlat
imul
cld
mov
clc
adc
jg
and
mov
sub
cmp
ins
retf
inc
jle
mov
mov
fild
in
es
(bad)
cli
into
mov
mov
cwde
das
or
push
dec
or
xchg
repnz
call
mov
cmps
push
xor
movs
in
ret
ret
or
retf
maskmovq
imul
fistp
fnsave
and
fs
push
sbb
mov
ficomp
cli
mov
or
pop
cmp
mov
cmp
push
sub
imul
jb
imul
xchg
mov
clc
adc
inc
test
ficom
mov
mov
jp
lods
inc
sub
jo
retf
adc
mov
inc
pop
pop
xor
mov
fmulp
mov
fisubr
pop
mov
pop
xor
xlat
sub
pusha
call
pop
push
jp
cmp
push
sub
jbe
jecxz
mov
retf
xchg
pushw
lods
push
jmp
das
dec
or
je
aam
adc
aaa
out
fsubrp
stos
gs
sti
sbb
stos
jle
lds
adc
dec
xchg
cmp
push
or
dec
cdq
or
ds
(bad)
sbb
adc
popa
ficomp
jl
jbe
cmp
add
loopne
cdq
fnstenv
jo
xchg
scas
sti
ffreep
and
outs
rol
sar
mov
xchg
in
push
xchg
call
ficomp
stos
xor
push
add
xlat
adc
adc
(bad)
mov
mov
inc
or
out
mov
repnz
add
(bad)
neg
mov
sbb
and
addr16
ret
pop
sti
inc
xchg
jnp
xchg
mov
shr
mov
outs
mov
jecxz
pop
sub
loopne
xchg
jbe
push
sbb
scas
mov
add
div
mov
xor
sub
sahf
imul
dec
xor
xchg
ins
ins
ror
sub
pop
dec
xor
ins
dec
mov
mov
push
push
cmp
add
dec
cli
jns
shl
sub
mov
repz
stc
ins
into
push
into
push
or
add
dec
int3
sbb
dec
xchg
adc
out
jecxz
fstp
push
fsub
cmc
jbe
(bad)
call
adc
imul
adc
or
and
sbb
xchg
fwait
jge
inc
aas
jae
out
add
mov
dec
inc
and
sub
arpl
pop
jae
mov
push
jecxz
inc
inc
inc
dec
out
mov
jbe
cld
xchg
rcr
outs
mov
push
sub
push
loope
lock
imul
int3
outs
(bad)
xchg
call
and
sub
pop
inc
bound
push
gs
std
push
xchg
jno
mov
mov
inc
mov
mul
sub
inc
sbb
aam
xchg
inc
pop
je
and
ins
lahf
lods
int
xlat
xor
jmp
jbe
mov
pop
daa
gs
xchg
cmp
mov
loope
mov
retf
dec
stos
dec
(bad)
stos
dec
xchg
fcom
and
pushf
inc
(bad)
xor
outs
fisttp
das
repnz
loop
dec
inc
cwde
movs
xor
and
push
xor
addr16
stos
je
out
rcr
sub
or
pop
add
and
mov
pop
outs
push
jbe
fucomp
call
iret
shr
push
movs
fadd
outs
shl
loopne
cmp
or
or
stc
dec
aas
test
lahf
add
ficomp
push
rcr
xor
cmp
pop
sub
(bad)
fist
fs
and
sub
push
in
mov
sbb
xor
jmp
cmp
dec
int
xchg
inc
adc
dec
hlt
dec
inc
mov
ins
cmp
out
lock
jnp
inc
jp
ret
jmp
vmwrite
xor
pop
mov
enter
arpl
dec
fwait
ds
aam
jo
clc
in
cmp
fmul
or
jle
inc
js
ror
xchg
rcr
retf
dec
mov
call
iret
mov
inc
sar
jecxz
cmp
cmp
jb
in
in
in
bound
movs
cld
pop
out
add
fs
dec
mov
mov
adc
xchg
jmp
pusha
loope
test
mov
pop
fst
(bad)
mov
aam
les
pushf
xchg
sub
pop
(bad)
int
inc
inc
xchg
inc
stos
xchg
and
pop
ds
mov
push
xlat
test
mov
daa
dec
es
fdivr
dec
dec
xchg
loope
ins
jecxz
arpl
movs
rcl
mov
jle
test
dec
adc
xor
outs
or
ins
pop
jbe
mov
jge
pop
and
xor
out
pop
pop
js
nop
and
and
adc
cmp
sar
sbb
inc
adc
push
lods
loope
fcmovb
adc
lods
lock
pop
push
scas
addr16
fiadd
data16
xchg
ss
mov
sar
jne
push
test
call
mov
push
push
(bad)
mov
cmp
push
fisubr
add
fild
loop
sub
push
sub
jg
clc
push
xchg
cld
and
les
inc
fwait
outs
pop
retf
stc
mov
mov
inc
fnstcw
int3
jae
arpl
mov
inc
or
jmp
mov
push
sub
inc
push
jmp
test
inc
dec
inc
into
arpl
sbb
(bad)
cmp
movd
pop
sti
out
push
lock
jge
nop
dec
xor
imul
scas
(bad)
xchg
enter
sub
es
pop
cwde
test
icebp
int3
dec
lds
push
movs
fadd
adc
add
pop
sub
fisttp
or
xor
and
fsub
ds
jmp
inc
inc
call
add
test
xor
pcmpgtd
xchg
mov
jmp
enter
sbb
fnstenv
sub
fiadd
fs
int3
and
add
das
iret
or
push
je
xor
jnp
nop
ss
mov
jo
pop
sbb
repz
add
daa
adc
mov
cmp
pop
mov
add
sti
xor
cmp
popa
jb
out
cmp
or
fisttp
das
xlat
pop
push
mov
dec
leave
push
cmp
ds
add
iret
fild
push
ret
and
outs
push
lock
repnz
and
rcr
or
adc
das
dec
dec
cwde
out
(bad)
jo
add
or
xor
adc
(bad)
jmp
imul
inc
mov
pop
jo
xchg
je
cdq
jae
test
inc
push
retf
mov
push
(bad)
out
loope
ins
pop
sub
mov
push
or
mov
test
push
adc
inc
sub
push
test
pop
pop
aad
jle
cdq
cs
mov
(bad)
mov
push
inc
iret
addr16
xor
sbb
and
xchg
lock
xor
pop
push
cli
iret
mov
mov
leave
and
mov
push
jns
mov
out
lahf
clc
xor
mov
aaa
shl
jmp
retf
aas
jp
pushf
in
adc
out
mov
add
add
push
jb
adc
ss
dec
out
pop
push
jp
mov
fs
add
add
std
in
mov
jne
pop
popa
(bad)
fisub
mov
rcl
pop
xor
xor
inc
retf
mov
stc
sub
lock
hlt
xlat
pusha
pop
pop
xor
mov
sub
popa
cmp
out
jl
aad
fcom
outs
sub
inc
xor
push
retf
leave
cmp
xchg
adc
xchg
popf
call
icebp
jnp
les
in
push
or
push
daa
pop
stc
push
fwait
adc
sub
gs
jmp
(bad)
jne
jb
rol
jmp
push
mov
into
dec
cmc
mov
dec
inc
ret
cmps
aad
mov
aaa
fucom
and
sub
push
fst
sbb
(bad)
xor
fwait
mov
pop
adc
sub
out
icebp
lods
pop
jle
sbb
inc
pushf
rcl
pop
mov
push
popf
std
jbe
mov
je
pop
iret
mov
retf
movs
out
add
sti
xchg
xchg
pop
adc
mov
xchg
sub
pop
rcr
mov
(bad)
(bad)
out
xchg
inc
pop
xchg
aaa
push
pop
arpl
xor
add
fwait
mov
in
stc
inc
and
aam
and
cs
outs
jo
cdq
cmp
aad
je
call
jnp
jmp
inc
repnz
cmps
jmp
lea
imul
add
js
imul
inc
pop
jg
test
cld
call
loope
int3
out
lods
jmp
and
and
push
cmp
mov
xor
push
xor
test
addr16
adc
push
repnz
xchg
sar
jecxz
loop
and
ins
push
popf
pop
stos
sar
push
mov
call
cmp
jo
xchg
stc
or
jle
pop
or
adc
sub
scas
pop
dec
or
sub
repz
cmc
inc
fcomp
pop
pusha
shl
sar
xchg
sbb
adc
fsubr
sub
xlat
mov
dec
dec
mov
push
cmp
xlat
xchg
sbb
out
rol
xchg
mov
out
pop
push
cdq
fild
or
dec
adc
out
cmp
call
add
sar
jmp
addr16
retf
mov
ins
stos
cwde
jecxz
ins
xchg
push
cmp
das
out
sbb
mov
fsubr
ret
push
arpl
inc
fstp
sub
and
ds
mov
dec
jl
jbe
jge
idiv
mov
cmp
jl
inc
test
jo
inc
sbb
mov
pushf
jb
cmp
scas
pop
and
and
cld
push
adc
inc
and
lea
leave
int
xor
adc
sbb
xor
in
xchg
sbb
inc
push
aaa
xchg
arpl
inc
stc
aaa
mov
mov
rcl
arpl
or
lock
xchg
nop
je
ins
test
xchg
add
add
jbe
cmp
rcl
lahf
popa
add
ss
das
(bad)
fstp
mov
stos
addr16
mov
dec
(bad)
loope
sbb
mov
fsub
adc
dec
cmp
ss
stc
gs
nop
out
cwde
cwde
dec
pushf
rcl
in
(bad)
or
xor
fsub
shl
jmp
pop
adc
out
sbb
daa
push
jo
dec
lock
mov
stos
retf
xchg
pop
or
pop
or
mov
xchg
ins
retf
clc
fistp
inc
sbb
sub
popf
imul
push
mov
lods
repnz
xor
jmp
sbb
cwde
(bad)
mov
and
adc
je
hlt
mov
(bad)
and
(bad)
mov
sbb
dec
cld
sbb
pop
sub
push
or
sti
and
movs
jmp
cmp
dec
xchg
or
vmovaps
mov
call
rcr
mov
jns
xor
dec
lock
(bad)
lock
cmc
sbb
rcl
adc
pop
test
xlat
jmp
adc
cmp
mov
xchg
xchg
ds
pop
cmp
sub
push
inc
pop
pop
mov
sub
cmp
aad
push
sub
sub
or
inc
xchg
mov
test
shr
adc
push
int3
movs
mov
cmc
jo
jmp
and
or
daa
mov
cmp
call
adc
or
inc
cs
pusha
xor
stos
xchg
hlt
loopne
jp
cmps
or
mov
sti
mov
out
xor
fs
dec
(bad)
cmp
pop
pop
pop
dec
xor
out
adc
jnp
push
in
(bad)
sub
xchg
cmp
aad
(bad)
xchg
xchg
add
test
fidiv
mov
test
and
fs
sbb
push
test
dec
test
jno
jns
fs
popa
into
in
cli
cdq
mov
inc
xlat
(bad)
lods
ins
dec
(bad)
mov
stos
hlt
in
(bad)
cdq
scas
imul
or
inc
inc
jb
adc
stc
in
aaa
stos
sub
adc
xor
dec
lods
test
ss
sbb
movhps
sub
cmc
mov
in
cwde
dec
or
xchg
or
mov
xchg
test
gs
pusha
mov
jo
xor
mov
int
jno
imul
adc
inc
imul
in
or
lea
and
sub
sbb
jle
je
arpl
movs
mov
sbb
das
imul
fimul
jae
cmp
jno
jae
test
inc
mov
sbb
jae
mov
scas
int3
adc
or
jns
std
ja
cmp
fnstenv
fbld
xor
scas
sub
mov
ds
movs
(bad)
(bad)
push
sub
pop
and
pop
lgs
jbe
inc
push
inc
sahf
dec
fmul
sub
jne
shufps
sbb
push
jb
gs
jg
rcr
push
inc
or
fwait
in
jmp
mov
ret
stos
pop
iret
(bad)
add
xchg
xchg
dec
add
add
imul
jmp
mov
push
icebp
mov
push
jg
pop
dec
sahf
push
pop
mov
xchg
jns
mov
rcl
jbe
cwde
cmp
jo
in
js
ss
jbe
ins
mov
aad
mov
call
(bad)
mov
movs
mov
movs
cmp
xor
push
imul
inc
jno
or
xor
mov
jecxz
fisubr
pop
ret
xchg
mov
fdivr
inc
dec
test
inc
fldenv
or
xor
in
jnp
lahf
or
hlt
jle
push
rcr
or
mov
call
mov
out
call
xchg
or
rcr
rol
shl
sub
inc
push
hlt
xor
out
ret
in
(bad)
out
and
ret
clc
add
mov
sub
stc
out
movs
ja
inc
jo
pop
mov
out
(bad)
mov
fisttp
mov
xor
not
dec
sbb
aaa
xchg
xchg
sbb
mov
sbb
jl
jb
add
test
jmp
in
dec
mov
dec
mov
cmps
jmp
mov
pop
(bad)
movs
in
bound
inc
cmps
imul
push
icebp
adc
push
cmp
ror
ins
jge
mov
dec
imul
jmp
jo
add
jmp
mov
out
out
or
mov
add
mov
dec
mov
in
int3
lock
pop
adc
sbb
js
pop
clc
lods
add
call
push
ret
ret
outs
test
push
inc
sub
or
mov
push
mov
add
imul
call
sbb
push
xor
ret
popa
inc
fist
mov
bound
pop
cmps
push
jbe
aad
xchg
mov
mov
sti
je
cdq
pop
daa
arpl
dec
push
leave
or
arpl
int
adc
jmp
jg
(bad)
cmp
pop
inc
inc
fcom
lods
fs
pop
ja
sbb
arpl
fcomp
les
pop
fld
loop
adc
cmps
jg
cmp
and
push
jb
lea
xchg
pop
mov
add
mov
add
(bad)
adc
inc
inc
xor
cmp
les
cmps
jl
pop
sub
add
fidiv
pop
(bad)
fadd
cwde
xor
shr
nop
mov
push
cmps
dec
sahf
jns
mov
popa
scas
rcr
jle
lahf
dec
jbe
pop
jnp
das
ret
pop
loop
retf
pop
fistp
dec
mov
jmp
dec
(bad)
mov
ds
xor
mov
add
mov
test
or
pushf
jecxz
in
pop
mul
fst
es
sub
hlt
add
ja
scas
iret
shr
aaa
cs
test
jno
arpl
push
dec
xchg
das
xor
scas
pop
mov
sub
xchg
jg
out
push
icebp
mov
add
and
or
dec
stc
mov
inc
rcl
jle
lds
ins
push
out
cmp
not
ins
ins
push
fdiv
jo
jl
push
ja
sar
and
mov
enter
push
in
xor
call
lahf
cmp
fadd
stc
xchg
iret
repnz
inc
leave
outs
mov
jns
cmp
dec
mov
jnp
pushf
fcom
add
push
ret
mov
repnz
call
test
imul
add
push
daa
lock
dec
inc
sbb
mov
inc
mov
jb
call
ins
adc
icebp
(bad)
jl
sub
add
xchg
push
pop
pmaddwd
cmp
gs
(bad)
cmc
sub
push
add
sbb
inc
mov
push
out
and
outs
repz
aas
mov
adc
repnz
inc
mov
mov
push
pop
in
nop
jnp
lods
fld
mul
(bad)
mov
sub
lea
out
cmps
sbb
scas
or
fistp
shl
adc
adc
xchg
jp
mov
and
adc
(bad)
popf
rcr
sub
in
ins
pop
dec
sub
ret
adc
adc
int
movs
jmp
pop
mov
add
mov
adc
or
cmps
out
int
inc
int3
ins
mov
hlt
enter
pushf
lock
jmp
fdiv
inc
imul
jmp
std
imul
fdivr
int3
mov
fld
push
pusha
mov
int3
sbb
sbb
sub
int
sbb
mov
dec
call
inc
mov
ret
out
outs
icebp
scas
call
xchg
dec
pop
imul
js
cmc
cmp
test
push
sbb
std
inc
pop
pop
or
or
add
push
mov
movs
mov
dec
es
out
inc
cmp
stos
lock
push
dec
call
call
into
add
dec
xchg
mov
test
xlat
sub
mov
push
fist
inc
xchg
sti
xlat
sub
sub
call
test
sub
jp
xchg
fsubr
mov
into
shr
mov
fisttp
push
inc
call
xor
loopne
outs
xchg
pop
lods
push
or
sbb
sub
int3
mov
mov
push
sub
movs
xor
lock
sbb
jg
inc
fsubr
outs
dec
cli
adc
push
fbld
cmova
mov
fs
cmp
add
in
and
bound
div
mov
arpl
(bad)
(bad)
mov
std
push
sub
ins
pop
cld
nop
and
push
and
and
xchg
aad
or
and
cmp
pop
or
sub
es
mov
cld
push
lahf
push
outs
in
mov
pop
adc
(bad)
push
mov
sub
mov
mov
add
lods
js
stos
gs
push
rol
in
or
cwde
je
mov
sub
cmps
test
xlat
and
(bad)
dec
mov
and
gs
sub
mov
sbb
or
xlat
dec
or
mov
lahf
push
sub
pop
mov
mov
jbe
movs
mov
push
xor
js
pushf
mov
mov
push
int3
or
ret
nop
push
or
ret
adc
in
sub
fwait
pusha
pop
cwde
dec
sti
inc
xchg
sbb
or
lahf
std
mov
jecxz
or
mov
jmp
jmp
xchg
or
jp
pop
mov
pop
push
outs
sbb
loop
outs
sbb
push
push
mov
loop
dec
sbb
cmc
call
ret
push
mov
push
cmp
pop
jmp
ins
jg
imul
xchg
je
push
jae
mov
mov
cmp
mov
xchg
cmp
int
out
inc
loop
xchg
fs
fnstsw
int
icebp
push
mov
aam
mov
pop
data16
out
jge
cli
loopne
sar
pop
mov
in
loop
mov
pop
and
in
retf
ja
xor
loop
lods
cmp
xor
sub
xchg
add
pop
xchg
cmc
and
add
add
(bad)
sbb
(bad)
inc
sub
dec
lock
dec
sahf
sti
hlt
or
movs
xor
or
gs
push
sub
adc
and
loope
jle
push
lea
sbb
sub
mov
(bad)
and
xchg
pop
nop
dec
inc
inc
adc
push
inc
in
je
hlt
and
fisub
pop
push
xor
pop
lock
call
inc
fadd
dec
cmp
je
xor
push
stos
pop
xchg
jbe
test
loop
sbb
cmp
stc
in
sti
sar
idiv
lods
adc
xchg
push
cld
lds
add
xor
rol
std
rcl
adc
pop
adc
(bad)
mov
xchg
xor
les
mov
pop
push
and
fild
clc
jns
and
ror
cmp
push
add
ss
sbb
repnz
cs
add
or
enter
inc
pop
jne
in
cmp
sub
xchg
mov
ret
sahf
stos
test
pusha
imul
xor
jge
inc
repz
neg
test
fnstenv
test
ins
jmp
(bad)
ficomp
clc
add
retf
mov
jmp
loopne
fnstsw
outs
cdq
retf
jnp
push
jmp
fbld
mov
or
pop
(bad)
adc
nop
jnp
xchg
aam
push
push
bound
repz
mov
ins
sbb
mov
mov
pop
or
retf
jp
in
nop
imul
test
int3
xchg
mov
out
push
jg
retf
mov
cmp
pop
in
jmp
sub
aas
jmp
lds
stos
lods
or
idiv
mov
jae
nop
cs
fstp
sub
jle
ficomp
in
mov
fwait
pop
push
fstp
mov
or
rol
mov
mov
lea
and
mov
adc
lea
imul
pop
aas
popf
test
xchg
stos
daa
inc
sub
scas
fidiv
ret
(bad)
out
and
repz
std
or
xchg
movs
pop
mov
and
or
sbb
aad
push
mov
xor
jns
push
mov
test
stc
scas
push
into
push
push
pop
cmp
inc
sub
jmp
fisub
dec
icebp
jnp
mov
idiv
neg
jne
jmp
in
mov
cmp
mov
aad
dec
or
mov
jbe
test
outs
mov
push
mov
pusha
adc
repnz
imul
push
daa
cmp
test
arpl
std
push
ror
(bad)
mov
daa
cmps
add
mov
rol
(bad)
and
movhlps
mov
cwde
add
addr16
into
mov
jnp
dec
fwait
rcr
dec
jo
test
cmp
xchg
mov
shr
lea
inc
add
dec
or
rcl
mov
inc
xor
or
ins
pop
or
scas
loopne
inc
inc
inc
stos
push
movs
xor
pop
jno
movs
and
pop
pushf
sbb
call
rcl
cmp
out
dec
mov
and
push
xor
loope
sbb
add
cmp
mov
inc
adc
xchg
xchg
cmp
dec
call
movs
jle
ret
xor
clc
xor
add
mov
mov
daa
outs
mov
inc
lock
or
aas
and
jb
out
xor
and
repz
cmp
in
iret
pop
sub
push
sbb
pop
xchg
dec
add
or
add
sti
mov
pop
cmp
bnd
outs
jno
inc
cmps
adc
push
lods
in
dec
(bad)
jmp
fmul
mov
pop
dec
sbb
mov
popf
clc
inc
mov
stos
daa
aaa
cli
sbb
xchg
inc
arpl
ins
fstp
(bad)
pop
xor
xor
jns
(bad)
jg
pushf
out
jmp
int3
inc
loopne
sahf
repnz
lock
mov
mov
aam
mov
lock
scas
out
ins
sub
xlat
mov
in
mov
xor
imul
xor
and
es
jne
fninit
push
pop
daa
mov
add
xchg
and
lahf
rcr
add
daa
xor
sbb
sar
jmp
cmp
mov
xchg
loop
add
enter
cld
mov
jnp
mov
sbb
push
nop
or
repnz
repnz
cmc
cwde
pop
movaps
xchg
push
cld
dec
dec
data16
mov
pop
repz
outs
dec
out
fs
xor
sub
clc
sub
xor
push
or
cdq
sbb
xor
(bad)
xchg
push
add
sahf
adc
(bad)
retf
mov
sti
mov
pop
pop
(bad)
(bad)
jmp
sub
push
mov
mov
stos
and
js
sbb
xchg
das
adc
sti
aas
adc
(bad)
in
(bad)
pop
xchg
push
mov
call
pop
and
shl
movs
xor
and
jg
outs
adc
dec
test
inc
jae
pop
push
les
mov
sub
pop
test
add
push
(bad)
(bad)
aas
stos
call
sbb
mov
xor
scas
cdq
push
or
ret
outs
adc
aad
and
retf
sub
xor
shl
cmovp
lea
mov
cmp
scas
adc
je
push
loopne
fwait
ds
aad
push
pop
shl
fwait
outs
inc
xchg
stos
loop
mov
cmps
dec
das
ret
inc
test
adc
pushf
test
sbb
int
aam
fld
int3
adc
mov
and
mov
imul
xor
push
lods
pop
in
(bad)
jb
in
pushf
or
clc
inc
lock
xchg
add
mov
or
add
jne
cmp
cmp
or
push
jne
pusha
jl
push
movs
sub
adc
in
and
push
or
xor
sub
(bad)
aas
push
sub
in
aad
pop
or
ja
xchg
sahf
lds
cmps
sub
sbb
repnz
mov
imul
cmps
dec
emms
and
cmp
sub
sar
mov
lock
mov
adc
in
jle
outs
xchg
inc
js
test
in
mov
test
rcl
add
pop
adc
xchg
xchg
add
xchg
movs
pop
lahf
sub
jae
stos
stos
mov
clc
mov
xchg
sbb
ds
jnp
inc
cld
scas
sbb
cmps
jmp
fs
test
into
imul
cmps
fbstp
push
xchg
pop
cwde
test
movs
movs
mov
mov
fcmovnu
es
out
mov
cdq
xchg
daa
add
call
pop
ficomp
dec
gs
ja
jmp
sahf
popa
ss
fucom
xchg
pop
fcmovne
pushf
xor
(bad)
fsubr
ret
mov
test
outs
out
and
ret
or
xchg
xchg
sbb
inc
stos
ror
cwde
fidiv
movs
mov
xchg
shl
call
out
cmp
push
lahf
(bad)
sar
cmp
push
leave
add
hlt
in
pop
or
add
mov
xchg
icebp
sahf
and
lods
in
aaa
cmp
cmp
push
and
ror
jecxz
retf
push
jp
xor
icebp
mov
sub
dec
inc
(bad)
xchg
mov
sub
xchg
push
aas
out
mov
aam
(bad)
out
xchg
popf
outs
(bad)
retf
or
(bad)
mov
jmp
imul
pop
pusha
idiv
loopne
jl
idiv
and
mov
test
fwait
lods
scas
jg
sahf
div
clc
bound
test
sub
sbb
das
xchg
dec
ja
data16
mov
(bad)
aam
retf
and
ret
xor
fnstcw
and
pop
in
fidivr
cmp
mov
rep
sub
pop
dec
mov
out
and
jg
dec
xchg
ds
aad
dec
jae
inc
mov
ffreep
icebp
xchg
scas
repz
ds
ss
test
(bad)
out
xchg
fs
mov
les
xlat
mov
mov
sbb
add
sbb
push
jg
(bad)
and
cmps
or
inc
xor
jmp
js
xchg
adc
sti
sbb
loopne
stos
pop
mov
in
xchg
sbb
jbe
push
test
adc
ss
arpl
add
mov
cmps
push
mov
test
dec
mov
cli
xlat
(bad)
ins
adc
sbb
mov
mul
loope
in
or
sub
mov
in
rcr
clc
add
lods
hlt
jmp
es
lahf
loopne
neg
push
add
jns
fidiv
pushf
mov
rcl
fidiv
rcl
scas
int3
xor
stos
(bad)
mov
mov
bound
popf
inc
stos
and
dec
neg
lods
pop
mul
out
out
push
out
push
ret
sub
xchg
in
push
ret
push
mov
cld
and
popa
retf
stos
push
sub
mov
int3
pop
test
pop
mov
(bad)
fst
not
and
(bad)
pusha
pusha
out
dec
adc
ret
mov
xor
mov
(bad)
push
clc
mov
int3
cwde
int3
xor
adc
cmp
daa
jb
and
push
jno
ror
sub
add
mov
lds
push
jle
cmp
mov
mov
pop
cs
and
cmp
and
xor
(bad)
cmp
sbb
mov
fisttp
scas
retf
cwde
loope
pop
lods
pop
push
cmps
push
hlt
mov
jb
adc
aad
sub
sbb
or
xchg
shl
dec
sbb
scas
je
test
jge
xchg
dec
push
imul
cmp
mov
daa
(bad)
xor
rcr
ja
adc
mov
pop
sti
push
repnz
and
mov
adc
push
test
test
(bad)
hlt
das
xor
cmp
mov
mov
cwde
sub
iret
(bad)
cwde
inc
and
pushf
cmps
cmp
cmc
xchg
pop
pop
dec
mov
pushf
sub
mov
and
shl
jmp
mov
pop
push
sub
loopne
dec
cld
(bad)
mov
scas
push
in
sub
push
pop
test
sahf
fisubr
cdq
stc
or
sub
dec
lock
aaa
inc
jl
loope
add
in
stos
mov
retf
mov
jg
push
mov
adc
xchg
stc
jnp
or
add
mov
or
cmps
enter
fstp
fiadd
movs
cmp
or
mov
jle
dec
cmp
out
add
in
cmp
imul
dec
popa
cmp
mov
xchg
mov
scas
cmps
mov
shl
nop
es
cmp
pop
inc
ss
mov
cmp
int3
nop
sbb
jecxz
movs
ret
test
sbb
xor
mov
ds
andps
pushf
add
pop
cmp
les
popa
push
push
stos
sub
jnp
jmp
ss
out
mov
test
ret
lahf
push
cmp
sbb
inc
fisubr
xchg
iret
test
into
xchg
hlt
ret
pop
lea
leave
pop
ins
dec
sub
lahf
cld
movs
mov
or
adc
mov
stos
(bad)
xchg
aas
push
push
and
(bad)
push
xchg
xchg
dec
in
or
mov
mov
faddp
jmp
out
cld
jecxz
jo
mov
cmp
mov
mov
adc
fisubr
push
outs
push
push
aas
int
(bad)
jo
cdq
mov
mov
test
sahf
push
leave
cmp
mov
das
pop
add
mov
cmps
arpl
mov
xor
sub
sbb
adc
loopne
jno
idiv
shl
repz
cmp
fisttp
dec
pop
sahf
es
movs
mov
(bad)
push
enter
or
cmp
into
push
ins
aaa
imul
in
pop
call
jl
std
call
adc
repnz
mov
sbb
call
ret
mov
mov
popw
mov
add
mov
jg
jnp
sbb
daa
jmp
int3
pop
hlt
fistp
rcr
jmp
ins
sahf
inc
in
inc
lahf
pop
(bad)
pop
loop
int
lock
and
mov
and
mov
mov
fld
jb
in
sbb
aam
mov
(bad)
(bad)
or
push
pop
jl
cdq
in
jnp
cmp
and
aaa
push
(bad)
xchg
imul
(bad)
sub
mov
cwde
movs
cmp
push
jo
ficomp
xor
xor
jmp
push
leave
gs
shl
or
mov
(bad)
sbb
sbb
xchg
mov
and
leave
cmp
imul
push
mov
js
adc
iret
sar
jno
lock
dec
mov
clc
add
jge
xchg
xor
movs
fstp
out
enter
and
mov
aam
cmps
ficom
inc
into
inc
sbb
fdiv
sbb
mov
pop
or
in
loop
or
shl
gs
xlat
adc
sar
out
nop
adc
mov
lea
imul
inc
cmp
mov
xor
addr16
fisub
push
mov
call
(bad)
scas
add
dec
mov
xor
xor
push
mov
sbb
jo
scas
add
mov
or
inc
adc
xor
cld
(bad)
pop
and
jge
xchg
jns
add
or
inc
mov
retf
stos
je
repz
xchg
sub
jle
in
jmp
movs
adc
aad
inc
lods
xor
rcpps
in
jnp
setne
sbb
iret
jmp
jnp
loop
ret
test
and
movs
xor
ficom
and
mov
jbe
test
sub
cmp
repz
dec
xlat
lds
js
int
cld
pop
cmp
dec
ds
out
dec
enter
and
in
pop
mov
sub
and
sbb
mov
js
add
iret
pop
and
call
rcr
cmp
sbb
(bad)
(bad)
fwait
ss
and
adc
fbld
adc
mov
out
cmp
gs
mov
dec
in
movs
dec
cwde
cmp
push
pusha
data16
mov
mov
out
test
ss
push
sub
cdq
push
xor
ins
loop
cmp
test
inc
div
pusha
pop
and
add
loopne
cmp
and
pop
pop
mov
in
xchg
or
rcr
pop
cli
pop
mov
push
sbb
lock
xor
sub
lea
out
and
mov
dec
ins
fwait
gs
test
fwait
inc
push
dec
in
cmp
imul
std
lock
jp
movs
push
loopne
daa
pusha
add
test
daa
aad
in
xor
fcmovb
movs
sbb
(bad)
pop
pop
push
enter
cmp
inc
sub
jmp
and
fld
jno
add
add
sbb
adc
fwait
pushf
xchg
push
es
inc
mov
shl
and
mov
test
shl
aad
out
int
retf
fwait
add
imul
push
pop
push
and
mov
sub
mov
icebp
pop
pop
xor
mov
mov
test
push
popa
or
sub
fcomi
loopne
(bad)
cmp
shl
push
imul
fnstenv
mov
jb
sar
mov
pop
adc
jmp
mov
sbb
adc
add
test
mov
cmc
adc
inc
dec
and
in
inc
stos
mov
cmp
les
in
scas
xor
and
cmp
xchg
in
inc
or
push
fwait
popfw
and
out
xchg
addr16
lds
fs
repz
mov
repz
or
fdiv
cdq
daa
push
xchg
hlt
xor
push
sbb
ret
jl
pop
push
add
xor
jmp
add
mov
ds
lock
jecxz
xor
aaa
out
inc
xchg
mov
repnz
std
out
xchg
test
scas
xlat
mov
sbb
mov
mov
mov
cwde
push
ret
fisub
inc
mov
lahf
mov
hlt
sub
shl
push
int
sbb
pop
sub
jp
shl
pop
stos
(bad)
pop
stos
test
xor
pop
jmp
call
jmp
mov
out
push
push
or
and
or
popa
sahf
mov
pop
add
sub
mov
je
sbb
mov
cmpxchg
ds
xor
out
mov
fidivr
(bad)
clc
cs
enter
(bad)
cwde
or
(bad)
jae
sub
add
aad
test
out
inc
adc
sbb
mov
mov
fwait
ins
add
jns
jge
(bad)
push
call
sbb
fnsave
div
xor
xchg
jmp
dec
clc
aas
mov
pushf
push
das
cmp
xor
into
push
mov
sbb
ins
sub
mov
push
and
les
js
jbe
repnz
lea
add
xor
call
xor
mov
outs
pop
pop
jle
jno
push
fcomp
fld
sub
in
sub
lock
dec
aam
pop
aas
movs
ret
push
ror
xchg
and
adc
(bad)
daa
pop
add
push
(bad)
sub
and
inc
mov
push
adc
in
push
sti
and
arpl
adc
or
(bad)
mov
es
sbb
mov
mov
addr16
cdq
imul
aad
fisttp
out
xchg
repz
sbb
cli
dec
mov
loope
mov
stos
mov
(bad)
jb
sti
outs
mov
jmp
mov
das
mov
mov
imul
pusha
mov
cs
jmp
fst
les
mov
xchg
lea
fbstp
das
xor
shr
mov
or
das
les
out
(bad)
mov
cli
lahf
inc
xchg
ret
movs
fnclex
pop
pop
adc
add
lds
(bad)
pop
xchg
xchg
ds
(bad)
(bad)
shr
cmps
cmp
add
pop
fwait
dec
movs
and
cdq
int
test
mov
adc
repnz
int
ror
pop
iret
jnp
xchg
fwait
clc
scas
mov
mov
lods
xchg
idiv
push
rcl
mov
add
pusha
inc
pop
pop
mov
xchg
fcmovnb
jle
push
sub
jb
xchg
cmp
out
leave
xor
repz
aam
dec
jecxz
leave
mov
add
xchg
cmp
mov
clc
mov
and
movs
push
pop
(bad)
dec
xor
lods
jb
iret
push
ret
jae
sub
jmp
sbb
xchg
hlt
addr16
adc
bound
dec
and
in
inc
mov
fisub
pop
lea
pop
xor
arpl
dec
mov
mov
dec
push
out
int
imul
imul
js
lock
daa
sbb
(bad)
loop
push
loopne
sbb
fisub
or
pop
xor
dec
sub
fnstcw
loop
icebp
and
ins
ins
xor
stos
jmp
outs
jmp
or
lods
ret
dec
syscall
adc
cmp
lods
sbb
xchg
inc
ret
lea
imul
mov
or
scas
mul
jge
sbb
jle
fwait
xchg
dec
out
pop
fadd
(bad)
pop
mov
nop
mov
iret
adc
retf
or
ins
adc
push
push
cld
fidiv
sbb
jnp
and
pop
add
les
or
add
leave
adc
outs
add
push
jno
pop
das
xchg
pop
push
jnp
(bad)
push
push
mov
mov
(bad)
xchg
loop
pop
ja
pop
or
(bad)
push
mov
dec
or
cmp
in
add
push
jbe
mov
out
icebp
popf
push
xchg
out
add
pop
xor
lods
mov
hlt
mov
adc
mov
(bad)
iret
xor
ret
loopne
outs
test
ds
push
mov
mov
sahf
jns
or
mov
sbb
scas
dec
push
scas
xchg
mov
cmp
sub
jp
xor
(bad)
xchg
dec
and
lock
popf
cmps
or
sbb
mov
mov
jge
rol
stc
jo
scas
sbb
inc
inc
inc
dec
retf
and
and
arpl
push
or
sub
call
in
jecxz
jns
mov
sahf
cli
ins
es
call
ret
push
test
xchg
mov
xor
movs
sbb
in
mov
jmp
xor
fimul
test
mov
retf
pop
aaa
mov
or
enter
inc
dec
xchg
jo
cmp
lods
out
aad
cmp
idiv
shl
dec
add
sbb
into
leave
jae
mov
mov
(bad)
sub
popa
test
dec
adc
pop
sub
inc
cwde
mov
pushf
inc
es
arpl
dec
push
cmp
jle
dec
out
outs
mov
adc
out
clc
clc
out
fisttp
mov
shr
enter
cmp
push
dec
(bad)
xchg
push
jmp
icebp
pop
(bad)
ja
sub
jno
fistp
mov
mov
or
repnz
adc
or
and
fdiv
leave
or
jb
pop
push
pusha
jmp
jne
popf
frstor
jb
arpl
je
jae
fnstenv
push
inc
sbb
or
dec
push
mov
outs
adc
pop
jmp
jl
mov
int
jns
adc
cwde
jmp
movs
push
ficom
in
push
imul
ret
in
sbb
addr16
adc
and
cld
sbb
add
jnp
xchg
add
push
repz
xlat
adc
xlat
pusha
jne
popa
adc
(bad)
hlt
push
push
jo
shl
xchg
push
push
dec
pop
shl
push
test
movs
xchg
rol
lea
or
xchg
les
and
stos
and
in
adc
pushf
cld
pop
jp
cld
jns
jmp
sbb
std
loopne
outs
mov
sub
pop
jecxz
addr16
mov
lds
lods
hlt
leave
fild
lea
jp
pop
jmp
pop
fbstp
jecxz
mov
add
mov
dec
int
loope
push
xor
arpl
jle
sub
fstp
(bad)
mov
es
sahf
jmp
daa
shl
jl
lods
scas
ss
and
scas
push
aas
push
and
inc
fs
das
call
out
test
mov
sub
dec
or
mov
rcpps
sbb
mov
sub
dec
clc
and
mov
out
pop
mov
mov
test
ds
xchg
jae
shl
sub
mov
repnz
test
add
pop
out
test
or
pop
nop
cmp
or
not
test
pop
sub
sub
mov
test
enter
jge
sahf
or
test
stc
ss
outs
sbb
scas
sub
pop
mov
adc
jae
ds
push
jo
adc
pop
sbb
jo
nop
mov
aas
or
fucomp
push
fwait
mov
jmp
or
sbb
push
and
cmp
xor
call
xor
cmp
add
xor
inc
dec
call
outs
out
pop
adc
add
movs
pop
cmp
and
xor
and
movs
or
push
ret
add
(bad)
jge
add
mov
pop
mov
pop
mov
and
retf
xchg
jl
pop
pop
cs
ja
mov
pop
(bad)
cmc
jmp
mov
sbb
stc
sub
add
pop
push
pop
jg
pop
sub
(bad)
in
xchg
adc
jg
lea
push
mov
pop
push
cmp
dec
push
fwait
mov
cmp
std
push
ret
fiadd
es
clc
std
fsubr
ss
inc
rol
pop
es
in
inc
push
fld
cld
pop
es
sub
xchg
stos
das
push
data16
in
out
sbb
jge
xchg
outs
xor
or
jl
push
test
cmc
inc
das
js
mov
sub
cmp
aad
inc
outs
in
add
ins
retf
sbb
sub
mov
sub
test
mov
addr16
aad
mov
sti
packuswb
nop
loope
stc
sbb
test
jb
iret
pop
int3
dec
jecxz
xor
stos
sbb
stc
frstor
call
jg
mov
add
jb
jmp
mov
fistp
(bad)
jg
dec
cdq
jp
shl
repnz
imul
adc
jo
push
adc
sbb
fisttp
mov
and
stos
jmp
inc
imul
movs
out
dec
mov
jp
aad
jno
call
pop
iret
add
xchg
adc
xchg
inc
xchg
cwde
movs
call
adc
push
sbb
xchg
loopne
pop
(bad)
enter
icebp
fcomi
xor
es
mov
movq
mov
loop
xchg
dec
bound
fadd
fst
int3
dec
sahf
jg
aas
dec
sbb
out
daa
jle
test
jno
push
adc
pop
sbb
cli
sti
and
fisub
push
cmc
out
add
imul
lods
loop
addr16
cmp
pop
xor
into
enter
or
jge
push
outs
pusha
or
sbb
inc
in
loope
cmp
fidivr
inc
xchg
add
or
outs
pop
xchg
jecxz
dec
aas
retf
adc
ret
sbb
imul
icebp
mov
add
jg
lahf
out
and
shl
(bad)
or
cmp
mov
xchg
pop
mov
pop
sahf
mov
int
sub
push
mov
push
and
dec
fld
jmp
or
shr
mov
cld
pop
outs
out
xlat
cmps
(bad)
mov
out
jmp
mov
jmp
fisub
jmp
push
sbb
out
pop
cwde
sbb
mov
push
mov
dec
and
add
push
mov
xor
out
sbb
mov
jmp
xor
rcl
in
sti
pusha
test
rcl
rcl
shl
repnz
adc
mov
and
dec
jae
rcr
cmp
pop
dec
xor
jge
xchg
push
mov
leave
pop
mov
sbb
xchg
in
add
(bad)
pop
cmps
sbb
jecxz
mov
push
aad
movs
push
mov
xchg
lods
pop
sub
test
scas
xor
push
iret
ret
icebp
inc
ja
mov
cdq
inc
dec
sub
mov
jbe
(bad)
jne
aam
fisttp
ret
mov
mov
mov
push
jecxz
mov
xor
mov
push
adc
imul
neg
nop
xchg
add
xchg
mov
fdiv
(bad)
aam
repz
jb
xor
jmp
and
ja
mov
sub
daa
lock
push
les
lock
ds
fsubrp
arpl
xchg
xor
push
push
lock
cmp
stc
sbb
loopne
movs
fst
popa
push
dec
inc
or
aam
lea
icebp
es
mov
psadbw
stos
sub
sar
sub
adc
sub
call
pop
dec
mov
push
and
dec
inc
(bad)
fnstenv
js
mov
or
pushf
fild
sbb
xor
push
leave
stos
outs
movs
xchg
outs
or
cmps
imul
dec
sub
xor
jl
in
jecxz
mov
push
shl
shl
pop
lods
test
cmp
adc
lea
sbb
xchg
jecxz
pusha
xor
fst
dec
lea
call
ret
inc
adc
adc
repz
pushf
inc
mov
or
in
mul
cmp
imul
push
jl
push
cdq
sahf
clc
push
pop
cmps
iret
mov
push
add
je
push
ds
pop
ficomp
fistp
(bad)
or
scas
push
mov
nop
imul
(bad)
iret
jb
pushf
jl
das
pop
rcl
inc
jb
dec
and
xchg
mov
mov
lods
sbb
call
test
add
mov
popa
hlt
outs
fimul
mov
dec
jnp
or
jp
js
mov
stos
clc
xchg
scas
pop
pop
xchg
mov
jg
pop
inc
jne
xlat
jns
xchg
jbe
or
jmp
mov
dec
pusha
add
inc
call
or
pop
sbb
pop
adc
daa
loope
sub
pop
push
mov
in
cmc
rcr
mov
stos
mov
mov
repz
push
jae
jb
js
inc
mov
pop
add
stos
clc
xor
inc
jno
fsub
sub
loope
jecxz
loope
in
out
loope
(bad)
mov
out
inc
cmp
cmps
add
sbb
sbb
or
loopne
add
and
jp
repnz
sbb
test
test
xor
add
sar
push
movs
mov
lods
sbb
clc
xchg
fwait
das
je
hlt
push
out
psrlw
dec
(bad)
stc
repz
cmp
imul
adc
loopne
int
lock
les
adc
scas
les
pusha
cld
push
icebp
xor
mov
or
in
mov
loope
jno
xchg
sbb
dec
and
mov
jnp
inc
xlat
sub
fiadd
stc
(bad)
cmp
in
adc
rcr
addr16
fs
shl
push
lock
aam
repz
hlt
cmp
or
push
jl
out
mov
scas
xchg
mov
mov
and
dec
hlt
bound
hlt
xchg
jae
mov
nop
rol
nop
xchg
retf
jmp
push
mov
mov
ja
jne
imul
movs
cmps
fiadd
push
push
inc
movs
cdq
daa
aas
call
mov
or
inc
fnstenv
pop
out
add
call
mov
cdq
push
push
(bad)
jne
iret
in
icebp
and
fld
jnp
addr16
cld
nop
jne
xlat
cmp
dec
cmp
jl
lea
dec
xchg
pop
test
xor
sub
es
in
cmp
test
clc
call
and
sar
mov
dec
icebp
nop
int
mov
(bad)
jmp
cmp
dec
aas
sbb
in
repnz
sbb
je
dec
clc
sub
sbb
mov
les
mov
lock
push
jge
cmp
sbb
sbb
into
lods
mov
(bad)
(bad)
add
jo
push
jg
sbb
stc
in
movs
aad
(bad)
jle
mov
inc
movs
pop
sub
test
popa
adc
sbb
fmul
fwait
sahf
cmp
mov
cli
push
xchg
popf
(bad)
popf
cs
inc
inc
adc
imul
mov
aad
repz
icebp
jp
les
mov
pop
adc
xor
mov
xchg
adc
imul
loope
cli
mov
fnsave
dec
daa
add
sub
pop
inc
xchg
movs
das
mov
fmul
adc
sbb
inc
test
fadd
mov
call
push
xor
pusha
mov
daa
popf
xchg
lahf
adc
jge
ja
leave
xor
cmc
mov
push
ins
sbb
pushf
je
mov
cwde
loopne
sbb
sbb
mov
xchg
sahf
or
pop
popf
xor
data16
dec
push
cs
jl
push
cmp
mov
cmp
scas
fsubr
popf
fisub
add
jp
mov
inc
xlat
inc
int3
dec
fistp
lea
test
cmp
and
jbe
push
dec
dec
(bad)
jecxz
push
mov
jmp
jnp
xor
into
inc
cmp
bound
popa
sbb
pop
movs
mov
ja
ja
mov
inc
les
mov
enter
add
pop
push
mov
push
popf
fmul
bound
inc
cmp
jl
aas
sti
inc
ds
fs
push
mov
jge
test
in
inc
es
aam
or
xchg
sbb
jno
jno
jmp
mov
sbb
cmp
pop
add
push
cdq
shr
imul
or
outs
xchg
mov
sbb
mov
dec
leave
fwait
std
pop
mov
out
mov
adc
stos
mov
test
mov
fcmovne
push
push
out
(bad)
adc
test
aam
jno
out
mov
mov
push
pusha
ror
or
adc
jno
and
test
jp
mov
push
pusha
mov
hlt
push
mov
mov
daa
adc
mov
lea
or
lahf
or
aas
adc
pop
enter
sbb
jne
pop
imul
data16
inc
mov
pushf
rcr
adc
pop
loop
(bad)
in
push
dec
outs
inc
and
add
or
js
sub
fdiv
pop
ror
cmp
rol
push
mov
cmp
and
xchg
push
or
mul
retf
ret
jle
hlt
sub
jge
std
adc
mov
xchg
jp
cdq
jge
dec
shr
xchg
xchg
sahf
fdivr
mov
call
in
ds
and
gs
cli
loopne
cmp
test
jmp
fcom
cld
in
cld
mov
xchg
scas
xchg
aas
dec
movs
inc
xor
fwait
loope
call
clc
or
cmc
xchg
into
(bad)
ffreep
fnstcw
mov
cmp
and
ret
daa
and
xor
cmp
dec
out
fs
out
bnd
cld
inc
out
ds
fcom
jnp
loop
sbb
jp
fwait
retf
sub
repnz
jp
icebp
sub
int3
sbb
inc
xchg
jl
pop
xor
lds
leave
nop
ror
mov
ins
jb
pop
jns
ret
cmc
cmp
push
adc
(bad)
adc
xlat
or
jg
iret
or
or
mov
cmc
jg
test
ret
and
frstor
in
lods
movs
ins
loop
int
pop
xchg
int3
int
fadd
inc
pop
xchg
pop
stc
mov
test
mov
and
and
movs
xor
repnz
aas
mov
or
xchg
push
icebp
enter
mov
xchg
ins
mov
iret
in
hlt
(bad)
push
cmp
ins
push
aad
pushf
iret
inc
add
pop
sub
les
sbb
and
loop
ins
push
jl
dec
pop
in
mov
push
jo
movs
(bad)
sbb
mov
mul
rol
scas
push
mov
jb
lods
gs
inc
pop
mov
int
pusha
(bad)
jmp
push
shr
mov
(bad)
sbb
push
push
sbb
push
mov
push
cmp
adc
mov
pop
inc
mov
cld
(bad)
fistp
iret
adc
xchg
jo
mov
adc
jns
mov
and
cld
ins
ret
dec
xchg
xlat
push
push
int3
dec
ja
xchg
xchg
test
pushf
jo
inc
fild
pushf
in
dec
xchg
inc
dec
xchg
aam
push
adc
inc
repz
xchg
sbb
les
pop
cld
mov
imul
mov
inc
dec
dec
shr
pop
pop
xor
or
ds
jmp
cmp
xchg
sub
cs
push
stc
cmp
ret
push
push
sbb
jno
add
push
inc
setae
sbb
inc
mov
mov
stos
enter
jmp
out
add
dec
lods
or
(bad)
pop
dec
(bad)
lods
leave
scas
int3
mov
xchg
(bad)
aas
xor
sbb
in
mov
mov
sub
leave
dec
test
scas
sub
mov
inc
or
lds
loopne
adc
xchg
fwait
pop
adc
das
adc
pminub
adc
shl
xchg
call
adc
push
int
adc
mov
mov
leave
(bad)
ins
ins
and
sbb
inc
push
gs
inc
pop
xchg
gs
jne
adc
mov
dec
cmp
pop
xlat
push
call
je
sti
in
imul
add
jmp
dec
popf
inc
stos
pop
mov
scas
mov
mov
les
xchg
scas
or
pop
adc
cmp
push
pop
sar
cmps
fwait
or
xor
inc
inc
sub
and
xor
sbb
xor
js
sti
pusha
fnsave
add
loop
jle
adc
or
test
and
in
push
out
mov
test
jb
clc
mov
in
and
mov
mov
jne
mov
pop
stos
test
push
push
pop
mov
(bad)
add
push
add
pop
add
jmp
pop
(bad)
mov
sar
xchg
movs
nop
inc
loopne
sub
adc
scas
bound
push
cmp
mov
inc
test
icebp
sbb
mov
in
inc
inc
fadd
cmp
inc
(bad)
scas
std
mov
mov
scas
and
fmul
hlt
int
fiadd
rcr
stc
mov
jae
dec
icebp
mov
popa
sub
aam
mov
dec
add
pop
cmp
xchg
in
cmp
sahf
rcr
or
push
fisub
and
push
mov
test
sub
lds
cdq
inc
loopne
mov
mov
push
dec
push
repnz
ret
outs
data16
sub
adc
jbe
scas
sub
cwde
in
ja
bound
fwait
lods
fstp
sbb
lods
inc
jae
in
jl
dec
pop
mov
frstor
mov
push
into
(bad)
loopne
or
add
es
pop
xchg
nop
mov
xchg
dec
push
push
lahf
jg
mov
cmp
sub
mov
xchg
and
nop
push
stos
stc
or
out
jmp
hlt
daa
fsubr
imul
aaa
pop
test
adc
scas
jl
dec
imul
mov
jmp
mov
dec
jns
cmp
jl
mov
inc
mov
mov
lods
add
or
and
cmc
mov
(bad)
sbb
push
mov
sub
dec
or
mov
jnp
aaa
(bad)
sub
push
push
stc
aas
or
imul
arpl
bound
xor
ror
jno
dec
iret
jne
xchg
pusha
cmp
mov
mov
push
cwde
int
jmp
(bad)
cmc
jne
xchg
lds
add
inc
adc
mov
cld
pop
stos
sub
repnz
adc
adc
fidivr
pop
adc
sbb
inc
mov
pusha
outs
lock
pop
jo
mov
fadd
ror
sbb
(bad)
xchg
inc
mov
lods
fs
int
sub
xor
bnd
xchg
cdq
xchg
(bad)
mov
aas
fcomp
push
add
push
sbb
push
out
and
cmp
dec
test
xchg
sbb
and
mov
push
retf
push
inc
sbb
adc
movs
mov
cdq
push
sbb
xor
or
jl
aam
inc
lidtd
dec
sbb
sub
cmps
ins
pop
xor
inc
xchg
mov
push
mov
hlt
sub
repnz
mov
out
mov
adc
pop
pop
add
add
jae
enter
(bad)
jp
mov
das
out
dec
xchg
xor
push
clc
or
sti
xor
mov
xor
pushf
js
pusha
(bad)
aas
inc
xor
lea
aad
sbb
out
and
push
pop
fdiv
pop
pop
stc
retf
sbb
push
cli
or
int
retf
loop
jno
pop
and
jo
and
sahf
inc
add
ror
(bad)
es
xor
cdq
pop
lea
push
push
add
or
jns
ins
adc
cmp
(bad)
mov
xchg
rcl
test
sbb
inc
iret
xor
neg
pusha
jg
cwde
(bad)
and
adc
fwait
ins
dec
mov
add
mov
in
push
fadd
test
inc
ds
sub
sbb
jne
adc
jne
in
mov
push
add
repz
fldcw
pop
xchg
lods
loope
xchg
pop
cmps
data16
add
xor
fsubr
test
retf
dec
xchg
mov
add
sub
imul
and
ror
sbb
cmps
bound
jno
xchg
inc
xchg
xlat
mov
pop
push
xor
push
sub
push
iret
test
xlat
scas
add
mov
imul
cmps
inc
pop
clc
push
mov
in
repz
mov
cmp
pop
jge
mov
xor
retf
mov
xchg
scas
gs
jbe
inc
jecxz
std
(bad)
jecxz
je
rcl
call
in
shl
lea
inc
test
mov
aam
inc
rol
cmp
add
mov
mov
dec
cld
pop
xchg
stos
pushf
adc
push
imul
inc
xor
dec
sbb
mov
clc
fnstsw
cmp
cmp
cli
repz
into
pushf
rol
repnz
stc
pushf
mov
xchg
pop
mov
fcomp
cmp
lea
aam
popa
mov
nop
and
sahf
lock
ds
jle
cmps
jp
push
lock
push
mov
push
push
sbb
loopne
scas
loopne
mov
lds
outs
or
xchg
cmp
jmp
hlt
inc
mov
mov
cmc
pop
jae
mov
lods
imul
and
adc
out
and
iret
or
mov
xchg
xchg
xor
mov
or
xchg
rcl
mov
imul
out
(bad)
movs
sub
jbe
pusha
es
xchg
sub
lea
psllw
call
push
add
aas
cs
or
aas
nop
cmc
into
mov
inc
mov
stos
sti
mov
dec
and
fist
push
dec
lds
or
xor
in
ins
imul
std
clc
add
jle
inc
or
xor
jno
jmp
fwait
pop
imul
sub
ficom
xor
sti
sub
push
repnz
mov
cmps
jecxz
sbb
mov
je
pop
repz
mov
adc
mov
jno
pop
in
aas
clc
dec
mov
daa
int3
or
inc
cmp
xor
je
aam
dec
lods
lahf
inc
(bad)
xchg
mov
in
loopne
sahf
fnsave
mov
retf
lea
loope
xchg
cwde
lds
inc
aas
inc
sbb
ja
stos
adc
push
sub
add
sbb
scas
jns
xor
inc
push
inc
jmp
mov
sub
inc
pop
sub
fisttp
xor
cmp
cld
inc
xchg
xchg
and
arpl
outs
ds
push
push
xchg
in
mov
pusha
test
cmps
les
in
pop
out
(bad)
adc
add
adc
popf
retf
in
retf
and
mov
mov
ins
cmp
popa
data16
xor
jle
out
sbb
jp
sbb
into
xor
pop
inc
mov
(bad)
out
and
mov
or
and
mov
lds
jnp
(bad)
ss
shl
nop
dec
arpl
xor
push
sar
sub
mov
mov
xchg
xchg
xchg
test
mul
stos
mov
test
pop
or
adc
mov
xlat
mov
not
and
inc
loope
jle
add
ret
xchg
xchg
add
mov
stos
jg
ret
adc
cmc
repz
add
adc
fstp
sub
mov
cmp
stos
pop
fldenv
push
test
or
inc
retf
mov
pop
add
xchg
sub
aaa
in
push
sub
add
mov
and
pop
adc
in
test
adc
test
out
sar
pop
cdq
sub
lods
jg
in
sbb
jno
shr
fcomp
cmp
inc
mov
sub
outs
arpl
sub
into
mov
mov
cli
int3
in
inc
out
cmp
sub
xchg
ret
xor
outs
mov
adc
jecxz
xor
pushf
mov
cs
sub
mov
cmp
jp
adc
sti
mov
lods
or
xchg
mov
cmp
fcomp
sub
aaa
aaa
mov
clc
test
cmps
or
mov
shl
test
xor
ds
jl
in
pop
adc
or
cdq
fnstcw
sub
adc
inc
repz
xchg
bound
and
les
enter
push
fnclex
push
in
mov
and
jmp
shr
fdiv
jbe
(bad)
stos
and
ret
movs
xor
xlat
push
push
nop
jecxz
push
or
xchg
ins
mov
push
aaa
loop
push
test
es
nop
push
inc
mov
lea
jmp
and
in
or
cmp
jl
pop
jle
pop
mov
loop
mov
loopne
mov
and
(bad)
daa
iret
lods
xchg
mov
inc
jo
push
push
adc
xchg
in
xor
imul
dec
movs
adc
repnz
and
outs
je
xor
cmp
(bad)
xchg
(bad)
imul
fcmovnbe
fbld
cmc
xchg
arpl
pop
or
(bad)
nop
jne
push
scas
(bad)
jae
out
fcomp
js
pushw
push
inc
pop
cwde
jmp
lods
leave
ror
ret
mov
jl
jmp
sub
aaa
mov
jmp
les
jbe
stos
leave
inc
xor
or
adc
xchg
hlt
icebp
enter
cmc
movs
repnz
and
shl
js
enter
imul
rcr
inc
mov
dec
or
mov
inc
sub
in
sub
jae
sbb
lods
and
jb
das
inc
push
sbb
push
icebp
or
sbb
pop
mov
push
je
mov
les
aas
or
lea
jno
ret
xor
dec
push
push
add
sbb
les
in
prefetchnta
mov
loopne
xchg
push
jge
mov
sbb
xor
out
xchg
out
test
and
ds
inc
test
add
adc
xchg
push
mov
leave
xchg
arpl
cdq
ret
and
ret
nop
pop
cmp
(bad)
(bad)
mov
(bad)
loopne
cmc
mov
popa
sar
rcr
aad
add
add
jmp
movs
mov
adc
nop
inc
cmps
test
mov
out
mov
dec
sbb
xchg
jecxz
pop
jg
addr16
cdq
repz
clc
daa
out
test
jns
mov
or
cmps
xor
lea
scas
repnz
test
pop
mov
fidiv
push
xor
push
test
bound
sbb
loope
into
inc
pushf
xchg
jnp
test
cdq
mov
sahf
sub
adc
pop
pusha
cmp
cmps
scas
inc
retf
cdq
xchg
mov
imul
fs
mov
dec
rcl
in
jno
sar
jp
xchg
mov
clc
jg
je
jge
out
fnsave
cmp
xchg
ret
mov
pop
icebp
ins
and
or
adc
push
push
pop
mov
lock
fisubr
cmp
sti
cs
test
sub
jns
lods
out
sub
aam
hlt
shl
aam
leave
mov
int
pop
add
movs
pop
xchg
int3
pop
push
ds
and
out
enter
push
loopne
popf
push
leave
shl
addr16
cdq
adc
mov
mov
bound
add
jmp
add
push
mov
dec
add
dec
shl
dec
ret
xlat
mov
adc
test
pop
(bad)
mov
in
in
data16
mov
ror
(bad)
mov
xchg
xchg
repnz
jl
xchg
stc
adc
outs
in
sub
cmc
hlt
out
scas
jmp
sub
addr16
dec
hlt
loopne
retf
add
xchg
addr16
adc
jb
jecxz
loope
mov
out
sub
retf
fwait
jmp
add
xor
popf
clc
xlat
jecxz
into
mov
fwait
lds
cmp
in
lahf
aas
rcr
out
outs
sbb
inc
cmp
xchg
sub
js
hlt
mov
popa
mov
push
jl
cmp
jle
mov
ja
stos
jns
push
pusha
jg
or
xchg
test
jecxz
iret
pop
sbb
cmps
sbb
push
repnz
fadd
sbb
and
add
push
aas
cmc
sub
std
and
sbb
pop
cmp
lds
stc
in
inc
inc
xchg
imul
ins
mov
push
out
fsubrp
imul
in
lds
dec
xlat
daa
loopne
push
clc
inc
push
(bad)
xchg
mov
xchg
lock
sbb
sub
mov
cmc
or
pop
push
call
(bad)
fld
imul
out
push
or
test
mov
fild
mov
gs
mov
stc
loop
push
jne
mov
push
mov
call
and
mov
adc
movs
lock
cmp
xchg
mov
lock
lock
jb
lahf
cs
xchg
aad
stc
in
xchg
cmc
test
imul
mov
test
jge
inc
mov
add
popa
int
(bad)
test
jne
ins
hlt
(bad)
cmps
inc
loop
mov
lds
imul
les
(bad)
fwait
jmp
retf
inc
lahf
pop
shl
dec
jne
sbb
push
mov
push
dec
scas
clc
ret
sub
push
shl
or
dec
add
aam
push
sub
test
push
(bad)
mov
rcr
push
or
inc
scas
push
mov
jecxz
add
out
xchg
fwait
or
push
push
sbb
les
lea
inc
xchg
mov
mov
push
sbb
jo
pop
aam
in
pop
adc
and
xchg
sub
aaa
loop
mov
arpl
and
xchg
fidiv
or
test
and
xor
jo
add
adc
data16
dec
lds
outs
daa
rcl
sbb
xchg
popf
ror
dec
jae
scas
shl
and
adc
outs
mov
cmp
xor
icebp
mov
iret
mov
pop
cmps
inc
in
shr
cmp
adc
xor
out
(bad)
jp
ds
(bad)
adc
add
mov
mov
sbb
ss
test
(bad)
(bad)
call
pop
cmp
cmp
mov
cmp
and
int
dec
jo
sahf
cmp
jns
movs
ins
out
push
mov
push
in
das
pop
pop
mov
mov
pop
cmp
adc
popf
(bad)
loop
mov
or
xor
pop
icebp
jmp
sub
stc
sub
sub
sbb
push
test
fdiv
mov
cmps
out
xor
das
leave
and
(bad)
jge
push
stc
adc
retf
rcl
push
(bad)
jl
in
cmp
jne
arpl
lds
push
dec
pushf
stos
mov
mul
pop
scas
mov
fcomp
push
pop
std
stos
jae
test
loopne
ins
xlat
jno
jnp
das
adc
mov
icebp
arpl
lds
xor
jae
mov
test
mov
pusha
inc
jmp
push
out
mov
(bad)
jmp
sbb
pushf
dec
cmps
pop
shl
xor
inc
addr16
xlat
aaa
inc
aam
push
jne
dec
outs
jl
cld
mov
mov
mov
cmp
xchg
fldcw
or
adc
or
test
jp
mov
mov
pop
inc
movs
lods
sbb
push
lods
jnp
push
cmp
clc
xor
fld
cs
jbe
sbb
jmp
sti
or
daa
fsubr
or
enter
cmp
ror
hlt
(bad)
cmc
outs
xor
addr16
mov
aam
imul
adc
jge
es
icebp
fisub
loope
adc
inc
xor
dec
xor
fwait
(bad)
pop
rcr
xchg
scas
inc
enter
out
jo
cmp
call
mov
sub
mov
loope
mov
imul
add
mov
inc
mov
and
das
popf
dec
rcl
aas
les
sub
ds
push
cmp
test
std
add
cdq
hlt
and
and
push
out
add
xchg
push
(bad)
call
inc
daa
nop
mov
xchg
cmps
aam
mov
in
rcl
(bad)
add
inc
pop
jae
test
(bad)
out
mov
in
lahf
in
cmp
push
or
call
fcomp
icebp
(bad)
mov
mov
imul
aaa
sbb
pusha
adc
add
(bad)
idiv
jl
clc
xchg
movd
or
sub
sti
adc
imul
ds
cmps
rol
pop
jmp
outs
xchg
sub
repz
dec
leave
outs
xor
mov
lods
mov
mov
push
fstp
aaa
push
or
imul
dec
jl
test
addr16
inc
push
arpl
jmp
gs
lahf
inc
push
bound
lock
repnz
push
repnz
cmp
in
aas
fcomp
sar
pop
mov
in
test
out
mov
adc
out
mov
test
stc
mov
cmc
es
je
das
sbb
repz
scas
sub
adc
mov
jmp
cmp
jbe
jb
loopne
jl
pop
mov
into
jns
jo
inc
je
push
sbb
or
shr
xchg
cld
mov
push
push
pop
movs
mov
iret
out
call
mov
jns
popa
mov
out
in
dec
iret
xchg
cli
fidivr
xchg
mov
fisubr
(bad)
xchg
cmp
fldpi
jp
dec
xchg
mov
lds
les
jl
mov
inc
or
push
outs
adc
into
mov
in
popf
push
shr
jns
mov
pop
(bad)
test
push
xor
add
xchg
cmps
arpl
mov
pop
and
xor
xchg
cdq
add
(bad)
lahf
xor
sar
pop
(bad)
cld
sar
jmp
(bad)
push
ret
clc
xor
jecxz
ss
dec
xor
mul
dec
push
jmp
stc
jmp
sub
pinsrw
loope
scas
xor
outs
imul
leave
pop
and
icebp
(bad)
jne
fs
dec
cmps
mov
dec
fsubr
or
mov
dec
add
xchg
ins
ja
pop
dec
rcl
jmp
add
stc
add
dec
ins
adc
retf
test
stos
stos
movs
comiss
pusha
int
mov
xchg
sub
push
out
inc
pop
pop
sbb
cwde
pusha
pusha
outs
(bad)
push
sbb
xor
(bad)
sub
sbb
mov
test
jnp
and
sub
mov
cmp
into
iret
out
loope
enter
jmp
pusha
fmul
sti
xor
jb
mov
cmp
repz
pop
lods
jp
lahf
jmp
push
cdq
xchg
cld
pop
jo
arpl
ds
lds
jb
mov
fnstenv
lock
das
jp
cmp
clc
or
in
rcr
push
add
jns
dec
cdq
clc
mov
mov
inc
inc
daa
(bad)
dec
mov
cwde
xor
int3
leave
cld
jb
movs
mov
retf
mov
nop
xlat
movs
cwde
idiv
hlt
mov
cmp
push
inc
sub
add
repz
cs
fnstsw
mov
pop
aam
lock
call
mov
ds
sub
adc
into
stos
add
sub
aas
xchg
sbb
adc
call
fldcw
xchg
mov
sub
clc
fwait
outs
xlat
pop
mov
jns
cmp
addr16
and
pop
xchg
adc
jo
int3
mov
mov
imul
cmp
pop
pop
mov
jecxz
push
pop
dec
xor
iret
sbb
sbb
aaa
test
scas
scas
pop
call
push
push
cmp
xchg
adc
add
cmp
cmp
add
mov
cmp
mov
(bad)
in
or
sub
fistp
call
pop
test
inc
out
sub
enter
push
out
mov
(bad)
int
dec
sbb
call
and
ja
mov
cmp
rcl
fcomp
cmps
clc
lods
sbb
repz
mov
push
and
loop
cli
jle
ret
arpl
inc
mov
push
sti
push
cli
xchg
xchg
(bad)
into
shl
pop
pop
jg
ins
cmp
mov
add
jnp
mov
sbb
cmp
add
retf
add
xor
addr16
mov
and
dec
push
retf
mov
mov
ss
les
sbb
cwde
push
scas
call
fs
daa
mov
ret
adc
bound
test
retf
sub
push
mov
adc
sbb
cmps
sahf
and
xchg
ficomp
fist
add
retf
add
inc
retf
inc
push
(bad)
aad
test
lods
or
push
dec
cmps
add
or
jecxz
jbe
stc
add
jecxz
pushf
xor
lods
cmp
lods
ss
xchg
and
sub
int3
shr
ret
ret
dec
bound
out
int
mov
cmp
xchg
inc
sub
mov
les
mov
mov
push
inc
dec
sub
jbe
jge
dec
rcl
gs
add
adc
in
jns
out
leave
jo
xchg
cwde
jmp
int
push
pusha
push
test
add
dec
test
mov
or
pop
movs
into
sbb
in
mov
neg
daa
int
aaa
into
mov
mov
inc
(bad)
fwait
bnd
xor
inc
mov
pop
scas
outs
cwde
cld
leave
inc
out
movs
shl
adc
bound
cmp
inc
mov
cdq
mov
add
inc
lea
lods
and
inc
movs
(bad)
fld
loopne
xor
dec
sar
int
jge
mov
push
inc
xor
fcomp
sbb
test
daa
int
js
cwde
jg
stos
je
xchg
and
mov
or
(bad)
fnsave
ss
dec
(bad)
clc
mov
(bad)
(bad)
jns
arpl
mov
cld
movs
xchg
sub
retf
add
inc
(bad)
cmc
clc
mov
dec
and
lea
push
jmp
mov
cmp
push
stos
or
mov
or
inc
add
and
into
(bad)
clc
stos
fsubr
jle
dec
mov
loope
es
mov
push
push
mov
pusha
imul
loopne
mov
sub
pop
mov
sbb
mov
cld
rcr
lock
enter
ins
lods
ins
stos
dec
add
gs
cmp
jmp
mov
mov
cmc
or
sbb
(bad)
push
daa
sbb
das
mov
cmps
adc
sub
(bad)
adc
xchg
mov
int
nop
into
pusha
pop
loopne
fwait
int3
fcmovbe
(bad)
in
jl
dec
mov
sbb
aaa
out
fcom
push
push
and
in
mov
add
lods
daa
fmul
call
pop
clc
arpl
scas
and
imul
stos
sub
add
not
popf
jae
and
xchg
aas
imul
xchg
leave
cmp
xlat
ret
mov
(bad)
shl
das
les
shr
inc
dec
nop
dec
fidivr
mov
push
sbb
add
outs
mov
mov
xor
ret
mov
js
dec
retf
inc
fcom
jmp
scas
adc
jp
lock
cld
rcr
xchg
push
test
ins
or
mov
and
fwait
push
int
cs
pop
outs
sbb
jge
xchg
imul
loope
loopne
cmc
jb
daa
aam
inc
adc
addr16
sbb
sar
jmp
imul
and
pop
aaa
add
jae
aam
adc
test
jecxz
xor
cmps
push
outs
in
jge
xor
in
or
mov
push
mov
jl
ss
mov
fild
jmp
scas
addr16
mov
(bad)
rcr
fwait
cmp
enter
cmp
mul
mov
addr16
inc
fild
cmps
jae
push
lahf
push
iret
nop
jmp
sbb
sub
jbe
arpl
pcmpeqd
fisubr
sub
dec
mov
mov
es
inc
jle
or
and
jp
jmp
sbb
js
pop
sbb
loope
add
pushf
call
xor
loopne
add
mov
cmc
or
rcl
mov
daa
xchg
inc
or
jo
xlat
leave
mov
pop
push
arpl
or
(bad)
inc
mov
jns
jl
scas
pop
adc
xor
inc
out
adc
jnp
pop
shr
xlat
jg
xor
aas
jmp
pop
scas
xor
sub
ja
sbb
and
push
pop
sbb
aad
fiadd
mov
or
icebp
dec
popf
imul
dec
add
mov
int
cs
cmc
(bad)
(bad)
and
mov
or
cld
pop
fs
rcl
sub
mov
lock
pop
jbe
daa
aad
xor
and
int3
pop
push
dec
jne
int
imul
pop
imul
sti
sbb
pop
getsec
mov
ja
push
call
movs
pop
push
inc
mov
out
outs
cwde
sbb
or
jg
cbw
stc
jmp
inc
mov
pop
adc
(bad)
out
daa
jl
bnd
pop
xor
das
jg
test
in
repz
adc
and
sub
and
push
adc
cmp
mov
(bad)
dec
pop
repnz
mov
not
or
xor
popf
xchg
sbb
mov
jmp
pop
rcl
mov
or
imul
les
icebp
mov
mov
pop
add
jl
stos
gs
pop
mov
cmp
pop
and
jp
jb
mov
sub
dec
cdq
ret
pop
gs
imul
(bad)
rcl
pop
(bad)
sub
fadd
out
pop
jmp
(bad)
cmp
and
jge
ss
sbb
aaa
test
bound
or
xor
ja
sar
int
add
or
inc
xchg
sub
and
xchg
xor
test
inc
call
add
sub
repz
cmp
and
int3
xchg
jnp
(bad)
enter
int3
jp
sahf
adc
push
nop
pop
xor
out
xchg
enter
retf
retf
cmp
mov
mov
fldenv
adc
push
xor
xor
(bad)
pop
push
adc
jo
jae
cmp
sbb
call
mov
mov
pop
jle
cli
shl
mov
cmp
mov
outs
rcl
in
cld
cwde
adc
xor
xchg
je
adc
aam
push
add
popf
data16
mov
dec
outs
sub
pop
pop
xchg
sbb
std
cmp
shr
into
test
not
mov
neg
and
cmp
mov
popa
jnp
clc
aaa
pusha
arpl
mov
mov
jecxz
hlt
xor
bound
add
xchg
dec
mov
imul
fadd
fcmovbe
mov
sti
mov
gs
add
sbb
clc
jmp
jle
icebp
iret
and
push
and
daa
in
das
jo
(bad)
out
in
fdiv
sub
jmp
or
mov
push
xchg
cmp
pushf
sub
int3
fs
sub
push
xchg
fwait
test
adc
repnz
cld
(bad)
test
or
shl
jl
xchg
mov
push
adc
dec
and
out
cli
daa
aaa
(bad)
cld
pop
xchg
lock
pop
cmp
inc
jae
jmp
add
push
test
(bad)
repz
movs
add
loopne
jl
out
push
push
jmp
mov
cmp
push
call
cmp
sbb
pushf
in
mov
ja
fcom
jle
movs
ret
pushf
cmps
in
mov
cmp
xor
pop
cmc
mov
(bad)
xchg
jmp
rol
inc
add
fmul
push
push
jge
mov
dec
mov
repnz
out
out
in
jge
and
and
jle
cli
dec
lds
xor
jge
jb
add
or
test
pushf
adc
push
daa
popa
std
jns
enter
shl
push
or
fs
jmp
and
push
jmp
dec
cmp
mov
fimul
pop
rol
movs
dec
test
loop
mov
add
adc
dec
push
cmp
popf
adc
inc
jge
dec
int3
test
xor
or
or
and
iret
mov
adc
out
adc
push
inc
repnz
fdiv
test
fldenv
lock
fcmovbe
adc
sub
lods
fldcw
push
xor
mov
hlt
inc
add
xor
mov
movs
inc
fnsave
xchg
popa
adc
stc
fisttp
cmp
add
movs
adc
inc
mov
and
call
mov
sub
(bad)
push
dec
add
fiadd
in
addr16
jb
out
mov
mov
xchg
mov
out
adc
rcr
loop
addr16
inc
mov
movs
add
jbe
inc
mov
jle
enter
cmp
popf
fdiv
add
and
mov
fucom
add
xchg
addr16
fisttp
adc
pop
dec
cmp
mov
add
pop
enter
mov
inc
jge
std
and
fs
daa
mov
xchg
sub
shr
sub
mov
test
push
lods
mov
int
mov
mov
out
mov
dec
xchg
cmps
arpl
cmc
mov
sub
sbb
inc
bound
leave
push
xchg
push
lahf
mov
dec
xchg
mov
push
jmp
adc
loope
jg
ds
int
adc
pop
ror
(bad)
scas
mov
into
add
mov
ret
jo
inc
push
rcr
sbb
lahf
sub
mov
imul
outs
mov
aam
jmp
mov
mul
xor
shr
int3
test
ins
bound
xchg
fcomp
and
ins
cwde
jmp
mov
sub
push
push
ss
icebp
dec
(bad)
mov
cli
add
mov
inc
pop
ins
lahf
sub
out
push
and
les
push
dec
cld
test
push
mov
and
cmp
xchg
pop
jge
mov
and
add
and
jns
fld
(bad)
fstp
pop
or
or
int3
pop
dec
lds
xchg
jmp
es
stc
gs
jo
mov
inc
adc
enter
lods
in
nop
mov
fisub
dec
test
enter
inc
popf
std
mov
xor
dec
xchg
jns
call
iret
out
pop
pop
sub
add
inc
and
jmp
mov
push
pop
in
dec
imul
pop
mov
retf
mov
repnz
sbb
dec
and
jae
fwait
out
aaa
lods
out
ret
push
std
je
ret
dec
or
shl
push
dec
pop
jl
push
dec
dec
neg
nop
popa
cmp
xchg
xchg
and
xchg
gs
inc
imul
mov
ret
mov
loop
cli
push
and
inc
not
adc
clc
cs
shl
inc
adc
fidivr
fmul
mov
loope
lods
icebp
fstp
je
js
iret
cmp
aaa
(bad)
movs
daa
dec
std
add
xor
pop
jmp
sti
pop
into
cdq
(bad)
das
pushf
cmp
daa
mov
and
out
inc
rol
fistp
cmp
add
sub
loope
in
(bad)
lods
xchg
and
push
cli
lea
pop
stos
inc
repnz
sti
cmp
xchg
imul
xchg
push
call
xchg
out
test
test
shr
int3
sub
sbb
test
out
aaa
pop
push
(bad)
cmps
dec
pop
shl
nop
shl
xor
mov
adc
int
mov
add
aaa
fmul
mov
stos
mov
xor
iret
jge
out
push
outs
sub
repz
cld
ins
xchg
mov
adc
jmp
adc
mov
sub
arpl
jbe
xchg
lahf
cmps
pop
cmp
das
add
out
or
xchg
(bad)
in
mov
lods
(bad)
stos
xchg
or
out
cmp
stos
jno
dec
shr
mov
(bad)
mov
pop
popf
fs
push
mov
repz
sar
or
shl
dec
adc
pop
jmp
pusha
dec
push
push
xcrypt-ecb
cmps
dec
ins
ja
adc
sbb
pushf
mov
inc
std
adc
fld
dec
neg
ins
cmps
scas
stos
lea
movs
bound
xlat
pop
hlt
cwde
enter
in
test
xor
mov
jbe
dec
into
(bad)
js
shl
jo
iret
enter
movs
pop
or
ret
xchg
inc
retf
xor
mov
int
je
inc
dec
bound
cdq
pusha
and
add
and
test
out
lods
sbb
mov
rcl
xor
gs
dec
pop
fdiv
aaa
sub
cld
xchg
jp
rcl
sbb
inc
adc
xchg
cmp
vcvtpd2uqq
jg
lds
ds
push
repnz
mov
fidiv
je
cld
ins
sub
inc
or
mov
push
sub
repnz
mov
xchg
xchg
ja
iret
xor
scas
ja
pop
sub
inc
retf
cmp
ja
stos
xor
loop
push
mov
jno
outs
into
xchg
dec
lods
fstp
retf
retf
xor
out
call
outs
nop
mov
fdivr
jae
rol
dec
xchg
adc
popf
or
js
xor
pop
out
jnp
(bad)
int3
xor
popf
cdq
xchg
xchg
dec
lods
shl
mov
stc
fdiv
test
jae
cmps
push
nop
mov
clc
sbb
cmp
repz
mov
sbb
lods
scas
sbb
imul
ficomp
pcmpeqb
cmp
sub
imul
cmp
fstp
jmp
out
aad
push
mov
sbb
pop
dec
jmp
add
cmps
int3
xlat
dec
ins
hlt
test
jl
add
pop
daa
mov
in
xchg
dec
inc
jae
xchg
or
in
fs
dec
ror
enter
repnz
fisubr
push
into
sub
inc
rcr
test
sbb
jge
jg
stc
call
in
push
test
jns
shr
ret
sub
aam
add
(bad)
hlt
loope
je
out
mov
mov
das
add
xor
cmp
ret
imul
sub
cmps
sub
adc
mov
retf
jecxz
adc
int
sub
adc
and
gs
call
adc
xchg
add
data16
xchg
call
mov
or
push
adc
pop
pushf
adc
jns
data16
lock
sbb
(bad)
scas
sub
push
lds
movs
and
loop
jnp
mov
int3
loope
stos
jge
add
in
mov
sbb
xchg
xchg
add
dec
push
pop
pop
jg
jl
dec
test
lahf
in
add
xor
stos
enter
inc
jp
push
(bad)
push
loopne
iret
mov
or
sub
add
lods
lahf
(bad)
mov
push
dec
push
fs
ins
dec
mov
dec
push
inc
ja
test
rol
pop
popf
sbb
arpl
adc
gs
ror
into
ins
adc
imul
and
jns
lods
or
pop
push
adc
fxch
fcmove
aad
mov
push
(bad)
call
xor
into
dec
test
and
xor
mov
mul
xor
mov
fdivr
int3
mov
adc
cwde
es
cli
cmp
repnz
leave
inc
ret
sbb
jp
and
ficomp
test
mov
out
xchg
or
jae
mov
mov
fsub
adc
enter
(bad)
xchg
stc
sti
outs
aaa
cld
add
fisub
or
or
pop
push
movs
int3
push
clc
pop
lahf
dec
aad
test
stos
push
pop
stos
sahf
(bad)
push
in
jmp
adc
dec
adc
sbb
test
adc
cld
mov
adc
fidiv
pop
mov
sub
mov
adc
fnsave
cli
dec
and
xchg
mov
sbb
or
shr
lods
adc
fwait
jno
adc
imul
xlat
cld
mov
loopne
and
scas
jp
in
sbb
test
mov
inc
ss
dec
loope
fdiv
push
sub
mov
cmp
shl
pop
enter
stos
pop
xor
test
pop
mov
sub
cli
mov
mov
and
mov
adc
fimul
shl
test
or
les
aam
push
mov
jecxz
xor
and
inc
fdivr
add
mov
add
(bad)
jp
jo
mov
push
push
(bad)
cmp
test
ds
sbb
adc
cmp
ins
dec
fdivr
mov
stc
jp
int3
inc
cmc
inc
dec
jg
jle
cmp
scas
jmp
movs
ds
and
xor
push
adc
(bad)
xchg
call
call
nop
aad
test
xchg
test
xor
xchg
cwde
popf
aad
mov
jno
std
adc
sti
mov
jl
loop
mov
xor
dec
js
in
aad
fcmovu
sets
sub
das
push
xchg
jns
sar
inc
rcl
jns
xchg
pop
fidivr
outs
(bad)
cmp
sbb
and
sub
push
jbe
in
inc
adc
adc
test
sub
dec
sub
das
mov
xchg
dec
mov
in
sbb
cmp
lahf
mov
ins
push
enter
push
or
rcl
mov
ja
xchg
sub
mul
ins
ret
jp
mov
icebp
es
cmp
cmp
lods
mov
enter
sub
push
and
clc
in
adc
inc
adc
mov
sbb
fsubp
popf
mov
lock
mov
mov
add
neg
ret
mov
or
or
fadd
in
imul
loope
and
xchg
or
or
rcl
inc
in
sbb
test
inc
dec
call
je
cmps
mov
xlat
inc
mov
fdiv
nop
int3
dec
daa
sbb
dec
add
mov
test
jl
aam
or
or
inc
test
stos
sbb
add
aam
gs
popf
fsubr
pop
adc
xor
jge
cmc
pushf
sbb
pop
(bad)
push
fmul
dec
adc
mov
and
and
push
jecxz
inc
mov
mov
stos
dec
fdivr
mov
xrelease
fucomi
retf
inc
xchg
in
push
aaa
aam
push
scas
sub
aaa
fs
fld
pushf
sbb
add
mov
mov
into
pop
mov
sar
jnp
xchg
dec
and
xchg
into
stos
les
pop
out
mov
nop
iret
int
push
push
mov
pop
sbb
add
cli
outs
fisttp
dec
sub
mov
cli
jg
sbb
fisttp
mov
in
mov
cmp
scas
into
jg
or
inc
mov
lahf
cld
gs
pop
imul
cmp
fcomp
out
test
ins
lds
mov
popf
mov
test
retf
(bad)
and
icebp
push
daa
test
fs
and
cmps
std
fucomp
cmp
les
mov
mov
or
fidivr
push
lea
loop
adc
sub
push
dec
xor
ret
call
pop
mov
fnstsw
adc
inc
(bad)
jo
(bad)
retf
cs
inc
xor
out
and
movs
xchg
enter
in
pop
repnz
retf
mov
test
mov
arpl
mov
fs
add
(bad)
dec
push
ret
xchg
jge
ret
cli
aad
xlat
pop
retf
dec
inc
jecxz
in
repnz
bound
ret
mov
dec
loope
sbb
cdq
lods
dec
loopne
nop
call
sbb
imul
pop
iret
daa
push
sbb
and
sti
mov
iret
jne
int3
or
and
xor
rol
sbb
push
xlat
loopne
ss
mov
ret
jo
out
and
jmp
test
pop
cmp
in
pop
mov
or
dec
fdiv
aaa
in
inc
loope
stos
add
dec
in
xor
and
out
popa
ficom
sub
sbb
mov
xchg
adc
mov
das
sbb
inc
stc
mov
arpl
push
sbb
call
mov
(bad)
xor
aad
out
or
je
mov
xchg
jge
in
pop
push
test
push
lods
pusha
enter
and
xchg
inc
jecxz
mov
jne
fild
mov
mov
pop
scas
push
ffreep
cmp
test
sahf
mov
mov
dec
pop
in
gs
gs
xchg
mov
std
or
cmp
jle
pop
sub
(bad)
adc
js
in
jmp
sti
cmps
sbb
call
adc
jle
dec
inc
(bad)
cld
adc
jg
lock
mov
xor
push
mov
inc
sub
retf
dec
(bad)
out
sub
ins
js
rol
in
and
dec
popf
gs
push
pop
sbb
xor
jle
pop
mov
cld
fstp
xchg
iret
in
adc
dec
mov
sbb
in
sti
cmc
sbb
ss
sbb
dec
mov
movs
or
push
xor
push
(bad)
cli
inc
aaa
and
inc
xor
xchg
sbb
pusha
int
div
push
je
test
aas
std
cld
in
(bad)
mov
and
jp
sti
and
mov
lods
into
outs
fist
xchg
xchg
mov
cmc
and
or
mov
hlt
jb
or
xchg
mov
sbb
mov
(bad)
pusha
cdq
or
(bad)
ret
dec
dec
cmc
push
xchg
xchg
push
add
rol
cmps
pusha
or
mov
sub
push
xchg
xor
or
mov
jne
inc
test
inc
cmp
sub
jae
(bad)
jp
(bad)
fisttp
or
imul
inc
mov
repz
test
mov
(bad)
jbe
sbb
mov
sub
je
push
call
mov
icebp
in
push
push
pop
mov
mov
dec
jns
cmp
xchg
mov
sbb
jmp
sbb
in
popf
cs
mov
push
movsx
or
fsubrp
fidiv
imul
mov
lods
mul
icebp
mov
jae
mov
daa
shl
xor
cmps
mov
sbb
ins
aam
jnp
pusha
lods
ins
add
jb
pop
push
jns
mov
jmp
jecxz
jo
pushf
adc
test
imul
in
adc
pop
(bad)
lods
sub
stos
jnp
mov
add
mov
mov
pop
adc
inc
push
cmps
ja
push
push
jno
js
adc
mov
neg
mov
jl
mov
jne
enter
arpl
aas
push
jne
(bad)
shl
mov
fisttp
mov
movs
adc
xchg
xchg
fidiv
push
jne
fcmovu
int
outs
xchg
into
sbb
and
imul
sbb
nop
push
push
sub
retf
xchg
iret
add
repz
mov
mov
scas
jno
(bad)
movs
bound
sahf
cmp
movs
dec
mov
cmp
jge
movs
mov
mov
mov
dec
call
repz
inc
call
mov
cld
sahf
cmps
aas
xchg
adc
popa
jo
mov
int
fadd
adc
xchg
lahf
sbb
not
sbb
adc
pop
push
clc
rcr
test
retf
push
mov
ss
dec
inc
(bad)
xor
stos
mov
test
xchg
popf
movs
nop
(bad)
or
mov
(bad)
vmptrld
push
pmulhw
mov
or
data16
lods
xchg
adc
or
mov
push
jp
pop
cmp
jbe
jle
ins
push
int3
push
mov
popf
pop
add
popa
or
sub
sub
enter
mov
push
dec
(bad)
cmp
es
js
loopne
push
test
cmp
cmps
div
push
or
mov
pop
out
sub
push
(bad)
loope
xchg
push
paddsb
cli
jecxz
call
test
sub
call
hlt
xor
fxch
inc
sub
enter
inc
cmp
adc
test
add
mov
adc
sub
cmps
mov
out
push
aam
add
sbb
jne
or
sub
int
js
pop
and
xor
mov
push
fimul
sahf
jns
imul
cmps
jns
or
inc
xchg
jge
and
add
mov
pop
leave
lock
sbb
mov
sub
mov
out
jo
or
stos
mov
bound
ficom
sbb
push
sub
aaa
cmps
xchg
mov
retf
icebp
test
jmp
(bad)
xchg
or
(bad)
cmp
dec
sub
movs
rcr
leave
inc
jp
clc
jle
movs
cmp
push
mov
out
cmp
(bad)
jg
mov
xor
test
push
fcomp
neg
cmp
sub
sub
mov
xor
and
mov
call
rol
ins
push
cs
add
call
icebp
imul
addr16
mov
aam
ss
mov
cmp
push
push
xchg
cld
neg
in
cli
cmc
push
add
mov
in
jmp
push
out
nop
mov
sub
dec
or
aaa
sbb
mov
jp
push
bound
mov
fs
pop
outs
adc
in
add
and
pop
pop
shl
xor
mov
ds
mov
(bad)
sub
aas
or
pop
bound
jb
fidiv
test
dec
out
mov
jne
lock
pop
sar
out
dec
cmps
fs
div
push
cmp
inc
mov
pop
xor
inc
es
out
lods
cmp
lock
or
rcl
not
addr16
xchg
es
inc
push
sbb
loopne
aaa
or
or
movs
sbb
cmps
mov
mov
sub
scas
out
fmul
cmp
in
jno
sti
xor
mov
add
mov
out
ds
mov
sub
mov
mov
xlat
inc
movs
mov
call
sar
outs
ret
cmp
nop
jns
(bad)
js
push
pop
mov
or
ret
xchg
repz
mov
mov
lahf
pop
js
arpl
into
pop
push
repz
push
ret
pop
mov
or
sbb
adc
imul
(bad)
and
and
or
xchg
mov
add
sub
jp
pop
xchg
mov
sbb
cmp
sub
adc
std
cmp
sti
lock
repz
dec
shr
shl
fwait
mov
add
out
mov
aaa
push
clc
in
or
jae
in
jne
(bad)
mul
loope
(bad)
adc
and
sub
retf
mov
sub
xchg
sub
movs
addr16
lock
xor
xchg
scas
shr
lds
in
enter
and
pop
shl
jo
dec
leave
(bad)
repnz
sub
mov
jbe
sbb
popa
inc
and
cs
xchg
pop
pusha
push
mov
int
(bad)
std
jecxz
ror
inc
lock
pop
sbb
pop
push
push
sbb
push
iret
jp
mov
repnz
adc
test
xchg
in
or
cmp
sub
push
std
scas
cmp
inc
inc
jb
mov
and
cmp
into
je
cmp
out
adc
inc
push
mov
iret
inc
ror
das
dec
jmp
or
movs
mov
movs
retf
neg
push
pop
jmp
mov
mov
aaa
adc
xor
in
mov
adc
and
je
pop
js
cmc
jbe
cwde
pop
shl
cmp
xor
fwait
jle
add
and
inc
movs
xchg
out
in
dec
jae
or
inc
mov
add
test
dec
pop
pusha
jg
or
into
or
je
cli
icebp
inc
mov
mov
imul
push
out
jp
cmp
mov
xor
push
mov
mov
outs
or
sub
mov
sar
fcom
shl
into
loopne
cmovnp
in
es
ret
retf
dec
loop
and
cmp
cdq
retf
ins
sub
out
bound
fmul
jl
addr16
in
inc
sbb
(bad)
sbb
or
(bad)
lds
imul
inc
lods
mov
cwde
xor
dec
loopne
mov
push
and
sbb
mov
loope
pop
inc
lock
cmp
jne
loop
pop
(bad)
mov
call
inc
add
adc
cmp
rol
add
popa
sub
ins
jp
mov
mov
sbb
jbe
xchg
and
push
loopne
inc
and
push
mov
pushf
ficom
mov
cmc
adc
daa
adc
inc
jp
mov
mov
xchg
lea
icebp
hlt
imul
mov
sbb
jge
pop
jg
int
pop
jnp
cmp
xor
dec
data16
loop
dec
stc
add
push
xchg
cmp
and
push
and
mov
inc
xor
xor
xchg
ficomp
and
(bad)
adc
inc
addr16
rcl
dec
or
gs
bound
cmp
(bad)
cmp
push
push
fild
mov
sbb
fidivr
or
inc
add
dec
inc
leave
push
test
xor
shl
pop
sti
mov
ja
push
pop
cmp
or
and
ja
xor
out
addr16
jmp
rcl
daa
sbb
es
mov
lods
repz
mov
or
jle
add
retf
jnp
inc
leave
fldcw
mov
test
push
idiv
std
xchg
leave
lods
add
aam
stos
dec
(bad)
pushf
nop
out
std
pop
les
pop
add
xchg
or
pop
ins
mov
sahf
outs
add
or
pop
movs
dec
(bad)
jp
retf
dec
jle
fsub
mov
mov
push
and
(bad)
iret
cmp
inc
out
add
add
mov
sub
mov
fwait
in
(bad)
std
cmps
mov
test
pop
call
popf
xor
ficomp
aaa
pop
das
inc
jl
pop
jle
add
out
jno
sub
in
sbb
fisubr
dec
cli
xor
xor
mov
ficom
cmps
push
or
int
inc
push
call
test
cwde
(bad)
into
adc
inc
fs
mov
inc
fs
stc
loop
in
(bad)
repz
push
mov
repnz
das
mov
push
daa
lea
mov
dec
dec
fisub
fnsave
cmp
leave
and
xor
fdivr
fnsave
cmp
cs
loop
adc
cmps
xchg
in
aam
add
jne
sbb
out
cmp
movs
jo
xor
std
sti
dec
sbb
jle
xchg
inc
adc
int3
sbb
push
mov
ja
xchg
sbb
mov
or
test
std
adc
dec
sub
stos
sub
adc
or
fs
dec
movs
arpl
inc
gs
or
and
out
mov
and
cmp
jbe
sub
ret
sahf
in
ds
loopne
aaa
out
sbb
adc
mov
neg
imul
or
and
and
std
leave
call
sub
adc
jne
aas
pop
aad
ja
adc
and
jnp
shl
jae
mov
mov
push
push
loopne
and
mov
fucomi
aam
adc
out
arpl
xor
fs
in
or
sub
shl
in
cmp
jge
sti
xchg
sbb
jmp
cmp
dec
out
in
inc
mov
int
and
in
fdivr
mov
add
les
push
fwait
xor
dec
lock
pop
mov
jmp
in
scas
mov
jbe
mov
dec
sub
(bad)
jge
mul
arpl
out
cmps
adc
mov
sub
jne
xchg
(bad)
(bad)
retf
sbb
dec
push
mov
and
add
sbb
jg
je
or
retf
push
lods
(bad)
add
mov
gs
pop
xchg
call
ins
pusha
aad
dec
or
adc
dec
fcomp
fdivr
dec
pop
sub
ins
cdq
or
dec
daa
mov
mov
in
icebp
dec
mov
test
pop
retf
ins
mov
ja
fcomp
fisttp
mov
or
mov
inc
mov
cld
outs
push
ins
jmp
cwde
cs
dec
mov
rcr
pop
in
cmp
rcl
pop
stc
xor
bound
jno
and
loop
cmc
xor
call
fdivr
sbb
cdq
ds
mov
push
add
rol
movs
or
hlt
push
ja
(bad)
mov
xor
cs
pop
and
inc
gs
xchg
lock
push
(bad)
(bad)
pop
and
xchg
or
in
enter
or
mov
gs
cmc
pop
repnz
rcl
adc
jp
out
lahf
push
enter
jnp
(bad)
xchg
mov
(bad)
pop
pop
rol
mov
into
inc
(bad)
in
mov
and
mov
or
mov
add
or
repz
sub
cmp
repz
test
pop
jo
xchg
fistp
add
into
or
jo
inc
xchg
pop
add
push
nop
clc
jp
cmps
ds
jbe
mov
shl
(bad)
ds
mul
and
movs
push
xlat
jne
lea
jo
adc
dec
iret
movs
ins
inc
stos
test
mov
fcomp
and
or
cmp
fisttp
jg
sub
xchg
pop
mov
ja
sbb
aaa
mov
mov
aad
fisttp
shl
mov
and
mov
xchg
inc
movs
push
sub
jbe
shl
sti
cmp
(bad)
es
inc
popa
pop
(bad)
jge
mov
sbb
fsub
jmp
or
rcl
push
out
mov
mov
mov
xchg
pop
add
mov
nop
fs
addr16
dec
add
jnp
mov
xor
mov
movs
(bad)
push
je
iret
pop
std
mov
ss
scas
mov
sbb
inc
sub
jae
adc
jl
(bad)
je
or
pop
jae
sub
xchg
push
mov
int
dec
pop
fild
xor
mov
cli
cmps
sti
out
dec
int
sub
xchg
lds
jge
outs
mov
popa
mov
jae
cwde
inc
ret
stos
imul
add
pop
sub
cld
cmp
movs
and
push
scas
push
cwde
sbb
xor
cs
jne
adc
mov
mov
(bad)
cld
cmp
(bad)
(bad)
shl
dec
xchg
sub
pop
pop
jo
pusha
lahf
(bad)
scas
(bad)
adc
sub
xchg
cmc
div
or
clc
mov
add
scas
out
mov
xor
ror
int
add
(bad)
or
mov
push
and
cmp
lahf
ds
add
mov
cmp
gs
in
dec
sahf
jge
stos
cmps
stc
arpl
mov
cli
jno
inc
sti
(bad)
sub
stc
xor
dec
iret
add
movs
xor
pop
sub
fdivrp
aam
call
add
stos
shr
push
shr
or
cwde
imul
call
adc
sub
or
je
or
pop
les
pushf
pusha
jo
adc
dec
(bad)
cmp
cmp
outs
data16
push
int3
clc
push
xlat
xor
ja
pop
je
(bad)
pop
pop
mov
movs
mov
mov
jg
xchg
inc
mov
(bad)
fldenv
mov
mov
xchg
aad
out
dec
mov
dec
cwde
sahf
test
repz
jp
mov
dec
imul
xor
in
push
cmps
sub
fs
push
mov
mov
mov
xor
pop
fnstenv
(bad)
xchg
das
repnz
mov
dec
mov
(bad)
dec
jmp
lock
call
rcl
call
fcomp
pop
pop
out
inc
fiadd
clc
fs
das
(bad)
daa
jl
jne
xor
pop
mov
and
xchg
retf
in
retf
sub
scas
lea
dec
loope
aam
scas
sbb
call
xchg
xchg
mov
ins
mov
and
fst
stc
push
xor
iret
into
shr
jne
(bad)
adc
push
imul
push
cld
sbb
xor
adc
(bad)
out
hlt
xor
data16
cmps
daa
add
mov
add
add
sbb
adc
(bad)
mov
mov
xchg
popa
or
mov
or
shl
cmp
sub
ror
test
clc
cmp
push
sbb
mov
jmp
fmul
fist
pop
xor
fnstcw
jb
xchg
add
call
cmp
aam
imul
sbb
sbb
pop
outs
mov
movs
mov
ret
movs
fsub
stc
popf
and
mov
or
dec
movs
mov
and
push
fimul
and
mov
out
pop
add
add
xchg
aam
xchg
das
pushf
jl
mov
pop
xor
sub
add
push
mov
pop
pop
lods
sbb
pop
imul
sar
fsub
test
lock
or
mov
push
sub
test
jns
test
xor
inc
outs
add
(bad)
aaa
adc
fs
mov
cmp
sub
inc
das
shl
xor
xchg
pop
(bad)
push
iret
aam
mov
pushf
out
jmp
xchg
add
mov
iret
cli
inc
jge
bsf
or
cs
jmp
jae
push
xor
rol
ret
xchg
shr
repz
das
jecxz
jmp
cwde
mov
push
jg
pop
adc
jmp
loope
pop
push
jo
not
jno
pop
jno
push
fdivr
lock
shr
mov
(bad)
xchg
pop
pushf
adc
inc
shl
ror
outs
xor
sahf
mov
push
cmp
repz
shl
and
(bad)
sbb
bnd
stos
jle
mov
lods
cmps
mov
xchg
adc
ds
(bad)
jecxz
addr16
jns
jo
ror
sub
jns
out
inc
leave
pop
cdq
mov
xchg
mov
cmp
add
xlat
xchg
pushf
stos
mov
jge
(bad)
stc
xchg
shr
das
or
push
mov
in
daa
inc
stos
mov
out
push
lahf
repnz
not
(bad)
je
or
adc
mov
jl
push
or
ret
ins
stos
imul
leave
imul
mov
mov
cmps
ss
(bad)
verr
(bad)
rcr
cmp
sub
xchg
imul
les
or
mov
sub
dec
(bad)
xor
jns
xlat
pop
push
mov
pushf
adc
data16
xor
sub
sbb
add
push
inc
repz
or
ret
fsub
adc
push
outs
mov
pop
jb
push
dec
retf
cld
mov
out
or
mov
sub
jecxz
sbb
out
das
js
(bad)
cmp
push
jae
shl
clc
cmc
pusha
cmp
dec
sbb
dec
pop
jbe
pop
push
repz
jnp
mov
cmp
hlt
stc
mov
add
mov
lea
and
push
inc
fwait
or
(bad)
cmc
jbe
jns
das
out
aaa
je
pop
mov
call
fistp
xor
imul
mov
pop
and
shr
lahf
data16
enter
out
stos
sub
xor
push
sbb
pushf
xchg
retf
or
mov
retf
xchg
daa
mov
leave
jmp
stos
int3
mov
(bad)
fistp
das
cwde
lahf
or
pop
jbe
cmps
stos
or
fnstenv
mov
cmps
out
int
pop
sti
and
in
adc
jle
pop
sbb
mov
in
jne
popf
sub
js
push
hlt
ficom
ss
cmp
out
cmovbe
add
leave
rcr
(bad)
cli
inc
in
out
(bad)
sub
in
sub
push
cmp
xchg
sbb
pushf
xor
jnp
xchg
cld
jp
push
sti
mov
push
arpl
jo
rol
outs
push
xlat
(bad)
aad
push
xor
int
sub
(bad)
mov
dec
cdq
imul
hlt
leave
mov
mov
xor
inc
sbb
popf
xor
loop
mov
push
pop
and
stc
sub
repnz
mov
pushf
lock
cmp
push
ja
sbb
cwde
inc
mov
cwde
cmps
int3
xchg
mov
mov
fild
ins
popf
cmp
push
xor
or
cmps
cs
dec
aaa
xor
jne
fsub
popa
adc
lock
jl
ret
shl
cld
cmp
int3
aam
mov
outs
pop
jb
xlat
jle
out
stos
sbb
push
cmp
cmp
sti
fdivr
jns
push
je
inc
xchg
cmps
int
out
mov
in
call
les
rol
dec
mov
leave
jge
push
mov
add
loop
and
mov
out
pop
mov
xor
adc
cli
adc
sub
(bad)
out
loopne
addr16
or
pop
test
fild
add
test
cmp
or
(bad)
pop
bound
xor
push
lock
lea
shl
xor
mov
inc
int
inc
jmp
dec
and
jl
dec
xchg
ret
out
test
mov
pop
lods
daa
test
jmp
push
popa
leave
ins
add
sub
add
retf
enter
push
aas
outs
mov
sbb
and
out
inc
scas
es
out
(bad)
mov
iret
nop
xor
imul
push
mov
mov
repz
lods
add
mov
lahf
popa
mov
std
sub
pushf
and
xor
lahf
pop
cmp
sub
xchg
(bad)
push
enter
xor
call
cmps
dec
cmp
mov
pop
xchg
push
or
dec
xchg
adc
iret
or
mov
out
test
xor
pop
(bad)
clc
cmp
test
mov
dec
je
imul
push
mov
xor
push
test
fcomp
adc
jg
push
imul
(bad)
pop
push
movs
mov
xchg
ins
(bad)
aas
pop
xor
cmp
imul
ins
inc
jp
in
pushf
xchg
sbb
lods
sbb
sub
ss
neg
test
cwde
repz
pop
and
jno
movs
xor
int
push
daa
push
loopne
hlt
mov
shr
push
cmp
dec
jp
ins
mov
mov
sub
cmps
add
cmp
mov
jb
ret
out
mov
sub
xor
aas
pop
pop
jnp
push
or
mov
fnstenv
js
adc
(bad)
fiadd
addr16
cmp
cmps
or
fcomp
jae
in
push
fidivr
sar
outs
test
gs
cmc
aas
add
retf
(bad)
test
push
mov
xor
mov
(bad)
add
mov
xor
addr16
or
in
retf
sbb
sbb
sub
push
sbb
mov
push
arpl
push
(bad)
xchg
jno
movs
mov
pop
imul
pop
mov
mov
daa
fstp
mov
addr16
sub
fisttp
add
xor
jecxz
or
(bad)
pop
outs
dec
mov
xor
add
add
push
cmp
(bad)
pop
retf
xchg
sbb
inc
xchg
xlat
shr
cmp
int3
test
in
(bad)
iret
inc
xor
jbe
cld
fmul
hlt
sbb
in
sti
pop
adc
(bad)
pop
icebp
imul
jecxz
lods
xchg
sti
leave
movs
jo
adc
retf
mov
mov
lahf
jae
(bad)
scas
fcmovu
int
pushf
jmp
mov
pop
jae
push
enter
imul
xchg
std
push
xlat
pop
xchg
out
pop
stos
xor
dec
cmp
je
retf
fucomip
mov
or
cli
mov
sub
jmp
cmc
add
aaa
lds
pusha
add
lds
mov
arpl
imul
xchg
mov
dec
mov
lahf
dec
in
call
sbb
loopne
and
mov
(bad)
loopne
in
dec
pop
imul
mov
or
test
cmps
xchg
cmp
jae
hlt
popf
int
es
test
jae
xor
adc
sub
adc
sub
jmp
leave
inc
mov
mov
arpl
xchg
jg
adc
mov
and
(bad)
push
popf
idiv
mov
sahf
loopne
adc
in
xchg
sar
cli
add
cmp
jp
fs
es
loop
cmc
adc
lds
mov
test
mov
and
lods
push
dec
jne
cmp
sti
je
scas
lods
sbb
cmps
mov
rcr
inc
push
das
xor
je
xchg
cmp
cmp
jne
xor
fsubr
inc
les
in
or
sbb
aam
aas
pop
mov
pop
retf
add
xchg
mov
xchg
les
sub
inc
adc
popf
xor
shl
jae
sub
or
or
icebp
shl
int3
or
data16
addr16
cld
pop
ss
cmp
xlat
cmp
aaa
test
call
fdiv
pop
ss
mov
test
sub
nop
gs
sub
mov
inc
and
mov
push
ss
xor
nop
or
pop
pop
mov
stos
cwde
cmp
test
pop
xchg
mov
sbb
add
mov
add
push
jl
outs
xchg
xlat
popf
fs
push
je
jnp
and
js
cmps
mov
dec
bound
push
in
add
popf
jg
ret
jl
mov
dec
cmp
outs
xchg
inc
pop
mov
pop
or
push
and
stos
inc
in
stos
dec
adc
in
lahf
(bad)
mov
inc
xor
movs
or
sub
inc
(bad)
outs
jnp
dec
push
adc
(bad)
sub
add
inc
iret
cmc
xchg
cmps
inc
push
sahf
popa
outs
jge
dec
ficom
lds
daa
test
mov
mov
scas
add
xchg
dec
test
inc
and
push
bswap
sbb
or
pop
or
int3
and
jle
aam
(bad)
sub
jne
cmps
adc
jnp
(bad)
inc
mov
test
in
mov
push
jb
inc
push
push
xor
ret
or
in
icebp
push
pop
test
mov
jns
push
test
add
push
push
pop
mov
or
es
popa
inc
xor
fisub
ret
std
jl
call
xor
das
cmps
fild
lock
push
fsubr
push
stos
dec
add
pop
cld
int
xor
mov
sti
sbb
rep
dec
ja
(bad)
push
sub
dec
popa
push
(bad)
fisttp
std
mov
xlat
jmp
adc
sbb
in
inc
call
stos
(bad)
mov
les
mov
xchg
les
fcmovnb
shl
hlt
sub
ret
jle
mov
std
push
push
cdq
mov
push
cmp
imul
in
xchg
test
icebp
or
enter
ror
add
(bad)
and
addr16
jno
mov
or
sbb
out
mov
mov
in
jecxz
jno
push
add
fadd
and
nop
jne
test
mov
push
ret
cwde
(bad)
adc
nop
bound
sbb
jb
movs
out
inc
mov
or
icebp
or
out
mov
sub
test
lods
or
dec
mov
ret
(bad)
pusha
and
pop
daa
repz
cdq
loope
pop
inc
clc
(bad)
jle
mov
mov
cmc
xor
jl
and
add
and
adc
push
dec
adc
sti
ret
sbb
or
cmp
or
sbb
xchg
ret
(bad)
sub
jle
pop
icebp
fldcw
and
mov
test
mov
clc
fsubr
pop
cmp
aas
adc
xchg
mov
cs
aad
je
push
ins
sbb
call
test
inc
scas
dec
out
sbb
sbb
icebp
ret
or
leave
dec
dec
mov
or
in
rep
repnz
adc
sbb
mov
jmp
test
sub
js
mov
hlt
iret
pop
icebp
test
jmp
sbb
test
out
icebp
outs
fcomp
sub
imul
bound
das
cmp
cmp
jnp
adc
sub
call
mov
inc
jl
jo
dec
loop
xlat
push
call
push
xor
mov
cwde
sti
sar
adc
mov
or
push
test
clc
popf
fwait
rcl
fst
jne
mov
test
push
push
test
push
pop
arpl
inc
and
daa
jno
movs
jnp
lods
cs
jae
add
iret
arpl
into
mov
sahf
inc
sbb
aad
jmp
mov
mov
sub
add
ret
sbb
enter
int3
shl
add
ret
xchg
outs
and
and
gs
loop
push
pop
add
mov
push
in
push
sbb
xor
pop
mov
jp
out
xor
pop
fld
js
sub
jmp
in
xchg
cmp
sbb
xchg
mov
int
push
retf
xchg
adc
call
jmp
jmp
pop
aas
ret
mov
add
(bad)
stos
sbb
add
test
enter
fwait
icebp
rcr
inc
inc
jne
cmp
in
mov
pop
xchg
cwde
mov
mov
mov
adc
mov
jp
xor
xchg
ins
push
cmc
dec
fcmovnbe
jnp
fs
pop
xchg
mov
stos
xchg
sub
arpl
iret
mov
push
sub
scas
pop
inc
sbb
hlt
popf
cmps
cli
jbe
and
(bad)
lods
cld
jbe
add
mov
xor
call
push
add
mov
mov
xchg
ins
stc
cmp
adc
and
mov
cmp
mov
fldcw
dec
enter
shr
xlat
push
mov
or
xchg
jl
in
dec
dec
push
jmp
pop
cmp
xchg
das
inc
rcl
jae
prefetchw
or
jmp
int3
pusha
and
mov
(bad)
or
dec
sub
jnp
jae
cli
fadd
and
jno
mov
out
lock
mov
push
fst
cmp
ins
adc
mov
mov
mov
pushf
pop
scas
pusha
loop
pop
push
cmps
or
scas
sbb
mov
js
push
stos
or
std
or
ja
arpl
cli
jecxz
enter
add
cmp
aaa
add
shr
cmps
shl
repnz
mov
and
pop
sbb
out
dec
jle
jmp
push
pop
dec
leave
add
and
test
test
fmul
dec
lea
ja
cmps
pop
dec
inc
and
and
imul
data16
xchg
sbb
xchg
test
adc
jo
add
or
comiss
lods
mov
rol
fwait
and
cld
jp
bound
pop
pop
jnp
adc
mov
pop
pop
(bad)
movs
jne
pop
aas
test
lods
mov
ins
ds
xor
lock
not
into
jo
sbb
xchg
imul
rcr
mov
cmp
jns
xor
push
call
push
inc
repnz
dec
xchg
add
test
pushf
mov
sti
fiadd
test
inc
or
sub
cmps
sbb
inc
mov
pop
fld
stos
mov
cmp
cmp
mov
pop
sbb
cmps
sti
mov
aam
(bad)
stos
ins
jns
imul
adc
pop
sar
add
mov
pop
outs
jnp
mov
out
popa
inc
dec
sahf
leave
mov
push
mov
mov
cmp
imul
test
pop
inc
ins
pop
popa
and
ror
sbb
int3
jae
mov
lods
xchg
mov
xchg
adc
stos
inc
(bad)
gs
pop
sbb
ins
inc
jo
bound
adc
sbb
dec
xor
pop
out
pushf
xchg
inc
call
fstp
mov
int
outs
and
pop
mov
pop
cmp
lods
jmp
dec
mov
call
sbb
pusha
xchg
or
adc
and
cmc
add
push
mov
daa
mov
lods
jmp
xchg
pop
hlt
xchg
pushf
adc
pop
movs
mov
fsub
leave
inc
inc
out
inc
lahf
and
xchg
cmps
out
or
cmp
adc
nop
pop
pop
xor
mov
push
push
mov
jmp
add
imul
dec
mov
push
lock
aas
jne
in
imul
mov
fcomp
or
stos
fchs
outs
test
or
sbb
mov
push
adc
das
imul
ins
cmps
mov
sbb
xor
dec
ror
dec
sar
pop
inc
jmp
sar
popf
xchg
jbe
sbb
ror
aam
mov
pop
pop
daa
and
dec
(bad)
das
adc
in
call
or
frstor
or
icebp
repz
xchg
push
pop
ins
jp
stc
xchg
movs
(bad)
ficom
(bad)
pusha
jmp
mov
sbb
bnd
cmp
dec
pop
div
jno
je
dec
pop
sub
jg
mov
sbb
push
stc
scas
lea
mov
xchg
sbb
cmovnp
jecxz
fisub
cmc
pop
(bad)
repz
idiv
pop
sti
dec
xor
pop
sub
xlat
mov
lahf
into
jb
jno
dec
daa
mov
sub
ds
jae
mov
push
push
add
fwait
int
out
or
outs
in
xor
mov
sub
or
inc
adc
cmp
push
pop
shl
pop
pop
pusha
jo
xchg
add
add
adc
lods
jno
cs
jg
sub
mov
adc
in
ffree
push
xor
test
xchg
popf
or
popa
rcl
ret
mov
mov
cs
fs
or
stos
inc
jge
xor
out
cmp
repnz
nop
js
xchg
arpl
or
cmp
sbb
out
test
jmp
xchg
mov
push
push
adc
imul
imul
stos
jecxz
mov
pushf
in
xor
std
and
stc
addr16
dec
mov
fisttp
(bad)
mov
lahf
sub
std
cmp
out
jg
cmc
xor
(bad)
stos
test
push
cs
adc
xor
(bad)
in
test
fwait
xor
jmp
sbb
fwait
jb
xor
xchg
call
(bad)
aam
dec
cwde
cmps
jge
shl
dec
or
mov
lods
clc
inc
adc
scas
(bad)
stos
stc
fwait
push
test
jecxz
mov
mov
and
xor
pop
xchg
int
push
mov
cmp
loopne
or
ret
je
pop
(bad)
leave
outs
cmp
test
aam
adc
add
push
mov
pop
adc
ficom
dec
(bad)
adc
data16
imul
test
ss
push
and
cmp
fbld
int
fiadd
shr
xor
mov
call
fild
sub
(bad)
or
dec
into
ins
mov
stos
push
inc
push
outs
aaa
fwait
ja
cmps
add
clc
sub
xchg
pushf
jae
sub
xor
sub
cmp
mov
pop
sbb
and
retf
inc
in
cld
mov
je
inc
jne
jmp
mov
adc
cs
xchg
loope
wbinvd
adc
and
xor
mov
fwait
sbb
outs
xchg
clc
sub
int
jb
retf
pop
pushf
mov
inc
in
inc
pop
icebp
inc
adc
inc
sbb
xor
add
int
out
dec
shr
mov
jb
scas
inc
in
sbb
sahf
mov
jne
cmp
xchg
cmc
dec
js
lea
xchg
aad
hlt
sbb
sahf
xor
jb
mov
push
push
mov
jne
sub
test
jmp
mov
cmps
push
sub
jb
movs
lea
and
in
push
mov
jbe
(bad)
xchg
outs
mov
mov
jns
arpl
sti
jae
adc
retf
adc
das
out
ja
sti
jns
mov
jecxz
adc
aam
push
stos
out
lock
call
pop
jbe
adc
sub
jecxz
fwait
movs
div
lods
ror
(bad)
mov
ret
adc
les
ja
fiadd
ins
push
arpl
mov
shl
or
push
mov
jge
push
xchg
fdiv
fldcw
movs
mov
ds
sub
in
inc
pop
movs
jmp
sti
sbb
out
std
or
psrlq
imul
ror
retf
sahf
mov
aad
jecxz
(bad)
in
xchg
push
out
daa
inc
mov
or
sub
xor
xchg
add
rcr
jo
nop
(bad)
mov
lods
jnp
das
push
mov
in
ror
out
jo
scas
mov
xchg
fbstp
ins
retf
mov
sbb
fcom
cwde
hlt
jnp
inc
pusha
add
lods
mov
or
aam
mov
cdq
dec
push
push
leave
or
sar
mov
out
push
pop
add
in
or
call
nop
xchg
push
std
jmp
sbb
(bad)
jmp
in
popf
fist
dec
add
(bad)
mov
add
dec
shl
ins
xchg
sbb
popf
mov
jp
int
mov
adc
pop
push
mov
xchg
jo
cmp
fidiv
das
push
push
mov
xchg
test
int
lods
hlt
push
stos
das
std
loop
leave
adc
mov
push
mov
add
mov
sbb
(bad)
lahf
sar
fsub
fldcw
mov
outs
push
mov
pop
push
popf
in
mov
movs
jmp
mov
mov
gs
xchg
pop
ins
xchg
dec
das
mov
and
inc
or
outs
adc
imul
and
sbb
imul
leave
test
nop
enter
cmp
push
je
push
int3
ret
imul
mov
sub
fcmovu
js
out
je
out
push
movs
les
pop
(bad)
fistp
dec
movhps
mov
jae
jge
cmps
(bad)
dec
pop
add
adc
call
mov
add
cmp
push
mov
pop
les
xlat
adc
pop
ror
mov
xlat
adc
mov
outs
imul
jmp
add
sbb
and
hlt
mov
jb
and
iret
jecxz
push
cli
pop
add
mov
rcr
sbb
enter
adc
cli
sub
sub
fiadd
pop
mov
mov
ins
jbe
pop
lahf
dec
push
addr16
dec
xor
inc
xor
cmp
add
sbb
aam
es
push
daa
xor
adc
add
mov
mov
dec
popf
shl
mov
mov
jns
mov
adc
arpl
jl
inc
out
outs
stos
arpl
sub
(bad)
push
xchg
and
xor
(bad)
push
(bad)
fimul
and
mov
cmp
test
pop
popa
mov
adc
jecxz
sbb
in
xchg
out
repz
repz
xchg
(bad)
(bad)
pop
jl
cmp
cmp
cli
icebp
mov
cld
mov
mov
ss
lods
mov
lahf
shl
inc
xchg
mov
movs
inc
cli
lock
xchg
mov
arpl
(bad)
fnstsw
xor
loopne
std
lods
lods
das
ficom
mov
idiv
outs
fdiv
xchg
arpl
adc
stc
jl
mov
push
mov
add
mov
pop
(bad)
fstp
jae
ret
cwde
inc
mov
or
jle
dec
hlt
add
jl
push
addr16
cmp
pushf
outs
sbb
in
inc
test
sbb
sahf
pop
mov
add
mul
lock
loop
imul
push
cdq
xchg
repz
sbb
mov
clc
push
mov
mov
jmp
xor
test
ins
dec
into
cmp
push
sar
std
mov
ins
cmc
cmp
pop
pop
pop
dec
pop
or
retf
lods
mov
and
sti
ret
test
cmps
fstp
pop
leave
movs
into
dec
sbb
imul
mov
lds
xlat
sub
xor
push
or
jmp
outs
xor
cmps
test
mov
mov
dec
mov
popf
mov
shr
jl
xor
sbb
cmp
inc
je
(bad)
movs
mov
aas
mov
mov
test
scas
sbb
or
xchg
xor
popf
popf
dec
sbb
xor
dec
(bad)
sbb
push
jg
mov
xor
adc
adc
dec
ss
das
inc
inc
xor
xchg
scas
cld
in
dec
jg
mov
adc
jg
xchg
fwait
out
push
xchg
scas
fldenv
inc
push
or
add
push
or
xlat
movs
xchg
(bad)
out
or
pop
cmp
push
adc
enter
mov
pop
jmp
fdiv
cmp
inc
mov
add
mov
fs
fisttp
pop
xchg
jo
add
pop
cmp
jbe
fiadd
jmp
out
cmp
movsx
call
iret
jg
stos
adc
popa
sub
les
fmul
jmp
clc
bound
mov
out
jo
xchg
stc
pop
mov
call
adc
iret
pop
add
dec
xchg
call
dec
dec
jne
mov
or
test
sub
scas
and
adc
stos
(bad)
leave
jae
call
pusha
jno
fsub
xchg
sbb
loope
cdq
into
jecxz
(bad)
cmc
pop
xchg
daa
imul
sub
push
push
fmul
jo
and
dec
xchg
and
mov
fadd
sahf
pop
vucomiss
aad
into
xchg
loop
outs
jb
add
test
and
mov
dec
push
dec
dec
lea
sub
ja
pop
das
push
cmps
shl
xor
shr
xchg
sbb
cld
test
and
call
sbb
cmp
popf
icebp
rcr
jmp
xlat
pop
sti
aas
sub
adc
pop
mov
jecxz
ins
inc
mul
and
sbb
xchg
xchg
inc
neg
sub
ins
or
aaa
pop
(bad)
mov
inc
out
shl
mov
push
mov
pushf
dec
inc
(bad)
sbb
sbb
xchg
pushf
or
not
cdq
repz
jbe
test
xor
inc
loope
ins
push
jnp
daa
enter
add
lahf
pop
dec
ds
in
mov
or
(bad)
fnsave
pop
push
jge
jmp
(bad)
leave
cmp
mov
xor
adc
mov
inc
lods
(bad)
cdq
and
sbb
dec
and
jmp
dec
dec
out
xor
cmp
shl
stc
xor
addr16
test
fisub
xchg
pop
int3
outs
xchg
in
ins
dec
add
mov
inc
cmp
popa
popf
(bad)
sbb
cs
pop
clc
in
addr16
mov
dec
push
addr16
jno
push
les
adc
fistp
retf
jp
enter
rol
gs
xor
in
loopne
lea
hlt
push
mov
sbb
and
in
and
mov
pop
xchg
push
dec
(bad)
jge
enter
test
cmp
jb
jmp
push
shl
cmp
call
jmp
movs
pop
adc
fmul
out
xchg
cmp
xor
or
or
mov
add
xor
arpl
push
cmp
loopne
div
sbb
cdq
push
or
jp
imul
in
xor
loope
cld
xor
inc
ror
sahf
loope
aas
jbe
jle
fwait
in
nop
in
sar
addr16
in
cmp
sar
mov
dec
cmp
sahf
mov
pop
dec
inc
jl
or
mov
sub
pop
(bad)
test
sub
add
fsub
add
mov
popf
iret
dec
fnsave
ret
sbb
or
xchg
push
add
rcl
adc
ins
aaa
jno
fisttp
ror
jbe
popa
mov
cld
test
add
cli
lds
mov
sar
loopne
or
cmps
cmp
iret
jecxz
inc
mov
mov
js
add
es
sar
test
stos
iret
push
lods
cs
sub
and
fild
(bad)
push
and
test
push
cmp
adc
arpl
push
mov
sbb
cmp
add
mov
jae
and
add
repz
js
jp
dec
cs
or
aad
or
mov
inc
fwait
or
scas
enter
push
(bad)
xor
outs
mov
out
jbe
mov
mov
inc
jl
sbb
add
clc
cmc
push
je
sti
xchg
mov
xchg
dec
mov
aam
mov
adc
dec
and
inc
pop
popa
ss
mov
pop
movs
js
rcl
push
mov
repnz
into
mov
imul
sbb
nop
inc
cld
mov
inc
sti
loop
test
mov
xor
cli
xor
and
push
mov
fisttp
stos
pop
aad
ja
inc
lock
fcomp
sbb
add
xchg
in
fld
es
xor
lock
fmulp
shr
xor
jmp
push
sub
pop
sbb
(bad)
or
arpl
popa
mov
xchg
aad
xchg
ret
cmp
inc
sbb
mov
addr16
fadd
addr16
mov
scas
xor
mov
inc
mov
xchg
mov
xor
cmp
scas
cmp
mov
je
adc
mov
jmp
(bad)
adc
in
in
xchg
or
and
xlat
lods
cmp
jbe
push
push
inc
scas
mov
test
mov
jns
xlat
icebp
mov
mov
mov
loopne
in
sbb
(bad)
pop
clc
and
push
neg
mov
mov
int3
stos
jae
movs
cli
scas
fcmovb
adc
pop
movs
and
icebp
rcl
ret
sbb
push
inc
dec
dec
aaa
dec
push
ja
lods
aas
mov
xor
inc
das
mov
mov
mov
jmp
shr
outs
jecxz
pop
popa
hlt
mov
jl
stc
and
sbb
pop
imul
ins
mov
xor
rcl
or
mov
pop
ret
repnz
xor
in
out
fidiv
in
shr
sbb
enter
mov
add
aam
in
ins
inc
and
cmp
ss
and
aam
cmps
scas
fdivr
fucomi
cmp
mov
sbb
cmps
fcmovnu
xor
movs
pop
sub
int
mov
xor
cmp
mov
std
jno
fisubr
xchg
into
cmp
inc
push
mov
sahf
sti
imul
xchg
inc
jle
mov
(bad)
mov
gs
not
lock
push
inc
mov
movs
inc
xchg
fstp
inc
stos
mov
pushf
cmp
jecxz
jle
jbe
outs
cmps
les
pand
xchg
mov
les
or
push
inc
add
popa
cmp
leave
fs
test
pop
mov
push
jno
int3
sub
fild
mov
ror
adc
mov
pop
push
inc
sti
push
mov
aaa
lock
in
and
dec
dec
jnp
fist
lods
out
cmp
scas
push
dec
jl
push
test
sbb
mov
ror
fcmovne
mov
push
or
ret
stos
(bad)
push
test
jno
xchg
xchg
jbe
ins
jbe
enter
or
cmp
dec
jne
jb
fist
jecxz
nop
add
lahf
cmp
pop
and
add
rcl
lods
fstp
mov
and
mov
stos
push
sbb
sbb
ja
into
mov
stc
jmp
test
stos
(bad)
repz
and
pop
xor
icebp
pop
or
jmp
dec
push
shl
or
lods
pop
push
xor
pop
test
in
push
adc
mul
xor
add
lds
ss
inc
aaa
lods
mov
sbb
mov
out
mov
inc
cmp
out
push
cmps
push
rcr
outs
sbb
sub
xchg
(bad)
mov
outs
in
inc
push
jmp
xchg
cwde
inc
test
pop
adc
inc
xor
cmp
mov
or
mov
ins
repz
fiadd
das
cli
mov
xchg
jmp
(bad)
aaa
in
mov
ins
inc
bound
push
inc
jl
pop
xchg
adc
inc
fnsave
int
nop
scas
daa
or
add
adc
ret
aam
and
and
adc
cwde
mov
mov
pop
and
jg
inc
push
sbb
add
jp
leave
stos
leave
sbb
dec
xchg
inc
stc
xchg
xor
ror
or
mov
inc
call
mov
jo
and
cs
repnz
inc
lods
push
(bad)
lods
adc
xchg
fdiv
push
cmc
ss
mov
dec
iret
mov
pop
pop
sbb
adc
mov
sbb
pop
(bad)
and
sahf
scas
jmp
into
rcl
loop
outs
test
or
nop
mov
(bad)
push
jmp
retf
push
push
sub
ds
fsubr
jnp
dec
mov
lds
loop
lock
ins
adc
cmc
stos
jo
or
dec
or
ds
aad
or
or
mov
cwde
sub
jns
mov
pop
aam
jae
(bad)
cli
pop
movs
pop
or
adc
push
jnp
and
daa
mov
mov
mov
(bad)
clc
sub
cwde
jb
stos
pop
pop
pushf
xor
sub
les
mov
dec
lds
clc
pop
popf
dec
fistp
mov
pop
adc
jb
inc
outs
fisubr
xchg
xor
aas
xchg
push
movs
mov
repnz
fcomip
popf
call
imul
retf
dec
jnp
leave
push
push
jl
jge
cmp
jne
jp
enter
enter
cmp
jecxz
outs
retf
imul
clc
fsub
in
sar
pop
inc
jne
mov
ror
in
imul
(bad)
push
pushf
sti
cmc
aaa
aam
xor
push
inc
jne
push
arpl
in
xor
adc
ins
and
cmp
jg
ficomp
dec
loop
and
sbb
sbb
inc
pusha
popa
lahf
test
test
xor
sub
cmps
jnp
das
cdq
and
xor
cmp
add
dec
fisubr
movd
cmps
loop
ss
mov
outs
lods
inc
rcl
cwde
ret
popa
jne
inc
rol
dec
mov
into
sbb
sub
das
sbb
jg
mov
fcmovne
mov
and
jg
pop
popf
nop
je
xor
xor
sub
cdq
std
(bad)
iret
xchg
in
retf
cmp
xchg
inc
pop
fidiv
test
dec
sbb
not
sub
mov
(bad)
pop
cmp
cmp
cmps
or
inc
clc
mov
retf
sbb
mov
sbb
out
push
fldenv
fld
add
fisttp
ins
leave
pop
jae
dec
ss
jg
jb
xlat
adc
ret
test
cmp
mov
xchg
fmul
pop
sbb
out
repnz
mov
movs
cmp
jns
sub
push
and
and
(bad)
sbb
imul
movs
cmp
inc
sbb
out
cmp
nop
out
mov
sbb
push
pop
push
ss
xchg
pushf
pushf
dec
jnp
out
push
cmp
add
sbb
adc
mov
add
mov
adc
pop
xchg
call
inc
pop
das
enter
mov
cmp
test
jp
addr16
out
in
je
jno
ins
retf
shr
pop
push
repnz
pop
and
jmp
jecxz
add
jp
or
pop
dec
adc
cmovle
cwde
mov
mov
aaa
cmp
dec
mov
mov
xor
ror
pop
aam
sub
mov
in
out
push
pushf
mov
cdq
iret
mov
iret
ret
mov
xor
adc
mov
scas
inc
xchg
daa
xchg
or
push
in
out
jae
lods
loope
test
into
or
cmp
or
mov
ins
xchg
in
sbb
icebp
in
sti
push
aas
enter
stos
push
inc
dec
popf
xchg
sub
xor
xchg
sub
jae
mov
ins
out
das
mov
mov
not
nop
mov
icebp
lahf
pop
push
imul
ins
sar
ds
xchg
xchg
lods
in
aas
pop
xor
push
aaa
sbb
test
cmp
mov
adc
add
push
pop
shl
inc
fwait
mov
into
adc
mov
push
ret
mov
dec
mov
stos
sbb
adc
mov
int3
out
sar
cld
jbe
mov
outs
cmp
loop
rol
xchg
cs
loop
fld
lds
xchg
ret
or
shl
mov
pop
scas
dec
or
js
dec
dec
push
shl
xchg
xor
mov
and
pop
jge
jmp
jns
stc
jne
mov
leave
xchg
jne
inc
push
loope
and
int3
movs
cmps
pop
xchg
adc
xchg
enter
jl
cmp
push
loopne
jp
in
dec
aad
sbb
xor
dec
jl
(bad)
scas
mov
dec
add
scas
inc
pop
lahf
or
jecxz
retf
popa
pop
adc
push
rep
inc
int
cmp
pop
cmp
push
fidivr
fisub
mov
ret
stc
sub
dec
repz
mov
(bad)
outs
push
loopne
dec
jmp
xor
call
jmp
xor
shr
cwde
jns
sub
and
pop
ror
std
fsubr
ins
add
repnz
stc
(bad)
mov
loopne
(bad)
mov
mov
add
sub
imul
sub
retf
mov
hlt
jmp
mov
dec
fcomp
sbb
fdiv
mov
lods
inc
pop
pop
rcl
push
jle
sbb
mov
call
jb
into
rep
mov
movs
cmc
aaa
mov
add
nop
pop
into
cmp
popa
aas
adc
jp
mov
push
ja
inc
js
mov
mov
sbb
or
loope
dec
cli
or
sub
push
sub
mov
popa
jg
and
sbb
jle
dec
fst
push
push
aas
clc
xor
repnz
xchg
addr16
(bad)
mov
jo
out
xchg
(bad)
loopne
hlt
shr
mov
cmp
jmp
in
cmp
mov
pop
bound
iret
(bad)
mov
loope
arpl
mov
sub
mov
(bad)
jae
or
inc
movs
inc
ss
add
push
mov
dec
inc
das
iret
pop
out
dec
sbb
movsx
cmps
iret
icebp
mov
mov
out
scas
mov
lds
jb
jecxz
jnp
sub
add
pop
and
fbld
popf
jns
inc
add
cs
jmp
xchg
dec
outs
dec
mov
lods
mov
push
or
cmc
retf
sub
xor
jns
sbb
push
inc
jno
or
push
and
add
push
scas
and
and
dec
sub
jb
or
sbb
mov
aam
xchg
std
test
jmp
call
pop
les
dec
dec
outs
lods
lea
std
adc
jb
mov
in
jae
xlat
stc
sub
xchg
sbb
sbb
retf
pop
pop
repz
add
jg
aas
outs
dec
xchg
movaps
leave
cmp
loope
pop
sbb
or
jl
ja
adc
das
es
add
cmp
mov
jge
dec
xor
cmps
pusha
lahf
stc
aas
cmp
cli
pop
das
cli
sbb
loopne
sub
pop
push
mov
pushf
movs
ja
and
sar
xor
(bad)
aad
mov
fmul
ins
mov
mov
pop
mov
or
adc
out
cmp
out
out
into
cs
and
sub
mov
loopne
xor
sub
addr16
lahf
in
mov
inc
mov
sahf
xor
sbb
mov
js
jmp
repz
shr
push
or
or
and
sti
cs
mov
dec
pop
sbb
jns
mov
ret
jae
xchg
xchg
xchg
inc
dec
push
(bad)
sbb
fst
push
pushf
sbb
xchg
pop
shl
dec
sub
pop
push
mov
lods
mov
sahf
sub
mov
sbb
dec
movs
and
push
xchg
xlat
int
mov
popa
rcl
es
cmp
mov
xchg
pop
add
int
pop
mov
imul
adc
out
adc
jo
push
fdivr
inc
mov
push
loope
pop
jb
sti
push
in
mov
adc
aas
daa
push
dec
es
and
stos
je
mov
mov
movs
add
push
aas
mov
push
dec
mov
mov
xor
dec
xor
jb
pop
sub
xor
mov
je
loopne
dec
jne
data16
rol
les
sbb
(bad)
test
lahf
sub
enter
ret
scas
movs
(bad)
hlt
daa
sahf
push
inc
dec
cwde
mov
movs
or
lock
xchg
dec
fdivrp
push
outs
mov
push
push
jl
imul
gs
mov
test
pusha
and
sub
or
test
pop
xor
into
xchg
outs
mov
jo
clc
out
fdiv
outs
ret
lds
mov
sbb
jne
mov
movs
test
(bad)
daa
xchg
dec
adc
imul
pop
mov
popa
push
sti
aad
ror
sbb
movs
es
inc
bound
sub
inc
xchg
(bad)
mov
add
(bad)
sahf
retf
pop
ins
(bad)
dec
xor
mov
dec
adc
xor
fsub
xor
xchg
js
xor
ss
jl
data16
dec
adc
or
push
cli
psubusb
dec
jle
inc
fld
jl
mov
inc
xchg
(bad)
jge
fst
loope
imul
adc
dec
push
mov
fwait
pop
cli
xchg
pop
(bad)
(bad)
in
push
ror
fstp
mov
fsubrp
inc
out
mov
mov
std
fdivr
mov
aam
and
sub
(bad)
mov
sbb
and
xchg
jp
scas
inc
dec
test
repz
mov
xchg
sub
imul
xchg
sbb
js
fs
mov
pop
or
shr
cmp
inc
outs
fsubr
mov
int
pop
stos
cmps
xchg
test
fistp
push
adc
cld
xchg
inc
je
ja
scas
push
pop
dec
xlat
push
mov
out
inc
pop
pop
cmp
aaa
and
mov
add
sub
push
retf
pop
das
lods
inc
adc
mov
push
xor
mov
mov
mov
lods
pop
out
imul
repnz
scas
inc
push
mov
push
inc
scas
stos
xor
aas
dec
sti
out
push
inc
ret
mov
mov
xchg
xchg
call
or
inc
jb
into
fwait
pop
adc
xor
and
mov
mov
mov
or
xor
int
das
adc
xchg
ror
es
ins
dec
cmp
sub
and
inc
and
adc
dec
test
lds
imul
ret
cmp
push
and
pop
into
fild
jmp
sub
cmp
push
mov
mov
push
cmps
punpckhwd
das
pushf
xchg
mov
gs
stc
shr
adc
push
push
add
xchg
and
pop
les
jge
sti
xor
outs
jl
call
(bad)
in
cmp
dec
mov
or
jae
rcr
sub
dec
test
sub
mov
sbb
scas
adc
fild
aas
sbb
fadd
rol
sbb
pop
paddq
or
jmp
test
and
mov
arpl
scas
and
sbb
(bad)
loopne
dec
jo
sbb
add
push
sub
fdivr
jmp
shl
inc
out
and
mov
(bad)
dec
xor
sub
push
test
ins
jae
pop
out
stc
xchg
pop
cmp
pop
xchg
data16
xor
(bad)
ror
movs
pop
sbb
test
mov
ja
adc
in
dec
push
inc
push
call
dec
pop
(bad)
xchg
jo
adc
sub
and
fwait
dec
stos
ins
jge
and
lea
les
(bad)
xor
shl
xchg
(bad)
xlat
push
test
and
hlt
sbb
xchg
jnp
pop
xlat
sub
mov
repz
xchg
jb
shr
fs
xlat
lods
jne
and
cdq
fist
cmp
adc
jmp
js
inc
fwait
push
jp
jne
out
les
test
enter
rcl
jge
adc
ret
inc
and
inc
(bad)
jnp
addr16
out
jns
sbb
push
iret
jmp
stos
xor
retf
(bad)
loop
inc
sbb
mov
movd
push
cmp
lahf
into
fidiv
cs
stos
lods
xchg
test
xor
mov
jmp
dec
push
cli
and
into
lock
mov
jle
fucom
addr16
fcomp
jb
mov
int
and
scas
dec
(bad)
sbb
xchg
cmp
mov
mov
dec
pop
inc
les
imul
repz
push
jl
or
push
sbb
sub
jmp
hlt
enter
aaa
mov
mov
fdiv
add
jmp
adc
out
es
pop
outs
rcr
dec
jmp
cmp
mov
add
adc
iret
inc
out
scas
jne
mov
add
jno
push
xor
pop
adc
mov
xchg
fnsave
sub
fsubr
and
xchg
add
in
scas
icebp
sbb
outs
cmc
mov
idiv
pop
test
jae
sahf
lds
test
cmp
cmps
retf
ret
popf
lahf
rol
add
jnp
adc
pop
out
lea
lds
dec
mov
lahf
es
push
mov
stc
mov
push
fiadd
add
add
lods
into
or
mov
pop
paddsw
jo
std
and
(bad)
in
mov
in
aam
mov
inc
mov
setnp
jge
cwde
pop
aam
mov
mov
out
add
push
jmp
xor
adc
or
icebp
fiadd
call
movs
repz
shl
sahf
scas
lahf
inc
fwait
pop
xchg
sti
pop
sub
ins
push
(bad)
jo
fld
fimul
pop
icebp
popa
xor
jb
adc
in
(bad)
add
mov
xor
xor
pop
cmp
(bad)
test
prefetch
sti
outs
aaa
aam
jbe
jnp
hlt
fcomp
mov
inc
dec
push
pop
shl
outs
clc
or
mov
pop
(bad)
out
xor
fidiv
scas
and
sub
out
test
pop
dec
cmps
cld
aas
push
retf
lds
movs
mov
mov
loop
xor
addr16
push
rol
sub
fisubr
pushf
jbe
xchg
dec
xchg
jns
es
(bad)
(bad)
sti
mov
jbe
int
outs
dec
pop
stc
jns
xor
sbb
cs
add
(bad)
xchg
gs
int3
cmp
lods
lods
jle
fucomp
(bad)
lea
in
bound
mov
mov
mov
addr16
ja
mov
into
out
std
into
aas
stos
ja
fnstenv
and
shr
sub
rcl
cs
sbb
adc
mov
jge
jmp
(bad)
hlt
dec
jne
push
outs
mov
in
or
in
test
lds
fidiv
fsub
adc
lock
shr
xor
out
mov
cmp
test
add
mov
repz
cmp
adc
xchg
inc
les
sub
mov
add
cmp
dec
clc
out
ror
inc
sar
sbb
xor
pop
rol
adc
mov
fild
pop
inc
cmp
xlat
call
adc
(bad)
jnp
in
retf
xchg
cs
xchg
or
(bad)
cmc
or
xchg
inc
(bad)
shr
jp
mov
mov
mov
int3
adc
sub
mov
mov
iret
js
inc
jmp
and
mov
pop
inc
cwde
ja
outs
sub
pop
clc
and
jg
jmp
and
js
retf
popa
stc
push
jne
aas
jg
cmp
out
push
jbe
mov
mov
jmp
adc
in
repnz
(bad)
and
jbe
in
fucomip
xor
jmp
loope
and
fwait
in
jmp
mov
jge
out
mov
js
sub
aaa
inc
cmp
inc
daa
ficomp
mov
cmp
rol
or
mov
jmp
loop
dec
in
jne
push
retf
inc
rcr
retf
fs
sbb
mov
or
and
call
call
adc
lock
mov
sub
cwde
sbb
icebp
into
or
jo
(bad)
(bad)
and
jns
add
xchg
mov
and
call
les
inc
fwait
sub
mov
outs
jge
leave
arpl
repnz
push
jl
push
mov
loopne
nop
arpl
clc
dec
test
adc
test
fsubp
nop
cmps
test
(bad)
mov
mov
adc
xchg
popf
(bad)
ja
rcl
mov
das
pop
cmp
cld
jo
scas
add
outs
mov
cld
or
sbb
or
add
outs
jne
jno
ins
mov
sub
pop
adc
mov
pop
cld
sbb
adc
push
scas
jnp
xor
jmp
aaa
out
or
popa
movs
mov
push
ror
mov
push
fisttp
in
bnd
sar
fst
xlat
mov
xor
int3
das
loop
adc
xor
or
fdiv
mov
sub
(bad)
mov
inc
pop
push
sbb
push
retf
sbb
test
dec
retf
or
xchg
dec
out
lahf
add
sbb
jmp
lds
clc
ins
mov
das
jo
(bad)
aaa
jae
lods
loope
push
pop
xchg
xchg
sti
push
pop
cwde
xchg
out
or
aas
inc
fcomp
or
push
mov
and
mov
jno
mov
push
cli
int
ins
out
pushf
dec
fcom
sbb
jmp
sub
inc
jae
fadd
push
pop
ins
(bad)
(bad)
fidivr
add
adc
xchg
push
cdq
cs
push
and
jecxz
xor
fwait
call
and
lds
outs
inc
(bad)
cmp
stc
mov
cwde
adc
xchg
mov
xchg
std
int
xor
mov
les
cmp
daa
fwait
int
int
fcmovnbe
mov
in
mov
iret
sbb
mov
inc
cmps
mov
mov
pop
cmps
mov
push
mov
cmp
fs
jp
mov
sti
in
iret
scas
fst
iret
(bad)
(bad)
aad
sbb
aaa
shl
outs
ja
sar
fmul
test
jo
xor
pop
pop
ffree
xor
jmp
and
arpl
mov
(bad)
sub
(bad)
lods
sahf
mov
shl
sub
into
gs
sub
aad
mov
cmp
push
mov
fbld
in
or
push
outs
int
inc
jmp
lea
dec
mov
mov
and
jecxz
leave
mov
stos
jns
shl
scas
test
xor
imul
xlat
hlt
out
stos
imul
mov
lods
ins
inc
jb
test
shl
cmps
outs
btc
lahf
sbb
jg
push
or
jg
je
inc
sub
in
push
jmp
dec
jp
push
js
int3
dec
xchg
and
inc
dec
dec
adc
rcr
out
add
xor
push
aaa
ret
xchg
in
movs
lahf
ja
ret
mov
pop
mov
pop
ret
jnp
scas
sar
in
mov
or
push
ss
mov
test
mov
ret
ret
jb
adc
dec
sub
sbb
stc
inc
lahf
xlat
rcr
push
fwait
push
inc
sub
dec
pop
movs
and
push
ret
test
pop
inc
stc
inc
cmp
jp
inc
xchg
icebp
stc
mov
mov
aad
out
cmp
repnz
std
push
(bad)
popf
and
jge
mov
sub
add
stc
repz
enter
xor
gs
inc
mov
fmul
push
dec
mov
js
test
int
call
(bad)
addr16
lock
push
or
aaa
adc
dec
(bad)
fdivr
mov
ins
sbb
js
lds
js
inc
cs
shl
shl
rcl
leave
mov
outs
cmp
push
lea
clc
push
jle
fmul
dec
rcl
jmp
add
cld
cli
jmp
les
lock
xor
dec
mov
add
test
inc
shr
adc
cld
cmp
aad
xchg
inc
movs
loope
push
repz
aad
cli
nop
mov
xchg
pusha
jmp
test
sbb
retf
cmp
stc
aaa
jmp
pop
and
sbb
fs
or
pop
jnp
adc
test
out
sub
fidiv
movs
push
sbb
mov
enter
sub
jp
push
push
test
mov
popa
dec
or
fild
(bad)
push
cmp
mov
cmps
stos
dec
pop
ficom
sets
rcl
xchg
inc
in
ret
fwait
mov
scas
inc
ret
fsub
aaa
or
ins
adc
mov
in
push
aam
arpl
push
ss
pop
mov
pop
ja
out
push
out
inc
in
push
retf
mov
jl
add
jmp
mov
mov
repnz
push
jge
aam
cs
mov
and
dec
cdq
adc
adc
in
jl
inc
push
(bad)
sub
iret
or
(bad)
pop
or
sbb
out
mov
xchg
cmp
js
cmp
aas
outs
sbb
push
(bad)
shr
sbb
sti
call
mov
bound
inc
aam
loopne
add
sbb
daa
lods
cmp
loop
(bad)
pushf
mov
stos
loope
push
addr16
mov
div
ja
cdq
xchg
mov
pop
sbb
add
dec
lods
or
mov
test
mov
or
sbb
mov
xor
sbb
movs
mov
std
cmps
push
mov
or
cmp
lahf
shl
lea
sub
sbb
push
in
sar
gs
sahf
stos
lock
pop
loope
and
arpl
pop
ficom
loope
sub
dec
sub
fimul
test
(bad)
mov
nop
mov
loopne
inc
jmp
popf
xor
bound
xlat
in
cmp
sub
lock
jmp
add
pop
cs
sub
cmps
push
or
inc
rol
retf
imul
movs
out
(bad)
in
cli
fcmove
mov
fs
test
fadd
fisttp
(bad)
into
in
aam
leave
ins
sti
push
add
xor
loope
or
call
and
repnz
cld
lds
outs
call
js
call
mov
(bad)
cmp
shr
xchg
(bad)
shl
inc
(bad)
std
sub
sahf
stc
cmc
int3
loope
add
xchg
jl
faddp
movs
rcr
inc
mov
mov
pop
aas
loop
add
shr
sub
inc
push
push
xchg
shr
arpl
add
(bad)
enter
mov
mov
sub
inc
add
loope
inc
jmp
gs
call
sub
sub
les
add
pop
dec
mov
push
test
pusha
inc
int
inc
dec
ret
fsub
add
mov
pop
xor
mov
fld
and
or
mov
adc
xor
(bad)
dec
or
or
push
(bad)
jle
mov
push
push
lahf
add
mov
pop
sahf
sbb
outs
dec
out
mov
push
and
loop
je
or
push
sub
mov
cmps
fiadd
push
mov
clc
frstor
sub
mov
xchg
mov
inc
mov
int3
mov
pop
sub
or
fbstp
pop
not
mov
movs
push
mov
rcl
sub
mov
(bad)
daa
pop
add
push
mov
aad
pop
jns
or
(bad)
mov
mov
sbb
cmp
cmps
cmp
mov
mov
outs
cmps
retf
push
hlt
cmp
mov
sub
and
cmps
inc
inc
movs
or
push
xchg
ror
daa
cmp
test
(bad)
push
push
cmp
push
mov
in
movaps
sahf
inc
sub
mov
xor
lahf
sbb
mov
scas
adc
hlt
lock
pop
and
jne
mov
sbb
cmp
cmp
test
and
add
cli
xor
ret
add
push
sbb
inc
dec
push
xchg
jmp
std
dec
fistp
adc
gs
daa
fs
cmp
aas
popa
daa
sub
mov
shr
in
fs
(bad)
pop
xchg
jno
outs
push
xchg
inc
push
in
test
cdq
hlt
cmp
cld
add
sbb
sbb
push
loopne
sbb
mov
cmc
xchg
xor
dec
fisub
cmp
push
outs
sub
fistp
mov
jnp
std
and
pop
jne
shl
adc
in
bnd
add
sub
adc
mov
mov
rcl
mov
adc
and
(bad)
xchg
mov
cmps
mov
int
call
mov
dec
xchg
or
hlt
cmps
(bad)
test
mov
cmp
movs
sub
fdivr
lods
test
loop
adc
es
sub
dec
(bad)
jp
retf
sub
jg
ins
mov
adc
fwait
xor
add
lock
pushf
xchg
jecxz
in
push
mov
repnz
xlat
enter
push
push
fcmovnb
dec
cmps
cwde
ret
cli
movntps
cmp
fwait
sub
push
cli
xlat
push
sbb
mov
leave
ins
sbb
scas
pop
pop
dec
movs
aas
cwde
cdq
stos
jnp
repz
ds
test
sub
mov
push
daa
mov
xor
xor
adc
inc
(bad)
repnz
mov
add
ret
add
jb
movs
popa
movs
add
mov
xchg
sub
sbb
add
lock
sub
inc
or
out
cmc
xchg
mov
jns
ins
mov
cwde
cli
retf
loop
xchg
jmp
sub
(bad)
xchg
ins
out
(bad)
repz
sar
addr16
hlt
outs
je
imul
idiv
push
mov
or
push
mov
add
xchg
outs
ins
push
xchg
call
pop
xor
outs
mov
xchg
adc
sbb
jnp
xchg
test
and
mov
mov
fisubr
out
dec
jecxz
leave
push
jl
cli
dec
sbb
stos
jbe
in
mov
mov
ret
retf
cmp
iret
push
xlat
lds
ins
xchg
scas
pop
xor
xchg
pop
push
mov
(bad)
cmp
repnz
mov
mov
jg
test
and
jl
pop
dec
push
push
xchg
adc
inc
aas
mov
mov
ins
pusha
hlt
xor
xchg
mov
pop
push
retf
test
hlt
loopne
sub
repnz
(bad)
lock
xchg
loope
hlt
in
les
mov
dec
pop
inc
or
xchg
pop
sub
push
dec
lods
pop
mov
out
call
cmps
sar
cmp
retf
mov
cmp
sub
in
push
(bad)
rol
fistp
pop
jg
enter
mov
add
lods
pop
cld
push
xchg
mov
cld
fcmovbe
nop
cmp
adc
xchg
sbb
and
lods
arpl
adc
jmp
leave
(bad)
test
mov
bound
or
jl
adc
and
into
inc
jae
sub
fmul
mov
push
sbb
aam
cdq
cmp
mov
cmc
lods
sbb
lahf
pop
sub
ficomp
das
fdiv
jno
jae
fdiv
inc
adc
mov
xchg
dec
sub
fcom
mov
imul
enter
loope
dec
scas
inc
fcomp
(bad)
push
push
cs
mov
cmp
in
jno
add
xchg
mul
rcr
lock
dec
in
dec
loopne
dec
push
sub
xor
xor
xchg
xchg
dec
fmul
ret
xlat
xchg
(bad)
fisubr
ins
sub
outs
arpl
inc
mov
ja
push
sbb
aaa
cs
dec
fwait
into
mov
mov
jb
pop
xchg
fcomi
dec
mov
fist
inc
add
inc
jmp
mov
cmp
mov
inc
xor
mov
and
dec
sub
aad
retf
adc
or
push
popa
jbe
popf
dec
lock
dec
jmp
inc
xchg
mov
or
(bad)
outs
dec
cld
mov
dec
pop
scas
push
repnz
fisub
outs
jbe
stos
aas
adc
xor
xor
add
add
(bad)
in
and
sbb
es
call
push
sub
out
sub
xchg
pop
mov
mov
pop
sti
dec
cmps
and
popf
push
mov
inc
mov
call
xchg
cwde
or
in
pop
dec
in
neg
mov
xchg
mov
sti
cdq
push
je
jae
in
mov
popa
add
mov
xchg
and
inc
xchg
nop
inc
adc
popa
mov
mov
test
ds
mov
popa
rcr
or
js
stos
call
test
movs
jnp
mov
sbb
(bad)
call
mov
push
push
and
or
add
xor
loop
inc
sub
into
mov
jge
lods
addr16
push
dec
imul
mov
icebp
jbe
and
cli
in
xor
sahf
push
(bad)
(bad)
sti
sbb
call
jecxz
jbe
add
mov
vcvttss2si
nop
cmp
dec
xor
imul
pop
xor
sbb
loop
mov
mov
or
dec
scas
mov
test
xchg
imul
sbb
mov
ret
test
in
popf
cdq
mov
jle
sbb
repnz
lahf
gs
inc
fild
imul
fistp
ja
loopne
inc
jge
xchg
stos
out
cmps
xor
adc
or
(bad)
pop
sar
and
sbb
imul
imul
loop
in
mov
add
jge
push
xlat
push
inc
lock
cmp
in
or
dec
faddp
fwait
jmp
jo
ficomp
inc
pop
or
xor
mov
test
pushf
mov
int3
ins
ret
sub
mov
jg
dec
mov
shr
cld
call
or
and
icebp
arpl
adc
in
out
das
pop
inc
inc
add
aas
sub
bound
ss
cmp
push
and
jge
stc
cli
mov
dec
cmp
pop
or
cmp
cmp
std
pusha
xor
fmul
mov
call
rcl
jns
push
xchg
fdivr
adc
dec
(bad)
test
xor
jge
mov
nop
clc
clc
inc
cmp
xchg
icebp
and
fstp
jge
jg
aad
dec
adc
mov
nop
cs
out
stos
push
popa
not
ret
out
fidivr
int3
jno
and
add
fldenv
sub
ds
imul
(bad)
fs
jo
cdq
mov
push
cmp
dec
cmp
mov
sbb
pop
push
int3
imul
inc
inc
imul
addr16
ss
jle
fsubr
out
dec
addr16
std
push
mov
das
into
mov
stos
mov
mov
dec
repz
xchg
(bad)
rcl
pop
ror
fcomp
push
idiv
fiadd
jne
sub
jmp
inc
xchg
retf
add
hlt
cmps
ja
dec
or
and
cwde
and
sbb
xchg
repnz
pop
ins
or
aam
sbb
shl
jg
sbb
mov
fadd
inc
cli
ror
fisttp
rol
loop
push
xor
unpckhps
mov
push
fldenv
aas
inc
sub
das
adc
xchg
outs
movs
ins
cmp
xchg
or
imul
mov
mov
inc
ds
loopne
xor
pop
icebp
add
xor
mov
and
adc
xchg
jle
jae
or
xor
imul
scas
mov
(bad)
rcl
enter
nop
dec
add
pop
lods
xchg
fs
rol
mov
xor
add
mov
je
aaa
lds
fcmovnb
or
retf
or
scas
lods
xor
jp
pusha
repz
cdq
loop
outs
enter
sahf
(bad)
jle
movs
out
test
dec
mov
or
test
sar
xchg
jb
push
int3
cmp
mov
iret
push
jge
(bad)
daa
sub
je
jmp
jle
retf
mov
pop
mov
sub
cli
adc
mov
out
sub
sub
mov
pop
mov
adc
fwait
jp
jp
xor
xor
cmps
mov
jae
xchg
icebp
(bad)
scas
aaa
outs
inc
push
mov
imul
mov
sbb
stos
dec
mov
in
pusha
stos
mov
sar
cmp
dec
xchg
(bad)
jmp
pop
pop
(bad)
and
scas
test
pushf
or
or
rcl
popf
jge
imul
fldcw
jecxz
inc
pop
sbb
mov
xchg
adc
ror
fiadd
and
adc
jo
sbb
mov
xchg
push
enter
cmp
pop
and
fidivr
adc
pop
add
adc
xchg
iret
lock
leave
fmul
cmps
sti
int
lahf
push
push
sbb
out
invd
call
in
mov
sub
xor
mov
fsub
daa
xor
loope
mov
dec
cmp
mov
outs
push
or
movs
retf
mov
ins
cmp
push
sub
sbb
xchg
xor
add
lea
ja
aas
daa
cmps
cmp
lds
data16
fdivr
pushf
aaa
mov
ins
mov
cdq
sbb
sahf
sub
(bad)
(bad)
cdq
or
in
cmp
or
adc
into
cmp
xchg
jp
test
sub
hlt
repz
(bad)
and
arpl
lea
loopne
sub
push
stos
outs
sub
test
and
neg
push
test
push
dec
cs
jmp
mov
jge
cwde
lds
push
xchg
pop
mov
sahf
cwde
mov
sub
dec
cmp
imul
mov
and
mov
leave
fwait
aam
addr16
mov
sub
inc
push
sbb
xchg
jmp
jmp
test
and
adc
push
inc
ret
ror
mov
cmp
cmp
dec
sahf
jmp
xor
or
popf
and
mov
out
sub
imul
(bad)
sbb
sub
test
mov
in
cld
xor
or
hlt
pop
push
in
mov
ins
lods
dec
add
les
push
fimul
xor
xor
jb
mov
popf
fstp
movs
inc
sbb
or
repz
inc
jp
dec
xchg
sub
sbb
adc
popf
iret
and
in
mov
push
pop
dec
mov
xchg
aas
(bad)
sub
mov
or
cdq
xchg
imul
bound
daa
adc
ja
enter
pop
cmps
cmp
push
fwait
stos
sub
and
pop
dec
sbb
imul
mov
popa
ss
cmp
es
jmp
mov
cmp
cmps
mov
js
jmp
ins
aad
lods
and
jo
jmp
cli
jecxz
in
cmp
sub
mov
inc
pop
call
scas
dec
loope
dec
(bad)
(bad)
xor
inc
adc
mov
ins
ss
in
in
or
(bad)
mov
test
xchg
jne
and
lahf
mov
mov
js
xor
xor
aad
cmps
jp
jno
ins
shl
fadd
add
xor
mov
xor
hlt
mov
dec
arpl
cdq
pop
leave
inc
aad
xor
in
or
mov
rcl
and
xchg
sbb
jnp
dec
mov
ret
lds
sti
stos
(bad)
jecxz
pop
fdivr
sub
mov
imul
(bad)
mov
mov
scas
(bad)
movs
cmc
mov
pusha
xor
retf
call
in
mov
xlat
fucomi
jg
repnz
inc
lock
ss
data16
fisttp
fwait
mov
out
jp
icebp
dec
movs
and
repz
xchg
pop
fadd
add
pusha
push
dec
loope
pop
sar
or
call
inc
out
out
sub
pop
outs
pop
pop
out
scas
inc
xchg
mov
idiv
pop
shr
in
inc
jg
ror
xchg
xor
out
mov
outs
mov
popf
cmp
jle
ds
ret
outs
ds
jmp
loopne
scas
rcr
movs
pop
ficom
call
dec
retf
mov
jo
push
xor
adc
arpl
imul
and
bound
add
ret
div
das
add
sub
(bad)
add
mov
push
std
jle
jmp
jl
xchg
cs
cmp
xor
push
cld
gs
mov
loop
jp
int
lahf
cmps
mov
pop
and
outs
jecxz
lods
jo
nop
pop
nop
pushf
xor
rcr
and
pop
or
xor
pop
mov
les
(bad)
into
push
ins
fcom
push
push
xchg
jmp
into
out
mov
push
cmp
jge
mov
sub
repz
dec
loope
xchg
retf
adc
in
bnd
mov
test
mov
xor
ss
(bad)
push
dec
rcl
(bad)
sar
mov
mov
dec
jle
stos
xlat
rcr
div
enter
ins
or
cmp
ins
pop
int
add
sub
xchg
cs
cmp
adc
pop
js
add
in
add
xchg
mov
je
sbb
test
cmp
jle
ins
data16
jg
mov
mov
repnz
inc
xchg
xchg
psrld
ds
ja
sbb
std
lods
sub
shr
fisub
(bad)
jge
pop
push
into
mov
gs
jno
ror
jns
outs
ins
mov
js
ret
repnz
(bad)
push
sahf
xchg
pop
iret
jge
jnp
mov
loope
rcr
jge
add
fisttp
xchg
adc
out
xor
cmp
pop
and
mov
aam
sub
mov
dec
inc
icebp
push
cmp
cmp
jg
repnz
inc
pop
retf
sbb
leave
push
sbb
lds
pushf
xor
loopne
sbb
jae
es
fst
inc
cmp
fs
xchg
mov
addr16
test
cmp
xchg
xor
dec
js
in
sahf
mov
retf
add
adc
sub
sbb
lods
and
jg
xchg
cmp
xor
lods
mov
call
mov
jb
cmp
xor
addr16
out
xchg
stc
xlat
lea
into
or
mov
mov
xchg
fsub
fist
inc
jp
jb
mov
fst
mov
cmps
and
mov
les
or
sub
or
jb
fist
cwde
mov
in
loop
adc
push
adc
cmp
inc
inc
jg
nop
ins
test
mov
ja
pop
sub
jae
jecxz
dec
or
or
cmp
add
clc
and
sbb
stos
xchg
fisttp
ins
cdq
cld
fisttp
dec
fimul
ret
(bad)
aas
movs
and
dec
lea
call
sbb
push
lods
shl
imul
movs
mov
fwait
push
add
cs
mov
pop
outs
ror
retf
mov
aam
adc
mov
jne
outs
ret
jae
lods
out
push
inc
sub
int3
loop
cdq
out
mov
test
pop
psrad
mov
dec
addr16
mov
repz
mov
sbb
stos
jae
inc
lds
jp
ror
or
hlt
inc
jbe
jmp
call
or
jnp
mov
sub
das
int3
mov
jb
xchg
stos
inc
out
mov
jmp
sbb
and
mov
push
test
xchg
xchg
cmp
add
lods
mov
clc
or
push
repz
adc
mov
xchg
xlat
push
cmc
push
stc
sar
mov
push
mov
sbb
fdiv
daa
jp
lds
lahf
mov
repnz
outs
push
nop
dec
int3
call
rcr
cmp
cmp
pop
adc
mov
inc
lods
sbb
mov
dec
call
pop
xchg
push
scas
not
adc
cmp
cmps
in
stc
push
test
xchg
pop
sub
jmp
adc
outs
test
mov
mov
and
jne
sar
and
rcr
shl
retf
daa
jmp
pop
sub
jb
jae
out
sub
push
sub
addr16
dec
inc
sti
xchg
fwait
jge
jo
sbb
jmp
enter
(bad)
and
lahf
mov
jl
fdiv
ror
hlt
mov
sub
aam
push
xchg
imul
scas
repnz
or
inc
mov
repnz
and
adc
cmp
mov
push
xor
jo
adc
pop
mov
jecxz
pop
fcomip
sbb
mov
stos
mov
mov
dec
pop
test
mov
out
test
xor
adc
imul
out
das
not
jo
jbe
and
and
sub
sbb
daa
scas
mov
pop
addr16
je
pop
mov
(bad)
pusha
cmp
xchg
call
arpl
dec
fiadd
adc
ss
cld
or
jb
jge
jo
jmp
xchg
jne
sbb
dec
call
jae
int3
mov
rol
fiadd
cmp
mov
dec
das
dec
addr16
clc
fistp
call
out
or
cli
adc
mov
push
sbb
xchg
inc
lods
jecxz
mov
clc
push
out
mov
scas
and
pushf
dec
xor
xchg
or
data16
mov
je
into
sbb
push
mov
cmps
mov
hlt
ds
ins
outs
xchg
mov
sti
lahf
ret
mov
js
and
push
ja
jl
ret
mov
cwde
inc
jns
dec
push
lock
or
or
scas
push
js
into
fld
dec
pop
jb
fwait
dec
xor
stos
lahf
lock
add
in
pop
and
xchg
lock
or
test
sahf
add
jnp
pop
in
jmp
add
jmp
lods
call
lea
in
std
jl
sbb
mov
enter
scas
rcl
aaa
shl
sbb
cmp
mov
inc
jge
xor
cmp
loopne
xchg
enter
arpl
sti
ins
repnz
xchg
push
sbb
jg
icebp
call
out
outs
pop
iret
add
retf
in
push
jo
imul
call
cmps
loope
mov
je
ret
cli
adc
test
mov
mov
not
mov
in
stos
gs
out
dec
stc
push
js
jo
fsub
push
mov
dec
fs
pusha
xchg
sar
adc
jle
mov
push
mov
mov
loop
add
and
mov
enter
lods
mov
mov
ja
xchg
xor
icebp
and
mov
in
pop
adc
mov
adc
push
test
aaa
in
ret
or
add
fwait
inc
xlat
jp
int
jmp
sbb
mov
(bad)
mov
mov
sar
dec
ja
fs
scas
lea
cld
(bad)
rcl
and
lahf
xchg
leave
int3
fcomp
jno
in
inc
stc
in
inc
lea
cs
xchg
outs
nop
mov
sub
(bad)
push
jae
mov
push
xchg
inc
(bad)
xor
scas
xchg
and
push
or
aad
add
push
in
mov
mov
push
xor
sub
xlat
in
fstp
jmp
and
xor
loope
push
aad
sub
fucomip
cld
fdivrp
push
fcom
cdq
or
pushf
(bad)
enter
jns
std
lock
sbb
jmp
ret
arpl
adc
ret
adc
cmp
or
pushf
push
call
push
adc
bound
ficom
push
gs
cmp
jle
cmp
pop
(bad)
push
jecxz
icebp
fdivr
or
adc
adc
ja
ss
(bad)
push
(bad)
mov
jns
(bad)
fstp
mov
fisub
adc
gs
in
fadd
ja
in
call
xchg
repz
inc
mov
or
dec
(bad)
jo
ret
js
push
mov
aam
jae
test
test
push
mov
call
aas
lods
mov
loope
xchg
movs
movs
fistp
loop
dec
cmp
mov
jmp
xchg
mov
add
sahf
repz
jne
sbb
loopne
mov
push
mov
sbb
xchg
mov
adc
push
(bad)
mov
test
neg
cmp
xchg
dec
stc
pop
int
stos
ja
das
pop
cwde
fnstsw
cdq
mov
and
das
cwde
cmp
dec
pop
dec
sub
leave
lea
rcr
jmp
dec
mov
or
mov
push
dec
loope
fistp
dec
pop
cmc
mov
rol
pop
cli
mov
and
or
pop
dec
ss
xor
call
cvtdq2ps
push
push
iret
sbb
push
push
cmps
ins
mov
dec
inc
icebp
cmps
inc
push
(bad)
shl
xor
jmp
push
leave
int
loopne
jb
mov
jge
inc
add
cdq
ins
cmp
cmc
add
xchg
in
js
cwde
or
(bad)
mov
dec
lock
push
(bad)
mov
icebp
dec
inc
out
fistp
dec
fistp
jb
pusha
jecxz
popa
add
ins
mov
adc
jb
and
dec
dec
xor
ja
gs
addr16
mov
mov
mov
dec
out
fcomp
jmp
aad
dec
retf
inc
pop
lea
(bad)
pop
sbb
jo
mov
aas
inc
out
out
xlat
es
cmp
push
ret
dec
gs
push
nop
test
ins
in
cmps
push
test
or
aad
fcom
jg
lods
dec
cld
arpl
fldcw
push
jo
ins
pop
sar
mov
xchg
jns
int
ds
xchg
push
mov
jnp
jge
inc
mov
call
dec
xor
fs
or
sbb
pop
and
imul
mov
nop
cmp
data16
mov
shl
vmwrite
and
or
xor
xchg
out
push
call
imul
pop
add
(bad)
xchg
dec
mov
push
jmp
mov
loope
mov
ror
mov
mov
ds
push
pop
arpl
or
push
mov
jle
hlt
jle
xor
not
cdq
stos
inc
shl
mov
mov
mov
mov
es
mov
lahf
and
dec
ret
out
adc
xlat
mov
inc
adc
cmps
div
or
int3
iret
jae
mov
aaa
rcr
mov
mov
call
out
in
mov
adc
ficomp
loope
mov
and
push
int
jns
push
inc
jmp
sub
leave
sbb
stc
ins
and
in
pop
dec
mov
mov
pushf
in
xor
mov
jmp
rcl
xchg
imul
cmp
add
push
ja
mov
mov
in
shl
cmp
or
cmp
mov
scas
xor
sahf
add
jmp
out
add
aam
jnp
push
inc
push
push
add
add
push
icebp
mov
movhps
repnz
and
push
jbe
lods
push
adc
adc
or
cmp
outs
sub
adc
aad
ret
nop
lahf
sub
repz
push
dec
(bad)
jne
imul
jge
imul
iret
add
inc
ret
adc
repnz
inc
ss
push
jne
mov
jge
cld
lock
jg
aad
js
add
and
or
ss
dec
xor
test
mov
out
dec
pop
pop
sbb
(bad)
pop
add
and
fs
dec
mov
cld
fistp
imul
(bad)
fidivr
(bad)
mov
lods
sbb
add
and
fild
mov
inc
sbb
repz
push
test
push
lahf
ret
xor
cmp
xor
add
stos
dec
mov
mov
call
in
pop
xchg
add
dec
aad
stc
test
add
sti
ins
mov
dec
xchg
inc
ds
das
cmps
icebp
lods
in
add
jecxz
cwde
es
push
icebp
cmp
add
arpl
jl
fisttp
int
(bad)
jno
test
cmp
data16
cdq
inc
jb
inc
mov
int3
cmc
mov
ins
jge
dec
test
cmp
push
std
add
sbb
xchg
pop
xchg
add
push
call
cmps
push
(bad)
xchg
fcmovu
test
jp
add
call
std
jl
cmp
xchg
(bad)
fldcw
jb
stos
sub
or
retf
lods
lea
mov
mov
cmp
pop
pop
imul
cmc
hlt
aam
ret
mov
ins
cmova
pop
mov
imul
ds
ins
jo
push
and
xchg
adc
pop
pop
or
dec
xor
mov
ja
mov
xchg
ret
and
or
and
ficomp
ret
mov
adc
pop
aaa
adc
mov
dec
sbb
jo
xor
xchg
cmc
mov
add
sub
xchg
fild
mov
call
mov
mov
or
mov
or
loopne
daa
add
cli
cwde
push
shl
in
outs
ins
mov
or
aas
sti
sub
push
push
hlt
ds
mov
test
push
cmp
xor
cmp
enter
retf
jmp
sub
jle
jl
add
lea
and
vdivss
or
retf
push
ret
js
ror
pop
mov
push
sbb
dec
mov
dec
sbb
pushf
sbb
push
iret
ficom
test
dec
pop
adc
pop
dec
retf
js
lods
fsubr
lea
(bad)
movs
sbb
sbb
mov
mov
out
jecxz
mov
adc
xor
push
lods
sub
es
mov
and
push
jo
dec
push
js
mov
mov
test
jae
nop
mov
sti
lock
scas
push
clc
fnstcw
xlat
and
jp
cld
pop
mov
js
and
xchg
sti
or
adc
shr
adc
mov
icebp
mov
inc
mov
loope
push
movs
idiv
popa
mov
call
rcr
jnp
rcl
mov
sub
les
sbb
shrd
daa
sti
adc
xchg
inc
xor
mov
mov
push
inc
cmp
mov
aas
xchg
xchg
clc
jns
(bad)
dec
ss
aas
mov
retf
retf
jb
mov
jge
mov
sub
and
jmp
push
mov
add
dec
mov
stos
popa
pop
sbb
push
push
fst
cdq
add
jge
sbb
mov
pop
pop
sub
xor
adc
scas
inc
rcr
jns
add
dec
bound
adc
mov
mov
adc
das
and
stos
jg
(bad)
jo
mov
je
icebp
dec
gs
cs
add
popf
inc
mov
rcl
icebp
dec
push
retf
mov
xor
pop
mov
push
sbb
push
pusha
arpl
mov
pop
mov
in
out
(bad)
(bad)
xchg
loopne
push
inc
xor
push
shl
cmp
scas
mov
cmp
pop
cmp
movd
xchg
fwait
cmp
ja
ds
push
add
and
lea
sahf
add
adc
push
pop
(bad)
and
(bad)
or
dec
jmp
in
lock
fdiv
pusha
mov
fwait
pop
int
jne
nop
outs
adc
jne
adc
cmp
stc
test
and
int3
fist
les
out
ret
das
out
jmp
dec
clc
inc
(bad)
fimul
mov
mov
shr
push
loope
fwait
stos
mov
popa
stos
inc
jmp
push
adc
(bad)
stos
xor
add
lds
and
dec
and
sbb
cs
bound
push
fcmovnu
popf
mov
mov
lods
cmc
mov
call
scas
fdivp
push
(bad)
xchg
mov
pop
push
push
aaa
mov
outs
ins
outs
jle
test
pop
lods
push
jecxz
int
in
and
pop
aam
call
pop
leave
bnd
cmc
xchg
add
fild
dec
add
mov
pop
mov
out
xchg
fmul
push
mov
mov
test
fdivr
jmp
pop
and
add
pop
dec
iret
(bad)
fs
cs
xor
hlt
xchg
sbb
push
push
sub
clc
jo
mov
dec
sar
mov
jnp
pop
movs
(bad)
mov
(bad)
xor
mov
dec
out
ret
inc
loop
jbe
je
lea
pop
push
sbb
cmc
retf
out
lahf
mov
jg
popf
mov
ret
outs
adc
jmp
mov
lods
lds
fs
ja
dec
rcr
mov
xlat
push
jno
and
or
(bad)
dec
test
out
aam
mov
cld
shr
cmp
jb
imul
bound
jmp
imul
or
retf
push
push
push
adc
in
fdiv
jno
das
sbb
nop
clc
scas
mov
lods
xchg
mov
jle
cmp
imul
pushf
push
shr
push
xchg
jg
test
mov
cdq
pusha
test
retf
sti
jno
sub
push
ret
jbe
retf
test
cmc
and
xor
xlat
xchg
sbb
aam
xchg
cwde
pop
fisub
pushf
dec
int
mov
(bad)
sub
fiadd
xor
xlat
and
xchg
les
cmp
xchg
adc
cmp
aad
cmps
clc
mov
out
jecxz
push
in
or
(bad)
out
and
ins
jp
into
mov
and
rcr
or
mov
stc
push
mov
mov
xchg
xlat
mov
jb
cmp
es
fldcw
adc
or
sbb
in
in
push
mov
hlt
les
mov
push
cmp
or
cmc
fwait
outs
ins
sub
popf
add
(bad)
rcl
xchg
mov
pop
sar
pop
dec
out
mov
and
cdq
loope
and
ds
lods
sbb
popf
push
xchg
fdiv
sbb
retf
clc
movs
jb
stos
add
fild
push
std
push
popf
jmp
mov
xor
or
xchg
and
in
shr
dec
inc
enter
jg
or
outs
sub
pop
movs
sti
stos
and
shr
cmp
add
rol
mov
pop
jo
push
mov
push
or
pop
fwait
inc
mov
imul
pop
mov
ret
cmp
jle
popf
mov
out
in
cmp
pop
jmp
and
xchg
in
retf
sbb
ror
pushf
lods
and
(bad)
adc
sbb
mov
clc
mov
(bad)
and
out
inc
jnp
xor
sbb
in
sub
inc
icebp
jae
stc
push
xchg
div
xor
sub
cli
cmc
jnp
mov
mov
out
pop
add
inc
mov
iret
xchg
jge
fsub
outs
dec
jg
loope
jnp
test
stc
shr
mov
in
std
loope
rcr
call
stos
inc
jmp
jle
shl
arpl
pop
jp
mov
or
aaa
xor
mov
pop
and
jb
xchg
or
imul
pop
xor
sub
mov
in
xor
mov
loope
sbb
stos
(bad)
mov
jge
mov
gs
cmps
mov
xor
(bad)
cmp
sub
pop
scas
hlt
jno
mov
xchg
adc
cmc
fisttp
jle
pusha
ss
shr
mov
jmp
aam
mov
(bad)
mov
dec
mov
jne
out
pop
fdivr
mov
popf
neg
pop
lock
dec
shl
adc
pop
shr
and
sbb
in
pop
jae
pop
ins
dec
push
inc
imul
jl
loop
pop
inc
sbb
push
rcr
test
sub
(bad)
mov
mov
sub
or
dec
je
mov
dec
jae
push
fwait
fwait
push
dec
shl
xchg
movs
xchg
mov
mov
xor
mov
test
neg
jle
add
push
retf
sbb
(bad)
ins
in
aad
mov
clc
jne
cld
dec
ins
mov
shl
rep
pop
jns
aas
adc
pushf
sub
rol
mov
adc
loopne
dec
ret
and
imul
jmp
pop
bound
call
stos
lds
(bad)
frstor
mov
lahf
or
inc
jne
fldcw
xchg
in
cmp
shl
cmp
nop
pop
or
aaa
shl
cld
jl
shr
push
in
push
add
mov
imul
jl
movs
sub
xchg
xchg
fiadd
push
clc
xor
jnp
cmp
xor
mov
retf
sbb
pop
mov
test
sbb
(bad)
push
into
cli
in
dec
or
dec
dec
(bad)
and
lock
pop
fs
cwde
push
adc
scas
sub
fst
or
scas
pop
sti
stos
dec
test
sub
mov
cmp
call
jb
stos
adc
mov
pushf
mov
(bad)
data16
imul
push
mov
int3
add
xlat
mov
mov
jae
xchg
xchg
pop
jnp
cld
jae
mov
jbe
loopne
jmp
inc
(bad)
call
int
lock
jo
xor
fisttp
adc
iret
jmp
cmp
push
loope
mov
jmp
aaa
adc
sub
and
ret
jl
mov
mov
je
xlat
add
shl
sbb
or
or
das
lock
adc
sub
test
xchg
fisub
xor
hlt
jmp
out
push
cld
add
test
jp
hlt
pusha
arpl
cmp
movs
mov
pop
ror
jge
cmp
adc
and
adc
out
sbb
xor
mov
int3
and
out
push
mov
mov
fadd
jnp
loop
pop
fistp
popa
push
ins
add
fsub
ret
jecxz
mov
push
jne
pop
rcl
das
push
pop
lahf
adc
cdq
mov
in
(bad)
les
mov
test
inc
mov
stc
lahf
retf
jno
xchg
mov
lea
or
stc
fwait
mov
mov
jp
scas
adc
cmps
pop
add
push
(bad)
mov
sub
xor
pop
dec
add
mov
xor
aas
call
cmps
repnz
call
outs
ins
lds
rol
fiadd
xor
cwde
mov
push
pop
pop
mov
std
scas
inc
inc
rcr
mov
call
sbb
inc
call
sub
or
jne
jnp
cwde
or
dec
cmp
jmp
stos
push
in
push
int
mov
cmp
rcr
and
pushf
mov
or
jbe
adc
inc
dec
and
pop
lds
fisubr
nop
cmp
cdq
or
aam
and
pop
cmc
sub
call
pop
fild
lahf
jno
aam
or
and
or
mov
adc
ds
push
mov
loop
adc
jmp
popf
fwait
in
xchg
jno
xor
sbb
inc
fwait
addr16
fstp
sub
(bad)
xlat
pop
fwait
inc
jp
cmp
(bad)
pop
iret
fcmove
xor
mov
stc
hlt
and
jne
enter
push
inc
test
cmps
pop
sbb
div
mov
lods
dec
je
or
in
and
(bad)
xor
and
enter
int3
fucomip
cmps
lods
sub
pop
fsub
dec
bound
mov
mov
lods
es
mov
sub
push
xchg
sub
mov
adc
in
jp
pop
push
dec
cmps
sub
lahf
jge
cmps
add
cmp
pop
mov
mov
lahf
bound
xor
in
mov
sbb
add
dec
dec
dec
xor
popf
ret
sbb
loop
dec
aaa
mul
fwait
mov
lahf
aas
mov
mov
in
xchg
mov
pop
sbb
cmp
pop
jns
cmp
sbb
test
loope
add
add
jle
outs
out
sbb
cld
xchg
dec
outs
fild
and
mov
mov
mov
int3
xor
mov
jbe
loope
(bad)
cmp
add
lahf
dec
push
push
lds
jmp
out
ffreep
sbb
mov
jmp
and
cs
sbb
(bad)
retf
mov
xor
in
xchg
jmp
cmps
mov
push
pop
test
xchg
xor
lea
imul
or
add
sbb
lds
dec
sbb
mov
push
mov
add
aam
sub
cmp
lahf
outs
or
iret
jns
cld
inc
cmp
fisubr
mov
pop
stc
cmp
out
pop
retf
jae
pop
outs
ficom
fcmovb
push
mov
dec
mov
cmp
jp
movs
mov
cmp
out
jmp
pop
pop
inc
mov
add
cmp
icebp
mov
xchg
pusha
mov
iret
inc
and
mov
fnstcw
fimul
add
jb
mov
and
mov
jg
jmp
push
dec
pop
arpl
aas
cmc
add
jmp
(bad)
test
cmc
sub
dec
mov
(bad)
in
shr
lahf
add
xchg
(bad)
and
clc
cmp
jae
inc
dec
xor
add
sar
icebp
sub
xchg
jnp
xchg
mov
stos
xor
cld
inc
or
mov
mov
adc
add
lods
cmp
sbb
pop
shl
je
data16
(bad)
cli
push
mov
inc
add
lea
sbb
pop
or
or
mov
fiadd
pop
push
push
movs
xlat
(bad)
dec
mov
xor
add
lahf
ins
jecxz
pop
(bad)
ret
aas
movsx
scas
out
and
imul
pop
loopne
push
mov
cs
outs
jg
push
jmp
rcl
cmps
cmps
ds
cmp
add
cdq
scas
stos
fisttp
push
lods
pop
lock
or
sub
es
bound
jns
stos
hlt
mov
pop
iret
or
fcmovne
imul
sub
cdq
pop
mov
xchg
or
stos
outs
enter
aam
mov
ins
mov
mov
adc
pop
pop
add
mov
fist
sub
cmp
xor
in
jns
dec
js
iret
lods
jnp
sbb
pop
sbb
jbe
and
inc
sbb
mov
push
hlt
jmp
retf
fnstenv
push
push
or
sbb
xchg
mov
jecxz
test
popa
lahf
xor
(bad)
(bad)
and
adc
sbb
or
push
and
adc
scas
mov
xor
iret
sub
jp
xor
jno
or
outs
push
mov
lea
sub
nop
es
push
push
mov
(bad)
push
sbb
imul
in
mov
jg
xor
xor
pusha
pushf
dec
sub
fwait
push
fild
pop
sbb
pop
ret
pop
jmp
movs
cmp
stos
stc
mov
nop
(bad)
dec
ins
sub
or
movs
sub
enter
push
pusha
push
mov
push
jne
jb
ret
adc
jmp
aas
lock
xor
mov
lods
sbb
fcom
enter
ins
xchg
mov
icebp
adc
pop
stos
loop
jns
cmp
mov
out
es
xor
xchg
not
mov
es
sbb
xchg
out
add
repnz
cli
xchg
inc
retf
idiv
int3
mov
jbe
mov
push
int
pop
lds
push
dec
dec
into
add
mov
sub
je
ins
fstp
sbb
xor
xchg
jge
fcomp
xchg
inc
pop
bound
je
test
mov
jno
mov
pop
loop
(bad)
xor
imul
outs
sub
cs
push
fimul
sbb
lods
out
xchg
sti
inc
movs
xchg
nop
xchg
aad
rol
xchg
jmp
out
rol
outs
xchg
mov
(bad)
es
cdq
push
(bad)
jne
lahf
push
jmp
push
add
and
pop
mov
sub
push
ins
mov
pop
mov
xor
ret
loop
call
data16
and
xchg
gs
inc
retf
in
push
xor
inc
fstp
mov
adc
xlat
mov
mov
push
leave
mov
bound
aad
sti
repz
xor
test
pop
int
push
into
hlt
pop
or
outs
jns
inc
sbb
adc
jno
fs
dec
or
dec
jp
ret
mov
xor
add
dec
ret
popa
or
push
fldcw
xor
cwde
or
pop
pop
(bad)
pop
mov
scas
and
lds
push
ins
int
mov
mov
inc
jmp
cdq
or
push
or
xor
stos
leave
mov
repz
sub
enter
add
sub
clc
dec
mov
shr
mov
mov
dec
je
pusha
ret
repnz
jmp
loopne
and
cmp
loope
cmc
mov
ret
shl
or
push
retf
or
pushf
and
or
xchg
adc
ins
loope
fst
push
in
test
inc
daa
into
push
out
or
rol
pop
sbb
jae
fld
xor
and
js
xchg
fist
jnp
and
push
dec
or
sub
iret
aam
add
ss
inc
out
push
sub
pop
push
es
js
xchg
pop
sub
arpl
mov
ins
xchg
sub
or
xchg
adc
cld
jmp
(bad)
ss
push
out
dec
(bad)
(bad)
jmp
mov
push
into
mov
dec
mov
inc
mov
mov
das
mov
mov
adc
cli
push
into
mov
(bad)
outs
dec
inc
inc
ror
popf
mov
sub
push
ss
jmp
or
mov
fsub
dec
inc
pusha
mov
neg
ja
dec
rol
std
pop
movs
xchg
lods
mov
and
xor
xor
xchg
mov
add
das
add
or
pop
adc
jbe
fistp
scas
mov
mov
and
jge
sub
xor
repz
pushf
scas
xor
popf
repnz
xlat
fwait
popf
jle
enter
pop
add
xor
adc
mov
push
sbb
adc
push
pop
sub
mov
push
outs
(bad)
mov
jl
push
lock
pop
scas
test
mov
mov
cmp
scas
clc
xor
popa
fild
(bad)
gs
(bad)
popa
(bad)
or
repnz
and
push
xor
pop
pop
jae
sub
pop
shl
jns
(bad)
cmc
lock
push
sbb
cdq
mov
pushf
loopne
test
(bad)
in
test
push
mov
ror
scas
vpsrlw
les
xchg
push
(bad)
xchg
push
or
outs
test
fs
mov
stos
fbld
mov
ins
mov
cmp
dec
dec
jno
jp
cmp
xchg
dec
out
enter
pop
inc
xchg
add
stos
sub
in
push
mov
sbb
pop
clc
aaa
sbb
pop
ss
int
pop
es
jns
out
dec
jmp
mov
aad
cmp
mov
sub
sub
(bad)
loop
(bad)
mov
adc
(bad)
sub
pop
fadd
sub
je
out
repz
ss
sbb
or
lds
add
pop
(bad)
dec
(bad)
xchg
push
fwait
in
or
jle
movs
jp
inc
push
add
ror
pop
xchg
lahf
mov
rol
xchg
dec
ins
mov
in
cmp
sub
popa
mov
pop
lock
ins
dec
xchg
pusha
add
pop
mov
pop
mov
inc
(bad)
push
add
test
or
mov
adc
and
jge
jmp
cmp
test
sbb
inc
mov
scas
sbb
jno
mov
clc
xchg
mov
imul
cmp
inc
inc
loope
iret
add
leave
jno
push
aam
push
cmp
cmp
mov
pop
jle
pop
ficom
lahf
mov
retf
push
xor
push
cmps
(bad)
pushf
dec
or
cmp
in
loope
cwde
cmp
or
int
cmp
sbb
int
jnp
xchg
out
repz
add
xchg
sti
dec
push
mov
arpl
sti
mov
mov
movs
les
out
jb
sub
cmp
bound
ins
adc
jp
mov
sub
popa
push
scas
enter
xor
xchg
xor
inc
in
mov
xor
aad
shl
dec
pop
ins
les
ret
test
inc
out
enter
aaa
mov
outs
xor
xchg
out
aas
ins
les
aad
(bad)
inc
sbb
leave
and
ins
add
mov
mov
and
(bad)
sub
imul
fst
stc
cmp
fldenv
jmp
je
arpl
out
inc
cdq
push
outs
xor
mov
mov
ins
fs
mov
mov
jno
jno
(bad)
jmp
scas
bound
mov
sub
sub
dec
loope
push
or
inc
mov
push
repz
cld
pop
(bad)
hlt
inc
movs
xchg
mov
mov
add
mov
iret
dec
rcr
inc
inc
lods
test
or
push
or
shr
inc
jmp
push
ret
pushf
aas
jns
mov
ror
dec
imul
addr16
mov
inc
gs
adc
loop
mov
cli
add
mov
cmp
inc
push
(bad)
popa
mov
inc
dec
rcr
cmp
stos
rol
(bad)
repnz
cdq
mov
movsx
outs
hlt
pop
or
push
cmp
xor
dec
(bad)
call
cmp
and
imul
mov
xchg
test
fwait
cmp
mov
mov
xor
(bad)
not
push
jecxz
es
xor
fdiv
pop
fidivr
pop
out
jmp
lds
xchg
jp
retf
lds
and
push
shl
xor
jmp
loope
js
call
push
fs
iret
mov
push
outs
sbb
xchg
daa
pop
jp
aad
jmp
and
push
mov
xchg
pop
xchg
mov
push
cmp
push
ins
mov
dec
and
test
mov
pop
(bad)
ins
or
sbb
out
fsub
push
jnp
jge
sbb
stos
movs
lea
ret
cli
rol
test
push
lods
mov
xor
dec
(bad)
push
mov
sahf
adc
shr
xchg
ins
add
jp
cmc
push
inc
enter
call
rol
pop
dec
leave
xchg
xchg
lods
sbb
mov
add
cmpxchg
pushf
sub
cs
jns
shr
cli
movs
dec
out
jno
xor
cmp
xchg
xchg
xor
mov
adc
cmp
pop
xchg
mov
loopne
in
stos
xchg
(bad)
mov
pop
pop
xchg
mov
mov
sti
jne
loope
cmp
xor
std
retf
stos
jnp
fistp
aaa
ins
in
xor
cmp
jo
xchg
cmc
sahf
cmp
gs
sahf
stc
dec
cmp
mov
add
and
lahf
push
jmp
stos
int3
(bad)
(bad)
fist
jl
cli
adc
sbb
outs
xor
and
mov
push
cwde
dec
jo
adc
cmc
stos
jg
push
cmp
call
sub
ja
mov
adc
retf
out
jnp
enter
add
or
adc
outs
and
add
movs
sbb
xchg
fbstp
xchg
je
test
push
xchg
scas
inc
loopne
sub
lods
and
push
jl
pop
adc
or
rcr
hlt
cwde
jnp
rcr
rcr
push
push
dec
add
aad
daa
cmp
xor
xchg
mov
mov
loopne
jmp
fld
(bad)
add
push
adc
mov
or
xchg
loop
cmps
lds
sub
mov
mov
jbe
repnz
push
int3
jg
xchg
xor
mov
icebp
cmp
pop
add
add
repnz
in
dec
mov
std
fdiv
ret
and
pop
jle
repnz
sub
jg
pop
mov
pop
sahf
cli
xor
jmp
cdq
xchg
ret
jb
sbb
js
(bad)
call
mov
and
mov
loope
push
into
(bad)
mov
rcl
push
jle
xchg
cmp
imul
js
and
push
mov
(bad)
dec
out
mov
sti
cdq
and
jl
enter
sub
push
and
and
jbe
aad
pop
mov
push
mov
test
pop
mov
aad
sbb
lods
jmp
xchg
fsubp
add
(bad)
and
pop
int3
add
mov
inc
jbe
or
jle
and
outs
sub
pop
inc
icebp
(bad)
lahf
nop
adc
fs
dec
jp
fwait
or
les
fimul
sbb
or
hlt
inc
sbb
int3
and
repz
mov
mov
mov
mov
and
sub
fadd
stc
shr
cmp
aad
les
into
pop
repz
fadd
adc
add
out
adc
out
cmc
pushf
pop
les
int
inc
add
leave
pop
std
jbe
sbb
dec
dec
enter
inc
cld
cmp
push
or
movs
stc
or
imul
add
jmp
aad
cmc
sub
fsub
ja
push
(bad)
arpl
scas
stos
add
js
aaa
fsub
stos
retf
xlat
adc
push
add
in
mov
add
mov
xchg
or
push
(bad)
jmp
loop
adc
movs
sub
loopne
xor
and
xchg
or
push
mov
loope
int
sbb
jae
data16
addr16
dec
int3
xor
sbb
test
add
xchg
push
test
add
in
jne
sbb
or
dec
mov
ins
jno
push
int3
es
ror
mov
fstp
cmc
pusha
xchg
into
mov
sbb
test
stos
push
in
mov
push
sahf
push
push
lods
je
imul
jmp
dec
push
push
mov
or
or
and
xchg
pandn
inc
or
pop
test
in
jae
imul
arpl
lods
mov
mov
cdq
and
push
or
out
push
mov
xor
std
jnp
movs
pop
xchg
(bad)
push
sti
mov
cwde
aaa
cmp
sahf
arpl
imul
push
mov
xor
pop
inc
movd
test
pop
(bad)
(bad)
std
imul
dec
add
int
jle
xchg
hlt
or
out
aaa
mov
call
dec
ret
jo
dec
dec
ins
scas
mov
aam
pop
test
stos
(bad)
adc
daa
(bad)
jecxz
xchg
or
cmp
sub
mov
adc
xor
movs
div
jecxz
lds
xchg
xchg
cdq
movs
stos
popf
xor
dec
stos
pop
sub
sbb
jo
(bad)
cmp
hlt
mov
push
sar
pop
pushf
punpckhdq
pop
icebp
imul
cdq
cmp
and
mov
adc
mov
outs
(bad)
daa
cli
mov
mov
imul
imul
mov
and
lods
out
inc
jb
outs
xchg
push
mov
repnz
push
mov
mov
or
jl
test
mov
fwait
push
mov
cmp
(bad)
arpl
or
fdivr
inc
sbb
lds
and
dec
ret
mov
jl
outs
sub
out
xor
jae
cli
jp
sbb
sbb
lock
movs
retf
mov
pop
fs
mov
in
scas
sbb
dec
inc
test
call
aas
push
mov
in
pop
rcr
and
out
retf
mov
pop
cmp
push
cmp
cmp
push
or
jae
push
cwde
das
hlt
mov
cs
fsub
mov
sti
cmps
add
mov
mov
mov
inc
sub
int3
push
mov
scas
jbe
push
cwde
inc
xchg
adc
(bad)
ret
sub
gs
sbb
pop
aaa
out
sub
leave
lock
int3
push
in
xchg
test
cmp
scas
lock
leave
outs
movs
je
jb
mov
aam
arpl
(bad)
aaa
sub
neg
sbb
sub
mov
mov
test
es
inc
out
daa
jns
pushf
jl
cmps
jecxz
dec
(bad)
repz
add
push
je
sub
pop
loope
mov
lods
jne
inc
xchg
mov
cwde
jg
jg
outs
push
or
int
clc
stos
mov
mov
inc
xor
mov
jecxz
mov
pop
test
not
xor
repz
push
push
sahf
mov
xor
shl
(bad)
rcr
shl
add
inc
cld
mov
fisubr
xchg
in
ret
pop
rol
xchg
mov
ins
sbb
mov
inc
sub
(bad)
cmp
into
cmp
push
jae
xchg
repnz
mov
test
(bad)
fmul
mov
mov
int
pop
popw
sub
dec
mov
add
iret
pop
sub
xchg
inc
ret
div
movs
in
test
add
nop
shr
adc
sub
mov
(bad)
adc
cli
and
sbb
jae
and
ss
push
adc
clc
mov
fwait
and
bound
sub
add
and
sahf
int
jge
cmps
pop
push
or
lahf
enter
fucomp
and
xor
call
inc
mov
mov
mov
add
in
imul
pusha
mov
pop
(bad)
mov
adc
int
adc
mov
pop
mov
jns
imul
and
data16
and
sub
fcmovu
in
xor
cmc
dec
xor
push
imul
mov
iret
mov
cdq
scas
jae
dec
xchg
sub
pop
das
xchg
sbb
inc
pop
stos
mul
dec
jmp
in
outs
inc
cld
pop
push
dec
icebp
nop
and
push
or
adc
jp
imul
sbb
pop
cs
adc
and
gs
psrad
popa
cld
dec
ins
inc
lea
push
das
test
aam
xor
add
push
mov
rcr
pop
and
ins
popa
sbb
pop
(bad)
jb
cwde
pusha
repz
mov
lods
outs
jb
js
mov
or
cmp
jo
cmp
fld
dec
dec
push
out
fucom
test
fidiv
ror
sbb
(bad)
jl
aas
pop
xchg
push
mov
(bad)
stc
test
jae
in
xchg
mov
push
into
sub
out
int
sbb
inc
test
dec
adc
gs
call
lods
in
in
cmps
mov
cmp
retf
arpl
cli
or
in
sbb
mov
adc
sbb
call
fnstsw
inc
test
pop
test
js
push
cmp
pop
lahf
test
inc
inc
stos
enter
push
mov
fmul
push
aas
popa
daa
es
stos
(bad)
jp
sbb
mov
inc
(bad)
xor
adc
or
xor
push
mov
inc
sbb
pop
jp
cmps
cli
(bad)
stc
xor
xchg
cmc
ins
mov
cmc
aad
mov
xor
sub
jnp
jmp
xchg
movs
enter
cmps
sbb
jno
dec
add
jo
popf
sbb
(bad)
cmps
mov
mov
pop
lds
(bad)
lea
ret
mov
push
ins
test
cli
xchg
push
push
mov
jmp
mov
xor
xchg
mov
inc
fdiv
push
push
out
cwde
cmp
test
cwde
jmp
add
jecxz
mov
int
cmps
push
lods
pop
out
retf
push
ss
pop
sub
ficom
cmp
or
shl
inc
push
xor
rol
jnp
inc
inc
nop
dec
dec
mov
push
add
adc
push
mov
imul
add
pop
add
loopne
stc
leave
jnp
mov
repnz
xor
popf
cdq
rcr
retf
inc
add
mov
sub
add
ja
jno
fst
or
clc
jmp
arpl
adc
mov
std
mov
mov
dec
imul
cmp
and
add
and
push
mov
pop
mov
jb
mov
(bad)
fstp
sub
pop
jno
ror
ja
inc
addr16
jle
fstp
jae
(bad)
pop
and
add
push
loopne
loopne
dec
cmp
adc
int3
pop
fwait
stos
mov
cmp
in
adc
or
jmp
(bad)
ret
sub
mov
icebp
adc
cmp
ja
cld
gs
cs
(bad)
sbb
or
inc
sbb
sub
jae
push
dec
arpl
ds
add
lea
mov
cmp
xchg
mov
mov
lock
xor
inc
xor
mov
add
gs
popf
je
stos
clc
cmpxchg
rol
(bad)
mov
stos
femms
hlt
out
cmp
sahf
dec
cli
rol
and
loope
pop
mov
sbb
test
test
xor
jge
repz
mov
pop
in
or
push
retf
sub
push
lds
push
cmp
ss
inc
adc
jbe
pop
mov
outs
les
jmp
pop
or
shl
retf
cmc
adc
pop
and
pop
adc
jle
in
cmp
inc
cli
out
inc
mov
fbld
pop
sbb
ins
push
xor
xor
call
pop
dec
js
mov
inc
out
jecxz
aam
cld
je
xor
sbb
bound
cmp
mov
add
add
iret
inc
pop
xor
inc
xchg
and
and
(bad)
fstp
xor
lds
add
std
lods
inc
icebp
sbb
(bad)
aad
int3
mov
mov
push
mov
dec
pop
fiadd
sub
ds
dec
mov
jle
xchg
shl
leave
pop
push
cmp
sub
and
ins
mov
jnp
xchg
or
xchg
ret
xor
outs
pop
dec
mov
mov
clc
movs
scas
or
pop
sub
arpl
test
pop
add
or
sbb
dec
aam
jne
mov
arpl
pop
cs
cmp
add
(bad)
mov
or
xor
(bad)
lds
mov
data16
mov
jnp
cmp
mov
pop
and
test
xchg
pop
or
fisub
repz
loope
iret
adc
dec
mov
daa
nop
aad
cmps
add
pop
test
cli
cdq
xchg
fcmovbe
ret
jne
sbb
in
pop
test
clc
lds
ret
arpl
push
pusha
pop
mov
add
leave
movs
inc
add
jnp
adc
div
scas
and
lods
(bad)
and
inc
gs
enter
fcmovnb
(bad)
movs
adc
stc
xor
addr16
aam
add
mov
push
adc
pop
mov
icebp
mov
mov
lods
pushf
adc
sbb
adc
movs
(bad)
sar
stc
les
mov
fs
movs
cmc
sbb
fnstenv
shl
mov
in
jo
push
pop
out
sbb
sbb
pop
les
sbb
pop
popa
mov
stos
inc
xor
xchg
or
pop
sti
adc
out
stos
sub
fs
call
jg
adc
ret
rol
inc
leavew
fs
dec
and
xchg
jne
jmp
loop
mov
dec
inc
mov
mov
enter
xor
adc
or
xchg
push
lahf
sahf
dec
mov
mov
adc
popf
cmps
inc
and
xor
ret
and
dec
xchg
mov
std
je
xchg
mov
addr16
push
(bad)
cli
push
imul
ds
shl
int3
push
out
push
sbb
sub
repz
pop
push
xchg
les
pop
cmp
dec
loope
push
outs
ret
fld
sub
and
arpl
je
mov
scas
adc
sbb
shr
xlat
add
or
add
js
cmps
movs
mov
cli
push
jle
pop
adc
xchg
mov
pop
shl
je
clc
(bad)
out
dec
sbb
into
sub
sar
sub
push
enter
sbb
in
mov
std
clc
or
dec
mov
out
xor
lods
jb
popf
sub
push
cli
ret
fabs
idiv
nop
push
jns
aaa
and
jno
pop
std
int3
mov
ret
sub
adc
xchg
rcl
sbb
mov
stos
rol
repnz
mov
mov
inc
mov
jnp
iret
(bad)
sbb
inc
jmp
push
icebp
fisttp
pop
mov
push
mov
out
mov
cmp
bswap
rcl
(bad)
jle
mov
mov
std
hlt
or
dec
(bad)
cld
aad
ss
lock
jmp
xchg
aam
faddp
sbb
daa
add
inc
or
jae
aaa
pop
adc
nop
adc
popa
(bad)
daa
out
inc
(bad)
cmp
jmp
mov
cld
loope
cdq
jo
idiv
scas
shr
or
movs
add
lds
rcl
or
mov
mov
outs
pushf
jae
adc
rcr
retf
stc
push
fst
rol
imul
fst
imul
ret
xchg
mov
ror
out
push
mov
mov
(bad)
jne
cmps
cdq
aaa
ss
ss
dec
es
ror
adc
repz
and
push
das
(bad)
icebp
push
rcl
jbe
fiadd
mov
pusha
ins
or
mov
rol
cmps
aam
and
cdq
popa
dec
mov
aaa
scas
outs
jmp
push
or
dec
sub
mov
jmp
mov
inc
and
dec
inc
mov
jg
lock
xor
sbb
or
jno
cmc
arpl
in
in
push
and
pop
leave
add
fcmovnu
cdq
bound
sub
push
mov
and
dec
out
outs
aam
pop
movs
inc
aad
fldl2e
add
dec
xor
retf
in
mov
push
int
dec
adc
test
lds
adc
mov
scas
sbb
mov
push
or
pop
jbe
pushf
inc
xor
inc
daa
pop
dec
(bad)
retf
mov
ja
cmp
inc
call
or
xor
adc
(bad)
jmp
mov
test
fisttp
pop
(bad)
jmp
inc
ins
mov
cmc
mov
add
adc
push
cdq
mov
adc
dec
icebp
rcr
mov
dec
lds
fild
and
jbe
add
inc
cs
mov
call
push
retf
push
xchg
and
mov
pop
imul
cmp
xor
gs
mov
test
frstor
push
rcr
inc
sub
leave
or
mov
(bad)
gs
sbb
retf
jmp
test
push
hlt
out
add
fwait
and
out
mov
in
fnstcw
jo
xlat
add
rol
ins
lahf
idiv
outs
push
ret
xchg
icebp
imul
adc
lahf
sbb
into
push
xor
out
sbb
dec
call
clc
xor
sub
dec
mov
rcr
cmp
and
sub
loope
push
daa
call
inc
add
ja
clc
(bad)
aaa
in
adc
add
ins
mov
mov
hlt
scas
push
dec
sbb
ret
aaa
gs
mov
mov
cmps
das
mov
xchg
les
mov
or
xchg
cld
scas
add
and
add
pop
sbb
sub
retf
enter
and
ret
mov
or
adc
inc
bound
mov
jne
fstp
loopne
add
mov
dec
xchg
cmp
xchg
in
mov
jmp
loope
mov
sbb
nop
sti
cmc
repnz
fist
into
mov
leave
cmc
mov
cmp
shl
(bad)
call
dec
not
push
pop
push
cmp
push
add
mov
or
mov
adc
sbb
cld
xchg
(bad)
sbb
jp
sbb
pop
fisub
out
ds
cld
aas
in
test
mov
pop
sbb
icebp
iret
test
cwde
fisub
jo
pop
arpl
inc
shl
stos
cmps
bound
add
adc
sbb
add
scas
mov
pop
pop
jbe
inc
aad
rcl
jne
jbe
fwait
jae
sbb
push
cmps
pop
push
jb
in
into
sbb
out
loopne
push
xlat
lock
mov
adc
xor
push
ins
pop
stos
jno
mov
(bad)
adc
pushf
(bad)
cmps
adc
(bad)
dec
cmp
dec
xchg
imul
sbb
ds
push
adc
ret
xor
mov
and
sbb
leave
or
stc
cmp
jns
sub
push
push
jge
dec
lds
xchg
movs
lahf
cmp
(bad)
dec
mov
xor
cmp
fiadd
inc
cmp
leave
and
inc
xor
jae
sub
scas
push
iret
scas
dec
push
popa
mov
dec
test
les
pop
sub
or
cwde
outs
jge
test
sbb
loop
fcom
mov
lods
rol
dec
in
xchg
rol
dec
ins
ja
and
retf
sti
cs
scas
inc
psubd
int3
cmps
dec
xchg
adc
arpl
dec
mov
js
mov
fs
out
adc
inc
daa
add
std
mov
cwde
aad
out
mov
jecxz
xchg
xchg
sub
inc
pop
dec
enter
push
mov
adc
jecxz
push
cmps
xchg
(bad)
fisubr
adc
clc
mov
xchg
jno
cmps
stos
out
sub
sub
scas
mov
xor
xor
mov
xchg
dec
test
adc
lock
mov
inc
cmp
inc
inc
int
cld
mov
ret
femms
test
push
mov
popf
mov
cs
imul
into
mov
or
ficomp
xor
stos
push
inc
cmps
imul
clc
aaa
mov
(bad)
movs
stc
cmps
push
pop
sahf
retf
bound
fwait
cwde
int3
xor
push
or
mov
out
leave
push
cld
test
popa
cmp
cmp
movs
in
push
popa
loopne
sub
ret
pop
pop
push
lods
adc
loopne
mov
dec
pushf
sbb
mov
add
pop
adc
push
or
call
adc
pop
xchg
js
mov
inc
add
es
out
in
popf
ins
mov
icebp
xchg
lods
and
dec
add
push
pop
mov
call
mov
popa
lods
ins
cdq
test
(bad)
and
pop
into
scas
ins
shr
nop
outs
cld
leave
pop
push
add
fs
add
mov
outs
movs
fsubr
or
xchg
ds
pop
jl
scas
and
cmps
jb
ret
mov
popa
sub
mov
push
inc
add
out
shl
adc
push
sub
inc
add
test
inc
jg
lods
shl
icebp
and
mov
mov
jae
cmp
xchg
test
push
int
jge
pushf
fucompp
mov
jmp
sahf
js
ja
dec
(bad)
mov
adc
enter
mov
xchg
out
sbb
xchg
inc
xchg
jae
pop
sub
lds
lods
std
ins
je
cld
int3
push
jnp
mov
dec
mov
jb
mov
popf
outs
iret
push
nop
lahf
ret
fsub
repz
mov
mov
icebp
or
shl
adc
cmp
std
rcr
xchg
pop
in
faddp
or
cli
and
sbb
inc
mov
in
pop
mov
jmp
xchg
pop
outs
ret
sbb
mov
pop
push
or
adc
or
cmp
xor
cmc
sub
test
pop
jg
call
sahf
scas
cmp
or
pusha
popf
pop
out
cmc
adc
sbb
fsubr
push
sbb
push
jno
xchg
bound
jnp
ja
jl
lods
add
xchg
xchg
inc
gs
retf
pop
adc
add
sub
cmp
fadd
popf
retf
loope
pop
pop
(bad)
stos
and
imul
fisubr
adc
es
in
mov
inc
cmc
es
mov
and
cmp
mov
je
aad
cld
and
jnp
and
loop
sbb
jg
sbb
dec
scas
mov
mov
imul
clc
stos
and
mov
lods
mov
(bad)
jns
ja
in
push
inc
adc
push
in
mov
pop
loopne
jp
mov
repz
add
pop
mov
adc
rol
adc
hlt
mov
imul
pop
dec
sbb
js
lock
inc
sbb
(bad)
fucomi
mov
sub
push
clc
arpl
sub
xchg
mov
(bad)
jne
test
repz
outs
xor
cmp
mov
loope
xchg
test
sbb
push
(bad)
push
mov
loopne
mov
or
out
fisttp
call
jne
dec
and
push
(bad)
fdivr
call
and
jnp
out
cmp
cmps
call
movs
jnp
in
mov
jns
mov
ret
test
sbb
xchg
or
cmp
fwait
xchg
jmp
gs
push
popf
mov
pop
jno
ret
xchg
(bad)
gs
cdq
fdiv
les
bswap
mov
enter
push
pushf
stos
nop
mov
sbb
imul
lods
fs
lahf
adc
push
ja
xchg
shr
jno
les
pop
ds
lds
xchg
popa
inc
fisubr
sub
mov
or
shr
lods
fs
ret
or
pop
xchg
jl
hlt
push
inc
fucom
int3
add
dec
xchg
cmp
or
das
jno
out
mov
sub
mov
ror
push
cmp
test
clc
dec
cmp
in
or
retf
pop
outs
fdiv
pop
int
sub
mov
(bad)
shl
and
fwait
out
xchg
push
mov
out
dec
xchg
(bad)
fst
or
adc
shl
or
shr
or
xor
push
lahf
xor
out
aad
mov
lea
mov
jg
pop
cs
jl
sub
ds
rol
xchg
out
cld
dec
(bad)
xor
(bad)
retf
addr16
out
inc
or
push
mov
popf
in
in
inc
ror
mov
icebp
scas
test
pop
popf
add
xchg
pusha
xor
loope
adc
loopne
sub
hlt
(bad)
jmp
mov
or
xchg
xchg
imul
stos
mov
das
in
add
shr
int3
ret
loope
adc
adc
dec
sbb
fnsave
mov
test
xchg
loope
add
sub
xchg
ftst
push
aaa
xchg
fidivr
hlt
mov
fs
sbb
lods
xchg
hlt
es
push
inc
sbb
cmp
jno
or
aas
shr
cmp
neg
xchg
or
xor
in
mov
jle
data16
iret
mov
repz
pop
repnz
pop
xchg
jl
dec
lahf
jo
xchg
test
stos
loop
outs
aas
mov
out
xchg
cmp
ret
fs
mov
ret
out
mov
push
mov
mov
in
push
mov
ret
adc
repz
cmp
jb
addr16
pop
xchg
mov
sbb
dec
inc
jmp
jg
clc
movs
addr16
ds
repz
cdq
ja
and
xor
adc
cmps
pop
nop
cdq
cmp
xchg
rol
(bad)
aad
addr16
push
jmp
pop
nop
jmp
test
iret
cmp
mov
xchg
scas
jb
jae
xchg
xchg
ins
mov
adc
pop
push
pop
ror
out
ins
cmp
mov
clc
jns
loopne
je
addr16
mov
movs
pop
(bad)
retf
jle
sub
idiv
xor
sub
push
jbe
pop
mov
inc
retf
or
das
ins
mov
daa
fwait
stc
jo
leave
out
sub
pop
enter
mov
arpl
rdmsr
jne
es
mov
jns
std
ja
sbb
jmp
jno
out
cmp
cld
mov
or
and
fwait
shl
pop
dec
cmp
fnstsw
call
sub
mov
dec
out
xchg
mov
jmp
pop
sub
(bad)
cli
neg
push
or
lea
xchg
ret
push
iret
cmp
mov
std
test
inc
jmp
jmp
aaa
add
cmp
pusha
or
inc
cld
movs
mov
sti
cld
sub
int3
enter
jmp
rcl
(bad)
loop
sub
aam
(bad)
mov
ret
in
mov
aad
pop
(bad)
and
dec
popa
mov
inc
jmp
or
loop
fisttp
js
out
and
adc
dec
stos
mov
js
push
call
pop
pusha
lods
sbb
mov
aam
jecxz
xor
jne
sahf
cs
dec
aaa
dec
jo
icebp
cmps
dec
and
inc
adc
jb
mov
sub
repz
sahf
je
or
movs
nop
movs
xchg
jmp
leave
jnp
ss
cmp
mov
pop
cmc
mov
lea
push
sbb
cmps
mov
shl
mov
data16
xchg
ja
aas
add
(bad)
pop
inc
adc
cli
fild
cld
loopne
loop
xor
repz
pop
cld
xor
mov
inc
cwde
into
test
rcl
(bad)
mov
sub
movs
aad
je
cmp
aam
push
mov
sub
fidiv
mov
test
inc
cmp
int3
imul
push
ins
scas
xchg
lea
shl
mov
pop
in
es
jmp
cmp
jb
xor
shl
stc
in
movs
or
push
les
adc
mov
outs
shl
mov
je
mov
inc
pop
ds
pop
add
and
jae
push
push
pusha
xor
sbb
push
pop
lods
sbb
pop
push
loope
or
mov
enter
push
cmp
xor
add
movs
push
(bad)
mov
(bad)
mul
retf
fdivr
cmps
pop
mov
push
mov
sub
jnp
push
rcr
cld
lods
sub
add
cmp
pop
mov
push
push
repz
das
push
sub
sbb
inc
(bad)
jns
aaa
fwait
shl
fisttp
xor
inc
mov
cmp
(bad)
jb
imul
outs
ds
dec
nop
nop
dec
aad
ret
test
inc
(bad)
push
mov
ss
mov
pushf
imul
fs
jno
(bad)
daa
or
xlat
fimul
lds
cmp
stos
loope
addr16
xchg
repnz
mov
cmp
add
sub
sub
aam
daa
jne
cmp
xchg
cmp
cwde
fs
jne
out
sbb
xor
test
push
out
hlt
push
test
aam
test
jmp
dec
mov
das
sbb
add
push
sbb
test
sub
sbb
pop
in
adc
movs
and
cmp
call
in
sub
sub
push
pcmpgtb
loop
mov
dec
add
iret
fld
mov
fs
add
push
jecxz
xlat
jp
cdq
and
pushf
add
outs
movs
pop
mov
mov
xor
push
daa
adc
(bad)
fcom
pop
lahf
icebp
(bad)
mov
stos
xchg
xchg
(bad)
movs
jge
mov
loopne
cli
xchg
adc
inc
or
ds
daa
add
mov
(bad)
sbb
movs
jne
(bad)
and
mov
cs
int
inc
xchg
jp
pop
les
hlt
inc
fwait
push
pop
in
add
loope
movs
sbb
inc
mov
or
jb
or
loopne
jmp
retf
stos
pusha
dec
shl
and
test
dec
push
addr16
stos
jnp
push
or
mov
outs
sbb
sub
in
add
sbb
mov
out
sub
fstp
arpl
enter
movs
xchg
dec
pushf
fwait
inc
rcr
(bad)
jmp
adc
sar
leave
jle
rcl
aam
sbb
mov
inc
imul
add
stos
(bad)
(bad)
test
xor
popf
(bad)
sbb
test
cmp
push
lahf
stos
fs
lds
int3
sbb
cmc
rol
ins
mov
adc
or
loop
cmp
xchg
movs
outs
mov
fcmovnbe
loope
addr16
mov
lock
pop
fist
xlat
fwait
ds
sub
sti
mov
fwait
pop
adc
call
mov
addr16
and
add
stos
jbe
dec
xor
pop
int
add
xchg
gs
bndstx
out
xchg
in
xchg
pop
sbb
or
mov
ins
clc
cmp
dec
inc
pop
add
hlt
cmps
push
jmp
inc
and
ficomp
add
aas
jmp
shr
inc
pop
cmp
add
push
lds
nop
aad
add
or
aaa
cmp
cmp
popa
mov
jmp
in
cmc
sub
retf
xor
shl
push
pop
adc
cmps
or
fiadd
gs
in
jle
int3
repz
(bad)
mov
sub
add
adc
cmp
push
fs
cmc
mov
adc
call
ficomp
add
pop
pusha
push
out
pop
outs
push
cmps
cld
stc
push
mov
imul
sub
mov
inc
add
out
lds
xor
and
add
adc
cmp
ja
or
test
push
ret
push
jge
add
add
sub
or
stos
dec
push
hlt
test
dec
cmps
adc
(bad)
out
sub
mov
jle
xchg
jl
inc
pop
push
mov
idiv
shr
and
clc
addr16
lods
adc
jns
and
sbb
cmps
mov
call
cmps
fist
test
xor
push
not
xor
xchg
dec
mov
sahf
(bad)
jp
arpl
popa
arpl
bound
xor
dec
xchg
or
rcl
dec
int
cli
inc
outs
push
int
pop
mov
pop
(bad)
push
je
mov
fiadd
rol
pop
dec
add
aad
mov
hlt
cmp
(bad)
adc
movs
xchg
mov
call
add
jecxz
leave
mov
outs
ret
fisub
scas
push
out
pop
dec
bound
enter
inc
mov
add
rcl
xchg
pop
inc
lods
cmp
add
and
xor
xor
das
jnp
loop
mov
cli
shr
adc
and
pop
xchg
ds
ja
(bad)
(bad)
cmc
fdiv
cmps
stos
fcom
pushf
ins
dec
mov
dec
daa
sbb
pop
cli
cs
cmp
sub
push
(bad)
dec
hlt
and
jo
mov
push
xor
movs
mov
addr16
dec
ds
ret
and
jg
cli
jbe
enter
call
push
cmc
shl
shr
cdq
sub
dec
shl
(bad)
pop
loopne
stc
adc
sbb
das
enter
push
fstp
xor
ds
(bad)
and
cmp
frstor
popf
lahf
sub
jge
rol
and
push
call
jg
loop
fwait
inc
mov
jp
loopne
cmp
bound
jmp
push
jno
pop
cdq
out
xchg
(bad)
cli
outs
add
nop
cmp
das
(bad)
into
test
neg
(bad)
sub
sub
sub
retf
in
fidivr
mov
pop
push
aaa
inc
xchg
aad
dec
mov
sub
stos
xchg
in
mov
and
push
cmp
outs
push
or
jecxz
movs
test
lea
adc
mov
cdq
in
jbe
push
sub
lock
sub
jbe
aad
icebp
or
pop
dec
mov
xchg
lock
push
xor
and
sahf
pusha
retf
pop
jmp
add
ret
movs
mov
movs
cmps
xor
movs
dec
imul
xchg
int3
add
movs
std
hlt
cli
(bad)
or
jmp
cmp
inc
adc
xchg
xchg
fistp
add
cs
mov
xchg
nop
dec
mov
mov
cmp
out
dec
dec
rcl
rol
mov
fistp
clc
in
jmp
int3
adc
xchg
sbb
xchg
cld
pop
shl
jns
int3
mov
add
inc
imul
adc
loopne
mov
mov
adc
rcr
push
in
ss
adc
aaa
add
mov
mov
add
xchg
mov
dec
jb
dec
jge
add
xchg
fs
inc
cmps
jl
xchg
xchg
sub
push
xor
aas
(bad)
mov
push
add
mov
cwde
jne
and
mov
cmc
push
js
and
sbb
jecxz
and
mov
jg
nop
mov
test
shl
fsub
sbb
sbb
lea
dec
clc
popf
cwde
(bad)
mov
retf
into
dec
sbb
cli
or
fisttp
pop
cmovno
cs
ins
retf
inc
mov
ficomp
push
rol
lea
adc
mov
cmps
sub
nop
repnz
push
scas
aam
pop
stc
push
aam
and
lds
enter
fld
ret
fldcw
push
sub
arpl
sub
(bad)
sahf
(bad)
es
cmp
daa
cli
int
loope
xor
repnz
in
lods
pop
icebp
aas
mov
adc
jo
jecxz
mov
in
ror
jne
je
sub
add
mov
mov
cmp
xor
test
mov
cmp
lods
add
fist
ror
push
outs
stos
cmp
repz
pushf
add
xor
sub
xor
push
mov
test
cmps
out
push
xor
dec
pop
pop
mov
sub
pop
fist
aam
ins
jp
ins
shl
jae
sbb
call
jno
mov
lds
xor
push
xlat
jne
cmp
pusha
or
xchg
adc
mov
mov
inc
nop
retf
dec
jmp
cmp
jb
add
push
scas
add
mov
loop
jnp
pop
sar
xor
sbb
or
push
jbe
dec
popf
cld
in
jmp
push
popa
pop
or
in
sar
adc
sub
or
test
popa
ret
push
(bad)
repz
cmp
dec
js
in
jns
div
jbe
jge
sub
fiadd
mov
jecxz
fidivr
cmp
sub
pusha
mov
scas
or
jb
outs
jo
(bad)
sub
js
dec
imul
sub
lods
pop
in
lock
outs
daa
adc
add
mov
mov
xor
xchg
stc
jecxz
mov
sbb
fstp
pop
iret
icebp
dec
xor
mov
fnstsw
mov
pop
shl
sbb
hlt
cli
cmps
retf
push
scas
int3
xchg
push
mov
jae
ins
xchg
adc
cmp
mov
mov
ins
pop
inc
scas
imul
and
int
dec
mov
xchg
into
dec
xchg
pop
imul
add
loope
(bad)
and
cmp
push
sub
jl
in
mov
sbb
(bad)
mov
jb
xor
mov
sub
fst
pop
cmp
push
ds
xor
inc
repz
sbb
xchg
push
clc
mov
les
inc
mov
jo
outs
stc
imul
xchg
cvtdq2ps
xchg
add
fsub
rol
ds
in
pop
enter
pop
or
not
dec
cmps
mov
jmp
adc
jmp
push
scas
push
mov
xchg
movs
jns
adc
sahf
dec
mov
add
repnz
push
dec
push
adc
(bad)
hlt
icebp
mov
pop
sti
stos
dec
gs
out
cdq
popf
xor
aaa
ret
sub
mov
add
sti
cmc
mov
out
cmc
lods
ficomp
mov
cmps
mov
and
sbb
dec
dec
pop
jmp
pop
mov
dec
add
mov
cmp
inc
mov
xchg
hlt
lds
xor
add
ret
jl
psrld
jbe
mov
xor
inc
je
jg
add
jne
ja
aam
sbb
adc
inc
movs
sub
jno
ja
or
ins
ret
mov
(bad)
in
loope
je
cmc
out
mov
iret
push
cmc
or
cmc
dec
adc
lods
jp
shr
fdivr
fst
push
adc
test
inc
retf
mov
xor
jns
mov
mov
movs
mov
ja
jo
add
test
fsubr
(bad)
mov
cmp
pushf
test
cdq
pop
rcl
int
repz
jne
test
psrld
mov
enter
or
push
imul
jb
lods
or
push
jmp
fcomp
xor
enter
gs
mov
xor
pushf
pop
test
jle
mov
jecxz
icebp
or
pop
fisttp
push
xchg
addr16
cmp
lea
fld
leave
cmc
xchg
inc
retf
dec
add
aaa
cmp
xchg
mov
jno
shl
mov
div
mov
int
add
call
push
stc
leave
pop
jmp
test
fidiv
or
mov
in
dec
xchg
mov
jae
add
test
sbb
mov
in
dec
(bad)
jge
stos
sub
and
pushw
dec
push
cmc
push
lock
call
xlat
xchg
xor
adc
xchg
or
jb
fisubr
cdq
jae
inc
add
shl
(bad)
sbb
(bad)
pop
or
xchg
sbb
inc
cmc
or
jno
xchg
add
mov
push
xor
cmp
aaa
loop
(bad)
hlt
vshufps
lock
sub
xlat
sub
cmp
(bad)
rcr
xor
les
loop
mov
xchg
or
mov
loop
xor
jo
push
fst
(bad)
aad
ds
inc
inc
pop
pop
inc
adc
push
cmc
cmc
mov
pusha
fiadd
jmp
int
dec
add
in
xchg
xlat
scas
jns
and
pop
bound
push
sub
(bad)
add
fs
cmp
add
(bad)
sar
cmp
mov
sub
retf
call
addr16
arpl
je
ficomp
bnd
mov
iret
in
xchg
in
dec
cmp
push
ins
sbb
push
arpl
test
jmp
in
cmp
jns
mov
and
shr
sub
xchg
(bad)
retf
jns
cmc
xlat
stc
jo
pop
sub
in
test
xchg
ja
dec
push
mov
pop
sbb
jae
cs
lods
jbe
cld
jmp
mov
repz
scas
mov
inc
cmp
js
cmove
stc
mul
adc
loopne
adc
pop
cmps
or
lds
pop
dec
rcl
repnz
pop
sbb
mov
push
(bad)
push
xor
mov
fiadd
dec
daa
add
rol
mov
mov
fsubr
clc
cmp
jbe
(bad)
rcl
das
fidivr
adc
sahf
add
xor
jno
dec
push
or
test
cmp
cmp
stos
jecxz
sar
in
xchg
mov
stos
and
adc
mov
mov
adc
dec
mov
fstp
rcl
or
test
call
mov
and
jmp
jle
mov
data16
in
xchg
daa
and
inc
out
cmps
bound
push
jne
cmp
mov
fimul
push
push
push
ds
mov
xchg
shr
and
dec
pop
(bad)
fld
out
test
loop
mov
cmp
mov
jge
jge
sbb
sbb
sub
icebp
ficom
jecxz
daa
outs
outs
test
outs
adc
(bad)
pop
cwde
imul
inc
sbb
add
dec
jp
jmp
jbe
cmp
mov
ret
call
or
dec
mov
xor
cdq
mov
jmp
rol
jle
and
es
rcl
jge
in
cmp
inc
cmp
lods
jp
adc
mov
fidivr
sub
lahf
pop
pop
xchg
inc
push
mov
call
inc
and
stc
or
aam
pusha
xchg
adc
stos
dec
fld
pop
loope
xor
test
test
in
fxch
jp
xor
pop
jnp
rcr
jno
int3
xlat
push
or
xor
xor
xlat
or
pop
(bad)
mov
push
mov
gs
or
push
dec
push
pushf
and
movs
(bad)
aad
cmc
mov
fdivr
inc
cmp
stc
mov
sub
mov
mov
cmp
int
dec
push
dec
mov
push
fs
data16
lahf
ror
imul
aaa
inc
mov
cs
sbb
or
aaa
popa
push
xchg
and
inc
cmp
cdq
sub
jp
cwde
adc
int
add
push
nop
fsub
sbb
or
stc
push
jmp
inc
ss
mov
ret
cs
dec
cmps
jmp
mov
jg
test
cmps
push
imul
js
pop
repnz
mov
icebp
lahf
in
scas
dec
mov
loopne
pop
xchg
(bad)
jl
cmp
cwde
shr
call
retf
pusha
cs
sti
stos
fcomip
and
cli
jmp
xchg
shl
pop
jle
xchg
fimul
jecxz
movs
(bad)
repnz
mov
mov
icebp
daa
add
shl
dec
sti
fsubrp
inc
test
cld
dec
push
(bad)
adc
pop
aas
fdivr
or
in
ins
loope
popa
or
ds
dec
(bad)
sar
retf
xchg
inc
jge
cmp
pushf
mov
xchg
push
and
jp
out
mov
les
movs
pop
and
jnp
jbe
call
retf
mov
xor
ds
ins
cmc
lea
cmp
mov
rcl
icebp
daa
add
pop
mov
add
add
in
je
mov
xchg
push
mov
jnp
pop
mov
out
fs
mov
into
mov
ins
mov
(bad)
cmps
mov
push
or
shr
xchg
dec
shr
ins
aas
mov
adc
iret
gs
xor
iret
idiv
xor
cmp
inc
and
mov
jno
jmp
fnstsw
sub
push
sbb
and
shl
sub
or
pop
xlat
mov
xchg
mov
ret
add
repz
cmp
jae
stos
mov
int
out
and
mov
push
frstor
seto
push
ja
pusha
mov
ins
and
clc
les
mov
test
sbb
mov
sub
jno
sbb
cmp
aam
jbe
fwait
pop
neg
cdq
scas
mov
scas
and
outs
cwde
pushf
test
jbe
in
cmp
retf
ror
test
loopne
shl
sub
jbe
mov
fadd
sti
xor
jmp
jo
mov
retf
inc
and
or
push
fld
cwde
fldcw
dec
imul
and
shr
add
mov
jae
mov
ins
cdq
fnsave
and
mov
adc
add
call
push
mov
popa
jae
cld
add
adc
fst
jecxz
mov
imul
(bad)
test
add
push
or
adc
rol
and
cmp
xchg
ror
cmp
lock
cli
sahf
fcomip
fsubr
mov
adc
js
mov
adc
stos
mov
addr16
imul
xlat
pusha
in
or
ins
inc
mov
iret
out
push
mov
adc
and
mov
jbe
push
sub
mov
lds
in
inc
stos
loope
push
js
dec
fucomp
and
(bad)
cmps
sub
ret
pushf
push
fbld
rcl
in
adc
jae
std
test
adc
int
add
mov
jge
in
ins
mov
enter
cmp
pusha
dec
cmp
aas
jo
cmp
lea
pop
sbb
adc
jne
pop
jp
sbb
sbb
sar
mov
dec
pusha
mov
sbb
pop
cld
jp
cs
pop
leave
mov
lock
xor
pop
enter
xchg
and
mov
das
or
or
sbb
dec
pushf
dec
mov
fwait
pop
jge
mov
dec
mov
push
hlt
outs
push
nop
outs
pop
inc
sub
into
mov
and
cmp
bound
repnz
cmps
(bad)
sub
sbb
push
xor
out
in
or
jmp
iret
jne
cmc
inc
sub
(bad)
fisttp
call
pop
sub
repnz
jb
pop
cmp
cmc
fidivr
fmul
outs
pop
adc
mov
and
test
shl
add
idiv
cmp
push
fld
add
pop
inc
pop
mov
push
div
add
jle
inc
mov
ret
xchg
jae
aam
cmps
test
out
in
push
pop
test
sub
inc
mov
fbld
stos
daa
pop
push
push
in
cmc
hlt
popa
push
xor
daa
scas
scas
push
stos
ret
adc
mov
(bad)
lock
add
sbb
jns
adc
rcl
mov
icebp
push
cdq
test
dec
lods
(bad)
xchg
push
sub
lods
mov
fs
push
or
mov
dec
enter
test
add
ja
(bad)
cmp
into
add
xchg
mov
arpl
jmp
jl
push
jmp
pop
push
dec
add
push
and
jp
xchg
pushf
imul
push
cmp
je
(bad)
stos
fistp
dec
rol
sbb
ficom
nop
pop
fsubr
loopne
fadd
jb
adc
push
mov
int
mov
xor
loop
fisub
aas
pop
sub
add
adc
xchg
or
dec
push
hlt
out
xlat
das
sub
xor
outs
sub
jae
mov
adc
rcr
mov
loope
cmp
or
je
mov
mov
mov
cmp
cwde
cld
xchg
les
pop
and
cmp
or
in
dec
mov
mov
inc
mov
mov
jmp
addr16
clc
fst
mov
imul
pop
adc
call
pusha
loope
mov
mov
mov
sub
div
jne
add
cdq
sbb
inc
iret
sub
sbb
int
xchg
mov
adc
je
xchg
out
(bad)
retf
inc
retf
sbb
jp
sub
cmp
cmp
scas
jle
push
aaa
fild
pop
jno
push
in
into
outs
bound
mov
test
not
sub
stos
pop
test
xbegin
xchg
xor
sbb
jmp
clc
retf
cli
sar
repz
jns
xchg
fisttp
push
cs
pop
mov
dec
xor
arpl
aaa
imul
out
test
adc
int
std
(bad)
pushf
and
inc
add
jmp
jl
xlat
dec
les
aam
push
(bad)
xor
ja
std
in
xchg
push
pop
scas
and
std
cmp
jae
and
dec
sbb
call
jl
test
(bad)
aam
xchg
outs
out
sbb
ror
retf
cmc
mov
aas
push
inc
ret
ret
pop
adc
das
cmp
xchg
fisub
xor
ja
shl
aas
push
ds
mov
(bad)
pop
sub
push
cmp
pop
mov
lds
sub
sub
dec
mov
mov
test
stos
sub
retf
sub
add
mov
shl
pop
sbb
sub
sub
mov
out
icebp
pop
into
pop
cmp
push
add
add
cmp
cmps
sbb
add
enter
sub
cmp
or
shl
stos
(bad)
sti
test
xlat
das
stos
xchg
cmp
hlt
fistp
sbb
mov
xchg
retf
and
add
and
mov
clc
test
aas
cmps
pop
imul
pusha
aad
aad
in
sub
jecxz
or
cmp
mov
sbb
sbb
mov
mov
scas
ja
jmp
aam
scas
call
out
ror
cs
and
mov
sbb
xor
inc
bound
dec
outs
les
into
pop
dec
mov
dec
imul
pop
pop
mov
jg
stos
mov
in
ins
std
cmps
fisttp
xchg
fidivr
jg
inc
mov
popf
push
enter
sub
movs
fbstp
arpl
sti
leave
pop
pop
lock
cdq
xor
or
dec
test
fucomip
lods
pop
mov
jo
inc
add
xor
sbb
jp
cmc
or
into
jmp
cmps
ror
jmp
imul
jb
js
mov
xor
js
push
mov
lahf
push
mov
out
mov
addr16
cmps
lods
and
dec
leave
retf
mov
rol
jmp
and
fnsave
outs
stc
jp
xor
mov
leave
mov
add
data16
movs
icebp
cmp
paddsb
mov
pop
cwde
dec
fmul
int3
call
sub
mov
push
sub
mov
cdq
jo
outs
xchg
rcl
pop
test
icebp
fistp
mov
int
mov
int3
pop
jp
ror
icebp
js
sub
fwait
inc
adc
pop
daa
repnz
pop
xor
les
add
mov
std
ins
sub
ins
and
in
imul
xor
cwde
gs
lock
mov
cmp
in
rcl
stos
sub
jnp
xchg
add
dec
pop
xor
scas
movs
or
fnstcw
dec
inc
pop
mov
into
idiv
js
pop
mov
das
xchg
test
repz
mov
lds
xor
out
shl
jmp
xchg
rcr
pushf
arpl
lea
arpl
shl
xchg
xor
(bad)
enter
xchg
jmp
in
sbb
pushf
cmp
jns
arpl
aad
movs
mov
test
lods
ds
lahf
test
dec
push
jno
push
je
pop
push
sbb
or
fwait
out
arpl
int3
mov
loop
cdq
cli
mov
fst
call
mov
dec
mov
test
loop
push
cs
dec
push
mov
xor
mov
ja
jmpw
jmp
pop
(bad)
(bad)
pusha
or
push
out
rcr
dec
xor
sub
shl
test
in
dec
mov
push
aas
xchg
dec
das
lods
sub
or
inc
outs
dec
jmp
mov
int3
xchg
fiadd
cmp
(bad)
jns
pop
leave
xchg
jne
repnz
add
inc
mov
pop
jecxz
pop
lahf
jns
xchg
(bad)
jbe
pushf
pop
inc
sub
loopne
test
and
xor
jo
cmp
imul
sar
pop
in
lahf
test
pop
cwde
xor
pop
xchg
push
enter
or
jg
and
into
jb
push
jge
or
out
es
in
js
in
nop
lods
push
xchg
or
rol
push
mov
repz
sbb
add
mov
popf
dec
jae
adc
lods
add
adc
in
aas
imul
inc
or
jo
rol
sar
or
push
xor
pop
outs
push
mov
adc
retf
pushf
mov
out
sub
dec
dec
inc
mov
inc
popa
bound
out
sbb
(bad)
int
or
les
dec
hlt
inc
and
stos
test
dec
push
dec
xor
xor
jmp
xor
cli
add
scas
loop
out
mov
push
push
xor
daa
repz
push
pop
jmp
ins
mov
sbb
cmp
adc
inc
out
xor
mov
iret
inc
das
adc
and
or
ins
(bad)
in
xchg
inc
js
aad
loope
adc
cmp
inc
mov
add
or
stos
sub
xchg
and
push
pop
lea
das
mov
push
loope
cmps
cmc
sbb
jne
jae
fwait
mov
xchg
xchg
dec
js
shr
and
test
pop
ins
cmc
xchg
cmp
xchg
jne
xchg
mov
fisttp
ins
or
sub
sbb
ins
stc
or
xchg
jmp
std
out
jp
dec
call
imul
scas
js
dec
movs
je
sub
and
xor
repnz
pop
pushf
xor
cmp
xchg
je
dec
loope
jle
mov
cli
and
(bad)
dec
mov
out
ins
fld
inc
jge
int
xchg
icebp
xchg
xor
lds
jo
clc
fbld
aaa
dec
pop
xor
dec
mov
inc
movlps
test
fdivr
xchg
mov
dec
imul
adc
rol
fisubr
pushf
out
jbe
inc
jbe
xchg
shr
(bad)
cmps
inc
sbb
dec
xchg
adc
repnz
out
adc
or
aas
jb
jno
cmp
jae
jl
dec
xor
jp
rcl
mov
xchg
cwde
aaa
mov
push
and
sub
dec
ret
in
mov
int3
adc
test
cmp
pop
fsub
mov
imul
dec
vmwrite
test
push
lahf
mov
or
jg
fmul
pushf
sub
cli
pop
inc
dec
cli
push
add
in
cmp
jmp
add
lea
inc
inc
xchg
dec
test
xchg
jbe
jg
adc
push
movs
xor
dec
stc
aaa
mov
dec
sbb
add
mov
ja
out
push
or
aam
jbe
sbb
clc
aas
rcl
push
cwde
enter
stos
imul
pop
add
inc
cmp
pop
ins
inc
leave
xchg
icebp
pusha
jp
xchg
and
repnz
movs
retf
aam
fcmovu
add
push
mov
and
ja
(bad)
push
or
shr
test
(bad)
imul
stos
cmp
retf
shl
inc
jb
neg
mov
enter
das
adc
nop
add
dec
stos
add
jnp
not
xor
pop
retf
push
in
and
pop
add
out
rol
fistp
dec
stc
mov
mov
cmp
inc
mov
movups
or
movs
mov
and
xlat
push
push
xor
pushf
in
mov
call
jmp
xor
mov
adc
loop
loop
lock
pop
cmp
xor
out
rol
mov
arpl
fsubr
push
push
test
jmp
pop
clc
cs
adc
ds
push
lahf
jg
inc
loop
es
push
sbb
pop
jl
dec
enter
or
xchg
ret
lds
mov
repnz
out
push
jl
lds
ror
inc
jl
call
movs
aas
movs
mov
mov
xor
xor
lahf
lods
mov
adc
xchg
out
pop
stc
add
and
mov
pop
std
mov
movs
lods
add
jnp
cmp
int3
test
mov
adc
fiadd
mov
add
dec
pop
shr
pop
and
xor
or
icebp
sbb
pop
push
jge
enter
adc
fist
lahf
call
rcl
push
xchg
test
mov
mov
pop
bound
mov
stos
out
ror
cdq
int3
shr
xchg
and
popf
pusha
test
cmp
inc
into
dec
lods
dec
push
lods
mov
and
dec
sub
mov
sub
xor
sbb
lds
cs
inc
inc
sbb
or
int3
push
stc
pushf
cli
(bad)
cmps
pop
inc
add
in
dec
(bad)
cmp
jp
std
aaa
or
sbb
aas
jecxz
loope
movs
ret
jecxz
jecxz
xor
dec
push
(bad)
cld
sbb
add
iret
adc
pop
lds
fcomp
packuswb
outs
inc
out
cmp
addr16
inc
and
xchg
ret
or
jecxz
dec
lds
sbb
jge
inc
inc
rol
ret
repnz
(bad)
mov
pushf
ret
sub
idiv
mov
fnstcw
je
jle
add
in
popf
sub
mov
movs
packsswb
sub
scas
pop
rcr
pop
imul
gs
pushf
and
repnz
arpl
push
xchg
sbb
pop
fldcw
add
cs
sahf
adc
lods
int3
mov
pop
rol
xlat
jno
jecxz
loopne
adc
rol
and
lahf
inc
cli
in
or
scas
push
in
pusha
push
std
pop
inc
js
xor
pop
cld
inc
mov
add
cmp
mov
push
pushfw
pop
jb
xchg
fidiv
test
cmp
loop
lds
and
jge
push
xchg
inc
sbb
(bad)
push
test
pop
dec
inc
pop
std
cwde
inc
jnp
cmps
jns
hlt
rol
pop
mov
pop
(bad)
into
mov
cmps
push
add
xchg
icebp
jo
and
adc
cmps
mov
cdq
jne
and
mov
sbb
mov
es
pop
push
xor
outs
xchg
(bad)
dec
push
cmp
sub
jnp
xor
pop
cli
bound
sti
fwait
neg
imul
dec
xchg
push
inc
xchg
stos
mov
pop
dec
int
(bad)
sub
mov
aad
mov
mov
shl
mov
dec
mov
push
fadd
lods
cmc
xchg
repz
loopne
test
mov
or
pop
sahf
fmul
jmp
call
inc
(bad)
std
cmp
cmp
(bad)
xchg
inc
pop
retf
or
imul
push
pop
cmp
mov
inc
dec
mov
sar
data16
call
in
nop
xor
mov
add
xchg
inc
and
gs
(bad)
dec
pop
retf
xchg
(bad)
or
rcr
jns
loopne
loopne
lods
add
mov
cmc
cmp
fisubr
adc
outs
mov
je
xor
sbb
lea
or
repnz
add
je
test
xor
cli
stos
and
js
je
xor
stos
fsubr
sub
int3
test
jg
xchg
stos
push
or
pop
push
std
mov
jl
push
rcr
cwde
jecxz
out
dec
cmp
cmps
inc
jecxz
dec
aad
push
enter
inc
mov
pop
in
retf
mov
push
sub
xchg
cdq
mov
sub
inc
out
imul
cwde
jle
pop
(bad)
les
fidivr
add
ror
ret
cdq
ret
lods
dec
dec
into
stc
imul
js
in
jp
pusha
mov
je
sub
inc
outs
xor
(bad)
inc
xchg
and
adc
fst
imul
aas
(bad)
xchg
dec
ds
adc
jmp
std
inc
sldt
push
add
sbb
mov
mov
ret
xchg
push
jmp
out
adc
outs
xlat
xor
test
cs
aad
jmp
xor
hlt
jp
stos
cmp
jns
fist
pop
mov
adc
cmps
mov
out
push
jnp
pop
inc
xchg
push
sub
out
fnsave
ins
inc
inc
neg
repnz
or
mov
fsub
stos
xchg
sbb
xchg
cmps
std
or
retf
aas
add
stos
mov
push
lods
or
test
hlt
sahf
jmp
jg
lock
inc
imul
loope
outs
xor
ds
stc
aas
or
cs
mov
dec
sub
ins
pop
push
std
push
jge
fild
xor
(bad)
popf
fsubp
les
cmp
cmp
les
lock
pop
mov
jns
xchg
int
cmc
call
or
push
cld
adc
leave
adc
movs
loop
out
xchg
outs
sbb
and
add
mov
dec
or
or
mov
imul
push
mov
nop
popf
sahf
(bad)
pop
pop
and
gs
dec
outs
hlt
loope
push
shl
push
mov
add
lods
lea
shr
(bad)
std
test
imul
out
outs
imul
or
fmul
mov
ja
test
and
ror
in
mov
out
inc
mov
or
pop
pop
es
shr
retf
jge
scas
hlt
xchg
in
fidiv
cmp
jecxz
test
imul
push
or
call
sub
sbb
jo
sbb
adc
popa
mov
ins
push
cmp
push
sbb
and
in
stos
mov
cmps
xor
xchg
das
cmp
std
mov
mov
fwait
pop
adc
lds
aaa
shr
adc
loope
push
sbb
cmp
std
sub
jg
push
mov
push
or
repz
iret
call
lock
mov
and
rep
xchg
mov
or
movs
xchg
lds
fwait
and
dec
push
mov
data16
adc
mov
rcr
ss
mov
mov
repz
mov
mov
cmp
out
gs
inc
mov
ins
test
cmp
sub
push
outs
push
add
pushf
fmul
fwait
repnz
mov
mov
dec
add
pushf
dec
mov
scas
add
and
jg
fmulp
jns
movs
add
mov
cli
lock
pop
popa
adc
push
add
push
mov
daa
pop
outs
clc
push
jae
sbb
mov
jmp
fst
arpl
or
pop
mov
out
into
lods
imul
dec
mov
ss
cmp
xchg
sbb
or
call
out
pop
and
hlt
push
lahf
pop
shl
pop
lods
das
pop
jp
inc
sub
adc
jmp
das
or
jg
push
sti
test
test
adc
xchg
mov
jne
or
movs
sbb
stos
adc
popf
pop
pop
jge
sub
cmp
pushf
mov
add
mov
ss
sbb
or
daa
push
pop
idiv
dec
retf
mov
mov
xor
sub
jmp
sub
scas
mov
stos
push
lock
xchg
int3
sub
mov
js
or
push
sbb
loopne
add
jae
sub
aad
mov
dec
add
stos
iret
sti
test
dec
mov
adc
cld
add
clc
and
xor
or
jbe
cmp
xchg
rol
mov
test
sub
lds
pop
setnp
fcomp
xor
push
mov
mov
call
fistp
stos
cmp
mov
(bad)
mov
popf
push
stc
lock
std
stc
(bad)
stos
sbb
dec
adc
xor
pop
cmp
push
shr
dec
es
mov
jne
add
mov
sub
or
pop
xchg
mov
mov
adc
xor
dec
fwait
into
lahf
mov
out
outs
add
daa
(bad)
mov
repnz
xor
sahf
cmc
push
mov
sub
shr
push
(bad)
loopne
jle
xor
repnz
daa
ret
fdivr
scas
int
mov
mov
adc
outs
pop
xchg
xor
pop
loopne
fistp
arpl
inc
ret
ror
mov
pop
cmps
mov
pop
retf
xor
repz
inc
(bad)
and
sub
mov
loope
push
std
sbb
fld
pop
int
add
and
mov
sub
pop
(bad)
scas
out
or
icebp
add
lahf
loopne
sbb
pop
mov
rcl
mov
fnstcw
and
xor
push
hlt
cmp
xchg
add
add
xor
mov
fist
or
pop
aam
scas
std
rcl
xchg
push
cmp
mov
sbb
cmp
adc
mov
or
push
xchg
pop
xchg
sbb
stc
int3
mov
jmp
or
ret
int
jmp
loopne
sbb
inc
inc
sub
shr
mov
popa
cmp
aaa
push
push
(bad)
xchg
div
call
mov
mov
pop
sub
push
inc
sub
retf
test
sub
fdivrp
jbe
mov
and
loopne
cli
test
adc
push
sub
pop
mov
xor
or
ret
leave
(bad)
loopne
fwait
push
xor
(bad)
jbe
mov
mov
sub
outs
push
inc
(bad)
push
mov
loop
fnsave
mov
inc
mov
sar
div
pop
inc
pop
repnz
(bad)
jno
sti
call
std
mov
pop
call
loop
icebp
push
dec
sbb
or
shl
mov
sub
push
pusha
call
call
ins
push
mov
sub
cmc
bound
lods
mov
or
jae
loopne
sbb
call
push
push
data16
fs
mov
cmp
or
jle
jno
inc
int3
psubd
sbb
add
sub
cmp
push
stos
sbb
inc
hlt
adc
sub
sub
push
je
adc
xor
in
ret
adc
icebp
sub
push
mov
clc
pushf
xchg
xor
(bad)
gs
fld
ss
xor
push
sbb
pop
not
je
ret
jo
and
cmp
xchg
jbe
std
jno
push
sub
fcom
leave
or
shl
pop
stos
jl
dec
inc
lahf
and
xlat
cmp
cmovae
mov
push
cmp
repz
repz
mov
inc
frstor
mov
sub
je
mov
pop
test
xor
cmp
repnz
sub
sbb
lahf
pop
xor
cwde
jno
test
lahf
inc
pop
sahf
dec
mov
sahf
inc
cmp
jge
imul
mov
add
sub
stos
std
lea
shl
pusha
aaa
test
jno
xchg
mov
out
xlat
rol
rol
lahf
ins
push
nop
sti
pop
mov
popf
in
sbb
inc
outs
inc
retf
retf
and
sub
loop
mov
jbe
push
daa
stos
cwde
pop
cmps
lahf
jae
test
xchg
sbb
cmp
(bad)
shl
mov
test
icebp
movs
aas
push
pop
aad
xlat
push
aam
sahf
lods
stos
les
(bad)
cmp
inc
mov
adc
mov
push
retf
(bad)
scas
sahf
outs
mov
dec
(bad)
cmps
push
loopne
cmp
enter
ret
adc
lock
mov
lea
xchg
sub
int3
scas
adc
mov
loope
inc
cmps
call
enter
or
cmp
leave
sbb
mov
xchg
ins
outs
dec
sahf
and
das
push
lock
and
push
mov
push
ds
stos
xchg
xchg
stos
dec
inc
ds
jo
pop
cmp
cmp
out
scas
lahf
push
int3
pop
cmps
test
outs
push
sbb
fwait
cmps
pushf
std
pop
sar
sub
cli
or
or
movs
xor
stos
imul
jp
sbb
fwait
or
dec
push
push
loope
mov
push
jnp
sti
movs
push
dec
lds
inc
add
pushf
sub
dec
fist
lods
jecxz
std
sbb
imul
xor
or
shl
add
sub
cmc
jge
cmps
icebp
ja
pop
sbb
sub
xchg
jp
and
adc
xchg
jle
jb
and
add
fxam
mov
cdq
out
push
or
mov
leave
sub
mov
icebp
data16
mov
pop
dec
jp
inc
repnz
out
cmc
or
cmps
or
js
sti
dec
ins
sub
and
and
xor
mov
jg
push
nop
dec
lods
pop
ret
je
xor
imul
sub
sub
lea
lahf
fadd
paddd
stos
pop
sahf
repz
addr16
mov
icebp
add
stc
repnz
cmp
or
jp
fisub
out
fstp
movs
jne
and
scas
out
inc
stos
and
add
addr16
in
adc
pop
daa
fucomp
push
jmp
data16
repnz
test
pop
dec
mov
jb
sub
bound
pop
inc
dec
sub
lea
sbb
jmp
fcom
hlt
(bad)
ror
lds
sub
push
mov
push
pop
jnp
inc
fistp
cmp
dec
cmp
push
(bad)
mov
mov
xchg
cmp
fcmove
lods
(bad)
adc
pushf
jne
jo
add
ja
push
outs
sbb
mov
mov
cmc
mul
push
retf
fldenv
mov
mov
in
ret
out
clc
mov
inc
sub
push
repz
jne
sub
mov
fild
popa
into
jmp
xchg
push
fstp
rcl
cmp
adc
pop
ja
stc
fs
push
jnp
clc
jb
imul
rol
cli
sti
cwde
push
adc
popa
mov
mov
pop
div
rcr
xchg
ja
adc
ficomp
mov
mov
jmp
jp
push
addr16
pop
fimul
dec
sbb
xor
hlt
loopne
push
cmp
bound
arpl
popa
add
test
sar
(bad)
dec
je
mov
xchg
icebp
mov
jae
daa
adc
xor
add
adc
mov
jg
bndstx
sbb
jae
sar
add
xlat
mov
lahf
push
cmps
outs
mov
aad
push
push
mov
jmp
arpl
mov
scas
ins
add
push
mov
jnp
imul
adc
ss
sub
sbb
jbe
in
push
(bad)
xor
inc
cmc
inc
cmp
mov
and
hlt
jl
jb
scas
xchg
fidivr
es
dec
xchg
push
mov
push
xchg
iret
add
stc
fwait
mov
and
(bad)
fld
fmul
fs
aam
shl
jge
in
cld
jp
fdiv
aas
pop
inc
pop
lods
imul
push
retf
xchg
pop
cmp
imul
or
add
psubusb
xchg
push
inc
inc
scas
sti
xor
inc
cmp
retf
int3
jne
and
fchs
fsub
sbb
add
jge
ret
imul
pop
outs
ja
mov
pop
pop
and
cmp
pop
push
lock
push
out
scas
mov
jecxz
adc
inc
dec
(bad)
cmps
dec
int
push
pop
sti
sub
lahf
scas
lods
sub
sub
mov
fdivr
jmp
ins
jmp
ffreep
mov
and
push
push
retf
stos
jmp
pop
dec
xchg
xchg
in
sub
xchg
popa
push
sbb
test
mov
cmp
lds
fwait
push
fsub
fisttp
push
repnz
and
adc
mov
jno
push
or
inc
or
xor
icebp
pop
pop
popf
add
jmp
push
sti
mov
xor
out
mov
cli
add
dec
and
cmp
cmp
bound
fcom
mov
mov
xchg
stc
mov
fsubr
lock
call
mov
jg
add
test
out
cmp
mov
or
cmp
js
aas
or
fcom
fst
sar
pop
cmp
jnp
inc
jns
add
imul
and
dec
out
jbe
sbb
or
xor
pusha
adc
fsubr
push
pop
ss
mov
adc
shl
xchg
mov
xor
movs
jmp
pop
fisttp
fstp
outs
mov
fsubr
xor
mov
dec
das
ror
add
test
jae
mov
ret
call
out
xchg
add
in
xchg
pop
xor
xchg
mov
pop
lods
jbe
btc
and
adc
aam
add
bound
pop
and
pop
cld
push
arpl
or
call
push
pop
popa
sub
fild
jl
xor
cmp
fwait
jg
dec
mov
movs
fst
in
or
pop
cmp
adc
adc
mov
test
daa
xlat
fld
(bad)
mov
jmp
call
fs
inc
xor
mov
pop
mov
or
mov
repnz
adc
std
adc
int
jg
push
sub
aad
xor
push
(bad)
rcl
and
daa
nop
cmps
pop
sub
or
int3
add
out
leave
and
mov
movs
cmp
out
inc
or
xchg
xchg
xor
sahf
cmp
lods
js
inc
pushf
scas
(bad)
loope
inc
mov
nop
test
pop
cmp
call
inc
sbb
iret
add
je
or
jmp
ds
mov
or
out
(bad)
jp
loope
add
push
dec
mov
ret
sub
pop
jae
sbb
jo
adc
cdq
add
ss
movs
sbb
push
or
mov
or
adc
loope
fdivp
xchg
ret
(bad)
imul
add
mov
and
mov
ins
mov
push
in
mov
outs
cld
ret
lods
ss
scas
ret
int
retf
int
push
xor
and
out
std
sbb
sbb
dec
leave
and
adc
jb
adc
ror
xchg
gs
jno
pop
in
arpl
push
test
int
mov
jno
pop
mov
das
pop
sbb
inc
cmc
fwait
out
dec
movs
int3
arpl
xlat
jmp
lahf
das
jo
ins
cdq
jl
dec
jno
cwde
inc
push
mov
push
pop
jle
adc
cmps
in
stc
mov
mov
pop
adc
sbb
stos
mov
dec
push
je
mov
pop
call
fist
push
jae
int
inc
or
addr16
sub
std
std
and
jp
xor
xor
or
popf
call
dec
call
and
retf
stos
call
fcomp
sbb
sub
dec
je
movs
shr
bound
mov
int
vaddps
pop
shr
push
and
pop
in
lods
(bad)
push
out
cmc
js
xor
add
and
je
les
xor
mov
scas
push
mov
inc
out
into
fsub
and
xchg
inc
jns
loopne
jecxz
jecxz
jne
std
fidiv
push
mov
in
hlt
test
aam
adc
mov
aam
pop
cmps
mov
sar
ret
push
mov
pop
cmp
pop
mov
fisttp
inc
icebp
das
sub
mov
and
mov
jg
xor
pop
fldenv
and
cmp
inc
xor
mov
gs
or
push
jge
adc
jno
out
outs
cld
(bad)
js
jecxz
fs
mov
jns
test
push
push
fmul
cmp
jno
pop
mov
pusha
scas
add
sbb
push
test
xchg
or
repz
dec
inc
nop
out
adc
push
movs
nop
cli
cmps
jno
sbb
cdq
cmp
push
stos
xchg
or
push
mov
test
ficomp
cli
add
cwde
fiadd
adc
lods
adc
repnz
pop
stc
pop
dec
sub
xchg
lods
lods
cmps
sbb
or
loopne
test
jmp
push
js
mov
mov
xor
sub
or
mov
imul
adc
mov
mov
dec
enter
into
imul
(bad)
imul
call
mov
fistp
sbb
mov
or
pop
adc
pop
ret
or
call
xchg
jnp
addr16
cmp
dec
addr16
push
test
shl
inc
pop
out
lods
jno
add
xor
clc
mov
sub
(bad)
loop
or
aas
mov
jnp
sub
add
sbb
and
jne
lods
arpl
pop
call
ins
mov
jl
ret
sbb
xchg
mov
mov
and
push
rol
mov
mov
jg
mov
adc
ret
movs
jl
in
xchg
inc
and
fdivr
div
(bad)
aam
mov
push
jnp
into
sub
mov
dec
dec
jae
jne
pop
aam
repz
or
add
inc
push
ror
inc
and
xchg
scas
push
fnsave
push
or
xchg
out
pop
mov
sub
cmp
pop
dec
mov
scas
cmc
pop
test
std
xchg
fwait
sbb
jmp
int
test
sbb
dec
cmp
ja
mov
ret
iret
cmp
(bad)
clc
and
rol
aaa
xor
ror
cld
ror
jno
lods
scas
inc
dec
push
ins
or
dec
jmp
jbe
fist
push
mov
out
mov
adc
xchg
sahf
xchg
dec
(bad)
imul
mov
jle
dec
mov
aas
sti
shr
or
mov
adc
or
cs
push
sub
and
stos
fisub
jmp
or
xor
pusha
add
push
mov
mov
add
mov
xor
dec
inc
xor
nop
rcr
outs
adc
pop
nop
mov
mov
xchg
ror
dec
std
sahf
fst
and
int3
push
test
call
movs
repnz
sub
jl
inc
xor
push
mov
pusha
jbe
(bad)
dec
pusha
clc
scas
mov
or
lock
mov
xchg
sbb
(bad)
fidiv
jns
push
push
inc
add
or
data16
jg
aad
pop
sbb
push
cld
cmp
adc
js
push
(bad)
scas
adc
adc
push
and
push
mov
xor
jmp
retf
dec
les
mov
cmp
vunpcklpd
xchg
std
out
int3
fdiv
pop
out
pop
pushf
inc
sbb
(bad)
daa
ret
sbb
dec
(bad)
and
xor
popf
dec
mov
push
cmp
xchg
aam
mov
lahf
push
outs
mov
loopne
mov
and
add
into
gs
mov
mov
test
arpl
jno
and
(bad)
pop
ret
fisttp
xor
mov
xchg
mov
xchg
les
xchg
cmp
jo
mov
mov
inc
ins
repz
mov
pop
cmp
outs
std
loope
nop
ds
jne
cld
daa
inc
jo
mov
mov
mov
sbb
cs
dec
in
(bad)
mov
push
in
and
jns
jmp
mov
sub
and
xchg
dec
lock
call
jmp
inc
cmp
push
in
ins
or
mov
sar
mov
sbb
xchg
(bad)
or
push
out
mov
sub
in
push
bound
neg
sub
callw
test
jmp
sub
mov
setnp
cld
(bad)
movs
xor
imul
mov
js
shl
push
jno
push
dec
mov
xchg
and
mov
(bad)
cmp
or
inc
adc
or
jl
sub
(bad)
loopne
repz
mov
push
push
xor
lds
les
arpl
data16
cmp
lea
jbe
mov
adc
dec
(bad)
mov
outs
sti
loop
cmp
xchg
mov
pop
xor
xchg
ror
test
xchg
imul
fwait
jp
cmp
aaa
je
nop
jp
pop
out
in
pop
mov
out
dec
jo
fs
dec
(bad)
xor
in
mov
sahf
mov
cmp
mov
jl
in
lods
jl
call
ins
call
mov
sub
cli
mov
out
jns
icebp
mov
rcr
push
xlat
cmps
frstor
xchg
fdivr
push
les
add
or
lock
cwde
jle
pusha
retf
repz
mov
mov
and
bound
test
sti
mov
in
xchg
jl
jbe
pop
add
xor
mov
stc
xchg
push
lahf
mov
or
bound
bound
mov
rcl
stc
sar
xor
sbb
xchg
add
sbb
push
cmps
or
je
imul
and
or
mov
not
repz
das
mov
std
add
dec
ins
push
bnd
push
xchg
in
sbb
xlat
cmp
int
push
mov
sbb
retf
pop
push
xchg
mul
scas
add
inc
pop
retf
jns
jge
add
rcr
popf
bound
cmc
aad
cmp
into
xchg
xchg
and
or
int3
data16
test
rcl
pop
xchg
sbb
cmp
dec
push
xor
cmp
adc
dec
inc
popf
repnz
sub
jne
add
adc
sub
shr
and
retf
xor
out
(bad)
push
mov
bound
add
xlat
int3
mov
cmc
lock
fwait
rcr
fldenv
(bad)
pop
xchg
test
int3
jbe
xchg
add
inc
cmp
cs
mul
pop
xlat
cmp
es
jnp
dec
test
jl
rol
and
inc
scas
push
loop
sbb
xor
aaa
mov
iret
add
adc
push
xchg
push
push
or
push
stos
fscale
add
mov
das
add
es
movs
sub
in
loop
nop
jnp
sub
sbb
dec
gs
pop
stos
xchg
dec
dec
mov
pop
sub
jmp
test
push
xor
pusha
daa
mov
btc
out
mov
icebp
neg
and
sub
push
sub
iret
and
sbb
adc
mov
fdivr
aam
dec
ins
outs
mov
scas
arpl
fwait
mov
(bad)
je
mov
sub
sahf
int
lock
ret
ret
push
rcr
push
sub
mov
iret
pop
xchg
mul
or
movs
pop
pushf
std
(bad)
dec
jo
ficom
and
dec
push
mov
pop
adc
rcr
mov
icebp
test
add
sar
in
mov
pushf
mov
je
mov
pop
and
push
push
adc
mov
shl
xor
fucomip
add
jl
sbb
jp
jae
lea
add
es
xchg
inc
aad
mov
jl
pop
scas
lods
std
popa
scas
cmp
in
cwde
retf
(bad)
add
aam
xchg
adc
sub
inc
push
cmp
push
push
sar
mov
mov
cmp
lds
xchg
aam
mov
sub
inc
loope
hlt
mov
and
jl
fiadd
in
fwait
push
fmul
ins
add
icebp
clc
ds
imul
dec
scas
push
rol
mov
enter
ror
in
stc
or
or
xlat
jl
lahf
mov
sar
ret
lods
clc
in
cmps
dec
repz
cmps
add
mov
and
sbb
fwait
mov
scas
xor
jp
lods
jno
jg
int
and
add
pop
int3
sbb
inc
xor
xor
or
sub
mov
repz
fst
add
mov
arpl
cs
cmp
dec
inc
lods
push
mov
movs
ror
dec
sub
mov
pop
mov
jo
pop
or
addr16
or
push
ins
mov
fnsave
mov
mov
fdiv
out
cmp
adc
cmp
jno
jmp
lods
addr16
pushf
push
fidiv
cmp
seto
pop
test
cli
cmps
call
shl
int
add
inc
mov
xchg
fist
mov
pop
or
cmp
call
int
or
xlat
cs
mov
dec
pop
data16
(bad)
mov
xchg
dec
inc
stos
xchg
xchg
aaa
dec
pop
cmps
mov
stos
nop
test
xor
in
mov
lock
fst
in
rcr
ins
mov
ins
mov
das
mov
jp
sub
je
(bad)
pop
and
cmp
rol
scas
cmp
jb
shr
adc
mov
push
pmaxsw
dec
xlat
shr
test
fisttp
xor
stos
scas
inc
mov
shr
sub
lock
jo
mov
inc
fadd
fsubr
or
shl
iret
lods
cmps
out
dec
xchg
jmp
in
mov
fcmovu
sub
aaa
(bad)
cmps
js
cmp
mov
enter
loope
xor
js
sub
pushf
pop
test
fs
ror
out
xchg
or
loopne
lahf
out
fidivr
sbb
pop
sub
adc
pop
les
lds
or
iret
cmp
add
mov
mov
jns
es
xchg
cmp
and
mov
push
jnp
or
dec
mov
iret
inc
fstp
mov
cmp
(bad)
sahf
push
mov
dec
sbb
lock
mov
fisub
cmp
push
rol
xor
pop
jnp
mov
jbe
jne
mov
and
mov
and
dec
jmp
sbb
jbe
pushf
sbb
jbe
mov
pop
jb
lahf
(bad)
ficom
cmps
dec
jnp
fwait
retf
push
int
mov
xchg
push
je
or
xlat
push
js
jae
adc
push
adc
sbb
pop
lea
in
add
movs
test
push
fstp
data16
xchg
push
scas
cwde
shr
mov
pop
leave
in
movs
les
in
mov
repz
mov
pusha
loope
mov
jge
repz
ja
xchg
pop
mov
push
jae
xor
xchg
retf
loop
neg
ins
jmp
adc
adc
mov
xor
cmps
xchg
ds
adc
dec
sbb
push
jmp
leave
pop
inc
(bad)
xchg
and
xor
loopne
push
pop
push
call
(bad)
dec
sbb
(bad)
jge
rcr
(bad)
in
scas
push
pop
mov
push
scas
int
jge
pop
(bad)
pop
push
jb
inc
adc
aas
jmp
xor
movs
mov
or
fs
mov
out
mov
xlat
or
not
xor
mov
inc
out
daa
push
call
pop
xor
aam
jne
sub
int3
push
jo
mov
leave
je
add
(bad)
jno
inc
sbb
and
ins
xchg
gs
sti
push
loopne
adc
xor
inc
ror
xor
cmp
test
loop
dec
mov
xor
dec
xchg
jno
clc
iret
fwait
rol
push
sub
jl
fild
inc
movs
jb
and
and
pop
cdq
data16
test
cmp
ins
jns
adc
jmp
ss
mov
in
mov
jo
adc
inc
je
jl
fdiv
ins
cmc
dec
gs
mov
sbb
sahf
xor
(bad)
cdq
mov
inc
sbb
loop
aad
(bad)
in
je
mov
mov
dec
(bad)
sub
retf
jl
fisttp
cli
mov
call
test
sub
cwde
ror
fnstsw
jne
cmps
xchg
ins
push
push
imul
push
pop
aam
jne
xchg
jo
pop
shl
sbb
mov
out
or
mov
pop
sbb
stos
(bad)
in
int3
jmp
mov
pop
(bad)
xchg
inc
mov
loop
xor
cmps
or
je
push
sub
sahf
inc
xchg
adc
stc
cwde
mov
les
dec
push
sti
pusha
pop
add
mov
push
cmp
mov
xchg
jle
sahf
movs
jge
push
cmp
or
aaa
mov
add
adc
jecxz
jmp
into
and
test
and
ret
mov
rol
xchg
sbb
arpl
jecxz
jno
xor
push
dec
movs
aam
push
popa
push
xchg
adc
lea
lahf
push
pop
inc
ins
jns
loopne
adc
retf
adc
(bad)
fidiv
pusha
out
and
je
lea
add
xchg
enter
mov
jae
das
cwde
xchg
ficom
mov
push
pop
arpl
dec
dec
or
(bad)
sub
and
ret
inc
loop
dec
repz
jecxz
push
push
inc
ds
sub
push
sbb
fidiv
fstp
mov
pop
sbb
xchg
icebp
push
jno
dec
jge
aas
and
jb
in
push
movs
imul
xlat
dec
cmps
jp
ja
movs
dec
shr
mov
nop
arpl
or
mov
lds
rol
mov
popf
and
cwde
fst
daa
popa
fidivr
clc
shr
inc
inc
jno
js
xor
sahf
push
adc
pop
shl
int
push
mov
imul
dec
sub
outs
mov
add
unpckhps
inc
cmp
sar
mov
push
retf
ror
sbb
dec
cs
or
jo
push
call
cli
sub
cmp
cmp
or
outs
dec
out
pop
or
shl
fstp
cmp
pop
mov
add
jge
(bad)
pop
dec
push
pop
fsub
ror
les
sub
jmp
mov
sbb
out
add
(bad)
adc
push
xchg
(bad)
pop
popf
push
add
pop
and
icebp
push
aas
(bad)
loope
shl
loope
adc
adc
jecxz
(bad)
(bad)
pop
popf
pop
bound
cmp
sbb
cmp
popf
mov
jge
retf
jl
push
inc
push
in
fadd
add
mov
mov
mov
add
test
retf
retf
sub
cdq
sbb
inc
rol
xchg
pop
fcom
rcr
call
and
inc
fbld
dec
mov
icebp
cmp
mov
push
dec
lods
jne
bound
hlt
test
aas
sub
sbb
popa
(bad)
mov
adc
push
push
mov
(bad)
push
loopne
inc
aas
mov
push
pop
lahf
xchg
mov
dec
cld
test
mov
xor
or
lock
jbe
mov
shl
adc
movs
call
xor
xchg
xchg
pop
scas
add
mov
push
rcl
ret
adc
daa
push
stos
addr16
or
pop
fwait
test
or
idiv
cmovg
dec
shl
mov
les
push
mov
mov
xchg
aad
(bad)
adc
(bad)
ror
mov
inc
sub
xchg
ficomp
sbb
or
in
je
sub
lea
sbb
pop
imul
dec
mov
call
adc
lods
(bad)
call
or
push
enter
int
in
repnz
adc
adc
push
dec
lods
mov
fsub
mov
xchg
cld
adc
jmp
mov
xor
cmp
test
jo
inc
adc
xchg
jmp
icebp
or
int
pop
sbb
sub
imul
scas
mov
jo
mov
add
cli
mov
inc
fst
lock
inc
mov
push
test
mov
mov
out
ins
mov
ror
xor
jmp
pushf
jo
in
sbb
ja
neg
xchg
(bad)
sub
(bad)
sti
fadd
push
icebp
hlt
sbb
add
scas
rcr
in
std
in
jo
retf
out
sbb
mov
mov
nop
push
pop
mov
std
js
(bad)
dec
out
jge
(bad)
in
cmp
or
cld
mov
adc
mov
ret
or
jnp
call
ror
mov
mov
cmp
pop
add
mov
adc
inc
pop
mov
aaa
cmp
dec
mov
xor
sahf
lahf
add
dec
jge
mov
mov
and
lods
stos
push
mov
jge
sbb
push
sub
(bad)
fild
jno
jbe
fwait
pusha
retf
mov
jle
jge
fidivr
sub
shl
imul
push
fwait
add
lods
rol
popf
data16
xor
xor
cmp
sar
movs
fmul
arpl
push
or
sbb
add
clc
fs
in
xchg
lea
test
push
call
mov
adc
dec
inc
ds
xchg
rcl
push
inc
mov
cmps
xor
add
loopne
and
inc
or
aad
enter
pop
imul
jno
(bad)
lock
push
dec
pop
pop
mov
pop
aas
scas
imul
xchg
adc
cdq
push
call
jmp
cmp
sub
das
lea
cmc
xchg
xor
fmul
loopne
seto
mov
or
jmp
xlat
test
rcr
mov
mov
jg
ja
pop
add
sbb
int3
sub
add
test
sbb
pop
cmp
les
push
add
loope
mov
jl
mov
mov
shl
xchg
fdiv
xor
int
sub
push
and
sub
cmp
and
call
sub
push
fiadd
div
xor
pop
xchg
test
sti
xchg
jmp
test
sub
call
out
bound
and
adc
pusha
mov
ficom
pop
dec
jl
mov
pop
fstp
xchg
les
add
xor
and
adc
scas
(bad)
xor
mov
add
mov
pushf
test
and
rcl
jne
pop
pop
mov
inc
adc
and
call
lods
mov
xor
lock
test
(bad)
dec
ja
cmove
pcmpgtb
xchg
xchg
fild
xor
pop
mov
mov
adc
inc
jnp
sahf
lock
aas
inc
test
test
fild
movs
lods
adc
add
icebp
pop
jmp
mov
sbb
inc
(bad)
into
ds
lds
clc
xor
mov
push
or
sbb
fst
cs
int3
not
add
sbb
xchg
movs
loopne
pop
pop
inc
imul
jns
out
jo
arpl
stc
ret
leave
mov
push
push
mov
pop
jp
and
or
fnstcw
add
movs
mov
pop
mov
mov
test
jmp
fcom
add
mov
jmp
pop
mov
sbb
enter
fst
in
sub
loope
mov
arpl
aad
push
nop
dec
movq
pop
push
je
int3
scas
fmulp
out
sub
sbb
cli
inc
pop
mov
cmp
jnp
fdiv
dec
xlat
add
call
sbb
movs
push
xor
jmp
loop
(bad)
call
xor
xchg
mov
rol
test
cmc
mov
retf
std
sbb
pop
and
mov
adc
es
pop
ficom
clc
aad
pushf
mov
mov
cmp
jl
(bad)
(bad)
xor
repz
jl
push
lahf
cmc
mov
inc
cmps
jecxz
mov
push
sbb
and
mov
mov
mov
data16
jle
inc
inc
add
shl
cmp
adc
cmps
inc
add
das
xchg
(bad)
push
jmp
addr16
(bad)
mov
push
add
call
cmp
cld
fwait
(bad)
arpl
push
mov
clc
xor
cmps
cs
fdiv
cdq
iret
aad
scas
data16
sbb
jmp
xchg
jnp
jge
aam
aaa
jmp
push
xchg
sbb
scas
cmp
xchg
inc
dec
jns
xor
mov
outs
push
test
add
and
data16
daa
mov
xchg
jne
add
push
push
or
adc
(bad)
repnz
pop
inc
loopne
inc
out
cmps
or
cmp
push
test
imul
(bad)
jnp
xchg
sub
mov
mov
retf
sbb
push
lock
int
rcl
popf
pop
add
sbb
and
fxch
sub
stc
out
cmps
ins
dec
not
ret
pop
jae
sahf
pop
adc
pcmpeqd
xchg
in
mov
clc
out
adc
imul
ss
pop
(bad)
pop
jbe
push
adc
jl
cmp
push
xor
das
sub
push
xchg
cmps
add
push
jo
clc
cmp
daa
pop
retf
cdq
adc
pop
dec
icebp
inc
cmp
aaa
lea
std
sar
pop
mov
push
mov
imul
mov
jo
sti
scas
pop
sub
inc
inc
jmp
dec
pop
mov
push
div
outs
pop
fistp
mov
or
retf
clc
sbb
push
xchg
shl
push
jno
cmc
mov
(bad)
ins
xchg
inc
fcomp
stos
call
jb
test
cmp
mov
aaa
xor
fld
dec
outs
lock
mov
pop
mov
sbb
(bad)
xor
call
mov
xor
push
pop
pop
xchg
adc
lods
xor
fidiv
test
dec
xor
addr16
xor
retf
aam
cmp
xchg
and
std
pop
clc
or
xchg
adc
in
dec
popa
sub
or
and
sub
shr
jae
and
ins
pop
sub
leave
ror
andps
scas
shr
push
ins
lods
inc
sbb
imul
dec
ja
in
imul
iret
mov
mov
jmp
and
lods
add
ins
or
outs
(bad)
(bad)
popa
fxch
inc
stc
inc
push
cwde
stos
and
aad
stc
or
mov
mov
sbb
push
mov
sub
or
in
mov
xlat
call
movs
retf
pop
cld
sbb
gs
jae
mov
cmp
shr
push
retf
rcr
dec
push
xchg
push
adc
das
outs
mov
mov
fcmovu
jb
mov
sahf
call
std
ret
inc
pop
cmps
retf
push
imul
pushf
add
jge
inc
mov
(bad)
ja
xchg
sub
cmp
sbb
ja
(bad)
sub
test
jecxz
std
(bad)
stc
dec
push
hlt
push
sbb
loope
(bad)
dec
mov
lahf
fistp
in
sbb
cmps
popf
add
add
fcmovbe
int3
sti
pop
lahf
or
je
sub
add
cmp
movs
out
cwde
bnd
mov
fisttp
push
cli
div
adc
xchg
sti
adc
inc
push
mov
or
jmp
sub
into
pop
es
pop
add
mov
push
push
push
and
enter
mov
lock
fist
cmps
je
push
sbb
call
cmp
pop
aaa
out
shl
call
xor
sbb
cdq
pop
ret
shr
shr
int
cmp
dec
mov
push
movs
fcom
jnp
je
adc
xchg
hlt
xchg
or
jg
xchg
pop
(bad)
jne
add
(bad)
int
or
or
out
pop
in
dec
mov
aad
inc
mov
loopne
test
les
inc
adc
jnp
daa
mov
out
movs
out
ss
push
cmps
and
mov
pop
dec
cli
(bad)
pop
aad
push
add
cmp
(bad)
and
jae
je
mov
add
outs
and
daa
pmuludq
sbb
inc
pushf
push
ss
xor
inc
mov
xor
enter
sbb
inc
out
inc
push
adc
adc
mov
push
add
gs
les
popf
fs
push
or
jbe
shl
aad
retf
xchg
pop
pusha
xor
lea
pop
mov
add
inc
push
mov
xor
shl
sub
adc
je
ret
inc
nop
add
and
mov
test
jge
in
stos
movs
test
adc
xor
push
ret
call
test
jecxz
push
push
retf
jno
repz
jae
fwait
das
jge
test
or
out
mov
loop
lea
jge
(bad)
(bad)
scas
rol
adc
xchg
sub
inc
in
icebp
xchg
mov
sbb
mov
pop
cmp
out
aas
sti
mov
xor
cmp
out
ss
popf
(bad)
dec
shl
ret
push
or
xor
hlt
fs
cmp
aas
(bad)
ficom
jmp
lods
mov
int
push
xchg
add
loop
inc
pop
imul
xchg
push
mov
jle
inc
inc
bound
fild
sub
js
cdq
aas
neg
jmp
and
aaa
daa
stos
js
jecxz
jo
shr
cwde
(bad)
ss
xchg
add
aas
fld
push
dec
push
lahf
adc
jl
adc
daa
mov
rol
imul
push
jne
push
jb
fst
adc
dec
shl
cmp
inc
pop
div
lds
pop
or
cdq
pushf
scas
cmp
mov
cdq
sub
lds
sbb
cli
(bad)
and
clc
mov
in
fsubp
pop
pop
int3
xchg
test
ins
retf
call
call
dec
pop
into
outs
daa
or
jo
push
(bad)
sub
fdiv
ja
push
adc
fidiv
fwait
add
jb
xor
jmp
call
adc
pop
xchg
mov
add
pushf
ja
popa
inc
push
iret
retf
out
pop
cmps
inc
cli
mov
sbb
in
inc
scas
xchg
lods
push
arpl
push
retf
adc
mov
int
xchg
jnp
mov
retf
or
mov
sahf
dec
std
test
daa
dec
inc
dec
imul
rol
bound
jo
lock
in
in
ret
mov
or
int
das
stos
hlt
mov
bnd
add
adc
das
mov
sbb
pop
aaa
fwait
inc
addr16
pop
xor
pop
shl
push
lds
push
enter
cdq
xchg
mov
inc
inc
xor
and
sbb
ins
adc
and
outs
out
pop
or
sbb
mov
test
jmp
pop
cmc
gs
out
aas
call
or
mov
ins
movs
mov
pop
adc
xchg
jmp
cld
(bad)
mov
mov
sbb
fyl2x
mov
inc
inc
inc
adc
gs
dec
ret
and
mov
cmps
mov
adc
daa
in
push
inc
loop
rol
and
test
pushf
sbb
sbb
cmc
imul
mov
shl
push
inc
loopne
imul
ja
sbb
push
add
push
mov
xchg
out
pusha
inc
fdivr
xchg
fwait
sar
test
xor
dec
jnp
je
cmp
cmp
push
push
mov
lds
mov
cli
adc
into
mov
add
mov
or
addr16
call
dec
(bad)
jo
or
outs
xchg
lds
les
enter
pop
push
xchg
test
cmp
in
aas
cmps
scas
dec
das
cmp
out
mov
lds
push
sbb
pop
mov
mov
adc
pop
ja
mov
(bad)
mov
ret
mov
sub
in
push
(bad)
in
ins
and
pop
pop
sbb
imul
dec
mov
and
iret
xlat
inc
xchg
in
leave
lods
bsr
jns
ins
les
(bad)
stos
out
cmps
sub
dec
or
idiv
mov
sbb
dec
add
sub
ss
fwait
ror
lods
cdq
cmps
(bad)
or
adc
xor
js
mov
mov
jge
adc
std
cmps
bound
lods
(bad)
push
mov
mov
popf
in
push
pushf
sub
mov
adc
inc
dec
movs
push
mov
dec
not
out
repnz
mov
xor
sub
call
jg
add
jbe
retf
or
xchg
enter
mov
jmp
and
faddp
fcomp
push
dec
inc
add
xor
sub
pop
cmp
aaa
scas
test
jecxz
lock
or
dec
mov
fistp
pop
cmp
sbb
ins
jg
jmp
movs
jnp
adc
xor
push
frstor
and
mov
xor
mov
jne
mov
mov
add
stos
xchg
mov
mov
xchg
mov
and
cld
nop
out
mov
push
pop
jl
test
push
xor
sub
aaa
xchg
mov
lea
push
mov
lea
push
(bad)
cmp
jge
push
sbb
or
xor
mov
outs
inc
fninit
xchg
xchg
outs
shl
lods
enter
xor
lods
xor
stos
sti
cmp
mov
out
mov
fs
rcl
adc
dec
push
std
iret
ins
cwde
jb
mov
add
inc
sub
fdivr
xchg
xchg
jge
jne
fmul
xor
dec
stos
icebp
rcr
(bad)
mov
mov
nop
lahf
imul
fcmovnb
in
pop
pushf
xor
xchg
sbb
jg
sbb
stos
jbe
mov
xor
lds
mov
imul
call
inc
(bad)
scas
sar
xchg
loopne
xchg
mov
stos
mov
ja
and
dec
test
sub
mov
retf
fs
sar
push
xchg
lea
add
scas
bound
leave
clc
icebp
xchg
fisubr
stc
xor
pop
stos
stc
xchg
pop
xchg
push
inc
loopne
mov
sbb
sbb
nop
jae
rcr
cmps
xor
inc
jb
loop
call
aam
(bad)
dec
sub
dec
test
hlt
ins
addr16
leave
cmps
dec
arpl
cmp
dec
es
inc
mov
fwait
sbb
push
lods
fstp
inc
stc
lock
pop
push
movs
(bad)
int3
in
xchg
test
dec
cli
(bad)
and
fwait
sbb
inc
pop
arpl
push
dec
retf
int
jl
inc
mov
daa
(bad)
dec
inc
aam
or
mov
mov
jl
sbb
jge
or
sub
stos
or
es
int3
dec
ja
and
cmc
lods
pushf
jge
mul
cmp
pop
or
and
imul
xchg
pop
add
or
cmp
sub
xor
mov
push
mov
mov
dec
(bad)
ret
stos
pushf
aam
mov
add
xor
and
and
arpl
adc
jno
test
inc
cmp
push
pop
mov
ins
cdq
jo
xadd
xchg
je
push
fcom
dec
scas
cmp
std
popf
scas
(bad)
(bad)
jecxz
xchg
and
in
jne
push
inc
movs
ja
loope
xchg
aad
sbb
pop
cli
in
push
cmp
jae
sub
ficom
loope
inc
jno
add
add
fs
nop
cld
pavgb
pop
test
por
adc
sub
hlt
(bad)
jp
sti
idiv
jo
test
popf
aaa
imul
(bad)
movs
out
cwde
stos
sbb
cs
pop
sbb
arpl
stos
pop
jmp
xor
pop
dec
test
mov
repz
inc
int
stos
std
mov
mov
push
iret
mov
adc
mov
xchg
jb
sub
sub
inc
(bad)
loopne
enter
retf
or
inc
or
into
bswap
sbb
cld
cwde
mov
xchg
pop
mov
in
sub
or
pop
pop
lods
into
out
add
out
(bad)
push
ja
int3
xor
repnz
mov
mov
xchg
pop
mov
xchg
add
inc
jns
dec
mov
out
jo
dec
push
call
inc
adc
iret
xor
dec
test
push
fsubr
sub
adc
rcl
scas
push
cmp
push
dec
dec
aaa
mov
xchg
adc
pop
sub
jp
shl
enter
push
ret
push
in
pop
pusha
in
xor
inc
mov
popf
ins
cmp
sub
or
adc
fnstcw
cwde
mov
adc
into
lahf
pop
cwde
sahf
and
sub
stos
sar
xor
mov
adc
jnp
push
inc
stos
loop
xchg
push
sbb
in
setno
lods
idiv
cmp
out
sub
mov
ds
lods
mov
dec
xchg
setb
pop
sub
mov
cmp
jo
mov
add
jb
gs
inc
mov
sub
retf
cmps
dec
push
mov
inc
xchg
push
mov
or
ret
(bad)
push
fsub
xor
hlt
xor
or
sub
adc
cmp
outs
adc
stos
push
(bad)
fs
fsubr
sub
sar
ins
xor
sbb
lahf
xchg
sbb
xchg
stos
cmp
dec
cmp
jmp
mov
inc
sar
out
call
sbb
call
mov
jmp
mov
pop
push
and
jno
jp
lods
sbb
test
mov
mov
(bad)
icebp
sbb
sbb
retf
jnp
retf
arpl
idiv
jl
jns
inc
sub
push
fcmovbe
cmp
dec
cmp
pop
push
int3
cs
xor
adc
addr16
retf
mov
mov
dec
lea
out
cmps
sbb
sub
inc
xor
adc
outs
pop
jbe
adc
lods
inc
arpl
in
inc
mov
call
adc
retf
(bad)
imul
daa
xchg
rcr
in
xor
mov
out
in
imul
ins
xchg
dec
xor
enter
pop
scas
in
dec
out
and
in
sbb
cmp
scas
ret
out
fadd
sbb
(bad)
in
ficom
and
fcomp
or
pushf
cdq
push
sbb
aaa
xlat
(bad)
outs
and
in
fmul
je
fnstsw
(bad)
push
push
rcr
adc
cli
xchg
mov
or
nop
retf
pop
add
rcr
mov
fstp
mov
test
pop
popa
jecxz
or
cs
cld
jmp
push
xor
and
jb
stos
cli
jl
loop
fwait
mov
fmulp
arpl
pop
mov
rcl
lods
mov
adc
add
es
jns
movs
and
loop
jo
iret
cwde
nop
cmp
sar
fld
aaa
in
add
je
mov
iret
dec
push
loopne
int
mov
cmp
mul
xor
inc
or
and
inc
or
or
in
adc
mov
test
push
jp
je
lods
xchg
repnz
addr16
mov
jle
mov
add
ffreep
in
ror
sbb
inc
imul
or
mov
mov
in
add
test
ret
cmp
imul
stc
ss
pusha
sti
xor
outs
add
(bad)
jmp
sbb
gs
dec
push
jmp
push
mov
and
daa
aas
cmp
das
fistp
pop
pop
imul
test
test
mov
rol
mov
fdivp
iret
imul
sub
or
je
adc
dec
push
adc
fisubr
ins
ret
jmp
sahf
sub
cs
jnp
jbe
(bad)
sub
mov
fisub
mov
dec
js
jl
push
push
push
test
mov
call
rcr
mov
sbb
mov
xor
lahf
imul
pop
mov
nop
nop
movs
xchg
stos
fbstp
and
inc
or
(bad)
cmp
mov
cmp
dec
jp
adc
jmp
sub
leave
xchg
scas
sbb
add
xor
adc
sbb
gs
xor
inc
push
jle
in
std
and
shl
inc
call
inc
aam
cmp
(bad)
lahf
inc
ret
rol
mov
jge
xor
scas
adc
sbb
jb
fs
mov
mov
call
mov
in
int3
or
loopne
popf
pop
mov
inc
and
jmp
fcmovne
mov
pop
in
adc
(bad)
(bad)
lock
scas
xlat
aaa
adc
xchg
jbe
cmp
pop
push
sub
sbb
fucomip
push
add
stc
xor
add
loop
int3
fadd
sbb
and
xchg
std
pop
shl
push
mov
retf
xor
aas
cs
(bad)
loop
imul
pushf
je
add
je
int
les
jl
data16
shl
ret
int
ja
dec
adc
mov
xchg
stc
js
adc
call
cmc
nop
shl
cmp
cmp
mov
mov
(bad)
sbb
cmc
inc
sub
mov
in
movs
cli
jmp
mov
leave
fmul
sub
icebp
mov
cmp
mov
pop
mov
in
mov
fwait
push
je
add
or
outs
hlt
push
(bad)
fmul
sub
cmp
dec
lods
je
mov
jecxz
movs
nop
aam
test
(bad)
aad
inc
pop
push
ror
test
jns
fsub
xlat
jnp
aam
sbb
sbb
loopne
fwait
jnp
lea
out
cmp
push
cld
jne
mov
cmps
mov
or
xchg
(bad)
cmp
bound
(bad)
push
lods
jge
jno
cld
pop
sbb
cmc
push
popa
clc
mov
add
mov
leave
inc
sub
popa
stos
lods
mov
jae
in
jmp
aas
or
inc
mov
out
dec
retf
adc
(bad)
pop
idiv
stc
inc
jbe
cmp
hlt
js
in
jle
rol
add
ja
mov
pop
sub
mov
sbb
add
cmp
(bad)
outs
mov
mov
sahf
sub
hlt
add
mov
outs
mov
enter
and
cmps
add
or
add
cmp
sbb
adc
jno
(bad)
shl
mov
mov
or
dec
mov
jae
lods
shl
add
cmp
sti
jmp
adc
fwait
(bad)
clc
mov
mov
popa
fadd
sbb
add
sub
xchg
lea
cmps
pop
js
fistp
dec
push
mov
int
xor
mov
jg
in
sbb
addr16
mov
fwait
cmp
call
je
aas
xor
pusha
push
cmc
cmp
jmp
add
clc
xchg
push
test
mov
sbb
out
mov
adc
cli
std
mov
mov
test
jmp
jle
ins
stos
jno
jbe
popa
cmp
inc
not
mov
sahf
dec
mov
fs
cld
pop
mov
in
dec
aam
lahf
fbstp
xchg
jg
dec
dec
sub
out
pmulhuw
int3
addr16
inc
or
push
add
pusha
xor
xor
xor
cmps
or
push
xchg
ficom
push
ins
jmp
daa
cmps
xchg
jae
mov
data16
sub
xchg
xchg
fdivr
xlat
loop
sbb
xchg
jbe
fwait
jo
pop
out
ds
sub
xchg
iret
gs
inc
test
das
jg
mov
dec
xchg
dec
in
sti
pop
dec
sbb
data16
dec
pusha
sbb
loop
mov
cmp
fstp
dec
aam
mov
mov
mov
pop
mov
call
call
ins
mov
mov
or
cmc
stc
cli
or
cmp
out
es
out
outs
pop
mov
xchg
sbb
pop
inc
add
int3
les
ficom
jns
loop
dec
fsubr
xchg
(bad)
stc
pop
aad
dec
stos
(bad)
push
jno
repnz
imul
ror
and
fs
jo
test
and
fbld
or
push
ds
jno
inc
or
(bad)
pcmpeqd
cmp
adc
aad
popa
jmp
and
sahf
and
popf
in
cmp
shr
inc
fild
(bad)
push
(bad)
stos
das
push
sbb
loopne
test
mov
sbb
push
daa
into
fmul
sar
pop
jne
inc
outs
addr16
mov
xchg
(bad)
retf
inc
sahf
into
xchg
or
(bad)
loopne
push
jmp
clc
pop
jecxz
cli
push
jno
repnz
inc
cwde
addr16
adc
cli
cld
aad
mov
mov
call
add
lods
arpl
clc
inc
add
fwait
jg
ss
into
ds
test
ror
ret
in
test
cwde
rol
ret
in
repnz
stc
adc
sbb
jge
mov
jmp
push
pop
add
arpl
sub
xchg
sub
adc
jns
cwd
ja
cmps
mov
cmp
xor
dec
or
cld
std
dec
jno
push
mov
pop
test
sar
ret
hlt
xor
mov
jbe
repnz
retf
lds
inc
pop
out
inc
test
cmc
iret
jno
lods
push
mov
jg
clc
mul
sbb
or
inc
cmc
(bad)
arpl
enter
mov
xchg
jb
stc
or
xor
push
jnp
outs
mov
pusha
and
pop
retf
cmps
adc
daa
mov
add
mov
lock
sub
outs
jg
fwait
push
add
loop
(bad)
sbb
jns
mov
dec
mov
dec
test
into
xchg
fdiv
cdq
jp
xor
mov
test
fsubr
jg
sub
adc
test
lahf
and
outs
mov
movs
adc
inc
sub
mov
ror
into
rcl
cs
in
js
fdivr
mov
dec
push
nop
mov
add
ret
pusha
ret
jp
xchg
es
sub
mov
rcr
test
and
seto
pushf
cld
adc
sbb
mov
adc
fsubr
outs
jg
mov
add
push
dec
mov
mov
fwait
sbb
cld
in
pop
and
mov
fsub
dec
leave
imul
in
jmp
out
push
bound
ror
push
lds
xor
in
adc
cmps
and
(bad)
xchg
fcomp
ja
rcl
loop
push
aad
push
xor
out
fild
push
ret
inc
inc
jno
pop
push
repz
push
dec
cmp
sub
popa
out
jle
push
jae
adc
push
sahf
outs
push
inc
imul
addr16
jo
inc
push
test
sub
in
adc
mov
sub
fist
cmps
inc
jns
in
sti
out
fiadd
mov
mov
cmp
mov
stos
adc
jle
cmp
mov
add
mov
outs
or
jmp
movs
pop
cmp
(bad)
mov
pop
lahf
add
jecxz
es
ret
test
imul
idiv
jo
xchg
out
mov
mov
mov
lahf
rcr
repnz
in
mov
push
cmp
push
pop
(bad)
shr
rcr
cmc
sub
xchg
and
dec
and
xor
jne
addr16
out
jmp
stc
(bad)
lds
dec
shl
cmp
outs
ret
and
mov
xchg
sbb
add
sbb
push
adc
dec
fcom
fwait
out
rcl
lods
xor
ds
out
xor
adc
push
push
lods
fisttp
sub
sbb
cdq
and
loop
mov
pop
and
fcmove
inc
cmps
mov
cmp
mov
push
outs
jne
mov
inc
gs
mov
ror
push
add
ds
out
pop
stos
sbb
shl
dec
jg
mov
mov
rol
xor
mov
push
jne
cs
cmp
data16
xor
push
xchg
dec
or
mov
sahf
mov
jecxz
mov
das
mov
(bad)
loopne
sub
inc
cmps
aaa
pushf
sbb
dec
lods
data16
or
push
add
in
dec
inc
fisttp
int
jnp
add
jg
or
jg
adc
call
jae
adc
sti
cmps
inc
nop
bound
retf
shl
jmp
shr
pop
jecxz
and
mov
sbb
imul
jno
jmp
imul
push
popa
in
and
je
in
dec
lods
cmp
or
mov
mov
sbb
inc
mov
inc
fwait
and
dec
jno
aaa
push
sub
xor
shr
fsubp
push
xor
sbb
mov
repz
pop
out
in
pop
fisttp
clc
iret
rol
and
outs
inc
or
push
aad
inc
movs
(bad)
mov
xor
xor
(bad)
in
sub
lea
pop
xchg
push
nop
cmp
sbb
loop
inc
and
xchg
frstor
pop
ret
push
scas
(bad)
pop
jmp
sbb
mov
xor
mov
push
aam
adc
xor
inc
add
movs
(bad)
std
aad
pop
mov
adc
adc
or
es
push
popa
imul
sti
inc
test
mov
mov
or
cld
cli
add
push
pop
test
fcomp
mov
jne
(bad)
sahf
cmp
(bad)
inc
jnp
stos
shr
mov
(bad)
out
jbe
cmovne
xchg
xor
dec
sub
in
fisttp
mov
xor
mov
jmp
bound
cdq
pop
mov
arpl
sti
jmp
pop
fcmovu
(bad)
loop
mov
repz
lea
xor
add
add
cld
mov
popf
mov
sub
scas
sub
mov
retf
dec
mov
mov
inc
mov
jae
out
(bad)
sub
out
cmc
imul
mov
shr
sub
test
data16
mov
or
mov
popa
movs
push
mov
mov
push
aaa
pop
jbe
xor
sub
test
aad
pop
xor
out
(bad)
shl
push
or
scas
hlt
dec
mov
xchg
inc
enter
aam
gs
lea
nop
lods
mov
sti
jno
pop
inc
cmp
stos
fcomp
sub
aad
sbb
or
(bad)
(bad)
icebp
fisub
bound
(bad)
fiadd
rcr
movs
iret
or
ret
daa
pop
imul
and
cmp
fnstcw
cmp
xor
lods
fwait
push
rol
cli
loope
dec
or
xchg
xchg
out
call
rcr
pop
adc
fstp
xchg
out
mov
icebp
ds
js
aad
mov
call
jno
dec
or
pusha
ficomp
in
loop
shr
jge
push
and
repz
and
sahf
pop
test
add
scas
loope
(bad)
daa
lds
aad
and
push
add
jo
mov
mov
mov
(bad)
mov
(bad)
and
xor
stc
das
aam
xor
jns
mov
jo
dec
and
loop
jnp
adc
or
lock
ror
jmp
dec
stc
or
sub
xor
jae
mov
loopne
mov
or
retf
aaa
aad
pop
mov
dec
pop
jecxz
dec
lods
lods
fcomip
inc
adc
inc
pop
jnp
jge
into
outs
sbb
(bad)
mov
aam
push
and
loop
sub
mov
outs
imul
push
call
jnp
push
mov
pop
cdq
jnp
xor
or
sbb
pop
sbb
xchg
mov
arpl
popa
ds
jo
sub
lahf
push
jne
inc
push
lods
shl
cmps
les
in
loop
adc
adc
hlt
adc
mov
xchg
jge
dec
int
push
inc
push
dec
push
aam
sub
push
mov
sti
out
mov
xor
dec
repnz
movs
scas
ds
dec
das
call
call
iret
mov
cmps
and
push
cmc
jmp
imul
into
aas
or
je
enter
sub
sbb
pop
jmp
scas
cwde
call
out
pop
cld
addr16
movs
add
xchg
add
xchg
xlat
mov
jae
clc
lea
sbb
in
imul
loope
sbb
repz
mul
das
add
adc
ficom
mov
sti
pop
aas
push
jmp
or
test
xchg
adc
inc
outs
mov
and
push
imul
addr16
inc
cmc
lods
pop
es
inc
(bad)
fsub
je
test
sti
jne
and
leave
jns
add
jno
inc
iret
sub
pop
jle
inc
push
mov
jmp
sti
ror
dec
adc
and
iret
cmp
in
stos
aam
mov
adc
out
lods
pushf
mov
mov
popa
scas
outs
in
dec
js
out
gs
dec
adc
popa
int3
pop
add
xchg
pop
add
inc
mov
(bad)
test
(bad)
push
rcl
loopne
mov
dec
jnp
fcmovu
dec
pop
and
scas
out
out
jb
mov
or
fisub
loopne
and
push
loop
(bad)
mov
xor
pop
adc
mov
sbb
adc
mov
movs
lahf
mov
add
pushf
mov
scas
retf
mov
lods
retf
xchg
pop
or
fisubr
(bad)
mov
push
test
enter
dec
aaa
adc
jle
and
lock
jmp
imul
jmp
jo
xchg
ss
test
jne
sub
cmp
push
call
fbld
add
in
mov
mov
nop
fmul
push
(bad)
mov
mov
loope
sahf
pop
fistp
pushf
ret
(bad)
push
dec
mov
ret
xor
cli
es
mov
in
leave
xchg
dec
push
sub
cmp
retf
call
std
xor
pusha
sub
shl
sbb
mov
push
sahf
cwde
pop
movs
test
mov
add
xchg
adc
and
cmc
rol
sar
jmp
xchg
xor
loopne
push
or
or
pop
pop
int
jns
push
mov
nop
outs
pop
cmps
push
ret
add
je
ds
out
into
inc
pop
jmp
pop
cwde
add
jecxz
cmp
adc
iret
add
lock
jge
jb
outs
xor
call
add
test
mov
popf
out
sub
xor
adc
aam
xor
mov
retf
and
inc
fst
div
sbb
imul
or
outs
xchg
out
icebp
sti
xchg
sbb
lds
xlat
push
inc
stos
pop
movs
mov
inc
fist
mov
push
xchg
and
sbb
outs
cmp
sti
pusha
inc
mov
adc
fwait
scas
adc
jp
(bad)
mov
jns
sbb
sbb
mov
mov
push
cmp
arpl
bt
push
test
sahf
sbb
popf
add
fs
test
pusha
mov
retf
add
loope
mul
dec
loop
scas
sbb
fadd
mov
mov
xchg
repnz
mov
cmp
outs
jmp
jne
cli
outs
lock
int3
lods
or
enter
dec
cmps
dec
mov
sbb
xor
cmp
pop
fs
jbe
popf
test
mov
xor
mov
add
fcomp
call
add
je
and
repz
repz
shl
mov
cmc
or
fwait
mov
add
adc
jo
ficom
cli
jp
and
sbb
loope
xchg
cmps
(bad)
mov
out
xchg
pop
addr16
ret
bound
dec
adc
cmc
mov
or
or
(bad)
call
sbb
lahf
mov
les
test
icebp
or
push
xchg
aam
mov
sbb
test
xor
dec
or
mov
mov
push
stc
mov
and
add
jmp
and
aaa
push
xor
mov
arpl
jb
cmps
xchg
xor
cmp
popf
and
fsub
mov
out
cmp
lods
mov
(bad)
sbb
and
in
xchg
movs
cmp
fsincos
or
std
cwde
add
jge
jnp
sahf
scas
sti
add
xchg
sbb
(bad)
xchg
loop
mov
cmp
in
daa
stos
nop
jbe
pushf
enter
push
sbb
sbb
imul
sub
xor
popf
mov
test
adc
sbb
ins
mov
xor
adc
push
cmps
aad
es
cmp
pop
(bad)
xor
push
scas
push
mov
pop
lods
add
xor
sbb
aad
push
jp
jmp
stos
xchg
(bad)
icebp
sbb
jle
xor
mov
and
inc
fst
sub
xor
inc
sbb
add
clc
mov
icebp
ret
mov
mov
enter
or
mov
add
add
(bad)
retf
scas
clc
adc
in
pop
sub
movs
fcmovne
mov
and
lahf
retf
loope
push
js
mov
rcr
sub
lock
pop
dec
inc
dec
leave
inc
pusha
mov
sub
cmp
mov
add
stos
loop
xchg
pop
push
addr16
xchg
jg
dec
shl
jmp
push
jmp
sar
sti
or
out
mov
mov
ret
pop
xchg
loop
push
sub
pop
jb
loopne
fisttp
sub
add
mov
mov
xchg
xchg
leave
gs
mov
mov
bound
mov
fcom
test
cmp
test
(bad)
lahf
inc
adc
dec
xor
mov
mov
mov
xchg
test
fstp
and
(bad)
mov
inc
jl
lods
dec
stos
stos
dec
lods
les
xor
add
data16
(bad)
das
mov
inc
mov
adc
aad
xchg
clc
inc
jp
ret
adc
or
sbb
enter
sub
repz
fsubr
or
push
das
cs
add
jae
(bad)
mov
xor
or
cmp
(bad)
loope
in
mov
sub
scas
data16
imul
popf
xchg
jecxz
popf
in
mov
inc
ror
(bad)
push
inc
jne
ja
push
ja
inc
scas
mov
adc
mov
or
outs
aaa
mov
xor
mov
pop
in
push
push
call
or
out
sbb
das
xchg
push
ret
jg
not
or
xchg
or
jle
jae
push
pushf
push
mov
std
int3
ins
or
clc
aam
cmp
ret
jmp
sub
addr16
fwait
aam
pop
jbe
cmp
and
mov
add
shr
mov
add
pop
or
xchg
ret
pop
push
add
retf
push
pop
ror
sbb
mov
sar
jge
dec
xor
cmp
es
mov
jmp
sbb
sub
rcr
pop
mov
xchg
iret
mov
adc
add
xor
jmp
(bad)
in
enter
mov
pop
mov
xor
cmp
sbb
xchg
outs
xchg
dec
pop
sbb
bound
out
jno
call
cmp
push
cld
popa
aam
test
dec
mov
out
xchg
js
in
out
pop
and
jmp
popf
mov
rcl
lahf
call
pusha
loopne
inc
inc
mov
adc
mov
leave
call
xchg
jl
outs
xchg
adc
(bad)
pop
das
add
push
clc
ins
sub
pop
xchg
or
dec
add
lea
shl
sti
mov
xchg
add
test
fisubr
sub
sub
popa
hlt
xor
ss
jle
bound
add
push
retf
pop
mov
push
dec
data16
sbb
xor
sbb
mov
sbb
push
sbb
xchg
js
(bad)
sbb
daa
rcl
outs
pop
ins
das
mov
add
rcr
or
xor
add
mov
pop
adc
mov
ret
leave
popf
retf
imul
enter
jg
imul
leave
pop
inc
repz
mov
add
adc
int
das
rol
cli
mov
inc
jle
and
xchg
push
test
inc
fdiv
leave
push
xchg
pop
mov
fs
dec
cmp
sar
loope
in
and
cmp
jnp
inc
inc
and
test
mov
pop
in
add
dec
movs
push
xchg
xor
mov
into
adc
sti
xor
or
inc
hlt
lahf
in
add
dec
pop
or
sar
outs
ss
iret
push
(bad)
dec
neg
or
and
jns
push
sub
ret
cs
jge
xor
in
cmp
dec
or
mov
icebp
pop
mov
jmp
fstp
jnp
sbb
jo
fld
sub
ret
adc
xor
ja
inc
out
jmp
mov
out
adc
mov
or
pop
mov
daa
outs
pushf
out
push
movs
movs
adc
sub
aas
pop
push
fcmovu
jne
pandn
push
lea
or
jg
push
pusha
jg
cli
and
js
sub
mov
loop
xchg
mov
cmp
mov
std
sub
mov
adc
cdq
out
push
sbb
fsubr
adc
ja
js
pop
sub
inc
popf
fsub
jl
bound
in
jmp
cld
ins
sbb
push
cmps
dec
loope
scas
(bad)
sbb
jp
inc
dec
mov
mov
push
push
pop
(bad)
and
pop
mov
inc
cmp
dec
mov
ins
add
outs
dec
jno
sbb
mov
cmps
xchg
jnp
cmp
rcr
cdq
mov
(bad)
fsub
nop
mov
pushf
add
rcr
mov
adc
outs
dec
mov
xor
pop
arpl
dec
stos
adc
dec
xchg
(bad)
jmp
inc
loope
outs
pop
cld
push
mov
lahf
fisttp
sbb
popa
or
jg
dec
dec
push
neg
(bad)
and
in
xchg
fisttp
sbb
je
mov
adc
add
imul
fadd
jmp
jns
fidiv
mov
std
les
add
test
in
popa
add
je
sbb
xchg
ins
in
mov
dec
lock
jg
or
imul
or
or
mov
push
imul
jp
pop
push
out
call
or
es
outs
and
movs
aas
rcr
fwait
mov
std
pop
and
(bad)
es
jmp
xchg
push
loope
movs
jns
test
cdq
jmp
outs
outs
cli
push
test
mov
lds
pop
loope
xor
ins
jno
fstp
jne
xor
shl
movs
pop
cdq
dec
mov
mov
ins
push
call
inc
and
les
lahf
xor
pop
jns
inc
mov
pop
cmp
loope
je
mov
ds
sbb
aam
and
mov
xchg
mov
jle
and
or
sub
call
add
outs
jl
sub
sbb
jb
mov
cmp
add
and
jmp
pop
sbb
data16
(bad)
fdiv
sub
int
push
call
jl
mov
rcr
mov
xor
retf
jmp
mov
gs
outs
mov
inc
ja
adc
outs
sub
pushf
retf
out
scas
test
es
mov
jg
popa
and
jle
pop
cmps
xchg
xlat
dec
dec
clc
les
and
jbe
dec
xchg
popf
mov
mov
ja
push
dec
adc
jbe
clc
jp
sbb
repnz
ins
xlat
ja
sbb
jg
xchg
ficom
ret
and
sbb
push
iret
loope
sar
popa
dec
push
cld
mov
jmp
push
rcr
(bad)
stos
jl
fst
lds
mov
movs
push
scas
gs
int
sub
adc
or
(bad)
outs
mov
or
dec
xor
test
mov
icebp
push
sbb
icebp
xchg
push
aad
out
cwde
mov
(bad)
mov
lods
xchg
jecxz
pushf
leave
fisttp
iret
nop
mov
or
mov
lea
sub
xchg
ret
(bad)
hlt
jmp
xor
and
aaa
jns
je
and
neg
rol
mov
jbe
adc
mov
das
jp
mov
sub
sub
sbb
dec
cmp
hlt
push
and
popa
pop
cmp
add
rcl
dec
jbe
fnstsw
jo
cmp
sub
cdq
sar
ror
adc
popa
inc
xchg
xor
sub
ins
pop
sub
inc
cmp
mov
xchg
lods
inc
mov
(bad)
(bad)
pop
push
xchg
and
pop
or
call
jp
ins
xor
xchg
je
inc
aam
and
imul
pop
adc
ret
jle
jp
cdq
mov
into
cmp
dec
mov
test
imul
das
std
inc
add
inc
dec
cdq
ror
jb
outs
jecxz
pop
sub
push
pop
pusha
add
mov
inc
jae
daa
sub
retf
ret
inc
fs
dec
popa
push
inc
jmp
sub
ret
jmp
cli
test
pop
bound
push
xchg
mov
jp
(bad)
add
mov
and
out
mov
inc
ret
mov
rol
jl
push
inc
movs
push
inc
(bad)
adc
repnz
jb
lds
push
xchg
sbb
scas
and
dec
aaa
aam
in
or
mov
rcr
mov
fidiv
ins
test
pop
cdq
cmp
pop
stc
scas
ss
pop
lods
repnz
imul
(bad)
(bad)
fsub
sub
clc
cld
in
fwait
and
adc
cli
pop
jae
add
lods
sub
iret
sbb
or
pop
int
jmp
dec
xor
jnp
ins
retf
or
scas
std
ds
aaa
imul
cs
sbb
dec
push
mov
(bad)
pop
scas
ror
clc
shl
xchg
nop
(bad)
(bad)
jge
mov
pop
dec
and
cmp
ss
push
dec
ds
xchg
aas
sbb
aaa
adc
stos
shr
cld
aam
(bad)
jno
mov
dec
fidivr
sub
adc
jmp
pop
pop
retf
push
ficomp
rol
mov
add
xchg
push
sbb
imul
push
sub
xor
and
nop
cmp
jmp
inc
jg
in
fadd
add
xor
dec
adc
xchg
mov
lock
add
add
les
push
sbb
(bad)
retf
neg
ret
push
and
sbb
sahf
test
enter
jo
and
pop
je
fwait
xchg
stos
cmp
nop
in
loop
mov
cmps
icebp
loopne
ins
imul
add
push
xchg
mov
je
ins
push
ins
inc
mov
scas
and
push
dec
ror
(bad)
ss
loope
and
mov
jle
xchg
inc
jo
(bad)
lock
fmul
pop
enter
scas
jg
mov
mov
jno
(bad)
in
pushf
je
imul
or
test
cs
sub
or
fdiv
mov
loope
mov
or
mov
mov
jbe
retf
into
shl
pop
mov
pop
into
movs
push
jo
push
shl
sar
data16
outs
rcr
sbb
cs
lock
add
call
cmp
loop
outs
ja
in
inc
add
enter
xor
sub
inc
scas
jp
(bad)
push
adc
lock
dec
dec
das
cmp
xchg
hlt
dec
sti
or
push
or
dec
xor
xor
rol
cld
and
loope
dec
and
clc
out
pusha
sbb
(bad)
mov
je
test
retf
into
xor
scas
inc
cmp
push
jl
les
jg
loope
push
pop
jmp
sbb
push
test
adc
loopne
cmp
in
mov
(bad)
into
stos
ja
jmp
inc
jbe
ds
cmc
(bad)
sti
call
sbb
cmp
push
sbb
sbb
inc
and
cld
pop
inc
jle
jnp
cmp
inc
ins
adc
ret
test
mov
push
pop
add
clc
sbb
push
test
mov
xchg
adc
sbb
and
push
push
sbb
sti
push
scas
pop
stos
rcr
or
push
mov
add
imul
and
adc
cmp
and
xor
fisttp
aam
enter
jns
inc
or
popa
xchg
and
mov
cmp
mov
arpl
xor
push
jecxz
(bad)
mov
lea
and
out
xchg
push
lods
add
leave
dec
pop
cmp
sub
mov
dec
out
xor
push
mov
xchg
or
icebp
lock
dec
inc
aas
fidiv
cmp
push
push
mov
jg
in
add
test
(bad)
and
in
pop
mov
icebp
pop
ds
xchg
jnp
mov
cmp
add
ja
dec
mov
fimul
pop
jo
jge
sub
das
enter
jns
sub
loop
xor
iret
out
pop
mov
nop
test
fimul
movs
or
ficomp
pop
stos
dec
ret
cmps
das
and
(bad)
test
movs
dec
ins
(bad)
rol
inc
jmp
or
cwde
push
dec
push
dec
xchg
sub
push
cmps
mov
add
mov
mov
aam
xchg
rol
gs
and
cmps
xchg
add
repnz
sbb
jbe
jo
jb
pop
inc
xchg
xchg
leave
sbb
out
sbb
aad
mov
jge
cmp
mov
sub
sub
mov
fsub
(bad)
ficom
jp
arpl
fst
and
js
add
adc
mov
pop
dec
mov
xchg
mov
mov
out
imul
mov
xchg
shr
sbb
pop
xor
dec
jae
adc
adc
ret
jno
push
or
cld
cmp
mov
rcr
stos
add
push
push
imul
retfw
aad
inc
xor
push
adc
pop
xchg
shl
es
test
or
mov
sbb
popf
sub
mov
adc
cmp
adc
daa
and
jmp
add
mov
sub
push
adc
cmps
es
adc
pop
loopne
jne
inc
es
mov
sub
add
fist
imul
dec
fisttp
xchg
enter
test
es
xor
mov
gs
xchg
jns
dec
cld
jo
xor
call
lods
jle
or
movs
fstp
or
fidivr
ins
jb
lea
lods
fs
mov
pop
or
add
rcl
les
jns
stos
push
shl
fisttp
rcr
adc
in
enter
fistp
mov
in
mov
mov
cmc
outs
hlt
inc
mov
xor
inc
ror
test
and
add
push
pop
add
loope
jl
nop
mov
mov
mov
add
pop
stos
enter
push
mov
pop
pop
dec
jg
out
cmps
xor
icebp
sbb
xchg
xor
cwde
in
imul
xchg
mov
test
sub
int
mov
add
mov
rcl
mov
dec
push
pop
and
ret
inc
inc
loope
aam
cmps
and
outs
mov
xor
push
xchg
(bad)
xlat
in
xchg
ss
push
(bad)
push
arpl
xor
mov
es
push
and
pop
push
add
cmp
jne
popa
pop
mov
sub
sbb
jl
mov
pop
mov
(bad)
push
add
or
add
aas
gs
int3
gs
test
adc
add
sbb
add
shr
xor
pop
lea
cmc
aaa
add
adc
cmps
xchg
mov
xor
outs
movs
imul
bound
sbb
jp
in
xor
mov
mov
mov
pop
mov
xor
bound
fstp
sub
adc
mov
mov
mov
xor
dec
xchg
pushf
lea
hlt
dec
cmp
ret
loopne
jne
or
(bad)
push
xor
aaa
aaa
fwait
cwde
mov
sub
(bad)
clc
xchg
push
cwde
xchg
popa
js
(bad)
jbe
pusha
jmp
jb
mov
mov
mov
jns
fs
loope
pop
dec
xlat
xor
shl
enter
pop
mov
sbb
mov
repz
xchg
mov
jbe
rcr
or
outs
or
out
in
mov
push
cmp
out
mov
test
test
push
scas
sahf
jnp
adc
cs
xchg
xchg
ror
or
cmp
cmc
and
(bad)
cwde
xchg
jb
cmc
ja
outs
out
dec
ret
inc
repnz
lock
mov
push
inc
cmp
movs
xchg
popa
jge
shl
mov
(bad)
fwait
gs
mov
push
popa
inc
lea
fldpi
lods
push
int3
sub
push
popf
lahf
out
mov
lock
mov
cmp
call
pushf
test
(bad)
ins
xchg
xlat
mov
push
lds
mov
xor
(bad)
adc
and
mov
cmp
(bad)
aam
inc
jl
movs
lock
leave
fwait
clc
push
xchg
cmc
pop
sbb
dec
shl
imul
stc
in
pop
or
rep
out
sahf
cmps
or
retf
add
pusha
mov
mov
das
test
cmp
xor
sbb
pop
popa
mov
jnp
push
mov
add
imul
inc
jmp
xchg
fld
sti
pop
ss
rcl
mul
xor
mov
call
push
add
ja
sub
adc
popa
mov
sub
xchg
xchg
xchg
sub
data16
iret
mov
dec
int3
mov
imul
and
sub
mov
pop
xor
inc
arpl
sahf
test
push
jne
jecxz
sbb
adc
mov
mov
(bad)
sbb
(bad)
mov
jmp
popa
in
retf
retf
(bad)
repz
add
jns
pushf
xchg
dec
xchg
pusha
xor
mov
and
jae
mov
(bad)
and
dec
mov
adc
jge
pop
cs
ret
pop
jno
jb
push
adc
mov
dec
fs
jno
adc
ror
pushf
jge
or
mov
mov
jl
add
mov
fwait
test
mov
cmps
dec
movs
push
std
dec
mov
pop
gs
jp
sbb
or
pop
in
(bad)
fild
adc
add
xchg
mov
out
xor
push
xor
lea
sub
nop
(bad)
fdivr
pop
fstp
sahf
pop
jg
dec
fwait
cld
xor
push
sub
sbb
out
mov
mov
icebp
xchg
pop
mov
push
mov
ss
xchg
mov
mov
inc
imul
cmps
mov
xor
mov
cmps
dec
pushf
in
cmp
mov
cmp
ret
mov
je
mov
jmp
push
out
ficomp
sbb
(bad)
retf
sub
xor
push
lea
mov
dec
lea
cmp
add
cmps
xchg
fnstsw
retf
jnp
inc
repnz
stos
icebp
mov
inc
xor
imul
pushf
xchg
pop
les
pop
cdq
data16
pop
mov
popf
mov
sar
mov
inc
dec
dec
dec
inc
jb
lods
or
les
call
xchg
aam
shl
out
and
shl
jle
mov
mov
not
push
stos
pop
and
jo
test
mov
adc
or
leave
(bad)
fidiv
out
push
push
icebp
or
pop
jbe
cmc
or
pop
sbb
bound
jno
or
mov
loope
jo
add
sub
scas
pop
arpl
jmp
inc
mov
mov
pop
neg
lds
stos
jns
push
in
mov
mov
or
xchg
cmp
mov
and
pop
lods
ror
fisttp
cmp
sub
jp
std
stos
mov
inc
aaa
lods
pop
fisub
cmp
(bad)
mov
std
out
mov
adc
mov
jmp
jle
sar
loopne
pop
cmp
into
add
xor
jle
or
test
xor
mov
in
ret
lahf
mov
inc
cmp
adc
adc
cmp
jl
and
pop
(bad)
stc
cmp
movs
js
lock
add
push
push
adc
xchg
jno
push
mov
cmc
jnp
mov
test
mov
lods
or
fmul
add
add
or
xchg
mov
js
pause
mov
outs
in
push
mov
mov
shl
movs
in
pop
retf
mov
push
jno
pop
adc
adc
bnd
hlt
cmp
xlat
xchg
add
push
add
ror
mov
stos
mov
and
sub
cmp
dec
sub
inc
dec
rol
sbb
jle
sbb
lock
mov
mov
fmul
jle
adc
mov
xor
dec
jb
inc
xchg
and
ret
mov
aam
(bad)
call
inc
pop
push
je
loop
and
rcl
in
das
pop
int
and
cli
sbb
dec
daa
pop
mov
icebp
mov
cmps
nop
xchg
les
repz
xor
daa
pop
sar
inc
lods
adc
int
cmp
test
sub
cmps
das
int3
les
ret
repnz
mov
xchg
(bad)
jg
inc
mov
aad
int
jl
adc
push
mov
add
ds
daa
or
push
xchg
js
sbb
push
and
jmp
mov
push
mov
add
mov
pop
loop
push
cwde
cmp
jmp
jmp
pushf
out
cs
add
mov
sbb
loop
fwait
cmp
xchg
sub
or
push
fsubrp
je
out
mov
nop
pop
stc
mov
or
xor
push
dec
jle
pop
iret
inc
ins
cdq
stos
and
call
push
sub
in
int
adc
pop
jae
pusha
xor
xchg
sub
cmc
inc
in
mov
outs
pop
fcmovnu
stos
mov
cs
ret
sbb
into
shl
pop
lahf
mov
stos
xchg
fiadd
xor
cmp
call
jge
gs
(bad)
idiv
scas
xchg
sbb
int3
imul
(bad)
push
inc
mov
ins
jge
das
test
sbb
arpl
sub
imul
jecxz
sti
push
hlt
xchg
fnclex
sbb
mov
cmp
movs
jge
stos
out
loope
cwde
mov
mov
mov
dec
mov
popa
(bad)
jecxz
sbb
pop
js
addr16
cmps
aas
mov
lahf
in
movs
dec
jmp
or
sti
gs
sub
adc
mov
dec
outs
sub
cwde
outs
and
ins
cdq
push
or
aaa
test
shl
jle
inc
xor
mov
inc
mov
sub
enter
popf
(bad)
sbb
arpl
sub
jbe
js
mov
imul
jb
inc
mov
xor
jecxz
sbb
ins
stos
cmp
pop
ficom
push
jecxz
hlt
sub
or
xor
xchg
dec
cld
xchg
jmp
jl
sub
add
int3
mov
mov
pop
imul
pop
jnp
jo
rcr
jg
arpl
lods
fimul
and
inc
icebp
sahf
outs
or
push
push
cmp
or
fist
inc
and
mov
nop
mov
lods
mov
sysret
inc
test
inc
xlat
pop
add
add
xor
pop
in
pop
(bad)
dec
sbb
sub
cmp
inc
dec
daa
test
add
xor
mov
mov
inc
mov
xchg
or
outs
xchg
icebp
hlt
push
shl
xchg
pop
dec
repz
out
(bad)
ret
(bad)
pop
gs
add
push
repnz
arpl
repnz
adc
pop
ret
mov
call
imul
jb
dec
dec
lods
fcom
mov
das
sub
inc
movs
jne
cmp
out
(bad)
mov
icebp
int3
push
hlt
jo
(bad)
aaa
fisttp
mov
icebp
fsubr
xchg
call
(bad)
or
xchg
mov
(bad)
add
lods
xor
je
mov
push
add
pushf
outs
ds
xor
and
movs
cs
imul
jl
out
outs
sbb
inc
test
aad
cs
push
dec
cmp
pushf
xlat
int
std
inc
clc
mov
add
dec
inc
addr16
(bad)
pop
mov
dec
cdq
ins
push
mov
mov
in
jae
mov
or
dec
ret
repnz
in
mov
xchg
popf
xchg
mov
call
xchg
fs
fisttp
add
mov
adc
inc
mov
sub
stos
not
push
int
jle
out
push
adc
cs
jmp
jl
xchg
push
lods
fidivr
mov
sbb
loopne
dec
xchg
xchg
push
cmp
xchg
out
jmp
sar
fcmovnu
cmp
mov
or
es
jae
cmps
xor
mov
mov
int
test
jge
push
and
jmp
outs
cdq
aaa
sub
cmp
xor
xor
ins
xor
inc
jmp
push
mov
test
leave
dec
sub
mov
sbb
aam
push
out
xor
push
mov
icebp
ror
lds
mov
int
popf
shr
mov
(bad)
pop
cli
jmp
cdq
add
in
movhps
mov
and
push
sub
out
inc
mov
inc
sbb
int
inc
push
cmp
dec
cmp
xor
aam
mov
dec
lods
sti
fadd
das
lds
call
xchg
mov
and
inc
fucom
push
cmp
les
loope
cmp
add
and
jmp
push
pop
out
ins
movs
sbb
dec
sbb
adc
addr16
jecxz
jo
push
cdq
push
arpl
test
and
mov
mov
mov
out
test
ss
addr16
icebp
(bad)
bnd
(bad)
dec
fcomp
push
shr
or
int
jge
fwait
sbb
jmp
inc
pop
add
popf
mov
inc
jno
cmc
sub
icebp
ins
out
dec
add
and
arpl
and
pop
cmp
cs
sbb
inc
ins
pop
xchg
(bad)
stc
push
ret
sub
daa
jmp
mov
jne
cmc
dec
dec
jp
imul
jle
sahf
bound
xor
shr
js
lods
jle
cmps
jno
cmc
pusha
ret
and
or
mov
jns
fdivr
jp
out
das
pop
cmp
or
loopne
inc
sub
sti
pop
dec
arpl
mov
mov
push
adc
adc
fstp
xchg
pop
push
xchg
or
inc
sub
mov
dec
or
push
test
or
jecxz
outs
pop
push
jnp
sbb
rcl
cmp
cmp
mov
jbe
and
sahf
mov
fimul
sub
loop
push
in
in
imul
adc
sbb
ror
adc
jno
pop
stos
pop
nop
mov
lahf
ins
into
test
jb
add
cmp
repnz
dec
pop
dec
stos
cli
and
dec
aaa
fst
movs
sub
or
cmps
mov
in
fld1
mov
fcomp
popf
xor
cwde
sub
dec
cld
mov
imul
(bad)
push
int
sbb
fistp
outs
mov
add
mov
add
xlat
cmp
add
and
(bad)
imul
xor
mov
in
push
adc
jnp
adc
push
push
jle
jne
pop
cmp
adc
adc
ret
fstp
and
push
push
outs
mov
bound
xor
cdq
(bad)
stc
int3
push
fadd
xor
pop
jne
rol
push
pop
movs
cmp
enter
cmp
sub
pop
xrelease
dec
cmp
retf
fadd
sbb
cld
cs
or
fiadd
je
or
pop
fdivp
dec
adc
mov
push
cli
(bad)
rcr
test
mov
in
jl
sub
dec
sub
push
call
int
cs
mov
cmp
in
mov
or
dec
jmp
jne
les
xor
xor
xchg
leave
cmp
scas
mov
xchg
in
sub
stos
xchg
jmp
and
repz
test
mov
mov
cdq
data16
rol
addr16
loope
rol
aad
iret
and
and
(bad)
gs
cmps
sbb
mov
fcmovu
add
addr16
mov
into
xor
out
push
dec
fwait
mov
add
cwde
push
dec
and
jp
leave
pop
cmp
outs
or
out
sub
xchg
loope
loop
push
lods
test
out
aaa
add
(bad)
sbb
lahf
lock
aad
bnd
cli
lahf
push
cwde
cmps
cmps
or
mov
les
or
fmul
cmc
dec
int
(bad)
mov
js
sahf
mov
ret
out
lods
in
sbb
adc
cmp
dec
push
jo
lods
pop
test
adc
jl
or
mov
lods
out
dec
and
jle
arpl
xor
leave
retf
add
loope
and
retf
gs
or
(bad)
out
dec
mov
and
movs
cld
add
dec
fwait
mov
jb
push
push
mov
cli
cmp
js
jb
xlat
inc
ins
mov
test
mov
add
repz
lock
punpckhbw
loop
sbb
jp
sahf
mov
inc
jbe
adc
fidivr
jecxz
fs
retf
push
push
shl
std
mov
dec
inc
mov
cmp
das
and
dec
add
jmp
repnz
xchg
inc
inc
in
stos
scas
invd
pop
and
aam
jne
add
jno
repz
mov
pop
popf
xor
jmp
sbb
cli
adc
bound
mov
stos
ins
mov
mov
imul
je
ss
cmps
or
mov
push
loop
iret
pop
dec
sub
jae
sbb
sub
push
scas
mov
sub
shl
xchg
cmc
enter
inc
mov
push
dec
fwait
retf
mov
lods
stc
fcom
sub
sbb
call
dec
shr
pusha
imul
jge
pop
in
add
push
loope
dec
push
or
loop
rcl
in
jp
(bad)
fcomp
cmp
cmps
and
(bad)
sbb
jae
cmp
cld
push
jg
call
add
lods
jo
hlt
outs
arpl
and
pop
mov
mov
je
out
cmp
mov
push
stos
mov
call
fdiv
pop
jns
inc
(bad)
xor
xchg
jle
adc
mov
ret
fdivr
and
in
jmp
(bad)
hlt
pushf
out
loope
adc
inc
mov
push
and
jmp
push
or
add
packuswb
jmp
xchg
test
push
jae
loope
nop
in
inc
pop
dec
inc
jno
shr
cli
and
pushf
push
jmp
and
in
cmps
and
mov
sbb
or
pop
ret
fdivr
js
jb
inc
(bad)
daa
imul
adc
js
pushf
dec
int
repz
mov
fldl2t
push
pop
fsubrp
lea
out
es
addr16
mov
mov
xchg
in
cdq
movs
add
mov
ja
inc
cmps
jmp
sub
xchg
fdiv
pop
mov
sbb
outs
call
in
ins
inc
sub
jecxz
addr16
push
sbb
sub
(bad)
xor
out
push
test
ja
seta
outs
mov
pop
fcmovnu
mov
cmp
out
xor
dec
sahf
pop
test
scas
pop
pop
push
rcl
jmp
scas
mov
shl
movs
inc
unpcklps
cdq
arpl
xchg
push
mov
movs
and
sbb
cs
rcl
in
xor
and
fisub
cmps
clc
cmp
repz
mov
push
sub
jne
dec
mov
xchg
and
imul
jmp
xchg
icebp
add
sbb
cdq
dec
pop
push
aad
jns
mov
or
inc
adc
mul
mov
add
outs
in
ret
pop
pop
mov
je
fild
sbb
jae
xor
mov
pop
jae
inc
sbb
das
fcomp
add
stos
rcr
inc
popa
pushf
pop
push
sub
int3
ret
ins
mov
mov
push
rol
mov
jb
or
mov
ficom
dec
jp
rcr
dec
xchg
sar
or
pop
je
ret
push
fld
pushf
out
inc
cmp
ror
jmp
not
or
stos
xor
pop
ret
mov
mov
pop
xsha1
jae
repnz
push
jl
lods
pop
or
idiv
iret
dec
outs
mov
push
push
sub
or
arpl
rcr
xor
jp
jp
int
inc
pop
cmps
push
jno
addr16
sbb
sub
test
sar
cdq
dec
cwde
pop
push
inc
jmp
in
cmc
call
scas
mov
mov
inc
mov
jmp
popa
mov
cmp
lods
xchg
cmp
jmp
push
aam
inc
or
repnz
and
or
pop
fwait
movs
add
add
out
pop
daa
loop
or
cmp
fldenv
dec
out
lds
icebp
push
mov
in
mov
or
repnz
push
add
stos
mov
and
sbb
sbb
or
fimul
inc
ficomp
sti
(bad)
fst
jns
(bad)
jle
xor
sub
and
jae
sbb
ficom
into
retf
icebp
iret
scas
push
je
int
ret
mov
sbb
test
scas
xor
fsub
hlt
jle
scas
cdq
adc
int
out
test
xor
(bad)
les
adc
push
sub
mov
xchg
out
nop
sub
add
out
sbb
ret
test
shl
out
mov
jmp
shr
je
fxch
outs
cmp
mov
pop
js
outs
mov
(bad)
movs
fucomip
adc
repnz
rol
dec
mov
movs
cmp
lds
inc
out
aad
imul
lods
xor
cmp
icebp
cmps
push
inc
hlt
aam
(bad)
hlt
mov
gs
fxch
sahf
scas
mov
add
pop
lds
sbb
pop
in
dec
inc
movs
cmc
jns
std
jmp
sbb
lods
mov
(bad)
mov
out
ds
adc
rol
jb
add
lea
test
jge
movs
mov
std
ret
mov
xchg
mov
xor
xchg
out
aad
ins
cmps
fisubr
pop
pop
push
mov
sub
add
pushf
mov
pushf
add
cmps
xchg
pop
ins
out
push
cmc
mov
test
aas
(bad)
cmp
stos
pop
mov
xchg
add
dec
xor
lea
cmp
cmps
sar
mov
pop
ret
cwde
bound
sub
jmp
ret
mov
lock
jg
fwait
and
out
imul
pop
loope
adc
icebp
ret
ins
(bad)
jnp
mov
addr16
out
les
in
mov
fiadd
shl
pop
aas
in
pop
pop
mov
xchg
sub
push
ins
popf
ror
or
call
fnsave
pop
jecxz
rol
cs
fdivr
imul
jns
int3
mov
pop
pop
or
push
mov
bound
in
dec
fwait
mov
dec
loopne
and
cmp
es
fwait
xor
add
and
and
pop
fsubp
mov
mov
ins
sbb
push
jl
jmp
gs
fcmovne
dec
xchg
mov
jmp
inc
cli
or
int
daa
pop
clc
int3
(bad)
cmp
pop
cmps
fstp
lea
aam
or
cmps
add
test
push
repnz
xor
ins
out
and
jmp
push
mov
dec
mov
jmp
neg
retf
(bad)
cmp
cmp
loope
les
xchg
push
pop
push
sub
inc
movs
add
movs
xchg
mov
js
cwde
dec
jp
and
fmul
out
sbb
mov
xor
test
in
or
push
sbb
imul
xchg
jl
push
pop
add
(bad)
mov
xor
mov
sub
test
inc
xor
neg
das
js
imul
push
hlt
mov
pushf
push
gs
cmp
fs
in
pop
push
add
pop
add
(bad)
mov
jno
fadd
retf
imul
fild
aas
or
jns
fdivr
test
xchg
push
fdivr
iret
inc
and
dec
ins
mov
repnz
fwait
cdq
sub
xlat
xchg
pop
fwait
lods
dec
sub
pop
lahf
xor
pushf
mov
and
adc
ficomp
sbb
repnz
ret
jge
cld
sahf
cdq
cmc
xor
cmp
out
and
push
and
or
rcl
imul
xchg
sbb
push
rcr
neg
lds
pop
cmp
jno
imul
add
out
mov
jae
in
adc
enter
sbb
rol
mov
sbb
int
or
xor
movs
ds
sub
enter
jns
cmp
lea
imul
call
mov
cwde
xchg
je
psrlw
and
int3
push
in
or
mov
mov
in
ss
pop
and
inc
jo
loope
sar
add
int3
and
jl
ret
neg
or
xlat
retf
xchg
mov
and
adc
aaa
pop
stos
add
xchg
push
xor
adc
push
dec
ds
dec
xchg
pop
add
inc
add
ret
fild
push
or
mov
xchg
cmp
mov
loop
xchg
push
sbb
mov
mov
sub
xor
jecxz
push
pop
fld
call
pop
xor
add
xchg
sbb
std
push
jl
test
sub
std
js
fisttp
rcr
mov
or
stos
loopne
out
ret
cmps
pop
mov
mov
pusha
lahf
cmp
inc
push
or
and
adc
add
jmp
test
popf
retf
gs
daa
xchg
cmps
xor
mov
dec
or
push
lods
mov
sbb
push
adc
adc
xor
jl
(bad)
js
xchg
adc
inc
sbb
ins
pop
test
repnz
fistp
push
or
mov
or
call
lock
jo
jno
xor
popa
not
cmp
and
fnsave
xchg
fwait
dec
add
test
in
adc
fsubr
adc
xchg
add
sar
jb
rcl
ins
imul
xchg
xchg
daa
inc
mov
aas
add
push
pop
dec
loope
mov
push
mov
mov
pop
ror
fnstenv
in
clc
xor
jmp
push
pop
dec
data16
mov
ret
call
jg
(bad)
mov
call
and
ins
push
dec
aaa
xor
inc
or
loopne
test
xor
push
shr
xchg
cmp
cdq
(bad)
add
lahf
xor
lahf
dec
mov
push
pushf
jg
pop
gs
test
arpl
sbb
or
aaa
aas
jge
sub
inc
push
fs
push
das
pop
jle
je
repz
mov
lahf
pop
fmul
push
fucom
mov
in
imul
call
fld
cli
ds
pop
int3
push
xchg
mov
je
clc
jno
mov
mov
jae
test
out
xor
pop
or
shl
scas
or
jl
shl
data16
mov
mov
sbb
push
xor
xchg
fwait
cmp
std
aam
inc
jno
dec
cmp
mov
jmp
arpl
mov
aad
test
in
or
mov
dec
cmp
mov
inc
(bad)
mov
pop
mov
mov
pop
lods
jl
repnz
xor
ins
sbb
adc
(bad)
xchg
pop
mov
loope
cs
retf
in
cmp
cld
mov
adc
push
(bad)
xchg
into
adc
or
mov
push
rol
xchg
pop
sub
in
push
iret
fmul
mov
pop
push
adc
pop
mov
fisubr
adc
out
sub
pop
sar
pop
xor
and
sbb
addr16
sbb
sbb
ins
aaa
cwde
dec
cmc
fstp
test
std
mov
popa
mov
and
sub
adc
inc
test
sub
repnz
out
adc
sub
adc
stc
ins
cmp
out
mov
iret
test
mov
xor
mov
stos
test
push
into
test
test
fbstp
sub
outs
inc
jp
inc
adc
mov
mov
push
std
xchg
xor
aas
pop
or
and
retf
jno
repz
jno
push
and
out
test
ss
sub
mov
aas
lock
mov
dec
mov
dec
dec
and
ins
add
jecxz
sbb
repnz
add
(bad)
cmps
loope
xor
daa
std
out
in
and
dec
mov
jo
xor
ror
pusha
loop
or
dec
adc
sbb
mov
inc
int3
or
dec
adc
les
(bad)
mov
sub
mov
jmp
pop
jp
inc
mov
cmc
aad
sub
outs
cs
out
std
and
cdq
cmp
push
fcomi
or
xlat
(bad)
adc
and
loopne
mov
sbb
inc
es
and
div
pusha
pop
stc
stos
loop
xor
call
mov
out
mov
and
out
mov
lea
aam
sub
gs
inc
dec
mov
add
(bad)
repz
shr
or
enter
push
mov
aaa
push
in
or
cmp
adc
push
jge
sbb
jp
mov
dec
or
push
and
les
daa
ins
shl
push
add
pop
test
ins
ret
div
test
dec
test
xchg
mov
es
ins
ss
icebp
or
into
and
stos
dec
ins
or
(bad)
adc
jo
sub
in
sahf
dec
loopne
js
or
cld
cmp
sub
fadd
jae
inc
(bad)
or
ror
pop
adc
mov
addr16
pop
test
dec
scas
cdq
dec
loopne
mov
arpl
call
stc
inc
pop
xchg
je
inc
lods
lods
xchg
sub
aas
mov
cmp
cli
cli
fcom
push
mov
cmp
pop
adc
lods
jo
in
fcmovnb
mov
add
mov
mov
repz
ja
dec
pop
xchg
or
cmp
sub
pop
pop
push
cmc
mov
repnz
adc
add
pop
jg
push
ret
sbb
cmp
daa
sbb
dec
and
dec
cmp
mov
ins
in
pop
adc
jge
xchg
xlat
je
arpl
imul
leave
aas
stos
mov
jae
das
sahf
je
in
and
dec
jno
mov
shl
push
packssdw
cld
hlt
add
push
jo
inc
pop
aas
xor
in
push
mov
mov
scas
test
sub
or
mov
add
xchg
jo
hlt
xor
fild
xor
rcr
aaa
mov
sub
cli
outs
sub
fwait
aaa
int
test
or
mov
cmp
out
rcr
mov
call
adc
adc
inc
stos
in
adc
mov
push
mov
stos
cmp
cli
test
ja
ins
in
xlat
rcl
clc
and
push
ret
pop
adc
outs
xor
bound
retf
sub
loop
mov
jg
pusha
push
test
mov
jne
outs
push
int3
lock
repz
mov
and
mov
pusha
aad
cmp
imul
into
inc
add
movs
(bad)
test
into
mov
cs
cmps
or
icebp
std
call
leave
fmul
shl
scas
inc
fild
aad
jge
push
mov
push
or
mov
fwait
ss
out
mov
mov
mov
sar
or
add
in
lods
test
jg
inc
lea
sti
shl
out
(bad)
cli
jne
mov
pop
pop
inc
les
xchg
sti
ja
mov
fs
push
mov
mov
mov
xchg
or
mov
mov
into
push
pop
cmc
cmp
rol
movd
xchg
(bad)
pop
and
(bad)
stc
daa
inc
fdiv
jl
push
cwde
cmps
jge
or
cmp
loope
adc
fcom
xchg
mov
data16
leave
pop
out
pop
lea
fwait
test
dec
cmp
sub
and
scas
movs
neg
dec
je
and
and
jnp
addps
div
adc
int
sbb
push
stos
sub
mov
push
movs
xchg
fsubr
mov
push
jae
cmp
sbb
repz
jecxz
mov
push
mov
dec
push
sbb
jge
movs
hlt
mov
jns
mov
push
pop
ficom
push
mov
push
mov
mov
jg
mov
addr16
cmp
cmp
fild
sbb
ja
push
mov
mov
mov
stc
adc
xor
xchg
pop
inc
test
or
fisttp
mov
out
jo
add
imul
sti
test
cdq
push
not
xchg
adc
cs
enter
test
pop
jle
jecxz
cwde
mov
or
daa
shr
cmp
inc
adc
push
push
lods
and
mov
dec
in
inc
retf
push
cli
pushf
push
xchg
push
mov
fdivr
mov
(bad)
push
push
fsub
dec
mov
movs
fmul
adc
dec
add
dec
inc
xsave
inc
rol
out
stos
cmp
iret
sbb
test
jnp
pop
out
cmp
jbe
mov
mov
inc
push
ds
clc
mov
outs
xor
xchg
and
mov
je
mov
xor
es
add
fild
pop
(bad)
adc
xchg
movs
out
mov
sub
cs
out
xchg
xchg
icebp
mov
inc
pushf
or
movs
push
adc
fisttp
dec
cdq
fsub
ja
mov
popa
fisub
(bad)
out
frstor
jg
jns
daa
push
in
or
add
int3
or
stos
pusha
jg
sahf
cmp
or
adc
and
xor
loope
pop
sub
rcl
jae
mov
xchg
sub
mov
pop
ss
jl
rol
dec
daa
ins
aas
xchg
inc
pop
and
xor
sbb
in
mov
pop
jns
addr16
or
jb
ja
or
xor
add
sub
(bad)
lea
mov
xlat
das
(bad)
rcl
cli
sar
jg
daa
mov
mov
ins
jno
mov
daa
movs
xor
sbb
cld
sub
xor
push
inc
mov
out
xor
outs
test
imul
xor
mov
adc
lods
cmps
retf
ins
dec
test
(bad)
jb
and
sti
inc
mov
xlat
ds
xor
popf
jl
add
push
jmp
out
jo
mov
and
or
inc
cmp
dec
test
adc
gs
shr
cmps
xor
xchg
sbb
lahf
out
ins
repz
stc
in
xchg
xor
mov
sbb
out
sub
shl
out
ins
mov
xlat
mov
sbb
(bad)
test
popa
pop
into
pop
push
sti
sbb
fist
fisub
pop
pushf
aas
outs
cmp
sub
cmp
ss
mov
jmp
loope
xor
sbb
clc
push
retf
pop
xor
jg
bound
jle
adc
cmp
sbb
pop
adc
ss
cmp
fadd
push
add
mov
sbb
lahf
dec
addr16
std
mov
xchg
out
in
mov
lock
mov
xor
sub
adc
into
nop
into
int
(bad)
jns
sub
cmp
js
es
in
rcr
xchg
pusha
loopne
scas
jns
aas
sub
lahf
retf
sub
data16
push
sqrtps
inc
add
pop
sub
retf
mov
jmp
dec
test
jns
shl
loopne
dec
ja
adc
xor
inc
sahf
inc
in
or
aad
dec
add
dec
sub
imul
mov
outs
inc
lods
cmp
sahf
mov
cmp
(bad)
es
adc
mov
pop
xchg
mov
or
cmps
fwait
stos
dec
cmp
pop
ret
xor
scas
sar
push
xor
sahf
sbb
aam
leave
punpckhbw
out
(bad)
pushf
sub
je
xchg
add
in
jno
out
mov
xchg
fisubr
xchg
push
cmps
jecxz
inc
sar
fst
jge
ret
inc
jno
xchg
(bad)
fadd
fucomip
xor
xchg
pop
mov
retf
rol
outs
jp
in
dec
rcr
ficom
test
cwde
aam
test
pop
loope
bound
jb
mov
ds
daa
dec
pop
clc
adc
(bad)
xor
outs
aas
and
add
pop
rcr
(bad)
push
jp
mov
cmp
mov
sub
push
int3
mov
push
or
pop
xor
popf
or
dec
push
scas
mov
cld
or
push
inc
retf
fisubr
adc
xchg
rcl
(bad)
sahf
addr16
test
ret
push
retf
push
scas
push
icebp
inc
jp
bound
jb
imul
inc
push
mov
and
adc
enter
nop
jmp
daa
scas
loope
je
push
xor
push
mov
mov
jne
hlt
lea
or
adc
sbb
mov
repnz
sub
cld
mov
dec
adc
cmc
shl
bnd
xor
inc
dec
or
sar
mov
out
std
pop
jg
lock
cmp
dec
or
ins
add
push
fsubrp
scas
dec
xor
push
adc
xchg
adc
fisttp
rol
sub
inc
xor
nop
cmp
sub
retf
mov
jo
push
and
leave
sahf
xor
adc
out
mov
clc
jp
fdiv
mov
xor
mov
inc
sub
jmp
and
inc
pop
sbb
add
jns
pop
mov
and
adc
nop
pusha
setae
or
sbb
mov
lods
add
dec
dec
jae
cmp
scas
movs
jle
pop
mov
dec
mov
mov
xor
xchg
lock
ret
dec
xor
ror
adc
xchg
imul
lds
sti
cli
clc
push
movs
test
xor
movs
out
mov
ret
(bad)
mov
stos
and
test
cmp
cdq
jo
xor
pop
in
xchg
or
test
jecxz
jb
pop
adc
jbe
popa
sub
aas
adc
dec
and
jbe
gs
pop
sahf
mov
sbb
lods
in
shl
xor
popa
pop
iret
dec
and
fadd
idiv
hlt
int
mov
mov
aas
cmp
(bad)
mov
retf
mov
pushf
sub
sub
dec
dec
icebp
dec
stc
sahf
(bad)
out
push
ror
mov
jmp
js
xchg
out
frstor
int
aaa
out
outs
fist
into
pop
loope
push
jbe
cmp
push
cmp
push
in
or
xchg
add
out
or
sbb
mov
adc
jl
std
mov
add
movs
sub
mov
mov
gs
or
push
out
bound
jnp
repz
sbb
sbb
imul
dec
sti
and
hlt
lods
fmul
and
push
repz
sub
test
cli
dec
lods
arpl
cmp
push
(bad)
in
pusha
arpl
std
jmp
fisub
push
mul
in
js
iret
push
dec
jl
cwde
jmp
adc
dec
add
mov
popf
add
out
and
and
sbb
inc
xchg
fimul
sub
lock
jno
jmp
mov
fbstp
mov
pop
scas
xor
imul
(bad)
out
cdq
ret
ret
jge
outs
ret
and
cs
out
jno
mov
push
test
in
inc
scas
dec
dec
push
dec
or
int
xor
mov
repnz
add
xor
int
test
xcrypt-ecb
jmp
int
push
jle
sub
cli
xchg
jl
xor
dec
gs
jge
movs
int3
mov
test
push
jmp
mov
adc
xchg
inc
push
pushf
retf
popa
or
js
test
mov
and
mov
and
sbb
push
cvtps2pi
pop
popf
(bad)
sar
dec
pop
pop
fistp
push
fbstp
and
jb
sub
xchg
xchg
mov
outs
aad
mov
sub
pop
outs
cdq
repz
mov
ficom
xchg
loop
pop
daa
mov
cmp
fnstcw
out
inc
pop
mov
xchg
js
jb
addr16
das
mov
push
or
push
leave
(bad)
out
hlt
push
fldenv
inc
jp
dec
mov
jle
push
fist
lea
cdq
ficomp
out
adc
lods
dec
xchg
push
mov
pop
retf
and
mov
and
ret
sbb
jl
sbb
mov
push
sbb
push
repz
imul
cmps
(bad)
sub
in
pop
cmps
and
mov
icebp
mov
sbb
shl
push
call
and
cs
scas
retf
int
dec
or
add
cmc
mov
push
outs
jl
loop
adc
xchg
out
outs
aas
les
imul
and
loop
xor
imul
fnsave
sub
ds
mul
mov
scas
(bad)
or
int
popa
cmp
mov
cmps
dec
pop
in
and
xchg
jbe
push
cli
in
and
jecxz
cmp
or
or
xor
adc
sub
out
xchg
imul
lock
(bad)
lods
cmp
mov
inc
jno
sub
dec
pop
jp
or
add
test
mov
mov
scas
and
call
sub
test
fadd
dec
mov
add
popa
inc
int
pop
aas
mov
lods
lahf
adc
sbb
lock
dec
push
ss
and
xor
push
push
pop
retf
xchg
pop
and
sub
mov
les
(bad)
ficom
push
dec
loope
dec
sbb
fdivr
outs
dec
mov
dec
das
aas
jmp
imul
imul
mov
fwait
cmp
xor
dec
push
clc
sub
jmp
sub
je
or
or
lods
repnz
jp
mov
xor
xchg
icebp
mov
dec
imul
cmp
(bad)
(bad)
and
xchg
fiadd
push
outs
jecxz
call
add
das
lods
lahf
jo
lea
adc
adc
mov
mov
mov
pop
ins
into
fimul
xor
add
xor
or
pop
ins
xor
xchg
cld
mov
bound
sub
ror
push
mov
push
xchg
jcxz
outs
inc
ins
cmp
scas
icebp
dec
inc
dec
sub
sbb
adc
mov
dec
aam
mov
fadd
inc
xchg
mov
nop
or
fbstp
pop
fistp
mov
in
int3
in
mov
leave
hlt
jl
fisttp
sbb
lods
mov
mov
pop
loopne
in
xchg
cmc
call
movs
ins
fs
loope
and
cmp
fild
clc
into
inc
add
rcl
xor
jno
lea
loop
add
mov
(bad)
sbb
xor
adc
ja
pop
xchg
mov
mov
jge
pushf
in
cmp
aad
jno
xchg
cmp
mov
add
push
push
ins
cmc
adc
push
push
inc
dec
cmps
mov
adc
sbb
sub
push
hlt
call
fbld
mov
mov
xor
mov
cmp
jae
or
cdq
mov
enter
in
sbb
in
inc
loop
shr
stos
pop
or
aaa
xchg
dec
jle
jg
jmp
not
push
retf
mov
bound
adc
(bad)
neg
mov
lock
mov
xlat
std
ror
test
test
aam
mov
ror
out
jp
dec
sti
mov
arpl
(bad)
mov
mov
add
test
xor
pop
sahf
rcr
fisttp
mov
arpl
mov
es
movs
stos
repnz
stc
retf
cmp
mov
mov
pop
push
cld
jecxz
sbb
inc
pop
cs
add
aas
ror
add
data16
cli
cmp
(bad)
pop
pop
hlt
cmp
add
mov
mov
pushf
mov
bnd
dec
jge
cdq
lods
and
scas
cmps
std
cmp
aas
mov
sbb
cli
out
outs
push
mov
fdivrp
adc
aad
xchg
sbb
cmp
sbb
daa
or
dec
mov
and
dec
retf
inc
popf
inc
mov
div
fdiv
mov
and
cdq
out
dec
pop
(bad)
ror
ficomp
aam
sbb
push
inc
popf
fld
mov
(bad)
mov
xor
add
inc
jno
mov
jne
dec
and
das
or
popf
mov
cli
out
xchg
sbb
addr16
test
ret
test
(bad)
pop
ja
or
jmp
call
mov
push
mov
or
(bad)
sub
fwait
ja
xchg
inc
arpl
outs
inc
retf
retf
lods
sbb
fs
xchg
jmp
cmp
outs
xor
enter
sbb
xor
fsubr
or
aaa
arpl
es
retf
lods
stos
dec
mov
mov
push
mov
js
jae
inc
add
xor
retf
(bad)
mov
push
out
dec
push
jb
push
test
clc
(bad)
pop
adc
xchg
sbb
xchg
mov
ds
or
sbb
or
inc
outs
mov
dec
jmp
in
inc
in
fwait
inc
mov
xlat
xchg
mov
popa
lahf
cmp
mov
add
popa
add
push
fimul
scas
cmps
movs
adc
push
dec
pushf
mov
arpl
inc
(bad)
clc
outs
jns
addr16
mov
mov
je
adc
xor
dec
jno
xchg
cwde
imul
sub
ret
shr
pop
(bad)
call
inc
aas
outs
mov
pop
mov
addr16
sub
sbb
in
mov
int
jmp
adc
mov
mov
mov
and
stc
jge
xor
push
mov
xor
setnp
mov
push
add
cmp
inc
out
cld
lock
int3
inc
mov
outs
mov
and
lea
fucomi
sub
jle
and
add
or
arpl
dec
shl
adc
mov
mov
call
test
pop
or
xchg
pop
pop
shl
mov
jl
int
sub
out
push
xor
xor
popa
push
push
jo
out
shl
mov
cmps
cmp
icebp
jp
push
out
leave
or
mov
cld
push
sub
or
retf
push
mov
add
gs
cmp
in
data16
(bad)
mov
jmp
mov
scas
sub
dec
cmps
mov
ret
adc
mov
cdq
leave
mov
xchg
ins
cmc
adc
xor
enter
cmp
popa
adc
fnstenv
icebp
mov
out
add
test
xchg
arpl
sbb
and
pop
clc
shl
neg
jle
add
cmp
push
sbb
popa
jmp
xor
(bad)
pop
jno
xor
adc
dec
pop
aad
cdq
adc
cld
lods
dec
add
adc
imul
scas
and
add
call
xchg
fcomi
lds
and
iret
inc
mov
aad
adc
dec
or
ins
hlt
fadd
iret
adc
or
push
scas
repz
mov
mov
stc
adc
push
pmuludq
cmp
pop
int
into
lock
outs
push
pop
and
lds
mov
xchg
pop
and
repnz
stos
popa
popa
jno
(bad)
arpl
sub
(bad)
cmp
push
cmp
xchg
mov
movs
push
xchg
mov
mov
jae
cs
pusha
(bad)
sub
sub
sub
push
and
stc
clc
adc
sub
and
mov
mov
test
adc
mov
dec
push
lods
inc
(bad)
mov
xor
scas
sub
lods
xlat
mov
sbb
xor
(bad)
jbe
loope
movups
iret
cdq
test
lea
dec
lock
push
sub
mov
loope
(bad)
mov
xor
aaa
int
in
sub
dec
jbe
not
add
sti
xchg
dec
sbb
cmp
and
clc
fwait
add
sar
xor
icebp
mov
mov
outs
mov
inc
push
xor
mov
mov
out
mov
mov
mov
inc
aad
lahf
mov
mov
push
daa
or
sbb
cmp
mov
outs
lahf
(bad)
popa
jno
bound
addr16
jb
xchg
scas
lods
pop
push
and
test
or
in
jl
pop
popf
adc
push
lea
inc
imul
mov
mov
(bad)
iret
inc
xchg
data16
fcmovb
xor
sub
cli
inc
das
test
xor
cmps
mov
or
add
pop
retf
inc
(bad)
ja
sub
add
xchg
stos
fld
retf
cmps
sti
mov
mov
rcr
dec
push
test
sub
jmp
jmp
fdivr
xchg
sbb
xor
bound
stc
lea
jecxz
mov
mov
div
sbb
out
shl
xchg
add
or
enter
nop
shl
jb
imul
push
imul
mov
jle
mov
mov
call
int3
xor
or
mov
sbb
cmps
imul
outs
and
xchg
jmp
sub
push
jbe
or
xor
dec
int3
inc
push
mov
cmp
(bad)
jmp
push
fisttp
sbb
or
loope
fs
outs
jmp
sub
or
cmps
popa
dec
adc
adc
xchg
sahf
xor
jge
sar
hlt
ins
cdq
dec
pushf
(bad)
(bad)
pop
fsubrp
adc
call
retf
pop
mov
cmps
mov
sub
push
retf
rol
mov
mov
mov
pop
ss
fsub
xchg
add
add
lsl
fsubr
scas
pushf
jb
sbb
sar
test
xchg
shl
jl
sub
push
xchg
dec
jbe
sbb
das
int
leave
stos
imul
mov
aam
fdivr
es
mov
(bad)
pushf
fisub
xchg
loope
daa
pop
dec
ficom
mov
inc
int3
leave
call
scas
cld
cld
inc
lahf
cmp
sub
scas
add
out
jmp
(bad)
in
test
retf
cmp
movs
push
iret
inc
xchg
mov
xchg
fsubr
leave
pop
xor
int3
(bad)
jns
inc
sahf
push
mov
dec
jbe
push
mov
push
mov
test
out
or
fs
pop
int3
stos
mov
mov
push
cdq
jbe
int
movs
cmp
mov
xchg
mov
daa
adc
dec
scas
scas
gs
pop
sbb
dec
pop
dec
dec
xor
scas
xor
call
push
movs
xchg
xchg
stc
add
mov
or
add
xchg
ja
add
adc
inc
mov
fcmovu
lahf
mov
xor
out
pop
sahf
sbb
pop
cs
mov
bound
lock
scas
push
mov
or
xchg
fidivr
and
sub
dec
outs
or
in
in
fbld
jl
hlt
ret
mov
adc
mov
or
sub
fcomp
sbb
retf
adc
sub
and
push
imul
mov
lods
dec
lock
loope
outs
dec
jg
mov
jne
xchg
cmc
enter
(bad)
lock
cmp
nop
test
and
(bad)
lods
ss
jae
das
xchg
or
jmp
sub
ror
push
push
(bad)
scas
inc
ror
sub
adc
sub
xchg
out
dec
cmp
adc
stc
shl
pusha
dec
pop
sbb
mov
test
sbb
jl
hlt
aaa
bnd
daa
out
lahf
mov
push
inc
mov
pop
sbb
aaa
sub
stos
mov
sub
sub
nop
jae
dec
call
fisttp
xchg
dec
adc
data16
add
test
push
(bad)
cmp
xchg
retf
push
sbb
xor
js
pop
ds
clc
iret
cmps
and
xchg
mov
lahf
movhps
adc
adc
jmp
dec
jns
and
xor
ja
ins
imul
push
inc
mov
add
(bad)
jle
xor
and
mov
jns
das
lds
mov
mov
movd
or
pop
cmp
int3
xor
pop
xor
enter
sub
dec
(bad)
data16
mov
shr
sbb
xchg
out
cmp
imul
out
sbb
adc
mov
shl
add
hlt
sbb
retf
mov
sbb
push
out
xor
shl
movs
sub
push
push
cmp
das
adc
popa
shr
(bad)
retf
ds
sub
mov
shr
call
data16
add
add
dec
adc
lods
scas
mov
cmps
push
enter
loope
push
nop
or
xor
dec
mov
jns
xchg
scas
test
repz
pop
cmp
or
arpl
je
pop
jge
xor
jbe
ror
mov
mov
cmp
daa
mov
xchg
lds
inc
xor
push
cmps
or
dec
idiv
dec
jb
jo
xchg
dec
mov
push
test
lea
pop
mov
ins
pop
jg
test
das
inc
btc
adc
fwait
pop
push
rcr
mov
in
(bad)
out
or
and
cmp
in
xor
dec
movaps
out
test
clc
repz
shl
and
icebp
lock
inc
js
or
js
xor
pop
stos
xor
or
jmp
jns
push
add
xchg
rol
(bad)
cmp
xchg
adc
xor
mov
adc
jbe
das
inc
cmps
outs
in
neg
cli
aaa
jle
xor
add
out
loopne
jp
in
inc
je
mov
xor
test
mov
adc
lea
ins
mov
mov
(bad)
sub
ins
mov
shl
mov
dec
fst
test
retf
loope
sub
fucom
jnp
cmps
test
and
push
lock
imul
ins
mov
dec
imul
fadd
mov
or
(bad)
push
in
adc
dec
jg
or
or
stos
pop
sti
std
cmp
std
sub
enter
js
ins
push
or
jl
faddp
cs
das
push
xor
les
or
jmp
ins
jle
xor
cld
sbb
stos
inc
not
and
jle
adc
dec
aaa
psllw
call
sub
mov
or
popf
popa
test
shl
mov
cmp
outs
xor
xchg
lahf
mov
mov
rcr
icebp
les
add
and
mov
adc
xor
sub
mov
repz
out
jo
clc
outs
inc
test
cmp
pop
mov
cmp
mov
push
and
cmc
add
dec
movs
sbb
std
add
fistp
rcl
(bad)
enter
iret
dec
and
jp
mov
sub
fist
ins
pop
and
xchg
cmp
leave
in
nop
add
push
leave
push
xor
adc
or
sub
mov
xchg
jmp
push
outs
pop
cwde
pop
(bad)
rcl
and
dec
(bad)
test
ret
cmps
dec
cmps
push
or
mov
rcl
mov
pushw
loop
inc
pusha
or
cs
popf
jbe
aad
loop
repnz
mov
les
push
jge
adc
fidiv
icebp
push
dec
ds
mov
jnp
cmp
or
jle
dec
xchg
mov
mov
jmp
popf
mov
jnp
mov
sub
jle
into
mov
pop
adc
test
fdiv
xor
cmps
add
pop
xor
sub
popa
jno
cwde
test
sub
xor
movs
mov
jl
jge
fmul
xchg
fisubr
pop
mov
movlps
test
icebp
inc
inc
mov
inc
jmp
push
(bad)
sbb
inc
out
mov
mov
sub
cs
mov
cmps
xor
or
(bad)
rcr
mov
aad
mov
call
jb
dec
cld
dec
aam
std
adc
jmp
inc
es
repnz
pop
push
cs
push
pop
and
sbb
xor
mov
mov
sbb
ins
push
aas
push
nop
sbb
mov
mov
mov
pop
jmp
fld
jmp
icebp
jmp
lods
out
test
jecxz
fdiv
or
iret
retf
push
push
rcpps
or
lods
adc
cs
xchg
outs
test
sbb
jne
push
cmp
call
ins
enter
mov
retf
hlt
popa
inc
adc
arpl
sbb
jp
repnz
xor
out
addr16
adc
mov
jge
mov
inc
sub
jno
les
cmp
sahf
sbb
and
data16
out
push
and
mov
or
dec
fdivr
adc
push
jmp
mov
test
mov
xor
adc
scas
jo
loop
fbld
sub
retf
cmps
out
jae
add
ja
into
inc
inc
retf
(bad)
or
pusha
cmps
inc
out
stos
dec
clc
inc
test
push
xor
jno
int3
cmp
jne
add
fdiv
ds
sti
jmp
test
push
test
or
mov
das
sbb
fwait
mov
xchg
cmc
jmp
push
mov
mov
jle
inc
ret
rol
(bad)
mov
(bad)
mov
pop
(bad)
and
jnp
inc
xor
aaa
leave
or
ficom
xchg
lods
call
ror
sub
cdq
xchg
scas
cmp
aaa
xor
pop
bound
xor
retf
pusha
jl
cmp
push
lods
cmp
das
(bad)
cmps
(bad)
cld
sbb
mov
pusha
lea
das
cdq
sbb
(bad)
push
mov
cmp
dec
or
inc
add
or
push
imul
jns
addr16
mov
push
neg
aas
mov
dec
int3
jmp
mov
or
repnz
(bad)
data16
or
xchg
ret
cmp
inc
mov
in
mov
test
pop
push
dec
xchg
jne
addr16
fs
xor
sar
push
aas
jne
xor
fisubr
push
popf
out
pop
add
mov
dec
inc
mov
(bad)
mov
imul
nop
call
sub
xchg
mov
jmp
lea
mov
aam
adc
jbe
dec
shr
jne
add
js
std
je
inc
inc
inc
xchg
inc
cmps
sahf
pop
das
js
and
xchg
cdq
stos
xchg
lock
cld
imul
mov
jnp
je
(bad)
adc
sub
push
ja
rcl
aad
and
adc
stos
sbb
sbb
in
retf
inc
test
push
cmps
mov
and
aaa
ins
int3
(bad)
xchg
div
xchg
(bad)
fisubr
fwait
in
mov
adc
mov
pop
dec
xchg
sahf
nop
mov
stos
lods
cmp
xlat
test
dec
gs
(bad)
rcl
dec
dec
sub
in
pushf
push
aaa
fwait
push
fisubr
retf
xchg
xchg
cmp
es
push
cmp
sub
ret
push
inc
or
mov
(bad)
int
or
sub
and
inc
xchg
cwde
pop
retf
and
pop
jecxz
(bad)
loop
stc
push
pop
cmc
ret
cwde
icebp
in
scas
lahf
lods
xchg
adc
or
cmp
(bad)
dec
inc
data16
bound
fsub
int
push
mov
jmp
and
inc
sbb
push
arpl
addr16
enter
pop
pop
scas
xchg
pop
dec
aad
fidivr
or
add
push
mov
mov
stos
push
icebp
pop
or
leave
push
in
jmp
mov
adc
int
int
push
dec
or
ds
sbb
mov
dec
fidiv
das
imul
add
mov
mov
jb
sbb
sub
sub
add
cmp
mov
inc
or
xor
dec
add
or
dec
lds
xor
aaa
jno
push
and
xor
sub
dec
xor
repnz
cmc
cmp
shl
and
inc
sbb
adc
into
pop
scas
add
pop
mov
jo
inc
mov
in
fidivr
xchg
out
enter
out
inc
mov
test
mov
(bad)
out
xor
or
es
sti
mov
scas
jp
fdivrp
push
mov
icebp
sbb
movs
sbb
cmps
test
pop
mov
push
fadd
sbb
loop
adc
repnz
cdq
(bad)
aam
pop
mov
jp
adc
stos
rcr
or
mov
jne
mov
not
xlat
xchg
icebp
dec
retf
call
jge
mov
jno
inc
std
stos
dec
call
jg
in
call
jl
out
rcl
lock
cs
(bad)
fistp
push
dec
rcl
dec
xlat
adc
jmp
stos
xor
jge
lods
xor
mov
xor
pop
dec
mov
or
inc
cmps
cdq
jle
jae
clc
jle
in
jae
xor
sbb
jnp
mov
pop
add
jmp
shr
lock
nop
adc
adc
pop
inc
fdivr
int
mov
outs
mov
or
in
mov
lods
xor
add
aad
xchg
sar
repz
cs
mov
scas
xor
fsubr
jp
stos
pusha
push
int
cmc
movs
aam
mov
add
sbb
pusha
add
sub
ins
add
jns
and
call
ret
test
pop
je
mov
push
adc
aas
sub
xor
movs
ins
int3
inc
loop
and
movs
faddp
inc
in
dec
mov
fst
mov
push
mov
xor
idiv
cld
push
fld
fldenv
fstp
rol
jge
mov
jo
int
cmp
add
nop
pop
aad
clc
xor
xor
add
or
scas
inc
out
cmp
pop
ret
mov
mov
mov
adc
sub
mov
popf
jae
cmc
aas
sbb
lock
dec
mov
xlat
das
ret
add
jnp
cwde
pop
lahf
enter
cmp
mov
adc
mov
mov
push
push
add
aaa
test
in
or
mov
test
adc
xchg
aas
aad
ins
icebp
push
mov
dec
dec
ret
fnstenv
pop
mov
pop
mov
dec
jle
dec
stc
clc
inc
fimul
jnp
push
xor
ret
int3
call
stc
daa
nop
or
invd
cmp
loope
jne
jecxz
in
test
mov
xor
add
outs
clc
xchg
stos
ds
dec
jbe
das
and
xor
icebp
or
nop
and
loop
dec
test
mov
xor
sar
xor
inc
mov
icebp
mov
inc
pusha
xchg
movs
ror
int
pop
pusha
ret
arpl
fld
out
push
jo
cwde
mov
je
cld
adc
div
adc
aam
push
(bad)
xor
jae
mov
lods
rcl
xchg
mov
stos
call
call
pop
adc
xchg
fnsave
mov
hlt
sbb
xlat
jmp
test
daa
leave
bound
fisub
and
int3
addr16
loop
sub
stc
mov
call
iret
pop
add
inc
outs
sti
inc
xchg
xchg
pop
sbb
push
adc
std
pusha
adc
and
or
aas
fcomp
arpl
(bad)
loopne
mov
cwde
sbb
mov
je
and
in
dec
cli
fdiv
xchg
aad
cld
mov
into
push
jg
xchg
mov
(bad)
addr16
shr
xor
fidiv
fs
pop
shl
and
out
ins
sahf
adc
clc
push
call
xchg
icebp
das
jnp
mov
xchg
push
popa
mov
in
and
test
adc
or
imul
mov
sub
push
push
sub
rol
dec
fnstcw
mov
push
pop
pop
or
and
mov
lods
pop
dec
loopne
xor
les
jnp
cmc
fdivr
mov
add
push
aaa
add
adc
mov
mov
jne
rcl
sbb
(bad)
rcr
out
imul
dec
push
aas
test
xor
cdq
mov
les
test
adc
movs
jecxz
push
test
jmp
jmp
loope
add
add
sbb
jbe
xchg
stc
mov
inc
add
pushf
pop
jmp
cmp
ret
mov
and
out
ret
and
std
and
seto
(bad)
sbb
mov
cmp
cld
jbe
cmps
mov
jae
jns
and
call
pop
lock
jmp
mov
inc
add
ins
fild
movs
mov
mov
xchg
in
out
test
lods
jg
pop
bound
movs
add
jne
shl
scas
loopne
ins
inc
or
jno
out
mov
push
fnstsw
inc
lds
popa
mov
inc
retf
add
in
dec
pop
hlt
xchg
test
(bad)
lods
inc
jae
sub
push
jmp
sub
adc
cmp
loopne
cmp
pop
ret
scas
xor
aaa
jmp
mov
xor
push
imul
and
stc
mov
fcom
cmps
call
inc
mov
and
stc
mov
dec
ins
fisttp
imul
ret
(bad)
mov
add
mov
fist
jmp
xchg
iret
push
inc
aaa
inc
or
test
ds
cmc
and
clc
jnp
inc
mov
ret
add
ins
and
and
popa
sbb
out
ja
pop
(bad)
loopne
cmps
inc
pop
sbb
mov
test
cmc
mov
push
not
push
push
test
dec
inc
rol
dec
mov
push
outs
inc
inc
jmp
mov
fisttp
mov
arpl
mov
retf
ret
repnz
stc
pop
sbb
cli
daa
xchg
jp
cmp
inc
lods
gs
ret
cmp
into
das
rdpmc
repnz
cmp
push
(bad)
fcom
mov
(bad)
inc
mov
mov
xchg
jo
dec
or
xchg
scas
leave
jne
xor
xchg
rcr
mov
int
(bad)
mov
cli
shr
cmc
sub
add
push
mov
xchg
jno
inc
enter
and
mov
rcl
mov
ins
lea
mov
fst
movs
cdq
xlat
nop
adc
mov
or
cmp
fadd
add
into
in
call
call
fld
ret
mov
and
enter
fimul
nop
or
sub
pushaw
jae
sub
xchg
sub
lds
bnd
cmp
sbb
jecxz
lods
pop
push
or
call
clc
xchg
sbb
dec
stos
(bad)
leave
pushf
xor
mov
jb
adc
push
repz
ja
test
pusha
jge
jp
movs
cmps
sub
push
pop
std
mov
jo
cmp
mov
add
xchg
out
mov
pushf
inc
add
push
or
cs
cwde
mov
fadd
movs
push
jnp
in
hlt
iret
loopne
jae
add
fwait
mov
mov
lods
fwait
jge
jmp
es
or
out
(bad)
or
cmp
push
rol
push
jge
dec
mov
xchg
adc
jecxz
call
jmp
adc
adc
dec
dec
pop
test
pusha
into
mov
push
mov
cmc
push
les
adc
dec
xchg
call
dec
pop
adc
jnp
mov
loope
push
adc
(bad)
jnp
xor
jns
or
dec
jne
rcr
mov
add
nop
stos
sbb
xchg
cs
push
or
sbb
dec
jmp
pop
push
mov
out
call
cmp
je
into
sti
add
pop
mov
popa
sbb
dec
enter
into
push
xor
xchg
mov
fwait
pop
cmp
std
and
das
lock
xor
mov
or
out
jae
mov
in
cmp
ficomp
out
loopne
cmp
xchg
pcmpgtd
sahf
pusha
mov
inc
mov
mov
lahf
xchg
movs
sbb
sub
mov
repz
sti
dec
(bad)
enter
outs
inc
test
xchg
add
cmp
jg
sbb
xchg
cs
push
dec
jmp
sbb
inc
out
inc
jae
dec
adc
in
push
mov
cmc
inc
leave
push
into
in
push
repz
fisttp
cli
push
ins
in
cmps
dec
mov
nop
lods
mov
xchg
sar
add
div
sti
jnp
add
inc
push
push
sbb
mov
ds
pop
movs
jns
lds
and
in
ja
mov
dec
inc
xchg
add
mov
fisttp
mov
push
popa
adc
push
(bad)
hlt
dec
mov
or
mov
scas
repz
xor
sbb
js
in
or
cmp
jbe
es
fisttp
push
les
inc
in
mov
push
xchg
mov
mov
movs
in
mov
pop
(bad)
cmc
xchg
jle
cmp
pop
mov
mov
cmp
cmp
mov
fsub
adc
sbb
in
sub
aaa
aaa
mov
and
mov
int
dec
push
repnz
mov
sahf
jmp
pop
mov
jo
movs
or
push
ins
aaa
cs
into
mov
xchg
add
not
arpl
stc
nop
jo
dec
inc
ins
test
sub
in
mov
xor
xor
sub
cmp
push
jl
cmp
cmp
mov
popf
dec
inc
and
mov
xchg
sbb
dec
and
inc
mov
popa
js
aaa
and
std
xor
mov
xchg
sub
and
jmp
adc
mov
aam
mov
pop
add
fs
scas
ret
sbb
or
pop
xchg
xlat
test
xchg
push
add
ret
jmp
out
mov
pusha
jle
lahf
and
xor
lea
out
mov
dec
sbb
dec
mov
adc
(bad)
sbb
push
cmp
mov
or
lods
push
nop
and
retf
sub
hlt
(bad)
push
dec
popf
repz
ds
hlt
mov
mov
pushf
fidiv
mov
mov
inc
xor
ficom
icebp
repnz
cmp
cmp
adc
mov
cmp
ss
push
jge
add
xor
pop
out
rcl
jne
das
test
in
movs
adc
test
bound
dec
mov
mov
push
pop
push
mov
iret
add
pop
inc
mov
cmc
jg
in
or
mov
cmp
mov
rcr
cld
sbb
adc
jmp
(bad)
xchg
cmp
inc
fadd
cdq
push
pop
xor
mov
jmp
dec
das
retf
mov
popa
and
nop
imul
fabs
jl
cmp
mov
call
jno
fsubr
xchg
mov
lods
test
pop
and
mov
sub
arpl
jb
jecxz
loop
push
xchg
sub
add
cdq
enter
pop
and
mov
mov
mov
pop
lds
adc
xchg
mov
inc
inc
xor
loope
fwait
outs
dec
sub
or
stos
ja
and
sub
jo
and
gs
and
test
mov
push
out
adc
push
jge
jbe
sahf
pop
cmp
xchg
xor
fld
add
into
bound
inc
push
mov
mov
cmp
sar
inc
mov
jno
addr16
dec
push
jmp
jle
pop
(bad)
push
xor
cld
pop
enter
mov
or
adc
pop
mov
mov
pop
or
aaa
sub
cmp
cmps
jb
mov
gs
and
lahf
fwait
and
data16
add
mov
add
loop
push
or
sar
inc
and
in
mov
or
jne
sub
aam
hlt
inc
bound
rcr
or
gs
arpl
lods
out
mov
jecxz
sbb
and
out
adc
jo
pop
pop
js
(bad)
and
inc
call
inc
push
push
sbb
and
icebp
dec
scas
ror
xchg
or
call
mov
shr
push
stos
mov
and
out
imul
sbb
sub
sub
sbb
add
cmp
les
lahf
mov
(bad)
outs
sar
fld
test
adc
add
(bad)
mov
imul
arpl
mov
hlt
or
adc
inc
xchg
enter
inc
push
dec
sbb
bound
inc
inc
out
(bad)
hlt
mov
and
mov
lea
inc
cmp
mov
mov
sbb
mov
cli
push
pop
out
out
lods
or
mov
jbe
jmp
(bad)
mov
xchg
push
cld
dec
push
cmc
pop
movs
inc
xchg
hlt
mov
pop
fisubr
mov
enter
rcr
cwde
out
inc
lahf
pop
xchg
push
fist
push
sar
jg
dec
pop
sahf
sbb
push
not
popa
inc
cmp
cwde
rcr
out
push
or
(bad)
dec
js
add
daa
ret
cmp
shr
psllw
sbb
int
add
div
cs
addr16
dec
out
sub
xchg
sti
add
pop
cmp
sti
shl
std
fisttp
jmp
stc
jbe
or
aam
and
inc
loop
cmp
push
(bad)
aaa
mov
cdq
xchg
adc
push
xor
sub
jecxz
sahf
mov
jns
mov
fiadd
in
into
mov
xchg
leave
sub
jns
mov
fidivr
loop
movs
inc
lods
out
push
sub
test
sub
mov
scas
cs
or
scas
test
cdq
inc
pop
pop
mov
fiadd
jl
retf
icebp
loop
dec
in
aas
sub
jp
aas
ret
push
(bad)
mov
(bad)
int3
xor
xchg
add
sbb
pusha
fimul
aad
loopne
xor
mov
dec
xchg
and
sbb
cmp
sti
int3
shr
hlt
jne
and
xor
(bad)
pop
popa
mov
jbe
cdq
inc
(bad)
aad
inc
leave
jg
dec
xor
mov
jp
mov
call
outs
ds
je
hlt
mov
(bad)
pushf
mov
pop
sub
outs
in
sbb
cmp
jp
loopne
into
loope
sbb
pop
fsubr
pop
(bad)
mov
aaa
inc
outs
xor
inc
lods
xchg
mov
out
enter
mov
pop
pop
mov
dec
pop
pop
ss
js
mov
pop
test
in
push
jb
sbb
xor
cmp
test
hlt
fnstsw
stos
xchg
mov
xchg
mov
pop
push
and
pop
cdq
inc
iret
call
(bad)
shl
int
sub
call
sbb
or
mov
je
mov
mov
mov
fimul
jno
push
add
repz
cli
or
add
call
je
add
add
cdq
(bad)
sbb
pop
push
adc
jno
mov
mov
add
adc
fcomp
push
mov
sbb
xor
push
sbb
daa
iret
sub
wbinvd
mov
arpl
imul
aam
xor
mov
and
ret
mov
cmp
inc
(bad)
push
and
sbb
and
fcomp
mov
sub
popf
adc
jmp
sti
adc
rol
mov
jmp
xchg
shl
(bad)
sbb
leave
pop
test
jp
mov
or
jmp
and
(bad)
pop
stos
push
repnz
lods
lods
xor
loope
push
test
rcr
fs
mov
and
mov
fsubr
ror
add
push
scas
je
movs
xchg
in
ins
cmp
mov
mov
jge
adc
inc
inc
setl
fsubp
fstp
int
push
dec
(bad)
loopne
cmps
rcl
jle
jp
xor
inc
es
cmp
inc
aas
adc
add
cmp
jns
adc
cmp
aam
les
xchg
das
pop
fcomp
dec
xor
data16
xchg
js
test
xor
add
movs
ss
jmp
movs
pop
sbb
dec
lods
ret
and
jle
mov
cmp
and
adc
mov
jno
aad
shl
mov
sbb
xchg
lods
sti
sbb
mov
pop
adc
xlat
js
fbstp
in
add
lods
cmp
scas
sbb
mov
xchg
ja
scas
gs
bound
adc
jl
idiv
pop
sub
fldcw
(bad)
add
in
and
shl
ror
jne
daa
je
in
inc
scas
add
xchg
loopne
dec
add
xor
imul
std
inc
adc
rol
push
imul
xor
fwait
cmp
pop
and
sub
enter
cmp
and
and
test
outs
dec
ficomp
or
imul
mov
push
sbb
in
pusha
mov
pop
pop
ror
lock
push
inc
imul
inc
or
mov
test
cmp
jbe
or
loope
inc
pop
push
and
cmp
jp
dec
das
mov
add
inc
adc
cmp
fsubp
add
push
mov
jecxz
rcr
mov
xor
ins
jmp
ret
add
inc
pop
xor
fsubrp
sub
pop
leave
lea
movs
pop
add
leave
cs
cmp
mov
xlat
mov
mov
mov
test
mov
xor
sbb
add
sahf
add
xchg
push
mov
adc
cmp
repz
mov
inc
push
cld
sar
mov
call
hlt
push
(bad)
mov
mov
jg
hlt
xchg
enter
fwait
inc
fs
dec
std
repnz
es
add
sub
cmp
mov
sub
lods
pop
js
imul
scas
inc
inc
fistp
and
jo
sub
jmp
and
sbb
jo
push
sbb
pop
ins
add
sub
jecxz
ins
push
imul
and
retf
push
push
aad
inc
std
cmp
mov
mov
stos
or
ficom
and
sbb
lds
add
jp
xor
add
scas
fdivr
clc
ret
jmp
mov
cmps
imul
push
fidiv
push
mov
or
jbe
inc
gs
pop
ficom
sbb
pop
arpl
pop
outs
dec
xchg
stc
addr16
call
push
mov
xor
jp
out
xor
mov
mov
hlt
jge
call
stc
pushf
inc
push
xor
push
jbe
xlat
sub
mov
lahf
jne
in
inc
mov
adc
sbb
pop
mov
mov
jae
fild
and
call
scas
outs
mov
mov
jp
pop
adc
stos
dec
(bad)
xchg
mov
pop
xchg
xor
call
xor
mov
test
jo
rcr
pushf
dec
fcomp
in
push
xor
mov
xchg
push
mov
lahf
mov
and
stos
and
push
adc
fistp
(bad)
xor
enter
push
xchg
add
int3
bound
addr16
das
or
sub
sti
or
sbb
mov
lds
div
imul
cmps
and
sub
rcr
jp
sbb
mov
test
add
test
inc
loope
xor
jl
and
lahf
mov
sub
jecxz
popa
(bad)
into
es
arpl
cmp
in
xchg
in
retf
out
pop
icebp
lods
clc
cmps
loopne
sub
fsub
pushf
retf
pop
xchg
cmc
jne
sbb
es
fbstp
or
aas
mov
xor
push
loope
aad
cmova
fsubr
nop
inc
loop
mov
mov
dec
clc
call
push
pop
xchg
xchg
mov
pop
mov
mov
retf
mov
sub
retf
mov
sub
out
xchg
mov
xchg
mov
vhsubps
outs
cmp
mov
js
sub
lods
push
sbb
sar
call
push
loopne
enter
adc
cmp
retf
rcr
aas
sbb
iret
push
sub
push
mov
cld
pop
pop
jmp
xchg
pop
cdq
add
loopne
push
shl
dec
adc
aad
sti
or
push
push
ins
or
aas
and
pop
scas
xor
outs
lahf
cmc
je
imul
mov
lods
or
pop
les
pop
push
dec
bound
mov
cli
movs
clc
xor
jno
in
cs
adc
pop
xor
movs
aam
pop
into
jb
xlat
daa
cwde
lods
sub
popa
fistp
fs
cli
add
xor
xor
clc
mov
or
and
mov
mov
daa
enter
pop
fsubr
aas
adc
push
das
daa
adc
and
sahf
xchg
jg
push
sub
(bad)
stos
adc
jmp
js
jno
sub
add
in
sub
jmp
out
jae
pushf
pop
jo
mov
push
dec
inc
aas
mov
aaa
cld
and
pushf
inc
jbe
es
xor
jp
mov
or
scas
ret
push
dec
mov
xor
aam
mov
and
cwde
retf
mov
push
cmp
xchg
stos
pop
sbb
lock
and
cdq
aas
loope
lods
xchg
mov
(bad)
in
std
xlat
pop
push
push
dec
(bad)
(bad)
cmc
sbb
mov
fst
pusha
sub
mov
xchg
call
pusha
ja
call
push
mov
rcl
daa
jno
pop
das
mov
out
in
mov
ins
inc
pop
mov
out
jp
movs
mov
xchg
fwait
aam
push
xchg
lahf
(bad)
push
push
xchg
pop
mov
test
cmp
fistp
cmp
xchg
test
jle
inc
jmp
stos
loope
(bad)
test
or
push
xlat
cmp
sub
jl
scas
adc
jno
test
xchg
mov
(bad)
shl
imul
pusha
in
jge
(bad)
mul
(bad)
and
xor
scas
hlt
push
pop
xchg
cs
int
mov
and
push
mov
cld
jle
out
pop
fisttp
add
fadd
xchg
xchg
xor
in
jecxz
xchg
jnp
div
and
gs
fild
(bad)
arpl
cdq
scas
dec
lock
fcom
jns
int
jb
ins
int
rol
outs
outs
jb
inc
cmp
sub
jbe
sbb
add
cld
loope
and
inc
jb
into
adc
xchg
mov
stc
push
lods
and
into
pop
pop
je
pminub
xchg
or
fnstsw
inc
iret
sub
les
lods
xchg
mov
sub
lock
lahf
cld
bnd
clc
pop
xor
test
icebp
scas
in
and
(bad)
jmp
scas
test
jmp
out
retf
and
xchg
cli
sti
adc
not
push
repnz
xlat
rol
repnz
ret
out
and
leave
fdivr
cmp
in
das
mov
and
in
not
dec
shl
shl
pop
xor
call
pop
scas
test
outs
lds
pop
sub
jo
add
outs
(bad)
call
ret
inc
sub
dec
into
and
pop
push
pop
dec
stc
and
addr16
xchg
aas
xchg
mov
outs
das
mov
add
jg
xchg
icebp
clc
stos
retf
and
mov
push
push
push
mov
outs
pop
arpl
dec
sbb
(bad)
out
js
loop
(bad)
sbb
std
lods
mov
pushf
(bad)
sbb
(bad)
mov
aas
dec
inc
(bad)
dec
retf
pop
xchg
push
pop
inc
stos
mov
add
(bad)
fidivr
add
fadd
shl
dec
mov
jmp
push
xchg
cmp
sar
(bad)
pop
stos
mov
mov
mov
push
cmps
aas
inc
jmp
add
mov
xor
add
push
jmp
cmps
out
rol
fbld
jp
retf
jb
pop
lods
rcl
push
lods
fcom
jno
mov
shl
fidiv
and
rcr
int3
xchg
mov
adc
jl
aaa
jecxz
push
data16
mov
pop
clc
stos
xchg
mov
pop
int3
call
rol
test
cdq
movs
xor
shl
push
add
jb
clc
dec
push
xchg
retf
lock
arpl
mov
popf
push
pop
xor
std
pop
fimul
daa
xchg
test
ret
in
in
lds
ja
fist
dec
div
test
popa
nop
xchg
(bad)
pop
push
mov
sbb
and
(bad)
xor
sahf
addr16
sub
in
sub
pop
push
pop
inc
test
mov
mov
cmp
ret
cli
sub
(bad)
shr
in
jmp
cmp
fs
cmp
cmps
jmp
enter
xchg
sbb
rcl
lods
sbb
dec
and
jae
fdiv
pusha
nop
cld
adc
repz
sub
or
push
lock
repz
ret
daa
fidiv
aas
test
add
sub
stos
dec
inc
xor
mov
in
je
sbb
lea
int3
mov
sti
(bad)
jb
cli
sub
rol
and
lods
xor
mov
dec
hlt
test
add
push
loop
and
idiv
cli
stos
push
mov
outs
retf
mov
shl
pop
test
pusha
push
popf
cdq
mov
and
in
lahf
cld
adc
inc
xchg
inc
jnp
add
aas
adc
sbb
pushf
fucomip
xchg
pushf
mov
push
fbstp
and
push
xchg
mov
pop
jge
cmp
push
js
sub
xchg
and
mov
sub
or
retf
les
and
in
inc
cdq
mov
int
xchg
in
enter
xchg
mov
iret
clc
iret
stos
outs
dec
popa
(bad)
hlt
add
jno
cs
fadd
jp
gs
push
dec
jmp
xor
push
add
in
adc
(bad)
cmp
push
es
retf
push
loope
hlt
and
es
or
sub
retf
stos
dec
out
cdq
mov
test
xchg
jle
jnp
call
rcr
es
cmp
sub
cmp
push
mov
je
pop
pop
jg
push
xor
jp
jb
jno
xchg
pop
push
and
inc
and
out
or
add
inc
call
jge
scas
mov
add
push
cmp
call
sub
adc
cld
movs
xchg
movs
dec
inc
mov
push
call
push
cmp
add
jle
aas
xor
fisubr
in
shl
popa
inc
cdq
sbb
jnp
ins
xbegin
loope
fcmovnb
jnp
or
xchg
or
inc
ss
shl
stos
add
repz
seto
jg
mov
(bad)
mov
stos
iret
add
mov
push
pop
popf
shl
scas
fwait
dec
retf
pusha
mov
mov
mov
(bad)
inc
pop
mov
loop
hlt
inc
inc
aaa
push
gs
and
pop
cld
data16
ror
loopne
jbe
adc
in
ret
loope
(bad)
and
push
mov
test
inc
mov
jl
scas
push
in
jg
cs
gs
xor
je
ror
sub
adc
mul
xor
ret
cmc
lock
or
movs
xchg
ret
xchg
push
js
xchg
xlat
mov
dec
dec
xlat
push
adc
addr16
shr
daa
sub
cmps
ins
or
add
pop
lahf
mov
fdivr
stos
dec
imul
lds
jae
mov
stc
movs
iret
rcr
mov
fidivr
imul
fcom
mov
test
cmp
xor
push
pop
jmp
mov
add
sub
ja
mov
add
push
ret
mov
pop
gs
imul
mov
dec
mov
mov
fst
sub
pop
or
ret
add
sub
arpl
sbb
push
daa
add
xor
(bad)
push
sbb
or
xlat
push
xchg
mov
or
dec
inc
pop
and
je
into
call
dec
sub
jnp
in
adc
ret
add
cdq
adc
sub
lods
rcr
cmp
and
lods
mov
imul
adc
lahf
out
fs
pusha
mov
je
adc
xchg
pop
xor
xor
icebp
test
in
mov
ficom
int
mov
xor
push
cld
aaa
pop
add
jo
fwait
push
mov
push
jg
pop
cli
add
cmps
mov
mov
fidivr
mov
and
mov
push
pop
adc
rcr
sbb
shl
push
jecxz
call
jns
fwait
inc
inc
pop
jb
enter
sahf
jnp
or
add
mov
iret
xor
stos
ret
or
mov
scas
call
jne
xor
loop
sbb
adc
loopne
ss
mov
inc
fadd
data16
xchg
test
aad
mov
add
stc
and
or
sbb
hlt
mov
and
inc
aad
pop
call
adc
jmp
out
cmp
mov
push
dec
mov
sbb
mov
nop
jge
sti
mov
or
pusha
fcom
mov
fisttp
retf
jp
inc
jg
ret
cmp
xor
sbb
inc
mov
jl
enter
mov
mov
fwait
mov
and
jmp
inc
push
stc
(bad)
call
mov
dec
out
cmp
jle
mov
sub
dec
and
(bad)
idiv
mov
ror
(bad)
pop
stos
cld
test
repnz
xor
(bad)
mov
push
mov
mov
ret
movs
sbb
sbb
jb
xor
mov
retf
pusha
push
mov
scas
setp
mov
(bad)
mov
call
dec
or
cmp
lods
jo
xchg
es
ds
add
add
stos
mov
mov
push
pushf
cmp
adc
gs
inc
add
inc
add
mov
in
cmc
lahf
dec
sub
mov
imul
mov
or
outs
sbb
adc
dec
mov
pop
fadd
in
and
les
repnz
enter
mul
std
sbb
xlat
cmp
out
inc
push
mov
push
pop
arpl
add
jnp
or
inc
cmp
ficom
cmp
pop
mov
sub
add
sahf
xchg
cmp
(bad)
cmp
sahf
mov
addr16
cmps
dec
faddp
(bad)
mov
dec
sbb
div
int3
int
(bad)
or
add
outs
mov
sahf
jb
sar
xor
aaa
mov
mov
inc
dec
into
inc
sub
test
hlt
xchg
mov
pop
es
fdivr
loopne
mov
lock
xlat
dec
inc
adc
adc
icebp
jg
pop
mov
add
xchg
(bad)
nop
ret
std
sub
mov
jns
inc
xchg
and
and
call
enter
data16
xor
xchg
fldenv
cmps
div
gs
cmp
cmps
scas
dec
dec
lods
out
inc
addr16
sbb
push
cdq
es
mov
mov
movs
call
mov
repnz
(bad)
jmp
push
sti
test
or
loop
pop
in
and
xchg
push
push
into
push
sub
mov
push
mov
scas
shr
cmp
icebp
ins
rep
aaa
int
or
in
int
fnstsw
push
mov
loop
push
fnsave
or
xor
pop
js
cmp
fld
push
adc
jno
ins
js
xchg
(bad)
mov
pop
cmp
xlat
mov
lock
jge
pop
std
jne
xchg
add
mov
sbb
fcom
jb
adc
ins
adc
iret
div
inc
gs
xor
fidivr
mov
sbb
stos
call
inc
mov
cwde
pop
call
xchg
test
jl
push
push
scas
xchg
push
jnp
in
sbb
xchg
mov
das
scas
addr16
and
adc
pushf
inc
pop
inc
ficomp
add
movs
jl
inc
in
aam
clc
inc
push
jle
and
xchg
mov
and
push
mov
(bad)
mov
mov
push
mov
adc
mov
jge
push
add
rol
jl
(bad)
in
xor
mov
cmp
and
fwait
inc
push
xor
jnp
lods
cli
xor
leave
inc
add
aas
cmp
jl
sub
ds
shl
push
xchg
mov
aam
cld
mov
mov
ja
out
jg
mov
cs
mov
sub
xchg
mov
jbe
or
pushf
sbb
loopne
jb
and
es
jmp
addr16
jns
fwait
mov
sar
cmp
loop
out
sbb
(bad)
ins
repz
or
jmp
mov
test
mov
sti
sub
lds
adc
pop
xchg
push
popa
cmp
ss
lods
int
dec
add
jns
mov
mov
fnstsw
dec
es
jno
aad
pop
neg
push
jmp
aas
jg
and
inc
xor
and
sub
in
fprem1
(bad)
movs
in
repz
js
mov
lock
aad
out
pop
jmp
jns
pop
pop
ins
xchg
jno
in
inc
aam
push
mov
(bad)
outs
push
mov
icebp
fcmovnbe
fadd
add
xchg
mov
and
sbb
mov
stc
repz
aad
mov
(bad)
jns
push
cmp
sub
dec
mov
inc
aas
cmp
out
call
jecxz
sar
mov
push
ins
loopne
gs
not
xlat
stc
lds
(bad)
push
icebp
lds
adc
mov
popa
shr
jae
cdq
dec
ins
pop
sbb
cdq
dec
jg
cmps
loopne
jo
lea
lods
mov
loop
fdivr
add
aaa
mov
ja
sti
(bad)
jle
dec
sbb
mov
(bad)
sub
mov
test
movs
mov
mov
jle
mov
stos
test
push
lahf
xlat
add
test
jle
nop
add
(bad)
call
call
xor
repz
lds
adc
jmp
movs
loop
pop
mov
out
imul
(bad)
lods
shr
mov
dec
adc
fcomp
ret
shr
stos
mov
cmps
call
(bad)
fadd
cmp
aam
sahf
scas
neg
dec
inc
sbb
fwait
ror
cmp
jecxz
xor
gs
push
(bad)
dec
mov
add
outs
sub
repz
jb
mov
iret
int
jne
gs
dec
xor
or
pop
push
jo
icebp
mov
outs
daa
popf
iret
(bad)
sub
cmps
loopne
mov
mov
inc
mov
jl
clc
mov
or
pop
pop
and
stos
add
mov
out
mov
adc
mov
test
xchg
sub
test
push
movs
xchg
mov
push
mov
jne
pushf
imul
mov
jnp
jo
test
pop
js
sbb
sub
mov
pop
sbb
loop
pop
aas
pop
mov
dec
sar
je
mov
mov
pop
loop
jo
into
xchg
addr16
loopne
sub
or
movs
mov
and
lods
push
sub
test
sbb
call
sub
iret
daa
aaa
loopne
pusha
sub
call
push
mov
hlt
inc
hlt
(bad)
fsubp
xlat
in
int3
outs
or
int3
mov
xchg
pop
lods
add
mov
leave
push
retf
mov
lods
dec
das
cmp
or
mov
xchg
rol
out
imul
sbb
es
stos
loop
mov
mov
loopne
or
ret
xor
loope
xchg
add
pop
adc
inc
pop
rcr
aam
jmp
or
jle
push
scas
pop
mov
in
jb
push
movs
xchg
dec
push
pcmpgtd
push
test
dec
ficomp
sub
pop
mov
adc
fimul
das
mov
mov
and
pop
inc
in
adc
jle
fs
mov
adc
scas
jge
lods
mov
add
lgs
fldcw
retf
ror
mov
push
mov
inc
cmc
cdq
sub
pop
ds
(bad)
in
mov
(bad)
in
dec
inc
arpl
mov
aad
push
sub
mov
das
mov
test
je
jne
dec
mov
out
out
int
les
std
xchg
cmp
fistp
(bad)
sbb
add
cs
arpl
adc
mov
mov
or
or
ret
mov
or
push
sbb
sub
(bad)
jne
pushf
jae
and
xchg
mov
and
imul
mov
jle
rcr
in
and
cmp
jle
cmps
or
inc
add
jmp
data16
and
mov
mov
pop
xchg
dec
jg
arpl
mov
cmp
dec
out
push
or
dec
repnz
loopne
sub
call
mov
jp
sub
je
mov
jmp
dec
lock
mov
mov
fimul
mov
aas
dec
jl
ins
popa
sbb
or
or
scas
push
push
mov
(bad)
loop
cli
cmps
test
loop
test
(bad)
sar
push
jg
inc
sbb
call
rcl
daa
repnz
stos
jg
or
add
mov
mov
shl
fdivr
add
dec
stos
test
lahf
dec
add
fcmove
cs
test
sbb
jecxz
stos
rcr
fcom
mov
push
sar
xchg
loope
je
loop
int
loope
jb
fidiv
jle
test
addr16
cdq
mov
push
pop
jmp
(bad)
sbb
rol
movs
cmp
data16
mov
in
cmp
mov
inc
ret
sbb
ja
ja
hlt
cmp
xor
jns
xchg
cmc
ins
lahf
dec
pop
fs
adc
cmp
call
popa
dec
aaa
mov
das
add
push
fs
fadd
jnp
inc
leave
xchg
lods
arpl
mov
sbb
cmp
ins
xchg
push
or
clc
loop
aam
jbe
push
mov
rcr
xor
movs
sub
in
test
fadd
jne
daa
mov
fidivr
xchg
cmp
sbb
mov
pushf
pop
test
sti
ficomp
daa
push
and
shl
jb
fist
xor
out
fldenv
jb
in
outs
movs
push
out
pop
mov
push
fdivr
sbb
jbe
push
js
cmps
jg
mov
sar
je
loopne
dec
adc
push
scas
sub
push
call
test
xor
mov
dec
rol
(bad)
and
sbb
jp
mov
jge
pop
jne
jle
test
fwait
or
pop
fdiv
sbb
mov
sub
ror
sbb
ret
fsin
call
add
dec
jns
out
lea
(bad)
outs
rcl
or
sub
cmp
push
es
sub
jmp
aam
jecxz
fs
adc
data16
das
adc
cmps
shl
loopne
fimul
push
psrld
fwait
push
dec
mov
pop
test
(bad)
cs
aam
imul
xchg
cwde
loopne
or
push
lea
mov
sbb
ins
dec
or
xor
pop
xchg
(bad)
fdivr
and
int3
dec
dec
dec
in
cs
in
mov
dec
jb
mov
test
push
(bad)
stos
mov
adc
fs
mov
pop
push
mov
out
cs
mov
in
jne
in
mov
sbb
aas
shr
ins
pop
mov
sub
(bad)
out
mov
out
inc
outs
imul
fprem1
xchg
aas
cs
jb
std
stos
nop
in
fdiv
push
pop
gs
mov
ja
add
xor
std
aam
mov
mov
xor
stc
pop
pop
int
loopne
and
lods
push
(bad)
and
(bad)
fiadd
(bad)
cmp
mov
mul
dec
popa
mov
out
inc
sub
xchg
jle
das
arpl
out
xchg
mov
rcl
outs
fcom
or
xor
cmps
cmps
mov
sbb
repnz
retf
movs
inc
ins
sahf
js
dec
cmp
jmp
adc
or
movs
jae
ret
mov
pop
ds
test
test
pop
add
imul
ror
sub
rol
ss
jne
dec
sbb
fdivrp
pusha
cmc
movs
sub
loop
leave
test
dec
loopne
cmp
cmps
movs
jns
mov
dec
jmp
lea
sub
js
lahf
sbb
mov
or
pop
jl
dec
arpl
add
pop
or
loope
mov
push
sub
jmp
mov
adc
lock
or
repnz
and
nop
xor
pop
aam
push
lahf
cmp
pop
sbb
mov
xor
fs
push
fidiv
and
push
out
retf
aaa
dec
scas
inc
adc
xchg
inc
cmps
dec
jae
test
out
scas
(bad)
fcom
sub
xchg
push
and
pop
in
jne
shr
out
mov
jo
pop
add
mov
dec
retf
cmp
sbb
mov
ret
sub
jmp
xchg
push
pusha
inc
cmc
mov
sbb
(bad)
ss
inc
inc
add
in
mov
inc
sbb
cs
sub
sub
xor
pop
stos
retf
xchg
repz
inc
xor
fisttp
xchg
loopne
repnz
scas
jnp
mov
xlat
test
cmp
xor
movs
lahf
dec
jg
stos
std
push
or
adc
test
add
ds
(bad)
mov
dec
xor
hlt
push
stos
ja
lahf
loop
push
(bad)
rcr
lea
stos
cmp
jmp
in
push
ds
push
ret
push
mov
loopne
adc
add
push
push
(bad)
mov
retf
inc
xchg
mov
fs
or
(bad)
paddsb
stos
popf
push
push
imul
dec
(bad)
xlat
test
jp
es
nop
sub
mov
sub
sar
int3
cdq
mov
les
std
fist
xchg
pop
jb
stos
fbld
mov
movaps
pushf
fstp
fdiv
dec
ud0
and
icebp
fsubr
sub
lods
add
lods
retf
xchg
jge
adc
call
push
(bad)
cdq
mov
and
cdq
out
cmps
mov
sbb
stos
cmp
ins
mov
and
imul
loope
outs
(bad)
jb
sub
adc
rcr
test
cmp
xor
dec
pop
lods
adc
cmp
add
add
sbb
stc
in
sub
jno
xchg
pusha
push
and
loope
aaa
movs
jp
xor
(bad)
std
or
cli
mul
pushf
ja
jae
(bad)
popf
mov
ficomp
adc
sbb
repz
sub
scas
push
into
in
gs
push
push
inc
adc
sbb
or
lea
sbb
xor
mov
inc
dec
pusha
push
inc
pop
retf
pop
(bad)
mov
mov
jb
and
mov
out
outs
mov
push
mov
xchg
and
ret
push
mov
cmp
mov
pop
lea
loopne
test
push
inc
sub
sub
mov
and
push
sbb
pop
mov
sbb
or
and
ins
jge
arpl
call
inc
pushw
fisubr
(bad)
mov
mov
push
pop
jnp
and
and
sbb
jg
dec
fs
(bad)
mov
popf
mov
pop
inc
ds
out
add
rol
es
add
jo
nop
idiv
(bad)
pop
test
xor
out
aad
mov
mov
dec
call
sub
adc
mul
mov
dec
(bad)
out
es
add
push
or
movs
test
in
sti
int3
pop
ins
push
cld
fs
sbb
pop
inc
jnp
daa
push
dec
into
(bad)
mov
outs
call
adc
xor
and
and
push
or
pop
push
pushf
pop
xor
push
(bad)
ret
into
mov
jp
fmul
je
mov
mov
movs
movs
push
dec
push
push
push
xchg
push
es
iret
neg
xor
push
push
and
xor
shl
test
inc
cmc
xor
dec
jbe
jecxz
icebp
or
sti
fisub
in
sti
mov
or
xchg
mov
mov
test
cmp
fld
xor
adc
jne
push
(bad)
fld1
mov
lahf
dec
add
ror
out
std
mov
mov
mov
adc
scas
movs
inc
mov
aas
imul
cmp
jge
stc
mov
xor
pop
mov
or
aas
ret
addr16
sub
cdq
test
ret
pop
out
jo
and
sbb
stos
jne
sbb
in
imul
(bad)
sub
sub
sbb
jo
jl
nop
enter
out
aam
sub
out
cmps
in
dec
out
push
fstp
add
pop
int3
xor
dec
sti
pop
and
cmp
lds
ret
lock
repnz
xchg
sbb
dec
aam
sub
sbb
push
adc
push
mov
xchg
ins
push
popa
and
loope
(bad)
ror
sub
cli
or
aaa
mov
add
xchg
cmc
xchg
pop
loope
int3
fcom
push
aas
or
daa
jle
ins
and
jae
iret
js
dec
inc
xor
aas
sbb
mov
add
in
(bad)
jb
add
out
inc
mov
(bad)
push
in
sti
fisttp
sub
sbb
arpl
retf
xor
jno
lea
je
mov
pop
call
or
aad
sti
adc
or
call
lahf
add
add
imul
sub
fs
std
mov
sahf
add
repnz
adc
sub
push
call
call
push
xor
inc
jmp
(bad)
cmp
cmc
je
ror
and
aam
add
int3
cmp
xor
push
inc
hlt
mov
xlat
push
bound
aas
cli
clc
or
push
adc
push
jmp
lods
ror
cli
ds
xor
sbb
sbb
push
add
push
sbb
aas
or
jle
retf
dec
jne
js
xchg
repz
iret
enter
test
sti
loopne
nop
or
cmp
jae
sbb
fdiv
mov
mov
gs
cwde
cli
retf
stc
push
or
mov
ins
stc
push
fild
pop
out
pop
jmp
mov
mov
lods
push
adc
jle
pop
imul
fist
in
aam
pushf
lds
int
sar
cmp
(bad)
adc
cld
mov
std
call
and
pop
mov
pop
daa
mov
fidiv
mov
loopne
pop
adc
out
jae
jle
push
outs
or
call
ins
loope
mov
cmp
xchg
test
adc
cmps
ss
fld
mov
stos
pop
and
test
push
adc
xchg
mov
shr
int3
adc
mov
cmp
fsubp
mov
lahf
sbb
rcl
xlat
or
je
sub
lods
into
inc
xchg
push
bound
and
jne
in
jge
in
clc
cmps
icebp
inc
jae
pushf
stos
adc
es
(bad)
inc
xchg
out
xchg
mov
ret
int3
icebp
or
xchg
(bad)
push
and
out
mov
clc
mov
shr
cmp
ins
fadd
jecxz
dec
push
(bad)
int
mov
xchg
stc
stos
mov
add
stc
push
inc
je
adc
mov
mov
push
adc
or
xchg
cdq
ss
pop
add
call
fwait
jbe
js
pop
mov
outs
leave
enter
push
aaa
std
inc
xchg
sar
or
jne
add
push
outs
push
mov
adc
pop
or
das
jb
outs
fidiv
push
adc
outs
aaa
jb
xchg
mov
retf
out
inc
out
jg
add
or
js
cwde
inc
sbb
call
mov
loopne
pop
dec
shl
dec
dec
jb
in
jg
call
cmp
mul
sub
ja
scas
stos
sti
mov
daa
pushf
jno
arpl
je
push
dec
ds
cmp
loop
push
mov
cmp
adc
sbb
adc
mov
popa
add
ins
mov
and
sti
sub
xchg
adc
lds
scas
jnp
iret
push
rol
jl
dec
sbb
js
push
iret
add
push
inc
add
test
or
(bad)
sti
push
test
div
pop
push
pop
in
push
sahf
push
sbb
ret
loopne
in
mov
retf
adc
shl
out
adc
scas
add
aas
jae
dec
int
push
cmps
xchg
inc
xor
cs
icebp
sbb
leave
pushf
pop
addr16
(bad)
pop
add
div
and
xchg
adc
call
xor
mov
mov
push
xor
out
dec
add
pop
adc
pop
fcomp
imul
or
pop
mov
xor
iret
cmp
stc
ins
icebp
adc
inc
push
pop
ja
bound
dec
ins
xor
test
ss
jo
pop
mov
mov
pxor
push
jnp
stos
aad
hlt
(bad)
pop
call
in
sub
jecxz
xchg
movs
arpl
jmp
sub
iret
cli
mov
int
ror
push
rcl
dec
jae
xchg
pop
pop
fst
lods
test
pop
call
das
mov
call
xchg
ins
jo
rcr
inc
aas
jl
popa
lds
aad
xchg
add
movs
xchg
fsub
loope
pop
test
adc
xor
push
or
je
iret
pop
jb
inc
pop
lods
jbe
add
sbb
sbb
and
fwait
add
dec
ins
stos
addr16
sti
retf
into
xor
ficom
inc
call
lods
sbb
(bad)
cmp
in
pop
xor
dec
pushf
(bad)
shr
adc
lahf
outs
out
inc
xchg
xchg
movs
adc
enter
sub
jge
sub
lods
cwde
and
aas
push
and
cmp
stc
(bad)
cmp
rcl
addr16
leave
or
aam
cwde
inc
cmc
mov
pop
xchg
pop
push
mov
in
aam
xchg
inc
add
xchg
lods
aad
sub
ja
cmc
jge
sti
pop
ret
popa
jg
lock
gs
pop
inc
jecxz
push
cmp
push
outs
ja
sar
cli
or
imul
jne
mov
xchg
or
push
fistp
sti
repnz
add
pop
pop
push
and
sbb
pop
aad
ja
loopne
lods
jmp
mov
jo
icebp
shl
cmp
xchg
clc
sub
not
ja
xor
and
rcr
sbb
fwait
mov
fadd
ins
aaa
sub
mov
add
inc
stc
enter
xchg
xchg
(bad)
stc
sbb
xchg
xchg
mov
sub
std
cmp
fst
mov
(bad)
jmp
sub
inc
mov
and
ins
loop
push
mov
dec
rcl
mov
sbb
(bad)
mov
(bad)
pop
in
icebp
sbb
mov
jne
test
imul
cmps
jno
xor
stos
adc
mov
jnp
pop
jno
ss
leave
into
mov
push
push
mov
out
push
out
sbb
xchg
in
xor
das
xchg
or
add
in
push
ret
sbb
sub
push
loopne
js
jg
jecxz
xchg
and
rol
xor
imul
movs
fstp
pop
sahf
sub
pop
sbb
push
lahf
call
sbb
out
fidiv
push
push
dec
pop
in
fsub
adc
sub
push
stos
shl
cmp
call
mov
mov
dec
je
lock
pop
cmp
adc
mov
jmp
sub
adc
pop
shl
jno
inc
add
retf
outs
or
push
jp
fs
inc
xchg
pop
pop
or
xor
popf
pusha
cmp
dec
mov
cmp
cmp
out
xor
inc
jg
xchg
int
mov
lods
shl
stc
mov
adc
jns
adc
mov
inc
xchg
mov
gs
je
push
push
and
nop
ret
xchg
ficomp
sahf
ror
dec
mov
out
test
cmp
mov
dec
jne
mov
fnstcw
test
jmp
mov
pop
xor
sub
jge
inc
pop
or
ret
cmp
les
sub
es
lds
sbb
xchg
pop
and
inc
xor
xchg
fnstenv
iret
and
das
pusha
sub
xlat
add
loop
jae
icebp
in
mov
xor
sti
mov
sar
xchg
inc
das
add
faddp
iret
arpl
dec
push
stos
rcl
xlat
jnp
int3
xor
xor
lds
pop
mov
fs
pop
test
mov
push
fs
movs
cmp
and
xchg
sar
cld
popf
xlat
xchg
std
sbb
jo
pop
and
push
sub
and
or
adc
sub
jno
pop
adc
shr
xor
loope
jno
ss
retf
xchg
in
stc
ret
jle
scas
mov
std
imul
retf
or
nop
arpl
pop
lods
mov
aam
and
and
aas
mov
cmp
popa
in
mov
adc
mov
pop
cmp
shl
aas
dec
sar
fist
test
retf
scas
xchg
ss
fwait
cmp
ret
push
xor
jl
mov
pop
popa
dec
shl
imul
es
in
movs
aaa
leave
repnz
jge
rcl
(bad)
into
in
lock
cmp
or
cmps
lds
sbb
rsqrtps
sub
mov
fcom
push
jge
or
shl
jp
sbb
stos
mov
nop
ret
mov
cmc
scas
(bad)
(bad)
stc
pop
xchg
out
cld
test
aad
jnp
rol
mov
es
popf
mov
dec
pop
lods
mov
mov
aam
and
cmp
stos
xchg
and
test
mov
xchg
test
lods
cmc
dec
fldcw
(bad)
call
in
(bad)
fstp
mov
cli
or
shr
or
mov
mov
mov
cmp
push
movs
push
inc
ret
or
or
in
sbb
arpl
lea
pop
sbb
pop
rcl
xlat
xor
lock
imul
push
call
mov
mov
mov
loop
js
outs
fwait
jae
cmp
pushf
in
lahf
lahf
sub
ds
jns
repnz
popf
and
pop
add
fidiv
jns
and
xor
or
pop
pop
inc
or
fs
(bad)
sbb
fadd
gs
pop
mov
mov
xchg
arpl
psadbw
out
mov
adc
iret
jl
adc
les
ss
neg
or
scas
inc
mov
xchg
cmp
(bad)
mov
fs
gs
mov
and
in
mov
mov
test
jbe
ja
mov
xchg
dec
xor
cdq
dec
add
sbb
jo
(bad)
in
shl
mov
mov
ss
out
and
mov
add
movs
pop
push
fdivr
push
pop
and
nop
loope
imul
out
cmp
pop
lods
jecxz
popf
sbb
in
repz
scas
push
js
inc
adc
xchg
or
and
aad
jmp
push
push
xor
jge
pusha
fsub
sub
lahf
dec
es
jmp
mov
retf
shl
add
mov
ds
sar
call
js
mov
jmp
sbb
inc
ret
js
inc
inc
push
sub
cmp
mov
mov
cs
(bad)
stos
xor
pop
add
pop
jg
cmp
dec
out
jge
cmp
xchg
xor
pop
test
fild
ret
lahf
ins
inc
sub
daa
or
call
shl
cmps
add
pop
retf
xlat
and
jns
mov
iret
dec
test
fwait
mul
mov
jae
pop
pop
mov
cmp
test
fucom
push
mov
fst
dec
jno
test
xchg
mov
xlat
dec
div
mov
test
sbb
in
call
xlat
je
jnp
pop
sbb
mov
into
mov
cwde
sbb
cmp
push
sbb
mov
and
loopne
and
sbb
lock
mov
nop
pop
xor
test
add
sub
jmp
and
test
ins
icebp
sub
adc
loope
sti
and
pop
jp
and
scas
pop
retf
test
or
mov
lea
adc
mov
loope
and
jnp
(bad)
addr16
xor
sub
sahf
movs
frstor
and
arpl
pop
adc
imul
xor
shr
loope
jmp
hlt
repz
not
icebp
retf
shr
shl
push
and
add
push
pop
in
adc
and
adc
dec
popf
jns
fiadd
xor
jbe
sub
clc
jns
popa
xchg
push
xchg
test
(bad)
xor
out
push
sbb
inc
jmp
inc
sti
xchg
and
(bad)
test
retf
and
push
sbb
fsubr
inc
test
and
enter
jno
clc
xchg
std
mov
mov
in
cmp
call
ins
ja
bound
ins
and
in
shr
adc
add
(bad)
js
dec
gs
ret
sbb
cmps
jmp
push
test
cmp
fdiv
mov
mov
push
push
scas
pop
out
xchg
scas
push
ret
call
and
cmps
dec
push
dec
ja
push
mov
lds
mov
xor
mov
sub
gs
mov
ins
mov
fadd
push
lods
jne
jns
xlat
(bad)
int3
imul
mov
ret
and
push
jp
xor
add
out
push
ins
fst
cmp
bound
push
xchg
test
jo
(bad)
shl
jae
in
fild
(bad)
shl
leave
js
jge
lods
mov
out
les
(bad)
stc
retf
push
not
sub
int
cwde
jmp
xchg
pop
inc
es
jge
fcomp
nop
in
push
imul
sbb
(bad)
fiadd
add
call
cmp
cmps
test
mov
nop
jb
test
xor
inc
sub
outs
xchg
stos
hlt
sub
fsubr
mov
mul
ins
(bad)
cmp
dec
out
or
sub
ret
pusha
jecxz
aam
cwde
push
jnp
es
imul
sub
adc
xchg
aaa
scas
fisttp
inc
inc
push
arpl
into
ja
scas
cmp
sub
arpl
ins
ret
and
call
jmp
mov
ds
mov
inc
xor
sbb
in
dec
mov
xor
out
pop
outs
out
pusha
(bad)
push
lahf
pop
shl
ins
pop
ret
test
inc
inc
mov
lahf
push
jle
adc
imul
dec
jns
dec
xchg
cmp
fistp
fucomip
xchg
mov
std
gs
cmp
arpl
scas
stos
push
lock
jmp
or
dec
xchg
retf
jmp
(bad)
xor
rcl
xor
dec
mov
cmps
rcr
lock
adc
mov
std
pop
fidivr
sbb
push
daa
xor
test
jle
add
dec
xor
cmovne
adc
pop
or
pop
out
icebp
jp
mov
fidiv
movs
ficomp
ret
and
sbb
pop
jl
popa
jae
call
sbb
stc
push
xchg
mov
jae
jle
jo
in
adc
jmp
lock
sar
inc
(bad)
fmul
jae
pop
bound
outs
mov
cmp
fchs
add
xchg
fnstcw
and
cmp
cmp
xchg
cdq
int3
loope
movs
pusha
(bad)
(bad)
inc
dec
shl
sahf
jle
xor
fist
div
mov
aam
xor
arpl
or
rcr
mov
push
xchg
pop
dec
(bad)
fidiv
call
mov
cmp
xchg
cwde
outs
es
add
xchg
sub
in
xchg
cld
fwait
pop
gs
add
or
loop
inc
ins
xchg
xchg
add
push
xchg
mov
or
mov
call
pop
lea
hlt
mov
xor
and
pop
movs
sbb
fbld
lock
mov
push
mov
mov
cmp
push
add
iret
cmc
rcr
jmp
dec
test
push
or
fstp
loope
retf
push
dec
dec
ss
leave
jmp
push
test
mov
xchg
jle
jl
mov
shr
(bad)
cli
imul
ficomp
add
inc
out
in
loopne
out
lea
dec
jae
cmps
pop
pop
in
and
mov
cmc
dec
inc
call
outs
into
mov
ret
call
pop
aad
pushf
hlt
jge
jae
dec
data16
sub
add
dec
ins
cmp
dec
fnsave
or
enter
dec
jne
jno
psrld
jns
xor
jecxz
or
into
repz
add
cdq
loope
out
push
jl
jl
sbb
shl
mov
xchg
shl
lahf
jnp
push
push
add
xchg
dec
push
push
jg
pushw
jmp
sub
jmp
push
mov
jmp
cmp
adc
push
sub
jo
fimul
and
cdq
cmp
sub
neg
cwde
fnstenv
pop
jle
das
cld
mov
dec
lock
xchg
and
(bad)
sub
jo
push
mov
mov
cmps
outs
add
cmps
pop
fnstenv
push
(bad)
retf
jp
dec
(bad)
div
mov
xchg
movs
mov
pop
pusha
cli
adc
dec
(bad)
das
aaa
arpl
stos
inc
fldz
pop
cdq
add
jmp
and
clc
stos
icebp
xchg
pop
test
sbb
push
cmp
(bad)
mov
sub
test
std
je
gs
ins
call
xchg
in
jnp
jmp
sbb
(bad)
call
mov
scas
hlt
add
std
pop
mov
sub
aas
pop
test
test
mov
pushf
fld
div
jb
dec
hlt
xchg
cmps
aad
into
pop
sub
aaa
mov
jmp
cmps
bound
ror
mov
into
add
lds
test
aam
fidiv
into
pop
inc
push
fstp
push
push
popa
lahf
je
add
inc
push
repz
ds
stos
retf
jge
pop
sub
cmp
ret
dec
mov
cmp
mov
xlat
(bad)
jmp
and
inc
pop
daa
mov
cwde
bound
cmp
fst
add
mov
aaa
pop
movs
sbb
mov
or
repz
pop
pop
mov
push
sahf
movzx
add
les
in
lock
cmp
in
add
fiadd
ss
or
shl
clc
mov
push
fdiv
mov
jmp
sub
jbe
addr16
ret
and
xor
push
loopne
dec
aam
mov
sbb
xchg
xor
popa
fild
ja
aad
mov
mov
mov
js
xchg
std
(bad)
mov
idiv
adc
inc
xchg
add
lods
jle
fisubr
push
and
addr16
cmp
push
xchg
jmp
and
push
jno
mov
sub
lods
xchg
lock
jmp
push
out
outs
cmp
xor
js
icebp
xchg
cmp
ss
push
popa
pop
repz
sub
jb
jecxz
cld
mov
fwait
push
pop
push
inc
mov
lods
add
mov
mov
pop
call
push
pop
pop
fisttp
out
jecxz
test
push
xlat
ins
aad
and
xchg
(bad)
jecxz
cmp
lods
and
dec
xchg
xchg
lods
ja
aas
jmp
out
push
nop
mov
(bad)
pop
cmp
inc
mov
push
cld
addr16
pop
jmp
in
mov
add
cmp
dec
adc
pop
(bad)
lahf
jp
xchg
fs
fimul
push
pop
sbb
sub
cld
stos
pop
mov
adc
xor
fs
cli
loope
sbb
jecxz
xor
jbe
push
sub
inc
mov
pushf
(bad)
out
xchg
popa
mov
and
jecxz
mov
sub
push
cmp
mov
or
arpl
adc
jne
sub
sbb
repnz
jecxz
mov
lods
bound
repz
neg
jge
in
mov
mov
cmpps
aaa
bound
retf
js
jb
les
mov
and
movs
aad
add
ret
pop
jge
adc
sbb
sar
or
xchg
push
mov
(bad)
dec
test
aam
xchg
sbb
jne
sub
mov
retf
inc
inc
xchg
bound
mov
xchg
ins
cld
out
ficomp
and
push
fs
add
sar
(bad)
mov
cmp
shl
pop
jns
jo
data16
sbb
lahf
cwde
scas
sub
sbb
(bad)
sub
or
inc
test
pop
aad
push
or
sub
test
outs
loop
pop
push
jnp
jmp
or
cld
dec
cs
add
sbb
rcr
xchg
jo
and
mov
jns
test
mov
cmp
jb
adc
aaa
sti
ins
fsub
in
nop
out
(bad)
out
or
push
mov
jmp
int3
dec
fist
test
add
adc
mov
mov
fidivr
push
call
repz
data16
sbb
jbe
shr
add
dec
jns
mov
adc
and
inc
or
and
loop
cwde
in
popf
cmp
add
cmp
sbb
mov
cmp
add
mov
pop
(bad)
xor
cmp
test
mov
leave
dec
jge
xlat
lds
jp
cld
jl
mov
push
sbb
jbe
cmc
shl
es
sbb
adc
ror
lahf
pop
test
mov
and
movs
cmp
clc
push
sub
ret
ror
dec
dec
jne
jb
and
les
test
xchg
mov
add
adc
in
ficom
xor
dec
fisub
pop
mov
scas
mov
daa
ss
iret
iret
movs
aam
pop
std
cld
in
lahf
loopne
out
test
and
sbb
xor
mov
movs
call
sub
or
aad
ror
jb
aam
dec
push
popf
add
dec
inc
nop
fsub
ror
imul
stc
push
inc
lds
sti
push
aad
mov
mov
cmp
call
or
inc
mov
push
cmps
dec
stc
mov
daa
mov
(bad)
and
(bad)
adc
sub
xchg
cmp
sbb
dec
or
ret
int
jg
pusha
and
scas
inc
hlt
or
mov
sub
aas
sbb
sub
idiv
(bad)
hlt
push
mov
fistp
push
pop
fbstp
ja
out
lods
and
into
test
xor
ficomp
rol
scas
pop
in
mov
and
adc
dec
push
jle
or
pop
or
cmp
ret
fst
(bad)
add
mov
inc
cli
jle
ret
inc
sbb
ror
pop
pop
add
add
mov
mov
add
aam
das
jne
fisub
in
int
fcomp
in
push
xchg
outs
shr
mov
inc
jae
pusha
aam
in
movs
lahf
loop
ret
sbb
adc
and
or
push
sbb
and
mov
movs
and
movs
cs
dec
cmp
arpl
add
push
inc
adc
jbe
adc
add
add
push
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
add
add
and
