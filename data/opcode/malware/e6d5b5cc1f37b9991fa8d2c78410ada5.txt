and
cmp
mov
mov
shl
add
push
(bad)
mov
dec
cmp
retf
add
xchg
adc
call
int3
mov
loope
push
mov
push
clc
mov
pop
aam
cli
je
sub
popa
pop
call
mov
mov
inc
fdiv
mov
outs
or
mov
sub
dec
mov
jle
xchg
pop
leave
sbb
(bad)
jecxz
dec
js
imul
mov
jp
mov
(bad)
cmp
sti
int3
xor
jecxz
cmp
push
ror
xchg
mov
shl
movs
jo
xchg
arpl
clc
ffreep
rcl
ins
ss
dec
jnp
push
mov
adc
mov
aaa
xchg
xor
(bad)
mov
ficom
loope
xchg
les
pop
adc
mov
mov
dec
xchg
xchg
repnz
xor
mov
add
and
xlat
xor
cmp
and
xchg
dec
mov
pop
dec
push
pop
aad
inc
mov
jl
les
das
mov
fmul
mov
(bad)
dec
lods
xchg
push
inc
and
ins
dec
fcomp
add
movs
xor
sar
call
lea
or
inc
xor
test
or
out
xor
add
rcr
mov
dec
(bad)
es
xor
dec
cmp
push
retf
mov
xor
daa
mov
bound
sub
and
(bad)
dec
mov
fisub
lock
icebp
pop
pop
xchg
mov
inc
test
in
out
jge
push
mov
pushf
lds
dec
je
add
lods
inc
(bad)
jns
push
das
push
jmp
ins
fstp
cmp
cmp
sahf
push
xlat
ret
fwait
loope
mov
(bad)
jl
sar
mov
push
jle
cwde
fsub
sub
cwde
push
xor
add
sbb
dec
fs
movs
jmp
je
shl
or
clc
call
push
(bad)
(bad)
jae
cmp
sub
int
xchg
pop
adc
push
in
bound
jle
scas
leave
cdq
xlat
jns
jae
or
xchg
sbb
es
xor
sbb
adc
popf
mov
retf
les
out
xchg
inc
and
xchg
xchg
stos
(bad)
push
jmp
out
das
xor
mov
or
sbb
jp
and
stos
(bad)
xor
inc
bsf
mov
or
fild
jl
jmp
imul
imul
jne
inc
push
and
repz
jmp
push
jne
enter
xchg
sub
repz
mov
pop
mul
shr
test
icebp
push
test
jg
sub
cld
mov
cmp
jnp
arpl
lea
pop
push
mov
pop
stos
cmc
or
mov
popw
and
fistp
dec
mov
mov
cmps
int3
stos
fnsavew
dec
cld
imul
jmp
lods
nop
icebp
or
cmp
scas
fcomp
shl
loopne
inc
ja
and
ret
sbb
or
in
adc
test
mov
inc
fistp
pop
enter
hlt
xchg
ds
xor
and
push
shl
and
mov
es
fsubr
add
loope
fs
daa
test
sbb
les
inc
fstp
ror
(bad)
cmp
cmp
sub
pop
adc
inc
dec
test
xchg
jle
dec
inc
lea
add
xchg
mov
push
or
iret
dec
or
push
dec
pop
or
ins
les
fild
inc
dec
mov
mov
jb
sahf
movs
je
jne
pop
cmps
sbb
add
cmps
push
sub
jg
cmp
lds
(bad)
pop
(bad)
mov
dec
xchg
in
jle
(bad)
xchg
jg
dec
lock
and
jae
mov
xor
xor
in
adc
lds
mov
int3
ja
pop
mov
push
sahf
(bad)
fcomp
aas
js
mov
adc
loop
jg
(bad)
cs
sbb
xor
and
aad
imul
lods
mov
imul
pop
mov
out
nop
xor
pop
mov
rcl
fidivr
fstp
lods
sub
mov
mov
dec
daa
retf
inc
pusha
inc
cmps
pusha
scas
add
adc
dec
mov
jo
ins
mov
jbe
hlt
in
and
sbb
rol
sbb
test
jnp
sbb
adc
jmp
or
inc
movs
jg
push
sahf
jp
mov
jno
jmp
loope
sbb
mov
mov
cmp
sub
and
scas
enter
mov
je
sbb
xor
xchg
jl
stos
lock
push
test
sub
sbb
xor
push
cmp
imul
and
sub
stos
stos
js
test
or
dec
sub
jmp
pop
not
arpl
ret
mov
mov
adc
mov
jne
ror
adc
ja
and
aad
xor
xchg
mov
fstp
je
xor
arpl
jb
(bad)
fdiv
dec
ret
fiadd
push
pop
aaa
fst
jnp
in
mov
xchg
bound
sub
xor
mov
mov
xor
lahf
stos
pop
push
dec
add
call
cmp
mov
lahf
dec
sbb
add
mov
icebp
and
(bad)
out
mov
out
push
dec
cmp
mov
inc
adc
addr16
jle
fiadd
dec
aaa
popf
scas
cmps
inc
aam
pop
retf
and
jecxz
or
inc
xor
sub
(bad)
shr
mov
add
(bad)
bound
(bad)
mov
push
imul
jg
push
movs
mov
mov
jne
xlat
popa
outs
xchg
adc
or
xchg
pushf
imul
push
hlt
test
in
int3
leave
addr16
xor
lods
in
xor
and
xor
mov
inc
pop
and
xor
add
push
cmps
repz
inc
addr16
scas
ret
mov
and
dec
movs
or
jnp
push
adc
mov
out
xchg
mov
int3
das
(bad)
clc
xchg
daa
repnz
in
mov
sbb
or
or
and
pop
outs
push
mov
(bad)
jbe
int
je
cmp
popf
xchg
jmp
clc
inc
mov
add
and
stc
sub
out
jne
shl
ds
(bad)
or
test
jp
(bad)
dec
sbb
fcmovnb
loopne
or
push
cli
adc
cmp
pop
dec
data16
jle
imul
sub
call
push
call
enter
mov
jmp
jae
sbb
(bad)
(bad)
ficom
pop
xchg
adc
push
mov
push
add
loope
and
pop
in
and
rol
sbb
adc
mov
out
rcr
jb
push
test
sti
dec
jg
or
jae
popf
jg
mov
push
adc
xor
push
pop
popa
sub
paddsb
and
xchg
stos
mov
inc
mov
nop
cld
data16
in
mov
adc
scas
sub
inc
jmp
push
lods
mov
ret
adc
or
or
inc
push
or
dec
add
adc
bound
test
pushf
repz
addr16
push
loope
dec
xchg
fld
mov
xchg
out
inc
mov
(bad)
leave
mov
retf
mov
pusha
repnz
xor
int3
out
pop
aas
addr16
sbb
inc
dec
cmp
jnp
push
mov
add
add
test
dec
sbb
das
and
adc
call
mov
push
bound
fidiv
outs
or
pop
adc
jmp
or
mov
mov
rcl
ins
cmp
sbb
push
jmp
daa
std
stos
push
pop
cld
xchg
maskmovq
imul
sbb
leave
push
fisubr
les
scas
lock
adc
mov
xchg
jb
mov
fdivp
icebp
(bad)
out
mov
push
jmp
lods
aaa
mov
adc
jns
loop
aaa
xchg
out
and
cmp
pop
push
loope
bound
add
fild
mov
imul
jge
jo
sbb
add
daa
(bad)
daa
pushf
mov
clc
xchg
test
fst
mov
cmp
bswap
sbb
sar
adc
sar
mov
daa
push
(bad)
pop
scas
push
sbb
inc
ss
adc
fiadd
mov
js
xor
mov
sub
mov
aaa
mov
shl
test
inc
jbe
add
fmul
xor
mov
imul
shl
pop
adc
call
jg
gs
sahf
movs
and
add
add
movs
add
std
shl
lods
xlat
daa
and
cs
in
sbb
daa
aaa
sti
add
out
mov
cld
shr
movs
dec
sbb
dec
out
xchg
outs
inc
inc
jno
scas
in
movs
repnz
fs
(bad)
sti
mov
adc
cmp
jmp
sub
and
fld
pop
inc
pop
adc
ins
inc
call
and
pusha
popf
push
and
idiv
adc
out
test
jno
mov
adc
dec
movs
repnz
push
push
pusha
lock
call
xchg
sar
mov
ret
push
or
das
daa
sbb
xor
xor
pushf
xchg
nop
sbb
cwde
sbb
xor
jl
sahf
add
clc
mov
mov
add
lahf
xchg
jl
or
pop
add
pop
loop
int
push
or
mov
fisttp
imul
lds
(bad)
and
aad
sbb
ret
or
cmc
cmp
dec
cmc
and
rcr
dec
adc
push
sub
sub
(bad)
out
jbe
dec
pop
mov
in
or
loopne
test
inc
jb
lods
(bad)
retf
xor
iret
mov
cmp
fsubr
jne
in
adc
outs
xchg
call
pop
scas
xchg
or
iret
dec
out
adc
pop
iret
xchg
xor
stc
je
jg
call
ja
mov
popf
and
pop
push
jg
jns
(bad)
sub
inc
or
cmp
daa
sub
push
mov
fucomi
in
push
js
sub
inc
stos
mov
mov
xchg
rcr
mov
daa
outs
sub
cwde
xchg
cli
mov
mov
add
gs
xchg
(bad)
les
cmp
hlt
iret
adc
outs
and
sahf
fmul
shl
mov
mov
cmc
cmp
sbb
js
dec
(bad)
push
and
int3
scas
hlt
cmp
sbb
jg
and
jno
jg
xor
cmp
test
(bad)
xchg
dec
cmps
cli
sub
sbb
push
mov
hlt
mov
js
xor
inc
pop
dec
adc
aam
dec
stos
sub
shl
mov
or
aam
push
sub
test
pop
adc
lods
and
retf
mov
imul
and
jmp
mov
movs
lock
les
icebp
hlt
push
(bad)
adc
data16
pop
repz
aam
lock
inc
fbld
outs
loope
jmp
scas
sbb
sbb
jmp
daa
stos
movs
lock
sbb
std
adc
mov
sub
rcr
pushf
mov
mov
jnp
outs
shr
(bad)
rol
imul
or
inc
cwde
rep
outs
mov
pop
push
shl
jl
sub
xchg
scas
sub
xor
sub
jno
inc
jge
shr
adc
int3
les
sub
pop
jae
or
push
sbb
sbb
mov
pop
and
gs
and
pusha
xchg
dec
scas
movs
popa
cs
shr
mov
mov
ss
jle
mov
and
sub
call
jae
enter
add
les
ror
idiv
xor
test
repz
les
mov
add
data16
sbb
mov
or
inc
cmps
mov
inc
enter
aaa
call
and
jne
sbb
pop
xor
cmc
pop
and
rcr
mov
movs
xchg
imul
dec
retf
lods
loope
push
out
adc
mov
push
jns
dec
xlat
cwde
adc
ins
imul
push
neg
mov
xor
dec
ins
in
inc
sbb
or
cmc
es
mov
cmc
mov
xor
or
shl
pushf
fnstsw
test
scas
test
xchg
sbb
mov
push
pop
dec
xchg
xchg
sahf
xlat
aad
sbb
aam
stos
ds
xchg
jg
jne
loope
push
sbb
push
sbb
sub
jecxz
lods
add
shr
lods
fild
adc
scas
mov
pop
mov
test
or
push
inc
add
scas
mov
push
push
dec
xchg
inc
sar
xchg
adc
and
stos
in
or
rcl
ret
pop
push
out
cmp
fild
mov
arpl
push
add
sti
rcr
mov
test
aad
xchg
test
cdq
cs
xor
stos
dec
outs
test
fadd
add
mov
daa
stos
mov
dec
xor
mov
shl
jbe
int
ret
rol
mov
scas
jae
(bad)
aad
ror
jg
mov
imul
aas
mov
bound
dec
pcmpgtw
loop
push
mov
add
shl
push
je
xchg
das
add
pusha
loope
push
jnp
cmp
sti
aad
movs
mov
lock
in
(bad)
cmps
rcl
or
xchg
mov
mov
jmp
lahf
sti
sub
jge
stos
rcl
cs
jnp
xor
sub
pop
mov
xchg
stos
xchg
mov
lea
ror
cdq
movs
jae
adc
loopne
arpl
rcl
xchg
fst
jp
mov
stc
push
ins
pop
movs
fsub
cli
xor
xchg
mov
dec
outs
xlat
stc
loopne
pop
test
or
call
rcr
jbe
pop
ss
sbb
jns
std
rol
in
int
sub
sti
or
(bad)
loope
call
stos
inc
mov
pop
mov
adc
push
jg
cmc
shl
mov
xchg
cmp
jcxz
ror
test
mov
(bad)
cmp
call
mov
ficomp
mov
pop
jmp
or
lds
ror
push
mov
pop
mov
jge
cwde
retf
loopne
sub
fcomp
push
push
in
or
adc
pop
mov
push
push
push
mov
mov
nop
jo
dec
pop
push
pop
outs
iret
push
or
hlt
mov
mov
pusha
xor
sbb
push
adc
cli
mov
out
jo
pop
xchg
jl
sbb
push
pop
ror
movs
lea
mov
or
es
pushf
mul
leave
shl
ror
mov
aam
mov
test
cmp
aam
clc
rcr
xchg
sbb
test
pop
aas
push
aam
and
(bad)
(bad)
dec
cli
cmp
rol
lods
aas
lock
xor
mov
ss
bound
add
adc
mov
push
popa
(bad)
xor
mov
xchg
jae
adc
pop
mov
jmp
dec
jge
mov
xor
lods
mov
lea
je
test
pop
adc
mov
jns
fcomp
jno
aad
jb
xor
dec
movs
or
pop
xor
enter
add
push
and
mov
loop
shl
sub
pop
rol
push
div
cmps
mov
sub
mov
xchg
(bad)
div
xchg
jo
pushf
popf
xor
pop
cmp
test
sub
(bad)
pop
iret
jmp
jmp
mov
leave
mov
dec
int3
lods
xor
dec
cmp
pop
xor
ficomp
loop
(bad)
pop
nop
(bad)
test
push
mov
xor
fadd
pop
mov
repz
sub
mov
js
outs
jno
add
pushf
stos
icebp
push
push
call
ds
nop
mov
xor
sar
fs
add
sub
sti
icebp
inc
push
inc
sbb
dec
push
jnp
xchg
call
arpl
xor
mov
shr
iret
xchg
fist
mov
hlt
or
push
stc
xchg
(bad)
enter
sub
push
int3
cld
mov
sbb
sbb
push
pop
pop
xlat
mov
mov
sbb
int3
jmp
mov
call
retf
jecxz
mov
pusha
push
aam
div
xchg
pop
fst
pop
cmc
ret
(bad)
fdiv
push
xor
sbb
out
and
dec
xor
adc
dec
push
dec
cmovs
and
fwait
in
clc
sub
(bad)
adc
push
dec
call
xchg
cmc
movs
rol
cs
xchg
dec
cmc
inc
xchg
and
jecxz
or
pop
mov
jno
jmp
sub
cmp
add
push
rol
inc
and
or
aam
fcomp
push
xor
xchg
jnp
dec
lods
dec
mov
jecxz
(bad)
imul
int
sub
sub
sub
sub
jecxz
pop
fstp
jmp
inc
or
push
test
and
pop
or
loope
ins
ins
inc
(bad)
and
or
sbb
in
sahf
lock
loopne
ins
iret
sahf
ja
sub
mov
inc
mov
shl
xor
push
ds
dec
or
shl
or
aam
dec
xor
adc
ds
mov
pop
daa
dec
push
aas
lahf
bound
jnp
sti
cmp
mov
inc
sub
(bad)
push
aad
repnz
repnz
pop
jle
push
and
daa
out
xchg
mov
dec
lahf
push
pop
mov
mov
hlt
dec
and
mov
jae
jo
int3
lock
inc
push
cmp
xlat
arpl
test
cmp
test
mov
(bad)
adc
xchg
adc
(bad)
sbb
add
mov
pusha
xchg
sub
and
mov
cwde
xchg
sbb
call
icebp
inc
jecxz
and
mov
loopne
xchg
aad
in
adc
cmp
das
sub
adc
mov
jmp
add
fwait
adc
pusha
jp
out
push
rcl
adc
addr16
scas
(bad)
jno
loopne
fmul
mov
(bad)
call
xor
and
popa
jmp
adc
jp
enter
pushf
popf
js
mov
pop
call
cmp
cmp
and
loope
push
pop
cmp
aas
lock
mov
push
(bad)
push
test
leave
or
xchg
add
fdivr
sub
mov
adc
pop
add
(bad)
pop
pusha
pop
mov
xchg
or
ficom
cmp
das
dec
dec
cwde
fistp
(bad)
idiv
or
das
lods
sahf
add
sahf
push
push
push
jp
imul
adc
nop
mov
fucomi
xchg
das
adc
out
push
push
(bad)
dec
jbe
(bad)
mov
mov
les
push
pop
add
(bad)
jno
lods
dec
push
test
mov
or
sar
cmp
jbe
push
cli
cmp
dec
cmp
add
xchg
xor
push
jo
jmp
es
stos
das
repz
in
retf
call
daa
sub
xor
test
scas
jae
and
fisttp
cmp
and
cmps
and
mov
fimul
mov
loop
xor
repnz
movs
sub
call
popa
pop
stc
and
sub
(bad)
in
sub
and
cmc
arpl
cmp
pop
jmp
int3
add
jmp
mov
sub
inc
popa
pop
sbb
cmp
int3
sbb
into
jae
out
push
mov
ss
loopne
btc
popa
jmp
pop
inc
push
xlat
pop
daa
outs
xchg
popf
sbb
(bad)
xor
iret
pop
addr16
(bad)
jo
enter
pop
sub
mov
aas
lea
inc
stc
pop
mov
mov
fdivr
scas
jge
sbb
mov
test
shl
mov
fidiv
call
fs
lahf
movs
stos
jbe
test
imul
loop
pop
ja
loopne
inc
sub
xchg
cmp
cmp
xchg
jmp
pop
call
mov
std
push
dec
int
push
mov
mov
mov
or
call
lods
shl
adc
nop
into
xor
lods
or
dec
retf
adc
push
data16
jp
xor
xchg
mov
adc
(bad)
iret
sub
dec
in
jne
push
ret
sbb
pop
push
loop
jnp
and
cmps
into
sub
js
movs
jno
adc
arpl
or
cmp
pop
imul
cmps
xchg
(bad)
out
inc
imul
mov
jecxz
xchg
or
cmp
jnp
jbe
cdq
mov
pop
adc
or
mov
xchg
or
xchg
sbb
mov
add
mov
or
xchg
aad
lock
cmps
jge
iret
cmps
jl
int
pop
and
fistp
sti
jg
aas
xchg
xchg
and
ds
mov
stos
jecxz
dec
adc
(bad)
(bad)
mov
push
cld
mov
inc
cmp
push
out
adc
xchg
imul
call
adc
hlt
cmp
js
dec
arpl
xor
cmp
ja
sub
jno
rol
cli
xor
je
hlt
xor
fild
sub
or
fdivr
jnp
movs
sub
mov
ins
popf
mov
mov
push
sub
mov
repz
and
pop
lea
jno
cmp
enter
push
and
cld
repz
adc
mov
int3
mov
call
lds
cmc
je
(bad)
jge
inc
dec
js
lahf
ja
sbb
pop
cmps
jo
lods
pushf
pusha
repz
add
fs
push
pop
sub
xchg
das
sub
ds
pop
mov
imul
scas
cmp
adc
adc
mov
out
ss
mov
pcmpgtd
rol
mov
loopne
sub
arpl
jl
int
dec
jp
dec
dec
push
push
cwde
jg
cli
sbb
jo
cmc
mov
mov
mov
fwait
test
push
add
push
add
sar
arpl
pop
pop
xchg
xchg
mov
arpl
jge
sahf
(bad)
adc
cwde
sub
cld
shr
addr16
es
ror
cwde
or
sbb
pop
repnz
xor
cli
pop
pop
data16
inc
stos
jle
push
shl
test
add
mov
mov
cwd
les
mov
aam
fld
cmps
(bad)
fmul
aas
out
mov
cmp
(bad)
call
or
lds
scas
sub
mov
xchg
test
aam
mov
mov
pop
mov
fisubr
mov
inc
fcmovbe
fst
add
in
xchg
or
adc
xlat
popa
in
leave
iret
inc
clc
sub
xchg
(bad)
push
ficomp
jae
mov
add
fmul
lods
push
fwait
dec
ficomp
mov
bound
gs
call
push
clc
inc
test
or
mov
fbld
fmul
sub
mov
mov
push
mov
pop
mov
rcr
push
push
test
push
xchg
or
push
or
xchg
push
outs
or
pop
rcr
hlt
jp
xchg
xlat
sbb
jb
mov
gs
adc
test
outs
in
lock
shl
fstp
cmp
daa
mov
jle
jbe
fcmove
sbb
sti
cdq
xchg
jae
pop
sbb
ret
aaa
cmp
inc
jge
adc
nop
loopne
mov
int3
and
imul
adc
ret
outs
call
(bad)
jns
nop
jne
ror
fdiv
or
out
adc
xchg
es
pop
fsubr
cmps
dec
dec
shl
lods
(bad)
lds
and
mov
jne
shl
fdiv
dec
pop
test
push
dec
and
out
xor
push
mov
pop
inc
mov
sti
mov
lods
(bad)
rcl
(bad)
mov
inc
dec
aaa
in
adc
mov
aaa
pop
(bad)
jo
lahf
mov
and
xchg
test
(bad)
scas
ins
in
jmp
adc
sub
mov
out
es
loop
mov
arpl
add
aas
cmp
out
lods
in
xchg
add
mov
fs
mov
lods
or
sti
inc
adc
stc
pop
pop
(bad)
fstp
inc
push
outs
enter
mov
cmp
(bad)
jmp
pop
jle
mov
xchg
les
and
jns
ja
push
mov
fwait
lds
add
or
icebp
dec
add
jg
stc
xchg
dec
push
lds
mov
and
(bad)
xlat
lahf
add
push
add
add
jmp
enter
js
jns
push
pop
adc
imul
in
cwde
mov
and
bound
dec
movs
jg
sbb
inc
mov
rcr
mov
lods
fcomp
push
ins
pop
mov
xchg
in
retf
retf
sub
push
movs
cmp
jbe
je
cmp
mov
mov
int3
pop
or
bound
dec
or
repz
sbb
out
cmp
imul
adc
mov
cmp
icebp
or
(bad)
lods
pop
mov
int3
movs
cmps
xor
stos
sahf
or
jo
sti
js
iret
sub
xchg
adc
je
or
xchg
mov
adc
loopne
dec
xor
push
stos
xor
mov
xor
lods
add
in
aad
and
out
inc
mov
adc
cmps
pop
fdiv
js
repz
repz
xlat
loope
enter
inc
push
cmc
call
push
or
(bad)
push
sahf
fbld
daa
mov
xchg
or
and
sahf
cmp
(bad)
inc
scas
or
inc
nop
or
xor
push
imul
pop
pop
and
fs
adc
mov
mov
gs
dec
dec
or
outs
mov
fsub
pop
loopne
rol
imul
xor
or
add
jne
cwde
ins
xchg
jle
sub
fwait
xor
push
arpl
retf
or
add
mov
int3
cmp
push
ins
jmp
mov
jp
test
ja
and
cwde
aad
movs
movs
mov
pop
mov
cmc
(bad)
xchg
data16
cmps
xchg
jl
pop
inc
jmp
or
mov
push
cs
mov
jae
fadd
aas
dec
lahf
cmp
int3
pop
sti
outs
sbb
scas
pushf
nop
fsubr
push
xor
cmc
hlt
ds
cli
pop
push
(bad)
or
jle
inc
imul
dec
sbb
sbb
mov
and
lock
xor
or
popf
jp
ret
xchg
inc
or
int3
das
addr16
cmp
xchg
xchg
push
add
outs
ja
xchg
and
add
push
loop
(bad)
mov
cs
jae
les
mov
and
dec
popa
fsubr
outs
sahf
xor
mov
adc
sti
xchg
in
out
sub
mov
sbb
in
xchg
sbb
dec
mov
in
add
mov
inc
mov
dec
pop
icebp
xor
mov
xlat
pop
and
movs
cmps
iret
and
retf
dec
push
cmc
fild
inc
test
mov
iret
inc
sbb
sub
push
pop
sahf
push
js
sub
sbb
int3
aaa
div
mov
cmps
movs
aas
scas
lahf
or
jge
and
xchg
xor
(bad)
mov
push
(bad)
aam
sbb
stos
(bad)
and
cmp
xor
fsubr
inc
fcomp
int3
inc
test
or
xchg
push
mov
mov
mov
lods
in
mov
adc
not
add
rcr
sub
or
mov
mov
test
pushf
add
mov
xor
test
add
push
mov
mov
add
repz
xor
test
or
push
fist
mov
push
fild
adc
inc
fs
xor
bnd
xor
dec
popf
or
cmp
xor
retf
dec
add
scas
and
xor
nop
pop
in
lock
addr16
pop
enter
aaa
mov
jle
add
sbb
push
mov
or
call
pop
mov
mov
stos
mov
sbb
mov
pop
jns
in
xor
(bad)
fidiv
cli
jnp
nop
ud2
shl
lea
cwde
inc
xchg
push
(bad)
pop
aas
iret
in
sahf
jbe
scas
cmps
mov
int3
xor
call
cmp
xchg
(bad)
test
inc
sbb
sub
dec
test
fwait
mov
push
iret
aas
inc
push
mov
test
sub
mov
add
out
push
scas
jmp
fisubr
cmps
scas
jmp
lds
sub
xor
cmp
push
sbb
repnz
out
scas
or
pop
fsubr
mov
neg
push
or
mov
sti
sbb
out
pusha
pop
dec
iret
imul
pop
push
pusha
inc
push
(bad)
scas
retf
hlt
sbb
push
inc
loopne
sbb
shr
dec
or
or
or
stos
aas
ret
aam
out
pop
mov
fidivr
dec
repz
cmps
(bad)
jbe
aaa
mov
add
and
test
jge
jle
dec
mov
hlt
or
cmp
push
movs
mov
push
(bad)
add
icebp
dec
add
inc
push
pop
ja
enter
js
pop
mov
xchg
cmp
aas
mov
lods
xor
pushf
or
push
daa
push
das
or
mov
dec
nop
inc
mov
xchg
cli
mov
bound
sub
xor
dec
push
sti
clc
inc
popa
jmp
jbe
pop
sbb
nop
(bad)
pop
rcr
popa
iret
or
xlat
mov
mov
inc
ret
jnp
mov
test
pop
(bad)
mov
jecxz
cld
mov
mov
pop
sub
cmp
pushf
ss
mov
in
scas
rcr
push
add
jmp
idiv
mov
test
pop
aam
mov
or
data16
sub
mov
xchg
in
int3
pop
cmp
ficom
dec
div
stos
inc
(bad)
jns
jmp
inc
xor
mov
xor
fist
call
lods
add
aas
sbb
jno
movs
or
loopne
sbb
mov
fist
pop
out
int
push
or
push
mov
sub
inc
mov
sub
jmp
pop
outs
and
cmps
dec
jb
(bad)
movs
jmp
sub
mov
jb
sub
push
imul
mov
in
ss
ficomp
retf
cmp
clc
xor
popa
outs
cwde
pop
xchg
call
aam
aaa
sub
test
dec
adc
xor
int
ret
jo
push
shl
test
xor
jne
and
aad
hlt
not
and
push
push
mov
cmp
data16
leave
out
rol
cmps
ret
inc
pop
cmp
sbb
push
xchg
rcl
movs
mov
push
inc
dec
push
xor
adc
mov
aas
add
pop
loop
into
xchg
pop
and
rcl
cmp
lods
loopne
pop
push
fcom
xchg
ret
inc
sub
stc
popf
mov
lods
arpl
push
sbb
dec
loope
cmp
mov
cmp
and
and
stc
jb
scas
xchg
pop
cmps
jl
cmp
int3
cmc
push
mov
fisttp
sub
into
push
rcl
inc
jbe
mov
and
and
and
cmp
add
sbb
bound
adc
xor
(bad)
outs
push
(bad)
mov
xchg
scas
sti
add
cmp
and
mov
push
xor
mov
pushf
lods
xchg
arpl
call
inc
xchg
retf
mov
sbb
fldcw
jg
icebp
idiv
adc
je
xchg
lock
sbb
fwait
sub
and
and
dec
push
neg
xchg
cdq
daa
jnp
inc
mov
and
sbb
popa
cld
sbb
and
inc
pop
imul
in
cs
jae
pop
call
enter
div
push
xchg
sbb
gs
sbb
loop
pop
in
dec
dec
shl
cs
rep
mov
fimul
dec
(bad)
mov
outs
jmp
(bad)
sbb
mov
ret
int3
imul
xchg
fs
int3
add
cmc
icebp
test
adc
popa
mov
dec
in
sbb
lods
mov
and
out
ja
div
sbb
inc
add
pusha
xor
xchg
enter
adc
ret
call
ret
pusha
pop
mov
cmp
xor
pop
or
in
les
xor
not
lea
daa
push
sub
sbb
imul
pushf
dec
add
mov
cmp
addr16
push
inc
scas
and
push
or
add
pop
jmp
fisttp
push
jo
ror
outs
mov
mov
aad
lock
jo
rcl
lahf
sub
fs
repnz
fistp
cmp
imul
movs
or
jle
push
mov
or
test
adc
sti
arpl
mov
mov
xchg
rcr
outs
jno
mov
jae
push
inc
psubw
cmp
jg
(bad)
or
cmp
imul
cwde
cs
jns
add
jp
dec
xor
and
fnstcw
mov
xchg
jno
mov
test
and
xchg
sub
cmc
jmp
or
jg
gs
addr16
cmps
fwait
push
fs
jle
imul
xchg
mov
or
jnp
or
lods
xchg
pop
mov
in
fimul
fdiv
cmps
dec
push
sub
sar
inc
cwde
and
(bad)
or
add
xchg
jae
pop
mov
loope
stos
xchg
in
mov
test
jo
outs
test
lahf
test
dec
mov
in
jle
movs
or
out
mul
sbb
inc
mov
mov
mov
stc
fwait
inc
jmp
ret
cwde
sahf
lods
cmp
mov
ret
jmp
mov
dec
cmps
popf
loop
and
mov
push
test
aaa
mov
(bad)
fidivr
dec
pop
or
adc
ror
mov
push
mov
jmp
add
mov
cmp
jle
cmc
sub
test
movs
fmul
xchg
stc
pop
loop
mov
or
outs
adc
adc
out
cs
sbb
retf
sbb
into
icebp
shl
in
push
jno
scas
bnd
repz
sahf
jmp
(bad)
out
arpl
xor
inc
xchg
ja
in
mov
mov
shr
mov
fs
stos
and
hlt
cld
mov
mov
cwde
in
jmp
dec
lds
pop
and
push
fimul
pop
fimul
jnp
push
dec
repnz
mov
dec
rcl
fwait
cmps
lea
rcr
xchg
in
xor
cmc
mov
out
adc
push
xor
push
fucomi
jmp
and
repz
ret
cmps
dec
iret
das
imul
mov
push
sub
lahf
loopne
lods
inc
clc
mov
in
mov
and
add
(bad)
xchg
sub
mov
pop
xchg
add
mov
loopne
dec
mov
std
int
or
push
shl
mov
out
(bad)
fidivr
test
jecxz
jecxz
xor
inc
mov
and
push
xor
in
das
push
out
pushf
lods
cmp
jge
fild
movs
sbb
push
loopne
mov
mov
sub
adc
in
ror
iret
lea
bound
repz
xchg
outs
pop
mov
mov
sub
jne
shl
fldcw
push
ret
push
cmp
and
pop
push
push
cmove
(bad)
mov
out
ror
cmps
sub
push
xchg
imul
aad
push
ror
fnstcw
imul
out
rol
test
cmc
push
and
es
pop
cmp
dec
xchg
stos
and
jle
or
stos
(bad)
or
in
cmp
or
dec
stos
test
xchg
adc
xor
jge
inc
call
mov
shl
inc
mov
lock
xchg
sbb
sbb
cld
add
hlt
dec
mov
and
(bad)
and
xor
stc
add
mov
add
add
xchg
mov
retf
aas
mov
pop
out
out
out
inc
imul
inc
daa
push
int3
mov
scas
ret
cmp
arpl
xor
int3
jmp
retf
data16
xor
(bad)
out
cli
fbld
es
and
sbb
test
pop
jg
sti
add
fldcw
push
inc
xor
movs
jb
cmc
movs
je
dec
push
repz
cli
test
movs
scas
xlat
outs
xor
or
shl
fs
aaa
bound
mov
ret
outs
xchg
dec
cmp
adc
sub
mov
test
inc
sbb
push
xchg
lea
push
(bad)
xor
pop
cli
mov
xchg
lods
push
sub
xor
xor
lahf
add
jns
sub
out
(bad)
pop
mov
xor
cmp
ret
sti
push
and
shl
(bad)
or
push
push
aaa
stos
push
jp
mov
adc
lock
loope
hlt
aas
or
lods
(bad)
not
pop
loop
jmp
clc
push
mov
movs
adc
dec
xchg
mov
cmps
movs
in
jo
add
nop
jb
ins
cmc
test
imul
clc
jb
nop
sbb
rep
dec
in
xor
push
xor
adc
nop
ret
pop
sbb
mov
jecxz
adc
cmps
cmp
lock
(bad)
sub
in
cdq
inc
cld
sahf
pushf
dec
add
dec
push
cs
mov
cmps
imul
sbb
ins
jge
imul
sbb
mov
add
mov
xchg
sbb
fist
jb
adc
aam
mov
pop
xchg
inc
mov
push
cld
and
leave
xchg
dec
sub
icebp
xor
test
sahf
repz
sti
jno
iret
cmps
cmp
push
test
or
mov
sub
sub
mov
jnp
(bad)
fistp
nop
dec
(bad)
mov
lea
gs
add
in
cs
out
push
movs
mov
jp
dec
lods
adc
(bad)
js
push
(bad)
in
std
out
sti
addr16
aad
fild
mov
retf
pushf
out
std
repnz
dec
dec
lods
scas
ds
adc
repz
and
add
leave
inc
daa
test
push
mov
pop
add
mov
nop
enter
icebp
adc
lods
pop
xchg
xor
in
jbe
push
cwde
or
jge
imul
mov
cmp
adc
cwde
jbe
loop
fidivr
or
test
mov
rol
stos
inc
test
jae
and
xor
ficom
pop
pop
retf
leave
out
xor
pop
jno
mov
and
pop
loope
outs
jmp
and
retf
jg
cmp
mov
pop
rol
and
mov
daa
xchg
sti
fucomi
(bad)
inc
push
aad
dec
inc
adc
mov
repnz
add
call
pop
movs
adc
cld
call
sbb
imul
sbb
inc
repz
push
cmc
push
or
mov
lds
scas
dec
hlt
fnsave
dec
fs
sbb
inc
push
test
sbb
fidiv
stc
sbb
shr
outs
jno
movs
js
cmp
mov
dec
mov
int
(bad)
mov
dec
cwde
icebp
cmp
popf
mov
lea
push
fwait
call
clc
mov
push
(bad)
into
inc
jnp
outs
xor
cwde
mov
rol
fs
cmc
jg
sbb
fadd
clc
cmc
mov
push
cs
pop
(bad)
or
int3
xchg
sbb
sub
xchg
jb
mul
repz
sti
lods
dec
pop
adc
les
dec
mov
in
xor
inc
icebp
or
xchg
fs
wrmsr
sbb
xchg
ret
inc
push
dec
inc
fmul
add
arpl
pusha
scas
jb
cmp
mov
arpl
into
imul
jno
mov
stos
jb
xchg
ret
loope
mov
leave
je
mov
dec
xchg
das
es
ins
mov
jmp
dec
mov
ror
inc
push
stos
jns
sub
fdivr
lahf
aam
(bad)
inc
xchg
sub
shr
nop
std
cmc
cmp
mov
inc
add
sahf
iret
push
sbb
push
ror
sahf
push
sub
mov
int
cmp
inc
loope
movs
xor
xchg
ds
frndint
pop
test
inc
cmp
jge
stos
fucomp
test
jp
(bad)
or
jle
dec
repz
xchg
inc
mov
leave
mov
adc
dec
inc
mov
xchg
jecxz
mov
add
shl
cli
mov
es
mov
pushf
fsubrp
popa
inc
cwde
sbb
xor
sbb
and
adc
bound
call
jp
mov
movs
xlat
popa
and
push
mov
mov
arpl
adc
and
enter
jmp
repnz
jge
in
adc
add
jg
retf
and
popa
stos
fs
sti
inc
out
adc
jne
out
imul
movs
add
pop
jae
lock
jmp
pop
or
sub
movs
adc
cmp
push
aas
test
pop
lods
es
and
popf
sbb
repnz
xchg
push
cmc
push
adc
push
mov
sub
test
inc
arpl
inc
adc
jo
cmp
fidivr
outs
xchg
ds
lock
adc
xchg
jae
mov
and
dec
pop
dec
dec
add
int
leave
and
test
stos
es
repz
mov
mov
push
jp
mov
dec
dec
cdq
sub
mov
scas
adc
movs
xor
test
sub
sub
mov
in
push
scas
jne
sub
cs
pop
shrd
add
sbb
outs
push
or
das
bound
int
inc
push
or
dec
sub
mov
mov
jp
sahf
lahf
dec
movs
out
cdq
dec
enter
jg
add
das
xchg
call
push
xchg
cmps
add
mov
cdq
xor
movs
cmps
mov
inc
inc
imul
int
jmp
popa
shr
(bad)
or
call
xchg
jecxz
enter
pop
xchg
xor
js
and
mov
jae
sbb
icebp
mov
sbb
arpl
lock
out
hlt
push
rcr
lea
stc
jnp
fwait
mov
shr
rcr
int3
ds
adc
mov
xchg
xchg
inc
adc
pop
call
mov
stos
lock
push
mov
stc
inc
fcmovbe
push
shl
retf
lods
push
dec
inc
mov
popa
fdivp
cdq
clc
fimul
enter
das
cmps
scas
mov
sbb
test
jmp
cli
cdq
xlat
pop
push
in
lea
mov
ja
xlat
xchg
xor
pop
jns
cdq
lds
and
sbb
mov
and
repnz
mov
inc
xlat
xor
xchg
int
cmps
sub
cmps
mov
inc
sub
jmp
pop
nop
dec
mov
mov
cmp
fdiv
clc
dec
jbe
imul
add
daa
mov
fdivp
pop
xchg
loopne
xchg
or
(bad)
cmp
aad
test
mov
add
jae
test
or
sbb
imul
sub
ror
sbb
add
pop
push
lea
push
xchg
scas
test
adc
adc
sti
iret
inc
adc
xchg
fnstsw
sub
test
xor
push
xchg
adc
and
jae
jmp
(bad)
cmp
arpl
cmc
and
(bad)
arpl
and
in
cmp
(bad)
mov
push
mov
cmps
jbe
je
jbe
scas
sbb
cli
cmp
cmp
pop
loop
sbb
stos
cmc
xchg
jle
adc
int
lahf
and
pusha
mov
push
sbb
xor
jnp
inc
call
dec
sbb
data16
test
inc
mov
ror
push
mov
clc
fmulp
push
dec
pop
xchg
mov
xchg
ins
adc
adc
cmp
push
icebp
mov
shl
dec
(bad)
sub
ret
cmp
icebp
retf
cmp
pop
(bad)
and
(bad)
(bad)
mov
mov
je
shr
cld
and
mov
imul
xchg
pop
ja
sbb
sub
std
call
fisubr
mov
test
cmp
inc
pop
(bad)
sar
mov
cmp
mov
(bad)
fadd
pop
ins
pop
push
push
push
adc
cmp
shl
adc
mov
lods
lds
jle
inc
out
daa
bound
fldenv
jbe
push
and
enter
dec
sub
cli
adc
(bad)
sub
adc
setge
add
sbb
push
xchg
pop
pop
mov
xlat
jmp
adc
inc
(bad)
jmp
xor
or
cmp
cli
push
or
xchg
jne
ins
ins
ror
push
xchg
stos
push
add
sar
xchg
out
retf
pop
aas
popf
movs
push
loope
xor
sub
in
xchg
mov
scas
jl
or
inc
repnz
into
bound
jae
mov
mov
xor
push
fisubr
adc
mov
das
hlt
pop
les
jmp
jmp
mov
faddp
movs
mov
fwait
push
fimul
scas
xchg
imul
push
jecxz
push
and
scas
pop
cwde
fcom
or
mov
mov
fcmovb
imul
scas
(bad)
mov
arpl
(bad)
inc
lahf
xchg
sbb
in
aas
jae
sbb
mov
pop
dec
mov
push
jmp
ja
xchg
jp
cdq
fsubr
mov
and
push
fmul
mov
in
fwait
stc
(bad)
(bad)
inc
inc
pop
call
xlat
and
xchg
ret
mov
(bad)
lea
addr16
push
out
retf
test
mov
and
add
jae
mov
fmul
pushf
jae
xchg
xchg
pop
mov
sub
and
mov
mov
imul
pop
cmp
xor
rcr
push
out
inc
jb
aad
pop
pop
imul
push
adc
adc
mov
mov
addr16
mov
or
pop
mov
addr16
adc
loope
stos
stc
inc
sbb
adc
dec
push
mov
dec
jmp
xchg
inc
ins
gs
nop
xchg
add
shl
sub
enter
je
xor
sub
lods
icebp
cmp
pop
mov
aam
out
or
dec
mov
scas
adc
lea
mov
test
pop
ins
pop
loop
lock
imul
sbb
add
pop
push
push
mov
call
sub
add
inc
inc
jbe
xchg
clc
dec
mov
call
pop
mov
shl
mov
out
mov
fldcw
(bad)
xlat
cmp
fs
pop
ss
push
les
mov
test
lods
or
ins
add
xchg
push
mov
(bad)
es
mov
cmp
xor
push
or
ins
jnp
fistp
fld
retf
into
movs
test
add
xchg
sub
shl
push
das
stc
loop
xor
out
ds
mov
stos
xor
cmp
popa
mov
mov
retf
cmp
retf
jbe
imul
xchg
sbb
push
sub
add
pop
(bad)
mov
in
add
xor
dec
outs
mov
mov
jns
out
repz
lds
int3
call
retf
pop
lock
pop
inc
call
ins
mov
pushf
mov
add
in
call
mov
bndldx
call
dec
test
jb
mov
cmp
outs
sbb
push
pop
or
or
push
cmps
or
rcl
fcomip
pop
retf
div
push
dec
bswap
xchg
sub
sub
adc
dec
mov
inc
ds
jbe
jo
shl
(bad)
in
fcmovbe
push
mov
sahf
xor
sar
dec
or
(bad)
xor
scas
test
repnz
pusha
pop
sub
inc
retf
mov
movs
loopne
loop
scas
pop
leave
adc
mov
inc
or
xchg
sub
cmc
imul
pop
inc
fmul
fisttp
mov
push
mov
or
pop
aas
inc
lahf
sub
sbb
jae
mov
iret
int
shl
lds
jbe
ret
outs
(bad)
push
stos
push
xor
xchg
retf
popf
aas
inc
xchg
add
cmp
jg
mov
test
sbb
mov
ret
mov
cmc
push
push
out
frstor
aam
arpl
iret
xchg
add
jle
cli
mov
pop
cmc
and
(bad)
scas
movs
pop
lods
pop
mov
test
xchg
test
add
add
in
or
jo
push
adc
fidivr
lods
ins
std
push
jae
xchg
(bad)
xchg
(bad)
sbb
int3
call
cli
lods
inc
mov
add
cmp
loope
fild
test
cmp
jle
sub
mov
xchg
jp
aam
sub
and
shl
cmp
popf
out
jl
adc
add
sbb
add
dec
ds
(bad)
xchg
pop
mov
jae
add
mov
or
or
cdq
lods
popf
inc
mov
repz
mov
loop
xor
sbb
cli
pop
adc
stos
jae
mov
dec
pop
sub
xor
loop
xor
dec
pop
test
jbe
fimul
dec
push
(bad)
outs
aad
lahf
pop
call
test
cmps
retf
cmp
cwde
popf
xor
fmul
mov
jne
xchg
jmp
jl
and
fwait
mov
(bad)
jnp
stc
dec
xchg
or
mov
lods
adc
(bad)
adc
adc
lods
loop
retf
fsub
call
repz
imul
inc
inc
cmp
xor
cmp
fild
sbb
sub
pop
push
aam
das
mov
pop
rcl
mov
ret
dec
push
or
inc
pushf
jmp
cs
rcr
fsubr
std
jne
pop
aam
in
leave
fdivr
pop
hlt
out
popf
bound
xchg
xchg
outs
jbe
jbe
fstp
adc
mov
je
iret
inc
fld
imul
std
push
retf
xchg
neg
add
mov
test
xchg
and
jmp
ins
sub
mov
or
int
add
mov
mov
repz
adc
aad
dec
xor
push
cli
mov
sar
add
aad
dec
mov
xchg
xchg
push
cmp
push
inc
test
inc
inc
hlt
loopne
pusha
movs
mov
std
cwde
(bad)
mov
push
ret
clc
jns
dec
jns
add
lods
(bad)
push
pop
rcr
mov
leave
inc
sub
cmps
shr
ret
call
add
in
fld
ja
push
sti
pop
pop
cli
fcom
retf
out
sar
or
test
mov
cmp
ror
mov
add
ja
fld
sub
add
(bad)
and
pop
adc
sbb
icebp
and
fisubr
sub
inc
aas
aad
dec
cmc
es
lock
and
add
sub
call
fnstsw
xchg
mov
(bad)
jle
xor
(bad)
jb
dec
xor
or
stos
rcl
cmp
jge
push
sbb
jge
movs
dec
pop
sahf
test
imul
and
push
or
shl
xchg
cmp
and
(bad)
jmp
(bad)
sub
mov
jno
mov
ret
scas
push
dec
jl
mov
jbe
sti
ins
or
pusha
sbb
pop
enter
aam
es
aad
push
add
and
cdq
sub
sbb
pop
inc
add
fmul
mov
mov
lock
into
dec
adc
xchg
sbb
fmul
adc
sub
push
add
bound
push
xlat
push
movs
inc
mov
into
sbb
test
push
xchg
loopne
cmc
and
ds
sbb
push
aam
xlat
dec
mov
js
mov
add
clc
lds
sbb
xchg
push
lods
inc
or
cld
fadd
pop
mov
and
adc
cmp
mov
cmp
in
test
sbb
mov
hlt
imul
jns
sub
mov
push
dec
aam
sbb
and
mov
xchg
cmps
ja
lahf
mov
inc
test
test
cs
test
mov
das
aaa
scas
cmps
mov
mov
xor
and
xor
retf
pop
and
jmp
push
int
push
add
imul
push
cmp
pop
dec
out
jg
stc
sub
jmp
inc
push
not
aam
dec
fwait
cmp
(bad)
retf
jl
test
shr
(bad)
lods
or
in
jo
or
mov
xchg
int3
push
outs
jecxz
jp
dec
jnp
test
add
ss
and
mov
leave
push
push
jbe
out
xchg
mov
les
ds
in
add
loop
ret
aad
add
xchg
add
dec
or
cwde
pushf
mov
lods
retf
loop
stos
cmp
cdq
rcr
or
add
bound
mov
sub
and
sbb
idiv
push
add
dec
cmp
cmp
or
pop
ins
sbb
retf
add
xchg
add
push
or
popf
cdq
in
mov
dec
out
xchg
data16
aam
adc
mov
das
std
mov
xchg
fisttp
add
xchg
(bad)
fisttp
ficom
pop
dec
sbb
es
and
lods
sub
add
push
scas
es
jno
and
pop
ds
add
jns
test
or
xor
into
cmps
and
idiv
jmp
push
mov
fs
fldenv
aam
imul
cmp
adc
repz
leave
sbb
sbb
add
mov
shr
stc
(bad)
jmp
in
out
mov
enter
push
cmps
fwait
xchg
hlt
sub
cmp
sti
mov
pusha
lods
sub
mov
adc
add
es
shr
(bad)
jb
adc
repz
and
push
and
test
fs
je
popa
hlt
fidiv
inc
movs
mov
sbb
mov
jmp
and
stc
iret
pop
out
sbb
pop
jl
cmp
sbb
or
cmp
dec
jle
scas
dec
addr16
mov
push
out
add
xchg
or
push
sub
stos
std
push
mov
mov
adc
sti
inc
mov
outs
and
mov
jecxz
mov
sbb
add
adc
or
push
dec
sbb
xchg
inc
mov
xchg
sub
in
fnstcw
clc
push
pop
int
mov
mov
in
dec
scas
lds
xchg
scas
lahf
add
sbb
inc
ret
(bad)
in
inc
ror
or
dec
addr16
std
imul
mov
lahf
sub
xor
ja
hlt
xchg
loopne
loopne
jge
xchg
test
mov
cmp
rol
jbe
xor
or
and
lds
dec
xchg
mov
aam
push
jne
or
out
push
and
push
(bad)
dec
dec
repz
cmp
daa
retf
or
lock
or
mov
into
mov
sbb
daa
xchg
sahf
movs
idiv
mov
and
outs
mov
cmp
in
and
cmp
sbb
ficomp
xchg
std
or
fs
cmps
push
rcl
or
ss
add
cmp
icebp
or
jb
mul
inc
imul
repz
push
pop
stos
shl
adc
nop
sub
popf
jmp
and
mov
lahf
leave
lods
dec
imul
out
in
out
adc
paddq
aam
add
ficom
mov
(bad)
icebp
je
ins
loop
or
or
fistp
pusha
jmp
es
mov
nop
in
fsub
fisubr
or
imul
pop
mov
sub
mov
data16
icebp
and
xor
das
pusha
out
adc
adc
(bad)
mov
shr
sbb
and
ja
rol
and
jmp
out
adc
pop
xor
mov
jg
loop
scas
les
pop
add
into
pop
fisttp
sbb
adc
xchg
mov
clc
pop
loopne
push
scas
pop
imul
(bad)
test
and
aas
lea
push
jp
repnz
loopne
sbb
sub
cmp
cmp
add
mov
cld
pop
mov
sub
xor
cs
push
int3
pop
rol
sbb
fild
sub
or
imul
or
jae
ret
cmp
call
xchg
arpl
cwde
ret
(bad)
and
jmp
mov
or
jmp
inc
les
clc
dec
jnp
or
loope
mov
sar
ficom
shl
nop
dec
or
add
stos
sbb
call
cdq
and
mov
pop
xor
mov
dec
push
fwait
loop
mov
stc
mul
dec
lock
aas
xchg
iret
repz
mov
retf
or
sub
mov
cmp
adc
and
je
aad
in
ds
pop
push
push
and
jo
or
cld
call
lea
mov
pop
push
jnp
je
popf
and
add
push
jo
ja
clc
sbb
push
cld
bound
test
jnp
adc
add
mov
sub
mov
fdiv
jns
fnstsw
xor
xor
test
dec
or
cmps
fst
mov
pop
dec
push
and
mov
xchg
sbb
(bad)
lea
mov
inc
pop
jne
xor
push
or
mov
repz
mul
dec
dec
xor
lea
inc
inc
jmp
add
add
dec
iret
call
and
(bad)
out
das
das
mov
ret
sub
mov
mov
(bad)
pop
adc
pusha
mov
pop
add
lea
int
retf
fsubr
(bad)
push
ficom
fdiv
cmp
jl
mov
xor
test
out
push
arpl
mov
mov
test
lahf
bound
aam
or
xor
test
sbb
out
cmps
or
jge
mov
lahf
jno
dec
les
xlat
inc
and
(bad)
or
pop
jle
stc
int
pop
push
(bad)
sbb
scas
sub
scas
xor
pop
frstor
dec
adc
popf
(bad)
(bad)
push
or
enter
aaa
pop
xchg
push
movs
in
sub
pop
ror
in
xchg
dec
test
add
stos
adc
mov
push
mov
add
lds
test
pop
or
cmp
(bad)
dec
fadd
inc
ror
jl
into
jb
test
pushf
aad
test
out
push
mov
fdivr
xor
pushf
cdq
jae
in
mov
lock
dec
jne
mov
in
dec
ret
test
adc
es
pop
ja
push
jecxz
inc
or
cmc
xor
out
mov
mov
cli
add
xlat
mov
retf
jb
cdq
mov
push
add
xlat
mov
adc
jno
mov
xchg
jno
adc
shl
bswap
xchg
iret
adc
lods
mov
ds
or
out
or
adc
call
mov
mov
out
ja
lds
scas
ja
xchg
mov
cmp
in
fs
shl
adc
sbb
xchg
fwait
sub
mov
hlt
test
outs
mov
shl
and
(bad)
ss
mov
pop
push
popf
mov
xchg
lock
fist
push
pop
jb
daa
mov
mov
movs
jb
mov
mov
pop
inc
jle
push
lahf
add
rcr
pushf
stc
scas
dec
xor
fst
and
mov
pop
pop
mov
push
and
push
inc
dec
imul
mov
push
in
sbb
add
leave
cmp
out
retf
das
push
call
jns
mov
fwait
clc
pop
ret
xor
lock
ror
push
mov
jle
or
hlt
retf
push
inc
sbb
jns
lock
push
dec
xor
retf
(bad)
mov
xchg
js
sbb
push
add
imul
mov
aas
fcmovne
cdq
rcl
and
lds
add
dec
stos
retf
push
jo
inc
in
adc
test
arpl
(bad)
ins
mov
movs
or
cwde
sbb
imul
iret
popa
jmp
pusha
bnd
sbb
scas
fistp
in
jbe
or
mov
or
mov
test
adc
leave
jno
add
clc
inc
arpl
fld
in
leave
pop
sub
scas
mov
mov
add
es
hlt
popa
and
add
ret
cmp
xor
xchg
not
dec
jmp
loop
xchg
ret
jno
inc
dec
mov
mov
jmp
das
mov
add
not
sub
in
pop
(bad)
cdq
adc
add
loop
pop
movs
loope
cmpxchg
aad
xchg
xchg
sub
adc
call
addr16
into
jae
in
ror
inc
fst
ret
outs
addr16
pop
out
lea
pop
adc
and
das
and
jl
sub
cdq
add
xor
rol
lods
push
lock
std
xchg
loopne
inc
ror
mov
sub
cvttps2pi
jmp
cmp
jno
jb
pop
mov
cmp
cmp
push
jg
and
adc
push
push
mov
xor
pop
outs
ja
jae
shl
jmp
sub
inc
test
mov
xchg
pop
jb
mov
jbe
sub
hlt
loope
int3
int
retf
js
push
dec
(bad)
outs
push
add
repnz
and
dec
mov
repz
jg
ins
sar
pop
mov
jns
(bad)
fimul
rcr
sub
aam
jg
inc
add
mov
addr16
cmps
call
loopne
js
int3
pushf
sbb
out
pop
xchg
push
mov
cmps
outs
fcom
stc
into
cmp
test
pop
jae
test
add
les
popf
or
xor
(bad)
or
in
inc
mov
fisttp
imul
dec
xor
mov
test
inc
mov
adc
xchg
xor
sub
pop
push
outs
cmp
dec
aas
lods
lds
jmp
inc
or
daa
sbb
push
clc
push
sub
dec
bound
mov
leave
fst
push
test
xchg
dec
popa
(bad)
cmps
inc
stos
in
retf
ins
shr
pop
daa
inc
sub
sahf
jb
and
fwait
push
into
jecxz
sub
jmp
mov
jbe
mov
inc
cwde
xchg
or
jne
mov
out
cmp
and
fsubr
mov
and
sahf
(bad)
aad
or
out
or
inc
sahf
mov
cmc
dec
sub
jne
(bad)
jne
imul
jmp
mov
and
pop
mov
(bad)
scas
sub
mov
cmc
mov
cmps
sbb
inc
das
pop
in
cdq
jl
les
jge
clc
jbe
push
sar
mov
add
cmp
std
mov
push
int
neg
dec
js
(bad)
lds
push
jo
bound
mov
mul
fdiv
dec
xchg
xchg
jge
xlat
or
and
int3
xor
sbb
imul
test
sti
hlt
enter
dec
cmps
aam
out
mov
daa
aad
outs
fs
cmp
les
xor
sub
and
push
aam
das
xchg
add
nop
jecxz
int3
into
jb
(bad)
loopne
and
push
movs
sbb
inc
aaa
scas
or
fdivr
ja
data16
inc
lea
fnsave
mov
adc
scas
inc
adc
ja
imul
sbb
pop
dec
idiv
mov
add
ins
mov
imul
bound
xor
idiv
sub
ret
(bad)
stc
mov
jecxz
(bad)
sbb
mov
sub
push
mov
outs
sbb
retf
fcmovbe
daa
cs
es
jp
and
retf
dec
mov
jnp
sbb
xchg
and
adc
gs
cmp
jmp
(bad)
outs
push
pusha
lds
inc
not
fld
bound
lock
mov
aas
sub
(bad)
and
jecxz
inc
mov
jg
mov
arpl
cs
push
and
jae
stc
(bad)
jle
bound
dec
aaa
inc
(bad)
and
stos
and
vhaddps
lods
cld
add
movs
xchg
and
out
mov
(bad)
dec
loope
mov
or
xchg
das
lods
in
test
cmp
jle
movs
inc
sub
inc
mov
mov
adc
mov
mov
xor
ins
or
aam
inc
jle
fimul
jnp
fcmovb
xor
push
cmps
ins
pushf
push
icebp
xor
enter
mov
fiadd
push
ds
lds
pop
outs
xchg
ins
js
cmp
mov
lea
inc
js
add
lods
sbb
fild
out
fnstcw
pop
xchg
ss
clc
and
xchg
push
ss
add
jns
push
stos
sar
in
and
loope
or
ss
inc
sbb
xchg
cmp
stos
fs
dec
rcl
add
jb
rcl
xor
cwde
retf
fnstsw
dec
out
cmps
stos
fstp
retf
xor
or
lods
cmps
push
dec
ds
mov
das
clc
(bad)
lods
test
(bad)
jge
call
ins
test
es
cs
sbb
aaa
jmp
xor
out
xchg
js
inc
pop
iret
adc
inc
sub
addr16
aaa
xor
in
mov
xchg
xor
ss
fwait
shl
lods
jno
mov
pop
jge
fwait
ret
add
mov
daa
imul
adc
ins
xchg
sbb
jg
icebp
int
fnstsw
in
push
test
xor
and
push
pop
loop
lods
ins
dec
outs
jnp
dec
ftst
mov
scas
and
fyl2x
dec
dec
and
ficomp
jmp
int
mov
lock
jne
jne
arpl
jp
cmp
dec
cmp
sub
and
sti
mov
sub
js
in
je
dec
pop
cmps
push
xchg
das
or
lds
ds
xor
call
fisttp
dec
adc
mov
mov
jecxz
pop
sbb
clc
scas
in
popf
xchg
adc
pop
imul
mov
add
ins
daa
mov
and
and
out
outs
mov
or
xchg
pop
push
dec
fwait
in
out
inc
and
aad
cdq
sbb
out
dec
mov
pop
iret
sub
test
movs
or
or
push
dec
xchg
add
out
inc
paddusb
in
mov
out
jbe
inc
in
dec
mov
xor
xor
dec
sub
sub
push
jne
or
push
mov
(bad)
loopne
mov
jg
add
push
dec
(bad)
mov
mov
gs
fwait
mov
lock
popf
into
dec
xchg
and
inc
test
(bad)
scas
pop
push
fwait
test
xor
mov
sbb
fwait
dec
lahf
sub
cmp
clc
out
inc
ret
loope
imul
push
mov
xchg
cmc
(bad)
fidivr
test
(bad)
push
hlt
dec
pushf
sbb
stc
push
sbb
aad
out
js
out
adc
adc
xchg
test
sahf
(bad)
fiadd
loopne
jl
push
dec
push
xchg
in
lods
and
cmp
fs
iret
sti
(bad)
push
and
scas
mov
xlat
retf
jns
mov
cmp
iret
imul
rol
pop
push
xlat
cmp
sub
cwde
stos
movs
test
sub
inc
pop
add
pop
out
push
aas
add
push
mov
push
dec
out
data16
dec
mov
cmp
loopne
add
or
cld
cmps
and
andnps
ins
lods
push
fcmovbe
retf
in
stos
shr
jno
imul
lods
int
xchg
mov
daa
cs
movs
mov
cmps
mov
fs
(bad)
xlat
inc
aas
mov
loop
push
xor
aad
jmp
push
xchg
das
shld
fmul
mov
stos
fsubr
(bad)
sub
inc
std
(bad)
shl
addr16
scas
xchg
scas
jmp
cmp
loop
inc
shl
dec
mov
in
push
push
inc
dec
aad
dec
xor
adc
mov
imul
(bad)
xor
out
inc
pop
jnp
add
cmps
call
xor
in
adc
mov
jle
add
push
or
cwde
stos
pop
out
inc
push
mov
je
and
jecxz
cmps
dec
stos
xchg
jo
and
add
imul
icebp
nop
xor
and
jnp
push
xchg
out
push
xchg
daa
cmp
mov
cmp
rol
and
pop
ret
pushf
cmp
or
cmc
fs
shr
ss
addr16
test
cwde
fwait
sub
shr
pop
lods
das
sbb
push
push
push
loopne
push
jg
fisttp
test
mov
scas
jle
in
hlt
sahf
(bad)
jmp
dec
je
mov
mul
inc
lds
pop
mov
enter
sub
sub
(bad)
pop
ins
out
rcr
push
in
mov
stos
lea
xor
xor
sub
fild
ins
adc
retf
clc
or
ret
int
movs
sahf
mov
lods
pop
or
(bad)
mov
loop
xchg
data16
sub
push
mov
cdq
cli
push
icebp
ins
xor
fdivrp
xchg
jae
or
sbb
test
sbb
jle
fld
add
and
xchg
pusha
test
and
and
loopne
and
push
adc
in
xchg
and
xlat
xchg
add
and
iret
xor
fs
mov
push
imul
rol
cmp
sbb
dec
lds
sub
es
mov
push
mov
movs
xor
call
add
push
aad
sbb
bound
xor
mov
loop
imul
and
jnp
pop
(bad)
push
das
ror
mov
es
xor
repnz
push
cwde
call
mov
cmps
movd
lea
or
dec
mov
sub
push
sbb
add
ret
fstp
push
jp
popa
sub
pop
mov
fwait
mov
adc
retf
push
(bad)
in
mov
loope
(bad)
cmps
fiadd
dec
sahf
in
mov
sub
xchg
in
(bad)
dec
push
fwait
xchg
and
loop
push
fistp
icebp
fmul
sbb
adc
jae
or
into
sar
sub
ja
mov
jg
in
rcr
test
je
mov
push
int
out
lods
jne
test
mov
ins
pop
push
in
mov
cld
out
test
mov
int3
int3
aas
push
sub
je
pop
mov
test
test
sub
out
or
ss
add
(bad)
pushf
fwait
pop
fwait
mov
jge
fcmove
jae
adc
cwde
jne
nop
retf
scas
sbb
daa
(bad)
dec
retf
pop
push
aam
push
sub
call
xchg
xchg
out
or
pop
pop
rcr
ja
sub
out
jecxz
xor
cwde
das
jmp
retf
aam
pop
dec
rcr
pop
out
das
cdq
lods
retf
sar
cmps
rcl
pushf
das
xchg
mov
xchg
adc
cmps
and
sbb
ficom
lock
sub
stos
push
sbb
pmovmskb
hlt
mov
lahf
movs
and
mov
sub
mov
in
(bad)
pop
(bad)
popa
dec
out
shl
(bad)
push
adc
test
in
stos
fs
movs
cmp
adc
dec
call
mov
aas
div
ja
push
aad
jae
ret
retf
je
push
out
test
mov
mov
jnp
pop
mov
int
and
sub
aaa
pop
std
inc
pusha
mov
dec
adc
icebp
mov
mov
les
and
popf
call
push
cmp
retf
pop
xor
mov
xchg
out
fstp
inc
ja
sbb
or
xor
das
jb
shr
xchg
daa
fs
push
and
lds
adc
ins
and
cs
daa
out
inc
xlat
xchg
sub
sbb
cmc
sbb
scas
sbb
push
scas
cwde
jge
loop
ss
inc
dec
dec
xor
cmps
dec
popa
test
pop
mov
sbb
ss
jp
xchg
and
jg
mov
ins
hlt
arpl
and
pop
push
rcl
test
test
xlat
xchg
xchg
xchg
iret
aaa
xchg
jmp
cmp
mov
bound
and
loopne
sbb
jbe
mov
(bad)
jg
cmc
xchg
rcl
mov
inc
jecxz
pop
gs
mov
daa
(bad)
dec
je
sub
cs
push
mov
or
das
pop
mov
js
sub
inc
dec
btc
jbe
imul
push
ja
inc
mov
test
iret
mov
mov
or
push
xchg
sti
mov
mov
data16
les
sbb
jnp
hlt
test
xchg
lods
pop
xchg
jmp
xchg
add
sar
or
int3
lods
mov
dec
cmp
dec
js
mov
mov
mov
test
dec
sbb
call
dec
std
fild
pop
gs
lods
sub
dec
call
adc
in
mov
out
push
mov
sar
push
pop
outs
adc
arpl
add
push
mov
bound
xchg
pop
das
and
jmp
lock
xor
fsub
mov
cmp
pop
jge
cmp
mov
jnp
test
imul
mov
jg
je
pop
test
cwde
dec
test
add
aam
sbb
and
inc
adc
xor
popf
push
(bad)
xchg
xor
cmps
dec
ss
loop
clc
push
cwde
es
push
xlat
push
cmps
enter
or
movs
mov
lock
dec
mov
xchg
xor
aas
xchg
sbb
pop
outs
dec
mov
sbb
push
mov
inc
pop
in
rcl
add
inc
mov
mov
mov
movs
jmp
fdiv
gs
mov
out
dec
outs
push
jns
xchg
xor
test
aaa
inc
lahf
icebp
mov
pop
cmp
(bad)
in
stc
xchg
call
nop
push
sti
push
div
cld
sbb
test
sti
xchg
jo
pminub
inc
daa
add
int3
mov
push
outs
out
and
shl
push
xchg
lods
sbb
ss
adc
pop
dec
pop
push
jns
xor
adc
add
jmp
sub
fnstenv
ins
mov
sub
in
push
jle
stc
sbb
dec
adc
mov
stos
jmp
lahf
sbb
pop
mov
sbb
sub
shl
movs
push
nop
cmp
jmp
or
jb
jecxz
cmps
inc
mov
mov
test
dec
arpl
sub
repz
lock
pop
aad
xchg
sar
mov
adc
fisub
mov
xor
inc
pop
push
cmp
push
imul
aam
loopne
cld
lock
call
fwait
or
xchg
dec
sahf
in
dec
push
mov
cmp
test
dec
push
bound
sub
xchg
pop
cmp
inc
outs
inc
int
je
lock
inc
jmp
mov
hlt
aad
push
in
jp
mov
out
mov
jge
mov
(bad)
mov
xchg
sub
repz
adc
xchg
pusha
aam
cli
stos
(bad)
arpl
mov
clc
mov
mov
or
mov
fdiv
sub
adc
jle
fcomp
ror
(bad)
cmp
and
inc
fidivr
dec
sar
ins
aaa
les
sahf
mov
dec
and
dec
test
mov
xor
ret
push
and
inc
inc
repnz
out
ret
cs
es
push
pushf
iret
sbb
loopne
sbb
popf
or
dec
cwde
stc
fisubr
(bad)
mov
dec
enter
cmp
in
xor
aaa
or
xor
mov
(bad)
(bad)
pop
push
movs
fisttp
repnz
fxam
push
popa
mov
outs
jmp
add
xchg
div
stc
adc
pop
shl
add
fcmovb
shr
mov
jno
ss
adc
xor
xlat
sub
test
pop
ins
movs
mov
(bad)
icebp
sahf
fwait
sbb
mov
shr
pop
pushf
sbb
js
adc
int
repz
push
int3
fxch
pushf
fdivr
mov
pushf
shr
xchg
add
jno
ret
pushf
push
ficom
arpl
mov
sahf
adc
jne
inc
(bad)
aad
pop
hlt
ds
imul
mov
lock
xchg
cs
rcl
mov
test
neg
ds
mov
xchg
inc
rcr
xchg
push
xor
std
push
out
dec
and
mov
inc
test
ss
mov
shl
out
and
gs
dec
mov
sub
mov
int3
cmovb
cmp
jns
aad
jnp
jns
jmp
fistp
ret
inc
ins
add
in
sub
xchg
je
jbe
outs
lock
fidiv
mov
jo
adc
dec
outs
mov
cwde
pop
xchg
pop
jmp
pop
adc
loop
jb
jno
into
dec
push
adc
nop
dec
clc
add
dec
xlat
ss
fwait
push
test
call
add
xchg
pop
inc
lahf
les
sahf
test
loopne
adc
pop
lea
out
test
mov
mov
iret
popa
and
pushf
mov
mov
fiadd
je
cmp
neg
ffree
rcl
add
data16
push
imul
retf
fwait
lds
lea
mov
fmul
jp
hlt
dec
jp
sar
into
movs
js
ins
retf
and
cs
fild
inc
scas
mov
(bad)
fwait
das
mov
(bad)
adc
sbb
xchg
rcl
into
inc
jae
sub
cmps
pop
inc
push
fstp
push
test
repz
pop
sub
shl
pop
add
ja
ins
pop
jmp
and
ss
lds
sub
repnz
addr16
pop
nop
ds
test
mov
movs
push
push
ins
push
data16
pop
call
rcr
fwait
cmp
mov
arpl
clc
in
dec
scas
dec
push
imul
jae
push
pop
lea
jbe
std
aaa
(bad)
int3
inc
mov
sub
sub
jo
(bad)
jmp
je
in
xor
into
test
xchg
aas
mov
jae
mov
xchg
data16
inc
add
jg
movs
sub
fwait
aam
and
mov
arpl
mov
cli
dec
mov
rcl
dec
das
mov
mov
adc
pop
lock
mov
pop
bound
mov
jmp
std
cmp
cmc
jp
cmps
test
xor
loopne
push
ins
fcmovnu
int
lea
retf
in
pop
xor
pop
pusha
push
xor
or
jae
jne
dec
sbb
(bad)
test
adc
jae
mov
call
(bad)
imul
jecxz
mov
sub
imul
xchg
xchg
popa
jbe
out
cmp
sub
sbb
sub
aaa
xchg
cmc
popf
pop
arpl
adc
push
mov
or
pop
dec
sbb
lock
scas
dec
ins
out
add
mov
fs
ja
mov
lods
cmps
pop
mov
or
add
jmp
xchg
push
aaa
enter
sub
jnp
arpl
mov
shl
in
bound
inc
les
mov
dec
jae
jo
adc
dec
jb
push
dec
ret
adc
test
movs
int
pusha
inc
test
or
xchg
lods
aaa
pop
mov
and
pop
mov
lahf
xor
leave
lock
or
sbb
adc
mov
jne
xchg
add
stos
(bad)
sbb
jl
movs
inc
cmp
xchg
pop
pop
sbb
call
sub
(bad)
pmulhuw
in
lds
sbb
in
cmp
movs
sbb
data16
xor
inc
inc
outs
test
mov
dec
leave
popf
sti
dec
(bad)
(bad)
mov
inc
ins
sbb
arpl
loope
jb
mov
js
in
pop
out
xor
stos
mov
int3
xlat
jg
(bad)
push
cmp
stos
cdq
jns
sar
(bad)
cmp
outs
mov
xchg
aad
outs
aam
cmp
mov
sbb
sbb
aam
js
addr16
sub
dec
test
iret
cmc
xor
push
fnsave
ror
mov
jge
dec
lods
aam
mov
jb
rcr
mov
sbb
inc
retf
mov
in
mov
inc
stos
sub
jle
in
outs
add
addr16
push
adc
out
cmp
xchg
dec
arpl
pop
add
mov
shl
nop
in
adc
add
loopne
daa
dec
sub
sbb
jno
sbb
cmp
movs
fld
sbb
dec
mov
les
ins
adc
mov
fdiv
add
or
je
xor
pavgw
jg
outs
jp
add
mov
jne
(bad)
xlat
pusha
push
sbb
push
int3
ret
mov
xchg
pop
bnd
xchg
mov
(bad)
fs
lea
mov
mov
pusha
lods
mov
sbb
les
jno
cwde
mov
sub
sbb
aam
pop
ret
xor
sub
or
movs
shl
push
mov
sbb
fmul
push
jmp
fidiv
lahf
int3
push
(bad)
cld
in
bound
aaa
sub
dec
(bad)
push
mov
sub
add
jle
jmp
or
dec
nop
aam
fistp
loope
sbb
imul
mov
cmp
repnz
fwait
sbb
and
cmp
add
leave
icebp
sbb
push
pop
adc
fcomp
xchg
push
push
test
rcl
(bad)
aad
je
inc
cmp
scas
je
cmc
mov
xchg
sbb
and
es
sbb
mov
xchg
mov
scas
push
lods
adc
push
adc
lods
pop
call
push
sub
xor
or
adc
jbe
xor
sbb
push
mov
adc
dec
mov
repz
xlat
shr
and
dec
dec
or
pop
test
mov
pop
jne
out
aam
dec
hlt
mov
sbb
aaa
inc
aad
les
shl
push
mov
jbe
call
jge
enter
js
inc
addr16
xchg
shr
jns
xor
lock
pop
jecxz
mov
jae
neg
je
ins
dec
in
das
call
pop
ret
imul
fstp
mov
int3
push
adc
mov
shl
add
sbb
sub
and
mov
cmp
jl
jecxz
xor
rcl
addr16
sbb
or
ret
scas
and
add
xor
hlt
(bad)
sbb
sahf
mov
lahf
or
dec
and
and
aad
(bad)
(bad)
jns
movs
xchg
xor
es
out
icebp
or
cmp
dec
sub
ds
fdivr
cmps
sti
shl
jmp
test
jmp
sub
fistp
(bad)
mov
adc
int3
dec
outs
inc
dec
xor
xchg
test
repnz
ret
stc
je
aas
cmp
mov
push
pop
movs
je
fstp
pusha
or
aam
cli
pushf
xor
mov
cwde
lods
mov
(bad)
push
rcl
xor
hlt
or
mov
imul
inc
xchg
pop
sub
pop
mov
push
(bad)
dec
mov
cmp
out
dec
pushf
and
int
loopne
adc
sub
out
imul
(bad)
out
popa
cmps
test
imul
movnti
cmps
xor
jp
ja
adc
lock
je
mov
call
adc
ret
jmp
xchg
and
sub
mov
(bad)
loop
inc
mov
leave
cli
xchg
push
xchg
mov
push
add
in
sar
fadd
ja
repz
mov
mov
inc
jl
in
xor
adc
xchg
mov
test
xchg
mov
pop
hlt
cmp
mov
mov
push
fdivp
cdq
dec
rcl
mov
sbb
jae
addr16
jle
out
cmps
sub
mov
mov
jmp
pushf
sbb
pusha
outs
xchg
mov
jo
lahf
lea
sbb
jmp
shr
mov
bound
sub
int3
mov
data16
call
shl
call
dec
mov
popa
cdq
je
movs
outs
aam
adc
add
je
enter
in
loopne
fistp
nop
(bad)
xor
cdq
mov
and
test
cli
sar
sub
retf
or
je
push
and
shr
inc
mov
shl
lea
or
adc
enter
xchg
enter
in
les
xchg
xchg
or
pop
cmp
push
or
out
mov
add
adc
fdivr
into
mov
and
rcl
pop
inc
pop
(bad)
adc
retf
mov
mov
mov
aam
or
pop
jae
pop
imul
fistp
test
int3
adc
cmp
sbb
ins
pop
push
add
mov
pop
xor
(bad)
out
arpl
add
(bad)
ds
or
call
call
mov
jbe
nop
je
movs
dec
jb
inc
jge
cmp
imul
cmp
retf
inc
aaa
jl
frstor
daa
pop
jae
es
push
fimul
icebp
xchg
pop
bound
hlt
add
xor
stos
fisub
call
or
test
or
mov
cmp
aad
repnz
sbb
xchg
adc
sub
(bad)
sub
mov
int3
lds
retf
add
mov
xor
mov
sbb
test
mov
cld
adc
scas
stos
push
das
push
test
mov
pop
push
push
enter
adc
idiv
fdivr
mov
out
and
adc
cmp
sbb
pop
ret
mov
(bad)
mov
or
ror
aaa
stos
mov
iret
es
test
sbb
cli
sbb
sbb
jmp
push
icebp
inc
call
lock
pop
pop
cli
(bad)
mov
(bad)
loop
pop
repz
cmps
push
sbb
mov
aas
icebp
int
sahf
outs
ror
xchg
rol
scas
fsub
je
nop
or
xor
fidiv
jmp
jmp
jmp
je
xchg
imul
(bad)
dec
pop
or
(bad)
int
repnz
(bad)
mov
pop
inc
call
mov
cwde
and
lock
jo
not
dec
ins
push
sub
and
push
loopne
pusha
inc
and
pop
xchg
mov
sar
mov
sbb
aaa
sbb
fsub
js
pop
jle
pop
push
out
popa
inc
cmp
(bad)
enter
adc
pusha
mov
popf
fnstenv
inc
mov
cmp
pop
lahf
pop
cld
and
xchg
inc
pop
add
movs
jne
leave
idiv
jnp
inc
xchg
jmp
jbe
mov
add
xchg
pop
cmp
sbb
dec
jp
js
out
(bad)
(bad)
in
pop
clc
pop
and
cmc
popf
mov
sbb
push
mov
outs
push
es
xor
sbb
jmp
mov
inc
adc
loope
jno
mov
push
fld
cmp
js
and
sbb
(bad)
shl
jmp
or
pop
adc
inc
adc
cmp
rol
cmp
movs
call
push
jmp
jle
lock
rcr
gs
pop
jae
js
jno
std
add
push
or
dec
shl
aam
inc
test
sbb
iret
inc
in
js
or
or
fisubr
rcl
ret
mov
push
stos
shl
adc
sub
add
mov
arpl
stc
fisttp
jp
aaa
inc
push
mov
pushf
mov
push
data16
sub
push
mov
add
jnp
cmc
mov
shr
mov
loope
rcr
pusha
mov
jb
sbb
jmp
mov
mov
and
or
data16
and
xor
ss
push
xchg
seto
std
stc
dec
and
sub
lock
into
dec
xchg
pop
or
bound
xchg
retf
ds
cmp
mov
or
pushf
addr16
sbb
mov
ds
or
shr
and
or
mov
mov
into
jno
imul
push
dec
sub
adc
push
or
xchg
fsub
cdq
fisub
aam
xchg
and
leave
out
jecxz
inc
jne
neg
popf
(bad)
and
xor
xor
jge
fadd
je
inc
lods
movs
sub
mov
add
sub
xchg
out
xor
mov
inc
cs
loopne
jecxz
jno
in
cdq
sbb
pushf
in
xor
push
cmp
shr
sub
mov
ja
and
push
retf
xchg
add
in
pop
add
mov
shl
ror
pushf
push
ret
cmp
sub
test
gs
or
adc
mov
dec
cs
or
xchg
outs
scas
shl
add
leave
adc
fstp
or
sti
jl
bound
arpl
adc
or
dec
push
push
xchg
mov
add
adc
in
pop
cmp
pop
adc
push
lods
int3
test
pop
and
xchg
jo
repz
push
jnp
jg
add
adc
dec
xlat
adc
ret
push
add
mov
xor
push
cmc
cli
mov
cs
push
push
inc
inc
bound
fild
retf
or
inc
push
pop
ja
adc
lock
inc
sub
lods
sub
or
in
xchg
dec
add
xlat
xor
rcl
cli
test
fwait
jmp
les
repnz
cmps
mov
mov
sub
add
into
outs
call
retf
dec
cmp
lahf
ds
sbb
into
or
jae
outs
ins
cwde
pop
sahf
xor
movs
jae
and
pop
fcomp
mov
rol
push
inc
jnp
push
jo
mov
add
pop
cmp
xchg
call
and
mov
in
and
push
mov
cmp
je
retf
ret
mov
mov
cmps
jae
mov
cmps
pop
mov
jae
inc
aaa
mov
inc
in
out
call
lea
retf
int3
inc
xor
dec
adc
sub
fs
mov
xor
(bad)
lods
in
cs
fcomp
call
jns
mov
xchg
(bad)
out
retf
sbb
mov
aas
movs
push
scas
cmps
popa
jb
xor
xchg
mov
ret
test
mov
lock
mov
aam
pop
mov
jno
fstp
or
test
inc
int
mov
cld
(bad)
jnp
cli
mov
cmp
mov
ror
call
fsubr
ins
lock
in
xor
sub
popa
pop
call
and
or
rol
popf
jmp
cmps
imul
xlat
std
pop
jno
push
in
pop
adc
stos
int
xchg
out
call
xchg
rcl
pop
leave
bound
pop
imul
mov
in
jp
(bad)
push
sub
mov
adc
mov
ss
mov
pop
out
sbb
sbb
xor
cld
retf
ret
stos
xchg
mov
fist
mov
out
retf
aam
daa
adc
pushfw
enter
outs
ds
mov
fucomip
push
adc
pop
sub
ds
push
add
and
mov
lods
fucomip
mov
add
jae
call
pusha
cmp
xchg
enter
pop
into
mov
pop
dec
fbstp
pop
stos
and
pop
dec
int3
xchg
push
inc
rcl
xor
inc
mov
rcr
arpl
sub
cs
test
jl
mov
and
into
out
mov
adc
jne
add
ja
fisttp
jmp
sub
ja
jnp
cmc
js
inc
sub
imul
mov
or
jmp
sar
mov
stc
or
mov
cmp
(bad)
cld
dec
jb
mov
xchg
mov
call
in
lock
mov
jns
adc
bound
sahf
and
ficom
mov
imul
or
push
add
or
repnz
aad
jno
and
or
jle
pop
jo
leave
enter
inc
stc
add
jle
lods
in
xor
xchg
xchg
or
movs
mov
movs
nop
cmp
jae
sbb
leave
mov
adc
xchg
clc
cli
ss
add
iret
enter
pop
inc
push
sub
ror
jb
pop
jp
mov
inc
inc
cmp
sar
xchg
xor
adc
mov
iret
cmp
lahf
mov
nop
cmp
sub
(bad)
jge
scas
arpl
daa
push
jno
jne
cdq
call
push
stos
lahf
dec
or
ficom
sub
div
add
or
jns
inc
push
cmp
call
cwde
add
dec
lock
dec
es
xor
sub
idiv
mov
jecxz
cmp
imul
inc
ret
stos
xor
mov
loop
cmp
adc
pop
inc
call
mov
loope
jne
dec
imul
test
sbb
loope
pop
mov
in
retf
(bad)
fsub
data16
loope
adc
rcl
aaa
popf
jae
cmp
push
ins
out
les
dec
inc
xor
cmc
xchg
sahf
xor
sub
gs
cmp
sar
sti
xor
xchg
inc
dec
pop
ds
inc
or
fbld
jg
loop
sub
xlat
pop
mov
dec
stc
mov
push
stc
fistp
out
lahf
add
push
push
(bad)
icebp
pop
ret
aaa
mov
and
dec
mov
jmp
cmp
sub
mov
mov
gs
lahf
(bad)
fistp
aaa
out
stos
cmps
fwait
sahf
cs
outs
inc
stos
rol
test
repnz
xor
out
int
xlat
xchg
cdq
iret
nop
aam
jno
xchg
ins
popf
jecxz
int
fs
mov
hlt
add
sub
out
int3
cdq
sti
cmp
fistp
lahf
jmp
sub
xchg
lea
push
inc
sbb
pop
stos
out
jle
les
mov
fst
lods
sub
or
push
dec
(bad)
mov
mul
in
pushf
in
pop
push
jae
out
test
addr16
mov
aad
sbb
push
das
call
mov
out
sbb
cdq
or
je
jle
mov
jae
jmp
pop
imul
retf
retf
or
add
xacquire
in
mov
mov
adc
add
pusha
jcxz
test
les
addr16
jns
xchg
cmp
shr
das
adc
movs
jle
jl
xor
in
jp
and
xor
ret
jl
pusha
jno
icebp
ds
or
ss
jecxz
sahf
sbb
xchg
ds
xchg
jns
push
(bad)
in
in
ins
mov
dec
cmp
es
cmps
mov
mov
or
neg
xchg
sbb
fidiv
popf
fwait
cmp
xor
cs
adc
xor
dec
repz
and
mov
or
cmp
scas
jno
arpl
dec
hlt
fnstenv
scas
cmps
or
xor
outs
and
cwde
mov
mov
mov
ja
shl
ds
popf
sahf
call
fstp
inc
fmulp
test
retf
mov
call
mov
push
lea
or
repnz
jmp
ss
xor
jnp
js
aas
test
mov
xlat
xor
pop
movs
scas
push
scas
pusha
(bad)
jp
inc
mov
out
xor
mov
sub
add
dec
stc
push
repnz
mov
cmp
fwait
push
and
retf
or
loope
inc
fcmove
lods
dec
add
adc
pop
push
mov
push
sti
ins
pop
inc
nop
imul
imul
sub
or
cld
sub
arpl
or
or
imul
pop
gs
sub
adc
sub
mov
jmp
mov
sbb
inc
and
sti
xor
dec
ficom
mov
mov
xchg
jmp
sbb
lods
fimul
call
dec
add
in
jae
fistp
in
movs
fst
xchg
sbb
and
jnp
idiv
pop
stos
cmp
xchg
fadd
xchg
mov
pop
movs
in
sti
mov
adc
adc
std
mov
adc
shl
(bad)
lahf
sti
mov
ja
popa
pop
ins
std
lahf
push
push
stc
ror
popa
cmps
push
dec
add
iret
repz
push
int3
loop
pop
sub
call
retf
popa
sub
cmp
push
fcmovnu
(bad)
ss
or
pop
inc
cmp
sub
stos
adc
or
xchg
jge
ror
mov
in
or
and
call
adc
cmps
pop
and
fs
pop
mov
pop
(bad)
ins
retf
xchg
push
mov
stc
out
cmp
into
adc
ror
test
ss
inc
pop
adc
shl
jmp
pop
pop
ins
inc
jb
addr16
pop
pop
mov
ins
out
sub
dec
mov
adc
or
sbb
mov
out
push
xabort
sbb
test
loope
rcr
jbe
adc
or
inc
sub
and
xchg
and
or
xlat
cmc
iret
sbb
or
(bad)
jb
and
xchg
cli
mov
mov
loope
inc
lahf
pop
push
xor
mov
mov
pop
(bad)
outs
jecxz
mov
mov
adc
sbb
mov
dec
into
or
dec
fwait
nop
in
(bad)
rcr
xor
sti
div
inc
sub
leave
xchg
rol
rol
mov
jo
ja
push
into
push
jae
mov
lock
iret
xchg
loopne
mov
or
lea
sbb
iret
(bad)
push
das
dec
sbb
ja
int
jp
ja
mov
inc
inc
mov
aam
inc
rcl
jl
and
dec
sub
pop
sti
sbb
push
(bad)
aam
jmp
ins
xchg
lods
cwde
dec
sbb
or
fild
mov
cmc
icebp
mov
sahf
cmp
dec
int3
imul
stos
sti
and
(bad)
movs
(bad)
pusha
outs
add
pop
dec
mov
inc
repz
mov
(bad)
sub
addr16
cld
ds
ins
fisttp
add
stos
hlt
adc
repnz
mov
aas
test
pop
gs
xchg
(bad)
out
xchg
pop
mov
mov
pop
js
pusha
xor
gs
not
aam
push
mov
mov
cdq
inc
or
dec
lahf
sbb
and
jmp
ins
fst
test
sar
add
sar
mov
nop
addr16
loop
dec
push
int3
in
cmp
push
jbe
popa
push
pop
inc
int3
lea
retf
inc
mov
jo
sbb
xlat
or
dec
mov
cs
xor
imul
mov
mov
mov
inc
imul
xor
add
pop
lock
mov
iret
add
dec
mov
js
shl
pusha
out
aam
add
ror
mov
jmp
pop
xor
mov
dec
ins
push
cs
dec
and
(bad)
int3
xchg
jl
sub
sub
xchg
and
cmps
(bad)
std
hlt
repz
dec
pop
add
shr
jae
(bad)
data16
ja
aam
pusha
outs
pop
sub
push
jne
aam
dec
push
or
popa
addr16
int3
ret
loope
aas
(bad)
stos
pop
or
xchg
popa
movs
les
pop
and
sub
fidivr
fnstenv
jle
shr
push
retf
ja
jnp
xchg
jno
fcom
shl
in
les
jns
add
and
adc
fdivr
mov
test
(bad)
addr16
or
xchg
adc
xchg
push
sub
push
lods
xchg
fbstp
inc
imul
(bad)
mov
cmp
xor
push
jb
mov
mov
xchg
mov
xchg
stos
(bad)
xor
cwde
int
jns
mov
xchg
cld
call
stc
imul
dec
mov
(bad)
adc
sub
cmp
outs
lods
xchg
pop
daa
sbb
into
into
jbe
inc
mov
movs
jne
pop
inc
imul
leave
fistp
or
cmp
adc
out
adc
pushf
sahf
or
pop
stos
adc
sub
or
mov
jecxz
fwait
arpl
int3
loop
ror
mov
jno
and
fadd
lods
and
pop
inc
inc
adc
pushf
arpl
sub
bts
lds
sub
sbb
push
mov
jns
dec
test
cmc
outs
repnz
xchg
repnz
inc
and
add
test
shl
scas
cdq
xchg
or
hlt
add
clc
inc
scas
and
push
repnz
adc
stos
mov
jo
cmc
or
xor
nop
lea
sub
adc
jns
pop
push
movs
loop
enter
push
sub
retf
fcomp
sbb
pop
(bad)
fistp
pop
mov
aam
and
pushf
add
dec
cs
jne
add
lods
or
or
outs
imul
pushf
jbe
clc
cmp
popa
sbb
aad
xor
cmp
inc
xchg
pop
mov
das
je
imul
ds
rcr
dec
jl
sar
jno
adc
ss
mov
sbb
mov
push
dec
mov
(bad)
push
cmp
xchg
cmps
mov
mov
xor
sub
mov
inc
and
sbb
sub
mov
jbe
jno
jne
mov
je
loope
fsubr
ins
mov
fidivr
push
push
lods
stos
into
inc
mov
xchg
test
pusha
pop
lds
call
xor
inc
(bad)
aam
aad
cmps
cwde
ja
repnz
adc
pop
das
mov
into
adc
ret
jle
and
cmp
add
data16
ja
test
pop
sbb
call
sbb
add
mov
jecxz
dec
cdq
and
sub
cli
mov
pop
push
sbb
or
(bad)
aam
retf
cmp
xor
mov
fidivr
mov
loope
push
push
movs
daa
xor
test
imul
xlat
add
retf
xchg
push
sbb
mov
fdivr
hlt
imul
out
(bad)
mov
dec
mov
into
cwde
(bad)
ja
leave
(bad)
xchg
sbb
push
(bad)
fwait
loope
pushf
rcl
adc
pop
xchg
xchg
je
into
ficom
lods
shl
xchg
nop
sahf
jmp
sub
dec
fmul
or
jmp
aam
out
inc
lods
mov
mov
rcl
shl
test
xor
jb
dec
retf
add
jge
inc
inc
mov
mov
dec
xchg
stc
ret
mov
sub
xchg
int
adc
push
xchg
mov
loop
call
mov
shl
ror
bound
fstp
test
movs
cld
inc
or
aas
(bad)
std
xor
test
pusha
enter
mov
jb
inc
loopne
stos
test
push
cs
xchg
leave
adc
(bad)
int3
inc
jecxz
and
(bad)
int
cmp
das
adc
popa
movs
cmp
adc
sahf
add
(bad)
stos
in
xchg
mov
gs
and
inc
mov
xchg
sti
test
and
and
mov
pop
sub
mov
mov
mov
mov
mov
gs
mov
pop
repz
pop
out
mov
ficomp
and
movs
push
es
jge
shl
xchg
and
out
jge
dec
aad
sub
clc
into
ins
std
repnz
ror
lock
ins
jle
xchg
mov
fidiv
pop
cmp
je
mov
mov
push
bound
test
neg
push
call
or
std
les
mov
adc
mov
sub
push
jmp
push
sahf
cmp
mov
or
push
adc
cmp
xchg
imul
adc
mov
aad
mov
call
leave
aad
push
push
and
jne
pop
fdiv
cmp
push
and
jb
fisttp
cmp
fnstcw
pop
or
test
push
dec
dec
mov
movs
inc
fwait
imul
push
cmova
xor
mov
ret
mov
jecxz
or
push
sbb
movs
stc
(bad)
fsubr
sbb
adc
jbe
(bad)
jno
mov
stos
pop
retf
mov
or
into
cmp
bound
(bad)
or
or
inc
not
dec
es
xchg
cmp
xor
add
les
cdq
mov
dec
jmp
shl
xor
or
xchg
gs
mov
cmp
xor
add
xchg
mov
cmp
sub
and
jmp
cmp
ret
lods
jle
jge
loop
mov
lods
gs
push
imul
mov
shl
nop
pop
jbe
xchg
or
mov
not
pop
dec
daa
mov
(bad)
les
jmp
mov
repz
xchg
test
in
inc
stc
int
test
call
int
add
dec
cs
adc
emms
jo
hlt
repz
fdiv
arpl
mov
adc
mov
and
pop
aaa
xchg
cdq
and
int
(bad)
xor
inc
or
neg
popa
hlt
mov
xor
stos
pop
xchg
sbb
sub
pusha
push
push
add
or
xchg
mov
xor
stos
sbb
mov
adc
pushf
aas
call
into
push
dec
outs
pop
inc
and
xor
(bad)
in
into
stos
(bad)
cmps
mov
or
push
dec
arpl
and
lds
and
aam
xor
sbb
pop
mov
jmp
add
imul
or
(bad)
(bad)
out
call
jp
seto
or
xor
lods
ds
outs
loop
mov
inc
out
gs
inc
fist
dec
adc
xchg
call
dec
rcl
pop
rol
pop
sub
xchg
in
push
mov
repz
jnp
add
mov
mov
push
out
daa
test
adc
lahf
int3
ins
mov
inc
rcr
or
sbb
pop
test
xor
cmp
clc
sbb
nop
scas
and
leave
or
or
shl
in
mov
and
setp
mov
mov
clc
das
cmp
jnp
test
xor
cmp
dec
sbb
jb
mov
cmp
jmp
stc
aam
out
jae
cmc
dec
aad
cmp
lock
ins
movs
dec
call
jne
sbb
xor
pop
adc
mov
movs
mov
rcr
in
dec
in
int
fstp
test
or
cmp
shl
xor
ins
data16
loop
adc
cmp
xchg
mov
jecxz
xor
repz
xor
jp
xlat
out
push
inc
cmps
nop
std
lock
xlat
cdq
jae
movs
pushf
addr16
push
inc
repnz
addr16
push
pop
movs
xor
shl
mov
cwde
(bad)
push
cmps
int
or
dec
or
es
and
into
push
xor
in
(bad)
and
adc
nop
iret
mov
push
shl
dec
aad
jne
add
inc
mov
(bad)
hlt
jecxz
pop
rol
ins
mov
mov
cs
dec
js
xchg
out
das
pop
push
push
mov
outs
and
pop
push
adc
lods
(bad)
pop
cmp
ror
lahf
mov
xor
fnstsw
(bad)
repnz
pushf
jmp
stos
leave
pop
push
inc
jno
mov
mov
sub
leave
mov
arpl
es
lahf
bound
rol
sti
gs
pop
jnp
sub
test
push
sub
outs
out
mov
dec
xrelease
scas
jl
js
inc
enter
into
dec
mov
(bad)
xlat
retf
jle
jne
jns
push
mov
push
xchg
arpl
mov
mov
int
adc
ds
mov
repz
aas
add
inc
call
fsubr
xor
pop
cmp
sbb
idiv
sub
xor
push
retf
mov
sar
pop
mov
js
jne
cmp
clc
clc
loope
bound
js
add
(bad)
(bad)
and
jge
lods
dec
int
mov
and
push
jle
jg
push
out
rol
inc
call
sub
xchg
ds
cmc
shl
loope
or
xor
daa
mov
lock
cmp
test
fs
cmp
push
loopne
cmp
add
cmps
inc
lods
mov
or
inc
and
call
cli
aas
add
inc
mov
sbb
enter
pop
jb
loop
jp
cmp
add
inc
sti
xor
push
mov
lea
mov
pop
repnz
test
add
repz
pop
not
pop
jno
mov
inc
sti
cld
(bad)
mov
and
and
or
sbb
inc
inc
ret
mov
call
pop
cs
pop
xor
xchg
aam
sub
retf
cld
aaa
and
adc
adc
lods
jge
mov
sub
cmps
dec
retf
mov
jmp
xor
xchg
mov
data16
sub
add
mov
pop
push
jne
movs
jle
dec
(bad)
repnz
pop
ins
int
cmp
mov
(bad)
and
cmp
std
sbb
stos
and
mov
(bad)
in
mov
push
mov
mov
dec
ins
lahf
xor
js
cmp
mov
test
fild
lds
test
jl
scas
mov
push
sbb
mov
rcr
xlat
test
add
fisubr
push
aaa
je
idiv
cmp
ins
scas
movs
sbb
arpl
fbld
xchg
aam
lods
and
stos
xchg
and
adc
push
sahf
mov
adc
xchg
daa
xchg
les
jo
cwde
mov
test
adc
xor
xchg
push
clc
and
test
dec
in
jbe
jl
cmp
ss
xor
addr16
fwait
inc
push
pop
mov
sbb
jge
and
repnz
push
test
call
sbb
fsubr
fnstsw
rcr
call
mov
arpl
push
cs
cmc
jl
mov
leave
xchg
xchg
xchg
das
jns
cmp
outs
lods
or
lods
aad
arpl
ja
sbb
gs
inc
mov
(bad)
sub
cmc
int3
cmp
xchg
shl
das
test
adc
in
loope
rcl
repz
mov
xchg
out
pop
xchg
lds
xor
jle
dec
cmp
jge
repz
sbb
jo
aad
out
mov
sar
pop
sahf
adc
call
fidiv
mov
or
cmps
adc
lea
lods
int3
push
cmp
sbb
push
nop
or
out
xchg
cwde
cmp
adc
addr16
jbe
clc
ss
xor
mov
sbb
fsub
sbb
dec
ja
xchg
ins
xchg
xlat
mov
add
leave
add
call
(bad)
adc
xchg
add
add
outs
rcl
push
into
outs
std
push
add
fistp
jae
add
sub
popa
retf
jne
out
pop
sub
inc
fdivr
jbe
cmp
or
in
sbb
(bad)
rcl
hlt
int
mov
adc
into
in
clc
aaa
cld
mov
cs
sbb
dec
out
or
xlat
aas
test
or
jo
cld
enter
js
shrd
or
mov
in
adc
xor
int
sbb
mov
pusha
movs
out
xchg
pop
dec
jb
inc
and
sbb
push
jle
dec
out
or
jp
push
mov
aaa
or
mov
call
jecxz
sub
mov
out
xor
nop
aad
inc
in
mov
xchg
arpl
jbe
mov
ret
jno
dec
mov
mov
test
mov
push
fcmovb
aas
imul
je
sahf
lock
sbb
jne
btr
je
and
mov
cmps
adc
out
xchg
or
add
rcl
shl
cmp
call
jbe
dec
inc
xor
vpmullw
jno
shr
lods
lods
in
in
mov
ins
sub
sub
leave
popa
pop
mov
in
paddq
mov
pop
pop
mov
(bad)
xor
pusha
jle
adc
jne
(bad)
cmp
imul
jle
dec
test
nop
jecxz
popa
add
mov
lods
imul
jge
push
or
pusha
xor
in
stos
(bad)
dec
dec
fidiv
mov
js
outs
xchg
pushf
mov
push
dec
lods
out
mov
in
inc
mov
jge
xchg
gs
loope
pusha
pusha
fcom
(bad)
aam
pop
push
xor
mov
jecxz
push
(bad)
cmp
add
mov
push
jmp
jo
push
push
retf
and
jne
jnp
xor
hlt
push
xor
sti
cmc
lods
pop
push
frstor
in
ins
add
aaa
ins
mov
jl
add
mov
pop
cmps
call
jecxz
push
mov
dec
xor
fsubr
repnz
repz
mov
inc
aad
or
shr
mov
ss
aas
push
jl
cmp
dec
fisttp
pop
lods
mov
jbe
mov
ror
and
add
mov
hlt
mov
mov
sbb
aad
les
les
sub
sub
or
shr
jmp
jb
add
loop
in
and
pop
mov
jb
aam
jmp
xchg
mov
jmp
sbb
pusha
jnp
ror
add
stos
xchg
cmp
not
jmp
cmp
mov
imul
mov
aaa
push
push
inc
in
cli
(bad)
mov
mov
inc
cmps
add
dec
inc
test
stos
imul
movs
mov
sub
jb
(bad)
dec
mov
xor
(bad)
loopne
cmp
pushf
xchg
sbb
jnp
stos
mov
cmps
sbb
cmp
mov
push
cld
xor
sbb
pop
mov
int3
mov
xor
pop
out
jge
loopne
loope
fldenvw
out
sbb
xor
push
push
adc
push
sbb
es
les
mov
push
call
lahf
retf
into
mov
adc
sahf
or
fmul
cmp
and
push
xchg
xchg
fcmovne
add
lds
int3
ins
push
icebp
lahf
jl
(bad)
adc
(bad)
sub
sahf
pop
dec
adc
or
push
jp
jns
mov
dec
nop
mov
aaa
sub
stos
sub
in
cdq
mov
jno
xchg
leave
mov
cmps
adc
jge
retf
xor
aaa
mov
pop
push
sbb
arpl
add
push
and
ja
cmp
sbb
popf
lods
hlt
inc
xor
fsubr
add
cmp
mov
iret
retf
mov
pop
mov
outs
mulps
sub
fst
dec
movs
clc
mov
out
clc
rcl
fwait
gs
fcomp
(bad)
push
shl
dec
enter
fucomp
mov
jecxz
(bad)
shl
cmps
xchg
adc
cmp
and
mov
fcom
enter
mov
dec
cs
pop
out
dec
jmp
aaa
push
xchg
sub
mov
mov
mov
dec
push
das
sub
rcr
into
push
cdq
or
dec
sub
cmp
ins
(bad)
push
gs
xlat
inc
xchg
or
loop
lods
imul
adc
push
cmp
adc
jmp
add
outs
inc
fs
push
jne
cld
gs
mov
popa
fild
mov
clc
inc
loopne
test
jle
out
adc
aad
outs
inc
sbb
out
and
jg
cmp
imul
mov
sub
jge
lods
pop
cwde
sete
fcomp
div
into
jo
mov
xchg
(bad)
add
adc
xchg
or
test
repz
test
mov
stos
test
sti
pop
sub
inc
stc
adc
jb
cmp
daa
xor
mov
push
in
out
jl
dec
or
daa
xchg
cmp
mov
xchg
aas
or
push
jmp
adc
xor
and
int
inc
inc
clc
pop
adc
xor
jmp
addr16
outs
xchg
sbb
fild
jnp
mov
int3
fwait
retf
sbb
shl
(bad)
dec
dec
push
sbb
dec
imul
ins
sbb
rcr
test
aaa
or
hlt
push
jge
or
fwait
adc
jno
mov
xchg
pop
mov
xlat
xchg
aaa
nop
repz
cmp
enter
jle
in
jb
int3
add
push
jg
jne
add
inc
enter
xchg
dec
mov
jo
test
xchg
rcl
lods
inc
sahf
in
pop
xlat
xor
mov
fs
sub
cwde
fld
cmp
mov
xor
loope
push
jns
jle
mov
int
add
ins
dec
push
imul
rcl
aad
aam
mov
imul
div
cmps
mov
in
ret
push
mov
ja
retf
in
fisubr
ja
aas
mov
mov
popa
add
ret
rcr
jle
lods
xchg
scas
in
(bad)
jnp
jo
call
movs
ja
inc
mov
rol
rcl
lock
cmovg
stc
xchg
and
cmp
inc
outs
adc
cwde
daa
push
pop
fwait
lods
jge
(bad)
repnz
jae
hlt
adc
fisttp
add
nop
adc
jmp
xchg
cli
jl
ss
or
xchg
push
add
sub
cmc
sub
sbb
rcl
sbb
push
sbb
adc
jb
xchg
mov
out
fadd
aad
dec
clc
jae
push
pop
dec
mov
push
pop
or
out
inc
in
sub
into
lds
jmp
xchg
push
int
pop
scas
push
xor
aad
loope
cmp
mov
adc
fcom
sub
out
or
arpl
inc
or
test
scas
xchg
stc
ror
mov
hlt
mov
cmp
sub
mov
or
popa
add
adc
mov
movs
loopne
fidivr
mov
cmps
rcr
sub
mov
repz
lea
out
sbb
das
cmp
call
clc
cmp
rcr
sub
pop
dec
push
push
mov
or
jae
in
out
sti
cmps
(bad)
out
push
test
imul
xor
ror
out
xchg
cwd
xchg
int
test
sti
push
jnp
xlat
pop
adc
jmp
push
xchg
jecxz
mov
push
fcomi
ss
xor
iret
jns
cdq
inc
inc
pop
enter
cmp
daa
pop
(bad)
mov
xor
daa
dec
pop
adc
add
inc
jbe
push
inc
data16
add
mov
in
dec
sbb
rcr
pop
(bad)
jb
sbb
(bad)
call
stos
into
xchg
pop
arpl
jge
and
cmp
test
loopne
push
mov
sbb
and
cmp
mov
xor
pop
clc
or
aas
shr
pop
mov
xchg
cwde
xchg
test
clc
in
sbb
fld
cmp
in
jl
dec
fcomp
mov
mov
int
xchg
out
xor
sbb
iret
mov
retf
push
jns
adc
shr
sbb
ret
mov
inc
repnz
hlt
inc
mov
jg
call
div
xchg
in
(bad)
add
dec
push
mov
push
cmp
ror
in
pop
(bad)
aas
lock
std
add
fadd
sub
test
sub
sbb
(bad)
imul
into
pop
scas
(bad)
mov
jg
fmul
lock
push
xchg
fist
out
shl
sub
lods
mov
sub
xchg
sbb
pop
mov
pop
cmp
or
call
addr16
sub
test
cmp
push
int
mov
or
daa
xchg
xchg
jo
pop
jp
outs
loope
xlat
jne
pop
jae
(bad)
adc
popa
add
aam
push
dec
mov
js
int3
clc
inc
pop
inc
or
and
test
imul
scas
mov
stc
addr16
push
cdq
xor
jne
fidivr
stos
xlat
stos
xor
mov
es
sub
sbb
sbb
pop
pop
mov
sbb
cmp
jge
mov
retf
cmp
mov
arpl
xchg
xor
add
jmp
xchg
jl
mov
out
push
mov
or
lea
inc
push
psubq
enter
mul
sub
push
rcl
mov
loope
scas
dec
(bad)
(bad)
mov
xor
sub
mov
push
xchg
fldcw
sbb
cmp
adc
jbe
jb
add
jmp
pusha
pop
dec
jbe
retf
sbb
ins
leave
std
sbb
sbb
call
inc
jp
call
xlat
mov
pop
dec
and
xchg
lods
jnp
ja
jmp
scas
arpl
or
daa
rcr
sub
push
jb
add
iret
push
add
push
stc
mov
out
(bad)
std
dec
mov
jp
rcr
ins
dec
or
inc
xchg
outs
mov
aam
mov
stos
mov
je
lock
pop
cs
mov
loope
(bad)
loop
(bad)
cdq
test
gs
sbb
bound
mov
jmp
mov
lods
(bad)
daa
stos
xchg
jno
mov
into
adc
aam
xchg
xchg
icebp
gs
xor
push
lahf
jp
push
out
popa
ret
push
ret
pop
or
xchg
es
cmps
push
sbb
mov
nop
aas
mov
inc
in
cmp
cdq
inc
movs
xlat
movs
cmp
sbb
mov
push
mov
sbb
adc
shl
rcr
jmp
ins
call
xchg
lods
jns
dec
aam
add
add
xchg
jns
lock
cmp
outs
add
call
or
retf
cmp
or
rcl
mov
test
aam
les
sbb
mov
push
mov
out
fdiv
pop
repnz
rcl
or
and
pop
inc
(bad)
(bad)
adc
imul
pop
aaa
sahf
ror
aad
neg
jo
in
pop
popa
pop
lock
mov
push
repnz
jne
movs
cmps
mov
shl
jle
jae
sub
popf
jns
cmps
jl
leave
sub
pop
ret
mov
aam
(bad)
in
test
mov
mov
pop
and
sub
out
inc
dec
sar
pusha
in
std
(bad)
stos
xchg
repz
cmps
test
popa
mov
or
jo
add
xor
outs
pusha
into
ins
push
pop
mov
push
fisubr
ins
jbe
cli
push
xchg
pop
xor
adc
add
push
mov
rcr
mov
test
sbb
xor
adc
sbb
pop
shr
lahf
sub
dec
mov
jnp
(bad)
adc
sar
in
dec
push
jmp
pop
pop
sbb
mov
pop
mov
movs
dec
in
sub
call
mov
mov
fs
sbb
mov
sbb
fnsetpm(287
cli
sbb
loop
add
jge
adc
cdq
je
xchg
fnstcw
ucomiss
popa
adc
(bad)
dec
(bad)
pop
sub
push
mov
pop
shr
mov
(bad)
inc
xchg
pop
test
int
add
mov
mov
cmp
nop
xor
repnz
aaa
jmp
dec
data16
ss
jge
icebp
cwde
pop
ror
cmp
lods
loop
fmulp
enter
jno
cwde
sahf
bound
or
imul
pop
mov
pop
jmp
mov
lods
daa
pushf
add
adc
sbb
xlat
into
pop
or
shr
popa
pop
sub
call
rol
and
(bad)
xchg
pop
or
jo
mov
push
cs
stc
xchg
push
jmp
xchg
movs
sub
jns
enter
out
and
mov
ins
sahf
ret
imul
vandps
push
jno
fyl2x
or
xchg
mov
cmc
mov
shr
bound
mov
int
dec
imul
xlat
xchg
fdiv
and
xlat
xchg
js
adc
jns
mov
and
xchg
dec
fcmovnb
push
in
cli
(bad)
aas
or
xchg
mov
push
sbb
inc
retf
sbb
jp
and
cmp
push
data16
pop
fidivr
mov
or
dec
mov
imul
movd
stc
mov
adc
and
xchg
aaa
fdivr
loopne
(bad)
inc
mov
and
loop
stos
clc
cmp
dec
pop
scas
cmps
(bad)
pop
cmc
sub
int3
adc
retf
bnd
and
fldenv
push
jg
fistp
out
jmp
fiadd
or
es
jns
movs
push
jb
jecxz
pusha
test
sti
cmp
clc
test
int3
mov
pusha
inc
ins
sub
xor
xor
(bad)
jl
cmp
inc
test
dec
sar
clc
and
dec
popf
aas
bound
mov
clc
fwait
sahf
popf
jge
stos
jo
mov
mov
push
aaa
in
jmp
jo
ss
push
sub
or
pop
mov
test
sbb
mov
fistp
fcomp
push
push
ficomp
dec
(bad)
xchg
xchg
outs
push
or
push
push
fcomp
and
lds
shl
add
dec
ret
fs
enter
sahf
push
sub
and
es
sbb
or
sub
rol
xor
stc
xlat
pop
int
leave
in
ins
xchg
int
shl
psllw
mov
in
movs
xchg
retf
jge
loope
clc
cdq
outs
rol
xor
test
setg
mov
fstp
mov
cmp
mov
loop
mov
lea
ins
adc
or
test
ins
jmp
fistp
add
mov
sahf
(bad)
lock
mov
cdq
ror
std
sbb
adc
test
pusha
xor
mov
push
nop
das
fisub
jecxz
rcr
sti
dec
cdq
ds
loopne
add
loop
mov
fcom
pop
out
add
sub
dec
jg
xor
inc
push
add
mov
inc
bound
xchg
cmp
shl
leave
and
push
xor
xor
add
jg
sahf
sbb
add
adc
cwde
(bad)
gs
std
clc
icebp
ds
lods
sub
push
ja
and
outs
retf
(bad)
not
out
pusha
mov
ficomp
mov
js
arpl
jmp
fistp
fwait
adc
cmp
pop
push
xor
pop
out
pop
mov
or
dec
jno
cmps
lods
in
cdq
pop
or
fst
and
or
pop
out
mov
xchg
jns
cmp
mov
xchg
dec
daa
inc
push
mov
out
arpl
and
push
stos
(bad)
lahf
and
shr
jae
cld
fisttp
(bad)
stc
das
cdq
xchg
adc
push
(bad)
mov
stos
ja
call
fld
dec
jg
bound
cdq
sahf
mov
push
mov
call
test
and
in
cmp
jb
adc
push
shr
pop
push
xchg
loopne
je
les
(bad)
xchg
ret
xlat
mov
jl
push
push
aaa
mov
aam
fbstp
mov
inc
or
mov
pop
cdq
add
popf
dec
or
mov
sbb
inc
or
stc
(bad)
inc
or
xchg
and
push
mov
test
cld
sahf
xchg
fucomip
stc
push
jb
add
jmp
xchg
mov
add
and
movs
mov
sbb
(bad)
xchg
cmps
push
aam
fadd
push
or
movs
jmp
fcmovu
cwde
and
dec
loop
and
mov
push
inc
xchg
sub
push
cdq
sub
cmps
stos
sbb
cmp
inc
ret
pop
add
stos
in
dec
fld
mov
loop
sbb
(bad)
xlat
mov
out
pop
loope
lods
out
test
retf
nop
sbb
cli
sbb
mov
test
jmp
xor
xor
pop
js
fcmovnu
push
mov
xchg
xchg
inc
sbb
push
dec
scas
iret
ret
shl
xchg
dec
js
(bad)
adc
mov
arpl
push
pop
xor
les
fsub
ss
adc
or
scas
daa
add
jmp
(bad)
dec
data16
arpl
mov
mov
and
movs
push
loopne
push
iret
ins
or
adc
into
dec
popa
in
mov
data16
fadd
cli
sub
loopne
mov
sub
les
call
xor
rcr
addr16
ret
adc
ret
cmps
ror
repz
arpl
xchg
test
jg
adc
pop
mov
clc
add
mov
sbb
sbb
and
and
xchg
pop
fs
pusha
adc
(bad)
or
jle
lahf
icebp
jmp
imul
mov
jl
inc
or
imul
mov
mov
sub
fst
pop
fidivr
ss
loopne
add
dec
cmp
mov
loope
cmps
enter
xor
mov
cmp
retf
in
mov
fadd
cmp
mov
jnp
sbb
pop
mov
arpl
(bad)
xchg
stos
dec
pop
movs
shr
pop
sbb
pop
xchg
mov
mov
dec
pop
jbe
jmp
jge
pop
xchg
cmp
retf
push
sub
cmps
jp
mov
mov
push
mov
pusha
test
loopne
mov
hlt
jge
cld
inc
mov
inc
les
dec
mov
jb
and
mov
mov
lahf
ja
push
push
cmp
pop
push
xchg
(bad)
dec
adc
cld
(bad)
and
ret
jl
push
gs
add
mov
xchg
mov
push
arpl
add
mov
jg
mov
sbb
or
pop
mov
and
dec
and
cmps
jne
fnsave
xor
cmc
fimul
mov
fs
clc
or
or
add
mov
push
mov
out
jnp
loopne
push
dec
lock
jb
push
stc
jmp
fnstsw
pop
imul
sbb
sbb
dec
movs
adc
ror
pop
cli
jl
sbb
ja
push
clc
inc
rcr
xchg
test
ror
aaa
fst
pop
mov
pop
ss
cs
pushf
inc
jnp
mov
dec
imul
aam
mov
movs
jae
mov
jge
and
inc
(bad)
cmp
pushf
lea
std
cmp
push
pop
sub
sbb
je
xchg
jmp
fcos
push
jle
push
inc
daa
or
cld
shl
stos
jo
into
pusha
aas
repz
and
xlat
cmp
pushf
arpl
lea
sar
or
imul
or
sti
inc
(bad)
mov
mov
mov
sbb
dec
jno
in
gs
sub
in
add
add
repz
mov
push
loop
std
mov
(bad)
push
mov
imul
cmp
mov
xor
fdivrp
out
stc
xor
gs
scas
dec
es
push
ret
adc
mov
in
sub
inc
sbb
jns
xchg
mov
(bad)
mov
or
inc
dec
es
jp
push
mov
movs
rcl
rcl
out
pop
shl
mov
ins
add
ja
push
adc
dec
sbb
adc
mov
popa
outs
ds
mov
and
arpl
mov
inc
outs
add
jb
int3
pushf
add
xlat
xor
sub
dec
adc
mov
cmp
cld
pop
pop
push
dec
jp
jecxz
pop
mov
sub
dec
dec
mov
dec
inc
inc
push
loop
jb
neg
dec
push
mov
into
ret
mov
neg
and
outs
sbb
adc
repnz
add
push
inc
ret
fst
and
jle
aaa
das
(bad)
mov
std
rcl
push
lds
mov
js
mov
add
shr
scas
mov
outs
jbe
pop
pusha
push
mov
shl
movs
out
push
xchg
mov
das
int
adc
mov
hlt
inc
dec
test
in
mov
into
inc
js
(bad)
sti
test
int
push
fistp
lea
and
movs
shr
pop
repz
mov
xor
sar
mov
jp
xor
xchg
or
jae
loope
and
sbb
jp
enter
(bad)
push
data16
mov
mov
inc
mov
jg
rcl
js
gs
popa
pop
cld
std
fsub
push
mov
inc
dec
imul
rcr
mov
repnz
pop
test
loope
sbb
fldcw
(bad)
into
sub
add
sub
xor
xor
and
cmps
shl
pop
mov
push
data16
call
cmps
sub
cwde
pop
xor
imul
xchg
dec
pop
inc
icebp
cmp
cmp
push
add
bound
lea
pop
aam
pop
jne
jne
mov
in
xor
and
adc
shl
cwde
jno
nop
sbb
push
ins
clc
jmp
cmps
push
mov
sub
jns
add
cmps
mov
repz
stos
jns
(bad)
cmp
retf
xchg
je
dec
cmps
rcl
inc
sbb
gs
adc
in
sub
in
pop
dec
pmaxub
pop
(bad)
cwde
mov
add
ficom
in
adc
mov
addr16
xor
xor
mov
sbb
and
add
jecxz
inc
mov
lahf
adc
push
jge
xor
and
jbe
out
pop
add
mov
cwde
mov
xchg
inc
or
(bad)
std
dec
call
(bad)
sbb
adc
retf
adc
pop
bound
cmp
sti
ins
pop
sbb
stos
sbb
jbe
adc
arpl
sbb
arpl
loope
addr16
daa
push
jno
mov
mov
xor
outs
shl
or
cld
push
int3
jmp
pop
push
dec
mov
mov
mov
mov
jg
cmp
sbb
sbb
rcr
xchg
dec
add
xlat
xchg
pop
xchg
sbb
lea
xchg
aas
or
mov
jecxz
push
rcr
es
inc
cdq
jge
jo
shl
mov
pop
push
add
(bad)
jge
ret
(bad)
ror
jecxz
push
mov
cmp
adc
push
aaa
pop
push
in
test
sub
mov
mov
pop
ja
retf
mov
sbb
(bad)
jmp
jl
jmp
cmp
pop
xor
es
lahf
push
bound
push
adc
xchg
bound
inc
and
test
xor
loop
je
dec
cmp
nop
and
jle
lds
sbb
mov
ficom
push
daa
loop
push
call
out
(bad)
call
or
jae
lock
in
sbb
sub
mov
pop
stc
mov
mov
mov
push
sbb
mov
dec
ins
pop
cwde
ret
clc
fldenv
mov
push
sbb
fistp
jmp
mov
(bad)
in
jo
sbb
xchg
(bad)
lock
jnp
data16
inc
jge
stos
mov
jae
clc
in
inc
aas
mov
rep
nop
sbb
pop
clc
shl
int3
mov
adc
cmp
(bad)
inc
sub
xor
ss
outs
cmp
add
aaa
pushf
ins
call
mov
or
push
adc
mov
xor
cmp
jl
and
add
shr
mov
push
fldenv
out
out
dec
or
jle
and
sbb
pop
fistp
shl
icebp
lahf
jmp
pop
mov
stos
mov
or
jae
cmps
or
adc
inc
push
and
or
adc
sbb
fdivr
cmp
hlt
rcr
