mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
push
push
push
repz
xchg
aas
call
nop
add
outs
or
add
pop
push
push
push
sbb
enter
add
(bad)
lds
sub
mov
push
add
xor
xchg
pop
mov
push
(bad)
loope
xor
leave
sbb
retf
pop
and
jg
aas
ret
dec
pop
retf
inc
pop
cmp
xchg
push
xchg
and
loopne
nop
lods
xor
call
add
inc
out
les
jbe
push
inc
mov
pop
pusha
pop
add
repz
inc
jbe
push
push
push
rol
push
jg
push
mov
sub
shl
aam
xchg
sahf
mov
ror
inc
(bad)
push
in
jl
fwait
xor
inc
inc
xor
push
inc
xor
dec
add
add
adc
jmp
jl
xor
push
or
push
add
or
push
push
add
dec
push
jge
sbb
inc
std
and
fwait
push
inc
add
out
ficom
popf
jnp
jo
ficom
call
pop
lods
mov
or
jb
xlat
jbe
push
mov
dec
add
adc
push
test
pushf
push
mov
sar
ret
shl
sahf
adc
add
pop
call
adc
dec
add
jb
mov
jmp
dec
push
loope
xor
add
xchg
push
pop
dec
lea
ja
mov
mov
hlt
add
fs
push
(bad)
aam
xchg
loopne
stos
mov
push
mov
pop
cmp
xchg
push
sbb
lahf
or
fwait
add
mov
shl
and
cmp
pop
movs
push
int3
dec
adc
dec
mov
or
test
rcl
pop
dec
sub
(bad)
push
shl
imul
ss
push
(bad)
dec
xor
test
or
add
sub
in
cs
dec
add
pop
pop
pop
push
push
jmp
icebp
popa
jo
jmp
jle
jle
add
hlt
mov
and
jnp
xor
jne
pop
xchg
pop
and
(bad)
push
test
pop
adc
xlat
rol
jns
repz
or
xor
lds
aaa
ret
push
add
idiv
lock
inc
push
push
or
ins
push
movs
mov
add
inc
xor
sub
hlt
push
cwde
stos
aad
add
pushf
push
out
pusha
xchg
xor
xor
lods
and
pop
push
test
add
fmul
and
or
dec
nop
test
imul
sbb
adc
push
or
jle
mov
jno
add
mov
inc
jmp
cli
add
push
add
test
pop
adc
aaa
mov
iret
cmp
das
push
loope
in
sti
loopne
mov
sahf
pop
push
jp
imul
mov
add
int
add
jecxz
test
shr
mov
sub
(bad)
push
add
repnz
dec
shl
xchg
aaa
add
pusha
loope
rcr
push
push
add
jbe
loop
ret
adc
xchg
retf
and
fcmovne
mov
aaa
test
cmp
inc
xchg
and
add
jmp
adc
mov
enter
mov
push
rol
inc
jmp
into
mov
xor
xchg
push
push
ror
(bad)
mov
xor
push
push
sbb
lods
mov
xlat
icebp
sbb
add
loopne
mov
sub
aas
jmp
mov
cli
push
mov
or
pop
add
out
sub
jo
mov
mov
iret
push
push
jbe
dec
or
stos
add
sub
push
push
scas
addr16
sbb
pop
pop
mov
or
and
jmp
stos
push
inc
fld
add
shr
sub
cmp
pop
lea
pushf
dec
mov
adc
and
pop
ret
bound
out
(bad)
int3
add
push
push
cmp
ds
mov
pop
cmp
stos
cwde
sub
pop
add
xor
mov
cmp
ror
mov
add
nop
pop
cmp
dec
inc
xor
push
pop
add
shr
push
out
movs
movs
pop
les
dec
sbb
xor
push
inc
push
sub
not
or
int3
pop
inc
and
(bad)
push
sar
or
sti
add
push
(bad)
lea
sbb
mov
push
pop
cmp
or
es
sbb
sahf
jns
movs
or
call
sbb
jo
(bad)
es
adc
xor
or
sbb
in
sbb
or
dec
cs
inc
dec
xor
dec
push
mov
mov
xor
add
in
adc
enter
jnp
mov
rol
dec
neg
lods
dec
stos
push
sbb
popf
fcomp
mov
shr
out
push
bound
fisttp
scas
mov
adc
ins
add
push
mov
js
shr
loopne
push
xor
xchg
dec
pop
push
jne
repz
pop
je
jg
add
push
sub
adc
iret
adc
sbb
push
sar
daa
inc
sbb
dec
push
add
clc
xchg
xor
lea
jo
pop
pop
int
xor
mov
mov
mov
pop
or
push
push
add
xor
fistp
mov
imul
push
add
push
push
jmp
xchg
add
and
scas
pop
fisub
and
add
push
or
sbb
sub
sbb
sbb
cmp
fld
retf
loop
inc
add
pop
dec
push
aad
scas
xchg
adc
inc
shl
add
popf
mov
cmp
lock
push
mov
push
ins
mov
in
fs
lea
pushf
ds
loop
fs
and
lock
add
test
push
add
mov
gs
adc
outs
mov
iret
add
cmp
push
pop
sub
dec
xlat
adc
ret
adc
add
xchg
out
inc
xchg
push
inc
push
shl
jg
bswap
stos
xchg
push
and
dec
not
sub
add
xor
adc
js
jmp
inc
arpl
add
retf
enter
loop
lock
addr16
add
dec
sub
inc
mov
pop
sub
loope
jae
(bad)
mov
sub
aas
xchg
pop
rcl
lea
push
cli
xor
push
movs
sbb
sahf
js
(bad)
push
inc
daa
adc
pushf
jb
adc
cdq
and
mov
add
add
dec
es
mov
sahf
mov
cmp
icebp
add
shr
not
mov
aad
daa
and
jecxz
push
push
(bad)
mov
mov
mov
lock
inc
inc
sbb
add
ss
or
retf
lds
sub
lods
jp
inc
ror
pop
out
rol
push
xor
out
xor
inc
add
and
dec
arpl
push
ss
mov
jecxz
shr
add
inc
pop
ret
mov
jne
xor
adc
pusha
push
loop
pop
push
rcr
jg
or
test
add
sub
push
push
sar
pop
addr16
pop
xlat
mov
out
add
loop
cli
dec
push
pushf
test
sub
nop
add
dec
add
fld
xchg
push
lea
push
ja
xchg
sub
jae
add
push
push
mov
add
dec
add
mov
mov
je
sti
aam
clc
outs
lea
and
cmp
push
mov
add
popa
std
and
jae
aaa
mov
les
mov
push
sub
mov
sbb
mov
int3
sub
lds
loop
and
mul
sub
movs
lods
fcomp
aad
jmp
or
mov
sbb
or
pop
fmul
xchg
pop
push
jo
les
imul
and
pop
push
push
add
and
cld
mov
icebp
adc
cmp
xchg
mul
add
in
(bad)
mov
popf
and
push
push
dec
inc
sbb
pushf
sub
jo
push
adc
adc
je
rol
inc
dec
test
mov
inc
cdq
mov
jo
sub
jmp
jp
add
dec
sub
mov
and
jl
stc
pop
push
loopne
push
push
test
pop
inc
dec
sub
leave
fcmovnbe
fidiv
call
dec
add
int3
pop
add
xor
jecxz
in
pop
mov
or
mov
div
aaa
call
push
cmp
shl
mov
scas
sub
cs
push
pushf
adc
push
push
jnp
out
pop
add
sahf
aas
lea
push
push
sahf
mov
sbb
push
inc
and
dec
xor
add
loope
mov
xor
push
inc
mov
in
jo
cwde
dec
lds
sbb
mov
adc
sahf
rol
not
mov
(bad)
adc
mov
push
ds
add
shr
pushf
icebp
push
push
xor
or
or
pop
push
push
add
mov
cli
pop
ret
xchg
ror
mov
sbb
add
xor
mov
sbb
xor
shl
iret
stos
dec
shr
sub
pop
pop
mov
push
lahf
or
cmp
push
call
sbb
adc
retf
add
lods
push
mov
xchg
leave
pop
bound
push
in
cmps
push
ret
popa
mov
mov
dec
and
xor
or
mov
jecxz
push
aam
adc
push
cld
xchg
mov
das
jp
push
lahf
jl
rol
retf
test
add
loop
pop
shl
add
lea
sti
add
sbb
sub
lock
inc
inc
mov
cmc
push
loopne
ficom
and
sbb
pop
push
push
and
push
mov
(bad)
jo
xor
jg
jg
cmp
loope
daa
xchg
mov
std
and
dec
in
inc
and
dec
xchg
push
push
cmps
xchg
and
xor
sub
pop
xor
mov
and
cwde
ficomp
push
push
jmp
pop
adc
leave
retf
dec
ffreep
sub
add
sar
dec
or
push
push
push
push
push
test
and
(bad)
push
jno
adc
add
dec
push
dec
imul
xor
aas
and
or
pusha
lahf
sub
add
dec
hlt
les
shl
ss
jle
adc
fwait
and
mov
dec
mov
stos
push
jecxz
sub
out
push
add
dec
rol
mov
mov
xchg
add
push
fst
add
push
push
in
call
(bad)
sahf
ins
push
mov
mov
inc
adc
leave
hlt
neg
shl
retf
inc
mov
dec
aam
xchg
call
jle
call
(bad)
and
xchg
dec
retf
mov
adc
jns
cld
or
sub
inc
fidiv
das
daa
jmp
nop
fstp
test
movs
imul
xchg
sub
cmp
retf
adc
push
dec
xchg
mov
push
sub
push
xchg
inc
outs
and
mov
repnz
lods
inc
loop
call
sbb
and
cmps
push
push
call
push
sub
xor
test
fnstsw
(bad)
push
inc
mov
jnp
test
mov
bound
ret
or
jg
dec
shl
jae
repnz
imul
add
push
mov
xchg
aas
pusha
add
add
(bad)
inc
or
mov
or
add
daa
cwde
jg
mov
fs
fs
push
mov
xor
sub
cmp
stos
mov
in
cmps
cs
jge
in
movs
aad
xchg
repz
movs
stos
cdq
push
popf
pop
mov
out
clc
push
(bad)
loopne
popa
shr
xchg
push
ins
adc
xchg
xor
fcomp
test
nop
jmp
fisttp
call
sub
add
mov
out
inc
shl
mov
inc
and
js
or
xor
xchg
jb
mov
sub
cmp
lea
lods
push
mov
sub
lds
iret
jo
pop
jne
loopne
add
push
push
test
mov
dec
daa
call
lods
and
imul
mov
cmp
nop
push
dec
adc
out
inc
loop
pop
ror
popf
add
cmps
ins
mov
fadd
dec
lea
sar
pusha
hlt
pop
mov
mov
movs
inc
add
pop
dec
or
or
cmps
cmp
ror
out
mov
pop
loopne
and
push
les
cld
jl
pop
mov
call
xchg
xchg
mov
fcmovnbe
push
push
fldenv
in
test
movs
lahf
ret
inc
push
std
add
imul
rcl
sbb
mov
xor
mov
fidivr
jnp
mov
rcl
push
mov
sbb
or
pop
sub
inc
or
add
push
xchg
push
push
sub
mov
sub
xor
pop
inc
dec
or
js
mov
jne
or
test
dec
cmp
jb
es
daa
add
fbld
ret
fs
iret
add
cmp
xchg
and
xor
xchg
aad
push
lods
sub
cmps
xor
stc
xor
cmp
push
ror
inc
popf
loop
jo
cmp
add
sub
mov
call
push
add
dec
out
fiadd
pop
push
aam
add
jecxz
mov
outs
dec
xchg
xchg
scas
movs
(bad)
addr16
mov
add
mov
add
add
push
push
inc
sub
lock
inc
jns
ror
not
pop
push
ret
cmp
sbb
jo
add
cwde
adc
xor
pop
not
lea
fstp
push
pop
pop
stc
dec
sub
arpl
pop
mov
jo
mov
daa
pop
or
imul
je
or
retf
push
lea
push
or
pop
push
push
mov
mov
aad
out
bound
scas
mov
inc
sbb
shl
rcr
ss
test
xor
or
popa
or
jno
retf
sub
shl
push
cmps
rcr
pop
(bad)
pop
js
adc
btc
mov
push
jo
std
pop
(bad)
add
int
inc
in
mov
pxor
inc
inc
cmp
cmp
jae
pop
adc
test
adc
mov
loope
xchg
mov
cwde
mov
cmp
and
xor
adc
int
jle
sbb
rcr
not
add
sub
pop
cmp
push
push
stc
psrlq
outs
out
mov
jge
jp
lahf
fld1
dec
pop
sub
shl
push
rol
xlat
jb
nop
mov
jb
dec
loopne
fwait
mov
add
mov
je
lea
adc
or
add
add
call
push
in
fmul
pop
mov
add
jns
push
rep
jp
and
pop
inc
jmp
or
shl
aam
xchg
rcr
add
push
add
repz
mov
inc
loop
scas
aam
pop
mov
shl
pop
inc
jns
push
and
hlt
icebp
xor
add
nop
mov
sti
pop
(bad)
pop
pusha
push
dec
inc
not
into
dec
fwait
enterw
aas
pop
nop
inc
push
ret
icebp
xchg
xchg
and
dec
cmp
in
and
sbb
fs
or
sub
add
lock
pop
dec
jno
add
adc
loop
stc
push
add
xor
or
dec
shl
push
cli
int3
and
push
jmp
xor
pop
add
leave
popf
mov
add
test
mov
sub
cmp
jne
cmps
mov
sub
pop
sub
jg
push
test
enter
push
or
pop
sbb
(bad)
rcr
inc
push
or
test
mov
push
push
push
mov
dec
lea
push
test
int3
test
aaa
into
fwait
mov
cmps
jnp
xor
inc
push
jp
jmp
scas
mov
retf
lea
enter
mov
xor
loopne
jmp
ror
mov
sbb
jae
mov
jne
movlps
add
push
xor
sub
pop
mov
jb
test
lea
pop
pop
movzx
push
add
pop
mov
sbb
rcl
dec
add
push
leave
mov
pop
clc
shr
xlat
fst
inc
test
rcr
sbb
sub
dec
loope
pop
in
les
in
add
xor
cli
pop
mov
out
loope
push
sbb
and
push
xor
shr
push
push
push
fisttp
mov
push
or
push
imul
push
xchg
adc
pop
leave
push
in
and
fcom
adc
add
mov
pop
dec
mov
adc
sbb
or
push
imul
dec
icebp
aas
mov
jge
lods
push
add
pop
xor
cmp
mov
or
xchg
inc
sub
outs
(bad)
push
push
push
jge
rcl
call
xchg
data16
(bad)
in
inc
and
dec
call
xor
in
je
add
fild
push
call
push
ror
lahf
inc
dec
lea
call
mov
add
add
xor
pop
shl
mov
or
shl
adc
push
push
inc
jno
out
test
jge
loope
sbb
sub
je
std
popf
fcom
pop
sub
cmp
jmp
pop
push
xor
push
xor
xchg
mov
dec
fst
call
mov
jmp
lea
dec
test
push
loope
jmp
pop
imul
pop
fcomp
aaa
inc
mov
cmp
sub
or
add
pmulhw
test
push
mov
sub
rcr
dec
out
xchg
xor
lea
out
not
ror
or
inc
mov
add
in
inc
test
add
popa
or
add
in
pushf
xor
sub
xchg
arpl
jmp
loopne
(bad)
pop
add
push
push
push
or
dec
mov
(bad)
in
inc
(bad)
jg
add
inc
(bad)
call
xor
ds
int3
xchg
in
lock
mov
lea
cmp
push
call
lock
add
push
data16
or
fsub
daa
adc
sub
fisttp
movs
jne
lea
adc
mov
or
dec
dec
jl
mov
(bad)
(bad)
pushf
test
push
hlt
out
dec
mov
mov
fwait
or
lock
add
push
shl
inc
add
es
jge
lahf
nop
repnz
push
nop
pop
int
retf
je
adc
sub
sub
sti
adc
lock
adc
into
repz
dec
sar
adc
jmp
mov
and
dec
inc
push
nop
mov
or
jns
pop
lea
call
gs
adc
xchg
mov
sbb
push
call
push
call
std
inc
shr
icebp
mov
aam
inc
push
pop
or
into
ret
cwde
sub
je
cli
push
jp
out
push
push
adc
push
or
push
sub
inc
out
pop
adc
push
push
inc
dec
lea
jl
sub
pop
mov
dec
ret
or
sbb
xlat
cld
pop
cli
dec
adc
or
addr16
pop
push
adc
dec
inc
cmp
push
(bad)
leave
dec
jecxz
mov
lds
mov
leave
test
sbb
imul
inc
loop
mov
in
pop
movs
loopne
std
ret
xor
cld
mov
jle
arpl
jmp
pop
rcr
fsubr
add
add
push
push
call
mov
or
and
cmps
mov
inc
in
out
aas
sar
lds
and
js
pop
daa
sti
leave
rcr
jg
cmp
inc
add
in
mov
leave
xor
jns
pop
cli
hlt
test
mov
aas
fiadd
retf
lea
sbb
and
mov
pusha
lea
sbb
add
add
fisttp
ds
repz
fsubr
and
inc
out
test
clc
and
fsub
ins
xchg
sbb
xchg
inc
test
mov
adc
retf
pusha
xchg
sub
fsubr
outs
fimul
mov
push
cwde
mov
push
add
cs
mov
cmp
add
pop
mov
dec
adc
pop
call
add
push
in
call
stos
shl
sub
xor
(bad)
sahf
or
hlt
mov
cmp
mov
push
(bad)
push
sub
dec
mov
lea
daa
push
je
or
jge
jg
mov
(bad)
jmp
pop
push
dec
imul
push
jmp
or
jge
sbb
sub
cli
xchg
mov
stos
pop
inc
pop
adc
push
xor
inc
(bad)
mov
push
cmps
or
ret
push
fimul
icebp
xor
cmp
mov
arpl
or
sbb
ss
pusha
neg
xchg
push
xchg
pop
fs
dec
and
cmp
sbb
call
aaa
push
or
(bad)
dec
js
cwde
xchg
pop
adc
fsub
xor
add
dec
(bad)
jmp
cmc
out
das
add
aaa
rol
not
(bad)
cmps
pop
push
dec
add
cmp
dec
retf
push
add
push
push
push
sahf
fiadd
in
(bad)
je
aaa
dec
jecxz
jmp
dec
xchg
cwde
js
inc
mov
push
out
add
call
stos
xor
sub
mov
pop
cvtps2pd
cmp
add
xor
inc
mov
sub
push
push
or
dec
aas
jp
pusha
jp
out
dec
push
mov
dec
in
retf
dec
js
jae
daa
(bad)
push
lock
push
inc
sbb
pop
pop
mov
jmp
mov
pop
pop
cmps
jnp
pop
xchg
pusha
push
sbb
leave
mov
jb
adc
mov
out
pusha
imul
add
push
jge
bound
ja
js
or
mov
mov
int
or
push
dec
sbb
sub
cwde
fwait
mov
push
fs
or
mov
push
add
test
ficom
int
and
je
test
and
cmps
movs
sbb
mov
dec
inc
nop
psubusw
loopne
add
dec
push
pop
and
dec
imul
add
dec
mov
or
or
and
jnp
test
push
push
dec
dec
or
inc
jmp
enter
frstor
nop
pop
jp
add
fimul
mov
mov
cmp
xlat
shl
das
loope
in
inc
dec
add
cmp
jmp
loopne
inc
aam
call
sbb
mov
inc
jmp
ss
pusha
mov
add
mov
mov
xchg
out
inc
mov
inc
dec
pop
or
sbb
clc
mov
push
add
cmp
repnz
cdq
bound
sub
mov
sub
push
cs
ret
movs
std
cld
xor
pop
mov
xor
push
add
xchg
call
xor
fmul
mov
dec
xor
ror
cwde
mov
add
out
jp
xor
push
fmul
xor
aaa
add
mov
jge
pop
mov
sbb
sub
or
cmp
push
jmp
add
mov
jmp
sbb
mov
std
mov
pop
add
lock
imul
adc
add
adc
shl
sub
pop
sti
sbb
adc
jns
popa
lods
(bad)
je
cmp
or
pop
push
loopne
loopne
movs
jne
pop
sub
in
mov
out
pop
retf
dec
pop
dec
lahf
sub
ret
sti
call
xchg
repnz
sub
mov
repz
dec
xchg
or
push
ret
mov
push
das
daa
pop
lahf
call
rol
adc
pop
cmp
mov
mov
outs
into
fisub
push
lock
dec
fwait
mov
inc
cli
inc
(bad)
aas
mov
scas
nop
mov
push
or
fist
or
inc
push
test
push
xor
adc
fidivr
enter
pop
or
pop
xor
adc
and
push
add
mov
shl
xor
push
mov
mov
jns
sub
rcl
dec
sbb
cmp
dec
mov
addr16
push
cmps
push
int
adc
call
mov
inc
inc
mov
nop
jbe
jp
mov
add
test
inc
xor
es
xor
aam
sub
pop
jl
adc
push
jp
mov
sbb
adc
fisttp
jecxz
call
mov
lea
mov
(bad)
stc
adc
sbb
pop
xor
sbb
sbb
cmps
dec
jmp
ss
lock
add
sbb
xchg
cmps
or
into
aad
xlat
sub
push
mov
xchg
ds
or
cmp
push
popa
(bad)
ins
and
js
std
loope
rcr
mov
loop
pop
xor
fadd
jb
scas
add
out
mov
inc
out
add
adc
bound
ins
push
shr
mov
cmp
push
loop
add
lea
add
inc
push
out
out
call
jb
lds
cwde
mov
in
in
sbb
or
push
inc
mov
iret
adc
pusha
mov
ret
mov
stc
in
daa
mov
dec
je
out
and
adc
push
dec
lea
and
outs
cs
cmp
and
push
push
lea
sub
stc
pushf
inc
dec
les
jmp
mov
ja
sub
push
call
xor
es
inc
sbb
movs
dec
mov
dec
pusha
lea
(bad)
push
jl
call
pop
push
(bad)
cmps
cmp
xor
mov
push
push
cmp
out
cdq
inc
mov
xor
repz
stos
shl
adc
test
add
cmp
mov
inc
adc
pop
js
aaa
inc
jl
jge
sbb
out
dec
mov
xor
push
push
lea
dec
pop
lods
sbb
cmps
test
cmp
and
and
test
mov
dec
test
loopne
ret
push
sbb
push
push
inc
(bad)
mov
mov
inc
iret
xor
or
add
out
ror
push
ret
pop
jmp
push
(bad)
sub
add
pop
push
mov
xor
pop
repnz
out
les
pop
inc
jmp
jbe
sub
push
in
dec
inc
stos
add
push
fadd
cli
add
jl
int3
add
call
mov
outs
mov
cs
imul
lea
cmp
xor
push
pusha
adc
int3
mov
dec
sti
out
jmp
sbb
sbb
mov
aad
dec
mov
inc
rol
lahf
mov
cmps
dec
call
push
(bad)
aad
imul
shl
pop
dec
repnz
dec
mov
clc
pop
fimul
or
cmp
test
gs
cmp
xor
imul
and
arpl
aad
out
adc
daa
cmp
and
in
lea
jg
mov
outs
and
jmp
cmp
loop
mov
shl
(bad)
xor
sbb
inc
fst
xchg
cmps
popa
dec
loop
leave
popf
push
dec
and
sub
xor
outs
call
push
in
dec
or
push
leave
pop
ret
or
test
or
xor
mov
in
js
push
cmp
pop
movs
jecxz
(bad)
cli
xchg
sub
call
xor
mov
cld
mov
jae
inc
jl
mov
cmps
cli
xchg
enter
adc
inc
dec
fdiv
das
push
ret
retf
popa
rcr
and
add
pop
lds
mov
mov
pop
add
push
xor
inc
sub
jno
push
cdq
int
add
ins
or
mov
xor
call
pop
mov
and
loope
sbb
jno
mov
jg
cmps
push
jns
xlat
cmc
loop
in
aas
lea
and
int
fild
push
aaa
lods
inc
or
sar
add
xor
dec
lock
ret
dec
in
icebp
cmp
jno
pop
cmp
mov
inc
retf
in
aad
dec
xor
sub
aam
jmp
add
dec
imul
lods
xchg
adc
adc
(bad)
and
xchg
add
mov
push
sub
jp
int
bound
test
pop
pop
rol
add
mov
mov
fidiv
cmp
pop
push
push
arpl
test
lea
mov
or
rol
stc
sub
repnz
popf
nop
cmp
xor
(bad)
pusha
inc
or
enter
pop
iret
dec
sub
std
and
inc
sbb
xchg
fs
mov
or
sub
fiadd
push
rcr
and
dec
jp
test
and
shr
mov
ficomp
xrstors
shl
mov
or
ret
mov
dec
clc
xor
inc
or
add
pop
push
inc
out
js
cmp
je
adc
and
ret
xlat
call
fucomp
jecxz
mov
js
add
mov
push
xchg
and
push
jg
sti
pop
cmp
xchg
or
shl
gs
and
in
icebp
add
mov
sar
push
mov
movsx
push
xchg
or
pop
adc
adc
push
inc
push
fdivr
adc
loop
cmp
or
neg
pop
add
(bad)
out
xchg
inc
or
movs
stc
sti
ret
pop
sub
or
mov
or
cs
cmp
lahf
in
jmp
mov
sub
xor
iret
enter
sub
jl
ror
jmp
mov
add
xor
dec
add
sub
ror
ffreep
sub
sbb
loop
adc
xor
pop
push
clc
cli
cs
mov
mov
push
push
nop
cmps
add
push
push
or
call
rol
repnz
mov
cmps
pop
or
jnp
push
push
cmp
or
je
and
ror
lea
sub
jno
ret
test
adc
jmp
rcl
repnz
dec
std
imul
or
cmp
jecxz
fisub
jb
inc
mov
enter
inc
add
and
stc
lea
cld
or
and
add
test
inc
cmp
fimul
dec
inc
adc
pop
pushf
cmp
sar
out
or
push
les
enter
adc
push
repz
add
push
push
cld
cmp
adc
sub
and
loope
xchg
sub
adc
pop
add
push
push
repnz
or
sbb
add
push
rcl
clc
inc
and
mov
inc
mov
ins
and
mov
retf
mov
in
dec
mov
push
mov
xchg
je
retf
or
and
add
lock
fs
cmc
idiv
push
and
lea
xor
mov
(bad)
test
dec
adc
fcom
dec
mov
sbb
add
add
call
jecxz
inc
lea
sub
push
mov
push
sub
inc
lea
fldenv
xor
int3
or
into
push
pop
lock
inc
mov
and
xchg
mov
sti
xchg
scas
add
es
movs
mov
add
hlt
mov
imul
and
enter
xchg
xor
add
sub
sub
push
push
(bad)
push
fs
or
jmp
inc
pop
dec
adc
ja
pop
sbb
sub
jbe
ficom
in
outs
cwde
mov
xor
jne
dec
push
adc
(bad)
in
(bad)
pop
lods
add
inc
stos
fwait
ins
retf
pop
push
mov
xchg
in
mov
sti
and
mov
sub
ficom
add
inc
call
mov
mov
push
mov
test
mov
lds
jg
pushf
adc
jbe
hlt
call
repz
ret
pop
inc
adc
loope
dec
xor
mov
push
or
out
je
add
pop
ret
and
sbb
sub
test
enter
add
inc
xchg
or
cs
jle
cwde
add
mov
cmps
out
call
and
loopne
not
add
rcr
sar
nop
push
inc
jbe
or
pop
cdq
dec
pop
arpl
data16
pushf
add
je
mov
mov
shr
mov
ins
push
jnp
mov
out
inc
jbe
pop
loopne
popa
test
cmp
sbb
adc
repnz
popf
sbb
mov
lahf
stc
sbb
test
and
add
xor
lahf
mov
and
ficom
or
or
add
cmc
jge
inc
pop
jo
mov
stos
loopne
(bad)
inc
out
mov
retf
iret
push
inc
pop
cli
jecxz
and
or
loopne
or
jp
ret
xor
push
lea
loopne
enter
shl
and
xor
clc
aaa
pop
adc
lds
ins
dec
(bad)
movs
sar
or
add
xor
add
jmp
sub
dec
aas
sahf
(bad)
lea
mov
jne
sti
pop
xor
(bad)
jecxz
scas
js
push
cli
add
out
xor
xchg
call
lahf
or
scas
lea
jmp
push
imul
cmp
sbb
jne
or
(bad)
sbb
sar
pop
mov
fiadd
jnp
adc
push
mov
rcl
jne
adc
add
inc
xor
out
lds
or
sub
push
add
in
retf
or
out
and
jmp
add
push
sub
fistp
xchg
jg
xor
dec
xchg
jae
inc
xor
push
jmp
aas
hlt
arpl
mov
push
xchg
aaa
jle
rol
dec
sub
lea
sbb
je
cmp
or
push
lock
add
sbb
add
xor
mov
call
pop
ror
push
mov
mov
and
ret
(bad)
xchg
adc
cmps
inc
shl
inc
fisttp
pop
push
and
push
add
jb
fwait
mov
cmp
in
lds
inc
enter
sbb
jbe
or
jg
sub
jb
and
jg
or
sub
rcl
lea
ds
and
jo
cs
scas
movs
lods
push
loop
jg
and
aas
(bad)
cmps
clc
dec
jl
add
sub
dec
cmp
push
les
aad
jb
nop
mov
cmp
inc
mov
mov
jmp
push
push
mov
fdivr
push
and
ret
repnz
lea
add
or
mov
clc
sub
dec
sbb
pop
mov
popa
out
sbb
cdq
mov
sbb
les
add
enter
sahf
xchg
loop
ficomp
dec
push
repnz
jle
xchg
loope
lock
mov
xchg
mov
add
aam
into
xlat
sub
loopne
push
mov
adc
push
mov
xor
ins
fwait
jmp
cmps
ds
fucom
add
out
scas
retf
mov
dec
lahf
in
pop
les
pop
in
bound
push
(bad)
out
shr
sbb
push
call
sub
shr
ror
rcr
cmp
pop
pusha
or
aam
adc
out
add
jmp
repnz
clc
inc
or
ror
je
pop
mov
jno
pop
push
call
add
and
mov
pop
aad
jo
push
ds
fs
repz
inc
pop
mov
jmp
inc
xchg
ret
jle
andps
sub
lock
mov
mov
stc
je
mov
dec
xchg
sbb
push
push
fmul
push
add
xchg
ror
(bad)
pop
cdq
in
sbb
push
call
push
dec
mov
fwait
hlt
cmp
dec
outs
mov
call
lods
mov
aad
rcr
add
xor
push
xor
add
dec
inc
mov
push
pop
xor
dec
push
(bad)
adc
ins
xor
mov
mov
add
stos
or
dec
(bad)
pop
adc
xor
mov
mov
add
not
xchg
add
lock
clc
mov
(bad)
in
ret
(bad)
lea
pop
shr
sbb
ds
outs
in
push
test
ret
xor
add
scas
inc
cmp
jge
add
push
sub
inc
xor
ins
cwde
fwait
dec
iret
pop
pop
mov
add
push
push
mov
out
adc
sti
cmp
pop
add
sti
dec
add
mov
pop
enter
(bad)
push
cmp
shr
gs
popf
test
popf
sar
out
out
or
xor
xor
mov
in
scas
inc
movs
add
xchg
mov
ret
lahf
lock
aaa
les
cwde
pop
or
or
popa
and
nop
add
jmp
lea
fsubr
push
jmp
inc
sub
in
inc
stos
mov
outs
fdivr
mov
add
lea
xor
outs
xor
addr16
and
fld
jmp
js
in
jb
xor
das
sub
leave
mov
daa
adc
ror
je
dec
push
mov
leave
pop
popa
pop
movs
je
mov
or
mov
adc
jecxz
push
xor
test
pop
loop
jmp
inc
stos
mov
in
jl
js
not
add
hlt
cmps
pushf
push
and
pop
or
mov
mov
bound
lock
or
daa
call
sub
pop
loopne
add
test
test
dec
clc
into
pop
pop
jmp
sub
loopne
cmp
mov
in
in
push
push
xor
sub
inc
lock
popa
add
add
sub
pop
not
pop
pop
cmc
inc
xchg
addr16
(bad)
(bad)
pop
ss
xor
enter
fwait
dec
add
xor
cs
test
mov
shr
inc
mov
leave
(bad)
add
push
(bad)
dec
and
dec
xor
fld
(bad)
pop
push
push
test
lods
and
outs
xchg
mov
sub
push
retf
enter
push
das
cdq
xlat
imul
pushf
les
jnp
icebp
dec
rol
inc
xor
loope
cmp
adc
add
hlt
out
dec
xchg
sub
in
xchg
inc
mov
jg
clc
mov
adc
ds
dec
outs
enter
dec
sahf
test
test
jne
inc
into
dec
add
movs
(bad)
xchg
lock
mov
add
in
aad
jg
xor
push
pusha
push
inc
sahf
and
mov
sub
adc
test
dec
cld
movs
scas
hlt
stos
into
jmp
and
push
nop
mov
cmc
jmp
push
push
test
fmul
cmc
push
cwde
push
aaa
int3
fs
mov
out
adc
mov
enter
or
repnz
lock
dec
mov
pop
mov
mov
scas
pop
fst
popa
add
add
or
pop
mov
push
push
sub
add
xor
clc
loop
gs
ss
cmps
scas
xchg
mov
adc
dec
cli
add
add
shr
dec
add
clc
mov
das
mov
or
jne
add
pop
call
inc
cmp
dec
aam
pop
out
sub
pop
xchg
push
xor
jb
outs
cli
ins
js
jns
push
stc
sbb
shr
pop
push
push
ja
and
mov
add
mov
push
xchg
mov
daa
mov
loopne
int3
pop
(bad)
fcos
add
pop
das
mov
xor
jae
movs
pop
sub
pop
loopne
(bad)
jns
push
xor
call
dec
pop
dec
and
sub
lea
call
cmp
shl
add
sub
int
lods
inc
xchg
and
cmp
ret
mov
sar
jns
ror
jge
and
add
adc
sbb
pop
pop
leave
xchg
add
xor
das
pop
fxtract
lock
add
or
pop
sub
add
pop
mov
rcr
lea
aam
push
push
push
xchg
sbb
mov
push
xchg
jmp
jl
sbb
or
lea
movs
dec
jae
sti
or
mov
(bad)
aaa
inc
clc
inc
or
test
mov
inc
jmp
inc
lahf
idiv
or
mov
pusha
jmp
sbb
or
mov
mov
icebp
push
leave
scas
jle
mov
jmp
(bad)
in
push
mov
out
inc
or
inc
adc
enter
ret
gs
cmp
pop
icebp
and
add
sti
adc
jl
adc
dec
push
sub
add
mov
mov
in
cli
hlt
jge
add
fisttp
test
mov
push
push
push
fucom
in
lea
mov
dec
lods
cmp
enter
jmp
jne
leave
sar
pop
sub
and
pop
gs
ret
xchg
das
or
mov
test
movs
call
push
clc
les
inc
pop
push
adc
pop
push
pop
dec
dec
mov
mov
cdq
xor
jg
sub
pop
mov
push
fwait
test
add
push
daa
cdq
mov
and
push
push
cld
jl
mov
mov
(bad)
(bad)
pop
rcl
mov
arpl
xor
push
mov
push
lods
lea
std
xor
inc
call
mov
inc
(bad)
in
add
add
or
aad
call
adc
pop
fisttp
xchg
cvttps2pi
add
mov
sbb
xchg
cmps
nop
pop
xor
add
dec
(bad)
mov
push
adc
pop
ret
shr
pop
mov
push
dec
or
dec
push
push
add
sbb
shr
lds
mov
nop
inc
lahf
fcom
mov
mov
push
add
or
mov
add
add
push
push
rcl
aam
sar
fnstenv
lsl
fild
jecxz
mov
pushf
jmp
push
pusha
mov
xchg
cmp
call
ror
das
inc
retf
and
pop
add
lods
xchg
xor
jae
add
and
mov
jmp
mov
rol
mov
add
push
movs
add
bound
psrlw
push
rcl
add
inc
xchg
sub
or
mov
xchg
mov
add
or
sbb
mov
inc
and
push
jb
lock
call
leave
inc
inc
fwait
outs
sub
push
js
icebp
data16
or
push
mov
jb
stos
cmc
add
movs
mov
push
dec
movs
push
repnz
inc
pop
jp
push
inc
cmp
or
pop
mov
push
push
push
xchg
mov
scas
and
retf
jle
sub
or
dec
xlat
adc
out
movs
pop
cdq
push
out
jp
in
shl
mov
sbb
fisttp
adc
out
sub
in
xor
ror
fst
dec
loope
jb
(bad)
or
lods
in
sbb
and
push
xor
aad
cli
fst
dec
and
stc
inc
add
cmp
ds
das
push
stc
push
push
dec
push
mov
idiv
je
lods
jnp
pusha
adc
imul
cld
pop
lahf
xor
mov
nop
hlt
clc
pop
sub
mov
jle
retf
mov
int3
add
mov
icebp
jno
mov
push
clc
repnz
and
retf
push
push
adc
pusha
(bad)
out
daa
lea
js
or
mov
rcl
xchg
aad
push
int3
cmp
cmpps
ss
stos
in
gs
or
dec
lahf
pop
xor
stos
pop
pop
mov
push
push
fwait
movs
pop
mov
repz
push
jne
dec
sub
push
dec
inc
push
add
lock
mov
dec
in
and
or
push
push
hlt
push
jp
add
lea
mov
jmp
aaa
loope
in
cmp
loop
xchg
or
push
pop
xor
push
push
inc
adc
add
mov
adc
xchg
adc
(bad)
mov
enter
add
sbb
call
sub
add
adc
mov
dec
lea
loope
pop
inc
scas
push
xor
cmps
in
and
push
push
neg
cld
push
xchg
ficom
lea
add
fst
sar
add
test
sub
mov
cld
outs
loop
cmp
gs
iret
dec
mov
in
push
inc
mov
xlat
and
ficomp
jae
sbb
xor
pop
outs
sub
and
add
adc
dec
mov
jmp
enter
adc
cli
ret
or
mov
jmp
rol
push
push
mov
adc
out
ficomp
mov
push
push
call
ja
adc
xchg
call
ror
inc
mov
(bad)
pop
das
(bad)
sar
jmp
inc
jbe
and
ret
fs
movs
retf
fisubr
mov
gs
add
jge
jp
mov
imul
ins
pop
push
push
add
lea
mov
mov
fst
add
sar
mov
add
jge
inc
mov
inc
std
not
aam
adc
imul
mov
es
minps
jecxz
leave
mov
xchg
lea
or
push
push
push
lods
mov
push
cmps
fiadd
pop
push
clc
jle
pop
push
outs
mov
das
inc
mov
xor
iret
jle
dec
inc
add
aaa
mov
arpl
push
jne
adc
in
cld
les
in
das
or
cmp
enter
push
ja
je
or
or
pop
bswap
sbb
push
popf
out
adc
xchg
mov
sar
lds
int3
lock
in
mov
test
inc
test
in
add
inc
loopne
mov
(bad)
push
push
leave
dec
and
jns
scas
lods
fisubr
mov
in
xchg
dec
pop
xchg
dec
mov
outs
cwde
enter
push
jbe
(bad)
pop
push
add
push
lea
mov
pop
mov
fisttp
adc
fisttp
mov
pop
shr
inc
mov
mov
jp
cs
cld
mov
sbb
sti
dec
movs
(bad)
sbb
add
adc
addr16
in
push
aaa
and
aad
ins
lods
add
loopne
jnp
(bad)
cmp
imul
sbb
dec
pop
add
cwde
add
lds
ror
mov
add
sti
push
push
dec
pop
cmps
lea
into
lods
adc
aad
and
dec
push
sbb
movs
loopne
jmp
int3
mov
sbb
inc
sub
mov
or
stos
jg
mov
or
and
in
cld
fimul
es
sbb
stos
push
or
retf
lds
into
stos
add
adc
pusha
out
(bad)
jp
xor
call
pop
fwait
clc
jecxz
js
adc
ficom
mov
lods
fbstp
adc
pop
out
sbb
xor
(bad)
dec
in
adc
in
jecxz
or
pop
fwait
sbb
cs
out
pop
push
mov
xor
aad
xchg
jp
xchg
xor
jne
mov
dec
adc
cli
pop
test
mov
sub
jb
hlt
cld
adc
or
sub
(bad)
fimul
xor
sub
jge
int
scas
add
cmp
mov
shr
enter
sub
sar
add
pop
pop
push
dec
jmp
test
or
jne
(bad)
push
sub
and
jne
adc
ficom
xor
mov
sbb
stc
out
cwde
std
mov
inc
out
add
xor
cmp
repz
idiv
out
cmp
leave
cmp
dec
inc
aam
push
add
dec
add
ret
shl
lds
cmps
gs
inc
aam
push
jl
pop
sub
idiv
xchg
repz
aas
push
inc
or
cwde
xchg
rol
or
push
sub
add
int3
cmp
hlt
mov
and
into
xchg
push
add
(bad)
int3
mov
fs
dec
mov
push
or
cmp
push
add
lods
pcmpeqw
add
lds
xor
push
aas
aaa
cmc
ja
jns
dec
or
(bad)
out
and
or
in
add
stc
sub
dec
in
push
and
stos
xchg
mov
iret
in
sbb
dec
fcmove
(bad)
retf
jecxz
or
add
sbb
inc
dec
mov
xchg
out
adc
inc
adc
cmp
je
jle
sbb
push
dec
data16
or
(bad)
dec
sub
pop
or
movups
shl
push
sbb
sbb
js
cmp
push
fwait
(bad)
adc
(bad)
jl
jns
xchg
int
fdivr
addr16
adc
xor
xchg
or
call
iret
cwde
adc
jg
mov
xchg
shl
sar
fsubr
pop
or
push
mov
lods
int3
jns
dec
repz
add
ror
fsubr
push
cmp
cwde
lds
cmp
or
or
mov
in
adc
or
daa
push
push
or
pusha
js
iret
mov
cld
push
(bad)
sbb
not
add
cmc
push
cmc
clc
outs
sbb
cmp
aas
jns
test
xor
das
out
xchg
push
mov
enter
add
xor
inc
call
in
and
dec
retf
fsubr
pop
(bad)
into
add
popa
arpl
push
lds
add
mov
push
hlt
mov
mov
sub
pop
mov
das
xor
aas
inc
jo
aam
loop
pop
push
cld
push
scas
loop
sub
or
and
mov
jne
mov
push
jnp
push
or
ins
pop
add
inc
add
das
mov
fnstsw
xor
jne
add
adc
arpl
out
jmp
jmp
cmc
rol
xchg
into
loopne
sub
cmp
add
loope
lahf
jne
call
nop
mov
and
(bad)
jge
not
retf
ss
push
mov
and
pop
mov
les
xchg
jne
add
ja
sub
mov
add
not
add
test
scas
stc
adc
repz
jmp
inc
dec
out
push
mov
add
sbb
test
test
outs
lea
inc
add
nop
aas
cmc
mov
shl
inc
or
mov
xchg
popa
lods
add
mov
daa
test
mov
add
je
es
fist
add
inc
mov
cmp
mov
push
add
loope
das
test
cmc
add
xor
and
mov
and
retf
push
jo
mov
adc
mov
adc
(bad)
jp
push
or
pop
add
mov
movs
aaa
push
xchg
mov
ds
adc
xchg
xor
loop
sub
fisttp
ins
xor
pop
js
aam
xchg
cli
out
add
sahf
pop
cmp
hlt
jg
add
mov
add
add
and
repz
dec
pop
push
add
pop
xchg
or
or
repnz
mov
mov
not
ins
xchg
or
dec
add
pop
mov
add
mov
dec
add
pushf
in
mov
lds
cmp
mov
sub
jl
ds
xchg
add
push
imul
jecxz
jmp
add
cmp
mov
mov
stos
lds
lods
iret
das
jle
mov
jmp
test
(bad)
dec
jp
scas
iret
sub
ficomp
add
adc
and
repz
rcl
dec
ror
jle
dec
fadd
adc
(bad)
or
cmps
pop
test
repz
data16
inc
rcr
stos
dec
xor
adc
adc
adc
das
movs
mov
mov
push
jae
sbb
outs
sub
adc
aas
mov
add
push
scas
or
cmc
dec
add
stos
cmp
es
xchg
jae
fcomp
add
cmp
pop
xor
add
inc
ror
ret
pop
es
test
xor
push
sub
cmp
push
retf
shl
push
mov
mov
outs
add
mov
hlt
cli
jae
pop
loopne
jmp
mov
repz
or
std
inc
add
dec
cmp
jge
jnp
adc
jno
pushf
rol
or
shl
xchg
add
and
cwde
mov
add
loope
adc
jnp
or
sti
dec
shr
aam
sub
test
sbb
pop
fwait
cld
dec
cmovle
jge
dec
mov
add
mov
push
mov
hlt
nop
shl
cs
test
add
cmps
fidiv
test
sbb
cmp
pop
adc
jbe
je
sbb
add
aas
pop
les
test
add
push
daa
sub
and
add
mov
or
fcomp
mov
pop
xchg
inc
add
xor
xchg
js
enter
popa
xor
or
repz
or
xor
(bad)
cmp
inc
jns
fist
jne
jnp
fst
int3
mov
test
adc
xchg
ins
push
push
sbb
(bad)
mov
xchg
add
push
neg
out
(bad)
cdq
cmovnp
pop
inc
push
add
cmps
mov
out
pop
movs
int
push
inc
pusha
pop
and
dec
sbb
push
in
es
shl
push
movd
imul
not
fs
xchg
bswap
sub
stc
and
mov
movs
cwde
push
jno
leave
mov
cmp
push
sbb
hlt
dec
jae
inc
mov
add
adc
imul
arpl
ins
jg
ficom
stos
xchg
shl
add
mov
std
cmp
add
pusha
jge
add
sbb
mov
jo
lods
mov
sub
add
in
js
or
jl
callw
sub
aas
pusha
xchg
div
retf
in
sub
ins
iret
pushf
or
add
in
add
retf
jle
pop
jmp
out
add
in
inc
sub
es
push
not
scas
xor
sub
or
mov
add
data16
cmc
mov
(bad)
js
imul
pop
lock
add
(bad)
repz
popf
add
push
fisubr
jae
push
setl
sbb
add
xor
dec
(bad)
add
or
mov
loopne
mov
in
out
xor
(bad)
in
into
ret
adc
rol
add
movs
movs
lods
ret
dec
gs
mov
jge
add
add
inc
sbb
arpl
stc
pop
mov
jecxz
push
or
mov
mov
add
lods
ja
cmps
push
cs
add
mov
inc
hlt
push
out
add
clc
sbb
sbb
cli
repnz
push
out
sub
imul
dec
push
or
push
cmps
sbb
fs
ins
fmul
jo
cmp
dec
adc
xchg
mov
es
lds
retf
sar
jo
popf
test
sbb
xchg
das
mov
pop
add
cmps
mov
in
retf
fs
and
leave
test
lock
popf
jne
ja
add
mov
test
add
popf
mov
loop
cmc
add
mov
lods
sub
enter
sub
cmp
test
adc
aaa
jmp
add
push
xchg
sub
push
mov
jns
sbb
xchg
push
or
cmp
add
push
jne
sbb
mov
cld
and
adc
pushf
mov
js
mov
xor
cmps
imul
es
outs
cwde
and
or
cmc
add
je
(bad)
lock
pop
(bad)
mov
xchg
and
adc
mov
ror
dec
pushf
nop
and
inc
add
movs
aam
push
mov
pop
dec
inc
fadd
sbb
rol
cmps
mov
loope
adc
jno
push
mov
(bad)
pop
mov
out
sbb
shl
pop
add
pop
shl
mov
fcom
aaa
dec
setle
imul
and
pop
pop
xchg
jae
dec
sub
dec
repnz
icebp
adc
mov
in
push
loopne
sub
das
dec
lods
sar
add
push
rol
add
jmp
rol
or
ret
call
xor
add
cmp
loop
add
fcomp
call
outs
dec
inc
inc
mov
sahf
scas
cwde
xor
jmp
dec
imul
addr16
adc
arpl
pop
add
xor
call
adc
adc
add
fldenv
ds
pop
rcl
rcl
mov
in
mov
dec
test
xor
jge
jmp
lock
cmp
sub
push
mov
out
dec
dec
push
xor
inc
sbb
add
adc
add
adc
test
movs
retf
cwde
pop
adc
add
and
pop
lock
pop
cmp
push
jg
loopne
out
add
cmp
add
clc
mov
jle
(bad)
repnz
(bad)
pop
pop
es
retf
cmp
ins
push
adc
xchg
rcl
pop
cmc
add
mov
lock
cli
xchg
add
mov
ds
inc
or
lods
dec
jbe
mov
push
sub
in
adc
pop
data16
add
push
imul
jp
hlt
mov
xchg
add
repz
and
push
iret
leave
mov
inc
adc
cmp
sahf
add
mov
cmc
mov
aas
mov
dec
mov
dec
out
xchg
jecxz
test
add
data16
icebp
ss
test
int3
addr16
(bad)
stos
cmp
nop
jo
push
or
add
cdq
sub
add
data16
in
loope
pop
test
and
adc
rol
pop
jmp
fdivr
movs
add
pop
jle
ret
jno
dec
add
sahf
sbb
dec
add
jle
dec
jo
adc
and
loop
jecxz
jno
loopne
add
fwait
or
xchg
daa
mov
add
add
(bad)
sahf
fcom
nop
leave
nop
push
jo
add
pop
leave
jl
std
stos
jno
repz
sahf
(bad)
shl
add
mov
or
in
inc
iret
and
mov
add
add
arpl
adc
xchg
and
stos
xchg
inc
sub
loope
add
push
mov
add
add
add
test
fdiv
xor
add
dec
aaa
add
push
lods
cmp
pop
inc
jo
fidiv
and
cld
js
pop
(bad)
aad
ja
add
add
outs
ror
ins
mov
aaa
xchg
cmps
add
sbb
mov
sbb
cmovne
leave
pusha
movntq
pop
shl
cmp
push
dec
movs
inc
jl
fstp
dec
inc
pinsrw
or
call
aam
cmp
nop
cmp
ret
pop
arpl
fisttp
inc
lock
add
xchg
push
lds
pop
sub
outs
xor
or
fisubr
or
sbb
add
aam
xchg
add
pop
jo
push
push
mov
xor
mov
xchg
inc
gs
push
cmps
pop
call
or
out
xchg
push
cli
add
adc
cmp
mov
add
fidivr
cmp
enter
cmp
push
icebp
cmp
sbb
adc
hlt
(bad)
mov
fwait
or
inc
add
jg
daa
dec
push
(bad)
pop
add
scas
xor
dec
pusha
cld
and
ins
pop
call
xchg
push
addr16
mov
stos
test
gs
loopne
dec
outs
and
dec
push
(bad)
out
xchg
xchg
dec
loop
add
dec
xor
mov
push
add
cmc
fs
ret
adc
xchg
jle
(bad)
les
icebp
cmp
dec
jb
push
sbb
or
aam
shl
ret
je
add
sub
gs
push
aad
es
xchg
jle
pop
cmovne
movs
xchg
jae
fbld
add
pushf
adc
add
in
pop
jg
cmc
mov
imul
sbb
sahf
mov
sub
or
add
sbb
push
adc
inc
adc
adc
add
and
or
add
aas
add
cld
inc
leave
add
loop
je
mov
adc
add
xor
fidiv
js
and
push
in
aam
rol
mov
imul
test
xchg
xor
pop
add
mov
es
pop
loopne
mov
mov
mov
lea
in
jno
inc
call
and
add
aas
and
iret
test
add
arpl
cmc
mov
sar
fwait
pushf
outs
std
cmps
(bad)
fstp
inc
leave
stos
cmp
sbb
push
out
add
xchg
lods
jns
and
cmp
lods
push
xchg
sub
imul
or
movs
sbb
je
adc
imul
(bad)
es
add
in
mov
pop
shr
xor
add
jns
outs
xchg
repz
push
fild
cdq
inc
mov
xor
inc
icebp
pop
fnstsw
and
push
fsub
mov
stos
add
sar
ja
jmp
mov
fdivr
aaa
sar
xlat
inc
jne
mov
lds
(bad)
aad
out
sub
je
call
cmps
push
inc
out
inc
(bad)
clc
imul
push
pop
std
cs
sub
cmp
xor
push
inc
add
adc
repnz
out
mov
add
add
clc
sbb
(bad)
and
inc
add
mov
enter
xor
out
out
mov
call
sti
push
enter
push
(bad)
fild
or
jmp
inc
add
add
mov
and
mov
add
jns
(bad)
aas
jl
mov
fiadd
mov
inc
clc
cmp
call
cmps
add
sbb
retf
mov
add
xor
repnz
nop
add
out
sbb
jecxz
aam
jmp
test
arpl
pop
add
stc
cwde
add
ss
outs
inc
in
pop
sbb
call
cmp
jnp
sub
lods
and
es
std
add
arpl
jae
retf
or
add
jb
sbb
push
in
lock
scas
adc
pop
mov
fidiv
pop
mov
mov
push
shl
in
adc
xor
dec
pop
add
rcl
or
push
shr
jle
mov
cld
jp
add
sub
pop
push
ins
add
xor
int3
adc
add
out
mov
jb
std
ins
lock
sti
xor
inc
add
sbb
das
into
out
fmulp
pop
jp
cwde
sar
xchg
test
popa
sbb
xor
mov
dec
push
fwait
mov
out
mov
outs
fdiv
add
pop
or
mov
sub
inc
clc
aam
jo
fimul
into
cld
jp
add
push
sbb
or
sbb
fcom
add
xlat
push
xchg
jmp
and
shl
add
sbb
aam
xchg
jge
lods
cmp
sub
std
leave
stos
sbb
shl
fs
pop
jno
fld
mov
add
and
rcl
je
loop
pop
sahf
mov
pop
mov
cmp
mov
test
not
aas
mov
mov
mov
fsubp
and
xor
cdq
xor
sub
(bad)
xlat
ret
aaa
mov
inc
push
inc
add
xchg
add
ss
jecxz
cmp
and
fsubp
in
mov
pushf
rcl
ror
fcom
mov
in
push
sub
sub
nop
push
shl
pusha
shl
push
data16
(bad)
daa
add
push
sar
cmps
sub
in
call
push
add
mov
movs
fdivp
stc
push
pop
inc
cdq
mov
addr16
add
cwde
shr
scas
jp
cmp
jbe
mov
xchg
pushf
unpcklps
xor
jp
ds
or
sub
imul
jge
add
ficomp
sahf
aam
dec
ins
inc
add
fmul
or
add
push
retf
pop
ficomp
hlt
mov
retf
cld
xor
mov
sub
adc
outs
cmp
and
cmp
pusha
mov
push
shl
out
xchg
setb
leave
test
adc
sbb
push
ret
rcr
mov
add
cmp
into
push
sbb
pushf
lods
pusha
test
jg
pop
add
call
add
mov
pop
sbb
jno
mov
out
xor
inc
add
pop
fsub
cld
and
mov
sar
sub
ret
ror
stos
repnz
add
inc
repnz
xchg
pop
xor
xchg
jne
test
icebp
out
cli
imul
ja
mov
push
dec
add
xor
add
adc
inc
aam
add
ret
enter
aaa
loopne
popa
mov
dec
sbb
(bad)
sahf
out
mov
pusha
inc
push
adc
push
icebp
jmp
in
sbb
cmp
dec
cmp
pushf
aas
stos
add
jne
loop
stos
nop
aas
gs
or
pop
mov
add
xor
adc
sbb
add
or
lahf
pop
(bad)
mov
jno
or
inc
dec
ror
add
ins
das
pop
add
mov
mov
xchg
mov
and
jmp
out
fist
push
verr
adc
cdq
mov
add
jp
sbb
sbb
out
mov
repnz
cld
add
xor
loopne
sub
add
pop
test
enter
add
sbb
(bad)
scas
shl
cdq
int3
pop
aaa
push
jbe
jne
mov
arpl
sar
xchg
aam
into
mov
loop
xor
xchg
imul
(bad)
adc
cmp
or
jbe
movs
clc
call
push
sete
add
sbb
mov
add
push
jnp
mov
mov
clc
push
adc
or
cmp
scas
jg
add
dec
lock
add
adc
pop
fstp
and
imul
pop
jo
mov
inc
push
popa
fadd
cmp
retf
or
mov
adc
call
mov
and
sub
popf
add
rcl
test
inc
(bad)
add
and
or
pop
and
iret
(bad)
push
mov
loop
add
les
je
call
push
test
rcl
mov
lock
inc
les
xor
add
clc
ds
xlat
jns
cmp
sahf
xchg
stos
xchg
add
and
push
adc
add
lea
mov
or
push
push
sbb
add
xor
mov
ret
or
mov
icebp
push
lods
add
jns
test
in
push
movs
mov
popa
inc
mov
or
and
in
push
mov
or
adc
sbb
add
push
mov
or
push
imul
dec
ret
ret
or
inc
fimul
shl
outs
xchg
mov
jns
push
add
popf
push
mov
add
stos
pop
add
push
and
out
gs
sbb
push
xor
add
or
fcomp
retf
rsm
sbb
bound
lods
lea
pop
add
fsub
mov
mov
retf
jnp
shl
aam
adc
and
jmp
jmp
cmp
pop
cmp
loop
adc
push
add
in
push
rcr
add
fwait
mov
pop
xchg
ficom
mov
test
cli
in
jno
add
je
pushf
add
cmp
pusha
lds
xchg
sbb
push
push
xchg
add
push
adc
xchg
add
pop
(bad)
shr
stos
test
rcl
arpl
dec
sbb
movs
xlat
std
mov
mov
lea
inc
xchg
push
add
and
mov
sbb
popa
dec
fs
add
dec
jbe
mov
test
add
push
les
mov
ret
cwde
mov
adc
retf
cmp
fs
mov
add
jmp
add
push
cmp
xchg
add
add
(bad)
add
and
adc
add
push
or
inc
clc
mov
pop
add
sub
mov
rol
clc
sub
mov
push
add
sbb
mov
sub
mov
xor
xchg
xor
rol
sbb
jnp
adc
pop
add
popa
sub
add
into
clc
adc
xchg
push
mov
hlt
mov
jns
add
(bad)
icebp
sbb
jecxz
add
repnz
sbb
jo
loop
mov
xchg
lods
cmps
cmp
call
push
pop
or
clc
or
in
adc
out
loop
ss
(bad)
pop
add
aam
fwait
pushf
cmp
clc
fdiv
or
popf
fiadd
xchg
add
sub
aaa
add
sar
or
adc
imul
mov
jns
mov
dec
add
cld
in
adc
inc
mov
icebp
push
add
(bad)
ins
div
cmp
loopne
add
and
lock
frstor
or
cmp
ins
js
push
xlat
ror
loopne
pop
hlt
adc
pop
push
add
adc
fstp
jmp
xlat
popf
inc
dec
in
mov
add
outs
shl
mov
mov
jmp
push
add
xlat
jb
xor
mov
ror
and
sbb
ror
inc
cmc
xor
retf
xor
loopne
jae
add
imul
sbb
outs
cmp
mov
cdq
imul
inc
aaa
cmp
js
jne
pop
mov
cmp
jmp
mov
inc
cmp
and
pop
daa
loope
and
mov
in
sub
into
leave
icebp
out
ret
cli
xor
mov
jb
aas
push
jno
mov
rol
pop
imul
adc
mov
(bad)
adc
add
repnz
shl
pushf
(bad)
push
imul
pop
sbb
add
and
pop
fstp
push
pop
xor
rcl
test
sub
add
push
pop
or
cwde
rcl
call
movs
jecxz
or
add
sbb
add
mov
call
dec
loopne
sub
jp
out
sbb
imul
enter
out
loopne
cli
outs
dec
jmp
ret
cmp
jp
pop
xor
dec
dec
js
lock
push
out
jge
jmp
sub
xchg
adc
add
fsub
xchg
pop
mov
cwde
sti
retf
dec
xchg
sub
fwait
mov
pop
and
cmps
or
mov
adc
leave
add
outs
popa
push
lock
mov
dec
sti
adc
jns
test
shl
retf
xchg
add
inc
mov
add
pop
adc
inc
mov
ins
add
sub
cmp
imul
shl
fild
int3
jne
or
cmp
add
jge
out
mov
aad
xchg
(bad)
fbstp
test
jg
add
stc
clc
fwait
in
xchg
add
inc
int3
push
cmp
xchg
xor
fistp
loop
adc
xor
pop
or
stos
call
jl
add
mov
ds
xor
add
or
and
sub
lods
pop
fs
(bad)
or
xor
inc
imul
pop
rcl
mov
loopne
jecxz
push
cmp
lods
push
sbb
pop
mov
adc
sahf
(bad)
out
(bad)
sub
mov
add
mov
lahf
sub
adc
add
rcr
cli
dec
and
mov
or
cmp
es
or
push
(bad)
leave
jmp
pop
retf
cmps
mov
jae
jns
add
imul
pop
ret
pusha
inc
and
fmulp
jnp
xlat
call
mov
and
sub
add
je
push
dec
or
call
out
scas
cmp
inc
xor
ins
call
je
push
jle
fld
cmp
outs
add
mov
shr
sbb
rcl
retf
or
outs
inc
cmp
lods
add
add
sub
sub
xor
adc
shl
push
add
sahf
pushf
push
jno
enter
xchg
ret
out
add
cmp
add
vaddsubpd
jmp
xor
test
test
jno
icebp
call
add
dec
mov
into
out
pop
repnz
jge
iret
rcr
jmp
mov
(bad)
jle
add
daa
add
xor
adc
mov
mov
test
dec
dec
inc
mov
mov
cmp
add
xlat
int3
test
mov
cmp
leave
lods
xor
xchg
inc
push
add
jne
loopne
in
cmp
jge
aas
icebp
mov
data16
fcmovne
sbb
sub
movs
(bad)
stc
jecxz
nop
mov
fild
xchg
pop
dec
into
sbb
pushf
stos
mov
nop
shr
adc
lods
clc
or
test
call
mov
(bad)
int3
loope
jmp
push
mov
das
repnz
scas
jg
cmp
push
sub
add
jns
int
xor
adc
fdiv
js
add
push
mov
dec
int3
das
mov
xchg
sar
inc
sub
dec
lea
add
xchg
mov
jne
add
xlat
mov
pop
add
and
and
inc
cld
add
jmp
icebp
adc
add
data16
popa
inc
aam
cmps
sbb
mov
leave
fst
add
paddw
and
shl
lock
push
or
imul
sar
add
call
pop
jae
lahf
add
loopne
sahf
add
int3
cli
fild
mov
mul
jo
into
push
dec
push
cmps
call
pop
adc
leave
cld
ins
daa
js
rol
xor
je
cmp
jo
add
jge
pop
adc
cmp
sub
lods
bound
clc
inc
or
faddp
add
pop
jle
ja
jno
sub
push
pop
mov
pop
pop
jl
jmp
add
iret
xor
ins
sbb
mov
loopne
les
jle
ror
fstp
outs
arpl
sahf
add
mov
pop
add
mov
stc
add
sub
sbb
jle
cwde
mov
ds
in
pop
mov
es
(bad)
and
mov
jbe
pop
js
pop
fisub
push
sub
jmp
and
sbb
div
sti
sub
sub
in
test
pushf
je
add
cld
cmp
push
jo
add
push
jno
jmp
pop
aaa
cmp
neg
cmps
mov
push
dec
int
arpl
mov
push
lea
cmp
add
stc
es
xor
pop
jmp
test
mov
movs
ret
daa
adc
enter
or
xchg
jmp
add
push
in
mov
cmp
add
push
ss
pop
cld
add
out
inc
add
xchg
xchg
xor
nop
mov
cmp
popa
sub
lea
fnstsw
jle
mov
push
add
(bad)
in
sahf
add
ret
and
mov
lahf
pop
ins
jnp
aas
adc
xor
lods
aaa
add
sub
sbb
or
in
stos
push
idiv
pop
shl
sub
in
cs
add
lock
jecxz
icebp
add
popa
inc
xchg
mov
xchg
xor
dec
push
loop
inc
shl
add
mov
mov
add
popf
cmp
and
add
pop
dec
mov
xor
stos
aam
retf
sbb
cs
add
jle
in
popa
mov
(bad)
aas
test
mov
mov
adc
fmul
add
js
or
or
mov
cli
bound
daa
adc
outs
leave
pop
call
ins
imul
dec
shl
jle
jp
fdiv
jno
lock
ins
pop
cwde
shl
push
lahf
pop
push
ror
push
call
inc
lods
movs
add
push
pop
sbb
or
mov
cs
adc
mov
fwait
in
sbb
ret
ss
sahf
bound
inc
ror
ins
rcr
in
pop
lahf
dec
jnp
add
rcl
popw
xor
fidiv
mov
sub
jnp
mov
mov
pop
push
fwait
cdq
add
add
repz
push
imul
shl
sbb
scas
add
out
icebp
add
mov
repz
xlat
pop
jge
das
test
add
cwde
xchg
gs
jbe
add
out
dec
loop
inc
cmc
add
jnp
add
ds
and
clc
sbb
inc
imul
xor
pop
push
stc
ins
iret
sub
lds
mov
cdq
call
add
adc
add
(bad)
jmp
pop
or
add
push
push
loopne
add
loope
test
outs
addr16
jnp
cs
mov
neg
and
or
add
cmp
mov
dec
(bad)
inc
mov
pop
scas
pushw
retf
int3
scas
imul
pop
add
inc
mov
fs
pusha
je
push
cmp
fcomi
jne
aad
movs
mov
xchg
sub
mov
adc
inc
pop
pop
push
(bad)
xchg
jp
pusha
cli
add
add
inc
jmp
jmp
test
leave
mov
adc
cdq
lahf
jecxz
mov
pop
mov
add
sbb
xchg
add
and
movs
push
stos
inc
adc
mov
mov
in
imul
sbb
mov
adc
mov
retf
xchg
movs
dec
add
in
cs
sbb
fiadd
fbstp
pop
sbb
mov
mov
mov
and
push
push
shl
jmp
(bad)
cmp
add
retf
inc
das
nop
xor
or
xor
(bad)
test
scas
outs
add
xchg
jmp
ret
stos
dec
pop
add
xchg
xlat
test
xchg
and
mov
jns
cmp
pop
out
pop
jne
icebp
out
fnsave
(bad)
daa
dec
movs
pop
stc
mov
pop
fsub
stos
(bad)
xor
sub
ss
add
inc
xor
add
mov
cmc
add
bndstx
or
add
les
inc
in
xor
sbb
jmp
cmp
xchg
inc
cld
aad
fs
hlt
(bad)
xchg
ins
cmc
test
sbb
pusha
out
outs
pop
(bad)
xchg
add
and
fcomip
jg
add
push
in
rcl
and
cmc
sub
das
cmps
fiadd
lock
push
cmp
jb
add
scas
addr16
dec
hlt
imul
xchg
add
ja
xlat
rcl
and
data16
cmps
sar
fldcw
add
imul
lock
xchg
jo
hlt
leave
mov
sub
xchg
test
es
add
daa
ss
mov
and
shl
sub
test
add
xchg
mov
dec
push
les
cmp
jge
mov
jo
dec
es
jns
mov
mov
sbb
rol
pop
add
scas
add
dec
jb
lock
lods
or
mov
add
pop
push
add
jecxz
pop
jge
nop
and
repnz
sub
xchg
mov
ins
sti
cmp
cmp
fld
call
mov
into
ret
adc
add
not
sbb
add
push
and
jle
fstp
bound
inc
or
mov
test
add
xor
scas
data16
cs
jl
repnz
push
clc
inc
pop
xor
das
cmps
add
dec
sbb
add
rcl
test
inc
xchg
add
mov
sti
push
stos
(bad)
jbe
bound
inc
leave
mov
pop
call
out
cs
pop
mov
scas
add
dec
loope
mov
test
xlat
inc
jge
add
mov
and
cmp
cmp
xchg
(bad)
lahf
rcr
mov
fdiv
jl
jb
dec
fldenv
fmul
imul
leave
lods
loopne
inc
out
add
das
xlat
push
sub
pop
add
(bad)
cmps
popf
jmp
adc
xor
daa
push
add
retf
add
bound
pusha
ss
xor
inc
add
inc
jp
sbb
mov
push
outs
mov
and
add
inc
add
ins
xor
and
inc
mov
add
inc
mov
pop
ror
cs
mov
mov
jo
add
test
fidiv
or
and
and
adc
clc
pop
call
push
out
add
xchg
enter
mov
aas
test
adc
add
stos
stos
jno
xor
mov
jmp
out
xchg
(bad)
cwde
add
push
jbe
(bad)
or
xchg
fisttp
dec
add
cwde
push
icebp
add
pusha
or
xor
sbb
in
fimul
clc
and
in
cmp
cs
call
pop
movs
cmp
sub
fidiv
cld
(bad)
push
cmps
(bad)
ror
push
add
icebp
rol
add
sub
repnz
aaa
adc
nop
div
jl
pusha
jl
jmp
stos
pop
test
push
and
sahf
out
scas
ja
add
xor
jb
inc
mov
sbb
inc
add
not
int3
or
cmp
add
xchg
jle
mov
xor
lods
jg
pop
add
imul
scas
push
add
aaa
xlat
jo
push
add
sbb
adc
stc
jp
lea
sbb
stos
sub
enter
add
add
ficom
pop
jne
mul
cdq
sub
add
shl
call
pop
int3
jmp
mov
imul
mov
in
cmp
es
stos
add
jp
lea
mov
not
fwait
call
js
push
add
xchg
add
hlt
mov
stc
fstp
dec
lahf
push
jle
enter
xlat
loopne
mov
add
push
test
ror
imul
push
and
and
rcl
popa
loopne
test
cmp
outs
or
jnp
in
pop
sbb
test
push
mov
std
pusha
inc
fiadd
jmp
xor
mov
xor
test
ret
(bad)
clc
aaa
mov
call
(bad)
mov
xlat
add
lock
and
(bad)
cmp
lds
ins
mov
test
inc
sub
cwde
and
mov
jle
movs
out
and
mov
fiadd
xchg
add
gs
cmp
cmp
cld
add
push
test
push
mov
leave
inc
mov
push
pusha
mov
inc
dec
fs
pusha
jne
add
mov
push
loop
ja
pop
pop
repz
pop
push
pusha
dec
je
mov
mov
sub
les
add
neg
ret
fadd
add
bound
adc
ror
mov
lods
aad
jns
in
pop
dec
xchg
mov
and
pop
repnz
push
outs
add
cmp
add
jmp
mov
add
test
imul
dec
add
jmp
mov
push
mov
int3
inc
lds
call
adc
mov
cs
cmps
bnd
push
cmp
fwait
mov
cmp
add
loopne
test
lea
rcl
xchg
push
mov
aam
js
sbb
mov
fld
(bad)
out
add
mov
punpckhdq
pop
mov
jae
add
out
cmp
mov
xchg
or
sbb
rol
mov
les
sbb
nop
sub
in
outs
je
jp
add
pop
jmp
outs
jge
add
inc
cmp
jmp
jge
stos
test
or
repnz
mov
or
push
ret
dec
cmp
loopne
cwde
aam
movs
add
inc
push
sub
mov
jns
push
ds
repnz
into
scas
mov
xchg
movs
popf
mov
nop
pop
ins
sub
lock
add
pushf
xlat
ror
cmp
inc
scas
mov
repz
or
test
and
add
pop
fld
fcmovnbe
add
das
sahf
push
push
dec
cmp
imul
adc
mov
sar
frstor
add
(bad)
mov
shl
inc
rol
nop/reserved
dec
clc
lds
loope
pop
rol
add
iret
and
aaa
fsubr
retf
add
out
jnp
push
outs
sar
xchg
inc
ret
movs
das
test
cld
jl
mov
in
mov
stos
inc
aam
add
loop
pop
jnp
inc
(bad)
cmc
xor
adc
imul
jae
fadd
cli
mov
mov
mov
and
(bad)
push
aam
push
add
out
fldcw
mov
aad
push
data16
cwde
sbb
add
cdq
and
enter
add
mov
xchg
retf
(bad)
pop
xchg
imul
add
adc
add
dec
int
hlt
out
add
clc
adc
bound
mov
adc
cwde
ret
mov
dec
push
add
les
fcomp
and
out
add
push
add
add
mov
add
mov
sbb
jl
pop
push
add
(bad)
bound
lahf
jmp
out
sar
es
adc
popa
inc
out
int
inc
ins
or
(bad)
sub
cld
push
inc
je
add
pop
cmp
add
mov
sbb
pop
lock
adc
mov
xchg
add
inc
shl
push
sbb
mov
jg
adc
mov
cmp
adc
dec
js
inc
add
pop
push
lea
inc
dec
leave
xor
jmp
and
add
or
xchg
add
daa
call
aas
mov
add
test
sub
cmp
mov
inc
loopne
pop
pop
add
mov
add
repz
pusha
les
xor
pop
sbb
cmp
adc
dec
sbb
aaa
(bad)
shr
enter
add
mov
adc
and
add
(bad)
(bad)
and
dec
add
bound
add
adc
add
loope
xor
shr
add
xchg
add
adc
cld
sbb
dec
mul
mov
mov
arpl
mov
inc
xchg
jbe
(bad)
add
adc
add
mov
ins
push
test
cmp
in
push
cmp
push
in
aaa
sbb
enter
jle
inc
or
xchg
in
lds
repz
int
ror
adc
add
in
mov
jne
rol
xor
ss
cmp
fdiv
jp
jecxz
or
addr16
popf
popa
add
imul
sub
lock
mov
outs
inc
add
xchg
adc
pop
push
cmp
mov
mov
rcr
fwait
add
sbb
jmp
loop
and
dec
test
lahf
xor
jne
out
stos
jo
cdq
and
jno
jb
xor
out
(bad)
mov
pop
add
dec
mov
add
stos
das
add
mov
sbb
add
add
dec
add
out
and
nop
(bad)
out
leave
jecxz
das
mov
push
daa
add
push
cmps
dec
sti
add
cld
(bad)
ficomp
pop
aaa
ja
cmp
fwait
jo
lds
(bad)
and
mov
cmp
rol
fistp
add
xor
outs
ja
add
pop
cdq
mul
jne
mov
pop
xchg
jecxz
call
jl
add
jns
xchg
icebp
fadd
das
aaa
ret
retf
imul
mov
add
add
fstp
ds
clts
mov
out
ins
add
sbb
add
sub
aam
fcomp
pop
or
add
mov
iret
rol
ret
(bad)
jns
or
mov
(bad)
jecxz
jle
retf
ins
mov
cmp
icebp
sbb
pop
mov
cmps
pop
clc
push
inc
imul
push
repz
mov
rcl
mov
jne
fs
jg
js
add
rcl
(bad)
push
add
fild
dec
stc
repz
mov
adc
adc
sub
fnstsw
repnz
push
mov
scas
loopne
retf
xor
jno
in
stc
(bad)
xchg
dec
mov
nop
aaa
mov
int3
pop
aad
xchg
dec
xchg
lock
mov
pop
jne
xor
pop
test
xor
or
ror
imul
adc
ror
nop
jmp
pop
cdq
data16
mov
arpl
retf
xchg
enter
and
js
push
mov
icebp
pop
mov
mov
enter
mov
cmpltps
cmc
and
dec
pop
in
ss
cmp
cmps
inc
mov
xor
sub
lock
add
fstp
mov
pushf
mov
mov
dec
sbb
test
push
sub
ja
sbb
ror
cdq
inc
or
mov
or
xlat
sbb
pop
or
lock
cmp
loopne
out
add
pop
add
retf
xchg
rcl
jge
test
and
(bad)
data16
clc
popf
sbb
xor
jo
inc
mov
add
pop
int
std
push
and
inc
mov
cmps
add
js
aas
xlat
test
imul
jge
cmp
cmc
push
xor
cmp
scas
jns
iret
cmps
xor
pusha
in
jecxz
shl
loope
dec
pop
sub
sti
push
inc
in
out
adc
int3
in
mov
mov
cmp
xor
xlat
loopne
loop
add
pop
sub
add
xchg
call
sub
xor
sbb
xchg
add
xchg
cld
pop
pushf
pop
mov
add
dec
dec
jmp
ret
jb
push
push
fwait
lods
pop
jbe
and
pop
int3
mov
paddd
adc
jle
call
dec
rcr
jo
jae
inc
idiv
push
cld
popf
add
jg
outs
sub
mov
and
add
xor
pop
test
movs
cmp
mov
shr
add
push
hlt
ja
sub
cld
xor
cmp
lods
out
add
push
lahf
push
and
jbe
add
enter
or
and
add
popf
cs
test
out
push
add
adc
jmp
fs
and
ins
or
sub
mov
mov
mov
and
sbb
add
push
in
arpl
pusha
jecxz
add
push
fisttp
add
sbb
xor
cwde
push
sbb
and
fist
adc
ins
sub
into
push
test
cmc
dec
sbb
add
outs
push
loope
aaa
pop
adc
cld
cs
pop
push
add
jl
pushf
jle
test
jne
dec
lds
jge
mov
les
enter
add
and
push
jmp
mov
add
inc
mov
aad
test
sub
and
jb
mov
imul
adc
add
mov
inc
cmp
cmp
push
and
mov
mov
pushf
inc
call
sahf
xchg
add
add
scas
repnz
cli
mov
push
lea
mov
inc
xchg
aas
pop
adc
mov
scas
mov
ins
add
mov
mov
lods
ins
jmp
jno
or
inc
ror
movs
int
and
icebp
or
imul
pop
push
inc
(bad)
iret
jmp
lods
loopne
mov
jg
ret
xchg
jecxz
movs
add
dec
add
xor
pop
aas
stos
and
jecxz
adc
or
mov
aas
sbb
cmp
adc
or
mov
sub
add
xor
cld
cmp
xchg
mov
mov
jae
shr
jge
dec
mov
jo
push
scas
in
pop
test
ds
inc
add
ret
or
xor
(bad)
xchg
lods
pushf
cs
or
dec
sbb
pop
dec
push
mov
jp
or
clc
dec
push
and
mov
xchg
mov
aam
jb
js
fst
add
dec
addr16
sbb
mov
mov
mov
xchg
int3
adc
aas
add
(bad)
or
add
sub
bswap
dec
jo
add
movs
ins
xor
add
in
outs
leave
inc
aas
mov
fdiv
lock
ret
sbb
add
jmp
and
jo
stos
dec
add
xchg
jae
pop
xchg
inc
pusha
jl
iret
jge
add
mov
mov
aad
push
push
loope
xor
stos
cmp
out
add
mov
inc
add
fcomp
daa
ds
popa
jg
mov
call
jb
pop
scas
or
cwde
enter
sub
popf
add
nop
jmp
ret
pop
mov
sub
out
jo
call
and
xor
cmp
cmp
loope
lahf
cmp
cs
jo
in
mov
cmc
ds
add
(bad)
adc
(bad)
pop
sub
out
add
dec
mov
das
pushf
repnz
femms
shr
ffreep
xchg
scas
loopne
add
jge
fidivr
and
cld
push
jbe
mov
call
sar
jle
jp
sbb
in
push
push
add
add
imul
add
jle
inc
jl
jmp
dec
add
mov
sub
addr16
iret
jb
add
sbb
mov
lods
add
dec
inc
icebp
mov
faddp
ss
mov
jnp
inc
mov
xchg
dec
add
fdivr
push
adc
or
xchg
out
pop
add
aaa
push
pop
add
lods
adc
int3
or
xchg
outs
mov
pop
pushf
or
or
pusha
cmp
cli
rol
js
(bad)
je
ret
mov
and
aad
add
call
add
fcom
pop
lea
in
sbb
xchg
and
data16
fld
or
ret
aam
sbb
sub
paddusb
arpl
sbb
sbb
pop
add
repz
sar
xor
leave
sub
add
cld
enter
addr16
add
lahf
mov
and
jae
ss
int3
cmp
rcr
les
ins
fidivr
push
cwde
shl
pop
lahf
jae
mov
jmp
add
jno
adc
iret
in
push
(bad)
fs
retf
pop
data16
fild
paddb
test
xor
call
sbb
arpl
outs
ret
add
shl
hlt
bound
(bad)
rol
mov
sub
cmp
fcomp
mov
mov
in
in
cmp
dec
add
call
jae
add
jmp
dec
xlat
(bad)
scas
(bad)
jns
add
mov
test
jae
sbb
pop
inc
push
cmp
sub
les
or
cmp
jecxz
mov
cld
jb
or
jne
jns
lods
push
retf
inc
add
and
xor
enter
repnz
int3
xor
pop
jmp
pop
add
sti
mov
jmp
adc
pop
inc
inc
add
lods
and
in
shr
lock
mov
fwait
xchg
xchg
fsub
cmp
pop
in
add
dec
inc
inc
enter
inc
add
mov
stos
aas
sti
cmp
pop
icebp
add
inc
and
es
add
adc
dec
sbb
and
pushf
or
clc
jmp
add
out
mov
add
cmp
test
mov
retf
fwait
sar
aaa
add
xor
cmp
push
jo
add
mov
mov
inc
jne
pop
inc
pop
jne
add
aas
and
jb
stc
fcomp
add
loope
dec
and
add
sbb
cmp
adc
add
fcom
das
add
(bad)
scas
icebp
inc
pusha
repnz
in
xchg
inc
dec
jg
cmc
lds
add
lods
ror
inc
add
aaa
ds
mov
imul
shr
pop
sar
mov
not
push
dec
and
in
add
mov
in
sar
hlt
pusha
mov
scas
aas
je
psubd
xchg
jns
xchg
push
ficomp
aas
sbb
mov
sbb
stos
ins
outs
xor
test
push
sbb
dec
in
dec
cwde
jno
mov
pop
jp
xchg
sti
lea
clc
mov
mov
ins
cdq
mov
add
ret
sub
add
lahf
cmp
pop
mov
cdq
add
pop
adc
dec
sbb
xchg
jmp
punpckldq
lods
cdq
fiadd
call
push
add
(bad)
sub
cmp
gs
mov
jbe
dec
adc
(bad)
ss
lods
add
mov
in
shl
and
push
(bad)
add
mov
sbb
and
sbb
imul
add
call
jmp
aas
lock
mov
dec
pop
rol
sub
cmp
xlat
push
(bad)
loopne
mov
or
push
aam
sbb
inc
mov
and
adc
std
xlat
cmp
fwait
sub
mov
add
mov
cwde
(bad)
js
add
(bad)
or
int
and
and
push
scas
and
jge
sub
in
add
mov
(bad)
bnd
(bad)
cli
ret
cmps
cmp
loopne
pop
dec
push
outs
out
push
jecxz
test
ds
mov
loopne
mov
rcr
add
xor
pop
jp
pop
outs
lds
add
icebp
xor
mov
scas
add
pop
loop
push
push
xchg
add
sbb
or
test
or
sub
add
add
jo
inc
and
ins
push
das
sbb
sub
xchg
lock
mov
add
call
bnd
xor
and
push
mov
call
sahf
sub
sub
fsub
in
add
outs
fnsave
loop
mov
add
xor
jmp
jg
mov
push
mul
jle
dec
pop
adc
pop
inc
mov
pop
and
inc
cs
xchg
bound
push
add
dec
fcmovb
push
xchg
sub
push
xchg
in
jg
pop
fstp
add
jbe
and
das
push
stos
sahf
mov
lds
out
xor
add
inc
int
mov
mov
mov
push
add
sbb
retf
pop
cmp
or
and
jmp
out
mov
movs
inc
push
outs
jle
add
aam
push
bound
jmp
lods
fdivr
cmp
dec
cmp
ds
lods
aas
test
cwde
arpl
jmp
mov
sti
sub
pmaxub
add
cld
cmps
or
mov
mov
addr16
fxch
scas
(bad)
mov
adc
lahf
pop
paddd
dec
lods
and
add
jne
pop
sub
test
jbe
icebp
loopne
fdivr
loop
js
mov
dec
add
retf
into
inc
out
movs
or
(bad)
cmp
push
add
stos
push
add
mov
inc
rcr
add
pop
adc
mov
cmp
cmps
and
lock
mov
xchg
inc
loope
repz
mov
int3
xchg
paddsb
enter
rol
cmp
push
addr16
push
stos
daa
pop
rcr
sub
add
dec
(bad)
jmp
rol
rcl
repz
and
call
in
(bad)
inc
add
push
sub
mov
fiadd
out
sbb
inc
xchg
xchg
add
fistp
out
ds
mov
loop
(bad)
shl
dec
fiadd
daa
jb
stos
popa
xor
jp
fbld
inc
pop
cwde
shr
and
out
add
popf
sub
xor
pop
xor
sbb
inc
add
cmp
call
shl
nop
xor
cld
pusha
lea
xor
aas
and
pop
loopne
cmp
out
xchg
dec
cdq
mov
inc
sbb
sbb
fstp
and
loop
add
xchg
push
cmp
xor
dec
jge
cli
mov
xchg
ret
push
fbstp
sbb
and
cmc
inc
and
sub
jb
jp
int3
push
sub
and
retf
pop
inc
stc
outs
pop
pop
inc
aaa
dec
(bad)
outs
pop
and
add
cmp
adc
adc
mov
aas
or
add
push
adc
enter
packsswb
mov
xchg
adc
lds
xor
test
add
add
mov
(bad)
push
add
mov
jns
imul
scas
lahf
shl
iret
lock
lea
mov
mov
add
(bad)
xchg
jg
pop
xchg
fadd
xchg
mov
pop
push
cmp
pushf
mov
pusha
jb
push
mov
push
repnz
push
cs
jbe
add
add
add
xor
fld
or
xor
js
das
fs
jg
add
mov
mov
add
xchg
push
stos
push
cmp
add
je
cmp
shl
dec
outs
sub
shl
xlat
push
add
pop
push
dec
mov
add
sub
add
push
cmps
data16
daa
fmul
ins
push
fbstp
test
jbe
std
(bad)
call
cmps
ret
mov
hlt
nop
jle
cmps
mov
mov
and
js
adc
in
cmc
add
push
leave
dec
les
cmp
jl
shl
retf
pushf
inc
retf
pop
jmp
jae
pop
rcr
je
enter
mov
or
out
mov
ficom
dec
outs
shl
pop
add
xor
add
cmp
pop
jmp
adc
push
push
leave
add
push
sub
push
cwde
mov
sbb
(bad)
rol
mov
addr16
add
stos
lods
arpl
cwde
inc
add
sub
or
nop
adc
inc
pop
jge
or
add
out
or
call
jne
xchg
dec
cmp
cmp
push
mov
out
pop
push
popa
(bad)
cmp
stc
mov
in
add
and
iret
lds
in
(bad)
and
sar
test
add
in
pop
fst
jg
rcr
outs
gs
mov
adc
lods
aaa
jecxz
pop
sub
jnp
mov
jl
pop
jl
add
xchg
repz
jg
sbb
sub
push
(bad)
inc
daa
xor
mov
dec
add
(bad)
dec
mov
ds
jle
add
scas
test
xchg
add
pmaddwd
mov
and
lock
jns
mov
pop
leave
jp
add
pop
mov
loopne
xor
(bad)
push
sbb
jbe
pop
imul
movs
xchg
out
push
pusha
sti
jge
add
mov
adc
dec
sub
inc
(bad)
add
cmp
fdivr
cmps
push
push
or
ins
push
ror
add
and
jmp
inc
or
add
add
in
or
push
lock
sar
xchg
stc
out
imul
jp
pop
jns
in
add
jmp
push
inc
outs
es
add
(bad)
mov
mov
test
mov
sti
xor
push
adc
add
lods
push
cmp
adc
mov
jmp
cs
mov
mov
lds
aas
add
sbb
rcr
add
sbb
xchg
pop
lds
clc
arpl
pop
inc
rol
fidiv
add
mov
out
fwait
add
mov
frstor
imul
add
jmp
sbb
push
jno
mov
es
add
and
rol
fild
lahf
inc
icebp
or
sub
inc
xchg
sbb
out
mov
scas
add
xchg
jae
sahf
test
add
jl
mov
push
sub
inc
or
sub
pop
and
cli
sahf
pop
adc
inc
gs
loopne
in
pusha
push
enter
pop
add
adc
mov
es
jle
pushf
adc
fbstp
add
frstor
adc
push
mov
leave
xor
mov
and
int
push
sbb
add
push
mov
pop
loop
jl
jae
add
outs
and
add
lea
nop
imul
in
out
push
inc
add
ins
xchg
lahf
or
cmps
add
les
addr16
int3
fisttp
lods
dec
and
xchg
fcom
add
jns
mov
shr
sbb
mov
fild
aaa
test
add
mov
gs
icebp
test
xlat
out
fisub
xchg
push
addr16
push
stc
retf
lock
jne
sahf
adc
or
mov
mov
add
inc
lods
cli
sub
(bad)
out
add
sahf
call
inc
in
frstor
arpl
jns
add
mov
push
loop
inc
jnp
stos
test
int
pop
cdq
movs
test
lea
push
fadd
ins
pop
mov
popa
jge
dec
and
adc
pushf
sbb
cld
mov
hlt
mov
sti
xor
icebp
jns
dec
inc
jle
pop
loop
cmp
adc
adc
mov
adc
jle
ds
adc
push
adc
mov
sub
loope
(bad)
adc
loopne
jne
lahf
jl
cmp
mov
xchg
mov
add
push
pop
pop
imul
pop
(bad)
cmp
loop
xchg
add
sbb
mov
popf
ror
cmp
sbb
aam
xor
or
and
lea
and
push
pop
jmp
sbb
jecxz
pusha
clc
repz
add
out
rol
pusha
mov
add
shl
xor
cmp
cmp
xor
movntq
out
adc
movs
pop
rcr
mov
inc
inc
jg
ret
mov
lock
and
cmp
rol
or
in
jecxz
mov
push
cwde
sti
mov
push
pop
xchg
add
sahf
cmps
xchg
bound
push
dec
pop
cdq
xlat
and
jne
movs
add
xchg
cmps
push
sub
test
mov
dec
loop
aam
call
mov
sahf
aas
aad
(bad)
mov
adc
out
or
mov
popa
add
mov
sbb
add
cmp
enter
aam
fld
jecxz
push
mov
add
cld
retf
cmps
or
loopne
add
cmps
xchg
jnp
add
in
xchg
push
xchg
xor
add
cdq
retf
outs
pop
mov
adc
adc
mov
xor
cmp
sub
pop
add
xchg
iret
mov
add
(bad)
push
out
mov
and
out
mov
add
adc
pop
push
pop
fist
mov
ret
mov
push
cs
out
nop
and
sub
or
shr
rcr
sahf
leave
push
test
push
pop
repnz
sub
and
or
int
xor
add
inc
push
jno
sbb
cld
sti
mov
lock
push
mov
ror
mov
and
mov
lea
mov
pop
retf
ss
push
jmp
jb
mov
(bad)
daa
and
add
fstp
aam
aad
jb
mov
mov
sbb
loopne
push
adc
push
inc
and
bound
xor
xor
pop
mov
mov
neg
dec
dec
mov
fwait
clc
sbb
xor
inc
enter
add
pusha
sub
pop
cld
sbb
fstp
mov
xor
mov
add
and
xor
fild
add
mov
or
(bad)
js
add
sub
les
jne
ja
out
pop
add
loope
popa
add
in
call
push
cmp
mov
dec
ins
push
xchg
dec
cmp
push
call
push
addr16
mov
or
fs
mov
mov
adc
xchg
and
fsubp
jae
pop
or
push
sbb
xchg
mov
inc
addr16
jb
or
add
add
dec
sbb
mov
add
sub
pop
push
sbb
pop
in
mov
add
pop
ss
jle
xor
gs
inc
ficom
adc
inc
leave
xchg
fisubr
mov
outs
push
push
push
ins
in
or
mov
and
in
repnz
jno
loopne
add
fwait
lods
iret
mov
nop
jecxz
rcl
leave
add
add
jmp
pop
pop
pop
out
daa
ficom
scas
jle
jae
add
jbe
stos
add
sub
int3
(bad)
fild
inc
jb
sbb
movs
push
dec
sbb
in
lods
cmp
repz
popf
or
lock
leave
lods
inc
add
mov
js
cmp
or
rcl
inc
add
xor
push
add
mov
cs
cmp
xchg
add
jb
lods
sub
xor
sbb
jns
test
loopne
cmp
rcr
push
cmp
and
add
dec
enterw
fild
and
popa
jle
lods
push
and
pop
dec
call
lock
hlt
add
into
push
mov
mov
sub
repz
and
cwde
add
sub
in
cs
pop
sub
jns
test
(bad)
ins
sbb
jne
sbb
pushf
sti
in
push
std
push
add
test
loopne
lahf
rol
fistp
push
jmp
adc
in
cmp
fcos
setns
loop
popf
and
add
mov
xor
dec
popf
pop
mov
sbb
ror
test
inc
dec
xor
das
mov
inc
mov
add
enter
mov
rcl
aad
sub
js
repnz
(bad)
sbb
dec
arpl
ins
sub
jnp
(bad)
or
or
push
ret
mov
dec
je
jle
test
cmp
popa
cmp
les
jl
test
jmp
cmp
add
ss
mov
sar
xor
and
add
loopne
popa
inc
test
mov
lahf
adc
add
das
sbb
xor
mov
pop
into
xlat
sti
int
neg
daa
imul
popf
lods
nop
xchg
inc
fiadd
aad
loop
add
out
aas
jmp
lahf
in
add
add
xor
out
aam
and
retf
mov
outs
pop
out
jo
fiadd
stos
iret
add
add
les
push
out
mov
sbb
es
sar
xlat
or
add
pushf
fsub
in
xchg
add
in
rcl
add
push
jo
scas
adc
pop
inc
cmp
in
shl
hlt
outs
add
std
ret
push
or
mov
jmp
out
jmp
lock
sbb
mov
mov
sub
hlt
sub
and
movs
sub
repz
lock
or
sbb
repz
clc
test
add
retf
retf
xchg
or
adc
jne
fadd
jp
fstp
jae
mov
sahf
add
push
sbb
cmc
scas
jge
jecxz
add
jae
xor
pmulhw
sbb
imul
pop
out
pushf
fisub
mov
pop
ror
das
in
loopne
adc
sub
mov
cmp
adc
rol
sub
lahf
push
add
or
enter
in
mov
ficomp
fcmovnu
out
adc
retf
es
dec
fs
add
jle
sbb
ins
or
and
add
inc
cmp
cld
sbb
add
fbstp
jg
pop
(bad)
sti
inc
pusha
repnz
pusha
pop
and
pop
push
xchg
add
xor
arpl
call
sub
add
nop
pusha
add
arpl
xchg
sub
mov
xor
push
cwde
es
retf
(bad)
adc
and
fsub
pop
cmp
lea
retf
(bad)
pusha
mov
push
add
cmp
add
jnp
aad
out
jae
add
outs
repnz
sbb
or
or
mov
(bad)
shl
jecxz
nop
mov
test
(bad)
fcmovu
scas
push
push
std
and
cmp
lea
stos
sub
(bad)
and
into
dec
lods
cmp
push
neg
and
repnz
and
jb
sbb
add
xchg
(bad)
jmp
and
or
fmul
mov
icebp
pop
mov
imul
pop
das
xchg
punpcklwd
aaa
fwait
xchg
ror
cdq
pop
je
cmp
(bad)
xor
mov
dec
sub
movs
sub
dec
cwde
add
and
dec
aam
loop
test
cmps
test
aas
lods
sbb
rol
add
cli
cmp
add
sbb
aas
add
pop
mov
cmp
(bad)
dec
fst
add
or
cmps
jmp
dec
pop
dec
add
sbb
dec
out
mov
mov
mov
fdivr
mov
adc
aam
cmp
into
and
sahf
xchg
fadd
dec
repnz
add
xchg
shl
pop
mov
sti
outs
test
hlt
jecxz
jb
je
js
mov
int3
ins
jp
daa
sbb
inc
add
jmp
add
adc
push
add
clc
and
loop
jo
add
outs
aaa
stos
cmps
(bad)
inc
add
jae
idiv
arpl
or
lahf
and
add
xchg
jecxz
push
inc
add
std
in
ror
aam
mov
ins
gs
ja
sti
sbb
jmp
out
fwait
or
neg
mov
pop
add
std
pop
and
mov
repnz
lods
mov
(bad)
jmp
loopne
add
in
inc
jne
jae
add
sbb
ror
bound
jns
inc
dec
nop
mov
mov
mov
add
bound
mov
nop
xchg
lock
mov
femms
mov
or
sysexit
add
jmp
stos
jns
add
and
mov
xchg
loop
pop
fdivr
dec
retf
mov
inc
sbb
cmp
mov
xchg
call
popa
push
jmp
mov
aad
jle
lock
add
popa
gs
xlat
shld
sub
and
inc
mov
ja
mov
dec
pop
dec
bsr
add
je
test
into
dec
stos
xlat
rol
add
mov
mov
dec
or
cwde
sbb
add
inc
fadd
xor
movs
push
mov
push
test
xlat
xchg
pop
call
add
jle
sub
rol
push
sar
and
add
imul
not
pop
xor
rcr
add
scas
clc
bndldx
rcr
push
push
adc
add
jecxz
dec
xchg
imul
ret
aam
dec
inc
add
int3
pop
pop
mov
mov
mov
call
add
mov
cmp
pop
cmp
xor
push
cs
pusha
scas
jl
add
cmp
stc
adc
ss
inc
mov
xchg
push
mov
mov
ins
inc
addr16
mov
jmp
pop
div
add
push
fld1
mov
in
fistp
ffree
enter
pop
jae
pop
fs
loopne
test
xchg
inc
add
inc
mov
outs
scas
xchg
ds
push
rcl
daa
lea
in
jae
and
mov
xor
dec
xchg
imul
jp
pop
sub
sub
nop
imul
iret
pop
arpl
repz
in
jmp
mov
(bad)
adc
pop
rcl
pcmpeqw
mov
lahf
xlat
add
xchg
dec
xchg
mov
push
xchg
cmp
mov
mov
cmp
shl
pop
jbe
pusha
cmc
rol
movs
dec
outs
gs
mov
ss
loopne
cmps
cmp
mov
sub
pop
mov
adc
dec
cld
shr
jmp
inc
mov
loop
std
pop
(bad)
inc
out
add
pop
inc
inc
add
xor
ins
add
fisub
pop
fisubr
xlat
ja
add
movs
addr16
rcr
jae
inc
cmp
pusha
xor
cmps
or
and
ins
jbe
je
scas
fwait
stc
add
sub
imul
call
cmps
pop
les
jb
ins
mov
je
fucomp
fadd
sub
scas
sbb
test
xlat
mov
xchg
rcr
push
inc
inc
or
popa
inc
in
xor
dec
sti
cld
nop
jp
jbe
add
pop
xchg
jo
pop
add
mov
xchg
loopne
lods
push
popf
jmp
add
cdq
mov
pop
mul
cs
gs
add
jmp
inc
jl
dec
push
xor
cmp
shl
into
loope
inc
imul
sbb
push
inc
add
ret
cmp
jnp
ret
pusha
sbb
sar
je
mov
sbb
outs
aas
sbb
xlat
and
jp
sub
pop
mov
sar
lods
push
sub
and
sbb
cli
push
jg
xor
mov
add
and
loope
sbb
mov
in
sbb
cmps
mov
add
push
call
pop
outs
jo
cmp
jb
lock
loop
or
ds
adc
icebp
cmp
ja
or
shl
dec
movs
jmp
mov
add
xchg
es
cmp
sbb
test
lds
xlat
mov
movs
rol
aaa
ror
and
loop
test
les
xchg
add
dec
sbb
fsubrp
in
jns
add
inc
mov
add
push
repz
ja
mov
pusha
inc
mov
mov
mov
cmp
jb
jl
add
push
aas
jl
pushf
mov
add
add
pop
add
xchg
xchg
or
cmp
sub
fimul
jecxz
xor
fdiv
test
add
dec
ret
cmp
shl
int
mov
inc
shl
aad
in
xor
mov
cli
push
cwde
bound
aas
xchg
and
ins
cmps
add
fnstsw
pop
jmp
ret
xchg
add
les
popf
rol
add
cwde
push
retf
into
xchg
scas
or
bound
(bad)
cli
add
mov
pop
mov
cmp
ja
push
out
test
pop
push
add
aad
sar
bound
das
cdq
jmp
mov
cwde
mov
or
cwde
hlt
add
add
cmp
sbb
mov
es
dec
icebp
lods
and
stos
jb
push
test
mov
pop
lock
lods
mov
fisub
jp
outs
shl
in
ja
add
fiadd
add
xor
outs
int3
daa
push
add
ficomp
movs
ds
jmp
pop
add
in
in
lds
stc
sahf
xor
int3
jnp
mov
mov
stc
pop
sub
add
push
add
mov
sub
or
push
add
mov
popa
scas
mov
call
movs
jp
sar
in
fadd
(bad)
shr
in
pop
sub
idiv
add
popf
repnz
inc
stos
cwde
and
inc
pop
ret
jno
jl
lock
jmp
jne
jg
mov
add
sti
xchg
iret
pop
addr16
xor
jne
add
cwde
or
dec
and
sti
es
(bad)
out
sub
inc
fst
fcmove
out
scas
xchg
adc
add
lahf
lock
ds
fsub
mov
cmp
aas
and
jg
mov
push
add
jo
add
mov
(bad)
sub
mov
jge
pop
mov
inc
fwait
ins
add
add
dec
pop
push
lods
retf
aas
test
xchg
mov
inc
sub
mov
sub
mov
xor
loopne
dec
mov
punpcklbw
xor
movs
and
rol
in
imul
add
inc
cmp
push
mov
gs
or
dec
test
fs
add
mov
push
daa
dec
sub
add
scas
add
inc
adc
not
shl
add
shr
inc
push
jae
xchg
cmp
scas
mov
and
mov
push
jmp
cmp
cld
inc
iret
cmp
pop
add
psubw
inc
add
ds
xor
add
mov
stc
mov
push
jg
cdq
test
sub
sub
cmp
and
int3
cmp
(bad)
add
xchg
or
cs
and
sbb
push
sbb
mov
dec
mov
cmp
add
lock
(bad)
fisttp
or
dec
pop
and
dec
movntps
jmp
jmp
cmc
aam
dec
loop
add
mov
adc
ds
cmp
add
or
jmp
adc
and
mov
push
pushf
jo
mov
lock
xor
inc
lock
xchg
xchg
add
or
dec
add
sub
dec
xchg
jp
js
popf
sti
call
call
daa
jl
mov
add
sbb
lock
jle
add
cmp
fcomp
mov
xor
pop
je
xchg
loopne
cmc
out
jne
xchg
mov
sbb
and
rcl
leave
sti
jno
cli
mov
loop
add
mov
or
sbb
fsubr
xor
test
xor
outs
pop
outs
add
stos
xchg
out
cmp
jb
add
xchg
push
dec
(bad)
lods
dec
and
adc
jno
fstp
cli
jns
nop
dec
mov
jmp
inc
adc
ss
mov
add
dec
nop
inc
movs
xchg
popf
cmps
add
daa
out
loopne
mov
loop
not
das
ror
mov
cmp
xchg
outs
mov
fild
rol
jo
inc
xlat
jae
fsubr
mov
arpl
push
aad
add
fist
dec
and
mov
cdq
call
pop
popf
add
ror
repnz
jge
add
sbb
cmp
js
add
loope
mov
push
add
arpl
add
add
mov
sbb
inc
cli
rcl
add
(bad)
lock
sbb
dec
mov
add
ss
aad
mov
repnz
xor
jno
inc
dec
aam
add
xchg
add
(bad)
dec
mov
cmp
jb
jle
test
dec
mov
add
loop
mov
cld
out
fiadd
inc
mov
test
mov
add
dec
iret
or
jne
pushf
add
dec
fisttp
sbb
pop
repnz
aad
mov
push
in
mov
push
fcmovnb
mov
test
mov
ret
popa
rol
jae
cmp
xchg
sub
jp
cmc
dec
mov
mov
shl
xor
mov
das
xchg
dec
mov
or
(bad)
mov
pshufw
int
push
sbb
xchg
add
iret
mov
sub
push
enter
jnp
pop
add
xlat
sahf
push
sar
mov
mov
jle
int
fsubr
xor
add
cmp
ds
lds
je
cmp
(bad)
jmp
mov
pop
loopne
xchg
es
dec
jae
add
cmp
pop
daa
aad
xchg
add
and
dec
add
jmp
inc
sub
sub
stc
loopne
div
shl
ins
and
loop
inc
push
add
xor
xor
mov
cmp
inc
loop
add
shl
add
jl
add
jmp
inc
add
call
pop
mov
fild
stc
sbb
shl
mov
inc
div
xchg
jo
pop
jbe
xchg
inc
xchg
jg
add
jnp
mov
push
cdq
push
test
fnstenv
add
stc
shl
pop
push
add
loope
mov
xor
js
retf
sub
loop
sbb
sbb
in
push
call
aad
inc
fmul
push
add
outs
xor
xchg
cmp
push
fld
enter
shr
jp
jge
mov
mov
adc
lods
sbb
je
test
into
add
cdq
call
cmp
shl
add
cdq
mov
shr
fwait
test
xchg
jg
je
or
adc
bound
sbb
add
ret
clc
mov
int3
shr
adc
xor
popa
out
test
push
stos
push
cs
add
ficom
and
shr
xchg
dec
ret
iret
jbe
into
or
out
ins
add
sub
add
mov
sub
xor
retf
xchg
stos
mov
pusha
dec
push
add
inc
out
cmp
(bad)
xor
adc
jmp
or
in
clc
inc
es
fnsave
cmp
icebp
and
xor
outs
shl
mov
mov
jmp
(bad)
adc
test
and
xchg
adc
add
inc
jl
js
add
shl
jecxz
cmp
and
outs
fucomi
pop
mov
or
pop
inc
mov
dec
add
cwde
push
inc
cmp
jns
add
inc
lock
popa
sar
aad
je
add
pop
hlt
ins
gs
pop
pop
cmp
add
mov
inc
test
pop
js
in
dec
leave
jb
call
sub
imul
pop
add
cld
fsubp
add
cmp
into
xor
cmps
add
fbld
cmp
or
dec
cmp
cmp
fcomp
pop
call
out
sar
add
jmp
inc
sbb
outs
xor
jg
xchg
mov
dec
imul
inc
stos
add
xor
mov
cvtpi2ps
ds
js
test
adc
rcr
add
sub
add
sub
or
cmp
add
xor
ja
nop
fild
inc
jbe
loop
hlt
adc
in
xlat
and
sbb
shl
jnp
in
inc
xor
stos
mov
fistp
enter
fs
mov
jmp
add
sahf
sub
pop
mov
nop
and
mul
cli
stos
aas
test
xchg
jae
sahf
adc
xchg
repz
icebp
xchg
in
pop
add
mov
(bad)
cld
ror
mov
movs
jg
sbb
sbb
aaa
pop
and
adc
adc
jns
xor
adc
int
aaa
xor
jp
xchg
adc
repnz
xchg
es
add
xchg
or
add
(bad)
imul
inc
cmc
add
ret
sahf
and
jne
sub
arpl
lods
push
add
scas
nop
mov
add
xor
std
add
scas
sbb
xchg
cmc
adc
push
jp
or
shr
pushf
xor
repnz
and
add
test
pop
adc
push
sub
clc
pop
add
es
dec
out
nop
cmp
inc
sbb
mov
int3
(bad)
idiv
popf
mov
jmp
adc
pop
mov
inc
mov
popf
pop
shl
jne
add
jmp
add
std
ins
stos
add
fstp
sar
aas
retf
jnp
pop
mov
mov
loop
sar
test
or
arpl
mov
add
xchg
fcom
or
or
add
test
sbb
mov
add
push
int3
das
add
cmp
adc
push
ja
cwde
leave
sbb
add
or
fisub
sub
add
jno
sub
repnz
jmp
pop
shr
xchg
mov
out
xor
or
add
fdivr
les
in
inc
or
adc
cmp
cli
jl
jecxz
mov
xlat
add
or
xchg
add
push
mov
add
cmp
out
mov
dec
leave
test
movs
addr16
mov
or
inc
add
add
out
or
imul
jb
lods
cmps
lock
mov
hlt
push
and
add
inc
push
in
fist
or
add
ret
movs
mov
shl
stc
arpl
dec
add
add
ds
aaa
fnstcw
fstp
sub
xchg
int
ficom
ja
data16
test
lods
dec
add
test
pusha
iret
div
rol
popf
test
add
mov
sub
seta
inc
jle
mov
or
mov
std
push
pop
dec
cwde
arpl
movs
nop
cmp
mov
mov
xor
test
test
or
pop
pop
ss
xchg
xor
add
retf
jmp
xchg
adc
push
mov
call
xor
add
mov
mov
inc
test
add
ins
inc
xchg
fs
push
adc
adc
cmp
xchg
sbb
int3
loop
add
and
pop
mov
mov
data16
mov
rcl
adc
cs
das
cwde
sub
sbb
xor
mov
xchg
repnz
mov
push
repz
out
(bad)
add
inc
cmp
add
inc
cdq
test
jmp
ror
add
data16
stos
mov
push
arpl
and
je
pop
out
push
hlt
sbb
mov
int
cmp
add
test
push
movs
fwait
rcl
repz
mov
adc
mov
loop
int3
mov
add
clc
inc
js
enterw
dec
movs
mov
mov
sub
enter
pop
jle
pop
jbe
iret
clc
add
xor
call
inc
dec
jb
add
push
xlat
mov
loop
or
xor
cmps
sub
pop
repz
lds
cli
(bad)
dec
xchg
jno
xchg
add
inc
ficom
add
and
je
add
push
mov
jno
test
push
mov
mov
add
sub
jp
sbb
test
daa
pop
or
adc
leave
lods
add
call
sbb
mov
push
test
in
pop
add
aaa
add
fsubr
pop
repz
mov
cmp
inc
xchg
xchg
mov
out
cmp
xchg
or
mov
adc
dec
fild
cmp
push
sub
and
bound
jg
mov
dec
retf
jns
cld
cdq
dec
mov
xchg
loop
mov
xchg
or
push
and
call
test
out
imul
jle
repz
pop
(bad)
mov
fisttp
cmp
and
aam
popa
or
and
fcmovb
jge
sbb
nop
das
jle
xlat
xchg
retf
adc
jb
mov
add
sub
add
pop
xor
cmp
add
addr16
cmp
ds
add
sbb
xor
dec
jmp
pop
jne
fwait
add
adc
push
pop
add
push
sub
jge
rcl
sbb
xor
add
mov
add
in
pop
repz
add
jecxz
lock
out
add
mov
nop
add
adc
cli
mov
mul
push
mov
std
repz
mov
pop
fucomip
push
or
or
add
test
es
pop
loope
rol
mov
int
xchg
pop
or
arpl
lods
xor
add
mov
sub
outs
jb
pop
pop
pmullw
pop
jle
out
sti
inc
cdq
add
ror
jecxz
dec
cwde
ss
jnp
dec
mov
test
rcr
xchg
jo
rol
mov
mov
pop
dec
data16
add
xor
push
mov
and
jne
mov
cmps
mov
(bad)
mov
not
inc
call
xchg
stos
ins
push
pop
arpl
test
mov
add
mov
cs
mov
mov
stos
loop
je
add
push
xchg
aam
cmp
adc
add
lods
and
dec
in
pop
aad
les
pop
sub
add
div
ja
fiadd
push
sbb
std
sub
and
sbb
cmps
in
add
lds
add
dec
push
sbb
sbb
jb
ja
add
ins
aad
int3
mov
xor
stos
mov
add
aas
sti
dec
adc
add
sbb
pop
pop
lock
xchg
sar
fnstsw
mov
cmp
cmp
xchg
xchg
push
cmp
mov
into
int
call
sub
shl
adc
sahf
add
imul
add
inc
or
add
sbb
imul
pop
xor
scas
push
inc
add
sbb
clc
test
pop
pop
pop
test
mov
adc
test
push
daa
cmp
fiadd
xsaveopt
pop
out
std
test
push
push
test
xor
add
into
retf
fdivr
add
fnstenv
dec
inc
in
add
dec
push
push
adc
add
pop
mov
add
aaa
mov
cmp
add
retf
inc
sub
add
pushf
sbb
xchg
push
das
add
cmp
cmps
int
cld
rcl
inc
out
jle
rol
outs
add
cs
xchg
add
(bad)
cmc
lahf
idiv
sub
add
or
xchg
jb
js
lahf
add
jbe
jmp
jae
add
and
in
shl
dec
stos
icebp
sub
xchg
add
stc
pop
jecxz
jge
loope
int
pop
cvtdq2ps
pop
movs
pop
push
rcr
js
pop
push
popf
popa
push
pop
inc
aad
cmc
nop
pusha
in
adc
scas
mov
inc
xchg
(bad)
mov
pop
add
fs
mov
cmp
add
pushf
int3
cmp
add
shr
add
sti
mov
mov
add
mov
cdq
sub
aaa
dec
cmps
add
dec
jne
mov
mov
adc
out
lods
xor
ret
ins
mov
dec
out
add
cmp
(bad)
in
push
cmps
movs
loope
leave
push
xchg
add
ins
push
pop
inc
cwde
mov
add
jmp
unpckhps
out
mov
cmp
imul
aaa
xor
xchg
call
sub
add
movs
outs
push
add
sbb
rol
ss
mov
and
push
js
add
add
std
into
ror
or
xor
adc
js
sti
adc
push
adc
add
dec
mov
jmp
or
jp
mov
and
or
loope
push
test
xchg
lea
dec
push
jno
push
loopne
push
xchg
aaa
(bad)
pop
add
popa
outs
lds
add
out
cmp
sbb
xchg
xor
pop
xlat
jnp
mov
mov
add
add
push
call
push
test
add
sub
std
add
(bad)
call
lea
sbb
inc
out
mov
enter
sti
rol
loope
ins
mov
cld
int3
add
je
(bad)
mov
fisub
leave
or
push
adc
add
mov
test
cmp
dec
imul
fwait
aad
cmps
sub
mov
int
imul
fcomp
push
add
pop
cmps
sti
lahf
xor
add
cmc
mov
sbb
mov
push
add
xchg
cwde
pop
test
mov
or
add
into
jmp
es
ja
test
and
jno
test
push
cmp
or
add
push
shl
dec
shl
lods
jp
mov
push
cmp
shl
inc
mov
jmp
add
sbb
popa
stos
add
push
ret
out
das
inc
xor
add
movs
ins
mov
dec
add
mov
add
movs
cli
add
jle
jl
repz
addr16
bound
adc
rol
xlat
add
dec
les
push
jg
pop
mov
or
mov
sbb
(bad)
mov
add
popa
cmp
and
jo
add
mov
xor
cmp
sub
push
ins
xchg
fndisi(8087
cmp
icebp
lods
(bad)
fcomp
pop
pushf
add
jbe
je
cmp
dec
adc
jl
inc
loop
cmp
jae
(bad)
dec
lods
aaa
mov
stc
lock
inc
cmps
cli
inc
sub
frstor
add
jmp
pop
cmp
pop
jg
lahf
hlt
cmp
sahf
sub
cld
mov
test
stc
mov
popa
and
add
ror
bound
jge
mul
cmp
das
mov
push
sahf
pop
fmul
loop
add
and
mov
in
fwait
adc
dec
fs
jg
add
jbe
add
pop
jo
adc
in
cmp
test
sete
pop
pusha
jmp
clc
lock
(bad)
add
in
push
popf
mov
adc
mov
adc
addr16
cli
add
int3
and
fstp
fidivr
out
pop
pop
popf
sbb
loope
lods
cmc
loope
in
hlt
add
cs
dec
scas
test
and
add
test
sbb
mov
ds
sbb
ja
cmp
stos
popf
mov
add
dec
repnz
lods
(bad)
nop
in
clc
jmp
test
aaa
and
inc
es
jbe
dec
fnstsw
or
sti
stos
pushf
cmps
pop
push
pop
scas
popa
mov
add
jae
loope
fsub
adc
ret
push
and
push
setp
add
jl
cmp
add
into
call
dec
xchg
mov
loop
mov
aas
dec
cmove
adc
cld
aad
xchg
jge
xlat
ret
cmc
pop
hlt
mov
cdq
inc
or
je
cli
add
dec
pop
scas
or
fiadd
push
sub
xchg
pop
out
adc
movs
sbb
inc
out
and
add
push
lds
into
jecxz
movs
rcl
ficomp
adc
pop
push
dec
aad
add
dec
mov
add
aam
leave
adc
shr
popa
jno
pop
or
out
scas
mov
mov
ret
outs
(bad)
in
pop
in
sti
repz
or
push
aad
sub
fist
ins
sub
pop
inc
sbb
or
mov
jno
jge
sub
test
aas
cwde
push
add
rol
mov
test
sbb
aam
jne
add
mov
or
icebp
mov
mov
jecxz
add
jae
aas
or
test
jge
in
sub
int3
or
ret
aas
add
iret
add
add
sbb
add
jbe
ss
call
add
mov
or
cli
inc
lahf
iret
mov
into
jmp
loop
pop
add
out
fs
jns
lods
cli
je
add
xchg
psrlw
sbb
loopne
add
add
mov
push
sbb
imul
xor
cwde
fmul
xor
call
jge
cmp
test
inc
shr
retf
add
out
lock
or
fucomp
sbb
mov
add
inc
ss
dec
push
stos
pusha
es
inc
xor
bound
add
aad
enter
xchg
mov
dec
and
jo
cmc
retf
int
and
xor
add
pop
dec
dec
jae
pop
add
movs
mov
xor
ret
add
xor
mov
xor
out
jbe
sti
push
in
dec
add
push
pop
mov
test
add
lahf
mov
mov
mov
dec
or
sub
outs
enter
sub
and
nop
leave
test
mov
jo
ror
movs
mov
dec
xor
jns
mov
add
mov
mov
nop
in
test
add
push
sub
inc
outs
add
xchg
add
retf
jle
pop
neg
jnp
movs
push
scas
shl
shl
push
movs
ds
mov
add
aaa
add
ins
and
inc
jge
add
ret
xor
cmps
(bad)
push
jg
inc
push
and
jnp
sahf
js
out
cmp
arpl
adc
add
mov
outs
lahf
jno
in
inc
into
stos
lods
jo
cmp
add
ins
jae
out
and
push
add
mul
add
out
dec
int3
sahf
repnz
jo
in
fldcw
inc
push
jno
pop
in
cli
rol
fdiv
dec
es
call
test
mov
mov
std
push
outs
pusha
test
ret
in
mov
pop
div
add
jbe
cmp
mov
adc
mov
ss
loop
ja
cld
xchg
shl
dec
mov
out
cwde
adc
and
mov
add
pop
out
mov
test
or
pop
and
or
xlat
xor
in
dec
add
mov
sbb
mov
ja
pushf
mov
fld
sub
mov
xchg
cmp
add
adc
xchg
sbb
xor
add
or
xchg
add
(bad)
loopne
jo
add
pop
sub
add
or
imul
jge
mov
add
std
int
or
push
add
add
sbb
push
mul
mov
add
cld
out
sbb
retf
jmp
sbb
jb
inc
push
sbb
and
clc
mov
into
add
aas
sub
sbb
sbb
push
mov
dec
and
data16
lea
push
mov
hlt
dec
add
ss
or
push
add
push
mov
mov
mov
cmps
jb
jle
ror
loopne
imul
mov
push
data16
jecxz
rol
sbb
xchg
and
and
pop
cmp
popa
pushf
dec
fcomp
in
jle
push
add
aas
cmps
xor
push
cmp
xor
in
add
add
repnz
pop
out
add
xchg
cmp
xor
sbb
sbb
cmps
fwait
add
les
cmp
cli
pop
call
in
pushf
outs
dec
rcl
push
xchg
pop
xchg
inc
inc
cdq
push
jle
inc
movs
pop
mov
ins
add
ja
inc
test
retf
inc
adc
outs
push
sub
inc
or
test
iret
push
js
xorps
mov
fwait
push
xor
adc
sub
jp
imul
adc
inc
test
mov
add
inc
ds
push
pop
fnstsw
(bad)
adc
push
inc
aad
stc
add
mov
mov
xor
mov
pop
push
cs
pusha
ficom
mov
pop
ret
jo
pop
adc
fsub
jne
or
add
dec
iret
add
(bad)
sbb
pop
pop
ret
xchg
ds
mov
or
cmp
add
jecxz
movs
dec
inc
mov
(bad)
call
dec
ret
adc
adc
pop
push
jp
in
inc
inc
push
mov
lock
inc
(bad)
popa
sub
test
xor
and
jmp
or
push
jp
cmp
sbb
aas
in
stos
aaa
sub
dec
shl
mov
ds
inc
ret
dec
jge
out
push
mov
lea
mov
and
and
mov
jno
nop
add
cmp
stos
add
and
arpl
jl
add
(bad)
popa
mov
rol
mov
add
sub
sbb
pop
cmp
mov
jnp
cli
xchg
adc
push
sub
mov
aaa
jle
jne
outs
retf
xor
scas
adc
sub
xchg
fs
mov
add
dec
fld
ror
scas
add
les
pop
fucomip
add
mov
sub
mov
xor
mov
int3
cmp
add
add
shr
add
push
or
movs
out
adc
mov
sti
mov
inc
mov
imul
aad
inc
(bad)
ret
push
ins
or
add
sti
test
rcr
add
push
xchg
ins
(bad)
push
xchg
cmps
pop
das
add
sti
inc
daa
xchg
pop
add
fistp
xor
jno
idiv
addr16
pop
or
add
mov
add
fadd
jo
cmp
or
inc
push
shrd
inc
pop
sti
xchg
fst
push
popa
test
cmp
cmps
sbb
xchg
test
push
lods
mov
ss
into
xchg
dec
stos
add
lods
add
add
mov
inc
clc
mov
clc
mov
or
shr
retf
cs
pusha
cmc
sti
xor
mov
sbb
jmp
inc
add
mov
lahf
jl
and
adc
fimul
add
clc
xor
ins
(bad)
out
dec
sub
mov
sub
ret
mov
jg
and
inc
out
das
call
xor
jno
pop
mov
sbb
inc
push
leave
jle
adc
add
(bad)
ja
mov
ror
xchg
inc
mov
call
stos
cmp
add
test
adc
nop
add
xchg
inc
pop
enter
dec
mov
icebp
dec
push
push
cmp
test
adc
movs
add
add
mov
out
jg
push
add
shl
jmp
fistp
pop
push
out
int
cmp
jns
mov
add
(bad)
or
cwde
xchg
mov
into
stos
add
mov
inc
lock
add
push
(bad)
push
mov
add
call
mov
add
xor
add
pop
iret
xor
outs
rol
add
aas
mov
fcmovb
sbb
mov
or
and
inc
mov
mov
xor
inc
jge
push
add
jno
aam
push
jo
mov
repz
lahf
add
jl
and
mov
push
jg
dec
jecxz
fdivr
fld
adc
arpl
add
pop
inc
sub
ror
adc
shr
fldcw
leave
add
mov
sbb
arpl
movs
xchg
add
or
jl
cmp
xchg
mov
adc
add
sub
sar
dec
loop
loopne
add
xlat
stos
sti
fldcw
je
add
mov
jno
icebp
movs
push
div
add
test
pop
add
popa
adc
xchg
sbb
into
cmps
arpl
xor
fsub
add
ret
jp
(bad)
push
sti
es
dec
add
push
iret
mov
pop
jge
leave
lock
or
mov
imul
dec
test
add
add
inc
sub
jl
in
sbb
mov
xchg
enter
jno
inc
sub
test
stos
sbb
ret
mov
adc
add
ja
adc
arpl
iret
mov
rol
add
in
push
loop
xchg
or
cld
out
add
ss
add
sbb
push
add
sub
mov
cmps
xor
stos
shl
sub
xor
mov
add
popa
ja
jecxz
ret
inc
push
jb
call
ficomp
test
dec
mov
add
js
jecxz
add
xchg
dec
xchg
cdq
imul
loop
dec
cmp
push
js
outs
inc
cwd
(bad)
mov
dec
gs
fld
cmp
push
add
add
hlt
cmp
and
jge
movs
add
inc
push
pop
cmp
test
or
dec
lock
add
mov
aam
mov
jge
data16
mov
jle
out
dec
pushf
retf
or
and
pop
sbb
pcmpgtw
loopne
xchg
sub
sub
cmp
jnp
add
stos
adc
fild
enter
mov
push
rcl
mov
stc
or
lds
and
add
cmps
mov
js
mov
mov
ffree
test
rcr
jo
stc
and
std
or
and
nop
js
adc
(bad)
push
xor
nop
pop
add
mov
into
out
pop
mov
loop
sub
js
data16
inc
pop
xchg
or
add
inc
add
sbb
pop
aas
dec
xchg
add
and
add
add
fs
aaa
add
bound
and
sbb
aam
fsub
add
jns
pop
icebp
xor
sbb
test
sub
int3
jp
cs
adc
push
in
pop
pop
add
sbb
mov
loope
in
cmp
enter
lods
cmp
test
mov
aam
push
xor
mov
dec
pop
add
dec
retf
xchg
(bad)
stos
add
iret
sar
idiv
daa
loopne
push
(bad)
and
push
dec
scas
push
sub
sub
push
mov
xchg
inc
pop
sub
xchg
mov
sbb
add
push
dec
inc
dec
mov
in
mov
sti
movs
cli
jno
or
mov
xlat
jge
cdq
test
daa
dec
jle
xchg
cmp
lods
fdivp
nop
mov
mov
inc
xor
lods
add
movs
xchg
lahf
sub
pop
repnz
add
dec
ins
adc
dec
call
lock
push
add
imul
verw
dec
pop
lds
rol
mov
push
mov
mov
mov
or
popf
or
adc
mov
aad
add
mov
add
pop
mov
push
rol
push
xor
test
push
int
dec
sti
call
es
xor
and
cmp
jg
cmp
add
cli
sbb
jns
retf
in
adc
pop
js
in
cmc
add
mov
sub
cmps
sbb
ds
addr16
add
sub
jo
cli
xchg
test
push
inc
cmp
mov
push
sbb
bound
add
pop
mov
sti
mov
adc
cmp
adc
sbb
add
sahf
sub
add
mov
imul
xor
dec
add
daa
test
pop
lea
repz
lods
mov
aas
aaa
rol
fs
test
add
mov
movs
fsub
fmul
outs
out
jb
pusha
(bad)
shl
add
xlat
lods
dec
dec
mov
mov
test
push
dec
pop
inc
ins
loopne
adc
xchg
add
add
sub
add
sbb
add
repnz
push
add
mov
aam
movs
mov
scas
imul
lahf
add
fcompp
push
dec
neg
pop
daa
sub
loopne
test
pop
or
fisttp
enter
in
in
loopne
lea
int
jae
out
aas
add
xchg
test
fild
xchg
push
(bad)
lock
pop
scas
mov
add
push
sbb
mov
outs
popf
sub
out
xchg
addr16
cmc
mov
cs
cwde
ficomp
add
xor
std
in
push
test
add
imul
add
add
pop
into
add
js
lods
enter
xchg
nop
cmps
movs
xchg
jg
xor
mov
jne
hlt
call
xchg
sub
test
cmp
xchg
and
sahf
cmp
mov
in
jne
arpl
push
push
and
jb
cmps
rcr
dec
pop
sbb
add
test
inc
mov
jge
add
leave
cmp
out
rol
pusha
xorps
fidiv
add
das
jmp
ret
add
push
sub
push
add
push
jbe
addr16
add
and
call
cmp
out
(bad)
jmp
pop
add
push
sbb
add
pop
jb
lahf
mov
cmp
jbe
loop
jae
idiv
add
(bad)
jne
in
into
add
mov
mul
in
push
add
jle
iret
aam
in
mov
xchg
fwait
mov
shl
aad
adc
add
mov
mov
outs
loopne
out
add
sbb
pop
jmp
inc
bound
adc
add
mov
xor
test
xor
jp
les
out
push
xor
stos
jge
add
adc
iret
mov
shl
mov
push
or
test
aas
mov
or
add
mov
sbb
sbb
enter
jecxz
mov
fwait
cmp
adc
xchg
out
cdq
add
and
jmp
leave
jmp
sbb
pop
sub
xchg
fbld
mov
scas
rol
pop
adc
mov
xor
and
add
movs
jmp
sbb
push
test
(bad)
and
ja
adc
ret
push
dec
cdq
repz
sti
loope
gs
pop
xor
and
add
push
jle
add
adc
out
shr
arpl
leave
mov
add
lahf
sbb
mov
data16
ffree
ret
cli
cmp
adc
pop
loopne
add
rcr
or
pop
and
adc
pusha
int3
aad
repz
sahf
je
stc
sysexit
cld
(bad)
pusha
aas
fsubr
outs
lahf
add
int3
xor
mov
or
push
mov
mov
je
fild
(bad)
in
in
aad
xor
cs
push
mov
add
mov
jmp
lock
dec
push
cmp
add
test
cld
sbb
sub
pusha
fild
sbb
in
sbb
mov
fst
sbb
mov
or
test
fwait
cwde
add
push
adc
aam
jle
inc
jnp
ror
fistp
dec
add
push
inc
aaa
pop
xor
add
jno
add
jbe
rol
mov
mov
mov
inc
push
rol
push
dec
aas
fiadd
xchg
dec
pop
cmp
rol
movs
push
imul
mov
mov
add
std
pushf
mov
je
inc
mov
push
ins
fild
in
(bad)
aaa
or
jno
and
fnstcw
or
dec
add
adc
mov
pop
xlat
cmp
imul
xchg
mov
fs
add
icebp
fld
add
jne
cmp
sub
rcl
es
add
add
cmp
outs
in
aam
xchg
sbb
cmp
cmp
mov
pop
dec
pushf
push
dec
test
mov
adc
out
xor
clc
pop
add
lea
ins
inc
mov
jb
pop
imul
test
add
je
mov
fcmovnu
mov
(bad)
imul
fs
out
and
and
sub
ja
add
pop
minps
jno
inc
inc
add
xchg
dec
add
adc
movs
out
sub
cmc
add
inc
jecxz
cmps
imul
loop
xor
mov
sub
mov
xor
daa
add
std
call
in
jmp
push
add
adc
mov
adc
mov
add
or
fcmovu
mov
add
cli
sbb
add
pop
(bad)
hlt
sar
(bad)
fdiv
cli
add
pop
adc
add
lahf
xchg
adc
call
mul
std
cmp
xor
push
mov
jge
push
mov
push
rcl
or
ss
mov
cmp
loope
xor
mov
daa
je
cmp
mov
ins
loope
jge
jmp
add
cmp
jmp
popa
mov
pushf
add
push
aaa
out
cmps
sub
adc
out
mov
adc
arpl
cmp
daa
rcr
push
add
adc
scas
jb
rcr
fadd
lds
pusha
pop
inc
test
cli
outs
inc
push
shr
ins
pusha
pavgb
jg
dec
or
fwait
jmp
dec
add
pushf
mov
das
add
shl
inc
rol
dec
js
jg
cli
mov
jmp
or
ret
and
xor
push
adc
cwde
ins
fwait
add
jns
das
jp
add
popa
test
pushf
xchg
retf
jno
imul
cmps
xchg
xor
push
popa
in
sar
or
imul
fwait
loopne
sti
pop
adc
(bad)
jl
jecxz
add
dec
sub
mov
ret
loopne
mov
add
js
fs
out
xchg
mov
pusha
adc
call
pop
jbe
dec
xor
jne
aam
movs
test
mov
mov
addr16
sahf
add
dec
fist
aaa
adc
jecxz
mov
ins
movs
(bad)
rol
je
push
inc
loop
sahf
cld
aad
push
cvttps2pi
cmps
aas
fist
cmp
rol
or
(bad)
mov
inc
add
in
jno
add
not
fstp
add
mov
xor
ds
and
sbb
inc
cs
add
fadd
mov
mov
push
adc
ret
add
add
es
outs
stos
mov
scas
jl
sub
pop
scas
repz
nop
xchg
jne
add
mov
aam
mov
add
sar
ins
jmp
add
jp
fsqrt
aas
mov
inc
aaa
ins
xor
and
scas
dec
pop
jb
shrd
(bad)
scas
mov
or
add
ins
outs
dec
enter
add
cmp
mov
lds
mov
fwait
mov
add
sar
mov
adc
daa
(bad)
arpl
movs
add
imul
add
push
sub
add
mov
adc
and
mov
rcl
ds
inc
add
movs
dec
sahf
sbb
inc
hlt
out
loop
nop
mov
mov
add
scas
retf
pop
mov
sub
xchg
add
inc
ins
cld
jo
add
test
xchg
fadd
jmp
inc
loopne
fnsave
or
xchg
sar
cmp
sub
rcr
es
xor
add
sub
jg
add
mov
xchg
xchg
or
lds
cmp
lea
dec
mov
pop
jle
jns
fimul
pop
and
add
adc
arpl
nop
(bad)
add
lods
jnp
dec
pop
sbb
mov
mov
add
cs
pop
out
mov
push
test
add
pop
pop
das
xchg
sbb
aam
(bad)
fwait
add
ret
or
leave
jg
pop
sub
add
test
int
xchg
pcmpeqb
mov
sahf
inc
jge
stos
jnp
add
cmp
jo
(bad)
sbb
push
ins
(bad)
aam
mov
push
imul
add
pop
movs
push
jle
add
retf
mov
fisttp
xchg
mov
in
jecxz
cwde
mov
inc
jg
xchg
cmps
ja
test
ficom
test
ja
jns
jle
je
out
test
je
cmp
int3
add
push
lods
or
mov
stc
enter
add
into
adc
xor
cmp
add
cmp
xchg
je
mov
ret
add
es
sbb
imul
test
lods
mov
sbb
jg
(bad)
outs
ror
popa
add
and
and
cdq
xchg
hlt
icebp
inc
xchg
aas
sar
fmul
stos
mov
dec
add
hlt
fsub
pop
stc
xchg
jo
mov
fcom
mov
js
into
add
pusha
clc
pop
jl
outs
and
adc
add
in
add
mov
loop
jns
cli
push
fild
xchg
adc
add
popf
cmp
pop
nop
xchg
nop
les
stos
inc
mov
aam
imul
or
ret
ins
xchg
ss
inc
mov
xor
scas
sub
iret
cmc
(bad)
data16
sar
add
adc
sub
pop
add
sub
rol
mov
neg
xchg
test
mov
mov
inc
push
add
(bad)
add
ins
inc
test
pop
xchg
mov
jbe
add
jmp
add
and
xchg
scas
add
stos
ret
push
cmps
pop
data16
psubsw
pop
dec
(bad)
cmp
(bad)
fimul
and
lods
ss
pop
mov
in
add
ins
sub
shl
mov
pop
arpl
movs
sub
xchg
shl
aad
push
jl
and
sub
inc
mov
mov
bound
jo
int
add
aam
push
mov
mov
cmp
inc
and
cmp
and
pop
je
sbb
adc
or
and
add
mov
xchg
jne
push
hlt
push
cmps
add
into
push
test
sub
stc
xor
jae
cmps
cmp
mov
js
sbb
cdq
inc
fs
add
fdivrp
movmskps
cmp
and
(bad)
daa
cwde
sbb
rol
xor
adc
in
retf
sub
add
mov
mov
or
clc
loop
push
jg
sub
test
dec
pop
add
cmp
sbb
test
lock
pop
or
gs
cdq
pop
out
jno
add
int
ja
test
(bad)
sbb
iret
movs
pop
cmp
or
cdq
xor
lods
add
sbb
fist
cmps
add
shr
and
sbb
gs
test
inc
add
cmp
jmp
adc
sbb
and
xor
add
mov
pop
fld
inc
je
popf
lock
inc
fst
fcom
icebp
int3
sahf
bound
dec
push
ds
xor
mov
cmp
mov
or
xor
xor
pop
or
pop
rol
lea
ins
add
dec
mov
add
mov
loope
(bad)
sbb
add
pop
cmps
add
sub
fstp
adc
add
xchg
mov
idiv
(bad)
pop
lds
push
add
ja
adc
and
pop
pushf
ret
xor
xchg
add
sbb
ss
jle
add
mov
xor
rol
inc
fst
and
adc
add
cmp
inc
jmp
dec
ins
rcr
js
arpl
ss
pop
dec
popa
lahf
rcl
push
in
ins
(bad)
fiadd
cwde
rep
push
or
aaa
(bad)
fs
push
cmp
pop
in
add
icebp
xchg
xchg
inc
add
(bad)
push
in
fld
jmp
cmps
dec
nop
jo
shr
dec
add
xchg
enter
add
(bad)
xchg
in
movs
dec
jo
dec
add
scas
pop
xchg
mov
out
nop
pop
xor
add
or
add
jg
push
sub
test
test
xchg
mov
test
fidiv
leave
mov
test
shl
xlat
rol
and
push
pop
sbb
mov
fucomip
repz
aam
ror
cmp
jae
add
(bad)
movs
call
push
loope
xchg
dec
xchg
stc
jno
add
aaa
or
and
mov
loop
push
mov
jb
push
nop
jno
push
add
cli
lods
or
xchg
aam
mov
add
std
ds
ja
add
lahf
test
push
add
movs
or
xchg
loop
push
imul
add
sti
frstor
stos
lahf
jne
clc
out
add
popf
pcmpgtd
add
outs
ins
aaa
movs
retf
mov
stos
std
add
clc
adc
out
add
call
add
in
ss
pop
test
inc
cs
mov
mov
ja
add
mov
mov
mov
fs
in
add
cli
(bad)
adc
pushf
std
pop
add
aam
outs
add
sbb
add
nop
xchg
add
cmp
adc
out
xor
add
mov
add
and
gs
retf
test
cmp
leave
inc
xor
jmp
hlt
or
jno
mov
add
mov
adc
inc
sbb
and
std
add
retf
jp
add
out
mov
add
arpl
push
es
xchg
add
ds
add
and
idiv
retf
ret
cmp
jns
dec
call
jl
cld
ret
inc
xchg
fisub
not
pop
loopne
push
ins
packsswb
test
add
movs
add
loope
sbb
pop
aad
add
shr
mov
enter
add
stos
cld
lea
mov
add
test
popa
and
xchg
pop
rcl
rol
fimul
pusha
sub
repz
mov
cs
icebp
in
popa
or
sub
retf
add
scas
mov
cmp
addr16
imul
xchg
mov
inc
std
mov
xchg
retf
cdq
inc
mov
inc
pop
xor
int3
cli
dec
rcl
loope
jge
jno
mov
sbb
dec
(bad)
ror
bound
dec
inc
int
mov
int3
mov
aad
clc
rol
cdq
mov
sub
cmps
mov
mov
cli
adc
test
jmp
pop
hlt
mov
jnp
pusha
movs
inc
std
(bad)
shl
and
inc
and
lods
pop
add
iret
or
sbb
mov
out
xor
cli
xor
sub
add
pop
inc
pop
adc
cmc
jb
lods
jnp
adc
add
iret
push
sti
outs
test
add
inc
mov
mov
cwde
add
test
dec
jle
jl
mov
lmsw
sbb
cmps
sar
aam
fld
cmp
push
ret
xchg
add
cmps
pop
jbe
mov
leave
cld
add
mov
push
out
add
jo
push
and
ins
add
push
dec
(bad)
sub
cmp
jg
(bad)
aad
adc
mov
in
or
div
add
mov
dec
jg
cwde
cli
stos
xchg
cmp
jbe
dec
add
add
add
cmp
pop
jae
mov
rcl
ja
sub
icebp
xchg
(bad)
ret
jo
or
in
cmp
es
push
mov
rcl
mov
lods
imul
jmp
cli
add
mov
add
lods
out
in
jle
mov
popa
adc
inc
das
(bad)
fst
jo
inc
ins
lock
jae
sbb
outs
jne
push
add
xlat
lds
outs
(bad)
fdivrp
popf
mov
push
imul
div
test
je
push
xor
ret
pop
mov
leave
(bad)
pop
dec
add
cmp
sub
push
xor
inc
dec
pop
cmp
ret
outs
mov
sar
xor
xchg
aaa
push
add
adc
and
test
les
inc
lock
add
loop
pop
ror
xchg
lock
push
lods
pop
cmp
int
add
popa
inc
rol
fadd
out
cmp
jecxz
mov
sti
pop
into
imul
add
push
add
stc
outs
retf
dec
test
(bad)
push
sti
iret
xor
xchg
pop
add
adc
popa
inc
xchg
mov
lods
add
ss
mov
add
(bad)
fcomp
pop
adc
lods
add
xchg
daa
mov
dec
pop
test
mov
add
mov
pop
imul
add
enter
pop
sbb
jns
and
cmp
add
imul
jecxz
fsub
cmp
add
cli
sbb
add
push
mov
stos
mov
mov
in
cdq
add
adc
jge
mov
sahf
mov
mov
xlat
out
fdiv
sub
add
mov
test
repz
xchg
dec
(bad)
jnp
mov
jecxz
into
cld
(bad)
iret
add
xor
push
pop
dec
lahf
xchg
scas
pop
push
lock
in
(bad)
jno
adc
xlat
cmps
add
add
pop
inc
sbb
cwde
lock
mov
lods
inc
out
xchg
adc
mov
add
cs
mov
retf
in
lahf
add
int
into
fdiv
or
xor
push
and
add
jmp
mov
adc
inc
movs
add
sbb
mov
add
sub
jmp
ins
jl
jne
push
daa
loope
mov
stos
fstp
add
sub
fmul
cmp
(bad)
in
scas
cs
inc
jecxz
popf
mov
fstp
xchg
inc
into
in
jnp
mov
repz
sbb
dec
cmp
cmp
pop
add
(bad)
push
pop
dec
xchg
pop
in
push
add
push
sbb
in
pusha
daa
imul
sar
rol
mov
sub
fcmovnb
cld
jo
add
cmp
jmp
add
jnp
sar
adc
push
ret
icebp
pop
sahf
cmp
add
ss
cli
pop
sbb
mov
shr
not
loop
add
cdq
jbe
movs
sbb
scas
add
and
int3
cmp
sub
rcr
subps
mov
sub
add
mov
fisubr
je
inc
fwait
add
daa
mov
inc
jp
add
pusha
lods
mov
pop
mov
jbe
movs
(bad)
pop
add
ins
test
add
cmp
add
(bad)
jne
xor
xchg
hlt
ins
lods
add
stos
aam
int
mov
ja
jb
add
push
push
mov
test
pop
add
enter
jg
movs
xor
aas
pop
push
ret
mov
sbb
ficomp
mov
mov
pop
jae
mov
cld
add
and
dec
(bad)
xor
into
add
popf
jmp
adc
cld
mov
movs
(bad)
fist
cmp
add
cmp
mov
loop
inc
retf
mov
ret
sbb
cmps
mov
push
or
ficomp
mov
shl
arpl
(bad)
lods
aad
test
pop
pop
push
std
leave
mov
and
icebp
add
xor
mov
sti
add
pop
cdq
stc
fld
inc
aad
sbb
cmc
aam
imul
push
adc
cmp
call
or
add
lea
add
dec
jnp
fs
jg
add
pop
pop
cmp
movs
enter
jbe
xor
or
pop
dec
scas
add
cmp
and
adc
retf
and
aad
sub
inc
push
call
jmp
add
test
cld
jae
aas
sub
mov
es
int3
push
push
rol
adc
push
pop
dec
jp
mul
sub
sub
jo
mov
jecxz
shr
js
jae
test
scas
push
popf
fild
xor
mov
test
into
icebp
or
xchg
mov
out
and
jmpw
mov
out
jno
addr16
and
fmul
sahf
rol
xor
in
mov
xchg
out
add
fsub
pop
shl
jmp
jne
mov
jbe
xor
cmp
pop
jo
xor
and
mov
scas
shr
jae
cwde
add
and
pop
add
fwait
in
pushf
fcomp
pop
retf
iret
and
push
(bad)
in
xchg
push
push
mov
add
nop
scas
lods
(bad)
cmps
add
mov
sub
or
mov
and
add
in
cli
or
mov
lea
sub
aam
push
sub
mov
jae
dec
add
aad
mov
in
xlat
add
test
cmp
mov
test
jp
add
adc
xchg
xchg
enter
bound
xchg
add
ins
pop
jl
pushw
ds
and
loope
aam
jne
mov
out
and
xchg
stos
movs
xor
pop
mov
popa
mov
cwde
add
icebp
cmp
aam
adc
jb
mov
imul
push
jp
cmc
add
dec
cld
aam
and
aaa
sub
mov
push
add
ror
lock
sub
popa
ds
inc
mov
xor
cli
mov
and
mov
es
add
push
inc
imul
dec
and
inc
add
jb
sahf
imul
push
pop
loop
mov
loopne
add
mov
adc
mov
add
mov
ds
or
scas
add
in
adc
std
jno
cmp
pop
shl
add
in
mov
add
pop
mov
aaa
mov
je
daa
cli
loopne
and
mov
test
mov
and
jo
sub
test
mov
add
sahf
ficom
inc
call
push
js
sub
sub
loope
test
mov
add
stc
out
sar
mov
adc
in
cdq
add
mov
add
push
stos
mov
pusha
stos
cmp
and
mov
add
fincstp
mov
add
rcr
pop
retf
jo
cmp
(bad)
sar
add
leave
mov
ins
pop
inc
push
into
inc
mov
push
fwait
and
push
pop
add
jg
stc
push
dec
push
dec
and
add
fadd
inc
cmps
xor
ins
or
add
xchg
lds
inc
(bad)
jp
pusha
adc
imul
or
xchg
fstp
in
pushf
test
add
out
out
in
jne
add
mov
fnstenv
cmp
dec
and
or
adc
shr
es
jge
jmp
add
dec
or
push
inc
add
jmp
dec
sbb
lds
psubusb
(bad)
pop
mov
test
xor
(bad)
mov
iret
dec
add
dec
das
jg
bound
(bad)
aam
mov
femms
mov
add
mov
mov
pop
sub
(bad)
mov
sbb
and
(bad)
js
add
push
out
add
icebp
stos
xor
sbb
out
repnz
sub
fwait
mov
push
pop
nop
mov
cmp
mul
out
add
xor
push
out
cmp
jne
inc
mov
jecxz
out
adc
movs
xchg
jns
scas
and
xor
sub
popf
loopne
pop
mov
add
movs
es
add
jg
cdq
loop
mov
add
or
cmp
sar
fiadd
call
add
push
(bad)
mov
sub
push
iret
add
(bad)
adc
lods
fcmovbe
or
aaa
sar
iret
imul
mov
or
hlt
cwde
add
push
shr
pop
inc
push
xchg
es
loopne
repz
add
sub
add
xchg
or
jns
add
dec
std
outs
bound
stos
push
adc
push
lea
ds
adc
movs
jne
push
loopne
adc
and
mov
cdq
ret
(bad)
jg
ss
mov
dec
mov
xor
push
pop
loopne
fild
xor
popa
dec
ins
add
mov
popf
ds
xor
push
ja
fisttp
adc
add
adc
cmps
add
mov
xchg
xor
pop
or
lock
xchg
add
add
pop
push
pandn
hlt
pop
rcr
add
push
(bad)
bound
test
add
test
dec
or
pushf
add
inc
out
mov
mov
hlt
std
(bad)
loope
add
leave
pop
cld
add
inc
mov
jge
inc
mov
push
xor
clc
shl
add
pop
xchg
add
cmps
mov
clc
xchg
add
ins
movs
mov
sub
fld
push
das
jo
(bad)
daa
jge
add
jp
repnz
pop
adc
jns
add
mul
sbb
shl
and
in
js
out
nop
lock
push
out
jl
add
scas
leave
mov
retf
dec
add
arpl
inc
test
xlat
cmp
das
data16
mov
cmp
js
jae
dec
or
mov
js
add
jl
pop
stos
add
nop
mov
clc
inc
jecxz
cwde
cld
add
and
dec
mov
add
les
sub
in
and
repnz
sahf
popa
jecxz
loop
dec
add
outs
shl
rol
hlt
ins
add
mov
fwait
jns
in
loopne
xor
mov
push
push
push
add
dec
pushf
loope
int3
mov
add
jp
xchg
pop
pop
jbe
(bad)
fld
push
fwait
fs
add
jmp
es
leave
mov
push
shl
xchg
add
in
xor
stc
pop
pop
pushf
mov
adc
out
add
cmp
jne
add
mov
cwde
xor
mov
aas
xor
add
aam
sub
xor
xor
sbb
adc
dec
pop
sar
mov
add
jo
inc
fsubr
out
adc
int
and
imul
add
cmp
sub
push
jp
cmps
jl
rol
add
shl
xchg
jg
cmp
loopne
sbb
bound
push
xchg
sub
push
cmps
add
cmps
mov
add
lahf
shr
stc
add
xor
pop
mov
cmp
xchg
nop
xchg
adc
enter
ja
dec
and
add
lds
js
cmp
cmp
add
repnz
stos
leave
fsubrp
ret
fwait
pop
mov
push
sub
add
sub
push
pop
data16
ret
sbb
jbe
mov
push
repnz
aas
out
sub
sub
rcr
add
loop
and
popf
fsub
cli
add
call
shl
sbb
add
mov
pop
test
pusha
add
movs
sub
adc
(bad)
jge
cdq
outs
add
into
sbb
mov
jg
add
shr
sub
add
sub
psrlq
icebp
in
inc
inc
xor
adc
dec
nop
into
dec
cmp
jo
clc
pop
jns
xchg
or
mov
inc
imul
mov
push
cmps
add
pop
hlt
xchg
cmp
xchg
sbb
imul
cdq
imul
mov
sub
push
xchg
inc
push
gs
add
(bad)
(bad)
dec
jne
add
rcr
imul
outs
jns
add
add
and
sub
mov
fsub
sub
or
pop
add
cmp
sub
sahf
mov
std
xchg
lock
pminub
jne
mov
pop
pop
pusha
push
retf
dec
leave
and
jb
cwde
dec
(bad)
jns
add
cmp
xchg
adc
or
cmp
xor
scas
loop
mov
push
pop
sub
(bad)
push
sbb
adc
sbb
pop
je
jae
(bad)
jge
or
adc
inc
xchg
jae
dec
xor
push
nop
ror
not
jmp
push
inc
add
mov
imul
xchg
mov
mov
fldcw
fdivrp
dec
add
lahf
or
pop
dec
fisub
add
adc
or
call
push
ins
add
xor
out
pop
jb
sbb
cdq
rcl
adc
add
ja
pop
add
lods
pop
scas
pusha
cmp
rol
jb
rcl
aam
lock
sbb
sbb
cmps
sub
stos
inc
loop
jo
jge
aas
ins
loope
dec
inc
ror
cld
add
mov
fs
jp
push
clc
loop
add
mov
pop
push
add
jg
in
in
cmp
mov
mov
jle
push
dec
retf
or
pop
mov
aad
add
dec
mov
out
(bad)
outs
jno
test
enter
shld
arpl
jae
scas
bound
xor
loop
inc
fbstp
sbb
add
sahf
stc
pushf
pop
mov
retf
push
mov
xor
jmp
rol
dec
dec
and
add
clc
pop
and
add
(bad)
inc
add
jo
adc
inc
retf
jg
sbb
test
lods
pop
cli
jmp
out
iret
or
fdiv
add
add
sahf
sbb
inc
xchg
add
ins
jg
add
lds
or
inc
test
mov
push
mov
mov
out
and
mov
movs
ins
and
cmp
or
cmc
xchg
add
out
ret
add
fucomi
cdq
jge
push
jmp
fiadd
mov
adc
dec
pop
inc
mov
add
sar
in
call
add
pop
out
fstp
fdivp
cmp
xchg
add
cmc
div
es
out
mov
xchg
(bad)
call
int3
mov
inc
add
cli
jns
loop
mov
cmps
xchg
pop
or
xor
(bad)
pop
mov
add
loop
mov
cmc
movs
mov
cmp
bound
add
pop
xor
add
or
(bad)
es
sbb
push
inc
nop
sti
add
adc
cmp
ror
add
xchg
fnsave
inc
lahf
gs
ficom
and
icebp
movs
call
cli
test
mov
mov
in
add
int
sub
add
rcr
mov
and
(bad)
dec
inc
jmp
scas
test
in
jl
mov
arpl
es
push
loope
jae
enter
stos
mov
arpl
jmp
push
aas
add
inc
push
sti
add
in
dec
or
and
sub
sub
dec
adc
jmp
mov
mov
inc
out
inc
(bad)
out
add
pop
stos
dec
xchg
adc
sbb
push
push
add
mov
add
leave
sub
jmp
ss
jne
add
mov
and
jl
popa
out
retf
pop
add
adc
and
xchg
cs
(bad)
sub
mov
ja
test
add
retf
rcl
mov
mov
pop
cmp
gs
cmps
(bad)
jmp
push
sub
add
out
add
imul
leave
mov
add
mov
test
add
sti
enter
adc
loopne
lds
xchg
jno
sub
push
movs
in
xor
adc
jbe
add
pop
movs
ss
imul
scas
loopne
mov
sub
add
and
fistp
add
jge
nop
aam
das
adc
movs
mov
push
pushf
push
pop
ficom
or
adc
mov
add
ror
dec
aas
stos
push
sub
xchg
mov
push
add
data16
mov
lods
cmp
sbb
push
outs
xchg
sbb
cmps
mov
cdq
leave
rcl
dec
sub
xchg
jo
bt
sub
xchg
cmp
pop
xor
pop
aad
push
push
inc
mov
mov
(bad)
push
cmps
add
push
inc
jnp
mov
and
outs
pop
ins
jle
jecxz
dec
xchg
xor
pusha
add
dec
sub
jg
cmp
jno
and
cmp
pop
sar
mov
mov
sbb
cmps
sbb
fs
lds
test
dec
xor
sub
cmp
or
sub
jmp
outs
xor
in
add
sub
out
mov
clc
xor
pop
and
add
mov
popa
and
sub
xchg
add
inc
pop
pop
sub
push
adc
add
jmp
cmp
push
add
adc
cmp
stc
arpl
stos
(bad)
(bad)
imul
jae
in
inc
and
movs
retf
aad
call
frstor
pop
jp
add
out
push
sub
stc
dec
pop
mov
adc
add
and
in
retf
inc
clc
mov
loopne
pop
cmp
add
dec
xchg
movs
or
add
jmp
repnz
enter
cmc
jae
push
arpl
je
cwde
int3
add
push
jecxz
daa
cmc
mov
xchg
cmp
inc
scas
jae
xlat
ins
dec
(bad)
adc
jg
mov
rol
cmp
sbb
xor
pusha
pop
mov
xor
sbb
mov
cmp
lock
mov
add
out
push
(bad)
or
mov
add
leave
dec
sbb
add
rcl
or
loope
dec
add
(bad)
loopne
bound
sbb
add
test
mul
imul
mov
add
je
inc
loopne
jno
add
pushf
push
pop
shl
jmp
fsubr
imul
and
and
push
into
add
loope
or
rcl
mov
es
adc
pop
mov
mov
in
add
push
adc
out
shr
add
inc
dec
cld
(bad)
pop
sbb
sbb
add
jmp
mov
or
lock
jbe
into
aas
(bad)
hlt
loope
add
leave
cli
sbb
lock
sbb
push
jbe
int
scas
(bad)
imul
ds
mov
out
jmp
shl
add
mov
jmp
je
pop
adc
idiv
(bad)
dec
out
rol
jo
add
mov
imul
je
add
imul
mov
cmp
scas
pop
sbb
mov
xchg
adc
dec
mov
mov
rcl
dec
sbb
xor
mov
rol
es
adc
mov
pusha
mov
adc
push
scas
cwde
loop
stc
xchg
leave
call
test
jno
add
xchg
add
test
add
dec
xchg
iret
stos
daa
add
jl
push
addr16
sahf
xchg
sti
add
sub
pop
aad
jbe
arpl
add
repz
fld
ror
sahf
(bad)
xchg
pop
dec
into
lock
hlt
(bad)
jp
add
in
sahf
int
jge
add
adc
add
or
fadd
repz
clc
test
jne
ds
les
loopne
or
mov
add
dec
pop
gs
add
jns
jmp
xor
cmps
add
mov
inc
inc
add
mov
lods
add
mov
sub
retf
xchg
pop
add
stc
pop
dec
inc
lds
push
dec
sbb
xchg
or
add
call
out
add
imul
pop
adc
and
bound
hlt
add
int3
dec
repz
jp
xor
lods
(bad)
movs
dec
xchg
xchg
or
xor
loope
icebp
jg
and
jmp
add
add
inc
rol
loop
dec
add
faddp
inc
push
jg
mov
inc
lock
inc
fld
outs
adc
pop
fwait
cmp
mov
mov
scas
ror
adc
cmp
push
pop
push
cmps
clc
add
xor
out
mov
push
pop
jecxz
xchg
add
rcr
add
push
add
pop
js
and
sub
paddsw
adc
repnz
cmp
je
jge
sub
pop
les
add
adc
jl
test
mov
mov
jb
cmc
not
push
fidiv
arpl
nop
dec
add
xchg
sbb
cli
je
test
adc
sti
out
mov
xor
inc
xchg
add
popf
push
sub
push
daa
es
mov
test
mov
adc
lods
lods
mov
xchg
xchg
sbb
mov
push
push
cmc
popa
mov
mov
jg
and
sbb
sub
retf
or
imul
aad
fiadd
leave
imul
mov
data16
lahf
outs
add
outs
jns
dec
ja
aam
xor
rol
pop
inc
cmp
fld
dec
add
pop
ins
in
sbb
add
clc
push
xchg
(bad)
push
xor
adc
fisttp
mov
push
xchg
enter
dec
add
mov
adc
test
add
or
xlat
add
xchg
icebp
fimul
mov
inc
add
ins
aam
nop
add
lock
xor
es
ret
rol
(bad)
and
xchg
out
add
mov
pop
push
cmp
add
hlt
aas
xor
mov
popf
nop
pop
jg
and
jno
add
fnstenv
arpl
ins
sbb
cs
xchg
pop
add
loopne
push
out
add
(bad)
out
cdq
mov
pop
das
jnp
cmps
je
add
add
pop
dec
cmp
imul
or
shr
retf
mov
call
dec
arpl
adc
mov
rep
call
push
mov
xchg
inc
cmp
test
cmc
mov
adc
out
mov
mov
fld
test
data16
pop
cmp
add
add
jo
add
lods
jecxz
mov
push
rcr
not
aad
mov
dec
sti
fsub
push
and
jge
pop
leave
pop
scas
nop
mov
fdivr
shl
cmp
loope
add
xchg
fdivr
loopne
gs
jbe
mov
ret
dec
stc
loopne
hlt
mov
xchg
dec
xchg
sub
out
jle
add
fmul
lock
retf
xor
sti
dec
mov
jp
int
pusha
pop
pop
(bad)
push
fadd
imul
pusha
outs
push
loopne
es
loopne
xchg
aad
jle
xchg
lods
adc
jge
out
add
shl
lock
sbb
not
ss
mov
sbb
add
add
inc
push
nop
cmp
and
push
daa
adc
ret
fadd
pusha
sbb
cwde
jne
add
lods
dec
mov
add
adc
mov
mov
mov
cmp
lock
sbb
inc
or
loope
arpl
sub
shl
add
jns
mov
mov
or
xchg
fdivr
stos
add
mov
inc
dec
je
add
in
jp
or
add
adc
push
(bad)
pop
cmp
std
and
add
sbb
sahf
mov
cwde
sbb
(bad)
repz
sub
daa
cmp
sbb
mov
repz
adc
lds
lock
add
ret
xor
dec
mov
xchg
add
cs
je
ret
push
in
xor
pushf
inc
push
stos
repz
lock
mov
pop
test
(bad)
push
xchg
mov
xor
ins
dec
dec
call
outs
sbb
outs
add
ffreep
pop
add
ins
xchg
les
dec
lea
add
mov
hlt
cmp
sbb
add
loop
sbb
push
dec
and
xchg
pop
jl
add
aam
fwait
mov
lea
loop
add
push
rol
fsubr
add
mov
stos
add
test
int
int3
scas
sub
xchg
(bad)
xor
popf
sub
pop
cmp
mov
jle
mov
mov
sar
and
adc
dec
out
pop
inc
das
xor
push
or
inc
mov
es
add
sahf
push
imul
or
push
sub
xor
popf
lock
cmp
adc
or
ret
push
rcl
or
add
ja
xor
dec
in
mov
call
add
xchg
aas
pop
(bad)
add
repz
sbb
add
js
scas
cmp
and
sti
out
add
sub
lahf
xor
adc
popa
mov
and
adc
jae
cmp
pop
inc
sub
jne
sahf
enter
push
sub
mov
jo
and
jp
popa
sti
pop
outs
dec
fst
retf
cli
mov
rcr
xor
dec
and
shl
pop
cmp
add
xor
adc
mov
cdq
in
pop
jne
popf
leave
sub
jb
lods
add
shl
and
jecxz
out
adc
add
rol
gs
inc
mov
pusha
push
cmp
mov
dec
adc
add
pop
pop
add
jnp
pop
sbb
and
aaa
add
inc
or
pop
add
fstp
dec
push
clc
or
push
add
inc
jmp
jmp
test
or
add
push
jmp
pop
(bad)
xlat
test
and
xchg
dec
mov
pop
cwde
outs
add
xchg
cmc
inc
add
enter
es
add
sbb
div
push
mov
and
mov
or
push
js
fcom
add
mov
xor
ds
ror
mov
mov
mov
add
xor
sbb
inc
add
jae
ins
sbb
nop
data16
repz
(bad)
add
ds
mul
test
lock
pop
fwait
cli
push
pusha
popa
sar
pop
add
xor
jge
repnz
shl
jne
mov
and
cmps
add
push
mov
adc
add
int3
fsubr
xor
xchg
add
loopne
(bad)
lea
call
lock
mov
push
(bad)
mov
add
fdivr
mov
test
add
ret
cmc
xchg
or
bound
inc
pop
loopne
add
push
cmp
popa
mov
jne
or
aad
bound
add
std
inc
dec
icebp
popa
dec
data16
dec
add
pop
mov
sub
sub
and
mov
push
mov
(bad)
pusha
add
xchg
mov
jp
dec
fucomp
cld
add
add
es
or
push
sbb
add
jnp
test
enter
mov
add
ins
hlt
or
fnstenv
jo
add
push
xor
and
fcmovne
scas
je
sahf
(bad)
cli
loop
jns
add
push
mov
sub
popf
push
test
out
add
mov
in
js
jne
dec
jg
pop
iret
mov
popf
add
retf
lea
xchg
fs
mov
xor
and
ja
and
cld
pop
fs
push
mov
sub
hlt
mov
sbb
lea
test
adc
jmp
mov
(bad)
sub
enter
fsubr
mov
mov
ins
or
or
pop
pop
xlat
add
stos
mov
dec
retf
in
xor
adc
loop
fldenv
out
test
(bad)
mov
jb
outs
add
ret
jnp
aad
fwait
dec
hlt
and
mov
clc
mov
mov
push
sub
add
push
gs
jmp
mov
enter
push
in
cmps
jecxz
xchg
(bad)
sbb
jge
fnstenv
in
stc
test
mov
add
aaa
add
enter
and
repnz
sub
adc
fwait
std
jmp
jnp
add
pop
jae
add
add
sub
getsec
pop
xchg
mov
ja
add
lock
cmps
mov
add
pop
icebp
fst
sbb
int
inc
ins
mov
mov
stc
xor
pop
clc
neg
stos
push
lock
or
je
add
cs
cmps
add
outs
jb
xlat
inc
push
sbb
pushf
int
mov
(bad)
xor
sbb
dec
movs
data16
out
inc
push
mov
inc
mov
stos
cmc
mov
fild
mov
js
and
mov
add
xchg
add
pop
shld
into
xchg
(bad)
fwait
add
adc
mov
call
add
mov
js
mov
add
int3
xor
lock
fld
pushf
test
xchg
out
xchg
dec
stos
adc
cmp
icebp
ja
arpl
mov
mov
out
dec
adc
dec
in
mov
add
pop
out
clc
mov
dec
sub
cmp
adc
cli
pop
jbe
sbb
ret
jle
jns
add
xchg
push
(bad)
xchg
or
inc
jecxz
pop
xor
loop
inc
ss
add
cmp
mov
addr16
shr
out
pop
mov
mul
ins
test
bts
mov
jns
iret
adc
add
jb
fwait
inc
das
push
xchg
xor
sbb
add
mov
fisubr
jge
ins
inc
leave
je
pop
jno
cmp
add
sub
iret
mov
adc
les
mov
js
sbb
loopne
cmps
push
in
outs
ret
hlt
sbb
xchg
fist
gs
pop
sti
add
test
hlt
push
cs
adc
mov
(bad)
not
test
and
add
nop
ror
sbb
mov
mov
int3
add
ss
xor
sbb
mov
push
add
adc
fidiv
cmps
sbb
sub
mov
lds
cmp
push
push
addr16
loopne
xor
retf
sub
add
lods
pop
mov
jmp
(bad)
std
push
add
cmps
fcom
retf
add
mov
fdivr
lock
add
retf
int
jmp
pop
jp
mov
ss
aaa
mov
and
adc
jb
add
aas
push
dec
add
out
jbe
dec
bound
sub
data16
hlt
in
push
sub
fld
mov
aad
jl
add
int3
data16
sub
sbb
jae
shl
imul
add
sub
cmp
inc
xor
cli
mov
jbe
cmp
xchg
xor
lods
pop
fisub
mov
pop
xchg
jmp
pop
dec
push
(bad)
pop
aam
and
mov
retf
add
icebp
lds
mov
jno
fbld
jne
and
push
lea
js
add
shl
jo
rdrand
(bad)
sahf
pusha
loopne
enter
aaa
inc
ins
sbb
lock
ja
in
inc
or
xor
dec
add
je
jb
xchg
push
popa
aas
inc
adc
jmp
and
sub
sbb
jp
pop
ret
add
int
push
sub
and
ins
ins
cmps
je
add
loopne
mov
iret
sub
add
jb
data16
push
jo
mov
jbe
ret
mov
fwait
xor
lock
pop
loope
xor
in
jb
rcl
jp
push
shr
adc
cmp
jecxz
add
push
cmp
add
ret
mov
pop
fst
icebp
dec
aaa
mov
adc
loop
add
xchg
add
mov
mov
fild
sahf
ja
xor
or
pop
add
add
add
dec
adc
xor
dec
(bad)
sti
mov
bound
mov
popa
and
jg
in
div
outs
mov
fsub
cmovge
jp
adc
or
int
add
ins
or
pop
and
loop
test
mov
add
push
push
inc
cmp
add
cmp
and
int3
jmp
ficomp
rol
cmp
pop
fsub
xor
je
adc
or
add
jl
das
cld
ficomp
jmp
add
add
mov
inc
jne
ins
in
movs
add
dec
xchg
mov
out
scas
bound
jmp
push
add
out
lahf
pusha
jge
daa
pop
retf
out
or
mov
jge
add
pushf
adc
add
repz
icebp
pop
test
jo
fmul
cmps
pop
push
or
mov
cmp
pop
movs
adc
add
ret
mov
and
dec
in
xor
xor
or
xor
sbb
fcom
int
sub
mov
cmp
js
loopne
loopne
repz
cmp
add
ja
sub
lea
test
jge
mov
add
test
cmps
jo
cmp
out
rcl
mov
add
and
loopne
add
aam
pop
je
pop
cmps
add
add
jb
jge
add
das
xor
(bad)
push
les
out
shl
es
xor
in
add
push
inc
(bad)
mov
add
out
jmp
lahf
xchg
jbe
dec
adc
cmps
outs
iret
popa
mov
mov
out
pop
addr16
repnz
arpl
sar
sbb
cdq
pop
inc
push
inc
ret
sahf
pop
add
in
aas
cmp
xchg
nop
cmp
add
call
popa
(bad)
xchg
lods
pop
or
hlt
int3
shl
or
cld
add
mov
add
mov
sbb
dec
mov
add
js
sti
popa
or
in
ja
add
inc
fst
mov
jae
clc
add
jb
jmp
add
lea
pop
cdq
mov
in
and
inc
pop
add
js
jns
in
push
cmp
sbb
add
loop
and
dec
scas
dec
shr
lock
loop
nop
imul
add
xchg
add
jb
fcomp
enter
loope
mov
xrelease
xor
leave
aam
cmp
pop
adc
and
out
lods
push
or
clc
movs
mov
jl
nop
push
test
je
fcmovbe
jne
jae
syscall
pop
arpl
mov
mov
dec
in
push
adc
mov
add
ins
mov
xor
aad
push
dec
cmps
call
sbb
or
ror
inc
cli
fiadd
test
je
cmc
dec
pushf
cmp
sub
out
int3
test
repnz
sbb
add
mov
mov
jns
adc
inc
nop
rol
jmp
cmp
mul
mov
mov
ror
loopne
jl
movs
add
ins
aas
inc
out
push
fwait
add
dec
push
xor
sbb
sbb
and
sti
push
imul
pop
aas
jae
cmp
add
mov
add
dec
pop
or
mov
sar
adc
add
jns
bound
clc
out
pop
neg
dec
sbb
dec
in
xchg
add
push
mov
js
je
dec
mov
mov
call
ins
mov
popa
mov
dec
and
add
pop
pop
fdiv
jle
jecxz
add
ret
out
in
and
enter
loopne
xchg
add
fadd
imul
sbb
cs
jmp
add
push
ror
jb
push
mov
fistp
mov
add
stos
(bad)
pop
add
push
cdq
push
loopne
cmp
add
es
jmp
sub
xchg
jns
aam
pushf
sbb
xlat
ret
mov
in
xlat
cmp
daa
psadbw
pop
mov
sub
push
fisttp
les
and
cmp
mov
clc
adc
add
xchg
cmc
sbb
inc
enter
xchg
pop
mov
sub
sbb
lods
push
add
repz
push
mov
call
out
push
xor
lods
mov
or
mov
mov
inc
adc
push
fild
or
add
retw
and
(bad)
xchg
pop
hlt
out
fneni(8087
xor
imul
and
add
or
jp
xor
movs
add
lock
pop
inc
pop
jb
add
push
ret
xor
add
xchg
mov
fwait
test
cmp
in
push
repnz
xchg
std
cmps
js
pop
ins
test
lock
sub
add
cmp
idiv
inc
bsf
mov
in
int3
add
pop
sbb
add
test
popfw
nop
jg
add
inc
add
mov
mov
scas
sub
aam
inc
or
cmp
push
retf
xor
xchg
pop
mov
mov
add
in
mul
mov
mov
shr
add
mov
jae
bound
sbb
loopne
pop
push
add
mov
test
jae
add
mov
xor
in
cmp
inc
cld
pop
mov
fmul
and
sbb
repnz
add
or
add
push
add
xchg
(bad)
push
imul
pop
mov
jg
ins
add
ret
fst
out
dec
sbb
adc
cmps
js
add
hlt
mov
int
ret
loope
mov
jne
in
aaa
or
xor
jmp
jo
mov
(bad)
imul
in
rol
popf
add
push
inc
test
je
jns
test
mov
add
hlt
push
cdq
pop
stos
or
jb
mov
xchg
sbb
pop
into
test
push
das
shl
dec
add
pop
jnp
retf
push
add
dec
sbb
pop
neg
add
push
in
movs
das
or
mov
adc
add
or
adc
mov
call
jmp
ror
xor
enter
add
jbe
gs
fdiv
jnp
add
xchg
cmc
mov
xor
push
test
or
add
fpatan
cmp
mov
pcmpeqb
xchg
loopne
sbb
ss
jns
repnz
xchg
xor
lock
adc
mov
xchg
xor
jo
cs
add
sbb
call
enter
test
in
add
xchg
in
int
call
adc
out
inc
and
loope
imul
mov
in
out
adc
pop
es
adc
xlat
adc
jmp
mov
test
add
pushf
xor
xchg
push
mov
push
add
add
mov
sbb
outs
inc
pop
or
stos
popf
add
cmp
fs
ja
add
repnz
and
dec
push
mov
jno
or
imul
pop
lods
loop
repz
sbb
retf
sub
imul
or
bound
and
outs
scas
add
rcr
div
int3
add
sub
mov
iret
add
mov
enter
add
mov
test
sub
inc
cmp
stc
add
in
add
cmps
adc
push
add
not
sub
outs
mov
cmp
pop
jnp
mov
mov
scas
add
jge
add
push
ror
inc
jecxz
jmp
pop
popa
cmp
push
sub
call
pusha
aad
dec
and
sub
imul
rol
addr16
or
dec
stc
pop
daa
and
gs
cmp
in
fisttp
sbb
xchg
lahf
out
ror
mov
xchg
bound
xor
xor
gs
(bad)
out
in
clc
dec
mov
or
dec
into
push
aas
add
jp
repz
(bad)
push
sub
aas
inc
call
dec
dec
in
outs
pop
dec
fdivr
pop
add
mov
and
mov
and
daa
mov
nop
je
mov
in
fiadd
loop
jne
sar
and
pop
popa
jno
add
scas
xor
cli
jle
ss
adc
imul
out
out
xor
test
cmp
cmovns
pop
shr
arpl
pop
pop
jge
dec
fld
clc
les
cmp
adc
push
data16
add
movs
inc
mov
jmp
jne
cmp
wbinvd
pusha
sbb
lods
pop
add
pop
jnp
addr16
add
sub
outs
add
fnstsw
sar
add
mov
add
pop
adc
add
jne
(bad)
call
pop
xchg
dec
scas
add
popa
ins
cmps
es
jo
push
sub
mov
pop
xchg
aas
out
imul
hlt
bound
fcomi
mov
jl
mov
je
push
ss
sub
jecxz
add
xor
cmp
enter
push
fwait
sbb
pop
sahf
xor
add
mov
mov
add
dec
jmp
hlt
in
inc
add
retf
ins
loope
jecxz
xchg
(bad)
mov
dec
stos
cmps
push
jb
daa
mov
pop
inc
add
xchg
push
pop
push
xchg
add
popf
enter
iret
add
ret
mov
cwde
jmp
rol
in
int3
adc
stc
loopne
sub
cmp
and
push
xchg
jge
cmp
fwait
loop
fstp
int3
in
int
push
sub
or
js
xor
pushf
mov
lea
sar
js
mov
fmul
cli
xor
stos
cld
jnp
sbb
xchg
pavgw
add
shr
adc
je
adc
or
cmc
mov
push
sub
loop
add
rol
add
push
sub
push
jmp
mov
ins
ret
ins
outs
arpl
enter
add
mov
je
sahf
jb
inc
lock
ror
dec
cmps
daa
xor
adc
jnp
fwait
sbb
adc
movs
mov
(bad)
add
sbb
jg
sbb
in
mov
add
jo
jge
jp
push
add
mov
mov
dec
xor
jmp
int
xchg
sub
cmp
scas
ins
in
sbb
push
mov
sbb
dec
add
loope
jae
mov
push
fiadd
lahf
add
(bad)
dec
mov
jae
adc
xchg
mov
push
inc
sbb
or
(bad)
imul
emms
fdivrp
pop
xchg
mov
xchg
xchg
adc
jl
add
mov
fdivr
lods
loopne
inc
inc
test
and
add
fdiv
or
xchg
mov
jp
add
aad
test
(bad)
sar
xchg
add
and
rcr
adc
sub
add
fild
sbb
push
jo
add
mov
and
aas
cmp
mov
add
shl
add
jge
or
mov
pop
jmp
hlt
or
jp
cmp
cmp
fsubr
movs
enter
add
ja
rol
jmp
sahf
lahf
add
mov
mov
test
push
jp
retf
jnp
cmp
mov
imul
pop
sahf
xor
ds
nop
mov
sbb
xchg
mov
and
js
popf
jnp
inc
sub
sub
inc
mov
cmp
add
cmp
in
idiv
outs
push
stos
std
jl
sahf
ret
test
or
dec
mov
pop
jge
retf
stos
mov
add
pop
xchg
and
mov
stc
cmp
ret
scas
or
add
enter
loopne
shl
mov
xor
push
daa
or
pop
lock
frstor
adc
aad
pop
aaa
add
mov
(bad)
popa
jmp
hlt
mov
push
pop
mov
dec
add
or
push
movs
add
ror
ds
mov
int
mov
lods
push
dec
mul
add
adc
jp
inc
add
in
jmp
gs
retf
in
jne
pusha
and
mov
add
data16
cmp
cmps
scas
fwait
mov
sub
pop
push
pop
mov
pop
in
jl
adc
retf
inc
add
ret
sti
gs
cmp
mov
adc
add
lock
in
hlt
mov
das
mov
and
fist
stos
dec
add
sub
mov
(bad)
adc
(bad)
add
cmp
lahf
mov
aas
fisttp
add
or
sbb
outs
jmp
gs
movs
add
fsubr
xor
lds
mov
cs
jle
add
fldcw
aad
xchg
in
xchg
pop
lahf
repnz
pusha
xchg
add
pop
mov
adc
shl
add
mov
sbb
mov
mov
and
jbe
add
inc
push
mov
adc
xlat
xor
mov
mov
ins
add
mov
dec
(bad)
jae
adc
daa
add
sbb
xchg
xchg
loop
mov
add
or
or
icebp
int3
sti
add
cmp
add
mov
xchg
fmul
inc
(bad)
push
and
lahf
xchg
pop
or
jae
add
bound
fild
enter
sar
pop
gs
out
dec
push
add
cmp
or
inc
call
jb
adc
jg
cmp
add
add
push
cdq
(bad)
adc
popa
and
mov
add
jnp
sbb
xchg
aam
or
cmp
paddsb
sahf
rol
repnz
xor
shl
add
shl
pop
out
sbb
mov
add
les
add
jno
push
movaps
lock
jne
dec
cld
and
sub
mov
add
cmps
loopne
sub
jmp
out
in
test
mov
sar
loop
xchg
add
mov
push
sbb
call
cmps
add
and
xchg
or
add
sbb
mov
cmp
add
xchg
add
fild
sti
loopne
cmps
dec
add
sub
xchg
and
(bad)
mov
dec
rcr
add
imul
mov
rcl
add
daa
add
jnp
mov
scas
mov
ss
shl
addr16
dec
xchg
or
adc
jb
xor
loopne
sti
fstp
cwde
add
outs
loop
out
or
je
add
mov
jp
out
(bad)
xchg
sub
neg
inc
mov
add
arpl
xchg
pop
xchg
jno
sub
sub
add
or
out
cmps
sar
test
ins
xor
cmp
retf
cs
je
and
inc
ins
mov
or
push
mov
add
mov
or
icebp
push
mov
rol
ins
jae
add
jmp
add
pop
mov
rol
add
sbb
cmp
movs
add
cli
jo
daa
mov
mov
add
cmp
in
mov
and
mov
pop
add
jb
stc
and
hlt
jge
mov
xor
not
nop
mov
add
jmp
clc
sbb
fld
das
(bad)
sbb
dec
cmp
leave
mov
cmp
push
es
rol
or
pop
bound
jle
add
repnz
mov
into
loope
cmp
add
add
jmp
add
xchg
mov
add
loopne
inc
push
dec
pop
sbb
add
push
push
xchg
add
mov
push
call
pop
and
add
rcl
data16
sti
add
scas
push
leave
jae
inc
and
cmp
aad
add
retf
jbe
mov
add
cli
fimul
aaa
or
neg
pusha
and
dec
popa
loope
or
xor
push
lods
out
int3
sbb
push
pop
loopne
(bad)
cld
add
mov
add
xor
mov
jbe
hlt
xlat
jnp
add
test
push
aaa
repz
add
es
pop
cwde
pop
mov
cs
or
retf
cmc
lea
add
in
add
add
out
push
(bad)
cmp
mov
mov
cli
add
out
inc
sub
xchg
push
adc
inc
and
add
push
daa
fld
fdivr
dec
or
cmp
add
jnp
mov
cmp
pop
add
mov
push
add
hlt
scas
loop
sar
jle
cmp
pop
jmp
adc
add
(bad)
push
or
pop
add
or
fstp
jbe
jne
fbld
retf
add
mov
ja
jbe
dec
sbb
jnp
add
sbb
clc
xchg
cmp
push
je
fucomip
cmp
mov
mov
add
xchg
and
push
jg
push
dec
dec
fldenv
pop
add
ins
out
xchg
dec
mov
inc
xlat
loop
inc
sbb
inc
inc
add
xchg
add
adc
dec
or
fild
pop
leave
pushf
shl
test
neg
jl
dec
aas
jae
fsub
add
test
int3
add
shl
jl
push
out
ins
mov
add
add
clc
lods
cdq
sti
add
bnd
jns
mov
dec
mov
push
or
mov
jns
add
pop
sbb
es
ret
xor
mov
fwait
dec
test
test
mov
push
push
sbb
sbb
retf
clc
add
cmps
es
add
stos
sbb
test
or
rol
adc
imul
and
mov
aam
shl
nop
inc
sti
push
mov
fiadd
das
xor
popf
std
push
bound
mov
popa
outs
leave
add
test
mov
icebp
jmp
cmps
jl
test
pop
sub
mov
adc
js
add
(bad)
or
or
add
and
add
jmp
ins
xor
add
mov
add
retf
imul
xor
cmp
adc
aad
add
dec
inc
mov
clc
mov
inc
dec
fisub
add
jg
pop
jl
push
loopne
fnstsw
add
js
jp
sbb
push
push
add
daa
mov
pop
push
aas
add
mov
pop
add
pushf
test
iret
add
pop
les
jmp
fdivr
mov
adc
xchg
cmp
test
out
into
pushf
push
and
push
dec
inc
in
sbb
dec
jae
aas
and
push
sahf
cmp
cmps
add
test
mov
or
clc
ja
sbb
mov
and
xchg
adc
call
and
lock
sbb
ja
xor
add
push
shl
les
daa
out
es
add
enter
jbe
add
pop
xchg
sbb
mov
lahf
push
in
pop
cmp
adc
(bad)
or
mov
pop
mov
add
adc
ja
cmp
inc
and
lods
mov
fisttp
jl
add
xchg
push
pop
addr16
add
jle
mov
add
push
daa
mov
fadd
idiv
psraw
or
in
(bad)
sti
repz
jmp
fstp
sbb
and
call
dec
adc
add
fs
call
pop
dec
and
inc
int
call
in
ds
clc
ror
(bad)
jmp
lods
add
add
(bad)
lock
icebp
add
adc
repz
mov
stc
in
or
add
pushf
or
sbb
mov
cmp
inc
aas
push
mov
cmp
mov
daa
fadd
in
add
xchg
sub
(bad)
dec
dec
neg
jnp
shl
icebp
xchg
mov
add
push
ror
cwde
in
mov
push
or
add
jl
sbb
add
sbb
pop
retf
add
repnz
icebp
mov
enter
add
pop
xchg
add
jg
not
or
and
xlat
add
loope
sbb
and
retf
xor
add
jno
adc
xor
call
sbb
cld
daa
add
lock
cmp
cmps
(bad)
rcl
push
sub
add
cmp
add
stos
sub
add
mov
xchg
dec
adc
mov
cs
imul
mov
push
pop
icebp
push
inc
sysexit
inc
adc
fdivr
sub
enter
fptan
xor
int
push
mov
cmc
in
dec
ficomp
mov
add
and
xchg
adc
retf
mov
mov
stos
es
add
jmp
shr
in
imul
movs
pop
add
out
cmp
sub
fdiv
das
jmp
lahf
add
aaa
ret
cmp
add
mov
enter
and
push
scas
add
mov
pop
mov
add
in
nop
push
fadd
cmp
daa
push
in
retf
adc
jae
int
mov
add
push
das
inc
movs
es
add
clc
daa
push
fstp
loop
out
inc
add
mov
fild
adc
add
add
addr16
xor
das
stc
jg
mov
ret
into
add
clc
sub
add
xor
cmp
pop
sbb
cld
sbb
sub
shl
out
sti
xor
out
and
mov
or
add
pushf
and
cmp
jmp
xchg
sbb
inc
jp
cmps
inc
add
test
out
xlat
cmp
inc
hlt
leave
clc
mov
mov
add
fcom
fistp
outs
movzx
xchg
into
(bad)
ins
nop
retf
jbe
mov
hlt
mov
fld
mov
add
outs
les
inc
inc
add
jno
mov
pop
in
sub
loope
ins
stos
xor
jo
cmp
mov
jle
outs
test
aam
retf
xor
push
sbb
ficom
add
jg
ins
adc
mov
retf
pop
mov
rol
add
out
and
inc
push
icebp
imul
pop
outs
je
and
cmp
test
inc
pop
out
out
cmp
add
ins
(bad)
sbb
cli
push
sub
mov
mov
lea
xor
mov
scas
xchg
xor
repz
sub
mov
xchg
pop
aam
in
stos
ins
push
pushf
imul
loopne
xlat
and
pop
ss
movs
mov
pop
pop
fsubr
push
test
sub
call
je
fstp
inc
mov
fwait
out
add
pop
mov
dec
test
test
sub
rol
out
jns
into
inc
ds
int
pop
or
scas
leave
retf
repz
or
jg
je
mov
add
mov
sbb
push
adc
cmps
ja
neg
out
add
mov
inc
pop
xchg
jns
loopne
add
fld
lods
jle
sbb
ds
call
push
(bad)
mov
cdq
xor
add
inc
push
dec
(bad)
ret
lods
add
cmp
or
pop
out
pop
add
dec
jns
popa
add
push
jnp
sub
sub
and
jmp
mov
mov
pop
mov
clc
push
jbe
leave
lahf
add
call
outs
xlat
scas
dec
sti
not
or
cmps
add
inc
ss
jo
(bad)
cld
mov
retf
xor
jne
outs
cmp
jmp
xor
dec
rol
call
adc
dec
sub
in
pop
jbe
and
imul
cmp
mov
jo
fstp
adc
rol
pop
xchg
xor
aam
push
jae
lock
jmp
adc
fsubr
ds
mov
pop
cmp
push
add
mov
aam
dec
imul
fsub
add
fbstp
lock
mov
jle
push
sbb
cld
repz
dec
fsubr
push
pop
ror
mov
sbb
or
add
jl
pusha
loop
aas
cmp
mov
lahf
cs
push
mov
jne
mov
mov
jle
pop
movs
push
add
aas
xchg
ins
in
repnz
jmp
push
stos
inc
pop
mov
jg
cmp
aad
jne
fs
dec
cli
add
xor
add
aaa
add
or
jmp
shl
push
add
xor
cdq
nop
add
std
fwait
mov
pusha
mov
or
call
jmp
sbb
icebp
fs
data16
dec
in
in
jne
cmp
xchg
add
fwait
and
in
mov
lds
sub
out
out
out
lods
les
retf
pop
push
add
sti
sbb
mov
outs
adc
mov
jae
sbb
xchg
retf
mov
and
cmps
js
or
scas
add
(bad)
xchg
out
aaa
fild
inc
mov
clc
xchg
retf
mov
aad
jne
inc
add
lock
jge
xchg
cmovge
xor
leave
mov
push
arpl
pusha
pop
xor
ret
jae
daa
out
ret
add
sar
(bad)
icebp
sbb
xor
fs
push
add
push
mov
mov
and
fistp
into
add
or
enter
js
dec
add
outs
aaa
lahf
mov
popa
cmc
cmps
xchg
sub
and
ret
adc
adc
adc
dec
mov
mov
add
ret
add
adc
out
mov
popf
mov
mov
xor
cmp
fld
sbb
mov
aaa
test
cld
lds
adc
das
mov
mov
cs
inc
dec
mov
fnstcw
xchg
add
mov
sbb
pop
stc
add
rcr
inc
inc
sbb
mov
fstp
fiadd
imul
and
hlt
add
mov
mov
dec
add
les
pop
push
fnsave
cmp
jmp
jo
mov
aad
popa
in
sbb
push
mov
lds
pop
mov
jnp
add
out
mov
fst
js
cs
xchg
add
sar
add
cmp
and
ins
mov
add
out
scas
aas
inc
(bad)
dec
add
retf
cld
xchg
popf
jmp
mov
test
add
cmp
mov
out
push
jmp
js
in
rcl
pop
mov
adc
xlat
add
fdivr
push
ror
ds
sbb
(bad)
mov
in
je
add
shl
xor
xchg
test
add
aad
jbe
pop
shl
test
add
sub
jo
sbb
inc
add
push
push
pop
add
mov
mov
add
push
jmp
or
pop
hlt
mov
out
add
ret
loope
push
clc
add
(bad)
xchg
mov
mov
cs
pop
lock
add
mov
fadd
add
xlat
jmp
jns
jne
mov
and
int3
and
dec
or
mov
xchg
add
rcl
add
or
sbb
jecxz
push
(bad)
sub
add
jle
sbb
rcr
adc
inc
movs
add
or
aad
jns
jmp
enter
and
stos
cmc
mov
mov
xchg
mov
test
(bad)
sar
sub
cmp
sub
stc
add
pop
outs
mov
cli
in
lods
add
and
cs
vcvtps2dq
enter
fdiv
xchg
sbb
aaa
ret
mov
stos
or
daa
gs
hlt
push
pop
idiv
add
xchg
outs
scas
cld
push
xchg
adc
shr
adc
int
pusha
mov
shr
in
jae
fcmovnb
fwait
call
add
or
pop
aaa
loopne
cmp
and
pop
(bad)
aam
add
in
call
push
add
push
es
add
loope
mov
int3
cli
popf
lods
imul
jmp
pop
sbb
dec
or
(bad)
into
daa
cmps
add
pop
push
(bad)
pop
mov
(bad)
jae
popf
(bad)
push
jne
or
loopne
ret
bound
pop
call
add
aam
aas
mov
adc
or
xchg
rol
xchg
popa
dec
add
popf
xchg
and
mov
xchg
pop
or
push
ret
cdq
sahf
repz
add
fbld
jle
dec
jge
add
ins
(bad)
xchg
lahf
add
add
inc
add
mov
add
in
add
fwait
xor
(bad)
push
imul
nop
mov
add
sbb
aam
out
pop
adc
mov
push
or
add
cdq
mul
pop
hlt
or
pop
push
repz
or
xor
push
push
cmp
or
cwde
dec
rcr
jnp
addr16
daa
jmp
movs
fcmovbe
xor
call
pop
add
push
add
and
inc
push
mov
sti
cmps
jne
int3
outs
xor
jo
add
push
xor
jo
adc
movs
jmp
dec
add
inc
pop
adc
adc
test
aam
jns
jmp
mov
xor
je
sti
jbe
xor
retf
inc
add
mov
fcomp
inc
outs
jno
imul
hlt
stc
ins
mov
xor
out
mov
pop
mov
and
cld
adc
(bad)
pop
(bad)
jnp
test
scas
add
repnz
mov
add
aam
sbb
in
cmp
push
nop
(bad)
jmp
outs
add
cmp
shl
pop
pop
inc
es
xchg
xor
addr16
add
popa
add
sub
test
xchg
popf
pusha
mov
add
les
std
jle
inc
add
loop
fiadd
in
jp
cmp
(bad)
hlt
jmp
popf
add
adc
or
xor
add
jl
cdq
shr
into
xor
shl
dec
int
xor
mov
in
rcr
mov
pop
mov
mov
add
jecxz
jmp
dec
mov
add
leave
fld
add
mov
movs
stos
arpl
pop
cs
test
adc
pop
daa
xor
stc
inc
mov
jmp
or
mov
lods
ret
les
rol
mov
jl
pop
mov
outs
add
pop
adc
loopne
add
stos
imul
pop
inc
bound
(bad)
sbb
xchg
es
or
pusha
add
and
das
sub
into
in
add
icebp
and
int
dec
add
cmp
or
lahf
cmp
dec
mov
jmp
add
xor
sbb
add
dec
and
push
inc
lods
scas
sub
add
loope
scas
jmp
rol
push
xlat
adc
and
sbb
add
ins
mov
je
fst
jo
push
ds
and
lea
mov
enter
in
jmp
add
sahf
or
lods
aam
rcr
out
add
adc
inc
add
dec
mov
xlat
jmp
das
mov
ins
add
test
in
(bad)
jge
icebp
sbb
pop
repz
cld
pop
loope
jnp
in
jne
add
xlat
shl
(bad)
aad
sbb
cdq
fwait
nop
mov
and
push
int3
leave
add
mov
outs
jmp
shl
pop
movs
add
pushf
call
rcl
or
stc
push
(bad)
jecxz
std
add
add
or
mov
or
das
fsubr
std
movs
pop
cmp
pop
repnz
aam
mov
add
retf
arpl
cmp
faddp
add
xor
xor
addr16
outs
test
mov
push
sub
lock
jl
ja
cmps
add
in
clc
add
aam
mov
push
ja
add
mov
or
add
push
or
repnz
mov
cmps
out
pop
jmp
push
add
mov
push
add
rcl
fild
push
ds
ins
rcl
pushf
sbb
ss
add
fild
add
cmp
dec
mov
stos
add
sbb
jle
clc
mov
xchg
add
or
loopne
pushf
mov
rol
dec
iret
test
aaa
aad
mov
loopne
repnz
popf
call
jecxz
int3
enter
jmp
aad
jle
es
enter
or
xchg
and
adc
adc
and
add
ds
outs
repnz
rcr
inc
or
and
add
or
cs
sub
adc
sbb
add
in
aad
bound
sbb
add
ins
or
dec
sub
rcr
jns
xchg
add
jmp
loopne
sub
iret
mov
mov
add
cmps
cmp
test
arpl
leave
pop
or
pop
aad
stos
lds
push
cwde
ins
scas
mov
push
xor
pusha
test
mov
jmp
jae
and
imul
pusha
xchg
and
add
je
in
sbb
pop
add
push
inc
retf
mov
add
xor
iret
jecxz
call
dec
shr
pop
(bad)
sub
shr
sti
stc
jg
aam
popa
das
sbb
add
push
mov
ret
pop
(bad)
ds
sub
jge
add
or
xchg
(bad)
int3
jge
fmul
imul
adc
sbb
pop
fsubrp
lea
(bad)
add
mov
mov
jl
call
lahf
ins
ja
lock
lods
sbb
stos
fld
iret
pop
ins
mov
outs
out
cmp
test
add
push
and
lock
jae
inc
out
int3
sub
js
add
cmc
icebp
call
add
add
sbb
lock
or
dec
jle
adc
js
jmp
push
std
out
push
pop
mov
inc
mov
add
pop
mov
pop
jno
mov
int
jo
push
sbb
add
add
and
mov
and
int3
daa
pushf
add
add
pop
sub
pop
cmp
cmc
ds
aam
ss
cli
push
add
adc
in
add
and
cmp
and
or
add
xchg
mov
rol
stos
fisubr
add
jmp
add
and
in
add
mov
add
xchg
out
fisttp
dec
ficom
gs
cmp
inc
sahf
fdiv
sub
pusha
and
aad
loope
mov
jo
pop
jnp
cmp
ror
push
stc
mov
mov
dec
adc
add
ret
sub
xchg
pop
dec
add
fnstenv
add
fcomp
test
xchg
mov
js
push
lods
pop
inc
mov
in
mov
add
scas
cdq
sbb
stos
mov
xlat
push
retf
sbb
clc
and
mov
call
xor
mov
std
repnz
pop
call
mov
stos
add
fcom
sub
push
add
cmc
aad
popf
sbb
jnp
adc
cmc
in
sub
cdq
xlat
addr16
mov
jae
mov
mov
inc
dec
mov
(bad)
push
call
mov
add
mov
sti
mov
pop
(bad)
pop
jns
int
push
add
outs
xchg
fiadd
pop
addr16
jmp
jbe
(bad)
add
jb
push
dec
cs
adc
ror
sub
mov
pop
outs
mov
fldenv
cmps
mov
test
dec
push
sets
iret
repz
add
or
icebp
mov
(bad)
cmps
ds
mov
shr
add
and
mov
adc
inc
(bad)
idiv
in
pop
fstp
pop
add
xor
mov
xchg
(bad)
outs
test
sbb
add
pushf
fidivr
add
out
std
mov
cs
xchg
inc
stc
or
shl
iret
mov
int
add
and
das
jne
add
pusha
or
add
nop
sbb
ins
aam
fucomip
fs
out
pop
enter
pushw
and
cmp
xor
or
and
adc
adc
or
call
aaa
xchg
add
cmp
in
push
adc
das
add
push
nop
gs
in
jmp
pop
xor
sbb
mov
cmps
lds
dec
int
in
adc
in
inc
das
dec
lock
jo
mov
cmp
push
enter
xor
sbb
loopne
sub
lahf
inc
lds
add
xchg
dec
mov
mov
pandn
std
inc
push
add
into
fwait
inc
mov
inc
daa
sbb
ret
pop
lods
jnp
ja
mov
aad
add
cli
jle
call
jb
shl
daa
movs
std
cpuid
mov
sbb
icebp
or
outs
aas
add
inc
ins
int
xchg
cmp
leave
idiv
test
aaa
xor
int3
jle
cs
and
mov
enter
add
add
scas
fucomi
add
and
or
and
es
add
xchg
stos
pop
retf
gs
(bad)
out
pop
jge
clc
jne
js
cmp
jecxz
or
outs
jl
test
add
mov
add
es
packsswb
pop
adc
add
jg
iret
mov
add
inc
enter
outs
add
lahf
inc
out
(bad)
jmp
cmp
das
sbb
mov
add
mov
mov
sbb
add
mov
push
nop
das
or
std
add
add
ret
fsubr
icebp
jp
in
mov
clc
inc
mov
mov
jg
add
sbb
jno
xlat
pop
lods
(bad)
mov
xor
inc
cdq
aas
push
test
(bad)
out
xor
add
sub
out
std
add
loopne
add
add
mov
mov
add
sar
ret
sahf
jne
sbb
mov
outs
push
mov
cmp
pop
fmul
out
rcr
add
adc
inc
out
dec
hlt
mov
stc
(bad)
push
lea
fisttp
jns
dec
arpl
out
loopne
je
xchg
jno
mov
sahf
pop
push
adc
add
in
sbb
add
hlt
cmps
xchg
sbb
scas
pushf
lahf
ret
adc
sbb
out
(bad)
call
ror
shl
fild
jnp
push
push
loope
fiadd
ror
push
fbld
add
mov
pop
ins
sub
mov
jl
pusha
dec
inc
jo
add
pop
pop
xor
pop
(bad)
(bad)
shr
push
pop
movs
add
sbb
dec
(bad)
mov
cmps
pandn
sbb
xor
add
movs
shl
inc
inc
outs
cld
push
scas
int3
mov
add
sti
or
dec
xchg
pop
adc
add
fld
lock
ds
out
cld
ficom
cmc
push
jne
pop
stos
sub
add
adc
xchg
mov
add
inc
in
lahf
jnp
ret
add
test
adc
jne
jmp
mov
push
mov
pop
fisub
fdivr
(bad)
iret
div
rcl
outs
mov
aaa
pop
hlt
xlat
nop
add
jne
xor
sbb
jle
call
add
xor
dec
xor
add
retf
stos
jmp
and
js
(bad)
adc
or
mov
jp
adc
add
out
cmps
std
dec
loopne
in
xchg
add
push
push
and
inc
inc
pop
adc
das
mov
pop
ror
xor
add
mov
cli
gs
fild
xchg
add
clc
xchg
mov
sbb
jno
push
retf
pop
out
add
push
popa
add
(bad)
fisub
fwait
jmp
sub
mov
cs
loop
add
adc
and
mov
mov
add
call
fisttp
xchg
add
out
mov
pop
jno
mov
cmp
retf
popf
pusha
in
or
hlt
mov
fdiv
sbb
jecxz
sbb
cmps
add
mov
cmp
(bad)
jle
cmp
ins
mov
add
fbstp
ins
pop
adc
mov
shl
cs
inc
push
push
mov
shl
lock
outs
push
(bad)
mov
std
cmp
add
stc
sub
xor
xlat
add
pop
cmp
cmp
push
pop
jns
fld
stos
int3
sbb
jg
cmp
mov
sub
pop
add
or
pop
jecxz
add
sub
xchg
mov
jp
add
sti
test
inc
sbb
cmp
jmp
cdq
adc
jbe
div
pop
add
jae
jl
das
jecxz
popa
loopne
jb
add
xor
daa
dec
push
xor
imul
or
push
push
cmp
sbb
push
call
fdiv
mov
add
mov
sub
shr
js
ins
jmp
adc
jae
cmc
sbb
dec
add
or
out
jbe
pop
xchg
jb
jne
in
mov
clc
xor
hlt
sbb
ja
jnp
sti
or
cld
and
aaa
jp
pop
push
ficomp
jo
sbb
jmp
sahf
add
jg
mov
ret
jne
cdq
adc
add
push
mov
imul
pop
ss
and
add
pop
imul
adc
push
xchg
xor
test
pop
sbb
es
repz
into
and
mov
dec
ins
sub
out
rol
iret
int
sub
sbb
push
pusha
cmp
leave
rcr
retf
repnz
scas
xchg
retf
add
cmps
stc
bound
pop
ret
adc
out
adc
inc
and
enter
cmp
xchg
jl
mov
test
call
imul
dec
shl
pop
ja
lds
push
mov
icebp
int3
jno
adc
loopne
add
int
push
pop
add
add
jae
pop
gs
add
or
jp
push
dec
adc
adc
and
or
gs
xchg
cmp
mov
jmp
add
adc
sar
aaa
idiv
int
call
mov
mov
(bad)
xor
xchg
jnp
aas
(bad)
es
lock
mov
sub
sub
add
jge
push
cmps
mov
xchg
pop
xchg
add
jno
shl
sub
imul
ins
jg
add
cmp
pop
stc
not
es
mov
mov
jge
repz
(bad)
or
in
mov
pushf
jg
out
cmp
add
ret
add
xlat
hlt
fwait
adc
xor
bound
ret
lock
add
es
mov
push
push
pop
daa
xchg
fild
int
rcr
loop
add
shr
sti
inc
cli
ret
add
mov
pop
fistp
xchg
add
aad
mov
test
fidivr
test
dec
push
jns
add
in
leave
push
inc
stos
inc
and
movs
or
shr
pop
or
clc
imul
jge
sbb
pcmpgtw
inc
mov
mov
inc
adc
mov
cmp
fcomp
xchg
loopne
js
sub
mov
pop
or
or
add
lds
cmp
out
fimul
mov
std
call
loopne
inc
cmp
ror
test
pop
fbld
cmc
pop
test
sbb
pushf
mov
add
xor
mov
pop
mov
pusha
repz
cwde
push
and
add
jle
push
aas
xchg
dec
shr
and
jae
clc
adc
fmul
sahf
jg
call
cli
add
stc
mov
ret
adc
cld
xchg
test
sub
or
add
ds
mov
jae
lahf
add
paddusw
nop
cmp
adc
jno
push
hlt
cmps
add
icebp
in
lds
call
jmp
cmp
lock
test
popf
jmp
shl
gs
add
aam
bound
mov
fisubr
jecxz
clc
lahf
sub
add
mov
mov
sub
pop
push
les
(bad)
ret
inc
fcomp
in
ret
add
mov
sahf
dec
xchg
mov
jp
ins
xchg
pop
dec
mov
jl
inc
mov
dec
call
add
arpl
call
xchg
loop
retf
pop
cmp
les
imul
xor
in
pushf
jnp
push
call
aam
stos
mov
ja
xor
add
mov
jle
add
inc
fisub
cwde
mov
mov
inc
out
(bad)
and
push
daa
inc
pushf
mov
fadd
add
push
shr
pop
sub
(bad)
cld
jg
dec
test
or
xchg
pusha
xor
imul
ficom
mov
add
xor
mov
jmp
pop
mov
push
dec
bound
add
(bad)
mov
jle
sub
sub
add
sti
dec
sbb
lds
xchg
adc
ror
adc
add
leave
sbb
xchg
bound
scas
in
fdivrp
add
or
or
(bad)
xchg
xor
jo
dec
dec
inc
jge
add
mov
popf
jno
mov
cld
daa
sub
in
add
pop
sub
add
adc
imul
push
clc
je
ror
js
stos
(bad)
xchg
inc
ret
push
ja
xchg
add
fucom
sub
mov
rol
and
mov
add
jbe
sar
dec
pop
mov
push
add
xchg
add
jl
pop
jmp
fadd
dec
pusha
or
mov
(bad)
in
cdq
mov
push
fidivr
mov
call
inc
pop
pop
jo
or
in
inc
sbb
push
test
mov
shl
sub
inc
ret
rol
cmps
cmp
add
jmp
add
addr16
xor
sbb
add
fwait
push
inc
xor
pusha
push
les
inc
ins
push
dec
add
add
out
sahf
add
jmp
outs
maxps
mov
es
icebp
adc
cmc
cli
dec
add
daa
shl
test
add
xchg
mov
dec
call
add
fbld
push
(bad)
mov
or
jo
sbb
in
loope
mov
fdiv
add
mov
inc
jno
(bad)
jb
add
xlat
rcr
daa
add
cmps
inc
inc
lahf
mov
loop
mov
push
xor
icebp
std
jmp
dec
cli
mov
cmp
loopne
mov
push
push
stos
pop
stc
pop
iret
xor
xor
pop
add
pop
push
pop
stos
mov
and
and
or
cmp
push
sbb
vpsubd
jnp
mov
cmps
jg
fst
aam
das
retf
add
out
pop
(bad)
adc
(bad)
jmp
mov
add
retf
and
cmc
bound
sti
lods
jno
in
aam
(bad)
adc
fdivr
and
inc
jne
mov
sbb
xor
mov
xor
dec
cmp
mov
ins
adc
add
xchg
daa
sbb
add
lods
dec
mov
add
xchg
add
js
jmp
inc
jo
lock
add
js
xor
sub
rcl
dec
rcl
inc
push
dec
xor
adc
ss
(bad)
mov
(bad)
fisub
sahf
dec
into
int3
stc
(bad)
shl
(bad)
xchg
pusha
mov
pop
les
(bad)
mov
mov
cmp
add
add
jmp
sbb
fdiv
jle
je
js
add
cmp
add
sub
push
add
sub
hlt
jns
adc
shr
je
test
dec
mov
pop
inc
fiadd
movs
lods
jno
mov
push
int
adc
cmp
shl
add
pop
outs
push
cmp
ret
sub
add
cdq
shr
push
mov
popf
inc
push
jno
mov
push
pop
pusha
cld
rcl
add
jno
mov
xchg
push
(bad)
mov
cmps
push
push
push
adc
pop
je
retf
xor
jge
push
pop
add
call
jne
add
and
sbb
xor
mov
inc
sbb
test
push
mov
int
jge
add
(bad)
in
arpl
mov
cs
add
xchg
scas
dec
test
jne
add
pop
sbb
pop
test
xor
jp
ret
sbb
push
cmp
dec
mov
movs
push
adc
jmp
mov
lods
(bad)
repnz
sub
lds
sbb
mov
pop
ja
add
cli
inc
push
loop
fisttp
mov
sbb
or
call
push
add
cmp
and
pop
dec
mov
hlt
xor
pop
push
dec
retf
mov
add
pop
adc
add
mov
str
mov
scas
adc
sub
add
mov
repnz
pushf
not
aad
add
mov
outs
and
xchg
addr16
jge
cmps
rol
mov
xor
hlt
cmp
mov
jb
call
mov
mov
sub
xchg
mov
dec
and
push
(bad)
mov
xchg
cmp
dec
loopne
repnz
clc
dec
lock
out
mov
jecxz
pop
js
xor
cdq
add
sahf
mov
mov
add
enter
sbb
and
mov
add
rcr
leave
imul
lsl
cmp
shl
push
add
stos
sbb
add
lea
clc
pop
add
nop
leave
mov
add
fsub
les
xchg
fdivr
cmp
add
mov
mov
inc
jno
(bad)
shr
add
jp
mov
sbb
inc
aas
rol
pop
shl
clc
push
fwait
call
fldcw
enter
dec
stc
add
jle
add
sbb
sub
or
outs
pandn
cmp
sub
push
cmp
or
mov
dec
sahf
adc
bound
and
push
add
add
mov
sub
repnz
mov
xor
std
xor
add
out
out
fdiv
bound
or
xchg
pusha
call
add
(bad)
xor
fdiv
jle
cmp
shl
push
(bad)
lods
jae
sti
test
into
add
(bad)
cld
inc
sbb
mov
aas
pusha
aaa
lods
ins
xchg
add
mov
(bad)
call
cmp
cmps
sub
scas
mov
dec
clc
cmp
shl
js
push
xchg
inc
in
adc
push
xor
cmp
add
xchg
and
sbb
popf
ja
inc
add
enter
dec
imul
xor
in
cmps
add
sar
mov
inc
jns
dec
add
dec
mov
and
inc
aas
jmp
add
adc
pop
leave
cmp
cmp
jl
repz
xor
add
call
and
mov
bound
loope
je
pop
and
aas
retf
mov
test
sti
or
add
inc
jp
jns
ins
adc
clc
mov
sbb
leave
jne
stos
(bad)
ds
mov
sub
push
pop
dec
xor
or
loop
push
gs
test
or
cmp
mov
es
cmp
inc
and
aam
int3
cmps
or
ins
shld
pushf
aaa
pusha
dec
loope
inc
sbb
imul
into
rol
push
in
retf
cmp
push
sub
mov
fbld
shr
push
sahf
dec
pushf
and
sbb
add
mov
cmp
cli
inc
or
xchg
adc
movd
bound
mov
adc
or
inc
cs
dec
and
add
(bad)
mov
add
fsub
movs
add
xchg
jmp
dec
ret
(bad)
cmp
je
xor
pop
adc
imul
push
mov
cmp
jecxz
pop
shl
pop
cmp
jl
pusha
ins
jo
adc
adc
push
mov
xchg
daa
in
xor
hlt
and
add
(bad)
adc
mov
add
sar
add
dec
or
outs
push
cld
lock
(bad)
clc
jmp
sbb
push
inc
add
in
sub
push
je
inc
pop
xor
addr16
mov
repnz
jg
jp
clts
scas
into
add
mov
add
popa
paddd
xor
and
push
mul
add
outs
jb
cmp
mov
cmc
addr16
jmp
mov
add
jmp
ror
inc
movs
push
popf
jmp
add
and
xlat
lods
aas
jo
add
xchg
cwde
in
jmp
bound
mov
cdq
and
sti
clc
fs
test
call
(bad)
sar
cdq
add
icebp
inc
or
fld
les
popa
xsaveopt
ins
test
lds
sbb
ss
mov
add
loope
mov
loop
lea
push
pop
fsubr
mov
cmp
jns
sub
add
or
sbb
dec
add
adc
call
or
scas
add
ror
ss
xor
movs
mov
repnz
mov
cmc
jp
or
movs
inc
add
mov
sub
fldenv
stc
add
fdiv
and
in
cmps
rcr
add
mov
jns
add
cmp
into
push
push
push
push
cmps
and
add
push
push
sahf
mov
(bad)
shr
sub
add
mov
outs
cmp
add
mov
in
mov
sub
leave
push
mov
jmp
movs
je
jg
mov
jb
fimul
mov
ror
push
adc
xor
pop
mov
and
pop
ins
das
or
xor
xchg
ss
add
cli
out
add
xor
lods
add
xchg
add
(bad)
mov
out
hlt
xchg
sbb
dec
xlat
loop
jl
add
enter
das
call
sahf
test
mov
sbb
icebp
xchg
popa
add
sbb
cmps
add
xchg
call
inc
cmp
int
adc
aad
push
mov
mov
add
xlat
test
test
cmp
ret
nop
leave
mov
fild
inc
jno
xchg
outs
mov
aam
mov
push
sub
mov
inc
mov
push
ret
pop
jns
mov
cmp
repz
je
adc
int3
add
scas
enter
add
aad
(bad)
stc
mov
xchg
or
cmp
scas
retf
adc
or
sbb
add
pop
js
out
jg
add
pushf
fist
das
mov
xor
rol
outs
cmp
int
faddp
xlat
pushf
xchg
add
ins
sbb
shl
mov
mov
into
mov
in
add
push
ins
ret
je
pop
sub
fld
xor
xchg
inc
or
sbb
mov
mov
mov
or
les
add
cs
xchg
inc
add
sub
mov
stos
sbb
pop
arpl
sahf
pop
dec
in
push
inc
cmps
inc
push
or
hlt
loopne
ins
ja
cmp
lods
add
sbb
and
sub
add
clc
inc
add
repz
jg
je
add
lahf
sbb
inc
bound
jne
sbb
add
icebp
outs
xchg
(bad)
adc
pop
mov
loope
fsubr
pusha
outs
loopne
push
jns
push
mov
add
shr
add
mov
add
mov
add
mov
imul
lahf
sbb
add
sbb
xlat
out
out
adc
mov
mov
push
mov
dec
das
adc
data16
xor
pop
mov
gs
arpl
add
cmps
loope
mov
fld
add
imul
les
arpl
fdivr
(bad)
scas
jecxz
imul
(bad)
xchg
out
imul
add
pop
(bad)
fcomp
daa
add
xchg
mov
into
jmp
sbb
push
mov
hlt
and
mov
add
test
pop
adc
cmp
adc
adc
adc
jg
pop
mov
stos
pop
cld
pop
add
mov
mov
jae
mov
jge
cmp
xchg
pusha
scas
shr
add
mov
idiv
pop
call
jle
pop
rol
clc
add
(bad)
mov
aad
add
push
ins
inc
dec
minps
fisub
rcl
pop
push
xlat
add
sbb
repnz
das
cwde
or
pop
add
outs
inc
add
bound
cmc
add
repz
and
jns
add
icebp
adc
std
add
pusha
adc
sbb
sub
imul
(bad)
cmp
sbb
cdq
cld
mov
push
mov
cmp
imul
neg
es
pop
add
cmc
add
mov
push
sub
ret
sbb
iret
sti
inc
xchg
lds
push
cs
jp
lea
(bad)
(bad)
mov
loope
in
add
sbb
js
loopne
xchg
push
sahf
inc
or
and
cld
add
xor
pop
xchg
rcl
adc
jp
cmp
mov
sbb
gs
add
adc
or
call
jns
jae
xchg
add
enter
inc
sbb
add
fiadd
cld
add
retf
add
mov
cmps
jmp
add
jge
mov
mov
inc
in
jmp
dec
cmps
add
adc
(bad)
or
add
test
enter
(bad)
sub
adc
jl
stos
mov
add
jmp
(bad)
sar
add
pop
jp
add
test
pushf
test
jmp
xor
aad
add
(bad)
imul
sbb
mov
dec
dec
jnp
sbb
cmp
in
add
cmp
ins
jae
add
cmp
push
add
xchg
jl
test
and
add
xchg
les
add
inc
paddw
add
mov
call
push
sbb
stos
cs
pop
cwde
ret
nop
inc
mov
fwait
shl
adc
inc
out
lds
add
push
xor
mov
lahf
cmp
aaa
sub
loop
mov
fsub
xor
mov
push
xor
(bad)
sbb
leave
sub
pop
mov
add
retf
jmp
(bad)
mov
add
pusha
jl
fdiv
repnz
inc
pop
jg
jmp
call
retf
ret
push
movs
pop
lahf
add
cmp
cs
and
fiadd
aam
aad
movs
mov
add
jns
fwait
outs
out
jnp
fxrstor
pusha
data16
add
lods
(bad)
add
xlat
lock
sbb
pushf
dec
add
test
cmp
jb
pop
out
int
xchg
or
(bad)
sub
dec
jg
add
es
mov
inc
push
test
lahf
sub
inc
pop
sub
jb
or
je
cmp
and
test
jno
mov
(bad)
jb
out
idiv
add
repnz
fs
into
push
mov
lods
cmp
xchg
mov
mov
fcmove
push
ss
xor
push
inc
jg
repnz
js
mov
data16
popa
aam
dec
pop
sti
add
ds
aaa
dec
hlt
in
loop
xchg
add
in
cdq
mov
sbb
mov
rcl
jg
mov
dec
and
add
imul
add
cmps
fxch
ja
shl
fdiv
add
(bad)
test
or
xchg
inc
mov
sbb
pusha
pop
retf
hlt
repz
fnstenv
(bad)
and
add
aaa
pushf
mov
xchg
hlt
leave
add
push
push
mov
and
pop
cmc
pop
sub
inc
or
xchg
out
jge
jnp
add
ins
inc
sub
dec
fist
jle
or
add
pop
sub
pusha
push
imul
mov
add
test
les
rcr
xchg
xchg
repnz
add
lock
lds
mov
xchg
sub
les
pop
sbb
cmps
inc
mov
push
pusha
and
in
cmc
mov
xor
test
add
hlt
outs
push
adc
into
cdq
push
sub
and
push
mov
mov
push
es
or
push
adc
in
xchg
adc
jecxz
fild
mov
sub
cmp
ds
add
aad
push
pop
mov
add
sub
push
add
les
xchg
arpl
add
push
outs
fldcw
inc
jg
imul
repz
adc
jne
sbb
jmp
out
cmp
into
stos
add
sahf
call
pop
add
cli
xchg
jne
mov
jnp
ret
adc
fcom
add
sub
stc
test
or
and
(bad)
mov
add
mov
ret
pop
daa
push
cwde
xchg
push
mov
nop
test
mov
pop
jns
cs
ficom
mov
jbe
mov
mov
xchg
add
xor
push
ror
cmp
je
arpl
adc
jmp
add
mov
sbb
jmp
scas
imul
add
into
jle
das
inc
retf
adc
cld
mov
ret
mov
shl
xor
xchg
aaa
xchg
fnsave
push
test
sub
xchg
jae
mov
add
jns
test
add
int
pop
cmc
xchg
jb
not
cmps
js
jle
(bad)
mov
cli
add
add
je
(bad)
out
mov
retf
cld
cmp
and
test
add
dec
cmc
xor
lds
and
mov
add
sbb
pop
nop
mov
stos
inc
add
push
lea
cmp
add
mov
add
dec
ds
adc
addr16
(bad)
mov
add
xchg
cld
lods
add
mov
push
mov
push
aaa
push
add
pop
pop
dec
add
sub
mov
sar
stos
enter
int
addr16
pop
cmps
add
dec
add
xchg
add
call
imul
fild
sub
outs
mov
sbb
mov
inc
pop
clc
or
mov
jmp
daa
add
out
sbb
das
add
rdpmc
jmp
aaa
ror
(bad)
fdiv
daa
mov
scas
jbe
add
stos
jmp
mov
xor
push
xchg
add
jne
imul
mov
(bad)
in
push
movnti
or
dec
int
in
add
cld
or
pop
movs
adc
js
retf
(bad)
call
test
ret
sbb
push
jl
fsubr
xor
(bad)
push
ins
pop
mov
outs
add
jl
cmp
sahf
push
(bad)
or
jecxz
scas
loopne
hlt
mov
imul
xor
jne
xor
sub
mov
jp
push
popa
dec
les
cmps
sahf
rcl
test
inc
cli
sbb
inc
pop
(bad)
fmul
jns
and
sti
sysret
push
loopne
add
mov
jmp
jne
rcr
pop
rcr
popf
shr
add
(bad)
sahf
jecxz
xchg
and
jg
sar
pushf
push
cs
int3
sbb
sub
add
xor
ins
sub
add
(bad)
mov
mov
xchg
pop
ja
jmp
test
dec
mov
and
(bad)
pop
dec
pop
shr
add
push
add
clc
icebp
pushf
pop
nop
arpl
js
in
adc
add
mov
add
sub
out
lahf
sar
cmp
sbb
sbb
add
dec
cmps
std
xor
mov
xchg
sbb
and
fidiv
push
mov
(bad)
mov
adc
jno
sbb
mov
inc
into
int3
in
popf
add
scas
xor
and
dec
sbb
repnz
fcmove
xchg
pop
jecxz
mov
fwait
movs
out
out
sbb
push
mov
repnz
popf
add
daa
mov
stos
add
loopne
stc
jnp
hlt
mov
add
adc
cld
sub
pop
js
mov
push
out
adc
add
push
inc
add
xor
adc
aas
or
jae
iret
mov
outs
out
jl
add
out
add
mov
dec
dec
ja
add
lahf
or
push
sbb
aaa
sub
popf
jno
add
imul
sub
ins
int3
jmp
in
cli
mov
dec
out
ret
call
mov
fwait
xor
dec
inc
movs
mov
and
sub
imul
xor
cmp
enter
(bad)
in
stos
leave
and
and
and
mov
ja
dec
cmp
sbb
outs
wrmsr
fidivr
push
hlt
adc
daa
je
dec
fidivr
add
test
mov
and
dec
aaa
add
mov
add
in
sbb
push
xchg
inc
inc
xor
dec
cmp
(bad)
stc
mov
test
sbb
mov
repnz
pop
bswap
or
hlt
push
call
xor
sbb
adc
or
ror
cmp
nop
sub
js
mov
fidivr
jp
test
mov
add
out
sub
pop
test
xchg
jno
sbb
mov
rcr
cmp
hlt
push
add
test
xor
sbb
sahf
fisub
cwde
xchg
add
pop
sti
add
push
pop
add
jns
xor
push
inc
outs
cli
add
mov
mov
fsubrp
mov
add
xchg
repnz
push
jge
sub
xchg
add
sbb
movs
adc
mov
sbb
(bad)
xchg
retf
enter
pop
add
mov
mov
mov
pusha
shr
sub
sbb
add
push
or
or
adc
lahf
in
gs
cmp
cmc
out
daa
adc
and
cmps
and
cmp
int
pop
loop
or
cmp
mov
cmp
xor
lock
jl
mov
not
outs
or
iret
add
loope
cmps
xor
add
ror
cmps
jb
pop
mov
sbb
mov
lods
and
or
cld
add
and
mov
popf
xchg
cli
(bad)
sti
jo
aas
add
(bad)
inc
leave
push
stos
inc
adc
push
mov
ja
mov
sub
enter
push
xchg
sbb
add
cmp
mov
stos
popa
sahf
cmp
aas
lods
sub
push
dec
mov
ret
inc
push
dec
pop
retf
add
(bad)
aaa
pop
xchg
sub
cmp
movs
out
mov
call
sub
push
pop
test
mov
pop
inc
ins
icebp
fisubr
and
in
or
sbb
pop
int
add
jns
xchg
push
or
(bad)
into
nop
inc
mov
pop
adc
sub
ret
xor
in
clc
not
str
mov
inc
jb
xor
pop
jae
mov
lahf
pop
cmovb
dec
mov
(bad)
mov
xchg
out
sub
daa
jge
scas
mov
sbb
test
and
inc
cmp
push
dec
jbe
sbb
mov
iret
into
and
seta
ins
pusha
adc
retf
imul
mov
imul
bound
and
sti
sub
mov
jae
xchg
ud0
pop
test
outs
add
je
pusha
bound
xchg
rol
cwde
cmps
sbb
jns
xchg
and
jl
rcr
fiadd
sbb
cs
bound
sub
add
(bad)
hlt
jecxz
cmp
mov
stos
mov
sbb
cmp
mov
pusha
or
frstor
mov
(bad)
sbb
pop
inc
jge
rcl
lock
xor
cmp
shl
mov
mov
imul
or
mov
xor
add
mov
add
push
pop
retf
sahf
mov
add
sar
add
dec
(bad)
gs
arpl
dec
add
cmps
stc
jle
and
callw
loopne
pop
adc
jecxz
and
xchg
fist
add
repnz
call
cmps
popf
shl
(bad)
lock
pop
ret
mov
jns
adc
nop
(bad)
sbb
sbb
or
jne
pop
lods
cmp
fwait
inc
or
add
mov
scas
xor
xchg
xchg
sub
ss
idiv
imul
xchg
sub
push
cmp
inc
cmc
sar
imul
jmp
cmp
push
mov
pusha
cmp
and
and
jnp
popa
jb
std
clc
cmp
mov
push
cli
inc
sar
hlt
add
aas
xchg
sbb
repz
pusha
dec
movs
fst
dec
leave
mov
pushf
pop
inc
sub
mov
add
cmp
loopne
mov
xchg
push
add
cmp
push
sbb
mov
mov
push
add
scas
pop
sbb
dec
lock
jg
repnz
test
jle
unpckhps
jmp
dec
xor
cmps
xchg
mov
dec
cmp
add
jmp
out
cmovbe
retf
add
cs
fimul
inc
push
cli
xchg
add
dec
mov
sbb
push
retf
jb
add
fcmovne
xor
add
add
out
add
xchg
adc
mov
add
jp
adc
inc
add
call
aad
pop
push
jbe
pop
add
arpl
pushf
cmp
mov
lea
cmp
out
scas
inc
add
jo
push
add
shl
sbb
add
or
div
nop
pop
push
ror
fwait
loopne
sahf
add
sub
jle
add
test
shl
cmp
push
(bad)
push
leave
xor
scas
aaa
enter
xchg
mov
call
shr
adc
and
add
push
xchg
arpl
gs
scas
ret
cmps
mov
adc
rcl
xor
pop
jge
add
xchg
mov
lahf
add
xchg
adc
(bad)
shl
add
mov
loope
int3
push
add
jecxz
dec
or
fist
push
inc
pop
in
jle
lods
test
jbe
push
cmp
icebp
mov
cs
add
xchg
xchg
(bad)
dec
add
enter
dec
fiadd
pushw
outs
or
cmp
cmp
jp
add
xchg
cli
std
out
test
pop
ja
inc
inc
ret
cmp
push
dec
sbb
test
push
(bad)
xchg
cli
inc
adc
shr
je
out
add
ret
js
xchg
jmp
leave
add
sbb
mov
hlt
push
add
xchg
shl
data16
jle
int3
inc
sbb
fidiv
cli
add
or
xor
mov
mov
cmc
jns
add
sub
loopne
test
pushf
mov
inc
sub
mov
(bad)
push
lea
or
push
cmps
lds
xor
jle
push
in
add
sbb
inc
rol
sub
jmp
call
add
fcom
fcmovnbe
inc
add
xor
jae
add
cld
pushf
and
mov
(bad)
fs
leave
cmp
jl
inc
outs
lock
add
rcr
add
push
aaa
push
cmp
mov
add
add
or
add
repz
cmp
or
jns
and
(bad)
shl
cmp
stos
push
xchg
pop
mov
add
sbb
inc
cmp
mov
scas
call
push
stos
or
add
jecxz
inc
inc
push
ds
push
sub
xchg
icebp
add
and
loopne
int
hlt
ss
push
je
mov
icebp
pop
add
jecxz
arpl
adc
push
popa
dec
cmps
sub
sbb
push
add
xchg
inc
test
mov
lods
es
fisttp
add
adc
add
sub
rcl
sbb
or
inc
ds
jmp
call
aaa
in
add
sar
pop
dec
mov
out
add
daa
int3
repz
(bad)
add
nop
mov
retf
scas
dec
jp
js
call
cwde
mov
fwait
pop
ss
mov
loope
jmp
mov
test
push
neg
mov
inc
sub
(bad)
mov
ins
shl
xchg
jg
test
cwde
mov
in
ja
loopne
sbb
ss
test
leave
out
and
xor
in
or
jmp
pop
push
inc
sar
pop
jne
adc
test
lods
test
fmulp
add
ret
mov
in
pop
push
add
ror
push
inc
xchg
outs
add
and
jl
inc
mov
mov
add
mov
cmp
adc
fldcw
add
outs
je
cmps
pop
inc
pushf
add
popa
inc
inc
add
iret
adc
add
or
cmp
cmps
add
xor
mov
xchg
mov
sahf
std
pop
icebp
shl
add
mov
jnp
sti
lock
xor
ret
inc
add
xor
cmps
popa
std
xchg
repz
js
adc
add
into
aam
add
stos
dec
mov
sbb
add
cmc
mov
xor
sbb
rcl
test
or
and
imul
inc
pushf
aam
or
jmp
push
mov
and
aas
sub
push
out
test
repz
push
xor
jo
xchg
cmps
loope
ja
ror
push
pop
add
push
push
mov
xor
(bad)
cs
fild
ja
adc
add
jne
pusha
xor
jae
fild
stos
jecxz
mov
jecxz
data16
pop
ins
xchg
or
adc
popa
dec
cmp
leave
add
cmp
cmp
imul
ror
div
imul
inc
loope
cwde
cwde
add
add
stc
push
iret
jmp
retf
ss
mov
and
cli
adc
xor
add
mov
stc
cs
out
cmc
data16
mov
jmp
push
sub
call
add
jg
jmp
add
jmp
or
mov
mov
cmps
jmp
out
cmp
dec
push
test
scas
xchg
cmp
jg
mov
in
fmul
and
pop
mov
cmp
add
(bad)
xor
test
add
jecxz
in
jmp
sub
jge
pop
push
mov
add
fwait
pop
loop
js
leave
es
xor
daa
cld
xchg
mov
push
and
sub
bound
loope
jno
add
cmp
jl
addr16
dec
xor
mov
out
or
lahf
test
inc
outs
add
xor
out
mov
add
or
fstp
fidiv
xchg
fwait
out
mul
dec
scas
inc
jnp
add
repnz
call
jmp
add
por
sbb
nop
dec
adc
aaa
add
pop
push
xchg
rcr
jl
imul
and
push
or
cmp
inc
daa
sbb
jl
add
lods
shl
cs
notrack
add
cmp
cmp
sti
pusha
fs
out
xlat
add
lods
xchg
pop
fcom
jecxz
and
inc
and
add
adc
add
fdiv
loop
call
mov
mov
mov
call
jnp
pop
xor
sbb
and
out
clc
(bad)
nop
inc
inc
add
or
repz
jmp
xor
movs
mov
jne
call
add
push
jp
frstor
cmp
addr16
xchg
ret
and
idiv
jl
push
add
pop
push
test
xor
xchg
cmp
sbb
jmp
mov
add
ins
mov
xor
shl
add
jnp
stc
stos
mov
aaa
pop
std
mov
js
rol
add
cld
jno
and
fiadd
and
mov
jmp
lock
cmp
jo
or
fwait
ds
fmul
add
and
fisub
pop
adc
cmp
loopne
push
cmp
cmp
rcr
pop
or
push
imul
xlat
xchg
mov
es
xor
clc
inc
add
cld
scas
pop
add
popf
pop
call
add
or
fimul
inc
and
add
add
inc
movs
mov
add
xlat
push
mov
scas
ret
cmp
ret
mov
mov
add
push
sbb
inc
test
aas
push
add
adc
cmp
add
cwde
dec
cli
add
mov
mov
add
mov
push
xchg
pop
jnp
pusha
popf
mov
nop
sahf
es
aaa
jmp
xor
dec
xchg
sbb
xor
bound
movs
mov
sbb
out
inc
sbb
fisub
das
cmp
or
mov
cli
in
imul
inc
(bad)
hlt
pop
sahf
(bad)
xchg
add
in
dec
fnstsw
jge
aaa
xor
ja
and
fs
(bad)
(bad)
test
add
xchg
pop
les
pusha
loope
cmp
ja
mov
add
or
mov
movs
jnp
add
push
(bad)
out
nop
xchg
add
sbb
pushf
mov
add
xchg
mov
fdivr
push
(bad)
add
into
mov
pusha
lock
xchg
leave
xchg
fs
movs
lock
add
pop
mov
add
or
ja
in
lds
adc
imul
pop
add
jbe
inc
cmp
xor
out
dec
nop
rol
int
pop
call
cli
cld
cmp
push
or
jns
jno
pop
stos
icebp
jecxz
sbb
ins
loop
fmul
mov
outs
jmp
mov
add
dec
aas
cmps
int3
inc
mov
cmovg
lds
pusha
je
fistp
add
cli
out
adc
ins
add
xlat
mov
pop
jns
add
or
dec
mov
inc
mov
out
mov
and
es
add
cmp
jle
or
dec
sar
or
pop
add
mov
dec
cs
hlt
jmp
sbb
stos
adc
retf
aam
test
xor
lds
adc
leave
xchg
or
test
stos
lods
jo
add
dec
adc
mov
mov
xchg
test
sbb
mov
mov
sub
fld
pusha
inc
sub
xchg
sbb
adc
xlat
retf
xlat
arpl
jae
out
aaa
jmp
push
pop
pop
js
xchg
add
adc
mov
push
jmp
aaa
popf
test
(bad)
fbstp
cmp
sti
add
(bad)
mov
outs
out
stos
clc
ror
mov
outs
pop
push
and
mov
add
jno
pop
add
push
push
cmp
cmps
cs
jnp
add
scas
adc
add
out
xchg
add
imul
fiadd
js
or
in
add
xchg
mov
push
add
cmp
push
xchg
pop
pop
dec
inc
pop
sub
push
or
add
jne
xlat
adc
fiadd
aaa
mov
sub
pop
rol
ror
sub
and
or
lock
ins
mov
xchg
jecxz
push
add
add
movs
add
repnz
nop
jae
or
cmps
mov
cmp
and
(bad)
aas
repnz
mov
into
pop
mov
jge
and
fucom
retf
add
mov
cmc
repz
and
data16
mov
ins
push
push
add
(bad)
rcr
cmp
retf
push
add
movs
in
pushf
outs
add
leave
scas
and
stos
lds
add
ins
cmp
sbb
push
add
inc
adc
add
or
leave
add
and
std
adc
out
lea
and
push
add
mov
or
adc
loopne
not
sti
xchg
mov
add
leave
ins
fsub
loopne
pop
int
add
xor
pop
push
(bad)
cmps
cmp
add
mov
ja
add
fild
fld
in
pop
add
test
sbb
add
out
sbb
add
lods
icebp
or
adc
add
out
pushf
mov
add
and
arpl
and
add
or
cli
adc
lds
or
inc
mov
ins
push
aad
jae
out
dec
bnd
push
or
push
cmp
sbb
pop
push
add
repz
dec
mov
pop
movs
jne
add
mov
push
inc
add
retf
push
sahf
cmp
sub
push
mov
popa
movs
add
call
lods
in
sbb
sub
das
clc
sub
add
jecxz
xor
add
les
mov
call
pop
scas
cmp
(bad)
add
adc
add
push
ss
push
add
xchg
add
sahf
xchg
cmp
or
dec
shr
dec
fadd
mov
scas
loopne
add
gs
in
adc
rcl
add
retf
xchg
sar
dec
nop
dec
je
add
test
push
test
test
jns
into
add
add
iret
add
xor
jmp
jge
test
rcl
repz
sub
cmps
scas
enter
jmp
icebp
jbe
rol
add
mov
mov
mov
call
add
push
inc
add
(bad)
fwait
ds
aas
inc
pop
xchg
lods
push
adc
cmp
mov
mov
clc
add
js
xor
add
mov
test
add
inc
mov
push
pop
es
test
pusha
in
outs
icebp
(bad)
push
add
std
imul
add
(bad)
push
in
cmc
lock
and
rol
dec
xchg
add
inc
adc
retf
sbb
jmp
mov
adc
xlat
gs
add
sub
nop
fiadd
add
mov
paddd
add
and
scas
jo
mov
cli
lea
add
push
mov
scas
push
add
repnz
pop
add
outs
push
nop
add
adc
mov
add
jg
push
call
(bad)
aaa
lods
test
sbb
(bad)
(bad)
adc
dec
jp
add
cmp
add
inc
neg
scas
xchg
test
cmp
mov
(bad)
and
sbb
inc
add
mov
cmps
(bad)
shr
add
retf
push
fwait
js
repz
ins
cmp
push
retf
call
add
cld
adc
add
push
pop
(bad)
and
cmp
add
mov
add
mov
jno
into
add
push
inc
dec
push
xchg
(bad)
xor
add
fld
ret
sbb
mov
dec
inc
test
add
push
dec
loope
rol
add
test
sbb
jecxz
fs
mov
lock
popa
sar
add
js
(bad)
clc
call
or
add
leave
mov
xchg
popf
mov
cld
dec
sar
fidiv
inc
cs
into
rcr
add
outs
xchg
mov
sub
in
loop
test
fsubr
pop
push
aad
fiadd
xchg
jmpw
mov
or
jp
xor
pop
rol
ret
outs
test
pop
push
out
loopne
mov
push
lods
jmp
jecxz
imul
retf
xchg
mov
(bad)
dec
and
cmps
xor
adc
into
in
mov
fisttp
mov
add
inc
outs
and
mov
int3
js
add
test
data16
cmps
outs
icebp
push
scas
mov
xor
test
cs
jbe
xor
sub
sbb
dec
imul
sbb
icebp
bnd
or
call
mov
pusha
inc
push
out
or
test
jb
mov
das
imul
cmp
cmp
sti
jo
xor
sub
add
imul
mov
add
mov
sub
adc
test
pop
enter
add
pusha
inc
jne
jae
test
fsub
add
stos
aam
sub
cmp
mov
scas
jge
inc
jo
imul
cmp
pop
sbb
push
mov
fild
ret
mov
cmp
pop
call
fwait
sbb
inc
push
clc
inc
xchg
pop
ret
clc
xchg
or
inc
and
icebp
add
lock
add
nop
fisub
add
or
dec
jbe
add
add
push
push
adc
xor
outs
popa
js
out
mov
rcl
mov
pop
add
mov
aad
fidivr
shl
pushf
pusha
shr
mov
cmp
push
xchg
add
nop
mov
add
jo
lods
and
add
push
addr16
add
iret
int3
dec
popf
leave
imul
or
cwde
call
dec
out
sbb
add
test
mov
pop
mov
loopne
or
jo
(bad)
sub
xchg
inc
inc
shl
pop
mov
add
out
cmp
sbb
pop
add
mov
jmp
in
inc
ins
xchg
shl
shr
pop
add
dec
test
add
jne
pop
push
enter
movs
adc
pop
push
fcmovnu
es
mov
add
mov
inc
mov
add
(bad)
cmp
add
je
cmps
pop
or
mov
dec
cs
das
add
enter
imul
pop
push
inc
jnp
mov
add
ror
xchg
nop
pop
inc
pop
into
lahf
xchg
mov
jecxz
bnd
shr
inc
and
add
int
rcl
xor
jge
arpl
add
push
or
jmp
movs
push
push
out
bsr
pop
push
test
sahf
fadd
inc
fidiv
not
pushf
sbb
and
inc
jp
lds
push
add
sbb
sub
fld
data16
mov
xor
cmp
push
and
inc
push
add
jecxz
(bad)
fadd
aaa
out
rol
or
loop
mov
add
add
sbb
push
loopne
popf
xor
cld
mov
push
pushf
jp
add
ret
dec
sahf
cmp
fcom
cmps
(bad)
test
cli
call
scas
push
shl
push
dec
in
jmp
bt
push
dec
mov
add
imul
cmps
aas
xchg
in
jns
xor
jb
mov
adc
pop
inc
pop
rcl
popa
add
dec
loope
pop
repnz
dec
popf
mov
pop
xchg
jb
dec
ror
out
add
add
fisubr
add
cli
pop
icebp
es
test
pop
add
xor
outs
jo
(bad)
inc
stos
aam
push
and
or
mov
mov
mov
aaa
add
cmps
pop
out
sub
add
es
inc
push
or
jl
stos
sbb
push
test
add
or
dec
(bad)
scas
adc
int
aam
mov
movs
add
inc
mov
mov
xor
inc
nop
iret
add
push
xor
clc
and
xor
lea
shl
pop
jae
add
jno
fistp
daa
cmp
cmp
pop
nop
adc
rcl
xor
aad
add
mov
shr
add
das
movs
rcr
std
aad
cli
add
shl
(bad)
jge
pop
or
mov
sbb
lea
add
fadd
mov
sub
inc
je
cld
add
shr
or
push
add
sub
leave
fs
add
cmp
adc
push
add
mov
adc
fmul
pop
cmp
add
adc
rcl
cmp
cli
push
pop
add
std
stos
pusha
adc
mov
aam
mov
lahf
pusha
add
in
mov
in
mov
clc
adc
and
nop
arpl
cld
add
dec
cli
popf
cld
and
or
cmp
jge
in
mov
ja
jmp
popa
jmp
push
and
add
jbe
jb
mov
push
data16
hlt
jo
mov
lahf
jge
ja
and
je
(bad)
bndstx
nop
adc
or
add
in
mov
add
fstp
rcr
mov
(bad)
rcl
lods
jge
call
pusha
jns
mov
add
push
push
pop
push
sahf
cli
adc
std
ret
stos
push
dec
call
jle
cs
shr
xor
xchg
jbe
outs
add
xchg
push
xlat
bound
ss
inc
mov
mov
sbb
(bad)
sar
imul
repz
add
add
arpl
cwde
xchg
xor
jns
push
mov
push
inc
adc
das
jecxz
cmp
sbb
(bad)
mov
imul
inc
push
mul
xor
add
call
add
icebp
shr
add
std
in
out
popa
mov
mov
jg
dec
push
mov
fild
(bad)
mov
jb
add
push
jl
mov
mov
jae
or
out
pop
dec
mov
adc
mov
sbb
jecxz
push
push
dec
je
mov
push
mov
movs
mov
cdq
add
adc
add
and
out
adc
rol
inc
xor
fcom
xchg
sbb
push
add
dec
mov
xor
lahf
cs
xchg
sbb
sub
add
pushf
push
out
mov
inc
pop
adc
add
push
out
lea
sub
dec
aaa
fincstp
ins
xor
outs
loop
jge
cwde
mov
push
jno
mov
int
dec
inc
mov
inc
cmp
xor
sub
or
lods
cmp
mov
mov
mov
stos
xchg
add
das
in
cdq
aam
mov
arpl
daa
xchg
sub
mov
add
stos
mov
add
xor
sbb
ror
jae
pushf
(bad)
lods
add
xchg
test
clc
cmp
imul
sub
fnsave
fs
std
xor
push
mov
in
ror
cld
inc
pop
mov
std
add
add
mov
adc
mov
in
cmp
(bad)
cmp
add
fimul
sub
dec
dec
xor
sbb
movntq
ret
mov
pop
xor
fnstenv
sbb
icebp
jae
rcr
enter
cmp
leave
frstor
add
jno
das
add
bound
inc
mov
add
fcmovnb
and
test
dec
add
xchg
sub
add
js
loopne
push
add
sti
or
aad
scas
and
xlat
jl
add
mov
add
outs
ja
mov
ss
clc
call
jb
add
sub
pop
mov
add
dec
popf
push
dec
add
rol
xchg
mov
add
rcl
xor
movs
cmp
add
pushf
in
jmp
jle
push
add
cdq
adc
je
add
mov
or
mov
and
cmp
fiadd
lds
jge
add
imul
add
mov
shl
aas
xchg
push
or
adc
xchg
lods
outs
cmp
outs
and
stc
sbb
add
jbe
and
mov
imul
test
inc
clc
add
dec
(bad)
pop
pop
int
std
fnstcw
push
and
cmps
mov
stos
gs
add
fwait
mov
(bad)
push
lahf
inc
xor
jp
cmp
xchg
dec
add
mov
or
into
in
enter
cmp
add
cmp
add
lods
ins
cmps
dec
rcl
mov
add
int3
inc
jp
jnp
arpl
or
add
or
inc
and
(bad)
xor
lds
(bad)
cmp
pop
ret
mov
sbb
pusha
lods
pop
nop
mov
push
ds
sub
push
sbb
ret
shl
sub
add
fcom
inc
dec
retf
js
inc
scas
(bad)
daa
dec
cmp
pop
loope
mov
add
mov
sub
fs
mov
mov
mov
shr
enter
pusha
cmp
sbb
adc
mov
and
inc
stos
dec
add
icebp
lock
add
int
pop
jge
fimul
add
hlt
aad
cwde
popf
sar
mov
sub
fisubr
fstp
sbb
xor
mov
push
inc
es
ret
(bad)
xchg
test
add
xchg
push
ja
hlt
add
adc
jbe
repnz
jecxz
gs
mov
cli
inc
add
out
jg
xchg
dec
sbb
movs
scas
cmp
outs
add
icebp
add
add
fs
dec
or
push
sete
pusha
scas
pop
aas
jne
add
enter
add
add
xchg
dec
push
push
sub
(bad)
and
fimul
jp
test
add
aad
adc
cmps
lods
add
jne
movs
add
or
mov
add
pop
in
sti
jecxz
in
out
sub
cmp
sbb
mov
aaa
push
enter
add
sbb
xchg
sub
cmp
ret
lahf
inc
sar
fwait
add
outs
outs
retf
mov
mov
xchg
and
das
mov
dec
push
add
inc
daa
out
retf
add
fist
dec
add
cmp
pop
lock
pop
sahf
sar
ret
sbb
push
mov
shr
pop
and
push
fcomp
rol
stos
pop
lahf
retf
into
hlt
jae
fs
(bad)
in
(bad)
mov
es
jnp
add
pusha
push
cmps
xchg
hlt
add
xchg
into
push
xor
fild
clc
pause
repnz
push
stos
sahf
lahf
std
rol
imul
inc
addr16
sub
int
repnz
jo
sahf
(bad)
out
cmp
add
fmul
in
jae
cs
jo
iret
cld
mov
and
jmp
xchg
cs
dec
js
movs
sub
sub
adc
popa
fwait
xchg
divps
test
ss
adc
add
push
scas
stos
dec
leave
in
push
outs
lahf
jno
arpl
push
cmp
mov
and
les
adc
scas
mov
lods
in
mov
aaa
out
add
imul
icebp
(bad)
test
add
fisttp
mov
xchg
jnp
add
mov
popf
mov
add
in
and
jne
add
jae
xor
mov
add
adc
cmp
popa
daa
add
xor
sub
push
(bad)
leave
imul
xchg
sbb
jne
loopne
rol
(bad)
mov
jns
out
imul
push
dec
ret
mov
test
stc
fmul
mov
jno
das
xor
outs
pop
into
sub
sub
jae
popf
das
xor
sbb
data16
sbb
icebp
lods
add
adc
jo
add
outs
popf
fldenv
dec
inc
push
or
icebp
outs
fdivr
inc
sbb
lock
mov
sub
js
fsubr
jbe
push
jo
shl
cwde
das
push
adc
(bad)
add
sahf
jg
or
cld
lahf
cli
mov
outs
ins
std
mov
cmp
jo
loop
js
pop
cmps
(bad)
sub
aas
push
adc
add
test
mov
xor
shr
push
fld
jle
mov
jl
or
sub
xor
add
sub
das
xchg
jmp
add
xor
(bad)
pextrw
ds
inc
pop
jg
iret
je
add
ins
mov
inc
dec
mov
mov
ss
adc
dec
cmp
push
mov
cmps
enter
add
imul
out
popa
fxch
mov
dec
es
out
sbb
mov
in
add
test
xchg
add
or
or
pusha
outs
push
and
div
adc
lock
push
dec
jns
outs
xchg
add
pop
mov
mov
daa
push
sub
add
add
inc
add
retf
mov
sbb
sub
mov
call
push
das
mov
cmp
sti
dec
ins
leave
mov
dec
mov
in
popf
add
mov
lods
push
retf
sub
dec
dec
inc
popf
outs
(bad)
dec
test
jno
adc
es
add
cmp
add
mov
pop
add
jno
bound
cmp
in
push
push
pop
clc
fbstp
jb
call
inc
int3
pop
adc
sbb
cmp
sub
and
and
jo
add
pop
shr
sahf
retf
shl
jno
or
xchg
fdivr
add
pop
sbb
ins
add
xchg
jns
fsub
xlat
or
test
arpl
add
pop
shl
xchg
ror
inc
xor
mov
or
sbb
cwde
push
addr16
call
mov
add
jb
ds
xor
push
into
inc
mov
dec
shl
ficomp
push
dec
add
xchg
dec
cld
sub
cli
adc
lahf
pop
into
inc
sbb
out
sub
xor
cmp
aaa
popf
lds
aam
mov
add
xchg
adc
mov
mov
add
pop
mov
jl
add
arpl
ror
(bad)
mov
mov
ror
inc
es
test
cmp
nop
daa
imul
xor
bound
pop
sub
pop
movs
fidivr
aam
jne
jb
push
add
mov
arpl
ret
mov
div
aam
jp
inc
or
test
or
in
loop
es
xchg
add
jmp
dec
ds
add
dec
mov
jb
fcomp
sub
rcr
fisttp
xor
xor
mov
mov
sar
sti
sbb
je
sbb
sub
xor
scas
add
bound
mov
add
sub
out
jg
add
inc
add
stc
mov
rcr
inc
mov
adc
movs
add
clc
das
and
add
sub
int
icebp
mov
lds
xor
pushf
addr16
mov
jl
add
jne
add
hlt
dec
sbb
mov
aaa
adc
popa
(bad)
hlt
add
lea
mov
test
fsubr
xchg
xor
xchg
ins
mov
add
pop
dec
adc
or
mov
fild
ror
hlt
add
stc
sbb
jae
add
lods
push
stos
ins
data16
ja
add
push
ins
adc
mov
cmc
ret
and
or
rol
sbb
or
add
arpl
mov
loop
dec
jae
push
xor
fcmove
jne
cmp
add
push
mov
add
sti
ins
adc
add
hlt
inc
mov
add
call
rcr
cmp
repnz
xor
push
cmp
mov
xor
mov
add
shl
or
pop
pop
dec
add
jbe
adc
scas
add
sbb
sub
cmp
sub
push
inc
add
xchg
add
ins
xlat
sbb
ja
call
dec
nop
xchg
jo
aas
jl
pop
push
xchg
fst
pusha
mov
sbb
mov
rcl
pop
xchg
mov
add
add
add
fwait
stos
das
call
movs
pop
int
mov
cmp
xchg
das
ror
out
mov
mov
mov
nop
loope
cmp
cmps
push
(bad)
add
idiv
pop
retf
icebp
sub
cmp
mov
imul
xchg
add
stos
dec
dec
add
jl
sti
mov
dec
inc
shl
retf
iret
inc
or
sbb
jle
int3
xor
rol
daa
inc
cwde
jne
out
lock
(bad)
push
xchg
mov
add
ds
pop
(bad)
xor
fidiv
add
mov
dec
add
push
not
mov
pop
push
add
and
mov
outs
xor
pop
pop
adc
enter
push
xor
mov
sbb
scas
in
pusha
icebp
packsswb
sbb
push
adc
jg
jecxz
ins
shr
repz
cmp
jp
cs
add
leave
fs
cld
in
rcr
jmp
dec
int3
add
mov
lock
sbb
stc
push
add
ss
add
jle
xchg
icebp
scas
lldt
rol
mov
jnp
pop
and
or
push
sub
cmp
fiadd
call
dec
cmp
add
mov
icebp
adc
xchg
jle
mov
ss
add
cmp
and
cmp
cld
call
pop
(bad)
dec
dec
into
mov
xor
adc
rcl
sub
sub
add
inc
pop
shr
loopne
cs
add
sub
xor
shl
add
test
jb
mov
retf
or
in
(bad)
jmp
aas
in
jp
mov
and
adc
sub
sub
sub
ja
fwait
je
add
fcomp
inc
add
or
adc
mov
loop
pop
out
adc
imul
and
jecxz
pop
outs
sti
sahf
pusha
pop
rol
or
lods
or
(bad)
add
fcom
aam
mov
outs
clc
lahf
inc
cmp
push
jne
xchg
cmps
jae
mov
adc
loopne
outs
mov
out
pop
ins
inc
push
adc
add
sbb
hlt
mov
jmp
in
call
pop
in
jp
or
leave
add
sbb
jnp
neg
sub
and
xor
je
jecxz
xchg
aaa
xchg
push
test
clc
sub
lods
dec
pop
loopne
daa
loope
add
aam
aad
rcr
inc
and
shl
add
lea
push
cli
rol
push
(bad)
and
dec
pop
rol
out
cmps
jb
or
push
add
xor
sbb
sar
fs
or
inc
fist
ja
add
neg
stos
adc
pusha
leave
add
cdq
add
adc
xor
add
fstp
add
mov
call
pmulhuw
or
clc
outs
add
adc
pop
fisub
pop
xlat
in
push
pop
enter
fld
push
jp
mov
movs
sbb
ja
or
add
fimul
sbb
push
mov
mov
dec
xchg
jns
loopne
adc
sub
cmp
add
add
clc
xor
add
fld
sbb
push
and
jns
enter
outs
test
in
retf
adc
add
sub
mov
repnz
xlat
push
dec
sub
or
dec
mov
pop
sbb
loop
pop
fcmovne
sbb
hlt
add
pop
cdq
outs
push
rcl
adc
out
or
add
jl
arpl
and
add
push
cmp
(bad)
aam
mov
mov
sbb
add
pop
pop
jae
cmp
aas
test
pop
test
mov
push
loopne
add
das
cmps
int3
jns
fdiv
or
add
in
shl
xlat
add
mov
adc
pop
jnp
add
(bad)
cmp
adc
push
rcl
and
xchg
dec
rsqrtps
and
jo
cmp
cmp
add
adc
and
push
fisubr
add
xor
cld
int3
and
or
mov
adc
add
xchg
and
inc
push
inc
mov
mov
mov
adc
and
xchg
adc
(bad)
(bad)
and
cmp
int
sbb
or
nop
movs
out
(bad)
pop
loopne
outs
arpl
jb
out
push
sbb
add
cdq
or
lock
imul
inc
fldenv
or
xor
cld
arpl
jns
inc
adc
gs
add
push
dec
int3
dec
xor
xor
fs
cmp
es
cmc
add
outs
dec
gs
int
inc
sbb
jbe
je
jno
out
mov
ss
(bad)
fst
mov
inc
imul
data16
pusha
cmc
pushf
pop
repnz
je
ins
outs
dec
pop
fdiv
iret
sbb
popa
addr16
jle
jp
mov
mov
mov
add
fs
outs
jne
jl
cmps
daa
push
inc
movs
jo
jne
mov
add
addr16
fxch
es
loope
ror
sbb
push
add
dec
push
cdq
inc
dec
jo
mov
and
stc
push
inc
movs
push
fxam
push
jbe
jo
lods
pop
lea
icebp
and
enter
add
jge
jo
push
push
add
